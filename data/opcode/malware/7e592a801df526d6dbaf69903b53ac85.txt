jbe
nop
jbe
aaa
xor
pop
mov
jl
xchg
jmp
cmp
rcl
outs
imul
push
and
adc
push
dec
leave
jns
cmp
data16
mov
cmp
xchg
pop
mov
sti
xchg
test
lahf
dec
mov
fsub
ret
out
jl
sti
mov
mov
or
test
mov
cmps
sbb
test
outs
add
push
dec
add
sahf
inc
inc
popa
jle
and
jp
jmp
add
pop
add
daa
loope
daa
mov
cmps
and
or
jne
or
rcl
mov
aaa
in
popf
sub
inc
xchg
pop
in
dec
xor
or
jmp
stos
ret
ficomp
das
sub
sbb
mov
sub
jmp
mov
retf
push
push
inc
mov
aas
sub
test
retf
adc
js
(bad)
pusha
inc
iret
cmp
xchg
mov
aas
std
mov
jecxz
shl
mov
xchg
(bad)
shl
add
jecxz
xchg
xchg
xor
add
mov
sub
lock
sbb
ds
das
push
dec
xor
jo
ja
jnp
mov
xchg
xchg
xchg
addr16
fcomp
loope
ins
mov
xor
out
(bad)
fwait
shl
out
dec
pushf
ficom
(bad)
jbe
inc
xchg
mov
jne
fdivr
je
xor
and
inc
push
int
pop
(bad)
push
lods
fld
inc
loopne
or
mov
xchg
xchg
loopne
ss
ins
inc
cmp
xchg
addr16
xchg
sub
stos
lock
repnz
nop
adc
fmul
xor
scas
sbb
inc
fs
jecxz
int
aas
imul
outs
arpl
jne
mov
or
daa
jg
dec
mov
lods
dec
mov
cmp
mov
pop
dec
and
add
cmps
mov
xor
xchg
xchg
jecxz
int
push
into
xchg
jmp
into
test
call
push
xchg
scas
cs
dec
xchg
jle
mov
jle
inc
jmp
mov
add
sbb
cmp
mov
leave
inc
cmps
inc
idiv
jae
retf
lea
sbb
inc
inc
cwde
push
inc
jns
rcl
jne
dec
dec
cld
aad
popf
xchg
aas
popa
outs
push
cmp
movs
(bad)
rcl
sub
int3
cmp
fldcw
nop
sbb
cwde
push
or
push
fs
fistp
adc
fnstcw
add
dec
into
sub
fs
mov
sbb
xchg
mov
pop
sahf
test
nop
cmp
hlt
jnp
add
jp
push
dec
inc
or
mov
ja
std
jecxz
xchg
xchg
mov
inc
pop
adc
cmp
lock
das
fst
jno
mov
(bad)
xchg
lea
cmc
psllw
cdq
sbb
out
sub
xchg
mov
xchg
cmps
xchg
cmp
mov
call
push
fild
pop
xchg
push
mov
mov
mov
jne
inc
in
clc
xchg
add
xor
push
out
sbb
retf
fwait
pusha
or
push
push
shr
ficom
sbb
(bad)
add
dec
mov
xchg
hlt
dec
add
ins
add
sub
push
dec
out
add
in
dec
nop
das
setp
into
into
push
pushf
lods
xor
int3
xchg
fdivrp
jp
(bad)
cs
fcom
inc
daa
loopne
dec
fwait
shl
imul
adc
pop
retf
xchg
pop
ins
jb
mov
int3
push
cmp
ficomp
mov
push
stos
call
jl
cmp
lds
mov
jae
xlat
add
lahf
cdq
outs
aaa
outs
ins
mov
cmp
pop
out
push
outs
stc
mov
add
inc
jno
inc
retf
lahf
sbb
mov
out
jne
(bad)
icebp
jmp
outs
mov
iret
leave
xchg
emms
lock
mov
mov
lds
mov
dec
xor
mov
sbb
arpl
cs
lds
fild
pop
in
mov
mov
mov
xor
in
jge
test
mov
loopne
(bad)
aad
fiadd
jmp
push
loop
dec
and
pop
jmp
push
nop
mov
imul
mov
and
setg
cdq
and
jnp
push
or
or
retf
adc
xor
inc
and
bound
aas
test
push
cwde
ficom
or
pop
cdq
scas
stc
fcomp
pop
neg
xchg
inc
out
push
lahf
mov
jg
jge
push
outs
mov
out
stc
inc
cmp
adc
and
call
mov
add
rcl
push
jmp
cmp
out
mov
(bad)
retf
sub
inc
les
inc
dec
ss
add
call
js
and
mov
or
(bad)
repz
or
dec
test
sbb
clc
(bad)
mov
xchg
leave
(bad)
jne
and
inc
jne
pop
jne
loope
cmp
aam
xor
shl
aad
jp
retf
mov
cwde
aam
sub
mov
mov
dec
call
inc
mov
or
sbb
xor
add
or
retf
inc
neg
xchg
out
rol
pusha
sbb
cmp
stos
mov
lahf
jmp
pop
xchg
dec
lods
icebp
test
rol
dec
test
jo
push
xchg
inc
inc
or
jmp
in
ins
test
xor
jecxz
xor
or
push
arpl
sub
mov
mov
shl
neg
lahf
addr16
mov
xchg
jmp
adc
or
(bad)
sbb
mov
adc
xchg
mov
not
xchg
(bad)
repz
lds
fmul
mov
hlt
stc
fimul
shl
fdivp
mov
shl
mov
push
mov
shld
clc
scas
and
pop
push
int3
push
cli
inc
xor
imul
je
dec
pop
stc
pop
out
test
inc
push
sbb
pop
adc
sbb
mov
adc
dec
and
cld
add
inc
inc
jmp
add
pop
and
mov
iret
(bad)
lods
into
and
xchg
and
pop
xor
mov
dec
pop
mov
xor
xor
fstp
xchg
and
push
jl
ins
inc
js
cdq
push
pop
adc
in
adc
pop
jbe
daa
and
nop
stos
sub
add
pop
pop
mov
jle
mov
cmp
js
add
inc
mov
lea
jnp
sar
xor
loopne
push
call
popf
inc
fiadd
je
test
xchg
fwait
dec
rol
cs
cld
daa
int3
retf
sbb
xor
jnp
push
nop
sbb
popf
push
xor
rol
xor
push
xlat
xchg
pop
dec
ins
sub
in
bound
movs
mov
(bad)
mov
int
mov
xor
push
mov
mov
cmc
mov
sub
sub
dec
xchg
mov
call
or
lea
pop
(bad)
sahf
push
jg
ins
xlat
jmp
mov
push
jae
retf
ins
sbb
sbb
inc
sbb
xchg
jo
cdq
ret
mov
mov
inc
aaa
cmps
adc
sbb
pusha
adc
sbb
lahf
xor
cmps
repz
dec
inc
sbb
int
fiadd
(bad)
sbb
(bad)
call
test
pop
(bad)
sbb
jecxz
sbb
inc
xor
(bad)
mov
fidiv
xchg
sbb
jbe
(bad)
pushf
sbb
in
push
movs
idiv
jecxz
popf
in
xchg
fstp
outs
cmps
stos
mov
movs
lods
pop
fistp
rcr
cwde
add
cmc
xchg
and
push
jl
adc
dec
mov
xor
mov
inc
sub
gs
xchg
xchg
push
mov
sbb
movs
push
imul
(bad)
in
inc
fcompp
mov
das
test
ret
pusha
call
push
sbb
popa
scas
mul
or
push
lds
stos
aad
jne
pushf
xchg
or
in
lahf
popa
movs
jp
pushf
push
add
lds
jb
sub
retf
cs
add
ds
dec
push
push
jnp
dec
sub
jne
mov
out
fld
xor
add
fcmovb
jmp
or
(bad)
mov
adc
addr16
loopne
mov
and
sub
sti
push
adc
cmp
fcomp
sbb
jae
lds
in
xchg
xor
jne
jge
out
sbb
shr
inc
or
push
test
out
arpl
push
je
xchg
adc
cmps
dec
dec
(bad)
in
(bad)
push
dec
dec
sbb
aas
add
cmp
mov
mov
(bad)
cmp
pop
ret
movs
out
inc
jl
push
or
xchg
cmp
push
outs
iret
aam
add
pop
xchg
mov
adc
xor
test
das
add
jl
push
mov
fcmove
or
loop
push
mov
pop
stc
mov
jge
icebp
inc
xor
cmps
mov
sbb
xor
xchg
sub
sbb
jecxz
cmp
fisttp
enter
jo
aas
jae
movs
iret
dec
std
jne
sub
mov
xor
iret
sub
adc
stos
test
ret
popf
mov
xchg
loope
pop
xchg
int
dec
mov
push
pop
inc
mov
cmp
lods
(bad)
and
cwde
frstor
iret
mov
outs
jmp
aaa
xchg
fisttp
es
fwait
ret
xor
add
or
stos
loopne
mov
cmps
sub
mov
dec
bswap
jmp
jae
aaa
push
(bad)
outs
lock
push
imul
xchg
push
aaa
push
pop
jle
div
sub
dec
loopne
fidivr
push
sub
add
ret
push
enter
mov
add
mov
xchg
fisubr
sub
push
ja
dec
sbb
push
dec
sbb
test
jmp
shl
jnp
mov
inc
adc
fidivr
rol
inc
data16
in
mov
jae
(bad)
not
jne
adc
mov
std
jae
mov
popf
mov
xor
cmp
outs
sub
stc
in
lock
into
cs
ret
and
xchg
jle
lea
mov
mov
dec
pmaddwd
pop
not
or
add
dec
xlat
sbb
sub
mov
pop
retf
mov
les
pusha
aam
cli
scas
jge
add
dec
imul
xor
mov
xor
inc
push
adc
dec
out
push
mov
xor
icebp
inc
jmp
dec
movs
repz
xchg
pushf
mov
ss
pop
jmp
cmp
or
or
xor
ror
jmp
fldenv
inc
and
mov
mov
xchg
add
dec
test
rol
push
xor
adc
mov
cdq
mov
or
cmp
push
add
sbb
fptan
and
imul
test
mov
out
shl
cwde
rcl
pop
inc
inc
(bad)
call
loop
test
fisubr
cmp
int
jecxz
pop
cmps
cwde
xchg
cwde
not
ja
call
cmp
div
fbstp
sub
ret
cld
movs
or
inc
mov
sub
icebp
inc
inc
push
pop
mov
gs
mov
mov
jecxz
fistp
or
test
jl
imul
adc
jp
nop
cmp
xchg
cli
push
mov
jge
loope
aam
call
mov
pop
loop
fwait
add
fwait
dec
xor
dec
xlat
xor
aas
sar
out
mov
jmp
push
add
movs
sbb
pop
mov
jbe
sar
jecxz
(bad)
stos
dec
dec
mov
or
sbb
je
mov
shl
loope
cmc
push
aaa
rcl
or
ins
test
addr16
cmps
mov
nop
jne
mov
ret
dec
iret
loope
push
in
retf
adc
jbe
out
test
test
mul
loope
aad
dec
jmp
in
jno
push
pop
xchg
popf
push
sbb
jmp
mov
or
mov
inc
hlt
jae
ins
push
push
test
pushf
xchg
sbb
outs
loop
cdq
int
lods
sub
add
xchg
pusha
js
inc
lods
nop
call
mov
cwde
hlt
das
sub
(bad)
and
std
mov
repnz
dec
unpcklps
fdiv
bound
or
fnstsw
inc
fcomp
pop
push
sub
lea
mov
or
cmc
retf
bnd
cmps
add
and
scas
lahf
movs
inc
(bad)
sub
or
dec
lods
lahf
(bad)
retf
sbb
jmp
add
dec
fiadd
cmp
retf
je
pop
xor
iret
dec
mov
sub
add
loopne
idiv
popa
adc
add
adc
cli
xor
jnp
scas
or
mov
out
push
adc
ret
pop
pushf
jbe
fcmovne
inc
inc
test
hlt
or
add
mov
jb
or
dec
(bad)
cmp
out
(bad)
aam
(bad)
dec
lahf
cmps
iret
mov
sbb
mov
addr16
dec
sbb
xchg
mov
jecxz
js
loopne
retf
mov
(bad)
loop
mov
mov
pusha
inc
xchg
lods
add
mov
repz
push
and
push
inc
ja
das
(bad)
sub
push
fbld
jmp
out
or
inc
push
pop
lds
fsub
mov
rol
inc
ins
loop
or
mov
movs
repnz
inc
or
std
mov
pop
adc
stos
ins
mov
in
lock
or
add
cmp
ins
outs
popf
sahf
aad
sub
cmp
push
xor
inc
inc
call
push
sub
stos
mov
mov
fisub
int3
ret
push
ds
dec
dec
jo
cmp
retf
xor
out
cmc
jnp
cmp
ds
ins
rol
sbb
jp
outs
(bad)
test
mov
add
imul
ja
inc
jle
icebp
shr
mov
int
push
push
popa
ins
cdq
pop
sbb
push
mov
out
repz
ins
out
and
or
sub
scas
nop
fcmovne
lea
or
neg
mov
and
enter
mov
js
adc
add
fmulp
or
stc
cld
sub
dec
sbb
(bad)
in
retf
dec
movs
jae
mov
sahf
loope
pop
retf
mov
scas
ds
and
repnz
adc
xor
icebp
sbb
retf
dec
sub
pushf
and
mov
sub
xchg
add
das
mov
retf
ins
out
mov
jp
mov
xchg
jmp
out
into
mov
in
in
mov
fst
iret
ins
and
bound
dec
loop
adc
ss
fs
inc
data16
add
movs
mov
mov
scas
int3
dec
adc
pop
or
inc
movs
push
into
enter
cmp
pop
fwait
test
(bad)
retf
repnz
mov
push
hlt
jae
and
jo
out
xor
jl
inc
js
clc
in
cmp
imul
dec
inc
ins
adc
call
and
aaa
add
cmp
mov
mov
mov
mov
xchg
test
lods
push
fild
cdq
cwde
pop
sub
and
das
rcr
clc
cdq
inc
loopne
outs
leave
adc
std
test
ret
clc
jl
ficom
xchg
rcr
mov
daa
ficom
es
jb
ins
out
test
out
gs
fcom
fist
jno
aas
rcr
rcl
mov
and
mov
push
mov
call
div
in
in
dec
jmp
mov
mov
bound
adc
mov
enter
jg
inc
push
cs
xor
sbb
pushf
lahf
lea
adc
pop
aad
xlat
int
out
in
mov
outs
rcr
aad
cmp
dec
sub
cmp
int
cmps
js
ret
retf
mov
pop
aaa
test
push
rcl
add
(bad)
rcl
dec
clc
sub
xchg
imul
test
scas
das
daa
mov
sub
call
cmps
sbb
jns
push
xor
jmp
inc
jmp
sub
adc
cmp
popa
xchg
in
jae
fisttp
fdiv
pop
out
data16
mov
or
dec
jae
(bad)
ja
jb
xor
sbb
and
sub
in
and
push
jns
sub
inc
xchg
out
mov
scas
pop
mov
ret
xchg
repnz
adc
and
aaa
cwde
pop
jp
inc
das
jecxz
shl
xor
or
inc
or
dec
lds
hlt
push
daa
xor
shl
mov
js
push
xchg
iret
cdq
mov
mov
mov
mov
mov
xor
pop
push
xchg
clc
rcr
adc
mov
push
sub
psubw
xor
in
out
sar
mov
sbb
in
out
call
jns
movs
cmp
lahf
pushf
dec
jo
push
pop
xchg
mov
icebp
jp
repnz
rcl
imul
dec
je
and
stos
repz
pop
pushf
outs
inc
dec
sbb
fwait
sbb
outs
sub
xchg
xchg
dec
scas
nop
dec
ss
test
mov
inc
pop
mov
in
lods
push
bound
das
out
call
out
pusha
mov
(bad)
cli
jo
fs
int
adc
push
adc
mov
fnstcw
cmp
enter
(bad)
mov
popa
retf
test
inc
xchg
adc
add
pop
rol
cmps
pop
inc
sbb
sbb
fidiv
js
and
jb
pusha
lods
shl
icebp
fidivr
ficom
adc
cmp
pop
mov
popa
mov
pop
in
call
cmp
movs
lahf
je
pop
mov
xchg
sbb
aaa
inc
movs
scas
mov
jne
movs
cmp
dec
sar
pop
aad
(bad)
(bad)
mov
pop
arpl
fdivr
mov
push
sub
cmps
js
adc
inc
out
es
sar
fcmovnu
dec
cwde
ins
add
out
inc
(bad)
jp
dec
outs
mov
popa
loop
loop
ror
mov
in
push
pop
dec
adc
imul
mov
rol
lods
vpunpcklbw
or
sbb
das
dec
clc
dec
int
dec
xor
push
(bad)
sub
sbb
xor
test
push
xchg
push
je
mov
in
jecxz
or
in
pushf
ins
test
enter
adc
push
das
pop
mov
fidiv
std
push
(bad)
(bad)
inc
inc
lock
repz
add
rcl
xor
dec
scas
std
call
mov
inc
(bad)
outs
mov
int
aad
jecxz
mov
add
xor
imul
clc
mov
or
mov
sub
add
and
int
pop
pop
jmp
or
test
cli
stos
add
icebp
push
and
adc
fild
imul
xchg
push
add
pop
sbb
dec
adc
fstp
push
fmul
mov
jmp
fimul
pop
addr16
cmp
fnstsw
sub
inc
in
pop
or
aad
cmp
dec
dec
mov
scas
mov
or
cmp
mov
cmps
inc
dec
sbb
xlat
imul
pop
(bad)
sub
jmp
or
and
loope
mov
inc
sub
push
xchg
pop
cmps
adc
jae
inc
stc
jecxz
and
imul
xchg
int
(bad)
pop
xchg
or
add
mov
out
jl
or
pop
cmp
mov
jns
xchg
add
out
cdq
push
scas
jp
hlt
pop
push
adc
lods
aad
pop
ja
inc
add
jnp
mov
mov
test
sub
pop
inc
ret
push
adc
(bad)
sbb
and
sub
icebp
mov
gs
jmp
fwait
mov
icebp
mov
sub
(bad)
push
iret
aad
inc
mov
or
pop
inc
mov
ror
aad
call
pop
push
sub
jae
pop
in
bound
pop
rol
fs
add
pop
or
retf
idiv
pop
adc
repz
sbb
nop
mov
outs
mov
mov
imul
jmp
or
aad
push
jg
icebp
jb
pusha
loop
mov
lds
ret
jge
js
jne
mov
mov
(bad)
sar
pop
mov
sbb
and
xorps
mov
mov
xor
fstp
jbe
out
(bad)
mov
pop
enter
fs
repnz
aad
mov
add
fabs
sub
shl
xchg
in
push
bound
inc
out
fiadd
aaa
mov
(bad)
shr
mov
outs
je
add
in
aam
out
out
repnz
inc
jmp
lds
ja
in
pop
inc
jno
mov
push
jle
xchg
xchg
sar
or
jle
lea
out
xchg
aaa
ror
movs
push
or
retf
mov
cmp
push
in
ret
cmp
shl
in
clc
sbb
mov
sbb
xchg
int
icebp
push
xchg
xchg
pop
stos
and
lahf
shl
cdq
in
xchg
movs
and
mul
outs
(bad)
nop
push
frstor
xchg
(bad)
fisttp
cmc
pusha
ds
cli
(bad)
jp
xchg
sbb
inc
data16
lds
sahf
mov
test
mov
pop
jbe
mov
sti
cmps
cmp
jno
fcomp
scas
repnz
(bad)
stos
mov
jmp
stos
loopne
loopne
out
aad
jo
sub
ins
mov
ins
dec
pushf
js
and
imul
fdiv
enter
fwait
mov
fadd
dec
xor
rcl
or
inc
fstp
pop
xor
mov
(bad)
enter
es
loope
sub
neg
retf
in
loop
ret
and
or
jb
mov
jl
adc
adc
jp
and
ror
sbb
or
sar
push
js
jge
shl
inc
pop
xor
ins
stc
mov
jo
lods
cdq
mov
sub
call
cmp
jecxz
pop
in
and
cmp
ins
jo
push
lea
popa
ins
test
mov
mov
dec
das
mov
shl
das
inc
scas
xor
jp
daa
pop
loop
outs
sbb
pop
bound
inc
dec
sub
test
mov
or
cmc
(bad)
mov
xchg
xor
dec
pop
cmp
jp
xor
mov
ss
sub
stos
lds
adc
jmp
sti
jge
and
(bad)
stos
cmp
inc
data16
mov
pop
mov
out
pop
jns
arpl
jle
test
(bad)
out
sbb
in
and
imul
sbb
mov
push
idiv
cmp
shl
sub
std
out
test
jecxz
mov
mov
retf
int3
loope
sub
adc
dec
push
hlt
cmps
dec
out
call
mov
lock
test
dec
stc
push
lock
pop
lahf
add
inc
push
mov
xchg
dec
jmp
ret
sbb
adc
nop
mov
add
dec
and
mov
sbb
mov
enter
inc
je
add
mov
sub
ja
in
out
daa
call
sbb
pop
iret
dec
mov
fistp
out
cs
cmp
pop
imul
xor
pmullw
mov
sbb
clc
add
loopne
and
jmp
push
mov
sbb
cmp
lods
cmc
push
adc
cmps
jecxz
and
jp
add
add
mov
or
jne
xlat
sbb
cmp
std
cmp
xor
xchg
jmp
inc
fs
sub
xchg
fwait
xchg
call
call
sbb
(bad)
ds
add
push
leave
cs
push
(bad)
ja
adc
pop
scas
mov
test
mov
nop
inc
dec
cmp
pushf
and
adc
test
inc
data16
jbe
xor
mov
xchg
out
mov
stos
jmp
cmp
loope
jbe
fdivr
mov
retf
movs
scas
pop
cmp
cdq
pop
xchg
hlt
adc
ins
xchg
pop
push
popa
aam
sub
outs
and
shl
cmp
xchg
test
dec
sbb
push
inc
xchg
sub
xchg
dec
sub
push
cmp
mov
push
imul
sti
sbb
in
mov
inc
jp
dec
(bad)
lea
vsqrtsd
ret
cmps
xor
adc
mov
xor
popa
inc
test
xchg
jl
pop
loop
adc
daa
test
xor
mov
jnp
cmp
test
fld
or
sub
ss
xor
enter
adc
(bad)
push
xlat
mov
xchg
rcl
ins
inc
jno
int
cmc
xor
mov
loope
xchg
mov
cmp
mov
mov
mov
push
fsubp
mov
icebp
scas
cmp
fld
stos
pushf
mov
test
sub
jb
fwait
cmp
jo
(bad)
icebp
push
add
out
dec
sahf
lock
cmp
sti
inc
data16
add
push
into
sbb
and
mov
mov
sahf
jp
(bad)
inc
int3
aam
or
xor
cmp
out
leave
push
xor
rcr
push
xchg
fnstcw
inc
or
das
pop
pop
mov
aam
cmps
push
pop
jo
ins
sub
addr16
int3
movs
push
or
and
pop
test
and
or
fnstenv
in
push
xor
xchg
or
and
call
cmp
test
test
call
arpl
jnp
rcr
cwde
ret
push
iret
mov
adc
add
mov
aas
popa
inc
mov
(bad)
or
outs
jecxz
pop
retf
or
cdq
mov
and
adc
or
fstp
adc
(bad)
inc
mov
(bad)
sub
cdq
sub
in
cmp
in
daa
lds
daa
fisttp
fwait
sub
mov
and
jp
clc
std
ss
lods
into
call
jmp
ror
mov
retf
mov
pop
js
outs
js
sub
add
mov
mov
std
jnp
cli
retf
xchg
stos
or
mov
inc
popf
inc
out
mov
mov
cmp
mov
push
mov
push
dec
arpl
shl
push
out
std
and
push
dec
sbb
(bad)
ins
sahf
pop
shl
adc
cmp
test
cmps
int3
mov
call
or
cs
retf
adc
mov
lds
and
test
out
sub
arpl
add
repnz
sub
push
xchg
clc
mov
push
das
jno
inc
cmps
and
(bad)
fimul
shl
je
sub
jo
(bad)
out
data16
mov
dec
out
xchg
sti
xor
or
nop
jb
add
repz
out
pop
loopne
push
add
cld
jno
sub
sbb
(bad)
adc
pop
dec
int
rcl
adc
ja
xchg
mov
shl
xor
dec
shr
les
inc
xor
and
fincstp
test
sqrtps
(bad)
adc
ins
aas
(bad)
push
and
sbb
in
pop
mov
(bad)
call
lea
sbb
mov
push
pop
inc
inc
jo
fisttp
xor
rol
sti
pop
fmul
mov
jne
sbb
nop
sbb
push
jg
xchg
xor
enter
(bad)
mov
and
mov
mov
es
inc
aad
inc
aad
out
add
fldenv
dec
mov
repnz
cmp
push
ins
mov
retf
sahf
jle
push
and
sbb
cwde
mov
cmps
sub
xor
shl
xchg
push
movs
pop
jp
(bad)
pop
pop
addr16
outs
imul
fnstcw
imul
arpl
mov
bound
loope
popf
enter
movs
mov
mov
mov
xor
jo
push
mov
or
and
add
pushf
inc
mov
pop
fld
push
loopne
jo
sbb
je
ins
stos
std
dec
loopne
mov
mov
jae
stc
push
ds
fsubr
(bad)
push
inc
fbld
add
es
std
mov
mov
sub
shl
cmps
add
stc
cmp
mov
ds
mov
mov
sub
mov
push
sbb
jbe
addr16
rol
pop
xchg
cmp
mov
fmul
cmc
in
test
pusha
or
loopne
mov
into
mov
push
ret
inc
sar
mov
enter
cmp
or
in
push
mov
push
push
xchg
gs
xchg
out
into
fmul
inc
sub
les
dec
adc
xchg
pop
test
mov
dec
(bad)
cmp
test
retf
jne
sub
int3
lock
(bad)
mov
jo
push
mov
nop
retf
mov
(bad)
loope
sub
jecxz
xchg
out
sub
popf
xor
ficomp
out
ss
cmp
cmp
rcr
mov
(bad)
jge
sub
push
mov
and
cli
fld
jecxz
dec
adc
sub
push
(bad)
arpl
adc
js
cld
leave
stc
xor
das
xor
xchg
push
mov
(bad)
jbe
mov
jns
dec
movs
data16
lods
int
out
or
in
or
paddq
xor
sbb
adc
pop
gs
xchg
xchg
movs
xchg
inc
xchg
and
inc
mov
cdq
lea
aad
pop
and
cmp
test
cmp
cmp
cmc
imul
push
adc
mov
xchg
and
jge
lea
jl
cmp
pop
call
sahf
xchg
test
push
mov
test
jo
lds
sbb
mov
pop
or
pop
xchg
sub
inc
in
cmp
jl
ret
cli
retf
sub
jge
jmp
cmp
add
(bad)
cs
mov
loope
lods
push
xchg
xchg
inc
cmp
cld
icebp
test
add
movs
jns
pop
add
retf
int
push
cmp
les
aas
leave
dec
popf
push
pop
mov
gs
cld
jp
pop
push
retf
or
aam
and
in
mov
xor
cdq
retf
mov
fldcw
mov
jg
push
inc
mov
pop
hlt
fisubr
pop
daa
dec
jns
stc
adc
sbb
outs
xchg
clc
add
add
pop
fidivr
xchg
cmp
loop
retf
push
mov
lea
jge
sti
addr16
daa
addr16
jp
aam
lock
adc
cmp
dec
and
gs
bound
iret
in
dec
call
inc
stos
mov
or
loopne
das
add
sub
push
nop
out
cld
push
retf
jl
adc
mov
inc
mov
call
jecxz
mov
ins
out
pop
sbb
add
cmc
nop
int3
inc
inc
cmp
pop
push
loope
nop
mov
inc
mov
inc
dec
stos
xchg
and
sub
xor
pop
mov
mov
adc
lahf
ret
sbb
test
or
mov
mov
lds
(bad)
ficom
ret
jne
inc
mov
mov
and
cli
cli
mov
aad
pop
retf
adc
adc
jbe
sub
mov
push
jecxz
ss
rcr
sub
inc
xchg
jg
aam
mov
dec
ror
push
sub
push
(bad)
sti
loop
add
xor
pop
jge
sahf
loope
pop
xchg
sbb
adc
adc
cdq
mov
mov
jnp
sbb
mov
aaa
xchg
test
call
xchg
mov
xchg
mov
cmp
test
jmp
mov
mov
adc
lahf
mov
iret
jmp
sbb
xor
loope
lods
dec
movs
fs
and
jp
call
test
mov
in
pop
(bad)
xchg
cmp
test
mov
ins
mov
inc
add
xlat
fadd
or
call
or
enter
pop
stos
icebp
sub
(bad)
retf
cli
sbb
cdq
push
je
add
dec
in
cmp
loopne
xchg
inc
faddp
stos
or
jmp
cmp
out
cmps
imul
dec
pop
imul
stc
in
xor
test
in
mov
cmp
scas
pop
xchg
xchg
and
sub
ja
outs
movs
aas
add
(bad)
sub
mov
cmp
mov
test
add
in
fcomi
int3
jmp
cli
push
push
fwait
sub
inc
pop
add
add
adc
or
xchg
xchg
pop
sub
adc
sar
mov
or
sub
aaa
dec
mov
push
loop
data16
add
sub
int
sbb
and
xchg
mov
cwde
test
neg
lahf
and
and
movs
ins
bound
xor
pop
xor
(bad)
mov
inc
jae
xchg
popf
dec
adc
push
bound
xchg
es
xchg
inc
jbe
or
jle
jecxz
or
sub
shr
ds
fcomi
sbb
jmp
adc
inc
ret
out
xchg
or
les
mov
popfw
iret
rcl
lahf
add
scas
adc
mov
int
push
es
mov
sub
pusha
or
sti
cmps
retf
and
lods
je
mov
cld
cmp
sub
sub
sub
cmp
les
xor
mov
fdivr
push
jmp
repnz
lods
lds
js
stos
cmps
movs
sbb
int3
mov
rol
mov
cmp
shl
sbb
xor
int
mov
sub
pop
push
push
ret
scas
mov
lea
mov
shl
mov
jecxz
push
push
sub
call
jae
repz
jae
cmp
add
and
in
pusha
pop
and
xor
xchg
and
push
mov
out
xchg
(bad)
jle
or
loop
loope
jl
push
in
add
jp
cld
add
popa
fisttp
test
mov
adc
sub
mov
sbb
call
jmp
jmp
xchg
add
cwde
sbb
mov
retf
push
cmp
mov
enter
frstor
inc
into
sbb
push
fs
jl
sub
mov
inc
sbb
shl
xchg
cmp
enter
mov
sbb
(bad)
fnstcw
pop
jle
stc
jmp
mov
lods
or
pushf
jbe
clc
sahf
sub
cdq
adc
outs
xchg
jo
push
pop
sbb
ss
add
jo
ret
stos
clc
pop
retf
dec
inc
xchg
fs
mul
cmp
jae
scas
cmp
out
fs
enter
loop
je
and
push
int
pop
(bad)
cmp
dec
or
add
out
(bad)
in
xor
pop
sar
push
or
test
jno
dec
fdivr
mov
in
push
xchg
adc
loop
fld
bound
jp
inc
mov
sti
xchg
arpl
jns
pop
ficom
pop
cmc
stos
xlat
es
sub
sub
aas
std
add
jbe
xchg
(bad)
xchg
cmc
mov
fs
fsubr
leave
movs
inc
shl
dec
js
push
sbb
adc
dec
xor
cmp
pop
push
sbb
lea
das
push
dec
loop
add
or
mov
sbb
pop
retf
lds
adc
in
cmps
xor
push
(bad)
aaa
(bad)
fist
imul
sub
mov
sbb
add
pop
mov
pop
lds
fistp
fistp
sub
not
adc
iret
scas
js
pop
xchg
mov
mov
add
jg
repz
or
jmp
sahf
outs
mov
int3
pop
or
sbb
mov
mov
(bad)
and
and
scas
aas
call
sti
cwde
repz
imul
sub
pop
mov
pop
loopne
jl
mov
cmp
push
lds
jge
add
nop
and
jge
sahf
outs
pop
imul
(bad)
lahf
mov
and
adc
dec
or
leave
repnz
push
push
(bad)
xor
jg
clc
in
pop
mov
test
mov
cld
cmps
test
ja
and
(bad)
sub
sbb
jge
inc
jecxz
xor
mov
in
mov
push
fs
sbb
loopne
leave
sti
push
loop
and
out
loopne
adc
stc
pop
add
popf
mov
pop
fwait
sub
adc
lds
push
pusha
dec
mov
nop
mov
icebp
int3
mov
jae
jno
lock
pop
aad
add
out
and
or
loop
inc
rcl
pop
popf
jecxz
and
(bad)
cmp
out
jge
mov
sub
shl
xchg
xchg
mov
addr16
jmp
add
int
jle
int
mov
jle
retf
sbb
aas
(bad)
addr16
pop
push
xchg
sbb
cli
mov
adc
cs
adc
inc
test
mov
inc
in
jp
add
cs
push
jmp
jno
add
comiss
sti
sub
mov
mov
or
out
mov
mov
js
scas
push
mov
xchg
inc
pop
sub
push
pop
mov
in
dec
cwde
cwde
lods
stc
and
sub
inc
xchg
jbe
out
push
jl
fdivr
mov
into
in
cmc
call
push
ss
xor
mov
push
and
and
loopne
dec
imul
xchg
dec
sub
sbb
mov
movs
lea
xchg
mov
and
ja
(bad)
out
xor
xor
inc
ror
cmp
rol
ds
rcr
les
xchg
jmp
icebp
and
xchg
clc
adc
cdq
cmp
enter
imul
mov
adc
mov
jg
in
push
xor
jge
dec
inc
js
lock
pop
ins
lods
or
push
adc
push
push
popa
mov
mov
lds
and
push
xchg
jg
jecxz
mov
into
pop
sbb
cli
pop
mov
pop
in
jnp
and
sub
in
cmps
sub
test
push
pop
jae
cdq
popf
es
cmc
inc
test
or
xor
mov
std
pop
cli
aad
cmp
sti
lock
push
or
jo
inc
add
push
into
jl
sub
mov
cmp
mov
add
xchg
or
push
mov
shl
in
mov
in
pop
fsub
push
dec
pusha
mov
pop
rcl
inc
xor
dec
ja
jmp
inc
and
pop
int
in
xchg
sub
repz
(bad)
cmp
ror
loop
push
and
clc
cmp
adc
sub
mov
jo
add
mov
xor
mov
gs
jnp
cmp
push
jge
repnz
push
jmp
test
pusha
lds
js
pop
push
lds
sar
push
add
jl
fwait
les
int
hlt
call
nop
add
cmp
mov
sbb
clc
fs
pop
jbe
jmp
jne
push
and
(bad)
sub
adc
js
int3
repz
cmp
push
add
mov
sbb
loope
dec
neg
mov
mov
jnp
jle
neg
scas
and
mov
into
pushf
add
popa
push
sbb
push
and
mov
stos
add
fcomp
retf
ss
sbb
mov
jp
ret
mov
jle
adc
popa
push
cmps
test
xchg
imul
and
add
int
push
mov
pop
mov
or
mov
les
mov
call
pop
jmp
mov
sti
shl
or
pop
outs
or
push
inc
push
stos
sbb
imul
adc
push
es
fdivrp
push
lods
jo
mov
sub
mov
in
test
(bad)
popf
pop
fidiv
je
add
(bad)
hlt
ret
inc
sbb
mov
aaa
push
cmp
(bad)
pop
jmp
adc
push
sti
not
dec
cmps
rcr
inc
imul
mov
loop
outs
add
fidiv
stc
test
sbb
mov
xchg
lahf
sbb
test
push
sar
fiadd
aam
mov
mov
bound
inc
mov
movs
and
mov
sub
jbe
mov
adc
mov
push
jmp
nop
ins
mov
sub
and
lds
(bad)
xor
dec
jl
int3
hlt
or
imul
jp
(bad)
lods
pop
xchg
inc
out
adc
push
inc
mov
mov
add
xchg
sub
(bad)
clc
adc
pop
push
ret
jns
mov
jp
sub
shl
leave
imul
dec
add
fst
movs
xor
(bad)
or
jns
xor
jp
(bad)
mov
jb
mov
out
dec
pushf
mov
add
cmps
xchg
push
pushf
inc
push
ret
mov
fmul
adc
xor
movs
xchg
push
sahf
in
cmp
lods
jb
shr
pop
mov
jns
shr
dec
repnz
pop
adc
pop
push
movs
mov
cmp
lahf
cmp
clc
add
dec
mov
test
cmp
sub
cmps
xchg
out
lods
ret
les
jmp
ss
push
jae
and
je
inc
mov
aaa
inc
mov
out
inc
jmp
xchg
push
sub
ret
mov
jl
jg
dec
pop
xor
push
mov
xchg
out
loope
sbb
(bad)
cwde
cdq
mov
sub
cli
loop
lods
fwait
dec
aaa
jbe
xor
aas
fmul
(bad)
pop
fs
fidivr
jo
jnp
das
adc
sbb
repz
sbb
std
mov
dec
jo
jne
or
aad
dec
push
xor
cmp
or
lahf
cld
(bad)
lods
cmps
scas
lahf
xor
mov
fnstsw
mov
push
fcmovbe
out
push
jecxz
outs
out
sbb
aaa
add
or
icebp
xor
scas
sub
adc
clc
arpl
mov
jo
sbb
jb
add
mov
das
dec
(bad)
mov
xor
cmp
adc
jmp
inc
sbb
cdq
mov
jmp
test
dec
adc
cmp
cmc
(bad)
mov
dec
and
sub
sar
add
stc
daa
ins
cmp
popf
cmp
outs
or
adc
xchg
jmp
maskmovq
mul
mov
icebp
fwait
das
or
sbb
repnz
push
fcmovu
inc
lock
mov
sbb
mov
mov
push
imul
je
fmul
push
loopne
rcr
rcl
jl
out
jl
ret
mov
inc
es
(bad)
addr16
xchg
xor
sar
call
int
fadd
fs
push
and
hlt
out
fcmovnb
mov
sbb
inc
dec
xor
add
movs
mov
mov
sahf
sbb
mov
xor
mov
repnz
lods
sub
xchg
test
std
out
retf
or
jmp
movs
hlt
push
dec
enter
cmp
pop
jle
and
test
mov
add
cmp
or
sub
aam
mov
mov
sub
push
addr16
call
mov
(bad)
mov
jl
jbe
push
lock
pop
loope
fucom
mov
daa
mov
pop
test
lock
ret
dec
popa
adc
push
fldz
and
push
sbb
sbb
daa
mov
leave
cmp
push
or
fscale
jg
cmp
push
jno
out
xchg
retf
mov
fs
jnp
adc
cmc
repz
std
inc
repz
bound
dec
or
clc
xor
test
data16
adc
aas
push
mov
inc
cld
xlat
mov
data16
mov
and
(bad)
ss
inc
push
fnstcw
mov
sub
push
push
add
imul
pop
mov
dec
and
dec
mul
(bad)
shl
pushf
mov
xchg
push
aam
sub
leave
test
jp
xchg
cmp
inc
dec
or
and
mov
rcl
rcl
jne
mov
xor
cmp
push
test
dec
test
cmp
jnp
jns
push
(bad)
xlat
xor
daa
push
stc
jg
add
xor
jmp
mov
aam
jl
call
nop
and
mov
dec
mov
loopne
add
(bad)
mov
pushf
imul
fs
gs
jnp
aam
xor
fdivr
dec
adc
xchg
js
fwait
iret
jmp
mov
mov
in
xchg
cmc
imul
fisub
push
(bad)
pop
les
mov
std
es
cmps
mov
sbb
loop
mov
outs
inc
iret
cmps
adc
jno
push
sbb
jne
dec
jecxz
cmp
pop
and
out
mov
out
dec
inc
into
pop
call
mov
push
pop
dec
adc
mov
addr16
push
outs
inc
leave
sar
mov
ins
inc
aam
push
mov
scas
add
and
fist
or
ret
loopne
push
lock
cmps
outs
push
or
cmc
xchg
int3
in
mov
in
imul
xor
jb
jge
repz
int
or
push
cmp
call
mov
scas
jnp
fldenv
(bad)
jp
sbb
push
xor
jl
aam
push
in
xchg
push
add
mov
mov
loopne
into
push
imul
mov
push
inc
push
fucomip
sbb
outs
jo
lahf
pop
(bad)
push
loop
and
cmp
sub
daa
jnp
enter
mov
or
mov
out
adc
jg
clc
out
ret
mov
retf
retf
packssdw
or
aaa
xchg
les
imul
ret
sbb
adc
daa
cmp
xor
add
jno
jne
cld
mov
imul
dec
in
add
pushf
pop
loop
sti
stos
call
xor
in
ins
mov
and
jmp
icebp
jmp
sbb
mov
pop
jle
push
loope
outs
fdiv
and
mov
retf
xor
mov
jo
cs
xchg
mov
inc
mov
cs
std
sub
sti
xlat
or
pop
rcl
ja
(bad)
push
add
icebp
out
iret
jne
mov
pusha
(bad)
sub
icebp
xchg
sub
jns
dec
adc
pop
or
push
xor
out
push
setg
mov
inc
lahf
xchg
ja
xor
add
scas
adc
retf
and
cmp
std
lahf
(bad)
test
lock
fs
jnp
dec
mov
hlt
push
neg
call
xlat
dec
cmp
fidiv
sahf
rcl
mov
lods
xchg
cmp
pop
mov
fld
inc
mov
push
lds
jmp
outs
cld
adc
call
sbb
popf
jns
cli
movs
inc
jnp
sub
mov
dec
lods
leave
imul
or
mov
dec
pop
(bad)
clc
xchg
bound
push
ins
cld
shl
sbb
cdq
jle
sub
les
inc
mov
rcl
and
cmp
dec
pop
rcr
clc
sbb
or
sar
mov
or
add
lods
sbb
cwde
jl
push
adc
xchg
pop
xor
and
push
ret
or
pop
jmp
sub
fmul
stc
adc
aas
sub
scas
in
stos
mov
push
xchg
push
repz
lds
xor
imul
dec
xor
imul
or
push
inc
shl
call
div
cmp
mov
mov
mov
fnstenvw
xlat
into
mov
hlt
mov
js
pusha
jp
repz
mov
in
test
icebp
cmp
or
mov
mov
dec
cld
jge
mov
rcr
pop
in
sub
push
ret
push
idiv
aad
push
hlt
cmp
(bad)
loop
mov
call
jmp
jo
mov
sub
int3
call
mov
aaa
cmps
dec
xor
(bad)
js
mov
bound
rcl
stc
cwde
mov
int3
fcom
mov
push
je
or
sbb
inc
mov
xchg
rcr
mov
pop
pop
pop
pop
sbb
cmp
das
fisub
mov
inc
adc
mov
dec
mov
add
add
adc
adc
mov
lods
dec
push
nop
add
sub
mov
sub
and
jecxz
push
push
nop
dec
shl
pop
fisttp
nop
jns
mov
push
mov
jge
mov
lea
mov
frstor
sbb
dec
xor
retf
jns
in
loopne
pop
xor
push
or
xchg
loope
pop
rcr
jge
rol
jl
inc
lds
jnp
addr16
pop
xchg
ins
into
mov
stc
pop
sahf
pusha
inc
cmps
or
imul
daa
jg
ret
shr
neg
fcomip
aam
lods
push
fist
xor
xchg
popa
enter
sbb
sub
add
pop
xchg
das
sub
cld
cld
das
ror
mov
(bad)
xor
shl
mov
fistp
xlat
mov
loope
add
retf
arpl
lods
pop
pop
cmps
out
stos
loope
mov
test
pop
xchg
inc
dec
add
jge
clc
mov
pop
sub
in
jae
lea
or
sbb
inc
mov
iret
or
(bad)
shl
bts
or
fbstp
and
push
shl
push
inc
mov
pop
rol
pushf
jb
cmp
cmp
jns
inc
out
sub
dec
lds
adc
cwde
stos
movs
retf
jg
jno
out
xor
push
mov
inc
fsubr
cmp
and
ins
jecxz
or
ror
push
in
out
inc
push
mov
aam
rol
or
(bad)
in
fistp
fidiv
ja
sub
jp
outs
std
sbb
xchg
sbb
jbe
adc
sbb
mov
mov
sub
mov
rcl
xor
std
int
(bad)
pusha
and
(bad)
outs
sbb
out
data16
push
pushf
inc
retf
or
aam
xor
sti
mov
push
cmp
cld
pop
je
dec
aas
xchg
mov
sahf
icebp
rcl
xchg
dec
mov
or
sbb
dec
cmp
jne
test
adc
movs
mov
or
movs
mov
jge
rcl
cmps
aaa
xchg
dec
fiadd
mov
inc
ds
fdivr
sub
call
cmps
aam
push
xlat
mov
inc
dec
enter
ins
ins
rol
inc
fwait
inc
out
fld
sub
sbb
push
dec
lahf
mov
dec
sub
fist
mov
fld
sub
jmp
push
mov
jne
gs
ja
add
mov
jmp
popf
jnp
mov
xor
cmps
xchg
(bad)
xchg
pop
adc
sahf
test
pop
sbb
out
xor
add
adc
fucomip
or
cdq
mov
outs
or
jp
outs
fdiv
push
xor
aad
in
repz
movs
call
jnp
mov
dec
clc
inc
nop
xor
sbb
pusha
mov
inc
or
xchg
inc
pop
jge
pop
cmp
(bad)
jg
xlat
stos
jbe
(bad)
mov
in
xor
xor
pop
or
ret
out
cmc
fisubr
clc
pop
xchg
lods
js
mov
(bad)
lahf
out
add
scas
push
xor
sbb
std
jge
lea
cmp
leave
(bad)
mov
push
aad
loopne
push
stos
adc
xor
dec
sub
xchg
(bad)
jns
dec
icebp
aad
ds
retf
loop
and
std
aad
cmp
outs
add
daa
xor
pop
rcl
jbe
fcom
pop
loopne
xchg
jmp
(bad)
fcom
cmp
leave
icebp
inc
and
add
xor
mov
cwde
int3
dec
cmp
pusha
sbb
stos
cmps
scas
in
cwde
and
dec
shl
out
loop
or
cld
inc
adc
xlat
mov
jge
or
inc
cmps
jns
(bad)
leave
fist
icebp
dec
xchg
push
push
test
and
jecxz
cld
add
mov
inc
dec
sub
sti
in
(bad)
push
and
out
mov
imul
cld
into
(bad)
fcomp
jns
ror
dec
or
jbe
push
aam
sbb
dec
add
(bad)
cmp
dec
sahf
or
push
push
mov
sbb
(bad)
out
(bad)
or
fwait
push
mov
and
(bad)
ficom
cmp
shr
mov
repnz
(bad)
xor
xlat
mov
or
xchg
adc
sti
xor
add
cmp
mov
fisubr
shr
dec
push
mov
jo
pop
jl
xlat
xchg
(bad)
cmps
jp
and
sahf
lock
xor
cmp
xor
dec
stc
cmps
sbb
xor
sar
adc
rcr
push
pop
xchg
sbb
sub
inc
test
js
inc
pop
xchg
(bad)
fcom
jb
shl
fiadd
sub
pop
fidiv
pop
rcr
mov
ins
jno
cmp
scas
cmp
xchg
sub
add
cli
movs
mov
mov
or
in
enter
mov
pop
inc
mov
or
call
mov
das
movs
into
lods
call
pop
push
(bad)
clc
xor
mov
lock
xor
and
dec
ret
inc
mov
sub
stos
test
xor
pop
xor
outs
js
jmp
pop
inc
nop
cmc
add
lahf
jp
outs
dec
mov
or
xor
pop
sub
out
aas
xchg
jnp
jmp
jp
push
aam
gs
inc
mov
cmp
sbb
pop
cld
push
inc
stos
out
fwait
js
in
popf
xor
loopne
outs
fsubr
enter
mov
inc
sbb
lods
loope
mov
rcl
sbb
sahf
out
xchg
jne
jg
push
retf
gs
shl
imul
sbb
dec
and
mov
pop
outs
cmp
sub
xchg
scas
jmp
fadd
addr16
cmp
mov
jbe
add
xchg
pop
mov
dec
pushf
push
(bad)
cmp
sub
mov
das
adc
xlat
stc
jge
xor
jge
pop
lahf
fbstp
and
jnp
sbb
into
and
adc
cwde
fdiv
or
sub
jmp
repnz
pop
xchg
mov
aaa
in
into
pop
movs
lea
test
jae
cli
or
or
cs
pop
pop
add
(bad)
fdiv
jmp
js
outs
pop
jnp
sub
pop
jle
shl
call
push
ds
mov
xor
in
jmp
hlt
mov
pop
ja
mov
xor
mov
pop
popf
mov
mov
nop
fstp
pop
outs
jecxz
adc
dec
inc
cmp
jnp
adc
sbb
pop
outs
ret
dec
(bad)
fidivr
add
sub
ins
xchg
in
mov
dec
xchg
push
push
in
mov
sbb
shl
xchg
mov
add
(bad)
jb
mov
mov
iret
lock
mov
ins
adc
add
retf
and
cmps
add
ds
push
into
cmp
and
jmp
mov
push
pop
lods
or
lods
mov
pop
jp
push
and
push
xchg
pop
sub
add
(bad)
or
cmp
inc
and
dec
scas
in
pop
test
mov
sub
pop
dec
cmp
xchg
cmp
clc
push
or
outs
xor
pop
inc
sub
or
and
es
ret
out
in
dec
mov
sbb
fs
mov
and
cmps
xchg
out
retf
ja
mov
call
xor
push
std
push
lea
loopne
stos
fnstsw
xchg
ss
inc
clc
shr
or
pop
out
orps
int
pop
(bad)
jb
pop
lods
push
mov
add
jge
mov
push
cdq
jmp
xor
daa
dec
mov
sub
mov
jmp
je
lds
push
xchg
push
pop
xor
xchg
or
adc
dec
imul
jb
rcl
scas
lea
std
and
mov
cmp
loopne
mov
aam
push
inc
call
dec
push
cs
dec
xor
aam
sbb
jp
mov
gs
repnz
repnz
sbb
retf
repz
push
cdq
jb
mov
push
(bad)
fadd
retf
jg
push
mov
clc
mov
cmp
enter
mov
xchg
pop
sbb
push
js
cmp
push
(bad)
idiv
adc
je
pop
das
sbb
pop
rol
ja
mov
ret
repz
xlat
inc
pop
inc
adc
push
xlat
faddp
out
aad
jns
jnp
jno
or
inc
xor
and
stc
call
and
push
ror
pop
scas
fistp
adc
push
jmp
ficom
ret
jnp
jmp
gs
rcr
jno
lods
pop
jb
fwait
jg
xchg
jge
and
into
leave
retf
xchg
sub
mov
retf
jb
jnp
pop
push
mov
ret
fdivp
jg
bound
inc
jo
push
and
and
add
hlt
and
rol
push
inc
mov
jmp
(bad)
shr
push
fsub
xchg
mov
mov
mov
mov
pop
pop
sbb
shl
xchg
add
call
jle
mov
mov
mov
pusha
rcr
lock
and
repnz
std
mov
ja
sub
add
pop
push
jmp
int
mov
call
dec
lock
loopne
mov
and
movs
loope
xchg
mov
shl
jno
fisttp
loope
sbb
xchg
push
pop
mov
mov
xor
sbb
inc
push
fwait
inc
pop
xchg
sub
(bad)
retf
es
sbb
nop
xchg
and
cdq
dec
xor
in
mov
outs
je
and
jbe
dec
std
sub
dec
dec
scas
adc
dec
inc
dec
neg
pop
jno
(bad)
mov
daa
jmp
push
cmp
mov
xor
mov
adc
push
loop
outs
sbb
call
cmc
pusha
or
push
pop
lds
pop
call
push
adc
sub
jl
adc
and
out
mov
xchg
and
pop
pusha
out
test
xor
lock
mov
sbb
xchg
sub
enter
in
cmp
mov
inc
jp
arpl
movs
cld
pop
xor
pop
test
popa
nop
test
cmp
sbb
aaa
lea
cmp
mov
scas
adc
kmovw
push
scas
out
out
add
dec
dec
pop
dec
loope
or
cld
xchg
push
sbb
xchg
push
(bad)
xor
or
(bad)
cmp
mov
sbb
jp
rol
ds
xor
fild
ja
test
pop
aaa
dec
repnz
js
push
jbe
inc
mov
mov
repz
mulps
div
hlt
push
popa
push
jge
add
es
cmp
sbb
push
dec
inc
cmp
fnsave
test
jp
mov
dec
inc
dec
stos
push
jmp
loop
ret
sbb
pop
and
xor
add
jb
add
fstp
push
jo
or
add
mov
add
mov
jl
jae
or
out
pop
icebp
mov
jns
fcom
lock
adc
fsubr
push
movs
lahf
sub
je
push
sub
push
outs
loop
jle
pop
call
mov
out
xlat
iret
push
ror
popf
cdq
retf
push
test
xchg
mov
jl
sbb
daa
and
movs
dec
push
jp
rcl
jl
add
dec
inc
xor
push
and
jecxz
inc
push
jecxz
add
mov
jmp
or
inc
sbb
add
inc
call
clc
xchg
std
cld
push
aaa
add
(bad)
cmp
add
adc
xor
sub
mov
and
hlt
bound
adc
icebp
outs
outs
clc
fwait
jb
push
dec
test
xor
jbe
pop
(bad)
cmp
jmp
fdivr
fisub
cmp
(bad)
aas
addr16
push
sbb
mov
mov
cld
dec
lds
jge
cmp
stc
inc
imul
jmp
xchg
or
cs
adc
xchg
test
sti
jp
out
xlat
cld
cld
stc
ret
int3
imul
xor
rcl
cli
call
popf
stc
push
aas
pop
jmp
cdq
sbb
push
mov
les
sti
mov
out
sub
imul
jg
add
movs
sti
icebp
adc
out
adc
adc
ror
ins
loope
movs
inc
xor
fcomp
sub
icebp
jge
cmp
xor
mul
xor
pop
ret
(bad)
dec
pop
cwde
mov
xor
push
adc
aaa
je
fild
test
mov
inc
gs
xor
repz
cli
lods
push
cwde
mov
xlat
jmp
pop
xchg
repnz
ja
repz
test
leave
pop
sbb
mov
popf
je
jne
xchg
rcl
lahf
sbb
push
pop
mov
fsub
dec
cmp
(bad)
js
inc
dec
ja
fwait
ss
ffreep
push
mov
pop
cmc
xchg
outs
nop
dec
push
sbb
jge
aam
inc
jle
jmp
repnz
inc
or
adc
sbb
xchg
jp
fmul
or
pop
xor
pop
test
mov
add
outs
inc
and
or
jo
pop
jbe
mov
inc
xchg
movs
dec
leave
jp
mov
lds
xor
pushf
aad
int3
pop
jnp
stos
push
fdivrp
mov
xchg
pushf
jecxz
fs
shr
add
pop
push
dec
add
call
push
dec
outs
in
push
or
jno
sub
or
mov
jl
inc
cmc
(bad)
dec
jb
cli
ss
add
call
dec
loope
repz
das
inc
jmp
lds
cmp
and
pop
cld
adc
and
out
pop
lods
mov
into
mov
push
mov
cmp
pop
(bad)
jo
adc
dec
cmp
stos
or
jo
push
imul
mov
dec
mov
int3
loopne
or
pop
(bad)
lock
mov
inc
and
pavgw
mov
push
cdq
imul
jl
icebp
sub
lock
push
push
jge
mov
out
ror
xchg
arpl
sub
enter
jbe
jnp
or
cmps
jle
jle
jbe
int
jb
mov
and
jo
(bad)
idiv
and
in
stc
xor
jns
mov
mov
in
ds
mov
mov
test
jno
das
cli
sbb
outs
or
int
xor
xchg
test
fiadd
cmc
sub
ret
inc
jbe
dec
lea
cmp
jecxz
xchg
popa
jecxz
jmp
test
inc
out
pop
ror
imul
in
push
jno
push
sti
test
or
cmc
bound
sbb
adc
arpl
lahf
or
fcmovnb
das
push
sub
push
pop
stos
inc
mov
cmp
cdq
addr16
mov
addr16
lahf
retf
add
inc
out
xchg
xor
inc
(bad)
sar
fistp
(bad)
out
stc
imul
mov
mov
dec
pop
test
in
enter
pop
std
jmp
adc
cdq
jmp
sbb
fcomi
ret
jns
jns
ror
fucomi
or
outs
sbb
retf
mov
xchg
(bad)
leave
jbe
pop
mov
jae
(bad)
mov
pop
sbb
stos
pusha
iret
inc
lahf
mov
scas
lods
mov
push
add
jo
loop
outs
out
mov
loope
jno
imul
out
(bad)
mov
push
int
cmc
ins
sahf
pop
call
movs
or
fdivr
test
leave
jmp
fcomp
pop
and
push
xchg
dec
sbb
clc
out
scas
mov
mov
js
in
or
push
retf
aaa
xchg
sub
and
or
hlt
imul
mov
push
aam
add
shr
mov
push
push
and
mov
and
enter
leave
xor
pusha
jbe
arpl
clc
push
jle
ja
or
pop
add
or
cmp
leave
call
ficomp
pop
cdq
repz
jb
ss
ins
sbb
sub
sbb
add
push
inc
out
pusha
cmp
movs
out
jb
stc
int3
xchg
fmul
into
(bad)
out
sbb
stc
jp
loope
xchg
jno
fisttp
or
pop
lds
cs
bound
mov
mov
dec
sti
xchg
pop
aam
pop
cli
xchg
push
shr
mov
xchg
or
lods
test
test
add
jne
pop
ins
in
repz
mov
out
fs
frstor
arpl
push
inc
stc
movs
push
ins
loop
dec
mov
mov
push
mov
mov
sub
pop
ficomp
add
and
and
and
retf
xchg
ins
retf
and
jecxz
std
mov
mov
adc
pop
pop
sub
xlat
xor
xor
aad
cmp
jg
xor
(bad)
adc
ficom
cmp
sti
daa
out
xchg
xor
rcl
mov
ins
sbb
shl
fwait
loope
jle
xchg
cmp
jecxz
int
ja
mov
jo
pusha
rcl
aad
rcl
jns
out
fisubr
mov
pop
or
mov
cli
stc
ret
cwde
sbb
scas
enter
jbe
(bad)
and
mov
push
add
movs
cmp
inc
push
out
xor
mov
(bad)
call
std
pop
addr16
sub
push
test
pop
cld
add
xor
repnz
mov
jecxz
cmps
ins
dec
aam
adc
cwde
sar
mov
mov
enter
fnclex
inc
push
in
hlt
add
xlat
(bad)
repnz
mov
mov
inc
xor
push
(bad)
sbb
adc
adc
fstp
cmp
test
or
add
dec
mov
or
xchg
fidiv
xchg
inc
unpckhps
mov
aaa
retf
dec
(bad)
fidiv
hlt
ret
mov
pop
jnp
in
push
cmc
stos
xchg
cmc
pop
xor
xor
ins
stc
or
sti
cmps
std
push
dec
dec
xor
(bad)
hlt
imul
and
loop
xchg
fisttp
xor
xchg
inc
sbb
add
push
into
sub
call
inc
pushf
pop
xor
iret
inc
into
xor
jp
adc
imul
call
sahf
jns
push
pop
push
mov
add
mov
sqrtps
xor
lea
(bad)
nop
mov
mov
push
les
mov
into
sti
adc
dec
scas
mov
les
fisttp
inc
mov
loop
jae
sub
jmp
push
movsx
rcl
cli
add
adc
(bad)
in
jle
dec
pop
adc
rcr
inc
inc
out
jns
inc
mov
push
add
add
add
call
loop
dec
pop
sbb
into
xchg
rcr
mov
dec
(bad)
pop
mov
popf
(bad)
cmp
stos
mov
addr16
xor
mov
(bad)
ret
jo
push
adc
(bad)
int
test
(bad)
mov
mov
inc
cli
ins
inc
gs
push
(bad)
fs
adc
and
mov
or
xor
adc
jecxz
loopne
shr
xchg
push
clc
jno
mov
jge
cli
(bad)
mov
shl
sar
loopne
sti
ss
lods
or
dec
inc
adc
mov
mov
in
pop
mov
push
jmp
jo
ins
scas
js
and
jg
jae
popa
and
sti
mov
mov
inc
and
inc
add
adc
rcr
mov
mov
rcr
and
rcr
movs
xchg
cmpxchg
mov
inc
pand
lods
dec
cmp
in
jmp
dec
ror
stos
cmp
ja
rcr
mov
push
(bad)
stc
icebp
push
repnz
int3
enter
daa
sysret
inc
and
in
jne
and
inc
lea
mov
mov
ret
mov
movs
ja
and
push
sub
inc
inc
out
retf
fild
aad
fldenv
iret
add
repz
push
cmps
push
sub
test
sbb
cmp
in
mov
inc
sar
fist
mov
ins
ins
lea
loop
in
mov
(bad)
iret
push
mov
jae
jns
adc
mov
push
lods
prefetch
shr
jmp
inc
pop
pop
addr16
data16
pop
(bad)
fdiv
dec
push
or
jae
jno
mov
sar
push
mov
xchg
nop
mov
mov
sahf
sub
cmp
dec
(bad)
sar
sti
loope
hlt
jno
nop
dec
rcl
inc
inc
cli
pop
mov
lahf
lea
(bad)
mov
xor
xchg
(bad)
cmp
push
movs
pushf
inc
fdiv
mov
xor
cmps
fbstp
in
push
out
lock
or
neg
stc
movs
mov
jbe
(bad)
xchg
cmp
(bad)
cmc
mov
in
cs
loopne
pop
rcl
or
ret
outs
loopne
xchg
jmp
faddp
bound
xor
sub
outs
sar
fisttp
dec
test
or
int3
lahf
sbb
(bad)
jmp
push
pop
jno
popa
sub
mov
adc
data16
lds
pushf
sub
shr
push
mov
mov
icebp
in
add
adc
cmc
push
inc
int3
stos
dec
or
mov
out
stos
sar
fcomp
and
push
std
jne
int
lods
jge
push
mov
(bad)
(bad)
xchg
bound
inc
cmp
pop
loop
add
sbb
adc
push
(bad)
fcomp
retf
loop
test
ins
int3
add
fisubr
mov
xor
jg
cmps
jg
fs
inc
shr
pop
mov
mov
mov
cmps
cmp
mov
ins
mov
cli
dec
loopne
mov
add
and
push
pop
adc
push
stc
push
mov
outs
icebp
loop
jns
add
test
pop
mov
fld
dec
retf
stos
mov
pop
sar
xchg
push
dec
dec
jae
cmp
pushf
(bad)
cmp
loop
aas
and
scas
mov
xor
bound
pushf
gs
mov
inc
pop
fwait
ins
gs
and
fwait
(bad)
ins
retf
xchg
into
ds
in
sbb
sub
popa
xchg
in
add
jg
repnz
push
test
and
cwde
pop
dec
sbb
movs
imul
sub
sbb
movs
popf
push
fiadd
mov
mov
and
lds
cld
mov
cmc
in
mov
xor
push
stc
pop
xchg
ret
cmp
sti
sub
es
cmp
push
pop
pop
cs
aaa
and
mov
pop
xchg
add
push
int
sbb
jo
pop
pop
mov
movs
lock
add
sub
imul
add
out
push
pop
sbb
mov
push
xor
(bad)
push
inc
gs
loop
cdq
and
mov
mov
shr
adc
push
add
and
mov
fwait
lea
pushf
push
pop
xchg
inc
cdq
jecxz
jb
(bad)
call
and
mov
add
in
mov
mov
test
fadd
mov
mov
mov
cld
out
adc
test
push
lea
jmp
(bad)
xchg
fdivr
shl
lods
gs
fwait
js
cwde
sub
inc
pusha
popa
loop
pop
daa
pop
jae
das
mov
xchg
into
bound
sbb
out
bound
and
fwait
aaa
cmps
outs
jb
ret
(bad)
push
das
(bad)
pop
ret
xor
fs
ds
sub
out
sub
arpl
mov
cmc
test
pop
xor
jl
pop
pop
(bad)
repnz
pop
and
xchg
mov
pop
pop
mov
push
loope
mov
adc
aad
out
sbb
sbb
xchg
inc
js
xor
inc
pop
dec
retf
mov
ret
pop
jno
or
pushf
mov
or
inc
clc
scas
rcr
lock
pop
and
cli
inc
cdq
adc
(bad)
adc
push
sub
push
adc
iret
ret
push
xor
imul
fdiv
xchg
pushf
int
fsub
or
(bad)
in
cs
popf
retf
and
mov
out
sub
iret
repz
aad
cld
std
je
cld
mov
xor
adc
cwde
cmp
out
in
xchg
cwde
adc
sub
and
fwait
lahf
push
push
jle
movs
dec
ins
retf
ss
cmp
fcmovu
es
pop
out
out
loopne
mov
xchg
push
inc
fbld
fcmovbe
adc
sub
push
xor
movs
pop
pop
icebp
sar
jecxz
bound
movs
inc
sub
fsubrp
popa
xchg
(bad)
cmp
and
mov
sub
sub
or
mov
clc
inc
iret
xchg
jecxz
retf
and
inc
and
loope
dec
mov
pop
rol
adc
loopne
and
push
mov
sbb
mov
jae
fnstenv
dec
out
dec
xchg
fadd
pop
repnz
sbb
out
or
sub
xor
bnd
or
inc
adc
add
out
pop
push
xchg
mov
sbb
std
jns
sbb
mov
pop
rcr
dec
loopne
test
mov
push
popa
inc
inc
pop
aad
pop
jbe
jnp
adc
sbb
ins
jne
sub
inc
jns
stos
scas
mov
xchg
movs
pop
scas
mov
xchg
jecxz
movs
inc
mov
les
in
fisubr
jg
or
jbe
and
pop
and
in
mov
cmc
xor
and
mov
jb
adc
(bad)
aas
jnp
aam
inc
xchg
and
js
cld
std
dec
scas
mov
test
call
pop
xlat
fisubr
cmp
push
hlt
and
lods
jno
push
hlt
mov
popa
jno
cmc
pop
pop
imul
xchg
pop
jae
sbb
lods
pop
(bad)
es
push
mov
xchg
je
and
je
push
push
aaa
jbe
loop
ret
movs
dec
push
enter
aad
add
cmp
daa
loopne
(bad)
pop
cmp
cmp
test
rcl
mov
nop
jae
in
add
or
aas
dec
inc
push
aaa
push
and
sbb
mov
add
imul
push
enter
add
mov
fwait
sbb
pop
ins
cmps
sbb
retf
int3
xchg
push
dec
daa
dec
dec
sbb
cmps
inc
rol
adc
aaa
(bad)
xor
(bad)
movs
rcl
mov
pop
jmp
(bad)
in
mov
or
mov
inc
je
movs
push
mov
dec
das
inc
jmp
and
jl
rcl
mov
loopne
ins
mov
add
not
shl
hlt
mov
jb
xchg
rcr
sbb
xor
movs
xchg
aam
aas
daa
lods
arpl
push
ror
sbb
push
cmp
outs
lods
mov
adc
or
mov
add
pop
shl
loopne
lock
xor
mov
in
fsubrp
push
mov
add
xor
jl
pop
sub
in
cmp
(bad)
push
jmp
outs
pusha
cs
es
jg
sbb
fldl2e
cmp
dec
push
ins
cmps
icebp
adc
mov
jbe
push
add
das
jo
push
add
outs
mov
shr
jecxz
fucomp
lahf
ret
sub
inc
ror
daa
ficomp
cmp
lods
repz
sbb
add
outs
sbb
movs
sub
gs
cmps
mov
fcomp
test
jbe
sub
mov
jle
leave
(bad)
pop
cs
in
test
imul
cwde
(bad)
mov
xchg
sub
sbb
mov
iret
lea
xchg
rcr
mov
ror
xchg
scas
mov
out
push
push
xor
rol
adc
sub
push
jo
scas
or
and
push
and
sbb
lods
xor
mov
hlt
arpl
leave
jmp
inc
inc
pop
in
mov
inc
fstp
cmps
push
mov
(bad)
iret
lock
shl
sub
ins
std
cld
xor
lds
fsub
es
push
lods
jmp
in
dec
inc
pushf
mov
ret
inc
xor
pop
adc
xor
dec
in
push
adc
xchg
push
aas
enter
bound
jns
cmp
in
ins
add
and
xchg
xor
cmp
push
clc
stos
mov
inc
jl
(bad)
loop
pop
rcl
aaa
add
jno
repnz
or
icebp
inc
mov
xor
scas
cmp
dec
mov
jmp
sbb
fs
mov
daa
popf
xchg
cmp
inc
pop
pop
imul
mov
sub
pop
loope
inc
xchg
repnz
ret
and
add
mov
and
add
mov
fst
pop
mov
sbb
xchg
in
pop
sbb
js
hlt
add
jmp
sbb
addr16
dec
scas
repz
movs
lods
loopne
cmc
stos
into
mov
test
xor
popf
fild
dec
cwde
fldenv
or
jne
pop
aam
add
ins
in
into
bound
mov
bound
fimul
cmp
fcmovnb
adc
cmp
movs
and
xor
mov
mov
outs
mov
or
into
js
mov
cmp
movs
xchg
fimul
sbb
std
out
and
inc
inc
cmps
(bad)
popf
and
mov
stos
aaa
sahf
xchg
fninit
nop
dec
jp
(bad)
or
popf
into
out
pop
mov
lea
shr
dec
(bad)
aam
adc
enter
sbb
pop
mov
and
cld
imul
inc
mov
pop
or
and
jp
repnz
retf
sbb
dec
sub
xchg
out
pop
inc
inc
rol
jmp
sbb
popa
jns
outs
(bad)
sbb
add
jecxz
xchg
mov
stos
das
ss
movs
push
js
stc
daa
sbb
imul
add
ins
mov
or
mov
xor
push
lods
ret
popa
or
and
add
inc
fnstcw
movs
push
ss
sti
out
lods
jns
cmp
lock
das
push
jle
push
xchg
sub
lock
jo
lahf
into
mov
cli
dec
js
repz
pop
push
sub
sti
add
bound
idiv
inc
mov
sub
push
push
push
mov
xchg
shl
(bad)
shl
mov
test
mov
push
mov
fldenv
into
ret
aam
hlt
xor
lahf
dec
fistp
add
sbb
cmp
mov
pushf
fimul
jb
adc
fild
out
xchg
dec
mov
inc
sub
retf
mov
neg
sbb
aas
pop
jmp
stc
enter
fistp
push
fdiv
ret
jmp
mov
pop
sub
repz
push
outs
fisub
xchg
pop
cmc
cld
mov
xlat
sahf
inc
push
je
fidivr
and
cmp
or
ss
test
fwait
movzx
cwde
push
mov
xchg
aas
mov
push
mov
ror
shr
and
adc
leave
jmp
pushf
in
xor
mov
std
pop
push
cwde
pop
inc
xchg
pushf
or
fild
fsubr
movs
push
sar
jp
enter
or
outs
cmc
pop
adc
or
out
xor
inc
xchg
mov
(bad)
aaa
push
sbb
(bad)
mov
add
(bad)
cld
test
inc
add
popf
out
mov
scas
xchg
sahf
jns
lods
or
mov
je
aam
mov
aaa
cld
adc
inc
pop
add
dec
push
movs
popf
mov
mov
inc
jno
jb
mov
xor
aaa
fdivr
cmp
aas
or
ins
daa
and
mov
push
xor
in
rcl
jbe
push
mov
outs
mov
(bad)
sub
movs
adc
cmps
adc
jp
jae
adc
test
jbe
sar
push
shl
repz
popa
push
xor
data16
add
sbb
jp
jno
scas
dec
pop
inc
into
pop
loopne
dec
xchg
sbb
(bad)
xchg
popa
mov
sbb
and
add
sbb
pop
repz
sub
and
enter
mov
sbb
sar
js
ficomp
ret
and
xchg
push
mov
sbb
push
sbb
push
in
movs
sbb
mul
test
jnp
jp
sahf
push
mov
rol
xchg
loop
jmp
in
sub
leave
sub
jns
gs
and
pop
lods
adc
fwait
cmp
pop
test
imul
xchg
jne
mov
pop
xor
mov
(bad)
dec
jmp
or
data16
hlt
xchg
movs
js
add
add
pop
nop
cmp
push
push
imul
das
sbb
adc
retf
cmp
ins
dec
daa
inc
loopne
(bad)
adc
es
cmp
inc
inc
xchg
and
adc
(bad)
xchg
pusha
adc
rol
hlt
mov
xor
push
lea
jo
in
sbb
sbb
loope
sbb
les
mov
cmp
das
and
fcom
inc
scas
mov
jecxz
xor
xor
ins
xor
adc
jnp
in
idiv
inc
mov
push
test
aaa
ins
jle
sbb
(bad)
(bad)
push
or
cmp
scas
fld
jl
gs
sub
scas
inc
inc
dec
sbb
adc
sti
sahf
mov
push
or
std
into
lock
aas
lock
movs
cmp
call
jmp
jp
out
mov
push
iret
jl
movs
sub
(bad)
out
aas
(bad)
fs
jmp
cmp
push
gs
outs
cmp
jl
imul
out
cmp
loope
pop
or
in
sub
addr16
mov
xor
les
adc
(bad)
cld
pop
inc
loope
(bad)
in
and
popf
retf
dec
data16
movs
adc
adc
xor
mov
cmp
xor
mov
jae
bound
sahf
xchg
adc
imul
cdq
mov
bound
cmps
icebp
sub
xor
sub
out
std
mov
sub
dec
outs
cmp
jmp
inc
xor
or
dec
sbb
mov
popa
sub
push
mov
(bad)
dec
lods
leave
and
add
add
cmps
mov
rcl
cmp
adc
sti
sub
dec
inc
test
cdq
cmc
push
mov
retf
push
cwde
repz
cmps
in
ss
fisttp
xchg
push
lods
xor
pop
pop
pop
jg
pop
test
dec
test
cmp
iret
xchg
pop
in
(bad)
jno
xlat
aad
sub
inc
mul
dec
shl
arpl
mov
fwait
mov
fwait
pop
aas
sub
mov
bound
xor
ins
dec
and
mov
mov
hlt
mov
push
sub
jno
inc
add
or
lods
push
pop
data16
arpl
repz
adc
popf
jmp
mov
imul
hlt
cmp
loope
retf
stos
sbb
jne
pusha
call
push
imul
sub
jne
test
test
sub
jbe
sbb
push
push
xlat
xchg
jecxz
inc
adc
call
pop
and
pop
bound
fs
jmp
call
xchg
inc
ins
gs
mov
xchg
clc
jmp
cmp
fnstenv
jno
xchg
xchg
push
sub
outs
mov
push
fmul
xor
mov
scas
pusha
mov
adc
sbb
int3
mov
push
ds
(bad)
imul
or
jmp
sub
inc
dec
sbb
and
xchg
jmp
xchg
mov
cmc
arpl
mov
cmp
jnp
xchg
mov
sbb
sbb
pop
ret
sub
cs
aam
adc
pop
imul
inc
fimul
mov
iret
call
pop
fucomi
sbb
push
xor
mov
jecxz
pusha
sub
xchg
scas
xchg
dec
ins
inc
mov
add
js
(bad)
xlat
xor
mov
mov
lods
(bad)
sti
cmp
bound
rcl
movs
(bad)
enter
sub
pop
(bad)
in
cmps
sbb
or
inc
or
push
aad
xchg
in
popa
out
dec
pop
sub
scas
int3
sbb
pop
(bad)
pop
or
fdiv
push
rol
mov
cmp
lea
sbb
jle
repnz
adc
test
icebp
lea
sti
jbe
(bad)
mov
sbb
mov
aas
push
dec
out
xor
sbb
movs
dec
sbb
out
out
and
movs
push
dec
push
je
arpl
loop
mov
test
mov
cmps
inc
rcr
xor
ins
int
(bad)
cwde
je
push
cdq
push
test
int3
jmp
cmp
movs
cli
lock
inc
mov
int3
xchg
add
mov
inc
or
not
in
jg
fnstenv
aam
and
sbb
pop
pop
popa
mov
out
inc
pop
iret
loopne
push
fidivr
cld
mov
(bad)
sub
pop
xor
fsub
(bad)
jp
add
nop
repz
iret
sub
push
addr16
xor
pop
idiv
mov
xchg
cli
dec
mov
or
jb
and
stos
inc
sub
setno
or
adc
dec
imul
dec
inc
xchg
adc
movs
dec
sbb
add
out
repz
xchg
sbb
cmp
(bad)
sub
jp
add
dec
jae
ins
outs
icebp
test
loope
ror
dec
fs
daa
fdivr
mov
dec
pop
lods
in
scas
xchg
sti
call
clc
xchg
retf
xor
jne
fstp
xchg
retf
mov
cmp
push
xchg
push
enter
cmp
out
mov
in
es
mov
in
add
pop
sbb
or
iret
xor
sub
fs
inc
int
int
pop
push
out
pop
scas
inc
and
lds
es
mov
dec
ins
shl
in
and
shl
pop
cmp
cdq
and
lods
xchg
sub
add
pop
push
fdivr
std
pop
inc
enter
cmp
(bad)
dec
mov
inc
retf
push
out
pop
and
mov
daa
lods
push
out
loop
jbe
out
jo
dec
xlat
xor
push
cdq
add
outs
mov
push
or
jns
xor
and
sub
push
adc
pushf
popf
mov
sbb
xor
inc
dec
test
call
lods
shl
test
leave
add
arpl
jo
pushf
in
jle
pop
inc
xor
stos
xor
leave
loope
mov
push
dec
dec
xchg
das
and
test
push
iret
sar
gs
dec
xor
xchg
sub
stos
inc
mov
xchg
fs
adc
arpl
scas
push
call
shl
xchg
dec
imul
cmp
sbb
repz
ret
jb
arpl
xchg
xchg
dec
std
add
push
sub
in
jnp
imul
add
cmc
mov
jmp
inc
into
retf
shl
dec
les
xchg
pop
test
dec
dec
nop
outs
scas
out
jb
jmp
mov
fisubr
push
mov
mov
mov
add
mov
jge
pop
xor
add
adc
(bad)
pop
into
jb
cmp
xchg
or
fld
dec
stos
mov
dec
and
mov
adc
lea
arpl
add
in
add
sub
or
sbb
xor
sub
into
add
in
pop
neg
or
add
not
pop
fdiv
out
test
sub
in
adc
pop
clc
mov
inc
fwait
in
push
test
shr
mov
xor
icebp
xchg
retf
xor
les
xchg
(bad)
push
xor
xor
and
dec
xchg
push
sub
jg
(bad)
or
(bad)
dec
in
(bad)
push
retf
gs
loop
sub
mov
cmc
pop
add
cmc
or
loope
mov
jmp
iret
jbe
fistp
pusha
or
in
stc
iret
popa
cmp
jle
cmp
xchg
jo
mov
mov
test
cmps
out
pop
pop
cwde
pop
inc
jp
in
pop
mov
jb
or
xor
and
cmp
hlt
pop
xor
jecxz
adc
retf
adc
inc
mov
rcl
xlat
or
inc
ds
pushf
(bad)
iret
cld
inc
addr16
adc
in
icebp
or
call
pop
add
inc
cld
jmp
add
xlat
out
ins
and
jecxz
stos
push
fistp
jle
xor
jmp
int
outs
mov
push
loop
cmp
pop
int
pop
add
mov
js
xor
push
aaa
popa
adc
popa
outs
mov
daa
and
das
int3
adc
repnz
mov
add
ret
out
(bad)
sub
and
fwait
add
sbb
cwde
mov
inc
in
jp
mov
adc
pop
cmp
fbld
add
fcos
pop
iret
(bad)
hlt
xor
addr16
jns
pop
xor
sbb
cmps
test
(bad)
push
gs
(bad)
cmp
ja
out
xlat
sub
in
inc
in
adc
pop
mov
or
pusha
or
dec
jno
sub
ins
cmp
jno
rol
gs
add
and
(bad)
push
jmp
loopne
stos
xlat
and
mov
xor
cmp
sbb
iret
mov
jge
inc
inc
sbb
jecxz
arpl
adc
arpl
cmps
in
jmp
out
hlt
dec
(bad)
jl
push
ror
fsubr
vmovq
stos
xor
mov
jne
mov
les
in
clc
stos
xor
xlat
inc
imul
std
push
sbb
push
lds
cmp
mov
inc
(bad)
ret
loope
loop
xchg
jno
mov
sub
cmps
fsub
push
jb
jns
xor
pop
sub
add
fmul
push
lods
dec
sbb
dec
(bad)
pop
mov
loop
sbb
cmp
inc
pushf
fisub
retf
mov
dec
dec
je
pop
in
inc
cmp
dec
ds
cmps
(bad)
mov
js
xor
stos
jo
sbb
mov
sub
pop
gs
lahf
js
rol
icebp
data16
sub
lods
mov
int
mul
jns
lods
shl
xchg
mov
retf
ret
mov
mov
sbb
test
lods
popa
fbstp
inc
jbe
imul
mov
dec
mov
ja
pop
adc
push
int3
jno
in
out
cvtps2pd
out
mov
nop
xor
fidiv
cmc
dec
and
sbb
sbb
test
add
das
or
ret
test
jne
(bad)
mov
in
jo
xor
dec
lahf
das
xchg
cmp
stos
sbb
loope
lods
mov
sub
shl
sbb
daa
jg
adc
mov
repz
mov
int3
je
inc
ss
inc
dec
lahf
dec
xlat
rcl
shl
leave
lds
sub
ds
lds
mov
sbb
(bad)
fistp
les
add
dec
xor
inc
call
mov
xchg
cmp
jle
xor
sub
jbe
fist
ret
mov
jmp
call
lahf
sar
repz
xor
es
ins
xor
add
sub
gs
call
leave
lods
stos
pop
sbb
mov
mov
ins
mov
ret
push
int3
xor
mov
jbe
sbb
push
stos
cmp
lahf
fstp
out
mov
add
dec
mov
dec
popf
mov
jbe
mov
fnstsw
adc
mov
ins
cwde
(bad)
jmp
test
cmc
jmp
push
fwait
sub
ror
xor
or
lds
fist
add
mov
mov
jne
jnp
out
adc
fadd
xlat
and
cld
shl
push
out
ror
fcomp
pop
mov
lods
in
mov
mov
push
xchg
mov
fidiv
adc
add
jp
and
pop
loope
out
mov
stos
in
ret
pusha
sub
es
adc
jnp
repz
shr
loop
and
iret
in
rcl
(bad)
dec
jl
test
sub
repnz
push
jno
jno
dec
nop
mov
jbe
ret
lods
test
push
mov
sbb
les
sbb
pop
jno
mov
or
mov
xchg
loope
pop
and
mov
pop
or
push
push
mov
addr16
js
es
inc
int
sti
and
int
ss
mov
mov
pop
ins
(bad)
add
jbe
test
(bad)
cmp
and
call
test
mov
or
push
xor
imul
inc
arpl
fdiv
shl
push
loop
push
adc
mov
(bad)
imul
sti
or
pop
ficomp
cli
sahf
cmc
test
pop
xor
jno
dec
sahf
push
pop
retf
imul
push
mov
xorps
pop
mov
xor
adc
fst
cdq
mov
sbb
cmp
sub
xchg
out
and
mov
and
sub
xchg
in
push
adc
or
fadd
and
adc
push
cmps
(bad)
dec
push
pop
test
das
jl
cmp
mov
xchg
cmps
pop
cs
inc
and
cmp
cdq
loope
mov
cmp
cmp
pop
jns
rcl
cmp
mov
pop
leave
fwait
jl
push
out
jg
jmp
sub
(bad)
xchg
ret
enter
sahf
aad
and
xchg
ret
fbstp
inc
fist
int3
push
jp
sbb
xor
jbe
cs
repnz
js
icebp
mov
adc
mul
xor
inc
call
mov
dec
inc
shr
popa
fisubr
outs
xor
push
lock
and
sti
ins
aad
fs
add
pop
idiv
pop
jmp
fstp
leavew
int
cmc
ficomp
or
cmp
test
dec
mov
out
mov
xchg
dec
sub
lahf
pop
and
clc
or
add
inc
not
pop
and
push
jne
and
fwait
sti
fcom
jmp
fdiv
xor
dec
cmps
sar
mov
jb
mov
and
call
dec
clc
xor
mov
or
jne
cmp
or
iret
adc
ins
push
ror
xchg
and
or
fcmovu
into
out
jns
data16
(bad)
imul
sahf
mov
lds
push
ret
int
cli
xchg
or
dec
xor
or
dec
retf
into
sub
ins
xor
loop
sar
outs
or
mov
or
repnz
xchg
mov
sbb
inc
pop
jl
imul
enter
push
les
dec
cmps
cwde
lods
push
add
(bad)
mov
xlat
arpl
or
dec
jg
les
fdiv
cli
dec
inc
cmps
pop
fwait
(bad)
popf
xchg
inc
shr
xor
add
xor
pop
pusha
sub
inc
dec
xor
push
sub
jo
fist
add
xchg
pop
(bad)
push
mov
enter
idiv
sahf
jb
fistp
cli
cdq
nop
jg
ds
xor
inc
cmps
fsub
push
sbb
fiadd
inc
dec
mov
cmc
mov
ret
es
push
outs
push
shr
outs
adc
adc
rcr
sbb
popf
mov
jecxz
nop
jle
repnz
cld
aas
dec
bnd
xchg
cmp
addr16
pop
mov
imul
add
mov
mov
xchg
scas
xor
mov
mov
push
add
adc
or
push
sti
mov
sub
loope
mov
xchg
pushf
and
push
dec
push
cmp
pop
dec
mov
or
or
je
jle
and
sbb
clc
in
fldcw
idiv
lds
mov
sti
lods
scas
pop
or
dec
cdq
pop
sbb
hlt
xor
or
cmp
int
xchg
movs
stos
and
xor
mov
shl
pop
aad
xchg
rcl
inc
lea
pusha
enter
jno
scas
loopne
sub
aas
cdq
adc
mov
jmp
or
adc
sbb
jae
dec
loope
cwde
mov
(bad)
sahf
sub
adc
xchg
mov
mov
scas
popf
dec
shl
xor
mov
scas
loopne
push
xor
pop
jns
mov
mov
cmps
enter
retf
test
mov
es
out
mov
add
or
test
and
inc
inc
movs
(bad)
pusha
fist
adc
stc
cmc
xor
mov
fwait
sbb
xchg
xchg
dec
lods
scas
sub
mov
dec
js
test
scas
in
dec
(bad)
sub
xchg
aaa
leave
mov
and
pop
js
jne
sub
mov
add
pop
aam
stos
cmps
pop
popf
pop
push
jge
xlat
es
mov
adc
hlt
mov
arpl
dec
scas
ret
push
xchg
push
fs
xchg
adc
shr
inc
inc
push
outs
pop
mov
mov
in
dec
push
sbb
jae
jae
(bad)
and
int3
mov
mov
cmp
sbb
mov
ss
sub
dec
cs
sub
add
sti
add
xchg
jb
and
mov
xlat
addr16
mov
shl
lds
xchg
loope
fwait
cmps
mov
das
fistp
addr16
jmp
jp
mov
ret
sahf
push
xor
push
jge
fcomp
fdivr
mov
cmps
push
sub
dec
test
adc
out
imul
es
out
push
lea
sbb
mov
pop
aas
mov
and
dec
movs
cmp
jp
or
cli
fstp
jne
aam
mov
and
or
das
cmp
mov
bound
add
xchg
add
(bad)
mov
or
outs
(bad)
repnz
mov
fild
push
mov
push
xor
and
cmps
repnz
fnstcw
inc
aad
sub
inc
(bad)
dec
test
es
sbb
mov
xor
push
cmp
adc
int
(bad)
cmps
xchg
pop
or
mov
add
sbb
jg
xor
sbb
fnstsw
sub
pop
adc
dec
out
popa
pop
cmps
inc
inc
or
retf
adc
sar
in
pop
lea
push
scas
mov
inc
rol
ins
shl
in
mov
jl
mov
jp
adc
int
sbb
pop
lahf
or
inc
xchg
les
pop
or
loopne
sub
dec
call
(bad)
(bad)
mov
cmps
inc
inc
std
mov
call
sbb
add
xor
lock
cmp
mov
sbb
dec
pop
in
call
mov
xor
out
push
xchg
icebp
jp
adc
mov
fwait
into
jmp
xor
jecxz
sub
jb
out
jmp
dec
add
pop
ret
mov
nop
mov
adc
add
jno
xchg
or
icebp
sub
xchg
ret
xchg
push
test
dec
pop
cmp
xchg
mov
dec
and
cmps
cmps
xor
in
and
(bad)
fstp
fidivr
ror
dec
(bad)
push
mov
sti
sub
cmc
xchg
xchg
cmps
push
ror
cli
fisttp
daa
je
pop
inc
mov
or
imul
and
pop
cmp
xor
ds
xchg
repnz
fimul
pop
sbb
fs
mov
scas
push
cmp
cs
dec
add
das
aaa
xchg
mov
add
inc
mov
out
js
paddusw
jns
mov
les
leave
out
add
pop
ror
fcmovnu
leave
js
dec
js
xor
xor
adc
mov
cmp
into
addr16
mov
in
xchg
sbb
dec
in
cld
push
pop
xchg
dec
push
or
loopne
mov
aad
push
push
cwde
xchg
rcl
push
mov
sbb
jmp
cwde
fld
bsr
sbb
or
ret
add
int
aas
sbb
sub
adc
jg
cwde
xor
sbb
aad
enter
ret
rcr
sbb
add
cmc
cmp
add
or
adc
inc
repnz
enter
es
sub
jg
mov
mov
dec
mov
mov
cld
out
pushf
int
pop
movs
add
pop
adc
(bad)
scas
jnp
pop
ds
jle
adc
jb
cdq
fadd
cmp
inc
(bad)
and
in
xor
sbb
push
mov
and
call
sbb
dec
hlt
jae
push
xchg
jge
mov
nop
sbb
ins
jmp
add
dec
stc
jecxz
rcr
sbb
pop
(bad)
mov
(bad)
push
(bad)
out
xor
cmp
add
dec
stc
bound
xchg
dec
xor
pop
imul
pop
mov
mov
js
mov
jp
outs
fld
aad
imul
lods
loop
ss
push
out
ror
xchg
mov
xchg
dec
lods
mov
and
mov
adc
nop
or
mov
mov
ins
cmp
leave
xchg
retf
xacquire
jmp
retf
push
mov
cmp
push
add
shl
mov
mov
(bad)
or
test
in
inc
mov
jb
in
nop
jge
xor
inc
or
out
sub
movs
ss
ss
dec
dec
add
jl
mov
sbb
jl
aad
mov
mov
ss
add
dec
pop
mov
adc
pop
cmp
and
fdivp
in
inc
jmp
je
xor
(bad)
jp
mov
jne
lea
dec
push
lods
sbb
xor
mov
inc
or
sbb
repnz
or
xor
jl
push
jp
ds
mov
dec
outs
sbb
or
cmp
mov
out
aam
ins
xchg
test
mov
hlt
cmp
add
jbe
sbb
inc
pushf
fwait
je
pushf
adc
loopne
scas
add
push
dec
push
daa
inc
xchg
xor
repz
and
int
cs
pop
enter
movs
cmc
imul
xchg
add
or
js
call
push
mov
push
dec
jg
push
fwait
sbb
jecxz
loope
loopne
icebp
(bad)
js
sbb
imul
xor
mov
scas
mov
rol
(bad)
fs
lea
inc
ror
fistp
dec
and
and
(bad)
movs
shl
jle
mov
inc
push
aas
es
and
fstp
pop
(bad)
test
(bad)
push
shl
or
add
clc
add
pop
jae
daa
cmc
dec
loope
mov
ret
and
push
retf
div
xor
mov
push
sti
int
cmp
rcr
loopne
xor
or
test
loope
xor
pop
lock
xchg
cmp
or
test
pop
les
add
jmp
(bad)
mov
jb
mov
nop
pop
cli
dec
and
bound
push
cs
(bad)
mov
and
sub
icebp
xor
cmps
lds
dec
call
sar
dec
bound
cmps
xor
test
in
sti
inc
sbb
in
lods
cld
push
iret
aas
out
mov
push
add
mov
rcl
int3
inc
dec
test
xor
arpl
in
push
hlt
lods
xchg
sbb
lds
push
loopne
xor
lods
imul
test
out
cwde
mov
aas
out
pop
adc
pop
sbb
ficom
pop
aam
les
test
sbb
mov
jle
cmc
inc
dec
mov
xor
or
jo
js
aaa
imul
inc
jg
inc
or
pop
imul
cli
xor
push
dec
push
cmp
add
inc
inc
lahf
mov
push
mov
sub
loopne
loop
jp
test
movs
or
jecxz
push
ficom
push
retf
popf
sbb
lods
inc
lods
test
pop
ja
test
imul
div
shl
inc
rcr
rcr
jp
push
mov
jmp
xchg
sub
cmps
inc
mov
cmp
dec
repnz
stc
fdiv
test
add
stc
or
or
shl
pop
xor
popf
out
mov
pusha
je
rol
pop
gs
mov
int3
fs
mov
xchg
ins
pop
bound
adc
add
iret
movs
rcl
pop
jns
fst
jmp
and
in
es
dec
xchg
mov
inc
mov
bound
xor
inc
pop
cld
mov
push
or
adc
(bad)
out
lock
cmp
jae
data16
test
cmp
push
or
aam
sbb
pop
out
add
popf
push
aad
fld
or
cld
xchg
xchg
xchg
inc
stc
retf
and
(bad)
xor
fidiv
cmp
push
data16
cli
cmp
jno
cmp
adc
mov
test
outs
cmp
aas
jo
inc
xor
int3
sub
jmp
push
mov
test
fld
and
sbb
adc
dec
cwde
mov
sbb
jae
mov
rol
pop
(bad)
mov
std
mov
mov
and
test
cmp
cmp
popa
or
push
jb
dec
sub
sbb
dec
sbb
mov
cld
pop
mov
and
retf
out
xchg
xor
aam
retf
jns
enter
push
int3
sub
mov
iret
add
inc
push
fnstenv
mov
mov
arpl
aam
jp
fistp
test
adc
fmul
sub
xchg
jle
fidiv
and
sbb
xchg
mov
xchg
mov
std
retf
adc
cmp
call
dec
(bad)
mov
daa
cld
fadd
xor
push
(bad)
loopne
mov
mov
xor
sahf
push
and
movs
mov
ss
and
dec
push
movs
dec
and
fcomp
and
ror
push
lds
push
jno
loopne
cwde
cmp
loop
dec
adc
jae
rcl
pop
cli
mov
mov
test
fild
ins
jns
inc
data16
(bad)
cmp
sbb
dec
xchg
mov
xchg
dec
je
ret
clc
pop
jb
adc
in
or
jbe
xor
inc
cs
mov
mov
rol
pop
sbb
mov
push
pop
mov
mov
sti
ins
stc
push
mov
sub
ja
xor
sub
adc
movs
dec
out
in
outs
rol
popf
sbb
cmps
xchg
push
mov
adc
mov
xor
div
and
inc
nop
cmp
bnd
in
sub
out
adc
push
popa
jae
mov
bound
mov
and
lea
mov
stc
or
jb
mov
retf
sub
pop
and
push
xchg
rcr
mov
repz
jne
jecxz
aad
(bad)
in
mov
cmp
mov
pop
or
mov
rcl
gs
retf
cmp
add
cmp
pop
mov
and
mov
cmp
hlt
push
cmps
mov
scas
sbb
xchg
(bad)
jae
xor
pop
adc
fsubr
mov
int
addr16
and
pop
adc
pop
xchg
fsubr
adc
cld
lock
(bad)
push
add
inc
cmp
enter
cld
sub
(bad)
setl
movs
pop
lods
repz
pop
imul
xchg
shl
jecxz
sub
xor
ror
jbe
aas
mov
xchg
push
ret
cli
mov
mov
ds
clc
xor
aad
iret
arpl
mov
mov
(bad)
cs
out
jmp
push
add
pop
mov
push
call
push
jle
test
push
cli
ja
pop
ja
stos
jnp
jge
out
stc
mov
dec
jmp
cmp
cld
pushf
and
stos
popf
sbb
ret
inc
pop
repnz
cmp
and
out
(bad)
cmp
fidivr
add
push
jns
cwde
ror
sbb
or
mov
pop
sar
inc
or
loop
jo
(bad)
mov
adc
dec
mov
mov
xor
jecxz
xor
jp
(bad)
data16
je
push
dec
inc
pop
pop
jae
jmp
mov
bnd
mov
jbe
js
sub
mov
or
mov
les
ja
pop
pusha
inc
shl
je
repnz
mov
or
and
fiadd
or
ss
(bad)
jae
mov
ret
adc
inc
int
stos
jmp
bound
xchg
popf
adc
(bad)
test
dec
push
pop
call
ret
inc
cmc
test
arpl
jle
sub
(bad)
ins
repz
rol
inc
add
daa
aam
shr
mov
pop
cmp
test
lock
fimul
imul
sub
lds
daa
loop
sbb
aas
ss
xor
and
cli
and
xchg
push
ret
sub
adc
iret
inc
in
inc
mov
ret
mov
retf
dec
sub
mov
pop
mov
adc
cmp
jmp
adc
mov
scas
jp
cmp
cdq
push
(bad)
nop
dec
xchg
fdiv
add
retf
int
mov
dec
fs
inc
xor
rcl
lds
outs
lods
aaa
adc
mov
cmp
jge
mov
inc
js
ret
and
mov
aad
cmps
and
mov
mov
iret
push
stc
jmp
dec
add
push
mov
xchg
inc
and
add
and
cmp
sub
pop
inc
xchg
pop
xor
mov
lods
sahf
xor
aaa
sahf
pop
add
daa
imul
mov
jb
cmps
rol
scas
dec
call
icebp
cs
xor
lahf
fiadd
mov
mov
test
dec
push
clc
jae
jb
cmp
adc
cmc
lea
(bad)
mov
sbb
(bad)
pop
je
sub
(bad)
sbb
mov
lea
sbb
add
mov
gs
sub
fdivp
xchg
xor
dec
sbb
push
fld
mov
sahf
test
push
lods
mov
test
xchg
add
jg
aaa
fs
dec
xor
lock
dec
mov
dec
adc
xor
and
xor
and
(bad)
cmp
add
pusha
test
int3
or
mov
jno
inc
adc
sbb
jbe
(bad)
enter
jge
lea
add
ins
cmps
cmp
mov
(bad)
fsubrp
mov
nop
(bad)
(bad)
sbb
add
loope
sub
mov
std
stc
push
inc
repnz
daa
xor
mov
dec
cdq
hlt
ror
sbb
mov
mov
jl
jbe
hlt
fwait
push
call
retf
stos
pop
mov
pop
in
addr16
jns
pop
jmp
outs
outs
gs
aaa
cld
aam
push
jecxz
mov
je
rol
fwait
adc
add
xor
ins
cmps
mov
mov
adc
cs
rcl
cmp
xchg
sub
sub
repnz
cmps
pop
push
sbb
mov
aad
out
mov
mov
aaa
or
mov
sub
sub
xchg
stos
push
add
imul
push
sbb
jp
shl
and
setl
jo
inc
mov
cmps
xchg
add
fs
xchg
jns
arpl
cdq
jnp
xchg
sbb
setp
jge
and
push
adc
daa
into
add
jns
cli
mov
mov
pop
jle
mov
test
(bad)
xor
test
fsubr
or
stc
inc
dec
cmp
fnstsw
push
dec
xchg
test
push
dec
mov
lahf
lock
popf
outs
fstp
jb
cmps
sub
xor
adc
dec
cli
in
repnz
add
mov
in
fcom
out
aas
jl
ja
xchg
sub
xor
not
in
mov
and
loopne
in
ins
mov
aad
outs
dec
jp
push
add
push
and
rol
jge
add
pushf
daa
loop
mov
xchg
cs
xlat
xchg
movs
add
out
or
pusha
and
push
ds
and
add
repz
jl
mov
or
sbb
mov
xor
pop
ss
cmp
jl
ja
mov
inc
fidiv
dec
mov
retf
idiv
int3
call
(bad)
mov
adc
fbld
dec
fisub
jl
ret
test
sub
adc
mov
push
sub
xor
push
or
inc
push
xchg
in
call
mov
jp
pushf
int3
or
ror
inc
aam
sub
pop
mov
push
sbb
lock
out
aam
push
bound
xchg
enter
jno
scas
sub
sbb
retf
xlat
add
adc
cld
fs
mov
adc
mov
adc
fmulp
jecxz
out
fbld
mov
shl
mov
int
aam
test
jmp
iret
aam
lods
scas
in
mov
cmc
jb
mov
cmp
ret
fnstenv
lods
(bad)
cwde
cmc
sbb
sub
test
mov
rcr
adc
dec
add
mov
mov
out
sbb
cmp
inc
inc
(bad)
sub
jnp
pop
and
je
pop
jmp
xchg
fs
push
ds
fadd
retf
jno
mov
inc
xchg
cdq
inc
(bad)
mov
jns
mov
std
daa
jb
lahf
inc
mov
jmp
loopne
adc
inc
push
xchg
cmps
and
mov
inc
sub
test
mov
fpatan
pusha
sub
(bad)
dec
mov
sahf
retf
es
inc
ss
clc
pop
push
xor
push
cmp
mov
inc
mov
sar
aas
mov
push
sub
inc
and
dec
cmp
or
cmps
xor
add
mov
xchg
sub
retf
push
mov
pop
adc
test
stos
daa
rcl
dec
aad
mov
scas
pop
jbe
and
scas
ret
cdq
in
adc
cdq
mov
and
retf
fprem1
pusha
pusha
mov
dec
adc
cdq
and
xchg
xlat
ret
jo
xor
retf
cmp
jle
lea
pusha
fmul
jae
cmp
inc
test
fst
or
inc
in
mov
sbb
mov
rol
ins
jae
cwde
popf
xchg
cmp
repz
rcl
xchg
mov
je
hlt
inc
lock
scas
jne
scas
cmp
jp
outs
aas
loopne
sub
scas
bound
outs
sti
inc
lds
repz
in
cmps
jp
out
sub
ss
inc
fnstsw
push
jg
push
adc
mov
mov
dec
jl
mov
adc
inc
and
jbe
mov
xchg
jae
rcl
outs
(bad)
nop
and
push
ds
mov
data16
pop
call
pop
jnp
ret
lods
(bad)
xor
stos
or
imul
jl
mov
pop
mov
push
leave
ins
aad
cdq
loopne
pop
fcmove
inc
jecxz
xchg
cmp
jmp
push
aaa
pop
adc
push
ins
jecxz
jb
sbb
and
xchg
push
push
add
nop
push
clc
jnp
lods
outs
or
mov
pop
in
or
sbb
clc
mov
or
xor
gs
mov
add
pop
stos
pop
and
sub
mov
mov
outs
mov
(bad)
cli
sbb
lods
mov
jecxz
xor
inc
mov
mov
inc
and
rol
or
adc
mov
es
std
cmp
ds
inc
pop
xchg
pop
(bad)
js
push
and
or
lahf
adc
dec
pop
inc
leave
pop
pop
mov
data16
pushf
push
and
je
add
retfw
aas
loop
sub
adc
pop
outs
(bad)
(bad)
clc
push
inc
pushf
cvtps2pi
pop
retf
in
xlat
punpckldq
mov
mov
idiv
popa
jne
xchg
stc
inc
test
sub
dec
adc
or
pop
jbe
fstp
into
ficomp
mov
push
in
fnsave
retf
(bad)
cmp
lds
push
mov
push
(bad)
mov
loopne
mov
jmp
addr16
cmc
add
inc
and
push
test
xor
lea
cmp
xchg
jb
retf
mov
push
adc
add
xchg
mov
xchg
jbe
adc
xor
iret
dec
mov
test
out
retf
sbb
(bad)
neg
xor
mov
mov
push
pop
mov
dec
sbb
scas
aaa
dec
sbb
lds
and
sahf
push
fld
sbb
mov
push
adc
fstp
lock
pop
enter
out
stc
jmp
sbb
or
xor
imul
mov
outs
dec
jg
adc
adc
test
scas
imul
cmp
push
adc
jb
inc
inc
ja
jge
cld
fs
fsubr
adc
aam
mov
adc
fisttp
and
(bad)
jnp
and
sub
push
(bad)
mov
mov
aam
jecxz
outs
inc
mov
sbb
loope
mov
dec
mov
add
lea
cmps
push
mov
mov
gs
dec
sbb
popa
cmp
int
mov
pop
mov
pop
loop
shl
icebp
or
jp
pop
mov
stos
inc
xchg
inc
outs
test
cmp
add
in
and
jl
adc
imul
mov
aaa
jns
mov
mov
(bad)
adc
(bad)
in
xor
xchg
mov
inc
inc
pop
fnstsw
mov
ret
and
mov
sbb
and
push
clc
sbb
or
vmread
mov
push
adc
mov
inc
push
sbb
pop
adc
and
pop
push
pop
ficomp
mov
imul
iret
add
sub
aad
jno
out
xchg
xor
(bad)
pop
push
pop
mov
mov
data16
test
pop
cli
mov
xchg
xchg
loopne
mov
adc
sahf
xchg
sbb
out
pushf
js
loopne
inc
cwde
test
lds
adc
js
enter
inc
adc
jecxz
adc
jns
ret
cs
fmul
dec
cmp
adc
jp
mov
dec
dec
jmp
sub
in
push
sbb
retf
mov
cld
sbb
ror
mov
clc
sub
adc
pop
push
lock
push
fdivr
call
xor
dec
into
adc
into
mov
mov
adc
pop
shl
sub
outs
pop
into
xchg
jecxz
js
mov
or
dec
dec
xor
(bad)
ds
pop
push
xchg
jb
loopne
shl
lahf
jmp
cmc
mov
cli
test
cwde
add
mov
jge
cmc
inc
push
cmp
out
cmps
jo
adc
or
dec
loope
or
loope
mov
and
mov
xchg
movs
xchg
inc
mov
call
push
repnz
bound
in
mov
into
push
add
push
pop
retf
lds
sbb
popa
inc
adc
out
inc
test
loope
lahf
in
mov
fmul
xchg
inc
je
push
push
mov
enter
cmc
jb
out
push
dec
ffree
adc
mov
ret
xchg
adc
loopne
pop
xchg
inc
add
imul
push
js
mov
xchg
fadd
push
pop
jb
mov
sbb
ins
ret
adc
loope
imul
retf
scas
jg
xchg
repnz
and
stc
das
or
lods
in
jno
out
sbb
xlat
in
jecxz
jns
fcomp
popa
pusha
mov
outs
iret
jmp
dec
cmp
frstor
jnp
cmp
xchg
xchg
addr16
jp
push
xchg
mov
out
push
dec
dec
push
lea
pop
test
cdq
xchg
out
call
inc
(bad)
mov
mov
mov
push
ins
repnz
sub
test
xor
std
sbb
fs
(bad)
(bad)
xchg
shl
inc
movs
xchg
inc
loopne
inc
xchg
cdq
pop
retf
lods
out
dec
cld
sbb
js
add
rol
and
sub
test
test
dec
jne
scas
push
jg
mov
sub
sahf
mov
jecxz
or
cmp
out
rcl
dec
push
rcl
mov
jb
ret
sbb
pop
leave
cwde
(bad)
mov
loope
dec
imul
jns
and
or
jae
aaa
stos
adc
mov
sbb
test
mov
std
pusha
fptan
in
xchg
dec
jg
mov
dec
dec
sar
adc
(bad)
xchg
lds
adc
sbb
xlat
popf
stos
in
lahf
and
sbb
cmp
movs
ret
add
and
shr
icebp
mov
inc
mov
nop
fld
test
cdq
inc
jle
push
adc
dec
fst
in
inc
scas
pusha
cmp
jo
add
loopne
add
push
in
push
add
jg
jb
xchg
imul
addr16
outs
mov
mov
mov
dec
jl
xchg
jmp
cmps
add
test
ret
(bad)
fadd
xchg
in
cmp
adc
repz
in
pop
fsubp
gs
push
ror
sbb
ins
sar
jno
loop
pop
arpl
loopne
dec
sub
xor
call
jmp
adc
sbb
test
jne
call
pop
cmps
sbb
mov
ins
mov
movs
enter
lods
(bad)
cmp
or
inc
scas
mov
aaa
cdq
lods
dec
fst
ds
je
adc
jecxz
scas
popf
push
dec
das
loopne
push
fldcw
and
mov
popa
inc
rcl
mov
aad
sub
mov
js
mov
scas
test
int3
push
rcl
stos
leave
cmc
xchg
neg
and
je
js
sub
mov
adc
pop
inc
jb
push
fst
loop
jnp
dec
sub
xchg
(bad)
stos
xor
or
scas
ja
scas
in
jmp
xor
dec
(bad)
sub
cmps
jle
push
fld
or
fidiv
pop
inc
test
cmps
sbb
pushf
push
mov
fild
ins
jne
push
(bad)
or
jbe
pop
aad
xchg
cmp
cvttps2pi
cld
lock
mov
push
xchg
pop
pop
stos
add
push
pop
jmp
xchg
sbb
arpl
sti
mov
sub
cmps
mov
mov
call
mul
popa
pusha
in
ror
jmp
dec
dec
cmp
retf
xchg
push
retf
or
shl
cmp
iret
mov
out
inc
ins
mov
cli
push
dec
enter
cmp
mov
dec
fwait
and
pop
pop
push
ds
dec
enter
dec
(bad)
cli
retf
in
imul
cmps
dec
ret
xor
pushf
dec
in
pop
sti
pop
or
mov
jge
and
in
jae
ins
test
imul
les
scas
fs
ret
lods
xchg
mov
shl
xchg
out
add
and
add
adc
and
push
aas
imul
imul
in
mov
and
repnz
dec
and
and
cmp
outs
xchg
xor
test
cmp
adc
sbb
and
cli
stos
aaa
sbb
inc
pop
inc
mov
scas
test
adc
and
(bad)
push
mov
in
push
jae
inc
jns
ret
test
push
inc
repnz
push
or
cwde
mov
das
fwait
push
(bad)
cmp
sar
jg
fmul
xchg
ds
loope
loope
sub
daa
cmp
push
rcl
and
or
retf
add
xchg
cmp
mov
ja
xchg
int
fldenv
jne
pop
in
fidiv
adc
hlt
cmp
inc
and
lock
pop
xchg
mov
xchg
int3
push
fmulp
or
cmp
mul
push
mov
rcl
sub
pop
sbb
imul
inc
adc
and
push
rcl
fidivr
inc
inc
mov
sub
stc
rol
inc
jne
pop
cmps
ret
addr16
repz
fimul
dec
int3
push
cdq
xchg
cmps
sbb
jbe
std
sbb
pusha
or
pop
in
pop
cmp
mov
jo
cdq
retf
mov
fadd
pop
mov
shl
fistp
repz
push
sub
mov
loopne
sbb
jecxz
add
sbb
ins
in
jne
mov
fist
jmp
xor
ss
frstor
sahf
mov
mov
or
jns
jmp
xchg
(bad)
fisubr
dec
pop
mov
push
dec
retf
xor
icebp
and
sbb
(bad)
bound
dec
mov
jns
loope
mov
ss
xchg
jmp
mul
stos
stos
(bad)
xchg
mov
fstp
jmp
or
mov
and
dec
mov
in
fdiv
(bad)
loop
mov
xor
call
dec
xlat
jle
retf
add
cmps
xor
add
clc
inc
xor
int3
push
cmc
adc
cld
enter
ins
pop
push
pop
or
xchg
int3
inc
pcmpgtb
inc
dec
mov
les
test
mov
(bad)
(bad)
call
(bad)
jno
sbb
sbb
test
fistp
das
ror
loop
mov
movs
xchg
xor
jno
fs
xor
loope
xor
fs
stc
fmul
outs
adc
in
push
push
ins
pusha
mov
stos
hlt
dec
in
inc
(bad)
and
into
inc
add
(bad)
stc
loope
push
jo
dec
call
bound
xchg
mov
int3
mov
loope
adc
aam
dec
or
fidiv
outs
stos
pop
xchg
cmps
cmps
js
inc
fbld
mov
and
add
add
xchg
dec
adc
jmp
mov
xchg
out
retf
mov
and
ret
or
fistp
add
movs
inc
inc
fwait
jno
sti
sar
jge
xor
xor
push
push
add
xchg
jmp
mov
int
cli
mul
or
adc
adc
repz
(bad)
and
mov
ja
jmp
push
xchg
and
sar
repnz
ss
pcmpgtd
nop
ret
call
inc
test
xor
fscale
add
test
movs
loopne
idiv
and
jnp
movs
xchg
mov
wrmsr
icebp
jmp
retf
cmp
add
lahf
mov
dec
stos
dec
ds
std
pop
mov
out
xor
data16
lds
cmps
xchg
cmc
adc
(bad)
sbb
adc
sbb
adc
(bad)
mov
push
pop
dec
ins
xor
test
loope
inc
iret
or
and
mov
stc
dec
cmps
or
and
mov
jle
jo
push
xchg
jne
adc
or
sbb
sbb
pop
and
lock
fcomp
inc
xchg
in
sahf
mov
fbld
jo
mov
out
or
xchg
cdq
mov
push
mov
rol
(bad)
mov
inc
inc
enter
xlat
jmp
pop
pop
push
xchg
mov
mov
dec
or
or
dec
mov
and
ret
xchg
sub
adc
ret
enter
leave
in
test
jmp
pop
xrelease
xchg
sub
fwait
push
mov
xchg
mov
add
pop
stc
lds
les
int
pop
xchg
mov
loope
jmp
xlat
leave
xchg
jecxz
mov
lock
cli
lods
leave
xor
loop
jge
or
fs
icebp
das
shl
and
sbb
icebp
(bad)
out
pop
or
inc
cmp
mov
or
sub
xor
adc
lea
sar
sub
fidiv
test
dec
lock
add
lock
(bad)
dec
sub
push
repnz
test
mov
cmp
and
cdq
mov
and
inc
movs
data16
fmul
inc
adc
test
sbb
in
(bad)
out
hlt
iret
jb
nop
add
scas
sti
sar
aaa
out
out
popf
test
(bad)
cwde
in
call
xchg
stos
xchg
test
bound
mov
xchg
addr16
rcr
push
jmp
shrd
pop
jl
cmp
shr
push
out
aas
std
add
call
inc
nop
xchg
fadd
mov
sub
adc
mov
dec
push
scas
fdiv
cmp
retf
mov
add
ficom
xchg
jl
mov
or
jge
mov
stos
fistp
imul
pop
stos
xchg
jb
push
(bad)
sbb
inc
mov
push
or
addr16
mov
add
sbb
or
inc
push
ja
(bad)
rcl
sar
pop
mov
int3
popa
dec
or
sbb
pop
div
adc
mov
data16
fwait
in
je
aam
std
aad
xlat
mov
aam
sub
cld
push
xor
xchg
pop
loop
ss
and
dec
call
mov
pop
call
cwde
std
pop
ret
push
fbstp
lods
lea
jae
push
std
(bad)
and
test
test
es
lea
pop
shl
(bad)
mov
imul
or
fmul
push
test
jmp
or
sti
enter
mov
pop
push
sub
xchg
in
ror
sbb
mov
inc
sub
add
xchg
and
jae
jecxz
push
xchg
adc
jge
xchg
fdiv
mov
cmp
fisub
add
ins
(bad)
mov
hlt
pop
inc
mov
and
aam
pop
mov
in
int3
loope
js
pop
popa
fcmovbe
inc
mov
or
lahf
cmp
loop
adc
inc
pop
ss
inc
sub
sti
leave
popa
xlat
or
scas
sub
ja
repnz
mov
cmps
in
cli
gs
pop
sbb
cs
push
cmp
in
daa
cmp
jo
mov
imul
push
jo
arpl
mov
and
fiadd
cmps
ret
rol
xlat
or
mov
iret
add
movs
mov
not
dec
push
mov
pushf
loopne
push
test
aaa
sub
jne
aam
pop
popa
into
idiv
pop
adc
neg
xor
lea
nop
or
jecxz
cmp
mov
outs
xor
fs
in
xor
push
xor
addr16
mov
gs
fwait
stos
jecxz
outs
test
xchg
add
dec
cdq
push
mov
aas
mov
mov
rcr
or
imul
pop
sbb
pop
jge
retf
sbb
(bad)
mov
mov
add
xor
shr
dec
ja
xchg
jns
nop
data16
or
in
popf
cs
push
ds
mov
and
sbb
not
rol
pop
push
cmp
jle
mov
aas
fsub
fwait
sbb
pop
cmps
int
mov
hlt
push
cmps
or
ins
mov
xor
sbb
sub
pop
repnz
mov
cmp
pop
cmps
push
mov
sub
repz
add
out
rcr
mov
add
cwde
test
lahf
aas
stos
cmp
stos
jp
fimul
cld
in
fadd
pop
mov
cmp
mov
mov
inc
xchg
scas
and
cmps
pop
gs
push
add
mov
adc
xor
jle
mov
mov
(bad)
int
addr16
adc
test
cmp
inc
popf
jl
jle
cli
cmp
ret
inc
and
cld
mov
sar
cld
scas
and
xchg
mov
rol
xor
sbb
cmp
inc
scas
imul
mov
adc
cdq
(bad)
repnz
push
movs
jmp
push
daa
dec
popa
je
add
retf
inc
popa
push
fadd
(bad)
sub
jmp
and
cmp
test
add
retf
dec
lahf
and
dec
les
repz
xor
aam
sbb
inc
cmp
add
cmps
xor
sub
pushf
pop
or
jle
ds
or
cmp
or
sub
or
fldl2t
sbb
xchg
jecxz
int3
xchg
mov
pop
popa
inc
xchg
mov
repnz
stos
push
adc
sub
push
popa
mov
sub
push
in
mov
mov
push
and
cmp
inc
fcomip
push
mov
mov
mov
fwait
jmp
mov
mov
mov
xchg
cld
adc
cmps
xor
xchg
popa
cmp
test
fldcw
(bad)
lock
mov
pop
cmp
add
(bad)
int
mov
cmps
ins
imul
out
loope
sub
sbb
fbld
or
lods
repnz
rcr
inc
pop
(bad)
(bad)
pop
pop
pop
xor
adc
test
sbb
les
rcl
dec
repnz
sbb
push
(bad)
xlat
in
gs
push
ds
pop
push
shl
jge
xchg
add
imul
in
sub
pop
(bad)
sub
fistp
lods
inc
fwait
sbb
out
(bad)
add
mov
mov
xchg
mov
movsx
cwde
xchg
in
inc
xchg
push
mov
add
leave
lods
fld
in
or
pop
shr
mov
cmps
loop
xchg
jmp
inc
mov
add
pop
jo
les
push
jmp
pop
cmp
and
adc
shr
sbb
xor
cmc
mov
mov
cmp
fsub
push
sti
gs
push
xchg
es
pop
call
sar
cli
bound
clc
inc
fadd
dec
xchg
adc
cmps
or
mov
fcomp
aas
add
mov
test
sbb
addr16
or
std
jp
ret
add
inc
push
jae
ffreep
popa
outs
test
mov
or
sbb
aad
push
mov
popa
mov
ret
adc
dec
in
lods
sub
hlt
int3
fild
je
sti
and
jl
mov
or
lods
push
mov
cmp
inc
daa
jbe
xor
cmc
cdq
inc
mov
gs
loope
test
je
cmps
or
bound
push
mov
cmp
repz
cmp
cmp
jne
push
push
mov
mov
sub
les
mov
stos
jl
mov
jp
xor
mov
mov
mov
add
adc
sbb
ins
or
fadd
(bad)
fidivr
cmp
sub
scas
retf
out
pop
mov
sbb
xchg
lods
sti
rcr
sbb
(bad)
and
inc
scas
hlt
cld
push
jge
pop
popa
cmps
push
cmp
sub
jnp
lods
xor
pop
rcr
mov
cmp
jp
jmp
mov
retf
sbb
outs
adc
xor
adc
outs
les
cmp
ret
add
stos
xchg
inc
sbb
shr
sub
jnp
push
mov
sbb
add
movs
dec
push
xchg
ret
ss
adc
mov
sub
cld
outs
popa
cs
jmp
cli
cmc
in
outs
inc
add
adc
ds
inc
ja
fwait
aad
loope
(bad)
arpl
push
(bad)
out
arpl
mov
xlat
out
sbb
and
psraw
cmp
mov
add
loopne
pop
mov
arpl
adc
fcom
add
push
out
outs
jno
or
test
je
mov
aam
test
jne
mov
inc
das
lods
inc
inc
adc
mov
pop
leave
adc
jle
clc
cld
xor
mov
mov
fst
lods
push
fnstenv
push
(bad)
fnstenv
dec
fsub
into
rol
imul
xchg
adc
popf
(bad)
adc
sub
es
(bad)
fsubr
enter
stc
cmp
xor
imul
nop
sbb
cmc
jbe
lods
push
scas
movs
and
xchg
xor
sub
enter
ins
xchg
mov
cld
cmp
outs
inc
push
pop
es
or
sbb
rcl
sti
jp
outs
pop
adc
pushf
sbb
sbb
ret
repz
push
mov
push
xchg
fsubr
movs
fcomp
daa
neg
push
push
and
movs
out
stc
jbe
pop
ins
aam
push
imul
lahf
mov
loope
dec
cmps
mov
sar
lds
mov
xchg
out
cmp
mov
js
mov
cmp
push
xor
ins
popa
xchg
(bad)
sti
shl
adc
test
xchg
jle
ins
jae
and
pop
das
call
mov
call
mov
add
sub
ins
out
sbb
mov
imul
arpl
and
sub
movs
jl
and
mov
(bad)
push
push
pop
mov
mov
test
jb
dec
jbe
sub
movs
jge
das
sar
sub
loope
call
or
mov
xchg
test
xchg
add
ret
mov
outs
jns
ret
pusha
gs
inc
repnz
cmp
sbb
jl
xchg
call
jne
shl
jae
or
dec
or
cmc
jmp
(bad)
fld
cmp
jecxz
retf
push
mov
test
or
inc
add
adc
push
mov
les
adc
xor
shl
or
lds
mov
out
dec
push
ret
div
leave
fadd
int3
je
bound
movs
fs
adc
lods
jge
dec
neg
loop
dec
and
jb
dec
mov
push
sub
xchg
std
dec
mov
iret
movs
push
and
dec
and
das
add
push
dec
ss
sbb
mov
adc
out
inc
je
add
mov
out
stos
cmp
fcom
xor
(bad)
iret
jbe
dec
lock
or
int3
add
add
aaa
dec
sbb
cli
jno
mov
xor
xor
loope
(bad)
and
dec
jmp
push
ss
pushf
dec
(bad)
stos
mulps
scas
sahf
test
jge
xlat
mov
lods
popf
xchg
and
xor
jmp
push
mov
pop
ins
add
mov
lods
enter
mov
mov
movs
pop
jnp
(bad)
movs
mov
nop
test
jnp
stc
pushf
cdq
in
push
pop
ror
cwde
test
cmp
int3
sbb
fdivr
push
and
les
xchg
imul
std
bound
(bad)
addr16
fcmove
jg
mov
daa
es
adc
mov
popf
pop
pusha
imul
and
xchg
add
or
and
inc
rcl
and
mov
fild
cmps
js
int
jmp
mov
ficom
loopne
add
sub
xchg
inc
sbb
fistp
(bad)
and
into
lahf
dec
aas
ss
add
cmp
ss
das
pushf
mov
or
cmp
fdivr
stos
sbb
and
adc
xchg
cmp
in
in
xlat
in
xchg
movs
outs
pop
xchg
imul
je
pushf
add
lods
jnp
cmp
xchg
into
stc
xor
mov
push
xor
test
ror
es
shr
imul
or
sub
push
pop
fcom
idiv
add
inc
sub
dec
mov
daa
out
cmp
push
dec
ret
pop
nop
xor
nop
pop
or
sbb
jbe
iret
hlt
sbb
add
jmp
sub
pop
xchg
(bad)
dec
stos
and
and
test
pop
push
call
xor
cmp
fnstsw
sbb
lods
hlt
pop
or
fs
xor
scas
in
sbb
pop
gs
xor
push
dec
test
addr16
pop
ret
dec
sbb
mov
cli
jl
mov
inc
add
pop
push
ret
inc
iret
addr16
in
sbb
pop
sbb
sub
pop
repnz
hlt
xor
in
test
add
xchg
mov
nop
bound
or
jl
pop
fwait
daa
and
push
add
pop
jl
cs
mov
aaa
or
add
in
or
cmp
pop
fidiv
js
push
shr
(bad)
jg
adc
pop
imul
shl
rcl
pop
or
push
enter
dec
xchg
inc
adc
mov
mov
cdq
mov
outs
imul
aas
xchg
inc
lods
xchg
jl
cs
dec
cmc
push
mov
mov
or
imul
mul
movs
fwait
outs
data16
popf
mov
(bad)
jl
aas
icebp
ins
inc
pop
aas
js
idiv
xchg
pop
jecxz
clc
push
jo
lock
imul
sbb
outs
and
(bad)
aad
jb
jle
int3
xchg
icebp
in
arpl
js
mov
and
mov
out
std
and
or
shl
jecxz
fstp
adc
cmp
mov
adc
sub
in
dec
ror
mov
sbb
and
lds
aad
cmps
imul
cmc
hlt
retf
out
mov
mov
pop
retf
xchg
lods
push
mov
lahf
rcr
sahf
fstp
sbb
loopne
cmps
int
outs
xor
std
outs
ror
ffreep
sahf
cmp
lahf
sub
cmp
jno
jne
cmps
dec
mov
push
add
jl
push
sub
psubusw
adc
mov
xchg
or
push
mov
push
jle
cdq
inc
pusha
lock
scas
mov
xchg
push
jne
loopne
or
data16
icebp
in
into
pop
pop
retf
out
jb
jae
int
or
ficomp
mov
adc
xor
or
pop
lea
pop
cmp
or
into
sbb
cmps
repz
outs
in
int
bound
pop
in
push
jl
mov
retf
retf
adc
push
fst
jns
mov
jno
sbb
xchg
cli
aad
mov
jb
adc
popf
aaa
leave
push
fsubr
ja
push
cmp
dec
out
mov
loopne
dec
je
sti
xchg
adc
cmp
pop
lahf
test
mov
and
inc
xor
dec
sahf
fcomp
mov
mov
sbb
fisttp
xlat
retf
pop
popa
mov
mov
or
sbb
add
icebp
(bad)
push
pusha
xlat
clc
out
aas
jno
pop
ja
xchg
outs
xchg
inc
shl
stos
add
fs
sti
fsub
and
jg
je
ficomp
neg
sub
lods
mov
ins
or
clc
fwait
pop
call
push
clc
jmp
add
xchg
and
pop
cmp
jb
xor
cmp
inc
or
jg
mov
inc
movs
mov
das
xchg
cmp
xchg
ja
mov
ret
cmc
mov
adc
jmp
jg
out
enter
in
push
cmp
sbb
sub
pop
std
out
inc
jnp
mov
and
int3
popa
lds
mov
icebp
adc
mov
outs
dec
(bad)
mov
and
and
in
inc
sub
and
mov
cmc
push
aad
inc
es
push
pop
ret
(bad)
enter
inc
mov
mov
mov
into
loopne
loope
popf
pop
pop
push
sub
aad
gs
loope
jl
je
jp
pop
fistp
movs
call
lds
or
xor
pop
(bad)
sub
(bad)
aad
sub
sbb
retf
scas
or
(bad)
sti
hlt
fnstcw
mov
out
pop
movs
add
mov
mov
test
into
mov
xor
inc
cwde
jbe
imul
dec
loope
out
add
pop
test
xchg
clc
mov
dec
test
fcmovnb
cmp
fdiv
iret
fld
shl
mov
inc
lods
je
aaa
and
mov
(bad)
aam
movs
fdiv
sub
pop
ret
enter
imul
out
xchg
pop
stc
xor
(bad)
xchg
lea
jmp
dec
cmp
mov
cdq
mov
cmp
push
arpl
outs
mov
push
std
sub
sti
add
and
je
jb
sbb
add
pop
stos
sbb
cs
adc
xchg
pop
inc
adc
mov
pop
inc
mov
cmp
xchg
lahf
cmp
sbb
movs
retf
dec
pop
bswap
xlat
inc
cmps
add
shr
sub
push
mov
(bad)
rcr
sbb
and
push
cli
xor
sbb
xchg
inc
jle
and
mov
cmp
mov
xchg
pop
std
mov
and
test
sub
les
repnz
add
out
inc
(bad)
cmp
outs
jle
cmps
popf
or
mov
add
jmp
dec
(bad)
jno
(bad)
jmp
pop
test
jmp
pop
add
scas
jge
stc
pop
adc
inc
xor
lea
xor
shr
aam
dec
mov
imul
rcl
cs
into
jge
pop
rcr
test
nop
or
inc
fisub
out
movs
fsub
and
repnz
jge
xor
daa
dec
push
add
cmp
enter
(bad)
int
stos
adc
dec
adc
cdq
push
imul
push
jle
xchg
pop
or
pop
mov
ds
and
xor
push
stos
xchg
loop
and
mov
out
mov
fs
call
cli
xchg
rcr
nop
push
std
(bad)
mov
in
in
and
jne
pop
sbb
add
mov
add
imul
jmp
aaa
jns
cmp
mov
xchg
popa
add
cmp
push
fiadd
ins
lods
jnp
mov
jnp
push
lahf
dec
repz
xchg
adc
js
movs
jns
iret
mov
xchg
ror
sti
enter
mov
adc
mov
loopne
pop
ret
mov
ins
inc
jmp
mov
push
pop
ds
push
into
cmc
cld
mov
inc
push
call
pop
movs
dec
loop
pop
cmp
adc
push
in
mov
outs
neg
xchg
and
inc
mov
fcomi
aad
int3
xchg
xor
dec
pusha
sbb
lds
addr16
or
xor
mov
add
cmp
ret
fcmove
add
jae
pop
loopne
mov
sbb
aas
in
(bad)
sti
cld
lods
inc
test
fidivr
add
dec
ret
inc
jle
sub
sar
repnz
jl
aad
pop
mov
out
sub
call
les
add
inc
mov
outs
stos
call
mov
outs
sysexit
mov
mov
pop
fstp
movs
mov
das
xor
scas
push
mov
rcl
cwde
into
pop
mov
xchg
loop
cmps
jmp
push
fwait
adc
jg
shr
pop
daa
pop
push
repz
pop
ror
mov
and
push
jle
mov
sbb
sub
sbb
add
cmps
mov
aaa
push
xchg
add
jg
jmp
jecxz
sti
out
inc
std
xor
(bad)
outs
dec
fild
mov
dec
add
and
pop
sti
rcl
ss
lea
imul
das
das
cmc
not
mov
xchg
icebp
mov
or
outs
fcom
and
dec
cmps
(bad)
(bad)
jl
and
mov
ret
and
out
push
push
(bad)
lds
(bad)
xor
mov
xor
cs
push
xor
(bad)
es
adc
(bad)
int
or
jecxz
adc
dec
lods
out
pop
mov
pop
xchg
and
sar
mov
push
movs
loopne
mov
mov
mov
lods
rol
(bad)
fcomip
loope
fisttp
push
ins
jbe
or
into
cli
and
sub
addr16
int
ret
sub
adc
and
pop
mov
repnz
push
cmp
add
out
mov
add
add
enter
(bad)
or
inc
fst
bound
add
sbb
inc
ja
or
arpl
dec
daa
cmp
out
inc
mov
xor
and
out
adc
lods
mov
mov
jns
push
push
jo
add
loope
(bad)
fs
mov
cs
stos
ja
pop
jg
fisub
mov
enter
dec
shl
jmp
xor
and
xchg
dec
cmp
lds
inc
or
push
or
mov
or
sar
popf
sub
mov
fwait
inc
sub
xchg
shl
push
add
cmp
mov
and
outs
sahf
xchg
pop
mov
pop
adc
cs
pop
jmp
jnp
mov
int
xor
push
cmp
sbb
or
jle
cmp
fistp
jne
push
pop
lods
(bad)
mov
ret
shl
mov
mov
repnz
cmp
leave
mov
cmp
mov
loope
in
repz
ret
stos
jle
mov
ffreep
imul
icebp
loope
mov
retf
idiv
(bad)
sahf
sub
mov
mov
mov
das
int3
xor
ja
cmp
aad
mov
data16
cmps
scas
cmp
test
mov
and
icebp
xor
lea
dec
push
cmps
xor
sahf
and
mov
popf
popf
dec
ror
sub
xor
(bad)
mov
sbb
mov
jle
div
ins
aad
lds
pop
ret
sub
retf
cmps
jns
mov
pop
xchg
sub
mov
and
sbb
xchg
ins
pop
popf
loop
scas
sbb
stos
stos
sub
fidiv
add
pop
aad
pop
dec
xchg
xchg
sbb
push
add
fidivr
sbb
or
ror
jne
bnd
jne
das
ja
aam
mov
movs
int3
jmp
pushf
daa
fild
xchg
jno
jb
shl
push
mov
push
sub
or
daa
jo
cmp
adc
cmp
sbb
or
aas
mov
mov
ja
das
xchg
dec
push
jmp
std
fbstp
std
adc
sbb
ret
mov
pushf
and
dec
movs
cmps
lods
push
jle
push
mov
mov
mov
sub
mov
pop
push
ficom
dec
pop
fistp
fild
clc
add
fwait
stc
sbb
int3
lods
pop
loopne
xor
(bad)
push
in
xchg
ja
push
ins
cmp
fst
push
pop
bound
push
js
mov
pop
dec
shl
gs
or
dec
jmp
loopne
xor
push
mov
repz
pop
fs
push
pop
stc
shl
xchg
adc
fidivr
data16
mov
out
lock
jae
dec
push
inc
push
ret
rcl
aas
or
mov
xchg
in
ret
test
push
adc
adc
mov
js
aas
ins
mov
inc
ror
xchg
out
pop
xchg
mov
push
outs
adc
push
icebp
and
add
inc
popf
popf
fmulp
retf
adc
test
jge
or
cmps
and
jl
mov
cmp
loope
mov
mov
popa
sbb
mov
dec
nop
and
mov
mov
loop
std
push
sub
loope
push
xor
push
lods
jmp
lahf
icebp
bnd
jle
repz
les
cdq
fisubr
adc
push
gs
in
push
inc
out
jp
xor
out
mov
mov
push
stos
sub
pop
mov
pop
lds
aad
das
ret
push
fwait
scas
inc
dec
dec
cmp
adc
arpl
dec
div
xor
xor
loopne
mov
cmps
xchg
dec
xchg
or
std
xor
lea
int
arpl
xor
sbb
or
xchg
and
xchg
fcomp
inc
mov
xor
adc
lods
shl
lahf
test
popw
je
pop
fsubr
dec
sbb
int
out
mov
xor
push
mov
scas
jl
ss
pop
and
out
and
add
and
out
(bad)
jno
imul
mov
sbb
mov
stos
inc
and
shr
pop
xchg
fdiv
out
out
test
sub
push
enter
pop
add
mov
or
fs
arpl
out
pop
sbb
cmp
sub
cmp
and
inc
or
cmps
xor
mov
std
sub
fcomp
in
dec
scas
(bad)
pop
call
mov
mov
movs
int
add
adc
inc
lds
cmp
push
sub
mov
jecxz
add
out
sbb
call
fadd
pop
mov
daa
push
fisub
xor
sbb
pop
sub
mov
(bad)
sbb
jmp
scas
push
sub
mov
jp
lea
mov
inc
mov
xor
cmc
add
jne
loop
mov
sub
shr
jb
jmp
mov
dec
leave
shr
sub
jns
icebp
adc
cmp
pop
sub
sub
ins
je
call
lods
jl
inc
aaa
push
jecxz
lods
xor
sbb
and
retf
lock
cmp
outs
or
repnz
not
stos
mov
add
inc
xor
aas
fadd
push
imul
sbb
cmp
inc
push
mov
in
or
out
js
rcl
adc
nop
pop
pop
pop
xchg
push
outs
pop
addr16
idiv
ss
adc
mov
fs
test
repz
and
fnsave
int3
aam
cmp
jbe
mov
jle
or
pusha
pop
cld
dec
imul
into
in
or
mov
imul
mov
and
xchg
xchg
and
push
ret
stos
test
ret
jae
adc
std
pop
(bad)
les
out
jb
pushf
pushf
ss
or
pop
jmp
xchg
cmps
out
pop
dec
shl
int3
pusha
pop
and
sub
int3
rcr
add
test
lods
outs
lods
sub
cmp
push
test
push
mov
pop
clc
pop
outs
mov
adc
pop
sub
popf
fsub
das
fwait
movs
(bad)
adc
retf
lods
and
and
mov
adc
or
nop
lock
sbb
sti
adc
jns
mov
fs
std
rcr
pushfw
es
xchg
repz
and
push
lahf
sahf
xlat
adc
scas
dec
mov
inc
xor
push
cmp
mov
xor
xor
les
jmp
jnp
sti
jmp
xchg
jecxz
dec
and
add
out
cmp
dec
aas
pop
popf
stos
push
repnz
jmp
(bad)
xchg
xchg
and
leave
ucomiss
dec
movs
jns
dec
fdiv
popf
cs
outs
les
retf
test
xor
and
jmp
fcom
daa
sub
mov
push
pop
loopne
sbb
lock
dec
and
and
(bad)
js
fadd
sbb
cmps
mov
jbe
xchg
adc
imul
fcom
pop
cmp
iret
les
fmul
cmc
cmp
fs
loop
addr16
sbb
inc
push
adc
inc
pop
add
fdiv
out
js
or
mov
xchg
inc
mov
rol
inc
add
ins
test
popa
mov
push
fs
cs
lock
xor
mov
xchg
push
jl
jg
das
sub
xchg
div
aas
xchg
test
lahf
sub
pushf
jb
fmul
jb
push
test
fsub
adc
clc
add
sub
hlt
in
ret
add
dec
ins
inc
xchg
aam
test
mov
cli
jecxz
ins
mov
sub
stc
sub
pop
daa
div
cs
dec
clc
arpl
mov
mov
mov
sub
mov
ins
mov
mov
push
nop
sub
bound
xchg
mov
or
lds
xchg
popf
inc
pop
sbb
add
jno
in
cmp
fisub
jecxz
int3
xor
mov
inc
out
leave
cmp
aad
sar
xlat
pushf
jb
sar
mov
add
int3
sub
cmps
or
mov
std
test
pop
loop
data16
mov
jge
push
adc
xchg
scas
jl
xchg
sbb
std
fsubr
pop
mov
bound
cmp
(bad)
out
les
add
repnz
mov
push
fwait
lahf
pop
retf
fistp
xchg
or
add
retf
in
pop
cmp
jo
add
add
pop
ret
push
or
icebp
(bad)
pop
cwde
data16
lods
je
jmp
jnp
fucom
mov
sbb
ja
jge
push
js
push
mov
shl
dec
popf
cld
xchg
lahf
mov
push
and
into
repz
out
jne
sbb
shl
pop
test
or
clc
sahf
sbb
fisttp
daa
sub
and
mov
in
js
ja
inc
dec
adc
(bad)
lods
cmp
das
lahf
inc
mov
je
outs
fsqrt
aaa
mov
xchg
jbe
aam
push
(bad)
mul
and
inc
test
test
rol
xor
fmul
pop
lock
adc
scas
push
or
in
sbb
cmp
pop
inc
pop
sub
lahf
ins
cli
pop
or
push
inc
mov
imul
pop
shr
push
bound
enter
jno
lock
test
push
(bad)
cwde
fdiv
cwde
loopne
adc
jbe
push
mov
ins
mov
stos
es
repz
scas
rol
std
sbb
mov
push
and
mov
enter
loopne
lds
in
dec
dec
lods
mov
sbb
push
imul
daa
or
sahf
(bad)
clc
out
outs
add
cmps
(bad)
and
ficom
push
(bad)
dec
jno
sbb
ret
inc
(bad)
out
or
sbb
sbb
dec
sub
hlt
xor
inc
lds
pop
(bad)
(bad)
dec
add
pop
jecxz
into
and
fdivr
sti
repnz
pop
cmps
cmc
je
or
leave
rol
jp
aad
mov
repz
jbe
out
sbb
fs
aas
mov
mov
xchg
add
outs
outs
je
sar
sbb
mov
xchg
dec
mov
repnz
mov
push
pop
xchg
cmp
test
mov
imul
xlat
aam
dec
pop
pop
inc
cmp
mov
mov
jb
out
push
pop
sbb
pusha
inc
aam
pop
jo
popf
imul
and
xor
lea
ins
pushw
test
mov
std
add
and
(bad)
pop
(bad)
call
in
inc
js
outs
dec
ror
out
mov
pop
mov
sbb
ret
mov
shl
jns
mov
adc
jns
push
fcomp
mov
jb
das
shl
fucomip
lea
and
mov
push
inc
jae
loope
sub
aaa
aas
(bad)
and
outs
cmp
mov
pop
pushf
jb
sub
cmps
hlt
hlt
mov
aam
rcr
xchg
cmp
nop
(bad)
sbb
fdiv
test
sbb
mov
pushf
les
xchg
bnd
clc
aam
ficomp
mov
mov
repnz
cmp
jmp
imul
pop
adc
cmp
mov
aas
jbe
sti
or
inc
mov
inc
mov
fmul
gs
cmp
xchg
or
cs
fucomi
in
arpl
jle
sub
pop
mov
loop
mov
push
iret
add
neg
push
fld
call
pop
add
jle
push
scas
gs
sbb
dec
stc
jecxz
cmp
inc
xor
cmp
enter
frstor
mov
dec
sub
adc
cmps
jge
xchg
jnp
scas
out
push
ds
adc
arpl
jecxz
in
cmc
inc
js
dec
ss
jmp
test
inc
xchg
ja
mov
dec
add
xchg
nop
shl
movs
jbe
add
pop
ds
iret
(bad)
cli
dec
outs
xchg
ins
xor
jle
pop
rcl
cmps
push
into
retf
mov
push
jp
pop
fidivr
pusha
and
sti
sub
(bad)
iret
mov
add
dec
xor
nop
inc
mov
sub
sbb
jmp
(bad)
pavgb
retf
jecxz
hlt
cmp
lods
push
push
test
in
fstp
scas
(bad)
jmp
cmps
xlat
pop
xchg
sub
mov
cs
mov
jp
test
push
mov
adc
mov
adc
add
xchg
mul
cmp
or
enter
jge
shl
or
xor
ins
xchg
sbb
test
xchg
neg
cmp
ss
repz
clc
stos
js
popf
cs
xchg
cmp
stos
jge
(bad)
lock
jbe
sbb
aad
mov
in
xor
mov
pop
dec
or
mov
sti
enter
add
aad
test
ins
jmp
push
gs
sbb
in
sub
adc
pop
mov
and
mov
icebp
pushf
mov
pop
pop
in
enter
mov
mov
mov
push
xor
mov
ins
lods
call
rcr
and
aam
jge
test
enter
shl
push
call
scas
sbb
sbb
iret
push
xchg
out
pop
push
push
push
mov
cmp
aaa
cwde
imul
out
add
pusha
xchg
into
in
bound
fucomp
mov
xchg
iret
pop
call
fst
jecxz
je
and
mov
add
jge
xor
jmp
jno
mov
sbb
repnz
mov
cdq
in
test
inc
sbb
repz
mov
mov
sub
xchg
ret
out
(bad)
cmp
popa
fdivr
into
or
imul
frstpm(287
leave
mov
sub
ficom
add
aaa
mov
push
adc
repnz
jecxz
iret
scas
popa
add
jg
int3
call
mov
cmp
jecxz
inc
push
mov
jge
outs
sbb
add
arpl
cdq
jecxz
mov
mov
popa
mov
xchg
popa
dec
sbb
push
stos
ins
das
jmp
fld
and
fistp
inc
popa
int
mov
and
bound
cmc
sbb
or
ss
push
xor
je
gs
(bad)
popf
sar
add
sub
shr
lea
mov
mov
test
dec
in
push
xchg
das
mov
cmp
daa
lock
cmps
cmp
cmps
arpl
xchg
sub
aam
test
or
pop
fmul
sub
mov
add
mov
ins
in
adc
mov
jb
push
and
arpl
lods
popa
(bad)
out
sbb
mov
add
ror
sub
xchg
js
mov
jne
out
dec
inc
in
inc
lods
mov
mov
mov
xchg
fprem1
xchg
mov
scas
aad
cwde
and
and
mov
dec
retf
int
pushf
mov
jno
lods
(bad)
in
not
inc
mov
mov
inc
dec
jp
xchg
dec
jno
xchg
sahf
repz
sub
je
xchg
sub
cmp
(bad)
(bad)
int
jnp
jecxz
xrelease
mov
adc
cmp
(bad)
iret
popf
fidivr
dec
pop
jge
std
mov
sbb
jecxz
cmp
cmp
cmc
bound
pop
sub
ss
mul
and
sar
or
sbb
pusha
push
mov
adc
xlat
outs
cs
adc
pop
or
cmp
adc
movs
inc
bound
mov
sub
cmp
test
push
adc
out
pop
cmovb
test
push
add
cmps
sahf
mov
std
enter
lock
sbb
mov
mov
xchg
cmps
cmp
xlat
cs
push
popa
sub
xor
in
dec
mov
js
imul
cmp
jmp
cli
xlat
jg
mov
or
xchg
imul
sub
xor
mov
out
jecxz
or
dec
jo
aas
cmp
sbb
stc
jae
adc
hlt
inc
xchg
pop
pop
add
les
mov
cdq
mov
and
inc
push
dec
or
mov
fdivr
aaa
mov
nop
jle
mov
cmc
out
mov
xlat
sub
and
mov
std
cmp
push
xlat
sbb
bound
shl
sahf
loope
jmp
fcmovbe
mov
std
xor
fbstp
mov
icebp
fadd
lods
xor
repz
sbb
jae
imul
jns
pop
xor
mov
les
xor
or
lods
repz
aad
jne
pop
ret
in
fs
popf
aam
sub
mov
adc
dec
inc
jo
movs
dec
sahf
inc
fst
les
shl
fs
adc
fnstcw
popa
jb
nop
cmp
jecxz
cmp
cli
mov
mov
iret
add
ds
popf
mov
test
inc
adc
jg
sub
ins
in
sbb
clc
adc
arpl
(bad)
pop
jae
aaa
bound
cmp
es
(bad)
loopne
nop
cmps
loope
cs
inc
cmp
(bad)
cmps
xor
push
push
test
aam
cwde
gs
aad
fcom
mov
lock
sar
jo
mov
in
out
shl
mov
nop
jnp
inc
out
xor
pop
cld
mov
xor
xor
and
jns
out
int3
push
xchg
mov
or
ins
dec
pop
rcr
inc
aaa
and
sub
sbb
xchg
xchg
cld
aaa
mov
mov
xor
fs
push
shl
call
out
adc
push
out
stc
cmp
scas
mov
mov
pop
push
int
cmps
lods
inc
fisub
test
xchg
call
mov
and
out
std
repnz
test
xchg
jecxz
cmps
mov
and
in
arpl
int3
mov
sub
cmps
inc
out
mov
cmp
int
inc
add
jmp
arpl
js
jno
pop
out
inc
sub
loop
inc
fisubr
xchg
dec
movs
sbb
sub
pusha
arpl
rol
(bad)
(bad)
(bad)
add
pop
rcr
lods
adc
jae
jmp
sub
shl
pop
imul
sub
cld
xchg
(bad)
xor
ins
lods
xor
mov
adc
cli
aaa
pop
(bad)
cmp
dec
mov
mov
cmp
dec
sar
test
mov
pop
mov
ror
add
and
mov
push
inc
iret
mov
fwait
xlat
push
jmp
push
lods
dec
push
cmps
cmps
dec
iret
iret
lods
sub
ja
stc
sti
arpl
call
sub
push
sahf
clc
(bad)
fidivr
mov
daa
jmp
pop
xchg
fcmovb
pop
cmc
scas
mov
hlt
leave
inc
loop
mov
gs
jns
push
jmp
fld
rcr
adc
dec
sub
test
repz
jo
or
pop
popf
jbe
mov
jnp
jbe
adc
push
lea
cld
xor
test
ret
neg
pop
lods
stos
data16
data16
loopne
dec
jbe
fnstenv
sub
movs
ror
mov
pop
leave
push
jl
ffreep
movs
int3
jnp
xor
push
inc
add
or
sub
sar
lahf
inc
mov
inc
pushf
aaa
cmp
into
je
mov
ss
xchg
adc
nop
mov
cmp
mov
cld
stc
pop
inc
dec
test
and
aaa
mov
test
fist
inc
retf
and
out
push
jns
jo
test
mov
push
sbb
mov
fsub
loopne
mov
out
fnsetpm(287
ror
ret
xchg
inc
shl
push
fisub
ds
les
hlt
sar
dec
sbb
imul
sub
add
neg
ja
xchg
shl
retf
push
imul
sar
stc
rol
das
add
adc
sub
and
out
dec
and
xor
push
js
(bad)
push
push
dec
daa
cdq
xchg
jmp
test
(bad)
rcl
(bad)
xchg
fiadd
adc
push
sbb
or
xor
cmp
jne
mov
sub
jnp
cs
and
and
mov
cmp
mov
push
arpl
inc
cld
mov
mov
cld
pop
cmc
jp
jb
call
call
ss
shr
sbb
dec
neg
inc
pop
cli
and
mov
imul
add
cmp
fld
push
sub
adc
inc
sti
fild
cld
stc
pop
hlt
les
sbb
pop
pop
push
cmp
jns
mov
jmp
mov
or
push
scas
inc
jnp
jg
ret
xlat
mov
in
je
out
sbb
nop
stos
or
mov
int3
(bad)
mov
daa
jbe
call
mov
sbb
push
addr16
adc
dec
mov
outs
pop
loop
push
pop
mov
in
jnp
into
push
mov
pop
cli
clc
xchg
sub
int3
mov
mov
mov
push
mov
and
mov
fidivr
retf
inc
adc
jb
stos
xchg
test
or
ja
pop
or
push
(bad)
push
add
mov
cmp
rol
mov
fs
outs
sbb
mov
or
loop
scas
addr16
or
inc
enter
inc
inc
mov
in
adc
adc
test
xor
adc
and
pop
xchg
fdivrp
out
cmc
mov
xor
or
and
or
int3
lock
ins
mov
popa
mov
sbb
fchs
and
enter
icebp
mov
dec
jns
add
jge
jmp
cli
ss
sub
sbb
(bad)
popf
and
(bad)
das
inc
cmp
(bad)
out
xchg
dec
and
cwde
in
mov
mov
mov
sub
outs
inc
loopne
neg
push
sub
(bad)
mov
ror
and
(bad)
inc
add
jmp
mov
sahf
js
not
inc
xchg
lahf
add
call
push
enter
sub
test
xor
or
jecxz
ret
retf
push
out
fdiv
push
pushf
pop
imul
scas
arpl
mov
icebp
pop
pusha
stos
xlat
mov
jb
pop
loope
mov
or
mov
(bad)
mov
ret
or
sar
rcl
xor
clc
jle
pop
inc
sub
rol
or
push
adc
call
aad
gs
out
push
mov
jmp
dec
adc
ja
fisub
dec
rol
adc
pop
gs
ins
cli
xchg
inc
outs
and
pop
mov
xor
push
cmp
sub
sub
ror
pop
es
jmp
sbb
and
lods
dec
cmp
or
sbb
loop
sbb
cmps
dec
mov
lds
sub
inc
in
pop
xchg
sub
add
stos
inc
mov
and
push
lods
jle
(bad)
mov
cld
pusha
push
and
jmp
xor
cmps
retf
gs
retf
rcr
inc
rcl
inc
std
lock
popa
mov
rcl
and
jb
loopne
cdq
pop
stos
ins
and
hlt
sbb
retf
andnps
out
retf
push
clc
daa
and
popa
inc
(bad)
jmp
fiadd
push
test
dec
mov
out
jecxz
scas
lea
xchg
or
jb
retf
std
repz
ret
adc
cmp
lock
dec
and
or
shl
out
sbb
into
or
loopne
fimul
cmp
ret
movs
js
scas
mov
push
ficom
push
push
or
inc
sar
mov
mov
addr16
mov
ds
iret
dec
ja
(bad)
ss
inc
pop
or
xchg
pop
iret
pop
cmps
stos
sbb
cmp
loope
mov
imul
add
and
cdq
jb
retf
jg
sbb
(bad)
retf
ins
dec
in
test
sti
js
(bad)
mov
icebp
push
sbb
mov
test
rol
in
add
jmp
jbe
jle
aaa
sbb
push
out
repz
sub
cmp
push
int
xor
aad
pop
fs
rol
xchg
inc
and
cmp
out
div
shl
or
dec
es
mov
cmc
rcr
push
jg
sub
sbb
mov
retf
sub
pop
mov
mov
popa
xor
inc
jne
push
cmp
(bad)
cmps
stos
push
jae
repz
out
imul
lds
jmp
mov
imul
loop
es
mov
sahf
cwde
jb
or
into
xchg
sti
popa
add
mov
push
clc
pop
test
in
lea
aaa
dec
rcl
dec
jbe
scas
pop
lods
sbb
in
loope
test
and
xor
jbe
or
and
jp
push
loope
daa
popf
cli
mov
lods
fdiv
or
cmp
dec
push
fild
ret
push
jle
scas
push
ret
cmp
lock
sbb
test
mov
jmp
call
data16
mov
pusha
and
adc
sub
fst
or
push
(bad)
sbb
sbb
test
mov
inc
jmp
jmp
push
sti
mov
sub
in
rcr
fisubr
jg
add
(bad)
pop
mov
mov
in
mov
mov
add
add
repnz
sub
jmp
stos
mov
test
addr16
test
mov
fnstenv
sbb
jp
inc
mov
add
hlt
pop
sub
add
aam
in
mov
push
sub
mov
push
fldcw
and
sbb
fistp
fcomi
dec
pop
movs
add
mov
pop
sbb
dec
(bad)
retf
and
loop
(bad)
popf
sub
cmp
test
outs
pop
mov
stos
sar
cmp
fbstp
fwait
pop
sub
out
test
and
int
mov
mov
js
cmp
and
gs
mov
(bad)
cmp
sbb
and
lea
repz
lea
int
dec
mov
aad
sbb
test
(bad)
lock
dec
cmc
or
push
inc
jb
jo
inc
test
xchg
jg
sahf
sahf
inc
or
leave
dec
stos
cmps
cmc
mov
(bad)
in
iret
jmp
stos
push
out
shl
loop
call
and
mov
cmps
or
add
jmp
jns
sbb
fild
xor
retf
mov
scas
mov
and
ins
sbb
xor
xor
repz
ss
aas
cwde
ins
call
xchg
adc
sub
ins
nop
sub
add
and
mov
sbb
xchg
mov
push
dec
pusha
test
jbe
push
add
retf
aaa
rol
(bad)
jl
shl
es
ret
in
cmp
jmp
shl
imul
cmp
icebp
push
mov
mov
adc
sahf
enter
movs
xchg
in
or
mov
shl
mov
ja
mov
push
enter
cli
cmp
out
iret
inc
mov
cdq
xchg
or
pop
cdq
leave
in
cmp
mov
std
test
scas
push
add
jo
mov
outs
iret
sub
mov
cmp
fstp
and
push
and
mov
cmps
cmp
add
sub
sbb
leave
leave
std
lea
push
pop
jl
pop
fcomp
jne
fiadd
(bad)
loopne
xchg
inc
mov
adc
and
jnp
ja
pushf
xchg
loope
adc
stc
inc
fld
inc
mov
lods
mov
or
mov
pop
sbb
nop
(bad)
xchg
inc
into
(bad)
mov
adc
inc
js
rcr
mov
mov
popf
mov
inc
retf
push
xchg
je
jnp
mov
xor
(bad)
gs
pop
pop
icebp
adc
mov
cmps
pop
sbb
test
mov
mov
dec
into
rep
xchg
inc
mov
dec
xlat
nop
xlat
es
sub
les
mov
retf
inc
lahf
fst
cld
push
mov
mov
add
aam
and
nop
jb
sahf
xor
jnp
loop
mov
fucomi
and
jne
adc
in
mov
stc
rcr
jmp
jg
iret
adc
and
repnz
lods
push
loopne
cwde
and
xor
mov
call
xchg
mov
mov
imul
ficom
jo
call
mov
or
cmp
mov
(bad)
ficom
lds
xchg
push
jb
cmp
adc
jae
(bad)
pop
mov
cmps
aas
jne
mov
test
(bad)
int3
jmp
test
lds
sub
mov
in
mov
xchg
ror
test
bnd
jecxz
jg
pop
sbb
loope
data16
jmp
inc
in
ins
test
jbe
(bad)
scas
mov
xor
inc
ja
xor
push
loopne
mov
push
stc
or
movs
es
cli
sbb
push
pushf
lock
jbe
add
mov
outs
in
call
(bad)
lds
imul
add
stc
nop
fdiv
mov
(bad)
inc
scas
(bad)
cdq
jmp
outs
dec
add
mov
inc
mov
mov
ret
dec
jge
stos
lods
pop
inc
pop
aad
out
xor
adc
repnz
mov
xor
(bad)
push
arpl
xchg
sub
dec
and
test
pop
fistp
or
add
and
and
push
pushf
pop
cdq
xlat
in
popf
mov
retf
and
adc
sbb
ror
fidiv
cmp
ss
pop
mov
jmp
inc
ja
cdq
inc
inc
adc
add
add
adc
adc
loop
sub
nop
jae
(bad)
and
push
sbb
pop
pop
cmc
mov
std
nop
jmp
test
adc
pop
enter
xlat
pop
dec
mov
jo
mov
cmp
pop
push
sub
stos
stc
loop
add
movs
lahf
int
mov
cwde
arpl
loopne
nop
add
dec
xchg
in
hlt
into
call
outs
inc
mov
mov
aad
xchg
aam
aam
xchg
jecxz
hlt
ja
mov
add
imul
lahf
nop
ret
xchg
sahf
movs
push
ds
dec
aaa
test
fisub
sbb
xadd
push
ins
iret
xor
sub
inc
pop
aam
mov
(bad)
pushf
mov
adc
xor
push
jg
jo
dec
arpl
ret
stc
stos
push
dec
in
mov
jecxz
adc
(bad)
jo
pop
stos
mov
imul
addr16
inc
std
das
call
pop
jle
icebp
int
imul
dec
int3
add
adc
cmp
out
retf
pop
hlt
les
leave
jnp
inc
lods
mov
and
dec
mov
add
cmp
out
and
sub
and
je
leave
sbb
ss
inc
add
fild
leave
scas
sti
jge
stc
rcr
cmp
add
and
(bad)
cmp
ja
push
push
pop
sub
cmovbe
add
or
pop
js
mov
xchg
hlt
stc
arpl
shl
scas
dec
sbb
jns
push
xchg
ret
xchg
out
ss
int
scas
add
adc
fs
scas
add
sbb
std
(bad)
push
sub
jmp
movs
xor
out
mov
jecxz
and
adc
test
out
out
inc
and
push
or
in
inc
fld
lods
popf
mov
das
icebp
cmps
(bad)
jmp
xchg
sub
sar
jmp
out
xor
jnp
sub
fist
lock
(bad)
jecxz
retf
or
sahf
mov
fcomp
clc
rcl
xor
ja
imul
inc
loope
retf
adc
in
nop
pop
int3
push
inc
xchg
ds
dec
cmc
call
add
movs
es
push
mov
cmps
jnp
or
aaa
dec
shr
idiv
xchg
es
pop
jge
sub
aam
add
adc
into
inc
aad
adc
in
pop
sbb
pop
aam
int3
add
dec
shl
mov
iret
push
nop
add
mov
lds
mov
xor
sar
mov
add
cmp
or
mov
jbe
hlt
jle
retf
in
loop
xchg
adc
inc
sub
imul
jge
inc
pop
xor
imul
sub
mov
in
mov
stos
jecxz
(bad)
retf
xchg
push
sbb
test
hlt
add
cmp
fst
add
inc
gs
cmps
push
push
or
aam
fsubr
cmp
(bad)
loop
jo
cdq
cmp
idiv
jae
lahf
in
test
pop
icebp
mov
out
push
cmp
and
in
push
sub
inc
cmp
jo
icebp
adc
shr
lds
xchg
inc
pop
in
out
aad
and
mov
xor
outs
cmp
cs
xor
lods
ja
out
fadd
push
push
xchg
jecxz
(bad)
xor
iret
xor
mov
aad
mov
iret
fs
inc
out
mov
mov
mov
cld
loopne
or
jno
aad
sub
xchg
in
cmp
ins
pusha
fst
mov
ins
push
sbb
cmp
popa
jmp
mov
jae
fdivr
push
repz
mov
stos
in
gs
cwde
movs
fnsave
shl
adc
retf
and
pusha
xor
xor
sub
dec
fisubr
adc
cmp
test
mov
mov
mov
ror
jb
or
xor
pop
xchg
in
shl
or
mov
sti
push
xor
push
stos
add
cwde
push
dec
add
sahf
repz
jmp
lahf
dec
xor
push
inc
mov
imul
adc
rol
call
xchg
mov
cmps
jmp
mov
cmps
push
jecxz
ret
jmp
pop
inc
xchg
daa
jns
and
lock
push
in
dec
jne
xor
daa
repnz
shr
mov
jl
fcomp
or
loop
fisubr
sub
loope
sahf
push
add
push
test
mov
jo
jbe
sbb
add
(bad)
jmp
retf
add
xchg
mov
push
pusha
sbb
aam
sbb
mov
jb
leave
mov
cli
sub
repz
jbe
outs
(bad)
data16
jnp
adc
dec
iret
std
push
mov
mov
(bad)
mov
sbb
inc
iret
mov
sbb
sub
adc
add
ret
pxor
es
cmp
jle
push
and
sbb
jecxz
jns
in
inc
adc
mov
(bad)
out
cld
pop
imul
fcomip
mov
xchg
adc
je
js
pop
repnz
xchg
enter
jae
cmp
jl
xor
dec
loop
or
cdq
add
mov
jle
sbb
ror
adc
or
outs
test
pop
in
jae
adc
stos
add
sub
pop
(bad)
xor
das
sbb
xor
pop
shr
ds
pop
inc
lods
sbb
pusha
mov
pop
rcr
cmp
inc
push
out
lock
and
cmp
arpl
mov
push
pop
mov
loop
sti
jmp
jmp
dec
(bad)
lahf
add
inc
xchg
sbb
stc
pop
mov
es
pop
(bad)
mov
mov
cmps
movs
je
sbb
inc
jno
loope
das
fstp
sahf
mov
out
mov
push
and
xchg
adc
mov
dec
inc
jmp
sbb
(bad)
cdq
fwait
aaa
mov
add
std
jg
jb
iret
sub
rcl
mov
push
inc
das
js
inc
adc
adc
or
sub
cmp
das
sbb
pop
cli
and
out
imul
(bad)
enter
or
push
ror
fcmovbe
je
inc
lods
scas
inc
lahf
mov
dec
ds
leave
retf
mov
xchg
adc
lds
xlat
cmp
adc
test
shl
inc
inc
jle
ret
enter
into
out
dec
mov
outs
xchg
push
or
imul
std
add
(bad)
mov
cmc
retf
ss
xor
imul
test
sbb
sbb
inc
rol
outs
enter
fisub
(bad)
mov
repz
xchg
std
retf
ss
cld
inc
lock
or
pop
add
mov
ja
sahf
jno
sbb
inc
into
jno
loope
(bad)
in
pop
lods
int
adc
push
add
div
das
push
rcr
adc
xlat
fidiv
lock
fist
mov
leave
cmp
xchg
dec
iret
mov
jbe
ja
jg
pop
mov
mov
rcr
jmp
jp
pop
retf
daa
cmp
jecxz
sbb
push
inc
mov
xchg
add
mov
or
adc
sub
dec
scas
in
(bad)
in
fimul
xlat
icebp
mov
and
jp
sub
mov
push
and
push
adc
mov
push
sub
out
ins
lahf
dec
pop
xor
sbb
push
and
push
xchg
mov
jp
into
pop
jp
je
mov
test
push
sbb
jmp
sub
add
sub
pop
fdivrp
xor
cwde
lods
stos
xchg
lds
mov
outs
out
inc
sub
inc
scas
dec
cmps
int
cmp
mov
int3
ret
jbe
(bad)
cmp
xor
fisttp
jno
add
push
popa
jmp
adc
dec
jg
sbb
xchg
push
adc
es
ret
cmp
stos
ins
push
or
arpl
jbe
jne
cmp
fdiv
unpcklps
push
cdq
sbb
jbe
cwde
cmp
sbb
cmp
into
int
mov
jecxz
inc
nop
adc
imul
stos
daa
(bad)
pop
add
mov
loop
mov
pop
scas
test
sub
ret
push
add
lock
daa
(bad)
scas
mov
sub
sub
add
mov
mov
fs
fisubr
jl
add
add
xor
pop
(bad)
mov
cmp
iret
bound
push
mov
jle
loope
jae
in
or
(bad)
std
imul
pop
add
mov
and
xchg
cmp
mov
gs
dec
inc
into
adc
mov
xchg
jae
cld
cli
mov
jns
xor
xor
sbb
(bad)
call
stc
sub
inc
push
dec
xor
cmp
outs
je
dec
mov
jl
jl
stos
(bad)
cmp
mov
mov
(bad)
mov
dec
push
js
imul
fmul
test
aaa
xor
bound
pop
xchg
lods
xchg
(bad)
mov
out
sti
int3
jge
jp
(bad)
test
cmp
cmp
mov
lods
jmp
pop
dec
in
js
mov
outs
mov
mov
test
std
popa
(bad)
pusha
adc
mov
aam
in
jmp
push
hlt
and
jle
ret
sar
inc
loopne
(bad)
inc
jp
dec
cmc
pop
es
test
cmps
leave
cmp
scas
pop
daa
out
pop
jae
and
adc
inc
jno
adc
jne
pop
iret
mov
(bad)
aaa
adc
pop
jnp
xchg
fadd
xor
adc
adc
rcr
fcmovnbe
(bad)
and
imul
xor
mov
xchg
ror
scas
cmp
and
mov
sahf
mov
int3
xlat
js
loope
(bad)
addr16
xchg
pusha
jge
das
and
xchg
fldcw
retf
ds
std
dec
jge
or
jge
cmp
sub
xor
add
pop
mov
(bad)
sti
enter
mov
scas
sbb
cli
xor
fwait
imul
sti
aaa
sbb
inc
mov
and
push
mov
rcr
dec
dec
in
shl
xchg
push
ins
push
ja
aad
es
jmp
xor
fisubr
push
xchg
xchg
push
in
push
ret
push
xchg
pop
mov
cld
or
js
fcmovbe
stos
data16
adc
mov
mov
repnz
out
stc
jle
mov
xlat
xchg
into
fwait
xchg
loop
jns
rol
sub
jnp
xchg
(bad)
aaa
jle
icebp
out
mov
enter
retf
pop
pop
mov
aad
adc
xchg
or
addr16
sub
adc
sbb
dec
dec
outs
ins
or
jmp
aas
adc
imul
push
push
mov
outs
push
mov
mov
push
pop
mov
movs
jecxz
shl
shr
lods
and
ds
pop
fisttp
and
sub
pop
cmps
xchg
mov
push
ja
rol
in
enter
mov
and
mov
push
rcr
aad
mov
and
enter
jle
mov
sbb
popa
sahf
leave
mov
retf
ret
mov
jns
sub
sub
call
and
mov
pop
push
neg
stos
mov
inc
call
repnz
mov
daa
and
test
bound
mov
push
xlat
dec
popf
jp
jmp
(bad)
xor
xor
jecxz
test
test
test
add
dec
jbe
jne
jge
in
add
jecxz
pop
pop
fwait
mov
dec
adc
call
jns
daa
smsw
add
inc
jmp
adc
cmp
pop
add
mov
lock
mov
ror
push
pop
mov
ret
gs
sub
push
fwait
pop
xchg
push
bound
mov
or
push
push
mov
ror
movs
gs
aas
int
jmp
jbe
repnz
mov
mov
iret
or
mov
and
(bad)
aam
cmps
outs
adc
in
xchg
mov
or
(bad)
scas
call
cmp
fdivrp
add
data16
lock
idiv
push
adc
xchg
fstp
xor
fcom
sub
nop
mov
push
xchg
call
test
out
lahf
sub
fs
mov
(bad)
cmp
push
imul
mov
in
mov
pushf
and
dec
in
fist
ret
mov
dec
inc
cmp
jne
test
inc
cdq
aam
ss
aam
dec
inc
neg
call
or
inc
fdivp
popa
ins
pop
adc
(bad)
jnp
cmp
sbb
fidivr
icebp
jle
adc
or
imul
in
lock
push
push
sub
pop
pop
jne
sub
push
jge
lock
pushf
mov
add
add
cwde
jae
or
ins
xor
dec
sub
cmp
pop
cmps
mov
mov
xor
cdq
cmps
retf
sub
scas
adc
pop
jo
das
cld
int3
out
jp
fmul
icebp
dec
movs
dec
mov
dec
sub
mov
js
lods
jecxz
xchg
lods
inc
mov
into
or
das
adc
jae
and
mov
rcr
mov
and
movs
icebp
test
xor
js
(bad)
aaa
add
je
aad
mov
ja
cmps
pop
ror
fisubr
in
xchg
dec
pminsw
lahf
ja
stos
data16
mov
outs
xor
dec
and
pop
pop
sub
inc
nop
movs
scas
sub
lds
dec
not
mov
xchg
mov
pop
retf
and
lahf
js
and
pushf
je
adc
imul
mov
mov
push
sub
outs
jmp
shr
fisttp
inc
sbb
push
out
mov
ror
adc
push
nop
or
pop
loopne
sub
addr16
mov
or
loope
aas
mov
pusha
pop
cmp
inc
fnstcw
jno
arpl
imul
mov
nop
or
mov
pusha
jns
cld
xor
xlat
mov
les
shl
fnstsw
xchg
cmps
test
pop
shr
lods
sbb
push
inc
jns
xlat
ins
or
ror
js
ins
frstor
retf
push
pop
dec
int3
add
popa
sub
aaa
pop
mov
repnz
mov
lahf
movs
stc
pop
aad
dec
adc
int3
jb
inc
xchg
mov
xchg
retf
clc
jb
cli
mov
and
aam
arpl
mov
rcl
cwde
inc
mov
inc
test
nop
loope
icebp
xchg
sbb
adc
dec
cmps
push
daa
mov
shl
outs
push
xor
call
lds
nop
sbb
stos
cmps
and
mov
pop
sbb
push
xor
xor
scas
call
scas
mov
sbb
aas
enter
cmp
test
jmp
push
xchg
test
call
into
daa
call
mov
inc
int
push
cwde
js
shl
xor
sbb
xchg
adc
pop
sbb
fdivr
mov
iret
jo
adc
dec
(bad)
push
jno
out
data16
jle
out
xchg
fldcw
iret
fstp
bound
adc
mov
mov
mov
jo
jg
js
sub
aam
mov
pushf
iret
iret
xlat
fist
push
out
sti
test
and
fldenv
sbb
(bad)
test
sub
imul
inc
and
lods
fsubr
jo
cmps
mov
mov
mov
lahf
fwait
cmp
add
fldenv
and
outs
pop
ret
jp
fist
pop
fild
mov
sub
add
xchg
data16
mov
jb
xor
mov
scas
sbb
dec
mov
inc
xchg
or
and
fstp
mov
in
cmp
inc
loop
mov
retf
dec
fs
pop
test
jmp
push
and
pop
add
in
ror
aad
cmovne
data16
pop
das
fcomp
leave
repz
fdiv
push
adc
mov
jo
pop
inc
sub
leave
fpatan
fadd
in
xor
sbb
mov
xchg
fndisi(8087
test
mov
add
shl
fidivr
adc
ret
(bad)
imul
imul
mov
cmp
jecxz
mov
pop
iret
js
jae
jnp
inc
fild
mov
cmp
cmps
rcr
nop
ins
push
cs
lock
loopne
(bad)
hlt
ja
movs
dec
sub
add
(bad)
imul
in
sub
pop
inc
arpl
push
adc
mov
xchg
fst
in
hlt
out
or
lods
sub
movs
dec
pusha
mov
cwde
cmc
mov
popa
fstp
stc
imul
scas
fdiv
sbb
mov
popa
movs
leave
mov
xor
(bad)
xchg
pushf
mov
pusha
retf
scas
adc
fistp
cmp
mov
sub
mov
les
movs
shl
sar
and
imul
jg
sbb
cmp
mov
pushf
or
or
jb
mov
or
das
enter
jge
jnp
and
adc
gs
push
push
pop
dec
jg
retf
inc
dec
frstor
jle
dec
push
jns
add
retf
xchg
es
out
xor
cmc
jo
push
push
inc
int3
pop
sub
mov
jae
clc
cmp
push
jne
outs
ds
ficom
aas
add
adc
or
fneni(8087
jbe
push
test
jae
mov
adc
xor
cmp
outs
add
jl
retf
rol
gs
imul
loopne
or
pop
in
sub
xchg
mov
icebp
fstp
outs
sub
jb
mov
inc
ins
and
scas
add
popf
push
or
push
dec
sub
dec
pop
cmc
mov
mov
jns
(bad)
push
lock
xchg
xchg
test
enter
cmp
or
test
cmps
sub
mov
lods
loopne
or
inc
fsubr
and
add
cmps
jge
movs
iret
push
test
cmp
or
push
jg
sbb
sbb
cmp
dec
push
nop
xchg
cmp
(bad)
stos
call
push
or
mov
inc
shl
cmps
jo
xchg
fld
mov
pop
dec
enter
sub
fucom
mov
stos
sti
test
clc
hlt
push
les
aam
mov
adc
sub
retf
mov
dec
cmp
int
fiadd
dec
test
jo
mov
sub
mov
shl
test
mov
inc
stos
and
div
popf
popf
cmp
cmp
punpcklbw
out
pushw
push
push
xchg
xor
ins
loope
jne
shl
test
lds
jle
add
push
xor
std
xchg
cmc
dec
cmp
cmp
test
cld
mov
lock
sub
mov
xchg
sub
push
push
add
add
bnd
std
xor
and
adc
gs
popf
aas
mov
inc
into
fisubr
nop
push
cmp
ja
or
and
(bad)
pop
fcom
fs
and
sub
stc
and
mov
xlat
add
mov
xchg
jmp
scas
and
fwait
sub
call
dec
lahf
sbb
(bad)
(bad)
mov
int3
mov
arpl
adc
test
xchg
outs
cmp
lahf
jmp
and
shr
ins
sub
jp
xor
out
mov
mov
shl
push
jl
cdq
jle
scas
movs
into
scas
(bad)
retf
and
push
test
cli
aaa
adc
sub
inc
mov
mov
xchg
out
mov
cmp
aas
ret
out
xor
xor
mov
iret
das
fisub
adc
in
cmp
call
fisub
xor
popf
push
les
push
enter
push
bound
aad
pop
pop
cmp
pop
(bad)
sti
add
mov
in
and
pushf
test
test
mov
and
cmp
pop
enter
and
dec
pop
inc
adc
out
outs
int3
mov
jecxz
jecxz
xlat
add
pop
repz
pop
repz
lods
cmp
rol
jmp
outs
pop
movs
test
stos
add
not
xor
out
or
mov
in
call
ins
cmp
out
xchg
sahf
xchg
rol
fdivr
jmp
(bad)
adc
jge
push
push
mov
inc
mov
in
inc
sub
jae
jne
test
mov
in
stos
mov
add
mov
xchg
into
add
call
inc
sbb
outs
stos
test
mov
iret
rcr
jmp
xchg
in
enter
mov
sbb
arpl
adc
or
je
sub
icebp
shl
push
push
dec
retf
cmp
repz
sbb
mov
dec
and
xchg
and
(bad)
call
stc
(bad)
call
add
fnsave
(bad)
jae
int3
not
arpl
call
fimul
push
test
push
sbb
jnp
enter
pop
pop
xchg
loopne
sti
lahf
xchg
or
jl
mov
movs
cmps
xchg
xchg
push
sub
mov
ins
inc
pop
outs
xor
sahf
iret
push
imul
inc
push
jmp
(bad)
idiv
ret
imul
or
out
cld
out
inc
push
adc
dec
pop
js
jle
lock
mov
shr
movs
push
scas
jl
mov
push
cmp
sbb
repnz
arpl
or
ret
in
cli
popa
jo
or
loop
aad
mov
jp
int
das
and
sub
loop
and
pop
lea
das
sbb
stos
int
scas
add
ds
not
or
neg
ret
test
clc
dec
push
int
cld
cdq
mov
lea
shr
xchg
push
aas
add
push
ds
jmp
movs
lods
mov
mov
mov
mov
xchg
stos
data16
int3
sub
jl
leave
xadd
push
retf
xor
out
cld
bound
jne
loop
dec
jg
fcom
daa
lea
int
xor
inc
pop
jb
retf
outs
jae
inc
sub
fcmovnbe
ds
fistp
sbb
pop
push
add
sub
inc
adc
jno
add
cmps
mov
inc
cmp
les
xchg
mov
jle
repz
jp
xor
or
shl
push
sub
pop
dec
jns
or
xchg
aam
xchg
cmps
sar
add
clc
sbb
jl
pop
clc
push
ins
in
push
ja
stos
push
and
scas
xchg
or
lds
and
ret
lahf
push
das
sub
inc
mov
push
adc
add
shl
shl
aas
cmp
mov
xor
mov
adc
mov
sbb
add
xlat
jnp
mov
or
pop
outs
cmps
xor
pop
cmp
leave
lods
pop
(bad)
es
cmp
mov
bound
nop
in
push
addr16
jb
arpl
dec
adc
pop
outs
int3
push
ret
add
aam
adc
cmp
mov
inc
imul
inc
push
into
push
sub
hlt
enter
dec
ret
or
mov
retf
fild
and
call
pop
pop
jmp
repnz
ds
jbe
xchg
xchg
call
mov
dec
and
cld
dec
cmp
leave
mov
fmul
sbb
jae
addr16
imul
bswap
mov
mov
add
aam
pop
cmp
std
dec
stos
mov
or
stc
cmp
push
cmp
sub
add
in
push
mov
imul
clc
push
fcomip
cwde
scas
(bad)
fbstp
push
mov
out
sub
sar
ins
mov
mov
jp
pushf
push
pop
out
adc
fisttp
in
dec
xor
cld
lock
and
mov
mov
xchg
sbb
jl
xchg
mov
xchg
fxch
sub
out
ins
push
sbb
pop
popa
sbb
mov
lds
and
jmp
cmp
icebp
repz
rcl
lock
cmps
push
(bad)
pop
fucomip
lods
pop
adc
popa
ins
clc
dec
jg
cmp
add
or
hlt
test
out
xchg
jmp
nop
cs
sub
mov
and
into
sub
shufps
movs
and
dec
inc
call
ins
push
popf
lds
test
mov
jo
cld
push
neg
dec
or
sti
ins
push
cwde
push
push
fs
outs
and
test
imul
(bad)
repnz
cmc
sahf
out
mov
cmp
push
cmps
xchg
fisubr
jbe
int3
cmp
xor
mov
aam
ret
nop
imul
xchg
daa
ret
xor
sub
inc
jns
sub
into
inc
daa
cmps
jmp
sub
ret
cmp
jp
jb
cld
pop
sub
lahf
cmp
dec
push
pop
mov
cmp
scas
outs
repnz
(bad)
out
adc
ds
dec
add
mov
jae
xchg
mov
jmp
cmp
sbb
shl
inc
fmul
sbb
jl
jmp
das
xor
fs
js
(bad)
jmp
out
xchg
and
loope
mov
outs
pop
setbe
cmc
cmp
and
jg
pop
nop
mov
inc
push
iret
js
call
fwait
popf
and
add
pop
pop
dec
cs
push
mov
or
mov
jmp
or
inc
add
movntps
inc
loop
mov
jp
not
mov
call
aaa
mov
xor
imul
loope
mov
movs
push
call
push
jmp
mov
fsubr
cmp
pop
xor
lods
pusha
sbb
adc
sbb
sbb
lea
fadd
sbb
and
or
cmp
mov
mov
(bad)
add
mov
lods
pop
jmp
imul
imul
repnz
das
pop
adc
loop
push
pushf
adc
shl
or
mov
fisttp
push
test
daa
jne
fcmovnu
xchg
push
fdivr
ret
jo
sbb
push
and
test
jb
mov
repnz
test
iret
sub
scas
out
push
das
shl
loop
jl
or
popa
loope
adc
aaa
aad
out
call
add
cld
mov
icebp
add
lods
ret
mov
lock
sahf
pop
mov
call
xor
and
push
sbb
les
loop
mov
sbb
push
inc
repz
out
cmp
push
mov
xchg
mov
or
leave
lea
mov
test
add
dec
fst
cmp
cmp
xchg
or
shl
adc
cmp
js
cmp
sbb
cmc
jl
repnz
rol
test
test
or
arpl
(bad)
addr16
sbb
dec
add
pop
ds
push
arpl
popf
ret
push
mov
inc
and
ja
mov
sbb
xor
jmp
sbb
jl
mov
pop
outs
fld
ret
fsubp
jae
push
popf
clc
pusha
xchg
(bad)
je
mov
dec
and
xor
dec
ss
fs
sbb
or
inc
dec
cmp
sbb
stc
mov
push
pop
fidivr
mov
sbb
xchg
cmp
mov
(bad)
enter
test
aam
shl
mov
xchg
cmps
jns
data16
and
push
fwait
cmp
lds
mov
cmps
mov
fs
lods
jge
scas
push
rcl
cli
aad
mov
add
push
jl
jp
xor
dec
lock
inc
clc
pusha
adc
in
adc
cld
lock
cmp
inc
and
cdq
mov
(bad)
sbb
dec
adc
xor
mov
ja
cmp
inc
shl
mov
dec
push
push
in
(bad)
jne
in
xchg
sahf
out
lds
ss
jmp
jmp
pop
sub
pop
pop
stos
mov
mov
mov
outs
pop
dec
adc
inc
idiv
fmul
mov
ins
mov
rcr
jo
push
mov
jne
push
loopne
imul
push
jmp
inc
or
jbe
(bad)
stos
or
int
(bad)
ror
clc
test
xchg
repz
push
adc
fisttp
or
add
inc
lods
mov
dec
out
xor
sar
shr
cmp
stos
(bad)
sti
mov
je
mov
loop
es
adc
mov
cmc
dec
cmps
push
sbb
sahf
or
retf
mov
or
jl
sbb
shl
retf
mov
push
push
bound
jmp
pop
lock
rol
in
pop
cli
xchg
pop
outs
sub
loop
ror
fld
into
cmps
shl
mov
imul
inc
mov
pop
out
adc
jae
sub
jecxz
and
ja
cmp
jo
sbb
cmp
aas
push
push
idiv
(bad)
xor
call
rcr
xor
add
shl
inc
test
pop
dec
or
je
mov
rcr
jp
(bad)
std
ret
xor
mov
pop
inc
loopne
mov
push
push
adc
jecxz
outs
push
mov
bswap
pop
jmp
add
xchg
sub
inc
je
mov
push
or
dec
les
imul
push
adc
push
cwde
sbb
mov
push
and
aad
dec
retf
inc
mov
pop
ror
mov
mov
ret
aam
and
jecxz
jns
jnp
mov
mov
and
out
sbb
mov
mov
adc
cmps
test
retf
fmul
sbb
xor
mov
sbb
pop
fidiv
or
adc
and
out
out
jle
mov
inc
cmp
ins
pop
push
(bad)
out
sub
cmp
jle
cmp
es
pop
or
pop
mov
test
xor
jns
and
jnp
ret
int3
mov
xchg
mov
jge
fild
and
dec
mov
stc
retf
inc
jecxz
adc
imul
mov
or
cmp
pop
jo
adc
outs
pop
retf
daa
cld
dec
xchg
test
outs
jmp
mov
add
in
mov
fstp
ror
xchg
inc
test
and
in
and
scas
inc
add
pushf
js
pusha
scas
ds
pop
jns
jl
add
cmp
inc
mov
(bad)
ja
pushf
lock
enter
pushf
test
sbb
xor
pop
retf
mov
sbb
xchg
lahf
lahf
test
jg
push
mov
std
fisubr
setb
scas
cmp
std
scas
cmp
std
sbb
leave
leave
sbb
mov
retf
into
sbb
inc
mov
xor
in
adc
jno
cs
pushf
mov
pop
ss
add
repz
xor
mov
in
jnp
push
pop
stos
mov
jmp
jge
out
cmp
sub
or
loop
stos
xchg
das
jmp
mov
cmp
adc
xchg
push
mov
cmp
push
cmp
imul
sar
jmp
jmp
or
push
push
lods
or
mov
stc
cmc
cwde
lds
jmp
daa
mov
and
movs
inc
fsubp
mov
jmp
add
and
das
mov
cmp
test
dec
xchg
inc
mov
(bad)
mov
ret
daa
outs
adc
sbb
fsub
(bad)
jmp
int3
mov
mov
jo
(bad)
and
into
jp
mov
stos
jmp
mov
and
sbb
push
xchg
push
and
add
out
loopne
hlt
xchg
sbb
lahf
jo
fcomp
pop
add
stos
xor
pusha
mov
sbb
ret
jne
push
stc
dec
lock
sar
imul
lea
xchg
and
xor
xor
outs
add
pop
adc
mov
retf
sbb
lods
cmps
in
mov
xchg
sbb
jb
pop
mov
push
inc
ins
add
inc
push
dec
sub
push
mov
push
adc
and
adc
or
scas
cmp
jmp
mov
retf
add
push
or
mov
push
std
cmp
aaa
(bad)
jnp
inc
es
cmp
sub
inc
sahf
xchg
add
fwait
(bad)
fmul
popf
pop
pop
call
xor
mov
inc
fist
popa
jp
mov
inc
inc
clts
lods
dec
or
mov
loope
bound
cmps
xchg
test
fwait
sbb
movs
sub
in
test
inc
not
xchg
fwait
sbb
fstp
enter
jmp
pop
sub
sub
aam
sbb
mov
xor
pop
cmps
sub
xchg
out
jmp
loope
push
scas
sub
inc
push
or
jp
shr
cmp
(bad)
js
push
ret
push
mov
push
mov
cwde
sbb
hlt
pop
or
sub
push
pop
mov
xchg
jmp
mov
inc
adc
repz
fcomp
mov
or
xchg
adc
mov
nop
sub
in
jmp
mov
test
les
lods
sub
xor
sub
call
cmp
xchg
mov
pop
mov
pop
xor
shl
push
aad
loope
cmp
inc
jnp
sti
jno
lds
ins
repz
dec
add
bound
lds
test
jl
iret
comiss
push
inc
mov
jmp
aaa
xor
push
push
xor
cmp
aam
(bad)
pop
(bad)
pop
and
xor
loop
ja
cmp
cmc
add
fimul
cmp
clc
and
and
cmp
ins
mov
mov
cld
ret
ret
stos
sbb
stos
jae
pop
shr
xlat
pop
ins
sbb
fs
das
in
mov
mov
jb
ds
xor
ds
mov
xchg
mov
int3
adc
cmpxchg
shl
fs
icebp
mov
xor
dec
mov
std
fld
(bad)
mov
fimul
rol
ret
push
add
imul
push
gs
(bad)
push
xchg
leave
ins
mov
pop
test
adc
dec
test
push
jmp
ins
in
test
sbb
popa
pop
hlt
mov
add
test
dec
sub
mov
or
dec
leave
push
mov
sbb
inc
sar
add
loop
mov
idiv
retf
mov
in
nop
cmp
mov
dec
cmp
mov
mov
xchg
dec
jnp
(bad)
mov
cmp
test
inc
xlat
cmps
arpl
jmp
retf
cli
or
cs
fisubr
mov
jnp
fbstp
xchg
repz
into
ret
popa
test
inc
out
test
mov
fadd
push
dec
ds
mov
pop
pop
aam
xchg
ins
inc
pop
cmp
adc
lock
push
push
(bad)
cmp
(bad)
cmps
into
aas
adc
jnp
mov
xor
cmp
ins
adc
jmp
dec
push
bound
pop
inc
sbb
cmp
(bad)
mov
and
cld
popf
popf
(bad)
fisub
mov
in
push
lods
imul
std
sbb
inc
fstp
imul
into
inc
das
aaa
mov
mov
aam
int
lods
pop
(bad)
push
xchg
lods
aam
push
xor
pop
add
lods
inc
int
or
push
dec
ins
inc
sbb
iret
jmp
outs
scas
sub
icebp
fld
ds
ror
sub
jbe
inc
and
sub
jge
adc
icebp
enter
jnp
and
inc
sar
mov
and
fmul
cmp
out
hlt
inc
cmps
dec
sahf
lds
mov
clc
data16
jl
mov
mov
or
inc
push
loop
mov
sbb
push
pushf
sbb
lock
in
cmp
mov
xchg
dec
mov
jo
push
in
shl
sar
pop
shl
and
adc
pop
xchg
adc
xor
lods
sbb
call
retf
sbb
lds
addr16
sub
cs
popf
dec
and
neg
inc
in
or
inc
sbb
inc
dec
out
retf
mov
sbb
sub
xchg
cmp
sub
xchg
mov
aaa
inc
nop
mul
mov
js
test
and
inc
cli
mov
dec
cmp
lds
ss
(bad)
jmp
and
and
fnstenv
icebp
push
sbb
addr16
cmp
fwait
retf
jp
rcr
int
in
in
lods
xor
xchg
pop
sbb
stos
jo
dec
sysexit
idiv
lahf
ud1
loop
int
xchg
enter
je
jnp
enter
add
sub
fiadd
dec
pusha
and
inc
(bad)
inc
or
fcomp
jmp
pop
addr16
pop
fisub
xor
mov
test
jmp
add
cmc
dec
or
inc
xchg
shl
js
int3
mov
push
mov
jecxz
mov
imul
jo
sbb
call
retf
and
dec
pushf
adc
inc
jns
js
sbb
mov
xchg
mov
mov
mov
sub
mov
mov
push
adc
sub
push
pop
pop
adc
mov
sbb
cmps
mov
fcmovbe
dec
ins
int
push
jecxz
mov
mov
inc
jo
clc
xor
aaa
icebp
je
dec
add
sub
xor
dec
fist
push
jmp
add
(bad)
push
clc
dec
out
adc
inc
sub
int3
(bad)
xchg
inc
out
pop
jecxz
dec
xchg
arpl
xchg
gs
nop
push
cdq
leave
fbstp
add
push
jno
iret
dec
cli
jge
add
push
test
push
jge
dec
or
xor
push
or
inc
xchg
mov
in
add
mov
jg
and
stc
xor
or
push
jmp
iret
(bad)
aam
jg
pop
xor
xchg
lds
adc
push
stc
shl
into
pusha
pop
dec
stos
retf
out
xchg
push
and
hlt
imul
xor
xchg
addr16
pop
jl
popf
xor
mov
add
retf
jmp
cmp
ja
and
lea
loope
and
fistp
lahf
in
push
and
push
shl
les
push
shl
fs
cwde
retf
cli
inc
xchg
daa
inc
arpl
scas
cmps
out
cmp
add
das
ror
sub
ja
sti
ds
test
xchg
icebp
repz
in
dec
ficomp
fist
pop
js
jnp
test
fisttp
fadd
clc
outs
enter
xor
mov
dec
loopne
inc
inc
adc
out
gs
lahf
add
jae
pop
rol
sub
cmp
sub
ror
or
cmps
mov
inc
and
mov
stc
(bad)
mov
lahf
outs
add
mov
push
sar
mov
into
in
nop
out
sub
or
popf
lds
xchg
scas
add
gs
inc
sub
arpl
push
and
xchg
mov
xchg
cmp
push
repnz
and
movs
mov
retf
cwde
xchg
sbb
xchg
stc
aam
add
ror
cmp
lds
retf
call
sub
stc
sahf
pop
aaa
mov
inc
aad
scas
xor
out
pushf
repnz
addr16
push
xchg
test
mov
xchg
ins
aas
and
mov
aad
icebp
mov
add
sbb
add
push
js
int
xor
bound
(bad)
mov
jnp
rcl
or
sbb
add
dec
movs
mov
mov
and
gs
or
inc
data16
mov
add
xchg
push
cmp
loopne
ins
daa
in
cld
cmps
ffree
ins
mov
pop
sbb
ret
lods
mov
inc
push
repz
sbb
cmp
ficomp
into
sti
mov
mov
gs
(bad)
dec
stos
popa
lods
test
lods
mov
mov
lahf
jmp
mov
dec
out
scas
cdq
xchg
adc
mov
pop
sbb
add
fnstenv
mov
mov
xchg
jg
bound
xor
mov
fnstenv
lahf
jge
fstp
and
push
push
adc
cmps
jae
mov
pop
mov
jl
mov
dec
cmc
dec
mov
pop
data16
adc
aam
push
iret
jo
xor
jp
xor
jno
test
mov
mov
das
stos
adc
and
add
push
push
push
(bad)
fstp
fcmovb
mov
mov
inc
push
mov
mov
mov
imul
jb
mov
scas
ror
mov
xchg
int3
adc
pminsw
mov
cmc
test
mov
mov
loopne
dec
and
mov
and
inc
xor
and
mov
jns
cmp
jge
jnp
test
lahf
jns
pop
adc
ficomp
aas
test
fist
pop
adc
clc
js
movs
mov
outs
sbb
rcl
push
pop
jns
and
bswap
and
imul
sbb
movs
outs
enter
(bad)
inc
jp
pop
sahf
test
pusha
(bad)
std
(bad)
ins
jae
(bad)
hlt
not
ins
pop
in
shr
and
inc
or
mov
cmp
sti
nop
xlat
pop
icebp
jge
or
(bad)
(bad)
push
inc
icebp
add
outs
adc
cdq
sbb
fdiv
or
cmps
jns
cmp
retf
xchg
add
xor
scas
cmp
cmc
inc
repz
sub
mov
neg
leave
test
ss
in
jle
mov
inc
cmps
push
xchg
iret
sbb
int3
push
(bad)
cmp
add
xor
and
fst
pop
xor
dec
xchg
mov
popf
pop
mov
sbb
adc
push
movs
stos
in
sahf
in
data16
cli
js
jo
addr16
pop
shl
test
stc
mov
cmp
fisubr
dec
mov
cwde
lods
mov
mov
int3
push
dec
xor
(bad)
outs
bound
in
fstp
mov
adc
pop
mov
bound
mov
jl
enter
jg
xor
adc
and
sar
mov
adc
push
sbb
dec
sub
mov
in
out
mov
ror
jg
pop
and
movs
adc
gs
das
les
je
inc
enter
bound
xor
jge
aad
neg
iret
push
cs
xchg
sub
inc
sbb
imul
dec
adc
rol
icebp
inc
push
call
mov
inc
and
sub
nop
xchg
inc
or
push
pop
mov
call
push
pop
sbb
ja
ja
test
cs
dec
clc
add
(bad)
push
cdq
mov
inc
adc
mov
or
xlat
pop
pop
pop
mov
jge
stos
data16
or
and
lods
shl
cmps
push
fidiv
xor
inc
dec
test
popa
(bad)
aas
xor
in
push
(bad)
mov
test
dec
in
dec
cmp
lahf
cmps
and
fld1
push
stos
(bad)
ficomp
pop
jl
cdq
push
xlat
fnsave
dec
or
je
ins
shr
inc
cmp
mov
jle
mul
cmp
xor
cmp
call
jg
mov
aas
pop
pop
aas
xchg
arpl
not
push
fs
sub
mov
pop
or
out
dec
jns
not
adc
ja
test
lock
push
adc
or
mov
mov
fwait
into
mov
sahf
inc
push
push
push
sahf
dec
add
sbb
fdivrp
imul
cs
out
cmp
xchg
clc
in
popf
icebp
aam
movs
fild
mov
ss
pop
xor
mov
arpl
fnsave
dec
add
adc
fisub
inc
sub
xor
fs
stos
adc
in
and
cmp
dec
mov
fadd
jno
movs
jle
jb
and
sahf
ja
call
stc
fdivrp
inc
jns
stos
push
dec
jmp
les
xor
ins
pop
jnp
(bad)
pop
stc
and
test
jmp
loopne
jecxz
cmp
and
(bad)
lock
add
(bad)
lock
nop
pop
jo
mov
add
call
int3
(bad)
in
cmp
push
(bad)
mov
ret
scas
(bad)
cwde
sub
mov
jnp
inc
xor
cld
pop
sbb
mov
jmp
pop
lods
adc
aad
sub
push
in
data16
arpl
es
ret
adc
cmp
xor
cld
or
xchg
inc
aaa
pop
in
movs
push
mov
stos
or
out
and
lods
cwde
or
dec
out
pop
inc
push
fistp
call
xchg
xchg
jge
in
les
iret
or
and
repnz
sub
retf
dec
sub
xor
jge
inc
aam
push
and
dec
in
mov
ror
jecxz
push
sbb
(bad)
hlt
sub
lahf
jle
aad
pop
push
sub
(bad)
hlt
test
or
cmp
pop
(bad)
outs
retf
sar
jle
ror
add
ds
inc
push
and
ficom
int
scas
sahf
xor
stos
leave
pop
cwde
adc
(bad)
(bad)
fiadd
sub
mov
call
jno
test
aaa
xchg
cld
(bad)
fimul
stc
shl
enter
add
dec
mov
jns
nop
dec
aad
adc
cmp
test
mov
xorps
add
sub
sar
dec
std
jnp
aad
adc
sbb
fadd
and
xchg
add
jl
push
jmp
(bad)
mul
cmp
pop
dec
xlat
mov
add
dec
pop
xor
gs
and
sub
sub
icebp
dec
xchg
jne
and
retf
popa
adc
out
and
rcl
jb
mov
aaa
scas
inc
adc
hlt
js
in
popa
into
retf
pushf
neg
sbb
mov
test
jo
scas
sub
aad
inc
jns
push
ret
stos
sub
call
sub
aaa
push
ret
adc
repz
mov
jecxz
push
add
call
inc
push
fld
jle
pop
push
dec
pop
or
repnz
sub
and
mov
not
addr16
and
scas
inc
add
lods
or
in
int3
retf
push
inc
mov
sub
je
std
fst
push
jno
fs
pop
dec
add
xchg
fcmovnbe
int
push
xchg
mul
adc
in
and
cmp
or
cmc
xor
dec
or
mov
fwait
cdq
inc
adc
add
sar
jae
dec
mov
shr
xchg
and
jb
pslld
jmp
adc
sbb
inc
adc
cmp
pop
rcr
ffree
xor
or
lock
cli
xchg
jae
out
sbb
ret
push
jns
mov
jne
mov
mov
and
mov
cwde
xchg
push
ret
inc
scas
jl
xor
lea
inc
aaa
in
int
mov
mov
(bad)
in
(bad)
mov
mov
xor
inc
test
xchg
sub
push
jb
mov
ror
(bad)
cmp
rol
xchg
and
test
in
mov
imul
dec
ds
lahf
test
fs
call
push
inc
dec
(bad)
(bad)
jnp
ficomp
and
push
mov
movs
icebp
dec
or
mov
jmp
mov
in
inc
dec
popf
fwait
shl
push
push
pop
ss
shl
push
cwde
out
sub
iret
retf
cmp
cli
(bad)
cmp
jne
sbb
hlt
ins
push
push
mov
add
mov
movs
push
jge
adc
jne
in
xchg
sub
adc
sbb
cmp
push
icebp
dec
mov
outs
idiv
les
mov
add
lahf
test
sbb
data16
mov
neg
out
xor
xchg
shl
iret
(bad)
jb
mov
mov
pop
or
in
neg
inc
mov
out
cmp
idiv
add
xchg
daa
vcvtpd2dq
jne
xchg
sub
fisubr
out
push
mov
fimul
enter
cmp
or
outs
jno
mov
mov
sbb
adc
push
push
jl
ficomp
imul
inc
loop
ins
sahf
dec
or
icebp
arpl
(bad)
scas
aaa
xor
cdq
dec
cwde
mov
cmp
int3
dec
push
jmp
push
cs
imul
push
cmps
rcl
dec
dec
pop
cmp
inc
(bad)
pop
outs
or
push
pop
neg
xchg
add
cmp
arpl
daa
push
or
leave
xor
in
pushf
cli
cdq
xor
cmp
xor
mov
cmps
repnz
call
mov
adc
out
loope
jno
push
in
test
jne
cmps
shr
imul
nop
inc
jbe
push
xchg
fucomi
push
enter
sub
sti
dec
sbb
cli
push
icebp
xor
icebp
enter
xchg
push
inc
lea
out
pop
push
pushf
xchg
jmp
pop
push
add
pop
in
add
sbb
jmp
inc
mov
mov
xchg
stos
ror
int3
repz
or
cmp
lock
repnz
xchg
xchg
ficomp
mov
into
stos
inc
push
add
pushf
and
inc
clc
mov
call
jnp
inc
sbb
cmps
and
fadd
rcr
inc
js
arpl
sti
iret
in
dec
lahf
ret
mov
pop
add
sti
stos
fdiv
pusha
jno
xchg
sar
loop
(bad)
mov
add
and
repz
cmp
cmps
push
dec
imul
pop
test
les
mov
cmp
in
xchg
retf
movs
add
mov
mov
stc
pop
(bad)
xchg
adc
adc
std
int3
xor
int3
jno
sbb
pushf
push
sub
dec
mov
jb
pop
aas
ja
mov
xor
(bad)
(bad)
jge
dec
mov
xor
outs
push
sub
cwde
jbe
or
ins
inc
push
push
lahf
cwde
(bad)
mov
jl
xlat
shr
inc
or
push
test
je
shl
and
pusha
sub
inc
mov
aam
icebp
idiv
ret
jp
popa
add
into
pop
mov
pop
ja
pop
imul
dec
inc
std
nop
out
jns
sbb
cmps
sahf
retf
pop
cmc
lock
inc
mov
hlt
call
sub
and
inc
mov
aam
jmp
xchg
dec
leave
sub
btr
xor
sti
jecxz
ss
jae
and
(bad)
adc
cld
das
or
cli
mov
mov
and
enter
fbstp
psrlw
mov
ret
cmp
push
pop
add
shl
push
stos
xchg
fiadd
fwait
das
out
dec
pop
ins
out
cwde
cmp
fwait
mov
jmp
and
inc
push
push
pop
call
cmp
aad
mov
push
jl
sub
lods
pop
jbe
cmc
push
pushf
(bad)
fadd
sbb
inc
or
leave
add
and
movs
or
stos
fldcw
add
jmp
scas
or
push
jbe
xor
sar
jle
push
or
jns
xor
adc
mov
data16
pop
jae
cs
pop
xor
daa
sbb
or
je
push
test
test
sbb
pop
test
pop
sbb
js
scas
loopne
lods
pop
mov
mov
inc
outs
push
cmc
mov
retf
mov
cld
in
not
xchg
out
push
or
pop
mov
dec
pop
mov
sbb
call
test
pop
arpl
imul
test
sub
rcr
push
in
mov
repz
inc
test
into
mov
out
push
outs
cli
in
mov
into
xchg
inc
cmp
int
rcl
push
and
inc
pop
xchg
push
xchg
sar
sbb
cmp
pop
repnz
jg
mov
mov
rol
push
loopne
xor
jae
mov
retf
push
jl
inc
loopne
cmc
jo
test
fs
adc
adc
loope
sbb
inc
inc
pop
arpl
mov
jns
aad
lea
lahf
sbb
mov
lds
mov
es
pop
loopne
loop
adc
adc
fldenv
ins
jmp
stc
mov
test
sbb
inc
add
jp
sahf
dec
add
test
fisttp
inc
mov
fcmovnbe
pop
and
cs
or
retf
jo
(bad)
scas
or
jne
int3
sub
es
ret
je
popf
mov
push
hlt
lahf
pop
mov
jae
mov
in
push
pop
ins
jb
dec
lods
mov
loop
sub
pop
pop
fsub
das
sub
pop
dec
pop
ret
jge
test
retf
sbb
fdiv
cdq
dec
inc
lds
dec
ret
dec
out
mov
mov
mov
or
mov
stos
out
sar
mov
cli
rcl
sub
and
mov
cld
test
mov
shl
or
js
fadd
call
rcl
stos
mov
sbb
add
or
add
mov
idiv
or
xchg
or
leave
fadd
jb
push
or
cmp
hlt
xor
mov
jns
inc
mov
cmp
nop
push
sub
xchg
inc
dec
js
and
push
inc
lods
xchg
mov
das
loope
sub
jmp
adc
push
pop
cwde
cs
(bad)
movs
xchg
pop
dec
jo
xchg
dec
sbb
sbb
jne
inc
jge
ds
mov
fsubr
add
adc
(bad)
repz
out
mov
xchg
lahf
mov
ds
imul
push
dec
popf
loop
pop
jp
xchg
adc
push
mov
mov
jns
cld
ret
sbb
addr16
push
or
add
xor
dec
xor
gs
adc
movs
std
cdq
outs
add
jmp
add
mov
add
shl
sbb
lds
inc
pushf
pop
aas
loope
mov
ja
cdq
repz
imul
adc
int
add
fsubr
sbb
jmp
iret
ins
imul
inc
xchg
xchg
out
sbb
ds
or
neg
add
test
and
sub
cmp
dec
pop
inc
hlt
in
enter
cmp
popa
cmp
les
iret
sub
mov
push
adc
mov
es
jnp
in
push
stos
push
popa
and
adc
leave
test
push
inc
xchg
xchg
cdq
leave
pop
loopne
aaa
movs
pop
aad
leave
pop
in
ins
fidiv
and
(bad)
add
or
or
loopne
cmc
je
dec
dec
in
sub
sbb
fidivr
cmp
sahf
pop
rol
jae
adc
push
cdq
mov
daa
mov
test
dec
test
int
mov
adc
into
jp
pop
mov
xor
test
jno
das
xchg
lea
test
(bad)
sar
mov
dec
retf
push
adc
sub
ins
loope
loop
in
fisub
mov
mov
addr16
sahf
xchg
imul
jnp
mov
push
(bad)
push
es
cs
leave
mov
pop
xor
fwait
jno
sti
rol
push
jnp
jbe
or
push
push
add
fnstcw
sar
xchg
xchg
push
push
sub
push
pusha
mov
inc
dec
repz
(bad)
cs
mov
cmc
sbb
and
adc
jns
jne
pop
cmp
fsubr
fist
dec
neg
icebp
or
pop
sbb
inc
cli
sbb
pop
in
(bad)
aam
out
or
push
sbb
ja
cmp
pop
push
sbb
cmps
sub
pop
movs
or
rcl
pop
inc
in
int3
sbb
jecxz
or
xor
and
jecxz
sub
call
ins
mov
pop
push
scas
inc
popa
jg
xchg
or
test
sti
and
data16
test
cld
mov
sbb
xchg
push
jb
arpl
mov
je
sbb
xchg
ret
jne
shl
gs
mov
pop
mov
sbb
sub
cmps
cmps
cmp
pop
cmp
jp
jge
xchg
sub
cs
mov
mov
div
xchg
mov
add
in
pusha
cmps
and
inc
push
adc
pcmpeqd
push
and
repz
push
popf
xchg
hlt
cmp
sbb
push
add
sbb
mov
lods
icebp
and
loop
or
out
jnp
jae
jmp
push
imul
and
push
retf
loope
mov
jbe
cmp
addr16
(bad)
or
gs
dec
fs
push
or
imul
shl
xchg
loope
xchg
(bad)
jae
cmps
and
pop
mov
jecxz
and
push
push
in
sub
call
add
fwait
xor
or
cmc
nop
cmps
sti
mov
inc
mov
jmp
sub
sar
cmps
daa
jle
scas
in
jne
pusha
pop
sbb
push
retf
add
jecxz
mov
add
and
pop
push
call
push
test
xchg
jecxz
retf
(bad)
cdq
test
enter
cli
arpl
test
std
cmps
imul
movs
leave
sub
cld
cmp
push
js
pop
inc
clc
adc
and
clc
ror
call
xchg
mov
sub
dec
pop
push
sbb
std
mov
pop
push
nop
ss
mov
jb
pop
or
adc
retf
jl
push
cld
xor
das
gs
mov
es
addr16
jl
inc
sub
sub
and
aad
mov
pop
(bad)
push
cld
sbb
dec
outs
call
neg
jmp
dec
pop
xor
rcr
lahf
pop
mov
jp
jns
mov
out
movs
or
(bad)
cmp
enter
in
mov
jp
mov
dec
test
stos
push
and
and
jge
jecxz
xchg
outs
fisubr
dec
lea
or
stc
xchg
dec
sbb
shl
clc
push
les
inc
xchg
mov
and
xor
pop
mov
fcom
test
xchg
add
addr16
sub
and
js
or
inc
scas
fwait
dec
mov
pop
lock
fisub
ja
mov
std
push
enter
sbb
cmp
mov
fnstenv
dec
or
xchg
push
inc
inc
stos
aas
adc
arpl
outs
sub
push
add
and
adc
and
arpl
and
rcr
movs
icebp
fistp
push
(bad)
fld
jle
or
xchg
mov
and
jae
retf
xchg
xlat
add
push
ror
or
lea
mov
push
ja
test
jl
faddp
fdivr
push
rcr
test
call
jle
mov
fnstcw
in
loopne
or
mov
cmps
mov
jl
lahf
adc
leave
sub
pop
pop
rol
push
cmp
pop
cmp
dec
inc
sub
sbb
shl
pop
or
push
xchg
pop
inc
clc
out
push
jecxz
pop
js
mov
mov
push
sbb
dec
sbb
pop
test
jmp
shl
in
pop
out
mov
jae
pop
fiadd
enter
jecxz
push
scas
pop
retf
inc
xor
mov
enter
int
dec
pop
in
nop
mov
shr
aad
xor
ret
or
jmp
push
pop
js
fld
cdq
fist
inc
xor
xchg
cmp
popa
or
pop
push
or
shl
out
rcl
pop
aaa
mov
sbb
aas
ret
out
push
fisttp
mul
cmps
inc
xor
push
cmp
nop
cs
jg
int3
fcmovne
ret
mov
and
lahf
test
jge
xlat
or
nop
push
mov
pop
lds
mov
xchg
aad
mov
test
enter
dec
jns
popf
cmp
or
bound
inc
xchg
outs
popa
and
and
jno
(bad)
dec
jb
shl
scas
test
inc
inc
aaa
push
xchg
fisttp
push
(bad)
clc
icebp
sub
jno
jl
add
(bad)
mov
fisub
jbe
xchg
ret
ja
imul
fsubr
xchg
stos
out
test
dec
xchg
jmp
out
test
add
fstp
mov
mov
xor
xor
mov
adc
jmp
fsubr
rcl
std
sahf
ja
cmp
outs
fcomp
rcl
mov
mov
or
sbb
xor
dec
mov
dec
cmp
sbb
(bad)
fsubr
or
mov
addr16
cmp
in
mov
mov
stos
stos
jne
jb
dec
sbb
jge
rol
jb
jp
shr
xor
stos
jp
sbb
leave
stc
loopne
das
imul
scas
lahf
or
lea
mov
add
rol
iret
add
push
or
xor
ret
add
and
es
pop
(bad)
push
sahf
jp
out
jge
pop
(bad)
mov
dec
sti
mov
fdiv
or
loopne
mov
mov
rol
iret
movs
xchg
mov
mov
sub
pop
mov
(bad)
pop
ins
daa
add
mov
dec
dec
sar
neg
jne
bound
mov
jmp
loope
and
fnstenv
mov
or
out
xor
enter
inc
outs
mov
sqrtps
mov
xchg
xchg
cmp
loope
mov
jmp
ds
popa
mov
xchg
dec
xchg
pusha
retf
cmc
mov
pop
cmp
stos
ss
fcomp
arpl
lahf
out
xchg
pushf
inc
dec
jg
ins
jmp
les
out
add
pop
sub
sbb
stos
cmp
cmps
adc
fst
scas
xor
xor
xchg
or
leave
adc
data16
inc
in
ins
jmp
jp
popa
lods
imul
or
stos
adc
push
into
shl
in
sub
sub
je
xlat
sbb
fcomp
in
add
movs
in
fnsave
xor
test
sbb
pop
jl
aam
inc
in
sbb
aam
loope
inc
and
sub
std
out
jecxz
pop
in
ficomp
sub
and
outs
in
sub
jnp
mov
popf
js
xchg
call
mov
xor
mov
mov
sub
push
ja
cdq
xor
inc
adc
bnd
aam
dec
imul
mov
test
jbe
cmc
outs
daa
enter
jl
fwait
jmp
adc
rcr
mov
fucomi
sbb
and
retf
icebp
(bad)
aam
jb
test
lock
mov
sbb
js
data16
mov
jae
mov
jne
mov
mov
add
push
lahf
push
mov
jl
sub
push
enter
call
fdiv
ds
jl
push
jg
jmp
inc
retf
cmc
jbe
add
into
or
out
jle
out
adc
aaa
push
xor
fimul
xchg
mov
call
adc
scas
into
repnz
aas
mov
pop
mov
(bad)
gs
js
stc
adc
mov
fcom
cmps
adc
or
pushw
adc
and
xor
push
mov
fimul
add
lock
ja
xchg
call
adc
and
xor
ret
mov
or
repz
xlat
cmp
sub
push
xchg
pop
test
pop
mov
jmp
in
xor
repz
and
inc
mov
jecxz
loop
lods
(bad)
cmp
dec
mov
cmp
add
inc
push
and
ss
or
or
jg
xchg
jmp
mov
add
push
inc
scas
(bad)
aam
mov
add
retf
cmc
mov
mov
adc
into
test
xor
xchg
fst
push
scas
mov
shl
xchg
jne
mov
lods
push
call
test
and
clc
jns
adc
(bad)
shr
or
dec
pop
add
shl
adc
int
outs
push
inc
xor
or
data16
icebp
fdiv
(bad)
(bad)
cld
test
sbb
sub
xchg
rcl
test
loopne
push
and
fsub
pop
mov
sbb
in
clc
jecxz
xchg
xor
pop
cld
lods
fcmovb
mov
and
mov
mov
je
fnstsw
enter
loope
js
mov
and
das
(bad)
arpl
out
xchg
mov
pop
xchg
xchg
push
or
loop
pop
popf
or
repz
xor
pop
push
aad
(bad)
nop
sbb
xor
sbb
and
dec
push
jmp
sbb
test
cmp
and
adc
sbb
ins
enter
iret
gs
test
jo
std
xchg
hlt
dec
shr
sbb
mov
fild
cmps
xchg
repz
dec
pop
xor
pop
fnstenv
adc
in
inc
add
jnp
call
sub
shl
xor
int
cmp
xchg
ja
add
lahf
shr
scas
sahf
lods
mov
xor
push
jbe
(bad)
stos
addr16
lahf
inc
ret
push
xchg
ins
ds
addr16
ins
(bad)
xor
push
bound
jmp
or
push
out
outs
dec
push
hlt
outs
loopne
stc
add
cs
push
adc
push
mov
or
add
xor
dec
repz
(bad)
aad
int3
rol
xlat
jmp
jb
mov
(bad)
and
loopne
xchg
jle
shl
sub
les
scas
and
out
gs
out
cli
enter
int
jns
push
lock
fisub
cwde
in
xchg
cmp
es
test
sub
mov
xor
mov
cmps
add
out
jne
lahf
aad
dec
retf
dec
repnz
shl
dec
movd
mov
fmul
test
jb
mov
mov
in
rcr
sti
xchg
inc
jg
retf
ficom
aaa
ds
call
jmp
sub
sub
ds
xchg
dec
out
jp
ror
dec
jge
out
or
in
dec
inc
jp
aad
or
in
xor
cdq
in
cld
ret
sub
and
js
mov
test
or
(bad)
mov
in
jnp
add
sbb
out
movs
and
cmp
rcr
scas
sahf
outs
retfw
cli
ins
xchg
retf
sub
sbb
dec
cmp
outs
es
test
pop
loope
push
jmp
and
(bad)
imul
stos
in
std
and
cmp
adc
push
bound
mov
mov
int3
popf
into
jmp
mov
(bad)
retf
test
popf
push
not
sub
push
xor
(bad)
lock
jns
adc
adc
pop
in
lds
and
data16
jecxz
out
inc
cmp
add
sbb
mov
sar
jo
sbb
(bad)
mov
mov
cmp
lock
dec
outs
test
test
cmp
clc
add
ins
mov
sbb
lods
pushf
mov
ins
adc
mov
retf
loope
mov
sbb
and
mov
ficomp
mov
or
mov
jl
sub
pop
push
lods
aam
dec
clc
push
hlt
xchg
mov
cmp
fadd
in
mov
std
xchg
jmp
add
mov
fdivr
jns
in
mov
jmp
fidiv
std
or
xchg
sbb
mov
movs
cld
cmp
sbb
push
dec
and
call
cmp
push
inc
shl
mov
xor
jp
pushf
sub
dec
xlat
mov
retf
or
gs
mov
mov
add
sbb
daa
in
add
gs
bound
movs
mov
sub
repz
mov
pop
loopne
adc
fldenv
(bad)
aaa
fwait
pop
es
add
rol
and
ret
test
stos
mov
jno
dec
xor
inc
and
dec
push
pusha
lea
inc
les
dec
fs
pushf
jge
pop
xchg
arpl
aaa
fs
shl
ja
fwait
call
in
mulsd
push
loop
(bad)
mov
test
dec
pop
push
mov
mov
fistp
push
inc
add
call
cwde
xor
clc
adc
ins
and
repz
dec
clc
push
dec
and
add
mov
fadd
inc
fld
xchg
cmp
hlt
ja
xor
int
xchg
mov
cmp
bound
stos
in
jg
adc
outs
add
loop
aaa
cwde
into
aaa
sbb
mov
sbb
xchg
xchg
jl
(bad)
push
movs
cli
pop
mov
and
or
imul
push
and
loopne
pop
ins
out
mov
inc
mov
(bad)
cmps
inc
sub
sbb
sbb
ins
sub
add
addr16
push
mov
jbe
test
mov
retf
outs
pop
rcr
stos
pop
push
sub
cwde
push
and
add
test
push
xlat
into
xchg
in
loopne
je
lahf
fistp
jp
xchg
mov
push
fimul
ds
nop
retf
mov
(bad)
adc
sub
pop
or
iret
fisttp
jg
xor
mov
jb
sub
pop
enter
jmp
mov
test
mov
dec
xlat
inc
addr16
cdq
or
jnp
lahf
or
stc
xchg
sbb
retf
xor
push
sahf
out
sbb
jg
call
xor
cmp
xchg
cld
mov
dec
test
retf
cs
fmulp
pusha
js
test
ret
jmp
or
adc
xor
stc
jbe
pop
fidivr
scas
add
inc
sar
xor
sahf
aas
push
xchg
cmp
or
or
shr
adc
dec
repz
sti
pop
out
or
mov
outs
pop
sti
jl
mov
imul
add
xchg
aad
jl
fwait
add
fadd
test
xor
shr
mov
icebp
fst
mul
shl
scas
dec
jb
pop
add
stos
(bad)
jge
cmp
and
ins
jl
mov
mov
fldcw
or
test
pop
outs
dec
cmps
and
mov
pop
es
mov
pop
jle
mov
fistp
adc
bnd
mov
mov
imul
ins
jmp
outs
in
jno
ss
push
dec
shl
xchg
out
(bad)
pushf
mov
sub
rol
cmp
cmp
icebp
push
jmp
and
ja
pop
(bad)
aaa
adc
cmp
pop
cmp
xchg
add
shr
pop
leave
imul
test
or
les
clc
and
test
or
out
pop
cmp
xchg
out
pop
mov
dec
mov
mov
fdiv
xor
or
add
xor
vmovaps
stc
pop
jnp
mov
xchg
xchg
dec
dec
dec
(bad)
aam
or
sub
shl
in
mov
data16
jmp
and
dec
in
add
jae
sub
mov
aam
(bad)
in
rol
pop
pop
mov
rcl
push
lods
inc
rcr
and
fs
sti
push
lds
fst
(bad)
rcl
cmp
push
adc
test
sbb
mov
test
and
xor
scas
iret
mov
stos
popf
jmp
ficomp
bound
and
push
in
xchg
add
daa
and
and
das
mov
retf
lods
add
(bad)
xchg
movs
sti
fcmovnb
mov
je
mov
mov
in
stos
ins
cli
nop
adc
mov
sub
lahf
fs
push
dec
mov
jbe
jmp
add
xor
loope
cmp
push
add
jmp
call
mov
fsubr
out
lock
enter
outs
push
icebp
inc
sbb
adc
fsub
daa
test
inc
dec
je
ins
repnz
lods
add
xchg
lock
fnsave
div
sub
test
sbb
push
pop
dec
mov
mov
sub
pop
ret
inc
or
dec
(bad)
call
les
or
mov
pop
pop
add
daa
jno
sbb
out
mov
xchg
lea
sbb
stos
arpl
mov
jmp
or
call
mov
mov
lahf
push
mov
mov
and
inc
cmps
mov
pop
aad
or
mov
pop
fisttp
imul
outs
xlat
hlt
imul
jg
ds
out
div
wbinvd
adc
sbb
dec
cdq
aas
sub
jnp
sbb
sub
fs
dec
jb
pop
and
adc
call
cmp
jns
jl
or
shl
cmp
add
fldcw
pop
or
clc
cdq
and
mov
add
(bad)
mov
or
sbb
or
sbb
cmps
das
push
mov
in
mov
xchg
test
out
push
xlat
dec
daa
mov
int
lods
pop
jmp
les
mov
xchg
cmps
ss
xchg
js
xchg
rcl
hlt
bound
fisub
test
fdiv
lods
lahf
pusha
aam
mov
cwde
fstp
(bad)
ror
jae
ds
fidivr
cmps
adc
xchg
sub
mov
psrld
adc
lahf
pushf
pusha
call
lahf
mov
fs
pop
push
xchg
pop
jecxz
sub
pop
inc
xor
mov
jo
or
add
or
aad
xchg
pushf
pop
inc
lea
loop
push
pop
jnp
xor
not
cli
jmp
ret
push
inc
add
outs
xchg
rol
enter
xor
inc
pop
xchg
or
lds
sahf
repnz
xor
push
inc
sub
mov
lahf
xchg
add
adc
push
cmp
div
dec
(bad)
hlt
jmp
fsubr
in
repz
imul
cmps
jge
aas
sbb
mov
pop
in
adc
or
add
xchg
in
mov
mov
sbb
mov
jg
stc
retf
cmp
movq
pop
push
inc
ror
jb
mov
psubusw
cmps
daa
test
sub
xchg
cmps
adc
xchg
int3
jbe
cli
jg
adc
jmp
aaa
dec
dec
mov
pop
push
mov
xor
cld
push
mov
mov
fidivr
xchg
call
out
pop
cmps
jg
sar
out
push
fdiv
mov
pop
loope
pusha
movs
jne
xor
adc
aas
call
outs
mov
and
(bad)
jmp
or
sbb
aam
inc
or
clc
jmp
xchg
imul
mov
ret
push
fldenv
es
and
into
and
sub
test
and
lods
jbe
add
out
retf
mov
out
fcomp
into
(bad)
bound
or
or
or
arpl
or
fadd
ins
sub
mov
stos
pop
mov
icebp
je
sub
xchg
pop
fmul
cli
out
and
div
ja
push
inc
mov
pushf
cmps
xchg
cmps
(bad)
mov
pusha
cmp
push
and
or
stos
adc
cmp
not
fild
jmp
mov
leave
adc
sar
stos
nop
sub
bnd
push
mov
jg
movs
lods
adc
add
pushf
lea
into
mov
repz
mov
xor
fidiv
pushf
mov
cmps
mov
and
rdpmc
popf
lea
lods
ins
mov
popf
jg
pusha
mov
dec
outs
add
retf
in
ins
sub
mov
adc
ret
nop
inc
inc
popa
repz
sbb
clc
hlt
add
dec
cmps
mov
adc
lods
dec
clc
jl
pop
inc
and
jae
mov
and
sub
push
fld
fcompp
loop
sbb
mov
add
mul
dec
mov
pop
out
scas
out
scas
shl
cwde
(bad)
fst
(bad)
retf
jecxz
mov
stos
cmps
or
aad
in
push
sbb
mov
mov
arpl
inc
adc
in
mov
inc
fistp
cs
mov
mov
fs
push
gs
imul
shl
pop
stos
push
cmp
cmp
xchg
sub
or
adc
add
fs
fwait
out
push
jnp
imul
lock
sahf
mov
(bad)
and
mov
ror
bound
inc
and
mov
movs
cmp
iret
jmp
pop
inc
cmc
mov
inc
add
mov
cmps
mov
rcr
push
shr
dec
add
or
scas
rol
das
jnp
mov
pop
retf
mov
push
addr16
xor
and
mov
inc
jmp
mov
mov
adc
xchg
add
in
aaa
and
adc
addr16
imul
mov
xchg
cmp
push
cmp
adc
cmps
adc
adc
ss
xchg
loopne
retf
mov
jmp
sub
aaa
mov
(bad)
pop
jg
mov
inc
pop
aaa
or
test
xor
lds
mov
hlt
push
pop
xchg
ja
dec
xor
and
mov
push
sbb
mov
push
mov
fcom
out
das
loope
jge
inc
sbb
in
call
call
lahf
in
call
pushf
inc
pop
arpl
retf
aam
jecxz
loopne
hlt
inc
mov
jl
mov
or
sub
mov
jno
adc
cwde
imul
jmp
xchg
pop
cmps
loop
sbb
sbb
dec
jl
loopne
mov
lahf
(bad)
out
leave
dec
icebp
int3
retf
mov
repz
movs
cmps
or
push
dec
bound
pop
inc
adc
mov
fwait
dec
push
aas
gs
add
xor
sbb
in
xchg
jnp
sbb
pushf
std
push
jbe
or
sub
sti
in
ret
daa
in
mov
mov
fs
je
stc
loope
pusha
lds
ret
pop
xchg
in
rcl
pop
lods
(bad)
lods
or
mov
or
mov
add
not
mov
lahf
push
lods
or
in
out
ret
fs
inc
dec
ds
add
jne
pop
(bad)
in
pop
in
xor
dec
mov
int3
and
pop
cmp
mov
mov
cli
rol
adc
mov
pop
in
test
cwde
out
inc
or
add
(bad)
xor
(bad)
fcom
mov
or
mov
pop
pop
adc
les
cs
jp
add
inc
icebp
mov
dec
mov
dec
(bad)
push
jl
nop
les
pop
cmps
sar
fwait
mov
and
push
dec
(bad)
mov
int
xor
hlt
adc
sbb
xor
jmp
xchg
push
mov
ja
sbb
lock
mov
jns
clc
fstp
cmps
dec
sub
and
(bad)
cmp
test
(bad)
std
push
push
xchg
add
xchg
cmp
xchg
test
xlat
jmp
adc
je
mov
(bad)
pusha
mov
je
bound
outs
pop
sbb
push
sub
je
inc
xor
mov
jne
xor
mov
loope
dec
xchg
jmp
sbb
jo
cmc
out
ror
outs
jno
dec
test
cmp
or
es
out
inc
xchg
adc
mov
out
sbb
xor
repz
cmc
adc
jmp
cmp
nop
test
lds
movs
mov
mov
cmp
xchg
aad
xchg
rol
mov
or
xlat
or
dec
xor
mov
lea
and
ja
inc
or
push
cmp
stc
push
jl
in
cwde
fistp
(bad)
or
dec
pop
js
scas
fstp
es
pop
mov
push
xor
add
xchg
xor
shr
fisttp
fbld
pop
nop
popa
fnstenv
ret
mov
icebp
adc
in
push
jae
mov
or
jnp
mov
mov
jne
pop
add
stos
sub
push
mov
push
jecxz
fistp
pop
jmp
inc
add
xor
mov
mov
push
push
mov
cdq
mov
fld
pop
xchg
adc
popf
sub
pop
add
neg
jecxz
adc
xchg
sbb
mov
push
xchg
pop
retf
mov
fbld
pop
add
pop
(bad)
and
pop
ss
push
cdq
out
ror
mov
enter
push
cmp
cmps
int
fild
mov
outs
int
stos
test
mov
repnz
js
xor
xor
sbb
pop
data16
movs
cmp
jns
ins
scas
add
xor
daa
das
mov
data16
push
add
popa
cmp
adc
ds
sub
and
movs
loopne
xchg
sbb
(bad)
inc
ficomp
test
js
mov
xchg
sahf
loope
scas
push
std
scas
and
adc
sbb
in
pop
test
mov
cmp
aaa
shr
icebp
arpl
call
xor
fnsave
cmc
xchg
xor
dec
in
(bad)
cld
mov
shr
dec
loop
inc
sbb
in
fadd
or
pusha
into
(bad)
imul
add
push
dec
add
(bad)
inc
clc
xor
out
out
xchg
xor
xchg
sub
sub
mov
pop
je
in
daa
cli
cmc
mov
jmp
push
xchg
call
sbb
cmc
rcr
(bad)
pmulhw
lock
leave
out
in
lds
mov
inc
push
adc
push
push
loopne
pusha
pop
or
daa
pop
mov
retf
jle
or
ret
push
pop
rol
xchg
stc
cmp
lahf
scas
xor
stos
xchg
arpl
sub
les
push
add
cmp
xchg
iret
or
jg
or
fsubr
adc
jns
adc
xacquire
jno
loope
cld
push
data16
xor
mov
pop
in
mov
sbb
mov
mov
cdq
sbb
(bad)
cmp
mov
les
sahf
mov
xor
add
or
lods
pop
mov
sub
outs
push
je
test
jmp
push
lods
adc
push
shr
daa
rcl
or
fdiv
dec
sbb
(bad)
mov
jg
int3
cmp
xchg
cmp
xchg
cmp
sti
mov
in
mov
outs
xchg
or
loop
test
pop
jge
cmp
mov
fisttp
mov
pop
sbb
leave
jle
into
mov
shr
inc
push
pop
mov
jo
lds
ins
ret
jge
or
push
mov
retf
sbb
dec
push
jle
popf
push
stos
jp
idiv
cmp
out
cmp
fisub
sub
cmps
sbb
shl
(bad)
push
fsub
retf
movs
(bad)
out
jmp
xor
sub
mov
addr16
mov
pushf
add
dec
xor
not
mov
or
xor
pop
push
lods
enter
mov
rol
jge
fisub
and
xchg
cs
sub
xor
inc
xchg
stos
jl
adc
or
aam
jge
(bad)
sahf
add
or
inc
pop
(bad)
std
dec
stos
ins
fucomp
test
jp
xor
call
repnz
fnstcw
push
or
ss
mov
nop
loopne
pop
inc
jmp
dec
cdq
dec
je
inc
mov
jg
inc
retf
push
pop
pop
inc
mov
test
add
test
push
or
pop
in
mov
shr
in
lods
pop
xor
movs
mov
int
aaa
repnz
jl
pop
mov
jg
jnp
je
fisubr
rol
(bad)
div
fild
xchg
jns
and
out
call
dec
outs
pop
scas
ret
mov
jne
aad
loopne
or
xor
sbb
iret
sub
jns
fiadd
and
dec
lods
sti
jne
inc
ds
jo
movs
dec
inc
dec
xchg
sahf
loop
outs
repz
popa
inc
lds
inc
dec
push
test
pop
adc
xor
js
ins
pop
pop
out
adc
test
push
hlt
mov
popf
cmp
fs
imul
outs
fsub
dec
ja
cmp
adc
rcr
dec
mov
adc
retf
outs
cld
mov
lods
sar
ja
mov
adc
mov
cld
bound
sahf
je
mov
mov
movs
lahf
or
ret
fcomp
mov
jbe
outs
xor
fst
pop
adc
out
daa
sbb
call
cmps
xor
xchg
pop
in
add
fist
and
mov
pop
inc
scas
in
into
cmp
and
jae
xor
mov
es
jb
jns
xchg
inc
test
push
out
fs
ja
jecxz
push
shl
mov
in
aas
jecxz
int3
xlat
ds
mov
mov
mov
inc
fistp
pusha
add
clc
push
cmp
std
into
cs
jne
or
cmp
in
mov
aad
je
int
sub
loope
jmp
call
fild
inc
retf
add
ja
outs
sbb
mov
inc
in
adc
or
inc
stos
hlt
leave
mov
jnp
mov
lds
mov
dec
sbb
stc
push
push
sbb
push
lods
xor
pop
push
push
jnp
pop
mov
jp
and
sub
add
ja
mov
sub
iret
add
rcr
cli
mov
shl
cld
dec
lock
test
ja
push
dec
cdq
xchg
mov
out
add
xchg
shl
jecxz
out
out
inc
and
es
cmp
inc
gs
mov
retf
jae
lock
pop
inc
push
stos
push
ja
adc
adc
stos
pop
loop
jle
mov
mov
ror
mov
in
mov
pop
icebp
fcom
jno
data16
jge
pop
cwde
clc
add
xor
xor
adc
xor
scas
repnz
cmp
and
dec
or
movups
dec
mov
(bad)
popf
jmp
pop
sbb
nop
js
(bad)
jp
inc
mov
mov
jg
cli
sbb
movs
sbb
loope
and
test
push
jle
inc
cmp
cli
pop
in
shr
push
rcr
dec
cmc
bound
hlt
lock
add
inc
pop
pushf
dec
add
push
dec
test
cld
dec
sub
xchg
cmps
ret
mov
push
inc
imul
dec
das
push
aas
icebp
div
or
cmps
or
adc
jne
pop
add
cmps
setp
mov
mov
adc
sub
cs
out
test
repnz
ficomp
call
push
jbe
pop
les
addr16
add
xlat
lea
or
xor
lods
jmp
(bad)
std
(bad)
lock
push
and
pop
push
fstp
xchg
mov
cmp
sbb
and
and
mov
jp
and
jmp
cmps
das
and
aad
lahf
mov
dec
sti
sub
jbe
icebp
ds
fucomip
mov
sbb
sbb
lahf
imul
jp
mov
pop
sbb
(bad)
adc
push
or
(bad)
cwde
outs
pop
sbb
fs
iret
fwait
pop
stos
retf
or
jecxz
mov
cmp
sahf
add
adc
cmp
repz
jbe
enter
movs
stc
xor
mov
jbe
adc
popa
lods
push
xchg
popa
cmp
outs
or
push
jge
dec
lods
or
jmp
cld
daa
jno
mov
arpl
mov
icebp
loop
mov
cwde
lds
mov
sub
cmp
bnd
rol
popa
les
in
mov
add
jnp
cli
jno
sbb
test
xchg
mov
mov
out
sub
repnz
dec
dec
cmp
lds
mov
std
mov
ror
addr16
repnz
sub
in
loop
ret
movs
shl
xor
loop
movs
adc
fisub
mov
dec
test
lahf
clc
aad
pop
ret
(bad)
push
das
sahf
das
cld
fnstcw
jb
test
ret
push
add
mov
mov
loop
dec
and
enter
scas
xor
adc
cmc
les
hlt
xor
push
pop
shr
fistp
dec
aam
call
jg
sub
ins
push
loop
add
fidiv
or
xchg
mov
adc
sti
imul
out
jnp
and
sub
into
mov
sub
cwde
loope
push
cld
jno
mov
sub
dec
lahf
(bad)
pop
lds
jb
and
xor
call
ds
pop
ins
scas
jns
ja
mov
daa
ja
shr
inc
and
push
ja
or
call
sub
jg
cdq
xor
stc
out
add
xlat
pushf
in
sar
add
popa
jg
cmp
imul
ins
(bad)
adc
sub
pop
xchg
(bad)
mov
out
(bad)
js
add
and
mov
inc
sti
pushf
retf
mov
inc
and
or
bound
pop
clc
stos
jp
popf
pop
pop
mov
outs
ss
stos
ficom
mov
mov
pop
daa
lock
dec
clc
rcl
pop
cdq
xchg
cld
add
in
sbb
cwde
jmp
jno
test
stos
mov
sub
(bad)
(bad)
call
push
retf
xor
mov
jns
stc
or
dec
mov
rcr
mov
(bad)
imul
pop
push
adc
and
jbe
and
xor
push
sub
lahf
push
movs
mov
imul
aas
js
mov
dec
and
add
sub
popf
pop
xchg
jns
cld
dec
xor
rcr
mov
dec
mov
sbb
adc
or
fbstp
lock
xlat
add
std
sub
ja
es
xor
je
in
and
push
sti
and
fidiv
loope
lds
dec
enter
jns
sbb
fisttp
mov
repz
mov
push
mov
xor
cmp
pop
push
mov
sbb
add
(bad)
sub
call
ss
icebp
rcr
and
mov
mov
dec
pop
xor
mov
or
pop
movs
aad
adc
pop
std
mov
loopne
add
sub
lea
or
and
fdivp
push
or
mov
and
push
in
dec
movs
jp
fist
xor
adc
xchg
sbb
pop
xchg
shr
into
dec
clc
cmp
dec
add
ret
inc
push
scas
shl
xchg
imul
loopne
idiv
sti
retf
pop
mov
xchg
xchg
mov
ins
push
pop
imul
cdq
add
cmc
xor
adc
rol
mov
inc
jmp
xchg
add
cmp
and
mov
or
cmp
cmps
xchg
adc
mov
mov
jmp
inc
push
add
push
mov
mov
ret
in
int3
ret
mov
mov
xlat
jnp
push
dec
mov
xlat
xor
in
xchg
fsubr
inc
jmp
(bad)
jns
adc
loope
jmp
aaa
(bad)
jnp
or
movs
in
jmp
ror
loopne
sar
jno
sbb
aam
out
cld
mov
repz
out
push
lahf
inc
sub
pop
push
or
jns
in
add
pop
aas
scas
jno
pop
das
mov
fistp
inc
lock
loopne
push
xchg
xor
cmps
mov
movs
or
xchg
fs
shr
cmp
jne
sub
jae
outs
fdivr
into
test
daa
and
outs
icebp
sbb
mov
mov
adc
xchg
sbb
dec
xor
in
jbe
jl
cmp
out
hlt
and
(bad)
sub
je
xchg
mov
adc
xchg
jmp
out
in
or
mov
push
push
cmp
repz
adc
add
dec
jge
push
call
or
add
xchg
loopne
fst
sub
movs
xchg
pop
dec
les
aaa
jo
ss
jno
sub
mov
sub
movs
imul
in
test
test
push
dec
movs
adc
stos
cmps
loop
and
into
jle
sbb
je
lds
xor
xchg
in
shl
inc
scas
xor
js
outs
and
sub
fcomp
mov
rcl
(bad)
call
jns
sti
nop
jae
(bad)
iret
lods
outs
cld
fiadd
inc
sar
(bad)
addr16
mov
(bad)
push
call
movs
ins
push
ror
jl
leave
mov
mov
mov
shr
pushw
outs
js
dec
out
xor
push
inc
and
sub
mov
sub
data16
jno
cmp
(bad)
jns
push
jo
sbb
jns
dec
jmp
mov
pop
int3
mov
add
mov
dec
or
(bad)
rol
mov
int3
and
sub
mov
fild
dec
push
cs
hlt
scas
imul
mov
push
jmp
dec
repnz
add
mov
bound
stos
mov
cwde
bound
rcr
push
and
xor
xchg
pop
jg
popf
jns
push
or
(bad)
adc
out
cmp
pop
loope
out
jle
and
lock
dec
(bad)
inc
sub
xor
adc
test
ret
mov
mov
adc
pop
cmc
push
dec
pusha
(bad)
jle
popf
enter
mov
in
das
rol
pop
stos
mov
movs
enter
(bad)
rol
push
mov
push
pop
jbe
xor
pop
pop
pop
pop
not
inc
sbb
cmp
sbb
loop
mov
movs
sbb
inc
call
in
mov
pop
jl
adc
sub
pop
push
and
jge
ds
fisttp
mov
(bad)
mov
shr
loopne
push
sub
lods
mov
vmovntdq
or
fmul
and
jecxz
xchg
or
(bad)
stc
shl
outs
dec
push
mov
xor
test
(bad)
imul
ret
int3
add
es
cmp
mov
fld
lods
mov
out
sahf
enter
push
xchg
sub
imul
mov
ret
jp
cmps
mov
jo
jne
adc
in
ss
cdq
cmps
icebp
or
xchg
adc
xchg
pop
out
mov
out
xchg
scas
mov
test
ins
jmp
loopne
adc
push
out
sti
scas
pusha
es
in
fs
xchg
das
ret
mov
xor
xor
fscale
aad
dec
xor
jns
mov
mov
out
xor
shl
dec
retf
cmps
mov
and
mov
and
push
dec
and
push
or
dec
pop
add
loope
lahf
adc
add
(bad)
pop
mov
push
outs
or
xchg
scas
inc
xor
pop
cmp
mov
add
inc
loope
enter
(bad)
(bad)
jnp
sbb
mov
pop
xor
dec
cdq
push
(bad)
cld
hlt
jnp
inc
jns
movs
daa
inc
sti
mov
mov
pop
sub
mov
xor
adc
jo
pop
imul
addr16
aam
test
ror
cmp
jo
pop
int
fstp
jl
adc
cdq
(bad)
sbb
pop
and
mov
jmp
jne
imul
and
xchg
sub
and
or
adc
enter
aas
mov
cmc
adc
js
retf
mov
pusha
je
mov
ror
sub
cdq
jmp
mov
outs
aam
add
sahf
je
inc
mov
xchg
xor
ins
int
mov
mov
loope
mov
push
imul
sub
adc
or
pop
sti
cmp
and
pop
in
mov
cli
lock
fidiv
and
or
xor
push
inc
sbb
or
add
scas
fild
mov
and
dec
cmp
sub
ret
sahf
mov
das
sbb
scas
ret
xchg
push
or
(bad)
fadd
gs
in
or
add
mov
adc
xor
mov
clc
into
adc
pop
adc
lock
lock
cmp
mov
xor
into
and
mov
addr16
jl
add
jmp
pop
pop
inc
cld
imul
xchg
(bad)
fstp
mov
jb
call
hlt
mov
cli
nop
and
adc
sub
mov
ins
pop
clc
mov
(bad)
pop
mov
addr16
outs
(bad)
mov
jno
stos
jmp
mov
(bad)
jne
add
xchg
mov
in
pushf
cmp
add
test
ret
je
pop
fsubr
jno
inc
push
pop
adc
xor
mov
(bad)
in
stos
cdq
push
repz
push
push
jmp
inc
es
cwde
(bad)
jl
or
jle
sti
cdq
inc
stos
pop
movs
sahf
dec
shl
and
aad
icebp
jmp
adc
pop
cmps
popa
jmp
xor
mov
mov
sub
mov
or
or
or
faddp
inc
ss
and
fisub
pop
loopne
mov
cmp
fisub
jns
and
inc
push
verr
inc
xchg
clc
iret
lea
or
jmp
sbb
mov
loope
adc
mov
ins
dec
out
in
sub
adc
jnp
jb
or
dec
(bad)
js
cmp
adc
fisubr
or
(bad)
or
movs
pop
bnd
data16
outs
sbb
repz
and
pop
adc
adc
pop
cmp
bound
pop
gs
mov
cmp
pop
dec
inc
mov
aad
mov
jle
sub
adc
daa
jmp
into
sub
fwait
push
sub
dec
nop
aad
push
retf
data16
xor
sahf
lea
sub
leave
or
ret
mov
add
rcr
js
adc
mov
je
dec
mov
jo
push
sub
push
cmp
cmp
push
pop
in
xchg
adc
leave
mov
or
ja
sar
stc
add
outs
test
cs
cmps
fsubr
mov
push
mov
xor
gs
mov
int3
test
mov
mov
mov
popf
adc
cmp
ficomp
xor
push
add
fbld
sahf
and
mov
inc
and
push
cmc
sbb
xor
mov
mov
jge
or
out
not
mov
retf
dec
lock
stos
add
call
pop
fidiv
popa
jge
shr
int
cmps
cmp
addr16
int3
pop
xor
stos
jb
loop
test
pop
adc
mov
xchg
pop
stc
je
or
outs
fwait
lahf
icebp
pop
sbb
popf
out
cmp
dec
cdq
pop
push
stos
jno
popa
test
fcmovnb
ss
inc
mov
icebp
pop
cmp
stos
xchg
out
movs
arpl
cwde
repz
movaps
cdq
fld
jmp
ss
(bad)
retf
push
pop
inc
xchg
jp
test
hlt
push
add
cwde
add
inc
xchg
sbb
jge
inc
jle
cmp
(bad)
int
xor
inc
aam
mov
ret
inc
cmp
jge
dec
lahf
jbe
inc
mov
into
test
scas
mov
jmp
mov
ret
fs
jno
out
call
sahf
mov
and
jle
jl
shl
push
and
pop
pop
ja
daa
mov
fnstenv
xor
and
sub
fwait
test
jmp
aaa
jmp
mov
cmps
sub
cwde
or
xor
inc
lods
ss
push
push
(bad)
jns
mov
fisubr
mov
fld
mov
fstp
pop
call
xor
int
std
xor
push
loope
pop
mov
xchg
aaa
push
mov
popa
xchg
or
movs
cmp
sub
je
test
and
retf
sbb
aad
cdq
push
jno
or
adc
nop
mov
cwde
mov
adc
push
cmp
and
mov
jl
vcomiss
xor
in
enter
lahf
or
dec
pop
sbb
aad
(bad)
xchg
inc
ficom
pop
leave
pop
shl
jno
dec
mov
clc
call
jne
loopne
ret
leave
enter
mov
out
inc
or
rcl
in
call
xchg
jp
mov
mov
xchg
adc
dec
ds
push
outs
or
(bad)
xchg
pop
sbb
in
mov
pop
and
pop
mov
js
push
std
pop
aam
or
sbb
jno
aam
sbb
mov
mov
push
std
mov
cmp
and
ds
and
sbb
and
popa
mov
xchg
and
inc
setnp
ss
mov
ret
push
shrd
movs
fs
mov
jae
mov
or
jno
xchg
jnp
mov
enter
mov
fidivr
mov
dec
das
xchg
mov
adc
push
and
or
add
fsubr
test
cdq
iret
adc
bound
add
mov
retf
push
dec
stc
dec
or
iret
mov
push
push
cmps
or
cmp
xor
pop
xchg
rcl
sub
test
inc
xchg
(bad)
(bad)
gs
pusha
add
xchg
test
jae
das
sub
adc
pop
add
dec
cwde
scas
cmp
ficom
push
mov
(bad)
hlt
into
sbb
push
(bad)
adc
push
cmp
outs
fwait
cli
nop
lods
cmp
(bad)
cmps
icebp
in
xor
out
xchg
and
push
enter
jmp
retf
out
xchg
lock
cmc
cmp
adc
hlt
imul
pop
push
test
jne
sub
dec
xchg
inc
mov
jle
push
int3
sbb
and
inc
and
push
cli
into
push
outs
xor
sti
push
add
add
mov
stos
sahf
imul
retf
ret
fst
cmp
push
pop
and
push
loop
mov
adc
mov
add
daa
push
pop
or
mov
fcomi
push
inc
adc
outs
pop
push
arpl
inc
jne
sbb
rol
fwait
clc
mov
int3
jge
or
aam
(bad)
je
(bad)
shl
pop
stos
sub
loopne
sub
js
xor
dec
inc
xchg
push
or
and
jle
or
add
lds
cmps
cwde
pop
icebp
ss
lahf
sub
gs
pop
cmps
lds
ins
int3
call
push
sahf
xchg
add
test
jmp
mov
int
fstp
outs
and
push
gs
mov
xchg
mov
pop
sbb
xchg
xlat
cmps
repnz
xchg
ds
mov
out
out
dec
xchg
mov
leave
loope
les
fisttp
hlt
nop
cld
leave
mov
loop
sub
ret
lock
sbb
bound
add
js
sbb
jb
mov
mov
test
cmp
repnz
jmp
in
or
inc
ins
jle
push
or
dec
or
stc
dec
leave
xor
(bad)
sbb
or
in
jmp
scas
dec
out
inc
aas
js
and
not
hlt
or
mov
js
and
ffreep
jno
push
and
inc
xchg
call
out
imul
push
or
lea
out
sbb
ffree
pop
dec
pushf
lds
cs
cmp
adc
jo
mov
cwde
je
xor
xor
push
test
pop
mov
aaa
es
mov
shr
inc
push
scas
mov
out
popf
test
arpl
(bad)
test
sub
xchg
xchg
jp
(bad)
stc
xchg
pop
mov
xchg
push
repnz
mov
mov
mov
movs
ss
out
outs
jns
dec
(bad)
and
cld
sbb
scas
les
adc
in
mov
int
arpl
in
mov
xlat
inc
aad
call
jae
push
sbb
cld
nop
push
mov
shr
out
iret
loop
mov
push
push
and
xor
test
in
add
repz
pop
call
push
sbb
add
rol
mov
out
push
add
cmps
xchg
add
ret
xchg
pusha
mov
rcl
jl
and
sub
sub
pop
int3
jne
inc
push
mov
jmp
aad
enter
pop
jae
lock
pop
cld
dec
cs
ins
or
imul
pop
xchg
or
adc
lahf
inc
mov
jl
cmc
lahf
pop
xchg
ret
loopne
sbb
xor
and
add
imul
mov
leave
mov
adc
push
bound
call
jmp
cmp
add
or
mov
call
push
fdiv
movs
and
pop
mov
sar
mov
pop
stc
(bad)
sbb
into
ins
fdivrp
daa
aaa
imul
mov
push
into
adc
popa
rol
push
adc
adc
cs
mov
jns
jle
call
sub
pop
(bad)
xchg
xor
aam
cli
cmp
xchg
pop
mov
cmp
loop
pop
stos
add
push
and
mov
mov
jmp
and
or
dec
imul
mov
jmp
inc
iret
jo
xor
xor
sub
add
or
jg
pop
into
pop
xor
lods
adc
dec
fisttp
jno
push
jbe
pop
stos
test
jne
lea
jbe
or
stc
ret
ins
lods
sbb
sbb
mov
into
jg
pop
xchg
xor
rcr
sub
sub
dec
rcr
sbb
mov
jp
inc
loope
sar
mov
dec
loop
xlat
call
push
mov
mov
pop
cmp
jo
test
pop
ror
addr16
loopne
ins
mov
nop
xor
je
icebp
mov
fs
pop
pop
jne
xchg
xor
push
dec
aam
lahf
scas
jae
sub
cmps
nop
sahf
lock
outs
sub
sbb
and
in
pop
add
imul
fimul
lock
dec
inc
pop
aas
xchg
movs
xchg
sbb
dec
rcr
sbb
adc
xchg
jb
or
sbb
inc
jle
(bad)
in
stos
shr
loope
jbe
add
mov
push
retf
xor
pushf
mov
mov
xchg
int
jmp
cli
js
add
ret
popf
outs
mov
test
xchg
add
and
cmc
idiv
int
dec
push
jbe
xlat
sub
inc
test
adc
out
js
shr
xor
ja
inc
ret
pop
lock
xor
dec
mov
sbb
aas
mov
mov
lea
jl
iret
(bad)
jp
dec
mov
mov
shr
mov
pop
xchg
xchg
fidivr
mov
pop
out
or
into
or
mov
je
mov
mov
or
jmp
inc
dec
test
push
ret
mov
inc
sub
or
into
xor
inc
mov
(bad)
jo
push
jns
sbb
and
(bad)
xchg
add
test
pop
gs
mov
xor
inc
movs
xchg
mov
popf
cs
fsub
mov
xchg
jo
xlat
cmp
or
repnz
push
out
movs
scas
mov
xchg
mov
mov
mov
dec
cwde
mov
in
retf
aad
aam
jo
xchg
cmps
add
jle
xchg
enter
fldenv
add
and
ret
mov
add
ret
push
dec
fbstp
pop
fwait
mov
mov
push
and
(bad)
hlt
jle
jmp
out
mov
inc
push
push
stos
idiv
and
push
ficom
add
js
ins
cmp
jno
push
es
and
mov
je
mov
cmp
retf
dec
aas
(bad)
int3
jnp
aas
cmovge
iret
sub
xchg
jecxz
ins
mov
cmp
xchg
cmps
aam
dec
pop
loopne
sbb
es
xlat
pop
jge
xor
shl
imul
push
adc
icebp
fcmovnu
dec
popf
or
dec
pop
adc
mov
movs
retf
and
push
jo
add
pop
addr16
xor
les
pop
lods
iret
mov
xor
outs
in
nop
xor
pop
cld
jg
enter
sbb
stc
test
jns
xchg
mov
pop
or
and
into
fwait
adc
aaa
lea
fld
sbb
retf
sub
push
inc
pop
call
add
imul
jb
fmul
sahf
or
dec
cli
imul
xchg
inc
je
inc
and
add
xor
xor
adc
scas
push
or
cmp
jnp
mov
or
push
popa
ins
xor
xor
sub
hlt
movs
retf
cmp
pop
inc
test
sbb
or
test
and
sbb
push
out
ret
sahf
data16
mov
retf
mov
mov
jbe
jnp
inc
lock
loope
jmp
xor
loopne
add
ss
clc
ins
sbb
sub
mov
push
nop
mov
aaa
dec
lock
jnp
adc
ins
in
adc
inc
mov
add
js
xchg
pop
mov
add
xor
inc
mov
and
mul
cmps
add
dec
gs
gs
adc
sub
stc
push
mov
daa
mov
and
jmp
sbb
fsubr
dec
aam
add
mov
repnz
sbb
cmps
mov
inc
stc
in
dec
sub
cdq
std
add
aaa
cmp
dec
retf
mov
sahf
push
shr
push
mov
enter
dec
xor
ret
mov
test
in
adc
test
les
dec
push
(bad)
mov
push
or
ss
fdiv
mov
mov
or
mov
outs
call
cmp
xchg
fwait
hlt
mov
cmp
(bad)
(bad)
in
shl
jl
stos
in
(bad)
or
cmp
pop
lock
sar
mov
and
inc
jecxz
sub
fist
imul
adc
(bad)
sbb
shl
sub
daa
jmp
in
push
test
movs
data16
sar
hlt
fwait
and
sbb
je
push
sbb
lahf
sbb
add
push
xor
bswap
pop
ret
call
rcl
mov
mov
mov
mov
into
xchg
fnsave
sbb
je
pop
stc
dec
xchg
lods
cdq
bound
es
lahf
mov
out
out
inc
sub
dec
shl
vmread
pop
pushf
push
popa
mov
repz
push
pop
push
inc
jl
adc
gs
adc
scas
inc
adc
enter
lods
or
sbb
lods
ss
pop
inc
inc
cdq
rol
mov
idiv
inc
call
pop
and
int
or
cmp
sub
rcl
sub
mov
or
xchg
mov
and
ja
jg
(bad)
imul
fld
sub
fisubr
sti
fidivr
test
icebp
(bad)
xchg
popf
lea
xchg
dec
ins
test
mov
push
xchg
inc
jne
jb
mov
ss
sub
inc
jb
xchg
add
arpl
xchg
fdivr
and
ret
dec
sbb
inc
test
test
jecxz
push
push
sbb
fucom
mov
arpl
adc
cld
movs
cld
xchg
movs
inc
and
scas
cs
repz
fwait
mov
inc
xor
dec
sar
xlat
adc
mov
fidiv
push
or
or
and
adc
popf
mov
imul
aaa
dec
sbb
xor
test
xchg
dec
mov
inc
movs
jle
mov
bound
popa
xchg
fbstp
add
mov
mov
test
or
adc
dec
or
push
sub
ins
xor
mov
arpl
stos
push
sbb
pop
cmp
or
xor
jne
cs
outs
mov
cwde
lds
pop
mov
push
scas
jo
mov
mov
outs
(bad)
jp
xor
rcl
mov
pop
mov
aad
cmp
(bad)
cmp
cmp
pop
or
div
jb
out
mov
fldl2e
jmp
add
dec
jbe
xor
jne
cmp
jmp
addr16
xchg
adc
call
fsubr
sub
or
sub
jbe
push
dec
or
xchg
mov
add
or
ja
in
xchg
scas
mov
bound
sub
imul
enter
xchg
mov
cdq
adc
data16
pop
stos
sbb
or
jno
retf
jp
fadd
cs
and
xor
popf
popa
mov
mov
xlat
mov
jg
dec
sbb
and
ret
data16
scas
test
retf
cdq
pushf
push
call
sti
cs
push
push
mov
inc
push
mov
scas
or
retf
clc
jnp
cld
rcr
neg
pop
mov
and
call
or
or
cmp
dec
lods
loop
inc
cmp
pop
aam
push
or
dec
aaa
sbb
ds
in
jg
rcl
jp
(bad)
in
cmp
sub
dec
imul
mov
pop
ror
ja
sbb
repnz
or
inc
icebp
ret
outs
or
jmp
dec
gs
jl
add
pusha
(bad)
fxam
pusha
pop
lahf
mov
ja
xchg
push
push
lods
inc
and
popa
sub
xchg
iret
ins
inc
push
inc
stos
push
popf
std
pop
add
mov
jnp
enter
sbb
adc
pusha
xchg
(bad)
repnz
push
mov
mov
fild
movs
xlat
scas
add
adc
dec
lea
mov
add
gs
ficomp
mov
aaa
dec
push
movs
xor
pop
push
in
cld
xchg
and
add
fild
xchg
push
mov
out
jg
ins
or
movs
inc
shl
or
adc
popa
inc
out
mov
gs
inc
je
xchg
out
mov
inc
imul
jns
retf
push
aad
stos
test
scas
xor
outs
dec
or
jl
ror
nop
jecxz
jmp
stc
int
test
inc
xor
nop
arpl
movs
jbe
mov
push
push
mov
mov
dec
sub
hlt
or
cmp
iret
idiv
add
push
push
(bad)
and
push
mov
mov
test
pop
imul
sbb
cld
sahf
sbb
pop
clc
sub
adc
push
mov
xchg
xor
aam
test
test
test
pop
jmp
ret
call
pop
cmps
cwde
jb
std
in
pop
and
jmp
pop
aad
cwde
(bad)
imul
cmp
ret
idiv
or
fwait
mov
xchg
popf
sbb
mov
aad
cmp
ror
mov
lahf
cs
test
(bad)
jmp
bnd
mov
(bad)
mov
xor
adc
and
mov
fwait
cwde
push
mov
daa
imul
adc
pop
mov
stos
es
jmp
scas
sahf
daa
jno
inc
xor
call
cli
jg
mov
and
aas
dec
cli
retf
mov
leave
and
push
not
mov
xchg
and
xchg
mov
int
out
cmp
int
mov
int3
push
std
push
jnp
mov
imul
push
ficom
sbb
mov
and
shl
adc
jmp
and
or
mov
add
fs
cmp
mov
adc
add
xor
inc
rep
jno
cwde
add
std
xor
enter
stos
shl
aaa
sub
xchg
push
push
hlt
push
push
jmp
and
iret
push
ja
cmp
shr
and
fwait
pop
arpl
loope
cmps
mov
push
fwait
popa
outs
cmc
daa
leave
fadd
daa
sbb
rcl
pop
cmp
adc
and
pop
sub
or
jns
xor
fwait
mov
cmp
jno
adc
mov
adc
retf
(bad)
jno
cmps
test
bt
int
pop
movs
(bad)
and
inc
ffree
pushf
sbb
and
pop
pop
cdq
cmc
stos
xor
out
das
push
cmp
xchg
xchg
out
setg
mov
adc
sub
sbb
popa
call
lea
daa
and
or
neg
push
and
out
mov
or
inc
in
cld
sbb
push
and
inc
ficom
mov
cmp
pusha
push
and
data16
mov
into
popa
dec
retf
cmps
and
aaa
fisub
movs
push
jne
jp
mov
pop
xchg
or
push
sub
pop
cwde
aam
mov
aad
hlt
fidivr
mov
adc
jb
sbb
(bad)
jmp
sbb
popa
(bad)
fnstenv
add
sbb
mov
fstp
mov
jo
aad
adc
mov
sub
cmp
pop
or
or
imul
push
imul
lock
sar
fdivp
add
mov
in
sar
add
shl
lds
cli
add
sar
cmp
inc
into
xchg
into
inc
fimul
clc
cmp
jmp
cdq
adc
add
das
pop
add
imul
or
dec
repz
xchg
mov
js
inc
leave
out
imul
fs
shl
(bad)
(bad)
jge
(bad)
pop
jno
mov
jb
aad
mov
mov
dec
sub
mov
push
pop
(bad)
mov
(bad)
cli
adc
add
jecxz
xchg
mov
jp
inc
mov
enter
pop
and
dec
cmps
loopne
cmp
(bad)
push
or
add
add
sbb
in
sbb
push
cli
imul
das
add
jge
push
sub
push
jo
(bad)
inc
sar
out
xor
xlat
xor
ins
and
jae
(bad)
jl
mov
cmps
data16
jp
movs
add
fwait
in
test
xor
ins
jp
outs
xlat
lds
mov
arpl
test
mov
xchg
cmps
stos
cmp
pusha
hlt
xor
xor
fwait
pop
in
jae
jle
repz
cmp
jae
inc
jle
mov
mov
and
test
lock
invd
adc
test
les
xor
daa
pop
ins
xor
inc
push
add
dec
out
jmp
repnz
imul
or
into
adc
fimul
dec
mov
pop
fild
rol
inc
in
jb
(bad)
or
les
lds
mov
lea
lea
xchg
mov
fwait
jbe
add
icebp
int
dec
mov
fldenv
xor
fsubr
lods
jnp
xchg
push
cmp
or
add
cld
sbb
popf
add
ret
push
cmp
pop
add
inc
push
cmps
stos
xchg
sbb
inc
movs
push
jg
adc
fiadd
out
or
mov
ret
sbb
hlt
repz
or
jle
jne
and
movs
popf
mov
les
cmp
pop
cmp
add
cmps
jo
(bad)
into
xor
inc
push
add
inc
mov
ficomp
aam
pop
push
loop
sbb
cmp
scas
push
jns
aas
(bad)
arpl
test
arpl
ja
sub
jle
mov
mov
movs
test
sub
cmp
mov
jecxz
imul
xchg
fcomp
aaa
loope
test
lods
xchg
inc
cmp
push
mov
cmp
jo
dec
ds
dec
mov
repnz
test
xchg
xchg
jl
sub
call
dec
shr
sub
add
sti
arpl
xchg
idiv
cli
ja
cdq
es
sbb
(bad)
push
xor
pop
idiv
aas
or
jo
das
cs
shl
pop
stos
hlt
int3
jle
adc
cmc
cmp
push
cmp
fild
aam
mov
push
mov
xchg
cld
out
addr16
ror
ss
mov
sbb
pop
add
popf
mov
inc
inc
dec
mov
aad
imul
out
jg
dec
shr
jne
xor
(bad)
leave
adc
or
nop
jmp
in
es
loopne
mov
dec
stc
imul
xor
and
and
adc
inc
sbb
pop
inc
cs
mov
in
popf
in
pop
nop
fistp
and
adc
stos
add
icebp
or
rol
xchg
mov
xchg
dec
mov
sbb
cmp
out
adc
outs
ins
es
data16
adc
dec
lods
and
dec
dec
in
ret
movs
cmp
lahf
cmp
enter
inc
xor
xchg
in
pop
mov
cmp
cwde
into
xchg
das
(bad)
movsx
popf
ja
fstp
popf
add
mov
xchg
and
pop
or
jmp
emms
sbb
and
movs
inc
or
leave
push
jp
in
jmp
aad
pop
sub
pop
in
in
daa
(bad)
pop
(bad)
mov
mov
fild
sub
xor
xor
repnz
js
sahf
cmp
push
cmovno
icebp
fs
xchg
mov
enter
lock
push
mov
mov
in
lods
pop
(bad)
jne
xchg
sub
repnz
lea
mov
push
test
inc
cwde
cld
movs
outs
xor
ins
xchg
xchg
mov
sbb
std
jae
add
fwait
and
jmp
jae
cmps
mov
mov
in
mov
xchg
sub
in
xchg
cmps
lds
push
dec
mov
cs
sahf
(bad)
jno
adc
cmc
scas
mov
stos
sar
aad
aaa
leave
mov
packssdw
addr16
fsub
jl
test
enter
adc
fst
cmp
jbe
mov
mov
cmp
xchg
or
(bad)
mov
inc
pop
sub
xchg
lea
in
ret
sub
cmp
cmp
push
adc
mov
add
cdq
leave
shl
pop
and
arpl
or
jmp
push
mov
cmp
jne
dec
loopne
xchg
push
int
hlt
pop
popf
test
or
fst
(bad)
movs
and
mov
mov
nop
xor
adc
aam
sbb
aas
mov
mov
outs
jmp
into
es
push
aaa
jecxz
jle
out
(bad)
cmp
imul
cmp
adc
push
outs
retf
(bad)
jp
mov
jmp
jb
arpl
call
xchg
stc
stos
push
mov
push
ins
out
inc
mov
nop
mov
dec
into
idiv
aas
jmp
fldcw
jae
pop
dec
mov
push
dec
pusha
xchg
fst
xchg
movlps
(bad)
ss
push
loop
or
mov
je
jmp
push
mov
push
pop
mov
mov
push
pop
xor
or
xor
cmpxchg
call
mov
mov
inc
in
ins
cmps
out
gs
sub
sbb
sbb
mov
sti
xchg
mov
xchg
inc
and
aam
call
xchg
dec
or
mov
shl
fidivr
(bad)
clc
and
dec
stos
pop
call
(bad)
(bad)
jmp
xor
lods
in
iret
push
xor
arpl
rol
movs
hlt
push
mov
and
cs
and
mov
sub
xchg
ja
les
or
dec
push
icebp
repz
fmul
adc
jb
pop
neg
out
aaa
jns
cmp
ss
sbb
cmps
push
cmovge
neg
sub
movs
sub
pop
das
in
jle
fsub
inc
aad
enter
push
into
das
loop
sar
inc
push
cmc
dec
cmp
pop
out
daa
pop
shl
(bad)
aad
fistp
test
sar
in
adc
adc
xchg
jmp
fwait
and
repnz
ds
pop
inc
xchg
scas
pop
adc
in
addr16
mov
cs
and
stc
aas
out
iret
shl
inc
sahf
out
imul
in
sub
sub
push
enter
add
or
mov
imul
mov
or
jb
inc
inc
adc
aas
pop
mov
xor
fsubr
mov
lahf
cmp
pop
jnp
mov
inc
or
mov
(bad)
jnp
jbe
aad
daa
mov
ret
push
or
loop
aam
sti
xchg
jns
inc
add
aad
pop
popa
stos
inc
shl
and
and
dec
add
movs
lods
jmp
xchg
jae
retf
cmps
(bad)
out
jns
xor
popf
xor
xchg
mov
add
push
push
fidivr
gs
repnz
call
and
fst
sub
jg
dec
sti
sub
add
call
sbb
push
imul
sub
add
(bad)
push
mov
sub
addr16
xlat
xchg
leave
xor
jmp
xlat
push
push
out
mov
js
jnp
arpl
je
add
pop
push
test
not
pop
mov
cmc
imul
adc
mov
stos
in
aad
in
pop
jl
lods
cli
fisttp
in
adc
add
in
dec
mov
fdivr
aaa
ins
add
in
(bad)
push
loope
cdq
pop
sub
aas
les
out
loope
pusha
scas
adc
scas
inc
push
sbb
movs
popa
jl
imul
scas
xchg
push
jg
outs
inc
test
jle
nop
mov
mov
ds
call
mov
or
mov
push
or
cld
jg
cmp
dec
pop
mov
xor
arpl
std
push
in
inc
push
arpl
add
in
loope
mov
enter
out
jbe
out
lea
cmp
sub
pop
pop
dec
inc
addr16
rol
sbb
or
xchg
add
jle
pop
pop
dec
test
sub
popa
cmps
jb
out
lods
es
rcr
nop
cmp
lods
lahf
je
sbb
push
icebp
push
add
xor
cmp
test
push
jp
mov
add
jp
inc
data16
sub
sbb
push
gs
sar
xor
ret
jg
mov
xor
sbb
and
stc
(bad)
arpl
clc
(bad)
aam
imul
add
push
pop
in
loopne
sar
push
fcmovne
jmp
xor
sbb
in
and
add
cs
inc
inc
leave
std
out
lock
mov
mov
sahf
(bad)
jp
stos
pop
mov
and
rol
test
push
lock
aaa
(bad)
sub
cmp
stc
pop
ds
mov
aad
enter
cld
inc
mov
repz
pop
div
mov
jns
imul
loopne
scas
jle
cmp
es
popf
je
pop
jae
push
stos
inc
retf
mov
jg
scas
jne
aad
lahf
mov
out
and
pusha
or
cli
shr
jl
pop
push
mov
mov
push
jae
add
jbe
or
into
fisttp
jae
addr16
inc
imul
pop
scas
dec
inc
cmp
and
adc
call
push
lods
cdq
xchg
aad
(bad)
fwait
mov
repnz
call
jecxz
test
cmps
add
je
fwait
leave
dec
mov
call
mov
push
jmp
ja
inc
push
repnz
cmp
adc
jle
popa
fisub
sbb
mov
push
stos
adc
(bad)
lods
xor
or
dec
or
jno
dec
sbb
outs
das
cmp
mov
xchg
pop
mov
shr
pop
outs
and
adc
pop
or
pop
out
mov
cmp
test
cmp
sbb
push
inc
retf
adc
mov
cmp
daa
mov
mov
repz
mov
push
not
jnp
pop
dec
jge
or
add
arpl
dec
int
retf
je
xor
pop
mov
pop
repnz
pop
call
xor
jb
xchg
dec
add
test
mov
pop
sahf
repnz
push
jecxz
adc
(bad)
out
jmp
or
cli
mov
sti
push
fcomip
ja
jmp
push
add
add
inc
jmp
enter
jbe
mov
mov
mov
in
xchg
xor
es
lods
push
pop
sbb
lahf
out
push
xchg
cmp
xor
mov
lods
ds
cmp
mov
js
dec
push
xor
sahf
sbb
push
xchg
outs
shr
cmovl
call
mov
inc
adc
outs
and
test
push
mov
xor
inc
arpl
in
gs
stos
aas
push
xchg
int
sbb
push
dec
outs
push
cpuid
idiv
adc
in
dec
mov
sti
test
inc
test
pop
sub
pop
push
xchg
jbe
movs
mov
ins
mov
pop
sbb
(bad)
ficomp
repz
lahf
mov
fild
fmul
ret
enter
or
mul
sub
push
sbb
pop
stos
and
sub
xor
and
(bad)
cli
mov
cdq
ins
cld
loopne
and
xchg
sbb
int3
push
dec
dec
mov
ins
scas
inc
jmp
ror
rcl
sbb
jbe
mov
push
movs
cmp
call
pop
popa
nop
push
sub
adc
adc
dec
mov
xor
call
pop
out
dec
shl
test
mov
sub
cmps
(bad)
scas
js
sub
call
fiadd
mul
imul
in
cs
shr
push
mov
into
add
dec
icebp
adc
repz
mov
(bad)
sub
inc
xlat
xchg
jo
mov
xor
dec
not
dec
and
xchg
test
and
repz
jo
(bad)
clc
mov
test
out
push
sub
and
dec
xlat
(bad)
fist
cmp
mov
into
fst
fcom
daa
lock
retf
rcl
xchg
cmp
and
push
or
inc
imul
fisttp
sub
lock
cli
lods
cld
add
pop
lods
dec
mov
xchg
xor
lock
cmp
dec
jle
imul
sahf
cld
pop
mul
(bad)
and
or
dec
cmp
xor
cmp
mov
jo
dec
sub
cmp
leave
xor
daa
aad
bnd
jno
stos
ds
test
or
mov
inc
(bad)
push
mov
mov
cmps
shl
push
push
jae
cmp
and
jp
jp
mov
out
fld
loope
jb
aaa
lods
adc
push
adc
and
sbb
(bad)
mov
clc
inc
loope
arpl
xchg
jne
xor
scas
test
adc
iret
or
mov
daa
jge
(bad)
dec
addr16
xchg
mov
push
mov
push
mov
leave
mov
jle
cmp
xchg
retf
xor
mov
xor
sbb
push
jb
pushf
vcomisd
sbb
push
cwde
xchg
fcomp
out
icebp
mov
scas
mov
jp
cmp
pusha
adc
lods
push
test
inc
mov
pop
mov
pop
(bad)
movs
xchg
ret
lahf
jg
cli
das
add
pop
or
das
jmp
mov
pop
bound
fbstp
ja
or
outs
mov
fdivr
and
call
pop
mov
xor
(bad)
(bad)
imul
adc
cmp
mov
ror
cmp
mov
inc
mov
add
scas
xor
lds
jb
pop
adc
cdq
outs
out
cmp
or
sar
mov
jle
xor
mov
xor
loope
or
mov
shr
mov
cmp
sbb
fst
(bad)
jmp
in
ds
daa
mov
imul
xor
mov
ds
push
mov
dec
stc
xchg
and
loop
sti
add
cmp
mov
mov
inc
fstp
jmp
pop
mov
sub
aad
jb
mov
mov
or
mov
push
xchg
int
imul
(bad)
push
pop
sbb
sub
pop
xor
dec
mov
cmp
in
mov
inc
sub
add
and
dec
mov
leave
aam
xchg
pop
sbb
sbb
cmp
sbb
clc
lds
cdq
into
outs
mov
popa
xchg
ret
loopne
ins
jae
sub
and
add
cmp
(bad)
mov
jge
movs
mov
rcr
(bad)
adc
adc
cmp
fisubr
and
pop
out
movs
ins
fisubr
into
jg
clc
xlat
in
js
(bad)
sti
leave
xor
xchg
rol
dec
jae
cdq
in
cmp
mov
and
ins
adc
mov
into
ins
gs
out
leave
daa
jmp
sub
repnz
aad
mov
nop
pop
mov
repz
repz
cmp
js
inc
push
or
mov
jmp
cmp
call
fndisi(8087
dec
push
pushf
nop
adc
in
sub
pusha
hlt
mov
sub
mov
push
loop
sub
mov
pop
mov
jmp
(bad)
aas
push
jne
int
mov
inc
xchg
js
inc
mov
dec
(bad)
mov
cli
xchg
out
mov
fwait
jl
jmp
xchg
setb
sbb
test
dec
lahf
mov
sub
and
mov
mov
popa
adc
jmp
jmp
xchg
inc
mov
iret
addr16
mov
pop
cmp
lock
retf
add
xchg
movs
shl
call
rol
xchg
xor
fabs
xchg
mov
jmp
inc
cmp
push
mov
sahf
push
fisub
xchg
leave
add
rcr
pop
or
aas
je
sbb
pop
rcr
pop
ins
push
cld
xor
dec
push
mov
movs
mov
mov
push
xchg
dec
push
movs
jl
enter
loope
adc
push
gs
gs
mov
mov
cwde
scas
daa
push
retf
add
(bad)
or
dec
xchg
jmp
add
int3
push
mov
add
retf
outs
and
adc
dec
jae
xchg
or
xchg
mov
inc
cli
mov
not
int
int3
idiv
pop
inc
xchg
inc
and
add
or
enter
sub
dec
daa
aaa
popf
leave
in
pop
lock
jnp
js
call
int3
je
sub
stc
xchg
popf
call
imul
mov
cmp
out
movs
(bad)
inc
stos
lods
lahf
seto
dec
pusha
pop
stos
dec
mov
and
mov
cli
cmp
adc
dec
xchg
movs
(bad)
adc
mov
in
out
mov
(bad)
loop
dec
ror
sub
sti
push
dec
fiadd
and
cmp
sub
jmp
cmps
retf
inc
adc
mov
fwait
test
cmp
clc
jle
cmps
add
addr16
xchg
push
sub
neg
out
mov
adc
sub
ja
arpl
pop
inc
dec
add
cdq
fidiv
cli
cmps
jns
test
mov
pop
je
(bad)
adc
call
mov
not
pop
inc
dec
pop
xchg
adc
test
dec
dec
int3
data16
scas
push
sbb
jo
sbb
xor
xchg
cmp
enter
dec
ins
je
sub
mov
push
jmp
pop
or
js
sub
sub
cmp
fisttp
sub
mov
inc
fisub
add
fs
pop
test
sbb
xor
mov
icebp
xlat
mov
(bad)
sahf
add
lock
inc
inc
enter
jo
sbb
lahf
inc
inc
test
mov
lods
popa
jnp
mov
push
movs
lea
popf
movs
int3
sub
test
or
pop
jae
add
mov
scas
add
out
mov
out
mov
call
int3
or
push
sbb
cwde
ficom
add
lahf
daa
adc
ret
lea
hlt
mov
xchg
sbb
pop
sbb
jmp
ja
arpl
aaa
psubsw
repnz
retf
mov
jmp
mov
pop
mov
add
into
aaa
fsub
out
movs
addr16
mov
jmp
les
sbb
xchg
in
shr
jg
xchg
ret
icebp
outs
in
inc
rcr
pop
cmp
xchg
test
imul
mov
(bad)
out
shl
sub
jns
cmps
cmps
jnp
push
sub
addr16
adc
push
test
cdq
or
mov
cmp
bound
push
mov
std
test
addr16
xor
pop
iret
mov
in
add
jo
pusha
ror
xchg
(bad)
into
push
push
or
and
rcl
push
mov
xchg
sub
popf
push
jle
lea
movs
sub
sbb
mov
xchg
add
xor
sbb
das
(bad)
fisubr
sub
bound
cmps
in
or
and
mov
cld
adc
scas
push
mov
xchg
and
mov
out
jmp
cli
mov
inc
out
cmp
mov
sar
jmp
adc
adc
xlat
sbb
int
les
mov
jmp
sbb
jge
adc
jecxz
inc
sbb
cwde
mov
outs
test
hlt
(bad)
pop
loop
inc
jecxz
push
mov
xchg
in
test
les
ins
push
fnstcw
mov
outs
(bad)
push
xchg
xchg
aam
mov
fimul
mov
push
xor
lods
add
pop
call
lea
adc
xor
push
push
ret
neg
cmp
push
mov
or
int
jno
scas
xchg
popa
loop
bound
in
pop
add
xor
inc
mov
cmps
pop
xor
cwde
inc
sbb
jbe
cmp
imul
mov
mov
push
loopne
mov
mov
aaa
mov
cs
push
sbb
lods
jge
xchg
cwde
push
out
out
in
cmp
dec
movs
ficomp
daa
mov
cmp
adc
stos
mov
call
mov
dec
push
mov
mov
leave
ss
pop
mov
sub
mov
fisttp
ror
inc
stos
or
lahf
movs
jmp
xchg
std
push
xor
push
iret
icebp
popa
(bad)
mov
xor
sar
es
ins
das
cmc
or
fwait
mov
fimul
push
(bad)
call
fstp
sbb
adc
jnp
movs
faddp
adc
push
add
pmullw
jo
mov
add
push
sub
bound
sub
ins
out
retf
add
ror
mov
inc
aas
jb
push
out
dec
gs
ins
adc
jg
mov
lds
ret
xchg
(bad)
std
push
rol
call
push
cmps
pop
cmp
or
das
hlt
sbb
in
or
pop
add
sub
pusha
iret
mov
call
push
sbb
cmp
mov
popf
xor
xor
sti
(bad)
je
rcr
sbb
stc
ret
mov
imul
sbb
push
dec
sub
xchg
or
mov
int
jbe
pop
jge
adc
jbe
add
jmp
xor
icebp
out
push
outs
enter
sub
fdivr
inc
loop
jecxz
sahf
jns
cmps
mov
(bad)
sub
(bad)
fcom
xchg
sub
or
sub
loope
jp
fmulp
and
xor
push
inc
jb
or
dec
inc
ret
or
and
les
push
push
mov
imul
nop
inc
jae
shr
sti
cs
call
arpl
pop
push
or
adc
pop
pop
adc
mov
repnz
add
add
mov
jae
xor
cmp
jp
jg
xor
stos
loop
dec
lea
(bad)
and
push
retf
push
shl
rcl
aaa
bound
xchg
enter
dec
ds
hlt
int3
test
sbb
jne
mov
daa
(bad)
out
mov
(bad)
xchg
hlt
cmps
in
shl
cmp
pop
enter
mov
loop
cwde
int3
out
(bad)
ins
aas
icebp
sub
ja
ja
es
into
mov
mov
test
adc
movs
int
jno
ins
jecxz
lods
xor
jo
cmp
cmp
push
pop
jne
les
or
inc
scas
push
pop
lods
xchg
adc
push
sub
sti
push
shr
repnz
xor
cmps
dec
jo
inc
das
ins
shr
pop
or
xor
cmp
xor
add
sti
cmps
aad
cmp
or
sub
sbb
jne
or
dec
popa
add
mov
or
bound
xor
lahf
fcom
push
jmp
add
add
outs
in
dec
sbb
push
add
fmul
xor
jbe
jmp
fcmovu
mov
or
jg
add
jno
pop
addr16
jns
adc
xchg
pop
fsub
cmc
sub
mov
dec
mov
fmul
ja
or
out
enter
outs
test
mov
in
mov
xor
adc
jne
shr
jmp
dec
cli
push
ret
lock
out
pop
shl
adc
push
push
hlt
lock
sbb
stc
cmps
mov
push
pop
sbb
lds
cwde
mov
js
mov
add
cmps
adc
push
sub
dec
jg
int
and
loopne
push
jbe
adc
cmps
scas
inc
jp
int3
xor
stos
into
lock
mov
test
xor
jae
js
fwait
push
sbb
xchg
or
movs
movs
xor
cmp
adc
ror
shl
cwde
push
mov
mov
sub
push
(bad)
hlt
jp
loope
adc
retf
mov
iret
(bad)
cmps
dec
pop
mov
dec
iret
inc
dec
gs
es
jl
or
cdq
ror
pop
imul
jns
push
sti
(bad)
stos
and
inc
xchg
mov
(bad)
test
xchg
mov
lahf
sub
jg
bnd
pop
xor
push
jbe
enter
shl
test
cwde
and
jmp
scas
add
pop
cmp
mov
inc
in
push
xchg
sbb
cmp
dec
call
adc
or
int
test
add
imul
outs
test
cmp
inc
mov
adc
cs
adc
bound
and
mov
retf
enter
inc
xchg
ret
jbe
std
jb
fadd
jg
sar
mov
push
mov
std
and
xor
call
cdq
test
dec
dec
jp
test
ss
lea
pop
add
int
sub
xchg
test
sti
jp
adc
and
es
test
sub
cmp
push
shl
sub
jge
js
cmc
mov
add
enter
add
add
sbb
dec
fwait
cld
out
add
jo
cmc
sbb
mov
data16
cli
lahf
pop
cld
pop
and
push
xchg
iret
add
or
es
pusha
mov
push
data16
sub
fnsave
xor
out
inc
jmp
enter
les
hlt
jno
popa
ret
idiv
jb
lods
mov
or
jge
sub
ds
inc
pop
and
mov
jg
pminub
shr
outs
out
xchg
or
ds
ja
cli
cwde
outs
mov
mov
pop
bound
xchg
dec
add
or
sbb
fsub
lods
enter
xchg
push
and
add
and
pop
cmps
shl
push
mov
mov
test
pop
xchg
lods
ror
jp
pop
fbstp
frstor
(bad)
dec
xchg
test
sub
retf
addr16
xchg
cmp
push
pop
imul
cdq
into
sub
adc
dec
xor
push
and
je
adc
les
rcl
cs
dec
shl
mov
retf
lods
sti
xchg
fsubr
sub
pop
in
outs
mov
sub
lods
push
dec
stos
scas
adc
mov
mov
xchg
(bad)
jp
clc
jo
lahf
stos
jmp
mov
mov
rcr
inc
test
lock
fwait
retf
adc
(bad)
ja
repnz
je
pusha
pop
cwde
(bad)
ins
adc
cmps
cmps
xor
je
loope
mov
div
in
mov
popw
icebp
cwde
xor
inc
lds
mov
jecxz
push
loopne
aaa
xor
pop
aam
and
ror
adc
or
imul
in
adc
push
jno
mov
rcl
(bad)
fild
mov
or
adc
adc
dec
shl
and
(bad)
shl
mov
call
add
mov
int3
fadd
fdiv
dec
cmps
or
retf
xchg
jb
sbb
shl
xor
jmp
arpl
push
fwait
add
movs
inc
lea
xor
xchg
in
and
adc
sbb
in
fsub
jae
jns
imul
and
and
cwde
xor
mov
jp
cdq
(bad)
lods
in
daa
or
fwait
sub
fnsave
movs
or
xor
xchg
repz
inc
js
add
xlat
int3
xlat
in
sub
pop
mov
dec
lods
push
xor
fbld
mov
push
or
mov
pop
and
xchg
loop
push
ficomp
xor
out
bnd
stc
xor
stc
jmp
mov
fidivr
lea
(bad)
mov
pop
jns
jmp
mov
fnstcw
inc
pop
pop
sar
mov
jmp
sti
cmp
dec
adc
mov
(bad)
sbb
xchg
je
stos
imul
xor
pop
inc
outs
pop
(bad)
mov
aam
mov
mov
fisub
push
les
not
aas
mul
repz
out
push
imul
das
rcl
cmp
ficom
neg
cli
xchg
sbb
in
(bad)
mov
and
outs
aas
fcom
fwait
jbe
adc
cs
jne
imul
xor
xchg
test
mov
imul
movs
int
pop
jae
and
test
push
cmc
movs
add
mov
shl
ficom
out
outs
sub
or
jmp
or
jmp
xor
(bad)
out
dec
retf
jg
fadd
mov
mov
jno
pop
jl
sti
stos
inc
scas
inc
push
mov
sub
sub
pop
mov
push
shl
(bad)
xchg
in
push
jno
retf
sub
movs
pop
mov
shl
(bad)
mov
pop
dec
aad
mov
adc
push
lock
dec
ret
xor
fiadd
inc
fadd
inc
repnz
pop
lock
xor
pop
xor
xchg
mov
mov
ficomp
popf
das
movs
arpl
cdq
jae
add
(bad)
std
dec
add
mov
mov
call
fidivr
retf
in
push
lahf
xchg
add
or
std
les
das
enter
lahf
push
add
xor
sub
and
ds
fidiv
xchg
mov
push
and
movs
and
sub
in
ficom
adc
aas
out
mov
push
adc
cs
mov
ja
into
adc
or
push
or
and
(bad)
add
cwde
(bad)
sti
and
aad
jne
repnz
or
rep
int
lds
iret
fst
cmp
lock
in
hlt
out
das
sahf
int
cmc
push
ror
je
adc
cmp
movs
add
sbb
push
pop
mov
cmps
xchg
pop
outs
or
clc
inc
add
inc
mov
pop
xlat
bswap
retf
icebp
cmp
lds
pop
(bad)
jnp
fimul
outs
pushf
ja
popa
nop
cmc
pop
mov
addr16
inc
aad
imul
movs
jo
jae
pop
jbe
popa
jge
mov
mov
xchg
jae
push
pop
xchg
sbb
inc
and
xor
mov
fadd
mov
or
inc
lock
retf
pusha
hlt
cmp
mov
cmp
pop
dec
aas
popf
call
je
cmps
cmp
xor
sbb
adc
(bad)
sub
sbb
cmp
gs
clc
dec
jo
jmp
aam
(bad)
stos
in
fsubr
test
sub
ins
leave
rcl
repnz
loope
dec
cmp
sbb
xchg
aam
push
fwait
sbb
push
enter
jnp
xor
push
mov
inc
cmp
sti
repz
add
icebp
xor
je
inc
aas
and
jb
xor
loopne
retf
xor
mov
int
fld
sub
das
and
std
pop
inc
push
mov
std
mov
jae
(bad)
in
xor
dec
jmp
dec
push
dec
enter
mov
leave
cmp
mov
aas
push
or
or
gs
sbb
pushf
test
test
fucomi
cmps
ja
and
int3
repnz
test
and
xor
hlt
repnz
pushf
addr16
and
sbb
or
std
pop
int3
cdq
repnz
sub
cmp
fidivr
fldenv
xchg
fst
push
adc
inc
sbb
mov
push
push
retf
loop
jo
(bad)
lock
das
fsubr
xor
(bad)
repnz
push
add
xchg
pop
add
jne
mov
scas
je
(bad)
adc
in
push
push
adc
(bad)
in
add
out
or
(bad)
popf
xchg
ficom
or
xchg
or
rcl
adc
pop
jmp
pushf
repz
pop
dec
sbb
sahf
ins
lock
sub
inc
lds
ins
push
hlt
mov
sub
loopne
arpl
xor
ins
enter
je
xchg
cmc
sub
sub
dec
out
in
in
int3
out
(bad)
mov
rcl
sbb
iret
gs
leave
cmp
loop
cmc
xor
fwait
inc
(bad)
hlt
fistp
push
ss
add
fwait
mov
pop
ja
hlt
ret
add
(bad)
div
pusha
cli
mov
and
cmp
dec
or
call
mov
sbb
in
push
in
jmp
aas
adc
(bad)
out
test
test
xor
cmps
xchg
bound
cmp
je
in
popa
adc
add
mov
lock
adc
ret
jne
ins
neg
pop
cmps
fwait
xchg
push
inc
out
pop
dec
add
xchg
outs
or
sub
pop
pop
mov
jg
fldenv
jp
xchg
jmp
mul
cmc
fldcw
cmp
test
outs
icebp
cmps
pop
popf
xor
push
mov
cmp
fidivr
xor
or
aaa
not
iret
pop
cmp
sbb
mov
rcl
or
add
data16
sub
cmp
mov
dec
dec
scas
fist
popa
mov
inc
pop
and
popf
lods
es
mov
fwait
test
and
push
push
stos
cmc
test
lods
or
pop
retf
inc
sti
sbb
jmp
xchg
or
xor
push
and
mov
out
pop
loop
call
jb
mov
xchg
pop
cmp
addr16
xchg
ds
std
xor
inc
mov
nop
sbb
in
cmc
mov
jbe
cli
mov
mov
or
lods
mov
sar
enter
mov
cmp
jb
cwde
sbb
add
sbb
xchg
shr
lds
dec
ins
push
mov
sbb
jg
jmp
lods
popf
rcl
push
js
sbb
in
xchg
push
call
inc
sub
icebp
dec
(bad)
and
dec
sbb
sub
dec
test
push
sbb
fwait
test
inc
cmp
jmp
icebp
fcom
cld
(bad)
retf
mov
or
dec
or
sub
cmp
cli
jg
or
in
mov
test
xchg
inc
rol
jecxz
sbb
mov
ret
xlat
mov
call
add
clc
call
gs
jmp
mov
mov
push
clc
mov
daa
gs
cs
scas
and
add
cld
andnps
push
cli
sub
push
call
adc
or
lods
push
aam
test
jb
jns
jp
mov
icebp
imul
pop
xchg
cmp
test
or
out
mov
mov
pop
or
arpl
mov
mov
into
jno
pop
xchg
test
fnstsw
mov
mov
pop
push
test
loop
sub
ins
and
dec
stos
push
cli
(bad)
mov
lahf
lock
adc
xchg
mov
cmp
push
mov
pop
gs
dec
aaa
cmc
aaa
mov
xchg
mov
mov
mov
mov
fs
pop
pop
nop
push
in
sbb
gs
jecxz
stos
jo
pop
lea
stos
mul
fmul
or
adc
imul
aas
cwde
cld
add
and
hlt
pop
or
idiv
sub
jmp
xor
cdq
daa
push
clc
movs
mov
jecxz
mov
xor
cld
xchg
test
inc
leave
sbb
sbb
(bad)
mov
repz
and
pop
je
push
ret
jne
or
clc
jmp
add
sub
(bad)
xchg
fsub
and
leave
js
or
mov
lods
aaa
xchg
xchg
cmps
or
cmp
pop
call
lock
sub
ret
dec
in
pop
inc
adc
and
xchg
xor
(bad)
push
std
(bad)
cdq
lods
shr
xchg
push
mov
pushf
std
push
stos
push
jp
je
push
dec
ror
lds
and
mov
push
jmp
jle
dec
outs
call
sbb
inc
and
stc
mov
mov
fld
sti
cmp
pop
jnp
and
mov
sbb
stos
imul
ffree
loop
or
dec
add
lahf
sbb
ret
adc
paddd
retf
das
es
repz
sub
int3
adc
out
sahf
xor
dec
mov
inc
je
pop
jle
test
cmp
jp
inc
rcr
in
cmp
mov
mov
iret
in
sbb
sub
sub
cmp
jns
add
in
cwde
push
icebp
fidivr
movzx
call
ins
mov
and
or
push
pop
in
xor
ds
addr16
dec
pop
repz
int
fs
sub
jae
(bad)
bound
pop
mov
dec
rol
adc
test
and
pop
retf
cld
cmp
sbb
pop
(bad)
pop
jbe
sbb
pop
ins
push
push
outs
rol
jmp
mov
ins
test
xchg
daa
mov
push
add
inc
mov
cdq
(bad)
xlat
cmp
xchg
cmp
(bad)
cld
cmps
sub
mov
push
adc
cmps
push
mov
or
icebp
mov
mov
mov
sbb
inc
retf
mov
jns
sbb
not
adc
cs
xor
or
or
push
repnz
mov
sbb
cmps
in
push
popf
xchg
outs
add
xor
mov
aad
loopne
mov
adc
add
push
out
into
out
or
cmp
adc
(bad)
mov
pop
sbb
cmc
fistp
dec
and
lahf
xor
jl
push
stc
mov
ror
push
push
push
jno
lahf
sti
dec
mov
dec
push
add
shr
sbb
ds
sbb
enter
push
pop
pop
inc
or
test
ror
push
cli
or
pop
mov
popf
addr16
nop
fld
imul
aad
lds
scas
mov
in
cs
pop
pop
arpl
xchg
jmp
ret
out
sti
stc
cdq
(bad)
jmp
mov
pop
mov
repz
cwde
mov
repz
lods
fwait
xchg
sbb
cwde
cmps
cld
imul
pop
mov
jo
std
xor
stos
(bad)
jmp
cmp
pop
jp
lods
scas
imul
mov
sar
adc
pop
shr
dec
imul
jns
push
outs
xchg
push
dec
add
mov
scas
and
adc
adc
push
adc
je
jmp
push
dec
es
inc
xchg
adc
add
shl
push
imul
mov
pop
adc
mov
pop
lea
aam
lahf
repnz
ja
jmp
jg
icebp
fst
mov
and
pop
into
pop
mov
dec
mov
push
stos
push
jge
movsx
lds
sub
push
jb
xchg
add
fwait
outs
scas
je
xor
mov
test
mov
movs
lahf
iret
cmps
sbb
mov
je
fdiv
scas
inc
int
dec
xchg
popa
add
jecxz
movs
dec
jl
shl
xchg
mov
dec
cmc
pop
rcl
int3
in
cmp
adc
leave
lds
mov
or
pop
leave
push
xor
rcr
jae
loop
(bad)
or
cmp
xor
(bad)
test
sbb
or
xchg
add
add
sub
nop
adc
ret
fs
or
cmp
or
mov
ror
enter
adc
push
cwde
(bad)
outs
stos
les
dec
in
fsqrt
retf
scas
lock
jle
push
rol
sub
dec
pop
adc
xchg
or
sar
mov
cmps
inc
mov
loopne
rcl
(bad)
sub
popa
pushw
out
std
push
adc
stos
out
push
mov
add
ins
xchg
in
cmc
jo
aaa
mov
push
xchg
adc
shl
loopne
pusha
ins
cmp
leave
xor
xor
push
mov
in
sub
adc
lahf
(bad)
lods
addr16
fs
mov
clc
int
jp
mov
ins
cdq
fiadd
mov
pop
(bad)
cld
mov
xor
mov
add
lods
mov
xchg
xor
popa
ds
js
pop
mov
cli
loope
jae
out
add
xlat
jo
mov
pop
pop
cmps
dec
inc
jmp
add
and
imul
push
sahf
inc
aad
(bad)
frstor
fdivr
sbb
xchg
or
mov
mov
pop
aam
loope
xor
in
mov
test
inc
test
mov
arpl
shr
pop
mul
ja
jecxz
(bad)
sbb
sub
pop
stc
adc
xchg
es
test
and
leave
xor
rcr
in
ins
cmps
lea
lods
retf
mov
imul
inc
pop
pop
shl
push
pop
icebp
sbb
or
jmp
xor
dec
leave
nop
popa
fmul
mov
pop
mov
cmp
test
mov
daa
push
or
not
mov
adc
mul
sub
(bad)
loope
pop
sbb
xlat
sub
(bad)
mov
xor
ins
push
(bad)
aaa
jbe
ds
cli
aam
les
jns
std
repz
sbb
hlt
imul
int3
jmp
loope
mov
fwait
outs
and
xor
outs
movs
mov
js
or
retf
enter
call
(bad)
jmp
pop
xor
pop
mov
aaa
sbb
jmp
push
cmp
dec
repz
dec
fld
push
add
outs
jne
dec
jbe
scas
aas
loope
xchg
xor
jmp
or
add
and
out
adc
jbe
or
jp
mov
inc
ror
jmp
push
stos
xchg
push
push
outs
adc
inc
add
scas
call
xchg
or
into
subps
(bad)
cmp
pusha
jbe
lds
pusha
clc
push
and
cmp
into
xchg
sub
nop
sbb
push
enter
jno
xchg
ds
repnz
lock
mov
or
add
mov
cmp
mov
and
lds
ja
cld
sar
pushf
or
mov
cwde
cmp
pushf
xchg
add
sahf
pop
out
int3
pusha
ret
push
adc
add
jmp
cwde
pusha
push
cmp
mov
xchg
or
pushf
cmps
loopne
int
je
add
ja
and
sbb
jp
fldcw
inc
lds
and
jo
add
or
in
add
inc
or
dec
jmp
inc
repnz
lock
cmp
and
pop
xor
push
pop
xor
nop
lods
das
xchg
retf
cmp
mov
addr16
xor
cdq
fild
xchg
or
mov
outs
pop
xchg
inc
ret
rcr
jne
push
leave
pop
mov
xor
pop
adc
in
pop
adc
sbb
mov
jp
dec
mov
xchg
clc
push
cdq
mov
add
sbb
pop
pop
sbb
clc
addr16
and
xlat
pop
jns
jb
outs
dec
shl
inc
sub
js
mov
add
dec
xlat
sar
ret
and
rcl
or
icebp
in
push
popa
(bad)
xor
and
es
hlt
xor
push
push
mov
jge
mov
jmp
shl
nop
fdivr
int
jmp
mov
sbb
sub
mov
js
fmul
cmp
ins
ins
imul
shl
adc
xor
sub
cli
clc
xor
jecxz
jae
sub
mov
mov
pop
push
jb
mov
xor
(bad)
jbe
push
icebp
pshufw
xchg
test
adc
sbb
retf
mov
mov
retf
sbb
sub
test
lahf
pusha
fidiv
xor
icebp
mov
hlt
rol
mov
cmp
stos
sbb
data16
test
sbb
fimul
mov
call
mov
js
arpl
movs
pusha
dec
jns
jne
pop
cld
js
js
xchg
lds
clc
pop
out
test
cmc
adc
jo
cmp
mov
mov
loopne
sbb
sbb
lods
mov
enter
cmp
out
dec
jbe
je
pop
mov
jae
aam
les
test
out
dec
xchg
pop
cdq
fdiv
pop
dec
mov
pop
mov
nop
and
scas
popa
jmp
cmp
mov
xor
add
pusha
cmp
mov
sub
punpcklwd
pop
adc
shl
aaa
dec
mov
pop
jge
adc
ds
mov
ins
ins
call
aas
sub
(bad)
enter
push
nop
fisttp
dec
fnstcw
jne
nop
ret
ins
jns
add
call
jle
enter
mov
push
fsubrp
cs
aad
or
mov
ja
fsub
(bad)
and
ins
and
and
or
fs
cmps
sub
add
push
arpl
xchg
dec
mov
bound
retf
repnz
es
push
in
add
dec
pop
cmp
rol
mov
and
aad
xor
pinsrw
mov
pushf
xor
fsubp
cmp
cmp
pop
movs
dec
bound
(bad)
push
call
mov
ret
stos
test
inc
mov
push
test
and
cmp
mov
jno
mov
and
mov
jmp
cli
sub
mov
fnstsw
test
jmp
or
je
out
imul
test
xchg
aas
mov
and
out
jmp
lods
adc
retf
mov
lahf
sub
cmc
sbb
xor
push
dec
adc
out
mov
mov
ss
inc
sub
mov
push
jmp
dec
outs
or
inc
push
arpl
jnp
push
jns
jmp
aaa
bound
jbe
jmp
ret
shl
out
push
push
test
cmc
pushf
cmps
repnz
iret
xchg
ins
xor
jb
inc
push
mov
pop
icebp
mov
fs
call
not
mov
xchg
(bad)
mov
jbe
imul
fidiv
sbb
lds
jnp
push
call
jg
fisub
fs
fucomi
sub
xor
neg
cmc
clc
mov
std
mov
movs
sbb
add
add
adc
cmp
jae
jne
pop
retf
sub
or
cli
cmp
inc
stc
cmp
and
and
cmp
xchg
call
push
retf
stc
hlt
in
leave
(bad)
fdiv
(bad)
imul
lock
and
sti
cmps
movs
mov
jmp
imul
(bad)
xor
or
jns
xchg
cmps
cmp
clc
inc
in
ret
mov
cwde
or
push
pop
into
mov
dec
stc
xor
mov
retf
fstp
xor
leave
sbb
stos
lock
adc
dec
sub
div
movaps
ret
lahf
(bad)
push
lahf
nop
imul
adc
push
dec
imul
(bad)
in
jo
push
dec
test
lods
leave
lea
fidiv
push
fisttp
sar
push
stos
(bad)
movq
out
lods
or
leave
scas
popf
mov
icebp
push
mov
stc
add
out
test
or
adc
sub
mov
ja
loop
xchg
xchg
pop
mov
and
pop
mov
stos
pop
iret
(bad)
rol
xchg
jnp
leave
xchg
gs
ret
xchg
xor
aam
pop
xor
out
jmp
ror
or
clc
outs
lods
icebp
shl
mov
hlt
fcomp
ficomp
and
ins
push
sub
cmps
imul
adc
pushf
pop
lock
jl
inc
fnsave
dec
add
cmp
pushf
inc
or
sub
cmp
dec
pushf
retf
mov
mov
enter
dec
sub
cdq
xor
call
xor
scas
out
pop
ret
sub
mov
inc
shl
sub
jl
repz
mov
mov
push
sub
das
int3
cmps
xor
sbb
stos
or
call
lods
or
push
(bad)
iret
and
nop
aam
push
fyl2x
xor
(bad)
lock
sbb
popf
inc
cdq
addr16
mov
xlat
or
iret
jecxz
fwait
pop
pop
aas
push
enter
or
pop
fistp
outs
iret
das
in
frstor
and
ins
inc
add
test
mov
push
ss
mov
sbb
ins
enter
mov
fdiv
cli
jo
leave
jnp
push
sti
scas
(bad)
jne
pop
push
ret
sbb
inc
fldcw
mov
add
add
nop
xor
jmp
(bad)
add
mov
jbe
jo
sub
fcmovnu
sub
cmp
and
fs
or
xchg
lods
jmp
ja
jne
jne
lods
pop
mov
inc
cdq
jp
mov
xor
add
push
pop
and
fwait
cmp
fcomp
push
sbb
or
mov
hlt
cs
lods
push
es
std
bound
push
popf
inc
sbb
rcr
fist
fs
cmp
ins
push
and
stos
adc
fwait
in
xchg
add
jge
stc
in
ss
or
std
fcomp
jmp
and
dec
push
and
sbb
or
rol
arpl
mov
xchg
mov
jl
stc
(bad)
xor
mov
mov
mov
int
into
xchg
mov
ins
mov
xor
popa
fimul
push
mov
mov
(bad)
ds
ret
mov
cmp
adc
xor
sbb
es
mov
lods
loop
cmc
mov
shl
je
mov
div
into
xor
ins
pcmpgtd
js
sub
mov
hlt
int
ins
jl
cld
mov
push
or
inc
inc
(bad)
imul
push
out
mov
and
sbb
xchg
in
add
lods
pop
rcl
fisubr
mov
inc
clc
les
pop
cmps
fstp
ss
ficom
xchg
icebp
add
imul
dec
mov
add
lahf
cmp
and
mov
pop
je
out
cmp
mov
xchg
lahf
sub
idiv
jg
cld
xchg
xchg
sti
inc
cwde
cmp
jmp
shl
leave
outs
xchg
xor
movs
rcr
in
mov
xchg
sbb
and
test
cmp
cmp
retf
mov
fisttp
jbe
shr
(bad)
jo
jl
push
das
xchg
pop
cmp
loopne
call
in
movs
scas
fsub
sbb
mov
jle
xor
rcr
jnp
inc
dec
jo
les
inc
cmps
and
rol
mov
inc
and
cmp
dec
loopne
pminsw
cwde
sahf
mov
jno
inc
rcr
mov
aaa
(bad)
sub
xchg
dec
icebp
cmp
psubd
push
loop
test
ds
pop
inc
inc
jge
add
les
repz
hlt
jo
push
fsubp
(bad)
(bad)
(bad)
mov
xchg
add
sub
jmp
adc
dec
not
and
or
mov
push
ret
sbb
int
leave
imul
not
(bad)
mov
sbb
dec
jo
lahf
mov
push
jbe
add
(bad)
clc
popf
nop
pop
fucomip
sbb
sbb
inc
mov
in
cmc
mov
sbb
sbb
xchg
lahf
sbb
scas
jo
(bad)
mov
ret
mov
push
or
js
test
rcl
dec
call
stc
dec
inc
adc
add
repnz
jmp
push
adc
dec
xchg
inc
adc
adc
out
mov
fdiv
pop
sbb
out
(bad)
nop
inc
fld
mov
cmp
(bad)
int
mov
stc
imul
pop
mov
jp
stc
inc
sub
into
pop
shl
cmp
mov
rcr
push
pop
inc
dec
in
xor
popf
dec
sahf
lea
push
aas
mov
(bad)
ror
cmp
jb
enter
dec
jae
xchg
and
jp
cmp
in
push
movs
jno
cwde
inc
test
fnsave
shl
jl
fsubp
cmps
mov
and
jecxz
or
dec
lock
xor
xor
and
xchg
push
das
and
mov
xchg
add
dec
push
cmps
mov
and
mov
test
jp
cmps
out
mov
stc
dec
inc
iret
in
dec
and
mov
ins
cmps
and
mov
out
add
push
pusha
mov
sti
pop
dec
aas
ss
js
xchg
iret
and
push
rol
lods
mov
cmp
cmp
mov
mov
movs
sub
xor
or
adc
mov
cmp
jns
jbe
or
adc
add
inc
push
shl
dec
xor
mov
sub
(bad)
cli
mov
shr
jle
pop
in
ins
jne
pop
cmp
lock
aam
sub
add
retf
outs
mov
test
add
push
out
mov
test
je
mov
loop
int
ficomp
aas
mov
and
and
and
or
out
shr
test
ja
(bad)
lock
rol
fwait
jno
mov
mov
push
mov
repnz
fs
sbb
lods
xor
call
(bad)
loop
repnz
and
xor
or
add
adc
dec
adc
scas
retf
and
mov
cmp
inc
(bad)
or
jno
lock
aas
addr16
mov
sbb
mov
lods
dec
pop
xchg
mov
inc
fsub
push
cdq
jbe
aas
pop
popa
mov
imul
ss
inc
jns
aas
dec
push
sbb
sbb
or
cwde
es
mul
(bad)
neg
pop
shr
push
xor
adc
movs
cmps
cs
or
xchg
xchg
(bad)
ins
loop
retf
cmp
sbb
adc
outs
(bad)
jae
mov
cmp
push
pop
push
push
pushf
mov
pop
test
inc
ror
pop
pop
lahf
jg
test
mov
nop
cmp
dec
repz
xchg
jmp
lock
add
in
mov
lea
mov
nop
fmulp
inc
adc
xchg
lods
pop
std
pop
mov
in
(bad)
je
fs
pop
lahf
push
not
pop
jnp
mov
popa
mov
js
fbstp
aas
add
jg
test
in
enter
pop
mov
bound
pop
les
pop
jno
fld
jae
jno
mov
jnp
mov
mov
into
adc
cld
scas
and
add
jle
cmps
inc
xchg
pop
cmp
addr16
xchg
sbb
xchg
fst
or
or
loope
ins
outs
ins
push
test
hlt
inc
mov
push
xor
jns
rcl
(bad)
push
pop
and
retf
pushf
call
sahf
call
shl
lods
cwde
cmp
popf
fiadd
dec
(bad)
out
rol
test
inc
push
and
or
(bad)
mov
std
loop
and
jle
popa
imul
icebp
(bad)
adc
ins
addr16
jmp
enter
pusha
cmp
into
or
pop
jmp
adc
mul
adc
icebp
xlat
(bad)
cwde
in
rol
ins
pop
push
test
fadd
sbb
sar
mov
cmps
jge
out
scas
dec
pop
pusha
test
ftst
daa
shl
xchg
jl
into
test
daa
adc
hlt
xchg
movs
bound
sub
dec
mov
(bad)
pop
pop
out
inc
adc
js
rcl
jnp
arpl
cs
push
outs
ja
cmc
jmp
movs
xor
ins
outs
outs
(bad)
push
test
pushf
push
aas
loop
inc
xor
mov
fsub
add
cmp
add
mov
mov
sti
pop
loope
add
add
fwait
adc
in
mov
dec
loop
out
pusha
lods
cmc
pop
cld
lahf
test
imul
outs
xor
loopne
enter
(bad)
jle
cmp
push
ins
popf
jno
xor
cmp
pop
xchg
sub
and
mov
adc
stos
icebp
fwait
loope
sub
pop
enter
push
or
fcomp
lea
cs
neg
mov
into
push
arpl
cld
jl
sub
adc
mov
mov
adc
mov
xchg
sub
cmps
mov
cwde
dec
xchg
sub
mov
pop
and
mov
retf
mov
mov
xchg
mov
clc
test
test
jge
mov
or
xor
pop
into
or
repnz
add
add
cmp
push
and
ds
dec
or
rcl
jg
cmps
mov
sub
(bad)
test
dec
fistp
dec
sar
jns
rcl
cs
mov
adc
stc
mov
pop
push
push
or
or
inc
mov
sub
lods
nop
gs
cwde
adc
ins
retf
sub
xchg
mov
inc
sbb
jne
jmp
imul
outs
loopne
add
adc
mov
cmp
dec
cmc
and
xchg
jmp
pop
add
loopne
xchg
xchg
daa
adc
xor
dec
add
or
popf
shl
data16
mov
push
mov
ret
ror
int3
call
jns
cmp
in
mov
and
in
sub
data16
mov
jecxz
add
cwde
arpl
cld
jb
les
out
cwde
dec
mov
xchg
cmp
out
lahf
loope
mov
add
in
and
ins
sub
mov
add
in
xor
cmpxchg
daa
add
cmc
jl
push
mov
xchg
cmp
inc
sub
fstp
mov
std
pop
outs
scas
sub
(bad)
ret
and
fdivr
call
fnsave
xlat
xchg
jo
movs
mov
xchg
sub
ret
nop
or
jnp
push
pop
inc
adc
loopne
dec
movs
lods
fsub
rcr
in
push
fiadd
xor
jae
cdq
dec
das
xor
xlat
imul
fcom
aas
and
pop
scas
fcomp
cmc
xor
dec
xchg
adc
mov
addr16
push
add
test
adc
sub
sub
xor
add
fs
ja
cli
inc
xor
movs
in
(bad)
pusha
xchg
aaa
add
add
jecxz
js
mov
push
(bad)
adc
inc
sbb
jp
add
or
nop
bswap
int
jecxz
sub
mov
xor
lods
cdq
out
stos
sub
in
ja
pop
in
xor
xor
ror
js
test
(bad)
aad
jnp
cmp
gs
jbe
push
cmps
push
and
jle
(bad)
jge
xchg
cmp
jno
adc
loopne
out
rcl
inc
out
arpl
(bad)
icebp
call
mov
add
mov
lods
dec
add
fld
in
or
stos
loope
stos
bound
(bad)
loop
les
inc
cmp
dec
cmp
push
test
mov
add
mov
jmp
fucomp
and
ror
pop
and
sub
pop
cmp
mov
test
outs
xchg
js
mov
js
add
pop
jns
dec
fwait
mov
cmps
pop
mov
lods
jecxz
push
js
cmc
pop
push
popw
je
loope
push
pusha
push
and
in
pop
inc
mov
push
mul
js
lods
movs
clc
(bad)
xlat
dec
jmp
fcmovnu
shl
or
mov
in
out
in
in
jmp
sub
and
imul
int3
mul
in
mov
movs
pop
add
scas
in
sbb
pop
sub
jge
jmp
test
fist
addr16
cmp
jle
cmp
mov
and
sar
inc
jmp
retf
inc
idiv
sub
jbe
jecxz
into
sbb
add
add
mov
mov
popa
fxtract
or
inc
std
fistp
or
daa
call
cli
mov
retf
mov
mov
add
push
test
aas
std
stos
or
fs
mov
stc
cmp
out
popf
in
fadd
mov
mov
pop
pop
mov
test
enter
jnp
les
into
int3
mov
retf
dec
popa
jbe
out
pop
xor
adc
pop
sub
call
out
sub
mov
mov
push
mov
cmp
fimul
mov
stos
dec
popa
jle
push
add
push
jo
(bad)
mul
aad
mov
push
loopne
push
in
push
pop
fwait
rcr
call
pop
inc
adc
fs
xlat
in
je
pop
ds
jecxz
pop
dec
and
inc
xor
push
push
mov
push
mov
pop
inc
stc
sar
lock
mov
shl
xchg
retf
adc
pop
add
loop
fisttp
arpl
push
jg
mov
test
push
fcomp
(bad)
in
adc
dec
mov
retf
cmp
push
and
mov
gs
jmp
ret
pop
xchg
aam
icebp
sub
lahf
add
fcom
jns
outs
bound
mov
iret
push
dec
xchg
jge
call
leave
(bad)
repz
mov
cmp
sub
inc
inc
and
psrld
pusha
movs
xor
dec
mov
loope
push
rcr
cmp
sub
and
jnp
outs
xor
xor
mov
xchg
mov
jo
fisub
add
mov
int3
push
dec
adc
ins
int3
inc
sub
sub
outs
add
sub
scas
or
scas
inc
mov
in
sbb
psubw
fild
lea
clc
enter
sub
pop
out
adc
sti
mov
ins
int3
cld
retf
add
pop
xor
addr16
dec
mov
aad
mov
(bad)
adc
cdq
cmp
sbb
ds
and
stc
int
mov
sahf
retf
call
or
cmps
and
xor
push
cmps
sub
inc
(bad)
ins
dec
jnp
nop
add
xchg
loop
add
nop
popf
(bad)
push
mov
and
push
ss
ja
mov
cli
push
cmp
loopne
jbe
mov
sbb
push
in
push
(bad)
mov
pshufw
pop
clc
push
pop
dec
jne
lods
je
and
inc
pop
add
fnstsw
jecxz
out
faddp
add
jno
adc
fwait
jl
into
mov
push
sub
(bad)
push
adc
jg
add
add
inc
out
inc
pop
shl
out
mov
inc
movs
add
xchg
or
(bad)
aam
sub
jecxz
mov
lahf
int
ins
xchg
dec
xchg
inc
arpl
and
mov
in
aaa
aas
cmc
dec
xor
xchg
xor
dec
mov
lods
(bad)
mov
repnz
inc
adc
sbb
fistp
dec
or
jns
inc
or
pop
adc
cli
clc
popa
and
pop
into
dec
call
xchg
pop
mov
aad
mov
loope
mov
mov
ret
dec
and
sbb
std
fdivr
out
mov
test
and
imul
pop
pop
pushf
push
test
fsub
mov
cmp
jb
out
adc
mov
xchg
cmp
cmp
(bad)
call
pop
stos
inc
icebp
xor
mov
sub
push
push
pop
loopne
add
mov
xor
int3
mov
lds
push
jge
xor
mov
cmc
inc
into
or
push
push
and
inc
xor
fistp
sub
je
or
push
jno
add
fst
jbe
mov
mov
cwde
setno
leave
adc
push
or
add
dec
mov
push
into
mov
inc
mov
retf
dec
es
dec
lock
les
adc
test
fst
cmp
into
loop
xchg
jmp
cmp
pop
repz
ficom
sbb
xor
dec
push
add
inc
xor
or
vandnpd
and
xchg
js
inc
es
das
jmp
out
(bad)
or
out
pop
ret
push
xor
mov
aaa
mov
xchg
and
clc
add
xchg
jns
sub
jmp
jle
or
pop
jle
push
outs
adc
push
loopne
jb
and
xlat
jbe
mov
mov
lods
sbb
cs
jne
ret
dec
call
je
add
test
test
cdq
jmp
mov
fld
mov
inc
pop
pop
cmps
pop
inc
mov
mov
ret
inc
pop
xor
sbb
lods
adc
sbb
dec
das
jg
ins
xchg
add
inc
ins
sahf
aad
out
cmp
or
in
retf
xor
fmul
arpl
xchg
std
ds
test
addr16
push
lods
in
loope
cmp
dec
pop
std
loope
xchg
inc
push
pop
mov
psubw
jns
fcom
jmp
xchg
pushf
imul
loopne
cmp
mov
sub
fdiv
and
xor
not
iret
frstor
test
daa
mov
outs
mov
repz
out
fwait
mov
push
inc
lods
aas
imul
call
out
pop
or
pop
push
loop
mov
outs
outs
push
pop
pop
leave
cld
xchg
sbb
mov
dec
mov
or
or
push
pop
xor
rcr
(bad)
outs
xlat
fisttp
xor
xor
mov
leave
test
dec
sub
std
cdq
and
mov
test
mov
cmp
xchg
pushf
push
cmp
mov
sbb
mov
into
pop
mov
pop
jnp
mov
or
xor
neg
test
cs
push
mov
addr16
fwait
push
out
jle
mov
(bad)
xchg
add
cmp
pop
pusha
xor
cmps
out
cmp
std
scas
jecxz
add
in
cmp
in
scas
aas
xchg
xchg
fadd
xor
rol
rcl
push
inc
(bad)
pop
add
addr16
cmp
dec
fcomp
adc
sbb
outs
jno
cmps
dec
push
sub
imul
rcr
cwde
and
add
mov
ins
mov
adc
mov
and
mov
(bad)
ret
ja
mov
ss
or
mov
mov
push
and
jnp
test
cmp
fwait
xchg
sbb
fwait
xchg
out
lea
add
(bad)
loopne
push
(bad)
(bad)
shr
adc
jb
and
sub
nop
ins
clc
xor
xor
lods
xor
jnp
pusha
mov
jnp
dec
cmp
jge
cwde
fisubr
(bad)
mov
aad
jmp
mov
das
cmps
test
cs
pop
add
rcr
out
jns
xchg
sub
sub
jl
sub
mov
jbe
(bad)
mov
mov
jp
or
aad
stos
mov
imul
jmp
scas
jl
cmp
fxch
test
mov
or
pop
add
jp
push
cmp
xor
jae
adc
outs
mov
mov
movs
addr16
xchg
mov
jmp
hlt
mov
aaa
jne
push
xchg
mov
jp
ds
mov
jmp
movs
cmps
mov
adc
or
fwait
mov
mov
call
ret
jmp
sub
or
bound
dec
rcr
xlat
adc
fst
push
xor
mov
xlat
pop
test
and
ret
adc
fbstp
add
cmp
mov
test
fild
outs
call
xor
repnz
dec
ins
test
fisttp
aam
lock
ja
hlt
pop
lds
xor
sbb
pop
push
cwde
out
xchg
repz
les
add
repnz
fs
lea
jge
neg
ror
pop
ret
repz
mov
adc
jecxz
cmp
call
retf
add
cmp
pusha
int3
push
mov
or
retf
xchg
bnd
lods
(bad)
pop
or
or
jno
call
popa
cmps
xlat
rcr
jno
mov
jne
pusha
sub
push
jge
pop
add
pop
dec
mov
ret
in
in
inc
pop
and
pop
and
push
push
jmp
outs
imul
outs
pop
in
cmp
pop
call
pop
mov
mov
gs
mov
and
cmp
iret
pusha
js
lea
fs
and
pushf
int
fwait
sub
and
ja
or
pop
cwde
sub
inc
sub
lods
sub
arpl
pop
mov
jmp
pop
sahf
xlat
shr
adc
repnz
mov
mov
pusha
jns
mov
imul
xchg
sub
pop
jmp
sbb
ins
mov
pop
mul
inc
pop
jns
pop
sbb
mov
or
sbb
cmp
push
jmp
int3
dec
loope
mov
std
(bad)
cmp
mov
mov
jmp
inc
xchg
jp
cmp
sub
mov
stc
cmps
xor
fcmovu
cmp
leave
or
repz
inc
mov
push
arpl
dec
push
mov
xor
dec
ins
mov
and
enter
std
add
xor
sub
dec
sbb
ficomp
sub
inc
mov
mov
xchg
test
fwait
push
xor
sbb
lahf
xor
push
repnz
jmp
in
jnp
test
popa
mov
dec
in
xor
out
mov
fwait
pop
mov
sub
ins
push
pushf
sub
in
dec
jp
cmp
leave
fstp
cmp
pop
cmp
movs
(bad)
into
cwde
dec
repz
sahf
js
cld
push
or
jnp
xor
arpl
mov
nop
leave
int3
sbb
push
int
fsubrp
mov
jne
not
imul
mov
jle
pop
jns
dec
scas
jge
xlat
and
push
sahf
int
push
mov
(bad)
cmc
and
cli
mov
in
cmp
push
stos
add
(bad)
sbb
inc
mov
inc
ins
ror
test
dec
ins
addr16
mov
test
shr
daa
retf
sahf
mov
sbb
and
or
adc
cs
push
mov
jnp
sar
imul
ret
cmp
fmul
cmp
jae
dec
dec
pop
cmp
out
fnstsw
dec
test
jmp
mov
int3
aam
and
test
clc
and
jecxz
es
cld
aad
mov
stc
xchg
jge
in
outs
in
dec
jle
jg
inc
and
hlt
ror
int
int3
bound
fild
pop
mov
out
mov
fist
or
pushf
push
and
outs
(bad)
cmp
xor
js
and
sub
dec
adc
lahf
out
dec
mov
push
ins
or
xor
xchg
aas
xor
(bad)
test
jmp
jbe
out
clc
(bad)
mov
(bad)
icebp
inc
xchg
pop
and
adc
jmp
pop
cmp
and
mov
(bad)
std
and
jge
or
repnz
shl
mov
ins
sar
mov
mov
imul
icebp
pop
rcr
adc
sti
pop
or
xor
inc
xor
sub
inc
adc
push
movs
jge
leave
mov
jmp
mov
jmp
lahf
stc
std
cdq
push
das
xor
push
imul
add
mov
sub
mov
mov
(bad)
(bad)
aas
mov
mov
inc
cmovp
dec
pop
sbb
jne
fsubr
shr
sub
out
test
fld
cmps
push
int
cmp
data16
(bad)
pop
mov
(bad)
push
pop
mov
shr
enter
jae
add
aad
push
fstp
mov
sub
nop
nop
push
or
out
pop
mov
mov
stos
or
xchg
pop
sbb
xor
and
sti
inc
push
ja
std
inc
(bad)
daa
pop
mov
(bad)
inc
cmp
xor
in
jnp
adc
adc
lods
mov
inc
push
adc
sub
dec
dec
xchg
loope
dec
lds
mov
push
add
or
les
sub
hlt
mov
pushf
imul
sbb
dec
jmp
call
loop
xor
mov
xor
stc
and
jb
xor
fwait
ja
in
add
fdiv
and
out
jae
ror
fcmovbe
jp
outs
fsubr
jno
(bad)
fcom
ins
jecxz
(bad)
in
xchg
loopne
add
xchg
shl
jle
(bad)
pop
fwait
xor
mov
mov
lock
loope
add
mov
push
pop
mov
mov
cmp
adc
mov
lods
pop
pop
(bad)
mov
stos
mov
mov
out
or
dec
push
in
(bad)
(bad)
push
fs
mov
ror
mov
mov
lea
xor
dec
(bad)
popa
push
lahf
mov
je
aaa
cmps
add
dec
cmp
and
arpl
xchg
or
jl
(bad)
ja
cs
or
out
jp
fcom
adc
shr
mov
adc
sub
add
jbe
mov
mov
xor
push
sub
push
fcom
xchg
retf
fs
or
(bad)
dec
push
mov
aaa
div
push
leave
in
and
call
and
push
ins
xchg
mov
jmp
inc
jmp
push
mov
aam
or
mov
cmp
jecxz
jmp
mov
mov
cmp
in
daa
clc
sub
pop
clc
(bad)
outs
mov
xor
lods
std
sti
cmp
(bad)
in
add
data16
mov
sbb
aam
in
outs
jae
push
xchg
call
aad
dec
rcr
out
popa
pop
out
ror
adc
movs
dec
add
jmp
xor
std
dec
outs
cmp
fistp
and
push
jmp
push
jecxz
js
and
jmp
test
nop
fnstenv
push
repnz
pop
sub
stc
mul
jecxz
jmp
mov
pop
push
pop
xchg
dec
cmp
add
mov
sbb
push
pop
xor
sahf
and
mov
dec
mov
(bad)
jge
add
mov
xor
jne
std
push
outs
fdivr
dec
cmc
int3
jae
push
jns
ja
sbb
aaa
pop
push
xchg
and
loopne
cmp
cmc
pop
sbb
push
call
cmc
repz
sub
ins
adc
mov
out
mov
mov
addr16
adc
(bad)
cmps
cli
push
pop
inc
fnsave
xlat
scas
scas
pusha
(bad)
cmc
dec
stc
imul
neg
lahf
loope
out
xor
les
jne
imul
cmp
xchg
xor
retf
mov
lock
shl
mov
clc
or
daa
push
stc
iret
ror
rcr
add
outs
(bad)
push
in
pop
sbb
jp
push
pop
push
test
sub
jb
stc
aad
xor
lods
cmp
jle
les
popf
cmps
sar
mov
repnz
mov
arpl
push
cmp
fld
jmp
mov
mov
inc
sub
add
test
daa
or
fisubr
adc
push
in
mov
dec
sub
pop
adc
push
cmp
xor
in
and
arpl
les
cmp
cmp
popa
js
arpl
inc
shl
neg
sub
dec
dec
xchg
mov
pop
lea
aad
pop
sbb
or
sub
int
inc
loopne
div
leave
arpl
repz
repnz
fdiv
mov
(bad)
pop
repnz
sub
mov
out
mov
pop
or
or
imul
cmp
mov
xor
sbb
inc
ret
shl
push
inc
(bad)
imul
pop
fstp
jp
es
jge
add
arpl
add
pop
fld
shl
stos
mov
xchg
mov
es
adc
leave
cdq
mov
sbb
mov
push
jmp
xlat
mov
sub
sub
jnp
adc
clc
mov
fistp
cli
and
xchg
xchg
dec
loop
cwde
push
scas
stos
inc
xchg
stos
push
retf
(bad)
ins
out
(bad)
adc
out
mov
das
popa
aas
loopne
xchg
mov
pop
sets
mov
adc
mul
mov
je
mov
cmp
fdivr
ins
stc
mov
mov
xlat
das
fsub
mov
adc
div
(bad)
outs
or
push
add
sub
jno
dec
ret
xor
sbb
sub
push
icebp
xchg
mov
sbb
add
cld
pop
fadd
jl
aas
inc
pop
cmc
ror
pop
jno
adc
aaa
cmc
or
add
inc
xor
mov
ds
sub
imul
mov
push
inc
cmp
int3
mov
das
fcmovbe
or
adc
mov
in
or
add
mov
gs
sahf
mov
xchg
mov
inc
mov
jp
sub
mov
test
repnz
mov
pop
dec
and
dec
lea
inc
sbb
adc
movs
jecxz
ins
popf
add
jp
mov
imul
hlt
xchg
jle
movs
int
mov
mov
dec
popa
call
rcr
fldcw
push
enter
pop
sbb
sub
fcom
adc
cmp
xlat
call
push
int3
retf
push
sar
adc
adc
das
ds
bound
push
sbb
xor
add
std
(bad)
sub
sub
cmps
pusha
mov
ficom
dec
div
lahf
jne
std
outs
(bad)
leave
mov
jmp
inc
sub
xor
out
scas
and
jmp
and
inc
inc
xchg
sub
cmp
xlat
out
xchg
pop
dec
cs
dec
cmp
leave
inc
fidivr
repnz
sub
jecxz
std
xchg
(bad)
fisttp
sbb
dec
mov
mov
pop
test
in
shr
xor
jo
js
loop
mov
out
cs
repz
mov
ror
mov
xor
pop
pop
jp
mov
jbe
fs
pop
or
xor
stos
jb
pop
movs
pop
jbe
jns
mov
jge
in
ret
scas
into
jmp
ret
rcr
xchg
faddp
in
test
pop
sub
jmp
or
xor
test
xchg
mov
xchg
and
push
into
mov
mov
dec
loopne
pop
sub
int3
dec
jno
mov
popf
lock
cli
adc
repz
test
xchg
hlt
retf
cmp
dec
sub
call
push
adc
add
mov
jnp
mov
mov
sbb
outs
cmp
neg
cmp
inc
ds
push
jne
sti
push
pop
hlt
in
dec
pusha
mov
es
lsl
xchg
xchg
fcom
adc
mov
out
push
cmc
lods
pusha
jmp
not
xchg
aas
enter
inc
in
cmp
arpl
mov
shl
add
scas
sar
jl
out
fmul
cs
inc
bound
(bad)
cmps
jle
dec
mov
xchg
aaa
xor
int
mov
cmp
jae
fld
mov
jp
xchg
jl
in
call
push
popa
out
push
lock
push
cmp
and
movs
pop
pop
scas
mov
cmp
add
push
cwde
retf
cwde
out
xchg
pop
cmp
fsubr
loop
sti
cmp
add
jmp
aas
or
push
push
mov
into
jecxz
imul
push
jae
and
xchg
cwde
loop
xor
fwait
loopne
retf
ins
lods
outs
or
cmps
stc
sbb
lods
int3
mov
test
xor
stos
in
mov
js
dec
dec
int3
lock
pop
add
jg
mov
cmps
mov
pop
push
hlt
mov
mov
xchg
or
sub
int
repnz
enter
fistp
sub
push
jo
dec
imul
ins
movs
jge
enter
mov
mov
push
rcr
xchg
mov
pop
test
test
xor
mov
ins
(bad)
retf
loop
das
dec
or
xor
test
mov
stos
(bad)
xchg
adc
push
dec
bound
loope
rcl
mov
mov
add
outs
xchg
mov
cmp
mov
loopne
mul
rcr
and
mov
xor
cs
and
dec
sahf
adc
lea
data16
mov
pop
loope
jg
(bad)
repz
(bad)
movs
repnz
push
dec
cmp
jnp
(bad)
fcom
jne
aaa
scas
sbb
push
cli
fmul
xchg
cmp
adc
jae
mov
ja
jecxz
pop
jmp
fwait
sub
add
aaa
cld
jecxz
je
daa
jne
retf
add
pop
mov
xchg
jle
mov
sbb
fdiv
adc
xor
retf
stc
out
popf
cmp
rol
jmp
mov
fisubr
pushw
mov
jo
xchg
fsub
cmp
js
xor
and
fld
fsub
lods
pop
ins
mov
inc
scas
push
pop
mov
xor
nop
int3
mov
and
lahf
and
cs
push
aas
pop
sbb
int3
or
test
cmp
les
xchg
jbe
pop
test
je
add
xchg
push
lds
lods
out
out
movs
pop
out
xchg
stos
jle
lds
pop
test
mov
dec
cwde
sub
dec
xchg
je
add
fcmovne
nop
sub
xchg
test
lds
clc
xchg
push
fimul
ins
inc
sbb
inc
scas
scas
jbe
xchg
fwait
xchg
pop
pusha
xlat
in
xchg
mov
mov
and
xchg
jg
ja
mov
dec
(bad)
repz
mov
or
aaa
repnz
sbb
push
(bad)
dec
push
jns
sbb
inc
jns
jno
gs
icebp
mul
test
pop
(bad)
pop
cdq
push
dec
mov
mov
ins
mov
mov
add
(bad)
add
jb
into
fcmovu
popf
jp
(bad)
xchg
mov
test
lds
xor
xor
jle
repz
rcr
push
call
rcl
(bad)
arpl
cmp
test
xor
dec
gs
inc
mov
mov
(bad)
mov
out
in
stos
fiadd
pushf
movs
cmp
ins
xor
cmp
cwde
mov
movs
pop
xor
cs
mov
cmps
inc
fwait
ss
outs
jnp
jns
(bad)
push
or
mov
jns
fs
and
push
add
jnp
leave
mov
sub
mov
rol
retf
addr16
icebp
aam
ins
sahf
in
dec
(bad)
push
cwde
into
jle
or
(bad)
pop
xchg
mov
out
mov
and
jmp
xchg
adc
popf
xchg
pop
cmp
loopne
inc
push
cmp
loope
dec
pusha
popf
jmp
jl
and
call
sbb
addr16
packsswb
clc
mov
add
lock
mov
add
pop
in
mov
jnp
stos
cmps
pop
inc
jle
lahf
sub
unpckhps
pop
(bad)
in
xchg
into
xchg
xchg
or
adc
cmp
out
mov
or
pop
lds
inc
fwait
push
mov
inc
cli
ins
mov
sub
aas
iret
jge
in
in
fdivr
dec
leave
pop
ror
nop
mov
pop
xor
adc
and
jle
mov
mov
and
cld
pop
and
and
ja
movs
fscale
in
mov
push
cmps
aaa
and
xor
xchg
(bad)
into
outs
and
int3
mov
mov
mov
fwait
pop
lock
xor
imul
pop
pusha
xor
test
call
mov
xor
call
jle
rol
lahf
stos
cmp
cmps
cli
and
fwait
mov
mov
mul
jb
mov
cmp
mov
pop
jo
inc
fistp
das
xchg
xor
push
call
or
daa
dec
inc
cmps
mov
jp
xor
push
sbb
es
in
add
retf
or
fild
or
cmp
sahf
out
je
adc
es
scas
pop
jae
stos
nop
inc
loope
enter
xor
jge
inc
and
lods
rcpps
jle
jmp
mov
dec
(bad)
or
sahf
mov
or
loope
stos
es
push
pop
and
xchg
inc
inc
or
sbb
mov
addr16
cmp
ret
das
pop
sub
push
jmp
xor
jo
shr
aaa
outs
jg
stos
loop
adc
cmp
xchg
and
push
pop
pusha
mov
retf
call
inc
bound
fcom
jbe
jb
inc
push
sbb
(bad)
shr
xchg
pop
movs
push
leave
mov
js
imul
sar
cmp
repnz
mov
in
inc
clc
fwait
add
xchg
movs
push
(bad)
loopne
ss
outs
cmp
inc
mov
or
loop
(bad)
cmc
(bad)
sbb
mov
aaa
xor
out
call
dec
arpl
cwde
in
dec
push
sti
push
jp
push
add
cmp
dec
sbb
(bad)
cmp
mov
pop
dec
hlt
mov
daa
jmp
xchg
fild
imul
stos
mov
mov
add
lods
(bad)
test
cmp
mov
call
retf
jge
dec
cmp
fs
adc
rol
fnsave
and
adc
xchg
in
xor
outs
adc
xchg
cmps
or
call
xlat
push
imul
lods
fisttp
xchg
sbb
lea
fisttp
xchg
sti
div
dec
test
mov
add
into
mov
pusha
ins
jns
mov
jns
adc
mov
je
stos
mov
das
jnp
add
call
adc
inc
push
mov
sub
mov
inc
in
sub
movs
sub
jo
(bad)
push
(bad)
mov
mov
jl
repz
int3
arpl
dec
inc
sub
mov
mov
push
test
fwait
push
pop
push
out
mov
fcom
fsubr
pop
(bad)
adc
lods
pop
jmp
(bad)
iret
out
mov
jb
mov
into
imul
retf
fsubr
inc
es
dec
adc
mov
test
push
hlt
mov
iret
jbe
(bad)
dec
inc
xor
and
sub
mov
cli
ror
(bad)
cmp
mov
jmp
push
jle
cmp
out
cmp
push
adc
rcr
in
daa
mov
icebp
stos
cmp
dec
jne
movs
loope
jbe
(bad)
or
cmp
rol
cli
jno
xchg
push
sub
lods
sub
mov
cmps
push
sub
test
cmps
in
jl
not
mov
adc
fdivr
ja
inc
or
fadd
push
inc
shr
scas
cmps
xchg
adc
sbb
into
sbb
xchg
outs
mov
leave
mov
pusha
shr
inc
push
jae
pop
std
push
repz
and
add
inc
div
ret
in
bound
push
outs
imul
cmps
push
pushf
rep
pop
mov
addr16
data16
pop
cmp
and
gs
mov
ja
fstp
jecxz
mov
xchg
inc
sbb
dec
pop
fmul
mov
or
out
mov
sub
dec
push
loopne
dec
push
dec
or
cdq
cld
mov
out
inc
cmp
mov
les
(bad)
test
add
test
xchg
imul
sbb
daa
mov
mov
leave
iret
lock
mov
mov
loopne
scas
mov
js
cdq
in
ja
test
add
inc
xor
inc
mov
xlat
in
or
sub
push
or
jae
and
sbb
jecxz
psubw
add
xor
mov
or
movs
in
in
add
mov
imul
(bad)
pop
dec
mov
rol
jmp
jbe
ins
outs
adc
out
jno
out
push
jnp
pusha
mov
ret
sub
cmp
jmp
jecxz
pop
(bad)
je
stos
cmp
mov
sub
dec
shr
dec
jp
jmp
loop
leave
cmp
fwait
jge
rep
push
ret
mov
xor
nop
add
adc
repz
shl
in
jg
add
sbb
adc
add
and
jle
mov
add
out
pop
out
pop
xchg
fsubr
retf
pop
shl
push
popf
add
jl
xor
add
and
out
pop
mov
pop
jl
es
push
jmp
js
xor
push
xchg
jae
push
push
shl
push
mov
call
mov
cli
dec
sbb
mov
xchg
and
jbe
adc
(bad)
outs
lods
(bad)
mov
jge
enter
jecxz
inc
repz
stc
cmc
pop
test
fcom
cs
add
dec
cdq
xchg
add
fidiv
aas
retf
push
scas
and
pop
dec
gs
pusha
sbb
and
imul
mov
push
dec
out
xchg
repz
sbb
sbb
lahf
fs
js
jp
and
int3
pop
(bad)
imul
push
cdq
repnz
div
inc
ss
rcr
retf
fistp
enter
jmp
sbb
rcr
mov
retf
xchg
push
fistp
cmps
sahf
icebp
dec
jno
(bad)
clc
jb
jb
fwait
xchg
sub
pop
xor
and
pop
xchg
bnd
(bad)
pushf
jne
cld
or
inc
jmp
loop
popf
cdq
xchg
fs
sub
xor
js
test
or
loope
or
adc
xor
or
add
xor
sub
fisub
mov
fisub
jns
dec
lods
push
jno
retf
mov
out
pop
clc
add
xchg
jb
rcr
not
fsubrp
pusha
mov
sbb
aaa
(bad)
(bad)
scas
rcr
adc
hlt
call
sahf
sub
mov
pop
fwait
pop
jo
push
and
test
dec
neg
mov
mov
lea
imul
imul
and
sbb
dec
sti
jecxz
ins
xchg
adc
push
sar
xor
mov
pop
fucomp
push
and
jmp
(bad)
xor
aad
fldcw
mov
pop
push
add
call
sub
outs
xchg
cdq
sbb
lahf
mov
xchg
mov
adc
cli
(bad)
adc
inc
xor
test
pop
sbb
and
test
xor
fsincos
push
xchg
rol
arpl
dec
aaa
das
sbb
loop
dec
pop
iret
xchg
xor
and
and
sbb
scas
jne
ins
jns
cmp
pusha
call
inc
add
fbstp
adc
xor
scas
call
leave
cli
add
and
push
xor
mov
or
mov
aaa
mov
imul
mov
push
adc
push
fucomip
ins
mov
pop
add
inc
out
push
lods
xor
pop
test
adc
scas
dec
(bad)
xchg
addr16
in
mov
adc
call
(bad)
jmp
pop
xor
into
mov
enter
(bad)
aad
rol
pop
call
shl
and
sar
fwait
shl
popf
out
dec
pushf
iret
outs
ins
jge
push
int3
dec
xchg
inc
loop
leave
xchg
rol
pop
movs
hlt
xlat
bndstx
jns
ins
inc
sub
push
dec
mov
jmp
and
push
je
arpl
xchg
jno
xchg
imul
(bad)
and
pop
xchg
popa
(bad)
repz
cmp
out
push
jl
enter
or
ret
icebp
icebp
add
repnz
mov
dec
ja
pop
pop
jmp
jmp
dec
jmp
jbe
or
sti
(bad)
pop
vpcmpd
pop
xor
jmp
dec
xor
mov
cmp
xchg
loop
and
mov
pop
and
xor
lods
mov
mov
into
or
movs
push
fnsave
rol
pop
cmp
outs
pushf
inc
add
jp
xlat
(bad)
inc
inc
pop
clc
call
dec
test
add
fdivrp
sbb
je
fwait
shl
and
je
mov
fnstsw
or
push
push
shl
pop
inc
out
ja
sbb
ret
jecxz
add
lea
jnp
jle
mov
mov
ret
outs
mov
out
pop
(bad)
mov
das
pop
adc
xchg
mov
shr
pop
adc
shr
sbb
push
push
repz
xchg
lods
cmp
push
cld
ja
mov
mov
pop
je
movs
xlat
or
dec
mov
mov
rcr
or
push
adc
test
xor
test
das
pop
push
adc
into
rcr
pop
dec
je
or
and
hlt
loope
xor
sbb
gs
(bad)
sahf
lds
mov
mov
xor
and
ins
push
test
xlat
pop
push
and
and
or
xchg
or
fistp
cli
sbb
xchg
inc
retf
sar
rcr
stos
mov
(bad)
popf
add
xor
ins
in
outs
fbld
leave
push
and
test
xor
popf
xor
int
push
lods
fstp
ja
mov
ficomp
sbb
imul
repz
aad
mov
stos
popf
mov
popf
mov
adc
mov
sbb
jl
test
mov
mov
sbb
iret
push
pop
xchg
mov
test
repz
(bad)
jp
jae
in
dec
mov
adc
stc
cld
or
cwde
arpl
shl
jg
fsub
fldcw
cld
xchg
sar
femms
data16
sar
rol
ret
cmp
movs
xor
fldenv
mov
xor
adc
xor
leave
push
add
fldenv
inc
ins
leave
js
into
in
ffreep
and
jbe
dec
mov
xor
fsub
sbb
retf
cli
mov
popf
or
(bad)
hlt
add
cmps
out
adc
jp
mov
bound
ins
(bad)
jp
push
mov
add
mov
xor
cmp
sub
std
ss
stos
inc
jmp
cld
mov
add
lock
data16
(bad)
enter
test
in
cmps
push
add
jbe
push
(bad)
retf
dec
stos
pop
movs
data16
stc
xor
into
mov
loop
push
mov
shl
je
aaa
test
push
lods
out
gs
std
xchg
xlat
mov
jg
cmp
call
jg
adc
mov
sbb
mov
jne
dec
mov
and
inc
xor
add
mov
rcr
pop
shr
stos
mov
mov
or
enter
out
lds
jbe
fisttp
push
scas
out
sar
in
mov
aad
push
jne
in
ror
mov
outs
cmps
jb
jne
or
pop
mov
mov
pop
fwait
add
repz
(bad)
lods
call
inc
mov
ret
lods
inc
icebp
test
mov
xchg
mov
or
sub
movs
jb
leave
iret
fild
enter
je
mov
lahf
jae
outs
cli
mov
loope
pop
mov
xchg
mov
jmp
mov
loop
test
lods
mov
push
adc
push
in
cmp
test
sub
addr16
mov
(bad)
fwait
inc
mov
pop
mov
fld
das
(bad)
out
mov
cdq
mov
adc
cli
bound
pop
add
scas
cmps
test
push
pusha
loop
inc
xchg
rcl
outs
inc
ds
add
fldenv
jge
cli
sbb
pop
inc
mov
fnsave
xchg
les
mov
or
ror
add
inc
gs
les
xchg
call
test
repz
js
(bad)
and
jo
cwde
retf
push
pop
mov
mov
arpl
push
push
xchg
push
fbld
inc
pushf
in
push
add
inc
mov
lahf
mov
mov
test
in
lods
loopne
adc
sbb
neg
ins
mov
xchg
fwait
sbb
cld
pushf
mov
or
mul
dec
std
jb
xor
shr
jecxz
mov
movs
hlt
sar
inc
mov
dec
push
ss
shl
mov
mov
mov
lods
mov
aam
mov
aaa
ds
outs
repnz
add
or
mov
inc
sub
movs
sub
ins
pop
dec
push
push
fadd
test
(bad)
std
push
mov
neg
mov
retf
(bad)
and
mov
sbb
push
scas
repnz
imul
xor
add
frstor
retf
cld
adc
adc
aaa
add
add
xchg
dec
add
xchg
icebp
mov
out
stc
cmc
jns
mov
cs
mov
scas
sbb
xchg
cdq
xchg
mov
into
je
sbb
and
mov
adc
(bad)
leave
test
sbb
push
lods
ss
and
xchg
je
cli
cmps
mov
inc
cmp
test
fld
icebp
arpl
js
cli
jl
retf
sub
mov
and
add
and
pop
int
dec
sbb
xor
pop
xor
enter
xor
out
xlat
mov
xchg
mov
mov
adc
add
inc
jbe
daa
xchg
xchg
dec
cwde
push
add
dec
imul
adc
pushf
jnp
(bad)
jecxz
jmp
out
adc
enter
xor
inc
xor
dec
sbb
jbe
or
pop
adc
sbb
imul
mov
push
(bad)
(bad)
repnz
sub
pusha
inc
mov
dec
cmp
les
xchg
cmc
jecxz
xor
sub
inc
cmc
cli
dec
test
lods
or
lods
lahf
maxps
data16
adc
inc
cmp
in
cmp
push
pop
mov
or
xchg
sti
lods
sub
pushw
data16
dec
shl
mov
dec
dec
adc
cmps
mov
push
push
retf
or
mov
into
stos
retf
mov
in
xlat
mov
sub
ret
pop
aaa
jecxz
sub
mov
and
mov
pop
or
call
or
push
pop
aad
mov
cwde
mov
xchg
(bad)
js
jnp
mov
rcl
cs
mov
enter
inc
shr
mov
mov
cmp
imul
jmp
and
in
mov
ret
cmps
pop
mov
mov
test
pusha
lea
sub
aaa
mov
inc
in
dec
stos
sbb
lds
adc
push
loope
mul
(bad)
shl
xchg
adc
jb
lods
aaa
xor
xchg
pop
mov
xor
mov
mov
jbe
sub
imul
or
es
adc
xor
jno
and
dec
xchg
iret
inc
rcr
sub
clc
into
test
sub
movs
inc
dec
fdiv
into
pop
cs
sbb
cmps
in
or
sub
pop
ds
inc
cmp
push
ds
aaa
mov
mov
push
(bad)
js
and
adc
pop
mov
xchg
mov
mov
jne
hlt
rcr
pushf
in
ja
lock
add
jo
cmp
mov
ss
out
rol
sbb
push
sbb
mov
push
test
sub
mov
jl
push
inc
jp
into
(bad)
sbb
in
stos
loopne
or
leave
adc
mov
movs
movs
jne
in
push
or
and
movs
test
iret
cmp
retf
jns
cdq
hlt
mov
or
dec
and
sub
jbe
movs
bound
(bad)
sar
push
push
or
mov
fbld
mov
int3
lods
mov
sbb
dec
test
shl
mov
and
es
mov
ss
adc
fwait
rcl
push
out
lock
dec
add
je
sbb
sbb
das
jbe
cli
fdivr
and
scas
retf
aaa
test
push
push
(bad)
(bad)
jge
out
test
popf
jmp
jbe
cli
mov
out
pop
pop
mov
jnp
icebp
mov
xchg
xchg
or
push
dec
dec
mov
mov
mov
mov
fild
mov
jns
push
js
jb
xor
(bad)
out
popf
add
add
xchg
inc
xor
fs
xor
push
pop
pop
pop
cli
push
sub
inc
dec
push
jo
test
xor
xchg
mov
xchg
gs
js
push
aam
mov
fucomip
das
pop
fcom
popf
adc
loop
retf
dec
xor
inc
mov
hlt
mov
xchg
into
push
nop
int3
fist
vpor
add
aas
mov
call
fwait
ja
add
popa
test
in
mov
xchg
mov
cmps
out
mov
xchg
je
ss
xor
jecxz
(bad)
(bad)
mov
inc
cld
jle
adc
fild
repz
mov
leave
mov
jl
cmp
cmp
(bad)
leave
push
xchg
and
int3
scas
cmps
push
jmp
add
and
sahf
mov
sbb
test
add
jmp
push
or
(bad)
cmp
lock
sbb
daa
jg
pop
xchg
cmp
jge
(bad)
pop
arpl
mov
js
out
or
jmp
test
fwait
pushf
pop
pushf
mov
cli
mov
retf
jb
and
push
or
mov
ret
paddsw
loopne
popa
jg
mov
int3
outs
daa
outs
sub
push
cmps
and
jbe
daa
cli
cmovl
mov
jae
inc
push
mov
or
repz
fsub
in
loope
loopne
lods
xchg
inc
out
xor
push
out
sub
mov
fld
inc
push
dec
jmp
cld
xchg
jns
mov
jmp
lock
jb
adc
push
xor
mov
xor
mov
sahf
xchg
cmp
out
sub
push
(bad)
(bad)
ins
mov
inc
repz
in
retf
inc
shl
inc
pop
pop
inc
shr
sbb
xor
test
pop
retf
in
pop
pusha
xor
jns
test
out
mov
and
in
popf
lahf
cmc
into
ret
inc
pushf
and
xlat
(bad)
mov
jp
frstor
ja
cmp
mov
pop
sahf
enter
pop
iret
test
nop
ins
into
inc
pop
lea
fisttp
pop
lock
or
mov
sbb
mov
xor
add
push
sahf
popa
push
mov
scas
addr16
fiadd
das
inc
sahf
repz
ret
sti
call
add
sub
retf
movs
xchg
shl
cmp
mov
mov
les
ja
mov
in
inc
lahf
lods
aam
imul
push
adc
shr
dec
clc
xchg
mov
adc
cmps
jo
inc
adc
xchg
add
ins
cmc
xchg
mov
xor
jae
xchg
scas
pop
sub
jno
fstp
ret
jmp
mov
les
cld
int
push
ror
sub
xor
ins
mov
call
add
ror
add
jno
les
xor
xchg
retf
int
daa
pop
cli
das
call
enter
(bad)
mov
(bad)
fisubr
or
xchg
dec
test
dec
fwait
sub
test
iret
or
add
test
scas
gs
xchg
dec
xchg
stc
arpl
cmp
dec
sub
mov
mov
mov
pop
mov
and
inc
inc
mov
call
lea
push
cli
lds
xlat
sbb
cmp
cmps
and
cs
mov
clc
iret
nop
mov
xchg
cmp
shr
inc
adc
dec
int
inc
mul
sar
or
jp
sbb
sbb
iret
fs
jg
sub
xor
test
rcl
shl
push
popa
test
inc
sbb
jg
rcl
jg
iret
xchg
jns
xor
inc
ret
fld
cmc
sti
mov
fucomip
and
push
ret
and
inc
int
pop
mov
arpl
js
dec
mov
mov
icebp
push
sub
xor
ins
mov
cmps
rol
in
call
add
cmp
daa
in
xchg
push
push
fld
add
adc
jae
cmp
mov
sub
mov
into
(bad)
cmc
add
or
and
push
shl
xor
retf
push
stos
dec
in
and
and
jmp
jno
mov
push
sahf
test
lods
(bad)
cmp
sbb
das
adc
sbb
cmp
adc
cmps
add
push
mov
mov
arpl
jge
fist
inc
xchg
repnz
mov
and
mov
cmp
add
test
jnp
psrlw
push
mov
and
imul
xchg
dec
xchg
jns
ret
cmp
rcl
and
jb
into
xor
xchg
jmp
cvtpi2ps
ja
xor
fisubr
jp
jecxz
(bad)
sub
xor
jge
mov
mov
int3
jmp
test
scas
mov
scas
mov
(bad)
mov
adc
fwait
xchg
cli
jb
pop
clc
sbb
cmp
loope
mov
sub
gs
enter
aam
or
jnp
arpl
mov
retf
int
xor
and
jecxz
add
push
xchg
icebp
das
and
or
cmp
fstp
fld
or
(bad)
cld
and
test
dec
push
xchg
scas
mov
and
loope
aam
ss
fiadd
or
mov
pusha
cmc
push
and
mov
retf
icebp
call
sar
mov
sub
stos
dec
jns
fadd
dec
push
outs
call
inc
fisubr
or
movs
mov
xchg
ret
stos
lods
je
sub
out
sti
cmc
shl
icebp
dec
repz
es
fadd
push
out
cli
lods
inc
mov
mov
aas
mov
dec
pextrw
sbb
xchg
inc
add
movs
sub
lods
sbb
inc
mov
lock
imul
dec
xchg
mov
push
cmps
mov
mov
add
inc
pop
mov
stos
pop
aas
cmp
adc
jae
jle
jb
aam
aaa
lock
add
mov
mov
mov
je
imul
fisubr
sbb
mov
jno
mov
movs
frstor
cmp
enter
dec
lea
pop
add
pop
sub
aam
xlat
retf
dec
adc
or
add
idiv
repnz
push
rol
and
xchg
sub
ins
pop
sub
mov
pop
sti
adc
pop
dec
push
adc
cmp
fsubr
lods
mov
jbe
inc
adc
hlt
mov
xor
xor
xchg
int3
movs
adc
inc
mov
mov
push
iret
jb
retf
inc
inc
(bad)
int
mov
sbb
xor
rcl
inc
loop
ss
mov
imul
xchg
ds
std
pushf
(bad)
push
popa
arpl
sbb
xor
xor
push
push
adc
lods
pop
cmp
shl
aam
pop
into
mov
dec
push
iret
out
shl
ins
arpl
call
cli
jo
adc
adc
xor
add
ret
bound
cmp
inc
sub
nop
jge
(bad)
int3
mov
or
not
popa
pop
add
xor
mov
cdq
arpl
mov
mov
stc
dec
sbb
inc
jecxz
pop
icebp
je
mov
xor
lods
dec
sbb
fstp
dec
repnz
push
adc
xchg
ficomp
mov
test
adc
inc
push
jo
or
nop
jo
enter
sbb
mov
rol
aad
xchg
loop
sbb
clc
xor
dec
and
fadd
fisttp
imul
pmuludq
cmps
call
xor
jle
repnz
mov
add
jmp
xchg
stos
mov
push
inc
out
mov
xlat
enter
sub
adc
inc
mov
sti
sbb
aas
mov
adc
inc
repnz
enter
mov
inc
rol
push
sub
xor
fld
inc
inc
icebp
rol
pop
bound
sub
loop
cld
push
adc
push
cmp
push
dec
mov
fsub
push
lahf
nop
lds
or
in
jecxz
mov
adc
pop
mov
fsubp
xchg
push
pop
bound
lods
mov
neg
mov
sbb
psllq
nop
fistp
repz
inc
xor
out
(bad)
xchg
nop
jmp
push
int
pusha
sar
mov
fist
popa
lds
dec
(bad)
and
dec
add
jg
shl
add
icebp
cmps
loop
mov
iret
inc
sbb
cmps
lods
clc
xchg
mov
loop
xchg
mov
dec
and
sub
int
test
sbb
xor
xchg
(bad)
ret
xor
jno
push
sti
lods
jb
mov
scas
adc
shr
cdq
popa
rcr
mov
psllq
in
mov
imul
sub
fwait
gs
sbb
ror
jo
xchg
mov
pop
addr16
and
stc
vpsllq
sub
into
fdivr
fbld
sbb
mov
sub
inc
mov
out
pop
les
and
out
add
cs
sbb
retf
sbb
stos
jo
dec
add
aas
nop
lods
inc
add
into
pusha
test
adc
loopne
scas
repnz
mov
pushf
dec
div
test
or
pop
mov
retf
(bad)
jmp
push
sbb
retf
in
(bad)
xor
lock
and
(bad)
and
fcomp
aad
repnz
mov
push
mov
inc
pop
pop
leave
imul
fld
jae
sbb
cdq
cwde
jecxz
cmc
or
and
add
or
jmp
ds
gs
loope
mov
lea
mov
iret
leave
sbb
in
loop
sbb
jo
mov
dec
mov
pop
fidiv
cmc
push
sub
jg
imul
cmp
sbb
push
retf
xor
in
xor
int
cmps
sar
shl
call
xchg
push
or
sbb
xor
inc
movs
leave
aad
fdivrp
nop
shl
cld
movs
cmp
or
aad
pop
std
imul
retf
cmp
jnp
sti
xor
xchg
or
push
cmp
add
jne
nop
dec
mov
shl
(bad)
mov
addr16
addr16
out
int3
pop
jne
dec
call
xor
stos
push
cmp
stos
xlat
sub
mov
out
sub
test
sub
sbb
mov
popf
push
gs
mov
icebp
mov
pop
stos
lds
dec
sub
(bad)
lahf
js
inc
fsubr
inc
xchg
jne
or
inc
mov
push
in
push
push
jge
inc
cli
xor
pop
cmps
out
pop
inc
cmp
test
pop
pop
and
mov
arpl
xor
xor
cmps
xlat
test
xor
pusha
ins
xchg
and
out
ret
jo
sbb
ins
pushf
inc
ret
xor
sub
cld
imul
mov
or
ret
or
xchg
clc
mov
mov
add
les
daa
fisub
imul
(bad)
int3
adc
and
dec
fisttp
mov
addr16
add
pushf
dec
test
scas
sar
sub
shl
and
ja
movs
sbb
es
jg
sub
dec
cmp
sbb
aad
mov
or
mov
xlat
xor
mov
stos
jmp
push
dec
xchg
inc
js
adc
scas
sbb
outs
ds
xor
fsubr
pop
xchg
fs
dec
idiv
ja
mov
mov
into
xor
sub
mov
pop
sbb
xor
test
sub
out
call
push
in
imul
xchg
jbe
push
or
dec
sub
pushf
lea
loop
ds
sub
sub
adc
and
popa
jne
iret
cmp
inc
adc
mov
mov
dec
dec
and
cmps
cmps
sbb
inc
jnp
mov
xor
and
test
or
into
jo
pop
inc
xchg
ret
jle
mov
xchg
adc
add
mov
add
dec
popf
in
test
pop
pop
pop
add
pop
jge
enter
cdq
mov
ja
arpl
inc
int3
cmp
or
mov
je
test
push
inc
ss
jmp
popa
cdq
aam
cli
add
and
loop
out
fsubr
sub
jno
gs
sbb
imul
push
pop
mov
lds
mov
addr16
(bad)
rcr
mov
out
shl
xchg
fs
(bad)
push
shl
cmp
jp
daa
push
inc
inc
imul
xchg
dec
sbb
push
aad
inc
aas
cdq
adc
mov
ret
mov
jo
sar
inc
sbb
fdivr
pop
jo
scas
or
dec
mov
or
adc
adc
in
mov
adc
dec
std
mov
pop
repnz
or
icebp
push
sub
(bad)
mov
mov
mov
ret
scas
push
imul
sbb
sub
xchg
jnp
jnp
sub
std
fst
cld
sub
or
lods
or
xchg
fsub
add
cs
sar
pusha
sub
xchg
movs
inc
sub
mov
and
ds
and
push
lock
cmc
add
data16
lahf
lds
push
ret
fsub
mov
mov
inc
pop
jp
mov
cmp
adc
or
adc
mov
fnstcw
sbb
test
ins
or
cmc
retf
scas
jmp
and
cmp
dec
fbld
out
add
and
and
(bad)
fcom
dec
pop
add
sbb
push
jp
not
repnz
push
imul
call
lods
xchg
nop
jae
push
pop
cwde
punpcklbw
mov
dec
mov
arpl
adc
ins
add
imul
scas
add
aas
adc
push
mov
shr
push
mov
(bad)
cmc
stc
sbb
xchg
adc
dec
xchg
cmc
in
sbb
loope
xchg
xor
dec
jae
ja
loopne
movs
daa
dec
es
push
aad
sub
jmp
and
pop
jecxz
call
inc
push
bound
repnz
cmp
pop
mov
inc
push
dec
mul
inc
retf
push
or
pop
imul
pop
loop
sub
js
cmp
hlt
es
xchg
or
jnp
lds
sub
in
pop
push
aad
pusha
jmp
xor
loopne
jp
nop
pop
pusha
and
jecxz
ss
or
jne
adc
popa
sub
stc
mov
pop
bound
push
xor
mov
ins
loope
test
xchg
dec
xchg
adc
xor
adc
retf
lods
cmp
imul
xchg
call
mov
add
push
stos
mov
loop
cld
(bad)
ins
adc
cwde
mov
inc
imul
sti
mov
mov
adc
ret
mov
fistp
in
js
sub
jmp
js
nop
mov
mov
stc
pushf
in
adc
sbb
in
rol
sub
inc
call
mov
in
hlt
stos
sbb
push
js
xchg
xchg
add
neg
xchg
outs
movs
and
or
out
mov
mov
and
rcl
and
or
in
test
scas
movs
inc
stos
sahf
mov
sar
adc
mov
jmp
retf
and
xchg
sar
test
(bad)
cld
in
cmps
call
mov
popf
(bad)
cmp
repz
call
dec
fstp
pop
fnsave
es
dec
je
das
aas
sub
daa
in
xchg
mov
ja
mov
sbb
ror
in
add
(bad)
jmp
pop
pop
ret
or
sahf
test
mov
test
dec
and
sub
jne
push
cmp
sbb
(bad)
fld
arpl
adc
or
xchg
and
adc
inc
mov
and
jmp
sub
push
xchg
stos
mov
loop
loope
push
push
movs
in
and
inc
inc
mov
sub
jmp
sbb
mov
outs
test
and
test
sub
mov
mov
ror
sub
dec
inc
les
dec
outs
outs
sub
adc
sbb
or
scas
add
stos
(bad)
pop
xor
ja
pusha
ins
fwait
ss
mov
(bad)
je
or
retf
cmp
fdiv
mov
jno
dec
arpl
mov
es
cmps
xor
inc
lock
test
les
jb
nop
or
scas
cs
inc
pushf
jb
ds
jg
xor
imul
enter
or
scas
lahf
jbe
sub
add
repz
aas
jecxz
add
ret
in
cli
and
cmp
in
aam
push
jecxz
js
or
cmps
fadd
xchg
sub
js
pop
pushf
or
imul
loope
femms
into
and
sub
fsubr
or
xchg
cmp
test
sbb
sub
add
scas
inc
retf
es
pop
dec
lock
div
and
or
inc
mov
jmp
sbb
das
aas
sahf
adc
push
out
xor
lock
popa
fiadd
test
push
frstor
cmps
mov
shl
mov
fldenv
icebp
xlat
shr
sahf
mov
frstor
lea
rcr
sub
test
lods
dec
inc
mov
mov
push
pop
jns
inc
(bad)
in
mov
jmp
and
mov
push
sub
sbb
dec
mov
popa
mov
repz
cmp
lock
xor
mov
xchg
push
dec
cmp
push
mov
inc
push
dec
and
fcmovbe
sbb
pop
add
fsub
inc
fwait
add
xchg
ds
cwde
sub
inc
ret
(bad)
dec
enter
repz
add
or
aas
leave
dec
shr
cmp
jle
int3
mov
adc
out
sbb
shr
jg
sub
aam
pop
in
ja
lods
dec
adc
out
fwait
pusha
inc
dec
push
scas
test
int
xchg
jge
test
(bad)
ss
and
aad
mov
(bad)
or
daa
movs
lods
fcomi
mov
hlt
inc
sub
push
and
inc
sub
xor
mov
addr16
and
xor
int
sub
cmp
add
test
mov
(bad)
mov
push
popa
jmp
cwde
test
bnd
mov
pushf
mov
mov
xchg
mov
sub
xor
dec
adc
sub
xor
(bad)
lds
jp
aas
hlt
test
ret
clc
aam
inc
dec
rol
sar
inc
out
add
ds
cwde
mov
cld
std
aad
in
into
loop
scas
sub
out
pop
pop
xor
std
pop
ror
dec
add
psraw
dec
and
push
mov
cmps
call
not
cmp
pop
sub
jg
call
(bad)
daa
ret
pop
retf
push
xchg
fidivr
push
cmp
addr16
adc
mov
stc
cs
sbb
pusha
test
mov
push
repz
adc
pop
hlt
xor
mov
(bad)
rcr
scas
aad
mov
call
xchg
cmp
jo
out
fst
pop
repnz
popa
add
pop
mov
xor
mov
into
imul
test
pop
mov
es
push
out
mov
data16
or
pusha
div
and
in
in
stos
daa
fisttp
dec
bound
jle
sahf
sbb
pop
movs
fstp
scas
add
sub
dec
sahf
or
lock
repz
push
imul
pop
out
or
mov
cmp
pusha
xchg
ja
pop
mov
jmp
(bad)
arpl
push
iret
in
mov
aam
test
push
out
iret
rol
pop
add
push
imul
inc
repz
loope
test
repnz
cdq
cli
dec
xchg
mov
loope
imul
mov
xor
fdiv
dec
mov
fsubr
test
retf
test
xor
inc
addr16
fs
xor
xchg
dec
retf
cmp
into
pop
in
bndstx
pop
das
scas
mov
lods
shl
mov
mov
js
and
repz
xchg
inc
into
push
push
mov
bound
or
in
inc
in
xchg
push
xor
or
push
test
jo
int3
add
data16
data16
ror
icebp
or
xor
or
ins
push
mov
xor
outs
aam
xchg
dec
fisubr
mov
or
hlt
cmp
push
push
test
xchg
mov
inc
sahf
adc
imul
ds
jmp
fldenv
xor
ret
loope
(bad)
mov
mov
xlat
pushf
loopne
fld
xchg
repz
stos
mov
out
enter
in
loope
push
jmp
mov
push
mov
pop
or
fxam
neg
xchg
inc
pop
cmp
jp
test
sub
and
mov
xchg
int3
cmp
mov
push
mov
fild
(bad)
std
mov
das
jl
popf
retf
sbb
dec
lahf
call
fld
mov
mov
gs
jecxz
(bad)
out
pop
mov
jo
pop
into
jle
imul
mov
mov
add
sbb
push
lea
jae
imul
aam
dec
cmps
loop
imul
dec
jnp
pusha
ds
pop
scas
std
cmp
xchg
pop
mov
arpl
mov
mov
dec
inc
dec
dec
or
retf
xor
inc
cwde
inc
or
push
dec
js
je
in
mov
pop
push
pop
scas
in
call
jnp
frstor
push
cmp
cmps
fistp
jne
cmp
ret
test
out
int
rep
aas
cdq
push
mov
xchg
call
pop
cdq
dec
cmps
or
inc
xchg
stos
xchg
stos
and
lahf
clc
enter
jp
loopne
stos
jp
ja
scas
dec
mov
ss
cmp
pop
mov
sbb
push
add
fs
mov
xchg
adc
mov
mov
xchg
mov
outs
jne
or
out
pop
int3
into
repz
cmp
cpuid
sub
push
inc
cmps
add
idiv
in
test
pop
push
push
sbb
jb
js
adc
fucom
popa
jbe
rcl
cwde
fbld
mov
adc
data16
stos
xor
lods
jae
stos
outs
fld
cmps
ins
jno
mov
inc
ret
in
jo
jg
shl
adc
retf
scas
outs
pop
push
jg
ins
jl
xchg
mov
dec
cli
push
sub
mov
push
mov
jae
mov
hlt
mov
jmp
push
dec
inc
cmp
mov
sub
rcl
aad
sub
jne
(bad)
xchg
push
movs
xchg
mov
adc
or
pop
outs
jno
(bad)
loope
mov
das
cdq
and
test
pusha
jmp
sub
outs
mov
jl
call
(bad)
imul
sub
or
xor
lock
int3
push
ds
xchg
inc
push
push
jmp
sub
mov
fs
shl
and
arpl
jae
mov
pushf
ins
xchg
push
pop
loope
movs
mov
fcomip
test
jmp
mov
jecxz
cdq
push
js
pop
and
xchg
dec
sti
(bad)
shl
xor
push
mov
push
mov
aam
mov
mov
xor
lods
ins
jp
mov
sub
lods
icebp
cmps
into
stc
mov
adc
out
adc
or
stc
fstp
mov
jno
and
pusha
sub
sub
into
das
popf
scas
retf
out
mov
adc
mov
test
popa
les
jb
test
jmp
imul
jae
leave
pushf
shl
lahf
aaa
imul
in
mov
jl
sbb
mov
dec
xor
inc
dec
mov
lea
aaa
mov
stos
(bad)
mov
inc
inc
cdq
pop
jo
push
test
(bad)
xchg
and
fiadd
jno
push
sub
addr16
shl
add
lods
mov
xrelease
inc
ror
pop
add
(bad)
adc
data16
out
mov
hlt
mov
inc
fstp
mov
ins
cmps
and
pop
push
arpl
sbb
aam
jecxz
out
and
(bad)
cdq
mov
inc
jb
and
jmp
mov
sahf
test
and
bound
adc
xor
jae
(bad)
out
cmps
(bad)
mov
cmp
in
and
ins
mov
jp
je
pop
stos
sbb
jecxz
retf
push
pop
pop
cmps
or
adc
sbb
jbe
xor
cmps
cmp
jl
inc
stc
mov
icebp
sub
jmp
pop
test
jg
jge
fwait
in
cs
icebp
movs
in
idiv
mov
repnz
mov
retf
sbb
push
pop
repnz
xchg
sti
cmps
(bad)
pop
inc
jge
mov
push
push
jno
xchg
jl
in
sahf
cmps
xor
jmp
test
(bad)
in
mov
jg
jl
aam
pusha
mov
ins
xchg
loope
and
push
pop
xor
cmp
or
mov
mov
cwde
inc
sub
jo
xchg
ss
jecxz
ds
loope
xchg
data16
mov
dec
lods
imul
cmp
xchg
out
in
neg
fcmovb
ins
adc
or
lods
div
not
and
iret
(bad)
test
neg
pushf
iret
imul
int
mov
adc
test
xchg
cmp
lods
rcr
pop
adc
push
(bad)
idiv
ins
cwde
call
fcom
mov
adc
iret
cmps
lahf
jns
icebp
stc
adc
adc
cmp
inc
shl
cmp
repz
movs
adc
stc
psubd
aas
cld
pop
loop
ds
inc
mov
mov
mov
dec
jge
sub
pop
sbb
bts
cmp
(bad)
fldcw
push
(bad)
sub
out
jl
jns
fwait
sbb
cmp
mov
fxch
jmp
mov
cmp
fiadd
shl
and
iret
(bad)
pop
sbb
mov
imul
sahf
sub
mov
dec
push
dec
sti
and
cmps
sahf
sbb
inc
mov
mov
jp
add
dec
add
and
fcomp
stc
mov
adc
into
sub
stc
retf
and
xor
js
out
scas
test
retf
outs
mov
jge
pop
pop
imul
mov
jmp
and
int
dec
pusha
push
inc
std
jge
sub
shr
dec
mov
mov
aad
or
push
outs
stos
ror
sbb
leave
sbb
(bad)
xor
push
lahf
aaa
pop
inc
xor
retf
pop
pop
cmc
or
lahf
repnz
dec
pop
or
xchg
inc
(bad)
pop
cmp
or
push
daa
jp
xchg
in
xlat
sub
mov
sar
aas
ins
into
ret
pop
scas
and
lods
dec
ret
inc
sub
nop
ds
mov
sbb
cmp
inc
icebp
es
repz
cmp
cmc
mov
inc
dec
sbb
cdq
mov
sbb
sub
bnd
ror
mov
movs
push
enter
jne
leave
dec
inc
test
xchg
mov
das
mov
pop
in
sub
mov
stc
xlat
add
mov
in
cld
enter
cmp
mov
sbb
les
cld
sbb
cli
fisttp
pop
fidivr
loop
in
add
ficom
mov
mov
push
or
(bad)
adc
xor
scas
push
cmps
aaa
repz
mov
rcr
adc
test
pop
mov
data16
gs
sub
scas
aaa
mov
xor
mov
adc
ret
(bad)
mov
loopne
push
adc
and
jns
inc
addr16
cli
daa
popf
(bad)
pmaxub
shl
cmp
loope
mov
or
xchg
iret
inc
xor
cwde
xchg
(bad)
xor
jp
xor
repz
inc
mov
imul
sbb
(bad)
(bad)
mov
mov
cmp
mov
or
lods
imul
inc
lock
xchg
xchg
add
push
pop
push
push
sub
(bad)
cli
leave
loop
xchg
cwde
mov
sti
std
sub
and
xor
and
js
lahf
mov
scas
mov
shr
sbb
xchg
xchg
shl
ffreep
fwait
jno
stos
jbe
stos
push
or
int3
ds
jmp
sahf
and
jp
nop
fisttp
pop
and
dec
fnstcw
and
sub
push
and
in
push
dec
adc
into
outs
dec
icebp
pop
je
ins
xor
enter
xor
repnz
jb
xor
(bad)
cmp
imul
lock
sub
mov
mov
cmp
mov
xor
sub
mov
movs
jp
add
jo
out
or
push
add
mov
push
pop
scas
aaa
je
and
retf
pop
mov
fld
push
xchg
inc
in
retf
or
pop
xlat
lock
(bad)
ins
arpl
mov
fucomi
sbb
jns
call
sub
(bad)
lock
or
adc
mov
rcr
iret
scas
pop
bound
(bad)
scas
cmp
dec
jnp
push
sbb
jmp
push
pop
pusha
xor
fdivr
in
sbb
cmc
dec
mov
add
(bad)
nop
aaa
jno
je
pusha
ret
jns
not
mov
popa
or
test
mov
imul
popf
ss
cmp
dec
add
js
jecxz
retf
je
popf
and
push
enter
xchg
stos
frstor
aad
pushf
mov
push
mov
je
cmp
outs
outs
xor
in
add
cmp
in
or
mov
int3
pop
adc
jo
mov
aam
inc
rcl
ret
mov
sub
xlat
xlat
mov
jg
sbb
xlat
cmp
fld
out
xor
cmps
mov
mov
sti
inc
mov
and
(bad)
ins
or
aas
pop
add
adc
test
add
mov
jae
adc
xchg
xor
in
es
xchg
mov
cdq
lahf
gs
push
test
push
push
pushf
scas
jns
mov
cmps
inc
jbe
movs
sub
lea
stc
test
test
push
jae
loope
pusha
cmc
push
sbb
sbb
jae
std
movs
xchg
sti
into
inc
movs
stos
sub
mov
jb
lods
test
test
pop
sub
add
dec
mov
es
adc
ror
neg
loopne
shr
pop
in
jle
nop
jb
mov
leave
movs
sub
sub
push
scas
mov
xor
push
ret
add
and
sbb
mov
adc
lock
gs
test
mov
loopne
xchg
xchg
dec
arpl
adc
repnz
fldenv
stos
test
mov
cmovs
std
outs
into
out
in
es
mov
xlat
adc
cmc
xor
mov
pop
std
jl
cmp
pop
adc
xor
cmc
out
sti
pop
add
icebp
sub
inc
mov
inc
dec
repnz
in
mov
sbb
lods
test
cmp
fnstcw
pop
lock
push
xor
(bad)
dec
(bad)
lock
xchg
cdq
ror
shl
stos
add
dec
xor
mov
mov
push
dec
(bad)
dec
push
out
mov
or
ins
xchg
fcom
aas
scas
sar
mov
pop
dec
and
stos
aas
adc
inc
push
mov
push
and
mov
scas
sbb
jmp
xchg
jmp
push
xchg
aas
out
dec
jp
sbb
adc
rcr
rol
fdiv
cli
imul
and
dec
cmp
xchg
je
dec
dec
push
hlt
inc
or
inc
jbe
enter
sub
sbb
sbb
sub
mov
js
mov
into
enter
jecxz
cmp
shl
fisub
sub
mov
sbb
adc
ds
dec
rcr
jb
ror
in
sahf
xchg
stc
jecxz
jne
push
call
mov
lahf
jmp
pusha
push
add
dec
add
or
xchg
mov
loopne
fcomp
(bad)
xor
call
mov
pop
mov
clc
scas
push
fdivr
cmp
cmp
mov
sub
dec
(bad)
outs
in
or
or
(bad)
movs
rcr
mov
inc
sub
sbb
jl
ss
fbstp
and
inc
adc
arpl
cmp
xchg
ret
mov
test
push
push
div
gs
or
pop
in
aam
(bad)
in
jp
or
push
jnp
adc
pop
movs
lods
cld
inc
xchg
or
aam
jo
add
in
inc
mov
shl
pop
sti
xor
xor
sahf
iret
jmp
data16
bound
aad
or
sbb
fisub
les
shr
xchg
sub
cdq
mov
xchg
ret
outs
or
(bad)
ins
cwde
inc
outs
stc
shl
lock
push
imul
sbb
jbe
ret
dec
int3
test
aad
les
shl
pop
pusha
xchg
jle
aas
pop
js
std
cld
jecxz
das
push
retf
pop
pop
mov
sub
xchg
in
in
jecxz
aas
test
stos
fs
jo
push
add
int3
xor
jmp
push
jne
out
and
test
cmp
mov
repz
int3
xchg
mov
in
pushw
adc
inc
xlat
adc
clc
shr
and
mov
push
inc
ins
in
fild
(bad)
xor
xlat
sbb
leave
xchg
test
(bad)
mov
mov
pushf
popf
neg
mov
xchg
les
xchg
ret
inc
jno
popf
mov
mov
dec
inc
mov
and
test
leave
fldcw
sub
mov
les
iret
imul
adc
pop
jp
pop
ret
add
shl
in
or
pop
pop
(bad)
dec
jge
sbb
movs
cmp
out
mov
xor
jmp
sbb
fisubr
call
inc
ss
hlt
sar
cmp
inc
xor
mov
mov
aaa
sbb
jmp
and
xchg
add
push
cld
xor
out
push
cld
or
popa
inc
and
inc
leave
jle
fnsave
dec
cld
fnsave
adc
cmc
in
dec
scas
jecxz
mov
fwait
inc
outs
adc
dec
inc
jmp
ins
xor
sub
loopne
popa
mov
dec
(bad)
mov
std
adc
cld
std
dec
mov
inc
sbb
pop
mov
std
inc
pusha
inc
leave
xor
shl
(bad)
dec
push
retf
inc
inc
repnz
dec
xchg
mov
xor
push
ret
cmp
jns
movhps
add
lods
mov
xchg
out
mov
pop
or
shl
iret
mov
fcomp
mov
mov
fcomp
push
sub
icebp
mov
or
pop
(bad)
(bad)
and
stos
adc
mov
es
jmp
les
mov
dec
iret
cmps
inc
sub
xchg
leave
sbb
movs
push
mov
arpl
xor
push
ja
int3
stos
mov
loope
test
push
push
dec
stc
or
sbb
shr
gs
cld
and
xchg
push
(bad)
rol
lods
leave
retf
add
dec
dec
adc
std
dec
push
sbb
fcom
push
(bad)
sub
fisub
fistp
call
nop
jp
xchg
dec
in
mov
xor
leave
mov
test
jl
inc
push
jbe
jp
mov
lods
pop
cmp
mov
pusha
cld
adc
dec
(bad)
pop
inc
pop
push
retf
or
add
adc
add
sbb
sub
or
ins
int3
push
scas
and
retf
call
sbb
jno
mov
sbb
xchg
jmp
outs
es
aaa
pop
sub
adc
and
jl
xchg
pop
xchg
xchg
cmp
push
icebp
inc
hlt
loope
std
data16
arpl
in
rcr
stos
cmp
aam
cs
pushf
mov
jno
retf
lods
inc
jmp
adc
out
jg
mov
or
je
(bad)
sub
fsub
das
loope
mov
xor
and
or
not
sbb
cmp
ins
(bad)
lods
iret
dec
or
sar
shl
sub
aaa
mov
in
in
bnd
cmp
lahf
leave
mov
inc
fxch
xchg
xor
inc
fwait
cmc
and
sbb
xchg
pushf
into
or
(bad)
xchg
jge
cld
xor
dec
inc
inc
or
(bad)
pop
push
call
adc
fucomi
out
xchg
pop
stc
out
push
pop
jns
movs
in
fisubr
mov
(bad)
jns
jb
std
mov
xchg
jge
fimul
pop
and
cmp
jecxz
mov
pushf
(bad)
pop
fld
ror
test
stos
xchg
xchg
mov
dec
cmp
mov
xor
add
shl
cmp
xor
ja
mov
mov
jo
mov
mov
add
stos
xor
inc
xor
xchg
and
shl
pop
cdq
das
mov
shr
jbe
test
popa
cmc
xchg
jecxz
mov
adc
out
into
mov
push
push
test
call
iret
ficomp
cmp
jo
ror
ss
and
and
mov
(bad)
adc
sti
fld
out
pop
dec
scas
call
(bad)
sahf
fidiv
ret
nop
shl
and
cli
mov
lods
stc
mov
test
xchg
cmc
jno
out
push
sahf
jp
xor
js
pop
adc
mov
add
out
pop
xchg
mov
xchg
xchg
pusha
xchg
js
movs
fisttp
test
adc
rcl
xchg
jmp
fimul
adc
xchg
xlat
pop
out
(bad)
fprem
xchg
out
cmps
gs
je
js
mov
inc
test
nop
xor
pushf
lahf
aaa
and
mov
sub
xor
mov
mov
imul
mov
mov
aaa
inc
push
jnp
mov
in
nop
pcmpgtb
sbb
add
aaa
lods
push
dec
outs
aam
rcl
test
mov
mov
sbb
mov
pusha
fbld
sbb
sbb
and
xor
iret
ds
dec
(bad)
adc
(bad)
cmp
push
inc
lahf
push
lahf
retf
cmp
das
repnz
scas
ror
shl
sar
push
icebp
ja
xor
add
mov
xor
pop
ins
inc
sbb
retf
stc
ficom
cmc
outs
retf
test
xchg
and
arpl
cmc
xlat
pop
add
xchg
jne
call
(bad)
movs
push
sbb
adc
ja
pop
scas
pop
sahf
ds
dec
push
mov
clc
jmp
adc
(bad)
rol
jecxz
mov
dec
mov
in
inc
retf
dec
cmp
scas
inc
rol
stos
addr16
push
test
mov
into
and
push
mov
mov
(bad)
into
ficomp
xchg
cs
add
hlt
cmp
sub
jg
push
mov
test
mov
aaa
shl
fxtract
pop
mov
xchg
mov
iret
loope
add
loope
mov
cmc
jp
sub
(bad)
(bad)
push
nop
and
sbb
inc
daa
mov
rol
in
add
mov
cld
jl
test
mov
lods
jo
rcl
push
pop
nop
loope
jp
js
pop
mov
fiadd
js
imul
push
mov
hlt
test
mov
xchg
into
dec
mov
dec
add
push
pop
mov
fiadd
addr16
xchg
xchg
xor
fst
and
and
mov
lea
pop
into
cwde
into
or
ret
lods
loopne
shl
sub
scas
mov
loope
ret
xchg
loopne
(bad)
addr16
mov
mov
shl
nop
in
inc
push
pop
xchg
out
push
hlt
js
cmp
movs
call
push
adc
dec
lahf
ds
scas
cmp
add
retf
dec
push
neg
and
daa
xlat
xor
xor
cmp
push
mov
sbb
(bad)
mov
pop
pop
jp
test
fmul
mov
and
xor
scas
lods
mov
adc
dec
sbb
sub
pushf
jecxz
sub
imul
out
test
add
or
jle
imul
jmp
mov
cmp
lea
out
fwait
and
ins
add
outs
mov
aam
push
sbb
mov
inc
push
(bad)
dec
inc
fdiv
push
or
jno
pop
mov
retf
mov
imul
test
mov
inc
inc
inc
mov
pop
test
and
xchg
and
lds
push
dec
pop
ins
icebp
icebp
cli
mov
std
xor
pop
cs
mov
mov
and
test
pop
pop
mov
cmps
retf
in
enter
dec
mov
adc
out
int
mov
push
push
fdivrp
dec
shr
push
push
int
mov
inc
pop
in
cmps
cmps
push
push
mov
ins
xor
or
jecxz
popa
pusha
and
mov
pushf
dec
mov
ret
pop
mov
inc
loope
xor
pop
inc
daa
add
mov
outs
jl
out
push
dec
fwait
pop
aam
add
int
jno
cmc
add
rcl
rol
dec
mov
pop
sub
cs
add
int
push
movs
loopne
cli
adc
popa
sbb
lods
cmp
sbb
lds
pop
and
xor
xor
mov
retf
xchg
stc
pusha
clc
icebp
xchg
je
aaa
adc
shl
mov
push
mov
scas
pop
push
pop
outs
ret
pushf
out
sub
rol
mov
sub
sub
shl
jns
(bad)
mov
xlat
sub
jbe
inc
(bad)
aad
fsubrp
je
ins
jmp
mov
cmps
push
out
sub
imul
in
lods
rcr
movs
ins
popf
dec
pushf
jmp
sub
xchg
xor
cmp
into
xor
(bad)
push
lods
adc
sbb
test
mov
cmp
add
push
sub
jg
pop
pop
xor
cmp
imul
arpl
loop
loope
pop
add
cmp
aaa
lds
shl
and
ja
jae
add
shr
out
adc
and
and
xchg
std
and
jmp
sbb
retf
jmp
mov
mov
xor
in
mov
cld
ss
test
sub
cmps
adc
add
add
cmp
jno
ret
inc
nop
cmp
jmp
push
dec
fwait
push
add
adc
xchg
stos
cdq
and
mov
xor
and
cmp
lahf
mov
cmp
pop
xchg
sti
out
inc
xchg
inc
addr16
sti
adc
ds
out
mov
jo
mov
imul
je
cld
repz
jo
test
cmp
and
jno
or
dec
jmp
pop
or
pop
mov
imul
xchg
js
mov
inc
sub
enter
or
addr16
lds
add
test
stos
test
and
adc
aad
mov
add
jmp
xchg
pop
jnp
fisubr
into
ds
mov
xchg
inc
mov
mov
inc
movs
sahf
sar
xchg
xor
jmp
retf
call
pop
cli
aas
push
aaa
inc
sub
jmp
neg
fdiv
xor
jl
bound
nop
jb
add
test
sbb
xor
in
(bad)
fisttp
cmp
ja
(bad)
scas
mul
jmp
je
sahf
js
mov
ins
lock
fmul
loopne
push
push
aam
stos
adc
(bad)
popa
aad
lods
rol
mov
adc
hlt
cmps
push
ss
push
xor
push
push
les
adc
fiadd
jg
pop
jb
xchg
lock
retf
dec
std
adc
fst
mul
dec
cld
mov
add
xor
pushf
sbb
leave
call
mov
push
mov
xchg
jl
(bad)
mov
pop
fistp
pop
inc
push
dec
xchg
xor
pop
jns
jno
jae
and
in
pushf
in
fmul
ds
imul
add
fwait
cdq
das
shr
in
and
sbb
xchg
add
push
push
lods
cmp
push
stc
cmc
fisttp
ja
(bad)
mov
das
jno
inc
popf
popf
inc
xchg
ins
push
js
lods
(bad)
jmp
cmp
stos
lods
mov
sbb
data16
fcmovu
and
nop
(bad)
int3
retf
into
loop
lods
movs
test
es
cwde
adc
cwde
enter
fild
push
arpl
jbe
shr
xchg
jmp
or
sub
sbb
cdq
fisubr
test
icebp
mov
or
out
jecxz
inc
call
ret
adc
mov
ss
and
repnz
shl
out
adc
inc
xor
xor
jmp
sub
mov
mul
inc
push
dec
jo
aaa
or
push
shl
cwde
stos
in
div
cmc
push
xor
call
sub
inc
cmp
jmp
pop
adc
xchg
mov
ja
inc
dec
retf
xor
ja
xor
xor
inc
or
push
inc
jne
jmp
inc
add
xor
push
xlat
xchg
shr
out
stos
nop
test
or
mov
jl
ds
or
shl
jmp
or
mov
fwait
dec
adc
jg
xchg
dec
call
lahf
sub
lea
test
retf
mov
mov
idiv
sbb
ins
hlt
je
lock
in
shl
pop
dec
fstp
mov
fmul
sti
shr
xor
in
mov
in
int3
data16
cmp
iret
out
cmp
fwait
add
(bad)
in
xor
jg
jl
or
stc
xchg
cmp
adc
call
xor
enter
cmp
add
sub
xchg
sub
hlt
stos
add
push
test
lds
cmp
push
inc
retf
jle
sbb
dec
cmp
rcl
mov
inc
fisubr
retf
sahf
aas
in
es
es
lods
ss
aaa
leave
scas
retf
push
push
pop
sbb
iret
inc
or
xchg
test
mov
ror
movups
movs
popf
mov
push
aam
jmp
sub
or
jge
jg
add
and
(bad)
test
add
pop
dec
mov
cmp
fistp
or
icebp
scas
fldenv
aaa
sti
rol
or
fisttp
mov
mov
test
sar
jecxz
cwde
jl
(bad)
out
repnz
fld
shl
pop
or
hlt
dec
enter
xchg
loope
in
mov
cmc
imul
and
(bad)
dec
push
pop
cld
scas
mov
rcr
aaa
call
inc
js
add
bound
sub
lock
shl
mov
xchg
xchg
nop
dec
out
les
add
mov
cmp
out
pop
mov
scas
cmps
sub
sbb
or
and
inc
jno
in
push
dec
retf
mov
daa
sahf
in
les
xor
bound
pop
sub
add
inc
cmps
dec
retf
imul
loope
push
cmp
xchg
std
sub
shl
inc
adc
jg
mov
scas
ins
jg
lds
xor
and
sbb
xor
fcomp
aas
ja
cmp
jae
ins
addr16
xchg
xor
sub
sbb
into
popf
(bad)
sub
das
and
cmc
xor
fldz
xchg
pop
cdq
inc
mov
movs
xchg
xor
sbb
test
das
dec
sub
pop
sti
icebp
pop
imul
push
xor
push
sub
loopne
pop
cmps
jns
popa
retf
jbe
mov
cmps
mov
or
out
mov
xchg
(bad)
stos
fisub
les
test
les
retf
and
pop
mov
adc
stos
cld
ja
cmp
pop
mov
push
imul
nop
jns
cdq
add
hlt
sub
push
mov
jbe
or
and
or
pop
lock
test
outs
inc
lahf
cmp
cmp
(bad)
xor
xchg
popa
adc
mov
aas
sar
push
cmp
mov
std
jne
adc
and
(bad)
mov
cmp
aaa
jb
inc
popf
addr16
add
lahf
es
push
mov
dec
retf
xor
or
sub
mov
stos
in
sbb
add
sub
int
mov
mov
test
mov
push
xchg
mov
movs
pop
retf
pusha
arpl
push
cmp
inc
jns
mov
outs
clc
sub
loope
fidiv
imul
or
test
test
test
mul
sub
jb
fisubr
push
ins
xchg
xchg
std
sahf
gs
mov
or
jmp
ins
sti
sbb
xchg
call
(bad)
push
push
in
ds
xor
add
push
mov
ja
mov
xchg
xchg
jp
xchg
out
mov
xor
mov
push
fsubr
popa
sub
adc
adc
and
jge
dec
mov
cmp
adc
fidivr
sbb
push
retf
ds
ja
jno
call
push
stc
sbb
mov
scas
pop
mov
push
add
sub
arpl
pop
out
ins
pop
jae
dec
pop
ja
dec
(bad)
jmp
fwait
and
cdq
sahf
out
rol
pusha
cli
xchg
pop
dec
adc
push
push
dec
bound
mov
or
mov
adc
or
sbb
inc
or
or
or
pusha
test
stos
lods
sbb
jg
dec
pushf
in
mov
and
loop
in
mov
mov
mov
nop
mov
cmp
repz
rol
(bad)
xor
dec
inc
icebp
jae
mov
push
retf
gs
out
cwde
cdq
aad
sub
imul
popa
xor
xchg
xlat
sub
pop
adc
nop
cmp
inc
fidivr
xchg
xchg
psraw
mov
arpl
and
dec
movs
push
call
mov
jle
adc
fisttp
sub
sub
stc
xchg
(bad)
fidiv
lahf
not
outs
xor
sub
push
dec
sub
pop
xor
sbb
pop
out
sub
jle
iret
fidivr
outs
mov
mov
mov
shl
(bad)
push
or
cmps
(bad)
cmp
scas
stos
enter
jmp
mov
xchg
test
xacquire
sti
cmp
jp
loope
sbb
movs
sub
add
repz
retf
dec
es
fs
sub
sub
push
fnstcw
lahf
mov
sti
and
cmp
mov
arpl
inc
aad
mov
test
push
aad
pop
fst
mov
push
or
add
cmc
(bad)
sub
outs
push
add
es
loopne
push
std
jp
pop
push
lods
pop
fs
(bad)
jg
les
in
lds
and
or
(bad)
jecxz
xchg
jg
xchg
push
xchg
mov
mov
aas
sahf
mov
push
pop
out
ins
call
jbe
(bad)
sub
in
pop
in
movs
andps
out
jg
test
push
les
xlat
shl
jl
ds
fbld
jp
aas
jns
pop
sub
cdq
inc
lods
jb
sub
inc
mov
shl
das
mov
shl
or
push
mov
mov
cmp
cwde
(bad)
js
call
mov
cwde
ffree
ins
lods
jnp
stos
fmul
test
xor
fiadd
jle
inc
mov
mov
stc
mov
scas
mov
cmc
retf
xchg
(bad)
js
jne
popa
and
push
arpl
faddp
popf
mov
jno
inc
and
push
les
pop
add
shl
cmp
pusha
push
call
das
fild
add
lds
mov
lock
push
jecxz
hlt
cmp
in
retf
lods
mov
data16
or
(bad)
out
push
jnp
cs
mov
repnz
jle
push
add
jne
aaa
mov
jno
cmps
test
js
mov
xchg
fbld
call
sbb
jns
movs
xchg
mov
repz
test
and
dec
add
fs
pop
mov
pop
jns
fmul
mov
jge
addr16
inc
jl
shl
aam
push
xor
dec
jl
cwde
or
adc
jno
retf
pusha
js
cmps
scas
shr
and
jle
int3
adc
jp
dec
push
call
iret
adc
sti
(bad)
cdq
xchg
pop
and
popa
add
pusha
sti
(bad)
ins
mov
push
mov
mov
sbb
and
cmp
shl
adc
jns
sti
arpl
pop
mov
add
xchg
xchg
loop
daa
mov
mov
imul
cmp
adc
aaa
cmp
out
mov
inc
ss
mov
pop
sar
mov
pop
call
pushf
dec
pop
jmp
fucomip
jecxz
ins
js
jle
inc
xchg
ja
aas
stc
mov
jg
fadd
sub
mov
xchg
in
add
dec
pop
and
or
sbb
or
daa
out
rcl
mov
mov
push
cmp
lock
cli
and
fnsave
aam
ret
or
sbb
iret
cmp
inc
fisttp
movs
pusha
ds
(bad)
mov
repz
fisubr
(bad)
ins
push
pop
add
push
fisub
ficomp
adc
loop
cdq
push
ret
add
mov
imul
loope
mov
jne
mov
rcl
jb
movs
(bad)
pushf
push
jns
pop
mov
xchg
gs
jg
cmp
cmc
rol
sbb
mov
movs
xchg
int3
or
cld
repz
sub
fmul
sbb
in
push
adc
jle
fcomp
cmp
pop
les
dec
(bad)
dec
xor
push
or
sub
nop
xchg
sub
ja
fldenv
sub
push
jmp
or
into
arpl
add
pop
mov
mov
(bad)
ffreep
lods
fcmovnu
shl
push
ja
mov
mov
lahf
dec
and
out
adc
icebp
ror
pop
sahf
cmp
pusha
sub
sub
xor
jp
mov
fistp
add
test
mov
push
retf
movs
jl
aad
int3
jbe
mov
gs
mov
loopne
retf
jge
rcl
rcl
xor
fdiv
rcl
in
cwde
fild
repnz
sti
es
sbb
fld
dec
mov
out
ja
sub
clc
add
jne
sbb
jle
stos
pop
movs
xor
(bad)
and
or
int3
std
and
xchg
pop
(bad)
and
sub
and
push
push
xor
sti
fs
mov
jne
clc
pop
xchg
arpl
scas
xchg
dec
xor
push
mov
sbb
ins
mov
or
and
imul
imul
adc
dec
and
inc
repz
(bad)
sbb
(bad)
push
scas
jle
(bad)
xor
pop
or
jns
gs
mov
mov
lea
fcmove
(bad)
mov
call
add
nop
imul
sbb
test
xchg
mov
pop
sbb
fsub
mov
sub
dec
jg
ret
outs
mov
popf
in
cmp
(bad)
in
inc
push
dec
sbb
sbb
pushf
sbb
mov
jp
or
pop
sti
jae
pop
xor
inc
aad
aas
enter
sti
aas
add
add
in
jmp
imul
dec
xor
inc
add
mov
cmp
cld
rol
sbb
addr16
dec
ins
jnp
cwde
jns
jbe
adc
pop
inc
sar
out
sbb
ficomp
out
sbb
xor
fsubr
outs
popa
add
cmp
movs
neg
push
xor
mov
xchg
adc
rcr
cli
in
add
sahf
mov
shl
pusha
(bad)
enter
call
mov
retf
cmps
nop
leave
xchg
loopne
ror
shl
stos
jae
(bad)
push
xchg
sbb
sub
out
cmps
xor
mov
lods
arpl
xlat
jmp
ja
je
std
dec
xchg
(bad)
popf
mov
ret
add
in
dec
mov
arpl
cmp
shl
(bad)
mov
sbb
mov
leave
cmp
jp
push
lahf
push
mov
jle
inc
mov
daa
out
scas
fnsave
dec
fidivr
out
push
mov
retf
cdq
mov
jbe
xor
mov
pop
addr16
das
dec
sahf
movs
cmps
xchg
dec
test
sbb
pop
mov
mov
pop
(bad)
(bad)
in
adc
lods
bound
lahf
adc
mov
(bad)
mov
es
dec
out
mov
cmps
sub
shr
(bad)
rol
(bad)
js
loopne
pop
jle
neg
pop
mov
mov
xchg
inc
and
cmps
adc
xchg
outs
sbb
(bad)
cmp
xchg
shl
ins
test
sub
pop
mov
mov
add
(bad)
sbb
mov
jne
push
and
and
xor
test
ror
test
fcom
enter
push
push
sub
pop
or
into
cmc
in
(bad)
fldcw
sbb
pusha
xchg
daa
push
push
add
dec
(bad)
dec
jnp
xchg
inc
cmp
xchg
and
lods
(bad)
sub
cmp
sti
(bad)
dec
inc
push
pop
jo
sbb
and
jp
icebp
and
push
in
jno
jp
fs
cwde
mov
into
mov
adc
popa
pop
add
adc
cli
dec
das
adc
es
aad
fcomp
or
or
xchg
jmp
xchg
mov
ss
mov
mov
sbb
icebp
fdivr
mov
pop
xor
mov
push
rol
pop
das
sti
xchg
ja
xlat
fidiv
and
test
je
dec
inc
lds
and
add
cmp
fstp
mov
lahf
dec
ins
inc
dec
and
test
clc
push
fisubr
jno
mov
sub
jb
mov
push
retf
add
dec
bound
dec
push
cld
mov
daa
add
xlat
div
mov
dec
and
mov
call
enter
mov
in
(bad)
lods
sbb
sub
xor
jae
mov
fld
adc
sbb
and
inc
xchg
mov
and
pop
or
jmp
pop
mov
dec
into
ret
mov
cmp
push
xchg
rcr
loopne
pushf
adc
fdiv
jb
inc
out
dec
dec
cmp
adc
or
pop
cs
sar
fidiv
or
gs
pop
mov
add
loopne
ja
dec
ins
sbb
push
and
lahf
add
fcomi
(bad)
mov
inc
cdq
sbb
cmp
out
adc
outs
imul
imul
sbb
(bad)
push
pop
dec
add
ret
xchg
mov
sub
push
jnp
mov
mov
xor
push
cmp
push
test
rcr
imul
lahf
cli
inc
xor
imul
int
pop
xchg
adc
dec
repnz
js
add
push
cmps
std
pop
xchg
xor
mov
(bad)
xor
int3
mov
dec
push
sbb
push
add
(bad)
or
jmp
mov
adc
scas
sbb
scas
adc
hlt
(bad)
(bad)
out
fmul
mov
pop
jg
add
out
in
xchg
mov
push
and
add
cmp
mov
mov
mov
mov
lds
(bad)
(bad)
sub
rcl
xchg
inc
loopne
jl
scas
and
lahf
mov
pop
ror
mov
mov
jmp
int
out
cmp
dec
(bad)
sbb
fst
cwde
scas
lea
inc
push
fnstcw
sbb
scas
ins
test
push
mov
sbb
mov
pop
push
inc
or
dec
lods
pushf
xchg
mul
mov
push
or
psrld
dec
es
add
fadd
dec
int
dec
js
ins
mov
movs
push
mov
pop
jp
fs
call
and
gs
ins
test
mov
repnz
jge
xor
cmc
inc
pop
in
rcr
out
cmp
sub
pop
loope
or
or
jmp
data16
or
and
jnp
test
loope
or
cld
sti
test
(bad)
pop
xlat
mov
push
daa
idiv
sti
xor
test
or
leave
xchg
push
cmp
push
pop
cmp
imul
add
push
lock
jns
xchg
sub
sub
dec
dec
push
adc
and
and
into
push
and
push
in
jl
xchg
mov
ins
jp
cdq
into
xor
fsubr
in
inc
fsub
mov
xchg
das
imul
mov
addr16
adc
sti
push
and
fidiv
int
xchg
pop
push
push
dec
and
scas
retf
sub
xchg
and
leave
loopne
mov
aaa
adc
mov
push
cld
jl
(bad)
iret
(bad)
call
leave
fwait
aam
xor
or
dec
cmp
jg
inc
mov
dec
sti
or
es
cmp
and
fnstsw
ins
adc
ins
sbb
pushf
adc
dec
adc
inc
mov
push
pop
pop
jb
adc
xchg
push
adc
jp
inc
cwde
jns
retf
push
xor
int3
add
outs
mov
mov
popa
pop
jge
xchg
aad
and
jmp
push
retf
(bad)
xchg
jp
push
adc
sub
and
inc
and
(bad)
pop
xor
pop
iret
xchg
push
mov
pop
xor
in
in
add
addr16
(bad)
leave
sahf
jbe
fwait
pop
adc
push
mov
inc
mov
idiv
dec
add
call
sti
test
xor
pop
jecxz
mov
fnsave
fcomp
push
movs
dec
stos
add
cmp
(bad)
shl
jbe
xchg
pop
or
sbb
adc
dec
and
cmps
jno
push
shl
lock
sub
jecxz
es
xor
clc
std
ret
imul
fwait
rcr
xor
xchg
xchg
out
ss
pop
ja
jbe
hlt
sub
outs
jecxz
les
jae
adc
cs
sbb
jp
add
mov
mov
loopne
imul
dec
xchg
dec
adc
mov
jns
mov
sbb
loope
or
pop
ins
push
scas
popf
das
dec
dec
push
arpl
mov
dec
movs
gs
out
hlt
mov
rcl
jge
das
faddp
(bad)
pop
add
mov
lods
cs
(bad)
jb
cmp
or
or
mov
cmp
ret
pop
push
(bad)
adc
mov
rcl
add
xor
loopne
mov
jns
mov
(bad)
stc
push
sbb
xor
xchg
hlt
nop
aaa
adc
xchg
jnp
data16
fs
or
vpsubq
add
out
js
inc
mov
fwait
shl
cmp
push
repnz
imul
pop
pusha
or
sbb
pop
mov
mov
test
aaa
mov
jecxz
lahf
jecxz
sub
sbb
mov
ss
mov
(bad)
je
dec
sbb
xlat
push
rcr
and
add
imul
dec
jo
xchg
mov
test
dec
push
push
loopne
push
ret
or
movs
sbb
xor
mov
popf
pop
add
mov
ins
pop
push
xor
pop
cmp
in
loop
nop
shr
leave
movs
call
fnstcw
mov
push
jbe
push
movs
xchg
adc
xchg
add
je
jge
xchg
jge
mov
popf
add
pop
add
mov
aam
aaa
ret
mov
mov
xchg
aad
stc
cmps
pop
ret
sbb
ja
dec
popf
xchg
test
jp
iret
jns
xchg
add
out
cs
stos
push
fdiv
ficom
pop
(bad)
test
mov
aad
mov
mov
loopne
inc
fst
es
add
sub
cdq
jnp
xchg
retf
fst
rol
adc
or
add
lock
jle
ins
add
cwde
jb
mov
add
popf
out
pushf
in
dec
sbb
sub
bound
add
loop
xor
inc
outs
data16
pop
scas
mov
lds
mov
enter
sub
sbb
xor
xor
and
jg
push
sub
and
stc
xor
mov
jecxz
(bad)
fild
lea
pop
jecxz
retf
loope
or
xchg
mov
mov
jns
mov
mov
mov
sub
inc
push
or
stos
jns
call
add
mov
lea
hlt
push
fadd
and
ins
mov
jns
in
mov
inc
pop
or
cmp
call
in
sub
stc
addr16
scas
cmps
ss
cmp
in
push
in
ret
sahf
les
jnp
loop
je
and
fnstsw
loope
jns
jecxz
jne
adc
ret
aas
xor
(bad)
jns
xchg
sbb
je
inc
sub
push
jae
mov
add
push
push
pop
mov
push
test
in
sub
and
cmps
int3
add
fsub
setge
pushf
and
mov
ficomp
shl
enter
in
dec
icebp
mov
mov
mov
push
out
jg
or
fsubr
mov
shr
icebp
jno
ret
push
sbb
cmp
xchg
je
mov
fbld
cmc
jmp
cmp
and
inc
inc
fimul
sbb
data16
ins
xchg
sub
ins
sar
rcl
fxch
or
jecxz
adc
aam
jne
mov
cs
push
inc
scas
movs
lea
enter
ins
add
or
clc
cmp
std
fcom
xchg
sub
retf
jne
in
dec
repz
inc
test
push
cmp
cmp
adc
xchg
outs
lahf
aaa
stos
cmps
aad
mov
mov
xor
and
aaa
shr
sub
and
jge
(bad)
xor
xchg
or
mov
mov
dec
popa
cmp
aaa
pusha
(bad)
push
fistp
or
arpl
idiv
stos
leave
push
xchg
lea
sbb
sub
cmps
push
cwde
and
neg
lahf
mov
cld
mov
jb
jbe
dec
shl
arpl
push
(bad)
dec
ja
aaa
adc
sub
jnp
rcr
or
jno
sbb
hlt
and
push
pop
push
adc
loop
cmp
mov
and
out
jle
mov
arpl
mov
mov
retf
lds
cli
cmp
xor
js
add
mov
mov
xor
xchg
pop
jae
test
cli
pop
hlt
pusha
or
adc
sar
add
push
enter
jg
sti
mov
(bad)
stc
ins
sub
cmp
mov
inc
xchg
jne
(bad)
and
cli
and
add
mov
cmc
jbe
mov
pop
jb
and
in
inc
bound
sbb
mov
fld
es
push
pop
xchg
adc
sub
inc
add
jmp
jmp
xchg
(bad)
js
(bad)
sub
icebp
psubsw
call
dec
jle
fdivr
sub
jns
or
fisttp
(bad)
fist
cmp
outs
enter
mov
and
add
add
add
mov
jo
mov
popa
pop
std
jle
retf
cmp
push
in
repz
mov
fsubr
sbb
mov
jmp
sub
aam
es
xchg
jae
hlt
xor
add
rol
popf
loop
and
clc
les
push
inc
mov
aad
sbb
repz
add
jae
or
and
retf
jle
mov
retf
sahf
call
(bad)
pop
jecxz
aad
push
mov
enter
lods
jmp
dec
xor
fiadd
daa
popf
in
js
je
push
nop
inc
push
js
fwait
cmps
inc
scas
stos
test
cdq
mov
xor
mov
scas
loop
aad
(bad)
mov
jmp
adc
cmp
xor
mov
adc
stc
or
xchg
mov
ins
and
ins
inc
ins
shr
push
mov
push
ds
js
imul
adc
in
aad
ja
dec
scas
(bad)
ds
jge
(bad)
cdq
fnstenv
mov
popa
mov
cdq
mov
fnstsw
dec
test
rol
fwait
push
mov
and
into
mov
cli
ds
fbld
cmp
add
retf
inc
jge
in
mov
dec
xchg
lahf
mov
aas
sar
into
xor
outs
outs
xor
mov
pop
pop
ror
sar
fwait
adc
(bad)
jp
stos
jnp
xchg
jmp
adc
fild
jmp
mov
js
mov
lock
(bad)
sbb
outs
cmp
pop
mov
pop
and
xor
fcomi
sub
test
ror
dec
sub
fcomp
lahf
into
popf
les
mov
ins
int3
js
(bad)
push
xor
and
xchg
test
jp
ror
shl
in
ins
jo
or
push
sbb
xchg
mov
cmp
jg
das
xchg
dec
xchg
lea
push
ret
sub
sbb
arpl
sahf
jae
enter
(bad)
nop
push
les
fdiv
test
imul
jbe
es
mov
dec
lock
jge
cld
jge
sbb
mov
dec
pmullw
adc
(bad)
cmps
out
icebp
adc
ret
out
adc
aad
jo
push
in
pop
sbb
push
(bad)
out
adc
cmc
call
xchg
and
pop
test
inc
adc
push
adc
xchg
xor
sbb
mov
popf
cli
loopne
out
sbb
sbb
inc
jae
pop
dec
fndisi(8087
cmc
mov
popa
pop
add
mov
call
mov
push
xchg
pop
sub
mov
dec
cmps
xchg
jo
mov
(bad)
leave
scas
inc
mov
pusha
mov
bound
cmp
imul
mov
or
inc
jl
lahf
mov
and
xor
pop
mov
jne
loop
xchg
fstp
fsubp
cmp
addr16
out
cmps
(bad)
sahf
cld
in
aaa
fimul
inc
rcr
mov
inc
push
aas
sub
(bad)
aaa
dec
icebp
mov
cld
push
mov
jl
or
ret
outs
sub
inc
loop
(bad)
jns
out
mov
push
or
inc
or
sub
into
xchg
mov
inc
and
mov
and
outs
xlat
cs
rcr
mov
adc
stc
cwde
je
or
jge
jae
(bad)
stc
ror
mov
repz
nop
(bad)
sub
aaa
cli
fs
xor
sbb
sahf
test
sub
mov
xchg
pop
sub
and
scas
inc
mov
test
mov
test
fistp
sbb
cwde
addr16
test
pop
xchg
add
push
xor
or
fistp
out
or
(bad)
and
aad
xor
add
(bad)
hlt
ins
call
push
pop
adc
cli
adc
mov
mov
dec
lds
cmp
(bad)
mov
sbb
add
les
mov
ret
jmp
movs
mov
(bad)
sar
lds
and
mov
inc
pop
push
(bad)
jle
out
jnp
jle
jns
jmp
sar
mul
sub
xor
nop
or
mov
(bad)
fidivr
mov
mov
xor
jbe
(bad)
jmp
int3
(bad)
mov
jecxz
pop
add
mov
popf
dec
pop
sbb
dec
sub
mov
lock
jae
stos
imul
push
pop
or
mov
scas
(bad)
imul
inc
or
mov
addr16
push
mov
shl
bswap
jne
inc
and
ds
push
fcmovnbe
jnp
push
loope
cli
dec
xlat
lods
jle
pop
pop
fs
xchg
dec
mov
gs
ficom
push
fldcw
daa
fidivr
or
cli
sub
xchg
cmp
stos
sti
push
mov
test
adc
mov
push
es
repnz
aam
or
jl
jbe
jle
(bad)
fcmove
jne
jmp
iret
(bad)
xchg
fimul
mov
mov
cmp
sbb
sbb
inc
cmp
jnp
mov
jbe
into
pop
cmp
js
cmp
ins
xchg
mov
cmp
(bad)
aas
mov
aaa
dec
mov
pop
dec
push
xlat
sbb
sti
mov
stos
jo
mov
xchg
into
int3
loop
fdivr
fdivr
mov
dec
call
cmp
inc
fistp
mov
stc
test
mul
xor
in
addr16
(bad)
pusha
cdq
repnz
fstp
add
xchg
nop
data16
nop
mov
out
mov
out
movs
sbb
popa
mov
or
dec
movs
out
or
fnsave
cdq
cmc
cmp
dec
push
fbld
pop
mov
push
mov
jo
loop
out
(bad)
and
inc
push
cmp
sbb
inc
pusha
xchg
(bad)
pop
ret
imul
stos
sti
fst
jge
add
movs
mov
ins
das
cmc
rol
mov
sbb
mov
mov
add
sbb
out
frstor
push
mov
sub
xor
mov
sbb
in
sar
push
cmp
dec
xchg
lock
xchg
outs
sbb
ins
jl
xchg
mov
jg
pop
dec
mov
inc
sub
dec
sub
pop
idiv
dec
mov
sub
clc
hlt
shl
fcomp
test
add
adc
bound
sbb
mov
add
xor
push
add
pop
data16
das
dec
sub
mov
xchg
cmp
das
cmp
or
js
sub
lea
xchg
xor
pop
loopne
xchg
out
inc
dec
lods
jg
(bad)
lds
push
leave
push
popf
nop
or
xchg
xchg
xor
cmc
out
xchg
mov
mov
aaa
neg
and
jle
iret
mov
(bad)
sub
sbb
cmp
adc
mov
(bad)
in
retf
jmp
aas
sub
fldcw
adc
das
mov
pop
xor
repnz
shl
fsubr
push
clc
xchg
stc
push
xchg
jo
pop
bound
jns
stc
data16
stos
mov
mul
sahf
rcr
lahf
daa
push
gs
add
(bad)
(bad)
rcr
aad
inc
jbe
mov
ror
push
les
int
push
out
leave
(bad)
out
mov
cmp
xor
push
dec
clc
cs
pusha
sub
inc
loope
movs
inc
sbb
outs
cmp
repz
mov
mov
inc
pop
jmp
loop
jg
das
push
dec
xor
popa
xchg
out
jg
jle
fstp
and
scas
pushf
mov
xchg
adc
inc
jnp
test
out
loopne
test
cs
enter
aam
cdq
dec
adc
inc
pop
aas
xor
dec
imul
inc
add
pusha
sahf
nop
xchg
inc
cdq
mov
fiadd
mov
into
push
xchg
mov
test
xchg
loop
mov
loop
inc
pop
push
fadd
cmps
in
jl
idiv
test
sub
movs
mov
ret
xchg
or
fld
adc
loop
out
cmp
mov
sbb
ins
mov
(bad)
add
mov
or
cwde
sbb
test
push
in
or
sbb
arpl
in
nop
inc
add
cmp
out
fwait
xor
div
adc
leave
mov
push
mov
inc
mov
fmul
dec
jge
cmps
fisttp
aad
bound
ja
jnp
retf
sub
sub
(bad)
xor
dec
xor
cwde
mov
not
imul
mov
mov
or
xchg
push
jb
jno
cs
pop
hlt
sbb
inc
jno
sbb
add
call
xor
js
xchg
aam
and
call
jns
or
scas
outs
not
lea
mov
pusha
test
mov
mov
or
int3
sti
aaa
push
xor
(bad)
jle
inc
inc
and
mov
mov
or
out
xchg
fs
adc
or
dec
lods
(bad)
shl
test
lods
enter
jo
clc
adc
jmp
rcl
sahf
jg
stos
mov
cmp
movs
add
ret
or
fwait
dec
mov
mov
and
retf
sbb
bound
scas
sbb
jp
fcomp
adc
fild
inc
jno
jmp
test
or
cs
lock
arpl
adc
retf
jno
pop
pop
push
add
push
mov
aas
mov
fwait
sbb
xchg
sbb
sbb
je
in
por
repnz
add
les
stos
xor
dec
cmc
in
scas
fst
outs
jmp
out
ficom
nop
mov
sub
pop
sub
inc
retf
scas
in
fcmovbe
rcl
popf
repnz
add
sahf
jmp
pusha
jmp
mov
aad
sbb
cld
rcl
test
push
out
mov
aas
lahf
mov
mov
cmp
pop
push
cmc
dec
movs
stos
imul
jl
ret
shl
and
or
iret
sub
jp
addr16
sub
jp
add
mov
(bad)
mov
test
xor
or
popf
lahf
push
xchg
mov
and
xlat
push
ja
xchg
ret
enter
cmp
mov
jnp
or
cmp
cmp
mov
fwait
lock
out
xchg
xchg
fs
mov
or
xchg
or
fnstenv
shr
mov
(bad)
enter
es
cwde
test
clc
dec
mov
retf
repz
add
jl
adc
push
mov
mov
add
sar
mov
jb
(bad)
idiv
mov
adc
and
ds
fistp
stc
retf
jnp
clc
jns
inc
inc
push
and
add
fstp
xchg
mov
and
aaa
jnp
es
fld
retf
mov
mov
(bad)
inc
fwait
jbe
in
or
mov
sbb
push
push
std
mov
sbb
mov
dec
pop
neg
imul
and
jecxz
jle
and
adc
sbb
or
xchg
int3
mov
mov
dec
inc
out
bound
js
xchg
dec
(bad)
ds
push
xor
in
mov
push
test
lds
int
iret
hlt
jle
add
push
rol
mov
adc
imul
pop
fsubr
rcr
mov
or
pop
add
cdq
(bad)
jecxz
popa
push
mov
mov
repz
inc
adc
or
test
add
ret
icebp
in
pop
scas
cmps
sub
cs
or
fs
out
or
sub
outs
out
pop
icebp
loop
pop
and
repnz
test
(bad)
int3
dec
adc
cmps
and
imul
gs
test
mov
fwait
mov
std
and
mov
jecxz
push
xchg
add
mov
ja
sub
out
cld
mov
mov
pushf
lds
sbb
mov
ds
jbe
cmps
push
adc
lea
add
enter
push
ret
aaa
call
dec
cmp
pop
call
adc
js
xor
mov
inc
mov
out
xor
inc
nop
sbb
in
jne
push
in
std
or
jb
adc
push
jecxz
mov
sbb
push
in
retf
loopne
enter
xchg
inc
fwait
call
shl
push
cmp
adc
add
pop
hlt
dec
pushf
das
pop
clc
in
std
jl
inc
push
jne
push
pop
dec
sub
mov
(bad)
pop
(bad)
push
cmps
jns
mov
test
fiadd
outs
leave
cdq
lahf
sub
sti
in
shr
push
mov
sbb
mov
pop
outs
xchg
jle
rcr
xor
inc
rol
sar
in
sbb
sub
(bad)
mov
jno
mov
sub
push
mov
mov
sti
and
adc
adc
neg
loopne
out
dec
fwait
nop
xchg
mov
call
jmp
xchg
pop
jecxz
bnd
rcr
dec
test
xor
xor
lock
mov
ret
mov
jl
adc
and
or
(bad)
push
push
dec
rol
and
fucom
call
xchg
or
inc
push
aad
cmp
xchg
pop
jge
shl
or
jb
cmc
inc
daa
(bad)
or
mov
sbb
xchg
pop
outs
push
push
fs
add
mov
pop
mov
sub
sbb
pop
repz
dec
cdq
lods
cs
sbb
(bad)
icebp
fnstsw
mov
out
dec
dec
stc
sbb
movs
xor
jg
ins
pop
sbb
xor
add
pop
fcomp
sbb
push
test
mov
call
ss
aad
fs
add
or
jp
hlt
xor
pop
sub
push
mov
je
mov
ret
cmp
int
sbb
fcmovnu
mov
pop
adc
mov
scas
js
xchg
sbb
inc
pop
sub
xor
adc
xor
and
jg
add
jmp
hlt
sub
out
mov
arpl
push
rcl
xlat
ret
mov
pop
and
dec
(bad)
mov
or
shl
mov
neg
or
ins
aam
xor
cmps
lahf
push
push
(bad)
ss
adc
or
pop
rol
outs
sub
sub
push
dec
pop
ror
sahf
fistp
clc
sbb
sti
addr16
cmps
shl
add
fmul
push
xchg
test
pop
sub
scas
movs
mov
int
mov
mov
xor
fcom
and
cmp
push
cmps
xor
repnz
iret
jecxz
into
lods
adc
dec
xor
dec
addr16
add
push
das
out
es
add
enter
clc
jg
sub
inc
out
fidivr
mov
push
stos
daa
leave
push
mov
push
test
push
das
icebp
(bad)
xchg
push
pop
addr16
jae
scas
xchg
out
adc
sub
lods
dec
lea
leave
adc
cmp
test
and
adc
xchg
jne
jg
movs
stos
test
push
cmp
das
mov
stos
cmp
or
jle
or
xchg
xchg
retf
(bad)
add
pop
pop
retf
and
fldl2t
in
cmps
xchg
movs
(bad)
fst
pop
jne
les
out
jp
cmp
popa
dec
and
out
ss
int3
jmp
aam
mov
(bad)
fnsave
push
ds
pop
(bad)
fdiv
dec
mov
cmp
in
or
ret
ror
fiadd
repz
movs
xchg
or
je
pop
ss
repz
sub
arpl
sub
xor
dec
shl
mov
fadd
jo
movs
arpl
cmp
and
sbb
ret
cdq
cdq
mov
ja
adc
adc
call
cwde
popf
sbb
or
cmp
mov
hlt
jp
dec
loope
pushf
data16
aaa
fs
out
mov
adc
ficom
dec
cmps
int
or
and
scas
xchg
sub
in
loope
data16
xchg
fisubr
pop
xor
mov
or
jbe
add
dec
imul
adc
dec
or
addr16
sbb
popa
cmp
sub
sbb
int
mov
xor
rcr
push
push
shl
scas
cmp
int
mov
movs
add
mov
std
xor
stc
icebp
ins
add
and
or
test
sahf
sbb
mov
cmp
dec
(bad)
or
and
repnz
fstp
clc
icebp
imul
and
lods
jbe
aaa
outs
cmp
femms
(bad)
shl
shl
mov
pop
or
popa
dec
mov
pop
je
cwde
sub
dec
sbb
sub
xchg
test
mov
mov
rcl
cmp
fdiv
pop
test
popa
adc
in
sub
push
neg
pop
xchg
sbb
mov
and
adc
cmps
sub
call
lods
call
adc
cmp
and
xchg
test
movs
outs
cmp
scas
xor
retf
movs
sbb
push
dec
cwde
imul
jp
out
jge
(bad)
aas
lahf
repnz
push
cld
bound
inc
or
sub
mov
not
jecxz
add
push
or
pop
mov
push
ret
xchg
ror
cmps
xor
std
(bad)
mov
dec
int3
add
test
mov
ret
pop
or
push
sub
xor
xchg
mov
mov
popf
xlat
and
mov
movs
pusha
sbb
imul
iret
bound
sbb
inc
adc
cmp
jl
push
pop
jb
ds
retf
data16
shl
test
dec
lods
xor
int3
call
add
or
stc
pop
call
jmp
shl
loop
cli
xor
js
test
das
ss
dec
daa
pop
fs
call
cld
mov
popa
fucomp
out
push
shl
xor
push
mov
pusha
enter
mov
pop
jns
push
(bad)
mov
inc
or
mov
gs
(bad)
push
sbb
ss
mov
scas
cmps
sbb
mov
(bad)
jb
inc
mov
dec
imul
push
push
mov
push
cs
cli
inc
push
xor
add
push
pop
sbb
icebp
push
sub
fadd
cli
loope
and
mov
(bad)
scas
scas
push
sub
sbb
icebp
lods
(bad)
mov
cdq
pop
or
fwait
xor
and
fnstsw
(bad)
outs
pop
scas
popa
and
cld
or
lods
sub
(bad)
imul
nop
xchg
jmp
lea
popa
clc
adc
clc
or
jmp
shl
das
add
and
mov
pop
sbb
jnp
fadd
fnclex
scas
and
inc
in
jmp
(bad)
fld
lock
xchg
sub
test
adc
cmps
idiv
std
adc
idiv
inc
xor
sbb
ds
(bad)
jg
hlt
outs
(bad)
in
ret
inc
or
mov
and
jne
add
mov
dec
inc
push
push
cdq
sbb
not
cmps
rcr
mov
xor
mov
xchg
push
inc
pop
jmp
outs
lock
mov
push
in
cs
clc
lock
mov
or
pushf
push
mov
mov
dec
lds
cmps
pop
call
in
out
shl
pop
stos
mov
sub
add
pop
adc
je
ret
xchg
ret
xchg
adc
add
je
ficomp
clc
not
adc
jb
or
mov
jb
cld
test
push
mov
dec
icebp
rcr
mov
sbb
add
not
and
mov
stos
sti
adc
pop
imul
movs
loope
or
jno
dec
rcl
dec
jo
hlt
ror
xlat
lea
inc
shl
jg
ret
jns
jg
lods
jge
lods
cmc
sar
mov
jb
xor
sbb
and
neg
(bad)
pop
dec
inc
add
bound
push
enter
inc
xchg
dec
push
pop
inc
xchg
add
mov
imul
jo
adc
aaa
dec
pusha
xchg
shl
hlt
retf
push
add
push
mov
dec
inc
fwait
outs
(bad)
sbb
imul
sbb
push
mov
jno
xlat
out
(bad)
lock
jmp
in
jl
pop
sub
add
cmc
mov
xchg
push
fwait
ss
sahf
pusha
in
mov
mov
push
jle
inc
out
cmp
push
and
ret
aaa
sub
pop
pop
and
jecxz
xor
mov
test
mov
jp
and
and
icebp
and
outs
push
or
add
jge
lods
inc
std
fwait
pop
pop
xor
scas
movs
bound
dec
stos
mov
and
ss
mov
aam
repz
xor
inc
and
dec
inc
mov
sti
das
adc
or
adc
and
xor
mov
xor
jl
das
xor
imul
pop
mov
dec
push
dec
imul
test
pop
xchg
sbb
pop
test
sub
cmp
mov
call
xor
xchg
daa
jno
inc
mov
stos
aad
xchg
and
and
loope
sti
or
jnp
add
shr
pop
ror
test
sbb
call
jno
movs
scas
pushf
test
movs
(bad)
and
xchg
mov
je
xor
mov
sbb
test
sub
add
dec
out
lock
push
popf
inc
sub
xlat
clc
clc
cmps
xchg
adc
xchg
gs
jge
imul
cmp
repz
pusha
pop
in
idiv
sti
gs
rol
sub
mov
pop
iret
inc
jne
lds
fcmovb
xchg
mov
dec
cmp
hlt
pop
imul
test
xor
fld
push
sub
cmp
xchg
push
push
xchg
fwait
mov
sahf
push
and
xchg
imul
push
xchg
jmp
loope
xchg
sub
pushf
aas
sub
loopne
in
sti
sub
xchg
xchg
mov
je
sub
pop
adc
cmp
mov
test
mov
jg
sub
cmp
push
popa
inc
add
(bad)
push
pusha
and
xchg
sub
cmp
jle
bnd
jne
push
scas
call
push
jae
lods
shr
sbb
pusha
mov
sahf
(bad)
js
test
cld
or
shl
and
jo
ficomp
mov
mov
mov
retf
lods
pop
outs
pop
call
movs
leave
ins
addr16
rol
sbb
cmp
cs
and
cli
(bad)
and
mov
inc
mov
xor
cmp
pushf
clc
and
cmp
out
icebp
push
mov
jae
xor
in
jg
dec
jp
push
push
bnd
(bad)
or
and
ror
jle
push
mov
call
or
shl
jno
clc
cdq
outs
or
sub
retf
sar
ret
sbb
mov
mov
mov
sub
hlt
cs
inc
mov
mov
enter
shr
jecxz
xor
push
out
retf
stos
test
sbb
xchg
cmp
adc
pop
xchg
adc
cld
mov
adc
xor
xor
pop
inc
imul
pop
dec
daa
sbb
mov
stc
(bad)
in
sbb
les
xchg
pop
mov
xchg
mov
mov
add
ins
mov
cmp
lods
push
cmp
out
rcl
clc
jbe
call
sbb
arpl
repz
(bad)
sar
test
mov
hlt
scas
or
xchg
or
lahf
in
clc
fstp
jb
push
mov
ins
dec
inc
outs
bound
cmps
xlat
fs
ficom
inc
inc
fdiv
or
jp
jmp
pop
adc
dec
jle
rol
push
cmp
(bad)
outs
mov
xchg
out
test
es
fist
aad
mov
test
sbb
addr16
xchg
iret
stos
lea
inc
daa
cmp
pop
shl
popa
out
and
test
fdiv
int
js
mov
xchg
dec
mov
push
mov
repnz
mov
enter
mov
lds
fld
add
fdivrp
cs
mov
or
jp
pop
jno
and
popa
add
inc
aaa
mov
jns
mov
push
mov
inc
movs
add
push
xchg
inc
cwde
jne
fdivr
inc
stc
sar
retf
aam
dec
(bad)
(bad)
jo
repnz
and
xlat
in
push
dec
adc
fwait
test
sub
test
and
(bad)
cmp
cmp
cmps
icebp
jno
jl
mov
ret
cmp
dec
xor
ret
out
push
xchg
sub
mov
add
popa
imul
dec
or
add
push
mov
test
or
sahf
and
mov
das
into
aaa
loope
mov
jecxz
je
sub
jb
in
cmp
cld
xor
xchg
mov
je
push
cmp
adc
pop
out
jl
out
push
je
inc
ret
nop
in
jae
jno
cli
mov
test
pop
frstor
retf
aad
pushf
aam
and
mov
push
test
xchg
outs
cdq
mov
shl
iret
sbb
leave
scas
pop
push
shr
(bad)
mov
cld
dec
sbb
cmovge
dec
push
icebp
cmp
aas
inc
mul
fxch
idiv
mov
gs
inc
call
popf
push
push
rol
clc
jo
hlt
pusha
xchg
pop
inc
push
xchg
xchg
fs
pop
lea
xchg
frstor
jecxz
out
out
sub
add
test
adc
mov
or
or
mov
sbb
xchg
and
(bad)
add
xor
sub
sub
out
sub
pop
out
sbb
add
pop
jp
pop
aad
xor
clc
mov
cmc
repnz
xchg
pmaxsw
sbb
das
test
xchg
int3
mov
sbb
out
push
les
sub
pop
pop
loope
mov
mov
dec
adc
push
fdivr
rcr
sub
push
fisubr
cmp
pop
pop
adc
push
mov
or
rcl
or
fnstcw
jo
add
pop
and
scas
pop
repnz
sub
xor
cmp
hlt
mov
pop
fidiv
sub
pop
lods
or
cs
sub
fnsave
pop
sbb
retf
movs
in
xor
xor
mov
in
jae
xchg
(bad)
in
ss
inc
xchg
sub
xor
push
pop
(bad)
mov
jl
jno
jbe
mov
dec
mov
adc
rol
(bad)
mov
gs
pop
movs
sbb
adc
mov
lea
jno
adc
loope
dec
mov
inc
les
fisttp
pop
cmps
add
sbb
retf
mov
dec
loopne
jmp
loope
int3
jbe
ret
jbe
add
sub
ja
and
jno
arpl
daa
pop
stos
clc
aad
dec
push
inc
out
pop
mov
rcr
mov
hlt
and
and
dec
cdq
jg
out
pusha
repnz
(bad)
fisubr
dec
dec
mov
and
frstor
loop
mov
call
lea
aas
retf
aad
aas
xor
cmc
pop
xchg
inc
cmp
nop
sahf
repnz
mov
leave
cmp
test
adc
aam
jb
frstor
retf
into
rcr
inc
cmps
mov
aam
sub
iret
scas
(bad)
add
jmp
xchg
sbb
daa
sbb
movs
or
ret
shl
mov
cmp
pop
sbb
jge
popf
jge
cmc
xor
xor
jp
mov
cmp
xchg
sbb
mov
test
popa
daa
mov
cli
and
out
and
test
mov
hlt
outs
cmp
out
cmp
fadd
pop
popf
sbb
cmp
jge
icebp
(bad)
pop
push
xor
mov
bound
push
daa
xor
repz
sbb
pop
das
je
outs
dec
test
pop
and
cmc
out
or
inc
inc
mov
lds
push
xor
stos
iret
xchg
cs
xor
adc
ja
loop
pop
add
loop
xor
jp
dec
nop
sub
call
(bad)
fs
jno
aad
mov
movs
and
inc
dec
shl
push
add
repz
and
or
cmc
add
mov
rol
mov
jge
jb
arpl
or
mov
inc
mov
icebp
jo
mov
jne
sbb
es
and
sub
pop
mov
je
dec
inc
push
and
adc
xchg
add
cmps
or
out
in
xchg
sub
js
sti
xchg
ror
sti
in
adc
sub
mov
inc
add
(bad)
ret
mov
pop
or
es
ja
sbb
ret
cmp
push
xor
cmps
scas
(bad)
cmp
idiv
repnz
ins
scas
fs
mov
jno
jge
lds
push
in
cli
mov
dec
fbstp
xlat
cmp
(bad)
imul
mov
in
(bad)
mov
mov
repnz
shl
push
nop
or
and
fnop
inc
dec
or
imul
(bad)
xor
mov
fucomi
mov
ret
(bad)
ja
outs
jg
xchg
mov
mov
adc
mov
fs
xchg
mov
dec
cwde
iret
jmp
(bad)
icebp
movs
popa
push
ins
xor
xor
jne
stos
xor
pop
xchg
test
jl
test
mov
pop
inc
mov
je
xchg
mov
stos
sar
dec
pop
inc
(bad)
shl
jg
nop
mov
mov
jecxz
pop
add
cwde
pop
je
retf
(bad)
dec
test
xchg
mov
cwde
jne
mov
enter
ja
mov
pop
pop
cld
(bad)
scas
pusha
fnstcw
adc
stos
pop
pop
in
cmc
retf
pushf
sbb
sahf
loope
nop
int
xchg
mov
ja
pop
lea
js
mov
or
cli
mov
push
sub
shr
jo
stc
add
cs
dec
adc
test
fistp
sub
out
fwait
gs
test
pop
test
iret
xor
dec
pop
call
xchg
ja
or
jg
cmp
jb
mov
xchg
jne
mov
out
arpl
mov
inc
into
aaa
xor
adc
stos
push
or
cli
dec
xor
add
scas
retf
or
add
retf
sbb
cmps
loop
movs
jae
in
dec
mov
mov
push
rcr
cld
loope
mov
out
stc
mov
inc
sbb
(bad)
fistp
neg
mov
sub
clc
lea
push
xchg
sub
mov
sub
popa
cdq
call
jae
mov
add
ins
icebp
leave
mov
aas
iret
jae
shr
shl
and
push
add
dec
lahf
scas
and
pop
lods
push
dec
cmc
mov
xchg
enter
mov
mov
xor
xchg
cmps
adc
mov
jmp
add
test
mov
adc
retf
cmp
add
mov
or
int
mov
fnsave
(bad)
or
add
mov
xor
jo
adc
xchg
aam
push
sbb
outs
shl
shl
ins
xor
push
sub
pop
mov
dec
jo
mov
fst
in
add
in
and
and
ficomp
push
scas
mov
xlat
hlt
ret
data16
mov
jg
jo
fxch
les
sbb
pushf
pop
adc
ins
push
test
dec
loope
sbb
fcomip
inc
outs
clc
pushf
push
inc
xchg
aaa
jb
inc
mov
or
xchg
push
inc
out
loopne
jnp
scas
add
(bad)
sbb
cmp
cmp
mov
sahf
push
aas
or
dec
outs
out
dec
ret
ret
inc
mov
xor
cmp
adc
scas
or
mov
cmp
and
call
test
jmp
outs
(bad)
loope
and
jle
sbb
or
mov
in
jne
adc
jecxz
xor
cmp
xor
add
adc
fld
movs
cmc
mov
or
dec
fdivr
mov
scas
push
inc
jmp
pop
dec
pop
(bad)
xor
adc
jno
jecxz
mov
sub
push
ja
mov
sbb
add
jnp
call
jmp
stos
inc
(bad)
xchg
jmp
cld
repz
add
test
imul
call
dec
ret
nop
jp
mov
movs
xchg
(bad)
xchg
inc
push
cmps
pop
pop
mov
xor
cmp
push
xor
inc
cmp
push
adc
xchg
inc
mov
mov
sbb
cdq
ror
(bad)
jns
sbb
dec
add
mov
sub
jns
cmps
sub
mov
pop
comiss
mov
mov
fadd
sar
gs
xor
(bad)
scas
cmp
sub
loope
ins
dec
inc
sbb
ret
into
mov
loope
in
and
pop
out
mov
jecxz
js
or
sbb
fst
jae
jae
mov
stos
clc
mov
inc
loopne
jae
mov
(bad)
into
into
mov
pop
adc
or
int3
mov
jno
jl
mov
scas
jae
jb
pushf
sbb
xchg
jmp
gs
jle
fwait
cli
test
fwait
mov
and
pop
pop
imul
mov
retf
mov
icebp
sbb
push
mov
sti
mov
sub
cdq
jmp
adc
cli
push
out
imul
pop
les
xchg
test
cmp
xchg
(bad)
mov
jo
(bad)
mov
mov
push
fyl2x
sbb
(bad)
mov
test
xchg
xchg
gs
clc
frstor
sbb
test
cwde
push
pop
adc
mov
push
aad
imul
fsubr
or
retf
xchg
sahf
jns
pop
imul
jge
xchg
mov
adc
lea
mov
sbb
ret
xor
pop
je
std
push
jge
(bad)
test
sub
loop
int
enter
or
add
xchg
dec
xor
jmp
and
sub
push
lock
and
inc
push
call
jnp
mov
cmovae
xchg
inc
in
jle
aas
repnz
stc
cmp
int
rcr
sbb
pop
gs
pop
test
mov
dec
push
cmp
(bad)
in
fistp
jg
repnz
in
xchg
dec
push
push
pop
int3
xlat
rol
cmp
out
push
stc
in
jb
cmc
(bad)
int
arpl
jge
jmp
lds
jmp
sbb
dec
pop
out
imul
ret
fcmovu
jle
aam
pop
ins
or
(bad)
mov
xchg
adc
push
adc
scas
jmp
loopne
sub
or
lods
xlat
adc
inc
inc
hlt
xchg
dec
mov
sar
repz
test
out
and
fldcw
call
pusha
xchg
sub
cmp
mov
ja
sub
push
jmp
clc
fcomp
int3
adc
rol
push
push
je
test
sbb
mov
ror
jb
cdq
sub
je
ds
pop
jg
icebp
xchg
push
cmps
ins
xchg
mov
dec
cs
aad
sbb
xchg
add
fbld
pop
add
shr
and
cmps
push
xor
mov
jmp
dec
loop
psubq
xor
xchg
push
shr
sbb
xor
out
int
push
or
sub
outs
cmp
and
xor
retf
in
sub
or
and
test
mov
pop
in
pop
les
ins
ja
dec
test
jg
leave
mov
dec
ins
(bad)
data16
pop
mov
or
scas
ins
sub
sub
sbb
loop
pop
ret
(bad)
dec
dec
mov
scas
push
dec
pop
jg
inc
sub
(bad)
mov
cmps
push
push
and
mov
movs
mov
jmp
pop
in
das
pop
push
cwde
mov
in
inc
mov
xor
clc
and
loope
xchg
pusha
or
lock
sbb
xor
mul
cmc
mov
add
inc
adc
and
cld
je
mov
mov
mov
aas
push
mov
ret
cli
mov
(bad)
das
lock
dec
push
scas
(bad)
jb
jle
int
jp
push
(bad)
xchg
(bad)
xchg
cld
cmp
push
mov
mov
fld
daa
mov
sub
adc
inc
pusha
cmp
cmp
ret
retf
cmp
fbld
and
mov
shl
dec
or
hlt
sbb
stos
inc
xchg
push
(bad)
sahf
std
lea
lock
je
jl
out
pop
mov
imul
sub
in
scas
(bad)
out
aaa
inc
js
popa
cmp
inc
rol
test
test
cmp
stos
sbb
loope
enter
sbb
sub
cmp
cmp
mov
jns
jg
jge
out
sbb
mov
mov
sbb
or
xchg
cmps
retf
xchg
aam
cmp
cld
popf
push
dec
inc
and
mov
pop
or
mov
ret
sub
icebp
mov
pusha
and
jecxz
pop
mov
fnsave
rcr
sub
mov
inc
fwait
movs
aam
cmp
lea
dec
js
clc
(bad)
pop
mov
mov
aam
sub
add
shl
call
push
dec
iret
int
jecxz
push
inc
or
sahf
loop
or
pop
in
mov
push
adc
fcomip
push
mul
cmp
lea
es
(bad)
jl
add
push
adc
test
js
sbb
xchg
mov
push
imul
and
jno
sbb
adc
pop
cs
into
mov
ins
and
dec
adc
jbe
inc
jl
das
enter
imul
loopne
int3
movs
fistp
mov
stos
mov
cmp
xor
or
mov
mov
arpl
or
cmp
lock
pop
ret
leave
sti
sbb
push
repz
int
jnp
mov
or
or
jae
repz
(bad)
pushf
pop
jae
mov
cmp
(bad)
out
int3
sar
es
jnp
lods
stc
and
dec
movd
fwait
rcr
sbb
clc
ss
and
sbb
jno
add
out
cwde
cmp
push
and
call
jb
jbe
inc
arpl
repz
inc
jmp
movs
daa
stos
xchg
lahf
in
jmp
push
dec
fidiv
pop
or
mov
stc
lea
dec
xor
pop
popa
pop
in
stos
push
jne
das
out
outs
fs
mulps
dec
in
pop
jb
mov
dec
mov
into
loop
jne
mov
pop
ja
inc
out
out
in
add
and
or
xchg
or
push
push
test
repz
retf
pushf
and
and
sub
dec
xor
mov
out
and
add
stos
inc
sbb
xchg
push
out
movs
int3
pop
jb
push
call
adc
push
int
mov
out
popa
iret
sub
mov
ss
mov
dec
les
in
sbb
icebp
and
jns
cs
pop
fwait
inc
xchg
sub
mov
sub
mov
push
dec
push
dec
sbb
sbb
scas
dec
jmp
xor
sbb
mov
add
jl
pop
sub
ins
or
sub
xor
mov
arpl
mov
(bad)
lahf
inc
jne
pop
out
sbb
div
popf
sub
jmp
hlt
jle
leave
arpl
cmp
pushf
mov
les
dec
sbb
pop
dec
mov
inc
jle
add
in
scas
mov
mov
sbb
xchg
and
cmp
sbb
ins
ss
pop
fsub
call
test
lock
test
cmp
jno
loop
je
pop
ror
lods
pop
cmp
add
cmp
retf
push
adc
cli
nop
xor
mov
jno
clc
sbb
lock
in
push
or
mov
gs
int
mov
loop
push
out
test
jg
fwait
loopne
out
sub
out
mul
mov
pusha
mov
fisttp
sub
inc
push
dec
outs
sub
les
pop
jle
les
imul
mov
cmp
out
sbb
lods
pop
sahf
das
mov
(bad)
rcr
add
fs
or
(bad)
jnp
jno
dec
push
fwait
stc
pushf
addr16
movs
mov
dec
dec
(bad)
shr
and
sub
and
cmp
and
cmc
stos
jg
jnp
fbstp
cmp
dec
fnstcw
(bad)
xchg
sbb
pop
jne
cmp
dec
pop
mov
pusha
scas
leave
neg
movs
inc
aaa
add
fisttp
add
push
cmp
lods
and
pop
fst
jmp
dec
xchg
push
xor
xchg
jg
push
test
push
fld
hlt
inc
mov
repz
sbb
movs
or
mov
loope
test
mov
mov
je
push
neg
in
mov
sar
dec
cmps
repz
dec
add
adc
add
ds
adc
push
cli
cli
adc
jl
xchg
cmp
cmp
(bad)
cmp
into
test
mov
add
jge
ret
mov
xchg
xchg
ret
xlat
aas
sub
imul
aaa
sub
and
(bad)
jle
xlat
cmp
ret
lods
dec
sub
push
jl
sbb
mov
xchg
lods
mov
mov
mov
fild
jecxz
inc
sub
pop
xor
add
ucomiss
push
jno
pop
in
mov
ja
cdq
rcl
mov
int
aaa
out
mov
ret
int
or
mov
cmp
cdq
mov
jns
(bad)
or
push
addr16
in
int3
imul
sahf
or
mov
cmp
xlat
lds
retf
fst
shl
jp
add
jmp
in
mov
popf
test
and
js
imul
xchg
push
pop
push
inc
daa
pop
stos
push
cmp
lods
loop
test
pop
add
mov
(bad)
call
lods
or
mov
popf
mov
adc
movs
mov
movs
cs
gs
dec
jnp
fldcw
ror
imul
cmps
mov
cmp
repz
xchg
push
xor
rol
xchg
push
pop
mov
pop
cmp
dec
add
mov
pop
std
repz
ret
int
frstor
jns
add
sub
pop
aad
test
push
sar
sbb
dec
cmps
dec
cmp
xchg
shl
cmp
push
ss
pop
stos
inc
retf
xchg
jp
loope
in
xor
sbb
shl
add
outs
add
jne
mov
test
adc
pop
pop
cmp
jg
inc
lods
xor
ds
sub
add
add
cmp
int3
out
inc
xchg
out
xchg
ds
retf
mov
jl
mov
jae
scas
dec
(bad)
push
stos
clc
sbb
rcr
sti
das
rcr
std
jb
mov
(bad)
ins
push
imul
cmp
or
arpl
push
shl
pop
leave
(bad)
sub
add
and
sahf
xchg
pop
dec
xchg
mov
bound
and
hlt
mov
stos
icebp
addr16
imul
dec
rol
sti
mov
lock
and
test
shl
cld
add
jl
ret
push
cld
ret
je
xchg
inc
mov
(bad)
xchg
and
or
pushf
xlat
push
ret
aaa
push
inc
sbb
add
shr
jbe
mov
add
not
lahf
punpcklwd
mov
movs
lds
paddb
xor
lods
in
push
in
or
adc
sar
mov
movs
icebp
adc
jmp
xchg
sbb
or
test
loop
out
cmp
mov
sbb
jmp
cmp
inc
xor
sti
pop
cmp
cmp
mov
pop
mov
out
outs
knotw
addr16
inc
daa
sbb
inc
cli
pusha
inc
mov
adc
das
leave
mov
int3
pop
mov
xchg
adc
retf
lahf
mov
mov
dec
sub
add
dec
mov
cmp
inc
mov
pushf
nop
lahf
ja
(bad)
icebp
xchg
pushf
adc
ficom
cmp
or
cmp
and
les
pop
adc
pusha
int
mov
(bad)
sar
enter
fsub
jge
pop
dec
repnz
adc
sbb
mov
xor
inc
mov
call
xor
xor
test
shl
mov
xchg
xor
not
mov
ins
mov
push
fs
aaa
jmp
dec
mov
imul
jo
cmovae
aam
push
cdq
push
jmp
rcl
imul
test
mov
pushf
mov
xlat
mov
aas
loop
dec
jmp
aam
mov
pop
ds
imul
and
out
sub
addr16
cmp
pusha
nop
mov
lock
mov
gs
(bad)
push
sub
jns
enter
and
mov
div
nop
inc
fisubr
dec
aas
xlat
sbb
sbb
or
mov
retf
aam
nop
mov
xchg
stos
jecxz
fs
xor
add
call
stos
add
sbb
inc
add
push
imul
out
jo
pop
mov
sbb
pusha
lahf
adc
sbb
or
test
(bad)
jns
push
pushf
stos
outs
lea
fisub
and
int3
inc
sub
fist
push
xchg
mov
std
xchg
es
pop
mov
push
jb
jmp
and
push
jbe
xchg
adc
sub
in
movs
and
leave
dec
sub
lock
adc
stos
mov
loop
ss
sub
xor
inc
jp
in
daa
nop
jns
add
inc
ja
mov
add
aas
out
mov
sbb
xor
sbb
mov
movs
mov
mov
retf
or
in
push
aas
out
mov
fidiv
push
stc
jl
in
aas
aas
jbe
ins
jo
bound
cmc
add
dec
ja
push
in
shr
dec
xlat
(bad)
stos
imul
push
fs
push
pop
dec
and
push
repz
push
cmp
mov
jecxz
lahf
pop
mov
in
jl
add
mov
and
dec
pop
jecxz
jae
push
jno
mov
lock
shr
jne
mov
sbb
lods
sbb
repnz
sti
out
ss
outs
mov
rcr
xchg
fstp
rol
(bad)
jmp
aaa
(bad)
test
or
ror
sahf
fst
iret
push
ins
jo
stos
adc
in
pop
mov
mov
sti
fwait
push
movs
fwait
adc
movs
jnp
jl
mov
dec
outs
fcmovu
bound
pushf
or
sub
repz
mov
mov
mov
fmul
adc
push
and
popa
aam
cmp
cmps
jne
je
gs
fistp
push
adc
pop
cmp
mov
xchg
push
fmul
stc
icebp
pop
jb
arpl
(bad)
idiv
xchg
loope
or
test
sbb
fild
gs
clc
test
push
cmp
stos
cmp
out
push
imul
jmp
outs
jns
add
mov
or
jno
shl
shld
dec
stos
loopne
mov
leave
addr16
loop
cmc
or
jmp
leave
aaa
test
jl
int
hlt
cmp
jae
ficom
inc
ffree
(bad)
popa
push
mov
test
lea
das
loop
inc
fldl2t
add
sbb
cld
push
imul
test
mov
loop
test
inc
xchg
add
pop
js
or
(bad)
in
sbb
mov
inc
rol
and
inc
inc
aaa
cdq
inc
jmp
xor
std
js
inc
test
jl
jg
dec
test
dec
mov
xchg
mov
icebp
jmp
imul
mov
arpl
mov
xor
xchg
mov
retf
xor
mov
les
push
stc
pop
pop
test
jmp
push
cmps
div
pop
hlt
jecxz
stc
ins
ret
add
loop
or
cmp
(bad)
push
pop
pop
enter
xor
mov
test
dec
mov
pop
jecxz
mov
mov
adc
inc
mov
mov
and
popa
pop
mov
cmp
(bad)
(bad)
dec
frstor
bound
sub
mov
jae
inc
jle
addr16
pop
bound
cmc
in
cmp
fmul
mov
xchg
push
and
retf
(bad)
fcom
pushf
xchg
sti
cld
ret
das
sahf
xchg
xchg
ins
xor
aaa
mov
add
xchg
adc
inc
mov
imul
hlt
in
or
scas
inc
cdq
rcl
loop
test
movs
push
cmp
and
js
mov
jnp
xor
pop
cmp
pop
push
dec
dec
jmp
sbb
ss
jp
je
hlt
fsubrp
pop
outs
pop
mov
pop
aam
xchg
mov
sub
jbe
sub
add
das
fild
ins
out
dec
mov
dec
(bad)
xchg
cmps
or
xchg
xchg
test
aam
or
enter
jle
push
loope
jno
popf
pop
pop
xor
lea
mov
les
xor
loopne
imul
(bad)
sti
mov
sub
adc
jmp
xlat
xor
les
iret
xor
xor
push
adc
dec
addr16
icebp
dec
push
sbb
(bad)
cmp
mul
push
jno
test
cdq
imul
out
std
jp
cwde
mov
pop
lods
or
arpl
loop
xor
push
mov
clc
mov
xchg
sbb
test
shl
or
push
push
hlt
(bad)
lock
add
pop
or
addr16
popf
xor
loopne
repz
in
push
mov
sub
das
xchg
push
and
push
(bad)
cld
in
pusha
or
jp
shl
jns
or
dec
das
dec
cld
push
xlat
out
(bad)
mov
jnp
lock
mov
fs
sar
neg
inc
mov
dec
int3
(bad)
repnz
call
xchg
pop
pop
adc
push
inc
pop
mov
jl
aad
inc
into
cmps
mov
jne
xchg
pop
inc
adc
in
cld
and
scas
ss
or
out
mov
mov
fiadd
add
repnz
in
das
ja
jns
jmp
ja
push
rcl
mov
pop
pop
sub
xchg
push
push
add
jno
dec
(bad)
sbb
loopne
sbb
pop
das
sbb
inc
mov
movs
scas
mov
sub
inc
ds
leave
xchg
imul
pop
jp
imul
into
mov
cmc
ja
out
outs
cmp
(bad)
fstp
mov
daa
pop
jne
mov
xor
inc
inc
cli
iret
stos
xchg
xor
xchg
prefetch
movs
mov
(bad)
xchg
cmp
fcom
mov
lea
xchg
mov
data16
push
jmp
call
sbb
push
push
dec
or
pop
rcr
jno
enter
push
fs
not
or
lock
ins
in
mov
movs
mov
mov
xor
loop
lahf
mov
and
jl
fisttp
jmp
pop
ja
sub
ds
mov
loop
or
fs
jno
lods
imul
xlat
jmp
iret
add
pop
xor
js
xlat
pop
xor
and
loopne
and
mov
mov
mov
test
popf
fadd
xchg
pop
into
push
xlat
fcomi
xor
adc
dec
pop
icebp
push
or
add
(bad)
sbb
ror
test
retf
dec
fldenv
jne
jecxz
lea
sahf
inc
jl
call
xchg
imul
sub
inc
mov
push
lock
mov
sbb
sub
js
into
lods
mov
push
fucomi
scas
lahf
mov
inc
and
lods
or
sbb
push
std
mov
in
lock
scas
fistp
mov
out
jae
adc
push
imul
xchg
and
or
xchg
repnz
test
lahf
adc
out
xor
xchg
mov
frstor
bound
mov
dec
xor
add
sub
outs
test
and
add
out
shl
test
aas
mov
inc
outs
dec
arpl
cmps
aad
push
push
arpl
lahf
movzx
xchg
mov
fldcw
push
add
jbe
aam
push
xor
stos
dec
daa
inc
pop
call
and
inc
push
jno
loope
cmps
adc
dec
sbb
aas
xchg
imul
(bad)
(bad)
xchg
and
aam
and
shl
bound
les
xor
je
in
xchg
aam
nop
loop
jecxz
adc
cmp
fsubr
je
ins
cmps
jmp
xor
sbb
add
jecxz
push
scas
test
dec
sub
mov
inc
ror
sbb
imul
scas
mov
xor
xchg
xor
jno
push
inc
pop
shl
push
xor
inc
push
pop
ret
push
ds
xchg
pop
mov
aam
mov
push
shr
adc
pop
rcr
pop
adc
(bad)
pop
lods
cmp
call
pop
icebp
jecxz
(bad)
imul
ins
push
dec
fptan
les
aam
jo
(bad)
into
dec
push
adc
push
mov
shl
inc
mov
push
dec
fdiv
cmp
sahf
cmps
mov
ds
dec
pop
or
rcl
adc
push
jmp
dec
in
adc
jge
jl
ins
xor
jb
lea
ds
ins
cmp
in
sbb
sub
jmp
mov
sub
cwde
addr16
or
ror
test
sub
dec
cmc
mov
test
mov
ins
mov
dec
adc
sbb
adc
imul
cdq
(bad)
ja
jecxz
mov
(bad)
add
xor
dec
xchg
out
fs
test
pushw
shl
test
fdiv
jbe
push
dec
retf
pop
xchg
mov
xor
scas
ja
stc
(bad)
cdq
mov
and
and
movs
pop
xchg
out
pop
clc
(bad)
push
push
mov
scas
mov
das
test
imul
pop
(bad)
jb
mov
jns
in
inc
xchg
adc
inc
clc
ret
jecxz
test
dec
call
push
movs
mov
test
pop
pop
cmps
in
add
into
dec
int3
icebp
push
mov
gs
lods
fs
cld
xchg
jp
mov
inc
sub
xlat
movs
in
sbb
cmp
out
les
fidiv
pop
xchg
cmp
xor
pop
mov
dec
stos
lods
adc
call
push
fsub
mov
xchg
in
xchg
or
pop
and
movd
sbb
adc
(bad)
dec
push
adc
test
mov
jno
fs
ins
out
push
hlt
imul
test
sbb
or
ret
lock
sbb
pop
mov
and
adc
or
movs
cdq
jmp
dec
out
or
xor
push
imul
add
push
je
int3
aam
out
out
mov
(bad)
loope
pop
pop
pop
rcl
xor
enter
add
mov
mov
adc
idiv
inc
xor
or
lock
retf
jbe
ss
cwde
xchg
(bad)
push
jnp
test
xor
dec
jg
popa
neg
cdq
mov
popf
(bad)
lods
rol
pop
rol
or
mov
and
xor
pop
xchg
daa
leave
(bad)
dec
scas
fisub
ja
cmp
(bad)
mov
add
out
mov
movs
dec
jae
rol
inc
test
hlt
adc
fistp
pop
inc
imul
cmps
add
cli
or
stc
dec
outs
cmp
hlt
and
sbb
xchg
push
and
mov
push
sti
sbb
or
cld
pushf
loope
sbb
xor
(bad)
mov
retf
aam
outs
or
icebp
push
dec
scas
mul
or
into
and
mov
dec
pop
mov
and
repnz
in
cmps
inc
lock
fcom
dec
push
es
pop
xor
jecxz
icebp
adc
push
mov
not
cmp
loop
mov
and
or
repz
jbe
(bad)
ficom
pop
add
ret
aad
inc
jmp
inc
and
mov
and
sub
sbb
xchg
mov
cs
imul
pop
jmp
mov
cmp
pop
pop
dec
xchg
es
mov
add
lahf
shr
stc
cmp
retf
fwait
aas
fidiv
jno
push
fs
loopne
mov
pop
adc
push
repnz
ja
sub
iret
mov
cli
imul
sub
clc
fs
dec
sub
rcl
cdq
pop
and
in
pop
and
inc
sbb
addr16
outs
retf
sub
add
dec
push
sti
inc
jle
je
in
inc
mov
or
in
lea
rcl
test
stc
sub
xor
xor
jbe
and
xchg
test
icebp
(bad)
pop
enter
sub
arpl
lods
dec
clc
out
pop
jae
mov
cdq
je
inc
ror
retf
jg
std
jle
stos
and
xor
xchg
mov
adc
dec
jle
mov
pop
in
push
xchg
cwde
xchg
mov
lock
jge
jle
and
inc
fistp
and
or
pop
lock
inc
push
repz
pusha
jecxz
pop
jne
sub
mov
jne
xor
mov
mov
xlat
shr
jg
(bad)
mov
pop
xchg
sti
jp
sbb
xor
inc
sub
(bad)
mov
dec
xchg
mov
fwait
sbb
jmp
fsubr
push
pop
cmc
xor
aaa
loope
sbb
add
es
out
inc
shl
mov
repnz
out
and
push
(bad)
ss
sbb
ins
jmp
mov
sti
push
pusha
hlt
les
xchg
cli
aas
mul
rol
lea
push
jae
or
mov
pop
not
cwde
jmp
fs
das
mov
xor
pop
push
adc
pop
inc
mov
sub
test
gs
mov
sbb
sbb
into
lea
mov
jne
scas
ffree
in
sub
xor
mov
dec
adc
pushf
sbb
add
sbb
mul
and
pop
cmp
fsub
xchg
sub
bound
pop
and
xchg
movs
dec
or
sub
mov
int
loop
sub
arpl
or
scas
push
loopne
outs
shl
fisub
adc
xchg
or
mov
dec
icebp
icebp
push
scas
cli
pop
xor
fs
push
(bad)
call
or
pop
push
ds
mov
jmp
xor
or
or
leavew
pop
mov
sti
ins
sti
jmp
inc
in
std
out
or
mov
xchg
(bad)
int3
push
mov
arpl
cmps
pop
in
rol
push
aad
push
ret
jnp
inc
lds
fs
sbb
dec
sahf
in
movs
cmp
in
xlat
cld
jno
mov
inc
jns
ins
mov
pop
inc
popf
das
xor
dec
inc
xchg
cli
retf
(bad)
sbb
jl
iret
es
test
mov
mov
pop
frstor
pusha
adc
call
sbb
fadd
icebp
cs
ficomp
rol
push
imul
cmp
stos
dec
retf
cmp
(bad)
movs
xor
rcr
jae
(bad)
aam
cli
in
pop
push
mov
and
fwait
(bad)
icebp
add
xchg
adc
sbb
xchg
jmp
ret
sbb
sbb
xor
nop
inc
sbb
and
jle
scas
mov
arpl
sbb
push
dec
inc
cmp
pop
xchg
push
loopne
mov
pop
fcomip
mov
std
push
mov
gs
lods
mov
imul
imul
lods
mov
jne
adc
adc
jle
xor
xor
mov
or
and
(bad)
stos
jmp
in
in
jno
mov
sbb
data16
jae
xchg
shl
jg
es
(bad)
add
xchg
and
cmps
sbb
repz
push
rcr
enter
pop
fadd
ret
aaa
mov
adc
imul
js
and
mov
sub
(bad)
jmp
lods
cld
xchg
push
retf
push
dec
fmulp
pushf
out
sub
ret
mov
pop
jae
sub
addr16
push
push
pusha
xor
out
jg
mov
dec
gs
push
popa
test
cdq
ficom
sub
out
mov
(bad)
mov
or
outs
and
jno
(bad)
je
jb
repz
iret
std
ins
in
pop
push
mov
xchg
adc
xchg
aad
cld
jb
xchg
jmp
cs
cld
mov
jb
add
cmp
sahf
ins
sbb
sub
call
jae
adc
out
jle
fs
dec
sub
pusha
pop
sbb
jne
ret
push
mov
sbb
(bad)
mov
or
xchg
pop
sahf
xlat
push
cmc
add
fsubr
inc
icebp
jo
jp
adc
out
addr16
jno
outs
pusha
mov
adc
xor
sti
aas
hlt
dec
xor
outs
mov
add
dec
or
jnp
sub
xchg
xor
cmc
mov
or
jecxz
mov
sti
inc
div
push
cmp
sub
lds
out
movs
shl
test
enter
add
cmovns
popf
push
(bad)
arpl
jns
out
aas
dec
lods
stos
push
add
adc
cmp
jne
sbb
xchg
jl
arpl
and
adc
scas
retf
lods
cmp
jle
fild
ror
out
ins
jbe
and
sbb
jae
adc
pop
repz
and
out
iret
pop
sahf
mov
mov
sbb
ret
mov
adc
cdq
add
adc
shl
(bad)
jp
cld
fistp
and
shl
cld
add
xchg
ror
jmp
imul
jecxz
daa
mov
and
dec
push
xor
std
mov
mov
xor
or
dec
ror
push
rcr
jbe
xlat
aam
dec
dec
push
aas
and
add
pusha
out
mov
cdq
sub
add
mov
fnsave
(bad)
cld
pop
cld
out
les
sub
in
ins
fwait
leave
ja
call
cld
and
std
dec
pusha
push
test
or
out
jge
cmps
repz
jnp
pop
push
jecxz
xchg
or
mov
cmp
int3
xchg
add
aam
shr
adc
int3
xchg
mov
mov
dec
cmp
or
push
pop
mov
fs
pop
or
sbb
out
and
sti
fsubp
jmp
rol
push
add
sub
add
xor
sub
inc
retf
xchg
cmp
repz
sub
das
(bad)
mov
adc
push
into
sar
dec
repz
shr
aaa
sbb
add
xchg
in
push
loopne
fwait
pushf
(bad)
and
mov
es
pop
push
jnp
int3
adc
push
cmps
jmp
cmc
leave
mov
(bad)
sar
mov
in
mov
pop
or
int3
cmp
out
out
outs
push
inc
sub
ror
push
pop
inc
jl
pop
mov
lock
push
push
fcmovnu
mov
repnz
cli
(bad)
sbb
ss
jmp
icebp
nop
mov
(bad)
adc
lods
pop
xchg
jecxz
pop
xchg
imul
pop
outs
jp
sbb
ins
pop
jnp
je
sub
hlt
je
jecxz
cmp
mov
scas
daa
mov
(bad)
das
cwde
adc
test
stos
stos
dec
div
stos
jb
sbb
movs
adc
push
push
icebp
(bad)
mov
stos
fcomp
fimul
xchg
sahf
(bad)
sbb
or
gs
dec
aaa
mov
pop
fxam
mov
nop
add
jnp
retf
pop
pop
jle
xchg
jge
inc
ret
addr16
mov
xor
div
mov
or
pop
aam
sahf
mov
pop
mov
imul
cmp
es
and
sbb
jmp
cmp
and
mov
adc
call
xchg
lods
cli
retf
jbe
rcr
mov
sub
fs
in
(bad)
aaa
xor
push
and
(bad)
cld
push
outs
dec
sar
push
fs
cmp
pop
mov
pop
add
dec
mov
dec
sub
xor
mov
clc
dec
shr
mov
push
in
fstp
inc
lock
xchg
mov
arpl
push
not
std
mov
stos
mov
add
adc
xchg
mov
imul
fwait
mov
das
mov
inc
add
xchg
sub
or
and
mov
xor
mov
arpl
fsub
fistp
mov
mov
adc
call
push
pop
mov
shl
jmp
mov
inc
cdq
xchg
or
cmps
sub
dec
fsub
jl
out
test
and
cdq
mov
cwde
and
or
add
test
(bad)
push
addr16
dec
mov
cwde
loop
shl
call
cwde
mov
lahf
inc
in
in
cmp
inc
add
jl
cmp
dec
cmp
icebp
cs
jmp
or
pusha
mov
xor
sub
mov
mov
movs
add
(bad)
fisub
add
in
leave
sbb
xchg
dec
data16
dec
and
jp
push
mov
les
mov
test
in
add
fsub
dec
movs
pop
sub
cmp
pop
fcmovb
fsubp
dec
inc
sub
loope
data16
xlat
pushf
int
cwde
repz
cwde
pop
leave
fcom
faddp
mov
dec
int
repnz
cmp
test
or
test
jo
add
xchg
add
dec
xchg
mov
ror
test
mov
das
out
push
(bad)
jo
cmp
retf
shr
xchg
sub
xchg
push
pusha
jb
push
test
fld
fwait
shl
repz
dec
mov
ds
cmps
jno
pop
push
dec
adc
xchg
xor
fdivr
cmc
jmp
cmc
popa
je
popa
mov
inc
cs
and
adc
lahf
and
out
arpl
cmps
lahf
xchg
add
fistp
repnz
adc
xchg
lds
cmp
out
in
push
and
loop
push
test
cmps
adc
sub
or
cmps
pop
xlat
jg
push
pop
rcr
cmps
lods
pop
inc
jg
call
(bad)
ds
or
jp
clc
sbb
aad
cmps
pop
std
mov
in
repnz
sub
imul
sbb
pop
jnp
sub
xchg
mov
cmp
and
sub
mov
or
test
sub
aaa
(bad)
cmp
leave
sbb
shl
popa
dec
mov
add
push
mov
xchg
pop
dec
and
mov
icebp
xchg
shl
in
mov
jmp
mov
test
call
xchg
fbld
ja
dec
fcomip
lds
mov
in
jg
push
xor
jmp
bound
xor
pop
jne
cmp
mov
add
retf
add
repnz
xor
mov
fimul
movs
sbb
and
mov
(bad)
retf
jbe
in
mov
out
jbe
idiv
xor
pop
daa
xor
push
push
sbb
add
inc
(bad)
cwde
or
add
mov
mov
imul
cli
enter
dec
(bad)
inc
fdiv
stos
call
cmp
cmp
mov
xchg
xor
and
ja
retf
push
movs
shr
hlt
into
sub
adc
sti
mov
pusha
jle
mov
push
mov
fcomi
mov
push
cmp
loop
cs
out
xchg
sar
xor
iret
dec
(bad)
cmp
mov
je
and
cli
hlt
aam
lock
xor
mov
sub
xor
add
cmp
mov
test
pop
sub
ja
test
stos
jecxz
xor
sub
lock
inc
popa
mov
or
in
sub
xlat
xchg
rcl
add
mov
hlt
lahf
push
popf
mov
shl
mul
inc
sti
out
(bad)
pop
scas
mov
pop
cmp
pop
ss
ins
push
retf
dec
in
mov
sbb
adc
movs
pop
cmp
lods
mov
adc
in
mov
imul
loop
lds
mul
push
repnz
loopne
inc
sub
nop
popa
add
push
out
xchg
dec
(bad)
mov
test
nop
mov
or
sbb
or
adc
call
jmp
xor
and
lds
rol
fcmovne
or
adc
(bad)
cmps
movs
out
sbb
xor
inc
(bad)
mov
or
jg
fsubr
push
das
or
jne
fwait
ds
inc
add
mov
xchg
mov
dec
in
sub
iret
mov
pop
rcr
inc
es
das
xor
add
(bad)
(bad)
add
jae
xor
dec
aaa
jp
jle
int
cmp
dec
sub
add
shl
popa
shr
cmp
loopne
imul
add
cmc
push
(bad)
imul
mov
add
mov
xor
inc
sbb
mov
jmp
mov
push
push
lods
push
test
push
fistp
inc
inc
pop
ins
jno
rol
call
pop
lea
es
loopne
in
clc
aas
push
xchg
mov
ror
sti
sbb
shl
hlt
sub
add
cmp
and
mov
das
and
cs
cmp
aaa
xchg
push
test
aam
mov
xchg
cmp
jle
sbb
xor
pop
add
cmps
xchg
jmp
test
scas
test
rcr
inc
jl
ds
std
xor
mov
dec
cwde
popf
mov
xor
mov
lock
rol
adc
adc
out
loop
dec
icebp
inc
jno
or
stc
sub
xlat
(bad)
push
adc
ficomp
push
scas
cs
fbstp
sbb
adc
ret
xor
xchg
mov
je
push
mov
mov
mov
sbb
or
or
add
pop
ins
dec
push
fisub
push
dec
xlat
in
popa
imul
mul
retf
push
ret
add
mov
adc
xchg
(bad)
mov
outs
mov
(bad)
gs
pop
and
in
mov
arpl
mov
out
pop
(bad)
(bad)
pop
sti
ja
es
sub
ja
xor
xor
sar
cmp
jmp
inc
cs
sub
mov
sbb
(bad)
mov
cmps
mul
mov
lds
cmp
mov
sub
aas
into
inc
lock
mov
in
js
das
jnp
push
fist
(bad)
adc
sar
xchg
sub
lds
mov
inc
add
xor
jno
cld
daa
sub
xor
pop
mov
jp
js
test
jno
pop
ffree
movs
inc
add
or
clc
pop
push
in
mov
sahf
mov
mov
int3
pop
shl
cld
outs
cmp
push
ins
cmp
and
xor
jle
cmp
push
movs
inc
push
lock
adc
xchg
mov
ss
cld
cld
mov
adc
lods
(bad)
imul
je
icebp
std
fldenv
adc
sbb
jle
cmp
add
test
mov
mov
(bad)
pop
and
or
rol
das
rcl
out
ins
sub
sbb
clc
iret
mov
sbb
add
push
aam
adc
fwait
cmc
adc
add
fcomp
mov
into
inc
mov
scas
sbb
stos
mov
lds
fs
add
ret
addr16
stos
and
out
fnstenv
pop
push
pop
imul
daa
inc
push
or
pop
adc
mov
fcom
and
pop
sbb
lahf
call
mov
lea
pushw
loopne
vmwrite
call
mov
fstp
inc
out
jns
out
shl
pop
sbb
xor
hlt
cmps
cmp
movs
mov
pusha
mov
jo
sub
push
std
mov
mov
loop
mov
jb
cdq
add
ficom
aad
or
sbb
jb
jno
cmp
mov
dec
mov
out
ss
enter
fdivr
lock
aad
data16
mov
xor
jmp
push
es
add
push
into
and
cmps
add
adc
lods
sahf
push
sub
jnp
inc
pushf
cmc
enter
mov
xchg
in
adc
in
jp
fistp
push
or
adc
push
mov
in
ins
pop
call
add
and
lods
pop
cmp
xchg
rol
xchg
or
cli
jbe
mov
jl
in
and
jno
pop
or
loop
ins
retf
or
mov
cmp
(bad)
pop
outs
ja
mov
or
jmp
inc
or
daa
jno
adc
jmp
and
mov
imul
pop
fidivr
xor
daa
sbb
or
fwait
shl
ret
sti
or
jb
pusha
pop
idiv
sub
cmp
add
adc
sbb
add
push
int
pop
cmp
in
stc
test
loopne
push
xor
add
sub
not
(bad)
push
test
xchg
mov
xor
sbb
not
mov
push
push
jno
stos
sbb
cs
fstp
cmp
pop
(bad)
or
jp
test
mov
cmp
sub
push
call
pop
cmp
push
test
mov
sub
xchg
test
(bad)
lds
hlt
out
xchg
mov
icebp
repz
and
nop
scas
mov
inc
add
push
out
push
push
mov
cli
test
jl
enter
xor
dec
push
sbb
lock
sub
and
adc
test
mov
inc
mov
jl
push
in
or
test
xchg
add
push
mov
mov
bound
push
ds
mov
shl
imul
loop
pop
loop
cld
pop
test
into
ret
sub
pop
cli
lods
clc
inc
in
mov
mov
mov
call
jo
push
dec
mov
frstor
sub
lahf
mov
mov
push
pop
jno
add
shr
call
cmp
xor
ret
pop
inc
scas
repnz
xchg
imul
and
xchg
pop
jmp
cmps
push
clc
scas
jmp
mov
xor
js
pop
push
nop
cmc
test
sub
jne
xchg
js
jecxz
fimul
and
call
dec
cdq
xor
xchg
or
cmp
das
add
in
(bad)
shr
push
dec
les
retf
dec
or
add
scas
pop
jmp
xchg
push
xor
je
out
sahf
adc
sbb
popa
add
xor
and
or
ja
dec
lock
sti
sub
jae
test
sub
adc
rol
xchg
sub
ins
les
mov
ret
push
inc
ins
jo
jg
xchg
cmp
mov
inc
inc
mov
test
loop
mov
xor
inc
mov
xlat
cmps
adc
mov
rcr
or
mov
cmc
jae
in
add
not
or
and
adc
not
test
call
dec
adc
aad
shl
push
(bad)
aad
rol
movs
dec
in
mov
push
push
mov
sbb
mov
cwde
xor
test
mov
stos
es
pop
pop
sbb
push
xchg
repnz
rol
pop
or
daa
repnz
ror
sub
je
mov
js
sar
out
fld
push
leave
jb
adc
inc
cmp
xchg
mov
test
or
push
mov
jmp
or
gs
dec
cmp
cld
movs
cmp
iret
and
pop
call
mov
(bad)
xor
dec
(bad)
repz
sbb
sub
adc
mov
test
adc
mov
push
ds
in
adc
add
pop
mov
fdiv
xor
cmps
mov
jb
sbb
shl
(bad)
mov
lock
xchg
test
sbb
mov
ret
stc
xchg
xchg
sbb
fisttp
(bad)
xor
cdq
hlt
daa
gs
cmp
push
jns
jbe
xchg
mov
sbb
pop
mov
lahf
add
aam
inc
es
in
ret
mov
dec
mov
pusha
adc
push
sub
adc
into
movzx
sahf
push
lock
inc
fwait
or
or
xlat
imul
jno
pop
pop
rcl
iret
(bad)
cmc
aad
iret
mov
jno
repz
push
push
push
push
and
sbb
push
jmp
das
pop
pop
xor
sti
push
push
mov
popa
ja
es
stc
test
and
sbb
xchg
movs
mov
push
mov
(bad)
shl
idiv
fsin
ja
int
jns
cdq
fldcw
stos
test
bswap
push
adc
push
sub
jbe
mov
cmp
sti
scas
rol
loopne
test
inc
jnp
cmp
fbstp
xor
pop
add
pop
mov
pop
adc
push
addr16
cmp
sub
loop
inc
out
pop
mov
mov
xor
rcl
dec
mov
fs
mov
aas
adc
mov
popf
inc
mov
mov
scas
sub
dec
mov
mov
push
cmp
je
push
mul
adc
pusha
dec
push
pop
mov
out
adc
add
sub
mov
mov
xor
and
or
lahf
repnz
in
movs
popa
push
test
aas
fs
cmp
aaa
arpl
mov
stc
push
push
lea
dec
stc
mov
(bad)
test
push
fcmovnu
jg
mov
add
inc
add
pushf
sbb
repz
lahf
leave
cmp
aaa
es
scas
jecxz
adc
cmp
daa
es
rcl
or
inc
mov
pop
cmp
xlat
adc
inc
sub
test
pop
jl
into
pop
add
inc
fyl2xp1
cmp
je
fild
adc
adc
add
cli
mov
dec
cmp
repnz
jl
xchg
add
lods
jns
inc
cmp
push
dec
cmps
cmp
pop
ror
je
mov
xchg
paddusb
sar
test
and
cmp
xor
push
cmps
jp
out
mov
mov
sub
and
movs
push
or
aad
xchg
cmp
stos
xchg
int
es
xor
leave
(bad)
dec
std
adc
hlt
mov
add
jmp
ins
sub
icebp
pop
inc
icebp
and
aam
inc
sbb
inc
xor
mov
jmp
xchg
call
test
enter
ret
mov
push
xchg
pop
and
jnp
outs
or
mov
out
mov
mov
or
pop
mov
and
std
push
xor
and
popf
adc
fisub
in
out
rcl
retf
inc
inc
mov
sub
daa
punpckldq
fistp
shl
into
xlat
movs
sub
jns
imul
(bad)
mov
pop
dec
cmp
add
(bad)
mov
in
jmp
les
fld
pop
adc
inc
ror
loop
out
not
jecxz
push
inc
add
xor
ret
jecxz
mov
bound
js
je
stc
sbb
popf
lea
fcomp
lock
mov
(bad)
sub
and
jmp
mov
inc
clc
int
dec
dec
pop
retf
nop
pop
stos
shl
jg
lea
push
loop
or
sar
pop
xchg
inc
mov
lea
mov
add
pop
mov
into
das
sbb
in
aaa
in
and
pusha
sbb
outs
fs
jg
inc
mov
dec
push
fwait
mov
stos
add
inc
loopne
sti
sub
retf
test
cmps
(bad)
out
push
mov
fnstsw
sti
mov
mov
iret
ins
jmp
lds
aaa
mov
sbb
mov
jne
add
imul
shl
xchg
sbb
push
jns
test
out
xor
xrelease
cmp
gs
ins
in
rcr
mov
loopne
outs
inc
sahf
mov
dec
fdiv
mov
cmp
sub
aas
add
fiadd
push
inc
es
mov
and
mov
mov
sub
fisttp
jp
(bad)
loopne
and
xor
(bad)
repnz
push
dec
iret
ds
xor
adc
in
sbb
loope
aad
sbb
lahf
sub
mov
jge
jo
outs
cli
pop
inc
sahf
mov
push
sar
xchg
xor
inc
mov
std
loopne
out
inc
mov
mov
repz
test
fcom
xchg
fsubrp
cmps
neg
cmp
xor
fisttp
cmps
out
xor
rol
and
fild
enter
mov
push
outs
xchg
imul
mov
sbb
mov
call
clc
xchg
call
sub
inc
sti
sub
es
fisubr
fst
ret
xor
sahf
fadd
xor
fstp
outs
jno
imul
adc
or
push
mov
or
and
pop
pop
gs
cmc
mov
lea
jb
ins
fucomp
jo
mov
dec
adc
aad
add
mov
mov
mov
mov
js
mov
xchg
movs
mov
mov
(bad)
push
es
and
es
lock
sub
rol
outs
test
xor
xor
mov
cdq
jmp
mov
pop
enter
int3
cmp
(bad)
ficomp
cwde
pop
imul
test
mov
sub
jae
dec
fidiv
dec
or
inc
jae
mov
sbb
cmc
stos
iret
xchg
arpl
es
jne
cmps
pop
push
sub
mov
cmps
inc
and
shl
inc
mov
add
jmp
sbb
loop
popa
popa
loop
jno
or
retf
mov
xor
mov
jecxz
sbb
or
mov
and
cmp
std
inc
pop
movs
and
arpl
pop
fstp
dec
in
outs
and
xor
adc
fwait
xchg
jle
xchg
sub
add
ror
mov
(bad)
in
inc
cli
inc
add
sbb
imul
push
mov
dec
test
(bad)
push
cwde
sbb
dec
push
mov
jno
dec
popa
cmp
lock
fst
rol
mov
xor
xor
adc
and
jmp
push
sbb
xchg
inc
jmp
adc
adc
fwait
push
xor
jecxz
jle
and
mov
icebp
or
je
dec
sub
pop
test
mov
ins
dec
ja
add
push
mov
push
jmp
inc
dec
ret
push
or
aam
outs
mov
or
aad
xchg
add
loop
pop
call
inc
shl
xchg
stos
scas
cmp
fdivr
or
shr
dec
jmp
jmp
rol
(bad)
fs
dec
inc
retf
adc
adc
sbb
pusha
inc
retf
imul
int
ss
out
fdivr
xchg
std
setp
jmp
adc
lods
mov
call
ins
js
pop
mov
daa
xor
pop
fs
cwde
rol
stos
outs
sub
inc
loop
in
jo
push
xor
and
outs
dec
xor
jge
pop
popa
and
ins
and
shr
dec
adc
lods
mov
lods
inc
push
pop
retf
daa
pop
jmp
jg
outs
nop
mov
fcomp
mov
rcr
jge
cs
movs
retf
lock
jbe
add
imul
in
jle
xchg
xchg
in
scas
xchg
xchg
cmp
faddp
mov
stos
add
pop
sub
add
fild
loopne
in
add
cmc
test
push
jns
adc
mov
push
mov
inc
xchg
jmp
pushf
mov
jns
inc
mov
aas
pusha
ss
out
rcr
adc
jno
cmp
daa
js
test
add
add
mov
ror
test
test
sbb
inc
sbb
mov
test
shl
xchg
jno
and
xchg
js
dec
adc
mov
sub
dec
xchg
sti
in
mov
fdivrp
pop
out
xor
scas
push
inc
xor
pop
inc
aad
xchg
into
loope
add
shl
(bad)
push
jnp
mov
fadd
mov
rcr
jbe
inc
xchg
dec
jl
cmp
(bad)
inc
push
fistp
xchg
loope
pop
sub
push
or
xchg
mov
cmp
js
pop
adc
adc
fdivr
mov
test
adc
test
rcl
iret
fdivr
or
mov
and
sbb
cmp
mov
aad
shld
xchg
jne
sahf
pop
mov
icebp
lods
aas
jne
mov
in
outs
icebp
xor
jb
add
stos
cmp
fwait
sub
push
nop
out
xlat
mov
and
inc
aas
loopne
outs
add
stos
cmp
dec
jnp
add
fwait
lahf
push
sbb
xor
ss
push
aad
popf
aas
cmp
aam
js
mov
outs
movs
es
rcr
cmp
push
outs
adc
dec
call
cli
xor
push
pop
add
sub
jle
xor
daa
xchg
sbb
xlat
cmp
(bad)
mov
cwde
jp
inc
in
fsubr
stos
fidiv
add
xchg
mov
sub
jle
hlt
scas
sub
jae
imul
or
or
add
pop
mov
or
pusha
pusha
lahf
inc
and
dec
push
in
imul
mov
ret
stos
xchg
loope
hlt
ror
je
nop
shl
data16
sbb
push
mov
stos
sar
mov
mov
push
jg
jno
test
daa
mov
mov
mov
push
or
cmp
dec
adc
jne
mov
repnz
adc
int
mov
pop
jae
pop
sub
aas
(bad)
push
rcr
sahf
pop
test
add
xor
(bad)
int
sub
mov
add
push
pop
ret
imul
cld
gs
jb
inc
xchg
sbb
dec
xor
sbb
test
add
push
sub
fwait
pop
cmc
out
and
adc
ja
daa
adc
cwde
daa
push
sbb
pushf
out
sub
ret
push
xor
jmp
repnz
xchg
xor
iret
in
icebp
and
and
stc
xchg
inc
adc
test
mov
je
cdq
xchg
lock
fwait
aaa
jl
mov
xor
xor
jecxz
fimul
loop
imul
sub
sbb
inc
call
mov
cs
push
fiadd
xchg
sbb
cs
dec
mov
cdq
dec
dec
bound
xor
xlat
add
mov
mov
or
hlt
xlat
mov
xchg
out
stos
and
cmp
mov
cmps
jle
pop
je
jbe
movs
mov
push
dec
mov
lods
push
into
mov
mov
sbb
xor
in
paddusw
cmp
or
addr16
shl
push
and
push
leave
push
loop
pop
cmc
sbb
cli
fs
cmp
pop
cmp
ds
repnz
jae
mov
out
push
repnz
jb
mov
pushf
ret
dec
cwde
icebp
stos
pop
cwde
push
ja
xor
test
mov
repz
mov
cmp
rcl
lods
dec
mov
pop
jecxz
or
pop
pop
lods
dec
shl
push
(bad)
cld
mov
xor
stc
pop
xor
jp
ins
pop
lods
mov
lahf
rcl
je
mov
rdmsr
mov
push
sub
adc
xchg
mov
fisubr
scas
sub
xchg
sub
xchg
repnz
icebp
dec
mov
adc
dec
rcl
cmps
xor
jns
lods
rcr
push
mov
ret
inc
lock
push
stos
bound
aaa
dec
jle
leave
jp
and
pushf
lods
xor
ds
jl
cmp
or
popa
mov
jge
repnz
cmps
mov
ins
xchg
xor
nop
loop
ffreep
repz
lods
ficomp
jmp
push
jne
pop
cli
in
push
pop
xor
xor
mov
addr16
enter
sub
add
or
inc
data16
shr
jecxz
push
xchg
or
xor
imul
movups
adc
in
pop
arpl
popa
ror
pop
cmp
scas
push
xchg
adc
js
jnp
pop
mov
scas
push
popa
dec
pop
das
iret
mov
pop
je
dec
jle
dec
mov
retf
in
mov
je
out
pop
pop
fst
stos
data16
mov
mov
inc
je
or
sub
test
xor
mov
pop
movs
jb
cmp
jno
and
or
cdq
adc
rcl
pop
sbb
inc
mov
mov
je
adc
jno
jmp
adc
or
in
les
pop
xchg
xor
jmp
xchg
sub
inc
dec
push
pop
ret
es
in
or
jge
(bad)
mov
jne
sbb
cmps
adc
sub
js
push
jecxz
or
xchg
dec
sahf
and
sub
(bad)
clc
cs
or
pop
adc
xor
scas
jecxz
dec
push
xor
sub
mov
test
ficomp
sub
adc
test
psllw
retf
pop
xchg
call
fnstenv
test
sub
ficomp
mov
push
or
push
or
adc
fcom
mov
ins
lea
pop
push
cmp
mov
(bad)
jae
sbb
cmp
cmc
push
and
out
retf
add
stc
and
nop
or
sbb
rcr
cmp
push
add
mov
jb
(bad)
sub
xchg
leave
adc
mov
lods
mov
sbb
(bad)
(bad)
loope
mov
cmps
xchg
xchg
dec
shl
loopne
mov
push
and
je
cwde
dec
adc
pusha
gs
add
or
sub
push
ds
inc
sbb
push
ficomp
mov
jae
aam
or
xor
inc
loop
add
add
cwde
and
int
inc
fldenv
clc
adc
mov
fnstcw
ret
nop
pop
mov
movq
sub
sahf
ffreep
sti
mov
in
pop
or
jbe
mov
cmc
jle
repnz
sub
sub
sub
jle
adc
shl
js
mov
jmp
push
ss
inc
(bad)
retf
adc
not
lods
es
xor
add
mov
popf
xchg
dec
adc
and
out
and
push
and
in
inc
(bad)
shr
inc
(bad)
jae
sub
lea
mov
test
jp
cli
cwde
retf
loop
iret
push
mov
mov
retf
popa
fcom
cmp
clc
lahf
call
test
sub
or
mov
sahf
mul
adc
jl
gs
inc
push
mov
cwde
out
xlat
shr
mov
mov
imul
out
adc
(bad)
bound
scas
pop
jp
fadd
std
jmp
(bad)
(bad)
inc
lods
pop
leave
adc
sbb
jne
sahf
sub
(bad)
outs
dec
sub
inc
test
jl
retf
or
add
pop
add
int
sbb
stc
adc
jbe
mov
jo
das
sbb
jbe
sbb
fcomp
push
push
inc
push
pop
sbb
mov
jne
push
cmc
call
xchg
fild
push
stos
inc
popa
mov
out
cdq
adc
xchg
in
ret
mov
rol
sbb
loope
jmp
fisub
xchg
aas
cmp
mov
jp
daa
jl
pushf
pop
cmp
xor
lds
inc
mov
or
add
sbb
es
push
fcomp
mov
jnp
cmps
scas
mov
xchg
sub
fdiv
shld
sbb
add
pop
add
inc
push
jg
pop
dec
popa
lods
es
pop
daa
ja
js
hlt
adc
xchg
inc
mov
xor
in
repnz
jae
adc
add
lea
shl
(bad)
ins
mov
jecxz
aam
add
or
mov
push
or
int3
mov
or
mov
pop
mov
jmp
fmul
lahf
add
xchg
cmp
in
pop
movs
ja
cmp
xor
jne
out
mov
pop
shr
push
mov
leave
arpl
retf
mov
inc
retf
dec
xchg
add
xchg
lods
jae
xchg
mov
retf
push
sbb
icebp
cmp
ins
gs
subps
pop
or
mov
mov
mov
dec
dec
int3
(bad)
or
shr
sub
mov
jnp
popa
(bad)
addr16
out
stos
sub
jecxz
jle
jg
sbb
push
dec
out
pop
mov
lahf
pop
fmulp
mov
mov
ds
int
cmp
cmc
retf
dec
popf
push
cmp
stos
rcl
inc
or
xchg
test
mov
jg
(bad)
cdq
push
add
call
pop
addr16
dec
mov
push
mov
paddq
div
mov
cmp
jno
xor
mul
mov
inc
pop
mov
xchg
test
gs
and
in
lods
sbb
jae
rcr
adc
cmc
and
pop
fbstp
daa
mov
out
jbe
rcr
pop
and
mov
(bad)
popf
mov
push
mov
pop
nop
(bad)
sti
arpl
bound
lds
out
ins
ret
cs
push
(bad)
out
push
ins
mov
or
inc
mov
fcmovnb
cdq
pop
add
popf
and
pop
pop
or
test
cld
sar
(bad)
neg
gs
fdiv
mov
mov
dec
or
test
xor
adc
mov
(bad)
in
imul
movs
push
xchg
and
je
shl
add
push
mov
dec
sub
repnz
in
add
cmps
pop
push
movs
outs
xchg
test
fistp
loopne
daa
pop
cmps
xor
call
cli
inc
or
cld
cdq
adc
pop
sub
call
test
sqrtps
xchg
(bad)
xchg
push
push
dec
hlt
or
mov
fidivr
rcl
push
test
jmp
cmc
daa
push
rol
ror
jmp
push
add
dec
inc
fcmovb
outs
nop
adc
cmp
and
sub
scas
fisttp
mov
in
jp
sub
fsub
dec
adc
add
inc
cmc
repnz
inc
in
sti
push
add
and
mov
ret
sub
lock
sbb
dec
jp
mov
rep
mov
sub
ss
xor
outs
inc
cmps
fs
dec
lods
xchg
push
cdq
imul
outs
imul
pop
fs
xchg
xchg
jne
ins
jle
retf
in
xchg
fimul
jecxz
push
cmp
mov
push
fiadd
mov
and
sbb
pusha
stos
inc
mov
js
sahf
inc
xor
dec
nop
push
sub
inc
or
lods
in
sbb
out
into
pushf
mov
push
arpl
aas
gs
mov
mov
adc
adc
or
mov
js
add
sbb
cli
mov
jge
fnstcw
cld
pop
(bad)
rcl
out
mov
outs
sbb
retf
jnp
dec
push
pop
dec
cmc
xchg
pause
sub
fdivrp
and
mov
jno
jb
cs
mov
lods
ja
in
adc
push
mov
push
inc
shl
jle
xchg
mov
arpl
lods
jl
mov
mov
movd
ss
jle
ret
std
loopne
adc
lea
adc
push
sub
push
cmps
out
jmp
xchg
add
in
and
jb
inc
mov
scas
sbb
and
rol
xchg
dec
je
icebp
push
cs
loopne
dec
(bad)
or
pop
mov
repz
sub
inc
fdivr
int3
sub
pop
mov
push
in
fs
xor
cmp
sub
sub
xor
pop
addr16
sub
cmps
add
mov
mov
ss
gs
and
sbb
arpl
retf
jp
ret
cwde
dec
adc
data16
sbb
in
in
lahf
adc
mov
imul
mov
(bad)
mov
push
fdivr
add
adc
cdq
cdq
cpuid
lods
cmp
cmp
dec
mov
mov
jp
mov
pop
jmp
mov
jmp
mov
inc
adc
pop
xchg
aam
fnstcw
adc
(bad)
sub
call
jmp
fs
fimul
jl
push
enter
xchg
inc
es
sbb
sbb
aaa
inc
add
push
bound
cwde
cs
je
sub
in
frstor
sar
test
jge
(bad)
mov
mov
mov
push
test
or
push
inc
push
test
aam
adc
fsubr
xchg
mov
test
pop
popa
cmp
(bad)
shl
dec
add
jae
xchg
mov
xlat
adc
jl
xlat
in
sbb
jge
(bad)
xor
aas
cli
sbb
xchg
jg
data16
push
std
cmp
xor
mov
in
adc
pop
mov
sbb
xchg
outs
inc
fsubr
je
pop
hlt
xchg
std
sub
mov
mov
mov
sub
in
shl
sti
inc
cmp
jb
inc
xchg
repnz
sub
popa
xor
or
dec
mov
xchg
mov
js
mov
(bad)
sub
adc
bound
in
mov
jo
jnp
jno
xchg
shl
cmp
inc
icebp
xor
add
pusha
jbe
ins
pushf
enter
mov
dec
nop
mov
stos
push
sbb
mov
mov
or
cmp
dec
scas
out
xchg
daa
pop
xchg
or
pushf
xchg
or
xchg
xchg
sub
les
lock
pushf
xor
in
dec
cmp
aad
push
jl
cmc
adc
mov
xchg
mov
fidivr
add
add
pop
pop
test
cs
jl
imul
mov
mov
inc
jae
sub
fild
lods
movs
pop
push
aaa
movs
mov
sbb
iret
dec
js
dec
dec
mov
sti
fldcw
nop
adc
lahf
push
popf
ins
jp
(bad)
hlt
call
add
sub
cmps
mov
js
xchg
jg
stos
cmps
and
(bad)
ds
movs
popf
add
push
outs
jecxz
lock
pop
mov
aas
aad
mov
pop
xor
sbb
dec
pop
xor
xor
jmp
(bad)
adc
(bad)
sub
dec
es
test
jns
dec
movs
jge
data16
call
ja
pop
add
cmp
jns
push
or
retf
lahf
cmp
daa
xchg
mov
push
ins
dec
adc
sub
cmp
mov
pop
sbb
and
call
push
pop
inc
leave
(bad)
out
inc
(bad)
(bad)
fwait
lock
cs
jb
sbb
test
mov
lds
inc
stc
rol
push
push
sbb
icebp
xchg
enter
fmul
ins
call
sub
ret
ja
or
mov
ss
mov
inc
or
sbb
cwde
out
xchg
bound
or
cdq
push
jns
shl
sbb
adc
(bad)
cmp
push
ret
dec
je
xchg
or
das
fwait
jl
test
lds
stos
retf
xchg
or
lock
cmps
(bad)
inc
lods
push
ins
out
pop
jle
out
jle
xchg
add
cmp
and
pop
imul
repnz
add
aam
jno
sub
enter
and
xor
inc
call
addr16
lock
sbb
sub
push
pushf
cmp
ja
adc
loope
or
les
fstp
or
mov
add
imul
shl
cli
jp
mov
or
jmp
(bad)
fnstcw
jle
in
arpl
pop
sbb
pop
hlt
es
mov
sub
cmc
lock
jbe
xor
jo
mov
ss
mov
push
(bad)
lods
inc
xor
jecxz
jno
not
movs
push
rcr
cmp
cs
je
xchg
(bad)
cmc
inc
sbb
in
push
rcl
push
jmp
push
daa
jne
rcr
or
add
in
movs
sbb
loope
sub
lods
leave
int3
ret
or
jmp
inc
mov
sahf
dec
out
rcl
or
hlt
shl
ret
es
scas
shl
out
mov
pop
jnp
in
ins
push
cmp
add
loope
clc
sub
stc
mov
cwde
(bad)
sub
das
iret
mov
mov
mov
cdq
jle
shl
add
jle
mov
adc
in
js
pop
or
add
jge
jl
lods
out
shr
cmps
mov
movs
sub
movs
fidiv
push
mov
push
sbb
jl
cmc
push
cmp
arpl
sbb
popf
push
aam
(bad)
or
fucomp
sub
clc
xchg
cdq
dec
jge
jecxz
fistp
fiadd
stc
repnz
call
fst
enter
mov
aad
stc
call
cmp
xchg
popf
loope
in
inc
mov
pop
dec
lds
pop
aam
fisttp
(bad)
les
mov
cmc
mov
out
adc
or
mov
pushf
cmp
mov
dec
movs
cdq
les
es
pop
jle
aas
push
iret
sub
and
popa
sbb
mov
movs
repz
ins
dec
js
int
xchg
repz
outs
adc
inc
lds
add
sub
jge
in
je
(bad)
jp
jb
dec
mov
sbb
ficomp
lea
add
mov
lds
setl
cli
std
inc
mov
dec
test
rol
cmp
popf
arpl
or
or
shl
fwait
sub
loope
pop
fs
test
das
ds
mov
cmp
sbb
jae
test
movs
les
sbb
pop
test
stc
jecxz
mov
outs
jmp
shl
aas
xchg
push
xor
xor
sbb
fcom
rol
adc
cmc
push
repz
adc
mov
jmp
or
jle
jecxz
mov
cmp
pop
lods
push
es
nop
pushf
sbb
sub
push
retf
mov
in
call
xchg
pop
inc
mov
sub
cmp
and
or
lds
cmp
repnz
into
rcl
sahf
and
dec
jg
cmp
outs
popa
shl
inc
dec
xor
das
jl
cwde
ins
fidivr
daa
xchg
ret
xchg
sub
enter
movs
jmp
sahf
push
push
hlt
sub
daa
push
inc
and
inc
xchg
jge
push
sub
xchg
aam
fcomp
xchg
inc
inc
lods
cmp
(bad)
(bad)
cmp
mov
ins
add
inc
push
in
iret
mov
stos
bswap
sbb
jne
loop
adc
into
inc
and
out
jb
adc
jne
jbe
adc
std
add
dec
lock
lods
jecxz
scas
push
mov
add
popa
mov
rcr
sub
lock
jb
in
repnz
mov
mov
xor
das
ret
inc
imul
in
popa
clc
sub
mov
outs
jno
jmp
mov
popa
push
cmp
mov
inc
cmp
jp
and
adc
es
sar
adc
push
mov
(bad)
es
jns
cmp
adc
scas
push
cdq
cmp
add
jne
push
dec
mov
xchg
add
cmp
and
xor
ins
out
out
jne
movs
mov
sub
xor
xchg
rcr
ds
add
xchg
xor
int
push
xor
into
jns
mov
pop
int
add
push
and
adc
xchg
pop
mov
cmp
int
outs
in
stc
mov
and
dec
jp
std
push
pop
fisttp
jne
scas
mov
mov
cmp
xchg
xchg
xor
ds
inc
popa
clc
cs
and
xor
push
push
jl
(bad)
jge
inc
popf
(bad)
mov
jno
lock
out
cmp
es
mov
stc
mov
pop
sub
push
cmps
dec
cmps
sbb
adc
or
xchg
sbb
bound
clc
push
and
pusha
jecxz
dec
xor
and
add
cwde
(bad)
leave
aas
mov
or
out
mov
xchg
sub
cld
sub
mov
push
mov
ds
inc
cmp
xlat
adc
lea
lods
movs
mov
test
mov
sahf
les
lahf
div
cmps
xor
out
sub
jne
xchg
ins
out
or
in
or
pop
mov
mov
hlt
not
fnstenv
or
(bad)
xchg
pop
das
xchg
jnp
fild
les
cmp
popf
sub
out
out
inc
rcr
(bad)
jmp
retf
xor
mov
sti
or
push
jae
out
mov
int3
sbb
in
mov
ins
mov
inc
push
cmp
sbb
add
cmp
bound
mov
add
std
push
pop
icebp
popf
pop
test
or
or
and
movs
mul
cwde
test
inc
lock
lea
ror
jae
jmp
jb
mov
inc
or
je
les
test
xchg
xchg
adc
xor
cld
add
call
xor
mov
mov
dec
inc
sub
iret
fdivr
lahf
fwait
mov
inc
mov
mov
push
fs
mov
movs
movs
out
and
daa
mov
mov
xchg
out
jae
in
adc
data16
dec
pop
rol
ds
inc
and
aam
cmp
ss
xchg
aas
adc
mov
push
ret
fucom
test
rcl
lods
add
int3
jl
std
xrelease
shld
les
movs
push
int3
pop
aad
pusha
cmc
jae
mov
(bad)
(bad)
test
retf
mov
imul
test
cmp
movs
fild
adc
inc
imul
mov
cwde
xchg
xchg
ret
push
jnp
dec
ins
push
fisttp
cwde
cmp
hlt
scas
fsubr
neg
repnz
rcr
pop
mov
dec
dec
xor
shr
sbb
mov
mov
cmp
xchg
fdivr
mov
dec
push
inc
mov
mov
aad
in
int
adc
xor
das
sub
loopne
fsub
mov
jmp
ins
dec
add
ret
ja
mov
test
jg
adc
xor
out
xor
mov
jecxz
mov
bound
and
sub
pusha
imul
inc
xchg
push
cmp
jmp
push
jno
pop
jp
ins
data16
jb
mul
movs
xchg
pusha
xchg
imul
and
push
mov
cmp
jno
bound
xchg
mov
ja
cmp
loope
je
cli
pop
and
cmp
test
cld
jle
ins
xlat
xlat
fnstcw
fnsave
sub
and
iret
xor
imul
rcr
sbb
xchg
inc
or
std
call
push
js
mov
loope
les
push
jg
lock
pop
cmps
fwait
or
add
sbb
pop
retf
mov
nop
jmp
dec
add
cmp
ret
std
push
ss
enter
lahf
xchg
adc
mov
fisttp
fdivr
sub
fldenv
dec
das
popa
call
je
sub
mov
mov
add
mov
loope
jmp
jbe
fnstcw
cwde
sub
adc
mov
lahf
test
leave
imul
test
rcr
or
lea
mov
pop
inc
push
out
xchg
into
dec
retf
push
(bad)
lods
push
in
lahf
xor
lods
push
sbb
ret
add
ds
dec
mov
imul
inc
outs
adc
aaa
mov
dec
pop
cmps
ja
imul
cmp
cmc
(bad)
fbld
add
jmp
cmp
arpl
inc
retf
mov
arpl
push
adc
xchg
fs
or
xor
fisubr
mov
or
idiv
jge
push
add
push
(bad)
(bad)
push
push
cs
xchg
jne
mov
cmp
mov
je
ins
mov
add
scas
dec
sub
push
fisub
fwait
sahf
loope
ss
(bad)
push
test
and
ins
sbb
mov
fild
aas
xchg
pop
jecxz
aas
adc
jecxz
jmp
div
outs
enter
xchg
mov
and
movs
jl
loopne
or
add
call
add
inc
cmc
leave
and
nop
xchg
mul
retf
pushf
loop
mov
jo
ret
mov
or
out
jnp
mov
int3
(bad)
sub
aam
jae
cs
push
outs
mov
popa
jno
adc
js
xchg
leave
add
aad
fwait
outs
sub
push
icebp
cmp
or
mov
imul
mov
movs
cmp
or
out
pop
pop
jb
jle
pop
jbe
jp
mov
mov
pop
imul
add
cmp
pop
push
inc
inc
push
int
jle
cmps
ret
push
dec
dec
dec
ss
out
xchg
xchg
movs
inc
jo
mov
push
mov
rcl
push
stc
push
pop
neg
xor
pop
mov
(bad)
loop
jae
dec
mov
jp
add
jp
or
adc
dec
cli
cli
stos
das
dec
gs
out
adc
pop
cwde
fwait
scas
pop
inc
dec
movs
jecxz
mov
scas
jmp
retf
fild
inc
loopne
cwde
nop
inc
ins
and
bound
jno
push
bnd
mov
test
test
ja
retf
mov
xchg
mov
fild
mov
pop
cs
lods
std
ret
inc
mov
(bad)
(bad)
scas
sub
cdq
rol
add
js
pop
add
xchg
in
imul
xor
push
aam
cmp
sbb
fimul
inc
(bad)
retf
sahf
je
sub
inc
or
mov
aaa
push
xlat
push
daa
movs
sub
(bad)
int
inc
fistp
dec
(bad)
dec
sbb
sahf
and
cmp
scas
cmp
mov
loop
vandnps
jno
shl
ret
fbld
js
mov
iret
les
je
cmc
pop
jp
xor
repz
inc
jb
jno
cmc
rol
sbb
jmp
inc
(bad)
pop
jmp
pop
call
hlt
mov
add
popf
(bad)
pop
inc
lods
lods
mov
data16
jmp
push
pop
jae
sar
cmp
loopne
xor
pop
ins
data16
mov
leave
mov
(bad)
ins
sti
out
xchg
aam
sub
loope
and
out
sub
mov
stc
fbld
retf
push
dec
mov
stos
outs
scas
mov
scas
(bad)
aas
mov
mov
call
jo
xchg
pop
hlt
(bad)
movs
sti
lods
mov
mov
jecxz
sbb
mov
dec
movs
test
push
or
cmp
push
les
inc
jecxz
pop
jl
or
and
sbb
inc
leave
jmp
mov
pop
sbb
and
cmc
das
pusha
daa
call
jmp
pushf
mov
xchg
ins
and
sub
sbb
std
add
and
cwde
mov
in
test
in
int3
push
sti
jb
and
dec
(bad)
xchg
ds
pop
popa
sbb
add
add
mov
inc
dec
test
(bad)
jmp
imul
fidiv
fistp
aas
shl
push
rol
aas
push
mov
adc
mov
adc
pop
inc
sub
push
cmp
stc
sbb
jp
jo
push
sub
and
(bad)
hlt
jl
jg
mov
mov
dec
or
xor
inc
ror
or
cli
ds
arpl
pop
push
inc
dec
lea
add
push
test
aad
push
cmp
(bad)
loopne
xchg
xor
sar
movs
stc
pop
ins
addr16
xor
inc
sub
sar
fcomp
push
jbe
jmp
imul
cmps
xchg
ins
cwde
sub
and
sbb
and
jne
mov
and
or
cmp
pop
mov
fbld
test
into
or
das
fst
sub
int3
push
dec
cdq
or
iret
xchg
sub
or
aam
mov
call
xchg
cld
arpl
xchg
xchg
xchg
inc
mov
leave
cmp
ss
adc
out
adc
xchg
out
push
and
addr16
cmp
pop
std
push
jmp
jmp
pop
lock
or
add
shl
inc
dec
add
add
jne
addr16
rcl
loope
cmp
mov
stc
mov
jae
jno
mov
xlat
and
sub
dec
je
loopne
aas
iret
pop
dec
mov
ret
adc
cmps
push
cld
test
or
and
adc
bnd
sub
icebp
jbe
inc
fimul
fwait
aaa
add
mov
adc
pop
data16
rep
jne
xchg
push
imul
dec
lock
(bad)
mov
dec
in
push
mov
hlt
clc
clc
icebp
ror
inc
lock
inc
sar
push
rol
push
jae
popa
mov
ds
inc
cmp
inc
pop
xor
aad
and
popf
mov
repz
lods
push
enter
(bad)
cmps
sub
dec
or
movs
mov
xor
aas
inc
jns
and
sbb
imul
fld
aas
xchg
sti
lods
dec
retf
push
cmp
add
clc
cmp
mov
xchg
test
sbb
cmp
aad
sub
pop
or
cld
or
leave
stc
inc
cdq
add
fs
cmp
loop
out
sub
inc
xlat
dec
popf
add
aad
xor
scas
fimul
xor
fsub
adc
pushf
(bad)
hlt
lahf
in
xor
test
popf
jp
in
push
or
dec
xchg
dec
js
adc
mov
pop
movs
daa
sbb
call
and
mov
adc
aaa
call
xor
shr
scas
sub
popa
(bad)
das
clc
(bad)
sub
jle
mov
push
push
sub
mov
xor
shr
and
pop
inc
add
jle
xor
mov
out
sbb
mov
cmp
and
or
xor
ror
(bad)
out
sbb
hlt
fdiv
xor
cmc
add
or
mov
cmp
(bad)
mov
push
sub
xchg
sar
out
rcl
sbb
xchg
inc
test
retf
out
sub
pop
mov
retf
repnz
sbb
xchg
add
test
cs
retf
aaa
je
es
sahf
ret
mov
data16
pop
and
popa
adc
xchg
pop
xchg
inc
out
ja
shl
dec
cmp
cmp
or
push
loope
cwde
in
scas
or
std
cmp
jae
imul
mov
cmc
lea
loop
(bad)
mov
ret
es
mov
jne
es
push
sub
pop
(bad)
lods
inc
stc
push
and
xchg
xor
mov
mov
cmp
out
in
sbb
jg
retf
mov
js
scas
sub
mov
mov
cmc
(bad)
nop
pusha
cwde
xchg
push
adc
pop
arpl
popa
jl
jp
inc
pop
sbb
lahf
cli
cmc
add
add
xor
inc
mov
retf
xchg
repnz
scas
aaa
and
add
pop
leave
sbb
mov
jo
sub
enter
dec
sti
ins
cmp
popf
pop
mov
jae
sahf
lds
imul
ins
arpl
cli
mov
jbe
mov
inc
xor
test
into
lea
inc
adc
pop
call
push
ja
push
xchg
mov
adc
xor
rol
jle
daa
jmp
jecxz
leave
pop
inc
push
add
dec
dec
inc
pop
repnz
(bad)
cmps
aad
xor
push
mov
xchg
test
fs
fsub
retf
(bad)
adc
pop
pop
push
dec
push
(bad)
mov
loopne
xor
sub
push
scas
xchg
dec
xchg
dec
ins
les
out
and
cmps
mov
je
lds
ds
push
cmp
adc
xchg
mov
or
ss
pushf
cmp
aam
pop
inc
pop
stc
call
jmp
adc
test
inc
shl
mov
xchg
add
gs
and
sub
aaa
mov
or
inc
scas
xchg
xchg
gs
arpl
cmp
jmp
xchg
adc
pop
repnz
call
xor
dec
enter
test
retf
pusha
mov
outs
mov
jmp
adc
dec
add
dec
and
cmp
repnz
and
jbe
aaa
push
sub
xchg
fst
mov
push
and
jmp
fnsave
out
jno
retf
aam
ucomiss
inc
jge
pop
cmp
mov
cld
retf
sub
push
cli
sbb
mov
adc
inc
outs
push
loopne
dec
or
jne
sub
data16
loope
ja
lods
jmp
mov
fldenv
mov
pop
mov
or
mov
neg
xor
dec
mov
add
sbb
push
mov
mov
addr16
cli
push
aad
add
adc
inc
or
add
jg
int
rcl
retf
in
xor
jecxz
add
sbb
or
sar
add
adc
and
pop
cmp
adc
mov
(bad)
jns
xor
mov
mov
push
data16
cmps
xor
or
jecxz
cmp
xchg
bound
jecxz
mov
outs
jecxz
aas
fmul
jg
sub
inc
inc
jle
mov
ins
xor
idiv
adc
xchg
xchg
lea
popa
enter
sub
adc
ds
and
and
push
(bad)
xchg
(bad)
lds
ret
xchg
fisub
xor
dec
mov
jo
repz
js
leave
in
inc
xchg
repnz
ret
(bad)
aaa
stc
xchg
sbb
push
out
retf
test
lods
dec
mov
lea
out
sbb
aaa
jns
xor
ins
adc
mov
sub
jno
data16
fcom
cmp
pop
xchg
add
outs
mov
rol
adc
sub
test
add
int3
outs
sub
(bad)
movs
mov
lods
and
(bad)
stc
test
mov
imul
mov
mov
ret
pop
rol
fdivr
rcl
sub
pushf
jmp
xchg
and
push
(bad)
fnstenv
ss
mov
out
push
sbb
inc
adc
sar
aam
fmul
jb
lahf
cli
das
stos
(bad)
gs
add
pushf
(bad)
mov
out
xor
addr16
ja
in
mov
std
je
(bad)
mov
test
les
cmp
(bad)
aaa
call
cmp
and
rcr
inc
adc
sbb
sub
js
mov
sub
xchg
repz
cmps
mov
mov
sar
pop
add
or
mov
out
pop
xchg
push
adc
ror
mov
jmp
jecxz
inc
xchg
call
daa
dec
fldenv
mov
pop
mov
retf
fld
sub
outs
popf
hlt
sbb
ins
xchg
fsub
push
add
add
inc
clc
or
aaa
les
and
mov
mov
mov
mov
or
add
add
add
or
ret
and
push
mov
mov
mul
add
sti
aas
fs
test
and
and
jmp
pop
cmp
repnz
ror
mov
into
sti
sti
adc
leave
inc
stos
mov
inc
(bad)
es
and
push
and
inc
jge
mov
clc
and
movs
mov
inc
cdq
push
add
loope
xchg
pushf
rol
sbb
pop
in
xor
pop
shl
ins
loop
(bad)
dec
mov
je
sbb
cmp
pusha
leave
jno
dec
in
iret
lds
or
imul
mov
(bad)
cmps
push
dec
jg
fidivr
ins
mov
and
mov
cmc
adc
push
mov
pop
dec
scas
test
cmp
test
rcl
call
xchg
mov
rcl
jns
cdq
cld
add
into
(bad)
jne
sub
daa
jmp
xchg
repz
add
sub
scas
pop
xor
cmc
mov
mov
or
(bad)
lahf
push
pop
outs
sbb
sbb
aam
retf
dec
inc
dec
test
xlat
xor
movs
xor
mov
dec
ins
xchg
movs
mov
test
pop
cmp
mov
in
fnsave
jbe
adc
mov
cli
dec
add
rep
cdq
dec
js
test
inc
popf
sbb
loop
xchg
adc
dec
test
jp
mov
ret
add
icebp
xor
pop
out
out
jmp
lock
mov
popa
int3
and
stos
cmp
test
jmp
cwde
xor
dec
out
je
mov
push
clc
xchg
xor
jmp
in
stc
push
cld
adc
fisub
in
or
sbb
lods
inc
mov
je
and
pop
popa
xor
pop
fild
out
outs
shl
fisttp
pop
jbe
(bad)
and
sbb
and
pusha
gs
scas
xor
jnp
leave
sar
cs
loopne
nop
dec
mov
push
push
in
lahf
inc
xchg
imul
jnp
xchg
inc
ss
xchg
push
jg
adc
into
add
add
inc
sbb
(bad)
in
in
sar
icebp
adc
jns
dec
mov
aam
cmps
movs
bound
xchg
push
stos
inc
ss
stc
dec
and
adc
cmp
mov
ret
xchg
jmp
lods
(bad)
xor
(bad)
ds
pop
repz
repnz
jl
ret
push
loopne
dec
pop
dec
add
sahf
stc
mov
cmps
mov
ror
push
popf
pop
inc
cmp
test
sub
into
cmps
pop
mov
dec
test
out
adc
xchg
mov
jge
(bad)
ins
inc
stc
xor
les
or
dec
sub
adc
mov
pop
add
lock
stos
pushf
cmp
int3
out
ds
es
jmp
dec
jns
test
(bad)
inc
mov
test
(bad)
lea
cs
mov
mov
aaa
xchg
xchg
fucomp
pop
stc
add
jp
adc
jle
inc
stc
or
sbb
mov
bound
or
push
imul
sub
repnz
jp
and
xchg
cwde
lods
push
dec
xlat
mov
(bad)
adc
jbe
cwde
ja
mov
cmp
sti
(bad)
push
dec
push
repnz
rcl
into
add
pop
ror
sbb
adc
cmc
pop
ins
push
addr16
lods
popf
fucomi
jae
dec
in
shr
push
bt
ret
pop
jecxz
and
cmps
lods
inc
iret
xchg
pop
sbb
fisttp
rcr
das
out
cmp
std
jns
mov
test
mov
(bad)
gs
hlt
inc
fidivr
xchg
xchg
(bad)
jmp
dec
xchg
adc
pop
cmp
sbb
int3
inc
out
push
(bad)
adc
push
lahf
mov
jmp
aad
and
call
and
iret
cmps
xchg
call
mov
test
(bad)
mov
popf
addr16
xor
loopne
cmps
add
fdivr
out
gs
and
push
pop
hlt
mov
ret
inc
aad
std
rol
sub
mov
add
retf
dec
cmps
jno
jmp
adc
or
test
sub
sbb
data16
and
mov
adc
add
jecxz
movs
xor
push
mov
cs
dec
scas
sahf
out
mov
test
icebp
popa
stos
adc
std
neg
fist
jnp
adc
push
lods
mov
aas
mov
and
int
cmp
mov
jnp
and
mov
iret
push
jne
pop
and
jo
ficomp
or
call
add
lods
sub
pusha
cmp
push
and
scas
pop
imul
popa
ret
retf
push
out
mov
leave
popa
ret
mov
ret
and
cwde
dec
pop
(bad)
pop
aaa
enter
push
cmp
or
pop
push
inc
and
cmps
in
fwait
int
or
mov
aam
xor
test
das
loope
shl
mov
dec
and
xchg
dec
add
clc
mov
addr16
shr
leave
jl
dec
imul
push
inc
call
push
retf
pop
push
xor
or
mov
adc
call
mov
cmc
adc
and
lea
push
xchg
imul
loope
in
dec
std
scas
imul
sbb
(bad)
jmp
inc
fwait
outs
sbb
adc
xchg
scas
sbb
xor
cdq
ficom
dec
fdivr
cmc
repz
shr
lds
pop
xor
movs
mov
and
mov
xor
int
mov
idiv
arpl
inc
sbb
sbb
ficom
movs
and
int
lea
adc
aad
ja
sbb
sti
cmp
pop
cmps
jae
(bad)
imul
repz
mov
jnp
lods
pop
dec
out
aaa
popa
xor
dec
sub
mov
xor
pushf
add
push
imul
out
add
xchg
loop
sti
mov
mov
rcr
mov
test
popf
xchg
xor
push
mov
dec
ror
das
pusha
loop
or
or
sub
xchg
and
iret
jb
es
lods
or
mov
pop
aas
int
aas
movs
jbe
sahf
jmp
pop
jno
ror
push
dec
int3
cmc
mov
repz
inc
mov
aad
cmp
mov
dec
rcr
or
fidivr
pop
lds
ds
xor
(bad)
mov
adc
pop
pusha
xlat
pop
mov
mov
outs
sub
push
movs
loope
pop
call
mov
add
inc
mov
shl
sar
xor
(bad)
jno
cmp
pop
aaa
adc
imul
in
data16
scas
es
mov
push
ret
push
ja
inc
dec
push
cdq
push
and
shl
das
nop
jnp
jmp
cwde
arpl
mov
push
shr
ins
adc
in
repnz
xor
inc
in
ins
or
(bad)
mov
sbb
mov
into
sbb
add
outs
mov
fiadd
or
inc
loope
add
fcom
cmp
cmp
movs
jle
test
cmp
xchg
cmps
or
jp
sti
mov
les
rcl
fld
lahf
dec
pop
lock
dec
pop
hlt
mov
pop
shl
popf
fcmovne
(bad)
in
and
arpl
push
cmp
(bad)
(bad)
retf
xchg
jb
fwait
sbb
mov
xor
out
mov
sbb
add
sahf
mov
xchg
shl
ss
shr
sbb
ds
sbb
js
mov
dec
test
jp
out
(bad)
pop
stc
aaa
cld
shl
xchg
mov
inc
fidiv
xchg
fwait
mov
mov
ret
stos
adc
test
mov
jae
mov
mov
and
mov
cmp
xchg
outs
jno
leave
push
add
aam
xor
sar
adc
or
mov
sbb
aas
mov
mov
pop
jle
jg
sub
fsub
pop
push
sbb
das
mov
and
pop
inc
arpl
pop
mov
jno
pop
or
arpl
rcl
xchg
ins
mov
sbb
xor
ds
mov
repnz
push
int3
stos
mov
add
lods
cmp
dec
test
jbe
in
xor
dec
push
xor
add
pop
loope
xchg
sti
xchg
mov
lock
daa
bound
jl
mov
cmps
push
mov
sbb
shl
lock
jae
jnp
cwde
loopne
adc
xor
mov
mov
test
cmps
sar
pop
pusha
push
fiadd
fs
inc
mov
sub
repnz
cmc
and
test
ja
ins
push
pop
pop
pop
jb
fcmovnu
and
pop
jbe
mov
pop
add
test
lods
mov
dec
cmps
xchg
fldenv
sub
pop
mov
shl
push
adc
jg
sahf
push
jle
inc
(bad)
mov
sub
movs
ret
xchg
sub
xchg
hlt
clc
jmp
sbb
cmp
daa
push
imul
cmc
xchg
xchg
addr16
or
jne
inc
lahf
cmp
sti
xor
dec
shl
leave
call
stos
aam
inc
ss
mov
adc
inc
mov
pop
rcl
(bad)
ficomp
imul
aad
jae
rol
dec
test
jecxz
jecxz
add
xchg
arpl
mov
dec
stos
mov
xchg
adc
mov
mov
xlat
sub
loopne
sar
shl
jl
data16
push
mov
fwait
sub
xlat
mov
pop
in
jb
jecxz
stos
inc
cmps
and
jl
xchg
xor
dec
dec
adc
shr
scas
jp
scas
xchg
fstp
cmp
mov
or
mov
movs
pop
in
mov
mov
cmps
jnp
repnz
push
dec
mov
sbb
sub
inc
es
ss
das
and
mov
clc
repnz
ins
or
push
mov
icebp
xchg
aas
vmovapd
scas
and
add
out
inc
jmp
xor
stc
fucomi
jne
test
dec
xor
cwde
or
lods
fdivr
push
jmp
inc
data16
mov
pusha
enter
call
jbe
ds
fs
test
or
ss
test
dec
and
jnp
jnp
cmp
dec
js
xor
fiadd
(bad)
retf
aaa
xor
scas
ins
lock
shr
jo
mov
mov
sub
lds
dec
push
xchg
adc
jg
cmps
add
lds
xchg
push
sbb
cmc
dec
mov
je
(bad)
ds
mov
pop
push
cmp
cwde
out
inc
ss
(bad)
jg
ficom
inc
jbe
inc
pop
dec
mov
or
lods
jmp
vhaddpd
sbb
and
imul
cs
mov
in
ins
pop
fcom
retf
mov
ja
mov
dec
inc
adc
retf
repnz
jbe
aad
sbb
adc
les
fisttp
cmp
adc
loope
test
mov
xchg
jmp
lea
adc
stos
dec
xchg
sbb
mov
imul
jmp
mov
push
xor
loop
bound
xchg
call
pop
call
addr16
pop
xchg
(bad)
in
sbb
cmp
je
popa
out
bound
xor
lods
sub
push
lds
cmps
(bad)
fs
add
mov
sbb
lea
loopne
aad
ror
lock
xchg
(bad)
std
(bad)
mov
shl
add
loope
jb
out
dec
mov
jns
pop
les
test
xchg
sbb
mov
push
jbe
(bad)
cmps
por
pop
test
movs
xchg
push
in
pusha
add
mov
or
and
cmp
push
add
fcom
inc
out
xchg
int
test
popf
pop
jp
sub
xor
ja
add
mov
jb
fwait
scas
mov
pop
push
adc
loopne
or
or
cmp
lods
or
loopne
addr16
(bad)
pop
inc
inc
clc
out
xchg
pop
adc
adc
fs
push
pop
daa
xor
aad
sub
sar
pop
test
loop
inc
or
mov
test
mov
push
fs
xchg
pop
shl
xchg
std
xor
outs
cmps
inc
das
repz
push
push
out
or
push
sub
push
cdq
sub
enter
not
cdq
cs
adc
cmp
sub
iret
stos
dec
addr16
movs
mov
je
mov
add
push
rcr
daa
jo
push
or
pushf
add
sub
push
mov
inc
jmp
dec
pushf
adc
cmp
pop
out
pop
push
retf
loop
xchg
cwde
jnp
mov
jae
das
and
aaa
sbb
fnstcw
push
sti
sbb
push
fnsave
lahf
push
outs
inc
test
add
call
jns
adc
scas
xor
ins
leave
mov
cmps
dec
std
enter
(bad)
stc
xchg
mov
mov
lock
or
and
add
pop
stos
loope
outs
add
data16
pop
les
inc
mov
inc
movs
xchg
cmp
psrad
dec
scas
iret
lods
add
int3
jae
ficom
mov
inc
ret
mov
leave
sub
xlat
push
jne
push
push
push
xchg
lock
sub
ja
gs
xchg
stos
mov
scas
push
dec
xlat
sub
xor
xor
jne
or
xor
jge
addr16
push
stos
cmp
(bad)
shl
sub
jmp
scas
or
cmc
jmp
jge
cli
gs
ss
xor
push
cmps
xchg
xchg
nop
cdq
ret
repz
mov
ins
mov
sbb
xchg
test
lods
push
arpl
mov
mov
ins
sbb
xchg
pop
lods
cmp
cmp
stos
xchg
mov
push
xor
imul
sub
jmp
cs
repz
xchg
or
xchg
int3
cdq
faddp
cmps
pop
sar
dec
in
push
pop
leave
in
fld
mov
dec
out
lods
popa
and
xchg
popf
cmp
inc
repz
inc
rcl
es
cmc
push
mov
jg
stc
xchg
pop
test
cmps
mov
hlt
cli
jg
out
mov
mov
ja
mov
retf
cmps
jo
outs
lea
and
hlt
push
shr
aaa
sub
call
jno
mov
cmps
push
mov
push
mov
popa
pop
outs
loope
dec
bound
jp
cmp
test
popf
xor
fcom
or
xchg
loop
jns
adc
sbb
adc
loopne
mov
in
ja
push
sub
sbb
pop
mov
test
or
jp
stos
stc
dec
jmp
out
lods
mov
adc
or
mov
enter
jmp
sub
xchg
add
aad
call
push
leave
ins
push
ins
scas
jae
and
and
mov
push
aam
pushf
test
sub
add
xor
js
ror
push
inc
fsubp
mov
dec
outs
nop
inc
shl
xlat
imul
sub
or
stos
int3
cmp
stos
jbe
out
test
sub
repnz
xor
lock
dec
adc
sbb
jbe
mov
ror
pop
cli
cwde
movs
xchg
add
ja
jmp
push
jle
fdivr
mov
inc
nop
aad
mov
jl
or
xor
jle
arpl
lock
xor
dec
jge
pop
mov
add
retf
mov
test
and
pop
jae
and
xor
add
sub
jp
not
mov
push
stos
inc
ret
(bad)
lahf
dec
push
out
push
add
inc
or
xlat
dec
imul
pop
dec
jb
stc
or
cmp
ds
push
pop
call
sbb
fisttp
mov
stos
fisub
xor
push
clc
push
call
xor
xchg
cld
dec
xchg
loop
pop
test
loope
fisubr
jo
aam
sub
fldenv
push
dec
int3
add
mov
xlat
in
cs
jae
sbb
adc
int
outs
inc
mov
gs
and
adc
dec
or
mov
add
push
or
cmp
mov
and
(bad)
mov
sahf
xchg
fwait
pusha
inc
adc
mov
mov
inc
cmp
mov
repz
push
sbb
adc
rol
adc
popa
or
jae
sub
sti
(bad)
mov
pop
mov
add
movs
mov
jb
inc
mov
pushf
repz
mov
push
call
aaa
clc
jns
clc
or
aas
cdq
adc
loop
push
lods
jecxz
cmp
cmp
and
cmp
inc
mov
js
push
int3
pop
addr16
mov
sti
out
sub
fdiv
sbb
xor
mov
lock
push
jnp
test
mov
and
dec
mov
mov
pop
idiv
pop
test
lahf
xlat
mov
xor
aad
fcmovnu
dec
mov
mov
pushf
xchg
xchg
(bad)
inc
sahf
movs
out
std
xchg
ficom
or
push
cmp
mov
shr
data16
mov
cmp
rcr
lods
in
movs
mov
cmp
or
imul
xchg
xchg
popf
rcr
int3
cmp
ja
mov
mov
cmp
pop
sub
fst
shl
lods
pop
mov
ret
pop
add
ins
mov
test
lods
int3
push
or
inc
mov
mov
jg
dec
cmp
popf
out
rdpmc
push
xor
gs
cmp
or
std
and
scas
(bad)
adc
mov
rcl
popa
iret
clc
jbe
xor
iret
sbb
xchg
cs
inc
push
push
cmp
mov
dec
push
or
inc
lahf
test
out
cmp
je
icebp
arpl
shl
sbb
push
dec
mov
cmps
add
retf
dec
jp
inc
jg
mov
dec
daa
or
pusha
stos
call
ss
adc
in
out
push
popa
jnp
out
lahf
mov
pop
jl
mov
lods
outs
test
loope
ins
dec
repnz
popa
xchg
mov
xchg
stos
(bad)
mov
int3
xchg
test
add
sub
xchg
fs
into
xor
js
rol
mov
sbb
and
cli
adc
out
push
fistp
out
jmp
mov
ret
mov
mov
test
fdiv
das
dec
loopne
dec
mov
adc
push
or
inc
add
dec
add
xlat
xor
sbb
pop
loop
mov
fs
and
movs
mov
mov
mov
jo
mov
jge
dec
nop
cmp
inc
in
enter
cmp
inc
stc
mov
mov
sar
nop
or
jnp
sub
or
adc
push
mov
in
push
scas
mov
xchg
inc
dec
and
aas
sbb
gs
jecxz
js
sub
out
push
int
mov
pop
jecxz
lea
mov
das
sbb
mov
stc
je
(bad)
mov
dec
cmp
and
lahf
lahf
xchg
sub
add
sbb
jne
in
sub
jns
add
dec
adc
inc
xchg
cmp
sti
int3
rcl
and
mov
popa
push
test
push
mov
fstp
cmc
sbb
cli
adc
jmp
pop
or
int3
jmp
or
cdq
pop
and
jb
and
cld
test
lods
test
inc
ins
rol
(bad)
hlt
imul
les
rcr
popf
in
or
jbe
lds
or
mov
cmps
cmp
aas
into
call
enter
mov
ror
cmp
sbb
jno
test
and
lahf
retf
mov
je
pop
test
mov
sub
int3
fbld
and
fdivr
inc
mov
mov
pop
jne
mov
jle
test
inc
mov
or
cmp
fwait
inc
xchg
inc
sti
mov
dec
cmp
popf
lods
and
shl
(bad)
ror
addr16
repnz
test
dec
push
add
mov
repnz
pop
mov
movs
mov
push
mov
loope
je
or
fisttp
mov
daa
and
pop
adc
(bad)
sub
or
jmp
popa
int3
jo
jo
pop
imul
mov
retf
mov
inc
xor
jo
dec
scas
sub
mov
inc
jp
mov
push
popa
xor
push
push
pop
push
cmps
repz
pop
in
mov
jnp
clc
cli
fwait
sbb
or
xor
fwait
jecxz
dec
pop
aam
lods
outs
add
xchg
int3
jecxz
shl
(bad)
and
test
test
xchg
call
and
pop
xchg
ret
jecxz
icebp
inc
cs
adc
xchg
mov
and
(bad)
rol
mov
sub
push
push
loop
mov
sub
sbb
adc
sbb
push
in
jmp
pop
xchg
dec
push
mov
xor
jle
in
jle
nop
pop
fisttp
movs
(bad)
push
fisub
xchg
int3
rol
jp
leave
inc
sbb
cdq
add
mov
imul
adc
adc
arpl
xchg
movs
jnp
adc
or
push
je
repnz
mov
push
push
push
hlt
adc
ficom
out
les
div
addr16
test
fwait
scas
rol
bound
inc
sar
cmp
gs
mov
je
and
sub
fiadd
mov
out
add
mov
stos
push
xor
sbb
mov
xchg
(bad)
and
sub
add
cli
inc
mov
mov
retf
lods
push
mov
add
jmp
pop
xchg
call
repz
fld
or
pop
(bad)
adc
loop
sbb
or
mov
push
sbb
imul
aaa
add
push
test
das
inc
(bad)
aam
data16
pop
scas
out
mov
std
aad
test
enter
setae
lock
in
push
xchg
or
clc
fnsave
mul
leave
aas
int
sub
shl
push
out
mov
(bad)
sar
cwde
fisttp
jmp
dec
jns
adc
cmps
push
pop
ins
xlat
dec
sbb
retf
ja
jmp
lea
(bad)
mov
xchg
mov
xor
hlt
push
add
push
mov
scas
retf
dec
lods
xchg
mov
jb
push
push
movs
mov
enter
test
inc
aaa
mov
inc
mov
cmp
lahf
inc
pop
and
movs
sub
ret
out
and
dec
imul
inc
pop
adc
cmps
loopne
arpl
(bad)
cld
pop
adc
adc
adc
stos
out
jp
add
mov
dec
inc
in
mov
lods
test
adc
(bad)
shl
cmp
aas
imul
dec
lods
nop
fstp
push
dec
xchg
fwait
xor
mov
call
in
addr16
adc
ins
pop
pop
popa
sbb
dec
push
test
(bad)
lods
fwait
adc
mov
dec
inc
xor
cmps
fiadd
mov
test
or
mov
scas
nop
push
inc
mov
inc
out
cmp
cmp
pushf
fs
mov
fsub
dec
adc
push
dec
cmp
cmps
outs
stc
jmp
jmp
sub
pop
stos
aad
movs
jno
lahf
inc
cmc
and
jno
mov
ret
out
cdq
out
xchg
fmul
mov
jo
sbb
addr16
seta
fucompp
push
mov
xor
push
and
call
mov
jg
jge
xchg
test
test
aas
pushf
fs
int
icebp
out
cmc
mov
leave
(bad)
test
jbe
jno
lock
loop
data16
inc
inc
sbb
adc
fisub
or
push
inc
jno
sbb
cmp
jb
mov
aam
jnp
fs
add
into
movs
push
out
mov
int3
jl
cli
xchg
rol
mov
dec
push
xchg
sub
cdq
push
inc
cmp
sbb
mov
pop
aad
data16
sub
adc
icebp
out
push
and
popf
stos
mov
pop
mov
mov
adc
repnz
clc
dec
mov
test
sbb
shl
push
nop
in
loop
adc
xor
xor
aam
jecxz
and
repnz
shl
mov
dec
dec
scas
nop
inc
xchg
rol
outs
cld
inc
cs
push
mov
adc
jno
clc
sbb
sbb
lods
xor
cmp
stos
or
ins
xor
xlat
cmp
fs
mov
out
pushf
das
outs
inc
shr
fdivr
aad
and
xchg
nop
xor
mov
and
adc
in
xchg
mov
jne
popf
jns
push
inc
and
pop
arpl
mov
cmp
call
popf
cmps
stos
in
dec
imul
add
mov
push
push
jmp
jmp
call
fiadd
xchg
daa
into
and
mov
and
call
pop
test
into
ins
das
xor
fisub
ficomp
mov
mov
aas
(bad)
push
out
lods
mov
call
retf
adc
loopne
fcmovnu
cmp
stos
mov
jae
jb
retf
lods
cmc
into
adc
imul
xor
push
(bad)
pop
sbb
push
inc
ret
out
xor
cmp
ins
sub
test
mov
dec
(bad)
cmc
pop
ss
mov
adc
cmps
loope
std
ja
stos
xor
jne
das
mov
pop
dec
inc
pushf
bound
dec
pop
aad
stc
popf
ss
pop
fwait
ja
push
xor
mov
and
aaa
mov
cmps
add
push
jle
push
enter
pop
fisub
sub
mov
xlat
and
push
sar
xchg
sub
stos
(bad)
mov
in
xchg
jb
or
loopne
xchg
cwde
push
pop
inc
add
inc
pushf
inc
xchg
mov
fist
pop
mov
inc
dec
ja
fsub
leave
in
xor
lock
cmp
aaa
iret
mov
bound
es
mov
je
xor
and
inc
mov
pop
push
jnp
lods
xchg
xor
dec
inc
imul
push
jo
pop
aaa
dec
shl
push
sub
xor
jp
mov
stos
je
add
ss
push
aam
mov
pop
das
lods
pop
xor
push
fs
dec
scas
push
dec
retf
out
xlat
ss
or
jge
int3
push
adc
add
mov
pop
mov
pop
xlat
mov
fbstp
mov
dec
ret
push
imul
xor
(bad)
movs
xadd
cmp
jo
pusha
or
add
lods
mov
mov
mov
iret
call
lea
ds
cdq
inc
xor
out
or
pop
xlat
xor
lods
nop
jb
sub
dec
loop
in
push
(bad)
lods
lds
inc
cli
jo
sub
test
call
jmp
adc
mov
iret
xchg
in
sahf
mov
mov
and
push
push
inc
and
shl
cli
push
aad
sbb
mov
aam
cmp
add
mov
inc
sbb
jecxz
adc
and
mov
mul
cli
(bad)
(bad)
mov
inc
xchg
sbb
inc
dec
sbb
mov
(bad)
push
or
xor
push
aaa
mov
lods
(bad)
adc
jns
mov
ffreep
scas
mov
aad
and
sahf
inc
inc
adc
shl
or
push
mov
cwde
push
retf
or
cmp
jb
repnz
push
retf
call
jmp
loopne
lea
int
xlat
pushf
(bad)
jno
push
push
enter
sbb
xchg
clc
or
imul
aam
push
imul
ret
jg
icebp
fs
jno
pop
iret
jge
inc
mov
mov
ret
inc
or
jns
sbb
fisttp
adc
jb
mov
out
adc
xor
int3
xchg
int
xor
mov
lea
sbb
mov
cmc
ret
mov
shl
jecxz
xchg
retf
cmps
push
test
mov
mov
mov
lock
push
jne
rol
stc
dec
call
fld
and
daa
arpl
mov
mov
outs
(bad)
in
xor
cld
(bad)
bound
ins
or
inc
xor
(bad)
sahf
fdiv
inc
push
dec
pop
leave
jo
inc
xchg
add
jmp
jo
sbb
and
aas
popf
test
aas
das
cmp
(bad)
sti
or
pop
sub
push
xchg
push
mov
push
adc
lods
cwde
push
(bad)
mov
sar
imul
cmps
int3
movsx
movs
sbb
and
sbb
sub
es
mov
sbb
pop
mov
add
test
xchg
jp
fst
sti
cdq
add
lods
loopne
xchg
xor
jne
pushaw
(bad)
cmps
out
cmp
leave
nop
pop
push
jp
push
dec
push
mov
cmp
outs
hlt
arpl
mov
gs
rcl
adc
mov
ret
cmp
leave
call
pop
xchg
lds
mov
adc
cmp
or
mov
mov
sar
mov
push
test
sahf
or
movs
retf
cmp
sub
mov
mov
pusha
mov
xchg
sbb
loop
frstor
stos
call
xor
(bad)
fdiv
cs
and
sub
retf
ficomp
jns
loope
mov
push
push
dec
xchg
and
iret
(bad)
or
and
xlat
rol
ja
jnp
ror
imul
imul
aam
ds
ficomp
xor
mov
inc
lods
jle
cmp
idiv
jg
push
movs
in
cld
test
inc
fisub
cmp
(bad)
call
add
sbb
cmps
sub
pop
out
xchg
push
leave
dec
sbb
fistp
mov
shr
shr
adc
adc
jo
mov
pop
out
sbb
push
(bad)
dec
cmp
sbb
test
mov
inc
and
xor
mov
fimul
js
add
pop
scas
xor
jo
adc
mov
(bad)
hlt
mov
test
sub
xchg
xor
inc
out
sahf
cdq
jge
fdivr
aas
xchg
addr16
sbb
xor
cmp
push
add
cli
(bad)
(bad)
in
jle
stos
lsl
or
(bad)
(bad)
push
out
enter
mov
inc
sti
loope
imul
sbb
rol
mov
add
mov
retf
and
aaa
cmp
mov
xchg
outs
scas
je
inc
in
xor
jnp
loope
outs
arpl
fisttp
int3
jae
push
cmp
inc
cld
adc
push
cmps
push
aaa
js
mov
test
add
cmps
jno
push
lea
call
pushf
jle
loop
mov
dec
adc
push
mov
inc
cmps
cmp
pop
and
sbb
call
xchg
dec
xor
xchg
leave
sbb
xchg
xor
rol
mov
idiv
lahf
retf
dec
cmp
mov
mov
inc
lods
addr16
loope
jmp
ret
outs
dec
stos
aam
push
popf
fs
jp
push
popa
dec
cmps
mov
xor
sbb
int3
sub
xor
fcmovnbe
rcl
in
push
sbb
loope
enter
add
inc
xchg
fimul
arpl
add
push
mov
int
xor
pop
mov
pop
xchg
mov
mov
lock
out
dec
ins
xor
adc
and
xor
and
jae
call
cmp
jno
jne
stos
cmp
outs
int
mov
nop
mov
(bad)
dec
out
push
jmp
out
test
xchg
mov
jp
ret
dec
xchg
mov
(bad)
dec
mov
mov
pop
mov
adc
into
aam
cdq
push
loop
idiv
mov
xchg
scas
adc
inc
mov
mov
ror
mov
mov
jmp
aad
sbb
fisub
and
adc
xor
jnp
into
mov
(bad)
(bad)
jp
dec
push
adc
inc
cmp
pop
mov
out
clc
add
(bad)
mov
inc
(bad)
cmp
push
(bad)
push
adc
dec
or
jmp
inc
jne
pop
push
mov
addr16
test
inc
aaa
add
test
arpl
add
into
jp
sar
cld
scas
xchg
add
lea
adc
icebp
and
push
push
test
lods
xchg
or
daa
add
cdq
(bad)
xor
in
imul
push
jns
or
iret
ins
bound
stos
or
cmp
jne
nop
xchg
cli
mov
mov
inc
push
dec
loope
lea
mov
lods
frstpm(287
lahf
push
xor
cmp
enter
sti
cmps
xor
cmp
popf
xor
mov
lahf
push
imul
std
rcl
dec
jns
gs
rcr
mov
in
retf
push
sar
cmp
rol
mov
ret
stos
add
clc
xchg
inc
push
xchg
shl
enter
test
pop
and
loope
imul
mov
mov
sbb
pop
aam
clc
loopne
mov
pop
mov
mov
retf
(bad)
cmc
push
fdiv
js
mov
mov
movs
xchg
or
repz
xchg
scas
inc
out
ret
aaa
loop
dec
leave
jecxz
lods
jmp
mov
dec
movs
inc
cmps
mov
push
push
and
repz
inc
int3
in
fsubr
(bad)
push
cs
imul
xlat
and
mov
sub
pop
stc
jmp
push
outs
(bad)
rdtsc
aam
fdiv
retf
or
push
std
test
add
arpl
outs
idiv
sbb
inc
xchg
mov
xchg
jg
in
jmp
fdivr
mov
push
stos
adc
jb
lods
icebp
jecxz
adc
mov
into
dec
bound
popa
push
jbe
xor
cmps
les
fnstcw
push
nop
lods
popa
fisubr
dec
jmp
pop
xor
aaa
add
inc
rcr
imul
inc
pop
inc
or
xor
sbb
or
icebp
(bad)
cld
loopne
fisttp
bound
out
mov
add
xchg
mov
dec
inc
test
clc
rcl
cmp
xor
xchg
add
and
loopne
test
fdiv
(bad)
jecxz
mov
xchg
gs
mov
mov
retf
jno
in
xchg
dec
movs
jl
xor
mov
loop
icebp
iret
call
jns
pop
sub
mov
ja
(bad)
mov
mov
jg
cld
xor
cmp
loop
icebp
(bad)
aaa
add
and
lahf
or
jne
mov
pop
push
test
mov
cmp
fucomi
push
icebp
popf
push
leave
or
ds
ret
sub
mov
stos
push
xchg
mov
ja
stc
inc
(bad)
cmc
out
push
sub
or
jns
xchg
cmp
mov
mov
sbb
movs
lods
dec
adc
jne
push
xchg
mov
pop
cmp
add
xchg
xchg
xchg
(bad)
add
enter
mov
push
jle
in
push
ds
enter
fldcw
in
cmc
outs
jmp
aas
jb
mov
shl
test
mov
loope
enter
jns
and
ds
pop
mov
fst
stos
popa
push
or
ret
loope
ss
mov
pop
call
xchg
mov
sub
xor
retf
mov
mov
lods
jge
xor
movs
adc
inc
adc
adc
push
xor
pop
cmp
cmp
lock
push
lock
jbe
mov
pop
adc
std
ins
nop
iret
scas
inc
adc
mov
retf
call
jbe
mov
ss
call
repnz
in
push
into
and
sbb
xor
adc
aas
aam
pop
mov
ror
mov
enter
test
ficom
sub
in
mov
(bad)
add
push
xchg
push
in
xor
jge
and
jge
out
mov
jge
ss
cmc
push
or
ins
add
in
push
push
jl
cld
jns
(bad)
ins
mov
call
pop
pop
xor
jp
std
mov
fs
inc
jmp
sbb
add
pop
mov
sbb
daa
(bad)
xor
jp
add
inc
xchg
jecxz
cmp
js
jbe
clc
sar
jle
xor
push
push
in
loopne
sub
stos
les
mov
ins
mov
mov
pushf
mov
fmul
dec
neg
imul
movs
leave
dec
mov
stos
cmp
nop
and
and
inc
je
inc
nop
neg
add
mov
inc
adc
lahf
pop
int3
dec
adc
movs
push
pusha
mov
pop
xor
jge
adc
arpl
cmp
xchg
mov
ja
add
sbb
adc
xrelease
popf
fs
add
mov
test
jmp
mov
daa
mov
pop
xchg
es
sub
sbb
js
clc
mov
pusha
add
push
daa
dec
inc
sbb
int3
sub
push
cmp
adc
xchg
push
push
iret
in
dec
ss
jecxz
out
ss
push
int3
mov
out
mov
dec
pop
inc
cmps
mov
add
mov
icebp
xor
add
lods
fidivr
stc
nop
mov
mov
aad
sbb
sbb
sbb
arpl
out
jp
cmc
pop
pop
fcom
imul
mov
xor
push
adc
or
pop
dec
jnp
adc
mov
mov
sub
ret
mov
outs
pop
cmps
mov
mov
pop
xchg
fmul
xchg
arpl
mov
add
fcomp
fcomp
lea
shl
scas
or
cmps
jge
imul
arpl
popf
(bad)
clc
jmp
lods
fcmovu
add
and
lahf
xchg
(bad)
pop
cmp
mov
sbb
outs
fisub
add
sub
stc
(bad)
loop
pop
lods
or
cwde
stos
jl
test
xor
cli
pop
leave
push
and
mov
sbb
and
pusha
or
retf
mov
scas
or
mov
cmp
jp
imul
mov
test
jno
mov
sti
aad
dec
xor
imul
jle
(bad)
imul
inc
pop
imul
cmp
pop
cmp
push
lahf
and
xchg
pusha
mov
xchg
into
mov
out
rol
ins
cs
mov
dec
es
js
jne
add
std
rcr
sahf
jns
lods
jecxz
xchg
push
es
aas
adc
sti
mov
(bad)
(bad)
and
bsf
fdivr
xchg
jmp
mov
cwde
or
movs
in
das
shl
push
inc
push
add
and
inc
gs
push
aad
fadd
(bad)
xchg
dec
jnp
pop
cli
fnop
jnp
popf
in
in
mov
push
ret
out
stos
push
mov
mov
jmp
lock
sub
imul
repz
cmp
dec
add
push
mov
or
push
(bad)
retf
inc
(bad)
push
mov
jnp
ins
mov
jmp
and
scas
xor
or
mov
mov
or
cmp
outs
pop
add
retf
ds
mov
ins
aaa
bound
push
add
cwde
mov
jp
retf
push
dec
mov
pop
push
cmp
call
xchg
enter
ja
shl
jae
pop
loop
or
dec
and
nop
loop
inc
push
xchg
cwde
push
and
sub
pop
adc
pop
mov
in
xchg
and
ds
jmp
retf
paddusb
adc
or
(bad)
mov
and
ret
cmp
and
shl
jae
mov
fidiv
in
(bad)
xchg
mov
or
and
sub
std
cmp
gs
dec
shr
cmp
punpcklbw
mov
call
mov
jecxz
pop
arpl
xchg
xchg
icebp
jmp
and
dec
mov
jo
cmp
push
pop
test
mov
cmps
jmp
in
jns
and
and
movs
push
push
xor
push
mov
cld
or
mov
mov
cli
jne
pop
jns
hlt
mov
inc
dec
jg
adc
and
fiadd
push
sub
popf
neg
ror
xor
mov
push
and
fld
in
and
xor
popf
test
mov
rcr
lahf
jl
and
gs
(bad)
leave
pop
sar
in
mov
fidiv
outs
mov
jns
or
scas
mov
push
ja
aaa
inc
scas
mov
call
sar
cmp
pop
test
jne
repz
pop
or
mov
or
test
mov
and
into
inc
jns
and
sti
push
xor
inc
frstor
xor
sti
imul
cmc
and
inc
cs
and
loope
mov
cmps
es
pop
dec
fidiv
pop
or
jmp
cmp
xor
retf
stos
xor
ret
cli
jns
jmp
or
sub
fbstp
xchg
or
adc
fbld
mov
xchg
pop
nop
sub
stc
loopne
push
cmps
xor
jb
sub
and
mov
pop
imul
enter
cmp
xchg
das
push
outs
or
dec
and
or
add
gs
fcos
fsub
dec
xor
shl
ret
imul
sub
mov
addr16
outs
outs
jl
sahf
out
dec
push
xchg
std
fcmovnu
and
test
int3
arpl
call
shr
in
mov
jp
push
pop
outs
aam
mov
daa
mov
mov
lahf
shl
les
ror
mov
stos
int
add
ds
fadd
xchg
push
les
dec
inc
and
adc
lods
and
(bad)
sti
out
lods
popf
pop
imul
in
push
mov
mov
enter
out
mov
fld
inc
loope
clc
cmc
ins
imul
lods
inc
sub
mov
(bad)
dec
cmp
xchg
mov
icebp
mov
adc
cwde
(bad)
ret
mov
dec
cmp
out
xor
mov
and
shl
int3
pop
push
outs
mov
nop
lods
push
mov
fld
mov
lods
out
test
rcl
in
xor
popa
(bad)
ins
jb
jp
pop
mov
pushf
jl
js
jno
adc
add
or
mov
addr16
imul
repnz
fidiv
mov
sub
jecxz
icebp
dec
clc
inc
xchg
inc
push
cmps
loopne
push
or
test
sub
add
jl
push
jno
imul
repnz
push
cwde
data16
icebp
xchg
mov
push
repnz
gs
mov
test
(bad)
xlat
dec
lods
cmp
pop
mov
inc
xchg
lds
add
pop
cld
ds
je
pop
jbe
cmp
mov
fst
mov
add
imul
aaa
mov
sti
jo
mov
mov
or
stos
jb
sub
sub
push
fnstcw
je
aaa
xor
push
sbb
sub
push
lahf
dec
lods
add
repz
ds
add
cmc
xchg
push
cmp
push
out
cdq
mov
inc
loopne
adc
jns
scas
cdq
sub
pop
push
jge
je
adc
call
mov
cmovo
pop
ficom
rcr
push
aaa
clc
dec
cmp
sub
cmps
std
pop
pop
pushf
push
pop
ret
inc
leave
in
sbb
pop
shl
stc
sub
cmps
(bad)
dec
in
push
inc
xchg
push
stos
(bad)
cmp
push
jle
int
xchg
add
fild
push
mov
les
pop
sbb
mov
stos
add
and
imul
jge
inc
ja
das
mov
shr
clc
pop
jmp
pusha
jns
stc
int
test
sti
jecxz
mov
jae
je
push
imul
sbb
je
jo
test
push
fisubr
loopne
mov
(bad)
call
xchg
sbb
fsubp
aas
sbb
aam
pop
xchg
retf
mov
add
movs
mov
mov
mov
clc
cmc
pop
ins
jno
add
fs
or
add
xchg
std
pop
lock
cmp
or
sbb
out
pop
cmp
jecxz
cmp
sub
dec
push
push
xlat
xchg
into
sub
int3
sub
iret
dec
mov
retf
scas
sahf
pop
mov
das
sbb
pop
icebp
ins
jo
stos
jmp
sub
mov
dec
out
jg
outs
sbb
ret
aam
cmps
mov
inc
push
xchg
jle
test
out
icebp
out
dec
adc
jmp
icebp
xchg
push
je
fild
push
fisttp
scas
xor
cdq
popf
int3
jle
xor
retf
add
mov
xchg
inc
fcomi
xchg
mov
cdq
mov
or
mov
xor
fcomp
fwait
rcl
sub
lahf
jns
fcom
cmp
inc
adc
std
into
jecxz
inc
ss
cmp
cli
push
xor
sub
sbb
xchg
and
stos
inc
stc
mov
lds
mov
xchg
jo
xchg
fstp
sbb
mov
in
daa
mov
adc
outs
pop
ss
fdiv
cdq
loop
hlt
adc
shl
ficomp
or
pushf
xchg
std
mov
ror
pop
fstp
adc
test
jo
(bad)
sub
or
mov
mov
jo
jo
jno
out
push
xor
(bad)
(bad)
adc
pop
mov
in
nop
pop
mov
push
push
or
popa
jp
add
mov
fst
push
mov
xor
mov
jnp
shl
xchg
ss
ror
shr
push
movs
mov
iret
push
outs
test
cmc
std
les
mov
jmp
inc
sbb
(bad)
test
ds
loop
cmp
pop
ins
leave
mov
push
stos
retf
outs
push
jne
mov
or
push
sub
cli
ret
cli
mov
adc
bound
nop
mov
faddp
add
jecxz
inc
xor
stc
mov
add
jp
xlat
inc
cs
xor
(bad)
cmp
cmp
dec
lahf
sbb
movs
rcl
fistp
pop
sbb
or
test
mov
xor
xchg
adc
push
mov
mov
push
adc
jge
stc
cld
and
rol
and
lock
adc
repnz
or
jl
add
or
ja
(bad)
add
sbb
fnstenv
addr16
jbe
inc
out
cwde
das
lahf
xchg
cmp
mov
push
mov
inc
movd
ins
ficom
add
mov
xchg
dec
mov
xchg
add
xchg
xchg
cmps
or
jge
xchg
into
push
out
push
shr
adc
push
jnp
inc
cmp
cmp
mov
mov
cld
dec
add
cmp
or
jo
imul
inc
mov
pop
or
dec
xor
je
fs
jmp
lods
pop
push
sar
ror
push
fwait
outs
rcl
jmp
push
cmp
hlt
adc
in
xlat
adc
mov
mov
out
xor
mov
stc
cld
mov
pop
imul
mov
push
push
clc
mov
outs
fs
ds
cmps
and
aam
or
inc
imul
dec
fisttp
mov
(bad)
jp
pop
jnp
cmp
push
cdq
xchg
test
mov
scas
jo
pop
xchg
or
(bad)
(bad)
mov
arpl
sbb
fst
jae
add
inc
sub
and
cmps
out
mov
push
mov
lds
fmul
jl
cmp
pop
arpl
stos
jmp
xchg
lahf
sub
jmp
mov
or
std
push
fidiv
out
dec
add
cmc
sbb
aam
xor
pop
lahf
rcl
cwde
xor
xchg
clc
loop
cmp
out
iret
mov
inc
dec
xchg
push
adc
inc
add
(bad)
jg
movs
ds
dec
cmp
neg
or
ss
cmp
pusha
push
cmp
stos
(bad)
repz
(bad)
imul
bound
lea
fsubr
js
add
inc
or
(bad)
xor
fwait
add
call
mov
mov
mov
shr
(bad)
adc
jl
cmps
xchg
sti
out
mov
sub
add
test
sbb
mov
sbb
cmps
in
adc
push
cmp
in
imul
sbb
cs
daa
mov
scas
test
add
not
pop
fwait
or
mov
jo
out
pop
jecxz
xor
jmp
and
xor
jmp
push
jo
movs
test
int3
sahf
(bad)
cmps
test
dec
and
test
loop
aas
push
push
lahf
cmps
sahf
push
fcom
mov
xor
nop
lods
adc
aam
and
cmp
sbb
xor
rcr
xor
push
push
(bad)
stc
movs
pop
cli
ds
popa
jne
push
fcomp
mov
mov
sub
dec
scas
cli
in
lahf
or
and
fld
mov
shl
fs
aad
xchg
add
aam
or
retf
out
lds
xor
aam
imul
pop
in
or
lahf
retf
ficomp
dec
out
jnp
sar
neg
pushf
(bad)
push
rcr
fidiv
ss
push
or
repz
sub
retf
fstp
jns
lods
dec
mov
aad
jmp
jb
xchg
adc
add
ret
cmp
adc
jmp
sbb
pop
iret
stos
enter
jg
mov
sub
stc
pop
ret
xchg
cmp
xor
add
push
mov
mov
xchg
(bad)
pop
in
and
add
fwait
mov
mov
sar
xchg
pushf
cmp
mov
mov
or
test
(bad)
push
pop
or
inc
cmp
fldcw
dec
arpl
das
adc
pop
inc
or
xchg
frndint
les
jmp
jb
or
(bad)
and
ins
pop
int
fstp
pop
cmp
(bad)
clc
inc
xchg
loopne
dec
pop
inc
call
sbb
mov
mov
pop
pop
mov
rcr
push
ins
repz
ret
xor
push
push
(bad)
loopne
inc
retf
enter
dec
ins
and
lock
cmp
lds
iret
and
xchg
jns
jo
inc
pop
ds
mov
hlt
lods
jns
movs
retf
push
push
xor
jg
cmc
fwait
out
call
mov
sub
arpl
inc
aas
int
jge
sub
sbb
ins
fild
jb
sbb
cmc
mov
pop
dec
sbb
out
push
jbe
jb
out
cmp
movs
pop
js
or
mov
adc
sub
xchg
jmp
in
lods
lahf
adc
xor
jmp
aad
call
pop
iret
xor
out
inc
push
movs
and
mov
jg
dec
jnp
(bad)
das
test
xchg
ss
ret
jne
(bad)
or
int
cld
dec
test
scas
sbb
fucomip
rol
mov
dec
cmp
jp
dec
and
and
mov
(bad)
xor
loopne
mov
rcr
imul
xchg
fsubr
mov
add
lahf
pop
pop
pushf
(bad)
sti
pop
xlat
adc
sahf
dec
mov
jecxz
xchg
xor
xor
inc
or
jbe
xor
push
add
clc
lds
popa
(bad)
pop
mov
cmp
mov
sub
lea
loop
fsubr
stos
sbb
je
mov
mov
mov
mov
mov
pushf
das
(bad)
or
enter
mov
cmp
fst
fwait
jl
dec
or
or
fldenv
clc
fwait
add
test
popa
push
js
and
inc
dec
jmp
jmp
sbb
mul
mul
xchg
sbb
ins
push
movs
xchg
imul
mov
lahf
mov
pop
shr
and
push
push
aad
jmp
pop
arpl
or
dec
sub
xor
fiadd
adc
inc
push
fstp
pop
dec
scas
sahf
clc
add
in
adc
repz
retf
cmps
pop
jae
das
pop
inc
popf
mov
and
xchg
cmc
es
(bad)
lahf
les
or
fstp
out
in
sbb
adc
and
out
into
add
es
pop
inc
adc
repz
(bad)
retf
inc
jnp
push
pop
lea
cmp
aas
ret
ss
sbb
mov
xlat
pop
add
sbb
add
repnz
arpl
loope
mov
shl
mov
stos
mov
adc
pusha
jbe
mov
fist
pop
push
pop
inc
loope
cmp
(bad)
fstp
xlat
jmp
cs
pop
fcmovb
ds
mov
repz
xchg
jb
call
idiv
and
shl
or
xchg
jle
pop
adc
out
cwde
ja
arpl
mov
xchg
(bad)
and
xor
mov
add
repz
jge
pusha
and
mov
mov
mov
scas
jecxz
out
out
sti
jmp
es
push
fcmovne
mov
das
cmp
pop
out
(bad)
retw
jbe
and
scas
ins
mov
xchg
cmps
push
push
mov
dec
push
mov
add
ja
shr
pop
jbe
popa
pop
(bad)
xchg
stc
mov
pop
pop
call
push
pop
mov
dec
retf
mov
pop
mov
and
int3
in
xor
repnz
xchg
aad
jp
stos
mov
call
xchg
(bad)
fbld
mov
fidiv
out
push
push
mov
sbb
adc
adc
std
cli
popa
aas
imul
aam
pop
movs
clc
xchg
and
test
add
stos
aam
ret
cmc
sub
pop
sub
jecxz
xchg
sbb
xchg
pop
or
test
xchg
xchg
lea
das
cmp
out
jmp
ins
xor
jge
hlt
clc
mul
add
les
stos
or
cmc
movs
and
mov
pop
pop
iret
mov
sbb
and
movs
and
add
xchg
mov
inc
call
inc
sub
lea
repnz
mov
les
mov
pop
mov
fisub
lods
lock
rcr
pop
rcl
test
mov
ret
popa
pop
ds
(bad)
(bad)
fist
gs
repz
(bad)
repz
push
inc
(bad)
ins
out
mov
(bad)
sbb
push
sub
inc
push
mov
shl
mov
ins
push
jg
pop
fsub
loop
xor
dec
in
scas
xor
rcr
cmc
dec
mov
(bad)
xchg
jne
les
and
pop
ds
out
xor
xchg
dec
inc
es
sahf
or
ret
add
pop
movs
es
cmp
sub
cmps
fld
sub
pusha
pop
mov
mov
add
mov
scas
call
mov
xchg
xchg
sub
ins
pusha
adc
mov
add
rol
add
scas
or
scas
jbe
dec
sbb
add
xchg
retf
scas
pop
sub
gs
outs
mov
jecxz
mov
add
fst
fisttp
icebp
mov
dec
lds
pop
push
shl
aaa
mov
mov
(bad)
fxch
jl
xchg
sub
movs
inc
adc
out
or
xchg
jns
and
push
ins
jle
out
enter
xchg
mov
fst
in
jne
or
sar
ins
mov
cmps
movs
push
add
inc
pushw
fiadd
inc
push
sub
stos
inc
imul
xchg
sub
leave
in
add
inc
outs
ret
jne
pop
dec
pop
push
add
sbb
push
and
clc
dec
pop
inc
xor
sahf
cdq
sbb
and
mov
iret
add
fimul
xor
inc
pusha
add
push
inc
jns
into
(bad)
jns
movs
xchg
data16
enter
fiadd
int3
push
jecxz
dec
push
xlat
sbb
add
push
pop
pop
pop
jg
pop
mov
mov
mul
clc
mov
leave
in
xchg
push
fsubrp
mov
fwait
and
push
dec
in
ficom
lods
mov
push
in
adc
cmp
test
in
movs
dec
cmc
in
jp
mov
jae
test
and
and
mov
gs
pop
inc
fld
addr16
jae
ret
mov
loopne
fwait
push
push
adc
ret
sub
jge
or
iret
dec
jge
mov
stc
popa
pop
hlt
xchg
dec
inc
xchg
push
shl
jns
mov
xchg
adc
xchg
iret
cs
jbe
mov
sbb
inc
dec
pushf
jle
int3
cmp
out
and
icebp
js
retf
repz
push
jecxz
mov
stos
outs
addr16
jl
push
aas
nop
pop
bnd
xor
jnp
xchg
shr
retf
xor
cli
lods
fdivr
push
xor
mov
dec
out
(bad)
inc
pop
ja
jo
loopne
test
jno
mov
cmp
lahf
inc
push
fwait
pop
add
scas
enter
jo
sbb
fimul
jae
(bad)
jo
dec
test
in
mov
movs
inc
call
test
test
xor
sbb
or
std
in
clc
pushf
add
inc
rol
aas
cmps
pop
mov
add
xchg
ror
cwde
sbb
cmp
mov
mov
(bad)
push
pop
pop
dec
pop
mov
sbb
push
adc
xchg
out
jo
imul
xor
push
jbe
lock
outs
aad
jbe
pop
lds
lods
or
or
aam
sub
lock
aam
je
push
pop
mov
int3
lods
movs
scas
sbb
jecxz
cmp
sbb
sub
jbe
jmp
sub
fsubr
je
pop
fwait
jno
(bad)
(bad)
mov
cmp
enter
sub
xchg
inc
repnz
sbb
ins
jmp
push
mov
cmp
inc
push
ins
je
fucomip
mov
aam
xor
and
dec
mov
push
dec
add
add
jmp
inc
pop
sar
mov
aaa
out
enter
pop
cmc
mov
outs
push
(bad)
push
outs
enter
retf
xchg
mov
stos
or
mov
in
sbb
and
push
popa
std
ins
add
adc
aaa
push
je
push
cmp
add
pop
jle
dec
xlat
mov
ds
test
jmp
icebp
or
push
sub
pusha
js
mov
loope
xlat
test
gs
loope
sahf
sub
inc
cmc
sub
inc
loope
out
fldcw
in
out
push
fcomp
jl
dec
out
neg
mov
inc
xchg
mov
fidiv
fist
sar
sbb
xor
pop
test
fwait
push
add
lods
test
xchg
inc
mov
repnz
js
cli
jp
jle
xchg
sar
inc
xchg
cs
or
test
adc
aam
addr16
pop
xchg
jl
sbb
cmp
dec
mov
shr
inc
cdq
(bad)
fistp
mov
and
dec
imul
jmp
inc
mov
sub
fs
jl
push
push
dec
out
sbb
mov
mov
xor
ret
push
mov
dec
je
hlt
sub
fisub
das
lods
loope
or
mov
out
cdq
cs
mov
jo
push
repnz
sub
mov
jnp
out
rcr
or
push
mov
fild
in
and
adc
fisubr
(bad)
hlt
ret
jle
je
sub
cs
ret
dec
mov
sub
cmp
sti
push
adc
retf
mov
pop
sub
retf
mov
inc
dec
popf
fidivr
ins
neg
add
and
jmp
cmp
leave
cdq
sbb
sbb
stc
dec
xor
xchg
jne
or
in
lea
jno
add
int3
mov
call
fcom
iret
addr16
push
(bad)
mov
inc
pop
pusha
out
bound
js
add
(bad)
push
fidivr
sbb
xchg
push
aaa
std
ret
push
(bad)
(bad)
dec
pushf
retf
jae
or
or
push
loopne
dec
and
mov
push
inc
inc
sub
push
je
lock
mov
popf
mov
pop
fst
nop
inc
mov
sbb
fcmovne
fnstcw
dec
lods
ja
xor
cdq
mov
nop
pushf
inc
adc
das
xor
mov
adc
cli
and
inc
lahf
mov
(bad)
cld
sti
adc
mov
into
cmps
(bad)
inc
in
loopne
imul
neg
push
loopne
inc
sbb
out
dec
cmp
rcl
mov
out
(bad)
xlat
mov
ins
test
xchg
sub
sbb
pushf
cmc
ret
add
sub
sbb
jno
shl
shl
inc
jmp
push
into
jae
xor
pop
xor
imul
sti
xchg
lahf
inc
ficom
outs
sub
das
fist
xchg
mov
mov
cmp
cli
mov
jmp
out
push
push
fisttp
mov
ds
pop
push
mov
sub
adc
fadd
dec
ins
lods
mov
test
mov
nop
mov
fsubp
add
xchg
mov
pop
pop
sub
das
repnz
push
daa
rcl
ins
in
repz
fldenv
arpl
push
out
imul
xchg
mov
xor
inc
pusha
test
loopne
lahf
add
test
add
sti
lea
or
cmp
retf
outs
(bad)
sbb
sbb
sbb
jmp
je
cs
xor
xor
in
imul
mov
pop
jge
aas
mov
int
fistp
sub
jae
mov
std
and
lock
adc
cmp
and
xor
(bad)
xor
push
sti
rcl
mov
inc
adc
xchg
scas
cmp
loop
(bad)
cli
push
mov
stos
popf
pop
inc
mov
fwait
or
jb
adc
lea
push
addr16
jge
in
jmp
iret
repz
cli
push
adc
jb
dec
jmp
sbb
cmp
dec
ins
and
xchg
rol
lods
jl
inc
inc
and
pop
fst
lods
ins
push
jne
movs
cwde
dec
cmp
stos
cmp
xchg
push
push
cdq
or
mov
xchg
sub
adc
pop
ftst
xor
test
leave
sbb
mov
mov
inc
push
test
fisub
gs
outs
int
neg
mov
test
pop
sbb
in
or
int
cmp
(bad)
fsub
adc
mov
jne
test
jmp
jo
pop
shl
nop
xchg
(bad)
repnz
fwait
xchg
add
sbb
aam
mov
adc
lods
out
mov
repnz
inc
and
mov
dec
jo
ret
arpl
jl
leave
inc
(bad)
popf
fiadd
les
loopne
cmps
xor
jbe
cmps
pop
mov
mov
std
mov
enter
fucomi
iret
mov
push
nop
dec
pop
add
or
es
(bad)
mul
push
pushf
mov
bound
stc
push
mov
jnp
xchg
scas
xor
xor
or
pop
push
mov
test
js
xor
jge
xchg
mov
(bad)
out
push
add
inc
pushf
push
mov
in
repnz
sub
and
sub
inc
sub
xor
xchg
mov
mov
outs
fdivr
dec
mov
sub
cmp
mov
mov
pop
sti
imul
xchg
jl
sbb
pusha
fild
jbe
pop
sbb
(bad)
(bad)
push
daa
jb
sub
mov
loop
ja
in
(bad)
mov
cmp
sub
mov
out
push
mov
xlat
and
jno
xchg
outs
push
jecxz
dec
mov
xor
and
and
xchg
inc
sub
mov
daa
call
jle
ins
jns
add
scas
and
sub
bound
imul
dec
add
js
jno
aam
cmp
js
mov
mov
icebp
pop
mov
cld
push
dec
inc
jecxz
mov
pop
sbb
ds
out
aam
cmps
or
loopne
cmp
aaa
addr16
fidivr
popfw
cmp
sbb
icebp
xor
xor
aad
pop
and
jp
(bad)
out
cli
fdivrp
sub
lods
pop
cmp
jecxz
inc
xor
add
push
xor
scas
into
mov
and
jge
adc
arpl
adc
xor
mov
add
sbb
div
int
xor
dec
add
test
data16
push
sbb
je
sbb
inc
in
dec
arpl
xor
sbb
mov
rcl
adc
and
mov
int3
mov
out
aas
call
in
(bad)
out
mov
mov
int
(bad)
or
nop
pop
mov
nop
push
enter
test
xor
dec
sar
sti
pop
bound
mov
mov
movs
inc
sbb
ja
scas
jae
pop
(bad)
sbb
xchg
ror
adc
clc
xlat
dec
add
mov
adc
lock
and
sub
out
das
pop
iret
push
xchg
xor
dec
xchg
cmp
or
(bad)
retf
and
xchg
add
pop
outs
or
dec
cmp
and
add
les
ins
jae
dec
add
sbb
sahf
or
pop
mov
aam
jnp
imul
pop
movs
add
je
xchg
xchg
stc
or
popa
stos
jg
rol
test
push
(bad)
enter
push
push
lock
mov
jg
add
mov
dec
(bad)
mov
repz
dec
and
nop
cmps
(bad)
add
pop
mov
sub
mov
mov
in
jecxz
inc
push
repnz
push
xor
dec
dec
mov
loope
mov
cmp
xchg
jae
jno
cmp
cmp
ss
pop
and
push
mov
imul
or
ss
out
dec
sbb
stos
lea
out
pop
scas
jne
jmp
xor
cmp
ss
mov
xchg
mov
xlat
shl
sub
movs
in
push
dec
jne
adc
jp
loop
adc
js
outs
inc
out
mov
or
xor
lods
pop
inc
ja
adc
mov
sbb
shl
sbb
and
ja
cdq
inc
jmp
mov
and
mov
cdq
adc
dec
fwait
and
add
jmp
mov
movs
aaa
ficomp
mov
fild
jae
pusha
pusha
aad
add
and
sti
fild
xchg
outs
jnp
push
outs
cmp
gs
scas
and
cwde
or
jae
mov
fld
stos
mov
and
mov
mov
push
cli
cmp
(bad)
in
inc
arpl
inc
jl
loope
das
aas
loopne
mov
or
sbb
pop
(bad)
rcl
es
(bad)
into
push
test
push
or
jmp
popf
scas
clc
arpl
xor
xchg
adc
outs
in
fldenv
or
fdiv
mov
dec
xor
inc
(bad)
and
das
lock
lods
sbb
aam
jne
das
outs
call
jnp
jb
cmp
fisub
adc
js
and
mul
int
test
xchg
mov
dec
lods
lock
out
and
cmps
lods
push
jle
retf
leave
pop
push
prefetchw
inc
adc
test
pusha
inc
jb
mov
jmp
ins
cmp
xchg
cmp
xor
mov
add
aaa
or
fs
(bad)
xlat
push
add
call
cmp
xchg
ror
mov
mov
dec
cdq
outs
add
jo
clc
shl
cmps
add
sbb
test
shl
inc
or
int
mov
(bad)
test
nop
test
test
push
jp
cmp
dec
lock
adc
sbb
int3
lea
ss
push
xor
dec
mov
add
sub
and
mov
ror
(bad)
cmp
adc
or
stos
sbb
sbb
xchg
ss
pop
mov
pop
retf
out
push
bound
mov
ss
and
xor
lods
cmp
mov
scas
push
icebp
jbe
retf
repnz
les
enter
pop
call
(bad)
sbb
xor
xchg
enter
daa
xor
push
neg
mov
jno
xor
hlt
pop
mov
dec
mov
jle
sub
mov
popa
das
mov
mov
add
hlt
cmps
sahf
mov
pop
jns
jno
ins
jnp
fs
mov
cmp
mov
inc
push
into
mov
push
push
mov
call
mov
(bad)
add
mov
test
xchg
adc
dec
shl
(bad)
xchg
fwait
icebp
sub
div
jg
and
xchg
mov
mov
jle
leave
cld
fnstsw
outs
mov
out
push
mov
stos
cmp
push
les
mov
push
fild
inc
adc
(bad)
sti
test
test
retf
call
push
loope
rcl
mov
repz
(bad)
fldcw
mov
into
int3
xor
aas
sbb
sub
retf
es
jmp
ja
adc
jnp
pop
scas
popa
pop
push
iret
pushf
inc
cmp
and
jae
das
loopne
inc
jmp
retf
push
xchg
xchg
pop
mov
inc
mov
inc
cmp
out
adc
(bad)
mov
out
jmp
test
dec
ret
inc
repnz
push
or
push
imul
sub
(bad)
retf
push
iret
ins
cwde
(bad)
fisttp
bound
mov
test
inc
jecxz
bound
mov
sub
sub
jnp
mov
mov
arpl
jae
xor
mov
push
mov
mov
mov
xrelease
data16
nop
fdiv
popa
jl
ins
push
cmp
repnz
sbb
pop
imul
enter
fsubr
push
out
inc
mov
cld
cwde
sti
outs
sbb
or
push
mov
mov
jmp
fist
adc
adc
push
ds
and
push
inc
stc
jecxz
(bad)
push
(bad)
jmp
mov
add
sti
int3
sbb
nop
mov
loopne
dec
setge
cli
arpl
pop
in
push
jbe
xor
lea
jns
jbe
int3
mov
outs
lock
cdq
sbb
adc
dec
dec
int3
adc
dec
pop
loopne
xchg
push
push
stos
(bad)
push
sub
fiadd
addr16
inc
mov
daa
aad
dec
shl
sbb
push
in
push
ds
data16
cmp
test
inc
stos
int3
lds
xchg
mov
or
push
cld
out
movs
cmp
mov
mov
mov
push
xlat
xchg
jmp
aad
jae
cmps
mov
js
movs
sbb
pop
or
pop
sbb
cld
mov
push
jnp
imul
xchg
cld
sysret
mov
imul
or
adc
jmp
adc
(bad)
sbb
retf
and
push
jae
adc
dec
push
mov
frstor
adc
xchg
mov
jmp
add
test
add
push
xchg
loope
and
jmp
fcom
aaa
sti
movs
call
inc
popf
push
sub
mov
inc
stos
ins
fstp
sub
xchg
mov
mov
xchg
(bad)
push
out
sbb
mov
jmp
popf
and
test
jbe
mov
xor
mov
enter
out
je
add
push
mov
fld
jne
(bad)
jo
add
push
addr16
sbb
cmp
outs
mov
loopne
ds
bound
cmp
imul
sbb
jbe
fst
sbb
dec
jno
mov
xchg
lods
pop
not
inc
imul
pop
loop
retf
cmps
dec
rol
jne
mov
push
mov
mov
inc
out
mov
fnstcw
cs
imul
scas
adc
adc
dec
mov
push
out
jle
addr16
(bad)
les
cdq
ss
sub
xchg
xchg
add
xchg
jecxz
pop
inc
pop
sbb
dec
loopne
jmp
das
inc
mov
xor
add
jns
jne
cmps
dec
les
lods
repnz
xchg
aad
jle
popf
dec
test
lock
enter
push
push
lds
mov
xor
inc
pop
xchg
cmp
inc
add
xchg
test
dec
push
add
cli
mov
cmp
mov
mov
xor
fsubr
inc
or
sti
mov
pop
sub
jmp
(bad)
and
stc
in
test
mov
js
add
mov
inc
rol
xor
sbb
shr
mov
xchg
out
mov
xchg
jae
scas
ret
gs
jl
shl
add
mov
aaa
in
xor
fimul
lock
hlt
xchg
test
xor
loopne
call
imul
movs
adc
mov
iret
push
test
pop
cmc
data16
push
sbb
mov
and
inc
mov
(bad)
cmps
xor
out
scas
inc
out
stos
jmpw
iret
stc
lds
mov
sub
xor
mov
sbb
and
pop
aad
mov
mov
lea
fwait
sub
add
jge
or
push
loope
les
sbb
scas
xchg
cmc
loope
in
aas
daa
out
sbb
sub
fsub
add
xchg
or
xor
call
ins
pop
shr
cmps
iret
mov
xlat
jge
push
mov
push
add
pop
mov
cmp
call
sub
aam
pop
(bad)
iret
and
jno
gs
pushf
jb
mov
or
add
repz
int
mov
xor
loopne
test
scas
jae
sub
aam
lods
retf
ror
pop
pushf
int
pop
jae
dec
test
scas
(bad)
jmp
bswap
mov
sbb
movs
inc
sub
push
cmc
sbb
adc
and
out
test
jecxz
mov
jmp
or
xchg
dec
cmp
pop
or
push
or
inc
(bad)
adc
sbb
sbb
xchg
mov
dec
and
sub
xchg
jmp
and
aaa
shl
dec
jns
sbb
pop
das
lds
inc
cld
sub
jae
mov
mov
sub
mov
or
call
xor
retf
and
fsubr
pop
outs
stos
cld
(bad)
out
xchg
clc
push
in
xchg
push
mov
or
pop
cli
test
or
adc
retf
jo
jecxz
mov
dec
sub
scas
inc
jge
shr
clc
stos
ins
adc
add
pop
pop
stos
sub
and
adc
(bad)
test
sub
clc
dec
sbb
nop
jecxz
movs
mov
mov
sub
dec
(bad)
inc
out
addr16
(bad)
pop
add
std
fldenv
sbb
pop
xchg
mov
and
cmp
ret
xor
add
inc
ja
xor
xor
fwait
pop
lods
rcr
jge
popf
xor
es
cs
xor
xor
mov
inc
iret
mov
mov
adc
inc
retf
sub
js
stos
aam
mov
xchg
mov
arpl
adc
mov
dec
dec
or
fcom
jo
ss
icebp
loop
ror
pop
test
xchg
mov
call
aam
mov
sub
test
data16
xor
outs
xor
pop
jb
pop
sub
and
test
int
lahf
jmp
pop
ja
sub
out
stos
(bad)
mov
sub
ret
and
pop
lea
aad
sub
sbb
shl
cli
jbe
leave
add
jge
cmp
call
adc
shl
movs
cmp
add
shl
fistp
jmp
and
ror
adc
jecxz
retf
xor
jnp
out
push
mov
popf
int
xor
push
mov
fild
xor
pop
push
push
and
jb
push
push
dec
stc
nop
test
xor
push
or
adc
xor
or
pop
inc
jbe
shr
ret
push
aad
repz
outs
data16
or
push
mov
pop
pop
imul
add
lods
fstp
or
ss
cli
test
xchg
lock
mov
adc
dec
lods
stc
jnp
push
mov
mov
enter
inc
pop
pop
push
jnp
mov
ins
je
sbb
cs
mov
push
ret
scas
bound
aaa
mov
mov
or
or
and
xor
or
es
movs
sti
data16
or
mov
ins
in
sub
loop
int3
jns
xchg
xlat
cmp
mov
retf
and
rcl
and
jae
in
xchg
inc
fld
and
retf
bound
pusha
repnz
jo
gs
ficomp
xlat
adc
jmp
push
mov
mov
mov
inc
inc
ret
xchg
(bad)
xor
push
aaa
retf
ret
movs
inc
ficom
mov
adc
lds
icebp
inc
outs
push
push
imul
mov
rcl
imul
xchg
scas
lahf
mov
mov
pop
aam
jp
stos
add
dec
mov
push
or
lahf
jae
(bad)
cmp
dec
in
popa
retf
fwait
push
ins
and
jge
ror
add
mov
test
jnp
adc
cmps
jmp
out
leave
(bad)
rol
mov
inc
sti
jno
clc
xchg
dec
enter
cmps
mov
inc
mov
cs
mov
(bad)
xor
push
jae
dec
js
clc
mov
xchg
int3
lds
mov
shl
mov
gs
enter
xchg
outs
mov
xor
retf
mov
jo
push
out
push
mov
arpl
and
mov
call
test
fcom
(bad)
aam
aas
add
dec
lea
xor
enter
retf
fst
cli
nop
popf
xlat
cmp
retf
fstp
mov
pop
xchg
jns
dec
(bad)
push
xchg
cmp
and
popa
ins
mov
lock
mov
retf
sbb
in
popf
cli
xor
xor
stc
push
inc
rcr
xor
xor
mov
push
and
sub
ss
popf
jns
loopne
ja
test
inc
sbb
sub
inc
xchg
mov
adc
xchg
sbb
lock
mov
je
test
mov
ins
cmps
xchg
popf
adc
dec
mov
jae
test
je
sbb
cmps
sub
pusha
fld
xor
(bad)
(bad)
ficomp
mov
ja
xchg
pop
neg
je
inc
xor
or
iret
cdq
sti
arpl
lods
xor
add
push
in
ret
jecxz
loopne
and
adc
and
sti
pop
push
sub
jmpw
jo
bound
fmul
or
mov
cdq
test
xchg
sar
ss
push
shr
xchg
add
test
mov
stc
and
xor
retf
dec
(bad)
test
lock
ja
xchg
fst
into
pop
cmc
pop
(bad)
in
lahf
xlat
std
add
popf
sbb
mov
pusha
std
xchg
scas
call
out
cmp
ror
xor
mov
in
stos
add
repz
dec
data16
mov
fbstp
sbb
dec
sub
xchg
pop
loop
jnp
nop
inc
xchg
dec
int3
aaa
aaa
enter
pop
shr
arpl
jecxz
add
lahf
fcomp
lea
dec
pop
js
jb
int3
icebp
imul
dec
dec
mov
fcomi
ret
rcr
jno
mov
cs
and
push
jns
test
jle
cli
and
fbstp
popf
push
add
ss
popa
pushf
mov
mov
dec
jb
fiadd
movs
fiadd
adc
mov
push
lods
mov
test
call
or
pop
mov
scas
sub
movs
loop
out
loop
retf
test
adc
in
cdq
push
inc
push
dec
inc
fisttp
push
add
sub
mov
popa
inc
iret
mov
loope
mov
lea
sbb
std
call
pop
adc
sbb
sbb
js
sub
fcmovne
mov
ret
xchg
adc
and
push
push
inc
push
pop
xor
fidivr
adc
mov
dec
lods
jecxz
in
inc
jp
push
adc
jbe
(bad)
loope
pop
icebp
pop
loopne
xor
jnp
lods
lock
cmp
add
mov
outs
icebp
ror
out
nop
pop
cdq
pop
dec
in
mov
hlt
popf
outs
cs
sahf
pop
add
daa
out
fstp
and
sub
jmp
inc
inc
mov
pop
(bad)
lea
inc
jnp
mov
mov
imul
aad
push
jge
mov
js
loop
outs
ins
jnp
pop
mov
cmp
sahf
jmp
mov
or
loop
(bad)
or
ds
sbb
mov
inc
outs
add
mov
test
fwait
pusha
xchg
mov
cs
mov
add
scas
and
cmps
aaa
sub
js
jbe
inc
ja
adc
xor
fwait
popf
and
or
fmul
xchg
pop
mov
pop
dec
sub
push
jecxz
xlat
shl
jl
adc
jl
js
mov
jb
stc
and
pop
sub
das
jmp
enter
xchg
pop
mov
push
rcl
mov
cmp
pop
dec
pop
cld
in
mov
xchg
xcrypt-cbc
cmps
aam
inc
lds
adc
jnp
pop
ds
ss
sbb
xchg
xor
setp
dec
jns
or
in
push
out
jmp
adc
dec
add
loope
mov
adc
dec
add
push
stos
mov
mov
call
mov
(bad)
sbb
in
inc
jno
mov
call
shl
xchg
test
push
dec
or
fsub
xchg
add
cmps
or
and
xor
fwait
popf
or
sbb
inc
inc
rcl
or
into
inc
xchg
and
mov
popa
outs
inc
mov
and
rol
push
mov
jns
adc
cs
sbb
jmp
ss
adc
call
mov
popf
dec
inc
jle
je
cdq
push
pop
jecxz
dec
xor
jge
fsub
or
fsub
sub
mov
cwde
std
mov
adc
pop
clc
ret
push
test
sub
in
push
or
mov
mov
scas
sbb
inc
mov
xchg
mov
pop
dec
sbb
mov
adc
shr
mov
fs
clc
fnstenv
xchg
arpl
jecxz
add
xor
mov
into
imul
cld
sub
jns
adc
scas
jg
cmps
add
sub
retf
enter
and
push
cmp
xor
mov
inc
dec
test
ins
call
call
mov
sbb
jns
push
and
jmp
mov
sub
inc
adc
in
mov
mov
xchg
sbb
pop
jb
mov
(bad)
inc
jae
dec
icebp
mov
pop
add
xchg
jp
jnp
sahf
and
jmp
mov
jle
jmp
out
enter
sub
pop
push
inc
popa
into
sahf
jmp
shl
in
push
call
xor
sbb
and
test
cmp
in
mov
or
jle
and
fimul
jp
cmp
movs
jp
mov
enter
call
ja
retf
mov
inc
xor
repnz
or
mov
adc
es
jmp
inc
sbb
sbb
rcr
adc
jge
inc
pusha
xor
icebp
inc
movs
stos
sbb
or
cmps
imul
popa
das
sahf
fucomp
call
cmps
fldenv
ret
mov
adc
mov
mov
xchg
and
ja
stc
xchg
out
adc
out
fdivrp
aas
inc
aad
pop
adc
(bad)
add
xchg
fucomi
mov
fsub
dec
cmp
popa
jle
sahf
mov
cs
jbe
push
in
push
(bad)
leave
dec
loop
repz
call
jo
scas
dec
fdivr
movs
leave
adc
pop
sbb
inc
push
rcl
adc
repnz
popa
mov
sbb
neg
adc
in
mov
call
pop
ficom
add
mov
rcl
mov
mov
pop
and
sbb
(bad)
scas
lock
imul
xor
xchg
push
out
or
adc
arpl
inc
or
add
xchg
pop
std
cmovae
sub
mov
jne
imul
ret
and
fwait
sbb
xor
xchg
(bad)
jbe
jge
push
cmps
pop
stos
mov
mov
xchg
push
cmp
dec
sbb
cmp
add
mov
mov
sub
aad
fdiv
mov
cmp
call
and
sub
push
inc
xlat
mov
fdivr
sub
inc
jbe
and
sub
sub
cli
cmp
adc
ret
inc
jbe
or
icebp
aaa
sbb
sbb
dec
loop
mov
fnstcw
inc
inc
outs
lods
in
pop
xor
fsubr
arpl
xor
jb
leave
and
cmp
dec
pop
mov
mov
or
lds
jmp
push
sbb
ss
into
js
mov
xor
mov
sub
ret
push
and
mov
cmp
sub
dec
lahf
and
cmp
popa
int3
daa
ss
dec
out
stos
fcomp
pop
inc
and
inc
cld
rcl
pop
pop
loope
cld
iret
cld
ss
add
push
lock
dec
stos
ror
inc
xor
jmp
gs
dec
jb
inc
fwait
movs
or
add
push
sub
int
jnp
adc
mov
adc
mov
xchg
pop
push
push
mov
test
test
push
push
dec
pusha
mov
pop
push
sub
out
arpl
fcom
les
into
adc
inc
stos
push
stc
outs
dec
sub
fisttp
push
lds
iret
outs
aas
mov
test
or
fldcw
push
mov
mov
outs
mov
push
xchg
xlat
int
push
shr
push
movs
(bad)
stc
sbb
cwde
mov
cmps
outs
into
xchg
lods
dec
sti
retf
xor
mov
cli
paddq
inc
sar
xor
xor
aam
mov
call
adc
cmps
and
loopne
cwde
or
ret
mov
xor
bound
push
push
mov
dec
ins
push
push
xor
cmp
jbe
inc
jns
les
aaa
or
sub
dec
mov
and
mov
out
fild
mov
stos
dec
rol
push
add
inc
jb
sbb
sbb
js
mov
jne
xchg
xor
daa
dec
adc
sbb
jl
mov
mov
test
mov
scas
mov
mov
jno
sbb
fsub
cmp
and
xor
adc
rcr
push
pop
imul
nop
and
sub
cs
and
jnp
loopne
xchg
fstp
out
and
loopne
xor
std
add
fs
aas
sbb
mov
push
sbb
out
test
mov
in
xor
sbb
lock
and
mov
cmps
xchg
xor
mov
fwait
ins
sbb
(bad)
sbb
scas
add
cld
or
stos
push
pop
data16
loop
dec
push
cli
mov
pop
sub
jge
dec
and
stc
push
sub
aam
(bad)
(bad)
xor
pop
pop
jmp
(bad)
mov
cs
mov
les
mov
jp
and
retf
mov
push
pusha
out
leave
mov
and
or
popf
sets
and
sbb
lea
sub
fisubr
(bad)
sbb
sbb
lods
dec
sbb
das
arpl
cmp
stc
(bad)
and
mov
in
dec
jmp
out
jl
xor
mov
pushf
push
(bad)
push
mov
mov
sar
jo
or
or
data16
jge
cmp
cmps
pop
jb
mov
xor
repz
jbe
inc
loope
and
nop
fldcw
push
int3
mov
mov
shl
rcl
lds
fcom
xor
mov
cmp
scas
adc
(bad)
or
mov
add
mov
dec
dec
cs
mov
clc
out
cld
push
sbb
shl
xor
out
mov
and
mov
mov
clc
jnp
sbb
dec
push
cmps
or
mov
pop
cmp
jns
test
push
mov
shl
mov
scas
xchg
mov
and
push
(bad)
fidivr
and
or
and
iret
movs
add
mov
hlt
jne
mov
cli
test
daa
dec
sub
ins
popa
mov
sub
(bad)
xor
inc
or
inc
mov
or
jge
sti
pop
inc
xor
out
inc
xchg
gs
es
xchg
stc
and
push
mov
xchg
xor
es
int3
mov
or
in
stc
loopne
mov
pop
pushf
mov
pop
lds
and
xor
(bad)
add
push
enter
lea
rol
and
cmps
fidiv
push
arpl
ret
push
jne
mov
fwait
mov
jl
xor
pushf
push
cmps
xor
outs
xchg
fcmovb
add
and
xor
cmps
cmp
xchg
(bad)
xor
fisttp
mov
enter
movs
pop
pop
mov
daa
mov
lods
adc
push
aas
outs
fcmovnb
ret
pop
(bad)
rol
iret
lahf
std
fild
(bad)
push
inc
bswap
push
(bad)
mov
jne
and
jae
cmp
inc
or
popf
and
mov
xchg
repnz
loopne
sbb
jmp
in
ss
inc
dec
xor
gs
(bad)
mov
(bad)
jmp
xchg
scas
and
nop
aas
cmps
adc
jmp
jl
mov
icebp
retf
imul
arpl
push
pop
popa
ret
push
pop
addr16
adc
stc
ins
inc
pop
ret
or
sar
sub
adc
pop
ins
popf
dec
xor
fs
push
mov
and
fidivr
sub
adc
mov
jecxz
pop
call
dec
repnz
cmps
imul
adc
jo
sbb
fwait
xor
jge
cmp
sub
adc
dec
aas
mov
dec
pop
frstor
pop
push
add
dec
jmp
out
sub
test
mov
lahf
adc
dec
movs
jns
sub
xor
sbb
jecxz
mov
aaa
adc
iret
pop
in
inc
xchg
ins
add
pop
inc
fld
add
inc
mov
je
pop
(bad)
js
fcomp
loope
inc
jge
call
out
int
push
inc
shl
int3
xor
xor
mov
(bad)
dec
push
out
xor
(bad)
dec
loopne
fdivrp
xchg
popa
jge
lea
cmp
add
out
lahf
pop
inc
dec
out
inc
inc
add
jge
pop
push
lahf
and
sub
fld
jp
mov
loop
bnd
idiv
push
jb
mov
nop
imul
pop
jnp
fcomp
pop
push
push
aad
push
push
mov
cli
(bad)
push
fdiv
push
mov
repz
push
scas
in
jns
ja
mov
add
jae
aas
in
pop
xor
shl
add
icebp
adc
neg
nop
xchg
and
jle
push
outs
or
inc
in
enter
mov
jecxz
call
lahf
jl
mov
lea
sub
sahf
jno
pop
mov
push
add
sbb
jno
pushw
out
and
mov
aad
ins
in
pop
inc
and
sub
dec
lods
jno
cli
xchg
push
jo
mov
fistp
test
add
xor
les
rcl
idiv
popa
std
push
mov
sbb
add
leave
sub
addr16
es
cmp
(bad)
aaa
or
movs
shr
sar
mov
mov
out
loope
mov
jmp
rcr
mov
sti
out
add
jl
or
dec
mov
xchg
fs
mov
jp
cmps
and
push
imul
call
jl
mov
retf
sti
xor
ud0
add
popa
or
dec
adc
sbb
(bad)
push
or
mov
jnp
fnsave
mov
mov
add
loop
adc
or
mov
into
pop
inc
xchg
push
jp
add
enter
repnz
mov
outs
outs
cdq
pop
sub
adc
push
call
mov
mov
test
ins
inc
jno
test
dec
xchg
push
push
mov
das
add
popf
rep
pushf
jnp
inc
xlat
retf
xor
fist
push
scas
arpl
adc
pusha
gs
rol
add
push
cmp
dec
mov
js
sub
mov
fdivr
add
or
je
mov
data16
lods
aaa
xchg
and
mov
mov
xor
ja
loope
adc
aad
push
cmp
movs
dec
call
nop
out
xchg
xchg
dec
push
retf
push
test
jmp
fwait
mov
out
aaa
push
or
jae
sbb
imul
in
in
jl
gs
(bad)
jns
jo
ss
push
add
dec
or
nop
daa
jge
or
pushf
addr16
push
aaa
or
or
pop
into
add
and
sub
(bad)
shr
sub
sbb
aad
rol
daa
jnp
(bad)
loopne
mov
or
ds
pop
pop
in
or
xchg
icebp
out
fst
push
loopne
cld
fcomp
jecxz
inc
(bad)
icebp
jns
ret
test
rol
icebp
mul
data16
jmp
(bad)
mov
xor
pop
jmp
push
mov
pop
dec
addr16
jae
ins
enter
loope
xlat
mov
pop
adc
repnz
stc
stos
enter
int
jb
add
jmp
pop
pusha
push
enter
jb
mov
mov
addr16
add
pop
mov
pop
xor
gs
xchg
or
(bad)
jmp
(bad)
mov
or
aaa
into
fisttp
(bad)
into
loop
xor
test
in
add
stc
aaa
test
xchg
test
xchg
sub
pop
rol
retf
out
dec
es
sub
pusha
pop
xor
retf
pop
retf
adc
adc
lahf
mov
iret
out
xchg
add
or
mov
and
rcl
aam
test
sbb
bound
push
dec
add
in
dec
(bad)
arpl
add
fcomp
hlt
outs
pop
jg
cmp
xor
icebp
add
mov
cli
test
fld
mov
push
pop
retf
inc
stc
mov
lds
fldenv
scas
xor
sbb
mov
fdiv
les
mov
aad
jb
call
test
inc
in
das
dec
pop
adc
inc
pop
and
and
jge
and
pop
inc
mov
dec
sub
out
xchg
jbe
or
rcr
mov
ins
jb
scas
pop
fmul
aad
test
xchg
(bad)
dec
xor
stos
jne
sub
and
fisubr
stos
mov
loop
das
mov
js
inc
add
leave
xor
pop
cld
test
xor
in
mov
dec
mov
pop
sbb
jle
cmp
inc
and
jbe
mov
lods
jecxz
in
lahf
adc
sub
inc
pop
adc
aaa
push
or
xchg
sbb
dec
jo
sub
inc
add
int
push
adc
mov
xchg
dec
pop
mov
jb
(bad)
adc
call
sub
sub
add
xlat
(bad)
mov
hlt
pop
jle
dec
push
aaa
inc
les
loop
movs
in
or
add
in
es
fs
pop
mov
jne
cmp
and
movs
loop
inc
xchg
pop
jge
xlat
jno
ret
call
adc
cs
pop
add
inc
scas
sub
sbb
repz
(bad)
push
enter
lods
stos
iret
les
sahf
bndldx
and
dec
jl
push
adc
cmp
int3
arpl
gs
iret
push
adc
push
daa
and
mov
push
les
cld
mov
or
mov
push
aas
arpl
adc
sbb
imul
(bad)
jge
sub
pop
cmp
push
jmp
lods
das
cld
fbld
fsin
lods
or
sbb
adc
test
mov
ret
inc
jecxz
idiv
xchg
jnp
(bad)
cmp
out
add
push
fimul
clc
test
pop
loopne
mov
shr
add
sub
bound
mov
fisttp
es
push
jb
ret
ror
scas
cs
sub
inc
pop
pop
ss
test
outs
xchg
push
or
aad
stos
sub
add
sub
(bad)
ret
mov
sbb
sub
out
xchg
cs
stos
sbb
mov
out
inc
int3
push
bound
and
(bad)
popf
dec
xor
jp
mov
scas
xor
rcl
mov
sbb
(bad)
rcl
sub
fisub
jnp
mov
mov
sub
mov
or
movs
pop
ja
test
inc
loop
rol
sub
pop
ds
inc
jp
push
add
xor
imul
or
cmp
and
mov
cmps
add
push
repz
inc
jbe
lock
in
xor
das
mov
ret
mov
arpl
or
mov
mov
push
scas
je
mov
jnp
scas
or
mov
mov
jae
mov
lock
mov
jecxz
(bad)
cmp
inc
mov
mov
mov
mov
add
int
sub
push
popf
lea
jae
xchg
out
clc
(bad)
lea
cmps
lods
rol
mov
xor
mov
push
jg
mov
pop
sti
jbe
or
push
ret
jle
jp
xchg
fmul
add
(bad)
cmp
loope
shl
aam
out
jp
pop
jbe
ins
lods
sbb
aad
inc
fdivrp
call
and
shl
scas
push
(bad)
test
in
int
sti
or
retf
mov
(bad)
push
mov
adc
jnp
add
adc
movs
mov
sub
push
ins
in
jno
and
sahf
pop
jno
retf
xor
ins
cdq
std
fwait
jp
jnp
test
out
dec
ja
mov
pop
xlat
clc
aad
les
cwde
jge
retf
or
mov
push
or
sbb
or
cmp
mov
lods
fucomi
sbb
es
or
lods
inc
pushf
test
push
pop
data16
ficomp
cmp
or
out
sbb
dec
or
in
push
outs
push
loope
xchg
shl
das
inc
cwde
pop
(bad)
sub
dec
jg
fiadd
mov
(bad)
sahf
in
mov
das
xor
jle
jmp
nop
cmp
add
cmp
and
dec
jge
lea
push
adc
dec
call
std
xor
push
cmp
stos
pushf
popf
or
push
stos
ficom
xchg
mov
cmp
jmp
cmps
push
xchg
mov
icebp
inc
and
add
mov
push
lahf
inc
cmps
call
js
in
int3
fld
push
push
(bad)
int
jb
jg
xor
stos
push
jge
push
test
out
cmp
inc
test
pop
mov
cmps
std
aad
aam
sbb
or
sar
push
sbb
scas
(bad)
push
jb
jnp
and
xor
sahf
jmp
(bad)
xor
lahf
jbe
rcl
inc
call
push
cld
pop
rcl
movs
dec
pop
je
inc
lods
call
retf
gs
mov
rol
mov
not
jle
fistp
inc
mov
ins
sub
iret
clc
inc
outs
ds
pop
pop
inc
in
pop
sbb
fadd
out
imul
in
xlat
sub
imul
sbb
fldcw
sub
cli
push
and
cwde
js
push
fstp
pusha
into
add
pop
mov
mov
push
ins
sbb
pop
loopne
es
jae
add
inc
jae
aaa
cmc
push
and
pop
hlt
push
xlat
aas
push
and
sub
lock
jb
fs
cmp
add
repz
jno
shr
dec
mov
sbb
les
repz
or
pop
dec
pop
test
popf
ins
std
fcmovnb
mov
or
cs
sbb
movs
xor
imul
cmps
add
add
fidivr
(bad)
shl
iret
int3
push
pmulhw
in
(bad)
xchg
std
es
popa
mov
cmp
sub
int3
mov
(bad)
das
arpl
mov
add
test
jno
push
mov
mov
jl
cdq
inc
sub
pop
dec
rcr
jmp
xchg
xchg
pop
(bad)
adc
cmps
inc
pop
push
xor
ins
push
push
pushf
and
jl
sbb
pop
lds
push
out
fwait
call
repz
mov
mov
mov
scas
ss
and
hlt
mov
inc
sub
movs
adc
jns
in
scas
mov
push
loop
mov
stos
jg
mov
cmp
call
mov
adc
fstp
leave
ficomp
dec
cld
test
jmp
mov
ror
leave
jecxz
lods
retf
out
pop
xchg
dec
dec
pop
pop
add
dec
and
jmp
int3
cld
sbb
(bad)
iret
in
xchg
cwde
pop
xlat
clc
xchg
das
inc
ficomp
rcl
jle
xor
xor
adc
dec
test
out
sub
sbb
mov
ja
ins
mov
hlt
add
cli
jecxz
sbb
push
repnz
loop
call
dec
test
out
fwait
(bad)
cs
adc
inc
ror
inc
mov
dec
leave
out
adc
sub
jo
mov
ja
cmp
fld
jb
inc
lods
(bad)
mov
inc
bound
fldenv
push
pop
mov
outs
sub
fimul
cmp
out
mov
jmp
inc
scas
add
and
or
or
es
xor
retf
shl
retf
pop
mov
cmp
fild
pop
outs
jl
loop
jmp
push
es
(bad)
xchg
in
data16
mov
xor
pop
lods
cs
ins
mov
popw
outs
(bad)
or
cmps
fisub
rcr
mov
cmp
(bad)
(bad)
pop
and
ds
inc
add
pop
es
rcl
pop
push
test
and
ds
call
lods
test
xchg
arpl
mov
push
or
jmp
jb
pop
nop
stc
inc
enter
sbb
sub
pop
cdq
push
fimul
or
dec
sbb
or
mov
fstp
inc
mov
mov
fsubp
es
push
loope
dec
jb
ja
xor
popf
mov
test
(bad)
das
fcmovne
xchg
jle
(bad)
lahf
sahf
inc
adc
mov
call
jns
mov
jmp
push
clc
jne
inc
mov
push
mov
lahf
sti
push
dec
push
xor
std
jnp
movq
int3
jg
daa
and
mov
iret
push
or
pop
(bad)
enter
sbb
enter
inc
repz
cmps
ret
pop
mov
inc
int3
cmp
or
dec
out
inc
into
retf
js
pop
movs
leave
pop
mov
fs
test
retf
pop
fwait
jnp
fadd
sbb
in
mov
sub
aad
or
stos
call
lds
fldcw
inc
jae
aas
pop
adc
xchg
std
mov
mov
or
nop
xchg
in
mov
pop
add
pusha
cmc
out
or
xor
inc
xor
and
and
and
mov
or
jo
fwait
mov
mov
and
les
sbb
xor
outs
out
js
cmc
adc
xchg
sub
inc
push
ror
arpl
gs
bound
mov
mov
in
and
sahf
mov
xor
pop
add
fdivr
push
stos
pop
outs
repz
test
stc
out
(bad)
clc
jg
cld
add
outs
mov
xchg
and
popf
cmp
call
jmp
pop
cdq
call
out
ret
enter
int
sbb
add
ror
add
xor
popa
add
cwde
add
dec
scas
adc
mov
add
(bad)
retf
pop
mov
mov
xchg
xchg
ret
stos
and
mov
fmul
cmp
adc
push
aaa
int
or
jmp
mov
lahf
repnz
jl
outs
add
push
ds
repnz
cmp
in
mov
mov
loope
addr16
pusha
arpl
jo
jb
gs
retf
pop
iret
test
pop
mov
dec
leavew
jp
mov
cli
jle
nop
js
(bad)
push
xor
aaa
setge
in
pop
push
es
pop
test
mov
xchg
jnp
iret
int3
dec
push
fmul
sar
cmc
sub
mov
(bad)
repz
and
mov
mov
scas
push
ss
pop
or
int
popf
hlt
mov
mov
shl
xchg
sbb
add
in
and
outs
jne
repnz
(bad)
dec
mov
in
test
inc
shl
or
lods
add
movs
xchg
sbb
adc
mov
pop
(bad)
push
mov
nop
xchg
jb
mov
loopne
push
push
xchg
aad
outs
lods
mov
inc
nop
mov
aad
dec
xor
add
xlat
cli
and
dec
ins
call
or
ret
sbb
sub
push
cmps
inc
mov
or
add
jl
aad
xor
bnd
push
mov
addr16
cdq
cdq
test
sbb
push
cmp
sub
push
push
push
mov
cmp
fwait
in
inc
mov
mov
mov
movs
adc
(bad)
pushf
mov
mov
cdq
ret
test
jo
mov
cmc
loop
adc
add
idiv
loopne
addr16
add
pop
cmp
or
je
cmps
cmps
pop
repnz
loop
ss
cmp
xchg
adc
adc
sub
mov
lds
not
outs
push
sar
sbb
movs
push
fstp
cmps
jecxz
or
sbb
test
add
js
call
shl
aaa
cmps
repnz
pop
mov
fucomip
mov
pop
pop
cmp
pop
outs
jnp
xor
pop
pusha
mov
push
icebp
mov
popa
in
pop
pop
or
fucomi
or
jle
xor
fcmovne
add
add
sbb
(bad)
dec
sub
dec
mov
outs
or
add
push
jecxz
push
aad
popf
or
and
mov
daa
int
inc
pop
sub
jge
push
pop
out
ins
xchg
dec
lgs
ror
mov
dec
adc
mov
and
sub
or
daa
add
movs
xchg
loop
test
pop
push
rcr
fidiv
jle
dec
retf
cwde
std
fcmovnbe
push
ret
hlt
std
pushf
cdq
ror
and
mov
cmps
mov
pop
inc
jns
pop
out
add
ja
out
mov
test
in
cmp
mov
jp
sti
jmp
div
pop
pop
mov
aas
movs
cmp
push
cmp
adc
pop
(bad)
std
sbb
sete
sahf
pop
push
movs
sahf
das
popf
inc
dec
(bad)
pop
cld
xchg
ret
jno
and
mov
fstp
lahf
fstp
mov
idiv
lds
enter
stos
sbb
or
or
or
clc
pop
mov
out
pop
mov
jge
es
retf
pop
in
jns
cmc
mul
repz
aad
pop
stc
push
and
push
jo
adc
mov
mov
in
(bad)
mov
stos
mov
sub
loope
pop
push
dec
jnp
call
jb
enter
dec
cmps
inc
adc
js
mov
retf
push
out
aad
mov
iret
je
push
jae
sahf
xor
mov
fs
pop
les
mov
cmp
sub
push
dec
xchg
jns
aaa
test
mov
mov
imul
push
jp
aam
push
outs
cld
outs
imul
and
xor
out
xor
lock
or
out
sbb
fs
xchg
scas
nop
mov
dec
aas
jp
push
push
sti
sahf
add
jnp
(bad)
push
cmc
lahf
mov
ret
cmp
retf
inc
popf
retf
sar
jmp
push
add
inc
pop
clc
(bad)
sbb
into
pop
mov
shr
ins
jmp
enter
mov
call
cmp
cwde
add
shl
jp
adc
outs
je
das
mov
in
shr
dec
movs
and
popa
adc
aam
mov
and
gs
mov
pop
xchg
xchg
cmp
not
(bad)
sbb
sbb
adc
clc
shl
and
xchg
lds
inc
out
cmps
mov
sbb
cdq
sub
gs
icebp
xor
clc
in
sbb
mov
jb
movs
outs
adc
and
neg
aad
imul
jae
mov
ficomp
jle
inc
mov
repz
xor
sahf
push
sub
push
mov
add
retf
les
repnz
ds
aaa
and
shr
sub
popa
add
inc
mov
mov
repnz
mov
mov
inc
retf
jmp
pop
mov
repnz
jle
clc
jecxz
dec
sar
cmc
repnz
jmp
mov
xor
pop
inc
or
into
out
sbb
jp
lods
xor
push
xchg
lods
clc
sub
dec
xor
mov
adc
jmp
imul
mov
lahf
xor
inc
jmp
cld
pop
pusha
jbe
inc
cmc
sub
test
xor
out
std
adc
fld
fwait
pushf
and
fisubr
data16
(bad)
xchg
retf
scas
mov
int
shr
xor
jl
sub
sub
xlat
mov
jmp
clc
mov
mov
movs
into
xor
retf
pop
inc
pop
push
mov
or
fstp
mov
add
test
ins
aaa
cmp
and
inc
push
mov
xchg
mov
sahf
nop
jb
mov
rcl
imul
lahf
stc
sub
(bad)
imul
add
out
sbb
jne
loope
dec
pop
repnz
arpl
or
cmp
lock
sbb
ins
cmps
cs
dec
mov
mov
data16
div
jge
pop
adc
mov
xchg
ins
and
xchg
jp
jns
and
imul
ror
cld
xor
mov
mov
xchg
add
adc
outs
sub
push
mov
xor
mov
pop
push
sub
fstp
or
loope
or
jmp
jge
inc
stos
cwde
mov
mov
mov
inc
(bad)
enter
mov
retf
aam
pop
jmp
pop
add
or
add
cmps
adc
test
mov
loopne
lock
cmps
iret
shl
xchg
(bad)
(bad)
fwait
push
loopne
pop
nop
rcl
cmps
repnz
mov
add
or
gs
xor
std
mov
clc
sbb
xchg
in
aad
aad
test
je
jae
pop
punpckhdq
mov
inc
sbb
push
jmp
mov
xchg
movs
xchg
cs
add
push
out
es
pop
pusha
es
mov
mov
popf
and
pushf
push
ds
ja
sbb
ins
nop
dec
and
xor
ror
or
es
push
xchg
fistp
int
xor
xchg
dec
imul
dec
stos
cwde
cs
pop
sub
ins
push
aas
repz
add
in
add
xchg
inc
mov
dec
sahf
dec
mov
push
mov
ror
jo
cwde
mov
push
sub
call
adc
outs
adc
sbb
xchg
loopne
sbb
adc
rcr
stos
pop
lea
cmp
or
scas
mov
jmp
xchg
xor
jecxz
fadd
xor
and
je
mov
cmova
sub
not
cld
mov
or
xor
popa
or
in
(bad)
test
sar
(bad)
jg
iret
cdq
jo
imul
sbb
mov
xor
mov
push
rcl
out
pop
and
es
lock
pop
mov
pop
pop
cli
test
xchg
sti
ja
jbe
in
ret
mov
std
scas
aam
mov
jmp
push
sub
sub
mov
fcomp
cmps
jmp
mov
pop
imul
dec
ins
ret
push
jecxz
enter
or
arpl
out
mov
push
mov
callw
jmp
xor
pop
sub
inc
imul
push
fdiv
mov
adc
add
scas
mov
jne
xchg
ins
mov
push
adc
das
loop
mov
xchg
mov
int
pop
push
jbe
lods
lahf
icebp
(bad)
cld
bound
int
add
xchg
mov
or
loop
dec
fs
loope
jne
out
jg
jns
into
or
test
mov
and
push
mov
inc
jb
out
and
sti
lahf
dec
iret
or
ins
dec
lds
es
fbstp
jecxz
mov
aad
or
test
test
pop
and
je
cmp
loope
imul
pause
xor
icebp
test
ins
dec
adc
imul
sub
mov
aam
mov
out
int3
sub
mov
mov
lahf
cdq
les
inc
jne
shr
push
adc
push
shr
movs
icebp
pop
mov
(bad)
push
sbb
fdivr
adc
mov
mov
jp
call
fisubr
xor
mov
popf
sub
jo
outs
pop
call
add
lahf
rcl
jp
xchg
adc
xchg
imul
enter
push
idiv
mov
xor
and
sti
pop
fwait
test
repnz
xor
mov
dec
pop
arpl
push
inc
mov
xor
ins
and
in
gs
lea
dec
adc
lods
aaa
pop
pop
loop
adc
mov
push
or
aaa
jg
and
lea
jmp
dec
fisttp
jge
jle
cmp
dec
adc
cdq
sbb
pop
mov
aaa
inc
(bad)
aam
inc
xchg
call
mov
pop
push
fist
mov
push
inc
cs
mov
inc
clc
mov
mov
icebp
fimul
jl
mov
and
mov
les
inc
clc
or
jle
cmp
sub
(bad)
lock
cwde
push
mov
das
pop
inc
pushf
ret
jns
dec
mov
mov
dec
jp
push
pop
dec
dec
inc
dec
retf
(bad)
pop
ins
xchg
pop
aam
jne
test
pop
sahf
xor
iret
or
popa
or
mov
mov
inc
mov
mov
mov
test
inc
fbstp
pop
dec
pushf
push
frstpm(287
vmovaps
cwde
mov
or
xor
dec
popf
(bad)
jg
lock
cmps
cmp
and
inc
xor
jp
arpl
dec
fidivr
ror
mov
jne
fdivr
scas
pusha
cmp
push
jne
lods
enter
push
dec
sbb
lds
out
in
cmc
in
jne
dec
cli
xchg
xchg
retf
cli
mov
dec
fiadd
jge
xor
sbb
cmps
iret
jge
and
mov
cmc
pop
cmp
inc
xchg
and
pusha
cmp
pop
ins
mov
adc
test
scas
and
jle
inc
push
outs
in
ss
jp
shl
xchg
ret
push
xor
push
pop
cmc
ja
mov
xor
repnz
dec
pop
adc
sti
loop
xor
add
daa
add
mov
sbb
or
jge
pop
stos
jno
fwait
pushf
add
cmc
les
lock
outs
cmps
xchg
xchg
(bad)
cmp
aaa
daa
mov
shr
into
and
iret
loope
jge
inc
dec
xchg
or
jno
dec
mov
push
or
pop
movs
adc
sub
cs
test
mov
(bad)
dec
and
add
out
out
sbb
setp
add
out
mov
je
aaa
sahf
mov
mov
popf
lods
lock
(bad)
out
sub
jle
adc
and
(bad)
repz
pop
ins
test
dec
ror
or
(bad)
push
jg
dec
int
into
sub
sahf
or
sbb
lods
push
cmp
jae
fsub
stos
mov
cld
or
sub
ins
jnp
clc
mov
jne
es
(bad)
adc
xlat
or
push
xor
jnp
pop
js
xchg
sub
dec
repz
lds
inc
lds
mov
pop
cmps
mov
ds
ins
pop
xor
push
dec
jae
fmul
mov
adc
rcl
xchg
cli
popa
call
rcr
sbb
leave
in
push
int
outs
shr
(bad)
call
aas
test
rol
mov
push
sti
ins
dec
das
push
and
sbb
xor
inc
stos
inc
stos
scas
gs
inc
(bad)
push
dec
and
mov
fwait
or
sub
mov
loopne
ror
in
sbb
cwde
xor
dec
lock
cmp
inc
xchg
aam
pushf
jp
ret
mov
jge
sub
stos
aam
stc
or
rcl
xor
int
cmps
shl
neg
(bad)
stc
daa
xchg
(bad)
fcom
enter
fbld
push
xchg
add
sub
hlt
and
mov
push
ret
(bad)
fwait
pop
shl
es
xchg
rol
mov
and
popa
fidivr
outs
lahf
outs
jo
pop
mov
or
jbe
idiv
stos
push
outs
int3
aad
jne
and
sbb
les
jmp
test
dec
sbb
add
cmps
call
and
(bad)
add
(bad)
mov
pushf
loopne
nop
sbb
enter
inc
jl
mov
cmp
push
dec
and
loope
push
inc
movs
addr16
arpl
sbb
inc
test
mov
fidiv
mov
das
fs
xchg
bound
pop
pop
test
cmp
xor
sbb
sbb
cmp
and
inc
scas
and
dec
dec
dec
lea
dec
inc
div
sar
movs
jl
inc
ins
jp
shl
and
sbb
aam
xor
mov
mov
cmp
sub
test
dec
loopne
imul
mov
lods
mov
push
dec
adc
or
out
aaa
outs
js
mov
xchg
sub
cdq
push
or
retf
push
iret
push
das
rcl
dec
hlt
xchg
ds
jg
je
sbb
and
das
inc
or
in
mov
in
stc
test
loopne
js
inc
in
xchg
stc
dec
hlt
test
outs
test
out
pop
mov
adc
adc
mov
add
test
mov
sar
mov
test
add
push
sub
sbb
in
jmp
or
movs
shl
inc
into
stc
sti
loop
inc
mov
movs
inc
in
push
mov
or
popa
cdq
stos
mov
addr16
mov
cli
push
add
push
jmp
ret
ret
setae
das
xor
or
mov
lods
inc
test
xor
mov
mov
std
pop
mov
inc
inc
sbb
lahf
fwait
das
add
cmps
xchg
test
sbb
in
das
jmp
sar
and
clc
and
aad
test
add
or
call
das
(bad)
icebp
out
gs
push
xchg
test
and
add
loopne
push
in
mov
dec
mov
outs
inc
enter
inc
pop
es
push
xor
push
mov
outs
xor
inc
(bad)
mov
daa
(bad)
movs
push
push
push
lods
and
pop
test
xchg
shl
(bad)
out
jge
retf
mov
popf
dec
clc
pop
adc
pop
lods
mov
mov
jl
mov
xchg
push
dec
aad
in
push
das
(bad)
xor
shr
scas
fsubr
push
xchg
enter
in
fidivr
pop
inc
hlt
push
punpckldq
jmp
jno
pop
push
retf
retf
push
into
aad
test
sbb
(bad)
lods
or
or
or
jge
arpl
sti
dec
(bad)
xchg
mov
ret
loope
pop
adc
cld
xchg
xchg
ret
lods
jmp
ds
sbb
gs
or
pushf
data16
mov
cmovl
push
or
dec
xchg
cwde
popa
mov
pop
pop
pop
inc
mov
jg
mov
inc
sub
sub
xor
sub
int
movs
(bad)
xchg
and
cs
cmp
adc
call
push
jge
mov
stc
fwait
sub
loop
xor
cmps
jns
sub
mov
jae
movs
lahf
sbb
and
pop
mov
into
test
je
shl
(bad)
sbb
pop
jl
das
aas
icebp
inc
xor
push
shl
and
jg
jmp
pop
mov
mov
xor
add
dec
cmp
movs
fcmovb
jge
xchg
and
mov
jae
outs
js
call
call
sbb
jno
test
sbb
mov
dec
cmp
js
ja
loop
test
or
ds
mov
gs
test
je
popf
sti
push
add
enter
adc
add
adc
xchg
inc
ret
jl
jecxz
inc
push
out
icebp
jp
jecxz
outs
push
and
aam
icebp
aaa
das
mov
cmp
xchg
add
push
sub
sub
jno
and
mov
es
and
addr16
ffree
mov
and
cmp
gs
push
cld
loopne
movs
push
push
fsubr
stc
cmp
lods
dec
iret
add
and
pop
pop
(bad)
fnstsw
pop
clc
xor
xchg
scas
stos
inc
or
jo
fcomp
jne
dec
(bad)
mov
sbb
rcl
sbb
lock
adc
mov
arpl
std
arpl
out
pop
ds
fiadd
jp
maskmovq
div
mov
adc
mov
fisttp
(bad)
std
fiadd
not
jo
or
dec
ins
xor
sub
(bad)
xlat
mov
or
(bad)
or
sbb
push
js
push
std
mov
cwde
mov
or
imul
cs
loopne
push
test
mov
pop
cmp
out
mov
(bad)
in
mov
xor
fisttp
out
add
repz
pop
dec
sub
ret
mov
sbb
or
(bad)
and
mov
popa
pop
leave
cmp
or
jp
ja
jb
ss
test
mov
mov
rol
add
xchg
ins
sub
movs
int
jp
xor
xor
xchg
adc
adc
dec
dec
xchg
mov
push
stos
pop
lods
push
repz
dec
pop
xchg
leave
jp
pusha
pusha
in
test
loop
fbstp
sar
mov
sbb
sub
rol
cmps
add
xchg
fmul
mov
imul
push
dec
(bad)
stos
jb
sub
xchg
js
pusha
dec
sar
dec
jge
xor
ins
xlat
addr16
test
test
ins
sbb
mov
scas
inc
je
fidivr
mov
sahf
jg
mov
jg
mov
das
mov
mov
xchg
pushf
pop
cld
dec
and
xor
clc
push
retf
fucom
add
(bad)
(bad)
fmul
sbb
lahf
pop
and
and
pop
out
rol
and
push
leave
iret
out
in
icebp
ins
addr16
fcom
in
xchg
in
scas
sub
or
mov
je
test
popf
ret
loope
sar
mov
fsub
or
loop
call
sbb
call
xchg
lea
movs
xor
sbb
xor
jmp
mov
rcr
je
(bad)
pop
push
inc
sbb
xchg
add
adc
xchg
and
push
not
mov
icebp
repnz
add
cwde
pop
pop
cmp
aam
daa
xor
mov
and
push
(bad)
fsub
sar
scas
mul
scas
xlat
or
jb
data16
pop
mov
imul
test
pop
daa
std
adc
push
xchg
shl
jnp
sbb
cmp
imul
movs
push
or
ds
inc
scas
push
push
mov
cmp
mov
arpl
scas
push
xor
rcr
push
xlat
cmp
lahf
lods
jle
movs
adc
movs
aad
or
mov
mov
int3
ins
fmulp
lods
dec
cli
cwde
mov
mov
stos
lea
scas
(bad)
dec
sub
popf
fisubr
xlat
cmps
loope
cmp
loopne
cs
sbb
xor
mov
call
sub
neg
xchg
sub
cwde
out
xor
mov
sbb
dec
mov
cmp
push
shl
and
mov
sbb
sbb
ins
xchg
and
sbb
and
cmp
addr16
pop
mov
adc
and
pushf
popf
mov
cwde
push
xchg
cwde
mov
test
movs
aam
jmp
pop
les
inc
ja
out
bound
or
jns
aas
nop
sub
pop
cmp
xor
iret
push
inc
shl
xor
push
lock
inc
push
daa
fimul
adc
jle
mov
imul
xor
jmp
call
mov
xchg
nop
sbb
bound
ret
out
inc
stos
bound
jg
sbb
je
xchg
lds
leave
push
pop
pop
dec
popf
pop
xor
xchg
push
adc
int3
dec
add
shl
xchg
leave
add
imul
push
dec
pop
xchg
jmp
stos
pop
mov
sbb
mov
and
dec
test
xchg
aas
cwde
lds
pop
pop
push
sub
arpl
icebp
into
(bad)
dec
cs
mov
adc
popf
push
lods
(bad)
or
mov
cmp
dec
or
out
stos
pop
sub
mov
or
adc
xor
inc
out
lds
pop
and
loope
sub
add
cmp
lds
pop
in
pop
jmp
pop
pop
mov
nop
(bad)
xor
popa
xlat
sbb
push
jnp
cmps
xor
mov
and
mov
stc
mov
xor
adc
and
add
and
dec
adc
sbb
fistp
mov
push
ds
int3
cmp
and
xor
lods
cwde
xchg
jg
pop
fld
lds
std
and
shr
popf
adc
icebp
push
jne
(bad)
sbb
lea
mov
mov
int3
and
movs
fcom
add
sub
lahf
ds
jecxz
hlt
fadd
pop
jbe
push
mov
dec
inc
push
popf
jge
xor
pop
adc
nop
out
enter
outs
pop
fisttp
popa
adc
jae
xor
xchg
scas
inc
inc
sbb
push
push
imul
cmp
sbb
(bad)
repnz
pushf
sub
jmp
cmp
mov
lods
or
stc
sub
fnclex
out
cmp
push
xchg
cmp
dec
jbe
cli
jmp
repz
pop
cld
sub
inc
mov
nop
je
add
cli
and
ret
in
daa
cmp
lds
js
bound
xor
jmp
xlat
ss
popa
dec
adc
jbe
sbb
add
call
ds
rcr
mov
sub
mov
pop
retf
ret
in
daa
ror
inc
push
push
int
call
cli
sahf
mov
adc
mov
mov
pop
gs
ret
cmp
jnp
pop
fcmovnbe
icebp
cmp
lods
lods
adc
popa
loopne
cmp
mov
js
popa
dec
push
imul
arpl
jg
mov
jo
call
(bad)
jl
xor
mov
or
mov
pop
jnp
das
jp
and
or
pop
iret
div
push
popf
stc
(bad)
xor
mov
push
call
inc
movs
gs
pop
inc
dec
repz
xlat
je
and
(bad)
ss
mov
jns
xor
loopne
pop
test
mov
cmps
jge
clc
mov
jb
mov
mov
cmps
or
aad
cld
mov
sub
mov
push
mov
leave
(bad)
pushf
inc
inc
popa
mov
scas
ins
xchg
push
pop
(bad)
jle
mov
rcr
push
test
jmp
sub
pop
pop
add
sub
rcr
xor
jns
mov
xor
xchg
or
inc
(bad)
outs
scas
or
and
lds
push
sub
mov
sub
in
jne
arpl
mov
lahf
and
in
add
dec
adc
add
in
mov
pop
sub
pop
and
inc
mov
jns
push
and
dec
mov
pop
mov
jmp
mov
in
sbb
nop
jecxz
jmpw
(bad)
mov
arpl
adc
dec
loopne
fnstsw
imul
std
jne
call
inc
outs
aas
xor
ins
xchg
jle
ret
ds
fst
mov
test
into
fcom
pop
ret
sub
mov
je
pusha
cmps
cmp
xor
jnp
scas
ja
xchg
in
jp
fst
jo
(bad)
sbb
and
dec
in
add
mov
jge
ret
fwait
push
hlt
dec
xchg
xchg
aam
dec
sbb
or
xor
and
xchg
mov
mov
aam
jae
push
adc
jnp
mov
test
out
sbb
pushf
cmp
scas
movaps
xchg
jns
into
jle
out
dec
std
stc
shl
xchg
dec
dec
into
jns
push
mov
(bad)
call
mov
sub
int
test
mov
mov
adc
nop
inc
push
adc
pop
hlt
ss
out
adc
xchg
xchg
push
xor
stos
adc
ja
xchg
xchg
das
jae
push
cld
pop
stos
inc
out
jp
pop
sbb
cs
ja
jge
xor
jge
popf
mov
dec
cmps
inc
or
ds
arpl
mov
xor
sub
push
push
lea
aad
inc
or
call
ds
xchg
push
and
sbb
inc
test
bound
icebp
inc
push
adc
repz
xchg
add
push
xchg
and
jmp
popa
push
lods
pusha
jmp
std
xchg
mov
jnp
test
movs
inc
sub
push
xor
cdq
xchg
jl
adc
rol
cwde
icebp
push
xchg
add
xchg
xlat
call
mov
sbb
bnd
pop
dec
dec
adc
sbb
movs
add
xor
mov
lods
inc
and
cs
jbe
push
minps
adc
out
push
daa
in
js
pop
push
inc
fisttp
sti
rol
adc
and
fistp
pop
test
out
mov
repnz
hlt
pushf
test
mov
pusha
push
pushf
arpl
xchg
inc
lock
inc
pop
cmp
add
loopne
mov
pmuludq
jmp
sub
movs
fsqrt
inc
mov
mov
sbb
jp
mov
fld
and
push
test
lock
sar
out
pop
(bad)
sti
and
mov
ins
jbe
int
jo
mov
pushf
push
(bad)
mov
mov
cmc
fdivr
iret
push
adc
pop
push
jno
jae
mov
xchg
sub
ror
push
sbb
(bad)
pushf
out
test
xchg
jl
jne
push
aaa
jae
mov
mov
aaa
mov
outs
test
dec
fucomip
aam
leave
je
pop
sbb
lock
dec
and
outs
add
out
std
cmp
push
cmps
inc
pop
gs
jns
inc
mov
cmps
imul
push
push
and
retf
push
pop
std
xchg
or
xchg
dec
das
ss
add
dec
xor
(bad)
dec
push
cmp
ja
adc
or
sub
jno
xchg
lock
mov
mov
fisub
sbb
xor
(bad)
jnp
inc
mov
jb
dec
test
repnz
hlt
scas
dec
ret
outs
hlt
ins
aaa
mov
loope
rcr
cmps
enter
pop
fst
push
test
mov
mov
sahf
pop
cmc
dec
inc
mov
push
out
les
dec
jp
mov
push
jbe
cmp
test
repz
xlat
stos
xor
mov
adc
and
(bad)
fsubr
call
mov
jmp
mov
in
mov
jge
push
jecxz
pop
pop
call
pop
aad
test
cmp
push
cmc
or
adc
mov
test
mov
loop
xor
(bad)
push
mov
push
adc
pop
and
ret
inc
stos
jb
sub
nop
cs
or
aad
xor
pop
ret
aaa
push
outs
pop
pop
push
jp
lahf
ja
xor
mov
mov
repnz
arpl
adc
cmp
out
cmp
dec
int
mov
inc
push
out
inc
ins
dec
mov
popf
test
mov
xchg
jns
idiv
xchg
push
neg
or
or
jmp
pop
aam
jo
and
inc
mov
shl
inc
imul
pop
xchg
fcom
sbb
rol
jnp
xchg
jno
mov
jecxz
daa
push
push
pop
rol
jmp
loop
dec
(bad)
ds
shl
mov
inc
inc
push
fcomp
cli
inc
test
daa
push
pop
iret
loopne
arpl
ja
movs
lahf
inc
jmp
cmp
cmps
call
enter
xor
push
pop
mov
xlat
push
mov
sti
push
nop
sbb
popa
mov
xchg
sub
stc
lea
and
imul
push
das
adc
add
cmps
int
test
ins
call
loop
call
mov
data16
dec
fst
popf
mov
add
push
out
sti
mov
dec
movs
cmp
scas
lods
sbb
repz
sti
add
and
mov
adc
mov
or
dec
hlt
stos
or
dec
and
in
aas
xchg
inc
outs
adc
or
adc
dec
call
jl
(bad)
jg
push
push
repnz
arpl
scas
call
mov
push
cmp
xchg
je
fs
pop
jp
dec
in
jno
ins
nop
loop
mov
test
push
or
sbb
ds
mov
ror
aas
and
hlt
shl
fwait
(bad)
pop
and
inc
push
jl
fwait
outs
sub
mov
pop
jg
pop
rcl
mov
push
adc
test
mov
sub
stos
mov
mov
rcl
jp
and
and
ret
(bad)
fdivr
jns
outs
sbb
xchg
xchg
push
cs
lea
push
sbb
retf
push
shl
shr
pop
mov
stc
jno
test
movs
cmp
in
stc
icebp
mov
sahf
pushf
mov
shr
leave
xchg
push
popa
ret
outs
jecxz
clc
mov
inc
ficomp
outs
add
ret
fdivr
enter
xchg
inc
mov
inc
sbb
pop
inc
adc
add
in
sbb
pop
repz
pop
aaa
or
ret
add
adc
inc
pop
std
test
push
xchg
scas
mov
div
adc
sub
adc
xor
pop
arpl
xor
fst
outs
sbb
cmp
dec
lea
dec
arpl
sar
mov
xor
inc
and
pop
call
mov
dec
push
je
sti
fist
in
cmp
out
mov
pushf
outs
add
ja
(bad)
fcomp
jecxz
xchg
out
push
mov
xchg
mov
mov
mov
stos
xor
mov
es
cmp
jnp
jno
in
div
lahf
sub
sbb
inc
stos
jle
pop
addr16
add
pop
xchg
xchg
cmps
jbe
rcr
not
push
adc
ins
stos
call
inc
jp
pop
mov
ss
clc
xor
add
mov
rcl
xlat
mov
push
xchg
leave
sahf
push
imul
aas
(bad)
lods
jo
push
or
mov
cmc
push
cdq
jnp
sbb
dec
out
and
mov
push
dec
pop
sar
rol
int3
jmp
cmp
in
and
lock
call
sub
aaa
shl
loopne
cwde
loop
push
or
ror
xchg
int3
add
arpl
shl
inc
add
or
add
out
sbb
sti
mov
xor
stos
mov
xchg
imul
cmp
je
or
sahf
jo
pop
pop
mov
pop
jecxz
enter
loopne
(bad)
test
push
test
jmp
fimul
adc
fiadd
pop
enter
sbb
and
imul
xor
loop
es
leave
sub
pop
imul
loop
aaa
or
std
in
leave
jl
loopne
and
push
pusha
fnstenv
sub
inc
sub
sub
sbb
cwde
adc
fnsave
mov
mov
lea
mov
adc
cmp
lods
add
std
addr16
and
dec
sub
sbb
stc
jo
test
and
cmp
push
and
pushf
pop
call
sbb
and
aam
(bad)
mov
mov
stos
xchg
mov
popa
pop
push
movs
popa
arpl
push
and
add
les
dec
push
pop
jbe
sbb
push
dec
sbb
sub
call
nop
neg
mov
adc
mov
inc
jecxz
(bad)
xor
jo
cmp
mov
lahf
xchg
cdq
call
cld
jns
cmp
dec
sbb
xchg
or
bound
gs
sbb
pop
retf
cmp
jb
mov
popa
pop
fs
xchg
mov
fucomip
pop
test
cmps
push
and
shl
push
addr16
pop
mov
je
sub
addr16
sbb
and
xor
retf
inc
stos
sub
jg
in
xchg
jno
sub
out
fiadd
mov
sub
fistp
arpl
xor
cdq
enter
lea
cmps
cwde
xchg
nop
push
xchg
xchg
cmp
cld
dec
lea
sub
add
es
add
push
jl
dec
push
jns
stos
mov
xchg
inc
xchg
scas
or
cmp
and
jmp
sbb
loope
ds
shl
cwde
jne
mov
aas
mov
mov
addr16
scas
jg
out
cli
mov
outs
jl
pop
inc
adc
in
sbb
in
pop
ins
mov
ror
data16
xor
add
jp
mov
aam
in
ss
fucomip
les
add
xor
cmp
xchg
mov
xchg
sbb
inc
jnp
sbb
movs
pop
shl
sbb
and
test
popa
mov
daa
jmp
inc
sahf
sbb
jns
xor
add
not
in
xchg
push
mov
mov
imul
pop
inc
xor
mov
push
rcr
pop
cli
call
push
mov
nop
sub
push
sbb
add
mov
push
test
test
mov
lods
(bad)
stos
jb
jg
lock
jnp
pop
mov
mov
jne
or
stos
push
mov
out
leave
add
and
cmp
cli
mov
jne
test
fsub
sub
add
stc
call
mov
pop
xor
das
in
push
pop
push
imul
xor
cs
dec
mov
mov
sbb
test
adc
imul
cld
clc
push
adc
push
lea
lods
jp
jg
inc
in
xchg
ss
add
cmps
aam
test
mov
mov
(bad)
xchg
ds
bound
mov
test
jb
push
leave
jo
repnz
js
jl
jg
leave
cmp
xchg
sar
mov
rcr
jg
loopne
outs
mov
push
dec
hlt
popa
sbb
ja
pop
and
neg
xchg
mov
ins
push
stc
dec
cmp
pop
xchg
jb
cmp
out
fistp
idiv
mov
popa
push
call
adc
inc
cmp
icebp
test
lods
mov
mov
xchg
popf
ficomp
jne
aaa
out
mov
fs
(bad)
leave
mov
call
dec
fld
dec
das
mov
mov
cs
sar
sbb
retf
mov
xlat
push
popf
mov
fdiv
or
mov
sub
icebp
ret
xor
out
test
or
adc
xor
outs
xchg
push
inc
and
lods
adc
outs
ja
cli
call
ins
mov
mov
pop
push
mov
adc
adc
pop
jmp
aaa
jp
push
nop
test
jae
call
and
stc
mov
sahf
cld
rcl
aam
push
test
mov
mov
(bad)
xchg
inc
sbb
jmp
xchg
icebp
outs
push
mov
or
lock
jbe
and
leave
aam
jge
push
sbb
call
fcom
test
sbb
call
pop
mov
in
addr16
xchg
push
cld
fnsave
retf
mov
sub
jae
call
daa
call
aam
repnz
mov
jmp
mov
or
pusha
nop
(bad)
sbb
aaa
ja
sub
(bad)
and
mov
or
mov
mov
cwde
mov
or
dec
jp
pop
imul
rcl
add
call
pop
daa
stos
adc
jnp
gs
inc
cmc
inc
retf
leave
add
fwait
addr16
add
mov
in
test
cmp
repz
pop
in
mov
dec
loopne
retf
imul
test
call
shl
mov
out
std
or
cld
loopne
pop
pop
push
pop
outs
fcomp
inc
inc
mul
ret
inc
xor
das
pop
jnp
out
and
leave
mov
lea
arpl
push
out
ins
fsubr
cmp
mov
fcomp
xor
or
xor
test
cmp
das
adc
jp
ret
stc
hlt
xchg
pop
call
cmp
(bad)
mov
or
jbe
dec
retf
lock
cld
call
bound
push
fs
sbb
dec
sbb
adc
sub
dec
addr16
aas
mov
sbb
ds
test
mov
test
popf
in
bound
lahf
ja
xchg
lahf
xchg
movs
xchg
or
jl
cmps
add
push
inc
xchg
lds
xor
not
mov
jnp
jg
dec
sbb
jmp
adc
sub
jge
sbb
(bad)
add
fist
imul
rcr
inc
iret
sbb
je
or
or
add
stos
ret
or
xchg
sub
cwde
and
xchg
stos
fwait
retf
mov
arpl
ins
mov
movhps
daa
in
mov
ret
xor
pop
inc
mov
imul
not
lea
pop
and
lods
add
mov
jno
rol
push
add
add
ss
jo
ds
or
dec
xor
in
cmp
xchg
mov
inc
cs
inc
adc
and
popf
push
add
out
aas
mov
nop
dec
xchg
dec
push
in
or
inc
daa
mov
enter
ret
imul
cmps
test
and
aaa
add
clc
daa
aaa
cmc
mov
ins
dec
enter
xchg
push
in
jg
inc
inc
popf
inc
retf
dec
fild
add
test
jae
outs
push
test
fs
sub
adc
mov
mov
mov
js
adc
mov
fild
test
cmp
cmc
add
pop
mov
leavew
push
not
mov
pop
bound
xlat
test
push
loopne
ins
je
das
xchg
out
push
sti
leave
dec
mov
lea
ror
pop
sbb
push
mov
adc
out
push
das
dec
stc
or
rol
jl
adc
or
or
cdq
rcl
jg
int3
(bad)
jno
pusha
jo
xchg
clc
iret
or
mov
add
mov
push
imul
jmp
jmp
ja
mov
lods
fimul
xor
ss
js
and
dec
imul
push
xchg
and
aas
inc
sbb
fdivr
retf
jns
jmp
pop
add
mov
(bad)
test
pop
cmp
js
cli
xor
pop
cmp
push
xchg
mov
dec
inc
push
leave
retf
pop
pop
xchg
js
mov
jno
mov
fwait
mov
dec
aam
mov
je
mov
popa
xor
loopne
and
push
dec
sar
std
aad
add
loop
hlt
sahf
cmps
or
cmp
sbb
data16
imul
cmp
mov
mov
fwait
mov
retf
or
jmp
daa
fistp
mov
mov
dec
or
xchg
cmp
cmp
or
outs
sbb
inc
loope
(bad)
aad
shl
dec
push
repnz
scas
mov
mov
outs
cmp
mov
lods
cli
addr16
mov
cmp
dec
sub
ret
lds
out
in
adc
adc
sub
or
xor
adc
sbb
push
retf
popf
xchg
add
xor
inc
mov
(bad)
mov
adc
and
hlt
sti
test
pusha
leave
sbb
clc
xchg
jnp
fcom
pop
inc
popf
ja
aas
out
cwde
rep
inc
clc
sbb
mov
je
sbb
dec
jo
push
sub
int3
xchg
dec
adc
imul
pop
and
mov
mov
xor
mov
ds
push
dec
mov
mov
xchg
cmc
jecxz
stc
xchg
add
adc
cld
add
dec
in
push
xor
add
mov
cmp
clc
xchg
fs
dec
add
ror
fisttp
std
nop
ins
dec
fld
inc
pop
mov
int
int
enter
mov
mov
out
and
int3
rcl
aaa
inc
sbb
push
xchg
daa
icebp
dec
or
fisttp
int3
leave
fs
aam
sub
iret
add
inc
pop
mov
mov
pop
call
jmp
loop
jns
loop
and
add
lds
(bad)
dec
retf
cmp
add
jns
retf
std
cdq
pop
dec
out
adc
in
mov
cmp
fcomp
pop
shr
push
loope
addr16
enter
mov
mov
ret
pushf
test
sub
lea
push
cmps
clc
sub
dec
mov
dec
sbb
arpl
repnz
cmps
stos
lea
out
je
sbb
sub
mov
sbb
repnz
movs
jnp
jp
pop
test
inc
(bad)
call
push
push
and
pushf
call
pushf
repz
out
pusha
pop
adc
lock
xor
lock
push
xor
adc
push
xchg
mov
ja
mov
ror
or
inc
out
scas
add
mov
pop
dec
mov
mov
mov
aas
scas
pop
xchg
je
fcom
jge
hlt
mov
outs
inc
stos
jnp
ror
or
ins
mov
xchg
aaa
outs
mov
rcr
dec
mov
ret
inc
dec
in
ins
lods
push
jb
push
lahf
mov
inc
fdiv
inc
or
inc
mov
sub
not
cmp
add
test
pop
es
sbb
movs
sbb
add
jmp
les
mov
(bad)
jb
mov
cmp
lods
lock
out
es
mov
dec
xlat
or
mov
fsub
dec
out
fwait
lea
jp
pop
push
add
movs
jne
add
cmp
pop
rol
cmc
call
inc
call
ss
scas
inc
pushf
es
mov
mov
jp
and
sar
xchg
test
data16
xor
pusha
cmp
mov
xor
jmp
and
mov
in
(bad)
sub
out
leave
xchg
cmp
(bad)
fiadd
push
arpl
mov
std
push
jmp
pop
sbb
shr
mov
mov
iret
or
imul
sar
push
mov
les
cmp
daa
in
and
xchg
sbb
jg
cli
(bad)
call
xchg
cs
int
xor
(bad)
test
(bad)
adc
inc
mov
inc
icebp
pop
mov
scas
add
mov
xchg
lods
jbe
(bad)
push
cmp
or
int
test
jg
fwait
data16
mov
xchg
adc
xchg
loopne
sub
in
push
call
popa
push
dec
push
mov
pop
xchg
lea
imul
dec
mov
in
add
or
fild
cmp
retf
add
mov
test
sahf
addr16
std
arpl
cmp
xor
and
rcr
and
aaa
cmp
outs
pop
lahf
adc
mov
int
pop
add
cs
inc
jmp
inc
(bad)
lods
out
jecxz
ins
jno
xchg
inc
fwait
out
ret
or
popf
movs
dec
frstor
pop
add
ret
or
jmp
aad
xor
inc
sbb
in
dec
mov
xor
movs
mov
jae
fisub
xchg
xchg
cs
(bad)
or
mov
pushf
(bad)
adc
inc
std
repz
(bad)
into
add
mov
sbb
int3
mov
sub
pop
xor
sub
pop
jnp
mov
xchg
retf
jp
bound
adc
je
pop
les
fsub
mov
fisttp
aad
int3
arpl
push
jg
mov
out
daa
mov
fiadd
pop
or
jge
cdq
mov
fdivr
(bad)
cmp
cs
aam
xor
add
cmp
mov
sar
push
dec
push
aas
lock
add
push
imul
clc
arpl
clc
fcomp
cmp
cwde
jg
mov
rcl
cli
stos
fld
cld
mov
aas
aam
aas
fidiv
mov
out
and
pop
xor
pop
push
adc
mov
jl
fistp
in
xchg
adc
int3
dec
fisubr
mov
xlat
adc
jmp
dec
sub
mov
je
aam
jb
aam
mul
stc
add
and
mov
out
stos
mov
shl
push
and
xor
out
dec
jmp
ss
ins
fmul
cmp
push
mov
push
jno
outs
jp
or
push
jecxz
jp
inc
outs
mov
sar
cmp
(bad)
repnz
jne
mov
inc
jno
aaa
lods
nop
and
adc
fmul
loope
add
xor
mov
dec
sar
rcl
hlt
inc
std
jnp
cmp
and
add
in
into
mov
dec
push
and
xor
(bad)
loopne
stos
outs
cli
fld
or
outs
test
pop
out
xchg
mov
and
cmp
(bad)
jge
jge
mov
sbb
inc
inc
mov
and
scas
push
cmp
sbb
or
xchg
pop
in
mov
rcr
push
retf
jle
ffree
and
mov
push
ss
and
fst
ret
ins
stos
dec
pop
fs
div
or
mov
cmp
fs
sbb
dec
xlat
push
dec
fld
jae
int
mov
fist
cmp
mov
jo
adc
adc
int3
mov
sub
sbb
shr
sub
mov
xchg
(bad)
jecxz
pop
mov
loop
aam
scas
adc
rol
es
shl
adc
out
pop
xchg
or
imul
or
dec
fbstp
jae
xchg
jns
test
inc
fistp
das
call
sbb
(bad)
push
push
imul
cmp
xchg
dec
rcr
sbb
dec
sub
and
stos
call
pop
nop
adc
push
pop
rol
mov
cmps
enter
xchg
xor
(bad)
jno
(bad)
sbb
test
mov
shr
mov
pop
test
cli
and
mov
leave
add
mov
out
dec
push
dec
in
imul
inc
push
pusha
js
push
test
cmp
jno
push
add
push
jns
inc
mov
test
mov
stc
addr16
pop
and
aas
sbb
sub
pop
jns
mov
or
mov
ret
lods
mov
in
dec
(bad)
daa
(bad)
adc
es
cmp
mov
push
std
pop
mov
dec
xchg
cmp
push
mov
or
xchg
push
test
xchg
call
jbe
or
aad
shl
pop
mov
scas
es
adc
fiadd
scas
cmp
sub
cmp
leave
push
ins
mov
mov
retf
pop
cs
pop
mov
mov
loope
in
fs
xor
pop
xchg
jg
(bad)
std
hlt
ins
jnp
xor
ret
jne
xchg
inc
xchg
mov
loope
scas
outs
jl
scas
jns
sub
iret
or
ret
inc
fisub
jns
jnp
push
(bad)
mov
and
xor
and
dec
adc
xlat
daa
sub
mov
mov
bound
adc
jmp
test
cmp
shl
call
loop
dec
imul
push
xor
and
push
adc
jp
stos
fidiv
stos
cmp
push
aaa
fldenv
pop
jecxz
jl
ins
ja
std
in
in
push
fcom
or
(bad)
test
mov
inc
cmp
fimul
mov
pusha
shrd
sub
jp
add
jp
sbb
jmp
sub
jge
sub
repnz
push
popf
or
sbb
out
je
sub
(bad)
or
jle
add
sti
cmp
daa
jo
sub
ja
sub
sub
call
xlat
je
xchg
test
jne
(bad)
sub
add
loopne
cmp
adc
inc
dec
mov
lahf
in
adc
test
aad
clc
jns
popa
xchg
jns
fdiv
adc
push
lods
scas
xchg
jbe
mov
ds
add
bound
fucomi
sub
in
jle
iret
cld
(bad)
push
push
mov
pusha
aas
dec
push
xchg
mov
dec
dec
clc
sbb
lahf
test
fsub
test
scas
test
push
je
js
mov
iret
fidiv
push
aas
push
and
pop
push
push
rol
or
jmp
or
shl
retf
cmp
mov
inc
xor
jo
xchg
hlt
lods
mov
hlt
int
nop
mov
and
iret
shr
cmps
call
push
xchg
dec
jecxz
mov
inc
sar
jmp
jmp
jns
jmp
fs
and
mov
pop
ins
or
cmps
std
dec
push
jmp
imul
ds
jbe
leave
add
add
outs
ins
sub
cmp
pusha
adc
mov
and
xlat
sahf
mov
push
xor
cwde
push
push
adc
push
cmp
mov
mov
push
addr16
mov
lods
(bad)
ja
or
(bad)
(bad)
xchg
jmp
jb
in
xchg
ret
xor
inc
cmp
cmc
jmp
mov
pop
sbb
cmp
icebp
fcmovb
into
(bad)
push
(bad)
std
xor
mov
sub
jmp
idiv
clc
dec
dec
aad
iret
ins
in
adc
clc
lock
ss
push
arpl
mov
rcl
movs
add
cmp
mov
pop
je
mov
push
ins
xchg
add
inc
or
xor
push
dec
inc
hlt
mov
addr16
mov
pop
cmps
jo
mov
scas
ss
(bad)
xlat
ds
lods
fcom
xchg
add
xchg
fild
outs
pop
mov
imul
in
test
pop
out
xchg
repnz
mov
jnp
(bad)
dec
mov
mov
pusha
in
jns
add
jge
cli
xchg
cld
into
xchg
cmp
pop
jno
aad
mov
sti
mov
enter
jo
pop
(bad)
mov
lahf
jae
cwde
enter
nop
call
imul
jp
outs
icebp
sub
mov
aaa
ret
mul
loope
clc
jae
pop
xchg
lods
call
sbb
outs
jg
add
xchg
dec
mov
cmp
xlat
cmp
sbb
sub
loopne
in
(bad)
xor
in
mov
ss
ins
pop
jmp
test
ret
and
xor
fadd
fdivr
xlat
repnz
es
xchg
test
and
cmp
loope
mov
or
sbb
push
sub
pop
sbb
pop
cmp
fdivr
mov
add
fstp
xchg
fistp
inc
shr
retf
dec
cmp
mov
fs
and
test
mov
pushf
inc
in
jbe
adc
mov
dec
or
mov
adc
pop
cmp
xlat
sar
push
mov
inc
xchg
fild
push
sub
popa
sbb
shr
call
or
and
pop
mov
add
sar
repnz
pop
ja
sbb
push
ret
aaa
xchg
push
jno
imul
es
dec
jecxz
sub
sti
sub
in
dec
sub
xchg
stos
pop
fcomp
mov
or
or
ficom
int
ins
pop
int
sub
mov
fwait
mov
fsub
inc
(bad)
jmp
xor
das
repz
xchg
xor
and
fwait
push
repz
and
sahf
rcl
push
xchg
mov
pop
outs
push
aas
inc
push
xchg
shl
push
sbb
mov
dec
inc
cmp
inc
gs
call
mov
outs
cdq
sbb
popa
aad
mov
nop
test
das
jo
xchg
jns
test
sbb
ins
imul
fmul
mov
stos
sar
pop
test
xchg
xor
xor
adc
adc
gs
cmp
lea
push
push
inc
mov
movs
jmp
xor
mov
addr16
xchg
or
xor
and
mov
jl
clc
(bad)
cmp
loop
fs
push
xor
add
or
ftst
add
scas
in
out
mov
shl
xor
cmp
ret
int3
jmp
clc
dec
out
clc
adc
xchg
sub
jp
gs
imul
push
(bad)
or
sbb
(bad)
pop
in
mov
mov
xor
mov
int3
repz
loop
inc
sahf
out
add
push
popa
movs
pop
lods
out
mov
rol
jo
aas
fs
push
leave
jbe
outs
int3
dec
mov
dec
mov
icebp
scas
loopne
sub
(bad)
adc
sub
mov
cld
test
cmp
xor
sbb
lock
sub
out
or
imul
mov
dec
ins
pop
add
mov
mov
into
cld
cmp
sub
pop
mov
add
cmp
pop
dec
repz
pusha
mov
adc
jmp
gs
pop
shl
xchg
ret
push
out
cs
jno
retf
fs
fiadd
aam
(bad)
mov
mov
mov
inc
popa
call
cwde
loop
cmp
cmp
cs
shl
shl
cmp
nop
mov
ins
dec
inc
imul
xchg
mov
xor
loopne
movs
mov
add
pop
adc
aas
mov
inc
adc
repz
mov
jge
jp
cmp
test
mov
rcl
xor
cdq
aam
dec
and
adc
call
data16
paddsw
dec
jp
mul
mov
cmp
in
xor
and
mov
cs
int3
mov
push
sbb
jmp
xlat
outs
adc
repnz
dec
retf
repnz
push
jae
cmp
mov
push
dec
dec
inc
leave
out
and
outs
into
sub
sar
retf
mov
(bad)
imul
or
imul
push
adc
aad
call
sbb
je
mov
shl
dec
ins
mov
pop
in
dec
mov
in
xor
pop
ja
or
(bad)
sar
sub
clc
cmps
mov
jmp
xor
jle
movs
mov
sub
jl
xlat
push
gs
es
and
fs
sbb
hlt
mov
add
aad
pop
xor
nop
aam
retf
nop
enter
cmp
movs
test
fsub
test
xor
mov
ret
pop
mov
cld
xchg
cmp
out
push
sahf
cdq
xor
or
and
not
aaa
sbb
or
mov
test
pop
nop
pop
cli
je
jmp
pop
push
outs
pop
push
pop
or
(bad)
mov
xor
push
lds
jae
or
pusha
dec
out
pushf
jmp
and
out
mov
push
rol
add
mov
sti
pop
pop
mov
and
push
pop
nop
frstor
sbb
int3
ds
cmc
jae
mov
test
pop
(bad)
lock
lods
inc
dec
retf
pop
shl
sbb
add
inc
mov
sbb
mov
enter
daa
pand
aad
hlt
lock
cs
jb
push
jo
repnz
and
(bad)
pop
dec
add
add
(bad)
xor
sbb
sti
mov
pushf
mov
out
shl
lock
mov
mov
ret
xchg
add
pop
xchg
push
ror
shr
test
cmp
aad
push
add
add
add
add
cld
xor
fcomi
push
xor
daa
pop
xor
aad
inc
sub
pop
cld
int
mov
cdq
push
and
xlat
je
ret
xchg
adc
cmp
loop
(bad)
fdiv
fdiv
addr16
repnz
jp
mov
add
mov
mov
pop
les
dec
pop
into
sub
add
mov
push
cmp
inc
pop
xchg
xchg
ror
sub
mov
pop
in
fwait
stc
call
jne
xchg
pushf
mov
add
arpl
pop
mov
dec
fsubp
aad
ror
mov
add
fisub
test
mov
push
mov
mov
dec
inc
retf
mov
pop
retf
and
pop
xor
pop
jns
les
mov
in
pop
mov
sahf
repnz
(bad)
stc
(bad)
xlat
sub
out
fimul
sahf
cmp
pop
dec
mov
sbb
mov
xchg
icebp
loope
dec
cs
xchg
jecxz
mov
push
jns
repz
out
movs
xchg
cmp
sti
pop
fcomp
sbb
mov
pop
add
push
mov
sbb
sbb
lock
sbb
dec
mov
push
jmp
mov
ss
cmps
mov
dec
and
jle
imul
cmp
and
repz
mov
mov
pop
clc
push
push
push
ja
lea
mov
push
jno
mov
in
cdq
or
adc
jnp
lea
mov
push
pop
adc
sti
cmp
pop
adc
daa
inc
jno
lds
inc
jge
loope
add
aas
jae
mov
pop
mov
jle
movs
shr
mov
or
aas
xchg
imul
xor
mov
test
cs
cmp
fisubr
jae
jg
iret
test
mov
xchg
sub
push
and
(bad)
jg
sub
adc
adc
shl
in
lea
les
retf
outs
test
out
cs
test
mov
ror
add
adc
sub
out
popa
dec
add
xlat
xchg
add
retf
or
push
push
in
push
daa
push
dec
dec
jae
jbe
dec
mov
test
cwde
enter
test
cmp
shl
outs
xor
mov
push
pusha
mov
(bad)
ficomp
stos
rcl
xchg
inc
push
or
lea
add
sbb
cmp
pop
mov
xor
pop
out
loop
out
pop
or
and
pop
xlat
xchg
repz
inc
jae
and
xchg
sahf
mov
jmp
push
jne
lock
adc
lock
add
in
lahf
int
bt
jns
scas
jo
jl
mov
movs
movs
leave
cmp
ins
mov
aad
stos
fild
or
jbe
cld
mov
fsubr
jl
push
mov
cli
or
sub
test
mov
mov
mov
das
sbb
rep
jbe
test
mov
add
jp
add
mov
(bad)
xchg
push
xchg
or
and
jo
xchg
pop
dec
mov
mov
push
les
out
sub
xchg
int3
stos
mov
retf
mov
xor
pop
adc
add
xor
pop
dec
jmp
push
out
shl
nop
jg
xchg
xchg
cwde
push
push
xchg
xchg
popf
mov
add
out
ret
aaa
cwde
lods
shr
jecxz
shr
(bad)
int
stos
mov
mov
mov
retf
and
sbb
retf
scas
stos
cmps
adc
fadd
dec
mov
jmp
pusha
scas
pusha
movs
add
mov
popf
mov
lods
pop
popa
xchg
loopne
cmp
out
and
and
bound
adc
pop
fisttp
enter
push
jne
je
xchg
mov
jbe
xchg
in
outs
lds
enter
mov
push
hlt
and
sub
lea
xor
adc
cmp
push
sar
iret
sbb
mov
adc
jmp
sub
repnz
push
out
das
jne
iret
jmp
lods
dec
test
sub
aad
pushf
aaa
setp
or
dec
mov
xchg
mov
xor
pop
mov
mov
push
inc
test
mov
pop
(bad)
retf
sub
lds
div
cmp
mov
push
popf
fsubr
push
mov
sahf
xchg
or
cdq
sub
jo
push
retf
adc
and
cdq
xchg
retf
cwde
jae
loop
and
movs
dec
mov
or
leave
in
mov
and
and
adc
and
mov
neg
mov
add
mov
mov
dec
sub
ja
sub
call
push
lahf
pop
sbb
mov
cmp
inc
pop
add
nop
pop
push
retf
in
mov
rol
imul
not
cdq
jne
xchg
push
lahf
clc
jmp
ds
lea
fsubr
sahf
shl
jle
dec
sar
pushf
push
pop
push
sbb
icebp
push
ins
pop
adc
mul
nop
xchg
add
pushf
push
repnz
aaa
jo
shl
jmp
or
loope
xchg
cmp
arpl
jo
imul
xchg
gs
repnz
cdq
in
test
(bad)
ret
fsub
bound
xor
js
adc
or
mov
sub
cld
and
xchg
jbe
fldcw
push
adc
xor
mul
stc
sbb
cvtps2pd
dec
adc
ror
jmp
outs
repnz
sbb
fst
jo
xchg
pop
loop
mov
push
dec
shr
call
inc
inc
fst
dec
sub
or
cmp
mov
rcl
movs
fidivr
cmp
iret
in
xchg
ja
fiadd
sti
inc
call
pop
nop
xlat
mov
sbb
les
mov
mov
aad
imul
in
aaa
not
je
lahf
fisubr
cmp
dec
sbb
repz
sub
aam
dec
sbb
xchg
(bad)
dec
push
call
aad
mov
shl
xchg
enter
inc
ss
fwait
in
fsubr
xchg
dec
aad
ror
aaa
cmps
push
jg
pusha
dec
pop
js
in
jmp
fisubr
outs
adc
xchg
ja
push
js
(bad)
loopne
sti
jecxz
push
pop
pop
adc
mov
dec
xor
jbe
inc
ja
sti
and
jl
loop
gs
neg
jg
pop
cmp
and
push
(bad)
outs
jmp
sbb
push
clc
jae
(bad)
adc
popf
add
call
xor
lahf
lock
jbe
outs
sub
(bad)
enter
add
pop
cmps
out
clc
jle
xchg
add
mov
mov
daa
ss
es
inc
jno
push
lods
push
call
out
xchg
mov
pusha
adc
mov
cmp
and
or
test
mov
push
out
adc
daa
in
sub
xchg
add
dec
lock
in
inc
test
les
and
sbb
pusha
or
ins
addr16
call
fcmovb
push
rcr
lock
in
out
adc
inc
fwait
rcl
pop
lods
arpl
in
and
sub
test
mov
cmp
xchg
cmp
dec
sub
xchg
fcmovnu
pusha
mov
cmp
cmp
(bad)
fild
xchg
mov
stos
xor
(bad)
(bad)
dec
pop
and
sbb
xor
inc
add
dec
aaa
push
push
add
mov
xor
xchg
pop
dec
scas
fist
cmp
int3
cmp
pusha
daa
add
cwde
out
dec
retf
ds
push
lea
adc
inc
lods
in
jo
lea
push
in
stos
pop
mov
retf
(bad)
fistp
enter
xor
neg
imul
scas
nop
mov
adc
mov
int
adc
mov
pop
xor
imul
out
fnsave
jle
(bad)
push
ss
jnp
push
fistp
imul
loop
ret
push
or
mov
mov
mov
bound
sti
or
xor
lods
in
fidiv
mov
imul
mov
test
sub
mov
movs
je
mov
int3
xlat
test
lock
push
dec
mov
push
(bad)
and
adc
xchg
cwde
imul
pop
loop
cwde
pop
into
cli
push
rol
push
mov
mov
retf
frstor
ja
(bad)
inc
or
jge
test
mov
ret
or
xchg
pop
push
popa
jbe
dec
jae
into
jp
fsubr
xchg
outs
xchg
or
das
mov
iret
dec
xchg
pop
enter
rcr
sar
pop
cmp
xor
stc
(bad)
xchg
add
ret
push
push
pop
std
loope
add
adc
xchg
dec
push
outs
es
inc
cmp
hlt
movs
popa
dec
pop
ins
aaa
cld
dec
jle
sub
aaa
and
fs
imul
outs
add
ja
cmp
push
xor
mov
mov
jnp
aam
jge
(bad)
jl
imul
sbb
lock
cmp
out
ror
jmp
js
out
xor
adc
vpsubd
std
inc
cmp
pop
lods
int
inc
lock
mov
jns
xor
fdiv
xor
(bad)
push
inc
mov
xor
cli
mov
jno
movs
or
movs
les
int3
dec
push
or
xor
lds
push
jo
adc
rcr
sbb
(bad)
jg
push
push
(bad)
and
int3
and
adc
js
or
push
adc
jo
cli
push
lods
push
(bad)
ins
xchg
mov
mov
jmp
arpl
mov
xor
cmp
xchg
jmp
push
xor
les
inc
loope
or
jae
clc
cmp
push
mov
shl
sub
es
add
xchg
call
and
dec
push
sub
jns
mov
mov
inc
jo
mov
push
pusha
push
jmp
int
sahf
and
in
retf
or
and
mov
dec
push
jbe
jns
int3
push
pop
xchg
sahf
inc
ja
mov
rcl
xchg
mov
sahf
pop
pop
imul
inc
cmp
test
int3
jnp
fnsave
add
ret
outs
jbe
and
ret
out
xor
(bad)
push
mov
jmp
jbe
xchg
in
sub
and
xor
mov
or
mov
pop
dec
adc
mov
jg
sub
pusha
mov
xor
push
iret
push
in
retf
cld
lea
xchg
call
inc
cmp
mov
(bad)
cmp
ja
mov
add
aad
pusha
outs
inc
std
jns
inc
mov
or
mov
add
mov
bound
test
push
lahf
fldcw
mov
mov
jg
jbe
loopne
pusha
add
je
sub
mov
jo
push
movzx
push
xchg
ins
adc
inc
(bad)
pop
mov
xchg
and
sub
push
or
push
add
xor
das
dec
repnz
inc
push
inc
mov
imul
mov
xor
in
mov
mov
add
ret
rcr
xchg
(bad)
inc
leave
xor
cmp
cs
bound
fwait
cs
(bad)
mov
dec
mov
xchg
pop
xchg
xchg
add
dec
jns
rcr
iret
xchg
cmps
call
mov
sub
inc
dec
push
xchg
sub
or
mov
(bad)
loop
or
pop
xchg
dec
adc
jg
push
push
jae
mov
shr
jp
fimul
mov
mov
sub
loop
arpl
into
stc
popf
dec
dec
addr16
sub
xor
xchg
popa
mov
pop
push
lods
clc
enter
mov
(bad)
fidivr
mov
rol
inc
dec
repnz
mov
icebp
jl
mov
test
repnz
push
cmp
jecxz
movs
inc
mov
hlt
iret
fld
std
dec
cdq
inc
cmp
pushf
xchg
mov
jae
pop
or
push
inc
push
jnp
aaa
cmp
cdq
or
jnp
retf
inc
jecxz
cmp
sbb
popf
mov
fucomp
pop
mov
pushw
leave
test
dec
and
leave
mov
clc
call
fadd
push
jb
fcmovb
and
inc
sub
lock
jge
and
pushf
nop
out
movs
add
mov
mov
push
loope
jo
mov
xchg
repnz
icebp
inc
xchg
shl
sbb
lods
in
daa
inc
hlt
push
cmp
add
hlt
push
call
jecxz
inc
xlat
call
mov
and
cwde
jns
out
fmul
jmp
cld
stos
pop
mov
and
loope
sar
jmp
sbb
scas
in
int
xchg
lods
pop
add
popf
xchg
fsubr
xchg
push
ror
inc
aas
push
add
shl
(bad)
pop
imul
or
out
xlat
jno
pop
rcr
and
repnz
fisttp
push
dec
scas
pop
pop
sub
add
inc
jo
lods
sub
jb
mov
mov
mov
neg
cmp
or
mov
mov
loop
push
iret
or
jle
sub
push
js
push
ins
add
xchg
sti
xor
add
mov
mov
fadd
or
or
aad
int
sub
das
mov
or
cmp
lock
dec
ret
out
repz
test
adc
xchg
cli
leave
dec
sar
sub
cli
mov
fist
add
xor
call
pop
push
mov
test
inc
inc
xchg
cs
pop
dec
out
repnz
sbb
stc
cmp
nop
mov
imul
mov
mov
xorps
pop
std
cli
jl
in
jl
xor
lods
cmp
icebp
pop
dec
out
out
cmp
sub
test
cmp
retf
(bad)
mov
retf
scas
xor
adc
pop
adc
cmp
pop
test
inc
ins
mov
imul
jbe
pop
fwait
cmp
adc
js
xlat
retf
mov
or
jp
sbb
jp
jne
jge
mul
add
add
cs
fdiv
add
aaa
out
pop
aas
das
lahf
jg
fs
mov
mov
add
sahf
jae
pop
xchg
mov
cmp
add
mov
jo
push
test
and
loop
jb
rol
test
fnstsw
and
and
adc
xchg
mov
mov
mov
pusha
jno
cld
ret
push
or
mov
xor
test
mov
add
cli
fnstcw
out
repz
and
jno
test
xchg
in
xor
mov
iret
fisttp
fdiv
(bad)
sbb
mov
xchg
mov
lods
mov
pop
sub
ror
test
sbb
mov
or
(bad)
enter
ss
push
aas
xchg
add
push
cmp
inc
pusha
xchg
xlat
jne
push
loope
imul
inc
mov
cwde
pusha
push
dec
icebp
pop
fsubr
call
cld
ror
imul
add
(bad)
imul
(bad)
pop
xchg
adc
mov
mov
aam
pop
hlt
dec
fnstsw
(bad)
jmp
sub
sbb
fld
jg
lods
add
lahf
popf
xor
cmp
jmp
jb
repnz
cmp
jp
test
je
loop
call
adc
add
mov
mov
mov
pop
jo
inc
popw
loope
xlat
pushf
cdq
mov
mov
stos
retf
rcr
nop
loop
lods
sbb
dec
popf
lahf
sbb
inc
mov
xchg
pop
das
lahf
jle
pushf
aaa
and
aas
sbb
lea
out
cli
cmps
dec
aaa
test
(bad)
adc
push
jns
pop
lea
jle
mov
sar
mov
pushf
bound
sar
(bad)
lock
stc
mov
fs
cmp
ins
cwde
scas
fldpi
push
int3
cdq
leave
test
mov
sahf
cld
cmps
and
popa
out
xchg
loope
or
or
xchg
out
call
movs
mov
pop
inc
outs
pop
neg
fistp
mov
movs
xchg
push
popa
out
mov
int3
repz
test
pushf
movs
cmps
nop
dec
dec
in
pop
es
add
(bad)
pop
and
jp
and
sub
add
add
sti
adc
jo
sbb
retf
push
out
iret
xor
mul
pushf
popa
jge
inc
loop
retf
sub
push
int
test
jne
dec
inc
adc
fcom
mul
cmp
inc
jp
pushf
mov
jp
into
pop
mov
dec
xchg
adc
dec
(bad)
and
test
sub
mov
or
jge
push
scas
sbb
(bad)
jecxz
sbb
aam
retf
push
push
push
jno
call
clc
(bad)
call
aas
and
adc
pop
pop
(bad)
jne
push
jb
jmp
sbb
test
daa
imul
test
inc
adc
sub
in
sbb
data16
ror
dec
cmps
out
inc
sbb
out
std
stc
mov
jne
add
mov
jl
(bad)
fucomi
adc
pop
mov
adc
fiadd
out
cmps
add
sub
ss
xor
nop
jg
int3
fld
loopne
mov
imul
jmp
(bad)
repz
mov
jno
adc
dec
xchg
or
xor
gs
xor
fwait
push
pop
dec
std
mov
jmp
pop
push
lahf
cmps
pop
and
xor
push
jg
xchg
mov
or
pusha
rol
call
add
cmp
and
mov
jno
push
imul
xchg
xchg
sbb
test
push
movs
pusha
sar
imul
jne
test
push
frstor
cmps
push
inc
or
or
ins
and
inc
mov
mov
or
adc
push
or
mov
out
imul
pop
push
das
fistp
icebp
icebp
(bad)
(bad)
sub
xchg
jne
and
sbb
mov
sti
icebp
xor
adc
mov
mov
or
scas
mov
add
adc
inc
xor
xor
dec
aaa
dec
lds
call
and
out
pop
in
fwait
push
test
stc
setnp
adc
inc
inc
mov
jle
sar
clc
fs
xchg
out
jl
and
jmp
lock
pop
jmp
push
es
sub
add
or
fcom
jne
(bad)
pop
jg
pushf
mov
and
ror
inc
popf
or
jle
inc
xor
mov
ficomp
movs
sub
(bad)
pop
aaa
and
lahf
stos
ret
aas
mov
jg
rol
test
dec
jns
clc
sbb
and
outs
xor
out
stc
sub
sbb
xchg
jns
pop
outs
movs
mov
das
xchg
mov
addr16
adc
mov
ds
(bad)
fimul
out
xchg
jg
fcomp
jne
sub
pop
xor
enter
inc
mov
xor
cmp
imul
jg
into
retf
push
pop
ret
xchg
nop
(bad)
sub
cmp
sub
jns
test
dec
mov
inc
mov
aas
xor
cmp
pushf
cmps
int
xchg
push
movs
jno
inc
movs
jo
push
sub
inc
dec
jmp
inc
out
(bad)
mov
push
leave
dec
retf
loopne
dec
neg
fadd
xor
mov
xchg
push
or
scas
(bad)
push
fwait
push
push
outs
mov
aam
push
dec
call
popa
push
sub
es
cmp
loopne
sti
std
add
shl
out
xchg
(bad)
pop
adc
cmp
repnz
mov
into
xchg
mov
mov
or
hlt
push
jg
mov
dec
fdiv
sub
jo
lock
push
jg
pop
add
push
pushf
sub
loopne
and
test
stc
in
lds
jl
fs
aas
mov
mov
cmp
xor
pop
dec
loopne
sub
loopne
add
pushf
mov
scas
sub
add
clc
out
test
jmp
mov
cmp
add
and
sub
adc
pop
call
jge
inc
mov
popf
mov
hlt
sbb
or
sub
add
or
(bad)
jno
sbb
mov
mov
sbb
cmp
inc
push
sub
pop
fisubr
mov
mov
add
cdq
mov
xor
mov
call
ret
inc
pop
je
and
sub
pop
imul
mov
(bad)
rcl
inc
les
push
std
fsubp
test
leave
or
add
ret
pop
inc
adc
xor
cmp
rcl
push
ret
jne
fnsave
stos
xchg
es
std
xchg
pusha
push
xlat
ins
mov
adc
bound
ss
in
inc
cmp
pop
xchg
les
jnp
js
test
sub
lds
lods
aad
dec
into
sbb
cmp
pop
rcl
jo
adc
mul
(bad)
bnd
outs
pop
mov
shl
lea
mov
mov
push
sbb
sub
in
mov
mov
daa
out
test
jle
mov
lds
out
test
and
test
ja
test
xchg
call
add
daa
sbb
mov
(bad)
and
xor
mov
cmp
aad
xor
inc
stc
fdiv
push
sub
(bad)
ss
and
inc
leave
xor
test
cwd
div
add
mov
jl
cmp
mov
lock
dec
repnz
loope
jg
inc
adc
js
pop
fbstp
or
stos
jecxz
xchg
fwait
out
cmp
js
ror
sti
jge
cmp
inc
xchg
mov
sub
and
into
loop
fcmovu
jmp
jo
cmp
gs
sti
bound
mov
jns
sbb
(bad)
sbb
xor
dec
popa
stc
(bad)
jmp
cld
push
and
(bad)
(bad)
jg
jmp
stos
push
jbe
retf
stos
shr
sar
fchs
sbb
pop
cmp
(bad)
jg
pop
test
sub
xchg
hlt
push
jnp
in
retf
or
fistp
pusha
js
sti
ja
lds
mov
popa
ja
add
push
push
add
sti
dec
fcmove
or
pop
fwait
add
lods
movs
mov
or
add
xchg
xor
and
cmps
test
aad
scas
(bad)
fbstp
loope
xor
cs
aas
pop
popf
popf
adc
pop
xchg
in
outs
cld
dec
leave
test
fist
add
push
sbb
and
sbb
call
cwde
into
pop
and
jmp
pop
sbb
xor
in
mov
jne
push
pushf
adc
mov
and
sbb
push
retf
iret
fisubr
push
aaa
mov
ret
out
stos
hlt
int3
addr16
iret
lods
or
in
jge
add
and
test
data16
ret
dec
in
std
push
sub
adc
rcr
mov
outs
sbb
or
or
hlt
ins
retf
(bad)
addr16
and
cmps
mov
popa
pushf
push
ret
iret
xchg
push
scas
jmp
dec
xchg
and
adc
repz
dec
sbb
push
jp
cmp
cmp
pop
sahf
das
mov
les
lock
sbb
loop
add
mov
sub
adc
shr
sub
cmps
cwde
push
pushf
push
pop
mov
xchg
sub
int3
cmp
sbb
xchg
mov
mov
add
sub
mov
rcr
js
(bad)
icebp
lock
pusha
and
push
sbb
mov
push
and
ror
loop
call
adc
daa
xchg
or
pop
or
(bad)
(bad)
inc
push
xor
cmp
imul
jle
dec
push
mov
jg
add
scas
imul
rcr
pop
jle
or
das
lea
aas
push
add
sbb
(bad)
jle
ins
stc
inc
jae
pop
mov
lahf
sub
movs
stos
mov
cdq
nop
ins
int
retf
loop
in
fnstenv
and
push
mov
push
stos
sbb
outs
adc
mov
and
aad
lahf
pop
inc
fsub
inc
adc
dec
leave
sahf
add
cmp
dec
push
mov
lods
(bad)
sbb
jg
inc
jmp
iret
mov
mov
cmc
cwde
mov
cmc
into
mov
ret
mov
ficom
push
sbb
add
and
xchg
lds
sub
clc
rcr
in
cmp
ror
or
dec
shl
rol
iret
or
add
or
cs
pop
xchg
scas
pop
je
dec
test
push
ss
mov
sar
xlat
clc
jbe
jmp
pop
push
mov
shr
leave
xor
in
ja
mov
mov
nop
mul
xchg
push
fidivr
and
outs
aam
push
jp
mov
or
bound
xchg
repnz
sbb
mov
cmp
jecxz
inc
mov
stos
push
cdq
lea
daa
ret
jmp
ret
pop
outs
jmp
sub
test
cld
pop
sub
inc
push
and
pop
xor
mov
fimul
(bad)
add
pop
pop
push
push
js
in
jne
pop
mov
test
mov
sbb
push
ins
icebp
loope
fidiv
sar
mov
sti
pop
std
cwde
(bad)
xlat
mov
pop
fst
neg
out
sbb
fbstp
clc
push
cs
push
imul
lock
mov
les
sahf
jnp
mov
sub
je
cld
out
clc
aas
inc
(bad)
test
addr16
stos
mov
in
or
ss
clc
or
fsub
mov
jge
xchg
sub
mov
adc
push
ds
test
sub
inc
add
adc
inc
call
jmp
mov
cwde
out
xor
jmp
jp
ins
xchg
push
xchg
sbb
dec
xchg
test
nop
aaa
inc
mov
mov
mov
xchg
lods
fwait
rcl
sar
out
imul
mov
out
aas
or
cmp
jg
and
cmp
pop
stos
jmp
or
stc
test
push
icebp
xchg
mov
jmp
jbe
or
enter
cmc
inc
pop
pop
xor
cli
mov
sub
int3
iret
inc
in
dec
fnsave
ss
push
adc
dec
pushf
sbb
xor
sbb
push
fbld
(bad)
out
xchg
sub
ss
jo
imul
inc
or
dec
mov
dec
outs
int
stc
xor
fnsave
movs
and
imul
mov
xor
(bad)
mov
inc
loop
in
mov
jo
or
xchg
xor
add
outs
test
xchg
pop
mov
or
sbb
or
and
fldenv
add
lods
jmp
cmc
or
repnz
pop
sar
fbstp
cmp
ja
mov
dec
ror
fimul
(bad)
rcr
in
sub
sbb
daa
dec
cmp
cmp
call
jb
cdq
pop
or
sahf
jmp
(bad)
pop
arpl
add
addr16
pop
sti
xlat
dec
sbb
xchg
mov
jmp
adc
ss
xor
std
jmp
pop
dec
sar
mov
mov
loope
retf
outs
mov
xchg
mov
push
sub
pop
cmp
imul
sub
sub
lea
xor
shr
nop
ins
leave
aaa
dec
xchg
xchg
jae
mov
cmps
(bad)
sbb
dec
outs
test
jns
nop
in
(bad)
jmp
iret
mov
mov
jns
test
push
cmc
push
stc
cmps
pop
and
daa
and
push
pop
leave
pop
dec
dec
das
xor
dec
in
or
xor
stos
cmps
and
adc
xchg
aad
mov
(bad)
retf
xor
movs
inc
mov
stos
mov
pusha
dec
or
jb
mov
popa
mov
add
jno
cmp
cli
jb
xchg
fstp
jns
push
mov
in
sub
in
popa
mov
(bad)
xchg
sbb
lods
pop
stos
ja
mul
scas
ja
pop
ins
xor
lods
pop
jmp
daa
ret
jecxz
jno
push
clc
popa
cmps
les
cmps
out
int
test
sbb
mov
pusha
shl
stos
inc
in
push
jnp
pop
addr16
aam
adc
inc
cmps
out
test
adc
inc
or
jl
jae
adc
aas
pushf
add
push
retf
mov
mov
inc
mov
and
inc
cmp
mov
cwde
mov
ins
rcl
add
push
or
cwde
aam
mov
push
repnz
sub
mov
neg
loopne
jmp
or
push
sbb
xchg
in
lea
or
shl
test
std
cmp
jae
dec
and
push
or
cld
cmp
jmp
rcr
sbb
push
and
jae
or
scas
push
sub
icebp
out
push
push
jle
sbb
in
add
add
repnz
pop
hlt
mov
ffree
fidiv
(bad)
ret
mov
sar
loope
sbb
cmps
call
cwde
cli
fimul
or
xchg
popa
fidiv
mov
mov
push
js
(bad)
in
add
loop
inc
jns
jge
or
cli
jbe
add
repnz
xchg
out
idiv
cmp
aaa
cmps
pop
in
cmp
fwait
jno
mov
xchg
cmp
pop
fcmove
popf
lock
jg
popf
lock
pop
xchg
mov
arpl
mov
inc
mov
inc
aam
xchg
cmp
nop
fild
jnp
sahf
lods
pushf
adc
pop
push
sar
test
lds
js
sub
pop
sub
out
loope
adc
in
sbb
aaa
ret
sbb
popf
xchg
mov
or
push
adc
jmp
stos
mov
movs
jp
sub
and
aas
xchg
fist
(bad)
adc
shr
sbb
out
gs
(bad)
sub
ficom
sub
adc
inc
xlat
fist
adc
rcr
xchg
sub
inc
outs
sub
stos
outs
in
repnz
pop
push
loope
pushf
add
cmps
inc
mov
sahf
inc
icebp
xor
ds
sub
jmp
xor
jnp
and
sbb
mov
jbe
in
jecxz
or
shr
jae
movs
ins
add
test
mov
mov
jae
push
clc
mov
push
pop
fisubr
sbb
in
icebp
xchg
mov
pop
mov
or
sti
sar
pop
xor
div
mov
ins
js
ror
popf
or
dec
xor
and
and
js
div
out
jae
rcl
pop
mul
jo
imul
inc
mov
sbb
inc
jno
push
test
aam
call
in
and
cdq
pop
xchg
and
push
push
lods
sti
in
adc
je
pop
push
and
es
(bad)
fadd
nop
in
popf
cmp
jmp
or
fwait
mov
pop
mov
out
xchg
cmp
test
or
mov
retf
pop
mov
add
or
arpl
aaa
mov
rol
mov
add
stc
js
pop
xor
adc
adc
push
stc
mov
adc
mov
mov
inc
sub
pop
in
scas
mov
push
clc
or
ja
cmp
or
retf
and
mov
pop
call
push
les
stc
aam
(bad)
fs
adc
cmps
jne
add
pop
mov
in
push
cmp
(bad)
inc
mov
clc
daa
in
sbb
idiv
dec
xchg
gs
je
mov
dec
push
xor
scas
jmp
stc
shl
jl
ja
pushf
es
test
sub
push
xchg
fidivr
xchg
adc
ficom
and
outs
cmps
sub
push
or
movs
in
fistp
cmps
inc
cmc
adc
aad
int3
ss
fdiv
dec
ja
xor
bound
jnp
cmp
daa
scas
add
aaa
ins
(bad)
fcomp
push
rol
test
sbb
cwde
cwde
xor
int
and
jns
fwait
in
xchg
mov
push
outs
cmp
ret
loop
cmp
dec
sub
leave
and
das
jmp
push
xchg
(bad)
bound
stos
dec
sbb
ret
push
jnp
pop
clc
pop
dec
div
mov
xchg
add
aas
jge
je
test
jb
fsubr
lods
(bad)
scas
ins
ret
pop
sbb
out
and
jmp
mov
mov
pop
xchg
xchg
shl
pusha
(bad)
lock
inc
fwait
and
ds
popa
or
jmp
ret
loop
inc
mov
cmp
cmc
call
pop
(bad)
rol
or
jge
cmp
std
enter
cmp
mov
xlat
or
cwde
adc
mov
ds
adc
and
pop
lods
sbb
mov
push
push
scas
retf
mov
pop
js
movs
jnp
in
(bad)
mov
push
mov
pop
aam
cli
sti
lock
and
xor
or
jb
mov
sti
test
test
test
pop
or
jmp
(bad)
push
pushf
test
fs
add
pop
sbb
fwait
call
mov
dec
mov
iret
pop
jns
lods
mov
mov
sar
push
sbb
push
dec
xchg
or
aas
inc
gs
sar
pop
mov
adc
iret
shl
xor
pop
sub
gs
daa
mov
sub
test
push
sbb
dec
es
and
arpl
call
mov
push
loop
icebp
sub
xchg
mov
out
xchg
das
outs
xor
inc
repz
mov
aad
inc
dec
add
adc
pop
paddusb
pushf
xchg
clc
imul
xor
sbb
rol
mov
mov
mov
inc
xor
mov
push
fwait
pusha
imul
mov
je
and
fld
hlt
push
xor
xchg
sub
fidivr
loop
inc
inc
retf
lds
inc
dec
mov
inc
cdq
cld
loop
and
add
imul
mov
cmps
push
mov
mov
pop
push
cmp
sbb
gs
inc
mov
gs
add
sbb
cmp
push
cmp
add
mov
gs
jns
test
inc
mov
mov
or
inc
out
mov
or
jns
call
call
jae
mov
pop
aaa
xchg
pop
push
je
add
loop
mov
outs
sbb
repz
add
mov
movs
ss
cmp
bound
outs
sbb
repz
and
fisubr
or
inc
imul
iret
pop
fsubr
jns
inc
mov
(bad)
cmp
adc
aam
into
lahf
in
test
xor
mov
lahf
es
cmp
xlat
call
dec
sti
jg
jae
test
test
(bad)
sbb
mov
(bad)
sbb
mov
pop
pop
dec
mov
repz
mov
retf
mov
les
mov
sub
outs
clc
popa
push
lds
and
mov
cmp
mov
add
(bad)
(bad)
or
popf
jae
fcom
cs
inc
outs
mov
mov
jnp
data16
jecxz
sbb
or
in
lods
fwait
jl
mov
add
stc
(bad)
mov
test
pusha
inc
mov
stos
xchg
into
not
or
mov
jp
jbe
in
iret
pop
sub
adc
pop
xchg
cld
pop
sti
mov
loope
int3
sbb
rcr
fs
shl
add
cmps
test
(bad)
(bad)
arpl
popf
sub
js
fcom
popf
shr
cli
mov
loopne
push
sub
or
test
push
inc
jecxz
cmp
lea
js
movs
and
mov
fcom
push
loope
adc
in
add
add
push
fcmovnu
pop
mov
cmp
stos
add
movs
loop
and
push
cmps
push
test
iret
add
inc
mov
cmp
mov
mov
sahf
ret
test
add
mov
shl
push
sub
cld
repz
cmps
jmp
xlat
lock
xor
push
es
jmp
stc
js
xor
rcl
inc
sub
dec
fs
xor
(bad)
cmps
js
popf
repnz
shl
movs
aaa
dec
inc
popa
or
add
stc
mov
mov
and
push
jp
addr16
mov
pop
sahf
mov
ror
add
mov
sbb
inc
cmps
stos
imul
aas
push
fwait
mov
ja
stc
mov
xor
pop
sub
test
adc
imul
push
add
pop
cmp
mov
add
xchg
xchg
test
xor
jno
sub
and
mov
cli
add
ins
inc
xchg
gs
mov
push
pushf
cmp
aas
dec
xchg
stos
scas
aaa
mov
ins
push
jno
xchg
shr
sbb
add
daa
nop
push
scas
pop
clc
or
and
stos
mov
jbe
push
mov
js
add
cs
xor
jae
jmp
lds
leave
dec
stos
movs
cmp
(bad)
xor
push
imul
pop
dec
loope
cli
inc
mov
test
test
and
pop
dec
xchg
xchg
sbb
mov
shl
add
test
hlt
int3
(bad)
lods
das
in
push
mov
push
adc
(bad)
into
xchg
push
add
js
adc
push
jl
retf
lea
add
lahf
js
cdq
hlt
pop
mov
aaa
push
(bad)
fdiv
lea
push
sbb
adc
push
sti
dec
push
pop
push
sub
retf
sbb
imul
mov
dec
push
enter
sahf
push
and
pop
pop
inc
sbb
xchg
push
out
clc
repnz
and
or
cmp
dec
daa
dec
add
mov
xchg
out
mov
xchg
xlat
push
in
arpl
pop
fwait
push
pop
xlat
xor
and
dec
or
test
loop
adc
imul
mulps
jmp
test
xchg
add
ror
push
xchg
cmc
push
in
mov
and
push
pop
mov
dec
dec
fidivr
adc
rol
sub
movs
cmps
out
sub
sub
fisttp
das
mov
out
outs
fimul
xchg
mov
arpl
retf
adc
lea
rsm
lods
pop
push
jno
mov
push
mov
gs
mov
stos
dec
stc
imul
add
or
stos
xchg
repnz
push
xor
xchg
aad
call
js
push
les
out
repz
xchg
cmps
pop
xor
fdiv
leave
cwde
mov
loop
cmp
out
aas
(bad)
xor
out
pop
jo
cmp
dec
cmc
ret
loope
xor
add
(bad)
pushf
xor
xor
pop
or
mov
mov
lahf
cmp
adc
dec
test
or
xchg
ja
clc
or
mov
fsub
dec
push
add
lock
pop
sub
int3
mov
and
jns
cmp
fidivr
jle
xchg
loope
fdiv
push
test
dec
pusha
retf
nop
xor
and
sbb
pop
les
dec
adc
icebp
pop
inc
xchg
cmp
mov
sbb
jns
shl
jbe
xchg
stos
fnstsw
xor
sbb
inc
mov
mov
fwait
adc
mov
pop
jne
push
sbb
cmp
and
lea
mov
add
sub
outs
add
push
mov
jge
lock
fadd
scas
xchg
(bad)
int
jb
mov
inc
lds
loop
add
test
mov
mov
ret
loop
xchg
scas
cli
enter
fldcw
ret
mov
ds
add
inc
xor
in
dec
in
jge
call
mov
cmp
jns
sbb
jge
ins
jnp
mov
and
push
cdq
jne
and
push
scas
mov
mov
mov
adc
add
pushf
push
test
test
xchg
jo
xchg
div
retf
add
in
fld
aam
fcmovb
in
loop
mov
out
stos
dec
loopne
test
cli
sub
and
jne
pop
stos
push
adc
adc
xlat
std
ins
xchg
mov
cmp
(bad)
cli
mov
daa
or
push
mov
test
cld
jmp
or
dec
push
xlat
cmps
add
sbb
and
mov
inc
es
leave
cmp
dec
push
(bad)
shl
mov
dec
mov
mov
in
jnp
lea
clc
out
loop
sub
jno
dec
xor
pop
dec
push
imul
xlat
and
push
or
adc
das
out
push
imul
cwde
jb
bound
dec
adc
xor
imul
fs
push
mov
jge
aam
sbb
add
sub
ds
inc
(bad)
sbb
pop
ficomp
fistp
aam
jle
(bad)
xor
ss
mov
mov
cmp
jmp
jg
scas
and
fucomip
mov
ficom
lahf
retf
test
add
arpl
sbb
push
add
inc
jg
pop
ins
mov
mov
fcom
and
push
mov
sub
shl
not
or
mov
loop
mov
pop
xchg
sbb
ret
jmp
int
pop
aad
pop
test
dec
sar
sub
in
pop
xchg
sbb
cli
add
inc
jge
mov
rcl
or
cld
icebp
pop
pop
shl
pop
aam
mov
pop
jcxz
stc
xlat
dec
shl
jae
pop
cmp
call
xchg
(bad)
loopne
push
aaa
or
call
mov
pop
pop
sar
retf
ss
lods
inc
movs
pop
int
hlt
sub
xchg
pop
pop
and
jecxz
pop
fisub
popf
mov
xor
(bad)
add
inc
dec
jne
cmps
jecxz
icebp
rcr
pop
lock
in
pop
pushf
hlt
or
cmp
es
add
xchg
sbb
(bad)
popa
outs
push
cmp
pop
clc
test
shr
test
fistp
(bad)
aam
cmpps
call
inc
xchg
daa
hlt
jl
mov
xchg
or
cmp
and
mov
xor
mov
int3
and
daa
call
add
jmp
adc
inc
sub
rcl
add
ins
cmp
xchg
mov
jecxz
mov
fnstenv
out
or
stos
cmp
sbb
cld
(bad)
neg
sub
fimul
and
jle
test
or
dec
jmp
xchg
or
retf
jg
jle
data16
sar
movs
leave
mov
cmp
fiadd
xor
cmp
inc
out
rcr
pop
out
jle
xor
enter
jns
or
rcr
jge
popf
and
je
sbb
mov
(bad)
aad
dec
ins
inc
xchg
xor
jb
into
push
or
ror
jae
aam
jbe
push
xchg
stos
and
adc
push
xchg
mov
jne
aaa
mov
mov
rol
sub
jg
mov
fst
fnsave
push
mov
cmp
stos
add
outs
or
repnz
xor
dec
cmp
mov
dec
jb
mov
stc
inc
fld
pusha
nop
int3
adc
jo
cs
dec
mov
add
pop
and
mov
xchg
sbb
mov
(bad)
je
(bad)
repnz
cmp
in
sbb
sbb
mov
shl
rcl
sti
aad
and
sbb
outs
jno
push
dec
push
icebp
scas
sahf
fwait
call
pusha
es
mov
dec
jecxz
leave
sbb
arpl
add
pop
rcr
test
mov
sbb
sahf
stc
push
add
or
inc
add
in
rcr
jecxz
jmp
mov
nop
and
arpl
add
push
cmp
xchg
pop
mov
xor
loopne
jno
shr
outs
add
mov
pop
cmp
adc
popa
jne
and
sbb
js
arpl
push
out
push
shr
and
inc
daa
pop
aaa
jg
imul
iret
xor
and
jge
add
shl
in
adc
aad
or
(bad)
xchg
or
xor
fstp
cs
cmp
push
fwait
adc
push
es
cmp
(bad)
and
mov
mov
xor
(bad)
mov
cmps
mov
es
dec
hlt
xchg
out
sub
sub
cmp
mov
cmp
xchg
inc
lock
jg
mov
fwait
mov
adc
jno
inc
jne
sub
jne
dec
fs
les
pop
pop
push
and
fnsave
lock
fwait
add
outs
loopne
scas
aam
pop
fnstsw
mov
add
fs
test
jb
dec
outs
push
sbb
add
or
pop
mov
dec
or
xchg
cmp
sub
in
out
jmp
and
sbb
and
js
pop
ins
push
lds
setns
enter
retf
rol
dec
arpl
mov
fnstsw
div
or
or
inc
retf
(bad)
jmp
mov
(bad)
mov
xchg
cmp
sbb
xor
lods
std
(bad)
sub
ja
inc
test
pop
inc
push
mov
xor
xchg
cli
mov
cmp
loopne
jle
jg
ins
adc
fwait
bound
sahf
in
xor
dec
jo
inc
das
sbb
outs
mov
pushf
not
push
ins
inc
frstor
std
movs
call
(bad)
mov
dec
les
stc
jle
or
retf
das
or
das
cli
test
inc
fcomi
ins
repz
pop
push
jge
das
xchg
retf
fdiv
inc
cmp
cs
vmwrite
sbb
mov
fsubr
adc
mov
stc
mov
jo
inc
push
push
rol
mov
or
cmp
xchg
aaa
dec
cmovb
push
mov
jae
icebp
sub
loope
add
jp
sbb
in
hlt
daa
cdq
dec
fidivr
and
out
pop
push
and
add
(bad)
mov
mov
stos
popa
xchg
jno
stos
dec
aam
cmp
push
clc
repnz
adc
cmp
fisub
dec
inc
clc
adc
dec
inc
mov
in
pop
fmul
aad
das
lods
nop
sub
repnz
ins
xchg
ins
pop
xor
mov
into
jp
mov
mov
retf
jne
fist
mov
aas
jb
fidivr
enter
mov
inc
sbb
dec
cwde
sub
sub
clc
mov
push
iret
outs
call
or
inc
push
ret
push
ins
outs
dec
arpl
pop
ja
pop
(bad)
dec
aas
js
push
test
pop
mov
push
xor
mov
data16
push
lahf
mov
jl
xchg
popa
int
mov
pop
mov
stos
cmp
test
mov
fistp
movs
xor
aaa
test
loopne
addr16
loop
inc
call
mov
stc
hlt
pop
outs
add
mov
mov
ds
cmc
sahf
sub
xor
sub
mov
or
dec
adc
push
scas
jge
jge
in
icebp
(bad)
dec
or
push
jno
div
dec
and
mov
mov
std
xlat
add
and
cli
xor
sahf
cmp
cmp
ins
out
imul
inc
cdq
lahf
sub
mov
mov
ret
icebp
xchg
or
jge
call
cwde
mov
out
fnstenv
fistp
adc
cmp
int
pop
jp
hlt
icebp
imul
sbb
sahf
scas
aad
or
dec
sbb
or
ret
xchg
jno
jmp
or
(bad)
sbb
xor
aas
outs
xor
pop
pop
dec
out
mov
push
inc
push
pop
frstor
mov
jle
movs
cmp
and
mov
jge
daa
pop
imul
outs
out
in
call
(bad)
push
cmp
inc
mov
enter
mov
xor
in
leave
cwde
scas
sbb
jmp
sti
jg
jge
hlt
(bad)
add
out
pop
pop
or
fwait
jp
mov
hlt
les
jns
mov
mov
out
in
in
jbe
loope
pop
cld
or
sar
dec
sbb
and
aad
inc
ins
dec
dec
mov
rol
sub
test
push
xor
lock
fsubr
inc
popa
mov
xchg
xchg
fimul
mov
jge
cmc
jmp
sub
mov
out
stos
xor
sub
sbb
or
lock
rdpmc
retf
xor
and
lods
nop
scas
jl
xchg
scas
sbb
sbb
ds
fdivr
cmp
xchg
in
aam
cmp
xlat
pop
test
mov
pop
repnz
pop
loopne
push
jno
fwait
mov
pop
mov
adc
mov
cmp
jns
xor
add
scas
sub
ins
dec
pop
int
jg
mov
mov
jp
rcr
(bad)
mov
repnz
and
dec
js
pop
js
mov
cmp
jl
pop
inc
add
(bad)
pop
test
lds
xchg
nop
xchg
retf
loopne
add
mov
lods
push
imul
mov
push
(bad)
mov
bound
push
cwde
push
imul
inc
adc
adc
test
push
imul
call
mov
push
repnz
ins
mov
push
lods
enter
and
pop
stos
inc
pop
fadd
sub
stos
xor
fist
out
xchg
fidivr
pop
sub
ss
sahf
ret
or
sub
mov
imul
cmp
cmp
mov
movs
arpl
(bad)
xchg
mov
sbb
sub
(bad)
push
test
scas
dec
mov
xor
ds
cmp
pop
sub
data16
iret
or
inc
shl
adc
push
add
jae
and
pop
lea
ror
addr16
icebp
lahf
cwd
test
lahf
cmp
ja
mov
xchg
sub
lods
loop
enter
mov
sbb
jmp
jns
xor
outs
jbe
cmps
sbb
inc
push
inc
dec
mov
push
(bad)
dec
pop
and
dec
ins
pop
or
xor
jl
pop
pop
jg
add
int3
jns
sub
movs
lahf
sub
fimul
push
dec
rol
push
cmp
fiadd
push
mov
pushf
fs
out
imul
xchg
out
imul
mov
or
daa
in
jecxz
add
or
jne
lock
outs
rcr
adc
jno
jo
adc
mov
mov
or
xchg
mov
mov
repz
ins
pop
loopne
aaa
repz
out
pushf
fimul
cmps
imul
inc
adc
icebp
jge
shr
sub
movs
(bad)
add
dec
or
imul
dec
arpl
mov
ret
xor
mov
inc
pop
pop
push
pushf
adc
inc
sub
fs
mov
pop
leave
nop
push
sti
cmp
loope
int3
push
push
push
fisub
rcl
fcom
add
adc
(bad)
es
scas
add
into
mov
mov
mov
pushf
mov
cld
std
inc
xlat
cli
pop
outs
dec
push
pushf
loope
dec
test
into
or
jle
and
outs
stc
test
and
adc
push
inc
(bad)
cmps
adc
fwait
inc
stos
imul
jb
xchg
or
push
mov
xchg
aaa
xchg
cmp
mov
jo
mov
test
fiadd
jo
jecxz
xchg
shl
or
inc
jo
ds
or
shr
mov
mov
in
sbb
push
mov
sbb
adc
push
and
fcmovnb
rcl
push
rcl
xor
stc
adc
push
in
jl
xchg
lea
cmp
jmp
xor
aam
imul
jno
mov
inc
pop
or
mov
stos
mov
adc
into
adc
rcl
sbb
mov
lods
and
out
ja
fcomp
sub
push
xor
loop
adc
(bad)
jge
adc
xchg
mov
mov
jg
mov
push
retf
(bad)
jnp
rcr
loop
mov
sti
imul
jg
pop
cdq
cdq
shl
mov
imul
pop
in
xchg
inc
mov
mov
cmps
push
sbb
mov
movs
push
sbb
ss
sub
aaa
sbb
pop
inc
jb
adc
inc
lea
mov
shl
cld
mov
(bad)
dec
cmp
retf
mov
jle
daa
out
xor
jl
jge
inc
fist
sar
jge
mov
xchg
mov
push
or
shl
(bad)
in
stos
cmp
retf
dec
pusha
mov
call
pop
mov
mov
mov
mov
xchg
adc
jnp
ins
leave
rol
(bad)
test
sbb
sub
ins
jge
movs
xchg
pop
xchg
sbb
leave
shl
xor
in
call
and
xchg
cmps
xor
add
mov
dec
in
mov
sar
push
loopne
gs
and
mov
pushf
out
sbb
push
xchg
push
inc
loope
pop
int
inc
mov
pop
in
inc
sbb
and
or
sbb
fidivr
sub
mov
aas
push
inc
popf
sub
int
mov
scas
push
xor
mov
(bad)
jg
cmps
push
mov
pop
mov
or
sub
lock
adc
sbb
xchg
jecxz
and
cmp
mov
fnstenv
arpl
test
sar
or
push
shl
out
adc
call
sub
imul
hlt
cmp
sub
retf
(bad)
inc
stos
jge
shl
pop
icebp
rcl
jp
push
dec
(bad)
imul
push
jb
retf
sbb
les
int3
dec
shl
retf
push
(bad)
mov
(bad)
(bad)
xor
add
sub
push
or
ret
jbe
inc
aad
dec
test
mov
(bad)
pop
aad
repnz
mov
xchg
and
xchg
push
daa
in
pop
icebp
fidivr
call
icebp
add
rcl
ins
sbb
gs
mov
inc
adc
mov
and
cmp
jbe
dec
mov
sbb
sub
or
repz
and
lahf
pop
add
scas
cmps
(bad)
je
fs
aam
jmp
add
add
add
sbb
mov
arpl
ins
xor
test
adc
pop
push
xchg
ja
(bad)
pop
bound
jg
aad
push
sbb
mov
in
pop
jns
outs
aas
xchg
xor
ret
popa
cmps
loop
lods
xchg
sub
mov
mov
test
pop
sub
jmp
sbb
jge
and
push
stos
lds
movs
mov
pusha
int3
pop
fidiv
pop
mov
arpl
inc
imul
ss
int
dec
mov
xor
or
das
sub
cmp
xchg
xlat
pop
push
call
in
gs
sub
retf
mov
add
cmp
out
fdivrp
pusha
inc
popf
mov
jecxz
nop
jmp
jmp
dec
jl
(bad)
xor
jb
add
mov
in
or
dec
icebp
or
lods
cmp
sub
sysexit
adc
dec
aaa
xchg
or
or
jns
inc
push
dec
test
cmps
push
aam
aaa
add
mov
lahf
mov
pop
pop
test
inc
fiadd
jne
out
mov
push
rcl
inc
mov
and
sub
and
aad
and
add
rol
movs
ss
dec
xchg
daa
loop
push
imul
sbb
pop
imul
xchg
lahf
es
jns
or
sbb
test
dec
or
in
mov
adc
or
push
sub
lahf
fist
movs
pop
pop
cmp
retf
fimul
ret
aam
test
and
or
jns
dec
in
xchg
push
dec
mov
inc
dec
(bad)
push
add
daa
and
push
mov
inc
ret
out
mov
xchg
mov
scas
pop
scas
cmp
jo
int
mov
lods
pushf
scas
sbb
shl
sbb
xor
jno
addr16
and
xor
sub
mov
leave
cmp
pop
retf
(bad)
stc
out
push
cmp
mov
xor
mov
dec
addr16
xchg
mul
xchg
jno
jl
mov
popf
ja
xor
pop
mov
cmp
cmp
dec
(bad)
cmp
rcl
mov
pop
ret
movs
jb
cmps
or
push
ins
or
icebp
mov
pop
push
neg
mov
in
cmc
add
sub
pop
out
jno
xor
mov
mov
cdq
jbe
jbe
ja
retf
popf
cmps
mov
pop
jo
xor
sbb
ficom
pop
imul
test
push
jns
bound
icebp
loopne
ficomp
xchg
aad
daa
xor
adc
push
stc
lods
add
sbb
xchg
in
inc
add
test
hlt
inc
cdq
adc
ja
loopne
mov
push
and
cmps
in
adc
xor
js
je
into
rcl
cmp
cmp
mov
xchg
test
mov
or
mov
stc
out
inc
mov
cmp
xchg
xchg
mov
inc
out
jo
ror
in
jne
ja
sbb
xchg
adc
test
retf
jne
xor
jns
add
out
cmp
mov
scas
jl
mov
int
rcr
adc
dec
cli
inc
jb
or
sub
pop
ficomp
sbb
mov
xchg
int3
mov
dec
add
ins
xor
stos
add
aas
fisttp
dec
jb
sbb
out
adc
imul
sbb
addr16
xor
inc
sub
scas
test
xlat
dec
mov
int
arpl
sub
xchg
cmovo
push
das
jne
or
popa
push
mov
idiv
into
fwait
aaa
sbb
pop
repnz
sbb
dec
js
add
imul
mov
mov
jb
cdq
pop
push
cmp
fsub
pop
movs
xchg
jbe
pusha
movs
cdq
clc
mov
ins
and
cmp
pop
mov
sub
leave
xor
idiv
das
mov
mov
push
sbb
in
jp
add
inc
pop
add
int
dec
and
cmp
retf
pushf
out
xor
add
xchg
cmp
ds
xchg
test
add
daa
push
push
ja
retf
mov
adc
scas
jmp
sub
loope
in
mov
sbb
mov
shr
pop
mov
call
dec
add
xchg
push
loopne
mov
stos
mov
mov
inc
test
lods
stc
into
(bad)
imul
sbb
clc
in
std
repnz
nop
pop
pop
jb
and
and
jp
fistp
add
pop
xchg
sbb
lods
popa
sub
ror
loop
fs
repnz
loope
dec
add
or
js
mov
cmp
fcom
outs
repz
cs
ss
arpl
cmp
mov
pop
xor
popa
enter
mov
jnp
fisub
mov
inc
pop
sti
xchg
cmp
jge
int3
out
(bad)
pusha
stos
mov
inc
jmp
clc
xchg
stos
mov
sub
into
inc
es
mov
or
or
shl
lea
inc
add
pop
cmps
adc
mov
sub
xlat
cld
(bad)
mov
mov
inc
push
mov
push
cmps
data16
jnp
(bad)
or
(bad)
xlat
or
dec
lods
ins
cmp
push
or
test
fild
add
cmp
mov
daa
adc
xor
mov
mov
and
push
or
inc
(bad)
aas
mov
push
fidiv
in
cwde
mov
(bad)
fnstenv
outs
mov
fcmovu
adc
sbb
movs
popa
mov
xor
cmps
fwait
push
xchg
stc
mov
cmp
(bad)
mul
xchg
outs
lods
into
jne
lock
aas
fucomp
ret
je
and
leave
cmps
xchg
lahf
xlat
cmc
aad
enter
sbb
and
xchg
lods
push
xchg
jl
std
pop
sbb
mov
stos
hlt
jns
shl
aad
mov
xchg
mov
sbb
mov
aaa
xor
rol
in
stc
adc
sub
lds
dec
sbb
bound
idiv
out
mov
cdq
mov
imul
adc
repz
popa
push
xchg
add
rsm
lock
and
mov
xor
adc
xchg
jp
mov
inc
sub
xchg
push
pop
ret
mov
jmp
xchg
fs
cmp
add
xchg
mov
out
inc
mov
xor
mov
xchg
mov
das
xchg
cld
int
xchg
xchg
loopne
mov
mov
jbe
mov
shr
pushf
inc
sbb
jle
icebp
push
mov
(bad)
dec
clc
and
imul
mov
jp
mov
hlt
clc
test
fsubr
nop
cmc
or
fsubr
dec
or
cmp
push
shr
pop
mov
push
jbe
les
sbb
fcmovne
cld
fld
or
and
mov
jne
je
cmp
hlt
xchg
push
lock
nop
out
scas
fucomp
cmp
cmp
dec
movs
or
sub
mov
fst
out
retf
not
test
ja
mov
nop
inc
ficomp
mov
popf
sar
sub
xor
adc
jno
cmps
xlat
sbb
dec
push
ror
xor
int3
int
outs
inc
mov
lahf
adc
test
adc
int
cmp
push
inc
fstp
test
or
fidivr
xchg
cs
call
mov
mov
dec
mov
adc
mov
jecxz
cli
dec
retf
ss
cmp
or
out
sub
mov
out
lea
mov
jno
push
into
ds
fmul
lods
sbb
xchg
sub
test
push
ds
es
mov
(bad)
mov
xchg
outs
lods
xlat
xchg
popf
cmp
outs
test
retf
pop
loopne
ret
pop
out
gs
push
cwde
mov
mov
push
cmp
pop
test
xchg
dec
in
js
pop
leave
ror
mov
(bad)
lods
(bad)
adc
sbb
mov
lods
add
(bad)
ins
adc
popf
xchg
arpl
mov
cmp
push
inc
ds
pop
and
aas
iret
adc
push
xchg
jl
sbb
popa
sbb
or
mov
xor
dec
xlat
mov
xor
dec
loopne
clc
mov
imul
push
cmp
mov
js
cmp
xor
arpl
dec
xchg
jp
sbb
adc
fisubr
jle
call
les
adc
js
jle
adc
jmp
jae
nop
or
jecxz
jnp
daa
and
add
mov
mov
imul
adc
adc
add
sbb
pusha
(bad)
pusha
out
ret
retf
shl
push
test
shr
or
icebp
loop
ja
and
inc
xchg
loopne
jle
jnp
bound
in
sub
popa
xor
sbb
cmp
stos
mov
les
das
test
retf
rol
cmps
lds
test
cwde
pop
ins
cs
ds
sbb
push
jns
jg
retf
adc
fcom
ret
scas
push
push
inc
in
jne
shl
dec
scas
in
mov
push
xor
mov
jecxz
lods
stos
cmps
test
mov
add
mov
into
cmp
js
pushf
push
sti
adc
fcomp
es
push
or
retf
test
dec
and
jb
sub
jbe
sbb
pushw
sti
jns
call
ret
cmp
mov
ror
aad
and
xlat
add
ss
(bad)
adc
lahf
ins
ja
jmp
iret
xchg
pusha
mov
ret
mov
lds
jmp
fcmovnu
mov
sub
xchg
mov
fbstp
pop
mov
add
outs
sahf
imul
xchg
sub
(bad)
mov
rol
inc
stc
or
sbb
bound
scas
add
outs
loop
inc
and
icebp
push
out
iret
ds
xchg
cmp
cmps
cdq
movs
dec
mov
test
fstp
fidivr
leave
and
inc
movs
stc
jp
dec
dec
xor
sbb
adc
sub
or
push
pop
add
dec
jecxz
add
push
jmp
das
in
jbe
lahf
pushf
mov
fidivr
stos
mov
xor
(bad)
addr16
mov
bound
cmp
add
push
xchg
enter
hlt
lea
adc
in
mov
or
scas
popa
imul
mov
lods
js
stos
inc
lea
jnp
xor
fwait
mov
fldl2t
adc
shl
ins
dec
(bad)
retf
cld
pusha
xchg
fwait
xchg
sub
scas
mov
sub
xor
pop
aad
and
aas
or
gs
mov
hlt
scas
lgs
ss
add
sbb
push
int3
aam
test
xlat
mov
retf
sub
pop
je
inc
adc
sahf
inc
adc
pop
sbb
out
dec
dec
sbb
push
iret
or
add
ss
mov
add
clc
outs
jnp
sub
and
sar
push
adc
jae
cmc
dec
add
inc
loopne
das
adc
add
push
cld
stos
xchg
jle
(bad)
adc
adc
add
mov
das
xor
out
xchg
push
and
dec
mov
sbb
mov
cmp
mov
jecxz
xor
xchg
rol
xchg
xlat
enter
repz
ret
ss
mov
(bad)
cdq
outs
sub
ss
sahf
xor
std
xchg
pop
mov
xlat
nop
push
pop
xor
dec
popa
cmp
push
aas
imul
ret
mov
adc
mov
outs
sub
sahf
and
cmps
imul
addr16
into
mov
mov
imul
jmp
push
inc
cmp
je
or
dec
stc
repz
dec
daa
ret
or
inc
rcr
adc
cld
shl
and
xchg
call
(bad)
xchg
sbb
das
add
inc
aad
dec
mov
push
les
dec
dec
and
mov
xlat
push
mov
imul
adc
je
mov
xor
(bad)
mov
repz
jb
fdiv
jecxz
xor
sub
and
jb
mov
fsub
dec
ss
mov
jb
clc
sbb
test
mov
out
popa
je
xchg
xor
push
xchg
mov
sti
adc
fld
cmc
mov
rol
test
das
iret
nop
aam
inc
mov
cmp
scas
(bad)
stc
fdivrp
sahf
or
sub
test
nop
test
(bad)
aam
add
lahf
dec
leave
cmp
fwait
inc
sub
mov
ret
push
xchg
inc
stc
mov
in
jl
clc
ins
add
pop
int
cmps
test
in
sbb
repz
add
imul
mov
jge
imul
ds
lahf
dec
adc
sub
and
test
push
dec
icebp
out
cmp
ret
into
call
jmp
loop
jno
sub
ftst
shl
dec
jle
xor
test
mov
jb
xchg
adc
mov
inc
add
ret
mov
pop
cmp
cmp
ror
mov
add
repnz
pop
clc
fldenv
add
mov
jb
mov
in
test
jno
test
cwde
xchg
loop
addr16
or
in
mov
push
sbb
sub
pop
mov
sahf
(bad)
sub
movs
int3
dec
push
clc
ja
jge
inc
lds
mov
lods
scas
mov
stos
mov
sbb
cld
fstp
call
xchg
into
in
out
add
nop
jne
sub
(bad)
out
push
push
in
push
sbb
(bad)
cwde
lods
fisubr
mov
cmc
fxch
aad
test
cli
jl
inc
push
stos
lods
and
cdq
xchg
in
data16
xrelease
das
cmps
pop
call
cmc
inc
push
xchg
cmc
xor
and
popa
xchg
not
ror
adc
add
fmul
es
data16
or
adc
pop
adc
ret
mov
or
or
(bad)
pop
inc
call
mov
jp
push
sar
xchg
ins
aad
bound
jbe
dec
cmp
mov
mov
call
inc
lahf
stos
shl
lahf
jmp
test
mov
push
in
push
ror
imul
int3
mov
dec
popa
sahf
mov
dec
xchg
sti
out
mov
adc
fwait
adc
pusha
cmp
inc
rol
add
fld
add
inc
stos
mov
fldenv
push
jecxz
push
xchg
ret
dec
xor
fs
push
addr16
xor
mov
mov
mov
(bad)
mov
xor
outs
jp
(bad)
test
sbb
pop
sbb
imul
stos
xchg
mov
mov
inc
bnd
or
pusha
data16
sti
mov
cs
lock
push
xchg
and
mov
out
call
(bad)
(bad)
lahf
sbb
mov
dec
data16
sub
mov
movs
pop
shl
xchg
(bad)
fadd
xchg
push
cld
sub
(bad)
(bad)
mov
test
in
(bad)
lds
test
and
mov
mov
nop
mov
jno
add
mov
xchg
mov
mov
jne
sahf
test
pop
test
xchg
scas
xchg
in
adc
add
test
push
mov
add
mov
ins
shl
fs
and
shl
cmp
and
icebp
aas
xor
xor
repz
cmp
mov
cs
ret
loope
cmp
(bad)
scas
je
aad
js
dec
push
xor
(bad)
push
(bad)
in
test
push
jb
iret
movs
aad
(bad)
xchg
adc
xor
xchg
rcl
in
mov
imul
or
and
push
jno
mov
out
shl
mov
jbe
in
jmp
cmc
push
lds
jecxz
das
sbb
push
sbb
dec
cmp
pop
mov
pop
outs
ja
push
adc
add
mov
mov
jb
enter
fnstenv
xchg
out
and
push
sbb
ins
push
sub
inc
mov
out
fsub
xchg
mov
cmps
lahf
ja
stc
daa
daa
xor
cmp
ror
aas
adc
sub
sti
outs
push
jae
jg
cmp
(bad)
(bad)
js
shr
xchg
stc
jbe
stc
arpl
xor
rcr
das
push
call
icebp
cdq
rcl
sub
call
jg
jecxz
addr16
xchg
test
jg
cwde
mov
sbb
mov
adc
(bad)
out
add
mov
jae
cwde
mov
cmp
pop
mov
movs
xchg
xor
sub
inc
xchg
or
mov
cmp
xor
fwait
jp
out
xchg
or
mov
out
les
mov
add
dec
add
ja
mov
pop
mov
jle
loop
dec
xchg
outs
push
sbb
push
push
mov
loope
mov
pop
dec
out
jo
js
mov
mov
out
mov
adc
inc
mov
cmps
clc
cmp
xor
sbb
retf
or
push
mov
sub
lock
adc
fdiv
daa
push
pop
sbb
push
js
push
fisub
movs
fsub
shr
jo
jmp
cmp
in
iret
out
js
sub
loopne
cmp
push
pop
dec
fmulp
retf
imul
bound
dec
push
dec
jmp
jnp
inc
ficomp
ja
add
xor
mov
fsubp
cmps
xor
jns
jmp
pop
int
idiv
and
int
mov
pop
imul
pop
jb
push
xchg
pop
les
pop
dec
adc
lahf
mov
sbb
cmp
(bad)
jb
push
and
ror
cmps
loopne
mov
dec
push
push
jp
cwde
retf
cmp
ss
sti
test
or
jmp
ror
mov
and
adc
leave
out
adc
out
sbb
jns
into
(bad)
cmp
inc
lods
fldenv
stos
lods
das
add
xchg
mov
call
(bad)
sti
pop
in
rcl
cmc
jae
cmps
xchg
(bad)
aad
out
cmp
int
in
pushf
push
aaa
pop
lahf
es
aam
cwde
scas
inc
jl
sar
test
sbb
add
sub
test
pop
mov
jae
and
gs
ja
sbb
xor
fyl2x
adc
xchg
popf
xchg
xchg
imul
fsubrp
in
pusha
xchg
ss
mov
pop
jb
lods
scas
push
out
push
(bad)
stos
call
bswap
inc
fld
data16
outs
lahf
das
mov
in
imul
pop
pop
push
stos
xor
rcl
das
in
rol
outs
sahf
int3
cmc
(bad)
call
sub
pop
ret
addr16
(bad)
mov
inc
retf
popa
sub
shr
jge
sub
inc
fcmovnbe
ds
xor
(bad)
mov
arpl
sub
cs
xchg
xor
cli
sbb
outs
pop
call
push
out
xchg
cli
push
test
jmp
lds
inc
sti
(bad)
push
movs
push
or
xor
cmp
popf
imul
movs
mov
lods
dec
(bad)
adc
or
clc
sahf
mov
push
dec
xor
push
movs
xchg
movs
je
cmp
hlt
and
bound
ficom
sahf
aad
dec
fstp
pop
(bad)
in
and
aad
lods
ins
ss
ret
adc
xchg
sahf
xchg
test
or
imul
lods
test
cmc
stc
lods
retf
cmp
ss
mov
out
dec
dec
mov
jge
icebp
in
pop
icebp
mov
inc
xlat
pop
loope
cli
push
push
aad
fild
outs
pushf
mov
add
inc
push
sbb
inc
jg
xor
(bad)
int
xor
lock
mov
jne
aad
shl
inc
push
(bad)
fild
enter
add
test
jnp
mov
xchg
mov
fidivr
xchg
adc
jg
mov
aaa
in
jge
sub
add
jecxz
sahf
sub
cmps
ss
xor
cld
mov
fdivr
jg
adc
(bad)
push
es
mov
mov
iret
test
clc
test
mov
or
out
into
loope
inc
das
mov
fwait
xchg
pop
adc
xchg
(bad)
(bad)
xchg
fwait
cwde
fwait
pop
into
ins
js
outs
mov
loop
push
fwait
ins
mov
ret
int3
xchg
sbb
aaa
ret
mov
in
popa
lods
clc
sbb
xchg
gs
rcl
aam
mov
gs
dec
sti
ret
add
inc
ja
pop
clc
mov
int
jb
call
je
add
lea
call
retf
xchg
inc
adc
mov
dec
inc
adc
xlat
fstp
jne
inc
cmps
push
stc
mov
sub
jmp
popa
lock
stos
jg
jne
add
mov
cld
mov
div
das
xor
mov
cmc
jbe
xchg
jne
aaa
mov
das
sub
inc
inc
dec
clc
pop
lds
xor
addr16
sbb
pop
add
(bad)
cmps
hlt
push
sub
cld
fistp
inc
lahf
jns
adc
and
fs
push
jo
ficomp
adc
add
div
imul
sti
cmp
fistp
sbb
mov
sbb
or
cmp
stos
fs
inc
test
jl
ins
xchg
iret
hlt
xor
nop
gs
inc
mov
stos
xchg
movs
fidiv
jge
cmps
(bad)
nop
outs
cmps
sub
or
cmps
fs
fild
adc
cmps
in
aas
pop
cwde
ror
loop
jmp
or
shl
xor
aad
dec
(bad)
das
fmul
jae
in
sahf
(bad)
mov
push
mov
retf
test
dec
inc
shr
ss
out
push
sbb
push
aam
jb
test
pop
push
int
push
jae
daa
push
daa
mov
mov
aaa
call
xchg
mov
push
mov
sub
nop
pop
jmp
call
push
jg
mov
stc
add
arpl
add
ins
idiv
retf
fnstsw
in
xor
ret
shr
jp
nop
loope
repz
ror
(bad)
fs
mov
clc
inc
pop
clc
je
rol
and
pop
inc
aas
(bad)
bound
mov
pop
push
repz
fadd
out
sub
push
mov
faddp
test
xchg
mov
push
rol
adc
(bad)
imul
mov
xchg
sahf
cmp
leave
(bad)
adc
retf
push
je
sub
xlat
xchg
inc
stc
inc
push
push
loope
jle
mov
mov
and
mov
movs
adc
inc
(bad)
add
hlt
cwde
into
mov
xchg
sub
xor
jbe
aam
cdq
std
or
push
in
lea
and
loope
adc
imul
push
in
ror
loop
xor
adc
icebp
out
adc
dec
cmp
sbb
add
pop
addr16
rol
aad
xchg
cdq
xor
call
mov
icebp
out
test
dec
push
mov
dec
mov
push
mov
inc
(bad)
add
in
clc
mov
test
sbb
mov
mov
xor
pop
cld
out
dec
int3
sbb
cs
js
test
mov
rol
adc
pop
dec
les
xor
lds
cdq
mov
(bad)
push
(bad)
scas
fstp
mov
sbb
mov
push
jne
jae
lods
sub
repnz
adc
iret
inc
lahf
sti
shr
retf
xchg
adc
popa
(bad)
std
fisub
mov
fcom
repnz
es
mov
in
sar
bound
and
in
jns
(bad)
dec
call
pop
movs
jp
leave
enter
enter
or
imul
popa
pop
cmps
int
repz
popa
jp
push
popa
int
sbb
lea
dec
and
ss
pop
das
cs
repnz
mov
push
cdq
outs
pop
mov
push
cmps
aaa
push
xchg
test
in
in
mov
pop
mov
push
dec
and
arpl
push
mov
outs
retf
pusha
dec
int
jae
xchg
int
gs
sbb
test
call
stos
push
mov
cli
xor
pop
sub
or
cmp
mov
and
addr16
jmp
ins
mov
xor
test
in
loop
test
push
cmps
neg
push
sbb
cmp
jmp
in
pushf
jecxz
pop
sub
out
imul
mov
ss
and
mov
mov
pop
inc
and
or
out
cmps
xchg
mov
in
enter
pop
in
or
imul
loope
jg
inc
dec
leave
cwde
test
bound
fs
inc
rcl
cmc
dec
dec
test
sbb
shl
pop
push
lds
loopne
mov
sti
mov
sbb
inc
jl
sbb
pushf
imul
aad
cwde
in
push
push
dec
stos
lahf
xor
inc
sub
pop
retf
or
je
lds
in
or
call
inc
sub
std
adc
cmp
mov
mov
add
enter
fild
push
imul
das
cmp
and
popa
aad
and
jl
cmp
xor
das
sbb
pop
push
loope
sbb
dec
cwde
dec
stc
(bad)
mov
pop
fdiv
dec
mov
lods
xor
fidivr
pusha
retf
or
gs
push
xchg
fcomp
inc
pop
jb
mov
mov
js
ins
out
nop
push
sbb
(bad)
int
mov
push
inc
mov
or
dec
jne
push
mov
stc
cmp
inc
and
arpl
jae
mov
mov
inc
retf
sbb
sbb
sbb
jmp
push
jbe
sub
sbb
out
fld
jecxz
add
ret
ja
call
lods
popa
cmp
in
mov
adc
shr
mov
xchg
xlat
jl
ds
sbb
fstp
inc
nop
push
and
add
pop
cmp
sub
inc
add
inc
add
adc
fist
out
hlt
mov
mul
mov
icebp
pop
sbb
jae
xor
and
adc
lock
push
push
mov
add
mov
add
xor
clc
scas
call
pop
mov
stos
adc
adc
outs
cmp
into
out
jbe
xlat
dec
out
dec
nop
mov
fisub
sbb
jge
xchg
lahf
call
sti
(bad)
sbb
xchg
pop
push
xchg
(bad)
sbb
sub
jne
push
or
cmc
ret
dec
mov
dec
cmp
popf
in
js
in
call
sbb
push
popa
sti
inc
xor
movs
and
inc
(bad)
and
and
nop
adc
add
test
sbb
jbe
mov
retf
cmps
mov
icebp
sbb
cmp
jae
pop
push
inc
loope
cmp
jp
int3
xor
jmp
lds
lods
add
hlt
inc
icebp
sbb
cwde
(bad)
into
loopne
outs
scas
leave
aas
or
fsubr
aaa
hlt
in
pop
dec
adc
pushf
xor
cmp
ja
push
pop
jl
add
cmp
push
push
ja
shl
test
cmc
mov
cmc
or
xchg
je
les
mov
pushf
jnp
inc
mov
scas
pop
mov
xlat
dec
icebp
push
mov
dec
call
(bad)
xchg
rcr
xchg
mov
pop
push
adc
sub
iret
fstp
movs
cwde
or
fcom
cmp
ins
fsubr
xchg
mov
popf
inc
mov
test
(bad)
in
shr
mov
mov
pushf
fcmovu
mov
adc
scas
xchg
mov
jge
popf
pop
cmp
push
call
sti
cdq
lfs
dec
ret
inc
out
or
aas
sbb
popf
repz
cmp
imul
jmp
push
jbe
fdivrp
xchg
mov
shl
je
jo
mov
test
mov
mov
lea
push
(bad)
fcom
in
mov
dec
(bad)
mov
add
inc
test
jg
das
ret
sti
mov
add
mov
mov
pop
lahf
cmc
sahf
in
fnstcw
pop
out
xchg
inc
xor
cmp
(bad)
int3
xchg
add
jge
jo
add
xor
js
dec
xor
jae
and
(bad)
jl
cs
gs
dec
outs
clc
jae
test
mov
cld
push
jmp
mov
call
cdq
pop
call
dec
cwde
xor
int3
test
call
pop
dec
add
xlat
sub
jmp
aam
or
and
cdq
jle
cld
xchg
movs
imul
push
pop
xchg
fwait
sbb
or
sbb
aad
dec
out
push
mov
jle
rcl
cdq
xor
fwait
ret
adc
add
dec
adc
stc
inc
dec
mov
push
sbb
mov
fwait
std
pop
(bad)
adc
xchg
test
mov
add
jp
sar
popf
int3
jbe
imul
cmp
enter
xchg
pop
mov
sub
jne
inc
int3
push
adc
inc
pop
mov
and
icebp
rol
xchg
rcr
aaa
ins
add
mov
fdivr
aas
les
lahf
or
mov
xor
sbb
push
dec
mov
push
add
popf
outs
jae
jbe
jno
xchg
int3
(bad)
xchg
dec
mov
add
cmps
cmp
mov
shl
rol
sahf
sub
je
dec
sub
clc
imul
push
jbe
inc
push
push
shr
pop
repnz
xor
jo
sahf
(bad)
std
cmp
jo
into
movs
ins
loope
xchg
scas
ret
mov
rcr
push
push
dec
into
out
sub
cmp
xchg
xchg
stos
imul
daa
pop
or
(bad)
mov
jg
rcl
jmp
scas
std
jae
cmp
jne
out
enter
in
cmp
ins
mov
stos
retf
cmp
fbld
int3
div
cmp
cmp
shr
cmp
pmovmskb
mov
add
xor
les
xor
dec
mov
or
inc
enter
lods
std
or
xchg
mov
mov
xchg
mov
pop
loope
adc
mov
adc
jno
fmul
mov
ins
push
sbb
shl
mov
out
and
pop
loope
rcr
int3
sub
pop
dec
xor
mov
sub
outs
mov
test
push
mov
test
daa
adc
cmps
or
jno
pushf
rcr
dec
fs
or
cmp
xchg
jae
(bad)
icebp
cli
sahf
mov
add
cmps
pop
and
leave
loopne
pop
loope
pop
repz
imul
pop
scas
je
sub
fwait
inc
adc
or
push
xchg
sbb
aaa
mov
add
add
retf
xchg
imul
jmp
fadd
adc
dec
inc
aas
cli
aaa
mov
pop
xchg
mov
and
sar
jae
movs
test
cli
clc
and
mov
xchg
pushf
adc
cmp
push
pushf
pop
pop
lock
aas
push
cmp
sub
fidiv
mov
mov
fidiv
fisubr
icebp
jae
movs
lock
mov
mov
es
pop
arpl
dec
add
pop
outs
cwde
pop
test
packuswb
call
xchg
inc
cmp
repnz
js
cmp
movs
jnp
xor
out
enter
push
adc
daa
arpl
fs
mov
cwde
shl
cmps
cmc
sub
jmp
mov
ret
std
ror
cld
ds
es
push
repnz
stos
adc
mov
or
xchg
sub
inc
inc
ins
mov
fidiv
aad
pop
and
in
push
inc
inc
cli
add
mov
push
rcr
ror
jne
push
stc
xchg
cwde
xor
lock
(bad)
sbb
inc
ret
popa
daa
(bad)
addr16
sub
aad
hlt
scas
mov
xor
popa
(bad)
pop
xchg
mov
test
fstp
ret
sar
cwde
loop
mov
inc
mov
movs
arpl
int
inc
jge
and
inc
loop
lea
std
lods
sahf
enter
popf
dec
push
dec
rcr
pop
shl
push
mov
into
in
retf
adc
mov
jbe
std
ss
je
hlt
mov
sub
sub
retf
jnp
mov
jo
aam
ficomp
mov
and
and
xor
rcr
mov
lock
xor
xlat
out
jge
and
adc
xor
repnz
loope
push
or
scas
(bad)
mov
xor
add
arpl
mov
sbb
aas
in
mov
jecxz
jmp
pop
add
dec
loope
pusha
js
lea
in
cs
xor
pop
cmp
ret
lods
jge
inc
test
inc
movs
aas
jne
stc
sbb
xor
cmp
xlat
mov
addr16
and
dec
xor
pop
push
lods
and
xor
es
push
xchg
in
into
cli
rol
push
leave
fadd
inc
fild
cmp
dec
movs
and
sbb
test
hlt
push
mov
and
dec
adc
outs
sbb
(bad)
push
mov
inc
and
jns
bound
out
xlat
and
fidivr
sbb
jle
or
cmp
iret
movs
hlt
push
xor
les
out
add
jne
les
std
sub
ror
xchg
sahf
mov
xlat
aam
sub
ja
pop
dec
cli
and
hlt
in
jg
pop
cs
ror
mov
add
push
(bad)
mov
add
xchg
(bad)
sbb
movs
xor
repz
cld
pusha
aaa
add
sub
push
adc
enter
popf
push
(bad)
rcr
(bad)
or
(bad)
out
aaa
ret
mov
mov
scas
add
mov
mov
dec
imul
adc
js
sbb
arpl
mov
cmp
mov
mov
repz
mov
js
jbe
sar
movaps
mov
or
pusha
or
mov
test
adc
imul
cmp
or
mov
fmul
push
mov
xchg
call
clc
xlat
ins
pop
sub
adc
and
and
dec
fdiv
adc
pop
pop
sub
xchg
sub
pop
ds
mov
sub
je
les
or
mov
add
je
mov
pop
jb
or
and
mov
jo
push
js
stos
cmc
push
pop
adc
cmps
add
adc
cmp
test
jo
retf
addr16
shl
mov
push
mov
ror
inc
mul
mov
sub
and
js
in
xlat
push
(bad)
pop
(bad)
popw
out
cmp
mov
jle
popa
sbb
ficomp
add
test
and
adc
rol
sub
push
(bad)
clc
mov
fldcw
mov
(bad)
push
sub
push
cmp
mov
shl
cmp
int
ins
(bad)
jb
fcom
scas
jg
cld
xor
cmp
add
test
retf
sub
outs
inc
inc
mov
shl
push
xor
out
nop
fdiv
shl
sbb
or
push
adc
jg
xor
adc
aad
arpl
jge
fdiv
or
pop
movs
nop
cwde
cwde
retf
test
sbb
inc
and
arpl
xchg
mov
enter
jmp
inc
movs
dec
push
cmc
sbb
push
adc
daa
popf
and
mov
sbb
es
sub
(bad)
out
cmps
pop
fistp
inc
lods
mov
mov
loop
shl
sbb
int
arpl
ins
outs
repz
in
add
and
loopne
adc
mov
jge
dec
arpl
or
ins
dec
div
(bad)
out
mov
pop
inc
xchg
mov
sbb
loop
mov
cmp
adc
sahf
mov
xor
add
call
lods
mov
mov
xchg
icebp
nop
mov
mov
nop
arpl
loopne
xor
out
out
ja
cmps
mov
xor
and
loop
fnstcw
mov
pop
out
shl
inc
retf
aaa
jmp
pop
jmp
mov
retf
imul
int3
into
dec
outs
ret
cmp
mul
rol
cdq
test
ficomp
out
pop
fcom
call
sar
dec
sub
call
jg
xor
push
stc
mov
cmps
mov
shl
push
pop
mov
add
loop
ret
out
mov
cs
mov
ror
dec
and
and
jno
mov
mov
xor
int
dec
cmp
add
scas
inc
aam
mov
ficom
test
(bad)
dec
leave
jp
gs
jo
inc
mov
sahf
inc
stos
add
inc
shr
push
arpl
sub
push
movs
pushf
(bad)
hlt
(bad)
mov
arpl
pushf
movs
fist
test
cmps
add
leave
cmp
icebp
inc
xlat
lods
push
out
addr16
sbb
jge
sbb
aad
pop
xor
pop
movs
mov
inc
adc
adc
out
dec
sti
inc
call
idiv
imul
fcomp
cmp
inc
jmp
ins
or
sti
cmp
push
mov
retf
jecxz
add
std
xor
ficom
cmp
imul
lods
dec
mov
inc
pop
int3
outs
mov
xchg
fstp
push
xchg
jo
pop
ins
fild
dec
pop
add
pusha
fwait
push
and
data16
fwait
mov
xchg
fsub
pop
and
mov
ja
or
mov
inc
lea
jno
xor
add
xor
dec
cmp
stc
ja
adc
into
mov
cmps
shl
sar
jl
icebp
sbb
dec
aaa
test
push
aaa
mov
jge
push
mov
jg
ins
dec
rcr
dec
ins
daa
aad
xor
outs
retf
out
dec
jle
dec
push
aad
fwait
out
into
pop
movs
jo
lahf
call
mov
stos
xchg
outs
mov
call
or
add
call
jp
xor
ret
in
retf
pop
or
xchg
fist
mov
call
cwde
mov
inc
add
inc
addr16
arpl
stos
cmps
or
shr
test
xchg
loope
int3
and
in
cmp
loop
jae
sbb
gs
ss
adc
loopne
in
push
push
cmp
fnsave
adc
cli
cwde
or
and
sti
cs
xlat
pushf
or
lods
pop
stos
push
jne
xchg
mov
dec
mov
int
int3
or
xor
sub
cwde
fs
mov
mov
mov
inc
xchg
rcl
leave
in
and
fnstcw
sbb
xor
jecxz
enter
jne
aam
dec
mov
mov
cmp
mov
enter
out
mov
jb
and
(bad)
hlt
(bad)
and
outs
popa
inc
xchg
mov
or
xor
jmp
loopne
push
cmp
mov
sub
(bad)
cmps
dec
and
adc
mov
push
cmp
out
cs
(bad)
faddp
call
dec
sti
ins
adc
and
loopne
pop
test
rcr
mov
iret
aad
sub
or
push
mov
xor
shr
in
data16
inc
icebp
cli
(bad)
push
mov
jns
push
idiv
xchg
repnz
ss
rcl
bound
push
add
pop
cmp
repnz
push
mov
pop
and
jb
cli
jl
mov
(bad)
stos
pop
addr16
mov
out
add
out
add
inc
add
push
dec
dec
pop
jge
mov
inc
mov
xor
cmp
and
stos
ret
dec
or
xor
js
loop
std
cdq
das
clc
pusha
jmp
jl
jecxz
int3
jecxz
fwait
idiv
mov
sub
push
icebp
das
int3
jle
push
pop
out
imul
pop
jg
push
mov
outs
mov
loopne
enter
push
imul
mov
ds
cmp
jo
cwde
pushf
fwait
adc
fild
cli
enter
push
or
(bad)
jmp
cmp
mov
push
cli
neg
and
jl
(bad)
fiadd
stos
leave
rcr
or
rcl
push
ret
repz
jp
inc
push
mov
dec
xlat
pop
mov
and
cmp
int
sbb
stc
into
cmc
inc
inc
loope
test
call
sub
loope
mov
push
xor
cmp
mov
clc
out
adc
push
stos
and
pop
cmovl
cld
dec
cmp
es
jmp
xor
imul
push
jo
jo
adc
iret
xchg
shl
das
add
(bad)
pusha
rcr
(bad)
cmp
push
clc
call
xchg
jno
sub
cmc
push
enter
sbb
push
or
in
popa
jns
pop
adc
test
lods
aas
xor
dec
(bad)
movs
jmp
xchg
lods
popa
mov
outs
scas
mov
mov
into
jb
push
mov
daa
je
mov
mov
cmp
and
int3
pop
jge
xchg
cmp
jl
loop
ss
mov
loope
int
and
push
push
push
jle
adc
sub
inc
mov
stc
mov
arpl
xchg
and
jns
fcomp
fsubr
or
or
mov
ret
adc
mov
xor
and
mov
test
mov
loop
adc
inc
test
je
cmp
in
sbb
push
dec
mov
sbb
mov
mov
outs
cmp
and
xor
stos
pushf
dec
mov
iret
lea
stos
add
out
je
aad
ret
jmp
ins
xor
jns
int
fild
cmc
in
ret
mov
inc
jnp
in
jge
int
pusha
movs
add
mov
stos
stos
scas
test
xchg
dec
or
mov
dec
test
and
and
cmp
cmp
push
sahf
sbb
cmps
xchg
not
iret
rcr
sbb
sbb
jmp
inc
add
pop
les
out
push
push
inc
popf
sbb
or
inc
mov
and
jbe
push
inc
dec
xchg
jmp
mov
rcl
jge
loopne
or
pop
sbb
xor
xchg
inc
sbb
inc
cmp
adc
vpunpcklwd
lahf
mov
shr
loope
mov
out
add
or
cmp
dec
scas
(bad)
sti
mov
int
jns
mov
adc
dec
pop
xor
adc
add
pop
xchg
jne
lea
jp
add
sti
jle
and
pop
movs
pop
mov
loope
mov
repz
rol
out
add
pop
pop
fcomp
push
imul
(bad)
xchg
mov
push
rol
shr
ror
inc
dec
add
mul
jmp
arpl
in
int
sbb
and
fcmovnb
cli
inc
in
adc
adc
clc
add
sub
sbb
xlat
or
data16
(bad)
ficom
sub
mov
dec
inc
dec
add
test
adc
push
sbb
pop
call
ins
ds
retf
fidivr
fs
sti
ds
mov
jle
sahf
or
mov
add
pop
pop
sub
pop
mov
xchg
ficomp
int
in
jnp
push
dec
inc
out
fisttp
jmp
imul
sbb
je
in
mov
adc
mov
cmp
sub
jns
or
ror
add
pop
push
(bad)
ja
add
pop
aas
int3
imul
stos
jo
aam
mov
or
dec
out
push
test
test
stc
add
push
bound
cdq
imul
cmc
pop
sbb
jns
loope
cmps
xor
sub
(bad)
setae
ror
sbb
jmp
add
aaa
cld
enter
push
or
or
pop
ja
pop
out
xor
or
add
outs
push
pop
mov
adc
dec
sub
xor
mov
out
aas
add
(bad)
int
js
enter
fistp
aam
cld
and
rol
imul
scas
data16
sar
aam
aas
dec
(bad)
xchg
es
push
repz
push
bound
cmp
fisttp
loopne
mov
std
push
aam
shl
pop
push
loopne
jp
mov
fistp
push
jmp
fild
mov
arpl
aad
int
mov
aas
sbb
test
bound
(bad)
ficomp
in
test
jae
xchg
sbb
into
xchg
out
pop
xchg
mov
sar
int3
jnp
fwait
add
shr
dec
(bad)
idiv
cmp
mov
or
repz
mul
out
ficomp
mov
fidiv
repz
push
pop
sub
dec
(bad)
fisttp
fidiv
xchg
stos
adc
and
int3
inc
sub
aas
add
popf
lods
cmp
movs
les
pop
fistp
pop
add
add
mov
mov
dec
pushf
lahf
and
outs
aad
sub
out
fbstp
mov
enter
xchg
loopne
es
jg
(bad)
xchg
push
mov
mov
bound
mov
addr16
adc
pushf
jmp
bswap
hlt
add
stc
fwait
rcl
pop
lods
fnstcw
loopne
data16
xchg
mov
dec
clc
and
sub
adc
jg
push
retf
cmps
xor
cmc
jle
mov
call
mov
xchg
test
xchg
mov
fistp
aaa
jb
movs
xchg
cmp
jnp
fiadd
pop
arpl
xor
outs
inc
iret
pushf
pusha
dec
(bad)
ins
jecxz
mov
je
out
sbb
aam
sbb
cld
scas
inc
inc
into
add
mov
daa
mov
scas
or
lods
imul
lahf
icebp
push
add
das
sbb
sub
pop
cmp
cdq
cwde
popa
sbb
mov
das
mov
les
adc
ud2
imul
popf
jecxz
les
jnp
sbb
cld
pop
(bad)
clc
pop
stc
in
shr
test
lods
mov
cmp
out
jmp
mov
xchg
loope
inc
mov
mov
adc
mov
push
inc
push
mov
stos
xchg
ror
cld
imul
dec
fs
cli
retf
mov
jle
(bad)
xchg
cmp
ret
cdq
adc
loope
fisubr
sbb
bound
loopne
aas
sbb
enter
jecxz
int
add
xchg
cmps
adc
ret
mov
mov
xchg
pusha
test
lahf
test
gs
pop
repz
add
sbb
pop
adc
pop
sti
push
add
inc
ret
mov
adc
add
inc
fsubrp
loop
es
and
cmc
xor
sub
xor
mov
nop
mov
push
push
jae
test
stos
daa
adc
fmul
inc
cmp
add
std
add
test
fs
div
test
jle
retf
cli
fdivr
mov
dec
add
fld
jns
(bad)
ja
pushf
movs
add
je
inc
pop
mov
mov
mov
and
mov
cld
ret
cmp
xchg
xchg
lods
sub
pop
pop
ja
fisttp
test
sub
lods
and
cmp
inc
adc
cmc
bound
movs
lock
dec
in
sbb
push
push
cmc
(bad)
cmp
sub
and
scas
add
jl
cmps
stc
push
into
aas
cdq
cmovg
imul
adc
int
pushf
pop
and
iret
cmp
(bad)
mov
outs
pop
mov
dec
xor
in
dec
mov
pop
leave
dec
mov
stc
fstp
push
push
jecxz
or
sbb
mov
add
and
mov
dec
loopne
out
sbb
in
test
cwde
loope
shr
xchg
inc
jp
mov
xlat
test
ins
lock
xchg
sbb
pop
lds
dec
leave
xor
inc
loope
out
lahf
adc
inc
sti
mov
xor
push
rcr
adc
or
add
mov
push
retf
or
rcr
ficom
xchg
lock
jns
lahf
std
pop
aam
dec
mov
xchg
mov
cmc
or
lahf
movs
pop
mov
repz
fcmovnbe
xor
cmc
xchg
and
or
clc
adc
pop
sub
jmp
xchg
imul
mov
add
in
faddp
push
jl
(bad)
xor
in
cmp
sbb
mov
mov
inc
in
cmp
jl
outs
dec
mov
pop
(bad)
pop
es
nop
pop
aam
ins
cmp
cld
jae
or
mov
popf
in
cdq
sub
xchg
mov
fstp
mov
lds
out
mov
enter
jne
ins
in
jne
pop
hlt
pop
in
add
out
push
les
dec
xchg
and
inc
ja
aad
mov
outs
adc
push
scas
jmp
or
sbb
mov
test
push
or
call
jb
stos
add
and
imul
adc
mov
or
sbb
inc
inc
pop
sub
mov
jb
sub
pop
shl
mov
lock
jns
mov
test
fld
inc
icebp
pop
xchg
shr
mov
nop
jno
loope
jb
add
int
and
leave
test
cwde
jmp
jno
push
lea
mov
gs
repnz
push
mov
push
sub
cmp
or
inc
and
ret
jp
nop
loope
bound
pop
loop
es
add
mov
inc
jmp
dec
xor
add
xor
je
js
dec
cmc
lea
aaa
push
cwde
mov
daa
adc
aaa
jmp
mov
inc
mov
or
sub
sub
xchg
xchg
jle
lock
mov
fstp
mov
pop
pop
js
inc
fs
push
clc
jns
jp
inc
jp
ret
jmp
lea
sub
aam
sub
stos
add
and
retf
jno
mov
cdq
retf
push
pop
pop
bound
jns
mov
mul
add
dec
sti
jecxz
shl
jnp
retf
inc
xlat
(bad)
cmps
xchg
icebp
inc
daa
imul
je
push
mov
jb
mov
sbb
sahf
push
and
cmps
adc
jno
mov
xor
and
aaa
pop
jnp
pop
inc
add
add
jl
cmovp
loope
or
addr16
mov
push
and
fcom
imul
add
push
outs
call
dec
pop
rcl
loope
adc
mov
mov
lock
jbe
cmp
ret
mov
push
pop
mov
push
xor
dec
popa
test
mov
je
inc
inc
inc
mov
pop
adc
std
push
adc
(bad)
(bad)
dec
aaa
cli
jb
xchg
mov
shl
mov
(bad)
push
dec
mov
mov
inc
(bad)
lds
inc
sbb
cmp
int
mov
stos
leave
dec
sti
out
xchg
aaa
inc
dec
push
sti
adc
xor
and
in
mov
out
stc
push
pop
das
rcl
fidivr
emms
sub
inc
movs
gs
add
adc
hlt
push
test
xchg
shl
repz
fsub
outs
sub
dec
es
les
pushf
test
mov
lods
push
inc
jle
adc
add
mov
aaa
mov
enter
div
daa
pop
stos
mov
test
cld
retf
lahf
mov
call
lahf
cmp
xchg
in
adc
sahf
pop
in
add
mov
addr16
pop
ret
(bad)
push
cmps
popf
cwde
xor
sbb
dec
xchg
mov
pusha
xchg
test
shl
push
mov
aad
pop
xchg
sahf
test
push
sar
loop
xor
mov
retf
pop
scas
pop
jle
sar
(bad)
cmps
push
xchg
fmul
inc
pop
inc
mov
jmp
sbb
frstor
rol
add
repz
push
dec
inc
push
mov
pop
push
inc
xor
js
fs
jmp
pop
sbb
jmp
out
sub
jl
jmp
js
out
or
mov
push
cli
pop
aad
loope
adc
xchg
test
dec
mov
movs
out
push
daa
jecxz
sub
mov
or
repz
sahf
pop
scas
or
(bad)
jae
lds
push
mov
mov
jmp
mov
jecxz
add
jmp
and
mov
loope
jmp
add
fwait
pushf
sub
xor
pop
jmp
retf
push
rol
jae
lea
dec
popa
mov
push
pop
jp
aas
aaa
lds
repz
std
arpl
adc
retf
retf
adc
dec
loope
xor
loopne
rol
scas
push
add
adc
out
adc
push
loopne
add
mov
and
int3
xchg
shl
repnz
pusha
pop
outs
orps
sbb
pop
dec
cmp
xor
ins
push
mov
xchg
call
nop
mov
shl
test
iret
jmp
sub
sub
push
mov
add
and
(bad)
loopne
fst
mov
int
push
pusha
movups
into
shr
stc
push
add
xor
js
push
int3
xchg
adc
pop
iret
fs
mov
jl
movs
out
ins
in
xor
stos
pop
clc
rcr
sub
xchg
(bad)
push
adc
nop
(bad)
and
aam
cmp
jno
cmp
push
in
pusha
mov
add
or
push
imul
or
into
dec
in
add
fs
inc
xchg
std
push
retf
retf
or
add
sbb
or
cmp
adc
shl
arpl
xchg
cmc
sbb
lds
fnsave
add
fwait
dec
and
lahf
pop
mov
pop
fsub
cmc
dec
jg
jae
cmp
sbb
dec
mov
sub
rol
and
ins
add
push
push
lahf
xchg
in
push
inc
adc
lods
mov
and
mov
or
jg
adc
ret
jno
mov
cmp
dec
inc
in
retf
sub
out
les
dec
sbb
add
rcr
push
jl
inc
enter
call
test
lea
mov
pop
repnz
or
xlat
sbb
cmp
stos
cmp
mov
inc
push
rol
mov
mov
sub
jne
sti
jmp
adc
mov
ins
shl
enter
push
outs
inc
(bad)
jmp
(bad)
dec
in
fild
mov
push
pop
sbb
fadd
adc
test
gs
push
popf
pop
iret
adc
sbb
inc
and
stc
mov
stos
repz
cld
jecxz
pop
mov
retf
shl
call
aas
mov
dec
ret
fmul
pop
stos
mov
mov
xchg
mov
(bad)
mov
shr
(bad)
add
jae
mov
inc
mov
push
ret
sbb
sbb
xor
pop
sbb
jns
push
xlat
out
cmp
pop
push
mov
dec
dec
pop
pop
cwde
in
call
pop
mov
test
adc
push
(bad)
dec
cwde
dec
or
movs
jmp
(bad)
out
les
mov
dec
xor
outs
ja
leave
cmps
ja
pusha
jae
sub
fistp
fist
dec
movs
xor
pop
icebp
cmp
movs
add
sbb
fstp
dec
mov
jge
fild
imul
mul
adc
xchg
jnp
sub
push
mov
vxorpd
jle
xchg
add
cmp
mov
or
push
jge
adc
shr
ds
mov
clc
(bad)
sti
pop
dec
sti
test
inc
dec
inc
sbb
cmp
xchg
or
cmps
jp
add
cmp
push
jle
push
out
xor
paddsw
lds
ficom
push
rol
inc
out
es
(bad)
stc
stc
add
mov
movs
inc
bound
into
xchg
repz
data16
cdq
lods
fnstsw
or
xchg
sbb
aaa
push
out
jecxz
pop
sbb
jmp
imul
push
or
ds
push
dec
test
mov
popa
loope
cwde
hlt
cwde
cmp
dec
or
loopne
jb
and
add
and
retf
stos
dec
scas
fwait
lods
and
or
scas
icebp
jge
inc
xchg
btc
shr
or
movups
nop
fs
(bad)
jmp
(bad)
in
les
and
into
fs
xchg
pop
shl
mov
icebp
bnd
mov
movs
sbb
cs
xchg
(bad)
push
mov
repz
dec
movzx
inc
repnz
push
mov
test
push
inc
jmp
cmp
jmp
int
jle
jns
(bad)
stos
iret
std
mov
sbb
mov
jg
dec
push
mov
das
fadd
loop
push
in
cmps
fs
shr
out
sub
in
dec
mov
or
xchg
ins
aas
lods
xlat
fwait
add
cwde
pop
cmp
add
sbb
mov
mov
sbb
test
mov
iret
ins
pushf
mov
les
into
and
inc
mov
xor
jns
int
and
mov
inc
sahf
cmp
mov
xchg
fnstsw
add
mov
adc
fist
test
sar
xchg
cmp
and
dec
or
sbb
xchg
out
mov
int3
xor
cmp
cwde
push
jmp
mov
add
movs
test
add
fwait
fs
inc
sbb
pop
inc
(bad)
mov
cmc
into
outs
pop
in
clc
fmul
loopne
and
mov
cmps
int
sub
adc
adc
inc
mov
pop
retf
cmp
adc
leave
mov
int3
fwait
imul
ret
and
cmp
in
fidivr
mov
stos
push
(bad)
cld
stos
gs
dec
sbb
mov
aam
retf
ss
aas
pop
jge
mov
xor
jae
std
fild
(bad)
movs
(bad)
mov
xchg
ror
daa
les
mov
mov
mov
repnz
push
es
bound
sub
fs
retf
int
mov
leave
dec
call
scas
test
or
jmp
scas
shl
loope
cmps
jnp
xor
fiadd
mov
cli
popa
ds
pop
and
dec
inc
and
bound
aaa
jno
mov
sub
or
popf
inc
jg
out
inc
dec
pusha
es
cmps
cmp
sahf
mov
sbb
fcomp
jnp
jnp
adc
pop
push
js
jecxz
jne
pop
in
push
push
shr
gs
mov
mov
in
lods
pop
out
mov
int3
lods
lea
fnstcw
lods
outs
or
push
adc
fisub
mov
lea
ss
aam
lods
pop
mov
mov
fadd
mov
cmps
or
daa
sar
cdq
sar
mul
add
or
test
jp
cdq
jnp
jb
ins
or
lock
(bad)
ror
ds
inc
cdq
mov
das
pop
jnp
jmp
mov
cmps
test
mov
jo
aam
jmp
mov
cmp
inc
(bad)
imul
shr
or
mov
les
adc
out
push
leave
push
cli
(bad)
dec
aaa
aam
lock
or
xchg
mov
jnp
ins
ja
test
xchg
aas
mov
aam
sbb
mov
jg
push
sbb
or
movs
push
inc
popf
cdq
(bad)
mov
mov
add
mov
sub
lock
mov
int3
jnp
fmul
aaa
stos
push
retf
fld
fcmovnu
pop
jg
add
add
pop
pop
(bad)
and
mov
push
adc
fisubr
loop
jne
nop
mov
lods
(bad)
xchg
jae
stos
jp
loopne
loop
xor
(bad)
dec
data16
or
jae
cld
mov
loope
loope
xor
mov
sub
pop
dec
push
inc
inc
loop
or
jnp
hlt
cmp
(bad)
lock
xchg
in
mov
enter
gs
mov
data16
xlat
jae
add
clc
mov
repnz
arpl
jmp
stos
xor
jp
mov
or
xchg
fwait
dec
push
push
hlt
add
test
sbb
jo
cdq
js
shl
xor
adc
inc
pop
jae
test
fnsave
jne
add
mov
add
xchg
out
jecxz
sar
stos
pushf
fcomp
ret
mov
xor
sub
xchg
repz
leave
cmp
(bad)
out
and
or
cmp
outs
jmp
int
mov
fsub
pop
fsubr
and
call
mov
retf
icebp
dec
jae
inc
shl
push
(bad)
adc
mov
ins
xor
les
int3
aaa
mov
or
add
jle
and
cmps
push
inc
push
mov
push
je
cmp
pop
push
mov
mov
cmp
movs
inc
call
mov
mov
lea
dec
aaa
cmc
mov
nop
dec
xchg
adc
and
xor
ror
ins
popa
mov
mov
add
or
outs
call
cmp
dec
or
cmp
or
hlt
cmp
jge
rol
xor
mov
inc
call
sbb
and
mov
imul
pop
cmp
add
(bad)
imul
pop
jb
test
scas
inc
inc
mov
cs
(bad)
neg
test
push
scas
xor
popa
adc
jl
jl
sbb
xchg
dec
or
nop
loop
out
or
cwde
xor
sub
cmp
aaa
out
push
ins
inc
inc
cld
lahf
fdivr
push
or
std
aas
fmul
pop
xchg
clc
xchg
dec
push
push
loopne
pop
xchg
or
aas
ss
and
ja
mov
js
shr
push
and
in
leave
push
adc
(bad)
in
clc
adc
xchg
scas
in
xlat
jle
add
and
ins
ret
dec
cmps
cmps
into
(bad)
push
sbb
push
and
adc
cmc
pop
call
xchg
xor
mov
xor
ja
cdq
and
adc
fiadd
movs
xchg
int3
inc
js
cmc
rcr
push
popa
aas
mov
(bad)
xor
cmp
ret
jae
(bad)
xchg
sbb
test
sbb
and
in
in
popa
xor
dec
mov
test
imul
int
mov
stos
and
cmp
lock
je
pop
mov
adc
push
xchg
shr
mov
mov
aad
cmp
out
pop
out
xor
femms
ds
not
dec
inc
ja
jle
aam
and
xor
sub
je
jle
ins
addr16
jmp
xor
and
inc
mov
fcmovnu
jl
jae
into
mov
stos
jne
imul
jmp
retf
add
cmc
lods
mov
js
mov
inc
sar
inc
jns
out
fwait
adc
sub
popf
pop
lahf
sbb
jo
pop
je
es
add
pop
shl
stos
mov
jmp
enter
das
sbb
aaa
cwde
dec
push
inc
mov
sti
leave
(bad)
daa
in
scas
fimul
jbe
inc
adc
rol
out
call
and
sub
retf
pop
in
rcl
arpl
push
cmp
in
cmp
and
add
mov
(bad)
bound
lods
jbe
jge
inc
mov
jmp
gs
rcr
aaa
pop
jo
aad
retf
adc
fwait
scas
mov
stos
inc
popa
scas
sub
xor
shl
ret
pop
pop
and
mov
scas
inc
mov
int3
rcl
ins
mov
arpl
mov
out
push
imul
adc
das
xor
push
cmp
and
addr16
sub
xor
mov
out
jp
stc
pop
inc
inc
xlat
enter
sbb
mov
movs
add
sbb
gs
sbb
cdq
jmp
icebp
movs
or
daa
xchg
shl
xor
cmc
bound
mov
stc
mov
mov
nop
(bad)
(bad)
sub
int
aam
ins
ins
out
xor
jno
xchg
hlt
test
call
push
push
xlat
mov
adc
std
out
lea
(bad)
lahf
cdq
inc
not
jl
fwait
xor
repz
test
pop
sar
sbb
mov
popa
mov
lods
adc
rol
push
(bad)
(bad)
sbb
leave
jo
iret
retf
fistp
add
pop
in
sub
enter
push
jae
dec
and
xchg
retf
dec
add
and
aas
push
repz
sbb
jp
add
inc
mov
dec
cmps
in
or
and
dec
adc
mov
inc
call
out
push
ins
pop
and
add
adc
xchg
xor
sub
imul
mov
(bad)
jge
jnp
or
iret
pop
ds
and
stos
addr16
adc
dec
addr16
pop
jge
xchg
movs
enter
stos
xor
into
or
xor
add
fisub
mov
jo
gs
and
jle
adc
mov
xchg
test
mov
pop
lea
leave
ret
mov
xchg
aad
mov
or
outs
pop
or
in
xchg
cmc
mov
xor
ret
add
or
jecxz
add
mov
cmp
mov
or
push
cmp
sbb
stc
push
dec
adc
add
adc
mov
pushf
pop
in
sbb
imul
jae
push
push
push
inc
in
dec
push
xchg
fs
push
jecxz
test
mov
pop
outs
mov
pop
inc
push
push
ins
or
dec
add
inc
into
ins
or
cmps
es
pop
ins
lds
jno
test
cmp
out
cdq
je
test
inc
inc
sbb
mov
xchg
mov
jmp
aaa
mov
push
scas
out
add
sbb
stc
lds
stc
jge
shr
sbb
jmp
or
sar
enter
(bad)
fsub
ror
add
aaa
inc
(bad)
xchg
(bad)
fwait
adc
mov
mov
btc
vmread
and
fst
inc
(bad)
out
std
and
mul
std
pop
in
push
or
xor
inc
mov
push
mov
jmp
pop
(bad)
dec
push
retf
out
dec
enter
jle
jl
fimul
leave
pop
push
xor
jnp
xchg
hlt
mov
inc
mov
push
inc
push
dec
(bad)
cmp
jno
jbe
sub
cld
call
inc
nop
push
jg
std
jne
loope
(bad)
repz
dec
mov
cmp
std
add
data16
ficomp
fimul
cs
pop
mov
int
pop
dec
dec
call
sbb
add
movs
jbe
or
dec
xor
es
mov
jne
xchg
mov
or
push
sbb
mov
push
push
sar
scas
(bad)
mov
jo
add
push
xchg
push
xor
pop
adc
jns
dec
lds
jmp
push
dec
sbb
pop
test
fcmovnu
push
arpl
test
adc
mov
mov
adc
dec
mov
hlt
cmp
aaa
inc
xor
push
loop
inc
and
scas
xchg
(bad)
add
arpl
jnp
es
out
mov
int3
add
mov
push
es
jmp
sub
imul
or
bound
add
mov
jno
xchg
add
dec
jmp
stos
xchg
adc
fmul
xor
or
xor
outs
and
push
(bad)
aam
imul
mov
out
imul
mov
mov
je
jp
test
sub
cmp
shr
xor
popf
test
inc
pusha
retf
mov
ror
loop
mov
xchg
push
xor
imul
cmp
leave
fwait
test
push
pop
test
sub
push
and
inc
rcr
inc
pop
jp
pop
xchg
nop
or
dec
arpl
ja
xchg
pop
out
(bad)
in
jmp
pop
jo
pushf
scas
sub
xor
mov
adc
and
mov
pop
dec
dec
test
ins
jb
push
cmp
cmc
cmps
arpl
aad
cmp
ror
test
imul
ret
cmc
bound
and
scas
movs
dec
fdiv
mov
sahf
pop
(bad)
in
ficomp
(bad)
adc
outs
add
mov
xchg
and
xor
xchg
adc
js
xchg
in
pop
pop
cmp
loopne
xchg
fdivr
iret
mov
and
jns
sbb
js
pop
in
xor
pop
push
dec
lods
mov
loopne
outs
adc
out
sub
mov
lahf
cmps
inc
dec
dec
xchg
adc
mov
sub
pop
addr16
cmps
and
fisttp
mov
arpl
mov
mov
pop
sbb
lahf
leave
or
dec
lahf
mov
(bad)
ins
inc
pop
sub
stos
cmp
inc
mov
ret
loopne
lds
popf
jle
(bad)
pop
dec
es
test
jl
pop
repz
aad
fidiv
popa
fmul
sahf
leave
sbb
and
iret
xchg
xchg
and
std
rol
mov
inc
push
jns
xchg
test
and
mov
outs
icebp
je
sub
mov
jmp
jb
or
repz
lahf
pusha
les
add
push
xchg
aam
test
nop
lods
out
rol
popf
pop
mul
mov
(bad)
dec
out
popf
popf
sbb
mov
xor
lea
cmp
ret
ins
arpl
ret
sbb
retf
add
push
mov
mov
jl
push
nop
cmp
test
out
test
or
mov
push
or
adc
jmp
mov
and
jnp
jo
in
dec
cmp
xchg
xchg
ud2
pop
mov
and
fst
or
adc
push
or
add
sti
add
push
push
pop
xchg
mov
ins
add
shl
bound
jb
mov
test
daa
mov
mov
push
or
sbb
xor
pusha
ret
or
retf
push
xchg
jnp
pop
mov
(bad)
fcomp
jnp
inc
or
les
(bad)
mov
xor
mov
loope
stos
jge
pop
das
jo
jecxz
out
stos
jb
xchg
sbb
(bad)
xchg
(bad)
call
pop
inc
rcr
add
clc
lock
mov
into
ss
mov
call
lods
add
imul
in
jno
add
addr16
cmp
dec
inc
adc
add
lock
jmp
out
ja
mov
mov
mov
pop
sub
push
adc
jb
mov
jae
movs
push
pop
adc
in
fistp
into
pop
pop
outs
(bad)
mov
pop
call
sub
cmc
jmp
mov
lahf
aad
push
xor
mov
sub
gs
lods
cwde
fwait
aad
nop
dec
clc
pop
push
fimul
sub
dec
es
daa
data16
pop
mov
pop
stc
rol
retf
jge
mov
cli
xchg
jne
push
retf
sub
dec
out
mov
xrelease
loopne
push
repnz
mov
int
out
or
xchg
cmp
cmp
jp
xchg
leave
xchg
enter
xchg
and
adc
pop
mov
or
inc
js
push
sbb
lea
push
(bad)
push
cmp
out
inc
test
pushf
daa
and
jle
ins
xchg
dec
daa
mov
stos
mov
xor
rcr
dec
pop
and
sub
sahf
add
enter
dec
add
retf
jb
std
jmp
and
mov
jno
sbb
mov
pop
cs
inc
in
mov
loop
leave
push
imul
fidivr
or
adc
arpl
cmp
not
sub
movs
dec
sub
dec
sbb
pop
add
cmp
sub
sub
mov
dec
(bad)
pop
dec
dec
enter
lock
(bad)
in
push
gs
jmp
ret
mov
(bad)
in
(bad)
movs
sub
jo
movs
adc
mov
add
sbb
mov
xor
xor
and
xchg
xchg
push
lock
js
mov
mov
xchg
pop
ss
mov
xor
push
(bad)
push
inc
mov
or
arpl
inc
(bad)
test
sbb
jl
dec
call
pop
jl
jmp
dec
xor
out
in
pop
pop
push
or
outs
xchg
test
dec
mov
and
pop
mov
lds
int3
mov
mov
xlat
mov
(bad)
sub
ret
outs
inc
and
mov
sbb
int
mov
(bad)
fcom
jle
movs
push
scas
and
mov
arpl
pushf
cmps
test
ret
cmp
nop
adc
repz
sub
in
fidiv
outs
mov
pusha
dec
push
mov
cld
sub
pop
adc
daa
fsub
(bad)
adc
mov
fmul
mov
arpl
xchg
mov
mov
out
adc
xchg
push
adc
pushf
and
addr16
mov
inc
xchg
adc
mov
sub
push
adc
mov
push
mov
aas
test
test
and
xchg
jnp
cmps
push
addr16
cmp
stos
jbe
(bad)
fnstcw
(bad)
lock
add
movs
jne
adc
dec
cwde
mov
rcr
add
jle
xor
ds
inc
hlt
ficom
sub
sbb
jecxz
sti
pop
add
stos
fcom
or
nop
cdq
int3
in
add
cmps
add
sub
arpl
rcl
push
aaa
inc
mov
test
ret
call
lahf
sub
loope
movs
cmps
loopne
rol
mov
inc
arpl
dec
cwde
movs
aas
icebp
or
dec
test
aaa
xchg
cmp
arpl
aad
xchg
repz
sbb
sar
pop
mov
cli
out
cs
(bad)
cmp
pop
(bad)
stc
mov
stos
mov
shl
jmp
jge
mov
dec
into
xchg
out
or
retf
daa
and
pop
aaa
or
popa
inc
sub
xor
mov
hlt
sbb
int3
cmp
push
xchg
in
bound
dec
lods
sti
push
cmc
xchg
sub
aaa
or
sub
divpd
out
and
jle
sub
iret
sub
daa
in
loopne
mov
add
mov
addr16
rcr
out
fnsave
jg
in
mov
mov
sahf
jle
or
xlat
jp
jb
into
in
or
imul
fs
sub
idiv
int3
mov
pushf
and
ror
add
xor
call
mov
aas
cmp
jecxz
mov
mov
or
sub
push
dec
fidivr
sti
push
ret
xor
cmc
push
sub
ins
mov
mov
jg
ffreep
pop
cmp
sbb
into
fld
xchg
xor
out
rcr
pop
mov
sub
(bad)
push
jo
stc
movs
lahf
imul
push
adc
test
cmp
add
cmps
sbb
(bad)
lds
cli
fimul
cwde
stos
(bad)
cmp
out
pop
inc
cmp
sbb
or
jmp
sbb
gs
jnp
jge
pop
push
cli
push
or
pop
loop
icebp
out
mov
adc
dec
adc
sbb
pop
or
inc
or
push
cmps
jle
bound
push
int
ret
mov
xchg
sbb
dec
ret
lods
sti
sub
mov
shl
cmp
cmps
ja
psubw
cmps
xchg
sub
mov
into
cmp
push
(bad)
call
bound
mov
scas
fst
xchg
pop
jmp
push
adc
mov
sbb
in
ds
loopne
aas
push
wrmsr
fild
xchg
or
xchg
cmp
xchg
sub
cmps
sbb
cmp
lahf
fistp
movs
ret
or
inc
pop
jmp
xchg
inc
sbb
dec
inc
shl
(bad)
and
inc
pushf
ds
adc
add
xchg
pop
(bad)
in
ret
pop
dec
sbb
jo
fistp
div
out
in
cmp
hlt
call
sar
xor
cmc
inc
mov
push
icebp
jmp
xor
cmp
inc
outs
std
mov
data16
pusha
jmp
fisub
cmps
call
inc
das
lea
cmc
and
aas
xchg
add
(bad)
fisub
add
into
in
stos
sub
imul
dec
cli
sbb
je
mov
mov
mov
add
sbb
scas
and
mov
push
test
inc
ror
aad
daa
rol
push
or
mov
mov
sub
jmp
pop
push
dec
ret
(bad)
pop
loope
mov
out
(bad)
bnd
or
pop
gs
cmp
popa
dec
pushf
aad
pop
inc
mov
sub
rol
lock
cmp
leave
fbstp
scas
loopne
adc
(bad)
pusha
mov
mov
mov
mov
inc
mov
jge
cli
inc
and
ficom
das
shl
xor
cmc
clc
add
mov
leave
adc
push
inc
imul
xor
or
imul
sti
inc
cmp
cmp
stos
push
loope
sub
into
mov
cli
(bad)
jge
pop
xor
inc
fild
mov
ins
pop
ss
(bad)
push
scas
cdq
adc
xchg
mov
inc
push
sbb
sub
loopne
add
leave
pop
repz
addr16
pop
cmp
or
popa
push
pop
movs
xchg
std
xor
out
xchg
mov
jno
(bad)
sti
push
and
mov
jmp
push
(bad)
dec
dec
lods
add
and
in
aad
sbb
das
inc
jnp
fs
(bad)
pop
pop
inc
fs
repz
out
mov
cdq
in
std
sbb
jg
push
cmp
push
pop
push
cmp
lahf
mov
adc
mov
jl
movs
sub
push
ins
mov
xor
adc
xchg
and
mov
sbb
in
inc
lahf
dec
(bad)
pushf
sub
add
dec
fwait
xor
cli
or
test
cmp
prefetch
clc
mov
ficomp
add
and
retf
movs
repz
push
out
xor
(bad)
jmp
add
test
sbb
stos
dec
shr
(bad)
lods
sbb
add
ret
repnz
out
call
pop
test
pushf
ds
retf
ficom
pop
jp
push
jne
es
int
push
push
mov
add
shl
add
test
cmp
inc
movs
je
and
lods
lds
sub
inc
sbb
or
scas
sbb
dec
nop
or
mov
add
or
inc
add
(bad)
pop
add
jg
or
repnz
cld
mov
fcomip
aaa
inc
(bad)
xchg
scas
out
push
push
or
xor
adc
jge
jecxz
popf
fninit
ins
mov
xor
(bad)
ins
xchg
sbb
into
in
push
rol
test
xor
pop
and
jns
mov
(bad)
call
es
mov
(bad)
mov
sbb
nop
or
stc
add
dec
stc
cld
sahf
mov
fild
xor
push
add
int
cmp
ja
pop
cmp
test
push
hlt
int3
xchg
ins
and
test
outs
fstp
mov
adc
js
fisttp
je
xchg
mov
sbb
and
jecxz
mov
cmps
rcl
iret
sub
mov
inc
sub
push
push
mov
sbb
push
fwait
(bad)
ficomp
push
mov
jbe
icebp
into
out
push
adc
daa
arpl
js
daa
cs
mov
xchg
sbb
mov
xchg
mov
(bad)
dec
cmps
test
(bad)
std
dec
or
adc
add
lock
popf
icebp
cmp
mov
xchg
dec
push
mov
int
mov
dec
cli
out
jge
je
pusha
fldl2e
je
push
jge
fisttp
lds
adc
std
stos
or
retf
aad
retf
movs
test
xchg
sbb
repz
out
pusha
mov
jp
inc
inc
sub
rcl
xchg
scas
dec
(bad)
mov
mov
or
loopne
push
clc
and
int3
enter
mov
mov
vpcmpgtb
mov
popf
mov
mov
dec
jmp
mov
sbb
cmp
add
xor
or
int3
leave
mov
add
fdivr
das
push
stc
push
push
leave
out
scas
and
xor
adc
jecxz
dec
add
shl
sub
xor
dec
or
pushf
dec
mov
mov
xor
push
lods
ret
jge
shl
sub
rol
and
or
pop
lds
inc
cmp
data16
jns
mov
mov
int
lahf
retf
hlt
mov
cmp
jmp
or
aam
sbb
movs
scas
cmp
loope
lods
mov
jecxz
jge
popa
push
mov
retf
xor
aaa
repnz
stos
adc
xlat
xor
pop
cwde
mov
stos
bound
sbb
sbb
mov
bound
xchg
push
cwde
int3
mov
loop
xchg
mov
leave
jns
call
shl
mov
inc
pop
adc
mov
pop
ss
pop
scas
loop
nop
in
mov
sbb
push
mov
in
and
mov
ror
mov
mul
mov
stos
bnd
dec
fisttp
and
pop
shl
mov
inc
add
xchg
movlps
scas
cmp
hlt
pop
or
cmp
lahf
add
inc
(bad)
(bad)
mov
dec
les
bound
xchg
xor
fdiv
jp
cli
mov
mov
add
int3
push
scas
jmp
pop
imul
xor
push
fxch
shr
mov
(bad)
xlat
loopne
loop
aad
inc
loop
pop
cmps
fs
jle
dec
inc
adc
cld
aam
or
pop
cwde
imul
fnsave
jbe
and
cmc
je
leave
es
adc
jp
out
cld
arpl
inc
movs
out
inc
mov
push
adc
mov
in
fistp
lods
xchg
lods
stos
jae
sub
loopne
cmp
inc
cs
or
xor
sbb
in
xlat
rcr
sbb
dec
or
push
adc
dec
sub
popa
lea
js
cdq
test
shl
cld
inc
mov
sbb
jns
xor
cmps
cmp
push
or
aas
ret
sti
inc
mov
ins
and
xchg
loope
fdiv
inc
pop
loope
xor
aam
xor
xchg
arpl
fld
mov
jbe
add
pop
sbb
and
sbb
xchg
mov
(bad)
fiadd
jnp
data16
xchg
leave
adc
cmp
add
jne
or
or
adc
cmp
mov
push
imul
mov
popa
jp
aam
sbb
sahf
mov
add
jb
out
cmp
sbb
jle
sbb
or
add
test
leave
ins
push
sbb
push
pmaxub
outs
cmp
push
mov
clc
mov
test
fwait
xchg
cmp
adc
add
xor
adc
xchg
and
aaa
mov
shl
push
mov
frstor
dec
sbb
jno
rcr
add
adc
ds
inc
adc
jno
cdq
imul
or
(bad)
out
ins
not
xchg
adc
fbld
stc
push
mov
mov
inc
stos
cdq
int3
inc
aaa
pop
xchg
cmps
cmc
pop
sbb
cs
cmp
mov
mov
sbb
mov
inc
stos
xor
xchg
xchg
add
inc
je
clflush
addr16
cmp
inc
jo
aam
sub
adc
aas
and
test
popa
aaa
mov
out
outs
push
pop
cmp
imul
or
shr
loop
or
sbb
jg
and
sbb
repnz
pop
and
stc
addr16
mov
sub
and
pop
fild
jcxz
pop
xchg
cmc
in
mov
mov
mov
add
adc
sub
retf
rcl
(bad)
xor
xchg
rol
cld
pop
cmp
(bad)
push
xchg
popf
mov
out
push
jnp
retf
inc
inc
ins
adc
popf
out
cli
add
jae
icebp
mov
mov
ret
mov
sub
(bad)
imul
add
cmp
cmp
mov
rcr
test
(bad)
daa
push
sbb
das
aam
mov
daa
lods
and
push
pop
popf
sbb
or
or
dec
xor
stc
xchg
out
gs
jecxz
push
es
and
call
fidivr
and
add
jnp
imul
fisttp
(bad)
lock
adc
mov
jno
push
dec
mov
jle
push
call
xor
inc
ret
sub
pop
std
fwait
sbb
jge
and
lods
out
pop
cmc
arpl
mov
jns
ficom
fisubr
add
ds
mov
mov
sub
inc
xor
je
lods
std
push
mov
add
pop
(bad)
into
cs
shl
fistp
mul
lahf
rcr
arpl
pop
dec
push
mov
add
mov
lahf
pop
adc
pop
lea
inc
test
repnz
xor
xor
cs
jg
sar
xchg
cmps
cli
sbb
pop
call
enter
push
sub
movs
call
not
xor
lods
ds
ins
call
mov
gs
push
sbb
outs
fisubr
daa
repnz
dec
mov
xchg
cmp
xadd
ret
jae
bt
or
mov
jmp
jl
and
adc
bound
pusha
dec
dec
adc
popf
push
pusha
int
sbb
add
js
push
cmp
out
in
xchg
idiv
mov
xchg
mov
and
mov
and
xchg
in
scas
(bad)
sbb
or
adc
push
cli
xor
retf
out
rcr
cmp
add
scas
sti
mov
dec
cld
les
out
movs
add
(bad)
pop
lods
mov
and
jnp
and
ret
push
outs
inc
cwde
or
cmp
push
push
(bad)
(bad)
add
xlat
xchg
pusha
jo
and
mov
lods
(bad)
or
rcl
div
repnz
popa
(bad)
sbb
push
in
sar
hlt
imul
inc
stc
adc
inc
xchg
sahf
sub
xchg
dec
or
mov
mov
cdq
jae
sbb
xchg
mov
add
or
mov
test
mov
dec
sbb
mov
mov
fimul
test
cmp
push
sti
pop
scas
data16
ror
pop
ret
sub
mov
aaa
(bad)
call
push
cmp
add
push
inc
imul
iret
nop
sar
adc
inc
inc
mov
mov
add
inc
mov
cmp
and
lock
test
mov
inc
and
dec
and
or
dec
mov
aam
loop
push
jmp
mov
sub
push
adc
mov
(bad)
loop
out
aas
aaa
fidiv
sub
icebp
mov
movs
mov
fwait
inc
inc
inc
xlat
enter
add
dec
xchg
pusha
rcr
mov
scas
loopne
mov
mov
push
(bad)
and
inc
dec
jl
pop
xchg
movs
cmp
(bad)
mov
mov
jae
int3
pop
js
dec
push
in
push
out
pop
retf
ret
aam
cmp
mov
sbb
adc
pop
push
fimul
xchg
add
aaa
cmovo
and
cld
idiv
fcom
clc
(bad)
cmp
pop
or
push
mov
mov
ficom
scas
bound
xor
mov
mov
ss
cdq
xchg
nop
repnz
pusha
pop
jge
adc
add
aad
outs
sub
dec
movs
xor
aaa
rcl
je
push
xchg
add
jecxz
sub
inc
repnz
xchg
mul
ins
push
test
test
repz
fdivr
lods
cmp
add
popf
fstp
and
in
mov
test
mov
in
mov
sub
xor
xchg
mov
retf
pop
(bad)
call
fldl2t
cmp
xor
test
xchg
aas
dec
or
mov
xchg
pushf
pop
push
es
lock
xor
repz
dec
test
loopne
ret
xor
sub
or
stos
dec
cs
mov
mov
shr
cs
inc
(bad)
mov
stos
test
mov
jl
adc
hlt
xchg
cwde
dec
(bad)
(bad)
jno
jmp
inc
(bad)
adc
mov
out
clc
das
ds
cld
call
jne
or
ins
push
or
cli
cmc
cmp
cmp
sbb
push
mov
in
add
daa
and
lock
je
fmul
jecxz
push
jnp
loopne
mov
sbb
mov
dec
movs
pop
addr16
sahf
and
xchg
cmp
das
pop
(bad)
cmps
xchg
out
(bad)
pop
repnz
retf
jl
xchg
fwait
push
stc
mov
adc
ja
out
mov
sub
or
outs
dec
xor
and
int
loopne
js
push
outs
sbb
ds
js
mov
and
fidiv
adc
(bad)
inc
in
int3
fstp
int
jae
add
test
pop
test
xor
out
movs
dec
mov
add
mov
jo
stos
add
(bad)
mov
add
jmp
xchg
mov
inc
sbb
jb
mov
icebp
jl
cmc
xchg
adc
fisttp
and
dec
scas
push
scas
jmp
or
add
loopne
sub
jo
imul
std
mov
scas
jg
jno
pop
push
addr16
jae
push
dec
es
sub
mov
xchg
out
je
inc
jg
les
lods
inc
rcr
arpl
cmp
test
(bad)
mov
lahf
adc
push
xchg
add
repz
popa
jnp
imul
fwait
test
mov
inc
dec
adc
outs
mov
mov
mov
repz
je
mov
mov
mov
or
xor
sbb
imul
call
ins
xor
das
fwait
jg
xchg
and
push
maxps
cmps
movs
and
mov
mov
fs
xor
(bad)
sti
in
mov
pop
popf
leave
pop
fsubp
inc
sbb
rcr
std
test
test
jmp
in
fnstcw
gs
int3
push
or
mov
ret
ja
xchg
hlt
test
ret
out
xchg
or
sub
les
test
sbb
add
repz
push
es
mov
call
pop
enter
pop
add
cmp
cs
jae
daa
inc
cmp
push
or
fistp
aaa
ss
xchg
cdq
pop
xor
test
push
aas
push
mov
in
adc
mov
and
xchg
push
sbb
mov
inc
dec
cmps
aam
(bad)
push
fcomp
mov
test
es
push
shr
jb
cmp
jno
sub
adc
lods
pop
aad
lods
cmp
xor
test
fadd
sub
fadd
mov
cld
or
fpatan
in
into
xchg
hlt
(bad)
ja
mov
retf
jl
xor
fld
and
and
das
hlt
iret
mov
pop
rcl
imul
std
push
adc
sbb
setns
movs
sub
mov
pop
adc
cmp
jecxz
jnp
es
inc
xchg
jmp
in
(bad)
cmp
cld
or
sub
adc
jle
fwait
(bad)
ins
pop
mov
(bad)
xor
push
fistp
popf
(bad)
outs
(bad)
loop
lahf
loop
dec
ds
dec
cwde
dec
in
pop
add
inc
pop
xchg
inc
ja
int
jmp
mov
xor
pop
shl
dec
sub
push
dec
mov
stos
xchg
gs
daa
dec
adc
mov
mov
mov
inc
sbb
loop
adc
and
(bad)
(bad)
rcl
jmp
sub
out
push
rcr
xlat
mov
jb
fcmovb
jp
cmp
xchg
or
movs
mov
shl
pop
dec
popa
jne
jmp
mov
add
sbb
mov
or
je
addr16
and
cmp
inc
or
shl
and
pop
cli
shl
sbb
push
inc
pusha
cmp
jbe
out
cmp
jmp
sub
(bad)
sbb
push
inc
arpl
outs
mov
adc
movs
mov
into
pop
in
cs
pop
mov
mov
jns
fldcw
lods
jb
fistp
add
inc
add
int
inc
sub
mov
push
add
add
push
inc
pop
xlat
cmc
mov
mov
outs
push
mov
inc
fwait
sub
popf
into
pop
or
scas
pop
add
ins
jmp
call
sahf
push
test
or
js
test
mov
mov
push
push
jg
add
arpl
or
scas
push
lods
mov
or
mov
into
cs
test
cwde
sbb
mov
add
adc
jge
mov
xor
imul
cmp
scas
or
arpl
jnp
clc
aad
or
call
add
inc
inc
dec
jg
push
jmp
aaa
cmp
add
add
jg
call
in
data16
aas
into
lods
aas
sub
test
mov
movs
jae
inc
dec
xchg
shl
mov
(bad)
outs
mov
dec
cmps
not
cli
jge
adc
lea
sbb
scas
(bad)
dec
mov
jge
sbb
or
out
les
sbb
inc
int3
jl
cmp
mov
int
imul
inc
push
dec
les
aad
adc
or
fisubr
push
mov
xchg
xchg
dec
push
loop
sbb
mov
dec
cmp
mov
adc
xchg
cmps
pop
rcl
and
(bad)
xor
push
mov
ja
pop
mov
sbb
shr
in
fldenv
scas
xor
repnz
inc
popa
mov
lea
xlat
push
mov
nop
jmp
mov
cdq
lods
inc
out
lea
mov
xor
mov
out
xor
push
sbb
lock
cmp
adc
jg
popf
sbb
jb
push
cmp
icebp
(bad)
aas
inc
clc
push
pop
mov
inc
cmovo
aaa
sbb
ucomiss
shl
std
adc
sub
cmc
xlat
cmp
inc
cmp
out
mov
jne
jle
lea
sbb
out
or
movs
fiadd
jo
imul
hlt
xchg
jmp
sar
repz
or
cli
loopne
pusha
scas
int
dec
sub
jns
adc
loop
jecxz
adc
or
jge
addr16
cmps
imul
jl
daa
out
adc
cld
bound
mov
fst
adc
pop
clc
jge
in
add
sar
fsubr
xor
imul
fwait
mov
jb
add
mov
dec
cmp
lahf
jg
xchg
inc
xor
mov
mov
out
xor
in
lods
xchg
mov
scas
add
data16
into
mov
and
sub
out
pop
adc
sar
sub
add
lock
iret
aad
push
lock
loopne
out
sub
iret
test
push
cmc
les
sbb
xchg
mov
ret
mul
dec
shr
lea
cmp
mov
jno
push
inc
popa
call
lea
jle
cmp
add
dec
arpl
ja
dec
sbb
xlat
cli
cdq
(bad)
lods
pop
add
mov
add
push
into
pop
ficom
sub
jae
adc
fnstsw
pop
sub
test
(bad)
xor
in
xor
nop
movs
cmp
xchg
adc
pop
js
dec
mov
imul
or
stos
ret
and
out
bound
sbb
mov
setne
sbb
popf
shl
pop
imul
and
rcl
hlt
loope
dec
mov
adc
cld
inc
(bad)
push
adc
cmp
je
adc
fiadd
sbb
into
pop
cmp
xchg
mov
scas
dec
dec
mov
or
ss
xlat
cmps
push
(bad)
push
int3
and
js
push
xchg
dec
cmp
sbb
(bad)
shr
dec
lods
mov
push
dec
fcomp
push
mov
clc
cs
push
sti
sub
repnz
arpl
xchg
shr
lods
mov
cmps
dec
cmps
icebp
and
dec
nop
cmps
fnstsw
xor
stos
cmps
adc
std
outs
enter
jg
cmps
cmps
inc
sub
sub
sub
stc
mov
xchg
xchg
pop
xchg
test
jecxz
dec
test
in
ja
mov
leave
not
in
sbb
div
sub
adc
bound
js
mov
push
cli
mov
in
retf
pusha
xchg
add
or
pop
rol
or
dec
iret
xor
lahf
xchg
aas
add
mov
cmp
add
pop
das
inc
mov
fimul
stos
cld
loope
pop
cmps
sub
sbb
lea
cmp
ret
aas
xor
sub
test
(bad)
cld
pop
jp
shl
xlat
lock
stos
jo
xor
lods
std
loope
jmp
add
adc
test
call
dec
push
push
pop
xchg
stc
jmp
pop
std
repz
arpl
fwait
in
daa
cli
push
add
retf
push
pop
push
scas
sub
jne
(bad)
inc
rcr
movs
add
movs
inc
cmp
pop
in
jl
dec
cdq
iret
ins
mov
jmp
dec
jp
ds
mov
push
cs
push
popa
mov
add
mov
popf
cmps
mov
sbb
mov
sub
or
or
ret
dec
cld
loope
icebp
push
or
mov
and
(bad)
loop
sub
dec
cmc
dec
repz
adc
jl
mov
or
push
lds
mov
(bad)
in
pop
addr16
sub
sbb
pop
mov
daa
std
loopne
outs
out
fiadd
mov
mov
xchg
into
and
icebp
mov
jae
or
push
xchg
add
add
(bad)
and
and
xor
(bad)
retf
mov
pushf
jmp
and
call
jb
frstor
cmp
jmp
or
cmp
push
or
mov
push
dec
sub
and
sti
es
fs
or
out
sub
shr
jle
inc
sbb
cmp
mov
ja
cmp
fbld
dec
rcl
scas
jle
cld
inc
adc
or
scas
mov
das
jnp
fcomp
and
xchg
add
imul
ja
mov
sub
jno
addr16
jp
and
aad
mov
xor
or
cld
adc
xor
xchg
mov
shr
xchg
xlat
jb
ins
out
test
cmp
(bad)
dec
cmp
mov
mov
mov
test
sub
int
cmp
adc
xchg
daa
push
cmps
cs
and
neg
xchg
adc
mov
pop
hlt
mov
stos
push
xor
aaa
cdq
sahf
(bad)
enter
push
ficomp
(bad)
adc
icebp
outs
enter
xchg
sbb
xor
sub
daa
idiv
dec
push
jl
(bad)
call
jmp
cmps
sub
sbb
pop
jbe
pushf
ins
jle
sbb
aam
cld
ret
cmp
test
push
pushf
sahf
xor
jno
push
repz
jns
repz
push
mov
in
jmp
dec
cdq
cld
aaa
test
cmc
fcmovu
out
ins
cdq
call
adc
jns
pop
xchg
in
jne
pop
xor
rcr
fist
ins
gs
cmp
mov
(bad)
pop
pop
mov
retf
out
lods
cwde
mov
push
pop
dec
pop
rcr
jnp
sbb
push
push
js
xchg
inc
add
sti
jo
push
sub
jp
(bad)
rcr
push
add
rol
xchg
popa
call
enter
or
lods
jae
mov
mov
cmp
fprem1
stos
fdiv
(bad)
sub
add
sahf
fistp
jo
add
test
out
mov
(bad)
loop
sub
sahf
mov
cmp
sbb
dec
retf
imul
sub
movs
xor
neg
das
or
sbb
mul
scas
mov
popa
dec
in
jb
dec
xor
shr
test
mov
adc
dec
lods
into
jnp
pop
gs
retf
aaa
ins
sub
out
aad
pusha
pop
stos
shl
mov
ror
inc
lods
out
arpl
xor
ja
cli
mov
lea
(bad)
and
cmp
adc
in
int
lds
add
cmp
sbb
sub
ror
test
cmps
and
push
stc
inc
pop
jp
adc
ror
pop
pop
loopne
retf
(bad)
retf
(bad)
imul
sub
(bad)
mov
inc
mov
adc
frstor
test
nop
in
mov
in
cmp
in
sbb
in
mov
push
push
mov
icebp
mov
sbb
(bad)
jnp
aaa
(bad)
pushf
rol
mov
fisttp
rol
sbb
xchg
inc
inc
xchg
imul
pushf
scas
rcr
mov
in
jp
jno
cli
or
jl
or
(bad)
xchg
dec
(bad)
retf
xor
dec
movs
xor
ret
and
sub
dec
ror
popf
aaa
popf
inc
cmp
mov
sbb
ja
pop
leave
scas
dec
adc
test
xor
push
add
jp
xchg
add
xchg
or
pusha
push
pop
cmps
jns
jl
mov
pop
or
mov
and
cs
and
je
mov
lds
mov
xor
stc
repz
sub
jb
cmc
test
repnz
jnp
test
adc
fidiv
test
sbb
pop
pop
sbb
out
inc
mov
lods
dec
cs
aad
cdq
jmp
pop
jb
adc
ja
call
movs
fs
ret
ds
jbe
jl
push
mov
(bad)
dec
cwde
cdq
sub
jmp
inc
push
mov
gs
rol
rol
nop
(bad)
imul
push
std
sbb
maxps
in
jb
push
ret
and
cmp
imul
dec
mov
cmps
xchg
pop
or
out
cmp
cwde
or
(bad)
sub
jns
pop
(bad)
lods
push
cwde
mov
add
rcl
(bad)
xor
test
sub
sbb
sbb
pop
mov
mov
data16
js
push
xchg
mov
pop
iret
bound
(bad)
movs
outs
sahf
movs
mov
mov
std
mov
popa
int3
cmp
cmps
neg
xchg
xchg
es
cmp
mov
scas
inc
shr
push
ja
(bad)
bound
xchg
fwait
retf
imul
sub
enter
or
or
lds
ret
repnz
ins
test
cs
or
test
js
jns
or
cdq
mov
(bad)
pushf
and
test
bound
fisttp
stos
fimul
jns
int3
sub
jae
test
push
shl
(bad)
mov
mov
push
cwde
stc
xor
fidivr
inc
dec
sti
hlt
xlat
repnz
dec
not
push
enter
pop
in
fnstsw
xor
jp
and
fdivr
sbb
sbb
and
mov
dec
dec
cmp
push
fst
add
mov
call
xor
push
jne
inc
loopne
sti
neg
pop
mov
imul
dec
dec
fcom
mov
fs
cs
in
sahf
movs
call
and
push
mov
cmp
fcomp
arpl
in
repnz
push
pop
jmp
fidiv
cs
cmp
fcmovne
cmps
loopne
outs
stos
clc
jb
push
pop
nop
push
jne
ficomp
ds
sub
jnp
jmp
sbb
mov
xor
lds
or
stc
mov
cli
ja
and
scas
add
lods
and
or
add
sar
pop
mov
adc
and
and
mov
fwait
mov
mov
loope
and
sar
inc
lahf
(bad)
mov
and
(bad)
or
cdq
aaa
fucom
sub
sahf
dec
mov
out
jle
sar
jp
sti
push
movs
jae
mov
loop
pop
xor
test
mov
jns
in
adc
int
out
in
leave
mov
mov
mov
pop
aaa
cdq
cmp
(bad)
fcomi
mov
sub
hlt
xchg
daa
scas
xor
jbe
bound
cmp
xchg
loope
test
sbb
xchg
jne
shl
mov
xlat
call
cmp
pop
test
jle
in
(bad)
sub
inc
das
jmp
popa
cwde
pop
dec
cmp
js
jp
mov
mov
iret
mov
stc
inc
jbe
shl
sahf
pop
frstor
pop
ins
repz
lea
jge
cmp
adc
sub
fmul
into
bound
xchg
jno
sbb
or
push
ins
dec
jg
jae
dec
push
cs
mov
bound
daa
cs
out
mov
mov
pop
sbb
dec
push
shr
mov
push
lds
sub
les
inc
(bad)
aaa
arpl
adc
xchg
inc
sbb
sbb
test
mov
aas
jp
add
cld
add
or
scas
and
mov
or
inc
mov
stos
ffree
jb
ror
addr16
mov
and
and
mov
cld
adc
cmp
(bad)
sbb
dec
scas
daa
and
bound
pop
xchg
(bad)
mov
(bad)
aas
xor
pop
mov
loop
ret
mov
add
xchg
(bad)
aad
or
sub
jp
xor
or
jp
push
inc
sub
sar
or
fwait
retf
div
push
jbe
popa
pop
sar
pop
pop
xor
mov
data16
repz
mov
ins
or
xchg
in
lods
and
pop
shl
rcl
dec
xchg
or
mov
rcl
inc
dec
and
out
(bad)
cmp
ret
ret
sub
mov
mov
or
int3
sbb
fst
sub
mov
cmc
popa
or
stos
cmps
cmp
add
mov
sub
jl
fwait
sar
dec
push
sbb
mov
imul
mov
or
ror
div
cdq
jmp
mov
dec
div
hlt
and
xchg
repnz
loopne
xor
stos
xchg
(bad)
lea
mov
test
stos
loope
fxch
push
into
push
ds
mov
lock
push
mov
cwde
or
pop
push
xchg
and
aad
aas
fiadd
ret
cmp
dec
push
or
mov
inc
fdivr
int
fidiv
pop
pop
test
mov
fidivr
add
(bad)
xor
mov
jp
inc
cld
out
call
jp
sbb
idiv
loopne
inc
fdiv
xor
mov
gs
outs
stos
gs
out
es
scas
pop
test
into
call
hlt
out
push
std
into
or
push
fldenv
mov
subps
stos
jnp
sbb
sub
mov
out
lods
push
mov
dec
rol
mov
stos
sar
jle
outs
lock
in
sub
xor
and
adc
(bad)
(bad)
push
(bad)
mov
or
adc
pop
cwde
in
adc
out
fbld
mov
xchg
dec
jmp
and
dec
fld
sahf
pop
adc
scas
out
pushf
fistp
sub
bsf
idiv
into
imul
jnp
daa
mov
xchg
mov
pop
popf
cmps
jb
jns
fwait
xchg
call
or
sbb
pop
clc
aam
test
clc
in
stc
pusha
ds
lahf
or
dec
(bad)
fdivrp
xor
popa
out
popf
dec
jmp
out
(bad)
pop
sbb
outs
(bad)
call
imul
prefetch
push
push
pushf
inc
xlat
jecxz
dec
mov
push
add
scas
test
jmp
ret
fisttp
ja
repz
push
pop
lea
or
push
pop
xlat
lahf
test
call
cmps
inc
int3
pop
es
cdq
mov
xchg
loop
xchg
popa
cs
or
out
sbb
lea
fnsave
dec
push
xor
jno
or
out
jb
lods
or
jno
xchg
div
je
test
test
push
cdq
pop
adc
fs
adc
je
in
add
push
std
cmp
popf
push
(bad)
(bad)
das
sub
push
pop
push
and
dec
test
arpl
std
sbb
lds
adc
push
dec
mov
sbb
fisttp
push
(bad)
test
xchg
test
aam
pop
and
ins
hlt
in
mov
mov
xchg
pushf
aam
stos
rcl
or
adc
jno
push
arpl
ins
xchg
or
xchg
jge
jb
movs
jnp
xchg
cmp
push
ja
sbb
pop
popf
and
out
(bad)
xor
cmp
push
imul
cmps
cmp
hlt
rcr
rcr
mov
adc
ins
push
aam
or
and
jl
pop
mov
ja
call
(bad)
call
dec
stos
nop
mov
call
cmps
inc
ret
out
xchg
lahf
outs
aas
movs
cmp
jbe
(bad)
loopne
mov
in
jne
sbb
icebp
or
mov
aaa
test
das
add
imul
in
dec
or
mov
xor
fisttp
jl
and
call
iret
mov
inc
loop
mov
fiadd
cmp
(bad)
jp
cmp
arpl
iret
std
sar
ja
and
add
aas
(bad)
test
jne
dec
clc
xchg
retf
push
addr16
lods
cmp
mov
push
loopne
mov
inc
adc
mov
stos
repz
ror
dec
stos
sub
div
js
adc
aam
call
jg
jge
mov
sbb
mov
jp
xchg
jge
dec
push
mov
jl
shl
and
add
aam
ret
gs
adc
adc
jns
adc
(bad)
es
ins
sbb
push
mov
xor
imul
mov
add
pop
shl
shr
mov
repnz
enter
or
pop
adc
mov
cli
popf
or
cmp
adc
in
jne
aad
or
retf
xchg
xchg
inc
sub
icebp
add
je
or
fdivr
and
aam
xor
movs
sbb
hlt
xlat
shl
sbb
push
lahf
pop
inc
mov
pop
pop
mov
add
dec
dec
dec
and
push
lock
xor
and
clc
leave
out
shl
jle
push
xchg
inc
enter
xchg
and
dec
stos
movs
test
and
in
sar
daa
sub
pop
mov
and
push
out
pop
aaa
stc
shl
jne
icebp
cmp
ror
or
test
sbb
jl
ins
jmp
enter
shr
xchg
les
sub
sbb
push
lods
sub
mov
pop
xchg
sub
into
leave
add
inc
add
outs
xor
retf
adc
jecxz
fnstcw
rcr
out
xchg
repz
or
(bad)
add
jo
scas
dec
loope
aas
sbb
cmp
cld
lods
and
hlt
dec
ja
cs
mov
scas
je
adc
ret
sbb
dec
cli
lea
add
pop
push
xor
dec
push
jl
sub
(bad)
mov
push
movs
cmc
lods
sbb
and
adc
imul
test
or
jmp
or
inc
je
and
sub
pop
test
loope
pushf
aaa
and
xor
jne
adc
jecxz
cdq
je
outs
pop
ja
(bad)
jmp
daa
mov
ins
imul
mov
fmul
push
stc
jnp
daa
test
mov
icebp
or
push
pop
cmp
mov
jp
dec
xchg
stos
dec
out
xchg
sbb
push
mov
ret
(bad)
fldenv
mov
rol
and
jmp
cdq
int
and
xor
in
in
sti
lahf
adc
or
xchg
cs
out
and
xor
call
adc
out
mov
cmp
scas
adc
or
mov
push
fcomp
push
lea
ret
jnp
clc
inc
fwait
ret
ret
cli
or
fwait
test
push
scas
cld
mov
stc
sbb
retf
or
cmp
jno
in
fild
mov
jo
inc
inc
and
inc
push
push
sar
mov
mov
or
inc
clc
mov
cmp
pop
xchg
mov
mov
idiv
dec
pushf
imul
(bad)
fwait
jmp
retf
jno
mov
and
iret
adc
cdq
xor
dec
(bad)
jmp
push
and
sahf
mov
dec
push
adc
jge
or
adc
into
jno
and
sti
fstp
pop
cs
(bad)
cmp
out
ins
cmc
jne
and
das
jmp
fidiv
xchg
mov
cdq
mov
pop
ror
xchg
cld
mov
imul
mov
sub
mov
aam
pusha
(bad)
mov
aad
mov
or
push
jl
imul
in
sub
das
push
xlat
jae
mov
inc
adc
cmp
test
push
fs
cmps
les
adc
gs
popf
push
dec
(bad)
(bad)
push
adc
(bad)
inc
push
popf
in
(bad)
aam
push
sub
sub
je
jp
mov
inc
inc
dec
movs
mul
aaa
and
jno
mov
mov
iret
sub
lea
jbe
mov
pop
pop
dec
sahf
repz
inc
xchg
icebp
mov
cmp
fndisi(8087
dec
push
lods
rcr
fwait
jmp
inc
and
js
jne
mov
push
je
jbe
stos
ror
xor
(bad)
mov
sti
pop
gs
sub
ror
jg
mov
and
outs
sar
ja
cmp
retf
stos
mov
jmp
xor
sti
nop
std
cmp
inc
into
scas
ds
and
adc
clc
adc
mov
movs
push
rcr
adc
pop
push
shr
lds
jge
(bad)
ror
loope
inc
into
ss
pop
and
sbb
(bad)
dec
imul
adc
sub
mov
pop
sbb
leave
icebp
mov
mov
and
out
clc
sub
aad
jl
int3
mov
or
xor
fiadd
and
fisubr
(bad)
jae
add
loope
jne
sbb
idiv
mov
fldcw
pop
call
xchg
mov
xor
test
mov
adc
adc
cs
lock
hlt
or
jnp
shl
or
cmp
jl
pop
pop
dec
rol
dec
cmps
stos
mov
clc
jo
out
and
cmp
or
scas
lahf
fistp
loop
test
inc
xchg
mov
adc
mov
and
rcl
mul
test
and
aas
push
or
repnz
scas
sbb
mov
mov
in
lea
mov
fbld
add
rdtsc
retf
dec
add
leave
mov
ins
and
pop
scas
loopne
push
mov
jnp
mov
icebp
popaw
popa
xchg
stos
call
sub
inc
iret
dec
push
pop
add
mul
cwde
pop
pop
mov
jl
rcr
call
sbb
out
seta
vcmpps
lahf
test
push
dec
xchg
ins
int
jnp
bnd
cmp
mov
fcomp
add
movs
inc
addr16
loope
or
add
adc
imul
xor
sbb
push
int3
or
add
cmps
retf
xchg
mov
mov
jmp
loopne
data16
aam
ret
jecxz
int
cmp
fsub
cmp
push
and
(bad)
fnstsw
cwde
pop
inc
pmaddwd
push
mov
mov
jl
into
bound
arpl
data16
adc
rol
movs
sub
mov
jb
iret
fs
mov
or
mov
test
outs
fwait
mov
mov
ret
mov
or
mov
xchg
repz
sub
fst
out
fnstenv
pop
jae
popf
cmp
idiv
cmc
clc
pop
push
mov
cmps
out
in
mov
aad
mov
ss
cmp
nop
out
jle
add
pop
inc
enter
ins
jle
inc
(bad)
fsubp
mov
mov
mov
cdq
loope
add
mov
inc
sub
xor
lea
add
cmps
test
mov
sub
add
enter
and
loopne
inc
cld
hlt
stos
cmp
xor
cli
xor
cmp
sahf
int3
cmps
jns
(bad)
retf
add
fwait
hlt
jge
test
sahf
push
data16
outs
push
int3
xlat
mov
movs
nop
mov
xor
and
cs
pop
mov
repz
jge
push
pop
xor
sub
mov
push
xchg
les
mov
stos
jo
cli
ror
(bad)
fsub
das
mov
sub
push
loopne
xor
lods
adc
push
adc
inc
sub
in
repnz
sbb
push
iret
int3
pusha
sub
ins
pop
out
into
ss
fcom
add
gs
jmp
xor
push
enter
adc
fmul
sbb
loopne
fld
mov
cmps
neg
add
fisub
sahf
lods
shr
scas
pop
not
or
jb
not
ror
aad
loope
and
imul
xchg
or
sbb
fisttp
(bad)
cld
rol
and
and
mov
fdivr
loop
cmps
out
loope
loope
dec
stc
inc
mov
push
push
adc
adc
mov
inc
add
scas
icebp
pop
das
cmp
jecxz
loopne
and
mov
mov
add
inc
test
test
push
rcl
jl
push
jl
mov
fadd
shl
dec
sbb
sub
(bad)
pop
mov
pop
jmp
outs
cmc
enter
icebp
imul
fcomp
ss
jge
dec
or
rol
add
adc
leave
fs
ror
loope
inc
cmp
mov
xchg
int3
stos
xor
sub
cmps
xchg
daa
and
aad
shl
(bad)
aad
lea
jno
dec
xchg
lea
jle
jo
clc
sbb
adc
nop
dec
scas
in
sar
pop
xchg
xchg
ds
pusha
add
cdq
mov
(bad)
or
mov
mov
xor
cwde
pop
dec
cmp
push
pushw
xchg
mov
pop
pop
lock
aam
bound
mov
sahf
xor
gs
out
pop
pop
ret
xor
(bad)
int
into
mov
mov
lock
mov
add
pop
and
ja
scas
ss
adc
(bad)
repnz
inc
lea
dec
mov
shl
adc
mov
jbe
call
add
adc
test
int3
out
es
sbb
ins
push
pop
jmp
jmp
fcomp
mov
mov
sbb
leave
ret
cmps
add
int
jecxz
(bad)
xchg
jp
pop
ret
mov
in
and
test
jns
shr
pushf
sub
mov
cmova
push
sub
mov
fisubr
pop
dec
enter
jp
push
add
out
repz
shr
mov
jae
push
adc
mov
mov
fcom
outs
enter
and
push
cmp
pop
jnp
cmp
gs
jbe
neg
(bad)
call
mov
ins
xchg
or
push
cmp
mov
inc
repnz
dec
inc
sub
js
pop
push
fwait
adc
xor
mov
nop
push
lds
sahf
clc
push
jmp
fucom
sbb
bound
fdiv
out
and
int3
fild
sbb
out
call
push
inc
sub
push
cwde
fild
jb
push
pop
(bad)
push
pusha
cmp
and
cmps
adc
xchg
iret
test
push
out
(bad)
pop
aas
outs
test
in
repnz
and
stc
and
stos
mov
stc
xor
mov
pop
mov
cmps
(bad)
stc
movs
cmc
lods
idiv
push
mov
shl
xchg
fs
loopne
loope
pop
jg
jl
inc
das
pop
push
ret
adc
sub
jp
mov
ret
mov
or
jae
push
inc
cmp
or
xchg
pusha
jecxz
arpl
mov
pop
mov
jb
aaa
mov
fistp
add
push
movs
out
push
sub
out
add
mov
xor
mov
fdivr
sbb
call
int
mov
into
shl
mov
cmp
mov
adc
sub
mov
jge
sbb
add
xor
imul
mov
pop
fldenv
mov
lods
fistp
in
push
mov
pop
push
jg
data16
xchg
jmp
and
mov
movs
mov
jp
sub
jmp
mov
mov
es
fcom
pop
fsubr
push
test
pop
iret
mov
or
dec
jne
inc
mov
mov
pop
mov
cmp
sti
and
xor
mov
jl
push
scas
dec
or
test
stc
add
ss
pushf
jb
xor
ja
mov
push
mov
aaa
dec
(bad)
iret
push
or
(bad)
dec
dec
mov
pop
mov
cmp
rol
mov
push
arpl
std
sub
push
call
inc
jb
or
jecxz
loop
mov
rol
(bad)
std
sbb
mov
fistp
arpl
ins
outs
cli
pushf
repnz
mov
(bad)
stos
jl
mov
xor
sub
cmps
jbe
aas
mov
cwde
(bad)
fsubr
push
dec
xor
cmps
cmp
aaa
outs
dec
lahf
mov
addr16
pushf
jo
aaa
push
les
sbb
adc
hlt
int3
add
adc
out
jbe
sub
jmp
aad
mov
loopne
mov
sbb
pusha
xchg
(bad)
jmp
loopne
and
out
adc
test
xchg
in
shl
sub
out
xor
and
sti
aaa
je
out
add
(bad)
outs
jp
mov
dec
inc
ret
push
dec
and
jmp
and
or
dec
aad
mov
pop
push
jbe
push
xchg
cli
sub
xor
and
lea
pop
xchg
(bad)
rcr
(bad)
xlat
or
fdiv
dec
stc
jbe
and
fild
lds
sti
ins
xchg
cwde
test
push
push
and
mov
imul
cld
and
cmps
test
rol
shl
or
sar
movs
xchg
test
xchg
xlat
pushf
icebp
stc
pop
add
sub
aad
fisubr
and
nop
dec
pop
cli
add
jecxz
mov
mov
adc
pop
test
xor
or
xchg
adc
or
test
push
iret
loop
xor
sub
retf
sahf
out
gs
and
arpl
iret
add
cmp
jno
outs
(bad)
call
cmp
add
xor
push
add
aad
out
movs
jbe
cld
enter
mov
mov
sub
pop
iret
pop
mov
fwait
ins
aam
or
into
addr16
and
mov
jge
cmp
scas
mov
push
gs
add
dec
sahf
mov
(bad)
inc
out
ins
mov
clc
jnp
adc
pop
add
arpl
jb
movs
push
(bad)
(bad)
test
xor
mov
loop
lds
cdq
rcr
gs
repnz
inc
and
sub
movs
aam
inc
add
cmp
pop
sbb
jecxz
fild
cmp
not
stc
les
add
or
sub
test
and
dec
jno
fld
outs
mov
mov
add
xor
mov
popf
sar
aaa
out
es
sub
mov
(bad)
mov
mov
xlat
xchg
pop
(bad)
xchg
jg
mov
pop
push
dec
not
sub
(bad)
xor
movs
icebp
ins
jo
lea
mov
mov
stc
push
sar
push
popf
aad
int
mov
dec
call
mov
dec
int3
dec
jmp
dec
jg
dec
dec
jbe
icebp
sbb
std
sub
mov
mov
daa
jecxz
fcomp
lds
mov
xor
mov
mov
ret
jp
xor
in
lahf
xor
(bad)
pop
loopne
mov
push
pop
lock
inc
jns
shl
fwait
cmp
mov
jl
pop
dec
in
stos
and
sbb
sbb
fcomp
stos
lds
sub
(bad)
push
sub
and
adc
test
xor
test
outs
into
loopne
jno
out
jns
in
cdq
jo
push
push
and
int
and
ds
shl
imul
mov
inc
mov
pop
in
fimul
sbb
mov
sub
push
lahf
cmp
inc
rcl
stos
out
dec
ins
sub
cwd
cmp
or
je
rcl
jecxz
sub
xchg
leave
push
mov
push
out
retf
sti
fwait
jg
popf
es
and
into
shl
pop
jmp
xor
std
daa
jp
and
adc
mov
mov
mov
mov
arpl
pop
icebp
xor
mov
mov
jnp
dec
pop
mov
lahf
and
jmp
mov
jmp
jno
repnz
(bad)
push
sbb
stos
jp
xor
rep
sub
cmp
retf
sbb
std
dec
xchg
xor
leave
out
inc
pop
mov
out
and
idiv
hlt
inc
jle
inc
and
or
xchg
cwde
fstp
push
retf
mov
pop
call
jmp
add
in
and
fsubp
xor
sar
jae
cwde
push
(bad)
movs
jge
cdq
jecxz
pop
call
(bad)
in
mov
add
ja
hlt
out
fisubr
out
rcl
push
es
inc
push
sbb
jb
add
retf
and
clc
mov
inc
pop
mov
shl
inc
push
dec
loopne
pop
mov
and
out
popf
mov
cmp
(bad)
int3
repnz
dec
add
xor
push
mov
push
fist
ret
xor
daa
bound
jmp
push
mov
inc
fnsave
test
mov
xlat
xor
shl
cld
out
jae
dec
fistp
add
mov
call
xchg
xchg
xor
xchg
xchg
mov
mov
int3
cmp
jl
push
std
fcomp
add
cli
loop
xchg
popf
mov
into
xchg
mov
and
pop
loopne
inc
add
loope
lahf
sbb
mov
jo
loop
out
stos
outs
fsub
ror
cmp
sti
fsub
sub
das
(bad)
jmp
jle
ret
ror
add
loop
aaa
inc
sub
or
fldl2t
mov
cs
inc
out
dec
mov
dec
pushf
dec
or
test
cmps
xchg
sbb
mov
lods
and
scas
imul
dec
xchg
dec
aas
in
lds
lahf
push
or
ret
dec
adc
aad
test
retf
out
mov
xor
xchg
dec
fs
mov
test
leave
sub
add
lods
int3
push
(bad)
in
sbb
scas
in
(bad)
add
addr16
pop
icebp
cmps
xor
xchg
or
xor
neg
pop
aas
cmp
inc
jg
dec
cmps
cmps
test
mov
mov
scas
sar
leave
popa
push
repz
ret
mov
shl
dec
mov
push
adc
pop
mov
sbb
xor
xchg
cdq
loope
cmp
push
push
adc
ret
repz
std
inc
xchg
xlat
dec
loope
mov
cmp
leave
test
mov
mov
add
push
jmp
and
outs
mov
xor
gs
xor
and
xchg
xchg
cmp
mov
int
mov
adc
stos
outs
adc
popa
inc
cdq
shr
sahf
daa
xor
and
test
mov
enter
div
fsubr
push
adc
adc
xchg
and
add
iret
popa
fst
pop
cmp
mov
enter
fdivr
push
add
cmps
fcmovnbe
jmp
push
pop
mov
fwait
xchg
iret
and
arpl
dec
xchg
mov
out
aad
push
repnz
jnp
jle
aam
xor
fwait
jmp
cmp
mov
shl
lock
test
je
dec
push
out
xchg
sbb
fist
dec
mov
je
stos
cmp
inc
dec
dec
xchg
je
push
sbb
mov
outs
xor
dec
push
ins
dec
xchg
push
(bad)
out
dec
xlat
iret
jl
test
xor
dec
add
xchg
data16
cwde
or
mov
mov
inc
cmc
sahf
jnp
je
(bad)
icebp
fcomp
mov
jbe
enter
fdivr
or
xor
or
pop
test
mov
mov
inc
mov
xchg
imul
neg
hlt
jl
xchg
std
fdivr
scas
jb
dec
adc
data16
jns
cmovle
dec
retf
outs
xor
xor
hlt
fsub
jmp
sbb
out
inc
inc
test
jns
xchg
lods
fsub
sbb
push
and
sti
mov
pop
dec
lahf
std
or
clc
jl
nop
mov
or
ja
sbb
adc
scas
ror
(bad)
or
aaa
jle
std
dec
dec
das
retf
enter
xchg
dec
push
mov
mov
imul
call
in
jb
fld
or
shr
push
and
shl
ss
push
xchg
pusha
sbb
pusha
add
and
inc
es
ins
jg
jbe
daa
cmps
clc
mov
sar
xchg
dec
fmul
xchg
mov
in
lods
movs
and
push
aaa
add
mov
xor
add
sub
jb
pop
outs
jmp
lea
aam
test
cmp
std
cmp
icebp
cmp
xchg
dec
cld
sti
push
cmp
cmp
sti
mov
into
inc
cmps
pop
adc
cwde
ret
xlat
jb
push
sub
pop
jbe
(bad)
jge
jne
clc
jne
adc
inc
outs
push
test
fst
cmp
repz
stos
adc
shl
(bad)
dec
jmp
or
in
add
pop
sbb
ds
cmp
div
ins
push
shl
jecxz
and
inc
mov
lea
add
dec
stc
pop
pushf
or
outs
dec
mov
xchg
fild
enter
pop
daa
inc
movs
loop
jmp
test
out
loope
out
(bad)
icebp
dec
mov
mov
pop
fild
add
mov
ret
or
mov
dec
mov
mov
(bad)
mov
xchg
xor
sbb
fldenv
movs
fdivp
push
in
cli
push
push
and
jp
in
aad
sub
jp
fucomi
cmp
es
imul
imul
and
pushf
jmp
jne
hlt
iret
stos
nop
jmp
rcl
fs
and
ins
sub
push
mov
cmc
jno
dec
sub
inc
stc
ins
arpl
adc
pop
fdiv
mov
mov
pop
sub
xchg
fprem
mov
addr16
bound
push
mov
shl
mul
(bad)
aas
or
sbb
adc
fsub
in
cmp
xchg
fsubr
lods
je
out
aaa
cmp
adc
data16
pop
jge
xor
loopne
jp
sub
shl
test
cmp
arpl
mov
fwait
or
popf
adc
sbb
xchg
and
pop
inc
adc
std
xor
movaps
lds
mov
and
sbb
mov
mov
pop
push
int3
and
call
in
add
cwde
outs
js
das
iret
push
scas
mov
push
(bad)
dec
mov
and
cmps
mov
(bad)
add
mov
mov
aam
js
(bad)
and
cmp
sub
mov
lods
xchg
out
mov
(bad)
retf
div
ins
inc
lods
or
inc
out
cmp
or
test
mov
mov
add
ret
lea
mov
cmp
mov
pop
cld
ds
outs
mov
dec
sbb
loopne
sbb
and
inc
adc
adc
(bad)
shr
sbb
pop
lock
fwait
stos
out
xchg
pop
pusha
mov
mov
in
mov
cli
pusha
mov
(bad)
loopne
and
ins
lahf
sub
and
cmp
add
pop
mov
xor
(bad)
fnstcw
outs
stc
adc
cmp
fistp
sahf
cmp
imul
(bad)
sub
popf
or
not
push
pop
mov
mov
jbe
out
test
sub
test
cmc
mov
ret
push
mov
ins
lods
pop
imul
push
inc
sub
jnp
(bad)
lock
and
(bad)
(bad)
ja
test
or
dec
rol
jecxz
inc
xchg
jbe
mov
loopne
dec
test
inc
stos
js
xchg
iret
fidivr
dec
scas
add
clc
movs
scas
adc
adc
popa
xchg
dec
jp
jb
fdiv
cmps
sub
rcl
out
ret
adc
imul
mov
dec
test
fst
stos
mov
fisubr
cmps
cmp
inc
lock
xor
in
mov
adc
jne
dec
cs
jae
adc
hlt
(bad)
jle
or
test
rol
dec
in
retf
inc
push
movs
sub
loopne
inc
mov
outs
shl
lds
adc
mov
fs
aas
sub
iret
(bad)
xlat
shufps
lods
out
scas
push
mov
in
push
add
jnp
xor
(bad)
dec
cmp
mov
mov
int
mov
in
adc
shr
push
or
fs
xchg
test
into
xchg
ins
or
mov
dec
push
cmps
push
sub
(bad)
retf
mov
test
sbb
push
mov
in
div
test
or
and
(bad)
outs
loop
sub
adc
rcr
cwde
xor
jae
add
mov
arpl
push
sub
inc
mov
scas
(bad)
ins
ds
xchg
add
(bad)
les
test
cld
jmp
(bad)
mov
adc
(bad)
or
in
inc
iret
push
jl
in
xchg
and
data16
ss
imul
jg
inc
in
add
adc
and
add
push
call
push
xchg
adc
or
or
pop
push
xchg
xor
es
arpl
jecxz
je
or
and
mov
dec
cmp
mov
fs
outs
loopne
add
push
pop
dec
sbb
jecxz
lods
xchg
xchg
(bad)
sbb
(bad)
gs
arpl
mov
sahf
or
mov
loop
out
pusha
jp
cmp
mov
xchg
out
cmps
jle
sub
and
int3
fwait
jb
mov
mov
ror
fsubr
push
sub
idiv
sbb
rdpmc
aad
hlt
popa
lods
mov
jbe
xchg
jmp
xchg
dec
call
cmps
sbb
hlt
and
mov
push
add
pop
pop
mov
or
jbe
xor
nop
mov
lahf
sub
dec
push
test
data16
sub
adc
sbb
aas
mov
pop
pop
xchg
pop
loop
das
pushf
add
es
and
mov
popa
jne
cmp
adc
xchg
sub
push
sub
fild
dec
cmp
push
stos
dec
mov
shr
icebp
cmp
rol
xchg
aaa
js
das
pop
stc
mov
and
shr
pop
sub
dec
inc
cdq
mov
ret
scas
aaa
aas
loop
popa
(bad)
addr16
jb
jecxz
mov
xor
jne
or
pushf
add
shr
ss
xchg
pop
add
repnz
stos
pminub
sahf
or
fist
xchg
popf
mov
add
mov
aas
out
add
cmps
rol
es
mov
xchg
and
dec
jmp
xor
shr
inc
mov
mov
pop
mov
out
rol
arpl
mov
add
int
jnp
cmps
mov
and
sbb
dec
pop
mov
sub
mov
ficomp
mov
aad
ja
mov
dec
in
fidiv
push
fiadd
loopne
clc
ins
nop
add
mov
xor
aam
dec
push
scas
adc
test
push
stos
bound
jecxz
and
repnz
cmp
fbstp
clc
adc
not
hlt
mov
mov
push
jo
add
push
mov
repz
in
adc
das
jl
stos
out
sub
in
push
call
mov
jge
xchg
sub
push
push
push
jno
pop
(bad)
pop
ss
jb
jecxz
ins
les
dec
inc
jae
or
imul
or
cmp
addr16
pop
jle
cmc
add
js
sbb
leave
jo
xchg
mov
pop
sbb
retf
xchg
push
gs
mov
jbe
mov
out
jnp
xchg
shl
scas
or
cmp
jne
fdivr
jne
mov
scas
push
dec
add
dec
push
adc
je
(bad)
das
xchg
adc
je
mov
lock
aam
pusha
fist
(bad)
cmp
(bad)
dec
sub
ret
and
adc
jle
push
ret
pop
mov
rol
inc
mov
out
xchg
out
sbb
pop
xlat
add
sub
stc
outs
push
into
stos
jle
gs
mov
add
and
data16
nop
shl
ss
scas
cmp
dec
sbb
push
rol
add
rcr
idiv
imul
cmps
int3
lds
leave
retf
iret
rcr
stos
jbe
sbb
sar
arpl
mov
mov
outs
sbb
lock
dec
into
mov
lea
mov
shr
add
je
out
cmp
in
mov
hlt
jmp
(bad)
jmp
inc
jp
aam
sub
xchg
pop
mov
into
mov
pop
xchg
add
xchg
xor
call
out
(bad)
and
das
push
sahf
cmp
mov
cmp
jmp
hlt
(bad)
pop
and
and
cmp
fild
dec
pusha
pop
gs
inc
push
fdiv
into
scas
xor
inc
cmps
les
nop
jne
adc
(bad)
dec
push
dec
fmul
add
mov
xlat
xor
and
sub
test
pop
nop
add
mov
lods
mov
mov
pop
lds
test
ret
mov
rcr
sti
mov
pusha
xchg
adc
mov
iret
test
jne
mov
js
adc
push
lahf
call
push
cmp
push
scas
jo
int
jae
enter
cld
je
leave
stos
push
(bad)
mov
and
jae
xchg
stos
leave
cmp
mov
mov
pop
add
shr
call
jle
test
movs
push
mov
inc
imul
popa
add
fmul
xor
xor
mov
pop
pop
add
pop
mov
dec
adc
mov
mov
sbb
in
mul
or
cs
fnstenv
jae
(bad)
mov
lahf
xchg
cdq
aam
in
pop
inc
rcr
and
test
sbb
and
push
dec
push
mov
or
movs
repnz
or
push
int3
ds
fisttp
pop
xor
stc
cmp
loopne
inc
mov
jg
fist
inc
mov
mov
push
pop
out
sbb
pop
xchg
inc
in
retw
bound
shl
xchg
add
ds
jle
push
pop
pop
mov
in
push
xchg
cmp
cmp
mov
jl
sub
xor
and
ss
push
int
loope
repnz
ins
or
xor
(bad)
cld
in
or
(bad)
sbb
and
push
xor
dec
mov
std
xor
pop
xor
sbb
(bad)
jmp
sti
shr
push
add
or
(bad)
jmp
jmp
xchg
cmp
inc
(bad)
mov
out
(bad)
mov
pop
shr
fwait
push
fisttp
mov
retf
gs
mov
iret
icebp
pop
mov
lods
cmp
xor
ret
out
scas
mov
pop
mov
sti
aas
gs
cmp
jecxz
inc
xchg
mov
dec
and
sbb
jp
adc
out
add
(bad)
(bad)
dec
push
repnz
(bad)
in
or
jp
into
and
dec
(bad)
out
jbe
jl
sti
aam
sub
dec
mov
movs
jp
jb
inc
and
xchg
lods
in
pusha
rcl
pop
mov
push
push
adc
rcr
add
lds
repnz
mov
fild
(bad)
push
add
inc
inc
jno
xor
ficomp
jnp
nop
mov
shr
and
adc
or
je
fiadd
jbe
aam
rcl
xor
lahf
and
mov
mov
lock
fst
mov
icebp
sbb
pop
stos
pop
mov
fs
xchg
test
cmps
(bad)
push
mov
adc
inc
lahf
mov
xchg
mov
into
repnz
test
adc
inc
stos
pop
sbb
and
or
cmp
xlat
ins
enter
cmp
(bad)
lock
hlt
cmp
sbb
lds
mov
pop
shl
push
sub
(bad)
cmps
jl
mov
cli
push
loop
cwde
fdivr
imul
jns
cmp
push
outs
in
sub
adc
sbb
loop
jmp
ss
mov
sbb
pop
popf
cmc
ret
(bad)
frstor
mov
(bad)
xchg
and
dec
or
pusha
loopne
push
and
or
daa
and
repnz
cs
inc
inc
jnp
pop
(bad)
mov
xchg
push
jne
inc
jne
scas
mov
dec
pop
sub
ficom
(bad)
push
mov
rcl
push
cmps
cmp
inc
push
push
loope
call
test
clc
inc
mov
mov
int
cmp
rcl
fistp
jno
cmp
ins
inc
push
push
sub
imul
or
mov
sbb
push
fwait
dec
xchg
adc
cwde
fiadd
adc
and
xor
gs
pop
mov
mov
mov
mov
popa
xchg
pop
int3
xlat
test
mov
lods
daa
jg
bound
aad
mov
js
sub
outs
push
xlat
jne
bound
scas
sub
mov
add
cmp
inc
js
out
bound
ret
jecxz
leave
cmc
wbinvd
into
sub
xor
(bad)
cmps
enter
ret
int3
inc
pop
cwde
lahf
jge
out
pop
fcomip
and
daa
(bad)
dec
and
jecxz
movs
sbb
aaa
adc
daa
les
or
into
rol
cli
add
test
cld
or
scas
lea
sar
lock
fcos
movs
jge
or
push
and
fidivr
leave
mov
in
ds
adc
inc
add
mov
out
pop
pop
frstor
push
outs
sbb
xchg
sbb
ror
sub
xchg
sbb
xor
pop
fdivr
xchg
mov
shl
sbb
push
shl
mov
cs
mov
daa
std
jo
push
clc
push
inc
(bad)
push
nop
and
pusha
or
shl
pop
push
out
fsub
lock
xor
inc
sub
inc
stc
cdq
test
stos
imul
out
fsubp
call
cli
loop
or
mov
movs
adc
dec
jno
leave
xor
xor
sub
das
adc
ja
xchg
xchg
lahf
mov
push
js
jne
les
sub
jmp
ret
cmp
push
pop
push
mov
add
out
mov
pop
fmul
jmp
jo
cmp
adc
dec
xchg
mov
sahf
shl
test
mov
mov
mov
fadd
push
mov
addr16
mov
ins
sbb
retf
xor
inc
jbe
jmp
sbb
rcl
push
xor
jge
fist
jne
jo
movs
mov
dec
push
push
sbb
xchg
add
sub
pslld
mov
in
int3
push
and
repnz
cmps
(bad)
sub
out
inc
xchg
mov
out
push
leave
cmp
daa
stos
mov
std
call
push
sbb
rcr
je
adc
mov
sbb
out
repz
cdq
sub
(bad)
out
and
clc
inc
cli
pop
mov
fnstsw
mov
lods
and
push
pop
cmps
movs
shr
into
call
dec
shl
xor
dec
sub
push
xor
adc
lds
sub
dec
je
shl
xchg
and
and
pop
jns
mov
sbb
mov
dec
dec
pusha
ret
mov
sahf
test
push
sub
movs
data16
rcr
dec
mov
inc
mov
jo
inc
in
iret
aad
sbb
rcr
daa
xchg
data16
jg
mov
sub
out
inc
push
mov
sub
dec
(bad)
pop
aas
pusha
dec
sub
jl
sub
add
inc
lods
scas
pop
mov
js
mov
fdiv
cmp
pop
adc
pop
sub
scas
cmp
int
imul
inc
(bad)
out
in
mov
in
retf
add
mov
dec
test
and
shl
ja
add
pop
push
out
scas
(bad)
out
scas
push
out
les
repnz
mov
dec
scas
jo
add
loop
push
xor
jnp
fisttp
push
and
push
cmp
sbb
sbb
add
inc
inc
fisub
retf
jae
stos
lods
and
jecxz
and
mov
pop
ror
cmp
mov
sahf
pop
fidiv
push
mov
cmps
sbb
mov
xor
push
test
xor
test
std
fsubr
or
fstp
daa
xor
cmc
pop
xchg
pusha
adc
or
cmp
and
sub
je
(bad)
cmc
sbb
xor
xchg
sbb
fldenv
pop
lahf
pop
lods
add
aas
bound
pop
aas
imul
xchg
dec
stc
push
xchg
add
mov
xor
mov
push
icebp
loop
pusha
repnz
test
iret
addr16
mul
xor
or
popa
and
mov
jg
dec
xchg
dec
ins
adc
das
mov
int
and
jnp
mov
adc
frstor
cmps
in
fdivr
mov
test
xor
inc
das
rol
pop
jo
cwde
aaa
jle
out
pop
adc
add
sbb
and
sbb
sti
test
retf
mov
les
loopne
mov
mov
push
jg
add
leave
inc
jmp
jge
jmp
push
sbb
mov
pop
in
xchg
scas
mov
(bad)
or
iret
stos
xchg
sbb
or
jns
js
mov
loope
psrlw
sti
popf
xchg
mov
lahf
test
add
iret
loope
mov
pop
jne
(bad)
jecxz
jg
movs
fadd
or
rol
pusha
movs
fldl2t
stos
sbb
push
repnz
fisttp
jp
push
fidivr
mov
aas
pop
push
adc
data16
sub
repnz
dec
mov
shr
add
cmp
jp
push
shl
les
pop
jae
lock
mov
aam
aad
popa
push
sahf
add
retf
jnp
mov
lds
enter
xor
enter
cmps
mov
push
or
push
dec
add
leave
and
and
and
(bad)
mov
out
push
pop
popa
inc
adc
dec
mov
or
aas
pop
jnp
mov
iret
inc
jg
xor
or
push
lock
icebp
les
aas
out
cmp
scas
and
pop
jns
test
and
hlt
inc
rol
xor
mulps
bnd
push
in
outs
push
dec
cli
cmp
sub
adc
in
pop
mov
fidivr
pop
mov
sub
mov
cmp
frstor
mov
xchg
push
xor
xchg
xor
xchg
jecxz
fdivr
rcr
push
mov
adc
les
outs
push
xchg
xchg
ss
sub
ds
mov
adc
rcr
or
mov
adc
xor
push
jb
xchg
aam
pop
and
call
movs
mov
popa
(bad)
into
jne
xlat
inc
pop
fcom
sub
xchg
inc
mov
jp
fmul
or
fstp
sbb
push
in
int
in
push
pusha
lods
xchg
punpckhbw
popf
fisttp
lds
(bad)
push
jnp
dec
cmp
jo
hlt
xchg
pop
mov
xor
xchg
adc
sbb
cmp
push
cmp
mov
sahf
outs
retf
jb
ret
mov
xchg
icebp
mov
adc
dec
cmp
call
mov
xor
pop
mov
mov
jae
shl
and
mov
adc
jl
xchg
xchg
jne
cli
sub
fistp
sub
ins
pop
adc
jb
sbb
int3
xor
push
mov
aad
jp
xchg
rcr
in
ins
movs
lods
jg
ror
or
not
and
cmp
xor
shl
daa
lods
or
cmp
and
and
jne
sbb
popa
rcr
popf
imul
cmp
(bad)
in
repnz
xor
sbb
sub
sub
mov
or
inc
ins
cwde
(bad)
jnp
inc
jns
enter
jge
dec
sti
xchg
jl
jl
or
ins
add
or
cmp
aad
cmp
push
adc
fcmove
mov
xchg
push
dec
inc
mov
mov
in
call
cmc
add
xchg
sbb
push
xor
out
jbe
ins
dec
mov
push
xor
or
adc
jno
pop
push
push
push
pop
imul
inc
or
cmp
mov
mov
sbb
data16
inc
dec
mov
in
push
fnstcw
mov
mov
dec
out
nop
lods
frstor
ret
jae
lods
retf
sahf
out
fcmovnu
bound
and
sbb
adc
cmp
cmp
adc
add
fistp
cs
aam
push
dec
inc
out
jb
repz
aad
mov
sub
jle
and
push
push
xor
dec
leave
add
push
sub
mov
jnp
pusha
ja
add
shl
popa
shr
std
add
or
dec
sbb
mov
pop
and
sbb
pop
nop
fstp
xor
lea
jns
push
les
xchg
xor
es
aas
push
cmps
scas
inc
loope
cmp
jo
jecxz
lods
mov
js
xor
retf
add
pop
ds
aad
(bad)
and
xchg
xchg
shl
into
fsubr
aaa
in
mov
mov
jge
ins
mov
add
stos
fcom
imul
inc
sbb
ret
inc
cmp
outs
and
xor
xchg
sahf
repnz
xlat
std
daa
push
sti
jb
sti
imul
cmps
mov
push
in
fwait
dec
bound
imul
sti
sub
repnz
jae
mov
sahf
inc
and
ins
inc
and
mov
jb
ret
push
rol
mov
aam
jp
imul
dec
push
jae
pop
mov
ins
mov
(bad)
or
inc
dec
arpl
pop
and
xchg
imul
mov
icebp
cmp
xor
ins
jnp
add
ret
pop
jle
out
das
fdivrp
lea
mov
cli
cwde
stos
xor
pop
cdq
ins
push
ins
test
cld
mov
xor
loop
ret
das
xor
xchg
jno
mov
pop
retf
or
sbb
mov
in
aam
dec
mov
or
into
mov
dec
sbb
mov
xchg
pop
mov
xchg
xchg
jnp
pop
ins
dec
inc
outs
ins
fwait
inc
(bad)
scas
mov
jbe
out
test
inc
lods
frstor
call
and
fistp
(bad)
lock
repz
es
test
sbb
jb
jl
mov
neg
cmc
cmp
xor
hlt
scas
js
jnp
int3
push
sbb
add
mov
int
in
out
mov
dec
test
dec
sbb
popf
inc
loopne
pusha
mov
(bad)
adc
inc
push
outs
lods
mov
add
mov
xchg
inc
ja
dec
out
add
dec
call
jp
inc
lea
sbb
mov
test
push
mov
iret
unpcklps
adc
push
adc
aas
test
xchg
or
push
jg
dec
pop
or
shr
inc
jb
stc
bound
out
or
push
popa
daa
out
or
cmc
nop
xchg
pusha
leave
xchg
ror
sahf
push
cmp
stc
call
neg
imul
sbb
xchg
stc
shl
cdq
xor
sbb
inc
(bad)
mov
mov
add
test
rol
cli
es
out
scas
ret
je
test
movs
push
push
adc
add
pop
sub
(bad)
dec
add
xchg
xor
sbb
mov
and
mov
xlat
or
pop
call
pop
idiv
ret
outs
xchg
cli
stos
cmc
jp
xchg
or
pop
sar
cli
mov
out
adc
bound
ins
ror
mov
loope
jle
jecxz
inc
mov
sbb
mov
test
or
lods
sub
jle
dec
adc
xor
sbb
out
loope
and
mov
(bad)
jge
sbb
mov
enter
mov
jge
xchg
mov
cmps
(bad)
cmp
push
inc
addr16
int3
pop
jbe
mov
adc
fisubr
aad
cmp
sbb
mov
loopne
sub
loope
shl
repz
push
push
(bad)
and
jns
dec
adc
cmp
and
jmp
jae
idiv
sti
pop
je
aad
in
es
mov
loop
push
fimul
cmp
xchg
daa
jmp
test
pop
lods
in
bound
adc
stos
in
dec
jne
mov
fsub
mov
fldcw
mov
mov
(bad)
mov
dec
(bad)
pop
mov
pusha
repz
aam
or
jmp
push
fimul
aam
inc
punpckhbw
mov
inc
cdq
push
push
fsubr
mov
(bad)
lods
or
xchg
cmp
push
jo
out
sub
push
jne
xor
cmp
xor
mov
shl
mov
in
stc
ja
ds
jmp
sbb
cmp
int3
jne
jbe
movs
std
xor
jmp
std
jg
inc
out
xor
push
scas
inc
pop
lds
jnp
add
mov
in
or
ror
shr
cmps
lea
or
lea
push
and
repz
xchg
and
inc
leave
pop
mov
out
pop
int
inc
dec
addr16
and
ret
inc
xlat
imul
xchg
scas
pop
xor
arpl
clc
pop
nop
mov
mov
push
test
out
test
out
cmp
or
cmc
add
repz
loop
xchg
shr
mov
outs
mov
or
cdq
add
xor
mov
es
or
jbe
es
ins
bound
dec
mov
sub
jno
or
aaa
int
out
mov
call
pop
xchg
stc
imul
mov
rol
mov
mov
pop
pop
jmp
js
gs
pop
cmc
fnstenv
mov
add
jnp
inc
repz
xchg
stc
call
jg
call
xchg
in
mov
call
sub
xor
pop
add
sub
pop
(bad)
mov
mov
and
mov
ror
loopne
pop
mov
mov
icebp
mov
scas
in
mov
arpl
sbb
stc
cmp
xor
xchg
lock
push
ss
loop
pop
sbb
xor
jb
jno
test
ins
adc
jae
aaa
pushf
pop
dec
outs
push
aaa
sbb
fs
sbb
dec
pop
stc
adc
iret
out
aaa
gs
mov
push
hlt
adc
mov
scas
cdq
ret
add
push
or
add
pop
test
(bad)
out
(bad)
ret
sbb
sbb
push
clc
push
inc
pusha
mov
mov
pop
gs
and
mov
or
add
stc
paddb
cmp
rol
fcom
adc
clc
mov
mov
inc
mov
sub
sbb
mov
cmp
add
sahf
std
(bad)
and
and
shl
enter
and
test
scas
daa
out
inc
arpl
fcom
pop
adc
mov
xchg
mov
add
fisub
mov
add
scas
sub
fsub
dec
or
pop
loope
sbb
lea
and
push
call
mov
in
xchg
ds
imul
xchg
fst
xor
push
xchg
popf
pop
ins
and
add
(bad)
mov
cdq
movs
shl
inc
loopne
leave
test
test
add
dec
leave
mov
cdq
push
dec
ret
pusha
aam
imul
push
out
sar
push
call
(bad)
mov
inc
fadd
icebp
jno
push
arpl
jo
xchg
mov
popf
dec
jnp
sahf
mov
sub
jnp
cmp
pop
push
idiv
bound
jle
and
jmp
jmp
jl
fwait
cmp
retf
push
lahf
mov
xchg
rcr
int
cmc
inc
sbb
xor
xor
adc
sub
rcl
xor
aaa
pop
inc
stos
loopne
loope
imul
leave
movs
sbb
das
push
dec
push
mov
std
aam
jnp
in
push
daa
lds
add
stos
js
in
push
cdq
ret
inc
mov
je
xchg
and
inc
add
ins
push
sbb
add
xchg
push
cmc
call
xlat
(bad)
cmp
cld
aam
xlat
not
sub
stc
sbb
loop
loope
in
popf
stos
rcl
dec
pop
push
or
int3
xor
jne
and
sub
(bad)
xor
lods
xchg
hlt
sbb
cmps
jmp
sub
inc
retf
inc
pop
xchg
xor
test
cmp
aaa
jmp
aad
pushf
out
mov
retf
xor
retf
jl
cwde
inc
push
adc
(bad)
and
jg
pop
mov
push
or
jge
xchg
fwait
and
mov
ss
and
mov
repnz
mov
lock
jo
stc
or
stc
les
mov
sub
icebp
imul
gs
fistp
std
lock
fisubr
ja
call
cmp
sub
cmc
mov
(bad)
mov
cwde
sub
lock
push
call
lock
xor
(bad)
sbb
jmp
push
sbb
out
aam
rcl
loopne
jb
rcr
mov
or
aaa
mov
aam
sub
sbb
cmps
dec
or
mov
retf
in
xchg
movs
(bad)
sub
aaa
out
in
inc
shl
(bad)
pop
in
mov
cli
call
push
aad
cmps
jbe
leave
rcr
xor
pop
sub
push
dec
push
scas
jae
es
sub
add
rcl
(bad)
lods
ins
push
ret
leave
(bad)
repz
jge
and
jnp
rcr
pusha
dec
dec
adc
xchg
push
outs
pop
stc
fiadd
push
mov
mov
sub
test
bound
fnstsw
jl
sub
mov
pusha
pop
not
repz
repnz
mov
shr
sub
stos
or
push
jg
adc
out
loop
adc
aad
pop
mov
sub
mov
movs
inc
or
imul
dec
sbb
ins
xor
daa
or
shl
add
add
push
add
aas
dec
imul
leave
pop
xchg
jnp
pop
xchg
xchg
adc
jbe
into
xor
loope
sub
call
stos
jecxz
mov
jl
neg
shr
add
push
in
call
sbb
push
jmp
jge
xchg
mov
sbb
push
(bad)
sbb
ins
sti
stos
cld
sbb
cmc
out
lods
test
rcr
dec
xor
cmc
cmps
cmp
iret
gs
xor
sub
mov
outs
inc
call
inc
push
push
add
xor
int3
pop
pshufw
(bad)
push
hlt
jp
in
adc
and
cmps
jb
ret
fld
jg
mov
cwde
mul
pop
imul
jno
mov
and
jns
cwde
jo
inc
xor
jo
jl
adc
hlt
ins
sti
pop
xlat
jnp
add
xchg
sub
dec
mov
jmp
jno
sub
mov
cwde
repz
ds
cs
popf
mov
cwde
add
pop
add
retf
inc
(bad)
dec
mov
outs
pop
mov
call
dec
dec
test
mov
fs
outs
mov
(bad)
pop
cmp
mov
out
mov
mul
xchg
inc
pop
mov
mov
push
jns
pop
lods
xchg
(bad)
and
jl
inc
pop
shl
(bad)
jge
jl
ja
dec
int
xor
push
dec
js
jmp
cmp
je
mov
cmps
lahf
cmps
xchg
(bad)
ror
out
cmc
mov
outs
retf
pop
dec
mov
push
ret
fisttp
push
scas
xchg
vmovshdup
inc
cmp
mov
daa
stos
outs
lds
add
mov
sbb
add
pop
dec
outs
data16
imul
fwait
mov
xlat
or
cmp
mov
fsubr
mov
enter
adc
sub
jecxz
scas
sbb
cdq
lea
or
mov
jae
jg
stos
push
jmp
ds
jg
pusha
adc
push
retf
push
sbb
test
cmps
pop
inc
mov
xor
(bad)
gs
mov
push
ror
jno
repnz
(bad)
loopne
and
retf
dec
jge
in
mov
xor
cld
pop
push
test
nop
enter
inc
fs
adc
or
adc
pop
push
ret
jp
leave
ins
pop
inc
xor
or
pop
in
mov
xchg
loop
jnp
mov
xchg
push
retf
frstor
inc
pop
jle
jnp
xlat
dec
pop
fdiv
fwait
jbe
mov
out
loopne
xor
call
or
mov
jecxz
dec
xchg
pusha
sub
into
mov
push
rcl
xchg
push
repnz
mov
pop
fcomp
test
sahf
sub
mov
push
(bad)
mov
lds
add
or
addr16
not
push
push
gs
iret
cdq
mov
das
mov
loope
add
adc
push
mov
fdivr
dec
repz
xchg
jmp
mov
rcr
mov
or
pop
mov
mov
mov
clc
mov
fwait
inc
jg
jae
iret
cmps
push
push
cld
jo
xchg
xlat
inc
xchg
not
shl
lea
sti
xchg
cmp
cmp
adc
test
(bad)
lods
inc
push
sub
dec
neg
cmc
adc
xchg
pop
outs
out
sar
sub
mov
cli
push
xor
push
fnstsw
outs
mov
hlt
xchg
in
out
mov
push
cmp
stos
mov
push
inc
cmp
xor
adc
cwde
scas
push
stos
sub
cmp
inc
inc
lahf
add
dec
test
enter
outs
sub
retf
cmps
mov
stos
test
je
mov
cli
and
or
dec
aaa
mov
cmp
ret
sahf
xor
stos
pushf
jne
inc
inc
int
ds
mov
fwait
inc
inc
sar
retf
sub
jae
outs
jmp
cmp
xor
call
je
pop
dec
aaa
dec
sub
mov
je
data16
js
fadd
loope
mov
cs
scas
lods
stos
into
dec
in
and
jae
mov
sub
into
add
aad
(bad)
lods
sti
sbb
cdq
stc
xchg
jne
mov
adc
into
test
scas
pop
mov
loopne
push
stos
and
cwde
repnz
sbb
mov
sbb
sub
aam
dec
dec
jmp
jns
mov
cmp
sub
inc
int3
lahf
out
inc
pop
ret
std
mov
mov
rol
fldl2t
cmc
popf
or
xor
jo
adc
push
cmp
jbe
xchg
aas
stos
ss
ds
push
mov
adc
add
and
ret
out
jg
mov
retf
aam
(bad)
mov
(bad)
jmp
shr
les
sbb
in
cmc
daa
int3
push
sub
sbb
imul
test
js
cmp
xor
(bad)
loopne
and
lahf
std
xchg
mov
push
rcr
test
mov
ins
mov
cli
push
add
mov
xlat
push
cmp
lds
fnstcw
and
add
call
out
pop
inc
pop
mov
push
arpl
pushf
pop
int3
fisub
xchg
push
mov
hlt
stc
daa
(bad)
cmp
ds
pop
outs
nop
std
cmps
adc
adc
imul
movs
int
and
mov
outs
push
xor
out
(bad)
lock
or
mov
adc
icebp
hlt
cmp
push
cwde
sbb
test
sbb
lds
push
pop
dec
jmp
ficomp
ficomp
icebp
inc
xchg
ins
pop
dec
jle
xchg
xchg
mov
mov
pop
fstp
inc
or
in
xor
dec
loopne
xor
xchg
psrad
(bad)
adc
es
push
(bad)
in
push
mov
pushf
nop
inc
shr
out
xchg
adc
cmp
test
int3
dec
mov
jae
(bad)
add
fild
push
in
pop
dec
push
pop
pop
and
dec
retf
and
scas
inc
mov
push
xchg
arpl
adc
mov
popf
and
sub
cmp
neg
test
loope
cmc
cs
js
sub
and
not
inc
xor
fs
sar
iret
outs
sbb
add
cmp
int3
jo
aaa
jl
mov
in
dec
lods
pop
dec
cdq
int3
(bad)
sti
nop
push
popf
shr
pop
add
sbb
fld
xchg
cmp
jno
fst
ja
daa
mov
cs
jle
inc
jbe
call
push
stos
pop
dec
pushf
arpl
mov
pop
dec
dec
ret
lds
cwde
sbb
pop
fdivr
ror
push
stos
aaa
nop
rcr
retf
aaa
mov
push
xor
adc
movs
fidiv
outs
and
ins
and
cmps
movs
rol
or
cmp
mov
mov
lds
call
scas
add
or
mov
(bad)
sbb
addr16
add
sbb
push
icebp
lea
inc
or
jge
sbb
jmp
mov
dec
inc
cmps
inc
push
sar
add
dec
inc
adc
std
shr
movs
std
sub
and
scas
dec
cli
cmp
int3
mov
xchg
push
cmp
sub
mov
retf
xchg
xchg
popa
ss
shr
sub
test
and
mov
push
bound
pop
push
xchg
push
mov
adc
xchg
adc
test
add
sub
jmp
retf
add
add
rcl
test
xlat
add
jnp
call
jge
add
xor
stc
jg
test
xchg
pusha
pop
(bad)
out
jae
mov
lods
outs
jnp
xchg
fs
fstp
loope
xor
nop
fs
cmps
(bad)
xlat
enter
xchg
mov
movs
add
mov
std
bound
cmp
test
(bad)
sub
cmps
and
mov
test
loop
mov
or
pop
push
(bad)
mov
or
jecxz
xlat
mov
cmp
adc
mov
rol
outs
(bad)
cmps
jb
imul
mov
pop
aaa
arpl
in
retf
stc
scas
or
ret
xor
mov
call
sar
push
test
mov
aas
fisub
mov
inc
pushf
sbb
je
icebp
std
dec
es
inc
dec
ret
stos
cmp
pop
jecxz
pop
call
xchg
sti
repnz
dec
icebp
pop
xor
xchg
xor
cmp
fistp
loopne
fwait
test
lahf
aam
test
ds
xchg
in
add
fstp
xor
push
pop
outs
les
clc
xor
pushf
inc
or
jecxz
outs
inc
nop
xor
sbb
ds
scas
aaa
xchg
xchg
outs
push
mov
test
mov
mov
mov
in
sub
cmp
rol
mov
or
neg
pop
retf
xor
(bad)
(bad)
inc
(bad)
mov
inc
cmovge
dec
loopne
mov
in
inc
cmc
(bad)
and
xchg
push
push
mov
xchg
mov
mov
add
scas
cmp
test
mov
jne
xchg
movs
call
sbb
call
or
aaa
into
in
mov
fisttp
push
push
outs
xchg
ret
je
xor
fcom
jmp
and
add
or
cs
icebp
outs
das
aaa
jno
and
das
fs
and
ficomp
jb
mov
push
xchg
push
pop
aam
data16
add
mov
sub
mov
cmps
shr
add
lahf
xchg
and
in
mov
mov
jmp
rcr
mov
mov
cmps
dec
push
and
add
imul
retf
imul
lds
shl
xchg
add
repnz
aas
push
mov
or
and
push
fwait
xor
jno
push
mov
frstor
xchg
xchg
test
jb
test
js
mov
mov
push
jecxz
ficom
inc
neg
hlt
hlt
sub
xchg
lahf
and
inc
bswap
int
jge
jle
ret
or
jbe
mov
push
mov
mov
repz
mov
sub
jns
jge
aaa
pushf
dec
test
sub
xchg
imul
jns
xor
dec
jg
push
mov
fsub
push
xor
mov
cmps
cmp
fimul
cmp
ins
jae
mov
je
pop
xchg
lea
fnsave
sbb
cmc
call
add
mov
sbb
dec
aaa
lock
sub
jg
sbb
or
jo
mov
int3
leave
mov
dec
sbb
sti
xor
jecxz
popa
mov
or
mov
add
mov
mov
or
imul
scas
sbb
mov
mov
pusha
movs
cs
lods
lock
clc
jb
mov
inc
fwait
retf
imul
dec
stos
fisttp
cwde
dec
popf
enter
mov
daa
add
mov
les
out
jmp
mov
repnz
das
dec
movs
dec
cmp
add
inc
stos
xor
sar
lods
je
add
push
mov
aas
ins
int
pop
xor
mov
stc
mov
xchg
push
fiadd
push
lahf
out
pop
lock
inc
lahf
aad
loopne
jmp
pop
adc
out
lods
fs
aam
jg
inc
add
sub
mov
and
ja
aas
sbb
mov
xor
ret
cmps
pop
push
out
ret
popa
sbb
cwde
add
mov
inc
cld
pmulhw
push
cld
adc
mov
fiadd
(bad)
xor
push
xchg
mov
in
repz
sub
jg
repz
sub
stc
sahf
pop
dec
xchg
push
push
inc
lahf
xchg
cmp
ja
icebp
mov
cmp
or
mov
mov
mov
out
je
sub
sahf
cmp
dec
xchg
sbb
xor
test
adc
mov
add
pop
push
jg
ss
sbb
lahf
push
fiadd
fist
pop
xchg
add
dec
jmp
outs
cli
cmp
loop
stos
cs
xchg
cld
enter
jg
daa
mov
repnz
stos
pop
cmc
(bad)
cmp
nop
aaa
(bad)
pop
cdq
ror
and
nop
sbb
xor
inc
xchg
push
dec
or
fcom
cmp
add
xor
jl
loopne
outs
cmp
loope
cdq
push
repnz
movs
rcl
pop
fldcw
push
add
aad
(bad)
retf
adc
cmps
scas
pop
add
test
(bad)
push
inc
inc
test
cld
mov
icebp
cli
(bad)
mov
inc
push
fcom
rcl
dec
mov
inc
push
out
sbb
in
rcr
xchg
in
pop
aam
mov
push
inc
inc
sar
fdiv
(bad)
sbb
loop
cmps
jmp
ins
out
fsubr
sub
(bad)
loopne
cmps
retf
or
lods
in
test
xchg
data16
hlt
(bad)
lock
outs
xor
mov
movs
mov
fwait
inc
jb
loopne
imul
push
repz
ins
leave
mov
jecxz
jp
dec
(bad)
shr
retf
inc
mov
mov
dec
cmp
retf
mov
out
iret
jno
xor
add
jecxz
ja
push
scas
cmp
sbb
cmp
inc
inc
mov
dec
das
mov
fst
or
xchg
enter
mov
cmp
jb
sub
add
dec
pop
add
mov
arpl
sub
std
adc
sub
inc
fs
xchg
sub
xchg
push
fstp
sar
aad
sbb
or
aas
mov
mov
pusha
dec
and
jmp
test
out
inc
mov
rcr
pop
adc
push
cli
jnp
scas
imul
das
loope
cmp
jge
(bad)
(bad)
adc
shl
cwde
push
adc
adc
iret
rol
mov
jl
call
pop
cmp
fcmovu
cwde
out
adc
sar
mov
sahf
pop
push
and
adc
push
add
or
mov
and
addr16
(bad)
sbb
dec
je
xor
ret
jmp
or
pop
push
stc
mov
scas
int3
mov
add
jge
mov
in
ins
stc
aas
sub
movs
(bad)
cs
mov
jne
xor
cs
and
mov
add
pop
nop
ja
and
cli
and
push
dec
nop
sbb
push
imul
ret
xchg
je
inc
repnz
clc
fist
adc
add
and
jne
fld
test
shl
cs
out
xchg
mov
sub
push
fcomi
dec
xchg
inc
gs
and
test
sti
(bad)
cmp
jecxz
jecxz
and
push
adc
dec
retf
mov
loope
(bad)
or
(bad)
xor
or
repnz
(bad)
mov
inc
jmp
ficom
push
pop
jl
xchg
xor
cmp
ins
(bad)
scas
pop
xchg
pop
cdq
mov
push
and
hlt
cmp
pop
jo
sub
movs
fcom
shr
aaa
and
call
packssdw
fcom
sbb
ja
inc
(bad)
hlt
and
pusha
mov
ds
fidivr
outs
and
aam
cwde
out
aad
or
sub
push
mov
mov
and
mov
fdivr
mov
loopne
sbb
in
sbb
call
out
imul
ror
push
pushf
inc
nop
mov
inc
and
int
mov
shr
ds
inc
add
mov
cdq
fbld
xor
in
cmp
jmp
jmp
mov
mov
add
es
mov
xor
cmp
push
xor
nop
dec
mov
fisttp
out
dec
ror
jb
(bad)
or
xor
aad
dec
push
xchg
xor
mov
inc
add
loopne
sar
not
sbb
movs
fdivr
mov
aad
sbb
push
mov
mov
pop
push
dec
aam
mov
je
sub
cli
sbb
jb
test
sbb
js
bnd
add
cmps
aam
imul
sbb
arpl
jnp
jle
adc
xchg
add
and
adc
mov
inc
xor
imul
dec
fbld
mov
stos
push
xlat
push
inc
jo
push
imul
pusha
sub
push
xchg
lds
(bad)
xchg
fsubr
and
fiadd
das
add
dec
out
in
leave
mov
adc
out
ror
aaa
cmp
mov
xor
fnstenv
mov
dec
pop
inc
jb
add
fisttp
pop
pop
arpl
mov
lahf
adc
sbb
sub
or
lds
push
xor
test
pop
lds
aam
or
cmp
xchg
repz
test
div
xor
xchg
sub
in
scas
inc
(bad)
mov
xchg
dec
push
sbb
mov
rcl
gs
pop
pop
push
mov
sbb
out
shr
pop
xor
push
xchg
sti
loope
les
push
pusha
pop
clc
aad
fcomp
mov
xchg
inc
dec
sbb
pushf
sbb
cmp
xor
push
pop
adc
cmp
int
mov
jmp
aad
dec
sub
cmp
push
ins
xlat
aas
cmp
mov
jl
adc
cmp
add
jmp
ss
jae
push
sbb
sahf
dec
test
add
mov
ins
test
inc
stc
cdq
push
aam
push
fcomp
pop
adc
adc
pop
lea
or
div
sub
movs
sub
or
add
icebp
fs
outs
dec
arpl
push
push
push
rcl
call
push
pop
jg
inc
sbb
cmps
mov
out
mov
mov
cli
in
cli
mov
push
add
das
add
into
sbb
ja
mov
sbb
(bad)
cld
shl
clc
dec
inc
xor
outs
int3
lods
inc
cmp
mov
cmc
pop
add
mov
xchg
inc
fbld
mov
jl
and
rcr
int3
xchg
loope
fsubrp
in
or
pusha
mov
lea
or
mov
cmps
pop
mov
scas
das
and
rol
push
popa
adc
outs
jae
push
cwde
and
mov
sbb
cld
cli
ret
stos
mov
lods
stos
cwde
call
fld
jno
jno
jnp
inc
and
ss
xchg
cmp
sahf
adc
push
js
nop
add
cmps
jbe
dec
outs
jno
aad
push
in
fnstenv
cmc
scas
pop
add
jno
mul
sub
dec
int3
repnz
mov
mov
out
mov
mov
push
inc
jne
xor
mov
stos
cmp
dec
jbe
or
test
mov
int3
out
mov
aaa
popf
dec
imul
xor
sub
dec
pop
push
out
add
mov
loopne
xchg
hlt
outs
xor
mov
lods
leave
repnz
cs
mov
addr16
dec
call
add
(bad)
repz
mov
mov
and
sti
cmps
mov
xchg
movs
pop
cmp
mov
adc
xor
xchg
inc
or
or
or
(bad)
aas
mov
add
cmps
add
sub
movs
dec
lea
xchg
add
xchg
adc
adc
pop
cmp
es
ss
popf
and
push
cmp
jbe
(bad)
adc
mov
pop
rol
dec
leave
std
jno
xchg
dec
jecxz
in
iret
and
xchg
mov
jl
cmp
enter
push
cmp
popf
stos
dec
dec
imul
fld
push
mov
adc
xchg
test
int3
mov
xchg
test
jle
push
xlat
add
jae
mov
mov
pop
pushf
outs
cmp
mov
add
enter
jns
xchg
cli
pop
push
leave
and
mov
push
stos
jmp
stos
lock
push
test
rcr
jae
ins
mov
push
imul
add
in
cmp
out
or
imul
pop
shl
mov
sbb
mov
mov
inc
cdq
or
mov
inc
push
push
push
xchg
adc
pop
stc
js
cmp
fst
push
add
push
push
jo
out
pop
jle
popf
jae
xor
add
sub
ror
std
dec
jg
mov
popa
repz
jo
mov
mov
sub
mov
sub
loop
xchg
aad
cmp
daa
xchg
loope
inc
pop
scas
fcomp
imul
cmp
daa
sbb
sub
and
(bad)
lea
xchg
ss
(bad)
sbb
shl
ds
aas
adc
fwait
call
pop
das
mov
loope
aaa
aaa
retf
loope
rcr
je
lds
cld
push
jle
ret
icebp
xor
frstor
das
xor
das
jnp
arpl
aam
mov
and
xchg
popa
gs
cmps
scas
xchg
rol
std
std
jmp
ja
jb
sbb
push
dec
addr16
lods
jmp
stos
stc
sub
and
or
cmc
cmp
jle
mov
popa
fmul
xlat
xchg
add
xchg
xadd
(bad)
mov
inc
xchg
(bad)
call
retf
imul
cwde
jnp
movs
xchg
es
sub
inc
xchg
sbb
call
sub
ja
xchg
lods
dec
jno
pop
jnp
mov
in
fdivp
mov
sbb
js
inc
jae
or
xchg
sbb
dec
mul
xchg
add
enter
test
mov
ror
out
mov
xchg
sbb
repz
int3
imul
shr
fdiv
push
dec
imul
loop
add
cmp
sbb
sub
or
shl
ret
push
sub
dec
out
arpl
dec
lock
or
pop
jae
loope
mov
dec
xor
add
imul
test
pop
loope
aas
add
shr
push
mov
js
ror
test
int3
movs
jae
dec
aam
push
mov
stc
and
dec
sbb
jmp
shl
or
push
jns
sbb
sub
sar
dec
imul
cwde
push
add
push
bound
addr16
cmps
(bad)
add
adc
push
les
mov
mov
je
retf
(bad)
mov
adc
cld
inc
mov
mov
(bad)
jbe
sar
clc
sti
push
dec
out
in
out
pushf
mov
movs
sbb
stos
push
sub
cmps
dec
in
out
daa
cwde
shl
xchg
jbe
inc
mov
fdiv
adc
mov
inc
movups
dec
stos
fisubr
sbb
test
xchg
iret
mov
outs
xor
dec
mov
shr
fstcw
mov
jecxz
mov
cwde
(bad)
aad
rol
aas
(bad)
pop
hlt
sub
outs
ss
sti
pop
pop
ja
add
mov
push
addr16
scas
rcl
and
xchg
movs
outs
add
jl
outs
pop
push
fsubr
add
jae
pop
mov
xchg
add
cmp
add
pop
(bad)
mov
xor
cmp
push
inc
sub
ja
inc
xor
xor
jmp
sti
xchg
fist
sbb
scas
inc
leave
in
dec
imul
jns
cli
pop
sbb
jg
das
xchg
xor
std
or
mov
enter
push
out
call
adc
sub
cmp
sbb
or
pusha
mov
mov
icebp
xchg
or
jge
dec
dec
jb
mov
sbb
fisttp
sub
dec
add
mov
cld
jns
and
sbb
jp
mov
scas
inc
js
jb
or
add
addr16
and
mov
mov
mov
in
mov
sbb
sub
sbb
sub
pop
inc
mov
retf
cli
iret
jg
and
test
popaw
in
dec
stos
cs
lods
outs
push
fistp
pusha
enter
sbb
dec
adc
dec
jle
inc
jmp
fst
adc
rol
fld
jno
or
ss
pop
mov
out
inc
mov
xchg
jmp
pop
cmp
addr16
ror
dec
jmp
or
lock
pop
inc
repnz
icebp
mov
push
cmp
fdivr
sub
sub
mov
sub
dec
outs
std
pop
sahf
inc
and
adc
mov
(bad)
loopne
add
xor
add
retf
jecxz
jp
mov
jbe
mov
mov
cmp
inc
(bad)
imul
lock
aam
fisttp
scas
xchg
xor
add
dec
inc
dec
scas
inc
xlat
fimul
dec
or
popa
(bad)
jno
stc
pop
cmp
or
push
(bad)
xor
out
or
sub
nop
xchg
and
stos
mov
cmp
fsubr
repnz
or
out
(bad)
out
outs
pop
test
and
cmc
test
sub
adc
xor
repnz
leave
push
adc
nop
xchg
and
mov
push
jns
std
or
sub
outs
sbb
mov
in
cmp
inc
jnp
ret
aam
movs
test
cli
mov
movs
mov
push
scas
dec
call
clc
pop
std
stos
mov
shl
pusha
(bad)
adc
cdq
test
pop
ficomp
aam
rol
sbb
call
into
mov
push
mov
lock
pushf
add
loope
stos
out
les
mov
xor
aad
cld
pop
jmp
push
or
scas
iret
xchg
or
mov
loop
das
shl
ins
jle
dec
pushf
dec
into
or
das
mov
sbb
aas
jns
push
add
sbb
sbb
jle
rol
in
sbb
test
outs
dec
push
jmp
lods
cmps
cmp
pushf
icebp
rol
mov
adc
lds
in
xlat
ss
retf
repz
xchg
sub
sbb
dec
cmp
xor
gs
div
call
pop
sbb
fidivr
fnsave
std
aam
mov
cmps
xor
mov
mov
xchg
add
retf
out
xchg
movs
xor
aam
add
(bad)
jmp
mov
pushf
sti
cdq
(bad)
aad
sub
push
pop
imul
fucomip
inc
inc
xor
sbb
pushf
(bad)
dec
dec
dec
mov
clc
and
punpckhbw
push
in
mov
lea
xor
jbe
adc
(bad)
inc
dec
arpl
cdq
sub
mov
repnz
xor
scas
mov
mov
in
sub
mov
scas
xchg
add
(bad)
imul
adc
test
pusha
mov
xchg
ret
arpl
xchg
inc
repz
xchg
or
adc
rol
in
(bad)
cmps
xchg
xchg
pop
jae
shl
movs
stos
lds
xchg
xchg
bound
sbb
je
or
ret
sbb
ss
pusha
je
dec
sahf
cmp
(bad)
call
sub
inc
fs
cmc
sub
sub
push
gs
das
inc
pop
xchg
shr
push
mov
sbb
pop
dec
movs
mov
dec
div
or
push
cs
or
push
(bad)
cmc
push
enter
js
push
outs
xchg
inc
xlat
pop
cmp
sbb
push
js
sahf
sbb
or
addr16
cmc
inc
pop
push
aad
xor
cwde
xor
popf
fild
mov
call
es
inc
push
pop
xchg
test
adc
in
adc
mov
inc
cld
loop
jae
scas
mov
lds
add
pushf
pop
inc
dec
inc
push
dec
mov
mov
pop
adc
jae
fadd
in
pop
jg
mov
adc
call
or
jne
cmp
jmp
in
mov
in
xor
(bad)
mov
scas
pop
dec
popf
push
(bad)
cs
pop
call
mov
ins
cmp
popf
ja
hlt
iret
push
icebp
adc
or
cmps
lock
mov
dec
shl
jmp
stos
out
add
pusha
sub
popa
inc
aad
jmp
or
xor
jmp
sub
mov
jns
mov
mov
popf
fld
mov
cwde
movs
mov
add
xchg
push
dec
and
movs
or
cmps
pop
cmp
in
lds
(bad)
pop
aaa
loopne
cmp
mov
in
sub
xchg
cmp
push
outs
mov
sbb
mov
pop
aas
dec
pop
retf
pop
jl
test
add
outs
ins
enter
call
sbb
inc
ror
call
mov
std
ret
jle
mov
into
mov
push
inc
add
mov
stos
xchg
xchg
lods
mov
jno
mov
popa
and
(bad)
jmp
stos
xchg
sar
mov
cmp
xor
xor
push
mov
dec
or
fwait
out
mov
lds
dec
arpl
pop
mov
aaa
jg
mov
(bad)
into
test
jns
cmp
data16
mov
xor
mov
sub
fcmovnb
push
popf
(bad)
bound
in
sbb
pop
in
mov
dec
lock
lea
retf
test
cmp
fdiv
jg
popf
movsx
cmps
popa
sbb
pop
fild
out
dec
fcmovu
add
inc
cmp
gs
jecxz
mov
fmul
cld
mov
xchg
or
out
push
cmp
loope
daa
or
ja
jp
gs
or
jmp
inc
imul
scas
or
les
jecxz
push
dec
cmp
pop
bound
in
lods
retf
jno
in
cmps
ror
lahf
lods
add
outs
stc
jecxz
cwde
cmps
(bad)
clc
imul
xchg
adc
(bad)
in
push
cmp
(bad)
xchg
ret
daa
int
jle
jae
cld
pushf
popf
push
loopne
rcl
and
inc
adc
lods
sbb
ds
cdq
xor
sbb
xchg
test
jmp
stos
add
fwait
cli
jb
inc
das
int
scas
stos
lods
pushf
or
(bad)
cdq
xor
in
jl
jg
xor
fidivr
ret
adc
addr16
jp
neg
(bad)
loop
jecxz
mov
gs
lock
loopne
fcomp
sbb
xor
dec
push
fsubr
push
cmp
aas
inc
or
test
in
jno
sbb
cwde
sbb
int3
push
or
push
adc
outs
mov
shl
jne
pushf
push
sub
dec
(bad)
cli
mov
adc
pcmpeqb
mov
outs
jbe
stos
inc
into
jno
add
inc
mov
jns
xchg
cld
out
adc
mov
and
cmp
push
dec
mov
leave
lods
and
mov
or
add
and
(bad)
push
cwde
movs
xchg
push
adc
in
mov
outs
xchg
add
add
sbb
inc
cmp
mov
sub
push
jno
and
cmp
adc
push
push
mov
ror
out
xchg
cmps
mov
rcl
jnp
or
repnz
jmp
sbb
push
jno
sub
add
fisttp
out
adc
mov
les
int
inc
out
add
inc
leave
and
aas
mov
add
pop
xor
pop
in
or
test
jmp
popf
aas
call
loope
mov
xchg
and
mov
shl
cmp
mov
add
cmp
or
push
ss
addr16
and
loopne
arpl
push
push
ins
movs
int
mov
(bad)
loopne
lock
rcr
daa
mov
xor
fstp
cmp
push
cmp
scas
rcl
rol
cmp
sub
push
hlt
jmp
stos
or
jbe
adc
repz
jnp
jmp
mov
push
mov
cmps
dec
and
mov
xor
xchg
and
(bad)
retf
daa
cli
ret
xor
mov
gs
mov
iret
add
call
adc
arpl
add
sub
xchg
or
xor
mov
add
xor
xchg
leave
inc
inc
pop
test
enter
(bad)
cs
stos
in
mov
(bad)
dec
jb
pop
adc
out
or
clc
ja
iret
stc
cmps
mov
popa
cmps
dec
mov
push
bound
sub
mov
jne
dec
add
out
dec
idiv
mov
aas
pop
std
pop
add
shl
push
push
xor
inc
mov
ffree
sti
ins
not
lods
dec
jp
cmp
nop
(bad)
(bad)
jmp
pop
loope
xchg
imul
icebp
inc
(bad)
std
mov
mov
scas
cs
pop
cmp
cmp
(bad)
and
push
jae
fabs
mov
or
jno
pushf
push
or
dec
cmp
adc
and
pop
adc
and
lahf
and
imul
push
les
call
les
fcmovbe
es
sub
lods
les
cmp
mov
cli
outs
add
pop
push
nop
jb
cmp
dec
mov
mov
jb
add
push
mov
mov
mov
mov
dec
add
sbb
cmp
rol
mov
jns
popa
fisubr
mov
and
mov
test
mov
popf
call
push
call
sbb
cmp
jne
(bad)
mov
dec
jecxz
adc
repnz
hlt
inc
aam
cmps
ja
and
std
xchg
adc
dec
mov
fisub
bound
inc
push
dec
pop
sbb
cmp
push
xor
push
push
nop
je
scas
pop
inc
aam
or
inc
jle
ret
xchg
cmp
jae
into
scas
fnstsw
pushw
fsub
sub
imul
lahf
jl
pop
fstp
cmp
sbb
dec
lahf
mov
lods
jo
and
fist
push
out
movs
dec
xchg
or
xchg
sub
(bad)
pop
mov
stos
push
mov
xchg
test
shr
jns
adc
add
pop
std
mov
sahf
inc
dec
mov
mov
adc
xchg
add
ret
add
pop
mov
stos
pop
inc
jae
pop
js
adc
cdq
enter
and
jge
add
fild
mov
sti
push
sub
xchg
scas
out
lods
mov
push
sbb
call
push
mov
cmps
js
push
mov
aaa
pop
xor
jbe
mov
(bad)
push
call
imul
mov
clc
cmps
test
adc
sub
xor
inc
int3
add
ds
push
or
and
repnz
pop
pop
adc
adc
and
outs
inc
jle
xor
jbe
xchg
cs
loope
mov
mov
and
jmp
lods
aas
lock
outs
mov
scas
js
in
mov
sahf
js
ja
push
cmp
mov
jmp
gs
adc
retf
fld
stc
cmp
adc
movs
mov
adc
or
sub
sub
pop
mov
cs
xor
call
idiv
pushf
inc
arpl
jns
push
shl
ja
in
and
daa
fwait
pop
push
imul
mov
inc
(bad)
sub
cmp
pop
nop
addr16
and
pop
pop
movs
stos
fnstsw
sar
scas
or
push
pop
xchg
mov
xor
lea
addr16
lods
sub
pop
sar
(bad)
(bad)
jmp
dec
ja
push
cmc
mov
cmc
mov
not
adc
cmps
(bad)
jle
aad
(bad)
push
out
jmp
add
xchg
jns
enter
sbb
mov
lods
inc
outs
pop
pop
lods
rol
ins
cmp
pop
push
gs
push
call
adc
mov
sub
push
(bad)
out
jg
loope
movs
xor
pop
xlat
pop
ror
out
xor
je
mov
or
xchg
je
call
push
call
xor
fsubr
push
lock
call
repz
cli
aad
sti
jae
inc
mov
xchg
int3
lods
cmp
jns
sbb
dec
or
pop
fwait
sub
cld
test
iret
cmc
and
popf
inc
ror
push
jne
fucomi
mov
cmp
cwde
jle
ja
sbb
div
sub
push
jmp
mov
bound
(bad)
loopne
mov
loope
gs
lods
outs
adc
fwait
loope
pop
pop
jae
cli
daa
cmp
push
dec
popa
or
fstp
mov
jae
imul
inc
in
xchg
cld
fnstenv
xor
inc
inc
mov
mov
imul
adc
sub
shl
pop
repz
and
inc
and
scas
out
cmp
inc
loopne
mov
jl
or
sub
inc
hlt
push
sbb
(bad)
popa
jl
lea
jg
clc
or
or
inc
call
xor
arpl
and
mov
inc
sub
push
push
stc
(bad)
jb
lods
and
arpl
mov
jle
out
pop
mov
fcomp
mov
inc
addr16
bound
fwait
repz
lods
sbb
push
pop
test
imul
scas
mov
int
mov
(bad)
pop
or
adc
test
test
lods
xchg
cmc
xor
lods
sbb
clc
repz
mov
arpl
fcomp
clc
pop
ror
fbld
inc
mov
sbb
call
mov
inc
shl
out
jbe
cs
(bad)
and
test
mov
xchg
imul
and
bound
dec
test
pop
pop
sbb
dec
fcomip
xchg
retf
ret
in
repnz
and
add
xchg
mov
jp
jnp
mov
cmps
mov
aaa
mov
jle
jl
mov
and
push
or
rcl
sti
push
iret
push
xor
push
imul
out
scas
jmp
add
jmp
es
push
or
lahf
push
cmps
sbb
(bad)
lds
xchg
cmp
hlt
test
jle
jge
cmps
arpl
psrlw
xchg
push
test
fdivr
mov
sar
fnsave
out
mov
outs
scas
add
out
pop
inc
mov
xchg
jp
or
loopne
ficomp
pop
dec
adc
or
mov
addr16
lds
in
(bad)
sti
imul
mov
xor
jmp
mov
mov
mov
and
(bad)
jae
mov
xchg
popf
loop
shr
cmp
(bad)
fwait
stc
fcmovbe
inc
setge
test
sub
cdq
adc
mov
je
mov
mov
pop
in
nop
ret
test
add
add
add
mov
mov
in
cmc
pop
mov
push
push
in
fisttp
or
mov
stos
ja
stos
or
mov
cdq
in
add
aad
mov
jmp
mov
aam
xchg
aaa
mov
push
sub
in
inc
iret
inc
jg
add
sbb
or
movs
fst
lea
fwait
jmp
je
fld
(bad)
shl
xchg
mov
push
mov
mov
ret
fwait
shr
cmps
push
mov
inc
popa
sub
xchg
retf
imul
ret
mov
jo
into
js
stc
scas
ficomp
(bad)
sti
jns
ror
das
adc
sub
xchg
sbb
imul
sub
rcl
jp
test
(bad)
popf
in
add
mov
mov
xor
fisttp
adc
cdq
xchg
jbe
stos
(bad)
xor
stos
arpl
cmp
cmp
in
in
add
enter
push
shl
data16
mov
jnp
add
jb
xchg
lock
mov
ja
cmp
push
test
xor
sbb
mov
xchg
adc
xchg
push
dec
jae
int3
push
xor
or
mov
mov
mov
pop
loopne
movs
stc
sti
in
sbb
xchg
fld
clc
inc
cmp
jnp
stos
outs
push
push
fbld
psubusb
sbb
imul
adc
popf
xor
daa
and
xor
in
mov
or
sub
add
jbe
mov
hlt
pop
cmp
jb
hlt
lahf
push
mov
mov
pop
xchg
ins
ror
dec
das
ret
inc
pop
loopne
retf
or
adc
mov
in
es
mov
sbb
push
popf
(bad)
and
push
jns
mov
js
mov
sar
aam
dec
push
les
data16
pop
jmp
outs
movs
inc
jge
xor
dec
test
dec
mov
enter
inc
mov
adc
mov
fisub
out
jb
inc
leave
and
ret
les
mov
push
xchg
push
mov
adc
and
pmuludq
inc
mov
imul
(bad)
and
(bad)
fisttp
rcr
jmp
sbb
or
mov
push
xchg
mov
jmp
je
ins
fnstenv
aam
lahf
jbe
inc
pop
loopne
xchg
dec
dec
fld
pop
div
imul
lds
add
jbe
fs
mov
sub
sub
xor
mov
adc
xchg
jle
ret
mov
ins
inc
lods
sub
mov
sbb
and
push
mov
push
push
or
mov
add
loope
test
out
adc
outs
jmp
adc
test
rcr
mov
push
xlat
sbb
(bad)
fisubr
(bad)
jmp
or
mov
imul
pop
adc
(bad)
push
fdivr
mov
fisubr
fst
adc
je
nop
and
shl
data16
push
and
and
rcl
push
or
daa
push
dec
add
mov
jns
adc
mov
addr16
sbb
les
push
out
sbb
(bad)
xchg
cmp
pop
dec
std
(bad)
sub
mov
sbb
ret
imul
aaa
push
push
dec
sbb
out
xchg
sbb
das
dec
scas
and
push
xchg
bound
add
cmp
jns
arpl
mov
push
ins
xor
test
and
loop
mov
inc
cmp
mov
stos
mov
jno
pop
mov
xor
mov
adc
mov
fbld
dec
std
push
out
js
cld
leave
push
in
mov
cli
(bad)
loopne
dec
mov
lock
scas
loope
add
outs
mov
popf
adc
and
movs
leave
add
inc
fsub
adc
push
stos
jno
retf
ins
add
mov
mov
mov
xchg
rcr
xchg
cli
push
and
daa
mov
xchg
outs
stos
xchg
push
mov
add
rol
out
ds
outs
mov
out
xor
and
sub
sub
lea
ret
pusha
push
xor
xlat
sbb
mov
pop
mov
push
or
fdivr
adc
in
push
sbb
mov
push
mov
inc
int3
in
cmp
clc
ds
lods
dec
sub
and
xor
call
jae
push
pop
arpl
xchg
test
sahf
loop
mov
out
(bad)
not
pop
push
and
mov
or
pop
pop
iret
adc
dec
retf
pop
test
jg
cmp
dec
push
jo
and
outs
mov
cmp
and
cmp
call
adc
and
mov
aaa
cmp
ins
xchg
addr16
sub
hlt
pop
int
sub
inc
mov
movs
fidivr
pushf
jl
test
mov
jnp
adc
sub
pop
cmps
cwde
or
mov
add
js
sbb
inc
sbb
mov
cwde
pop
fidivr
aas
test
div
jmp
nop
jb
mov
jl
retf
icebp
jmp
icebp
adc
mov
aas
mov
xchg
inc
mov
mov
mov
add
sub
mov
std
push
add
ret
cmp
push
pop
rcl
pop
xlat
pop
inc
daa
jne
cmc
repnz
jne
repz
or
mov
xor
xchg
popf
enter
mov
adc
push
cmp
adc
push
add
push
jl
imul
loopne
xor
sbb
loope
dec
adc
xor
sub
xchg
sub
sub
in
mov
mov
mov
dec
jo
arpl
icebp
fdivr
aas
int3
fnstenv
pop
xlat
mov
dec
sub
push
mov
mov
mov
(bad)
push
fdiv
push
test
test
dec
fisub
ror
test
dec
jne
and
cmp
imul
mov
add
ficomp
jb
cwde
mov
mov
push
dec
add
outs
lock
rep
and
sbb
push
xchg
mov
nop
dec
cmp
dec
loopne
jl
push
aam
cs
ficomp
rol
sub
inc
jb
pop
fsubr
jns
push
in
mov
out
sub
add
inc
mov
mov
mov
es
rcr
push
jno
xlat
popf
test
jle
les
add
inc
data16
fsubrp
loopne
fsub
sbb
in
cdq
cld
mov
push
rol
sub
loope
call
outs
cwde
pop
sub
inc
scas
retf
rcr
jmp
aam
xchg
out
xchg
or
ds
(bad)
xor
(bad)
retf
inc
jns
xchg
(bad)
and
imul
mov
cli
mov
addr16
xor
out
mov
sbb
cdq
xor
out
stos
pop
out
cmps
nop
aad
(bad)
sbb
ja
and
adc
scas
xor
pushf
mov
test
mov
push
inc
hlt
inc
mov
mov
repnz
jp
bound
push
sti
sahf
mov
(bad)
mov
mov
aas
shr
mov
ja
aas
jae
pop
mov
and
add
mov
cmp
dec
mov
xchg
lods
addr16
shl
enter
cli
xlat
hlt
mov
mov
push
fadd
fmul
stos
dec
cmc
jno
lods
add
cmp
cwde
loop
xchg
cmp
aaa
test
rol
mov
cdq
aam
iret
lahf
and
mov
mov
test
test
in
test
mov
shr
push
dec
loopne
iret
lods
nop
lea
mov
clc
lea
stos
xchg
ins
(bad)
cmp
xor
lahf
loop
sbb
(bad)
out
and
in
mov
mov
dec
jo
bound
cmps
mov
mov
cmp
mov
lds
push
xchg
add
fild
ins
lock
adc
fldenv
xor
(bad)
cmp
mov
adc
pop
push
fwait
pop
cwde
and
and
cli
add
cmp
xor
clc
xchg
mov
pop
adc
jns
in
out
add
push
es
sub
stc
pop
in
lahf
cmp
or
cmp
ds
cli
fldenv
fwait
inc
outs
mov
cmp
mov
pop
mov
int
cdq
sahf
mov
adc
fxch
(bad)
jmp
mov
cld
pop
mov
xchg
push
daa
adc
adc
js
pop
inc
mov
scas
repz
in
and
sub
dec
xor
pop
into
cmp
test
loope
pushf
and
movs
inc
add
les
or
sbb
jbe
or
pop
adc
hlt
ret
stos
fimul
jnp
pushf
jne
pop
xor
add
mov
shr
mov
dec
and
outs
in
or
xchg
xchg
iret
ret
mov
xchg
sub
imul
loopne
lock
or
or
pop
cmp
gs
mov
adc
cmp
retf
into
enter
pusha
and
xor
test
dec
in
xlat
pop
xchg
js
popf
nop
cld
addr16
jno
sub
pushw
or
pusha
ss
addr16
mov
fisub
adc
jecxz
pop
and
fild
mov
add
jle
call
mov
call
ss
or
or
xor
jmp
adc
xor
jge
and
push
ret
mov
push
xor
cmp
leave
iret
movs
fmul
or
xchg
add
or
(bad)
stc
data16
(bad)
adc
int3
sub
xchg
sbb
int3
dec
test
sbb
jp
addr16
bnd
sbb
shl
std
add
mov
js
jnp
clc
pushf
push
inc
add
pop
neg
imul
int3
js
push
lds
pop
jns
ror
and
mov
pop
xlat
jae
inc
mov
add
inc
(bad)
std
arpl
xchg
rcl
pop
jecxz
adc
in
jmp
mov
movs
lock
sti
jg
cmps
cwde
ret
out
or
mov
inc
out
sbb
adc
push
mov
xor
mov
or
popa
lds
jmp
cmp
es
call
cmps
jo
mov
mov
js
mov
add
inc
test
or
or
mov
loop
test
inc
dec
jnp
or
ja
mov
fdiv
div
loope
xchg
mov
add
jb
aam
in
mov
xor
addr16
push
aas
sub
push
sbb
mov
push
sti
mov
mov
in
nop
push
leave
xor
cmps
and
hlt
ins
mov
popf
push
push
cmp
cmc
xor
cmps
sub
movs
and
mov
data16
xchg
outs
adc
cmp
push
mov
(bad)
shld
mov
jae
jle
sub
cs
push
or
and
ss
adc
pop
mov
or
loopne
(bad)
loop
xlat
or
xchg
nop
loope
adc
leave
or
pop
add
pushf
add
jmp
inc
push
outs
dec
lods
mov
sti
bound
sar
cmp
mov
dec
call
push
push
mov
stos
jo
mov
cmp
aas
jnp
je
sahf
jnp
frstor
sbb
xchg
lea
(bad)
pop
lahf
jnp
push
ja
inc
mov
jp
add
es
movs
jle
shr
fnstsw
fistp
push
js
outs
xor
dec
scas
(bad)
leave
dec
xchg
sub
cdq
test
jb
adc
mov
sbb
and
xchg
int
sbb
(bad)
cmp
loope
push
test
ins
bound
mov
mov
xchg
in
lods
sahf
push
add
push
iret
fs
movs
inc
jmp
pushf
add
sti
cmc
push
jl
cld
mov
iret
lods
dec
pop
adc
cmps
iret
sub
jecxz
dec
dec
adc
or
inc
int3
or
or
stos
xor
jp
inc
sbb
xchg
bound
popa
std
shl
in
out
aam
iret
inc
sub
xchg
jecxz
scas
mov
inc
inc
out
inc
mov
xor
xchg
outs
cmps
retf
cmp
inc
pop
(bad)
and
cmp
pop
dec
sbb
sub
xchg
cmp
popf
retf
xor
push
sub
mov
scas
clc
shl
dec
repz
sub
add
sub
iret
xor
cvttps2pi
cmp
xor
call
sub
into
or
aad
xchg
adc
push
or
pop
dec
mov
retfw
and
pop
cs
jecxz
mov
adc
out
sbb
pusha
inc
loope
sbb
lahf
and
mov
(bad)
inc
das
in
shl
ret
mov
js
adc
cmp
es
push
fnstenv
ja
jne
scas
push
popf
push
cmp
inc
stos
(bad)
imul
cmp
jns
int3
enter
gs
mov
adc
mov
mov
pop
add
cld
xchg
scas
enter
cmp
test
or
shl
dec
test
pop
ss
mov
(bad)
mov
jne
pop
push
retf
popf
movs
inc
fdiv
(bad)
sbb
in
inc
mov
idiv
cli
sub
xchg
push
sbb
sub
sub
dec
mov
aaa
retf
mov
in
inc
ja
cmp
jl
sub
inc
pop
add
(bad)
mov
sbb
into
adc
dec
(bad)
aaa
jbe
adc
call
fs
(bad)
iret
fld
ins
adc
loope
popa
push
push
out
inc
push
rcr
popf
lds
adc
nop
cmps
jl
xchg
pop
fstp
fcomp
cmp
in
mov
(bad)
lods
adc
or
xor
aam
into
cmps
xlat
jae
retf
bound
or
xor
mov
pop
cmp
sub
push
add
xor
xchg
ja
push
and
aam
dec
mov
retf
sub
sub
lods
js
pop
fmul
cmc
push
mov
(bad)
dec
lods
popf
lds
loope
cld
push
adc
ficom
loop
ret
icebp
lea
mov
cli
fcomip
ins
addr16
or
xchg
mov
jle
xchg
push
(bad)
push
sar
repnz
add
or
hlt
mov
int
jmp
adc
jp
adc
movs
cld
push
inc
push
mov
std
xor
ror
push
xor
fcomp
out
es
and
mov
inc
adc
pop
imul
call
push
inc
jbe
call
add
mov
pop
jmp
adc
and
mov
(bad)
jo
xor
imul
popf
mov
addr16
xchg
sbb
pop
dec
cmp
and
arpl
and
mov
xlat
mov
shr
stos
ds
mov
cmp
inc
std
push
loope
or
test
or
imul
je
ss
sub
push
xchg
pop
jle
or
mov
pand
push
rcr
out
loopne
(bad)
push
loopne
push
pop
jno
ja
(bad)
imul
cld
jo
fwait
jmp
scas
jno
jns
jmp
dec
in
ds
(bad)
popf
cmp
out
dec
pop
ss
lods
mov
gs
pop
fdiv
inc
rcl
mov
pop
fidivr
call
push
pop
inc
jge
or
pop
jns
push
loope
push
mov
push
cs
push
jae
mov
sub
add
je
ja
popf
aaa
dec
mov
jne
movs
popw
in
push
push
fdivp
not
mov
cs
in
mov
shl
push
je
and
xchg
les
cmp
outs
push
pop
jecxz
repz
cmp
(bad)
ficom
xchg
aaa
and
cmp
xchg
in
test
jmp
jp
xchg
sub
clc
adc
leave
mov
popf
push
je
outs
mov
mov
jl
les
sbb
mov
jno
push
aas
fisubr
xchg
mov
fwait
xor
repz
push
inc
or
fcmovnbe
out
outs
pop
jns
and
sti
fidivr
cli
fcomp
dec
sub
out
or
out
inc
mov
call
adc
mov
call
push
mov
in
sbb
lock
cmp
aam
mov
inc
hlt
push
ins
push
adc
fwait
outs
ret
cli
push
mov
push
(bad)
je
iret
mov
mov
jno
push
ja
mov
cmp
imul
ins
ficom
fcomp
movs
shl
dec
fisub
scas
jns
inc
inc
or
nop
xor
pushf
xchg
sub
fadd
add
cmp
and
fistp
lods
mov
push
lds
lea
mov
mov
popa
pcmpeqb
out
mov
lock
scas
ds
pop
adc
rcr
(bad)
pushf
xchg
mov
dec
repz
pop
sub
xlat
xchg
sbb
sub
xchg
sbb
mov
jle
div
xacquire
fbstp
ss
std
mov
mov
dec
xchg
imul
pop
int3
retf
outs
sbb
lods
pop
movs
cmp
(bad)
ins
pop
xchg
xor
sub
pop
push
cmp
fwait
cmp
lods
adc
pop
ds
ficomp
pop
jbe
inc
lds
pop
js
shl
mov
adc
cmp
lds
es
inc
mov
add
jo
cli
add
cmps
mov
sbb
or
sbb
mov
jl
rcr
out
lds
or
rcl
xchg
ds
scas
out
sub
ss
pop
cwde
pop
xchg
dec
out
mov
pop
adc
xchg
(bad)
cmp
dec
ins
shl
adc
xor
cmps
cdq
ret
pop
stos
sub
lock
std
shl
sbb
cld
mov
or
(bad)
xor
leave
cli
nop
scas
shl
es
jg
push
cwde
fwait
jb
js
inc
fld
sti
into
jne
loopne
popf
cmp
outs
push
aas
jg
shr
mov
xchg
loopne
mov
jns
arpl
push
adc
xchg
enter
xchg
ja
js
leave
in
shr
jmp
push
or
add
xchg
sub
mov
loopne
xor
int
or
test
(bad)
xor
mov
pushf
sahf
cmps
xor
cmp
sub
pop
cmp
cmp
mov
and
push
sub
cmp
test
mov
sbb
jmp
mov
add
shl
mov
(bad)
sub
sbb
cli
scas
retf
pop
adc
dec
ds
clc
dec
adc
out
test
dec
dec
data16
repz
push
mov
push
dec
xor
aaa
mov
sbb
not
lods
dec
and
(bad)
xor
call
imul
and
lds
and
mov
pop
pop
movnti
sub
pop
pop
dec
adc
sub
inc
repnz
pop
test
js
push
in
or
push
enter
(bad)
push
add
mov
xor
cwde
daa
cmp
daa
data16
out
jns
stos
mov
pushf
xlat
sbb
mov
mov
sub
push
mov
ins
loop
adc
pop
cmp
or
jmp
xor
das
loopne
cs
les
and
xlat
xchg
pop
cmp
push
or
ins
dec
mov
inc
mov
mov
xor
or
lods
add
pop
rcr
mov
cli
aam
push
ror
(bad)
lods
and
pop
add
sbb
mov
out
mov
adc
xlat
mov
mov
(bad)
jnp
aam
jnp
jecxz
xor
pop
mov
sbb
fsubp
in
sub
lahf
psrad
mov
cmps
and
call
xor
jnp
mov
fucomi
inc
lock
(bad)
jne
xor
push
xchg
push
xchg
xchg
mov
inc
xor
icebp
jno
test
sub
rcr
dec
cmp
cmp
pop
jge
inc
dec
not
arpl
push
(bad)
loopne
into
xchg
push
push
jmp
jno
mov
inc
pusha
add
jg
xchg
stc
scas
and
xchg
enter
mov
fisub
pop
ffreep
cmc
add
fst
aaa
in
(bad)
jg
gs
imul
call
cld
int
mov
scas
aam
push
test
pop
lods
sbb
and
cmp
scas
ins
sbb
enter
jp
sbb
not
mov
ds
jp
sahf
lock
fisubr
out
pop
loope
add
push
push
or
pushf
(bad)
int
pusha
scas
clc
push
fsub
push
fcmovnb
call
xchg
mov
add
xchg
adc
into
out
add
movs
xlat
adc
repnz
mov
in
jae
outs
jle
xor
inc
mov
test
stos
jbe
jl
sbb
and
rcr
scas
je
sub
inc
cld
jecxz
xor
sti
imul
or
ins
aam
scas
cwde
adc
loope
mov
stos
push
cmps
add
mov
es
mov
mov
(bad)
sbb
and
mov
adc
jb
gs
xor
je
fistp
sub
ins
test
imul
sub
mov
pop
pop
loopne
xor
repnz
cmp
fmulp
(bad)
aas
xchg
cld
sub
xchg
push
fistp
mov
xor
sub
push
push
ret
in
dec
cmc
outs
xchg
inc
push
ret
out
mov
cwde
rol
loopne
add
mov
lods
nop
and
lods
mov
xor
mov
add
stos
xchg
sub
loop
fs
cmp
(bad)
pusha
(bad)
aam
stc
adc
xchg
add
aad
push
lahf
cmp
cdq
sbb
jge
daa
mov
loopne
shl
dec
adc
scas
adc
mov
jno
xor
xchg
adc
call
iret
fsub
xor
test
jl
pop
adc
ja
popa
jmp
int3
shl
test
sub
mov
in
fld
icebp
(bad)
icebp
(bad)
xor
dec
mov
push
outs
adc
adc
and
test
test
inc
fisub
jge
repz
push
ret
pop
fmul
mov
in
adc
push
mov
jbe
cdq
pushf
sahf
repnz
pusha
pushf
adc
jns
and
cmp
rcr
icebp
push
mov
jl
xor
fild
arpl
jns
mov
mov
stos
test
mov
inc
stos
mov
jmp
xchg
inc
jno
pop
cld
add
xor
ret
sub
aas
inc
cmp
or
and
aam
pop
stos
out
idiv
push
test
sub
(bad)
pop
(bad)
or
out
push
dec
loop
or
push
sbb
sub
into
push
and
lea
pushf
mov
mov
imul
or
das
mov
out
xchg
clc
mov
ror
shr
or
pop
(bad)
movs
lds
fwait
jmp
jbe
movlps
icebp
sahf
pop
(bad)
cdq
jmp
gs
dec
cld
lahf
fs
and
jae
dec
jmp
mov
int3
in
pop
xchg
push
call
xchg
mov
es
pop
imul
sub
jmp
(bad)
retf
pop
add
xor
fs
and
dec
loop
dec
mov
aaa
imul
dec
cmp
xchg
xor
push
loop
scas
inc
outs
jmp
jae
pop
mov
arpl
test
pop
sbb
imul
pop
test
cmc
out
push
dec
dec
push
jb
rcl
gs
pusha
cmps
push
sub
test
push
xor
push
stc
push
mov
sub
inc
out
sbb
aad
cmp
psrad
sar
sbb
xor
pusha
xor
leave
or
pop
xchg
or
sbb
xchg
ins
jl
leave
enter
popa
ja
and
cmp
dec
or
push
mov
mov
mov
outs
je
and
pop
clc
imul
imul
out
jl
and
inc
dec
dec
mov
sub
call
aad
and
movs
imul
call
stos
sub
sbb
xor
add
fwait
(bad)
loope
test
(bad)
ret
jecxz
mov
xor
push
add
fstp
dec
scas
push
gs
stos
stos
xor
(bad)
std
loope
lds
add
adc
mov
int
and
inc
mov
fstp
mov
in
lea
ss
and
inc
cmp
push
cmp
jbe
inc
jge
imul
daa
add
push
add
je
mov
scas
inc
sub
sbb
inc
cld
mov
ret
jae
xor
jnp
call
test
xchg
jecxz
inc
and
repnz
shr
stos
ficomp
mov
nop
or
mov
and
out
fcmovbe
(bad)
call
sub
pop
ins
sahf
push
ret
(bad)
pop
xchg
cmp
mov
and
jge
add
out
ror
int
sti
js
mov
dec
pop
pop
ins
loop
jmp
dec
xchg
retf
push
xchg
pop
mov
add
push
and
sub
lea
push
add
xlat
hlt
das
xor
shr
outs
sub
xchg
sbb
cmp
sbb
xchg
mov
mov
inc
xchg
pop
adc
jmp
rcr
pop
enter
sub
in
repnz
loopne
jns
pop
cld
ja
cmp
repnz
addr16
mov
and
pop
xor
imul
push
jbe
xchg
push
xchg
stos
jp
es
pusha
ret
ret
mov
dec
sbb
xor
aad
int
mov
mov
and
dec
loop
lahf
jl
out
(bad)
aad
in
cmp
std
outs
adc
pop
xor
or
mov
pop
jae
dec
xor
jo
js
aas
pop
shl
mov
xchg
dec
(bad)
aad
push
ja
ins
cmc
mov
ror
mov
iret
arpl
dec
lods
scas
in
jmp
add
aaa
test
pop
enter
adc
dec
add
and
pop
dec
cs
or
jbe
das
pop
mov
add
out
(bad)
in
fst
adc
(bad)
dec
adc
inc
dec
inc
push
sub
cs
mov
add
inc
ds
push
inc
pop
(bad)
das
mov
mov
iret
stos
push
sar
or
pop
les
pop
push
shl
or
ds
adc
xchg
(bad)
fldcw
stos
mov
jne
mov
jnp
and
cli
cli
stc
xchg
inc
sub
xchg
inc
je
cmp
addr16
ret
enter
and
ror
dec
push
(bad)
out
ss
mov
repnz
daa
je
add
fisubr
cld
adc
xor
cli
inc
mov
scas
push
daa
repz
lds
push
cmp
mov
retf
sub
sar
sbb
mov
scas
jno
adc
ret
dec
sub
jo
stos
les
scas
xor
sahf
les
mov
or
imul
push
movs
(bad)
jmp
(bad)
repz
dec
bound
outs
jb
(bad)
push
cmp
jae
sbb
ins
cmp
iret
jne
jbe
add
mov
addr16
test
std
jl
jg
nop
mov
shr
outs
jmp
bound
shr
xor
dec
ds
leave
sub
shl
xchg
or
jmp
sahf
arpl
xlat
push
loop
or
pop
xor
(bad)
loop
retf
clc
mov
das
iret
ja
jnp
in
mov
sbb
lahf
cs
jle
xor
mov
xor
pcmpeqb
cmc
adc
xchg
(bad)
mov
pop
in
aad
ffreep
pop
test
sbb
push
push
mov
popa
retf
rcr
mov
dec
and
add
fsubr
inc
ret
(bad)
out
ja
and
and
lahf
cld
sub
mov
std
mov
push
retf
pushf
fsub
sbb
cwde
push
jne
pop
sub
pop
inc
je
repnz
mov
addr16
ror
std
or
fistp
sbb
or
inc
jecxz
sub
js
inc
sub
ss
adc
dec
mov
hlt
pushf
mov
sbb
lahf
or
sbb
movs
cs
aas
mov
lds
ret
dec
push
ror
jle
sbb
enter
arpl
sbb
enter
add
jns
mov
aad
loopne
push
pop
xchg
call
ror
push
push
inc
aas
in
sub
mov
jmp
xchg
mov
sub
lods
scas
cs
inc
pop
outs
inc
sub
sti
loop
adc
mov
pushf
push
jmp
sbb
mov
fimul
push
xor
call
(bad)
rol
out
test
adc
add
or
rcr
mov
js
sub
mov
push
(bad)
push
mov
cs
daa
sbb
loopne
(bad)
jg
(bad)
jbe
sub
jle
jmp
addr16
add
mov
push
(bad)
xchg
xor
and
pop
xor
add
and
sub
or
xchg
mov
jg
and
mov
stos
or
test
bound
sub
mov
jne
cmp
dec
movs
ret
mov
cmps
cdq
mov
cmc
adc
or
jmp
std
out
dec
sbb
ja
js
cmp
xor
mov
int3
pop
test
xchg
inc
movs
and
pop
jp
(bad)
fisub
repnz
jnp
popa
inc
pop
int
adc
ins
es
in
or
jl
(bad)
sbb
mov
pop
mov
mov
ds
sbb
fwait
dec
pop
jp
movs
outs
xlat
add
sub
adc
xor
(bad)
push
ds
shl
push
fisubr
mov
mov
dec
faddp
aad
imul
mov
lahf
jg
leave
iret
inc
xor
in
sbb
cwde
aaa
sbb
xchg
out
hlt
sar
xchg
pusha
ret
cmp
arpl
push
xor
shl
push
mov
fcomp
xlat
lods
lds
pushf
mov
add
fldcw
shl
add
cs
jge
xor
sub
sar
mov
vmovss
ror
mov
inc
push
jmp
and
push
push
or
int
iret
mov
inc
mov
and
push
imul
nop
adc
lahf
movs
icebp
aas
push
lods
fld
jmp
aam
mov
out
add
push
pop
je
leave
jmp
dec
xor
clc
ja
xchg
add
jp
daa
mov
mov
push
imul
cmp
(bad)
mov
pop
hlt
dec
cdq
das
cmp
out
adc
ret
adc
dec
pop
lahf
aas
sub
lods
(bad)
ins
or
push
fidivr
pop
pop
xchg
push
jmp
mov
xor
movs
movs
test
outs
push
lds
out
mov
pop
mov
div
mov
mov
mov
sbb
arpl
cmp
xor
xchg
mov
jno
inc
sub
jmp
inc
scas
dec
mov
sub
adc
or
pop
pop
push
int3
dec
sbb
xor
fwait
jmp
mov
dec
(bad)
mov
dec
push
and
bound
je
imul
mov
mov
sbb
sbb
or
nop
inc
ss
mov
ficom
lea
sti
mov
or
jns
sbb
aam
in
aaa
arpl
adc
aaa
ds
pop
sbb
mov
xchg
sbb
adc
sbb
and
sahf
stc
mov
mov
jg
jp
loop
aaa
xor
rcl
cwde
(bad)
xor
fiadd
cmp
push
mov
sbb
ret
hlt
cli
cs
xchg
pop
inc
jne
cld
fs
cmc
jbe
inc
mov
outs
cmc
dec
int
ret
test
add
push
call
adc
imul
xchg
mov
not
xchg
cli
and
imul
repz
dec
or
gs
out
add
fisubr
(bad)
dec
mov
ins
add
(bad)
ins
inc
addr16
pop
shl
push
and
pop
push
xor
xor
(bad)
(bad)
clc
inc
xor
inc
movs
inc
add
sbb
fiadd
punpckldq
xchg
adc
imul
push
push
sbb
mov
in
imul
cld
pop
(bad)
aas
adc
push
mov
mov
test
cmps
je
mov
cmps
xchg
in
fcmovu
xor
scas
xchg
iret
fdivp
adc
popf
test
xlat
push
popf
jg
jnp
fist
lahf
or
and
mov
xor
push
add
sbb
stc
daa
push
mov
adc
aad
out
(bad)
ret
jnp
sbb
add
mov
repz
push
iret
mov
fisub
cld
xchg
mov
gs
pop
and
int
jecxz
sub
mov
int
pop
add
mov
(bad)
pop
adc
in
pop
mov
daa
cld
shl
xor
inc
loope
mov
out
sbb
addr16
imul
js
xchg
or
xor
push
jbe
or
aas
mov
sbb
pushf
dec
or
fwait
adc
cli
xor
push
repz
push
inc
iret
ins
mov
outs
movs
stos
mov
cmp
imul
loope
retf
push
(bad)
mov
clc
push
out
xchg
add
sbb
repnz
shl
pop
stos
test
pop
pop
lods
sti
jno
push
loopne
ins
nop
call
pushf
push
das
inc
shr
lock
pop
loop
daa
xor
(bad)
std
mov
lds
cmps
sbb
std
and
popf
pop
inc
icebp
mov
mov
xor
pop
pop
jl
test
cld
jne
xchg
outs
ss
mov
pop
dec
pushf
int
scas
sub
rcl
or
adc
xor
nop
out
lea
xor
dec
movs
add
inc
mov
lea
pop
and
sub
shr
pop
leave
cmp
(bad)
jmp
inc
scas
or
les
push
mov
xor
jbe
cmp
(bad)
jle
enter
pop
js
aam
ins
cmp
fwait
bound
cmps
jl
pop
xor
scas
cmp
icebp
loope
lods
fild
call
push
mov
cmp
mov
dec
mov
sbb
and
addr16
leave
(bad)
mov
adc
in
lahf
adc
xchg
repz
addr16
sub
pop
frstor
push
push
stc
pop
push
in
sbb
loopne
fstp
retf
adc
stc
ins
rcr
sub
xchg
xor
mov
dec
sbb
jb
fs
or
clc
ins
or
add
cmps
xchg
mov
lock
in
push
test
pop
test
jle
push
inc
or
adc
inc
test
dec
xchg
push
loope
and
pop
ret
loope
sub
daa
xor
mov
or
jno
pop
or
in
fist
or
ss
movs
mov
pop
sub
sub
xchg
ret
adc
inc
vorps
sub
mov
repnz
mov
sub
or
sub
dec
scas
retf
jb
cdq
push
cmp
(bad)
jmp
leave
or
xchg
dec
js
and
mov
int
retf
adc
xor
je
test
lahf
or
inc
aaa
inc
push
and
adc
shl
cmp
jo
rcr
inc
rcl
test
sbb
into
jne
jnp
jg
imul
and
sub
mov
adc
lds
dec
jl
test
push
pop
jle
inc
data16
ret
push
mov
pusha
or
xor
jg
shl
cld
add
mov
xchg
(bad)
jmp
pop
int3
mov
push
or
mov
rcl
daa
cmp
and
je
cld
jae
and
fcomp
pop
sub
clc
sar
xchg
xchg
jmp
mov
arpl
fld
aad
ret
jecxz
mov
cmp
inc
jbe
retf
fld
mov
pop
xchg
jmp
sar
cmp
or
ss
sti
outs
adc
in
or
call
ins
mov
es
pop
movs
mov
jbe
(bad)
into
mov
mov
push
inc
push
loop
mov
sub
in
mov
adc
test
shl
call
aaa
(bad)
in
mov
test
mov
xchg
out
adc
sub
and
cmc
inc
ret
mov
(bad)
out
mov
popf
mov
xor
sbb
pop
dec
(bad)
xchg
scas
sbb
loope
and
jp
xor
clc
sbb
sbb
pop
adc
pop
loope
ins
and
mov
loop
and
pop
xchg
sbb
sbb
out
pop
push
das
aad
fs
jmp
ins
push
push
sub
(bad)
jo
lock
add
pop
movs
mov
idiv
clc
pop
iret
daa
push
fcmovne
cdq
outs
mov
jno
cli
jbe
jbe
aad
xchg
sub
test
fisub
jo
fs
sbb
mov
imul
lea
dec
in
rcr
xlat
dec
sbb
arpl
mov
or
mov
mov
or
jno
adc
sub
shl
sub
xchg
push
push
xor
inc
inc
test
jl
aas
add
inc
lahf
mov
push
popf
das
sahf
and
(bad)
sbb
icebp
(bad)
lock
daa
lock
sar
and
(bad)
xor
fisttp
dec
popa
dec
sbb
and
sbb
imul
and
xchg
mov
adc
mov
mov
or
pop
fst
xchg
loop
sub
cmc
sbb
jp
scas
cmp
inc
retf
imul
enter
test
sub
sbb
loop
adc
popa
pop
and
pop
pop
sar
sub
sbb
xchg
jmp
or
jo
mov
xchg
or
and
sub
sar
repnz
cmp
inc
xchg
push
xchg
lods
out
mov
jp
movs
pop
mov
shl
xchg
inc
call
mov
xchg
loopne
int3
das
add
jno
imul
imul
in
in
xor
mov
jle
xor
lds
lods
(bad)
out
sub
sub
lahf
pop
scas
cmp
dec
sbb
jp
pop
sub
or
push
enter
pop
push
loopne
ins
mov
or
xor
push
cmp
inc
xor
fwait
xchg
xchg
fcomip
add
vpmacsww
mov
cmp
call
inc
jl
jge
cmp
in
push
dec
and
or
sbb
or
bound
rol
mov
xor
and
pusha
ss
push
(bad)
movs
sbb
mov
lods
sub
cmc
xor
neg
jo
cwde
pushf
pop
loop
dec
in
jnp
int
cmp
mov
xchg
(bad)
push
sbb
mov
jae
retf
pop
movs
dec
sub
sub
sahf
push
cmp
jl
enter
add
xor
or
cld
xlat
mov
push
out
pusha
xchg
jle
xchg
inc
(bad)
push
outs
pop
sub
add
adc
das
mov
jg
mov
lods
jg
imul
out
popf
dec
and
inc
loop
push
pop
mov
cmp
xlat
pop
jmp
jnp
pop
jbe
ret
cli
into
les
mov
xchg
lahf
push
jnp
xchg
gs
xchg
cmc
jl
push
jmp
mov
sub
shr
inc
fist
mov
xchg
pop
sub
shr
(bad)
xor
icebp
cmps
add
loopne
loopne
jne
sub
add
aam
and
int3
popf
fnstcw
push
jno
mov
mov
data16
sbb
into
xor
pop
sbb
jns
sbb
test
cmps
pop
jmp
xor
adc
or
icebp
sub
mov
or
push
mov
retf
fnstcw
add
mov
or
lods
dec
sbb
(bad)
mov
(bad)
mov
je
in
xchg
jg
es
push
and
call
adc
pop
fwait
push
mov
dec
xchg
icebp
mov
jmp
sub
rcl
call
std
in
ds
xor
adc
sbb
jae
mov
inc
aas
cli
ins
sub
cli
xchg
jecxz
mov
loop
push
vpsubsb
loop
mov
dec
ret
pusha
les
jecxz
mov
nop
jmp
call
mov
stos
xchg
test
in
mov
das
push
lods
in
(bad)
ror
push
dec
pop
movs
inc
iret
jl
adc
xchg
cmp
(bad)
mov
push
mov
sahf
mov
leave
fidiv
repnz
fst
jnp
or
or
jl
sbb
out
mov
pop
xor
mov
(bad)
cli
sub
mov
xor
inc
xor
xor
xor
and
shl
cmp
test
mov
das
and
mov
ss
aaa
lods
(bad)
inc
(bad)
mov
adc
and
mov
nop
mov
daa
dec
scas
cmc
push
iret
loopne
es
push
jo
inc
shl
fidiv
(bad)
fimul
jb
inc
int
les
inc
ret
add
clc
sahf
fs
sub
xchg
lods
aad
fnsave
pop
push
xor
ror
shr
retf
pop
pop
jno
data16
jmp
mov
lea
fsubr
sbb
inc
dec
pop
or
stos
xchg
(bad)
push
sub
ja
and
sub
xor
and
repnz
das
mov
pop
dec
mov
mov
mov
push
mov
ret
adc
pop
adc
test
mov
jns
cwde
mov
lods
cmp
mov
ja
enter
gs
jp
cmp
loope
push
arpl
inc
xchg
sub
xchg
inc
es
fs
sub
sahf
mul
mov
pop
(bad)
xchg
jbe
ficomp
adc
adc
sub
nop
and
aad
and
test
push
mov
xchg
mov
jecxz
imul
push
and
ins
popa
jge
sub
lahf
mov
mov
push
test
std
mov
ins
fwait
test
sub
idiv
(bad)
adc
xor
lods
add
jge
stos
rcr
out
mov
not
or
and
in
adc
adc
xchg
std
fld
es
nop
or
sub
mov
repz
jmp
mov
push
inc
(bad)
fst
mov
pop
retf
call
fs
pop
in
jp
mov
or
cwde
sub
pop
add
shr
add
adc
xor
movs
cli
movs
ret
mov
sbb
shl
lock
packsswb
fs
icebp
std
xchg
scas
mov
sti
mov
add
sub
adc
sbb
sar
or
stos
imul
xor
xor
test
movs
out
ds
push
popa
xchg
add
mov
pop
popa
popf
test
dec
add
cmp
xchg
pop
test
adc
ins
mov
push
outs
and
test
jmp
enter
inc
inc
in
push
xor
dec
dec
out
inc
push
dec
in
inc
adc
mov
repnz
pop
cmp
sti
sub
push
dec
frstor
add
mov
(bad)
unpcklps
sub
icebp
pop
mov
in
shl
(bad)
cmps
inc
xchg
pop
pop
push
xchg
push
push
or
jmp
retf
call
iret
jecxz
mov
enter
dec
aam
mov
ins
and
loope
push
jmp
sub
jne
mov
xor
iretw
ret
sbb
add
adc
loop
jecxz
popa
jmp
arpl
out
ins
cmp
cmp
and
test
call
sar
push
cmps
call
push
or
add
(bad)
push
movs
hlt
push
ins
rcr
into
nop
out
and
mov
and
out
dec
rol
outs
cmp
xchg
pop
add
aas
xchg
jne
xor
fbld
sbb
cld
mov
cmp
scas
shl
and
sahf
test
sbb
mov
pop
loopne
and
ss
adc
cmp
xchg
scas
push
test
cmp
mov
nop
jp
lock
out
ror
(bad)
xchg
mov
icebp
inc
in
adc
dec
sub
cmp
sub
ret
mov
nop
push
pusha
dec
loope
jne
add
(bad)
(bad)
enter
jne
(bad)
test
imul
mov
outs
push
push
outs
test
dec
stos
push
daa
mov
mov
push
inc
repz
xor
out
xchg
aaa
mov
daa
mov
adc
sub
loop
or
add
ret
in
pop
inc
inc
sub
xlat
sub
ficom
repnz
and
sbb
inc
into
and
push
jo
pop
pop
aad
popa
mov
sub
sub
adc
or
fldcw
mov
inc
cli
pop
movs
std
sar
imul
aad
repnz
cmp
cmp
gs
mov
sub
das
mov
jns
je
jo
or
movs
and
hlt
dec
lock
sar
cmp
adc
in
cld
jne
jbe
test
xchg
mov
sub
cmp
xor
(bad)
inc
dec
inc
cmp
out
ins
pop
pop
sub
repz
cwde
jle
fdiv
stos
dec
mov
jbe
paddsw
xor
xor
sub
adc
stc
mov
sti
sub
mov
pop
and
cli
dec
mov
cli
mov
sbb
lds
pop
push
jns
cmps
outs
repz
push
arpl
push
jmp
and
arpl
jg
pop
sub
mov
ss
fmul
pop
jmp
or
test
inc
mov
enter
or
jmp
loope
loop
cwde
ins
or
add
into
inc
pusha
or
gs
cmp
dec
inc
(bad)
pop
pop
cmps
add
xchg
mov
add
(bad)
cmp
adc
int
add
or
scas
enter
inc
div
mov
imul
fdivr
sub
xchg
cmc
inc
pop
or
lods
inc
inc
jp
jge
xor
or
add
sbb
push
add
jns
pop
aad
xchg
and
mov
fld
pop
jg
cmp
cdq
adc
or
ret
xchg
add
mov
add
bnd
xchg
mov
push
jmp
or
std
mov
sahf
xchg
mov
out
inc
fwait
and
cmp
lds
or
in
xor
pop
cmp
mov
pop
cli
retf
repnz
lea
inc
fdivr
sbb
mov
pop
dec
pushf
mov
mov
mov
out
nop
mov
sub
enter
repnz
movs
out
mov
jb
retf
pop
jnp
fwait
add
cmp
xchg
adc
adc
or
dec
repz
cmps
repz
(bad)
movs
or
cmc
jns
mov
jge
jmp
pop
mov
jns
sub
out
lods
dec
ins
sbb
add
mov
and
fdivr
pop
repz
add
shl
push
test
test
cmp
ret
jbe
add
add
movs
inc
fs
adc
pop
cmp
jle
xchg
fldenv
daa
dec
sbb
sbb
mov
imul
xchg
mov
mov
js
mov
xchg
and
mov
pusha
(bad)
js
out
loope
stos
jo
mov
(bad)
cld
push
adc
gs
lahf
sahf
(bad)
out
js
out
xchg
jno
sbb
loopne
cmp
inc
mov
pop
inc
sbb
lds
mov
retf
xor
sub
stc
pop
mov
test
pushf
add
mov
or
popf
mov
add
cmps
hlt
iret
pusha
outs
in
push
jbe
mov
ss
xchg
lods
leave
bound
int
scas
enter
xchg
mov
adc
jl
push
fild
jmp
dec
jge
mov
dec
fimul
xchg
jp
jecxz
adc
icebp
cmps
jo
cmp
push
aaa
sar
inc
adc
mov
neg
les
push
xchg
sbb
fld
sbb
(bad)
popa
xchg
adc
or
in
adc
shl
enter
jb
jb
stos
mov
jle
cmp
mov
enter
xor
das
stos
lods
cmps
jne
dec
push
pop
sub
(bad)
mov
shl
je
jnp
jnp
bnd
or
push
ja
mov
sbb
push
jbe
push
or
cmp
mov
imul
(bad)
pop
fldenv
push
adc
sub
add
je
and
call
test
scas
in
jb
ror
mov
add
sbb
sub
adc
jp
jmp
or
sbb
xchg
mov
loopne
ss
inc
rol
mov
xchg
ror
repz
out
xlat
mov
aas
shl
pop
sub
pop
arpl
fimul
adc
out
jecxz
pop
popa
outs
add
jecxz
mov
stos
xor
stos
mov
cmp
or
mov
sbb
adc
movs
int
ja
xchg
mov
push
ret
sbb
loope
(bad)
cwde
(bad)
jne
nop
lods
ds
shl
lods
pop
popf
sbb
jmp
and
mov
dec
add
inc
rcl
jne
add
(bad)
mov
mov
jle
pop
dec
cmc
jl
xor
push
push
std
adc
imul
mov
fwait
inc
inc
shl
or
jg
into
sar
leave
ss
dec
ins
fmul
je
cmp
sar
ja
cli
cli
and
push
loope
push
inc
jno
jecxz
mov
xchg
std
pop
inc
and
mov
dec
imul
inc
test
ss
push
dec
jbe
adc
ret
cwde
cli
push
int3
sbb
inc
jne
cmp
mov
movs
or
xchg
dec
mov
popf
out
les
hlt
stos
ja
adc
pushf
ret
stos
comiss
(bad)
mov
aam
arpl
cmp
cld
xor
lock
test
and
out
jae
jle
mov
out
mov
pop
repz
les
lds
ret
inc
adc
pop
clc
jecxz
xchg
inc
mov
popw
and
daa
aas
sub
xlat
mov
add
add
cli
jns
pop
jae
mov
leave
jp
and
outs
cmp
cli
leave
inc
enter
xchg
loope
mov
cmp
add
jmp
inc
sub
cmps
mov
jmp
ins
lods
sub
cmp
or
repz
out
daa
push
xchg
pop
adc
(bad)
push
pop
mov
rcl
and
(bad)
dec
mov
test
(bad)
or
push
jmp
sub
inc
jne
inc
imul
movs
shl
mov
repz
cs
and
dec
xchg
add
jge
cli
stos
test
das
fidivr
shl
xor
scas
test
das
push
xchg
mov
pop
inc
push
cdq
xchg
jge
lods
(bad)
das
leave
out
cmp
push
sbb
mov
jns
aam
dec
outs
pop
int3
shl
shr
push
popa
or
or
hlt
in
lock
int
xchg
(bad)
and
je
rcl
lods
sbb
leave
sub
pop
jbe
loopne
jae
sbb
or
push
cmps
add
inc
test
repz
push
int3
sub
jb
gs
cli
xor
or
out
jg
aam
mov
(bad)
leave
sbb
ficomp
mov
adc
sbb
mov
lahf
shl
shr
outs
arpl
int3
push
mov
sahf
bound
pop
cmp
(bad)
out
xor
push
scas
xchg
dec
or
adc
or
xchg
or
jp
dec
popa
jmp
mov
cli
inc
pop
imul
movs
mov
mov
test
ficom
mov
jl
sub
or
adc
xchg
cmp
dec
mov
inc
mov
and
push
repz
in
outs
js
mov
jge
jnp
mov
lahf
jmp
(bad)
fwait
dec
or
xchg
add
or
adc
push
push
mov
mov
push
sbb
sbb
cmp
add
adc
jle
enter
mov
scas
dec
add
or
out
inc
dec
call
ds
pop
icebp
mov
fdivr
es
aam
repnz
js
jb
retf
mov
(bad)
mov
push
mul
(bad)
dec
xor
dec
dec
push
inc
test
clc
mov
push
cmps
mov
hlt
sub
imul
push
je
cmp
std
push
shl
xchg
xor
or
mov
fld
mov
sub
push
sahf
imul
inc
xchg
pop
jne
dec
lea
repnz
pop
repnz
cmc
pop
shl
fcom
outs
pop
mov
fdiv
cmp
jmp
and
(bad)
jmp
inc
stc
cmp
push
dec
inc
stos
xor
cwde
loope
inc
cmps
ds
pop
add
sti
sub
iret
frstor
aas
pop
dec
mov
repnz
lea
sbb
push
fld
int3
xlat
cmc
leave
fisttp
push
push
(bad)
call
adc
js
jb
push
inc
in
pop
mov
pop
out
and
add
xor
or
stc
addr16
cmp
and
(bad)
aad
and
push
pop
push
xor
pop
clc
nop
xchg
ror
sbb
adc
jnp
(bad)
cwde
inc
add
cdq
(bad)
jb
inc
ret
cmp
loope
mov
pop
push
loop
xchg
mov
pop
inc
outs
mov
xchg
sub
movs
fistp
and
lds
xchg
mov
pushf
dec
inc
out
pop
int
mov
mov
inc
sub
sbb
rol
mov
bound
xchg
and
into
xor
inc
push
xchg
cmps
popf
loop
jge
fs
addr16
loop
mov
mov
mov
mov
add
and
cdq
gs
movs
sti
mov
inc
hlt
jns
dec
in
test
shl
dec
mov
or
and
inc
shrd
call
hlt
fsubr
and
retf
jb
sub
adc
cwde
jns
jb
ret
adc
sar
adc
movs
add
mov
fadd
and
adc
or
jno
out
inc
loope
jge
out
gs
bnd
jns
stc
jge
adc
mov
mov
sar
mov
pop
shl
xlat
inc
not
inc
mov
sbb
push
bound
push
and
dec
imul
add
mov
jge
adc
mov
xchg
or
jge
lea
lock
pusha
mov
add
sub
adc
mov
push
push
stos
pop
cld
and
mov
pop
iret
loop
fstp
int3
xchg
ror
jb
in
popf
imul
cmc
(bad)
push
push
xchg
dec
and
push
sub
scas
lea
jns
test
xchg
push
(bad)
in
fmul
shr
shr
cmp
arpl
sub
outs
mov
xlat
dec
stc
aaa
xor
daa
pop
sub
sbb
popf
cli
scas
push
sbb
loopne
inc
cmps
mov
mov
leave
fnsave
cmp
pusha
cmps
mov
cwde
cli
mov
mov
xchg
scas
rcl
cmp
dec
rcr
js
sub
mov
sbb
or
push
nop
push
mov
int
sub
xchg
fsubr
shl
mov
mov
or
push
xor
std
bound
dec
repz
ret
mov
push
jecxz
call
and
and
sbb
sub
hlt
add
dec
adc
aad
jnp
adc
nop
and
ja
or
add
cmp
push
mov
xor
mov
pushf
mov
sbb
mov
push
add
adc
xor
and
jno
ficom
sub
jge
jbe
outs
pop
cmp
pop
mov
mov
push
sahf
xlat
icebp
aam
scas
cmc
pop
fwait
xor
sbb
scas
fidiv
dec
bound
outs
pop
stos
scas
fucomp
mov
repz
mov
enter
or
data16
fadd
mul
pop
pop
aam
in
xchg
push
mov
push
xor
push
in
cld
adc
sub
arpl
cdq
cmp
test
cmp
cwde
dec
sub
clc
hlt
jecxz
push
cmp
stos
mov
mov
mov
dec
and
js
les
jbe
inc
repz
jne
push
imul
mov
inc
mov
aas
lea
dec
dec
aam
xchg
jmp
neg
arpl
cli
into
test
inc
das
hlt
mov
add
pop
add
fwait
(bad)
out
dec
je
dec
outs
adc
fdiv
shl
sub
xor
xor
clc
and
loope
das
cs
xchg
fldcw
sub
fst
out
sub
pop
mov
jns
push
jge
arpl
xchg
pop
out
into
ret
push
aas
mov
int
jmp
and
and
xor
call
xchg
in
sub
arpl
mov
mov
fs
sbb
outs
call
xchg
iret
popf
enter
mul
sahf
or
xor
int
or
mov
fisubr
test
pop
push
xor
popa
adc
mov
mov
repnz
into
hlt
cs
aam
(bad)
mov
lea
xlat
xchg
call
and
add
pushf
lahf
call
sahf
shl
cmp
mov
push
adc
int3
in
mov
aaa
(bad)
inc
jl
jmp
mov
jecxz
dec
pop
cmps
call
mov
in
test
mov
push
nop
inc
fst
xor
scas
imul
mov
movs
inc
xchg
jbe
cmps
push
mov
scas
daa
(bad)
repz
std
mov
jno
cwde
into
mov
shl
push
inc
ret
scas
stos
int3
ror
fwait
mov
jp
sub
cmp
or
(bad)
je
nop
push
data16
xor
outs
into
bound
out
and
push
lock
fdivr
retf
mov
push
idiv
cdq
pop
scas
test
dec
push
std
cmp
pop
cmps
in
jle
cwde
fwait
leave
cs
pop
inc
cs
adc
cdq
and
pop
jbe
out
mov
sbb
in
fmul
mov
iret
add
dec
(bad)
fdivr
lahf
dec
fs
mov
xchg
adc
ins
pop
mov
and
rol
mov
jae
pop
mov
add
ret
in
push
sub
inc
add
and
mov
data16
int3
push
adc
test
or
fst
add
or
outs
xchg
(bad)
or
jns
and
cwde
or
outs
loopne
popa
int3
test
sub
fisub
sbb
cmps
pushf
add
push
cmp
add
mov
pop
in
xor
sbb
xchg
jno
jl
fild
jg
sub
adc
(bad)
cmp
aas
into
popf
xor
aad
into
loope
xor
xchg
and
xchg
add
imul
pop
icebp
cmp
lds
cmp
pop
pop
push
mov
pop
in
ret
(bad)
(bad)
cmps
lds
(bad)
dec
(bad)
repnz
add
xchg
les
push
xor
jb
cmp
jmp
js
test
ss
addr16
bound
push
dec
retf
sbb
fs
mov
rcl
xchg
cli
sbb
in
stos
test
retf
cs
arpl
sbb
sub
retf
out
pop
push
mov
sti
jle
ja
imul
xor
inc
lahf
mov
mov
in
clc
aam
pop
dec
mov
dec
inc
in
call
fild
add
jmp
loope
icebp
aam
je
outs
dec
fadd
mov
adc
pusha
mov
int
iret
mov
push
mov
pop
call
xchg
dec
or
mov
cs
mov
mov
in
add
mov
xchg
repz
int
dec
sub
jbe
aad
fmul
or
mov
es
shl
hlt
sbb
or
xchg
mov
dec
rol
and
sub
cmps
pop
out
lock
leave
jp
enter
mov
imul
xchg
das
sbb
dec
neg
jnp
pop
adc
adc
cli
cmps
stos
sahf
jae
dec
mov
push
dec
jge
add
mov
xor
xlat
fbld
test
imul
outs
ret
arpl
mov
(bad)
and
inc
mov
rol
and
mov
mov
(bad)
ins
test
clc
ins
jo
aad
add
ret
xchg
jno
mov
xchg
int
mov
lods
dec
or
pop
push
retf
inc
jl
lock
int
ins
lods
push
sub
es
cmp
push
push
(bad)
das
push
sbb
jge
xchg
rcl
sbb
push
in
retf
push
cmps
imul
push
stc
mov
xor
or
sub
ror
pop
out
push
in
sub
pop
jns
cmps
imul
or
inc
cmp
aas
cmp
xlat
mov
pop
mov
pop
adc
cmp
xor
outs
or
std
scas
xchg
lock
mov
push
jp
push
popf
xchg
int3
or
sub
rol
(bad)
mov
mov
xchg
cmc
jne
or
xchg
call
test
ror
mov
pop
mov
xor
mov
(bad)
xor
ss
sub
hlt
xor
loope
pop
fwait
lahf
mov
add
pop
sub
cmp
scas
dec
jmp
pop
cmps
sbb
fld
loop
(bad)
xor
or
adc
jns
sbb
sub
popa
xor
inc
mov
mov
mov
fcom
dec
sti
imul
adc
add
mov
add
sbb
mov
(bad)
dec
inc
in
sbb
mov
data16
int3
js
in
out
sahf
inc
mov
inc
dec
inc
fwait
push
(bad)
call
mov
pop
add
dec
movs
dec
lods
out
ret
dec
pop
xchg
mov
adc
pushf
ja
adc
push
out
jo
xchg
mov
push
ror
jg
jmp
fidivr
sti
icebp
cmps
pop
or
mov
shl
jnp
adc
ss
sub
fstp
cmps
push
in
test
sub
in
mov
push
adc
push
sbb
dec
test
ret
shr
mov
std
inc
xchg
setb
lods
dec
pop
loop
pop
push
fcmovnb
repnz
add
test
mov
xor
mov
shl
mov
(bad)
cmp
push
cmp
inc
sbb
ins
sbb
test
js
loopne
push
jmp
cmp
aam
pop
adc
aaa
hlt
mov
inc
js
jnp
xor
mov
or
mov
push
aad
out
adc
jb
ss
sahf
mov
mov
test
cmps
pop
pop
sbb
cli
test
sar
fwait
aam
add
pop
pop
lock
out
sbb
dec
repz
fstp
jmp
sbb
arpl
sub
(bad)
adc
ret
gs
dec
push
test
or
xor
std
(bad)
(bad)
mov
nop
jmp
xchg
xchg
inc
in
pop
or
stc
pop
jb
aam
xor
imul
pop
jecxz
mov
inc
lahf
out
jae
out
mov
stc
sub
retf
jmp
inc
jg
fild
rcl
call
outs
shl
push
sub
jp
aaa
ja
aas
xchg
pop
aas
js
stos
adc
cli
inc
sub
push
push
dec
retf
aaa
push
sub
xchg
add
call
int3
xor
mov
xlat
and
jb
pop
push
pop
sub
test
mov
test
(bad)
xchg
shl
mov
out
cli
ss
iret
lods
pop
test
pusha
sti
popa
push
stos
fnstsw
outs
rcl
in
cmp
js
add
dec
in
pop
pop
lods
aas
adc
popa
mov
int
shl
mov
outs
or
repz
xor
dec
or
xchg
xor
mov
jle
mov
sub
mov
or
hlt
sub
fwait
repnz
xor
pop
inc
das
mov
std
fwait
adc
and
std
mov
add
sub
xlat
xchg
sub
sub
std
push
pop
add
push
mov
cmp
cmp
cmc
jecxz
std
fstp
imul
aad
adc
loope
push
call
es
xor
and
rol
call
scas
iret
outs
(bad)
and
int3
lods
jmp
cld
addr16
js
sub
inc
loop
(bad)
pop
jp
ins
and
or
pop
repz
cmp
jle
into
sbb
dec
sbb
sbb
loop
mov
call
jb
sub
test
inc
scas
nop
add
sub
pop
fcomp
lea
jmp
inc
or
cmp
(bad)
mov
xor
xchg
aad
jmp
xchg
xchg
ret
and
adc
push
pop
cld
ret
pop
es
fnsave
dec
xor
fs
mov
mov
cmp
pop
xor
mov
xchg
inc
adc
sbb
movs
sbb
shl
pop
in
repz
lods
and
stc
outs
out
sar
inc
in
cwde
push
mov
fistp
fadd
or
in
icebp
outs
lods
test
mov
out
ss
pusha
mov
(bad)
add
test
out
imul
repz
(bad)
std
sti
std
inc
pop
and
add
ret
and
mov
sub
ja
and
iret
popa
xchg
shl
jmp
or
call
or
push
add
pushf
daa
push
cli
mov
xor
sbb
xchg
sbb
aaa
xor
fs
xchg
sahf
das
fidiv
dec
xchg
fisubr
inc
out
cmps
inc
sar
jb
stos
sub
jl
push
jb
push
sbb
mov
cmps
jl
repz
add
cli
inc
inc
jecxz
cmps
dec
jge
std
mov
das
neg
int
push
loope
fmul
adc
ficomp
mov
loop
loope
push
movs
(bad)
and
call
pop
sub
stc
cmp
repz
pusha
in
xchg
and
pop
mov
repnz
mov
popf
mov
daa
and
into
cli
sub
mov
jle
mov
cmc
(bad)
ins
idiv
in
lahf
inc
or
add
sub
and
retf
dec
in
scas
fcomp
cmp
mov
push
ret
call
fcomp
push
dec
daa
xor
jb
mov
jmp
shr
mov
stos
retf
out
jecxz
jle
inc
aad
aas
into
movs
(bad)
sahf
out
fwait
inc
mov
scas
sub
and
add
add
imul
xor
push
xor
pushf
xchg
sbb
bound
jmp
cmp
repz
inc
in
or
cwde
mov
pop
xchg
pop
push
cld
pop
and
std
xchg
sub
mov
and
ficomp
nop
in
push
lods
inc
not
cmp
pop
stc
xor
pusha
cwde
jb
push
cmp
in
mov
jge
push
pusha
movs
inc
stc
shl
mov
fdivr
test
dec
cmc
scas
sbb
test
mov
or
enter
or
cmp
add
push
rol
bound
cdq
popa
jno
mov
movs
outs
bound
shr
sub
add
sub
inc
mov
out
idiv
jne
sbb
addr16
cmp
pop
xlat
mov
mov
bound
cmp
push
dec
jge
and
mov
pusha
cmps
cli
mov
mov
aas
bound
mov
pop
cmp
adc
loope
je
mov
cwde
dec
adc
neg
nop
daa
ins
idiv
into
or
and
cli
add
out
sahf
inc
jecxz
xchg
(bad)
bound
pop
dec
fs
cmps
or
into
repnz
paddq
jl
cs
push
or
dec
push
mov
or
or
cmp
xacquire
and
into
push
idiv
retf
mov
adc
mov
sbb
inc
aam
daa
cmps
cmp
mov
cmp
mov
adc
dec
call
cdq
sbb
xor
push
test
jmp
scas
sub
cmps
cld
mov
daa
xchg
jo
sub
clc
arpl
arpl
push
repnz
cwde
jmp
sbb
cld
mov
jp
and
dec
test
adc
jmp
mov
mov
ja
out
shr
inc
sbb
mov
popa
cmp
jmp
xor
jo
repnz
push
scas
out
or
jg
jmp
sbb
imul
dec
adc
jae
iret
psubd
(bad)
sub
or
inc
(bad)
(bad)
xor
push
push
les
in
mov
pop
cmp
pop
mov
xor
push
xor
stc
fisubr
aad
push
retf
jmp
or
ds
xchg
push
mov
icebp
imul
sub
movs
push
push
data16
rcl
scas
inc
jbe
or
ins
aad
and
(bad)
sub
and
push
ds
ins
jmp
ins
sbb
(bad)
inc
stc
adc
and
and
cmps
push
mov
imul
lea
mov
and
lahf
out
push
out
fwait
das
jmp
stos
mov
pop
fwait
jns
outs
icebp
mov
pop
dec
xor
enter
fcomp
cmp
xchg
mov
mov
mov
mov
mov
inc
push
mov
aad
int3
rcl
and
repnz
sub
cmps
cmp
sub
push
js
inc
pop
fsubp
xor
xor
adc
adc
push
xchg
scas
adc
pop
sub
(bad)
(bad)
call
pop
lahf
and
cli
add
enter
mov
(bad)
jge
fsub
(bad)
mov
(bad)
adc
fwait
add
sahf
mov
retf
sbb
dec
std
dec
loope
in
xor
shl
inc
bound
add
dec
mov
call
icebp
mov
aad
xchg
adc
test
mov
inc
iret
mov
mov
pop
fiadd
mov
jnp
mov
xchg
cmps
mov
pop
xor
lods
cmp
mov
loopne
cdq
in
jb
(bad)
add
test
mov
test
enter
int
jb
ins
xchg
aam
sbb
daa
lea
and
stc
jb
dec
movs
push
and
adc
into
pushf
dec
inc
jbe
int3
stos
(bad)
cmps
std
jnp
inc
push
xchg
arpl
mov
sub
das
sbb
aaa
inc
movs
aam
sbb
addr16
cmp
mov
dec
xchg
cli
adc
neg
cli
cmp
mov
(bad)
jno
fnstenv
ins
fucom
std
cmp
mov
adc
or
ins
xlat
sbb
xor
fldcw
adc
add
cmp
mov
mov
push
add
mov
mov
mov
jge
and
icebp
mov
sar
nop
ror
or
adc
pop
jae
adc
ds
ins
jmp
xor
hlt
imul
dec
jmp
ret
ins
sti
or
(bad)
ficomp
push
pop
aas
fwait
pop
loope
inc
int3
pushf
and
(bad)
fmul
inc
ret
mov
fild
stos
in
(bad)
sbb
mov
mov
mov
adc
xor
jne
pop
fs
or
iret
mov
arpl
push
addr16
pop
mov
ins
mov
ss
(bad)
mov
and
cmp
inc
(bad)
inc
adc
sbb
pop
xchg
fstp
icebp
fsubr
enter
add
int3
daa
adc
mov
nop
sub
cld
xchg
inc
jl
ret
pop
scas
cmp
and
sbb
imul
retf
adc
sub
(bad)
jnp
pop
loop
ja
sub
rcl
dec
dec
pop
ja
(bad)
(bad)
cmp
or
pop
mov
loop
aas
stc
movs
push
hlt
cli
pop
into
gs
push
out
adc
inc
adc
jp
push
sub
add
pop
mov
mov
cmc
adc
jns
inc
lods
int3
imul
pop
shl
inc
stos
push
add
inc
cli
lods
mov
lahf
push
fisubr
sbb
xor
out
mov
jns
inc
jmp
ds
xor
sbb
rcr
aad
sub
fbstp
les
aam
xchg
push
call
daa
pop
or
fld
or
nop
mov
add
je
in
and
sahf
cs
sbb
pop
sub
add
inc
mov
cli
jl
push
in
adc
retf
cdq
sbb
sbb
cwde
loop
sar
fwait
rcl
xchg
call
mov
fcmovu
test
mov
bound
sbb
movs
push
outs
mov
adc
stc
lods
pop
sbb
mov
jo
mul
cmp
cs
into
adc
mov
cs
into
xchg
or
inc
lds
mov
cmp
dec
mov
push
push
enter
jne
lods
popf
scas
mov
rcl
fucomp
inc
fsubr
bound
or
jns
xchg
or
jge
jne
push
jg
lahf
push
mov
xchg
or
mov
add
fimul
adc
mov
or
adc
out
add
adc
mov
pop
mov
sbb
sub
xor
les
fcomp
or
and
and
imul
mul
jp
pop
ror
and
das
gs
pop
jecxz
push
retf
mov
ret
int3
push
out
fwait
inc
(bad)
aad
dec
cmps
add
xor
mov
jp
or
mov
mov
ss
mov
sub
or
jg
pop
data16
inc
add
sti
mov
test
mov
mov
push
sub
outs
out
je
jns
mov
and
mov
out
or
imul
inc
jle
dec
inc
add
neg
or
std
mov
or
mov
(bad)
lock
inc
in
pop
add
shl
addr16
into
or
pop
xor
or
je
jp
jmp
jl
cld
push
dec
pop
pop
js
mov
iret
mov
fidiv
xchg
inc
push
pop
sub
inc
dec
adc
xor
ins
jns
mov
cmp
scas
add
mov
mul
iret
out
mov
cli
add
arpl
mov
cs
xchg
in
movs
xchg
daa
test
pop
rcl
sar
nop
push
push
ins
(bad)
(bad)
sar
add
aas
mov
lock
aad
mov
dec
add
add
jp
and
dec
je
sub
arpl
and
sbb
inc
xor
daa
scas
js
mov
push
inc
lods
pop
loope
push
cwde
and
in
mov
in
sub
pop
cmp
imul
xchg
jnp
push
adc
fcom
xor
scas
dec
dec
jbe
mov
movs
or
jg
shr
or
jecxz
pushf
cmps
scas
(bad)
push
dec
lahf
les
fsubr
adc
neg
push
stc
(bad)
mov
stc
sbb
pop
loop
or
fsub
sbb
push
cmp
or
xchg
sub
outs
inc
xor
mov
and
loopne
cdq
in
fstp
ret
inc
xor
(bad)
push
ret
arpl
mov
mov
add
and
jae
pusha
sar
xor
inc
gs
repz
out
pop
fwait
imul
push
sub
mov
or
(bad)
mov
inc
ret
mov
inc
pop
enter
lds
mov
js
dec
dec
jmp
inc
cmp
or
push
arpl
lahf
inc
cmc
sbb
jp
dec
nop
sbb
std
inc
mov
clc
xchg
pop
pop
add
dec
(bad)
lock
dec
push
add
pop
pop
mov
mov
sub
in
fsub
cwde
dec
and
add
test
fcmovnb
ss
lods
lock
mov
mov
mov
fbld
lods
add
(bad)
jno
jg
test
aad
mov
mov
pop
or
cmp
sbb
aaa
mov
and
xchg
sub
jo
in
call
or
nop
shrd
sub
in
cmc
cmps
test
test
dec
(bad)
loopne
or
aam
mov
pop
js
outs
fisttp
pop
add
push
in
mov
sbb
test
lods
mov
pushf
jge
out
and
idiv
movs
adc
push
hlt
loope
enter
inc
push
mov
movs
in
popf
add
adc
xchg
push
xchg
ja
and
(bad)
cs
rcl
movs
xor
lds
mov
movs
and
mov
sub
xchg
adc
(bad)
adc
sub
(bad)
jne
dec
pop
xchg
adc
sti
inc
sbb
loopne
ja
ins
stos
mov
daa
pop
hlt
ficomp
(bad)
test
iret
jl
jb
xchg
sbb
pop
pop
mov
inc
aas
cmp
jecxz
adc
loopne
(bad)
and
or
test
shl
rcr
jg
sbb
es
cld
test
ss
cli
adc
cwde
inc
or
or
retf
pop
mov
fstp
test
jg
dec
movs
in
mov
fsub
lds
xchg
xchg
(bad)
(bad)
(bad)
mov
retf
cmps
push
lods
dec
jne
aam
mov
sbb
out
cmps
hlt
out
and
das
call
mov
rol
xchg
into
dec
test
loope
imul
ins
and
lock
scas
pusha
xor
and
dec
inc
jle
fisubr
jg
mov
jl
xor
stc
or
dec
outs
xchg
cmp
adc
icebp
pushf
fbstp
clc
pop
ja
int
add
mov
scas
(bad)
imul
push
or
nop
push
cmps
xor
mov
movs
dec
mov
out
cmp
xor
in
sub
cmp
cmps
xor
cdq
cmps
mov
adc
pushf
mov
fist
sub
test
rol
add
push
inc
das
mov
dec
pop
jbe
jmp
or
into
iret
sti
add
pop
jg
(bad)
stos
retf
stos
jne
popw
jne
(bad)
mov
retf
xlat
jnp
xchg
push
or
mov
xchg
out
push
cli
mov
sub
in
cmp
mov
push
int3
and
jge
mov
ror
mov
mov
pop
movs
push
in
xor
shl
mov
arpl
loope
dec
dec
std
sbb
lods
add
adc
popa
inc
pop
cmps
sub
sbb
cld
das
sub
stos
inc
xor
clc
in
out
adc
hlt
fs
sahf
cmc
mov
add
std
int3
sar
mov
(bad)
repnz
popw
outs
jmp
cmps
mov
jbe
shl
stos
outs
into
mov
sahf
cli
scas
push
leave
inc
je
dec
and
push
aam
(bad)
adc
ja
lds
rcr
pop
mov
jmp
stc
dec
dec
aad
fstp
(bad)
call
test
out
inc
test
rol
fsub
daa
(bad)
inc
mov
sub
dec
fsub
and
dec
inc
xor
xor
add
push
fsincos
mov
loopne
dec
test
daa
lock
ins
jnp
imul
mov
jnp
jb
(bad)
cmps
fcom
ins
imul
jbe
sub
sbb
mov
inc
into
repnz
inc
(bad)
push
and
inc
adc
mov
sbb
jmp
sbb
retf
add
in
mov
pop
cmp
in
test
(bad)
dec
mov
push
outs
sub
out
add
xor
inc
sbb
mov
mov
mov
je
cmps
mov
jbe
call
push
xor
aaa
ins
dec
mov
es
lock
jo
enter
dec
fucom
and
and
xor
jmp
mov
(bad)
push
and
cs
jno
or
sbb
adc
sbb
lahf
movs
inc
mov
jl
sbb
aaa
cwde
fiadd
mov
and
jno
fs
fwait
xor
sar
add
jmp
jae
push
rcl
pop
inc
fcmove
push
mov
jno
(bad)
fcomp
xchg
call
sub
push
jns
js
mov
in
ret
mov
(bad)
cmps
mov
push
(bad)
stos
jbe
in
sti
add
retf
pop
out
loopne
pop
cli
enter
pop
add
cmp
mov
adc
mov
aad
in
(bad)
jl
cmp
jbe
loop
test
(bad)
push
ret
js
and
jnp
nop
out
pop
outs
addr16
test
mov
fisub
or
les
jb
outs
add
arpl
fwait
aaa
push
fcomi
sahf
and
add
lahf
lods
xlat
xor
mov
xor
mov
add
dec
sub
sub
popa
and
gs
int3
pop
dec
dec
ret
and
call
mov
ret
push
dec
bound
or
mov
(bad)
jae
(bad)
sar
mov
js
(bad)
add
sbb
aas
ds
cmp
xchg
inc
cmp
push
sbb
dec
rcl
fs
test
lock
loope
mov
scas
xchg
cmps
pop
loop
stc
imul
or
(bad)
or
neg
je
ins
(bad)
sysexit
mov
inc
sub
dec
retf
fdivr
push
pcmpeqw
fldenvw
mov
push
pop
imul
fimul
lods
xchg
mov
adc
sbb
cmp
jo
pushf
out
les
mov
sub
jmp
cmps
int
xchg
dec
leave
push
jb
movs
int
xchg
fldcw
por
mov
jbe
js
and
popfw
sub
xor
sub
bound
mov
out
xor
(bad)
lods
mov
or
into
jmp
mov
gs
fs
mov
push
pop
inc
mov
sub
jp
and
adc
push
or
cs
inc
xchg
dec
adc
pop
gs
(bad)
ret
jmp
pushf
xor
neg
mov
add
adc
dec
clc
xor
push
iret
test
mov
or
adc
imul
mov
outs
aaa
mov
fstp
adc
mov
mov
dec
xchg
sti
test
pop
mov
cwde
mov
dec
mov
sahf
rol
pop
ret
xchg
jo
and
mov
pop
sti
xchg
rol
stc
cwde
fs
dec
test
pushf
xor
jp
lea
xchg
int
xchg
outs
cld
mov
outs
js
cmp
adc
fst
test
ds
mov
outs
inc
cmp
leave
push
or
in
repz
popf
into
dec
xchg
xchg
call
lds
lods
and
movs
pop
dec
cmp
mov
mov
sbb
mov
xchg
push
int
jmp
sbb
jb
mov
sub
out
lfence
mov
mov
xor
ficom
jno
mov
inc
xchg
xor
int
js
and
imul
jg
cmp
(bad)
shr
xor
fidivr
xchg
scas
xor
loop
mov
clc
mov
lds
xchg
jns
sub
movs
leave
push
in
out
dec
fsub
lds
or
inc
cwde
(bad)
adc
aas
xchg
leave
mov
mov
sahf
sti
pop
dec
rcr
sbb
or
add
and
adc
and
pusha
daa
pop
out
mul
sar
sub
test
and
cmp
lahf
add
sub
inc
mov
stos
cmp
scas
nop
retf
or
adc
push
mov
jmp
and
into
cmp
or
outs
ins
mov
lahf
cld
sub
mov
push
cld
inc
pop
cmc
outs
mov
addr16
xchg
js
push
dec
mov
and
test
push
mov
adc
sbb
fimul
adc
stc
sub
mov
pop
jle
cmp
daa
arpl
pop
mov
arpl
pop
aaa
cmp
jecxz
mov
fidiv
ja
add
lods
xchg
xchg
cmp
aad
push
shl
or
lods
out
mov
movs
test
ins
jp
sbb
add
out
push
push
pushf
mov
add
xchg
fst
mov
jnp
mov
ret
mov
sahf
(bad)
sbb
cmp
test
push
mov
jnp
push
cmp
das
loopne
inc
pop
sub
sbb
jmp
stos
out
es
cs
(bad)
scas
pop
popa
dec
ficom
mov
aam
retf
sub
jg
outs
addr16
loop
out
inc
iret
push
inc
or
ror
jecxz
and
out
jge
and
(bad)
int
jl
pop
lock
cmp
mov
cdq
push
stos
cmp
jmpw
adc
fs
sub
jmp
js
jg
add
sbb
cld
fnstcw
je
sub
push
mov
(bad)
out
and
and
cmp
sbb
daa
sub
mov
sub
jo
fcmovu
pop
or
inc
push
into
enter
popf
cmps
xchg
mov
ss
daa
sbb
icebp
mov
call
or
cli
add
js
out
mov
cmp
sbb
pop
pop
test
adc
jmp
imul
sub
xlat
icebp
sbb
mov
(bad)
sub
ret
ss
jle
js
jl
loope
xchg
sub
push
pop
push
call
xchg
mov
mov
div
lds
gs
push
(bad)
clc
adc
dec
lock
or
push
addr16
inc
sbb
jno
mov
lahf
sub
dec
ret
dec
test
leave
fisubr
outs
outs
xchg
jae
jle
inc
(bad)
rol
shr
and
test
pop
jl
add
pop
dec
adc
add
out
push
push
test
cmp
mov
bound
sbb
das
lock
out
push
xchg
or
and
jne
std
mov
aaa
add
mov
sub
mov
ja
lahf
in
hlt
push
push
and
cli
cdq
jo
xchg
jno
sbb
ficom
push
inc
xor
imul
jae
mov
xor
mov
and
cs
call
and
idiv
xchg
dec
mov
cmp
jmp
in
ret
sub
inc
cmc
mul
jl
call
int3
sahf
xor
lahf
pop
push
adc
in
or
ror
test
xchg
scas
jmp
xchg
out
mov
lahf
sbb
fild
cmp
ror
mov
or
push
inc
jle
jno
cmp
ins
dec
xchg
inc
ds
aam
hlt
out
into
mov
(bad)
mov
push
movs
adc
cmp
dec
fwait
(bad)
sbb
xor
imul
in
sub
lods
pop
iret
inc
out
add
xchg
in
xor
jl
xchg
add
aad
and
xchg
ss
out
test
shl
jo
sbb
and
add
test
push
jnp
inc
mov
dec
sub
(bad)
popa
xor
inc
and
xchg
push
mov
les
add
je
retf
sbb
outs
push
ds
push
jne
cld
fisub
xchg
adc
xchg
iret
mov
or
mov
shl
cs
lods
clc
loope
call
fldcw
xchg
dec
mov
mov
jl
adc
and
pop
lahf
das
(bad)
rcr
and
les
ds
dec
xor
sbb
sbb
inc
cwde
mov
sub
inc
out
or
inc
sbb
inc
mov
call
push
dec
xchg
mov
movs
mov
fisubr
jg
sub
jo
scas
push
ja
sub
sub
or
inc
lahf
pop
mov
push
(bad)
test
jg
sbb
imul
jmp
je
(bad)
jle
int3
bnd
push
inc
enter
and
push
retf
cld
retf
aaa
les
push
inc
ret
jg
jge
inc
jl
movs
loopne
mov
push
in
dec
pop
(bad)
cmps
mov
push
nop
push
or
push
pusha
inc
call
sub
jmp
inc
call
out
mov
push
and
cmc
out
sbb
cmps
mov
or
cmp
xchg
pop
bound
push
and
mov
mov
popf
test
sbb
dec
out
pusha
pop
sub
push
xor
cwde
push
xor
cli
test
and
pop
add
inc
xchg
in
sbb
je
jl
lea
xor
sbb
ror
(bad)
mov
and
les
retf
sub
fdiv
jp
fnstenv
retf
adc
mov
out
ins
pop
retf
(bad)
push
(bad)
xor
dec
jecxz
rcl
scas
into
fsub
cmp
rcl
fwait
push
or
dec
cwde
fisttp
into
fmul
add
in
stos
or
jno
push
pop
cdq
pop
loope
das
add
sub
fisttp
in
inc
pushf
adc
jecxz
fnsave
ins
push
jp
call
add
xor
shl
cmp
js
mov
(bad)
dec
iret
std
sub
lds
xchg
std
imul
sbb
xor
xchg
stos
ss
sub
xor
or
sar
js
inc
xchg
xchg
mov
xchg
fiadd
mov
push
push
fs
and
adc
aam
inc
dec
adc
xchg
rcl
push
push
add
cmp
cmp
dec
mov
inc
lock
in
repnz
push
and
cmp
mov
push
(bad)
lock
mov
outs
shl
aad
(bad)
fld
mov
pop
xor
sahf
add
and
mov
lods
xlat
xchg
mov
enter
and
mov
xchg
pop
mov
or
jle
jecxz
sahf
mov
out
and
and
int3
add
fldenv
push
xor
pop
popf
pop
into
daa
mov
push
(bad)
mov
shr
data16
xlat
shr
dec
pop
xchg
stos
daa
daa
repnz
out
adc
cmp
fldcw
dec
ss
in
sbb
cmp
push
enter
xchg
idiv
adc
in
mov
aas
add
iret
in
inc
inc
xchg
pop
test
jg
or
pop
mov
jne
adc
or
push
rol
dec
jbe
jo
fcomp
dec
pop
mov
and
std
ret
pusha
fnstsw
mov
test
jne
mov
or
out
retf
mov
out
sub
cmp
jb
mov
cmp
xchg
mov
pop
xor
inc
push
or
mov
repz
inc
aaa
shl
not
push
mov
sysret
(bad)
sar
or
jp
pop
popa
mov
mov
rcr
or
or
(bad)
jle
shr
mov
inc
bound
punpckhwd
adc
xchg
lea
sahf
cmp
call
cmove
stos
dec
fwait
sbb
and
adc
stos
push
adc
ja
js
add
dec
or
sbb
gs
call
pop
jg
mov
push
cmp
std
and
ret
repz
sti
jecxz
cmp
jne
loope
test
stos
stos
in
(bad)
dec
sar
stos
cli
test
xchg
push
ds
adc
(bad)
ins
mov
mov
pop
mov
pop
imul
mov
mov
jo
or
(bad)
cmp
mov
xor
iret
inc
data16
add
mov
sub
in
bnd
shl
ds
or
push
push
mov
inc
mov
jno
adc
bound
jb
adc
sahf
popf
add
pop
enter
push
sub
cmp
pusha
mov
test
out
ret
jmp
rcr
nop
jg
mov
sub
in
mov
mov
(bad)
sub
xor
mov
push
jmp
pop
xor
adc
loop
mov
pop
mov
add
sbb
adc
mov
popa
jp
and
cmp
sbb
add
aad
or
lds
push
in
xchg
mov
mov
sbb
dec
xchg
enter
xor
push
dec
add
dec
cmp
or
sti
jecxz
sti
jmp
in
scas
push
or
outs
lahf
adc
pop
add
sub
scas
add
inc
jmp
in
jns
scas
shrd
scas
push
int
data16
ror
sub
les
inc
enter
loop
and
inc
push
sahf
fs
fwait
jb
rcr
(bad)
dec
sub
dec
into
inc
mov
cmps
out
xlat
cli
fcom
cmp
je
fsub
ret
jmp
pop
mov
or
stos
jmp
cmp
xor
or
rol
jmp
pop
xchg
mov
scas
mov
mov
fwait
mov
in
scas
add
jno
out
(bad)
mov
stos
inc
iret
cmp
sbb
sbb
scas
jp
adc
jecxz
xor
stc
jne
mov
(bad)
and
std
clc
jle
sahf
fld
mov
and
or
int3
sbb
mov
cmp
xlat
jns
das
add
aaa
push
xor
mov
xchg
jecxz
cmp
ja
pop
xchg
sub
push
jns
mov
icebp
aas
pop
dec
lea
sub
mov
mov
sbb
sbb
ins
aaa
mov
cmp
lahf
aas
stos
xchg
cmps
or
mov
call
sti
sub
fisttp
dec
outs
sbb
jle
out
fsub
leave
xor
jnp
pop
test
push
ins
adc
and
add
mov
call
fdiv
lods
out
lods
pop
mov
or
lahf
int3
jb
jb
out
mov
and
in
or
jns
mov
mov
sbb
enter
add
cmc
inc
sub
dec
mov
(bad)
ret
add
cmp
push
push
mov
sbb
jns
mov
out
shl
push
or
mov
jmp
icebp
cmp
push
shl
jle
sbb
das
(bad)
out
bound
imul
pop
pop
inc
sbb
loopne
jmp
mov
add
icebp
xchg
xchg
cmp
je
shl
out
ror
mov
pop
rcl
add
xor
ds
mov
inc
fidivr
mov
addr16
sub
and
ins
jbe
jmp
xchg
dec
xor
pop
dec
xor
lods
or
mov
jmp
shl
jmp
xchg
fcom
and
mov
or
iret
xchg
nop
jp
jmp
mov
add
in
aad
outs
jnp
xchg
pop
fist
aaa
lds
cli
in
pushf
push
mov
pop
add
fucomi
call
in
push
or
cmp
push
sar
mov
ret
jb
jmp
cs
xor
leave
pop
pop
fist
xchg
hlt
pop
jmp
pop
hlt
mov
iret
(bad)
test
in
sub
push
jg
shr
push
aas
ret
or
mov
mov
xchg
retf
stos
mov
jmp
stos
pop
outs
ficom
sub
cmp
push
div
fnstsw
xchg
and
dec
or
fnstenv
popf
leave
cmp
data16
stos
gs
mov
pop
shl
test
mov
ja
je
bound
xlat
loope
movs
or
add
sbb
fcmovb
pop
xchg
add
into
mov
ins
lock
pop
out
loopne
adc
inc
daa
(bad)
push
xor
test
fs
mov
sahf
in
sti
pusha
std
aaa
mov
shl
jl
out
add
sahf
cmp
jmp
(bad)
jns
push
jecxz
and
aaa
xchg
push
bound
mov
pop
push
sar
adc
add
jnp
sbb
cmp
and
add
retf
mov
(bad)
sbb
js
out
fwait
rcl
sti
daa
push
sar
mov
xor
in
cmp
xchg
int
int
test
jnp
pop
mov
out
mov
cmp
sbb
cmp
out
(bad)
ins
jge
inc
inc
push
sbb
dec
ret
ja
jne
mov
cmp
mov
mov
cmp
or
sbb
mov
std
lods
mov
push
cmp
add
add
and
xor
xor
dec
add
hlt
iret
imul
dec
add
jb
ss
and
xor
push
mov
dec
inc
and
dec
xor
or
push
jne
add
neg
mov
es
inc
mov
aaa
or
push
out
adc
jl
and
aad
jo
popa
mov
outs
or
mov
or
push
out
aaa
mov
cdq
sbb
scas
add
mov
push
push
jecxz
mov
scas
bound
dec
pusha
jnp
jp
aam
add
data16
inc
mov
mov
cmp
shl
mov
fnstsw
ja
dec
pop
jp
imul
arpl
scas
xor
test
popf
adc
adc
adc
dec
imul
pop
xor
loope
mov
mov
push
inc
sbb
cmp
push
jo
mov
pop
mov
mov
cmc
and
aad
sbb
sbb
jne
mov
pop
push
pop
lods
inc
push
push
mov
leave
nop
jmp
cs
xchg
jmp
inc
mov
hlt
test
lea
xchg
xchg
ror
push
cli
cmp
and
fisttp
dec
mov
mov
xor
sub
dec
imul
loope
stos
cmps
pop
mov
and
arpl
out
pop
call
shl
mov
mov
std
dec
cmp
and
mov
les
pop
inc
jmp
loope
pop
out
mov
cdq
and
push
xor
mov
iret
fstp
aam
adc
xchg
cli
mov
ins
mov
retf
retf
outs
into
push
repz
xor
mov
xchg
popf
sub
and
aam
stos
or
imul
push
mov
scas
add
jns
repz
cmp
std
xchg
arpl
inc
inc
call
jns
mov
stos
and
mov
xchg
aam
hlt
cwde
adc
xor
fiadd
mov
push
jmp
push
and
shl
pop
stos
sub
push
ret
mov
and
jmp
adc
mov
outs
mov
shr
add
mov
mov
sbb
iret
push
js
adc
(bad)
(bad)
std
sub
test
cmps
jae
or
xchg
jo
adc
adc
hlt
repz
call
push
xchg
xchg
cli
leave
mov
fld
cmp
stos
dec
or
pop
aas
xor
push
aad
sbb
pop
sbb
cmp
sub
jmp
ins
lea
sbb
sbb
ja
dec
jbe
add
mov
int
jno
pop
(bad)
push
xchg
jecxz
xlat
out
(bad)
call
mov
cli
jp
loop
mov
das
lock
(bad)
test
inc
pushf
fdiv
arpl
or
sbb
loop
xchg
sti
mov
(bad)
jbe
mov
mov
hlt
adc
addr16
aaa
mov
mov
xchg
and
dec
mov
jmp
jp
pop
xor
cmps
pop
and
and
and
dec
mov
loopne
inc
or
sbb
loope
adc
jmp
rcl
pop
sub
jmp
mov
shr
inc
inc
add
sahf
dec
data16
psraw
test
in
sbb
sbb
mov
clc
mov
push
icebp
cli
pop
sbb
inc
push
xlat
dec
sub
jmp
clc
and
xor
(bad)
call
sbb
pop
cmp
les
clc
adc
push
cmps
popf
popa
loopne
aas
(bad)
repnz
adc
lea
shr
enter
inc
call
xchg
daa
dec
mov
pop
add
add
lods
xchg
and
xchg
pop
aam
gs
and
pop
xchg
mov
lock
sbb
jle
clc
call
loope
pop
xchg
push
inc
shl
aaa
fidivr
adc
cmp
movs
imul
nop
add
dec
call
cmp
sti
push
jmp
add
aas
in
inc
mov
sbb
jmp
and
dec
fadd
jb
pop
jl
sar
jb
sbb
push
cdq
gs
pop
and
fdiv
dec
int3
out
xor
xor
sub
mov
pop
out
pushf
cdq
sub
jp
sar
mov
shl
xor
push
outs
aam
jge
in
cdq
ds
push
imul
repz
lods
xor
pop
jb
xchg
adc
ss
(bad)
dec
ins
cld
ret
adc
fstp
jl
sub
out
push
leave
(bad)
cmp
mov
and
fisubr
xchg
test
jmp
cmp
test
cmp
add
test
xor
fs
cld
les
fsub
and
adc
cmc
jb
test
and
pop
push
movs
inc
aas
cmc
aas
mov
cmp
fldcw
xor
fnstcw
call
loope
mov
cmp
pop
and
call
in
jmp
repz
inc
stos
pop
inc
cmp
popf
cmp
add
xchg
sub
test
or
imul
in
(bad)
fnstcw
mov
mov
adc
cmp
scas
jno
rcl
xlat
mov
push
rcl
nop
xchg
mov
jmp
sub
mov
or
lock
je
fistp
jnp
loopne
in
popf
adc
xchg
call
mov
cmp
in
push
test
pop
lahf
std
mov
push
ss
fs
sbb
movs
cmps
push
scas
ds
pop
jo
sbb
mov
sub
mov
in
loop
data16
xchg
daa
cmp
mov
pop
mov
xchg
add
loopne
(bad)
lahf
jns
not
out
inc
jne
rcr
dec
nop
dec
or
gs
ret
test
retf
mov
lahf
dec
sub
mov
mov
or
mov
sub
popf
mov
pop
retf
dec
cmps
mov
sbb
cmc
mov
or
dec
sar
push
xchg
inc
arpl
inc
fimul
mov
push
xor
mov
jbe
pop
sbb
and
xor
jne
cmp
out
sbb
pop
pop
mov
push
pusha
inc
int
cmp
xor
hlt
stc
xchg
fnstsw
add
adc
test
pop
cs
js
mov
and
aam
sahf
sbb
jl
pop
stos
xor
and
mov
lock
pop
scas
pop
add
mov
inc
push
std
jo
out
mov
sahf
and
jecxz
lods
out
mov
mov
jno
(bad)
cld
xchg
sbb
mov
aaa
bound
lods
mov
xchg
or
outs
or
add
retf
enter
ret
or
xor
inc
adc
mov
xor
mov
sbb
gs
add
mov
sbb
popa
(bad)
push
ins
mov
test
mov
in
retf
out
adc
cmp
sar
dec
and
adc
mov
and
test
inc
stc
push
pop
scas
adc
sub
and
push
enter
outs
xchg
inc
adc
ds
sub
arpl
call
xor
dec
shl
in
jl
mov
cdq
iret
rcr
mov
js
and
adc
in
jbe
out
dec
xchg
pop
pop
ret
cmp
outs
cs
clc
sub
or
mov
or
adc
arpl
sub
xchg
pushf
in
(bad)
cli
popa
retf
dec
jl
mov
pop
add
fdivrp
mov
(bad)
sbb
rcr
retf
sbb
jo
xchg
xchg
sub
lods
xchg
mov
mov
call
or
adc
xor
and
stc
sub
push
jp
fst
cmps
ret
add
pop
xor
sbb
push
inc
cmp
cmove
es
stos
ds
xchg
popa
jns
pop
dec
or
test
stc
fisubr
pmaddwd
sahf
mov
push
mov
dec
add
adc
push
(bad)
stos
jno
loop
mov
cmc
push
inc
cmps
int3
cli
mov
mov
test
out
inc
xor
push
inc
lea
mov
dec
shl
xchg
mov
add
stos
add
adc
ffree
mov
fsubp
adc
je
xchg
clc
dec
test
inc
cmp
call
pop
into
pop
dec
leave
and
jns
pop
sub
mov
or
xchg
mov
call
in
pop
jge
fst
cdq
xor
int3
(bad)
into
sub
mov
or
pop
push
mov
cld
das
hlt
jg
es
pop
std
pop
mov
lds
stc
rcl
cmc
fxch
in
pop
loope
out
sahf
jge
xor
jg
sbb
(bad)
adc
je
or
adc
retf
sbb
sbb
(bad)
cmc
inc
jne
je
aam
mov
rcr
mov
mov
mov
jg
add
jo
rcl
cmps
add
(bad)
cmp
fst
loop
dec
and
nop
idiv
adc
into
imul
retf
or
mov
imul
imul
lahf
(bad)
in
push
mov
mov
sub
gs
je
and
sub
mov
cs
fdiv
push
push
movs
push
fwait
adc
outs
xchg
inc
add
iret
cmps
dec
mov
into
outs
push
jns
mov
mov
repnz
jl
xchg
mov
scas
fnstenv
ja
jg
pop
cli
es
aad
push
aaa
ins
pop
mov
push
push
retf
test
mov
xor
pop
jl
sbb
cmp
sub
adc
daa
fild
xchg
pop
add
sbb
xlat
pop
in
or
xchg
imul
pop
sbb
movs
imul
push
rol
push
xor
imul
stc
pushf
out
push
push
mov
ds
jg
sbb
inc
aam
shl
lods
add
push
imul
adc
shl
or
xor
add
jge
js
ficomp
stos
jecxz
retf
sbb
pop
lods
cmp
or
je
fsubr
into
jns
loop
call
das
adc
sbb
mov
fsubr
dec
xor
add
cmp
jns
ins
inc
cmp
les
cs
js
cli
jecxz
stos
mov
in
and
fs
push
mov
test
inc
test
pop
out
inc
jo
setl
imul
push
mov
jne
int
sub
loop
mov
mov
jno
popa
fild
mov
outs
or
or
arpl
imul
ins
dec
cmp
sub
jmp
mov
add
and
loopne
sbb
sbb
mov
sub
jnp
push
xor
add
mov
test
add
mov
arpl
sbb
outs
(bad)
aas
cmp
test
sbb
mov
das
(bad)
hlt
cmp
jmp
or
jge
vldmxcsr
adc
mov
sbb
out
cmp
ds
mov
mov
push
fstp
scas
in
test
mov
push
jp
stc
es
aad
xchg
cmp
shr
cli
lods
push
sbb
test
pusha
xlat
cmp
lahf
(bad)
in
lock
bound
mov
daa
cmp
adc
int3
add
out
ins
dec
adc
sbb
div
adc
in
xor
jno
or
push
ficom
ds
gs
sbb
inc
mov
les
xchg
pop
imul
addr16
add
ins
scas
adc
fstp
stc
sbb
add
aas
inc
scas
pop
fwait
pop
inc
arpl
push
xchg
iret
daa
jnp
enter
xchg
(bad)
aaa
out
test
ins
push
retf
pop
sti
add
mov
or
xchg
push
mov
adc
cdq
xchg
pop
xchg
jle
and
jp
les
ror
mov
imul
out
mov
sbb
mov
pusha
sbb
pop
stos
inc
sub
and
sbb
pop
pop
adc
sar
shr
in
push
(bad)
sub
cmp
rol
out
mov
mov
cli
jmp
adc
or
jl
sbb
or
test
(bad)
lods
push
stos
jmp
std
enter
sub
xor
dec
mov
xor
fs
loope
mov
mov
jbe
dec
dec
fdivr
mov
xchg
(bad)
shl
mov
add
and
addr16
xor
pop
jno
adc
push
jne
(bad)
sbb
ss
outs
inc
out
xchg
cmps
imul
or
mov
xor
cld
sahf
xor
jl
mov
ja
jmp
cld
test
ja
retf
cmp
push
adc
outs
pusha
iret
inc
test
mov
call
pop
(bad)
push
xor
sti
ins
gs
mov
aam
es
jmp
loope
mov
loop
mov
out
sti
sub
pop
dec
jae
xor
xchg
popf
sahf
pop
sbb
mov
fcmovnu
or
outs
outs
call
(bad)
loope
jl
and
or
mov
cmp
aad
inc
inc
mov
icebp
mov
inc
or
sub
ja
cli
nop
push
pop
pushf
pop
fs
fs
sbb
stos
push
sti
dec
(bad)
mov
xchg
pusha
and
cmp
stos
fild
dec
sub
add
add
cli
or
add
fwait
stos
mov
xchg
jo
adc
cwde
and
inc
xchg
(bad)
push
cli
xchg
hlt
stos
(bad)
xchg
mov
nop
xor
xor
inc
push
int
imul
cs
and
aam
je
ins
sti
and
pusha
fld
cmc
and
dec
adc
add
call
stos
ja
imul
pop
xrelease
aas
(bad)
ficomp
shr
int3
and
dec
sub
scas
push
aas
mov
in
popa
cwde
mov
mov
fs
popa
loope
call
fs
push
es
mov
mov
iret
pop
test
cli
mov
mov
out
leave
pop
loope
xchg
sub
xchg
out
xor
stos
in
jne
popa
dec
mov
scas
out
or
scas
mov
js
(bad)
mov
shr
add
sub
and
xchg
sti
in
sti
jmp
retf
out
je
cld
loop
xor
xor
iret
sbb
add
xchg
cs
hlt
jno
mov
cmp
sbb
retf
or
test
fiadd
or
jae
push
pop
clc
retf
sub
or
stc
sahf
sti
(bad)
cdq
sub
leave
iret
cmc
cmps
mov
xchg
mov
adc
les
xchg
retf
(bad)
xchg
or
xor
ds
inc
cmp
jmp
sbb
aaa
jle
inc
loop
push
mov
dec
neg
jmp
mov
xchg
jae
scas
xchg
imul
lods
js
mov
popa
aam
pop
sub
xchg
ficomp
cmp
cmps
and
cmps
and
dec
out
hlt
pop
popf
sub
and
ins
das
aad
jns
push
in
push
push
pop
mov
iret
stos
leave
clc
aas
pop
mov
add
(bad)
in
iret
(bad)
retf
xchg
cmps
out
jbe
imul
idiv
cmp
inc
fidiv
mov
fabs
mov
rcr
mov
lahf
cmp
psubsw
cs
xchg
stos
inc
ficomp
arpl
je
in
into
push
and
and
jmp
scas
arpl
cs
xor
pop
fwait
cmp
in
push
lods
adc
xor
push
aaa
daa
sub
shr
cmp
loopne
cwde
lahf
iret
data16
pop
fistp
inc
jle
lea
mov
push
xchg
push
jnp
ss
fisttp
int3
fcomi
fsub
add
xchg
stos
ret
add
(bad)
or
cdq
ja
push
fidiv
lods
sub
lds
arpl
daa
fldenv
add
mov
movs
(bad)
and
xchg
sub
pop
inc
cli
jo
jae
mov
mov
sti
adc
mov
add
push
jg
jns
(bad)
shr
cmp
enter
aaa
push
loope
gs
movs
add
push
shl
dec
jle
popf
push
add
dec
dec
int3
popa
ins
inc
add
sbb
pop
js
push
mov
std
sbb
stc
or
adc
retf
jge
shr
lock
mov
or
dec
cmp
sbb
sbb
and
daa
cs
adc
adc
jle
inc
stos
sti
test
inc
sbb
jecxz
mov
stc
stc
mov
cmp
stos
dec
sbb
pop
dec
push
ins
imul
jle
pop
inc
pop
gs
dec
fimul
adc
(bad)
sub
xchg
nop
inc
xor
daa
ja
in
lods
stos
push
inc
pop
mov
or
push
int3
clc
(bad)
cld
cmp
xor
inc
sbb
jl
cwde
sub
mov
or
dec
push
sbb
lds
xor
mov
add
ins
mov
mov
sbb
and
out
pusha
mov
bound
fisub
xchg
das
or
pop
inc
add
in
cdq
and
leave
and
adc
lods
mov
mov
pop
mov
dec
or
into
inc
inc
stos
jno
dec
aaa
push
xor
in
leave
imul
add
sub
out
retf
jno
inc
outs
inc
loop
jbe
push
jb
fnstenv
cs
test
daa
mov
inc
mov
into
jecxz
rol
fidiv
cmp
inc
int3
jb
lods
jae
sbb
jg
cs
xchg
mov
push
ret
mov
xchg
addr16
add
clc
push
inc
lods
adc
popf
or
arpl
imul
or
rol
push
sbb
test
jns
pop
xor
(bad)
fimul
lods
mov
fcmovne
xchg
and
lea
xchg
xor
mov
mov
loop
mov
cmp
pop
or
sub
(bad)
cmp
mov
pop
jo
das
mov
test
ficom
xchg
(bad)
shl
add
in
mov
push
data16
movs
or
pop
stc
add
push
pushf
push
aaa
dec
mov
stos
or
pop
ins
cmps
ja
out
jg
xor
sbb
fstp
mov
mov
cld
sub
loope
jbe
pop
(bad)
mov
mov
les
mov
call
out
jmp
mov
jmp
mov
out
xchg
cmps
mov
push
add
xor
pop
and
sar
inc
mov
jmp
push
and
pop
cld
jnp
daa
shl
jb
mov
sar
mov
sbb
sub
shr
xchg
daa
in
popa
inc
push
mov
push
dec
(bad)
adc
mov
xlat
test
adc
popa
fwait
pop
adc
stc
arpl
xchg
sub
pop
fcomp
fisub
pop
push
mov
daa
sub
arpl
pop
inc
mul
(bad)
mov
aad
into
xchg
dec
aas
pushf
loopne
aam
jmp
xchg
shl
cmp
mov
jmp
ins
in
ror
mov
mov
mov
popf
retf
adc
test
xor
mov
into
in
add
sub
xchg
pop
rol
and
jne
adc
outs
ret
dec
mov
mov
div
loop
cld
dec
(bad)
enter
enter
push
cli
cmp
in
rcr
ror
shl
ins
mov
jp
jl
idiv
push
fidiv
dec
cmp
xchg
inc
jg
mov
push
into
retf
retf
leave
and
jmp
xchg
out
call
(bad)
xlat
cwde
ins
dec
jecxz
in
(bad)
icebp
into
xchg
leave
or
jp
outs
icebp
mov
fwait
lea
retf
int3
mov
scas
jg
mov
cdq
and
out
aas
and
jnp
add
or
out
lock
cmps
mov
push
addr16
mov
aas
mov
iret
std
mov
js
and
pop
or
in
inc
ins
dec
iret
jl
mov
and
cmp
fbld
jne
mov
push
pop
hlt
adc
mov
or
pop
ins
outs
rol
pop
jge
mov
les
sbb
push
cmp
mov
test
sub
and
popfw
fwait
ja
mov
dec
cmp
test
jns
sahf
inc
es
imul
xchg
mov
mov
out
in
hlt
nop
lods
sbb
retf
push
pop
sbb
pop
shl
icebp
das
mov
mov
or
cs
pushf
lods
jae
ins
push
cld
loop
jmp
or
gs
leave
out
mov
adc
sub
mov
stos
xor
xlat
jnp
ja
push
inc
int3
push
mov
push
sti
mov
dec
popf
jge
imul
lahf
(bad)
rcr
loope
popf
pop
mov
daa
ins
or
(bad)
inc
into
ror
test
jmp
nop
pop
cmps
rcr
sub
nop
cmps
neg
lods
outs
pop
fwait
popf
lock
fiadd
xchg
xchg
xor
cmp
mov
add
call
add
pusha
(bad)
retf
jae
fadd
das
lds
xor
jae
push
rol
xor
in
test
xor
in
outs
xchg
frstor
jmp
xor
dec
daa
sub
push
or
ret
mov
and
mov
jno
repz
pop
xchg
movs
jl
jl
xchg
add
out
imul
repnz
cmps
je
loop
fdiv
xchg
ins
add
test
add
jp
pusha
mov
ss
iret
jb
and
dec
jo
add
mov
pushf
sahf
stos
sbb
pop
fmul
cmp
ins
add
inc
sti
mov
jle
push
mov
cdq
(bad)
and
pop
inc
into
mov
mov
cmc
push
cld
push
add
adc
inc
xlat
and
repnz
clc
fist
jae
ror
lds
inc
shr
or
stc
out
leave
push
inc
push
outs
and
push
add
das
int
jo
or
xor
movs
in
scas
(bad)
pop
in
test
outs
stc
jmp
pop
jb
push
pop
outs
mov
ret
mov
adc
addr16
push
call
cmps
aam
mov
icebp
iret
and
or
adc
sti
leave
dec
mov
in
imul
retf
jb
loopne
xchg
ins
loope
dec
lds
dec
in
fdiv
cli
enter
hlt
shrd
pmulhuw
pop
outs
add
adc
(bad)
mov
test
inc
ret
add
push
mov
fbstp
in
outs
inc
aas
adc
sbb
push
xchg
mov
arpl
jnp
push
(bad)
sub
popf
xchg
xor
ret
test
sbb
dec
rcr
test
(bad)
std
sbb
and
xor
lahf
xchg
in
sub
dec
inc
push
jmp
or
inc
pop
and
cmc
ret
sub
ret
mov
add
test
mov
test
in
sar
xchg
sub
jge
xchg
xchg
jo
enter
out
fcomp
sub
mov
mov
sbb
lahf
inc
ins
fs
repz
retf
js
lock
dec
scas
into
shr
fist
sub
sbb
sub
aam
fstp
or
aaa
clc
cwde
xor
sahf
xchg
inc
inc
in
cmps
xlat
ror
inc
ror
in
cdq
xchg
ds
jp
in
sahf
scas
scas
jbe
mov
jne
and
test
std
fisubr
mov
sbb
stos
mov
ret
and
(bad)
sbb
out
stc
inc
push
mov
jmp
out
popa
inc
jmp
dec
(bad)
sbb
js
rol
mov
and
sub
pop
pop
fdiv
cmps
or
mov
jno
pop
out
loopne
adc
sbb
repz
loopne
add
adc
push
jno
in
cmp
cmp
pushf
test
int3
push
scas
mov
fnsave
mov
xor
inc
xor
dec
inc
jecxz
xor
lea
mov
fcmovne
xchg
ins
and
out
mov
push
mov
mov
shr
add
add
lods
aam
jo
inc
lea
sbb
nop
cmps
add
sub
cmp
xchg
jmp
cmp
test
mov
pop
call
push
shl
ret
movs
out
and
call
sbb
stos
fs
loop
or
sub
push
xchg
mov
das
js
inc
dec
sti
addr16
test
jb
mov
dec
add
inc
mov
lock
js
push
xchg
dec
ja
mov
pop
cmp
jmp
pop
xchg
retf
aaa
adc
jg
imul
jnp
iret
inc
push
mov
addr16
sbb
in
in
fcom
inc
add
(bad)
sbb
dec
inc
xor
xor
repz
jne
sub
test
pop
adc
sub
aas
es
mov
icebp
int
or
jg
dec
and
lods
shufps
mov
mov
mov
mov
sbb
sub
add
fimul
pop
xchg
push
jo
push
daa
test
mov
xchg
pop
inc
mov
repnz
pop
outs
and
test
mov
cmp
sub
ret
test
dec
(bad)
sar
loope
jnp
shr
shl
rol
cmp
out
std
mov
cmp
repz
push
ds
aad
fmul
outs
push
imul
jmp
and
xchg
repz
and
dec
movs
xor
mov
(bad)
scas
push
pop
xchg
push
push
(bad)
cmp
xchg
cmp
fdiv
stc
mov
and
enter
push
fcom
sti
(bad)
pop
push
mov
sub
ins
dec
jmp
loope
pop
in
add
fisttp
or
imul
cdq
jo
xchg
retf
mov
add
in
adc
jbe
mov
add
or
push
pop
outs
xor
retf
push
icebp
push
out
(bad)
pop
nop
out
sahf
test
ins
jns
inc
stos
clc
mov
push
add
mov
ss
pop
in
jl
mov
dec
adc
mov
cmps
shr
mov
daa
dec
mov
mov
jo
and
outs
cmp
idiv
inc
mov
push
outs
and
inc
mov
imul
dec
lahf
jb
sub
out
push
cli
adc
push
xor
mov
in
lock
sub
mov
push
push
shr
into
nop
inc
adc
jno
jge
sub
std
fimul
lock
xchg
mov
fldcw
dec
call
enter
xchg
arpl
stos
sbb
push
dec
fmul
sbb
cs
mov
addr16
add
add
cmp
push
mov
out
jmp
xchg
or
push
and
lods
sub
sbb
inc
adc
push
imul
mov
into
test
add
xor
int3
and
(bad)
jns
ror
not
fadd
sbb
mov
cld
jl
inc
rcl
sub
xchg
ror
test
fdivrp
add
lahf
test
xlat
add
and
fcom
adc
sbb
sbb
test
push
pop
or
mov
pop
sahf
or
jnp
and
icebp
loop
mov
ror
mov
iret
outs
pop
push
xchg
jge
hlt
imul
cmc
shr
inc
fs
xchg
dec
xchg
pop
and
mov
inc
dec
int
sahf
push
lds
repz
pop
mov
nop
sbb
int
inc
cs
(bad)
xor
mov
sub
push
sbb
daa
cld
dec
aam
ret
(bad)
jmp
hlt
xchg
xchg
jp
mov
lock
movs
pop
cmp
popf
add
add
pushaw
ret
jl
dec
ret
int3
inc
push
les
int
inc
xchg
out
cdq
daa
push
mov
aaa
push
xor
cli
daa
sti
xor
mov
sub
jp
add
ficom
jne
repz
outs
les
add
and
sbb
add
cmp
(bad)
sar
mov
mov
scas
mov
mov
(bad)
sub
push
xlat
retf
dec
test
aas
pop
int3
fsub
or
outs
mov
adc
pop
out
mov
xchg
ficom
outs
pop
and
mov
nop
pop
xchg
bound
aaa
sbb
mov
and
cs
out
or
mov
and
fdivr
retf
data16
in
xor
jbe
xor
xor
cmp
les
push
adc
sub
and
or
repnz
test
loope
leave
mov
out
cmp
lock
sub
mov
(bad)
movs
xor
mov
mov
test
pop
push
pusha
pop
stos
neg
inc
jbe
aas
inc
add
test
or
jbe
mov
jge
cmps
adc
out
test
dec
test
outs
cmp
or
add
pop
fldenv
sar
pop
hlt
pushfw
js
sub
sub
mov
and
in
ds
adc
popf
adc
xor
test
arpl
je
dec
adc
test
test
mov
sub
dec
sbb
pop
mov
dec
pop
aam
cmp
imul
xor
mov
pusha
repz
cmp
pop
pop
addr16
mov
clc
stos
leave
cli
push
jmp
jbe
enter
dec
mov
and
dec
test
pop
cmp
or
sub
aam
sbb
shl
inc
sub
add
cmp
pushf
imul
sbb
xor
in
inc
jmp
out
adc
jge
sti
xchg
imul
sbb
in
test
mov
xor
test
das
lock
adc
popa
int3
add
cmp
call
loope
mov
and
jo
mov
rcl
test
push
mov
mov
lods
jno
jmp
mov
pop
popa
in
out
mov
adc
out
dec
pop
mov
mov
in
and
or
retf
or
and
pop
cmp
ja
xor
loope
in
mov
(bad)
ja
inc
inc
push
push
out
inc
or
jge
ret
cmp
jge
sub
adc
jo
or
and
xlat
push
cs
mov
jecxz
jae
adc
xor
fstp
imul
push
cwde
arpl
dec
xchg
imul
sbb
movs
add
mov
not
out
jecxz
add
push
mov
fmulp
das
dec
push
jmp
ins
nop
retf
xchg
mov
push
div
mov
xor
mov
aas
push
xchg
xor
test
add
enter
mov
in
call
cmp
hlt
std
pop
push
xchg
cld
fdiv
and
lods
mov
sub
xor
push
(bad)
jo
mov
add
scas
dec
push
icebp
(bad)
rcr
xchg
not
(bad)
xor
sub
loopne
pusha
into
mov
pop
es
adc
pop
mov
loopne
pop
pop
mov
int
clc
push
cmp
sbb
mov
test
test
popf
clc
ins
sub
jnp
xchg
push
mov
mov
jnp
jbe
push
mov
scas
outs
fidivr
out
pop
cmp
aam
imul
xchg
in
ret
je
fwait
xchg
rol
mov
dec
mul
fdiv
inc
add
jbe
je
inc
test
push
rcl
pop
adc
ss
push
dec
pop
jb
dec
es
scas
sub
add
in
pop
loopne
mov
adc
paddb
adc
mov
ja
cmps
push
scas
inc
push
pop
xor
and
dec
pop
in
inc
inc
call
enter
fcomp
dec
xor
xor
jg
out
ret
cmp
adc
cmp
jmp
cmps
or
repnz
popa
sub
out
movs
push
mov
dec
(bad)
sar
xor
addr16
pop
aas
mov
les
lods
fpatan
mov
rcl
(bad)
pop
xchg
aas
cdq
fs
inc
mov
shr
mov
xchg
out
add
bnd
stos
cmc
int3
xchg
xchg
mov
dec
lods
xor
aad
push
jmp
imul
ins
adc
mov
adc
popa
shl
ins
pop
cmc
sbb
test
into
pusha
push
cld
push
mul
adc
mov
push
add
push
and
in
jno
ja
inc
sbb
dec
mov
inc
repnz
cmp
and
loope
pop
neg
loope
es
outs
inc
push
adc
jo
mov
sbb
or
call
add
add
or
nop
sub
leave
xchg
aas
jne
xlat
push
test
dec
xchg
cmc
sub
aaa
rol
loop
call
test
shl
out
icebp
je
mov
mov
xchg
inc
inc
mov
in
add
sbb
mov
xchg
ja
cmp
repz
loopne
fwait
mov
adc
push
in
mov
pop
movs
jno
cwde
outs
jbe
xchg
idiv
in
and
adc
rcr
icebp
inc
mov
or
cmps
idiv
dec
cmc
bound
sahf
mov
clc
imul
fldenv
test
ret
int
shr
test
call
enter
inc
xor
xor
dec
and
(bad)
sbb
stc
shl
(bad)
add
mov
xor
sub
and
lods
enter
ds
shl
and
outs
fs
retf
stc
call
cmp
std
cmp
and
jp
idiv
je
add
aam
add
ret
mov
mov
inc
pop
jno
sub
fst
sbb
shl
pop
std
les
xor
adc
jne
pop
lea
cmp
test
add
int
add
xchg
sar
repnz
lock
pusha
cmp
inc
paddsb
shl
jnp
ds
push
out
(bad)
stc
lods
or
or
mov
cwde
dec
jo
add
outs
or
cdq
mov
scas
stos
test
fcomip
add
icebp
xchg
push
lock
lods
(bad)
sub
gs
in
stos
pop
icebp
je
fisubr
mov
movs
push
imul
pop
pop
cli
sahf
fwait
jl
add
inc
cli
test
push
es
inc
jo
test
and
inc
loopne
jb
sti
cmp
or
push
loope
mov
arpl
jns
jae
ins
cmps
lods
int
cmp
sbb
push
das
bound
push
dec
das
pop
cdq
loop
adc
cmps
mov
cmp
push
add
mov
inc
push
mov
hlt
lea
and
cmp
fwait
ret
lss
fsubr
xchg
xchg
inc
jns
mov
mov
inc
push
push
cld
scas
sbb
and
push
stos
xchg
inc
xor
mov
lds
cwde
lock
cdq
mov
fwait
scas
cmp
adc
shl
mov
and
dec
test
xchg
push
or
cs
mov
cmp
add
sub
or
movs
xor
pop
fld
mov
sbb
test
inc
dec
adc
jecxz
adc
lods
xor
cdq
nop
and
inc
mov
mov
mov
call
sub
out
add
jl
lods
cmc
ins
or
mov
dec
shl
adc
xor
rol
fld
mov
jle
adc
mov
pop
arpl
lock
dec
lock
ja
lock
retf
ja
add
mov
xor
jmp
dec
inc
or
lods
mov
test
ins
dec
gs
retf
inc
ins
add
ret
test
das
cmp
(bad)
rol
mov
aad
es
sub
xor
out
mov
mov
mov
cmps
gs
sbb
pop
fistp
xor
xor
rol
mov
xlat
sbb
cmc
cmps
mov
int
outs
in
into
cmps
sub
sub
mov
addr16
nop
add
fist
jge
int
dec
in
rcl
hlt
dec
xor
mov
scas
(bad)
adc
dec
push
mov
imul
outs
add
lods
clc
repnz
rcl
test
hlt
dec
add
repnz
cmc
nop
dec
in
add
jo
xor
add
push
jg
repnz
sub
lods
shr
push
sub
dec
sub
dec
push
addr16
test
fld
xor
push
test
pop
cdq
std
mov
cmp
jns
arpl
cmc
call
call
jo
or
jle
loopne
popa
lock
push
faddp
bswap
mov
icebp
mov
mov
iret
dec
rcl
jle
push
mov
fld
xchg
and
xchg
test
mov
js
xchg
and
(bad)
xchg
test
icebp
(bad)
jmp
mov
dec
in
mov
sub
loop
mov
xchg
test
dec
dec
(bad)
movs
sbb
push
sub
mov
call
mov
sub
outs
(bad)
sub
xchg
je
out
mov
inc
xor
les
out
pop
iret
cmp
dec
jo
scas
mov
mov
repnz
(bad)
jne
addr16
dec
inc
pop
add
stos
mov
dec
inc
imul
cmp
in
jae
xchg
cmps
mov
or
cmp
mov
jno
ret
inc
xchg
sub
ror
xchg
hlt
sub
mov
cmps
inc
or
in
cmps
scas
add
into
inc
push
aad
jae
sti
imul
sub
add
cmp
(bad)
sbb
push
adc
mov
sub
jnp
and
lods
outs
ja
aas
or
lods
cld
and
movs
test
jmp
push
sub
dec
in
xlat
test
fdivr
dec
fst
or
sti
sbb
loopne
or
or
popa
xchg
mov
les
sub
mov
inc
cs
lods
ss
shr
inc
scas
pop
icebp
out
mov
div
aad
xchg
and
ret
sub
(bad)
xor
and
jbe
cwde
fs
mov
xor
stos
pop
imul
repz
std
loop
ja
and
mov
cwde
mov
cmps
cld
adc
mov
cmp
or
ficomp
jle
(bad)
push
xlat
les
jne
pop
jne
movs
dec
je
ins
pop
pop
outs
or
xor
xchg
push
mov
or
cmp
jmp
ja
sub
jne
(bad)
or
ds
xchg
pop
jmp
inc
pop
mov
cmp
leave
repz
adc
and
fmul
inc
test
ins
out
fldcw
cmp
add
add
sbb
xor
xor
lods
xor
aas
mov
sbb
cwde
popa
rol
nop
lds
std
arpl
xchg
dec
int
in
cmc
jg
aad
ins
pop
fs
fwait
arpl
cli
lock
xchg
ret
inc
add
retf
scas
xchg
xchg
idiv
pop
cli
aam
push
and
mov
sahf
loopne
ficom
mov
adc
pop
mov
inc
push
retf
dec
mov
fcomp
out
call
cmc
mov
jg
cmp
sbb
nop
sub
repz
in
ss
rol
pop
add
lea
jl
cmc
jo
movs
pop
repz
jecxz
pop
or
add
xor
enter
aas
push
add
aas
cmp
mov
pop
adc
inc
movs
shl
push
div
mov
xchg
out
test
jmp
retf
addr16
mov
int
dec
popa
push
and
frstor
dec
aam
sti
dec
push
pop
cli
push
xchg
and
test
loope
mov
pop
aad
dec
leave
push
ror
fwait
and
xchg
push
inc
push
lea
add
daa
sub
in
out
mov
mov
xchg
and
out
es
dec
xor
mov
test
sahf
test
cmp
xlat
cmps
shr
adc
inc
scas
add
jae
push
aam
retf
inc
(bad)
(bad)
jmp
retf
jg
out
mov
shl
mov
push
jbe
bound
test
xchg
daa
mov
mov
iret
push
into
js
dec
adc
stc
(bad)
xchg
adc
push
mov
js
mov
push
push
shl
in
not
mov
sahf
push
sbb
add
pop
or
mov
pop
pop
xchg
cmp
adc
mov
inc
push
stc
test
(bad)
mov
xchg
mov
movs
out
sub
loope
mov
push
mov
jnp
(bad)
sbb
pop
das
mov
cmp
jle
ins
adc
adc
xor
out
test
cmp
mov
and
(bad)
out
outs
out
int3
loop
mov
mov
shl
dec
adc
pop
and
cmp
adc
mov
popf
xor
cdq
mov
add
nop
cdq
aaa
sub
inc
ror
dec
popa
add
or
stos
xchg
ficomp
and
cmp
sbb
mov
sub
sbb
add
jns
mov
cwde
push
dec
shl
fwait
aad
(bad)
repnz
(bad)
retf
int
lods
stos
dec
adc
xchg
mov
xchg
pop
shl
imul
sbb
xor
rol
xor
popa
push
mov
data16
mov
adc
shl
pop
mov
push
call
mov
mov
es
sahf
push
int
mov
(bad)
aam
ins
mov
sub
sbb
cmp
rcr
aas
sahf
bswap
sub
cmp
dec
dec
xchg
inc
add
ror
scas
inc
outs
arpl
ss
mov
adc
loopne
jno
fwait
sub
clc
add
fs
sbb
nop
adc
loopne
pop
cmp
out
pushw
adc
jne
push
xor
mov
pusha
lahf
aam
rcr
pop
sahf
or
scas
in
leave
xlat
cdq
int3
push
out
and
fisttp
dec
xchg
xchg
repnz
not
cld
xor
mov
in
jl
push
nop
ins
(bad)
jo
inc
sbb
sub
mov
add
cs
add
sbb
fldcw
ficomp
dec
jl
cmp
mov
jnp
clc
push
(bad)
idiv
cmp
xor
push
outs
or
pushf
js
or
fs
mov
xor
ret
mov
sar
pop
inc
out
fs
lock
pushf
cmp
adc
sahf
sar
dec
or
or
mov
aad
dec
mul
or
inc
mov
ror
rol
ins
addr16
ret
xchg
dec
cld
or
mov
leave
sub
mov
fimul
nop
shl
jnp
xor
mov
adc
mov
prefetch
cs
cld
mov
mov
cmc
jb
cmp
jae
int
add
(bad)
pop
dec
xchg
jae
popf
sub
dec
rcl
(bad)
cmp
push
sar
rol
mov
and
test
and
and
fist
scas
pushf
int
in
js
pop
xchg
xor
out
mov
fxch
and
(bad)
div
enter
in
jl
mov
aad
call
shl
test
inc
push
retf
mov
scas
std
or
add
je
int
shl
mov
push
xchg
fimul
shl
ss
push
test
jle
push
add
mov
and
mov
add
fwait
shr
cmc
mov
xchg
iret
stc
or
push
adc
mov
dec
sbb
xor
pop
mov
mov
in
ror
iret
cwde
inc
jl
jo
and
adc
push
lods
cmp
mov
add
(bad)
sub
imul
pop
mov
dec
inc
fld
dec
push
push
leave
inc
mov
popa
and
mov
push
pop
sbb
sub
icebp
mov
add
clc
rcr
cmp
dec
ret
mov
jl
ss
iret
add
pushf
mov
dec
in
mov
les
stos
xchg
mov
ficomp
xor
lock
fwait
adc
pop
jae
outs
cmp
ret
addr16
mov
mov
mov
aam
cs
mov
mov
gs
push
mov
xchg
xchg
jbe
sub
js
aaa
xor
in
mul
xor
out
mov
dec
cmps
jge
icebp
add
shl
addr16
cs
jl
fisttp
sbb
mov
mov
iret
in
add
adc
add
sti
cmp
icebp
addr16
dec
sbb
push
adc
xchg
xor
pop
movs
dec
mov
mov
cmp
inc
daa
mov
xchg
xor
jecxz
cmp
mov
push
out
rol
cs
push
or
xlat
fidivr
xchg
adc
cmp
mov
lahf
push
sbb
inc
cmp
dec
jle
enter
aam
cmp
mov
in
aas
loop
inc
and
dec
cld
out
mov
inc
pusha
test
or
jl
aam
cli
sbb
mov
or
jp
pop
cmp
mov
imul
xchg
sahf
sbb
mov
cdq
test
push
xor
pop
sbb
js
mov
push
pop
mov
stos
mov
push
xchg
mov
mov
jp
out
retf
xchg
fabs
or
shl
dec
stc
aam
xchg
out
fiadd
jbe
dec
jle
xor
(bad)
out
movs
and
xchg
call
xor
mov
add
or
pop
push
xchg
repnz
and
fist
(bad)
push
ret
(bad)
jp
(bad)
cmp
cmps
xchg
aad
ret
and
mov
sar
rcl
loope
mov
sbb
cs
fwait
push
pop
popa
lahf
(bad)
mov
ds
(bad)
jmp
jl
cmp
cmps
jl
inc
js
ja
and
sub
cmp
mov
sbb
cmp
aad
out
imul
push
(bad)
jge
push
cdq
or
sbb
mov
rcr
lahf
out
and
inc
dec
popf
dec
mov
push
fmul
add
xchg
push
inc
test
cmps
enter
mov
xor
fnstenv
jp
int3
lds
or
ss
imul
mov
add
(bad)
lods
cmp
xchg
push
mov
sub
and
xor
add
mov
xor
add
in
add
ret
ror
sbb
push
mov
jae
jge
pop
lds
add
test
fxtract
mov
lock
push
inc
pusha
sub
sub
xor
add
or
dec
jp
cld
jo
or
xor
shl
inc
push
push
iret
outs
std
mov
outs
pop
lock
push
mov
lods
ret
ins
mov
pop
test
loopne
int
xor
out
and
stos
(bad)
jno
adc
adc
jg
(bad)
xchg
ins
addr16
std
in
xor
pop
push
shr
in
loope
iret
mov
mov
push
sub
ret
dec
fwait
push
pop
mov
rcr
iret
ret
jnp
cmc
(bad)
xor
dec
cmp
aad
out
scas
fiadd
sbb
sar
retf
aad
retf
jo
push
fsubr
popf
inc
adc
mov
mov
xchg
int3
sub
push
add
hlt
inc
add
sub
jecxz
jb
rol
nop
xor
inc
adc
xor
fwait
shl
pop
add
jno
in
sub
into
rol
jne
jp
cdq
nop
sbb
push
add
or
stos
test
cmp
les
aad
out
sahf
push
cs
xchg
sbb
and
add
mov
dec
cmc
out
mov
mov
inc
ret
fisub
adc
dec
push
cmc
inc
inc
sahf
and
mov
dec
xchg
fmul
push
inc
out
ret
jle
pop
out
ret
cmp
jecxz
mov
jmp
jp
repz
cmc
mov
or
dec
xor
and
jnp
sbb
ds
movs
in
daa
push
push
xor
fstp
scas
xchg
mov
jbe
dec
and
jbe
es
jp
repnz
leave
inc
fild
and
jge
shr
loop
sbb
pop
lea
sub
cmc
leave
ins
sbb
cli
popa
fisub
test
add
in
mov
shl
mov
add
push
cli
fiadd
rcl
sub
das
xchg
jnp
popf
(bad)
push
push
hlt
in
and
lods
xor
xchg
loope
xlat
in
repz
sbb
mov
hlt
jg
retf
into
dec
add
sub
dec
inc
pop
jp
push
rcr
in
push
cwde
loop
xor
mov
mov
adc
dec
xchg
jl
mov
aam
outs
mov
push
loope
push
push
fild
ror
and
jmp
rcr
in
cmps
mov
inc
imul
cmps
movs
jns
das
cld
int
inc
das
add
mul
jmp
adc
test
sub
push
movs
sbb
jmp
xor
mov
xchg
ret
repnz
push
fcomp
adc
(bad)
pop
dec
or
or
cmp
push
mov
neg
mov
sub
sub
pop
xchg
in
xchg
pop
neg
and
mov
mov
bound
iret
lods
pop
or
mov
daa
adc
adc
xchg
loope
inc
xchg
ret
ror
test
or
xor
std
inc
add
jecxz
pop
out
es
mov
pop
test
mov
inc
and
push
sbb
jmp
fs
popf
das
(bad)
mov
cmp
mov
cmp
sbb
cmp
inc
gs
xchg
ror
mov
add
rcl
mov
stc
push
add
cdq
fs
dec
scas
and
push
jmp
retf
iret
frstpm(287
and
scas
ret
pop
ror
jbe
sar
test
pushf
mov
or
fidiv
test
mov
pop
test
and
adc
adc
test
add
push
sbb
xor
push
cli
cmp
mov
arpl
ret
mov
push
jp
ja
inc
popf
add
mov
cmp
ins
ja
sub
or
int3
cmps
mov
out
pop
shl
xor
push
fisttp
jns
mov
inc
push
sti
rcr
aad
push
mov
fdivr
or
xchg
dec
jae
dec
std
push
aam
jnp
mov
mov
sbb
movs
jnp
ss
into
arpl
xchg
cmp
into
sbb
and
(bad)
xor
dec
or
xchg
fmul
mov
jmp
fs
xchg
cmps
in
cmps
aas
push
mov
cmp
dec
fdiv
add
mov
hlt
sub
adc
jns
(bad)
(bad)
repnz
imul
or
rcl
add
push
or
mov
add
push
push
or
int
cmp
mov
inc
xor
dec
ret
retf
fstp
xor
dec
push
cmovbe
ins
shl
lods
add
and
push
ja
push
jae
jp
pop
jmp
or
in
loope
push
jge
jae
test
or
(bad)
jg
test
pop
mov
xlat
jle
mov
xchg
fcom
bound
xchg
mov
push
ret
cmc
aaa
jb
mov
dec
jmp
sub
xchg
inc
fisub
pop
dec
shr
data16
jae
add
fsub
iret
enter
jp
mov
xor
mov
pop
dec
popf
sbb
mov
sbb
daa
bound
cmp
cmp
in
loopne
mov
test
cld
cmp
in
jno
cli
leave
inc
inc
ret
clc
popf
neg
and
pushf
jmp
or
jo
add
scas
xor
aaa
loop
or
sub
mov
pop
movs
ja
pop
mov
add
mov
inc
and
loop
mov
int3
(bad)
dec
push
xchg
repnz
xchg
fistp
cmp
aas
or
jl
xchg
fdiv
in
stos
mov
add
dec
pop
pushf
inc
das
jb
xchg
mov
lods
push
in
cmp
pop
jmp
push
or
(bad)
and
fldenv
ins
sbb
push
and
lahf
pushf
pop
or
pop
(bad)
popa
mov
out
shl
jae
inc
nop
rol
call
add
add
xchg
cmovae
mov
outs
ret
dec
fisubr
push
in
dec
adc
(bad)
hlt
outs
lods
fwait
cmp
scas
test
dec
das
das
hlt
or
mov
sbb
mov
cld
bound
test
dec
fdivr
mov
std
sbb
stc
bound
loope
fistp
dec
mov
adc
push
test
cwde
int
ret
mov
loopne
ja
inc
js
mov
fdiv
sbb
xchg
dec
dec
or
in
mov
jecxz
sub
lds
retf
mov
cmp
jle
cld
push
dec
outs
jl
inc
lmsw
sbb
ins
jecxz
inc
and
arpl
mov
inc
inc
movs
cmps
mov
mov
add
mov
mov
lds
dec
xor
pop
fcom
daa
pop
mov
cmp
push
jmp
jb
les
push
push
dec
fcomp
pop
(bad)
sub
ja
dec
in
in
xlat
cli
mov
or
push
fld
ficomp
xchg
sbb
mov
mov
cwde
pop
test
cmp
jne
xchg
or
test
inc
lods
mov
mov
retf
test
out
imul
mov
mov
pop
es
out
fld1
out
mov
cmp
rol
mov
sub
add
shl
mov
mov
and
mov
pop
aas
fist
test
stos
inc
dec
mov
inc
popf
jecxz
cmp
inc
jmp
mov
jo
mov
retf
scas
xchg
mov
repz
leave
(bad)
add
jle
mov
pop
fchs
dec
cmp
jmp
movs
movs
les
call
fcomp
mov
pusha
mul
(bad)
cmp
pop
bound
ret
cli
or
pop
xor
cmp
out
lock
retf
dec
jnp
repz
movs
pop
not
clc
push
aad
int3
ins
fiadd
xchg
xor
shr
fldcw
clc
add
adc
push
lahf
and
dec
jg
test
jnp
lods
cmp
int3
push
mov
dec
aas
std
adc
test
cmp
out
push
adc
(bad)
aam
out
or
call
or
(bad)
xor
xor
dec
repz
xor
mov
add
(bad)
imul
int3
stc
sub
fnstsw
iret
or
mov
push
sub
dec
xor
nop
xchg
push
mov
inc
jp
leave
bound
cmp
sub
mov
mov
push
push
into
daa
pop
add
inc
cmps
mov
stc
in
mov
adc
leave
pop
inc
sub
jne
retf
add
and
jbe
int
fldcw
stc
enter
mov
rol
xchg
mov
mov
push
pop
add
or
pop
js
add
in
enter
sub
push
inc
leave
cs
or
fwait
ret
xor
xchg
loope
inc
cmps
outs
mov
cdq
stos
pushf
mov
push
mov
pop
adc
addr16
xor
push
lds
cli
jmp
fmulp
sub
mov
popa
xchg
add
pop
pop
les
pop
lds
into
aam
xor
shr
mov
and
lock
iret
repz
test
les
fistp
push
ins
add
pushf
cdq
push
mov
inc
movs
fadd
inc
test
jo
test
cmp
xchg
scas
sbb
shl
jno
mov
pop
jmp
xlat
or
je
or
jno
scas
jno
hlt
cli
(bad)
out
xor
or
pop
aam
popa
push
icebp
dec
jo
jg
idiv
lahf
or
je
add
clc
shl
jmp
xchg
push
in
mov
dec
outs
cmp
mov
and
xchg
push
pop
push
mov
(bad)
adc
or
mov
mov
es
xor
or
mov
xchg
push
lea
push
idiv
cmc
movs
mov
sub
icebp
xor
adc
and
add
push
stc
shl
cmc
popa
loopne
pop
xchg
jne
popf
sub
pop
in
xor
push
push
(bad)
retf
scas
fst
pop
pop
sbb
push
out
inc
clc
xchg
jne
fs
adc
xor
lds
fidivr
fsub
add
inc
sub
dec
ret
sahf
das
push
add
int
pop
jne
mov
adc
cmp
mov
sahf
inc
je
rol
(bad)
pop
inc
call
mov
xor
cmp
lods
shl
xor
out
mov
inc
mov
and
mov
mov
jecxz
nop
xor
shl
xor
push
stos
mov
xchg
and
push
pusha
stos
cld
xchg
adc
mov
cmp
stc
icebp
aas
ret
cmp
cmps
jne
or
sar
add
cmc
mov
mov
lods
aaa
mov
xor
mov
ins
nop
xchg
loope
and
lods
in
jmp
popa
js
mov
pop
push
mov
rcr
push
out
xor
out
mov
cmpxchg
add
lods
sbb
aam
xlat
cmps
test
mov
and
mov
sbb
and
sbb
sbb
das
pop
cmc
push
inc
cmp
sbb
dec
inc
repnz
dec
xchg
jge
out
aad
xor
mov
add
mul
loope
mov
outs
mov
xchg
fwait
call
mov
add
mov
dec
enter
and
lahf
push
sahf
(bad)
iret
lds
xor
xchg
movs
je
mov
pop
jl
pop
mov
sub
fild
nop
outs
mov
sahf
sub
xor
sbb
stos
enter
push
push
je
fld
inc
sub
jecxz
push
xchg
gs
jg
mov
outs
add
push
fld
jne
adc
out
(bad)
lahf
out
pop
ror
test
iret
(bad)
enter
sub
stos
or
jnp
arpl
mov
bts
inc
jno
cs
bnd
or
mov
mov
jecxz
cmp
call
loopne
mov
lds
(bad)
cli
and
push
enter
lock
fisub
mov
push
movs
push
aad
or
les
call
lds
pop
cmc
adc
push
mov
xor
enter
cmp
dec
xor
push
les
mov
shl
adc
mov
scas
push
bound
psadbw
or
rcl
leave
push
jmp
iret
pop
or
(bad)
ins
clc
(bad)
arpl
cld
dec
add
shr
fwait
jbe
xchg
xchg
hlt
loop
leave
mov
add
sbb
js
out
popa
fistp
mov
retf
cmp
lods
outs
dec
pop
cmps
mov
je
add
ss
cmp
dec
ds
dec
lea
shr
rcr
into
jp
lahf
jl
pop
push
mov
ins
push
or
mov
push
inc
pop
mov
in
popf
clc
sahf
inc
mov
cmc
add
or
lea
stc
push
xor
cdq
lock
dec
cmc
dec
push
sbb
add
mov
fcom
adc
inc
repnz
iret
mov
mov
xchg
jle
fisttp
jbe
jl
cmp
inc
jge
fidivr
stos
ror
xor
jne
xor
mov
into
into
repz
xor
(bad)
adc
cmp
lock
fs
adc
xor
fidiv
outs
xchg
aas
mov
pushf
daa
bound
inc
cdq
jne
in
sbb
ja
pop
(bad)
lods
push
add
mov
stos
cli
or
(bad)
pop
ret
jecxz
adc
rcr
dec
(bad)
out
add
jge
lea
inc
dec
aas
rol
push
sbb
pop
clc
inc
stos
or
lods
outs
call
int3
add
mov
or
stos
mov
das
jnp
lods
sub
cmp
mov
mov
mov
adc
sub
push
pop
push
pusha
loope
dec
dec
fld
xor
in
adc
mov
add
push
int
iret
loopne
in
pushf
add
mov
adc
or
mov
call
mov
test
mov
mov
clc
and
ss
pop
mov
cld
aaa
mov
popf
ret
popf
cwde
sbb
pop
and
cmp
add
leave
sbb
cmc
jle
lds
inc
call
test
dec
stos
push
and
jb
mov
(bad)
shl
loope
pop
loopne
fisttp
pop
imul
mov
add
lods
pop
sub
jmp
adc
or
pop
retf
jmp
ss
aaa
ins
or
ins
cmps
bnd
mov
ficom
and
stc
ins
xchg
push
and
imul
(bad)
sti
adc
shl
int
ds
out
dec
cs
pop
cmp
ficomp
loop
fsubrp
scas
or
pop
add
mov
les
jno
pop
dec
repz
adc
mov
enter
in
fcomip
mov
mov
retf
in
gs
sbb
push
mov
mov
and
sub
add
daa
leave
jne
mov
sbb
push
mov
imul
adc
fsub
test
and
sbb
nop
mov
mov
dec
jae
test
mov
imul
and
jl
push
push
adc
cmp
xor
(bad)
cmc
mov
push
xchg
pop
aam
cmp
movs
push
pop
sbb
dec
inc
mov
sub
(bad)
mov
sub
hlt
mov
mov
xchg
packuswb
cdq
xor
mov
adc
xchg
hlt
add
add
ins
mov
sbb
retf
call
daa
test
jp
enter
je
mov
or
ret
adc
mov
loopne
pop
xlat
ret
pop
mov
sub
mov
dec
neg
mov
sahf
stc
movs
out
pop
sbb
push
jo
inc
fs
pop
arpl
jb
cld
cmc
idiv
loop
mov
imul
push
retf
mov
addr16
bound
fstp
or
in
gs
xor
(bad)
and
movs
clc
mov
jmp
stos
aaa
fnstcw
rcr
leave
les
sbb
and
rcl
cdq
lds
push
sub
mov
push
jmp
mov
jge
sbb
sub
loope
nop
jno
push
mov
push
not
addr16
push
adc
cmps
nop
and
xor
cld
fmul
jno
cmc
cdq
xchg
mov
cmp
sub
mov
mov
and
inc
cli
es
pop
ja
lahf
pop
push
mov
or
pop
jl
inc
dec
lods
sbb
jns
aaa
int3
scas
cmp
dec
aam
cmps
repz
das
or
xor
jge
inc
loop
mov
push
mov
fisub
xchg
pop
out
in
js
gs
jns
outs
add
jae
inc
push
les
cmp
out
clc
adc
cmc
je
mov
mov
loopne
(bad)
xchg
pop
sub
int3
push
cs
push
jl
scas
int
in
jno
push
std
add
mov
ds
lahf
aad
sub
std
sub
retf
dec
stos
push
dec
call
push
test
push
jnp
add
scas
xlat
jg
js
xchg
icebp
data16
xor
data16
mov
sar
retf
dec
std
es
jg
dec
pop
push
repnz
push
dec
loop
xchg
cld
mov
xchg
mov
mov
pop
loopne
je
push
ins
xchg
adc
mov
fs
sti
adc
pop
sub
pop
sti
mov
mov
and
and
aas
add
icebp
in
sbb
icebp
in
fcom
hlt
cmp
cmc
rol
xor
repnz
and
mov
rcl
xor
out
push
jbe
das
mov
ror
(bad)
mov
sbb
xor
push
nop
or
add
and
cwde
push
js
cwde
(bad)
mov
stos
fidivr
push
and
dec
xchg
cmp
adc
cld
pop
lods
push
and
sti
sub
add
addr16
mov
(bad)
mov
jecxz
leave
ret
sub
xor
xchg
in
retf
push
aas
in
and
inc
mov
inc
dec
mov
or
and
fwait
and
dec
pop
add
int3
jle
mov
and
dec
daa
jg
clc
jne
adc
fld
outs
inc
mov
lea
hlt
cmc
test
add
and
dec
sub
jg
mov
lds
pusha
aam
add
int
xor
adc
pushf
xchg
arpl
xchg
imul
mov
mov
jo
shl
ss
fistp
xlat
out
cmovnp
xor
xor
jbe
das
js
int
shl
cwde
add
dec
ss
clc
inc
mov
daa
leave
jp
mov
addr16
and
xor
aam
neg
idiv
not
mov
xchg
pop
lods
or
pop
dec
inc
jge
cmp
fs
push
dec
movs
stc
xlat
(bad)
aam
out
pop
sbb
mov
sbb
(bad)
sbb
fprem1
jne
push
fincstp
daa
fwait
ins
out
push
mov
sbb
out
movs
inc
clc
in
sub
test
aad
or
cwde
les
fldcw
mov
shufps
sbb
jmp
int3
inc
sti
or
mov
pop
popa
xor
ds
inc
and
push
and
mov
shl
sbb
mov
sub
add
loope
mov
or
jnp
mov
mov
add
repz
mov
dec
aaa
sbb
jecxz
mov
test
push
movs
in
xor
dec
pop
push
mov
mov
pavgw
scas
daa
cmp
adc
outs
and
nop
movs
dec
pop
jnp
jbe
add
jg
dec
popf
jns
xchg
mov
cld
out
out
stc
push
push
xchg
add
out
stc
mov
and
lds
add
in
imul
cmp
outs
and
mov
adc
imul
or
xchg
push
imul
hlt
into
jle
test
out
sbb
enter
push
rol
mov
sub
mov
call
fs
jbe
lahf
dec
pop
lahf
jge
movs
mov
fdiv
xchg
sub
aam
xchg
out
xchg
pop
lea
stos
fisub
or
in
pop
jne
jp
loope
cmps
retf
inc
arpl
and
jo
hlt
jnp
imul
sbb
mov
cwde
daa
ds
in
mov
dec
pop
mov
call
inc
push
cld
push
retf
in
cld
adc
repz
mov
popa
gs
mov
cmp
test
bound
fist
adc
aas
bound
out
push
ins
gs
loopne
pop
xor
dec
xor
int3
fistp
jne
cmp
(bad)
pop
int
mov
stc
ds
es
cmp
loopne
div
in
ret
test
shl
and
jno
fucom
cwde
inc
add
loop
in
cmp
mov
xchg
sub
cli
inc
ret
mov
mov
sbb
adc
add
test
add
adc
adc
sub
jl
clc
xchg
push
add
mov
cmc
ds
(bad)
push
sbb
push
lods
xchg
mov
leave
mov
cmpxchg
cs
jo
sub
pop
push
pusha
xchg
xchg
test
dec
sbb
dec
popa
xchg
loope
pop
imul
cmps
cmps
lock
rol
mov
mov
jnp
ss
inc
inc
and
sbb
cmp
cmps
in
or
mov
adc
mov
rol
inc
outs
mov
sub
(bad)
call
xchg
dec
pusha
mov
mov
icebp
inc
iret
xor
mov
sbb
lods
fwait
mov
aam
jle
or
add
and
aas
pop
fwait
or
fsub
sbb
call
retf
pop
xor
jmp
(bad)
fidiv
or
jae
or
and
loop
shr
cmp
call
and
sub
push
mov
imul
pop
fcmovnu
(bad)
fmul
leave
push
dec
cmovle
jno
xor
ret
out
aad
and
ja
in
popa
ficomp
js
fst
cwde
cmp
inc
data16
ins
mov
inc
cwde
retf
and
movsx
mov
push
lea
push
arpl
cmps
add
cmps
(bad)
mov
adc
fiadd
jne
dec
push
in
clc
inc
je
popf
push
mov
jmp
rcl
push
push
and
xchg
nop
mov
fist
pop
jo
(bad)
loope
pop
scas
ror
mov
mov
sbb
mov
dec
fst
adc
imul
push
repnz
cmp
mov
sub
pop
fidiv
test
sbb
test
dec
cwde
cwde
mov
hlt
and
call
repnz
loopne
jno
pop
lods
retf
stos
jmp
into
sbb
dec
adc
das
mov
jle
loop
movs
dec
out
push
out
inc
out
outs
jmp
cmp
mov
data16
sub
popf
fs
pop
mov
aas
out
xchg
xchg
cmp
mov
nop
enter
mov
xor
hlt
xor
clc
inc
jmp
popf
movs
aad
push
cmpxchg
mov
fwait
mov
cld
fild
xor
mov
cwde
jo
and
pop
stos
sub
xchg
cmp
jnp
into
dec
fs
xlat
addr16
cld
popf
jl
fistp
push
cli
mov
test
loopne
dec
mov
adc
mov
std
and
out
push
add
dec
adc
xchg
loope
gs
int3
mov
and
dec
sub
out
gs
xlat
jnp
mov
shl
xor
mov
mov
pusha
in
and
adc
outs
loopne
loope
out
lods
push
xchg
imul
push
mov
les
scas
jp
fistp
pop
and
jno
je
out
(bad)
dec
push
enter
pop
and
or
je
ss
iret
push
jnp
jb
movs
std
gs
jns
pop
push
ins
data16
jo
and
mov
(bad)
fst
inc
and
push
dec
pop
adc
adc
shr
pop
shl
(bad)
xor
mov
fild
adc
in
icebp
loopne
(bad)
gs
cmps
push
jmp
out
out
lea
dec
dec
add
sub
mov
(bad)
mov
mov
pop
sub
fsubrp
test
xor
shr
add
mov
xor
push
push
xor
or
movs
or
sahf
mov
or
mov
addr16
mov
and
iret
les
loop
dec
hlt
lds
or
movs
jg
and
jmp
imul
pusha
dec
idiv
jo
xchg
pop
mov
in
push
jl
sbb
push
dec
mov
pushf
mov
pop
gs
dec
mov
fdiv
scas
cdq
mov
push
inc
repnz
dec
ss
push
loop
or
adc
cmps
or
call
ds
or
mov
sub
mov
pusha
movsx
add
jmp
into
ds
adc
xchg
arpl
adc
out
sub
pop
(bad)
sub
and
dec
je
jmp
and
add
inc
fistp
inc
jnp
dec
xchg
in
mov
cmc
sub
rcl
jp
movs
jbe
(bad)
bnd
aas
les
add
push
pop
and
mov
sub
xor
cmp
adc
mov
pop
ins
stos
xor
pop
mov
adc
sbb
xor
sbb
xchg
push
stc
sti
sub
and
mov
pop
push
ss
sti
out
sub
and
dec
xor
lds
sbb
adc
adc
xchg
(bad)
sub
mov
xchg
scas
xor
daa
and
int
cmp
cmp
sub
inc
lods
cmp
sub
jnp
ss
scas
mov
or
stos
pop
push
les
sub
push
das
or
aas
(bad)
xor
push
xchg
mov
mov
inc
repz
stc
out
je
jb
dec
fst
dec
sbb
and
mov
xchg
xchg
xchg
clc
dec
lods
call
cld
out
lods
(bad)
imul
jg
movs
push
mul
push
xor
gs
(bad)
dec
sub
retf
push
or
scas
adc
jmp
inc
sbb
add
dec
mov
fcomp
ss
jecxz
add
aaa
or
sub
fcom
int3
repnz
mov
jl
fdivr
cmp
push
fidivr
xor
or
std
jg
addr16
xchg
test
scas
(bad)
in
push
mov
mov
leave
rcr
jmp
add
adc
dec
jmp
inc
mov
jl
mov
jo
inc
cmp
inc
ret
popf
mov
sbb
movs
out
add
inc
repz
inc
push
push
add
push
test
les
push
(bad)
sub
div
mov
aad
adc
jl
and
or
mov
adc
jg
cwde
xchg
xor
stc
push
stc
mov
and
pop
pop
clc
cmp
push
int
and
pusha
xchg
pop
test
jg
hlt
pop
mov
gs
ret
aad
pop
scas
push
movs
movs
and
fnsave
or
dec
stos
rol
fs
ret
scas
mov
mov
pop
cdq
(bad)
and
das
movs
sbb
inc
xchg
lods
push
rcr
jns
cmp
repnz
push
movs
cmps
mov
jo
stos
push
aam
call
xchg
xchg
and
iret
sbb
or
(bad)
out
cli
mov
mov
jmp
mov
adc
loopne
(bad)
pop
jecxz
into
xchg
ss
xor
call
xchg
and
sub
cmp
fwait
pusha
mov
sbb
mov
push
xor
mov
pop
movs
sub
cmp
pop
push
movs
or
mov
push
leave
and
push
mov
cwde
jnp
jge
jne
or
call
push
sub
jae
mov
cmp
lahf
add
xchg
or
xchg
(bad)
jb
jne
and
mov
jmp
jo
std
push
jge
adc
or
adc
push
daa
sbb
je
repnz
shr
mov
(bad)
adc
stc
xlat
mov
gs
call
sbb
loop
jmp
mov
repnz
mov
out
retf
or
out
cmps
(bad)
mov
out
or
xchg
sub
nop
jge
loope
ins
mov
idiv
or
icebp
mov
adc
sbb
fiadd
jo
sbb
in
jne
sbb
pop
bound
push
inc
leave
jo
in
pop
imul
push
bound
or
lea
xchg
jp
(bad)
push
pop
lods
mov
mov
cmp
push
(bad)
cli
cmp
movs
inc
cdq
mov
lds
push
ret
ds
jnp
aad
(bad)
sti
movs
push
fcmovnbe
arpl
xchg
dec
pop
test
arpl
push
xchg
in
ins
movs
jns
add
and
pop
ficomp
outs
sahf
out
out
push
js
stos
mov
in
fdiv
sub
xlat
into
xchg
ficomp
dec
mov
out
push
data16
dec
mov
cmps
jmp
mov
xor
(bad)
lods
cwde
xchg
xchg
cdq
add
dec
test
pop
inc
jb
mov
jg
popa
call
lds
and
scas
fsub
imul
pop
ficomp
jecxz
inc
pop
(bad)
or
aad
ins
clc
xor
push
scas
stos
fsub
inc
push
rcr
and
inc
pop
xchg
or
retf
or
daa
mov
out
imul
(bad)
out
pop
push
mov
push
icebp
lods
mov
and
retf
enter
and
xchg
(bad)
test
jge
pop
jno
xchg
inc
jp
xchg
mov
fcom
xchg
int3
rcl
dec
mov
inc
pop
ins
or
ret
fimul
test
lds
cli
xchg
jp
or
xchg
cs
cmp
ror
ss
ret
push
and
jo
fidiv
sbb
pop
inc
xor
add
xor
fnstcw
jo
rcr
imul
hlt
xchg
sbb
movs
pop
and
push
imul
test
nop
das
adc
sbb
mov
les
pop
mov
jmp
into
(bad)
jmp
idiv
sub
pop
(bad)
adc
and
dec
(bad)
push
test
dec
dec
jb
inc
(bad)
sti
cmp
or
mov
pop
outs
xor
in
dec
imul
inc
cmp
nop
inc
mov
add
shl
les
pusha
xchg
xchg
cmps
xor
fbld
sub
ror
mov
repz
inc
adc
inc
mov
repz
aad
(bad)
jp
hlt
inc
xor
outs
sahf
add
lock
icebp
sub
inc
out
sti
scas
adc
aaa
mov
stos
add
adc
and
dec
dec
pop
das
icebp
(bad)
scas
lods
push
movs
adc
or
inc
dec
retf
inc
adc
pop
cmp
ror
shl
cdq
jno
push
sbb
movs
add
sbb
jmp
lods
pop
pushf
xor
dec
mov
xor
jmp
jle
and
ss
mov
and
imul
retf
es
sbb
or
js
xor
push
call
int
and
outs
inc
or
bound
leave
fiadd
enter
fldln2
loopne
sbb
push
push
and
(bad)
and
jae
pop
lods
and
mov
jmp
dec
aam
(bad)
mul
fistp
in
pusha
fwait
into
test
cdq
adc
jb
lods
in
sahf
fldcw
mov
cmp
adc
bound
push
xchg
and
(bad)
(bad)
jp
rcr
xchg
mov
cdq
or
or
pusha
stos
aas
out
out
js
sbb
rcr
int3
fwait
ins
pop
add
loop
icebp
enter
(bad)
movs
sub
xchg
sbb
sbb
int
out
push
xchg
pop
push
inc
pop
in
and
pushf
jnp
adc
inc
sbb
in
or
jle
repnz
mov
jbe
push
(bad)
ins
pop
pushf
(bad)
cmp
cmp
or
retf
jne
xchg
aas
ficom
sbb
test
loope
data16
inc
mov
mul
in
repnz
bound
imul
jmp
(bad)
cli
inc
les
xchg
ss
jle
jecxz
fldcw
sar
push
mov
bound
pop
mov
sar
sbb
sbb
jnp
jl
dec
inc
sbb
(bad)
xchg
ins
sar
push
aad
or
mov
mov
ins
stos
or
pop
loop
pop
cli
xor
jbe
sub
jns
cld
xchg
adc
push
stc
scas
jmp
fs
int3
movhlps
mov
push
mov
dec
int
and
pop
arpl
jge
scas
add
inc
xor
or
cld
xchg
bnd
test
xchg
cmp
push
scas
cwde
add
add
push
imul
mov
xlat
ficomp
jle
jo
(bad)
fbld
popa
rcr
sub
dec
aam
ja
sti
aaa
or
mov
rol
test
dec
inc
push
fsubr
into
repnz
call
sbb
imul
mov
or
mov
das
loop
cmps
sbb
and
sbb
psubw
jge
loopne
cwde
nop
shl
mov
or
sub
mov
mov
adc
push
dec
push
inc
int3
push
adc
std
(bad)
enter
mov
fadd
stos
inc
jb
adc
and
mov
clc
cmps
adc
push
(bad)
mov
addr16
fldcw
mov
sbb
pop
stos
cmp
add
cmp
in
xchg
mov
xchg
or
push
inc
es
or
xor
shr
pop
pushf
or
pop
sub
jno
mov
push
and
cs
xchg
xchg
ins
push
in
inc
repz
push
inc
xor
add
jno
jl
cmp
test
mov
sbb
inc
push
mov
mov
out
sub
outs
test
test
ret
or
pop
xor
inc
jge
bound
pop
push
fprem1
sbb
ror
loopne
push
xor
bound
je
jne
scas
test
xlat
sub
aaa
xchg
push
dec
test
xor
jmp
and
rcr
ins
and
retf
jle
push
cmps
mov
int
nop
xor
push
daa
div
dec
(bad)
or
into
adc
cmp
mov
mov
nop
push
pop
clc
mov
mov
rcr
or
mov
sbb
jno
iret
ja
jne
adc
push
fnsave
out
add
mov
ficom
or
mov
xor
jecxz
rol
pop
nop
push
or
rol
push
and
aaa
add
add
ins
sahf
jecxz
push
scas
(bad)
loop
mov
xor
push
push
call
xchg
sbb
mov
mov
cmp
sbb
lahf
sub
pop
leave
aam
mov
pop
out
leave
or
call
stos
pop
or
pop
push
aas
test
inc
lahf
not
jmp
ficom
xor
aad
push
jno
into
xor
ja
pop
inc
leave
(bad)
cmc
inc
push
push
int3
icebp
cmp
iret
mov
shr
cmp
push
jae
call
scas
(bad)
push
jae
push
cmps
sub
and
shl
popf
add
fadd
ss
dec
pop
test
jae
xor
shl
test
rcr
leave
in
pop
inc
cmp
xor
mov
mov
xchg
add
je
stos
scas
dec
mov
jmp
and
pop
add
sub
push
out
cmp
dec
push
int3
in
test
stos
int
adc
cld
shl
lods
cli
mov
mov
pop
enter
sbb
out
fwait
(bad)
leave
(bad)
fadd
pop
lahf
jge
sbb
mov
cwde
and
xchg
loop
adc
imul
movsx
add
xchg
push
inc
adc
adc
iret
ficomp
pusha
gs
jne
int3
dec
xchg
arpl
rcl
cmp
idiv
sbb
test
mov
or
test
sbb
data16
or
retf
movs
sub
inc
xor
mov
nop
dec
mov
in
cld
je
sbb
aad
add
adc
loopne
mov
mov
xchg
fiadd
in
xchg
dec
push
sbb
push
(bad)
out
idiv
adc
cmp
iret
imul
int
icebp
fdivp
ins
mov
sahf
jne
cmp
xor
cmc
idiv
adc
neg
ror
js
add
add
or
stos
mov
and
push
lods
ins
sti
cmp
push
rcr
and
mov
ds
push
iret
sbb
mov
mov
and
imul
sbb
mov
js
mov
aas
int
pop
jmp
mov
(bad)
dec
mov
cmp
jnp
xchg
xchg
push
sub
push
es
cmps
std
sti
cdq
test
mov
jo
jge
ret
adc
arpl
sub
push
hlt
push
cmc
fidivr
test
sbb
add
xlat
loope
(bad)
sbb
xor
ret
jbe
popf
sbb
sahf
jno
sub
mov
lock
sub
mov
stc
add
int3
and
test
ins
cli
fs
cdq
xchg
sbb
(bad)
hlt
lods
fwait
in
push
les
push
test
xlat
lds
jnp
sub
dec
sub
es
add
and
data16
jo
ja
inc
push
loopne
jmp
mov
call
adc
out
push
xchg
or
jge
lods
fcomp
add
fcmovnb
mov
fsubr
retf
out
test
inc
fcom
popf
sub
xor
sbb
cmp
mov
test
(bad)
shr
inc
ins
daa
int
adc
out
xor
jmp
jne
add
scas
xchg
cld
mov
jg
xor
sti
pushf
xchg
xchg
shr
cld
out
popf
dec
clc
nop
or
les
pop
cld
dec
movs
movs
jne
inc
xchg
inc
dec
adc
mov
addr16
lock
fadd
sub
push
xchg
daa
pop
scas
fbstp
lods
and
inc
push
cld
bnd
mov
jo
cld
dec
pop
stos
iret
add
adc
imul
aam
or
xor
mov
fldenv
mov
gs
xor
add
pop
jp
inc
(bad)
ja
repnz
or
cs
aas
hlt
push
and
pop
xor
xchg
aas
ins
icebp
sub
dec
inc
mov
fsubr
jge
sub
call
jecxz
std
mov
(bad)
loope
mov
push
mov
adc
pop
mov
jmp
xchg
lock
shl
push
cwde
jp
scas
adc
int3
cmp
adc
inc
stc
mov
ins
jnp
sub
test
push
(bad)
pop
xor
(bad)
jg
sbb
lahf
push
inc
lods
push
mov
es
add
cli
ins
sub
adc
xchg
mov
mov
out
pop
(bad)
(bad)
addr16
sti
mov
add
sahf
(bad)
es
adc
aad
add
test
punpcklbw
inc
fmul
mov
mov
ror
sub
push
add
fsub
xor
and
hlt
scas
mov
stos
clc
movs
add
js
cs
inc
(bad)
jl
rol
aad
push
mov
xchg
sub
mov
xchg
add
mov
(bad)
xor
mov
dec
xor
psraw
sub
ins
inc
mov
repz
mov
std
loop
aam
pushf
(bad)
add
stos
or
test
and
cld
or
scas
sub
sub
mov
jo
movs
aaa
and
jmp
mov
cmps
adc
ins
sbb
(bad)
mov
lahf
(bad)
pusha
and
mov
jae
popf
mov
push
or
es
imul
rcl
add
cdq
pop
pushf
jmp
sub
gs
pop
call
dec
call
push
aad
lods
or
mov
rcl
sub
or
retf
test
adc
in
mov
movs
in
and
mov
sbb
cli
sub
rcl
mov
jns
int
loope
mov
leave
shl
daa
aad
stc
or
mov
cld
scas
dec
fst
ja
idiv
mov
call
or
cmps
cmp
pop
jmp
adc
cwde
add
call
adc
or
in
bsf
arpl
adc
dec
ins
mov
int3
scas
cli
aaa
inc
mov
movs
cwde
or
adc
mul
mov
mov
cs
add
mov
sub
or
test
adc
cmp
in
retf
mov
or
popa
js
sbb
enter
xchg
imul
movs
es
jno
test
ss
pop
adc
repnz
mov
imul
push
cmp
pop
cmps
ja
not
mov
call
clc
test
mov
out
mov
aam
and
push
inc
mov
daa
test
clc
call
ins
dec
fstp
in
jbe
pop
mov
adc
fbld
push
jmp
or
sub
sti
or
sbb
fwait
push
fstp
fxch
add
int3
mov
ds
stc
stc
fild
cmp
dec
sahf
or
sahf
and
cdq
or
dec
aas
mov
loope
retf
add
test
popfw
mov
cmp
imul
pop
retf
mov
sbb
mov
and
adc
out
cmp
sbb
xchg
and
in
xor
dec
stc
mov
daa
ins
repz
add
pop
add
ds
xchg
cmp
lods
adc
push
add
xchg
popf
xchg
dec
leave
mov
pop
out
cmp
std
mov
sbb
sbb
lods
sbb
xchg
dec
imul
pop
cmc
adc
ja
add
jge
push
loope
inc
sub
adc
data16
ror
pop
fdivr
cmovg
shr
jne
ja
xor
loope
mov
out
imul
add
test
mov
xchg
out
sub
ds
xchg
push
jge
rcr
add
cmp
sub
loope
mov
mov
add
ins
fsub
not
gs
not
out
jo
out
movs
xchg
stc
dec
sar
jmp
mov
fidivr
dec
nop
mov
test
sub
push
cli
mov
cdq
shl
movs
mul
pop
mov
sbb
push
loop
sbb
mov
mov
pop
cmps
pop
movnti
loopne
jno
in
jmp
jae
lods
call
jb
cmc
and
mov
cdq
cmp
jge
loop
(bad)
call
adc
pusha
lea
movs
mov
mov
popf
out
movs
inc
add
pop
and
pushf
imul
pop
adc
pop
data16
nop
std
in
dec
int3
aas
stc
cli
mov
push
popf
mov
mov
jle
cmc
jmp
add
lods
and
fs
push
push
gs
cmps
xchg
mov
ds
mov
sbb
jmp
mov
cli
and
fwait
or
mov
cmps
push
mov
inc
mov
add
gs
fstp
(bad)
jnp
addr16
retf
mov
(bad)
ins
test
push
aas
retf
neg
sbb
adc
arpl
dec
and
test
test
cli
fisub
pop
ror
ja
inc
js
jo
std
pop
mov
cwde
in
in
icebp
xchg
arpl
cdq
add
call
cmp
fldcw
sub
jg
or
jb
xchg
cmp
sbb
mov
or
sbb
mov
test
call
enter
xor
test
inc
cld
mov
pop
int
mov
rcl
mov
fidiv
fwait
stos
imul
jno
fst
(bad)
mov
inc
pop
mov
nop
jae
rcl
xchg
mov
(bad)
cmc
xor
stos
push
mov
add
inc
enter
test
or
dec
push
nop
dec
(bad)
rcr
out
ja
inc
sbb
adc
test
sub
fs
repz
data16
movs
ds
ficom
cmps
sar
pop
mov
mov
mov
pop
inc
xchg
mov
fstp
lock
push
fiadd
dec
ficomp
push
jg
or
aam
ins
jbe
pop
lds
dec
cdq
out
jns
push
mov
jmp
fnsave
dec
(bad)
push
pushf
or
mov
cmp
ss
aam
aam
cmp
mov
and
mov
jmp
sub
xor
xchg
mov
(bad)
out
repz
adc
or
inc
(bad)
fidivr
sbb
jl
unpcklps
mov
mov
inc
or
pop
(bad)
xchg
push
pop
or
push
fwait
repz
add
pop
mov
adc
jle
mov
div
scas
sbb
xchg
ret
or
jle
in
fwait
sahf
and
aas
(bad)
xlat
cs
mov
mov
icebp
movs
adc
nop
retf
clc
sub
xor
adc
pop
int3
imul
mov
mov
retf
mov
test
mov
dec
jns
loopne
rcr
fisttp
sti
push
and
cmc
xor
fiadd
or
movs
fsubrp
adc
jne
cdq
daa
mov
push
or
shl
inc
mov
mov
inc
in
lock
out
pop
lods
outs
in
in
pop
pop
loopne
xlat
inc
lahf
cld
movs
jnp
and
pop
push
je
pop
sbb
xor
mov
aas
sub
call
test
stos
ins
test
iret
dec
xlat
and
imul
xor
lea
jb
mov
fwait
cmps
push
and
leave
loopne
mov
pushf
mov
jne
repnz
fldenv
cmp
dec
adc
dec
mov
rcl
adc
into
pop
gs
inc
inc
jecxz
sahf
mov
nop
dec
xor
out
mov
jle
pusha
jbe
sti
les
xor
(bad)
sti
push
xor
push
jnp
ja
sbb
jg
jg
into
sbb
or
mov
dec
iret
push
fs
mov
scas
mov
or
into
imul
push
(bad)
mov
clc
nop
dec
(bad)
bound
(bad)
xor
enter
nop
in
test
stos
jle
inc
cmp
aam
mov
push
dec
(bad)
iret
jmp
sub
xlat
dec
lock
stos
pop
aas
pop
xor
(bad)
sub
imul
aad
loop
ret
mov
jp
xlat
(bad)
jg
fsub
mov
fmul
or
inc
js
cmp
cdq
and
jne
inc
stos
gs
sbb
aad
fstp
xor
not
call
or
jl
popf
pop
xchg
movs
mov
push
movs
jp
pop
pop
fs
arpl
add
mov
dec
movs
xchg
hlt
ret
cs
into
outs
mov
adc
fldenv
add
daa
or
xchg
xchg
test
or
push
js
(bad)
dec
cmp
xchg
mov
dec
call
mov
stos
bound
xchg
jo
mov
cld
test
bound
test
jne
sbb
push
out
fstp
sbb
cmps
mov
shl
pusha
xor
jne
cmp
test
iret
mov
lods
aaa
ja
ret
mov
lods
xlat
jmp
outs
dec
inc
fisub
ins
inc
enter
movs
pop
fs
jmp
mov
push
and
add
push
in
pop
fst
jg
in
jo
outs
(bad)
ins
fcmovnu
xchg
dec
leave
add
outs
xchg
bound
(bad)
mov
out
xchg
jp
es
and
adc
push
ins
adc
cdq
fld
arpl
jns
sbb
xor
xor
rcr
xchg
mov
bound
fs
repz
sar
add
jae
xor
out
xchg
and
(bad)
xchg
outs
mov
or
jnp
mov
out
rcl
imul
dec
outs
mov
lahf
xchg
and
outs
fxch
fadd
retf
or
pushf
mov
mov
adc
cmp
xchg
iret
cmp
add
test
dec
les
add
ret
(bad)
fcom
xor
jle
push
stos
lds
scas
shr
jb
dec
or
outs
jno
dec
fwait
cmps
call
sbb
cwde
add
ds
inc
jecxz
push
stc
push
sbb
pop
mov
push
out
or
adc
sbb
sbb
pop
jp
or
imul
movs
xchg
jbe
sub
sub
push
inc
pop
jge
fcomi
sbb
fiadd
pop
dec
call
ins
push
xchg
clc
in
stos
aas
mov
cmp
ins
sub
adc
mov
xor
test
lods
repnz
mov
imul
mov
test
in
push
rcl
xlat
popa
ja
ins
lock
push
bound
loop
mov
jbe
dec
cwde
inc
in
pop
mov
add
sbb
add
xlat
sub
loope
mov
jmp
jg
fadd
jmp
jbe
aam
lock
inc
cmp
xchg
jmp
adc
jmp
add
pop
cld
mov
sbb
adc
jecxz
xor
adc
cmc
js
pop
sub
pusha
jo
fild
pushf
xor
loopne
stos
test
stos
add
mov
inc
inc
shl
pushf
sbb
fsub
popf
arpl
pop
dec
imul
jns
iret
cld
loopne
lds
lahf
fidiv
lea
mov
pop
dec
inc
movs
sub
faddp
adc
jmp
lahf
mov
sub
pop
xchg
cmp
xor
sbb
inc
inc
popa
xchg
add
fild
cmp
xchg
jo
push
sub
fldenv
out
lods
sbb
xchg
shl
scas
xor
jmp
nop
mov
jbe
repnz
imul
jnp
retf
call
neg
les
(bad)
sub
jl
or
push
aam
cmp
cmp
bt
sahf
not
pop
jae
rcr
outs
mov
aad
es
jp
mov
jle
retf
lods
mov
jecxz
(bad)
rcl
mov
mov
inc
and
mov
pop
sbb
pop
lea
(bad)
setg
je
pop
stc
sub
stos
sub
pop
sahf
jb
sub
mov
cmp
add
imul
jecxz
mov
dec
add
ret
inc
push
mov
jp
or
dec
sbb
sub
imul
add
lahf
scas
adc
sub
mov
mov
mov
outs
mov
jmp
scas
pop
cmp
mov
mov
repz
popa
mov
mov
shl
je
pop
or
mov
adc
cmp
scas
js
sbb
inc
jno
fwait
add
loop
fyl2x
jns
inc
nop
loope
pop
adc
xchg
mov
jp
mov
mov
fist
sar
push
jae
inc
sbb
out
inc
leave
inc
or
in
call
ficomp
push
pop
cmp
inc
mov
jmp
inc
sub
xor
mov
jae
inc
xchg
pop
aam
cmp
mov
or
mov
add
jge
push
std
je
adc
inc
ret
out
addr16
pop
push
sub
sub
stc
and
pop
(bad)
call
mov
jge
or
xor
xor
cli
xchg
cs
ret
call
fld
outs
inc
aam
shr
add
xor
mov
cmp
scas
cmp
jg
pop
add
(bad)
mov
mov
lods
xor
cmps
ds
hlt
aam
or
lea
mov
jge
imul
dec
aaa
dec
int3
imul
sub
mov
or
dec
scas
and
imul
(bad)
outs
xchg
jmp
pop
xchg
lds
dec
mov
pop
or
fisubr
repnz
xchg
pop
or
ja
xchg
outs
xor
sti
movs
repz
xchg
adc
cld
xchg
adc
(bad)
stos
jnp
xor
ds
aaa
and
je
in
dec
xchg
rcr
add
sbb
pusha
cmps
inc
cmc
inc
inc
ins
in
jbe
dec
test
or
ins
lock
aam
aaa
mov
lahf
nop
clc
mov
mov
and
or
pop
xchg
jnp
iret
test
cmp
hlt
ret
push
jl
or
mov
aaa
pop
push
js
pop
sbb
repz
hlt
inc
or
push
mov
jne
jno
shl
ins
dec
sbb
xchg
aaa
xor
sub
sahf
xchg
fxch
inc
loopne
xor
mov
popa
in
sbb
setbe
dec
sbb
sub
mov
mov
clc
out
push
lods
mul
xor
add
dec
std
loop
jno
jno
push
sub
jmp
ret
mov
mov
xlat
in
adc
ja
scas
movs
loopne
test
in
movs
mov
sbb
xchg
or
mov
jae
outs
pop
push
ret
std
call
xchg
lds
pop
add
add
jmp
ja
cmc
dec
cmps
or
(bad)
(bad)
int3
xchg
aad
jne
xchg
mov
xchg
add
mov
or
jmp
sahf
inc
ins
daa
or
hlt
gs
stos
dec
je
or
cs
call
imul
cmp
ja
outs
ja
hlt
stos
mov
xchg
icebp
les
in
sub
adc
fcmovu
adc
or
scas
push
stc
and
sbb
push
outs
jmp
(bad)
es
or
(bad)
out
push
xor
pop
push
jle
cmp
les
out
clc
xchg
or
add
out
jbe
sti
xchg
icebp
add
add
fstp
pushf
ja
mov
das
and
stos
jge
(bad)
movs
jns
xchg
fisttp
retf
shl
xor
hlt
(bad)
dec
xchg
add
push
sub
sub
inc
dec
(bad)
aas
(bad)
or
add
rcl
fadd
clc
scas
out
mov
or
movs
pushf
sub
add
mov
bswap
mov
iret
sub
call
enter
stc
loope
push
dec
movs
pop
adc
or
add
jecxz
push
mov
xchg
pop
call
and
cmp
adc
aad
dec
xor
in
pushf
xchg
mov
inc
(bad)
xor
lock
call
adc
repnz
iret
stc
push
pop
sub
in
xchg
std
inc
test
fisub
das
es
mov
cmp
fimul
aam
pop
shl
dec
xor
lods
movs
push
lods
xor
popa
in
jns
mov
in
fild
clc
add
dec
jns
inc
mov
mov
sub
or
repz
hlt
pop
das
shl
popf
add
add
dec
sub
loop
adc
retf
scas
dec
adc
lahf
fst
jne
inc
sbb
test
inc
into
scas
mov
ja
sbb
aaa
push
jl
adc
push
and
xchg
aam
xchg
xchg
cmp
pop
fisttp
cs
jb
popf
cmps
adc
cmp
clc
(bad)
mov
je
push
jbe
mov
out
loopne
xor
ds
pop
stos
in
xlat
add
mov
mov
test
xchg
mov
jle
scas
jmp
and
adc
sbb
popf
jae
fs
dec
dec
cmc
push
(bad)
js
and
mov
std
and
inc
mov
pop
dec
jl
outs
jecxz
add
adc
cmp
pop
lds
inc
adc
(bad)
retf
cmp
sub
les
repz
ds
dec
or
in
jle
sti
(bad)
inc
ret
div
leave
push
outs
cld
scas
scas
ins
mov
fidivr
shl
repnz
in
inc
daa
in
or
repz
xor
out
div
inc
and
mov
xor
pop
es
rol
data16
xor
cmp
mov
mov
mov
stos
pusha
das
xchg
pop
shl
push
sbb
jle
aas
mov
sub
xchg
vpshufd
mul
das
mov
outs
clc
dec
xchg
sub
sub
stos
pop
aam
mov
push
sar
mov
retf
adc
leave
push
mov
mul
movs
add
ins
repz
(bad)
in
aad
xchg
or
jae
cdq
das
adc
loop
xchg
and
adc
push
nop
arpl
mov
mov
jo
and
sub
pop
adc
out
add
xchg
xchg
in
test
inc
loope
in
daa
mov
push
les
icebp
xor
push
(bad)
das
push
push
call
push
out
(bad)
inc
or
xchg
lahf
mov
pop
ins
es
loop
xchg
rcr
rol
mov
test
ret
outs
pusha
loopne
cmps
push
dec
(bad)
xor
inc
mov
cmps
clc
and
mov
mov
push
pop
sbb
or
retf
daa
cli
rcr
das
(bad)
repz
jle
add
inc
adc
imul
mov
cs
pop
shl
and
pop
mov
fwait
lahf
push
mov
in
test
test
cmps
movs
sub
mov
sbb
stos
mov
jns
adc
xor
adc
inc
cwde
pop
add
sub
inc
fidivr
jl
dec
je
add
pop
dec
dec
jnp
pop
rcl
add
mov
push
jae
pop
xor
push
mov
inc
add
add
dec
and
lock
cs
(bad)
sbb
inc
js
inc
lods
dec
pop
mov
cmp
movs
mov
stc
add
inc
pushf
jecxz
xchg
shl
cmp
int3
imul
mov
add
cli
or
inc
gs
dec
daa
dec
or
mov
leave
jmp
xchg
pop
imul
and
jb
out
cmp
out
or
ror
add
adc
xchg
mov
pusha
leave
add
cld
scas
in
outs
test
push
dec
mov
jnp
add
es
cli
pop
outs
(bad)
std
inc
pop
(bad)
pop
adc
pop
mov
ss
aad
les
xor
and
dec
add
lea
fs
add
or
nop
lods
mov
(bad)
(bad)
mov
je
cld
out
ret
popf
(bad)
inc
popf
mov
xchg
inc
jp
xchg
push
push
xor
shr
jnp
and
jb
mov
add
add
pop
add
mov
dec
xchg
movs
aad
iret
outs
movs
daa
pop
repz
adc
mov
aas
js
aad
(bad)
pop
xchg
inc
jno
shr
xchg
cmps
ret
add
inc
ficom
jge
lock
retf
mov
nop
push
sbb
xor
cwde
jp
mov
jmp
xlat
mov
mov
mov
(bad)
jns
or
mov
mov
ss
sub
cmp
jo
ins
inc
mov
and
adc
(bad)
pop
sti
fs
shr
cmp
push
push
mov
or
sub
dec
inc
sbb
mov
adc
or
lea
sbb
out
push
pop
out
outs
pop
or
lock
mov
jb
nop
ret
xor
enter
inc
adc
lods
(bad)
sub
and
stc
push
jae
sti
(bad)
popf
(bad)
mov
mov
or
cmp
adc
xchg
jne
dec
lds
sub
mov
push
xchg
cmp
mov
inc
xlat
push
ss
cld
stos
rcl
rol
aad
adc
out
fnsave
add
rol
int
ins
cmp
inc
xlat
(bad)
jmp
xor
inc
and
push
fld
stos
leave
jae
cmps
inc
xor
push
int
dec
mov
mov
add
push
in
sub
adc
push
test
mov
jp
mov
call
icebp
push
stc
xchg
or
scas
lock
xor
push
jmp
dec
call
lods
or
inc
sub
mov
inc
in
add
sbb
mov
xor
xor
push
lods
aad
das
frstor
cmp
inc
out
inc
rcr
inc
ja
hlt
jl
mov
jmp
or
iret
pop
sar
cmp
xchg
imul
and
and
xchg
popa
mov
cmp
mov
mov
push
sti
ret
test
xor
test
cmps
sti
dec
in
test
imul
jae
les
movs
aaa
fadd
inc
out
fst
fwait
cwde
popf
cmp
(bad)
and
(bad)
pop
int3
bound
jle
push
rol
xlat
adc
and
and
or
ror
or
mov
fist
sub
lods
stos
or
imul
addr16
dec
mov
sahf
cdq
pusha
mov
sbb
pop
jge
popf
aaa
inc
jecxz
stos
int3
je
push
add
pop
cmp
sbb
push
mov
xlat
push
push
jmp
sbb
xor
dec
or
aaa
retf
lods
jae
das
movs
ror
(bad)
pop
xor
ss
xchg
inc
fisubr
lahf
ret
loop
pop
adc
sbb
popf
leave
inc
call
and
jo
jg
leave
nop
lock
jg
adc
int3
sbb
adc
fisub
xor
lahf
out
mov
bound
inc
add
js
clc
cmp
dec
cmp
test
icebp
mov
push
push
push
and
dec
ficom
or
dec
fsub
iret
mov
mov
xchg
ds
loopne
push
mov
fild
add
xchg
(bad)
imul
ins
retf
mov
lods
mov
call
fisubr
fisubr
xchg
(bad)
ins
lahf
mov
push
mov
sbb
dec
call
call
inc
into
leave
and
repz
jo
lds
loop
mov
jnp
fwait
inc
push
inc
ret
dec
in
shl
loope
loope
mov
adc
jp
cmp
adc
mov
mov
lock
fwait
xor
cmps
xor
fidivr
imul
xchg
movs
addr16
mov
jg
test
adc
xchg
and
mov
mov
(bad)
in
jle
xchg
lods
fwait
hlt
fwait
mov
movs
cwde
mov
dec
je
or
jl
rcr
pop
leave
sbb
cwde
clc
jo
scas
daa
push
jae
and
test
push
jmp
inc
sbb
xor
fstp
fist
mov
push
mov
cmp
cld
stos
retf
pusha
add
push
in
sar
inc
dec
mov
xchg
fild
shl
pop
loop
jge
inc
pop
fbstp
in
pop
dec
dec
out
xor
in
inc
shl
push
sti
sar
add
adc
sbb
frstor
es
add
std
pop
jnp
cmc
fiadd
dec
dec
adc
mov
adc
cmp
jmp
xor
aas
cs
mov
jae
stos
sbb
xchg
pop
je
cwde
cmps
dec
imul
mov
adc
scas
mov
mov
xor
or
bnd
ins
pop
pop
or
mov
icebp
or
ret
and
stos
mov
frstor
dec
cwde
add
js
push
xchg
mov
es
push
sahf
and
mov
mov
fwait
mov
adc
ins
sti
popf
push
push
loop
outs
inc
daa
sub
push
das
adc
rol
lods
test
div
jae
mov
fs
cmp
popf
popf
fst
mov
pusha
retf
outs
push
inc
shl
mov
(bad)
jmp
ins
sub
cmc
or
arpl
and
add
ret
jp
std
fnstsw
jmp
outs
mov
xlat
adc
ins
lods
sbb
inc
aad
sub
outs
gs
xor
or
inc
fldcw
stos
jge
and
fs
stos
fucomip
mov
ja
pop
pop
and
mov
paddsb
xor
mov
mov
cmps
and
pop
rcl
ret
stos
repz
retf
(bad)
pop
icebp
xor
mov
push
xchg
mov
push
xor
jmp
xchg
aaa
cmp
(bad)
mov
rol
cmp
adc
mov
and
clc
nop
or
mov
or
adc
fadd
add
mov
lds
inc
pop
push
mov
test
add
aad
es
xchg
ficomp
out
push
mov
push
xchg
mov
sub
xor
pop
in
test
ins
push
(bad)
mov
fs
add
hlt
push
dec
retf
inc
push
xchg
mov
jl
cmp
dec
out
out
addr16
jge
sub
jns
icebp
fst
outs
aad
out
gs
ins
mov
dec
fwait
pop
repnz
mov
ds
push
pop
jnp
xor
out
shl
jg
cmp
jb
xor
lahf
inc
sbb
pop
mov
add
inc
fist
mov
sbb
repz
daa
and
mov
dec
sahf
dec
lahf
call
ja
mov
dec
jbe
(bad)
test
jno
mov
ins
rcr
mov
in
and
out
mov
lahf
push
xchg
lock
and
nop
imul
mov
fwait
je
inc
dec
cmps
xor
add
dec
nop
es
inc
sti
cld
mov
aad
sbb
mov
sbb
jae
jb
jmp
arpl
shl
stos
lods
xchg
or
movs
popf
loope
adc
data16
or
dec
sbb
ja
push
lods
scas
cmp
xor
cmp
dec
les
dec
or
rcl
xchg
and
ret
mov
and
test
push
dec
inc
cs
push
fdivr
cli
sub
ret
repnz
add
ins
xlat
sub
scas
sahf
sub
or
gs
and
sbb
cdq
jno
pop
mov
(bad)
mov
cmp
mov
xchg
(bad)
addr16
mov
mov
and
jge
add
sar
xchg
push
push
les
sbb
nop
rcr
xor
int
int3
jmp
xor
call
inc
push
mov
cli
xchg
out
popf
rcl
rol
lahf
pcmpgtw
push
or
sub
sbb
out
(bad)
jnp
sahf
push
pop
jecxz
hlt
mov
fwait
mov
ins
add
push
jb
mov
add
xor
retf
ins
xchg
mov
inc
out
cmc
test
daa
dec
mov
dec
cmps
mov
fs
dec
cmp
std
enter
add
mov
lods
or
rcr
ss
in
mov
(bad)
shl
and
xor
pop
(bad)
xchg
into
jnp
sub
adc
dec
xor
(bad)
xor
stos
dec
pop
inc
call
sar
push
daa
mov
stos
fcmovb
pop
and
(bad)
retf
mov
scas
out
cmps
es
pop
(bad)
and
jno
jo
jecxz
int3
xchg
mov
xchg
mov
jcxz
xor
pop
add
cmps
cld
mov
je
cwde
add
mov
xchg
and
mov
dec
nop
int
adc
cmp
aad
jp
cmp
pusha
dec
scas
imul
adc
sub
fmul
stos
shl
test
retf
or
inc
sub
retf
adc
and
add
xchg
fmul
jmp
aad
jns
out
and
movs
(bad)
jmp
ss
dec
xor
xor
inc
(bad)
mov
cmps
loope
(bad)
cwde
rcl
jmp
int
lods
push
jle
pop
stos
rol
fbld
mov
cmp
xchg
icebp
jnp
pop
push
pop
pop
pop
arpl
xchg
call
scas
sbb
(bad)
not
add
xor
push
mov
scas
shr
nop
bound
mov
jo
xor
xor
add
aas
add
inc
lea
pop
hlt
mov
dec
jnp
lea
xchg
pushf
pop
mov
cmps
out
je
loope
inc
addr16
dec
retf
cmp
adc
push
add
pop
xchg
imul
je
inc
xchg
test
xor
in
enter
sti
sub
lea
ficomp
sbb
lods
adc
adc
mov
fistp
push
les
push
mov
pop
stc
pop
jecxz
bound
stc
xchg
jmp
push
push
gs
xchg
ret
stos
aam
xchg
ficomp
pop
loopne
dec
dec
mov
pushf
mov
dec
imul
out
jge
popa
das
iret
fwait
xchg
jno
pop
ret
fnstsw
xchg
mov
push
mov
push
stc
xchg
das
sub
xor
retf
and
add
pop
popf
xchg
es
jg
in
pop
outs
test
lea
jmp
sub
loopne
xor
dec
push
and
mov
cmp
cmp
bound
call
add
jo
jnp
jmp
lods
test
pop
stc
sbb
fadd
addr16
and
pusha
pop
in
rcr
push
out
test
out
mov
mov
dec
aam
stos
pop
test
ror
(bad)
mov
fld
push
aam
int3
inc
aaa
mov
pop
icebp
cmp
enter
aaa
dec
jmp
cli
inc
pop
cdq
or
pop
mov
mov
mov
xchg
xchg
mov
mov
int
inc
clc
in
add
or
xor
aam
shr
cmc
xchg
int
(bad)
data16
jecxz
xchg
inc
mov
ret
adc
sub
cs
stos
sub
mov
ror
addr16
lods
push
inc
xchg
cwde
add
xor
sahf
sti
test
xchg
movs
pop
int3
sbb
lds
iret
inc
mov
imul
xor
mov
push
adc
push
sbb
outs
repnz
into
sub
es
dec
test
add
gs
add
cmp
jge
xchg
mov
leave
pusha
adc
(bad)
sbb
imul
loope
hlt
inc
xor
jmp
cld
and
add
cmp
test
sub
scas
test
fsub
mov
mov
imul
retf
mov
and
icebp
sub
movs
addr16
fsubr
and
into
dec
push
gs
ja
add
es
dec
lods
and
pushf
adc
push
icebp
rcl
out
mov
mov
inc
mov
mov
loope
add
lods
add
pop
jg
push
gs
stos
mov
sub
pop
aaa
jge
sbb
cld
push
mov
out
mov
outs
lock
call
(bad)
popa
add
enter
sbb
xchg
dec
push
jnp
mov
inc
xlat
leave
mov
je
sbb
inc
hlt
repnz
dec
fiadd
sbb
mov
stc
inc
retf
or
mov
mov
or
mov
sub
mov
jae
lahf
dec
cld
loop
add
(bad)
das
add
scas
push
fstp
or
jae
sbb
sti
ins
cmp
xchg
pop
jp
fwait
jp
stos
dec
imul
repnz
xchg
jg
dec
mov
push
cmp
ss
cld
dec
loope
ins
jle
push
xor
or
std
test
jnp
imul
jp
fstp
fcmovnu
or
mov
fistp
push
cmp
push
xchg
or
adc
cmp
(bad)
push
loop
and
pop
cmp
mov
out
xor
call
out
push
or
dec
addr16
jo
or
pop
(bad)
cwde
dec
mov
and
or
pop
rol
pop
or
xchg
jge
bound
cmp
mov
daa
sub
xor
mov
rcr
imul
jecxz
fs
cmp
stos
add
mov
imul
fwait
xor
dec
mov
mov
dec
ds
shr
fs
retf
push
mov
inc
arpl
out
fnstenv
leave
outs
push
add
dec
(bad)
mov
cmp
mov
jo
add
adc
fnstsw
add
daa
rol
fcmovnb
pop
add
mov
cmc
mov
push
dec
test
(bad)
rcl
scas
xchg
ins
or
pop
fcomp
and
shl
add
inc
out
cli
mov
scas
mov
xchg
xor
jbe
repz
aaa
popa
fist
in
pop
sahf
lods
cld
xor
icebp
cmp
jmp
adc
or
dec
dec
call
or
push
aam
loope
sub
aam
or
lods
ins
sbb
adc
cld
fild
repz
adc
push
repnz
dec
and
push
dec
inc
movs
div
fnstcw
dec
call
xchg
pop
in
loope
sbb
jo
ss
mov
pop
adc
jae
popf
call
bound
push
dec
xchg
adc
rol
lgs
mov
push
(bad)
es
sub
xchg
fwait
(bad)
mov
xchg
test
fmul
in
add
cs
into
ins
pop
adc
xchg
mov
cs
popa
xchg
ficomp
outs
into
stos
mov
dec
mov
sbb
mov
cmp
push
jo
push
inc
inc
pop
daa
cmps
ins
add
adc
fcom
ds
xchg
in
outs
cmp
(bad)
jno
imul
jl
and
sub
add
pop
test
call
mov
pop
call
push
mov
add
mov
test
jge
ins
mov
sub
xor
jp
call
jbe
out
fcomp
int
sub
push
push
call
and
outs
int
in
adc
call
lods
jno
sub
(bad)
mov
sbb
jne
cs
ret
xchg
lea
test
inc
xchg
cld
and
clc
push
outs
neg
dec
jge
jns
pop
push
push
inc
icebp
daa
fcomp
(bad)
jno
sbb
mov
(bad)
pop
push
inc
sahf
pop
xor
add
mov
imul
icebp
add
inc
xchg
aad
xor
adc
jmp
or
std
(bad)
out
pop
lods
std
jmp
add
cmp
xchg
xor
stos
in
xor
mov
lea
data16
in
repnz
mov
xchg
xchg
xchg
dec
ret
and
mov
bound
push
out
push
inc
loop
cmp
fnstcw
lahf
aaa
mov
mov
cwde
adc
sub
pop
jl
cld
cmp
jne
xchg
shl
pushf
out
pop
sub
sbb
sub
(bad)
pushf
xchg
dec
push
test
jecxz
or
iret
test
and
and
bnd
out
sub
ret
jle
shl
(bad)
add
ins
aaa
sbb
and
mov
and
ror
xor
dec
mov
mov
xchg
lods
pusha
cmps
scas
sbb
in
xchg
stc
fcomp
push
pop
mov
mov
scas
sbb
mov
in
jbe
mov
xor
mov
inc
xchg
test
add
push
cmps
or
add
mov
stos
hlt
xor
add
mov
and
dec
imul
test
xchg
xchg
(bad)
aas
rol
popf
mov
in
xchg
sahf
push
adc
push
repnz
mov
mov
into
mov
xchg
outs
or
pop
xchg
imul
cmps
inc
dec
aad
pop
inc
in
inc
ins
pop
lahf
mov
push
iret
xchg
daa
add
test
aaa
test
sub
xchg
scas
push
cld
and
pop
ret
test
(bad)
xor
push
sbb
jg
aam
pop
pop
data16
js
push
jecxz
fimul
dec
xor
(bad)
sub
mov
nop
shl
mov
popa
fld
jg
js
pop
adc
mov
dec
push
pop
test
jmp
das
jg
cwde
mov
mov
jl
mov
mov
inc
div
add
sahf
lods
lsl
add
inc
retf
push
cmps
cmp
xor
mov
jle
shr
addr16
popa
and
push
and
out
xchg
push
pushf
stc
sbb
ret
bound
(bad)
fstp
mov
mov
mov
xchg
aas
loope
fidiv
mov
std
xor
jge
cwde
push
pop
dec
sbb
retf
hlt
loop
xchg
aaa
push
nop
xchg
jge
mov
int3
ret
scas
mov
mov
fistp
iret
aad
(bad)
js
sbb
push
sub
cmp
or
out
clc
inc
jb
(bad)
xchg
sbb
sub
les
xchg
lock
mov
sahf
sbb
iret
xor
fild
push
mov
add
gs
lahf
loopne
aaa
cwde
mov
and
and
push
enter
jnp
xchg
mov
je
sub
mov
rcr
lock
cli
inc
or
stc
xchg
mov
hlt
push
jbe
cmp
mov
mov
cmp
popa
rol
adc
and
pop
into
aad
push
cmp
xor
jo
test
retf
ins
cmp
nop
and
in
pop
push
cmp
push
jp
adc
and
icebp
jb
and
inc
test
xchg
and
add
push
or
clc
mov
lea
in
not
(bad)
in
mov
xor
aas
cmp
retf
adc
(bad)
adc
imul
add
sar
pop
sub
pushf
daa
bswap
cmp
cmp
mov
mov
mov
fcmovne
(bad)
(bad)
fwait
repnz
mov
push
pop
daa
dec
jbe
outs
por
dec
pop
aas
pop
lock
bound
xchg
icebp
inc
xchg
jae
xor
add
inc
pop
jecxz
pop
dec
enter
add
test
xor
sbb
aaa
enter
shr
jo
sub
(bad)
cmp
mov
dec
pop
in
sbb
pusha
(bad)
cld
pop
dec
arpl
in
inc
(bad)
push
out
xchg
loop
movlps
lahf
les
retf
sbb
ins
pop
je
mov
and
xchg
mov
add
scas
mov
push
popf
sti
sub
imul
stos
push
(bad)
aad
or
pop
pop
xchg
rcl
dec
or
sub
movs
push
mov
in
xor
push
out
add
cmp
mov
xchg
icebp
and
mov
pop
mov
mov
mov
enter
xchg
add
xor
clc
loope
xchg
push
or
das
dec
scas
xor
iret
add
and
inc
leave
imul
test
daa
sub
pop
out
out
sahf
xchg
outs
mov
iret
cmp
out
inc
iret
cdq
jnp
sbb
xchg
dec
popa
pop
or
daa
sbb
and
hlt
jmp
enter
sbb
inc
in
test
out
mov
cld
jno
rol
inc
jmp
(bad)
neg
js
js
ret
jbe
xchg
pop
mov
sub
mov
add
xrelease
dec
call
sar
adc
adc
das
cld
mov
lea
xchg
push
pop
mov
xchg
int
sub
inc
xchg
jne
(bad)
jbe
outs
neg
enter
hlt
cmp
icebp
push
pop
xor
scas
nop
rcr
mov
push
pop
push
sbb
and
hlt
pushf
fdivr
xchg
xchg
jle
jns
rcl
pushf
cmovge
pusha
pusha
(bad)
or
pop
arpl
lea
in
cmps
bound
mov
adc
adc
add
fisub
aam
or
jle
rol
(bad)
sbb
daa
cmovl
ins
mov
rcl
out
and
mov
inc
cmp
leave
imul
add
sbb
test
jbe
or
cld
sub
and
push
loope
dec
mov
xchg
sbb
lahf
lock
retf
cmp
sahf
pop
cmp
mov
rol
or
jl
sub
push
add
shr
das
mov
repnz
and
pop
pop
ds
xor
inc
or
ins
fs
jne
arpl
dec
(bad)
adc
pop
popa
cld
mov
cmps
mov
movs
lahf
retf
mov
pop
hlt
sbb
cdq
loopne
cmps
jae
popf
xor
mov
jp
xchg
jns
std
jle
aaa
lods
in
ss
test
mov
jmp
mov
mov
pop
repnz
dec
movs
adc
repnz
mov
mov
add
je
(bad)
call
or
ja
fucomp
push
cs
mov
les
push
rcr
cmp
jmp
and
dec
pushf
mov
inc
xchg
popa
gs
popa
cmc
jne
int3
sbb
and
dec
jb
lods
push
(bad)
lock
pop
mov
mov
xor
mov
mov
test
loope
pop
ror
jns
fdivr
out
and
adc
adc
push
jbe
mov
jb
xor
xchg
leave
jge
les
cmp
int3
jle
cmp
and
xchg
adc
ret
adc
inc
jl
or
sub
aas
xchg
pop
not
sbb
fbstp
(bad)
ss
xchg
icebp
loope
mov
ins
cmp
cmp
call
pop
xchg
jp
xor
pop
inc
inc
add
scas
aad
inc
lock
mov
loope
into
pop
push
out
jo
hlt
stos
push
mov
ins
push
inc
fsub
jmp
bound
cwde
fwait
push
cmp
sahf
inc
sti
xor
lods
movs
data16
ret
adc
jle
jae
sub
call
mov
xchg
fimul
pop
(bad)
dec
inc
fcom
test
adc
mov
cli
sbb
sbb
iret
dec
mov
(bad)
mov
mov
jmp
mov
cdq
cmps
test
push
int3
sub
mov
call
inc
jne
mov
pop
jmp
xor
shl
mov
movs
jp
add
(bad)
and
ins
rol
xor
push
xchg
popf
cdq
mov
inc
in
es
jge
pop
clc
sub
mov
mov
popa
mov
jae
dec
adc
sub
sbb
cmp
adc
push
push
das
cmp
or
in
xchg
aaa
out
in
retf
mov
adc
dec
sbb
or
inc
pop
adc
dec
push
clc
mov
mov
xchg
inc
rol
out
or
sahf
gs
jge
imul
jmp
sbb
jnp
or
dec
xchg
pop
movs
cmp
add
xchg
or
pop
hlt
mov
loop
push
mov
mov
xchg
aas
pop
(bad)
jno
push
cmp
mov
pop
inc
rcr
or
(bad)
iret
mov
cmp
cmp
in
pop
test
movs
or
aad
adc
jnp
ins
shl
mov
(bad)
rcl
das
sub
dec
shl
push
inc
push
inc
(bad)
jae
mov
push
sbb
inc
arpl
retf
xchg
add
cmp
scas
(bad)
mov
fs
inc
inc
mov
nop
arpl
dec
(bad)
cmps
xchg
sahf
pop
les
idiv
jo
(bad)
in
test
jmp
fstp
(bad)
xor
scas
in
push
jb
(bad)
jnp
cdq
dec
jb
popf
or
fcmovnbe
inc
pop
add
sbb
stos
sar
aad
sbb
xor
ffreep
xor
cmps
shr
ror
test
aaa
dec
shr
pop
fisub
push
cmp
dec
add
loop
movs
hlt
(bad)
mov
jge
scas
inc
pop
mov
call
pop
cmc
(bad)
in
adc
push
imul
inc
xlat
push
sbb
adc
in
xlat
nop
inc
cwde
xchg
mov
icebp
inc
push
adc
xlat
and
cld
fiadd
imul
(bad)
mov
add
fadd
push
xor
jbe
and
test
xor
xchg
xchg
xchg
push
dec
pop
pop
push
mov
xchg
ins
hlt
or
(bad)
fsub
enter
pusha
sub
idiv
into
pop
xor
rol
or
xchg
stos
xchg
xchg
jmp
sub
fcom
inc
mov
sbb
into
mov
mov
adc
pop
mov
push
cmc
push
(bad)
xchg
fwait
in
cli
and
sbb
call
sub
retf
and
(bad)
mov
xchg
scas
stc
sub
dec
sbb
test
pop
sbb
fdivr
cmp
xor
mov
xor
xor
add
mov
aas
jns
add
adc
in
mov
out
ss
loope
add
fwait
pop
mov
mov
mov
jmp
cs
lods
cli
dec
cmp
or
mov
inc
sbb
les
pop
push
loop
xchg
mov
push
xchg
and
dec
frstor
xchg
fwait
loopne
mov
fs
loopne
and
mov
rol
ja
repz
int
xchg
test
add
adc
les
sbb
push
mov
pop
sbb
dec
push
cmp
xor
xchg
sub
mov
jns
das
inc
jmp
iret
adc
dec
fist
out
fld
int
(bad)
loope
inc
cmps
test
ror
xor
xchg
cmp
jg
mov
minps
or
push
pop
jp
outs
sbb
sub
rcl
add
push
xchg
loopne
xchg
push
dec
popf
cdq
test
xchg
mov
and
leave
das
jno
xor
xor
iret
shl
ret
repnz
ss
and
jp
and
mov
dec
mov
inc
xlat
fmulp
ja
xchg
cmp
mov
call
(bad)
aad
(bad)
repnz
cmps
int3
iret
mov
in
mov
jge
push
outs
push
aad
cli
outs
inc
cmp
retf
dec
and
stos
sub
fimul
lea
jmp
cmc
shl
mov
popf
dec
dec
jns
push
lods
loope
movlhps
ins
and
adc
adc
jp
(bad)
adc
mov
mov
add
push
dec
jns
mov
add
imul
inc
les
inc
(bad)
push
sub
xor
je
sbb
push
adc
ss
daa
repnz
jae
test
push
sbb
or
arpl
fidiv
xor
sbb
mov
sub
les
stc
stc
test
cmps
push
pop
retf
mov
push
push
shr
sbb
cwde
rol
mov
sub
jb
xor
int3
xor
push
push
hlt
jnp
jne
dec
sub
jg
xor
mov
std
cli
out
jmp
loop
(bad)
sub
xor
int
mov
ror
hlt
cmps
movs
daa
fcomp
add
int3
xlat
cmps
xor
test
or
cmp
pop
movs
popa
adc
mov
pop
sbb
outs
loopne
xchg
js
cmp
adc
outs
pusha
fdiv
jge
in
xchg
test
repnz
std
fwait
test
std
pop
jo
adc
xchg
mov
dec
sub
push
mov
mov
clc
lea
les
fnstsw
jge
cmps
aaa
lds
aam
push
leave
and
dec
outs
cmc
sub
add
mov
aaa
bound
add
cvtps2pi
inc
in
push
cmc
mov
mov
les
inc
lds
outs
inc
inc
or
mov
xchg
pushf
mov
sub
sbb
push
inc
(bad)
xor
inc
fwait
or
fbstp
ins
xchg
jo
or
mov
fld
jle
(bad)
cmps
and
(bad)
or
pop
arpl
inc
xor
xlat
shl
mov
mov
mov
dec
inc
test
fdiv
in
mov
push
mov
dec
adc
fidivr
aaa
mov
mov
inc
adc
pop
call
mov
sbb
pop
jmp
pop
cmps
test
mov
lods
inc
test
xor
push
fisub
cmp
ins
mov
mov
pop
or
jmp
cmp
cmp
or
and
sahf
push
pushf
int3
scas
arpl
sub
repnz
jno
inc
pop
sahf
mov
xchg
popf
movs
fs
jecxz
int3
shl
push
stos
cmp
scas
fucom
cmps
push
adc
add
cli
int
sbb
js
rcr
(bad)
and
std
scas
out
shl
mov
dec
or
mov
mov
aam
push
cs
stos
mov
xchg
pop
sub
jae
(bad)
test
cmp
stc
jo
lock
inc
sti
not
jo
out
hlt
sbb
dec
je
cmps
jb
movs
int
test
loop
je
pop
jl
pop
xchg
aaa
sbb
lock
out
xchg
pop
lods
adc
jo
test
and
xchg
adc
fwait
lar
jmp
(bad)
push
repz
xor
ins
gs
mov
add
adc
fwait
dec
stc
sahf
mov
push
jbe
mov
iret
mov
in
iret
inc
mov
adc
lock
jmp
shr
(bad)
jmp
dec
loopne
adc
adc
pushf
inc
push
xchg
and
adc
call
jb
loope
ret
inc
stos
push
dec
add
xchg
push
dec
pop
mov
sbb
into
cwde
xor
mov
inc
loopne
inc
les
mov
cmp
stc
pop
test
aas
lock
mov
push
ins
inc
jmp
shr
sbb
stc
jp
imul
push
mov
mov
je
cmp
sar
(bad)
adc
or
jecxz
pop
sahf
and
mov
lods
cs
rcl
mov
jno
xor
mov
and
clc
xor
sub
xor
(bad)
loop
(bad)
xchg
xor
dec
sub
push
jae
add
test
inc
ret
or
sbb
pop
repnz
add
mov
xchg
pop
adc
push
sub
inc
cmps
retf
dec
lea
xor
(bad)
mov
adc
rcr
mov
sub
aad
aam
lods
jo
aam
clc
cmp
push
and
jmp
xchg
or
xor
jp
adc
pop
mov
dec
test
das
push
adc
es
push
pop
loopne
or
or
xor
sub
dec
inc
inc
lea
cwde
or
push
jge
sti
push
lods
xchg
xor
addr16
jge
xchg
add
jge
mov
mov
inc
scas
aam
or
fild
jl
sbb
xor
leave
fs
shl
(bad)
pushf
pop
jge
inc
push
jbe
mov
and
in
fs
jmp
jmp
push
inc
std
lods
add
pushf
xor
jg
stos
push
push
jns
xor
and
mov
dec
mov
sti
sbb
lods
mov
retf
xchg
je
inc
enter
sbb
jae
ret
out
not
addr16
jae
dec
hlt
data16
je
adc
push
cdq
mov
cwde
mov
ja
sar
push
pop
mov
stc
push
jge
push
daa
in
arpl
xor
xor
xchg
popf
push
mov
jl
call
pusha
sahf
test
rcl
jno
mov
adc
idiv
push
pop
add
push
in
or
sub
jle
adc
and
js
sti
lds
in
cs
adc
in
(bad)
popf
sub
fbstp
ficom
sbb
sub
pop
cwde
jmp
xor
push
sub
les
xchg
and
xchg
sub
push
inc
jae
mov
ss
mov
pop
jnp
jmp
jns
fs
(bad)
scas
ret
ror
inc
in
xor
popa
sub
push
imul
pop
sbb
jle
push
mov
xor
xchg
popf
out
push
js
cmc
jno
push
sahf
pop
and
dec
push
cmp
pop
loop
xor
or
mov
pop
into
mov
shr
cmp
jno
and
sub
mov
push
stc
mov
loopne
xor
mov
push
push
cmp
scas
push
fcomi
es
ins
dec
pop
ds
sub
cmp
(bad)
aad
mov
mov
mov
sbb
popf
pushf
xor
mov
xchg
mov
and
nop
jl
inc
(bad)
adc
pop
and
out
fist
pop
or
add
adc
add
mov
jne
add
mov
fcmovnb
jle
lahf
inc
ins
ja
enter
popf
mov
xor
pop
sub
push
xor
dec
lods
stos
bnd
mov
sbb
xor
jae
rcl
(bad)
pushf
lahf
addr16
ins
div
jno
adc
sbb
lock
cmp
aas
jp
test
ins
fsubr
push
sbb
movs
sbb
movs
cwde
push
jmp
mov
dec
call
sbb
xchg
cmp
push
mov
sti
cmp
ins
fs
inc
dec
pop
(bad)
call
dec
jnp
out
fimul
push
xchg
nop
xchg
xchg
repz
fcomp
push
xlat
mov
add
repz
pcmpeqd
ret
enter
ja
mov
pop
push
cmp
lods
mov
jge
jle
cld
ds
push
in
jb
in
dec
mov
or
pop
aas
outs
mov
and
sub
inc
mov
mov
enter
pop
hlt
pop
inc
arpl
loope
cmp
sub
cmp
mov
mov
cmp
xor
ret
or
fcomp
xor
loop
mov
mov
outs
lea
into
out
iret
cmc
int3
sub
fsub
scas
cmp
adc
inc
sub
out
add
or
imul
sbb
jno
inc
test
ret
ds
ss
sbb
(bad)
hlt
xor
iret
inc
sti
(bad)
pop
pop
scas
pop
daa
pop
pop
ins
ds
ins
xlat
cmp
jmp
sbb
dec
movs
cmp
clc
xor
mov
or
xchg
loope
test
outs
lea
xor
and
xchg
cmp
push
loop
or
aad
nop
add
loope
repz
lock
stos
shl
test
bound
cmps
add
test
xlat
nop
cmc
add
adc
pop
add
pop
adc
or
jmp
pushf
aam
in
sub
lods
les
mov
mov
add
cld
(bad)
not
movs
int3
cmp
fisub
iret
scas
int
enter
or
mov
lds
or
addr16
cmp
xchg
add
mov
jb
xor
jmp
xor
fnsave
or
int
xor
rol
jecxz
dec
mov
dec
xchg
or
and
inc
cmp
std
dec
push
push
cs
xchg
out
sbb
sub
jno
jecxz
test
ror
jno
pop
adc
and
mov
hlt
sbb
or
iret
mov
mov
fnstsw
imul
jecxz
fcmovu
jne
pop
fstp
cmp
or
sub
shl
jns
cs
idiv
vpackuswb
fwait
mov
xchg
int3
lods
int3
mov
ds
and
sub
xor
adc
ins
pop
push
push
retf
stos
mov
push
ds
clc
js
and
in
in
stos
jo
retf
out
div
pushf
iret
push
mov
scas
cmp
or
in
sbb
dec
jg
xor
add
iret
lock
fadd
sbb
inc
mov
mov
aaa
and
cld
push
lds
out
aam
sbb
mov
rep
mov
imul
scas
xor
inc
push
add
dec
or
mov
arpl
mov
(bad)
aam
jns
ret
and
cmp
cli
add
and
mov
xchg
not
xchg
push
xchg
pop
enter
adc
in
inc
sbb
xchg
ins
sbb
rcr
mov
dec
cmp
jl
xchg
push
enter
pop
and
loopne
test
les
popf
dec
or
and
xchg
mov
cmc
dec
inc
mov
out
or
fdivr
in
pop
add
dec
jne
clc
sub
test
pushf
inc
push
fist
fidivr
adc
inc
stc
and
aaa
movs
inc
outs
sub
inc
mov
sub
pop
mov
or
sbb
jo
add
cmp
sub
ins
je
add
adc
mov
mul
scas
pop
ja
rcr
xor
pop
lea
add
retf
ins
nop
pop
xor
imul
sub
inc
dec
push
add
mov
in
mov
dec
hlt
cmps
data16
sbb
ss
xor
cmp
data16
xor
out
(bad)
cwde
push
mov
mov
sbb
mov
mov
popf
dec
jmp
and
fisubr
pop
out
push
shr
mov
repz
in
out
in
outs
daa
test
clc
add
loopne
pop
ror
sar
cld
ds
shl
mov
jmp
dec
mov
mov
inc
in
das
nop
cmp
dec
js
adc
or
ret
stc
shl
inc
jno
shr
jb
push
push
int3
inc
adc
xor
xlat
fwait
jg
fadd
push
addr16
jge
jne
add
mov
gs
in
xchg
sti
lods
and
jo
clc
mov
shl
sub
inc
stc
jecxz
cmc
rcl
mov
pop
or
out
sub
jo
popa
movs
xor
ret
jmp
inc
add
adc
je
jmp
daa
mov
inc
sbb
jnp
mov
outs
mov
lods
ret
inc
push
(bad)
add
push
cdq
stos
xor
mov
or
ins
jecxz
out
shl
adc
lods
push
(bad)
mov
sbb
push
jo
int3
data16
xchg
sub
mov
dec
add
loope
xchg
(bad)
fs
and
mov
mov
lods
mov
sbb
iret
pop
cmps
dec
inc
cmp
ss
xor
xor
out
cmp
repnz
jle
mov
xchg
adc
mov
xor
fdivr
sbb
and
mov
jp
and
or
mov
inc
mov
and
adc
into
jl
mov
pop
add
push
jno
jmp
pusha
jle
and
cwde
les
xchg
ret
xlat
sbb
xor
das
jne
(bad)
jmp
cmps
aas
rcl
gs
loopne
fnstenv
xchg
inc
mov
int3
jmp
hlt
rol
sti
ret
adc
or
sbb
(bad)
scas
ins
push
xchg
out
and
add
bound
inc
outs
push
scas
dec
ror
mov
push
xchg
cwde
push
fs
and
inc
cdq
inc
imul
popf
out
xor
arpl
and
jbe
frstor
pop
jae
or
fdiv
xchg
imul
add
clc
nop
dec
cld
test
xchg
pop
push
mov
(bad)
cld
jecxz
mov
push
mov
dec
rcr
jns
xor
hlt
jno
pusha
out
xchg
aaa
xchg
jecxz
cli
in
out
test
jnp
arpl
xor
nop
int3
mov
sbb
mov
mov
stos
scas
data16
cli
xchg
leave
push
xchg
lock
std
xchg
pushf
mov
cmp
cli
out
xor
mov
out
sbb
bound
sub
lock
rol
mov
inc
pop
mov
dec
cli
xor
and
sbb
jnp
push
mov
test
or
dec
(bad)
test
addr16
jno
push
cmp
mov
add
inc
xor
aad
mov
daa
xor
js
shr
cmp
xchg
pop
fiadd
sti
xchg
sbb
pop
out
(bad)
sbb
jecxz
(bad)
(bad)
jge
scas
xchg
hlt
test
jmp
rcl
sub
loop
scas
inc
push
adc
test
aam
das
movs
out
inc
fbstp
sbb
cmps
xor
test
adc
mov
mov
xchg
fmul
cmp
data16
mov
mov
jmp
int
sub
ret
mov
jae
in
pop
mov
pop
stc
mov
or
mov
pop
or
cmc
jp
cmovbe
mov
sti
pop
jmp
adc
inc
sub
jecxz
addr16
ins
fimul
lods
push
push
cwde
dec
xchg
and
add
mov
and
dec
or
inc
sahf
loop
(bad)
cmc
lahf
movs
push
scas
dec
dec
and
cmp
es
push
test
ja
(bad)
cmp
mov
inc
test
lds
sti
stc
pusha
aam
int
imul
js
repz
cmp
arpl
hlt
sbb
cmp
ret
jmp
repnz
inc
sub
(bad)
rcr
shl
in
leave
lock
inc
es
paddb
popf
and
jp
xchg
mov
jp
cmp
mov
push
xchg
push
push
cs
scas
xlat
xchg
or
call
sub
push
or
adc
or
or
push
and
out
push
dec
jmp
int
mov
les
mov
add
mov
enter
out
push
jo
lods
mov
in
scas
add
lock
lea
and
pop
in
repz
dec
mov
ror
push
dec
sub
xchg
nop
sub
aas
push
aas
inc
(bad)
sar
dec
cli
ss
int
stos
loopne
mov
pop
jb
sub
xchg
sub
push
in
adc
jne
dec
mov
dec
xchg
adc
repnz
mov
inc
es
xor
mov
xor
or
mov
and
mov
jg
sahf
sbb
stos
push
mov
(bad)
push
sub
out
pop
(bad)
xor
scas
adc
cmps
pop
retf
fstp
sbb
mov
or
icebp
in
repnz
mov
cmc
retf
mov
aaa
in
bound
out
imul
or
inc
and
lea
mov
arpl
xor
cmp
mov
hlt
inc
movs
clc
lock
cli
jo
jge
pop
pop
jbe
sbb
es
loope
cmp
enter
outs
mov
stos
rcl
icebp
push
add
or
popf
add
aas
mov
mov
fs
mov
(bad)
mov
ror
jno
xlat
jb
cmova
bnd
call
jge
mov
push
out
ja
ds
fsubr
or
push
fisttp
leave
xor
xor
jb
nop
xor
jmp
push
imul
imul
mov
ja
adc
int
mov
inc
push
sbb
inc
jmp
and
or
movs
sbb
shr
adc
test
dec
dec
movs
arpl
fwait
and
add
push
aad
push
cmc
push
jne
mov
icebp
repnz
jns
movs
xlat
mov
or
push
or
int
pushf
ja
scas
bts
fstp
push
inc
ret
movs
sub
(bad)
loop
(bad)
jp
addr16
dec
mov
xor
jo
push
je
stos
xor
sahf
push
pop
test
je
lock
pop
out
add
jp
sub
gs
cmps
ds
lods
mov
fsub
jge
lods
jmp
and
adc
ret
mov
icebp
test
xchg
daa
clc
movs
movs
cmp
dec
mov
mov
sub
mov
and
lahf
or
jb
aad
ss
aas
inc
adc
ror
lock
cmp
retf
dec
jnp
and
adc
mov
(bad)
loope
imul
ins
push
(bad)
mov
add
mov
xchg
xor
das
jne
xchg
sbb
dec
jge
mov
pop
pop
(bad)
cmp
push
or
xor
cmp
(bad)
in
cmp
push
into
bound
mov
jne
pop
jne
cwde
cmps
ds
jae
mov
cmp
js
fdivr
ins
idiv
xor
mov
inc
add
pushf
in
pop
js
sbb
mov
push
js
test
and
inc
cld
xchg
cwde
arpl
sub
ror
jns
mov
ins
and
adc
pushf
adc
in
sub
jge
dec
das
in
call
jbe
stos
jb
das
call
push
push
inc
inc
jl
pop
xor
in
inc
dec
cdq
adc
dec
movs
(bad)
xor
loopne
stc
and
xor
sbb
dec
imul
pusha
int
out
jl
(bad)
pop
aaa
mov
xchg
(bad)
jns
or
mov
ins
xor
(bad)
icebp
les
fild
rcr
fwait
lods
not
inc
shr
jp
push
cli
inc
aam
ret
push
add
hlt
mov
int3
(bad)
loope
aas
add
arpl
(bad)
cmp
std
sbb
sbb
adc
adc
push
in
jle
bound
shl
or
hlt
xor
bound
sbb
pop
mov
imul
out
push
mov
(bad)
mov
add
pop
push
pop
adc
and
out
shl
push
in
int
call
adc
les
mov
inc
mov
aam
bound
inc
outs
pop
js
mov
xchg
in
jmp
call
mov
add
jge
cmp
imul
(bad)
and
or
pop
add
ss
icebp
inc
mov
jmp
test
jmp
mov
pop
and
iret
mov
dec
pop
pop
test
cmp
loopne
mov
out
and
ret
sub
cmp
xor
aam
ds
mov
pop
dec
push
mov
mov
out
push
inc
inc
sub
outs
btc
stos
into
shl
outs
aas
and
es
in
jge
lds
xchg
dec
sbb
outs
sbb
cld
sub
cmp
xor
adc
(bad)
xor
push
ss
jmp
jl
add
jmp
ficom
mov
pop
jnp
add
jmp
scas
xchg
ins
jne
sti
cmps
fwait
push
xchg
xchg
jle
sbb
ds
add
retf
movs
xor
cmp
fiadd
mov
push
je
stos
xlat
fldenv
int
pushf
pop
repnz
adc
sub
xor
fwait
mov
sub
test
in
repnz
call
(bad)
shr
pop
add
inc
fs
pop
dec
xor
push
cmp
xor
pop
out
mov
dec
jb
mov
ret
in
ret
push
jo
mov
aas
mov
sub
push
sbb
retf
xchg
cmps
adc
movs
cmps
adc
pop
cli
push
xor
sub
ss
cmp
imul
xor
mov
repz
scas
jl
pusha
stc
and
and
mov
adc
jae
cmc
inc
sub
inc
sbb
sti
sahf
xor
fild
pushf
mov
fprem
out
pop
sbb
adc
push
push
add
inc
mov
call
clc
pop
stos
ja
pop
test
loop
mov
nop
stos
add
pop
es
je
sbb
ds
out
out
cld
jne
repz
sub
call
imul
aam
sbb
pop
cmps
fisub
out
icebp
enter
push
adc
aad
and
in
xor
shl
mov
(bad)
xor
xor
mov
js
mov
bound
adc
mov
push
outs
stos
stos
lods
stos
cmps
(bad)
push
mov
push
fist
push
pop
jg
loopne
or
add
cmp
ds
retf
lds
mov
push
mov
push
bound
int
sbb
and
movs
hlt
mov
or
mov
ret
add
xor
mov
scas
jp
mov
outs
dec
fisttp
xchg
repz
ins
retf
dec
cld
outs
xlat
jmp
push
(bad)
jne
inc
jno
adc
pop
xor
jmp
mov
(bad)
jo
mov
adc
lods
xchg
out
sbb
sbb
scas
popf
jae
loop
sub
add
add
jmp
fs
retf
mov
js
sar
cwde
(bad)
mov
adc
sbb
mov
or
sbb
and
fmul
xor
(bad)
rcr
adc
sub
js
jb
dec
ret
int3
pop
sub
call
inc
cmc
pop
fimul
xchg
lods
adc
and
pop
lds
push
int
cmp
fs
push
gs
add
mov
sbb
lds
imul
(bad)
(bad)
add
scas
in
xlat
stos
icebp
sub
test
int
(bad)
bound
lock
push
movs
clc
aad
fiadd
or
les
sbb
add
push
fmul
fidivr
mov
ins
je
mov
js
and
enter
fadd
mov
and
sar
sbb
outs
and
(bad)
xor
add
out
dec
shl
lods
out
or
int3
int3
call
leave
sbb
(bad)
fld
cmp
ins
xor
shl
test
adc
enter
in
dec
out
sbb
pop
push
in
push
loop
sbb
mov
push
stc
mov
or
bound
cdq
xchg
ins
packuswb
stc
loop
dec
pushf
pop
mov
pop
cmps
jae
jecxz
xor
das
jl
fnstcw
inc
push
fidivr
push
xor
fmul
inc
(bad)
mov
lock
xor
adc
lods
(bad)
rol
movs
outs
es
push
ins
mov
fsub
adc
or
(bad)
in
movs
ror
outs
xchg
cdq
repz
dec
aam
mov
dec
pushf
ins
into
and
pushf
test
dec
cmps
data16
fdivrp
retf
sub
fs
cmps
cmp
inc
jae
test
loop
or
mov
test
xlat
xor
sar
lods
div
iret
pop
jmp
sub
inc
add
jno
jae
and
mov
xor
jge
test
in
sbb
xor
mov
lods
push
call
enter
jnp
jl
outs
lods
inc
test
lods
add
sub
stos
into
loopne
in
push
(bad)
(bad)
mov
movs
dec
mov
call
dec
int3
dec
data16
hlt
dec
mov
dec
adc
mov
xor
outs
ret
and
loop
enter
mov
dec
jne
pop
(bad)
rcr
mov
rep
xor
ds
popf
and
movs
out
inc
jmp
ja
add
pop
jl
dec
out
daa
or
dec
hlt
das
or
mul
lods
push
xor
push
and
popa
adc
jno
aam
xchg
inc
dec
(bad)
xor
repz
(bad)
rcr
fwait
and
icebp
mov
mov
xor
jmp
pop
movs
in
daa
xchg
or
cdq
adc
jmp
mov
aam
dec
pop
mov
sub
xchg
scas
xchg
push
and
nop
mov
xchg
je
sbb
pop
xchg
ins
jle
idiv
add
xor
cld
dec
mov
rol
mov
loope
mov
in
jb
push
adc
mov
movs
inc
inc
push
cmp
jo
mov
dec
test
inc
lods
std
in
adc
fidiv
in
call
loop
push
jmp
stos
or
mov
out
pop
sbb
jmp
movs
stc
cmp
sbb
out
movs
cdq
add
pop
pop
inc
mov
repnz
push
gs
outs
fstp
jns
fwait
scas
iret
pop
jo
push
imul
and
out
or
adc
fdiv
ret
xchg
and
pusha
push
mov
push
rcr
cs
rol
xchg
jo
pop
cmp
jb
retf
aas
test
retf
movs
sbb
pop
jo
rcl
jbe
rcr
and
ins
sti
mov
in
(bad)
mov
or
or
hlt
sub
cmp
pop
jmp
cmp
mov
ja
xchg
adc
cmps
ins
in
loop
iret
jl
outs
ficomp
or
xchg
push
sbb
inc
xor
imul
cmp
or
or
(bad)
and
fcom
ret
lds
mov
popf
add
mov
xor
mov
aad
pop
iret
shl
std
ret
js
inc
add
push
jl
shl
inc
mov
aaa
out
xchg
dec
ret
imul
in
inc
scas
sub
sbb
(bad)
xchg
pop
rol
xchg
pop
inc
add
in
add
inc
loope
pop
jecxz
test
or
(bad)
cwde
call
js
jnp
dec
cmp
ror
pushf
(bad)
mov
fwait
jmp
inc
xchg
or
fisub
sbb
cmp
cmps
mov
aaa
je
mov
xchg
(bad)
int3
bound
jno
das
and
ficom
push
xor
mov
jbe
mov
push
ret
jno
dec
mov
jo
inc
call
fbld
push
and
mov
and
lods
or
pop
pop
xlat
inc
mov
aad
test
dec
push
(bad)
in
rcl
or
sbb
test
dec
mov
add
sbb
push
pushf
jo
add
std
lods
dec
mov
mov
xlat
leave
jmp
cwde
sub
stos
pop
pop
lods
push
(bad)
sub
stc
loopne
push
xor
mov
pop
and
or
(bad)
ja
(bad)
xor
mov
stc
stos
popa
mov
dec
out
add
mov
imul
adc
scas
lods
xchg
pop
sar
fnsave
jnp
sub
movs
jne
mov
(bad)
(bad)
fcmovne
(bad)
addr16
je
and
out
mov
or
cmp
cli
ret
mov
ficomp
cmp
xchg
mov
jmp
sbb
addr16
sub
inc
outs
mov
mov
cmc
jle
mov
popa
jno
adc
pop
push
lahf
jle
(bad)
mov
call
push
cmp
(bad)
mov
jmp
int3
stos
sub
in
loop
test
adc
xor
sub
ror
and
mov
movs
xchg
mov
add
lods
cld
mov
cld
cmp
fild
js
loop
and
mov
es
adc
popa
ja
sar
outs
push
inc
adc
loop
les
adc
(bad)
mov
sub
popa
cli
sbb
loopne
fcmovnbe
jecxz
add
adc
(bad)
mov
jge
mov
or
lock
add
dec
dec
out
test
mov
jo
sbb
sbb
nop
retf
cmp
pusha
adc
mov
pop
in
cmp
or
fucomip
bound
and
ror
dec
inc
push
les
in
repnz
loop
ret
push
mov
push
mov
ins
imul
mov
xchg
nop
pop
sbb
push
mov
add
jg
sub
inc
adc
inc
imul
int
loope
pop
repz
mov
sub
sti
shl
sub
jb
jg
nop
cmp
(bad)
pop
fisttp
gs
stos
jmp
ror
fistp
sbb
add
dec
scas
fst
mov
cld
das
or
pop
push
cmps
dec
ror
(bad)
in
pop
fwait
jecxz
stos
and
adc
das
int
inc
(bad)
mov
mov
cdq
xchg
jp
imul
mov
mov
js
jo
dec
cmp
pop
(bad)
retf
xchg
push
push
xor
out
jb
mov
aad
ja
js
(bad)
or
(bad)
les
leave
movs
js
shr
push
inc
adc
jmp
pop
pop
or
push
sbb
mov
popa
cmp
cmp
(bad)
fldcw
sub
adc
sub
or
scas
xor
clc
mov
jp
call
dec
mov
xor
dec
ds
aaa
cmps
pushf
push
dec
mov
iret
outs
push
stos
mov
mov
(bad)
out
arpl
leave
cmc
in
dec
in
inc
push
pop
das
push
movs
add
mov
rcl
lods
jge
mov
test
and
out
fwait
adc
sbb
fistp
enter
push
push
sub
clc
push
stos
sub
popf
mov
cmps
dec
(bad)
dec
mov
mov
aaa
push
rol
lods
cwde
fidiv
mov
dec
imul
test
add
push
and
xor
ins
leave
jmp
jle
sbb
shl
shl
ins
dec
stc
mov
cmp
pop
add
lods
test
(bad)
push
(bad)
fcom
xor
ror
jb
jno
adc
(bad)
scas
pop
sar
jmp
ror
ret
dec
xlat
call
mov
out
push
arpl
aas
mov
sbb
leave
adc
fdivr
cmp
aas
stos
xchg
hlt
loopne
sti
and
jbe
dec
mov
mov
(bad)
sub
cmp
(bad)
dec
pop
bswap
sbb
mov
pushf
enter
push
leave
jbe
cmp
shr
ja
jmp
xchg
and
cmps
ins
repnz
div
push
call
xor
sub
test
neg
and
sti
mov
dec
out
clc
data16
mov
adc
pop
xchg
adc
adc
mov
jge
sbb
aad
shr
jno
popf
or
out
out
adc
pop
aas
pushf
cmp
out
or
pusha
mov
or
stos
lods
std
jnp
stos
movs
mul
test
outs
xchg
push
shl
add
pop
in
pop
nop
dec
mov
push
shl
scas
popf
loopne
adc
push
out
sbb
mov
mov
dec
jbe
dec
adc
sbb
pop
mov
cmp
div
sbb
inc
in
cmp
jnp
xchg
adc
and
push
add
cmp
in
push
xor
imul
in
call
arpl
arpl
mov
cmp
ret
(bad)
popa
adc
inc
inc
pop
dec
adc
(bad)
xor
jmp
sbb
sar
and
mov
ins
xor
sti
push
shr
gs
inc
(bad)
aam
sahf
lods
add
into
mov
into
adc
and
xchg
pop
aas
mov
jae
cmp
push
bound
loopne
sti
test
gs
adc
push
outs
(bad)
lods
mov
mov
pop
movs
adc
sbb
and
loopne
rcr
loopne
and
push
(bad)
mov
cmp
add
fsubrp
cmp
sbb
scas
mov
dec
(bad)
lods
sub
mov
into
jge
xchg
lock
mov
cmps
fsubr
jns
(bad)
mov
lea
xor
in
cvtps2pi
add
mov
loop
xchg
push
aas
sbb
lahf
sub
movs
lock
push
cdq
add
repnz
es
xchg
lods
mov
xchg
and
int
xchg
rcr
xor
gs
aas
aaa
pusha
xor
fdivp
xchg
add
popa
cmp
les
xchg
inc
punpcklbw
and
imul
sub
imul
push
fnstsw
cmc
pop
sub
sbb
push
mov
xchg
sbb
imul
mov
lea
(bad)
jmp
test
or
shl
ret
arpl
stc
data16
sbb
loope
lahf
and
and
(bad)
mov
inc
(bad)
adc
imul
lock
mov
in
dec
jns
je
aas
pop
call
hlt
aam
add
inc
xchg
and
ret
sahf
nop
ss
or
out
pop
gs
fcomp
xchg
jl
sub
call
pop
stos
je
xchg
mov
adc
dec
or
xchg
test
sbb
cmps
daa
out
mov
imul
lock
stc
je
idiv
rcr
lods
cmp
jmp
cmc
stos
ror
cmps
std
mov
push
mov
pop
push
or
es
(bad)
(bad)
movs
(bad)
lods
and
mov
dec
push
(bad)
ja
sbb
xchg
push
scas
out
test
ja
loop
sti
mov
inc
jnp
shr
ins
icebp
movs
pop
pop
fmul
in
xor
sar
push
pop
ins
sub
mov
mov
sar
sbb
sub
enter
ds
out
nop
pop
pop
cld
mov
(bad)
repnz
movs
arpl
lods
cld
or
push
xchg
mov
mov
add
arpl
(bad)
and
adc
rcr
and
test
in
scas
out
(bad)
mov
fldcw
push
cli
or
shl
inc
ss
xchg
or
lds
repz
pop
xchg
push
pop
stos
pop
vmwrite
popf
and
in
lea
sub
cmp
icebp
pop
push
mov
cld
mov
mov
mov
push
add
cmp
in
dec
lods
nop
mov
xchg
pop
aad
sbb
out
fwait
mov
jmp
mov
out
inc
jl
int
xchg
(bad)
cmps
fcom
adc
jg
test
sahf
cld
jge
xlat
add
push
cmp
(bad)
mov
leave
jns
jb
xor
loopne
dec
sub
cmp
mov
(bad)
rol
jnp
test
push
fadd
jae
les
pop
jns
repz
sbb
xchg
mov
mov
jge
and
mov
push
and
in
shl
in
push
cmp
mov
jg
adc
repz
xlat
rcl
ins
cmp
push
mov
int
cmp
and
aaa
addr16
cdq
adc
xchg
adc
xchg
dec
mov
jl
test
ror
shl
(bad)
nop
fs
or
adc
and
rep
jmp
mov
dec
push
call
in
stos
or
retf
shr
jbe
mov
mov
stos
rcr
adc
mov
push
or
adc
xchg
push
jmp
neg
cmc
nop
int3
repz
bound
mov
mov
movs
pop
push
inc
ret
scas
xchg
jbe
lahf
or
fdiv
mov
adc
jbe
rcl
retf
pop
jl
es
xchg
in
aad
movs
jmp
jnp
inc
sub
mov
outs
fiadd
ins
pushf
lods
adc
push
or
xor
add
stos
pop
xchg
sub
and
lea
out
jns
xchg
neg
bnd
push
xchg
adc
add
das
adc
mov
(bad)
pop
and
dec
cmp
xlat
fldenv
ins
mov
push
call
mov
jne
dec
mov
popf
cmc
fwait
ja
cmp
add
aam
cmp
repnz
inc
inc
(bad)
call
push
xchg
aaa
sub
pop
jbe
adc
xchg
add
(bad)
cmc
and
scas
jecxz
pop
xchg
in
ja
inc
add
mov
lods
int
mov
dec
sbb
add
and
std
jg
add
stc
syscall
push
dec
loopne
mov
and
les
sti
xchg
mov
or
dec
(bad)
adc
in
fistp
sbb
cmp
adc
shl
jae
cmp
sub
or
and
ret
adc
pop
cld
in
lods
and
icebp
pop
pop
push
xchg
out
cld
xchg
sub
pop
or
add
(bad)
das
and
add
cmp
loop
lea
jg
jae
push
pop
adc
sti
nop
jb
push
and
add
fbstp
or
fisubr
test
std
pop
adc
in
adc
xchg
push
or
clc
jle
mov
pop
repz
jb
imul
adc
cld
(bad)
or
adc
mov
or
aad
adc
xor
jnp
aas
jmp
pushf
and
or
mov
neg
dec
shl
xor
into
ret
lea
sahf
les
in
int
cmp
movs
and
iret
test
inc
aad
scas
cs
dec
push
push
xor
xor
std
pop
dec
xchg
xor
(bad)
pop
or
or
fdivr
nop
push
pushf
fiadd
add
push
leave
and
and
jo
push
add
mov
pop
mov
mov
or
ret
es
jmp
jo
outs
add
push
cmp
test
dec
add
inc
cmp
sub
dec
or
pushf
cmp
jo
retf
or
cmp
fs
mov
ja
xor
cld
and
pushf
repnz
in
int
neg
in
mov
rcr
pushf
push
call
mov
dec
push
test
sbb
scas
test
(bad)
adc
adc
cmp
aad
fsubr
fwait
imul
ins
sub
jo
xor
xchg
or
jo
sbb
sub
or
inc
mov
inc
sbb
aaa
sbb
or
les
jle
fbstp
or
shl
in
mov
mov
fadd
(bad)
jg
fld
(bad)
movs
mov
popf
sub
lahf
cmc
cmp
xor
mov
dec
and
push
pop
(bad)
sbb
sub
jae
cwde
mov
and
stos
cld
test
mov
push
xor
xchg
push
xchg
push
adc
jbe
out
and
add
movs
cmps
or
mov
adc
loopne
pop
pop
outs
sbb
jp
cmp
jno
push
cmp
clc
pop
push
sub
cs
pop
cwde
pushf
mov
xor
inc
cld
inc
ficom
push
outs
sbb
mov
sub
xor
mov
jbe
dec
adc
(bad)
bound
jg
jno
(bad)
jle
(bad)
gs
int
lock
sub
push
stos
addr16
(bad)
push
pop
imul
and
dec
frstor
popf
(bad)
scas
popa
mov
dec
adc
gs
mov
in
adc
shl
mov
jle
inc
mov
jmp
mov
sbb
mov
jmp
pop
jmp
mov
push
xchg
or
jns
mov
jno
add
das
xchg
sub
mov
into
ins
inc
pop
cmps
mov
in
push
aam
jecxz
jo
dec
xchg
pop
xchg
xor
je
mov
push
xchg
sar
(bad)
push
mov
sub
xchg
fistp
les
dec
test
jb
mov
pop
jnp
jmp
fwait
mov
std
dec
test
mov
sub
inc
and
mov
and
xor
sbb
mov
loope
emms
test
xlat
bound
jb
add
int
xchg
mov
ret
mov
mov
push
inc
pop
out
dec
push
inc
inc
sub
push
add
adc
sahf
inc
jne
xor
pop
ds
mov
xchg
cmc
or
jmp
sbb
out
stos
inc
ss
push
je
mov
push
add
push
neg
in
push
(bad)
sbb
and
hlt
mov
jo
fcom
mov
sub
fild
fild
mov
repz
jbe
lds
mov
in
and
not
cs
sbb
pusha
nop
loop
inc
(bad)
in
loope
repnz
xchg
xor
mov
adc
(bad)
xchg
mov
xchg
call
retf
out
jle
sahf
sahf
int3
xchg
hlt
ret
dec
jecxz
fild
test
daa
jmp
loopne
push
je
pop
fld1
push
sub
dec
add
sub
pop
retf
test
mov
push
(bad)
mov
inc
jmp
or
movs
sbb
pop
test
pop
in
std
loop
in
sub
mov
lea
sbb
adc
shl
or
sbb
les
push
adc
cs
and
pop
and
and
xchg
fldenv
jae
or
lods
outs
mov
or
mov
icebp
mov
or
sub
addr16
mov
outs
mov
div
jl
and
movs
mov
bound
sti
rcr
(bad)
jg
sbb
ror
mov
out
pop
iret
xor
dec
fisubr
dec
clc
pop
adc
sbb
pop
in
call
cwde
sbb
lfs
popa
retf
ins
(bad)
push
inc
push
cwde
push
loopne
pop
in
and
shr
cmp
call
and
iret
and
(bad)
jmp
outs
xchg
or
pop
repz
movs
enter
lds
fistp
sbb
shr
(bad)
daa
sbb
test
inc
add
movs
js
das
adc
jne
jle
mov
push
push
inc
pop
repnz
mov
jge
(bad)
es
cmp
sub
inc
pop
jo
xchg
cmp
mov
movs
rol
(bad)
mov
movs
mov
sbb
mov
sub
shr
sub
test
cli
add
enter
(bad)
outs
inc
les
dec
pop
push
(bad)
and
call
dec
(bad)
push
(bad)
lods
js
jmp
int
pushf
icebp
sbb
pop
or
inc
and
lods
xor
mov
add
pop
lods
and
adc
push
sbb
cdq
icebp
fstp
dec
cmps
nop
popa
mov
push
mov
push
test
ja
sbb
mov
sub
mov
inc
test
xchg
(bad)
adc
mov
xlat
es
ror
add
adc
pop
xchg
xlat
cmps
retf
inc
add
(bad)
scas
cwde
and
push
inc
dec
out
and
jo
push
repnz
mov
jnp
mov
cmc
cmp
xor
arpl
mov
movs
jb
add
loopne
aaa
adc
rol
xlat
sbb
mov
adc
pop
in
dec
dec
pop
add
mov
sbb
lods
repz
pusha
dec
jbe
inc
scas
mov
or
mov
(bad)
(bad)
pusha
mov
xor
xor
inc
mov
push
mov
push
mov
cwde
add
xor
ret
xchg
jecxz
sub
pop
pop
movs
test
adc
(bad)
xchg
cmp
fisub
fs
jae
and
int3
jnp
rcr
cdq
inc
push
scas
push
dec
fs
aam
(bad)
push
pop
movs
fimul
fdivr
fsubr
fistp
sub
cld
ret
jnp
fs
xchg
sub
test
pop
cmp
or
hlt
leave
ss
push
std
sbb
adc
ret
aam
push
jnp
pop
xchg
and
stos
adc
mov
push
mov
sbb
xchg
push
mov
in
ja
push
aam
push
loope
mov
cmps
pop
outs
inc
adc
jb
push
js
fdivr
js
imul
pop
dec
cmp
jmp
mov
scas
cmp
or
pop
pop
dec
int
xor
mov
enter
or
push
icebp
les
sub
pop
jbe
test
cmp
clc
in
xchg
test
mov
pop
push
inc
(bad)
xchg
cmp
cli
pop
sahf
add
add
sbb
stos
mov
fisub
inc
xor
or
inc
adc
or
and
popa
add
jnp
jmp
or
iret
push
xor
test
adc
(bad)
mov
jmp
movs
icebp
xor
ins
or
pop
int3
nop
jo
ds
pop
mov
imul
xor
and
bnd
mov
xchg
loop
dec
enter
movs
out
push
pushf
je
mov
rol
std
shl
xor
mov
bnd
pop
div
push
ins
sbb
repnz
fstp
mov
add
jmp
dec
cmp
jp
xchg
ins
jg
adc
ja
fdivr
aas
and
idiv
push
add
and
jle
out
xchg
aam
stos
mov
sub
nop
and
lds
in
call
dec
in
lock
daa
inc
movs
mov
sub
out
out
dec
je
xor
aam
lods
and
hlt
sbb
aam
fmul
pop
mov
scas
inc
inc
pusha
push
(bad)
clc
cmps
jbe
mov
rol
pop
lds
pop
or
adc
pop
js
fs
sbb
mov
inc
xor
cmp
bound
jle
pop
xchg
sub
xchg
test
pop
jne
mov
push
mov
sub
call
cmp
mov
push
hlt
pop
leave
and
add
loope
dec
mov
mov
push
push
sbb
mov
dec
aam
mov
mov
push
dec
mov
aas
enter
mov
retf
ja
xchg
dec
fistp
mov
pop
xor
aaa
(bad)
sub
push
(bad)
in
add
dec
fabs
push
mov
xchg
add
xchg
int3
ret
retf
jae
(bad)
ins
dec
mov
pushf
push
ss
sbb
adc
test
ret
icebp
(bad)
ins
icebp
or
loopne
xor
lahf
(bad)
and
(bad)
retf
mov
cmp
mul
xchg
out
xchg
and
pop
mov
cmovl
ret
or
in
sub
daa
cmc
jg
movs
pop
jge
xor
jbe
adc
(bad)
shl
jb
iret
je
wbinvd
loopne
loope
cli
cmp
push
iret
(bad)
int
arpl
sub
dec
pop
shl
test
mov
mov
dec
inc
pop
int
lods
imul
in
test
(bad)
out
mov
jnp
jge
mov
or
repnz
ror
jmp
test
push
test
popf
cld
sbb
push
push
push
int3
sub
mov
add
cmp
dec
pop
jecxz
pop
icebp
pop
jmp
das
shl
mov
adc
add
shl
or
mov
fmul
jge
sbb
sahf
les
out
fdiv
push
xor
in
inc
mov
cmps
adc
imul
mov
and
jmp
or
jle
(bad)
jmp
enter
and
imul
cwde
lds
jp
jae
sbb
jmp
cmp
push
popf
lea
rcl
cmc
or
daa
xchg
mov
mov
inc
push
inc
mov
shr
div
dec
leave
repnz
sbb
addr16
bound
and
sti
dec
cmc
mov
mov
adc
cwde
mov
and
add
lods
jnp
push
inc
std
mov
mov
or
cmp
(bad)
les
mov
xchg
inc
xchg
sbb
inc
fidiv
and
add
xor
pop
mov
call
or
jecxz
je
ins
clc
sub
mov
adc
popa
inc
stos
dec
or
jmp
lea
xor
and
xchg
mov
cmps
adc
arpl
lock
fld
cdq
sbb
fdivr
mov
fcmovu
movs
mov
arpl
cdq
sub
fwait
push
dec
(bad)
mov
hlt
and
dec
test
mov
int3
cmps
aam
lock
loope
push
inc
and
mov
pop
push
dec
(bad)
fadd
mov
push
(bad)
jb
adc
shl
jg
jp
js
add
(bad)
(bad)
push
adc
sti
xchg
aaa
fnstcw
retf
popf
and
xor
arpl
or
jg
test
fcmovu
and
(bad)
xor
jne
jb
jecxz
mov
inc
sbb
(bad)
imul
sti
addr16
cmps
mov
cmp
ds
xchg
mov
cmps
jns
jno
jne
sbb
inc
lahf
in
sub
sbb
xchg
mov
pushf
cwde
jne
sub
push
mov
loopne
push
mov
inc
cdq
clc
outs
neg
mov
stos
das
push
push
jnp
seto
lods
mov
js
pop
pop
call
mov
in
mov
sub
mov
cmp
push
mov
lods
mov
push
mov
inc
sub
mov
icebp
jae
push
mov
(bad)
jae
sub
push
(bad)
f2xm1
fsubr
ins
aas
imul
xchg
xor
fmul
mov
mov
daa
mov
fwait
sbb
mov
mov
xor
xchg
test
inc
inc
iret
imul
pop
sbb
or
cli
or
dec
sti
mov
cmp
cmp
dec
adc
in
iret
cdq
out
or
mov
jg
dec
enter
div
inc
in
push
sub
inc
retf
jle
mov
out
xchg
jno
out
dec
pop
add
stc
int
dec
in
fwait
pusha
popf
and
rcr
push
cmp
cmps
dec
sbb
rcr
cmp
xchg
mov
fsubr
and
mov
push
jnp
mov
in
push
je
push
leave
sub
sbb
add
(bad)
cli
inc
jns
jmp
or
xchg
cmp
inc
out
shl
lock
cmp
fsub
push
mov
push
aas
data16
icebp
jle
mov
(bad)
dec
inc
mov
cdq
cmp
jmp
std
movs
jl
mov
inc
sub
xchg
fistp
jns
inc
mov
push
movs
mov
mov
(bad)
scas
push
leave
dec
stc
jmp
push
cmps
outs
jb
ja
cmp
mov
shl
dec
scas
xor
or
pop
xchg
not
aam
cli
pshufw
or
dec
inc
dec
sub
xchg
inc
mov
xchg
lahf
test
xlat
dec
jg
xchg
xlat
mov
cmp
dec
push
mov
outs
mov
dec
push
jge
lods
test
stos
push
pop
add
nop
sahf
cwde
cmp
in
clc
push
bound
cdq
(bad)
mov
pop
dec
push
add
repnz
aam
or
jp
les
mov
aam
adc
loopne
cmc
gs
out
adc
and
imul
cmps
pop
fnstsw
push
(bad)
jns
ret
mov
test
xchg
imul
push
arpl
daa
les
cmp
es
pop
cmps
aas
ss
imul
popw
adc
addr16
pop
inc
dec
out
xchg
test
mov
sub
ror
mov
xor
mov
(bad)
enter
cmp
and
mov
stos
mov
fsubr
push
mov
daa
add
mov
fcmove
rcl
mov
mov
fadd
shr
sbb
ret
jp
add
cmp
adc
jbe
mov
dec
fstp
jns
mov
cld
lods
test
sub
push
cmps
dec
push
cmps
xchg
in
or
jg
dec
call
or
cmp
in
cs
add
jp
mov
dec
in
add
push
mov
jge
ins
cmp
inc
inc
mov
call
or
add
pop
int3
adc
js
dec
nop
add
mov
adc
or
out
pop
push
aam
and
repz
in
dec
jae
sbb
int3
jne
ja
or
mov
loope
and
shl
xor
jnp
call
adc
mov
dec
add
pop
mov
jnp
icebp
int
rcr
push
jecxz
(bad)
mov
pop
jecxz
sbb
inc
sub
jne
pop
and
ror
ss
in
push
mov
dec
push
mov
mov
(bad)
dec
jne
in
sbb
add
aam
cmps
(bad)
mov
cmp
mul
sub
cmps
mov
iret
nop
out
mov
push
sub
jp
jnp
(bad)
jge
imul
pop
jg
mov
sub
mov
mov
and
mov
std
cmp
rcr
inc
cmp
inc
ret
jle
out
push
jno
dec
push
in
sbb
lods
std
mov
scas
test
dec
dec
je
adc
outs
cmps
jo
stos
or
fdivr
dec
xor
add
fdivr
adc
adc
or
rol
lods
cmp
adc
mov
ds
jl
out
xchg
clc
cmp
fs
outs
add
adc
jp
aas
cmp
pop
sub
mov
movs
ror
aad
(bad)
jmp
int
jne
pop
cmp
xor
sti
add
loop
stos
xor
mov
repnz
sbb
in
outs
int
mov
les
(bad)
std
and
add
mov
test
xbegin
test
dec
std
(bad)
pop
pop
adc
jle
jae
bound
cmp
xchg
sub
(bad)
sbb
jg
(bad)
or
adc
sbb
adc
push
shl
push
add
call
out
mov
cmc
data16
loopne
pop
mov
outs
add
div
xchg
loop
mov
add
cdq
dec
push
inc
pop
lods
in
push
fidiv
pop
retf
iret
adc
mov
mov
pop
pop
push
in
sbb
adc
out
imul
adc
pusha
push
jle
or
fs
jecxz
not
popf
jo
sub
sub
jl
je
in
jb
mov
adc
fucom
jae
stos
xor
sbb
movs
pop
call
dec
sbb
mov
loop
es
push
lock
(bad)
test
cmp
lds
pop
sub
xor
scas
mov
inc
rol
and
pop
mov
add
sar
xchg
ss
mov
popa
mov
fldpi
jbe
sbb
xchg
es
mov
and
out
rol
xor
bound
push
int
call
and
push
stos
adc
dec
movs
and
sbb
or
pop
push
mov
xchg
mov
inc
mul
sti
sub
inc
ins
test
fsub
mov
les
xchg
or
mov
dec
jp
xchg
movs
push
mov
jns
or
(bad)
mov
xchg
adc
sub
mov
jmp
stos
movs
or
mov
test
daa
jmp
pop
ja
sahf
into
pop
out
jne
pop
scas
cdq
push
retf
mov
dec
js
mov
in
cwde
cld
dec
call
mov
ret
in
pushf
jno
stos
idiv
xchg
vshufpd
push
add
add
add
adc
pop
cli
mov
xchg
mov
cmp
in
loopne
rol
add
std
mov
repz
movs
stos
std
rcl
and
repz
push
lds
and
jbe
(bad)
mov
mov
xchg
jo
outs
movs
pop
int
pop
mov
dec
jns
adc
pushf
adc
jmp
rcr
pop
add
rcr
scas
push
add
js
mov
inc
repz
ss
orps
or
dec
push
cmps
sub
out
mov
sbb
add
fs
sub
pop
imul
bound
lock
inc
retf
xor
daa
pop
pop
add
loopne
sub
push
shr
jb
cmc
or
mov
inc
mov
das
in
and
idiv
repnz
jbe
arpl
stos
push
or
mov
fcmovne
xor
jecxz
daa
shl
out
pop
xor
push
iret
or
jbe
push
out
mov
dec
pushf
push
push
mul
mov
xor
shl
xchg
xchg
pop
fmul
in
push
std
retf
sbb
pop
scas
mov
or
dec
pop
loop
xchg
sbb
ja
mov
jno
cwde
sub
popa
test
stos
inc
xchg
and
mov
jne
aaa
adc
mov
sbb
jg
out
test
leave
mov
or
inc
xchg
out
popf
nop
cli
fwait
rcr
cmc
jbe
dec
sti
sahf
imul
test
mov
or
div
or
movs
mov
js
mov
xor
scas
sub
ja
cli
jae
fwait
mov
xchg
mov
inc
and
mov
dec
mov
mov
call
das
jp
outs
inc
mov
xchg
mov
ficomp
xor
cwde
xchg
in
jbe
mov
call
cwde
mov
loopne
sbb
pop
xlat
jb
xor
(bad)
data16
mov
aad
push
js
adc
jb
pop
mov
push
scas
int3
jae
(bad)
test
test
pop
push
and
adc
mov
dec
scas
xchg
mov
mov
xchg
stc
jnp
push
(bad)
shl
or
clc
cmps
mov
mov
lods
pop
mov
xor
mov
test
call
mov
push
push
sbb
sti
js
xchg
nop
frstor
sub
out
xchg
push
bound
in
clc
out
dec
(bad)
mov
sub
aam
hlt
outs
xor
push
dec
shl
lods
ins
repz
sbb
mov
cmps
stos
rol
add
push
hlt
ret
sub
sub
jmp
sahf
nop
inc
pop
inc
dec
fs
dec
xor
lods
cmps
mov
out
int3
adc
shr
stos
daa
dec
xchg
nop
push
xchg
inc
not
mov
cmps
adc
adc
inc
test
xor
or
popf
(bad)
shl
pop
cmp
loope
fsub
jnp
out
loop
lds
cmp
fisttp
fs
es
lock
call
repz
scas
js
push
adc
movs
lahf
push
out
mov
aaa
jg
adc
or
imul
js
jne
and
jno
mov
cmp
fcmove
dec
scas
in
sub
pop
scas
sbb
xor
xor
outs
popf
adc
push
mov
push
jl
jbe
cmps
or
mov
jl
or
inc
cmc
push
call
lds
retf
pop
lods
sub
xchg
vhsubps
cmpxchg
sbb
push
pop
hlt
xchg
dec
push
xor
jne
xchg
jns
mov
pusha
(bad)
mov
mov
lock
cmc
cwde
cmp
and
mov
push
adc
adc
int
ins
inc
nop
adc
lods
mov
fdivr
(bad)
hlt
add
fdivr
aas
cmps
lds
pusha
push
out
xor
fistp
mov
test
mov
pop
xchg
sbb
sub
mov
pop
adc
and
shl
pxor
pop
xchg
out
in
add
jne
movs
arpl
icebp
pop
push
pop
jae
jb
mov
fcmovnb
push
sub
jo
mov
mov
icebp
fbld
xchg
jnp
and
mov
mov
in
push
loopne
icebp
or
rol
movs
mov
add
jp
daa
mul
pop
dec
xor
push
mov
cmps
jno
retf
inc
movs
push
test
add
pop
adc
(bad)
cwde
lock
add
fs
pop
mov
sti
imul
(bad)
pop
jge
ins
(bad)
push
jl
jo
int
(bad)
jmp
lods
dec
dec
sub
mov
loopne
and
test
loopne
test
das
jecxz
dec
lds
sub
out
mov
dec
pop
cmp
mov
pop
js
mov
xor
add
loop
frstor
mov
popf
add
push
or
add
xor
lea
mov
cmp
into
sti
ret
push
loop
sub
dec
in
cwde
inc
cdq
sub
xor
repnz
gs
mov
mov
add
sub
push
or
push
xchg
daa
add
push
push
call
jl
inc
cmp
add
push
hlt
push
ret
push
xchg
adc
cld
mov
jg
xor
push
js
adc
mov
xor
push
adc
mov
cli
lods
hlt
xor
(bad)
xor
or
mov
cdq
xchg
scas
pusha
fmul
adc
out
test
repnz
mov
jns
sbb
xlat
mov
cmc
jl
test
movs
cld
add
or
movs
ss
pop
jl
mov
cmp
shl
lods
adc
pop
xchg
imul
jge
dec
cmp
pop
fidivr
mov
pop
adc
rcl
sahf
(bad)
or
xchg
mov
jle
imul
jmp
mov
cmc
enter
xchg
pop
pop
ret
jg
arpl
or
jno
xor
or
inc
shl
mov
(bad)
jae
ret
jecxz
movs
fild
inc
jmp
jmp
pop
add
xchg
fsub
cs
xor
call
shr
sbb
data16
dec
dec
pop
jg
jne
shl
jp
mov
inc
add
inc
cdq
fcomp
jle
jg
mov
mov
jmp
push
mov
xchg
(bad)
or
cld
jo
add
repnz
push
xor
cmp
xchg
mov
test
jmp
jl
and
xor
mov
cli
add
push
inc
adc
mov
call
jmp
aam
or
jne
aas
add
test
(bad)
loope
push
xlat
add
outs
dec
jnp
add
shl
push
cli
(bad)
das
nop
(bad)
push
mov
enter
test
pop
adc
adc
sti
dec
inc
fist
repnz
movs
scas
sub
mov
push
out
int
test
jnp
inc
push
dec
add
cmps
xchg
push
mov
fwait
xlat
adc
push
mov
call
push
mov
in
sbb
push
mov
ds
ss
pop
and
addr16
jns
idiv
adc
lods
daa
dec
aad
push
jg
(bad)
push
jno
sub
add
jo
xor
mov
lods
popf
jecxz
out
retf
mov
ins
stos
cld
imul
pop
mov
out
shl
clc
sbb
test
cmps
iret
mov
(bad)
mov
inc
xor
test
adc
mov
and
ins
lds
sbb
push
scas
fild
aam
ds
mov
stos
xchg
sti
idiv
pop
mov
inc
xchg
mov
enter
pop
adc
push
push
jge
xchg
dec
cmp
shl
sub
in
mov
xor
cmp
lock
sub
jmp
imul
fadd
loop
rcl
push
daa
mov
enter
jb
jg
sbb
(bad)
push
arpl
jne
gs
sub
and
adc
mov
(bad)
mov
pop
xchg
test
push
add
sub
xchg
dec
pop
xchg
jmp
dec
pop
addr16
xor
hlt
sbb
adc
std
mov
cdq
ss
sbb
add
test
(bad)
push
or
lds
dec
dec
fisubr
cli
fs
scas
jle
mov
imul
dec
inc
cli
dec
mov
in
and
aad
ror
rcr
ja
or
loop
js
push
dec
in
xlat
push
push
data16
pop
cld
ja
pushf
mov
inc
into
mov
sbb
in
jo
mov
xchg
sar
cmps
xor
sbb
shr
and
push
cmps
jg
inc
in
leave
shl
inc
bound
cmp
fcom
xchg
(bad)
clc
daa
imul
cmp
xor
in
xlat
repz
fnstenv
jl
mov
mov
or
adc
xor
imul
xor
into
jecxz
ss
in
rcr
jg
dec
mov
lds
pop
dec
repnz
inc
pop
xor
and
bound
jae
loopne
dec
scas
xchg
outs
cmps
jmp
icebp
pop
and
ss
pusha
ja
loop
jg
ins
cmc
dec
xchg
sahf
test
xchg
mov
mov
jae
and
mov
and
frstor
sub
pop
test
enter
inc
or
jne
cwde
jge
mov
sahf
jnp
cwde
mov
sub
cwde
call
es
test
loope
(bad)
lock
out
mov
and
movq
push
or
lds
rol
movs
xor
cmp
out
mov
adc
pop
lahf
xchg
cdq
or
jne
inc
test
sbb
icebp
addr16
add
(bad)
in
popa
mov
jae
push
mov
add
data16
or
int3
add
in
(bad)
mov
push
and
pop
scas
mov
es
ins
jo
es
popa
push
test
ds
xor
or
jb
jb
retf
or
mov
jnp
mov
pop
cmp
test
gs
dec
dec
mov
add
aaa
jnp
popa
xor
rol
cld
lods
js
jmp
mov
cmp
push
cmp
dec
push
mov
mov
xchg
add
out
push
or
mov
or
mov
jno
or
shr
ror
pop
cmp
out
push
test
inc
mov
je
aas
sahf
mov
popf
imul
cmp
test
rol
mov
hlt
sub
pop
xchg
cli
popf
stos
neg
fstp
aam
dec
fwait
dec
rcl
pop
js
and
inc
cmp
mov
jo
jno
ss
jb
pop
add
loope
scas
test
cmp
inc
repz
repz
in
je
push
xor
mov
cmp
ins
out
aas
mov
mov
pop
or
pop
or
adc
xor
and
je
cli
and
aam
jno
enter
arpl
adc
push
out
mov
shr
lods
jo
xchg
into
cwde
int
fwait
sbb
inc
cmc
jl
in
in
adc
sbb
lods
xor
in
push
cld
in
in
loopne
dec
xor
mov
into
mov
fcmovb
mov
loope
inc
or
arpl
in
loopne
imul
adc
jp
push
push
push
test
daa
mov
ret
fs
sbb
mov
push
ins
xchg
mov
rcr
push
popa
mov
sbb
adc
adc
popf
scas
adc
inc
cs
shl
mov
in
jg
popf
jg
push
mov
scas
adc
std
mov
inc
test
pop
fimul
bound
in
mov
stc
or
jb
sahf
sbb
mov
in
sub
push
inc
fiadd
enter
aam
int
mov
movs
sbb
adc
imul
push
dec
mov
xchg
mov
inc
aaa
repnz
xchg
fdiv
iret
mov
xchg
sti
fcmovne
out
xor
cmp
adc
call
stos
push
jne
movs
add
pop
xor
out
mov
rcl
jle
retf
or
in
leave
adc
dec
push
pop
stos
sub
xor
daa
(bad)
int
(bad)
iret
sbb
in
icebp
and
cwde
and
fwait
jae
inc
jg
cmp
xor
sbb
or
mov
lds
inc
mov
lahf
sbb
arpl
stos
mov
mov
enter
pop
shr
test
js
cmp
push
xchg
pushf
das
push
and
maxps
cwde
push
sbb
mov
test
inc
cli
sbb
dec
jmp
(bad)
loopne
cmp
dec
pop
xor
std
xchg
daa
lea
daa
sar
add
pop
in
out
adc
xchg
fmulp
add
fist
retf
add
mov
lahf
sar
pop
dec
pop
cli
fidivr
cmp
cmp
cmp
movs
mov
push
jl
aaa
mov
shr
dec
xor
mov
(bad)
sti
inc
int
push
(bad)
out
push
into
mov
jmp
jno
or
fist
jae
es
scas
scas
sub
les
sbb
(bad)
push
mov
adc
fiadd
iret
cmps
adc
aad
ror
inc
adc
mov
lea
push
out
mov
cwde
repz
pop
mov
into
add
jmp
and
push
and
arpl
add
mov
daa
cmp
cmps
imul
fbstp
push
ds
push
adc
dec
add
in
push
and
jl
enter
dec
and
inc
adc
movs
mov
push
stc
adc
retf
add
int
das
push
mov
rcr
stc
movs
and
cmp
cmp
lods
pop
dec
cwde
leave
outs
movs
xchg
jp
mov
sbb
xchg
inc
(bad)
popa
ss
and
mov
outs
mov
mov
aam
or
jae
ret
push
mov
dec
push
mov
xchg
mov
int3
mov
pop
or
push
shr
cwde
loop
es
aas
nop
jbe
push
je
pop
loope
inc
icebp
ins
stc
neg
mov
adc
mov
inc
jnp
inc
scas
push
stos
xlat
addr16
mov
mov
sar
into
sbb
push
pop
in
xchg
mov
out
xor
(bad)
fisubr
shl
xchg
shl
sub
call
push
or
dec
out
lds
pushf
sbb
ret
xchg
repz
fcomp
cli
cmp
mov
inc
jle
jae
cli
push
test
dec
cdq
fiadd
sbb
adc
jg
jne
cmp
out
inc
mov
hlt
std
mov
sub
add
cmp
inc
adc
jb
loop
dec
xchg
push
int3
jp
int
leave
ret
mov
ror
xor
and
retf
add
leave
aaa
xchg
cmp
ds
jnp
test
add
adc
call
call
scas
test
mov
nop
xchg
pop
daa
fnsave
iret
xor
std
out
adc
cmp
aam
(bad)
aas
pushf
sbb
cli
push
loope
mov
imul
jnp
into
pop
loope
dec
and
mov
or
mov
es
mov
hlt
push
push
dec
nop
frstor
or
mov
(bad)
or
aad
pop
sub
(bad)
sti
pop
lods
aaa
inc
fld
cmp
cmp
cwde
xchg
fst
pop
add
scas
retf
push
push
aas
pop
cmp
mov
fs
sbb
sub
dec
in
arpl
jg
push
push
cwde
sub
push
xor
jae
pusha
pop
(bad)
sar
dec
mov
mov
jecxz
mov
push
pop
mov
pop
scas
sar
hlt
lods
in
push
jb
sub
mov
ret
aaa
push
xchg
mov
cmp
stos
les
movs
xchg
xchg
add
xor
fld
jnp
in
js
leave
add
xor
and
sar
xchg
loope
out
neg
dec
push
or
dec
(bad)
xchg
lahf
test
fsubr
stos
pop
inc
sar
jae
iret
je
arpl
icebp
(bad)
addr16
push
add
jmp
leave
retf
inc
pop
ss
jecxz
dec
or
mov
push
imul
xchg
mov
adc
adc
xor
xlat
je
lock
stos
dec
add
outs
cmp
stc
cmp
inc
dec
aam
inc
mov
or
sbb
pop
cmps
imul
psubq
adc
pop
and
jmp
pop
sbb
mov
pop
call
xchg
jno
call
or
adc
fs
jno
sbb
stos
pop
sbb
mov
ds
dec
mov
xchg
jnp
sub
mov
ret
aas
repz
les
xchg
xor
mov
jp
push
repnz
xor
push
imul
(bad)
sub
or
sti
push
push
sub
pop
sbb
fisttp
dec
sahf
add
mov
sub
arpl
ret
push
dec
nop
cmp
or
nop
mov
push
push
adc
cdq
sbb
mov
pop
test
fnstcw
js
sub
bound
lea
pop
mov
pop
fwait
push
sbb
retf
pop
pop
sbb
cmps
fwait
pop
movs
or
int
rcl
stos
popa
daa
xchg
jle
leave
cwde
shl
sbb
mov
jmp
xor
push
loop
jmp
fistp
sbb
jp
cdq
repnz
push
movs
bound
mov
gs
jle
mov
jnp
jg
fwait
clc
scas
cmp
inc
xchg
out
(bad)
pusha
icebp
scas
movs
cmps
fwait
jbe
scas
jbe
sub
shl
das
mov
mov
shl
cmp
aaa
sub
aam
sub
mov
in
mov
and
call
sar
leave
sti
pop
mov
and
jo
test
cmp
lock
cmp
cmp
retf
nop
add
outs
sub
imul
jae
jb
mov
mov
jmp
mov
jb
(bad)
cli
into
sahf
lea
ret
outs
add
dec
lahf
mov
cld
jne
adc
push
adc
cld
mov
sub
fstp
sub
out
adc
aaa
pop
ror
mov
xor
push
pop
fs
add
pop
mov
push
out
aad
test
mov
pop
popa
je
loope
fmulp
push
hlt
fmul
sbb
push
xchg
fucomp
ficom
mov
xchg
xor
(bad)
int
lea
repz
test
inc
xchg
inc
addr16
pop
push
int3
xlat
stos
jmp
adc
or
fisubr
sahf
mov
and
sub
cmp
in
cmp
fs
dec
push
sub
add
mov
push
pop
mov
enter
mov
or
pop
sbb
push
(bad)
aas
adc
mov
(bad)
cmp
inc
fidiv
mov
add
inc
fldcw
pusha
mov
popf
shr
and
inc
rcr
pushf
sbb
addr16
into
xor
mov
xlat
mov
loopne
idiv
mov
sbb
mov
cdq
mov
xchg
pop
cmps
add
push
fs
and
dec
outs
push
(bad)
mov
gs
dec
(bad)
jmp
scas
out
xlat
push
sbb
inc
pop
push
movs
mov
jns
and
xchg
mov
mov
push
test
ins
add
cmp
inc
test
pop
into
xchg
dec
add
fisttp
mov
jle
mov
rcl
fstp
test
call
fcom
push
lea
push
jb
mov
dec
imul
mov
and
adc
fidivr
pop
add
(bad)
mov
fwait
dec
repz
mov
test
mov
movs
dec
test
or
out
jbe
loop
in
add
add
pop
mov
pop
dec
jno
inc
jb
mov
pop
ja
into
jle
cmp
test
cli
call
xchg
jecxz
mov
pushf
mul
sub
stc
inc
jne
xchg
aam
das
mov
jmp
mov
int3
loope
ret
xchg
sub
mov
add
cwde
xchg
mov
push
mov
test
out
(bad)
lahf
mov
in
ss
ds
xchg
stos
or
movs
jp
lds
in
cmp
(bad)
add
mov
fmul
cmp
int
add
push
retf
jns
inc
add
in
pop
repnz
cmp
aas
xor
mov
xchg
test
fimul
cwde
jmp
add
lods
inc
inc
sar
dec
mov
dec
js
cmps
push
xor
(bad)
aad
inc
cs
cmp
data16
fldenv
cmp
mov
imul
push
xor
dec
cdq
retf
js
outs
cmps
or
adc
stc
outs
cmp
test
sbb
dec
xchg
cmp
ins
daa
jb
mov
jecxz
or
push
and
jne
cld
sbb
ss
lahf
jecxz
push
cli
mov
pop
jo
fcomp
xchg
fidivr
jbe
scas
das
sub
nop
leave
mov
hlt
xchg
hlt
jne
mov
leave
adc
xor
cs
jl
dec
pop
aaa
cld
enter
jl
iret
and
and
(bad)
mov
cs
pop
jne
mov
pop
or
xchg
mov
sahf
pop
mov
call
ins
inc
inc
and
sbb
mov
stos
mov
mov
out
repz
mov
pop
push
sub
mov
sub
or
icebp
aad
push
pop
mov
test
jge
out
or
out
retf
push
test
jae
and
lea
imul
adc
cli
cmp
or
ins
cmp
inc
inc
out
jo
jns
jae
(bad)
xchg
shl
fwait
lock
arpl
sbb
adc
gs
(bad)
xor
jg
stos
les
push
fcom
sub
test
(bad)
mov
jg
xchg
push
mov
mov
sbb
sub
fisttp
push
push
gs
sbb
loopne
mov
mov
cmc
sub
mov
out
pop
sub
sbb
jg
icebp
pop
xchg
sub
mov
aam
dec
cwde
or
xchg
(bad)
pop
sbb
retf
pop
retf
mov
xchg
inc
and
pop
jne
notrack
data16
jge
(bad)
xchg
aam
xor
mov
pop
lock
jge
dec
loop
push
(bad)
hlt
jae
ret
das
mov
outs
fs
xor
adc
add
xchg
dec
es
mov
lods
fist
xor
rcl
outs
mov
dec
xchg
jmp
sti
dec
outs
pushf
iret
jb
and
pop
frstor
add
cmp
scas
sbb
je
push
pop
mov
dec
push
jecxz
mov
xor
lea
cmp
repnz
das
js
push
test
mov
mov
scas
movs
pop
jge
(bad)
out
mov
push
jecxz
and
xor
ds
dec
test
dec
mov
cmp
push
pop
sub
fcmovnu
sub
adc
add
push
xor
cmovbe
sub
inc
mov
nop
jns
pop
cmp
cmp
ss
xchg
mov
mov
dec
shl
or
loopne
cmp
adc
movs
aam
mov
mov
aaa
xlat
adc
fiadd
test
jle
jmp
or
stc
mov
pushf
adc
ret
jno
shl
mov
sbb
xchg
xor
stos
imul
addr16
cmc
jbe
sar
arpl
add
enter
sub
div
cli
addr16
jae
mov
add
out
in
cli
cmp
mov
mov
sub
sbb
push
xor
ret
movs
cmc
jbe
int
cmp
outs
push
rcl
xchg
dec
pop
jmp
or
mov
sub
daa
mov
bound
ins
bound
mov
or
inc
push
mov
rol
and
push
and
les
pop
mov
push
les
push
sub
int
inc
(bad)
jecxz
(bad)
jno
add
std
popf
retf
stos
mov
or
jl
mul
jp
aam
outs
dec
popa
add
add
mov
rcr
push
mov
mov
xchg
jb
mov
jmp
xlat
sub
add
movs
push
es
fsub
push
outs
add
mov
je
mov
xchg
test
outs
arpl
or
dec
daa
mov
arpl
call
loopne
fisubr
fsubr
dec
jae
push
push
sub
or
into
ret
dec
dec
repnz
je
(bad)
(bad)
jl
sbb
(bad)
rol
inc
test
ins
or
ins
aad
cs
iret
add
pop
cmp
cwde
fs
aad
leave
add
push
or
mov
mov
dec
xchg
mov
jmp
(bad)
dec
jmp
ja
xchg
sti
je
iret
sub
push
sbb
rcl
mov
retf
sahf
xchg
push
mov
mov
cmp
hlt
xlat
mov
aaa
ins
loop
ds
rol
mov
add
cdq
xor
add
pop
mov
(bad)
out
sub
inc
inc
jmp
call
jp
cmps
mov
in
fistp
push
ror
jo
jle
in
scas
lods
test
and
cld
or
fcomp
imul
adc
pop
sbb
mov
lods
xchg
(bad)
ins
scas
mov
retf
in
xor
or
test
pop
cmp
scas
jnp
xchg
or
popf
icebp
add
lods
pop
jg
pop
sbb
push
lods
mov
repnz
aad
repnz
inc
fcmovu
lods
dec
daa
inc
pop
in
pop
inc
movq
cmp
movs
cmc
dec
cli
test
xlat
aas
mov
lahf
sbb
jo
(bad)
dec
mov
sub
retf
nop
out
adc
mov
pop
test
fmulp
jl
mov
xchg
xor
aam
in
stc
das
mov
add
cmc
cli
jge
sub
sbb
movaps
xchg
mov
add
and
or
push
fdiv
adc
pop
aam
movs
cmp
xor
add
loopne
jne
cmp
pusha
mov
add
adc
ins
in
pop
(bad)
sti
not
scas
les
add
fmul
pop
mov
fldcw
mov
mov
out
lods
cmp
shl
dec
sbb
or
cwde
dec
jo
lods
sbb
pusha
adc
ins
daa
sub
movs
(bad)
out
ror
fild
adc
cmc
fldcw
sbb
dec
or
pusha
pop
test
xor
xor
addr16
(bad)
xor
imul
fisubr
fwait
adc
adc
shr
rol
fimul
test
arpl
sub
(bad)
inc
push
cmc
ret
sub
enter
daa
mov
pop
dec
lds
aaa
xchg
inc
fs
jo
lods
popa
stc
std
cmp
jge
sbb
and
out
test
loopne
pusha
lds
mov
xor
or
aas
jne
cmp
add
pop
call
mov
sub
repnz
jl
call
and
lahf
imul
sub
pop
leave
(bad)
mov
xchg
leave
or
iret
dec
(bad)
mov
not
in
dec
adc
mov
xchg
sbb
mov
jmp
fdiv
mov
push
adc
xchg
jno
cmp
mov
fst
test
(bad)
fbld
pop
scas
test
ins
sbb
xor
jp
push
out
rcl
(bad)
mov
js
push
inc
ins
mov
lahf
bnd
out
cli
cdq
sar
mov
pop
sbb
push
addr16
push
jne
or
jp
adc
ror
push
das
lock
adc
dec
xchg
test
ficom
and
iret
and
int3
std
stos
mov
sbb
cmp
int
cs
dec
dec
ins
mov
call
or
inc
sti
shl
cdq
test
imul
cmp
cld
das
fcmovu
stos
mov
(bad)
push
test
pop
ss
mov
pop
xchg
or
call
xor
movs
shl
mov
fistp
test
add
pusha
cdq
cwde
or
popf
pop
and
jo
push
dec
dec
sub
add
xor
mov
mov
sar
arpl
or
(bad)
cmp
data16
mov
jb
fs
ins
loop
mov
pop
cmp
add
ja
or
popa
jl
pop
faddp
mov
addr16
into
rcl
add
fist
es
std
mov
mov
jae
xchg
cld
jecxz
cmc
cmp
mov
adc
jno
ss
rcl
sahf
sub
cmp
and
lods
int
aaa
pop
ss
fisttp
push
or
dec
loope
retf
jge
mov
xchg
adc
mov
movs
pop
push
test
cmp
cmp
imul
les
loop
(bad)
cmc
lds
sbb
ret
aad
push
sti
pop
test
fucomip
push
sub
mov
in
das
sub
sub
push
cmp
mov
sbb
fwait
pop
xor
gs
sbb
xchg
sub
pop
inc
shl
dec
jbe
xor
xor
movs
mov
sti
shr
popf
mov
sbb
sub
addr16
and
or
jg
sub
test
mov
lods
jmp
test
sti
jle
mov
ror
aam
dec
jns
test
cmp
cmc
mov
push
inc
xor
mov
or
cdq
push
mov
dec
jmp
or
cdq
xchg
dec
je
nop
add
sub
sub
push
movs
test
bound
or
fmul
and
xchg
mov
push
mov
(bad)
rep
jl
xchg
inc
jl
mov
and
jmp
jnp
fstp
int
cwde
ret
jecxz
dec
cld
mov
jns
cmp
push
push
add
cs
cmps
xor
repz
mov
inc
sti
popf
and
(bad)
aaa
call
add
popa
(bad)
pop
and
dec
aad
dec
data16
in
std
faddp
or
jg
add
pop
in
cmp
cmp
pop
jb
fs
data16
cmps
adc
mov
push
stc
les
(bad)
and
test
xchg
push
repz
test
jno
mov
and
xchg
test
sub
jmp
inc
outs
and
fidiv
mov
fst
adc
shl
pop
icebp
(bad)
dec
cmp
out
pop
xchg
xor
gs
loop
call
and
fadd
sbb
sub
inc
or
mov
push
test
mov
in
cwde
cmp
mov
adc
pop
jnp
lods
std
sub
fldcw
in
jbe
cmc
(bad)
setg
inc
jno
pop
repz
cmp
pop
(bad)
fld
les
jl
mov
lds
bound
and
cmp
loop
mov
mov
cli
mov
sbb
fbstp
cs
cs
cmps
fwait
or
movs
dec
dec
push
sbb
push
rcr
test
int
out
(bad)
ret
pop
mov
cld
shl
xchg
mov
retf
je
stos
xchg
fcmovbe
inc
and
scas
dec
mov
stos
jecxz
test
cmps
mov
mov
mov
sub
jmp
sbb
mov
push
es
(bad)
mov
sbb
das
cdq
jmp
nop
in
ds
xchg
xor
int3
jg
sub
xor
or
jge
jle
in
cmp
mov
add
(bad)
pop
clc
rcl
xor
movs
sbb
add
xchg
fwait
push
inc
leave
lods
ins
sub
jbe
pop
dec
mov
dec
adc
push
push
adc
xor
adc
out
mov
hlt
addr16
and
mov
cmp
lock
loopne
in
or
jb
ret
cdq
je
shr
fisttp
in
fmul
sub
pop
dec
jmp
inc
lods
jmp
mov
cmps
push
add
sti
pop
add
mov
mov
and
dec
rcr
add
dec
pop
fsubr
mov
inc
cmp
xchg
mov
test
in
shl
push
xor
rcr
cmp
dec
xchg
ins
push
push
mov
cld
fs
stc
xchg
aad
rcr
inc
cmp
not
adc
bound
aaa
dec
cdq
cmp
shr
pop
gs
xor
js
sub
ins
push
jne
jmp
leave
push
repz
add
sub
enter
jne
dec
cmp
iret
sub
add
mov
stc
inc
arpl
cmp
iret
or
loop
daa
mov
leave
sub
fimul
adc
push
jae
adc
fsubr
pop
arpl
popf
xor
stc
repnz
dec
cs
test
push
jg
out
imul
retf
jne
xchg
dec
adc
cmp
mov
xchg
retf
cdq
mov
add
xchg
jnp
mov
repnz
mov
pop
lods
lock
repz
aaa
inc
ss
movs
neg
(bad)
fisttp
dec
shl
jl
mov
ret
push
or
inc
movs
and
jp
sar
mov
xor
jno
es
lods
out
xchg
fwait
lods
mov
aad
pop
movs
dec
cli
or
pop
loop
mov
or
jae
cmp
(bad)
inc
imul
sbb
push
imul
xchg
sbb
aas
push
(bad)
push
out
adc
loope
(bad)
retf
push
(bad)
sub
jbe
in
scas
jb
shl
mul
clc
jg
mov
mov
and
movs
mov
adc
or
xor
xchg
xchg
icebp
push
jmp
and
inc
sbb
adc
retf
push
mov
mov
push
pop
and
bound
imul
fidivr
fisubr
pop
bound
aaa
inc
jnp
ret
mov
cmp
out
mov
xor
test
std
cmp
jp
pop
push
mov
shl
mov
cmc
pop
inc
mov
cli
stos
sti
pop
leave
ret
sub
scas
inc
fistp
mov
ror
sbb
pushf
mov
sub
sub
mov
xor
call
xor
or
push
mov
jmp
cs
jb
add
stos
fistp
push
inc
xchg
mov
jmp
or
pop
mov
aad
cmp
sbb
cmp
pop
inc
xchg
add
loope
fadd
loop
pop
jp
aaa
lahf
push
dec
xor
add
jecxz
push
jmp
jb
ficom
pop
jp
(bad)
push
ret
ficom
adc
push
int3
stos
out
mov
shr
or
sahf
and
pop
fadd
sub
fiadd
jmp
xchg
test
out
jnp
mov
clc
fisubr
call
xlat
add
xchg
scas
sub
mov
xor
xor
and
ret
repz
xor
sbb
sbb
push
out
mov
add
enter
aas
xor
mov
stos
jb
iret
mov
stc
mov
js
or
sbb
mov
adc
aas
ins
mov
idiv
adc
fldcw
pop
scas
xchg
pushf
xchg
popf
push
shr
test
sbb
add
inc
dec
cmps
push
mov
pushf
xchg
sbb
mov
mov
clc
push
stos
jmp
push
inc
out
adc
in
jb
push
enter
mov
jg
push
cmp
movs
les
les
inc
imul
sbb
ror
xor
mov
push
pop
sub
test
mov
popf
mov
cld
xor
adc
push
sub
fsubr
ins
cmp
dec
clc
cdq
jge
sbb
push
jo
movs
cmp
add
bound
dec
xchg
mov
cdq
fisttp
lods
out
pop
bound
adc
cmp
pop
sub
int
push
(bad)
cwde
(bad)
pop
fstp
imul
scas
rcr
add
cmp
fisub
(bad)
add
test
xor
imul
retf
add
in
xchg
xor
push
cmp
cmp
jns
dec
popa
jecxz
jns
dec
pop
or
loope
mov
in
pop
xor
bound
sub
mov
push
mov
jnp
imul
pop
xchg
or
shl
test
enter
mov
ss
rol
pop
mov
push
push
fcom
sub
jge
mov
push
sbb
xchg
xchg
cmp
iret
push
xlat
xor
lahf
mov
mov
(bad)
mov
pop
outs
fisubr
cld
stos
hlt
loop
sub
sbb
add
jmp
jle
jecxz
xchg
mov
pop
aam
out
jp
cmps
mov
cmps
outs
and
mov
add
cmp
ss
cmp
and
pop
call
(bad)
stos
sub
dec
jl
mov
lock
add
mov
sbb
and
gs
or
jmp
sub
bound
push
or
sbb
in
fwait
std
jg
popf
mov
aad
(bad)
or
shl
outs
addr16
test
and
xchg
cli
dec
ins
adc
out
add
add
dec
test
push
mov
push
jne
pop
jmp
lods
cwde
repnz
mov
or
jo
cld
push
jecxz
pop
out
clc
adc
(bad)
jle
hlt
mov
stos
call
cmps
mov
fdiv
pop
stos
mov
and
push
mov
xchg
dec
js
jmp
jne
sub
(bad)
int3
ret
(bad)
shl
mov
xchg
cmps
xchg
pop
jmp
movs
add
push
(bad)
cmps
and
lods
lods
push
and
inc
adc
inc
stc
sbb
pop
sbb
mov
cmp
aam
push
repz
mov
jg
xchg
or
lods
xor
sbb
repz
mov
jo
rcr
in
cmp
mov
adc
mov
retf
cld
inc
push
fldenv
scas
xchg
mov
jg
enter
test
push
pop
or
mov
or
les
and
jge
gs
pop
cmps
sub
push
and
fadd
test
imul
jg
imul
enter
add
or
xchg
xor
dec
aaa
and
jle
ja
lock
jge
cmps
ret
mov
and
xor
and
mov
pop
and
mov
outs
daa
xchg
dec
push
ret
sar
test
pop
movs
jae
push
stos
jmp
jo
dec
cdq
mov
or
popa
sub
mov
jnp
pushf
shr
cmps
dec
pop
(bad)
ds
rcr
aas
sub
test
pop
push
pop
push
retf
jbe
outs
adc
int
outs
fcom
push
mov
shr
cmps
(bad)
pop
pusha
je
stc
xor
gs
mov
icebp
push
movs
out
sar
inc
adc
push
daa
dec
cli
repz
jl
push
out
fldcw
jno
add
xchg
not
jae
(bad)
push
lods
ss
clc
mov
lods
xchg
adc
push
add
sbb
retf
cwde
in
or
or
sub
hlt
lds
ss
es
int
pop
and
shl
ret
stos
xchg
ret
xchg
stc
and
cli
ja
jge
stos
cmps
cmp
test
mov
push
add
ja
stos
sbb
repnz
repnz
fdiv
fadd
jle
sbb
mov
iret
aaa
aam
test
xchg
sbb
(bad)
repnz
mov
jmp
in
sbb
add
xchg
xchg
pop
sub
int
or
out
ficomp
and
mov
mov
mov
or
cmp
push
into
call
pop
clc
(bad)
and
sti
faddp
xlat
pop
adc
mov
push
sahf
movs
inc
les
(bad)
push
sub
dec
adc
adc
mov
shl
adc
sbb
xchg
and
cmp
or
or
push
fst
jmp
inc
in
retf
xor
test
mov
adc
xor
xchg
sahf
jb
(bad)
xchg
test
mov
jp
add
jo
dec
int
pop
xchg
jae
dec
(bad)
fwait
inc
jmp
test
retf
into
cdq
dec
out
sbb
dec
movs
adc
inc
pusha
retf
jno
add
mov
xchg
cmc
int
stos
scas
push
pop
push
aad
mov
ss
out
and
enter
pop
sti
lahf
inc
cmp
fcomp
inc
inc
jge
jnp
pop
sub
or
es
inc
sbb
sub
es
mov
push
cdq
xor
add
or
cld
cmps
ss
dec
xchg
inc
push
test
add
add
mov
ja
loopne
jmp
sbb
lea
fist
xor
pop
pop
xor
xchg
outs
push
repz
inc
test
(bad)
call
mov
ja
ret
data16
xor
cmp
jmp
pusha
fisubr
or
and
addr16
and
and
sbb
or
cmps
inc
pop
inc
rol
jl
sub
sbb
jle
js
jmp
add
xchg
pushf
cdq
cmps
adc
inc
sub
aam
adc
pop
xchg
push
inc
mov
aaa
leave
push
aam
inc
test
fwait
ret
add
jle
jge
sub
cmp
fsub
enter
ja
pusha
push
mov
mov
sub
ds
in
(bad)
rol
lds
sub
jmp
lods
mov
dec
sub
sbb
jmp
push
cmp
rcr
inc
xchg
cs
into
mov
add
push
rol
and
in
jmp
or
xor
xor
cld
cmp
and
mov
fild
loopne
jg
ret
lods
aam
(bad)
xchg
inc
leave
test
in
sahf
fldenv
cmp
cs
mov
jne
ds
jl
jnp
dec
cld
mov
mov
xor
movs
lock
dec
scas
fist
test
out
cmp
add
fistp
add
cdq
mov
fwait
cmp
sbb
scas
add
enter
test
adc
push
dec
repnz
inc
sbb
push
ret
in
or
pop
mov
mov
ins
in
bound
movs
jb
(bad)
icebp
std
push
xlat
scas
out
adc
out
xchg
and
xchg
adc
nop
pop
push
sub
cmc
ins
dec
leave
inc
or
pop
in
stos
add
cmp
pop
sbb
dec
int
popf
popf
das
in
popf
adc
movs
repnz
pop
sbb
or
shld
mov
das
mov
jecxz
dec
push
push
aas
imul
mov
std
aam
push
inc
or
scas
call
jno
sbb
les
cli
dec
enter
and
inc
sbb
stc
jmp
xchg
sub
or
call
xor
ret
jge
push
xlat
cmp
(bad)
jbe
std
jno
mov
test
dec
xor
ret
inc
dec
xor
pusha
push
or
pop
(bad)
sub
test
push
sahf
pop
or
mov
sub
cmps
sub
mov
sub
imul
rcl
or
sub
dec
and
(bad)
loop
sbb
test
fmulp
mov
pop
sbb
int3
xchg
mov
jnp
sub
pusha
xlat
out
and
mul
xchg
shl
ins
xor
ror
adc
(bad)
fidivr
push
in
jae
pop
xchg
popa
xor
dec
inc
cmp
cs
push
repz
ins
outs
std
push
jle
adc
fwait
push
mov
out
pop
jp
cld
push
lea
mov
addr16
mov
sar
ret
fsub
mov
data16
jnp
xor
dec
mov
push
mov
in
sti
movs
test
idiv
fmul
adc
cmp
and
pop
rcr
push
and
repz
inc
or
stc
and
xchg
scas
jmp
movs
or
fist
repnz
in
sbb
jmp
add
lds
imul
adc
(bad)
inc
push
cmp
push
daa
mul
inc
call
fs
mov
imul
lods
jne
ins
popf
xchg
jae
pop
cmps
xchg
or
cmp
leave
test
icebp
in
daa
xchg
sub
xchg
xchg
jl
clc
rcl
out
mov
mov
or
jmp
icebp
pop
into
lahf
cmp
xlat
jns
outs
mov
push
push
mov
cmp
pop
ins
lds
sub
add
loop
push
loop
fcomp
cs
push
call
daa
aaa
das
and
bound
inc
(bad)
outs
enter
pop
popf
xchg
cmp
xor
jp
pop
ret
loopne
(bad)
unpckhps
mov
and
bnd
jno
mov
dec
test
xchg
test
mov
inc
jb
add
test
fisubr
cmp
aaa
fdivr
movs
shr
ja
(bad)
loop
xor
popa
mov
mov
jmp
sub
and
pop
push
mov
xor
ficomp
jl
or
push
xor
pop
pop
lea
retf
mov
in
sub
inc
mov
xchg
in
shl
sbb
stos
pop
pop
popa
mov
add
imul
out
or
cmp
xchg
movs
dec
jne
adc
in
or
or
ja
(bad)
test
or
pop
scas
std
mov
mov
mov
mov
push
jbe
aas
in
cmps
loopne
sbb
repnz
or
bound
jne
push
xchg
and
xor
inc
jb
ja
bound
jae
adc
(bad)
mov
pop
and
push
mov
pop
movzx
cmp
sbb
(bad)
ins
sub
or
adc
add
(bad)
outs
sti
pop
adc
loope
aad
dec
icebp
imul
add
daa
loope
mov
mov
pop
pop
mov
cmc
int
jmp
xlat
ins
xchg
loopne
pop
jnp
jmp
push
pop
repz
jg
push
clc
fidivr
and
in
test
hlt
mov
jne
int3
add
jns
es
popa
mov
jle
xor
das
call
mov
and
mov
sub
outs
push
sbb
aaa
cmp
imul
dec
dec
(bad)
xor
std
aas
pop
push
inc
lods
mul
fs
push
in
dec
loope
dec
xlat
fcomp
push
dec
and
sbb
adc
or
xchg
push
jp
repnz
and
into
cwde
es
adc
mov
das
call
daa
pop
push
test
sub
pop
mov
xchg
mov
or
push
in
movs
mov
sub
enter
xchg
stos
pusha
dec
mov
adc
(bad)
maskmovq
test
es
fwait
add
inc
addr16
int
mov
jle
mov
pop
shl
inc
cmp
push
and
scas
cs
add
push
aam
jbe
ror
xchg
xchg
sbb
mov
pop
add
sti
aaa
dec
cmp
mov
jmp
xchg
enter
sub
push
mov
fldcw
xchg
cmp
xor
test
enter
jecxz
mov
pop
fsin
push
pop
enter
jmp
stc
test
dec
mov
push
scas
bound
mov
push
test
sti
push
mov
aam
cli
test
pop
pusha
fnsave
sbb
int
mov
daa
retf
mov
pushf
mov
repz
jb
sub
neg
mov
jg
lods
cwde
cmp
dec
and
xor
pop
pop
jecxz
sbb
inc
mov
xchg
daa
mov
jmp
inc
xor
mov
push
pop
cmp
jge
cld
(bad)
fidivr
mov
add
add
pop
xor
inc
pop
jae
sub
in
pop
addr16
mov
adc
jecxz
ret
jle
xchg
lock
pop
xchg
jno
popf
retf
add
rcl
xchg
sbb
lock
sbb
xor
mov
(bad)
cmp
xchg
shl
retf
xchg
cmp
add
arpl
add
mov
cmps
mov
inc
rcl
xor
adc
(bad)
jb
ret
sub
push
mov
xchg
std
cdq
and
push
mov
retf
push
push
cmps
adc
or
and
lods
hlt
jb
ss
adc
cmp
mov
cld
fdiv
(bad)
jns
add
cld
xchg
iret
sti
les
xchg
(bad)
mov
test
loope
call
cmps
ins
cmps
jns
cmps
std
xchg
scas
fild
pushf
sbb
stos
lods
pandn
adc
add
push
pusha
mov
fist
aas
cmp
adc
aaa
and
sar
jg
fist
sbb
gs
stc
xchg
sub
push
out
aas
xor
push
dec
aas
cmc
mov
dec
and
jmp
mov
retf
je
outs
(bad)
jb
bnd
scas
sbb
xchg
ja
jns
mov
repz
retf
inc
xlat
and
hlt
stos
xlat
adc
mov
movs
xor
imul
adc
jbe
xchg
call
and
dec
jmp
xchg
push
pusha
div
imul
je
mov
pop
sbb
dec
clc
push
imul
fidivr
loope
xor
jl
dec
pop
loopne
cs
aam
popa
test
dec
or
dec
mov
mov
push
pop
in
ffreep
dec
pop
xor
imul
das
inc
xor
iret
leave
push
pop
jnp
daa
inc
(bad)
mov
mov
add
jne
shr
inc
aaa
xchg
push
ret
adc
(bad)
popa
sbb
in
push
hlt
adc
cmp
mov
shr
pop
repz
dec
cmps
mov
inc
fimul
cwde
push
cld
xchg
out
(bad)
jo
nop
cmps
inc
and
jo
mov
add
mul
lods
daa
xchg
cmps
and
jmp
push
mov
push
loop
push
sbb
repnz
cmc
add
cmp
fidiv
scas
mov
pop
mov
inc
push
gs
dec
pushf
pop
rcr
sar
dec
aad
inc
cmc
push
fisttp
aad
stos
call
test
push
mov
int3
add
xor
inc
sbb
mov
add
sti
push
data16
add
repz
add
jl
test
enter
adc
mov
in
adc
test
add
adc
dec
pop
inc
movs
ins
stos
mov
sbb
xchg
cmp
xlat
mov
nop
cmc
out
test
sbb
cmp
int3
or
cli
or
sub
xor
sub
and
mov
or
sub
cmp
arpl
sbb
ja
enter
jmp
out
sti
or
push
gs
mov
and
inc
xchg
push
popf
push
mov
pop
lea
inc
push
js
mov
rol
jns
and
sub
push
pop
adc
xchg
fsubr
push
lods
mov
retf
scas
aaa
out
arpl
dec
cli
and
mov
ror
ret
loop
addr16
retf
ins
mov
mov
pusha
and
sbb
mov
dec
dec
or
adc
xchg
cdq
imul
pop
mov
add
(bad)
repnz
sbb
dec
sbb
fwait
or
icebp
adc
add
fidivr
stc
repnz
fs
lds
pop
xchg
loope
mov
pushf
inc
out
sbb
xchg
xchg
and
sub
cmp
aaa
or
sub
movs
jl
es
dec
sub
les
pusha
xchg
add
int3
cwde
or
nop
data16
push
(bad)
jne
sbb
jl
or
sub
jmp
sbb
dec
inc
mov
clc
cmp
or
popf
mov
jp
enter
bound
add
mov
lods
add
jle
fs
int
mov
mov
mov
xchg
mov
jne
das
push
xor
cwde
jns
fsubr
fsub
pop
pop
(bad)
mov
inc
call
fidivr
retf
ror
movs
int3
xchg
(bad)
push
fisub
stc
push
data16
mov
inc
les
mov
movs
into
jmp
lock
sbb
sub
fdivr
pop
nop
imul
imul
je
mov
xor
ret
or
inc
retf
fld
cs
enter
jmp
aas
mov
(bad)
xor
(bad)
sar
jg
cmc
imul
shl
cwde
jae
stos
popa
sub
adc
out
sbb
mov
fisubr
xor
call
jecxz
adc
xchg
or
cwde
pop
(bad)
sbb
and
xor
iret
dec
aaa
loope
inc
add
xchg
je
in
mov
sar
xor
sbb
inc
xchg
in
adc
pushf
kxorw
or
pop
sar
cmp
nop
adc
movs
paddusw
add
nop
and
mov
dec
mov
lods
aam
cmp
je
dec
ja
sub
sub
(bad)
pop
repz
xchg
popa
lock
push
fisubr
mov
and
js
add
mov
dec
xor
add
add
sub
add
out
add
imul
pop
jo
fwait
in
rol
inc
cmp
pop
movs
sub
mov
aam
xchg
mov
dec
es
popf
add
adc
mov
aaa
and
mov
and
xor
cli
imul
and
aad
xchg
pusha
push
rcr
jnp
leave
inc
lods
loopne
pop
mov
ror
test
push
or
mov
sahf
daa
and
cmp
or
xor
fcomi
in
cs
cmps
(bad)
int3
cmp
jno
subps
push
add
cmps
mov
fist
inc
repz
clc
popf
dec
pop
and
xchg
(bad)
sbb
or
or
in
and
inc
std
rcr
icebp
cdq
outs
mov
add
add
mov
rol
push
test
pushf
inc
imul
cmp
int
xchg
push
wbinvd
out
test
dec
pop
lods
mov
call
repnz
push
mov
xor
xchg
xor
xchg
inc
movs
jle
test
in
aas
pop
loop
jbe
sub
cli
inc
xchg
xor
adc
pop
push
jbe
rcl
fdivp
iret
add
pushf
test
mov
xor
mov
div
xor
dec
or
leave
xchg
dec
cmps
add
cmp
jb
xchg
test
cmps
dec
cs
jp
add
and
add
jbe
mov
in
jl
ficom
adc
sub
add
jmp
xchg
xor
lds
addr16
popa
xor
out
je
and
sub
pop
cli
aaa
(bad)
jae
sub
xor
aad
xchg
sbb
push
push
lea
fbld
ds
test
fldenv
in
push
push
in
xchg
cmp
push
cmp
and
out
loope
mov
loop
or
push
and
movaps
(bad)
aad
dec
jle
mov
popa
mov
cmp
lds
mov
xchg
adc
loopne
inc
aam
lods
or
sbb
and
fisubr
dec
push
mov
ror
xchg
jo
stos
or
into
push
pop
lds
adc
push
fisttp
nop
je
cwde
es
popa
xlat
mov
and
xlat
aaa
xchg
cmp
shr
stc
enter
clc
call
stc
jge
movs
leave
pop
or
push
dec
daa
mov
or
dec
or
pop
mov
ins
retf
xchg
test
mov
movs
add
and
aam
xchg
ret
retf
cmps
xchg
nop
push
sub
push
scas
int3
adc
aam
aas
add
jo
inc
sub
and
mov
mov
push
xchg
push
cmp
mov
call
rcr
xchg
fldenv
out
mov
retf
mov
lods
popa
jmp
push
cmp
dec
ja
dec
sub
lea
pop
mov
mov
lock
xor
or
mov
pop
inc
cmp
lea
adc
jle
in
lds
mov
xor
retf
iret
mov
xchg
dec
not
pop
imul
pop
add
mov
push
imul
jecxz
dec
inc
push
setne
xor
sbb
or
and
xchg
mov
dec
inc
pop
shr
(bad)
jl
ror
or
sbb
sbb
mov
xchg
mov
mov
xor
lea
dec
cmp
mov
aad
inc
sbb
xor
das
cmp
das
inc
mov
imul
jnp
xor
sub
test
jecxz
push
sbb
xchg
sbb
jae
jnp
std
jge
daa
pusha
sub
div
rcl
sahf
mov
je
and
sub
sbb
inc
xchg
jp
pusha
mov
push
mov
xor
fwait
cmp
mul
or
iret
daa
dec
rcl
cmp
(bad)
mov
dec
pop
xor
xchg
cmp
ins
lock
mov
adc
gs
out
js
(bad)
xor
dec
adc
sub
aas
test
hlt
xor
leave
jecxz
enter
mov
ds
movs
push
xchg
(bad)
fst
movups
xchg
push
cli
rcr
cmps
addr16
pop
fiadd
jp
dec
cmps
jae
jecxz
jns
pop
sar
inc
add
sub
cmc
fwait
mov
push
fldenv
or
mov
mov
repnz
mov
mov
out
inc
xor
mov
add
fdivr
jecxz
jnp
and
outs
(bad)
xor
inc
mov
xchg
sar
dec
cmps
mov
addr16
(bad)
jle
mov
xor
or
clc
mov
xor
(bad)
sahf
jns
imul
lds
cmc
inc
dec
js
pop
js
es
iret
sbb
mov
sar
neg
sar
jns
sti
enter
aas
jo
push
les
dec
cmps
(bad)
and
std
sbb
out
mul
or
scas
cmp
jns
xchg
push
mov
xor
arpl
aas
xchg
sub
scas
and
push
bound
retf
dec
inc
push
mov
mov
mov
jmp
sub
add
add
and
pop
dec
inc
fcmovne
pop
je
adc
mov
iret
lods
ds
(bad)
ins
jmp
cmp
mov
imul
in
hlt
rcr
sbb
dec
mov
test
les
fiadd
sub
enter
adc
lsl
shl
jp
inc
jns
pop
jb
or
or
pop
stos
jns
pop
cmp
inc
push
jns
in
(bad)
mov
fidivr
in
and
sub
pop
cmp
fwait
jle
(bad)
mov
clc
in
idiv
jmp
movs
bswap
jns
aam
mov
scas
bound
ret
dec
pop
adc
dec
add
and
push
sti
scas
jbe
xlat
leave
jmp
dec
jns
lock
pop
call
add
cmp
push
pop
xor
shl
sti
sub
and
xchg
dec
xor
jmp
sbb
sub
daa
add
and
sbb
mov
bound
ret
sub
cmp
sub
(bad)
ds
pop
cld
ins
cwde
jbe
mov
push
popf
xor
jno
inc
or
inc
call
adc
cli
add
mov
loopne
inc
fcom
dec
aaa
aaa
icebp
jecxz
jmp
mov
outs
ret
aas
rcl
mov
push
leave
xchg
aam
add
jle
test
call
fcomp
in
ja
cmp
dec
mov
rcr
repnz
mov
hlt
es
mov
and
fs
mov
push
cmp
or
sahf
outs
(bad)
stos
lods
pop
pop
push
inc
xchg
(bad)
test
or
in
sbb
test
std
adc
stos
pop
shl
cmp
jno
add
ss
mov
xchg
push
fstp
lods
xor
jg
mov
imul
jne
ss
jmp
fldcw
iret
adc
cmp
cmp
push
test
std
pushf
mov
bound
inc
fs
gs
jl
or
xchg
ror
dec
xor
jmp
mov
clc
mov
retf
xchg
pop
lds
cmp
stos
shl
sub
pop
add
clc
retf
test
sub
ror
cdq
cdq
jle
je
aaa
pop
mov
xor
push
das
movs
mov
popf
call
jnp
hlt
pop
or
sbb
test
or
(bad)
cs
ins
in
dec
je
sbb
mov
mov
(bad)
stc
dec
fisubr
xchg
mov
imul
mov
cmps
dec
jne
in
xchg
xchg
(bad)
pop
and
jnp
push
lods
ret
int3
pusha
ds
(bad)
es
mov
mov
aam
and
cmps
and
adc
mov
call
(bad)
out
in
sub
jecxz
lahf
xlat
call
pop
stos
in
adc
adc
sbb
fs
movs
and
lods
(bad)
fist
int3
aas
std
rcr
mov
loopne
ss
(bad)
adc
scas
add
and
mov
add
int3
ret
sub
sbb
dec
xor
and
sbb
xor
in
push
movs
pop
ss
aas
jl
add
push
dec
fwait
xchg
(bad)
int3
dec
and
popf
into
adc
jb
int
test
pushf
xor
xlat
jl
call
cmps
call
addr16
lds
lods
jmp
push
in
cmp
arpl
inc
lock
in
lea
out
sbb
in
int
sbb
add
or
jmp
je
inc
mov
fsub
xchg
dec
mov
cli
mov
(bad)
push
xor
jno
call
and
test
inc
and
sub
mov
out
cmp
jbe
sti
mov
rol
pop
(bad)
in
jecxz
outs
adc
mov
xor
in
push
pop
jns
popa
mov
ins
xor
ror
adc
cld
sub
push
imul
in
push
cmp
push
(bad)
js
jno
loope
mov
ins
or
and
mov
adc
stos
push
(bad)
sbb
and
rol
cmp
ja
sti
test
dec
adc
rcr
stc
adc
dec
jne
pusha
outs
mov
push
xor
scas
pushf
pop
lods
mov
popf
xor
iret
sti
push
cmp
fs
push
pop
sahf
cmps
popa
lea
iret
movs
imul
les
movs
sar
outs
int
sbb
mov
neg
pop
(bad)
jae
int3
dec
(bad)
int3
fistp
inc
inc
push
fsubr
dec
jl
xlat
cmps
mov
int
imul
std
adc
lock
shl
je
inc
lahf
stos
cmc
test
fcmovu
xchg
adc
cmp
in
hlt
shl
cmps
jle
add
aam
push
pop
inc
xor
or
add
mov
cwde
mov
dec
cmp
jo
repnz
test
inc
or
cmp
nop
aaa
pop
lds
xor
xor
out
stos
jns
mov
fsub
shrd
mov
adc
cmp
push
jnp
aas
fild
mov
in
dec
xor
cmps
push
push
pop
retf
sbb
cmp
and
out
aaa
(bad)
(bad)
jns
mov
stc
push
or
lea
or
cmps
add
fldenv
es
mov
stos
adc
mov
push
mov
push
shl
aas
mov
xor
clc
rol
xchg
lods
xchg
cmp
fldlg2
hlt
stc
mov
cmps
ins
in
enter
pop
cmp
loop
push
ja
ret
inc
and
xor
jo
loope
div
loope
int3
jno
lods
jnp
sub
scas
jmp
add
sbb
nop
fxch
loop
add
cs
mov
icebp
pop
push
ss
ss
cmp
or
out
daa
lods
outs
bswap
sti
pop
pop
dec
fist
int
je
jg
loop
xor
cwde
or
push
mov
in
movs
inc
sti
ds
jmp
pop
aaa
or
(bad)
out
sub
pusha
mov
pop
lahf
xchg
pop
shl
xchg
dec
lds
int
mul
xchg
pop
ins
arpl
imul
xor
popf
sbb
mov
iret
out
or
ins
push
mov
xor
cmp
sbb
inc
ret
sub
and
in
jp
mov
xor
call
icebp
or
pushf
retf
push
(bad)
pop
cmp
lds
jecxz
mov
test
bound
dec
imul
je
cmp
retf
jo
push
mov
sub
mov
push
cmp
fist
stos
mov
cs
test
in
leavew
shr
popf
pop
outs
jp
outs
nop
mov
push
push
imul
xchg
xchg
lods
mov
pop
adc
pop
int3
addr16
xchg
ret
mov
cmp
xor
pop
adc
inc
mov
arpl
sub
inc
push
or
aaa
dec
jbe
adc
fs
fisttp
mov
call
fldenv
bound
js
sub
or
pop
ficomp
inc
push
sub
jns
and
inc
aam
ja
out
mov
cld
inc
sbb
push
scas
pop
loope
mov
xor
push
push
retf
repnz
rol
lods
add
mov
out
xchg
(bad)
push
fs
jae
xchg
enter
sbb
lock
cmps
ja
jmp
push
shl
jmp
push
or
fld
dec
xchg
sar
mov
retf
pop
push
fucomip
jmp
nop
push
dec
push
cli
push
add
(bad)
arpl
cmp
jae
movs
loopne
imul
xchg
loopne
retf
xor
mov
adc
ds
dec
mov
fld
pop
sbb
in
cmps
mov
xchg
cmps
pop
call
stos
jo
jae
sbb
mov
lds
jg
stos
cmp
xchg
popa
test
sbb
or
pop
pop
jns
push
lods
or
test
jmp
pop
pop
les
xchg
in
jnp
outs
cmps
gs
daa
jecxz
mov
mov
lds
int3
inc
in
clc
jb
(bad)
and
push
dec
push
add
sub
xchg
pop
(bad)
stos
scas
inc
sub
mov
xchg
inc
push
xchg
fld
jmp
mov
sbb
mov
int3
add
push
fisubr
popf
lods
inc
retf
mov
xchg
(bad)
mov
js
out
nop
cmp
xor
push
test
pusha
xchg
mov
shr
pop
and
mov
dec
cmp
add
loop
dec
mov
sub
movs
pop
aad
dec
popf
loop
cmp
aam
push
mov
sar
cmp
pop
std
or
and
mov
call
mov
rol
sub
mov
sub
out
sub
in
mov
push
jb
retf
ja
sub
aam
sahf
xor
sbb
stc
mov
lds
les
xchg
rcr
rcr
inc
mov
gs
iret
out
test
loope
jecxz
xlat
mov
pop
inc
hlt
jle
mov
push
out
rcr
call
pusha
ins
xor
pop
fs
mov
and
and
adc
cld
lock
adc
xor
mov
adc
adc
fcmovb
sbb
push
and
sbb
into
mov
or
rcr
not
fst
js
add
pop
cmp
mov
sbb
clc
cmps
cmp
add
cli
div
mov
adc
popa
xor
push
jge
xchg
and
mov
sub
inc
movs
xchg
mov
mov
jo
pop
cmp
push
cmc
mov
loopne
aaa
mov
pop
pop
push
and
call
xchg
inc
cdq
ficom
aas
rep
xor
add
and
pop
sar
jmp
push
xchg
aam
jp
cld
es
dec
xor
push
fs
lea
or
adc
cmps
xchg
mov
mov
aaa
sub
hlt
(bad)
sbb
arpl
inc
xor
ins
push
stos
jg
inc
xchg
jno
hlt
bound
xchg
adc
bnd
sahf
cs
sub
pop
arpl
int
test
imul
add
stos
leave
adc
jmp
pop
in
nop
sbb
sti
pop
sub
sbb
jmp
pop
stos
inc
xchg
loope
movs
jbe
push
jl
xchg
movs
xor
enter
mov
imul
nop
pop
dec
sub
dec
aam
popa
ins
inc
dec
es
(bad)
ja
fwait
xchg
mov
into
mov
push
pop
adc
pop
test
test
dec
inc
inc
cs
outs
or
imul
sbb
inc
mov
adc
adc
out
pop
lods
adc
rol
and
cmc
test
push
and
push
and
mov
test
xchg
jae
aaa
icebp
fadd
cmp
lea
pop
test
shl
fcomp
push
sbb
push
clc
mov
pop
pop
mov
pop
mov
loopne
in
xchg
push
inc
pop
sub
pop
xor
pop
sub
mov
sub
repnz
rcl
cli
scas
inc
xchg
sub
and
test
inc
int
lock
fistp
push
loope
lock
sub
push
retf
fld
js
push
xor
add
cli
daa
and
sbb
nop
or
fxch
popf
and
cwde
int3
push
test
sub
test
icebp
ss
cmp
mov
jmp
data16
add
mov
sub
jns
dec
ror
pop
jle
leave
dec
xchg
xor
mov
not
jae
pushf
ja
jmp
and
lahf
pop
lods
xchg
aam
nop
jl
xor
fstp
neg
sub
add
sbb
xor
mov
gs
aad
test
inc
xchg
out
aam
test
test
pusha
jns
stc
add
call
jae
adc
cmp
scas
dec
cs
or
ds
mov
sub
adc
mov
push
push
call
mov
sahf
lods
mov
and
jbe
dec
add
jg
test
dec
mov
clc
inc
retf
inc
jb
mov
aaa
cs
sti
add
push
fwait
mov
xchg
xor
ret
and
stos
or
leave
fsubr
loopne
lahf
out
jg
xor
lock
inc
mov
and
mov
aaa
xchg
jnp
pop
sbb
or
fs
mov
addr16
inc
dec
mov
fild
es
imul
nop
sub
inc
es
loopne
xchg
push
sub
mov
inc
adc
ret
mov
xor
lea
mov
adc
dec
adc
scas
dec
add
outs
mov
les
push
cmc
add
into
dec
pop
clc
sbb
scas
adc
lock
dec
movs
aaa
int
pop
das
mov
in
mov
or
push
mov
pop
cdq
inc
sbb
jns
push
fst
mov
mov
adc
hlt
aad
add
add
and
jl
mov
sbb
ror
adc
stos
or
jg
xor
mov
test
adc
inc
or
and
lock
cmps
daa
jmp
sub
mov
test
popf
maxps
and
ds
and
inc
test
pusha
xrelease
cld
sti
imul
mov
mov
gs
cwde
cmp
or
test
adc
loopne
lea
inc
sahf
cmp
jp
mov
adc
out
adc
push
sbb
out
pop
rol
pop
dec
add
and
cld
jmp
ret
mul
je
add
jmp
push
aam
inc
ror
fwait
out
adc
xchg
adc
icebp
add
xchg
ficom
(bad)
loopne
inc
shl
aaa
or
jb
inc
cmp
sub
leave
pop
outs
pop
or
push
std
xchg
test
aam
xchg
icebp
ss
push
push
lahf
ret
or
pop
sbb
cmps
imul
mov
retf
ret
leave
lock
shl
ins
jge
dec
lods
mov
jb
leave
jmp
es
cli
xchg
xchg
sbb
test
test
test
sub
inc
cld
adc
(bad)
pop
jbe
sub
test
xor
dec
(bad)
js
jns
xchg
popa
hlt
cwde
int
dec
push
xlat
shl
iret
mov
lea
fldz
lea
add
mov
dec
call
leave
sub
xchg
daa
cdq
arpl
lahf
xor
add
dec
out
mov
lods
ret
aad
std
mov
mov
(bad)
jb
mov
data16
mov
push
bound
loop
movq
inc
adc
int
pushf
addr16
in
into
push
add
ror
dec
dec
inc
lea
inc
push
cli
lods
add
arpl
hlt
inc
xchg
mov
sub
in
sub
lods
movs
mov
jo
in
push
xlat
loopne
dec
pop
cmps
and
pop
popf
xchg
mov
dec
popa
inc
neg
mov
cmp
loop
lock
movs
push
adc
icebp
fldenv
bswap
pop
jmp
adc
lock
dec
push
push
das
inc
adc
and
dec
cmp
mov
mov
shl
cwde
or
aaa
pop
aad
and
xor
or
push
shl
xchg
mov
cmp
mov
call
xor
test
cmc
ret
or
mov
mov
cmp
sub
sbb
popa
fimul
xchg
adc
into
lahf
cli
jmp
fsubp
lds
sbb
or
sbb
iret
mov
fwait
ins
push
sub
hlt
mov
jge
or
mul
in
cmp
cmps
(bad)
mov
call
add
sbb
test
dec
dec
retf
test
test
fsubr
inc
jns
repz
cdq
or
or
xor
aaa
xchg
or
inc
pop
mov
mov
out
jae
sbb
or
mov
cmp
ins
ds
mov
ret
push
inc
js
jle
push
lea
cld
call
sbb
or
dec
cmp
(bad)
daa
jp
mov
pop
sub
mov
retf
xchg
loop
mov
test
adc
icebp
leave
cmp
in
out
mov
add
xor
rcl
jne
or
mul
call
rol
mov
in
dec
pop
pushf
test
repnz
nop
sbb
adc
and
shl
je
pushf
push
push
js
retf
in
out
dec
dec
repnz
jo
lods
xchg
sbb
hlt
mov
repz
imul
fimul
fistp
aam
adc
inc
popf
fcmovnu
mov
jno
adc
xor
add
aaa
aaa
inc
xor
outs
gs
ret
call
outs
xor
movs
call
stos
xchg
push
pusha
(bad)
ror
cld
cmp
imul
and
add
mov
adc
ror
movs
std
ss
pop
mov
ins
out
ret
loop
xor
test
xor
mov
shl
adc
cli
push
dec
pmaxub
test
ds
(bad)
imul
and
cmc
das
pop
js
and
retf
(bad)
mov
xor
fimul
adc
mov
pop
inc
mov
out
xchg
sbb
jnp
rol
sbb
sub
sbb
inc
out
outs
or
push
aam
xchg
test
arpl
lock
adc
repz
fwait
mov
xor
(bad)
jae
call
pop
int3
mov
and
mov
repnz
xchg
test
cli
shl
mov
mov
neg
pop
hlt
js
push
cmc
mov
xchg
lds
cmp
lock
mov
jo
xchg
(bad)
xor
cmp
sbb
and
clc
pop
mov
sbb
cmc
cmps
xor
outs
and
jmp
loop
cld
in
fbstp
sbb
je
xor
sbb
sub
or
enter
inc
inc
mov
or
pop
sub
xor
cmp
cmp
mov
mov
add
test
nop
and
xor
in
adc
shl
jmp
mov
rcr
mov
je
xchg
outs
and
mov
add
and
jno
mov
out
icebp
mov
test
cdq
cmps
(bad)
leave
out
and
out
test
cmps
push
pop
je
shl
ss
js
jecxz
lock
add
jno
xor
xor
cld
dec
or
outs
mov
ficomp
ins
imul
sahf
push
mov
dec
gs
nop
push
scas
inc
outs
sub
lods
test
(bad)
mov
adc
cmc
call
test
dec
out
clc
or
sbb
movs
aam
clc
xor
adc
dec
lods
daa
pop
pop
xchg
cwde
lds
jmp
pop
sti
xchg
pop
mov
iret
add
mov
ins
outs
rcl
es
add
iret
jns
aam
xlat
and
inc
ficom
push
mov
hlt
mov
cmps
outs
or
add
mov
leave
pop
ins
addr16
pop
dec
xchg
repnz
xchg
mov
ja
jecxz
xchg
leave
je
cmp
or
das
inc
test
xchg
xor
sub
popf
shl
cmp
sbb
cmps
pop
rol
shl
data16
cmps
add
jae
aas
xchg
popf
add
dec
cli
out
int3
fs
adc
ss
mov
ins
jne
inc
in
mov
dec
out
jle
jmp
fistp
add
movs
mov
dec
mov
data16
xchg
out
mov
xlat
push
xor
das
sbb
pop
xor
xor
adc
cmp
add
pop
add
cs
inc
nop
add
imul
std
dec
jnp
sbb
int3
aaa
shr
cmp
out
movs
int3
rol
arpl
sbb
fist
cmp
xchg
out
dec
das
inc
or
outs
dec
es
or
pop
int
repz
out
or
jmp
mov
sbb
call
(bad)
mov
pop
and
xchg
push
and
mov
add
rcl
mov
aad
(bad)
scas
dec
xchg
push
dec
sub
js
mul
jp
clc
sub
pxor
push
pop
test
add
nop
bound
movs
mov
push
stos
adc
stos
mov
inc
mov
pop
cmps
fmul
cmps
cmp
cmc
or
jno
in
jb
sar
dec
call
mov
jae
jmp
inc
push
mov
cmp
sub
and
call
je
aas
sbb
repz
mov
daa
sub
popa
test
inc
mov
xor
mov
ds
clc
sbb
jecxz
add
xor
lea
inc
aaa
sbb
xor
mov
mov
inc
xor
cli
out
sbb
push
clc
les
push
fwait
popf
lock
movs
mov
int
in
or
mov
or
pop
dec
data16
cmp
add
lahf
pop
rcr
dec
or
and
xchg
lds
mov
cmp
stos
jae
aam
jle
push
pushf
stos
ds
les
sbb
adc
mov
sub
sub
js
in
aad
mov
jp
xchg
sub
bnd
mov
xchg
fcom
cmps
ret
(bad)
dec
stc
cmp
pop
call
sahf
and
adc
mov
adc
scas
push
out
fnstcw
icebp
enter
push
dec
fisttp
pop
jmp
jle
dec
pop
data16
adc
mov
in
aaa
inc
in
outs
cwde
popf
xor
fadd
out
jle
icebp
rol
cs
addr16
(bad)
mov
pop
idiv
fwait
sub
lods
pop
das
sahf
outs
dec
cmp
repnz
inc
loop
lds
(bad)
dec
outs
mov
and
mov
icebp
xlat
sub
pop
loope
div
lods
dec
jle
cdq
cli
lds
les
call
mov
jge
xchg
sbb
or
cmp
movs
xor
push
pushf
dec
ret
aaa
and
sar
add
xchg
fld
xchg
loopne
jp
and
std
dec
pop
call
and
out
aaa
fisttp
fmul
dec
movntps
mov
das
add
inc
xchg
pop
jo
push
sub
mov
push
call
ss
xor
ret
(bad)
push
or
icebp
aam
xchg
leave
int3
jno
clc
js
scas
pop
mov
jbe
pop
mov
js
ret
iret
mov
dec
push
mov
sar
stos
test
or
mov
imul
mov
rol
in
call
cmps
jecxz
sub
dec
(bad)
outs
popf
inc
push
add
xchg
mov
scas
mov
xchg
xor
adc
jae
jg
push
add
inc
mov
pop
call
into
mov
jnp
out
mov
icebp
and
xor
lods
imul
xchg
jmp
xchg
pop
add
xor
dec
sub
xchg
js
xchg
pop
dec
addr16
and
shr
and
add
sar
aam
ds
sub
fld
idiv
not
jle
popf
rcr
cld
adc
or
jmp
add
outs
(bad)
retf
adc
and
sub
jl
aad
rcr
push
enter
sbb
and
call
xchg
mov
xor
lods
stos
bound
ss
push
imul
jmp
les
out
(bad)
(bad)
bound
ins
pop
cmp
fwait
clc
(bad)
cmp
and
test
sub
(bad)
dec
ret
repnz
sbb
scas
sbb
jo
jp
jbe
jb
arpl
mov
fcmovnu
out
mov
lea
dec
mov
xchg
sahf
mov
(bad)
fstp
mov
ret
cli
cmp
xor
mov
sbb
inc
popa
retf
test
jmp
dec
sub
hlt
ins
inc
pop
(bad)
sub
shr
not
pop
sbb
in
jnp
js
pop
test
sbb
mov
out
push
cs
data16
push
jp
cmps
in
out
js
jmp
push
stc
and
mov
test
push
and
neg
in
fwait
pop
push
fnsave
and
cmp
in
jl
push
in
and
pop
xor
aas
scas
jp
inc
pusha
and
(bad)
sub
neg
xchg
jp
inc
cmc
mov
push
pop
test
call
pushf
cwde
sbb
xchg
cmp
pop
mov
sub
cmp
sub
cmp
mov
retf
mov
enter
jb
and
and
jle
cmp
int
xchg
fst
mov
mov
adc
pop
std
lea
jge
or
push
sbb
test
stos
jno
movs
test
repnz
or
xchg
pop
jp
mov
sub
push
(bad)
xchg
cmps
mov
enter
push
bound
popf
popf
lea
mov
sub
out
ret
cmp
clc
repnz
or
sti
push
sub
push
bound
aam
sbb
iret
fdiv
sbb
add
xor
xchg
pop
gs
outs
sub
fdivp
dec
sbb
outs
xor
mov
sbb
adc
push
pop
push
mov
retf
push
pop
pusha
xchg
lahf
push
pop
pop
cmp
stc
dec
outs
cwde
rcl
lock
adc
stos
sub
aad
stos
loope
fisttp
fsubr
fistp
inc
push
sbb
outs
nop
cmc
mov
jp
add
std
loope
xor
sbb
mov
dec
sti
jmp
in
pop
loope
movs
cld
ja
fistp
and
sbb
aas
and
add
xor
out
dec
(bad)
mov
data16
in
(bad)
rcl
jb
push
aaa
cmp
push
mov
inc
dec
inc
mov
adc
mov
lock
shl
cs
mov
push
test
inc
mov
stc
in
mov
clc
stos
loop
sbb
or
pop
xchg
mov
mov
(bad)
mov
cwde
std
shl
jecxz
pop
cs
mov
test
(bad)
fdiv
jne
jl
jns
jne
rcr
out
push
iret
loop
js
mov
lock
popa
add
push
ja
sbb
dec
add
les
out
(bad)
outs
jbe
mov
test
or
push
shl
ds
std
cli
inc
add
out
xchg
aam
pop
int
lods
out
sbb
ss
cmp
mov
fistp
xor
xlat
xor
aas
inc
mov
adc
sti
cmp
cmp
retf
leave
inc
pop
mov
mov
mov
lods
and
hlt
and
mov
imul
shr
ret
fs
mov
movq
or
test
imul
popa
imul
add
and
mov
repz
inc
pop
push
sbb
ins
jl
in
dec
pop
cmp
and
xchg
and
sbb
push
xchg
fldcw
or
push
jp
or
jge
shl
test
sbb
xchg
ficomp
mov
push
imul
mov
inc
push
hlt
jg
adc
outs
in
ja
sti
jne
pusha
enter
add
lahf
call
push
adc
scas
mov
add
or
in
js
pop
into
cli
icebp
das
cmp
xlat
addr16
pop
aam
shr
sbb
pushf
jo
lock
push
mov
data16
cmp
out
(bad)
sti
or
sbb
mov
inc
nop
cmp
or
test
push
nop
cmc
jnp
(bad)
mov
jo
popa
mov
sub
lea
xchg
inc
add
jb
ins
enter
pop
stos
out
test
jno
xor
xor
push
addr16
push
push
pop
in
pop
mov
cmp
or
bsf
sub
in
stc
xor
sub
xchg
mov
in
inc
push
(bad)
mov
sbb
mov
inc
ret
fsubr
xor
fmul
adc
xchg
lea
xchg
ror
movs
bound
pop
sbb
pop
or
daa
mov
movs
push
cld
in
mov
sbb
aad
out
stos
or
add
sbb
sbb
xor
jno
out
mov
mov
(bad)
mov
mov
dec
es
xchg
or
mov
lods
ret
es
dec
sar
out
aam
xchg
sbb
mov
shl
enter
dec
loopne
pop
cmp
xchg
jne
inc
push
xchg
mov
cli
push
xor
push
mov
(bad)
mov
loope
jnp
adc
nop
sbb
outs
jg
enter
call
mov
sar
(bad)
sbb
and
mov
into
cmp
adc
retf
neg
inc
(bad)
or
arpl
xor
push
mov
std
mov
jp
mov
pop
leave
sti
outs
cmc
jl
push
sbb
icebp
pop
pop
mov
and
dec
leave
ins
mov
xor
pop
retf
fild
mov
xchg
fmul
retf
fmul
out
rol
hlt
mov
sbb
xor
mov
jmp
sub
mov
fdivr
cmp
arpl
jg
rol
adc
outs
mov
sbb
cmp
adc
test
and
cld
jae
addr16
nop
inc
push
and
mov
ins
cmp
hlt
inc
inc
inc
cmps
mov
mov
jns
mov
fadd
push
pop
aad
or
add
in
ja
jb
sahf
pop
outs
xor
or
int3
sub
push
frstor
cmc
mov
repz
jne
scas
mov
fwait
ret
push
sysexit
adc
or
test
sub
pop
aas
cmps
pop
sub
gs
sbb
movs
and
inc
mov
test
sub
int3
lock
push
lock
cli
repnz
pop
xor
out
lods
jns
imul
loop
stos
es
push
add
clc
jmp
or
dec
pop
int
daa
and
mov
mov
retf
test
jle
fld
pop
das
inc
ins
jle
jae
shr
fild
imul
mov
and
mov
repz
stos
adc
lahf
push
mov
mov
jle
daa
sahf
push
outs
stc
nop
out
into
cmp
pop
sub
(bad)
pop
loopne
jb
aas
adc
cli
jns
retf
mov
adc
or
dec
push
mov
popa
mov
and
bound
cmps
inc
mov
fisubr
lods
pop
pop
(bad)
mov
adc
rcl
and
jle
mov
das
dec
lods
add
ror
mov
fiadd
out
push
add
sub
jns
fnstsw
and
clc
(bad)
popf
mov
int
fisttp
mov
cmp
xor
xor
jmp
(bad)
(bad)
shl
neg
int3
leave
xchg
(bad)
adc
push
mov
bound
aad
lods
(bad)
pop
add
jp
shr
sub
push
pop
test
jae
aad
sbb
fisttp
popa
fist
imul
js
inc
mov
inc
popf
mov
mov
mov
push
das
fmulp
dec
and
daa
and
jmp
aad
or
out
mov
mov
pop
xor
pop
push
adc
(bad)
rol
dec
int
aad
add
outs
sti
imul
inc
jg
jbe
fcmove
or
add
xchg
dec
jp
loop
mov
xor
mov
lea
xor
lock
sub
push
imul
inc
cld
cmp
js
jmp
retf
jbe
das
dec
or
jno
rol
or
das
jp
ret
gs
sub
cmp
out
xor
in
mov
xchg
ins
xchg
cdq
xlat
scas
out
mov
and
or
jmp
div
loop
or
mov
jge
cs
rol
inc
xor
sub
mov
dec
pushf
pop
js
pusha
push
test
sbb
rcl
push
addr16
in
mov
mov
imul
add
push
stos
inc
lahf
push
ja
stc
mov
xchg
test
js
cmc
or
xchg
fwait
loop
mov
dec
popf
push
rcl
push
stc
(bad)
leave
pop
dec
stos
repnz
gs
fndisi(8087
lods
fwait
sub
mov
mov
adc
dec
rcr
je
(bad)
jnp
sbb
retf
mov
inc
(bad)
sub
xchg
ja
stos
jge
push
push
dec
push
pop
ficom
dec
enter
mov
loop
xor
es
mov
and
stos
icebp
jmp
inc
aas
cs
mov
xchg
retf
mov
movs
adc
dec
dec
daa
jbe
push
add
test
mov
data16
and
dec
sar
lock
or
add
adc
pop
sbb
mov
ds
and
stos
xor
fistp
pop
je
adc
mov
inc
test
retf
pop
mov
push
xlat
jmp
fsubr
es
jmp
fisttp
dec
cmp
aas
test
sub
aaa
cmps
das
vmovaps
lahf
inc
and
or
push
cmp
mov
sar
mov
add
pop
ins
inc
mov
outs
jbe
add
add
push
or
stos
std
nop
aam
xchg
mov
out
jge
(bad)
loop
mov
mov
fdiv
push
xchg
into
adc
push
jp
sbb
jmp
rol
shl
popa
xchg
(bad)
jno
sbb
bound
jb
or
adc
and
or
mov
ss
sbb
add
arpl
gs
retf
movs
bound
sub
lods
pop
pop
mov
sbb
stos
cwde
xchg
mov
pop
cmp
retf
imul
sti
mov
mov
jecxz
push
sahf
mov
cld
imul
retf
push
fcomp
repnz
call
push
mov
xchg
and
adc
mov
cmp
lods
pop
push
ins
push
in
cmps
imul
inc
dec
daa
sub
jno
jmp
push
mov
test
in
adc
lods
imul
and
adc
vminss
fwait
scas
in
movs
or
loopne
cdq
hlt
rol
outs
and
jl
push
out
fistp
iret
cmps
or
jge
jp
jne
pop
cmp
mov
sbb
mov
retf
mov
jbe
pusha
pop
dec
rcr
dec
mov
xor
test
or
xor
movs
daa
push
inc
add
xchg
push
cmp
cli
and
imul
cmps
js
iret
(bad)
cvtpi2ps
pop
push
(bad)
ins
pusha
daa
adc
or
ret
xchg
xlat
mov
xor
pop
push
jns
lahf
push
test
inc
mov
mov
cmp
aaa
stos
mov
dec
(bad)
(bad)
ds
and
scas
addr16
sub
ret
mov
mov
in
xchg
int
cdq
xchg
sub
mov
dec
xchg
cmp
jne
fdivr
out
push
in
cmp
mov
sar
jns
lahf
push
cdq
push
mov
mov
xchg
push
pop
xchg
xor
imul
add
jle
mov
(bad)
mov
mov
adc
inc
xor
out
loopne
out
cwde
ds
xor
mov
push
ror
aam
push
or
adc
push
mov
mov
cmp
and
jne
add
std
cmp
and
sbb
cmps
adc
inc
dec
jle
movs
lods
mov
sub
pop
or
int
pop
pushf
fcomp
dec
or
(bad)
fsub
add
xchg
sbb
adc
jge
adc
(bad)
repnz
in
jns
test
test
xor
pushf
out
lods
sahf
fnstcw
and
stc
cmp
cmp
dec
adc
push
loopne
xchg
icebp
repz
call
cmps
mov
lods
shl
call
mov
adc
test
jmp
into
pmaddwd
std
inc
xchg
movntq
out
mov
mov
push
dec
pop
lods
test
clc
(bad)
enter
cmp
push
dec
fstp
adc
sar
mov
dec
mov
imul
test
mov
call
lods
aam
loope
iret
inc
xor
sub
and
push
pop
mov
add
xor
add
xor
push
pop
and
jle
xor
loopne
push
out
mov
imul
pop
scas
scas
test
or
in
pop
mov
fbstp
cmc
jmp
cwde
cmps
pusha
sub
js
and
ja
ror
popa
jnp
loopne
(bad)
adc
xchg
out
stos
(bad)
push
xchg
mov
in
shl
aas
lahf
adc
mov
lahf
inc
idiv
push
xor
shl
mov
cmp
and
mov
or
jmp
jecxz
stc
adc
sub
into
ret
sbb
mov
xchg
xchg
jl
stos
push
jle
clc
out
lods
xor
call
sub
dec
test
jp
xor
pop
and
daa
ret
ror
pop
dec
mul
cmp
mov
(bad)
repz
out
cs
mov
sub
pop
jnp
sub
or
inc
or
sbb
sbb
shr
enter
pop
add
ins
mov
mov
repz
jne
sub
dec
mov
push
loope
call
adc
xor
sti
in
adc
imul
add
fcmovne
les
pushf
adc
mov
cmps
rol
cmp
pop
pop
aam
popf
popf
push
ror
outs
jge
or
push
add
cld
adc
dec
aaa
aad
mov
push
sar
jae
mov
popf
scas
aas
in
(bad)
pop
movs
jmp
out
pusha
int
adc
dec
add
pop
push
cmps
loope
neg
test
into
inc
and
adc
jp
or
dec
ins
jo
in
or
js
pop
xchg
push
sbb
cmp
js
dec
xor
xor
add
add
xchg
inc
pop
loope
add
xchg
mov
ror
fnstsw
retf
hlt
adc
popf
mov
int
sar
jle
jecxz
jb
xchg
jl
iret
in
jae
(bad)
out
mov
das
xchg
aad
push
mov
imul
adc
jge
addr16
and
adc
push
add
adc
popf
inc
popf
and
fld
lock
and
sbb
mov
cmp
mov
xchg
aas
clc
jb
push
std
mov
es
and
pop
push
adc
mov
mov
ins
xchg
test
mov
(bad)
nop
test
sar
adc
push
mov
push
(bad)
test
inc
aam
inc
add
push
jnp
add
dec
fnstsw
mov
int3
(bad)
out
(bad)
outs
add
dec
jecxz
cdq
ja
jo
adc
jg
mov
inc
mov
and
(bad)
mov
sbb
scas
xchg
(bad)
es
mov
pop
lea
retf
clc
rcl
adc
pop
(bad)
jl
mov
ds
xchg
jns
push
(bad)
mov
push
in
ja
mov
add
add
ja
mov
repnz
push
scas
xchg
jne
into
pop
pop
loopne
xor
lahf
mov
in
fstp
sbb
nop
cdq
mov
adc
mov
scas
mov
xor
push
pop
lea
sbb
or
enter
mov
lods
inc
movs
dec
push
dec
call
pop
mov
pop
movs
call
mov
rcr
jl
xchg
fld
jl
dec
jg
mov
or
scas
mov
jmp
fwait
pop
jns
repnz
sbb
test
icebp
and
mov
jl
xor
sbb
nop
(bad)
lea
xchg
pop
out
neg
push
push
dec
xchg
gs
or
jns
aam
das
push
and
stos
mov
addr16
cmc
pusha
(bad)
pop
and
xor
mov
jns
fcomp
repnz
je
mov
imul
mov
push
mov
lea
pop
out
fwait
stos
lea
stc
push
and
fcmovbe
jmp
bound
fwait
mov
inc
mov
jecxz
fsubp
fadd
out
and
sub
xor
pop
push
in
or
call
and
xchg
cmps
cwde
add
inc
sub
out
loop
adc
jmp
stos
add
ret
fadd
jge
adc
jo
fidivr
call
lods
dec
adc
inc
and
add
xor
sti
fisub
out
xchg
test
pop
xchg
push
pop
dec
popf
lahf
adc
mov
aam
fwait
loopne
push
daa
mov
stos
and
movzx
icebp
sub
jno
das
jmp
cmc
stos
leavew
jns
dec
lahf
imul
jns
mov
out
jmp
outs
xchg
and
adc
mov
dec
cmps
xchg
jne
inc
pop
out
mov
cwde
cli
mul
cmp
fucomi
sbb
jecxz
test
xchg
popa
or
jl
cmp
out
mov
add
cmp
test
pop
repz
pop
jp
call
xchg
dec
in
out
and
cdq
push
pop
ror
push
hlt
push
shl
push
popa
cmp
sub
daa
ffree
mov
sahf
jb
pop
call
shl
jns
sbb
or
rep
stos
lock
mov
xor
mov
pushf
cld
sub
jo
mov
shr
shl
loope
jbe
hlt
lahf
lahf
repnz
data16
inc
mov
test
fldenv
fsubr
movs
clc
push
ret
xor
ja
xor
pop
mov
dec
push
sti
mov
dec
add
jb
enter
out
hlt
jmp
rcr
xchg
dec
int3
movs
or
addr16
add
mov
aam
fsub
cld
loope
cmp
push
push
or
ja
add
rol
sub
fist
sub
sub
sbb
aam
push
aad
dec
inc
dec
out
div
cmp
cld
pop
sub
xchg
mov
inc
jb
fidiv
fwait
ret
mov
call
ret
and
pop
xchg
sub
xchg
xchg
mov
inc
cmp
fadd
adc
fwait
ror
jb
or
aas
arpl
pop
and
fistp
fs
rcl
mov
ins
mov
pop
ins
int
inc
lods
in
add
sub
add
xchg
js
out
lods
adc
jnp
inc
xor
mov
mov
sub
(bad)
cmp
aas
and
dec
iret
leave
dec
fwait
(bad)
retf
scas
xor
dec
adc
jno
mov
icebp
ds
retf
sar
mov
pop
jne
repnz
fisttp
in
retf
fstp
mov
es
nop
xchg
lea
in
push
fdiv
sbb
fwait
mov
pop
movs
or
push
ds
jle
cld
adc
cld
test
and
and
ds
call
cmp
(bad)
out
cmp
inc
icebp
(bad)
push
into
mov
popf
daa
in
push
aaa
mov
mov
pop
arpl
lahf
xchg
arpl
add
push
test
cwde
(bad)
xor
xchg
mov
test
mov
stos
in
repnz
push
and
js
icebp
inc
test
push
cmp
rcl
sbb
jne
stos
fisub
jne
dec
adc
pop
je
popa
fbstp
add
push
jge
push
cdq
push
dec
pop
sbb
jmp
or
jmp
imul
xlat
jmp
xor
popa
inc
data16
xor
repnz
mov
sbb
aad
inc
push
and
xchg
inc
pop
sar
mov
sbb
sahf
aaa
push
push
addr16
jge
inc
add
sar
dec
dec
sbb
mov
push
aas
mov
(bad)
xor
std
fsubr
cmc
xor
inc
popa
popf
ret
pushf
cmps
daa
pop
out
lods
outs
je
mov
mov
test
cld
xor
jno
fistp
dec
leave
push
aas
dec
push
xchg
adc
cmp
test
add
xor
ja
mov
mov
les
jne
sbb
aad
push
lea
inc
mov
xor
push
in
add
mov
push
mov
dec
push
mov
pop
mov
loop
sub
not
imul
emms
cmps
and
pop
clc
out
fwait
ds
jg
loop
imul
cli
sti
cmp
pop
cmc
sar
outs
dec
cmp
nop
repz
iret
xchg
addr16
sbb
stc
pushf
aam
sbb
mov
fwait
out
xchg
cmps
adc
xor
mov
movs
xor
enter
push
lods
fdiv
dec
and
out
xlat
inc
xchg
ret
xchg
movs
dec
xor
push
dec
or
rol
jmp
and
movs
fs
mov
xchg
out
sub
mov
jne
leave
shl
pop
aad
retf
popa
xor
and
outs
rcl
call
add
sti
icebp
mov
mov
leavew
gs
dec
jnp
jmp
push
scas
cmp
mov
pop
dec
mov
(bad)
retf
sub
inc
xor
test
movs
dec
ja
icebp
mov
push
scas
and
leave
xor
retf
dec
imul
push
add
add
js
or
shl
(bad)
pushf
call
fidivr
imul
push
ret
adc
cmc
pop
xor
lods
add
inc
jl
push
das
lds
inc
fxtract
cmp
stos
mov
pop
and
sub
add
(bad)
and
xchg
adc
pop
ins
std
stos
nop
pop
xchg
retf
add
or
mov
xor
inc
fcmovnb
xchg
hlt
sub
imul
mov
std
fistp
pop
imul
or
adc
mov
imul
fcmovnbe
sub
push
add
lds
(bad)
cmc
sbb
ficom
ret
(bad)
lea
in
inc
sub
nop
outs
leave
sbb
xor
repnz
stos
push
sub
shl
mov
and
push
sub
cmp
dec
mov
pop
iretw
mov
out
mov
in
sub
fdivr
add
xor
test
xchg
or
in
rcr
pushf
jb
iret
mov
stc
inc
cmp
int
mov
gs
adc
mov
data16
rcr
sbb
jmp
sbb
les
stc
fbld
fisttp
repnz
cmp
test
adc
addr16
out
and
xor
mov
das
or
test
cmc
retf
adc
push
mov
ins
xor
in
mov
and
neg
outs
mov
inc
jnp
pop
repz
pop
pop
push
xchg
into
adc
cmp
retf
enter
add
cmps
mov
adc
add
hlt
rcr
or
rcl
mov
scas
lds
and
sub
ds
fnsave
leave
sub
int
inc
sub
sysenter
inc
cmp
push
cmp
and
popa
outs
fidiv
pusha
inc
bnd
sbb
pop
mov
sbb
adc
push
pop
sbb
cmc
stos
jne
mov
push
dec
add
jnp
cwde
mov
jge
or
lahf
dec
jns
movs
cmp
jge
mov
or
jge
inc
fidivr
push
jmp
(bad)
cmp
cmp
mov
adc
js
popa
das
or
xchg
das
sar
jge
cmps
dec
stos
cld
les
mov
push
xchg
mov
pop
ret
je
and
nop
push
sub
pop
shl
xor
jmp
cmps
cmp
sbb
and
xor
pop
(bad)
mov
or
pop
test
and
lods
stc
repz
sbb
into
loopne
mov
fcmovnu
mov
stos
cmp
pop
xor
stos
test
(bad)
fistp
jmp
movs
push
and
xor
jge
sbb
pushf
pusha
xor
outs
pop
and
inc
loope
jno
cmp
ss
ins
jmp
dec
pushf
mov
enter
fsub
(bad)
test
add
jne
rol
rol
jp
mov
mov
xchg
jb
std
stos
dec
sbb
pushf
out
inc
pop
mov
and
into
mov
sub
push
mov
loopne
push
sbb
push
aam
loope
vmwrite
mov
push
fsub
aad
test
cmp
aad
and
dec
xchg
loope
aas
jmp
pop
shl
or
push
mov
ror
xchg
popf
xlat
pop
xor
cmp
in
dec
shl
(bad)
pop
xchg
fwait
ret
push
shl
aaa
pushf
sub
stc
test
xlat
ror
stc
inc
xchg
sbb
test
int
leave
ins
push
push
mov
sti
in
push
jmp
xchg
mov
push
push
inc
sahf
mov
push
repnz
cmps
dec
jmp
pushf
adc
push
push
ins
mov
in
jb
ins
leave
push
jmp
cmps
das
sbb
gs
xchg
test
into
movs
iret
les
xrelease
leave
pop
push
jg
xchg
push
inc
inc
push
lods
mov
addr16
in
fs
add
dec
fwait
lods
xor
cld
mov
mov
push
push
jmp
and
and
lds
or
lahf
jns
xor
add
outs
jbe
fsub
loop
jmp
stc
jl
imul
jns
ret
gs
into
mov
add
call
ret
sub
pushf
mov
or
add
in
xor
pusha
ficom
sbb
arpl
jb
enter
cmps
arpl
stos
test
pop
mov
adc
push
lock
cmp
inc
sbb
or
jp
aad
scas
lods
stc
sub
cmc
pushf
sbb
stos
jmp
cmc
mov
cmp
outs
cmp
jp
jmp
iret
mov
adc
push
add
pusha
stos
add
popf
pop
jg
dec
je
movs
mov
imul
and
push
(bad)
jle
add
loopne
mov
mov
jnp
sbb
lods
push
cmp
dec
movs
sbb
into
jmp
adc
inc
jmp
mov
cwde
fcmove
inc
sbb
pusha
sti
xchg
adc
and
xlat
mov
imul
xchg
xor
cmps
xchg
dec
sbb
out
test
xchg
shl
fld
xchg
jecxz
(bad)
sahf
fcomp
pushf
inc
std
sbb
in
nop
test
jge
mov
ret
inc
mov
xor
jno
dec
leave
test
les
hlt
leave
add
leave
cmp
fisttp
jge
gs
push
call
aam
xor
int3
inc
(bad)
mov
fisub
xchg
sub
int3
arpl
inc
fsubr
out
lea
arpl
outs
jge
pusha
and
adc
cmps
rol
popa
mov
mov
xchg
xor
retf
into
stc
loop
fcomi
dec
xchg
pop
popf
pop
sub
lods
lods
pop
aad
sub
xor
xchg
cmp
nop
push
int3
ret
out
push
pop
add
and
jnp
test
push
cmp
lea
popa
aam
sbb
fs
(bad)
call
jae
cmp
ins
sar
mov
hlt
dec
and
sar
pop
add
(bad)
adc
cdq
scas
mul
ins
rcr
pusha
rol
jge
mov
fsubr
pushf
adc
int
stos
das
xor
mov
cmp
inc
test
imul
pop
cmp
es
les
ficom
push
mov
mov
mov
mov
cmc
icebp
push
and
(bad)
mov
div
push
outs
mov
in
inc
shl
or
pop
loopne
xor
adc
stos
movs
inc
and
mov
dec
cmp
sbb
jae
mov
cdq
movs
(bad)
lock
test
lods
mov
or
imul
loopne
xchg
inc
jmp
xchg
mov
dec
sub
stc
fdiv
icebp
inc
cmps
push
xor
mov
mov
add
movs
rol
sbb
loope
daa
movs
sbb
inc
mov
jo
sahf
js
mov
mov
cs
mov
push
sub
jmp
mov
in
xor
fidivr
cwde
cmp
xor
loope
jb
hlt
sbb
in
lock
jp
xchg
mov
clc
(bad)
pop
push
mov
mov
add
enter
sub
(bad)
cmp
rcl
fsubr
(bad)
leave
das
jae
adc
loopne
cmp
js
sbb
ficomp
dec
lds
mov
xchg
leave
sub
cmp
adc
repnz
pop
and
shl
pushf
bound
cmp
xchg
xor
shl
arpl
mov
rol
pop
das
shl
push
jbe
adc
mov
adc
js
xor
stc
imul
inc
clc
jnp
popf
test
pop
xchg
ja
shl
xchg
add
add
cmp
int3
mov
sub
repnz
mov
aaa
repz
nop
and
mov
movs
sbb
jbe
add
(bad)
push
ret
mov
lea
mov
jnp
cmps
iret
push
aad
popf
or
test
test
mov
loop
imul
je
push
es
and
push
pop
movs
push
cmp
scas
sbb
dec
lea
xchg
test
dec
sub
retf
js
aam
jae
push
dec
fwait
and
div
xor
sbb
push
sahf
xchg
xchg
sub
cld
mov
pop
cmps
mov
cmps
fcmovnb
scas
outs
jg
iret
adc
inc
cwde
cmp
mov
cmp
add
push
ins
mov
pop
sahf
push
cmps
sti
mov
mov
adc
fst
leave
imul
pop
sahf
mov
ins
inc
dec
outs
add
(bad)
lock
pusha
push
ins
in
test
push
inc
or
cmp
xchg
lahf
retf
sbb
push
fwait
inc
and
sub
xchg
mov
rol
call
sub
fs
xchg
sub
jnp
int3
inc
dec
stos
mov
dec
inc
outs
aas
repz
dec
push
(bad)
ins
movs
stc
adc
mov
sbb
sub
shr
(bad)
pop
push
add
jmp
cdq
inc
sub
mov
es
jb
cmp
mov
int
scas
ins
pop
inc
or
es
jmp
pop
pop
test
dec
fabs
fwait
mov
rcl
mov
or
mov
fisub
in
movs
outs
movs
das
sub
mov
jge
inc
popf
adc
or
sbb
xchg
movs
aam
lock
xor
cmp
popf
sub
inc
add
shl
inc
pop
sub
shl
cdq
mov
pop
or
js
and
mov
aam
fs
or
adc
xor
jle
push
adc
or
imul
sbb
int
clc
mov
js
jle
(bad)
shl
pop
pop
cmp
mov
inc
leave
dec
test
dec
lahf
out
sub
repz
enter
sub
push
pop
xchg
mov
sub
cmp
add
outs
xchg
arpl
aas
pop
sub
mov
stos
clc
pop
mov
jae
mov
sbb
and
push
inc
pop
mov
xor
xor
iret
xchg
adc
inc
das
fadd
xchg
out
or
mov
sub
fild
out
repz
jae
lock
ds
mov
sbb
lods
cmps
push
aas
push
ret
mov
(bad)
scas
fnstcw
test
js
(bad)
std
dec
cmp
push
xor
das
push
clc
sahf
ja
xor
imul
xor
pop
jne
push
xor
push
push
icebp
pop
test
(bad)
fcmovnu
dec
xor
in
mov
mov
fucom
mov
loopne
push
test
popa
xor
test
add
stos
dec
(bad)
das
cmp
mov
adc
sub
and
fld
push
xlat
movs
xchg
sbb
das
jno
and
push
pop
mov
inc
mov
icebp
test
addr16
and
mov
(bad)
inc
ja
aam
repz
fiadd
mov
mov
enter
shl
cmp
in
stos
push
jl
test
ds
popa
xchg
out
xor
in
pop
dec
stos
push
pop
pop
test
mov
jnp
imul
cmp
and
enter
or
rcr
ins
ins
push
fild
fwait
pop
inc
xlat
fidivr
xchg
cdq
mov
jae
adc
js
loop
retf
xchg
cmp
std
mov
add
iret
dec
ror
cmp
js
movs
inc
xchg
mov
jae
nop
push
dec
loope
push
push
aas
add
pop
jns
jae
push
lea
sub
ja
(bad)
imul
lahf
xchg
mov
sbb
mov
push
dec
in
in
adc
ins
xchg
clc
into
cmp
inc
sub
das
push
je
jne
add
adc
rol
inc
cs
adc
into
js
jae
jno
push
push
nop
sbb
cmp
ds
int
fwait
add
out
data16
sub
ret
inc
pop
call
xchg
movs
or
add
sbb
pop
ss
cld
jmp
push
hlt
sbb
push
inc
xchg
xchg
sub
adc
(bad)
lock
push
dec
xor
test
test
xchg
(bad)
lods
push
stos
xor
(bad)
clc
cmp
cmp
ds
and
inc
sbb
sbb
mov
dec
in
frstor
icebp
dec
jle
dec
out
stos
sbb
push
jmp
dec
adc
mov
std
inc
test
xor
into
pop
adc
cld
xchg
add
cmp
add
mov
add
sbb
pop
arpl
into
mov
sbb
dec
or
mov
pushf
in
and
mov
enter
lods
bound
scas
into
cdq
xchg
test
inc
in
aas
pop
push
push
mov
ret
mov
pop
sbb
scas
mov
bound
movs
add
xchg
outs
je
pop
and
je
xor
push
and
xchg
cmp
or
adc
or
scas
and
jae
in
cdq
int3
mov
arpl
test
test
jb
dec
cwde
cmps
cmp
xchg
mov
in
mov
pop
add
xor
adc
sar
pop
push
mov
pop
imul
daa
jo
mov
mov
out
push
jnp
dec
or
xor
mov
test
dec
test
shl
cmp
pop
std
sbb
cdq
nop
std
pop
shl
pop
mov
sbb
mov
cwde
push
jecxz
mov
shr
ror
and
or
scas
push
inc
dec
add
jg
and
fsubr
cmp
(bad)
out
scas
and
(bad)
rol
cmp
dec
add
cmp
sub
enter
and
pop
pusha
push
add
lock
mov
ss
lock
xor
imul
in
mov
adc
jg
and
or
call
add
pop
das
mov
sbb
mov
or
dec
into
gs
push
cmp
loopne
and
mov
jg
cmp
cmc
retf
pop
pop
shl
arpl
pop
xor
movs
rol
movs
pop
or
imul
and
xchg
lock
push
jmp
add
mov
into
jbe
call
jnp
sbb
mov
hlt
iret
test
fsubr
mov
pop
nop
dec
pop
jae
clc
sub
mov
das
add
mov
(bad)
jnp
jo
lea
mov
mov
adc
dec
movs
scas
pop
das
lods
xchg
cli
lea
adc
je
jbe
out
arpl
or
jbe
jmp
add
cmp
shl
xabort
mov
imul
call
outs
inc
arpl
xchg
dec
pop
xchg
pop
sub
xor
outs
loop
imul
cmp
add
inc
xor
out
push
daa
stos
inc
mov
mov
outs
rcr
aad
add
cmp
jmp
mov
ds
stos
shr
fisub
loopne
xor
jno
sub
sbb
fist
(bad)
and
ja
inc
cmp
jb
jle
arpl
nop
lds
(bad)
out
cmps
jp
xchg
and
inc
pop
test
sbb
outs
fcmovne
jne
jle
jle
or
sti
and
pushf
lods
mov
sub
imul
into
clc
sub
rol
xlat
dec
jle
sub
imul
(bad)
scas
imul
and
xchg
xchg
xor
fcmovnbe
cmp
ja
ja
dec
cmp
pop
pop
dec
dec
mov
data16
pusha
mov
nop
(bad)
push
(bad)
in
xor
ds
xchg
fbld
pop
in
adc
(bad)
imul
pushf
sub
xchg
les
(bad)
retf
lods
or
sub
ins
dec
(bad)
popa
adc
loope
adc
mov
cmp
jne
cs
gs
adc
adc
push
punpckhdq
mov
fiadd
div
ds
ja
push
cmp
sbb
or
repz
(bad)
cld
test
movs
je
out
test
cmp
inc
data16
cs
out
movs
push
sbb
dec
xlat
mov
pushf
mov
xor
mov
dec
cmp
fwait
out
pop
mov
xchg
adc
sub
pusha
cmp
xor
lods
jbe
sti
(bad)
(bad)
mov
push
or
inc
(bad)
clc
pop
mov
mov
push
loope
pop
outs
int3
icebp
xor
and
cmp
pop
xor
push
data16
adc
sub
or
mov
in
pushf
or
sub
push
xlat
bound
in
in
stos
jno
cmps
pop
lods
movs
scas
(bad)
popa
loopne
popa
mov
pop
mov
cmps
fsubr
hlt
mov
fmul
inc
pop
push
div
(bad)
pop
mov
sbb
(bad)
mov
test
pop
xchg
sahf
(bad)
jmp
mov
mov
sbb
xchg
je
fld
or
and
adc
inc
pop
mov
xchg
outs
adc
mov
sub
push
js
rcl
in
in
xchg
ror
mov
xchg
mov
cmp
cdq
call
cli
mov
inc
idiv
not
jp
fnsave
push
retf
cmps
mov
mov
adc
dec
test
or
jecxz
outs
push
fidiv
arpl
and
pop
stos
lods
cs
ins
in
and
das
mov
or
(bad)
aas
movs
jge
push
xchg
rcr
sub
fcom
popa
push
retf
mov
sub
sbb
jmp
fs
inc
and
adc
jnp
stc
imul
jge
push
inc
mov
jno
pop
cmp
arpl
cmps
jp
int
xchg
sub
sub
(bad)
aam
push
sbb
fld
leave
mov
ds
jbe
les
jne
xor
lods
test
xchg
inc
mov
xor
mov
rcl
pop
test
jl
loop
or
imul
out
test
push
out
push
dec
add
retf
and
and
xchg
call
xchg
imul
pop
data16
adc
inc
pop
add
sbb
test
push
and
ja
xchg
pop
sbb
mov
std
lds
test
stos
cmp
icebp
popf
iret
ins
mov
sar
cmp
repz
cmp
mov
retf
popa
mov
gs
(bad)
sbb
es
push
pop
les
sahf
stos
push
xor
std
fs
sbb
retf
int
bswap
repnz
int3
push
rcr
jle
and
sahf
or
pushf
xor
push
pop
add
mov
sbb
push
imul
mov
mov
add
in
js
data16
mov
or
in
jne
cmps
dec
sahf
jg
mov
leave
xchg
rcr
pop
inc
in
test
or
shl
xor
xor
fisubr
idiv
loopne
mov
rol
icebp
inc
int3
loopne
inc
sbb
cmp
dec
loopne
jp
shl
mov
mov
cs
mov
mov
ret
js
fnstcw
aad
lods
scas
(bad)
push
sub
popa
outs
fnstsw
push
pushf
xor
shl
and
cmp
adc
icebp
dec
stos
mov
fcomi
mov
loope
ret
xchg
lods
inc
xchg
jg
ds
out
push
call
xchg
shl
loop
and
mov
push
iret
ins
ss
out
xor
loopne
shl
xor
xor
(bad)
add
scas
mov
mov
loop
sbb
rcl
shr
add
xchg
jg
mov
lds
xchg
ror
bound
mov
repz
nop
mov
and
jne
cmp
test
les
inc
dec
mov
aas
lock
inc
shl
push
dec
fcmovb
jge
scas
xchg
inc
jmp
mov
xchg
ret
pop
in
or
in
int3
retf
sbb
cmps
mov
in
inc
lds
xchg
retf
mov
cs
xor
add
dec
xchg
dec
movs
inc
pop
fnsave
(bad)
adc
cdq
stos
push
sub
and
es
mov
inc
jl
(bad)
push
(bad)
push
shr
sub
sub
xchg
cmp
push
nop
rcr
and
jns
jge
ja
jmp
loop
sub
ror
lahf
adc
pop
dec
pusha
pop
adc
mov
cmps
das
cmp
bound
jae
mov
dec
jnp
ds
inc
sbb
add
gs
outs
lahf
inc
enter
jmp
jns
xor
mov
outs
or
adc
sbb
jge
popf
cmp
outs
cmps
inc
sar
mov
add
inc
inc
inc
mov
daa
outs
pop
adc
inc
or
nop
xor
je
adc
in
addr16
inc
iret
iret
ins
push
mov
pop
iret
icebp
inc
leave
iret
imul
pop
ror
xor
outs
add
lea
imul
jg
lds
in
push
xlat
sbb
(bad)
mov
repz
or
xor
in
pushf
nop
adc
outs
mov
les
pop
push
xor
pop
ror
jp
popa
mov
and
popa
jl
shr
xor
pop
mov
xor
inc
rcl
addr16
pop
inc
mov
ror
cmp
shl
je
dec
mov
imul
sbb
cmps
push
test
mov
pop
call
add
lahf
sub
xchg
or
fyl2xp1
xor
mov
fs
ins
pop
jno
out
popa
adc
jg
es
mov
jns
leave
leave
or
xchg
and
es
dec
pop
dec
test
(bad)
mov
dec
int3
in
stc
stos
icebp
das
and
adc
mov
push
fsub
add
cld
das
test
enter
push
imul
dec
sub
xor
pushf
repnz
sub
push
sbb
dec
jnp
ffree
out
adc
adc
int
mov
(bad)
ins
pop
inc
aas
mov
js
test
lods
arpl
cmp
xor
std
lds
and
pop
retf
daa
and
xor
les
das
lea
or
call
cmps
sti
test
(bad)
push
inc
xchg
scas
jmp
stos
pop
mov
shl
jno
jae
mov
cmp
push
jmp
mov
scas
cmp
or
cmc
sub
add
(bad)
mov
cmps
add
inc
push
mov
jmp
mov
jne
pushf
xor
sub
add
inc
in
div
mov
stos
lahf
xchg
imul
imul
jmp
movs
jno
repnz
lea
and
fwait
gs
(bad)
lods
mov
pop
imul
lea
stc
loope
inc
scas
mov
inc
push
jecxz
jle
loop
cmp
mov
adc
jecxz
cmp
mov
mov
mov
jecxz
aad
xor
fbstp
mov
inc
test
arpl
arpl
xor
push
fimul
push
cwde
hlt
std
sub
xor
xchg
push
out
sahf
arpl
inc
fsub
popf
pushf
adc
xor
ror
shl
outs
aaa
pop
push
xchg
leave
scas
fisubr
jae
xor
std
xchg
dec
lahf
cmp
cld
and
inc
mov
sbb
pop
out
sbb
inc
into
jbe
into
adc
sahf
pop
xchg
aam
or
add
aam
inc
mov
shr
xchg
pop
mov
fstp
jae
fwait
ret
test
xchg
push
pop
sbb
cmp
mov
sub
add
and
fwait
sti
xchg
mov
add
icebp
jmp
pop
push
mov
or
iret
cmp
push
mov
(bad)
rcl
jg
jbe
repnz
jge
add
(bad)
out
sub
dec
mov
cmp
int3
mov
sti
fstp
mov
mov
sbb
cli
retfw
dec
jmp
add
scas
clc
dec
movs
sbb
outs
xchg
sbb
cmps
test
jbe
test
and
int3
inc
push
cli
pop
xor
je
or
in
pusha
push
imul
test
pop
mov
mov
ret
push
stos
xor
test
sar
mov
mov
jmp
push
push
fwait
xor
scas
imul
cmc
enter
mov
dec
arpl
xor
mov
mov
sbb
scas
jnp
mov
inc
mul
imul
out
pop
push
ss
or
mov
inc
xor
into
int
pop
(bad)
mov
dec
cmp
push
xchg
fistp
sbb
push
sub
adc
mov
pop
mov
in
xchg
jmp
cmp
out
mov
nop
enter
mov
loope
mov
jmp
jo
sub
test
jle
addr16
fstp
cmp
out
push
lds
retf
mov
pop
test
imul
test
in
lea
(bad)
mov
xor
jmp
movs
mov
mov
inc
(bad)
fisubr
call
ins
mov
fucomp
dec
fld
jg
lock
jg
lods
adc
imul
out
add
sar
xor
inc
ss
push
sar
int3
xor
(bad)
pop
xlat
dec
xor
les
dec
pop
jmp
out
cmps
or
pop
xor
push
lods
jb
out
repz
inc
dec
shl
or
arpl
aad
ret
loop
or
jns
mov
mov
push
inc
movs
xor
sbb
test
sub
mov
add
jo
push
mov
icebp
(bad)
in
es
mov
ins
(bad)
cmp
rol
xor
jb
and
daa
int
lods
test
enter
repz
jp
call
push
out
mov
out
fisubr
lods
scas
xor
movs
jmp
push
outs
mov
daa
and
mov
into
cmp
pop
and
inc
add
dec
lahf
lahf
es
add
jns
lahf
retf
jnp
ret
mov
jo
ret
cmp
aam
jmp
(bad)
cmp
gs
dec
lods
or
fsub
mov
push
lahf
push
ret
sbb
leave
test
lods
jns
shl
inc
outs
and
mov
sub
in
adc
pusha
push
bound
nop
scas
push
ins
sub
jnp
retf
(bad)
ficom
xor
xchg
lahf
inc
movs
inc
mov
js
jge
pushf
sar
out
call
test
cmc
jns
cmp
hlt
div
jmp
cmp
je
jecxz
data16
shl
or
mov
inc
stos
inc
fwait
stc
mov
repnz
pop
dec
xchg
mov
jae
call
fnstenv
jno
adc
test
ss
push
xor
sub
loop
ret
jg
ins
push
stos
lds
xchg
lahf
lahf
(bad)
mov
jmp
inc
mov
in
jb
jge
repz
cmps
psrlw
test
stos
mov
jp
jecxz
xchg
loopne
jae
arpl
cs
fimul
mov
pop
neg
mov
iret
movs
imul
fidiv
inc
fdiv
dec
pusha
(bad)
test
imul
cs
adc
push
rcl
push
jle
jnp
scas
arpl
outs
jne
in
popf
mov
mov
xchg
das
inc
jae
std
stc
pop
jmp
pop
imul
jno
sub
fwait
xchg
mov
or
cs
loopne
sbb
pusha
aas
inc
jge
test
adc
cld
push
inc
adc
xlat
popa
or
and
push
xchg
and
pop
aas
mov
cld
pop
(bad)
enter
xchg
call
popf
std
push
jmp
(bad)
jg
(bad)
sub
pop
test
outs
out
xchg
lock
add
pop
and
and
test
sub
mov
sti
xchg
test
pop
shr
enter
pop
fisttp
shl
xchg
jae
dec
pop
out
or
rep
sub
adc
jmp
mov
or
mov
imul
pop
add
mov
inc
call
inc
(bad)
repnz
xchg
jno
xor
add
test
sub
hlt
nop
jg
cmp
adc
(bad)
or
push
cmp
xchg
int
jle
into
push
fcmovnb
mov
and
mov
in
inc
sbb
stos
hlt
mov
xchg
fiadd
rcl
adc
repnz
(bad)
call
test
out
aad
cmp
adc
mov
call
ins
or
cmp
and
mov
shl
push
(bad)
pop
dec
jg
stos
add
sbb
cmp
adc
jb
dec
xchg
push
iret
jmp
xor
stos
jge
mov
dec
add
jp
out
pop
push
mov
inc
push
and
jnp
pop
xchg
mov
iret
in
js
ret
jp
xchg
clc
pop
movs
adc
rol
inc
jbe
sbb
push
mov
sbb
add
inc
je
mov
sub
mov
adc
cmps
rcl
scas
int
leave
aas
(bad)
test
push
inc
mov
adc
(bad)
sbb
xchg
daa
jbe
cmp
iret
cmp
cmp
mov
xchg
gs
adc
fidiv
mov
sahf
sar
in
pop
or
mov
(bad)
mov
rcl
setl
daa
sahf
dec
fist
inc
push
call
ja
int3
and
jmp
and
inc
and
mov
mov
loop
call
mov
es
jmp
jp
bound
loopne
divps
pop
mov
push
test
cli
dec
cmp
adc
pop
mov
loope
loopne
loope
cmc
jno
or
dec
pop
and
sub
repnz
pushf
stc
cmps
outs
push
ficomp
jle
dec
cmp
and
sub
dec
(bad)
and
and
mov
add
jp
adc
das
pop
mov
cmp
mov
sbb
cmps
ss
outs
add
cmp
test
imul
jecxz
dec
jae
ret
shl
jecxz
cmp
cmc
sub
mov
in
pusha
mov
xchg
test
ret
sub
stc
push
and
cmps
popf
popa
rol
and
or
fs
xor
bound
mov
leave
adc
xchg
sbb
mov
bound
sub
and
test
addr16
lods
xor
mov
not
cs
xchg
repz
gs
std
mov
pop
sub
mov
scas
arpl
push
aad
and
pop
mov
mov
int
shl
and
ficomp
mov
imul
dec
dec
add
loop
sbb
cmc
ja
jno
enter
nop
ins
sbb
lds
ins
adc
retf
(bad)
std
sub
sub
addr16
sbb
or
jne
push
add
jmp
rcl
push
mov
stc
ret
iret
aad
inc
mov
sbb
rcr
ficom
dec
(bad)
jo
aad
sub
xchg
pop
push
push
es
stc
in
leave
or
mov
or
pop
aaa
inc
movs
popf
inc
sub
(bad)
pop
rcl
pop
cmp
xchg
rol
lea
dec
nop
push
enter
(bad)
imul
js
setge
push
jne
push
xchg
xchg
hlt
mov
lods
jo
retf
mov
mov
inc
mov
pop
imul
pop
dec
xchg
pop
popa
dec
mov
pusha
lds
movs
and
push
and
fisttp
dec
and
mov
lahf
sar
xor
sbb
and
jge
popf
pop
cmp
int3
inc
push
pusha
fstp
pop
push
sbb
or
xor
daa
leave
jg
cmc
lea
mov
cmp
mov
and
or
dec
pushf
aaa
push
mov
push
xor
call
test
out
test
cmps
adc
push
sub
repnz
ja
add
add
test
retf
or
xlat
movs
faddp
hlt
cmp
jae
mov
mov
or
jb
stos
pop
ss
mov
pop
pop
dec
enter
sbb
sbb
xor
fistp
xor
lods
aas
sahf
adc
cdq
xor
fist
aaa
add
mov
cmp
aad
mov
retf
adc
jbe
jecxz
pop
adc
pop
push
rol
cmp
je
pop
xchg
or
mov
cmps
add
repnz
call
xchg
dec
sub
lods
fnstenv
cmps
out
hlt
and
cmc
and
lds
fcomi
popa
jne
ret
push
je
fisub
into
push
outs
pop
pop
les
out
icebp
mov
jns
mov
add
gs
sbb
and
cli
or
jle
push
ins
push
xchg
mov
mov
push
mov
es
xchg
mov
fldenv
test
push
push
jmp
push
hlt
dec
mov
mov
add
mov
sub
not
sbb
not
push
mov
aas
xor
stos
pop
retf
dec
in
jae
mov
dec
mov
jecxz
mov
and
cmp
stos
or
mov
int3
fiadd
cmp
ins
popa
pushf
inc
lods
(bad)
enter
scas
std
jl
jle
jnp
cmp
mov
mov
push
leave
cwde
test
fdiv
dec
nop
mov
aam
xlat
mov
ds
or
xchg
xor
aas
jo
mov
iret
aas
push
outs
push
pop
mov
xchg
xlat
and
stc
dec
sar
ret
idiv
and
jns
std
test
mov
sti
push
push
sbb
mov
pop
sbb
retf
inc
movs
xchg
lock
or
inc
and
sub
cmps
push
jg
popf
push
lock
cdq
and
enter
(bad)
jns
jo
cmp
stos
add
mov
or
(bad)
int3
cmp
jmp
xchg
mov
add
adc
cmc
pop
adc
movs
mov
inc
mov
cmps
inc
(bad)
loopne
or
sub
mov
mov
adc
jno
jmp
in
inc
out
jmp
mov
cmp
aad
push
rep
aad
daa
fisubr
hlt
test
and
das
data16
xor
pop
mov
lods
push
ds
scas
dec
or
mov
pop
sbb
pusha
scas
mov
add
cmp
or
add
push
data16
add
pop
call
adc
jo
in
mov
ja
adc
int
cs
pop
lahf
fistp
cwde
nop
mov
adc
add
ins
pushf
or
add
adc
test
das
sbb
popf
pop
imul
add
ins
xlat
cmp
imul
sub
cmp
xor
sbb
into
push
das
sub
cld
cmp
stos
sbb
int
leave
pushf
mov
mov
cmp
aad
outs
sbb
arpl
dec
lock
imul
jmp
mov
pop
pop
std
std
adc
sti
mov
push
jle
cmp
test
shr
dec
jb
imul
lahf
add
add
mov
jmp
int3
dec
mov
ss
inc
mov
fidiv
and
rol
ds
mov
mov
addr16
mov
mov
jmp
sub
and
jmp
push
push
das
ja
inc
xor
loop
push
popa
pop
cmp
xchg
pop
dec
jno
inc
fcomp
cmc
dec
shr
test
in
sub
shr
test
xor
repz
xor
test
push
sbb
mov
add
adc
ret
out
dec
jecxz
push
push
call
push
mov
cmps
sbb
cmp
push
in
pop
daa
xor
xchg
shl
mov
jge
jo
loopne
out
shl
xchg
imul
imul
inc
and
dec
sbb
xor
adc
(bad)
mov
inc
fstp
loopne
xchg
sub
test
pushf
and
stos
shl
or
ins
add
pop
mov
lea
clc
rcr
jle
cmp
test
sub
in
fidiv
leave
xchg
(bad)
cmp
retf
movs
dec
lea
pop
add
push
data16
pop
and
push
dec
fmul
int3
inc
int3
xchg
xlat
bound
adc
sbb
xor
dec
xchg
inc
jp
adc
enter
cmp
and
mov
add
imul
daa
cmp
jmp
stos
cmc
aad
(bad)
mov
pop
and
jge
mov
add
inc
pop
movs
stos
clc
ret
out
xlat
push
add
daa
jmp
shl
xchg
fimul
shr
pop
das
fisttp
dec
aas
jae
jbe
mov
scas
fnsave
adc
sub
dec
or
cli
int3
(bad)
sbb
dec
loopne
add
fadd
mov
in
(bad)
or
inc
cdq
(bad)
and
xchg
lds
or
pop
mov
fs
stos
outs
and
pop
add
jbe
lods
pop
mov
and
dec
mov
fild
sahf
pop
into
mov
test
in
dec
add
ja
mov
nop
repz
mov
std
(bad)
and
idiv
ins
push
imul
and
popf
xor
dec
sbb
inc
fwait
mov
(bad)
sti
cmp
and
dec
dec
mov
push
mov
cmp
adc
push
sbb
ins
add
push
dec
imul
add
int
inc
cmp
xor
aas
out
imul
cli
mov
add
push
sbb
call
add
ret
popa
inc
frstor
fxch
inc
out
les
add
mov
jae
in
xchg
shr
mov
ins
daa
and
add
cli
ds
in
inc
add
ins
mov
dec
add
data16
cmps
cs
les
fistp
imul
sbb
mov
pop
movs
call
cmc
mov
dec
mov
sar
sbb
es
icebp
test
pop
pop
fild
pop
mov
mov
mov
push
aam
int
test
jmp
pop
cld
adc
mul
adc
jecxz
jecxz
add
cmovle
pop
jg
push
pop
popf
scas
pop
test
push
into
push
(bad)
push
clc
movs
dec
stc
push
das
aaa
push
jp
popf
xchg
xchg
mov
jl
neg
jnp
push
add
arpl
das
xchg
stos
repnz
push
adc
mov
out
xchg
sbb
adc
stos
retf
(bad)
pop
jns
test
hlt
lea
hlt
out
sub
int3
inc
add
fistp
jmp
xchg
mov
clc
jo
sbb
into
es
add
sbb
lods
push
outs
movs
pop
sti
call
icebp
(bad)
and
push
outs
mov
and
and
lods
dec
sar
sub
div
aas
out
mov
retf
pop
mov
or
adc
mov
loopne
aam
lods
inc
jle
jo
pop
mov
pop
js
cmps
sti
push
pop
fidiv
es
jo
sbb
mov
hlt
xlat
adc
movs
or
retf
xor
iret
pop
xchg
xor
jb
rcr
out
data16
int
aas
sub
fidiv
xor
test
int
or
mov
ret
stc
pop
fucomi
jae
mov
xor
mov
pop
cld
lods
out
push
xchg
sbb
nop
adc
sub
enter
stc
popf
jns
inc
push
repnz
pop
cmp
aam
ja
rcr
add
repnz
push
pop
fmul
and
lahf
daa
mov
cwde
push
sub
sub
fs
repnz
fucomip
loop
mov
jb
(bad)
jne
mov
and
jns
xlat
mov
int3
add
lds
retf
stc
adc
jle
dec
or
inc
inc
fsubr
sub
mov
pop
and
sub
dec
nop
sub
stc
(bad)
stc
std
aaa
inc
mov
out
inc
dec
and
iret
clc
out
push
scas
mov
adc
rol
push
loop
nop
cmp
es
xor
test
daa
push
scas
dec
in
lahf
fistp
(bad)
push
xchg
scas
inc
in
mov
and
lahf
xchg
iret
dec
int
xor
arpl
add
leave
pop
subps
test
cdq
ins
fs
push
mov
ret
sbb
popa
sub
push
ret
push
mov
inc
ret
cdq
dec
mov
cmp
addr16
lods
rcr
or
cmp
sahf
inc
inc
push
xor
mov
sbb
fmul
cs
sbb
(bad)
fs
pop
jo
test
jg
mov
jg
aas
push
bnd
ins
add
into
sub
in
ins
xlat
outs
mov
push
pop
cmovbe
dec
ror
sub
je
cmp
(bad)
pop
sbb
sbb
dec
stos
cmp
iret
inc
inc
pop
(bad)
aad
(bad)
std
movs
pop
mov
xlat
xor
sti
push
fidivr
in
shl
cmp
pop
cmp
(bad)
jae
lea
(bad)
fdivr
retf
xor
shl
enter
pusha
push
pop
enter
add
xor
cmp
aam
pop
rcr
inc
cmp
jge
fwait
das
add
mov
sbb
(bad)
popf
xchg
or
jecxz
movs
xchg
(bad)
loop
ficom
jp
xor
cld
div
idiv
cdq
call
lods
sub
mov
lea
popa
or
mov
out
sbb
sbb
mov
inc
dec
xchg
push
or
pop
nop
repnz
int
scas
in
js
div
pop
(bad)
aam
loop
mov
imul
repnz
dec
mov
sub
mov
dec
push
loopne
arpl
dec
jg
addr16
mov
and
xor
shr
cmp
add
push
repnz
sbb
and
(bad)
cmps
or
mov
cmp
fisubr
int3
test
repz
cmp
push
imul
adc
mov
mov
cmps
xchg
fidivr
fiadd
stc
push
leave
into
adc
add
jo
mov
test
pop
loope
icebp
test
fwait
cmp
in
into
inc
call
ds
push
sbb
out
fist
int3
cld
int3
add
xchg
hlt
cmp
add
inc
dec
sahf
stos
mov
inc
add
fs
data16
push
add
xchg
repnz
jl
xchg
out
pop
lahf
xchg
jmp
cs
jge
dec
mov
scas
fs
fucom
add
cmp
bound
or
inc
es
or
ret
dec
stos
popa
cmp
mov
push
popf
and
jno
(bad)
mov
outs
mov
cld
stos
out
xchg
mov
inc
jmp
loope
sub
test
clc
(bad)
hlt
pop
xor
cmp
repz
les
mov
cmp
inc
stos
popf
aas
les
inc
sub
add
call
enter
(bad)
mov
rcr
data16
loope
test
adc
sahf
jge
cmc
mov
cmps
out
lock
pop
mov
shr
addr16
push
pop
jecxz
or
or
push
inc
cs
push
mov
add
jmp
mov
ins
imul
(bad)
push
popa
mov
xchg
popf
push
out
sahf
xor
test
jne
aas
inc
stos
mov
mov
fdivr
jno
fcom
(bad)
fwait
or
(bad)
test
push
pop
add
(bad)
popf
pop
cld
or
lods
cmp
cli
(bad)
push
ins
ins
mov
xchg
lock
or
and
cmp
or
adc
loope
fcomp
mov
sub
jge
xor
or
fcmovnb
sub
pop
add
add
outs
mov
js
and
pop
popf
mov
aaa
std
mov
aas
push
pop
lahf
test
aad
push
jge
mov
xlat
cs
push
add
stos
jg
movs
in
outs
jp
stos
jmp
mov
rcl
ins
xchg
stos
jb
aad
xor
add
out
inc
inc
push
addr16
ds
js
fwait
stc
outs
movs
mov
inc
cmps
in
sub
jge
sbb
je
arpl
js
and
mov
cdq
or
push
add
es
adc
lahf
fs
pop
mov
mov
ins
dec
stos
shr
pop
stc
outs
jge
xchg
sbb
fsub
pop
add
into
psllq
mov
or
ror
test
xor
add
xchg
mov
stc
pusha
mov
sub
mov
cmp
movs
js
fnstcw
aad
leave
push
loope
add
rol
(bad)
cli
jnp
ss
call
ins
repz
xlat
pop
cld
pushf
adc
test
inc
aas
pop
add
push
jnp
jg
jmp
cmp
sub
inc
js
pop
gs
cli
in
jo
push
(bad)
popa
js
and
lock
and
pusha
outs
(bad)
out
cld
not
add
int3
mov
push
push
mov
add
dec
mov
pop
and
add
adc
stos
rcr
mov
fistp
or
cmp
xlat
nop
xchg
fidiv
inc
adc
sbb
(bad)
fdivp
lock
cmp
or
cmp
retf
pop
push
fstp
xchg
mov
shl
scas
mov
mov
nop
ffreep
xchg
call
fist
stos
(bad)
lock
add
xchg
gs
mov
inc
add
je
inc
push
cmp
outs
mov
pop
xor
sbb
push
add
shl
cs
mov
cmp
mov
cwde
shl
lahf
mov
cmp
push
add
cmp
dec
stc
push
push
not
cmps
push
retf
mov
(bad)
icebp
int
adc
dec
call
ins
dec
lea
xchg
pusha
daa
or
mov
dec
outs
test
push
(bad)
es
mov
test
push
imul
retf
xchg
mov
or
test
pop
pop
daa
pop
cmp
or
daa
cmps
pop
int
xor
lea
and
push
sub
test
dec
sbb
das
imul
dec
mov
add
mov
mov
das
aas
movd
mov
cmp
sub
outs
sbb
daa
or
je
pop
ins
movs
stos
lahf
cmp
jo
sti
lea
sbb
lea
jne
dec
in
fdiv
(bad)
into
mov
imul
jg
fst
lahf
repnz
data16
pop
push
mov
push
sbb
mov
or
test
mov
mov
aas
inc
loop
fnstenv
push
arpl
dec
stos
sbb
fwait
push
aas
sbb
test
cdq
scas
cmp
and
out
fs
cli
aam
cwde
add
adc
in
shl
lock
mov
push
or
cmp
sbb
dec
ror
pop
xor
leave
pop
sar
sti
mov
out
pop
mov
ss
out
ins
popf
call
je
xor
push
jo
xchg
sub
in
xchg
mov
bound
imul
inc
mov
movs
mov
add
aad
test
daa
mov
movs
push
lods
dec
lea
popf
jb
xchg
mov
sbb
mov
dec
sbb
cmp
xor
mov
fdivr
push
iret
pop
pop
popa
div
sbb
jno
pop
scas
(bad)
sub
jb
add
icebp
and
ss
outs
mov
sub
dec
push
sub
or
inc
movs
jo
push
dec
fbld
adc
fnstcw
icebp
pop
imul
cdq
cmc
test
loopne
rol
ins
sbb
cld
mov
sti
rcl
test
dec
adc
fbld
lea
sbb
lods
das
mov
jne
xchg
test
mov
clc
jmp
ins
cmp
or
in
arpl
adc
push
gs
dec
mov
adc
outs
ja
pop
lods
das
pop
mov
fdivr
xor
push
enter
pop
dec
or
inc
outs
aas
das
mov
xor
or
iret
call
and
jb
cmc
cld
fnsave
inc
pushf
mov
(bad)
or
test
pop
lods
push
sub
push
inc
test
std
sbb
xchg
js
fdivrp
dec
adc
push
adc
xor
jb
not
cld
aad
in
mov
ss
out
pop
les
aad
xchg
lahf
add
push
mov
mov
mov
cmp
dec
int3
xchg
dec
mov
test
aas
cmc
cwde
pop
sbb
dec
seta
cs
dec
jl
movs
test
aaa
cmp
mov
fdivr
xchg
and
push
pop
pop
or
mov
popa
mov
and
aad
bnd
dec
xchg
and
cdq
or
and
dec
int
jmp
das
adc
outs
dec
cwde
jecxz
outs
xor
sar
aad
iret
out
aam
pop
hlt
pop
ja
in
in
data16
test
popa
xchg
out
(bad)
mov
aaa
push
movs
mov
sub
adc
lds
xor
lock
repz
inc
fadd
fistp
sbb
fsub
add
lods
mov
mov
scas
jg
pop
aas
pushf
mov
mov
and
mov
mov
mov
xchg
push
call
call
sbb
lea
xchg
inc
test
adc
shr
add
stc
sbb
pop
mov
cld
or
movs
fs
cli
pushf
pop
lahf
fucomi
shr
dec
out
jb
nop
cmp
popa
in
ret
mov
jne
icebp
or
aas
dec
sub
jmp
cmp
std
addr16
es
cmc
aam
sbb
sbb
(bad)
mov
into
popf
mov
xchg
sub
xor
jae
adc
cmps
iret
sub
(bad)
or
test
xlat
inc
mov
popa
mov
mov
mov
in
and
add
scas
jnp
xor
inc
mov
outs
mov
xlat
test
mov
jno
xchg
cli
dec
cmp
inc
and
xor
popa
jne
sar
stc
cs
test
loop
adc
mov
jl
bound
outs
mov
cmp
ins
iret
mov
mov
cs
hlt
out
aas
mov
popa
pop
call
jne
xchg
or
sahf
int
movs
mov
jb
push
xchg
lods
pop
pop
(bad)
stc
xchg
push
push
ficomp
inc
or
int
dec
das
(bad)
iret
sti
xor
addr16
(bad)
jb
dec
pop
in
int3
adc
add
scas
xchg
test
call
pusha
jp
leave
aaa
or
dec
pop
shl
jnp
sbb
push
mov
les
dec
adc
lods
retf
sub
mov
ror
and
inc
cmp
iret
mov
jle
data16
mov
mov
or
lds
movs
aaa
xchg
nop
sbb
fnstcw
fsubr
dec
cmp
inc
pop
or
je
ja
dec
ins
shl
dec
adc
(bad)
adc
(bad)
or
inc
lods
js
mov
in
mov
mov
int3
mov
xor
or
out
cld
imul
adc
cmc
iret
call
(bad)
daa
nop
cmps
mov
and
gs
mov
stos
sub
pop
or
mov
addr16
lods
fldcw
mov
pop
adc
movs
pusha
xchg
les
mov
rol
gs
push
fst
push
fild
stos
cld
add
(bad)
adc
jmp
push
cs
call
cmc
imul
into
inc
xor
jb
clc
ja
cmp
fsub
xchg
push
xor
push
addr16
(bad)
das
inc
neg
xor
or
fsub
int
mov
inc
arpl
arpl
xchg
dec
inc
add
imul
xchg
xchg
sti
push
adc
or
and
pop
loop
pop
jecxz
add
ins
push
popa
ds
pop
xchg
daa
imul
or
xchg
xor
in
xor
data16
addr16
leave
ret
or
push
jl
cli
push
push
(bad)
xor
dec
mov
jge
dec
xchg
sub
(bad)
fbstp
mov
pop
pop
in
push
cs
push
xchg
scas
add
pusha
in
pushf
and
and
jg
and
dec
xchg
sbb
in
add
mov
add
cmc
call
xlat
lock
push
or
jne
outs
mov
inc
cli
cdq
push
pop
inc
and
icebp
ret
fistp
shl
or
jge
aam
xor
movs
arpl
sub
vcvtps2pd
jnp
fiadd
pop
push
out
icebp
enter
fst
ror
dec
xchg
neg
mov
aad
adc
in
scas
pusha
bound
inc
jecxz
sub
mov
inc
cmp
mov
jle
sbb
test
jo
sbb
xchg
mov
xor
jb
mov
pop
fwait
sub
cmps
scas
loope
jp
mov
mov
cmp
mov
adc
vpminsw
or
mov
mul
adc
adc
das
add
xor
and
ss
xor
sahf
sbb
xchg
mov
adc
out
out
out
jnp
mov
xlat
push
push
je
pop
jbe
das
push
aad
pop
sub
cmc
gs
mov
jmp
pop
clc
fld
push
sbb
ss
aad
fsubr
je
inc
inc
jns
jmp
imul
sub
xor
imul
inc
nop
cmps
sbb
hlt
push
jb
outs
push
test
xchg
mov
dec
or
jmp
cmp
or
xlat
inc
cmps
dec
ret
fincstp
inc
xchg
test
cmp
stos
mov
dec
mov
imul
(bad)
cmp
xor
jno
iret
mov
bound
mov
fsub
or
aaa
xchg
out
push
iret
or
jbe
and
lods
cmp
and
mov
les
and
jmp
mov
cmp
cmp
push
fadd
std
add
mov
rep
clc
xchg
push
push
std
mov
sub
and
mov
pop
je
xchg
out
ins
jg
jo
arpl
push
sub
loope
inc
call
sub
das
dec
jp
push
xchg
inc
xchg
or
xchg
pop
jecxz
(bad)
in
fidivr
cmp
dec
lds
fiadd
mov
jge
mov
test
push
xor
into
stc
dec
sub
les
fwait
test
mov
xchg
(bad)
xchg
add
lock
inc
or
sub
(bad)
mov
sar
retf
add
push
jl
xor
push
dec
cmc
(bad)
(bad)
clc
jne
arpl
lock
(bad)
scas
push
or
neg
mov
jg
dec
pushf
es
in
fstp
pop
std
push
in
retf
(bad)
or
xlat
js
jb
out
jl
mov
(bad)
mov
fisttp
mov
icebp
mov
add
jns
(bad)
and
xor
sub
in
loope
mov
(bad)
cld
icebp
sbb
add
fs
in
xor
adc
scas
imul
int3
xchg
and
(bad)
sub
in
lahf
pop
test
inc
aaa
mov
cmp
push
or
int
adc
into
jne
cmp
fwait
cli
jns
xor
pop
mov
mov
cmp
lods
inc
push
push
loope
mov
and
push
lea
imul
aam
mov
dec
pop
push
pop
cmps
adc
sbb
push
sbb
xchg
push
fist
and
jge
std
push
in
inc
cmp
ror
xchg
jl
jne
in
cmp
adc
xchg
dec
or
mov
outs
xchg
cmp
cli
cmc
ret
mov
mov
or
retf
mov
es
adc
cmp
enter
pushf
lahf
mov
dec
and
push
dec
mov
adc
mov
cmp
mov
imul
addr16
mov
pop
sbb
int3
imul
push
push
sbb
(bad)
dec
xor
xchg
add
popa
and
test
enter
mov
mov
pop
jle
loop
or
pushf
cmc
pop
aad
jb
rcr
mov
out
and
mov
sub
dec
jg
jge
nop
sub
push
add
shr
loopne
mov
mov
mov
mov
cmps
ret
dec
sbb
mov
dec
mov
repz
dec
xchg
or
jne
xor
mov
pop
cmps
iret
nop
xor
cmp
dec
cld
add
int
dec
sbb
loopne
cmp
cwde
mov
fdiv
jno
cld
les
cmp
pop
lods
das
inc
pushf
(bad)
into
mov
cmp
jecxz
loopne
mov
cmc
test
cmps
inc
push
sub
out
inc
sbb
mov
imul
mov
push
sbb
pop
mov
jg
or
jmp
in
xlat
mov
sahf
je
xor
jbe
cmc
push
or
add
stos
dec
mov
icebp
aad
pusha
popa
push
cmc
ficomp
adc
mov
scas
push
push
jo
out
lods
(bad)
sbb
pusha
pusha
xchg
push
mov
imul
test
or
dec
(bad)
sub
retf
add
and
and
xchg
std
mov
push
adc
pop
jo
push
push
sbb
cmp
inc
sbb
pusha
xlat
out
lea
addr16
xchg
jmp
stos
lea
mov
xor
cs
or
outs
stos
cmp
jmp
jns
lahf
(bad)
imul
xlat
(bad)
aas
fistp
jbe
gs
pop
xchg
daa
test
dec
xor
jl
adc
xchg
jg
add
(bad)
cli
out
pop
outs
ins
into
pop
mov
fadd
into
rol
movs
cld
xor
stos
das
jnp
inc
fwait
adc
cmp
or
jnp
and
mov
pop
outs
(bad)
pop
or
int3
push
push
add
ja
dec
pop
sub
mov
je
jmp
adc
outs
adc
adc
push
sti
sub
pop
mov
(bad)
dec
ja
cld
sub
sbb
cwde
pop
fiadd
ficomp
xchg
je
push
cdq
and
mov
test
test
xchg
daa
mov
mov
mov
jl
xor
push
adc
pop
xor
enter
in
push
pop
push
repnz
test
adc
fmul
cmp
outs
mov
stos
(bad)
repz
aaa
ins
or
dec
push
xor
dec
mov
push
(bad)
rcr
iret
push
shl
push
je
sub
shl
sbb
js
dec
popf
inc
mov
rcr
aam
or
lock
repz
jl
mov
jo
imul
cmp
js
arpl
lahf
push
stc
pop
test
lahf
mov
or
test
(bad)
mov
fs
ins
(bad)
dec
scas
gs
(bad)
addr16
sub
sub
jg
inc
or
(bad)
std
ds
popa
xchg
xchg
fistp
add
fcomi
mov
(bad)
sbb
jg
dec
rcr
addr16
jmp
push
or
fucomip
out
dec
call
div
popa
mov
jb
addr16
in
push
add
ret
shr
popa
lods
fwait
or
jmp
push
loop
ja
stc
jne
mov
fldcw
pop
gs
push
movmskps
gs
jle
push
inc
lods
aas
mov
stos
and
int3
dec
mov
stc
cmp
movs
mov
jne
cmp
call
jecxz
nop
daa
lock
(bad)
mov
sbb
cli
push
dec
jmp
dec
push
je
fwait
mov
jge
out
nop
jl
mov
xor
(bad)
rcr
xchg
imul
in
jo
scas
in
pop
jne
jmp
cwde
rcl
aaa
and
adc
mov
bound
mov
data16
lods
inc
sub
loope
pop
in
rep
cs
xchg
adc
push
loope
xchg
fcomp
out
sbb
cmp
pop
cli
rcr
jecxz
inc
fcom
pop
push
les
fnstsw
sub
das
cdq
js
(bad)
push
xor
pop
push
xchg
jmp
das
xor
cmps
hlt
pop
pushf
jae
nop
iret
bound
add
test
mov
jp
push
aam
mov
fsubr
mov
xor
scas
dec
or
xchg
mov
pop
(bad)
mov
jno
mov
mov
ror
inc
cmps
mov
pop
ret
xchg
and
cli
mov
jecxz
inc
js
sbb
sub
sbb
out
inc
ficomp
out
mov
or
fcomi
mov
dec
sub
xlat
adc
inc
inc
(bad)
std
xor
test
cmc
push
scas
cmps
adc
ror
sub
(bad)
and
jae
inc
mov
mov
daa
jne
ret
adc
and
and
xchg
mov
mov
sti
lock
ins
stos
push
mov
xor
lds
icebp
jp
retf
out
and
xchg
add
ss
sub
and
mov
inc
or
jne
(bad)
fstp
xor
sti
out
repnz
jb
dec
sbb
fisub
adc
stos
adc
sbb
jne
add
mov
std
es
scas
pop
and
dec
(bad)
jl
call
enter
dec
push
mov
cmps
shl
mov
shl
movs
imul
sti
call
sub
cwde
cmp
pop
adc
adc
sub
sbb
jmp
les
iret
loope
push
fsubr
das
mov
pushf
push
cmp
test
stos
in
xor
xor
xchg
jbe
fmul
xor
xor
shl
std
or
jge
aas
dec
xor
popf
(bad)
fisttp
jae
je
cld
addr16
sbb
movs
hlt
sub
jb
stos
call
sti
add
jmp
nop
inc
ror
jge
inc
mov
stos
mov
push
jle
ss
loope
push
push
push
pop
js
cmps
inc
xchg
in
adc
imul
xor
mov
repnz
js
xchg
pop
add
sub
mov
pop
(bad)
out
(bad)
push
sub
push
mov
ret
push
xchg
out
and
std
stos
xor
push
popf
outs
or
enter
(bad)
adc
bound
jno
cwde
pop
inc
cwde
scas
push
test
sbb
ret
(bad)
movs
das
or
jae
cmp
adc
mov
and
out
pop
call
pop
fs
mov
ja
sar
cwde
xchg
jp
or
push
nop
sahf
or
pusha
xor
jmp
push
repnz
sbb
ds
pop
ds
mov
fwait
fwait
ja
sub
sub
xchg
dec
pop
in
add
pop
mov
mov
aam
mov
cli
and
loopne
enter
outs
jge
push
cmp
loope
dec
test
push
lea
movs
in
cdq
push
sbb
(bad)
int3
nop
clc
adc
push
mov
adc
push
test
cmp
push
bound
das
leave
jg
mov
(bad)
push
loop
jmp
xchg
mov
push
stos
cli
repnz
jg
jl
pop
inc
cmp
mov
mov
in
das
xor
jb
xlat
lods
or
mov
repnz
mov
hlt
push
fs
or
je
je
jae
rcr
cmp
jo
push
ficomp
in
call
(bad)
fnstcw
xor
test
mov
and
outs
dec
rcr
inc
sbb
js
mov
pop
or
adc
sar
push
mov
rcl
jbe
loope
jns
pushf
enter
mov
add
dec
faddp
(bad)
test
call
cmps
in
mov
jb
das
xor
mov
sbb
jns
sti
mov
ds
cmps
bnd
ss
sub
xor
cli
push
popf
neg
xor
mov
push
and
xor
sub
xchg
push
inc
xchg
or
mov
loope
xor
icebp
repnz
mov
push
push
mov
test
xchg
add
jb
out
jle
sar
mov
ret
mov
movs
(bad)
mov
jl
mov
push
pushf
cwde
leave
fbld
scas
push
jb
fild
call
push
add
mov
lods
repnz
das
scas
mov
stc
sub
imul
adc
imul
fist
push
lea
push
inc
fs
or
sub
mov
add
mov
int3
jbe
popf
dec
inc
mov
add
in
pop
(bad)
fidiv
leave
mov
shl
and
inc
gs
jne
sub
dec
(bad)
xor
cdq
lahf
mov
sbb
mov
popa
(bad)
lahf
sub
call
push
movs
push
shl
aas
and
mov
pop
or
pushf
jb
loope
fcomp
jge
jo
fs
aam
mov
and
(bad)
inc
fdiv
out
jge
and
clc
outs
jl
clc
jmp
aaa
jmp
sub
xlat
push
cmc
pop
mov
add
ficomp
jmp
sbb
xor
mov
xchg
xor
mul
xchg
out
add
sti
lods
retf
pop
push
clc
cmp
pop
shl
xchg
mov
rcr
jge
sub
xor
cmps
(bad)
(bad)
out
(bad)
fist
bound
sbb
lds
jae
mov
push
lea
mov
or
sbb
scas
and
sbb
or
out
mov
cmps
fiadd
push
sub
push
cmp
lods
sti
das
inc
pushf
mov
xor
jb
mov
fldenv
ret
arpl
cmc
cmp
cmp
sbb
icebp
mov
mov
xor
ins
hlt
cmp
add
std
(bad)
cmp
iret
xor
add
push
or
push
test
imul
add
aad
call
mov
push
and
fisub
mov
ins
retf
popf
sti
push
(bad)
dec
push
sub
xor
cmc
cmp
test
cwde
add
cmps
retf
(bad)
jne
fistp
sub
test
pop
and
jmp
jns
cmp
sub
test
xor
adc
pop
and
or
in
cld
mov
jp
xchg
call
icebp
data16
jnp
gs
mov
xchg
pop
add
push
mov
adc
inc
adc
pushf
jecxz
lds
jmp
popf
mov
es
rol
(bad)
inc
in
ds
daa
rol
xlat
xchg
sub
jecxz
adc
pop
dec
sbb
jb
pop
jmp
pop
inc
push
or
mov
test
test
fisubr
mov
aas
or
leave
bextr
push
pop
dec
push
ficomp
xlat
cmp
shl
bndstx
cmps
sbb
(bad)
cmc
dec
cmp
sub
push
iret
(bad)
les
dec
aas
shl
clc
(bad)
pop
jl
inc
cmps
or
cmp
pop
pop
loope
sub
push
and
xchg
pop
jmp
xchg
jns
arpl
push
sti
jns
mov
aaa
mov
push
sbb
lock
mov
or
call
and
dec
fwait
stos
and
mov
and
out
mov
inc
mov
push
dec
push
xchg
int
sbb
mov
cs
xchg
push
sbb
sub
das
inc
xor
push
lods
scas
fld
mov
xchg
mov
mov
test
inc
xor
xchg
aas
arpl
test
cmps
int
mov
mov
repnz
ret
inc
cld
fistp
inc
in
and
es
cmc
movs
jg
psubusw
add
sub
jg
jmp
push
jecxz
test
jl
xlat
outs
mov
jp
push
mov
push
dec
les
mov
add
shl
xchg
pop
jmp
xchg
lea
mov
lds
int3
aaa
mov
ret
jle
ret
dec
cmp
or
xchg
add
mov
rcl
xchg
mov
les
arpl
mov
pop
pop
repnz
popf
and
bound
mov
sti
sub
xchg
or
jnp
and
sub
sbb
sbb
and
or
push
add
dec
stos
jmp
daa
hlt
rcr
test
pop
aaa
movs
ds
test
lahf
cmp
cwde
mov
sub
stos
outs
or
mov
fsub
push
adc
mov
push
fstp
je
push
mov
std
cdq
vmovdqu32
mov
adc
(bad)
adc
(bad)
fmul
in
test
jge
adc
inc
(bad)
cld
out
es
retf
shl
dec
data16
pop
or
mov
rcr
sar
scas
add
test
or
sub
pop
inc
mov
mov
or
(bad)
inc
or
jo
(bad)
out
loope
test
das
adc
jb
jns
adc
pop
push
outs
jge
imul
or
mov
jae
fisubr
fs
imul
jmp
xchg
inc
mov
or
xor
add
repnz
mov
mov
xchg
aad
or
icebp
hlt
jmp
add
pop
movs
dec
std
mov
(bad)
mov
or
mov
fcmovne
add
push
cdq
jg
test
out
and
add
fisubr
mov
mov
add
xor
call
mov
and
call
lds
sahf
ror
jp
test
cld
jge
or
rol
mov
cld
data16
cmp
jmp
imul
mov
mov
mov
push
adc
cli
pop
ss
lds
mov
mov
clc
push
xor
scas
xchg
adc
sbb
inc
xchg
retf
cli
sub
sbb
mov
jae
scas
retf
push
mov
mov
pushf
inc
cs
mov
sub
xor
jge
iret
jno
cli
cmp
or
cdq
gs
shl
movs
mov
aad
div
(bad)
lahf
into
jo
xchg
cmp
int
mov
leave
jbe
adc
ss
xor
mov
push
(bad)
fistp
out
pop
ins
outs
xor
cmp
rcl
push
xor
rcl
add
inc
or
dec
adc
push
or
iret
inc
sbb
jno
cmp
cmp
rol
cmp
nop
addr16
xor
sbb
or
stc
icebp
js
mov
add
shl
les
sti
mov
adc
daa
ins
and
fsub
jb
cmp
add
fnsave
xchg
aam
mov
add
and
xor
xor
ins
dec
ins
push
dec
(bad)
das
cdq
shl
and
add
outs
ds
sub
jmp
mov
push
mov
movs
sbb
and
jge
shr
adc
and
lods
mov
sub
mov
out
pop
movs
ret
jno
dec
shl
dec
and
test
dec
mov
ret
and
in
sbb
push
fild
sub
mov
xchg
mov
mov
pusha
cmps
es
mov
xor
and
cmp
cmps
pop
mov
popa
leave
lods
or
push
jmp
fdiv
test
fistp
mov
mov
sub
xchg
mov
aas
movs
pop
sar
lods
xor
mov
or
mov
icebp
and
call
sub
movs
in
mov
cli
int3
mov
loop
mov
mov
inc
xor
jecxz
mov
mov
int
cmp
retf
jb
jle
into
add
sbb
and
ret
pusha
lahf
std
mov
sbb
scas
mov
xchg
fadd
jmp
and
mov
sbb
in
or
shl
aaa
fs
mov
push
push
jb
ret
lea
frstor
dec
movs
jmp
shl
sbb
(bad)
and
ret
jno
xchg
mov
pop
js
pop
jle
mov
mov
call
adc
xor
call
out
mov
fcomp
popa
xchg
jb
fwait
jnp
hlt
jae
push
push
xchg
sub
mov
data16
rol
clc
popf
popf
xlat
add
in
std
cs
pop
adc
addr16
call
or
push
sbb
pop
xchg
and
pop
pushf
mov
cmp
pushf
xor
das
push
sahf
out
scas
lds
fmul
add
mov
data16
leave
fdivr
xchg
pop
mov
fld
pop
sub
lock
mov
adc
in
pop
(bad)
mov
jmp
or
fwait
inc
fisub
movs
dec
add
ds
fcom
fadd
xchg
add
push
add
scas
push
mov
test
fnstsw
dec
(bad)
call
cwde
cs
in
xor
pop
cmp
rcr
add
push
jle
jge
push
and
dec
mov
std
mov
mov
mov
push
add
mov
mov
sub
popf
jmp
and
cmp
push
push
cmp
push
xchg
ja
je
xor
rol
ror
dec
push
jl
loop
push
stc
mov
sub
popf
inc
cld
dec
js
or
or
xchg
push
(bad)
jns
inc
ins
pop
xor
mov
jp
aas
xor
jo
push
dec
call
mov
mov
dec
mov
jl
popf
dec
ins
xchg
xor
add
pop
rol
repz
ins
adc
sahf
test
pusha
pop
call
lock
sub
mov
test
add
cld
mov
jo
aaa
ficom
sbb
mov
sub
sti
pop
test
or
pushf
cmps
push
pop
ret
mov
repz
inc
and
popf
or
iret
jno
or
adc
call
mov
loop
dec
call
jmp
push
lock
dec
push
jae
jnp
jnp
dec
jp
xchg
ret
ins
jmp
push
addr16
lock
cmp
sub
xchg
and
ss
std
pop
mov
sub
xchg
je
ret
add
(bad)
sar
icebp
test
stos
jnp
ins
jno
fstp
fs
lea
pushf
sub
nop
fcmovnu
and
mov
mov
jo
jbe
in
pop
mov
pop
jmp
mov
addr16
mov
pop
dec
pop
mov
add
ins
jno
jle
stos
stc
cmps
arpl
pop
push
lods
cmp
adc
pusha
mov
mov
shr
lock
pop
xlat
cmp
xchg
mov
jo
hlt
and
xchg
ss
lahf
jns
pop
mov
push
add
daa
popf
movs
push
mov
push
add
bnd
mov
inc
jbe
push
out
(bad)
dec
add
imul
icebp
pop
(bad)
pop
ds
aad
push
rcl
and
push
aas
add
mov
jmp
xor
outs
retf
push
ins
xor
jge
(bad)
out
jl
push
mov
add
pop
sub
push
xchg
adc
add
pop
iret
mov
aam
popa
pop
xor
stos
in
xor
bound
test
in
dec
mov
js
movs
mov
lahf
mov
pop
pop
outs
int3
sub
scas
pop
sub
fcomp
dec
cmp
sbb
mov
movs
loop
jo
jb
call
mov
fistp
xor
xchg
jnp
ficom
stc
push
les
pushf
and
lds
fwait
mov
adc
cmp
fs
popa
mov
outs
sbb
xchg
test
daa
sbb
test
nop
or
push
mov
stos
nop
(bad)
(bad)
in
adc
outs
sbb
cdq
dec
mov
or
mov
inc
mov
mov
call
daa
pop
ds
jmp
sbb
pop
das
sbb
je
icebp
pusha
mov
cmp
pushf
movsx
jne
clc
sbb
nop
fstp
adc
loope
sub
fst
and
push
jbe
hlt
jecxz
cs
adc
xchg
jo
add
xor
leave
scas
push
xchg
pop
sub
xchg
int
or
or
xor
dec
fcmove
dec
jp
dec
xlat
mov
arpl
jb
daa
inc
int
call
inc
mov
xchg
lahf
push
pop
aad
add
icebp
mov
jl
call
mov
leave
cwde
scas
test
sar
loopne
out
in
mov
inc
jmp
mov
mov
call
sbb
xor
push
pop
cmps
test
xchg
mov
mov
aam
rol
add
(bad)
jl
push
dec
or
push
jp
dec
mov
mov
push
push
mov
jp
push
movs
in
dec
sbb
jmp
mov
cmps
cdq
loopne
jae
mov
call
or
adc
xchg
dec
mov
div
xor
or
and
jmp
push
sbb
sub
icebp
mov
mov
mov
inc
arpl
inc
cmp
movs
cwde
cmp
xchg
jns
jmp
dec
dec
(bad)
stc
dec
jns
mov
sub
mov
ja
inc
lahf
or
test
cdq
mov
ins
clc
movs
xchg
gs
(bad)
jb
mov
cmp
inc
pop
dec
lock
rcr
jecxz
jns
lds
and
inc
ficomp
addr16
sub
xchg
(bad)
aaa
xor
xor
mov
nop
mov
loope
sub
ss
dec
xor
fsubr
inc
jmp
aaa
pop
add
sub
in
stc
aas
cmp
jl
sub
adc
ror
sbb
adc
cmp
sbb
add
jnp
sub
shl
jae
jmp
ss
mov
push
jmp
jmp
pop
push
js
mov
movs
sbb
cmp
mov
xchg
sub
pop
aam
gs
fdivr
lock
push
or
mov
add
imul
ss
data16
jmp
(bad)
adc
or
mov
pop
sub
js
xor
dec
add
test
add
sbb
cmp
add
fadd
mov
out
mov
push
les
jmp
fcomi
dec
push
jae
gs
xchg
out
sub
sbb
stc
fcom
cwde
dec
jmp
xchg
inc
cmp
mov
jg
push
inc
arpl
sub
pop
mov
mov
sbb
xchg
arpl
push
cmp
push
in
jb
fmul
mov
stos
fisub
sbb
or
push
jecxz
jmp
(bad)
or
xchg
loope
xor
in
mov
imul
xor
sub
mov
fist
sub
jae
fsubr
out
div
ret
sub
out
sub
mov
popa
(bad)
xchg
lds
enter
sbb
jne
int3
jnp
jge
xchg
clc
ds
mov
dec
jle
or
add
loope
or
jb
out
int3
inc
sbb
stos
xor
stc
mov
dec
or
pop
jg
xor
aas
fistp
call
sub
adc
daa
push
xchg
pop
xor
fcmovnbe
gs
push
loope
nop
cmps
pop
mov
adc
mov
sbb
in
(bad)
sbb
daa
fcom
or
retf
xchg
fiadd
adc
repnz
cmp
push
fimul
inc
mov
jnp
fs
pop
scas
es
jecxz
inc
push
movs
jmp
mov
pusha
fadd
inc
stos
jno
mov
enter
mov
sbb
hlt
and
mov
xor
outs
bound
push
cmp
dec
outs
mov
xchg
scas
mov
and
mov
inc
ins
xor
adc
push
or
and
adc
pop
push
ins
movs
mov
jmp
inc
sbb
add
sub
mov
fidivr
arpl
dec
inc
je
ss
and
and
rcl
xchg
movs
int
pop
jl
or
xor
add
xlat
xchg
fidivr
pop
mov
scas
std
test
mov
iret
div
xchg
and
inc
daa
(bad)
aam
sbb
arpl
aam
aam
in
in
dec
and
je
inc
std
sbb
outs
lock
ja
inc
add
jmp
dec
mov
dec
cmps
cmp
hlt
and
dec
fs
xlat
into
sub
xor
out
in
jp
(bad)
ds
fst
mov
stos
mov
pop
jmp
imul
sub
dec
mov
cmp
leave
push
dec
mov
addr16
inc
mov
add
mov
test
push
xchg
int3
cmps
test
(bad)
and
mov
xor
xor
push
dec
cmp
imul
cmp
cmp
clc
(bad)
ror
bound
mov
inc
jle
mov
mov
ins
cld
icebp
cli
fcom
push
data16
xor
or
inc
outs
les
xchg
mov
loopne
ins
fistp
jae
push
retf
add
inc
and
fldl2t
push
call
jp
test
ret
ds
(bad)
add
mov
jge
sub
call
mov
ins
clc
xchg
in
shl
push
fimul
push
stc
mov
loopne
ins
aas
bound
lock
and
cdq
inc
in
outs
mov
mov
mov
addr16
pop
int3
dec
lds
test
lods
push
jp
jo
mov
pop
mov
sbb
sub
aas
and
out
mov
mov
mov
(bad)
hlt
cld
jae
retf
popf
icebp
lds
mov
dec
js
mov
cmps
rcl
repnz
rol
push
jl
inc
xchg
push
retf
(bad)
dec
jbe
cmp
adc
mov
je
add
sti
sbb
fsubr
pop
push
fist
ffree
jo
fnstenv
adc
scas
nop
adc
xchg
sbb
sbb
mov
sub
jbe
jne
stos
push
movs
imul
(bad)
and
ins
ret
jle
jl
add
es
divps
out
(bad)
(bad)
jp
add
xchg
jo
xchg
push
ins
xor
out
cmp
les
fsub
bound
mov
mov
inc
xchg
sar
popf
paddusb
ror
inc
ins
shl
out
jp
sbb
push
clc
xchg
cmp
mov
lds
xchg
test
pop
sbb
cwde
or
movd
popf
add
mov
cmp
call
je
adc
push
out
jmp
xor
dec
in
test
push
pusha
addr16
xor
pop
out
lods
loopne
push
push
mov
mov
cmp
jnp
or
test
ss
aad
std
into
mov
out
inc
je
jecxz
data16
sbb
mov
or
jo
xchg
dec
cmps
adc
sbb
or
pop
js
loopne
cmps
(bad)
xchg
icebp
sar
mov
std
push
add
push
cmovne
adc
mov
ja
mov
out
pop
mov
inc
mov
mov
loop
or
aad
jle
jg
mov
in
jnp
test
fild
cmp
jmp
dec
adc
or
sub
mov
xchg
dec
cwde
int
into
and
not
mov
je
mov
out
add
xlat
mov
loope
pop
movs
mov
fisttp
sbb
jnp
dec
inc
loopne
mov
ins
lods
add
or
mov
outs
sub
cld
xchg
ins
inc
mov
add
sub
mov
std
lods
mov
adc
and
daa
popa
dec
test
add
test
mov
ss
push
mov
shl
movs
push
retf
inc
mov
and
jp
push
push
add
mov
push
stos
jnp
inc
int
in
rcl
pop
inc
push
stos
xor
inc
pop
pop
mov
rcl
xchg
mov
jns
out
dec
inc
icebp
pop
mov
movs
xor
push
mov
sbb
ret
push
aad
sub
add
out
xchg
clc
fimul
mov
scas
(bad)
xchg
and
movs
(bad)
mov
icebp
sbb
ins
or
adc
sar
mov
add
mov
and
addr16
or
test
(bad)
xchg
repz
pop
scas
in
pop
pop
xchg
jg
jae
add
enter
jne
mov
dec
push
adc
xor
push
push
pop
pop
xor
xlat
fdivr
pop
stos
push
sbb
dec
pop
retf
mov
push
movs
xchg
and
inc
cmp
mov
mov
and
addr16
(bad)
cmp
pop
enter
sahf
dec
cmp
push
mov
and
add
pushf
mov
in
xor
push
inc
pop
mov
or
xor
aam
push
dec
sahf
or
add
dec
idiv
arpl
cmps
in
imul
(bad)
sub
hlt
sbb
mov
or
add
and
fnsetpm(287
mov
add
enter
jg
inc
xor
xchg
or
scas
popf
jbe
out
sbb
rcr
inc
push
out
sbb
and
sbb
test
shr
adc
add
pop
inc
movs
bound
adc
cmp
das
lods
xchg
jae
mov
(bad)
cmp
aam
jno
xor
push
mov
pop
mov
and
jno
mov
cmc
not
adc
loop
and
and
fstp
adc
test
cmp
out
sti
and
sbb
ror
rol
cmp
xchg
(bad)
sbb
xor
clc
xor
dec
xchg
or
ja
lods
addr16
retf
dec
adc
mov
int
in
out
jns
xlat
add
dec
mov
pop
pop
out
jl
sub
(bad)
fnstsw
shr
and
adc
mov
loopne
sbb
push
cmp
es
xchg
imul
inc
mov
xchg
mov
inc
dec
push
out
jne
out
fdivr
ficomp
xor
xor
inc
mov
out
cwde
sub
ret
jecxz
jnp
xor
sbb
dec
shl
stos
icebp
rol
pusha
outs
adc
sbb
shl
sub
ret
cmp
xchg
cmps
xor
push
dec
cmc
dec
je
pop
jl
(bad)
into
into
les
stos
jp
cmp
outs
bound
fdivr
and
mov
pop
cmps
ss
jg
cdq
jmp
fcmove
sbb
sub
push
lahf
popa
ficomp
adc
aad
jno
retf
sbb
pop
jo
in
fld
pop
push
and
dec
and
sbb
imul
test
dec
ret
lods
xlat
call
xor
jmp
out
test
sub
or
cld
jmp
xchg
pop
lods
jle
dec
mov
inc
retf
jp
lock
(bad)
mov
cdq
data16
adc
push
jmp
les
pusha
inc
mov
pop
xchg
mov
pop
nop
sbb
ds
xchg
loope
dec
aaa
xor
mov
add
inc
inc
add
ja
or
ds
ja
mov
shl
call
repz
and
sbb
(bad)
xchg
or
pop
xchg
jb
or
inc
inc
jp
div
fs
les
mov
sub
sbb
call
jnp
pop
push
pop
dec
jmp
int
inc
fidiv
cld
aad
out
mov
jg
and
bswap
mov
dec
adc
adc
push
push
fnsave
or
push
sbb
add
mov
fist
out
mov
and
mov
cmps
jb
inc
ret
add
ret
cmp
sti
scas
stos
gs
sub
mov
not
gs
cmc
shl
(bad)
cld
mov
mov
mov
add
fcom
mov
lahf
sub
call
pop
cmovp
adc
pop
pusha
mov
test
retf
(bad)
jns
xchg
xchg
sbb
cmp
jmp
push
dec
xor
int
mov
not
xchg
push
adc
aad
loop
mov
fwait
scas
fild
adc
rcr
cs
pop
rol
out
out
sbb
arpl
dec
jmp
sbb
mov
mov
repz
or
push
movs
fisttp
fucomip
rcl
mov
mov
test
daa
lods
jae
add
stc
fcom
sub
loopne
imul
or
and
pop
and
leave
int3
jmp
push
scas
and
xor
ds
pop
les
pop
fadd
inc
cld
scas
jp
ja
xchg
push
push
in
in
and
push
fs
inc
add
js
mov
xchg
inc
outs
mov
fmul
sub
mov
outs
or
jp
shl
fild
dec
dec
fild
cmp
rcl
movs
mov
lods
or
adc
sub
mov
pop
sti
pop
scas
lahf
lods
mov
test
in
adc
mov
xor
je
push
shr
gs
sub
aam
std
pushf
mov
add
out
arpl
pop
outs
mov
inc
fisubr
inc
nop
inc
inc
mov
je
sahf
jb
xor
(bad)
cmp
mov
stc
and
lahf
mov
adc
rcl
mul
test
int3
enter
scas
xchg
lock
dec
ret
mov
cdq
rcr
loope
test
mov
push
iret
jg
std
inc
into
in
(bad)
shl
xor
mov
adc
push
call
icebp
jge
cs
mov
cli
adc
pop
in
mov
pop
xor
pop
mov
push
or
mov
shr
jecxz
xor
ret
jl
in
and
ins
retf
in
mov
fisubr
aad
and
and
jbe
xchg
movs
rcr
push
test
jne
jb
xlat
mov
into
push
pusha
adc
es
push
das
aaa
fisttp
(bad)
shl
rol
mov
mov
cmps
popf
ficom
les
cdq
movs
mov
fild
push
cmps
pop
jl
push
adc
lods
ret
ins
retw
jnp
hlt
and
jmp
dec
hlt
test
dec
sbb
add
nop
test
push
gs
dec
scas
sub
fidivr
xchg
and
mov
(bad)
sub
test
mov
pop
retf
inc
push
mov
inc
ja
cli
shl
xchg
jge
xor
xor
data16
hlt
mov
(bad)
fst
inc
inc
or
jnp
push
in
mov
and
sub
or
out
mov
int3
cmp
stos
repz
cld
push
fs
xchg
rol
mov
adc
and
mov
fstp
jo
fdiv
data16
inc
je
dec
adc
loopne
jnp
xchg
add
mov
xor
push
repnz
xor
mov
adc
pop
js
ds
icebp
shl
push
aaa
(bad)
(bad)
push
loope
cld
xchg
ss
mov
loope
and
ins
loope
mov
dec
mov
add
stos
(bad)
xchg
fucomi
call
cmc
push
stos
movs
imul
xchg
cmp
mov
test
(bad)
jne
cmc
es
loope
pop
pop
movs
mov
mov
iret
mov
inc
push
into
imul
gs
(bad)
or
sub
xchg
div
inc
fidivr
repnz
jns
fcomp
mov
jge
ret
sbb
xor
dec
or
stc
scas
xor
ss
xchg
(bad)
adc
in
fcom
mov
cmp
push
dec
inc
cdq
sahf
pop
pop
pop
rcl
pop
xor
retf
mov
pop
outs
(bad)
xchg
and
lods
jnp
xchg
mov
cwde
push
sub
jne
inc
enter
add
dec
or
das
push
xor
call
cmps
(bad)
retf
cwde
outs
test
es
test
adc
xchg
cli
xchg
repnz
lods
mov
sbb
sbb
dec
ficom
sbb
xor
pop
sbb
cmp
lods
or
aam
sub
add
into
cmp
inc
mov
sti
sbb
lea
mov
mov
in
push
pop
cmc
pop
in
mov
xor
and
mov
jmp
add
fwait
xchg
xor
push
jbe
sub
inc
sub
pop
std
pop
mov
ror
and
push
loop
into
pop
push
dec
pop
je
retf
mov
push
jbe
hlt
jl
mov
mov
imul
bound
push
scas
arpl
fldenv
inc
lahf
out
cmp
jne
adc
cmps
inc
adc
data16
call
xchg
adc
inc
push
call
sub
mov
cmps
xchg
pushf
stos
cdq
adc
(bad)
cs
push
aam
pop
mov
xchg
mov
lds
push
cmps
cmp
adc
pop
test
pop
xor
dec
or
cmps
imul
xchg
shl
shl
loope
xchg
mov
aad
scas
or
jl
sub
test
std
or
pop
mov
ins
lea
mov
add
cmps
je
in
in
sub
mov
repz
inc
push
push
mov
shr
pop
ins
mov
and
mov
jg
int3
(bad)
cmc
xor
xor
jmp
stc
xchg
push
mov
test
out
std
dec
cld
addr16
imul
mov
test
jecxz
add
mov
mov
pop
mov
(bad)
ret
xlat
dec
mov
mov
loope
sbb
loopne
sahf
mov
mov
and
cmps
xchg
jmp
das
mov
mov
push
cs
mov
movs
aam
push
jmp
outs
xchg
std
xchg
mov
dec
xchg
push
push
dec
add
cmp
dec
sar
pcmpgtb
cmp
lds
push
xor
push
or
or
mov
test
movs
aas
adc
dec
(bad)
in
xchg
mov
fadd
pop
js
mov
pop
in
xchg
xor
imul
and
cmp
imul
leave
fsubr
pop
mov
lds
daa
add
fwait
jge
pop
push
shr
mov
push
cld
add
scas
add
inc
add
pop
mov
cmps
scas
mov
cdq
mov
pusha
adc
in
aad
mov
dec
inc
push
mov
(bad)
jo
pushf
mov
push
mov
xchg
int
dec
mov
sti
jg
imul
out
sbb
and
sti
push
mov
mov
dec
popa
cmps
and
fstp
scas
lea
call
sub
push
and
fld
ret
dec
xor
mov
das
adc
sbb
jbe
gs
je
mov
jb
pop
ret
scas
cmp
mov
loop
out
xor
dec
pop
xor
mov
cdq
cs
shr
adc
les
add
mov
lock
adc
repz
xchg
jmp
push
and
inc
mov
aas
inc
popa
add
push
iret
repnz
sbb
dec
cmp
inc
or
mov
jo
adc
retf
xor
repz
ins
mov
into
arpl
add
dec
inc
add
pop
or
retf
xchg
test
int
inc
xchg
push
xchg
add
inc
push
je
adc
test
scas
xchg
sbb
out
push
mov
jbe
fnstcw
xlat
popa
test
inc
add
adc
in
mov
rol
je
jo
or
dec
in
aaa
and
sahf
sbb
xor
mov
mov
clc
cmp
lea
test
and
enter
adc
dec
xchg
xchg
mov
jo
arpl
adc
loop
popa
imul
add
mov
rcr
mov
aad
enter
mov
or
imul
mov
cs
sahf
sbb
inc
and
cli
(bad)
pop
pop
jae
xor
sbb
(bad)
pmaxsw
mov
call
bound
add
fist
stos
sbb
dec
adc
fisttp
and
mov
inc
cmp
cmp
and
sti
arpl
das
int
or
pop
adc
call
xchg
aam
gs
add
sub
data16
jmp
fwait
test
sub
setge
pop
loop
sbb
rol
adc
and
call
nop
loop
mov
les
mov
popa
pushf
out
mov
xor
xchg
bnd
iret
loope
in
and
jae
mov
lahf
arpl
sub
rol
in
jne
in
imul
mov
mov
pop
addr16
dec
jbe
ror
xchg
in
(bad)
add
loop
xchg
(bad)
sub
lock
loope
sbb
push
lods
sar
adc
pop
mov
or
pushf
clc
push
lock
xchg
test
cmp
retf
mov
icebp
lods
inc
push
and
fbstp
into
out
mov
stos
mov
mov
movs
mov
xchg
(bad)
fs
xchg
mov
popa
jno
ins
bound
arpl
push
in
movs
icebp
dec
sahf
pop
pushf
cld
scas
js
xchg
(bad)
cmps
pop
(bad)
mov
repz
xor
or
xor
mov
stc
xchg
mov
loopne
add
inc
sub
in
movs
or
fdivrp
fisttp
icebp
jecxz
mul
aad
sbb
jnp
popa
out
and
popf
or
dec
pop
out
xchg
(bad)
pop
or
ins
add
push
add
sbb
jo
add
xchg
mov
(bad)
shl
fcmovne
push
jno
fadd
fisttp
add
adc
dec
pop
(bad)
adc
pop
pop
mov
mov
add
sbb
pop
daa
(bad)
sub
jg
jge
dec
ds
aaa
push
dec
fsqrt
jns
mov
xor
lods
jne
pop
pop
outs
int
pusha
mov
sub
jg
int
add
dec
push
arpl
cmp
pop
xor
xor
gs
xor
aad
jnp
adc
xchg
pop
sbb
inc
mov
cmps
push
inc
retf
fisttp
sti
enter
mov
pushf
dec
stc
fwait
or
ins
inc
inc
xor
outs
mov
stc
out
fcomp
lds
(bad)
mov
inc
pop
cmp
push
inc
test
cmp
and
es
xchg
mov
(bad)
repnz
inc
inc
push
cmp
push
mov
pop
sbb
test
mov
adc
dec
into
jecxz
test
imul
push
pusha
jmp
mov
repz
pusha
sbb
jecxz
pop
mov
inc
mov
enter
pop
sbb
popf
inc
dec
mov
cmp
inc
bound
push
leave
jns
add
jns
ins
ins
cmp
dec
icebp
jne
cmc
cmp
push
mov
dec
dec
jmp
movs
into
xchg
jp
int
shr
pop
hlt
es
adc
sbb
xchg
outs
xchg
fcomip
outs
enter
mov
dec
repz
or
clc
adc
lock
jae
mov
mov
(bad)
shl
stc
ret
jbe
and
(bad)
out
loope
rcr
js
int
lods
popf
in
adc
out
fs
stos
shl
sub
push
pop
outs
inc
inc
rcr
xor
outs
aam
push
gs
lds
in
fcmovb
adc
cmp
scas
mov
(bad)
dec
xlat
cwde
stc
gs
ins
pop
sub
cmp
jmp
cmps
fwait
xchg
dec
lea
ret
shr
mov
and
jge
movs
sub
xchg
bound
not
hlt
inc
pop
cmc
pop
pushf
sbb
add
jnp
fmul
pop
(bad)
dec
and
pusha
icebp
push
ret
retf
dec
mov
pop
inc
dec
jmp
ins
outs
mov
xor
cmp
fidiv
add
cmp
stc
sti
cli
movs
(bad)
repz
or
sbb
sub
jmp
outs
fcomp
pop
inc
fisttp
movs
fbld
mov
push
jne
push
jecxz
mov
jecxz
out
mov
int3
cmc
into
add
mov
out
test
hlt
aas
and
outs
jno
or
out
mov
ss
adc
inc
aaa
sub
cvtdq2ps
mov
ss
xchg
retf
in
sbb
scas
mov
push
mov
xor
popf
xor
mov
jns
push
sub
imul
and
sbb
cmp
jo
adc
(bad)
nop
add
adc
outs
inc
jle
push
mov
std
lea
(bad)
dec
push
ss
and
sub
std
cmp
outs
mov
dec
mov
inc
inc
and
or
jmp
aad
mov
ins
xchg
lods
mov
pop
pop
or
mov
(bad)
or
data16
xor
imul
call
mov
xor
push
(bad)
stc
div
adc
aad
add
mov
fsubr
sub
mov
pop
push
dec
mov
adc
mov
cmps
stos
retf
pop
jbe
pop
das
xchg
inc
xlat
ror
add
jno
test
fwait
cmp
ss
inc
dec
subps
mov
aad
stos
aam
loopne
push
fcmovne
inc
call
stc
(bad)
inc
dec
sbb
jnp
xor
fwait
nop
test
mov
inc
mov
mov
mov
jae
sbb
cdq
add
ins
adc
pop
movs
xor
in
aad
aad
xor
sub
sub
jo
adc
gs
pop
sbb
out
mov
fcomp
lods
push
imul
aad
cli
mov
das
cmp
fwait
cmp
cmp
rcr
rol
test
out
call
mov
mov
rcr
or
adc
pop
ins
mov
repz
xchg
pop
shl
inc
or
add
sub
mov
add
fisubr
and
dec
and
ins
clc
mov
(bad)
jnp
aaa
mov
sbb
push
cmp
or
xchg
mov
push
imul
cmp
inc
scas
shl
mov
adc
and
icebp
jecxz
das
push
inc
sar
xor
add
les
into
xor
loopne
lock
xorps
push
lods
fsub
inc
pop
sbb
ja
pop
add
rcr
sub
xor
adc
mov
aas
psraw
jmp
ja
aas
test
rcr
jae
in
push
stos
mov
call
cmps
mov
sbb
scas
xor
cmc
js
push
ret
xor
adc
cdq
addr16
and
arpl
cs
adc
xor
add
(bad)
sbb
cmp
or
fild
jl
add
mov
add
out
outs
sub
sub
push
(bad)
jge
mov
sbb
fdivr
dec
es
adc
cmp
rcr
jg
inc
cmps
ret
mov
xor
movs
mov
mov
inc
enter
mov
aas
out
cli
jae
xlat
dec
into
pop
xor
daa
dec
inc
ins
jecxz
xchg
xchg
xchg
adc
lock
les
mov
mov
mov
fwait
xchg
call
xor
setge
ja
and
movs
shr
xchg
pushf
pop
adc
push
rol
stos
pop
sub
cmpps
rcl
or
and
add
sub
mov
cmp
(bad)
mov
cmp
(bad)
imul
mov
cmp
mov
inc
jb
stc
lock
and
in
std
adc
std
and
scas
xor
nop
call
push
loopne
icebp
jbe
jne
dec
adc
ficomp
pop
hlt
adc
dec
call
jns
cmp
inc
clc
or
cmps
rep
daa
(bad)
mov
inc
retf
inc
(bad)
sti
sti
mov
inc
jmp
int3
(bad)
push
jp
inc
scas
outs
and
lods
jbe
sbb
js
popf
shl
or
xor
pop
add
adc
lea
xor
pop
mov
add
jl
pop
lds
cmp
dec
xlat
adc
ror
push
jno
lods
das
std
add
mov
push
xchg
aas
int3
scas
sub
jecxz
mov
cmc
xchg
dec
repz
jno
movs
jno
(bad)
int3
inc
gs
(bad)
xchg
and
jne
mov
mov
and
ins
cmps
xor
pop
lock
add
push
fisttp
jmp
in
adc
push
lea
push
cmps
shl
mov
stos
or
repz
(bad)
and
rol
cmp
out
push
inc
sar
(bad)
fild
mov
shl
inc
in
pop
mov
or
cmps
mov
(bad)
jnp
jae
add
jbe
call
je
sub
push
in
in
cmps
sbb
cli
das
loope
add
stc
adc
lods
aaa
pop
fcmovb
mov
(bad)
mov
mov
mov
sub
scas
xchg
mov
jmp
mov
mov
or
lea
jmp
(bad)
dec
push
js
pop
mov
dec
or
lock
push
cld
adc
adc
das
jge
movs
mov
add
xor
pop
fwait
fs
sub
clc
jno
mov
mov
mov
nop
into
xchg
sub
and
sub
jnp
mov
xchg
push
pop
adc
or
mov
scas
loopne
sbb
fidivr
xchg
not
or
push
mov
push
pop
or
cs
fs
mov
les
(bad)
ret
enter
arpl
xor
test
sbb
loope
hlt
mov
jb
lea
mov
adc
std
rcr
fldenv
in
xor
jno
arpl
add
out
jnp
jae
sahf
or
jmp
cmps
jge
(bad)
cmp
inc
dec
jle
loop
adc
xchg
enter
int3
adc
jne
xor
xchg
adc
xor
(bad)
ret
pop
bound
cmp
enter
mov
mov
xchg
mov
add
imul
mov
jne
das
mov
mov
int3
xchg
xchg
(bad)
jbe
dec
lods
fidiv
jb
push
test
sti
inc
push
loopne
dec
icebp
push
imul
sub
(bad)
pop
push
xor
out
adc
(bad)
dec
mov
adc
xchg
or
outs
popf
or
xor
std
and
xchg
sahf
or
retf
and
or
js
push
mov
mov
mov
jmp
lahf
lods
mov
pop
inc
jle
push
push
dec
xor
vmovntdq
mov
xor
repnz
aam
mov
mov
call
jmp
mov
cmps
cdq
imul
push
xchg
jnp
mov
sbb
out
xchg
jg
or
jne
mov
adc
or
and
popf
je
sub
inc
ret
test
mov
push
fisubr
out
cmp
jae
mov
ins
hlt
add
cdq
aas
(bad)
xchg
push
or
push
cmc
add
adc
in
and
mov
jg
bndstx
mov
xchg
inc
mov
call
mov
jp
add
push
mov
mov
lea
call
mov
sub
in
(bad)
or
cmp
mov
inc
cwde
out
pusha
xor
(bad)
xor
cmp
dec
pop
and
mov
pop
into
(bad)
fistp
or
fld
mov
ja
not
in
add
imul
nop
pop
imul
mov
test
and
xchg
and
fisub
sub
push
dec
or
xchg
or
sbb
add
push
pop
dec
dec
ds
mov
test
mov
in
enter
or
mov
inc
out
sahf
and
sahf
jge
adc
mov
adc
mov
push
jp
repz
mov
jecxz
aad
sbb
inc
scas
add
mov
aam
mov
mov
loope
sub
loop
push
sub
xcrypt-ofb
jbe
lock
retf
jo
mov
ins
in
sub
xlat
inc
mov
icebp
sbb
mov
sti
xor
test
push
push
in
add
mov
stos
adc
xchg
pop
mov
or
mov
movs
sti
hlt
stos
lods
add
arpl
shr
xor
add
movs
cmp
arpl
xchg
push
test
loopne
jb
neg
fld
dec
add
and
and
push
cmps
cwde
mov
push
jo
std
loope
js
pop
sub
sbb
in
call
imul
inc
mov
jno
ja
jg
mov
hlt
pop
cmp
das
lahf
loop
fdiv
and
iret
retf
in
adc
hlt
fld
gs
call
cmp
xor
push
dec
scas
cli
pop
jmp
in
mov
mov
mov
inc
arpl
mov
sbb
xor
jbe
loopne
mov
xchg
push
pop
xchg
ja
repnz
sti
icebp
add
jl
sbb
fwait
xchg
jmp
in
xor
movs
or
mov
cs
in
or
xchg
mov
cmp
sub
xchg
adc
bound
add
pop
cmp
movs
mov
push
(bad)
xchg
and
fs
cdq
dec
sahf
or
sbb
sub
xor
int3
lods
fisttp
(bad)
pop
pop
in
add
sti
mov
stos
fimul
and
push
sahf
ds
mov
in
das
mov
mov
push
xchg
mov
fld
mov
sub
add
mov
or
iret
cmp
mov
(bad)
bound
cmps
aaa
pop
dec
mov
and
or
inc
mov
popf
mov
mov
loope
pop
lahf
outs
dec
cmps
xchg
cmps
cdq
or
inc
stc
test
scas
dec
push
addr16
repnz
enter
mov
cmc
cdq
push
sbb
int
sub
sbb
(bad)
jae
mov
xor
mov
cld
scas
add
xor
cli
arpl
adc
and
dec
jno
cs
push
xchg
sbb
cmp
dec
clc
stc
inc
(bad)
adc
(bad)
jmp
dec
cmps
pop
xchg
scas
bound
sub
or
lods
test
xchg
cdq
push
out
or
jecxz
or
(bad)
mov
xchg
loope
cmp
dec
mov
mov
inc
inc
dec
inc
xor
jl
addr16
xor
ds
mov
jle
push
hlt
jg
jb
jl
add
or
cmps
mov
sub
cs
retf
sub
jnp
in
cmp
scas
js
inc
(bad)
ja
das
sub
xchg
jae
sbb
lds
inc
inc
sub
mov
mov
inc
add
(bad)
xor
jl
ficom
lods
add
or
dec
xor
jb
xchg
lea
xchg
pop
xchg
sub
out
inc
daa
mov
popf
xchg
jge
xor
cmps
je
mov
sub
sub
cmp
cmp
je
xor
xor
adc
inc
jae
fs
mov
or
jp
fisubr
shl
out
fsub
scas
push
loop
test
add
ret
push
jno
int3
inc
jo
popa
push
shl
gs
cli
(bad)
cld
sbb
mov
add
das
dec
test
inc
add
mov
ret
test
and
push
pop
xor
dec
mov
inc
xchg
out
push
leave
mov
push
add
test
fisub
mov
push
inc
add
icebp
sbb
(bad)
cmps
inc
jl
sub
and
or
adc
daa
stc
mov
idiv
sbb
sub
and
in
xchg
cmp
(bad)
sbb
push
out
int3
push
push
adc
cmp
jbe
ror
sbb
lock
dec
fwait
hlt
push
push
dec
xor
add
enter
jecxz
pop
(bad)
scas
jb
daa
sbb
push
adc
sub
mov
je
sbb
jg
idiv
add
ins
icebp
mov
pop
jmp
ds
das
xchg
cmp
pop
mov
lds
add
imul
cmp
lea
jae
sub
pusha
inc
jne
mov
jns
sub
jg
xor
mov
call
cmp
daa
jno
jns
xchg
push
xor
hlt
jg
mov
push
xchg
inc
or
pusha
dec
fnstenv
push
rol
scas
dec
push
and
ret
mov
addr16
or
and
pusha
ins
adc
pop
scas
and
hlt
xchg
push
hlt
cld
pusha
in
mov
cwde
mov
in
jo
mov
push
adc
shr
and
mov
push
movs
xchg
cmp
fmul
fsubrp
mov
xor
mov
cli
(bad)
nop
mov
push
out
push
frstor
mov
or
sub
adc
dec
pop
sti
imul
out
loop
(bad)
cwde
(bad)
inc
imul
cmp
sbb
outs
cmp
cdq
repnz
shl
push
daa
xchg
mov
fdivr
into
sub
sbb
(bad)
jb
test
sub
jbe
test
cs
mulps
outs
jmp
xchg
jp
mov
push
lods
in
retf
pop
jb
jae
mov
mov
loopne
test
mov
cmps
jecxz
(bad)
adc
xor
hlt
adc
aad
add
push
lds
pop
out
fdivr
test
and
pop
in
out
stos
push
pop
push
scas
lds
adc
cli
ret
jmp
cmps
push
outs
mov
adc
pop
mov
mov
jle
and
bound
cmp
jae
aad
pop
inc
jb
cwde
jl
mov
sahf
js
icebp
inc
cmp
imul
xchg
sub
sar
xchg
pop
jp
pop
ja
or
rcl
iret
jne
jno
mov
inc
inc
dec
dec
test
ss
add
movs
out
loopne
mov
cwde
sub
and
sti
pushf
int3
lods
fld
or
std
outs
dec
jnp
in
cmp
cli
imul
mov
push
mov
and
add
and
mov
push
or
imul
inc
xchg
sub
test
ror
mov
sbb
jl
lods
jmp
aaa
imul
sbb
adc
lea
addr16
pop
test
mov
out
mov
dec
in
cmp
jg
ins
fld
lock
not
pop
in
mov
xchg
(bad)
mov
mov
movs
adc
xchg
jno
inc
pop
aas
pop
sub
idiv
sbb
sbb
gs
test
mov
mov
jns
je
dec
mov
cmps
mov
mov
mov
sbb
sub
xor
loop
movs
hlt
ds
movs
call
aas
mov
das
mov
xchg
mov
pop
mov
jmp
outs
adc
imul
mov
ror
add
add
frstor
adc
daa
inc
(bad)
xchg
xchg
mov
dec
clc
aaa
xor
cmps
arpl
sbb
mov
lock
mov
movs
xor
jmp
popa
lods
push
lock
in
jno
jne
sbb
xlat
jbe
test
mov
loope
pop
mov
ret
leave
popf
xchg
dec
lock
ins
xchg
mov
je
popa
ffree
repnz
push
ret
cmp
xchg
jmp
int
cmp
cld
mov
push
(bad)
neg
or
test
cmps
pop
mov
mov
stos
xchg
outs
cmp
(bad)
cmps
xor
jmp
movs
out
adc
add
mov
mov
imul
sti
movs
pushf
cmc
sub
std
mov
or
ds
ds
pop
out
test
xchg
(bad)
pushw
mov
pop
lahf
push
xor
cmp
and
cwde
les
data16
xlat
push
sbb
mov
mov
ins
rol
sbb
jp
movs
xchg
xchg
mov
mov
and
rcl
dec
cwde
inc
sub
inc
lds
icebp
add
jmp
and
and
sub
sub
add
push
call
mov
cmp
dec
pop
imul
add
mov
inc
pop
js
pushf
cld
mov
(bad)
retf
movs
stos
dec
jne
sbb
stos
add
pusha
cmps
arpl
les
fsub
pop
push
adc
in
and
inc
mov
xchg
cmps
xor
push
xchg
mov
or
xor
jnp
ss
scas
daa
and
sbb
adc
fmul
cmc
int
jno
pushf
xchg
add
xchg
push
arpl
addr16
and
push
mov
dec
mov
dec
imul
sbb
adc
pushf
scas
mov
jns
jne
cmp
pop
pop
xchg
cmps
inc
out
jg
and
gs
mov
fld
mov
push
inc
mov
mov
mov
xchg
fdivr
and
jecxz
dec
cmp
and
pop
int
cli
fs
sub
sbb
cmp
mov
inc
(bad)
pop
and
lods
rcl
or
les
push
xchg
push
dec
pop
test
test
or
sbb
push
sub
dec
(bad)
loop
dec
push
dec
addr16
je
dec
add
movs
mov
jmp
gs
sahf
push
lock
jg
jecxz
loopne
sub
add
lods
sub
std
mov
(bad)
repz
loope
mov
lock
jl
nop
and
pop
sbb
mov
dec
ins
sahf
xor
icebp
cwde
mov
add
inc
ret
add
lods
stc
inc
mov
dec
cmp
and
in
xchg
sbb
mov
loop
lods
and
mov
or
lds
(bad)
(bad)
retf
inc
test
popf
loope
mov
shl
jno
jle
rol
jl
push
aad
or
not
imul
mov
shl
icebp
jp
sbb
push
je
dec
xor
sub
push
nop
shl
jl
xchg
hlt
sahf
mul
jae
ret
push
mov
aad
aad
and
dec
rcr
fwait
and
je
pmulhw
jecxz
cmp
lods
fild
push
push
movs
fisubr
xor
jno
inc
jae
mov
shr
(bad)
mov
and
and
push
sbb
xor
xchg
mov
dec
int
je
add
sub
and
cmp
cli
pop
jmp
retf
dec
jecxz
dec
lods
or
sbb
mov
les
jmp
sub
stos
xchg
inc
cdq
jbe
mov
loop
sub
fild
mov
ins
xchg
fdivp
lods
icebp
icebp
xor
mov
mov
dec
aam
scas
xchg
call
or
xchg
mov
mov
xor
(bad)
cld
push
std
loopne
mov
lahf
sub
enter
dec
repz
mov
mov
jp
int3
aas
push
sbb
rcl
jmp
jmp
rcl
or
arpl
and
jp
mov
scas
mov
xor
adc
push
dec
dec
sar
faddp
add
jns
dec
cmp
outs
pop
daa
inc
mov
pop
jmp
sbb
mov
std
movs
sub
es
retf
xchg
data16
xchg
out
fmul
mov
aas
sub
jg
cmp
and
inc
daa
mov
cmp
or
in
sbb
dec
ins
mov
call
cmc
stc
and
adc
jle
push
dec
mov
dec
xor
aas
test
lea
inc
nop
pusha
sbb
dec
sti
data16
mov
ror
test
jp
cwde
and
(bad)
ror
cwde
and
fild
pop
movs
int3
daa
ds
sub
movhlps
mov
sbb
outs
arpl
jmp
xor
in
inc
push
jg
les
mov
rcl
(bad)
jb
movs
fs
jecxz
mov
dec
nop
mov
popf
jp
das
sub
repnz
cmp
dec
mov
movs
and
sub
cmc
je
pop
aas
mov
cmps
mov
outs
idiv
popf
xchg
fsubr
cmp
(bad)
imul
push
cmp
loop
mov
cwde
jg
mov
push
adc
loopne
fsubr
xchg
jecxz
cmc
and
dec
pop
add
repnz
std
scas
or
inc
inc
clc
(bad)
sbb
in
ss
mov
sahf
or
ret
xor
test
jne
aad
int
mov
add
add
xor
jbe
push
jmp
xchg
mov
dec
dec
push
inc
fiadd
pop
aaa
(bad)
mov
cmc
sub
pop
sub
adc
ret
sub
in
aas
retf
(bad)
cwde
in
les
cld
mov
mov
or
cmp
mov
das
push
hlt
xor
dec
mov
sub
jl
pop
pop
jecxz
cmp
mov
movs
dec
cmp
pop
data16
adc
mov
jbe
jae
in
rcl
sbb
mov
mov
cld
mov
lods
sbb
mov
push
lahf
in
movs
adc
add
jl
dec
das
sbb
sti
icebp
lock
adc
out
cmp
or
fidivr
outs
inc
mov
pop
adc
xchg
inc
dec
pop
nop
xor
int
and
in
or
icebp
or
mov
jmp
mov
inc
(bad)
aad
inc
jmp
xchg
and
movs
out
mov
sub
inc
mov
or
mov
fmul
jl
daa
dec
ja
mov
add
adc
mov
lahf
(bad)
loop
daa
rcr
fcmovbe
mov
and
cli
(bad)
cmp
pop
lods
pop
hlt
cmp
pop
dec
lods
push
add
push
cld
mov
icebp
push
xchg
das
dec
pop
mov
or
push
inc
or
enter
mov
sub
push
mov
cmc
out
mov
push
loope
xchg
popf
sbb
les
cld
dec
outs
rcr
push
pop
fistp
inc
fwait
cdq
push
rcr
scas
cmp
jbe
lahf
push
adc
out
test
mov
pop
das
push
cli
and
cmp
sub
sbb
aas
mov
mov
cld
div
test
dec
lahf
pop
add
adc
add
ror
jmp
jo
jmp
pop
mov
int3
aas
jbe
inc
sbb
in
fdivr
arpl
xchg
div
xchg
jl
and
jae
stos
test
pop
sbb
rol
mov
jb
mov
fnclex
bound
les
adc
dec
cs
mov
fbstp
fstp
stc
or
xlat
inc
shl
jp
mov
mov
std
jl
xchg
mov
shr
xlat
add
retf
in
aaa
sub
sub
cmp
test
push
mov
movs
cld
push
dec
dec
pop
cdq
cs
jp
lods
push
test
(bad)
(bad)
xchg
pop
jno
lods
mov
(bad)
mov
mov
pop
adc
cmp
pop
mov
stos
in
xchg
aaa
jge
in
mov
push
or
popf
cmp
push
adc
daa
dec
mov
pusha
fmul
imul
dec
sbb
retf
int3
sub
(bad)
js
push
jno
lds
cmp
lock
mov
or
jmp
mov
movaps
popa
add
cwde
leave
sub
or
add
fimul
arpl
out
push
xor
shl
mov
add
and
cdq
(bad)
aad
cdq
sbb
fimul
ss
bound
call
sbb
or
dec
fsub
push
push
sbb
and
imul
push
mov
test
inc
clc
xor
cmps
(bad)
imul
cld
popa
add
adc
(bad)
cmp
and
sub
cmps
rcl
outs
add
jmp
jl
shl
inc
pop
mov
stos
xchg
jns
repz
aaa
dec
sbb
cwde
aas
arpl
popa
add
or
push
(bad)
shl
pop
ins
test
push
shl
int3
jecxz
xchg
pushf
pushf
dec
outs
mov
lea
jge
icebp
jmp
lea
ret
out
retf
add
cdq
add
adc
pop
retf
imul
(bad)
aam
test
cwde
add
pusha
jno
dec
jo
ret
or
pop
cmps
mov
mov
mov
and
lahf
jo
fnstenv
(bad)
jae
pop
in
jbe
icebp
call
pop
aaa
inc
mov
pop
xor
dec
rcr
cmp
daa
int
mov
adc
inc
pop
shl
pop
mov
(bad)
(bad)
(bad)
xor
dec
pop
ret
mov
pop
cmp
out
je
fs
pop
icebp
into
mov
pop
cmp
inc
movs
std
fwait
test
test
outs
shl
repz
scas
(bad)
inc
movs
cmp
loopne
repz
arpl
sub
shr
not
jmp
jmp
cs
and
cmp
mov
or
gs
or
jl
or
or
imul
pop
stc
add
shr
ss
pushw
xor
push
mov
std
pop
pop
pop
aad
fidivr
mov
pop
push
test
faddp
aad
outs
pop
push
sbb
mov
mov
jl
repz
aad
push
mov
mov
and
add
mov
push
inc
dec
mov
cmps
rcl
mov
aad
pop
pop
add
or
xor
inc
int3
cmp
xor
ror
mov
pop
pop
test
ja
mov
dec
aam
adc
sbb
shl
ja
sar
je
jg
into
push
jl
add
test
call
cs
mov
push
(bad)
or
sbb
aam
or
cli
and
jmp
retf
jo
(bad)
shl
fldenv
iret
dec
in
nop
mov
jge
aas
push
push
lea
jmp
or
xchg
(bad)
jmp
inc
retf
push
aam
jne
pmaxsw
mov
inc
fsub
or
out
fcmovbe
xchg
cmovns
add
cmc
addr16
adc
aaa
repnz
cmp
(bad)
jmp
in
retf
cdq
xchg
out
xor
scas
xstore-rng
cmps
add
dec
xor
add
and
ds
ror
and
retf
test
das
fwait
push
mov
hlt
xchg
cs
retf
mov
jo
dec
cmp
mov
mov
test
mov
jp
jl
jl
aam
dec
pop
mov
scas
adc
sbb
jp
xor
test
ret
popa
sbb
inc
mov
lahf
shl
stos
or
imul
sub
mov
mov
cmp
mov
repz
mov
cmps
and
jae
inc
sbb
hlt
push
inc
push
mov
bound
(bad)
test
sub
retf
std
pop
aam
arpl
push
sbb
mov
dec
cmp
mov
and
jp
clc
ror
aas
and
sar
(bad)
mov
xor
(bad)
xlat
sbb
rcr
xor
sub
arpl
outs
data16
add
cs
add
add
mov
jl
aaa
push
cmp
cmp
mov
fsub
std
jne
mov
imul
test
cld
jle
aas
xor
das
nop
push
adc
adc
cmp
dec
pop
retf
int3
ja
inc
adc
repz
aaa
and
loopne
test
enter
cmp
clc
pushf
fld
lahf
loope
in
cmps
js
pop
js
mov
fstp
and
aas
xchg
mov
lahf
adc
movs
cmp
jb
mov
dec
pop
adc
fiadd
(bad)
gs
sbb
adc
pop
js
out
clc
aaa
jge
mov
inc
outs
jne
push
lds
(bad)
fdiv
loop
out
jbe
loope
clc
sbb
shl
push
and
xor
jecxz
call
mov
inc
bound
call
add
shl
(bad)
je
cmp
mov
cli
fdivr
cmps
add
and
and
cmp
fdivr
mov
mov
dec
sbb
cwde
add
mov
fnstcw
mov
stos
inc
stos
call
(bad)
xlat
ror
cld
mov
inc
mov
ds
or
push
les
cmp
imul
push
mov
ror
mov
mov
pusha
shl
mov
mov
and
sub
es
es
inc
mov
dec
shl
mov
mov
pop
outs
add
jb
ret
pop
stos
jno
(bad)
int3
sbb
mov
cli
scas
jge
scas
xchg
inc
sbb
add
push
push
imul
xchg
cmp
add
mov
mov
fidiv
sbb
push
xor
and
hlt
sbb
(bad)
or
or
sub
mov
mov
xor
sahf
es
mov
movs
or
retf
loope
cmp
stos
inc
xchg
and
popf
aas
ret
sub
(bad)
sti
mov
inc
jne
jmp
pushf
icebp
pop
add
stos
test
ins
out
dec
out
fs
push
mov
sub
dec
sub
adc
aad
aam
push
push
ror
mov
fcom
rcr
push
jae
add
or
retf
neg
mov
test
std
jmp
cmp
call
call
add
xchg
and
popa
mov
mov
dec
jge
loope
(bad)
ret
xchg
add
dec
retf
icebp
in
pop
stos
mov
scas
mov
mov
les
sub
ret
test
adc
not
aam
cs
in
imul
dec
imul
fistp
adc
xor
jo
fwait
jmp
cmp
sub
xor
sub
rol
adc
or
cdq
mov
outs
jge
sub
lods
push
xchg
inc
cdq
pop
mov
fldcw
xchg
cdq
pop
ja
pop
and
adc
mul
jmp
in
popa
ret
mov
push
adc
ret
enter
push
jo
in
out
add
in
pusha
xchg
test
pop
mov
retf
jge
jns
mov
(bad)
pop
mov
mov
gs
ds
xchg
jle
call
addr16
pop
jmp
fsub
add
push
push
cmp
outs
arpl
cs
jl
and
hlt
aaa
mov
xchg
add
mov
jo
(bad)
ss
cdq
in
mov
mov
js
mov
in
es
sbb
push
pop
adc
mov
call
mov
push
pop
or
push
fdiv
mov
mov
lods
popf
mov
xlat
fidivr
fistp
pop
cwde
loope
out
pop
and
adc
push
xor
out
in
xor
lock
mov
dec
xchg
inc
sbb
jo
js
js
adc
adc
push
dec
cwde
shl
int
lods
mov
cmp
mov
xchg
cli
mov
out
add
adc
scas
xchg
adc
and
mov
pusha
and
pop
adc
jmp
mov
bnd
in
sbb
cmp
mov
mov
adc
ret
sbb
or
fld
clc
cmp
jnp
pop
jno
sbb
repz
pop
jne
or
retf
popa
(bad)
fdiv
push
push
lods
fistp
sbb
pop
in
xchg
retf
push
jb
mov
inc
push
retf
into
cmp
in
ins
jecxz
fwait
in
mov
pop
ins
imul
push
pop
push
je
sbb
mov
jno
jbe
add
cwde
push
push
imul
and
push
jg
loope
mov
push
stc
iret
or
mov
test
pop
lds
xchg
pop
mov
je
xchg
xchg
jno
nop
cli
jae
aam
sub
and
and
popa
jle
js
add
mov
add
cmc
cmps
mov
xor
xor
sbb
xchg
fstp
cmp
and
inc
jo
imul
mov
daa
loop
adc
ins
clc
jno
cld
jl
dec
movs
lods
add
frstor
data16
sbb
wbinvd
loopne
call
scas
xchg
add
mov
int
xor
dec
data16
push
mov
xchg
mov
jo
push
retf
cwde
xchg
mov
idiv
daa
ins
scas
ret
in
loopne
imul
ds
jecxz
cmp
jmp
repnz
jge
shl
div
or
std
add
and
dec
ins
retf
lods
je
mov
ins
cwde
data16
mov
or
sub
mov
and
ins
mov
cs
push
push
and
sbb
aaa
frstor
int
lods
pop
and
lock
sbb
rol
pop
push
lds
pusha
push
pop
add
dec
outs
xchg
fdiv
or
sub
xor
or
add
adc
jecxz
pushf
xor
cmc
mov
pop
mov
pop
js
mov
adc
pop
js
add
cmc
or
fs
adc
rol
das
ds
sub
ror
jmp
mov
sti
push
sub
sub
or
sbb
cli
cmps
sbb
mov
inc
fidiv
add
xor
pop
sub
movs
out
sub
(bad)
adc
pop
add
and
rol
adc
adc
inc
jne
pop
inc
or
out
mov
and
(bad)
outs
fsubr
cli
je
pop
xchg
mov
xchg
sub
or
sbb
pop
jno
(bad)
ins
imul
daa
frstor
jo
or
pop
mov
in
mov
xchg
test
mov
cmp
fsub
cmp
mov
scas
(bad)
aaa
xchg
jg
pop
sahf
pop
imul
jg
sub
adc
cmps
retf
ja
mov
outs
movs
add
xor
mov
and
mov
fiadd
push
and
pushf
add
cli
or
scas
jns
jge
test
inc
(bad)
ror
sbb
adc
mov
movs
(bad)
(bad)
mov
jmp
icebp
jae
sti
aam
in
scas
(bad)
stos
adc
push
mov
fcomp
dec
(bad)
fs
cvttps2pi
adc
std
mov
inc
sbb
mov
or
sub
int3
mov
pop
mov
and
mov
mov
dec
mov
inc
and
stos
pop
push
cmp
scas
imul
dec
lods
inc
jl
fidivr
std
cdq
or
cli
rep
lods
add
lds
pop
std
jo
xchg
fld
jle
pop
sub
outs
(bad)
sbb
sti
sub
(bad)
jnp
dec
pop
sub
push
mov
out
popf
mov
pop
mov
xchg
cld
inc
xlat
and
pop
sub
imul
pop
mov
push
and
or
jo
(bad)
jmp
xchg
xchg
pop
and
retf
pop
cmp
imul
imul
cmp
in
mov
test
clc
sub
sahf
xchg
ret
dec
ret
fdiv
dec
push
adc
daa
pop
inc
mov
fstp
mov
xchg
adc
stos
shl
call
enter
jle
fnstsw
add
fimul
push
pop
sahf
push
lods
clc
cmp
(bad)
fwait
add
push
xor
xor
mov
push
call
mov
jns
arpl
push
loope
in
mov
cmp
test
loopne
es
leave
lea
jl
lds
sbb
inc
cmp
pushf
imul
push
xor
fisttp
or
mov
jae
lds
clc
les
ins
inc
mov
shl
jmp
ins
mov
xor
cmps
int3
cwde
pop
test
in
push
std
jmp
jno
sbb
lock
mov
jmp
sahf
(bad)
mov
pop
(bad)
mov
add
test
stos
imul
mov
jb
mov
lea
push
pushf
(bad)
push
mov
ror
mov
cmp
mov
jne
xchg
mov
xor
sub
shr
or
add
test
add
pop
add
xchg
ss
int3
push
lds
ins
cmp
rcr
mov
pop
repz
cs
xchg
sbb
retf
jle
sub
mov
fld
mov
inc
mov
retf
test
mov
shl
pop
cmps
cld
mov
cmps
pop
add
int3
les
popf
mov
mov
dec
fist
lods
sti
jge
icebp
into
and
ins
mov
and
fwait
test
bound
mov
add
adc
cli
ds
sahf
sti
(bad)
pop
fs
adc
test
cdq
mov
stos
pushf
xchg
jns
into
sub
or
retf
pop
ret
sub
or
mov
(bad)
adc
inc
cmp
mov
mov
call
fiadd
and
iret
mov
pop
mov
shl
aam
jg
jno
adc
mov
cld
cli
icebp
xchg
jmp
push
jno
xchg
inc
js
or
push
xchg
push
imul
add
and
adc
and
adc
add
aam
cmps
mov
xchg
data16
leave
cmc
addr16
inc
retf
popf
rcr
in
mov
mov
dec
inc
sbb
jne
jb
es
repz
lea
push
fimul
sub
push
scas
pop
(bad)
fcom
dec
inc
cmps
jno
lahf
sub
repz
cmps
xchg
xchg
aad
call
push
call
gs
push
repnz
jae
movd
mov
sbb
je
pop
push
mov
or
sbb
pusha
fsubr
shl
fidiv
add
pop
test
jecxz
gs
cmps
jno
outs
mov
dec
sbb
xor
sti
in
cmp
lods
push
or
nop
mov
scas
repz
sub
pop
hlt
mov
or
mul
shr
loope
stos
lahf
in
les
pop
ror
dec
sub
cdq
mov
movs
(bad)
inc
mov
dec
xchg
shl
fcom
sub
mov
xor
cmc
mov
stc
rol
addr16
sahf
rcr
(bad)
fadd
mov
or
and
into
xchg
push
mov
jnp
pop
imul
neg
fwait
or
fwait
into
fisub
shl
dec
popa
jns
ret
cli
mov
cmp
sbb
xlat
mov
nop
pushf
cmp
cmp
adc
jo
rol
xor
popa
or
inc
sub
mov
je
stos
fcomi
or
je
iret
adc
test
inc
lods
xlat
icebp
xchg
scas
in
call
dec
cmp
jae
or
cwde
cmp
cmp
fs
lods
or
icebp
mov
xor
dec
sbb
xchg
jae
inc
(bad)
mov
(bad)
push
cmps
mov
mov
push
test
and
test
imul
(bad)
jbe
push
pushf
and
(bad)
dec
shl
mov
mov
test
rcr
mov
aas
jno
pop
jl
test
push
xor
scas
mov
retf
(bad)
das
mov
fs
cli
push
add
sti
hlt
neg
dec
js
cdq
push
retf
into
jmp
aad
mov
and
call
shr
lods
out
and
lods
lahf
jmp
add
jns
in
movs
fs
jo
dec
inc
push
pop
test
and
jne
in
div
and
sub
loope
dec
(bad)
sub
stc
lahf
jae
xor
test
inc
mov
dec
jo
bound
mov
jb
xor
das
enter
or
out
inc
movs
retf
xchg
je
pop
and
push
mov
(bad)
sbb
xchg
lock
repnz
movs
call
inc
xchg
lahf
mov
stc
mov
int3
fidiv
sub
mov
pop
(bad)
pop
cmp
inc
cmp
mov
pop
jle
fucomi
sub
pusha
xor
retf
cmp
lods
repz
dec
add
and
(bad)
stos
sub
lods
repz
stos
xor
or
bound
sbb
nop
mov
push
and
adc
adc
je
in
add
pusha
outs
fcomip
mov
add
fidiv
in
jae
pop
rol
into
lds
iret
xchg
cmp
pop
xchg
sub
gs
sbb
mov
jbe
cmp
jle
ins
adc
mov
lahf
mov
sbb
loope
xchg
push
cli
mov
mov
loopne
iret
push
cmp
xchg
push
test
mov
imul
not
imul
ret
sub
push
or
cmp
pop
fcmovnbe
xor
jo
push
inc
mov
stos
cmp
outs
mov
inc
in
loope
cmp
adc
or
mov
scas
jg
(bad)
pop
adc
xchg
ja
inc
inc
mov
adc
mov
jmp
xlat
push
lea
in
xchg
repnz
dec
mov
dec
pop
adc
out
mov
bound
mov
(bad)
dec
inc
(bad)
mov
dec
test
mov
mov
iret
test
inc
out
xchg
aam
add
vminps
cld
sbb
jg
pusha
into
les
xchg
push
int
cmp
push
ds
sbb
lods
mov
inc
stos
leave
pop
push
xchg
sub
push
mov
xchg
jnp
and
or
jbe
fnsave
inc
loop
mov
imul
aam
or
push
rcl
and
scas
sub
pop
lahf
sub
call
jae
adc
sahf
loope
cdq
push
jg
mov
cmp
dec
cmp
in
mov
push
repnz
mov
pop
into
and
xlat
ror
adc
xor
cmp
loop
xor
xlat
fbstp
iret
outs
push
gs
out
nop
push
inc
add
repz
pop
mov
add
mov
stos
sub
dec
dec
mov
dec
dec
gs
sahf
std
cmp
rcl
dec
fsubr
jb
data16
cli
out
xor
push
xchg
lods
fcomp
aaa
and
or
mov
lahf
outs
aad
sbb
daa
adc
loop
jmp
ds
mov
sar
jp
(bad)
jmp
hlt
hlt
(bad)
fdivr
int3
mov
push
div
and
cld
iret
and
mov
into
retf
xor
repnz
xchg
xor
fcomi
mov
xor
jp
ret
rcr
cmp
jb
adc
popf
rol
movs
call
jae
sub
movzx
sbb
cmp
dec
out
pop
arpl
(bad)
sbb
inc
pop
mov
sbb
pop
mov
retf
jne
mov
xor
retf
mov
xor
push
jle
dec
enter
inc
sar
mov
mov
shr
mov
adc
je
add
inc
dec
jge
adc
rcr
jle
adc
mov
pop
push
dec
inc
mov
adc
inc
iret
xlat
iret
sub
sbb
dec
pop
retf
mov
out
es
popa
xchg
jae
pop
push
sub
loope
jno
adc
repnz
stos
and
(bad)
shl
loopne
adc
leave
cmp
mov
adc
mov
cmp
inc
jg
adc
jo
sub
dec
cmps
inc
dec
ss
push
and
jnp
xchg
out
ins
es
jg
or
outs
imul
inc
xor
push
mov
mov
stc
scas
sub
pop
jmp
test
xchg
or
lock
test
mov
test
jae
xchg
in
adc
xchg
jg
enter
call
cmps
neg
or
mov
push
(bad)
mov
add
mov
fnsave
fstp
mov
and
(bad)
ror
cmp
fisub
clc
fs
xor
test
and
mov
int3
inc
ss
movs
sub
sar
or
cli
ret
cmp
add
mov
dec
jmp
cmp
sub
cmps
jle
out
test
jecxz
mov
ins
in
cld
sub
repnz
pop
sbb
adc
int3
fmulp
clc
mov
popf
or
cmp
(bad)
sub
iret
mov
jns
int3
sar
jmp
xor
sbb
mov
mov
dec
cmc
out
mov
test
xchg
cmc
cmc
inc
je
add
imul
mov
mov
dec
jle
cmp
out
out
scas
inc
and
pop
jmp
sti
test
(bad)
es
out
push
repz
mov
xchg
loope
int3
or
fadd
fs
lods
hlt
out
in
mov
xchg
push
add
movs
sbb
jmp
mov
sbb
imul
inc
add
(bad)
hlt
and
scas
mov
mov
mov
add
test
ins
(bad)
adc
or
adc
aas
scas
retf
adc
push
fcomp
addr16
jmp
inc
rcl
cwde
cmp
mov
sbb
fstp
dec
add
jnp
xor
or
test
xchg
in
nop
out
aas
or
shr
jmp
movs
rcl
nop
test
mov
retf
jl
sbb
and
fld
push
shl
and
mov
popf
sbb
movs
cmp
jbe
ins
sub
pop
fstp
pop
xor
sub
xor
dec
stos
pop
mov
xchg
mov
xlat
call
or
cdq
mov
imul
push
and
jg
dec
lock
out
rol
(bad)
and
sahf
shl
and
bound
fsubr
test
and
retf
cmp
and
lahf
outs
xchg
repz
std
loopne
cmps
rsqrtps
add
push
sbb
inc
cwde
sub
dec
shr
not
and
jmp
pop
inc
inc
fisubr
sbb
rcr
mov
xor
xchg
mov
dec
mov
push
adc
or
movs
dec
sub
enter
into
arpl
jle
addr16
or
mov
in
mov
daa
adc
mov
fucomi
js
jne
test
test
mov
pop
push
outs
or
out
sar
dec
test
push
ret
int
adc
dec
lods
sub
sbb
mov
xor
pop
mov
std
scas
bnd
imul
in
or
and
pusha
sbb
das
mov
popf
jl
xor
fsub
sbb
test
lods
jo
cs
fsubr
cmps
mov
cld
mov
jbe
nop
cwde
das
push
test
out
repz
cmp
lods
fisub
mov
sahf
push
sub
or
mov
mov
sub
jle
jmp
pop
int
sub
fstp
fst
gs
call
adc
stc
loope
dec
aam
rcr
retf
pop
cs
in
or
fild
cmp
out
xchg
xor
std
gs
aaa
jae
mov
inc
inc
xor
add
inc
pop
out
add
adc
inc
sbb
outs
xor
pusha
cmps
pop
cs
push
jl
inc
pop
xor
stos
arpl
in
inc
dec
or
rcl
and
xchg
ss
lock
int3
loope
rcl
aad
sub
inc
stos
jge
pop
jg
stos
movs
xchg
fisub
mov
das
rsqrtps
dec
jecxz
xor
mov
stc
lock
jmp
push
clc
mov
or
call
cmps
out
out
imul
push
jb
out
int
imul
std
mov
and
pop
cwde
fmul
cmps
ror
(bad)
addr16
cmp
loop
popf
jno
or
cmp
loop
dec
mov
iret
(bad)
aas
addr16
ret
inc
jae
out
inc
mov
xchg
jno
jo
jl
xor
push
jbe
addr16
adc
cmc
dec
xchg
dec
sbb
push
in
bound
and
push
cmp
mov
stos
cdq
jo
sub
dec
jge
cdq
cmps
xor
sti
js
fs
sub
pop
adc
pop
aas
xchg
xchg
int
stos
fwait
pushf
retf
adc
enter
sub
inc
cmp
sub
or
xchg
fiadd
or
imul
dec
xchg
xor
call
mov
daa
mov
sub
pusha
daa
xor
adc
jo
cmp
adc
out
jae
pop
rcl
add
stc
cmp
fbstp
nop
sbb
mov
in
std
call
ins
add
fwait
sub
cli
xchg
js
sbb
comiss
add
rol
cmps
pop
leave
loope
call
push
enter
dec
or
out
arpl
mov
idiv
inc
sbb
in
imul
cmps
pop
mov
(bad)
gs
xlat
sbb
xchg
imul
stos
or
lock
cli
cmp
ins
aad
fidiv
cli
or
pop
xchg
and
pushf
fimul
nop
dec
fadd
popf
ja
adc
add
jge
xchg
or
(bad)
pop
sub
cmp
mov
push
repz
inc
cmp
aad
loop
inc
sbb
ret
fstp
rcr
dec
xor
arpl
mov
mov
scas
sbb
dec
xor
inc
push
push
das
mulps
ds
retf
or
retf
out
xor
jne
xchg
movs
add
xchg
dec
scas
inc
sahf
out
sbb
jno
aam
shl
test
ficomp
xchg
lds
clc
ret
jmp
iret
push
jge
shl
repnz
cmp
mov
outs
adc
sbb
pusha
pop
test
sub
stc
test
lods
dec
outs
ror
mov
test
and
cdq
push
push
xchg
and
int
fs
les
das
loopne
lods
pop
mov
and
(bad)
hlt
(bad)
movs
push
mov
push
mov
mov
nop
test
mov
adc
cmp
movs
mov
cmps
push
mov
pop
dec
retf
sub
lds
cmps
mov
sbb
stos
inc
adc
sub
xor
pop
rol
repnz
aad
mov
jecxz
fmul
stos
xchg
rol
inc
pop
js
in
rol
fmul
mov
or
push
or
cmps
retf
aas
add
lock
add
pushf
(bad)
or
in
mov
sub
ror
sub
mov
jo
les
int
sub
jo
cmp
cli
jg
pusha
repz
ss
sbb
test
inc
inc
ja
add
jmp
test
sub
push
aaa
int3
cmp
and
ja
lods
push
mov
fisttp
ror
cmp
test
stos
jns
sbb
pop
pop
pop
in
dec
push
lods
or
mov
or
arpl
mov
pushf
pop
mov
retf
xchg
outs
mov
repz
push
into
mov
dec
mov
dec
int3
(bad)
mov
pop
iret
sbb
inc
sbb
mov
adc
push
add
enter
lahf
inc
or
das
add
pop
adc
repz
sbb
sbb
leave
std
outs
push
add
pop
xor
fist
cmp
push
outs
out
mov
xchg
into
fsub
mov
retf
ss
out
cs
repz
dec
cwde
sbb
sub
push
pop
shr
or
js
mov
(bad)
cmps
mov
(bad)
leave
pop
cmp
pop
sbb
fsub
inc
sub
xor
jge
push
aaa
leave
xlat
lods
leave
mov
cmc
push
fidivr
out
dec
pop
hlt
paddq
movntps
shr
test
adc
adc
xlat
push
icebp
retf
jmp
sub
call
inc
test
pop
inc
pop
ret
add
push
mov
dec
sbb
dec
xchg
push
int3
nop
dec
mov
das
cdq
in
jecxz
mov
clc
and
and
sub
and
cs
sar
ds
or
mov
pop
cmp
sbb
fdiv
mov
addr16
mov
add
cmp
mov
lock
je
push
inc
js
jb
arpl
and
mov
fmul
icebp
sub
fistp
push
jns
cdq
scas
out
add
cmp
pop
cs
pop
int
call
out
jle
in
and
xchg
icebp
arpl
xor
xchg
test
add
pop
lods
inc
mov
sahf
jmp
lfs
sti
(bad)
sbb
jmp
arpl
jle
jmp
loop
ins
mov
or
or
xchg
movs
mov
in
or
arpl
test
sub
(bad)
xchg
scas
popa
inc
test
cmp
dec
aad
push
pop
lock
in
or
repnz
lahf
inc
dec
jmp
pop
stos
mov
lods
mov
add
data16
mov
sub
in
sub
jg
lea
mov
pop
sbb
shl
pop
fsub
sub
out
and
sbb
pop
fild
stos
xor
cdq
sbb
cmc
scas
cmp
dec
dec
outs
lahf
mov
rol
or
jle
or
rol
les
push
punpckhdq
sub
out
iret
addr16
icebp
ret
xchg
mov
lea
adc
mov
fadd
jge
or
jmp
mov
mov
inc
cmp
loopne
fst
movs
pusha
fadd
inc
xchg
stos
pop
shr
or
retf
cmp
cmp
outs
adc
shl
cbw
push
cmp
mov
adc
pop
dec
outs
cmp
pusha
jae
fdivr
and
cli
mov
aad
pop
retf
inc
scas
mov
fst
push
jle
aam
test
sbb
add
xor
iret
pop
cld
dec
cmps
sbb
dec
push
iret
jae
jno
or
lods
jmp
jmp
xor
xor
push
cli
and
aaa
loop
push
rcr
and
arpl
xchg
jmp
addr16
inc
stos
xchg
cmp
pushf
push
ins
rcr
pop
cli
adc
sahf
push
xchg
jg
mov
out
and
stos
enter
add
xchg
xchg
dec
xchg
scas
inc
fisub
sub
sbb
jns
push
cdq
leave
les
cmp
ficom
ins
stos
dec
inc
jns
fld
jb
pushf
push
mov
sbb
xchg
daa
es
(bad)
repz
cmp
(bad)
mov
jecxz
push
fist
or
and
movs
cmp
fisubr
push
cwde
pop
push
inc
mov
jge
in
dec
mov
call
fsub
mov
scas
push
jle
test
xchg
daa
and
rol
sbb
lods
sub
push
cwde
out
mov
sub
mov
or
fist
enter
sbb
les
in
xor
ror
add
adc
aam
sbb
xor
pop
les
mov
(bad)
clc
pushf
pop
inc
mov
mul
ss
inc
out
inc
mov
mov
daa
movs
xor
push
sbb
sar
rol
push
aam
jl
push
pop
jl
ins
fdivp
jg
cdq
ins
add
sub
shl
mov
mov
into
sahf
fistp
adc
arpl
xor
push
sbb
or
add
and
mov
pusha
mov
aad
or
rol
xchg
imul
lods
xor
push
scas
cmps
test
jo
cmp
push
fisttp
adc
add
dec
push
lods
mov
inc
xchg
call
leave
test
shr
aaa
es
mov
repnz
push
or
rol
sub
mov
mov
sbb
or
movs
xor
sub
in
enter
push
test
scas
(bad)
xlat
push
adc
fld
je
mov
dec
add
outs
pop
add
fist
xor
mov
fcomp
pushf
iret
cmp
sub
scas
xor
dec
mov
popf
pop
test
pop
dec
daa
je
cli
push
xchg
(bad)
iret
sar
pop
and
dec
test
sub
pop
loopne
xor
loope
xchg
enter
or
cmp
stc
pop
cmp
js
(bad)
das
jg
jae
cli
pop
stos
fcmovu
push
pushf
add
sbb
dec
or
aaa
les
and
dec
ins
mov
pop
jg
and
aaa
loop
inc
xor
repnz
js
xor
test
mov
aad
and
jle
mov
xlat
pop
xchg
xchg
push
mov
push
daa
popf
shl
movs
in
ja
fisubr
fbld
scas
lock
cmps
addr16
and
inc
add
and
shl
mov
test
cmps
mov
mov
mov
(bad)
xchg
stos
int
mov
and
jl
(bad)
imul
mov
pop
into
push
stos
xor
retf
sbb
outs
out
dec
dec
adc
mov
in
sbb
mov
(bad)
sbb
stc
daa
xchg
and
jbe
push
mov
sbb
popf
rcl
xchg
movs
push
shl
xor
js
aaa
inc
fistp
fistp
in
jbe
mov
fs
je
pop
cmps
lods
mov
retf
and
(bad)
adc
ficomp
cmp
mov
call
imul
mov
xchg
ss
xchg
(bad)
or
(bad)
mov
dec
loopne
jp
stc
hlt
psubusb
shl
ret
bound
mov
adc
adc
sbb
(bad)
mov
add
dec
jle
sbb
dec
pop
rol
add
(bad)
pop
daa
cmp
sbb
xchg
dec
iret
push
out
mov
xchg
daa
pop
seto
shl
cwde
ja
add
adc
sbb
adc
sub
xchg
add
jmp
mov
add
mov
cld
cli
bound
dec
inc
xor
push
xchg
jae
mov
inc
and
inc
js
push
shr
dec
mov
test
imul
data16
mov
mov
jp
out
mov
jge
retf
push
cdq
push
pop
add
xchg
aaa
dec
jno
jle
mov
outs
add
cmp
adc
outs
movs
cmps
dec
jne
ret
cmp
jne
push
imul
scas
mov
(bad)
or
or
sub
and
dec
sub
bound
cmp
clc
xlat
stc
sbb
and
mov
shl
out
push
hlt
mov
test
sub
call
loop
fwait
out
shl
ror
pop
es
movs
sub
iret
inc
aas
iret
mov
nop
or
ror
outs
popf
and
cmp
jmp
sub
sahf
mov
mov
xlat
fst
aad
(bad)
mov
push
xor
scas
outs
and
movs
jno
mov
jnp
in
dec
ror
add
sti
ins
jp
mov
pushf
scas
test
xor
pop
inc
jl
es
mov
movs
retf
test
dec
ja
xchg
mov
mov
ret
mov
jg
es
sbb
and
scas
repnz
test
nop
cmc
out
sbb
xor
cmp
xchg
popa
psrld
push
lahf
ret
cs
jle
or
scas
cmc
pop
mov
push
into
ins
imul
mov
ret
gs
ja
xchg
or
mov
pop
outs
stos
mov
mov
(bad)
cmp
jmp
test
shl
sbb
icebp
(bad)
adc
retf
test
stos
sub
mov
arpl
push
xor
icebp
icebp
jp
dec
mov
mov
cmp
xchg
push
cdq
(bad)
out
jne
pop
xor
dec
or
shl
call
test
ja
or
push
sar
aad
popa
fisubr
cmp
cdq
push
adc
or
fbstp
fs
(bad)
das
inc
or
pusha
push
add
dec
cmp
pop
repz
pop
hlt
and
dec
mov
push
xor
mov
mov
xlat
cwde
fld
enter
add
stc
cmp
or
mov
loop
je
scas
sbb
push
jmp
mov
stos
ds
mov
lea
inc
xchg
or
cli
test
push
sub
sub
gs
xchg
pop
aad
fdiv
pop
xchg
and
jl
dec
jo
ja
add
imul
lods
mov
push
div
nop
push
push
mov
cmps
dec
inc
jae
xchg
in
or
dec
jne
cmps
int
sub
cmps
inc
adc
cmps
mov
cmp
mov
xlat
cmp
xchg
int
and
lahf
jb
mov
adc
scas
clc
fdivr
jae
out
mov
dec
adc
dec
inc
mov
mov
inc
push
(bad)
out
mov
dec
pop
inc
cmp
in
mov
and
adc
adc
stos
rcl
int3
loopne
mov
push
xchg
mov
out
push
dec
push
sbb
addr16
dec
stos
daa
(bad)
fisttp
push
call
les
inc
sbb
jg
add
jle
add
jge
jae
jp
mov
loope
mov
rcr
mov
cmp
push
movs
enter
and
(bad)
push
inc
pop
push
ret
ficomp
stos
pop
dec
mov
push
push
pop
pop
xor
(bad)
shr
out
dec
repnz
aas
lods
dec
xchg
test
mov
ror
dec
scas
cmp
adc
push
cmps
inc
xchg
mov
out
pop
xchg
les
shr
pop
and
mov
xchg
sbb
pop
lds
xor
movs
cwde
(bad)
gs
push
mov
mov
cdq
push
mov
lods
(bad)
sbb
cld
xchg
mov
mov
int
ins
sub
sub
cmc
fidiv
pushf
ins
sbb
fstp
cwde
pop
add
dec
adc
cld
jl
ins
mov
neg
mov
mov
pop
inc
(bad)
or
xlat
retf
or
jns
adc
jbe
inc
inc
xor
test
push
inc
cwde
cwde
test
add
push
sbb
sbb
loope
mov
das
nop
push
(bad)
test
adc
or
aaa
and
sub
sbb
pop
jae
sar
jle
stos
sbb
cwde
sub
ror
pop
ds
(bad)
mov
shl
mov
(bad)
or
adc
jg
scas
xchg
mov
pop
jmp
lods
add
mov
jecxz
cdq
xor
or
add
add
(bad)
fsubr
jecxz
jmp
js
mov
out
rol
and
shl
rcl
mov
int3
mov
inc
add
fldenv
adc
sub
dec
dec
popa
push
imul
(bad)
int3
or
sbb
ja
inc
stos
cmp
or
xchg
dec
cmps
ret
pop
or
sbb
fs
call
sbb
mov
or
dec
movs
enter
mov
mov
cdq
push
(bad)
rcr
adc
sub
mov
xor
imul
test
pusha
(bad)
mov
movs
mov
imul
cmp
or
dec
fneni(8087
outs
jmp
add
push
(bad)
push
leave
not
dec
stc
inc
xor
push
xlat
fild
jecxz
sub
push
mov
arpl
cld
mov
mov
mov
loop
sbb
dec
add
add
shl
das
or
(bad)
mov
sub
fimul
movs
mov
and
cmp
loope
ret
sub
jo
and
popa
sbb
xor
pop
push
das
adc
lods
stos
pop
lahf
sbb
je
mov
shl
sahf
cmp
jp
not
dec
or
mov
cmp
inc
inc
mov
ja
int
mov
xchg
mov
in
jle
imul
mov
data16
or
hlt
outs
xor
cli
xchg
ficom
call
mov
jno
aas
push
paddusw
ins
in
in
outs
mov
mov
mov
pop
cwde
dec
mov
sbb
rol
int3
jae
push
inc
lock
cmp
jmp
pop
ror
push
mov
imul
mov
scas
jp
mov
pushf
stc
ds
in
repnz
imul
fistp
push
inc
xor
jmp
out
div
xchg
xchg
and
jecxz
and
loope
repz
jg
sbb
xchg
icebp
outs
fisttp
mov
sub
sub
enter
mov
jno
(bad)
jno
fmul
jg
(bad)
loop
and
xchg
sar
cmps
mov
pop
(bad)
clc
push
mov
mov
outs
cmp
adc
mov
loope
lahf
jb
sbb
imul
pop
cwde
lahf
loopne
mov
dec
cmp
out
inc
cs
movs
xchg
ja
dec
adc
es
rol
or
jecxz
pop
cmp
movs
lods
and
mov
cmp
sub
(bad)
jns
test
push
mov
fsubr
dec
xchg
gs
xor
outs
and
in
add
arpl
arpl
shl
fcomp
bound
xor
not
mov
adc
cli
push
pop
popa
movs
mov
sub
mov
pop
mov
sub
pop
adc
add
packuswb
sub
outs
mov
mov
pop
mov
push
xchg
jmp
xchg
jp
aad
cmp
push
jno
rcl
test
(bad)
fsubr
std
sub
mov
in
out
fld
adc
cwde
fstp
sbb
shl
(bad)
cwde
retf
hlt
pop
scas
rol
mov
lods
jno
inc
mov
mov
int3
shl
pushf
out
test
inc
sub
cli
inc
bound
std
dec
clc
(bad)
inc
gs
mov
in
es
inc
test
inc
mov
scas
call
outs
dec
(bad)
jmp
dec
ja
(bad)
mov
aam
push
pushf
call
fistp
push
sub
or
enter
cdq
push
push
dec
(bad)
fadd
push
push
adc
jbe
das
mov
xchg
push
fist
fwait
pop
ja
mov
pop
data16
in
inc
mov
cmp
sbb
imul
push
cld
add
and
mov
add
jno
sub
in
dec
std
jle
cmp
(bad)
fisubr
pop
das
aad
and
int3
xchg
movs
mov
test
mov
and
fdiv
or
test
sub
cdq
shl
into
xchg
sbb
sbb
xchg
cmc
jae
in
mov
jp
call
mov
inc
mov
arpl
(bad)
pop
cmp
imul
shl
cmc
enter
mov
dec
sbb
sbb
and
push
dec
ins
inc
sbb
shl
lods
or
std
sbb
lahf
pop
stos
popa
or
outs
push
adc
mov
mov
jne
lods
stos
int
pop
(bad)
xor
sub
cdq
jecxz
dec
fisub
cs
jns
clc
gs
inc
cmp
jns
mov
xchg
iret
cs
enter
xor
iret
dec
or
(bad)
cmp
push
inc
shl
jbe
daa
retf
idiv
mov
fcomp
xor
jmp
inc
gs
cmp
fbld
sbb
leave
std
loopne
int3
mov
push
inc
cmps
js
xchg
or
mov
std
(bad)
das
popf
fdiv
hlt
mov
icebp
push
ins
lods
repnz
(bad)
mov
cmp
sub
data16
and
(bad)
rcr
(bad)
jmp
or
xchg
jmp
test
sbb
push
pushf
enter
dec
imul
aas
xor
jae
int3
or
shl
mov
or
xchg
mov
pushf
fisttp
dec
dec
fisubr
mov
and
fld
aaa
xor
test
out
dec
dec
mov
das
or
pop
(bad)
mov
das
cwde
sbb
jnp
add
and
mov
test
out
jge
jbe
aam
scas
bound
sub
fld
bound
pop
retf
add
dec
std
sub
les
lods
ds
rcr
(bad)
dec
pop
shl
mov
ja
push
popf
fstp
sub
and
(bad)
sbb
dec
(bad)
mov
rcl
test
mov
gs
shl
lods
ins
jo
sar
ficom
(bad)
repz
push
mov
push
call
mov
sbb
add
jg
or
mov
add
rol
imul
xor
dec
push
add
shr
sbb
fnstsw
mov
mov
pop
jns
mov
sbb
adc
mov
sbb
mov
jp
ret
outs
test
es
dec
ss
inc
(bad)
out
dec
mov
push
scas
pop
pop
pop
xor
sbb
(bad)
out
sub
jb
in
fs
sahf
and
mov
ret
call
mov
or
cmp
daa
out
mov
and
ret
lock
and
push
mov
pop
mov
stc
pushf
(bad)
cdq
jmp
xor
out
jmp
in
adc
int
push
dec
mov
sbb
fist
and
enter
stos
fiadd
int3
xor
xchg
mov
sahf
aam
icebp
jmp
mov
out
mov
inc
xchg
dec
and
into
std
fst
xchg
jb
jmp
push
cmp
popf
enter
cmp
test
adc
jnp
inc
loope
cmp
inc
fcomp
sbb
fcmovu
icebp
movs
add
jp
add
out
fcmovnbe
test
inc
retf
pop
sub
add
mov
and
in
in
pop
test
inc
xchg
in
inc
vsqrtsd
and
add
js
lds
mov
fwait
mov
(bad)
aas
xor
sbb
inc
push
(bad)
mov
xchg
ja
nop
lods
adc
ss
lods
push
test
cs
jnp
adc
movs
shl
repz
mov
ss
jmp
mov
loope
jne
ds
scas
dec
aas
cdq
xor
sub
mov
dec
(bad)
sbb
dec
fldcw
and
add
mov
and
xchg
sbb
sbb
inc
ja
adc
or
dec
cld
add
pusha
bound
add
jl
or
and
push
cmp
add
lods
push
push
nop
xchg
inc
mov
pop
ret
inc
xor
retf
pop
xchg
pusha
push
aas
or
add
div
or
fistp
ds
lods
pushf
loopne
mov
test
dec
sub
mov
cdq
imul
or
ret
or
mov
fbld
ror
pop
shl
nop
pop
sahf
cmps
xchg
xor
mov
mov
in
out
adc
adc
sub
pop
aaa
push
mov
(bad)
movs
cmp
les
mov
jp
data16
jae
and
xchg
mov
into
dec
aaa
test
in
cmp
jle
mov
cs
xchg
push
cmc
xchg
push
xchg
fisubr
dec
dec
adc
mov
div
jmp
ret
rcl
mov
xchg
ds
adc
dec
push
not
pusha
lods
mov
mov
sahf
out
mov
mul
adc
adc
shl
stos
bound
rcr
cmps
outs
jbe
jge
xchg
shr
adc
das
ret
rcl
fs
push
leave
sbb
mov
push
or
dec
out
dec
mov
xchg
js
lock
dec
cmp
adc
push
sub
mov
inc
push
fst
aaa
(bad)
fist
rcl
push
sbb
mov
mov
add
test
into
jo
outs
cmp
out
add
cmps
out
sbb
mov
push
xor
mov
inc
fmul
mov
xor
xchg
push
jo
aaa
mov
cmp
ror
push
fild
push
mov
xchg
or
cmp
pop
mov
clc
(bad)
cwde
or
add
and
or
lahf
jge
jecxz
pop
pop
and
push
or
movs
cmp
out
maskmovq
test
fdiv
stc
dec
or
add
mov
and
xor
xchg
and
arpl
cs
inc
xor
pop
adc
aad
jae
push
mov
dec
fstp
(bad)
xchg
pop
push
enter
je
cmp
ins
jecxz
pop
pop
pop
aad
jmp
fisttp
test
outs
mov
test
scas
jmp
(bad)
ins
dec
adc
push
mov
std
mov
mov
inc
test
int
icebp
pop
in
xor
xor
cmps
push
stos
retf
js
adc
xchg
rcl
fdivr
push
in
rcl
xlat
in
push
nop
pop
pop
xchg
rcr
stos
and
bound
(bad)
pop
sub
inc
xor
out
push
jg
pop
xchg
sbb
inc
fcomi
popf
pop
sti
or
cwde
cs
push
sbb
idiv
dec
fldenv
cmp
fisttp
lock
push
or
xchg
out
mov
test
jo
mov
jecxz
and
clc
call
or
cmp
inc
dec
mov
push
cmp
jb
std
pop
in
(bad)
sbb
jl
shl
int
lea
popf
xchg
test
mov
mov
aam
gs
hlt
inc
or
mov
pop
enter
shr
or
jmp
or
xor
jns
cmp
adc
cmp
and
stos
pop
or
dec
out
rol
xchg
ja
xor
pop
or
addr16
shl
mov
jmp
repnz
or
add
les
in
lea
clc
push
addr16
les
loop
int3
inc
pop
adc
pop
jne
(bad)
push
dec
mov
pop
mov
fisttp
adc
xchg
frndint
pop
add
mov
mov
push
pop
movs
ja
in
or
cmps
pop
cmps
inc
sar
loope
pop
push
push
jne
jbe
aad
jp
fwait
stc
rol
loope
cmp
sbb
daa
test
adc
out
add
cmp
arpl
mov
mov
ja
mov
adc
int3
mov
add
mov
inc
inc
lahf
call
pop
mul
and
pop
out
or
(bad)
retf
pop
gs
dec
jb
jbe
push
cld
adc
fs
add
adc
call
scas
xor
div
pop
in
hlt
mov
jp
inc
nop
jo
mov
test
or
add
mov
sbb
jge
cmp
or
sahf
add
or
mov
dec
repnz
cld
(bad)
fwait
js
mov
or
sahf
leave
and
pop
mov
call
cmp
ret
push
mov
imul
or
mov
xor
call
adc
mov
fnstcw
int3
iret
xchg
mov
xor
sub
push
adc
xor
xchg
sub
enter
cwde
mov
test
xchg
cli
dec
(bad)
pop
mov
pop
hlt
xchg
pop
and
adc
sub
(bad)
cli
or
push
int3
test
jge
stc
mov
test
xchg
lods
addr16
gs
pop
cmp
pop
ins
and
test
cmp
jne
out
test
cwde
je
mov
inc
movs
call
xchg
add
pop
clc
xor
inc
or
rcl
mov
cmps
es
(bad)
jge
push
lea
jne
sahf
jle
mov
imul
out
lods
movs
push
sbb
xchg
and
mov
push
jns
mov
push
div
fild
fwait
sbb
lahf
push
out
sbb
cmp
sbb
push
sub
ficomp
add
jae
imul
adc
nop
push
xchg
call
std
jae
mov
push
fwait
add
dec
add
sub
mov
cmc
int
inc
mul
shl
repnz
xor
dec
sub
jp
pushf
xor
push
int3
shl
retf
cdq
ja
mov
call
mov
js
jge
sbb
pop
sbb
into
jp
imul
push
dec
dec
ja
dec
adc
in
add
jae
setbe
and
fnstenv
ins
or
cmp
xchg
add
jl
mov
jne
jne
inc
fisub
int3
imul
and
into
popa
clc
dec
sbb
cmc
cmp
mov
add
xlat
pop
jp
or
rcr
push
lds
fwait
sti
inc
dec
in
aad
sub
dec
in
dec
call
in
outs
stos
adc
mov
push
push
adc
into
xor
bound
xor
adc
jmp
or
pop
les
dec
sar
out
and
hlt
pop
jp
sti
add
test
dec
popa
dec
test
inc
sbb
xchg
add
inc
push
lds
gs
mov
pop
cdq
out
xchg
or
jg
pop
mov
in
sub
(bad)
scas
xor
jo
das
icebp
add
mov
mov
lock
sbb
sar
dec
into
push
outs
into
lea
xchg
inc
sub
sub
lods
outs
cmp
pusha
cs
fistp
out
cmc
push
push
xor
mov
inc
mov
hlt
popa
inc
retf
jl
gs
call
es
jmp
mov
stos
aad
mov
add
inc
clc
inc
jo
or
sbb
retf
and
adc
aad
mov
popa
pop
fwait
add
xor
jecxz
jge
adc
xor
xor
fs
adc
sbb
jns
push
ja
mov
test
es
ja
xchg
or
mov
jle
mov
cdq
pusha
movs
mov
xchg
out
cmp
ins
rcr
in
jbe
sti
pop
ficom
shl
and
jo
lahf
xor
pop
push
cs
mov
out
int3
mov
shl
xor
adc
stos
jge
rcl
data16
sti
mov
loopne
movs
scas
cld
les
push
or
je
in
shl
inc
ror
xor
cdq
mov
sub
push
mov
adc
jb
mov
add
std
ja
sub
mov
adc
push
popa
push
shl
or
ins
pop
scas
stc
cwde
push
jmp
(bad)
arpl
mov
test
aas
mov
aaa
movs
add
pop
sub
cmp
test
and
retf
sbb
fimul
aam
in
jl
jnp
dec
jmp
lds
outs
jns
call
daa
jbe
fdivr
ffreep
lods
cmp
pop
jl
cwde
ja
jae
addr16
or
mov
cmp
pop
(bad)
fimul
push
addr16
leave
xor
xor
(bad)
mov
rcl
lods
imul
xlat
cmps
imul
cmp
push
and
dec
iret
adc
lods
inc
rcl
pop
repz
add
pop
dec
lods
push
pusha
sbb
mov
inc
test
pop
jmp
mov
mov
pop
stc
out
xchg
mov
icebp
std
loope
inc
hlt
dec
xor
jb
aad
and
push
push
out
mov
push
cmps
lds
mov
jge
pop
pusha
cmp
jle
adc
sbb
adc
test
sub
sar
cdq
inc
mov
in
jb
adc
mov
sbb
cmp
shl
jge
xchg
jb
add
(bad)
pop
stos
mov
es
mov
in
jb
popf
sub
push
leave
outs
fisub
in
jne
and
cld
mov
jns
enterw
pop
dec
rcl
ret
push
push
stc
iret
mov
cld
xchg
inc
inc
ins
fild
xor
xchg
cmp
mov
push
scas
pop
test
xchg
ret
mov
(bad)
fidiv
or
jno
add
mov
movs
movs
cmp
icebp
adc
pop
mov
pop
or
push
or
in
cmp
mov
ins
fistp
clc
fdiv
xchg
fst
cdq
neg
sub
ins
stos
mov
and
fdivp
jo
les
in
or
jg
dec
icebp
pop
hlt
adc
xchg
pop
push
loope
call
retf
mov
cmps
in
xor
pusha
adc
mov
jg
sahf
xchg
ins
xchg
xchg
mov
and
call
leave
inc
cmp
nop
xchg
pop
loop
jne
pop
hlt
call
adc
pop
mov
inc
icebp
aas
push
mov
xchg
ja
dec
jge
push
xchg
(bad)
cmc
or
mov
mov
lods
repnz
push
or
cmp
push
sbb
mov
(bad)
ficomp
push
sti
aaa
jnp
inc
jp
call
and
imul
fisub
in
cld
daa
fdiv
xchg
xor
jle
xor
cwde
retf
and
dec
mov
je
add
add
ficomp
jmp
mov
adc
test
aad
dec
lock
ins
cli
iret
push
push
or
mov
sbb
std
out
xchg
mov
pushf
mov
and
jg
push
cs
sar
shl
mov
ror
and
mov
lock
add
adc
inc
gs
pushf
xchg
in
sub
pop
and
pop
outs
fst
pop
rcl
sbb
movs
scas
ins
rcr
test
in
clc
fldenv
push
gs
xchg
retf
in
stc
sahf
mov
inc
mov
call
cld
stc
xlat
fsubp
push
jp
adc
cli
(bad)
shl
mov
cwde
in
fistp
xchg
or
and
cdq
retf
mov
xor
imul
sub
inc
cmp
add
xchg
pop
mov
call
hlt
push
scas
loop
retf
fwait
dec
aas
(bad)
popa
sub
and
(bad)
es
cmp
shl
ret
push
test
test
(bad)
or
fsubr
movs
ins
inc
in
jmp
out
sub
jb
xchg
xchg
fadd
retf
or
mov
xchg
test
or
mov
mov
mov
add
push
adc
dec
mov
pop
lods
adc
inc
data16
into
jmp
daa
pop
pop
shl
jns
gs
pop
lahf
mov
jecxz
lods
movs
rol
inc
mov
repz
xor
loopne
fstp
or
and
(bad)
mov
pop
mov
and
xor
(bad)
jns
lahf
popf
cld
mov
ins
jns
adc
cld
add
out
xor
ret
xor
loopne
push
es
jo
pop
adc
add
cmp
not
ja
dec
jmp
xchg
cmp
xor
fwait
sub
mov
arpl
xchg
stos
ins
add
and
or
loop
sub
xchg
pop
cwde
or
test
retf
xor
(bad)
(bad)
adc
je
popa
cmps
jo
js
es
and
cmp
dec
dec
cmp
add
cmps
adc
inc
mov
call
xchg
or
jae
cli
jae
aam
pusha
pop
add
add
add
adc
test
cmp
fstp
mov
out
outs
push
rcl
das
inc
and
push
addr16
mov
mov
fdiv
gs
movs
cmc
scas
scas
cmp
xchg
cwde
cmp
inc
loop
push
or
sub
inc
fcom
push
jno
fild
lock
and
int
rcr
jo
sub
dec
frstor
mov
push
dec
xchg
cli
add
movs
lds
dec
and
in
push
jecxz
fsubr
pop
ins
iret
jmp
(bad)
mul
popf
rep
push
sti
inc
gs
in
shl
mov
test
or
inc
push
fwait
push
adc
sahf
xchg
pop
cmp
jl
(bad)
fidivr
xchg
pop
xchg
mov
repnz
ret
sub
sbb
cmp
mov
cmp
and
aas
test
loopne
push
mov
mov
popa
into
add
or
je
push
cmp
(bad)
dec
(bad)
cmp
retf
lahf
enter
rcl
ret
push
dec
jbe
adc
sbb
xor
in
jo
mov
sbb
mov
imul
lds
mov
xor
cmp
scas
aaa
pop
mov
jle
or
pop
les
jge
(bad)
stos
jmp
mov
mov
mov
jnp
cwde
adc
jge
xor
ins
(bad)
mov
pop
mov
jns
test
movs
or
mov
cmc
cmp
hlt
xchg
outs
xchg
pop
xor
pusha
das
test
xchg
fistp
mov
jmp
mov
adc
js
push
mov
fwait
out
xor
je
jmp
jl
pop
pop
mov
das
jmp
dec
pop
lahf
dec
fistp
adc
sbb
lds
xor
and
mov
in
sub
retf
daa
sub
test
cmc
mov
and
(bad)
push
add
test
ja
mov
mov
popa
or
out
add
adc
(bad)
cwde
add
xchg
mov
sahf
push
jo
cwde
xor
sub
shl
in
jbe
add
call
fistp
out
pop
test
mov
fmul
push
dec
jmp
mov
jecxz
int
es
cmps
jecxz
jle
push
(bad)
in
push
repnz
addr16
jb
cmp
dec
add
jnp
imul
test
aas
mov
cmps
xor
or
pop
loop
sub
pop
dec
call
mov
leave
add
nop
clc
icebp
iret
adc
mov
adc
push
adc
jmp
mov
jne
xchg
xor
push
aas
mov
jno
jo
addr16
jbe
jge
rcl
cmps
clc
inc
xchg
std
add
shr
mov
xchg
icebp
cmps
add
(bad)
push
fsub
aam
loope
xchg
stc
cwde
mov
mov
hlt
fisubr
popf
cmp
ror
jne
push
jae
shl
xchg
fldcw
sti
dec
push
call
cmp
and
or
sbb
shl
repz
xor
lahf
mov
mov
push
jns
dec
pushf
adc
cmp
cs
rol
cmp
sbb
cmp
addr16
cmp
scas
aaa
mov
xchg
inc
mov
sub
cmc
add
clc
dec
outs
xor
mov
pushf
loopne
and
adc
loop
sar
fst
sub
xchg
fsub
scas
push
xchg
xor
and
int
lahf
(bad)
and
stos
mov
imul
ss
iret
movs
pushf
dec
sub
cmp
fiadd
fld
pop
loop
inc
in
nop
cmp
pop
shr
sbb
mov
fs
push
das
xchg
leave
sub
jg
mov
sbb
call
leave
add
xchg
mov
xor
and
or
rol
xlat
or
mov
xchg
ins
mul
loope
sub
retf
jmp
inc
inc
pop
rcr
add
sbb
jmp
xchg
ja
inc
pop
ret
out
jge
call
(bad)
push
(bad)
scas
icebp
mov
ror
cmc
mov
pop
daa
hlt
das
hlt
lods
xor
popf
cmp
cli
clc
sub
pushf
mov
xor
inc
mov
pop
dec
scas
dec
mov
stc
inc
les
je
stc
jnp
ds
in
hlt
sub
inc
xlat
fs
mov
cmp
fldcw
adc
std
mov
push
ja
pop
mov
mov
push
ins
mov
in
js
movs
push
dec
imul
jge
and
dec
imul
call
dec
not
test
jle
ficom
xor
cmp
mov
cld
js
inc
leave
out
pop
cmp
lea
xor
add
dec
mov
jmp
sub
ja
in
pop
movs
lds
bound
in
jp
cmp
pop
xor
mov
xchg
out
sub
shl
outs
imul
out
sub
inc
jecxz
(bad)
out
adc
inc
inc
sti
adc
xchg
outs
stos
je
lea
sbb
dec
adc
ins
dec
stc
jbe
stos
cmps
jl
scas
gs
jp
xor
mov
add
call
ret
mov
inc
mov
rcr
pop
das
int
imul
stos
into
and
ficomp
fwait
adc
or
xchg
jmp
xor
ins
adc
push
jne
pop
ins
out
dec
ror
push
adc
add
cmc
jecxz
(bad)
cwde
push
and
adc
push
adc
mov
mov
or
(bad)
imul
mov
shl
retf
jg
jmp
mov
pop
inc
outs
into
mov
dec
mov
test
aas
dec
sbb
cmc
scas
pusha
cmp
jg
adc
jne
shr
jg
push
repz
mov
inc
inc
mov
not
inc
adc
int
imul
sbb
add
dec
sub
test
inc
pop
sub
sub
rcl
jecxz
fcmovnb
inc
inc
sub
sahf
or
push
pop
out
sub
das
rcr
mov
imul
add
and
jg
xchg
or
cwde
loop
(bad)
fadd
sub
cs
(bad)
aas
jge
push
xor
cmc
loopne
jl
jmp
push
aam
mov
lods
jae
jns
cmps
ret
mov
mov
inc
ins
(bad)
mul
icebp
jle
pop
mov
lock
dec
loope
mov
shr
out
clc
cmp
pushf
adc
clc
outs
xchg
pop
imul
aas
bound
sub
adc
add
and
mov
and
or
daa
and
punpckldq
out
mov
lods
(bad)
add
sar
push
adc
aas
mov
jae
inc
rol
das
dec
xor
stos
les
mov
dec
fcomp
in
les
clc
jbe
ret
aam
and
mov
scas
xchg
sbb
xor
loopne
call
mov
sub
pushf
pop
(bad)
fs
fist
lea
lea
jns
lea
call
and
adc
mov
int3
pop
movs
inc
pop
enter
xlat
jns
cld
mov
add
rol
ret
pop
jp
es
(bad)
cwde
cmp
xor
jns
xchg
lock
test
xchg
xchg
pop
popf
cmp
ror
fsub
scas
adc
mov
pop
and
mov
into
rol
ins
fwait
jl
push
push
sahf
ret
daa
ins
mov
inc
arpl
and
fst
clc
xor
bound
int3
inc
push
aam
sbb
xchg
jns
sub
xlat
test
xor
idiv
pop
jns
leave
jge
scas
sti
lahf
jns
aam
jmp
(bad)
mov
or
mov
rcl
(bad)
enter
add
push
(bad)
adc
sar
es
enter
rcl
push
repnz
test
jmp
imul
lods
cmp
or
mov
hlt
jl
sbb
sbb
sub
cmp
(bad)
xlat
jg
jo
ret
cmp
in
test
shr
pop
nop
sti
mov
addr16
sbb
add
adc
retf
mul
lea
mov
pop
inc
ror
mov
out
inc
xchg
pop
pop
clc
add
dec
call
outs
push
pop
xchg
mov
dec
imul
dec
xor
jno
aad
(bad)
daa
call
push
jmp
xchg
jmp
loopne
icebp
inc
sbb
and
pusha
in
retf
mov
pop
xchg
retf
xchg
or
pop
push
loopne
add
sub
das
push
pop
popf
fst
ins
into
and
push
sub
mov
and
cmps
mov
dec
inc
out
(bad)
popa
rol
sub
pushf
mov
imul
es
pop
les
jo
add
mov
mov
fisttp
jnp
xor
shr
xchg
xchg
pop
ret
test
jae
adc
lahf
pushf
sub
(bad)
lock
enter
dec
lds
ret
lahf
ins
sbb
mov
and
imul
sbb
data16
mov
es
add
sbb
and
dec
enter
call
hlt
paddd
addr16
test
push
mov
jno
inc
shl
sub
shl
in
je
dec
popf
ret
jnp
dec
mov
out
cli
pop
xor
shl
and
cmc
repnz
mov
fsubr
jmp
mov
xor
adc
xchg
je
outs
addr16
sbb
xor
test
mov
scas
in
(bad)
(bad)
clc
inc
cld
mov
xor
lds
imul
sbb
xchg
fbstp
mov
call
jg
out
movs
mov
xchg
(bad)
jg
mov
ja
loopne
int3
pop
mov
push
push
jle
mov
pop
lds
scas
or
or
fdiv
jmp
and
shl
stc
pop
repnz
test
out
(bad)
mov
xchg
loopne
daa
shl
jae
dec
mov
stc
add
mov
ins
pop
or
push
stos
push
inc
mov
rcr
jge
jmp
enter
cmp
stc
ret
jnp
mov
lods
pop
jne
mov
mov
scas
leave
mov
in
repz
push
add
imul
push
into
repz
ret
sub
push
xchg
cmp
scas
shr
push
outs
js
push
aaa
jl
fisttp
je
sti
mov
jb
cmp
inc
mov
xchg
pop
mov
clc
jp
mov
ins
std
std
fisub
ds
xchg
push
fdivr
mov
movs
mov
cmp
xchg
repz
jmp
cmc
cli
movs
pop
add
out
lods
fs
movs
inc
mov
popf
push
or
xor
mov
jns
push
sbb
jb
push
ins
ror
shl
inc
test
shr
xor
or
mov
stc
push
mov
rcr
pop
inc
sub
push
retf
add
xor
cdq
mov
inc
mov
scas
add
xor
and
dec
add
dec
je
ret
sahf
cmp
(bad)
fdiv
pop
push
push
pushf
sub
cli
push
xor
mov
jo
fs
dec
das
dec
pop
jecxz
cmp
ror
add
mov
pushf
sbb
cmp
mov
test
mov
movhps
es
fisubr
mov
adc
push
add
cdq
mov
xchg
(bad)
and
cmc
mov
fcmovnu
and
std
cli
push
ins
in
jge
xchg
mov
fmul
sub
sbb
call
adc
mov
or
ins
sbb
(bad)
jns
gs
outs
mov
or
shr
push
fs
inc
shl
pop
mov
xchg
push
adc
jg
inc
mov
mov
sub
dec
enter
add
movs
push
pop
mov
icebp
adc
(bad)
mov
stos
jg
div
xlat
push
cdq
push
shr
leave
ins
jmp
fld
cld
mov
jno
mov
adc
jmp
into
mov
ins
push
mov
sti
lea
xlat
rcr
xchg
in
push
rcl
push
push
fsubr
int3
sbb
mov
retf
xchg
rol
jle
pop
cwde
cs
push
jp
sar
cmp
iret
mov
push
lds
pop
inc
mov
xor
jne
jp
lahf
retf
(bad)
jge
js
mov
retf
adc
adc
mov
sbb
clc
lods
out
or
mov
inc
sti
sub
push
xchg
into
mov
repnz
add
repz
movs
jb
xor
stos
inc
or
je
inc
fist
fistp
ror
aam
dec
test
and
dec
inc
inc
fldcw
call
pop
imul
out
mov
cmp
push
stos
and
shl
je
push
idiv
repnz
xor
ins
and
cli
mov
lods
mov
repz
ret
jg
imul
dec
and
ins
xor
push
fstp
pop
inc
mov
cmp
inc
repz
cmp
xchg
movs
jmp
pusha
out
out
ret
std
push
mov
push
sub
ret
lods
movs
adc
mov
inc
sahf
jmp
outs
les
jns
fld
nop
xor
test
adc
pushf
sti
and
xor
xor
jbe
adc
data16
adc
aad
icebp
jnp
mov
retf
int3
xchg
and
mov
mov
in
in
cmp
cmp
mov
mov
or
pop
mov
pop
int3
push
retf
enter
add
div
sbb
sbb
jg
sahf
mov
add
and
fdivrp
mov
test
and
daa
dec
dec
ror
cs
mov
cmc
dec
aad
inc
jb
inc
cmp
jmp
add
ds
mov
jle
push
or
in
sahf
ins
mov
js
mov
cld
pusha
pop
pop
add
psadbw
xchg
mov
ja
clc
push
inc
ja
push
xchg
xchg
jae
int3
imul
mov
push
(bad)
ds
mov
loopne
repnz
rcr
and
inc
and
and
xchg
fmul
in
sub
cmp
in
inc
jl
pop
mov
clc
pushf
popf
xchg
add
inc
sub
cmp
call
push
mov
xchg
add
or
out
popf
aad
es
add
push
into
test
pop
repnz
std
mov
xchg
retf
mov
pop
pop
(bad)
repnz
xor
repz
adc
mov
mov
push
and
repz
pop
mov
dec
stc
in
lods
xchg
sbb
mov
repnz
adc
inc
sti
dec
cdq
sub
fsubr
icebp
add
test
mov
xchg
sbb
imul
mov
loope
hlt
or
push
or
inc
mov
(bad)
cmp
jno
sub
call
sar
adc
je
mov
adc
dec
test
clc
cmp
inc
mov
ins
jns
lds
pop
cmp
sbb
inc
in
pop
and
xor
inc
rol
mov
lods
sub
dec
in
iret
test
out
out
arpl
ja
mov
inc
imul
loope
shl
jns
add
sub
loopne
jmp
adc
push
idiv
out
jp
adc
loope
jge
xchg
ins
sub
jle
aaa
or
jl
mov
loop
imul
jge
push
in
push
mov
push
cmp
cmp
sub
out
or
jnp
nop
push
imul
add
clc
(bad)
sub
arpl
repz
xor
into
inc
mov
push
imul
sahf
sub
mov
mov
cmp
inc
pop
jmp
push
mov
xchg
add
push
bound
cmc
dec
pusha
aaa
out
lds
push
mov
sub
stos
repnz
mov
push
sbb
les
mov
(bad)
pusha
js
fcom
stos
add
xor
push
movaps
enter
lods
jp
pop
jg
mov
data16
jg
rcl
pop
ja
xor
xchg
es
ja
repnz
and
xchg
sub
cmps
jmp
jp
movs
mov
call
jbe
popa
xor
mov
xor
fs
jnp
pop
add
push
cmp
xor
push
add
dec
xchg
xchg
idiv
mov
xor
and
push
push
add
aam
retf
pop
ss
mov
xor
mov
jns
xor
xor
in
test
(bad)
dec
jne
aam
sbb
push
aam
or
iret
jns
add
jmp
icebp
or
inc
fs
mov
ret
add
cmp
adc
in
mov
xor
fsub
ror
jno
mov
out
pop
lods
ins
stos
and
movs
in
mov
lock
out
fs
or
push
jns
jmp
xor
fild
(bad)
outs
loop
push
jle
stc
fmul
mov
enter
and
ds
push
fdiv
xor
call
or
mov
push
cmp
jo
mov
cmps
scas
jp
jb
jecxz
push
jle
and
sub
ret
shl
repz
push
inc
(bad)
jae
icebp
fist
mov
repnz
jae
addr16
fsubr
idiv
shl
daa
push
xor
mov
fistp
xchg
mov
pop
div
sbb
scas
mov
mov
push
aas
addr16
mov
repnz
mov
add
mov
jae
mov
pop
call
pop
aaa
pop
adc
mov
int3
pop
inc
jp
push
push
imul
push
xor
dec
push
mov
fs
pop
mov
adc
mov
sbb
stc
inc
push
xor
mov
push
and
jns
jg
das
aaa
out
dec
jp
loope
stos
test
and
das
enter
inc
leave
ss
fnstenv
lock
push
outs
loopne
pop
in
adc
shl
(bad)
cmp
lahf
mov
xor
push
shufps
sbb
inc
shr
repnz
clc
arpl
(bad)
(bad)
in
shl
fpatan
dec
add
cmc
push
call
jp
adc
mov
fcmovnu
icebp
aam
add
into
aaa
push
(bad)
or
sbb
ret
fisttp
add
repnz
scas
scas
in
(bad)
mul
pop
fcomp
cs
jp
repz
enter
add
repz
ins
xor
adc
pop
das
xchg
xlat
xor
das
inc
(bad)
lahf
push
lea
mov
xor
jl
loop
or
mov
scas
add
mov
test
sub
mov
in
rcr
push
je
mov
mov
into
mov
(bad)
cmp
or
mov
xchg
add
adc
jne
in
int3
mov
aam
inc
cmc
ficomp
jmp
pop
sahf
icebp
aas
in
sbb
and
cmps
dec
xlat
int3
ds
aas
out
lea
ja
out
fsubr
call
pushf
xor
mov
dec
dec
xor
cmp
loopne
pop
adc
push
pop
ins
retf
jae
cdq
(bad)
sub
fistp
retf
mul
fdivr
add
mov
xchg
retf
adc
clc
cmp
inc
dec
popa
fucomi
std
ins
out
xchg
je
pop
into
jmp
jl
inc
scas
push
and
repnz
and
mov
sar
js
push
inc
or
ds
scas
xchg
adc
dec
mov
gs
in
stos
xor
push
popf
iret
sbb
stc
popf
sbb
jmp
iret
aaa
pop
push
add
mov
mov
call
je
inc
(bad)
mov
test
and
mov
sbb
call
pop
test
lea
jge
mov
ins
call
xor
in
push
push
test
jp
stos
mov
jle
sub
dec
pop
pop
es
in
cdq
mov
jl
lods
or
retf
mov
imul
mov
repz
repz
sub
fmul
push
mov
push
(bad)
int3
mov
adc
fbld
mov
pusha
scas
mov
pop
inc
push
test
xor
cmps
inc
fwait
pop
mov
mov
test
or
jnp
stc
icebp
xor
mov
mov
ss
mov
add
adc
xor
jmp
rcl
push
out
push
adc
mov
rcr
dec
sbb
loop
or
dec
or
xor
add
not
ss
add
adc
cli
dec
enter
int
sbb
call
jmp
jne
(bad)
popf
leave
sub
sahf
mov
call
mov
fmulp
cli
pop
rcl
sub
xchg
dec
pop
inc
(bad)
xor
jle
cmp
cdq
mov
jg
shl
hlt
(bad)
cmps
or
pop
ror
cmps
jmp
psubb
data16
jge
push
je
mov
popf
dec
jno
cmp
fld
test
mov
nop
xor
stc
xchg
rcr
mov
push
pop
xor
xlat
popf
mov
mov
jae
xor
xor
ss
loopne
ret
scas
pop
in
xor
cmp
jmp
xor
push
(bad)
mov
jne
(bad)
push
sbb
xor
test
popf
xor
mov
movs
bound
aad
mov
stc
clc
mov
push
dec
sub
dec
pop
jne
cmp
sub
ds
and
imul
pop
call
mov
imul
sbb
mov
cmp
inc
dec
into
push
outs
shr
dec
sub
into
mov
scas
sbb
dec
lods
mov
adc
inc
ror
add
outs
cmp
call
popa
test
mov
mov
cmp
adc
push
xlat
pop
pop
xor
ins
imul
cmps
fld
push
js
jmp
mov
rcr
sub
inc
jae
mov
inc
dec
cmp
mov
sub
dec
mov
mov
in
ss
sbb
(bad)
movs
dec
popf
aas
(bad)
adc
out
jo
push
std
jg
inc
stos
dec
mov
daa
push
movs
jnp
adc
dec
pcmpgtd
xor
and
gs
jp
call
mov
ret
imul
and
cmp
sub
movs
sub
sbb
lea
loop
dec
(bad)
jnp
in
lods
inc
mov
in
pop
lods
cmp
mov
jns
xor
es
push
addr16
lods
pop
jl
inc
hlt
jmp
push
cmp
js
fidivr
mov
sub
clc
int
pop
jecxz
hlt
popf
mov
xchg
inc
sbb
sub
dec
mov
jle
mov
push
xchg
movs
mov
int
dec
add
adc
jp
xchg
in
sub
loop
pop
arpl
loope
mov
jae
xchg
fisttp
jbe
fnstsw
and
ret
xchg
mov
mov
jns
pop
dec
push
int
inc
fldenv
addr16
lods
mov
sbb
and
mov
adc
sbb
mov
lea
(bad)
enter
inc
movs
xor
rol
sub
push
rol
or
jae
mov
aas
mov
push
mov
es
je
test
imul
and
mov
test
sub
mov
movs
test
dec
adc
push
sbb
jmp
das
neg
arpl
les
push
(bad)
aas
jle
xor
mov
or
cdq
push
or
test
aad
inc
xchg
lods
sbb
fwait
ins
enter
inc
and
loope
xchg
sti
mov
or
cli
pop
dec
mov
sti
mov
push
and
cld
mov
xchg
pop
lods
jp
jmp
ja
pushf
mov
sub
mov
adc
fcomp
into
clc
sub
and
xchg
mov
xlat
sbb
sbb
cs
sbb
mov
std
xchg
xchg
daa
xchg
int3
rcl
xor
add
and
rcr
xchg
cli
adc
sbb
add
cmp
sub
adc
pop
rol
retf
cmp
jne
call
add
mov
xor
mov
scas
pop
je
jb
or
inc
in
xchg
pop
and
add
enter
ins
or
out
or
fs
inc
cdq
inc
in
inc
sbb
push
jb
sub
outs
aam
movs
mov
lods
mov
mov
ror
jecxz
into
xor
add
add
jb
jno
jb
and
out
or
dec
cmp
xchg
xor
int
xlat
mov
mov
jne
sub
int3
int3
xchg
push
fld
fwait
xor
jae
push
mov
add
scas
inc
bound
adc
aas
mov
pop
ins
xchg
pop
jbe
ret
dec
jle
adc
(bad)
pop
jmp
jo
xor
data16
push
mov
jp
ds
add
mov
aam
jb
xor
and
dec
push
clc
mov
fldcw
dec
mov
xor
push
out
int3
mov
lods
xor
and
test
mov
xchg
mov
sbb
xchg
sbb
lods
scas
push
cmc
repz
std
(bad)
dec
sub
inc
xchg
add
stos
pop
outs
dec
push
fild
popa
pop
sbb
add
adc
jb
mov
sub
aas
xor
jne
cmc
mov
jbe
call
cmp
movs
push
mov
xor
(bad)
adc
icebp
cdq
pop
xor
add
mov
dec
(bad)
out
in
mov
call
mov
add
das
fild
lea
push
and
adc
fcomp
retf
out
adc
test
sahf
add
xor
xchg
dec
std
movs
mov
lea
jne
fmul
add
mov
sbb
daa
out
dec
sahf
sbb
inc
mov
add
jp
shr
in
push
jg
or
retf
cwde
movs
inc
cmp
sti
pop
mov
outs
leave
mov
cmp
inc
dec
sbb
imul
dec
bound
lods
ror
inc
dec
(bad)
mov
cmp
jg
retf
stos
jae
mov
sub
adc
jg
jmp
test
div
dec
xor
enter
and
adc
or
xor
test
xlat
push
push
cli
inc
repnz
icebp
fiadd
jae
ins
scas
push
mov
inc
data16
adc
cmp
jg
and
inc
jb
ins
das
push
push
lea
test
jle
push
retf
cdq
mov
aas
and
pop
(bad)
add
pop
mov
jns
loopne
mov
or
mov
fld
aaa
push
cmp
out
mov
daa
jg
std
retf
jmp
xlat
retf
add
pop
repz
imul
lea
xchg
test
sbb
pushf
cmp
sahf
sbb
push
loop
das
icebp
adc
fxch
xchg
mov
leave
out
xor
add
adc
sub
push
add
adc
jmp
xor
fcmovb
mov
sahf
inc
or
(bad)
shr
loop
xor
inc
jmp
and
movs
in
addr16
lahf
pop
inc
jg
sub
lea
push
push
scas
dec
sbb
fcmovnb
push
jmp
fldenv
sbb
dec
sbb
lahf
(bad)
inc
mov
ins
push
add
stos
push
dec
push
mov
mov
fwait
inc
jne
movs
ja
mov
push
icebp
xor
sub
inc
jmp
mov
jno
fnstsw
or
ss
gs
pop
push
into
sbb
cmps
mov
mov
popf
sahf
mov
gs
and
cs
inc
cmp
jmp
lods
les
mov
sub
pop
adc
push
inc
stos
aad
div
gs
ret
fs
inc
lods
xor
mov
in
mov
sbb
les
scas
dec
outs
popa
fs
imul
mov
pop
push
pop
dec
xor
mov
ret
(bad)
cwde
rcl
or
int3
test
movs
clc
mov
or
xchg
mov
scas
int
movs
mov
dec
push
jno
mov
sbb
mov
xor
xchg
and
xor
fwait
out
rol
dec
push
push
jae
std
arpl
fdivr
adc
push
icebp
shr
aam
xor
mov
test
jne
xor
or
out
nop
push
xchg
dec
vcvtpd2ps
mov
dec
jo
mov
mov
cwde
sti
xchg
stc
adc
fucomp
hlt
test
(bad)
add
aad
test
jno
mov
in
adc
lds
int3
mov
not
push
mov
iret
xchg
fld
or
add
sar
cmp
mov
adc
and
mov
fild
add
or
inc
mov
mov
dec
adc
outs
push
les
das
push
sbb
aad
addr16
dec
(bad)
daa
push
push
and
fcom
scas
stc
icebp
out
ret
out
dec
out
inc
mov
mov
ja
in
es
push
mov
ds
inc
mov
es
inc
sbb
gs
jnp
popf
sbb
pop
les
adc
cmp
scas
and
cmp
inc
pop
shl
xchg
xchg
jg
shl
dec
(bad)
arpl
mov
adc
(bad)
ficomp
xchg
mov
push
fnstcw
clc
rol
out
inc
mov
daa
push
xor
pop
mov
or
push
mov
mov
daa
in
out
inc
push
mov
add
call
jb
aam
xchg
dec
or
pop
sub
shr
or
test
mov
or
in
aam
in
stos
jp
add
cdq
stc
dec
jne
imul
and
dec
lock
add
inc
dec
or
fsub
jge
jmp
dec
in
cwde
and
rcr
hlt
or
call
and
add
push
imul
jo
or
xchg
adc
idiv
icebp
out
ds
addr16
xchg
add
fdivr
pshufw
xchg
sub
mov
inc
icebp
push
jge
(bad)
pop
jle
retf
in
fisttp
fmul
mov
test
xor
fst
mov
jae
sub
or
ja
hlt
xchg
mov
mov
pop
std
dec
xor
ds
imul
mov
fs
mov
inc
ficom
push
ins
lods
cmp
and
mov
adc
mov
xor
repz
cs
dec
(bad)
(bad)
or
stos
inc
adc
mov
in
adc
or
cmp
push
out
popf
push
cmp
push
inc
int
dec
mov
sub
shl
mov
sbb
mov
cs
aaa
xchg
jl
and
mov
inc
mov
mul
push
or
stos
jle
sub
sub
test
cmp
inc
pop
std
push
mov
fst
repnz
xchg
outs
bound
adc
sbb
cli
xchg
inc
(bad)
leave
cmc
or
lock
xchg
mov
test
dec
mov
rcl
jno
mov
rcr
sub
mov
outs
dec
xchg
imul
push
sub
fsub
cmps
ffree
adc
pop
push
repnz
in
test
movs
retf
jb
(bad)
out
pop
mov
sbb
dec
xor
sbb
test
pop
int
pop
sub
add
sub
inc
jg
pop
loop
call
fs
jbe
retf
and
out
mov
xchg
repnz
test
mov
repnz
in
sbb
mov
js
pop
sahf
sbb
dec
adc
je
stc
ficomp
mov
xor
outs
xchg
dec
xchg
xor
shl
call
test
dec
mov
xchg
jg
retf
mov
xchg
sahf
mov
adc
sbb
and
jno
xchg
mov
fisttp
dec
pop
jns
dec
lods
or
test
fist
and
xchg
call
jle
sbb
jge
xor
cmp
jne
call
aaa
jmp
popf
test
daa
stos
xor
adc
add
jno
sbb
cdq
imul
test
push
daa
mov
xchg
pop
cmp
pop
add
js
sub
shl
mov
inc
ror
jp
stc
mov
xchg
js
or
cmp
inc
test
inc
cmps
iret
mov
(bad)
xlat
jae
cmp
mov
es
and
stc
call
dec
add
xor
pop
xor
aam
ret
xchg
dec
in
lea
pop
dec
dec
icebp
fidivr
add
outs
and
and
add
dec
sbb
add
or
and
push
jecxz
pop
cmps
dec
sub
mov
lea
loop
aam
iret
cmp
sbb
pop
fcom
dec
sbb
mov
mov
mov
cld
lods
ins
test
jmp
dec
add
xor
stos
jae
dec
push
and
add
xchg
test
or
xchg
(bad)
mov
jnp
pushf
cmp
inc
fidiv
cdq
rol
mov
sub
mov
mov
ja
mov
pop
mov
into
mul
xor
ltr
inc
test
psllw
test
mov
xchg
hlt
(bad)
iret
mov
cdq
cmp
leave
xchg
sub
cmp
mov
inc
aad
pop
(bad)
push
aam
xor
fcmovnbe
call
jmp
jnp
xor
loop
add
mov
pop
ds
sar
fild
loopne
adc
icebp
int3
jne
mov
mov
lahf
pop
mov
lock
sbb
cwde
xchg
in
movs
outs
cwde
sbb
ret
fmul
retf
adc
retf
cmp
mov
out
inc
ins
jb
leave
push
fbld
fcomp
xchg
(bad)
in
dec
cmp
mov
xchg
pop
mov
mov
pop
adc
ins
loopne
mov
mov
mov
fsubr
loope
and
jne
aad
shr
xor
mov
mov
cmp
(bad)
jle
and
push
enter
mov
inc
repz
out
xsha1
cmps
mov
out
stos
cmp
fs
retf
cmp
loope
repnz
or
into
add
sbb
adc
mov
push
lea
pop
shr
imul
add
and
fs
ret
imul
sub
fwait
iret
pop
add
idiv
fld
mov
inc
fsubr
cmp
addr16
pop
hlt
frstor
imul
arpl
test
pop
sub
cmp
cmp
cmp
out
imul
loope
lods
xor
ins
sbb
sahf
push
ja
push
arpl
xor
sbb
push
(bad)
jo
retf
push
mov
popa
xor
sbb
mov
mov
clc
in
mov
pop
ja
ffree
aas
mov
and
sub
jne
mov
call
fldenv
sbb
jp
adc
cld
test
das
psubd
jb
or
mov
fwait
xchg
jno
(bad)
xlat
or
enter
adc
sub
jmp
imul
lea
xchg
inc
sub
inc
loopne
loopne
add
popa
mov
imul
mov
test
adc
cmps
in
and
cmp
mov
test
xchg
push
jb
les
(bad)
je
fdiv
mov
sub
dec
lock
adc
sar
cmp
dec
arpl
ror
mov
xchg
inc
inc
stos
js
or
inc
jecxz
cmp
inc
loope
cmc
repnz
fist
push
mov
xor
scas
inc
loop
scas
imul
xchg
sbb
in
xchg
test
jbe
bnd
(bad)
sbb
outs
xor
or
xor
call
movs
or
adc
(bad)
mov
push
stos
cli
loop
aaa
rol
mov
pop
sbb
lock
dec
imul
xchg
jp
sbb
inc
(bad)
dec
pop
clc
mov
pop
adc
push
int
jl
lods
imul
(bad)
push
cwde
shl
jg
dec
jae
inc
dec
dec
mov
sub
xor
in
rcr
shl
push
or
fs
sbb
mov
pop
push
dec
xor
in
add
mov
outs
push
add
dec
fild
lea
dec
lods
popf
push
or
fst
jmp
jmp
cmp
scas
movs
push
(bad)
scas
loop
xchg
inc
sbb
les
lea
xor
inc
cmc
mov
lds
push
mov
aas
int
sub
jl
stos
jg
ss
enter
fs
(bad)
aad
repz
jne
add
cmps
sahf
out
gs
inc
out
push
xor
rcr
jne
adc
sbb
jae
pop
retf
(bad)
jp
mov
mov
mov
dec
in
jl
out
outs
aas
shl
cli
gs
xlat
xchg
cmp
icebp
fist
xor
adc
pop
jl
lahf
push
add
in
popf
xchg
xchg
cdq
sbb
sub
es
movs
in
push
sahf
das
js
or
cmps
pop
push
pop
cmp
inc
ror
jge
arpl
or
mov
lods
mov
jae
popa
ss
sub
ss
xchg
xor
mov
aaa
sub
rcl
cdq
int
add
cli
mov
sti
or
test
dec
sbb
jns
outs
add
sub
xchg
mov
mov
call
pop
mov
inc
pop
sbb
mov
push
or
outs
pop
cdq
pop
xchg
hlt
fisubr
xchg
cmc
movs
test
jno
pop
xor
rol
xchg
lds
ss
test
test
and
cmp
mov
pop
add
push
dec
ins
ret
adc
mov
out
sub
or
cmp
mov
fidivr
ins
mov
fimul
cwde
rol
inc
jecxz
fisttp
ins
popf
adc
or
cld
mov
cmp
rcr
hlt
les
pop
inc
test
ja
or
xchg
clc
rol
retf
inc
and
mov
call
sub
and
jle
pop
pop
les
frndint
or
frstor
mov
xlat
add
popa
pop
cmps
pmaxsw
inc
adc
out
push
repz
int
and
dec
mov
(bad)
lds
inc
mov
movs
xchg
out
in
mov
lods
je
test
add
push
rol
sbb
push
stos
nop
and
or
cmp
lea
sub
fild
sub
add
mov
adc
call
xor
cmp
add
mov
xchg
mov
shr
pop
mov
icebp
xchg
push
jmp
out
dec
(bad)
bound
jmp
dec
iret
stos
ins
adc
shl
rol
popa
push
inc
xchg
jmp
loope
mov
sti
movs
loopne
inc
mov
js
cmc
sbb
jge
pop
outs
lods
and
mov
inc
jmp
push
sbb
inc
pop
mov
clc
jno
ror
or
imul
repnz
mov
jnp
out
sti
or
aaa
ins
out
dec
mov
inc
or
(bad)
(bad)
int
mov
cmp
sbb
cmp
xor
dec
enter
ret
mov
pop
test
push
push
iret
inc
clc
ja
sub
push
aam
std
push
xlat
pop
addr16
push
out
out
or
mov
es
mov
outs
fadd
mov
scas
fld
gs
jecxz
lahf
aam
jmp
mov
push
pop
out
in
outs
cmps
lahf
sub
add
sub
loop
xchg
or
sbb
adc
(bad)
shl
pop
fwait
push
sar
call
dec
mov
and
mov
fmul
retf
in
js
mov
dec
aaa
mov
sar
loopne
ss
xchg
sub
sub
mov
fmul
mov
mov
jmp
cs
loopne
inc
mov
sbb
jecxz
xchg
cmp
cdq
repz
pop
out
sub
sub
mov
call
pop
dec
and
mov
fs
inc
xor
bound
push
popf
dec
cs
and
outs
out
std
mov
push
mov
add
cmc
shl
test
dec
jle
mov
pop
lea
iret
push
mov
fcmovnb
mov
call
stos
push
dec
xor
pop
cmc
imul
js
mov
fmulp
pop
test
test
ficom
stos
dec
out
cmp
popa
lds
nop
(bad)
outs
es
jae
xlat
aad
fnstenv
add
mov
aam
cmp
adc
scas
mov
pop
data16
jb
push
sbb
push
ins
sbb
pop
fisttp
daa
cs
inc
jns
js
or
test
xchg
test
cmp
mov
push
ror
xchg
test
jg
fild
in
je
test
jp
xor
push
sti
jns
jecxz
cld
fisttp
pushf
jp
hlt
mov
sbb
cmc
jns
jg
fnsave
ror
or
iret
shl
fsub
fcomp
arpl
ja
test
cmps
ss
xchg
dec
sbb
mov
mov
mov
ficom
das
jecxz
mov
pop
outs
sbb
in
sbb
inc
xlat
lahf
jne
hlt
mov
sub
adc
sbb
sub
xor
sar
pop
out
push
pop
not
dec
mov
push
add
xor
push
pop
(bad)
sahf
mov
loopne
sahf
adc
loopne
jbe
sub
add
push
jecxz
lock
clc
lock
in
cmp
adc
adc
dec
mov
retf
pop
test
les
fldenv
shr
cmp
(bad)
fsubr
adc
bound
in
mov
outs
dec
and
add
shl
test
and
jo
adc
aam
sbb
(bad)
sbb
imul
xor
xchg
fcomp
pop
inc
cmc
jno
ret
or
dec
call
cmps
movsx
xor
or
icebp
xchg
ds
push
(bad)
gs
sbb
xchg
and
je
cwde
addr16
sub
mov
test
pop
rcl
outs
loopne
push
and
mov
add
sbb
dec
adc
pop
ret
rcl
scas
lods
je
dec
or
retf
xor
mov
scas
lahf
in
or
out
cdq
(bad)
fadd
ret
call
xchg
gs
pop
add
jo
mov
sub
mov
call
ins
push
pushf
stc
jl
std
rcl
pop
mov
mov
sub
in
stos
int3
sbb
out
push
cmps
and
mov
pop
enter
imul
add
add
inc
push
cmps
sbb
popf
mov
sub
jbe
ds
ja
xor
bound
les
vpshufd
bound
dec
xor
loop
cmp
xchg
fmul
retf
sub
sbb
sbb
cs
dec
repnz
lds
gs
sub
retf
sub
ins
pop
adc
cmp
cs
cs
sbb
pop
push
or
cwde
sbb
retf
push
out
sub
dec
sti
cmp
stc
xchg
inc
dec
mov
add
cmp
adc
es
cmp
push
xchg
sub
inc
mov
iret
push
fcomp
pop
aam
imul
mov
loop
push
fldenv
in
push
and
add
mov
or
sub
sbb
pop
lods
movs
sub
push
xchg
rol
mov
sub
push
ja
jmp
bound
lahf
popa
clc
and
and
pop
xlat
xor
jmp
sub
pop
cmp
dec
(bad)
mov
jne
lds
sbb
pop
xor
inc
adc
je
mov
push
lock
push
test
sahf
push
push
test
ins
pop
xor
xchg
and
jae
adc
add
and
xor
movs
loop
cmp
shl
cld
xchg
jne
test
imul
cwde
xchg
loopne
jno
nop
test
sub
pushf
push
rol
outs
es
outs
retf
xor
addr16
ins
call
and
pop
nop
or
adc
iret
ror
inc
out
mov
imul
sub
adc
ins
add
fidiv
xchg
out
pop
jbe
sbb
adc
mov
add
cs
shr
jmp
cmp
cmps
sbb
aas
out
cmp
xchg
clc
xor
jge
mov
stos
xchg
fnsave
xor
xor
xchg
jae
mov
mov
adc
ss
adc
stos
scas
push
pop
xlat
out
and
mov
mov
xor
std
jg
sbb
inc
push
repz
add
push
into
or
push
call
sbb
fistp
fnstcw
sbb
out
sti
fisttp
jb
imul
pop
push
xchg
scas
inc
dec
push
pop
cmp
inc
jb
sar
les
dec
std
adc
int
adc
test
sub
rcl
mov
pop
pop
pushf
sub
jmp
cmp
bound
dec
sahf
push
movs
push
out
mov
mov
retf
outs
and
sahf
or
sub
cmps
cmp
pop
cwde
loopne
xchg
icebp
sub
lea
retf
or
pop
jle
in
sub
mov
sub
add
and
push
(bad)
sub
adc
repz
inc
add
ret
inc
cwde
call
mov
shr
inc
sub
dec
add
xor
mov
jmp
mov
sahf
pop
stos
mov
dec
push
repz
xor
js
(bad)
fcom
mov
fs
mov
test
retf
inc
movs
inc
pop
not
sub
adc
cmp
mov
sub
sbb
nop
pop
hlt
(bad)
mov
movs
inc
jne
out
pusha
mov
xchg
sub
add
sbb
jmp
xchg
icebp
inc
imul
inc
rol
push
xchg
(bad)
adc
pop
js
ret
mov
imul
push
xchg
into
loop
pop
int
aam
lahf
aam
dec
mov
push
fdivr
sbb
popf
xchg
test
fwait
sahf
pusha
and
hlt
popa
pop
sub
inc
pop
cmp
and
push
mov
add
and
sbb
fistp
ficom
ficomp
push
push
pop
stos
dec
rcr
and
icebp
cmps
sub
inc
sub
jge
pop
pop
jnp
leave
mov
cmp
lods
cld
or
fcomp
jge
push
push
rcr
out
movs
mov
jnp
xchg
inc
pop
jb
outs
mov
test
xor
pop
xchg
add
inc
lahf
rcr
sub
outs
push
jno
ins
retf
pop
pop
jmp
retf
push
pop
mov
jecxz
mov
pop
loope
mov
neg
xlat
jne
scas
sbb
and
(bad)
xchg
(bad)
cmp
fld
push
push
mov
jle
adc
bound
adc
and
xchg
movs
aaa
icebp
enter
test
sbb
sbb
in
push
(bad)
xor
jb
adc
inc
mov
dec
imul
sbb
jne
into
loopne
sbb
jae
movs
out
jne
jle
dec
inc
jp
out
cmp
mov
pop
dec
mov
cmps
sahf
fs
adc
push
mov
dec
mov
xchg
jo
push
inc
mov
xlat
lods
add
xchg
cmp
inc
adc
mov
fmul
out
aad
scas
mov
stc
cmp
std
add
fcmovbe
adc
jno
push
ret
and
std
inc
popf
fcmovnu
mov
sub
sbb
das
mov
cdq
cmp
mov
jge
sub
mov
call
mov
nop
add
mov
inc
or
fdivr
jmp
sahf
push
pop
fucomi
rcr
pusha
xor
jb
push
and
data16
adc
cmp
retf
mov
push
out
mov
cmp
ja
bound
sbb
pop
or
das
sti
movs
repz
arpl
and
jmp
push
dec
fdivr
outs
xor
adc
mov
or
pop
retf
mov
mov
stc
cdq
cld
cdq
stos
shr
mov
or
push
mov
(bad)
jg
or
ret
cs
xchg
bnd
push
out
lods
neg
cmps
adc
movs
jmp
stos
jnp
sbb
test
or
xor
push
push
mov
adc
lahf
add
and
icebp
std
int3
ins
mov
jmp
jne
mov
dec
xlat
std
(bad)
jbe
sub
jmp
jg
pop
sub
sbb
adc
loopne
in
(bad)
(bad)
inc
pop
xchg
enter
sub
mov
shl
sub
push
sub
inc
rol
push
push
scas
dec
rcr
out
arpl
into
sub
loopne
mov
in
stc
sbb
mov
dec
ins
xchg
maskmovq
neg
push
clc
mov
mov
int3
ins
in
jge
cmp
dec
cmp
mov
outs
add
loope
add
cmp
cmp
inc
xor
and
aas
xor
cmps
out
inc
in
daa
mov
pushf
mov
(bad)
mov
mov
mov
(bad)
mov
loope
adc
test
scas
pop
and
fisttp
dec
rol
jno
les
xor
test
mov
adc
dec
xchg
cs
inc
dec
clc
mov
ror
test
out
loop
mov
and
mov
hlt
(bad)
jecxz
jnp
mov
rcl
push
pop
and
movd
out
movs
jle
outs
xchg
(bad)
jns
mov
lock
(bad)
in
fild
fldenv
cmp
jge
xchg
sbb
stc
iret
add
sub
dec
or
les
les
call
and
adc
shr
in
scas
sub
lock
inc
mov
scas
call
add
popf
adc
inc
mov
pop
mov
fiadd
cmps
push
or
add
mov
mov
jnp
test
movs
mov
inc
xchg
xor
ja
mov
push
loopne
dec
stc
daa
mov
aad
adc
call
push
and
sbb
sbb
xchg
test
fadd
imul
(bad)
fbld
xchg
xchg
dec
dec
push
sbb
inc
(bad)
or
push
loop
mov
cwde
fs
in
ins
add
mov
cmp
pop
sti
shr
test
mov
pop
rcr
or
mov
das
mov
shl
dec
fmul
pop
cmc
cli
xchg
push
fistp
ja
adc
int
ds
test
lods
cmp
loop
xlat
add
out
sbb
xor
sub
xor
call
dec
dec
and
ret
scas
inc
icebp
push
xchg
adc
add
push
stos
mov
rol
imul
or
mov
in
add
lds
sub
call
cld
cmps
xchg
pop
and
leave
xor
outs
sbb
fidiv
sbb
inc
scas
fs
lea
sub
jmp
push
ins
or
mov
mov
xlat
mov
aad
aaa
xchg
push
imul
xchg
push
dec
mov
mov
push
and
mov
xchg
and
push
jmp
mov
xchg
cmp
jecxz
ror
dec
pop
aas
cmps
mov
fld
cld
and
movs
cli
fstp
xor
mov
xchg
cmp
cmp
push
sbb
xchg
jb
xchg
xor
popf
loopne
pop
daa
xchg
pusha
jecxz
mov
inc
push
sub
adc
pop
cmp
or
adc
shr
(bad)
adc
pop
mov
sub
inc
or
sahf
mov
jecxz
mov
nop
ret
loopne
into
icebp
xor
mov
pop
popa
cmp
ja
sbb
outs
aad
imul
mov
inc
or
es
pop
fptan
xor
or
outs
cwde
cdq
into
leave
mov
sbb
inc
imul
push
fidivr
jne
mov
sbb
add
jbe
and
mov
mov
sub
in
jecxz
mov
(bad)
pop
outs
(bad)
sar
sbb
(bad)
xor
loopne
aam
push
icebp
sar
stos
fsubrp
aas
mov
mov
inc
add
mov
fimul
js
push
push
mov
aam
ret
std
sub
fbstp
dec
dec
in
sub
push
and
ins
shl
cmp
cs
loop
icebp
cmova
pop
mov
xor
mov
fstp
pop
test
outs
enter
jmp
ins
add
adc
neg
aas
adc
arpl
out
test
neg
pop
lahf
mov
mov
push
pop
imul
push
iret
sub
bound
test
call
sub
sbb
in
xor
popf
repz
outs
popf
fld
retf
inc
retf
adc
jecxz
mov
xchg
add
add
into
lock
lods
daa
add
mov
lods
cdq
fldcw
add
inc
xor
add
std
int
scas
lahf
jb
pop
push
cmp
or
sbb
dec
outs
mov
dec
adc
xchg
sti
and
or
leave
and
xlat
pop
mov
push
outs
add
cmc
or
sub
mov
cmp
dec
push
stc
outs
scas
std
jb
xchg
xor
and
outs
mov
loop
sahf
mov
cdq
(bad)
adc
jg
sbb
std
mov
push
xchg
jns
xchg
adc
push
jecxz
fdiv
adc
jecxz
aad
gs
dec
jns
push
lahf
inc
adc
xor
push
jmp
xor
push
lods
dec
cwde
stos
push
ja
rcl
push
pop
inc
pop
cmp
mov
in
in
jno
mov
std
clc
fs
or
dec
push
sti
push
test
mov
sbb
cmp
add
add
lds
or
jae
sar
je
xchg
sub
push
lods
push
cld
push
stos
ins
mov
pusha
(bad)
cmps
pushf
sub
arpl
push
xchg
mov
mov
sbb
gs
call
cdq
sub
and
in
push
lods
ror
ror
out
sub
loop
les
pop
mov
push
in
mov
test
mov
mov
inc
js
cmp
dec
add
pop
repnz
lds
es
cdq
nop
enter
out
xchg
xchg
pop
adc
mov
push
xchg
pop
or
out
mov
xor
xchg
and
jl
(bad)
in
out
daa
in
mov
pop
bound
sub
retf
fisub
pusha
cmp
or
push
mov
aaa
enter
(bad)
in
outs
cwde
ds
loop
xor
add
iret
scas
mov
xor
inc
ins
push
ror
jno
retf
cmp
dec
jg
sbb
fstp
mov
ins
fidivr
test
je
inc
clc
(bad)
jno
add
add
xchg
stos
(bad)
fmulp
stos
sub
push
xor
push
cdq
mov
push
(bad)
fidiv
or
pop
dec
nop
inc
out
loopne
jle
xchg
popa
cmc
add
lods
mov
pop
mul
mov
cmp
xchg
nop
mov
stos
movs
sahf
adc
(bad)
stos
fwait
int3
js
mov
sbb
or
push
pop
ss
mov
getsec
popf
ds
mov
mov
popa
push
pop
test
in
or
mov
xor
mov
mov
push
cmps
xor
cmps
retf
lea
outs
sub
push
xor
les
cmc
and
ins
outs
adc
dec
xor
mov
mov
xchg
add
std
mov
call
xlat
sbb
(bad)
pop
arpl
inc
imul
in
sub
pop
push
cli
daa
and
cwde
lea
add
ss
jne
aad
fmul
cmps
dec
xor
add
movsx
in
push
es
rol
mov
aaa
cmc
stos
repnz
inc
cs
stos
jns
mov
scas
sbb
add
test
add
pusha
out
dec
cmp
pushf
xchg
mov
call
fucom
push
cmp
fld
jbe
enter
cmps
imul
xor
xchg
fcom
arpl
or
mov
mov
adc
adc
sub
pop
or
dec
pop
scas
sub
mov
push
cmp
jmp
je
xchg
fdivr
sbb
sbb
nop
sbb
pop
jle
pop
pop
das
mov
fnstsw
movs
jbe
dec
and
retf
xlat
xchg
dec
lds
adc
in
out
outs
out
mov
xchg
dec
cmp
mov
in
stos
mov
(bad)
adc
jp
cmp
iret
imul
bound
clc
in
jo
sub
xchg
ins
push
(bad)
pop
iret
imul
pop
retf
fidiv
mov
test
js
mov
clc
repnz
xchg
mov
push
ficomp
fistp
jmp
pop
call
popa
dec
jno
hlt
and
fs
sub
loopne
data16
icebp
mov
dec
mov
cmc
fmul
(bad)
stc
or
stos
pop
inc
retf
std
fnstcw
dec
cmp
in
pop
mov
cmps
(bad)
or
inc
dec
fldenv
ds
push
cwde
or
push
add
xchg
xor
xor
add
sub
push
inc
repz
inc
sbb
or
into
add
inc
xchg
leave
inc
jne
idiv
add
sti
jmp
sub
(bad)
aam
mov
xchg
and
loop
mov
or
lods
inc
sub
sti
pushf
inc
inc
mov
xchg
dec
call
pop
xchg
add
test
push
mov
adc
loop
data16
cli
mov
aam
addr16
fstp
sub
jae
pop
push
into
int3
cmps
icebp
or
sub
jecxz
xchg
mov
outs
jmp
aas
inc
call
imul
out
mov
scas
retf
outs
mov
dec
sbb
cmp
shl
cmc
pop
fdiv
into
jbe
ins
and
xchg
stc
fsub
jg
dec
lock
pusha
mov
push
aam
shl
aad
iret
aad
imul
inc
dec
mov
mov
movs
test
dec
inc
test
sub
xor
push
jno
xchg
(bad)
mov
mov
xlat
adc
push
dec
out
stos
test
dec
mov
bound
sub
in
in
sub
fs
pop
pusha
or
cmps
je
jo
leave
jbe
sub
retfw
or
fmul
lea
loopne
and
lods
aaa
pop
xchg
xchg
fistp
aas
sbb
adc
nop
push
jl
outs
test
jne
fisttp
sbb
shl
dec
adc
jmp
add
or
enter
ss
mov
in
cmps
out
cmp
repz
adc
aas
pop
dec
push
cmps
mov
inc
fist
fisttp
xor
push
jae
aaa
inc
bound
sahf
out
push
cmps
add
jne
inc
dec
sti
das
xchg
retf
push
add
ins
stc
in
iret
mov
icebp
inc
pop
or
mov
lock
imul
fist
movs
stos
cdq
cmps
cwde
xlat
mov
push
inc
sbb
bound
int3
ficomp
push
repz
dec
gs
mov
je
cld
inc
movs
cli
mov
jmp
add
nop
sbb
jb
jecxz
ins
xor
lock
push
xchg
adc
lahf
stos
pop
imul
xchg
mov
loopne
ja
rol
push
stos
mov
add
dec
sub
xchg
arpl
out
sub
jle
xchg
int
dec
mov
popf
sub
(bad)
call
aaa
mov
push
into
arpl
arpl
dec
dec
mov
push
addr16
aaa
dec
ins
das
gs
movs
push
into
pop
ret
aam
sbb
jnp
sub
rol
movs
jmp
xchg
cmps
xchg
cs
xchg
xchg
cmp
xor
(bad)
bound
inc
jmp
test
imul
fs
(bad)
dec
inc
and
outs
js
data16
mov
call
pop
jp
lds
test
scas
mov
test
scas
dec
sbb
in
mov
arpl
add
shl
push
cmp
jge
outs
jmp
pop
rcr
jns
xor
icebp
xor
outs
mov
sub
shr
jmp
retf
adc
jecxz
add
and
add
inc
sahf
mov
popf
dec
and
popf
or
xor
inc
push
dec
and
sub
cmps
pop
test
push
repz
pop
leave
mov
popf
fs
cwde
adc
jge
out
jne
sbb
stos
adc
mov
js
sub
xchg
cmp
mov
inc
pushf
jne
ins
sub
out
or
movmskps
cli
ds
xor
sub
xor
test
mov
ret
push
std
iret
dec
sar
pop
mov
mov
imul
xchg
mov
push
cli
mov
xchg
adc
movs
shr
jl
push
and
sbb
call
aaa
popa
sub
call
inc
fld
sbb
movs
add
hlt
and
pop
xor
call
add
(bad)
adc
repnz
or
sar
lock
test
jp
push
call
in
add
xchg
dec
sbb
inc
dec
sbb
pop
shl
lods
jbe
jp
gs
cmp
cmp
test
popf
lahf
mov
inc
sti
ins
sbb
ins
cwde
and
mov
dec
mov
push
xchg
pop
push
xor
test
loope
jg
jl
dec
cmps
inc
pop
enter
fimul
adc
jmp
stc
push
mov
js
loope
loopne
arpl
dec
scas
cli
fsubr
mov
and
pop
pop
and
icebp
loopne
mov
mov
add
mov
arpl
inc
mov
mov
aas
scas
mov
push
repz
add
push
les
xlat
(bad)
lds
(bad)
mov
ror
jno
mov
test
mov
in
jno
pop
cli
add
cmp
and
jno
mov
int
push
mov
call
call
enter
push
icebp
in
add
test
daa
int3
or
in
push
and
bound
sub
div
lods
in
pop
xchg
sub
out
cs
repz
xchg
mov
outs
sbb
aas
lahf
cmps
xor
test
mov
mov
(bad)
mov
push
sahf
sbb
jo
fdivr
pop
and
pop
push
ficom
jnp
shr
outs
dec
pop
in
jmp
adc
repz
cmp
shr
dec
aad
repz
(bad)
in
cli
ror
sub
pop
cld
mov
add
movs
out
les
inc
and
jbe
shl
cmp
fmul
cmps
sub
jne
adc
sub
pop
out
fild
pop
mov
lahf
xor
sbb
mov
fcomi
cmp
dec
add
(bad)
out
and
lods
sub
in
nop
xor
cmps
push
(bad)
fstp
sbb
dec
and
test
add
fwait
mov
int3
jmp
retf
adc
and
call
mov
inc
xlat
(bad)
or
ins
std
adc
cmpps
outs
jg
mov
mov
add
fld
test
cmps
and
or
mov
dec
scas
sti
test
lea
push
mov
xchg
or
sub
leave
mov
sti
add
adc
das
dec
or
mov
sbb
mov
add
aam
adc
test
imul
xor
xor
and
(bad)
mov
mov
imul
mov
repnz
mov
les
lods
add
xlat
mov
dec
out
test
jmp
jge
ror
cli
nop
cld
pusha
and
(bad)
int
in
dec
or
push
test
shr
xor
loop
sub
daa
outs
sbb
sbb
loop
dec
call
xor
cli
push
fidiv
push
ja
out
pop
(bad)
fs
jmp
push
movs
(bad)
mov
xchg
add
aaa
mov
test
add
xchg
xor
pop
pop
lods
or
mov
repnz
dec
stos
add
mov
and
test
mov
cmp
dec
es
dec
mov
and
neg
dec
sbb
mov
and
popa
mov
int
push
(bad)
xchg
test
xchg
add
add
or
adc
fstp
and
cmps
cmps
mov
push
mov
das
aam
daa
fbstp
and
mov
push
mov
or
mov
aaa
test
jle
sahf
xor
push
or
outs
dec
loopne
mov
scas
or
das
xchg
in
pop
jge
xor
es
inc
mov
int
mov
push
aaa
test
imul
mov
mov
sbb
into
fmulp
les
cmp
pop
ret
fnstsw
or
or
mov
sbb
popa
iret
xchg
xchg
xor
movs
xchg
test
push
and
push
out
sub
ds
repnz
add
mov
outs
leave
mov
rcr
xlat
int
jmp
sub
push
aaa
gs
jmp
dec
jnp
inc
lods
push
es
cmp
cmp
arpl
pand
jg
xchg
cld
std
loopne
cli
or
arpl
push
mov
add
call
in
mov
neg
mov
cmp
in
fdiv
jb
pushf
mov
pusha
add
mov
retf
neg
js
fiadd
jmp
rcr
adc
lods
rcr
shr
mov
pop
pop
fs
stc
pop
or
out
or
mov
adc
xchg
jne
jge
cmp
cmc
in
inc
fiadd
rcl
add
sub
mov
dec
mov
(bad)
xchg
jg
push
xor
or
cvtdq2ps
int
jno
and
shl
cdq
push
adc
pop
inc
and
push
mov
out
dec
sbb
movs
ds
mov
jmp
jge
push
retf
xchg
jp
clc
sub
clc
(bad)
sbb
add
fstp
stos
rcr
or
loopne
push
adc
xchg
push
pusha
jbe
(bad)
mov
mov
in
add
pop
imul
sbb
cs
pop
shl
stos
cmp
xchg
stos
test
ja
jg
cwde
xchg
and
sti
aas
add
std
fwait
aam
xchg
sbb
pusha
mov
bound
nop
loopne
add
pop
pop
jns
mov
outs
cmps
popf
and
mov
shl
mov
sub
(bad)
pusha
shr
lock
std
ins
lahf
mov
movs
pop
adc
call
sub
iret
pop
loopne
add
cmps
or
add
adc
adc
mov
cwde
sbb
inc
aaa
cmc
fcmovnu
push
inc
(bad)
push
rcr
enter
(bad)
scas
test
xchg
or
and
cmp
and
sti
outs
jl
lods
mov
pop
out
xor
mov
xchg
push
sbb
mov
fdivr
ja
xchg
scas
cmps
lahf
push
adc
push
add
sub
sahf
jp
popa
mov
ss
jno
inc
xor
adc
mov
pop
xchg
sbb
fxtract
pop
mov
cs
pop
out
lds
fist
popf
ds
aad
idiv
ficomp
sbb
inc
scas
clc
cs
xor
cmc
add
or
loop
mov
aam
aam
out
lock
out
mov
or
xchg
ret
pusha
push
inc
mov
sub
fwait
repz
fwait
mov
jno
aad
xchg
xor
clc
addr16
pop
mov
jp
adc
and
lea
(bad)
cdq
adc
push
out
pop
push
xchg
mov
sub
jne
iret
hlt
inc
pop
sahf
clc
not
push
mov
jae
call
cmp
dec
cwde
pop
dec
or
sub
lahf
or
mov
sbb
int3
pop
pop
or
mov
outs
pop
je
ret
fidivr
dec
dec
test
dec
adc
mov
in
ins
push
or
bound
mov
mov
xor
lods
or
lods
clc
pop
fdiv
cld
ss
(bad)
or
dec
shl
sar
shr
fidivr
jmp
sub
inc
lds
xor
rcr
bound
mov
mov
dec
dec
pop
cwde
jl
cdq
add
jns
or
adc
out
outs
mov
rol
dec
mov
or
jp
cmp
and
inc
jecxz
add
sub
movs
pop
loop
push
aas
mov
sub
test
mov
push
stos
push
mov
movs
les
stos
pop
test
mov
inc
sbb
push
sub
dec
jge
scas
push
inc
mov
lods
push
add
xchg
int
(bad)
pop
xlat
mov
xor
(bad)
push
repz
pop
push
mov
int
jl
outs
or
xor
sub
fld
data16
jmp
je
fwait
inc
loope
aaa
(bad)
mov
dec
pop
mov
xchg
call
mov
and
int
dec
out
jne
xlat
lock
outs
sub
push
outs
les
(bad)
sar
cwde
mov
loopne
js
jae
xchg
push
clc
fist
pop
mov
bound
ins
pop
xchg
dec
aam
and
sub
cmp
je
out
xchg
jns
fist
inc
scas
sub
fsubr
outs
bound
sbb
inc
sbb
lods
and
mov
inc
jecxz
jnp
adc
xor
adc
ss
nop
and
psubq
lods
scas
nop
push
sub
inc
int3
and
jns
and
ds
push
sti
out
dec
jae
jp
xor
ins
lods
aam
push
mov
push
(bad)
scas
outs
sub
inc
imul
mov
xchg
in
(bad)
lods
das
mov
inc
nop
pop
retf
xchg
pop
mov
mov
mov
xor
xlat
mov
enter
adc
push
cli
jp
push
mov
jl
repnz
pushf
ins
fcomip
data16
lods
push
pop
xchg
ror
arpl
inc
retf
fs
xchg
stos
xor
sub
mov
pop
pop
add
les
or
adc
jo
int3
push
jecxz
mov
in
call
cwde
psrad
jae
mov
jecxz
xchg
cli
jle
sbb
scas
sti
hlt
fist
or
cdq
mov
test
xchg
pop
loope
(bad)
push
adc
test
ror
repz
and
cmp
(bad)
pop
cmc
clc
add
in
cli
cmp
loope
push
jmp
es
jb
pop
jl
pop
mov
lahf
cwde
adc
xchg
or
cmps
(bad)
(bad)
cld
popf
mov
and
add
or
aam
inc
pop
cmps
jg
sbb
dec
cmp
out
fwait
ret
iret
dec
push
mov
push
xchg
lods
mov
add
movs
loop
int3
push
inc
(bad)
cmc
xchg
imul
pop
sbb
xchg
in
sub
push
je
and
aad
mov
ja
rcl
sub
mov
aad
dec
cmp
cmp
sahf
jne
aas
pop
or
push
mov
inc
dec
adc
mov
dec
jmp
mov
aad
or
or
jns
push
inc
ss
mov
jbe
pop
addr16
pushf
adc
fiadd
or
xchg
cld
dec
mov
outs
mov
xchg
adc
leave
fnsave
adc
lods
js
mov
inc
mov
pushf
or
adc
ror
imul
sub
cdq
fs
mov
jne
fdivr
pop
(bad)
push
xchg
cmp
adc
rol
adc
mov
add
push
adc
pop
leave
out
jno
mov
xchg
sbb
xor
cmp
xor
push
in
out
loop
mov
push
rcl
pop
ds
or
in
jnp
dec
fimul
jg
inc
cwde
sti
mov
jge
rcr
and
xchg
test
loope
mov
pop
arpl
sub
bound
inc
imul
les
dec
xor
fadd
out
adc
fimul
jb
ss
cld
pop
test
lea
fwait
sbb
(bad)
not
pop
mov
and
add
aaa
in
mov
lds
pushw
cs
stc
shl
jl
call
cmps
mov
lock
dec
push
add
or
xchg
and
xchg
test
fsubr
ficomp
stos
sub
mov
push
jmp
and
jmp
cmp
sbb
mov
retf
mov
rol
and
xor
jb
les
cmps
jmp
adc
mov
xchg
outs
adc
int
xchg
lods
jbe
out
add
xchg
sub
test
cmp
jno
xchg
adc
mov
fstp
fld
loop
and
jg
pusha
sub
aas
into
sti
popf
mov
add
pop
mov
std
scas
and
jl
ret
mov
test
shl
clc
cmc
shl
test
pop
inc
pop
inc
pop
ror
lock
loope
(bad)
and
ret
push
inc
xchg
nop
push
ss
mov
(bad)
xchg
nop
in
jnp
arpl
xor
addr16
pop
shl
xchg
movs
xor
fsubrp
push
xor
jb
pusha
mov
(bad)
sub
pcmpeqd
les
ds
push
push
xchg
add
pushf
ficomp
push
ds
(bad)
or
(bad)
stc
and
push
pop
or
mov
mov
jae
sbb
outs
ror
pop
mov
hlt
mov
push
fs
int3
sbb
fstp
icebp
sbb
scas
and
push
push
clc
add
add
sub
addr16
dec
mov
cld
dec
adc
(bad)
cs
jmp
xor
or
push
dec
jnp
sub
mov
ret
sub
mov
xchg
pop
add
fldcw
push
and
jmp
lods
ja
push
aad
sub
les
arpl
xchg
fcomp
sub
and
nop
push
mov
push
neg
enter
push
stos
xor
cmp
push
sub
mov
call
adc
xchg
cmp
mov
test
add
sub
inc
or
jne
ss
xor
je
cmp
sbb
fcmovu
loope
inc
or
mov
stos
mov
mov
pop
mov
mov
xchg
sbb
in
or
daa
ja
scas
add
movs
loopne
call
cmps
xchg
into
(bad)
and
cmp
bound
test
push
pop
pop
(bad)
enter
hlt
push
outs
enter
xor
cmc
inc
mov
mov
sub
push
adc
jns
xchg
test
(bad)
fwait
or
mov
pop
jbe
or
push
rcl
cmp
(bad)
jo
fld
aad
xor
sbb
xlat
psllq
jns
(bad)
leave
dec
js
inc
clc
fmul
scas
pop
sub
nop
adc
(bad)
or
adc
or
ror
push
xchg
dec
xchg
es
ltr
jge
xor
repz
nop
rcl
push
push
loope
cs
jge
arpl
pop
jl
pop
push
mov
sub
out
loopne
or
xor
sub
clc
or
fucomp
out
dec
dec
imul
retf
xor
or
or
mov
inc
vcvttss2si
js
xchg
mov
aad
test
imul
or
or
pop
xchg
cmps
bound
rcr
add
sar
cdq
jns
sar
mov
das
mov
adc
push
in
(bad)
dec
(bad)
dec
fst
enter
int3
sbb
mov
mov
in
xor
les
xchg
ja
mov
push
push
sub
mov
jmp
(bad)
int3
add
and
sub
mov
ret
sbb
xor
scas
or
jp
not
inc
dec
cdq
movs
dec
and
and
lods
adc
test
sbb
xchg
mov
test
or
jp
loop
mov
sbb
test
mov
shl
or
int3
mov
in
add
cmp
cmp
dec
jle
outs
mov
adc
fadd
push
mov
xchg
inc
icebp
test
mov
test
push
inc
in
setge
retf
mov
fld
and
repnz
push
push
jmp
pop
retf
jne
pushf
pop
pop
dec
push
loopne
pop
mov
outs
cli
push
fcmovbe
mov
ins
rcr
jmp
fs
fwait
push
test
pop
xchg
sar
xor
dec
lods
and
adc
push
ret
add
repz
into
inc
popa
dec
(bad)
dec
or
inc
jg
lock
xchg
inc
jmp
sub
fcmovne
mov
dec
and
lea
mov
ja
fist
cmp
dec
sbb
mov
retf
dec
cmp
pop
cmps
(bad)
pop
mov
mov
dec
lar
pop
add
and
jo
xor
iret
ret
test
or
sti
or
push
popa
pop
mov
push
lods
mov
push
and
dec
pusha
pop
sub
clc
aad
out
sub
jp
popf
xor
cdq
pop
sbb
dec
pop
ror
inc
adc
cld
stc
popa
inc
or
cmps
xor
mov
ss
js
mov
test
fs
push
aas
pop
outs
jo
out
jns
mov
fbstp
aad
and
mov
mov
push
push
push
mov
xor
pop
sub
das
out
pop
xchg
xchg
adc
ficom
sahf
sub
cmp
mov
rcr
pop
ror
and
xchg
add
mov
je
rol
cwde
cmps
(bad)
repz
adc
sub
push
push
or
mov
ja
sbb
cdq
cmove
repz
or
loope
jno
in
sub
dec
push
btc
(bad)
sub
dec
lods
movs
gs
popa
cld
pop
jb
adc
imul
pop
dec
and
test
sahf
enter
(bad)
pop
inc
sub
xchg
movs
fcmovb
pop
repnz
jns
in
xchg
push
fwait
ds
aaa
(bad)
scas
cs
mov
and
les
pusha
fistp
adc
lea
pop
rol
cdq
cmp
fadd
mov
cs
xchg
ret
jns
ins
pop
inc
push
adc
mov
adc
scas
rcr
sbb
lea
and
cmps
xor
pop
icebp
cmp
aaa
mov
stc
repnz
out
mov
add
add
test
ret
jmp
cdq
jmp
mov
ja
xor
pop
outs
inc
jg
mov
inc
adc
ss
mov
push
add
stos
cs
fld
mov
push
call
movs
mov
xor
loopne
pop
test
mov
movs
fistp
sar
fadd
inc
fwait
lods
pop
jle
pop
into
jl
sub
ret
ss
or
neg
jbe
inc
cmc
repz
fnstenv
ins
popf
dec
mov
inc
adc
mov
(bad)
(bad)
pushf
jp
jmp
aam
call
dec
mov
sbb
jmp
mov
jmp
inc
adc
add
mov
jbe
cmps
mov
sahf
jae
cmp
jecxz
lds
sbb
pop
jne
or
aaa
push
cmp
outs
pop
adc
and
jbe
jecxz
jp
mov
retf
fs
sbb
cmps
int3
mov
jno
and
and
cmp
ins
mov
das
into
jmp
sub
cmps
jmp
mov
dec
dec
cs
xor
mov
inc
push
cs
in
jnp
add
add
in
jmp
xor
scas
and
pop
imul
mov
xlat
loop
js
jmp
popa
je
xlat
inc
popa
pop
fadd
fst
sub
sbb
add
scas
sub
shl
test
movs
adc
cmp
and
mov
retf
outs
add
popa
jge
cmp
stos
push
test
xor
jb
xor
jb
jb
push
sbb
mov
cmp
je
xchg
pop
fnstenv
les
xor
sbb
scas
out
mov
xor
sub
sbb
out
and
pop
xchg
lock
(bad)
hlt
mov
(bad)
scas
jno
jl
adc
arpl
not
cmp
jae
outs
rol
mov
sbb
and
adc
test
pop
mov
arpl
sbb
loopne
dec
repz
add
pop
ret
into
mov
enter
shl
shl
pusha
sahf
call
push
inc
ficom
(bad)
(bad)
jge
mov
lahf
adc
add
cmp
movs
or
dec
pushf
xchg
stos
xlat
lds
mov
imul
push
mov
sub
call
xor
sub
test
mov
sub
fwait
mov
xchg
(bad)
or
or
ja
call
imul
popf
jg
test
retf
(bad)
xchg
xor
ret
rcr
rcpps
or
lfs
sti
(bad)
cwde
jne
movs
leave
pop
je
push
dec
xlat
inc
fcomp
outs
add
jb
cwde
inc
xor
test
xlat
rol
stos
xor
push
jnp
lock
rol
rcr
xchg
inc
jge
xor
imul
fwait
sub
push
aas
push
inc
dec
loop
repz
xor
lods
ret
push
ret
add
in
aad
dec
aad
adc
enter
iret
test
or
jo
test
test
mov
aaa
cdq
ret
jl
je
sbb
std
cs
or
neg
add
sbb
ins
jns
ret
ss
xor
cmp
ins
push
data16
ins
imul
retf
mov
mov
test
pop
fimul
push
mov
xchg
test
xchg
in
push
mov
stc
les
or
push
imul
imul
jne
xor
push
adc
ins
addr16
mov
clc
inc
pushf
dec
push
push
add
inc
xchg
add
inc
dec
and
fcmovnu
icebp
add
repz
push
leave
cmp
cmp
add
imul
lea
in
shl
jecxz
mov
jo
ins
push
cmp
and
mov
ss
ins
or
pop
in
ret
repnz
pop
or
xor
inc
and
push
dec
nop
movs
inc
test
loop
mov
pop
test
ds
dec
ror
scas
(bad)
push
clc
mov
pop
out
hlt
mov
dec
jge
cs
inc
clc
xchg
xor
add
cmp
and
xchg
inc
sar
xchg
jnp
loopne
imul
pop
mov
aaa
mov
imul
xlat
iret
adc
cmp
mov
mov
pop
add
lahf
mov
mov
rol
mov
dec
and
or
mov
jne
mov
inc
mov
rol
test
ror
shr
ins
rcl
mov
and
mov
add
sbb
mov
mov
and
shl
sar
mov
fmul
test
or
in
mov
mov
xchg
adc
and
icebp
xor
jb
out
popf
out
repnz
xor
mov
in
dec
inc
lea
dec
leave
adc
cmp
stc
and
mov
add
xor
sbb
pop
imul
cwde
test
fstp
push
rol
push
push
xchg
mov
in
sub
adc
jecxz
mov
cmp
mov
in
xlat
mov
rcl
dec
or
outs
cmps
int3
scas
int3
mov
push
imul
or
mov
jecxz
push
aam
xor
cdq
test
pop
push
in
inc
retf
and
mov
data16
mov
adc
sbb
out
mov
sub
movs
fiadd
arpl
or
dec
ror
push
test
cmp
jle
jg
scas
inc
sub
ins
jp
retf
ins
inc
sbb
nop
xor
mov
add
sbb
test
jbe
ins
jg
xlat
pop
jl
cmp
cmp
jnp
shl
dec
xchg
xor
test
imul
ja
mov
sub
push
imul
xchg
push
sbb
std
jl
pop
imul
cmps
shl
and
mov
mov
inc
pop
xchg
cmp
pop
mov
add
inc
imul
scas
in
dec
adc
rcl
xchg
addr16
je
or
sub
pop
leave
jb
cmc
pop
add
in
xor
dec
cmp
cmp
addr16
ror
xchg
arpl
mov
xchg
add
dec
in
and
pop
jae
(bad)
fnsave
shl
dec
in
and
daa
in
jle
inc
test
js
cmp
sub
call
sbb
or
shr
jns
dec
outs
cmps
dec
mov
inc
mov
sub
xchg
shr
pusha
bound
int3
ja
idiv
in
shr
test
or
inc
mov
stos
jne
call
shrd
and
cmp
stos
sbb
cmp
pop
jnp
retf
cmps
xchg
mov
cmps
out
push
gs
pusha
lahf
cs
mov
jmp
or
sub
inc
int3
test
enter
push
jl
mov
ja
nop
dec
jmp
ja
(bad)
cmp
ss
loopne
xchg
movs
movs
pop
add
jmp
mov
in
xchg
outs
aas
or
scas
sbb
mov
in
loopne
xchg
dec
push
stos
es
lea
jo
mov
stc
shufps
mov
mov
fcom
jge
pop
xchg
daa
mov
dec
jb
clc
push
sub
add
retf
or
cwde
pop
into
dec
popf
arpl
push
pop
mov
sahf
nop
pop
into
cdq
lock
std
sub
jge
jne
test
popf
ins
or
bnd
jmp
and
lahf
pop
rol
jg
push
jecxz
retf
das
je
add
jno
vmovaps
ficom
ror
les
cmp
lods
call
jbe
sub
or
inc
rcr
in
adc
mov
ds
je
dec
sbb
pop
xor
ds
push
jmp
es
stos
arpl
bound
push
inc
xchg
pop
syscall
mov
push
cmp
movs
pop
repnz
aad
hlt
inc
cmps
or
push
pop
in
pop
mov
or
aaa
dec
inc
dec
mov
or
mov
in
cmps
lds
into
ins
test
adc
(bad)
ins
shr
mov
aad
or
mov
cmp
and
jecxz
sub
push
bnd
in
out
bound
push
out
fmul
cli
cmc
mov
test
xor
sar
inc
outs
add
inc
sar
sub
into
xchg
out
test
daa
out
sar
push
test
push
in
cmp
dec
xor
shr
fimul
cmp
or
cmp
push
or
bnd
pop
add
xchg
(bad)
mov
cmp
retf
adc
jns
arpl
cmps
loope
mov
inc
pusha
sub
test
mov
pop
push
int3
mov
js
int
in
scas
int
add
(bad)
push
mov
sbb
sbb
test
seta
pslld
mov
cli
and
das
nop
neg
into
arpl
xor
inc
cmps
sub
inc
sbb
jb
sub
scas
push
sbb
imul
dec
fnsave
es
adc
inc
sub
xchg
sub
int3
inc
jbe
mov
je
push
mov
les
dec
pop
shl
mov
daa
sar
mov
jns
mov
leave
sub
add
add
pop
push
shr
test
push
test
retf
dec
mov
jne
mov
and
mov
mov
push
mov
fs
mov
outs
inc
daa
sar
fcom
(bad)
jmp
cdq
(bad)
retf
xor
mov
adc
push
dec
nop
fisttp
loopne
sub
pushf
mov
add
int
mov
aaa
mov
fstp
popf
sub
mov
imul
das
lea
popa
sbb
cmps
lods
shr
ins
cmp
data16
repz
std
in
popf
iret
retf
loope
xor
xor
pop
xchg
aam
dec
jnp
xchg
ja
add
inc
stos
inc
inc
ficom
pop
movs
sbb
retf
pop
xor
test
and
xchg
jbe
das
or
(bad)
ss
push
adc
sub
nop
pop
adc
lea
mov
cwde
pusha
call
sub
retf
mov
das
xchg
dec
test
jmp
repz
mov
test
xchg
mov
imul
leave
jns
fldenv
(bad)
sti
scas
call
jbe
lock
int3
sub
and
out
jnp
mov
jmp
movs
mov
xchg
ret
pop
xchg
clc
sub
mov
outs
loop
cmp
arpl
sbb
lock
pop
stos
mov
mov
pop
and
jl
push
xchg
test
ret
aad
jns
pop
mov
retf
in
aas
push
push
mov
int3
(bad)
movs
xor
test
cs
jnp
lahf
out
pusha
mov
sub
mov
pop
pop
sar
adc
inc
cmp
push
dec
out
and
xor
mov
push
ins
dec
jp
nop
push
xchg
inc
mov
and
sbb
cmps
lahf
pop
stos
call
push
dec
dec
mov
les
hlt
jl
adc
aam
and
inc
lods
add
imul
xchg
test
push
loopne
add
lahf
scas
jmp
jae
push
cmps
add
mov
enter
cwde
cmp
sbb
xchg
jg
rol
ret
push
or
popf
xor
push
cmp
sbb
sahf
sbb
sub
and
push
sbb
xchg
lock
pop
and
xor
xor
pop
popa
cmp
add
in
jns
je
sub
pop
int3
sbb
sbb
int
ret
call
cmp
add
int
mov
(bad)
out
pop
jl
neg
pop
test
xchg
mov
cmp
xor
sti
sbb
inc
mov
mov
jo
fmul
cmps
push
dec
sub
fld
out
mov
outs
test
mov
cmp
je
mov
in
(bad)
stc
xchg
mov
inc
dec
aam
mov
popa
ss
xchg
push
mov
outs
mov
retf
test
aam
sub
dec
rol
xor
mov
call
pop
or
xor
xchg
mov
xor
mov
xchg
or
push
(bad)
dec
ret
xor
xor
(bad)
cmps
push
adc
sbb
inc
iret
jle
or
in
dec
stos
adc
ja
sub
jbe
sub
xchg
cmp
inc
cmp
jl
daa
inc
in
sub
pop
inc
imul
jo
ja
mov
push
scas
in
xor
ret
ins
test
test
and
in
aam
mov
or
adc
cmc
sbb
xor
jmp
xor
scas
fs
cwde
jno
inc
jae
shl
(bad)
je
pushf
in
(bad)
xchg
jae
xor
push
jb
(bad)
pop
adc
xor
pop
sti
(bad)
add
inc
pop
cli
jns
push
outs
cmp
into
add
push
jmp
and
(bad)
push
out
pop
or
ficom
jmp
lock
add
pushf
fcmovu
test
xchg
inc
or
shl
pusha
lea
sbb
repnz
dec
xchg
adc
push
mov
xor
inc
test
mov
dec
in
dec
push
stc
xrelease
inc
test
out
inc
push
jae
push
push
pushf
call
push
int3
xchg
mov
retf
cwde
inc
mov
cmc
test
push
(bad)
xchg
loopne
icebp
lea
pop
inc
cmp
sub
xchg
push
loopne
inc
popa
cmp
inc
call
push
xor
sub
pop
mov
es
or
ucomiss
pusha
push
adc
push
je
stos
scas
call
jmp
xor
mov
std
sub
xlat
cli
repnz
jge
dec
test
pop
dec
shl
mov
test
jmp
mov
std
adc
mov
daa
inc
int3
lds
inc
jo
ss
fbld
xorps
add
mov
xchg
push
iret
sub
xor
mov
aam
sbb
and
das
mov
cwde
sbb
jle
mov
mov
mov
test
test
(bad)
cmp
(bad)
div
lods
cmc
in
mov
arpl
ja
jo
test
push
loop
push
or
je
shl
fist
jnp
les
int3
dec
retf
mov
inc
jg
fs
add
imul
fst
js
dec
das
pushf
ins
and
nop
das
mov
cmp
xchg
bound
dec
test
les
or
scas
loopne
adc
dec
inc
lea
sbb
loope
clc
(bad)
xor
mov
push
pop
jmp
adc
mov
push
cmp
nop
out
call
cmp
call
xor
loop
mov
scas
inc
xchg
push
jo
push
int3
mov
and
dec
scas
fs
lock
int3
jmp
pop
cmps
ror
or
cmp
sub
es
adc
cmps
or
iret
push
push
xor
xchg
mov
ret
inc
add
cmps
jne
mov
out
adc
jecxz
call
add
jmp
das
push
sbb
loope
ficom
stc
sbb
pusha
nop
test
bound
mov
mov
or
fcom
xchg
in
cwde
out
in
adc
xor
mov
mov
repz
mov
iret
or
cmp
outs
jp
gs
lea
shl
fild
movs
test
shl
lock
sub
in
pop
dec
rcr
inc
stos
mov
popf
pop
scas
cmp
mov
xlat
and
aad
bound
cli
sbb
ins
mov
les
push
ins
std
cmp
mov
mov
jle
mov
loop
dec
adc
xor
imul
xchg
sahf
sub
clc
jmp
or
data16
test
in
stos
push
mov
out
out
ret
(bad)
mov
sub
test
(bad)
in
pop
mov
je
mov
ja
mov
enter
sub
fisttp
sar
xchg
mov
jno
in
push
rcl
xor
sub
or
fucomip
xor
retf
mov
ret
call
(bad)
imul
hlt
or
push
cwde
mov
test
push
gs
add
call
jge
pop
pop
push
dec
stos
mov
adc
cmps
popf
or
je
(bad)
jmp
sar
jbe
daa
loopne
dec
scas
cmps
std
std
xor
adc
cmp
dec
inc
jae
imul
or
jns
outs
stos
dec
xchg
add
sbb
stos
push
popa
mov
adc
xor
out
inc
pushf
ja
sub
cdq
dec
pop
pop
mov
fsub
jno
(bad)
int
mov
adc
ins
in
and
dec
add
loope
fnstcw
mov
gs
(bad)
mov
cwde
inc
mov
push
push
(bad)
pop
xor
pop
jnp
push
arpl
out
out
mov
jns
fcmovu
add
push
jl
pusha
rcr
cmp
add
(bad)
sbb
push
sbb
push
call
sub
dec
or
ins
cmp
sub
mov
pop
mov
xlat
jns
and
mov
shl
dec
ret
xor
push
and
push
pop
jmp
ret
call
int
xor
les
inc
out
or
and
sbb
sbb
jp
dec
sbb
cwde
std
push
mov
pop
pop
popa
xchg
aas
daa
push
iret
sysexit
enter
jmp
xchg
out
cmp
jo
mov
sub
dec
push
fild
cmp
fimul
aad
jno
push
adc
leave
pushf
mov
mov
fdivrp
and
jae
test
inc
fnsave
cmp
bound
ret
dec
and
or
cmc
jmp
test
add
jae
in
into
dec
pushf
enter
mov
lods
cmp
in
jo
test
inc
std
stos
test
inc
aam
shl
cdq
test
icebp
ja
call
imul
pop
mov
sub
aas
push
iret
dec
inc
out
push
mov
fcom
dec
jne
dec
pop
ret
and
sbb
ds
iret
out
xlat
pop
daa
loopne
loopne
lods
mov
pop
push
popa
fwait
test
sub
mov
mov
outs
nop
lock
pushf
scas
retf
std
adc
mov
push
mov
or
dec
iret
ficom
pushf
cs
and
mov
mov
shl
pop
mov
enter
outs
out
mov
or
inc
sub
ja
popf
clc
mov
dec
in
mov
out
mov
add
test
sub
push
adc
cld
or
xchg
mov
mov
(bad)
xlat
sbb
adc
cmc
aas
and
hlt
and
(bad)
test
aas
push
jae
and
push
test
out
int3
inc
xchg
fnsave
nop
pop
jle
push
out
adc
mov
xchg
cmc
jge
push
pop
ja
sbb
popf
jae
rcl
cmp
inc
xchg
xchg
dec
ins
lods
arpl
out
aas
pusha
sub
mov
cmp
mov
out
pop
mov
sub
popa
mov
xor
xchg
and
cwde
dec
call
push
rcr
loope
daa
pop
pop
pop
add
test
mov
mov
es
call
outs
or
test
xchg
mov
enter
cmp
add
xchg
test
mov
jnp
sub
xor
or
outs
pop
movs
dec
pop
or
push
(bad)
shr
add
push
sub
jge
jbe
das
mov
rol
sahf
add
nop
lds
inc
int3
and
inc
dec
xor
enter
xor
push
cld
push
xchg
or
je
in
(bad)
ins
mov
lahf
scas
dec
gs
cld
dec
pop
mov
out
sub
inc
fnstsw
cmp
sbb
jno
mov
bnd
adc
ret
pop
or
(bad)
in
adc
mov
(bad)
in
push
scas
dec
adc
cwde
add
inc
call
mul
aad
add
repz
mov
les
cmp
pusha
dec
mov
mov
movs
add
ins
movs
pop
shl
pop
pop
call
mov
cmp
lods
cld
mul
into
js
push
or
jns
mov
mov
jne
out
mov
push
ja
cmc
xlat
jg
fst
dec
rcr
mul
(bad)
clc
shr
retf
in
jne
and
inc
cli
pop
das
jecxz
xchg
stc
mov
in
push
adc
pop
jne
jb
push
jbe
iret
dec
jmp
bound
inc
lea
out
mov
shl
addr16
mov
ja
ins
stos
push
and
imul
push
(bad)
popw
iret
and
mov
jle
ss
enter
jmp
and
cli
lods
sbb
and
cmp
push
add
pop
pop
nop
jmp
(bad)
int3
lods
sbb
clc
imul
scas
and
inc
fdivr
pop
push
int3
out
add
fdivr
push
sbb
imul
dec
inc
xchg
cmp
aas
mov
and
add
jmp
rcr
mov
les
hlt
xbegin
call
rcr
(bad)
rcr
mov
shl
sub
arpl
mov
xor
push
jecxz
xchg
mov
pop
mov
fst
dec
add
outs
mov
ror
cmp
loope
inc
stc
(bad)
mov
in
aad
aad
push
loope
add
xlat
sbb
or
rcr
push
retf
push
push
(bad)
sti
sub
(bad)
jne
call
cld
xor
loopne
xchg
add
neg
ins
xchg
mov
repz
xor
mov
mov
dec
dec
mov
and
js
sbb
call
sbb
xchg
loope
call
sbb
or
imul
adc
(bad)
les
out
lock
fwait
inc
les
aam
sbb
add
sbb
in
retf
lods
mov
sahf
pop
sahf
out
xchg
test
call
xor
test
xor
aam
and
ss
add
outs
cmp
test
cli
or
push
xchg
and
dec
xchg
pop
mov
jge
mov
add
sub
inc
mov
pusha
or
sbb
movs
aas
js
adc
dec
aam
(bad)
enter
(bad)
pop
xchg
cmp
or
push
dec
data16
inc
in
dec
lock
cmps
mov
dec
cmps
lods
pop
push
sub
mov
int3
jg
enter
jecxz
xor
pusha
ficom
xor
mov
and
push
out
push
cli
dec
xchg
js
cmp
mov
fisttp
jae
pop
test
scas
add
inc
and
adc
push
jae
lods
or
repnz
lahf
mov
jb
push
in
adc
fisttp
mov
outs
sub
cmp
xor
inc
mov
(bad)
in
rol
ins
jns
pop
xchg
push
mov
mov
in
pop
pop
xchg
sub
stc
xor
dec
not
pop
(bad)
adc
mov
dec
sbb
mov
stc
push
sub
cdq
hlt
scas
xor
in
loope
int
jmp
xor
pop
inc
call
leave
sbb
shr
ret
jp
cld
add
pushf
push
ret
sbb
addr16
inc
inc
clc
ss
repz
movs
outs
shl
sub
add
sbb
xor
push
push
sbb
outs
mov
pop
or
(bad)
call
dec
scas
adc
pop
mov
push
jmp
popf
inc
dec
test
pop
add
xchg
mov
setge
add
fisttp
popa
xchg
fs
push
lds
jb
leave
jmp
xchg
imul
pop
xchg
cmps
ror
jns
sbb
icebp
repnz
lock
and
stc
(bad)
jge
xchg
in
outs
popf
inc
adc
(bad)
out
call
xor
xchg
cmps
popf
push
jae
mov
pop
or
mov
and
add
js
jmp
mov
xchg
iret
adc
add
mov
rcr
dec
push
inc
cmp
aad
test
es
bound
sahf
test
xor
leave
pop
dec
cmc
nop
dec
sub
xor
aaa
jae
in
outs
sub
dec
or
loop
inc
cmp
dec
push
xchg
mov
push
outs
push
fs
fdivr
ret
fcomp
div
out
(bad)
fisttp
fstp
ds
and
out
add
push
enter
cmp
(bad)
aam
adc
jl
cmc
sub
gs
or
test
mov
pop
push
jp
cdq
ret
in
dec
mov
test
add
fs
add
xchg
push
xchg
pop
shr
jecxz
mov
push
in
fistp
and
mov
push
jae
sbb
jmp
sar
jno
xor
in
pop
icebp
push
repz
cmp
fld
pop
inc
jg
aaa
clc
(bad)
imul
das
xchg
punpcklbw
cmps
jecxz
test
add
ins
and
jbe
jne
ficom
jmp
xor
mov
sub
repz
bound
jmp
xor
xchg
out
sbb
mov
loop
xor
pop
pop
or
(bad)
cmps
nop
pusha
push
inc
cmp
leave
xchg
pop
jmp
mov
cs
cmps
adc
stc
jo
(bad)
xlat
das
nop
mov
jg
movs
cmps
mov
stos
add
or
jle
sub
nop
xor
cmps
int
push
loope
jne
mov
test
std
fidivr
(bad)
push
xchg
sub
std
sbb
jmp
mov
movs
in
test
int
mov
sub
adc
push
bound
dec
imul
and
pop
daa
dec
lods
daa
jle
pop
jo
push
cli
(bad)
das
push
test
xchg
push
cmp
cld
inc
and
xchg
add
cmps
and
mov
out
test
sbb
aam
jg
and
jl
test
mov
ins
jecxz
fs
sbb
out
jbe
enter
in
(bad)
(bad)
jbe
dec
cmps
stc
pop
adc
pop
mov
test
inc
syscall
pop
cld
in
xchg
retf
mov
push
jns
mov
xor
loop
add
jae
lds
pop
icebp
adc
ret
jle
into
fwait
xor
xor
stos
int3
rol
xchg
pop
out
mov
popf
sub
fs
(bad)
test
repz
adc
xchg
ja
xor
sub
dec
jle
sub
hlt
mov
sar
pop
daa
mov
cmp
and
jno
ss
ins
jb
(bad)
std
shl
jge
adc
xor
scas
cwde
and
sbb
adc
test
xchg
adc
dec
jb
mov
out
out
cdq
loope
sub
dec
sub
xor
jg
aas
sub
sbb
arpl
and
repz
test
mov
dec
pop
cwde
scas
mov
push
mov
push
xor
mov
out
jecxz
in
jmp
ins
adc
push
sahf
jo
and
jbe
push
into
psubusb
js
imul
out
and
lods
ins
pop
int3
inc
(bad)
xor
sbb
test
cdq
je
push
fld
ret
pop
sbb
mov
in
fcom
out
mov
mov
mov
dec
sbb
cmps
adc
sub
pop
bound
jb
mov
jae
into
out
ins
int3
fwait
sub
mov
mov
cmps
cmp
mov
jecxz
jns
in
mov
jae
mov
adc
mov
mov
and
xchg
sar
imul
retf
cmp
int
cmp
lock
mov
cmp
fistp
pop
jg
ret
rol
scas
fwait
jmp
push
push
and
mov
mov
sbb
jge
push
loopne
mov
loop
lods
popa
xor
test
inc
jnp
fadd
cmps
ins
js
dec
repnz
xlat
jne
repnz
mov
inc
lods
sub
xchg
mov
jno
sti
test
fsubr
adc
jne
dec
mov
pusha
cwde
fcom
jno
inc
out
sbb
addr16
imul
shl
cmp
sub
mov
fbld
xchg
sbb
adc
mov
mov
mov
pop
adc
ins
cmc
icebp
xchg
add
into
xor
repnz
push
mov
out
pusha
mov
in
mov
pop
and
and
sub
pushf
dec
scas
cmp
mov
add
aam
and
dec
std
jecxz
cmp
lea
add
(bad)
adc
and
stc
loop
jmp
pushf
add
or
test
imul
aas
mov
jns
shl
sbb
cli
sti
adc
cdq
xor
cmp
xor
push
and
push
bound
mov
mov
sub
xor
or
pop
retf
and
cld
jp
popf
int
mov
add
inc
loopne
push
jne
cmp
adc
pop
neg
inc
or
imul
push
mov
ror
cmp
test
fmul
sub
xor
pop
(bad)
pop
pop
mov
enter
mov
or
movs
dec
movs
popf
jo
dec
loopne
pop
xchg
pop
xchg
test
or
and
stos
mov
test
push
bound
push
out
mov
push
xchg
mov
mov
xchg
lea
cmp
sub
and
mov
sbb
lea
popf
or
repnz
outs
pop
cmps
leave
jno
jge
lahf
int
fadd
fcomip
mov
rol
add
test
aad
or
xlat
fucomp
data16
or
and
fiadd
retf
movs
lods
iret
add
imul
(bad)
push
rcl
(bad)
retf
dec
ss
daa
aam
mov
int
pop
mov
test
inc
push
cli
rcr
je
neg
xchg
adc
jecxz
aas
ins
out
xchg
dec
hlt
ss
fdivrp
lock
fmul
inc
les
in
jp
in
mov
bound
jp
pop
sub
xor
jge
call
add
fdivr
and
pop
cmps
mov
mov
enter
bound
push
xchg
mov
in
lds
mov
add
sub
mov
sub
mov
lods
shr
(bad)
movs
jg
ds
pop
js
lahf
cmp
adc
adc
pop
in
sbb
mov
dec
aad
xchg
rcl
xlat
leave
dec
test
dec
sbb
loop
test
ss
repnz
shr
jne
add
pop
outs
jmp
cmp
stos
in
imul
in
jne
sbb
adc
jl
test
and
or
sub
pop
(bad)
push
call
mov
out
mov
ss
dec
mov
ins
cmps
mov
mov
pop
cmp
in
out
or
pop
cdq
leave
xchg
rcr
add
test
adc
add
into
out
mov
lock
and
loop
call
jl
(bad)
lahf
push
mov
cmps
inc
push
push
pop
inc
push
ss
mov
add
js
add
add
xchg
pop
aas
outs
inc
lahf
jge
fcmovbe
call
cmp
fcom
dec
ds
maxps
dec
add
sub
push
xchg
ret
add
int
sbb
or
mov
push
mov
cwde
mov
fdiv
cld
inc
adc
adc
jnp
adc
inc
add
repnz
loop
ret
xchg
cmp
cmp
lock
fstp
jae
pop
rol
cmps
jo
push
inc
(bad)
cli
addr16
test
xlat
cmp
cmp
sub
mov
div
mov
repz
mov
movs
cs
scas
inc
jb
jno
xor
out
mov
bound
xor
int3
aas
or
sbb
in
sub
retf
jmp
idiv
and
pop
cmps
xor
jnp
lods
popa
test
dec
adc
in
gs
ret
adc
or
(bad)
mov
mov
xor
into
call
popf
lods
pop
cmp
inc
dec
aas
xchg
xlat
stc
aam
cld
mov
push
jb
add
(bad)
stos
dec
scas
cmp
stc
popa
jecxz
inc
xchg
add
je
dec
push
fistp
iret
pop
mov
sbb
adc
sbb
dec
lock
shr
mov
cmps
(bad)
(bad)
int3
mov
shr
sub
ror
test
cmp
loopne
enter
mov
jmp
xor
arpl
dec
xchg
adc
mov
leave
in
mov
ss
pop
dec
xchg
pop
cmps
inc
enter
xchg
test
dec
sbb
ds
inc
movs
xchg
sub
pusha
cmps
mov
enter
lea
jns
xchg
jbe
fmul
cmps
xchg
movd
loope
jg
movq
pop
ins
sbb
adc
or
jno
and
push
retf
loopne
ret
mov
mov
adc
or
or
or
in
mov
loop
sbb
jl
call
mov
in
cmp
inc
push
fnsave
outs
std
or
mov
fadd
mov
pop
in
adc
stos
out
mov
jbe
and
mov
sub
lds
ror
bound
sub
out
adc
daa
sub
inc
in
inc
mov
jl
mov
push
std
cmps
test
lods
adc
push
hlt
mov
add
xor
fwait
cwde
test
jg
(bad)
mov
lahf
or
push
nop
or
and
test
fdiv
mov
mul
adc
or
fld
push
scas
ins
cmp
pop
aam
add
push
adc
mov
rol
ins
cmp
cmp
cmp
push
dec
jo
inc
adc
sbb
mov
std
jns
test
push
pop
jl
mov
and
data16
div
ss
xlat
push
idiv
dec
test
ficomp
enter
sub
adc
inc
add
mov
cmp
jne
popa
out
test
mov
leave
dec
mov
mov
mov
jp
ror
test
mov
js
enter
adc
jmp
mov
aaa
stos
ja
dec
jo
mov
ret
xor
retf
push
mov
or
pop
push
mov
push
cld
pop
cmps
add
(bad)
inc
fimul
mov
cli
aaa
pop
out
pop
in
loop
xor
push
xchg
aam
jnp
lahf
retf
cmp
ror
sub
or
jb
jle
inc
repnz
aas
fisttp
lods
and
daa
stos
push
fdivr
nop
ret
mov
add
jmp
pop
pop
xchg
cwde
ins
cs
jmp
mov
xchg
je
push
and
mov
std
pop
cli
jmp
or
push
imul
stos
cli
int3
pop
pop
sub
fld
(bad)
pop
stos
inc
in
and
and
push
js
lods
mov
test
sbb
cmps
and
and
xor
icebp
mov
out
iret
retf
icebp
(bad)
jbe
bound
pop
jo
adc
jle
dec
jb
or
test
loop
push
mov
fwait
stos
pop
push
aaa
out
adc
xchg
jne
dec
and
jne
or
cmps
es
int
pop
fild
int3
mov
dec
popa
shl
and
repz
prefetch
or
nop
aas
dec
push
and
mov
push
inc
cdq
jp
ja
cld
inc
add
enter
mov
data16
inc
sbb
ds
pop
or
mov
arpl
enter
inc
test
popf
or
int3
jne
jle
sub
push
std
mov
jle
jp
jle
or
mov
sub
add
xchg
(bad)
jno
inc
fbld
in
xlat
mov
nop
xor
mov
fnstsw
mov
ja
ss
push
sti
push
gs
mov
mov
loop
lea
js
stc
aaa
xchg
adc
sub
mov
jns
std
test
sub
adc
les
int
nop
cdq
push
out
push
(bad)
mov
xlat
jle
(bad)
mov
cwde
jp
mov
(bad)
cld
dec
das
or
add
addr16
sahf
mov
push
push
into
arpl
ret
in
xor
jle
mov
mov
pushf
mov
fs
ret
mov
test
aaa
inc
fbld
call
pusha
(bad)
and
push
fwait
cmc
sbb
push
xor
add
arpl
es
push
add
adc
das
pop
cmovb
pop
arpl
adc
jmp
jle
int
sub
jg
ja
jmp
add
or
xchg
mov
fs
lock
call
cld
and
(bad)
mov
xchg
pop
mov
jae
add
push
sbb
mov
out
mov
xor
mov
cmp
cmps
push
adc
jge
leave
cmps
leave
sub
iret
fadd
or
dec
mov
push
mov
fwait
sub
add
jmp
hlt
fiadd
xlat
mov
fild
stos
inc
push
pop
inc
fdiv
mov
popf
xchg
push
int3
(bad)
mov
cmps
cs
fmul
cmps
or
push
and
popa
add
arpl
fcom
push
loop
mov
adc
pop
add
add
arpl
xor
lahf
pop
or
fcom
xchg
ins
mov
xor
pop
shl
jno
inc
and
pop
sub
add
nop
enter
push
mov
outs
or
div
rcr
out
lods
mov
aaa
cmovge
sbb
jecxz
(bad)
pushf
(bad)
std
aam
xchg
push
inc
mov
jle
jg
push
call
js
jecxz
jo
gs
push
and
je
imul
add
movs
fldenv
jo
cld
mov
gs
jecxz
int3
lea
and
fwait
imul
in
data16
mov
dec
add
js
or
add
(bad)
push
jmp
push
push
popa
push
jecxz
or
sti
pushf
aaa
(bad)
fnstsw
fisub
add
lock
mov
cmps
movs
add
push
int3
paddq
dec
adc
out
jmp
cmp
js
jecxz
lods
shl
mov
and
jmp
stos
mov
in
push
es
(bad)
fdiv
inc
pop
push
into
fist
cmc
out
xor
pop
mov
fld
mov
cmps
sub
dec
xlat
cmp
jb
cmps
gs
mov
jmp
inc
and
mov
stos
ret
fmulp
cmp
adc
jge
and
shr
sub
js
scas
(bad)
ror
ja
sub
das
cmp
pop
fcom
push
mov
adc
mov
aaa
xor
retf
icebp
mov
jl
sbb
(bad)
sbb
test
(bad)
mov
push
xor
arpl
jns
pop
dec
xchg
mov
cmc
out
pop
fnstsw
dec
mov
cmps
rol
or
add
pop
cmc
sbb
mov
push
jg
or
je
movs
int3
and
xchg
ror
mov
cmp
mov
add
in
cmps
shl
xchg
jae
jns
scas
cdq
mov
das
loopne
clc
out
jmp
addr16
out
sub
adc
out
sar
sbb
test
in
xor
inc
fs
cmps
xor
mov
scas
pop
stos
dec
sub
pop
sbb
add
pop
mov
pusha
test
dec
xor
jno
or
iret
sub
leave
cmp
or
mov
inc
add
xor
push
pop
repz
(bad)
std
std
xchg
rcl
fld
scas
mov
test
fist
xchg
(bad)
cld
lahf
aad
in
int
adc
add
pop
jge
mov
jg
jbe
dec
ds
mov
adc
icebp
jmp
aad
and
imul
imul
inc
pop
js
add
out
fcom
cmp
inc
jmp
je
out
adc
movs
aas
ficomp
mov
les
lahf
jns
pop
mov
sub
(bad)
jecxz
fistp
mov
nop
(bad)
sub
int
shl
ds
cmp
inc
jno
sub
int3
rol
xchg
in
rcr
leave
jg
cmps
test
ror
aas
jp
or
and
xchg
cli
cwde
cli
into
sbb
cmp
das
popa
inc
or
(bad)
es
push
stos
(bad)
rcl
pop
int3
sbb
xchg
pop
pop
xor
pop
and
movs
adc
or
nop
mov
jmp
mov
daa
imul
repnz
(bad)
cmps
in
cdq
shl
cmc
cmp
popf
inc
sbb
or
dec
sub
das
fwait
shr
xor
mov
cmps
leave
xchg
inc
mov
hlt
es
xor
add
lds
cmp
imul
in
cmp
sbb
in
out
retf
cmp
push
movs
fwait
in
popf
rcr
cld
ds
not
and
xchg
pop
int
enter
cmp
in
mul
or
sbb
push
ins
mov
imul
arpl
ins
pop
imul
adc
fwait
daa
fsub
lods
mov
jnp
retf
push
lods
inc
push
sub
cmc
sbb
ss
push
pop
aad
add
iret
dec
mov
outs
repnz
(bad)
jno
lods
leave
fs
push
imul
into
pusha
ss
(bad)
xor
repz
or
cmp
mov
jb
mov
pop
cli
push
cmps
jl
fstp
jg
add
fist
pop
cwde
mov
push
je
gs
ins
push
or
mov
int3
mov
mov
adc
adc
jno
push
add
pop
cmp
pop
jmp
(bad)
arpl
push
cmp
jle
lea
pop
lods
fs
outs
add
jno
mov
jns
cmp
fisttp
pop
repnz
stos
mov
push
inc
push
mov
(bad)
pop
push
fmulp
jbe
jno
into
mov
call
fs
adc
fcomi
inc
and
xor
dec
std
adc
xchg
nop
(bad)
sub
test
and
outs
pop
std
cmp
not
or
pop
xchg
mov
fidiv
and
repz
push
mov
adc
inc
in
sbb
lods
mov
fwait
(bad)
mov
pushf
push
jle
add
adc
mov
mov
push
call
dec
mov
xchg
cmp
outs
test
cmc
ret
leave
sbb
fidiv
sub
jne
dec
mov
push
and
xchg
imul
cli
xor
xlat
mov
aad
cmp
push
jle
xor
lahf
mov
xchg
fs
pop
xor
neg
out
outs
push
pop
xchg
mov
add
and
inc
cs
push
push
aad
outs
or
xchg
rcl
repnz
out
jne
or
clgi
xchg
sub
adc
je
xchg
mov
(bad)
and
int
ret
push
(bad)
std
mov
adc
inc
xchg
loopne
ins
sahf
mov
sub
cmps
pop
xlat
es
or
inc
(bad)
adc
popf
sub
aad
in
adc
repz
dec
dec
icebp
push
inc
scas
movs
adc
push
mov
pop
stc
vmovmskps
xchg
icebp
mov
out
call
cmp
sbb
dec
std
mov
mov
mov
or
popf
adc
test
scas
jge
and
mov
add
xchg
sbb
aam
into
dec
xor
daa
outs
ds
adc
test
cmc
xchg
inc
xchg
or
call
adc
cli
mov
push
sbb
stos
cmc
je
imul
imul
js
sub
and
std
iret
test
push
and
pop
cmps
pop
or
fisub
jmp
mov
repz
fwait
xor
add
xor
inc
jg
mul
cmp
xor
mov
iret
test
lock
pop
call
fwait
leave
mov
stc
jp
lock
or
sub
inc
popf
pop
jmp
sub
cmp
lds
call
mov
nop
mov
push
daa
adc
mov
(bad)
out
aas
add
push
aam
xor
cs
cmps
jg
dec
and
es
mov
dec
sbb
mov
data16
adc
push
dec
push
mov
or
sub
or
mov
scas
jae
adc
lods
fadd
dec
icebp
idiv
lods
ss
fdiv
push
jnp
jnp
icebp
cmp
(bad)
or
pop
pop
(bad)
ins
or
xchg
rcl
pop
cmp
adc
sahf
fnsave
or
add
push
test
cdq
mov
scas
(bad)
push
inc
and
fadd
(bad)
ja
dec
addr16
sbb
xchg
pop
aaa
fisttp
and
loopne
mov
stos
xchg
pop
rcl
stos
mov
test
jmp
mov
dec
dec
outs
cmp
or
sub
mov
fdivr
repnz
cmp
adc
test
xor
enter
adc
ins
push
mov
xor
xor
add
inc
cmp
dec
sar
lock
jae
push
xchg
pusha
cmp
popa
or
ds
mov
aam
sbb
dec
(bad)
xor
pop
jno
fstp
dec
adc
mov
xor
push
add
call
mov
mov
sbb
icebp
sub
rcr
js
shl
sbb
popa
je
aaa
sub
movs
jmp
bound
mov
aam
int3
ret
or
cmps
aad
inc
xor
loop
mov
stc
sub
sbb
mov
dec
or
enter
sub
cmc
or
adc
sbb
inc
mov
(bad)
out
outs
sub
ror
scas
and
mov
sub
pusha
gs
mov
xor
lahf
xchg
cmp
shl
mov
pop
or
in
popa
inc
pushf
inc
add
push
cmp
and
sbb
xchg
xor
mov
sti
pop
aad
pop
arpl
out
hlt
xchg
mov
sub
shl
sbb
sub
inc
or
ror
mov
jecxz
cmps
push
add
imul
scas
pop
call
xor
and
adc
gs
push
clc
push
gs
xor
mov
mov
sub
mov
fistp
inc
pop
pop
dec
stos
jnp
xchg
and
cdq
pop
mov
stc
cdq
pop
adc
adc
cld
pop
inc
(bad)
(bad)
cmps
mov
push
push
cwde
pop
arpl
test
push
cmp
dec
jp
(bad)
into
loopne
dec
sbb
cmps
data16
jl
push
sbb
jl
idiv
stos
not
push
data16
les
cld
cmc
push
dec
lods
shl
and
bound
sahf
scas
sti
inc
pusha
inc
sub
not
push
add
sub
(bad)
aam
mov
cmps
pop
pop
push
jo
or
push
movs
jae
mov
pop
movs
cmp
(bad)
stos
dec
push
mov
cmp
xchg
xchg
int3
mov
or
dec
mov
inc
push
pop
(bad)
mov
push
bound
mov
dec
xchg
mov
rcr
shl
in
scas
lods
test
pop
sar
push
lods
in
jnp
mov
sub
inc
fdivr
scas
fst
test
popf
leave
out
hlt
loop
xchg
imul
sub
loop
or
xlat
cmp
adc
add
mov
jae
mov
out
adc
adc
pop
jg
and
cdq
mov
dec
jle
mov
mov
cmp
inc
nop
xchg
in
or
or
sub
(bad)
sbb
pop
mov
pop
jns
cmp
outs
and
mov
fldenv
push
and
mov
dec
inc
pushf
push
int
nop
xor
gs
cwde
cmp
les
fcomp
sub
jmp
rol
mov
cmps
xchg
mov
js
in
cmp
mov
or
call
loopne
js
xlat
imul
popf
outs
loope
mov
dec
jg
repnz
jb
and
mov
jge
outs
pop
(bad)
jp
fwait
pushf
cs
imul
hlt
nop
inc
push
loopne
add
cli
jbe
div
repz
lds
mov
push
and
fdiv
fcom
inc
sbb
fld
test
or
popf
mov
test
adc
mov
stos
push
(bad)
xchg
fdivr
xchg
outs
pop
fiadd
add
call
pop
hlt
push
lds
cmp
(bad)
mov
cmp
in
div
inc
ja
sub
repnz
or
jmp
sub
jp
scas
aas
int3
lds
and
or
pop
mov
loopne
mov
jo
into
out
imul
dec
or
arpl
and
xor
inc
daa
push
(bad)
mov
lods
cmps
ins
pop
stc
mov
inc
aaa
push
stos
retf
cmps
fstp
fld
inc
es
inc
cmp
es
sbb
pop
(bad)
js
mov
mov
mov
loopne
test
sahf
push
mov
mov
jecxz
mov
out
ret
and
mov
fidiv
repz
repnz
push
push
sub
fmul
jmp
cwde
pop
popf
in
inc
(bad)
out
mov
push
cmp
pop
xor
pop
pop
shl
lahf
cs
adc
xchg
lock
test
or
fild
jl
sbb
push
out
fdivrp
icebp
(bad)
push
es
mov
imul
xchg
aas
cmps
call
shl
cmp
xchg
xor
and
push
retf
inc
jbe
ss
cmps
clc
or
jnp
and
in
ror
or
xor
movs
xor
inc
jle
add
retf
jecxz
jae
test
jg
and
cld
xor
and
lahf
xor
adc
mov
ret
dec
ret
add
aad
mov
(bad)
mov
adc
dec
jae
mov
sub
xchg
aas
and
(bad)
push
data16
xor
aam
fistp
(bad)
ss
repz
sub
xor
lock
imul
adc
xchg
adc
and
cmps
call
mov
rcr
nop
es
jge
mov
out
scas
pop
mov
push
outs
sbb
mov
xor
sahf
out
ficom
cld
mov
sbb
sub
and
sub
aaa
scas
push
arpl
retf
mov
clc
inc
dec
jbe
out
nop
out
cli
xchg
das
and
mov
jae
dec
pop
dec
rol
aaa
(bad)
and
push
dec
pop
ins
cmp
rcr
cmp
inc
push
loope
mov
or
je
jg
fdivr
adc
jle
mov
aaa
imul
inc
fwait
repnz
icebp
dec
mov
mov
call
sbb
mov
or
fwait
mov
test
dec
inc
std
arpl
test
xchg
ja
jb
stc
push
in
int
jb
dec
xchg
and
xor
cwde
fld
sub
xchg
cmp
inc
not
jl
pop
mov
inc
jo
push
adc
les
data16
psubd
sbb
cmc
popf
or
mov
cmc
mov
inc
cmps
xchg
mov
loop
(bad)
push
or
mov
sub
push
and
add
shr
jmp
aas
inc
jmp
aam
jmp
je
jb
cli
xchg
sbb
inc
lds
cmps
jmp
cmp
ins
inc
inc
xor
es
ror
push
(bad)
out
and
sub
mov
ss
mov
or
push
mov
push
addr16
leave
mov
inc
stc
repz
bound
jno
fimul
and
cmp
inc
cmps
pop
data16
shr
cdq
out
push
pop
(bad)
mov
dec
or
outs
pop
xor
shr
mov
mov
sbb
pcmpeqb
sbb
xchg
adc
mov
cmp
lea
lea
mov
cmps
push
ds
outs
mov
mov
mov
jge
and
arpl
das
mov
sbb
sbb
cmp
dec
cdq
pop
mov
rcr
leave
xchg
nop
push
xor
into
test
jle
mov
js
mov
cdq
repz
jle
les
xor
jmp
or
dec
ss
mov
ficomp
int3
daa
mov
call
cwde
add
arpl
retf
xor
cmp
mov
or
out
div
push
outs
jne
cmp
test
fcomp
xor
shl
inc
jne
mov
(bad)
out
or
into
stc
or
cmovne
inc
cmp
ins
cs
push
mov
retf
xchg
pop
in
push
scas
imul
mov
inc
stos
jo
jb
(bad)
(bad)
cmc
retf
dec
adc
push
push
int
cdq
add
pop
cmps
xchg
ins
jns
xchg
add
clc
in
sub
bound
sbb
out
ins
xchg
std
fistp
leave
leave
das
hlt
rcl
sbb
shr
in
ja
adc
sti
push
inc
mov
enter
jo
ret
jmp
adc
or
jo
adc
xchg
aas
ror
cs
div
int
stc
repnz
adc
imul
dec
push
(bad)
fwait
xor
add
(bad)
cli
sub
mov
pop
dec
adc
test
cmp
into
mov
sub
or
mov
jnp
rcl
cmp
mov
jecxz
out
push
cld
pop
retf
ror
inc
or
or
xlat
es
inc
ret
repz
xchg
xchg
sahf
lea
mov
jmp
imul
jae
adc
popa
mov
stos
and
or
dec
imul
cdq
idiv
mov
gs
in
cld
in
adc
inc
xchg
dec
jno
clc
pop
cmp
mov
aam
div
cmc
out
jb
pop
xchg
xacquire
add
jbe
add
shr
mov
daa
inc
mov
pop
pusha
push
sub
imul
ficomp
cmp
cmps
mov
retf
pop
mov
ds
push
dec
sbb
xor
mov
out
sub
rcr
push
xor
mov
nop
lds
rcl
cmp
sub
shr
sti
shl
dec
add
sahf
shr
out
sahf
add
sbb
dec
adc
fisub
jmp
jne
arpl
cld
scas
push
fidiv
jl
adc
aas
xor
mov
push
cdq
test
imul
fnstsw
bnd
sbb
cli
push
mov
push
cmps
or
mov
dec
adc
mov
mov
and
mov
sar
stos
nop
lock
inc
mov
pop
out
leave
aas
shl
hlt
lds
lods
inc
xchg
mov
or
xchg
mov
adc
push
sub
sub
xchg
adc
push
fcmovu
or
pushf
jmp
fimul
ds
xchg
arpl
and
xor
gs
sub
pushf
fbld
cmp
inc
das
xchg
mov
pop
mov
sub
and
stos
mov
sub
jno
mov
jne
(bad)
retf
ss
je
aas
sub
adc
sub
jmp
and
or
mov
fs
or
scas
jle
cmp
add
lds
dec
inc
movs
push
cld
arpl
dec
sub
in
sub
or
retf
test
push
mov
mov
cmps
mov
add
add
retf
mov
xchg
or
sbb
adc
and
scas
add
(bad)
js
mov
es
and
aad
pop
shl
vpaddb
lahf
cmp
test
mov
daa
shr
jne
and
xor
adc
xchg
cwde
mov
ins
es
or
addr16
ds
and
push
repz
push
xchg
jp
mov
(bad)
retf
mov
lock
popa
(bad)
jp
jg
test
and
cmps
cmp
sub
adc
pop
fisubr
in
std
pop
fidiv
xchg
push
cmp
xor
push
or
imul
or
mov
jle
daa
push
cmc
rcl
jmp
pop
stos
in
jne
xor
jnp
aas
fcomp
data16
cmps
(bad)
das
push
xchg
(bad)
stc
sub
fcmovbe
cmp
addr16
(bad)
sahf
iret
cmp
mov
xlat
loope
cli
mov
rol
and
pop
adc
xchg
data16
or
mov
inc
daa
(bad)
xor
retf
mov
arpl
out
(bad)
xor
rcr
aaa
push
jge
xor
aas
push
sbb
adc
adc
ficom
xor
ins
xchg
inc
loop
ja
or
dec
call
xor
mov
sub
mov
push
dec
retf
mov
mov
mov
xchg
xchg
jnp
sub
shr
mov
xchg
sbb
int
test
bound
adc
sbb
xchg
jb
xor
cwde
clc
(bad)
vcmppd
or
stos
add
call
shl
int
inc
mov
ds
push
mov
sub
mov
mov
dec
xchg
not
adc
(bad)
aad
shl
repz
mov
movs
cwde
sub
retf
test
mov
dec
xor
dec
inc
repnz
mov
dec
or
retf
dec
sahf
sahf
cmp
ins
push
sub
(bad)
in
cmp
mov
repz
cwde
pop
xchg
mov
or
lods
iret
adc
hlt
mov
test
not
adc
pop
imul
sbb
lods
cmps
xor
jg
aam
hlt
loopne
cmp
les
lea
xor
lods
push
retf
and
and
arpl
fst
push
xor
xor
ins
data16
inc
cdq
imul
iret
push
and
adc
es
add
dec
les
jno
push
lds
sbb
mov
xchg
data16
adc
fcmovu
test
int3
mov
jmp
inc
mov
ja
pop
lods
retf
(bad)
data16
push
shr
jp
shr
fcom
imul
(bad)
aad
rol
adc
fwait
pushf
repnz
das
mov
into
arpl
mov
fdivr
xlat
call
imul
test
or
and
pop
(bad)
and
out
outs
push
sbb
test
popa
add
mov
sub
rol
sbb
scas
fiadd
jp
adc
leave
pop
ror
mov
sbb
adc
push
aas
pop
aad
clc
fs
in
fmul
dec
shl
popa
imul
sbb
stos
jp
std
ror
push
fisub
aam
xchg
ins
sbb
jo
ds
cmps
leave
mov
sahf
(bad)
and
leave
mov
add
push
shr
ror
inc
in
jp
sub
mov
mov
dec
popw
jecxz
mov
mov
scas
pusha
pop
mov
xor
hlt
jnp
xchg
hlt
mov
out
lahf
adc
mov
and
icebp
inc
outs
fwait
repnz
xlat
sub
cmc
int
push
xchg
xor
mov
xor
(bad)
(bad)
loope
and
shr
and
aas
fmul
push
movs
(bad)
jmp
adc
push
xor
ins
iret
in
lods
inc
adc
cmp
int
pushf
adc
and
sti
jno
or
sar
xchg
pop
xchg
sub
and
out
xchg
es
jle
cmps
mov
call
movs
ss
sub
(bad)
xchg
adc
rol
cmc
je
(bad)
mov
dec
les
jo
adc
or
push
pop
fmul
inc
sbb
rcr
cwde
jg
jecxz
aas
jmp
aad
adc
xor
bound
or
jecxz
mov
adc
pop
jp
cmp
(bad)
les
add
push
cs
xchg
ins
(bad)
arpl
test
clc
sub
xor
xor
pop
lods
adc
ror
stc
nop
mov
pusha
dec
lahf
sub
loopne
loope
pop
mov
jnp
dec
jp
pop
shr
cmps
or
fadd
or
xor
lds
fsub
cmps
cmp
out
pop
std
repz
xchg
cmp
gs
jp
xchg
xor
daa
inc
cmp
(bad)
xor
push
leave
mov
push
lea
sahf
aas
leave
sahf
add
pop
cmps
pusha
retf
adc
sub
popa
ins
cdq
sbb
cmps
ins
clc
jne
icebp
cmc
outs
sbb
call
std
neg
pop
test
ins
das
sub
not
shr
pop
push
cmp
mov
or
aam
sbb
(bad)
mov
fiadd
ficom
pop
das
(bad)
mov
arpl
aad
iret
dec
add
es
aaa
and
xchg
mov
gs
cdq
add
jecxz
mov
jg
cmp
push
aaa
adc
and
adc
or
bound
or
pop
mov
mov
dec
out
inc
and
nop
ror
mov
dec
dec
nop
mov
xlat
pop
popa
call
lahf
pop
mov
out
(bad)
push
fwait
add
inc
push
jl
dec
mov
jmp
sahf
sub
adc
pop
fs
iret
popa
test
adc
mov
fisub
adc
jnp
aaa
or
cli
sbb
leave
icebp
clc
add
dec
rcr
(bad)
fsub
mov
xchg
inc
aas
imul
arpl
cmps
mov
aaa
mov
int3
int
adc
icebp
arpl
(bad)
xlat
icebp
adc
push
rol
out
mov
xlat
imul
mov
je
xchg
ficomp
jge
sbb
jecxz
fs
dec
xor
movs
sub
cwde
cmps
pop
xor
xor
push
ret
sub
mov
out
icebp
fyl2x
inc
pop
lods
pusha
sar
adc
xchg
sahf
jecxz
cs
lea
sbb
push
xchg
hlt
mov
cmp
mov
mov
sbb
mov
push
inc
jbe
mov
leave
and
xchg
mov
shl
and
xchg
clc
jmp
ret
xor
jne
out
jmp
xlat
enter
sar
rol
shr
push
test
sbb
cmps
or
mov
dec
int
mov
ins
xlat
es
scas
mov
dec
adc
shl
sub
fcom
and
pop
inc
and
mov
fcomp
adc
jbe
fidivr
pop
ret
aad
ja
jbe
xor
mov
lds
nop
fldenv
outs
cmps
out
or
enter
mov
xor
mov
loopne
icebp
mov
and
rcl
call
(bad)
clc
into
loopne
imul
add
test
cmp
push
movs
lds
call
push
lods
shl
lods
daa
and
movs
std
bnd
call
out
and
fadd
pop
sbb
loopne
push
inc
inc
sub
je
jmp
mov
xchg
jo
(bad)
cmp
mov
adc
cmps
into
inc
iret
xor
mov
cli
and
in
fucom
(bad)
or
dec
int
xor
cli
cld
(bad)
inc
mov
mov
sti
not
xor
(bad)
sub
add
(bad)
call
push
adc
push
cs
int3
scas
stos
jp
or
or
popf
sub
inc
mov
push
adc
test
(bad)
rol
dec
scas
mov
repz
xor
push
xor
mov
call
cmp
retf
cmp
pop
inc
push
pushf
clc
(bad)
arpl
sbb
and
cmp
(bad)
add
(bad)
repz
add
push
ds
cmp
add
cmc
aaa
mov
imul
ins
xchg
cmp
outs
int
jp
ficom
adc
xor
pop
scas
jnp
sbb
jp
push
cmp
loop
xor
sub
call
ret
ds
out
rol
adc
mov
push
lods
mov
jo
fsin
adc
sbb
add
jl
cmp
pop
mov
mov
sahf
iret
hlt
mov
push
adc
jo
cmc
dec
(bad)
adc
mov
push
inc
dec
aam
popa
mov
xchg
(bad)
and
je
popf
push
test
sbb
adc
mov
xchg
add
adc
imul
rcr
ins
data16
pop
aad
lods
and
in
cmp
(bad)
fcom
or
and
das
jecxz
scas
repz
jl
mov
mov
sub
fdivr
call
ins
xor
in
jnp
inc
rcl
bound
aam
xor
std
sbb
das
cdq
cmp
pop
fbld
lds
mov
push
out
daa
in
push
inc
aas
sbb
fsub
mov
nop
jne
clc
or
sar
mov
mov
ja
and
xor
sbb
lahf
mov
fst
dec
mov
(bad)
imul
inc
cdq
stc
pop
(bad)
mov
jae
data16
lods
push
sbb
sub
sbb
fs
scas
inc
push
loop
out
lahf
aas
inc
xor
fucomip
int
ds
div
in
pop
cli
cmp
test
mov
mov
daa
fisub
pop
aaa
xor
test
ror
dec
imul
mov
sbb
stc
fmul
in
jecxz
lahf
ficom
xor
js
sbb
or
or
jbe
cld
add
aam
mov
int3
aam
outs
xor
int3
fmul
ror
jmp
push
push
push
mov
das
pop
push
mov
in
mov
popa
icebp
popa
xchg
sbb
and
loope
popa
call
sub
sti
mov
popf
add
xor
(bad)
mov
xchg
mov
pop
popa
repz
cmp
pop
sbb
jmp
mov
cmc
arpl
repnz
xchg
pop
mov
lods
pushf
push
call
jle
aam
or
(bad)
mov
inc
fstp
pop
sbb
push
dec
int
and
cdq
cmc
pop
out
pop
sub
ds
sbb
scas
aad
cmp
push
rcr
mov
cmp
imul
inc
jle
pop
mov
and
movs
mov
loop
daa
jno
mov
cwde
repz
cmp
lods
sti
pop
dec
ss
out
and
xchg
and
cmps
xor
mov
jg
mov
mov
xlat
mov
sub
jno
call
mov
jmp
mov
pop
xor
pop
bound
add
aaa
stc
xor
aam
jns
test
into
(bad)
jno
pop
fwait
mov
jl
gs
dec
xlat
push
clc
mov
loop
fs
xor
pop
gs
xor
iret
imul
xchg
sbb
dec
lea
xor
sub
xor
int3
cdq
mov
jo
dec
js
loope
repnz
bound
mov
pop
inc
lahf
test
test
call
rcl
(bad)
test
aas
call
out
cld
ja
in
outs
retf
adc
pop
xor
mov
sbb
fmul
xor
das
or
sub
adc
mov
pop
test
inc
pop
cmp
jmp
jo
jg
test
outs
add
pushf
push
popa
pop
outs
outs
out
imul
push
mov
fiadd
in
xor
ret
jg
arpl
cmps
mov
std
inc
push
xor
std
inc
mov
std
inc
push
push
test
inc
pop
push
in
int3
mov
imul
pop
mov
xchg
or
call
add
(bad)
push
jmp
mov
rcl
test
xchg
les
jge
ret
or
pusha
and
dec
xor
fisttp
jne
(bad)
ret
mov
inc
adc
or
xchg
shl
adc
stos
ins
mov
xchg
(bad)
xor
fdivr
les
fst
xlat
or
cmps
std
jmp
mov
mov
js
ins
push
push
ja
in
nop
retf
adc
(bad)
cld
jecxz
lock
dec
pop
stc
sbb
mov
mov
cmp
mov
repz
or
repz
cmp
clc
mov
push
jmp
mov
clc
push
scas
(bad)
jecxz
xor
aas
jne
adc
fstp
sbb
add
repnz
(bad)
leave
mov
mov
stc
pop
mov
push
sub
push
test
cmps
cdq
jecxz
adc
test
cmp
push
test
or
push
jb
test
lahf
or
outs
or
mov
cmc
xor
call
int
(bad)
cwde
fucomi
jno
mov
pop
mov
sub
ret
push
dec
es
ror
jnp
cmp
sub
mov
data16
pop
push
push
and
test
inc
jno
loop
add
imul
mov
push
(bad)
pop
nop
cmp
cld
pop
das
ds
inc
push
sub
cmps
add
xor
xor
not
pop
xchg
mov
arpl
daa
cmp
(bad)
mov
add
lock
mov
push
jg
in
shl
sbb
push
xor
mov
loopne
(bad)
cld
xor
push
xchg
or
fld
mov
inc
push
sbb
and
cmp
dec
nop
inc
div
jge
rcl
aaa
cli
pop
fild
in
fsub
pushf
push
lods
add
nop
(bad)
dec
mov
popf
nop
mov
and
psubsb
rol
jo
inc
cmc
xchg
mov
push
cmp
sahf
rcr
ins
fwait
sub
and
fisubr
cld
out
adc
adc
fisub
out
fild
mov
sub
ins
sar
jno
fs
cli
push
push
test
leave
sub
shl
or
vsqrtps
int3
sbb
mov
inc
cs
pop
mov
in
scas
cs
mov
push
xor
es
addr16
pop
mov
sub
mov
pop
mov
push
sbb
lahf
adc
mov
jnp
dec
mul
repnz
mov
js
ins
fimul
in
or
call
sbb
and
sbb
jbe
add
mov
stc
mov
pop
pushf
xchg
sbb
jecxz
jmp
lahf
xchg
pop
cmc
movs
idiv
xlat
dec
sar
push
in
out
or
dec
sbb
test
sub
scas
xor
shl
mov
push
rcr
loopne
in
arpl
mov
and
shr
hlt
xchg
push
xchg
pop
push
(bad)
aam
retf
pop
adc
xchg
push
dec
lods
or
fild
jo
cmp
out
sahf
xor
(bad)
mov
popf
inc
das
rol
mov
push
dec
cli
popf
cmps
js
test
sub
inc
push
pop
(bad)
add
loope
mov
mov
pop
mov
cmps
add
fld
pop
int
fnstsw
(bad)
js
pop
sub
or
test
rcl
xor
jo
push
or
pop
lods
pop
adc
fistp
sub
inc
adc
in
dec
inc
outs
jne
dec
and
push
or
out
stos
shr
or
adc
ret
stos
mov
adc
add
rol
xchg
jns
daa
or
scas
jp
inc
or
pop
cs
push
jge
aad
movs
and
popa
bnd
pop
in
cdq
cmp
dec
aam
fcom
mov
xchg
add
mov
lock
push
dec
adc
rol
sbb
test
xor
lahf
inc
fnstcw
mov
push
daa
adc
hlt
stos
jnp
ficomp
lods
inc
fcmovnb
cmp
pop
enter
cs
movs
sbb
ja
into
mov
mov
mov
lahf
dec
ret
cmp
jne
adc
add
ins
mov
jmp
and
inc
adc
cmp
movs
dec
mov
rcr
jmp
pop
add
sub
out
popf
cmp
and
loopne
test
pop
pushf
test
cmp
sbb
pop
pop
les
gs
lock
imul
loop
or
in
pop
jp
lock
mov
pop
or
add
sbb
movs
pop
jno
jmp
es
jbe
jbe
lods
icebp
mov
bnd
(bad)
xlat
mov
xor
inc
mov
rcl
mov
add
pop
enter
push
out
mov
fs
dec
sti
loopne
fsqrt
int
fwait
fwait
(bad)
xchg
xor
into
mov
mov
je
sub
sar
lds
clc
push
mov
cmp
call
scas
iret
sub
imul
icebp
call
out
add
cmp
add
stc
pop
bound
mov
cld
cmp
test
xchg
cmp
push
adc
cld
rol
sub
jae
retf
js
adc
clc
pushf
daa
sub
jb
int
dec
add
or
lods
cwde
or
lods
xchg
push
push
repz
retf
fidiv
mov
pop
ds
xchg
push
pop
adc
bound
add
pushf
div
pop
mov
inc
adc
in
(bad)
fidivr
jge
push
push
sbb
fisubr
out
inc
je
jo
and
inc
popa
cmp
imul
bnd
mov
jmp
cmp
je
jg
(bad)
dec
fisttp
xchg
xchg
sbb
lods
out
sbb
push
mov
mov
xor
push
adc
ja
cmps
pop
xchg
lods
ja
inc
fstp
mov
enter
(bad)
adc
and
movs
mov
xchg
ret
lds
and
or
aaa
addr16
rcr
dec
jmp
retf
(bad)
dec
mul
mov
xchg
xor
pop
xor
mov
mov
mov
sbb
dec
call
repz
enter
inc
cdq
and
adc
xor
ds
sti
outs
mov
mov
mul
(bad)
jecxz
mov
ss
push
(bad)
xchg
ins
mov
ins
xchg
jecxz
fstp
iret
inc
in
mov
push
jl
gs
daa
xlat
xchg
ret
mov
or
(bad)
and
outs
xchg
cli
hlt
dec
adc
lea
(bad)
daa
neg
xchg
imul
mov
push
xchg
test
rol
outs
mov
call
sahf
sti
jne
jmp
mov
shr
lahf
outs
xchg
push
rcl
cld
sbb
test
adc
add
aaa
lock
aas
cmp
sbb
xor
mov
shr
pop
loop
or
sub
cmp
xor
mov
mov
xor
jg
mov
rol
ins
mov
push
or
xor
pop
pop
int
int
jns
inc
cwde
pop
add
inc
(bad)
shl
scas
imul
out
pop
or
dec
aaa
test
(bad)
pop
jp
push
loope
jnp
jno
ds
ins
mov
sbb
sub
shl
gs
inc
mov
xor
sar
and
sbb
shl
test
pop
dec
pushf
test
stc
mov
aaa
xchg
sbb
out
aaa
cmps
xchg
fcom
push
inc
add
test
shr
aas
out
popf
ret
loop
or
clc
or
xlat
gs
dec
push
or
ss
add
(bad)
ins
sbb
out
adc
aaa
hlt
dec
aas
popf
out
xchg
pop
gs
mov
xchg
cmp
clc
jg
jmp
add
jle
or
lods
sub
jp
imul
js
cmp
xor
push
jmp
aaa
popa
push
cld
scas
and
inc
scas
mov
test
push
sub
ret
test
pop
pop
xor
jno
sub
jge
cmp
push
jmp
test
jb
pop
or
in
inc
jge
mov
ss
push
or
push
cmp
shl
xchg
dec
aam
xchg
xor
push
xchg
dec
int
push
mov
cwde
enter
ins
mov
cld
push
rol
cmps
inc
push
push
or
cdq
sbb
shr
mov
repz
outs
int
sbb
jg
stc
jmp
jb
outs
sub
xchg
hlt
(bad)
xchg
jl
sahf
or
add
stos
pop
sub
sbb
and
in
aaa
fstp
push
mov
aas
mov
or
xor
stc
in
and
(bad)
les
and
ja
xor
bound
add
push
jge
jle
cld
popf
ds
and
mov
add
or
fmul
cmp
idiv
dec
xchg
jnp
enter
sbb
push
cmp
cmc
jg
add
add
mov
loope
mov
(bad)
push
div
sub
xchg
rol
pop
fcomp
jbe
mov
dec
xor
xor
shl
in
mov
inc
lds
mov
dec
dec
shl
mov
sbb
and
mov
fisttp
or
xchg
mov
jne
dec
popf
inc
stos
mov
lods
adc
into
test
push
lock
fmulp
mov
popf
add
dec
aad
sahf
xchg
sbb
cs
xchg
inc
cdq
sbb
xchg
xchg
fwait
push
push
inc
cs
inc
loop
mov
mov
mov
shl
(bad)
mov
fimul
add
test
mov
ret
clc
adc
aad
aaa
into
pushf
ret
mov
movs
mov
push
rcl
xor
pop
loopne
push
adc
add
cdq
dec
push
nop
or
sbb
sub
pop
xchg
mov
push
std
dec
mov
pop
mov
jl
xchg
mov
xlat
xor
jne
pop
pop
pop
sub
or
ret
mov
push
jle
inc
stc
int3
sbb
test
outs
mov
xor
and
jae
sahf
jl
sbb
fist
push
leave
jb
cdq
push
add
js
jns
add
jl
adc
das
mov
imul
test
push
push
stos
test
ficom
je
lea
mov
mov
enter
movs
add
mov
add
ret
mov
push
adc
sbb
and
mov
shl
adc
adc
mov
shr
jmp
es
loop
push
add
int3
in
push
adc
cmps
out
shl
sub
into
dec
(bad)
sbb
pop
pusha
pusha
gs
xor
sahf
add
pop
push
cmc
das
clc
ret
dec
(bad)
xor
cli
jmp
imul
hlt
loop
xor
addr16
arpl
push
and
or
ds
fs
sbb
add
sbb
xchg
ins
and
lods
sbb
and
and
jno
shl
add
loop
jno
push
lea
in
imul
shl
mov
or
dec
jmp
shl
shl
mov
adc
test
add
push
ret
sbb
test
inc
cwde
ins
dec
ins
push
adc
jo
xor
or
xor
push
mov
mov
(bad)
fmul
hlt
sub
pop
arpl
enter
mov
push
mov
sar
inc
xchg
lock
scas
push
mov
push
jo
movs
js
scas
leave
add
mov
xor
sbb
stos
iret
fiadd
int
out
into
mov
cmp
cmp
cmp
repnz
and
adc
stos
sub
imul
repnz
push
in
xor
(bad)
data16
ret
push
xchg
jbe
retf
aaa
sub
cmp
mov
inc
adc
sub
pop
arpl
mov
mov
test
sbb
mov
cmp
cmp
(bad)
sub
std
xor
shl
lods
test
adc
xor
lods
daa
xor
xlat
ds
(bad)
cmp
aaa
push
mov
cmp
adc
pop
pop
mov
jp
xchg
into
and
push
and
int3
mov
sbb
push
sbb
and
(bad)
and
jmp
daa
xor
or
sub
into
xor
xor
lahf
mov
xor
xchg
mov
out
les
test
dec
fnstsw
cmc
cmc
push
retf
lea
addr16
icebp
cmp
sbb
push
sti
movs
push
test
cmp
pop
pop
cmp
loop
or
inc
inc
inc
das
cmc
adc
shr
jl
xor
add
or
cmp
call
imul
or
xor
pusha
clc
(bad)
adc
sbb
pop
std
mov
mov
push
adc
test
sub
iret
iret
xchg
mov
or
int3
rol
pusha
pop
cwde
leave
rcl
cmps
fdiv
push
aaa
ja
call
dec
inc
inc
sbb
mov
frstor
out
dec
mov
cmps
adc
jecxz
fild
mov
pop
icebp
dec
pop
adc
add
xchg
std
add
push
repz
sub
pop
pop
test
jns
scas
add
and
scas
push
xchg
rcr
mov
pop
ror
ins
std
scas
mov
push
cmp
repz
fisub
push
cs
xchg
in
xor
cmps
inc
pushf
call
adc
lods
push
xchg
jns
loope
xlat
or
jmp
dec
(bad)
aam
stos
cdq
sub
xor
mov
jmp
push
inc
(bad)
adc
pop
mov
lahf
push
sbb
lock
or
inc
pop
mov
pop
cwde
stc
inc
pop
push
hlt
and
je
jp
cmp
nop
dec
mov
icebp
jle
xor
enter
pushf
dec
xchg
gs
xor
dec
pop
ss
sub
addr16
lods
jecxz
es
in
mov
(bad)
scas
test
xor
mov
or
inc
mov
jmp
jns
out
mov
sbb
mov
xchg
lds
inc
(bad)
xor
push
cs
xchg
rcr
int
call
inc
pop
fidiv
test
sub
add
jns
jns
push
and
movs
cld
add
rol
imul
push
push
mov
in
or
fcom
cdq
int3
or
(bad)
scas
push
(bad)
xor
std
jb
test
dec
xchg
rol
mov
add
nop
adc
test
mov
scas
aaa
fadd
pop
repnz
scas
fwait
jae
pushf
test
jnp
clc
arpl
dec
fnstenv
ror
loope
je
cmp
jp
sub
(bad)
jne
fs
dec
enter
hlt
adc
sbb
call
mov
loope
push
(bad)
jle
inc
fistp
mov
pop
lahf
out
xchg
add
repnz
push
pop
imul
adc
stos
pop
mov
push
add
pushf
out
out
sbb
pop
(bad)
cmc
dec
addr16
shl
fist
fld
xor
jmp
sbb
pop
mov
je
add
(bad)
shl
gs
mov
dec
add
mov
add
shr
pop
mov
jecxz
cmp
pop
jge
add
mov
add
shr
cwde
mov
fcmovbe
mov
outs
sbb
scas
jae
mov
mov
shr
int3
dec
in
in
aaa
jmp
aaa
retf
push
sub
xor
pusha
clc
pop
xchg
cmps
call
sub
mov
sbb
div
jns
and
hlt
and
mov
scas
pop
daa
repnz
xor
lock
call
dec
push
ret
(bad)
xor
xor
or
cld
movs
mov
sub
stc
xchg
retf
in
aam
xor
js
lock
movs
das
shl
in
retf
stos
or
dec
cmps
add
sbb
loopne
inc
fistp
mov
push
out
addr16
aas
push
adc
xchg
sub
or
mov
sub
les
test
or
dec
es
int
ret
js
scas
fiadd
jns
dec
jp
aad
sar
loopne
pushf
xor
fistp
rcr
in
rcr
leave
popa
js
call
cli
movs
cmp
jne
shr
xchg
mov
cmp
les
call
adc
fwait
loop
pop
(bad)
stos
dec
je
pop
mov
sti
inc
test
xor
std
pop
mov
out
jecxz
jecxz
fwait
sbb
pop
outs
mov
dec
repz
cdq
aad
pusha
xchg
dec
and
ins
mov
bound
ja
jmp
enter
aaa
repnz
pop
cmp
sub
cdq
sub
bsf
jo
sub
mov
icebp
int
(bad)
pop
in
cs
dec
lea
retf
leave
fisub
pop
neg
(bad)
pop
inc
nop
cmc
jmp
(bad)
mov
adc
shl
and
and
mov
sbb
sahf
pop
sbb
cmp
shl
call
rcl
xor
retf
fisubr
loopne
push
lock
pop
pop
sub
jp
sbb
mul
mov
test
and
and
xchg
or
es
mov
leave
ins
cmps
sub
xor
(bad)
lock
outs
test
loop
inc
or
aad
test
cmp
bound
xchg
aad
jmp
sub
fwait
test
jbe
dec
fisubr
loope
add
lock
movs
mov
cmp
pop
aam
dec
movs
inc
test
aaa
xor
jb
jmp
xchg
and
in
mov
rcl
jne
xchg
adc
push
jnp
repz
popf
mov
cmp
mov
popa
das
jle
les
xor
mov
fs
pop
mov
shl
cld
retf
mov
or
aas
sub
mov
xor
neg
sub
sub
push
pop
inc
mov
rcl
dec
stos
jo
inc
popa
mov
jae
retf
fwait
int
xor
cdq
test
sub
and
(bad)
cmp
adc
leave
push
gs
mov
sub
fld
jo
shl
std
inc
adc
xchg
std
and
jge
arpl
pop
int3
in
push
mov
or
and
into
lods
outs
aam
cmp
loope
mov
not
jl
enter
aad
stos
mov
lea
std
sub
mov
cmp
ret
js
mov
ret
arpl
mov
jecxz
push
(bad)
push
(bad)
out
nop
in
and
(bad)
fdiv
mov
daa
je
scas
fild
call
jne
mov
sub
in
mov
in
shr
rcr
jmp
call
mov
and
xor
and
jns
clc
xor
(bad)
stc
mov
hlt
sub
add
push
xchg
call
stc
movs
aad
and
push
stos
xor
jae
daa
push
int3
xor
sub
ret
add
ja
fwait
(bad)
mov
mov
cwde
les
je
addr16
inc
out
in
pushf
add
lock
lods
add
xchg
dec
inc
xor
push
repnz
retf
es
fincstp
mov
and
ds
imul
fld
outs
cmp
(bad)
arpl
(bad)
mov
push
pop
mov
std
scas
cli
mov
or
fimul
fnstcw
jle
jl
jb
push
or
inc
xor
pop
mov
jecxz
sub
fisub
and
js
test
pop
fs
sbb
in
pop
call
sub
repz
xchg
pop
push
dec
jae
cmp
jne
div
pusha
bound
dec
cmp
cld
das
in
inc
lock
imul
in
dec
cmps
ror
sti
push
adc
mov
jbe
pop
cmps
push
sti
or
cdq
movs
sahf
xchg
cmp
loop
cmps
mov
adc
cmp
xor
(bad)
and
je
adc
xchg
inc
in
(bad)
(bad)
mov
sub
es
je
rcr
scas
out
jo
es
scas
xor
sbb
pusha
or
and
mov
nop
enter
cmp
leave
cmps
and
lahf
je
loopne
mov
mov
lds
std
mov
lods
sbb
mov
xchg
inc
mov
fistp
sub
imul
retf
add
push
lea
cmp
sub
scas
push
jmp
loopne
jge
inc
sub
sub
jnp
push
(bad)
out
f2xm1
xchg
rol
xchg
pop
scas
xchg
cmps
adc
stc
movs
inc
mov
mov
mov
mov
jle
sbb
xchg
jne
jbe
hlt
push
jmp
inc
mov
mov
jo
movs
cmps
call
test
cs
push
pop
adc
fld
or
mov
xchg
mov
addr16
fs
cmp
hlt
call
push
rol
cmps
out
sub
sbb
add
dec
jnp
hlt
sub
mov
adc
ins
lock
inc
sub
loop
pushf
fsincos
cmp
and
jo
cdq
(bad)
lods
add
ja
std
repz
sub
fadd
add
(bad)
ret
and
xchg
retf
das
hlt
add
mov
sub
pop
cmp
iret
mov
xor
out
lahf
push
jg
xchg
mov
cmp
xor
ds
push
add
(bad)
hlt
jecxz
imul
repnz
ds
outs
cmp
dec
lods
cs
lea
test
push
mov
iret
(bad)
movs
(bad)
cmp
mov
mov
or
pop
pop
shr
xor
jl
stos
(bad)
std
stos
add
movs
jno
stc
stos
jae
loop
call
dec
hlt
bound
pop
cs
aaa
xchg
jp
int
mov
les
ss
fisub
(bad)
aas
mov
inc
(bad)
and
das
enter
lea
repz
enter
cs
push
cmp
in
dec
xchg
xor
in
mov
inc
je
cld
push
sbb
sub
lods
mov
movs
ficom
jmp
or
ret
xchg
push
adc
xlat
sar
push
cmp
stc
pop
push
push
retf
push
inc
movs
scas
fwait
lock
fld
mov
xor
sub
test
repz
aad
add
and
pop
jge
pop
mov
mov
sbb
fmul
test
inc
aam
mov
loope
adc
sti
js
test
push
shr
outs
popa
popf
push
loopne
push
cmp
pusha
add
jle
dec
xchg
or
sub
rcr
js
pop
sar
or
push
ins
das
sahf
cmp
push
and
out
xchg
imul
mov
out
jne
popa
cmp
pop
cmp
retf
clc
sbb
xchg
dec
ja
sar
xchg
mov
xor
jmp
push
popa
jmp
out
arpl
cmps
adc
xlat
push
inc
sub
add
aas
push
sahf
jle
mov
jno
pushf
mov
cmp
fdivr
fadd
mov
out
loop
popa
push
pop
adc
pop
int3
pop
ss
cmp
shr
mov
sub
mov
js
xor
add
adc
ins
cmp
push
aas
mov
cdq
mov
movs
movs
mov
xchg
retf
push
mov
leave
adc
popa
xlat
xor
jno
sbb
jbe
sub
out
(bad)
fnstcw
enter
fild
mov
stc
inc
loop
and
xor
imul
rcr
jecxz
sbb
popa
jo
ret
imul
push
cmp
push
mov
fldenv
scas
add
sar
adc
inc
pop
xlat
mov
inc
ror
add
mov
iret
sub
and
dec
push
dec
imul
jno
pop
(bad)
out
dec
loopne
mov
adc
dec
and
inc
mov
sub
(bad)
in
into
cmp
loopne
mov
shr
ret
or
cmp
aad
sbb
stc
jle
jecxz
sub
aaa
xchg
(bad)
pop
mov
cmc
pop
jo
call
stc
frstor
cld
sub
ins
fs
sti
mov
add
in
pop
push
frstor
jge
arpl
aad
and
jp
push
add
movs
jmp
shl
cmps
push
push
mov
jns
outs
aam
mov
xor
dec
jecxz
std
push
jmp
mov
pop
into
in
jecxz
loopne
lock
or
popf
imul
pushf
rcl
jns
and
outs
push
mov
mov
mov
repz
das
lds
(bad)
mov
das
mov
test
adc
mov
push
clc
popa
sbb
test
call
pop
jl
lock
iret
mov
mov
mov
out
lods
es
ins
jae
cmp
inc
or
aas
jmp
pop
sub
mov
mov
xchg
add
jbe
push
test
inc
(bad)
int3
dec
out
or
adc
cld
retf
(bad)
aad
ins
push
add
push
xor
push
outs
pop
lds
lea
outs
rol
jae
sbb
xchg
sbb
and
add
sub
(bad)
jmp
cmp
cmps
aad
cli
pop
adc
mov
push
(bad)
xlat
int3
pushf
icebp
mov
sub
test
(bad)
push
push
(bad)
mov
inc
jno
sub
xor
cmc
dec
push
cmp
or
cmp
sahf
add
jns
add
xchg
inc
clc
pop
popa
cmp
jnp
dec
xor
pop
mov
dec
push
out
jns
imul
mov
push
jno
and
fcom
mov
inc
lahf
fsubr
cmps
test
xor
out
jbe
cmc
js
dec
jp
std
cmp
movs
or
enter
dec
mov
xor
push
rol
pop
leave
sub
(bad)
add
(bad)
cmp
in
mov
shl
pushf
and
inc
or
fist
and
mov
jb
add
lods
mov
outs
xor
cmp
mov
adc
cld
jbe
fmul
mov
push
dec
jo
ror
cmc
jp
notrack
xor
xor
lea
push
mov
aam
sbb
xchg
mov
(bad)
mov
dec
iret
jmp
mov
cmp
shl
dec
pop
imul
pop
fwait
adc
shl
push
loope
mov
xchg
jno
shl
mov
cmp
push
cmp
fs
jb
push
push
loope
retf
mov
je
(bad)
mov
out
sti
mov
lea
call
xcrypt-cfb
cmps
movs
rol
in
and
pop
dec
popa
ss
aad
fs
(bad)
sahf
add
xchg
adc
adc
cdq
dec
jmp
inc
add
std
jg
(bad)
xchg
inc
mov
sbb
lock
or
pop
xchg
add
and
cmp
shl
movs
push
inc
mov
push
lds
adc
fs
adc
ja
or
out
mov
call
jb
out
pop
out
nop
mul
mov
push
hlt
sar
repz
pop
mov
xor
sub
jbe
cmp
mov
idiv
fmul
inc
outs
fistp
pop
scas
mov
jne
pop
cmps
aaa
push
cmc
pop
sub
xchg
push
addr16
cmp
aaa
mov
or
xchg
fneni(8087
jmp
inc
mov
push
loope
sar
in
ror
test
push
adc
or
dec
stos
test
cs
jp
xor
clc
rcl
mov
dec
retf
ret
icebp
mov
sar
jo
adc
mov
lods
xchg
dec
fwait
ds
xchg
cwde
adc
sbb
je
pop
mov
stos
or
sbb
pop
jmp
sbb
and
ins
clc
cld
pop
mov
add
push
(bad)
in
test
xchg
xor
test
add
push
movs
aad
push
mov
sub
out
mov
adc
jb
rcl
cmps
jb
cmp
stc
push
lock
(bad)
mov
cmps
push
outs
mov
scas
cmp
addr16
xlat
sbb
ret
popf
(bad)
lahf
retf
inc
and
aas
add
clc
pop
es
pop
sti
or
push
in
xor
inc
cmp
gs
xchg
pop
repnz
outs
sub
mov
mov
pop
jge
shl
lds
and
daa
pop
rol
in
mov
lock
or
mov
call
jecxz
mov
(bad)
in
and
pop
sub
xchg
mov
out
xchg
jl
xchg
xor
mov
jae
push
add
jbe
movs
pop
js
sbb
push
dec
jg
stos
sub
inc
sbb
stos
ror
and
aam
retf
lods
mov
add
pop
sahf
loope
mov
ss
std
sub
repz
sbb
mov
into
cwde
ficom
push
dec
cmp
cmp
mov
sub
cmp
dec
jmp
call
lea
pop
aam
xchg
inc
xchg
mov
in
jmp
mov
aas
iret
ins
ja
cmp
or
into
mov
les
xchg
movsx
mov
xor
popa
leave
jmp
jo
addr16
test
xchg
loopne
push
lods
(bad)
in
mov
(bad)
in
add
fstp
pop
ret
loopne
popa
nop
scas
jmp
gs
cld
cld
adc
add
sbb
mov
pop
adc
(bad)
loope
std
push
outs
in
sbb
loop
and
and
push
nop
push
imul
dec
les
and
cwde
test
xchg
call
fwait
test
cwde
jmp
ret
xchg
dec
dec
inc
sbb
push
lods
lea
test
nop
sub
int
jp
jo
xor
sub
loop
jmp
mov
inc
mov
sbb
and
jbe
mov
shl
add
push
lock
repz
pop
sub
pop
xchg
test
jp
aaa
int3
outs
(bad)
jmp
adc
jl
lahf
outs
sbb
push
ss
cld
mov
popf
sbb
fild
inc
dec
jmp
xor
inc
mov
pop
fbld
inc
adc
movs
mul
xchg
fninit
cmp
enter
scas
dec
sahf
cmps
pop
(bad)
sbb
movs
out
dec
mov
dec
pop
pop
cmp
test
and
rcl
mov
(bad)
(bad)
mov
dec
out
repz
xchg
mov
ja
(bad)
mov
shr
push
ins
sbb
push
jae
not
outs
lods
lea
push
adc
mov
xchg
sbb
jb
clc
test
mov
mov
rol
adc
stos
aam
or
imul
add
mov
adc
inc
pop
sbb
mov
cmp
shl
cli
pop
xor
inc
shl
gs
cmp
mov
shl
outs
pop
mov
mov
pop
scas
repz
or
lahf
icebp
inc
sbb
push
sub
mov
push
stc
in
sahf
and
es
leave
sbb
arpl
xor
lahf
jno
or
add
inc
ficom
dec
loope
add
add
scas
(bad)
pop
push
mov
push
cmps
cmp
mov
cmp
shl
lahf
or
cs
inc
jge
imul
inc
pop
ret
xchg
clc
jmp
rol
clc
push
mov
pop
lds
mov
enter
sbb
dec
cwde
popw
mov
mov
shl
out
aaa
push
jp
push
rol
cmp
push
push
sbb
cmps
pop
push
add
mov
add
ins
stc
mov
mov
int
jg
dec
in
xchg
aam
sub
cmp
adc
(bad)
dec
adc
gs
aam
ficomp
inc
scas
and
sbb
cmp
push
jbe
cli
pop
jns
scas
in
sub
dec
pop
push
leave
dec
xchg
lahf
sbb
ret
fucomi
jmp
and
or
scas
pop
mov
dec
xchg
pop
movs
aas
pop
mov
sub
mov
jne
iret
repnz
pop
nop
(bad)
sub
add
cmps
xchg
mov
pop
lock
int
ds
mov
cwde
scas
shl
jge
push
test
shr
push
jns
in
xor
cmp
inc
dec
push
lds
pop
ins
repnz
xchg
lahf
bound
pop
mov
xchg
adc
dec
icebp
cmp
inc
in
push
inc
inc
arpl
mov
imul
aam
stos
pop
(bad)
hlt
mov
mov
int
aaa
(bad)
jge
pop
mov
and
repz
xchg
jmp
push
add
sar
xor
data16
jae
nop
inc
pop
cmp
or
call
jnp
in
or
dec
out
sbb
cmp
arpl
and
pop
ror
ret
stc
rol
xchg
retf
push
inc
jle
jp
int3
mov
sbb
(bad)
dec
add
mov
lock
push
loope
in
xor
cwde
test
ds
inc
jmp
fwait
cmp
fdiv
dec
pusha
scas
push
or
(bad)
xchg
mov
push
pop
sub
and
dec
mov
mov
clc
(bad)
out
in
addr16
inc
imul
fild
pop
shl
(bad)
(bad)
imul
jb
fs
ins
test
cmps
xor
and
xor
push
dec
mov
ss
pop
jno
dec
mov
add
sti
pop
les
sub
je
pop
js
push
sub
or
(bad)
imul
int
cmps
adc
dec
in
fcom
fisub
and
dec
aaa
mov
arpl
push
xchg
retf
add
(bad)
(bad)
sub
int3
into
arpl
leave
xchg
jl
and
mov
add
inc
xchg
scas
xchg
mov
mov
adc
xor
in
and
xor
pusha
test
js
std
add
xchg
into
adc
js
cmp
mov
mov
cs
(bad)
dec
clc
mov
mov
ret
cld
icebp
adc
xor
pushf
imul
xchg
loopne
cmps
repz
mov
pop
mul
ds
mov
cdq
ds
jp
test
pop
adc
aas
inc
in
mov
in
neg
call
cmp
in
jns
fcom
je
push
dec
xchg
and
mov
pop
or
xor
test
push
mov
pop
leave
xchg
and
jg
sti
cdq
cmc
sbb
jae
mov
pop
dec
aas
or
ss
ss
fst
sbb
push
pop
sti
add
sub
aaa
and
lahf
cmp
mov
jne
(bad)
sbb
add
jb
test
mov
mov
push
and
xor
scas
push
or
or
xor
and
ss
in
pop
inc
xlat
or
fsubr
xchg
or
cmp
sbb
cmps
ror
cmp
shr
xor
(bad)
dec
out
movs
(bad)
pop
loop
loopne
loope
jns
mov
call
ins
(bad)
cmp
daa
or
inc
int
stos
xlat
es
inc
rol
sbb
lock
mov
add
xchg
stc
push
push
cmp
es
jo
(bad)
fucomi
mov
dec
pop
add
mov
lods
xor
xor
sub
sbb
inc
sahf
push
call
dec
retf
retf
jp
mov
jge
fild
sbb
mul
or
retf
daa
xor
jmp
mov
and
jne
lock
push
mov
or
scas
mov
jmp
sub
scas
mov
pop
xchg
arpl
sbb
sub
daa
lods
ss
test
dec
shl
cmp
(bad)
sbb
mov
(bad)
loop
lods
fs
test
inc
std
pop
test
xchg
jl
pop
jl
lock
mov
dec
xor
cmc
adc
mov
into
and
add
mov
jge
ret
push
les
push
push
mov
mov
test
adc
inc
and
push
xchg
mov
das
mov
loopne
ja
adc
xor
loope
mov
lahf
mov
cmp
xchg
jmp
stc
mov
add
retf
push
inc
push
test
test
movs
mov
pusha
les
dec
mov
or
psllw
mov
lahf
add
xchg
ds
xor
inc
je
pop
cmps
inc
or
jge
mov
je
ds
mov
les
outs
inc
and
push
out
adc
ja
inc
aaa
ret
cs
mov
add
sar
mov
imul
in
sbb
sti
fisubr
out
test
cmc
add
sub
aam
(bad)
cmp
sub
outs
mov
inc
data16
mov
mov
dec
add
jp
mov
or
lock
xchg
out
jne
or
mov
xchg
mov
fcmovne
mov
mov
jns
add
fld
adc
jb
js
js
mov
sub
shl
pop
mov
mov
sub
sbb
out
mov
jl
out
popf
or
cmp
inc
adc
js
out
jg
jo
xchg
xchg
repnz
popf
stc
push
jo
or
add
mov
cdq
push
scas
fucom
or
jmp
inc
popa
pop
xchg
pop
hlt
xlat
and
jne
and
pusha
bound
in
push
sbb
loop
xor
leave
mov
cmp
jmp
xchg
lods
cmp
(bad)
fisubr
jp
ret
dec
mov
mov
ss
mov
and
gs
and
(bad)
jl
sub
pop
fst
mov
or
sbb
out
push
sub
sub
outs
lea
sub
sub
sub
inc
aad
movs
rcr
ret
(bad)
inc
outs
cld
adc
out
mov
pop
inc
mov
push
jmp
mov
mov
sub
jl
cmp
sub
int3
nop
sub
xchg
mov
dec
adc
mov
xchg
mov
inc
mov
jo
and
pop
mov
fwait
movs
push
add
out
push
add
jmp
fldcw
mov
(bad)
cli
mov
push
inc
or
inc
mov
das
sbb
mov
sbb
pop
pop
mov
retf
jle
(bad)
stc
cmp
xor
sbb
stos
or
stc
ss
add
mov
jle
inc
and
inc
sti
sbb
dec
mov
and
cmps
dec
and
or
clc
jecxz
dec
adc
test
inc
jmp
inc
mov
les
out
pop
cmp
call
(bad)
mov
mov
mov
push
adc
xor
adc
pop
push
sbb
aad
call
pop
jg
movs
mov
xchg
ins
or
xchg
sbb
mov
test
push
xchg
call
sbb
mov
loopne
(bad)
mov
pop
xchg
sbb
sub
jg
ds
mov
mov
nop
jecxz
(bad)
and
cdq
and
mov
xchg
push
imul
xor
cdq
inc
inc
or
(bad)
xor
add
or
jge
shl
scas
jg
not
sub
imul
adc
retf
dec
mov
jmp
push
sbb
mov
into
stc
aaa
nop
call
loop
inc
mov
imul
adc
inc
pop
xchg
add
imul
test
nop
je
je
ds
cmp
mov
push
inc
lock
dec
pop
jno
jno
(bad)
push
mov
repnz
in
mov
pop
inc
cmp
mov
daa
mov
inc
jge
aas
int
mov
cmp
inc
mov
aad
cmp
(bad)
ret
pop
rcr
xor
mov
inc
push
movs
test
(bad)
pop
cmp
sbb
rcr
cmp
add
(bad)
cli
enter
(bad)
icebp
or
into
pop
fs
outs
sub
lods
imul
cmp
outs
mov
loopne
sub
pop
sub
fcomi
and
add
sahf
jmp
xor
or
lds
sub
pop
pop
mov
int3
test
in
(bad)
jne
loopne
mov
mov
stos
push
xor
out
and
sbb
shr
ins
mov
fdivr
or
mul
pop
jp
add
(bad)
cmp
mov
jae
xchg
pushf
adc
sub
cld
call
fisttp
dec
xor
dec
add
add
cld
movs
out
test
or
xor
push
popa
dec
loopne
mov
(bad)
iret
ret
pop
adc
popf
jle
(bad)
hlt
repz
sub
adc
mov
daa
inc
dec
sti
retf
xor
cwde
imul
out
hlt
mov
dec
(bad)
call
push
add
fs
push
push
imul
js
jae
jle
or
ret
inc
pslld
(bad)
sub
fcom
(bad)
push
mov
adc
enter
add
lahf
retf
adc
xor
pop
ror
or
and
sub
cmp
xchg
mov
call
aam
jg
xor
imul
inc
ror
pop
mov
mov
xor
lock
pusha
ins
sbb
pmulhuw
jo
dec
test
js
sub
enter
adc
sbb
daa
dec
popf
jno
add
xor
push
mov
adc
(bad)
cmp
cdq
sbb
mov
add
repnz
jl
pop
inc
stc
sbb
cmp
retf
out
scas
mov
pop
push
push
adc
stc
nop
xor
movaps
ins
dec
lods
test
test
xchg
cmp
rol
mov
cmp
push
icebp
dec
rol
jl
enter
jg
idiv
sti
fisub
in
imul
push
adc
call
jae
pop
es
jg
jo
push
adc
push
mov
and
lea
inc
scas
mov
inc
pop
inc
inc
outs
lea
je
lds
lahf
dec
out
fldenv
repnz
xchg
(bad)
jb
ins
push
movs
inc
sbb
mov
or
addr16
cmp
mov
(bad)
mov
jp
inc
jne
cmps
and
lods
jp
mov
inc
sti
add
sub
sub
sub
cmp
repz
icebp
in
inc
add
loop
mov
in
rcl
daa
outs
outs
enter
push
int
mov
lods
in
pop
stc
loopne
xchg
dec
shl
push
mov
outs
js
or
inc
imul
xlat
(bad)
icebp
cld
mov
push
fistp
cld
ret
pop
push
inc
out
fwait
adc
cli
or
mov
enter
call
das
sbb
cld
retf
(bad)
adc
cbw
(bad)
sar
repnz
mov
scas
ins
popf
dec
sub
push
movs
push
push
sub
shl
out
dec
mov
rol
mov
enter
rcr
pop
adc
pushf
icebp
test
xchg
dec
dec
cwde
fldcw
jle
stos
mov
movs
ds
xlat
xchg
dec
inc
cwde
(bad)
mov
cs
and
loop
lahf
mov
sahf
(bad)
push
mov
aad
push
popf
jg
adc
out
sbb
mul
sahf
aad
and
iret
test
jle
mov
shl
fwait
dec
jmp
push
jmp
out
inc
push
mov
nop
js
pop
xchg
sti
jo
and
dec
dec
add
sahf
imul
jbe
js
jp
(bad)
push
imul
es
mov
and
dec
push
jbe
sbb
push
push
sbb
ror
pop
repz
fisubr
add
fiadd
sub
daa
xor
cmp
cwde
xchg
jp
or
or
test
ins
gs
push
fst
fdivr
and
loop
push
fiadd
xor
xchg
sbb
inc
add
add
out
mov
and
(bad)
mul
sbb
imul
push
ja
lods
popa
or
mov
out
dec
sbb
pop
cmp
push
fisub
mov
inc
push
or
rcr
aam
shr
test
push
dec
dec
ror
xor
clc
js
jo
dec
push
and
pop
(bad)
ds
stos
and
dec
cmp
add
cld
adc
cmp
mov
aam
inc
xchg
stos
cmp
inc
push
pop
jb
xor
pop
pop
mov
sub
mul
add
js
adc
jg
push
sub
movs
jne
je
add
push
(bad)
push
ja
pop
jmp
cmp
hlt
sbb
jp
mov
retf
sbb
(bad)
and
or
xchg
iret
ror
loop
sti
push
xchg
mov
adc
and
dec
jae
out
jbe
lahf
fcomp
inc
mov
pop
inc
mov
js
iret
fwait
inc
aaa
cmp
fisttp
add
and
(bad)
imul
aad
out
adc
gs
and
fcmovnu
add
jecxz
dec
dec
imul
fdivrp
dec
fimul
lods
jge
stc
mov
and
mov
inc
xchg
push
mov
imul
xchg
(bad)
cmp
sub
test
xor
cmp
xor
stos
mov
sahf
push
test
xlat
xchg
pushf
shl
scas
mov
or
test
jmp
aam
cli
mov
jno
movs
retf
inc
inc
mov
mov
fstp
cmp
into
(bad)
cmp
xor
and
out
(bad)
mov
clc
mov
xor
dec
das
in
push
dec
mov
addr16
mov
jge
lea
mov
and
jecxz
fucom
outs
cmp
loope
xchg
bound
pop
sbb
(bad)
in
hlt
stos
add
sahf
aad
sub
retf
sub
xor
mov
movs
sub
shl
sub
or
stos
aad
mov
shr
bound
sbb
push
idiv
in
pop
push
pop
xchg
xor
or
jmp
pop
mov
loopne
mov
mov
call
adc
xor
fcomp
dec
pushf
ret
sbb
int
jnp
pop
pop
cmp
out
lods
test
clc
cmc
shl
bound
jge
mov
xchg
call
cdq
pop
sub
fs
dec
les
or
icebp
sub
rcr
add
inc
into
adc
bound
nop
dec
jle
cmp
jl
ss
mov
xor
sti
mov
jno
mov
xchg
sub
xor
jmp
lahf
std
mov
sbb
push
movs
push
popf
xor
imul
pop
cmp
fist
inc
pop
leave
push
sbb
loope
js
or
pop
mov
add
das
push
push
out
cmp
pop
sahf
add
int3
leave
mov
add
sbb
cmc
xor
xchg
xchg
lds
test
mov
jmp
inc
jecxz
pusha
loopne
pop
fldcw
mov
jnp
cwde
in
dec
pop
add
lods
(bad)
out
shl
cmp
push
ds
mov
cmps
pop
mov
fadd
mov
inc
adc
mov
mov
out
pop
pushf
mov
jae
adc
mov
inc
clc
add
stos
mov
jno
test
sub
sub
div
mov
push
lahf
pop
inc
dec
rcl
rcr
or
stos
loop
sbb
or
xor
mov
cmp
pop
push
sub
inc
adc
and
stos
sbb
in
test
gs
adc
inc
sbb
push
sbb
cld
das
fstp
dec
(bad)
lods
jb
jb
mov
fbstp
ficomp
(bad)
push
jno
sahf
stos
fild
mov
or
clc
shl
push
ds
call
or
(bad)
loope
push
stc
mov
addr16
mov
je
imul
inc
out
xor
xchg
ja
jge
out
sbb
push
push
retf
or
mov
sbb
pop
call
mov
mov
xchg
in
inc
sbb
mov
and
and
inc
outs
push
lods
ss
jmp
lahf
and
das
or
mov
sti
sub
push
into
cmp
xor
mov
aaa
repz
mov
cmps
fnstcw
enter
adc
cmp
shl
jmp
(bad)
mov
out
jo
xor
sbb
sar
push
adc
push
not
push
loop
dec
inc
push
std
pusha
out
out
add
iret
dec
hlt
mul
test
ficom
sbb
push
movs
call
cs
stos
add
stos
ss
adc
rol
ret
lahf
mov
xchg
cmc
lods
push
mov
xor
sar
adc
push
sub
xchg
mov
xor
outs
cld
dec
in
mov
sub
xor
adc
inc
xchg
rol
mov
mov
mov
push
int3
mov
adc
push
out
in
cs
mov
out
jbe
push
das
movs
jl
into
into
mov
pop
push
or
dec
dec
bound
(bad)
popa
dec
sti
js
pop
fistp
sbb
jmp
mov
pop
mov
xchg
addr16
xchg
lods
sub
xchg
jbe
sbb
inc
stos
adc
lea
push
jmp
fsubr
call
mov
mov
ror
pop
lds
cmps
enter
sub
push
aad
popa
cmps
hlt
and
xchg
push
add
add
aad
jmp
pop
ss
sub
xor
xchg
mov
and
pop
cdq
stos
mov
pop
or
int
mov
push
pop
mov
jmpw
aaa
cmp
test
bound
test
clc
fistp
sub
sub
push
jmp
sbb
jnp
out
dec
mov
push
sub
inc
mov
mov
cs
dec
cmp
pop
out
push
repz
loop
push
fst
mov
(bad)
stos
movs
cmps
xchg
mov
push
jo
jo
scas
cmc
pop
(bad)
jns
or
add
ss
cmp
mov
and
(bad)
pop
inc
mov
out
mov
rcl
xchg
jp
sti
push
fidiv
fiadd
sahf
ret
or
xchg
sti
sub
sub
push
je
lods
push
shr
loopne
mov
sbb
test
dec
sub
retf
push
jo
jno
fsub
dec
aad
jns
push
out
push
shr
push
pop
push
sti
fsub
add
mov
jl
dec
adc
imul
xor
xor
xchg
loop
rol
retf
js
mov
dec
in
and
cmp
loopne
jmp
test
jnp
std
pop
mov
xlat
lea
enter
fwait
call
jecxz
pop
je
inc
sahf
xchg
cwde
shl
cmps
and
mov
(bad)
nop
dec
stc
dec
js
stos
cmps
(bad)
iret
and
push
out
pusha
lahf
jno
mov
dec
dec
jp
cwde
jmp
fbstp
scas
xchg
(bad)
jmp
(bad)
sub
push
mov
dec
mov
pop
inc
call
add
int
stos
mov
sub
jns
or
push
inc
adc
das
xchg
sbb
and
or
mov
or
push
addr16
jge
add
jns
mov
jecxz
adc
xor
popa
dec
sar
pop
push
pushf
cmps
mov
mov
sub
ss
mov
adc
mov
repnz
popa
fimul
leave
and
pusha
sub
ds
aaa
mov
push
lea
pusha
add
data16
pop
mov
aaa
es
in
fild
or
sub
fisttp
fistp
cmp
mov
ja
pop
xchg
xor
jle
call
stos
mov
jne
xchg
dec
cmp
xor
and
mov
adc
and
out
push
and
xor
les
pop
cli
loope
or
xor
jle
shl
out
sahf
pop
add
test
out
jb
out
cdq
test
mov
mov
pop
pop
add
imul
add
add
mov
jno
aam
bound
cs
inc
idiv
mov
loop
imul
std
idiv
pop
adc
mov
mov
movs
cmp
mov
or
pusha
sub
jge
xor
push
sbb
adc
shr
pop
out
or
stc
je
or
and
inc
sub
fisttp
ja
inc
sub
(bad)
lds
rol
dec
(bad)
jae
call
mov
pop
push
pushf
pop
jle
inc
and
push
(bad)
ja
jle
out
mov
ds
xor
dec
enter
ret
cmc
(bad)
cmp
dec
fs
jg
(bad)
and
cwde
fiadd
push
(bad)
call
loopne
leave
sti
xor
dec
jo
jge
pop
dec
jl
fsubr
inc
push
retf
pop
add
and
loope
cdq
add
xor
add
stos
test
ret
dec
jmp
mov
retf
repz
outs
sbb
mov
stos
cmps
fistp
jns
movs
xchg
icebp
and
add
push
sub
jae
test
hlt
and
cmp
or
lods
pushf
pop
sti
jns
repz
mov
mov
nop
mov
es
lods
sti
outs
es
test
int
popa
jmp
mov
dec
sub
sahf
fs
(bad)
int
pop
push
js
in
les
out
cs
xor
cmp
imul
mov
call
push
and
sub
cwde
jp
inc
fstp
xchg
mov
dec
pusha
idiv
pop
sbb
popa
es
and
sti
cmp
inc
pop
loopne
mov
mov
xchg
jge
js
fs
sub
shl
push
cmp
xor
mov
jbe
cmp
scas
xor
cld
mov
out
cli
pop
jbe
in
jecxz
inc
imul
js
mov
test
in
push
jmp
xor
fadd
pushf
jecxz
mov
mov
mov
lods
sbb
aam
sub
imul
pop
out
cmp
xor
adc
jne
leave
xchg
jmp
or
mov
add
cld
iret
cs
fucomp
or
lods
rol
enter
mov
lahf
push
enter
inc
fadd
xor
adc
cmc
daa
out
jle
jno
idiv
jno
dec
pusha
mov
add
xchg
pop
push
adc
sti
jb
dec
push
mov
int3
jne
into
inc
cmps
dec
pop
imul
lds
ret
mov
or
xchg
daa
ret
fdiv
mov
pusha
out
fimul
psubusb
pop
xchg
mov
sbb
sbb
lds
xchg
cmp
loopne
aaa
in
inc
and
mov
fsubr
aas
jge
push
mov
ret
ror
jbe
push
sbb
test
mov
fbld
add
sub
jg
add
out
retf
ret
push
inc
or
stc
mov
daa
fistp
mov
retf
addr16
push
in
in
call
pop
pop
adc
out
mov
mov
mov
shr
aam
xor
scas
mov
pop
(bad)
push
int
lea
dec
or
mov
cmps
in
(bad)
sbb
and
ins
(bad)
add
dec
push
nop
pop
lahf
add
mov
int3
push
ret
dec
outs
shr
adc
jo
mov
rcl
push
jp
popa
push
inc
pop
mov
jle
xchg
je
in
mov
sub
push
mov
pop
xor
inc
in
fnstcw
pop
loop
pop
lods
cmps
push
arpl
call
nop
out
outs
adc
repz
jle
xor
mov
push
mov
sub
fs
ds
call
dec
addr16
movs
jnp
(bad)
in
(bad)
ss
int
cmp
leave
mov
cdq
and
or
adc
xchg
(bad)
movs
xor
movs
retf
jecxz
sub
push
mov
dec
nop
or
push
int3
push
inc
sar
aaa
push
or
stos
lods
icebp
sbb
push
adc
xor
lods
repnz
out
inc
add
jbe
mov
scas
cmp
jno
iret
xchg
and
push
call
mul
sub
pop
mov
nop
adc
mov
mov
arpl
dec
pop
xor
lea
or
add
push
mov
dec
pop
arpl
pop
mov
pop
push
or
sar
sub
mov
add
(bad)
hlt
xlat
cmp
sti
test
add
jae
xchg
mov
pop
mov
add
in
pop
xchg
jae
cld
loopne
or
mov
dec
sub
or
repnz
cmp
sti
lods
imul
in
fcmovnu
pop
inc
je
or
pop
js
pop
ja
mov
push
out
imul
in
pop
(bad)
push
cdq
outs
pop
lds
pop
add
mov
call
repnz
adc
stc
push
aad
aam
mov
mov
(bad)
sub
adc
repz
je
push
inc
mov
jmp
mov
push
pop
cmp
and
sub
add
or
dec
pusha
mov
sbb
jp
lods
sub
nop
inc
loope
jl
int
aaa
gs
pop
mov
sti
adc
movs
aam
sar
and
icebp
push
fdiv
outs
call
dec
mov
(bad)
das
test
add
mov
add
jmp
mov
mov
or
xchg
sbb
fstp
push
outs
and
je
lea
inc
sub
pushf
adc
mov
jb
xor
int3
sbb
xchg
push
nop
(bad)
push
push
addr16
xchg
jno
xlat
mov
pop
movs
push
push
arpl
xchg
cmps
data16
push
and
xchg
or
jo
je
cmp
fiadd
fst
test
dec
inc
cmps
mov
jo
cmp
rcr
addr16
mov
jno
movs
mov
inc
sub
sub
dec
or
popf
add
xchg
repnz
(bad)
push
jo
adc
fild
ja
test
or
frndint
jbe
(bad)
xor
pop
mov
sbb
repnz
arpl
mov
rcr
neg
dec
push
mov
cli
loop
pop
xchg
xor
retf
lods
dec
xchg
add
add
mov
xor
stos
or
ss
push
lods
xchg
pop
dec
add
cmp
mov
int
scas
call
sub
bts
cdq
icebp
sti
pushf
test
cmp
push
aad
sbb
shr
in
pop
out
stos
cmovns
pop
fistp
add
shl
pop
adc
loopne
scas
in
jmp
sar
cwde
pop
add
shl
test
xchg
ftst
fistp
(bad)
loopne
sub
fidivr
in
test
out
mov
addr16
ds
jmp
loop
and
push
imul
ret
add
or
pop
aas
jecxz
and
ja
xchg
inc
mov
jno
cmps
and
mov
dec
arpl
push
int3
popf
or
jnp
xchg
jno
xchg
cmps
or
das
xor
dec
mov
int
xor
dec
adc
fstp
out
or
mov
mov
loop
inc
scas
or
cmp
fdivr
cmps
adc
int
jp
cmp
add
ds
ret
mov
sbb
push
cmp
or
repz
xor
sub
das
cwde
cmc
scas
into
mov
lahf
fisttp
pop
and
shl
cdq
aad
push
sbb
sbb
sbb
or
jle
cmps
sub
cmps
jne
aaa
cmp
cdq
fimul
push
pop
adc
dec
mul
push
rcl
mov
pop
fbstp
fld
xor
lods
nop
and
add
push
mov
push
or
outs
ret
sahf
(bad)
aad
mov
jbe
cmp
movs
jb
sti
jo
dec
or
outs
(bad)
lds
daa
push
aas
sbb
ja
mov
out
or
aas
cmp
mov
js
dec
jg
in
lods
jae
pop
or
adc
cs
shl
push
sub
jg
cmps
mov
pushf
adc
paddd
sub
xor
les
xchg
in
scas
xor
mov
mov
cmp
push
jno
jp
or
imul
add
push
cmp
mov
call
scas
xchg
mov
repz
movs
cli
je
xchg
cli
lods
xor
mov
aad
jnp
aad
push
loope
pop
in
out
imul
sbb
or
rcr
call
mov
outs
mov
xor
ret
xchg
push
fcmovbe
out
jmp
mov
out
mov
jge
xor
ins
cmp
test
jg
adc
adc
(bad)
test
pop
inc
retf
les
sub
test
repz
xchg
shl
js
outs
jno
xchg
sahf
dec
cmps
push
aaa
xchg
inc
and
clc
cmp
and
outs
in
inc
outs
push
gs
popa
mov
mov
out
mov
cmps
push
loop
cdq
push
out
shr
mov
inc
add
inc
adc
fs
fidivr
int
stos
jl
push
inc
int
imul
sub
pop
adc
fld
loope
loope
cmp
dec
sbb
mov
push
ror
sub
xor
and
outs
int
xor
dec
(bad)
ret
(bad)
jmp
inc
aam
add
addr16
jecxz
xchg
addr16
arpl
or
das
jns
add
pop
sbb
ins
sbb
rcl
cmp
cwde
inc
xchg
adc
sub
nop
or
xor
sub
ss
mov
stos
mov
out
jecxz
mov
mov
xor
es
stos
sub
aaa
xchg
daa
sar
popf
iret
dec
xor
ret
jne
ja
cmps
pop
cmps
cmp
bound
mov
push
ror
mov
(bad)
ficom
out
mov
ds
bound
xor
push
xchg
jp
hlt
or
(bad)
xchg
pop
cmp
mov
mov
jl
clc
pop
lds
jb
clc
or
cmp
sub
int
rcr
push
fiadd
mov
dec
pop
sbb
(bad)
repnz
int3
mov
repz
clc
ret
ins
pop
fld
jmp
jmp
scas
mov
(bad)
les
retf
shr
fsub
add
mov
mov
scas
fsub
cdq
arpl
or
into
loopne
outs
ins
jmp
je
mov
sar
fdivrp
movs
inc
sub
inc
cmc
stc
inc
lock
mov
mov
cmps
jl
imul
mov
adc
cmps
shr
jl
cdq
fdivr
stos
lahf
mov
jbe
fidiv
jbe
inc
add
xchg
ret
xchg
mov
loop
jbe
inc
push
mov
mov
fwait
cmp
mov
das
dec
movs
add
mov
fild
in
enter
pop
push
cli
mul
test
dec
cmc
into
cmp
ds
test
pop
jmp
dec
cs
nop
aaa
adc
adc
cdq
dec
call
cmp
ins
es
mov
test
jne
mov
jg
pushf
mov
gs
cdq
sub
in
cwde
sub
ss
in
inc
cs
xor
nop
ss
int
hlt
push
push
arpl
ret
fst
jl
out
jge
add
and
daa
sbb
ret
add
js
popf
sbb
jge
xor
sbb
jb
jl
lods
cmp
mov
popa
fs
jp
pop
mov
or
xor
xchg
dec
enter
xchg
int
ror
sub
test
das
pop
mov
jbe
(bad)
mov
mov
sahf
push
xor
stc
mov
add
mov
mov
inc
xor
xchg
adc
jne
pop
or
mov
cld
shl
in
cmp
ins
mov
inc
xor
jecxz
jg
mov
clc
push
int3
(bad)
xchg
push
dec
sbb
(bad)
and
xchg
aam
imul
repz
rcl
mov
clc
test
mov
sbb
lea
ficom
fbstp
cmps
das
nop
lea
dec
stos
mov
daa
(bad)
mov
push
out
sahf
cld
ja
sub
loop
stos
sub
mov
mov
sub
cmp
shl
dec
pop
mov
mov
add
cdq
test
sbb
loopne
les
inc
sbb
push
jae
test
pop
movaps
gs
es
cs
ret
or
std
dec
mov
test
cmp
cli
pop
mov
sti
jae
stc
ss
pop
sbb
clc
test
int3
dec
jge
fstp
dec
push
dec
fucomi
call
push
sbb
outs
clc
adc
xchg
add
sub
jg
pop
jnp
dec
jge
std
gs
adc
dec
cmp
xor
jge
or
cld
jo
mov
loope
jb
cmc
mov
pop
mov
jg
(bad)
loopne
movs
xchg
lahf
sub
fistp
dec
stos
aad
jmp
mov
sbb
and
sub
shr
dec
xor
or
imul
shl
adc
sub
or
mov
xor
adc
cdq
pusha
jmp
pop
pushf
cmp
or
bound
adc
out
xor
scas
aam
cmps
cmp
lea
ret
ret
pop
pop
jle
loopne
jecxz
jnp
cmp
clc
arpl
mov
(bad)
push
mov
mov
in
jle
ins
dec
adc
jge
je
adc
cmp
adc
mov
adc
fstp
xchg
dec
push
(bad)
push
pop
iret
outs
shl
add
inc
pusha
inc
mov
push
pop
xor
jbe
adc
mov
movs
add
ror
xor
pop
jmp
jp
ret
sbb
dec
icebp
pop
cld
inc
rcl
mov
sbb
or
cwde
loope
dec
push
push
jl
cdq
sub
scas
hlt
int3
sbb
push
push
or
dec
push
cmp
call
mov
mov
lods
sub
fiadd
or
cdq
pop
sub
out
and
cmc
lods
fnstsw
dec
fisub
int3
cmp
in
mov
mov
push
pop
push
sub
and
jne
ja
ftst
push
jge
or
and
ds
mov
xor
jmp
std
adc
int
fadd
inc
push
xor
add
repz
add
jge
arpl
mov
scas
add
stos
jp
addr16
pushf
mov
call
xor
outs
mov
das
cmp
sbb
and
adc
xor
stc
jns
movs
int
pop
popa
lea
loope
mov
jns
push
pop
stos
ss
pop
jg
cmc
aaa
out
mov
sub
fist
sbb
dec
(bad)
and
data16
mov
(bad)
xor
cli
push
rol
rol
inc
xor
test
dec
mov
mov
xchg
xor
mov
fsubr
loope
push
mov
xchg
mov
jne
pop
mov
imul
mov
ss
out
add
clc
mov
and
and
pop
push
movs
sub
in
(bad)
sbb
adc
sbb
xchg
sub
loop
retf
sub
stos
mov
outs
bound
mov
xchg
mov
dec
mov
stc
sbb
pop
(bad)
jnp
xor
jo
inc
int3
inc
scas
fldlg2
jb
sub
sub
push
scas
nop
shl
mov
dec
mov
sub
mov
pop
sbb
jp
sahf
dec
dec
sub
outs
push
ret
je
adc
inc
cmp
mov
mov
sbb
xor
mov
jmp
ins
clc
xchg
dec
fmul
nop
aaa
mov
and
cld
xor
out
out
dec
dec
mov
add
mov
adc
dec
sub
je
mov
add
pop
mov
xchg
jb
jb
xchg
(bad)
out
sbb
add
xor
xchg
xchg
psrld
inc
xor
xor
xchg
and
xor
and
ins
sub
imul
cmp
push
xlat
sub
cmps
arpl
xchg
in
and
stc
push
test
aaa
xor
pop
or
int3
imul
test
jnp
xor
mov
fs
test
iret
repz
jb
xchg
xor
mov
fdiv
mov
movs
das
ret
adc
cmps
sub
aas
aas
scas
adc
sbb
addr16
or
jg
adc
sub
imul
(bad)
repz
pop
rol
enter
jmp
stos
inc
mov
sbb
movs
test
adc
(bad)
(bad)
ins
ret
(bad)
push
push
cmp
adc
xor
sub
test
xchg
push
mov
inc
dec
add
inc
add
test
das
jle
ss
and
(bad)
jle
ret
adc
test
mov
adc
in
xor
add
loopne
mov
sub
push
das
iret
movs
pop
xchg
call
call
push
jae
call
cmp
sbb
add
mov
mov
je
in
inc
mov
add
sbb
cmp
pop
mov
jg
xchg
xor
mov
ja
sub
pop
xchg
mov
xchg
sbb
or
and
jnp
add
hlt
sub
mov
mov
jl
xchg
bswap
dec
inc
movs
(bad)
dec
or
push
cdq
sub
push
shl
cmps
retf
fisttp
mov
sbb
mov
cmp
mov
ficomp
ret
jns
dec
lds
test
in
push
jmp
mov
push
test
xlat
nop
aas
dec
mov
adc
add
mov
sbb
(bad)
xchg
mov
movs
adc
inc
pop
jg
lods
mov
xchg
xchg
rcl
mov
mov
jne
rol
movs
mov
pop
xchg
and
pop
cld
add
js
and
or
int3
add
xchg
jb
mov
xor
adc
sbb
repnz
jmp
and
add
(bad)
out
dec
(bad)
(bad)
mov
in
fistp
adc
(bad)
mov
jne
mov
and
adc
cld
mov
jns
or
mov
lock
fild
sbb
call
fxch
dec
inc
fistp
push
push
cdq
fst
imul
inc
xchg
jle
cmc
cmps
icebp
xchg
mul
xchg
pop
gs
jle
bound
pop
stc
(bad)
enter
dec
out
ins
ror
dec
add
fs
inc
sub
ins
and
sub
mov
pusha
rcr
bound
es
clc
ins
pop
jns
inc
cld
enter
mov
sar
out
push
out
push
inc
(bad)
cli
jb
std
mov
retf
mov
mov
adc
jo
sbb
les
or
jbe
repnz
push
push
xor
sub
cld
jae
out
or
jecxz
lahf
fwait
mov
adc
(bad)
and
mov
push
inc
dec
ds
(bad)
adc
cli
pop
test
bound
push
ja
and
add
lock
sbb
mov
add
scas
cdq
sti
xchg
out
cmps
mov
xlat
shr
push
in
pop
xlat
ins
out
lods
mov
bound
push
jge
add
and
jno
sub
pop
dec
push
nop
popa
stc
or
es
(bad)
jne
es
mov
div
pop
mov
pop
dec
in
js
cmp
ror
les
call
inc
adc
retf
aad
loope
retf
lds
push
les
cmp
mov
popa
fstp
push
stc
inc
sbb
sahf
retf
in
mov
push
add
or
mov
xor
ds
pop
mov
xchg
xchg
jecxz
sub
sbb
push
(bad)
jns
ins
sub
(bad)
dec
xchg
cmp
sahf
jae
mov
xor
(bad)
(bad)
add
icebp
fnstcw
mov
sbb
push
inc
(bad)
cld
mov
dec
ja
repnz
cmp
add
ds
rcr
aas
sbb
pusha
push
sub
cld
(bad)
loopne
loop
jge
xchg
ins
or
gs
test
xor
jle
leave
mov
jo
adc
and
scas
dec
outs
push
jae
js
test
pop
push
mov
imul
pop
add
sbb
test
daa
ss
and
mov
sub
push
push
or
xchg
daa
xchg
xchg
sbb
not
push
jecxz
ins
or
fidiv
aaa
pop
cwde
inc
xchg
int3
xor
icebp
icebp
mov
mov
ror
mov
pusha
mov
jecxz
sub
adc
inc
retf
ja
push
push
mov
inc
or
and
sub
push
and
bound
sub
std
(bad)
test
push
add
add
jp
std
stos
mov
xchg
mov
xor
mov
and
and
pushf
out
mov
mov
in
add
pop
and
jb
jmp
xchg
mov
mov
jb
cmps
ins
pop
mov
cdq
and
out
imul
xor
cmp
inc
scas
icebp
nop
mov
sbb
pop
sub
sti
push
mov
or
fisttp
(bad)
xchg
xor
stc
outs
sbb
xor
mov
jbe
pop
mov
cs
in
pop
pop
sub
xor
adc
mov
mov
aam
shr
push
(bad)
test
push
cmp
pop
fld
out
arpl
mov
test
jg
in
inc
mov
int3
daa
mov
mov
inc
ret
or
bound
(bad)
jg
out
sub
icebp
pop
mov
in
sub
ins
addr16
or
in
mov
and
je
sar
jb
push
in
mov
sbb
mov
pushf
pop
sub
retf
xor
add
lds
push
in
iret
fcomp
ret
sti
push
bound
add
outs
or
fsub
xchg
jg
or
xchg
repnz
cmp
pop
je
daa
jmp
add
push
cmp
pushf
or
push
test
mov
(bad)
cmp
mov
dec
clc
pop
pop
pop
in
jae
movs
push
pop
mov
mov
out
and
rcl
loop
int
push
add
xchg
outs
add
ret
adc
lock
jmp
mov
enter
ja
fldenv
inc
add
les
ins
sub
xchg
scas
add
fs
popf
or
(bad)
iret
jmp
hlt
clc
js
xlat
dec
and
bndldx
add
sub
mov
inc
mov
or
daa
addr16
jl
imul
mov
retf
add
js
les
fwait
cmp
mov
ds
pop
inc
pop
sbb
push
(bad)
stc
cmp
cmp
cmc
movs
ss
shl
jo
outs
jo
or
in
inc
pop
jbe
lods
sub
adc
cmps
jecxz
into
add
adc
out
adc
fwait
mov
daa
jbe
pop
lahf
out
mov
push
jge
test
int
lods
mov
sub
in
(bad)
les
jmp
xor
mov
dec
lods
xor
sbb
cmp
cmp
lds
adc
in
sub
mov
pop
test
es
call
jmp
aas
movs
pop
ret
cwde
adc
out
adc
(bad)
fiadd
dec
ficomp
imul
pop
repz
sar
pop
hlt
lods
inc
dec
or
fisub
or
jecxz
sub
jns
and
sbb
push
jne
mov
sub
jecxz
push
inc
lea
aam
mov
lea
inc
stos
aam
xchg
sbb
xchg
loope
(bad)
dec
test
bound
add
loope
push
movs
dec
popa
mov
je
addr16
out
xchg
dec
rol
mov
fimul
inc
mov
xchg
fmul
loope
mov
mov
xchg
mov
inc
mov
and
dec
(bad)
jno
sub
lods
out
mov
(bad)
call
mov
mov
ret
xor
in
ss
cwde
lods
data16
loopne
nop
imul
(bad)
jge
mov
sar
lea
fisttp
and
mov
repnz
movs
mov
jl
or
cmp
mov
or
push
sahf
(bad)
dec
arpl
mov
test
mov
or
mov
aam
xchg
xor
or
sub
mov
cwde
lods
pusha
rcr
lods
mov
pop
pop
mov
jnp
dec
in
adc
add
xchg
sub
mov
sub
xor
sti
jb
mov
sub
jae
push
popf
mov
hlt
ficom
mov
ss
pop
add
in
pop
es
fisttp
out
xchg
or
ja
mov
ins
stos
pop
loop
loopne
and
and
xor
xor
mov
or
int
mov
iret
dec
enter
mov
(bad)
idiv
sbb
call
pop
hlt
xor
push
lahf
mov
fdiv
sti
lea
icebp
sbb
fs
mov
jb
inc
sub
jecxz
inc
and
loop
xchg
icebp
adc
(bad)
out
retf
xchg
(bad)
pop
add
sbb
outs
or
aad
outs
cmp
out
mov
outs
push
cli
fisttp
fs
arpl
nop/reserved
addr16
movs
ja
pop
jbe
cld
lods
mov
cmps
(bad)
arpl
test
pop
mov
cdq
retf
cmp
cmp
in
cmp
cmp
loopne
dec
mov
push
loopne
lea
jbe
jg
inc
adc
test
xlat
inc
mov
test
xor
mov
les
ja
mov
repz
shl
(bad)
dec
inc
pushf
cmp
add
and
sbb
push
out
jecxz
pop
adc
or
xor
and
xor
fst
les
xchg
push
mov
test
inc
dec
mov
fidiv
(bad)
addr16
mov
stos
mov
pop
pop
push
ss
or
dec
adc
lods
stos
loop
push
test
ins
arpl
mov
push
sti
outs
push
xchg
jmp
xor
or
dec
dec
js
cmp
ss
ret
mov
pop
pushf
cmp
sbb
xor
bound
(bad)
push
push
scas
sub
idiv
dec
pop
xchg
mov
adc
pop
inc
sub
in
ins
ins
mov
repz
pop
movd
xor
mov
or
push
sub
leave
pop
push
adc
into
mov
frstor
xchg
push
cmc
pusha
repz
leave
inc
jge
sar
(bad)
mov
fld
inc
sub
add
jb
test
xor
rcr
dec
sbb
fdivp
ret
leave
test
lock
xor
lea
movs
scas
es
sti
cmps
das
inc
mov
repz
and
push
sub
xor
sbb
xchg
inc
adc
fwait
icebp
dec
mov
pop
out
dec
arpl
and
int3
inc
pushf
iret
or
pushf
repnz
xchg
shr
stc
mov
sub
mov
jo
fld
std
dec
je
rcl
pop
sub
jp
pop
cmp
dec
out
adc
(bad)
cmp
mov
pop
add
xchg
jp
retf
inc
cmp
mov
ins
ror
push
fist
mov
push
iret
and
pop
push
bound
push
mov
in
push
inc
jae
dec
or
pop
ins
dec
lock
inc
mov
pop
movs
aad
into
push
push
data16
out
push
jl
mov
int
push
lea
cdq
sub
push
pop
xchg
pushf
sbb
mov
dec
out
(bad)
scas
jne
pushf
inc
out
ret
or
in
dec
fcom
pop
lods
adc
xchg
int3
dec
fcmovnbe
in
xchg
mov
addr16
mov
xchg
inc
or
loop
fisub
cmps
mov
(bad)
inc
scas
ins
out
sub
sub
stos
jns
xlat
retf
mov
cdq
or
mov
jmp
push
add
dec
repz
das
popa
lea
mov
pop
mov
mov
inc
xlat
push
std
add
and
sub
iret
inc
jae
cld
loopne
jg
loopne
mov
xor
loop
add
or
repz
leave
sub
add
push
sub
inc
cmp
mov
jno
or
fisubr
dec
jnp
sbb
mov
or
movs
add
add
ds
and
add
sbb
dec
add
pop
mov
and
out
lea
push
pop
in
loopne
mov
jns
sahf
push
fstp
lahf
shl
je
sti
add
jae
ret
xlat
fs
dec
push
cmp
stc
fwait
mov
jne
cmp
sbb
(bad)
jo
(bad)
xchg
jo
jno
mov
jl
and
jno
and
or
loop
xchg
adc
pushaw
inc
cmp
(bad)
(bad)
mov
mov
push
loope
mov
std
fld
fadd
shr
clc
ins
in
ss
cmc
fmul
rep
inc
jecxz
imul
sub
jbe
gs
cmp
movs
js
add
and
mov
jmp
xor
hlt
dec
or
xchg
jb
mov
fwait
pop
sub
and
dec
xchg
stos
mov
stos
loope
in
test
jp
mov
iret
dec
mov
add
pop
jne
pop
cli
mov
hlt
xchg
jge
mov
ja
mov
fist
mov
aam
dec
or
in
pop
iret
retf
mov
jecxz
arpl
ins
in
pop
jle
push
das
push
mov
mov
(bad)
(bad)
jne
and
cdq
into
add
push
jb
sbb
xchg
mov
fnstenv
ret
add
push
cmc
int3
imul
gs
cdq
loopne
stos
push
fcom
and
cld
mov
sbb
jno
cmps
ins
cmp
dec
jl
xchg
mov
adc
loopne
xchg
sub
loop
sub
mov
das
aam
mov
jp
cmp
aam
outs
sub
xchg
mov
or
fwait
mov
sbb
xlat
sahf
and
sbb
out
jbe
fisttp
out
push
movs
or
inc
add
or
leave
fs
outs
pop
dec
outs
sbb
xor
or
lea
test
test
mov
(bad)
jmp
push
mov
pushf
(bad)
std
cmp
es
popf
ins
sub
inc
mov
packuswb
ficomp
jo
xor
or
les
icebp
std
div
ror
mov
ret
push
mov
xchg
pop
pop
jno
rcl
addr16
test
rcr
push
test
mov
adc
sahf
pushf
cmp
or
adc
(bad)
and
adc
std
cmps
jae
imul
xor
mov
dec
fst
ficom
or
out
sub
xchg
xchg
mov
(bad)
mov
jns
mov
retf
mov
sub
mov
test
popa
gs
xchg
push
das
pop
clc
and
ins
in
(bad)
sub
pop
int3
js
imul
daa
aas
imul
xor
das
push
mov
xor
sbb
(bad)
adc
cmps
into
push
lods
imul
vunpckhpd
popa
jp
xor
div
push
mov
shl
mov
add
mov
jno
ret
bound
xchg
das
xchg
pop
xor
nop
xchg
jge
add
xlat
ins
jmp
sbb
aad
jmp
sub
out
fmul
add
rol
xchg
inc
fsubr
addr16
test
inc
gs
sar
push
xor
push
pop
clc
outs
call
mov
vmread
pop
(bad)
mov
out
sbb
(bad)
cmp
stos
xor
or
push
sub
xor
loopne
mov
pop
mov
retf
mov
jmp
fnsave
fadd
repz
jns
push
jnp
and
adc
jo
jno
jb
xchg
int3
icebp
fild
das
pop
push
cdq
ins
jnp
sbb
fnstenv
adc
outs
mov
jmp
ds
scas
or
arpl
xor
jle
shr
sbb
in
cmp
adc
dec
push
adc
test
outs
push
out
std
sahf
lods
in
cmp
jge
ins
mov
stos
push
or
mov
dec
aaa
test
xor
cld
int3
sahf
sbb
inc
sbb
sbb
jae
pop
test
xchg
mov
sbb
out
pop
jae
or
and
inc
fwait
mov
retf
dec
rcl
(bad)
sbb
cmp
psllq
mov
and
rcr
aaa
pop
test
sar
mov
(bad)
ins
xchg
cmps
jmp
push
sub
lds
loope
jmp
adc
cmps
ror
lods
loope
inc
test
xchg
push
retf
or
lahf
pop
pavgb
out
pop
inc
arpl
add
jae
adc
js
shl
dec
imul
adc
jnp
xchg
dec
and
jle
dec
sub
dec
(bad)
pop
xor
adc
jecxz
cmp
sbb
cwde
retf
test
cmps
loop
jb
push
add
test
pop
sbb
cmp
jno
push
sub
xchg
mov
xor
lods
mov
jl
rcl
xor
popa
adc
leave
or
(bad)
shr
mov
cmps
pop
scas
test
popf
mov
or
xchg
inc
out
add
jle
aam
adc
inc
(bad)
adc
dec
inc
out
popf
pop
push
imul
test
push
mov
inc
sti
fldcw
out
and
jnp
xchg
dec
dec
adc
sub
icebp
ss
aam
add
inc
pop
cmp
add
xor
test
cli
sub
inc
inc
es
popf
leave
sar
mov
mov
popa
jae
pop
push
shr
adc
jae
xor
inc
das
xor
mov
mov
fiadd
pop
fwait
mov
arpl
xchg
push
mov
aas
push
ins
clc
sbb
and
inc
pop
fcomi
dec
sti
lods
and
xchg
xchg
fwait
cwde
clc
retf
in
adc
push
ret
into
and
ss
hlt
or
adc
popf
fcomp
inc
out
fisub
mov
hlt
stos
xchg
std
jbe
mov
pop
nop
mov
dec
out
mov
cli
in
pop
adc
ds
pusha
cmp
jae
xor
scas
out
sti
mov
add
out
(bad)
jp
adc
push
movs
push
(bad)
xlat
mov
add
outs
ja
mov
add
inc
jg
and
pusha
aam
fst
neg
retf
sbb
xchg
mov
add
xchg
mov
je
adc
sub
(bad)
out
and
pop
mov
xor
mul
add
sub
sahf
fisubr
icebp
int3
push
div
mov
push
push
ret
call
ins
cmp
jae
xchg
lahf
dec
jns
and
(bad)
mov
ret
test
dec
inc
jno
inc
ds
dec
cwde
pop
mov
pushf
bound
into
call
push
jmp
sbb
hlt
sbb
mov
add
and
mov
aaa
push
jl
sar
mov
mov
sahf
dec
pop
rcr
dec
push
or
ss
es
daa
xchg
mov
jne
xchg
jecxz
dec
lods
adc
dec
gs
jecxz
daa
mov
div
mov
xlat
or
push
xchg
jge
sbb
sar
out
sbb
jp
jg
(bad)
mov
jae
add
inc
mov
add
pop
ret
inc
mov
pop
mov
sub
mov
(bad)
rcr
inc
aaa
or
or
cmps
sub
cmp
lods
test
(bad)
jle
mov
icebp
and
mov
cmps
dec
pushf
cmc
or
add
int3
mov
out
repz
push
aam
in
inc
mov
cwde
arpl
pop
(bad)
pop
push
mov
inc
xchg
jbe
mov
outs
push
lds
div
xor
xor
and
inc
add
jno
mov
push
sti
stos
push
in
sbb
addr16
jne
push
sbb
fdivr
addr16
xlat
pop
cmp
mov
mov
jecxz
cwde
jg
jbe
daa
shl
mov
outs
jae
popf
cmps
cmp
mov
retf
mov
pop
pop
std
mov
in
shr
cmp
xor
iret
je
jp
mov
sbb
or
pop
mov
movs
loope
jg
in
sbb
jne
inc
mov
pop
push
push
cmp
mov
cmc
and
mov
xor
jae
dec
mov
or
loopne
jmp
stos
shl
xchg
fs
fild
or
cmps
test
pop
js
sbb
push
dec
lods
mov
cmps
inc
pusha
enter
mov
mov
gs
mov
jge
inc
or
icebp
or
sahf
int3
int
push
fwait
push
xchg
cli
jbe
xchg
mov
dec
std
dec
push
call
sbb
call
cmps
imul
sbb
inc
jae
xchg
test
pushf
std
nop
xchg
xor
cmp
add
(bad)
imul
fimul
loop
movs
lods
jbe
adc
jg
test
sbb
dec
aaa
mov
xor
int3
dec
pop
cmc
sbb
test
xchg
pop
mov
ficom
outs
arpl
stc
int3
shr
int3
mov
fst
adc
mov
sbb
shl
pop
push
jne
mov
xor
mov
sahf
jg
jnp
mov
sbb
out
mov
ja
(bad)
xchg
mov
cmp
adc
adc
jge
inc
inc
mov
movs
aaa
dec
xchg
dec
jnp
or
pop
mov
xchg
je
(bad)
or
adc
sahf
popa
into
pop
inc
mov
je
adc
cmp
sub
sub
icebp
sbb
and
xchg
xchg
imul
loop
aas
inc
cmps
add
or
adc
adc
mov
mov
scas
out
loop
ret
(bad)
int3
mov
ins
in
mov
jbe
adc
push
fdiv
ja
mov
push
or
dec
jle
and
daa
dec
or
(bad)
scas
or
neg
out
test
bound
daa
or
out
fs
sbb
(bad)
aaa
mov
xchg
loope
mov
fcmovb
fiadd
push
leave
cmp
hlt
enter
arpl
lds
cmp
add
pop
add
mov
adc
mov
sub
stos
int3
div
stos
(bad)
data16
in
pop
dec
pop
hlt
ss
retf
and
scas
or
loope
test
adc
push
push
push
int
push
jo
es
pop
add
ret
push
dec
outs
imul
mov
dec
pushf
fs
sbb
cmc
sar
mov
fucomi
loopne
pop
mov
jb
push
add
out
iret
into
mov
out
xchg
jmp
outs
outs
mov
push
or
fsubr
leave
xor
js
(bad)
fnstsw
enter
in
mov
outs
add
xchg
xchg
dec
mov
(bad)
arpl
aam
adc
xchg
inc
adc
iret
popa
in
xor
cmp
stc
loopne
or
lods
mov
push
and
aad
stc
cmp
mov
sbb
xchg
add
pop
call
adc
into
add
mov
aam
leave
jnp
fild
in
inc
cmp
xor
fsubr
pop
jns
ret
ret
int3
inc
js
xchg
xchg
in
or
stos
js
mov
mov
mov
add
jne
xor
adc
jno
pop
(bad)
dec
shr
sti
pop
fist
js
mov
dec
fs
retf
cmp
ins
xor
js
cdq
cmp
mov
jno
mov
pop
fwait
mov
into
mov
and
sub
and
pop
add
mov
bnd
movs
shr
aaa
dec
xor
sbb
mov
loopne
stos
div
mov
sub
test
retf
lds
add
ins
into
dec
adc
test
repnz
hlt
int3
pop
dec
stc
jmp
fs
mov
push
cs
xchg
dec
xlat
push
shl
outs
jno
punpckhbw
test
cdq
inc
cmp
jb
push
sub
and
pop
(bad)
jnp
jns
sbb
sub
dec
mov
push
push
sti
dec
dec
push
ins
or
push
jge
push
(bad)
pop
pusha
lods
xlat
push
xor
inc
cmp
cmp
mov
add
rol
adc
adc
rcr
pop
(bad)
push
imul
ja
mov
mov
shl
aas
jne
xor
lods
sbb
(bad)
into
mov
js
or
inc
mov
lds
xchg
mov
iret
imul
aam
xchg
call
and
adc
movs
jo
fcmovu
adc
jmp
out
cmp
cdq
or
adc
dec
jmp
enter
adc
stc
out
push
nop
pop
mov
test
dec
xor
rol
sti
cmp
xchg
cwde
mov
dec
test
add
push
pop
(bad)
mov
call
ja
mov
js
push
pop
neg
pusha
imul
xlat
push
mov
ds
inc
fs
das
out
xchg
test
or
sbb
movs
push
mov
jb
adc
jae
daa
push
loopne
or
jle
ins
sbb
loop
cmp
scas
dec
sbb
add
xor
inc
inc
loop
ror
push
sbb
cmp
inc
add
lds
and
outs
adc
add
out
out
pop
mov
cmp
and
scas
add
pop
cmp
sbb
leave
lods
aad
mov
clc
loop
rcl
adc
cli
xchg
push
xor
(bad)
inc
stos
adc
dec
popa
sbb
dec
sbb
stc
add
dec
add
and
out
xor
arpl
das
xor
sbb
gs
pop
adc
fimul
inc
jbe
loop
dec
cmc
or
cmp
xor
xor
out
ins
cmp
nop
pop
mov
ins
add
sub
adc
movs
ja
ficomp
or
xchg
mov
outs
cli
test
imul
push
div
or
or
ins
lods
mov
int
adc
lds
dec
sub
sbb
cmc
mov
int3
pop
cmp
into
js
and
rol
and
mov
jmp
retf
jnp
xchg
or
mov
xlat
xchg
and
sar
jb
sbb
mov
jbe
jmp
add
fistp
scas
in
pop
sub
repz
and
stos
aas
pop
ficom
dec
mov
add
adc
sub
xchg
and
dec
fstp
sahf
retf
push
cwde
xor
sar
mov
mov
inc
ds
loope
aad
push
scas
pop
in
in
mov
test
daa
ins
or
mov
pop
inc
inc
std
retf
xor
cld
mov
jo
pop
xchg
mov
mov
in
and
jae
stos
push
adc
xor
adc
(bad)
retf
or
das
mov
nop
or
fs
retf
jnp
adc
into
and
add
addr16
pop
xchg
pop
adc
push
inc
mov
repnz
lds
call
mov
cdq
xchg
(bad)
pop
ret
pop
jnp
inc
lea
int
mov
adc
jmp
(bad)
jp
leave
jae
mov
call
and
mov
push
std
call
sub
out
push
cmc
cs
out
pop
and
sub
jo
pushf
mov
rcl
or
daa
int3
ror
mov
mov
mov
or
sub
jecxz
out
sahf
xor
pop
xchg
add
mov
pop
test
inc
fdivr
shl
js
ret
cdq
test
int3
mov
test
sbb
dec
and
jmp
sub
jbe
jl
and
mov
push
cmp
sbb
movs
lds
xchg
mov
leave
leave
sahf
lahf
sbb
pop
add
std
add
lods
jmp
movs
dec
mov
mov
test
arpl
xor
nop
push
loope
ret
cmps
or
mov
mov
xor
dec
stc
stc
adc
xor
imul
mov
mov
jg
dec
into
lds
aas
push
push
push
rcl
fidivr
dec
dec
loope
fisubr
icebp
add
jae
mov
push
cmp
pop
dec
cmp
jno
mov
sbb
inc
dec
mov
test
mov
into
ds
popa
push
sub
fstp
mov
in
mov
fiadd
movs
outs
pop
pop
aas
fdiv
jle
xchg
add
mov
pop
cwde
xchg
add
fs
pop
cmps
cmps
into
cmp
mov
pop
inc
(bad)
out
sbb
nop
or
(bad)
and
dec
and
call
push
jmp
adc
out
jb
mov
jne
aas
add
jne
xor
xchg
out
jae
mov
or
mov
call
fs
sub
scas
or
aas
mov
push
adc
stos
das
adc
(bad)
mov
xor
add
sbb
xchg
jge
jnp
sub
adc
adc
and
lods
(bad)
pop
cmp
sbb
sti
gs
xchg
mov
cld
add
sbb
mov
loope
data16
mov
das
add
mov
arpl
rsqrtps
cdq
dec
inc
jge
pusha
pop
retf
enter
cmc
pop
add
in
inc
sbb
jge
add
push
push
je
and
shl
sbb
out
dec
stos
out
dec
aad
mov
call
and
ret
call
test
mov
push
and
sti
mov
adc
loope
pop
aad
sub
inc
xchg
test
push
jle
inc
mov
dec
fwait
and
sub
stc
mov
call
xor
in
adc
popf
test
push
out
mov
mov
lods
les
(bad)
fldenv
xchg
imul
mov
int3
jnp
push
adc
push
(bad)
stc
lahf
shl
or
mov
and
cld
mov
cmp
push
mov
fnstsw
arpl
inc
xchg
fs
imul
push
jnp
sbb
(bad)
repz
jl
in
xor
punpckhwd
or
push
sub
lahf
cwde
adc
xor
dec
mov
arpl
or
loope
adc
and
xor
push
dec
das
push
and
mov
cmp
leave
cmp
push
or
inc
stos
jb
punpckhwd
fwait
jae
inc
imul
add
gs
mov
outs
(bad)
push
push
sbb
hlt
in
lods
and
adc
fs
ja
dec
(bad)
sub
and
xor
test
mov
sub
or
xchg
mov
xchg
enter
rcr
mov
ret
cwde
stc
push
out
xor
inc
xchg
cld
loop
das
mov
xchg
cdq
clc
(bad)
loop
mov
jo
dec
out
inc
or
nop
mov
pop
sbb
sar
mov
pop
(bad)
cmp
mov
mov
pop
mov
mov
cmc
popf
inc
jp
xor
jne
mov
ror
out
loopne
mov
loop
dec
xor
in
scas
add
sbb
loope
nop
adc
sub
test
adc
hlt
xchg
aas
mov
out
mov
mov
pop
je
loop
pop
inc
mov
mov
pop
dec
mov
jmp
mov
xchg
inc
jbe
aam
sbb
jbe
fistp
mov
or
sti
loop
mov
ins
test
jno
pop
dec
aas
mov
ds
gs
sbb
aaa
movs
lods
and
xor
add
pop
int
push
mov
cld
data16
int
in
sub
push
(bad)
aas
in
sbb
test
xchg
shr
pop
sub
int3
inc
or
test
(bad)
xor
push
call
mov
inc
pop
mov
sti
dec
add
push
mov
into
mov
jnp
cmp
add
push
or
xchg
data16
rol
add
or
push
adc
je
bound
dec
sbb
add
or
aad
shr
(bad)
mov
mov
pushf
das
ror
retf
or
(bad)
xchg
fidivr
test
ret
pop
stos
sbb
call
xor
mov
enter
and
scas
sbb
pop
ins
jg
loope
xor
pop
xchg
pop
mov
call
cld
loopne
int3
leave
fisttp
add
inc
xchg
lea
sbb
sti
icebp
das
cwde
bound
fnstenv
jns
jo
out
aad
add
pop
cmps
inc
and
idiv
and
push
xchg
mov
loop
cmp
cmp
icebp
in
inc
sbb
jmp
add
cmp
push
jmp
sar
lods
mov
adc
xlat
add
rcl
sbb
xor
sub
add
aam
xchg
adc
clc
pusha
pop
jb
cmps
pop
add
scas
sbb
push
jp
push
ja
shl
out
frstor
shr
ss
out
js
ret
cli
xchg
sub
(bad)
jl
mov
mov
jnp
ret
sbb
fwait
or
cmp
jns
push
jge
or
and
std
add
jb
dec
add
push
loopne
mov
jl
dec
cwde
clc
out
xchg
fsub
icebp
dec
std
jnp
adc
push
aas
fs
loopne
sahf
xor
ret
mov
shr
jne
popa
adc
les
cmc
cmp
in
lods
scas
or
add
les
retf
imul
add
or
popf
ret
push
out
loope
mov
call
mov
mov
adc
les
mov
mov
imul
or
sbb
push
std
pop
cmps
neg
ins
neg
movs
sbb
hlt
cmp
scas
mov
cmp
or
mov
je
arpl
outs
ins
scas
nop
adc
pop
push
(bad)
stc
lock
dec
gs
inc
les
hlt
mov
fcom
dec
leave
rol
mov
and
mov
and
xor
test
jo
mov
or
xchg
scas
daa
add
sbb
mov
xchg
shl
adc
push
mov
push
nop
out
pop
mov
jp
pop
adc
adc
add
je
mov
repnz
int3
adc
dec
rol
mov
pop
jmp
je
jb
xor
or
fdiv
pop
xor
push
or
test
outs
inc
retf
jge
out
inc
test
mov
int3
aaa
outs
or
xor
lods
xor
pop
and
jns
stos
call
pop
dec
add
or
dec
push
mov
(bad)
pop
add
aam
loope
mov
mov
test
movs
ret
stos
push
pop
iret
mov
push
imul
mov
mov
leave
xchg
loop
repnz
stos
pop
lods
test
fsubr
punpcklwd
sahf
jg
xor
jo
cmc
mov
jnp
mov
jno
into
mov
jbe
pop
inc
sub
inc
shr
push
xchg
pop
cmps
aas
adc
mov
leave
jmp
dec
mov
add
fistp
mov
lock
adc
je
jo
push
stos
rcr
and
jns
jb
add
loop
loopne
dec
add
mov
out
push
or
mov
enter
not
stos
test
je
push
pop
push
data16
rcl
call
or
ss
mov
(bad)
cmp
cwde
adc
test
push
jle
push
dec
mov
mov
ret
inc
test
iret
cmp
cmps
jle
aas
add
adc
bound
sti
jmp
mov
cmp
aas
les
mov
icebp
ficomp
rcr
fwait
ins
sahf
pop
test
repz
mov
fs
fwait
or
fisttp
mov
jle
inc
cmp
mul
dec
addr16
icebp
in
cmps
hlt
mov
iret
fadd
movups
mov
pop
or
xchg
xchg
pop
cmp
in
sbb
cmps
popf
ds
jg
push
and
sub
mov
xchg
xchg
ds
dec
jbe
mov
add
dec
sbb
shr
pmullw
pavgb
and
daa
(bad)
push
leave
and
pop
inc
out
push
sub
stos
enter
pabsw
nop
jmp
aaa
ins
(bad)
mov
mov
pop
sub
mov
jmp
cmps
cmp
out
push
sub
and
xchg
xor
adc
dec
push
cmp
inc
sar
push
push
add
jae
mov
dec
in
jl
out
ja
jae
loop
js
sbb
in
xchg
in
mov
jno
out
es
rcl
adc
pop
repz
cmc
rcr
mov
aaa
mov
shl
fsubr
stos
inc
test
push
sbb
movs
(bad)
out
inc
dec
mov
jno
or
ins
es
mov
mov
xlat
or
jp
adc
push
mov
fdivrp
aaa
or
imul
das
neg
push
sub
jg
dec
js
fild
unpckhps
shl
inc
outs
scas
icebp
jmp
out
das
pop
jbe
retf
sub
(bad)
cli
jo
fisub
add
test
sub
ins
sbb
test
adc
sti
sub
xchg
popa
inc
dec
mov
mov
repz
jne
repz
inc
ins
push
cli
loope
aaa
and
adc
mov
pop
push
retf
jp
fisubr
adc
push
adc
jnp
mov
and
out
sbb
ja
xlat
imul
bound
repnz
inc
mov
pop
push
je
dec
xor
sub
sub
and
pop
mov
retf
sbb
sahf
popa
(bad)
ficomp
sub
ficom
mov
and
cmp
dec
or
rol
aas
aas
xor
mov
call
xchg
push
mov
xchg
stc
xorps
out
mov
mov
daa
cwde
into
jge
mov
mov
inc
dec
gs
dec
rcl
mov
(bad)
fwait
jg
jp
add
cmps
push
data16
add
or
into
push
mov
jp
fs
jo
es
xchg
jle
sub
sbb
inc
sbb
call
(bad)
cwde
pop
mov
icebp
inc
pop
mov
adc
push
(bad)
ret
push
sub
cmp
cmp
(bad)
cli
data16
xor
dec
adc
sub
jmp
loop
out
xchg
pushf
enter
mov
jg
hlt
leave
or
pusha
bound
push
pop
pusha
and
xchg
sub
sub
push
dec
inc
call
inc
inc
mov
clc
enter
cs
aas
cmps
imul
xor
enter
ja
add
jp
inc
retf
stc
mov
and
or
popf
cmps
movs
cmps
cmp
inc
(bad)
cmc
dec
mov
stc
lahf
dec
xor
add
pop
add
or
loop
(bad)
mov
xor
out
xor
mov
pop
movs
push
out
mov
and
pop
mov
sahf
sub
popa
jne
push
aas
sbb
pushf
sbb
add
je
shl
out
pop
out
cli
add
or
(bad)
clc
ins
cmp
cdq
pop
test
retf
sbb
(bad)
(bad)
in
outs
or
jg
fistp
jo
and
(bad)
das
fmul
cwde
inc
fild
adc
shl
scas
jp
mov
(bad)
fadd
mov
mov
xor
ja
shr
fwait
rol
sub
ret
mov
inc
aas
push
inc
and
sub
xchg
mov
imul
repz
jne
sbb
or
xor
xchg
mov
adc
jne
into
sbb
gs
imul
das
shr
mov
mov
sbb
std
cmp
adc
fild
lods
ss
cmp
xor
std
add
fwait
or
dec
xor
in
movs
or
xlat
push
and
fidivr
jge
mov
or
push
cld
pop
dec
leave
sub
in
mov
xor
rol
inc
cmc
call
push
and
or
dec
cmps
and
fwait
or
jecxz
int
sbb
mov
inc
and
add
out
jae
cmp
inc
popf
or
rcr
sbb
push
(bad)
xchg
in
sbb
imul
in
and
xchg
cmc
jb
ins
stos
nop
xchg
mov
push
mov
retf
push
mov
adc
cmp
adc
and
xchg
mov
vpacksswb
iret
in
push
lods
lds
mov
push
cmp
sahf
in
sub
les
out
push
mov
pop
xchg
inc
jp
mov
rcl
pop
mov
in
iret
jno
gs
adc
in
adc
adc
xchg
rcr
sub
imul
frstor
pop
stos
inc
inc
add
mov
mov
sti
ins
or
pop
adc
loope
btc
cmp
adc
movs
pop
dec
dec
pop
aam
hlt
mov
popa
xchg
shr
xchg
test
or
mov
les
and
push
daa
out
or
xchg
dec
popa
cmc
mov
xchg
scas
xchg
call
not
jmp
xor
iret
pusha
sar
pop
mov
pop
icebp
retf
mov
pop
mov
mov
not
add
fstp
xchg
pop
cld
or
cmps
icebp
cli
out
loope
sbb
mov
jl
xchg
xlat
(bad)
test
ds
xor
es
mov
mov
add
jae
addr16
out
imul
ret
ins
jmp
xchg
movs
jmp
shl
ret
cmp
(bad)
mov
dec
ss
adc
fs
nop
outs
xchg
jle
xchg
and
jno
call
loope
xchg
inc
jnp
and
cwde
jne
pop
mov
imul
mov
pop
ins
mov
cs
fwait
push
shr
sub
lock
test
loop
in
aaa
push
nop
(bad)
add
adc
sub
xlat
push
mov
xlat
pmaxub
(bad)
ror
mov
dec
xchg
inc
outs
inc
pop
js
jno
in
adc
outs
in
shl
adc
mov
imul
shr
xchg
inc
add
cmp
in
jo
xchg
jne
mov
or
repnz
nop
ss
push
mov
mov
inc
js
test
sub
fs
push
cmc
popa
mov
inc
cmp
dec
xchg
in
add
loopne
sbb
pushf
mul
inc
xor
inc
sub
ret
hlt
xor
out
pop
jg
fnstsw
add
mov
xor
mov
and
adc
jg
jae
shl
icebp
sbb
mov
cdq
arpl
xor
mov
sub
xor
push
mov
mov
ficom
and
sbb
push
div
push
das
and
mov
popf
in
stos
(bad)
inc
inc
and
jae
adc
sbb
add
xor
test
push
add
movs
repnz
cmc
dec
xchg
(bad)
mov
(bad)
mov
bound
dec
scas
lock
pop
(bad)
stos
imul
push
xchg
scas
dec
add
jae
outs
inc
fadd
inc
pop
push
inc
pop
sub
out
jae
xor
pop
mov
aaa
cmp
or
xor
mov
xchg
inc
dec
stos
sbb
xor
(bad)
in
aas
dec
push
dec
cld
mov
sbb
bnd
inc
dec
(bad)
out
(bad)
mov
sbb
test
add
jo
mov
jp
jae
cmp
jmp
loopne
xchg
mov
xchg
enter
retf
inc
jl
cld
sbb
test
dec
jmp
xchg
jmp
jno
and
icebp
iret
dec
pop
and
cmps
push
fnsave
pop
imul
or
call
fldenv
xor
daa
ficomp
ins
dec
out
mov
call
mov
sub
mov
pop
scas
(bad)
cmps
push
test
mov
push
call
push
ret
sbb
popf
lods
int3
(bad)
cld
xchg
pop
int3
push
and
lahf
mov
cmp
lods
jp
fs
xchg
inc
mov
fsub
aas
cmp
popa
jne
imul
call
sub
mov
xor
or
je
call
es
cmp
inc
xor
sar
stos
popa
mov
dec
in
jmp
(bad)
(bad)
je
fisubr
call
loopne
addr16
retf
xchg
sbb
adc
mov
imul
add
add
lahf
aad
pop
movs
dec
retf
out
add
push
in
push
mov
test
add
mov
out
mov
(bad)
cwde
xor
mov
or
in
xchg
mov
les
std
fisttp
dec
sahf
or
xor
daa
sbb
arpl
sub
jnp
and
cmp
or
stc
sub
mov
js
push
or
into
sahf
stc
adc
fwait
push
adc
mov
push
jle
ins
out
cwde
lods
pop
stos
addr16
dec
jmp
push
mov
or
ffree
out
call
xlat
test
xor
retf
data16
mov
add
outs
jle
gs
push
mov
mov
jecxz
push
call
xor
and
xchg
xchg
push
loope
or
hlt
xchg
fild
mov
mov
test
popf
push
adc
and
xchg
xlat
(bad)
mov
rcl
sti
arpl
sbb
fdivr
add
(bad)
sbb
mov
mov
mov
dec
fsubr
jb
xlat
loop
cmp
cli
dec
add
shr
arpl
hlt
mov
add
mov
add
and
mov
adc
dec
add
jnp
xor
sar
xchg
and
pop
dec
(bad)
xchg
xchg
call
mov
(bad)
rcl
stc
fstp
(bad)
sbb
jl
push
lds
cmps
aas
callw
inc
mov
shl
dec
imul
ss
inc
jge
(bad)
leave
cmp
adc
movs
aaa
cmp
adc
in
loop
inc
jns
cmps
ror
ds
(bad)
mov
mov
xchg
sahf
push
jne
inc
sub
mov
in
outs
push
mov
in
retf
aad
repnz
push
sahf
xor
cmp
scas
and
fdivrp
adc
jno
clc
push
lods
imul
mov
or
adc
int3
xchg
(bad)
aas
ins
adc
fdiv
sub
(bad)
adc
sub
add
adc
cdq
mov
pushf
mov
aad
mov
out
fist
les
aad
mov
add
cmp
and
popa
scas
fs
hlt
cmp
add
test
mov
or
je
dec
sub
add
mov
mov
add
sbb
cmp
test
xchg
loopne
and
js
or
cld
cs
mov
xchg
inc
fwait
jno
mov
mov
cmp
push
int
xchg
adc
cdq
pop
repz
adc
daa
test
adc
dec
mov
mov
sub
sub
xor
inc
(bad)
add
push
fldcw
sub
xchg
mov
addr16
add
mov
outs
xor
call
xor
stos
mov
inc
sar
adc
xchg
inc
test
add
out
mov
ret
aam
(bad)
cmc
sub
add
dec
xchg
rol
inc
ins
cmp
cmp
jecxz
dec
jbe
movs
popf
cmps
(bad)
mov
iret
or
mov
add
adc
inc
mov
or
adc
and
xor
cwde
ror
and
ss
loope
jne
movs
arpl
ret
push
jnp
test
jo
xor
dec
lds
jno
es
inc
mov
cmp
popa
in
adc
pop
add
pop
fild
ficom
dec
ret
mov
mov
fs
clc
(bad)
sti
and
cmp
das
xor
inc
dec
xchg
mov
adc
jp
cmps
and
mov
in
jne
in
jnp
or
sahf
ins
and
xor
fmul
ins
mov
test
(bad)
(bad)
cli
pop
and
fstp
pop
inc
push
fdiv
ret
mov
adc
arpl
popf
jmp
leave
sub
push
outs
pop
imul
add
sbb
retf
ret
jo
jne
pop
adc
stos
inc
mov
shl
cmp
popf
push
fidiv
(bad)
out
aaa
dec
pop
jl
sbb
mov
shl
push
std
mov
dec
or
or
sbb
sahf
add
mov
mov
fld
shl
push
push
pop
shr
stos
xchg
cmp
bnd
jae
fs
(bad)
int
jbe
sub
cmp
hlt
xor
add
and
int3
call
or
or
scas
cmp
sub
xor
stos
ret
sbb
shl
jo
cmps
pop
loop
lds
(bad)
(bad)
pop
imul
imul
call
cmp
mov
or
push
inc
movs
xchg
adc
bnd
sahf
pop
cld
mov
push
sub
movs
mov
or
push
xor
rol
dec
sahf
pop
push
mov
inc
pop
(bad)
pop
pushf
std
das
cs
cmp
sbb
push
mov
sub
pop
loope
call
je
xrelease
add
clc
ins
movq
xor
mov
mov
xlat
pop
repnz
retf
sub
or
sub
les
pop
sub
mov
lods
cmps
cwde
test
ror
fild
std
inc
and
retf
xlat
jmp
xchg
jmp
aad
nop
push
mov
cli
retf
imul
and
lods
rol
pop
jae
xor
dec
push
stos
data16
mov
mov
ja
js
stos
(bad)
mov
jecxz
pop
sub
test
idiv
dec
in
xchg
xchg
mov
lea
das
ror
psubd
int
dec
or
inc
scas
push
mov
test
cmp
shr
mov
push
dec
fidiv
int
pop
sti
es
repz
mov
imul
push
loop
into
ss
inc
push
cmp
rcl
fsubp
and
dec
adc
push
pop
(bad)
xlat
out
mov
popf
retf
clc
push
mov
dec
mov
jns
sbb
xchg
sub
xor
mov
call
into
int3
sbb
outs
adc
or
xor
rol
cmp
cli
cmp
sbb
out
adc
cmc
shr
and
sbb
ror
cmp
inc
adc
pop
stos
add
mov
and
add
movs
dec
mov
push
jle
add
mov
push
ret
inc
cmp
pop
mov
add
pop
cmp
mov
xchg
std
adc
ds
adc
mov
out
xchg
loop
sahf
out
jmp
jp
out
jmp
inc
jl
stos
xor
jmp
jns
cmp
clc
sub
(bad)
pop
xor
lds
shl
inc
pop
inc
mov
cdq
je
pop
add
pop
das
push
popf
cmp
ficom
jmp
xor
ja
rcr
sbb
scas
repz
inc
xchg
xchg
shl
pmaddwd
popa
int
sub
mov
outs
movs
dec
add
pop
xor
icebp
jmp
pop
out
and
jp
push
xor
mov
(bad)
mov
pop
fldcw
jo
mov
mov
imul
jmp
inc
test
jmp
mov
into
mov
sbb
push
(bad)
rcr
dec
test
jg
enter
add
scas
adc
jmp
cmp
sbb
jp
leave
push
and
inc
xchg
ror
sbb
jne
sbb
js
int3
xchg
scas
push
call
xchg
rcl
add
shl
mov
and
aad
outs
ja
mov
sbb
dec
jo
push
sub
cwde
imul
mov
xor
pop
and
push
push
or
es
cmp
scas
out
dec
aam
aam
sub
popf
cmps
loopne
rcl
cmps
push
jns
stc
(bad)
cld
(bad)
loopne
jnp
push
mov
stos
mov
call
adc
adc
sub
pop
dec
ret
add
cld
xor
push
(bad)
and
call
sbb
cld
outs
mov
xor
xchg
dec
js
xor
mov
adc
fwait
clc
mov
inc
cld
cmc
fmul
(bad)
mov
mov
inc
sahf
cmp
cli
sub
shl
dec
dec
push
movs
fdivr
sbb
xchg
mov
push
shl
lods
not
add
cwde
mov
fcom
push
mov
cli
jne
(bad)
lds
popf
inc
xchg
leave
pop
rcr
imul
add
mov
les
repz
(bad)
loope
in
or
ret
popa
mov
sbb
arpl
movs
pop
xor
ss
ret
lea
int3
and
(bad)
aad
add
sbb
dec
mov
in
and
jno
mov
shr
cmp
imul
out
shl
push
mov
jo
scas
pusha
jmp
je
or
push
xchg
jmp
sub
sbb
icebp
xor
jnp
sub
jmp
and
jns
out
jmp
les
cmp
ret
inc
dec
sti
mov
cmps
aaa
into
stos
out
ret
push
or
cmps
mov
lock
dec
sub
pop
(bad)
pop
and
inc
mov
aaa
ficom
mov
push
and
push
frstor
fidivr
push
arpl
xor
push
(bad)
imul
jl
out
repnz
aaa
adc
jle
mov
adc
mov
sbb
cmp
push
in
sahf
ret
inc
retf
jmp
ss
test
popf
xchg
add
cmps
mov
outs
mov
scas
ret
dec
dec
mov
sub
add
add
pop
jp
aas
add
sub
test
or
mov
adc
pop
aaa
es
in
cdq
jp
int3
inc
mov
sub
out
mov
outs
hlt
dec
pop
imul
iret
add
popa
retw
add
ret
pop
je
mov
add
stos
pop
popf
imul
sbb
pop
and
(bad)
pop
inc
ror
ins
movs
sub
test
inc
sti
popf
mov
clc
xor
popf
xchg
pop
call
pusha
or
or
pop
mov
out
jae
push
push
sub
mov
out
fisttp
test
sub
inc
fadd
cs
xor
push
(bad)
cmps
aam
sub
mov
xchg
pop
pop
cmp
lea
das
imul
lea
adc
mov
and
sub
js
scas
jl
inc
neg
xchg
ror
push
or
push
das
repnz
inc
fwait
xor
pop
adc
outs
lods
(bad)
cmp
sahf
mov
pop
cli
xchg
add
int3
mov
pandn
pop
push
lods
fild
or
mov
pusha
mov
(bad)
mov
push
loope
add
call
sbb
mov
sbb
and
xchg
xor
sbb
std
adc
xlat
cmps
cwde
add
nop
(bad)
jo
and
jp
pop
ret
adc
sbb
pop
in
mov
out
fld
add
sbb
aam
xor
adc
sti
popa
mov
pop
inc
push
(bad)
imul
adc
retf
mov
sti
mov
std
in
daa
dec
enter
repz
inc
daa
repz
sbb
mov
nop
sbb
sbb
je
shl
mov
add
and
fmul
pop
stos
(bad)
cli
pop
and
inc
inc
mov
bound
mov
retf
clc
outs
in
push
nop
out
pusha
das
push
mov
inc
and
inc
je
push
jae
in
add
int3
jmp
arpl
fsub
in
mov
dec
je
retf
push
pop
jge
outs
rol
ds
cmp
nop
call
fs
add
(bad)
test
push
loop
inc
mov
jnp
jg
scas
lods
mov
xchg
jge
mov
mov
push
stos
dec
jo
and
jns
xchg
fild
xor
test
inc
adc
std
sub
(bad)
pop
adc
jmp
mov
in
or
(bad)
cs
in
or
shl
gs
push
mov
pusha
jo
sub
lahf
mov
push
mov
xor
dec
push
ins
gs
sub
(bad)
push
add
inc
adc
push
mov
and
add
inc
xor
xlat
cmps
cmps
sbb
xchg
test
adc
fisttp
add
add
dec
xor
dec
cwde
test
movs
test
rcl
fnstsw
xchg
fwait
xor
push
mov
cmp
sbb
pop
xchg
shl
test
mov
and
sbb
inc
jmp
stos
dec
pusha
pop
dec
mov
dec
sahf
mov
leave
xchg
int3
adc
push
cmp
js
or
jg
mov
popf
iret
mov
arpl
sub
es
add
les
lea
pop
shl
or
pop
fs
mov
sub
mov
inc
jp
jecxz
xchg
pop
pop
sub
jb
retf
pop
and
mov
add
add
cdq
mov
push
test
stc
push
xchg
mov
lahf
es
push
pushf
dec
lods
jns
inc
push
jle
ja
fistp
pushf
dec
out
sbb
add
out
cwde
mov
and
cmps
shl
in
pushf
in
dec
test
das
jae
cdq
adc
jo
adc
pop
imul
frstpm(287
or
inc
outs
repz
in
pop
inc
in
xchg
(bad)
int
cmp
mov
xchg
repz
in
pop
sub
test
mov
add
mov
jnp
shl
and
movs
push
aaa
jecxz
fwait
(bad)
into
push
sub
mov
fcmovu
add
mov
test
(bad)
in
frstor
jbe
daa
retf
push
pop
arpl
test
push
xor
dec
out
and
xor
ficomp
pop
inc
push
jae
fcom
pop
pop
sbb
out
jp
ror
push
fnstenv
xchg
ret
call
not
sbb
call
mov
loopne
push
scas
shufps
gs
movs
mov
sbb
gs
inc
in
jge
mov
not
jl
pop
js
push
mov
pop
mov
jb
adc
inc
jb
sbb
adc
daa
sub
jb
sar
xor
loop
lods
ja
movs
rol
sub
hlt
into
xor
sub
push
xchg
mov
add
inc
pop
push
std
cmp
lock
pop
loop
int
fimul
test
fcmove
fmul
(bad)
scas
cmp
and
dec
fstp
sub
outs
sbb
push
mov
js
push
lea
adc
fcmovu
jns
sbb
xor
cdq
pusha
xor
adc
xor
add
fisttp
add
mov
xor
and
push
rcl
sahf
push
and
cmp
cmp
adc
out
push
daa
in
daa
xchg
dec
jne
mov
movs
das
int
stos
push
inc
xlat
dec
add
shl
dec
dec
aaa
mov
sbb
xchg
push
push
ds
pop
add
mov
mov
xchg
jns
loop
retf
xor
add
call
cmc
mov
mov
sub
out
adc
mov
xchg
adc
loop
push
gs
mov
xchg
jne
inc
in
inc
adc
or
inc
and
sub
sbb
jle
das
imul
jmp
repz
jmp
dec
mov
sbb
push
sub
cmp
add
das
dec
enter
mov
jge
sub
cdq
xchg
and
xchg
jnp
adc
mov
leave
xchg
vrsqrtps
fist
sub
dec
(bad)
jle
(bad)
lds
cmps
inc
gs
xor
or
call
fdiv
inc
or
pop
in
and
not
xchg
jg
pop
push
sbb
out
out
xor
cmp
div
jb
fisub
jnp
scas
and
dec
fwait
xchg
iret
or
icebp
sbb
not
in
inc
cld
mov
sbb
mov
and
retf
arpl
push
hlt
cmp
ret
retf
popa
mov
push
and
push
daa
inc
iret
dec
and
push
sub
sbb
loope
and
(bad)
fldcw
cdq
push
pusha
call
sub
pavgb
mov
push
retf
das
inc
cmp
jp
neg
icebp
aas
js
cmp
(bad)
jne
push
add
or
rcr
inc
and
pop
inc
call
les
xchg
gs
cmp
push
xchg
sahf
sub
clc
ror
push
pop
pusha
stos
jl
sahf
dec
sahf
push
mov
popa
cmp
dec
shr
rol
dec
enter
jmp
data16
and
pop
imul
test
push
das
jb
xchg
cli
test
(bad)
(bad)
cmp
mov
add
stos
lock
or
stc
loopne
cmps
or
fld
lock
jns
leave
clc
mov
inc
out
in
sbb
in
sub
dec
cmc
cld
shl
ror
popa
adc
xor
aad
pop
stos
inc
jnp
xchg
cmc
aas
and
inc
push
xlat
rcl
ins
and
lds
inc
push
adc
(bad)
lahf
std
push
adc
push
repnz
pop
not
cli
adc
mov
mov
and
mov
push
call
sar
in
scas
xor
bound
mov
imul
inc
push
add
call
cmp
mov
enter
nop
sar
(bad)
sub
js
cli
mov
adc
pop
jecxz
(bad)
jae
and
sub
cmp
arpl
cmps
mov
or
iret
xchg
pop
imul
jg
das
push
movs
es
pop
loopne
leave
nop
and
sar
sar
push
push
adc
adc
inc
xor
xchg
lahf
stos
add
(bad)
xchg
pop
push
xchg
and
sub
mov
pop
jecxz
enter
out
fisttp
jmp
push
je
or
push
or
or
and
or
pop
xor
ret
or
xchg
sub
xor
mov
pushf
pusha
or
icebp
cwde
loop
outs
test
aam
nop
or
and
add
push
sub
inc
es
jle
adc
ror
lods
(bad)
xor
push
stos
jno
ins
xor
pushf
mov
sub
cwde
leave
pop
mov
xor
inc
xchg
ins
xor
mov
sahf
xchg
lahf
mov
inc
hlt
mov
sahf
in
mov
fwait
mov
popa
mov
out
cmp
push
add
add
dec
mov
rep
pop
adc
out
mov
repnz
js
imul
inc
jno
adc
addr16
add
stc
int
test
outs
sub
loopne
fwait
and
xor
movs
shr
push
xor
jp
into
dec
add
cmps
pop
les
shl
aas
(bad)
cli
loop
stos
xor
int3
pushf
aad
iret
ins
(bad)
mov
cmps
stos
mov
or
mov
addr16
dec
pushf
xor
fwait
(bad)
push
jae
into
nop
and
fld
inc
aas
(bad)
cmp
or
and
(bad)
es
inc
movs
and
lock
outs
ror
fiadd
(bad)
pop
dec
enter
push
mov
mov
loope
stc
(bad)
jecxz
mov
ja
in
sub
mov
add
mov
dec
xchg
inc
test
arpl
cld
lock
out
iret
daa
test
xlat
sbb
or
mov
cdq
mov
mov
mov
xor
test
mov
xchg
scas
je
into
dec
leave
push
push
mov
cmps
movs
(bad)
loopne
(bad)
cli
push
xchg
adc
adc
enter
push
les
add
lds
movs
or
movs
pop
sub
adc
aaa
mov
or
popa
inc
sub
mov
cli
outs
inc
sbb
cmps
loope
aam
(bad)
mov
push
fisub
pop
inc
jle
dec
or
adc
ds
fcom
inc
mov
lds
stos
movs
addr16
pop
popf
stos
loop
not
sti
cli
fst
xlat
mov
push
fs
cld
xor
xchg
adc
test
in
push
scas
sub
jge
sbb
cs
sbb
mov
add
or
sub
jl
sub
punpckhwd
scas
pop
pop
inc
sub
out
leave
scas
dec
and
xchg
push
clc
mov
add
(bad)
je
popf
mov
addr16
retf
sahf
sahf
pop
retf
add
mov
mov
dec
stos
leave
and
xchg
inc
loop
cmp
xor
sbb
test
dec
sbb
pop
loopne
cmp
mov
aaa
retf
movs
jl
ins
jmp
popf
shl
jns
shr
sbb
call
sbb
test
mov
mov
dec
dec
adc
mov
sbb
(bad)
call
or
push
imul
imul
hlt
stos
xor
inc
movs
enter
pop
sbb
pop
cmp
push
cdq
pop
push
push
call
push
push
fcom
cli
mov
mov
jmp
(bad)
out
mov
sbb
test
ret
aaa
fdiv
xchg
shr
pop
enter
repz
int3
popa
and
mov
sub
sbb
fcom
push
sub
or
pop
retf
(bad)
movs
mov
or
xor
rcr
push
arpl
jns
and
arpl
(bad)
leave
scas
sti
pop
ins
test
and
xlat
neg
jne
push
imul
mov
mov
cmp
out
cmp
movs
(bad)
repnz
push
in
movs
fadd
inc
out
enter
gs
clc
cmp
les
and
into
or
ja
jmp
lahf
sar
sub
cmp
sub
(bad)
stos
mov
loopne
mov
rcr
mov
or
mov
xor
jge
cmps
inc
or
(bad)
aam
and
jbe
inc
ror
fdivr
(bad)
ins
mov
jg
fist
retf
adc
cmp
daa
cmp
or
inc
call
hlt
ja
pop
out
imul
jae
pop
ja
cmp
imul
mov
dec
xchg
je
mov
and
mov
and
(bad)
push
aad
inc
xor
sar
sub
mov
leave
(bad)
xchg
jbe
fist
inc
mov
out
es
jl
inc
cmp
lods
and
mov
(bad)
mov
jp
mov
inc
mov
ret
call
addr16
rcr
into
ins
or
push
sub
pop
out
or
push
ret
push
in
in
xchg
jns
cmp
int
call
push
imul
aam
add
add
idiv
push
sbb
call
arpl
xor
mov
test
std
scas
mov
cmp
cmps
add
cmp
lods
jnp
push
movs
inc
add
into
lods
add
xlat
mov
ret
inc
and
cmp
fisttp
adc
dec
sub
push
test
mov
neg
arpl
and
mov
call
sub
and
out
(bad)
mov
adc
nop
jl
mov
xchg
in
jge
push
popf
les
lods
stos
inc
std
(bad)
mov
adc
lahf
xchg
push
mov
mov
add
and
pop
ja
in
pop
dec
sti
movs
push
vmwrite
dec
aaa
pop
cmps
xchg
(bad)
fldl2e
shl
cmp
jnp
das
aaa
je
xor
ins
out
xor
xor
inc
mov
setg
loopne
mov
push
dec
inc
cmp
inc
addr16
jae
push
int3
es
jmp
hlt
adc
sub
test
loopne
jno
test
xor
int3
xchg
add
push
pop
inc
cmp
adc
and
cmp
sub
sub
jecxz
push
inc
lock
cld
jns
fwait
test
add
mov
mov
sbb
mov
fidiv
(bad)
into
loopne
jbe
cmc
xor
aam
(bad)
stc
aam
jno
push
xor
dec
pop
hlt
arpl
and
mov
popf
jno
dec
cmp
idiv
jg
fldln2
cmp
jmp
xor
mov
xor
js
test
jb
dec
cmp
sub
(bad)
ss
addr16
xchg
inc
jbe
cmc
push
inc
(bad)
pop
sbb
arpl
jae
pop
nop
mov
adc
sub
imul
cli
mov
xor
and
xchg
mov
jmp
dec
rcr
inc
mov
xor
pushfw
es
cmp
lock
mov
adc
jmp
cli
push
call
call
mov
cs
mov
std
mov
jno
pop
sub
ja
add
mov
or
imul
(bad)
mov
ins
stos
adc
xchg
jle
cli
cmp
pop
outs
clc
push
sbb
jl
pop
sbb
push
call
(bad)
in
out
loop
mov
ficom
xor
jecxz
adc
mov
xor
sub
out
cli
cwde
push
cs
icebp
mov
and
aaa
adc
xchg
pop
or
cwde
fadd
sub
movs
cmc
mov
in
mov
inc
int
and
retf
fidiv
push
or
push
sub
retf
test
fild
fild
jmp
cdq
mov
mov
out
aam
jae
cmp
nop
mov
and
int3
lods
fiadd
push
push
std
inc
push
rol
nop
aas
inc
addr16
cwde
adc
mov
push
bnd
jne
into
sub
call
nop
shl
jo
and
mul
and
ja
dec
xor
cmp
sar
push
call
fs
fst
fucom
aam
adc
test
push
in
ja
daa
jb
sbb
std
pop
xor
dec
xchg
loop
imul
sub
outs
fwait
add
ret
dec
out
fisttp
cld
push
adc
rcl
je
in
mov
mov
push
test
(bad)
cmp
jl
jnp
cli
pusha
loop
pop
imul
mov
in
jno
test
cmp
inc
fwait
leave
inc
lock
jo
(bad)
and
or
hlt
mov
lahf
adc
movs
out
lods
jmp
iret
jns
jg
push
hlt
adc
cld
popf
fsub
dec
jmp
or
pop
xor
add
clc
dec
(bad)
xor
in
ret
fdiv
std
or
ss
mov
mov
mov
push
loop
sahf
int3
out
out
cmp
add
(bad)
jl
xchg
retf
out
push
pop
sub
and
stos
mov
cmp
mov
xor
fstp
fucomi
pop
jns
jns
jbe
mov
fdivr
xchg
cmps
sub
mov
dec
shl
pop
iret
pushf
cli
jl
or
sar
stos
enter
push
add
xchg
leave
add
es
push
clc
jmp
xor
pushf
into
push
mov
scas
inc
ds
sbb
mov
jne
call
pop
push
push
data16
xchg
pop
lds
(bad)
es
cli
jb
fidiv
sbb
adc
mov
inc
call
adc
ins
fcmove
int3
je
fidiv
ja
and
sub
dec
sub
mov
(bad)
lock
xchg
mov
fdiv
push
cmp
inc
into
adc
and
enter
ins
pushf
adc
sub
das
xor
inc
xchg
and
mov
mov
inc
(bad)
mov
ja
cmp
(bad)
cld
ret
in
xchg
(bad)
test
iret
cwde
retf
cmp
inc
adc
or
jae
cmp
pop
dec
mov
sbb
dec
movs
cs
mov
iret
lods
sub
sti
(bad)
enter
popa
sub
loop
push
test
out
add
xchg
fwait
add
shl
sti
adc
sub
jmp
stos
ret
mov
cmp
fdiv
cmps
adc
push
inc
jmp
aad
add
mov
sub
xchg
dec
dec
adc
out
sub
mov
data16
inc
add
push
jmp
mov
or
mov
jne
call
fdiv
movs
add
dec
xor
mov
fstp
stc
push
mov
sbb
fcmovu
mov
pop
sti
jno
(bad)
out
xchg
dec
pop
imul
dec
call
popf
loop
dec
xor
out
in
fadd
pop
jmp
xor
xchg
xchg
add
sbb
inc
dec
cld
out
mov
and
popf
mov
mov
into
into
inc
scas
fiadd
aad
test
dec
xchg
jl
scas
ja
retf
call
sbb
lahf
sub
daa
ja
(bad)
neg
push
retf
add
sbb
jle
jo
(bad)
fst
shr
cmp
lea
cs
jns
retf
out
adc
retf
dec
outs
push
xchg
pop
movs
cmp
mov
cmp
popf
or
inc
stc
imul
(bad)
aad
daa
(bad)
cmp
or
cmp
je
push
gs
sub
retf
xchg
movs
sub
push
adc
stos
mov
test
inc
push
push
dec
test
or
aas
pop
push
or
jae
inc
pop
data16
pop
mov
cld
xchg
in
das
dec
shl
mov
jmp
or
(bad)
sbb
cmp
mov
js
lods
cmc
sbb
test
movs
hlt
mov
aas
stc
out
sbb
sar
ret
xchg
(bad)
aaa
gs
dec
adc
das
frstor
lods
add
fdivr
pop
fs
or
imul
daa
cmp
test
ja
popf
jb
xchg
bound
adc
sbb
jne
jne
push
cdq
sbb
(bad)
out
cwde
aaa
aam
loope
daa
in
inc
ret
enter
push
outs
repz
xor
lock
pop
inc
sbb
dec
sbb
fisub
push
adc
pusha
mov
add
jo
dec
scas
push
adc
mov
shl
xor
inc
sti
jns
je
xchg
sbb
cmps
loopne
js
leave
jbe
movs
pop
cmp
push
lock
(bad)
or
fnstenv
push
sub
push
lds
ins
and
ror
bound
and
cmp
mov
add
retf
repnz
or
nop
jae
inc
cmps
jge
pushf
(bad)
fdiv
int3
shl
call
into
or
pop
inc
and
es
dec
push
mov
add
push
enter
scas
push
and
loope
sbb
cmps
xor
loope
inc
shl
mov
retf
call
fild
adc
mov
or
imul
add
and
lock
or
dec
or
repz
adc
adc
jbe
mov
test
jno
add
add
cmps
in
stos
aad
jbe
or
in
leave
popf
or
and
mov
pushf
iret
or
xchg
call
test
cs
imul
mov
cwde
sub
(bad)
ins
mov
movs
call
das
fld
xchg
shl
ret
ds
mov
hlt
or
div
(bad)
jmp
jmp
out
mov
pop
cmp
cs
pop
fmul
mov
xlat
paddusw
outs
mov
aam
(bad)
stos
sub
mov
stc
xor
and
sbb
pop
loope
or
inc
not
mov
jmp
sub
pop
ret
xchg
ret
sub
sti
outs
or
cmps
movs
jo
and
loopne
arpl
fmulp
adc
pop
dec
xor
xor
or
sbb
aaa
sub
aaa
jb
jp
push
gs
push
out
in
inc
in
and
xlat
push
ins
push
in
jmp
popf
or
xor
sar
dec
xor
stos
push
jo
jnp
and
jae
push
cmp
jle
jle
add
jns
push
leave
jmp
adc
loope
adc
call
push
and
icebp
lock
sub
dec
scas
outs
mov
out
int3
jmp
xor
(bad)
jmp
mov
cmps
jnp
mov
or
push
pop
repnz
dec
mov
inc
sub
out
sub
(bad)
dec
xor
fcomp
ins
mov
mov
mov
lahf
test
(bad)
scas
push
out
push
inc
in
cwde
jmp
into
mov
xchg
or
fcmove
mov
jae
cld
or
inc
xchg
jns
(bad)
ret
inc
scas
imul
(bad)
mov
sbb
cs
loop
fisubr
xchg
jns
movnti
mov
imul
arpl
in
dec
mov
jno
sbb
imul
mov
icebp
xchg
icebp
jae
mov
jne
dec
inc
mov
xor
ret
imul
mov
jae
je
push
fisttp
jge
jg
and
test
jb
or
add
push
clc
add
scas
cmp
mov
pop
loopne
rol
and
sub
inc
mov
mov
popf
sbb
xor
fstp
mov
arpl
xlat
in
dec
outs
or
mov
loopne
mov
pop
sub
fbstp
or
cld
cmps
cmc
jmp
clc
call
ror
jo
int
sbb
jns
inc
adc
xchg
mov
xchg
add
cli
iret
mov
ins
dec
mov
gs
xchg
jge
dec
mov
outs
adc
in
sbb
leave
mov
jp
cmps
xor
call
ror
stos
cmps
pop
mov
call
jge
cmp
icebp
ins
out
imul
sbb
cmp
and
push
dec
xchg
adc
mov
lods
cmp
(bad)
hlt
stc
adc
movs
fldenv
sub
xchg
shl
dec
movs
sbb
adc
mov
push
(bad)
push
dec
in
bound
nop
in
inc
pop
movs
arpl
add
retf
cmc
leave
ja
adc
loope
imul
xchg
and
cmp
cwde
mov
lds
sar
test
icebp
jb
out
sti
mov
out
pusha
jmp
test
cli
pop
mov
int3
sti
dec
mov
arpl
jb
call
adc
sysenter
inc
inc
lea
xlat
ret
sbb
jge
adc
add
add
(bad)
out
loope
retf
aaa
push
ret
mov
mov
sbb
cdq
data16
ds
and
(bad)
xchg
jle
outs
loop
and
jge
jo
int
push
adc
arpl
in
rcr
or
cmc
ret
pop
mov
jns
jnp
adc
je
push
adc
es
pop
jo
cmp
lea
pop
cmp
xor
adc
lock
ret
(bad)
neg
xchg
mov
push
mov
popf
data16
inc
addr16
aas
js
fdiv
push
jecxz
pop
inc
mov
pop
jp
enter
pop
je
movs
adc
das
xchg
pop
add
pop
inc
jle
sub
fld
fmul
fwait
xchg
cmc
xor
fiadd
add
xchg
repnz
fadd
dec
mov
repz
xlat
adc
push
aas
daa
pop
test
xlat
scas
std
inc
jg
sub
and
bound
xchg
rol
sub
mov
test
jecxz
sub
div
xchg
and
xlat
shr
pop
xchg
scas
mov
fcom
xor
inc
adc
mov
sti
ja
dec
aad
cld
pop
or
stos
pop
and
xchg
sub
cwde
jge
xchg
iret
out
ficom
mov
cwde
cmps
arpl
cli
lahf
jle
call
nop
mov
ss
loope
mov
repnz
add
mov
xchg
push
and
mov
mov
dec
ss
js
lock
xchg
sbb
push
mov
popf
cmp
retf
retf
and
push
mov
je
movs
mov
or
jnp
mov
cli
repz
aam
scas
outs
sbb
mov
(bad)
aaa
push
xlat
and
or
mov
rcr
ja
xchg
add
sub
out
jns
cmp
lods
popf
mov
ins
sbb
call
repnz
sbb
mov
or
fdivr
pop
jnp
xor
jle
mov
pusha
xor
xor
mov
jecxz
xchg
lahf
inc
loop
push
add
sti
cmp
xchg
jl
dec
fcomp
cs
mov
nop
std
xor
mov
xchg
in
ss
sahf
jmp
mov
cld
loopne
dec
jge
int3
sbb
int3
add
rol
mov
call
gs
fmul
stc
lds
pop
test
cmp
mov
test
xchg
mov
sbb
adc
mov
fst
and
push
xchg
add
mov
sbb
xchg
and
stc
test
jg
movs
dec
cld
cmp
inc
cmp
lods
sbb
or
mov
xor
adc
sbb
retf
pop
push
sbb
retf
and
aas
in
lsl
cmp
lods
sub
push
sub
sub
sub
dec
pop
out
sub
cdq
jb
(bad)
repz
dec
pop
xchg
sub
in
mov
inc
scas
inc
sub
repnz
push
add
jmp
jne
cld
in
setl
pop
lods
cmp
call
cmp
jns
inc
ins
mov
(bad)
int3
movs
(bad)
pop
dec
sub
xchg
mov
push
inc
test
movs
jecxz
ins
aas
vpunpckldq
rcl
test
pop
xor
jmp
and
mov
mov
das
jne
jl
and
mov
pop
idiv
jge
mov
aaa
test
adc
mov
(bad)
les
xchg
and
pop
shl
jmp
lods
mov
das
loop
jecxz
cs
arpl
jmp
(bad)
xor
jg
or
fcmovu
clc
idiv
in
jmp
or
test
cmps
aad
mov
jecxz
push
dec
mov
lock
sbb
js
jl
data16
ss
xabort
xor
mov
scas
(bad)
or
mov
and
call
add
retf
push
jmp
ret
scas
aam
aas
ror
aad
mov
and
mul
ins
cmps
sahf
pushf
mov
sbb
mov
test
pop
lods
fiadd
pop
fcmovne
or
jecxz
push
ds
(bad)
cmps
fwait
ss
aad
add
mov
pop
or
dec
nop
int3
test
cmc
pop
add
inc
ret
mov
sbb
addr16
dec
mov
push
ins
push
xchg
pop
(bad)
outs
mov
mov
dec
bound
jb
gs
scas
cmp
add
jecxz
mov
enter
repz
cmp
shr
retf
sbb
gs
in
add
cmp
xlat
fisub
pushf
stos
dec
jecxz
rcr
iret
sub
push
pop
cs
mov
xchg
xchg
add
popa
fwait
mov
xchg
ret
repnz
xchg
icebp
sbb
out
mov
xor
pop
cdq
lods
nop
add
inc
std
mov
dec
cmp
(bad)
xchg
inc
cmps
xchg
cmp
cmp
and
aas
ret
idiv
pop
and
loope
call
jecxz
test
aas
xchg
leave
pop
cmc
mov
mov
add
repz
outs
int
pushf
loopne
cmp
retf
daa
test
(bad)
cmps
adc
adc
clc
dec
inc
pop
xor
test
outs
sbb
cmp
add
leave
repnz
mov
jmp
dec
push
and
rcr
movs
ficom
adc
aad
loopne
jmp
pop
cmp
push
int
xor
fs
xor
inc
aas
mov
loopne
fidiv
(bad)
sub
mov
and
xchg
loopne
out
bnd
rcr
retf
inc
addr16
mov
cli
cmps
pop
je
loop
dec
aaa
push
push
add
pusha
ins
ret
xlat
dec
lds
sar
push
mov
jle
mov
inc
test
ds
cmp
push
pop
cmp
inc
mov
mov
fwait
pop
enter
js
push
xchg
adc
in
lods
sub
dec
pop
call
sub
int
ret
shr
frstor
pop
scas
div
pop
dec
dec
cmps
in
das
mov
push
stos
test
mov
in
sub
and
adc
cld
imul
test
inc
xchg
mov
shl
addr16
outs
arpl
hlt
sbb
(bad)
sbb
div
mov
mov
ja
es
dec
cmp
inc
pusha
std
push
popa
out
stos
mov
jb
loope
sub
lods
addr16
cmc
stos
stc
in
cmp
sub
loopne
(bad)
xlat
lahf
xor
mov
ror
jns
cs
xchg
push
mov
sub
aad
fmul
es
inc
push
or
fmul
inc
sbb
sub
mov
inc
das
aad
sbb
pop
leave
mov
pop
lods
cmp
cmp
outs
push
js
add
icebp
cmp
sbb
les
jb
jle
push
and
jae
xchg
xor
sub
sbb
sti
adc
adc
in
xor
imul
xlat
out
adc
sub
test
mov
cmps
in
in
popa
loop
sar
pop
xchg
mov
mov
sbb
jl
xchg
jno
mov
jo
pop
cmps
or
xlat
cmc
xchg
push
retf
movs
or
es
dec
int
mov
jno
in
stos
repz
pop
cmps
mov
sub
(bad)
in
(bad)
and
fild
xchg
xchg
repz
jg
jmp
imul
stc
ret
push
adc
mov
push
mov
inc
xchg
(bad)
cmp
sub
ins
fs
pushf
jp
pushf
popa
push
mov
pop
ss
ror
mov
adc
mov
pop
add
push
call
(bad)
inc
mov
(bad)
mov
sbb
ja
mov
xor
lock
nop
movs
repz
dec
ins
test
sub
pop
ficomp
fwait
push
jnp
mov
in
dec
jnp
iret
xor
mov
xchg
jmp
lock
and
outs
or
xchg
inc
daa
iret
(bad)
cmp
add
push
inc
aad
or
outs
movs
(bad)
js
shr
loopne
iret
push
mov
lds
push
out
cmc
add
dec
sbb
xor
add
xchg
inc
cmp
lock
jbe
sbb
xlat
sbb
lods
jp
push
or
retf
and
mov
cmp
jne
int
add
cmps
cmp
stc
and
mov
adc
xchg
cmp
js
dec
xchg
dec
adc
out
es
inc
out
or
pushf
inc
add
out
pushf
inc
and
adc
(bad)
icebp
cmps
xor
inc
and
push
repnz
jb
iret
or
adc
ins
inc
out
iret
jno
jae
int
outs
scas
sbb
mov
jns
les
mov
xchg
pop
push
push
jb
mov
add
push
scas
shl
sub
sub
pop
adc
pop
push
retf
xor
int3
int3
or
adc
scas
test
cmp
lahf
pop
lock
imul
jo
pushf
cmps
mov
scas
xchg
out
and
sub
in
xchg
mov
cmp
cwde
int
js
mov
pop
popa
pop
cwde
xor
cmps
push
shl
loopne
sbb
cmps
jno
jp
shl
je
push
lock
mov
pushf
call
cmp
movs
or
test
loop
(bad)
outs
data16
fstp
and
xor
addr16
xor
adc
push
xchg
arpl
outs
loope
mov
call
push
test
and
mov
inc
mov
dec
test
jo
cmps
scas
aaa
addr16
(bad)
inc
jmp
movs
sar
js
mov
stc
ret
jb
loope
inc
hlt
push
mov
daa
mov
cmp
jl
and
fdivr
inc
mov
pop
fdivr
add
stc
push
fs
lock
xchg
(bad)
cmc
pop
iret
dec
mov
stos
xlat
arpl
pop
adc
sub
mov
mov
clc
xchg
out
or
dec
rcl
mov
ss
jg
inc
jg
fst
enter
xchg
mov
icebp
add
cmp
push
js
push
inc
mov
sub
addr16
test
sbb
test
sub
add
in
imul
out
je
mov
cmp
xor
pop
or
xchg
jg
mov
imul
or
jecxz
retf
mov
(bad)
cmp
aad
xor
mov
scas
adc
or
lahf
and
stos
mov
das
add
jl
arpl
add
pusha
xor
std
xchg
inc
dec
mov
add
add
sbb
sub
jns
push
js
and
adc
jnp
mov
scas
inc
fwait
add
xor
inc
(bad)
mov
cmp
push
stos
inc
aas
sbb
retf
pop
call
daa
popa
push
enter
sub
rcr
inc
push
aaa
push
jo
aad
sahf
in
(bad)
mov
add
jge
enter
scas
stc
in
in
add
test
cli
je
ins
ss
cmp
mov
stc
xor
jmp
mov
bsf
lahf
add
add
pushf
(bad)
(bad)
xchg
into
push
jno
fistp
in
or
js
push
inc
lods
popf
fidiv
xchg
push
inc
xchg
mov
cdq
ret
test
push
les
mov
mov
xchg
push
jns
pop
cmp
or
fdivr
cmp
ds
pop
neg
test
push
div
sbb
js
sub
inc
and
jae
das
les
test
fcom
jmp
loop
push
xchg
jmp
std
xor
push
mov
fistp
(bad)
xchg
int3
pusha
ja
push
push
(bad)
xor
pop
jecxz
test
cmp
xchg
rcl
adc
push
sar
pop
ret
sub
sbb
push
mov
ins
ror
inc
(bad)
mov
pop
mov
in
sbb
pop
repnz
sbb
push
pop
pop
enter
mov
rcl
mov
pop
or
dec
stos
rcr
nop
xchg
std
jecxz
scas
add
lods
xor
jmp
xor
pop
mov
jne
sbb
adc
test
dec
xchg
hlt
xchg
jl
or
lods
cmp
pop
xchg
ror
pop
xchg
repnz
lods
mov
fucomip
xor
fild
(bad)
add
int
inc
cmp
or
shl
mov
(bad)
pop
push
pop
shl
push
xlat
jno
imul
and
sub
inc
mov
loope
jbe
aad
ds
xchg
mov
mov
sub
dec
ret
repz
fild
div
or
daa
push
pop
repz
pop
loopne
jge
iret
std
adc
pop
(bad)
loopne
out
add
jns
mov
jb
call
out
xchg
inc
mov
test
sub
iret
ret
movs
push
arpl
push
xor
sub
cli
idiv
cld
je
out
aaa
daa
inc
mov
movs
inc
mov
sbb
adc
dec
or
nop
(bad)
loopne
loope
mov
imul
cmp
xchg
ret
inc
mov
in
enter
mov
jbe
mov
inc
adc
lods
push
je
or
xor
jmp
mov
xor
xchg
mov
cmp
aaa
dec
adc
inc
cmp
fdivr
push
jp
cmp
adc
push
and
add
(bad)
fsubr
inc
fimul
and
dec
imul
pop
jnp
ins
dec
loopne
inc
xchg
cmps
sar
arpl
or
fnsave
ins
jle
dec
mov
xchg
pusha
jo
push
dec
xor
jo
push
test
rcr
movs
dec
mov
aas
fldenv
xor
pop
push
push
cmp
repnz
dec
paddusw
pop
dec
out
dec
sub
mov
mov
lock
loope
push
sub
pop
adc
pop
pop
cli
xchg
ds
jb
mov
or
leavew
rol
jl
mov
push
adc
outs
sub
adc
jno
cmp
fistp
enter
mov
dec
mov
jb
wrmsr
clc
aas
pushf
popf
jp
addr16
iret
pop
stos
pushf
das
push
mov
mov
jge
and
jnp
cmp
sahf
add
repz
cs
xchg
jecxz
xchg
in
repnz
stc
call
or
pop
cmps
out
mov
rol
cmc
mov
jmp
push
and
sub
ret
adc
shl
xchg
push
js
shl
xlat
in
(bad)
and
mov
mov
retf
dec
movs
cs
in
mov
pusha
sar
jl
arpl
push
sbb
sbb
and
pop
sahf
jge
jg
loopne
xchg
mov
into
fsubr
pop
jge
stos
ret
fistp
mov
fld
leave
popa
add
xor
neg
or
jnp
rcr
rcr
ja
aaa
cdq
scas
aad
loopne
dec
mov
and
movs
mov
mov
push
inc
push
lds
and
pop
push
dec
test
sbb
jne
add
lahf
std
and
outs
aad
and
inc
setns
sar
out
retf
loop
js
stc
test
xchg
lods
or
popf
push
push
retf
ror
repnz
add
les
outs
and
imul
imul
mov
icebp
push
mov
and
sar
gs
mov
test
faddp
je
aad
sbb
add
cwde
out
push
sahf
cmp
mov
mov
pushf
and
jbe
leave
test
push
dec
sub
cld
sub
sub
push
sbb
lds
iret
inc
scas
mov
and
cmp
out
test
or
jg
jp
leave
or
or
or
(bad)
pop
leave
add
call
push
shr
xor
es
scas
and
(bad)
jecxz
cmp
mov
sub
mov
(bad)
push
mov
test
das
je
sti
mov
xchg
fild
pop
jp
and
xor
push
loop
loope
sbb
dec
jmp
and
lods
mov
xor
push
sahf
(bad)
int3
rcr
jnp
sub
je
loop
inc
cmp
addr16
dec
stos
pop
jns
fs
test
stos
mov
pop
jbe
stos
loope
aas
inc
fcomp
sbb
mov
add
outs
dec
mov
sub
lds
mov
(bad)
sub
lds
neg
das
dec
xor
xchg
and
mov
cmp
daa
out
out
leave
xchg
mov
dec
sbb
imul
mov
pop
les
mov
sbb
(bad)
xchg
ret
(bad)
btc
push
push
in
or
out
pop
loopne
ss
pop
sub
inc
ins
stos
mov
push
mov
test
popf
push
mov
sub
int
jecxz
stos
pusha
ja
cld
jmp
sbb
pop
sub
ds
cdq
add
pop
or
(bad)
out
fstp
data16
mov
ss
mov
sahf
xor
push
test
inc
xor
xchg
rcl
jg
retf
imul
dec
jae
ret
mov
and
or
cmp
dec
sahf
dec
out
push
cmp
sub
movs
aad
sub
leave
push
jnp
adc
adc
cmp
mov
jge
jno
out
cwde
test
aas
mov
scas
push
loope
mov
aaa
jle
cdq
mov
mov
mov
xor
outs
jb
or
dec
jecxz
jg
mov
in
jl
inc
cli
xor
movs
mov
adc
mov
cwde
push
out
jecxz
addr16
push
stos
dec
add
mov
in
sbb
scas
and
sub
or
inc
(bad)
cmp
mov
cmp
bound
rol
sbb
js
mov
or
fcmovne
xor
popa
lock
jecxz
fiadd
pop
sub
das
loop
mov
(bad)
in
push
adc
into
cmc
pusha
add
cmp
inc
stos
mov
jnp
xchg
pop
sti
push
fcomp
or
pop
sub
loop
(bad)
(bad)
mov
pop
mov
dec
xchg
stos
in
inc
and
cmp
and
or
mov
shl
or
fs
cmp
add
mov
jne
mov
pop
sbb
pop
inc
mov
fistp
inc
cmps
push
movs
loopne
cmp
or
mov
int3
xor
dec
(bad)
pop
fwait
(bad)
into
adc
cmp
adc
push
(bad)
enter
mov
(bad)
repnz
inc
dec
bound
sbb
lea
cmp
jae
cdq
jg
je
xchg
or
or
leave
sub
loopne
test
xor
xor
cli
xchg
sti
stos
xor
cmp
cwde
push
daa
(bad)
add
push
loope
inc
ret
gs
add
ins
cmp
push
(bad)
aaa
loope
sbb
pop
ja
mov
xchg
pop
or
stos
sbb
adc
xchg
push
mov
nop
mov
(bad)
rcl
or
xchg
mov
call
or
dec
add
out
xchg
lods
add
add
(bad)
cdq
pop
in
inc
ins
shl
ins
out
inc
in
jmp
cld
and
fucomi
and
fsubr
into
in
loop
test
cld
dec
or
push
sbb
and
outs
jbe
outs
mov
add
int
ja
iret
jnp
lods
pop
xchg
iret
pop
test
fisubr
jae
xchg
loopne
call
mov
sbb
push
dec
push
add
and
pushf
adc
dec
ja
cmp
(bad)
sbb
sbb
add
or
adc
pop
dec
aad
lods
mov
add
add
lea
ror
mov
xchg
mov
les
jnp
jne
popf
dec
int
and
(bad)
cmps
movs
clc
fimul
pop
jmp
retf
mov
addr16
push
hlt
jno
popf
imul
mov
mov
in
mov
sub
(bad)
sbb
mov
lds
popf
inc
or
mov
jmp
je
test
adc
fild
dec
or
xor
pop
mov
(bad)
outs
(bad)
mov
cmp
shr
cld
sub
dec
not
jle
jo
adc
sbb
cmc
inc
sub
out
or
fisubr
and
(bad)
or
jecxz
shr
or
and
out
sub
xchg
(bad)
cmp
fild
dec
cs
xchg
xchg
inc
cmp
ret
int
pushf
mov
jmp
daa
sbb
pop
fstp
dec
xchg
pop
data16
stc
lahf
aas
mov
ins
cmps
xchg
inc
sub
mov
push
daa
nop
pop
pop
stos
and
daa
jmp
rol
add
jns
mov
push
and
adc
pop
ret
inc
or
call
xlat
adc
pop
inc
jne
aam
(bad)
adc
aad
sbb
mov
popf
inc
xor
adc
test
mov
cmp
aas
sub
imul
jne
xchg
inc
arpl
mov
test
clc
mov
mov
mov
neg
adc
repnz
ficom
mov
out
enter
in
mov
call
ficomp
push
std
mov
outs
iret
cmp
push
or
xlat
sub
jb
or
in
mov
adc
jp
or
std
test
mov
pop
fstp
arpl
loopne
jl
(bad)
aad
test
mov
fnstenv
sub
xchg
add
dec
mov
arpl
xchg
add
lods
stos
push
xor
jo
jmp
pop
aas
cld
sbb
in
push
lods
repnz
call
or
push
fcmovnbe
or
cmp
(bad)
pushf
cmp
scas
ja
xor
out
retf
pop
push
sub
movs
cmp
xchg
stc
movs
js
fstp
mov
add
xchg
fnstenvw
cld
or
add
imul
ret
pushf
xor
shl
ficom
out
push
movs
sbb
out
dec
stos
loop
mov
aas
ss
repz
(bad)
fwait
push
iret
xor
mov
inc
dec
int
pushf
fadd
pusha
int3
lods
dec
pop
dec
pop
xor
test
sub
and
int3
jg
mov
nop
fild
enter
xchg
xchg
rcl
sub
and
inc
inc
or
xor
lock
int
pop
clc
pop
add
(bad)
pusha
push
inc
fidiv
pop
out
test
outs
lods
aas
je
idiv
cld
or
test
imul
adc
sub
add
xchg
pop
call
ss
sahf
adc
dec
rcl
push
fimul
cli
aam
shr
fsub
out
cmp
push
jmp
add
inc
inc
iret
jl
ins
push
fsubr
jnp
fnsave
cli
pop
xchg
out
data16
in
jne
popa
or
fneni(8087
inc
fmulp
or
(bad)
xor
mov
test
sub
dec
cmp
or
bound
(bad)
in
cmp
push
dec
cmp
aad
nop
sub
cmp
pop
xchg
call
fbstp
jb
pop
and
mov
sbb
mov
cld
inc
mov
lods
dec
das
aaa
mov
out
inc
add
out
mov
sub
pushf
les
xor
jno
rcl
inc
jge
dec
mov
push
popa
sbb
mov
pop
in
jmp
ins
cmp
add
jae
in
pop
idiv
fwait
(bad)
and
jne
stc
fmul
or
or
(bad)
(bad)
fs
(bad)
or
xor
pop
pop
nop
imul
pop
cmp
sbb
cmp
and
aam
mov
or
dec
dec
rcl
shr
cmps
jg
jg
xchg
cmp
xchg
mov
call
int3
cmps
mov
cwde
push
pop
adc
and
loopne
push
push
lock
stc
call
fisubr
push
shl
sti
shr
not
push
mov
mov
dec
pusha
ja
push
popf
push
ficomp
pop
ins
push
movs
xchg
push
les
arpl
sbb
into
jae
cmps
loop
mov
cmp
int3
dec
aad
scas
mov
adc
daa
dec
add
xor
fwait
xchg
ins
stos
jle
ins
pop
push
push
int
inc
and
in
int
sti
ret
cmp
inc
stc
in
jne
aaa
mov
lea
das
pop
es
sub
cmps
pop
jge
mov
jmp
add
mov
sbb
dec
mov
cmc
mul
sub
sbb
ss
nop
daa
stc
ror
jb
push
add
(bad)
jnp
mov
jg
mov
sub
enter
xor
retf
(bad)
cld
or
sar
stc
pushf
call
(bad)
stos
repz
jg
push
add
movs
sub
inc
stc
jb
push
push
cld
call
in
test
mov
dec
jbe
or
jns
cmp
(bad)
mov
jmp
(bad)
mov
clc
and
sub
and
aaa
jno
stos
stos
push
cs
mov
dec
cmp
ins
mov
into
cmps
mov
jecxz
xor
das
cmp
sub
add
and
ret
stos
bound
sub
cmps
push
mov
adc
push
inc
imul
addr16
jae
iret
daa
xor
dec
popa
idiv
fcom
cmps
or
mov
js
sbb
mov
xor
adc
into
push
popa
push
out
rcl
aas
fadd
add
inc
in
dec
push
repnz
inc
scas
movs
or
or
inc
in
sar
pop
xchg
xchg
ret
sub
ins
movs
pop
stc
aad
stc
and
xor
loopne
sbb
(bad)
fist
jo
adc
out
lods
cmp
pop
push
fild
arpl
mov
(bad)
push
fisub
mov
push
cmp
push
popa
(bad)
sbb
stos
add
push
lahf
dec
ss
add
test
mov
dec
push
cwde
sbb
add
ret
bound
(bad)
jge
aam
xchg
add
xchg
(bad)
lds
sbb
cld
mov
icebp
inc
and
push
(bad)
pop
fcomp
xchg
pop
sub
mov
mov
mov
xor
daa
or
retf
movs
and
ins
xchg
pop
je
mov
sub
pop
push
xor
ds
or
call
leave
lahf
(bad)
cmp
lods
scas
and
adc
inc
ins
jno
in
cli
test
daa
(bad)
imul
lahf
scas
cmp
fisttp
and
mov
loope
xor
pop
mov
nop
loop
lahf
xor
jp
pusha
cmp
in
jno
or
jb
test
ret
and
jae
shl
jno
popa
inc
movs
inc
jg
lea
call
adc
adc
mov
pop
in
lds
div
fbstp
dec
mov
cdq
cs
test
cmps
xchg
les
sub
push
adc
pushf
push
inc
cmps
fnstenv
aam
jb
and
xor
xchg
outs
or
fst
lds
ret
ins
xchg
pop
sbb
int
rcr
popa
dec
pop
add
jmp
jle
aad
jne
fucomi
xor
(bad)
xor
loope
shr
dec
cmp
cmps
es
mov
sub
jmp
add
rcl
fist
cmp
sbb
cld
clc
mov
retf
ds
stos
pop
rcr
ret
mov
lock
lea
in
aas
jmp
add
mov
mov
imul
dec
or
fcom
test
sub
xor
mov
pop
lods
dec
jb
popa
or
push
jbe
les
mov
jmp
cld
mov
shl
adc
cmp
scas
add
sub
fs
in
mov
pop
(bad)
push
data16
xlat
xor
push
js
cmp
outs
enter
psubusb
ret
push
retf
fisub
ficomp
jmp
(bad)
fiadd
out
sbb
pop
les
loopne
(bad)
stc
int
inc
movs
or
dec
xchg
adc
out
in
add
sub
inc
jae
xor
sub
cmps
pop
out
fnstenv
mov
adc
inc
icebp
rcl
mov
test
ins
call
and
sti
sbb
pop
es
sbb
aam
repz
jl
ss
lea
das
cmc
cmps
push
jmp
add
repnz
cli
mov
xchg
imul
push
(bad)
addr16
cmps
mov
ja
out
repnz
and
cmps
mov
sub
xor
add
sbb
enter
push
pop
inc
push
inc
sar
ins
rol
lods
out
daa
lock
inc
call
cld
clc
push
mov
fld
push
sbb
jne
mov
or
inc
mov
or
inc
cmp
xchg
jmp
sti
mov
psubsw
push
rol
lahf
test
xchg
enter
mov
pusha
and
je
xor
retf
jmp
cdq
jecxz
jmp
sub
push
and
mov
retf
mov
sar
xchg
lea
(bad)
lock
push
lea
sub
jmp
les
dec
sbb
or
cmps
jbe
iret
ret
xor
je
ins
pop
xor
push
jmp
test
xchg
sbb
cmp
push
shr
es
mov
fdivr
push
adc
dec
jl
add
mov
and
inc
dec
sbb
and
xor
retf
ins
in
dec
outs
sub
popf
sar
lahf
or
aas
push
xchg
dec
mov
mov
clc
dec
mov
outs
adc
je
in
sbb
inc
stos
or
mov
or
pop
cmp
data16
mov
shl
push
mov
mov
add
movs
int3
sub
push
mov
aas
xor
rol
(bad)
cmp
xchg
inc
into
pop
in
push
pop
setno
pushf
in
pushf
sbb
sub
shl
(bad)
lock
hlt
and
or
(bad)
inc
mov
lea
push
adc
stos
lods
lds
xor
cmp
test
xchg
clc
jp
out
sub
js
aas
jmp
cmps
add
ret
mov
cmp
inc
jnp
mov
(bad)
les
adc
xchg
retf
test
(bad)
out
push
xor
xchg
jmp
mov
repz
adc
jae
jbe
scas
adc
not
and
jae
cmp
popf
pop
xor
cli
iret
add
call
loope
mov
retf
bswap
inc
int
xchg
ins
push
imul
cwde
jo
dec
adc
mov
ret
mov
aad
dec
aaa
loope
jl
cmp
or
inc
iret
xchg
push
xchg
dec
(bad)
std
cmc
jb
mov
jge
mov
sahf
mov
add
mov
(bad)
add
test
dec
xchg
test
xor
lea
mov
inc
inc
cmp
jno
mov
cli
adc
retf
mov
sub
sbb
push
mov
xchg
lea
push
test
cmps
(bad)
xor
addr16
cmp
js
mov
popf
xor
sub
push
out
adc
mov
inc
ret
arpl
dec
pop
js
dec
sub
xor
mov
mov
les
jmp
out
inc
inc
xchg
mov
ret
dec
scas
leave
arpl
and
into
test
popf
fisttp
int3
pop
sub
add
sub
push
inc
int3
adc
shl
neg
dec
dec
leave
fwait
mov
pop
sub
nop
popf
pop
sbb
addr16
push
mov
sbb
cld
jb
pushw
imul
retf
mov
scas
lock
outs
jae
outs
pop
out
je
xchg
lahf
sbb
lock
dec
std
bound
push
fld
js
sbb
mov
mov
cmp
(bad)
push
out
and
cmp
sub
mov
shl
or
int3
pop
addr16
jns
pop
loope
pusha
cmp
jmp
pop
adc
push
paddd
and
pushf
adc
adc
aad
mov
pcmpeqw
cmc
in
ret
enter
retf
cmp
loop
(bad)
adc
loopne
call
cli
int3
popf
jne
rcr
aad
ds
add
dec
xchg
int3
or
out
push
xchg
shl
lods
rol
sub
inc
test
cmps
into
iret
lods
popa
mov
push
push
(bad)
gs
bound
rol
cmp
pop
or
call
xor
xor
sbb
out
or
test
cmp
lods
or
ds
xor
mov
push
lea
test
call
adc
push
je
hlt
imul
in
aad
jno
pop
ins
imul
pop
out
add
lock
fsub
lock
xchg
test
push
neg
sub
cmps
mul
pop
je
aaa
add
(bad)
(bad)
adc
in
add
cwde
fwait
sbb
sbb
in
xchg
mov
sar
mov
mov
inc
je
mov
nop
(bad)
mul
sbb
call
rol
outs
lock
xor
arpl
adc
movups
push
enter
fwait
dec
in
cmps
jae
rcl
pop
mov
pop
xchg
pop
ficom
inc
add
pop
pop
aam
dec
in
stos
dec
ret
and
ins
pop
in
enter
jl
shr
sti
outs
add
mov
mov
inc
push
bound
xor
idiv
imul
imul
sub
dec
fcomp
imul
sub
call
jg
(bad)
dec
inc
nop
fwait
xlat
out
jp
push
sub
jb
and
mov
fisub
les
lahf
jle
call
jno
(bad)
cmp
sub
xchg
rcr
inc
adc
xchg
push
pop
mov
sahf
dec
bound
scas
fcom
mov
or
test
pop
add
cld
stos
xchg
rcl
cmp
stc
push
stos
mov
lds
mov
iret
xor
stos
inc
or
das
sbb
imul
ret
dec
pop
f2xm1
into
call
pushf
mov
lods
(bad)
sub
clc
xchg
cmp
dec
iret
mov
jb
lods
mov
sbb
mov
retf
xor
and
fcmovnu
cdq
ds
dec
sbb
inc
mov
(bad)
test
(bad)
inc
call
push
scas
push
shl
add
jmp
sub
loope
mov
mov
movs
mov
outs
cdq
fmul
cmp
addr16
icebp
xchg
lods
ja
pop
fcmovnb
cs
xchg
fcmovnu
out
adc
xchg
mov
repnz
mov
retf
xchg
pushf
xor
pop
cmps
std
pushf
enter
cli
into
mov
pop
xchg
pop
std
fsubr
xor
jns
mov
lock
in
jle
lea
mov
rcr
cld
pop
jo
dec
or
xchg
xchg
xlat
sub
aaa
cs
(bad)
or
sti
mov
adc
xchg
jmp
mov
adc
jecxz
bnd
icebp
popa
(bad)
ins
push
les
cmp
loop
ret
loopne
mov
fwait
push
gs
jl
push
inc
int3
mov
jecxz
ror
ins
ins
retf
add
add
fsubr
(bad)
repz
xchg
nop
or
and
push
cs
fsub
mov
(bad)
mov
data16
push
aam
push
ins
inc
push
fsubr
mov
mov
test
inc
push
push
hlt
test
scas
ret
je
fcmovne
fadd
xchg
push
fst
cli
jecxz
int3
xor
ins
loopne
cmps
mov
mov
xchg
ret
test
xor
int3
ja
cmps
lods
xchg
pop
pusha
pop
shr
inc
inc
and
ins
mov
and
sub
lea
aam
ins
ficomp
inc
lods
inc
pop
lock
ja
pop
xchg
xchg
adc
dec
pop
cmp
in
mov
rcr
xor
jmp
pop
int
xchg
and
jae
fs
jmp
cmps
lea
mov
cmp
dec
dec
in
pop
dec
jmp
arpl
push
(bad)
lods
imul
cmp
dec
xchg
js
xor
xor
adc
movs
push
sub
dec
stc
scas
jno
loop
retf
movs
pop
sub
add
test
lock
rcr
pop
inc
mul
rol
inc
cs
fs
xchg
daa
xchg
sub
sahf
aaa
lods
adc
outs
adc
mov
int
push
fld
adc
xor
inc
les
ss
jmp
leave
movs
ins
sbb
add
call
cwde
ss
push
push
jecxz
inc
inc
repnz
jae
pop
add
ret
mov
stos
sbb
and
hlt
pop
retf
out
add
into
outs
push
and
lods
jmp
pop
sbb
mov
jmp
mov
sbb
xchg
mov
jns
and
out
jb
pop
adc
xor
add
or
fwait
add
jp
hlt
xchg
adc
or
xchg
(bad)
xchg
int
int
inc
fnsave
jmp
add
mov
or
jae
pop
mov
mov
js
sub
retf
cmp
popf
cmp
stos
pop
sti
pop
fst
fisttp
sub
lods
ja
ret
cmps
push
idiv
push
add
leave
xor
sbb
add
dec
mov
mov
loope
mov
or
cmps
adc
jl
stos
adc
cwde
inc
lds
(bad)
fcmovnu
xchg
cmp
test
pop
mov
ret
pop
push
push
outs
out
mov
mov
cmp
sbb
mov
mov
pop
mov
xor
adc
loop
pop
cs
shl
adc
dec
jp
push
jge
dec
add
ds
pop
cmps
popf
and
cmp
jne
into
scas
push
ret
inc
sub
push
mov
fisttp
mov
pop
push
into
shl
fcmovbe
enter
jnp
and
in
js
xchg
xor
xchg
mov
mov
xor
repz
and
shl
pop
cmp
sbb
mov
and
mov
dec
xor
cld
add
gs
div
aad
dec
jg
vprotb
jl
jl
cmp
jo
dec
fisttp
sub
aam
nop
in
mov
xor
xchg
outs
call
out
enter
sub
cld
(bad)
jne
inc
push
sbb
fs
sub
sub
push
inc
aas
mov
fist
cs
jo
shl
adc
or
hlt
sub
inc
aas
sub
and
xor
mov
dec
call
js
popa
mov
adc
jo
test
push
sbb
out
jge
inc
xchg
push
mov
or
(bad)
push
jg
push
ins
add
xchg
sbb
jmp
add
test
shl
dec
cmp
jecxz
(bad)
push
enter
pop
push
jecxz
call
mov
int
and
int
sub
xor
in
repnz
ja
push
jge
xor
dec
ins
cli
(bad)
cld
push
nop
sbb
loope
movs
add
push
cld
inc
push
pop
cs
and
pop
(bad)
pop
loop
fidivr
xchg
inc
xchg
push
stos
sub
mov
sbb
call
cmp
loopne
add
push
dec
and
out
mov
test
or
movs
dec
cmp
leave
stos
addr16
dec
xor
scas
bound
jl
inc
pop
mov
neg
aad
or
adc
xchg
fisttp
and
add
stos
ret
pop
xor
sub
sub
adc
loop
mov
jmp
jbe
jle
mov
std
and
ror
std
push
outs
xor
add
fisub
or
ret
jg
arpl
jmp
jmp
(bad)
jmp
xlat
adc
sbb
in
(bad)
xor
fadd
add
cmp
mov
es
lods
fwait
mov
div
fisub
call
bound
push
lahf
xchg
xchg
push
push
xadd
xor
enter
outs
dec
dec
or
xchg
xlat
push
cmp
addr16
dec
(bad)
jecxz
push
addr16
or
mov
cld
je
mov
mov
js
(bad)
call
xor
mov
repz
mov
or
add
add
cmps
sub
add
cdq
jae
mov
push
das
pop
cli
scas
sbb
jo
adc
pop
or
test
shl
repz
mov
popaw
jp
(bad)
push
lods
and
shr
popf
cmps
clc
je
pop
cmc
pusha
dec
inc
ins
cmps
pop
mov
nop
mov
outs
fwait
mov
add
pop
mov
jle
adc
xchg
addr16
cmp
xchg
ja
sub
mov
scas
mov
in
pop
push
cmp
push
and
sub
jae
fwait
inc
not
lods
and
retf
mov
lds
rcr
int
or
int3
mov
xchg
sub
in
pop
iret
and
mov
jae
dec
js
loop
jns
xchg
add
in
jo
and
jne
sbb
in
(bad)
xchg
lods
and
data16
lea
repz
adc
outs
jns
push
aad
int
pop
pop
shr
inc
sbb
xor
outs
push
mov
inc
inc
int3
movs
test
mov
dec
scas
pop
pop
stc
add
xchg
rol
int
add
jo
inc
mov
das
push
cmp
adc
jg
test
rcl
test
xor
imul
in
in
pop
jle
xchg
pop
sbb
mov
aaa
ret
cli
std
test
fmul
js
add
adc
(bad)
push
mov
cli
dec
or
daa
cmp
aaa
sub
movs
xchg
enter
pop
mov
inc
adc
xchg
ins
into
sub
sahf
(bad)
fs
ret
and
imul
jne
jne
arpl
pushf
mov
push
pop
lods
das
xor
(bad)
fucomip
xor
popf
xor
mov
cmp
mov
xor
sbb
push
fdiv
cdq
sbb
stc
mov
cmps
popa
addr16
dec
mov
dec
mov
in
sbb
sbb
mov
sbb
xchg
mov
test
out
(bad)
rcr
movs
xor
daa
push
cmp
icebp
(bad)
mov
fs
out
cmp
mov
sbb
mov
mov
inc
push
daa
mov
sbb
(bad)
dec
jne
call
inc
repz
rol
push
mov
inc
aam
and
and
arpl
push
scas
outs
outs
es
shr
dec
in
sub
dec
pop
fbstp
stc
add
popa
aam
cmp
xchg
cmp
push
out
add
pop
fsubr
jl
mov
mov
in
cmp
push
adc
mov
test
movs
pop
or
mov
dec
push
pop
mov
outs
sbb
mov
pop
jnp
jg
ds
sbb
mov
add
ret
shr
repnz
push
cmc
dec
dec
mov
test
sub
clc
and
ds
push
push
inc
adc
and
cwde
adc
out
mov
rcr
cmp
mov
movs
dec
popa
call
stc
int3
sbb
push
xor
int
add
and
sbb
ret
xor
push
inc
add
cmc
sbb
ror
rol
inc
bound
outs
mov
rol
pop
jb
xchg
push
ins
lods
not
xchg
mov
mov
outs
pop
jo
repz
imul
out
inc
in
adc
mov
dec
loopne
mov
dec
mov
clc
jne
icebp
adc
in
pushw
xchg
or
inc
jmp
mov
pop
mov
leave
aaa
push
cmp
int
retf
add
bound
in
call
(bad)
repz
ins
shl
mov
or
repnz
mov
inc
fdivr
rol
adc
or
xor
lods
adc
add
mov
das
push
mov
pop
add
add
rcr
xchg
loope
pop
xor
or
call
jae
jmp
retf
mov
ror
mov
mov
sub
dec
popa
into
cmp
push
fild
sahf
and
xor
or
pop
and
adc
adc
mov
loopne
lock
push
mul
mov
inc
das
push
or
popa
stos
mov
mov
mov
sub
and
icebp
loop
fsubr
lods
cmp
dec
outs
pop
and
pop
sbb
outs
not
or
imul
or
pop
mov
sar
das
cs
pmaxub
aaa
loope
pop
xor
es
sahf
mov
add
cwde
popf
push
iret
mov
loopne
test
out
jno
pop
retf
fadd
mov
mov
test
jle
sub
ja
and
push
sbb
rcr
out
push
aam
pop
pop
out
fs
in
xor
int
push
jnp
sbb
pop
xor
sub
test
fild
jp
cmps
movs
test
fdiv
test
hlt
fist
popa
jle
and
adc
leave
or
adc
pop
adc
les
cmc
or
cmp
loopne
xchg
lods
push
pop
dec
(bad)
jecxz
shl
push
imul
ins
(bad)
xchg
(bad)
mov
dec
out
mov
push
add
mov
ret
xor
pop
push
jae
(bad)
mov
daa
adc
pushf
jno
or
adc
sub
push
pop
(bad)
rcr
sub
cmps
push
aam
xchg
cmp
popa
(bad)
jl
xor
mul
loope
popa
fcom
push
push
xor
xor
push
test
pop
pop
cmps
and
shr
xchg
imul
fucomip
push
fsubr
or
lock
jle
mov
clc
push
push
add
fcmovne
inc
pop
and
repnz
imul
call
mov
imul
sar
adc
push
or
mov
add
push
jnp
rcr
push
inc
dec
outs
lock
dec
xor
aas
sbb
push
jle
outs
push
xchg
out
dec
adc
jmp
xchg
imul
ret
lea
jb
sub
(bad)
or
call
movs
imul
aas
ret
xor
out
xlat
movs
data16
and
push
les
cmp
pop
sub
mov
aas
call
(bad)
ds
test
pop
mov
retf
or
adc
clc
xchg
push
(bad)
push
outs
rcl
nop
test
das
call
popf
mov
jne
adc
sbb
mov
fcomp
sbb
xchg
jns
inc
iret
cdq
adc
jmp
push
int3
jb
cli
inc
sub
push
mov
and
inc
out
scas
cmp
stc
xchg
jp
out
add
(bad)
sbb
mov
cmps
mov
popa
repz
push
and
cmp
stc
jae
mov
shr
(bad)
iret
and
ja
cmp
mov
sahf
fst
inc
cmp
sbb
xchg
cmp
push
addr16
bswap
dec
add
mov
out
stos
adc
sub
xchg
mov
dec
xchg
inc
into
test
repz
cmps
in
test
ds
xchg
push
int3
iret
xchg
js
xor
in
mov
and
fldenv
mov
fldl2t
mov
js
sub
ficomp
stc
or
jl
dec
int3
ins
outs
xor
cwde
test
out
xor
xchg
pop
jmp
or
in
addr16
je
sub
add
scas
jmp
or
push
sub
sbb
leave
xor
sub
cmp
shl
fisttp
push
ja
add
xor
xchg
and
inc
mov
nop
push
pop
ror
mov
das
push
jo
nop
cmps
xchg
aam
sub
or
or
cmps
imul
cmp
std
fs
adc
mov
std
in
daa
pop
in
ret
shr
dec
mov
push
sbb
sbb
popf
sbb
sbb
mov
fmul
les
cmp
push
int3
loopne
mov
and
pop
int3
cld
or
jmp
dec
aad
xor
std
scas
inc
mov
pop
jb
inc
xchg
cmp
push
xor
sti
mov
inc
mov
shl
inc
pop
mulps
and
xchg
or
add
aam
jmp
and
rol
pop
retf
(bad)
call
sub
jg
out
xchg
add
lods
outs
pop
jmp
mov
cld
pusha
ror
pop
hlt
pop
mov
adc
adc
adc
xor
jle
inc
pop
mov
xor
outs
shr
pop
jbe
std
cmp
call
scas
add
cmp
adc
and
ins
fistp
mov
jmp
lods
xchg
adc
inc
cwde
sbb
dec
call
adc
jg
cmp
mov
sbb
dec
inc
ret
adc
nop
cmps
ret
daa
and
sahf
or
mov
mov
sbb
push
xchg
cld
push
pop
fistp
(bad)
dec
jmp
lds
out
cmp
icebp
add
(bad)
xor
adc
xchg
mov
xlat
aas
outs
inc
pop
out
xchg
aam
push
jo
dec
sbb
sub
adc
call
ins
inc
repnz
imul
repz
push
cmps
sub
pop
clc
cmps
stos
push
inc
test
add
mov
xchg
dec
ror
xchg
imul
jp
mov
fisttp
div
sahf
mov
mov
cmp
ret
test
mov
leave
push
sub
inc
push
and
push
dec
jmp
(bad)
aaa
or
ja
out
cwde
test
int
jmp
cmc
pop
jl
mov
mov
add
shr
add
inc
int
sub
cmps
and
dec
sub
movs
nop
cmps
or
mov
dec
push
cmp
stos
scas
mov
fdiv
dec
(bad)
fst
loope
repz
fwait
test
aaa
stos
aas
dec
xchg
inc
rcl
cmp
outs
lods
out
fnstsw
outs
not
mov
pop
mov
fucomi
aad
pop
xor
int
(bad)
sbb
dec
pop
hlt
maskmovq
test
add
call
loop
add
(bad)
cli
mov
push
mov
pop
js
icebp
nop
cs
and
dec
or
popa
clc
pop
xor
add
adc
pop
int3
fsubr
sbb
aad
xor
je
lods
pop
mov
xchg
xor
cmps
movs
and
hlt
pusha
sub
xor
jbe
push
jb
ret
repz
sbb
dec
into
and
mov
sbb
in
and
cmp
in
icebp
mov
clc
test
pusha
mov
pop
xor
repnz
fnclex
add
je
pushf
int3
or
or
(bad)
int3
inc
jg
das
(bad)
push
add
xchg
jl
in
and
jne
std
(bad)
fcom
ds
ins
cmps
aas
jbe
mov
or
xchg
jae
xchg
cld
adc
mov
sub
xchg
or
loop
jo
lock
bound
mov
mov
add
xchg
push
sti
movs
push
pop
iret
inc
jmp
xchg
aam
clc
movs
jg
inc
xor
xchg
pop
out
mov
movs
cmc
scas
xor
pop
pop
inc
retf
aaa
(bad)
in
push
(bad)
in
push
sbb
out
mov
jb
cmp
ins
sar
scas
mov
sbb
add
rol
mov
and
repnz
inc
xchg
pusha
mov
push
inc
imul
ja
cdq
lahf
lock
mov
sar
(bad)
pop
fwait
and
mov
cmps
dec
mov
outs
jle
sbb
adc
dec
xor
add
jp
lods
push
mov
out
ja
push
out
dec
xchg
movs
push
mov
in
dec
icebp
out
aad
push
mov
jmp
mov
and
or
fwait
clc
adc
nop
aam
xlat
jns
pusha
push
or
inc
clc
mov
outs
inc
push
sub
(bad)
adc
push
movs
xchg
pop
ficom
shl
mov
dec
xchg
xor
bound
pop
xor
fnstsw
ss
js
inc
imul
popf
adc
xchg
mov
fistp
mov
jmp
sar
mov
mov
xor
ins
fidivr
adc
aad
and
fstp
add
mov
push
inc
ss
jns
push
and
shl
rcr
pop
xchg
imul
push
or
loope
lahf
xor
pop
pushf
lea
pop
ins
mov
fstp
sub
mov
(bad)
aad
sub
int3
cmp
movs
daa
movs
push
push
fild
dec
pop
rcl
fimul
mov
xchg
push
sbb
(bad)
call
mov
and
paddw
fstp
in
adc
in
pop
lock
lea
aaa
jbe
and
call
scas
loope
out
jp
pop
lock
push
inc
in
push
or
cmp
adc
outs
jmp
mov
enter
lahf
inc
push
popa
and
or
xchg
cmp
sub
adc
out
sbb
pop
push
std
xchg
out
xchg
jo
in
jmp
jno
dec
mov
cmps
imul
add
fcom
xor
mov
pop
push
cmc
xor
test
frstor
mov
dec
(bad)
xor
cli
dec
dec
push
mov
cmps
scas
rcl
xchg
dec
pop
xchg
jb
sbb
pop
les
push
inc
ss
leave
(bad)
mov
outs
mov
adc
out
je
es
mov
pop
call
jecxz
jge
cmps
cmp
cmp
lea
(bad)
into
push
into
jne
call
mov
cmp
sbb
xor
enter
mov
int3
dec
dec
xchg
clc
loop
dec
pop
fistp
test
mov
mov
cs
ror
xchg
pop
sub
or
mov
sbb
xchg
ret
cli
mov
aad
cmp
icebp
rcl
pop
icebp
int
sahf
sahf
aad
sahf
(bad)
sahf
daa
movs
shl
in
or
push
test
mov
pop
jge
arpl
fcmovnu
inc
(bad)
(bad)
neg
push
cmc
and
call
fwait
adc
movs
mov
mov
adc
dec
cdq
in
leave
sub
xchg
jbe
pusha
mov
mov
mov
xchg
repz
sbb
leave
(bad)
xchg
sub
cmp
js
test
fst
dec
stc
ror
aam
ds
xor
push
cmovle
sub
lods
fndisi(8087
and
pop
pop
sub
mov
test
jb
nop
mov
sbb
jmp
pop
stc
sub
cwde
sub
shl
and
mov
ret
jle
mov
cmp
xchg
call
xlat
adc
mov
or
sbb
sub
mov
mov
push
loopne
dec
jmp
neg
add
push
hlt
dec
int3
push
cmp
popf
xchg
stc
or
sbb
mov
pop
rcr
cmp
xor
sti
xor
cmps
fs
pop
pop
fadd
cmp
jo
adc
movs
adc
add
les
mov
scas
cmc
xlat
imul
icebp
pushf
sub
inc
mov
lds
cmp
les
inc
retf
xchg
push
dec
js
jmp
fistp
xchg
mov
pop
mov
sbb
int3
iret
ret
fdiv
mov
cmp
lahf
push
std
sub
loop
mov
lods
sbb
mov
push
xor
adc
clc
aas
leave
std
jne
xchg
ins
mov
test
div
xchg
push
mov
aaa
imul
(bad)
ficom
jb
imul
nop
fwait
mov
add
jge
stos
(bad)
ss
ja
or
scas
jmp
stos
fcomp
into
lock
mov
mov
stc
nop
out
fadd
cmps
clc
pop
mov
clc
sbb
fwait
aam
rcr
jo
xlat
mov
rol
call
xor
lods
leave
nop
and
adc
out
adc
ret
imul
inc
ror
inc
push
pop
cdq
adc
xlat
inc
xchg
xor
inc
mov
inc
add
daa
mov
sub
data16
push
mov
add
gs
adc
xchg
add
jmp
xchg
mov
daa
in
mov
das
push
mov
and
ror
push
ds
sub
(bad)
fiadd
ret
outs
jne
add
iret
cmp
dec
retf
xchg
xor
pop
add
adc
shrd
(bad)
jbe
inc
xor
mov
xor
xchg
push
lods
jne
cmps
pop
jmp
in
dec
jl
and
scas
leave
test
or
(bad)
fisubr
leave
imul
pop
pusha
popf
(bad)
sbb
cmp
or
out
mov
adc
sahf
xchg
xchg
out
sahf
mov
push
shr
pushf
pop
lock
call
je
sbb
hlt
inc
inc
pushf
xchg
jmp
stc
add
test
and
mov
imul
std
lods
ja
int3
das
dec
mov
mov
cdq
mov
cmp
jl
adc
les
sbb
cmp
push
js
pop
scas
popa
xchg
into
sub
push
stos
mov
mov
repz
lahf
shl
jnp
rcl
test
retf
ss
pop
xor
sub
adc
pop
push
and
mov
movs
or
xor
jmp
jl
push
shl
pop
sbb
add
xor
cmp
out
bound
rol
fcomp
pop
sbb
call
inc
aam
(bad)
(bad)
retf
mov
adc
and
or
jae
mov
in
sub
sbb
sub
xor
mov
jb
pop
scas
idiv
icebp
pop
call
jle
dec
sub
mov
sub
bound
jmp
std
xchg
inc
ss
fs
xchg
(bad)
xchg
pop
or
mov
enter
neg
pop
dec
xor
mov
ins
push
push
mov
cwde
vmaxsd
stos
xor
clc
push
adc
cli
cmp
(bad)
dec
pop
or
xadd
and
jnp
leave
ds
cld
xor
mov
lods
and
aam
xchg
add
aas
sbb
add
or
nop
test
jl
in
xor
jp
jl
and
inc
cmp
(bad)
sbb
aam
inc
jno
(bad)
addr16
mov
dec
mov
and
fild
lods
jge
xor
scas
xchg
xchg
xchg
adc
cmp
xchg
stc
jbe
mov
add
jge
addr16
retf
sub
call
inc
sbb
lods
mov
sub
or
lods
sub
lock
(bad)
and
jbe
push
js
movs
fs
dec
rcr
cmp
xlat
add
push
mov
shl
std
mov
jae
data16
imul
push
add
ret
and
das
test
sbb
dec
(bad)
daa
fwait
cmp
fimul
mov
inc
sub
mov
pushf
mov
or
cdq
dec
inc
out
pop
pop
push
in
cmp
out
mov
movs
(bad)
sbb
ins
mov
push
xchg
std
sbb
pop
leave
cmp
neg
sbb
jge
mov
xchg
jb
dec
cmp
xchg
stos
ins
sub
dec
ret
(bad)
aad
pusha
mov
shr
pop
and
mov
movs
cmp
adc
das
stos
test
adc
xchg
jmp
bound
inc
and
aad
adc
outs
sar
repnz
mov
fist
cmp
in
ficomp
mov
inc
lea
les
aad
jb
in
and
push
push
movs
add
out
sub
push
dec
(bad)
push
sub
mov
aaa
mov
retf
pop
cli
xchg
ffreep
xchg
rcr
xor
or
ja
jnp
aas
dec
enter
rsqrtps
xor
mov
push
or
imul
imul
loopne
fcom
pop
lea
xlat
in
and
or
sbb
mov
rol
mov
cmp
scas
loop
clc
inc
and
mov
xlat
test
mov
jae
aad
mov
or
je
(bad)
mov
cmp
cmp
je
outs
cmc
sub
call
sti
imul
and
ss
and
mov
xchg
xlat
inc
outs
mov
loopne
xor
mov
das
sahf
cmp
jae
and
aam
lock
sub
rol
sub
lock
data16
ins
xchg
pop
pop
lahf
sbb
mov
push
cmps
dec
setns
cmc
dec
mov
ret
loop
addr16
retf
test
jnp
lds
sbb
outs
adc
add
mov
dec
add
aam
jmp
fisubr
movs
xchg
(bad)
jnp
sub
in
inc
add
mov
cmp
hlt
dec
xchg
jns
push
inc
mul
add
adc
les
fisttp
cli
sbb
xor
push
fdiv
mov
mov
sub
xor
test
cli
pop
outs
add
xchg
popa
push
cmp
popa
pop
(bad)
int
xor
fucomi
add
inc
retf
(bad)
pop
xchg
inc
pop
sti
mov
push
fwait
mov
rcl
dec
inc
push
xchg
adc
mov
adc
adc
(bad)
or
xor
xor
sbb
icebp
mov
jecxz
push
push
fstp
fidivr
vpmacssww
jmp
dec
push
dec
pusha
sub
movs
ror
sbb
(bad)
xchg
mov
jbe
mov
adc
pop
push
adc
jae
and
mov
jb
pop
jl
add
sar
out
jmp
inc
cmp
out
or
push
pop
lea
scas
mov
mov
sub
cwde
aas
sub
int3
sub
iret
lahf
inc
cs
pop
sar
mov
jb
pop
(bad)
sbb
pop
dec
sbb
inc
sub
into
mov
pop
imul
add
in
and
mov
stos
add
xlat
shl
pop
mov
inc
sub
mov
pop
push
bound
fcompp
shr
mov
fldcw
mov
in
in
push
xchg
mov
aad
dec
fadd
mov
gs
sbb
out
pop
push
aaa
cmp
sti
dec
or
dec
into
xchg
xor
cmp
inc
aas
movs
xchg
fisttp
add
mov
ror
in
ds
or
out
mov
mov
mov
ss
aaa
retf
sub
mov
dec
(bad)
xchg
jmp
fild
xchg
sub
cmp
add
mov
adc
jno
sbb
test
test
retf
pop
aad
ja
aam
punpckhwd
mov
into
inc
sub
and
sub
cmp
call
inc
fwait
jo
arpl
outs
pop
lea
add
jmp
shl
mov
enter
lds
xchg
dec
data16
adc
jmp
mov
push
pop
mov
aaa
dec
inc
lahf
mov
add
in
leave
sub
xchg
fstp
lea
lea
test
sub
bound
dec
loopne
mul
mov
pop
std
mov
repnz
hlt
es
inc
mov
fidiv
pop
ins
scas
and
test
inc
bound
dec
int3
push
mov
out
movs
push
in
dec
pop
sbb
mov
cdq
adc
fistp
sbb
jecxz
mov
stos
(bad)
icebp
jae
int
adc
cmp
mov
push
push
jb
jne
push
sub
fdivr
mov
sar
pop
(bad)
inc
sbb
adc
ins
cwde
adc
inc
aad
mov
in
pusha
inc
or
ja
sub
repnz
mov
test
ficomp
cs
cmp
(bad)
fldenv
jmp
(bad)
mov
inc
jne
outs
popf
and
aam
and
mov
xchg
fidivr
loop
test
stos
and
cmps
daa
lock
shl
stc
mov
adc
sbb
jp
dec
jo
cwde
cmps
clc
inc
movs
push
sti
ins
sbb
xchg
pop
xchg
inc
imul
scas
push
cld
out
sub
push
int
retf
imul
mov
push
mov
push
loopne
retf
out
mov
push
mov
push
add
ins
lock
push
stos
in
mov
and
(bad)
sbb
or
and
repz
std
movs
add
bound
adc
push
js
repz
xor
in
jb
dec
sub
xchg
mov
sbb
dec
aaa
and
xor
call
and
pop
hlt
dec
cdq
sbb
sub
hlt
ret
xor
xchg
inc
aas
cs
mov
add
aas
sbb
push
and
imul
jmp
adc
xchg
mov
add
pop
lods
in
push
jne
repnz
fucomi
in
lock
cmp
in
xchg
push
call
fmul
xchg
(bad)
out
xchg
sub
xor
adc
fst
mov
out
rol
std
in
ins
gs
fcom
(bad)
retf
enter
repnz
pop
into
or
imul
stos
aam
repz
mov
push
fs
es
leave
xchg
ror
jbe
std
lods
mov
leave
aaa
test
iret
push
mov
lods
jge
jns
sub
cld
dec
mov
pop
pop
or
pop
jmp
sbb
mov
scas
jne
retf
rcl
xchg
mov
test
pop
or
fisttp
or
mov
rol
in
and
push
and
cld
pop
je
or
and
movs
mov
outs
sahf
sub
pop
add
mov
jg
push
mov
mov
jmp
pop
cmp
outs
jecxz
xor
in
or
fs
push
cmps
cmps
xor
jo
push
inc
movs
ds
xor
repnz
leave
in
mov
xchg
(bad)
in
or
sub
cmp
inc
push
call
sahf
dec
jmp
add
sbb
(bad)
fidivr
and
cmc
mov
add
stos
xchg
push
sbb
ror
inc
push
push
pop
mov
out
push
inc
in
mov
in
cmp
mov
or
movs
enter
xchg
sbb
aam
sbb
lahf
pop
aad
jg
jmp
mov
push
test
mov
dec
sbb
sti
cmp
ins
je
icebp
fadd
movs
mov
pop
push
popf
(bad)
dec
les
or
mov
push
aad
int
movs
mov
jmp
mov
xchg
mov
mov
or
imul
pop
inc
std
and
mov
mov
fadd
mov
mov
(bad)
call
and
ret
cmp
cmps
push
sub
je
jl
xchg
or
into
add
mov
test
(bad)
ror
into
dec
mov
into
inc
div
aaa
stos
inc
push
cmp
ins
fnsave
add
and
iret
cdq
call
mov
outs
push
mov
popf
stos
adc
inc
sub
cmp
cmp
adc
or
test
hlt
cld
in
sub
dec
push
push
sbb
jge
dec
cmc
sub
cmp
cmp
pop
sub
repnz
imul
out
xor
mov
cdq
dec
sbb
test
mov
add
movs
ror
(bad)
xor
enter
or
int3
pop
loope
aam
sbb
pop
or
ret
ret
dec
stos
push
(bad)
cdq
xchg
popa
jnp
adc
cmps
push
mov
call
call
ror
retf
cmp
push
mov
in
push
(bad)
and
pushf
aam
cmp
and
retf
push
aad
push
popf
xor
mov
sti
pop
mov
in
push
cwde
mov
in
xor
fdiv
jmp
ins
hlt
or
cmp
mov
push
xchg
and
nop
and
inc
imul
ret
and
movs
outs
and
out
mov
push
xchg
mov
sub
mov
retf
cwde
int3
and
cmp
sbb
loope
jmp
or
daa
xchg
xchg
enter
scas
ins
add
and
movs
jmp
mov
fadd
mov
mov
mov
fs
mov
jb
mov
cdq
(bad)
add
rol
rcr
mov
jle
int
add
push
cmps
adc
dec
pop
or
js
mov
mov
stos
dec
test
loop
jns
push
mov
cli
mov
pop
ja
icebp
cmp
push
call
test
mov
imul
pop
xchg
out
pop
imul
lods
int
fcmovu
retf
xchg
push
cmp
hlt
jecxz
adc
push
push
and
cmps
je
fdivr
lds
xchg
outs
(bad)
sub
adc
pmuludq
adc
aas
sar
mov
xchg
adc
enter
dec
dec
pop
mov
fwait
pusha
sbb
stc
fs
jg
cwde
mov
int
sub
and
mov
cmp
stos
popa
dec
hlt
mov
mov
xor
int
int
iret
mov
lahf
or
inc
mov
pop
out
mov
setl
frstor
xchg
les
push
std
ins
bound
cmps
xchg
xchg
mov
outs
pop
adc
and
jb
xor
test
xchg
sbb
jg
add
xor
cmp
mul
repnz
mov
scas
xor
jmp
mov
scas
aad
and
jmp
add
pop
adc
xchg
pop
push
popf
arpl
mov
dec
nop
inc
adc
mov
mov
sub
shl
ja
sbb
scas
shl
sahf
push
adc
lods
mov
cwde
clc
scas
in
mov
(bad)
loope
push
mov
dec
lods
jne
mov
popa
dec
push
stos
add
push
fdiv
cdq
test
call
sub
mov
ja
xor
jne
rol
xchg
or
fimul
mov
int3
ss
inc
sub
fwait
test
dec
cmp
loop
and
loop
out
test
inc
jmp
jns
pop
inc
inc
push
add
(bad)
sub
stos
push
xchg
add
cld
aad
adc
push
mov
stos
retf
xchg
pushf
js
loope
or
into
cmp
int
jmp
icebp
pop
enter
jno
stos
mov
inc
dec
lds
rol
pop
add
jle
sbb
rol
push
pop
push
push
push
pusha
cmp
jo
lea
sub
push
mov
cmp
das
mov
rcl
jnp
cmp
call
dec
in
push
cwde
adc
test
mov
test
ror
xor
xor
xchg
rep
rcr
sub
scas
push
sub
fs
data16
push
int3
leave
add
cmp
jle
int3
ins
jecxz
mov
inc
jno
sbb
mov
cmp
sti
jae
cwde
mov
xchg
inc
mov
nop
sar
fnstsw
les
inc
sub
les
lahf
mov
sbb
sbb
inc
dec
add
js
icebp
pusha
push
ins
fsub
push
sub
js
jb
cmps
dec
cmc
iret
mov
popf
ins
jae
jle
push
xor
dec
cmps
sbb
(bad)
dec
retf
pop
bound
les
sub
dec
test
in
int
je
pop
xchg
sub
imul
mov
jecxz
repnz
push
mov
xor
inc
sub
cmp
push
mov
loopne
dec
movs
popf
cdq
cmps
ins
add
shr
imul
outs
neg
mov
in
into
ss
ins
das
out
add
pop
stos
and
jge
and
inc
mov
push
sub
into
inc
scas
sub
jmp
fisttp
xchg
sub
pusha
and
test
mov
dec
out
xor
cmp
add
or
sub
ds
aam
xor
dec
shl
in
aam
cs
jo
inc
pop
xor
adc
and
jg
pop
pop
lahf
or
jae
call
ret
dec
aam
enter
sub
je
push
fxtract
dec
push
pop
xor
stos
push
imul
test
jle
enter
call
out
(bad)
dec
sbb
popf
loop
stos
loop
adc
push
icebp
mov
mov
sub
scas
sub
fiadd
adc
add
and
shl
fild
jbe
adc
fadd
and
stc
fs
in
pop
or
xor
test
push
shl
lock
dec
fidiv
ret
mov
cld
scas
xchg
pusha
xor
cdq
mov
jns
ror
repnz
pop
mov
push
or
xlat
push
pop
loop
repnz
out
in
movs
xor
xchg
add
jmp
cwde
ficomp
xchg
dec
call
ss
mov
jl
mov
loopne
jbe
mov
jge
lea
lds
in
jo
jnp
out
aam
shr
cli
add
retf
cmp
sub
lods
push
pop
sbb
int3
aad
push
cmc
jnp
jno
dec
sub
mov
push
or
mov
rcr
xchg
mov
or
xchg
xor
dec
popf
add
jo
imul
imul
xchg
aas
inc
cmp
jl
pushf
mov
inc
imul
cli
adc
or
cwde
sar
out
sbb
pop
mov
pop
or
test
inc
stos
xor
dec
outs
xchg
inc
inc
je
add
dec
inc
fldenv
jp
mov
adc
(bad)
mov
fild
jnp
into
fist
mov
out
fs
or
imul
inc
mov
fadd
mov
data16
jg
int3
inc
popf
lea
enter
xchg
or
ja
pusha
push
cmc
mov
or
je
aam
pop
mov
inc
sbb
dec
loopne
jbe
sbb
dec
mov
popf
pop
lods
(bad)
add
cwde
push
xchg
js
loopne
(bad)
ds
jmp
out
jmp
loope
in
pop
mov
and
(bad)
fsubr
mov
jno
cvtpi2ps
sbb
dec
pop
mov
aad
nop
or
mov
cmp
cmp
mov
fadd
mov
lods
cwde
call
dec
sahf
adc
adc
add
in
sub
out
fisttp
out
mov
mov
aas
sbb
mov
jne
out
adc
xor
sbb
xchg
xlat
xor
jmp
stc
push
leave
dec
jmp
test
jmp
repz
stos
inc
pop
pop
cmp
shr
test
clc
rcr
add
fist
mov
dec
jmp
dec
lods
ja
xchg
xor
aas
fild
inc
or
popa
(bad)
loop
test
sbb
scas
and
mov
lds
push
in
fsubr
sbb
push
popf
lds
outs
push
mov
mov
pop
xor
and
sub
adc
int3
retf
andps
and
cli
xchg
aad
mov
pop
es
popf
mov
call
mov
or
pusha
retf
cmp
das
mov
out
imul
out
push
cmp
mov
mov
xor
jle
nop
test
mov
inc
imul
sbb
cmp
mov
dec
sahf
push
sub
pushf
mov
test
pop
std
xor
push
xchg
xchg
aaa
ss
jge
nop
and
push
scas
fcomp
add
pop
ss
xor
xchg
jp
mov
cmp
inc
xchg
push
pop
(bad)
das
add
fnstenv
and
or
and
add
mov
push
in
into
jmp
add
sub
loop
adc
lahf
sub
xor
sbb
aaa
repnz
js
adc
(bad)
pop
pop
test
mov
add
push
ss
jns
rcl
(bad)
ret
xchg
sbb
or
sub
add
fistp
pusha
xchg
inc
std
(bad)
imul
imul
mov
jl
out
sub
xor
aas
jg
pusha
fldenv
mov
jbe
sbb
jmp
sub
and
js
add
ret
movs
xchg
pop
xchg
ja
mov
pop
push
push
jmp
repz
iret
mov
sub
call
rcl
mov
cmp
das
ret
scas
xchg
sti
stos
xlat
push
jle
pop
mov
or
push
pop
cdq
ins
jb
repz
aas
test
cmps
cmp
or
adc
test
lods
or
mov
push
jns
fwait
sub
add
repnz
cmp
sbb
icebp
or
push
cs
adc
rol
enter
sbb
xchg
jo
loope
pop
xor
in
das
out
jnp
xor
mov
ja
cli
push
sti
fisubr
jl
fwait
or
js
jge
xor
adc
adc
adc
cli
pop
scas
ss
push
cmps
out
sbb
adc
mov
fld
sti
add
mov
int
lahf
mov
pop
fcomp
pop
mov
mov
popa
cmp
xor
xor
dec
pop
sbb
in
fwait
das
pop
jmp
outs
das
fwait
or
or
lea
xchg
out
repnz
fnstcw
xchg
inc
fdiv
scas
clc
test
out
cli
add
hlt
mov
push
retf
cs
jne
dec
bound
add
or
stc
cmc
dec
aaa
dec
xchg
mov
popa
adc
std
(bad)
aam
iret
ja
mov
and
mov
repz
aaa
lahf
into
or
sbb
jl
sub
outs
out
dec
in
or
cdq
sbb
ret
xchg
mov
bound
aaa
sbb
bound
xor
vmwrite
cmps
daa
fist
push
adc
adc
out
es
jo
call
das
aam
or
adc
mov
jle
or
aam
(bad)
popf
push
or
add
mov
iret
in
aas
adc
test
jae
test
test
in
lods
sub
fmul
push
jne
(bad)
sub
rcl
fdiv
xor
cld
dec
movs
push
sbb
mov
sahf
mov
cmps
pop
popa
js
xor
(bad)
fcom
repnz
test
mov
fmul
mov
repz
xor
ins
push
mov
ins
adc
lock
fadd
in
xor
inc
adc
hlt
mov
add
cmp
inc
push
in
pusha
lds
cmp
ja
test
mov
pop
push
push
ds
and
iret
add
inc
adc
pop
push
mov
test
aam
mov
pop
jmp
cwde
clc
ja
je
jbe
dec
xchg
cld
cmp
clc
pop
call
xor
cmp
adc
pop
fcom
cmp
xchg
retf
gs
js
mov
out
dec
cwde
iret
rcr
das
add
mov
std
aad
mov
xchg
dec
dec
and
cmp
adc
push
and
in
(bad)
or
pop
dec
lds
std
push
add
aad
dec
adc
fs
mov
xor
mov
icebp
cmp
pextrw
sub
or
inc
sar
jne
adc
push
dec
mov
icebp
loope
mov
mov
inc
sti
cli
bound
sub
ja
icebp
xchg
popa
ret
mov
hlt
addr16
cli
push
cmp
fxtract
or
ja
mov
nop
pop
cmp
add
jo
jb
das
pop
push
outs
and
stos
imul
hlt
clc
(bad)
pusha
repnz
xor
cmps
sbb
jl
cmp
aaa
sbb
inc
loopne
mov
mov
cmp
js
mov
xor
xor
or
fnstcw
xor
fnstcw
pop
cmp
push
pop
fmul
shl
out
push
icebp
pop
cdq
daa
jg
dec
adc
retf
sub
mov
mov
cdq
retf
aad
xchg
sub
sub
ds
fisub
add
imul
jp
xchg
jae
add
fild
xor
hlt
xor
jne
cmp
push
pop
pop
mov
in
sbb
xchg
and
pop
mov
pop
or
sub
rcr
out
inc
inc
int
cmps
jns
iret
jb
repz
mov
xor
(bad)
dec
dec
mov
out
ins
cdq
add
mov
(bad)
loopne
loope
push
mov
(bad)
stc
shl
mov
stc
adc
in
jg
lock
mov
retf
xchg
adc
lahf
mov
sti
neg
fist
jnp
and
or
cwde
and
mov
shl
and
loope
out
inc
xchg
sahf
jmp
pushf
mov
scas
cmp
mov
pop
xchg
push
jle
mov
loope
push
push
jle
and
call
jg
out
repz
sub
inc
pop
ja
test
ins
imul
popa
adc
pop
pushf
mov
test
ffree
push
out
sbb
mov
in
lds
loopne
out
in
and
push
mov
movs
ror
cmp
outs
out
sub
xor
aam
ja
or
jmp
test
test
std
dec
lock
mov
iret
not
xchg
jo
jmp
inc
shl
sbb
sub
cmp
aaa
push
hlt
mov
call
add
dec
loopne
cmps
pop
ret
out
fld
test
es
jg
stos
aas
add
mov
or
pop
mov
jo
or
push
into
(bad)
in
fwait
cmp
inc
cmp
ja
pop
test
or
jl
sub
dec
mov
mov
jp
movs
mov
pop
mov
in
sahf
mov
icebp
and
push
les
paddw
cmp
cdq
jno
ret
das
les
pop
adc
lods
xchg
dec
out
push
and
cmp
sub
ins
mov
and
jp
movs
mov
pop
adc
fcomp
dec
inc
sub
je
pop
cmp
push
ds
mov
jle
lahf
les
adc
ja
or
pusha
hlt
adc
sbb
sbb
ss
mov
bound
xchg
xor
add
xchg
sti
mov
das
xchg
mov
imul
sub
lds
jnp
xor
inc
bound
clc
sub
imul
jp
mov
xlat
pop
jg
mov
push
ds
jnp
xlat
inc
mov
daa
cmc
pusha
jge
jno
in
jmp
into
push
repz
inc
push
ret
test
cmps
fistp
push
or
(bad)
js
push
jmp
sub
jae
mov
aad
inc
push
inc
and
add
jno
and
popa
ret
(bad)
cmc
cmps
adc
pop
inc
into
lahf
rcr
mov
inc
cmps
dec
mov
pop
lods
vpshlw
or
test
(bad)
fldcw
aam
mov
inc
pop
movs
out
pop
pop
cmc
ret
or
mov
mov
mov
shl
rol
out
sub
or
pop
pop
mov
loopne
fs
inc
retf
retf
and
(bad)
pop
and
mov
add
ja
(bad)
cmp
fild
repnz
fs
rcl
cld
in
ficomp
pop
inc
mov
xor
ja
out
out
cdq
adc
mov
pop
xchg
or
iret
jp
jmp
add
popf
je
dec
lahf
cmp
mov
sub
mov
stos
and
lahf
fstp
sbb
sar
stc
inc
clc
xor
push
inc
and
pop
loopne
shl
push
hlt
cwde
mov
xor
rep
mov
sub
stos
js
adc
inc
neg
mov
mov
xchg
lods
inc
add
imul
in
xchg
retf
adc
out
jmp
aaa
mov
sub
pop
push
test
xchg
sub
dec
imul
mov
shl
nop
outs
loope
pop
icebp
stos
loopne
fcom
out
lock
jbe
dec
sub
add
sbb
stos
aas
pop
pop
push
lahf
jo
jnp
sbb
jae
push
pop
out
ss
xor
xchg
(bad)
fnsave
mov
push
sbb
adc
mov
mov
movs
iret
push
pop
cmp
jge
add
cmp
stos
arpl
call
and
pop
cmps
and
adc
jle
mov
or
push
aam
call
inc
pop
push
xchg
xor
jg
jmp
ins
(bad)
adc
sub
pop
cmps
inc
xlat
inc
cmc
jmp
dec
pop
test
mov
(bad)
pushf
xchg
cmp
in
or
adc
jmp
xchg
inc
inc
mov
bound
cmp
adc
mov
int
or
movs
sahf
sti
fst
or
mov
xchg
fisub
mov
xlat
xchg
xchg
imul
or
repz
sbb
inc
cmp
(bad)
cmc
sub
mov
call
test
shr
pusha
leave
scas
inc
inc
enter
call
cmp
test
(bad)
cmps
lock
inc
mov
clc
shl
jmp
jle
out
pop
xlat
out
inc
lods
and
push
sbb
adc
sar
enter
cli
cmps
xor
xchg
inc
pop
ins
mov
sbb
cmc
xchg
out
sub
out
mov
aad
les
xor
aaa
mov
daa
mov
mov
and
outs
outs
jns
jecxz
test
gs
movs
sub
mov
xchg
pop
sar
inc
call
enter
mov
inc
or
cs
loopne
jle
retf
nop
stos
or
xchg
mov
enter
add
out
fidiv
adc
xor
mov
les
push
dec
test
or
ret
xor
out
dec
sub
push
cmps
cmp
adc
and
outs
rcl
and
outs
scas
cmp
hlt
call
push
dec
dec
cld
lods
gs
int3
leave
push
jg
mov
fild
stos
push
mov
xchg
das
pop
pop
ja
dec
out
pop
inc
xchg
jo
outs
(bad)
push
mov
retf
ds
mov
mov
sbb
aam
cmp
mov
cs
cmps
adc
mov
jne
cs
add
pushf
xor
jne
add
pop
and
ror
fnstsw
(bad)
imul
fmul
push
sti
es
xchg
repz
sbb
movs
(bad)
jp
push
sbb
and
ret
sahf
xchg
mov
dec
aas
pushf
adc
mov
pop
cmp
loopne
clc
xchg
gs
mov
dec
retf
pop
inc
movnti
inc
mov
push
cmp
call
adc
jnp
or
outs
dec
pop
dec
add
dec
idiv
add
add
mov
adc
mov
fdivr
dec
mov
mov
push
icebp
rcl
test
imul
aaa
inc
shr
loopne
mov
jge
pop
and
jae
xchg
jmp
fisubr
pop
cmps
add
imul
cmps
nop
push
js
push
les
xchg
repnz
rol
in
nop
jnp
pop
int
(bad)
(bad)
jg
lahf
ret
pop
int3
je
mov
pop
dec
jo
hlt
jle
cmp
adc
or
fdiv
test
outs
ret
in
add
jp
loop
imul
jo
adc
lds
popa
mov
daa
mov
adc
je
fmul
call
pusha
imul
sbb
mov
pop
das
and
pop
inc
pushf
jecxz
fsubr
sbb
ins
mov
inc
shr
jo
mov
enter
cld
push
iret
(bad)
cmp
fidivr
fidiv
pop
mov
movs
dec
mov
loope
pop
sub
(bad)
test
mov
call
fild
fs
je
leave
idiv
enter
pop
xchg
cmc
push
repz
jns
je
loop
pop
jmp
pop
cmps
mov
cmp
pop
loop
(bad)
jecxz
and
push
jo
sbb
(bad)
pop
jl
jp
mov
retf
jle
push
sub
push
fild
xor
or
ss
(bad)
shl
cmp
add
dec
hlt
mov
nop
ds
ror
aas
fstp
stc
icebp
imul
sar
sbb
or
fldcw
cwde
jne
loopne
sbb
cmp
movs
fs
loop
or
push
sar
xor
jg
inc
packssdw
cmp
inc
mov
popf
sti
jmp
push
or
or
das
fwait
cmp
sub
push
(bad)
ss
sbb
test
test
repnz
test
fwait
cld
jp
retf
mov
pop
adc
lock
mov
xor
movs
or
mov
dec
add
add
cwde
aas
popa
lock
cmp
or
es
and
repnz
push
adc
stos
xor
test
scas
jb
scas
jle
retf
sahf
daa
fnstcw
jmp
adc
cmp
xor
pop
daa
push
cli
xchg
jmp
sbb
ficom
xchg
mov
fbstp
jge
fwait
and
xor
pop
cmp
bound
dec
xchg
lods
inc
or
shr
inc
xlat
pop
cmp
jp
add
cmp
arpl
sbb
test
mov
fisub
xchg
jmp
sti
fdiv
mov
lods
(bad)
(bad)
sub
dec
mov
repnz
fistp
push
cmc
movs
xchg
pusha
pop
jne
inc
or
retf
stos
add
adc
inc
pusha
cmp
lea
mov
ss
lods
sbb
sbb
push
xchg
retf
call
xchg
dec
call
push
mov
xchg
adc
sbb
add
(bad)
dec
inc
retf
jle
scas
mov
mov
in
fwait
cli
mov
rol
sahf
mov
sub
aad
fld
dec
jnp
cmp
shl
enter
add
(bad)
push
or
ss
out
cmp
inc
in
jecxz
jecxz
adc
push
fdivr
mov
out
fdivr
mov
retf
daa
push
cld
jecxz
scas
mov
jnp
daa
stc
sbb
push
cld
popf
leave
and
dec
sub
push
adc
or
cmps
sub
cmp
dec
out
cmps
xchg
jmp
add
test
cmps
cs
dec
in
mov
or
aad
inc
or
jmp
popf
or
adc
xor
and
and
lods
test
pop
pushf
cmp
repz
arpl
mov
je
pop
repz
scas
icebp
mov
int3
shr
mov
cmp
push
inc
dec
mov
pop
gs
(bad)
lds
adc
jecxz
out
dec
jl
cmps
cdq
adc
inc
cwde
add
call
jae
es
jmp
and
jge
lock
and
and
dec
bound
mov
and
add
xchg
rol
jne
enter
pusha
add
outs
pop
shr
aam
jmp
outs
xchg
xchg
push
push
sbb
ret
nop
cmc
inc
cwde
idiv
dec
std
sub
add
arpl
repz
push
fdivr
(bad)
mov
lds
enter
lea
rcr
push
rcr
inc
daa
jge
cmp
call
sbb
and
sub
xor
sub
bound
jae
inc
out
sbb
pop
sahf
jle
dec
ret
jp
inc
call
into
shl
loop
cmps
rol
shr
inc
gs
leave
cmp
(bad)
and
jnp
gs
inc
pop
repnz
adc
aam
push
xchg
sbb
jmp
xor
dec
js
jecxz
adc
and
adc
xchg
fistp
mov
hlt
les
mov
shl
pop
sub
hlt
dec
mov
sbb
push
out
aas
rcr
cmc
sub
jmp
xor
inc
or
cmc
ret
inc
or
ja
sub
mov
jb
push
popf
push
sbb
lahf
xrelease
xor
les
dec
sahf
xor
div
stos
mov
fdiv
data16
mov
outs
(bad)
arpl
add
and
icebp
xchg
or
into
jl
aaa
es
in
cwde
sahf
mov
lock
enter
mov
fild
cmp
jne
mov
and
es
ja
jle
pop
pop
int
stos
jl
cdq
adc
ds
mov
in
repnz
not
jb
rol
push
mov
or
rcl
imul
packuswb
(bad)
add
not
cmp
repz
mov
(bad)
jno
lahf
hlt
fld
lods
lahf
shl
mov
hlt
movs
xchg
loope
cmp
jle
das
cdq
retf
push
mov
push
movs
xor
shl
xchg
or
or
imul
jmp
cmp
hlt
push
sbb
mov
popa
and
pop
jp
pop
ffree
pop
xchg
fnstsw
mov
mov
dec
or
pop
retf
hlt
sbb
inc
in
inc
cmps
mov
movs
(bad)
adc
add
rcl
rol
jnp
sbb
xor
sahf
je
mov
out
xchg
sbb
inc
mov
test
leave
push
in
arpl
outs
(bad)
int
fidivr
pop
add
inc
or
sbb
and
nop
(bad)
ds
push
jle
pop
push
jecxz
fwait
cmp
adc
icebp
cmp
shl
ss
das
xlat
cmp
mov
dec
retf
mov
(bad)
pop
imul
adc
(bad)
rcl
mov
lods
push
adc
test
scas
dec
stos
cmp
mov
and
pusha
mov
pop
arpl
mov
jns
pop
or
pop
adc
sub
dec
and
and
mov
out
rol
ins
fsubp
push
inc
cmp
ret
loopne
pop
xchg
iret
in
dec
(bad)
out
(bad)
fistp
xchg
(bad)
cmp
pop
cld
rol
mov
or
push
in
repz
les
adc
or
out
sub
sub
es
add
mov
wrmsr
mov
jae
sub
xchg
adc
aaa
inc
imul
pushf
pop
sub
jno
daa
outs
stos
cs
push
(bad)
imul
dec
xchg
jp
loop
xchg
sub
outs
inc
(bad)
push
push
pushf
xor
mov
fdivr
mov
cmp
dec
jb
into
lahf
xlat
es
(bad)
cld
add
(bad)
ss
lods
inc
and
lods
push
loopne
imul
popf
push
(bad)
jg
imul
jns
mov
xchg
mov
call
je
aaa
dec
lds
pop
jb
imul
int3
clc
call
adc
pop
cli
loope
ds
xchg
or
or
daa
jp
test
jae
out
or
in
push
add
adc
(bad)
sti
push
sbb
add
(bad)
icebp
xor
ins
pop
loope
inc
cwde
cmp
adc
xor
ds
loop
(bad)
shl
mov
call
(bad)
cmp
sub
push
xchg
outs
mov
push
cmps
inc
icebp
cmps
sbb
jecxz
add
bound
pop
not
inc
mov
cs
ss
mov
aad
(bad)
mov
adc
mov
stc
or
aad
leave
add
ins
out
dec
mov
dec
add
mov
call
dec
rcr
jnp
scas
add
cmp
jmp
test
outs
or
or
push
imul
out
sub
and
sbb
ret
xchg
pop
test
pop
(bad)
test
xchg
adc
jne
cmc
call
add
out
ret
mov
fidivr
es
cmp
dec
rol
push
mov
mov
fisttp
pop
(bad)
jl
enter
pusha
mov
fisub
ss
mov
fsub
in
inc
ror
mov
aad
js
lock
mov
data16
fbld
push
jne
aas
ret
neg
and
movs
repz
jg
sbb
jno
or
mov
sub
call
push
retf
(bad)
mov
sub
mov
repnz
rcr
into
stos
lahf
pop
xchg
add
ror
jmp
call
jb
dec
jmp
sbb
(bad)
xor
popa
in
dec
es
inc
mov
in
add
cdq
leave
fmulp
(bad)
pop
cmp
(bad)
mov
add
movs
mov
xchg
(bad)
jne
dec
test
out
push
xor
fsubr
repz
stos
cmps
jns
xchg
mov
mov
mov
daa
std
fldenv
cmps
js
jb
cdq
xor
sbb
aam
sti
aaa
mov
xor
cwde
jo
stos
imul
adc
adc
aad
sbb
and
fist
pop
icebp
mov
and
ror
fstp
xor
inc
loope
movs
pop
push
jmp
arpl
mov
xor
ds
mov
(bad)
push
mov
sahf
xchg
dec
nop
or
inc
int3
inc
fldcw
xchg
mov
sub
stc
pop
push
adc
add
mov
inc
sub
mov
retf
jp
stos
xor
mov
ins
push
out
dec
and
add
jl
jp
push
js
xchg
popa
test
or
movs
cmp
ja
mov
sbb
(bad)
fstp
outs
xor
popa
inc
xor
xlat
pop
add
or
pop
push
jbe
loope
fisubr
mov
jle
dec
push
js
jo
xchg
test
sub
or
aas
aaa
pop
xor
or
push
loope
cmp
retf
and
mov
xlat
dec
push
pop
push
jg
push
mov
cmc
push
mov
jmp
je
dec
popa
mov
mov
inc
sbb
dec
xchg
ret
mov
mov
call
sar
xor
inc
mov
add
cmc
jns
cs
push
in
jbe
fwait
call
icebp
shl
cmp
push
xlat
test
in
push
es
sub
push
push
cmp
mov
jl
xor
(bad)
pusha
xchg
sub
jb
inc
mov
test
mov
(bad)
cvtdq2ps
cdq
rol
xor
or
popf
xchg
lods
pop
out
out
cmp
outs
sub
dec
test
(bad)
mov
sub
shl
push
cld
mov
sbb
icebp
lods
xchg
setbe
xor
cwde
pusha
cmp
or
adc
mov
push
in
pop
and
jne
mov
and
icebp
dec
jns
fadd
stos
cmc
ds
pop
xor
or
cmps
push
mov
call
out
mov
jge
inc
dec
pop
out
xor
(bad)
lahf
ja
jne
pop
test
stc
and
add
and
imul
pusha
daa
add
xchg
dec
(bad)
sar
dec
gs
aam
xchg
jle
push
repnz
(bad)
xor
cmp
xchg
pop
icebp
cmps
mov
arpl
stos
jl
in
add
jne
sti
add
hlt
daa
sub
mov
sub
pop
push
leave
imul
cmp
jmp
mov
inc
push
cmp
inc
cmp
jb
out
mov
inc
clc
ja
mov
and
sub
mov
scas
push
and
inc
sbb
dec
jg
daa
mov
retf
retf
fnsave
jge
sub
outs
call
sub
or
xchg
inc
fisttp
add
dec
inc
or
mov
lahf
icebp
inc
sub
sbb
push
out
or
and
div
xchg
in
cmps
inc
test
xor
outs
xor
scas
movs
lock
loope
in
inc
mov
push
lock
(bad)
ins
mov
xchg
(bad)
jmp
sub
(bad)
call
or
ss
inc
mov
loope
sar
inc
dec
push
out
inc
out
pop
lods
in
sbb
xor
dec
imul
fidiv
mov
daa
dec
cdq
ins
je
cmp
imul
pop
rcr
add
mov
and
dec
push
xchg
and
jb
cmp
jne
xchg
ja
cli
out
jns
shl
rcr
push
or
cmps
or
mov
test
xchg
mov
mul
pop
fild
push
idiv
xchg
loop
(bad)
outs
cmps
lea
add
add
movs
pop
sar
aam
adc
sar
push
xor
or
xor
dec
cmp
cmp
mov
mov
fidivr
inc
das
loope
pop
test
xor
mov
(bad)
(bad)
add
movs
mov
out
xchg
mov
(bad)
cmp
xchg
js
add
out
mov
cli
push
mov
and
daa
xor
mov
sub
or
add
ret
xchg
mov
sub
and
push
test
rcr
ret
rol
pop
pop
cwde
add
in
push
mov
mov
or
cmp
and
sbb
mov
cmp
mov
aaa
ja
mov
adc
xor
or
les
popa
movs
in
push
int
hlt
les
lea
leave
push
rcl
and
add
inc
ret
mov
pop
xchg
(bad)
ins
pop
lock
cs
mov
mov
(bad)
xchg
dec
mov
(bad)
movs
dec
mov
test
in
fs
lea
in
sahf
and
fwait
ret
xchg
push
mov
lahf
mov
adc
cwde
sub
xlat
jmp
xchg
mov
pop
test
pop
sbb
lods
xor
and
add
(bad)
cli
mov
inc
xchg
loopne
shr
sbb
in
and
cmps
and
(bad)
push
inc
fdiv
fs
mov
data16
sti
ins
stos
adc
dec
jae
or
aas
dec
cmp
pop
xchg
push
loop
rcr
cmp
xor
add
adc
and
or
pop
or
and
cli
pop
push
pop
repz
(bad)
test
sbb
(bad)
xor
push
pop
js
jp
cli
mov
lds
rol
sbb
jns
add
imul
vmovups
retf
xor
and
jne
ins
sub
and
mov
call
fdivr
jo
icebp
cld
mov
int
mov
mov
lahf
mov
or
shl
in
pop
(bad)
jecxz
aad
inc
push
cdq
ins
fld
xchg
adc
jne
push
mov
and
(bad)
test
xor
fcmovne
pop
push
or
rol
mov
gs
ja
fdiv
in
jle
mov
out
hlt
sbb
fld
(bad)
sar
xor
icebp
inc
mov
inc
and
mov
xchg
mov
inc
std
or
lock
xchg
and
push
dec
ror
daa
pop
fs
jne
pusha
inc
nop
lods
xchg
xchg
push
add
cmp
mov
push
stos
push
das
iret
gs
std
inc
(bad)
aam
xor
outs
push
aas
in
push
fwait
rcl
stos
and
in
push
inc
je
xor
stc
inc
jbe
mov
packsswb
stc
sbb
hlt
xor
or
sub
aas
jmp
std
dec
jb
and
xchg
outs
push
dec
push
stos
repz
or
xlat
jb
mov
xchg
mov
aad
push
cmc
jle
mov
retf
pushf
jp
xchg
sahf
sub
mov
dec
or
retf
inc
inc
mov
xor
or
call
scas
xchg
loop
mov
out
leave
pop
jno
clc
sub
inc
adc
dec
dec
(bad)
enter
mov
inc
dec
out
jg
dec
retf
iret
lock
inc
adc
jbe
mov
or
fld
add
or
fs
sub
out
test
stc
dec
pop
dec
adc
popf
pusha
hlt
sbb
inc
dec
sahf
mov
shr
mul
ror
mov
mov
lds
jae
data16
lods
nop
pop
dec
popa
xor
cwde
xchg
iret
retf
mov
call
cmp
jo
xlat
inc
cmp
jno
arpl
std
repnz
ds
cdq
clc
hlt
mov
stc
scas
xor
push
out
(bad)
sub
lock
mov
pop
ins
fild
mov
dec
out
xchg
push
retf
(bad)
cmp
loopne
mov
clc
out
int3
mov
out
scas
mov
mov
loop
lea
daa
jbe
mov
out
mov
in
adc
add
mov
mov
test
or
inc
mov
cdq
cld
push
stos
cs
mov
scas
adc
loopne
pop
xor
in
shl
je
adc
add
cmp
std
mov
xor
dec
xor
add
push
jnp
mov
inc
pop
lahf
mov
fs
cmp
popf
pushf
cmp
pusha
loop
add
imul
lock
dec
sub
pop
push
jns
or
out
mov
retf
sub
test
les
sub
cmps
fmul
xchg
and
icebp
xor
sbb
adc
jg
jg
pop
xor
jle
or
into
xlat
dec
fdivrp
dec
ins
push
nop
sub
or
popa
push
push
cmp
mov
pop
lods
push
xlat
pop
adc
(bad)
xchg
es
loope
dec
gs
jno
std
icebp
push
mov
mov
xor
cs
(bad)
sbb
lahf
mov
xor
add
popf
mov
sub
test
xor
inc
int3
jge
fsubrp
lea
add
push
pop
jle
jmp
outs
addr16
sti
lock
aas
idiv
sbb
sahf
enter
mov
(bad)
jl
or
enter
mov
and
stos
pop
xor
les
clc
adc
fbld
xor
sbb
lea
iret
add
ret
leave
cdq
mov
dec
ins
retf
jb
jae
retf
fdivr
jg
push
add
push
xchg
rol
test
dec
mov
and
shl
repnz
aaa
inc
int
fidivr
pop
and
xlat
cmp
mov
je
rcr
add
loopne
cmp
movs
ds
enter
xor
cmp
mov
in
hlt
push
mov
jmp
pusha
mov
pop
mov
(bad)
mov
mov
jmp
mov
adc
mov
std
jecxz
imul
sbb
in
jno
adc
cld
mov
sahf
fiadd
add
int3
sti
sub
ss
add
push
(bad)
jmp
stos
retf
mov
stc
add
cmp
push
enter
push
test
dec
sub
and
repnz
pop
fwait
pop
push
xlat
iret
add
or
cmp
imul
dec
test
ftst
ins
not
movs
int
out
imul
daa
pusha
(bad)
mov
adc
lock
and
dec
pop
sub
scas
push
movq
das
out
hlt
sti
in
sbb
cdq
daa
aaa
xchg
fsubr
retf
ins
adc
scas
loopne
loopne
pusha
into
dec
mov
mov
xor
js
dec
xchg
dec
push
hlt
push
lahf
cld
stc
push
div
mov
in
and
mov
jnp
and
cmp
retf
inc
arpl
adc
jp
cmovs
imul
inc
icebp
push
aas
stos
or
stos
popf
movs
mov
pop
sbb
and
add
dec
loop
in
retf
repz
scas
popf
push
das
push
in
xor
aaa
xor
fst
movs
(bad)
mov
test
xchg
or
in
sahf
aaa
xlat
out
mov
hlt
ins
fwait
cmps
in
sub
xor
jne
nop
mov
mov
ret
mov
je
fcom
outs
mov
in
out
sub
cwde
pop
loope
popa
fwait
test
or
fisttp
cmps
sti
outs
ja
sbb
xchg
icebp
pop
ins
pushf
arpl
shr
gs
enter
jmp
mov
adc
mov
fcomp
popa
cmps
movs
mov
repnz
ins
and
inc
cmps
xchg
xlat
jne
and
xchg
and
push
cmp
icebp
jo
push
in
std
jb
dec
cmp
loopne
jnp
stc
cmp
mov
adc
or
mov
jno
cmp
sbb
add
fnsave
movs
mov
mov
push
shl
jnp
push
pop
in
and
sbb
shld
and
hlt
jp
fisubr
pop
pop
loop
ror
leave
out
dec
xchg
idiv
mov
pop
cmps
xchg
jnp
inc
int3
inc
cld
mov
mov
rol
push
xchg
pop
xlat
rol
pop
lods
mov
in
retf
mov
mov
add
ins
ja
fimul
pusha
mov
jno
aam
retf
idiv
cdq
push
cmp
(bad)
outs
call
lods
aam
(bad)
int3
or
outs
dec
enter
mov
push
test
xchg
das
mov
lds
mov
je
es
retf
sbb
retf
mov
mov
mul
sbb
adc
mov
loopne
test
movs
out
addr16
inc
daa
push
jb
mov
dec
lahf
jmp
push
mov
out
pop
movs
jae
mov
inc
lods
add
retf
in
and
in
icebp
nop
or
mov
and
xlat
sub
cmp
cmps
idiv
(bad)
mov
pop
addr16
stc
pop
mov
gs
not
sub
ret
inc
inc
iret
push
dec
pop
add
pop
mov
stos
push
jg
(bad)
clc
jl
pop
ficomp
jmp
push
fcomp
jae
(bad)
xchg
mov
sti
mov
lock
imul
add
sbb
jb
adc
xchg
cs
aaa
repz
imul
push
cmc
retf
add
inc
je
inc
add
in
jg
and
xor
sbb
clc
jnp
test
sub
push
jnp
jmp
in
mov
mov
(bad)
add
dec
test
bound
retf
dec
xor
addr16
sbb
inc
pop
push
pop
cld
gs
adc
xchg
add
cld
push
lahf
mov
xor
pop
cmp
sub
out
pop
inc
xor
and
sti
sub
in
jg
mov
test
movs
push
in
outs
xchg
sub
push
push
fdiv
movs
ins
addr16
sbb
mov
(bad)
movs
stos
push
pop
fwait
mov
sub
push
arpl
lahf
out
push
shl
dec
pand
sub
sub
ficomp
xchg
mov
out
arpl
daa
imul
dec
test
cmc
push
stos
inc
lods
and
jo
shl
mov
add
fs
mov
cmp
enter
lahf
imul
push
sti
call
fwait
rcr
pusha
shl
rcl
cmp
movs
add
mov
psubw
push
rol
push
xchg
sub
stc
lods
dec
in
(bad)
push
das
les
lahf
and
std
aam
xor
sbb
es
fdiv
xor
fidiv
dec
mov
xchg
aad
ins
test
mov
xlat
ss
mov
in
in
out
sub
xor
not
dec
jp
jbe
and
ret
inc
mov
cli
cmp
mov
repz
cmp
aaa
jle
out
push
xchg
ret
dec
call
movs
fcmovb
jo
inc
popa
push
clts
int3
ja
mov
push
mov
ja
cmc
or
outs
popf
sbb
xchg
dec
mov
push
movs
pop
pop
cld
and
loopne
jnp
dec
ins
push
mov
sbb
sahf
mov
inc
pop
sbb
mov
repnz
mov
push
add
lock
mov
pushw
inc
mov
push
add
push
pop
inc
push
(bad)
scas
bound
retf
xor
bound
idiv
pushf
sti
adc
jne
mov
int3
add
add
cwde
sahf
ss
cdq
and
rcl
ror
inc
ins
sub
aas
daa
cmp
sub
ds
das
push
or
mov
jp
lds
call
fs
mov
nop
adc
jle
jnp
pushf
sbb
in
jecxz
std
inc
stos
and
mov
ds
xor
jne
aaa
xchg
inc
clc
cmps
aaa
mov
sub
loopne
adc
or
sbb
mov
fs
cld
dec
and
add
fcom
(bad)
aas
mov
mov
inc
or
cmc
shl
into
mov
loop
sub
fcomp
bound
int3
popa
or
dec
es
setae
imul
jno
push
inc
pop
call
add
in
stos
pop
bound
inc
lds
add
fstp
test
sub
mov
mov
cmps
in
mov
and
aad
cs
adc
cdq
popa
mov
push
int
jge
and
inc
fiadd
retw
lds
mov
icebp
loope
inc
pop
ins
ss
lahf
push
out
ins
push
(bad)
in
cdq
fidivr
xlat
adc
and
out
out
in
inc
or
cli
fmul
or
push
pushf
and
jno
icebp
push
aas
dec
hlt
std
rol
gs
xchg
cmp
ins
inc
aas
retf
mov
dec
push
add
jmp
inc
xchg
js
scas
rol
push
and
xor
xor
aaa
pushf
or
sti
imul
xchg
sbb
pop
mov
fimul
mov
(bad)
dec
adc
nop
ins
jl
add
movs
mov
and
adc
movs
out
xchg
sbb
adc
sbb
cli
add
fcmovnb
sub
sub
jae
inc
in
push
gs
les
lds
xlat
dec
in
sub
ds
repnz
out
inc
push
jbe
jo
jb
push
sahf
xchg
pop
xchg
sbb
outs
(bad)
jae
or
(bad)
push
or
lea
sub
pop
cmps
imul
fcom
fwait
mov
adc
lods
cmps
shl
test
es
cli
dec
mov
jo
xor
movs
pop
mov
or
outs
mov
cmp
push
popa
mov
xor
mov
mov
jmp
scas
dec
ret
cmps
in
stc
cmps
dec
and
movs
test
jmp
fist
jb
inc
shl
loopne
sti
ficom
mov
sub
daa
retf
add
imul
fsubrp
mov
lea
add
test
repnz
jg
stc
mov
pop
sub
daa
gs
sub
pop
mov
jmp
mov
das
loop
ja
cmp
xchg
add
rol
mov
cld
mov
add
ins
loopne
clc
ja
and
popa
add
movs
jmp
push
inc
inc
dec
push
add
in
jl
push
jle
push
pusha
xor
add
je
clc
mov
pop
add
mov
mov
shl
jmp
xor
mov
cwde
scas
loopne
sub
loop
jae
lods
pusha
push
mov
inc
ins
nop
js
bnd
dec
ss
dec
cmp
xor
xor
mov
and
and
adc
stos
dec
pop
adc
loop
iret
pop
sub
adc
hlt
or
call
xchg
test
outs
adc
sub
pop
or
dec
ins
cmp
jno
neg
stc
jne
mov
adc
pusha
add
jbe
pop
fild
sbb
data16
in
in
jnp
aaa
mov
stos
dec
jb
(bad)
push
mov
ins
test
mov
lea
int3
inc
jo
mov
inc
and
out
pop
ss
out
outs
nop
xor
or
and
(bad)
rcl
je
jnp
or
mov
mov
xchg
sbb
cmp
inc
(bad)
int3
retw
push
inc
test
das
sbb
xchg
sbb
outs
(bad)
push
not
jne
daa
cwde
aam
inc
gs
test
pusha
push
adc
adc
dec
retf
stos
mov
mov
or
imul
addr16
retf
cmp
push
cwde
(bad)
jns
jp
mov
mov
mov
inc
int3
test
fcomp
popa
pop
jge
jno
xchg
xchg
sahf
pusha
or
sbb
test
test
mov
repz
test
test
mov
icebp
mov
xchg
xor
xlat
cld
sbb
ja
scas
ins
les
ja
push
addr16
fdivr
lods
cmc
jno
push
inc
cli
cdq
sbb
loope
mov
push
loope
in
repnz
sbb
(bad)
push
mov
mov
and
push
xor
or
bound
test
pop
and
cmps
lds
or
sahf
out
test
push
inc
xchg
fadd
lods
jo
hlt
iret
das
xor
shr
repnz
and
ret
pop
cmps
sub
add
lods
jae
xchg
push
push
jne
adc
add
mov
cld
mov
jmp
call
and
ret
mov
inc
jae
scas
sub
mov
pop
scas
sbb
shr
xchg
adc
aaa
xor
xor
sbb
ror
push
(bad)
repz
inc
ret
adc
(bad)
xor
call
movs
sub
inc
pop
xchg
pop
or
idiv
fsubp
fwait
mov
popf
add
ret
xchg
xchg
ret
mov
jae
pop
lahf
movs
jmp
arpl
arpl
mov
test
push
xchg
sub
pop
in
leave
xor
add
push
dec
loop
repnz
aas
xchg
imul
xor
call
jmp
xor
hlt
sub
(bad)
push
dec
mov
icebp
or
aas
mov
fdiv
xor
or
pop
cmp
gs
push
push
mov
out
xchg
mov
jnp
adc
stos
mov
hlt
mov
add
cmc
lods
jmp
repnz
cmp
in
sub
imul
pop
retf
sbb
pusha
cmp
movs
pop
pusha
data16
shl
jmp
fcomp
mov
add
ror
gs
push
adc
sbb
ins
(bad)
sub
push
cmps
jge
fstp
jno
pop
dec
stos
popf
sbb
push
push
sar
or
addr16
jmp
test
cmp
lds
cld
fst
jle
push
or
and
or
sbb
xor
mov
mov
in
jbe
pop
xor
cwde
pop
pop
jne
(bad)
in
int
adc
loop
repz
mov
pop
mov
sbb
pushf
adc
jecxz
cmp
and
xlat
sahf
dec
test
(bad)
adc
std
pop
fsub
and
imul
pop
lods
or
enter
push
jle
jle
mov
xchg
es
rol
sbb
je
test
sbb
mov
imul
loop
dec
out
pop
cs
xor
call
and
sub
popf
movs
les
pop
xor
ins
ficom
ficomp
or
lahf
xchg
ds
adc
cmps
pop
sbb
xchg
and
push
adc
aaa
std
xor
in
xor
cmps
and
or
xchg
pop
lds
int3
xchg
std
sub
push
inc
and
dec
aaa
sbb
fnstcw
aas
imul
xchg
cs
sbb
mov
cmp
dec
jb
ins
cs
xchg
arpl
fimul
or
ror
adc
lock
xchg
aaa
mov
in
neg
jnp
pop
in
aaa
inc
cmp
adc
test
test
es
mov
sar
adc
dec
push
(bad)
inc
(bad)
ins
test
mov
out
retf
fxch
xor
mov
(bad)
retw
pop
sbb
int3
rcr
pop
std
shl
pop
cmc
test
jae
ins
jb
mov
jb
xchg
ror
push
test
mov
inc
adc
jno
xchg
mov
cdq
push
arpl
jb
adc
adc
inc
push
jecxz
pop
loop
retf
es
sbb
je
mov
je
dec
sub
call
shr
add
cmpps
cwde
mov
(bad)
push
jb
mov
loopne
mov
sub
aas
or
les
sub
sub
mov
les
sar
xchg
adc
lea
inc
out
jne
pop
dec
dec
xor
xchg
retf
cmp
mov
push
pusha
push
clc
xor
int3
shr
mov
sub
mov
rcr
mov
sub
or
out
or
cmps
adc
cli
shl
xor
dec
les
pop
retf
push
pop
hlt
mov
pop
pop
push
xor
cmc
xchg
xchg
pop
out
push
xor
mov
adc
sub
mov
jl
jo
leave
fxch
sbb
jp
mov
and
mov
push
cmps
call
test
scas
mov
adc
movs
adc
pop
mov
in
xchg
rcr
outs
and
loopne
call
aad
sub
jb
shl
ins
addr16
mov
or
jmp
fcomp
xchg
lahf
in
dec
cmp
or
call
test
sahf
xor
mov
ret
mov
push
repnz
in
dec
or
lock
add
push
xchg
bound
fistp
rcl
fsubr
inc
ror
jne
pop
and
cwde
pop
cmp
jl
ds
jle
cmp
repnz
or
mov
ficomp
imul
push
je
jecxz
sbb
pop
jl
or
arpl
repz
fld
out
rol
jle
mov
sbb
fwait
or
jbe
int
sbb
and
mov
ret
cmp
es
les
nop
jmp
pop
(bad)
test
mov
add
mov
dec
daa
retf
push
mov
adc
sbb
jmp
push
xchg
add
push
cmp
jecxz
scas
rcl
cmp
jb
jbe
xor
cmp
inc
ret
or
pop
and
retf
sbb
adc
inc
mov
jg
addr16
adc
in
addr16
test
icebp
cmp
mov
loop
shl
(bad)
stos
add
and
shl
mov
sbb
jae
push
imul
cmps
xchg
aam
sbb
or
jge
sub
jno
pop
jnp
sbb
ror
loopne
jbe
dec
jne
pop
or
scas
das
popf
icebp
push
test
sbb
mov
js
sar
xor
retf
xor
inc
inc
loopne
mov
cmp
std
push
inc
fcomip
ds
inc
and
ffreep
jno
mov
das
fwait
int3
mov
pop
adc
cmp
(bad)
out
loopne
lds
and
das
repnz
and
dec
add
out
sbb
loop
mov
xchg
retf
cmps
fisttp
lods
jg
loop
cdq
xchg
js
cmps
loop
int3
jns
(bad)
std
imul
sbb
aam
rcr
popf
and
jmp
outs
nop
fdiv
and
cmp
jl
(bad)
fcomp
not
std
loope
mov
ret
and
add
jbe
mov
movs
test
and
push
aad
fild
mov
js
dec
dec
fwait
pop
stos
jb
ja
int3
(bad)
or
mov
xor
lahf
dec
inc
test
push
mov
and
pusha
inc
ins
enter
cmp
mov
xchg
iret
mov
push
fwait
ror
add
mov
jmp
and
add
call
sbb
adc
xchg
call
shl
pusha
stc
sub
fs
ins
jg
sbb
fist
jecxz
sbb
loopne
pushf
and
std
js
xchg
inc
push
cmp
cmp
std
push
push
xor
sahf
jnp
ds
out
jnp
xchg
lods
add
jmp
pop
dec
jne
sub
inc
ret
xchg
test
ins
ficom
mov
test
xor
repnz
fcomp
and
ret
repnz
test
jmp
adc
loope
push
fwait
xchg
retf
dec
mov
mov
inc
inc
out
lods
stos
test
jb
imul
xor
pop
das
dec
mov
cmp
pushf
dec
bound
call
add
mov
and
xchg
popf
shl
mov
loopne
jns
rcr
push
cmp
cmp
inc
ins
fs
out
mov
sub
jb
pop
int3
in
xor
dec
inc
lock
mov
xor
add
stos
fdivr
and
cmovnp
or
outs
inc
and
cdq
xor
fbld
ins
test
xlat
mov
daa
mov
sbb
pop
mov
adc
lods
fwait
push
mov
sbb
ins
add
jno
jnp
push
ret
mov
les
dec
or
es
cmc
sub
out
sbb
jl
and
push
arpl
enter
mov
adc
xor
dec
inc
retf
test
xchg
push
adc
jns
hlt
mov
inc
rcr
push
sub
ins
test
js
repnz
cli
jno
lods
push
inc
mul
inc
sub
cmp
sub
push
ins
mov
out
push
sub
adc
xchg
jno
push
fxch
sbb
cli
mov
ror
(bad)
mov
aad
in
fs
pop
xor
add
dec
imul
mov
bound
mov
jecxz
push
sar
out
mov
outs
rcr
ds
lods
outs
mov
pop
push
(bad)
push
adc
dec
push
xlat
arpl
leave
mov
add
push
sub
jns
or
xor
cs
or
sar
xchg
mov
in
mov
cmp
jmp
loope
push
pop
cwde
outs
cdq
inc
pop
loopne
inc
(bad)
jg
xchg
lds
call
dec
ja
test
and
bound
push
not
and
(bad)
not
cli
cmp
out
and
rol
stc
xor
mov
xlat
les
pop
les
inc
loop
add
push
daa
hlt
(bad)
in
imul
mov
addr16
sub
and
inc
mov
iret
mov
retf
cmp
fwait
adc
adc
cmps
or
lds
call
shl
sub
jl
pusha
rcr
retf
repnz
pop
loopne
dec
inc
and
ret
mov
iret
mov
jle
inc
fmul
push
mov
inc
xchg
or
mov
mov
mov
jb
aam
push
mov
ins
push
pop
ds
mov
and
dec
push
add
push
jo
pop
cmp
into
fsub
das
cmps
pop
adc
mov
jo
adc
or
js
test
outs
mov
adc
adc
sbb
sbb
rcr
(bad)
(bad)
scas
pop
je
and
and
push
add
lock
jg
fcom
daa
sbb
mov
pop
stos
pop
push
add
dec
stos
sbb
xlat
inc
and
rdpmc
hlt
dec
out
jno
pop
mov
dec
jl
lods
outs
pop
les
push
aam
mov
lds
test
or
iret
(bad)
xlat
sub
cmp
add
ss
iret
fisub
aaa
cmc
pushf
daa
test
arpl
xor
mov
and
scas
or
cmp
cmp
pop
push
sbb
sbb
bound
rcr
add
add
call
mov
je
scas
push
jo
jnp
cmp
sbb
sbb
imul
mov
sbb
sbb
xor
rcr
or
jbe
mov
adc
shl
addr16
pop
retf
nop
jbe
add
push
test
fs
shr
movs
adc
imul
and
dec
sub
sbb
(bad)
xchg
into
add
xchg
out
push
test
retf
int
inc
pop
dec
cwde
jbe
outs
div
dec
inc
ds
je
lahf
mov
sub
jge
arpl
sub
pop
sbb
frstor
sub
int3
(bad)
out
arpl
jge
ins
scas
fs
int
stos
mov
mov
sbb
or
imul
jo
xchg
xchg
mov
aaa
add
mov
xor
in
add
push
jmp
aam
mov
pop
mov
dec
pop
ins
xchg
scas
mov
mov
jae
aaa
pop
rcl
push
in
fidivr
xchg
and
inc
xor
movs
retf
scas
sub
sub
pop
adc
pop
(bad)
cmp
scas
dec
fadd
sub
in
movs
mov
jp
pushf
dec
rol
(bad)
aaa
push
(bad)
xchg
call
add
imul
mov
jge
and
xchg
daa
push
push
out
xor
mov
cmp
adc
into
mov
lahf
call
mov
push
(bad)
repz
or
cs
pop
jge
gs
cdq
adc
in
jmp
sar
leave
mov
lea
cmp
adc
inc
div
mov
pop
cmps
jo
adc
xchg
mov
pop
mov
sahf
dec
(bad)
push
pusha
jg
dec
mov
(bad)
scas
aad
leave
in
cwde
out
lea
inc
mul
mov
call
das
in
test
or
pop
scas
add
add
and
cwde
inc
test
imul
cmp
push
and
test
and
cdq
add
mul
sbb
(bad)
test
jle
mov
mov
and
cmps
fwait
(bad)
ins
movs
push
mov
xor
imul
xchg
or
dec
test
mov
push
dec
idiv
and
sahf
dec
push
stc
mov
pop
sub
jmp
jbe
std
and
and
movs
pop
sbb
sbb
jns
adc
push
js
outs
inc
test
push
(bad)
(bad)
push
or
dec
(bad)
jmp
popa
or
pop
aas
mov
jg
push
(bad)
int
mov
neg
sub
mov
arpl
in
and
test
(bad)
loopne
or
and
add
dec
dec
jo
pop
push
mov
adc
stos
pop
or
inc
pop
cli
and
inc
push
aas
cwde
sahf
mov
sub
fadd
mov
inc
popf
pop
jno
mov
ss
dec
mov
retf
pop
add
cmp
mov
into
and
repnz
aaa
popf
push
cmps
fldz
xor
mov
inc
sub
push
cmc
int
imul
test
sbb
popf
xchg
lahf
cwde
pop
cmp
inc
add
xchg
pop
jl
mov
pop
cmps
bound
dec
push
mov
jo
sub
enter
gs
scas
scas
adc
inc
dec
mov
imul
push
popf
mov
add
jnp
lahf
imul
cmc
mov
adc
call
sbb
in
jle
mov
mov
and
cmp
dec
pop
mov
retf
and
and
clc
fcmovb
(bad)
not
jnp
fwait
test
scas
movs
pshufw
je
sub
cmovg
xchg
jle
mov
fld
es
jmp
sub
mov
add
and
cmps
sbb
jb
jg
lods
stos
les
xor
add
xchg
pop
mov
out
xchg
outs
into
mov
push
mov
xchg
mov
jmp
cmp
mov
cld
ja
ret
frndint
ja
out
(bad)
fwait
sub
jbe
mov
mov
and
push
xlat
ins
inc
stos
retf
adc
and
leave
jg
add
cmp
jecxz
and
adc
adc
and
sub
in
gs
mov
add
or
bound
(bad)
adc
sub
daa
and
mov
fcomp
adc
nop
ror
push
shr
fnstsw
pusha
pop
fisub
ss
not
test
in
mov
movs
xchg
mov
and
jge
pusha
cs
call
xlat
or
fistp
mov
cmps
(bad)
(bad)
stos
lds
and
mov
xlat
mov
std
or
jnp
popf
nop
daa
call
xor
les
shl
mov
out
mov
ret
lock
xchg
sbb
ins
push
jno
mov
aas
inc
sub
cmp
jnp
push
mov
xor
loope
lods
pop
(bad)
(bad)
cmps
pinsrw
add
aam
inc
out
and
xor
jmp
and
adc
pushf
cmps
jno
jbe
adc
sbb
clc
test
movs
add
movs
and
ins
(bad)
dec
scas
in
xchg
(bad)
hlt
out
mov
push
mov
xor
stos
loopne
mov
cld
mov
push
aaa
cli
jmp
data16
arpl
adc
pop
mov
pushf
xchg
mov
not
jmp
addr16
pop
xlat
ror
ficom
das
inc
ins
jmp
aam
sub
mov
sbb
jb
cs
xor
push
popf
sbb
pop
cmp
pop
fs
test
int3
js
mov
test
xchg
ss
jmp
xchg
push
loop
sbb
aam
mov
mov
mov
mov
scas
push
stos
jnp
fild
cld
out
sub
mov
cdq
mov
inc
aas
jnp
ret
mov
ds
jmp
int
add
sar
pop
inc
pop
push
outs
cmp
jne
xor
jle
mov
pop
push
mov
loopne
sbb
repnz
test
sbb
sti
stos
inc
sbb
or
sub
sub
ror
call
sahf
or
in
adc
rol
mov
in
test
je
lds
retf
push
pop
stos
push
in
jnp
fisttp
cld
pop
and
and
arpl
mov
pop
inc
mov
pop
or
sub
or
jge
rcl
dec
shr
aam
push
daa
push
or
es
jno
pop
std
test
fidiv
push
or
and
mov
sbb
fistp
bound
sub
cmp
xchg
pop
test
ss
loopne
imul
(bad)
mov
enter
(bad)
ja
or
inc
fisubr
shr
lods
jo
mov
mov
fidiv
pop
jne
mov
xor
ss
lds
popf
enter
pop
mov
xlat
repz
mov
xor
adc
loopne
jno
hlt
test
(bad)
mov
scas
adc
inc
xchg
shl
in
sahf
lea
iret
(bad)
cdq
shl
xchg
jmp
lods
addr16
adc
bound
xor
cmp
popf
int3
ins
cld
push
cmp
or
movs
int
js
and
pop
movs
push
push
ins
outs
mov
pop
gs
jmp
push
jbe
leave
lods
mov
nop
loopne
shr
mov
xor
vunpcklpd
ret
int
cmp
(bad)
ins
jge
lock
jp
scas
imul
push
pop
ret
fld
dec
mov
int3
push
leave
inc
mov
(bad)
int
icebp
cld
lea
dec
loopne
sub
mov
push
mov
push
sbb
fcomp
retf
push
sub
mov
test
mov
cmp
sahf
mov
push
cmp
sub
inc
ret
std
mov
jmp
popf
dec
inc
shr
inc
mov
mov
mov
sbb
std
gs
mov
shl
jp
sbb
hlt
sub
sbb
loope
(bad)
loopne
dec
test
setg
adc
rcl
repnz
and
outs
xchg
and
dec
xchg
xor
inc
push
outs
add
test
jge
sbb
or
jg
scas
dec
neg
hlt
mov
aad
fild
les
popf
or
pop
mov
(bad)
dec
int
rol
mov
into
ss
scas
mov
neg
dec
adc
dec
pop
mov
out
pop
and
jp
jno
pop
inc
and
mov
cs
stos
mov
scas
retf
bound
sbb
xchg
dec
ja
(bad)
dec
or
cmp
mov
sub
adc
mov
inc
data16
xor
push
jnp
mov
xchg
(bad)
cmc
iret
pop
loope
imul
pop
sbb
sub
jle
out
sbb
dec
call
dec
mov
cdq
into
push
pushf
sub
add
mov
jne
leave
mov
mov
pop
call
cmp
js
xchg
pop
mov
adc
sub
adc
jl
sub
push
push
mov
sub
fcomp
mov
test
lock
push
mulps
mov
lods
push
call
xchg
pop
pop
xor
pushf
sbb
retf
scas
leave
xchg
jae
(bad)
inc
es
mov
cmp
mov
sahf
das
popa
jmp
mov
fsubr
(bad)
aad
popf
pop
mov
mov
push
adc
and
lods
lods
iret
scas
cwde
ret
mov
fwait
mov
jp
rcr
into
adc
not
ins
std
imul
std
movs
sub
std
icebp
fist
mov
jecxz
cwde
mov
inc
je
cmps
ss
scas
cmp
(bad)
or
mov
fwait
sub
push
je
push
mov
sub
jne
jne
bound
or
pop
fmul
neg
mov
xor
mov
cmp
repnz
mov
bound
cmp
adc
(bad)
out
nop
cmps
inc
push
push
sbb
cmp
data16
fldenv
jmp
pop
adc
arpl
add
(bad)
mov
aam
push
push
mov
neg
push
add
(bad)
pop
cmps
mov
cmp
adc
pop
sbb
lsl
pop
xchg
sbb
xchg
cld
enter
mov
lods
add
popf
sbb
add
cmp
int3
stos
fdiv
cmp
pop
lock
ins
iret
sahf
add
xor
out
mov
fdecstp
ins
cmp
stos
sub
arpl
push
sbb
or
(bad)
sub
xchg
in
ja
inc
adc
push
inc
(bad)
ins
in
pop
push
fdivr
inc
dec
js
gs
ret
mov
push
pop
pusha
(bad)
push
ins
cwde
push
push
mov
and
sbb
sbb
mov
mov
call
aaa
cmp
inc
mov
test
pop
pop
fs
fs
inc
bound
(bad)
push
sti
inc
inc
js
mov
push
imul
in
push
cwde
fcomp
data16
inc
pop
xchg
pop
jbe
cmps
push
scas
add
or
mov
ins
and
fst
call
jbe
movs
test
add
retf
lods
lods
xchg
mov
sbb
lock
push
or
inc
jnp
in
push
imul
mov
fisttp
in
scas
cmc
fs
xchg
mov
(bad)
dec
or
xchg
or
scas
test
cld
out
sub
scas
jp
sbb
(bad)
jnp
sub
test
addr16
test
out
xor
shl
in
add
xlat
test
and
rol
lods
xchg
stos
pop
mov
mov
fnsave
and
je
jne
pop
sbb
pop
dec
adc
test
jb
mov
pop
jb
inc
scas
mov
or
mov
xchg
dec
xor
test
mov
stc
mov
inc
je
jae
cmp
(bad)
daa
push
and
sub
or
cmp
arpl
pop
xchg
xchg
or
or
mov
inc
cmps
mov
add
xchg
rcr
and
shr
add
into
out
pop
push
cwde
sbb
sar
into
push
in
in
out
mov
fisub
aaa
and
jecxz
fadd
in
sbb
cs
outs
icebp
gs
cmps
ss
adc
(bad)
cld
mov
or
cmp
dec
popa
xor
push
das
sbb
rcl
(bad)
mov
pop
arpl
add
cld
mov
pop
call
pusha
mov
and
xor
jg
int3
jge
xchg
jecxz
cmp
mov
(bad)
mov
gs
(bad)
cld
sub
or
mov
rol
xchg
push
repz
xor
cmp
jb
movs
ins
imul
cld
sbb
fwait
out
outs
lahf
xor
push
out
jo
xor
push
and
push
push
jl
and
in
pop
add
dec
pop
inc
mov
daa
pop
push
xchg
(bad)
xor
stc
dec
aad
fs
pop
mov
inc
sub
cwde
test
idiv
in
movs
clc
(bad)
xchg
repnz
mov
cs
adc
sti
adc
mov
dec
mov
pop
pop
xor
xor
sbb
push
add
int
fist
xor
mov
mov
mov
aaa
outs
or
cli
ret
fstp
mov
sub
mov
repnz
push
sbb
inc
out
sbb
test
jmp
adc
jmp
idiv
in
or
pop
adc
sub
int3
sbb
mov
or
pop
in
dec
sbb
and
xchg
jmp
je
adc
mov
xor
icebp
xor
in
rcl
in
test
out
or
clc
xchg
inc
pop
cmp
movs
inc
mov
push
jae
sbb
sub
jmp
push
jl
les
stc
jo
hlt
mul
test
cli
adc
sub
mov
cmp
add
idiv
push
sub
jecxz
pop
cmp
add
js
or
mov
lahf
pushf
(bad)
cmc
jmp
fcomp
push
sub
push
dec
xchg
and
lods
aas
or
push
retf
aam
xor
(bad)
jg
cwde
mov
cmp
es
in
repz
push
add
nop
mov
adc
jnp
jmp
or
inc
call
mov
lock
scas
mov
cmp
mov
popa
xlat
or
lea
push
adc
and
mov
add
cmp
adc
xor
push
adc
jmp
out
sbb
mov
xor
cmps
mov
pop
jns
jae
ins
inc
sbb
sbb
inc
out
pop
mov
inc
pop
lock
mov
ficom
mov
cmp
out
xchg
loope
adc
xor
xlat
aam
sub
pop
push
sbb
mov
test
fs
inc
arpl
sbb
pop
lds
mov
imul
push
in
cmp
fwait
aas
in
das
sbb
jle
dec
add
ret
nop
dec
push
pop
or
pop
idiv
loop
mov
fiadd
add
mov
in
sub
adc
and
sbb
(bad)
ror
in
mov
loop
ror
ret
dec
xor
aaa
test
inc
sbb
jae
pop
call
push
lods
add
clc
jmp
movs
ror
in
push
inc
push
xchg
or
pop
mov
(bad)
sbb
push
addr16
lds
mov
scas
push
pop
mov
mov
dec
add
push
xchg
sub
fcomip
lea
(bad)
xchg
or
pop
pop
or
(bad)
push
xor
pop
sbb
into
iret
sbb
or
das
adc
cmps
xor
cli
ins
jae
repnz
mov
pop
retf
xor
push
mov
enter
xchg
pop
shl
sub
repnz
lds
imul
ins
xchg
aas
inc
es
mov
aad
ret
cmc
out
sbb
cmp
mov
or
cdq
sbb
(bad)
xor
sbb
add
or
or
dec
std
cmps
dec
movs
lds
and
stc
(bad)
or
mov
ret
cli
pop
sbb
int
pop
data16
or
adc
scas
cmps
xchg
mov
retf
stos
aas
je
inc
aaa
movs
adc
fmul
sbb
pop
mov
fnsave
mov
popa
(bad)
into
push
jne
mov
mov
add
xchg
test
sub
leave
js
ja
jp
mov
shl
xchg
jb
test
jns
xor
inc
ror
add
add
pop
push
xchg
popf
repnz
sub
xchg
sahf
mov
jecxz
or
out
(bad)
aaa
test
xor
dec
das
aaa
gs
call
pop
rcl
cs
or
dec
push
(bad)
jecxz
fadd
in
mov
(bad)
xchg
xchg
aad
mov
scas
stos
push
call
inc
xchg
cmp
in
jbe
cmp
mov
pop
stos
xor
das
ret
(bad)
xor
add
out
lea
test
lea
add
sbb
cmps
mov
repnz
gs
push
jne
imul
lahf
push
push
xor
dec
popf
(bad)
div
pop
into
inc
xchg
jne
(bad)
xchg
ins
jmp
inc
jecxz
adc
fidiv
adc
or
sbb
xor
bound
test
mov
retf
stos
xchg
cmps
and
loopne
test
movs
cmp
pop
and
mov
jno
inc
jg
loopne
std
hlt
int
pop
fiadd
leave
imul
out
push
adc
or
inc
out
repnz
lods
mov
movs
mov
mov
in
push
add
movs
fldcw
les
inc
xor
xchg
sub
mov
pop
out
std
mov
mov
test
xlat
push
jge
jmp
inc
enter
push
imul
aas
sar
lea
fadd
mov
push
lock
dec
retf
or
add
mov
sbb
cwde
js
pop
aas
lods
(bad)
pop
and
mov
adc
jle
add
xchg
inc
retf
dec
comiss
xor
and
ins
(bad)
add
pop
out
outs
sbb
jno
sbb
fs
leave
jnp
and
stos
xor
pushf
shl
mov
mov
inc
ret
adc
add
jmp
pop
pop
fild
cmps
dec
(bad)
jne
pop
pop
das
(bad)
inc
enter
xchg
mov
mov
and
inc
mov
dec
(bad)
mov
daa
pop
xor
sbb
or
outs
jge
les
add
xchg
inc
fs
xlat
sbb
sub
xlat
inc
setne
(bad)
jae
dec
ins
xchg
xchg
js
add
jno
mov
lahf
test
push
dec
leave
mov
mov
aam
or
das
mov
sbb
dec
out
push
mov
test
dec
xchg
mov
lods
jne
mov
das
and
int
xor
ret
rcr
push
mov
mov
rdtsc
xor
pop
mov
mov
jno
mov
xlat
pusha
inc
addr16
daa
movs
fnstcw
dec
aas
dec
cmp
retf
cld
mov
popa
and
jle
sahf
(bad)
mov
movs
fnstcw
cmps
lods
mov
cmp
xor
push
add
loopne
add
push
dec
push
jns
mov
lahf
fwait
mov
push
nop
(bad)
xlat
or
in
jmp
xor
add
inc
movzx
adc
js
(bad)
jmp
push
dec
test
and
mov
push
lea
ja
sub
(bad)
dec
xchg
sti
hlt
add
mov
test
stos
mov
xchg
fcom
in
adc
std
into
ret
jnp
inc
mov
sub
mov
jno
neg
mov
sbb
sbb
call
test
fwait
push
sahf
push
clc
mov
pop
add
inc
fwait
daa
mov
jp
dec
xchg
and
ss
sub
pop
pop
adc
mov
stc
hlt
and
loope
in
jmp
loop
pushf
jecxz
jnp
int
push
mov
dec
clc
iret
dec
dec
cmps
rcl
popf
mov
addr16
cmc
ds
daa
cli
dec
pop
dec
sbb
xor
je
(bad)
cmp
and
mov
mov
popa
push
imul
mov
pop
dec
aam
adc
add
jge
mov
icebp
stc
aaa
test
sbb
and
xor
sub
inc
inc
push
sti
adc
jecxz
add
push
inc
shl
sub
jns
sub
fdiv
std
call
cs
lock
dec
stos
pop
push
inc
ins
or
adc
or
cld
popa
jnp
pop
mov
dec
sti
ins
mov
mov
cmp
add
call
cdq
dec
mov
outs
pop
push
adc
test
(bad)
pop
and
xchg
and
or
outs
mov
fcmove
dec
retf
add
dec
arpl
or
cmp
aam
fimul
adc
and
xchg
gs
sahf
or
and
jg
pop
jns
ss
sub
xchg
cvttps2pi
stc
adc
mov
enter
outs
sbb
inc
jmp
lods
iret
inc
and
inc
jp
xchg
sub
jmp
imul
add
fidivr
hlt
dec
inc
push
mov
mov
jp
xchg
add
cwde
outs
lock
mov
lods
and
enter
mov
xchg
sbb
mov
mov
pxor
or
sahf
(bad)
scas
(bad)
or
test
in
pop
aam
ror
mov
test
ja
into
ds
pop
adc
adc
dec
cmps
add
cmc
sbb
loopne
aaa
fbld
hlt
add
or
cmp
(bad)
jl
mov
fcmovnbe
mov
mov
les
add
cs
or
ins
(bad)
push
adc
ss
xor
call
jae
sub
or
imul
push
sub
js
dec
push
adc
iretw
clc
jecxz
adc
outs
or
popf
sub
sti
dec
lods
lods
repnz
(bad)
pop
sbb
cwde
ja
inc
ja
(bad)
call
nop
inc
inc
push
retf
inc
cld
push
out
mov
pop
test
pop
push
scas
inc
fsub
repz
mov
mov
sbb
jns
inc
and
jmp
sahf
pop
or
jbe
gs
pop
xchg
jne
sbb
(bad)
in
or
enter
shl
jae
mov
sbb
(bad)
idiv
(bad)
mov
es
into
xchg
mov
jp
mov
mov
cwde
(bad)
sbb
or
xchg
shl
push
(bad)
ror
data16
dec
pop
mov
in
mov
adc
adc
mov
(bad)
jmp
repz
sbb
nop
xchg
fstp
dec
loope
(bad)
dec
and
retf
dec
push
adc
inc
cwde
dec
jo
jns
mov
rcr
adc
cdq
add
enter
retf
(bad)
adc
in
xchg
repnz
inc
mov
call
out
sbb
call
push
sti
xor
cmp
mov
cmp
ret
fidiv
lds
sub
ins
add
jmp
cmps
xchg
test
ins
inc
popa
mov
mul
pop
pop
lock
scas
cmp
fild
mov
lock
aad
mov
mov
dec
and
ret
adc
push
clc
cwde
mov
inc
and
ss
lds
xor
or
loope
test
push
mov
push
mov
cmp
les
xor
mov
cwde
xchg
xchg
mov
inc
fbstp
stc
jns
mov
ds
std
push
cld
popa
loop
sbb
jb
push
enter
mov
jns
jb
je
cmp
enter
lods
mov
outs
sub
mov
ja
sbb
test
gs
mov
push
inc
pop
fisubr
mov
pop
mov
scas
pusha
bnd
jns
jb
out
push
sbb
pop
daa
mov
jl
pushw
mov
arpl
add
mov
cmps
ins
rcl
jae
nop
add
or
sahf
out
add
pop
cld
clc
loopne
nop
retf
shl
nop
push
hlt
and
push
add
pop
mov
mov
icebp
push
sub
imul
shr
xchg
idiv
cmc
imul
inc
sbb
xchg
and
out
mov
shl
xchg
push
ret
scas
retf
movs
addr16
xor
mov
jge
inc
push
lods
out
cmps
dec
add
or
pusha
repz
sub
cmp
sti
sbb
jb
div
xor
sub
mov
lods
jno
ds
in
cld
inc
xor
(bad)
jge
sub
mov
hlt
mov
add
xchg
in
inc
fnstcw
add
(bad)
in
shl
adc
mov
or
adc
hlt
inc
gs
fisttp
lock
in
jne
sub
xchg
fxch
xor
push
int
dec
jge
cli
fadd
pop
and
adc
cmp
bound
xor
aaa
in
dec
adc
mov
pop
dec
jae
das
loopne
fidiv
icebp
push
pop
retf
out
xchg
test
inc
dec
adc
test
(bad)
mov
scas
call
test
xchg
push
in
(bad)
sub
stos
mov
std
add
lds
mov
in
push
push
in
mov
(bad)
outs
outs
inc
fisubr
inc
int
push
mov
stos
call
adc
sbb
in
jmp
das
js
nop
adc
jmp
(bad)
mov
mov
mov
push
mov
or
pop
iret
cmp
ror
push
(bad)
fyl2x
imul
pop
fld
inc
push
shl
sbb
and
imul
push
or
push
ins
sti
or
mov
and
lahf
(bad)
xchg
test
lock
or
aaa
inc
cmps
repnz
mov
pop
mov
xor
cdq
out
xchg
imul
imul
mov
pop
out
jge
pop
adc
jl
and
lods
shl
test
push
fisttp
push
add
mov
mov
mov
leave
stc
repz
push
mov
in
and
jle
xchg
leave
sahf
pop
mov
add
inc
adc
stc
je
push
int3
mov
repz
aam
dec
out
aas
mov
call
sub
xchg
mov
test
adc
addr16
lock
push
pop
sub
movs
test
test
mov
lods
sbb
(bad)
adc
push
or
mov
ja
lea
enter
cmps
aad
lea
imul
test
jle
cmp
stos
mov
push
sub
adc
out
mov
movs
xchg
add
(bad)
loop
scas
xchg
call
mov
test
pusha
mov
das
lea
and
or
dec
loop
and
dec
pushf
js
iret
cmp
inc
fdivr
inc
clc
xchg
mov
xchg
sbb
sub
mov
fidivr
or
dec
mov
mov
jo
jnp
scas
retf
movs
iret
mov
daa
xchg
jo
inc
cmp
scas
cld
stos
mov
or
cmc
popf
inc
xor
inc
mov
pop
je
mov
fs
aad
fcmovnu
sub
in
(bad)
bound
lea
pop
mov
ja
mov
xchg
std
std
mov
rcl
int3
cmp
in
sti
ret
push
cmp
adc
or
cmp
dec
lds
movs
mov
inc
inc
dec
std
pop
aaa
jb
in
mov
loopne
mov
outs
div
repnz
mov
bound
sbb
in
xchg
(bad)
fdiv
call
or
mov
fwait
sub
(bad)
popf
lea
shr
jnp
push
push
push
test
or
out
repz
cmp
dec
cdq
mov
stc
imul
cmp
out
cs
daa
mov
xlat
into
clc
loope
push
pop
xchg
xchg
mov
sub
and
xor
ins
lock
and
xchg
scas
sub
mov
jae
int
sub
adc
pop
sub
loop
jmp
in
or
push
mov
not
push
loope
pop
shl
inc
movs
leave
mov
mov
arpl
aam
stc
fldcw
pop
cmp
pop
sbb
cdq
ficomp
sub
fs
imul
ja
in
jle
adc
aam
repnz
dec
mov
stos
mul
xchg
inc
call
jnp
movs
icebp
lahf
sti
mov
sub
push
ss
movs
hlt
les
mov
popa
(bad)
mov
sub
jle
repnz
jns
inc
cs
adc
repnz
dec
sub
test
pop
pop
and
test
lock
adc
xlat
mov
xchg
sub
push
push
xchg
int
pusha
(bad)
jp
test
push
sbb
cmp
outs
jns
shr
and
(bad)
lock
adc
mov
cmps
movs
in
rcl
stos
jl
mov
cmp
and
xchg
push
stc
pop
rcr
jmp
sub
(bad)
fwait
scas
push
aam
inc
(bad)
loope
hlt
mov
push
cmps
ret
jp
out
mov
or
out
mov
pop
retf
sub
loope
mov
sbb
push
jbe
aam
(bad)
int3
les
retf
cmp
xchg
shr
add
ror
cmp
hlt
pop
mov
scas
jmp
jnp
aaa
cdq
aad
retf
sbb
iret
and
or
mov
ficom
mov
imul
xchg
xchg
jmp
call
ds
sub
xchg
pop
scas
(bad)
or
leave
inc
push
dec
xor
cli
jl
je
out
ins
dec
xchg
add
pop
jb
add
inc
dec
out
inc
add
mov
push
int
xor
into
test
outs
fcomp
mov
push
ret
pop
mov
add
pop
outs
adc
es
scas
mov
rcr
aam
jl
outs
int
std
xor
cmps
sahf
pop
add
sub
cmp
jg
sbb
xchg
jb
pop
pop
idiv
and
jle
(bad)
mov
mov
sub
mov
xchg
jg
shl
xchg
jp
add
fsubr
loop
pusha
cli
jge
cmp
das
nop
fadd
and
popf
dec
jbe
(bad)
and
jbe
fcomp
mov
adc
repnz
rcr
pop
mov
push
mov
fs
movs
inc
(bad)
jp
xchg
jns
(bad)
outs
sbb
inc
and
dec
stos
xchg
cmp
cli
sbb
cmps
mov
mov
or
in
fs
adc
adc
jmp
cld
int
(bad)
in
adc
out
adc
jne
jnp
xor
xor
je
(bad)
iret
pushf
ins
out
es
push
xor
jns
in
retf
fs
jge
movs
xchg
and
inc
aam
out
mov
outs
test
jb
in
xlat
xor
xchg
adc
dec
repnz
into
pop
imul
jno
es
adc
mov
inc
mov
adc
cmps
out
test
out
fld1
mov
jmp
adc
sub
mov
dec
(bad)
jl
mul
adc
jns
jl
push
scas
jp
mov
rcl
in
pop
ss
and
cmp
fild
jbe
leave
test
(bad)
add
mov
xlat
es
mov
pop
mov
add
jo
(bad)
jno
bnd
push
pop
in
sub
xchg
aas
stc
adc
mov
dec
inc
cld
rcl
adc
push
clc
ss
int3
adc
jl
push
jp
pop
clc
push
sub
xor
jp
int
xor
(bad)
cmps
popa
(bad)
nop
lea
jp
adc
mov
sar
mov
mov
pop
push
or
jb
call
ret
push
xchg
aam
(bad)
in
cmp
into
or
xchg
cmps
push
push
and
jl
fsub
xor
push
mov
jb
leave
ins
add
xchg
popa
lods
or
dec
push
loopne
and
or
pop
mov
inc
test
lds
and
push
push
push
adc
pop
sbb
cmp
push
(bad)
adc
fcmovb
es
fwait
push
ds
adc
iret
sub
js
lods
aad
pop
test
in
pop
mov
imul
retf
mov
arpl
sbb
add
or
lock
scas
lock
jecxz
dec
(bad)
pop
stos
pop
xchg
call
icebp
pop
ins
push
test
mov
xchg
xchg
fcmove
fwait
stos
dec
ss
cli
push
xchg
push
gs
xchg
jnp
dec
adc
sub
mov
inc
mov
inc
xlat
leave
or
test
pop
add
pop
scas
jle
retf
outs
fsub
cmp
neg
das
popf
sbb
mov
cmp
scas
push
and
lock
xor
imul
mov
inc
popf
xlat
outs
xor
arpl
loope
inc
clc
jno
(bad)
dec
test
popf
and
cs
dec
dec
aas
mov
adc
and
or
popa
int
lds
inc
enter
mov
pop
pushf
repnz
dec
pop
sbb
inc
sub
fs
inc
(bad)
cwd
add
jmp
loopne
mov
adc
or
dec
rol
fpatan
lods
mov
ins
ret
xor
xor
cmp
jns
mov
xlat
inc
inc
jl
fcmovu
int
scas
lds
xchg
inc
push
les
xor
(bad)
dec
leave
push
xlat
push
or
shl
out
into
cmp
push
stc
mov
xor
nop
jo
cmp
xor
push
mov
sub
out
jmp
ficom
in
sub
push
lea
mov
movs
cli
inc
retf
xor
adc
mov
ret
ja
sti
cs
push
int3
pop
leave
cmc
jae
scas
cmp
jmp
cmp
cmp
push
fnstcw
jge
mov
es
rcr
int
icebp
push
scas
or
hlt
rcl
popf
mov
xchg
dec
dec
test
mov
add
add
ds
xchg
adc
out
pop
inc
jb
push
in
push
xchg
and
aam
push
repnz
inc
(bad)
repnz
xor
jl
mov
(bad)
cmc
inc
mul
xchg
out
adc
dec
(bad)
fsub
pop
add
xchg
xlat
mov
clc
in
push
(bad)
jns
daa
add
sub
fidivr
xor
aaa
push
adc
sub
imul
jle
(bad)
leave
(bad)
adc
mov
mov
in
add
mov
push
jae
and
pop
xor
inc
xchg
and
sbb
pop
iret
lahf
xor
push
(bad)
iret
test
les
cmp
add
push
mov
dec
or
cmp
test
and
nop
push
dec
mov
test
mov
xchg
jp
psubusb
sub
and
vdivpd
aas
test
xchg
and
imul
(bad)
fld
jg
ins
popf
jbe
adc
loop
js
(bad)
das
call
sbb
add
pop
(bad)
daa
sbb
in
out
sbb
ror
jno
ins
cli
loope
repnz
sbb
push
jge
dec
in
mov
push
int
test
mov
xor
inc
loop
pop
pop
js
outs
lock
jge
les
xchg
or
std
or
push
sub
push
add
mov
popa
mov
iret
(bad)
adc
clc
loope
pushf
movs
gs
rol
pop
and
js
mul
mov
in
sbb
mov
inc
xor
icebp
gs
(bad)
out
adc
mov
sub
mov
out
aaa
ficomp
(bad)
imul
out
imul
sahf
mov
xchg
std
enter
(bad)
push
test
xor
fnstenv
int3
jg
add
push
ins
cmc
or
dec
jmp
jl
ja
stos
popf
dec
jns
cmc
ret
dec
pop
and
(bad)
int
jae
out
data16
pop
dec
cmc
fwait
iret
jmp
sub
out
jns
dec
and
mov
pop
ror
mov
fisubr
cmc
adc
inc
xchg
loopne
aad
cmp
(bad)
(bad)
int
jge
xchg
jl
xlat
test
fnstenv
xchg
xchg
jle
cdq
sbb
pop
sub
nop
pop
jb
add
inc
pop
xchg
or
inc
jo
loopne
sbb
sahf
sar
movs
sub
(bad)
pop
push
in
mov
mov
cmp
or
stos
cmp
data16
add
xor
jo
pop
outs
xor
sbb
inc
mov
lock
fbld
neg
or
std
mov
jae
adc
or
sub
dec
out
pop
mov
push
fld
or
std
int
push
push
dec
adc
lods
jecxz
pushf
test
add
xbegin
repnz
inc
mov
jecxz
fldcw
jecxz
daa
jp
push
mov
das
popa
rcr
in
push
mov
addr16
xlat
mov
pop
bound
sub
mov
(bad)
push
test
xchg
cmc
jmp
mov
cld
in
adc
hlt
addr16
ficomp
mov
inc
pop
jno
xchg
mov
pop
lods
iret
dec
sbb
gs
jns
xchg
pop
jnp
cmp
inc
loope
mov
(bad)
lea
inc
ja
xchg
jns
cmps
jp
or
mov
ret
dec
dec
mov
dec
dec
nop
ret
mov
loopne
push
(bad)
mov
int
pop
popa
dec
add
loop
dec
and
dec
out
add
inc
pushf
jbe
inc
inc
jg
out
pop
fwait
daa
loopne
mov
cmp
mov
and
add
fwait
out
cmp
repz
scas
addr16
rol
mov
ja
or
jecxz
xchg
xchg
std
adc
or
mul
and
pushf
jmp
or
ja
xchg
mov
fimul
mov
mov
fs
dec
and
dec
and
cs
fdiv
dec
pusha
adc
mov
ficom
sub
jo
scas
push
in
mov
cmp
mov
fild
fwait
mov
dec
mov
and
dec
inc
pop
nop
aas
sub
pushf
pop
jno
test
jge
gs
mov
dec
por
push
imul
pushf
aas
push
jnp
shr
fsubr
in
loop
pop
retf
popa
xchg
dec
(bad)
mov
pop
retf
iret
aad
pushf
fdiv
xor
inc
hlt
push
jl
sub
sbb
fbld
neg
(bad)
sbb
dec
add
mov
inc
pop
add
dec
mov
cld
sbb
mov
pop
push
adc
pop
or
das
xchg
dec
fucomi
lds
sub
mov
mov
jge
inc
int
add
in
loop
call
popa
push
fwait
push
xchg
pusha
aas
mov
sub
push
xlat
jp
je
sbb
jb
mov
xchg
cmps
lea
xor
outs
hlt
adc
xchg
int3
push
cli
pusha
or
(bad)
shl
scas
icebp
inc
call
in
pop
out
ins
imul
fs
jp
xchg
jg
fwait
call
mov
jbe
xchg
dec
fistp
mov
jb
shl
push
dec
push
mov
mov
outs
sub
loope
mov
not
inc
jl
pusha
dec
sbb
icebp
inc
lahf
xlat
(bad)
pop
mov
push
sti
lock
(bad)
xchg
je
cmps
ret
ja
pop
scas
or
bound
out
cmp
cmp
xchg
out
call
mov
jecxz
or
sub
jg
das
leave
loopne
lahf
pop
fwait
push
mov
test
adc
pop
dec
or
xchg
test
jge
xchg
jmp
and
lock
(bad)
sbb
inc
xor
xchg
hlt
push
jp
xchg
mov
out
iret
pop
cmp
(bad)
adc
rol
mov
jg
out
aas
sbb
test
test
mov
mov
mov
rol
loope
jb
jno
sbb
or
or
ja
sbb
not
scas
push
dec
cli
pop
ds
mov
out
jmp
xor
popf
mov
mov
push
jb
xlat
int3
or
xor
mov
in
mov
xchg
cld
dec
push
adc
jo
push
pop
test
add
sub
cmp
pop
fiadd
inc
out
and
dec
xlat
out
sti
jle
ja
bound
mov
inc
scas
mov
popf
mov
imul
(bad)
in
xor
push
test
push
ret
mov
jo
inc
fwait
pop
ror
hlt
rol
xchg
sub
cs
adc
inc
jbe
cdq
stos
int3
jg
add
lahf
arpl
in
iret
inc
and
sar
retf
pop
retf
ja
add
push
cmp
pop
(bad)
lea
mul
in
push
mov
pop
aas
pop
int3
das
bnd
cmp
out
add
xor
inc
rcl
loop
mov
in
mov
jmp
ret
add
retf
stos
sbb
scas
enter
cmp
fmulp
add
pop
je
sahf
sub
push
xchg
sbb
xchg
push
ds
pop
loop
outs
xor
lock
mov
adc
cld
mov
mov
pop
clc
lods
mov
(bad)
out
in
xchg
lods
or
stos
sub
repz
cld
(bad)
cmps
retf
mov
xchg
or
call
cmp
push
data16
xor
sti
fstp
(bad)
in
xchg
cdq
sbb
add
out
adc
pop
imul
xor
push
ret
out
or
jmp
mov
retf
mov
jbe
ror
loopne
fsub
daa
xor
out
xor
cli
add
xchg
add
fldenv
shr
jl
jmp
and
imul
mov
(bad)
jb
ins
mov
ins
daa
aad
pop
dec
inc
call
stos
xchg
shl
ret
sub
mov
aad
pop
xchg
movs
rcl
pushf
and
hlt
pop
stos
shl
outs
or
pop
jge
sub
iret
in
mov
hlt
jo
xchg
pop
dec
cmc
pop
push
mov
ret
inc
mov
push
fwait
mov
adc
out
jg
xor
mov
push
cmp
jl
mov
fmul
ja
mov
pop
outs
jb
mov
cmps
sub
xchg
push
jmp
or
lods
sbb
lds
out
mov
pop
sub
cmp
xor
cmp
neg
dec
xchg
stos
ja
aad
out
push
mov
mov
dec
xor
fist
popa
lea
movs
add
idiv
push
jg
mov
leave
jbe
repnz
cmps
mov
and
rcr
jmp
shr
cmps
sbb
ret
and
adc
mov
jecxz
leave
dec
xor
cmps
xchg
or
mov
inc
jmp
adc
jmp
pop
rcl
es
in
xchg
sahf
jp
pop
lahf
push
push
jb
into
inc
(bad)
push
xchg
xchg
jns
xor
ins
fisub
mov
scas
sub
addr16
push
push
retf
stc
retf
std
loopne
add
scas
ret
cmps
stc
mov
adc
fs
imul
or
movs
idiv
mov
call
push
(bad)
hlt
add
retf
cmps
cs
ds
pushf
inc
cmp
sub
mov
fcmovb
or
test
push
cs
cmp
repnz
(bad)
jno
mov
sub
mov
xchg
mov
mov
fmul
cmp
jecxz
mov
and
cmps
loop
dec
out
jp
mov
mov
icebp
jns
cmps
adc
jg
adc
push
mov
in
inc
jne
lahf
push
mov
add
mov
or
mov
jl
cdq
iret
sub
imul
call
fadd
and
mov
gs
ds
leave
phaddd
push
or
xchg
mov
sbb
fsub
push
cmp
cmp
popf
shr
xor
and
or
mov
imul
push
mov
rcl
jecxz
gs
ds
pop
mov
test
inc
cli
mov
jl
push
jmp
out
popa
pop
mov
pop
and
movs
stos
js
push
popf
inc
jmp
sti
or
dec
in
test
retf
mov
mov
mov
test
sub
adc
push
cmp
mov
jnp
xchg
cmp
cmp
inc
add
fs
test
cmp
cmp
lods
repz
loopne
repnz
push
cdq
adc
retf
sbb
sbb
dec
mov
gs
lds
mov
ins
xchg
scas
arpl
dec
jmp
(bad)
cmp
inc
das
inc
ss
and
inc
inc
sub
mov
jmp
add
daa
xchg
ds
sbb
mov
(bad)
sbb
div
pop
lods
and
stc
sbb
es
inc
in
jmp
movs
mov
addr16
xchg
fild
adc
inc
psraw
mov
outs
call
cmps
add
sahf
stos
lea
sbb
fsub
mov
and
call
xlat
mov
push
mov
add
xchg
push
push
sub
sbb
popa
mov
push
jmp
call
pop
sub
aaa
enterw
stos
xlat
out
mov
xchg
xchg
or
rcr
jno
popf
into
pop
ins
dec
mov
loop
mov
out
xchg
imul
outs
cmps
jecxz
rcl
xchg
sub
addr16
les
and
xor
xor
retf
add
sub
cli
jne
(bad)
cld
iret
pop
mov
or
jae
inc
das
enter
les
call
sub
mov
mov
pop
stc
inc
int
popf
adc
(bad)
lods
sub
and
loop
xor
xchg
jae
loopne
mov
enter
leave
mov
mov
imul
lahf
scas
addr16
jmp
(bad)
in
fiadd
ret
push
add
push
out
sbb
inc
add
(bad)
nop
iret
rol
sub
and
jecxz
cmp
add
outs
loop
mov
add
int
push
or
stos
push
stos
arpl
pop
rcl
minps
int3
je
inc
push
dec
(bad)
adc
mov
popa
xor
pop
movs
std
dec
iret
arpl
cdq
sar
pop
nop
cmc
or
arpl
xchg
pop
jge
and
pop
loope
lahf
add
gs
(bad)
jo
add
jne
mov
cmp
lods
or
scas
repnz
cmc
aad
push
jge
neg
xor
sbb
mov
stos
inc
nop
bound
into
ins
add
xor
jno
mov
aaa
mov
repnz
retf
hlt
mov
or
lods
pop
out
xchg
xchg
adc
cmps
jne
mov
mov
cmp
xchg
sbb
jmp
adc
and
mov
je
mov
push
inc
enter
fs
mov
and
jecxz
movs
ins
mov
mov
mov
jmp
xor
pop
inc
mov
xor
sbb
outs
jmp
mov
(bad)
adc
jecxz
div
mov
scas
ret
inc
hlt
jmp
std
add
cwde
cs
repz
cmp
add
test
stos
jl
lahf
sub
aas
xor
mov
push
jne
imul
nop
iret
(bad)
cld
pop
into
xchg
fwait
in
(bad)
stos
cmps
xor
cmp
dec
shl
loopne
inc
add
mov
jge
jno
fmul
cld
dec
popf
or
in
jbe
sbb
inc
mov
jle
cmp
les
cmps
dec
mov
push
ins
xchg
retf
adc
mov
adc
mov
pop
cmp
pop
jbe
les
rcr
push
or
jmp
jnp
push
mov
cli
push
lea
fsub
mov
cmc
sub
inc
setns
repnz
repz
mov
mul
daa
lods
inc
fwait
sbb
mov
sbb
fwait
repnz
in
(bad)
icebp
cwde
popf
test
ins
xchg
pusha
pusha
mov
xchg
div
jae
call
push
mov
mov
pusha
pop
jle
mov
out
les
fdivr
xchg
sbb
rcl
jbe
outs
jnp
movs
(bad)
pop
lods
into
stos
pop
inc
xor
cmp
cli
adc
(bad)
fsub
test
mov
lahf
sub
faddp
test
retf
retf
ret
add
movs
add
inc
push
rol
bound
fadd
xchg
lds
push
std
xor
icebp
xchg
xchg
mov
test
xor
loope
xor
mov
or
ins
es
cmp
leave
gs
cmp
dec
mov
dec
and
push
fdiv
lods
xlat
push
enter
and
mov
sub
jns
push
sti
push
sbb
mov
daa
or
retf
add
lea
push
adc
inc
pop
mov
inc
xor
xchg
dec
cmp
mov
cmp
imul
mov
jge
push
cmps
lds
jae
outs
mov
pop
pop
push
push
mov
add
xor
arpl
outs
jnp
bound
(bad)
fiadd
ror
xor
sbb
sbb
push
mov
dec
rcl
mov
sti
test
mov
cwde
jg
fdivr
mov
cmp
cmp
cmp
dec
(bad)
fdivr
inc
push
lods
das
mov
push
gs
mul
nop
repnz
nop
popf
stos
imul
mov
(bad)
hlt
std
mov
out
inc
xchg
icebp
mov
adc
shl
sub
jns
push
ja
je
xchg
mov
or
test
push
test
sbb
stc
xor
cld
int
arpl
push
aaa
int
retf
or
(bad)
hlt
test
clc
imul
shl
loopne
ins
mov
icebp
imul
mov
xchg
jl
enter
(bad)
lea
dec
lahf
inc
popf
or
frstor
dec
mov
jmp
add
inc
sbb
ret
daa
jmp
(bad)
sub
sbb
retf
push
sahf
ins
adc
xor
leave
data16
dec
sub
push
xor
rcr
push
(bad)
movs
daa
pop
rol
out
mov
mov
outs
pusha
loope
stos
ret
cmp
dec
cdq
pop
int
popa
enter
mov
das
pushf
mov
hlt
mov
push
in
inc
test
and
in
(bad)
fcomp
cli
ffreep
dec
dec
mov
loop
in
fild
lods
dec
adc
cdq
sar
adc
and
(bad)
jmp
es
fadd
jge
rcr
or
cmp
cmp
sub
push
xor
and
outs
cmp
ror
out
(bad)
mov
imul
nop
mul
add
ret
ins
fnstsw
retf
enter
and
fucom
dec
mov
das
pop
sti
shr
inc
imul
push
jae
cld
or
ss
iret
fild
bound
xchg
push
jge
mov
or
or
mov
or
mov
push
pop
adc
push
pop
out
push
pop
jae
test
imul
xchg
inc
sbb
mov
jae
pop
lods
in
and
test
add
push
push
aaa
jmp
pop
aaa
sub
adc
js
outs
mov
ret
mov
inc
sar
xchg
lahf
imul
add
add
outs
loope
xchg
cli
popa
adc
or
sub
pusha
push
mov
jle
outs
rol
mov
sub
mov
jle
jns
(bad)
cli
or
and
in
or
rol
add
adc
mov
ss
loope
or
ss
pop
dec
rcl
jae
loope
push
fs
(bad)
mov
(bad)
mov
das
dec
pop
push
clc
and
cdq
mov
jmp
movs
adc
test
pop
mov
mov
cmp
jb
pop
clc
(bad)
(bad)
jns
ds
xor
push
dec
in
xlat
out
in
out
jmp
aaa
sub
icebp
cmc
and
ror
and
retf
cld
rcl
push
cli
pop
dec
or
ret
mov
sbb
push
test
jge
cmc
push
and
stos
push
outs
adc
bnd
int3
ret
mov
xchg
xchg
repnz
mov
mov
ror
inc
and
push
or
bound
inc
mov
xor
push
mov
call
enter
xchg
push
(bad)
fsubrp
scas
call
dec
cmp
pop
cmps
add
xor
add
movs
aam
pop
dec
mov
aam
and
outs
mov
mov
in
sbb
cli
mov
nop
stc
pushf
nop
jne
fcom
clc
jb
(bad)
cmp
into
push
idiv
inc
add
icebp
iret
loopne
iret
arpl
mov
cdq
out
mov
lods
test
fist
mov
sbb
ja
stos
pop
xor
cmp
mov
adc
add
ins
mov
lods
(bad)
jg
jnp
adc
jnp
cli
(bad)
iret
test
outs
pop
pop
enter
out
mov
popf
pop
cld
cdq
pop
stos
push
mov
into
pop
outs
push
cmp
push
mov
fiadd
rcl
dec
jmp
fsub
stos
lds
int
(bad)
loope
ficom
sub
xor
bound
fiadd
not
(bad)
jp
dec
cwde
jnp
mov
jns
int3
sub
adc
xchg
ret
mov
aam
mov
push
xor
pop
mov
cmp
jecxz
dec
into
dec
jb
jo
inc
loope
add
and
fs
jnp
jmp
push
addr16
sub
mov
or
repnz
push
bound
pop
int3
mov
sub
repnz
in
mov
sbb
mov
cs
dec
stc
jnp
call
cmps
idiv
adc
(bad)
push
add
or
into
dec
ja
(bad)
and
js
sub
inc
movs
xor
ss
test
sti
or
repnz
and
dec
lds
pushf
test
push
sbb
push
pop
stc
(bad)
xchg
retf
lods
mov
shr
shl
daa
xchg
mov
adc
mov
xor
hlt
dec
arpl
scas
sar
int3
sbb
leave
xchg
rcr
cmp
out
imul
adc
das
scas
mov
rcl
das
rcl
add
ins
clc
mov
jmp
sub
fsub
movs
jmp
jns
dec
outs
mov
aad
fst
xchg
ds
jmp
leave
int3
mov
stos
inc
push
fcmovnbe
xchg
push
cwde
cmp
add
lods
repnz
xchg
outs
sbb
scas
jp
mov
sbb
xor
sbb
sub
clc
xchg
jmp
sub
in
adc
out
sub
imul
xchg
fwait
(bad)
cmp
into
add
jne
pop
mov
hlt
aaa
lahf
add
xor
mov
nop
or
ins
pop
push
and
pop
push
mov
dec
or
push
add
fsub
into
mov
popf
cmp
cs
(bad)
mov
mov
sub
arpl
repnz
dec
ins
inc
ss
cs
dec
adc
je
xor
mov
loope
mov
or
sar
retf
dec
sbb
xchg
cs
push
cli
xchg
pushf
pop
inc
movs
jmp
pushf
mov
fstp
jo
out
dec
jg
aaa
xor
xor
mov
jl
je
adc
pop
push
repnz
inc
pusha
mov
call
mov
mov
and
sbb
pop
fidiv
fwait
test
sbb
arpl
mov
int
hlt
sbb
cmp
std
add
adc
mov
stos
ret
mov
cmp
add
fsub
xor
jl
mov
push
lods
xchg
movs
mov
sar
mov
stos
jmp
xchg
add
inc
or
in
jb
pop
add
mov
mov
mov
dec
not
inc
test
jmp
iret
xor
dec
sub
mov
pop
iret
xchg
lock
dec
mov
mov
test
cmc
mov
retf
mov
daa
or
lea
int3
pop
xchg
cmp
xor
imul
movs
dec
fsubr
lods
cli
(bad)
add
aam
imul
aas
mov
out
stos
mov
pop
mov
pop
int3
fdivr
pop
dec
mov
sub
add
mov
push
dec
movs
cdq
inc
(bad)
push
scas
and
rcl
into
popa
lahf
addr16
movsx
dec
leave
fsubr
aam
fld
sbb
add
je
enter
xchg
inc
fwait
xchg
test
test
cmps
lods
cmp
jmp
cmp
call
push
add
cmp
neg
cmp
adc
cmp
cmp
imul
retf
sete
add
pop
pop
jg
loop
dec
cmps
add
and
mov
xor
sbb
or
enter
in
clc
pop
mov
daa
push
push
and
mov
ds
test
sbb
(bad)
sar
cmp
push
(bad)
call
sar
and
jl
jnp
jno
imul
addr16
xor
push
popa
sti
push
push
mov
lahf
(bad)
mov
and
push
out
outs
aam
das
fdivrp
mov
pop
or
inc
pop
push
dec
push
movs
stos
(bad)
mov
int
mov
or
addr16
jle
and
or
arpl
and
rep
dec
cmp
retf
inc
shl
xor
adc
fwait
add
imul
dec
fldcw
cmp
mov
xor
js
int
outs
(bad)
fisttp
dec
pop
adc
inc
rol
push
fisubr
icebp
or
push
sbb
out
and
sbb
retf
xchg
mov
sub
cmp
mov
and
or
aas
pop
stc
cmps
adc
aas
popa
outs
test
data16
or
out
push
jo
add
mov
ds
mov
call
call
add
inc
cld
dec
iret
movs
push
adc
ja
fistp
fistp
(bad)
loope
jl
popa
addr16
jnp
jae
or
test
ins
cmp
adc
push
ins
clc
movaps
iret
jnp
mov
pop
inc
and
jge
fisub
fcmovb
call
dec
xor
shl
retf
mov
stc
imul
cmp
jl
test
or
repz
jbe
mov
mov
(bad)
push
in
xlat
lock
inc
add
mov
push
dec
pusha
scas
and
dec
jle
call
jbe
ret
dec
ins
add
pop
sub
push
call
jge
pop
push
std
dec
out
lock
adc
dec
inc
je
stos
xor
add
jno
push
push
and
out
ja
xchg
push
stos
fsubr
mov
lds
pop
lock
iret
xchg
mov
mov
mov
daa
pusha
xor
inc
sbb
xor
nop
push
aaa
(bad)
or
jnp
jmp
jge
dec
(bad)
and
aas
inc
sub
dec
aam
cld
inc
imul
ds
mov
das
mov
ins
cmps
push
dec
xor
dec
adc
cmc
or
sbb
das
(bad)
lea
mov
sub
sub
or
push
dec
mov
mov
pop
xor
inc
pop
push
int
rol
pop
mov
arpl
leave
loope
js
leave
adc
sti
ret
sub
repz
(bad)
call
xor
mov
mov
mov
mov
add
jb
xchg
dec
mov
ss
ficom
adc
std
push
retf
pop
and
inc
loope
pop
ss
sub
ds
mov
lahf
push
jno
mov
in
and
cmps
rcl
jmp
sahf
push
cmc
test
mov
das
icebp
out
jmp
(bad)
xchg
and
jbe
inc
in
adc
daa
sub
icebp
push
inc
mov
jmp
sbb
and
mov
or
ss
xchg
adc
fld
bound
sbb
sbb
mov
stc
or
mov
fadd
dec
add
xor
push
sti
adc
inc
inc
sbb
jle
shl
or
aas
sar
sahf
ffreep
arpl
in
aaa
pop
imul
out
inc
cmp
icebp
jmp
mov
jo
dec
mov
inc
das
in
fadd
(bad)
outs
(bad)
dec
test
inc
cmc
xchg
icebp
call
rcr
xor
pop
adc
pusha
nop
inc
xchg
test
inc
push
repz
leave
mov
mov
out
fisttp
cmp
xor
aam
sbb
sar
aad
imul
arpl
fyl2x
test
mov
in
mov
pushf
xchg
cli
loope
pop
dec
and
jnp
stc
imul
or
xchg
cs
adc
in
push
push
pop
retf
adc
add
call
fisttp
outs
cmp
xchg
jge
xchg
dec
fld
cmp
jae
test
fdiv
ja
mov
sub
inc
fisubr
inc
inc
call
pushf
xlat
mov
shl
fiadd
int
je
or
cli
inc
cmp
mov
ror
mov
or
aam
pop
mov
sbb
sbb
mov
add
arpl
int
in
stc
(bad)
push
mov
cmp
adc
mov
push
jns
xor
es
xchg
mov
sahf
cmp
xchg
fisubr
and
add
outs
scas
mov
inc
or
and
lods
fbstp
dec
mov
mov
lock
jle
inc
mov
ins
push
inc
loopne
es
imul
sub
mov
leave
ins
pop
mov
or
jecxz
push
dec
sub
pop
je
stc
adc
aam
pop
push
mov
dec
pushf
push
add
inc
movs
aaa
push
bound
lea
pop
xor
inc
mov
cdq
rcl
clc
mov
aam
xchg
aas
push
add
mov
sub
fist
add
fcmovbe
mov
inc
cmp
arpl
out
cmp
pop
retf
sub
(bad)
popa
popf
add
in
mov
lock
sub
jecxz
(bad)
pop
lds
push
clc
pushf
test
mov
fisub
push
xchg
hlt
bnd
mov
icebp
cs
push
loop
test
push
push
push
scas
hlt
cmps
aaa
or
pop
add
or
stos
sbb
mov
gs
cmp
icebp
inc
out
and
mov
out
lock
xor
repnz
scas
aaa
inc
into
cld
loop
sub
repz
xchg
cmp
mov
dec
popa
cmp
mov
and
lahf
xor
push
sub
lea
push
(bad)
aam
xor
faddp
xchg
cmc
mov
push
bnd
jbe
fisub
mov
add
xchg
mov
out
js
dec
pop
and
or
rcr
add
xchg
aas
aas
push
cmps
(bad)
jp
pop
call
stos
sti
inc
xor
lods
lock
mov
scas
retf
add
add
in
repz
and
mov
push
(bad)
movs
jae
xor
inc
outs
jle
je
xor
hlt
sahf
nop
shl
cmp
loop
ss
mul
jnp
pusha
sub
and
aaa
adc
loopne
sbb
inc
aas
jns
daa
xlat
adc
mov
sti
and
mov
inc
in
sti
cmps
jl
aas
xor
mov
or
neg
nop
fndisi(8087
dec
in
mov
mov
jns
inc
jnp
jne
push
pop
jmp
xor
(bad)
dec
lods
int3
aaa
adc
icebp
mov
retf
sbb
pusha
cmc
mov
aas
adc
jge
mov
pop
scas
pop
out
jns
mov
(bad)
loope
push
imul
repnz
add
sub
xchg
sub
mov
mov
stos
xchg
fadd
out
les
cmp
adc
or
pop
repz
rol
xchg
push
jae
add
adc
mov
jno
xchg
(bad)
out
pusha
xor
data16
ds
fldcw
or
cmp
call
popa
jb
cld
adc
in
cmps
xor
add
sbb
imul
cdq
or
sbb
mov
js
mov
mov
adc
inc
fcomi
mov
rol
push
jge
push
adc
add
lahf
ret
pop
sbb
adc
arpl
imul
adc
cwde
ja
cmp
cmp
mov
cmps
inc
xor
test
mov
loope
out
nop
jge
ins
ja
imul
(bad)
stos
and
or
iret
rol
hlt
test
(bad)
fcom
mov
or
xchg
test
sub
out
cmp
arpl
sahf
lods
pop
fnstenv
test
inc
das
in
mov
mov
popa
repz
sbb
lds
dec
xor
jnp
ret
mov
mov
sub
cmp
aas
mov
inc
ret
icebp
into
nop
cmp
pushf
cld
xchg
fs
call
or
aas
or
cmp
push
mov
xor
fsub
jne
sub
mov
imul
loopne
out
(bad)
push
sbb
and
push
add
test
adc
mov
push
ins
dec
arpl
sub
mov
sub
add
call
cdq
mov
fiadd
shr
jne
pop
push
or
push
adc
daa
pop
adc
push
pop
movs
jmp
(bad)
mov
(bad)
sub
icebp
push
mov
mov
adc
scas
xchg
aad
xchg
das
sbb
dec
aam
enter
sub
ja
xor
rcr
cmp
mov
aad
xchg
pop
repz
cli
iret
and
or
adc
cmps
mov
mov
dec
dec
pop
rcl
rcr
aas
jecxz
xchg
sbb
xor
pop
daa
repnz
rcr
clc
inc
mov
adc
je
ficom
retf
inc
xchg
out
jg
dec
jl
popa
jl
mov
mov
adc
ffree
add
adc
lds
aam
mov
psubw
std
xor
inc
iret
mov
or
xchg
cwde
jmp
inc
(bad)
xchg
push
jae
inc
jmp
inc
enter
repz
stc
popa
pushf
sti
loopne
sahf
jge
xor
idiv
retf
repnz
mov
xchg
or
fucomip
dec
fild
and
loop
jmp
fdiv
(bad)
cwde
pop
adc
sub
test
(bad)
call
imul
mov
mov
sbb
and
mov
(bad)
jg
add
outs
outs
mov
(bad)
nop
dec
into
mov
retf
stos
xor
cs
jmp
pop
mov
push
call
sbb
sbb
push
sub
test
inc
mov
jecxz
sub
scas
push
sbb
aam
scas
mov
loopne
push
imul
or
bound
pop
pop
xchg
xchg
mov
lods
and
bound
in
ds
scas
cmc
mov
push
cmc
cdq
cmp
dec
mul
das
push
xchg
cmp
lock
inc
mov
dec
pop
add
mov
lea
inc
cmc
jmp
cmp
mov
pop
mov
jae
push
jnp
sbb
xlat
popa
sub
das
call
sbb
loopne
mov
(bad)
or
pop
push
fwait
add
xchg
pop
or
cli
fild
les
xchg
push
iret
es
loopne
arpl
je
fcom
xchg
push
in
adc
push
test
add
add
sbb
(bad)
in
xor
and
add
enter
mov
jle
(bad)
out
fwait
test
rcr
daa
push
adc
leave
mov
cmp
push
mov
arpl
dec
movs
adc
das
imul
push
adc
out
xor
or
add
in
hlt
(bad)
inc
lds
mov
mov
push
sbb
call
lock
push
jle
pusha
pusha
neg
sbb
es
retf
out
push
mov
jo
and
hlt
(bad)
(bad)
(bad)
fwait
loope
add
mov
fist
mov
imul
gs
imul
sub
dec
sti
or
fldenv
ins
lock
adc
aad
imul
cdq
xchg
add
and
std
mov
stos
jmp
xchg
repz
mov
sbb
pusha
xor
daa
jmp
mov
mov
push
xchg
pop
out
lods
ja
or
or
fld
push
pop
inc
mov
popf
ror
sbb
pop
call
out
into
fadd
int
cmp
jmp
test
dec
dec
aad
sub
inc
inc
fsubr
test
jmp
dec
iret
push
stc
jae
test
sti
out
dec
and
lea
xor
push
clc
ja
mov
mov
fimul
inc
xchg
dec
add
ins
or
fidivr
jne
jg
xor
mov
lds
rcr
or
ds
fist
xor
cmp
push
retf
inc
cdq
dec
push
aad
fsub
lods
lods
js
in
dec
bound
call
std
cmp
cmc
sub
lahf
mov
movs
sub
repz
sbb
inc
pusha
lods
(bad)
hlt
retf
nop
jg
dec
ds
mov
in
pop
adc
jmp
or
or
mov
mov
mov
fbld
out
xchg
shl
iret
scas
add
fisub
mov
pop
cmc
add
out
test
es
rcl
std
call
(bad)
mov
mov
xchg
add
lock
je
push
sbb
(bad)
lea
mov
mov
add
nop
outs
out
out
xlat
inc
inc
sti
std
push
jb
xor
lds
inc
pop
ins
xchg
dec
call
jns
jb
dec
xchg
jle
xor
movs
sbb
sti
add
adc
and
adc
cmp
jmp
sbb
int
sub
dec
leave
imul
mov
pop
lods
(bad)
sbb
cmp
call
mov
loop
retf
stos
mov
or
pusha
movs
das
jl
fwait
lods
(bad)
sub
dec
push
loop
xchg
xor
fst
dec
or
in
cmps
mov
ins
jge
pop
xor
cld
hlt
retf
les
mov
sbb
mov
add
imul
cdq
or
sub
test
push
fisubr
jecxz
xchg
pop
repnz
push
mov
or
(bad)
inc
aad
cmp
or
pop
inc
loop
mul
mov
mov
sbb
mov
test
mov
ret
aam
ds
cli
cmps
pop
cmp
mov
mov
ret
push
push
or
or
lock
int3
xchg
jo
sti
lds
cld
mov
push
push
(bad)
mov
cmps
in
test
push
sahf
das
fld
sahf
mov
dec
call
xchg
out
pop
mov
outs
inc
inc
loop
sbb
(bad)
ficomp
sar
adc
sbb
les
repz
call
xor
cld
jnp
ins
add
sub
cmp
pop
jo
int3
es
dec
inc
xchg
jmp
mov
cli
shl
(bad)
in
xor
cmp
jmp
jecxz
adc
lods
ds
movs
imul
stos
jecxz
sub
xchg
shr
cmc
push
icebp
xchg
xchg
jo
sbb
mov
ror
mul
sub
dec
xlat
xchg
jbe
sub
aas
daa
jns
aam
jns
(bad)
pop
stos
aad
adc
cli
mov
mov
arpl
fadd
repnz
mov
mov
mov
es
adc
(bad)
jge
test
or
mov
test
pop
addr16
ds
out
xchg
jmp
xor
inc
pop
and
mov
retf
test
pop
ret
pushf
test
ins
or
call
popf
test
mov
adc
push
ins
call
add
in
in
sbb
push
sar
aam
and
cmps
jno
repnz
ins
lock
std
xor
repz
pop
or
xor
jb
repnz
sahf
or
cmp
cdq
rol
or
pop
jle
jnp
je
in
lea
mov
cli
lahf
mov
dec
xor
mov
sub
loope
test
jne
mov
jns
ffree
out
std
cdq
fimul
pop
xor
leave
push
popf
xor
push
in
retf
in
cmp
popw
pop
jne
out
inc
repz
mov
adc
scas
jno
lods
mov
mov
pop
ror
(bad)
jae
sar
movs
hlt
xchg
movs
push
in
cs
daa
inc
sub
mov
je
std
xor
retf
not
imul
(bad)
aas
aaa
pushf
ins
movs
rol
call
pushf
outs
and
iret
ror
adc
(bad)
mov
es
xlat
lea
stc
jmp
mov
int3
push
xor
pop
fstp
sti
push
jg
movntq
ficom
iret
push
push
pop
cmp
cdq
sub
mov
ss
addr16
pop
or
or
(bad)
cld
xchg
sbb
xchg
inc
cmp
xor
mov
inc
(bad)
ror
adc
add
dec
mov
sub
dec
out
mov
mov
(bad)
sbb
lods
jns
sbb
add
call
in
(bad)
mov
jnp
xchg
js
pop
add
mov
cmp
push
shr
xlat
push
cmp
or
outs
retf
mov
lahf
add
push
mov
jnp
fst
movs
rcr
jmp
mov
ja
sbb
push
jns
gs
lahf
repz
nop
ret
inc
dec
bound
push
sub
add
daa
lock
add
pop
jmp
mov
(bad)
lea
aas
or
scas
ds
fild
hlt
cdq
xchg
push
in
fistp
jle
popf
retf
pop
sbb
call
mov
inc
sub
aad
je
mov
inc
inc
inc
leave
sar
cmc
daa
mov
xchg
mov
jmp
sbb
push
ret
aam
std
mov
lods
pop
jae
cmps
sub
pop
pop
jle
or
cmps
mov
std
inc
movs
inc
jnp
rep
(bad)
cmps
bound
ret
inc
mov
sbb
sub
out
jo
test
xchg
in
or
jl
add
sbb
jno
mov
scas
mov
pop
push
loop
or
enter
lods
in
nop
inc
into
mov
cmc
jp
loope
syscall
push
push
sub
xchg
fld
aam
js
jge
cli
fsub
push
enter
xor
gs
fwait
sub
jmp
retf
test
(bad)
cmps
shr
push
xchg
push
xchg
imul
sbb
mov
sub
fiadd
repnz
test
cdq
repz
add
and
lahf
add
jo
xor
mov
jl
cmp
jo
repnz
repz
adc
nop
pushf
sbb
mov
and
pop
jbe
sti
push
gs
push
call
ret
jmp
(bad)
aad
out
ret
test
stos
pusha
jne
out
pop
(bad)
lahf
push
jne
push
push
scas
idiv
mov
ds
and
fwait
lea
xchg
mov
mov
dec
clc
pop
xchg
rol
add
sub
lahf
je
or
mov
in
(bad)
pop
cmps
cdq
mov
mov
(bad)
jae
scas
ins
movs
inc
fcomi
push
into
jmp
cmc
sub
mov
outs
lock
pop
cmps
test
cmp
out
and
mov
hlt
int3
jmp
jns
in
xchg
js
and
adc
imul
xchg
xchg
sub
pop
(bad)
(bad)
lock
dec
dec
movs
arpl
jne
ret
imul
cld
imul
sub
daa
sti
cmp
cmp
int
scas
mov
xor
out
aaa
jne
mov
pop
sub
sahf
rcl
outs
jge
adc
xlat
frstor
or
or
or
xor
loopne
push
enter
test
jns
xchg
xchg
int3
ss
mov
rol
mov
scas
cmp
mov
cmp
mov
imul
pop
test
fdivr
jg
dec
loopne
xchg
sub
xchg
lock
retf
popa
and
test
mov
sbb
cwde
fucom
fdivr
hlt
(bad)
sub
sbb
sub
fmul
cmp
test
inc
or
fimul
mov
or
clc
adc
push
push
jecxz
push
ins
adc
mov
mov
jp
push
test
jp
dec
cs
xchg
lock
lds
and
iret
xchg
test
mov
mov
cld
and
mov
popf
xchg
data16
nop
sub
mov
lods
out
stos
das
mov
imul
mov
or
add
fiadd
(bad)
loop
sbb
add
aam
arpl
fistp
xchg
xchg
pop
sar
cmp
xchg
ret
xor
adc
sub
mov
push
jle
xchg
aad
xor
shr
cmp
lea
mov
rcl
lock
test
fdivr
imul
jb
stos
inc
push
push
aaa
sub
jb
outs
pusha
into
lock
push
loopne
ja
adc
jae
mov
push
push
jo
push
popf
mov
daa
rol
(bad)
xchg
mov
test
jmp
retf
cmp
lods
dec
adc
fsub
and
popa
lods
ds
mov
add
aam
and
loopne
fiadd
int
mov
pushf
jp
mov
add
pop
movs
mov
fcomp
pop
mov
sub
adc
mov
cmp
addr16
sbb
sbb
dec
cwde
push
call
push
sbb
add
(bad)
xor
in
cwde
das
sbb
popa
mov
dec
xchg
(bad)
std
sar
adc
in
test
mov
aas
inc
jmp
mov
addr16
ror
xor
ds
mov
push
inc
add
call
add
mov
nop
pop
call
fs
je
mov
pop
fisttp
jecxz
nop
and
mov
imul
inc
out
icebp
test
ja
(bad)
mov
and
fwait
cmp
test
cmp
int
dec
adc
cld
sbb
fcmovb
inc
jg
xchg
adc
test
add
mov
f2xm1
loopne
pop
pop
popa
add
fdiv
icebp
scas
xchg
push
test
frstor
ins
xchg
xor
data16
mov
lahf
jp
sbb
mov
jg
and
and
pop
ss
movs
inc
repz
retf
adc
jg
stc
jge
xchg
xchg
add
js
shl
shr
inc
mov
push
mov
jns
test
or
mov
fisttp
cdq
in
jno
adc
out
stc
xchg
jnp
call
inc
push
mov
push
pop
je
dec
rcr
pop
cmp
ins
dec
pop
mov
rol
xchg
adc
repz
dec
(bad)
out
aas
fwait
loop
mov
test
sub
sti
out
out
mov
stc
out
fadd
(bad)
sbb
push
pop
pop
imul
das
inc
pop
repnz
movs
sbb
pop
xchg
jp
mov
shr
xchg
xor
and
dec
(bad)
cmp
hlt
in
fisub
and
xor
mov
add
xor
adc
mov
mov
fsub
push
sbb
xor
lods
push
jle
or
mov
inc
mov
and
push
jmp
loop
shl
xchg
cmp
les
stos
cmps
out
pop
sbb
adc
adc
icebp
cmp
mov
xor
pop
ficomp
pop
push
or
and
je
out
imul
out
push
mov
sub
outs
pushf
push
je
and
lea
and
jno
std
push
dec
adc
adc
add
xchg
bnd
out
movs
cmp
mov
mov
push
mov
js
fisttp
out
fidiv
inc
sub
inc
xor
pand
enter
and
sbb
or
clc
sbb
pop
push
or
scas
dec
retf
dec
ds
adc
xor
sub
pop
xchg
rcl
repnz
dec
adc
test
xor
adc
sbb
mov
into
jno
xor
jmp
stc
fidivr
fidiv
jo
stos
sbb
std
mov
andnps
bound
push
ror
push
cld
in
sti
mov
add
add
test
pop
mov
jecxz
into
int
xchg
pop
ins
adc
aas
add
add
and
adc
mov
sub
in
cmc
stos
in
mov
cdq
cmps
fldenv
push
retf
retf
loope
pop
ss
pop
push
xor
lahf
mov
dec
or
dec
fadd
lods
pop
push
dec
dec
nop
aas
fmul
inc
movs
mov
in
je
xor
mov
push
sbb
js
das
xor
fcmovu
rol
stos
lock
sbb
push
adc
mov
test
ins
inc
sbb
xchg
fcom
rcr
or
hlt
and
jo
push
mov
push
loope
jecxz
fidivr
jge
fcmovbe
call
or
iret
add
int
sbb
fs
mov
pop
shr
add
sbb
js
push
inc
js
sbb
ins
add
sahf
adc
pop
adc
adc
mov
adc
dec
jno
popa
stc
ja
xor
shl
cwde
aam
lods
ret
out
sub
enter
call
js
add
jmp
jno
mov
inc
mov
pop
xor
mov
test
inc
or
(bad)
mov
lahf
(bad)
mov
sub
mov
popf
cmp
push
mov
nop
scas
scas
xchg
lea
or
in
pop
repz
and
test
sub
mov
sbb
or
jb
pop
in
or
aad
jne
inc
into
mov
or
jo
push
pop
xchg
dec
xor
push
dec
hlt
mov
dec
fisubr
fs
pop
push
(bad)
movs
dec
mov
popa
jmp
dec
jne
jnp
fwait
adc
or
cmp
pop
pop
(bad)
in
jb
jbe
shl
les
pop
(bad)
sbb
dec
dec
fst
pop
jecxz
mov
loopne
sub
out
fld
xchg
js
and
jg
mov
mov
inc
mov
mov
mov
pushf
(bad)
jae
je
rcl
jge
cmps
inc
sbb
into
(bad)
jmp
loop
movs
pusha
cmp
pop
mov
js
repz
popf
jb
cmp
jo
enter
push
repnz
pop
das
arpl
xchg
jne
add
inc
cld
outs
jecxz
aaa
out
sub
cmp
ret
mov
pop
sbb
xor
bound
jo
outs
fnstenv
xor
jmp
repz
push
icebp
pop
sahf
aaa
xor
pusha
and
dec
jne
mov
fdiv
push
test
mov
push
out
sahf
mov
inc
mov
les
or
aam
lock
cmp
loopne
xchg
dec
idiv
xor
fwait
jno
sbb
ds
cli
(bad)
xor
mov
and
inc
cmp
sbb
xchg
mov
cmp
in
(bad)
ds
fadd
xor
mov
and
jne
add
(bad)
and
enter
pop
jmp
sub
sbb
pop
aaa
or
mov
cdq
xchg
mov
jmp
cmp
sub
mov
add
or
sbb
or
inc
cmc
xor
jbe
movs
or
dec
popa
mov
fs
and
dec
in
imul
jmp
sub
jle
xchg
hlt
outs
xchg
in
retf
jne
push
(bad)
and
xchg
cmc
popa
(bad)
retf
inc
push
or
cs
jle
cld
sbb
pop
jge
dec
push
xchg
mov
dec
repnz
nop
fld
inc
in
inc
inc
(bad)
jg
dec
mov
sbb
in
jle
lock
lock
mov
xchg
stc
push
xchg
stos
mov
(bad)
cmp
mov
inc
push
cmp
and
or
jne
cmps
cdq
ins
inc
sub
mov
inc
ss
push
push
popa
cld
bound
or
scas
push
test
lea
and
push
sub
cld
aad
mov
sbb
jae
dec
hlt
jmp
into
jmp
ins
jmp
mov
fidivr
sbb
sbb
std
call
and
pop
std
out
push
xor
push
sbb
data16
dec
mov
mov
cmp
or
push
adc
call
shl
retf
xchg
scas
hlt
(bad)
call
lods
push
mov
fwait
out
add
pop
nop
aam
jp
cdq
pop
cs
neg
fstp
mov
cs
call
jmp
jecxz
stos
aas
xchg
sub
mov
not
xchg
lods
out
pop
in
xchg
and
in
int3
cli
stos
mov
jne
stos
add
je
xchg
enter
push
sub
or
in
cmp
lock
out
jp
pop
jp
js
in
aam
dec
das
das
and
or
sar
(bad)
jl
push
mov
sbb
pop
sub
mov
push
jg
jno
adc
mov
cmp
push
or
ja
dec
lock
jbe
jnp
shl
in
add
ror
test
dec
mov
int3
pop
push
push
dec
lods
pop
jp
push
movs
repnz
in
pop
xchg
pop
fidivr
mov
div
icebp
cmp
scas
push
xor
mov
outs
rcl
xchg
mov
push
push
scas
sahf
push
dec
loope
add
aas
aas
mov
fld
mov
jno
call
movs
cmp
sahf
cmp
ins
dec
retf
mov
jge
sub
sahf
pop
and
jecxz
inc
stos
mov
mov
(bad)
jmp
mov
or
pop
inc
jo
or
sub
in
mov
mov
loop
movs
cdq
out
clc
mov
loopne
or
icebp
jp
hlt
dec
clc
cmp
int3
mov
inc
add
adc
(bad)
push
adc
aas
mov
sbb
add
xchg
xor
in
imul
gs
mov
inc
add
mov
loope
fild
lods
out
mov
fwait
pop
fsub
push
into
xor
mov
jp
test
in
fs
or
and
sbb
mov
movs
cdq
push
mov
dec
pop
mov
cmp
fcomp
cs
cmps
out
outs
stos
fs
jb
loope
add
fwait
nop
nop
cmp
movs
std
in
xor
out
lahf
xor
out
inc
jmp
sub
dec
not
jbe
or
pop
push
loopne
ins
push
mov
sar
jns
loope
fcmove
mov
movs
pop
and
dec
iret
sbb
xor
or
test
aad
rcr
stos
mov
sahf
clc
out
xchg
(bad)
stc
dec
repz
out
sbb
sub
ss
mov
sahf
stc
lods
les
mov
mov
(bad)
mov
push
movs
cdq
dec
sbb
outs
jmp
xchg
pop
loope
or
fiadd
inc
add
lods
dec
sub
inc
cmp
sahf
pop
add
in
(bad)
mov
inc
jbe
sub
cmc
in
hlt
out
xchg
ins
add
cmp
es
or
retf
xor
and
icebp
mov
jo
fsub
(bad)
add
lds
push
ret
popf
mov
popf
mov
out
pop
xor
adc
jnp
push
and
add
cmps
es
sbb
outs
or
(bad)
jb
push
mov
push
cld
cld
lea
mov
xchg
mov
adc
(bad)
sar
cmp
je
dec
push
loope
rol
jo
cmp
lods
inc
cld
sbb
sub
add
icebp
mov
add
sub
out
(bad)
sbb
sbb
xor
pop
pop
mov
push
jecxz
lock
add
ins
mov
push
out
js
shl
adc
xchg
sbb
pusha
(bad)
test
push
jge
cmp
cwde
gs
je
outs
(bad)
std
mov
mov
push
mov
in
jmp
sub
lea
sar
jp
mov
shl
xor
mov
jmp
jne
jl
cmp
stos
movs
xchg
mov
jl
mov
loopne
icebp
cmc
jae
or
mov
bnd
sahf
icebp
mov
adc
cli
test
pop
les
out
(bad)
adc
int3
test
(bad)
aam
sub
out
cmp
jo
icebp
jmp
vcmpps
aas
test
dec
fstp
jno
in
inc
xor
out
jmp
lds
mov
mov
sub
push
out
nop
out
and
jno
xchg
sti
pop
sbb
outs
jo
cmps
push
lock
xor
std
xchg
or
mov
xor
loope
jb
and
jb
or
cmps
in
push
dec
fucom
cmp
cld
mov
(bad)
into
xchg
aaa
pop
ret
sbb
in
lods
xchg
mov
mov
int3
mov
adc
pop
or
cmp
xlat
cli
add
(bad)
fdivr
je
lods
mov
push
cmps
inc
or
lea
movs
jp
les
enter
retf
lock
lds
mul
ficomp
jmp
test
xor
inc
push
test
call
je
pop
cmps
popf
xchg
add
mov
int3
aas
mov
rcr
inc
ja
je
movs
cmp
pop
outs
sbb
(bad)
jmp
push
cmp
ror
cmp
cmp
jmp
pop
stos
out
popf
pop
mov
pop
sub
and
test
fld
push
cdq
sahf
adc
jg
and
sbb
xchg
pop
cmp
cli
adc
scas
retf
jns
cmp
xlat
sahf
lea
out
lahf
mov
mov
retf
push
lods
dec
cwde
push
rcl
fnstenv
mov
lods
cmp
outs
je
sahf
add
leave
fisttp
mov
rol
cmp
ror
inc
lods
mov
(bad)
xchg
dec
sti
xchg
adc
add
in
call
mov
fcmovnb
or
cdq
and
mov
imul
les
int3
inc
jae
sub
sbb
add
scas
pusha
mov
mov
inc
mov
cli
xchg
sar
or
push
and
push
pop
dec
test
aam
ins
aas
sbb
adc
retf
int
in
popf
and
dec
xor
adc
inc
pop
test
in
mov
nop
cmps
push
jb
pushf
ficom
dec
hlt
call
mov
mov
dec
add
jge
fild
int
xchg
hlt
rcl
add
cmp
fs
mov
xchg
xchg
cmp
xchg
je
jle
mov
jnp
in
loopne
sbb
xchg
fst
adc
popf
cmp
cmp
rep
pop
cdq
sbb
pusha
stos
adc
nop
int
sti
sub
leave
sbb
cmp
jns
int
or
outs
xor
jecxz
imul
cs
adc
das
gs
adc
std
and
or
daa
stos
shr
daa
cwde
movs
aas
push
mov
loopne
aaa
sub
in
cdq
or
rol
outs
push
pushf
mov
or
fwait
cs
add
mov
jbe
scas
sbb
mov
es
xlat
mov
in
dec
mov
inc
mov
outs
jno
pop
mov
imul
cmps
stc
pop
inc
test
and
scas
cmp
push
jbe
sub
xor
daa
ret
inc
jg
loopne
jmp
ins
pop
ins
add
dec
xchg
jmp
jnp
in
test
test
push
(bad)
xor
test
mov
out
sub
movs
je
stos
fiadd
sahf
leave
cwde
xor
mov
mov
mov
jp
sbb
pop
push
push
iret
(bad)
pop
jbe
xchg
cmp
add
sub
mov
inc
sub
jo
fcomi
ds
or
movs
sbb
pop
xor
mov
xchg
and
ins
jbe
jae
sub
push
aam
addr16
sub
daa
repnz
shl
push
and
mov
(bad)
(bad)
mov
pusha
sub
or
adc
fistp
inc
into
out
call
hlt
add
or
xor
sub
push
push
push
sub
test
cmp
inc
aaa
ins
inc
es
leave
retf
fwait
xchg
jp
jg
out
pop
test
mov
mov
(bad)
or
popa
test
sbb
sbb
cmc
icebp
cmps
push
sub
pop
stos
and
xor
(bad)
int
scas
fisttp
fnsave
inc
nop
(bad)
(bad)
fistp
sub
nop
and
out
addr16
in
aas
call
push
js
sbb
dec
mov
ss
add
movs
ja
icebp
mov
and
imul
jne
fcom
cmp
adc
sbb
out
clc
rcr
int3
mov
dec
xor
add
mov
inc
aaa
inc
dec
and
push
scas
idiv
sub
lock
jno
loop
mov
cwde
jno
inc
psubw
push
mov
loopne
jge
rcl
xchg
mov
jo
stos
adc
inc
jge
or
jbe
es
xchg
(bad)
retf
ins
fadd
and
inc
loop
inc
and
movs
cmp
sub
loop
pop
cmp
nop
mov
push
xchg
push
enter
js
dec
sub
mov
sahf
fimul
pop
(bad)
ds
dec
mov
test
jno
inc
jecxz
lods
jmp
stos
jmp
out
int
ss
mov
inc
adc
lds
push
push
imul
test
(bad)
stos
or
jl
xchg
jg
jno
sub
jo
fstp
lods
cmp
cwde
sbb
xchg
pop
movs
mov
cmp
jmp
mov
push
dec
add
or
ins
mov
pop
mov
stos
mov
loope
jns
cmps
sub
cli
es
jl
mov
arpl
rcr
lock
xor
pop
pop
(bad)
xchg
pop
js
test
xchg
pop
mov
in
ss
out
scas
sub
push
(bad)
inc
rcl
push
pop
aas
and
icebp
pop
sbb
jns
loop
jo
in
lahf
jbe
enter
mov
mov
cmp
or
movs
sti
xor
sbb
je
add
loop
xor
in
out
mov
(bad)
into
sub
push
jbe
call
scas
jle
iret
jmp
adc
rol
add
es
lea
pop
or
outs
ja
dec
pop
js
mov
pop
and
aaa
mov
jle
pop
adc
adc
or
dec
sbb
mov
xchg
movs
adc
pop
and
sub
test
jp
cdq
iret
ins
xchg
mov
add
test
cs
cld
xchg
(bad)
scas
loope
cmp
cmp
jnp
inc
rcr
jp
pusha
dec
dec
fs
sbb
dec
aam
sub
(bad)
push
adc
mov
adc
mov
out
push
test
pushf
loope
imul
mul
or
push
int3
pop
cs
ret
shl
xor
aam
xor
jbe
sub
aaa
sub
shr
es
iret
cmp
cli
(bad)
xor
imul
aaa
inc
push
pushf
sbb
shl
sub
mov
rcr
(bad)
push
inc
popa
(bad)
mov
mov
push
mov
lods
or
bound
inc
sub
and
cmps
push
push
cmc
xor
cmp
and
lods
jb
out
sub
je
inc
and
mov
in
jnp
inc
imul
repz
pop
mov
xchg
ins
xchg
outs
mov
jne
movs
int3
js
mov
xor
ret
std
test
mov
neg
xor
dec
dec
nop
cmp
xchg
mov
adc
iret
rcl
cmp
scas
into
aaa
mov
xor
enter
shr
jmp
ret
imul
(bad)
shl
fstp
jl
jbe
mov
push
jno
mov
dec
int
pop
imul
add
jp
loopne
cmp
pop
in
cli
fistp
fwait
mov
adc
mov
repz
push
das
mov
inc
fnstcw
or
cmps
fst
iret
out
fs
ins
ror
pop
cmp
pusha
jge
push
lock
clc
fwait
xchg
mov
aaa
inc
(bad)
lahf
dec
sub
xor
adc
stos
ss
sub
fldcw
cmc
pop
inc
push
pop
push
popa
sub
jbe
cmp
mov
leave
jge
adc
mov
shr
ss
sbb
pop
cmps
mov
inc
sar
iret
dec
aas
add
or
mov
icebp
imul
inc
adc
pop
js
lods
xlat
mov
scas
mov
enter
xchg
aas
adc
mov
cmp
inc
mov
cs
add
mov
scas
mov
les
pop
jmp
dec
out
mov
icebp
lahf
mov
icebp
add
hlt
and
cld
sbb
push
jbe
or
dec
push
inc
stos
loop
sbb
jo
cmp
inc
dec
sub
xchg
js
les
movs
sub
push
mov
sbb
out
sbb
popf
out
nop
xchg
inc
in
ret
and
into
std
outs
jg
loop
stos
dec
adc
adc
push
pop
rol
into
bound
clc
cwde
hlt
fidivr
ds
mov
sbb
(bad)
outs
sbb
pop
aas
mov
mov
pop
xor
fldenv
cwde
mov
adc
loop
xchg
call
mov
cmp
xchg
dec
xlat
sar
dec
mov
scas
call
jmp
lods
ror
enter
adc
lahf
shl
cmps
ja
and
and
sbb
imul
std
fsub
inc
aad
mov
loopne
lods
jns
je
sub
test
xchg
xchg
out
fimul
jo
push
aam
push
(bad)
fcom
inc
das
sub
sbb
in
jo
and
pop
adc
stc
test
movs
or
jae
cdq
nop
or
push
sub
sub
fwait
sbb
or
and
or
ja
enter
xchg
imul
dec
pop
pop
mov
ja
dec
push
mov
sub
icebp
xor
mov
push
dec
fst
ins
rcl
mov
fst
cwde
sub
neg
jbe
je
pop
add
dec
jg
aaa
(bad)
popa
imul
add
inc
xor
pop
sbb
inc
inc
int
sub
cmp
jne
ret
push
outs
pop
out
mov
xchg
pop
jle
or
into
mov
push
jo
popf
dec
xchg
fistp
cmp
add
inc
push
lahf
push
cmp
mov
iret
ds
jg
inc
cmps
jl
lods
imul
into
pop
imul
in
add
add
or
mov
push
dec
jns
jl
pop
mov
mov
fsubr
or
and
jns
int3
mov
inc
outs
push
jno
jmp
cmps
clc
or
test
stc
xor
sbb
inc
ss
fcomp
sub
mov
pop
rol
sub
mov
mov
sbb
mov
dec
aaa
xlat
mov
idiv
retf
dec
dec
inc
outs
ret
push
push
or
das
xchg
jbe
add
mov
mov
shl
pop
je
or
popa
jno
and
jge
sub
xor
jmp
xchg
dec
ins
cmc
cs
repnz
cmp
sub
xor
push
btr
repnz
jecxz
pop
dec
xchg
ret
dec
stos
push
inc
cdq
push
jle
(bad)
ja
mov
cld
rcr
sub
cwde
sub
daa
int
xchg
in
mov
in
inc
xchg
push
jmp
lahf
movs
shl
fiadd
cmps
mov
test
mov
mov
iret
imul
mov
repz
(bad)
icebp
sbb
push
pop
fwait
cwde
mov
imul
outs
push
mov
and
ins
xchg
(bad)
adc
mov
cmps
sbb
mov
fimul
pop
bound
pop
nop
(bad)
mov
in
dec
push
jl
sub
imul
test
xchg
adc
mov
cs
pop
jae
and
sub
call
cmp
cmp
or
or
inc
push
inc
jmp
cmp
push
lods
ret
js
ss
jl
test
sahf
cmc
addr16
jns
popf
movs
ins
jnp
jno
add
mov
outs
xchg
jnp
cmp
movs
jno
sub
jnp
jbe
and
cmp
repz
shl
or
or
stos
dec
xlat
jmp
mov
xor
enter
lods
cmp
jp
dec
or
sti
sub
into
les
dec
cs
sbb
outs
js
ja
inc
clc
fwait
cdq
inc
test
dec
popf
aas
ins
jb
ds
popa
pop
cmps
ja
mov
or
mov
in
minps
in
out
inc
arpl
outs
add
push
jb
aam
imul
arpl
rdpmc
add
in
jle
adc
scas
adc
sbb
jp
leave
cs
mov
std
idiv
push
nop
jb
lahf
outs
daa
pop
jb
jo
dec
xchg
enter
stos
mov
mov
pop
fild
mov
mov
icebp
(bad)
jae
jecxz
inc
jmp
mov
loop
sbb
cmp
push
mov
add
pop
das
mov
push
stos
cld
add
adc
sbb
cmps
add
(bad)
mov
repnz
in
fbstp
shl
aas
les
rcl
(bad)
cmp
loope
push
mov
mov
cmp
or
into
xchg
jg
mov
pop
pop
mov
or
jmp
adc
jmp
jne
pop
jp
mov
or
inc
add
fisttp
xchg
cdq
sbb
adc
pop
fistp
outs
xlat
inc
and
push
push
push
or
pop
ins
lods
cs
mov
adc
clc
and
push
xchg
(bad)
aam
adc
jecxz
and
cwde
retf
(bad)
jmp
pop
imul
in
pop
mov
mov
test
imul
jb
and
leave
cmp
dec
jae
xor
adc
jb
and
dec
(bad)
loope
fnstenv
ret
cmp
loope
push
nop
mov
push
imul
mov
and
fisubr
ds
clc
push
and
jge
cmc
es
loope
and
mov
aas
cmp
ja
loopne
adc
mov
mov
loope
daa
mov
inc
outs
loopne
dec
jmp
xchg
or
call
mov
sbb
jmp
out
pop
pop
pop
out
sahf
jnp
and
cwde
xchg
outs
push
shl
(bad)
xchg
popa
ret
(bad)
add
mov
hlt
pop
push
and
fs
mov
adc
(bad)
js
ins
loope
cdq
cwde
ja
enter
popf
lock
loopne
dec
das
les
sub
adc
arpl
mov
test
jecxz
dec
fld
inc
mov
iret
add
movs
lock
mov
jg
into
mov
pop
sub
jp
cmp
mov
or
lds
pop
pop
mov
movs
leave
sub
pop
mov
mov
mov
mov
das
aaa
jp
pop
add
(bad)
xchg
lahf
sti
sar
fist
stc
xchg
adc
jnp
mov
mov
adc
cld
add
dec
cmc
mov
gs
sahf
gs
(bad)
mov
xchg
push
xor
mov
arpl
sub
ror
push
loop
dec
sub
xor
and
jbe
xor
mov
xchg
xor
dec
into
loop
cmps
mov
and
into
pop
add
ins
mov
gs
aas
dec
jle
jg
(bad)
pop
push
pop
sbb
push
icebp
dec
fs
fdivr
jmp
mov
out
cmc
push
add
into
pop
sbb
dec
lock
repz
and
mov
mov
cmp
push
rcl
xchg
(bad)
mov
lods
call
xchg
pop
popa
and
in
test
lods
cwde
ds
fsubr
xor
bound
scas
int3
xor
pop
pusha
jge
out
lods
in
outs
(bad)
ds
mov
jl
std
mov
rcl
stc
or
gs
inc
shr
inc
imul
cmps
sbb
shr
add
ret
pushf
retf
cmp
mov
arpl
or
fiadd
int3
inc
ror
pop
sub
imul
test
mov
xor
jae
mov
js
outs
add
lock
inc
sbb
sbb
cmps
mov
cmp
std
jl
sbb
mov
add
cmp
adc
jge
outs
aad
(bad)
mov
jmp
ins
and
lea
pop
xor
fwait
pop
gs
sbb
lock
dec
ins
xchg
hlt
scas
dec
dec
sbb
cld
xchg
mov
jb
ds
data16
mov
lods
cmp
sahf
in
icebp
xchg
push
dec
shl
cmps
sub
cmp
repz
imul
fnstenv
pop
ss
out
lods
shl
sub
push
pusha
or
les
and
in
enter
call
jge
les
inc
rcl
fwait
sub
aas
shl
pop
pop
or
xlat
jns
stos
cmps
retf
or
xor
add
adc
mov
mov
adc
jne
ja
inc
adc
lods
in
leave
(bad)
jmp
into
cld
enter
fst
pushf
pop
and
adc
rcl
mov
stos
clc
pop
mov
or
pop
cmp
ins
sbb
scas
(bad)
and
call
movs
fcomp
repz
mov
sbb
rol
mov
inc
jne
mov
pop
xlat
pop
push
and
mov
mov
xchg
scas
mov
jecxz
not
(bad)
scas
popa
add
ret
scas
dec
push
adc
lahf
cs
scas
lds
mov
sub
pop
sahf
cmp
sub
cmp
les
sti
mov
add
or
pop
inc
jne
mov
(bad)
rcr
cmp
mov
mov
outs
(bad)
mov
fidiv
xchg
idiv
cmc
or
sbb
popa
mov
test
nop
mov
dec
loopne
jecxz
push
cs
cli
push
popf
sub
sbb
jge
or
leave
jl
pop
pop
xchg
add
inc
outs
icebp
xchg
mov
stos
fld
int
mov
add
mov
mov
in
(bad)
mov
mov
int3
int
cmps
iret
fist
ret
mov
lea
jmp
mov
ss
out
stc
pop
inc
hlt
cmp
icebp
push
je
pop
cli
inc
mov
inc
cwde
or
sahf
inc
xchg
fstp
shl
data16
aaa
adc
jnp
cmp
pop
adc
push
imul
sahf
dec
test
js
ins
add
imul
adc
xchg
cmp
sub
pop
movs
aad
out
pop
(bad)
outs
sub
jno
mov
call
sub
push
rcr
cmpxchg
push
xchg
xchg
or
pop
ja
movs
data16
pop
jo
nop
test
enter
sub
shl
int3
push
mov
sbb
jg
stc
and
and
lea
call
fld
mov
addr16
cli
(bad)
xor
out
and
jp
(bad)
jg
out
es
gs
hlt
ret
ins
push
xchg
movs
pushf
je
out
cdq
dec
call
dec
sbb
ror
retf
xor
(bad)
mov
inc
rcl
mov
adc
fs
pop
(bad)
add
mov
popa
(bad)
pop
out
addr16
std
(bad)
shl
outs
dec
sahf
ficom
stos
outs
add
das
or
dec
xchg
xchg
fdiv
jno
jmp
and
cmps
mov
dec
and
xchg
outs
or
div
push
outs
(bad)
rol
jmp
ret
mov
(bad)
jmp
cli
hlt
es
or
test
cmp
and
repz
pop
mov
mov
leave
popf
outs
test
(bad)
mul
test
rcl
leave
sub
inc
outs
ret
test
mov
xor
add
cmp
push
inc
sub
leave
jmp
sub
inc
iret
and
js
inc
push
inc
dec
mov
mov
sub
mov
std
and
jnp
rcr
mov
mov
sbb
rcl
inc
xchg
jg
or
(bad)
mov
push
mov
imul
mov
cmp
imul
sahf
iret
mov
(bad)
push
rol
out
and
push
and
data16
mov
lods
icebp
jo
and
in
and
mov
mov
xor
mov
or
or
mov
jl
ret
mov
ror
jne
aas
inc
inc
or
inc
xor
cmp
dec
adc
jge
jl
sti
pushf
xchg
shl
mov
sar
pusha
test
hlt
and
shr
mov
lods
lods
push
and
jne
xor
mov
scas
les
adc
or
sub
imul
mov
aas
and
arpl
inc
jbe
loopne
xlat
inc
push
in
add
add
imul
jmp
std
xchg
xchg
jl
xor
jb
xchg
jmp
mul
cmp
imul
dec
adc
push
mov
pop
cmps
out
mov
dec
stc
loope
add
jno
pop
mov
not
mov
inc
data16
test
pop
aam
ja
xchg
shl
call
das
xor
add
loop
imul
popa
vpaddusw
cmp
popa
mov
sbb
inc
movs
or
ins
push
mov
test
push
pop
shl
push
cmp
mov
psrad
dec
xlat
jp
sbb
repnz
(bad)
fmulp
(bad)
repnz
sub
stos
out
pop
lods
push
push
cmp
cmp
fs
add
push
cld
jg
je
sbb
(bad)
loopne
push
cs
aaa
inc
push
sub
mov
jns
aad
addr16
inc
xlat
cmp
adc
int3
pop
movs
outs
xchg
mov
xor
sub
std
lods
adc
loopne
push
sar
iret
adc
inc
inc
movs
xchg
push
mov
dec
xor
frstor
lea
and
adc
push
dec
mov
xor
popa
and
jmp
adc
mov
outs
pop
in
or
call
push
push
ins
repnz
in
aad
int3
aaa
mov
aas
stc
jge
push
mov
retf
mov
inc
outs
jbe
mov
setl
leave
(bad)
ins
inc
movs
xchg
fldenv
sbb
push
add
ret
jno
dec
addr16
mov
mov
sbb
add
add
mov
mov
lock
push
xchg
jge
add
xchg
aaa
mov
retf
xchg
lods
stc
loope
sbb
push
les
shr
sbb
shl
pop
jb
loopne
rcr
int3
data16
outs
push
cmps
jmp
dec
sbb
push
dec
or
nop
cli
add
mov
or
xchg
mov
inc
(bad)
jnp
or
sbb
leave
jbe
int3
gs
dec
vmwrite
scas
dec
and
ss
lock
pop
(bad)
imul
mov
inc
mov
mov
dec
pop
jnp
jecxz
popa
scas
cmps
(bad)
jg
xchg
jg
ins
push
sub
repnz
pusha
cwde
inc
dec
fwait
mov
outs
retf
not
arpl
cmp
cmp
push
dec
jecxz
test
add
sub
cwde
in
xor
sub
pushf
das
push
fld
rol
out
dec
ror
outs
test
movs
adc
mov
int3
jne
xor
fist
cmp
aam
popa
shr
cmp
mov
cmps
int
imul
dec
popf
and
cmps
push
xchg
fwait
add
pop
dec
inc
jnp
(bad)
jns
inc
inc
xchg
jle
xor
pop
retf
push
jnp
sub
xchg
cli
fsub
hlt
or
mov
data16
aam
out
xor
jmp
pop
movs
mov
mov
mov
add
adc
mov
inc
test
out
stos
pop
xchg
xor
hlt
jle
xchg
sub
loope
test
mov
stc
or
mov
repz
add
pop
xor
pop
xor
je
cli
repz
call
push
xor
mov
mov
push
jge
sar
mov
add
jb
pop
jecxz
sub
inc
aas
out
test
idiv
outs
inc
cmp
sbb
stos
lock
cmp
inc
retf
mov
or
jae
xchg
or
adc
arpl
xor
in
add
ja
pop
nop
xor
jecxz
or
adc
push
jg
mov
pop
mov
loop
dec
pop
xchg
out
popa
stos
sbb
arpl
pop
add
cmp
fadd
das
push
mov
pop
adc
es
ret
xchg
clc
aad
nop
xor
sub
and
xor
mov
jl
(bad)
mov
cwde
mov
jge
rcr
daa
sbb
xchg
xor
push
fcom
cmp
push
push
in
outs
xchg
scas
add
jge
sahf
inc
lds
shl
int
test
mov
mov
test
sbb
push
out
icebp
cld
xor
cli
test
test
inc
add
dec
lea
loopne
gs
pop
retf
and
sbb
sub
inc
sub
nop
sbb
cmp
in
adc
(bad)
(bad)
jp
enter
fwait
adc
rcl
ins
cld
jae
pop
imul
sub
lods
cmps
jmp
push
mov
push
jno
aad
and
lock
inc
or
pop
outs
push
pop
sbb
cmp
adc
xor
in
stc
mov
mov
pop
mov
(bad)
push
bound
cmp
or
jg
xchg
(bad)
call
(bad)
scas
inc
mov
add
jecxz
push
call
mov
enter
sbb
cmc
not
fwait
pop
sub
sub
test
cli
jbe
jmp
es
and
pop
mov
imul
xchg
aas
xor
push
dec
sahf
mov
mov
cmps
push
jmp
mov
mov
pop
arpl
mov
iret
xor
xchg
or
pop
test
repz
add
xchg
ret
xchg
imul
fsubr
mov
dec
jg
mov
adc
or
outs
shr
test
mov
jl
sbb
jno
push
rcl
(bad)
inc
ret
jo
cmp
xchg
jg
test
das
test
cmps
movs
ss
sub
jbe
test
lahf
(bad)
cld
xchg
arpl
xchg
xchg
pop
inc
push
(bad)
fild
outs
mov
lods
jmp
(bad)
std
movs
ins
inc
pop
and
mov
push
and
mov
push
data16
fisubr
rol
mov
shl
and
mov
mov
mov
movs
inc
ret
shl
pop
add
js
mov
jmp
mov
push
push
or
mov
lahf
lods
in
adc
or
cmc
mov
push
mov
add
lock
dec
les
js
add
jmp
mov
mov
mov
scas
sub
mov
out
adc
int3
inc
push
fcom
pop
mov
dec
dec
jnp
adc
ins
xchg
pusha
stos
cmp
jno
mov
int3
pop
sbb
add
push
xchg
aad
or
adc
push
or
scas
push
pop
sbb
jnp
add
lds
je
sbb
out
(bad)
gs
das
loop
rcl
jnp
adc
push
mov
repz
ds
or
and
mov
(bad)
xor
(bad)
pop
nop
cmc
sub
fs
aas
mov
in
xchg
cmp
jl
scas
icebp
cmp
pop
sbb
inc
sahf
or
(bad)
jo
xchg
or
and
or
xor
lods
jp
int3
sub
jmp
mov
and
pop
cmp
pop
inc
sbb
ror
inc
or
ss
push
and
clc
adc
(bad)
shr
jae
sbb
arpl
cmps
pop
test
ret
ficomp
cwde
ret
sub
(bad)
mov
and
pop
in
mov
push
xchg
xchg
jecxz
and
out
dec
pop
mov
(bad)
popf
(bad)
clc
push
xchg
je
cmp
mov
call
or
pop
ficom
enter
xor
sub
fwait
aaa
ret
mov
pop
int
dec
mov
or
mov
aaa
stos
push
test
sbb
adc
cmp
(bad)
xchg
and
pop
add
mov
push
call
ret
out
loop
sub
and
xor
fisubr
js
sbb
xchg
mov
sbb
xor
hlt
mov
jnp
pop
mov
sbb
jo
test
int3
pop
adc
clc
push
mov
inc
popf
mov
jecxz
outs
bound
mov
ins
shl
loop
in
outs
in
inc
jl
cwde
imul
aaa
sbb
ss
inc
mov
movs
mov
sbb
mov
xchg
fild
ins
or
jl
add
jae
jle
(bad)
add
les
and
ds
ins
jmp
out
call
cmp
inc
mov
dec
fisubr
test
sub
and
sub
xlat
sbb
ins
ins
dec
dec
pushf
shl
lock
mov
imul
or
xchg
test
fsubr
les
pop
mov
test
inc
movs
call
cdq
pop
pop
sub
sub
pusha
dec
sbb
or
sub
pop
cmp
xor
into
out
aam
dec
bound
or
pop
jecxz
lods
add
cdq
adc
in
dec
lods
ret
test
outs
ins
jae
pop
popa
adc
push
enterw
imul
repz
inc
adc
rol
dec
jae
push
aaa
push
sbb
inc
fucomip
movs
adc
lahf
out
repz
fnstenv
imul
loopne
(bad)
fld1
xlat
add
push
(bad)
call
fwait
test
mov
pmulhw
push
jge
aad
mov
pop
es
clc
ins
cmp
jne
push
in
nop
jp
dec
adc
mov
(bad)
add
call
push
test
aas
xchg
jne
mov
loope
adc
and
mov
outs
mov
and
xor
jle
push
mov
sbb
jg
gs
push
imul
mov
xchg
mov
add
jl
push
out
popa
pop
jmp
fst
push
xchg
lahf
icebp
sbb
add
leave
mov
mov
cmp
xor
pop
sub
and
div
pop
sti
in
sub
mov
movs
push
pusha
dec
stos
icebp
imul
fistp
test
and
mov
xor
mov
mov
stc
fsubr
sti
nop
adc
xchg
ins
cmp
(bad)
shl
(bad)
out
imul
jl
fisttp
aaa
or
cmp
sub
movs
push
pop
imul
lods
cwde
adc
lahf
mov
aad
sub
jns
aam
xor
inc
popf
xchg
stos
pop
jmp
xor
xor
mov
rol
add
test
add
push
(bad)
popf
or
inc
stos
dec
push
scas
sti
shl
int3
push
ret
test
inc
pushf
mov
pop
ja
in
pushf
add
inc
jns
push
pop
hlt
cs
dec
and
sbb
cdq
xor
std
xchg
mov
or
lea
das
jne
popf
push
je
outs
stc
aas
shl
mov
jmp
scas
or
or
ret
cmp
outs
stc
mov
xchg
test
in
xor
cmp
mov
dec
dec
not
idiv
mov
mov
pop
push
jb
mov
mov
rcr
xor
mov
popf
dec
pop
in
fdiv
ja
rol
inc
sbb
lds
xabort
add
retf
dec
pop
out
mov
clc
pop
and
ja
cmp
adc
inc
cmc
es
or
movs
int3
jae
and
mov
pop
xor
call
sar
nop
test
and
test
xchg
inc
xchg
mov
mov
dec
addr16
out
mov
imul
sbb
dec
pop
mov
push
add
fwait
cmp
inc
jg
xchg
imul
pop
neg
xchg
rcr
adc
push
mov
fcmove
xchg
mov
xchg
(bad)
sbb
in
xchg
mov
mov
mov
sub
stc
sub
push
cwde
push
inc
bnd
fwait
movs
mov
and
loop
mov
inc
adc
xchg
push
xchg
jmp
dec
sub
push
mov
push
sti
inc
jnp
pop
test
scas
sbb
fadd
(bad)
and
or
iret
jae
jg
push
(bad)
sub
jnp
jmp
inc
bound
inc
(bad)
cmp
push
sub
bound
or
js
mov
push
out
jl
or
test
jo
enter
fs
je
xor
sti
es
fcomp
or
dec
test
cdq
or
sbb
je
dec
pushf
int
ret
jmp
inc
lahf
pop
and
jno
mov
xchg
into
cld
xchg
jecxz
mov
inc
(bad)
dec
mov
mov
xchg
into
ins
push
inc
sar
repnz
shl
inc
addr16
lea
ins
push
jl
dec
push
cmp
(bad)
dec
lea
jge
fistp
pop
jns
int
sub
and
jp
sub
pop
repz
pop
movs
mov
out
jg
hlt
jns
or
(bad)
hlt
sbb
mov
retf
(bad)
jp
xlat
mov
sub
rol
hlt
push
cmp
je
aaa
movs
in
sbb
outs
add
xlat
mov
mov
push
ucomiss
retf
test
movs
sar
(bad)
aam
ret
fnstsw
adc
cli
test
stos
aaa
jl
or
ret
sbb
xor
ror
push
gs
test
fadd
sub
pop
inc
dec
idiv
jle
sti
sbb
cwde
inc
movs
sub
mov
call
hlt
ffree
mov
test
stc
daa
xchg
(bad)
repnz
arpl
shl
ret
out
push
and
and
dec
dec
prefetch
or
nop
push
fld
pop
rcl
call
cmps
or
inc
ins
pop
sub
or
rol
cmp
and
lds
mov
jno
jge
jmp
xor
iret
test
in
jle
pop
sbb
adc
xor
(bad)
aaa
iret
call
jle
pop
sbb
rcr
lahf
icebp
cmp
loopne
mov
push
lods
and
jnp
fbld
push
lods
or
or
scas
imul
lahf
or
cmps
mov
fisubr
lock
aaa
mov
es
sub
mov
mov
xor
repnz
lahf
mov
xchg
cwde
movs
(bad)
mov
jecxz
loop
(bad)
outs
sbb
mov
xchg
or
clc
(bad)
test
cmp
stos
mov
cmp
xchg
into
pop
xchg
ss
out
cdq
scas
(bad)
icebp
sti
xchg
cmc
cdq
lock
jmp
mov
jmp
push
iret
out
sbb
mov
movs
and
js
jecxz
int
sar
dec
pop
and
sahf
aas
fimul
cmp
jle
popa
cmps
call
mov
or
add
test
jle
scas
sub
loope
ss
lods
outs
cmp
jecxz
mov
mov
fstp
xlat
in
lods
mov
shl
and
shl
add
xchg
add
and
mov
das
mov
sahf
xor
inc
jb
lds
sbb
xchg
bound
xchg
push
mov
mov
mov
dec
sbb
shr
mov
inc
or
stos
dec
mov
stos
rol
adc
mov
ins
inc
arpl
mov
fs
(bad)
jnp
ret
inc
sbb
lds
or
xchg
adc
xchg
cmp
sub
test
andnps
gs
ror
xor
xor
push
std
jg
cdq
add
cmps
jmp
xor
call
fidiv
shl
scas
xchg
jmp
out
cmp
xor
xor
and
setae
ret
and
jb
jl
outs
mov
in
mov
and
sbb
fistp
rcr
je
mov
dec
jne
js
test
pop
das
pop
ss
imul
cs
test
cmc
loope
cmc
push
pop
imul
es
in
call
push
cmp
mov
sub
sbb
pop
push
mov
call
jle
(bad)
jb
dec
inc
inc
push
xchg
mov
rcr
das
adc
mov
cmp
ins
pop
mov
sub
lods
arpl
cmp
(bad)
iret
idiv
xor
pop
mov
jns
push
mov
arpl
sub
nop
lods
mov
gs
fld
and
nop/reserved
or
repz
and
mov
dec
mov
xlat
add
retf
xchg
int
cmp
push
mov
int3
cmc
int3
pop
jle
add
dec
enter
add
mov
aaa
pop
lds
push
int3
mov
mov
sub
sahf
jo
jno
mov
inc
and
push
retf
fs
pop
mov
loop
add
inc
adc
shr
xor
aam
movs
jno
jge
test
ror
cmp
shl
stc
sub
mov
les
jmp
xlat
mov
mov
addr16
enter
sti
lds
int
call
fisttp
shr
aam
sub
sub
nop
leave
xchg
outs
enter
mov
adc
jge
mov
xor
or
mov
mov
sahf
enter
xchg
(bad)
icebp
add
mov
pop
cmp
cwde
mov
test
sbb
sbb
add
cld
jl
aad
out
inc
and
mov
dec
pop
mov
dec
push
cmps
push
cmps
addr16
hlt
cmp
jb
sahf
pop
jl
push
out
xchg
out
rol
(bad)
sbb
in
pushf
sbb
add
scas
push
cmp
(bad)
sub
inc
sbb
fs
movs
jg
xor
push
or
mov
xchg
into
inc
sub
cld
popf
arpl
outs
xor
(bad)
xchg
dec
add
jp
ss
lock
mov
lock
mov
jmp
push
jl
dec
jl
es
mov
lods
repnz
fwait
cmp
fist
inc
ret
jmp
and
iret
jg
ja
hlt
mov
(bad)
imul
mov
cmp
mov
xlat
ret
ret
into
xchg
idiv
fiadd
sbb
dec
data16
xchg
shl
fs
imul
xor
test
xor
cmp
pop
xor
scas
pop
mov
sbb
dec
bound
loope
xor
cmps
adc
shl
cmp
xlat
jg
and
sub
outs
in
pop
loope
mov
add
in
imul
adc
or
inc
add
inc
dec
pop
mov
fbld
in
sar
ss
xor
xor
jg
(bad)
push
mov
push
popa
push
rol
inc
fst
clc
add
stc
mov
ins
xor
pop
aam
mov
test
cmps
mov
fisubr
arpl
out
push
xchg
or
mov
adc
jge
(bad)
aam
retf
sub
test
adc
push
retf
jecxz
and
pop
xor
aam
mov
pop
and
xchg
stos
adc
sbb
and
or
hlt
out
inc
cmp
(bad)
xchg
mov
dec
loopne
loope
xlat
scas
jne
jmp
imul
imul
into
fcom
nop
and
ret
(bad)
mov
movs
ins
stc
ret
cmc
mov
test
mov
and
jmp
pop
fisttp
jns
mov
mov
(bad)
pop
nop
mov
xor
xor
mov
ret
repz
mov
inc
arpl
nop
fld
adc
push
int3
or
xchg
mov
mov
pop
add
push
into
dec
(bad)
adc
scas
push
xchg
pop
push
inc
inc
sar
mov
jbe
xlat
ins
jnp
jno
outs
xchg
mov
add
and
stos
adc
add
jne
dec
cdq
stos
(bad)
cli
pop
fs
js
leave
das
les
inc
leave
ret
out
xchg
dec
aas
mov
lds
jnp
pop
xor
xor
dec
add
sbb
push
in
add
adc
sahf
ds
loop
jb
fistp
and
jns
mov
or
mov
sub
cmp
or
jecxz
cs
cld
xor
shl
(bad)
cwde
stos
cmp
call
xchg
call
mov
movs
xlat
xor
mov
sub
xor
or
xchg
scas
jl
clc
call
mov
mov
add
jmp
mov
fld
scas
jbe
shl
fwait
sbb
dec
cdq
inc
cmp
mov
mov
pop
movs
(bad)
xchg
lods
push
movs
push
retf
ja
fild
inc
fld
(bad)
imul
(bad)
mov
fild
sub
or
dec
add
add
pop
inc
adc
mov
pop
rcl
inc
test
nop
in
inc
es
push
cmp
or
xchg
es
loop
and
inc
aaa
jb
mov
or
add
xchg
loope
imul
out
pop
dec
cwde
fsub
jmp
loop
in
cmp
inc
mov
mov
(bad)
cmp
imul
pop
not
dec
sub
imul
lods
out
jmp
pop
not
dec
mov
(bad)
clc
rol
es
sbb
repz
pop
(bad)
cmp
ret
jb
(bad)
xor
jbe
scas
mov
fcomi
repnz
stos
lea
test
inc
add
mov
les
mov
jb
inc
xor
je
ret
pop
dec
adc
xchg
movs
leave
cli
and
daa
ret
xchg
int
adc
fisttp
clc
cmc
push
cmp
aas
sub
hlt
jb
pop
stc
into
pop
call
sub
and
test
lods
out
xchg
(bad)
pop
shr
jae
xchg
dec
xchg
repz
dec
inc
jge
dec
pop
or
push
or
pushf
(bad)
les
dec
loop
push
repnz
mov
sti
retf
sub
cwde
(bad)
mov
mov
push
out
mov
shl
jle
add
add
adc
adc
mov
out
stos
and
rcr
inc
into
pushf
push
ret
scas
leave
jae
loop
xchg
dec
add
(bad)
cld
jge
xor
jg
in
cmp
inc
inc
sbb
mov
neg
xchg
cmp
lea
cmp
dec
imul
clc
sub
push
int3
test
(bad)
data16
mov
pop
loop
adc
add
push
ror
xor
jp
nop
fist
lahf
mov
test
mov
les
rcl
test
jp
xlat
jo
cmps
mov
loope
scas
fwait
sbb
ret
jbe
ficomp
cmc
sub
xor
pop
jo
pop
xchg
xlat
push
add
cwde
or
out
jg
push
xlat
jns
por
dec
and
into
mov
cmp
ins
scas
cmp
xchg
or
(bad)
xchg
xchg
outs
jp
cmc
jp
inc
ret
out
inc
and
jp
mov
jnp
addr16
jb
out
(bad)
jmp
lock
and
mov
clc
xor
fild
in
sub
mov
std
loope
in
or
or
xchg
jge
inc
ret
xchg
jno
cwde
pushf
pop
pop
sbb
cmps
and
adc
jg
fsubr
jl
fadd
sub
in
pop
inc
call
std
xor
mov
dec
loopne
out
test
ror
clc
aaa
out
xchg
cmp
(bad)
adc
mov
push
mov
xor
retf
ja
or
dec
mov
mov
push
call
stos
xor
push
sub
test
mov
jg
sub
ret
dec
cmp
jecxz
adc
imul
mov
std
push
div
bound
aad
lahf
sbb
add
jnp
outs
inc
pop
inc
xor
pusha
out
cmp
pop
sti
rol
into
mov
inc
sar
pop
push
adc
frstor
mov
into
sti
add
popa
push
and
nop
inc
sbb
test
mov
dec
push
neg
xor
iret
scas
jne
in
test
pop
bound
int3
arpl
sbb
pop
lods
dec
(bad)
sahf
fsubr
push
jne
pop
(bad)
jmp
xor
pop
cmp
test
daa
aas
sar
mov
sub
push
addr16
sub
xchg
push
adc
mov
cmp
cs
out
test
xchg
cmp
push
mov
xor
sti
or
aaa
outs
inc
push
fdiv
pushf
popa
pop
jmp
js
addr16
sub
addr16
ficomp
neg
jbe
repz
dec
push
inc
mov
sub
sahf
call
rol
xchg
(bad)
(bad)
sbb
mov
fld
jns
cmp
stos
int
cmps
inc
adc
lods
fcmove
jae
(bad)
loopne
pop
popf
adc
jbe
les
lods
sbb
xor
fild
in
mov
jne
movs
hlt
adc
xchg
mov
ret
data16
cmp
xor
movs
lods
(bad)
aam
mov
sahf
out
xor
push
dec
fs
xor
jle
imul
cmp
out
pop
pushf
sti
push
sub
dec
inc
dec
jo
add
out
sbb
fdiv
retf
ds
mov
gs
call
adc
ins
mov
cwde
mov
scas
fs
ret
inc
cli
ja
int
mov
pop
lds
xchg
dec
int
into
dec
or
dec
sub
cmps
add
adc
lods
mov
out
idiv
rcl
add
mov
sbb
vpsllq
lods
push
or
mov
jmp
xor
or
(bad)
inc
sbb
jmp
pop
mov
rcl
out
imul
int3
(bad)
in
dec
add
adc
rcr
test
or
cmc
or
iret
out
lods
mov
mov
mov
sti
fisub
mov
fdiv
ds
pop
cwde
sbb
mov
call
shr
inc
push
mov
std
push
ss
mov
push
jne
in
xor
jl
ror
cmp
ja
rcl
aad
shr
mov
ficomp
fdivr
ret
inc
mov
nop
push
push
mov
xchg
sbb
mov
outs
(bad)
(bad)
ficom
pop
ret
daa
out
xchg
lock
sub
mov
sbb
xchg
in
(bad)
adc
mov
int
and
fsub
or
xor
push
loopne
(bad)
push
(bad)
mov
stc
js
test
fisub
push
repnz
movs
push
fisttp
stc
fld
adc
int3
xchg
adc
shl
scas
iret
arpl
js
mov
xchg
ins
icebp
dec
sub
push
(bad)
adc
les
xor
or
aam
aas
(bad)
mov
adc
cwde
fild
inc
adc
adc
(bad)
jge
sti
inc
jbe
sub
lods
retf
mov
stc
sbb
lds
mov
mov
inc
popf
fisttp
xor
mov
pop
enter
loope
push
int3
jmp
data16
enter
dec
pop
adc
lahf
test
fcomp
jnp
and
iret
data16
inc
ins
(bad)
jb
or
out
out
sub
test
push
shl
stc
sar
movs
icebp
(bad)
cmps
in
idiv
mov
pop
mov
cmp
add
push
out
icebp
inc
cmp
push
aad
jp
(bad)
es
push
push
dec
cmp
mov
inc
xor
sbb
mov
and
sbb
pop
call
cmp
mov
jb
test
sub
and
fisttp
cmc
mov
jge
repnz
call
shl
lds
xchg
mov
cmp
cmps
addr16
imul
repnz
inc
sbb
stos
sbb
nop
jmp
pop
int3
test
out
addr16
mov
add
inc
enter
xor
xor
push
xchg
nop
int
mov
xor
mov
sahf
(bad)
hlt
xchg
aas
jnp
pop
bound
loop
cmp
xlat
or
lods
jns
fwait
add
repnz
in
push
or
pop
jmp
movs
sub
stos
mov
or
cmp
jge
ds
mov
add
sub
imul
movs
cmp
in
iret
jmp
mov
sub
movs
sbb
sbb
or
ss
jmp
jg
fldenv
in
dec
hlt
push
dec
sub
cmps
adc
xor
outs
jecxz
jge
jno
pop
or
add
loop
rol
push
int3
(bad)
hlt
mov
es
sbb
mov
jns
repnz
test
out
xlat
(bad)
movs
aad
movs
push
mov
add
ret
daa
icebp
jmp
cmp
in
js
shr
xchg
call
not
jnp
pop
cld
cmp
ja
lods
xor
xor
mov
into
cmc
nop
and
xchg
or
lods
adc
movs
ss
jle
mov
cmps
and
sub
jp
daa
in
pop
cli
pop
inc
cmp
xchg
dec
pop
or
add
sbb
fwait
addr16
shl
add
es
pop
sub
sbb
je
ja
outs
setle
or
stos
in
lods
sub
sub
jle
sub
aaa
dec
ins
pop
add
test
mov
cmp
push
sahf
inc
dec
push
pop
sbb
mov
aas
jp
fcmovbe
shl
jns
xlat
fidivr
js
cmps
mov
cld
cmc
sti
stos
and
cmp
or
jecxz
mov
mov
or
stc
add
nop
mov
cmp
jo
jle
sbb
pop
mov
leave
xor
adc
aaa
xchg
repz
aad
adc
jne
or
xchg
loopne
dec
dec
sbb
mov
sbb
push
xchg
das
push
pop
mov
jae
iret
dec
ins
cmps
arpl
ja
push
mov
xchg
dec
xchg
sub
shr
sbb
jno
sar
mov
xchg
xchg
adc
cmc
add
in
in
imul
(bad)
lds
popf
(bad)
and
rcl
in
stos
(bad)
cld
or
sbb
cmc
addr16
xchg
scas
cli
adc
xchg
push
pop
mov
xchg
jno
cld
arpl
adc
sub
nop
das
arpl
loope
cmps
aas
adc
popa
xchg
push
pop
sbb
stc
lock
inc
xchg
push
mov
test
cmps
rcl
enter
mov
cdq
popfw
sbb
ret
mov
mov
out
cdq
int
lea
in
(bad)
imul
push
cmc
sub
push
push
pop
fwait
push
xchg
call
pop
xor
loopne
cmp
(bad)
fwait
mov
push
cli
adc
lea
pop
shr
bound
or
(bad)
leave
mov
push
mov
xchg
inc
mov
ret
push
call
movs
mov
movs
(bad)
xor
outs
or
push
sub
sub
stos
mov
ror
dec
push
adc
sbb
or
fisubr
ja
dec
popa
mov
and
dec
fwait
arpl
mov
jmp
jnp
pmuludq
(bad)
in
xor
(bad)
je
fidivr
inc
imul
xchg
jns
fimul
jne
jae
into
or
rcr
mov
int
push
shl
mov
shl
xor
mov
movs
add
(bad)
retf
dec
or
lods
lea
repnz
je
cmp
xor
and
xchg
scas
ror
ror
aaa
cmp
xchg
cmp
bound
mov
mov
inc
inc
in
mov
ret
inc
fcomp
ins
jae
iret
aad
add
ss
adc
repnz
cmp
xchg
mov
and
mov
js
(bad)
mov
call
cmp
inc
fisubr
mov
or
cli
lahf
cmps
fs
sbb
sbb
dec
pop
mov
(bad)
cmc
outs
mov
mov
mov
sub
retf
xchg
dec
ja
lea
shl
call
repnz
cmps
in
mov
adc
int3
mov
push
es
test
jnp
call
and
xchg
or
out
test
enter
mov
out
sti
(bad)
loopne
fadd
mov
pop
loope
call
add
mov
sub
js
fwait
add
mov
in
xchg
std
xlat
adc
mov
jne
mov
mov
adc
or
inc
imul
jo
pop
das
xor
std
stos
and
jno
adc
mov
addr16
fsubr
xchg
pop
shl
or
jae
jne
repz
pop
xchg
dec
sbb
inc
mul
inc
mov
stc
cmps
sub
and
jmp
outs
pusha
cmp
jae
jge
in
dec
dec
jnp
shl
xchg
retf
push
ins
xlat
fs
or
repnz
test
cld
mov
cmps
addr16
jle
or
push
inc
nop
xor
push
int3
imul
dec
pop
jecxz
cmp
and
loop
mov
lock
repz
and
cld
jl
push
dec
dec
push
nop
in
mov
dec
or
mov
xchg
mov
or
fld
(bad)
out
push
ss
jo
and
sar
scas
xchg
and
push
in
push
pop
(bad)
jg
lods
rcr
inc
and
fcmovnbe
and
adc
sar
cli
scas
cmps
jns
repz
xchg
popf
mov
inc
into
push
push
cs
inc
xchg
ja
iret
push
pusha
loopne
sbb
loope
jp
in
mov
outs
(bad)
int3
(bad)
xchg
icebp
movs
cmp
add
fwait
dec
push
sub
retf
push
inc
cli
lea
(bad)
sub
xor
pop
icebp
out
mov
xor
aaa
je
dec
adc
cmp
xchg
(bad)
pop
scas
pop
lock
jge
call
mov
push
jae
push
cmp
int
repz
fdivr
mov
aaa
loope
rcl
fsub
jno
test
daa
outs
push
push
cmps
lods
cmc
adc
push
mov
add
mov
test
jmp
(bad)
mov
arpl
mov
dec
gs
std
lahf
mov
pop
mov
sub
and
int
loop
test
xchg
inc
mov
dec
pop
mov
ror
xor
and
sti
sub
scas
js
push
xchg
dec
jmp
and
jp
sub
jg
sbb
vmovss
pop
mov
mov
jecxz
(bad)
push
rcl
and
mov
rcr
je
xchg
jecxz
cld
pop
cmp
mov
adc
add
outs
in
cmp
stos
sub
xor
cmps
daa
adc
lea
jno
sub
dec
les
inc
inc
das
dec
jae
test
jle
cmp
add
imul
out
pop
pop
sbb
xor
repz
les
sub
mov
icebp
mov
add
and
mov
into
sub
aam
mov
xlat
and
fisubr
mov
jge
hlt
pop
mov
and
sti
push
mov
outs
loope
mov
inc
mov
mov
daa
and
sbb
sbb
and
mov
lods
adc
je
or
cli
rcr
and
ds
fsub
mov
push
mov
shl
scas
sbb
push
xor
push
dec
(bad)
icebp
push
test
scas
pop
test
jle
(bad)
arpl
pop
add
mov
xor
je
pop
sbb
cmp
or
mov
shr
outs
mov
jecxz
and
test
jmp
xchg
xor
mov
aas
xor
mov
mov
xor
and
jns
jp
lahf
sub
loopne
lea
push
add
and
mov
sti
je
mov
pop
aas
pop
mov
clc
jnp
pop
dec
xor
pusha
ds
jnp
out
bt
fdivp
mov
xor
popa
pop
je
mov
push
jmp
fwait
push
add
add
mov
cwde
ss
sub
sbb
rol
sahf
stc
in
and
xor
xor
push
and
inc
or
add
fnstenv
xor
mov
lock
mov
inc
loop
sub
jp
popf
or
mov
or
xchg
sub
bound
dec
popa
cmp
fmul
pop
lods
mov
lock
rcr
pop
sub
test
and
ror
(bad)
call
(bad)
or
push
add
(bad)
mov
loopne
into
loop
jnp
unpckhps
mov
cdq
scas
jmp
dec
out
call
cmp
push
xor
call
xor
xchg
add
mov
mov
fwait
aad
rol
mov
xchg
mov
jmp
sbb
dec
mul
mov
add
adc
pop
fs
jmp
outs
mov
js
(bad)
in
adc
jl
cmps
and
jns
push
adc
jo
mov
stos
cmp
test
mov
aad
mov
mov
movs
mov
(bad)
pop
ds
push
inc
jbe
jne
(bad)
fidivr
lods
xchg
dec
call
imul
sbb
aam
clc
outs
push
loopne
scas
ja
(bad)
mov
outs
jmp
out
mov
ss
punpcklwd
sbb
dec
xor
adc
jo
mov
imul
mov
das
sub
mov
jle
xchg
jb
mov
mov
sub
jmp
ficomp
hlt
dec
aam
gs
dec
adc
shr
sub
idiv
add
push
shr
mul
stos
nop
fwait
dec
jbe
inc
aaa
dec
and
out
out
pop
sub
add
cs
pop
mov
mov
mov
sub
mov
popf
icebp
fbld
in
jb
shl
cmp
fnstsw
jno
(bad)
mov
mov
out
loope
or
cs
or
pop
or
mov
inc
loop
sub
imul
ret
cmps
cs
inc
mov
inc
jl
pop
mov
loope
xor
ret
shl
push
and
stos
fidiv
xchg
leave
pop
cmp
aad
mov
mov
sbb
in
mov
cs
(bad)
pusha
mov
call
adc
mov
ins
stos
pop
fisttp
in
jmp
adc
dec
mul
push
xor
pop
aam
and
push
sbb
dec
xchg
das
inc
fidiv
pop
jp
(bad)
push
dec
xchg
pop
(bad)
popa
inc
jl
sar
les
sub
dec
shl
test
pop
out
jns
adc
in
das
loop
mov
sbb
mov
pop
js
fwait
out
outs
cmp
jno
or
movs
xor
fild
mov
inc
xor
std
jmp
mov
or
dec
add
dec
mov
pushf
cmp
into
cdq
nop
jne
xor
adc
and
fisttp
sbb
test
(bad)
jp
jmp
inc
lock
rcl
jg
adc
and
dec
pop
cmps
mov
sti
mov
or
pusha
push
mov
pop
fwait
pop
and
add
test
div
repnz
adc
fwait
xchg
ss
push
mov
repz
mov
xor
outs
clc
xchg
xchg
nop
ror
adc
in
rcr
pop
arpl
xlat
gs
ret
cmp
xor
ret
test
enter
loop
enter
push
ret
aas
xor
jge
in
push
pop
int3
push
jbe
ror
mov
add
inc
cmp
xchg
out
lods
jg
push
xor
fucom
mov
adc
dec
and
leave
push
ja
mov
pop
retf
out
fimul
int
push
adc
(bad)
cmps
test
shl
lahf
std
pop
fwait
nop
jg
lea
pop
cmp
mov
push
xor
xchg
test
pop
iret
sub
test
adc
loope
lahf
jecxz
jg
mov
jp
mov
ret
mov
outs
(bad)
sti
adc
cmc
and
pop
shl
push
pop
loop
or
ins
push
sbb
xchg
mov
(bad)
push
push
xchg
cli
js
leave
je
cli
mov
fstp
cmps
mov
mov
and
loop
or
adc
std
mov
inc
xchg
es
arpl
pop
mov
pop
cmp
loopne
(bad)
(bad)
cmc
std
scas
sub
mov
xchg
in
or
xchg
mov
sbb
out
imul
mov
xchg
call
ins
pusha
xchg
push
inc
fs
xlat
and
xlat
(bad)
inc
dec
shl
in
and
(bad)
dec
jge
xchg
inc
mov
or
jns
add
arpl
push
inc
add
push
inc
or
push
dec
ds
sbb
sti
imul
test
inc
adc
pop
in
lahf
dec
imul
cmp
xchg
push
add
add
jecxz
jns
fsub
and
lds
(bad)
jmp
lock
mov
std
or
and
or
and
inc
cmps
jno
aas
jecxz
leave
mov
inc
add
mov
repnz
fwait
(bad)
popf
stc
inc
mov
stc
pop
ret
cwde
dec
xor
push
cmc
arpl
inc
test
jecxz
in
adc
cs
jle
mov
gs
mov
adc
(bad)
lock
call
aad
cld
mov
(bad)
jae
pop
in
ret
aam
pusha
add
pop
stc
mov
aad
call
repz
lea
jecxz
cdq
cmp
in
rol
inc
dec
xor
fld
pop
hlt
cmps
lds
fmul
stos
sub
dec
mov
pusha
out
cli
test
sub
xor
stc
mov
sbb
jne
cld
shr
push
sub
pop
xor
mov
sub
jno
fcomp
add
jmp
imul
ja
or
sti
aaa
cmps
adc
dec
inc
stc
cmp
pop
adc
add
inc
sbb
mov
sub
mov
xor
mov
sub
jp
stos
je
pop
outs
cmps
ror
mov
arpl
or
scas
and
(bad)
das
outs
push
push
jmp
ja
jge
daa
dec
out
inc
retf
jno
scas
repz
adc
jmp
mov
mov
dec
add
or
int3
imul
out
mov
fiadd
add
adc
cmps
ds
neg
fwait
and
inc
aaa
jnp
jmp
dec
sub
or
dec
and
rol
enter
adc
cs
popf
cs
loop
inc
or
and
sbb
jne
and
(bad)
fiadd
mov
fistp
inc
and
jge
fld
cdq
or
pop
into
push
inc
sbb
dec
push
mov
cld
call
retf
mov
mov
ss
xchg
das
ror
(bad)
enter
leave
out
in
pop
sub
dec
pop
in
push
jle
lods
mov
sbb
cdq
xor
push
xor
shl
jle
mov
outs
xchg
sub
pop
test
adc
or
sbb
xor
pop
cmp
les
push
test
push
adc
movs
fwait
dec
pop
fisttp
das
hlt
xchg
mov
lods
adc
fbld
into
and
push
inc
out
(bad)
in
jmp
push
push
in
aam
inc
ins
wbinvd
inc
adc
loope
aaa
push
test
dec
or
pop
iret
gs
call
mov
aas
arpl
sbb
and
and
cmps
inc
xchg
mul
in
aad
stos
adc
sub
test
sbb
ins
inc
jp
jae
lahf
cld
xor
movs
dec
outs
or
int
pop
mov
inc
fbstp
mov
cmc
(bad)
outs
jbe
inc
jp
sbb
shr
jmp
imul
xchg
mov
push
add
dec
inc
pop
ret
lods
scas
mov
inc
mov
leave
jo
sbb
cli
pusha
in
add
ss
xchg
test
aaa
std
popf
cwde
cmp
into
add
js
movs
jle
cdq
outs
adc
sub
dec
adc
call
adc
inc
std
mov
leave
push
pop
fmul
pop
das
hlt
stos
bound
jecxz
mov
sbb
movs
lds
mov
retf
jge
inc
inc
cld
pop
hlt
pop
test
inc
popf
in
(bad)
ins
push
sahf
mov
cmp
push
dec
sbb
push
mov
jge
xor
push
mov
push
dec
or
daa
test
dec
add
or
and
pop
mov
out
mov
or
(bad)
mov
dec
aaa
scas
jecxz
aam
lahf
popa
stc
jecxz
inc
push
ficomp
xor
jae
in
iret
lods
clc
pusha
les
sahf
out
inc
sar
clc
sbb
test
sbb
and
fs
push
ret
mov
mov
sbb
cmp
pop
inc
fisttp
loopne
sti
add
jmp
add
in
(bad)
sub
and
leave
ins
movs
leave
dec
sub
dec
test
dec
mov
fisubr
je
adc
cmp
mov
enter
sbb
push
fidiv
fstp
sub
add
mov
imul
(bad)
xchg
mov
ja
and
jno
or
push
lahf
movs
push
(bad)
js
mov
or
idiv
scas
in
xor
and
mov
jge
mov
ds
cmp
dec
mov
pop
adc
pop
inc
mov
jmp
add
jno
aam
nop
popf
cmps
push
jg
dec
aaa
inc
jb
push
inc
in
dec
jnp
ss
adc
xor
dec
aam
sub
out
scas
call
popf
retf
xor
icebp
xchg
inc
mov
iret
push
or
dec
lea
xor
fadd
mov
repz
movhps
jle
or
mov
(bad)
rcr
push
out
sub
hlt
jl
lahf
(bad)
cld
test
sub
rol
fwait
and
sbb
fwait
psignb
mov
and
pop
mov
das
add
xlat
scas
rcr
push
mov
jns
jae
cli
mov
add
psubq
das
test
out
cmc
mov
popa
js
or
mov
pop
ret
(bad)
jae
loopne
or
test
or
imul
cld
mov
daa
lahf
xor
in
pop
enter
push
out
push
test
daa
dec
inc
(bad)
cmc
pop
sub
jns
retf
pop
sub
das
jo
lea
and
xchg
ds
cmc
jecxz
lds
ret
aad
sub
into
jl
ror
rcr
dec
pop
pop
cmc
mov
dec
adc
aaa
ja
hlt
sub
hlt
cs
loop
lock
add
and
jnp
enter
cmp
dec
imul
push
aad
jmp
clc
cmp
popa
push
add
dec
bound
xor
stc
push
xchg
sub
push
adc
dec
arpl
mov
adc
in
ss
lods
push
jae
xor
mov
xor
mov
push
jns
or
ins
xor
add
sbb
adc
sar
mov
sbb
cmps
jmp
mov
lds
test
scas
js
stos
xor
daa
xor
sub
fwait
daa
test
xchg
ins
pop
xchg
and
fistp
sbb
xchg
jmp
arpl
mov
cmp
xchg
push
repnz
icebp
lahf
stos
mov
frstor
jp
dec
xchg
push
in
rcl
push
pop
push
fdiv
add
imul
jmp
or
int
cmp
ret
add
outs
sahf
test
sub
mov
xchg
loop
push
cmp
rol
xor
test
fisubr
push
xor
pushf
mov
in
adc
pop
mov
jb
out
lock
add
ret
mov
push
repnz
cwde
ret
add
lods
jl
test
in
cmc
push
jo
(bad)
inc
lods
or
jmp
mov
stos
imul
mov
mov
ds
pop
cwde
cmp
psrlw
mov
dec
mov
es
jmp
jmp
lods
imul
jmp
cmp
mov
fld
in
and
scas
xlat
xchg
lock
in
dec
push
aad
rcl
cld
dec
adc
xchg
lods
add
jnp
mov
xchg
mov
push
cld
int
shl
or
xor
mov
push
sub
mov
mov
xchg
(bad)
(bad)
jp
add
ds
jno
js
jbe
mov
cli
je
xor
mov
mov
fistp
push
call
ror
mov
inc
dec
inc
sub
mov
inc
xchg
push
movs
cmps
xlat
or
pop
retf
add
adc
cmp
and
jp
pushf
out
test
(bad)
cld
jmp
xchg
std
std
ret
cmp
out
aas
ins
outs
push
movs
cld
and
iret
outs
ficomp
pop
or
adc
sbb
add
xchg
test
loopne
push
xchg
push
int3
push
pop
mul
adc
rol
push
gs
loope
cdq
push
jecxz
in
hlt
mov
cmc
movs
clc
jne
sub
ja
lea
dec
pop
jmp
cmp
jge
mov
xor
add
imul
dec
lods
mov
dec
xor
cmp
adc
iret
inc
dec
lea
xor
dec
pop
add
mov
loop
bound
repnz
mov
push
jb
in
aad
loop
daa
loope
loop
add
sub
test
pop
aaa
loop
dec
or
dec
popf
xor
js
dec
sti
jae
add
call
push
jmp
sahf
and
cli
adc
mov
inc
das
pop
xchg
xor
and
mov
jb
jg
bound
ss
and
lea
mov
call
es
aaa
cwde
in
aaa
push
mov
sub
mov
into
push
sub
ds
stc
retf
mov
mov
dec
xchg
nop
adc
xchg
jp
clc
aam
xor
jne
cmp
jmp
push
lods
dec
fdivrp
fisttp
push
pop
(bad)
xor
jmp
cmp
sar
fimul
pop
jl
inc
cmp
arpl
xchg
mov
ret
add
push
push
or
dec
add
sub
out
or
iret
add
xor
(bad)
fcmovnbe
sti
jle
movs
jbe
ins
les
adc
lock
push
in
cli
xchg
and
nop
or
shl
test
mov
pop
sbb
int
adc
sub
push
sub
mov
dec
sub
neg
fsubr
pop
push
sbb
shl
lea
sbb
retf
rcl
call
fucomi
xor
mov
inc
dec
fidivr
(bad)
ret
stos
mov
out
sub
add
fistp
inc
mov
or
fbstp
mov
push
popf
mov
sub
fld
sti
cmp
shl
jnp
and
jl
ins
and
dec
push
popa
fst
or
sbb
push
(bad)
stc
jp
push
mov
mov
jne
das
lods
push
add
or
xor
outs
cli
xlat
jo
jbe
out
lods
fnsave
cmp
mov
jp
xchg
sub
cmp
mov
adc
pop
(bad)
aas
cld
mov
outs
fld
or
fdiv
aas
cmc
sbb
xor
lock
jno
jle
int
in
mov
pop
mov
xor
lahf
leave
add
dec
push
mov
in
pop
inc
fwait
out
fsubr
mov
clc
mov
mov
push
mov
xchg
push
jo
pop
sbb
shl
push
add
div
(bad)
ffreep
xchg
or
jl
inc
dec
mov
mov
inc
sbb
dec
aam
push
push
fmul
jle
fwait
jmp
(bad)
xsha1
cmps
blci
dec
cli
inc
adc
ss
les
inc
cmp
push
rcl
jmp
jbe
mov
out
in
jo
out
mov
pop
push
pop
outs
mov
sub
mov
imul
test
xchg
sbb
sbb
push
jg
test
js
mov
sub
outs
jae
mov
jo
jge
popa
and
and
out
das
jg
add
and
or
cmps
into
repz
es
call
std
jp
or
and
sub
cmp
pop
inc
ins
push
mov
in
cmp
and
sahf
cld
fwait
push
inc
push
out
cmp
iret
mov
daa
sub
ret
ficomp
stos
lahf
test
in
adc
sar
xchg
sahf
enter
inc
mov
dec
mov
inc
xchg
fdiv
xor
push
mov
mov
das
jnp
loope
and
out
bound
jns
fidiv
sub
xlat
je
ret
adc
mov
scas
std
adc
call
fisub
xchg
loope
xchg
cmp
gs
movs
iret
int3
call
cwde
arpl
pop
imul
repz
jnp
adc
jmp
cmp
pushf
cmp
inc
dec
scas
mov
call
mov
pop
ret
frstor
fild
dec
pop
ret
loopne
cmps
call
mov
dec
icebp
xchg
mov
push
push
sbb
mov
test
mov
loopne
neg
push
cmp
mov
cs
push
cld
leave
lds
jb
xor
mov
jl
and
leave
push
jnp
je
mov
mov
enter
stc
pop
jo
xlat
sub
sbb
mov
pop
xchg
jne
sub
test
outs
ror
dec
push
rcl
ins
add
cmp
es
dec
push
imul
stos
sub
and
sub
stos
xor
aad
and
data16
adc
mov
pop
push
stos
xor
adc
push
and
and
dec
arpl
push
inc
shl
ins
jne
pop
int3
pop
push
mov
cmp
addr16
pusha
push
push
int
fstp
movs
pop
or
sbb
xlat
pop
jmp
test
ret
jge
aad
adc
dec
out
mov
mul
pop
pop
out
jns
and
sub
mov
xchg
cmp
mov
je
jg
pop
ds
push
sbb
out
clc
xchg
ror
icebp
not
arpl
(bad)
aaa
mov
fwait
jno
dec
cwde
mov
fwait
or
mov
idiv
sbb
or
xchg
adc
or
stc
pop
scas
imul
das
pop
daa
mov
or
xlat
and
push
push
xor
(bad)
pop
sub
mov
sub
add
inc
movs
loopne
enter
cs
xchg
adc
and
mul
ja
add
sub
(bad)
cmps
cmp
sub
push
(bad)
add
mov
(bad)
outs
retf
mov
dec
ins
neg
adc
sbb
sub
mov
pop
or
aas
ret
adc
icebp
hlt
mov
ins
mov
sub
jbe
inc
push
or
dec
cmps
movs
xor
bnd
inc
neg
mov
push
cmp
cmc
repz
(bad)
cli
sbb
call
xchg
gs
(bad)
loope
push
rol
mov
or
test
xor
fisttp
jmp
ins
xor
les
(bad)
(bad)
shr
jb
mov
cmp
mov
xor
ret
or
inc
(bad)
fisub
jl
mov
div
pusha
mov
test
pop
add
mov
cwde
cmps
test
pop
adc
aas
fmul
scas
jl
adc
stos
jae
mov
stc
mov
mov
test
clc
cmp
outs
xchg
imul
(bad)
jb
leave
push
pop
xchg
dec
lds
cld
adc
not
inc
add
mov
sbb
stos
aad
sub
push
rcl
cdq
mov
lods
out
aad
pop
(bad)
aam
jne
adc
sbb
not
mov
mov
dec
push
mov
push
cmp
in
cs
xchg
pop
into
ja
adc
(bad)
mov
aad
xchg
retf
sub
pop
jmp
das
sub
lahf
sub
retf
lods
(bad)
mov
inc
(bad)
cmc
rol
addr16
adc
in
cmp
in
mov
push
lods
add
in
ds
sub
and
cwde
(bad)
adc
mov
add
jl
pop
pop
pusha
fs
lds
dec
push
out
lods
and
vpsrad
popa
or
clc
jnp
mov
rol
fcomp
pop
out
ret
cld
xchg
sbb
test
ins
sti
fstp
sbb
cld
jp
push
int
pop
cmps
call
retf
mov
(bad)
std
mov
sbb
fstp
cmp
outs
mov
cmp
rol
dec
pop
push
iret
xchg
cmp
xchg
or
cmp
daa
movs
pmullw
push
adc
dec
pop
in
dec
test
pop
push
call
retf
mov
sbb
jae
xchg
daa
into
mov
in
jns
scas
in
out
sub
inc
inc
xor
mov
push
xchg
lahf
add
dec
mov
cmp
mov
sbb
adc
or
mov
sbb
add
jo
push
cwde
push
addr16
fwait
repz
test
mov
imul
lock
ja
ret
dec
popf
sub
dec
in
popf
int
icebp
push
shr
jnp
das
push
adc
(bad)
jp
movs
stos
fimul
xchg
loop
pop
mov
ja
test
xchg
daa
xchg
movs
inc
push
mov
mov
out
in
xor
dec
inc
xchg
inc
pop
popf
push
jecxz
iret
ins
pop
xchg
icebp
pop
and
push
imul
sub
daa
and
push
add
loopne
in
lods
push
cmps
ret
xor
hlt
(bad)
ficomp
fild
lods
das
push
inc
jbe
sub
pop
pop
pop
aaa
sub
movs
push
jg
fnstsw
add
in
(bad)
fsub
shl
sub
retf
jne
sbb
repz
bound
(bad)
cmp
xchg
sub
mov
cmp
mov
repnz
and
cmp
loope
inc
dec
sbb
mov
(bad)
fist
iret
push
sub
call
fdiv
mov
push
push
push
mov
xor
jnp
and
xor
or
in
leave
popf
enter
das
aas
add
push
cs
into
imul
pop
(bad)
fsub
push
jns
movs
push
test
lods
push
outs
jne
neg
xchg
pop
es
cmp
mov
mov
jno
out
push
scas
sbb
dec
ds
mov
iret
cdq
cmp
out
pusha
push
sbb
mov
icebp
icebp
jno
jmp
lds
fdiv
js
shr
sbb
xor
(bad)
mov
(bad)
cmc
push
cs
andps
icebp
pop
dec
movs
out
imul
adc
mov
or
ror
das
fbstp
sar
mov
mov
leave
pop
repnz
mov
lahf
test
aaa
cwde
or
in
adc
cmp
jmp
adc
imul
mov
leave
jmp
sbb
dec
xchg
jns
mov
ficomp
repz
pop
xchg
cs
cdq
in
cs
push
sbb
push
shl
popf
dec
xchg
jp
cmp
pushf
retf
dec
ja
and
(bad)
cmp
fst
push
movs
xlat
test
fcomp
adc
inc
push
mov
cld
pop
add
xlat
mov
mov
es
sub
stos
and
push
fist
and
dec
fcmove
dec
pusha
dec
inc
aas
ja
mov
fdivr
or
jle
adc
cmp
pop
jge
adc
clc
push
mov
clc
addr16
test
arpl
mov
ret
hlt
aas
je
fld
dec
mov
lods
sub
outs
adc
xchg
pop
jmp
or
jmp
js
fimul
xchg
sbb
pop
push
or
xor
and
jno
xor
pop
les
sub
xor
cmc
popf
sub
dec
dec
mov
test
mov
test
outs
das
ss
cdq
pop
rol
pusha
and
std
(bad)
std
push
add
and
dec
sti
push
call
cmc
inc
cs
or
les
sub
adc
mov
and
mov
popf
and
cdq
ror
inc
int
mov
pop
cwde
push
sbb
inc
in
std
dec
pop
xor
sub
scas
mov
sub
adc
inc
mov
add
pop
jmp
xchg
ss
je
arpl
inc
cs
pop
or
xor
dec
fsub
mov
test
dec
ret
pop
push
dec
cmp
out
and
add
sahf
mov
aaa
mov
mov
mov
dec
sub
es
fcmovnu
pop
inc
jmp
jg
fistp
pop
call
xlat
push
(bad)
data16
pusha
scas
dec
push
mov
lods
int
mov
and
xchg
jo
movs
mov
add
push
sub
ss
dec
mov
mov
pop
faddp
pusha
scas
xchg
cdq
aam
dec
or
test
inc
mov
and
stc
mov
sub
(bad)
push
sti
push
adc
mov
jae
or
shl
es
mov
fiadd
daa
mov
add
cmp
popf
mov
jb
dec
sub
cmpxchg
retf
xchg
pop
push
call
pushf
in
leave
shr
xor
stos
ss
(bad)
sbb
mov
dec
push
stc
pop
hlt
jbe
mul
inc
and
and
push
pop
pop
or
rcl
or
in
into
push
adc
enter
bound
mov
shr
std
or
jb
ret
or
or
add
rcr
xchg
pop
pop
and
cld
add
cmp
fnstcw
cmp
jecxz
mov
and
or
sar
jns
or
ret
xor
jns
mov
cmp
addr16
lods
inc
push
lods
repnz
lods
xor
xchg
mov
rcl
mov
xchg
test
or
leave
jp
scas
sub
dec
pop
jae
or
lds
scas
jno
mov
pop
sar
scas
cdq
jo
pop
std
mov
clc
dec
lahf
ins
fcomp
call
sub
or
bound
dec
push
(bad)
iret
in
pop
dec
mov
mov
ret
inc
cmp
cwde
das
push
loop
mov
jmp
retf
sub
pop
call
xchg
fadd
scas
or
ins
ret
test
cmp
fiadd
sti
cmp
call
in
ins
into
pop
fimul
xchg
jp
loope
out
pop
and
push
push
lahf
push
cmps
inc
sub
cld
adc
jl
scas
mov
dec
leave
loopne
cmp
imul
jbe
mov
sub
cdq
lods
dec
out
mov
and
loope
jecxz
push
xchg
mul
mov
mov
mov
stc
pop
sub
xor
ins
or
mov
mov
test
push
fistp
mov
push
in
push
rol
push
mov
mov
inc
fcmovnu
sub
fiadd
jmp
mov
clc
daa
jmp
scas
outs
xchg
fld
inc
xchg
and
mov
xlat
fcomp
das
cmp
aaa
or
cmp
sbb
pushf
nop
fidiv
lock
cmp
fcmovnb
pushf
add
rcl
test
ins
lock
test
stc
out
out
popf
mov
and
cmp
ss
and
mov
mov
and
xchg
pop
int3
ss
mov
not
fs
or
mov
pop
xor
ret
mov
(bad)
ret
cmp
je
aam
sub
jmp
jg
scas
xchg
dec
std
inc
pop
loope
mov
lea
idiv
daa
xor
push
nop
pop
int3
cmp
out
hlt
arpl
or
cmp
ret
lock
pop
not
sbb
adc
dec
sahf
jmp
cld
push
jecxz
cmps
mov
cmp
leave
les
es
shr
ins
fmulp
xchg
inc
and
dec
lahf
cmp
inc
cs
cmp
adc
movs
or
es
inc
xchg
in
or
sbb
pusha
jmp
mov
pop
bound
jno
or
adc
lea
scas
movs
adc
fidiv
sub
jae
mov
test
push
sub
xor
mov
daa
mul
jno
nop
or
in
xchg
mov
cdq
or
adc
dec
aam
adc
and
fstp
vxorps
je
add
adc
cmp
dec
hlt
push
push
cmps
(bad)
push
fnstenv
mov
jp
inc
sbb
fbld
imul
xchg
js
aad
popa
stc
sahf
dec
inc
fsub
push
xchg
add
cmp
sbb
add
js
and
sbb
push
jmp
call
icebp
(bad)
jmp
and
xchg
inc
mov
jmp
xchg
sub
out
sbb
mov
mov
sbb
xchg
adc
fcmove
adc
aas
jo
xchg
xor
pop
cmp
xchg
hlt
std
sbb
clc
ret
das
mov
push
test
stos
add
in
ret
sub
es
sub
sub
mov
cmc
es
mov
jmp
add
fidiv
lock
ja
(bad)
ror
sbb
adc
dec
xchg
mov
out
xor
mov
mov
jecxz
call
out
and
pop
pop
das
and
mov
and
sub
and
cmps
or
push
rcr
cs
jp
in
or
fild
inc
call
xor
push
jb
aad
call
adc
jg
iret
(bad)
ins
mov
adc
aas
inc
bound
jge
fxch
ins
je
add
add
sbb
inc
sub
xchg
adc
mov
std
push
fcom
rcl
xchg
push
jo
push
fsub
loopne
xchg
mov
push
stc
mov
sub
cli
dec
ficomp
jne
pop
mov
enter
or
sub
(bad)
dec
push
fs
xor
pop
cmp
mov
outs
adc
inc
int3
nop
loop
retf
lds
push
ja
mov
jl
mov
sub
pop
jns
fs
icebp
or
sbb
ffree
xchg
cmp
mov
or
popf
cli
aam
inc
out
arpl
lods
inc
mov
test
arpl
xor
outs
sti
test
out
mov
cmp
mov
cmp
jns
imul
push
xor
movs
dec
adc
jl
and
pop
add
push
mov
add
mov
mov
jecxz
daa
mov
dec
loopne
pop
mov
add
and
push
push
xchg
inc
shl
push
pop
pusha
push
retf
or
push
or
or
adc
inc
outs
mov
push
mov
and
pushf
adc
loope
sti
mov
or
test
push
mov
cmps
xor
xchg
cs
cmovnp
in
push
outs
stos
xor
clc
and
inc
sbb
shl
fisttp
sub
jmp
(bad)
in
fwait
mov
or
sub
inc
or
xchg
call
je
fs
push
jnp
jne
and
jecxz
mov
imul
lock
xor
mov
xchg
retf
inc
(bad)
push
popf
icebp
pushf
bound
repz
and
or
rcl
mov
(bad)
les
mov
xor
add
mov
lock
sti
add
or
out
stos
jle
shr
idiv
add
sahf
fidiv
int3
sub
xor
jo
push
dec
dec
jg
retf
cmp
outs
imul
xor
adc
push
cmp
(bad)
sti
idiv
pop
mov
mov
push
sub
ficomp
push
push
sub
adc
(bad)
cmc
or
mov
push
push
sbb
push
cmps
inc
mov
or
loopne
cmp
cmp
sub
mov
cmps
push
mov
cld
xchg
add
mov
adc
sub
dec
(bad)
adc
jecxz
retf
rcl
adc
push
or
jb
rcl
cwde
sbb
hlt
sbb
shr
sub
into
dec
shl
call
jno
jno
mov
dec
cmp
pop
push
sbb
stos
fwait
div
fldcw
fwait
push
pop
jne
js
pop
shr
pop
retf
jmp
cmc
je
not
fdivrp
out
clc
popf
push
mov
ds
add
in
jle
not
jg
xchg
sbb
jbe
stc
loopne
jns
or
mov
add
aaa
and
test
pop
out
and
jo
push
xor
std
jl
call
movs
(bad)
adc
or
and
jmp
sbb
inc
aam
fcmove
aam
xchg
sar
shl
sti
or
aad
cdq
in
std
jo
vmwrite
xchg
dec
mov
std
xchg
add
sahf
sub
xchg
mov
inc
mov
xlat
xlat
cmps
push
jmp
push
aaa
ffree
sbb
cmp
hlt
outs
aam
lods
hlt
retf
xchg
sti
retf
push
pushf
ins
jno
dec
call
test
pop
dec
out
inc
mov
adc
fimul
in
(bad)
das
add
jne
test
in
stos
loopne
push
cwde
pop
mov
pushf
repz
lea
test
xchg
aas
sub
adc
cmp
jl
push
mov
jmp
out
mov
bound
mov
int3
std
ror
outs
mov
mov
imul
les
loop
inc
or
or
gs
(bad)
mov
sti
jns
mov
test
pop
imul
mov
mov
stos
add
mov
or
arpl
or
scas
out
(bad)
xlat
mov
jmp
int
fdiv
pop
push
sbb
pop
xor
mov
not
fistp
lods
mov
push
test
rcl
out
daa
xchg
lods
and
add
stos
out
xor
enter
test
(bad)
lock
sub
or
inc
sbb
scas
leave
(bad)
repnz
(bad)
sub
iret
sub
mov
enter
ficom
push
loopne
mov
das
pop
dec
pusha
lods
leave
cmps
les
adc
and
xlat
sbb
cmp
or
jge
adc
xor
cs
mov
scas
iret
xor
outs
sti
je
mov
push
jne
sub
arpl
lods
sbb
xchg
xchg
mov
popf
mov
int
call
mov
jb
and
xor
icebp
adc
mov
ficom
(bad)
xchg
mov
adc
pop
push
retf
ret
stos
jno
and
ins
pop
stc
dec
pop
arpl
sub
inc
in
jle
in
mov
mov
dec
pop
jbe
pop
arpl
dec
mov
(bad)
ja
ret
sbb
mov
int3
scas
call
pop
jg
nop
pop
cmp
mov
dec
fs
dec
sbb
mov
and
xchg
(bad)
mov
les
cmp
daa
repz
push
neg
and
inc
push
movs
cdq
js
shr
xor
cmp
out
inc
sub
add
(bad)
jbe
inc
inc
cwde
sub
add
push
mov
mov
mov
xchg
repz
int
vpslld
repnz
mul
ins
pop
ds
imul
sbb
in
jg
lods
or
bound
mov
inc
and
adc
fst
jge
pop
xor
in
jmp
mov
adc
xor
cmp
xor
mov
mov
jge
cmp
out
cdq
sub
cld
(bad)
dec
push
xchg
mov
jmp
test
mov
mov
sbb
out
jb
jb
push
inc
adc
nop
call
or
in
xchg
out
add
jg
inc
popf
movs
in
sub
aam
es
out
dec
xchg
std
jle
sub
mov
and
adc
leave
xor
fsubr
out
outs
aad
repnz
stos
dec
shr
popa
inc
inc
gs
lea
fstp
leave
inc
push
(bad)
hlt
inc
and
push
cwde
mov
(bad)
pop
push
cmovp
push
jg
frstor
fs
imul
adc
pop
popf
cli
movs
ror
sub
xlat
jecxz
xor
jb
or
int
inc
(bad)
adc
data16
mov
adc
push
xchg
dec
(bad)
jmp
aad
xchg
or
mov
int
mov
xchg
test
or
xchg
push
dec
fsubr
push
sbb
gs
ja
and
cmps
mov
rcl
sub
lahf
aaa
inc
sbb
mov
mov
xchg
mov
inc
repz
jl
out
and
bound
not
mov
enter
pop
dec
popf
adc
mov
inc
imul
cmp
(bad)
out
arpl
cdq
hlt
mov
pop
pop
sti
out
cs
hlt
dec
ret
(bad)
in
outs
xchg
and
ss
jae
cmp
outs
dec
les
fisub
xchg
cs
shl
jle
or
jecxz
sbb
mov
sbb
lock
pop
push
xchg
pop
inc
jo
loop
mov
push
in
pop
stos
pop
pop
cmp
pop
icebp
adc
loop
test
xor
jnp
xor
add
mov
cmps
cld
cs
jmp
add
fcom
lahf
jb
test
dec
pop
(bad)
mov
out
or
and
aaa
pop
ficom
add
jo
xchg
pop
test
stos
movs
add
lea
movs
xchg
and
fdivr
mov
ror
mov
iret
inc
xchg
iret
lock
fidivr
dec
fidivr
shr
push
inc
add
and
jb
jo
cmp
(bad)
scas
mov
cmp
sahf
out
aad
add
test
mov
cmp
repnz
cmc
xor
(bad)
mov
movs
or
cmp
imul
xchg
or
leave
in
jo
stos
add
fwait
cmp
and
jo
or
pop
lds
xchg
daa
dec
(bad)
mov
sub
mov
mov
rcl
cmps
adc
addr16
push
imul
dec
jle
les
adc
jge
mov
addr16
push
sub
mov
add
out
retf
xor
jmp
shl
movs
sahf
outs
test
push
add
std
pop
cs
inc
in
jl
sar
(bad)
int3
sub
pop
inc
dec
test
and
mov
sbb
adc
pop
mov
pop
adc
lods
sbb
(bad)
leave
push
int
inc
aam
adc
sbb
(bad)
sub
and
add
mov
jb
cmp
dec
jecxz
sbb
pop
int3
xor
data16
add
dec
div
jl
or
stos
push
dec
lods
mov
movs
push
sar
cmp
loope
leave
add
push
jmp
and
or
sub
(bad)
xor
add
test
inc
popf
xor
inc
xor
fild
js
mov
add
cmp
and
xor
pop
mov
fidivr
sahf
xchg
pusha
out
test
in
aaa
sub
mov
pop
push
inc
(bad)
cmp
mov
jl
dec
fiadd
adc
inc
and
(bad)
enter
test
and
pop
ret
les
jp
jno
lahf
ins
dec
mov
cmp
mov
adc
push
daa
xchg
sbb
and
aaa
nop
xchg
cmp
test
cmp
jge
and
mov
pop
sbb
mov
inc
push
jmp
mov
rcl
pop
aas
rcr
into
mov
jae
mov
imul
push
adc
cmc
adc
push
pop
or
(bad)
mov
sub
mov
clc
faddp
push
or
fnsave
loope
popa
xor
(bad)
mov
cmp
sbb
out
(bad)
outs
sub
and
ins
repz
push
push
adc
mov
dec
sbb
pop
sub
push
mov
xor
loope
std
ja
stos
mov
or
popa
pop
pop
out
xchg
movs
stos
mov
adc
push
fldcw
inc
loop
and
scas
sub
cmp
mov
sbb
mov
mov
cmp
fdivr
outs
nop
pop
lock
jg
push
enter
ja
xor
xor
add
xor
sahf
pop
adc
mov
ficomp
lahf
enter
mov
repnz
sbb
pop
repz
mov
jge
sub
pusha
push
sbb
stos
popa
inc
cmps
push
idiv
inc
imul
sbb
jmp
aad
pusha
fist
out
adc
(bad)
mov
sub
movs
fild
push
int
ror
sub
add
aam
aam
pop
cmp
fwait
mov
ins
inc
cdq
or
popf
sub
pop
push
pop
mov
fmul
cdq
fnstenv
and
mov
loop
push
pop
cdq
or
ins
and
sbb
jl
stos
and
xchg
sub
pop
into
and
sub
scas
gs
fwait
retf
mov
push
mov
push
bnd
out
cld
mov
jle
sti
out
mov
dec
mov
popa
test
aas
adc
pop
aas
ds
call
aam
and
lahf
xor
mov
(bad)
mov
je
cli
xor
out
adc
pop
sbb
sbb
jmp
xchg
mov
pop
mov
sbb
sbb
cli
sub
aas
jnp
lea
div
cmp
sbb
das
repz
fwait
popf
dec
push
fadd
jecxz
test
iret
dec
jnp
pop
pop
add
dec
lahf
int3
mov
out
(bad)
sbb
ins
je
sub
or
push
xchg
ins
(bad)
xchg
jmp
jecxz
push
adc
add
mov
(bad)
gs
(bad)
(bad)
cmp
shl
sbb
jae
pop
or
fsub
mov
xor
and
test
add
mov
gs
pop
mov
xor
arpl
xor
and
test
mov
das
cmp
and
call
add
fidivr
aam
shl
push
dec
mov
mov
xor
adc
(bad)
test
es
stc
xchg
xor
push
xchg
lods
mov
mov
retf
mov
shl
inc
sbb
sub
shr
je
cli
pop
cdq
into
nop
das
mov
dec
lock
mov
int
mov
dec
fistp
imul
jl
push
ss
ja
sub
jg
sti
in
push
xchg
iret
ds
push
js
out
aam
test
xchg
mov
mov
addr16
pop
into
shl
adc
jo
xchg
xchg
(bad)
jne
pushf
jmp
fdivr
js
jg
in
mov
mov
lds
test
pop
ins
jae
(bad)
(bad)
jmp
(bad)
lods
lds
in
jmp
pushf
imul
in
xchg
leave
in
sbb
fcom
aas
mov
cmc
pop
xor
repnz
and
pusha
jno
fisubr
push
or
sbb
inc
or
jmp
cmps
idiv
fbld
mov
imul
push
lds
stos
push
inc
jmp
add
mov
or
movs
shr
into
repnz
loopne
xchg
inc
popf
sub
ret
cmp
scas
add
sub
ins
cmp
mov
push
mov
data16
push
pop
fbld
add
sbb
test
mov
ins
inc
or
xor
cmp
sub
aaa
cmp
push
(bad)
shl
jae
fistp
leave
xchg
cmc
jle
fisttp
mov
jge
cmps
add
cmc
sub
fidiv
dec
mov
into
scas
leave
add
retf
nop
ror
inc
fcmovnb
lods
xchg
pop
fcomp
or
(bad)
mov
inc
and
mov
add
mov
push
inc
in
in
hlt
mov
inc
enter
in
cmp
rcr
inc
sub
push
pop
dec
push
repz
ret
aam
test
inc
outs
mov
and
hlt
push
xchg
retf
add
xor
sahf
inc
movs
dec
pop
mov
sar
dec
cdq
mov
push
mov
lods
sbb
repz
int3
mov
pushf
scas
test
sub
jb
aaa
or
sbb
or
mov
sbb
or
sbb
sub
int3
pop
add
js
cmp
pop
sub
xchg
outs
ficom
addr16
sbb
out
int3
leave
jnp
mov
mov
mov
xchg
stc
outs
out
out
pop
mov
in
(bad)
enter
mov
std
enter
cmps
inc
mov
mov
jge
cmp
mov
push
pop
in
in
jns
test
mov
sub
mov
xchg
icebp
jae
dec
cmp
movs
mov
jae
nop
mov
push
xchg
push
mov
and
and
pusha
push
fld
or
ret
pop
mov
xchg
sub
cmps
inc
or
inc
in
jle
lahf
inc
daa
ja
dec
cmp
inc
inc
jge
mov
ss
mov
movs
pop
outs
add
in
sbb
fcomp
fcmovbe
fldcw
sub
retf
inc
adc
int
scas
mov
xchg
movs
push
cwde
neg
retf
xor
stos
jb
in
xlat
cmps
daa
inc
xchg
adc
(bad)
sti
jmp
mov
add
mov
in
mov
in
add
aam
call
loop
push
into
jmp
lock
or
popa
cmp
mov
pop
cmp
jne
cmp
ficom
dec
and
hlt
leave
mov
xor
retf
fwait
xchg
out
and
fwait
pusha
scas
mov
fidivr
paddusw
pop
jo
sub
xchg
das
or
xor
jl
pop
xchg
stos
icebp
xchg
stos
aam
fimul
cli
mov
ins
cmp
aam
cmc
sbb
(bad)
xchg
inc
push
mov
test
jbe
loope
cmp
lods
ins
icebp
call
cdq
xor
mov
lea
dec
push
push
pop
push
sub
imul
ins
push
jae
add
mov
test
xor
cmp
sahf
mov
jbe
and
nop
aad
dec
lock
movs
inc
mul
icebp
xor
(bad)
dec
add
outs
sbb
add
data16
dec
push
cmp
or
retf
mov
call
xor
mov
inc
out
cmp
jmp
jbe
stos
or
inc
in
pop
push
into
mov
hlt
in
add
sbb
xchg
addr16
ja
out
sub
scas
cli
push
cmp
sbb
call
fimul
mov
push
test
popf
mov
xchg
cmp
mov
aas
dec
mov
add
repnz
(bad)
shr
aaa
(bad)
and
imul
dec
cwde
call
outs
je
or
and
inc
xchg
shl
mov
ret
push
cmps
aaa
icebp
jnp
sub
ja
cs
dec
dec
stos
stos
mov
mov
adc
cmc
push
and
scas
stos
push
mov
mov
inc
fdiv
shr
cmp
aaa
mov
mov
xchg
cmp
fcmovu
add
scas
(bad)
(bad)
inc
mov
cld
es
add
test
cmps
sub
add
push
cwde
mov
or
cmp
jb
xchg
jnp
mov
in
sahf
loopne
xchg
dec
pop
dec
xor
mov
imul
jmp
rcl
lods
mov
pop
or
and
jno
inc
inc
rol
data16
xor
lar
test
push
in
pop
repnz
scas
fstp
cmp
cmp
cdq
push
fisub
mov
or
movs
gs
arpl
mov
xchg
push
gs
sbb
call
mov
mov
xor
shl
fs
into
retf
or
shl
ret
mov
sbb
jae
push
xor
mov
fistp
xchg
imul
cli
xchg
out
push
imul
cmp
fdecstp
and
cmps
or
xor
leave
cmp
dec
ret
and
retf
ins
retf
ret
fsubr
(bad)
adc
sar
bswap
add
sahf
inc
(bad)
loopne
add
(bad)
fcomp
jbe
pop
repz
in
adc
dec
xor
push
and
mov
push
add
dec
call
cmovnp
mov
and
mov
jmp
xchg
les
push
stc
in
xchg
mov
mov
mov
ror
in
inc
push
inc
fmul
in
fdivr
out
jge
icebp
or
call
mov
int3
dec
pop
es
rcr
inc
outs
jge
jnp
sbb
inc
cmps
jle
add
outs
pop
pop
xlat
mov
test
dec
jp
fldcw
shl
jge
inc
lods
push
cli
test
and
inc
call
jns
inc
xchg
fdiv
(bad)
mov
mov
(bad)
imul
cs
shl
in
enter
aas
and
mov
and
pushf
mov
and
adc
cmp
xchg
dec
clc
xchg
loop
sahf
jge
lock
jbe
sbb
mov
xor
push
sahf
xchg
frstor
arpl
xor
add
inc
jle
cli
js
mov
test
out
add
mov
mov
rcl
inc
loop
stos
jmp
dec
out
jle
in
(bad)
sub
jns
sti
sub
in
dec
ss
repz
sbb
test
fbld
pop
(bad)
fnstsw
icebp
gs
in
xchg
inc
cmp
mov
jmp
dec
mov
js
and
sub
mov
mov
rol
cmp
add
pop
mov
cdq
retf
mov
sub
add
sbb
mov
xor
shl
fsin
(bad)
lea
pop
add
xchg
adc
jl
sbb
les
add
fwait
push
push
test
lea
cmp
dec
cmp
inc
inc
in
inc
repz
inc
cs
inc
push
loope
les
mov
adc
sbb
js
push
pop
inc
add
mov
pop
inc
dec
push
and
mov
mov
icebp
or
mov
and
mov
adc
sub
shr
push
es
mov
mov
stc
out
gs
arpl
ret
stc
sub
ja
loope
mov
movs
push
test
add
push
pop
movs
jae
fidiv
mov
ins
xor
sbb
dec
sub
xchg
cmp
xor
mov
test
mov
dec
pop
xor
dec
not
push
sub
mov
(bad)
cmp
nop
mov
js
loope
jl
fnstsw
xor
jae
push
retf
gs
clc
pop
mov
cmp
gs
pop
hlt
dec
push
xchg
mov
pop
or
dec
inc
inc
repz
pop
imul
loope
in
inc
mov
fadd
jge
in
popa
pop
lds
xchg
sub
add
cmps
xor
ja
in
push
sub
shl
xchg
cmp
fwait
arpl
push
push
cli
jb
std
dec
jne
or
sub
ja
xchg
sub
shr
retf
push
pop
gs
cmps
cmps
inc
add
or
pop
scas
test
mov
mov
xor
add
cmp
adc
adc
mov
fwait
ror
test
xor
out
xchg
mov
fwait
mov
loope
jns
cdq
xor
dec
mov
mov
add
dec
dec
daa
aaa
add
push
(bad)
dec
sti
cmps
(bad)
div
scas
cmp
and
cld
dec
mov
inc
mov
or
push
call
and
adc
inc
shl
push
pushf
ret
lods
push
sar
dec
push
push
and
sbb
mov
mov
push
mov
call
inc
fild
push
ret
rep
(bad)
mov
jbe
fwait
addr16
or
cld
adc
stc
mov
fs
mov
push
daa
fcom
mov
add
jecxz
push
sbb
jmp
dec
dec
ins
adc
dec
(bad)
mov
mov
nop
in
dec
ja
sub
das
mov
jg
fidiv
cmp
push
mov
cli
pop
mov
push
addr16
sbb
xor
scas
mov
inc
scas
imul
not
sbb
jge
movs
push
push
inc
push
popf
cmp
bound
jg
sub
push
sub
icebp
jne
jns
fst
outs
sub
lods
cwde
push
jno
add
mov
mov
sti
sub
and
test
les
pop
(bad)
pop
sub
mov
jo
dec
mov
repz
iret
in
dec
clc
push
sbb
sbb
inc
xchg
push
shr
nop
addr16
push
(bad)
adc
xor
sub
sub
pop
jbe
sub
cmp
ins
iret
sbb
stc
dec
sub
adc
jne
sbb
inc
not
fiadd
retf
mov
jnp
pop
retf
lods
js
cld
call
xchg
xor
(bad)
loope
rep
les
test
or
or
xchg
icebp
and
sub
imul
loope
jmp
fcmovbe
cmp
push
mov
dec
in
mov
push
test
mov
scas
jne
jecxz
jnp
xor
rcr
out
sti
pop
or
popf
xchg
and
shr
cli
mov
lds
cmc
iret
cmc
iret
jl
push
lahf
loopne
leave
std
add
sahf
or
imul
cmp
xor
or
xor
add
stos
sub
adc
inc
jae
pop
sub
jmp
(bad)
inc
call
leave
sub
in
xchg
inc
push
fist
push
mov
jo
fidiv
shr
sub
xchg
push
pop
adc
mov
cli
fimul
jp
mov
retf
adc
sub
xchg
popf
ins
lea
stc
clc
outs
fcmovbe
pop
inc
stos
out
xor
mov
add
repnz
dec
mov
xchg
pop
pop
std
push
adc
retf
jge
inc
sub
cmp
mov
xor
fild
cmp
fldenv
jmp
sub
xchg
pop
dec
stos
jmp
or
imul
sub
push
mov
mov
lahf
push
sahf
jmp
dec
dec
mov
sbb
sub
add
adc
data16
jmp
lods
gs
es
jae
(bad)
inc
pop
out
shl
xchg
in
mov
retf
aam
xor
cmc
cmp
retf
sub
cdq
mov
or
mov
push
sbb
mov
mov
out
pop
sbb
mov
lock
cmp
ret
int3
es
jle
call
inc
jmp
add
mov
jle
popa
jmp
je
add
cs
xor
popa
cmp
push
jbe
mov
in
les
test
loopne
jmp
sub
shl
mov
mov
sbb
add
in
inc
in
xchg
das
(bad)
(bad)
gs
out
(bad)
cmp
mov
test
cwde
imul
lahf
cmc
push
push
(bad)
push
mov
mov
inc
imul
out
or
inc
inc
(bad)
and
adc
jmp
sbb
xor
out
idiv
test
loopne
sbb
sub
mov
cli
lods
lock
cmp
push
stos
arpl
dec
sub
sti
pop
les
stos
xchg
je
mov
js
push
adc
out
cli
test
hlt
xchg
jle
push
aad
fst
jno
js
adc
mov
jo
sar
imul
mov
inc
mov
cmp
push
mov
adc
mov
or
outs
fnsave
mov
pop
pop
pop
mov
lahf
add
(bad)
call
push
mov
adc
push
adc
sub
mov
(bad)
mov
add
mov
push
jg
call
das
dec
ja
inc
not
outs
sbb
ja
neg
add
lods
lods
mov
cmp
push
gs
push
inc
retf
imul
jmp
inc
dec
sbb
outs
sar
adc
or
sbb
jle
push
cdq
cdq
push
std
daa
mov
adc
or
movs
sbb
push
and
xor
and
int
(bad)
sbb
cld
and
push
mov
mov
ret
add
inc
push
push
or
cmp
mov
push
cmp
out
mov
fs
mov
dec
popa
jecxz
mov
test
outs
ja
sbb
jecxz
sbb
and
mov
shr
push
(bad)
stos
jnp
mov
shr
les
out
mov
in
mov
jecxz
ret
dec
bound
inc
pop
pop
outs
aaa
mov
push
das
shl
dec
sub
rcl
fwait
ins
mov
add
xor
stc
retf
sub
(bad)
(bad)
xchg
inc
movs
or
sub
xor
nop
add
adc
out
mov
inc
scas
das
dec
ret
outs
mov
push
jge
pop
inc
push
push
cmp
mov
and
(bad)
iret
push
or
pop
and
jmp
push
mov
mov
cmps
leave
retf
dec
ret
dec
gs
in
mul
sbb
jmp
rcl
cmp
bound
int3
sahf
add
pop
(bad)
mov
cmp
test
shr
sti
repz
mov
cmc
(bad)
sti
pop
jnp
loope
(bad)
mov
push
test
or
jl
in
jmp
xchg
push
neg
xor
xchg
xor
jl
lods
sub
and
test
hlt
in
cmp
pop
(bad)
sbb
cld
cmp
jmp
stos
mov
push
ins
sbb
xor
stos
inc
pop
call
test
nop
mov
into
inc
retf
es
jne
cmp
(bad)
leave
rcr
jne
sbb
cmp
inc
mov
add
sub
push
pop
add
and
mov
xor
retf
pop
mov
xor
cwde
adc
pop
or
xor
movs
aam
(bad)
das
inc
push
jge
xchg
dec
push
mov
dec
sti
mov
xchg
fwait
push
dec
lods
mov
mov
or
adc
or
or
cdq
outs
into
outs
sbb
gs
addr16
mov
in
mov
gs
stos
shr
pushf
lds
addr16
ror
push
and
mov
mov
jmp
out
xor
xchg
xchg
mov
std
mov
mov
dec
(bad)
aas
adc
je
or
cmp
aad
mov
pop
or
movs
cmps
xor
and
pop
and
sub
lods
data16
sbb
sub
loope
sbb
add
fstp
mov
xor
adc
cs
mov
pop
repz
in
add
mov
ins
call
and
inc
push
scas
jmp
mov
xchg
fcomip
sub
inc
fist
cmps
sub
inc
xor
clc
and
repnz
pop
mov
out
rol
inc
mov
or
mov
(bad)
pop
pusha
sub
lock
mov
and
les
scas
(bad)
xchg
xchg
jno
sub
in
mov
imul
pop
fiadd
ss
pop
adc
stos
xchg
push
pop
inc
in
mov
add
call
imul
pop
gs
cs
jmp
sub
xor
leave
xlat
cmp
jbe
cdq
xchg
mov
aaa
adc
and
adc
cwde
sub
stc
mov
add
call
out
sub
or
leave
and
in
out
movs
out
(bad)
jmp
jge
lea
mov
stc
jb
mov
xor
jp
jmp
es
cmp
bound
add
loop
mov
dec
mov
jae
arpl
push
mov
out
push
pop
pusha
add
or
sub
loop
mov
loopne
cmp
cld
adc
bound
or
inc
add
or
xchg
pshufw
in
add
dec
sbb
mov
mov
in
sbb
or
fcos
or
cmp
bound
rcl
pop
sbb
dec
jp
call
xchg
das
mov
mov
cmp
add
std
jnp
das
(bad)
outs
int3
inc
jo
sahf
xor
sbb
mov
and
mov
fsubr
xchg
or
pop
popa
push
mov
jge
out
adc
aas
adc
jno
mov
sub
imul
sar
std
shl
mov
retf
retf
ins
jmp
jns
in
and
inc
inc
adc
ficomp
fisubr
movs
rcr
adc
ins
movs
push
and
mov
sar
jae
arpl
(bad)
or
lods
btc
ins
cwde
inc
repz
push
pop
mov
sub
mov
sub
mov
out
std
(bad)
ds
sbb
das
cmp
xor
(bad)
sbb
push
pusha
movs
(bad)
sbb
dec
jmp
test
fdiv
xor
push
fsubr
pop
fcmovb
out
pusha
dec
ins
bound
adc
mov
mov
cmp
sub
jne
mov
push
cmp
mov
es
rcr
test
fnstcw
and
cmp
movs
test
xor
xchg
fsub
sbb
bound
pop
xor
neg
push
push
outs
lock
and
mov
int3
sbb
inc
dec
iret
movs
jle
test
fdiv
mov
and
adc
adc
ror
addr16
xor
inc
push
push
mov
aaa
jne
inc
push
xchg
je
pop
sbb
mov
inc
push
xor
pop
dec
ja
pop
(bad)
mov
outs
pop
add
cmp
cld
xchg
dec
sbb
scas
jnp
outs
ror
push
mov
outs
mov
push
mov
or
ret
in
xchg
cmp
adc
pop
sbb
push
pop
aad
mov
inc
sbb
repnz
and
test
test
inc
mov
xor
movs
jbe
dec
adc
adc
xor
or
aad
dec
out
addr16
push
and
sub
sbb
xor
mov
mov
add
pop
lods
clc
int
sbb
addr16
jl
aaa
jo
xchg
in
popa
cli
pop
ins
inc
jmp
test
cmps
push
test
pop
cmp
push
jecxz
fs
lods
aam
sub
shr
repnz
adc
pop
into
cmps
mov
mov
sub
dec
imul
pushf
or
cmp
data16
mov
sub
repz
add
push
mov
xchg
ds
leave
lea
in
mov
(bad)
or
xchg
ja
imul
hlt
repz
into
cmp
pop
mov
pop
cs
inc
push
(bad)
(bad)
ficomp
dec
sbb
or
dec
pop
aam
lahf
popa
loop
or
push
xchg
leave
gs
ficomp
fidivr
in
sbb
(bad)
popf
mov
and
movs
idiv
and
arpl
imul
stc
movs
jbe
mov
jg
clc
mov
push
scas
int3
mov
shl
stos
add
int
and
dec
sahf
jb
dec
fcomp
hlt
iret
cs
jns
dec
xchg
mov
sub
and
and
pop
std
iret
loope
mov
dec
lods
in
(bad)
popf
or
cmp
mov
int3
lods
sar
xor
outs
mov
bound
shl
lods
cli
sbb
aam
repz
sbb
cmp
(bad)
push
mov
inc
sub
call
xor
cmp
and
xchg
js
xchg
jg
dec
mov
sbb
test
inc
outs
sahf
xchg
xor
test
rcl
add
or
inc
dec
out
rcl
cli
repz
push
xor
mov
cmps
pop
xchg
lods
sub
scas
cmps
gs
xor
and
cmps
xchg
jge
xor
sub
ss
mov
std
jl
fcomp
mov
imul
mov
icebp
std
hlt
lods
aas
popa
fist
xor
push
and
outs
and
gs
push
pop
nop
or
add
sti
call
call
shl
outs
lock
push
aad
jp
mov
jne
xor
mov
mov
push
ja
and
sahf
stos
xchg
mov
test
ds
popa
mov
mov
popa
cmp
icebp
js
test
mov
jo
dec
imul
sbb
pop
mov
pop
test
mov
jno
push
test
(bad)
and
jmp
xor
out
test
sbb
(bad)
lock
push
leave
jne
std
icebp
jmp
rcr
(bad)
movs
jg
jmp
add
ins
push
inc
xchg
int
lds
sub
inc
add
sub
rol
xchg
or
xor
jno
or
add
or
dec
bound
ficom
jbe
jp
iret
retf
jge
mov
add
push
inc
push
(bad)
test
push
je
xchg
jno
mov
sbb
xor
mov
pop
add
add
fdiv
mov
mov
fs
call
repz
sub
dec
cmp
rcl
fwait
or
imul
jp
scas
dec
cmps
ins
adc
rol
sub
sbb
das
inc
xor
mov
sub
or
(bad)
push
mov
lock
in
fild
jmp
rcr
cmps
mov
add
pop
xor
adc
sub
xchg
fwait
mov
xor
test
cmp
(bad)
mov
int
and
push
push
add
xchg
into
xor
add
sbb
adc
push
lds
cmp
arpl
push
xchg
fidiv
dec
retf
inc
mov
cmp
js
xchg
jne
pop
rol
xchg
in
cmps
push
pop
xor
das
inc
out
cmp
stos
test
stc
push
out
loope
into
dec
in
popa
outs
cmp
nop
push
shl
imul
jbe
sub
js
mov
jae
cld
push
xchg
mov
jecxz
jo
fnstcw
jno
shl
fild
jge
add
jne
cwde
xchg
fmul
(bad)
xchg
das
adc
sub
out
push
ss
mov
call
fmul
cmps
outs
sbb
dec
mov
cmp
inc
pop
jp
mov
xor
and
lock
stc
cmp
mov
cmp
mov
out
cmp
and
add
jo
ds
cmc
cmp
in
cwde
xchg
pop
test
clc
ds
pushf
movs
add
xor
dec
push
call
aaa
shl
mov
fild
ds
sub
loop
daa
cdq
iret
mov
ins
jp
enter
paddusb
dec
shl
lahf
pop
in
add
jg
sub
push
xchg
imul
test
sbb
loopne
or
mov
sti
gs
and
ins
and
loop
mov
das
pop
or
adc
mov
or
icebp
scas
stos
add
xor
jecxz
cmp
call
ror
dec
push
rcr
mov
add
or
add
pop
stc
adc
sub
cmc
cmp
(bad)
(bad)
xchg
adc
mov
(bad)
sti
inc
test
sub
imul
xor
jne
loop
add
jg
add
data16
inc
inc
hlt
sbb
iret
inc
fistp
(bad)
outs
lock
pop
shl
out
mov
add
or
lea
mov
cwde
jle
xchg
fisubr
pushf
xor
gs
add
mov
out
fcom
pop
dec
lods
adc
(bad)
mov
and
or
jo
xor
mov
xor
cwde
ret
add
mov
push
daa
int
es
push
mov
(bad)
fistp
mov
mov
movs
sub
sbb
arpl
aam
fsub
cmps
test
aad
cmc
add
cs
mov
cmps
aas
xchg
mov
movs
cdq
mov
mov
movs
adc
cli
int
popf
mov
dec
pop
push
inc
pop
add
sub
adc
test
mov
mov
xchg
push
cli
stos
ret
pop
imul
(bad)
mov
fnstcw
retf
xor
push
pop
xor
and
fs
jns
or
dec
cmp
jle
and
pop
add
mov
xor
arpl
push
jmp
adc
test
rcl
cdq
gs
adc
cli
jae
and
jp
adc
push
in
adc
dec
dec
mov
call
jo
jnp
push
pop
inc
(bad)
xchg
lds
aad
mov
sbb
push
add
ja
push
ret
lods
dec
and
inc
sub
repnz
daa
dec
push
stos
fdivr
add
push
inc
clc
push
leave
jns
pop
push
pop
xor
sbb
sub
cli
test
mov
sahf
fs
push
bnd
rol
loope
cmp
xchg
in
(bad)
test
mov
adc
nop
fist
lds
mov
jbe
js
inc
int
pop
or
cmps
inc
sbb
icebp
cmp
mov
mov
and
out
xor
lahf
repz
dec
cdq
sbb
aad
aas
jb
sub
sub
add
and
xchg
pop
loopne
out
pop
jmp
sbb
and
jecxz
adc
pop
(bad)
(bad)
fcmovnu
jb
xor
(bad)
push
and
int
jmp
mov
in
mov
movs
cmp
stos
cmp
add
pusha
dec
int3
lock
es
push
cmc
add
aas
out
leave
jp
retf
push
cmp
in
fadd
sbb
(bad)
popa
movs
ins
mov
sbb
mov
and
retf
test
adc
mov
pop
and
fisttp
jnp
adc
and
fisttp
ret
aam
push
popa
xchg
fbstp
adc
dec
sbb
repnz
fsubr
mov
mov
bound
sub
gs
loopne
jns
jmp
imul
xchg
lea
jnp
icebp
stc
test
cmp
xor
popf
sti
sub
loopne
sbb
jl
inc
outs
in
cmovl
in
enter
add
popf
frstor
int3
mov
das
test
retf
mov
mov
jno
sub
or
mov
dec
inc
adc
ja
sub
jns
loope
dec
lods
dec
test
xchg
std
outs
and
cwde
hlt
stc
cmp
xor
jo
dec
iret
lods
(bad)
xchg
mov
cmp
aam
xor
mov
cmp
dec
push
mov
add
hlt
adc
test
rcl
stos
stc
push
jns
mov
(bad)
mov
inc
mov
cmp
push
aam
jo
inc
sub
adc
adc
lods
cwde
sub
push
mov
repnz
ja
sbb
das
xor
and
pop
cmp
call
mov
push
lea
dec
pop
pop
xchg
fldcw
outs
pusha
popa
je
lods
ret
jb
int3
pop
jp
adc
nop
ret
fdivr
sub
dec
movs
das
arpl
sub
sub
push
add
ret
retf
pop
xor
mov
adc
rep
pop
inc
pushf
mov
shl
jae
jle
pusha
dec
movs
nop
pop
(bad)
xor
xor
iret
stos
inc
fst
jo
adc
xchg
dec
cmc
jg
movs
cmp
push
dec
sbb
push
add
call
mov
sbb
repz
pop
mov
cmps
mov
cmp
adc
sub
test
jg
cmp
pop
push
xor
das
mov
push
xor
jb
pop
mov
and
mov
mov
xlat
mov
sbb
mov
loope
cwde
mov
sbb
(bad)
or
lock
stos
aam
push
push
aaa
ret
fsubr
mov
jecxz
push
ret
out
jecxz
cld
jl
and
jmp
mov
loop
jmp
push
std
push
xor
or
out
sub
call
jge
push
mov
mov
js
aam
or
sahf
xchg
test
out
xchg
pop
mov
mov
cmp
imul
adc
sbb
mov
pop
push
jmp
cmps
sub
sbb
xchg
lods
and
rol
out
xchg
loope
and
sti
aad
sbb
jmp
repz
scas
unpckhps
push
adc
xchg
xor
mov
or
sets
xor
cmps
mov
pop
mov
ins
ins
js
pop
imul
pop
outs
gs
and
mov
loope
cld
jne
ins
pop
test
inc
pop
pusha
es
jp
stc
xor
fs
ror
xchg
jno
movs
repnz
mov
outs
imul
sub
fsub
bound
add
imul
mov
xchg
lds
dec
arpl
jl
cmovs
retf
push
test
pop
adc
fs
mov
mov
fcomip
push
test
mov
lock
mov
mov
hlt
loope
add
inc
imul
mov
sub
cli
pop
mov
aaa
inc
and
xchg
int3
aas
fidivr
fwait
push
adc
(bad)
outs
outs
ret
rol
mov
xchg
add
push
mov
cdq
add
(bad)
imul
mov
arpl
push
bound
push
scas
sub
sub
mov
fcmove
mov
add
std
pop
push
pop
xchg
sub
imul
add
out
cld
rcr
cmp
movs
stos
and
and
push
jne
add
sbb
scas
pusha
call
mov
pushf
adc
movs
fs
stos
mov
mov
jp
pop
sbb
scas
iret
imul
retf
and
push
inc
dec
aaa
cmp
imul
xor
(bad)
push
popa
and
and
jno
jne
loop
jae
push
jnp
retf
cmp
mov
sub
mul
addr16
call
adc
inc
mov
push
pop
add
ffreep
in
dec
dec
and
and
or
mov
dec
cmp
ss
(bad)
fld
ss
cmps
mov
xor
jbe
xchg
jecxz
shr
ja
(bad)
push
mov
out
icebp
jge
xor
pop
in
push
jp
arpl
xor
mov
or
pop
push
cmp
ds
aas
fstp
inc
push
and
nop
dec
outs
fistp
mov
std
add
xor
ret
lahf
mov
xlat
stc
cmp
jb
push
add
jmp
std
rcl
xor
or
and
imul
outs
dec
ret
movs
scas
retf
adc
dec
adc
jno
xor
fild
push
cli
push
out
(bad)
xchg
out
mov
sbb
xor
fild
jecxz
sar
ret
mov
clc
in
sub
jge
iret
cmp
enter
mov
mov
data16
xchg
mov
or
ds
cmps
sub
call
aas
jle
lods
xchg
mov
(bad)
cmps
and
sahf
dec
xor
ins
mov
je
jge
sub
sbb
aad
push
cmp
test
shl
or
das
push
pusha
inc
sbb
sub
scas
iret
pusha
repz
div
dec
test
mov
mov
mov
lods
dec
push
push
sbb
es
xor
push
jl
sub
push
add
mov
pushf
mov
retf
push
div
adc
jns
retf
div
pop
jmp
mov
cmp
imul
inc
(bad)
mov
cmp
stos
cdq
add
fwait
mov
lahf
jge
cmp
pushf
mov
mov
retf
jp
ins
xor
sahf
sar
sub
std
inc
add
inc
dec
cs
call
or
leave
mov
jmp
popf
leave
xchg
mov
sub
cmp
test
fsub
xchg
inc
and
adc
arpl
jnp
or
cmp
add
pop
pop
sub
(bad)
retf
loopne
mov
in
push
leave
xor
xchg
movs
into
xchg
ss
push
std
inc
mov
cmp
les
add
in
out
stos
and
or
out
dec
sbb
daa
iret
lods
aaa
push
mov
into
or
or
mov
xor
mov
mov
lea
sub
and
(bad)
mov
pop
fmul
add
cmps
dec
push
arpl
repz
lods
lods
jl
fmul
fisttp
mov
test
rcl
aad
pop
mov
lods
hlt
(bad)
sub
pop
cli
inc
xchg
pop
mov
jmp
stos
sbb
cmp
in
cld
sahf
inc
mov
fsubr
add
call
dec
mov
pop
mov
daa
sbb
push
imul
(bad)
mov
popf
adc
jg
xchg
(bad)
(bad)
jge
(bad)
ds
mov
test
mov
inc
cli
cmps
out
sub
inc
sar
adc
pop
hlt
mov
rol
mov
inc
sub
(bad)
dec
cmp
push
adc
enter
dec
fwait
mov
adc
mov
or
aad
fistp
rcr
repnz
xor
loop
les
push
and
dec
cs
out
xor
mov
adc
cld
jno
fs
(bad)
cmc
xor
fcmovne
addr16
out
xor
mov
stos
scas
(bad)
adc
dec
push
pop
pop
(bad)
bound
fld
rol
cmp
pop
in
ffreep
pop
dec
addr16
jle
pushf
push
lods
sar
cmc
add
or
dec
mov
pop
push
scas
inc
or
arpl
jmp
xchg
cmp
mov
adc
xchg
fadd
sub
or
out
jno
pop
test
adc
pusha
imul
xchg
int
aaa
icebp
mov
dec
cmp
mov
xchg
pusha
pushf
pusha
add
stos
ret
lds
and
in
inc
lahf
sub
daa
in
mov
pop
xor
shl
cdq
jecxz
pop
mov
pop
dec
sub
retf
mov
sbb
and
jg
xlat
dec
mov
mov
mov
loop
pop
into
cwde
xchg
xor
pushf
mov
shl
daa
fistp
jecxz
pop
pusha
(bad)
or
xchg
jmp
lock
repz
mov
pop
mov
and
das
sbb
fstp
mov
adc
sti
call
add
and
push
jns
movs
clc
test
fdivp
sub
sbb
or
adc
xor
pushf
daa
dec
add
ins
leave
add
push
stc
addr16
mov
arpl
or
sti
mov
scas
jbe
fisub
clc
or
or
cmc
and
xor
mov
inc
in
lahf
stos
dec
sbb
pop
push
xchg
outs
pop
push
dec
scas
mov
push
adc
movs
pmaxsw
jae
loope
jno
xchg
inc
out
sbb
mov
test
cdq
pop
jmp
clc
jp
or
sub
shl
push
popa
dec
cli
dec
cdq
pop
xor
gs
jp
cmp
xchg
stos
xchg
dec
jo
popf
and
xor
outs
fisttp
mov
mov
lds
nop
jne
and
cmp
fidiv
sub
push
idiv
and
and
mov
or
push
std
inc
pop
out
xchg
or
or
xchg
dec
sbb
repz
and
add
repz
dec
xor
pop
pop
or
push
xchg
pusha
fwait
push
aad
adc
jne
ror
mov
lea
repz
push
mov
dec
and
mov
add
add
xchg
cmp
int3
push
cmps
and
scas
fbstp
jmp
or
lock
add
jb
add
paddusw
xchg
movs
mov
xor
sbb
and
pop
pop
xor
dec
div
dec
xor
mov
inc
pushf
arpl
arpl
and
mov
cwde
add
(bad)
gs
clc
cmp
clc
jne
xchg
test
scas
ds
pop
mov
lea
xchg
mov
pop
imul
mov
fisttp
jns
lods
ja
sbb
mov
lock
inc
into
out
mov
mov
adc
xor
xchg
shl
inc
or
jmp
call
ins
mov
sub
lds
sti
scas
fucom
stos
mov
mov
repnz
repz
xchg
xor
outs
loope
pusha
mov
push
xor
pushf
sbb
bound
inc
jge
pop
jo
jge
mov
push
rcl
sbb
mov
push
lods
jge
and
lea
mov
das
int
retf
(bad)
std
inc
in
mov
push
pop
retf
out
jg
xor
jb
dec
dec
ins
cmp
pushf
inc
fld
sbb
xor
mov
data16
ficomp
xor
push
jne
mov
jns
and
out
(bad)
gs
imul
xor
test
dec
pop
sub
rcl
add
mov
mov
inc
inc
in
dec
xchg
mov
jo
adc
lock
sub
gs
(bad)
jmp
icebp
and
cmp
xlat
xor
fstp
cmp
test
je
or
lahf
rol
popf
ret
retf
icebp
sub
test
sub
loope
scas
ja
shr
cmc
int
push
jecxz
sub
(bad)
and
pop
mov
push
sbb
mov
aas
inc
sub
lea
hlt
pop
in
jl
cdq
add
rcr
cmc
jno
jp
xlat
pop
aad
push
add
test
outs
push
xor
push
retf
retf
add
int
popa
nop
mov
cmps
andps
aam
pop
fimul
cmp
imul
hlt
nop
fwait
hlt
scas
sub
int3
test
xor
cmp
or
leave
pop
mov
call
into
mov
add
add
cmp
retf
out
(bad)
cli
push
cmp
push
adc
or
pusha
scas
arpl
ret
xchg
icebp
pop
push
push
push
stos
fld
xchg
(bad)
scas
bound
push
div
pop
ins
lds
xchg
inc
dec
ja
add
je
xor
repnz
loop
scas
pushf
mov
jecxz
movs
jl
mov
(bad)
out
inc
push
out
push
cld
xlat
mov
add
sbb
xchg
aas
int3
ret
(bad)
push
dec
push
retf
add
mov
jbe
mov
dec
in
inc
(bad)
rcl
sub
xchg
out
xchg
add
pop
add
jmp
cmp
adc
lods
out
mov
rcl
xor
lods
pop
fmulp
or
ja
cmp
out
mov
mov
jbe
std
gs
inc
cmp
add
sub
scas
pop
and
retf
pushf
stc
inc
loope
data16
add
add
mov
add
jp
push
mov
cmp
iret
push
das
jp
or
inc
sub
adc
adc
and
movs
xor
pusha
fwait
ret
inc
inc
inc
arpl
push
mov
mov
mov
add
cli
repnz
stos
ror
push
pop
int
int
and
push
push
lds
call
dec
pop
out
xor
or
pushf
in
mov
fsub
inc
sti
pop
sbb
xchg
dec
aam
iret
sub
ins
(bad)
jbe
jns
pop
dec
stc
jo
cmc
push
cmp
mov
mov
sahf
leave
mov
outs
call
pop
addr16
call
icebp
gs
fistp
push
push
arpl
cmp
add
push
pop
sbb
(bad)
bound
in
lods
push
xchg
fidiv
stos
arpl
push
jnp
or
jmp
pop
jmp
mov
mov
mov
pop
add
call
xchg
pop
imul
fwait
mov
xor
mov
mov
push
mov
inc
movs
shl
movs
jb
push
ins
loop
cmp
outs
sar
aam
cmp
js
mov
adc
dec
sbb
jg
jmp
push
repnz
sub
ja
xlat
out
or
pop
add
mov
push
xor
nop
in
sbb
repnz
retf
or
aad
(bad)
mov
shr
iret
sbb
(bad)
shl
mov
xor
sbb
fisub
push
add
fwait
sbb
das
push
jle
neg
clc
adc
push
inc
sbb
fist
les
jbe
jno
dec
test
push
not
add
ins
push
loope
lods
push
fwait
(bad)
std
cld
jno
loop
push
nop
push
fadd
pusha
mov
aam
adc
cld
xor
das
fstp
shl
mov
loop
dec
fst
push
dec
out
int3
and
or
nop
js
into
mov
mov
ins
add
mov
lods
jbe
out
imul
sar
iret
adc
pop
das
or
dec
push
in
ret
int
popa
(bad)
(bad)
retf
fnstcw
mov
test
dec
mov
sbb
mov
sbb
sub
popa
mov
pop
sbb
inc
cmp
jbe
cmps
pop
push
adc
rcr
push
or
loope
adc
inc
mov
fptan
jnp
mov
xor
pop
fs
mov
xor
mov
mov
push
dec
dec
lahf
adc
pop
stos
shl
popf
pop
jp
jmp
aam
popa
dec
cwde
cmps
or
out
mov
adc
inc
adc
inc
mov
dec
scas
xor
out
mov
xchg
and
cmc
dec
stc
push
movs
xor
lsl
dec
int3
movs
inc
aam
push
jmp
test
ins
sysexit
inc
stos
ins
mov
das
rcr
test
rol
dec
in
sub
cmp
jbe
mov
sub
idiv
add
dec
out
push
test
es
mov
aas
cmp
push
scas
repnz
add
push
cmp
stos
fisttp
lds
mov
dec
call
mov
jg
dec
test
leave
outs
ja
sub
ja
mov
div
cmc
xor
push
sub
popf
push
mov
jecxz
mov
pop
push
icebp
sar
dec
push
pop
loop
jno
ror
jge
je
popf
mov
dec
aas
xor
jle
cmp
leave
and
lock
jno
cdq
add
ins
mov
adc
lahf
mov
and
pushf
cmps
loopne
jmp
jmp
xchg
idiv
iret
(bad)
inc
xchg
bound
call
mov
mov
test
jge
push
pop
fisttp
cmps
iret
mov
rol
dec
jno
pop
fcmovnbe
js
xchg
mov
xchg
ficom
(bad)
or
dec
mov
xchg
xchg
ja
xchg
cmp
mov
arpl
gs
leave
add
and
in
ins
or
adc
cmp
fsub
dec
cs
mov
in
mov
mov
(bad)
jae
icebp
aaa
sbb
xchg
lods
imul
test
mov
pop
xchg
ja
and
pop
jle
cmpps
fmul
xchg
push
sti
mov
loopne
call
inc
lahf
in
sub
sub
cmp
pop
adc
sub
mov
mov
pop
imul
pushf
(bad)
sbb
or
jns
mov
xlat
(bad)
pop
pop
es
mov
mov
icebp
cmp
mov
pop
data16
ret
mov
ins
data16
mov
xor
push
imul
add
adc
shl
mov
push
rcl
loope
in
rol
xlat
scas
mov
xchg
mov
loop
or
mov
hlt
pushf
mov
push
xchg
mov
add
xchg
adc
sbb
cwde
(bad)
mov
pusha
jnp
dec
stc
sub
xchg
xor
cmc
xchg
dec
in
call
mov
scas
sub
iret
inc
jle
or
jg
pop
adc
js
pushf
push
imul
es
mov
(bad)
push
pop
mov
cmp
outs
cmp
xor
jl
jno
cmp
ja
call
jo
push
xchg
mov
jmp
ins
gs
sub
dec
frstor
loopne
add
clc
mov
scas
or
add
hlt
add
push
sbb
xor
push
aas
fcom
adc
arpl
push
mov
push
xlat
cmp
pusha
xor
push
loop
xor
mov
sub
or
aad
add
retf
jecxz
inc
mov
inc
and
fwait
dec
mov
icebp
add
cmps
push
adc
inc
rcl
add
or
nop
aas
aam
sbb
jns
js
arpl
inc
cdq
arpl
ror
add
xor
imul
pop
lds
jbe
ror
or
dec
add
(bad)
out
lds
push
repnz
push
and
in
mov
adc
daa
test
mov
ja
outs
mov
mov
lea
leave
mov
xlat
out
std
push
stos
hlt
call
cdq
push
ss
push
scas
adc
add
xor
sahf
jle
es
dec
jle
mov
pop
(bad)
test
dec
jb
cld
add
xchg
jns
or
test
or
mov
mov
or
cdq
cld
loope
test
mov
mov
add
les
imul
nop
add
test
add
adc
out
fidiv
mov
stc
mov
popa
dec
add
mov
add
movs
sub
push
mov
cwde
ret
mov
stc
scas
hlt
pop
mov
sub
outs
(bad)
clc
push
xchg
aad
mov
and
out
jae
adc
add
(bad)
cs
or
and
xchg
retf
mov
inc
stos
push
xchg
dec
or
pop
jecxz
js
sbb
inc
(bad)
xlat
pop
inc
sar
pop
pop
(bad)
dec
dec
into
push
sbb
jmp
std
inc
xor
sub
add
test
out
jae
pop
mov
xor
addr16
and
sub
sub
dec
fld
inc
pmullw
test
mov
jb
stos
xchg
push
test
xor
aas
xor
jg
stc
je
adc
push
xchg
shl
adc
sbb
mov
in
loop
loope
outs
jae
loopne
psllq
daa
lea
stos
inc
and
and
iret
dec
inc
fcom
call
cmp
xor
ror
pop
js
pop
rcl
inc
movs
cmp
(bad)
inc
push
pop
or
jbe
push
lods
jae
fldenv
pop
mov
lods
xchg
adc
out
sub
inc
imul
inc
sbb
xchg
bound
cmp
cmp
ds
mov
cmp
mov
pushf
xor
push
dec
int3
adc
xchg
out
lods
js
push
sti
je
sbb
test
push
inc
mov
xor
sub
jns
call
cld
pushf
fcmovnb
add
out
xor
xchg
mov
mov
mov
fs
pop
fwait
std
dec
arpl
es
lock
lock
ficom
xchg
adc
movs
scas
clc
pop
pop
xor
sbb
dec
push
cmps
cwde
push
push
mov
and
lahf
stc
pop
lods
ds
cmp
jns
ror
jnp
pop
les
fistp
push
outs
mul
xchg
aas
dec
(bad)
or
loopne
xchg
cmp
psubq
cmp
and
repnz
cld
pop
(bad)
xor
pop
pusha
cmps
adc
or
jecxz
retf
cld
or
jmp
mov
cmp
cdq
xor
int
mov
xchg
xor
(bad)
lods
bound
cwde
dec
aad
hlt
inc
jecxz
stos
pop
fadd
push
pop
imul
enter
je
sub
sti
(bad)
push
js
or
add
les
mov
and
das
mov
js
(bad)
mov
mov
add
ret
bound
pop
data16
sub
mov
xchg
cmp
enter
enter
fcomp
dec
cmps
leave
xlat
lahf
sub
lods
xor
in
es
ds
xchg
jmp
push
in
sbb
movs
bound
repnz
icebp
dec
ins
adc
mov
mov
adc
clc
test
in
xchg
jb
addr16
sub
sahf
loop
sbb
in
mov
cmps
std
ins
stos
xchg
rol
push
pop
test
adc
pop
stos
jnp
dec
cmc
mov
adc
nop
inc
and
inc
and
mov
xchg
loope
in
fld
out
and
or
in
xchg
repz
movs
xor
dec
leave
dec
jmp
dec
mov
mov
pop
lock
retf
ins
mov
mov
in
or
lods
xor
mov
and
inc
or
hlt
ins
sar
inc
out
imul
jle
push
outs
adc
inc
test
jno
sub
movs
loope
sbb
int3
mul
cmp
dec
inc
fimul
jl
jmp
add
push
iret
push
pop
push
push
jmp
xchg
pop
rcr
inc
mov
cmc
movs
rcr
aad
pop
push
iret
clc
fdivrp
mov
lods
add
inc
jbe
mov
scas
xchg
xlat
xor
push
xchg
mov
mov
cmc
pop
mov
mov
mov
mov
popa
ret
retf
les
fnstenv
loope
outs
hlt
(bad)
jno
sbb
or
mov
aam
jmp
add
out
cld
jno
adc
jb
and
mov
fdivr
ret
(bad)
jmp
into
pop
xchg
xor
xchg
in
pop
lods
fs
jg
stos
mov
dec
and
push
ret
xor
xor
push
or
loope
inc
icebp
mov
ret
add
xlat
jb
cmp
pop
xchg
adc
ret
int3
sbb
jle
ins
sub
sbb
xchg
ss
pop
and
(bad)
mov
inc
xchg
retf
add
div
sbb
or
ret
adc
jp
dec
adc
aas
or
push
and
call
ds
aam
sbb
adc
cmp
nop
pop
pop
pop
imul
push
or
cli
push
and
ficom
jle
scas
mov
ins
imul
lock
inc
movs
fwait
add
push
hlt
jb
mul
ins
lods
adc
arpl
(bad)
jmp
pop
mov
imul
bound
add
and
sahf
jno
lods
gs
test
mov
fs
add
mov
cmp
imul
push
lds
jg
ret
in
mov
xor
in
test
dec
scas
jecxz
add
ret
inc
outs
inc
add
pop
bound
and
sbb
ins
mov
mov
fstp
xchg
pop
jbe
mov
jp
sub
dec
es
inc
in
loop
adc
(bad)
repnz
gs
sar
into
jnp
jae
div
das
or
xchg
push
int
inc
push
xchg
push
repz
ins
and
aam
xor
push
imul
or
jo
rol
(bad)
mov
add
sbb
pop
or
fsubr
fwait
stos
cdq
mov
jecxz
cwde
cmp
push
popa
jmp
pop
xor
mov
xor
xor
(bad)
shl
or
aad
fild
mov
mov
iret
fnsave
movs
jbe
inc
sub
imul
(bad)
and
lock
adc
dec
or
dec
call
gs
test
jne
cmp
xor
jg
in
call
pop
stos
repz
cvtps2pd
fadd
into
dec
stos
leave
loopne
mov
fwait
dec
pushf
outs
test
int3
scas
cli
mov
pop
arpl
mov
jns
out
das
adc
les
pushf
mov
xchg
cmp
adc
xor
(bad)
pop
into
nop
loopne
ficom
pop
xchg
enter
addr16
pop
sbb
icebp
jbe
int3
pop
inc
jnp
mov
and
mov
imul
mov
or
add
mov
ret
sbb
xor
rol
mov
push
test
icebp
aas
scas
in
test
call
push
test
outs
(bad)
fist
in
pop
bound
jg
mov
xchg
icebp
pop
test
retf
cmp
rcr
and
pop
or
fcomp
mov
mov
in
ret
mov
pop
inc
ficom
ror
mov
cmp
(bad)
pop
mov
enter
jge
fstp
mov
sti
pop
loopne
xor
xchg
mov
xchg
mov
in
jbe
xor
mov
daa
mov
inc
shl
aas
cld
sbb
daa
jmp
loope
mov
shl
pop
inc
ss
outs
push
test
sub
fld
xchg
sbb
ja
push
mov
dec
push
cmc
mov
stos
enter
add
xchg
out
repnz
push
pop
shr
fs
or
in
mov
push
mov
cmp
mov
cmc
pop
aad
fmul
ret
sub
cdq
push
out
or
adc
test
mov
mov
movs
inc
sbb
push
popa
or
push
dec
adc
test
js
jmp
inc
xor
push
repnz
sub
xchg
ja
cmps
fwait
scas
stos
xor
jne
inc
popf
jbe
sbb
sbb
fild
in
mov
pop
add
cwde
rcl
call
(bad)
lea
push
hlt
in
sub
jnp
ss
pop
sbb
(bad)
jl
xlat
mov
test
test
adc
sbb
push
ret
pop
je
xor
pushf
xchg
dec
into
adc
jp
cmp
sahf
push
xor
aaa
loope
cmp
pusha
shr
hlt
out
mov
or
inc
push
fiadd
xchg
movs
xchg
xchg
or
ret
lock
stos
lea
pop
mov
xor
sub
and
addr16
push
mov
inc
adc
and
push
lahf
cmp
dec
in
mov
lods
or
cwde
inc
mov
jmp
or
mov
les
sbb
xor
jne
xchg
cmp
push
dec
ror
bound
addr16
mov
mov
push
repz
push
shl
cld
cmp
out
xor
outs
leave
and
aaa
scas
cmc
sbb
js
lods
jae
loopne
mov
cld
movs
and
inc
(bad)
pop
add
stos
mov
loope
add
inc
adc
clc
paddw
(bad)
jl
mov
or
inc
ins
pushf
xchg
pop
lods
inc
xor
leave
or
sub
add
lds
nop
ins
add
or
and
dec
or
adc
inc
out
xlat
xor
sub
jmp
xor
mov
push
in
dec
sub
mov
fistp
ins
es
aaa
popa
(bad)
push
mov
mov
ret
xchg
push
and
adc
inc
adc
cs
jl
pushf
jns
sub
inc
mov
jecxz
mov
and
jb
fcmovnbe
mov
mov
sub
mov
fstp
icebp
cmp
les
mov
aad
mov
ins
pop
ss
dec
addr16
mul
and
sbb
(bad)
jbe
scas
addr16
xchg
fimul
scas
pop
ins
out
fsubr
jmp
mov
call
popa
cs
push
or
or
imul
repz
sahf
adc
lods
sub
jnp
shl
mov
sbb
test
inc
add
jo
data16
and
loopne
lods
test
mov
sbb
and
pop
(bad)
loop
inc
out
je
call
push
ja
std
push
inc
xor
ja
mov
pop
push
cwde
mov
lea
aaa
lock
stos
jmp
shl
(bad)
inc
mov
cmc
mov
inc
std
dec
inc
xor
adc
daa
dec
sub
shl
stos
xor
repz
mov
cli
or
sbb
(bad)
xlat
push
pop
cmps
addr16
aaa
lahf
and
pushf
xchg
jecxz
add
ds
leave
push
imul
dec
jno
icebp
call
clc
cmp
movs
(bad)
call
mov
sahf
push
stos
aam
call
jl
lock
mov
or
sub
xchg
scas
jbe
fwait
push
dec
jmp
fst
pop
test
das
jno
fs
aaa
mov
outs
inc
ret
clc
shl
jo
push
xor
xlat
stos
mov
aad
int
sub
jmp
fld
pusha
pop
cdq
stos
mov
xor
add
jmp
jae
popf
push
stc
xor
(bad)
rol
cmc
jge
push
ror
mov
(bad)
jp
(bad)
mov
cmp
fwait
inc
cmp
ret
cs
loope
push
sti
(bad)
leave
repnz
lea
into
xor
popf
test
or
inc
fmul
mov
mov
adc
outs
movs
sbb
pop
fiadd
add
lahf
idiv
arpl
mov
adc
cs
mov
mov
xor
inc
es
mov
xor
or
mov
xchg
ror
adc
add
ss
fidivr
fstp
cmp
popa
iret
sub
xor
call
stos
addr16
and
xchg
mov
retf
sub
pushf
sti
ror
cwde
sbb
mov
jb
aaa
mov
xchg
cwde
pop
mov
or
shr
test
push
les
fldenv
pop
lea
xchg
mov
push
jnp
mul
adc
(bad)
mov
mov
(bad)
shl
popa
lods
or
xchg
sub
das
mov
mov
ja
and
sub
(bad)
rcr
jle
ins
mov
pop
fcmovu
push
or
dec
in
mov
pop
fdiv
push
pop
sbb
ss
in
loopne
add
arpl
loopne
aaa
cmps
mov
pop
dec
(bad)
jns
aad
push
adc
cwde
mov
adc
xchg
aaa
fldln2
sbb
jns
jle
pop
add
aaa
mov
sbb
cwde
shl
imul
dec
stos
mov
dec
sub
and
imul
ins
inc
bts
mov
and
repnz
popf
out
ja
(bad)
push
jns
sahf
cmps
push
jne
data16
aas
stos
mov
jp
mov
xor
pop
mov
scas
into
(bad)
pop
les
ds
jbe
stos
mov
cmps
pop
mov
jno
leave
or
retf
sbb
add
je
out
test
cmps
xchg
clc
add
test
jmp
add
(bad)
popa
cmp
sbb
xchg
ss
mov
xor
loopne
xchg
xor
imul
cwd
mov
sbb
cmp
mov
ins
cvttps2pi
mov
ds
jns
sahf
jbe
stos
inc
in
jb
outs
mov
loope
ins
gs
pop
dec
dec
outs
lahf
pop
xchg
mov
add
fisttp
shl
sub
or
or
gs
shr
fimul
push
or
outs
xchg
scas
mov
(bad)
pop
mov
inc
in
jecxz
pushw
test
inc
cmp
(bad)
push
inc
mov
pop
scas
call
(bad)
xlat
int
popf
sbb
cmp
pop
jmp
mov
dec
inc
inc
inc
out
xchg
sbb
cmp
inc
fild
aaa
cmc
cld
xchg
and
or
ret
leave
cmps
outs
sbb
cli
in
push
adc
or
mov
dec
jnp
adc
push
and
test
xor
or
dec
sti
ret
xchg
and
repz
jns
stos
push
fwait
mov
adc
and
out
mov
sbb
ds
push
cmp
sbb
lock
(bad)
pop
inc
mov
movs
push
std
add
jne
add
js
jno
and
fisttp
xchg
pop
loop
dec
inc
mov
repnz
(bad)
popa
pop
loop
jge
je
and
gs
aas
jb
jp
inc
fs
aad
jno
ss
popf
scas
dec
xchg
leave
mov
xor
mov
ficom
call
ss
clc
(bad)
fmul
dec
popf
xchg
pop
and
outs
xor
xchg
jnp
xchg
repz
test
add
div
add
cmp
int3
mov
jb
outs
js
sub
pop
scas
les
dec
add
sbb
adc
dec
ror
jbe
mov
jne
cld
sbb
push
sahf
(bad)
std
in
cmp
cmp
sub
sub
dec
inc
inc
sbb
or
call
cld
or
sub
ror
loop
sub
and
push
fbld
add
(bad)
cmp
cli
in
push
retf
dec
cmc
sub
sbb
xchg
fbld
add
in
jl
jne
ja
mov
cmp
addr16
rcr
inc
call
jg
into
out
setnp
(bad)
cli
movs
test
out
cwde
cmps
push
lea
retf
inc
cli
(bad)
ret
loop
data16
pop
jp
sub
(bad)
sti
xchg
xchg
in
or
inc
ret
mov
mov
or
bound
push
lods
jbe
or
jl
dec
sbb
arpl
adc
aad
int
sti
jne
pushf
cld
xchg
mov
jae
jl
addr16
dec
retf
pop
dec
(bad)
and
aam
sbb
or
xchg
(bad)
pop
dec
out
call
push
xchg
iret
sbb
and
imul
fisub
sbb
ss
add
mov
in
sahf
sahf
call
xchg
cld
sbb
call
xor
ror
test
mov
or
pop
ficom
xchg
dec
dec
dec
stos
sbb
sub
xchg
jp
sub
sbb
dec
and
mul
cli
sahf
lock
fstp
frstor
jnp
cmp
stos
mov
dec
fstp
(bad)
(bad)
fwait
adc
jmp
daa
icebp
(bad)
cdq
test
jg
and
clc
stos
push
adc
xchg
test
aad
ss
xor
repnz
movs
cld
out
adc
imul
or
push
rep
lds
sub
sbb
(bad)
jbe
int
inc
and
xchg
(bad)
loop
fdivr
out
movs
fisubr
mov
cmp
lea
xchg
scas
push
daa
enter
outs
popf
aas
adc
cdq
xor
mov
xchg
mov
out
sti
scas
in
cld
mov
test
test
je
aaa
clc
mov
pusha
sbb
in
icebp
pop
(bad)
jmp
sub
add
into
sbb
or
nop
sbb
mov
je
outs
je
out
js
shl
adc
mov
imul
mov
mov
or
cli
inc
add
push
aam
pop
and
xchg
add
adc
fwait
push
es
cwde
pop
adc
stos
out
pushf
pusha
xchg
inc
add
and
out
push
ret
in
retf
xchg
not
ins
adc
sbb
jmp
jp
or
shl
cmps
jg
dec
fisubr
cmp
xchg
test
repz
pop
sbb
cli
xchg
fidivr
or
fild
cwde
int3
add
retf
jl
dec
outs
or
in
jns
jb
fs
push
mov
jae
int
ss
pop
cmp
cdq
out
sbb
test
lods
rol
loop
gs
jns
into
mov
test
push
pusha
sbb
shl
cmp
mov
mov
(bad)
pop
sbb
ror
adc
inc
cli
jb
icebp
aam
pop
pop
fiadd
pop
dec
push
int
xchg
xor
cmps
pop
jnp
mov
add
inc
and
iret
dec
cmp
adc
sti
jnp
dec
or
pop
icebp
stc
ficom
and
xchg
(bad)
call
ins
jne
mov
adc
mov
in
jmp
imul
dec
popf
ret
cdq
stc
mov
shl
mov
retf
ds
dec
in
cmp
(bad)
sbb
and
loope
jle
jmp
cmp
or
push
jae
fist
mov
mov
cmp
stos
jbe
popa
cld
push
cld
and
(bad)
stc
jmp
mov
mov
call
in
or
cmp
mov
bound
fsub
adc
or
cmp
or
add
call
imul
inc
dec
fdiv
inc
or
leave
cmp
dec
out
das
push
jnp
ins
push
shr
test
inc
add
mov
and
cmp
xor
aad
hlt
pop
cmp
leave
movs
sub
pop
mov
cld
fdiv
jmp
inc
cmps
es
(bad)
lock
(bad)
int3
sub
xchg
repz
ss
int3
push
push
mul
arpl
inc
and
and
mov
jne
xor
sbb
sbb
(bad)
pusha
pop
ret
mov
aad
xor
nop
jne
pushf
movs
ror
jmp
xchg
jb
shr
and
les
not
imul
inc
cmp
mov
xchg
push
xor
lods
sub
fwait
ins
ret
dec
add
stos
fisubr
fs
mov
pusha
xor
aad
jno
adc
lahf
mov
das
inc
repnz
sbb
pop
inc
mov
mov
add
sbb
pop
cmp
out
push
sahf
(bad)
fucom
jl
enter
xor
add
rol
into
outs
and
(bad)
es
jp
xchg
retf
out
jl
inc
and
pop
loopne
sub
ds
add
enter
jle
stos
stos
or
push
loope
sbb
or
pushf
inc
cs
sub
mov
pop
and
xor
inc
mov
mov
adc
aad
xlat
sbb
xchg
cmp
aam
cwde
les
jae
and
push
out
and
lock
lds
and
std
sub
aam
stc
jb
xchg
mov
in
aas
xlat
cmp
xor
add
or
popf
xchg
call
cmp
adc
cmps
sbb
xor
mov
inc
movs
and
mov
adc
xor
xor
mov
js
mov
pushf
ffreep
push
fdiv
add
arpl
xor
pop
push
mov
iret
jmp
or
test
mov
jb
rcr
push
js
imul
jo
push
addr16
in
jmp
adc
dec
cmp
sub
jmp
fcom
or
and
push
fadd
adc
js
nop
pop
test
int
lods
and
cmp
push
mov
and
cmp
cmc
in
lock
xchg
pusha
or
ins
int
inc
stc
stc
fadd
aad
cmp
out
fcomp
das
int3
outs
xchg
imul
jp
push
lea
and
fs
stc
mov
fwait
lock
add
mov
xchg
add
(bad)
ins
neg
pop
cmp
je
adc
out
xchg
mov
aaa
xchg
arpl
push
outs
movs
sbb
and
jl
fptan
sahf
push
dec
push
and
inc
and
mov
adc
in
test
mov
je
add
sbb
int3
or
mov
fdecstp
fdivr
cmp
imul
imul
add
ins
ins
retf
mov
fisubr
sbb
pop
mov
xor
retf
out
out
mov
test
ins
push
xor
sub
push
shl
or
imul
mov
pop
inc
xor
stc
push
ins
lods
ins
mov
shl
mov
shl
out
dec
dec
popa
add
inc
rcl
je
xor
aad
jne
popa
jnp
adc
and
std
movs
inc
inc
pop
mov
inc
in
fldcw
xor
mov
jne
mov
jecxz
je
cdq
pop
popa
push
rcl
mov
fwait
pop
adc
inc
outs
jmp
sahf
jns
cmp
pop
pop
stos
jnp
and
add
test
rol
test
push
retf
test
adc
jae
cdq
scas
mov
xchg
int3
clc
sahf
xchg
(bad)
dec
xadd
in
jmp
shl
ja
leave
aas
sbb
mov
or
sbb
cmps
(bad)
cld
inc
jne
mov
inc
xlat
lods
push
aaa
push
mov
idiv
xchg
add
cmp
test
lods
fmul
stc
loop
cmp
lods
call
push
ficom
xchg
lea
add
ret
pushf
loopne
loopne
out
lods
je
push
sar
dec
push
xor
push
lods
or
ins
cmp
cmp
ja
int3
or
mov
xchg
arpl
(bad)
enter
sahf
push
sub
shl
or
icebp
jle
and
jl
sbb
in
inc
and
cli
mov
outs
lods
shl
enter
iret
inc
ss
rol
sbb
call
mov
cwde
cmp
mov
lds
cmp
add
push
and
inc
pop
mov
lock
out
pop
rcr
imul
inc
movs
hlt
cmps
popa
mov
fmul
popf
cmps
call
cmp
ror
and
popa
das
popf
mov
xchg
pusha
add
and
jo
push
pop
push
movs
pop
fstp
adc
jnp
int
dec
clc
inc
mov
dec
popa
retf
inc
or
mov
dec
pop
xchg
ins
jns
je
inc
in
ss
test
sub
jbe
out
pop
sbb
sti
inc
into
paddsw
pop
aaa
fbld
(bad)
mov
cmp
mov
in
cli
frstor
mov
xchg
out
je
cmps
sub
cmp
(bad)
cmc
mov
pop
fstp
mov
dec
and
jbe
mov
dec
cs
stos
stos
neg
pop
mov
ja
shr
jbe
inc
retf
adc
retf
ins
ja
jecxz
dec
aaa
cmp
lea
jmp
cld
neg
lds
sbb
outs
les
mov
fs
mov
fucomi
mov
in
mov
stc
fist
xchg
(bad)
into
xor
push
dec
add
xchg
or
popf
hlt
jae
ret
pop
adc
sub
mov
test
or
aas
adc
scas
nop
mov
xchg
pop
ss
jnp
call
push
push
je
adc
retf
sysret
pop
jae
test
pop
lahf
push
adc
retf
fidiv
aaa
nop
popf
loop
mov
push
into
and
clc
daa
mov
fwait
ret
fadd
les
xchg
data16
sbb
push
sbb
fwait
push
loope
cmp
repnz
adc
jl
inc
jno
int
ret
retf
lods
jo
test
xchg
(bad)
std
sub
xor
push
(bad)
rol
scas
mov
push
pop
push
pop
or
pop
mov
mov
and
cld
pop
popf
sbb
xchg
xchg
in
daa
pushf
sub
cmp
inc
iret
sub
mov
mov
mov
jle
pop
sub
clc
stos
loope
inc
adc
mov
jl
pop
cmp
ffree
mov
sbb
test
call
out
jl
(bad)
and
xor
push
xlat
pop
sub
adc
mov
clc
fcomp
jle
sbb
cmp
inc
js
mov
outs
enter
inc
sbb
popa
cmc
add
sbb
lods
cmp
xlat
or
fadd
test
popf
dec
arpl
sbb
aas
pop
ror
xor
sbb
iret
jecxz
or
cmp
(bad)
adc
outs
test
repz
and
out
mov
dec
fs
clc
jmp
aad
clc
lods
xor
jb
es
pop
inc
or
inc
add
cmp
test
mov
pushf
test
fisttp
fwait
(bad)
out
repz
xlat
sar
jg
fucomp
add
xor
add
enter
(bad)
call
loop
or
sbb
ret
cmps
mov
and
and
fld
pop
cld
adc
rcr
and
sub
push
loopne
mov
vpmacsdd
adc
cmp
lahf
pushf
fxch
jbe
inc
inc
lahf
retf
ror
push
stc
dec
dec
imul
test
inc
repz
sub
xchg
rcr
sbb
push
pop
or
push
inc
xor
les
rcr
cli
inc
int
aad
push
div
push
and
cmps
mov
cli
in
dec
fisub
int3
push
xor
cdq
scas
dec
cmps
stc
jmp
sub
jl
lock
pop
out
ins
test
pusha
arpl
jp
sbb
push
adc
xor
test
out
cld
jbe
sub
cmps
or
cld
aaa
fisub
test
sub
push
bound
lea
(bad)
sub
(bad)
and
popf
push
pop
into
rol
dec
cmps
cmp
dec
dec
xor
add
adc
(bad)
movs
add
sbb
aad
sub
fs
mov
jne
imul
fs
mov
sub
pop
and
sbb
(bad)
mov
xor
fs
aam
push
push
enter
nop
push
aad
scas
mov
shl
test
pop
mov
pop
jg
sub
retf
sub
ss
addr16
shl
aaa
pop
lea
in
sub
neg
aas
add
mov
push
xor
pop
lods
dec
dec
in
imul
xchg
fs
mov
inc
punpcklbw
jg
dec
nop
push
leave
(bad)
fisub
mov
test
or
pop
jl
xor
dec
lods
or
cld
mov
xchg
ja
jnp
add
fwait
add
cmp
rol
dec
(bad)
mov
test
gs
cmp
retf
imul
and
mov
adc
mov
mov
push
add
mov
std
adc
fsubr
out
and
mov
pop
sbb
mov
sub
jo
(bad)
mov
xchg
loope
mov
in
sbb
sub
jge
mov
pop
mov
ret
fcomp
dec
into
jl
and
pop
xchg
cli
jns
lods
push
sahf
jp
sub
and
inc
mov
push
jmp
xor
test
scas
lods
test
xlat
sub
mov
(bad)
fdiv
rol
add
or
ja
mov
ret
push
mov
sbb
idiv
repz
sub
daa
push
pop
sbb
sbb
js
not
inc
lock
inc
add
mov
aaa
jmp
mov
js
aaa
mov
jnp
movs
sbb
xor
mov
aad
dec
sub
das
imul
cmp
jne
xchg
sbb
lods
std
int
clc
jbe
xchg
out
jge
lods
out
loope
ret
mov
sti
rcr
test
cli
add
xchg
test
neg
outs
shr
fistp
ins
ss
std
cwde
test
mov
or
add
lock
mov
js
and
cmc
shr
sub
inc
mov
push
not
outs
xchg
sub
shl
xor
pop
aam
mov
push
jae
jp
imul
push
cwde
add
ins
inc
push
push
out
out
js
outs
mov
in
ins
cmp
loope
push
mov
les
dec
mov
mov
or
mov
data16
sbb
in
(bad)
in
outs
js
inc
aaa
test
mov
and
test
mov
popf
jne
ret
aam
mov
(bad)
dec
mov
shr
imul
imul
nop
sti
cmp
out
call
jmp
add
sbb
std
mov
mul
test
jmp
call
push
(bad)
mov
mov
push
add
repnz
pop
je
movs
leave
int3
jno
sbb
stos
cmp
jecxz
sub
adc
mov
sub
jmp
mov
push
sbb
rcl
adc
leave
pop
inc
pop
test
loop
push
jns
cdq
cmp
push
jnp
test
mov
cmc
mov
mov
or
xchg
test
adc
mov
(bad)
aaa
sahf
(bad)
rol
dec
dec
stos
inc
mov
mov
push
loop
push
and
mov
mov
add
aas
dec
sbb
mov
push
push
mov
and
sub
mov
inc
iret
jmp
aas
scas
mov
pop
dec
xchg
sub
pop
mov
cmp
stc
mov
mov
fidiv
mov
xchg
mov
sbb
arpl
inc
pop
fistp
cmp
sub
or
dec
and
mov
lods
cmc
cs
jp
mov
push
and
mov
push
retf
test
xor
adc
mov
xor
lods
rsm
sub
mov
pop
shl
das
push
(bad)
cld
push
je
ss
(bad)
mov
cmp
cmps
vpsllvd
push
mov
std
fist
gs
jbe
push
loop
xlat
xchg
(bad)
mov
outs
and
imul
pop
jge
add
push
and
bound
mov
sti
fsub
call
fimul
mov
call
mov
jl
fistp
jae
mov
out
lss
in
pop
es
pop
jl
push
(bad)
fld
les
push
mov
fstp
lods
add
jmp
mov
add
add
or
mov
push
dec
jmp
sub
aad
mov
or
and
pop
clc
jns
pop
sub
sbb
xor
jmp
jb
lahf
push
and
mov
stos
(bad)
shl
mov
jnp
lock
jns
dec
nop
jne
dec
nop
leave
xchg
add
loope
jl
sub
lss
jns
lds
ins
mov
gs
sahf
icebp
out
(bad)
int3
cmp
lods
sbb
cmps
je
cmp
push
mov
mov
rol
jns
jge
sbb
mov
sub
aas
cmps
jmp
imul
dec
adc
fstp
xchg
loop
xor
jmp
pushf
lock
dec
push
jmp
jmp
stos
sub
jge
pop
std
adc
cmps
scas
push
sub
cmp
movd
xlat
movs
fisub
retf
pop
inc
push
pop
xor
jne
adc
sub
in
push
jmp
mov
push
xlat
mov
push
fnsavew
mov
inc
dec
jb
sbb
arpl
scas
cmp
mov
dec
inc
mov
stos
cmc
stos
dec
loop
jl
js
cmps
into
gs
stc
and
js
pop
lock
jmp
ss
jnp
outs
stos
and
pop
xchg
hlt
dec
or
loop
lods
xchg
jb
jb
push
gs
mov
nop
inc
inc
repnz
and
xlat
(bad)
test
and
jg
jb
arpl
ins
adc
xor
gs
aad
arpl
mov
scas
cmps
cmp
push
lods
mov
dec
add
adc
orps
cmp
jmp
out
xchg
dec
jle
daa
stc
xchg
inc
add
xchg
lods
out
sub
jmp
sahf
sub
jl
hlt
ficom
pop
call
cmp
mov
sar
cld
fwait
and
fucomip
shr
ret
int3
sub
adc
call
lahf
jb
(bad)
inc
sti
retf
jmp
ss
fadd
jbe
mov
(bad)
lods
jbe
inc
int3
shl
pusha
xor
pusha
cmp
mov
nop
push
sbb
daa
nop
dec
xchg
xor
es
cli
sbb
repz
mov
out
ret
lods
add
jp
test
call
add
push
jmp
inc
cmc
stc
or
mov
cdq
aaa
les
adc
jne
fstp
gs
mov
sub
jns
xor
pop
(bad)
fucom
mov
leave
sub
ret
mov
into
cmp
addr16
mov
push
xchg
or
sub
mov
ss
and
inc
gs
ret
fisttp
cs
in
mov
test
jl
loopne
inc
sbb
inc
cmp
sub
push
cld
(bad)
cs
cld
cmp
cmp
aaa
cmp
sub
xor
xor
sub
jle
adc
cmp
dec
push
jg
cmp
pop
cwde
aas
sub
(bad)
mov
in
mov
leave
sahf
mov
inc
out
or
bswap
retf
cld
aaa
xor
mov
iret
cmps
inc
mov
jnp
out
imul
jecxz
jecxz
xor
lock
data16
das
mov
pop
pop
loopne
cmps
(bad)
mov
sahf
inc
vmptrld
mov
or
pop
cli
lahf
and
mov
push
shr
mul
mov
jl
in
out
ret
dec
out
pop
jg
pop
aam
lds
xchg
loopne
pusha
das
inc
fsubrp
not
aaa
mov
movs
cld
retf
out
sub
fnstsw
(bad)
out
fist
loop
fbstp
xor
div
jmp
push
in
imul
ins
xchg
jae
cmp
sub
xchg
in
xchg
out
(bad)
jno
add
dec
pop
cmp
into
out
push
outs
xor
push
jecxz
adc
inc
add
clc
bound
outs
lods
add
scas
popa
and
mov
dec
popa
call
fstp
arpl
mov
sar
cmp
and
test
jne
aas
mov
scas
xchg
cmovge
ss
xor
imul
inc
sub
popa
inc
add
xchg
mov
sub
pop
in
adc
add
call
ror
sbb
add
jmp
int3
xor
push
rcl
fstp
adc
adc
ss
xlat
push
out
imul
jl
fisub
popf
mov
ror
add
popf
sahf
mov
or
jmp
adc
loopne
sahf
sub
sbb
push
fld
pop
movs
jae
ret
int3
or
ins
addr16
std
jae
cdq
mov
adc
outs
pusha
test
sbb
iret
(bad)
neg
out
push
and
mov
mov
das
adc
test
mov
sub
push
dec
aas
jmp
mov
xlat
add
imul
cmp
(bad)
xchg
pop
sub
stos
cmp
or
inc
sbb
movs
fwait
or
cld
cs
cmc
std
ja
add
shl
or
stc
dec
dec
lock
in
ret
jecxz
or
inc
sti
dec
dec
dec
(bad)
neg
mov
dec
mov
es
dec
in
pop
test
cmp
(bad)
cmp
shl
mov
inc
pop
xchg
out
cs
loope
xor
aaa
scas
test
fs
jbe
sahf
mov
sahf
rcr
pop
push
dec
xor
and
enter
ret
jnp
dec
sub
dec
outs
adc
(bad)
cmps
and
mov
es
jmp
mov
mov
retf
nop
push
xor
mov
xchg
pop
mov
mov
sub
jbe
imul
movs
lds
cmp
jmp
movs
ds
push
rcl
mov
loop
stc
mov
xchg
xchg
add
mov
fcomp
out
test
pop
fmul
scas
xbegin
(bad)
jnp
cmp
mov
dec
sar
add
clc
cmp
pop
and
sub
(bad)
(bad)
xchg
arpl
cmp
dec
call
hlt
ds
pop
les
scas
mov
rcr
cmps
aaa
lods
dec
lahf
jb
inc
call
stos
stc
ret
jbe
mov
inc
ret
add
shl
cmp
add
stc
jge
xchg
sub
stos
push
clc
es
mov
jl
ds
retf
int
pop
stos
jmp
hlt
inc
je
cmp
dec
push
sub
sar
push
or
push
xchg
cmp
jnp
ins
cwde
fnstenv
sub
not
cmp
lods
or
inc
add
sar
dec
jg
add
cmps
inc
imul
les
idiv
push
(bad)
mov
add
xchg
or
xor
mov
and
loope
sbb
dec
int3
loope
or
mov
pop
push
(bad)
pop
xor
aaa
sbb
jnp
jmp
pop
js
and
and
xor
fsub
xlat
mov
mov
fcom
enter
fst
scas
or
jae
cld
mov
add
sbb
push
fisttp
or
xchg
xor
shl
mov
mov
fcomp
pop
and
xor
mov
xchg
and
push
je
pop
push
mov
or
inc
xor
mov
fstp
retf
pop
xchg
dec
cmp
out
inc
shl
mov
je
xchg
ja
lods
ins
and
jle
lds
pop
jo
ror
jb
in
in
stos
out
inc
(bad)
arpl
adc
adc
data16
ss
and
in
lods
fisub
mov
or
jb
dec
add
jg
enter
push
fs
les
aas
dec
and
adc
dec
xchg
add
(bad)
out
xchg
adc
jb
pushf
ins
into
imul
popa
xchg
cmp
cs
xchg
push
inc
xor
cmp
push
add
mov
iret
mov
pop
lahf
jno
jp
stc
(bad)
push
cmp
adc
mov
pop
pop
pusha
push
test
push
popa
push
cs
ss
(bad)
pop
push
call
add
mov
cmc
ja
cmps
std
repnz
shl
lods
retf
xlat
mov
call
adc
in
outs
adc
fsub
popa
repnz
mov
fsub
xchg
out
data16
or
enter
pop
pop
push
cmovae
add
mov
inc
xlat
(bad)
jp
push
mov
adc
std
neg
add
das
mov
xchg
xor
inc
push
aad
pushf
lods
ss
imul
ins
pop
jp
aam
cmp
inc
or
call
pop
inc
out
xor
sbb
sub
sbb
push
movs
call
sbb
sub
push
aad
ret
add
imul
in
xchg
fisub
int3
jb
leave
movs
in
fisttp
sbb
icebp
loopne
mov
retf
fmul
shl
stos
fisubr
ja
scas
jae
es
nop
push
xor
mov
inc
and
xlat
inc
rcr
push
xchg
sub
stc
mov
inc
and
mov
test
cwde
or
or
fstp
add
lods
test
mov
jb
push
lods
ret
adc
or
shl
fisub
or
lods
dec
and
xor
pop
(bad)
aam
fs
lods
gs
bound
xchg
movs
test
inc
rcr
mov
cmps
push
(bad)
imul
inc
fs
xchg
add
inc
mov
jg
dec
or
cld
jmp
pop
test
push
inc
outs
outs
dec
mov
jecxz
in
inc
mov
pop
jge
jns
in
xchg
test
inc
cmps
repnz
push
xchg
push
jb
jno
or
loopne
xor
mov
movs
daa
and
pop
repz
imul
mov
mov
inc
fs
fwait
pop
push
xchg
jecxz
sub
xchg
into
mov
push
mov
cmp
and
adc
jecxz
adc
inc
mov
lds
jne
neg
dec
outs
lods
mov
push
fistp
in
or
shl
xor
add
cdq
pusha
dec
pop
(bad)
int3
sub
push
xchg
hlt
mov
daa
int3
or
sub
retf
scas
cmp
cld
mov
mov
or
pop
mov
addr16
mov
dec
aaa
cli
(bad)
jle
sub
pop
call
and
or
inc
ficom
stos
adc
xchg
(bad)
jge
xchg
mul
ret
inc
fadd
inc
lds
add
das
mov
mov
push
xchg
jnp
sub
in
xor
leave
sbb
xchg
mov
lods
lock
xchg
mov
or
add
xchg
je
sbb
mov
xchg
fs
ja
mov
mov
and
pop
pop
adc
xor
repz
mov
(bad)
fwait
fs
in
push
adc
inc
mov
inc
jo
mov
idiv
pop
scas
add
hlt
adc
sub
push
mov
lods
push
xchg
add
sbb
xchg
repz
xor
daa
stc
jb
mov
sbb
pop
adc
fwait
mov
test
ja
pop
mov
push
and
aas
and
sbb
repz
sub
inc
cli
fstp
scas
fcmovnb
jns
cmp
cmp
sub
jb
push
ja
das
retf
bound
jg
es
call
(bad)
jmp
and
cmps
in
call
or
push
fyl2x
mov
push
sbb
shr
sar
push
sbb
mov
gs
addr16
loop
push
hlt
and
adc
push
adc
cwde
cmp
fwait
cdq
ja
pop
cmp
(bad)
sbb
jo
shl
xor
push
inc
sbb
(bad)
jo
jbe
sub
xchg
mov
out
sub
rol
or
mov
test
pop
mov
pushf
sub
inc
adc
repnz
leave
sub
stos
push
js
xchg
fbld
lods
dec
mov
mov
int3
rol
sub
je
add
cmps
sbb
adc
mov
jge
popf
adc
std
das
push
stc
pop
mov
push
test
dec
(bad)
icebp
mov
mov
jnp
pop
sbb
dec
pop
scas
movs
repnz
je
and
mov
jnp
sub
mov
jmp
lods
mov
addr16
push
xchg
(bad)
mov
cmp
lods
(bad)
(bad)
jg
or
and
out
inc
popa
push
push
mov
mov
xor
ss
inc
pop
cmp
push
and
(bad)
pop
pop
cld
repz
sbb
and
(bad)
pop
mov
mov
mov
test
push
mov
mov
in
ret
retf
jge
cs
lds
into
mov
inc
or
push
and
mov
inc
mov
aaa
pop
pop
xchg
sti
add
gs
dec
pop
iret
jbe
dec
push
mov
jp
les
dec
fadd
add
xor
mov
inc
inc
xchg
cmc
aad
jge
imul
mov
xor
and
mov
lods
cmp
retf
out
popf
add
arpl
in
(bad)
xchg
fistp
imul
mov
paddd
mov
jg
int3
pusha
and
cs
test
pop
jns
inc
pop
pop
js
dec
shl
into
mov
hlt
dec
clc
xchg
mov
loop
or
out
or
shl
xchg
aam
mov
jmp
dec
out
mov
mov
xor
dec
aad
retf
in
sbb
aam
std
or
pop
pop
lahf
push
cwde
cmp
dec
sbb
xchg
loope
sbb
jmp
ins
dec
adc
stos
mov
dec
mov
out
jp
or
mov
sbb
or
out
inc
es
in
mov
jns
xchg
out
push
pushf
shl
rol
(bad)
outs
scas
mov
fwait
pop
mov
mov
fadd
lea
aad
rol
jnp
outs
js
cmps
mov
or
call
pop
xchg
pop
daa
cmps
cmp
pop
inc
cmp
jmp
add
xchg
cdq
mov
pusha
nop
out
les
rcr
mov
add
jns
or
ret
inc
jl
jge
lock
leave
pop
push
cmc
cmps
fwait
dec
cmps
js
stos
or
jecxz
cmps
in
pop
xchg
jmp
sbb
or
aas
popa
fisub
out
test
pop
lds
xchg
jp
jnp
jbe
push
mov
jno
pop
std
pop
xor
and
or
mov
jp
pop
and
mov
sub
xchg
stc
daa
jmp
xchg
xor
inc
ds
push
shl
xor
mov
push
div
add
in
mov
push
mov
imul
add
jae
push
mov
inc
or
gs
cmps
push
push
sub
jno
mov
push
ins
addr16
std
xor
mov
fldcw
jnp
bound
call
enter
mov
(bad)
mov
mov
adc
into
(bad)
das
push
loop
cwde
cmp
retf
mov
lahf
test
mov
cli
jmp
ja
int
jg
das
mov
outs
dec
xchg
dec
cmp
push
push
sti
icebp
je
dec
arpl
add
lods
retf
in
pop
mov
das
mov
pusha
push
lock
mov
or
int
adc
inc
xchg
jmp
pop
(bad)
fisubr
sub
mov
inc
mov
fs
xor
neg
push
es
out
iret
or
cmp
repnz
adc
es
cli
xchg
imul
aas
dec
and
xchg
scas
jbe
(bad)
(bad)
idiv
cmp
adc
push
sub
fnstenv
inc
movs
jnp
ja
mov
jl
jo
retf
shl
fcom
fdivr
fs
out
jp
adc
aas
cmp
fidiv
jne
xchg
jg
jp
pop
mov
(bad)
sbb
mov
push
enter
mov
push
call
repz
idiv
dec
sub
fstp
inc
movs
mov
mov
das
push
and
stc
xchg
pop
cmp
push
pop
adc
cmp
movs
(bad)
aas
mov
cmc
add
adc
ror
dec
xchg
and
shl
dec
aam
out
dec
cmps
in
stc
inc
add
aas
dec
(bad)
xor
sbb
jnp
ret
ret
or
jp
push
(bad)
fist
inc
inc
add
push
call
mov
movs
ror
mov
xchg
nop
ret
add
dec
iret
call
call
cmp
cmc
sbb
xchg
jbe
or
rol
(bad)
inc
int
pop
aas
clc
(bad)
mov
xchg
mov
adc
and
cdq
mov
cmps
rcr
out
dec
cwde
sbb
xchg
push
out
retf
inc
(bad)
jmp
add
inc
repnz
sub
xor
jecxz
adc
bound
or
pop
inc
pop
sub
inc
(bad)
xchg
test
fstp
aam
jmp
nop
xor
cmp
jne
mov
dec
add
adc
(bad)
cli
imul
sahf
fisubr
sub
mov
xchg
sub
add
inc
sbb
sub
pop
and
mov
xchg
sub
mov
inc
jmp
retf
sub
xor
arpl
cmps
sbb
and
or
out
loop
rcr
cmp
add
cmp
sahf
cmc
repz
loopne
mov
test
outs
(bad)
mov
dec
clc
mov
outs
cmps
lods
mov
test
imul
cli
(bad)
cmps
xchg
icebp
in
pusha
aaa
pop
out
aaa
push
lods
push
jmp
lock
xchg
cmp
mov
stos
fidivr
fidiv
or
inc
and
dec
shl
idiv
cmp
xchg
pusha
cmp
mov
xchg
stc
arpl
(bad)
out
xchg
or
sbb
leave
mov
fwait
dec
jns
xchg
adc
ss
hlt
and
cmp
loop
movs
pusha
mov
jge
sub
xchg
jo
mov
retf
retf
jmp
nop
cmp
cs
adc
loope
sub
(bad)
push
fsub
mov
gs
(bad)
mov
sbb
push
mov
pop
bound
adc
hlt
sbb
sub
jl
nop
push
mov
add
loope
mov
sub
sub
jge
lahf
mov
das
or
jo
fcomp
jmp
dec
jle
out
nop
outs
and
arpl
retf
add
sbb
sahf
dec
outs
pop
dec
cmc
jl
fnstenv
ds
imul
(bad)
test
mov
pop
ja
ss
pop
sbb
dec
xor
fsubr
ret
rol
popa
dec
and
mov
nop
cmp
inc
push
aad
pop
aad
cmps
sbb
nop
xchg
cmp
or
enter
shl
push
mov
loop
xchg
sub
or
jl
loope
mov
push
std
(bad)
mov
out
sbb
(bad)
jp
xchg
inc
call
xor
xchg
mov
jl
mov
add
mov
out
pop
bnd
movs
mov
in
or
adc
stos
jae
jns
ja
sub
(bad)
push
aad
cs
arpl
mov
or
fldcw
repz
xor
pop
mov
out
mov
dec
je
push
cli
cmp
and
mov
sub
jecxz
adc
sub
and
push
add
xchg
movs
adc
inc
stos
ret
ds
xchg
addr16
sbb
jmp
xchg
xchg
adc
out
aam
in
jne
sbb
xor
and
mov
lds
in
inc
fsubp
call
cmp
imul
xchg
xchg
aaa
in
sbb
inc
inc
or
push
cmc
mov
dec
sbb
jg
dec
jne
data16
aaa
rol
stc
xchg
shr
jae
pop
sub
fimul
jbe
lods
xchg
inc
push
test
mov
xchg
mov
and
xchg
arpl
test
popf
cli
mov
loope
fidiv
xchg
stos
les
nop
mov
pop
shl
add
mov
xchg
loop
cdq
xor
or
xor
cmp
mov
sbb
jecxz
xor
mov
(bad)
inc
mov
ins
clc
or
shr
imul
nop
xchg
jmp
cmps
xchg
push
mov
cld
mov
test
sbb
mov
or
pop
and
jl
enter
xchg
or
dec
jne
adc
push
inc
into
push
dec
fwait
icebp
int3
mov
pop
in
xchg
mov
or
ja
pusha
imul
mov
jmp
clc
mov
add
pushf
push
adc
neg
mov
imul
sar
sbb
mov
xor
idiv
mov
xor
shl
loop
or
mov
mov
mov
cs
cmp
popf
mov
sub
stc
or
jmp
add
xor
scas
xor
ss
lahf
xchg
mov
stos
iret
call
pop
sbb
les
cpuid
icebp
cmp
addr16
xchg
mov
xchg
push
dec
je
fnsave
push
leave
jns
adc
sbb
cdq
ins
push
cmp
adc
xor
jne
push
jns
push
jo
in
or
ret
mov
fwait
movs
sub
adc
xchg
jbe
cs
ds
inc
mov
mov
cmp
leave
bound
and
lea
push
stos
jmp
cs
cld
ja
mov
jg
sbb
mov
fisttp
xor
mov
fisttp
stos
mov
cmp
mov
mov
shl
adc
adc
cmc
sub
and
pop
xchg
mov
repz
inc
cmc
js
mov
jp
das
sar
inc
retf
call
mov
popf
xor
add
inc
inc
jge
in
jns
xchg
adc
(bad)
in
jbe
(bad)
mov
add
icebp
mov
loope
test
pop
or
xchg
adc
mov
xor
out
sub
and
daa
mov
sub
push
or
pop
cmp
jo
or
push
cli
adc
(bad)
loope
cmp
sbb
dec
mov
ins
mov
sbb
adc
sbb
inc
jmp
pop
rcl
xor
(bad)
nop
retf
fs
inc
and
call
scas
xchg
dec
and
out
ds
addr16
cmp
xor
test
sub
xor
out
mov
popa
sar
or
xchg
push
lock
retf
sahf
jo
aam
dec
inc
push
push
enter
lock
cdq
sbb
pop
movs
int
js
aaa
rcl
loope
cmc
mov
dec
fs
mov
xchg
mov
cmp
push
xchg
jge
xlat
ds
mov
adc
stc
rol
xchg
inc
fwait
lods
in
cmp
jbe
xor
mov
pop
mov
stc
xchg
dec
push
mov
rol
js
sbb
push
pop
loop
sbb
jns
out
pop
mov
push
mov
in
sub
sub
adc
dec
add
fs
pop
jmp
sub
add
test
push
aad
(bad)
xchg
(bad)
mov
ret
push
repz
ins
mov
cwde
je
out
push
jb
clc
in
cli
pop
fwait
out
pop
ins
nop
aad
call
outs
daa
cdq
icebp
stos
lock
test
js
sti
mov
sti
mov
or
add
imul
adc
mov
loopne
inc
pusha
sti
adc
cli
rcl
sub
aad
dec
repz
inc
xchg
lods
aas
bound
aaa
jno
or
jl
add
adc
push
jae
and
inc
mov
ds
add
cdq
pop
dec
mov
lds
imul
xchg
ins
fidiv
outs
or
mov
sub
sti
push
mov
xchg
mov
jp
ficomp
inc
sbb
enter
push
mov
push
(bad)
lock
stos
es
or
popf
push
stos
mov
ror
mov
in
les
and
inc
mov
xor
adc
(bad)
call
cmp
mov
sub
pop
jmp
sbb
mov
(bad)
out
not
mov
fs
sar
arpl
inc
gs
inc
jmp
jae
enter
pop
xor
or
data16
out
push
inc
cs
addr16
sbb
dec
ins
xchg
add
xchg
inc
aam
mov
fimul
rcl
ds
pop
data16
mov
stos
test
or
icebp
lea
or
mov
dec
sbb
push
aas
(bad)
mov
cmc
mov
or
sub
test
outs
jae
xchg
int3
sbb
sbb
lods
push
pop
pop
aam
scas
mov
lahf
push
jne
or
scas
out
fs
les
outs
add
push
mov
pop
cdq
jnp
dec
shr
and
repnz
sbb
daa
test
sub
pop
imul
cwde
ss
and
mov
pusha
sbb
mov
xor
dec
and
push
test
jge
out
cmp
adc
cmp
sar
cwde
sub
push
cmp
mov
mov
and
push
test
pop
pop
dec
sbb
in
loop
cli
js
int3
mov
sub
pop
std
popa
jne
test
fs
sub
inc
mov
mov
dec
push
icebp
push
and
cmp
or
ss
movs
retf
push
mov
cli
sbb
(bad)
mov
dec
jg
gs
mov
xor
and
mov
mov
jmp
mov
add
cld
sbb
mov
xor
ficom
add
data16
rcl
push
add
jmp
stc
enter
ss
sub
lock
push
retf
daa
push
cs
addr16
or
jnp
fyl2x
dec
movs
arpl
pusha
sub
add
xchg
nop
dec
jl
data16
les
cmps
daa
push
inc
cmps
cmc
std
pop
mov
in
mov
loop
fcmovb
xor
popf
adc
or
in
neg
mov
pop
adc
ja
push
inc
fdivr
or
add
clc
sbb
or
(bad)
outs
mov
leave
jo
aas
and
xor
and
repz
ins
mov
and
mov
idiv
inc
mov
mov
fmul
pop
xchg
mov
not
cmc
and
fistp
jl
sub
fsub
pop
pop
outs
int3
mov
push
mov
inc
fistp
sbb
xor
cdq
fwait
popa
(bad)
add
lahf
mov
rcr
cmp
mov
stc
scas
cmp
and
cli
test
ss
in
jno
jge
inc
xchg
inc
leave
sub
dec
arpl
or
outs
or
mov
rcl
jge
push
pop
jmp
(bad)
js
ds
xor
test
mov
or
(bad)
cmp
xor
fadd
add
jg
push
inc
int3
adc
rol
pop
cmp
es
and
mov
fs
pop
xchg
push
retf
and
jbe
imul
cmp
pop
mov
add
out
jbe
sbb
push
(bad)
lahf
cmp
loop
push
in
cmc
add
or
leave
sub
xor
jl
andnps
jge
xchg
sbb
les
inc
test
jnp
push
fwait
in
addr16
aad
cmc
jmp
popf
sti
bound
mov
xchg
adc
inc
push
mov
lds
push
lds
rol
mov
add
fwait
fs
aam
enter
sbb
jle
les
or
mov
ja
sub
mov
retf
pusha
pop
out
push
push
pop
(bad)
pop
and
add
enter
daa
mov
ret
and
push
fdivr
inc
movs
push
pop
lock
mov
addr16
add
(bad)
and
into
sti
cmc
mov
aas
subps
jno
icebp
xor
lock
iret
(bad)
pop
sub
lea
mov
push
test
pop
movs
popa
sbb
rcl
pop
mov
or
xlat
mov
cmps
hlt
mov
jecxz
and
int3
movs
scas
cmp
repnz
shl
mov
add
scas
sub
mov
hlt
scas
jno
jbe
adc
sti
ins
out
pop
mov
or
call
add
loop
jl
jmp
sub
push
mov
add
outs
fwait
push
leave
pop
xchg
sbb
loope
popa
jle
test
ss
fs
cmps
sbb
repnz
push
cli
dec
fcmovbe
and
inc
sub
lods
xor
bound
popf
fbld
fwait
sti
lock
daa
pop
rol
in
bound
push
(bad)
ja
jmp
jmp
push
cmp
shl
dec
mov
cld
cli
mov
mov
jnp
outs
or
pop
data16
test
and
mov
cli
sub
mov
ret
or
sahf
outs
mov
pop
inc
int
in
test
inc
(bad)
fisttp
mov
inc
and
int
js
adc
sar
add
in
jmp
stc
ja
je
xor
dec
sub
ja
pop
scas
ficomp
pop
cmp
sbb
sbb
and
fcomi
cmps
arpl
sub
ror
adc
pop
mov
mov
addr16
stos
add
mov
test
ins
jbe
addr16
test
jbe
adc
sub
xchg
sub
mov
iret
pop
push
xlat
test
xchg
(bad)
imul
jmp
in
shr
es
js
and
jbe
xor
push
pop
cmps
push
and
and
mov
jbe
inc
sub
in
adc
jno
sub
in
fwait
xchg
out
mov
xor
or
xor
dec
into
std
push
fs
pop
(bad)
sti
ror
jb
outs
or
push
ja
adc
rcl
sahf
xchg
pop
arpl
retf
ds
and
dec
adc
nop
imul
cwde
sub
scas
aas
mov
mov
mov
adc
das
dec
add
sub
outs
repnz
out
sub
mov
nop
bound
xlat
dec
and
mov
lods
bound
(bad)
xchg
mov
into
mov
out
jno
sti
iret
adc
mov
test
xchg
out
dec
loopne
cmp
and
data16
xchg
fs
test
ret
movs
ja
repnz
inc
test
mov
shr
inc
sub
cs
or
cmp
cs
add
stos
fsub
mov
scas
leave
cmc
mov
cs
dec
popf
jg
mov
mov
sbb
lahf
mov
sub
cmc
loopne
sub
ror
scas
and
test
mov
ja
js
cmp
loopne
add
pushf
mov
pop
(bad)
dec
data16
cli
sub
dec
imul
mov
pushf
jle
mov
adc
and
xor
jl
scas
mov
push
cmp
pop
not
aas
ss
inc
ins
popa
and
aad
inc
pop
dec
fwait
clc
jmp
jecxz
xchg
aam
mov
dec
push
pop
inc
fmul
nop
push
mov
mov
adc
arpl
add
dec
push
dec
push
pop
mov
scas
mov
push
cdq
or
scas
sbb
mov
dec
(bad)
pop
xchg
pop
push
nop
jae
inc
mov
mov
call
pop
push
scas
jmp
sbb
xchg
sbb
cmps
movs
(bad)
enter
jl
jnp
jge
cmps
mov
je
lock
inc
mov
adc
test
in
(bad)
call
(bad)
fcomp
push
fdiv
sar
in
sbb
sub
daa
sub
ret
push
test
jo
push
out
out
ins
or
mov
xor
xchg
(bad)
dec
jmp
xor
or
push
imul
add
ja
(bad)
and
jb
sbb
xchg
fstp
sub
cli
mov
sbb
mov
push
adc
add
dec
fild
(bad)
je
push
ins
sub
pop
jecxz
(bad)
mov
aaa
rcl
adc
mov
xchg
lods
(bad)
dec
ror
push
unpcklps
in
sbb
and
loop
adc
xor
ins
pop
push
nop
xchg
mov
add
in
dec
sub
popf
inc
mov
adc
xor
and
aas
ret
add
xchg
(bad)
cmp
mov
jmp
ror
sbb
jns
sbb
adc
test
pop
mov
in
jno
pushf
repz
dec
xchg
hlt
out
test
sbb
push
fwait
fwait
mov
sub
mov
out
add
test
outs
call
call
mov
pusha
movs
dec
aaa
test
inc
and
icebp
add
mov
mov
mov
jle
inc
inc
loopne
mov
ror
repnz
fld
leave
movs
push
test
jne
lds
push
nop
cmp
div
fnstcw
cli
sub
xchg
mov
mov
pushf
mul
pop
pop
add
data16
add
mov
cmp
xchg
inc
dec
cmps
pop
aaa
outs
adc
ss
and
push
and
lock
rep
push
loopne
test
and
mov
push
or
loope
mov
test
mov
add
imul
data16
jb
and
add
sub
inc
pop
jno
push
mov
jae
xor
xor
jl
test
inc
jns
fadd
adc
mov
stos
inc
mov
aam
leave
dec
or
push
mov
in
repz
ins
or
dec
in
sbb
ret
push
mov
ficom
inc
out
fadd
dec
xchg
ja
cli
adc
aam
fistp
and
xchg
movs
repz
cmps
sub
jnp
dec
mov
sbb
xchg
scas
and
and
mov
and
cmp
popa
sti
jns
mov
push
and
push
inc
xchg
into
fld
sub
mov
fs
xor
cld
cmp
mov
adc
in
jp
sar
fidiv
pop
mov
ds
xor
lods
fimul
fs
sub
adc
inc
pop
add
popf
test
aas
aas
xor
and
mov
(bad)
fld
pop
and
or
(bad)
cld
xchg
and
iret
retf
aas
mov
sbb
mov
bound
lock
std
adc
cld
mov
dec
cmc
xor
clc
das
pop
mov
pop
add
xchg
imul
or
lea
stos
and
add
adc
xor
fmul
aad
xor
jmp
mov
and
cs
cmp
or
jg
fadd
test
mov
push
xchg
mov
fs
xchg
andn
jp
(bad)
push
add
jno
fild
stos
inc
leave
cmp
push
dec
jmp
push
dec
mov
adc
(bad)
push
push
lods
jmp
inc
arpl
icebp
pop
xlat
fldcw
call
fnstenv
nop
jb
daa
shl
inc
mov
call
cmp
shl
push
pop
inc
or
jno
fwait
ret
adc
or
mov
jnp
fwait
das
mov
pop
mov
call
std
std
je
sub
mov
ret
sub
sbb
xlat
pop
sub
pop
xor
ror
rcl
sti
outs
push
xchg
jo
mov
mov
dec
aad
xor
and
push
mov
in
and
cmp
mov
shr
std
int
cs
jecxz
aaa
ds
dec
das
jb
fldenv
xchg
adc
dec
dec
test
mov
loop
loope
(bad)
shl
xor
scas
sahf
sbb
call
cld
leave
popa
(bad)
fucomi
xor
adc
mov
lahf
je
adc
xor
not
pushf
xchg
push
mov
inc
test
cmp
or
xor
outs
xlat
icebp
and
mov
mov
jns
mov
fcmovbe
dec
push
dec
and
std
sbb
jg
sbb
fwait
inc
test
sub
enter
or
fs
pop
inc
cli
shl
(bad)
jns
sbb
bound
inc
aam
out
int3
mov
aam
pop
lods
push
adc
aam
adc
loop
mov
pop
dec
push
sub
push
hlt
js
es
xor
xchg
inc
rcr
stos
out
inc
std
mov
xor
fwait
in
or
ds
movs
dec
push
or
mov
xor
inc
jbe
push
add
mov
fdivr
pusha
xchg
jp
outs
push
pop
xchg
or
in
mov
imul
fisub
mov
inc
mov
icebp
pop
inc
loopne
in
dec
div
test
repnz
mov
pop
pop
push
mov
mov
mov
lock
ret
popf
enter
jecxz
mov
jb
lds
fcom
push
mov
adc
pop
dec
jecxz
(bad)
scas
scas
pop
pop
xchg
xor
cmp
popa
int
clc
adc
lods
xchg
mov
enter
out
mov
stos
movs
pop
nop
sub
and
xchg
repz
mov
lock
pop
cmps
mov
xchg
push
dec
dec
mov
lock
iret
xchg
sub
push
mov
(bad)
inc
or
nop
repnz
retf
imul
mov
jp
enter
or
jns
mov
ret
in
outs
inc
repz
into
imul
mov
in
cdq
aaa
and
(bad)
jl
nop
lods
dec
inc
dec
movs
(bad)
push
xchg
mov
sbb
inc
xor
pop
push
cmp
add
stos
fbld
inc
add
cmp
cli
in
lea
std
add
inc
jmp
and
mov
daa
push
mov
push
lods
retf
retf
mov
outs
push
sub
mov
ss
push
add
sbb
xchg
mov
call
cli
retf
jae
and
push
add
nop
sbb
dec
inc
xchg
push
sub
jle
ja
repnz
mov
fdiv
xchg
stos
ja
mov
push
inc
sahf
pop
adc
in
adc
mov
mov
daa
push
lea
push
rcr
xor
lock
jno
int
mov
and
sub
hlt
pop
(bad)
mov
and
pop
sbb
and
enter
popa
mov
arpl
dec
loopne
stc
rep
jp
not
call
dec
pop
scas
bound
pop
cmps
or
std
mov
movs
and
adc
fimul
arpl
xchg
and
cmp
cmps
out
push
pop
int3
jge
sti
xchg
dec
imul
or
std
pushf
loop
cmc
push
(bad)
pop
outs
dec
div
push
je
dec
adc
dec
es
mov
xor
not
aas
cmp
dec
mov
jb
jmp
call
mov
jbe
mov
cmp
(bad)
push
push
mov
mov
cs
inc
shr
leave
mov
sub
push
pop
jmp
sahf
jg
popa
aas
stos
mov
adc
xor
jecxz
dec
das
shr
and
adc
repz
lahf
xor
fisubr
addr16
stos
inc
aam
iret
jo
inc
lods
int3
loopne
aaa
xchg
pop
ret
cmp
pop
add
pop
xchg
pop
mov
dec
call
fcmovne
jge
push
shl
int3
mov
sub
setge
cs
lea
movs
mov
mov
rol
jae
jmp
xchg
outs
fldcw
call
pop
sbb
xchg
rol
mov
sub
mov
sbb
enter
stos
mov
out
movs
sti
lahf
pushf
pushf
out
loopne
sub
mov
ror
mov
(bad)
out
lahf
(bad)
jg
fdivr
jmp
dec
dec
push
or
nop
shl
and
outs
cld
lahf
into
inc
dec
(bad)
and
jg
inc
jns
mov
push
sbb
xchg
in
mov
shl
movs
aam
retf
xor
stos
out
mov
add
call
test
cmps
cmps
movs
in
or
lock
cdq
jg
jno
les
aad
std
shl
popf
push
sti
mov
mov
fst
mov
lods
mov
daa
adc
push
das
mov
daa
gs
mov
aam
xchg
test
loope
mov
mov
aaa
cmps
mov
sbb
pop
aam
add
mov
lea
cld
aas
aad
or
lahf
jecxz
(bad)
mov
rol
je
enter
dec
ins
scas
(bad)
sbb
mov
jp
leave
cmps
aam
xchg
ja
cmc
clc
push
inc
push
push
fld
inc
or
shl
pop
push
push
xor
cmp
xchg
xchg
fwait
test
mov
pop
retf
arpl
xchg
retf
int
sbb
ffreep
xchg
les
cs
fbld
pop
imul
add
sbb
jmp
dec
out
lea
ret
movs
xor
push
popf
mov
rcl
push
push
jg
out
in
shr
retf
or
pop
ins
sub
jmp
xor
pop
das
call
pop
cmp
pop
push
out
or
cld
out
and
adc
sbb
or
outs
out
jo
ins
fidiv
xor
(bad)
dec
fdiv
jecxz
dec
(bad)
int
dec
icebp
fild
out
in
(bad)
cmp
inc
mov
outs
iret
jnp
dec
xor
js
adc
mov
js
rol
loope
push
dec
aam
arpl
push
adc
pop
cs
movs
cmp
inc
daa
mov
push
jb
sbb
enter
(bad)
pop
add
inc
in
add
test
or
(bad)
sti
push
mov
mov
fs
fldcw
shl
push
das
stc
paddsb
sbb
leave
loop
inc
mov
xor
outs
mov
mov
lods
fistp
(bad)
xor
push
iret
call
adc
dec
pusha
jp
out
dec
or
call
enter
inc
sti
cld
push
cmp
push
ret
sub
sbb
iret
xchg
cmps
mov
push
pop
sahf
sbb
fld
jge
push
sar
mov
jns
jb
jg
fnstsw
hlt
ds
jge
loop
loop
cmp
pop
adc
inc
add
inc
ret
test
dec
xor
jns
mov
pop
jns
ret
(bad)
jo
push
and
mov
call
sub
mov
pop
xchg
movs
loopne
sbb
xchg
push
jl
jae
push
and
nop
pop
mov
in
dec
addr16
push
fwait
shr
les
fsubr
fsubr
sub
cmp
push
sub
enter
xor
pushf
das
shr
retf
add
mov
xchg
ret
stos
repz
add
pop
daa
test
mov
sti
jecxz
dec
sbb
xchg
int3
movs
and
in
test
xlat
jg
sub
repz
mov
xor
sub
xor
loopne
pop
sbb
rol
rol
call
ja
jne
jnp
sbb
(bad)
cmp
or
jge
mov
and
stc
sbb
and
mov
lahf
not
sub
aad
leave
ss
xlat
jnp
neg
pop
mov
push
jmp
je
and
(bad)
in
ja
js
pushf
(bad)
rol
push
or
es
mov
loopne
jbe
push
jecxz
(bad)
rol
aad
inc
sub
jae
cmovb
push
or
xor
sub
and
pop
and
cmp
sub
mov
mov
hlt
lods
mov
retf
pop
call
push
sub
(bad)
fwait
repnz
scas
xchg
retf
fistp
and
mov
outs
inc
outs
inc
jle
jmp
jecxz
repz
push
jo
in
push
mov
mov
mov
dec
push
mov
stos
fdivr
push
dec
movs
inc
repnz
cmp
cld
pop
fcom
sub
arpl
data16
ja
dec
mov
sub
add
mov
and
push
fst
mov
outs
cmp
pop
sbb
rcr
jmp
sbb
xchg
shl
mov
cmp
fldcw
mov
xchg
jmp
gs
ins
dec
or
fwait
sbb
ret
pop
dec
jne
xchg
add
pop
(bad)
ret
push
popa
arpl
sub
fwait
adc
pop
fiadd
mov
push
jp
push
mov
dec
dec
adc
(bad)
lock
mov
cli
sti
gs
mov
xchg
mov
movs
cwde
adc
jp
fild
pop
xor
jb
fsub
sub
ret
mov
add
call
mov
jb
hlt
add
clc
sbb
xchg
in
arpl
or
sub
mov
jl
pushf
add
and
pop
push
jmp
pop
jecxz
xlat
xchg
dec
retf
sub
test
jmp
inc
fidiv
mov
mov
mov
adc
mov
fdiv
sub
mov
mov
scas
(bad)
jp
inc
imul
in
xlat
retf
xchg
cmc
jle
jns
iret
jmp
sar
and
xchg
loop
mov
push
rcr
hlt
stos
pop
addr16
into
arpl
fstp
sbb
mov
(bad)
fdivr
and
and
movs
aam
sbb
(bad)
gs
pop
cmp
cmp
cmp
mov
dec
xchg
pop
loope
pop
or
push
or
sbb
cmp
push
loope
xor
adc
inc
in
and
sub
iret
call
(bad)
push
shr
adc
cli
mov
cmps
xor
out
hlt
mov
mov
rep
sub
cmps
cmps
cmp
movs
(bad)
rcr
stos
jae
aad
pop
ins
adc
push
cmps
imul
inc
dec
xchg
test
sub
ins
in
loope
xor
addr16
into
mov
ds
(bad)
fwait
cli
mov
data16
xor
hlt
cmp
sbb
hlt
and
fcom
(bad)
imul
jno
or
sbb
icebp
(bad)
sqrtps
aam
sub
mov
ja
mov
add
retf
data16
or
dec
adc
xchg
inc
pop
or
adc
or
jg
mov
push
sbb
xchg
mov
dec
xor
div
push
cmp
pop
cmp
jecxz
(bad)
daa
jecxz
xor
jmp
ins
pusha
in
fidivr
cmp
cmp
(bad)
jmp
sub
stos
inc
mov
loopne
adc
cmps
test
cmp
xlat
jge
out
cld
push
jae
pop
push
cmc
mov
push
sbb
jmp
inc
push
neg
mov
pop
scas
dec
ss
adc
mov
jbe
cmp
pop
xlat
arpl
sbb
aam
pop
shr
jl
push
fcomp
add
lock
outs
cmp
rcr
js
es
outs
push
jno
fmul
push
iret
jge
push
lds
dec
mov
pop
lahf
aam
add
outs
int3
adc
sub
stos
sub
adc
dec
(bad)
jns
int
add
add
mov
or
xor
rcr
sub
inc
call
stos
rcl
ds
push
jbe
loop
test
inc
dec
mov
lock
ret
not
push
cmc
sahf
xchg
ficom
push
or
push
cmps
inc
pushf
ins
jp
mov
popf
and
setnp
(bad)
and
mov
fcom
loopne
popa
add
pop
pop
iret
pop
sbb
mov
div
adc
xchg
mov
mov
out
sub
test
push
inc
sub
mov
aaa
push
pop
stos
pusha
and
add
mov
pusha
xlat
(bad)
das
sub
mov
data16
mov
inc
stc
pop
fwait
sbb
pop
aam
call
jmp
(bad)
cdq
mov
ins
and
lahf
add
loopne
es
pusha
xchg
iret
dec
push
sar
or
sbb
(bad)
jmp
and
mov
call
addr16
cmp
mov
cdq
sub
lods
hlt
ins
or
and
sbb
shl
loopne
call
out
sub
inc
test
push
ins
into
sub
(bad)
cmp
xchg
ret
push
xchg
fild
loop
and
addr16
aaa
into
cmp
sbb
cmp
pusha
aas
mov
test
sbb
dec
sub
jp
jns
pop
push
push
retf
lods
add
jo
xchg
cmp
in
(bad)
and
jae
sub
loop
sti
aas
inc
jmp
outs
sbb
mov
aad
push
scas
ret
dec
imul
repnz
xchg
dec
sbb
fistp
mov
xchg
test
lods
jle
mov
mov
mov
lods
ins
hlt
repz
adc
cdq
mov
lds
pop
and
repz
(bad)
repnz
cmps
push
add
or
outs
rol
pop
retf
sub
loop
jge
sbb
out
call
and
mov
pusha
pop
std
add
adc
mov
xor
mov
dec
xor
mov
xchg
movs
cdq
(bad)
sti
inc
icebp
out
and
sbb
sub
sub
mov
add
lds
(bad)
jne
neg
dec
pop
add
dec
sbb
mov
jl
bound
jae
pop
imul
popf
xchg
(bad)
cmp
ins
fcmovbe
sub
mov
in
mov
(bad)
pop
sti
mov
rol
sahf
cld
sti
imul
adc
test
lock
jecxz
xor
pop
test
jmp
lds
repnz
sbb
nop
call
dec
jg
in
sub
lds
loop
and
cdq
sbb
xchg
mov
daa
out
adc
or
test
mov
adc
scas
jg
pop
ins
and
xor
imul
scas
lahf
jbe
(bad)
mov
in
jmp
and
fistp
mov
jge
xor
leave
gs
pop
in
loopne
inc
fbld
add
pop
jae
mov
dec
out
in
retf
js
or
and
test
stc
sti
add
lea
ror
lods
cdq
rol
sub
ds
es
outs
cs
dec
ds
dec
jmp
and
cmp
dec
scas
pop
dec
cmp
sbb
sti
pushf
movhps
out
cmps
fisttp
jo
xchg
popa
fwait
sbb
fisttp
add
dec
scas
jmp
push
xchg
dec
mov
mov
lock
leave
inc
pop
xchg
scas
and
pop
(bad)
fnstcw
sub
mov
push
cmp
inc
jbe
shl
test
dec
test
add
push
divps
or
dec
int
int3
pop
hlt
push
test
cwde
inc
adc
dec
ss
imul
push
mul
clc
fs
cmp
mov
(bad)
pop
cs
shr
add
adc
arpl
call
sbb
call
add
dec
inc
sahf
pop
adc
inc
xor
mov
sbb
mov
mov
and
retf
push
jb
adc
(bad)
mov
xchg
pop
movs
bound
popf
shr
aaa
sub
pop
xchg
lods
in
in
stos
in
out
inc
retf
(bad)
daa
adc
icebp
aaa
xchg
or
sub
stos
push
(bad)
lods
jnp
jle
jl
mov
push
stos
add
mov
push
mov
rcr
and
cwde
cs
dec
adc
and
mov
pop
or
xchg
inc
inc
cs
jae
in
add
js
push
ins
sar
xchg
push
cwde
sbb
enter
neg
push
popf
sbb
popf
jmp
jns
and
data16
loope
xchg
jo
push
fild
and
ins
nop
outs
jle
gs
ficom
daa
jg
or
push
mov
jge
mov
jp
pushf
in
fdiv
leavew
pop
rcl
push
cmc
in
xchg
inc
adc
mul
cmp
js
scas
clc
ret
data16
xchg
mov
or
lods
push
mov
cld
lods
popf
mov
cmp
ds
xor
xor
push
mov
imul
repz
inc
ss
push
adc
jo
rcl
or
ret
sbb
ja
nop
popa
xchg
jmp
es
ja
ret
jp
push
bound
mov
mov
not
fild
cmp
xchg
xor
nop
xor
test
pop
icebp
scas
inc
imul
mov
adc
sub
xchg
aad
aaa
xchg
nop
(bad)
jmp
inc
inc
jmp
inc
sti
xor
and
fnsave
mov
ss
push
mov
inc
retf
push
addr16
mov
cmc
push
cmp
inc
(bad)
adc
movs
mov
add
jnp
jb
(bad)
push
or
jg
in
retf
in
inc
cmp
mov
pop
(bad)
mul
(bad)
into
in
or
xlat
mov
pop
lea
mov
dec
jmp
jne
neg
call
dec
int
loope
ror
jp
jns
adc
ja
and
les
bound
push
xor
inc
mov
lds
jp
push
dec
sbb
fwait
mov
int
mov
ret
out
fstp
push
or
and
mov
fiadd
pop
add
xchg
sbb
(bad)
sbb
test
movs
mov
push
push
xchg
retf
and
inc
icebp
mov
sbb
and
mov
or
inc
sbb
pop
das
jl
jle
ficomp
cmp
and
outs
xchg
sbb
add
push
mov
sti
inc
dec
add
retf
test
inc
mov
jmp
fs
xor
jecxz
or
push
scas
jbe
xlat
pop
pusha
xchg
add
add
out
es
stos
push
push
and
pop
xchg
test
dec
test
add
pop
adc
bound
inc
mov
mov
pop
nop
push
fidivr
test
pop
push
adc
inc
fcomp
inc
call
popf
add
cwde
fsub
fdiv
inc
call
push
xor
aad
or
lods
push
movs
or
(bad)
mov
adc
js
ins
jnp
xchg
pushf
es
sbb
fwait
imul
xor
mov
fisttp
jmp
pop
lds
xor
cmp
fst
(bad)
push
cwde
mov
add
xchg
xor
mov
ja
xor
ret
sahf
std
and
dec
mov
mov
aad
ins
jnp
fdivrp
xor
gs
or
dec
inc
xor
adc
fcmovu
ins
sub
pop
sbb
lds
sub
rcr
xor
push
sbb
call
fucomi
jge
call
lods
push
mov
stos
mov
xor
inc
movs
fcom
pusha
ins
mov
jbe
pop
rol
mov
sti
test
add
jae
js
test
test
push
popf
fnsave
push
push
adc
test
dec
lock
mov
cmp
jbe
aad
mov
mov
lahf
jle
xor
pop
sbb
call
push
sahf
add
pop
and
jo
xchg
bound
and
outs
dec
mov
imul
(bad)
dec
(bad)
jmp
and
dec
(bad)
sub
mov
xor
cmp
pop
add
out
sbb
push
xor
mov
ror
test
jnp
(bad)
adc
repnz
movs
sub
js
(bad)
daa
into
or
test
mov
cmp
movs
sbb
movs
fimul
into
mov
test
pop
inc
mov
leave
push
test
aam
das
fcmovnbe
add
mov
jmp
xor
lods
adc
jmp
jle
cmp
add
adc
jl
ficom
cli
jne
(bad)
mov
test
std
or
dec
cmp
dec
mov
pop
cmps
pop
dec
in
test
or
sbb
mov
(bad)
pop
cmp
mov
pop
in
mov
jecxz
inc
ja
xor
sbb
int
cs
jg
gs
test
push
das
mov
popf
outs
pop
test
sti
dec
adc
jb
adc
sub
sbb
div
movs
mov
test
cmp
(bad)
xor
pushf
shl
dec
cmp
imul
aas
mov
inc
push
ja
pop
inc
push
push
jecxz
dec
xor
sbb
je
clc
das
lds
sbb
xor
ret
enter
bound
cmp
loope
mov
push
jmp
lods
loope
(bad)
pop
xchg
fidivr
add
dec
adc
in
in
xchg
cmp
adc
cmps
xor
cli
out
sti
repnz
sar
mov
je
inc
push
mov
hlt
outs
add
xchg
cli
pop
xlat
mov
cmp
out
(bad)
xchg
mov
aaa
dec
fisubr
and
push
shl
and
cmp
pop
imul
mov
pop
das
push
xor
xchg
pinsrw
mov
jns
test
cld
push
xlat
pop
mov
cmps
stos
hlt
cmp
add
mov
jbe
mov
inc
sub
xor
mov
add
(bad)
and
mul
stc
test
ins
(bad)
ja
les
or
imul
adc
cli
dec
test
out
cmps
scas
lock
scas
loope
in
push
out
mov
aad
test
(bad)
xchg
lds
xor
xchg
xchg
sti
fld
popf
ja
adc
sub
pop
jno
jbe
scas
or
lods
shl
lock
imul
xchg
in
adc
les
iret
or
inc
jmp
adc
mov
out
enter
out
sub
pop
rol
sub
mov
jb
outs
push
or
rol
fnstenv
mov
cwde
out
pop
mov
sbb
cmps
add
adc
jns
and
adc
fdivr
sub
pushf
test
out
lds
sub
push
test
dec
push
pushf
aas
cld
scas
cmp
adc
into
in
rol
mov
sar
bound
repnz
test
sbb
sti
in
dec
and
lds
and
aaa
leave
mov
(bad)
xchg
and
push
dec
(bad)
cmp
push
daa
xor
loopne
push
push
mov
xchg
int3
mov
and
aad
imul
push
in
loop
mov
inc
pop
dec
lods
cld
test
add
mul
push
in
in
sar
mov
in
add
imul
jo
or
cs
scas
ja
xchg
loope
pusha
sbb
or
test
cmps
adc
xchg
inc
and
sahf
pop
imul
cmps
sub
cmp
xchg
imul
outs
jg
cli
push
sub
push
cmp
aaa
sbb
push
cmp
or
js
sar
dec
and
or
xchg
ins
add
fild
pop
adc
lahf
inc
out
mov
(bad)
out
daa
ret
retf
cli
jmp
add
pop
pop
cmp
pop
pop
stos
mov
inc
stc
push
pop
push
xchg
repz
aad
push
mov
pop
(bad)
vxorps
cmp
push
leave
mov
cmps
lods
xor
sahf
or
in
movs
popa
xchg
iret
das
add
sub
sub
push
lea
clc
push
jecxz
add
nop
add
cmp
or
mov
xchg
test
pushf
xchg
scas
or
es
test
xchg
lds
and
jns
mov
int3
data16
cmp
arpl
or
loopne
jl
push
lock
mov
adc
jno
aam
retf
fwait
adc
push
mov
ins
sbb
lds
(bad)
int
fsubr
out
imul
idiv
addr16
retf
lock
mov
(bad)
popf
(bad)
int3
sub
xchg
cmp
ins
inc
and
push
ss
xchg
jecxz
fs
xchg
dec
add
mov
scas
jne
fmul
imul
loope
jo
imul
pop
nop
and
ret
jmp
bound
out
movs
call
cmp
in
pop
out
and
dec
jge
and
test
addr16
cs
mov
pop
in
pop
jle
pop
mov
mov
shl
movs
inc
jo
sub
adc
loope
lds
push
adc
or
std
sbb
xor
xchg
push
fdiv
push
inc
inc
push
mov
repz
not
and
mov
adc
and
mov
lds
xchg
mov
push
fcom
aas
not
daa
retf
cld
lods
cmp
cld
int3
inc
sbb
push
sub
mov
add
in
adc
test
or
sbb
loopne
mov
rol
jae
aad
imul
or
mov
xchg
xchg
(bad)
push
push
sub
push
mov
xor
loope
jle
cli
nop
enter
fld
jmp
fistp
xor
mov
icebp
add
push
repz
dec
bound
jp
imul
mov
icebp
sbb
mov
and
stos
mov
cli
inc
adc
lds
cmp
push
add
jno
clc
or
lea
dec
repz
add
mov
mov
adc
rol
aaa
jecxz
ins
mov
inc
rcl
ror
(bad)
clc
gs
fisttp
inc
sar
pop
push
fistp
mov
ret
push
in
daa
pushf
ins
or
fist
loopne
or
retf
pop
jmp
push
fisubr
test
leave
sub
sbb
mov
dec
jmp
jecxz
add
push
xor
xor
ror
inc
adc
dec
popf
sub
mov
ja
xchg
in
sar
mov
iret
jne
fldenv
push
and
jns
jne
jmp
sub
leave
and
(bad)
jmp
jmp
das
daa
fyl2x
or
cdq
sbb
push
fidivr
mov
dec
xor
jg
out
pop
and
clc
(bad)
xchg
mov
int
aad
jecxz
xchg
pop
ins
push
sbb
sbb
arpl
jmp
sub
jecxz
nop
mov
and
loop
pop
mov
mov
int3
retf
outs
cwde
push
imul
add
retf
test
jae
iret
les
fdiv
cmp
inc
xor
sbb
sbb
shl
sbb
jmp
mov
sub
(bad)
push
xor
shl
mov
mov
int3
ror
mov
add
cs
stc
cdq
and
fidivr
mov
xor
outs
test
popf
add
retf
cmc
xor
aam
adc
inc
inc
jnp
ins
dec
cmps
cmps
les
dec
xchg
lds
dec
xchg
sub
and
mov
sbb
js
pushf
or
dec
xor
cmps
mov
lea
adc
lea
clc
xor
cdq
cwde
pop
adc
mov
jmp
es
jmp
xchg
mov
dec
cmp
mov
mov
pop
mov
mov
je
arpl
push
ret
(bad)
aad
fnsave
push
dec
stos
push
out
stc
sbb
pop
xor
jno
pushf
mov
jmp
sahf
in
aaa
and
xchg
iret
pusha
fld
jl
fstp
in
std
imul
xchg
push
stos
repnz
mov
xor
std
(bad)
fldcw
cmc
cmp
call
push
pop
add
dec
or
and
scas
mov
cmp
inc
mov
mov
jl
(bad)
enter
push
in
mov
and
adc
loopne
add
jp
dec
pop
mov
jmp
add
pop
push
push
add
enter
push
xor
neg
jne
(bad)
cmps
xor
push
push
sub
and
das
(bad)
leave
push
(bad)
shl
fcom
call
retf
xchg
rol
or
repz
xlat
xor
mov
xlat
mov
dec
cmps
jle
loopne
lock
mov
and
(bad)
jns
or
sub
dec
loop
push
jmp
cmps
hlt
fdivr
mov
aaa
mov
sub
sbb
inc
push
popa
stc
aaa
pop
mov
cmc
fnstcw
push
sbb
mov
clc
addr16
dec
sbb
cmp
push
ror
hlt
push
fidiv
test
pop
loope
pop
mov
fndisi(8087
shl
ficomp
mov
mov
adc
pop
ds
jae
xchg
movs
jmp
mov
les
dec
sub
jmp
ret
adc
adc
(bad)
ret
pop
jne
push
mov
xchg
(bad)
mov
lods
sub
cs
adc
and
mov
les
and
ror
pop
stc
push
outs
imul
gs
ret
jno
push
sbb
push
(bad)
fiadd
loopne
xor
cdq
imul
sbb
daa
or
cmp
(bad)
call
les
cld
and
outs
or
ret
mov
bound
call
repnz
push
xchg
or
out
sub
sub
mov
iret
repz
add
movs
push
sub
or
xor
jge
mov
jecxz
pop
jp
cmp
fiadd
rol
push
jle
and
push
or
jno
imul
pop
in
ds
stos
test
mov
movs
loopne
clc
jno
xor
or
cmp
neg
add
retf
ins
sbb
cmp
sub
pusha
popf
sbb
mov
sbb
lods
js
cmp
cmc
sub
bound
add
leave
scas
cmp
lods
jecxz
in
js
cmp
test
cmps
xchg
repnz
adc
mov
xor
call
inc
adc
test
mov
mov
enter
cs
push
inc
or
stos
mov
ja
sti
jle
(bad)
sbb
add
dec
es
mov
call
scas
stos
test
cmps
(bad)
ja
jmp
xor
sub
mov
mov
pop
(bad)
ss
into
sub
std
addr16
push
movs
inc
xlat
fwait
mov
cmp
bound
retf
jmp
push
(bad)
fnstsw
and
icebp
retf
mov
ss
scas
xlat
dec
(bad)
sbb
add
call
dec
std
aam
jb
pushf
dec
popa
shl
push
adc
(bad)
and
cmp
jo
jb
jecxz
sbb
loop
cmp
xchg
sti
inc
(bad)
loop
mov
leave
das
retf
loop
jns
sub
sub
cld
and
lock
adc
scas
sti
push
sub
and
xchg
push
pop
leave
jno
daa
fsub
jmp
cmp
repz
das
std
adc
push
cs
mov
cs
stos
inc
push
add
cld
jle
xor
mov
in
pop
mov
jnp
add
xor
cdq
mul
(bad)
mov
add
retf
ret
lock
lahf
cmc
in
data16
push
mov
loope
movs
mov
mov
xchg
mov
pop
sbb
mov
hlt
cdq
sbb
lea
add
ss
pop
cli
or
lods
pop
add
and
test
adc
jo
dec
test
popa
jo
or
add
jbe
sub
or
push
jmp
cmp
dec
pusha
stos
and
sbb
push
push
test
push
cmc
mov
and
into
jne
jmp
mov
and
aaa
fsubr
cdq
aad
dec
mov
pop
xor
cmp
jp
mov
inc
or
je
sbb
cs
or
push
je
jo
retf
push
push
adc
or
push
(bad)
fsub
dec
cmps
xchg
cli
stos
inc
aaa
enter
jae
push
or
lock
add
dec
add
pop
adc
mov
sti
push
sbb
xor
addr16
lahf
pop
imul
mov
mov
adc
or
mov
arpl
mov
movs
aam
test
stos
pop
pop
hlt
push
cs
mov
std
push
je
in
mov
test
push
dec
jb
stos
into
pop
mov
hlt
pop
dec
sbb
mov
push
mov
sbb
jmp
mov
or
xchg
dec
les
inc
gs
fcomp
fmul
stos
xor
jge
outs
lods
popa
dec
jae
enter
test
fldcw
cwde
add
sbb
jbe
aad
call
int3
loop
sub
or
dec
xor
lods
ss
cmp
inc
fnstcw
jae
and
push
test
xor
adc
mov
push
int
pop
jae
pop
add
out
loopne
loope
add
inc
and
xlat
mov
nop
popa
in
sub
jp
mov
call
scas
fnstcw
icebp
sub
jb
and
jl
cmps
xor
(bad)
mov
fwait
cs
adc
push
pop
dec
mov
push
jns
fs
push
push
cmp
and
out
leave
jge
adc
loope
dec
aas
inc
push
mov
iret
mov
pop
cmc
daa
inc
adc
jb
pop
data16
jbe
es
mov
shr
push
sysenter
adc
popf
cmc
xor
bound
push
dec
sahf
sti
mov
push
shr
out
je
push
(bad)
push
and
mov
fsub
lods
push
jecxz
mov
jge
adc
push
shr
and
sub
xor
aas
jnp
cld
mov
scas
js
mov
jl
cdq
and
sub
push
mov
popf
mov
adc
loope
aas
es
sbb
xor
and
sti
(bad)
and
out
out
or
retf
js
mov
add
pop
cld
jp
xlat
in
fwait
cmp
push
in
movs
push
jle
arpl
mov
fimul
add
(bad)
in
sbb
(bad)
retf
jmp
das
loopne
dec
(bad)
cmps
or
cmp
adc
jo
je
push
and
cdq
and
popa
add
adc
adc
(bad)
add
loope
jmp
rcr
sbb
or
rcr
mov
jl
out
xchg
jmp
mov
repnz
jmp
mov
or
ss
adc
stc
loope
jp
data16
retf
add
stc
dec
adc
pop
lods
xlat
(bad)
jbe
popa
cmp
pusha
and
push
sub
jmp
inc
loopne
jp
cld
xor
add
push
sub
pop
push
(bad)
push
cmp
leave
cdq
xchg
imul
sub
scas
into
in
das
inc
in
add
jo
sub
(bad)
ss
cmp
inc
adc
(bad)
pop
adc
inc
stos
pop
dec
mov
cmp
scas
imul
cmp
dec
jmp
xchg
mov
bound
mov
clc
push
es
xor
nop
lea
mov
mov
loopne
or
js
bnd
loope
inc
sub
sbb
(bad)
rcl
dec
fnstenv
dec
jl
out
add
ss
test
sbb
aam
shl
dec
sbb
test
cmc
ror
push
pushf
gs
mov
cmp
mov
lea
push
jne
jnp
rcr
add
addr16
(bad)
pop
pop
mov
pop
aaa
and
fbstp
jg
(bad)
pop
pop
dec
lea
pop
cdq
add
(bad)
xchg
jecxz
cmps
mov
inc
pusha
(bad)
jno
inc
xchg
retf
rol
jge
cmp
sub
hlt
push
mov
jb
sbb
xchg
sbb
outs
mov
sub
mov
rcr
cmps
adc
(bad)
lea
or
xor
cld
js
inc
and
mov
mov
(bad)
fistp
or
pop
ss
int
aam
popa
jne
imul
sub
retf
shl
sbb
ret
mov
js
shl
lock
xor
jmp
ds
dec
push
mov
pop
or
inc
rcr
cmp
fiadd
ins
push
out
ss
es
addr16
in
add
fidiv
test
lods
scas
fs
pop
dec
and
push
cmp
pop
std
scas
into
cmp
push
ficom
in
cmp
gs
adc
mov
and
cs
xadd
cmps
fnstenv
inc
cli
sti
pop
pop
dec
inc
idiv
xchg
ss
retf
adc
in
pop
or
ret
pop
loop
add
in
imul
js
lods
into
mov
mov
pop
sub
les
mov
inc
xlat
adc
sub
adc
mov
push
pop
cmp
jmp
lods
or
out
add
jo
mov
fstp
jns
mov
inc
ja
ss
stos
sub
fwait
mov
jae
pop
sbb
int3
sub
in
iret
dec
xchg
ret
or
fwait
cmp
imul
lahf
stc
test
sub
lods
in
pop
add
out
ficomp
ss
(bad)
sbb
pop
call
cmp
out
popf
add
out
adc
sahf
mov
pop
mov
imul
popa
pop
pop
xchg
ins
add
imul
jne
pop
mov
in
mov
xor
jo
fabs
or
into
hlt
mov
imul
xor
xchg
pop
retf
inc
stc
jg
xchg
pusha
mov
(bad)
cmp
pushf
mov
scas
dec
pop
push
mov
scas
xor
mov
es
pusha
push
push
loop
cmps
sbb
cmp
ror
inc
add
hlt
and
ret
mov
cdq
xchg
jb
and
mov
cmps
int
and
stc
div
xchg
push
(bad)
imul
or
dec
ins
inc
cmc
and
add
stos
sub
mov
out
inc
xchg
retf
mov
imul
ds
inc
xchg
adc
add
jne
xor
cmp
push
aaa
jnp
pusha
daa
jo
out
inc
aam
sub
pop
test
mov
jbe
pop
mov
jle
dec
mov
mov
jmp
cdq
mov
or
dec
xchg
(bad)
popf
ins
pop
cli
mov
and
repz
cdq
imul
dec
jns
cmps
xchg
mov
jae
mov
retf
jmp
mov
fwait
or
iret
xchg
push
in
scas
jo
pop
aaa
jg
ds
inc
int
(bad)
dec
add
ficom
sbb
nop
rcr
or
lods
add
clc
sbb
cs
pop
fimul
cmp
call
adc
sbb
aas
(bad)
loopne
(bad)
es
pop
jbe
inc
xchg
push
adc
inc
jbe
xor
mov
test
jmp
les
out
lods
iret
fisub
push
ja
xor
fbstp
mov
pusha
idiv
out
popf
adc
mov
pop
inc
outs
pmovmskb
mov
dec
push
retf
loopne
test
rcl
mov
push
mov
xor
push
and
cmp
fwait
push
std
aas
push
push
(bad)
mov
inc
pop
xchg
(bad)
aad
test
pop
mov
shl
pop
aaa
cli
nop
cwde
loope
sub
aad
pop
dec
inc
sub
in
xor
mov
xchg
ins
in
(bad)
jl
int3
repz
mov
jmp
imul
lods
mov
pop
mov
mov
jbe
cli
sub
cmp
dec
into
mov
jnp
div
or
fadd
inc
fild
xor
add
mov
pop
xor
cld
xor
mov
retf
sub
test
adc
loope
mov
ins
dec
out
fwait
pop
out
xchg
into
aas
pusha
test
dec
ret
(bad)
ja
shl
fisubr
add
and
push
inc
int
xchg
adc
repz
cmp
mov
call
xchg
in
pusha
pop
fmul
shl
test
push
sbb
js
in
adc
inc
and
push
mov
cmp
fmul
cmp
mov
push
iret
xor
jo
sub
mov
mov
xchg
sti
stos
xchg
jecxz
rcl
xchg
das
adc
or
pop
jl
add
or
mov
popf
and
imul
or
jmp
mov
loopne
icebp
or
mov
xor
mov
jle
movs
mov
dec
in
(bad)
mov
loope
inc
inc
into
add
leave
jmp
jge
sahf
mov
bound
and
ja
in
aas
inc
dec
fldlg2
imul
inc
fiadd
sub
dec
sti
std
js
pop
inc
mov
jne
xchg
inc
and
test
lea
movs
in
xor
test
sub
mov
mov
cwde
push
sbb
outs
mov
dec
pop
dec
mul
jmp
daa
cwde
mov
test
movs
aad
mov
(bad)
push
mov
test
aam
pop
mov
addr16
mov
pop
sub
stos
and
jbe
(bad)
dec
adc
loop
stos
cdq
or
adc
das
and
jnp
aaa
mov
mov
mov
sub
aaa
arpl
(bad)
daa
sub
(bad)
mov
ret
jp
xor
inc
jbe
stc
hlt
sbb
add
mov
popa
shl
(bad)
sti
fwait
pushf
and
pop
add
adc
lea
fs
test
stos
aad
hlt
aad
push
dec
mov
data16
or
fcomp
movs
aad
pop
and
inc
push
push
push
inc
mov
out
scas
stos
imul
cmc
sub
xchg
mov
fisttp
push
in
or
scas
mov
sub
pop
inc
xchg
(bad)
retf
ret
mov
sti
fsubp
or
jl
(bad)
jmp
std
sub
adc
addr16
push
dec
jle
push
or
lods
les
mov
mov
mov
in
ins
test
lods
outs
neg
and
lods
and
push
dec
sub
out
mov
nop
pop
push
fdiv
clc
adc
lahf
inc
adc
shr
cmp
sbb
in
lods
mov
in
xchg
cmc
cmp
js
cmp
(bad)
int3
loopne
movs
hlt
adc
retf
es
mov
and
test
jne
jmp
add
or
aaa
aas
push
arpl
xor
and
xchg
xor
pop
call
popa
and
lds
xchg
mov
mov
lds
loopne
cmp
add
ret
and
movs
pop
add
jnp
mov
jo
lods
push
sbb
retf
mov
xor
gs
inc
xchg
cdq
imul
mov
push
mov
leave
sbb
ret
adc
jnp
dec
mov
adc
or
mov
mov
cmp
out
jg
xor
lods
cmc
jl
sub
sub
mov
div
cld
fisttp
and
ficom
fnstenv
dec
ins
fiadd
icebp
addr16
pop
adc
cmps
add
fild
test
jp
xchg
mov
ja
idiv
cmp
add
lods
mov
cs
push
daa
jbe
icebp
mov
outs
jmp
or
jmp
sbb
cmc
xchg
push
mov
xor
inc
daa
and
cmp
and
imul
ret
sub
xor
dec
(bad)
into
(bad)
aad
in
int
xor
test
outs
ror
lods
out
push
fwait
outs
mov
minps
(bad)
jg
add
call
push
in
jg
cwde
push
push
pop
xlat
out
push
scas
pop
push
jecxz
sub
jae
jg
clc
fwait
(bad)
xchg
mov
clc
or
adc
pushf
js
and
popa
jle
imul
mov
jmp
sar
aas
mov
xchg
dec
popa
push
stos
inc
test
data16
test
dec
or
dec
mov
push
xor
and
das
loop
jmp
inc
loope
push
or
repnz
popa
xadd
fwait
push
stos
add
jnp
lds
or
inc
(bad)
cwde
mov
lock
lea
pop
xchg
mov
or
and
mov
cmp
(bad)
pop
ins
scas
in
ret
inc
bound
add
mov
leave
add
imul
bound
inc
xchg
mov
push
xor
jp
les
pop
test
dec
mov
and
mov
dec
jmp
pushf
icebp
fsub
xchg
push
stos
loope
aad
xchg
pop
popf
xchg
popa
or
test
retf
ss
adc
inc
push
shr
or
sub
je
mov
cs
rcl
shr
cs
sub
test
das
jge
jge
in
or
adc
pop
add
mov
repnz
lahf
and
xor
fsubp
or
test
popf
(bad)
int
add
adc
shl
dec
or
into
and
push
mov
mov
pop
sub
xchg
stos
xchg
inc
cmp
lods
jp
mov
sbb
pcmpgtw
lods
ja
call
sti
cmc
jae
int
mov
and
xor
neg
or
mov
add
stos
repnz
pushf
push
sar
dec
iret
icebp
ja
mov
dec
arpl
call
or
jne
bound
mov
aas
call
loop
shr
scas
ss
push
xchg
inc
rcr
jg
and
sti
push
jb
pop
cmp
push
sahf
int3
inc
sbb
pop
imul
xor
adc
add
adc
push
and
jnp
in
or
je
mov
xchg
pop
dec
lea
push
push
out
fdivr
mov
mov
xor
hlt
jmp
mov
inc
pusha
fucomip
addr16
xor
inc
addr16
dec
xlat
cwde
retf
ja
fmul
and
sar
out
sbb
test
pop
sti
arpl
xor
cmp
xchg
cld
push
pop
es
out
aad
cmps
out
out
jne
outs
hlt
xchg
(bad)
pop
dec
adc
scas
cmp
xlat
dec
mov
lahf
call
lea
hlt
adc
add
in
(bad)
inc
lea
into
sub
pop
pop
push
xchg
nop
pop
jmp
in
int3
cmp
call
dec
lods
iret
in
(bad)
mov
dec
imul
inc
pushf
adc
pusha
push
(bad)
(bad)
rcl
mov
les
cs
jl
or
nop
add
fcmovnb
dec
out
iret
shl
push
leave
mov
hlt
cs
ja
lea
les
dec
dec
jge
das
lods
out
data16
sbb
mov
jp
jns
movs
adc
adc
sub
push
mul
sahf
mov
aaa
push
mov
xlat
jmp
popa
inc
lods
pop
popf
push
push
inc
std
fnstenv
pop
ds
inc
inc
pusha
jecxz
sar
ficomp
push
jb
loop
and
std
push
sub
xchg
push
mov
daa
in
pop
jp
push
add
das
cld
nop
dec
lods
retf
xor
(bad)
cmp
xchg
out
cs
lods
jo
(bad)
and
(bad)
and
and
in
mov
cdq
int
mov
cmc
jo
sbb
es
stos
inc
inc
jg
push
mov
neg
test
push
xchg
(bad)
and
xchg
jg
xchg
sbb
aam
mov
dec
jle
xor
xor
cmp
mov
dec
dec
rcl
cmp
cli
cmp
ins
scas
mov
jmp
test
inc
aad
in
sub
mov
retf
aaa
lds
jne
jmp
in
mov
or
mov
inc
jp
xchg
xchg
adc
mov
out
pop
mov
pop
jno
ins
xchg
xchg
xlat
mov
mov
int3
cmp
addr16
fwait
test
mov
fdivrp
arpl
nop
ins
sbb
leave
and
rcr
mul
inc
dec
imul
cmps
jl
push
fcom
push
das
hlt
pop
push
(bad)
in
push
gs
(bad)
sar
pop
aaa
imul
xchg
xchg
xchg
test
cmps
(bad)
pop
add
(bad)
das
and
or
es
sub
adc
js
sbb
fwait
nop
movlps
fdiv
mov
sahf
(bad)
pop
ret
cmp
mov
ja
pusha
sar
outs
dec
xlat
jge
hlt
leave
or
ja
dec
ss
(bad)
movs
pop
pop
test
cmp
sub
iret
mov
inc
jns
repnz
fild
xchg
stos
out
lds
div
fsub
cmp
outs
dec
mov
dec
cmc
dec
mov
push
pop
pop
mov
jo
add
fstp
popa
xchg
sahf
fstp
hlt
cdq
rol
out
push
adc
push
mov
add
xchg
ins
fcmove
retf
jb
icebp
shl
cmp
rcl
mov
adc
test
push
xor
rcl
fistp
fild
in
jp
(bad)
sbb
jmp
fiadd
call
cmp
inc
(bad)
test
add
mov
mov
push
pushf
fwait
mov
fs
mov
out
xor
inc
pushf
inc
cmp
push
pop
fsub
adc
adc
add
push
aad
pop
cmp
(bad)
xchg
movs
xor
call
adc
mov
or
fmul
sub
jbe
push
cs
mov
pop
adc
add
jl
test
pop
(bad)
add
mov
cld
sub
psubd
xchg
aam
into
xchg
adc
push
mov
lfs
inc
js
int
cmps
ds
add
ins
movs
hlt
pop
lock
jmp
and
xchg
dec
arpl
into
inc
add
pop
shl
lods
sub
ds
arpl
daa
arpl
vcvtps2pd
ins
mov
pop
or
xchg
push
jecxz
sbb
jns
shl
rol
int3
ss
cmp
aaa
jl
je
dec
fsub
lods
lahf
inc
scas
cdq
mov
or
imul
mov
sbb
mov
in
jmp
cmp
inc
sbb
ss
jns
sbb
push
in
xchg
arpl
mov
pextrw
mov
and
je
add
das
out
imul
ins
cli
xor
mov
inc
cmp
pop
add
(bad)
out
call
aad
or
pop
inc
mov
out
repnz
mov
mov
add
xor
xchg
(bad)
loopne
dec
ds
xor
jb
pop
push
sti
and
mov
mov
div
daa
js
fild
lock
pop
fstp
push
test
or
fidivr
add
or
jno
lods
mov
inc
call
jns
test
cmp
mov
inc
sbb
pusha
dec
pop
jnp
sbb
cli
adc
xchg
dec
aad
jno
into
int3
jmp
xor
fcomp
cwde
sub
(bad)
leave
stc
retf
ins
push
inc
jo
xchg
push
daa
push
xor
and
push
adc
data16
adc
fnstcw
lods
in
pushf
test
mov
or
or
aaa
xchg
in
inc
int
pusha
mov
mov
fldenv
mov
jne
add
sti
push
mov
cwde
sub
iret
cmp
adc
lods
mov
call
dec
int
pop
repnz
loope
clc
arpl
call
push
mov
dec
shl
cld
(bad)
sub
push
push
mov
sar
xor
add
dec
std
xor
or
rcr
vpcmpeqb
jno
jnp
std
sti
sbb
sub
pop
inc
mov
bound
fld
cdq
stc
hlt
pop
sbb
neg
test
pop
call
add
mov
(bad)
call
xchg
in
xchg
(bad)
fcmovne
sbb
mov
mov
push
mov
add
cmp
lds
scas
fbstp
jl
vpaddw
xchg
ins
je
cld
int3
movs
and
ins
test
pop
(bad)
ss
push
(bad)
inc
jns
js
adc
gs
sbb
jbe
ret
jge
mov
call
lahf
xchg
mov
pop
(bad)
mov
outs
cmp
cmp
int
cmp
sub
arpl
dec
pop
int3
pop
retf
ret
add
movs
repnz
add
movs
cmc
cmp
iret
and
sahf
cli
mov
or
push
call
sbb
loope
pop
shr
mov
cs
(bad)
jnp
cmp
test
outs
xor
xchg
jmp
je
dec
mov
repnz
cmps
pop
xchg
sbb
jmp
jmp
push
das
rol
sbb
xor
jo
clc
in
sbb
ret
fidivr
pop
mov
jo
ret
and
jmp
mov
jae
push
ds
int
mov
ds
sahf
fs
mov
or
xchg
in
mov
jo
sahf
ror
ret
push
aam
lods
push
movs
add
inc
dec
xchg
and
ds
jmp
je
aaa
icebp
fstp
push
sbb
push
fstp
(bad)
jmp
adc
mov
mov
test
int3
fldenv
mov
inc
stos
mov
fs
dec
sub
mov
repnz
sbb
jge
inc
jle
imul
sbb
jecxz
jb
xor
adc
stos
mov
xor
sub
adc
ds
jnp
nop
jns
leave
jecxz
in
in
or
repnz
cs
mov
lods
pop
bndldx
xlat
(bad)
xchg
sbb
mov
popf
out
out
push
aad
cli
adc
clc
arpl
mov
add
(bad)
jae
cld
bound
fcom
mov
add
pop
loopne
bound
nop
fs
mov
xchg
xor
rol
inc
jle
lock
call
cmp
push
push
dec
fwait
pop
hlt
xor
adc
js
or
add
cmp
sub
mov
mov
popa
fwait
mov
js
mov
stos
ret
mov
iret
or
adc
jecxz
movs
mov
ficomp
mov
shl
les
xor
sbb
mov
sub
xlat
jmp
(bad)
push
cmp
or
mov
es
imul
cmc
jle
aas
inc
das
jmp
pop
ds
shr
daa
mov
mov
adc
repnz
arpl
(bad)
call
addr16
aaa
jl
xor
mov
cmps
inc
enter
dec
in
arpl
int3
movs
sahf
int3
mov
aam
or
ret
dec
cmp
nop
shl
rcl
add
(bad)
xchg
fist
xchg
repz
dec
stos
dec
js
fwait
out
pop
(bad)
mov
ss
pop
push
popf
adc
xor
sub
add
adc
fisttp
sbb
xchg
fistp
leave
pop
aas
mov
sub
outs
inc
stos
mov
inc
outs
hlt
mov
jg
inc
mov
xchg
aad
mov
xchg
test
add
and
aad
jno
cwde
mov
jb
and
out
xchg
adc
cmp
and
jmp
hlt
inc
div
scas
cmp
repnz
xor
aam
imul
lock
into
jns
and
and
sub
int
sbb
mov
in
or
outs
pop
in
sub
sub
sbb
jge
stos
(bad)
push
pop
movs
mov
jl
clc
mov
sti
or
fidiv
mov
ins
out
dec
mov
pop
xor
mov
and
xchg
lods
in
mov
or
jmp
js
mov
loopne
xchg
in
or
addr16
cli
rcl
fwait
repnz
or
hlt
pop
push
dec
or
xor
xchg
int
ja
jae
outs
sbb
bswap
jge
jmp
xor
in
mov
xor
or
iret
add
pushf
sub
cdq
mov
jnp
or
in
inc
cbw
test
adc
icebp
sbb
jg
mov
cmp
dec
lahf
mov
jecxz
pushf
ret
jno
adc
lahf
add
in
addr16
sar
lods
xchg
sbb
cdq
cmp
inc
cld
in
sub
into
stos
push
in
in
sub
pusha
jb
mov
div
cwde
adc
repz
out
mov
push
(bad)
out
mov
scas
fistp
add
call
mov
lds
out
mov
mov
popa
(bad)
out
test
shl
outs
push
es
mov
movs
cmps
shl
mov
cmc
lods
test
push
and
jne
retf
and
mov
fadd
sti
mov
xchg
mov
neg
js
dec
cmp
push
cmps
mov
mov
dec
popa
push
or
or
jmp
inc
push
in
gs
aad
out
xor
mov
rol
add
ja
mov
loope
dec
cmp
add
ss
lods
mov
fcomp
enter
popf
movs
push
cmp
push
inc
test
inc
fwait
out
dec
sbb
ss
jns
out
jge
sub
fbld
inc
imul
cs
pushw
xor
popa
loop
es
pushf
(bad)
enter
push
dec
je
dec
or
cld
push
shl
push
retf
test
dec
mov
aaa
xchg
cmp
mov
scas
add
mov
sub
movs
shl
jns
pop
inc
push
scas
cmp
(bad)
pop
push
iret
add
push
mov
addr16
xchg
rcr
fadd
cld
cwde
out
adc
pop
cmps
push
push
cmc
push
sti
pop
mov
outs
mov
pusha
cmp
push
mov
imul
xor
enter
ins
mov
sar
sbb
es
xchg
add
into
sub
popa
jb
push
mov
out
(bad)
mov
add
lock
xor
dec
jecxz
addr16
jno
js
sti
push
mov
cmp
or
icebp
sub
jl
or
stos
ror
pop
mov
mov
sub
fstp
das
mov
xor
pop
fidiv
mov
adc
in
mov
mov
in
add
add
pop
add
mov
adc
sub
in
out
add
cmps
add
and
or
sub
mov
jae
fwait
not
add
sbb
gs
not
sbb
nop
inc
jge
out
add
js
jo
ret
jmp
inc
sub
clc
pop
jmp
xchg
adc
mov
inc
push
push
lods
inc
jp
sbb
sbb
aam
sar
test
mov
lea
sbb
xor
push
cmp
push
mov
xor
and
sub
out
das
dec
sbb
out
fs
mov
mov
xor
sti
js
add
cld
dec
sbb
xchg
xor
jne
aas
lods
leave
add
out
sbb
push
dec
les
call
cmps
stos
sbb
jae
aaa
mov
cmp
adc
scas
pop
(bad)
mov
pop
pop
or
std
inc
pop
in
das
mov
jne
mov
aas
imul
push
out
ficomp
cmps
xchg
sbb
and
xchg
xor
adc
mul
clc
xchg
mov
arpl
and
mov
or
ss
shl
dec
xchg
out
xchg
xchg
cdq
push
jb
sbb
jnp
inc
or
mov
cdq
ficomp
iret
mov
cs
jo
pop
aaa
push
and
sbb
dec
stos
stos
or
or
dec
cmc
jne
nop
pop
mov
out
or
into
cmp
xchg
imul
dec
pop
dec
mov
jl
push
dec
cmps
cdq
adc
fbld
mov
lock
loope
or
mov
(bad)
push
sbb
fs
imul
leave
add
je
xchg
outs
mov
leave
cmps
adc
jp
inc
sbb
sbb
pop
test
pop
inc
xlat
inc
dec
cmc
pop
mov
ins
rol
idiv
and
adc
inc
pusha
daa
mov
(bad)
inc
daa
cmp
repz
ja
aaa
rcr
sahf
mov
mov
sbb
je
mov
in
test
adc
mov
and
xor
aas
mov
cmps
add
inc
mov
add
cmp
aas
mov
loope
retf
and
(bad)
mov
add
jmp
cmp
cmps
push
and
sub
enter
adc
sub
jmp
sub
call
or
pop
retf
jge
test
dec
jnp
add
pop
xor
add
rol
push
push
add
test
jbe
mov
push
mov
dec
shl
xchg
pushf
pushf
outs
xchg
add
pop
movs
ret
call
adc
fcomp
bound
ret
mov
xchg
leave
outs
xchg
(bad)
(bad)
cwde
(bad)
mov
sbb
div
push
call
inc
int3
add
out
inc
ret
aad
ja
(bad)
mov
mov
or
rol
push
fprem
aas
test
ret
mov
sti
aam
bound
stos
sbb
rcl
repnz
es
icebp
xor
jnp
fdivr
call
out
test
jmp
xor
test
mov
movs
push
test
cmp
mov
push
adc
ret
stc
iret
loopne
jmp
mov
test
ja
aam
mov
test
jno
pop
sbb
add
mov
xchg
retf
popf
test
iret
(bad)
xchg
sub
into
push
(bad)
jo
push
mov
int3
pop
push
push
mov
js
mov
lods
sub
div
ror
cmp
xor
pop
(bad)
shl
mov
push
jne
sbb
pushf
scas
dec
cld
movs
into
mov
scas
loope
or
scas
aaa
jb
mov
rcr
popa
jp
cmp
push
mov
pop
rcl
daa
sbb
mov
aaa
cmp
mov
cmp
cmp
pop
(bad)
(bad)
mov
mov
lods
xchg
jp
(bad)
fnstsw
dec
and
mov
xchg
sbb
push
outs
dec
mov
sbb
enter
mov
sbb
xlat
jbe
mov
ss
(bad)
(bad)
clc
sbb
push
ror
ds
stos
mov
clc
pop
jnp
cmp
or
aaa
dec
mov
inc
mov
mov
repnz
inc
es
outs
cwde
add
sbb
mov
push
loope
movs
std
cmp
sahf
cli
daa
inc
js
jo
dec
push
mov
sbb
push
pop
adc
add
outs
fnsave
bound
fimul
dec
dec
fsub
dec
jo
mov
arpl
movs
fs
ins
push
push
mov
je
je
and
retf
sbb
movs
leave
dec
xor
and
mov
push
in
sub
out
xchg
imul
movs
cs
es
ror
push
cmp
xchg
xchg
je
push
aas
sub
xor
push
fdivr
mov
jl
stos
inc
pop
loopne
sub
mov
int
mov
int3
cmc
jle
cmps
add
jg
ins
mov
inc
ror
pop
clc
mov
ins
jmp
xchg
popa
and
leave
in
and
pop
sar
jbe
dec
rcr
mov
shl
fisttp
imul
adc
xchg
aaa
mov
popa
pop
xor
cmp
rcr
mov
push
jmp
fiadd
mov
mov
sub
sbb
pusha
add
ds
out
pop
mov
cmps
cmp
inc
lahf
test
dec
mov
int3
pop
lea
mov
mov
int
gs
fwait
js
sahf
int
bound
sub
jp
mov
pop
cmp
addr16
inc
sysexit
cmps
jbe
in
adc
mov
(bad)
dec
je
mov
fsubr
fmul
loope
inc
sar
xlat
adc
pusha
cmp
xchg
iret
js
jnp
pop
sbb
lock
cdq
lahf
les
sub
pop
xor
sbb
test
or
fcom
loopne
dec
dec
in
xchg
and
ins
fistp
test
xchg
dec
inc
(bad)
stos
adc
scas
hlt
daa
retf
mov
and
iret
js
push
xor
push
mov
xchg
push
in
cs
fistp
data16
int
cmp
push
call
adc
outs
mov
fimul
dec
mov
cmp
popf
push
inc
std
mov
dec
jmp
sub
ins
(bad)
cld
ins
cmps
imul
popa
stc
retf
sub
mov
mov
sub
pop
(bad)
dec
ins
je
jo
xchg
jl
and
and
dec
sar
push
ds
loopne
out
xchg
push
mov
loope
cmp
and
inc
jb
cmp
mov
fwait
shr
ror
int3
loopne
int
jmp
gs
mov
frstor
xchg
jge
jns
hlt
imul
dec
jo
arpl
add
loope
ror
ins
mov
mov
ret
dec
xchg
xchg
xor
rcl
arpl
or
test
push
fidiv
(bad)
xlat
sar
push
cmp
test
sbb
mov
mov
jl
add
setbe
adc
or
xchg
pushf
movs
divps
jge
cdq
outs
ret
or
test
pusha
add
xchg
push
in
sub
xor
sbb
fimul
test
or
sti
dec
retf
les
std
out
sbb
xor
add
sub
xchg
repz
pop
sbb
xor
rcl
cvttps2pi
repz
mov
jb
mov
sahf
in
xor
dec
sbb
outs
pop
xchg
mov
push
dec
adc
test
repnz
sub
dec
mov
or
sub
es
xchg
push
push
loopne
inc
les
jl
ficom
push
xchg
fist
fstp
dec
cmp
sub
push
test
loopne
pop
pushf
add
jmp
cmp
and
mov
or
jl
std
call
ss
fsub
inc
xor
and
icebp
popa
pop
popf
xor
clc
adc
cmovne
sub
jae
ins
lds
lds
inc
call
fsub
inc
pop
les
fist
sub
nop
pop
and
sbb
xchg
add
add
push
pop
cmp
(bad)
mov
mov
jge
(bad)
leave
lock
and
iret
pusha
cdq
fs
push
scas
inc
into
imul
in
sub
std
dec
mov
sub
aad
clc
pop
cmps
or
outs
sub
and
mov
jmp
clc
rol
mov
push
in
mov
clc
mov
xor
pop
jno
cmc
out
imul
inc
or
pop
out
test
pushf
jae
inc
xor
adc
test
dec
ficom
call
scas
mov
xchg
retf
stc
mov
mov
ja
loop
mov
cvtdq2ps
xchg
jmp
in
push
(bad)
or
sub
call
popa
lock
adc
add
call
dec
nop
mov
dec
jns
mov
out
movs
xchg
jb
test
ret
sub
nop
repz
cmps
mov
pop
setnp
ins
(bad)
mov
aaa
cmp
push
pusha
js
jg
test
jb
mov
xor
scas
adc
jne
inc
cmp
cmps
(bad)
adc
mov
mov
int
bnd
es
mov
pusha
in
jnp
test
aas
jmp
movs
dec
mov
lahf
pop
cmp
cwde
das
repz
jmp
fimul
cmps
xchg
imul
inc
push
mov
out
lock
aas
test
sbb
cmps
jle
pop
xchg
sti
or
and
adc
xchg
mov
test
dec
or
jb
gs
iret
js
mov
int3
and
ss
ret
mov
sar
hlt
cmp
add
push
pop
inc
add
jb
mov
nop
bound
adc
xchg
aas
jnp
packuswb
test
je
call
aas
ss
pop
fs
pop
(bad)
movs
mov
lock
(bad)
or
mov
mov
push
or
mov
mov
dec
xor
shr
jle
jo
xchg
pop
fist
enter
cmp
out
adc
imul
lock
sub
(bad)
mov
pusha
ins
mov
stos
push
xchg
inc
mov
fidiv
push
add
in
repz
rol
scas
mov
call
in
scas
ficomp
jb
and
call
cmp
scas
dec
or
jge
je
add
(bad)
es
dec
ja
dec
xchg
ins
cli
sub
inc
pop
jg
xor
and
loopne
dec
xchg
jno
adc
out
icebp
ins
pop
test
repnz
bnd
mov
scas
retf
out
xor
adc
mov
cmp
add
add
and
xor
retf
dec
gs
movs
cmp
push
fist
lods
out
ins
inc
ret
adc
fld
pop
pop
fistp
mov
jne
call
push
arpl
ds
cdq
push
stc
out
es
mov
repz
or
ret
nop
mov
and
push
jl
jne
jmp
movs
pop
dec
call
imul
js
push
push
dec
inc
sbb
(bad)
sbb
imul
mov
sti
fisub
sub
arpl
ss
stos
or
fistp
cmp
sub
adc
(bad)
inc
loopne
xchg
call
cs
(bad)
popf
ins
ficomp
repnz
ja
mov
mov
retf
cmova
dec
leave
neg
sahf
push
adc
sbb
xor
iret
enter
test
mov
mov
jne
cli
enter
or
add
fstp
hlt
call
ins
inc
and
pop
test
mov
jp
(bad)
cmp
xor
mov
xchg
pop
(bad)
dec
sub
(bad)
std
test
adc
xchg
test
das
add
mov
cld
loopne
cmp
push
push
mov
shl
xor
jmp
mov
mov
not
lock
mov
popa
pusha
mov
(bad)
jmp
test
cmp
sar
cmp
scas
dec
push
fst
sahf
add
sbb
sub
test
cmps
jns
push
adc
sti
lods
mov
scas
mov
adc
ja
movs
pusha
jo
lahf
push
jecxz
je
dec
(bad)
rcl
mov
frstor
dec
mov
sahf
les
sbb
push
mov
ss
int3
sbb
sub
dec
jl
dec
push
adc
mov
sbb
mov
(bad)
ds
push
adc
sbb
repz
iret
inc
adc
in
imul
jae
and
jo
push
shr
in
mov
cwde
push
jne
mov
sbb
jnp
add
pop
push
inc
cmp
or
mov
addr16
das
fst
sub
inc
jae
sub
or
ins
jmp
call
dec
pop
xlat
dec
loope
(bad)
pop
mov
popa
jae
sbb
aaa
sub
inc
mov
movs
jp
push
test
pop
mov
push
mov
scas
sub
pop
adc
ja
cld
adc
test
mov
adc
cmp
into
xor
add
push
xchg
add
pop
mul
dec
xor
cs
shl
xchg
not
dec
push
cmp
lock
retf
scas
jbe
pop
sbb
je
shl
mov
jg
add
in
jbe
cmp
ds
jae
stos
sub
ja
or
and
push
test
cmps
pop
outs
ins
sti
mov
xchg
pop
or
out
lds
mov
popf
sub
adc
cmp
stc
mov
mov
adc
sahf
mov
mov
hlt
lea
cmp
dec
push
mov
mov
and
ja
imul
dec
mov
mov
adc
lea
xor
cmp
sbb
repz
add
add
jge
inc
or
sub
and
call
test
(bad)
mov
shr
shr
pusha
jge
push
mov
movs
cmp
out
jo
dec
shl
cwde
lods
xchg
dec
or
pop
test
bound
mov
mov
loopne
mov
cmp
loop
jae
cmovs
mov
cmc
pop
add
scas
xlat
mov
mov
aas
jno
xlat
ror
sub
sbb
inc
mov
push
cmc
xchg
clc
imul
add
push
jnp
neg
cmps
sbb
mov
bound
mov
fmul
push
or
mov
fcom
outs
daa
(bad)
cmp
mov
int
add
cmp
call
jl
sti
retf
ret
xchg
fdivr
mov
jnp
jecxz
iret
imul
mov
outs
ds
pop
xchg
or
pop
add
pop
cmp
pushf
pop
scas
cs
cmp
test
jmp
lods
dec
repz
pop
cmp
xor
or
in
and
(bad)
sbb
push
jo
retf
imul
sbb
mov
shl
mov
jmp
jnp
jno
jns
retf
shl
mov
test
jecxz
cmc
cmp
jmp
stos
mov
xchg
mov
jle
cwde
jmp
ret
add
cmp
loopne
ins
sbb
inc
pop
inc
add
cmc
mov
js
cmps
sbb
mov
aam
and
sbb
fdivr
nop
push
imul
xchg
mov
ror
out
mov
lds
push
xor
sub
imul
xchg
dec
mov
mov
pusha
cmp
out
arpl
cmp
or
jmp
jo
mov
loopne
and
and
or
sub
jnp
mov
xor
xor
das
arpl
(bad)
ja
ins
jle
push
dec
pop
in
pop
out
or
xchg
test
loopne
(bad)
xchg
scas
push
pusha
stos
add
or
scas
popf
jmp
shl
mov
stos
xor
dec
sub
mov
jmp
pop
test
jle
aaa
rol
imul
and
fnsetpm(287
jmp
shl
xchg
dec
adc
daa
movs
neg
loope
inc
test
pusha
inc
pop
call
iret
cmp
fadd
mov
in
fist
rol
mov
jge
xor
repnz
dec
mov
dec
pusha
xor
stos
sub
jne
imul
std
cmp
pop
adc
lods
fdivp
mov
mov
leave
ss
cmp
out
hlt
mov
add
pushf
ftst
sub
adc
(bad)
push
push
push
(bad)
adc
pop
retf
inc
pop
jmp
scas
call
rcr
lahf
jnp
or
sbb
shl
sub
int
xchg
das
aaa
dec
pop
xchg
and
pop
icebp
mov
lock
push
cld
add
cdq
cs
ficom
arpl
mov
or
pop
shr
xlat
mov
jecxz
call
aad
pop
jae
stos
and
hlt
repz
cmp
mov
repz
mov
inc
ins
sahf
imul
add
popa
lahf
call
and
and
loop
push
and
pop
mov
daa
jnp
clc
sbb
(bad)
cdq
inc
adc
adc
xchg
push
lods
cmp
int3
mov
jecxz
out
cmp
in
push
adc
xor
xor
pop
push
xchg
int
xchg
out
repz
popa
fsubr
pop
rcl
and
sbb
inc
or
mov
pop
fsub
mov
push
mov
mov
jmp
test
push
xchg
ds
(bad)
xor
fdivr
adc
push
test
dec
inc
mov
mov
xchg
xchg
fnstsw
dec
(bad)
mov
je
sbb
dec
sbb
add
mov
mov
push
cli
mov
xchg
fidiv
push
mov
iret
inc
xor
movs
ins
lods
es
shr
retf
jmp
add
mov
out
adc
ins
pop
add
cmp
loope
dec
(bad)
jb
mov
xlat
push
xchg
inc
push
hlt
in
or
shl
jmp
fldcw
xchg
push
neg
jne
repz
cmp
mov
fisub
and
push
hlt
ins
lods
imul
cmp
jnp
mov
not
jbe
nop
call
add
mov
and
out
int
and
mov
add
sbb
mov
stc
push
mov
imul
mov
mov
mov
mov
add
shr
test
int
out
gs
mov
push
mov
popf
aad
adc
int
shr
in
(bad)
xchg
cs
sub
adc
push
fwait
repz
push
mov
adc
ds
ins
aaa
push
scas
imul
(bad)
arpl
(bad)
arpl
ins
cld
adc
cmps
jne
push
ror
mov
jle
movs
and
clc
shl
push
sub
in
inc
cmps
retf
or
mov
nop
jmp
or
ins
pop
ror
jnp
std
cmp
je
fstp
xor
fimul
xor
outs
out
adc
popf
adc
ret
dec
add
mov
std
(bad)
fadd
dec
(bad)
xchg
mov
imul
xor
or
or
stos
cdq
int3
mov
ins
jp
pop
mov
out
sub
test
ss
mov
dec
sti
inc
mov
shl
shr
push
mov
push
pop
add
(bad)
scas
push
lds
xor
retf
into
test
xlat
and
pushf
imul
cmps
stos
stc
mov
sub
lods
clc
out
inc
jge
xchg
pop
mov
fs
and
cmc
movs
lfs
push
scas
call
push
cmp
ret
shr
sar
add
stos
leave
mov
lds
fadd
push
(bad)
and
lods
fidivr
adc
xchg
jne
(bad)
(bad)
jbe
rol
push
pop
outs
int
jne
loopne
sub
fwait
test
dec
pop
ja
mov
jno
test
ds
cmps
fldpi
sahf
inc
xchg
pop
out
inc
stos
test
and
repnz
retf
fdivr
add
mul
movs
push
jmp
pop
add
ret
lock
daa
inc
cmp
pop
xchg
dec
jecxz
sbb
mov
out
fild
sbb
and
jne
test
les
mov
je
(bad)
xor
cdq
pop
pop
mov
bound
call
sbb
cmps
adc
loop
(bad)
outs
add
out
dec
in
addr16
sub
jbe
aas
in
data16
pop
adc
pop
pop
xchg
pop
imul
(bad)
lods
ins
or
sbb
mov
ficomp
retf
pop
xor
in
outs
push
inc
popa
inc
or
loopne
or
stos
in
mov
rcr
ror
jb
jns
mov
pusha
push
mov
and
cmp
fcmovu
loop
into
xchg
sbb
mov
jbe
mov
inc
pop
cdq
cld
pop
enter
jne
pop
xchg
popf
cmp
pop
xor
(bad)
jo
xlat
dec
shl
cdq
out
and
imul
stos
(bad)
mov
pop
dec
jae
popa
retf
stc
push
sub
lahf
addr16
into
xchg
cmp
push
ja
lods
dec
ss
ins
enter
xchg
and
inc
dec
dec
mov
inc
mov
cs
push
repz
rol
inc
retf
jmp
cmp
dec
fs
mov
nop
add
in
jmp
ficomp
scas
ret
cdq
loopne
xor
sub
into
adc
js
ja
fwait
test
out
or
push
pop
cmp
mov
mov
(bad)
push
push
inc
in
call
test
popf
mov
push
jmp
test
cdq
aaa
(bad)
pop
es
cli
and
pop
pop
sub
push
xor
and
mov
pop
push
xor
xchg
sub
xor
mov
push
cmp
jae
cli
add
outs
mov
lahf
test
out
clc
cmp
push
in
enter
int
in
test
xor
mov
cmps
pop
rcr
jmp
jne
sbb
ja
jae
jmp
imul
ins
adc
retf
shl
scas
adc
nop
dec
(bad)
imul
cmp
fstp
loop
sbb
mov
call
test
pop
sbb
jbe
ffreep
or
in
push
popa
test
femms
xchg
inc
dec
push
jmp
jns
sbb
imul
daa
lods
stos
and
out
stos
dec
inc
sbb
xor
rcr
ins
(bad)
pop
ins
js
data16
mov
pop
add
js
cmps
xchg
cmp
js
jmp
aas
and
adc
add
movs
cli
fnstsw
or
xchg
and
ja
or
repz
hlt
mov
fsubrp
fadd
fs
xchg
jbe
and
lock
std
pushf
mov
cld
inc
mov
xor
cmp
adc
jnp
adc
push
or
ret
sub
cs
jae
mov
(bad)
sbb
cld
loope
mov
xchg
cmp
pop
lock
mov
(bad)
outs
or
pop
fimul
mov
shl
pop
test
sub
stos
int3
sahf
arpl
bound
push
sbb
cmps
bound
fidiv
and
mov
in
sbb
mov
mov
inc
push
jnp
mov
jecxz
pop
inc
cmc
xchg
xor
sub
out
push
jns
mov
mov
ja
stos
icebp
inc
adc
xor
sbb
into
out
and
ss
addr16
add
and
outs
aad
test
push
cmp
cld
xchg
inc
sub
push
add
inc
add
scas
cmp
arpl
adc
xchg
sti
mov
inc
and
stc
in
add
popa
add
loop
inc
push
cmp
pop
jo
int
test
or
ss
(bad)
repnz
je
and
cmp
mov
sbb
jmp
cmp
cs
sbb
inc
mov
dec
ja
out
adc
mov
push
dec
mov
in
sahf
and
shl
pop
ror
out
mov
sub
inc
in
(bad)
push
inc
cmp
not
shl
adc
fidiv
push
xor
ret
test
mov
dec
in
mov
out
xor
ins
out
iretw
ss
push
cs
std
pop
stos
hlt
rcr
fld
inc
int
inc
pop
jecxz
jns
movs
and
hlt
fstp
out
mov
mov
sahf
dec
sub
push
call
(bad)
inc
sub
dec
inc
and
nop
mov
pop
ret
jg
pop
cmp
mov
fdivr
cs
nop
ret
mov
cli
or
sub
std
fwait
jmp
adc
pop
movs
push
inc
xlat
adc
fcom
int
repz
test
cwde
jmp
test
into
push
test
jnp
push
fcomip
mov
jmp
dec
mov
jp
std
mov
(bad)
sar
arpl
pop
adc
(bad)
jns
cmp
mov
add
shr
cli
cmp
mov
pop
sub
jns
push
or
jecxz
scas
pop
add
ret
mov
fstp
shl
mov
cmp
clc
inc
shl
pop
int
sbb
movs
movs
jno
jns
mov
cdq
xchg
push
pusha
jno
call
(bad)
repz
push
adc
cmps
sub
mov
ins
xor
jge
pop
sub
adc
popa
or
and
call
mov
xchg
ins
push
cwde
or
mov
xchg
or
push
pop
jmp
in
cmps
inc
mov
mov
push
add
call
lods
inc
(bad)
int
idiv
mov
les
add
(bad)
mov
call
mov
popa
inc
loop
pop
add
mov
imul
cmps
les
mov
jge
cmps
hlt
mul
xchg
ja
lods
mov
mov
mov
jmp
fwait
pop
xor
sbb
aaa
addr16
jge
repnz
sbb
jbe
repz
nop
cli
add
mov
aaa
mov
les
aad
mov
shl
sbb
xor
into
mov
sar
pusha
mov
imul
mov
adc
out
and
cmc
pushf
add
inc
mov
rcr
movs
fs
jns
ins
dec
ja
jb
ja
pop
test
pop
mov
push
adc
sbb
fchs
xor
bound
popa
jle
sub
add
in
lock
and
pop
es
add
pop
(bad)
icebp
and
add
rcr
in
scas
retf
dec
mov
adc
(bad)
sbb
push
inc
xchg
(bad)
mov
adc
inc
dec
add
fimul
mov
fwait
test
pop
test
aad
sub
pop
add
push
(bad)
(bad)
fcomp
push
xchg
hlt
ja
hlt
sti
xchg
jmp
movs
xchg
jl
xor
in
imul
cmp
dec
push
mov
dec
nop
push
inc
fs
mov
rcr
cld
setge
ds
mov
ret
xchg
cmps
pop
inc
mov
jmp
ja
(bad)
fwait
inc
out
pop
dec
ret
xchg
mov
xor
ds
fmul
mov
shl
aam
nop
jnp
in
xchg
into
jb
xor
ret
push
int3
loope
scas
push
popa
repz
xchg
mov
sub
imul
jae
sub
mov
repz
stos
adc
jmp
and
les
bound
or
pop
mov
mov
add
repnz
push
dec
push
lds
mov
shl
and
pop
loope
idiv
pop
in
retf
mov
pop
jmp
sbb
js
xor
arpl
dec
push
push
push
add
(bad)
sub
scas
cmp
(bad)
fisttp
cmp
outs
adc
mov
cmps
out
push
adc
pusha
sbb
stos
jbe
push
mov
cmp
jae
test
scas
pop
aad
add
clc
repnz
push
(bad)
mov
sub
push
shl
mov
(bad)
jbe
fimul
(bad)
stc
fdivr
test
cmps
lock
aaa
xor
in
loopne
hlt
mov
and
jp
push
pushf
jmp
mov
lods
int3
iret
lahf
mov
push
dec
push
sub
mov
rol
test
outs
int
jnp
clc
inc
(bad)
push
inc
(bad)
mov
sti
scas
jno
sar
(bad)
aaa
mov
cmp
push
inc
ror
dec
test
enter
pop
lods
je
push
jmp
aaa
mov
retf
xchg
(bad)
sbb
fst
pop
sbb
iret
push
aad
xchg
inc
lahf
jl
call
mov
push
test
ja
pop
(bad)
iret
scas
push
sbb
mov
mov
jge
mov
cmp
mov
jmp
jo
mov
push
push
fild
and
hlt
out
std
mov
cmps
xchg
sbb
mov
vpmuludq
sub
add
and
out
sbb
push
nop
sbb
pop
dec
mov
test
jae
add
sahf
sub
(bad)
(bad)
xchg
cmps
inc
sub
cld
xchg
xor
in
mov
push
lods
jp
mov
xor
ret
mov
add
xchg
fcomp
cmp
pushf
add
push
push
push
ret
dec
sbb
retf
sbb
fsubr
xchg
mov
sub
movs
inc
ins
sub
(bad)
hlt
xor
mov
jbe
jbe
jg
add
in
mov
(bad)
mov
xchg
xor
push
mov
lods
add
sti
inc
inc
adc
and
in
or
in
mov
mov
cmp
lods
lock
enter
pushf
adc
add
xchg
out
mov
popf
loope
cs
in
push
shr
push
jb
pop
adc
lea
jecxz
mov
dec
gs
pop
addr16
bound
jno
out
jge
or
xchg
daa
or
in
int3
out
push
lahf
push
ret
loop
mov
push
ret
pop
sub
loope
mov
push
aas
sub
sti
mov
pop
fidivr
add
push
cmp
inc
jl
push
pop
loop
mov
(bad)
stc
xor
push
cmps
bound
test
inc
xchg
dec
push
jnp
or
adc
xor
or
mov
sub
push
cmp
add
aam
icebp
mov
loopne
mov
push
xor
mov
jmp
xchg
sbb
push
mov
pop
sub
jo
shl
xchg
or
je
pop
jae
push
scas
imul
cmp
xor
fisub
lahf
dec
add
and
cmp
inc
daa
jnp
inc
jmp
lea
mov
dec
iret
push
dec
imul
and
scas
or
and
(bad)
mov
mov
pop
popf
out
mov
(bad)
adc
ja
cmp
xchg
nop
mov
(bad)
(bad)
cmp
bound
dec
in
push
cmp
icebp
xchg
int
dec
retf
imul
xchg
lock
hlt
xchg
mov
imul
fistp
adc
push
loop
in
adc
scas
mov
mov
fs
push
inc
fisubr
mov
fisub
movs
lock
fimul
das
fsub
dec
mov
dec
inc
mov
add
std
sti
inc
popf
pop
xor
call
(bad)
out
repnz
push
or
dec
cld
sbb
cs
(bad)
mov
push
sub
icebp
dec
jbe
cmps
ret
mov
aaa
mov
data16
push
cmp
lock
push
rcr
rol
push
jae
mov
add
into
adc
sar
mov
xchg
or
out
lods
mov
ret
(bad)
jmp
(bad)
jbe
xor
das
mov
jo
das
sub
push
fldcw
idiv
das
pop
or
mov
push
les
cli
ss
add
je
retf
retf
sbb
add
pop
lea
sub
dec
jmp
retf
xor
hlt
jo
(bad)
and
pop
mov
pop
and
lea
mov
(bad)
lods
jmp
in
mov
in
mov
movs
jnp
cmp
sub
and
ja
gs
dec
fistp
imul
std
inc
pop
adc
or
adc
call
fwait
dec
jecxz
pushf
mov
adc
mov
push
jge
movs
mov
jne
push
xchg
push
imul
fcmovu
aad
xor
adc
mov
out
dec
push
xor
clc
lods
div
loope
adc
adc
fsubr
cmp
jb
into
popa
add
push
add
fwait
movs
jmp
mov
lods
hlt
xlat
out
fld
and
sahf
in
xchg
jg
mov
fnstsw
movs
scas
mov
mov
out
push
stc
xor
int3
repz
gs
clc
pop
retf
(bad)
out
cwde
ror
out
mov
push
jl
sub
add
push
pushf
pop
dec
inc
sbb
movlps
cmps
pusha
mov
mov
shr
adc
in
aad
fidiv
add
movs
fcomp
push
clc
sbb
enter
arpl
popa
mov
inc
adc
push
arpl
dec
call
or
mov
movs
mov
scas
in
je
jns
cmps
pop
xor
jne
push
je
aam
cmp
jg
pop
jg
fmul
into
ja
add
cmp
push
mov
mov
adc
fnstenv
xchg
push
aad
cmps
push
mov
add
outs
fidivr
dec
out
add
or
pop
and
fcmovu
xchg
or
rcl
fidiv
cmp
add
and
xor
or
pop
bound
xlat
data16
fxch
retf
push
pop
fdivrp
jmp
int
iret
and
idiv
jno
xchg
and
mov
pushf
push
xor
sub
push
out
dec
push
cmp
or
shl
mov
mov
sbb
retf
inc
cmc
xchg
shl
or
(bad)
sar
mov
mov
adc
sub
(bad)
adc
retf
pop
push
cld
sub
or
fisttp
repz
ins
test
pop
push
xchg
outs
sbb
lea
scas
retf
cmp
or
das
arpl
cli
sahf
rcr
xor
xchg
jae
lods
mov
cmp
cmp
test
push
imul
imul
pop
sbb
xchg
(bad)
(bad)
and
loopne
inc
cs
mov
into
push
scas
add
xchg
movaps
mov
jne
sub
iret
xchg
xor
call
sbb
mov
mov
fist
retf
stos
sbb
xor
jle
(bad)
xor
cmp
adc
and
mov
mov
fisub
shr
push
ret
stc
test
lss
sar
test
add
and
(bad)
adc
jbe
or
cmp
in
(bad)
int3
scas
in
lods
lds
xor
push
inc
jl
inc
and
cmp
std
dec
cmps
push
popf
xchg
xchg
stc
mov
test
addr16
dec
pop
mov
clc
mov
add
scas
sbb
jle
rcl
fbld
les
pop
ins
fcom
ds
lock
adc
imul
inc
pop
xchg
xchg
adc
jp
das
sar
in
push
sub
lahf
ins
jmp
mov
jmp
lds
mov
movs
pop
in
aam
jle
mov
test
sbb
shl
or
call
sbb
in
mov
inc
inc
xchg
xchg
scas
outs
pop
int
dec
or
and
ret
or
data16
sti
imul
enter
aaa
and
fcmove
mov
pop
movs
repnz
jle
int
into
xchg
loopne
xchg
out
fcomp
imul
scas
clc
mov
into
or
cmp
jbe
xor
sbb
arpl
sbb
(bad)
sbb
sahf
xlat
push
out
sti
push
and
push
stos
inc
das
arpl
jae
fwait
mov
movs
dec
jmp
jnp
fisttp
lahf
add
ror
sub
sub
(bad)
rol
xchg
cmp
lds
mov
jmp
pop
out
pop
int3
rcl
lds
xor
or
cmps
mov
movs
cld
add
mov
xchg
sub
add
xchg
pop
xchg
sub
out
sbb
xchg
cld
sbb
sahf
jecxz
add
(bad)
jnp
pop
pushf
mov
jo
sub
push
cmps
xlat
add
or
int
push
addr16
mov
sub
retf
fild
pusha
imul
inc
jbe
push
push
out
xchg
retf
jae
dec
ins
call
std
out
imul
mov
int3
inc
jnp
fwait
mov
dec
mov
test
in
rcl
ret
push
jp
(bad)
aam
fadd
mov
int3
(bad)
(bad)
mov
pop
iret
jle
sahf
rcr
fistp
pop
jno
test
retf
das
cmp
xchg
daa
mov
cwde
cwde
sahf
dec
pop
arpl
mov
xchg
pop
dec
jl
adc
sbb
mov
or
pop
dec
dec
aam
inc
mov
sub
mov
mov
push
or
mov
dec
fcomp
mov
(bad)
jno
pop
int3
das
je
add
repnz
push
iret
iret
mov
push
test
mov
rcr
loopne
jnp
mov
sti
mov
fiadd
dec
jb
retf
mov
push
js
dec
push
sub
sbb
ins
out
ss
jl
cmp
out
inc
in
xor
mov
inc
or
pusha
retf
pop
pop
or
jb
test
add
bound
hlt
adc
sti
cmp
cwde
inc
mov
mov
fwait
jns
mov
ret
in
fcom
(bad)
and
add
arpl
and
xlat
mov
dec
rcl
xor
pop
inc
sub
push
xchg
jns
xchg
adc
arpl
mov
data16
leave
dec
repz
jp
cmp
mov
lea
call
mov
pusha
mov
cmc
test
inc
test
mov
add
rcr
daa
aas
ror
xor
aad
cmp
bound
push
jno
cmps
in
jp
lock
adc
scas
xchg
hlt
aas
std
add
hlt
push
mov
push
cli
ins
inc
add
fdivr
idiv
imul
add
sub
push
lods
nop
push
and
and
dec
(bad)
call
push
fwait
std
fld
jg
or
mov
adc
addr16
repz
pop
push
je
mov
lds
add
inc
and
mov
jl
mov
neg
push
adc
ds
repz
mov
cmp
pop
repnz
int
pop
pop
test
shl
fldenv
retf
sub
es
mov
and
jp
enter
data16
test
mov
outs
pop
jg
pusha
add
jl
enter
int
inc
js
neg
in
add
xor
pop
jo
fmul
xchg
xchg
mov
jmp
mov
jne
xor
in
pop
call
popf
mov
pop
xor
pop
(bad)
xor
iret
stos
mov
jecxz
inc
(bad)
stos
ror
movs
jo
(bad)
sbb
lahf
jecxz
int3
sub
or
push
int3
retf
mov
ss
mov
adc
mov
movs
add
mov
xor
std
xchg
jne
cdq
jno
stc
pop
mov
adc
add
mov
pop
sbb
iret
enter
xchg
fld
or
jo
jmp
xor
xchg
out
dec
mov
add
dec
mov
js
push
jns
out
inc
popf
jo
fnstsw
and
lahf
test
push
fsub
xor
add
call
scas
sbb
test
sub
pop
jmp
adc
push
jae
in
repz
inc
inc
enter
jecxz
int3
test
push
loopne
or
sahf
mov
fld1
aaa
in
rcr
into
(bad)
sar
inc
(bad)
push
inc
idiv
sahf
xor
dec
push
sub
push
mov
mov
push
cdq
out
adc
into
mov
arpl
mov
xchg
mov
ror
pop
mov
mov
in
jbe
pop
or
imul
xchg
fld
call
(bad)
xchg
pop
cdq
mov
jg
sbb
jb
lock
jno
test
or
pop
cmp
adc
loopne
hlt
gs
pop
pop
sub
je
mov
mov
fstp
push
mov
sbb
test
dec
push
jns
inc
adc
push
in
jns
xor
sar
jle
fwait
xchg
and
push
push
sbb
into
daa
lods
mov
dec
ret
adc
xchg
xor
xchg
jae
sbb
inc
fmul
fist
lods
mov
gs
mov
push
mov
pop
mov
xchg
mov
cmps
adc
aad
cmc
shr
in
enter
jne
inc
cmp
jecxz
arpl
jne
xchg
aad
cmp
dec
mov
rcr
repnz
mov
cdq
fimul
mov
mov
xchg
ret
les
jnp
mov
stos
push
mov
ror
push
inc
sub
in
or
xchg
fwait
mov
dec
mov
icebp
mov
jns
outs
in
jp
lahf
cs
and
das
aaa
cmp
dec
call
sbb
jmp
and
xor
pusha
push
jb
jmp
mov
dec
dec
ds
repz
les
cld
mov
xchg
in
jge
js
es
fs
xchg
retf
ins
jns
xchg
cmp
js
fsubr
repnz
(bad)
(bad)
xor
fist
pop
call
lods
jl
sub
idiv
and
xchg
loope
adc
dec
mov
mov
xchg
xor
enter
sub
in
test
pop
inc
jmp
pop
xchg
pushf
sub
xor
daa
test
rol
push
push
jbe
shl
pop
cdq
out
dec
(bad)
loop
gs
add
or
xor
ds
or
mov
fmul
jmp
aam
stc
idiv
clc
dec
cmp
jecxz
pop
out
xor
pusha
jb
or
ja
xor
daa
cdq
sbb
adc
jae
push
mov
mov
fwait
mov
int
lock
(bad)
jbe
mov
std
loop
sub
ficomp
repnz
jmp
in
sub
cmp
inc
fucomp
push
xor
sub
lods
lods
inc
ror
int3
mov
mov
retf
repnz
bound
stos
mov
jl
sbb
rcr
arpl
int3
add
mov
lds
out
fld
cmp
not
xchg
dec
xor
leave
cmps
xchg
es
fdiv
mov
popf
xchg
mov
mov
retf
push
push
pop
adc
loop
push
mov
dec
pop
and
mov
jecxz
fistp
pop
fs
mov
mov
cmps
pop
shl
je
jg
outs
mov
pop
mov
clc
mov
ret
icebp
daa
in
xchg
shl
std
jo
dec
stos
inc
and
popa
aam
add
cmp
xchg
out
pop
mov
jnp
lods
mov
and
adc
loopne
mov
mov
xchg
dec
pop
mov
ror
jl
ins
jnp
scas
cmp
mov
retf
jns
adc
div
aaa
xor
push
pop
sbb
gs
cdq
sub
cli
lods
int3
out
fbstp
mov
cwde
and
scas
(bad)
repz
scas
cmp
enter
inc
inc
retf
sbb
adc
sub
mov
mov
out
cmp
xchg
loope
sbb
push
xchg
pushf
fisttp
inc
out
stos
xor
pusha
(bad)
fwait
push
jnp
sahf
jne
dec
hlt
inc
or
cmp
mov
cld
push
add
mov
add
mov
jmp
dec
add
or
rcr
and
and
jo
(bad)
in
jnp
inc
sub
xor
aam
repnz
add
push
and
pop
and
cmps
enter
mov
jle
push
add
ins
push
in
out
cmp
in
lock
cs
(bad)
mov
mov
mov
mov
stc
jle
push
fxch
out
fwait
hlt
rol
movs
jmp
push
lea
vshufps
and
(bad)
mov
dec
and
cmc
fstp
inc
aas
movs
sbb
into
movs
add
ffree
push
inc
sub
lahf
push
cli
jo
push
mov
int
sbb
aaa
adc
adc
cmp
mov
ins
jns
jl
jmp
mov
int
cmp
xchg
punpckhbw
and
mov
icebp
push
sahf
xor
pushf
cli
adc
ret
adc
pop
push
adc
imul
imul
fcom
lods
outs
(bad)
in
dec
sub
ss
xchg
mov
xchg
retf
jg
push
in
hlt
fsubr
mov
jnp
das
retf
imul
mov
cld
ss
push
xchg
(bad)
sub
jmp
mov
mov
fistp
stos
dec
cmp
popf
sub
ror
bswap
cli
(bad)
not
and
push
cli
inc
retf
sbb
in
outs
sub
mov
or
jbe
push
cmp
int
mov
int3
test
in
ins
inc
or
push
ret
lea
jbe
mov
and
jl
test
adc
mov
repz
shr
jns
bound
push
and
cmps
push
(bad)
cld
aad
jl
ret
addr16
cmps
push
push
je
xor
fld
dec
jg
scas
shl
in
hlt
push
stos
sbb
nop
mov
lds
fsubr
xor
iret
xor
and
pusha
into
ror
fiadd
cld
xchg
lea
and
lods
pop
push
ret
inc
and
movs
retf
xchg
sub
sub
mov
push
mov
mov
pop
in
push
add
dec
and
rol
ss
(bad)
loop
or
sub
lea
stos
ja
lock
cmc
retf
stc
jg
cmp
sti
mov
call
out
call
pop
adc
test
popa
push
jnp
lock
mov
(bad)
lock
call
jmp
call
neg
xor
ds
xlat
sub
adc
adc
psllw
mov
sbb
(bad)
sub
fcmovnb
shr
inc
cmp
cmp
push
mov
stos
sahf
jb
cli
mov
xor
and
inc
mov
inc
stc
cmps
and
lods
call
icebp
sbb
popa
iret
push
daa
or
sub
jp
ds
test
inc
cmps
and
pop
push
pop
cmp
out
aas
pop
pop
(bad)
paddq
adc
movs
lea
ins
cmp
call
pop
sbb
adc
mov
sub
sub
jle
inc
out
aad
imul
ds
div
jne
pop
sub
mov
scas
or
push
in
call
dec
jp
push
jne
mov
dec
(bad)
in
jg
dec
scas
cmp
cld
adc
cmp
test
(bad)
imul
out
int3
cld
mov
call
enter
sar
lock
push
xchg
retf
push
test
mov
(bad)
mov
inc
xor
inc
cmps
test
mov
popa
mov
cmp
into
sub
loop
and
ret
push
loope
or
jnp
adc
(bad)
mov
push
pop
xchg
pop
mov
pop
xor
jbe
jmp
(bad)
pop
push
lods
ret
pop
call
mov
xlat
jg
mov
icebp
cmp
xor
imul
adc
adc
or
je
mov
sti
out
push
sti
sub
mov
jp
iret
mov
mov
mov
sbb
mov
inc
push
fdivr
js
aaa
fcmovnbe
cmp
push
and
inc
mov
mov
(bad)
and
inc
stos
repnz
push
mov
cmps
test
jnp
jb
enter
es
jp
mov
adc
push
popa
and
clc
out
cmp
jle
mov
mov
dec
in
add
pop
jmp
pop
add
loopne
leave
ins
in
jmp
hlt
inc
xor
and
rcr
pop
push
out
push
or
shr
fstp
adc
inc
cld
mov
jecxz
arpl
push
and
mov
mov
or
xchg
in
pop
jae
jb
mov
jl
aam
xchg
mov
add
inc
retf
loopne
push
test
int3
fwait
arpl
test
dec
jle
iret
mov
xchg
sar
leave
or
or
sub
push
outs
test
fisttp
and
mov
inc
cwde
xor
or
aaa
inc
sti
movaps
cld
add
sbb
adc
je
mov
jg
mov
mov
xchg
(bad)
pop
mov
popf
mov
inc
fidivr
add
sbb
ja
jbe
dec
push
fld
pop
dec
dec
push
xor
lds
push
stos
ss
loop
and
in
cmp
call
loope
mov
cmps
clc
es
push
sti
call
scas
sub
sub
inc
test
add
jnp
loopne
shr
fcom
ds
dec
pop
xor
jae
mov
fwait
dec
test
inc
cmc
inc
(bad)
cs
cmp
inc
mov
or
(bad)
adc
dec
or
aaa
adc
mov
mov
mov
repnz
sub
imul
enter
dec
lock
cmc
das
pop
(bad)
push
dec
(bad)
adc
adc
mov
cwde
lods
or
push
and
jbe
fisub
pop
out
push
sbb
ins
mov
js
fs
test
data16
mov
inc
mov
retf
neg
mov
and
lods
out
in
and
stos
cld
dec
pop
bound
pop
daa
mov
(bad)
test
xor
ret
fnstsw
mov
mov
xchg
jnp
ins
aad
pop
xor
paddsb
xor
add
cmps
lahf
(bad)
cmps
push
push
out
sar
gs
in
and
xlat
jne
arpl
mov
test
(bad)
ror
mov
or
sahf
mov
and
popf
pop
scas
les
les
pushf
xor
dec
push
in
push
sub
aas
push
cmp
mov
xchg
cmp
js
cmps
pushf
cmp
inc
aas
rcl
mov
and
in
lock
sti
and
mov
out
or
pop
pop
mov
inc
xor
jge
mov
xor
(bad)
pop
inc
mov
pop
lods
mov
inc
call
arpl
mov
inc
pop
xlat
xchg
pop
into
jno
(bad)
les
cdq
mov
xor
push
push
xor
mov
mov
adc
popa
lds
dec
das
out
mov
out
push
shr
lods
retf
cmp
pop
pop
mov
pushf
fild
mov
jmp
test
movs
or
cmc
jno
in
iret
int3
int
jg
enter
jns
xor
stos
or
int3
aad
mov
pop
addr16
push
dec
addr16
fwait
ror
and
les
js
xor
xchg
sub
dec
sbb
pop
(bad)
les
out
daa
mov
mov
push
xor
adc
push
inc
out
xor
and
cmp
add
jl
ret
sub
aam
sub
and
cmp
cmps
inc
xchg
xchg
clc
xor
xor
test
mov
or
enter
add
add
and
js
sub
push
out
fcomp
add
cli
adc
leave
sbb
das
sbb
fild
dec
outs
movs
stos
pop
ds
mov
sub
cmp
sbb
sub
ds
jb
int3
adc
scas
std
jns
cdq
js
jle
pop
mov
inc
jns
jmp
test
sbb
call
pop
or
retf
mov
inc
clc
push
push
out
jae
jl
retf
pop
(bad)
int3
sbb
or
xchg
mov
inc
cld
inc
push
mov
inc
sahf
mov
pop
cs
jg
int3
stos
add
mov
test
cli
bound
rol
xchg
mul
test
mov
ss
cmp
or
mov
rcl
call
mov
dec
mov
sti
dec
ficomp
test
jo
hlt
pop
addr16
jl
nop
fwait
std
fldenv
in
loope
jo
cs
xchg
ins
pop
or
push
sbb
ins
lea
lds
jp
and
mov
or
lahf
pop
shl
stos
mov
jnp
jecxz
fcmovne
aas
lods
inc
addr16
dec
and
lea
popa
iret
pop
dec
jle
and
shl
push
adc
push
mov
bt
out
or
jne
bswap
mov
aad
jnp
jmp
mov
sub
mov
ret
stos
fdiv
int3
xchg
inc
lods
pop
jmp
adc
call
adc
aam
mov
mov
xchg
ins
cs
or
retf
mov
xor
mov
adc
aam
jbe
(bad)
mov
sbb
mov
jnp
xchg
sbb
sbb
ror
mov
push
lods
cmp
push
pop
pop
sub
aam
adc
or
mov
data16
mov
mov
loop
pop
adc
pop
addr16
lock
ds
aam
mov
imul
lds
arpl
xor
in
mov
sbb
adc
mov
mov
jmp
xchg
adc
(bad)
sbb
imul
jp
inc
or
add
inc
mov
sahf
sub
pop
xchg
(bad)
mov
sub
bound
repnz
inc
xlat
fwait
(bad)
dec
imul
aad
jmp
mov
push
shl
in
fisttp
pop
hlt
cld
bound
jb
push
mov
push
js
mov
jb
xchg
or
fwait
not
retf
pop
cmp
jl
fstp
int
jne
arpl
lds
or
pop
imul
or
xor
mov
cdq
sub
push
mov
arpl
cld
cdq
push
jne
mov
scas
and
call
rcr
jae
and
fucomi
mov
xor
sbb
retf
pop
cmp
scas
shl
dec
push
adc
les
out
popf
push
gs
ds
mov
push
dec
call
mov
js
xor
fld
mov
mov
aam
adc
fnstsw
mov
jp
add
iret
and
retf
and
call
(bad)
add
xor
cli
ret
lea
aaa
inc
jmp
pop
fs
adc
aad
and
jnp
xchg
pop
push
sbb
daa
pushf
(bad)
bound
cmp
into
push
mov
bound
inc
adc
xor
retf
mov
cmps
push
fld
sbb
inc
mov
ret
mov
cdq
bnd
ja
call
fs
iret
sub
adc
retf
or
aaa
daa
repnz
mov
out
sar
pop
xchg
fmul
xor
in
sub
jno
cmp
retf
mov
arpl
movs
int3
repnz
lods
jb
rep
nop
xchg
inc
xchg
or
sbb
jl
(bad)
jmp
into
or
es
push
add
ins
popa
(bad)
push
pop
imul
popf
scas
pop
xor
push
aaa
test
inc
adc
sahf
xor
(bad)
stos
mov
bound
push
dec
arpl
sub
pop
ds
into
xlat
mov
sub
cmc
in
fisttp
jbe
mov
lock
jbe
dec
fxch
scas
jns
add
bound
xchg
in
xor
add
(bad)
retf
pop
shr
push
pusha
mov
push
test
std
xor
addr16
adc
cli
pop
cld
adc
std
mov
dec
aas
xor
push
xor
and
inc
dec
(bad)
cmp
jp
jo
int
repz
imul
(bad)
jno
add
mov
scas
mov
dec
push
pop
scas
sub
xor
ins
addr16
xchg
mov
jo
xlat
pusha
inc
xor
jae
pop
jp
lahf
xchg
aad
sub
enter
adc
movs
lea
arpl
mov
sbb
jb
ins
adc
inc
adc
les
(bad)
lock
lods
daa
daa
mov
or
push
cld
in
not
loopne
push
or
std
and
mov
sbb
leave
int3
test
and
ss
mov
pop
jg
mov
call
shl
aad
js
out
clc
cwde
mov
jne
aam
push
push
outs
or
jmp
jl
jp
mov
xlat
fmul
test
add
sub
or
pop
nop
pushf
pop
sbb
mov
cmc
inc
call
ins
xchg
scas
lods
shr
sbb
stos
loopne
repnz
xchg
cmp
jl
or
dec
aaa
je
mov
mov
sub
lock
pushf
movs
mov
(bad)
mov
adc
sbb
call
push
ins
mov
movs
or
ror
imul
push
sbb
mov
ins
add
dec
inc
call
and
xchg
xor
jmp
lahf
(bad)
ss
icebp
fistp
dec
cmp
jns
mov
(bad)
push
mov
inc
shld
ret
sbb
stc
sti
mov
mov
sbb
(bad)
fucom
(bad)
sbb
xchg
adc
call
pop
fbstp
test
lea
push
daa
mov
push
pop
push
lods
sbb
pop
cmp
adc
loope
sub
sbb
pop
int
dec
xor
test
mov
xor
sub
cmp
in
jbe
int
sar
xchg
sbb
mov
rcr
jnp
mov
ss
cmps
sub
xchg
inc
xor
pop
movs
gs
pop
fadd
adc
lea
or
fbld
sti
test
or
jecxz
inc
mov
imul
test
not
sbb
in
daa
and
push
mov
add
pop
mov
mov
push
hlt
xchg
int
dec
ret
xor
movs
das
jo
cmc
test
lods
lahf
or
dec
cmps
jle
sbb
arpl
ret
test
(bad)
cdq
mov
in
loope
jb
aam
ret
dec
imul
and
lock
jl
in
jbe
(bad)
sti
ins
cdq
jmp
movs
sbb
cmp
xchg
mov
and
jmp
data16
xor
sbb
mov
mov
(bad)
sbb
mov
cmps
sub
mov
jno
mov
pop
mov
cmp
inc
test
loopne
xchg
icebp
mov
xchg
xchg
xor
mov
pop
fiadd
inc
and
fldenv
sbb
ds
dec
dec
test
or
inc
fs
mov
pop
mov
lock
js
in
adc
sti
or
and
test
dec
xor
mov
mov
sbb
jo
sub
ja
jp
shr
fwait
clc
xchg
and
nop
sbb
mov
pop
adc
popa
shr
jg
pop
pop
ror
js
cmp
mov
jns
push
jmp
cli
ret
mov
stc
call
add
or
imul
ins
mov
je
push
scas
or
or
jne
and
xor
pop
fs
cmps
ds
xor
xor
test
(bad)
jo
test
cmp
popa
hlt
cwde
jle
xchg
xchg
pop
ret
mov
push
aad
ds
cmps
mov
sbb
jp
dec
xchg
cmp
mov
push
xor
adc
sahf
sbb
imul
xchg
and
test
ds
ins
test
sti
adc
enter
fistp
add
xchg
data16
adc
cmp
mov
dec
add
loopne
mov
and
int
add
xchg
cmp
jb
std
or
jnp
pop
bound
cli
add
or
inc
xor
ret
and
movs
jecxz
jb
dec
mov
sbb
rol
aam
xlat
adc
ja
je
xchg
mov
stos
cmp
xchg
mov
pop
add
arpl
jns
pop
or
addr16
lock
(bad)
xor
cs
ficomp
pop
mov
fcomip
add
xor
popf
outs
and
ins
inc
clc
popf
jo
fsubr
adc
cmc
sbb
dec
adc
(bad)
adc
fidivr
xchg
mov
movs
icebp
sti
sti
jno
inc
pop
test
pop
mov
xor
iret
adc
lds
xor
mov
mov
push
jle
and
cmp
adc
mov
jne
lods
imul
(bad)
pop
dec
adc
mov
ins
xor
stos
ins
std
xor
pop
xchg
mov
call
fisttp
test
(bad)
jecxz
xor
sub
xchg
sub
mov
jo
jl
call
dec
or
cmps
adc
(bad)
out
dec
(bad)
scas
xchg
mov
and
cmp
cmp
leave
aas
fst
popf
cmp
lods
jle
push
xchg
mov
xchg
mov
cmps
rcl
and
cmp
movs
jp
sbb
test
adc
les
test
mov
test
jle
into
pop
fnstcw
ret
punpckhbw
imul
sahf
pop
fild
dec
mov
mov
mov
cmc
add
jnp
jge
mov
xlat
aad
mov
push
xor
pop
int
mov
xchg
mov
test
jmp
xchg
mov
mov
int
outs
lds
out
jle
test
cmp
enter
(bad)
call
mov
adc
push
inc
jnp
imul
dec
shl
mov
cli
pop
dec
inc
jae
mov
icebp
or
arpl
enter
pusha
add
sbb
add
into
mul
jp
or
mov
add
push
aad
jae
fwait
ins
cld
push
inc
and
add
push
sbb
jle
or
lods
xor
stos
outs
dec
cmps
push
push
arpl
aaa
xor
iret
int3
jmp
mov
js
ret
push
xor
xchg
outs
je
mov
cmp
or
pop
test
popf
add
cmps
popf
mov
cs
pop
scas
mov
or
inc
push
push
xchg
dec
xchg
in
loopne
pop
pop
push
ins
retf
mov
repnz
inc
mov
and
mov
inc
lea
fisub
lods
jnp
out
add
xor
imul
sbb
ret
mov
xchg
cmp
loop
mov
push
ficom
cld
mov
add
sbb
xchg
pop
imul
rol
mov
sub
inc
in
sbb
into
sar
jbe
(bad)
lds
pop
jp
popf
push
fnstenv
or
jle
adc
or
mov
pop
je
xor
and
xor
rol
movs
cmp
push
adc
call
int
aam
xchg
stos
jmp
xchg
ficom
and
xchg
shr
ror
in
int3
xchg
mov
and
add
sub
out
mov
int3
cmps
fldenv
pop
sub
xchg
jnp
jecxz
adc
or
aad
iret
mov
(bad)
fistp
in
sbb
fsubrp
gs
stos
cld
inc
int3
loopne
daa
push
movs
mov
pop
cmp
inc
(bad)
std
pop
fstp
movs
push
sub
inc
add
and
add
push
cmps
mov
lahf
ror
jecxz
scas
push
mov
adc
push
mov
dec
sub
sub
jmp
ror
(bad)
rcr
in
dec
nop
gs
jmp
inc
or
pop
or
sub
outs
mov
js
and
sbb
xchg
clc
and
inc
mov
push
test
popa
push
jb
mov
fcmovnbe
daa
cmp
push
xchg
xchg
nop
jae
outs
and
mov
and
rcr
jge
test
adc
cmp
loop
sbb
push
push
sbb
mov
out
push
push
(bad)
ficom
mov
push
push
or
leave
sub
cmc
mov
push
fisttp
and
fisub
gs
loop
xor
addr16
test
push
or
push
pop
mov
dec
ret
and
scas
data16
scas
and
xchg
sub
dec
daa
hlt
sahf
xchg
pop
sub
jnp
inc
mov
xor
sub
fsubrp
cmp
push
sbb
push
push
dec
inc
enter
into
ficom
pop
loop
cmp
xchg
std
pop
pop
movs
pop
xor
mov
mov
rol
xor
xchg
mov
dec
adc
test
lock
dec
das
nop
es
es
pop
xor
retf
(bad)
aas
lock
xchg
push
cdq
mov
fild
push
mov
fistp
test
and
(bad)
mov
adc
or
iret
dec
ja
inc
repnz
push
mov
sub
(bad)
cmp
test
sub
retf
adc
aad
ret
jge
lods
mov
ins
es
inc
push
in
pop
test
sub
pop
jmp
push
fsub
mov
repnz
jmp
and
xabort
loope
dec
cdq
scas
cmp
jmp
inc
jmp
lods
mov
mov
lea
and
pop
mov
mov
sbb
dec
or
je
dec
pop
ds
cmp
bswap
cmp
or
fsub
retf
or
push
cld
xchg
je
lods
(bad)
movs
jo
push
daa
pop
movs
sbb
aaa
imul
fmul
inc
add
jno
out
mov
jne
mov
add
cs
ret
jne
out
mov
sub
jmp
mov
retf
shr
aam
cmps
test
mov
xor
test
add
adc
sbb
stos
cmc
and
push
adc
mov
in
cwde
jnp
retf
dec
xor
icebp
inc
bswap
nop
mov
dec
lods
xchg
fnstenv
mov
shr
xor
out
jb
mov
mov
pop
mov
mov
jmp
adc
inc
dec
loope
xchg
sar
movs
jns
mov
cli
aad
out
cli
sar
inc
sar
into
xor
sbb
int
test
pop
xchg
cwde
mov
popf
mov
outs
out
mov
mov
sbb
(bad)
xor
enter
jmp
dec
les
push
push
jmp
retf
xchg
iret
jmp
dec
pop
retf
push
fsubrp
sbb
xor
test
pop
iret
cmc
test
and
mov
add
or
push
aam
enter
(bad)
repnz
jge
cmp
in
arpl
cmc
outs
aas
sub
adc
addr16
ds
sbb
test
popf
call
(bad)
pop
jp
pop
fstp
jne
mov
jp
and
xor
retf
jp
das
js
pop
pop
pushf
fbld
imul
push
mov
out
bnd
xchg
fld
ja
or
mov
popf
daa
mov
sbb
push
repnz
fisub
(bad)
in
adc
sub
rcl
add
push
loope
mov
mov
push
sbb
ins
mov
pop
je
scas
in
and
outs
pushf
dec
sti
mov
scas
fild
jge
inc
push
jg
aas
aam
xchg
push
sbb
and
jmp
add
pop
mov
pop
repz
fisttp
sub
test
sub
lahf
jnp
es
mov
neg
or
in
or
fisttp
push
mov
xor
call
loop
(bad)
xlat
adc
jmp
fild
nop
popf
push
jae
iret
sbb
mov
movd
cmp
test
and
loope
js
pop
mov
ret
out
ss
cs
mov
sub
loop
pusha
add
or
mov
ins
call
outs
add
pop
xchg
jb
sub
mov
outs
and
adc
mov
push
sbb
or
js
jnp
or
or
mov
outs
nop
mov
add
add
mov
sahf
into
retf
movs
pop
retf
outs
sbb
xchg
shr
adc
add
test
jnp
xor
mov
pop
cmps
test
ins
out
push
xchg
xor
ins
mov
loop
inc
dec
test
mov
sub
dec
ja
mov
(bad)
aaa
repnz
cwde
dec
jb
mov
icebp
mov
mov
fistp
cmp
les
fistp
cwde
xchg
jl
mov
pop
sbb
imul
pop
dec
out
in
fist
int
cmc
in
sbb
dec
out
xor
dec
xchg
out
movs
rol
inc
in
mov
mov
inc
std
adc
frstor
(bad)
div
and
add
shl
mov
aaa
jno
pop
jne
xchg
sbb
cmp
(bad)
iret
cmp
aam
fsub
sbb
retf
cmps
mov
jmp
pop
in
lahf
jb
pop
js
adc
test
in
mov
sub
hlt
(bad)
aas
cmps
mov
mov
test
mov
or
dec
ins
inc
lea
cmp
cmps
test
sub
stos
in
cdq
sar
pop
sub
imul
cmp
add
mov
cmp
xchg
outs
mov
aaa
js
pop
in
ds
and
repz
ins
bound
or
or
mov
out
dec
fidiv
sbb
lods
(bad)
(bad)
jmp
popf
add
scas
lds
jmp
inc
dec
push
aam
sbb
dec
test
xchg
cld
aad
sub
or
in
push
stos
jns
dec
adc
aad
dec
out
jmp
add
jp
sub
imul
neg
out
push
cmps
and
clc
lds
sahf
fwait
in
adc
ret
mov
sti
mov
in
fcomp
stos
sbb
ret
popf
mov
mov
cmc
popf
xor
movs
std
out
(bad)
xchg
push
xor
lock
repz
xchg
imul
mov
push
movs
dec
pop
mov
dec
push
dec
hlt
mov
es
lods
pop
movs
aas
sahf
mov
sbb
mov
mov
mov
and
push
je
call
(bad)
mov
push
add
mov
in
add
pushf
mov
xor
fst
lea
lock
popf
add
movs
aas
add
ins
ret
xchg
fadd
out
xchg
add
and
push
sar
movs
in
xchg
repnz
(bad)
lea
lahf
mov
pop
(bad)
out
loop
mov
shl
retf
enter
cmps
jne
add
imul
ret
jae
or
test
add
inc
arpl
(bad)
retf
mov
enter
and
stc
fwait
clc
out
push
xchg
jle
jae
ror
add
xor
push
loope
jb
sar
and
dec
loop
cmp
add
fmul
fsubr
cmc
mov
xor
push
xor
cmp
cmp
push
ret
inc
sti
add
cmp
or
aas
pop
cmp
cwde
xor
and
jns
jb
(bad)
in
rol
std
jnp
into
push
push
js
or
pop
cmp
mov
pop
sub
lahf
lock
(bad)
in
ret
cmp
fdivr
repnz
jg
pop
ins
pop
hlt
xchg
(bad)
mov
cmps
ins
ret
je
pusha
sub
xor
push
pusha
push
mov
jns
hlt
(bad)
jno
lea
mov
pusha
mov
add
lea
push
jns
jb
push
sbb
pop
and
sub
add
sbb
hlt
pop
out
rcl
add
adc
iret
pop
dec
inc
mov
or
adc
push
call
movs
pop
xlat
jns
and
cmps
or
fst
stc
mov
cmps
cmp
icebp
jns
jp
call
scas
and
test
add
mov
mov
sub
mov
inc
dec
loop
ds
outs
and
jo
push
mov
sub
hlt
cmp
bound
dec
js
std
sar
int3
jns
xchg
adc
mov
inc
clc
mov
sub
scas
ficom
leave
pop
int3
jl
dec
xor
pop
icebp
mov
add
mov
(bad)
repz
dec
push
addr16
inc
imul
shl
int
cmp
pop
inc
lods
scas
jnp
adc
aad
or
mov
stc
pop
inc
jb
pop
(bad)
fs
adc
lds
loop
loope
std
rcl
jg
pop
cmp
shl
or
fadd
sub
out
dec
fwait
jl
ins
adc
jl
imul
cs
jne
adc
cmp
xchg
inc
shl
idiv
xchg
jmp
and
bound
cmp
cmp
enter
int
mov
or
mov
cs
ins
mov
adc
xchg
jle
push
xchg
jo
iret
xor
pushf
repz
mov
pop
jmp
ret
jb
lods
out
mov
inc
mov
pop
imul
push
pop
and
add
or
pusha
int3
js
fild
movs
fcomp
shl
mov
jp
dec
scas
jl
sbb
sub
mov
cmp
jae
sbb
mov
xlat
test
cdq
adc
and
pop
mov
gs
(bad)
in
leave
(bad)
push
test
and
xor
dec
inc
cli
push
sbb
fsub
scas
dec
adc
sbb
popa
or
mov
mov
mov
sti
mov
hlt
sti
aas
outs
test
mov
fs
and
mov
ins
fcom
xchg
or
fwait
mov
fdiv
jb
call
out
lock
bound
ja
jno
pop
mov
cmp
inc
push
xor
in
jp
adc
rol
mov
inc
xor
xor
and
or
dec
push
stos
shr
mov
adc
gs
in
popf
push
mov
mov
jmp
cmps
(bad)
(bad)
ss
aad
sti
int3
pop
mov
xchg
sbb
mov
sub
or
push
rcr
push
or
das
pop
leave
jno
xchg
pop
fmul
pop
inc
pop
scas
adc
adc
add
mov
retf
jmp
mov
jp
loopne
dec
adc
cmp
dec
jmp
stos
mov
fsubr
shl
adc
adc
sub
fnsave
jmp
test
std
std
cwde
push
push
les
sbb
xor
pushw
div
lods
das
sub
ins
cmp
pop
or
pusha
rcr
fst
inc
pop
cmp
jl
mov
xchg
mov
mov
test
xchg
jbe
sahf
retf
xlat
stc
and
sar
js
ins
jns
push
mov
icebp
ds
jmp
dec
xchg
loopne
mov
mov
lods
repnz
and
pop
nop
pop
mov
sbb
pop
mov
add
adc
call
ins
adc
xor
in
sub
cli
mov
shl
adc
out
ret
dec
jno
jno
add
cmp
es
xor
call
xor
mov
sar
mov
push
and
rol
jns
xor
std
xor
dec
pop
mov
adc
add
inc
movs
push
(bad)
push
imul
test
test
lods
dec
add
or
mov
xchg
mov
and
test
or
(bad)
jge
rcr
enter
mov
mov
faddp
shl
cmp
mov
sbb
adc
jb
not
jae
mov
xor
inc
jns
sar
lods
rep
scas
fisubr
dec
rol
adc
aad
mov
pop
xor
jno
into
(bad)
enter
xchg
mov
mov
enter
fwait
scas
dec
pushf
jae
mov
pushf
imul
jnp
ins
pop
xor
outs
test
mov
fcmove
lea
test
stos
sub
fisttp
ja
dec
leave
in
pop
sub
out
add
neg
inc
mov
push
movs
mov
pop
(bad)
mov
sbb
add
or
test
clc
hlt
jmp
std
in
jp
push
(bad)
out
ficomp
fisubr
mov
call
lods
push
adc
add
jg
mov
mov
shl
ret
lock
in
test
jno
ss
loopne
pusha
xor
or
jle
shr
push
add
jne
or
sub
fs
in
jno
call
push
fisubr
in
xlat
pop
xchg
and
and
call
pop
ret
push
pop
pop
mov
nop
mov
jns
jl
or
mov
stos
jle
pushf
add
aaa
inc
inc
xor
mov
dec
push
sbb
sbb
fcmovb
xor
or
jl
and
dec
adc
and
sahf
mov
sar
jg
and
add
mov
aad
sbb
xor
pop
mov
pop
rcl
fild
xor
dec
jp
jecxz
imul
cmp
mov
sbb
mov
jmp
add
push
jp
cmp
jl
out
push
pop
lods
inc
cdq
pop
jmp
push
sbb
bound
jae
dec
adc
adc
fsubr
add
scas
xchg
xchg
loope
push
and
(bad)
shl
xlat
cmc
loop
and
arpl
mov
daa
ror
shl
sub
sar
cmp
cwde
out
aam
sub
mov
cmps
push
int
jns
xchg
into
ins
das
lahf
ins
adc
mov
mov
dec
cmp
pop
xchg
pop
adc
test
xchg
les
sbb
push
inc
arpl
push
jmp
sub
and
movs
jbe
sbb
bnd
pop
adc
test
call
sti
sbb
jmp
mov
ret
adc
rcr
cld
push
dec
pop
loop
gs
mov
pushf
xchg
or
sbb
int
push
daa
movs
imul
mov
adc
(bad)
dec
loopne
mov
mov
cld
daa
leave
aas
cmp
in
dec
(bad)
jne
xchg
sub
sbb
inc
icebp
scas
enter
shr
add
push
and
xchg
mov
stos
sub
out
pop
or
dec
and
pushf
call
inc
xor
aad
jns
pop
sub
dec
out
pop
push
fistp
sbb
adc
xchg
push
add
mov
sub
ds
dec
cwde
in
and
xor
xor
jbe
enter
inc
pop
pop
imul
xor
jmp
push
mov
clc
xchg
inc
mov
cmp
mov
es
fcom
mov
jns
jg
sub
mov
xchg
pop
or
sti
mov
mov
jbe
fmul
sub
int
jg
pop
jno
pop
add
pop
dec
ficomp
add
outs
add
ins
fs
sub
jl
ret
sub
sub
lahf
jmp
dec
scas
add
and
loop
js
hlt
cmp
mov
fmul
loope
add
inc
iret
mov
cdq
clc
mov
dec
scas
aam
out
lods
fs
outs
inc
inc
xor
add
sbb
outs
retf
les
and
cmp
mov
xchg
ficom
out
fwait
add
stos
and
movs
inc
adc
mov
shl
js
bound
rol
mov
popf
les
jmp
xor
mov
dec
or
pop
(bad)
imul
ss
(bad)
(bad)
xor
push
js
ret
adc
mov
inc
mov
lahf
jecxz
es
pop
adc
xchg
test
inc
mov
inc
jo
and
(bad)
out
jmp
dec
pop
jnp
test
es
sbb
jp
imul
retf
or
mov
stos
inc
xor
xor
icebp
arpl
mov
jb
adc
mov
push
in
addr16
inc
inc
ja
sub
stos
adc
(bad)
out
ret
or
scas
data16
dec
mov
mov
adc
jo
inc
pushf
mov
stos
inc
aaa
cmp
outs
pop
lea
fadd
inc
mov
pop
and
lds
mov
pop
sti
adc
sub
mov
xor
mov
lods
xchg
pop
ds
sub
push
mov
sbb
aas
mov
pop
je
or
sbb
xchg
inc
push
jl
xor
mov
push
pushf
jb
test
sub
es
or
pop
outs
mov
mov
jbe
leave
fcmovne
fsubr
stos
loop
popa
loope
sub
cmps
adc
jnp
data16
inc
and
inc
push
jmp
cmc
into
loope
jns
mov
push
xor
js
push
lods
jne
out
imul
test
les
retf
cmp
in
xchg
xor
dec
cmps
xchg
outs
jge
sub
mov
jl
outs
scas
int3
ret
jae
retf
mov
retf
and
sbb
add
jle
adc
mov
and
ficom
adc
push
shl
popf
repnz
push
scas
test
fsubr
and
fst
aaa
adc
out
push
dec
or
mov
nop
adc
fild
in
mov
xlat
xchg
sub
dec
adc
sbb
mov
add
or
test
test
ret
mov
mov
jle
inc
push
sub
test
les
out
push
jno
jmp
jae
mov
into
mov
call
dec
cmc
fiadd
pushf
sub
sub
loopne
stc
movs
push
vmwrite
mov
mov
arpl
adc
add
jno
pop
jb
(bad)
rol
cdq
stc
dec
fisubr
shl
loopne
(bad)
outs
inc
in
adc
jecxz
inc
dec
(bad)
cmp
mov
sahf
dec
rcl
sbb
fs
and
fidiv
out
inc
fist
mov
enter
dec
adc
mov
test
mov
jns
lods
dec
sbb
mov
jmp
shl
dec
inc
data16
out
inc
cs
dec
movs
ins
jp
mov
cmp
pop
imul
push
shr
jb
retf
loop
ins
push
adc
mov
jns
push
inc
and
sar
pusha
outs
in
mov
jne
mov
sub
lods
xor
cmove
dec
aaa
or
cld
mov
(bad)
repnz
dec
push
in
push
repz
adc
jge
mov
mov
sbb
adc
pop
pop
push
out
mov
mov
ja
mov
in
rol
test
ds
mov
mov
in
xor
or
repnz
pop
xor
test
cmp
mov
ret
into
cmps
push
sbb
retf
jmp
push
jge
jp
push
call
jg
mov
dec
iret
cmp
dec
mov
mov
das
test
(bad)
fsub
jl
cmovs
rol
inc
(bad)
and
cs
jae
adc
scas
cld
je
push
jl
xor
fs
pop
mov
fisub
push
scas
jmp
mov
pop
stos
and
ror
sub
dec
or
xor
xor
pop
fisubr
pop
mov
(bad)
push
inc
loope
sahf
hlt
out
fisttp
mov
cmp
or
clc
sbb
add
sub
mov
adc
mov
test
xchg
pop
dec
mov
loopne
pop
and
and
pushf
cmp
(bad)
(bad)
dec
mov
mov
das
xor
mov
rol
or
mov
dec
fcom
mov
js
add
scas
ja
sbb
out
pop
pop
push
or
pop
sahf
push
call
sub
mov
ss
scas
add
rcl
fsubr
icebp
test
lods
arpl
sub
mov
pop
popa
fwait
add
data16
cmps
jbe
cmp
loop
inc
jge
xor
or
mov
mov
adc
retf
inc
sbb
xor
pusha
mov
(bad)
jmp
aas
dec
lock
inc
mov
sti
les
add
lds
push
jb
and
dec
stc
je
push
call
ins
push
pop
fld
jl
js
cmc
push
es
pop
jg
out
das
enter
data16
(bad)
bound
inc
(bad)
cmps
dec
bound
daa
or
hlt
stos
mov
lods
out
jmp
push
mov
int3
mov
jo
(bad)
mov
out
nop
ss
fdiv
xor
mov
push
test
add
retf
(bad)
mov
inc
mov
scas
jmp
fucomi
stc
add
cs
es
mov
push
cmp
adc
mov
or
push
and
add
inc
inc
push
sahf
adc
xchg
sub
dec
(bad)
xlat
jecxz
xchg
js
shl
sbb
imul
stos
addr16
mov
jecxz
pop
arpl
mov
jecxz
mov
jne
pop
pop
shl
pop
sub
push
and
mov
cs
mov
xchg
fs
inc
or
outs
sbb
das
shufps
jl
inc
pop
xor
scas
rol
jo
lahf
lods
outs
pop
pop
dec
inc
fs
mov
cld
repnz
pop
inc
shl
add
pop
jp
je
scas
mov
js
fsub
push
lock
daa
test
aas
and
imul
enter
(bad)
hlt
cmps
inc
push
aad
inc
pushf
jmp
mov
push
dec
cdq
call
in
mov
sbb
dec
inc
test
test
popf
mov
or
movs
scas
mov
int3
dec
call
(bad)
push
js
xor
fcom
xchg
bound
mov
stos
or
fmul
cld
jmp
pop
or
xor
inc
cmp
out
icebp
cmp
push
sbb
pop
sub
stos
sub
mov
out
lock
jo
int
aaa
(bad)
aad
or
push
int
jns
cmp
nop
ja
ins
mov
jae
js
jno
in
jl
dec
push
xchg
sbb
std
mov
fwait
iret
sbb
(bad)
ror
pop
push
sti
stos
inc
mov
jae
adc
dec
dec
sub
push
or
dec
inc
fsub
dec
(bad)
cmp
cmp
ins
rol
fsincos
mov
movs
xchg
loope
xor
sbb
add
or
rol
push
aam
out
and
int3
inc
and
sub
clc
pop
dec
xchg
cmp
jbe
push
repz
adc
mov
mov
sbb
sub
aam
(bad)
ret
cmc
das
jmp
pop
fist
div
push
mov
sbb
jp
cmp
shl
div
mov
xor
out
pop
pusha
loope
aad
rcr
pop
jns
icebp
test
sbb
in
dec
fisttp
jge
mov
lods
or
stos
jbe
leavew
cmps
push
pop
bound
xchg
xor
mov
pop
mov
das
aas
push
add
shl
push
fwait
add
mov
sbb
sbb
inc
loop
pushf
fild
int
ja
arpl
test
sub
mov
pop
pop
loop
push
out
pop
sbb
scas
push
mov
jnp
aas
ins
imul
sub
jb
daa
cld
push
(bad)
push
aad
fild
add
sar
and
movs
add
add
in
sbb
sti
dec
fs
cmp
jp
jmp
adc
mov
or
sbb
sub
(bad)
sbb
fwait
cmps
outs
repz
jae
retf
ja
and
pop
lods
bound
mov
mov
pop
xor
fnstcw
dec
adc
mov
add
out
lods
loop
das
sbb
out
dec
cmp
xchg
dec
sub
rol
jo
xchg
mov
jns
ja
mov
pop
fild
fwait
push
pusha
in
cli
setns
lods
cmp
les
ror
aam
lods
les
arpl
jbe
into
sub
xchg
push
outs
xchg
mov
and
adc
ins
and
mov
push
in
jnp
fdivr
loop
mov
pop
loop
mov
inc
and
inc
fidivr
aaa
in
out
sbb
cwd
dec
and
in
adc
rcr
push
fs
dec
loopne
lods
out
fs
or
jns
lods
mov
imul
loopne
shr
cli
xlat
cmps
fld
sar
shr
xchg
std
jle
popf
mov
xor
push
push
nop
inc
pop
jmp
push
shr
xlat
test
mov
inc
test
push
test
push
icebp
das
shr
(bad)
sub
jns
or
leave
pusha
movs
adc
dec
or
js
cmp
dec
aas
xchg
test
pop
mov
mov
dec
retf
push
xor
ins
call
pop
push
jmp
enter
aam
inc
adc
and
jl
popa
popa
cld
mov
shl
push
imul
inc
cmp
xchg
and
and
popf
pop
enter
mov
out
test
mov
retf
sbb
jnp
pop
popf
mov
inc
imul
jmp
sbb
out
out
(bad)
sti
jmp
shr
(bad)
xor
dec
hlt
jmp
mov
fld
popa
loopne
push
cdq
jne
xor
fs
jp
ret
push
push
jno
lock
jbe
dec
retf
inc
dec
push
push
xchg
outs
dec
fsub
in
outs
in
pop
loopne
push
jmp
dec
ins
lea
lahf
or
xchg
jmp
inc
int
mov
inc
push
cs
pop
jnp
int
(bad)
mov
out
mov
mov
test
and
cmps
(bad)
mov
daa
dec
dec
cwde
jae
and
sahf
test
cmp
mov
jne
dec
xchg
movs
retf
dec
sbb
xchg
push
add
and
loopne
add
aad
mov
xor
inc
(bad)
mov
add
mov
mov
cmps
xchg
push
sbb
popa
adc
pushf
inc
dec
fstp
mov
adc
ret
in
in
jle
jge
jp
sahf
loope
pop
lods
xchg
punpckhbw
mov
xor
jp
xor
sahf
int3
mov
ins
push
retf
sbb
cmps
xor
aas
data16
push
ins
adc
in
sub
cli
mov
xor
ins
arpl
mov
xor
add
rcr
push
mov
sar
sbb
mov
int
shl
cmps
dec
dec
mov
in
sub
cmp
jle
pushf
shl
mov
push
pop
adc
and
mov
jmp
iret
pop
(bad)
fdiv
imul
xchg
push
je
and
scas
sar
or
imul
shr
mov
jnp
xor
fbld
in
or
mov
loopne
mov
xchg
aam
push
movs
sbb
sbb
xchg
ja
fimul
pusha
scas
xor
or
adc
fwait
push
mov
call
loop
pop
mov
xor
mov
xchg
stc
mov
xlat
(bad)
or
jae
fistp
xor
aas
mov
dec
fcomp
xor
mov
sahf
in
daa
icebp
mov
imul
jae
inc
xor
push
outs
jle
arpl
xchg
sbb
dec
push
pop
adc
sbb
jno
dec
cmp
adc
in
sub
sbb
lahf
and
jp
sbb
and
ja
out
leave
cli
hlt
rcr
or
mov
inc
add
ror
mov
pushf
add
inc
sub
jg
cmp
mov
mov
ds
jns
mov
or
mov
pop
sahf
and
out
cmp
mov
cmps
mov
mov
fs
mov
das
cli
sbb
inc
jns
cmp
idiv
mov
aas
sar
icebp
add
mov
fldenv
shl
enter
add
pop
sub
cmp
mov
popf
xchg
xor
cs
jb
push
dec
or
aam
nop
in
sub
cmps
nop
movs
sbb
adc
(bad)
aad
push
int
dec
inc
imul
(bad)
test
sub
out
dec
push
or
cmp
sub
mov
sub
jb
rcl
cmp
(bad)
in
into
pop
cmp
dec
xor
or
dec
xchg
lock
dec
test
xor
int3
mov
sbb
scas
cld
push
inc
scas
adc
out
mov
xor
stos
push
repz
scas
mov
and
aas
stos
ss
sub
push
sub
xor
mov
sbb
cli
mov
mov
in
cmp
out
mov
sti
ss
mov
add
(bad)
adc
sub
out
int3
mov
test
sub
lds
sbb
stc
pusha
and
mov
lds
jnp
call
inc
aad
inc
mov
xor
stc
aad
icebp
out
inc
(bad)
dec
je
mov
retf
inc
imul
push
std
adc
aaa
aaa
mov
(bad)
fild
sub
add
and
jae
xchg
data16
mov
jmp
pop
push
xor
gs
adc
jle
push
mov
(bad)
(bad)
mov
lods
ins
push
das
out
pop
gs
mul
out
push
jnp
inc
inc
sub
(bad)
push
out
(bad)
and
fs
(bad)
fisub
ins
out
dec
mov
rcl
mov
(bad)
fnstcw
mov
ds
clc
push
int3
ds
mov
(bad)
cmc
xchg
(bad)
popf
idiv
mov
xor
imul
inc
sub
clc
cwde
lock
jp
mov
loopne
dec
xchg
ins
aad
push
push
sub
setno
adc
xlat
pop
movs
adc
xchg
pushf
adc
and
(bad)
pop
fidivr
pop
or
jecxz
pop
jnp
dec
jmp
rcl
cwde
mov
enter
mov
jb
inc
sub
(bad)
gs
les
nop
inc
not
aaa
inc
fmul
daa
in
sbb
inc
adc
mov
xchg
sub
sar
jmp
jne
or
hlt
mov
cli
aam
repz
in
pop
mov
dec
sbb
mov
pop
cld
loope
bound
add
sub
clc
dec
push
(bad)
inc
mov
fdiv
ror
mov
sub
imul
jmp
add
jecxz
cmp
add
inc
mov
pop
and
fcomp
call
adc
mov
xchg
ret
jmp
(bad)
cmps
jmp
les
into
inc
retf
adc
mov
(bad)
sub
jmp
call
ret
add
ins
mov
sub
test
(bad)
mov
xchg
jmp
inc
mul
add
adc
sahf
(bad)
jge
test
mov
and
in
in
push
inc
or
push
daa
adc
push
mov
ror
xchg
sar
(bad)
jns
ins
rol
sbb
int
inc
ins
pusha
sub
in
loope
pop
push
dec
xchg
nop
stos
pop
jo
inc
repz
mov
jb
lds
cdq
mov
pop
lods
cmp
ret
cmp
(bad)
loopne
cmps
(bad)
xchg
scas
mov
mov
and
mov
push
neg
add
out
inc
fild
inc
out
sub
mov
jmp
push
jp
mov
pop
adc
fisubr
inc
repz
add
mov
test
push
(bad)
repz
jmp
mov
dec
sar
test
cmps
inc
jmp
stc
and
inc
call
mov
adc
pop
mov
sbb
push
and
fsubr
mov
add
mov
cmp
xor
add
dec
ret
into
stos
cwde
js
jnp
cmp
pop
and
icebp
aam
sbb
inc
or
and
pop
or
mov
(bad)
into
in
mov
xchg
dec
pop
dec
sub
(bad)
int3
cli
jnp
pop
outs
fst
cmp
inc
fidivr
adc
scas
into
popa
popa
loopne
xchg
push
jno
jecxz
sub
sahf
hlt
mov
xor
aaa
jo
ins
or
fimul
stos
jmp
stos
ins
xor
pop
bound
cmp
mov
aam
mov
or
das
and
push
xor
rol
lods
int
loopne
test
dec
jmp
mov
and
in
or
pop
repz
in
(bad)
pop
jbe
dec
repz
std
rcr
mov
in
cmp
dec
fmul
jae
stc
js
ss
push
mov
pushf
mov
lahf
out
aas
popa
mov
fucomp
sub
(bad)
aaa
es
xor
inc
aam
(bad)
xchg
xor
pop
mov
xchg
push
mov
push
inc
ret
mov
xchg
mov
xchg
ror
fadd
dec
addr16
dec
sti
pushf
or
jae
jbe
and
mov
xlat
mov
xchg
xchg
xchg
mov
mov
retf
jne
bnd
lahf
loop
jb
mov
lock
call
jge
adc
lea
xchg
aad
add
std
sub
ins
or
cmp
inc
stc
add
sub
xchg
add
adc
cmp
ins
add
js
in
mov
push
dec
mov
xchg
imul
mov
push
in
pop
xlat
jb
in
inc
call
stos
adc
pop
pop
add
or
dec
cmp
stos
mov
xchg
sahf
out
rcr
sar
push
mov
(bad)
sub
popa
fwait
outs
jae
sbb
movq
push
lock
scas
mov
popf
sar
jns
test
aam
sahf
imul
push
(bad)
fisub
jns
stc
add
stos
lods
and
xor
(bad)
int
inc
cmp
cmps
std
jne
pop
fisttp
xchg
and
sub
pop
out
jno
mov
mov
mov
cmps
aaa
add
jl
mov
cmc
out
cli
sub
leave
movs
pop
xor
cmp
fwait
xchg
icebp
mov
imul
jae
add
cli
push
ret
mov
daa
cmps
in
jmp
mov
xor
out
(bad)
push
mov
pop
stos
lods
in
xchg
xchg
scas
ins
ror
adc
jb
out
jmp
push
or
adc
aad
(bad)
adc
push
pop
test
inc
rcr
ja
clc
jp
cmps
arpl
cwd
inc
push
ret
and
arpl
add
mov
cmp
iret
(bad)
sbb
xchg
mov
sti
loope
sub
mov
in
idiv
int3
push
popf
iret
push
cmp
dec
or
ins
inc
je
sbb
add
mov
outs
ins
cmp
and
xlat
sar
rcr
ficom
mov
outs
jb
xchg
mov
sbb
mov
sbb
(bad)
sbb
jns
xor
fiadd
jl
js
dec
dec
or
jl
xchg
addr16
in
or
mov
in
in
popf
popf
mov
mov
lods
loop
pop
fmul
add
fwait
mov
and
mov
jno
ins
aas
mov
sbb
fcmove
push
(bad)
out
jbe
xchg
mov
lods
iret
cmps
nop
mov
mov
mov
ja
in
add
mov
pop
clc
(bad)
ins
fisubr
push
fld
cmp
adc
out
lods
or
and
push
rol
add
neg
pop
mov
or
cwde
lock
das
pop
mov
aad
test
push
push
add
data16
fcomp
nop
dec
push
les
pop
daa
jmp
es
retf
sbb
or
xor
lea
xchg
neg
mov
sbb
cmp
mov
daa
inc
cmp
retf
or
aaa
fsub
(bad)
jp
clc
popf
add
sbb
les
fnstcw
mov
(bad)
dec
push
movs
push
mov
ss
xchg
inc
xchg
ret
pop
jg
push
int
pop
jae
cmps
mov
call
lods
inc
pop
mov
loope
fwait
xor
add
sbb
loope
loopne
adc
push
or
test
or
pop
clc
xchg
pop
or
icebp
fwait
cmps
clc
push
inc
ret
rcr
shr
and
adc
and
add
adc
mov
js
pushf
cmp
shl
mov
sahf
loop
push
mov
pop
pop
push
sbb
add
fwait
gs
test
les
adc
inc
ficomp
mov
in
pop
mov
call
neg
in
cmp
ins
bound
adc
mov
adc
xchg
fdivr
add
sbb
imul
jns
add
cdq
xchg
jb
or
jb
pop
repz
and
aad
ja
cmc
outs
xor
push
pushf
cmc
cmp
pop
sub
mov
neg
inc
cld
es
ret
mov
stc
int
aad
pop
jno
sub
pop
in
nop
jmp
adc
rcr
lods
pop
fldcw
xor
pusha
xchg
std
fld
mov
mov
inc
(bad)
out
ret
xchg
aad
mov
jge
imul
aaa
push
ds
mov
bound
mov
je
movs
sbb
push
cmp
punpckhdq
int
aam
test
frstor
in
adc
sub
jbe
add
movs
(bad)
fsub
inc
lahf
outs
loopne
ja
cmp
gs
ss
jmp
xor
or
ins
rol
add
sub
sub
mov
int3
push
jno
jae
in
sbb
push
in
nop
iret
loop
adc
inc
test
or
jl
push
xchg
push
sbb
pop
stc
mov
dec
sub
aaa
inc
push
lods
(bad)
jns
adc
lahf
mov
cs
adc
sub
mov
rep
es
add
xor
pop
xor
scas
fild
leave
cdq
mov
aam
cmp
push
test
sbb
bound
and
mov
pop
sahf
xchg
(bad)
mov
sbb
adc
movs
fsub
out
cs
pop
pop
sub
inc
fnstcw
cmp
inc
mov
inc
lods
xor
(bad)
jg
dec
jmp
and
jo
xor
ficom
(bad)
loopne
cmps
sub
dec
pusha
mov
dec
mov
mov
xor
dec
sar
and
add
fwait
and
fsubp
or
daa
fld
lods
fcomi
pusha
jmp
fs
mov
in
xor
push
cmp
data16
pop
and
(bad)
jmp
pop
add
push
test
das
stos
xchg
inc
mov
out
mov
add
int
cs
pop
test
dec
loope
sbb
push
loope
(bad)
imul
pop
retf
mov
pop
(bad)
mov
and
dec
push
movs
cmp
mov
cld
fidivr
adc
jmp
ss
xchg
dec
xor
sbb
dec
pop
aam
mov
adc
pusha
mov
ja
sub
std
movs
(bad)
lahf
je
cmp
cmps
add
rol
fs
test
repnz
or
dec
pusha
retf
dec
ss
mov
push
pushf
pop
mov
sub
inc
add
aad
aas
push
adc
sahf
retf
faddp
dec
mov
test
mov
or
ror
scas
(bad)
jmp
fwait
stos
pushf
sub
adc
sub
fidivr
jns
mov
gs
dec
in
sub
mov
shr
scas
xchg
or
cdq
sbb
pop
jbe
mov
aam
sbb
mov
shl
repnz
das
mov
cdq
dec
daa
pop
(bad)
add
mov
cld
xor
ror
lods
push
(bad)
jae
jmp
and
(bad)
pop
jmp
pop
retf
pop
(bad)
cli
fild
iret
arpl
mov
loope
stos
(bad)
lahf
shl
and
inc
xor
std
inc
dec
or
cmc
pop
out
mov
pop
mov
xchg
mov
mov
sbb
fwait
jmp
cmps
cmp
inc
dec
js
xlat
pop
ror
xor
outs
leave
dec
mul
cmps
mov
retf
scas
int3
mov
fistp
repz
es
add
inc
aam
xchg
(bad)
out
adc
pop
fcmovbe
sub
mov
and
mov
sbb
sbb
pop
out
hlt
jg
aam
cmp
ja
adc
push
gs
aas
sbb
jbe
cmps
mov
cmps
inc
push
mov
loope
call
std
movs
(bad)
sub
xchg
sahf
fwait
ret
cmp
mov
pop
fnstenv
inc
xchg
mov
ins
in
xor
leave
or
jg
mov
jno
dec
pop
dec
inc
adc
sub
ss
pop
scas
pusha
fwait
shl
test
inc
or
push
jnp
fcmove
push
ins
mov
mov
and
fsub
cs
cmc
ror
pop
add
inc
xchg
cmps
inc
jl
ret
xor
dec
fstp
mov
ins
scas
and
xchg
retf
sub
shr
aad
call
test
cli
outs
mov
call
leave
pop
aaa
sti
sbb
push
mov
inc
dec
sbb
add
mov
xor
(bad)
pop
adc
or
test
and
outs
push
test
jb
mov
sub
lods
cmps
or
inc
jecxz
call
sub
pop
out
mov
out
adc
movs
rcl
add
or
mov
call
hlt
call
xor
adc
inc
aas
cmps
dec
es
sbb
loop
add
jnp
add
je
or
mov
iret
fild
test
mov
mov
jle
bound
fldenv
js
sbb
cmp
pop
and
cdq
adc
push
sar
xchg
cmp
neg
xchg
repnz
test
inc
or
lea
bound
mov
(bad)
pusha
rol
out
pop
ss
jmp
stos
aam
fwait
pop
sbb
mov
sbb
pop
cmp
imul
jl
ins
mov
cmp
dec
cmps
loopne
ins
repnz
xlat
sub
je
popf
retf
hlt
or
jb
lods
(bad)
jmp
mov
rcl
stos
add
call
loop
je
push
add
cmp
loopne
mov
and
out
test
mov
jmp
aad
ins
push
mov
push
push
xchg
popa
sar
retf
outs
int3
xor
mov
aad
pop
stc
pushf
push
mov
add
aaa
xchg
push
cmc
mov
jmp
dec
test
jne
js
inc
pop
fwait
ins
add
movs
mov
push
cmc
stos
sbb
mov
cld
push
into
fisub
sbb
movs
fsub
sub
ins
pusha
or
mov
cwde
movs
inc
jb
adc
fist
pop
in
movs
mov
in
fild
std
and
mov
fmul
xchg
stos
mov
out
es
adc
js
cmp
repnz
cld
movs
das
sbb
push
cmc
jp
shl
cmp
test
jnp
push
push
in
sub
pop
jl
ins
xchg
inc
arpl
xor
adc
in
mov
xchg
(bad)
push
outs
leave
sub
xor
jg
jae
add
es
movs
pop
test
push
or
sahf
cmp
test
je
add
mov
jmp
div
adc
jp
adc
mov
inc
out
dec
pop
daa
fwait
sub
outs
add
sbb
pop
fmul
scas
aas
jecxz
inc
adc
aaa
rcl
xchg
(bad)
fsub
ds
mov
in
sbb
out
js
je
loope
loope
bound
sbb
xor
xchg
iret
xor
cwde
mov
nop
cmps
push
rcr
cmp
mov
mov
sub
jecxz
cmc
cmp
in
in
outs
popa
je
das
loop
movs
inc
iret
inc
cli
jns
mov
stc
test
pop
retf
jnp
mov
xchg
mov
or
data16
push
and
mov
repnz
xor
cwde
repz
mov
jo
je
sar
push
push
xor
add
clc
inc
fsubr
and
xchg
pushf
jne
jge
jge
and
and
popf
adc
out
(bad)
retf
xor
inc
repz
popa
arpl
pop
mov
inc
add
pusha
push
cmps
pop
xor
cmps
adc
sbb
jle
jne
jo
mov
ret
add
ins
nop
loop
xchg
rcl
mov
xchg
sar
mov
imul
sahf
iret
sbb
and
daa
sbb
mov
inc
dec
aaa
aaa
mov
cmp
scas
daa
add
vmovd
test
mov
xor
out
sub
out
retf
sub
xchg
sahf
es
bound
jb
out
lods
cdq
jl
mov
mov
movs
lock
lods
stos
jle
cmps
mov
out
lock
push
int3
out
int
or
jecxz
pop
sahf
lock
xor
cmp
shl
mov
xor
pop
xchg
leave
dec
pushf
jle
mov
shr
adc
clc
cmps
gs
mov
push
lsl
push
enter
scas
jecxz
imul
inc
fsubr
push
dec
adc
popf
jns
mov
push
iret
push
test
fbld
icebp
xor
out
icebp
cmp
ins
and
fiadd
iret
xor
pop
push
xchg
fs
mov
dec
mov
adc
cmc
adc
cmp
(bad)
mov
out
rcl
inc
lds
(bad)
xchg
retf
pop
push
popf
iret
test
cmps
mov
fcomp
fst
adc
jecxz
psrlw
or
dec
push
sbb
adc
mov
cli
sti
cli
outs
push
jge
leave
fist
fld
mov
in
lock
ds
xor
mov
retf
inc
(bad)
cmp
repz
or
sub
test
jecxz
push
fdiv
add
dec
xor
out
cmps
aas
rcr
jns
pusha
(bad)
movs
adc
mov
adc
sub
stos
pop
stos
aaa
cmp
loop
aam
mov
sbb
in
push
mov
sahf
and
inc
push
rcr
in
aas
cmp
sbb
inc
dec
shl
jb
add
aaa
push
scas
ret
outs
scas
sbb
push
xor
mov
fistp
sub
and
push
sub
add
mov
das
mov
add
inc
adc
pop
push
dec
and
and
mov
or
cmc
rcr
jne
out
aam
int
jge
shl
mov
in
cmps
and
or
sbb
push
loope
pop
test
mov
pop
pop
cmp
cmc
retf
cwde
aas
and
pop
mov
jmp
(bad)
adc
xchg
cmp
mov
leave
test
sbb
int3
int3
hlt
cmp
sub
cmp
inc
ins
pushw
push
xchg
fxch
jp
daa
sub
(bad)
ins
arpl
out
mov
mov
les
dec
sub
popf
fnstcw
and
jae
or
mov
jo
adc
cmps
pop
sbb
out
jecxz
fidivr
sub
retf
add
push
or
inc
xor
movs
jge
in
out
adc
mov
dec
(bad)
mov
cmp
je
adc
push
dec
in
aas
add
dec
iret
jge
into
test
push
mov
scas
pusha
inc
mov
add
movs
lds
jp
scas
xchg
ja
scas
scas
and
or
sbb
cld
fidivr
xchg
cdq
sbb
xchg
outs
test
outs
pop
mov
test
dec
aam
pusha
std
(bad)
mov
or
popf
mov
pop
mov
xor
add
pop
xor
xchg
fld
push
push
lods
(bad)
scas
pop
fs
mov
dec
mov
sub
data16
and
push
inc
sti
stos
push
add
jmp
cmp
xchg
adc
push
fsubr
js
out
jle
cmp
push
enter
sub
ds
scas
xchg
bound
jecxz
adc
lahf
add
or
mov
in
or
repnz
add
cmc
test
jo
sub
inc
push
lods
shl
(bad)
and
cwde
inc
push
in
inc
sete
mov
aam
jl
loop
inc
scas
fwait
push
(bad)
idiv
mov
mov
pop
xchg
in
imul
pop
sti
jmp
push
imul
rcl
push
call
dec
test
imul
adc
inc
rcl
push
mov
scas
shl
pop
push
inc
jmp
pop
rol
shl
or
imul
sub
xor
not
mov
jb
out
sbb
push
ret
gs
fcmovb
pop
jno
xlat
aam
push
neg
adc
inc
leave
jnp
xor
into
adc
xor
fcmovnu
addr16
cmp
xchg
xor
cmps
cmp
jbe
adc
(bad)
push
neg
and
jge
ret
popf
or
bound
lods
dec
sbb
daa
sbb
jb
mov
sbb
std
xlat
imul
push
out
push
out
dec
ja
into
xchg
shl
cdq
neg
dec
imul
outs
call
test
retf
add
mov
jp
push
add
add
iret
jne
mov
jle
mov
cmp
retf
test
lds
add
sbb
push
ins
mov
mov
dec
adc
int
lds
pop
fdiv
ret
pop
mov
ins
scas
aam
xchg
sbb
call
jns
mov
ficom
movs
(bad)
lods
lea
(bad)
add
dec
and
and
push
dec
ret
shl
inc
into
jge
push
xor
pop
sbb
js
ins
push
je
mov
jmp
fld
out
(bad)
in
push
push
push
jb
cmp
in
pmovmskb
test
outs
dec
clc
out
xor
fwait
lods
xlat
jo
add
fiadd
push
xchg
adc
dec
mul
jecxz
dec
(bad)
cdq
jle
(bad)
mov
inc
pushf
sub
lea
sub
jle
repnz
test
xor
loope
mov
or
jecxz
and
(bad)
add
pop
mov
leave
or
imul
mov
jns
pop
jecxz
jo
mov
xor
test
cmc
scas
dec
lods
pop
cdq
sub
mov
pop
aad
out
mov
dec
lock
retf
das
add
daa
aam
arpl
cwde
mov
pop
xchg
push
jmp
mov
mov
cld
shl
push
loope
imul
mov
push
sub
or
or
div
xchg
es
int
or
pushf
push
bound
fcmovu
inc
lods
jnp
rol
ja
adc
mov
test
jb
leave
inc
inc
rcl
mov
jne
je
dec
add
js
pusha
test
push
fwait
mov
pushf
stos
xor
daa
out
jp
adc
push
pushf
repnz
mov
ret
xchg
inc
cdq
cmps
(bad)
imul
nop
inc
cmps
fist
mov
sbb
shr
jno
sub
dec
clc
aas
test
in
mov
mov
cmp
stos
mov
in
pop
ds
pop
std
imul
jae
mov
push
sbb
sbb
gs
fs
popf
enter
mov
adc
and
cmps
xchg
and
inc
push
fcom
das
not
mov
(bad)
adc
mov
mov
adc
xor
stc
push
imul
repz
sbb
inc
into
call
push
mov
sbb
add
shr
aas
sar
(bad)
iret
and
data16
fadd
sub
jnp
or
pop
sti
mov
test
or
cwde
push
jbe
xor
and
std
mov
sub
xor
xor
test
sbb
pushf
test
push
dec
mov
mov
stos
add
(bad)
cmps
mov
fwait
out
push
pop
dec
jp
stc
jge
jo
pop
rol
jmp
mulps
js
loop
(bad)
inc
push
pop
and
push
cmp
bound
sbb
out
cmp
inc
mov
xchg
sub
dec
nop
jbe
mov
rcl
xchg
inc
jbe
repnz
pop
retf
aaa
jns
dec
push
into
vpacksswb
test
mov
sbb
xchg
pop
mov
sti
out
dec
xor
or
jp
and
idiv
pop
mov
cmc
loopne
jbe
clc
enter
lods
add
adc
fiadd
in
pop
jne
mov
ret
pop
lods
mov
(bad)
dec
ficom
jmp
test
push
jne
jns
adc
mov
mov
outs
mov
lahf
lods
mov
push
and
sahf
das
sbb
lea
fiadd
or
mov
rcl
mov
fisttp
ja
test
pop
xchg
leave
jl
pinsrw
pop
push
aaa
jl
pusha
push
lock
pushf
sbb
cmp
leave
rcl
sub
xor
lea
xlat
pop
ss
pop
dec
not
(bad)
sahf
repnz
adc
leave
dec
inc
mov
ja
std
cs
movs
mov
jbe
mov
aad
pushf
rcl
ss
sbb
push
xor
fs
aas
movs
in
xchg
mov
push
in
repz
rcl
add
jno
mov
pusha
xor
(bad)
adc
and
inc
pusha
cmps
cwde
pop
sar
dec
jmp
fidivr
rcl
call
mov
cdq
xchg
rcl
or
add
fdiv
mov
fistp
cmc
loop
repz
adc
aad
cwde
inc
mov
movs
sbb
fucomp
out
ja
jge
pop
xor
sub
mov
jno
repnz
mov
fs
pop
cmc
mov
shr
outs
out
and
into
adc
fidiv
retf
add
xor
push
or
fcom
rol
repz
jle
in
aas
sqrtps
jae
mov
push
lods
(bad)
int3
mov
add
dec
rcr
es
call
jp
pop
jne
pop
adc
pop
or
mov
lods
scas
pop
int3
out
push
jbe
add
mov
or
push
and
jle
fs
dec
push
cdq
cwde
dec
xchg
pusha
rcl
dec
xor
rcl
jp
sub
mov
pop
jg
dec
shl
in
(bad)
jmp
and
imul
pop
mov
inc
(bad)
fwait
scas
sbb
(bad)
or
out
stos
enter
sbb
cs
fadd
and
das
adc
mov
nop
movs
jmp
sbb
clc
int
je
sahf
sti
push
xor
sub
cmp
inc
jmp
data16
pop
mov
cmps
in
mov
sub
mov
rol
xlat
popf
mov
stc
jmp
(bad)
jmp
push
jmp
cmp
cmp
sbb
test
add
and
inc
aad
mov
mov
mov
ficom
inc
loopne
sub
xchg
dec
and
scas
arpl
mov
mov
outs
inc
std
fsubr
iret
call
pusha
mov
ins
je
pop
mov
repz
and
rcr
out
sub
pop
adc
data16
cmp
and
sahf
push
retf
mov
out
jae
sub
es
sbb
les
jmp
or
aad
hlt
imul
xchg
cmps
out
fadd
arpl
mov
movs
icebp
sub
repnz
xor
imul
push
jp
rol
icebp
sub
mov
pushf
cmp
dec
pop
in
and
repnz
out
cmp
loopne
xor
repz
xchg
mov
pop
pop
push
cmp
rcl
add
sbb
nop
push
jno
cmps
popa
pop
mov
xchg
adc
push
das
dec
fdivp
repnz
push
jae
xor
mov
push
push
mov
mov
mov
fimul
mov
les
push
out
xor
inc
aas
mov
(bad)
pop
pop
ins
out
cmc
adc
mov
xchg
add
cwde
xchg
inc
cmc
pushf
loopne
es
dec
(bad)
mov
sbb
sbb
jno
sub
pop
std
push
pusha
adc
xor
cs
fnstcw
stos
arpl
cdq
mov
call
adc
pop
push
jbe
adc
and
xlat
adc
cmp
ins
ds
mov
popf
retf
clc
mov
dec
nop
sahf
ins
pop
push
mov
bound
mov
cmp
or
sbb
sbb
sbb
outs
mov
inc
pop
aam
mov
fmul
in
mov
daa
xchg
sar
dec
adc
int3
dec
and
rcr
std
sub
mov
stos
(bad)
jns
add
jnp
pop
leave
js
push
in
(bad)
xchg
fnsave
mov
lock
or
sahf
lea
jno
push
test
iret
xlat
outs
mov
inc
test
sar
aaa
jbe
scas
idiv
and
xchg
xchg
sahf
scas
call
sub
mov
(bad)
call
mov
jo
sub
sub
cli
add
int3
call
push
jbe
int3
mov
mov
(bad)
pop
dec
mov
retf
imul
lea
inc
add
jmp
add
dec
xchg
dec
(bad)
jmp
ds
daa
fist
fst
mov
add
jbe
jge
clc
es
mov
inc
lds
mov
cmps
adc
rcl
shl
xor
xlat
fwait
repnz
push
adc
in
pop
pop
cmc
shl
fstp
dec
xlat
cmp
adc
pop
push
data16
jge
add
xor
neg
dec
sbb
scas
lea
in
loope
pop
in
xchg
jp
inc
lahf
in
push
push
aad
stos
cmp
mov
push
sbb
push
cld
sub
test
pop
pop
mul
retf
mov
fwait
inc
fwait
push
call
in
sub
adc
cdq
sub
jmp
nop
and
mov
(bad)
aad
mov
xchg
ficom
cmp
retf
ds
push
ror
xchg
xor
push
ja
pop
sbb
jl
daa
fucomp
sahf
sub
adc
stc
xchg
dec
clc
sub
ret
inc
xchg
fst
dec
mov
add
popa
popa
cli
repnz
jae
inc
daa
lock
lahf
adc
jecxz
aaa
call
push
jne
and
ja
repz
add
int
adc
push
out
push
lahf
cmp
in
cmp
ja
js
aam
mov
and
sbb
sar
jmp
std
sbb
adc
mov
popa
bound
cmp
out
rcl
out
pop
inc
mov
sar
and
enter
dec
mov
jb
jbe
jle
gs
mov
mov
add
ins
or
or
in
dec
neg
pop
mov
mov
push
xor
lock
adc
aad
scas
add
shr
jge
push
fs
pop
jg
xor
pop
adc
and
or
das
sub
and
pop
mov
sbb
das
cmp
xor
mov
push
in
retf
test
pushf
jnp
clc
jbe
ss
push
mov
stos
repnz
leave
sbb
lock
cwde
adc
imul
retf
pop
and
pop
pushf
sti
and
ins
aaa
outs
jnp
std
aad
mov
cdq
push
cmp
das
in
xchg
into
fucomi
mov
pop
sub
cmp
out
xor
dec
pop
mov
xchg
fist
add
movs
and
sub
xor
aad
pop
shl
ds
sub
inc
imul
cmp
scas
dec
xchg
shl
stc
or
in
mov
xor
dec
pop
bound
pop
xor
or
outs
cmp
fwait
mov
sub
xor
xlat
add
movs
mov
xor
div
call
and
mov
test
in
sbb
sub
sub
lahf
dec
mov
pop
sub
xlat
retf
jnp
or
push
add
or
dec
ss
pop
data16
inc
std
inc
dec
outs
aam
mov
cmp
cmp
mov
(bad)
and
in
addr16
dec
mov
stc
mov
inc
ins
out
inc
ret
and
cmp
dec
frstor
jne
movs
dec
sub
or
cmp
cmc
(bad)
in
mov
(bad)
or
clc
xchg
xor
adc
aaa
sbb
and
cmp
mov
repnz
adc
iret
popf
retf
jl
xor
shl
aas
test
fcom
xchg
sub
fld
pop
(bad)
push
push
adc
mov
add
scas
sbb
ret
push
(bad)
mov
pop
inc
pop
mov
mov
ds
sub
repnz
repnz
and
aas
sti
movs
mov
les
mov
push
(bad)
pop
ret
out
push
fsub
fld
or
das
pop
push
bound
pop
call
mov
ror
in
sub
loopne
loop
add
cwde
mov
lods
push
pop
cmp
jl
mov
mov
sub
popa
sub
jmp
push
lock
xor
sub
ja
imul
sbb
cdq
call
mov
sbb
shl
pop
loopne
ins
adc
dec
dec
into
mov
fsub
sahf
outs
lea
jp
lods
cmc
jns
push
dec
pop
sbb
jl
xor
bswap
pop
popa
cmp
cmp
imul
mov
shl
xor
ret
call
push
mov
xchg
ret
loope
add
out
les
in
ficomp
(bad)
mov
ret
shl
pop
fisttp
and
sbb
loope
enter
sbb
push
jmp
int3
jo
inc
leave
fldcw
loopne
push
mov
jl
and
mov
pop
push
adc
nop
push
inc
cmp
popf
or
inc
addr16
out
daa
aad
enter
xchg
inc
or
sahf
(bad)
int3
push
mov
mov
dec
ret
push
(bad)
std
xchg
jae
push
dec
inc
xor
inc
inc
mov
and
fwait
and
mov
xchg
sbb
or
and
aas
jb
pop
pop
mul
cs
add
lahf
mov
je
jbe
ja
cwde
inc
aad
mov
sbb
push
aad
sbb
ins
popa
xchg
xchg
inc
push
add
loope
dec
clc
mov
push
fistp
scas
mov
and
shl
sub
push
jb
push
arpl
pop
(bad)
out
es
popf
lock
add
ficomp
retf
nop
cmp
in
addr16
mov
and
iret
xor
lahf
scas
mov
jmp
cmps
loopne
adc
out
or
hlt
pop
or
lock
push
mov
xor
cdq
ret
cli
jae
enter
or
test
rcr
mov
jbe
out
and
mov
arpl
sub
loopne
xchg
test
mov
mov
pushf
mov
push
dec
inc
ror
jbe
bound
inc
sbb
cmp
mov
dec
test
loop
jnp
jmp
cmp
test
jmp
gs
das
and
jge
or
adc
mov
push
and
add
mov
pop
fwait
xchg
std
(bad)
cmp
ss
or
out
xchg
sub
push
call
push
retf
stc
leave
fdivr
dec
and
fs
fmul
retf
call
mov
shl
popf
sbb
shl
sbb
nop
out
mov
popw
pop
jge
push
ret
rol
dec
or
mov
push
in
jmp
lahf
jne
and
jo
(bad)
inc
push
xchg
inc
aas
adc
retf
add
or
dec
daa
test
dec
dec
in
rcl
cdq
jne
xlat
adc
lock
jne
cmp
mov
ins
popa
mov
xchg
pusha
stos
(bad)
xor
call
fst
scas
sti
dec
mov
fdiv
addr16
cdq
mov
adc
xchg
fwait
sbb
jmp
xchg
mov
(bad)
sar
sti
outs
push
push
jns
cmp
ret
stos
sub
push
addr16
jns
clc
adc
cmp
jle
mov
sbb
adc
cwde
movs
jge
imul
rcl
outs
dec
nop
arpl
test
dec
push
mov
repz
icebp
dec
mov
cmps
mov
test
push
leave
jbe
cld
push
jno
add
ficom
add
mov
cmp
std
ret
xchg
fcmovnb
sub
mov
or
out
mov
or
cmps
xchg
pop
dec
outs
lock
adc
cdq
push
int
addr16
jmp
jmp
outs
sub
in
fs
fldenv
gs
xor
cmc
out
dec
mov
ins
mov
test
aad
cmps
mov
iret
and
and
xor
mov
mov
pop
jo
out
or
cdq
movs
pop
pushf
mov
ds
jae
outs
cmps
jmp
fist
push
cmp
fcomi
xchg
retf
and
push
adc
enter
ficomp
pusha
call
mov
mov
daa
test
out
sbb
xchg
js
xor
inc
imul
sbb
cwde
sbb
enter
ds
sbb
sbb
adc
cmp
outs
(bad)
xor
sbb
out
cmp
sti
sbb
push
xor
cmp
data16
mov
xor
adc
push
or
pop
scas
mov
mov
jl
xor
arpl
rol
stos
push
cmp
imul
cmp
adc
aas
mov
and
cld
inc
pop
mov
push
lea
xchg
add
js
jp
mov
or
or
outs
sbb
rcl
push
scas
int3
mov
sti
xor
jno
adc
pushf
adc
pop
mov
and
dec
push
sti
sub
(bad)
loop
mov
xchg
xchg
cmp
or
lds
cmp
cmp
call
xlat
sbb
jg
push
call
dec
push
push
xor
pop
xor
int
cli
js
xor
pop
enter
mov
dec
in
call
out
aas
inc
sbb
push
xchg
mov
leave
ror
mov
loope
bound
fnsave
imul
pop
xor
fimul
mov
lea
fwait
test
dec
addr16
push
sahf
ficomp
cmp
jmp
inc
aad
add
xchg
imul
sbb
inc
nop
add
stc
cmps
add
sub
mov
stc
dec
fldcw
ror
loope
or
jge
dec
or
xor
dec
push
mov
addr16
retf
loop
int
mov
sahf
retf
jno
pop
sub
xchg
mov
popf
jne
push
mov
jl
cmp
enter
mov
xor
xor
jle
mov
add
int
mov
pop
jno
push
cdq
sbb
adc
inc
add
cmp
lods
mov
fstp
mov
inc
or
lea
sbb
jae
or
push
fs
xchg
aad
in
pop
jns
sar
mov
stos
mov
movs
movs
loopne
sub
daa
sbb
xchg
icebp
(bad)
pop
aas
sub
mov
sub
or
inc
or
xchg
call
div
fdiv
push
fldcw
adc
xchg
jmp
loop
mov
adc
pop
xchg
call
jnp
call
test
pop
sub
jmp
daa
or
inc
dec
pxor
clc
jle
jecxz
lds
fsubr
sbb
ret
bound
leave
call
adc
inc
pop
or
or
fadd
pop
mov
mov
je
xchg
cld
add
mov
mov
jbe
pop
ror
cmps
and
enter
mov
ss
xor
push
fcom
cwde
scas
and
pop
push
or
daa
aas
mov
xor
xor
lock
stos
dec
ror
rcl
mov
shl
xchg
data16
or
fisttp
jb
mov
sub
icebp
dec
test
xchg
mul
push
or
jne
xor
mov
or
jo
fcomp
loop
pop
push
popa
fist
mov
jecxz
xchg
scas
scas
adc
daa
sahf
adc
cmp
ins
sahf
mov
rcr
(bad)
in
pop
out
dec
sub
lds
loop
aam
cld
cmps
in
mov
push
mov
xchg
pop
jmp
add
or
mov
mov
inc
shl
xchg
test
push
lds
or
push
and
retf
stos
sbb
ret
inc
fisttp
cli
enter
lock
inc
ds
push
pop
inc
ins
mov
imul
xchg
mov
clc
pop
(bad)
mov
ins
stos
cmp
nop
ins
retf
aam
adc
pop
ds
or
mov
arpl
scas
dec
dec
sar
aam
and
jns
int3
loop
sbb
sub
mov
aad
into
cld
sub
call
popa
push
add
mov
fisub
pushf
(bad)
jns
mov
mov
and
push
mov
in
inc
popf
xchg
xchg
xchg
mov
shl
ds
lock
jmp
jnp
(bad)
js
mov
adc
sub
xor
jecxz
loopne
pushf
dec
push
mov
pop
inc
cwde
jbe
add
call
pop
imul
addr16
and
lea
stc
aaa
repz
mov
jae
movs
mov
mov
mov
adc
jns
fnsave
call
mov
fcos
mov
lds
xlat
mov
loopne
iret
pushf
sub
push
and
pop
sub
xchg
cmp
in
and
stc
or
rol
daa
shl
shl
push
arpl
leave
mov
ja
sbb
jl
cmp
and
ds
xor
xor
mov
enter
xor
sub
or
lods
cli
mov
ins
lds
mov
pop
aad
test
pop
xor
mov
jmp
ss
(bad)
adc
pop
cmps
sbb
mov
cmps
shr
dec
stc
mov
add
jbe
out
nop
fsubr
int3
icebp
scas
ins
mov
xchg
or
push
xchg
mov
mov
adc
aam
cld
pop
pop
xchg
or
cs
lfs
and
mov
mov
shl
ds
sbb
xor
in
cwde
cmpps
cmp
xor
xor
sub
mov
cmps
xor
int
out
bound
adc
shr
je
(bad)
mov
loope
lods
dec
push
std
dec
jno
sbb
scas
push
sbb
stos
outs
dec
fadd
les
jg
dec
dec
cmovae
sub
jne
ss
sbb
xor
fucomi
cwde
push
popa
pushf
add
pop
xchg
stos
das
test
stos
fwait
aam
pop
sti
or
mov
add
sbb
dec
sub
xor
mov
iret
(bad)
stos
cwde
stos
in
mov
outs
pop
mov
popa
fs
sub
lods
gs
push
push
test
(bad)
pop
xchg
(bad)
js
fisttp
pop
or
pop
rcr
mov
push
jge
test
lock
sbb
xchg
sub
pop
dec
or
dec
cmp
dec
(bad)
les
out
loopne
and
lods
mov
pop
jl
out
retf
or
inc
lock
(bad)
aad
in
out
pushf
daa
mov
es
jbe
or
es
and
js
or
mov
add
std
xor
out
daa
adc
pop
pop
icebp
mov
enter
mov
inc
fs
push
dec
stos
jmp
(bad)
inc
pop
les
push
cdq
(bad)
ds
add
test
test
sub
sbb
popf
or
jp
mov
mov
dec
ret
and
inc
sbb
and
cli
push
call
(bad)
movs
idiv
es
dec
sub
(bad)
jle
(bad)
adc
sbb
push
mov
ins
rcr
and
inc
inc
ret
jmp
pop
movs
sbb
lea
mov
cmp
ins
vpor
imul
jae
cs
out
fwait
dec
add
icebp
in
lods
lods
xor
jg
in
ss
cmp
jmp
inc
dec
lea
shr
jb
adc
iret
scas
jns
xlat
or
(bad)
bound
repz
test
test
mov
pop
iret
dec
fs
test
mov
inc
dec
xor
pushf
ja
cmp
inc
push
mov
mov
idiv
es
jmp
adc
add
jle
movs
pop
adc
xchg
xchg
mov
(bad)
movs
scas
loopne
push
mov
or
movs
enter
popa
aaa
jp
mov
sub
out
pop
out
movs
pushf
sub
xchg
shl
mov
push
pop
cld
inc
pop
stos
popf
sbb
jnp
addr16
and
lods
imul
xor
ins
mov
hlt
xor
push
pusha
stos
mov
ins
sbb
leave
loopne
stos
scas
inc
push
cmp
jb
xor
ins
mov
push
xchg
jg
jo
mov
mov
mov
fisttp
push
js
push
xchg
popf
mov
fcomp
aaa
or
add
jns
loop
popf
pop
mov
stos
js
and
adc
shr
or
stos
out
es
data16
and
mov
xchg
dec
ja
xlat
gs
scas
retf
and
daa
stos
(bad)
and
push
pop
ds
pushf
pop
mov
enter
add
pop
das
mov
aam
jb
shl
enter
(bad)
fld
aaa
(bad)
sub
push
mov
ret
lea
pusha
or
mov
ins
inc
in
test
cmc
cli
pop
mov
test
cmps
mov
mov
icebp
pop
pop
fisubr
test
mov
adc
out
cmc
mov
cmp
retf
jmp
inc
sbb
pop
mov
mov
ds
mov
ins
mov
adc
jecxz
inc
jl
or
dec
mov
sub
outs
inc
xor
pop
or
les
inc
adc
dec
aas
xor
mov
sbb
bound
and
js
cwde
xlat
mov
not
cmp
ret
sub
push
js
and
popf
shl
hlt
movs
cs
mov
push
test
ja
sub
mov
sub
xchg
mov
dec
xchg
jmp
pop
xchg
sub
xor
inc
lds
retf
test
je
sbb
mov
mov
ret
fwait
lds
pusha
add
test
push
mov
and
fsub
pop
mov
and
add
sub
fmul
mov
lahf
jmp
outs
push
adc
pop
(bad)
jmp
ret
pmuludq
and
mov
fdiv
retf
or
jno
js
or
ret
xchg
packuswb
in
cmp
pusha
cmp
(bad)
mov
outs
gs
cmp
cmps
jo
xchg
js
mov
cmp
mov
aas
nop
inc
out
jnp
adc
(bad)
ret
xor
pop
ret
(bad)
cmp
pop
call
and
mov
mov
push
imul
add
lahf
loopne
jle
hlt
inc
pop
adc
cld
fwait
and
outs
jmp
adc
and
imul
out
sub
daa
clc
sub
cmps
imul
iret
popf
sbb
add
fld
xor
ds
dec
push
stc
cmc
into
call
lods
xchg
mov
call
jne
push
xor
pop
push
cld
scas
add
fsubr
fs
jb
or
sbb
pop
xchg
fbld
add
push
jbe
stc
cld
xchg
sbb
pop
mov
pop
xchg
jmp
jle
and
out
cmp
popa
fmul
test
out
mov
rol
jle
(bad)
cmp
popf
sbb
(bad)
ror
cwde
mov
dec
pop
xor
pop
xor
ss
and
fcmovnu
xchg
in
shl
mov
or
test
loopne
xchg
mov
lds
push
mov
add
dec
scas
ds
pop
jmp
mov
(bad)
jp
xchg
imul
add
and
sub
adc
jecxz
loop
(bad)
jl
xchg
mov
adc
pop
xchg
fst
dec
fs
xchg
add
inc
outs
add
mov
jae
pop
cli
jbe
scas
or
in
jo
cmp
idiv
dec
popw
or
movs
test
add
sub
lea
pop
xchg
xchg
mov
rcl
retf
or
mov
dec
and
mov
xchg
or
shl
ins
mov
(bad)
shl
imul
mov
xchg
mov
jmp
jo
jmp
mov
aaa
jne
retf
pop
int
leave
int3
lea
cs
add
iret
sbb
repnz
idiv
pop
and
inc
fwait
push
push
mov
mov
cmp
mov
pop
adc
adc
xchg
ss
mov
jno
in
test
das
shr
inc
sub
push
ins
pop
sbb
int3
es
pop
push
out
or
shl
xor
dec
push
fcomp
pop
xor
dec
dec
in
sbb
out
rol
lock
repz
adc
cs
cmp
add
mov
ja
in
sbb
adc
rcl
in
mul
add
lea
sub
sub
xchg
gs
push
push
mov
imul
cdq
retf
jp
out
mov
(bad)
cli
xor
ja
enter
mov
mov
sbb
out
jge
(bad)
sub
lock
bound
cmp
xor
and
lahf
sti
retf
adc
push
mov
js
aaa
js
lock
mov
icebp
xor
sub
mov
and
xchg
add
adc
push
fcomp
mov
inc
pop
fcomp
push
xchg
lahf
mov
imul
nop
rol
ja
xor
imul
es
cmps
out
jmp
mov
or
mov
into
inc
sub
jecxz
pop
(bad)
es
sub
mov
or
sbb
pop
jge
cmp
xor
inc
hlt
(bad)
xor
daa
(bad)
div
jb
or
mov
push
mov
movs
in
xchg
jle
cmp
sub
mov
xchg
cld
pop
add
cs
int3
lahf
inc
sub
nop
xor
jl
addr16
xchg
xchg
xor
rol
out
cmps
imul
(bad)
xchg
loopne
or
scas
xchg
fs
and
scas
or
repnz
jge
clc
xor
dec
push
inc
movs
inc
cmps
icebp
add
outs
scas
xchg
or
sbb
pushf
and
push
push
xchg
or
jmp
adc
add
fs
in
mov
movs
adc
jg
jne
jg
bound
push
std
int3
xor
sub
int3
and
mov
bound
pop
cmp
mov
cmps
shl
int3
or
out
enter
es
mov
and
daa
das
dec
cmps
mov
pop
xchg
rol
sti
shl
xchg
push
stc
in
inc
adc
mov
mov
sub
xchg
mov
sbb
(bad)
in
cmc
xchg
sub
lods
iret
mov
sub
mov
les
jmp
jae
jno
movs
push
fst
loopne
cwde
leave
ins
mov
leave
sub
aad
pop
popf
xchg
xchg
xchg
sbb
sub
jb
pop
leave
sahf
bound
adc
sti
add
push
inc
mov
push
ror
stos
mov
movs
data16
clc
ja
cmc
inc
cmp
(bad)
enter
cmp
fs
jge
mov
(bad)
lahf
dec
(bad)
int
jp
cmp
(bad)
sbb
mov
push
icebp
pop
and
adc
add
in
retf
rol
or
and
(bad)
icebp
pop
add
popf
inc
js
rcr
dec
das
loopne
mov
sahf
or
mov
into
mov
pop
(bad)
jle
fild
xchg
icebp
push
and
pop
in
fiadd
inc
loop
std
loopne
push
jmp
push
jnp
test
loopne
fisttp
int3
sbb
push
stc
or
lahf
push
test
or
mov
push
jnp
fdiv
jge
or
sti
je
xchg
add
sbb
ins
daa
loope
mov
dec
into
repz
inc
outs
jo
or
loopne
retf
xchg
jne
rcl
jmp
lds
ja
mov
sub
jl
out
mov
xchg
sbb
shl
xor
fild
mov
cmp
std
xchg
lods
pop
sub
scas
lods
inc
movs
xor
jno
inc
jmp
add
ins
adc
mov
dec
lahf
cmp
dec
outs
ins
es
cld
mov
lahf
test
xchg
push
pop
mov
mov
outs
cmp
push
sahf
sbb
jno
(bad)
jl
push
adc
dec
or
inc
imul
sti
cld
je
outs
cld
std
out
ja
xchg
jge
mov
xchg
mov
jmp
stos
test
xor
dec
gs
(bad)
in
and
loope
add
adc
je
sub
inc
rcr
mov
or
jnp
fsubr
cmp
pop
jmp
jmp
adc
call
sti
adc
adc
pop
dec
mov
ins
mov
std
into
mov
retf
dec
test
pop
outs
cld
imul
(bad)
cmp
jmp
sar
push
loop
stos
aad
outs
in
mov
inc
call
xchg
pop
rcr
jmp
add
sbb
mov
push
push
xor
rcr
(bad)
mov
vcvtps2pd
in
mov
repz
jecxz
jns
pop
int3
pop
xchg
sub
mov
sub
nop
add
aas
pop
sbb
aaa
js
sub
ja
leave
dec
jge
stos
push
aaa
outs
out
inc
pop
adc
icebp
ins
(bad)
fisubr
sbb
pop
and
mov
fmul
iret
pop
es
inc
rcr
ret
push
mov
add
test
sbb
sub
mov
aad
fdivr
data16
mov
inc
push
fsubrp
jge
ror
and
sub
xchg
call
xchg
call
pop
sbb
add
or
in
shr
add
inc
stos
test
out
repz
nop
mov
push
add
gs
ins
out
add
bnd
or
pop
cdq
xchg
push
inc
(bad)
push
sahf
fcom
xchg
xchg
push
fiadd
iret
mov
les
aam
or
mov
push
xchg
popa
dec
cld
xor
inc
adc
ds
push
std
add
bound
gs
lds
mov
pop
xchg
rcr
mov
add
outs
or
pop
scas
mov
aam
das
je
mov
mov
lods
loopne
dec
(bad)
mov
pop
adc
pop
outs
icebp
loop
cmp
mov
ds
retf
popf
leave
cmp
sub
mov
push
jmp
jbe
sahf
loop
movs
je
or
pop
(bad)
out
(bad)
xor
mov
in
xchg
sbb
adc
pop
and
fs
(bad)
sub
cmps
xchg
sar
rcl
adc
jmp
mov
mov
or
or
jl
stos
cmp
not
fidivr
test
add
iret
jge
or
xchg
xchg
inc
cli
jmp
gs
xor
fild
mov
dec
pop
xchg
addr16
shl
dec
sbb
dec
cmp
fcomp
arpl
scas
mov
add
dec
push
jecxz
in
push
movs
repz
and
stos
je
sub
aam
stos
cmp
popa
scas
push
mov
test
mov
push
mov
dec
cmp
ficom
inc
shl
push
jle
add
jne
fild
mov
cmp
push
xor
sbb
pusha
(bad)
test
fwait
adc
sub
fdivr
push
outs
pop
add
scas
das
imul
pop
dec
dec
ror
retf
(bad)
cmps
mov
cmp
sub
jl
push
fs
adc
add
shr
ret
ficom
jbe
push
jo
imul
lea
scas
push
pop
add
mov
jnp
lods
or
test
add
dec
mov
test
dec
cmp
xchg
mov
jl
stc
sub
ins
sar
std
xchg
sbb
ins
shl
jae
(bad)
xlat
bnd
push
mov
repz
stos
pop
(bad)
xchg
add
or
adc
out
sub
push
(bad)
out
xchg
mov
pop
aas
add
mov
jmp
je
cmp
mov
daa
dec
xchg
loope
push
or
xchg
pop
or
add
popa
adc
clc
jns
sub
mov
loop
cmps
stos
adc
ins
jno
clc
or
sbb
xlat
int3
mov
sbb
pop
sub
repnz
dec
cld
mov
aad
mov
jmp
fstp
lods
sbb
fmulp
(bad)
jle
mov
dec
sbb
out
nop
and
aaa
ret
cmp
cmp
cmp
aam
loop
pop
jecxz
ds
dec
es
popf
dec
test
jl
in
lods
jb
push
(bad)
(bad)
sbb
pop
stos
and
int3
push
push
test
sub
jae
mov
je
sar
inc
arpl
(bad)
lods
repnz
push
cmp
ret
jp
stc
sub
add
aam
xchg
jb
inc
dec
call
fisttp
imul
and
dec
xor
stos
and
sbb
or
xor
std
fisubr
inc
adc
push
or
retf
lahf
mov
dec
ds
(bad)
pop
inc
mov
(bad)
popf
in
mov
and
vhaddps
sbb
outs
adc
push
das
mov
push
sbb
dec
cmp
push
pop
pop
repnz
or
rcl
pusha
sub
sbb
xor
nop
daa
scas
xchg
inc
push
repnz
test
aaa
add
stos
iret
dec
add
xor
cmp
xor
pop
sbb
std
inc
inc
rcl
push
and
add
and
pusha
out
loopne
popf
retf
jg
scas
cmps
xor
lds
push
ja
inc
mov
mov
dec
imul
and
les
mov
xchg
repz
pop
dec
call
fist
mov
mov
jno
rol
and
aaa
cs
mov
xchg
jge
in
lea
adc
mov
inc
jae
mov
retf
jp
cmps
pusha
fcomp
popf
out
pop
in
dec
in
add
loope
pop
pop
xchg
mov
cmp
dec
xchg
std
ficomp
imul
loope
daa
adc
mov
push
fistp
stos
mov
xchg
and
shl
push
aaa
iret
jg
add
fsubr
cld
inc
pop
into
pop
xchg
(bad)
imul
movs
enter
dec
neg
jns
pushf
loope
lods
push
outs
cmp
int3
mov
lahf
in
dec
dec
loope
sub
xchg
jb
lock
hlt
cmp
sub
sahf
add
dec
xor
sub
cmc
mov
pop
and
icebp
cmp
sar
fdivr
add
add
pop
push
int3
imul
retf
sbb
pop
or
dec
ja
jl
inc
test
mov
shl
cmovl
pop
loop
sub
and
mov
push
imul
sti
mov
pop
cdq
and
out
repz
ret
xchg
or
in
jne
sar
arpl
in
mov
and
dec
push
cmp
add
dec
aam
mov
fmul
aam
jns
shl
jl
cmps
fadd
(bad)
fsincos
xchg
repz
jg
add
mov
push
shr
cmp
or
(bad)
(bad)
mov
xchg
or
dec
add
mov
xchg
mov
(bad)
dec
mov
jge
jmp
sbb
mov
ds
jno
cli
arpl
mov
gs
(bad)
out
and
lds
dec
scas
outs
leave
(bad)
jle
add
push
jb
int
cmp
retf
iret
iret
popf
xchg
lods
shl
cmp
ds
and
xchg
pop
jmp
imul
cmps
mov
loop
test
ror
xlat
loope
xor
adc
loop
lods
or
popa
push
int
and
pop
cli
aam
or
lods
mov
call
iret
aas
div
mov
lea
and
adc
popf
mov
fidivr
sti
push
outs
mov
in
mov
(bad)
cmp
mov
add
popf
or
dec
retf
jae
movs
mov
je
int3
ror
xchg
fidiv
not
test
push
fadd
repnz
cmp
aas
push
xchg
mov
sbb
push
jl
movs
pop
sti
cmp
xchg
jmp
xor
(bad)
loopne
cdq
jecxz
into
jnp
test
cld
push
or
std
sbb
mul
test
hlt
xchg
xchg
and
in
shl
mov
clc
daa
fistp
mov
jp
ins
xchg
mov
addr16
into
iret
jne
push
inc
inc
or
jnp
lods
div
xor
pop
int3
dec
fucomi
and
pop
sub
add
jl
push
and
and
jmp
aas
dec
scas
std
popf
xlat
lock
push
gs
fucom
out
test
mov
frstor
push
(bad)
dec
inc
loopne
sbb
push
mov
push
xor
cmp
push
pop
jbe
movs
scas
adc
xchg
pushf
xor
xchg
inc
ret
dec
xlat
add
pop
jp
movs
pushf
in
nop
or
out
jb
inc
inc
sub
xchg
mov
cmp
xlat
xchg
cmp
inc
jne
fist
dec
add
xchg
mov
daa
cmp
dec
(bad)
adc
lock
lahf
jb
popf
jmp
lds
pop
clc
sahf
jp
add
mov
leave
cwde
stos
pop
outs
cmp
aaa
outs
sahf
xor
aad
dec
pcmpgtw
inc
push
pop
(bad)
mov
les
sahf
lea
pop
(bad)
push
jnp
enter
push
push
or
inc
lock
xlat
lock
loope
aas
sbb
repnz
mov
dec
sub
mov
xchg
scas
in
xor
mov
sbb
aad
ror
xchg
mov
into
pop
repz
xor
pop
push
push
ins
mov
(bad)
mov
repnz
cmp
inc
pop
xchg
test
daa
in
ss
mov
mov
xchg
inc
dec
mov
stos
(bad)
lahf
outs
adc
cwde
lods
xor
and
mov
jo
or
test
mov
je
lods
sbb
mov
pop
fld
int3
jle
pop
xchg
in
cld
sub
addr16
leave
mov
sbb
jmp
and
inc
and
pop
test
sub
shl
jecxz
imul
mov
loope
pop
dec
ds
cmps
loope
sbb
jl
pop
cmc
loope
jmp
xchg
mov
inc
pop
stc
inc
sbb
sbb
jnp
int
fimul
js
leave
inc
mov
xchg
push
fsubr
jp
js
mov
push
ficomp
je
add
popa
(bad)
das
or
inc
ret
adc
dec
test
mov
push
xor
mov
xor
or
sahf
xchg
xchg
inc
mov
xchg
pop
leave
mov
xor
adc
stos
sbb
mov
mov
sub
pusha
add
stos
std
enter
shl
jl
sub
cld
xchg
mov
add
adc
(bad)
clc
pop
imul
xchg
or
jge
xor
and
sub
stos
(bad)
jmp
or
add
call
jb
jl
or
scas
and
test
and
jno
sbb
call
leave
jnp
jecxz
loope
clc
push
mov
xlat
and
adc
inc
jmp
(bad)
adc
pop
cs
sti
(bad)
push
dec
int
stos
jg
fisttp
or
dec
fsubr
adc
pop
jle
push
pop
xor
jge
data16
push
fcomp
les
mov
sbb
cmp
dec
dec
lods
adc
mov
cli
inc
xchg
aas
aas
sub
jmp
jmp
sub
nop
sub
push
adc
retf
and
mov
or
inc
enter
adc
addr16
outs
test
push
sbb
pop
pop
xchg
mov
push
fcom
mov
cwde
xchg
icebp
sub
mov
xchg
div
xchg
pushf
xchg
gs
inc
jmp
push
lods
rol
adc
leave
scas
xchg
inc
lea
sub
sub
push
sbb
jg
lds
stc
jno
or
push
out
sub
shl
fild
pop
cmps
stc
pop
xchg
xor
push
pop
in
jge
loop
enter
aas
push
jnp
jbe
cmps
xchg
xchg
mov
lods
mov
rcr
and
fld
jns
cmp
jns
out
sbb
mov
(bad)
popa
out
call
dec
out
stos
inc
mov
sub
jno
dec
fbstp
(bad)
int3
call
xor
inc
outs
daa
out
push
or
rcl
inc
jnp
shl
lock
add
jg
imul
adc
icebp
cmp
xor
hlt
test
fdivp
retf
adc
(bad)
dec
in
test
es
jge
xor
ror
test
call
jae
addr16
(bad)
xchg
sub
test
adc
in
rcl
mov
pop
hlt
ss
cmp
mov
push
fnclex
xchg
mov
pop
or
pop
int
mov
sbb
loop
cmp
dec
and
sahf
das
fisub
inc
fsubrp
pop
jbe
and
inc
in
inc
cmps
imul
out
mov
sbb
sub
or
call
and
sub
cmp
sub
sahf
lock
mov
mov
jmp
adc
jmp
jbe
aam
adc
outs
jmp
int3
or
cmp
pop
std
mov
and
push
jns
jge
dec
(bad)
in
push
fsubr
and
mov
fwait
xor
and
jg
imul
mov
dec
sub
in
stos
imul
imul
jecxz
push
inc
ror
push
adc
loop
mov
ret
aas
ss
stos
or
inc
ret
sbb
(bad)
sbb
repnz
xor
cdq
shl
into
push
push
nop
icebp
in
test
adc
sub
mov
sub
scas
sbb
scas
outs
in
(bad)
sti
ret
sar
xor
mov
and
adc
push
aad
sbb
and
jb
pop
les
or
mov
fst
rep
sar
mov
icebp
jle
mov
stc
xchg
mov
fwait
dec
pop
jge
xchg
fs
jns
shl
mov
test
ja
xor
xchg
xchg
mov
lods
cmps
fmul
daa
aas
cli
push
popa
cmp
xchg
inc
mov
neg
outs
retf
pusha
push
js
jl
mov
sbb
sbb
jl
adc
sub
xor
pop
add
cmp
cmovl
xor
inc
xor
scas
mov
push
mov
test
cmc
stc
sub
cld
pop
jne
mov
jo
fisubr
es
(bad)
mov
lahf
cld
cdq
nop
cmp
enter
movs
mov
popa
lds
hlt
out
pop
xor
sub
cs
ficom
cmp
ret
mov
js
out
inc
jmp
or
push
test
and
push
or
repnz
repnz
mov
and
call
into
pop
repnz
adc
push
pop
dec
out
inc
icebp
icebp
rol
in
mov
jae
leave
ja
add
(bad)
mov
int3
arpl
shr
cdq
mov
pop
xor
movs
jmp
int3
pop
and
push
in
xor
cdq
jnp
cs
loop
fcomp
jb
jb
data16
adc
xor
mov
ins
mov
and
xor
sbb
pop
(bad)
bound
aas
push
dec
mov
add
call
test
call
cdq
popa
mov
sub
xchg
push
inc
test
test
mov
and
sbb
and
movs
out
push
test
aam
add
mov
out
mov
cmp
add
dec
dec
xchg
push
and
push
popa
sub
ficomp
rcr
idiv
inc
add
mov
mov
mov
loopne
jmp
add
push
pop
repnz
jle
add
test
repnz
jmp
or
add
push
shl
arpl
outs
push
sub
push
fisubr
dec
sub
ror
dec
cmp
add
adc
out
inc
xor
fld1
ss
fistp
les
xor
inc
sub
xchg
xchg
mov
popa
out
(bad)
pop
xchg
dec
push
jmp
ss
mov
lods
jmp
and
outs
mov
inc
rcl
mov
jmp
mov
fdivp
cmps
mul
loopne
shl
loopne
xchg
push
or
movs
sbb
fild
or
pop
pop
mov
adc
repnz
ror
retf
xchg
inc
or
in
and
add
ret
sbb
in
data16
pop
mov
mov
cmp
add
enter
test
mov
repnz
sbb
(bad)
fisttp
retf
in
mov
(bad)
repz
popa
test
pop
xchg
pop
imul
mov
xchg
je
jnp
sub
leave
or
rcr
jl
test
or
or
or
frstor
les
daa
loopne
(bad)
sbb
and
jecxz
add
test
pop
nop
pop
test
push
stos
sbb
jno
jae
pop
loope
aaa
sub
in
xchg
fsubr
enter
xchg
or
rol
repnz
pusha
cmc
inc
mov
std
lahf
mov
imul
in
out
daa
fsub
xor
sbb
add
es
add
lods
mov
jmp
aam
or
push
enter
push
mov
adc
movs
in
dec
cwde
jle
push
and
cs
jmp
js
hlt
xchg
shl
fld
jmp
daa
cmp
push
push
add
nop
pop
pop
xchg
cmp
pop
cmp
dec
xchg
dec
test
in
out
test
xchg
ss
mov
dec
xchg
push
shl
adc
and
daa
mov
ins
retf
pusha
popa
sub
mov
push
loop
dec
fcom
jo
or
adc
push
inc
test
pop
cmp
inc
cmps
fild
and
call
sbb
fsub
ret
dec
cmp
push
stc
in
push
push
loope
fidiv
aam
xor
mov
xor
in
sbb
nop
sti
mov
retf
add
mov
inc
inc
add
ins
jno
adc
xchg
mov
dec
movs
jl
out
xchg
xor
rol
stos
retf
addr16
sub
sub
and
xchg
add
not
xchg
or
ficomp
adc
aad
leave
out
jae
jne
daa
hlt
inc
lods
movs
jmp
inc
mov
add
mov
mov
push
mov
sar
pop
jmp
jae
rcl
icebp
ror
call
push
mov
add
xchg
bound
push
aaa
stc
call
das
pusha
mov
dec
or
adc
lea
das
sbb
jo
shr
es
aaa
gs
sbb
aaa
xor
pop
push
mov
jne
push
scas
xor
ins
sahf
cmp
sahf
mov
jle
sar
mov
mov
in
fwait
mov
or
mov
mov
mov
inc
ds
mov
or
in
cwde
or
jge
out
sub
sbb
ds
addr16
cld
xlat
imul
cdq
cmp
call
fnstsw
in
jae
test
pop
fstp
call
xchg
in
mov
into
or
shl
dec
cmp
fstp
pushf
test
pop
cmp
sahf
and
in
push
hlt
pop
mov
and
retf
scas
pop
mov
xor
push
pop
mov
scas
cld
loopne
(bad)
inc
sbb
in
push
nop
xchg
outs
add
dec
jo
mov
jno
cli
jne
xchg
aam
mov
pop
jne
dec
mov
rol
test
jns
sti
std
jge
ret
cmp
push
inc
cli
into
nop
outs
push
pushf
cmps
fldcw
dec
daa
addr16
loop
xor
mov
push
les
mov
mov
in
push
inc
imul
out
pushf
push
pop
jle
das
jo
sub
pop
push
es
(bad)
xor
mov
and
xor
mov
outs
jbe
pop
es
dec
cdq
sbb
outs
repz
addr16
adc
sbb
push
pop
push
inc
push
sbb
jae
stc
in
ficom
xchg
xor
push
cwde
aad
cs
out
lds
xor
cs
ficom
arpl
push
fs
xchg
(bad)
in
shl
fistp
in
jno
mov
or
shl
ss
lods
inc
dec
(bad)
sbb
xchg
mov
cmp
sub
or
out
es
sbb
xor
stos
ret
mov
ss
in
lea
jl
xchg
das
sbb
sar
add
sub
mov
sbb
dec
cmps
enter
ror
popf
xor
xchg
sbb
call
aaa
mov
lods
sbb
add
mov
stos
addr16
inc
cmp
jl
or
es
jns
out
mov
sub
dec
jno
ins
mov
push
into
aaa
add
ds
les
pop
jnp
jp
(bad)
data16
fbld
data16
cmps
int3
xadd
cmp
push
pop
push
out
sbb
mul
out
test
xchg
push
push
pop
mov
cwde
sub
out
cld
adc
cmp
and
out
push
movs
xchg
fwait
adc
pop
ja
fisub
push
jnp
fcmovnb
mov
jge
rcr
mov
inc
ret
cdq
imul
inc
pop
call
cmp
or
xchg
jp
jns
mov
mov
jnp
mov
(bad)
in
es
pop
mov
sar
inc
cli
add
shl
rcr
push
mov
jne
movs
ins
not
leave
or
ror
inc
xor
loope
mov
loop
ds
bswap
sbb
pop
mov
push
cld
mov
push
dec
sti
mov
dec
push
push
test
rdpmc
jbe
cmp
fidiv
or
mov
mov
out
jb
cwde
popa
les
sub
mov
cld
xor
sbb
xchg
ret
pop
les
fcomp
jnp
std
jle
imul
jno
clc
adc
in
mov
repz
popf
xor
inc
fidiv
mov
and
mov
rol
cmps
jnp
test
imul
lock
sub
jp
inc
call
(bad)
outs
cmp
sub
loopne
pop
xchg
mov
sahf
sbb
sub
aam
mov
mov
enter
enter
fadd
jo
jge
push
inc
cmps
adc
add
out
jb
jb
aad
push
pop
lock
loop
imul
call
pop
adc
jge
test
sub
rcr
loope
(bad)
and
ret
sbb
xchg
clc
pop
pusha
adc
das
xchg
inc
mov
call
jle
jmp
mov
adc
clc
mov
fdivr
or
(bad)
call
ja
ja
mov
dec
out
xchg
add
aam
imul
mov
mov
jle
imul
ror
cmp
cmp
pop
cs
dec
sbb
ror
cmp
loope
jmp
in
imul
ins
xor
mov
nop
(bad)
push
retf
cdq
add
ins
push
ret
jbe
arpl
cdq
inc
shl
(bad)
mov
mov
mov
sbb
nop
add
adc
sbb
sub
jl
(bad)
xchg
ss
into
push
into
in
dec
xor
cld
leave
push
stc
jge
xchg
jne
mov
dec
arpl
dec
mov
or
sti
push
loop
imul
bound
addr16
hlt
rcl
loope
fbstp
mov
imul
lea
rcr
enter
retf
mov
xchg
pop
pop
cmp
movs
fucomi
mov
or
mov
adc
daa
pusha
ins
mov
test
aas
int3
pop
inc
movs
fdiv
lahf
jns
sbb
jmp
sub
in
mov
push
retf
dec
cmps
lods
ins
dec
fstp
mov
add
push
xchg
xchg
cwde
fidivr
bound
fdiv
pusha
pop
adc
rcr
(bad)
adc
cmp
jmp
test
bound
push
dec
push
aam
cmps
pop
cmp
or
mov
dec
lods
mov
dec
ror
xchg
push
iret
mov
movs
dec
cmp
adc
mov
xlat
adc
rcr
lock
pop
inc
pop
mov
adc
jns
fcmovbe
out
mov
in
jbe
jbe
fmul
xchg
test
fisubr
and
sbb
fimul
in
std
inc
mov
add
adc
mov
mov
test
and
and
jle
push
inc
mov
ss
lahf
adc
cli
xor
or
iret
fcom
mov
in
ins
push
stos
adc
fidiv
sbb
test
mov
ror
(bad)
jmp
jle
outs
xchg
stc
repnz
fist
sbb
lods
sbb
jge
or
adc
cmp
push
add
sbb
aaa
sbb
mov
les
jg
add
enter
iret
jp
addr16
es
xchg
mov
sub
cli
lods
mov
jp
loope
lahf
pusha
sub
jno
aam
inc
stos
push
inc
push
ins
ins
inc
push
jmp
adc
fwait
pop
retf
add
push
cdq
mov
push
mov
sub
(bad)
loope
fs
sbb
push
fstp
xchg
pop
fucomi
adc
call
(bad)
icebp
pop
aaa
stos
sbb
pop
inc
jne
mov
and
adc
test
test
dec
iret
pop
xor
sbb
ss
test
jae
dec
loop
adc
pop
sbb
jp
xchg
shl
jge
inc
test
iret
(bad)
ret
xor
mov
dec
cmps
into
adc
add
xor
icebp
push
push
fs
xchg
mov
inc
xchg
jnp
push
push
pop
add
mov
aaa
jne
ds
add
or
sbb
push
cmps
cmps
xchg
cmc
pop
iret
in
inc
jae
inc
ss
mov
lods
repnz
fld
xor
xor
les
jp
stc
sub
fcom
jle
fadd
shl
push
xbegin
sbb
pmullw
ins
cs
nop
jg
xchg
push
jbe
jae
xchg
enter
jo
xor
add
sti
out
jae
or
push
out
mov
and
push
gs
inc
iret
xchg
jnp
out
sbb
shl
mov
cmp
gs
cmp
call
scas
nop
mov
dec
sub
cld
and
mov
mov
arpl
mov
je
iret
push
mov
mov
shr
ja
arpl
push
sbb
jnp
push
stos
ret
xchg
(bad)
or
in
ja
leave
mov
push
jno
fcomp
inc
xlat
jb
jle
cmp
pop
jo
fnstsw
sub
mov
int
test
or
mov
dec
in
test
mov
xor
push
fwait
std
(bad)
jne
inc
or
cmp
adc
and
or
inc
ins
test
push
dec
jns
test
dec
stc
out
jae
sbb
pusha
dec
push
or
call
sbb
sti
mov
dec
fist
sub
int
les
mov
js
inc
sub
fidiv
mov
xor
ins
mov
ins
push
rcr
into
call
repz
gs
push
mov
fistp
jge
bnd
call
inc
(bad)
jle
push
pop
cmps
and
stc
cli
mov
jb
lds
in
sbb
mov
bound
and
pop
xchg
jmp
xchg
and
pop
repnz
mov
icebp
inc
nop
mov
xor
(bad)
lods
jno
cmps
cmps
sub
pop
lea
add
jmp
sub
popf
pop
out
in
inc
clc
mov
lods
xchg
int3
lock
gs
adc
dec
fimul
jo
adc
movs
fist
and
out
and
lahf
iret
sub
mov
iret
cmp
pop
xchg
ins
fidiv
in
retf
sbb
stos
ja
mov
in
scas
add
ds
adc
fcomp
inc
add
jno
stos
adc
xchg
add
fld
xchg
cmp
ds
jg
repz
dec
ret
stos
call
(bad)
push
rol
in
pop
sub
pop
test
mov
jnp
dec
das
fnsave
pop
and
cld
imul
aas
jmp
xchg
aad
sub
sbb
int
fidivr
(bad)
sbb
adc
jl
pop
les
cdq
(bad)
jo
dec
data16
mov
ret
popf
lea
sub
mov
gs
push
push
popf
or
sub
clc
ret
aaa
cmp
into
xor
inc
out
jmp
mov
bnd
inc
inc
pushf
push
xchg
and
push
sahf
aaa
xor
aas
mov
and
adc
cmp
push
imul
inc
outs
test
out
pop
xchg
jnp
mov
movs
ja
lods
cli
jecxz
(bad)
cmc
push
pop
xor
(bad)
push
jmp
lock
sbb
xchg
psraw
dec
mov
push
xor
and
push
popa
fwait
out
lahf
push
iret
fidivr
mov
inc
fidiv
fist
cmp
push
mov
inc
mov
cmp
xor
shl
out
cmp
mov
cmp
cmp
and
and
int
jmp
call
std
movs
pop
mov
mov
jl
jecxz
push
retf
xchg
add
mov
cmp
fidivr
sti
fisttp
xchg
out
cdq
or
(bad)
xchg
nop
dec
mov
sar
push
mov
cdq
(bad)
mov
sub
mov
stc
ret
cs
sar
or
in
cmp
mov
lds
nop
cmc
cwde
outs
shl
cmp
push
icebp
xchg
push
into
out
repnz
sahf
adc
icebp
aaa
pusha
shl
push
das
dec
shl
js
jge
inc
cmc
iret
sbb
rol
add
or
add
xor
ins
clc
pusha
popa
sbb
fist
in
mov
xor
cmp
xchg
call
scas
in
push
in
mov
and
data16
or
ins
call
aam
push
fcomp
hlt
cmp
and
sbb
repnz
popf
mov
shl
pop
push
test
call
scas
movs
rcl
out
jecxz
(bad)
loop
sbb
aaa
test
mov
dec
enter
inc
add
fistp
loop
jg
xor
aam
xchg
adc
cmp
popf
(bad)
loope
sbb
test
xor
push
adc
jno
pop
jae
repz
mov
movs
push
push
push
inc
lods
lds
jbe
xchg
cli
or
iret
bound
fadd
std
or
xor
inc
or
icebp
in
cmp
repz
pop
ins
add
jg
je
jmp
clc
mov
out
or
sub
pop
sbb
ds
cmp
jbe
mov
sbb
je
cmp
xor
add
adc
(bad)
jns
push
mov
adc
mov
mov
stos
mov
adc
cmp
lahf
rcl
lock
inc
xor
dec
mov
lock
pop
inc
lods
add
les
jo
jmp
aas
scas
in
adc
jne
fs
mov
(bad)
sti
adc
aad
retf
lods
rol
dec
jmp
xchg
lods
inc
cmp
cmp
(bad)
mov
lds
retf
mov
(bad)
adc
sub
and
loope
les
push
and
adc
add
or
fcomip
imul
jp
mov
inc
adc
mov
arpl
cmps
mov
pushf
fs
dec
xlat
inc
rol
jb
push
stos
cmp
aad
repnz
es
sub
in
or
push
aam
in
(bad)
hlt
mov
push
js
gs
shl
or
adc
test
dec
test
dec
test
addr16
mov
fistp
and
aad
mov
popf
sub
(bad)
xor
xchg
ror
test
sbb
or
int
add
inc
sbb
push
fucomip
xor
add
adc
and
xchg
dec
test
push
push
cmp
push
(bad)
pusha
popa
test
aaa
inc
xor
xchg
retf
cmp
ror
outs
arpl
int3
add
xchg
shl
add
leave
or
cmp
pushf
fwait
mov
jb
les
ins
inc
pusha
mov
xor
fisub
inc
cdq
cmp
cmps
popa
stos
addr16
jb
cmc
sub
ds
pop
inc
je
ja
jmp
pop
xchg
ins
pop
int3
sbb
std
fild
imul
add
les
sub
add
icebp
xchg
(bad)
test
mov
dec
sub
mov
mov
jl
aas
cld
mov
iret
xchg
add
cmp
lds
fsub
out
and
leave
push
or
sub
jmp
push
push
cmp
es
jge
and
cmps
push
sbb
icebp
fld
outs
test
jno
arpl
push
sub
out
call
push
fild
xchg
js
loopne
in
pop
push
cli
push
loopne
push
repnz
into
pop
sbb
stc
hlt
inc
mov
inc
sbb
add
mov
popa
pop
mov
cmp
ss
sar
retf
(bad)
fstp
daa
rol
lods
bswap
loopne
fmul
(bad)
jg
push
dec
movs
and
push
xchg
out
mov
loope
stos
shr
in
std
std
push
test
ss
adc
mov
dec
lea
xor
xlat
in
fild
mov
push
cmps
fdivr
push
iret
(bad)
mov
(bad)
xor
push
mov
inc
jmp
retf
add
jmp
inc
jb
(bad)
jns
ficom
xor
pop
ins
xchg
outs
hlt
add
pop
jmp
int3
mov
in
pop
pop
stos
mov
xchg
add
frstpm(287
inc
dec
test
in
jae
(bad)
xor
adc
es
pop
pop
dec
out
jo
imul
mov
sub
into
cdq
(bad)
scas
sbb
loopne
cld
mov
in
dec
adc
lea
push
add
shr
mov
sbb
sub
lea
test
retf
sbb
cdq
jo
mov
lahf
aad
rcr
pop
xchg
pop
adc
push
loop
xchg
jb
call
std
cmp
daa
pop
rcl
int
sub
jmp
out
mov
jmp
lock
xchg
pmulhw
cdq
call
pop
xchg
loop
xchg
cmovle
popa
fstp
test
pop
sub
adc
mov
push
popf
xchg
cmp
jmp
in
pop
rol
mov
push
xchg
sbb
jl
pop
dec
inc
pop
(bad)
pushf
test
leave
sti
jmp
addr16
loopne
sbb
xchg
jae
stos
sub
fwait
mov
call
repnz
add
dec
push
les
ins
mov
mov
jns
mov
mov
fisubr
mov
sbb
mov
lds
push
sub
cmps
dec
test
dec
cwde
pop
push
(bad)
inc
adc
cmp
xor
icebp
ror
and
imul
mov
fcom
push
dec
jle
xor
mov
mov
dec
sbb
sub
imul
push
jg
jne
sub
pop
xchg
das
jmp
stos
addr16
mov
dec
xor
mov
stc
lock
ret
ds
pop
and
mov
jmp
mov
add
icebp
and
mov
mov
sub
mov
scas
or
push
push
xchg
ins
sub
(bad)
sub
adc
in
jl
xor
fistp
scas
(bad)
imul
xchg
bnd
xchg
clc
out
pop
jecxz
sub
push
ins
jno
mov
sub
std
push
inc
mov
call
mov
push
mov
pop
pop
retf
cmps
xor
movs
repz
outs
ins
fidiv
mov
fiadd
arpl
popa
sbb
pop
xlat
mov
pushf
je
fild
xor
jae
ret
push
stc
mov
in
add
jb
pslld
aas
sub
or
mov
pop
or
lock
loope
dec
fiadd
adc
leave
pusha
test
and
leave
xchg
cmp
jecxz
mov
push
popa
cwde
cmc
pop
es
movs
(bad)
out
iret
dec
ins
lock
fild
outs
pop
jl
je
add
fld
inc
cmc
int
sbb
jg
cmp
scas
mov
movs
sbb
loope
inc
adc
clc
lods
sub
ja
adc
mov
jo
mov
pop
inc
out
push
es
push
and
cmps
dec
jnp
retf
aam
mov
xchg
dec
adc
inc
push
frstor
loop
into
mov
and
int3
add
out
loop
mov
push
xor
lods
cmp
stos
sahf
mov
pop
and
pop
adc
push
aas
pop
outs
repz
aaa
xchg
popa
je
mov
iret
sub
dec
sub
pop
inc
in
xchg
sbb
jbe
out
mov
xor
pop
dec
or
popa
inc
cmps
pop
outs
add
daa
data16
lea
add
mov
xlat
in
aad
daa
js
jbe
and
icebp
jmp
adc
dec
repz
in
and
and
jb
or
lods
cmp
lods
xchg
push
mov
std
adc
mov
mov
pop
in
or
aam
mov
bound
xchg
pop
adc
mov
stc
dec
lds
cmps
jmp
xchg
jne
xor
sub
jb
rcr
mov
xchg
rol
xor
test
xchg
xchg
inc
scas
pop
or
jmp
jo
add
loope
call
and
push
lods
inc
jmp
sub
dec
sbb
fsub
mov
(bad)
push
adc
sbb
adc
lahf
sbb
test
and
cmps
pushf
call
call
xchg
cmps
and
mov
jno
xchg
mov
jno
push
fcomp
xor
shl
inc
pop
in
add
lock
popa
push
jl
jl
mov
mov
fisub
xor
imul
int3
dec
push
loope
jns
mov
sahf
leave
out
xlat
imul
mov
xchg
lods
icebp
pop
xor
inc
xchg
cmps
pop
and
stos
push
jmp
retf
loop
pop
mov
inc
mov
lea
mov
push
cmc
std
pop
call
inc
jg
cmp
inc
fstp
xchg
outs
inc
pop
out
enter
movs
xor
stc
push
jmp
test
out
mov
sbb
adc
xor
add
in
sbb
adc
fdivr
inc
jno
(bad)
repz
mov
cmp
ret
call
mov
mov
mov
jbe
cmp
push
mov
in
push
outs
ins
inc
mov
lock
xchg
add
xchg
bound
jnp
imul
fmul
mov
cmc
dec
dec
les
retf
cld
adc
xchg
pop
ficom
repz
(bad)
lea
stos
mov
push
and
ins
sbb
mov
dec
push
js
sub
mov
sbb
or
xor
xlat
sub
cmps
inc
ss
cwde
ins
daa
dec
in
sbb
and
ja
pop
imul
push
xchg
jnp
push
mov
mov
pop
mov
and
call
lods
stc
test
inc
icebp
aaa
out
in
fdivr
outs
pop
or
pop
sub
into
stos
add
dec
adc
outs
mov
mov
ins
mov
pop
out
and
in
xor
iret
ret
mov
ret
bnd
pop
and
push
repz
jmp
mov
sbb
out
push
in
and
mov
jp
loope
adc
mov
call
dec
xchg
push
cdq
ins
clc
xchg
loop
sub
mov
pop
xchg
jae
inc
mov
icebp
jno
or
aam
push
sahf
dec
sbb
bound
mov
call
ror
add
sub
scas
push
stos
xchg
push
mov
xchg
jnp
adc
cmp
mov
push
aas
mov
push
addr16
adc
and
mov
test
sbb
and
mov
inc
js
out
xchg
int
push
sbb
aas
jl
js
ret
sub
or
add
xchg
fnstcw
pop
xor
xlat
ins
test
or
lds
mov
arpl
sub
outs
xor
mov
ss
mov
ror
dec
aad
out
movs
inc
sub
push
loop
xor
pop
ret
mov
mov
mov
inc
add
cwde
nop
dec
xchg
jb
rcl
pusha
clc
and
add
(bad)
shl
and
mov
jp
inc
movs
fistp
push
pop
and
enter
cmp
sti
dec
gs
sub
pusha
sahf
or
or
mov
jo
and
mov
push
enter
stos
arpl
mov
arpl
pop
cmp
test
stc
cwde
xchg
mov
lock
xor
add
jno
pop
test
pminsw
les
aad
mov
jo
and
xor
ja
pusha
push
call
mov
lods
cmps
lods
test
cmp
clc
ret
fidivr
xchg
pushf
mov
ret
cmps
pusha
dec
mov
rcr
bound
mov
popa
mov
mov
ja
xor
test
(bad)
pop
xchg
leave
sbb
mov
movs
jne
cli
fistp
das
and
sbb
dec
out
or
jge
push
sbb
test
mov
retf
das
cwde
outs
jno
jne
add
clc
leave
retf
rcr
xchg
jno
(bad)
xchg
out
sbb
js
adc
movs
jmp
pusha
pop
xchg
and
dec
popf
and
pop
mov
adc
inc
sub
cmp
out
mov
(bad)
cld
xlat
pop
mov
cld
lock
aas
ins
or
adc
pop
push
push
stos
add
std
add
jne
adc
mov
lahf
jno
lahf
add
call
cmp
jbe
add
mov
jmp
lea
adc
cmp
pop
hlt
daa
xor
loopne
adc
ds
stc
std
popa
rcr
scas
shl
push
sbb
or
jmp
or
jmp
shl
mov
fdiv
popa
pop
dec
in
xchg
jae
cmp
sub
ja
sbb
call
popf
sbb
adc
addr16
adc
int3
paddusw
jae
lea
mov
mov
mov
inc
xchg
imul
xor
pop
xchg
fdivr
xchg
nop
cdq
adc
(bad)
popa
push
inc
dec
je
inc
cmp
and
and
jle
push
jns
aaa
aam
pop
mov
sbb
in
ret
addr16
fisttp
cmc
jne
inc
inc
inc
adc
adc
pop
daa
movs
ret
push
popf
call
add
and
cmp
add
(bad)
loopne
inc
xor
hlt
pusha
cdq
popf
push
cmps
pop
ret
and
push
sub
rol
cwde
xor
jmp
and
leave
retf
sbb
rcr
jae
push
enter
or
sbb
sbb
scas
sbb
test
shr
int
pop
test
sub
sbb
xor
add
out
add
mov
aaa
popf
or
imul
movs
inc
xor
cmp
call
(bad)
call
ficomp
cmps
loopne
aad
push
mov
in
xchg
fcmovu
movs
pop
push
loopne
sub
pop
ins
sbb
rcr
nop
pop
and
jge
xor
call
jp
jne
sub
xchg
fisttp
out
pop
or
jmp
fild
ja
sar
pop
stos
add
adc
(bad)
push
scas
jae
push
dec
jbe
pushf
or
(bad)
xlat
stos
add
push
iret
push
shr
(bad)
mov
mov
int
mov
cmp
adc
mov
sub
sub
xor
out
push
sbb
cmp
pop
ins
cmp
add
aaa
pop
mov
sub
mov
pushf
test
push
adc
test
aad
adc
pop
call
fdiv
mov
enter
xchg
cmp
stos
loopne
jno
nop
out
lock
leave
adc
icebp
jb
inc
sbb
xor
test
sbb
xor
ds
scas
rcl
inc
cmps
mov
mov
mov
cmp
mov
xor
test
movs
and
adc
dec
push
out
cld
cmc
in
dec
ror
fstp
add
scas
dec
sbb
leave
pop
sub
xchg
movs
or
jnp
dec
bound
dec
or
repz
push
ja
(bad)
adc
mov
dec
rcl
rol
leave
inc
int3
sub
or
popa
(bad)
lods
xchg
popa
sub
hlt
push
rcr
dec
inc
lahf
iret
imul
add
lods
jne
ds
and
cmc
or
dec
push
mov
(bad)
jns
mov
stos
adc
popa
retf
or
pop
mov
loopne
fcom
and
xchg
dec
mov
dec
mov
push
xchg
push
cmp
jb
scas
pop
jecxz
jecxz
pop
and
(bad)
or
or
das
sti
jb
mov
xor
fcomp
test
test
mov
jno
(bad)
sar
mov
mov
call
xor
ds
xchg
fwait
test
push
loop
fist
sbb
loopne
adc
or
cmp
iret
cs
inc
mov
cmp
push
aaa
xor
inc
movs
in
sub
mov
push
fbstp
loopne
pop
cs
mov
sbb
cmp
adc
pop
neg
or
outs
xor
pop
sar
xlat
sbb
das
mov
push
adc
js
push
add
adc
jae
pop
cwde
xor
adc
sub
or
push
sbb
mov
xor
xchg
lea
stos
and
ja
daa
call
lock
mov
test
lods
xchg
cmp
retf
push
adc
mov
les
inc
mov
fild
and
xor
push
add
mov
push
mov
addr16
sar
push
inc
pop
scas
in
loopne
adc
in
mov
mov
scas
or
std
pop
xor
imul
mov
inc
aad
repz
push
cmps
sub
cmp
fistp
add
clc
test
pusha
pop
fistp
sub
mov
sub
jo
add
(bad)
mov
push
ficom
jne
and
in
push
jb
add
(bad)
dec
adc
into
test
(bad)
imul
ror
and
add
pop
sar
jae
mov
neg
mov
xlat
loopne
xor
xor
ret
hlt
sbb
push
js
xor
inc
outs
hlt
lods
leave
leave
fdiv
fcom
pusha
inc
xlat
popf
(bad)
(bad)
std
ins
ja
aas
cdq
adc
xchg
(bad)
sub
out
cmps
hlt
push
sub
mov
loop
inc
push
mov
stos
cld
xor
inc
mov
movs
es
cmp
xchg
rcl
dec
idiv
aaa
and
inc
mov
movs
pop
(bad)
pop
retf
fs
inc
sbb
mov
mov
fs
sbb
out
mov
dec
test
repz
add
mov
add
ins
mov
les
mov
xchg
scas
scas
jmp
out
mov
mov
pop
mov
push
sub
sub
lods
fld
mov
sbb
popa
jne
fwait
inc
xchg
test
ds
xchg
sub
iret
nop
pop
mov
push
(bad)
cmp
not
aas
stc
adc
sub
imul
mov
mov
ret
mov
shl
iret
push
pop
inc
pop
pop
push
ja
aad
loopne
add
cld
pop
mov
and
je
mov
mov
cmp
jmp
dec
dec
pop
mov
xchg
not
fs
xchg
in
adc
pop
(bad)
xor
push
or
sub
or
fs
xchg
test
inc
out
mov
rcl
push
xor
mov
pop
jo
jmp
sete
mov
sub
mov
sar
in
dec
push
xchg
inc
fwait
push
pop
punpckhdq
mov
push
movs
add
mov
jb
adc
repz
cmp
push
lea
adc
mov
test
dec
dec
add
adc
push
(bad)
loopne
xlat
mov
out
inc
dec
(bad)
(bad)
sti
cmp
xchg
jns
out
aad
mov
pop
push
ror
lds
shl
bound
stc
sub
dec
push
and
clc
fdivr
push
jmp
jnp
pop
lahf
in
loop
fnstsw
push
mov
jl
lods
pop
push
(bad)
repnz
bound
scas
sbb
xchg
cmp
dec
cs
jnp
jl
inc
pop
push
and
dec
in
inc
sub
ins
(bad)
sub
push
xchg
sti
int
ror
or
imul
aas
outs
sar
stos
aaa
cmp
xchg
and
mov
jl
push
lock
lds
ret
lahf
(bad)
out
fistp
outs
mov
adc
jo
push
cmp
pop
inc
xlat
jp
aad
xchg
jae
push
cmps
ins
inc
out
ficomp
add
(bad)
jb
repz
mov
cdq
xchg
stos
rep
lods
jae
inc
jg
add
fldcw
lock
cwde
(bad)
daa
xor
mov
xchg
pop
mov
xor
pop
xchg
loopne
cmps
loopne
inc
mov
ret
adc
pop
mov
shl
out
mul
aas
js
retf
lods
mov
jbe
or
and
lock
jnp
add
or
sbb
adc
mov
push
jae
stc
mov
xor
call
loope
mov
sub
and
inc
mov
mov
fdiv
push
sbb
push
push
push
repz
fdivr
dec
iret
pop
mov
repnz
test
jg
jle
fadd
pop
xchg
lahf
push
mov
adc
jo
repnz
inc
adc
pop
pop
jns
and
mov
(bad)
loopne
adc
(bad)
test
add
jae
inc
call
sub
ss
pop
pop
stos
stc
ds
repz
hlt
sub
repz
jge
(bad)
fwait
ins
jecxz
mov
pop
sbb
mov
or
sub
addr16
jl
add
dec
push
xor
jno
jmp
fnstsw
cmp
xchg
aas
popa
test
push
ds
nop
dec
cmp
popf
cwde
sbb
xor
sub
sub
je
icebp
dec
add
les
mov
mov
adc
pop
scas
mov
popf
in
scas
ins
sbb
push
cli
lds
xchg
scas
mov
bound
sub
add
xchg
stos
mov
dec
sbb
xor
add
and
lahf
cld
cdq
push
push
lea
shr
push
loope
and
ret
xchg
pop
jl
sub
(bad)
arpl
mov
hlt
inc
cmp
add
mov
dec
and
fwait
sti
jmp
fwait
and
jae
sub
stos
cmps
add
jne
cmp
mov
pop
out
arpl
pop
inc
sub
(bad)
mov
jmp
ffreep
sbb
and
jmp
dec
lea
mov
push
int
fxch
lock
jae
jmp
in
dec
push
in
(bad)
jnp
lods
aam
cmps
or
bound
jo
adc
push
loopne
adc
loope
int
add
bound
add
jge
add
jno
push
nop
inc
jle
dec
inc
lods
jb
jp
jle
inc
arpl
adc
sbb
scas
or
popf
push
inc
psubq
in
jo
xor
ret
addr16
mov
cmp
(bad)
or
in
sbb
leave
es
push
addr16
(bad)
call
aam
lahf
lods
adc
repnz
loopne
sahf
inc
mov
or
sti
xlat
xchg
fs
test
jmp
pop
cmp
xchg
or
sub
fisubr
outs
inc
or
sbb
sbb
dec
test
xor
loope
adc
inc
dec
xchg
mov
jne
push
and
xor
adc
mov
xchg
pop
ins
out
popa
sub
adc
bnd
mov
imul
outs
xchg
sbb
mov
add
in
pop
xchg
jbe
sbb
push
lods
enter
(bad)
fucomip
sbb
cmc
test
in
cld
scas
add
mov
dec
retf
lods
shl
popf
test
and
scas
mov
and
push
pop
ficom
(bad)
(bad)
ss
dec
or
push
fst
pop
sub
cmp
add
loopne
inc
enter
dec
xor
or
xchg
add
sbb
mov
cmps
sub
mov
inc
mov
or
jne
mov
loope
mov
adc
jbe
mov
clc
jmp
fild
inc
out
into
ror
movs
sbb
and
adc
std
(bad)
test
rcr
xchg
and
adc
pop
rol
mov
jg
xchg
pop
fcmove
cmp
sub
adc
cli
lock
sahf
inc
jmp
and
dec
adc
mov
out
lock
int
xor
push
push
cmps
(bad)
inc
into
das
test
mov
mov
pop
call
icebp
jecxz
test
dec
push
cmp
xchg
cmp
bound
fnstenv
jo
pop
push
push
jno
imul
imul
lods
rol
cmps
fwait
xor
xor
imul
sbb
mov
mov
jmp
inc
fdiv
push
sbb
pop
popf
lods
jecxz
rcr
loope
mov
pop
xchg
sub
je
cs
mov
cmps
loop
out
cmps
xchg
adc
mov
and
mov
sbb
and
dec
fidivr
test
lock
add
loop
mov
mov
xchg
jl
pop
xor
or
or
fcmove
rol
div
and
movs
ds
jae
ss
aad
btc
outs
push
jne
(bad)
les
je
xchg
outs
jns
sub
sti
ins
sub
rcl
and
lea
mov
inc
rcr
dec
or
inc
ins
repnz
push
pushf
jp
sub
xor
das
inc
lds
xchg
push
cmps
loope
popa
fisub
jle
xchg
sub
retf
pop
popa
mov
jecxz
add
retf
(bad)
icebp
dec
es
mov
push
mov
inc
(bad)
pop
sbb
cmp
rcr
mov
(bad)
sub
cmp
test
mov
fs
pop
ret
xchg
ror
lock
xor
ja
jns
movs
adc
fcomp
sbb
out
ret
(bad)
and
or
ficomp
sub
sbb
ins
xchg
jge
cmc
pop
adc
aas
mov
mov
out
int3
mov
mov
mov
sub
sahf
jo
cdq
lock
push
mov
dec
inc
ror
push
fadd
mov
add
fmul
inc
in
dec
cmp
jnp
sti
mov
xor
loop
or
push
jecxz
fs
xor
sti
and
mov
outs
jb
fadd
xchg
xor
(bad)
lahf
mov
loope
xor
push
jecxz
mov
jo
xchg
jnp
(bad)
repz
test
enter
fucomi
rcr
sbb
retf
out
out
call
xchg
fs
fidivr
xor
jecxz
dec
ins
xor
jmp
or
int3
icebp
adc
sub
pusha
mov
jp
fcomi
(bad)
fisubr
mov
in
mov
icebp
xlat
xlat
cmp
shl
xchg
push
sbb
cmp
cmps
mov
jle
pushf
cmp
jmp
adc
loop
xchg
sub
push
dec
add
push
cmp
fs
out
xchg
add
and
ins
xor
sub
add
dec
in
lea
cmp
test
mov
sbb
lods
sub
icebp
mov
mov
xor
ret
retf
cmp
fisttp
mov
loop
push
mov
adc
pushf
jmp
xchg
xor
and
pop
fiadd
aad
in
pop
mov
add
ins
mov
int3
call
xlat
push
dec
xchg
jnp
movs
addr16
lods
jl
mov
lds
cli
mov
mov
xchg
aaa
aad
daa
mov
rcr
imul
mov
cmps
leave
push
xor
push
xor
js
adc
xchg
test
cmp
jmp
cmp
icebp
aam
mov
sti
mov
ficomp
adc
ins
jl
pop
mov
mov
(bad)
out
or
mov
add
pop
or
xor
push
cli
sub
inc
jle
test
es
retf
xchg
add
jbe
xchg
mov
xchg
(bad)
jle
adc
and
shr
inc
sbb
cmp
imul
inc
lds
jo
(bad)
outs
jge
xchg
push
vmovaps
xchg
sbb
cwde
inc
and
fwait
sti
js
xor
jns
mov
push
pop
aas
nop
mov
sti
mov
repnz
xor
shl
aad
sub
mov
outs
xchg
inc
xor
xor
sbb
push
pop
jecxz
fstp
inc
sub
test
mov
sbb
mov
sub
(bad)
cmp
das
gs
jp
mov
add
mov
pop
or
mov
(bad)
scas
fadd
mov
add
(bad)
hlt
pop
icebp
cmp
sub
push
cmp
test
bound
js
pop
pop
shr
jbe
imul
and
rol
test
adc
movs
add
call
dec
test
sbb
arpl
(bad)
aam
sbb
or
shl
(bad)
cwde
ret
mov
sub
inc
call
sbb
push
in
jge
push
jecxz
ret
call
and
and
cmp
rcl
cmp
and
stos
popa
cmp
jns
mov
xchg
stos
sub
hlt
cmovno
and
sbb
sub
arpl
hlt
lock
aaa
pop
in
test
jmp
mov
mov
fcom
ja
shl
iret
stc
icebp
add
or
or
and
test
inc
shl
lods
jbe
mov
xchg
pop
fs
loopne
xchg
jnp
sahf
into
push
push
out
icebp
push
jmp
loopne
or
xor
pop
pop
mov
les
addr16
arpl
into
call
shl
jp
les
cmp
idiv
rol
add
mov
push
stc
rcl
ins
cmp
test
mov
icebp
or
or
inc
(bad)
dec
or
les
xchg
and
adc
dec
add
mov
pop
cmps
je
test
add
adc
sub
div
sub
mov
cmp
mov
mov
es
mov
dec
int3
imul
sbb
ficom
stos
sar
sub
xchg
cwde
aaa
mov
pop
lods
shl
nop
cmp
dec
in
lods
cmc
les
push
add
div
sub
add
push
inc
and
jecxz
mov
sub
neg
mov
sub
or
fstp
(bad)
sub
cmps
(bad)
xor
xchg
cmp
xchg
push
inc
hlt
sbb
outs
jmp
pop
imul
int
outs
mul
mov
or
mov
adc
int
mov
(bad)
dec
push
mov
(bad)
pop
jecxz
mov
push
arpl
jge
pushf
mov
dec
fucomip
xor
es
pop
push
shl
mov
aad
sub
clc
add
pop
mov
inc
out
div
and
stos
mov
push
pop
push
push
cmc
cld
lock
ins
push
dec
mov
xchg
shl
mov
ret
cmp
in
mov
mov
sbb
sub
loop
in
cmp
out
fld
lods
push
repnz
les
sbb
repnz
mov
push
or
ss
aaa
mov
loopne
xor
into
or
aam
repnz
into
ins
ins
sbb
rcr
cwde
fidiv
and
lahf
cmc
sub
add
push
xchg
shr
sbb
xchg
or
in
test
mov
jo
bound
push
add
sbb
loop
adc
sti
ins
fs
loope
imul
outs
(bad)
push
int
frstor
pop
call
cmp
icebp
pop
or
lds
cmps
dec
mov
pop
jnp
fidiv
jns
cmp
inc
int3
jbe
dec
hlt
xor
add
cli
xor
ror
xchg
and
stos
lods
in
cmp
bts
push
jecxz
and
or
lahf
fisttp
adc
imul
push
xchg
pop
jae
repnz
std
inc
sub
sbb
or
dec
push
(bad)
popa
jecxz
sub
test
jns
adc
iret
leave
push
pop
leave
loope
rcr
fst
adc
mov
inc
or
push
add
jl
inc
ror
jns
pop
and
jmp
ficomp
icebp
cmc
fxch
push
xor
jb
cmp
mov
cli
jae
das
imul
inc
fisubr
ret
pop
add
lock
call
ret
or
xor
dec
xor
push
jl
sbb
inc
aaa
es
fadd
xchg
mov
push
xchg
fld
add
adc
test
jp
dec
aad
jnp
enter
add
into
xor
popa
test
retf
xchg
or
xchg
cmp
xchg
movs
jmp
adc
shl
jge
idiv
add
(bad)
and
icebp
adc
fild
cmc
call
jmp
inc
mov
cld
mov
jbe
push
sbb
mov
or
ins
push
xor
jnp
ret
loop
sub
xchg
std
xor
loope
loop
push
add
add
push
(bad)
add
stos
add
popa
adc
adc
xchg
fs
add
sbb
nop
popa
push
fsub
test
aaa
cli
mov
inc
lea
cwde
jb
and
scas
pushf
sub
fisub
lahf
cmp
aam
mov
scas
xlat
lods
in
je
xor
jne
sub
add
mov
and
xor
xchg
fdivr
jmp
add
shl
test
out
fsubr
(bad)
ins
mov
push
aam
adc
aaa
(bad)
repnz
stos
mov
and
xor
sub
scas
call
xchg
out
sbb
dec
jnp
js
nop
fcmovnbe
(bad)
out
out
sbb
test
call
mov
stos
mov
mov
adc
imul
jmp
out
cmc
push
cmp
mov
xchg
ins
es
mov
std
jp
int
cmp
mov
(bad)
popa
sub
hlt
mov
out
ja
adc
imul
in
shl
push
retf
aad
push
mov
imul
xchg
dec
aas
mov
repnz
cwde
out
jmp
ffreep
dec
sti
and
mov
jbe
jno
pop
mov
aad
pop
cmp
sti
xor
add
push
pop
lods
and
sub
or
mov
hlt
or
imul
aam
and
ds
fldenv
jmp
(bad)
(bad)
add
ins
fcom
mov
inc
pop
mov
rcr
dec
call
ret
stos
in
in
mov
in
clc
bts
mov
sbb
shl
inc
retf
loop
fnstcw
mov
cdq
mov
xor
push
dec
pop
mov
pop
cmp
xor
mov
les
dec
mov
dec
mov
test
ins
pop
sub
in
push
mov
push
in
sbb
jmp
add
popa
int3
xor
sub
inc
dec
jno
jp
test
aam
mov
clc
fisttp
pop
cmps
mov
(bad)
sbb
adc
push
mov
cmp
pop
or
rcr
and
dec
dec
lods
fiadd
push
jne
clc
movs
pop
mov
call
iret
repnz
push
in
ret
or
ds
out
cmp
cdq
xor
ins
jno
fistp
test
retf
pop
(bad)
aam
inc
fld
add
jle
push
sbb
hlt
les
sbb
or
cmp
ffree
adc
aam
rcr
push
pop
jp
add
jge
loope
rol
fisubr
out
out
(bad)
loopne
ror
sar
mov
std
stos
sahf
(bad)
mov
scas
dec
jecxz
cmp
mov
or
mov
mov
add
leave
dec
sbb
inc
mov
popf
or
inc
repnz
ds
sbb
mov
adc
stos
into
icebp
shr
xchg
cld
dec
adc
mov
add
sub
push
jle
pop
xor
mov
sbb
test
adc
dec
pop
leave
aad
mov
movs
stos
push
addr16
inc
mov
jo
sbb
jecxz
lods
jecxz
inc
ds
push
nop
cmc
add
mov
sub
mov
sub
push
jns
xor
hlt
pop
xor
mov
jno
pushf
scas
jmp
test
adc
cmp
mov
outs
mov
nop
mov
(bad)
cmp
data16
push
jbe
xchg
icebp
aad
push
popa
jns
and
pop
call
jb
mov
(bad)
(bad)
xor
mov
lahf
clc
into
sti
aaa
xchg
jmp
cmp
mov
fistp
dec
jmp
fsubr
mov
ror
and
mov
into
and
pop
jg
mov
fucomp
xor
inc
mov
jnp
imul
push
stos
cmps
int
shl
ror
int
jle
sbb
sti
popf
fxch
sub
dec
mov
mov
jno
xlat
jg
dec
shr
add
not
fdivp
dec
adc
inc
mov
js
pop
sbb
enter
dec
mov
outs
pop
mov
mov
ret
sbb
pop
jae
je
dec
in
lock
cld
mov
push
(bad)
out
jbe
xchg
jo
shl
cmp
call
add
inc
xor
mov
mov
inc
xchg
push
xor
in
cmc
jae
pop
lahf
mov
push
or
and
pop
leave
gs
pop
lods
or
mov
inc
inc
or
fstp
push
mov
pop
xor
test
enter
mov
fild
push
push
movs
or
mov
mov
outs
into
sar
adc
jle
xchg
scas
and
enter
sub
out
lea
(bad)
leave
inc
jb
xchg
xchg
pop
dec
iret
cmc
or
jbe
inc
repz
test
retf
out
icebp
lahf
adc
pushf
dec
and
or
dec
iret
faddp
add
jp
push
mov
sahf
dec
or
xor
data16
lahf
xchg
(bad)
scas
and
adc
jb
and
jecxz
push
mov
xchg
jecxz
lock
inc
xor
pushf
dec
repnz
sar
push
xchg
pusha
inc
mov
sbb
sub
mov
(bad)
lahf
mov
idiv
mov
jbe
mov
dec
iret
int3
sub
cmp
retf
add
test
imul
in
mov
(bad)
out
push
rcr
cld
hlt
aas
in
setne
cwde
fldl2t
loopne
ja
std
(bad)
loope
out
call
inc
xor
sbb
test
pushf
in
xchg
inc
mov
pop
mov
jnp
cmps
inc
xchg
xlat
adc
sbb
loop
jg
ins
lea
ret
fdiv
in
retf
imul
sub
sbb
loopne
sub
fsub
(bad)
dec
in
lea
(bad)
add
lahf
pop
call
data16
xchg
jb
mov
add
arpl
xlat
lods
int
dec
ins
fidiv
xchg
sbb
jle
call
push
in
push
mov
adc
jecxz
inc
sbb
pop
xor
outs
pop
idiv
ret
cmps
clc
scas
inc
call
repnz
xor
fwait
out
jg
push
mov
add
or
cmps
ins
in
retf
stos
aad
int3
bound
daa
dec
out
pop
ret
xchg
sub
cmp
xor
les
(bad)
push
pop
addr16
inc
cmps
mov
fcom
jmp
ficomp
inc
cmp
(bad)
xor
add
psubusb
mov
fisttp
mov
cmp
out
push
clc
loopne
int3
add
sub
ret
pop
jno
mov
imul
mov
dec
xor
stos
stos
pop
mov
sub
sub
sahf
(bad)
pop
mov
adc
test
sbb
int3
push
sub
fld
adc
add
mov
adc
cld
xchg
(bad)
fmul
inc
hlt
loopne
test
pushf
or
mov
call
adc
and
lods
test
sub
dec
cmp
es
adc
mov
xchg
xchg
add
or
movs
pop
mov
or
clc
sbb
jmp
dec
cmc
xchg
(bad)
fmul
mov
sahf
fs
cmp
xchg
fwait
std
pop
pop
mov
xchg
jbe
jae
mov
iret
adc
nop
lods
loop
or
push
clc
mov
adc
mov
out
mov
ja
nop
mov
jle
pop
leave
and
inc
mov
jae
cmp
jmp
push
scas
fucomip
jge
cmp
mov
jmp
lds
jo
mov
icebp
add
ror
icebp
stos
cmp
lods
pop
adc
bound
or
mov
ins
dec
and
lahf
out
xor
push
aam
push
popf
addr16
jo
movs
cmp
clc
mov
inc
iret
mov
cmp
in
(bad)
mov
and
sub
add
loope
fucomi
inc
adc
cmp
test
ja
les
mov
xchg
dec
push
inc
call
push
push
es
mov
call
retf
push
cmp
inc
popa
cmp
push
mov
bound
nop
xor
scas
jmp
cmps
jno
sub
int
pop
(bad)
call
inc
sub
lods
inc
std
aam
or
adc
xchg
push
(bad)
jge
aas
rcl
(bad)
sar
dec
bound
aam
mov
push
or
stos
pop
std
xchg
add
loop
jbe
iret
(bad)
fidivr
(bad)
fst
mov
xor
jg
cmp
clc
cld
lahf
mov
push
mov
test
ds
mov
lahf
sub
pop
lea
cmp
mov
pop
xchg
push
popf
gs
fisub
or
jno
(bad)
fidivr
retf
and
sub
inc
sti
call
push
fnsave
test
mov
mov
or
test
imul
ror
add
sbb
ins
jp
rol
sar
sbb
test
mov
or
idiv
sub
sti
add
nop
pop
cmps
jae
sub
and
add
ret
aaa
ret
add
je
xchg
mov
mov
mov
shl
(bad)
bound
popf
shl
mov
adc
or
jns
jb
ror
imul
add
push
lods
pop
(bad)
xor
jno
cmp
repz
outs
bswap
mov
cmp
call
and
and
xchg
loop
push
loop
rcl
mov
add
int3
mov
ss
retf
mov
ret
push
xor
pop
and
dec
nop
push
dec
cmp
hlt
rcr
sbb
(bad)
rol
in
sbb
test
ss
xor
add
ja
in
mov
mov
or
dec
push
stc
push
cmp
pop
mov
xchg
add
mov
out
xchg
sbb
les
mov
mov
sbb
lods
xchg
movs
pushf
dec
mov
or
mov
aaa
bound
lods
pop
rol
and
xchg
pop
cmp
gs
adc
push
retf
loope
jmp
fwait
dec
cwde
push
mov
ins
pop
or
cmp
pop
and
adc
js
add
(bad)
sahf
cld
jnp
pop
inc
out
inc
xor
jns
stos
cmp
(bad)
aad
enter
sbb
fistp
sbb
pusha
inc
jmp
xlat
and
(bad)
movs
test
cmp
icebp
aas
mov
fbld
fcmovbe
rol
jge
cmps
lds
imul
sbb
lea
ret
mov
adc
std
mov
push
in
imul
dec
sub
adc
push
repz
addr16
repnz
mov
adc
jo
iret
movs
mov
into
inc
jmp
sbb
push
push
imul
jl
int
mov
adc
dec
mov
mov
push
ret
(bad)
movs
xchg
mov
int3
push
call
shl
in
pop
jg
in
and
bound
sti
sub
sub
cs
xchg
and
push
push
ja
push
ss
lds
nop
cmp
cmp
outs
adc
scas
pop
test
mov
das
add
js
(bad)
fwait
iret
cmps
pop
jo
mov
lds
push
sub
loope
sbb
pop
and
jae
pop
(bad)
aas
and
cld
lahf
ret
repz
mov
xor
sub
fidiv
lahf
fcmovbe
pusha
rcr
xor
cmp
ja
and
in
cmp
inc
push
mov
jne
push
test
loopne
sub
pop
ds
xlat
mov
add
mov
test
sahf
jnp
in
add
mov
enter
pop
and
jo
or
dec
push
dec
mov
sbb
push
into
daa
cmps
xor
cmc
imul
aas
fsubr
ja
xchg
(bad)
nop
sub
adc
mov
mov
mov
scas
jb
stos
adc
and
sbb
fidivr
ins
and
into
jecxz
retf
inc
(bad)
push
pop
cs
pop
movs
daa
nop
xchg
mov
pop
fs
sbb
loope
push
xchg
sti
mov
mov
daa
cmps
ret
mov
mov
rcl
cmp
mov
arpl
xchg
test
cmp
mov
cmp
(bad)
iret
cmp
jae
cs
(bad)
gs
retf
repnz
pop
xor
shl
popf
sub
mov
adc
cdq
or
push
test
fnstcw
test
mov
dec
stos
and
out
call
nop
cdq
pop
ja
mov
dec
fmul
inc
pop
add
push
icebp
sub
push
inc
mov
retf
ficomp
mov
cld
mov
test
inc
push
sub
pop
repz
pop
jb
sbb
push
sbb
push
inc
or
pop
xor
cmps
mov
fs
pop
fst
frstor
rcl
fwait
jle
add
not
mov
inc
into
cmps
dec
aad
lock
imul
jle
out
shr
xchg
mov
bound
inc
dec
pop
jae
add
mov
mov
xchg
add
dec
hlt
or
dec
inc
enter
scas
in
lahf
or
sti
sbb
jne
sub
ja
adc
pushf
add
icebp
leave
xchg
icebp
and
pop
push
in
jp
dec
sbb
sub
inc
mov
stc
stos
sub
push
xchg
adc
mov
out
mov
xchg
push
fcom
movs
mov
dec
imul
sti
cmps
push
popa
gs
xchg
lea
je
xchg
mov
je
outs
arpl
addr16
(bad)
xchg
daa
rcl
mov
pop
into
jns
mov
lock
mov
inc
cmp
pop
mov
pop
rcl
mov
jne
out
fs
mov
pop
mov
retf
cs
pop
xor
xor
mov
stc
adc
xchg
aas
mov
ret
and
mov
imul
mov
or
pop
fisub
pusha
call
and
cmc
(bad)
jno
enter
and
or
push
mov
pop
sbb
or
icebp
je
ss
imul
push
push
sbb
inc
int
jle
jge
and
xlat
lods
sbb
fwait
adc
sbb
outs
adc
push
inc
mov
mov
mov
clc
add
mov
out
inc
adc
mov
xchg
(bad)
les
or
outs
in
mov
xchg
rcl
and
xchg
adc
mov
mov
mov
jl
in
push
fild
ret
in
xor
fldpi
iret
jne
push
jp
sub
mov
lahf
ret
aas
aam
xchg
bound
push
jbe
mov
pop
adc
lods
fisubr
sub
out
retf
loopne
loop
mov
add
xchg
rol
mov
pop
pop
cmp
add
(bad)
sbb
xchg
ja
pusha
lds
ds
mov
dec
adc
jp
ret
add
jbe
and
xchg
mov
ja
xchg
aaa
and
or
add
and
call
test
adc
inc
add
add
imul
cmps
mov
inc
scas
test
test
or
cmc
cmp
or
shr
jo
push
sub
mov
movs
in
cmp
and
mov
cmps
out
or
dec
les
(bad)
sbb
push
aas
push
mov
xchg
cli
dec
fsubr
adc
sbb
mov
mov
outs
inc
or
or
ds
sub
mov
jecxz
cmps
push
bound
jecxz
div
cs
xchg
push
adc
fnsetpm(287
jge
jge
dec
(bad)
fwait
(bad)
push
div
pop
clc
out
scas
dec
fnstcw
stos
xor
inc
mov
pop
das
mov
sbb
or
rcl
and
push
out
inc
sbb
jno
sbb
int
inc
jno
sbb
dec
dec
ror
push
cwde
lods
mov
nop
movs
(bad)
nop
or
push
hlt
jnp
xchg
inc
scas
inc
dec
aad
ror
inc
or
mov
pop
ror
or
mov
out
shl
cli
das
movs
mov
(bad)
pushf
pop
dec
dec
es
push
jns
and
pop
inc
cli
bound
hlt
sbb
loopne
cmp
mov
or
and
jl
mov
cmp
popf
ins
lods
adc
rol
sub
jmp
out
inc
mov
cs
inc
and
xchg
data16
or
xchg
lea
mov
add
stos
mov
dec
xor
or
mov
or
lods
pop
(bad)
daa
nop
iret
mov
shl
mov
div
adc
xor
mov
(bad)
or
sbb
(bad)
jmp
mov
inc
stos
xchg
jbe
or
mov
cmps
test
and
xor
out
(bad)
out
jmp
pusha
mov
push
and
icebp
ja
cli
aad
gs
call
pop
lods
fiadd
and
add
xor
or
or
movs
sub
imul
call
rol
nop
scas
daa
or
data16
pusha
cmps
mov
daa
mov
arpl
xor
add
jge
leave
stc
sbb
xor
cmp
jmp
sub
mov
lahf
and
xor
mov
imul
into
cli
or
fdivrp
jmp
jmp
push
push
cdq
jne
xchg
mov
pop
(bad)
adc
jge
inc
pop
lods
stos
xor
les
jb
xor
add
int3
pop
push
aad
and
sub
icebp
mov
cmp
loope
and
lahf
sbb
fwait
sahf
fwait
push
imul
stos
out
outs
pusha
shr
jl
int3
push
ins
pushf
cld
lds
xchg
add
dec
ret
mov
fist
mov
add
xchg
and
ss
jae
fdivr
and
clc
rcl
ins
repnz
jmp
jmp
mov
cmps
inc
lods
cli
scas
dec
cmp
push
stos
cmps
daa
in
(bad)
daa
xchg
jmp
jns
pop
in
fiadd
in
xchg
inc
repz
cmp
outs
out
inc
sub
nop
add
sbb
jmp
push
sub
inc
mov
aam
xchg
aad
repnz
pop
inc
push
push
mov
mov
shr
pop
jmp
cmp
push
cmp
popa
xor
popa
(bad)
jmp
cmps
into
mov
pop
nop
pop
test
cmp
mov
xor
cmp
jle
pop
sbb
popf
jp
push
fild
outs
pusha
xchg
and
aam
cmc
data16
fisub
inc
cmps
xor
xchg
add
dec
loop
lods
xchg
in
sti
(bad)
jmp
cdq
jge
lock
mov
add
vpaddq
mov
loop
dec
cmp
sbb
sbb
call
shr
lea
xor
pop
and
cmpps
cmovg
test
cmp
pop
cmp
pop
push
movs
adc
into
inc
cmp
xchg
test
cld
sbb
push
or
iret
imul
sbb
sub
cdq
js
mov
mov
dec
imul
jge
cmp
sbb
inc
mov
fst
bound
icebp
mov
sub
and
fdivr
add
pop
xchg
pusha
cmovns
cmp
or
stos
scas
xchg
bound
or
jge
xor
add
or
xchg
dec
mov
adc
mov
add
mov
fistp
xchg
scas
pusha
cmc
jno
push
sub
inc
sub
in
cmp
jb
(bad)
xchg
pop
sti
not
ret
inc
ss
scas
inc
repnz
fistp
ss
test
arpl
daa
jp
or
(bad)
int
cs
dec
xchg
pop
pop
mov
add
es
add
mov
jge
adc
cmps
adc
sbb
out
sub
mov
lahf
pop
sbb
aas
jnp
outs
push
mov
push
mov
mov
in
xor
sbb
cmp
inc
push
mov
mov
adc
stos
adc
test
paddsb
mov
adc
push
pop
xlat
push
inc
pop
or
scas
icebp
cmps
cmc
inc
loop
and
xor
dec
cmp
jge
jle
hlt
dec
mov
sub
daa
xor
cld
and
out
aam
in
jmp
inc
mov
ficomp
cmp
int
repnz
loopne
sub
cwde
inc
stos
mov
add
mov
int3
(bad)
dec
or
rcl
xor
aaa
adc
sbb
xchg
jmp
lock
test
sub
test
sub
jg
mov
adc
out
xchg
bound
sbb
mov
sbb
ds
fld
mov
add
push
pop
cmp
aaa
push
jle
out
popf
les
jecxz
add
pushf
lods
stc
push
mov
rcr
cmc
jmp
clc
in
fiadd
sahf
sbb
sti
icebp
inc
enter
mov
mov
sub
xchg
dec
cmps
pop
mov
rcl
xor
lock
add
or
mov
add
fs
ror
cld
ja
and
sti
xchg
jne
mov
je
call
into
dec
push
mov
es
test
sbb
test
movs
pop
adc
jg
cmp
mov
cld
shr
cmp
xlat
cmps
ret
je
les
cs
mov
and
movs
jmp
add
cmp
call
ja
mov
pop
je
mov
add
push
test
(bad)
push
sub
xor
sahf
mov
iret
xor
sub
lods
sbb
ret
(bad)
dec
daa
adc
add
or
inc
jno
cld
fcomp
les
enter
cmp
xchg
pop
test
enter
and
inc
outs
adc
cld
mov
call
push
jmp
xor
pop
dec
std
mov
adc
lods
sar
adc
jge
dec
das
cmp
call
sbb
scas
xlat
jae
(bad)
sti
ins
and
jno
rcl
mov
jo
sbb
adc
(bad)
mov
aas
(bad)
push
mov
add
stc
clc
sbb
xchg
xchg
cmp
push
sar
jle
das
and
mov
cmp
pop
jp
inc
test
mov
sti
shl
addr16
shr
xor
aad
mov
inc
sub
xchg
push
cmp
push
push
mov
cmps
and
outs
je
sub
push
adc
sbb
mov
xor
dec
jb
pop
stc
test
loope
dec
fwait
cs
nop
out
lods
gs
or
mov
stos
and
(bad)
(bad)
sbb
std
sbb
xchg
fwait
adc
jp
xor
or
mov
dec
scas
xor
outs
add
jecxz
je
pop
dec
adc
sahf
fcom
inc
ret
jo
mov
sar
repz
out
(bad)
pop
sbb
outs
cld
lods
jmp
fmul
int3
sub
sti
xchg
sbb
pop
sbb
lods
or
mov
int3
not
mov
lock
inc
or
les
psubsw
mov
ror
shl
leave
adc
mov
mov
push
and
(bad)
mov
es
int3
inc
pop
and
cmp
in
test
out
pop
ret
data16
ror
cmps
icebp
sub
call
test
sub
and
inc
xchg
and
jmp
(bad)
shl
xchg
xchg
xor
daa
xchg
sub
neg
and
cld
and
fs
pop
push
pop
aas
push
push
stos
rcl
pop
push
xor
mov
pop
loope
fs
xchg
clc
adc
jg
lods
mov
inc
ja
or
lea
stc
mov
pushf
jp
jl
ja
xchg
in
arpl
mov
push
in
ja
push
push
mov
add
dec
addr16
add
mov
mov
push
mov
ret
in
push
(bad)
jl
scas
jmp
into
sub
out
sub
cmp
inc
dec
and
xor
mov
js
or
loop
sbb
or
mov
call
aam
and
jbe
mov
cs
sbb
or
jmp
(bad)
ins
jle
or
push
aaa
popf
mov
mov
adc
cmp
(bad)
or
imul
das
inc
and
in
mov
dec
adc
jle
aad
lahf
leave
call
dec
adc
or
and
std
in
icebp
jae
jl
pop
sub
inc
ins
mov
test
fisub
xchg
inc
mov
(bad)
pushf
push
(bad)
in
mov
call
or
jmp
lods
test
mov
cmp
pop
mov
xchg
sub
push
(bad)
mov
push
jl
arpl
cmp
pop
lods
push
lahf
nop
hlt
cli
mov
cmps
in
sub
adc
add
clc
mov
mov
int3
push
cmp
loop
jno
cmp
(bad)
jl
xchg
push
addr16
mov
adc
xor
mov
xchg
mov
es
cmp
mov
cmc
cmps
pop
jg
mov
cmps
movs
test
mov
int
shr
or
xchg
jbe
(bad)
jo
mov
dec
xchg
sahf
push
sbb
add
and
movs
xor
idiv
lods
mov
out
dec
lahf
adc
xor
out
or
lea
fiadd
xor
aam
mov
add
jle
hlt
sub
mul
loopne
and
fwait
lds
jnp
cmp
dec
sahf
cld
ins
inc
addr16
mov
xchg
cld
mov
fld
stos
out
xor
aad
mov
pop
xchg
and
outs
popa
call
retf
bound
lods
sub
fimul
mov
adc
pop
fptan
scas
xchg
setg
not
enter
pop
push
mov
(bad)
and
int
mov
retf
xchg
pop
rcl
test
(bad)
jne
push
mov
out
xor
loope
aas
frndint
xchg
xor
sub
jbe
mov
mov
cwde
pop
add
and
loope
or
add
inc
int3
fninit
cmp
ret
jno
fst
mov
jmp
mov
loop
cmp
xchg
sub
sbb
sbb
add
enter
and
and
xor
add
scas
gs
mov
or
mov
nop
dec
das
cli
xor
dec
stc
push
xchg
inc
mov
imul
cmp
mov
sbb
mov
push
xor
sub
(bad)
(bad)
mov
dec
rcl
xchg
outs
xchg
push
popa
mov
dec
and
push
push
push
inc
adc
(bad)
jnp
rcr
div
add
mov
sub
or
(bad)
je
test
push
mov
mov
inc
sub
sub
(bad)
cdq
inc
sub
push
add
adc
wrmsr
stos
aad
imul
push
clc
mov
int
clc
clc
fild
mov
xchg
mov
mov
mov
mov
pop
xchg
not
cmps
shl
mov
sti
mov
mov
das
dec
jg
popa
repz
push
add
fisttp
in
cdq
xor
mov
push
stos
in
mov
aad
lea
dec
shl
cld
cmp
mov
push
shr
add
cmp
test
in
imul
adc
nop
xlat
jecxz
add
nop
pop
lods
test
xchg
stc
imul
in
sti
and
adc
loopne
pop
xchg
loopne
pushf
ins
fldenv
mov
mov
xchg
pop
sbb
loopne
add
iret
add
jge
dec
das
retf
xchg
xor
sar
mov
mov
rcr
xor
mov
mov
popa
cdq
ret
out
test
sub
jge
loope
pop
ror
(bad)
cmps
sub
lock
xor
movs
inc
mov
fist
scas
pop
xor
icebp
cmp
adc
xchg
inc
dec
mov
hlt
or
(bad)
jp
inc
dec
xchg
push
push
adc
and
xor
and
add
loopne
fdivrp
and
add
add
movs
jl
jp
mov
loopne
test
sbb
jns
neg
lea
mov
shr
out
add
les
add
jecxz
jge
xchg
mov
xchg
xchg
or
sub
cmp
neg
sub
mov
mov
dec
adc
shl
sbb
test
xchg
xor
add
gs
mov
adc
jle
ds
rcl
jmp
or
(bad)
jp
xchg
jne
ror
aaa
ins
aaa
mov
pop
shl
xchg
test
inc
ficomp
push
mov
scas
adc
pop
into
jmp
mov
cs
xor
sbb
bound
ret
in
(bad)
lods
fisttp
lods
movs
mov
sbb
in
or
cdq
inc
js
in
lahf
mov
leave
test
in
pop
in
jo
clc
jge
mov
xchg
dec
push
std
int
lock
aas
enter
pusha
mov
mov
inc
inc
fsubr
stos
or
call
div
sbb
fdivr
pop
jmp
outs
leave
lahf
push
mov
lock
cmp
pop
jo
or
sbb
or
jne
fmulp
outs
loope
out
cmp
fcmovu
div
mov
adc
or
int
cmc
mov
adc
dec
ss
ss
fwait
ins
movlps
push
push
test
test
xchg
scas
aam
out
jb
dec
cmps
xchg
jge
retf
jnp
(bad)
outs
cld
inc
jl
test
mov
mov
ins
xchg
mov
dec
push
push
popf
xor
shr
imul
int3
mov
imul
repz
std
sar
add
loopne
out
test
out
add
xor
mov
nop
loop
sub
push
jle
fwait
sbb
fdivrp
cmc
in
sbb
push
dec
je
fnstenv
mov
sbb
and
lea
push
in
mov
xor
add
jmp
sbb
jmp
iret
mov
push
out
and
fbstp
lods
sub
mov
cmp
cmc
sti
outs
sbb
scas
mov
jge
dec
repz
(bad)
loope
mov
jl
aam
sub
sub
pop
cwde
and
xchg
jmp
(bad)
jg
outs
call
lahf
jnp
pop
leave
sbb
sbb
std
inc
retf
ss
fnstcw
mov
out
jne
pop
loope
test
or
and
adc
test
mov
cli
cmp
xor
sub
sbb
ja
xor
and
(bad)
mov
mov
xchg
xchg
pop
cwde
dec
int3
repz
inc
(bad)
mov
(bad)
mov
std
xor
fwait
mov
jo
and
xor
adc
movs
aad
pop
ins
mov
xchg
dec
jecxz
dec
int3
mov
in
push
les
inc
movs
sub
xchg
or
iret
sub
push
adc
fsubr
mov
test
fild
and
pop
dec
and
inc
push
(bad)
fs
enter
jae
jl
(bad)
das
inc
cs
mov
mov
dec
ja
inc
xchg
nop
ret
mov
inc
dec
xor
add
jns
mov
mov
jp
xor
fild
mov
repnz
stos
jge
daa
les
repz
xchg
daa
ss
cmp
dec
sbb
push
pop
cmp
adc
push
movs
icebp
test
aaa
aas
inc
dec
adc
pop
test
mov
fstp
(bad)
jae
ja
xor
lods
and
mov
outs
or
mov
push
push
pop
cld
shr
lock
(bad)
add
pop
inc
(bad)
test
push
cld
cmps
xor
pop
fistp
pushf
test
out
es
adc
and
cdq
ficomp
xlat
sbb
repz
push
jle
icebp
cmp
mov
dec
cdq
ret
adc
dec
pop
in
fistp
std
pop
mov
or
or
push
out
lds
test
out
mov
mov
scas
inc
and
mov
push
loope
popa
or
popf
in
cs
jae
add
icebp
push
idiv
das
into
imul
and
dec
and
sahf
sub
pushf
pop
fcomi
xchg
lock
adc
popf
loop
mov
add
popa
pushf
add
inc
add
xchg
push
sbb
(bad)
aas
sub
and
das
adc
pop
call
and
bnd
inc
push
les
cmp
xor
jp
in
cwde
clc
retf
je
(bad)
ror
dec
push
xor
or
sub
pop
mov
mov
pop
xchg
sbb
xor
test
sbb
and
into
jp
xchg
cmp
mov
adc
leave
adc
out
inc
cmps
xor
adc
mov
cwde
retf
inc
mov
inc
adc
test
int3
add
dec
sbb
push
push
dec
adc
push
jmp
pop
jp
inc
xor
ret
lods
sti
dec
daa
arpl
pop
mov
sbb
or
mov
lea
jns
rcr
movs
mov
aaa
mov
stos
cs
aaa
sti
cmps
outs
lds
imul
rol
add
mov
xchg
cdq
and
jae
or
pop
jne
aad
scas
sub
(bad)
sbb
push
or
jns
or
mov
mov
mov
test
shr
cld
fcmovbe
jg
sub
xor
enter
sub
pop
js
mov
adc
lds
cs
loop
add
cmp
jp
add
stos
les
loope
call
add
and
ins
out
imul
pop
dec
mov
jb
outs
(bad)
mov
or
mov
movs
adc
jnp
test
ja
inc
sbb
pop
push
sbb
inc
adc
xchg
bound
and
pop
dec
sbb
inc
les
add
xor
mov
inc
repz
push
(bad)
rol
pop
(bad)
pop
scas
in
xor
fsubr
jge
add
cmp
xlat
mov
add
mov
and
movs
data16
inc
mov
ret
xor
pop
outs
sbb
sub
movs
push
mov
fs
dec
cmc
mov
xlat
sbb
in
mov
imul
sub
sbb
inc
xchg
push
int
dec
and
xchg
xchg
mov
inc
call
adc
mov
(bad)
imul
sbb
test
mov
jle
retf
div
hlt
ins
sbb
fbld
add
sti
xchg
test
push
and
push
cmp
call
inc
mov
mov
push
mov
jge
sbb
xchg
leave
imul
mov
nop
es
lea
adc
(bad)
(bad)
jbe
mov
push
jne
jo
inc
push
aad
in
sub
mov
sbb
inc
bound
cmp
adc
aam
inc
sub
in
nop
loopne
cmc
jmp
sbb
mov
ins
jp
jecxz
div
and
scas
sbb
sub
jg
xor
gs
outs
dec
cmps
stos
adc
addr16
dec
dec
xchg
mov
lods
test
les
daa
out
iret
sbb
push
fidiv
into
fwait
xchg
cmp
jmp
pop
ret
pop
inc
mov
add
(bad)
test
mov
jg
iret
loop
clc
mov
xchg
arpl
push
adc
leave
clc
add
xchg
pop
call
pop
cwde
movs
pushf
cmp
xor
inc
xchg
xchg
jg
and
(bad)
cmp
cmp
dec
pushf
jo
ins
push
pusha
xor
(bad)
jns
xchg
leave
push
fcomp
sar
leave
call
mov
dec
add
push
mov
scas
sahf
jmp
adc
gs
repz
inc
(bad)
imul
mov
push
call
push
add
fisttp
movs
inc
mov
popa
in
lds
lahf
or
adc
and
ficom
es
mov
in
cmp
adc
or
jns
arpl
std
xor
dec
xchg
mov
shl
sbb
xor
call
movs
or
push
fwait
test
loop
push
lahf
test
jp
std
loope
gs
cmp
sar
popf
mov
dec
xchg
je
test
sbb
mov
add
scas
dec
pop
fdiv
add
nop
scas
repnz
adc
mov
retf
leave
out
add
sub
jns
fs
inc
jg
cmp
pop
add
sub
pop
and
or
pop
int3
sub
iret
pop
sti
call
push
and
xor
push
cld
cmp
pop
push
lahf
popa
jle
loopne
push
rol
cli
jbe
je
inc
mov
jbe
sub
sbb
call
hlt
mov
cmps
add
jbe
mov
dec
int3
sub
test
pop
sbb
sti
out
dec
je
je
sub
fiadd
fsubp
cmps
jbe
or
push
mov
pop
sbb
mov
jmp
loope
inc
inc
jmp
ins
mov
in
mov
sbb
call
xor
or
jmp
outs
fsub
nop
out
repnz
mov
jge
sub
out
jp
push
ret
xor
dec
loop
mov
push
pushf
aad
call
fs
xchg
jle
xchg
inc
adc
and
shl
inc
int3
(bad)
loopne
jmp
xchg
sbb
pop
jae
mov
aas
clc
push
or
popa
sub
or
(bad)
shl
cmp
gs
sbb
out
fsub
push
cmp
dec
fwait
push
stos
leave
(bad)
or
fimul
call
xor
in
ret
nop
jmp
push
or
lods
adc
icebp
mov
aad
das
outs
inc
mov
jae
leave
or
jno
jp
xchg
stos
aad
or
jmp
adc
push
rcr
push
xor
dec
push
out
mov
lods
dec
pop
add
stos
inc
mov
or
mov
adc
add
fchs
push
inc
cmc
mov
jmp
out
push
repz
ja
sub
repnz
test
mov
fstp
mov
fmul
inc
sti
mov
rol
pand
fisttp
outs
push
inc
mov
retf
cmc
push
add
mov
cli
ret
into
gs
mov
jne
pop
push
add
arpl
xor
pop
fmul
cmp
ds
jge
pop
fstp
pop
in
out
mov
jbe
fwait
test
movups
or
pop
xchg
push
adc
mov
sub
xor
nop
jno
mov
dec
pop
or
stos
cmp
call
add
fstp
repz
push
fsub
mov
xor
cmp
movs
dec
mov
or
stos
and
fbstp
mov
pop
xchg
stos
ins
inc
jecxz
fwait
and
test
jno
pop
retf
dec
xchg
add
retf
sub
sbb
pop
xor
xchg
mov
call
shl
loope
cmp
push
inc
outs
scas
cmps
repz
push
mov
test
sub
daa
std
inc
sub
cmps
push
imul
sbb
dec
sbb
(bad)
ins
mov
adc
mov
inc
in
imul
pop
xchg
ins
pop
arpl
sub
not
xchg
aas
cmp
mov
daa
lahf
popaw
pusha
jg
cmp
push
nop
and
xlat
lock
xchg
push
fsub
repnz
sbb
stos
sbb
aad
mov
mov
cmp
dec
pop
inc
mov
fistp
fcom
ds
test
mov
psubusw
add
sbb
mov
(bad)
into
xchg
push
adc
imul
out
aad
(bad)
aaa
popa
pop
cli
std
(bad)
pop
sbb
jmp
cmp
sahf
test
les
dec
stos
and
sub
cmp
fcomp
push
pop
mov
and
and
in
popf
and
jl
dec
jmp
cli
in
mov
inc
jo
adc
or
stos
outs
in
xchg
jmp
xchg
(bad)
pop
mov
test
xor
dec
test
and
fbld
rcr
add
lds
and
push
sub
push
mov
adc
movhps
mov
fsubr
sbb
cs
mov
and
cdq
dec
push
pop
sub
fdiv
aam
lock
push
mov
push
or
mov
mov
movs
je
ja
out
mov
pop
daa
lods
adc
and
jge
movs
or
ret
or
dec
mov
push
add
ss
out
(bad)
inc
ss
lds
leave
std
rol
mov
call
shl
les
dec
adc
in
lahf
inc
enter
cli
fmul
pop
mov
into
xchg
jo
push
sti
fs
cmp
rcr
mov
dec
sub
inc
or
and
leave
pop
ss
xor
rcr
adc
sbb
in
cs
push
add
inc
add
adc
mov
fnstcw
std
add
in
dec
inc
xchg
stos
sub
pop
je
sbb
ret
mov
cmp
mov
cmp
hlt
(bad)
cmp
dec
push
test
pop
xor
mov
loop
outs
add
cmps
cmp
jae
push
sar
out
sti
inc
mov
add
xchg
cmps
push
retf
mov
shl
outs
stc
pushf
add
xchg
sub
add
dec
pop
jge
mov
fldenv
xor
(bad)
mov
fmul
jmp
or
jge
dec
ret
or
jmp
adc
mov
or
cmp
push
push
or
jae
(bad)
mov
fcom
imul
push
bound
push
scas
enter
out
adc
std
aam
cmp
ins
test
leave
scas
sbb
stos
xor
ins
xchg
cmp
and
jae
and
jb
(bad)
jl
je
mov
xlat
and
and
(bad)
jp
mov
out
icebp
jb
out
push
les
add
ja
lds
and
repz
xchg
int3
cmp
adc
push
pop
xchg
cmp
das
and
inc
ret
mov
and
sahf
ror
daa
in
stc
dec
dec
outs
dec
outs
jmp
push
push
seta
in
inc
dec
inc
sub
movs
xor
imul
(bad)
xlat
dec
ret
movs
sbb
pop
stos
jae
in
imul
clc
sub
lds
iret
(bad)
ss
int3
mov
inc
cmp
neg
rol
xchg
jl
push
jnp
jne
fldenv
mov
add
outs
and
mov
ss
mov
xor
ret
and
inc
push
mov
xor
lds
cwde
xchg
dec
jle
mov
aad
stc
add
cs
arpl
jmp
adc
rol
sub
into
leave
mov
mov
ret
(bad)
pop
jle
(bad)
fdiv
sbb
push
pop
mov
push
and
int3
in
push
enter
dec
fst
sbb
sbb
sbb
sub
adc
int3
add
je
push
cmp
push
fiadd
sbb
jmp
dec
fiadd
push
pop
scas
jne
push
push
jbe
fs
aad
sub
mov
sub
or
add
mov
cmp
mov
mov
(bad)
shl
push
imul
jmp
inc
pop
fld
lods
out
mov
push
mov
pushf
mov
push
int3
add
int
dec
and
xchg
ret
inc
(bad)
pop
adc
xor
jne
mov
pop
jmp
rol
adc
(bad)
lock
add
dec
mov
cmps
pusha
(bad)
inc
sub
sub
int
inc
nop
iret
xor
xchg
xchg
je
mov
pop
mov
jns
sti
push
or
xchg
adc
jne
push
into
je
xchg
mov
xchg
cld
add
dec
jge
xchg
xchg
or
push
sub
ins
add
pop
inc
pop
add
pushf
xchg
dec
sahf
rcr
fwait
mov
outs
call
jno
inc
xchg
wrmsr
ret
jb
adc
jo
and
imul
(bad)
fmul
retf
or
ins
jno
je
mov
test
jne
dec
cmp
pop
aam
lock
loope
mov
das
inc
cdq
jp
cwde
mov
movs
retf
ins
mov
mov
sub
xlat
mov
xchg
mov
xor
add
mov
pop
xlat
(bad)
outs
jmp
loop
sar
cmp
mov
dec
popa
idiv
je
fwait
dec
test
mov
jnp
sbb
xlat
jbe
bound
add
cmc
inc
hlt
mov
mov
out
pop
fdivr
jbe
cmp
cmps
pusha
add
and
jmp
jp
das
in
mov
pop
test
adc
xlat
or
popa
sub
add
cdq
out
lea
sbb
mov
sbb
adc
enter
push
leave
mov
cmps
ins
xchg
int
jmp
add
inc
xor
pop
div
add
fsubr
xchg
repnz
in
pusha
leave
hlt
and
push
or
rcr
out
mov
mov
push
and
cld
pop
cli
cmp
icebp
xor
jl
cmps
cmp
dec
aam
push
pop
lock
push
loope
clc
ds
inc
mov
clc
loope
nop
(bad)
imul
xchg
mov
fiadd
lea
movs
mov
shl
xchg
pop
test
enter
out
dec
loopne
mov
clc
enter
repnz
adc
clc
(bad)
xchg
and
inc
ja
out
inc
int
pop
retf
test
jno
jbe
fwait
add
push
test
xor
push
pop
es
push
pop
ret
test
mov
xor
retf
popf
call
jl
in
les
mov
jl
adc
mov
ret
sbb
jnp
int3
js
aaa
mov
les
push
pop
test
and
xor
mov
or
loop
add
push
sti
sub
or
call
mov
(bad)
aad
lahf
les
push
dec
out
xor
dec
shr
mov
cmps
xchg
jbe
add
adc
popa
jns
mov
js
xchg
addr16
and
inc
xor
or
adc
adc
icebp
xchg
aad
pop
dec
sbb
ja
cld
cmp
dec
adc
mov
or
jmp
xlat
std
jecxz
and
stc
adc
cld
mov
dec
enter
mov
jmp
(bad)
push
sbb
and
dec
pop
test
gs
(bad)
xchg
icebp
fs
ret
push
cmps
sub
test
fmul
fsubr
xchg
mov
imul
and
pushf
push
aad
pop
inc
iret
inc
loopne
mov
(bad)
sti
xchg
sbb
jnp
mov
js
pop
(bad)
mov
inc
div
das
stos
add
mov
sbb
(bad)
adc
and
nop
push
push
inc
and
mov
add
mov
jecxz
popa
jmp
(bad)
dec
push
mov
loopne
das
sub
add
mov
rcl
and
mov
jns
inc
push
in
nop
or
test
inc
mov
das
call
scas
inc
jmp
(bad)
and
push
cmps
or
cmp
iret
pop
xchg
int
iret
xchg
out
jo
leave
sub
dec
and
lahf
hlt
xor
shl
xor
pop
dec
sub
and
adc
ror
(bad)
sar
push
in
or
gs
jp
push
fst
push
jle
push
icebp
sub
ud0
cmc
jp
or
jo
push
inc
movs
pop
cmc
jmp
stc
sar
jnp
dec
dec
neg
sbb
and
adc
cmp
loope
enter
out
jg
mov
arpl
mov
mov
dec
test
imul
jmp
dec
mov
adc
ss
pop
push
rcl
jecxz
mov
mov
in
aas
cmp
push
cwde
frstor
or
inc
pop
sar
xor
sar
jbe
call
rcr
aam
mov
loopne
stc
mov
rcl
ss
repz
jo
dec
adc
inc
xrelease
push
mov
icebp
lods
mov
jno
fistp
mov
not
daa
dec
sar
jno
(bad)
sub
pop
addr16
dec
scas
add
jns
xor
or
(bad)
repz
es
les
xor
hlt
in
mov
call
bound
pusha
push
fnstcw
pop
lods
stos
mov
dec
mov
mov
add
mov
mov
pop
rol
int
xchg
rcr
inc
jp
cmp
sbb
cmp
les
and
rep
out
mov
outs
xchg
fcom
inc
dec
pop
dec
daa
or
ss
mul
test
xlat
or
pop
or
lods
xchg
mov
(bad)
(bad)
lock
pusha
fisttp
and
push
dec
div
push
jns
xchg
retf
cmps
mov
in
mov
into
mov
int3
mov
daa
retf
mov
push
dec
mov
jo
shr
adc
sahf
outs
fucom
pop
sbb
push
aad
retf
or
mov
jmp
jmp
(bad)
xor
adc
sbb
fmul
push
aam
movs
out
lahf
add
or
jp
push
mov
in
inc
int
pushf
jns
cmp
jmp
adc
or
or
(bad)
pop
dec
adc
aas
pop
mov
mov
into
pop
cmps
ss
aad
dec
xchg
inc
and
fxch
mov
mov
mov
xor
icebp
fld
pop
in
adc
fs
not
cli
add
ret
push
outs
inc
loop
cwde
cmp
pop
jle
test
jge
push
or
mov
inc
loopne
fisttp
add
gs
jge
retf
add
mul
inc
ins
push
or
inc
cmp
rol
sbb
mul
inc
jl
jb
fdiv
out
jae
adc
mov
adc
scas
add
(bad)
fdivr
call
sbb
add
std
sub
or
add
push
adc
and
mov
in
mov
dec
fsubp
(bad)
loope
pop
test
adc
ins
dec
dec
ret
frstor
inc
dec
fmul
sub
repnz
jmp
cmp
sub
push
or
into
mov
cmps
sub
dec
ret
out
nop
jmp
into
cmp
sbb
shr
sub
mov
and
cmp
jmp
jno
js
sub
in
ss
loopne
outs
int3
popa
push
push
xor
cs
push
lods
pop
pop
cmp
fcomp
jb
pop
jb
xor
movs
fs
int3
lock
adc
das
out
mov
and
repz
dec
inc
pop
fbld
sub
aaa
push
cld
push
pop
xor
mov
jnp
js
jns
and
lahf
aaa
arpl
mov
cmp
push
pop
js
mov
mov
dec
jge
(bad)
jne
jns
cmc
push
xchg
ins
sub
jno
ret
shl
push
mov
rcl
xor
leave
aaa
aaa
fimul
or
cmps
push
dec
or
(bad)
(bad)
sti
lods
pop
mov
icebp
adc
call
and
jmp
jo
iret
std
mov
xchg
mov
sti
inc
dec
push
stos
xlat
inc
dec
jno
cs
mov
or
push
inc
and
fcom
xor
iret
retf
jecxz
mov
cmp
mov
pop
movs
popf
pop
sub
sbb
mov
fs
les
in
imul
ins
in
fsubr
mov
push
push
adc
adc
pop
cmp
adc
cmp
ret
xchg
jge
repnz
mov
jno
retf
js
jnp
or
xlat
mov
lods
into
add
(bad)
jmp
clc
ins
dec
lods
push
jne
scas
xor
mov
in
sbb
out
dec
mov
push
and
dec
(bad)
rcl
fstp
ja
push
cmp
mov
cwde
adc
mov
mov
mov
inc
loope
mov
mov
jg
lds
in
out
jb
sub
cmp
ret
(bad)
and
in
es
sbb
aaa
ror
cwde
cmp
add
mov
mov
test
in
in
xchg
and
pop
jne
cwde
mov
cmp
and
lds
jnp
jmp
test
in
jle
icebp
mov
push
and
call
mov
adc
popf
in
pop
pushf
enter
add
int3
idiv
fwait
mov
push
jnp
data16
push
inc
sub
ja
pop
shr
mov
bound
jp
gs
push
(bad)
out
dec
sbb
inc
mov
adc
pop
pop
nop
or
aad
and
(bad)
stc
test
cmp
push
mov
sahf
mov
stos
add
imul
in
test
dec
movs
xchg
std
mov
pop
neg
call
sbb
inc
out
pop
cmp
mov
mov
mov
mov
enter
push
adc
xchg
xor
and
adc
pop
sbb
(bad)
in
mov
jno
test
js
add
out
mov
xor
and
repz
mov
fcom
add
mov
loope
mov
push
sbb
jp
xchg
ret
cwde
mov
xor
lea
loop
adc
xchg
adc
and
pop
and
lock
jae
or
cld
cdq
xchg
leave
int
stos
imul
das
cmps
jecxz
sub
lock
and
mov
xchg
ret
movs
sar
js
not
rcl
repz
xlat
ret
sbb
nop
add
xor
fs
xchg
jl
out
enter
add
mov
sbb
rcl
ret
mov
jns
ret
push
sbb
dec
mov
xor
jo
repnz
sub
and
pop
inc
in
fcmovne
in
jmp
jbe
pop
mov
cmp
xor
sub
mov
push
cmp
mov
pop
jb
and
sub
inc
push
leave
pop
xor
rcl
mov
test
sub
adc
pop
fisub
xchg
or
dec
jmp
sub
jne
push
mov
mov
in
sahf
mov
(bad)
sbb
dec
inc
mov
or
mov
push
xor
add
jns
mov
sahf
sub
cmp
add
add
push
xchg
xor
mov
icebp
jbe
fnstcw
push
repnz
push
push
mov
int
in
jmp
mov
push
dec
int3
repnz
push
popa
fcomp
jecxz
gs
mov
gs
cmp
ja
mov
dec
dec
fisttp
cmp
(bad)
sbb
mov
into
dec
aas
xchg
gs
cdq
mov
pop
jne
jo
jp
test
sti
xlat
inc
push
jnp
and
inc
mov
das
push
dec
jbe
stc
pop
xor
adc
cmp
xchg
add
and
test
add
jmp
mov
xchg
sub
fcomp
dec
fisttp
add
push
inc
or
dec
pop
mov
cmc
icebp
and
popa
movs
mul
mov
adc
fcmovne
cmp
in
fcom
call
sub
lea
push
add
movs
in
add
xchg
adc
jne
cli
inc
push
ins
jp
pop
mov
in
fmul
cmp
cmp
mov
dec
loopne
call
sub
jnp
rcl
xchg
mov
mov
pop
push
dec
jbe
mov
pop
inc
pop
aas
inc
fisttp
movs
fmul
mov
and
popw
cmps
xor
fxch
cmp
adc
mov
ror
aaa
pop
movs
imul
dec
ss
push
cmp
adc
add
ret
mov
ror
imul
push
gs
lods
dec
mov
mov
adc
pop
mov
call
repz
push
rcl
inc
inc
mov
inc
mov
mov
pop
out
dec
mov
push
jb
add
inc
stos
in
cmp
loope
push
clc
mov
or
dec
inc
popf
pop
mov
mov
fcos
xchg
cmps
pop
shl
ins
fidivr
xor
xchg
sbb
xor
mov
lods
inc
sbb
int
test
repz
rcl
or
fmul
sub
rol
add
test
out
fistp
and
cmp
mov
mov
pop
idiv
ror
popf
adc
sbb
aam
leave
sub
aad
push
and
adc
sbb
mov
adc
jmp
jecxz
les
inc
aad
cmp
addr16
sbb
add
clc
movs
ret
mov
and
cwde
push
sub
or
xchg
(bad)
adc
push
loop
cmp
add
ja
jbe
push
sbb
retf
ret
cmp
and
push
mov
adc
in
pop
ss
jl
add
adc
xor
or
icebp
mov
adc
pop
aam
add
daa
fsubr
int3
mov
(bad)
popf
cmps
mov
scas
push
lds
mov
jns
mov
mov
and
sbb
pusha
xchg
pushf
loope
punpckldq
repz
and
mov
push
lock
adc
add
or
push
jbe
js
jno
stos
scas
xchg
(bad)
adc
rcr
or
ror
mov
adc
pushf
int
aad
std
fwait
xor
jl
cwde
repz
mov
cli
sbb
stos
out
push
mov
pop
mov
lods
xor
jmp
sub
mov
adc
jecxz
or
ss
sbb
cmc
xchg
cmp
jg
mov
mov
push
jb
leave
pop
add
(bad)
push
movs
mov
mov
inc
mov
loope
js
inc
sub
cmp
test
jbe
out
jmp
xchg
xor
push
std
push
stc
clc
movs
fist
add
xchg
mov
pop
cmc
ins
jle
sbb
or
adc
mov
inc
cmp
fdivr
adc
call
jbe
mov
dec
dec
(bad)
jle
retf
leave
aad
(bad)
xor
sbb
int
fldcw
mov
xchg
dec
ins
dec
ja
fnop
push
push
rcl
test
jbe
mov
loope
push
mov
movs
test
add
imul
(bad)
sub
xor
outs
mov
in
out
jbe
cli
pusha
lods
fcomp
ret
jge
std
das
out
sbb
mov
or
scas
mov
add
add
(bad)
mov
xchg
inc
fucomi
bound
dec
mov
or
(bad)
lods
addr16
push
adc
jbe
xchg
sbb
push
and
call
pop
add
jmp
xor
and
jmp
retf
ds
pop
adc
addr16
dec
dec
adc
mov
loope
jne
mov
loop
stos
sbb
add
inc
in
cmp
jne
icebp
jge
scas
xor
scas
and
imul
xor
addr16
cmps
loopne
test
push
(bad)
out
enter
push
xor
(bad)
dec
mov
xchg
mov
inc
push
adc
mov
pop
push
mov
fcom
das
rcl
or
test
cmp
or
pop
add
adc
jecxz
in
outs
das
inc
cmp
xor
dec
dec
inc
(bad)
mov
mov
sbb
push
inc
std
xchg
inc
loopne
inc
push
arpl
fld
scas
das
sub
rol
push
inc
dec
clc
jmp
leave
es
xchg
popa
retf
adc
pop
mov
aam
ins
jl
(bad)
fistp
sbb
stos
and
pop
js
aas
dec
sbb
(bad)
lods
adc
lock
push
mov
sbb
inc
out
mov
mov
adc
push
sbb
dec
adc
scas
jae
inc
popa
inc
pop
jae
ja
xchg
rep
mov
enter
xchg
mov
push
xchg
jnp
movs
push
je
imul
in
aaa
dec
mov
xchg
dec
test
and
call
and
fidivr
jg
cmps
inc
jg
jp
stos
pop
je
xor
test
repz
es
xor
sbb
xor
jmp
mov
imul
or
sbb
inc
js
ja
out
fscale
add
sbb
movs
or
dec
outs
or
xchg
or
lods
test
inc
out
bound
push
cs
(bad)
icebp
repz
repz
pushf
sub
test
pop
les
adc
popf
scas
mov
setne
pop
push
or
rcl
cwde
add
jno
and
pop
push
mov
(bad)
shr
xor
aad
xchg
mov
xor
in
retf
je
pop
or
or
cwde
icebp
pop
mov
in
mov
movs
xchg
(bad)
neg
cmp
jle
mov
out
pop
xchg
pop
addr16
or
dec
call
xchg
jmp
jge
rcr
mov
cmp
sbb
ins
out
push
call
ret
and
cs
cmp
(bad)
lock
mov
push
dec
dec
frstor
cli
idiv
outs
add
xchg
mov
jno
cmc
pop
cdq
loope
std
call
cwde
push
push
in
add
scas
es
jp
mov
repz
in
mov
rcl
mov
or
xchg
xchg
cmps
jb
sahf
xchg
cmp
jns
(bad)
(bad)
imul
out
and
push
dec
fsincos
add
mov
push
jbe
fadd
and
rol
shl
(bad)
les
add
mov
mov
pop
xchg
stos
sub
sar
ds
jecxz
sbb
dec
cld
icebp
std
mov
and
data16
xchg
mov
popa
fistp
pop
adc
cli
fdiv
and
ja
sahf
push
loopne
repz
jg
mov
cmp
xchg
fmul
adc
fwait
inc
dec
inc
mov
mov
ss
pop
inc
sub
mov
ss
add
lea
(bad)
mov
mov
adc
cs
add
and
aas
xor
scas
add
cmp
add
test
ror
lods
dec
out
or
rol
fidivr
mov
pushf
call
lds
jle
sbb
ret
xchg
dec
push
fild
push
pop
mul
add
int
jle
imul
bound
mov
sbb
adc
jbe
inc
cmp
inc
mov
or
shr
outs
retf
dec
aas
movs
pop
mov
cwde
jmp
loope
cli
call
fisubr
retf
adc
fcomi
call
mov
jmp
xor
lea
push
jmp
push
les
jne
cwde
inc
mov
test
mov
ret
mov
mov
popa
adc
mov
pop
sub
ror
nop
and
fdivp
daa
and
movs
xor
(bad)
adc
out
ror
push
inc
xlat
mov
adc
fwait
push
jmp
push
mov
rol
adc
mov
mov
scas
lods
jnp
ins
retf
cmps
(bad)
inc
xor
stos
ins
xchg
inc
repnz
stos
leave
jo
dec
mov
cdq
push
add
call
ficomp
jge
xchg
sub
mov
xchg
scas
pop
ds
push
std
sub
adc
stos
lods
sahf
mov
es
call
sahf
adc
jns
xchg
sub
mov
adc
push
bound
jl
cmp
push
(bad)
inc
push
xchg
sbb
sti
mov
test
popa
cmp
add
loope
pop
and
jno
push
inc
sbb
aas
repnz
add
jp
sub
mov
ins
sbb
push
ficom
movs
(bad)
scas
or
mov
shr
aad
fild
jp
mov
mov
sub
sbb
xor
ror
inc
and
cmc
jns
inc
cmp
movs
sub
cli
cmp
add
mov
out
ins
mov
int3
cmp
in
xchg
mov
scas
das
push
jmp
mov
jo
sbb
ret
cmp
ret
adc
pop
aaa
int3
in
cmps
js
stos
jmp
adc
xor
mov
out
test
push
js
sub
xor
sub
dec
mov
pop
test
xor
cdq
dec
rcl
aam
mov
add
add
mov
int
pop
dec
and
test
dec
mov
arpl
arpl
dec
pop
jns
jg
out
(bad)
cs
mov
mov
daa
cmc
add
sbb
xlat
test
pop
adc
xor
mov
adc
cmps
xchg
lock
loop
loope
push
cmps
xchg
adc
or
push
cmp
stos
jns
push
out
pop
dec
xor
stc
data16
mov
inc
and
jae
(bad)
repz
loop
mov
repnz
ja
fmul
jno
fwait
mov
push
clc
stos
cmp
jo
mov
xchg
pop
pushf
mul
jmp
fs
lahf
mov
pop
iret
stos
add
jle
in
sub
push
cmp
repz
mov
popa
pop
or
cmp
lock
(bad)
pop
xor
imul
push
and
push
popf
clc
mov
add
sti
retf
mov
and
jae
mov
ret
lahf
inc
xor
adc
mov
out
jns
and
or
jno
mov
cli
ds
mov
cld
mov
movs
sub
xchg
sti
hlt
sahf
cmp
ins
popa
int3
sbb
pop
jae
pop
cdq
les
(bad)
xchg
int3
cmc
cmps
jle
js
in
add
and
int3
mov
adc
ror
jo
in
out
mov
cld
lea
jmp
xchg
push
or
inc
cmps
aas
sahf
sti
sahf
cs
add
(bad)
fild
sub
and
xchg
fstp
and
and
push
jmp
pop
data16
sub
and
stos
or
int
lea
add
out
setno
imul
sub
xlat
fisub
push
inc
fsubr
sbb
std
mov
mov
popa
pusha
jp
cmp
out
ret
inc
sbb
pop
inc
or
pop
fbld
stc
jmp
or
cmps
sti
and
sub
jns
stos
sbb
pop
xchg
push
je
call
js
and
mov
movs
adc
fadd
jno
scas
setnp
xor
sbb
push
aas
mov
pop
xchg
and
fild
ins
pop
inc
movs
inc
add
jo
test
outs
(bad)
xor
daa
(bad)
and
mov
test
mov
lods
adc
lock
cmp
push
jb
mov
jns
sub
inc
clc
jp
cli
stos
or
scas
mov
pop
mov
lea
dec
push
mov
mov
pop
fmul
inc
sbb
push
or
imul
cmc
push
nop
clc
xchg
pop
pop
cs
ins
dec
and
mov
pop
jnp
xor
sbb
inc
out
dec
xchg
rcl
mov
add
cwde
int
mov
xchg
mov
push
ins
test
ror
mov
jns
sbb
mov
mov
jnp
cmp
add
(bad)
fcom
mov
sbb
or
shr
into
out
lahf
in
cli
or
out
xor
out
sar
mov
xor
sub
int3
adc
arpl
test
int
in
mov
mov
mov
call
cmps
dec
mov
pop
jne
add
lds
jno
pop
das
call
sbb
add
ins
aas
push
dec
lods
loope
pop
(bad)
(bad)
cmp
fsubr
(bad)
out
ret
mov
jmp
and
sbb
outs
hlt
push
in
or
fiadd
cmp
(bad)
hlt
stos
stos
lods
dec
dec
mov
pop
inc
and
outs
or
test
pushf
outs
sar
and
hlt
not
sbb
aaa
daa
sbb
push
cdq
test
xchg
jp
sahf
dec
lods
ss
call
or
dec
push
adc
dec
(bad)
fadd
dec
xchg
cmps
aam
out
in
add
or
int3
pop
das
mov
dec
xor
xor
dec
xlat
inc
push
cmc
les
es
xchg
imul
cmc
mov
sub
js
mov
scas
jne
ficomp
sbb
test
push
(bad)
add
scas
aas
jne
mov
jbe
pusha
inc
push
inc
pop
push
into
mov
inc
mov
call
int3
mov
cmc
lock
lahf
jle
vshufpd
mov
aaa
lahf
inc
cmp
stos
sbb
rcl
movs
dec
mov
push
cmp
cvtps2pi
fnstcw
inc
dec
inc
and
push
cmp
pop
out
call
adc
jbe
push
mov
pop
popf
call
ds
or
jae
sub
daa
xlat
dec
inc
and
les
dec
push
or
pop
hlt
or
enter
mov
cdq
repnz
inc
cs
test
test
and
int3
xchg
es
jb
pusha
jnp
and
or
cmp
int3
mov
arpl
test
jbe
jmp
shl
cld
repz
mov
aaa
in
std
dec
jns
sbb
dec
mov
nop
xor
jae
fwait
adc
stos
test
stos
adc
ja
cmps
mov
jb
mov
inc
enter
mov
mov
mul
pop
sti
sbb
ret
mov
repnz
push
add
mov
daa
dec
xchg
or
fwait
aam
sub
xor
icebp
xchg
xlat
jg
(bad)
jp
fisub
xchg
outs
addr16
fstp
push
push
inc
call
inc
pop
aad
shl
push
iret
jnp
xchg
xchg
movs
mov
fwait
push
das
cmp
push
sub
ins
push
jmp
xchg
leave
test
ds
cwde
mov
adc
sbb
mov
rcl
ins
or
inc
push
sub
aam
inc
mov
push
dec
cmp
add
xchg
(bad)
fist
loop
addr16
fsubp
mov
adc
pop
in
inc
or
std
cdq
in
pop
stos
pop
hlt
mov
and
lock
in
cs
lahf
xchg
jg
adc
daa
xor
cwde
dec
aas
mov
hlt
repz
lds
test
xchg
fsubr
movs
jecxz
sbb
push
outs
adc
ja
adc
adc
out
in
sti
stos
xor
sar
loop
mov
call
neg
xchg
pop
mov
mov
in
push
shr
pop
imul
in
adc
mov
dec
sbb
pop
mov
pop
shr
add
loopne
ins
mov
mov
sar
mov
jmp
aam
inc
data16
adc
or
mov
(bad)
stos
stc
mov
lea
adc
jne
sbb
xor
or
or
loope
shl
cli
jae
cmp
(bad)
lods
mov
cmp
(bad)
mov
out
addr16
xor
sti
imul
imul
sbb
adc
sbb
shr
dec
es
lods
mov
xor
daa
adc
mov
es
movs
sbb
sub
xchg
dec
daa
dec
adc
ret
ds
push
sbb
jne
ret
das
inc
inc
out
lock
xchg
mov
aas
mov
xor
cmp
dec
mov
push
or
mov
pop
jp
add
dec
sbb
in
mov
inc
xchg
xor
cmp
push
cmps
mov
in
repz
sbb
push
(bad)
mov
push
scas
rcl
cwde
(bad)
stos
fcmovb
xchg
add
ins
and
or
mov
(bad)
ins
cmp
outs
adc
adc
inc
and
mov
add
loope
aaa
jmp
imul
add
shl
jg
and
jge
cmc
pop
loop
lods
xchg
lds
inc
pop
cmp
fwait
inc
(bad)
xchg
jns
icebp
add
push
loop
xchg
dec
mov
dec
cli
mov
jecxz
fs
push
push
inc
hlt
repz
cli
jns
and
mov
sbb
adc
mov
fisub
sub
jnp
stc
repnz
repnz
popa
mov
xor
sbb
mov
sar
frstor
test
push
jns
xlat
fcom
sub
sysexit
test
scas
xchg
mov
idiv
and
pop
inc
push
lods
cli
jg
loope
repnz
mov
mov
jp
mov
retf
enter
mov
outs
ja
cwde
mov
dec
jno
sbb
ret
into
rcl
push
div
xor
repnz
push
mov
push
pop
add
fst
mov
and
cmps
sahf
shr
dec
outs
pushf
mov
jbe
and
sahf
mov
call
dec
push
add
pop
push
cdq
xchg
adc
mov
lahf
(bad)
fucomip
ins
sbb
push
and
cdq
or
fld
dec
or
add
in
jge
fidiv
rep
adc
push
ficomp
xchg
cs
std
or
cld
movs
sar
add
fistp
fmul
ret
add
out
sbb
and
lea
(bad)
and
sbb
xchg
dec
mov
dec
inc
pop
mov
xor
ds
pusha
lds
pcmpgtb
rol
inc
jno
ret
add
and
push
add
cs
into
inc
cmps
int3
gs
xchg
or
jecxz
jmp
into
ins
xchg
rcl
mov
aaa
jge
lods
inc
adc
ficom
add
pop
mov
les
mov
rol
or
sub
call
sub
xchg
xchg
xchg
mov
repz
gs
sti
cmc
aad
sub
mov
out
push
js
sahf
pusha
fst
mov
lds
ins
mov
sbb
les
fsubr
retf
aaa
jle
imul
in
arpl
ds
ja
cmp
add
and
mov
sbb
dec
sar
push
repz
shl
and
add
dec
pop
movs
test
jbe
lea
cmp
out
push
xchg
sub
jbe
mov
cmp
stos
data16
cs
cmc
and
sub
dec
mul
aam
nop
imul
not
inc
jo
bound
add
xor
sbb
adc
and
push
rol
in
imul
lods
scas
xor
fwait
(bad)
jp
je
sti
lods
xchg
popf
(bad)
fcom
jnp
push
nop
ror
imul
xor
pushf
lods
inc
pop
cmp
xor
dec
arpl
(bad)
ja
lea
retf
test
push
xchg
loop
movaps
adc
push
push
fisttp
movs
popf
in
stos
jl
sub
inc
(bad)
in
inc
fiadd
jb
stos
retf
xchg
mov
inc
lds
test
pop
adc
in
push
call
scas
and
pop
stc
or
inc
int3
pop
lock
call
push
iret
test
xor
pop
sbb
pop
icebp
sbb
lds
test
xchg
jmp
leave
xchg
icebp
les
std
lds
sub
call
push
out
(bad)
mov
push
pop
mov
std
ror
aas
mov
out
pop
mov
leave
outs
pop
outs
mov
or
adc
inc
hlt
rol
sub
lods
mov
xchg
cld
scas
dec
mov
cs
fist
cmp
jmp
aam
cmp
or
cli
dec
push
adc
and
jge
push
and
mov
scas
add
cmc
or
test
cdq
cmp
inc
out
jge
pop
jo
repz
add
loopne
push
inc
mov
inc
sbb
and
xchg
in
aas
movs
push
cmp
(bad)
cli
cmp
ficom
sub
into
adc
dec
or
fimul
div
addr16
(bad)
imul
test
repnz
stc
sbb
dec
psllw
(bad)
xchg
push
lock
adc
test
sbb
aaa
mov
jle
push
mov
outs
mov
dec
mov
mov
mov
push
xor
xor
cmp
and
mov
and
call
inc
int3
jo
scas
das
mov
call
fisttp
scas
ror
cmp
dec
cmp
test
dec
jns
(bad)
xor
lds
inc
mov
cld
mov
sub
movs
test
std
lahf
or
jb
inc
daa
sbb
push
add
inc
cwde
call
test
mov
mov
hlt
(bad)
mov
ds
imul
xor
call
call
js
pop
fsubr
push
test
test
mov
xor
or
sub
xchg
pop
cmp
inc
out
stc
mov
inc
ficom
and
xchg
imul
cmp
ss
or
jbe
push
jge
(bad)
or
mov
into
(bad)
cld
cwde
jnp
mov
(bad)
aad
loopne
adc
or
aas
inc
pop
dec
or
iret
cmps
call
or
add
push
xchg
cwde
pop
mov
xchg
adc
pop
cmp
pusha
lods
xlat
fstp
add
or
xchg
cmc
dec
and
xor
ffreep
mov
xchg
stc
adc
cmc
ins
pushf
pop
hlt
mov
sbb
push
iret
cmp
pop
les
sub
test
push
dec
cmp
mov
fdiv
cmc
ds
push
or
xchg
pop
dec
mov
adc
repnz
add
mov
or
sub
fcomp
mov
rcl
lods
push
sub
leave
pop
out
retf
ins
mov
aad
and
mov
ret
pop
fisttp
pusha
inc
ja
cwde
jg
jb
pop
cmp
sub
gs
jno
inc
retf
fldl2e
mov
mov
ja
cld
call
data16
and
lock
movs
xchg
xor
mov
pop
xor
or
icebp
pop
arpl
mov
mov
fidivr
rcl
nop
mov
xor
push
xor
and
icebp
cmps
push
pusha
lods
out
imul
lods
mov
pop
mov
lea
pop
adc
or
ja
and
retf
imul
adc
add
sub
lock
pushf
bound
mov
aam
sub
movs
pusha
cli
shl
jno
gs
(bad)
pop
or
push
push
stos
hlt
loope
fdivr
lds
mov
jne
into
sbb
inc
in
xchg
movs
push
popa
jmp
and
jo
push
rcr
test
fmul
and
shl
adc
inc
cmps
xchg
mov
sbb
dec
popa
add
adc
loopne
sub
ret
or
stc
addr16
scas
mov
push
loopne
movs
pop
dec
je
pop
xchg
jae
sti
stc
and
dec
test
inc
inc
inc
add
pop
in
cmp
rol
(bad)
nop
sbb
hlt
fisttp
and
inc
ins
sbb
cwde
int
pop
cs
push
loop
cwd
mul
shr
and
ins
dec
(bad)
lods
sbb
cmp
out
or
add
sbb
(bad)
jns
std
dec
inc
push
xchg
inc
icebp
cmp
jo
(bad)
or
in
dec
inc
mov
pop
pop
dec
xchg
sbb
inc
jmp
inc
mov
and
icebp
jmp
and
in
stc
sar
add
inc
sar
pop
mov
add
clc
xor
and
sbb
add
inc
test
jmp
inc
imul
arpl
in
pop
and
fisubr
(bad)
ins
mov
loope
daa
cmps
inc
cmova
lods
outs
mov
pop
fistp
arpl
mov
xor
push
jmp
dec
arpl
ret
add
push
xor
fs
mov
ss
(bad)
push
aam
retf
fnstenv
cmp
xchg
xor
jno
div
fwait
aaa
aaa
out
(bad)
xchg
adc
retf
stos
mov
ud1
lods
push
jne
sahf
test
add
xor
xchg
in
shl
jo
jecxz
ins
sub
mov
push
jle
div
mov
mov
inc
dec
addr16
pop
inc
rcl
xor
push
repnz
or
cli
jne
mov
mov
jmp
and
xor
mov
lods
add
inc
mov
inc
mov
fcom
cmp
add
stc
addr16
pop
cmp
jle
jecxz
jnp
retf
stos
loope
cli
mov
pop
(bad)
je
fs
or
mov
aas
mov
in
push
in
cwde
xchg
lock
or
dec
icebp
sbb
mov
retf
sbb
mov
inc
sbb
or
push
and
or
pop
mov
mov
sbb
ds
pop
mul
in
lods
adc
mov
ret
push
mov
enter
iret
add
cwde
pop
aam
jp
sar
dec
xor
adc
addr16
popf
arpl
push
sbb
xchg
jg
int
adc
add
mov
cld
push
push
add
int
inc
mov
fld
imul
call
sub
cmp
loopne
cmp
loope
test
je
cmp
int
push
in
fisubr
ret
retf
mov
xor
mov
sub
fimul
ret
add
cwde
leave
jns
ret
lock
daa
fnstenv
lods
mov
or
call
dec
mov
dec
push
cmp
pop
mov
adc
sub
dec
sub
xchg
lods
dec
addr16
cmc
ins
inc
add
test
test
ret
jae
sbb
xchg
daa
fs
inc
je
push
jnp
(bad)
fnstsw
(bad)
mov
repnz
adc
mov
fist
or
mov
sub
mov
in
sub
loope
mov
out
pop
aaa
mov
mov
out
push
lods
popf
mov
retf
cld
pop
sbb
ror
into
sub
rcr
(bad)
jns
push
jb
lahf
es
rcl
repnz
jge
mov
xor
das
xlat
jno
xchg
clc
jle
cmp
in
ins
xor
test
mov
dec
cmp
and
xor
dec
jmp
fisttp
inc
inc
mov
ins
retf
aam
pop
and
jae
adc
and
sar
pop
daa
inc
fidiv
sbb
ins
out
int3
inc
pop
into
neg
and
aad
stc
cdq
ins
in
sahf
mov
test
xchg
push
jb
rcr
add
add
add
inc
vmovd
mov
mov
push
sbb
dec
repz
push
popa
rol
into
in
push
mov
repnz
das
and
repz
out
dec
push
loop
dec
std
sub
imul
pop
pop
outs
mov
fwait
in
imul
pop
push
jecxz
or
xlat
adc
add
lock
jmp
cs
je
add
cmp
jb
call
addr16
es
mov
cmp
sub
cmps
pop
iret
or
(bad)
xchg
mov
es
jge
in
push
sbb
in
enter
out
movs
mov
ja
les
cmps
test
(bad)
mov
mov
add
cwde
cli
out
enter
jae
icebp
lock
sub
mov
push
pop
xchg
dec
inc
cmc
xchg
pop
std
mov
push
mov
fnstsw
outs
pop
fdivr
xor
xchg
stc
sti
sbb
aad
daa
inc
mov
(bad)
test
sub
cmps
mov
jg
sub
xor
mov
ret
retf
and
lock
pop
adc
bound
sbb
add
movs
cmp
iret
sub
mov
mov
sub
outs
mov
in
sbb
dec
cwde
and
shl
push
and
out
in
xlat
aas
mov
fldenv
sub
sbb
mov
or
sbb
sar
lods
mov
dec
aad
xchg
scas
in
mov
pop
or
mov
lds
imul
vxorps
imul
sbb
xor
xchg
adc
call
icebp
gs
out
ja
pop
int3
hlt
inc
cmp
and
fdiv
iret
jae
out
pop
ror
retf
enter
push
pop
in
lea
xor
xor
xor
jp
mov
gs
cdq
out
push
mov
aad
jb
call
icebp
ins
or
(bad)
mov
pop
adc
jnp
iret
inc
xor
imul
in
add
shl
cmps
mov
xchg
fucom
mov
pop
mov
and
sbb
shl
mov
add
scas
in
pop
add
mov
ds
xor
out
mov
jp
jl
pop
lahf
sub
imul
xor
je
dec
lods
fstp
mov
fwait
cs
push
dec
push
clc
push
jle
fsubr
les
ret
add
cld
gs
xor
mov
or
lods
pop
cmp
sbb
lods
(bad)
fwait
popa
enter
and
xchg
sbb
xor
(bad)
cs
mov
retf
lds
ret
repz
les
aad
nop
call
cmps
mov
(bad)
pusha
fidiv
shl
mov
sbb
mov
sub
xor
jl
pop
inc
cdq
fwait
stc
or
jecxz
mov
xchg
popa
add
pop
adc
ins
sbb
mov
mov
sub
sti
js
scas
mov
fst
dec
dec
arpl
call
test
xchg
in
push
cmp
push
bound
int
pop
pop
out
(bad)
fsubr
leave
iret
rol
popa
inc
jno
jb
or
dec
daa
push
cdq
dec
in
rcr
test
mov
sti
jecxz
hlt
std
data16
or
pop
mov
ror
dec
cli
icebp
fcom
sub
movs
shl
mov
xor
das
sbb
and
out
inc
push
nop
iret
adc
jl
xor
xchg
data16
(bad)
xor
ret
dec
ins
rcr
xchg
fidivr
int3
aas
loopne
ja
ret
jo
in
addr16
mov
ins
cld
add
xchg
mov
inc
lock
ror
pop
pop
ds
ss
movs
sar
jo
fwait
adc
aas
jle
and
cmp
sub
dec
test
sub
jne
rcl
mov
test
out
in
xchg
outs
dec
sbb
jns
jae
mov
pop
or
jle
std
sti
addr16
jbe
xor
(bad)
sub
pop
mov
movs
add
push
pop
ror
stc
dec
out
inc
add
cli
das
mov
cmp
push
pop
and
out
scas
sahf
mov
call
pushf
sub
movs
fdiv
mov
sbb
push
jmp
xor
push
sbb
arpl
iret
inc
test
pop
shl
lahf
mul
jbe
lods
sbb
bound
jle
cmps
inc
retf
pop
int
sbb
jbe
addr16
cwde
sti
leave
mov
int3
push
or
out
push
cmp
cwde
(bad)
stos
xchg
ds
add
push
fild
mov
fimul
adc
stc
js
jb
mov
sbb
xchg
jl
std
sbb
sbb
cmp
hlt
cmp
xchg
dec
into
test
mov
cmp
sbb
cmp
(bad)
fwait
(bad)
and
loope
test
out
inc
stos
jnp
xchg
bound
or
push
and
test
cmp
lods
sahf
pop
add
retf
cmp
test
xor
mov
rcr
or
aas
lds
mov
sub
stc
and
push
call
sbb
ja
loope
jmp
push
jl
std
jnp
xchg
lock
inc
(bad)
loope
mov
inc
add
xchg
jl
daa
aas
inc
test
mov
cmp
shr
jmp
pushf
aas
sbb
mov
or
sbb
sbb
(bad)
in
pop
fisub
and
mov
sbb
xchg
or
mov
ja
out
jge
jmp
jecxz
and
test
test
lea
cmc
mov
sbb
push
into
call
les
or
clc
scas
ins
mov
cwde
repz
cmps
scas
icebp
fmul
push
mov
ss
leave
movs
and
mov
jns
xchg
ror
in
fidivr
out
sub
jns
ins
mov
mov
xor
jo
mov
dec
xchg
push
mov
add
stos
in
imul
mov
adc
pushf
call
retf
fsub
jmp
xchg
fs
add
cmp
adc
or
dec
(bad)
xor
push
pop
lods
aam
loope
loop
dec
sub
or
jo
push
in
add
push
lods
data16
shr
data16
jne
(bad)
push
fbstp
and
inc
pop
scas
js
mov
pop
in
inc
aaa
je
xchg
ja
push
mov
cdq
cmp
(bad)
lds
cmp
xchg
dec
inc
ror
cmp
and
mov
addr16
push
mov
inc
in
scas
fstp
ret
xor
push
imul
fild
jl
xor
push
adc
fidivr
(bad)
pop
rcr
and
add
mov
lahf
rcl
push
mov
int3
aas
(bad)
cwde
pop
pop
pop
mov
pusha
sbb
sub
es
aam
pop
jnp
inc
idiv
pop
adc
stos
jne
push
fbld
enter
je
cmp
mov
sub
rcr
iret
push
fsubr
sub
xlat
loopne
push
mov
pop
dec
imul
cwde
jnp
(bad)
popa
in
or
enter
mov
inc
mov
jg
xor
loope
out
and
and
lods
stos
scas
xchg
pop
pop
mov
aad
nop
into
xchg
mov
cmp
out
push
in
lahf
and
adc
push
add
test
retf
jge
sub
ja
dec
test
int
imul
jmp
iret
aaa
xchg
and
imul
in
pop
jmp
shl
popf
fst
je
in
push
mov
push
imul
push
fisub
or
in
lock
pop
test
mov
inc
push
or
sub
add
and
jb
xchg
mov
xor
sahf
ds
mov
sub
adc
out
cmp
inc
pop
jo
mov
push
or
jne
cmp
push
cmp
out
push
mov
std
or
pop
jle
fdivr
(bad)
xchg
stos
jne
sbb
pop
pop
and
xchg
xchg
retf
nop
(bad)
in
fnstenv
push
mov
js
jns
je
push
popf
cmp
cmp
adc
mov
jns
fdiv
fsub
push
mov
into
std
inc
jge
or
lahf
in
or
sar
popf
out
sbb
adc
ror
and
retf
lds
int
dec
pop
push
pop
or
ror
cmp
sbb
xor
fs
xor
popa
loop
add
loopne
push
(bad)
xchg
adc
cmp
rol
cmp
sbb
stos
shl
cmp
call
int
hlt
cdq
into
clc
daa
loopne
mov
repz
push
fidiv
scas
(bad)
gs
shr
mov
loopne
cmp
push
out
fdivr
call
sbb
mov
inc
mov
adc
pop
loope
dec
enter
stos
push
dec
sub
ja
adc
rol
imul
push
mov
aad
pop
fsubr
sub
pop
fcom
or
fldenv
push
mov
les
hlt
mov
adc
xor
hlt
rcl
or
nop
call
shl
push
int3
or
sub
lea
cmove
sahf
into
std
cmp
cmps
mov
xor
mov
dec
cs
xor
dec
mov
lods
mov
ins
push
mov
push
jae
add
fmul
popf
mov
push
ficom
adc
dec
mov
js
cmc
add
out
and
mov
call
sar
dec
jecxz
ds
xchg
add
ror
and
repz
fs
pushf
outs
sub
dec
cld
pop
ret
retf
mov
mov
sti
jno
xchg
pop
stc
pop
jmp
xchg
or
aas
in
dec
mov
dec
les
sahf
aaa
jge
mov
add
clc
cwde
jns
sahf
out
jle
push
xor
mov
push
dec
ja
sub
loope
lds
jecxz
stos
cmp
inc
hlt
cmc
(bad)
aas
push
rol
mov
fidivr
cmc
std
and
arpl
push
mov
in
clc
jmp
or
nop
lea
mov
sbb
push
jno
jl
aad
adc
out
push
pop
rcr
xchg
adc
xor
mov
jle
les
aad
mov
or
pop
add
xchg
pop
pop
add
inc
mov
pop
ror
lea
popf
mov
imul
mul
and
test
cmp
push
mov
sar
cs
xchg
and
push
sbb
cmp
outs
xor
push
mov
sub
scas
jecxz
add
push
xchg
mov
mov
call
mov
pop
mov
retf
xor
cmp
fld
or
xor
or
pushf
pop
push
or
loopne
xor
inc
and
pop
sub
push
pop
or
fld
sbb
push
int3
sbb
inc
inc
test
popf
xor
int3
std
outs
jno
push
jns
add
cwde
shr
or
stc
cli
outs
pop
adc
je
retf
stos
jb
xchg
pop
cld
outs
and
inc
sbb
imul
shrd
aas
and
mov
cmp
inc
jno
out
xor
adc
sar
or
mov
xor
pop
rcr
mov
aam
inc
pop
pop
jb
(bad)
das
mov
mov
(bad)
dec
gs
cmp
mov
adc
mov
pusha
xchg
movs
jbe
rcl
in
pop
bnd
ins
push
inc
add
cmp
and
cmp
sbb
jne
repnz
pop
inc
sub
push
push
mov
adc
loopne
bound
jbe
mov
lahf
dec
fnstsw
push
push
fnsave
mov
sar
xor
inc
in
cmps
pop
mov
jmp
xor
mov
mov
push
sub
push
jns
mov
dec
sbb
cmc
or
jge
inc
sbb
xchg
xor
lock
xlat
mov
mov
jle
mov
or
dec
test
(bad)
push
shl
cwde
imul
push
call
inc
mov
fst
adc
sbb
sbb
xchg
cmp
leave
ret
std
lods
test
sbb
outs
loopne
pop
sahf
sbb
mov
dec
mov
jno
jge
jbe
out
sub
mov
xchg
jo
repnz
inc
jmp
(bad)
lods
idiv
(bad)
call
pop
mov
mov
lods
hlt
or
mov
in
es
pop
jmp
out
nop
ds
(bad)
aaa
xchg
mov
imul
shr
stos
push
inc
pop
in
mov
xchg
pop
ret
pop
ss
adc
push
test
pop
mov
add
xor
cmp
in
ja
dec
lods
cwde
pop
mov
imul
rcl
sub
imul
mov
cmp
scas
inc
into
rcr
pop
pop
or
mov
xchg
jle
call
jae
add
inc
in
cmps
lds
ds
pop
xor
inc
pop
xchg
cmp
fst
xchg
test
mov
(bad)
mov
cdq
test
adc
push
mov
iret
jns
add
adc
xchg
jge
mov
mov
pop
or
jecxz
lahf
cmp
xor
fst
in
call
push
test
cwde
pop
or
mov
push
std
mov
sbb
fistp
js
lahf
lds
add
test
leave
stc
je
jno
mov
int
sahf
xchg
mov
push
sar
push
sub
inc
inc
and
push
ret
xor
jmp
lahf
iret
pop
icebp
xchg
sub
repz
arpl
sar
shl
fbstp
shl
cmc
sub
mov
dec
push
fldenv
adc
push
aas
fnstenv
test
adc
xor
mov
push
fwait
jae
xchg
in
shl
das
rcl
(bad)
pop
and
push
push
mov
jge
mov
sub
rcl
add
out
ins
pop
sbb
(bad)
ja
mov
sub
jmp
dec
callw
pop
xchg
pop
imul
xor
jle
idiv
adc
push
add
in
mov
xor
jl
rcl
inc
lods
push
mov
xchg
jl
or
jbe
mov
push
das
inc
ror
mov
aam
jmp
jecxz
hlt
sub
iret
and
cld
or
(bad)
sar
ds
in
cmc
add
in
jecxz
and
popf
int3
adc
lahf
push
or
mov
jo
xchg
fs
push
stos
sub
stc
dec
out
jmp
lea
xchg
sub
jmp
sahf
in
inc
pop
jp
xlat
adc
push
jae
pop
mov
mov
mov
mov
call
mov
imul
jge
sbb
shl
jns
xor
fcom
loopne
pop
loop
mov
inc
jge
cmp
add
xor
add
inc
les
rcl
push
jne
adc
push
sahf
mov
out
jae
mov
mov
dec
push
adc
sbb
add
ja
fwait
mov
dec
loop
add
ja
mov
test
movs
and
es
sbb
outs
sbb
dec
and
or
fisubr
inc
int3
push
popa
pop
icebp
ret
imul
inc
outs
add
shl
in
cmp
cmp
sub
cs
pop
(bad)
gs
ret
enter
scas
adc
xor
push
rcl
mov
xor
mov
out
sub
mov
fild
jno
out
das
xchg
pop
hlt
call
or
sub
int
fdivp
test
(bad)
sbb
inc
(bad)
cld
cmp
loopne
mov
pop
je
mov
and
sbb
movs
cwde
jp
dec
dec
es
movs
pop
cdq
pop
mov
dec
lea
mov
push
(bad)
(bad)
das
inc
adc
xchg
dec
test
push
xchg
cmp
outs
movs
push
dec
std
push
jge
inc
mov
push
or
or
xchg
div
out
inc
xchg
cmp
jne
xchg
push
nop
mov
das
ds
cmp
arpl
mov
out
fsubr
scas
sbb
aas
mov
scas
pop
mov
dec
jp
mov
or
daa
push
ja
fucomip
push
fs
inc
and
pop
sbb
fbstp
add
cdq
aam
add
mov
xor
sub
dec
sbb
out
inc
dec
sub
fidivr
dec
ror
jl
sub
xchg
fisubr
(bad)
jns
pop
jo
mov
not
cdq
daa
(bad)
enter
sub
fwait
cmp
pop
repz
dec
loopne
jbe
daa
je
in
arpl
and
cmp
out
dec
adc
call
xor
add
gs
xor
jg
jb
pop
popf
jae
and
pop
imul
int3
test
mov
jl
sub
stos
enter
cmp
iret
add
pop
inc
pushf
mov
repz
into
fldcw
in
jmp
(bad)
cmp
bound
fst
xor
test
mov
jmp
push
inc
mov
neg
in
in
dec
loope
pop
in
ret
test
ret
(bad)
daa
out
inc
sbb
es
repz
xchg
icebp
push
data16
mov
push
mov
repz
fdivr
cmp
add
les
adc
inc
jne
jle
sbb
retf
(bad)
lahf
into
inc
xchg
(bad)
repz
xlat
add
cmp
push
call
mov
jnp
sbb
aad
js
sahf
push
pusha
adc
retf
ror
mov
push
pop
and
fcom
pop
cmps
push
add
popa
fldenv
mov
fistp
cld
adc
outs
popf
in
mov
dec
mov
dec
icebp
push
jg
scas
mov
and
fcmovu
(bad)
xor
mov
rol
lods
call
imul
retf
and
xor
imul
adc
cmp
cmp
rcl
or
xchg
stos
dec
mov
(bad)
jb
cmp
dec
ror
mov
(bad)
scas
add
mov
test
nop
mov
cmp
dec
fstp
addr16
daa
ror
pop
mov
mov
mov
addr16
ins
and
jl
into
or
jl
mov
idiv
adc
lods
stos
retf
clc
cmp
or
outs
(bad)
fisttp
fist
rol
leave
mov
sub
out
shr
add
pop
hlt
push
test
cmp
sti
nop
(bad)
(bad)
mov
inc
out
sub
jl
pop
rcr
add
sbb
rcr
push
jl
mov
cmp
(bad)
dec
shl
mov
pop
adc
enter
stos
(bad)
cld
xchg
adc
push
add
or
in
or
outs
dec
out
hlt
sub
dec
jle
cwde
popf
test
lods
push
fisub
ror
mov
int
mov
jb
repz
push
nop
stos
neg
rcr
add
lds
cdq
pusha
push
fld
inc
dec
in
add
cmps
jne
jge
rol
icebp
jmp
popa
pop
cmp
lahf
fistp
std
push
cmp
pusha
xchg
mov
mov
push
xor
fwait
ds
mov
xchg
mov
pop
outs
mov
push
and
sbb
cmps
sub
or
loop
add
stos
cdq
call
push
je
jnp
push
(bad)
ins
cmp
iret
or
cli
test
push
add
sub
push
xchg
and
jg
and
ror
mov
int3
pop
add
cmp
(bad)
int3
bound
scas
mov
jmp
jno
xor
dec
mov
(bad)
nop
call
jle
inc
or
inc
jae
retf
xchg
loopne
call
sub
lods
int3
lods
mov
repz
or
shr
push
push
frstor
sub
lahf
push
sbb
jmp
jnp
lea
pop
int
cmp
jbe
inc
call
or
push
mov
cmp
adc
cwde
clc
xor
xchg
ins
loop
jp
or
pusha
xchg
sbb
rcl
aaa
out
push
push
xor
dec
or
and
inc
mov
adc
sub
cmps
and
cwde
pop
adc
pop
stc
xor
and
cli
sahf
sub
dec
js
rcl
and
lods
jg
lock
ficom
jnp
adc
fdiv
push
aad
xlat
nop
movaps
mov
(bad)
xchg
ror
inc
mov
cld
adc
mov
fmul
ins
and
out
retf
dec
push
push
xor
push
and
lock
sub
hlt
cdq
sbb
daa
sub
imul
inc
xor
movs
imul
ds
bound
sbb
or
mov
dec
add
cwde
rcl
xchg
and
call
mov
or
or
shl
(bad)
mov
cmp
adc
cld
dec
pop
cwde
xchg
pop
adc
aam
jno
mov
rcpps
out
push
adc
icebp
jmp
fidiv
jmp
push
sub
shl
fidivr
out
sub
int3
(bad)
mov
jmp
cmps
leave
sub
add
mov
push
pop
(bad)
pop
stc
pop
in
call
dec
ds
jae
push
gs
lods
mov
or
or
mov
loop
loope
clc
in
or
xchg
or
and
mov
dec
outs
adc
mov
daa
adc
aam
pushf
xor
xor
jmp
or
or
popa
xchg
inc
adc
cmp
out
mov
xor
push
imul
sbb
lods
imul
int3
inc
dec
push
ins
ret
mov
je
enter
jmp
enter
mov
fnstenv
ins
out
add
xchg
pop
and
dec
das
(bad)
sub
inc
dec
fnstenv
jp
mov
aad
jne
loop
push
pop
(bad)
in
mov
cmp
pop
mov
sbb
lods
lods
fnstcw
or
adc
xchg
mov
push
mov
cld
adc
(bad)
cdq
sbb
dec
add
out
xchg
or
dec
jmp
lods
int
mov
sahf
xchg
sbb
mov
jno
movs
ret
jle
sbb
xor
test
add
add
fwait
sub
addr16
pop
pusha
pop
mov
leave
scas
not
in
add
or
or
sub
inc
jns
xchg
ins
sub
adc
pop
cmp
and
mov
jl
push
scas
xchg
sub
out
fcomp
and
rol
call
ds
lods
cmp
sbb
fs
cmp
add
lahf
cmp
inc
inc
xchg
mov
jb
mov
jp
cmp
cwde
dec
fsub
sbb
mov
mov
adc
imul
clc
jmp
push
and
mov
retf
mov
fcom
ins
fcomp
call
cmps
xchg
push
jne
out
push
add
jnp
xchg
shr
jbe
fmul
shl
push
xchg
dec
jle
mov
dec
mov
xor
dec
xlat
xchg
ja
push
xchg
cli
xchg
iret
imul
in
or
jmp
cld
dec
aam
ins
les
mov
hlt
sti
lds
nop
(bad)
shl
ja
outs
adc
mov
xchg
pushf
and
adc
mov
xchg
repz
add
pop
add
sub
sahf
xchg
adc
rol
jo
push
adc
loop
mov
mov
sub
mov
or
sub
add
sub
inc
ins
cdq
sbb
popf
pop
xor
jl
cmp
ret
(bad)
stc
ror
fs
(bad)
xlat
inc
push
and
push
nop
data16
pop
pop
lock
shl
sar
add
repnz
mov
mov
xchg
mov
daa
out
dec
sahf
pop
lods
hlt
sbb
pop
add
outs
xchg
js
js
cmp
add
push
pop
push
(bad)
ror
push
push
mov
and
outs
jmp
push
shl
push
inc
mov
add
ret
(bad)
or
test
dec
vmovapd
and
clc
stos
push
out
iret
cdq
push
jp
mov
dec
out
into
sub
faddp
inc
std
jbe
cmp
inc
xor
xchg
imul
in
ficom
rcl
jae
ds
mov
mov
inc
and
cmc
nop
retf
and
add
xchg
call
ins
push
stos
push
ins
mov
push
aas
adc
and
jno
xlat
iret
jp
mov
or
adc
mov
mov
mov
add
xchg
sbb
je
mov
dec
push
sub
add
xchg
inc
jae
sbb
arpl
imul
(bad)
lock
in
push
xor
mov
stos
xchg
mov
aam
push
xlat
fs
fcmovnb
lahf
adc
popa
sbb
ret
jbe
test
fs
xor
xchg
jmp
loopne
mov
cmp
jmp
or
fmul
xor
(bad)
test
xor
aaa
stos
cmp
inc
out
sub
and
inc
clc
movs
mov
test
test
and
inc
inc
lds
call
or
stos
push
inc
xchg
aad
mov
shr
push
and
pop
push
inc
push
cmps
hlt
sbb
pop
(bad)
test
mov
or
cs
test
mov
enter
inc
mov
inc
mov
(bad)
mov
jbe
jno
dec
cli
jbe
jle
(bad)
retf
mov
fild
psllq
dec
dec
div
xchg
aad
jnp
pop
shr
xchg
inc
lahf
xor
xchg
pop
(bad)
push
neg
in
dec
bound
js
sbb
stos
inc
(bad)
cdq
mov
ds
jmp
or
inc
sub
jmp
das
cld
mov
leave
in
mov
cmp
pushf
add
fcmovnb
enter
jb
retf
sbb
xor
add
jp
(bad)
shl
xrelease
cmp
push
adc
out
and
xor
cwde
dec
mov
lods
adc
int3
imul
loop
scas
mov
and
scas
push
pop
mov
das
iret
test
js
mov
lods
and
add
inc
fs
cmp
test
mov
sbb
fisub
out
les
ins
mov
test
jg
rcr
idiv
movs
icebp
test
mov
retf
imul
add
mov
in
leave
call
js
jmp
fidivr
mov
mov
ds
inc
adc
push
and
jns
cmp
jmp
mov
ror
lods
dec
int3
(bad)
mov
out
mov
lods
cmps
and
xor
scas
and
push
pop
lahf
outs
arpl
dec
sbb
test
mov
add
add
aad
cmp
mov
dec
fild
enter
outs
sub
mov
or
mov
cmp
push
mov
push
lods
xchg
dec
jnp
mov
aas
add
not
push
les
inc
js
ds
(bad)
rcr
retf
push
sbb
adc
ins
cmp
or
repnz
jae
jbe
retf
mov
push
cli
popf
pop
jp
add
popa
lea
lds
pop
mov
adc
xchg
push
xchg
test
adc
jb
jb
fdivr
sub
call
adc
jne
test
pusha
sub
sar
pop
aaa
sub
sub
cli
out
jp
lods
pop
js
repz
rcr
sub
mov
nop
cmps
push
leave
mov
retf
repz
push
jge
mov
jns
sti
mov
sbb
pop
gs
leave
test
in
mov
xchg
sub
push
pusha
jno
inc
mov
mov
xchg
dec
leave
test
cld
das
push
retf
imul
bound
(bad)
mov
fwait
lods
adc
ins
lods
sar
dec
and
pop
and
sub
mov
fistp
rcr
xchg
inc
adc
cmp
inc
outs
mov
(bad)
gs
dec
scas
jb
pop
retf
loope
mov
push
mov
dec
lods
dec
mov
out
in
pop
test
stos
mov
retf
xchg
cmps
(bad)
or
fdivr
js
popf
bound
add
test
inc
mov
stos
popa
and
es
adc
jbe
sahf
test
mov
loop
out
and
or
sti
and
out
hlt
pop
and
daa
and
jg
sub
fs
das
call
jne
rcr
nop
mov
sbb
icebp
jge
mov
jle
gs
leave
cdq
fcomp
int3
into
add
jle
outs
(bad)
pop
shl
je
and
ins
jns
in
dec
out
call
bound
xchg
(bad)
retf
adc
adc
mov
inc
sub
xchg
cmp
retf
shl
sahf
test
dec
mov
sbb
lock
test
inc
add
inc
outs
cmps
scas
inc
or
pusha
sub
or
aas
mov
sahf
out
xlat
xchg
movs
dec
jns
mov
imul
mov
push
out
(bad)
and
shl
cli
pop
ds
inc
xor
adc
scas
sub
mov
and
lahf
(bad)
sub
rcl
jbe
sbb
push
adc
inc
push
out
arpl
push
(bad)
cmp
mov
pushf
sbb
mov
mov
imul
lea
in
jo
cmp
in
retf
sti
ja
pop
mov
xlat
arpl
cmp
sub
inc
mov
add
lods
add
dec
jbe
or
neg
sahf
shr
jecxz
(bad)
lahf
fisttp
mov
mov
jl
fs
xchg
in
fld
inc
sub
stos
test
imul
fisttp
test
and
lock
push
pop
movs
arpl
add
push
(bad)
adc
mov
shr
std
pop
sub
inc
scas
inc
pop
xchg
sti
bnd
(bad)
inc
push
sub
inc
(bad)
xchg
dec
xchg
fist
outs
cld
repnz
out
dec
frndint
dec
dec
inc
mov
cmp
inc
pop
mov
mov
mov
aad
xor
cli
aad
and
inc
push
pop
inc
je
jmp
add
test
xchg
xor
ins
pop
cmp
call
xlat
bts
or
mov
pop
fbstp
jo
jb
enter
inc
sbb
xchg
lock
cmp
aam
mov
stos
sbb
inc
shl
xchg
jp
dec
add
push
or
jno
sahf
inc
sub
retf
stc
scas
cld
jmp
inc
and
add
clc
and
lahf
popf
pop
stc
pop
arpl
aas
adc
ret
jb
cdq
sub
test
pushf
xchg
add
loope
aaa
lahf
mov
add
xchg
mov
mov
push
cli
xchg
sub
(bad)
(bad)
sbb
mov
push
(bad)
ret
psubusb
fcomi
lahf
adc
std
dec
adc
dec
adc
dec
mov
pushf
fucom
xchg
ret
int
idiv
adc
(bad)
cmp
data16
(bad)
xor
imul
adc
mov
out
jbe
lahf
daa
ins
and
repz
fs
pushf
mov
mov
mov
inc
dec
mov
jp
sub
and
(bad)
cmps
inc
push
add
pop
ins
adc
jbe
fst
push
call
mov
jae
mov
adc
jle
ds
push
and
dec
sub
and
xchg
or
adc
ins
int3
int
cmp
leave
sar
dec
addr16
sahf
sbb
fdiv
and
or
or
clc
mov
test
ret
lods
xchg
xchg
or
cmp
sbb
jp
mov
mov
inc
push
adc
(bad)
aaa
lods
(bad)
sbb
in
pop
jle
xor
pop
into
fst
mov
add
lock
and
daa
pop
(bad)
loope
push
push
lea
pop
mov
mov
aam
arpl
push
daa
jmp
xchg
pop
ror
sbb
dec
dec
in
xchg
jns
mov
pop
and
cwde
mov
cmp
mov
cmps
xchg
sahf
stos
std
xor
jl
in
out
cmp
js
fwait
mov
and
add
xchg
sahf
mov
cmp
es
adc
rcl
aas
sbb
(bad)
mov
mov
cmc
sub
sub
das
imul
adc
(bad)
mov
mov
sbb
jle
cmp
sti
cli
sbb
jg
add
mov
dec
push
jmp
retf
addr16
shl
pushf
xchg
mov
cmps
push
xor
inc
or
add
loope
imul
jl
test
je
dec
(bad)
fcmovnu
test
and
pop
(bad)
xlat
add
jge
aad
test
mov
inc
stos
cdq
ss
je
stos
ins
xor
jmp
xchg
retf
dec
pop
xchg
mov
dec
neg
xchg
mov
pop
jno
push
je
adc
jl
inc
cmp
movs
or
add
shr
jmp
mov
and
mov
sar
int3
push
xor
mov
inc
lods
rcl
cmp
and
data16
cmp
jno
jbe
dec
das
cwde
rol
imul
and
inc
ficom
mov
push
pop
daa
push
rcr
xor
pop
lock
sub
aam
and
jle
sub
sti
inc
jb
pop
sub
into
cmp
pop
push
jle
xchg
jle
mov
ficom
dec
fld
ror
jb
or
pop
pop
in
mov
int3
push
inc
loopne
adc
sub
jge
fcomp
retf
mov
lahf
xchg
ror
mov
rol
xor
push
pop
ret
xor
pop
sbb
push
xchg
xchg
mov
lods
pop
mov
add
and
stc
bound
sahf
jle
outs
push
aad
aaa
outs
out
jne
mov
loop
cld
dec
repnz
in
mov
xchg
push
mov
fsub
(bad)
fidiv
retf
push
shl
cmp
xchg
jae
fwait
and
and
(bad)
push
xlat
mov
jmp
hlt
xchg
ror
bound
cmp
sbb
dec
cwde
fcom
(bad)
xlat
inc
add
pusha
repnz
daa
mov
mov
jae
add
leave
xor
fist
pop
push
repz
inc
and
or
call
jmp
cli
mov
sbb
jno
push
sub
cdq
sub
scas
sbb
pop
ins
push
jne
outs
cdq
dec
jb
gs
xor
in
inc
sbb
pop
mov
lods
pop
and
fstp
dec
fsubr
out
(bad)
lods
outs
mov
or
adc
rcl
add
stc
loope
or
dec
out
scas
adc
sbb
sbb
outs
inc
cmp
and
jmp
imul
call
jne
mov
pop
ds
fsub
mov
mov
jmp
fsubp
fwait
(bad)
jg
push
cmps
ret
lods
test
xor
scas
not
jg
fsubr
mov
adc
clc
rcr
adc
popf
sub
inc
pop
paddsb
xchg
test
fwait
popf
enter
mov
sbb
inc
fwait
test
ja
cmc
je
inc
and
sar
mov
cmps
push
(bad)
(bad)
in
mov
mov
mov
scas
cmp
dec
fadd
in
dec
mov
xchg
mov
mov
xor
aaa
mov
dec
push
mov
movs
shl
sbb
mov
fisubr
loope
mov
sti
aam
shl
cmc
sbb
mov
int3
and
loop
xor
ins
mov
lahf
stos
sub
loope
mov
push
sbb
(bad)
sbb
jb
mov
jmp
sbb
je
dec
imul
xchg
add
popa
test
and
cdq
mov
ror
addr16
(bad)
(bad)
mov
outs
mov
test
jp
jg
cdq
xor
scas
mov
mov
adc
popf
dec
pushf
aas
dec
lds
imul
stos
cld
xchg
iret
shl
dec
mov
test
jbe
in
pop
mov
push
(bad)
shl
nop
cs
mov
inc
retfw
mov
cmp
ror
les
ret
dec
std
mov
pushf
and
or
(bad)
int
pop
aam
jb
and
push
stos
dec
scas
jns
test
mov
lods
(bad)
aam
dec
loopne
call
js
mov
addr16
and
adc
sub
add
out
sub
aad
pushf
xchg
inc
jno
scas
jb
jb
mov
loopne
and
jmp
push
xlat
add
or
inc
ror
in
fdiv
adc
movs
(bad)
lods
loop
adc
loope
fs
xor
sbb
fisttp
push
dec
sub
jbe
cmp
outs
test
je
pop
out
mov
mov
jecxz
mov
jns
sub
gs
mov
dec
sbb
fsubr
je
push
js
scas
loope
pop
and
mov
jg
(bad)
test
outs
inc
mov
test
mov
int
adc
jmp
adc
ins
(bad)
mov
jp
add
lea
fwait
cmps
ds
outs
pop
popa
push
inc
inc
int
clc
sbb
not
stc
(bad)
ss
cdq
out
and
std
shl
div
movs
pop
pop
or
xor
sar
inc
add
mov
fadd
ror
movs
or
xor
setnp
dec
movzx
jne
arpl
xchg
sar
shl
mov
int3
out
lea
stos
mov
add
dec
push
sbb
data16
push
and
inc
iret
dec
add
out
ins
icebp
dec
sbb
jo
mov
jnp
inc
sti
add
call
nop
cwde
and
add
js
push
imul
outs
sar
adc
dec
mov
inc
pop
cmps
shl
inc
daa
mov
retf
retf
icebp
nop
fst
(bad)
jge
sbb
out
mov
mov
iret
or
fsubr
nop
in
xor
mov
ss
mov
cmp
and
mov
adc
outs
mov
xchg
cmps
xchg
jmp
push
mov
or
add
sbb
rep
xor
mov
jg
pop
xchg
in
pop
enter
int3
lds
lea
pop
xchg
popa
jg
loop
push
xchg
dec
adc
outs
into
push
int
fstp
hlt
arpl
leave
(bad)
jb
in
lds
jmp
test
out
cmp
lds
and
loop
enter
mov
jne
adc
mov
daa
movs
mov
jmp
mov
push
iret
sub
jns
(bad)
jno
fsub
es
test
movs
pop
pop
push
cld
out
jmp
loop
out
fisttp
add
and
push
imul
or
das
push
pop
or
jmp
arpl
inc
addr16
mov
ja
mov
adc
ins
xor
pop
arpl
or
or
fdiv
adc
movs
push
mov
push
call
icebp
or
add
inc
cs
fisub
jno
fcomp
stc
scas
aad
sub
inc
les
add
es
out
(bad)
out
mov
ret
adc
jo
pop
mov
cmp
(bad)
rcr
mov
jmp
inc
push
(bad)
xlat
cld
cld
mov
test
and
pop
int3
(bad)
sahf
movs
mov
out
sub
lods
out
add
scas
fs
out
inc
lea
inc
lds
mov
push
loope
retf
jmp
pop
add
enter
inc
push
xchg
pop
mov
mov
mov
mov
or
lea
fld
jbe
js
rcr
std
pusha
cmc
sbb
jno
test
pop
int3
jae
aam
in
xor
mov
jae
push
mov
(bad)
fcmovnb
push
xor
add
out
movs
cmps
sbb
into
in
inc
mov
mov
leave
jg
outs
and
dec
sub
bound
loop
aaa
je
jae
push
mov
and
scas
imul
ret
cmp
std
stc
inc
hlt
sub
jmp
(bad)
into
pop
inc
retf
stos
mov
push
xchg
cmp
add
push
sbb
dec
and
pop
inc
scas
xchg
pop
jp
jo
cmc
lods
push
mov
jp
push
mov
stc
sbb
jmp
mov
mov
or
xor
call
in
mov
int3
and
cwde
bnd
ror
lahf
cdq
and
jmp
scas
sbb
cld
xor
pop
imul
or
(bad)
inc
pop
movs
and
mov
mov
cmp
push
mov
and
xchg
int3
dec
bound
dec
xchg
or
call
adc
sbb
jb
aam
dec
xor
ja
pop
cwde
inc
xor
imul
xchg
jae
mov
or
gs
mov
fcomp
add
push
aam
sbb
dec
inc
ror
(bad)
dec
loope
jo
dec
pop
xor
cmp
out
pop
pop
loope
pop
imul
add
xchg
pop
sub
fcmovb
sar
add
ret
pop
xchg
pop
mov
mov
jmp
lods
sahf
int
in
jmp
in
pop
lods
loopne
sbb
sub
test
sbb
retf
sbb
inc
les
pop
adc
inc
ret
stos
adc
(bad)
jg
or
call
in
jecxz
pop
addr16
dec
ds
rol
lock
cli
hlt
arpl
jnp
jno
add
and
sub
sbb
out
dec
ror
stc
mov
test
das
maskmovq
test
or
sub
and
adc
dec
jle
test
jns
int3
mov
sub
xchg
push
push
pop
push
jg
movs
or
cmps
fsubr
xor
clc
jae
mov
jnp
or
into
js
xor
fs
mov
shl
or
rol
jle
dec
retf
(bad)
xchg
icebp
rol
mov
pop
mov
neg
aaa
mov
sub
sbb
mov
dec
mov
push
repnz
inc
adc
out
push
sti
ret
mov
and
add
push
inc
or
cmp
fnstsw
dec
jae
jno
inc
xchg
sbb
push
dec
jg
or
cmp
sub
mov
hlt
js
mov
in
imul
movs
jecxz
fst
ins
repnz
jg
sti
jb
fbld
sub
aam
pop
outs
addr16
push
stc
test
test
pop
push
mov
es
sbb
inc
shl
push
mov
fst
mov
adc
ret
call
xchg
sbb
jl
pop
leave
dec
dec
cs
jge
push
test
dec
ja
(bad)
pop
mov
inc
and
enter
mov
scas
mov
jb
xor
(bad)
mov
mov
or
inc
mov
repnz
pop
mov
stos
das
mov
dec
mov
cwde
mov
dec
fiadd
std
push
sbb
icebp
retf
xchg
mov
jns
mov
mov
pushf
jge
in
cmp
push
je
jns
xchg
xchg
test
pop
dec
loopne
jecxz
pop
mov
push
pusha
(bad)
inc
push
or
mov
rol
push
mov
sbb
mov
xor
enter
adc
mov
mov
xchg
pop
or
mov
ret
aam
fwait
scas
popw
and
add
ficomp
xchg
in
sbb
pop
or
pop
fs
rol
mov
fs
dec
cdq
adc
and
xor
aas
sub
aaa
or
sbb
mov
push
mov
sub
mov
jo
pop
push
cdq
push
rol
fld
repz
jb
(bad)
loope
mov
js
adc
movs
adc
out
xchg
(bad)
xor
and
mov
adc
lock
lds
mov
shl
adc
cmovl
xchg
mov
call
adc
pop
pop
mov
xor
icebp
mov
xor
mov
popw
pop
je
push
adc
movs
sub
sahf
add
sbb
jmp
stos
data16
fistp
(bad)
pop
outs
xchg
outs
ins
fisub
pop
movs
inc
inc
cmp
bnd
jge
jo
enter
push
mov
xchg
nop
jg
jne
hlt
pop
adc
popa
mov
fstp
sub
ret
dec
xor
das
mov
je
push
test
xchg
dec
jl
adc
mov
push
lock
loopne
sahf
sub
(bad)
mov
or
push
sbb
mov
inc
adc
in
or
xchg
sub
dec
rcr
ins
mov
dec
fdiv
out
or
inc
xchg
sbb
and
pop
jae
aas
inc
out
cli
call
xlat
push
sbb
push
inc
stc
pop
rol
push
test
fcomi
cmp
add
xchg
sti
or
ror
adc
(bad)
mov
lock
xchg
cmps
sti
das
cmp
xlat
mov
pop
push
popa
sbb
stos
popa
data16
sar
lods
xchg
in
xchg
add
push
jmp
or
fsubr
repz
scas
add
rcr
adc
std
retf
imul
inc
aaa
outs
and
movs
push
and
test
cmp
enter
and
or
aaa
cdq
sub
push
mov
cmc
mov
pop
call
adc
adc
mov
stos
or
pop
or
jne
(bad)
stos
loope
popa
outs
out
sbb
xor
cmp
and
aam
jbe
in
push
mov
mov
test
dec
cmp
mov
cmp
jno
dec
jbe
push
loope
data16
cwde
jmp
scas
pop
dec
push
add
add
aas
pushf
ret
xchg
pop
xchg
fild
jno
cmp
cs
popf
and
push
xchg
add
addr16
xor
test
fs
cli
xor
out
inc
icebp
adc
jle
xchg
and
stc
dec
pop
int3
ja
aas
add
das
jno
data16
mov
push
xor
lea
nop
dec
xor
cmp
mov
cmp
leave
inc
cs
leave
mov
dec
jne
movs
int
sti
and
sub
gs
mov
sub
mov
cli
ret
rol
xchg
movs
push
sub
sbb
ret
xor
cli
and
mov
rcr
sub
sbb
inc
fs
cmps
jg
add
clc
and
imul
jl
xor
add
js
sub
push
mov
mov
sbb
pusha
loop
xchg
imul
test
and
cdq
(bad)
call
dec
cmp
mov
xor
hlt
outs
xor
mov
and
jp
and
ins
mov
sbb
repnz
jmp
push
xor
scas
add
sub
movs
xor
mov
mov
cli
sub
sar
icebp
fidivr
call
and
pushf
pop
sbb
or
adc
std
adc
scas
in
adc
arpl
sub
xchg
mov
dec
int3
inc
cmp
mov
jge
retf
cld
xor
cmp
sub
sbb
jo
shr
cmp
fwait
xlat
les
fdiv
mov
and
icebp
cmp
repz
inc
in
imul
xchg
pop
dec
cmp
mov
imul
pop
xchg
mov
xchg
movs
ins
pop
sbb
xor
ss
dec
mov
inc
cld
xchg
and
cmps
rcl
dec
outs
jnp
pop
lahf
pop
lds
jbe
int3
fcom
mov
retf
add
jns
mov
in
mov
sub
lods
out
call
mov
shl
cmp
aad
sbb
mov
ins
ins
jle
xor
xor
int3
cmp
cli
je
jno
or
sub
sbb
push
test
pushf
gs
cmp
inc
jo
sti
frstor
leave
fild
les
pop
imul
mov
push
popa
(bad)
pop
xlat
rol
std
inc
xchg
sbb
into
cmp
fdivr
repnz
dec
push
iret
test
add
push
dec
dec
xlat
jno
adc
(bad)
pushf
inc
les
dec
dec
inc
add
pop
jns
inc
mov
push
jle
dec
mov
push
repz
add
sbb
stos
mov
into
push
movs
rcl
dec
popa
dec
xor
jmp
jmp
mov
(bad)
in
inc
push
iret
iret
les
in
jmp
test
lods
stos
jle
push
push
lea
jg
into
xor
lock
push
mov
pop
imul
mov
repz
or
aam
mov
clc
scas
lds
adc
xchg
or
(bad)
adc
xor
push
outs
sbb
imul
ror
xchg
lock
(bad)
add
repnz
ja
mov
mov
sub
pop
fiadd
sbb
cmp
test
sbb
cmp
sub
mov
add
cmp
call
iret
pushf
pop
(bad)
sti
xor
dec
adc
and
cmc
stc
xchg
arpl
lock
call
mov
push
ins
ins
gs
int
test
xor
enter
sbb
pop
sbb
pop
cmps
mov
sbb
fsub
push
xor
enter
xchg
stos
aad
or
dec
jae
and
push
sub
shl
(bad)
xchg
ret
or
xor
mov
loopne
adc
sti
push
xlat
add
add
dec
sbb
sub
xchg
mov
inc
aaa
cdq
loope
arpl
or
inc
jge
enter
or
lods
es
aaa
or
cdq
mov
mov
retf
popf
mov
lods
mov
test
xchg
arpl
pushf
and
adc
jge
ret
lock
jo
xchg
rcr
and
inc
dec
popf
cmps
mov
pushf
(bad)
aaa
scas
sub
jo
mov
xor
stos
xchg
inc
sub
xchg
mov
(bad)
sti
jo
inc
dec
mov
out
test
jmp
ret
cmp
loope
cmc
add
lea
sar
js
movs
lock
and
dec
ror
xlat
movs
inc
add
jmp
hlt
hlt
push
test
div
xor
pusha
jle
xor
mov
dec
adc
lds
cmp
add
and
mov
jns
hlt
adc
mov
les
(bad)
lds
int3
mov
in
cmps
mov
push
mov
hlt
shld
inc
jmp
dec
sub
cs
xchg
in
cmp
sbb
call
lds
sar
je
nop
nop
lock
pop
and
or
pop
pop
mov
jnp
arpl
and
retf
imul
cld
cmp
push
and
pop
repnz
inc
inc
mov
and
sbb
jns
or
pop
es
xchg
bound
fcmovne
jo
rol
add
dec
mov
cmp
ja
test
or
and
xchg
mov
stos
fwait
sti
dec
cmp
aad
fmul
call
jg
mov
loopne
fucom
bound
out
call
sub
jle
cmp
push
int
and
test
into
loopne
jge
push
jge
popa
push
add
inc
repz
xor
retf
imul
pop
mov
stc
sbb
loop
xchg
dec
adc
cmp
xor
inc
js
add
(bad)
fstp
dec
push
call
adc
pop
in
or
pop
inc
lock
movs
out
or
call
xchg
cmp
(bad)
(bad)
fmul
imul
or
in
cmp
fbld
daa
dec
xchg
addr16
idiv
shr
fs
popa
shl
cwde
pop
jbe
cmp
pop
in
stos
sbb
leave
int
push
mov
out
add
cli
mov
call
test
xchg
pop
fdiv
cmp
jl
call
push
sti
mov
jne
cs
add
ret
cld
call
pop
dec
out
leave
sbb
in
call
shl
daa
adc
stos
sub
test
pop
repz
sti
sub
das
sbb
inc
add
xor
out
jnp
sbb
fsubr
test
mov
scas
addr16
cmp
loopne
and
cdq
sub
xor
shl
xor
xchg
je
nop
out
adc
add
jbe
xchg
test
leave
jge
jg
sti
sar
lea
movs
or
pop
scas
lods
bound
fwait
sub
lahf
mov
or
lock
pop
push
lods
nop
shl
enter
(bad)
cdq
retf
mov
loopne
xor
mov
das
sar
mov
dec
ret
ret
int
popf
xor
cmps
cwde
cld
retf
pop
lods
jge
jl
mov
add
(bad)
das
(bad)
sti
jbe
jmp
cmp
and
inc
frstor
outs
ins
adc
lods
pop
adc
push
pop
in
mov
and
sbb
aas
xchg
xor
sbb
adc
dec
push
and
gs
dec
mov
(bad)
mov
nop
jae
mov
ja
push
xchg
cmp
dec
stos
xchg
int
adc
cdq
xchg
and
(bad)
pushf
jmp
cmc
(bad)
scas
call
aaa
add
dec
jo
fstp
jg
mov
sbb
(bad)
out
es
jmp
lea
and
out
movs
ror
mov
dec
push
mov
icebp
inc
das
xor
mov
and
pop
push
shl
outs
jns
call
inc
fidiv
jns
js
pop
scas
repz
or
jb
(bad)
inc
mov
inc
icebp
mov
xchg
add
mov
cmps
(bad)
sub
mov
in
adc
(bad)
jb
ret
in
jno
inc
dec
push
(bad)
arpl
addr16
scas
call
push
or
aas
cmp
sub
movs
pop
cwde
jb
mov
jne
add
mov
enter
add
push
pop
call
sbb
ins
adc
cmc
and
add
out
ret
adc
jo
hlt
das
mov
xchg
dec
adc
int
xor
int3
jg
sub
inc
jae
xchg
cmp
xor
loope
jnp
mov
rcl
das
inc
cmps
sbb
scas
neg
push
jmp
jecxz
jl
mov
jecxz
loop
xchg
jle
(bad)
adc
pop
cwde
aas
and
lock
cmp
add
fs
sub
push
xchg
(bad)
arpl
jae
push
jb
not
aad
cmp
gs
cs
ss
repz
push
stos
iret
fstp
or
mov
dec
pop
fcomp
lds
and
adc
in
lods
pop
xchg
fisub
pop
addr16
test
out
cmps
adc
and
dec
jp
aaa
bound
mov
ss
push
jb
fld
or
out
push
sub
fidiv
outs
out
dec
out
jmp
sti
sbb
fmul
lea
pop
push
pop
(bad)
mov
add
push
frstor
dec
clc
dec
add
push
enter
sub
sub
push
jmp
pop
rcr
out
imul
push
inc
aas
inc
pop
int3
leave
cmp
xchg
fs
sub
popf
push
xor
inc
jmp
fisub
mov
lock
movs
fwait
or
mov
push
mov
and
pop
sbb
shl
(bad)
push
rcl
add
pop
stos
xlat
mov
cwde
xor
sbb
(bad)
movs
mov
addr16
ins
xchg
stos
pop
inc
inc
mov
icebp
mov
shl
add
xor
addr16
loopne
js
add
scas
in
push
ins
leave
and
pop
rcr
sbb
push
inc
xchg
push
and
rol
adc
cmp
mov
(bad)
adc
movs
sub
cdq
and
dec
icebp
(bad)
sti
jae
mov
bound
dec
test
pop
out
popf
push
jge
and
mov
add
dec
ret
inc
and
push
mov
mov
cs
outs
test
sub
inc
mov
hlt
(bad)
lahf
outs
(bad)
pop
ret
test
add
add
sar
inc
dec
mov
pmaxsw
push
xchg
adc
or
stos
bswap
cmp
lods
push
xchg
add
push
or
inc
add
ja
add
mov
repnz
cmc
cmc
fcmovnb
rcl
push
fwait
out
rcr
ret
fdivr
loope
in
xchg
in
js
sbb
xlat
in
sub
or
lods
push
inc
dec
loop
or
mov
or
jmp
add
push
push
add
hlt
cmps
imul
push
stos
idiv
pop
add
cli
(bad)
jle
and
sbb
pop
mov
ja
jmp
sub
add
aam
adc
xchg
inc
scas
push
jmp
mov
mov
pop
xor
mov
clc
sbb
sar
fidivr
loope
mov
mov
into
jne
enter
or
outs
push
push
daa
pop
mov
push
push
xor
rcl
test
popf
dec
loope
fcmovnb
mov
mov
xchg
pusha
mov
es
ror
push
xchg
and
loope
inc
and
fistp
loop
add
(bad)
lahf
(bad)
mov
cld
repz
inc
inc
pop
pop
pop
out
je
(bad)
mov
add
jl
in
cmp
retf
cdq
pop
lahf
test
sbb
sbb
aam
mov
and
shl
adc
push
test
add
stos
daa
(bad)
sub
xor
gs
sbb
outs
jb
and
sub
repnz
aaa
rcr
push
daa
adc
or
push
mov
(bad)
jb
loopne
cmps
icebp
into
ss
enter
jl
(bad)
std
cmp
adc
movaps
js
shl
pop
in
xchg
sub
sbb
push
outs
xor
lock
out
sbb
clc
sbb
loope
jecxz
(bad)
and
movs
addr16
cmp
scas
mov
shr
jns
cmps
fucomi
loope
inc
or
pushf
test
loopne
(bad)
mov
fcmovne
mov
mov
cmps
stos
imul
std
inc
lock
pop
aam
cmc
sbb
je
fwait
repz
cmp
add
mov
out
xor
lahf
gs
pop
mov
or
out
(bad)
dec
pop
jle
in
sub
dec
nop
test
push
iret
js
push
cld
(bad)
mov
leave
or
mov
jg
ret
cmp
sar
and
sbb
retf
ret
cmp
outs
cwde
cwde
bound
lahf
fist
loop
sbb
fist
inc
cdq
neg
mov
lods
ins
xchg
push
in
push
sub
loop
pop
cwde
sub
(bad)
push
call
pop
mov
scas
sbb
test
mov
and
mov
sub
add
stos
cld
mov
jg
mov
pop
mov
jle
jo
xchg
imul
out
(bad)
in
lds
movs
add
cmp
and
jnp
hlt
ins
adc
sbb
cmc
dec
ss
cwde
mov
cmps
sub
cli
cmc
repz
jbe
out
adc
dec
push
xchg
lea
xchg
jecxz
pop
inc
push
mov
add
fst
jle
and
sar
push
sub
loopne
or
jmp
pop
mov
jmp
xchg
les
or
mov
xor
mov
dec
hlt
mov
pop
ror
ins
int3
mov
aam
add
aaa
xor
sar
inc
mov
fidiv
leave
jnp
imul
das
(bad)
inc
scas
iret
stos
push
adc
shl
inc
aad
clc
inc
out
ret
mov
mul
in
aam
push
(bad)
and
fldenv
hlt
push
xchg
shl
push
ror
test
fwait
not
ins
jl
mov
push
out
adc
xchg
adc
add
pop
xchg
(bad)
mov
jno
in
int
stc
jl
pushf
jmp
and
dec
je
sub
mov
stos
cli
lods
jne
xchg
push
mov
cli
mov
mov
icebp
push
dec
mov
cld
mov
das
aad
mov
or
je
enter
sub
fidivr
test
je
fcmovu
es
mov
cmp
inc
aaa
(bad)
cli
add
aam
mov
pushf
popf
mov
inc
push
mov
icebp
test
mov
xchg
in
lock
inc
add
mov
lds
and
(bad)
in
fadd
loopne
inc
mov
repz
jb
adc
loop
xchg
mov
aad
out
mov
or
dec
test
adc
call
fdivr
loope
push
and
and
mov
xchg
lahf
pop
xor
dec
call
pop
and
jnp
pushf
jnp
and
repz
adc
jbe
outs
(bad)
leave
popf
dec
xor
sub
push
gs
pusha
dec
popa
sbb
xchg
sub
sahf
fs
jmp
inc
mov
in
rcr
test
pusha
gs
int
mov
sub
jb
sti
inc
shr
fwait
cld
fsub
cld
out
scas
mov
fs
ffreep
pop
pop
adc
push
sub
and
fild
(bad)
jmp
mov
jb
sbb
clc
mov
ds
stc
js
cs
cmps
(bad)
dec
rol
clc
or
fisubr
fcom
pop
add
mov
fdivr
pop
in
(bad)
mov
jle
test
stos
xor
pop
cwde
mov
push
fnstenv
sub
or
mov
stos
mov
xchg
nop
test
dec
dec
mov
sub
mov
nop
outs
inc
in
int
inc
cmp
dec
pop
lods
addr16
ret
js
inc
push
leave
add
pop
sub
dec
call
sub
(bad)
ficomp
mov
xchg
sub
xchg
test
mov
mov
xchg
mov
mov
cmp
sub
sbb
(bad)
out
inc
dec
dec
xchg
xor
stc
or
iret
popa
sub
jbe
mov
xor
inc
pop
jo
ss
pushw
inc
push
mov
(bad)
xchg
cli
dec
pop
push
int
push
outs
inc
ds
sbb
lahf
cdq
sbb
push
pushf
xor
jl
jle
sahf
cld
cmp
mov
pop
ins
add
iret
test
mov
inc
or
popf
lods
mov
adc
and
add
add
sub
sub
mov
jp
ins
sub
test
outs
xor
mov
test
ins
enter
sbb
adc
mov
add
addr16
adc
movs
in
cmp
stc
imul
out
cwde
sub
lahf
ret
sar
fmul
cmp
mov
shl
cmc
fisubr
sbb
pusha
jp
adc
add
jp
jns
jbe
push
mov
jecxz
out
stc
mov
jbe
call
bnd
imul
and
cdq
leave
or
push
(bad)
cs
sub
pushf
jmp
jbe
adc
scas
lea
aam
mov
xchg
pop
iret
xor
outs
bound
aaa
pop
push
shl
adc
inc
mov
ret
sti
(bad)
dec
(bad)
xchg
icebp
sbb
in
stos
mov
push
pop
call
xchg
std
lahf
push
scas
idiv
in
call
xchg
adc
xlat
test
xor
(bad)
xchg
call
bound
adc
jle
xor
mov
ins
push
data16
xchg
fcmove
jno
sub
pushf
xchg
in
jge
repz
movs
cmp
add
popa
cmp
or
inc
arpl
dec
js
sub
test
dec
inc
mov
addr16
sub
mov
loop
mov
jae
pushf
int3
lds
daa
test
jg
push
and
mov
mov
ds
(bad)
pusha
pop
xor
add
jmp
mov
mov
cmps
or
bound
sti
ins
pusha
push
mov
push
int3
neg
xor
lahf
jo
pop
vdivss
outs
mov
rol
shl
sub
fsub
jle
cld
xor
ficom
aad
out
into
xchg
adc
adc
inc
inc
and
(bad)
jl
cmp
adc
mov
jle
cmp
lods
cmps
cs
test
xor
dec
cmp
cmp
cmps
aaa
add
stc
out
outs
jl
mov
shl
xor
xor
fwait
mov
cmp
xchg
(bad)
cs
nop
mov
inc
dec
in
pop
adc
or
scas
ret
popf
aaa
cmp
stc
movs
js
cmp
sar
sbb
in
push
sub
popf
push
(bad)
mov
push
mov
repz
stos
inc
out
sub
pop
sub
pop
xor
(bad)
jecxz
loope
mov
in
xchg
out
sbb
aad
les
in
ins
inc
daa
dec
into
and
sbb
test
into
adc
stos
cld
and
test
and
call
test
gs
pushf
cmp
enter
jg
inc
jge
imul
jmp
or
and
or
call
inc
fidivr
popf
mov
ins
adc
jno
mov
stos
shl
add
loop
dec
bound
inc
xchg
dec
adc
sub
mov
popf
xor
xchg
mov
popa
sti
bound
cmps
sahf
inc
enter
test
inc
mov
or
mov
shl
dec
ins
and
(bad)
xor
dec
push
psrlq
sbb
jmp
dec
aad
ins
out
jb
mov
mov
push
cmc
or
dec
mov
dec
jno
dec
pop
mov
jg
or
loop
pop
cmp
pop
imul
movs
jle
cmps
inc
iret
cdq
retf
pop
lahf
mov
inc
push
test
sbb
(bad)
and
sahf
mov
xor
adc
cli
push
jmp
cmp
xchg
pop
xchg
sti
int3
add
fiadd
shr
fs
xor
sar
sub
popf
xor
mov
jecxz
in
cmps
xor
fbld
loope
add
aas
and
push
imul
mov
dec
mov
and
stos
in
inc
pop
sbb
cwde
inc
cmp
movs
ja
adc
fist
push
enter
sbb
inc
cmp
aad
dec
adc
sub
enter
lods
(bad)
xor
arpl
test
sahf
imul
and
inc
xor
push
cmp
push
xlat
pop
mov
repz
mov
mul
xchg
jb
sbb
ja
mov
es
mov
add
push
sbb
push
and
sbb
daa
lods
dec
out
push
ss
and
or
xchg
jmp
imul
inc
cs
or
shr
pushf
mov
cwde
push
icebp
adc
inc
jb
sub
scas
pushf
jmp
mov
jo
jle
adc
xchg
mov
retf
jno
sub
repnz
dec
add
adc
inc
jmp
adc
outs
mov
inc
pop
xchg
dec
mov
xchg
aam
mov
pop
loopne
xchg
jae
outs
lds
movs
adc
neg
scas
mov
mov
pop
not
and
addr16
mov
sbb
cmp
adc
(bad)
inc
sbb
jmp
not
inc
shl
es
fcomp
outs
xlat
jmp
stc
(bad)
cli
scas
outs
sbb
adc
mov
mov
add
and
test
adc
pop
outs
fistp
mov
loop
ror
ins
in
xor
ins
inc
xchg
je
push
aaa
imul
pop
arpl
test
jno
out
test
lock
jmp
lds
cmps
and
movs
ficomp
das
ret
(bad)
fbld
and
sub
fs
clc
lahf
stos
xchg
test
std
int3
push
leave
adc
test
stos
out
(bad)
movs
push
cmp
inc
adc
jnp
in
pop
aad
mov
call
jne
enter
push
jo
outs
mov
hlt
mov
xor
add
out
aas
sub
dec
push
pop
mov
fist
cmp
or
movs
adc
(bad)
adc
adc
call
mov
(bad)
mov
js
bound
ds
jg
repnz
xchg
aam
out
shr
inc
xchg
les
xchg
or
movs
retf
ins
jecxz
fdivr
ds
jp
popa
sub
ss
jns
(bad)
fld
cmp
sub
je
repnz
push
push
mov
mov
out
push
inc
ret
(bad)
sbb
nop
loop
jb
setno
sbb
test
or
stos
adc
push
ins
fstp
rsqrtps
sahf
sbb
xor
cmp
pushf
stc
in
mov
fistp
cmp
dec
dec
inc
sbb
push
xchg
jns
inc
loope
add
inc
bound
adc
add
int
mov
sub
inc
call
outs
mov
xor
clc
std
push
sub
outs
pop
movs
cli
dec
mov
iret
mov
cs
push
daa
fld
mov
sub
and
cwde
cmp
(bad)
outs
enter
dec
sub
jl
cld
jecxz
sub
mov
and
outs
neg
push
push
in
cmp
pop
ror
or
in
fs
adc
xor
jns
pushf
xchg
mov
cmp
cmps
out
jecxz
imul
xchg
sub
xor
lds
popa
lea
inc
cwde
mov
pmuludq
pop
icebp
xchg
mov
dec
cli
jne
add
push
test
ret
add
retf
xlat
retf
and
sti
xor
hlt
mov
movs
inc
rol
(bad)
test
addr16
inc
push
adc
outs
mov
or
and
sub
test
inc
mov
rcl
ror
add
into
sub
mov
dec
js
sbb
hlt
mov
rcl
pop
pop
dec
pusha
or
jae
shl
inc
fist
and
mov
mov
inc
leave
jg
jns
mov
and
test
mul
or
jb
out
cdq
jae
mov
adc
pop
lock
fidivr
cmp
js
leave
add
mov
popf
popa
sbb
jmp
pop
cmp
loop
fistp
pop
jo
add
cmp
jmp
mov
sar
add
lods
rcl
pusha
pop
aad
cld
mov
imul
shl
sub
mov
out
ins
mov
add
sbb
xchg
fimul
sub
pop
push
pop
sub
add
add
add
idiv
adc
sbb
sbb
shr
retf
mov
clc
call
ins
sbb
or
ret
sahf
into
xchg
les
adc
xor
jmp
mov
lock
fsub
ss
cdq
stos
pop
outs
push
aas
jl
pop
ss
mov
jbe
jl
mov
sti
dec
dec
daa
inc
fwait
pop
xchg
addr16
add
(bad)
sub
leave
fld
stos
jns
sbb
sub
inc
adc
xchg
(bad)
iret
push
mov
pop
or
cmp
jmp
sub
aas
iret
call
scas
ja
cmp
push
mov
lods
xor
rcr
div
jp
push
add
addr16
in
out
xchg
in
jo
div
push
fld
or
aas
sub
mov
xor
mov
mov
int3
xor
icebp
rcl
or
xor
(bad)
lock
sub
retf
js
mov
inc
adc
call
es
stos
or
ret
mov
loope
inc
shl
inc
or
push
ror
mov
fs
inc
add
xchg
cmps
push
arpl
xor
icebp
sub
or
ins
out
push
xchg
adc
movs
outs
sub
(bad)
out
call
mov
mov
and
pushf
sbb
ret
and
pushf
clc
ja
int
retf
out
lds
int
in
jbe
jmp
xchg
fild
push
xor
sbb
cmps
adc
fwait
push
jmp
pop
or
adc
inc
sub
jb
aad
test
xor
cmc
push
jmp
lods
jecxz
jnp
jl
inc
and
sub
push
fldcw
ja
movs
jno
add
repz
(bad)
add
out
lock
sub
jge
mov
fdivr
cmp
pop
and
cmps
pop
inc
cmp
push
aam
jne
xchg
xor
mov
daa
fs
xchg
shl
mov
in
inc
xchg
sub
rcl
nop
je
in
mov
pop
or
pop
(bad)
jge
mov
call
ins
imul
or
jge
jmp
xchg
sub
in
leave
popf
jno
movs
jmp
add
int
hlt
mov
aad
int
pop
push
sub
xchg
in
or
xchg
cmp
or
add
data16
adc
js
or
xchg
outs
lds
inc
or
out
ds
or
cmp
fisub
retf
outs
and
mov
in
and
icebp
adc
inc
mov
mov
dec
sbb
sbb
jecxz
mov
loopne
stos
jnp
es
xchg
ins
mov
inc
imul
in
inc
cmps
popa
loop
adc
pop
add
in
daa
push
xlat
dec
xor
lahf
cmove
sbb
and
sti
pushf
cmps
fisttp
jne
cmp
(bad)
test
movs
sar
inc
and
loope
sbb
and
scas
mov
ja
mov
sub
mov
fwait
in
movs
cmp
adc
xor
push
sub
sbb
into
fdivr
jbe
pusha
addr16
cmp
vxorps
dec
or
or
cdq
retf
mov
neg
xchg
xchg
cmp
test
aad
iret
gs
dec
dec
shr
xchg
ins
adc
fldcw
push
enter
push
pop
repnz
mov
xlat
inc
jne
or
sbb
add
and
(bad)
(bad)
frstor
mov
arpl
sbb
ficomp
inc
test
xchg
add
lods
sbb
push
push
and
push
or
movs
fimul
hlt
and
movs
inc
adc
dec
fstp
jo
mov
push
leave
(bad)
fist
cwde
js
test
daa
push
(bad)
jne
pop
call
add
sub
das
mov
(bad)
mov
adc
fimul
xor
das
mov
sbb
mov
pop
(bad)
repz
aad
(bad)
out
scas
mov
xor
lock
test
mov
scas
sub
in
shr
adc
cs
xchg
cmp
mov
pushf
out
pop
fstp
jns
cmp
mov
test
xor
sbb
popa
lods
mov
int3
in
adc
movs
cmps
lds
mov
sahf
pop
outs
inc
add
ss
out
and
clc
cmps
ss
jge
je
in
xor
xor
fs
jmp
data16
pop
out
lods
stc
mov
sub
sbb
xchg
pop
jb
push
mov
aas
(bad)
out
lods
push
mov
stos
jl
mov
out
(bad)
xchg
(bad)
mov
(bad)
xchg
popa
push
icebp
stos
iret
xor
xor
push
ins
cmp
std
sub
shl
sahf
cmp
or
mov
xchg
retf
pop
jo
xchg
and
pop
das
and
loope
lahf
sub
or
pop
das
and
jge
test
shr
daa
(bad)
nop
int
or
jecxz
or
loope
pop
dec
fsubr
or
sub
aas
sub
adc
sub
mov
out
popf
sub
inc
popf
hlt
scas
hlt
and
cdq
adc
pop
inc
mov
inc
mov
fs
adc
push
sbb
repnz
xor
addr16
stc
lahf
jbe
dec
repnz
cld
or
xor
sbb
adc
add
fiadd
daa
fisubr
fisttp
cli
mov
mov
test
inc
(bad)
cli
shl
fs
pop
jo
lock
mov
out
cmp
pop
sti
dec
sbb
retf
jb
out
xchg
fidivr
cmps
inc
inc
push
icebp
int3
and
sub
mov
sub
lahf
cdq
ds
push
add
in
jmp
es
fstp
push
push
mov
pop
xchg
cld
xchg
inc
int3
ror
pop
mov
fldenv
retf
pop
inc
sbb
sbb
loope
push
unpcklps
outs
stc
xchg
mov
fisubr
sahf
cwde
ss
mul
jbe
push
mov
test
or
and
ins
push
and
stc
repnz
sbb
mov
cmp
punpckhwd
repz
adc
out
scas
retf
mov
dec
or
(bad)
pop
mov
mov
xor
shl
xchg
sbb
and
mov
adc
pop
xlat
pop
ror
mov
out
jo
call
push
repnz
scas
mov
sub
mov
fisub
xor
arpl
clc
repnz
xchg
inc
or
adc
add
inc
cmp
and
stc
mov
xchg
aad
push
movs
mov
mov
push
mov
fstp
jne
scas
adc
jb
fdiv
sub
(bad)
out
test
outs
ins
add
lock
clc
pusha
call
(bad)
jmp
arpl
into
adc
push
imul
es
mov
mov
cmp
outs
jmp
mov
dec
jmp
mov
and
js
push
mov
repz
lahf
repnz
lock
pop
or
fimul
(bad)
mov
js
ins
pop
imul
sbb
sbb
fstp
mov
pop
mov
dec
leave
and
iret
cmp
dec
mov
movs
pop
push
mov
inc
xchg
dec
mov
mov
or
xlat
mov
jae
push
int3
mov
sar
(bad)
out
sbb
adc
shr
push
push
xchg
jb
push
mov
lods
mov
mov
pusha
(bad)
aas
jne
movs
fdiv
sub
pop
js
xchg
call
je
iret
clc
mov
rcr
cmp
cmp
or
pushf
mov
les
sbb
cmp
loop
lahf
jg
ds
int
(bad)
jbe
cwde
jae
dec
cli
ss
int
inc
pop
mov
or
hlt
inc
or
mov
push
cs
xor
in
ins
cmps
sbb
loopne
jno
mov
push
mov
movs
lahf
mov
hlt
into
in
sbb
jmp
xchg
(bad)
mov
(bad)
push
sub
repz
scas
shl
in
push
sub
bound
lahf
call
inc
test
add
in
jmp
icebp
in
aaa
scas
mov
cmps
in
adc
(bad)
sar
into
sbb
jmp
nop
jle
inc
or
clc
mov
xchg
in
mov
imul
fcmovu
not
mov
aam
cli
(bad)
ja
xchg
lods
sbb
xor
and
xchg
add
pop
imul
movs
mov
inc
mov
aam
pop
retf
cmp
mov
daa
adc
cmp
(bad)
push
xor
xchg
cwde
push
ffreep
daa
push
stos
dec
mov
pop
push
xchg
lahf
mov
repz
sub
sbb
xchg
add
and
cdq
adc
inc
arpl
in
jbe
jge
cwde
mov
sbb
and
jle
pop
pop
rcl
jl
pop
leave
pusha
add
daa
cmp
fyl2xp1
cmp
sub
jmp
outs
jns
push
xchg
dec
inc
lahf
add
jo
mov
retf
and
jne
jg
cwde
cmps
add
and
dec
cmps
bound
gs
lock
stos
lods
loope
pop
lock
sbb
les
jmp
jecxz
cli
inc
(bad)
push
and
add
mov
pop
mov
push
pop
push
mov
cmp
ds
push
pop
cmp
pop
fidivr
dec
cmp
mov
sar
daa
inc
sbb
movs
pop
icebp
xor
movaps
jecxz
mov
std
lods
movs
sar
js
je
stos
pop
sbb
xchg
mov
adc
idiv
mov
jecxz
ins
jecxz
movs
fldenv
jmp
scas
popa
xchg
jl
outs
ja
push
(bad)
push
mov
push
fistp
out
cmp
leave
aaa
push
imul
jae
sub
loopne
movs
fimul
shl
fnstcw
ficomp
ja
loope
aas
(bad)
dec
dec
push
sub
je
loope
and
and
loope
push
(bad)
into
popf
out
int3
sbb
or
in
adc
call
cmp
inc
pop
adc
jnp
xchg
lock
jp
mov
jg
add
(bad)
or
sub
or
mov
mov
sub
out
aam
cmp
fist
push
pop
jbe
mov
les
pop
mov
adc
sar
dec
and
in
rcr
cmps
and
fnsave
fwait
js
mov
mov
pusha
pushf
sbb
stc
repz
add
adc
fist
retf
mov
call
xchg
jl
push
movs
push
xchg
movs
and
add
pop
jp
dec
fist
adc
fnstcw
mov
xchg
std
clc
(bad)
fwait
in
repz
fcmovb
in
jmp
push
aad
je
sbb
add
cmp
xor
clc
jmp
jne
sub
(bad)
mov
test
lahf
cmp
pusha
sbb
retf
loopne
jecxz
ss
mov
movs
jmp
cdq
ret
sbb
je
imul
add
(bad)
cmp
xor
repz
jbe
push
mov
jmp
js
fwait
adc
and
aas
jns
addr16
xor
fld
sbb
unpcklps
jle
push
pop
cmc
mov
xlat
pop
xchg
xchg
or
out
sbb
and
mov
mov
mov
cmps
cwde
sub
adc
leave
(bad)
fistp
aad
and
adc
sar
push
push
cli
inc
add
adc
test
or
add
fs
dec
inc
xchg
imul
imul
test
std
leave
inc
xchg
sbb
aaa
sar
jmp
and
push
in
dec
pop
xor
sbb
jo
xor
and
mov
dec
out
xchg
add
xor
jno
add
mov
push
fcomi
aaa
idiv
mov
cmp
mov
shr
daa
and
push
std
push
sahf
jns
push
mov
iret
mov
mov
cwde
pop
mov
lods
and
ret
mov
ds
repz
sahf
ficomp
jne
or
cmp
je
jl
push
mov
xor
jmp
aaa
jp
or
xor
outs
push
xor
sub
imul
jnp
jae
add
gs
inc
push
cmp
aaa
mov
lahf
daa
arpl
xlat
xchg
jnp
(bad)
lods
jp
cmps
mov
adc
pop
xchg
xchg
scas
in
out
add
call
pop
xchg
iret
outs
sbb
jno
inc
cwde
push
lock
aad
sub
inc
inc
mov
or
jb
jmp
xchg
lods
lds
sbb
sub
jecxz
cwde
xchg
sub
in
pop
mov
leave
mov
leave
pop
fs
pushf
fsub
ins
sub
xchg
jle
pop
call
out
and
addps
idiv
push
mov
movs
mov
(bad)
sub
popa
adc
xor
retf
inc
sti
jmp
or
cs
dec
or
daa
cmp
sbb
outs
push
imul
popa
jae
adc
scas
fs
movs
cmp
and
mov
sub
mov
pop
xchg
sub
dec
and
jno
test
pop
fwait
mov
add
pop
movs
and
je
xor
in
xor
jmp
test
retf
jmp
(bad)
mov
mov
pop
xlat
jle
outs
js
jg
pop
int3
mov
scas
mov
inc
call
mov
or
std
int
xor
mov
inc
cmp
leave
inc
retf
iret
push
mov
cwde
loop
dec
mov
in
nop
mov
repz
mov
add
dec
mov
jg
shl
loop
imul
leave
test
inc
int3
addr16
mov
jmp
test
in
jg
dec
clc
adc
fcom
icebp
jg
push
pop
jo
cdq
inc
sbb
loopne
mov
and
(bad)
or
push
push
ins
pop
or
js
adc
or
out
(bad)
and
(bad)
jmp
mov
popa
out
push
xchg
int
sti
or
lods
into
xor
push
leave
retf
mov
cmp
jne
or
(bad)
cld
lock
push
mov
outs
out
loopne
fwait
mov
sub
add
mov
cli
imul
dec
dec
jl
dec
mov
cmps
pop
call
or
ds
jle
into
dec
daa
fisubr
shl
popf
ja
nop
jns
jge
arpl
push
mov
cli
cmc
(bad)
imul
add
mov
push
xor
test
mov
sub
or
fcom
sbb
loopne
fnstenv
les
and
mov
inc
popa
shl
ret
loop
imul
add
daa
add
sub
xchg
lahf
not
test
popf
fistp
mov
lods
sub
xchg
xchg
push
scas
in
cwde
mov
jle
aas
sub
movs
add
loopne
add
or
jno
cmp
aad
dec
ret
adc
add
ins
mov
sub
outs
out
inc
add
add
jno
imul
inc
aam
scas
dec
pusha
sar
cmps
stos
or
sub
jb
(bad)
xchg
es
pop
pop
push
repz
jnp
mov
lock
lock
and
je
outs
jl
pop
pop
jns
test
push
jb
sar
(bad)
fistp
jb
add
imul
pusha
stc
retf
sub
fsubr
popf
cmps
pop
inc
sub
cmps
ficomp
add
lea
mov
shr
xchg
std
push
pop
clc
mov
bound
shl
inc
sahf
or
xor
mov
dec
repz
ror
movs
in
data16
fwait
popa
nop
jmp
out
aad
clc
and
rcr
mov
stc
in
lds
aam
adc
int3
ins
lea
sub
add
lahf
sub
outs
add
and
mov
iret
data16
mov
retf
and
mov
jp
lods
repnz
sti
rol
cmp
xor
cwde
sub
cmc
xchg
test
jb
add
jne
pop
scas
ret
push
mov
stos
mov
cmp
mov
mov
jbe
cwde
in
mov
mov
xor
pop
inc
pop
pop
xchg
sahf
pop
inc
retf
(bad)
shl
mov
mov
or
cwde
pushf
aas
adc
xor
fcmovnu
push
sub
mov
out
call
xchg
aaa
push
stc
(bad)
adc
sub
mov
or
fnsave
push
mov
cmp
std
shr
mov
jb
stos
fcmovnbe
and
xchg
dec
ja
mov
cdq
xor
imul
imul
mov
mov
sub
jae
inc
jo
sub
(bad)
adc
data16
lods
fld
sar
scas
(bad)
mov
push
pop
popa
cmp
and
mov
mov
pop
data16
out
(bad)
sar
and
lahf
imul
loope
push
cmp
or
inc
push
popf
cli
pop
dec
add
dec
push
(bad)
adc
mov
aas
in
lock
or
out
cli
nop
lds
jmp
mov
je
push
jb
outs
imul
sbb
fimul
add
pusha
or
mov
dec
ja
jno
call
mov
arpl
sahf
xchg
ficomp
and
nop
push
test
xor
add
outs
rcr
js
add
jl
dec
into
arpl
mov
jmp
xchg
inc
gs
mov
std
fisubr
or
ins
and
gs
jne
adc
mov
sbb
jmp
stc
test
scas
mov
cmp
mov
jmp
mov
mov
int3
add
sub
fs
imul
fmul
loopne
stc
aad
xchg
xor
jecxz
cmps
outs
js
leave
mov
call
xor
call
fdivp
jecxz
mov
in
xor
inc
cs
fidiv
or
sub
repz
out
(bad)
jnp
pop
sbb
lock
pop
inc
jo
cld
pop
outs
and
out
(bad)
test
das
pop
add
aas
test
out
mov
movs
in
(bad)
fstp
loopne
xchg
sbb
mov
ss
add
or
retf
mov
popf
popa
test
xchg
push
pop
loope
movs
lods
add
popf
aas
imul
xchg
mov
clc
cmp
sub
jg
ds
out
call
mov
fnstenv
add
mov
sub
fidivr
int3
xor
mov
sub
mov
adc
jmp
lock
lahf
mov
cs
ja
sub
xchg
jno
mov
add
aad
out
inc
popf
mov
add
loop
je
(bad)
lods
scas
rcl
xlat
push
mov
cmc
mov
clc
and
sub
out
mov
imul
stos
adc
cmp
jno
sar
jno
sub
leave
inc
sub
sar
pop
aas
push
xor
jmp
not
push
sub
imul
adc
adc
dec
add
retf
dec
or
sbb
nop
loope
mov
push
rcr
arpl
jl
test
lock
or
sbb
fld
xor
jne
push
mov
inc
xlat
push
push
push
jb
jp
xor
dec
sub
stc
in
lods
shl
fmul
fcom
cmp
dec
fs
push
daa
sub
sub
mov
mov
xchg
bound
mov
xor
aad
cmps
in
lea
sbb
and
adc
nop
(bad)
xlat
xor
popa
movs
arpl
push
jl
cmc
scas
dec
xchg
sahf
add
jbe
dec
fistp
inc
sub
inc
loopne
sbb
les
adc
imul
pop
int
fs
xchg
push
je
cs
fwait
ja
shr
arpl
xchg
js
popa
push
movs
cld
inc
push
(bad)
mov
popa
cmp
cmps
pushf
and
pop
scas
sahf
out
ret
in
popa
fidiv
repnz
adc
xchg
test
jb
sub
cs
ret
mov
movs
push
clc
aam
setbe
sub
mov
pop
jp
inc
ins
cld
ror
ficomp
nop
jl
out
add
dec
add
mov
(bad)
mov
outs
movs
lea
jecxz
fistp
lahf
mov
push
jb
push
and
or
ds
repz
inc
or
sub
ror
push
adc
add
repz
mov
sbb
or
hlt
daa
sbb
lods
mov
iret
xor
sbb
xchg
adc
xchg
les
dec
sbb
fmul
(bad)
repz
loopne
push
dec
mov
dec
xchg
jl
jmp
and
xchg
inc
mov
sub
xrelease
xchg
pop
push
mov
iret
scas
dec
mov
lea
inc
leave
out
loope
in
(bad)
sbb
jo
pusha
mov
mov
xchg
sub
mov
mov
mov
push
xchg
xor
aas
sub
cmp
xlat
jbe
push
(bad)
shl
pop
(bad)
movs
lds
js
out
pop
mov
icebp
test
pop
mov
rcr
mov
ret
adc
fcom
aas
int
stos
sti
cmps
not
rcr
imul
lods
jl
pop
jbe
or
pop
iret
out
add
cmp
stos
shl
inc
call
adc
xchg
repz
jg
int
movs
pop
pusha
xor
jae
mov
xchg
push
pop
inc
loopne
stos
pop
push
pushf
mov
and
nop
(bad)
pop
jecxz
retf
mov
std
(bad)
int3
popf
mov
leave
sbb
fistp
call
push
loop
mov
pop
xchg
movs
outs
or
outs
mov
pushf
mov
add
mov
and
push
jae
fidivr
mov
popf
in
dec
cmps
ins
clc
inc
inc
int3
jo
mov
add
fild
jae
mov
into
jp
repnz
jl
fisub
outs
mov
sub
cmp
jmp
pop
adc
inc
repz
xchg
jg
ret
arpl
aaa
into
(bad)
popa
inc
jp
push
jne
mov
cmp
sahf
fwait
in
ins
(bad)
dec
icebp
std
pusha
es
xchg
xchg
(bad)
mov
js
int3
fucomp
js
vpshlq
ja
pushf
shl
fs
or
and
sbb
cwde
aaa
out
fmulp
mov
pop
gs
not
es
pop
jne
pop
int3
pop
fucomip
call
shl
arpl
js
cmps
not
sti
push
pop
adc
jmp
fstp
fwait
ret
push
ficomp
xchg
and
and
cs
lods
adc
adc
mov
sub
push
and
push
sbb
cli
inc
fwait
mov
sub
add
retf
lods
push
pop
jl
mov
ins
std
dec
sub
sub
pop
mov
inc
xor
lahf
dec
push
inc
ds
dec
nop
push
add
sbb
in
mov
nop
pop
sbb
cmp
mov
test
add
dec
int3
test
fwait
jmp
or
xchg
push
pushf
pop
mov
lods
ret
iret
push
inc
lock
sahf
gs
frstpm(287
sbb
xchg
cli
sbb
pusha
jns
in
jmp
jle
fmul
dec
imul
cmps
xchg
out
mov
stos
jae
pusha
pop
scas
lea
sti
test
or
cs
or
xor
psrlq
xlat
call
jns
mov
sub
mov
stos
(bad)
sahf
mov
adc
(bad)
int
fadd
stos
mov
xor
mov
fs
jae
jmp
and
fdiv
inc
in
push
test
lds
add
ins
call
xchg
call
(bad)
pop
mov
repnz
cs
mov
popa
push
hlt
mov
or
and
sbb
xchg
inc
enter
sub
sub
xor
scas
stos
cmp
sub
xchg
(bad)
aaa
sub
pop
sbb
push
aad
pop
stc
jne
sub
dec
cmp
sbb
(bad)
sahf
aaa
push
mov
adc
pop
mov
ins
(bad)
mov
imul
call
add
push
push
aaa
stos
xor
loop
jo
pop
ins
into
addr16
push
pop
jae
cli
xchg
inc
popf
call
fs
xor
retf
js
lds
call
dec
dec
in
ds
xchg
arpl
xlat
or
pop
add
xor
push
pop
mov
inc
pop
mov
jns
pop
mov
xchg
mov
(bad)
out
js
out
xchg
in
lds
add
call
adc
adc
mov
ins
cdq
or
addr16
jae
add
sahf
je
lods
test
clc
inc
ret
jae
jecxz
sbb
adc
inc
test
hlt
pop
fsubr
cmc
xor
dec
ret
jmp
cmps
sub
add
mov
jae
cwde
jecxz
lahf
or
in
pop
jl
mov
mov
loope
pop
xor
inc
fisub
pop
sub
test
movs
adc
mov
scas
aam
mul
push
xchg
dec
gs
jne
mov
in
pushf
push
iret
sahf
(bad)
fbstp
cmps
and
ins
fbld
sub
jmp
aas
fsubr
xor
fsub
sbb
fnsave
push
mov
(bad)
and
sar
and
push
xchg
imul
sbb
inc
fldcw
push
mov
ret
add
mov
sub
adc
(bad)
sub
mov
imul
aas
or
stc
or
mov
cmps
sbb
sbb
sub
sub
out
jp
cwde
jo
int3
dec
or
jmp
and
es
mov
adc
mov
sbb
leave
and
adc
dec
and
pop
pop
es
mov
and
push
fnsave
pop
repz
test
sub
jge
fwait
mov
cmp
push
ror
cld
inc
add
mov
stos
stc
jge
add
fdivr
or
daa
std
ins
dec
clc
push
cld
sahf
ds
pop
call
sub
mov
cli
push
jecxz
inc
and
(bad)
gs
adc
push
adc
and
js
mov
add
or
fwait
popa
or
sbb
add
adc
cli
cmp
pop
das
jmp
test
push
out
mov
rol
xor
cld
dec
bound
add
push
dec
test
pop
mov
jg
sbb
adc
jge
(bad)
pop
mov
in
inc
jbe
scas
inc
pop
and
mov
in
mov
(bad)
sbb
retf
push
and
frstor
inc
mov
movs
sahf
adc
rcl
js
jecxz
xchg
pop
jne
mov
out
push
push
adc
pop
int3
hlt
cmps
(bad)
cmp
mov
imul
adc
jb
mov
mov
cs
in
mov
xor
push
or
add
movs
mov
fsubrp
shl
(bad)
mov
dec
mov
sbb
retf
adc
sub
int
xor
jae
jae
in
in
fisubr
scas
jns
out
(bad)
test
and
push
sub
movs
retf
cs
mov
inc
mov
xor
pop
mov
in
and
mov
call
cld
add
test
xor
mov
cmp
push
cs
mov
pop
inc
sbb
sub
mov
sti
push
mov
jo
cmp
sbb
or
or
test
(bad)
mov
mov
sub
mov
cmp
pop
mov
xchg
mov
mov
stos
fisubr
add
jp
or
test
mov
data16
xchg
ret
lods
push
push
or
adc
sub
aas
sbb
cmp
leave
(bad)
scas
inc
cmp
mov
clc
icebp
push
mov
cwde
sbb
dec
sub
ds
xchg
add
leave
lahf
cmc
sub
out
pushf
sub
retf
and
xlat
scas
std
mov
cs
xchg
jns
in
adc
clc
xchg
sbb
or
loop
out
out
in
mov
pop
test
sub
push
std
push
cli
xlat
cmp
arpl
(bad)
rcr
in
test
fcom
sbb
jns
imul
xchg
xor
and
cli
js
jecxz
aaa
jo
jb
loope
or
pop
enter
std
or
clc
fsub
stos
inc
mov
cmp
pushf
add
sbb
fistp
bound
sub
jnp
mov
imul
mov
enter
and
xchg
lock
retf
add
add
out
(bad)
loop
jo
jbe
xchg
jmp
mov
test
mov
hlt
sar
das
repz
or
shr
dec
mov
pop
push
xchg
or
cmps
hlt
sbb
clc
pop
push
cld
jo
pop
out
repnz
jbe
push
adc
pop
xor
popf
mov
sbb
cmp
call
pop
push
jg
add
cmp
mov
sbb
jmp
push
ins
stc
xchg
push
mov
or
push
out
int3
aad
nop
and
pushf
daa
sbb
mov
(bad)
std
pop
dec
mov
and
or
sub
jp
pop
stos
push
popa
ja
int3
add
lds
hlt
int3
push
cmps
in
or
sub
adc
pop
shl
jmp
movs
xchg
fcmovu
cdq
cmp
jp
add
or
jp
or
in
jns
popa
push
push
(bad)
and
sar
jmp
sar
out
sbb
les
(bad)
cmps
in
and
jecxz
cwde
mov
je
lea
test
mov
push
repnz
dec
clc
push
sahf
cmp
jecxz
leave
and
xchg
es
mov
test
cmc
and
lock
sbb
dec
add
and
div
jmp
movs
jbe
aaa
mov
or
pushf
fwait
loope
xchg
mov
repz
adc
movs
xchg
in
push
loopne
xchg
jecxz
mov
jmp
ins
ret
xchg
adc
sub
outs
pop
(bad)
mov
dec
test
mov
jp
xor
push
fdiv
fdiv
mov
cmp
(bad)
add
pushf
cmp
xchg
or
cmp
jno
or
xchg
fisubr
mov
xchg
pop
sbb
cmps
xor
retf
sub
cmps
push
mov
xchg
loopne
sar
sbb
(bad)
push
xchg
jae
xchg
popf
xchg
imul
adc
imul
cmp
popf
jmp
pop
or
mov
xor
push
push
ror
push
adc
call
ret
out
add
add
mov
jmp
pop
addr16
adc
sub
cwde
fsubr
add
adc
nop
jno
pop
mov
xchg
jne
and
iret
aam
and
cmp
test
pop
push
cli
xchg
push
into
push
das
cmp
inc
aad
loope
add
loop
add
test
and
sub
pop
jle
sub
loopne
cmps
shl
iret
push
cld
ss
xlat
or
std
jae
addr16
or
jbe
sub
inc
imul
mov
inc
aad
push
data16
xor
stos
push
ja
sbb
ins
mov
xchg
xchg
frstor
fsub
loope
scas
cli
sub
add
aam
test
push
adc
cmovo
das
xor
mov
sub
test
or
sub
sahf
inc
rcr
jne
dec
pop
dec
push
mov
push
sub
repz
lock
xor
mov
mov
gs
pop
test
shr
cmp
dec
loop
inc
push
add
mov
cmps
jnp
in
movs
int
sbb
mov
ins
iret
cmps
ins
dec
mov
into
retf
arpl
popa
outs
(bad)
dec
and
retf
add
pop
add
dec
sbb
and
mov
mov
aaa
ss
out
clc
retf
repnz
lahf
xor
xor
mov
(bad)
cmps
push
cs
lods
rcl
jne
xchg
rol
stos
jl
out
or
mov
xlat
stc
xchg
(bad)
nop
in
inc
imul
cmp
xor
jbe
push
dec
mov
int3
out
add
inc
pop
popf
push
loope
cwde
les
es
or
in
xor
(bad)
cdq
sti
push
pop
add
les
aad
sbb
(bad)
dec
mov
lds
sbb
mov
pop
mov
pushf
adc
inc
push
sbb
xor
mov
test
push
scas
aad
int3
xor
inc
pop
int
sub
test
pop
sar
movs
pusha
push
(bad)
ret
push
call
or
and
jmp
mov
movs
icebp
dec
movs
xor
dec
jne
sahf
pop
jno
fidivr
rcl
outs
aas
test
mov
test
add
icebp
xchg
cmc
neg
les
iret
cmpxchg
xlat
or
jns
mov
call
xchg
mov
retf
out
jnp
xor
daa
jbe
cwde
dec
xchg
into
sbb
aad
hlt
push
int3
lock
pusha
popa
push
repz
cmps
imul
inc
aad
xor
loop
ss
enter
out
(bad)
aaa
cmps
and
pop
adc
sub
mov
aad
xchg
xor
xchg
sub
pop
mov
cmp
lds
jb
imul
cmp
inc
push
scas
ins
es
scas
lods
add
fist
rcl
pop
ja
jecxz
test
add
mov
pop
les
sbb
ja
sbb
sub
add
pop
mov
xchg
mov
or
loop
jns
test
mov
xor
sub
xor
jb
jb
popf
mov
aad
in
dec
in
addr16
mov
in
call
push
js
repz
out
mov
adc
retf
rol
dec
ret
push
and
pop
sub
nop
jecxz
cmp
dec
mov
xchg
jg
or
jge
and
cmp
cmc
je
fcom
pop
lock
add
inc
cmp
mov
fist
jl
sbb
pop
and
add
push
mov
sti
mov
(bad)
mov
loopne
xor
pop
and
retf
dec
push
lods
mov
out
adc
not
popf
pop
inc
adc
dec
retf
(bad)
sbb
vmovlps
lock
dec
add
vmptrst
push
push
shl
xor
sbb
sbb
int
in
and
jge
pop
(bad)
xchg
cwde
push
mov
mov
stos
xchg
cmp
clc
inc
xlat
ins
nop
pop
daa
jae
ins
cs
out
and
retf
push
xchg
scas
xchg
and
adc
in
scas
clc
xor
cmp
fs
cmp
inc
push
jns
rcl
dec
mov
pop
inc
into
xor
ins
pop
arpl
jo
pop
sub
adc
xchg
fwait
retf
fstp
sar
sub
and
sub
scas
jecxz
fdivp
mov
out
cmps
pop
lock
icebp
push
cwde
sub
fild
sti
lea
idiv
arpl
xor
sar
push
call
arpl
jne
inc
jl
inc
out
movs
xlat
dec
leave
xchg
out
mov
outs
mov
fbld
outs
mov
mov
and
jo
je
cmp
push
icebp
jne
inc
in
mov
fadd
inc
push
and
call
outs
xlat
push
(bad)
loop
stc
jecxz
push
arpl
popa
and
sub
add
push
dec
mov
(bad)
fild
cmc
sti
(bad)
xlat
and
and
add
rcl
cmp
or
add
inc
pop
shl
(bad)
adc
adc
push
fcmovbe
(bad)
cmc
mov
or
and
fcomp
loope
xchg
mov
fstp
fdivr
mov
int3
int3
adc
pop
sbb
aad
push
scas
xor
adc
push
(bad)
push
popa
aaa
inc
add
not
cmp
shr
scas
hlt
pop
les
mov
sub
daa
test
out
xor
fdiv
push
jle
pop
repz
pop
jl
lahf
ret
dec
xchg
pop
adc
mov
loopne
ins
adc
fdivr
fwait
and
and
dec
aas
inc
sbb
adc
mov
idiv
xchg
pop
add
call
or
enter
mov
gs
inc
int
mov
mov
cmps
xadd
movs
push
lods
mov
inc
jae
sti
std
(bad)
stos
jecxz
je
rol
test
and
xor
repz
imul
xchg
mov
push
scas
outs
fiadd
in
popf
clc
xchg
das
ins
cdq
rol
jb
outs
mov
push
fdiv
sbb
(bad)
push
push
push
push
dec
fnstsw
hlt
push
aas
push
adc
inc
es
cli
pop
mov
jl
pop
iret
cmc
div
jmp
mov
ins
ja
jns
(bad)
ins
jp
inc
fstp
in
jns
ucomiss
mov
jl
sbb
xchg
cmp
mov
add
add
addr16
sub
cmp
and
xor
lods
in
ss
iret
cs
xchg
pop
js
test
sub
fdivr
sbb
and
or
(bad)
sbb
dec
adc
test
rol
icebp
js
(bad)
shr
mov
arpl
jns
inc
inc
push
jmp
call
call
sbb
(bad)
rcl
cmps
bsr
cwde
jl
mov
es
mov
or
popf
out
in
adc
dec
xchg
dec
sahf
rol
add
fistp
aam
or
test
xchg
push
inc
xchg
cli
adc
out
dec
dec
int3
mov
data16
mov
retf
lahf
or
pusha
mov
mov
xchg
int3
or
cli
aas
fcomp
mov
push
arpl
call
jno
cs
pop
sub
ins
cmc
(bad)
repnz
ret
cmp
ror
sbb
jecxz
dec
pop
mov
(bad)
retf
push
push
out
lea
movs
and
rcl
xor
xchg
or
cmp
xchg
loopne
sbb
add
adc
lods
imul
adc
inc
sub
xrelease
test
sub
(bad)
in
(bad)
mov
cdq
stc
xor
dec
add
scas
loop
jb
mov
imul
shl
std
mov
repz
cmp
inc
ficom
sub
dec
into
lock
fsub
push
imul
xchg
push
xchg
gs
mov
test
add
addr16
stos
jmp
fdivr
int
test
fmul
(bad)
push
jecxz
cmps
adc
mov
jbe
inc
push
mov
dec
pusha
jae
mov
outs
ins
out
sbb
jmp
(bad)
ror
jl
js
ror
cmp
fsub
mov
scas
stos
adc
imul
push
jb
sbb
dec
mov
xor
push
xchg
and
stos
and
rcr
jne
outs
and
cmps
sub
ja
cmp
push
ins
cmp
popf
mov
icebp
jb
aad
push
jmp
xor
push
xchg
shl
mov
jae
lock
xchg
mov
pop
imul
(bad)
fdivr
repnz
jae
dec
(bad)
stos
sub
mov
in
or
cmp
js
stc
leave
test
outs
ret
ret
pop
sbb
inc
jg
shl
sub
mov
mov
fldcw
(bad)
cmp
mov
fcmovne
mov
sahf
add
push
das
ds
sub
add
fst
sub
mov
dec
mov
clc
rep
jl
ja
dec
adc
add
arpl
data16
xchg
mov
daa
dec
jns
rol
inc
sbb
gs
or
iret
mul
mov
lds
pop
push
jo
jmp
lds
cmc
adc
pushf
adc
inc
or
cmp
sub
or
xor
and
mov
cmp
in
push
dec
and
in
shl
scas
ja
cmp
test
jmp
data16
jmp
enter
jmp
xor
jecxz
std
sahf
xchg
arpl
int3
xchg
pop
stc
xor
pop
cmp
xor
aaa
sbb
fldenv
mov
push
test
fwait
dec
cmp
pop
push
ret
and
jmp
out
add
mov
adc
loope
cwde
mov
sbb
fcomp
dec
xlat
data16
mov
cs
adc
adc
cli
xchg
dec
jp
mov
sub
sar
pop
or
cld
lock
mov
push
xchg
xor
frstor
push
sbb
dec
ret
jecxz
xchg
mov
mov
sub
fchs
or
mov
dec
sub
jp
fimul
xchg
hlt
pop
stc
leave
call
sbb
shr
in
leave
mov
mov
or
js
lea
push
fst
(bad)
xchg
jb
sub
(bad)
cmc
loopne
dec
mov
jae
pop
cmc
xchg
sbb
out
add
ret
bound
and
sbb
data16
mov
or
mov
fcom
dec
(bad)
daa
arpl
aas
sub
and
push
xor
jmp
adc
scas
js
dec
sub
inc
jno
pmaxub
cmp
mov
(bad)
int
pop
js
jo
addr16
sbb
aas
xor
sti
cmp
(bad)
int3
lods
sbb
aaa
sub
mov
adc
jns
stos
rol
inc
xchg
mov
mul
out
mov
xlat
clc
adc
adc
(bad)
outs
sbb
rcl
out
test
repnz
fsubr
mov
dec
rcl
jecxz
cmp
cmps
jae
add
cmp
jle
push
dec
jmp
cwde
stos
lock
jb
bound
push
pop
cmp
repnz
mov
and
in
cmp
xchg
pop
lea
fldcw
mov
lds
lock
mov
jg
out
retf
lock
push
add
movs
clc
js
pop
scas
inc
scas
xchg
add
popa
push
adc
jo
add
xor
pop
ins
loope
xchg
enter
fs
inc
adc
xchg
dec
cdq
dec
sbb
inc
out
outs
outs
stos
fucomp
pop
retf
out
call
mov
retf
sbb
dec
dec
adc
ja
xchg
sar
lods
rcr
pop
movs
mov
fild
pop
push
cmps
pop
mov
pop
iret
xchg
cmp
push
ins
ins
es
xchg
add
push
cmp
retf
and
inc
pop
je
fwait
push
into
mov
fiadd
jmp
and
dec
loope
leave
or
push
test
mov
cmp
push
fist
pop
dec
inc
xor
mov
mov
cmc
or
mov
fwait
push
cmp
in
inc
cmp
mov
and
cdq
arpl
loopne
mov
sti
sub
push
jmp
xor
sub
outs
std
inc
fucom
xor
mov
repnz
data16
es
jg
ins
inc
jmp
push
mov
loopne
xchg
jb
icebp
scas
or
test
sbb
out
pmullw
test
(bad)
mov
push
adc
lds
aas
test
jp
gs
cwde
ss
cdq
inc
add
dec
cmp
adc
fst
mov
mov
xchg
test
lods
sbb
cmp
je
sub
out
sbb
fwait
mov
test
adc
dec
fucom
xchg
dec
pop
dec
jp
pushf
lods
imul
mov
rcr
ja
jae
call
fst
add
push
dec
pusha
sahf
push
push
outs
cmp
inc
mov
xor
jne
out
jae
(bad)
scas
add
cmp
pop
outs
iret
and
shr
jo
out
adc
inc
mov
cmp
outs
push
and
arpl
add
xchg
xor
popa
mov
adc
das
mov
outs
nop
and
lock
xchg
clc
ja
sahf
scas
hlt
dec
jbe
ds
push
fstp
dec
ds
mov
sbb
pop
mov
jno
(bad)
adc
push
sub
add
mov
and
nop
mov
sbb
iret
sub
or
and
and
jns
popa
(bad)
inc
jmp
lds
in
pop
mov
fstp
(bad)
pop
pop
adc
pop
xchg
sar
mov
dec
adc
add
inc
test
movs
js
cmp
sub
pop
mov
(bad)
out
pop
xor
sub
sub
iret
push
pop
fld
push
pusha
imul
arpl
popa
fnstcw
test
xlat
ins
lahf
and
ror
jle
sbb
sub
jg
jne
and
in
xchg
lds
(bad)
das
pop
popa
inc
scas
inc
loopne
shl
stos
das
scas
test
sbb
xor
mov
gs
cmps
addr16
push
in
arpl
dec
call
add
or
jne
enter
adc
cmc
xchg
or
inc
das
rol
and
(bad)
or
(bad)
popf
dec
cmp
addr16
bound
sub
lahf
pop
inc
gs
xor
data16
inc
inc
in
jecxz
icebp
retf
or
and
scas
mov
outs
mov
in
add
leave
jge
sbb
cli
clc
lods
(bad)
sub
in
lods
loop
add
div
sbb
sbb
call
sbb
dec
cmc
cs
xor
pop
out
sbb
jns
stos
mov
pop
jo
jmp
xor
sahf
aaa
into
add
or
dec
clc
inc
jae
stc
stos
mov
dec
jp
cli
pop
sub
mov
mov
popf
dec
and
inc
pop
in
jne
and
cmp
add
push
and
dec
fist
mov
cli
add
test
mov
cdq
mov
ins
adc
jg
or
rcr
push
xor
mov
scas
jb
jmp
pushf
das
and
dec
iret
jnp
sahf
mov
out
push
xor
ror
lock
stos
pop
bound
dec
pusha
sbb
mov
in
(bad)
scas
ins
mov
fwait
je
pop
add
mov
or
push
cmc
pop
out
movs
sub
adc
and
cld
jae
push
je
mov
es
(bad)
pop
mov
fwait
mov
pop
retf
sub
movs
ror
stc
cmp
stos
pushf
lock
sub
xlat
(bad)
dec
add
sbb
pop
push
test
mov
xchg
pop
xlat
or
pop
mov
cdq
push
sbb
xchg
loopne
inc
test
jp
repz
pop
mov
add
adc
xchg
fcomp
inc
mov
(bad)
(bad)
xor
(bad)
jg
(bad)
dec
fs
into
nop
push
shl
and
cmp
in
cld
push
stos
popa
mov
js
cwde
jne
sub
sbb
bound
in
leave
icebp
popf
or
mov
push
into
sub
(bad)
xor
rcr
test
daa
out
cs
es
xchg
sbb
stos
loopne
xor
test
jns
xor
scas
int3
mov
mov
in
mov
repz
xchg
pop
sub
(bad)
pushf
or
xor
or
push
mov
retf
sti
xor
and
xchg
int3
addr16
in
pop
or
je
out
leave
outs
inc
push
retf
out
js
and
xchg
pusha
in
adc
mov
pop
dec
mov
or
aas
mov
and
sbb
in
jl
aaa
pop
add
sub
mov
daa
rcr
daa
pop
stos
xor
out
imul
pop
jnp
add
ss
inc
inc
ins
popf
out
sub
pushf
push
and
jg
and
fisubr
mov
mov
push
add
push
cmp
sub
cmp
test
sub
bound
adc
je
and
mov
mov
jmp
pop
aaa
and
shr
das
mov
adc
stc
xchg
mov
mov
jns
popa
xchg
mov
pop
xor
push
rcr
stos
in
sub
repz
int
ins
jmp
(bad)
(bad)
(bad)
fld
jbe
inc
mov
add
(bad)
dec
inc
repnz
(bad)
cld
dec
mov
add
pop
mov
adc
clc
add
popa
inc
sub
jp
test
fs
mov
inc
inc
(bad)
pop
fild
xchg
jmp
paddsw
fucompp
cmps
dec
xor
dec
js
cmc
cmps
push
and
aam
test
shr
push
ror
in
add
loope
jne
cmp
clc
mov
cld
mov
fstp
out
adc
mov
or
jmp
sub
fisttp
push
push
push
adc
cmp
sar
or
test
mov
mov
push
ror
addr16
lods
sub
cmp
add
inc
int
outs
std
cwde
ins
stc
inc
ins
cmp
add
or
lock
loope
repz
pop
dec
cmp
sub
aam
out
pop
inc
mov
daa
mov
rcl
adc
inc
add
push
ret
stos
inc
mov
int
nop
pop
ins
push
mov
sub
std
cmps
fistp
int
dec
jecxz
xrelease
call
pop
xlat
adc
aaa
cld
rcl
mov
adc
dec
jns
xor
iret
cdq
mov
mov
pop
mov
or
push
hlt
cld
mov
fistp
push
cmp
and
or
lods
add
jg
xchg
(bad)
sub
imul
sahf
mov
mov
and
aas
adc
bound
fbld
pop
mov
jne
ficomp
fcom
pop
push
jns
mov
mov
loope
jne
(bad)
jmp
(bad)
pop
xor
dec
adc
xlat
in
pop
jmp
push
sbb
outs
push
fisttp
xchg
call
adc
cmp
or
in
or
retf
adc
pop
inc
add
into
xor
xchg
mov
in
dec
push
das
jne
push
or
mov
or
and
mov
pop
push
lods
push
xchg
mov
sbb
icebp
(bad)
cdq
arpl
call
xor
pop
das
xchg
loopne
out
inc
outs
or
or
shl
mov
xor
pop
adc
and
push
or
mov
jno
xchg
or
fstp
pop
das
add
xor
push
out
leave
out
nop
(bad)
fstp
jmp
rcr
mov
ss
dec
mov
fst
(bad)
sbb
dec
jns
les
pop
ficom
adc
ss
cmps
mov
jecxz
pop
pop
sar
jmp
push
loopne
cdq
sbb
vsqrtps
mov
jmp
mov
or
shl
pop
stc
sub
push
adc
lods
cmp
bound
mov
call
(bad)
mov
inc
jns
retf
mov
jp
lahf
pop
jne
xchg
ret
js
mov
ins
iret
stos
frstor
and
loope
or
repnz
arpl
pop
mov
mov
jbe
pop
aaa
and
xor
inc
fdivr
push
cmp
dec
out
xchg
push
js
jno
mov
push
popa
in
loopne
jne
(bad)
mov
lods
mov
push
inc
neg
inc
cmc
mov
dec
add
adc
retf
enter
adc
or
sub
xchg
push
xor
sbb
pop
call
xchg
test
das
int
call
test
dec
pop
std
mov
aam
or
iret
jnp
add
inc
jno
dec
mov
mov
push
sub
(bad)
jae
xor
dec
leave
pop
cmp
xor
xchg
call
fwait
or
(bad)
xlat
mov
daa
push
xchg
adc
idiv
loope
sub
mov
jmp
pushf
jae
sub
fstp
fist
adc
rcr
cmp
adc
mov
rol
jmp
sbb
shr
or
aam
push
shl
outs
int
rol
rcr
xchg
std
inc
inc
jno
or
push
out
xchg
jg
outs
ret
repnz
shr
leave
ret
repz
(bad)
fisub
in
inc
or
ffree
add
bound
mov
fwait
int3
jl
xchg
xchg
test
xchg
xchg
adc
aas
sbb
xchg
pop
sbb
scas
rcl
in
or
clc
pop
push
dec
adc
pop
sub
mov
mov
pop
adc
mov
dec
cdq
and
shl
inc
push
jae
push
ss
add
or
cli
sub
(bad)
in
jbe
jae
repnz
test
xchg
pop
or
js
xchg
ret
lea
adc
ja
dec
aaa
sbb
xor
pop
test
push
sahf
sbb
out
stc
jmp
in
xchg
mov
xchg
popf
retf
sbb
ds
dec
in
sub
adc
jmp
cmp
add
cmps
call
repnz
add
ror
push
fs
in
cld
in
jbe
cmp
aam
xor
add
sti
mov
cli
mov
sub
and
and
ret
leave
cdq
outs
pop
mov
xchg
sbb
ror
aaa
xchg
mov
shl
fadd
loop
dec
cwde
sar
mov
cmp
jp
repnz
inc
push
or
retf
stc
xchg
fisttp
jne
pop
mov
xchg
clc
cmp
mov
cmp
stc
mov
cmp
sub
mov
mov
jg
lahf
and
bound
sbb
pop
inc
dec
mov
add
imul
mov
pop
push
add
mov
mov
mov
inc
push
mov
ds
jge
shr
scas
add
mov
xor
xchg
stc
repz
das
adc
(bad)
adc
cmc
jae
dec
jge
xchg
popf
fnstcw
jg
les
fidivr
scas
pushf
add
pop
lock
xchg
ins
adc
out
test
pop
sahf
aas
push
imul
ret
scas
pop
inc
and
and
xor
sbb
sbb
rcr
sti
pop
jl
or
add
fidivr
loopne
inc
sbb
sti
or
loope
adc
xchg
mov
js
ret
xchg
xor
xor
clc
imul
popa
pop
in
xchg
mov
xchg
inc
push
or
(bad)
xchg
cmp
pop
daa
stos
jns
sbb
or
shl
clc
or
inc
push
inc
or
ja
sar
ins
sbb
dec
push
and
cwde
dec
jns
dec
push
mov
test
jae
cli
fist
fld
fcom
cvtpi2ps
cmp
clc
xor
dec
das
fs
pop
inc
pop
ss
xor
inc
scas
ins
jmp
or
pop
es
cwde
loope
das
lahf
mov
ss
pop
jecxz
push
pop
daa
outs
in
ret
fwait
aad
jae
mov
dec
add
adc
sbb
xchg
xor
retf
and
sub
sbb
jge
add
fsubr
leave
jmp
sbb
shl
cmc
loop
stos
mov
dec
repnz
mov
ja
(bad)
fwait
inc
popa
jmp
push
mov
mov
das
cld
(bad)
(bad)
mov
ror
ror
imul
pop
lods
xchg
adc
inc
pushf
inc
inc
adc
inc
neg
test
jbe
idiv
lds
in
and
xchg
hlt
jno
stos
and
adc
fadd
in
cmps
xor
inc
inc
xchg
xor
xchg
stos
adc
call
test
es
sahf
lods
mov
je
stc
or
mov
add
add
mov
xchg
jmp
clc
and
outs
jg
hlt
xor
mov
lods
mov
sbb
inc
std
in
sbb
dec
adc
mov
cmps
sbb
push
das
loopne
cmp
outs
dec
inc
jmp
test
lds
gs
xchg
cmp
fcomp
sbb
dec
pop
mov
xor
cmps
ss
scas
popa
jl
dec
in
sbb
sbb
lahf
out
das
ret
add
popa
and
sub
stc
addr16
int3
hlt
mov
sbb
in
add
jbe
or
(bad)
dec
mov
xlat
mov
out
xor
lock
mov
pop
inc
(bad)
xchg
shr
jo
adc
retf
jle
ds
fidivr
and
or
sub
ret
imul
call
sti
int
jbe
mov
mov
fild
(bad)
mov
outs
adc
jge
icebp
movs
fsub
push
fldenv
xor
xchg
loope
and
pop
dec
jns
inc
jns
pop
(bad)
fnstcw
add
clc
cmps
jo
cld
popf
in
push
sub
pop
cmps
mov
in
(bad)
outs
and
sub
and
fist
jns
push
arpl
push
ins
repnz
inc
daa
mov
retf
sete
jne
pop
adc
or
cmps
arpl
sbb
adc
sub
add
imul
xor
inc
outs
stc
jo
and
push
adc
jg
mov
add
mov
push
mov
stc
je
stc
pushf
rcr
rol
(bad)
mov
aas
lds
jmp
jmp
jne
push
mov
test
inc
dec
ins
mov
lea
sub
movs
mov
jb
sbb
les
stc
test
xchg
dec
push
hlt
mov
lock
mov
dec
nop
test
imul
sbb
pop
sbb
icebp
push
or
add
pop
mov
sbb
ss
dec
(bad)
xor
lods
xor
jnp
(bad)
pop
sbb
mov
inc
inc
dec
jmp
loopne
inc
push
out
hlt
mov
cmp
adc
mov
(bad)
hlt
jecxz
retf
call
leave
cli
out
pop
xor
xchg
inc
dec
pop
xor
xchg
pop
dec
dec
inc
jne
xor
pop
pop
cmps
iret
jns
inc
mov
or
rcl
es
sbb
repz
fiadd
ja
push
sbb
aam
dec
push
add
or
push
sar
gs
pushf
js
shr
scas
lea
popf
fnstsw
jae
push
and
and
in
add
mov
lds
sub
test
fcomp
xchg
outs
outs
cli
std
loope
ins
pop
add
fiadd
add
lock
sbb
outs
mov
add
shr
retf
mov
cmp
cld
cmp
pop
daa
(bad)
aaa
cmps
jle
stos
sub
call
shr
ds
arpl
dec
mov
mov
sti
ret
aaa
movs
std
loop
into
aam
leave
pop
mov
or
sti
setb
jl
xchg
adc
retf
push
hlt
push
daa
(bad)
dec
add
nop
data16
movs
add
mov
pushf
(bad)
cmp
hlt
cmp
xor
aad
fadd
mov
dec
mov
mov
sbb
(bad)
sar
pop
das
cmc
aad
gs
test
sbb
lods
(bad)
dec
out
jae
aad
sbb
mov
lock
pop
push
jge
out
mov
bound
mov
sbb
aas
inc
(bad)
outs
scas
int
push
loope
dec
push
push
retf
iret
enter
mov
or
pushf
jnp
cli
aas
das
retf
pop
leave
cmps
stos
and
outs
stos
mov
add
xchg
leave
test
ror
push
cmp
dec
mov
mov
add
add
cs
movs
gs
lds
call
adc
enter
push
xor
loopne
or
jns
(bad)
xchg
jb
inc
mov
adc
jb
and
in
ret
ins
mov
stos
stos
inc
xor
cmp
sub
lock
arpl
std
imul
dec
out
rol
ror
movs
(bad)
daa
mov
jno
jns
sub
mov
dec
cmp
adc
ret
dec
xor
je
dec
stos
gs
push
fbstp
mov
jmp
(bad)
nop
pushf
inc
js
jo
je
jb
jbe
jbe
or
into
jno
in
sub
push
in
loope
cmp
add
invlpg
dec
pusha
adc
jnp
stos
popf
(bad)
(bad)
or
push
mov
leave
cmps
or
aam
jb
fstp
int
mov
and
adc
xor
bound
adc
xchg
xchg
repz
xor
xchg
pop
pop
repz
pop
into
and
jmp
les
cmp
xchg
into
inc
jae
test
add
mov
jne
test
(bad)
mov
or
mov
hlt
popf
sub
pop
or
in
fwait
dec
or
leave
arpl
stos
out
push
xchg
pop
(bad)
rsm
imul
daa
cmp
into
inc
dec
push
bound
cdq
mov
fiadd
sub
jo
pop
dec
mov
or
rcr
push
ds
ror
(bad)
das
mov
cmps
dec
clc
cmp
je
retf
inc
xchg
inc
pushf
jo
inc
ds
test
add
(bad)
fcos
les
call
outs
sar
cld
and
shr
lock
cmps
inc
in
xchg
pop
add
pop
jg
cdq
dec
imul
mov
lahf
cs
sub
xor
test
popa
ja
fs
push
and
out
xor
pop
js
add
push
inc
push
pop
ins
aam
cmp
jle
in
ret
dec
jb
mov
sbb
mov
sbb
enter
retf
cmp
mov
xchg
push
push
retf
not
out
cmp
xor
mov
add
mov
add
cs
inc
(bad)
mov
jno
ret
les
adc
pop
mov
movs
pop
jl
pop
inc
aas
jae
daa
jbe
dec
mov
inc
sbb
cmp
jmp
dec
movs
std
jecxz
loopne
inc
pop
and
add
inc
adc
je
out
push
xor
and
or
pop
mov
mov
mov
inc
add
mov
(bad)
(bad)
shl
sbb
fdiv
ret
loop
or
xchg
adc
and
add
rcr
sub
sub
adc
adc
push
or
add
ins
movs
jnp
dec
push
push
sbb
add
and
xor
(bad)
shl
or
cmp
das
or
outs
mov
inc
and
shr
sahf
inc
pop
lods
dec
push
and
imul
out
adc
nop
inc
add
xor
sbb
data16
sub
push
xor
xchg
push
sbb
push
add
leave
ins
imul
loop
push
pusha
adc
push
xchg
out
jecxz
popa
xchg
fst
test
mov
and
lods
push
jns
sahf
adc
out
fsubr
sbb
retf
movs
and
push
mov
outs
xchg
add
cwde
add
jl
xchg
push
or
lds
adc
add
mov
mov
retf
dec
xchg
fiadd
mov
xor
addr16
pop
add
xor
push
std
fcmove
sbb
nop
add
movs
out
push
fdiv
jecxz
aaa
mov
jg
not
ja
imul
mov
repnz
push
bound
push
or
add
adc
lock
movs
pop
fstp
arpl
aaa
call
or
push
popf
gs
call
pop
test
fsub
xor
mov
test
add
(bad)
push
sbb
cmp
sub
stos
les
mov
ja
iret
icebp
int
(bad)
inc
xlat
inc
dec
mov
dec
inc
pop
add
std
cmp
fdivp
fldcw
adc
mov
retf
cmp
icebp
in
push
imul
and
xlat
mov
(bad)
mov
jbe
and
enter
fadd
dec
xor
jge
(bad)
(bad)
cli
mov
(bad)
xchg
add
mov
(bad)
jmp
jne
aad
js
sbb
(bad)
dec
rcr
sar
out
les
stos
outs
popa
jne
sub
push
add
daa
sbb
test
lods
loop
inc
sbb
xchg
outs
mov
jl
xlat
and
add
retf
ror
jae
or
cmc
xor
push
(bad)
push
sbb
mov
lea
pop
cmp
sub
cmp
mov
push
mov
mov
dec
das
sub
lods
in
fisttp
adc
pushf
jp
es
pop
add
mov
call
xor
out
dec
xchg
push
sub
adc
push
and
test
and
stc
push
sti
cmp
je
push
adc
push
fwait
bound
xor
jae
aas
adc
inc
sbb
xchg
cli
adc
mov
and
lahf
lods
adc
(bad)
pusha
sbb
or
test
dec
cld
out
std
(bad)
pop
pop
(bad)
jmp
mov
(bad)
inc
mov
mov
out
and
jp
cwde
adc
shr
movs
in
les
xchg
cwde
sbb
push
lods
call
xor
jo
xchg
and
adc
pusha
jl
pusha
adc
adc
inc
jno
fldenv
(bad)
js
push
test
lock
jmp
jno
adc
jmp
xor
dec
mov
imul
popa
aad
cmp
cmp
jp
xlat
test
or
pop
leave
les
mov
psubsw
ret
call
je
jne
in
sbb
cmp
jge
inc
fsubr
lods
jae
inc
outs
mov
mov
adc
outs
jnp
pop
punpckhdq
push
mov
in
cmp
loopne
fild
jmp
fcom
cmc
inc
push
les
scas
or
sti
test
xchg
push
(bad)
jmp
mov
mov
fwait
ret
cmp
inc
icebp
stc
mov
es
sbb
stos
mov
out
inc
fdiv
push
jb
js
ja
and
push
icebp
adc
cmp
not
fdivr
repz
inc
mov
aad
cmps
and
call
cmps
mov
jns
out
scas
nop
or
fidiv
mov
mov
(bad)
mov
repz
leave
cmp
inc
pushf
lea
ss
rcl
push
sub
hlt
jae
or
shl
and
xlat
fadd
sti
adc
sub
fist
sub
mov
leave
cld
mov
aaa
(bad)
dec
loop
pushf
leave
sub
jge
adc
xchg
sbb
popa
dec
pushf
mov
push
add
sbb
scas
fild
xchg
jmp
inc
sahf
cdq
ins
jmp
inc
jg
clc
xchg
fcmovnbe
xor
fmul
popa
(bad)
jae
cmp
cmp
mov
sub
cmp
addr16
loopne
xchg
(bad)
mov
fs
pop
int3
or
cmp
jmp
sub
aaa
movs
pop
inc
mov
push
into
stos
aas
shl
rcl
loope
xchg
cmps
daa
in
cmc
mov
ins
ret
mov
rcr
push
mov
movs
js
and
fidiv
sbb
or
out
cdq
inc
dec
and
addr16
adc
in
inc
mov
mov
dec
add
xor
add
mov
or
lahf
jnp
mov
lods
pusha
mov
in
add
lds
movs
retf
or
jge
dec
mov
or
fdiv
(bad)
clc
dec
pop
jbe
cmp
sub
mov
outs
rcl
call
dec
jae
push
jge
sub
or
out
inc
imul
add
sti
add
pusha
or
pop
imul
xchg
push
mov
(bad)
xchg
pop
pop
jl
and
fisubr
(bad)
int
cld
push
ficom
add
and
push
mov
mov
mov
pop
or
lea
mov
xchg
xlat
or
out
mov
dec
aas
cmc
and
lea
repz
xor
addr16
mov
pop
hlt
cmp
jb
jmp
sub
data16
sbb
jo
loop
push
inc
xchg
dec
pop
cmps
retf
scas
jo
loopne
and
icebp
mov
cld
mov
jns
scas
sbb
std
mov
lods
push
daa
inc
sbb
iret
dec
mov
loop
imul
or
cmp
mov
mov
shr
std
jg
or
arpl
pop
mov
add
mov
push
in
mov
dec
jnp
cmp
cmp
pop
mov
pop
push
lock
cmc
mov
cmp
pop
mov
sub
pusha
retf
sub
cmp
and
retf
jbe
rcl
jb
jb
or
stc
aas
push
(bad)
mov
cmc
cmc
aaa
scas
mov
int
push
push
jg
push
jae
enter
imul
sub
js
out
jmp
clc
dec
push
pop
out
mov
mov
push
add
add
leave
and
aam
mov
dec
push
push
pop
stc
fwait
xchg
aaa
push
jecxz
test
mov
loopne
jmp
push
ficomp
mov
pop
mov
scas
out
xchg
ins
add
and
xor
adc
adc
dec
inc
scas
xchg
shl
mov
popf
mov
push
sub
inc
fs
popa
jnp
lea
test
out
add
das
xchg
push
inc
mov
cs
jmp
xor
sahf
push
mov
inc
adc
data16
cmp
(bad)
push
loopne
fnstenv
cmp
das
cs
mov
xor
xor
into
sub
add
(bad)
inc
mov
cmp
aaa
mov
mov
sbb
sbb
je
pop
or
pop
sar
push
cld
mov
inc
push
mov
daa
jle
cmp
jle
enter
neg
jb
sbb
jae
aaa
and
add
test
pop
mov
push
mov
out
add
jmp
rcl
and
(bad)
jmp
jg
aas
ja
lea
ins
adc
sub
dec
(bad)
fcom
mov
xor
mov
xor
cmp
jle
loopne
pop
in
pop
push
dec
lea
pop
jg
sar
jge
clc
cmp
aaa
(bad)
bound
ror
retf
in
jns
mov
push
xchg
in
or
jmp
cli
in
mov
mov
fdiv
xchg
lds
out
cmps
sahf
pop
(bad)
stc
out
mov
test
sub
add
mov
icebp
leave
(bad)
mov
arpl
rep
lock
cmp
je
aaa
es
daa
jnp
test
out
cmp
out
sub
push
dec
jo
outs
aas
dec
inc
add
jmp
sbb
cld
add
xor
aas
mov
arpl
test
inc
pop
das
pop
xchg
aad
scas
ja
popa
xor
mov
jmp
dec
scas
and
push
pop
cs
(bad)
xchg
dec
pop
push
mov
ins
sti
adc
push
adc
jge
inc
and
sbb
mov
jp
xor
(bad)
int3
jge
adc
push
sub
out
retf
sbb
int
pop
xchg
dec
repz
dec
jmp
cmp
test
fisttp
xor
pop
xor
xchg
xchg
and
int3
sub
aad
cmps
dec
and
mov
js
dec
mov
sub
jg
loope
test
jle
sbb
pop
outs
and
pop
or
and
sar
and
mov
xchg
push
int3
ins
(bad)
dec
mov
sub
adc
data16
mov
jae
fdiv
retf
add
cmc
xchg
pop
outs
sub
mov
hlt
rcr
inc
adc
jl
ret
js
cli
xchg
sti
pusha
fcmove
scas
call
or
add
int
lea
out
sahf
aad
lods
out
les
adc
mov
mov
repz
mov
jge
cmps
xchg
xor
jg
inc
enter
jl
lds
mov
fwait
jg
bound
push
enter
sub
sbb
mov
push
cmp
popf
ja
push
aad
jae
and
mov
dec
test
psubusw
aaa
xchg
cmp
int3
mul
xchg
iret
sub
(bad)
jmp
pushf
retf
pop
mov
adc
popa
jne
xchg
sets
shl
cmp
mov
xlat
or
jb
into
jbe
lock
cmc
inc
icebp
mov
test
cld
mov
repz
xor
adc
ror
push
jo
inc
arpl
and
and
add
lods
add
jle
mov
test
adc
fwait
sbb
and
jecxz
popf
mov
dec
cwde
cmc
inc
imul
mov
push
sbb
push
mov
sub
xchg
mov
aam
xchg
push
pop
and
jmp
mov
push
pushf
not
xchg
cs
pop
sar
mov
sahf
xchg
or
mov
in
jbe
stos
lea
sti
dec
repz
mov
int3
jns
es
lods
xor
jl
loop
pusha
inc
xchg
inc
ret
mov
mov
and
sar
add
pop
or
mov
cwde
xchg
mov
xor
pusha
cdq
sbb
mov
xor
push
imul
out
mov
xchg
lea
jmp
sub
jge
mov
in
push
nop
add
sbb
adc
jl
int3
jbe
test
aaa
retf
cmps
mov
ucomiss
(bad)
pop
jbe
mov
or
sti
ins
(bad)
or
cmp
(bad)
xor
inc
push
mov
and
push
into
pop
pop
pop
icebp
outs
imul
sar
and
sahf
xor
sbb
jle
ds
jmp
rcr
mov
jnp
xchg
pop
push
push
and
jmp
aam
push
mov
icebp
pop
pop
loope
mov
push
mov
nop
add
in
out
or
lods
pop
xor
cmp
xchg
dec
mov
sbb
iret
dec
repnz
loope
out
mov
cwde
push
mov
pop
mov
cwde
into
std
out
icebp
push
xchg
or
mov
push
cmps
and
add
iret
xor
les
lods
pushf
dec
xor
loope
mov
mov
cmp
adc
xchg
imul
out
in
iret
and
xor
pop
push
aam
mul
xor
inc
js
addr16
mov
arpl
stc
fldcw
push
fnstenv
pushf
push
vsubpd
push
mov
push
cmc
dec
cmps
shr
push
cmp
scas
add
out
mov
add
inc
ins
mov
xchg
int3
cmp
test
cwde
mov
jne
in
inc
loopne
dec
dec
xchg
std
(bad)
cli
test
int
mov
inc
shl
shl
dec
pushf
out
pop
xchg
rcl
add
shr
dec
scas
lock
popa
mov
adc
jb
cld
adc
ins
aaa
fld
push
mul
or
icebp
aas
xchg
cmp
xchg
popa
(bad)
jp
repz
cwde
inc
(bad)
mov
xchg
and
addr16
sub
out
std
mov
(bad)
mov
sahf
pop
sub
repz
cli
and
ret
(bad)
imul
stc
bound
fs
jge
or
push
popf
loopne
popa
das
or
fwait
cmc
lahf
std
in
lock
lahf
stos
sar
neg
sbb
shl
lods
fistp
mov
ja
jg
xchg
scas
inc
or
inc
and
add
mov
test
aam
lds
jns
xchg
test
popa
repz
in
or
sti
cmp
movs
(bad)
aas
mov
loopne
jo
(bad)
movs
xor
inc
sub
(bad)
cld
ss
xchg
push
cdq
jmp
mov
add
dec
mov
sti
add
retf
sub
rcr
mov
pop
inc
mov
and
mov
rcl
ret
cmp
push
loope
inc
adc
add
fs
jle
jl
adc
and
mov
cmp
xchg
daa
pushf
in
xlat
or
mov
jnp
inc
jno
dec
jb
mov
out
test
in
in
scas
retf
or
mov
push
retf
ss
lea
mov
scas
gs
cmc
cli
mov
pusha
sbb
aam
mov
or
ja
xchg
loopne
shr
mov
mov
cmp
inc
lds
mov
adc
cdq
(bad)
push
addr16
popf
cmc
mov
ds
cmps
aas
dec
daa
lods
in
outs
add
push
xchg
cmp
pop
stc
xchg
out
and
or
sbb
hlt
jbe
scas
daa
shl
xchg
(bad)
pop
adc
xor
daa
dec
mov
jns
hlt
mov
xor
out
sahf
ja
pavgw
sub
sub
scas
mov
jle
mov
js
xchg
lea
pop
repz
push
push
push
retf
movs
jp
pop
scas
shl
cs
cmp
es
aas
stos
xchg
pop
pop
lahf
stos
es
xchg
sahf
mov
enter
retf
push
cli
retf
frstor
sbb
pop
or
in
xor
and
enter
out
loope
gs
popf
arpl
outs
scas
jge
push
inc
or
ja
pop
mov
or
jecxz
and
lahf
call
mov
mov
lock
pop
mov
imul
push
mov
int3
or
jecxz
stc
mov
xor
inc
ss
jl
ror
sub
push
ss
push
mov
lds
xchg
fwait
ret
test
ror
push
iret
sub
test
cmp
bnd
es
cmp
sti
(bad)
and
xchg
dec
out
or
pop
inc
fild
sub
xor
mov
stos
jg
mov
mov
adc
loope
movs
mov
hlt
ja
mov
push
xlat
sub
les
scas
xor
add
pop
adc
iret
or
daa
fdivp
adc
push
pushf
jae
pop
sub
push
mov
add
cmp
test
jnp
(bad)
dec
push
jg
and
xchg
dec
lea
inc
imul
enter
pop
hlt
loope
pop
sahf
adc
dec
outs
fwait
mov
dec
cld
aas
fistp
cs
sub
sub
mov
xchg
xchg
iret
push
mov
push
or
cmc
test
xchg
(bad)
call
xor
adc
push
test
mov
arpl
jecxz
mov
sub
pop
out
fild
call
cli
pop
mov
fsubp
test
mov
mov
inc
dec
push
cwde
inc
std
int3
(bad)
mul
jg
sahf
jecxz
or
fidivr
xlat
adc
fst
test
jno
mov
xchg
add
push
push
push
jns
add
imul
sub
mov
scas
mov
pop
retf
aad
aaa
fisubr
adc
sti
(bad)
or
jmp
jp
push
mov
jo
stos
jg
push
fyl2x
fidiv
(bad)
leave
or
fsubr
cmps
(bad)
cli
repz
in
(bad)
jp
shl
push
dec
inc
sub
or
ret
xor
je
icebp
sbb
aaa
into
pushf
inc
mov
cmp
lds
cdq
stos
add
mov
push
lahf
mov
dec
add
loopne
leave
mov
dec
repnz
in
pop
xchg
jnp
fwait
mov
or
repz
push
dec
pushaw
enter
(bad)
in
inc
nop
inc
dec
mul
in
mov
test
dec
outs
ror
in
dec
lea
push
and
jo
inc
into
bound
stc
sbb
mov
sti
comiss
popf
adc
outs
cmp
adc
pop
dec
mov
js
xchg
call
cmps
mov
mov
xchg
sbb
popf
ficom
popa
inc
sub
repz
(bad)
fiadd
sar
repnz
mov
and
pop
cmp
xchg
push
not
lods
jb
les
push
ret
push
lds
push
cdq
mov
xchg
fadd
or
or
sub
es
retf
scas
out
div
mov
in
jno
push
(bad)
and
mov
cli
outs
push
je
xchg
add
int3
mov
xchg
pushf
pop
(bad)
leave
mov
cld
rcl
push
outs
cli
jp
xor
aas
ret
ds
jecxz
ja
add
push
(bad)
ss
mov
mov
jb
ins
dec
jge
cmp
and
pop
int3
fdiv
push
cmps
xchg
inc
test
das
inc
aad
movs
retf
pop
cmps
das
jle
fist
mov
jns
inc
mov
addr16
jnp
ja
ficom
imul
sub
ret
pop
fs
push
loope
mov
sbb
add
cmp
mov
test
adc
mov
cmp
adc
sub
call
xor
aad
loopne
dec
int
push
ror
call
jno
push
jno
loop
push
pop
hlt
mov
scas
test
dec
jnp
shl
mov
stc
adc
shl
jo
int3
shr
xchg
loope
mov
push
in
adc
movs
or
add
and
xor
loope
cmp
outs
mov
outs
pop
hlt
repz
push
arpl
dec
push
mov
ror
lahf
adc
jmp
pop
pop
and
or
ins
test
push
sbb
mov
imul
xchg
push
jmp
ret
mov
(bad)
jge
ins
les
or
push
sahf
cdq
lock
pushf
loopne
push
dec
jne
push
pop
sub
cli
mov
fwait
jl
or
xor
fidiv
and
div
mov
and
mov
jns
cmp
imul
loopne
lock
test
jo
jb
inc
call
xor
lea
cmps
inc
cmp
out
push
mov
(bad)
fs
in
repz
popf
movs
cdq
lds
test
call
push
sub
mov
popa
add
sub
mov
mov
mov
inc
xor
imul
or
inc
(bad)
pop
mov
inc
push
xchg
les
cmp
dec
push
and
jno
dec
cmps
xchg
xor
mov
imul
sub
dec
jecxz
fsub
into
jnp
xor
test
jbe
xor
add
popa
(bad)
(bad)
clc
push
sbb
or
xchg
fimul
mov
dec
inc
cmc
loop
pop
les
imul
cmp
or
jae
xor
cld
pop
xchg
test
aas
inc
(bad)
sbb
or
scas
(bad)
pusha
mov
loopne
inc
retf
test
add
out
into
lds
jno
adc
lods
xor
sub
in
xchg
xor
ret
xchg
xor
sar
or
sbb
hlt
xchg
and
loope
jle
ror
leave
pop
gs
lock
aaa
sbb
scas
add
jne
mov
or
pop
pushf
data16
aaa
ret
adc
sub
in
xchg
test
cmps
push
push
mov
inc
jecxz
fnstcw
pop
arpl
push
movs
sub
sub
push
fwait
adc
push
test
dec
cmp
aad
movs
retf
mov
stos
rcl
les
loop
and
movs
push
(bad)
in
mov
aam
sbb
rcl
retf
retf
in
out
jmp
or
aas
dec
dec
outs
pusha
or
jle
test
cmp
mov
test
in
fisttp
mov
in
and
push
popa
pop
cmp
inc
std
(bad)
jmp
sub
inc
or
icebp
test
sbb
or
retf
pop
(bad)
xchg
and
das
hlt
imul
inc
mov
xchg
cmps
pusha
push
in
inc
fst
add
shl
outs
arpl
unpcklps
jg
and
in
scas
and
pop
mov
mov
mov
mov
dec
js
sub
out
dec
cmp
mov
mov
xchg
mov
fcomip
mov
jle
push
lea
leave
add
sub
popa
add
mov
or
repz
call
jge
fnstcw
fcomp
jne
and
outs
inc
xor
scas
or
jno
rcl
unpckhps
push
daa
or
push
jle
dec
sub
shr
add
(bad)
dec
xchg
out
mov
jle
adc
lock
mov
mov
ds
test
inc
out
stos
adc
jl
cmp
inc
fwait
jp
test
sbb
in
movs
inc
mov
int3
sar
adc
inc
and
rcr
gs
inc
movs
enter
test
retf
and
push
and
rcr
pop
mov
mov
movs
push
dec
cmp
cmps
sub
dec
dec
inc
ins
repz
loop
lock
or
inc
mov
loop
xchg
repz
xchg
or
rol
mov
push
sub
mov
lods
adc
inc
sbb
inc
xor
cmps
bound
push
aaa
pop
or
(bad)
pop
cmps
dec
and
xor
sbb
add
pop
dec
mov
fsub
stc
push
adc
ins
clc
es
pop
loopne
fwait
sbb
pop
das
mov
push
jecxz
adc
std
add
jle
xlat
inc
add
ja
add
into
les
or
pop
jne
es
cmps
out
shl
shl
rcr
mov
fmul
aas
cwde
mov
iret
dec
xor
imul
pop
and
inc
test
in
mov
mov
in
inc
lods
adc
in
cmp
call
mov
in
mov
mov
out
(bad)
lods
int3
sti
or
or
scas
pop
jmp
les
push
pop
arpl
dec
lock
or
ret
clc
(bad)
push
mov
push
nop
(bad)
repz
clc
adc
mov
jo
fwait
rol
mov
outs
dec
dec
in
xor
sbb
movs
mov
inc
in
outs
or
adc
popa
rcr
in
sub
and
or
in
mov
scas
rol
clc
(bad)
ins
movlps
jnp
inc
mov
retf
inc
ins
bound
cld
dec
sub
test
lea
daa
mov
jge
pusha
xchg
adc
adc
fst
cmp
and
pop
xchg
lock
pop
cmps
jne
jo
push
xchg
cmp
mov
pop
cmps
ss
popa
mov
mov
(bad)
fs
cmc
ins
and
pop
mov
push
adc
out
sahf
out
dec
fwait
sub
inc
jmp
inc
jnp
jb
mov
sub
adc
mov
push
rol
rol
dec
cs
aas
sub
mov
jmp
popf
xlat
ja
fwait
(bad)
add
mov
sahf
xor
jno
add
adc
int3
hlt
jns
lahf
pop
or
ins
iret
pop
scas
xchg
daa
or
cli
mov
adc
mov
cmp
adc
loop
test
lock
or
cmp
and
ja
add
mov
jmp
imul
into
xchg
lock
loopne
imul
push
add
sub
retf
dec
cmp
loopne
and
call
iret
and
add
jne
cmp
dec
push
mov
pop
push
into
retf
cs
pusha
jle
push
mov
std
mul
pushf
jl
clc
or
iret
lea
fidivr
test
xchg
adc
test
mov
cmc
iret
mov
(bad)
mov
mov
out
fiadd
pop
jp
mov
ret
pop
jl
es
dec
mov
aam
ins
ror
mov
test
jb
push
dec
outs
push
xchg
mov
sbb
stos
sub
mov
sub
retf
inc
push
xor
daa
or
gs
jge
cmc
push
or
or
ret
jl
jge
mov
cmp
jmp
(bad)
push
outs
pusha
je
adc
xchg
pop
push
imul
clc
jb
repz
aaa
fcom
int3
mov
or
xchg
pusha
xchg
out
push
(bad)
push
jl
mov
mov
sub
xor
nop
fdiv
dec
jle
xor
cs
inc
(bad)
fiadd
sbb
jne
or
movs
xchg
fbstp
sti
retf
mov
inc
cmp
call
jmp
popa
aam
popa
ds
pop
inc
mov
mov
ret
int3
stos
adc
cli
in
addr16
lds
popa
test
and
mov
scas
push
push
mov
int
repnz
(bad)
ins
mov
rcr
dec
out
cli
scas
ins
adc
pop
push
lea
nop
retf
cmp
push
retf
nop
sar
(bad)
aas
xor
push
xchg
aad
or
add
loope
push
inc
and
call
cmp
cmp
sub
adc
fs
das
je
repz
test
nop
call
int3
pop
sub
push
mov
call
or
adc
inc
xchg
outs
or
retf
movs
scas
and
jbe
dec
push
jo
jecxz
mov
sub
sub
rcl
rcr
movs
icebp
add
test
and
inc
sti
mov
bound
leave
icebp
or
xor
fcomip
jle
fbstp
out
push
leave
mov
cmp
push
js
mov
adc
fs
add
or
xchg
or
xor
mov
cmp
add
in
push
mov
jp
bndstx
sti
push
mov
loop
rcr
xchg
push
xchg
mov
das
retf
movs
into
call
push
jl
gs
xchg
ret
add
aad
add
mov
adc
push
icebp
xlat
ret
inc
pop
xchg
adc
in
mov
loop
dec
mov
xchg
mov
xchg
mov
mov
jmp
xor
pop
cmc
stos
into
push
popa
sahf
loop
xchg
test
imul
jb
dec
lea
xchg
(bad)
test
inc
jle
stc
repz
inc
fiadd
(bad)
ds
mov
nop
mov
jecxz
sar
rol
push
pop
mov
clc
xrelease
int3
xchg
call
jb
test
mov
mov
cdq
mov
push
push
(bad)
cli
pop
dec
fild
jno
cld
icebp
sub
out
aam
inc
stos
or
or
sahf
in
mov
movs
jne
push
pop
xchg
mov
pop
pop
push
in
push
mov
mov
std
dec
xchg
pushf
push
popa
ja
jl
mov
fdiv
mov
addr16
or
and
test
ins
mov
inc
mov
sub
cmc
or
scas
jle
sub
neg
push
div
data16
(bad)
arpl
sbb
ds
int
jmp
xor
xor
fbld
jl
js
lods
out
xor
movs
neg
adc
pop
xchg
es
push
or
jb
push
int3
(bad)
cmp
jno
and
mov
mov
sar
nop
lods
fist
xor
popf
ret
mov
push
dec
cmp
jae
js
mov
je
and
jp
xchg
sbb
push
cmps
add
adc
lods
jmp
lahf
and
adc
or
pop
imul
xor
jge
fistp
mov
xor
mov
stos
add
mov
xchg
push
stos
xor
cwde
push
push
or
cli
jl
sub
dec
es
repnz
sbb
push
jo
aad
cmp
xchg
sbb
xchg
cmp
popa
sbb
(bad)
lds
adc
cmp
outs
clc
sub
in
ins
and
in
mov
movs
add
and
aam
aaa
mov
mov
(bad)
leave
mov
or
push
mov
adc
add
jge
xchg
cmc
pop
ror
icebp
into
(bad)
out
cld
pop
stos
mov
or
add
push
mov
dec
hlt
xor
inc
pop
mov
pop
adc
iret
ins
fidiv
mov
fcomp
xchg
int
push
adc
cs
sbb
push
outs
retf
(bad)
retf
cmp
into
dec
cmps
es
dec
adc
inc
es
sub
imul
mov
push
fcomp
sub
jmp
test
sbb
add
gs
or
std
scas
push
xlat
mov
mov
pop
or
lods
test
jp
or
popa
dec
cld
pop
add
mov
popf
movs
es
(bad)
pop
sub
out
addr16
sbb
iret
sbb
rcl
pop
xor
xchg
sbb
retf
or
mov
jae
lea
jecxz
aam
xchg
addr16
pop
mov
inc
adc
add
ins
retf
nop
retf
sub
fmul
dec
frstor
cmp
push
pusha
int3
push
push
jecxz
xlat
bound
jno
or
mov
adc
xchg
sub
in
lock
mov
ja
adc
jmp
xchg
mov
and
mov
adc
imul
sub
sub
mov
dec
rol
in
or
mov
inc
loop
(bad)
cmp
jmp
mov
(bad)
pop
inc
cli
xchg
pusha
loop
fst
in
imul
loopne
sti
mov
retf
vmovhpd
addr16
add
pop
jl
mov
fst
pop
xor
scas
sub
in
stos
out
dec
idiv
pop
retf
dec
sbb
and
jle
retf
xlat
int
and
imul
cmps
jbe
inc
jmp
das
xor
dec
or
add
or
push
xchg
jl
nop
scas
cs
sbb
je
dec
movs
sbb
sub
adc
dec
fdiv
imul
rcl
cmp
mov
int
xor
jb
xchg
mov
aad
popf
jp
xchg
pop
in
jmp
pop
mov
ja
pop
mov
fmul
js
in
adc
imul
jo
and
adc
std
test
sub
sub
add
imul
mov
jmp
mov
push
fidiv
dec
push
test
outs
adc
mov
nop
cmp
sub
sbb
inc
jne
pop
ret
pop
test
cmps
add
div
or
mov
sbb
mov
cmp
push
fwait
dec
mov
jns
mov
cmp
or
and
push
(bad)
mov
(bad)
hlt
(bad)
psrlw
mov
cmp
pop
or
sbb
mov
aam
push
inc
fdivr
push
xchg
sbb
clc
mov
sub
cwde
push
jle
xchg
fcomp
mov
repz
pop
pop
jnp
enter
js
rcr
lahf
into
mov
jno
jo
scas
cs
add
or
ror
mov
je
adc
push
push
mov
sahf
push
icebp
daa
or
xchg
xor
cmp
rcr
mov
js
mov
pop
and
cmp
popa
xchg
jb
sub
and
mov
(bad)
lock
mov
cmp
enter
inc
loop
(bad)
add
mov
jb
push
and
jge
sub
fdivr
iret
sub
or
mov
or
mov
xchg
cmc
(bad)
outs
(bad)
movs
dec
out
lock
pushf
arpl
out
sub
xor
sbb
dec
repz
adc
(bad)
cld
je
ffreep
pop
pop
push
cmc
ss
loop
lods
aam
cmp
rol
sub
les
imul
aad
dec
ins
loopne
mov
ror
clc
aam
es
pop
cmc
cmp
or
dec
mov
inc
adc
or
xchg
pop
or
mov
enter
xor
(bad)
repz
xchg
(bad)
pop
jg
(bad)
and
pop
enter
jbe
and
ror
(bad)
sub
loop
test
or
shl
jno
push
sahf
mov
fisttp
psrad
cmp
(bad)
mov
xor
inc
adc
push
or
pop
xor
mov
cmp
push
out
ret
pshufw
test
push
movs
pop
adc
addr16
pop
fldlg2
ficom
pop
fcomp
sbb
(bad)
mov
dec
popf
inc
jnp
xor
xor
cmp
iret
jno
icebp
retf
inc
sbb
lock
imul
xchg
call
and
lods
adc
and
pop
add
call
data16
fs
lods
cld
lock
movs
test
mov
push
lds
(bad)
dec
mov
push
into
inc
into
aam
dec
ins
sub
fst
dec
out
xchg
push
or
sbb
sbb
and
out
fiadd
sahf
aam
std
push
push
sub
into
popa
cld
imul
ret
pushf
pop
pushf
call
or
jae
xor
stos
fdiv
mov
mov
inc
lods
fwait
pop
cs
pop
dec
mov
pop
int
dec
mov
jle
nop
pop
cmps
adc
sub
xchg
push
jmp
mov
loope
xor
sbb
jmp
sub
imul
jmp
mov
mov
jge
adc
retf
add
adc
mov
fist
in
call
jmp
jge
add
xlat
mov
mov
ret
push
cmp
mov
pop
int3
mov
cmp
mov
push
adc
outs
mov
jnp
push
cmp
xor
outs
stos
push
pop
call
rol
div
popa
shl
ss
lods
out
pop
stos
aam
xor
jbe
mov
fistp
jmp
jae
jae
mov
xlat
sbb
xchg
fidiv
stos
hlt
add
aaa
add
xor
das
mul
nop
repz
xchg
fiadd
nop
dec
xchg
scas
fcom
mov
into
or
not
add
add
stos
into
push
in
out
aaa
lea
repnz
loope
mov
jne
cld
out
scas
outs
mov
enter
xor
adc
mov
nop
out
daa
scas
mov
loope
rcr
sub
pop
dec
dec
pop
xchg
ficom
mov
loopne
repnz
mov
xor
cmp
mov
aad
int3
or
(bad)
pop
mov
adc
xor
out
jecxz
cmp
sub
push
jmp
pop
cdq
inc
pushf
xchg
dec
cmc
dec
(bad)
sbb
outs
xor
inc
mov
mov
xchg
sbb
cmp
js
iret
aaa
sbb
push
outs
test
movs
int
fld1
sub
adc
adc
jg
ss
mov
push
jne
cli
sbb
jnp
sahf
dec
fmul
mov
jo
(bad)
jmp
mov
lahf
cmp
jmp
sbb
addr16
fisttp
repnz
mov
mov
nop
adc
(bad)
and
stos
jbe
mov
cdq
popa
xor
or
push
cdq
call
adc
pop
xchg
lock
ins
xchg
jbe
sbb
mov
in
or
outs
adc
cwde
loopne
or
mov
mov
jns
enter
xchg
mov
jge
fmul
xchg
cmp
cdq
das
pushf
(bad)
cwde
xor
adc
add
ds
test
test
cs
in
into
jbe
jns
jl
xor
stos
ror
fld
push
push
xchg
popf
jl
out
imul
dec
add
ror
mov
movs
fcom
mov
(bad)
cli
popf
neg
icebp
mov
in
xor
ss
(bad)
(bad)
cli
loopne
mov
fwait
cmp
pop
in
int3
inc
jb
push
adc
add
xchg
fidiv
scas
aam
sbb
lods
mov
rsqrtps
mov
(bad)
sbb
sbb
(bad)
lds
jbe
jae
cmp
ret
popf
jle
xchg
sub
loop
add
add
push
and
test
popf
cmc
mov
pusha
call
dec
loope
outs
inc
xchg
jmp
loope
xchg
aad
fild
hlt
fcom
test
inc
mov
(bad)
fwait
xchg
in
test
mov
and
(bad)
hlt
jnp
xor
cmp
add
mov
lock
aam
rol
sar
test
cmp
pop
ja
in
push
ja
add
shl
xchg
es
mov
imul
fdivr
shl
and
mov
xchg
sub
cli
sti
les
icebp
xchg
lods
fiadd
pushf
jnp
loop
test
pop
ret
xor
test
jbe
lds
je
sub
mov
retf
xchg
inc
mov
xor
(bad)
jp
imul
cmp
mov
cmc
mov
jne
mov
push
mov
stos
push
inc
pop
xor
xor
mov
dec
sbb
inc
pop
xor
(bad)
pusha
fiadd
cdq
lock
mov
xor
shl
cmp
dec
xchg
jmp
xor
data16
xchg
movs
inc
das
imul
iret
inc
or
aam
jmp
and
pop
ins
imul
adc
add
outs
lock
leave
xor
ret
pop
stc
es
cwde
mov
xchg
retf
sbb
cmp
dec
mov
sub
test
push
jecxz
sbb
xor
out
(bad)
cmps
dec
(bad)
push
xchg
mov
or
les
fdiv
pop
inc
pusha
test
cmp
push
jg
in
test
xchg
inc
call
es
xchg
js
sub
ror
push
shl
dec
mov
daa
leave
push
jae
cwde
inc
and
int
inc
push
mov
jecxz
popa
jl
inc
sub
fs
and
stos
push
or
test
mov
ja
sub
cmps
(bad)
or
adc
cwde
in
lods
icebp
sub
es
push
pop
jge
loop
jns
push
cmps
mov
adc
inc
push
mov
repz
adc
mov
retf
sbb
mov
dec
ret
int3
adc
mov
daa
sub
mov
jnp
xor
cmp
dec
stos
add
pop
loop
clc
ror
jmp
cmp
call
ret
je
inc
int3
mov
mov
mov
das
push
and
ficom
iret
xchg
cdq
retf
and
mov
punpckhdq
arpl
sar
mov
(bad)
sahf
rol
xor
in
or
dec
mov
fsubr
adc
cmp
mov
lock
xor
xor
push
xchg
(bad)
cmp
fstp
xchg
rep
ret
hlt
xchg
and
adc
fst
fdivr
ret
cmp
int
sub
dec
cmp
rol
out
sub
jecxz
es
add
mov
mov
test
popa
jle
sbb
movs
fs
les
imul
xchg
aaa
pop
retf
stos
or
sub
and
call
or
(bad)
rcl
cmp
fisubr
movs
mov
ret
push
pushf
retf
in
shr
dec
xchg
sub
adc
jbe
push
lock
sub
test
addr16
sbb
mov
cmp
jb
into
dec
dec
and
xor
and
mov
pop
test
scas
sti
lods
mov
cmp
xchg
dec
pushf
test
inc
jno
(bad)
jmp
fnsave
daa
outs
or
inc
repz
idiv
test
lock
pusha
adc
das
add
fild
jns
scas
sbb
adc
adc
xlat
sbb
xlat
leave
push
loop
mov
jbe
push
lds
ss
mov
pop
rcl
out
sti
sbb
and
shr
pop
push
and
jp
and
in
dec
push
xor
cmp
addr16
cmp
scas
and
mov
pop
mov
cmp
push
cmp
adc
cli
inc
fdivr
das
aas
add
aas
pushf
jno
stos
imul
pop
arpl
add
dec
xacquire
inc
mov
sti
mov
jge
gs
fucomi
pop
inc
mov
out
xchg
inc
push
out
push
stos
push
inc
push
adc
sbb
popf
mov
add
inc
aaa
aam
(bad)
(bad)
lahf
out
inc
pop
loop
fcomp
enter
ja
adc
pop
test
jle
jmp
inc
push
ror
sbb
adc
int3
cmps
jle
cli
xchg
push
ja
jo
ds
mov
fsub
pop
xor
adc
bts
js
shl
mov
inc
push
dec
or
fidivr
push
rol
in
adc
dec
jns
mov
mov
mov
pop
ins
ins
xor
jmp
dec
shl
outs
sub
mov
inc
ins
mov
sub
or
inc
xchg
xchg
and
add
sahf
push
lahf
sub
sub
jb
push
aas
mov
push
or
xchg
lahf
push
inc
mov
call
bound
pop
es
and
(bad)
xlat
cdq
pop
stos
jl
dec
cli
cmps
and
xchg
int
daa
jo
fmulp
or
out
stos
(bad)
pop
push
cmp
call
mov
jns
cs
add
test
xlat
or
jmp
pop
(bad)
dec
les
jb
out
aaa
and
add
mov
(bad)
pop
xchg
sti
add
enter
fmul
jg
sub
sub
jo
outs
cmp
ret
xchg
and
jns
enter
aad
out
mov
fisttp
mov
outs
ins
ja
repnz
pop
mov
mov
je
aad
cmp
or
dec
leave
mov
das
push
lahf
and
xchg
test
and
out
(bad)
in
mov
xchg
add
jecxz
sti
jno
or
inc
push
or
jb
cmp
sub
sub
xor
adc
pushf
jg
int3
add
adc
adc
fld
sbb
out
mov
xchg
je
imul
stc
push
adc
jns
xchg
mov
lds
sbb
jp
ins
jbe
mov
sub
xor
and
push
sar
scas
pop
shr
(bad)
push
xchg
pushf
mov
jo
pushf
pop
jg
aaa
jbe
add
dec
jmp
mov
ja
cmc
ror
shl
add
xchg
mov
add
push
loop
out
or
les
(bad)
addr16
fs
outs
test
mov
es
xchg
in
inc
cmp
dec
rcr
out
cmp
xor
dec
cmp
jg
mov
ins
pop
mov
push
daa
ror
or
fisub
mov
test
push
mov
(bad)
std
enter
mov
fisttp
sbb
mov
inc
pop
adc
sub
cmp
or
sub
lea
sub
lods
adc
inc
jb
dec
adc
lods
leave
nop
ret
(bad)
sbb
ins
js
dec
data16
ds
pop
dec
xor
ret
idiv
mov
into
pop
jl
pop
sub
and
cmps
dec
push
sbb
mov
xor
cs
mov
imul
jmp
mov
add
out
popf
sub
(bad)
call
repnz
jae
fidivr
adc
test
mov
hlt
pushf
cs
sub
arpl
movs
das
add
stos
paddd
lods
and
aad
cdq
and
xor
int
pop
loop
call
mov
sbb
loop
or
sub
cld
cmp
sti
xor
mov
call
jp
andps
and
cwde
sub
mov
pop
jae
mov
xchg
movs
xor
mov
jmp
jo
xor
dec
jle
jmp
or
mov
cwde
xor
bts
mov
ins
jmp
mov
or
dec
push
adc
add
pop
fiadd
(bad)
jb
add
cwde
gs
mov
push
mov
and
fisttp
push
data16
xor
jb
bound
adc
hlt
or
fstp
cdq
xchg
lock
sar
xlat
popa
mov
jg
mov
lahf
pushf
pop
cmp
into
mov
imul
and
mov
pop
inc
mov
push
jo
jp
imul
ret
xlat
mov
mov
dec
dec
jno
or
dec
aad
sbb
adc
xchg
xlat
data16
mov
pop
test
clts
loope
fnstcw
jmp
pop
sub
mov
xor
pop
cwde
test
fs
xor
xor
mov
push
dec
sub
cmp
test
sbb
inc
outs
jge
jmp
mov
jg
mov
cmc
cmp
mov
ret
pop
lock
jns
aad
cdq
cmp
mov
cmps
jbe
cli
xor
and
mov
push
mov
fsubr
pusha
xchg
repz
lock
fisttp
mov
lea
xchg
jg
pop
xchg
xor
ds
mov
stos
pop
outs
ret
repnz
xchg
in
mov
jns
push
add
push
mov
push
aaa
ror
mov
mov
call
(bad)
xchg
and
clc
sub
xlat
mov
cmps
push
mov
ret
or
cmp
pushf
imul
dec
shl
clc
mov
out
add
push
xchg
sti
outs
mov
inc
stos
cmp
(bad)
loopne
ins
mov
jmp
aas
stc
cmp
(bad)
pop
loop
push
ror
dec
leave
pop
fnstenv
nop
icebp
stos
mul
or
arpl
push
jbe
or
dec
dec
clc
or
pop
push
cmps
mov
cmp
fucomp
adc
cmp
mov
push
mov
jb
iret
leave
inc
shl
jmp
(bad)
es
fs
cmps
lea
std
fadd
repz
jp
sbb
sbb
jp
pop
inc
cmps
mov
shl
jno
sbb
in
pop
stos
inc
adc
mov
mov
(bad)
cmp
ss
rep
inc
inc
jo
sub
js
mov
dec
sbb
and
cmps
pop
int
daa
inc
push
xchg
icebp
jbe
mov
fisub
push
or
mov
push
jns
cmp
loopne
in
retf
dec
fs
or
xlat
jmp
lods
movs
pop
out
adc
lods
aam
fwait
xor
cld
es
pop
fnstcw
ret
mov
sbb
push
or
adc
sub
neg
add
jne
mov
cmp
add
aas
pop
push
fnstcw
jbe
sahf
leave
mov
adc
out
shl
xchg
sbb
add
xor
jnp
push
pop
leave
call
sbb
inc
popf
dec
xor
mov
xor
and
fwait
mov
ja
inc
mov
(bad)
dec
ds
xchg
stos
gs
add
test
cmp
xchg
cmp
sti
adc
pop
test
inc
adc
ret
test
bound
cmps
and
jbe
pop
mov
aam
ds
(bad)
cdq
mov
rcr
dec
cld
jg
repnz
push
mov
in
sbb
xchg
xchg
cs
jmp
ss
push
(bad)
les
in
bnd
lock
mov
mov
mov
mov
push
mov
call
inc
rol
mov
sub
(bad)
mov
arpl
ja
mov
jmp
add
lods
push
mov
int
addr16
mov
test
jb
inc
sbb
fistp
and
retf
mov
adc
dec
(bad)
inc
test
in
or
mov
aad
in
pop
adc
jo
xchg
xchg
loopne
push
lahf
adc
out
push
das
jl
repnz
into
xchg
popf
dec
ror
mov
jo
xchg
pop
adc
aas
aas
outs
dec
push
mov
int
mov
pop
sbb
fimul
cmc
cli
xlat
xor
jo
(bad)
clc
jmp
shl
dec
je
xor
dec
fs
movs
loope
xchg
inc
xchg
nop
jmp
loop
dec
xchg
push
ret
dec
xor
pmaxsw
int
jge
pop
and
cdq
push
push
xchg
sbb
stos
mov
sub
sar
pop
adc
fs
(bad)
and
push
dec
xchg
rol
nop
inc
xchg
iret
xchg
dec
in
rcl
inc
cld
add
xor
or
pop
and
pop
call
and
adc
retf
(bad)
fiadd
cmps
mov
mov
outs
call
xor
(bad)
xchg
test
push
add
jg
sbb
jo
mov
out
idiv
shr
(bad)
call
out
popf
jo
aas
das
cmc
push
sub
(bad)
out
add
mov
xchg
mov
mov
popf
add
push
jbe
jnp
ret
fdiv
es
xlat
xchg
rol
imul
repnz
gs
icebp
add
ins
fucomp
into
lods
clc
inc
jg
inc
loope
mov
test
cld
jo
outs
or
or
push
(bad)
call
fistp
dec
cdq
out
pop
push
push
jmp
in
repz
rcr
cmp
jmp
add
xchg
idiv
pop
add
js
inc
pop
xchg
loop
cli
cmps
dec
pop
jae
jp
cs
mov
ss
das
push
int3
pop
daa
add
sahf
dec
fs
dec
xchg
test
pop
xor
sti
imul
cmp
cmp
jb
mov
push
stc
inc
jmp
or
and
cli
xor
popf
pop
pop
hlt
or
add
cmc
inc
shl
pop
and
shl
jnp
jno
aaa
outs
pop
(bad)
lods
push
dec
loope
mov
push
sub
dec
adc
and
xor
pop
imul
push
cld
outs
dec
repnz
cvtdq2ps
pop
xlat
mov
out
mov
lods
(bad)
mov
repnz
adc
sub
lock
pushf
inc
push
retf
icebp
pop
in
sbb
xor
ror
outs
sbb
xor
cmp
mov
mov
test
xchg
int
sbb
sahf
daa
xor
sbb
xor
or
aad
xchg
out
cdq
fxch
frstpm(287
add
adc
inc
or
jmp
lahf
fdiv
mov
mov
fisub
fwait
cmp
dec
cld
dec
push
in
mov
mov
lods
data16
jecxz
jge
call
and
mov
test
adc
dec
inc
scas
fidiv
aad
fsubr
sti
cmp
xchg
mov
mov
push
in
jmp
test
out
sub
push
lahf
daa
jno
call
inc
out
dec
cli
cmps
call
cmp
jmp
jbe
neg
stos
inc
adc
push
or
pushf
add
scas
or
sub
mov
add
cmp
fucomip
jbe
push
stc
in
adc
fiadd
inc
loope
es
div
push
jge
mov
pop
shl
mov
(bad)
mov
inc
fcom
jno
and
(bad)
jnp
push
dec
jb
cmps
or
mov
ficom
mov
movs
mov
retf
xor
out
push
in
lods
mov
stos
mov
cmp
push
xchg
add
cmps
js
jb
leave
shl
jns
clc
fdiv
push
js
cmp
jnp
sub
call
mov
push
add
mov
push
mov
or
out
jl
clc
mov
(bad)
jbe
push
ds
dec
and
inc
loope
outs
aas
(bad)
in
jo
rol
and
mov
sub
cmp
dec
mov
dec
js
mov
outs
loopne
pop
push
test
jnp
(bad)
mov
dec
mov
rol
test
cmp
pop
int
or
int3
cmp
pop
shr
mov
pop
call
mov
ret
jne
loopne
mov
in
pop
xor
jb
jmp
in
ja
push
push
and
inc
pusha
mov
das
fimul
cmp
out
jp
push
sub
add
jecxz
mov
in
fisub
ins
sbb
aas
push
sbb
fnstsw
into
fwait
jb
icebp
aam
clc
sahf
adc
mov
enter
xchg
shr
jae
jns
pop
loopne
inc
enter
cmp
or
sbb
sub
lods
xor
push
mul
jle
repnz
and
inc
repnz
cmps
pop
dec
imul
inc
jns
cs
xchg
dec
pusha
mov
or
mov
jo
fisttp
and
in
jg
lock
jb
and
ret
cmp
dec
xchg
push
ret
ja
ret
ret
adc
push
mov
lods
ins
inc
sti
popf
fnstcw
cld
xchg
push
push
cmp
loopne
les
push
pop
jno
add
sar
les
add
mov
mov
popa
mov
shl
mov
adc
jbe
xor
or
push
ds
add
clc
movs
in
fbstp
mov
push
and
cmp
pop
push
push
jmp
aad
fisub
mov
adc
sbb
es
xor
inc
inc
add
test
in
rol
loope
mov
xlat
xchg
out
ret
scas
cli
repnz
push
mov
sbb
out
jnp
inc
push
xor
pop
shr
mov
ja
pushw
xchg
lods
push
cmp
add
icebp
cmps
or
pop
sbb
mov
push
cli
inc
out
mov
cmp
fstp
sbb
mov
(bad)
push
cdq
push
ret
jmp
push
sbb
adc
out
or
(bad)
aam
fwait
jp
mov
leave
mov
xor
pop
sub
stos
shr
scas
fistp
xor
adc
xlat
sbb
push
cdq
inc
or
xlat
mov
leave
xlat
mov
nop
inc
(bad)
(bad)
scas
rcl
(bad)
call
push
xchg
call
ret
adc
xchg
mov
es
push
test
lock
lock
test
outs
mul
add
cdq
aaa
add
pop
icebp
push
lods
addr16
mov
push
push
mov
pop
jae
pop
out
(bad)
dec
add
push
add
pop
xchg
mov
add
sub
in
push
shl
jmp
xlat
movs
jmp
in
(bad)
sti
pusha
(bad)
out
dec
sahf
test
xlat
cwde
call
push
in
mov
mov
jns
jmp
ds
push
cld
iret
idiv
outs
retf
pop
aam
push
test
mov
add
jnp
cmp
inc
pushf
cwde
ins
std
(bad)
stos
into
test
adc
les
adc
jp
xchg
add
lods
imul
je
adc
mov
(bad)
xchg
adc
cmp
in
(bad)
jo
xchg
adc
dec
scas
adc
jnp
sbb
mov
and
test
xchg
dec
arpl
dec
adc
dec
int3
pop
cs
xchg
ins
outs
and
sub
shrd
(bad)
imul
jecxz
inc
out
push
jg
fstp
sub
aam
cmp
pop
jo
mov
add
into
sub
push
outs
add
xchg
sub
pop
test
std
js
test
xchg
adc
(bad)
mov
lea
sti
push
push
inc
pop
call
sbb
adc
aam
or
loope
dec
inc
je
sub
xor
mov
pop
xchg
jno
mov
fmul
mov
ror
pop
jecxz
xor
jmp
je
fdivr
xchg
sahf
stc
mov
out
stos
cmps
das
ins
jo
adc
imul
mov
or
fs
xchg
jns
mov
js
fwait
inc
ja
mov
mov
jno
stos
inc
ins
arpl
add
lods
out
inc
sti
test
cwde
enter
fs
cmp
xchg
mov
es
stos
es
aaa
mov
jmp
add
or
jmp
xor
in
mov
xor
icebp
mov
dec
outs
aaa
and
movs
mov
lock
or
pop
xor
mov
pop
movs
push
in
push
add
out
xchg
stos
aas
fstp
bound
sub
mov
mov
loopne
daa
scas
sub
push
mov
sbb
push
repz
outs
mov
daa
pop
rol
jge
sbb
xchg
jno
cmc
ret
push
mov
dec
outs
cmp
or
clc
or
popa
aas
cmp
cmc
js
loop
xchg
xchg
pop
bound
jmp
or
mov
fild
dec
ds
sbb
outs
xchg
out
div
outs
and
fsub
jmp
jecxz
mov
jecxz
leave
jmp
jle
pop
xor
test
rcl
add
mov
mov
fwait
push
adc
sub
adc
(bad)
cmps
pushf
jnp
jae
popf
pop
add
mov
xchg
pop
dec
(bad)
mov
retf
fcomp
cli
mov
dec
fwait
hlt
jb
mov
das
sbb
daa
pop
mov
ds
mov
icebp
(bad)
and
push
ds
inc
add
daa
mov
and
dec
cmp
adc
sbb
mov
mov
scas
nop
push
mov
lahf
fcomp
cmp
into
fdiv
mov
das
sbb
mov
out
dec
out
or
push
dec
ins
jp
sbb
inc
and
stos
into
mov
or
dec
out
call
mov
movs
leave
or
and
(bad)
in
or
outs
adc
pop
adc
inc
mov
mov
jbe
pop
push
movs
jge
in
adc
dec
outs
pop
xor
xchg
pop
push
sub
pop
int3
mov
mov
xor
pop
into
mov
ins
xor
imul
xchg
rcr
test
jo
fbld
cs
scas
hlt
cld
or
xor
call
sub
stos
mov
or
aad
dec
pop
cmovnp
jmp
leave
xchg
xor
fadd
dec
cmp
mov
and
sti
push
inc
mov
mov
and
mov
adc
mov
ret
stc
std
and
out
sti
js
push
mov
imul
rcl
xor
mov
mov
sub
cmp
enter
mov
into
stos
push
loop
cld
rcl
stos
pop
js
pop
dec
stos
jmp
jge
lock
inc
sub
les
inc
inc
rol
lods
pop
or
jmp
xchg
in
ja
dec
ins
pushf
ins
xchg
out
std
and
mov
or
js
(bad)
jecxz
inc
xor
lea
in
movs
inc
outs
lock
sbb
mov
jp
jp
(bad)
mov
arpl
xchg
pop
sub
arpl
jae
jp
pop
fnsave
lods
(bad)
add
mov
js
(bad)
stos
ins
mov
xlat
xchg
sahf
in
sub
add
mov
push
(bad)
scas
outs
mov
in
je
adc
push
dec
or
shl
xchg
shl
mov
aaa
clc
xchg
lahf
icebp
mov
aaa
ret
push
jmp
jnp
pcmpgtw
sbb
int3
or
mov
enter
lds
lods
pop
fucomp
cmp
mov
push
sub
int
add
imul
and
or
in
mov
sub
sub
mov
enter
inc
xlat
inc
add
out
push
aam
mov
aaa
dec
sub
cmp
xchg
(bad)
xor
and
mov
pop
fcmovnb
adc
sbb
inc
mov
pop
imul
jge
imul
aam
and
adc
xor
repz
ss
pop
mov
or
or
ins
jae
add
or
mov
aaa
data16
jae
je
mov
fiadd
mov
or
cs
inc
or
jo
jbe
repz
mov
cmp
push
jo
lds
jae
imul
mov
inc
ret
pop
mov
scas
lahf
bound
mov
or
and
xchg
mov
mov
popf
aam
fadd
pusha
popa
mov
and
xchg
pop
mov
fdivr
mov
push
adc
jl
push
into
jecxz
cdq
dec
test
or
shl
adc
xchg
inc
push
arpl
or
jne
jge
mov
mov
pop
mov
jmp
dec
repnz
dec
sbb
lahf
push
mov
adc
pop
xchg
and
inc
mov
(bad)
jp
cmp
inc
or
adc
sbb
dec
call
mov
stos
in
and
ja
inc
mov
jae
mov
fstp
pop
fiadd
movs
pop
sub
sbb
iret
or
sbb
xor
jg
rol
pop
and
stos
in
push
es
sub
ds
(bad)
cmp
fistp
sar
xchg
pop
mov
ins
dec
xchg
loopne
cs
repnz
push
cmp
pop
int
ja
sbb
or
icebp
inc
bts
or
pushf
aad
lods
pushf
jmp
xchg
fsubr
sar
stos
xor
(bad)
mov
nop
mov
fist
dec
dec
sub
adc
add
sub
cli
mov
jp
push
ja
lahf
ins
(bad)
int
ins
sub
sbb
retf
sub
mov
or
test
adc
pop
clc
or
xchg
out
hlt
test
div
sti
(bad)
retf
dec
stos
pop
inc
test
aam
in
mov
push
mov
enter
ss
sbb
and
stc
jle
(bad)
and
inc
sub
retf
cld
push
enter
shl
cs
out
in
dec
scas
inc
dec
retf
push
je
mov
cmp
push
fcomp
push
scas
add
xchg
(bad)
cmp
sbb
mov
or
or
mov
std
xchg
dec
ror
xchg
cli
jns
push
dec
rol
jnp
(bad)
ins
jb
xor
fsub
mov
adc
jge
fadd
jecxz
shl
int
or
mov
xlat
in
jbe
iret
outs
sbb
dec
cmp
outs
add
xchg
(bad)
(bad)
sub
jbe
jo
dec
mov
loopne
or
outs
jge
cmp
cmps
adc
je
lds
add
and
adc
jp
stos
and
sbb
cmps
xlat
es
in
inc
int3
ret
sbb
or
inc
mov
xor
push
sbb
in
xchg
call
out
ds
arpl
lds
pop
lds
mov
cmp
fsubr
jl
scas
mov
mov
add
mov
rol
and
pop
jecxz
enter
loope
xchg
and
lahf
xor
mov
mov
pop
iret
mov
in
neg
cmp
inc
xor
or
iret
mov
pusha
int3
addr16
lock
sar
das
jns
loope
inc
and
pop
mov
sub
dec
adc
movs
push
or
jb
dec
in
mov
test
xchg
jnp
pop
std
adc
xor
adc
pop
mov
fld
ins
test
xchg
loopne
pusha
jle
out
fidiv
and
out
out
cmp
cmp
jecxz
mov
jno
xchg
clc
or
xor
add
je
gs
push
and
fwait
aas
jne
pop
int3
pop
gs
outs
cmp
into
cs
mov
pop
imul
clc
and
cmps
icebp
push
scas
xchg
inc
inc
cdq
aad
sbb
jns
repz
pop
cmp
daa
popa
inc
mov
jp
cld
sbb
inc
loop
sar
cmp
repnz
pop
jbe
adc
loopne
push
scas
sub
test
addr16
xchg
mov
fs
mov
mov
xchg
inc
xor
retf
and
inc
or
adc
int
sti
sti
jo
repz
cmps
mov
popa
xchg
lock
addr16
and
cmp
xchg
scas
mov
or
mov
sti
and
(bad)
mov
lods
outs
mov
jb
ret
stos
clc
sti
sub
sti
sub
lahf
inc
and
pop
gs
pop
js
fisttp
inc
fld
(bad)
sahf
jne
je
fcomp
adc
dec
mov
imul
add
addr16
scas
lds
pop
or
inc
pop
jno
mov
and
xchg
inc
push
jle
fnsave
push
ret
sub
sub
in
fxam
fsub
pop
(bad)
fsubr
sti
xchg
xor
stos
push
popa
aam
adc
sub
xrelease
mov
adc
mov
mov
adc
ficom
sub
stos
fst
jge
arpl
mov
or
mov
shl
(bad)
mov
out
jge
push
mov
mov
es
dec
push
sub
ret
outs
leave
cmps
and
mov
xor
clc
aas
test
fs
jo
push
dec
aaa
and
inc
cmp
adc
pop
into
and
loop
lds
inc
mov
fisttp
push
lock
jo
dec
mov
adc
retf
test
fs
jns
mov
repnz
in
enter
popa
push
inc
mov
dec
cmp
cwde
xchg
jne
push
xchg
sub
ja
ins
adc
jmp
xor
jecxz
jge
mov
data16
dec
mov
push
gs
mov
jae
mov
stc
leave
js
jno
cmc
xchg
xor
aam
loop
outs
stos
repz
ss
fmul
mov
loop
sbb
imul
pushf
outs
fsubr
dec
push
dec
addr16
dec
dec
inc
jmp
push
dec
pushf
in
jle
cmps
xchg
or
rcr
inc
mov
mov
in
mov
inc
sub
push
mov
mov
sub
les
jmp
fwait
cmp
lods
and
push
or
inc
les
mov
loope
repnz
std
leave
hlt
repz
addr16
(bad)
mov
aam
dec
retf
push
cwde
jb
inc
jecxz
dec
shr
mov
ret
ins
loop
lds
adc
fcmove
call
scas
cwde
loop
xchg
mov
popf
int3
ds
dec
add
mov
dec
pusha
loopne
nop
cmp
dec
mov
mov
sbb
inc
int
cmps
fs
mov
test
jg
inc
cmp
add
(bad)
mov
add
outs
sahf
mov
daa
imul
push
loopne
sub
and
mov
jp
cmp
jb
sub
call
cdq
fcmovbe
and
loopne
sbb
shl
cmp
fwait
or
fstp
sbb
sub
aaa
dec
arpl
imul
xor
std
mov
cmp
in
mov
add
mov
mov
cmp
ret
in
sbb
xchg
adc
xchg
inc
mov
push
call
push
std
mov
push
pop
mov
cld
repz
or
aad
sbb
jmp
push
mov
nop
scas
add
inc
das
and
inc
rol
sub
cmp
outs
jge
sub
cs
mov
jo
inc
pop
das
call
movs
shl
stos
data16
mov
fsub
jecxz
outs
push
mov
es
xchg
out
mov
mov
sbb
call
call
jmp
fiadd
jo
push
mov
xchg
jmp
mov
mov
or
test
aam
or
push
inc
movs
adc
dec
repnz
in
pop
mov
jno
inc
sub
pop
ds
call
jae
pop
xor
or
sbb
inc
ins
(bad)
fisttp
mov
sub
inc
adc
jle
dec
loop
mov
out
into
mov
not
shl
lock
ret
loope
(bad)
mov
xlat
or
xor
push
or
arpl
fs
pop
push
(bad)
mov
xor
add
leave
popf
xor
mov
fwait
int
mov
cmp
iret
or
test
and
and
dec
cmc
mov
out
clc
sbb
pop
jno
out
or
sub
xor
inc
jle
push
jae
adc
rcl
xor
mov
or
inc
aaa
aam
aam
add
jge
xchg
mov
mov
jo
mov
shl
or
mov
lahf
add
pop
sbb
js
pop
inc
rol
or
push
ficomp
shl
aad
add
jg
(bad)
into
das
loop
fcomip
fisttp
cmp
xor
sub
mov
and
pop
repz
cmp
enter
jle
mov
sahf
pop
and
and
mov
lea
jmp
jl
gs
shr
(bad)
int
hlt
int3
or
pop
(bad)
outs
out
popa
fs
addr16
loopne
rcr
mov
out
sahf
dec
cdq
jl
idiv
xor
cmps
fnstcw
add
and
pushf
xchg
xor
icebp
mov
inc
push
adc
popa
sub
pop
loopne
aaa
or
mov
ret
ret
dec
pop
xor
sti
inc
push
ficom
push
inc
stos
fmul
lock
ja
mov
lds
repnz
std
rep
lds
stos
pop
jno
jne
push
or
mov
sub
sbb
sbb
int3
aas
xchg
inc
aad
jp
jbe
pop
mov
out
movs
stc
push
pop
jmp
fwait
sbb
inc
ins
or
(bad)
(bad)
jae
cld
repz
repz
dec
scas
mov
pminsw
mov
push
xor
data16
pusha
jmp
pop
pop
bound
mov
dec
(bad)
call
cmp
and
retf
icebp
shl
pop
push
daa
sub
cmps
sub
xor
pop
jb
jp
jle
test
call
push
ret
or
faddp
jg
or
inc
stos
dec
xor
mov
inc
in
add
fild
std
data16
jne
pop
mov
pop
push
jae
loope
mov
jle
inc
neg
stos
sbb
repz
mov
sub
dec
ds
pushf
repz
add
sbb
in
mov
shl
sub
and
dec
in
cmc
jb
push
cmp
not
mov
sbb
mov
(bad)
xor
vunpckhps
repz
out
dec
outs
xlat
fist
cli
jmp
mov
xor
pop
pop
add
cdq
xchg
les
jb
call
mov
cs
pushf
xor
xchg
aad
les
cmp
mov
mov
xor
into
stos
mov
enter
je
jmp
mov
jmp
test
inc
bound
retf
test
mov
sar
mov
ins
(bad)
sub
or
sub
jp
adc
adc
push
xor
fadd
lea
jnp
mov
rcr
mov
xor
inc
dec
stos
mov
cmp
mov
dec
and
(bad)
fsub
jae
leave
rol
cwde
adc
push
jb
outs
mov
repz
xor
xchg
inc
cmp
mov
and
stc
fldcw
imul
dec
js
ins
adc
retf
in
sbb
pop
sbb
shl
pop
mov
and
out
add
cmps
daa
dec
call
adc
lock
cdq
outs
inc
loop
fwait
mov
pmulhuw
inc
pop
data16
cmp
pop
or
(bad)
rol
add
xchg
push
(bad)
mov
push
and
aaa
nop
and
mov
fs
mov
les
push
pop
sti
stos
push
xchg
icebp
pusha
and
(bad)
push
mov
sti
dec
sub
mov
scas
mov
xchg
inc
rcl
push
cmp
pop
pop
bound
sahf
daa
dec
inc
lock
jp
mov
inc
sbb
out
mov
jp
imul
sub
mov
jns
mov
fild
adc
(bad)
pop
call
adc
xchg
or
(bad)
rol
in
push
add
fidivr
cdq
pop
or
push
pop
xchg
xor
int3
xchg
lock
xor
sub
xchg
pop
in
mov
pop
pop
fwait
int
fwait
or
daa
les
out
dec
out
lods
imul
cmp
inc
push
mov
lea
push
jl
dec
and
test
adc
mov
pop
int3
xchg
out
div
xchg
xlat
fwait
pop
push
je
xchg
stos
jecxz
push
push
mov
fs
data16
fcomp
das
mov
test
int3
and
inc
xchg
nop
adc
dec
ins
sbb
push
sub
(bad)
jns
mov
mov
aam
or
aas
fisttp
cmp
enter
mov
loope
ss
ins
jb
mov
cld
arpl
dec
out
iret
mov
fcom
out
add
retf
mov
xchg
pop
inc
xchg
sahf
jl
pushf
loop
mov
clc
push
mov
leave
ficom
and
cld
mov
or
outs
xor
jno
sub
dec
add
ds
cmp
and
out
test
push
mov
push
xchg
or
xchg
push
icebp
and
mov
cmp
xor
xchg
mov
fcmovu
repz
scas
rcl
xor
fidivr
les
jns
iret
cmp
jmp
inc
adc
xchg
jmp
mov
cwde
cmp
pushf
jnp
sar
mov
mov
inc
retf
push
sub
push
sub
xor
mov
push
in
bound
iret
aam
jne
fnsave
outs
mov
lds
cmp
sub
rol
push
mov
fstp
mov
jmp
add
push
in
cdq
sub
stos
inc
mov
lods
inc
popa
mov
jle
push
dec
movs
jmp
lahf
call
daa
pop
lock
mov
cmp
(bad)
push
(bad)
push
pop
dec
xlat
dec
or
jns
ficomp
scas
das
ds
jg
add
(bad)
dec
xchg
or
mov
push
xchg
stos
adc
jg
inc
or
std
(bad)
mov
call
ret
mov
into
push
nop
jecxz
pop
jl
out
arpl
aas
sbb
mov
or
fild
data16
mov
mov
and
or
mov
pause
scas
ins
lock
mov
in
xchg
(bad)
jle
out
pop
mov
(bad)
bound
retf
ds
xchg
movs
popf
mov
adc
mov
inc
scas
jae
test
and
je
mov
pusha
push
add
ins
outs
jp
inc
hlt
pop
scas
fdiv
adc
fsub
mov
push
in
sar
cdq
call
mov
into
enter
dec
sbb
shl
xchg
pop
jmp
pop
jge
mov
dec
pop
fbld
jmp
adc
mov
pop
adc
and
inc
dec
(bad)
retf
pop
stc
xchg
sub
pop
push
leave
aam
mov
mov
xor
movs
xor
mov
call
xchg
jo
mov
sbb
jb
call
add
push
add
sbb
lock
xchg
xchg
sub
clc
lea
inc
imul
das
test
cli
cld
(bad)
out
scas
stos
sbb
or
cmc
test
and
mov
cmps
leave
sbb
sbb
rol
ins
cmps
pop
and
ja
xor
icebp
repz
sbb
loope
test
mov
jmp
or
int3
sub
leave
icebp
loopne
jnp
retf
xchg
jmp
dec
mov
lds
out
xor
imul
jns
inc
ins
dec
mov
sub
add
mov
and
pop
fild
add
mov
das
jnp
in
test
sbb
loope
and
clc
xchg
pop
adc
adc
mov
add
or
inc
sub
push
jns
mov
dec
test
sbb
jo
xor
pop
dec
jo
not
sub
mov
sub
dec
retf
das
push
shr
repz
inc
adc
xchg
pop
and
mov
iret
arpl
out
movs
test
into
push
inc
or
addr16
xchg
addr16
mov
cmp
sahf
out
inc
jl
call
xchg
pushf
mov
std
ret
and
mov
jbe
bound
loopne
adc
xchg
jmp
mov
jmp
jg
sar
add
fs
or
scas
and
rcr
sbb
xor
cmp
sti
add
jecxz
push
into
test
sub
movs
movs
aaa
repnz
jnp
push
popa
fdiv
je
test
xor
xchg
enter
fadd
sbb
dec
pop
push
dec
mov
pop
daa
or
mov
movs
mov
jns
imul
sub
push
mov
xor
adc
xchg
ret
shl
fdiv
adc
in
cwde
aad
popa
mov
cwde
nop
(bad)
adc
mov
xchg
movs
add
cld
dec
dec
mov
jbe
jno
cli
jmp
adc
jmp
add
in
and
cli
bnd
pop
out
icebp
icebp
and
mov
add
les
xchg
mul
mov
xchg
adc
or
fimul
movs
push
mov
mov
mov
push
scas
mov
data16
pop
pop
fdivr
cld
(bad)
mov
xchg
lods
mov
cmp
frndint
cmp
add
mov
nop
push
jne
jmp
xchg
pop
aas
dec
ja
fs
test
mov
out
xchg
xor
int
add
add
lods
pop
sub
adc
js
mov
push
inc
mov
enter
push
out
out
shr
mov
or
cmps
adc
pop
loopne
and
scas
imul
out
mov
scas
ficomp
pop
xchg
mov
test
out
sbb
or
or
retf
icebp
add
mov
xor
scas
lods
sub
add
mov
adc
outs
cli
mov
xchg
cmp
mov
and
ins
out
les
and
les
mov
je
sbb
adc
cld
add
mov
mov
adc
test
xchg
(bad)
dec
mov
jb
pop
addr16
xor
jbe
xlat
sbb
movs
enter
inc
fnsave
cmc
retf
adc
xor
enter
aam
pop
xchg
int3
pop
mov
xor
in
inc
add
xlat
repz
bound
pop
mov
les
imul
test
xor
call
and
inc
push
ss
and
adc
mov
mov
out
out
movs
add
jmp
popa
pop
fstp
jnp
and
loopne
cli
inc
inc
int3
sub
stos
xchg
ret
test
mov
xchg
call
cwde
push
leave
or
(bad)
(bad)
arpl
jg
push
xor
jb
mov
into
lea
icebp
pop
loope
jmp
fs
aam
aas
test
cmc
(bad)
loope
and
clc
or
mov
xor
xchg
nop
inc
mov
sub
cmc
nop
ds
and
jbe
push
push
shr
sbb
jns
pop
add
repz
out
mov
ror
jb
and
inc
sbb
add
and
iret
cdq
mov
cmp
imul
sbb
test
cmps
mov
not
bound
cmp
mov
loopne
out
push
push
add
jge
pop
(bad)
mov
imul
mov
and
mov
xchg
shl
(bad)
cmp
inc
xchg
ins
mov
jmp
mov
js
add
xacquire
sbb
or
inc
add
xchg
mov
stc
lahf
add
and
not
stos
movs
push
sbb
push
test
dec
push
pop
int3
or
dec
int3
mov
call
es
and
in
jb
inc
popf
pop
jmp
sbb
aam
outs
imul
adc
test
out
pop
into
and
outs
cli
dec
call
retf
push
call
jl
mov
sub
inc
stos
imul
pop
inc
sub
push
fadd
push
test
ds
pushf
imul
imul
pop
aaa
je
test
mov
xchg
out
adc
fnstcw
pop
enter
mov
push
pop
fidivr
retf
sbb
inc
mov
cmp
inc
pop
(bad)
cs
mov
fidiv
mov
adc
les
push
das
icebp
cmp
retf
ss
push
jns
addr16
cmp
aam
repz
add
push
fsubr
pop
add
mov
fcomp
dec
jle
leave
ficom
sub
out
je
shr
add
sti
(bad)
clc
sbb
mov
and
jecxz
xchg
ins
xchg
jne
xchg
mov
out
inc
sbb
jecxz
mov
xchg
sbb
dec
outs
(bad)
retf
fld
mov
bound
fs
loope
xlat
xor
pop
dec
jmp
dec
cmp
dec
dec
ficomp
sbb
xor
daa
aas
scas
pop
cmp
outs
sbb
xor
(bad)
add
jecxz
in
cld
stos
cli
(bad)
(bad)
ds
call
(bad)
ins
pop
xor
aad
sbb
or
dec
add
lea
dec
fisubr
pushf
test
pop
pop
bound
adc
or
test
pop
test
jb
xchg
cmps
cmps
xchg
push
outs
ins
out
or
shl
dec
test
mov
mov
loope
push
mov
xlat
push
daa
lods
mov
pusha
push
imul
aas
and
mov
cdq
enter
(bad)
adc
mov
hlt
out
icebp
dec
pop
lods
inc
cs
scas
xchg
adc
or
pop
pop
or
push
in
mov
push
pop
sbb
imul
add
mov
scas
adc
pop
pusha
mov
test
dec
ja
mov
test
sub
sbb
mov
retf
or
ret
push
cmp
mov
scas
pop
in
mov
icebp
gs
add
pop
inc
sbb
sbb
xor
xor
loopne
pop
dec
mov
inc
push
and
test
(bad)
sti
outs
call
outs
popf
inc
cld
cmps
pop
add
cli
std
sar
cmp
rcl
add
aad
(bad)
adc
clc
and
lea
jno
mov
xor
push
rol
out
out
fs
movs
xor
mov
jg
inc
and
mov
popf
cmp
test
dec
xchg
pop
jnp
pop
lods
and
loop
sbb
mov
add
mov
pop
or
inc
sahf
jmp
sub
repz
mov
xor
fdiv
loopne
sbb
in
dec
mov
sbb
push
push
repnz
jno
mov
push
jbe
mov
jmp
add
sbb
sub
lods
mov
push
cwde
ficomp
mov
add
dec
leave
mov
sar
inc
fstp
cmps
ins
aam
stc
mov
fimul
and
and
cld
into
in
test
push
fistp
repz
ins
sbb
mov
cs
jge
mov
ficomp
mov
sbb
in
fdiv
hlt
nop
outs
call
fild
outs
cmp
push
dec
pop
jb
xchg
(bad)
(bad)
xor
neg
(bad)
mov
jns
push
imul
and
cmc
cmp
ja
push
pop
ins
mov
push
(bad)
mov
add
test
cmp
pop
in
push
mov
add
xor
xor
arpl
pop
dec
stc
cmp
xchg
mov
mov
fild
sub
cmp
stos
enter
jo
aas
arpl
cmp
das
loopne
das
in
aaa
adc
xlat
mov
div
sbb
inc
outs
pop
ins
pop
sub
out
in
inc
std
movs
mov
sti
dec
or
stos
popa
sbb
hlt
(bad)
jge
popf
ror
cmp
xchg
outs
out
xor
in
jl
sbb
lock
push
inc
jmp
(bad)
mov
adc
lock
dec
dec
test
jnp
xchg
sub
sbb
aam
test
mov
int3
dec
sar
push
cs
arpl
and
mov
lea
aad
pop
inc
xchg
(bad)
(bad)
out
mov
push
mov
or
add
inc
xor
pop
inc
cmc
jns
frstor
sub
cmp
cld
sbb
imul
retf
adc
loopne
and
stc
leave
mov
mov
dec
hlt
lahf
cmp
inc
inc
repnz
mov
cmp
mov
pop
mov
(bad)
outs
jecxz
and
shl
(bad)
sub
popa
mov
xchg
mov
cmp
enter
aas
sti
mov
jge
xchg
leave
mov
xchg
mov
stos
push
adc
mov
rol
popf
xchg
in
(bad)
and
sbb
push
not
adc
jmpw
xchg
dec
ret
mov
out
popf
xor
fnstsw
inc
pop
mov
lea
movs
jg
imul
push
std
mov
mov
test
mov
faddp
sbb
out
dec
add
add
pop
mov
xor
pusha
or
cmps
pop
ss
push
jp
and
les
iret
stos
xchg
sbb
jmp
call
xor
mov
mov
out
aaa
jno
imul
dec
mov
dec
hlt
loopne
xchg
cld
or
loope
push
push
push
push
jg
mov
out
cli
cmp
pop
in
pop
add
fsubr
fstp
je
push
test
inc
xor
ins
je
inc
sbb
xor
arpl
mov
sar
add
and
jge
lods
xor
add
imul
mov
sub
jle
mov
jne
cmc
or
jmp
enter
mov
or
push
sti
sbb
or
inc
mov
mov
lea
cmc
retf
cmp
inc
inc
pop
sbb
pop
xchg
and
jo
ror
dec
adc
xchg
sti
pushf
jmp
xchg
neg
cs
sub
mov
and
(bad)
lock
mov
cmp
(bad)
ror
test
lds
int3
jg
pop
pop
addr16
xchg
stos
mov
mov
xchg
mov
jbe
stc
scas
std
pushf
pusha
enter
xchg
sti
jb
retf
shl
shl
pop
pusha
leave
div
jmp
sub
retf
and
cmp
scas
or
pop
xor
mov
push
xchg
add
dec
ror
pop
pop
push
popf
and
jmp
imul
out
cmp
fild
cmp
ins
daa
gs
mov
jne
fmulp
stos
pop
mov
add
int
inc
sub
mov
push
inc
jmp
cs
sbb
xchg
xchg
push
mov
mov
or
iret
sahf
hlt
mov
(bad)
shl
cli
ins
test
fldenv
(bad)
stc
ret
imul
retf
icebp
push
aad
not
xchg
shl
es
pop
ret
hlt
lods
rcr
jbe
fiadd
dec
jo
adc
jb
call
jb
mov
pop
jae
in
in
loopne
imul
pop
mov
cmps
fnstcw
sbb
inc
outs
mov
pop
and
pop
jmp
sbb
int
mov
mov
fldcw
(bad)
int3
pusha
sbb
jmp
data16
add
sub
push
mov
ror
ficomp
push
inc
movs
(bad)
jl
js
mov
popf
xchg
lock
adc
and
mov
jb
jle
jne
in
call
jns
or
aaa
popa
add
push
push
push
cwde
mov
or
and
or
push
leave
retf
pop
in
test
cld
arpl
fcmovnu
cmp
push
pop
test
push
push
sbb
jae
sahf
aad
nop
dec
icebp
sbb
jns
xor
mov
cld
xor
xor
inc
xor
das
push
leave
sbb
jne
dec
inc
inc
fld
movs
push
cmps
cwde
test
xlat
sbb
mov
xor
(bad)
mov
and
mov
mov
inc
xchg
popf
in
and
or
or
fidivr
rol
cmps
adc
out
pop
mov
(bad)
cmc
push
stc
cmps
xchg
xchg
push
and
jb
push
jb
push
nop
imul
dec
pop
call
aas
sub
add
mov
pop
mov
jp
shr
test
je
mov
sub
adc
cwde
iret
aaa
scas
and
lea
popa
fld
mov
pushf
xor
sub
fimul
sbb
test
mov
xchg
adc
stos
xchg
inc
rcl
(bad)
arpl
dec
(bad)
cmp
stos
dec
movs
pushf
mov
jmp
push
push
inc
xchg
lods
or
iret
das
fsubr
and
cmp
test
aaa
fcom
lock
jo
out
retf
sbb
push
test
out
dec
xchg
xor
jle
pushf
fimul
jnp
dec
mov
pop
fcomp
push
mov
rcr
or
mov
in
cmp
fsub
ins
js
inc
cmp
xor
xchg
dec
xchg
pop
(bad)
cli
push
xor
dec
not
sbb
in
loope
fwait
or
bound
mov
xchg
cmp
loop
push
push
dec
sub
aaa
(bad)
mov
(bad)
loopne
test
xchg
outs
loopne
add
inc
xchg
ret
cmp
dec
div
inc
sub
and
lods
push
out
jg
shr
cmp
or
nop
xor
sub
fld
cmc
inc
pop
psrld
dec
inc
mov
or
push
scas
mov
or
push
inc
aad
mov
cmps
int
or
cwde
push
(bad)
and
push
fs
shl
cld
jp
sbb
ror
imul
push
mov
cdq
nop
fwait
into
and
mul
popa
sar
push
cmp
jecxz
xlat
cmp
leave
or
mov
push
into
mov
push
dec
sub
out
mov
pop
in
fnstsw
sub
add
cmp
nop
lods
jae
xor
mov
dec
das
mov
mov
inc
cmp
repnz
outs
xchg
mov
cmp
int
js
data16
(bad)
xor
push
fsubr
add
idiv
mov
inc
jmp
xchg
mov
out
stos
jmp
mov
push
sbb
imul
repnz
xchg
mov
push
and
inc
push
mov
push
dec
ins
movs
je
inc
vpsrad
loop
sub
adc
cdq
sub
fdiv
mov
(bad)
xchg
xor
movsx
sbb
retf
dec
dec
loop
inc
fild
rol
lods
cmp
xchg
cmp
fld
fstp
leave
push
retf
push
cmps
mov
fadd
and
push
pop
lods
cs
out
pop
and
and
idiv
ins
sbb
xor
lock
xchg
push
scas
adc
adc
xor
(bad)
pushf
fbld
jns
xor
ror
cdq
stos
and
call
jl
out
outs
lea
cmp
test
or
push
add
lods
retf
sbb
sub
xor
aam
push
call
loope
leave
loope
sub
sub
or
iret
fnstenv
scas
das
jg
dec
pop
pop
dec
inc
enter
ss
push
jno
push
pop
adc
(bad)
into
pop
out
stc
xchg
data16
fst
sub
mov
pop
ret
fucom
inc
and
pop
call
add
xchg
setl
xor
jae
add
cmp
loopne
jle
sub
test
test
test
repnz
or
xor
inc
xchg
jmp
ret
jge
xchg
fwait
cs
pop
cwde
xchg
xchg
imul
jno
mov
aad
pop
dec
sbb
dec
sahf
push
add
pop
fsubrp
imul
xchg
add
mov
pop
lods
popf
push
popa
lods
lds
dec
pop
xor
cmc
sbb
add
jns
pop
xchg
or
and
imul
(bad)
pop
mov
fsubr
pop
inc
add
call
mov
pop
outs
pusha
pushf
stos
jne
inc
in
push
out
mov
dec
or
xor
jb
ds
or
sub
jno
mov
pop
bound
cmc
retf
xchg
sbb
xor
in
cmp
mov
popf
or
and
int
aas
fsubr
(bad)
sar
mov
fdivr
sub
enter
ds
pushf
ja
xor
aad
jmp
int3
call
cmp
push
xchg
cmp
or
lahf
xchg
les
sub
loopne
sar
adc
nop
stos
push
push
lahf
xor
cmp
pop
stos
jne
dec
lock
fmul
cmp
add
dec
inc
icebp
add
dec
mov
or
jmp
push
add
add
test
mov
dec
sbb
adc
in
or
pop
jl
scas
add
mov
mov
mov
mov
xor
popf
inc
xor
mov
pop
(bad)
(bad)
jbe
movzx
mov
dec
rol
(bad)
imul
daa
xchg
and
outs
aam
rol
sub
arpl
jecxz
add
pop
lods
xchg
mov
jle
and
call
jno
cwde
scas
fadd
pop
sbb
pmulhuw
push
lds
mov
mov
imul
call
mov
mov
test
pop
test
inc
(bad)
iret
inc
add
ror
add
dec
pop
or
inc
sar
push
pop
in
adc
dec
cmp
enter
sbb
loope
adc
mov
mov
mov
in
fisttp
cmp
sub
or
fist
test
das
or
jo
mov
cld
dec
jbe
xchg
mov
sub
cmps
push
sub
aaa
add
lahf
sbb
pop
es
push
pusha
(bad)
or
push
ret
ins
inc
sbb
push
xor
mov
sti
sub
mov
pop
and
ins
in
retf
loope
sub
adc
mov
sbb
jo
pop
dec
shl
xchg
je
xlat
mov
in
sahf
out
enter
fcomip
jmp
or
cwde
pushf
mov
iret
xchg
add
aas
or
mov
push
mov
mov
jle
push
jne
inc
cwde
sbb
mov
or
iret
pop
mov
sub
pop
push
dec
mov
movntps
sti
fld
push
or
mov
jle
neg
jle
aad
int
mov
rcl
pop
jns
aam
mov
mov
mov
jecxz
arpl
mov
or
cmps
xchg
hlt
or
pop
out
mov
adc
mov
popf
fwait
test
adc
stc
xchg
sub
inc
ret
xchg
add
mov
mov
das
in
or
adc
xchg
sti
jnp
ds
ss
dec
pop
pop
js
xor
(bad)
jmp
mov
mov
stc
repnz
int
push
inc
in
test
(bad)
pusha
repz
push
das
enter
push
js
(bad)
jne
(bad)
retf
jb
dec
pop
mov
in
xor
int
fld
fwait
or
(bad)
cs
jne
add
xor
punpcklbw
fisub
jecxz
adc
inc
jo
or
cmps
mov
xor
ins
mov
std
repz
ins
sbb
push
jno
sub
add
jo
cmc
xlat
je
jg
repz
xor
inc
arpl
push
mov
cwde
push
shl
dec
pop
call
sar
mov
sub
jns
idiv
out
aaa
add
test
jg
mov
shr
inc
jbe
mov
ficomp
fiadd
add
clc
add
out
arpl
push
mov
inc
loopne
pusha
xchg
push
cwde
rol
cmps
lods
fwait
inc
cmp
scas
cmp
xchg
adc
pusha
sbb
xchg
sbb
lock
pop
fld
xor
lahf
xor
jmp
call
pop
mov
lock
mov
rcl
scas
jbe
je
xchg
pop
and
xchg
cmp
call
jbe
pop
push
adc
data16
inc
dec
mov
push
hlt
scas
call
(bad)
loop
stos
cmp
and
sar
in
loop
in
out
and
add
movs
dec
jge
pop
pop
fcom
stos
(bad)
pop
in
jp
adc
stc
cs
shr
aam
and
add
sbb
std
sub
mov
iret
push
aad
icebp
push
ja
movs
addr16
int3
dec
mov
jns
pop
(bad)
popa
add
test
push
rcr
fwait
sub
jmp
inc
das
rcl
lock
ds
fistp
repnz
adc
dec
and
mov
cmc
rcr
push
inc
pop
cwde
jecxz
mov
xchg
stc
je
dec
sbb
inc
out
jae
in
jmp
push
mov
icebp
(bad)
icebp
jmp
jge
(bad)
adc
ror
fadd
push
or
loopne
repz
inc
dec
test
(bad)
std
mov
leave
sti
repz
(bad)
mov
xor
or
jno
xchg
xchg
pop
cmp
stc
ds
(bad)
mov
cmp
das
push
fst
jl
imul
mov
and
or
push
popa
jbe
push
sbb
iret
mov
pop
xchg
mov
cmp
sub
pusha
push
pusha
and
sbb
rcl
ins
sub
movs
sub
dec
pusha
xchg
ins
cs
cmc
pop
dec
cmps
mov
cwde
test
push
xchg
loope
call
stc
mov
popa
retf
and
pop
jae
cmp
adc
cdq
push
jle
mov
mov
clc
idiv
inc
mov
mov
and
lods
sub
rcr
mov
mov
rcl
je
out
test
stos
fsubr
iret
shl
dec
mov
push
xor
xor
jecxz
retf
es
or
cld
pop
inc
adc
jmp
push
adc
adc
xor
push
dec
xchg
rcr
fucomi
movs
shl
iret
repnz
and
ss
popf
rcl
cli
jle
addr16
inc
cmp
out
sub
sti
mov
cmp
mov
inc
repz
jno
lock
or
test
pop
cmp
lods
sub
int
leave
sar
pop
inc
cs
xor
popa
aam
xor
(bad)
pop
mov
test
stc
lea
add
xchg
pop
mov
ds
mov
and
seto
popf
scas
mov
loopne
dec
(bad)
(bad)
inc
iret
jne
cmp
pop
aas
xor
ds
outs
sbb
push
jle
jb
sti
pop
mov
retf
fdivr
fcomp
inc
aad
cmp
repz
cmp
call
es
mov
sub
xor
not
lahf
fstp
xor
push
xchg
fs
sbb
push
push
mov
jmp
push
sbb
adc
fcomi
adc
xchg
test
push
in
cld
mov
popaw
arpl
dec
mov
inc
push
adc
push
and
sub
ja
xchg
inc
mov
cmp
daa
push
imul
dec
fidiv
fs
dec
rcr
inc
xchg
sbb
or
fnsave
ret
mov
jmp
std
and
fsubr
pushf
popf
inc
jmp
sbb
jg
mov
jmp
nop
popf
adc
ss
bound
lock
aad
imul
outs
out
jne
(bad)
or
cmp
dec
popa
sub
out
mov
out
xchg
lahf
das
pop
and
jbe
pop
call
push
dec
(bad)
or
sub
sbb
adc
jmp
pusha
jge
pop
inc
cmps
or
mov
dec
add
jne
ins
cmp
sbb
shr
inc
push
push
ss
xor
icebp
aas
jne
pop
and
ds
inc
xor
sub
fwait
lock
pop
repz
mov
icebp
movs
loopne
push
sub
mov
aas
sti
lods
pop
push
mov
pop
stos
sbb
inc
push
cmp
stc
sub
sbb
lods
cmp
mov
lods
icebp
mov
jmp
leave
mov
inc
pop
(bad)
jle
rcr
dec
cs
es
mov
inc
pop
popa
sbb
add
xor
(bad)
leave
and
mov
das
scas
cmp
(bad)
xchg
pop
loop
popa
mov
test
call
sub
in
sbb
jne
int3
retf
pop
xchg
fadd
popf
(bad)
inc
aam
dec
arpl
repz
dec
xor
int
mov
ja
iret
pop
jns
jmp
push
and
inc
sub
sub
jge
adc
out
mov
mov
movs
push
movs
mov
sub
call
int
inc
ss
repz
ret
cs
mov
dec
or
mov
fstp
fucomip
cmp
cli
sub
jnp
push
jbe
sub
imul
sub
aad
inc
ret
ret
mov
sbb
or
xchg
loopne
fstp
jae
xor
in
push
jl
add
and
ror
xchg
aam
mov
outs
addr16
stos
fprem
test
cmc
into
out
pop
fwait
nop
mov
inc
ror
cmp
bound
(bad)
(bad)
fsubrp
arpl
data16
call
ret
cli
jbe
dec
or
sahf
or
dec
jmp
ror
pop
adc
outs
sub
imul
sbb
ret
cmps
sbb
xchg
ss
add
mov
rol
cmp
pusha
repz
xchg
push
(bad)
adc
pop
pushf
jne
popf
xor
jg
adc
sbb
movs
lahf
jle
sbb
mov
jmp
or
sar
jae
xchg
or
inc
jecxz
aas
loop
mov
inc
lock
jp
pusha
mov
fwait
js
mov
call
jge
pop
ins
in
loope
ins
stos
es
cld
sub
pushf
daa
jno
js
ins
movs
mov
sbb
in
push
leave
mov
es
int
hlt
mov
push
adc
imul
shl
inc
lods
sbb
adc
mov
cdq
pop
push
adc
imul
sbb
mov
sub
loopne
retf
cmp
and
jmp
stos
in
scas
icebp
(bad)
or
push
and
sub
push
adc
sub
sbb
pop
jb
and
xchg
mov
aas
(bad)
push
xor
adc
xor
adc
dec
cmp
dec
adc
mov
jns
jbe
aam
repnz
jae
inc
push
mov
ja
lods
aaa
arpl
jbe
sub
retf
(bad)
mov
loop
xchg
fcmove
ret
fldenv
(bad)
outs
clc
inc
mov
xchg
or
gs
or
ins
jo
imul
xor
cwde
cmc
mov
mov
sub
cdq
xchg
out
mov
push
push
es
out
jns
mov
mov
scas
inc
xchg
add
xchg
cs
xchg
inc
es
imul
inc
jle
xchg
gs
out
mov
test
pop
repz
outs
loope
imul
jle
jecxz
mov
or
daa
(bad)
cmp
cmp
jp
pop
jge
out
inc
loop
(bad)
in
pop
cdq
arpl
test
or
(bad)
aam
jnp
mov
lahf
inc
ins
ja
daa
not
mov
mov
mov
mov
push
jmp
out
retf
call
arpl
pop
cmp
out
push
lods
clc
and
cwde
int
mov
retf
imul
mov
and
std
add
push
mov
dec
jp
es
push
loope
ret
cs
jne
inc
retf
rep
jmp
stos
mov
test
mov
sub
add
adc
test
push
adc
sub
out
retf
mov
(bad)
(bad)
or
xor
add
stos
dec
jnp
push
xor
and
call
jmp
pop
push
out
repz
push
jmp
in
pushf
rol
dec
inc
lock
imul
xchg
sbb
cs
std
xor
push
pop
xor
outs
jge
pop
aad
jg
out
fcom
leave
sub
mov
inc
inc
or
stos
loopne
add
add
sbb
pop
fucomp
sahf
adc
jns
int
out
sbb
pop
pop
inc
lods
xor
in
addr16
inc
inc
pop
fwait
adc
neg
js
(bad)
sar
aad
cwde
fxch
pop
mov
(bad)
stc
sub
xor
out
pop
pop
jl
jne
adc
mov
add
xchg
mov
cmps
and
lods
jmp
in
sub
inc
fild
jno
jmp
dec
test
mov
hlt
mov
dec
sbb
inc
pop
mov
jl
add
rol
and
outs
enter
cmp
push
xchg
rol
ins
jbe
sahf
mov
test
inc
(bad)
adc
in
push
cwde
pop
(bad)
js
push
cmp
stc
call
cmp
sub
(bad)
push
cdq
and
packuswb
sbb
or
cmp
pop
pop
or
lods
mov
or
into
ja
mov
(bad)
jb
cmp
mov
dec
jb
cbw
in
(bad)
jp
mov
or
add
cmove
leave
call
pop
inc
imul
fadd
lods
pop
clc
popf
and
paddsw
ss
xor
dec
sub
iret
rcr
push
(bad)
inc
and
mov
mov
or
icebp
(bad)
test
mov
dec
inc
mov
and
fild
push
fwait
jo
repz
xchg
int
in
sbb
dec
lds
jmp
int
mov
mov
mov
ins
loopne
scas
xchg
lock
sub
mov
pop
lahf
cdq
mov
jl
mov
xchg
out
inc
in
loopne
push
jns
pop
and
adc
sbb
scas
inc
mov
stc
fisub
shl
bound
xchg
mov
mov
jmp
add
xor
xor
and
movs
out
or
out
inc
jl
lods
leave
push
pop
jmp
pop
aam
dec
into
mov
stc
pop
push
mov
inc
mov
xchg
cld
inc
repnz
jmp
fisttp
push
cmp
iret
pop
std
les
imul
mov
nop
adc
mov
gs
nop
ins
ja
xor
cld
pop
inc
bnd
mov
dec
pop
cmps
inc
inc
sub
test
arpl
inc
sub
sbb
and
and
or
push
addr16
cli
out
cmp
pop
gs
push
mov
mov
loopne
loopne
mul
mov
fwait
jno
and
dec
cmps
aam
add
call
lods
mov
test
loopne
out
movs
loop
cs
cdq
push
cmp
std
dec
mov
cli
pop
mov
mov
test
pop
call
pushf
in
fisub
jg
jecxz
dec
fidivr
vpextrw
lds
cmp
lds
sbb
scas
cmp
push
xor
mov
out
mov
jp
xchg
retf
dec
in
inc
das
mov
inc
jo
pop
shl
enter
xchg
movs
mov
dec
add
call
fadd
add
daa
mov
push
xchg
cdq
mov
jecxz
movs
jmp
mov
sbb
push
xor
dec
sbb
fisub
sub
sbb
idiv
push
cdq
ins
mov
inc
cwde
sub
push
rcr
mov
push
sbb
xlat
mov
lea
add
cmp
aaa
sub
mov
hlt
and
jmp
jge
mov
fistp
adc
in
and
adc
das
mov
xchg
add
xchg
sub
or
mov
sbb
mov
sbb
xor
pop
push
popf
add
(bad)
ins
cmp
test
push
inc
push
(bad)
outs
fucomip
sbb
and
je
je
stos
(bad)
in
and
dec
jne
jmp
and
jecxz
in
aas
sbb
cmc
(bad)
jp
xchg
in
adc
retf
jbe
jnp
fiadd
pushf
cld
add
pop
ins
(bad)
ins
les
dec
out
push
es
dec
arpl
gs
and
test
mov
dec
mov
ins
push
push
xor
das
jbe
out
jmp
sar
sbb
call
sahf
mov
pop
or
dec
jl
ds
push
mov
push
xor
mov
cmc
adc
add
add
in
cmp
xlat
mov
sub
dec
xor
into
ins
clc
mov
xor
pop
lods
sbb
adc
sub
daa
mov
mov
cli
leave
loopne
xchg
call
rcl
or
adc
fst
ror
or
imul
inc
sub
into
jp
(bad)
call
stc
call
lods
cmc
jl
dec
hlt
test
mov
jle
sbb
icebp
cmp
jge
mov
xlat
js
cli
aad
in
in
inc
lods
adc
mov
rcr
mov
aaa
sbb
(bad)
jp
mov
ins
push
int
test
iret
mov
call
sub
out
movs
call
sbb
add
inc
dec
adc
movs
jnp
daa
cmp
dec
and
js
mov
mov
xchg
add
xchg
xor
sub
jns
stc
xor
adc
inc
test
rcr
xchg
jmp
aas
cmp
inc
(bad)
aas
sbb
scas
ret
sub
ds
mov
(bad)
add
call
jne
cmp
mov
cmp
mov
lods
enter
mul
cmp
aam
pop
aaa
fwait
fwait
xor
sbb
(bad)
fldpi
loop
neg
cli
es
xchg
or
inc
mov
mov
sub
in
pop
pop
cdq
into
add
inc
pop
gs
test
sar
hlt
jmp
push
bound
sbb
jp
jns
fnstenv
or
push
pop
js
pop
jmp
mov
mov
dec
or
scas
aaa
lahf
(bad)
push
out
sbb
dec
pop
pop
rcr
xchg
out
(bad)
je
sub
jns
push
mov
fiadd
dec
adc
rcl
mov
mov
mov
mov
sub
lahf
jl
lea
in
cmp
ins
cmps
pop
sar
mov
test
inc
and
ror
jg
sub
inc
je
lods
enter
push
or
je
jns
sub
or
xchg
push
inc
inc
movs
out
xor
rcl
in
mov
sar
mov
ins
out
pushf
sbb
sbb
cmps
scas
dec
mov
fsub
cmps
(bad)
aad
(bad)
clc
outs
and
test
inc
pop
mov
dec
jnp
in
ds
inc
push
adc
jno
out
mov
add
hlt
ror
jg
dec
test
and
fisubr
pusha
das
(bad)
pop
(bad)
mov
push
sub
xchg
leave
lock
das
fild
fs
mov
pop
adc
push
pop
iret
and
into
mov
jbe
inc
call
or
ret
in
scas
outs
mov
das
jnp
or
mov
mov
lock
push
movs
push
push
addr16
cmc
mov
pop
fcomp
nop
or
inc
mov
punpckldq
and
imul
pop
sbb
mov
out
ins
rcl
inc
xor
or
push
xor
sub
fdivr
not
cmp
sbb
mov
int
dec
and
das
pop
or
inc
shl
mov
xor
aad
adc
mov
sub
addr16
add
mov
and
mov
int
enter
cmc
dec
cmps
mov
jmp
xchg
mov
ror
mov
retf
aad
dec
inc
in
add
pop
jmp
mov
pushf
cwde
inc
aad
and
and
sub
nop
inc
xor
mov
lds
data16
imul
loop
and
add
inc
outs
and
addr16
iret
in
jno
outs
sub
xchg
sbb
aas
enter
in
sar
or
and
cmc
mov
out
push
xor
in
add
stc
test
xor
jo
pop
pop
mov
lods
arpl
sbb
nop
icebp
push
or
fs
jns
mov
out
xor
or
pop
and
xor
inc
movs
cld
popf
add
cmps
aaa
clc
jmp
(bad)
dec
mov
push
dec
pop
xlat
pop
outs
nop
cmp
xchg
jl
jmp
clc
mov
ja
cmp
cdq
pop
outs
mov
pop
cmp
out
fisttp
sub
hlt
sbb
fidiv
ins
test
in
mov
mov
push
(bad)
push
add
js
xchg
daa
pop
stos
scas
nop
in
push
movs
add
cmps
sbb
adc
sti
sub
sub
push
pop
sti
test
mov
sti
aam
jae
jne
je
inc
xchg
mov
xor
add
dec
dec
or
xchg
ret
aas
jnp
aam
add
repnz
bound
push
std
cmp
enter
mov
sub
in
mov
pop
int
cmp
pop
popf
add
xor
adc
addr16
sub
mov
leave
xchg
and
sub
and
out
lahf
adc
dec
rep
pop
inc
int
sar
stos
push
mov
mov
mov
or
imul
aaa
pop
pop
pop
or
jle
movs
scas
sar
fwait
xchg
inc
in
in
shr
fld
and
data16
imul
lock
or
pop
ja
jb
jo
dec
xchg
fldpi
xchg
push
jmp
push
idiv
cld
imul
xchg
cwde
fmul
(bad)
into
add
and
dec
cmc
loope
ds
mov
leave
xor
idiv
jae
or
push
jae
lds
test
stos
xor
fs
addr16
pop
push
loope
mov
pop
or
(bad)
jns
xor
sbb
(bad)
push
idiv
or
pop
(bad)
push
nop
sbb
mov
fild
add
in
xchg
fstp
mov
push
mov
pop
push
sbb
add
sbb
out
jecxz
ins
pop
cmp
movs
mov
in
fwait
into
add
out
daa
mov
fst
xchg
repz
movs
lds
adc
sbb
sbb
leave
aaa
xor
cmc
or
pop
xchg
ja
or
(bad)
jl
repz
sbb
cmp
pop
push
arpl
int3
xchg
es
push
stos
retf
mov
inc
icebp
(bad)
push
nop
and
mov
shl
xchg
test
jne
cmc
inc
cmp
iret
push
scas
inc
dec
aam
pop
and
mov
mov
daa
push
mov
outs
ret
cdq
pop
bound
pop
retf
pushf
inc
ins
adc
mov
rol
iret
sti
push
gs
xchg
in
stc
and
fs
aad
mov
stc
pop
xor
push
or
outs
mov
push
sbb
(bad)
sub
lahf
scas
mov
sub
leave
pop
cmp
(bad)
in
into
inc
mov
mov
dec
lahf
outs
test
pop
mov
repz
and
(bad)
repz
sub
repnz
mov
dec
arpl
cmp
ret
adc
dec
cmps
xor
adc
mov
popf
mov
in
push
mov
cmp
into
and
mov
in
lods
push
pop
cmp
mov
dec
mov
mov
sti
push
test
pop
and
clc
pop
xchg
adc
pop
(bad)
fisubr
and
pop
jp
inc
mov
pop
js
test
out
cmp
repnz
pop
mov
and
ficom
xlat
push
push
cmp
pop
outs
cmp
jns
jo
(bad)
aad
in
push
push
(bad)
push
xchg
retf
xlat
adc
lahf
icebp
rcl
inc
pcmpeqd
ret
sahf
sub
ins
sbb
mov
add
mov
fidivr
cmp
jl
data16
out
mov
xchg
rol
rol
lahf
call
iret
rcr
ins
enter
add
je
and
test
xor
repnz
inc
pop
enter
in
jecxz
arpl
xchg
xor
aad
cmp
jmp
cwde
shl
mov
stos
dec
jle
arpl
data16
mov
aad
inc
outs
jg
clc
sbb
outs
pop
cwde
scas
test
into
push
scas
cwde
cdq
inc
ss
xor
dec
iret
push
mov
pop
sbb
adc
jb
adc
nop
(bad)
cli
mov
jae
push
mov
push
pop
push
cs
aad
ret
add
test
adc
adc
cmps
mov
and
outs
mov
xchg
mov
mov
pop
xor
push
ror
lods
pop
imul
sbb
fwait
mov
mov
out
cmp
sub
rcl
sbb
int
arpl
push
(bad)
jge
cli
scas
fist
test
out
xor
fisubr
or
in
sbb
cmp
push
leave
inc
adc
ja
pop
(bad)
mov
ja
mov
imul
dec
ins
scas
out
cmp
jmp
mov
push
adc
jne
enter
and
sub
das
fisubr
int3
mov
push
ret
mov
sahf
ret
push
cmps
ins
push
int3
jmp
test
mov
adc
out
xor
mov
(bad)
fwait
pop
inc
push
mov
and
jne
cmp
dec
push
je
mov
mov
mov
test
iret
fisttp
into
fwait
test
mov
push
mov
sbb
(bad)
adc
mov
jns
js
sbb
xchg
lds
ret
xchg
stos
iret
mov
aas
cmp
popf
popf
jp
pop
imul
fcom
addr16
mov
sub
xor
les
and
mov
pop
push
pop
mov
add
mov
imul
dec
inc
mov
push
cmps
pop
inc
add
in
inc
stos
call
std
push
sbb
xchg
stc
icebp
test
gs
fsubr
and
dec
push
aaa
shl
or
and
push
cmp
retf
xchg
xchg
fmul
dec
ror
dec
mov
jmp
pop
(bad)
mov
xor
test
clc
dec
cmp
cld
call
ja
shl
adc
sub
repnz
cld
pop
div
inc
and
jge
lahf
xor
push
(bad)
xchg
arpl
das
sub
nop
sub
push
add
pop
adc
(bad)
mov
lahf
pop
leave
test
adc
jb
xor
(bad)
mov
inc
test
sbb
stos
dec
inc
retf
push
arpl
sti
addr16
hlt
pop
imul
loopne
push
leave
sub
mov
ret
stc
sti
lahf
imul
scas
mov
xchg
pop
enter
es
jne
xor
pushf
call
std
sti
xchg
lds
or
(bad)
push
push
(bad)
(bad)
loope
(bad)
cmps
enter
or
test
mov
pop
cli
dec
cdq
sti
std
adc
into
arpl
mov
mov
add
aaa
cmp
sub
lods
inc
inc
movs
test
sub
fcmovne
leave
pop
stc
outs
push
jbe
jns
fmul
jl
mov
lahf
outs
cld
mov
bound
pop
popa
es
stos
fnstsw
adc
or
mov
jge
push
add
test
adc
xchg
inc
xlat
call
add
stos
inc
(bad)
fs
fs
mov
(bad)
jg
adc
or
pop
pop
shl
pop
xchg
push
xor
div
sub
pushf
add
push
fsubr
bound
jmp
mov
inc
nop
push
push
jle
(bad)
or
in
int
add
push
imul
inc
mov
pop
es
rcr
test
mov
jo
jbe
cdq
add
iret
jmp
or
je
mov
shl
sub
jle
cmp
dec
outs
or
mov
mov
aad
mov
mov
or
cmp
or
and
iret
sub
cmps
in
jp
and
fwait
cmps
ins
mov
int
add
popf
jbe
adc
push
es
push
mov
mov
sub
or
out
pusha
jle
cmp
cmc
jno
fnsave
fmul
add
inc
mov
or
jmp
and
scas
(bad)
cmp
imul
rcl
or
aas
add
dec
aad
add
out
jns
add
inc
or
jo
push
and
fild
ret
js
stc
and
mov
jb
mov
sbb
ins
retf
int
movs
arpl
hlt
inc
ins
jbe
mov
inc
rcr
arpl
imul
test
pop
sbb
jmp
call
es
and
int
retf
repnz
lods
adc
arpl
neg
repz
add
ins
out
xor
mov
push
xchg
dec
lods
mov
jno
xchg
outs
cmps
cmp
or
and
rcr
jge
or
(bad)
xchg
sbb
jmp
cli
xchg
mov
pop
xchg
(bad)
fcmovu
stos
loope
xor
ins
lods
pop
outs
or
inc
xchg
jno
inc
sub
jmp
sti
out
or
movs
dec
inc
adc
or
loopne
test
popf
movs
fisub
ins
iret
rcr
jmp
arpl
popf
push
mov
aas
test
xchg
push
inc
ds
or
pop
cmp
xor
mov
mov
stos
into
push
fs
adc
nop
jae
outs
xchg
lds
jmp
cli
les
sbb
add
inc
cmp
aad
pusha
and
ins
int
(bad)
rcl
mov
dec
cmp
in
enter
popf
xchg
adc
ror
adc
jne
or
or
in
icebp
sbb
lea
ss
lds
dec
jns
hlt
and
jb
in
or
push
jp
mov
retf
pop
rcr
or
or
mov
cmp
mov
ja
push
sub
test
mov
xor
(bad)
inc
(bad)
bound
rcr
push
and
mov
aam
dec
ins
xchg
inc
fbld
in
xchg
dec
cdq
gs
test
cmp
mov
cmovo
nop
lods
push
add
(bad)
pop
sar
retf
fcomp
jne
adc
fxch
jae
pop
mov
pop
mov
call
mov
adc
les
xchg
ss
les
dec
sub
pop
inc
ins
push
inc
lea
jbe
(bad)
dec
xor
bound
ss
and
outs
mov
aad
js
pop
adc
jne
adc
jae
adc
mov
in
stos
aas
sti
jbe
inc
mov
jbe
jns
sbb
aam
push
clc
aas
popa
pop
jp
sub
sbb
or
cli
xor
push
xor
mov
(bad)
call
test
push
aad
fsub
pop
xchg
sbb
and
sub
clc
and
xchg
icebp
loope
into
xchg
pop
imul
icebp
neg
icebp
(bad)
fs
xchg
rol
out
cmp
xor
hlt
push
or
sbb
(bad)
cmp
ret
(bad)
std
inc
mov
mov
dec
outs
dec
xor
mov
scas
(bad)
adc
lds
movs
mov
xor
dec
xchg
aam
lock
in
mov
pop
sti
or
xchg
aad
nop
fimul
inc
cli
mov
mov
fst
vmwrite
lock
pop
aam
loop
mov
xchg
daa
popf
scas
test
sbb
or
xor
add
xchg
stos
or
and
call
imul
jp
sub
sbb
adc
aaa
int3
nop
mov
sbb
or
push
mov
test
(bad)
and
inc
lds
add
adc
jo
inc
mov
jb
xchg
jb
pop
inc
mov
jmp
repnz
mov
popa
in
rdtsc
lods
jg
pusha
inc
dec
mov
faddp
add
test
pop
sahf
hlt
ss
xor
pop
(bad)
jmp
daa
cmp
mov
mov
mov
sahf
(bad)
jmp
push
enter
dec
enter
and
fucomp
js
fmul
jecxz
and
add
cld
cs
mov
dec
cmp
sar
mov
jmp
adc
test
inc
ror
in
scas
push
shl
repz
jl
mov
shr
adc
mov
(bad)
push
rcl
pop
cmp
ins
int3
fbstp
stos
imul
cmp
imul
adc
cli
adc
xchg
pop
dec
aaa
inc
and
bound
push
cli
sar
adc
fwait
pop
data16
test
lock
aas
pop
adc
sub
pop
dec
mov
cmp
fcmovne
icebp
stos
push
pushf
pop
mov
loop
fsubr
repz
jmp
jl
outs
push
(bad)
cld
inc
and
push
addr16
mov
xor
mov
inc
adc
cmps
dec
mov
mov
cmps
loopne
mov
test
or
pushf
and
mov
cmc
mov
jns
pop
jp
lds
(bad)
ds
inc
fwait
push
push
repz
inc
lods
int3
pusha
fist
cwde
sub
cmp
push
jo
aas
or
gs
in
xor
pusha
adc
test
xor
not
ins
xor
push
int3
push
dec
cmp
test
jecxz
das
and
mov
cli
pop
mov
or
inc
fwait
cdq
fwait
jp
push
jmp
pop
dec
push
mov
repz
movs
mov
daa
js
mov
or
pusha
fadd
test
mov
or
cmp
mov
ss
test
outs
add
inc
sub
pop
add
jbe
fcom
pop
mov
ds
cdq
fwait
or
jnp
in
popa
xor
mov
mov
push
xor
add
push
not
lea
scas
repz
and
inc
add
xchg
mov
lds
stc
adc
mov
jp
push
pop
fs
xor
(bad)
test
ret
sub
push
dec
mov
and
gs
pop
mov
inc
mov
cmp
pop
adc
loop
lods
push
add
cmp
dec
cmp
jmp
(bad)
test
out
and
fwait
icebp
jmp
call
add
ret
shl
(bad)
ds
popf
push
sub
aas
aad
mov
mov
fwait
lods
ja
pop
mov
add
push
jo
xor
in
push
mov
outs
pop
hlt
and
test
data16
movs
movs
sar
cdq
push
fmul
lahf
dec
or
pop
pop
xor
nop
pop
pop
scas
lods
call
mov
sub
add
dec
sbb
sub
mov
and
ret
scas
mov
ins
out
fldcw
mov
and
stc
fldcw
retf
pushf
jmp
mov
dec
add
frstor
pusha
cld
test
mov
push
add
xchg
ss
xlat
nop
push
sbb
sahf
pop
ins
stos
push
mov
sbb
enter
(bad)
rcr
xor
and
push
lds
ja
cmp
pop
les
push
out
retf
and
cmovns
jo
(bad)
dec
lea
arpl
cli
div
mov
ret
fistp
mov
out
mov
pop
dec
dec
enter
adc
sbb
call
push
lahf
dec
xor
mov
cmp
mov
bound
pop
into
push
sbb
jle
push
(bad)
sbb
cmp
cmp
add
xchg
call
shr
xor
pop
dec
jno
pop
jle
jmp
fdivr
test
xor
cdq
ins
in
xchg
loopne
adc
ja
add
mul
div
pop
inc
loope
dec
shr
push
push
inc
movs
scas
push
add
inc
push
mov
fdivr
std
cmp
jle
push
enter
test
sub
out
fnstcw
xchg
adc
xor
dec
dec
in
xor
(bad)
mov
push
into
movs
sub
cmps
add
movs
pop
retf
mov
shl
mov
cdq
aaa
sti
pop
mov
mov
lods
dec
sahf
outs
lea
mov
adc
lods
rol
fld
xor
cmp
push
cmps
movs
(bad)
jo
shl
stc
cdq
pop
push
scas
mov
pop
pop
push
pop
hlt
mov
lods
adc
ja
and
rol
lds
cdq
sbb
add
test
loope
fnstcw
mov
and
sti
movs
cmps
fisttp
xor
mov
mov
loop
dec
pop
push
aad
jbe
int
mov
neg
std
xor
ret
push
cmp
cwde
cmc
(bad)
ror
shl
in
sub
or
outs
cmp
sbb
aad
push
aaa
sar
add
pop
push
mov
mul
hlt
xor
mov
ins
push
not
jmp
pop
fistp
int
(bad)
cmp
sbb
bnd
xor
or
xchg
pop
fild
jno
movs
fild
jecxz
pop
cli
push
pop
(bad)
mov
fxch
stc
and
push
repz
in
adc
sub
or
sbb
(bad)
push
sbb
and
or
jge
cmp
test
lods
fs
xor
sbb
ret
bound
(bad)
addr16
idiv
xchg
test
ds
push
sub
xchg
ss
xor
mov
fsub
in
test
mov
call
jmp
push
setae
rcl
mov
and
adc
push
test
out
(bad)
add
push
xor
into
xor
(bad)
or
dec
mov
cmp
inc
jg
inc
aas
add
stos
push
data16
call
nop
dec
pop
dec
shl
(bad)
mov
scas
into
push
jns
fld
outs
in
adc
daa
xor
mov
retf
mov
cmp
fwait
lods
fwait
inc
popa
dec
fs
xchg
jmp
mov
fistp
or
shl
ins
sub
fldenv
test
imul
aaa
jb
pushf
adc
mov
inc
and
movs
retf
fisttp
push
sub
adc
addr16
and
adc
out
add
jns
ror
fimul
shl
push
cmps
mov
mov
push
cmp
shl
pop
fwait
out
movs
dec
cmc
loope
rcl
xchg
push
fwait
xor
lahf
inc
xlat
mov
pop
or
mov
and
cmp
mov
xor
mov
cli
jl
mov
pop
retf
(bad)
ret
xchg
mov
(bad)
ror
add
push
sbb
mov
(bad)
adc
in
outs
lds
movs
sahf
add
jge
imul
dec
jl
cmp
pusha
cwde
push
das
test
push
js
arpl
in
xchg
or
lods
call
jnp
add
jmp
inc
out
add
(bad)
sbb
stos
mov
es
adc
jg
mov
lea
jg
push
outs
cmp
ins
test
cmc
fmul
adc
push
inc
cmc
jno
lock
jl
dec
fsubr
arpl
ds
call
xchg
jns
dec
push
pusha
imul
xlat
js
pop
dec
push
fimul
in
cmc
out
mov
cld
xchg
sbb
test
(bad)
lock
adc
fistp
xor
and
ffreep
rcl
xchg
push
aas
push
pop
mov
add
add
xchg
pop
daa
dec
xor
lea
cmc
and
out
xor
popf
(bad)
jle
push
inc
mov
dec
test
xor
in
loope
and
and
ja
sub
mov
xor
shl
neg
cmps
push
lock
push
mov
cmps
dec
jle
test
jp
in
push
pop
fadd
aam
push
call
cmp
fst
pop
dec
rcl
xchg
in
add
push
mov
in
cmps
mov
test
push
ss
add
mov
add
cmc
inc
adc
int3
mov
adc
sub
cwde
mov
cli
xor
inc
jo
mov
xor
fidivr
inc
(bad)
cmps
xor
mov
xor
aad
jl
xchg
in
sbb
pop
pop
stc
dec
pop
neg
xor
scas
xor
pop
push
repnz
add
add
out
test
les
int
dec
mov
cdq
xor
push
or
or
aaa
jg
(bad)
sub
jl
js
js
xor
stos
mov
xor
int
sub
mov
movs
mov
push
fidivr
idiv
imul
push
mov
cmps
lods
dec
rol
push
jb
mov
outs
mov
sub
sbb
cmp
fsubp
mov
cmps
adc
enter
cmc
jae
xchg
int3
lods
(bad)
int3
jne
jp
sbb
push
leave
arpl
push
mov
cli
mov
movs
push
stos
bound
cmps
movs
leave
push
or
imul
lods
fiadd
or
cdq
nop
rcr
outs
mov
add
mov
sbb
sub
sahf
inc
push
or
sub
inc
or
add
sar
repnz
push
pushf
mov
mov
cmps
sub
jne
cs
adc
push
push
sbb
add
movs
push
or
push
xchg
scas
es
es
pop
mov
cdq
and
or
jmp
jmp
sbb
scas
sbb
jno
adc
inc
inc
push
ja
xor
xor
push
fadd
int
xchg
imul
jle
inc
push
mov
lahf
loopne
(bad)
mov
sti
cwde
mov
cwde
pop
out
int3
push
hlt
dec
xor
xor
xchg
xor
lea
popa
shl
mov
cdq
(bad)
xchg
xchg
dec
gs
push
pusha
sub
jecxz
pop
ins
call
repnz
xor
loope
mov
call
jne
test
(bad)
daa
mov
sbb
mov
jnp
xchg
push
or
mov
sar
sub
jmp
(bad)
jg
stos
or
outs
or
(bad)
xchg
push
xchg
or
fs
movs
ret
add
sahf
sbb
mov
js
sub
repz
pop
cmp
cmp
nop
push
or
inc
pop
push
int
and
inc
and
outs
mov
mov
inc
test
les
in
popa
mov
adc
adc
mov
call
ins
xchg
fwait
pop
dec
mov
cli
push
(bad)
mov
jnp
xor
xor
xchg
jmp
retf
lea
jmp
jne
and
xor
shr
scas
fidiv
add
push
jnp
jmp
add
push
xor
das
in
out
mov
sbb
lods
mov
xor
inc
out
lods
scas
mov
mov
jge
mov
clc
aad
push
jmp
jo
xor
loope
mov
mov
cmp
or
cmp
xchg
jns
shl
fwait
cwde
mov
cmp
sub
mov
jl
pop
sbb
inc
xchg
add
inc
xor
fdiv
xor
mov
sub
nop
pop
outs
repz
mov
je
ret
or
sbb
mov
lods
push
mov
mov
jp
xor
movs
add
fmul
imul
dec
iret
das
sbb
mov
(bad)
std
cmp
(bad)
cld
scas
nop
test
jmp
mov
cld
(bad)
(bad)
out
and
sbb
pop
xlat
mov
mov
adc
mov
(bad)
push
mov
icebp
add
mov
lahf
jp
fisubr
cdq
imul
aad
ficomp
arpl
fstp
xor
lock
mov
push
jmp
jae
push
sub
mov
mov
and
jnp
push
int
jns
jmp
jmp
rcl
jp
push
lock
xchg
mov
mov
dec
mov
jecxz
arpl
jg
jg
pop
dec
test
outs
mov
jmp
pop
into
jmp
adc
push
stc
(bad)
mov
out
and
or
adc
or
inc
cmp
xchg
jnp
jbe
pop
(bad)
das
bound
pop
ret
dec
mov
jmp
xchg
push
mov
outs
sub
pusha
cmps
and
mov
cwde
call
fs
inc
jecxz
mov
js
in
inc
ja
aam
ret
jmp
test
fild
shl
mov
cmp
jmp
or
xchg
fidivr
test
sub
fdiv
iret
addr16
call
(bad)
push
mov
pop
scas
ret
xlat
dec
(bad)
outs
loop
cmp
sbb
add
and
aad
jle
test
fiadd
inc
fild
jecxz
or
mov
(bad)
pop
adc
push
mov
push
movs
cmp
test
dec
push
inc
xor
mov
div
xchg
cli
in
out
sub
data16
(bad)
ss
stos
jmp
ss
adc
frstor
mov
mov
sbb
leave
sbb
mov
das
cmc
ret
retf
pop
push
adc
(bad)
rcl
loopne
xchg
xchg
jmp
int
xor
mov
sub
or
inc
jae
leave
std
add
inc
inc
scas
cmp
xchg
mov
fldenv
mov
cmc
add
repz
cmp
push
gs
mov
inc
jmp
(bad)
(bad)
push
in
add
xlat
fwait
mov
(bad)
sbb
xchg
dec
ret
dec
mov
sub
sub
adc
enter
(bad)
mov
jo
call
(bad)
and
or
and
aas
or
cdq
pop
sub
dec
ficomp
or
add
jmp
in
pop
or
lods
fcmovnb
hlt
ins
adc
lods
aas
stos
pop
nop
popa
dec
or
fldenv
das
pop
adc
push
ret
dec
adc
cmp
iret
popf
shl
jmp
daa
xor
push
sahf
cmc
(bad)
outs
dec
aaa
rcr
clc
jmp
pop
pop
repz
movs
mov
dec
outs
dec
adc
clc
(bad)
jle
fldcw
and
xlat
mov
shr
ins
les
and
mov
std
and
(bad)
sbb
mov
idiv
aas
gs
pop
cmp
or
ja
outs
cmps
dec
jns
ret
xor
cmp
pop
inc
adc
push
mul
in
cmp
in
and
shr
xor
retf
and
jno
xchg
push
or
cmc
icebp
neg
xchg
push
(bad)
repz
jp
pop
outs
mov
shl
loopne
jae
pop
fsubr
push
or
dec
ins
movs
adc
push
aaa
pop
inc
cmp
loopne
adc
mov
leave
in
jns
mov
adc
mov
add
xor
pushf
gs
stc
mov
daa
das
mov
lds
and
in
dec
call
repnz
lock
cmps
inc
pop
outs
cdq
mov
repz
loop
lods
nop
mov
fcmovbe
and
cwde
test
mov
cmps
jae
jne
std
xor
sub
sar
cmp
pop
inc
inc
jnp
cmp
loopne
jl
mov
sub
add
dec
repnz
daa
push
in
sub
pop
test
hlt
sti
xor
js
cmp
push
jne
scas
imul
repz
cmp
sbb
push
jns
int3
and
clc
inc
sti
stc
mov
jmp
xor
shl
cli
repnz
iret
or
xlat
sub
adc
add
pushf
xor
neg
xor
loop
(bad)
or
cmc
outs
cld
jmp
out
(bad)
mov
mov
lea
mov
adc
sbb
fwait
xchg
mov
outs
in
inc
call
out
test
cmp
cmc
push
inc
(bad)
fcmovu
push
test
outs
daa
scas
xchg
jge
fcomp
dec
xor
stos
ds
cmp
int3
imul
aas
cmc
sbb
icebp
sub
xchg
cmc
jmp
cmp
lahf
pop
jb
cwde
inc
cmp
out
jmp
cmc
ror
sub
pop
xor
je
setge
or
loop
cld
inc
mov
mov
sub
sti
mov
js
xchg
inc
test
popa
mov
clc
jno
or
pop
enter
push
mov
xor
cwde
(bad)
int
dec
repz
xchg
xchg
push
aam
sar
and
dec
inc
xchg
stos
jmp
and
lods
pusha
and
rcr
rol
out
movs
adc
test
(bad)
mov
out
(bad)
push
cmps
jno
jmp
xchg
fdiv
retf
stos
adc
xor
pop
xchg
nop
pop
xchg
imul
(bad)
jg
or
or
and
and
sahf
(bad)
(bad)
dec
std
(bad)
in
sub
enter
loopne
fstp
sbb
repnz
(bad)
xlat
stc
pop
fdiv
rcl
scas
jae
hlt
sbb
jmp
popf
out
out
pop
add
loopne
mov
jnp
dec
cmps
jae
cdq
and
cld
add
fs
lock
xor
enter
dec
lahf
xchg
out
or
mov
and
ins
mov
inc
mov
mov
sub
mov
data16
sti
shr
xchg
jno
fmul
mov
mov
mov
sbb
aaa
push
movs
in
sub
sbb
mov
xor
ss
sub
mov
bound
(bad)
sub
iret
mov
int3
mov
nop
shl
pop
cmps
stos
test
frstor
cmp
mov
mov
or
les
add
sub
sub
sbb
add
sub
mov
dec
(bad)
popa
test
movs
cmp
xor
dec
adc
fsub
dec
cdq
call
xlat
xchg
cli
push
les
add
mov
leave
sysret
push
xchg
inc
lods
push
ds
push
popa
ret
inc
dec
push
xchg
fcom
shl
pushf
jne
nop
pop
lock
mov
push
retf
iret
test
scas
test
neg
scas
push
test
add
cmc
fcom
ds
pop
cmp
ja
retf
sti
push
add
cs
dec
pop
ss
call
mov
xchg
lahf
out
jns
clc
mov
inc
xor
or
xlat
inc
js
in
mov
shl
ins
loop
imul
por
xchg
sbb
(bad)
loopne
adc
divps
mov
mov
(bad)
movs
and
push
jge
iret
jg
aad
ror
loopne
jns
(bad)
or
ret
(bad)
xor
clc
enter
dec
hlt
cmp
test
xlat
mov
inc
jae
cmps
mov
clc
repz
inc
ins
dec
(bad)
retf
ror
mov
lods
lds
add
cs
mov
jno
setae
ret
mov
pop
loope
nop
mov
lds
stc
pop
shr
das
(bad)
jl
or
test
repz
mov
data16
lock
jge
mov
jb
mov
(bad)
mov
mov
jb
pop
xchg
ret
dec
adc
aam
std
pop
mov
ret
ret
jo
mov
pop
or
mov
and
adc
or
shr
(bad)
xchg
pop
daa
cld
cmc
and
mov
ds
adc
xchg
push
ret
cmp
repz
push
xchg
push
mov
jo
mov
fild
stc
js
mov
jecxz
inc
mov
sbb
jbe
xchg
fcom
hlt
inc
lods
sbb
push
enter
int
mov
or
add
bound
jp
pop
(bad)
push
mov
xor
mov
call
cs
adc
push
lahf
cwde
jnp
mov
push
push
nop
lods
push
stos
(bad)
in
pop
and
std
pop
cli
cld
shl
out
cmp
cmp
push
lea
xchg
adc
mov
mov
sbb
xchg
(bad)
jnp
stc
cmp
sbb
in
pop
mov
add
lahf
cdq
jb
mov
aam
cmps
stos
nop
(bad)
mov
push
pop
push
(bad)
jo
push
js
add
sar
push
push
stos
cld
test
xchg
mov
inc
int3
sub
jmp
pushf
push
mov
repnz
jns
pusha
outs
imul
test
maskmovq
idiv
dec
or
icebp
test
inc
sub
mov
test
push
test
pop
xor
ror
mov
mov
mov
test
sbb
aas
jmp
sahf
fsub
push
int3
(bad)
js
cmp
or
push
mov
(bad)
ds
mov
sbb
push
cmp
stc
aaa
ret
rcr
dec
cdq
inc
(bad)
push
inc
sbb
jmp
and
jns
or
and
sub
push
and
ret
pop
popf
test
adc
(bad)
dec
aam
fnstsw
fisub
cli
and
loop
jb
push
test
je
test
adc
or
mov
adc
cs
iret
int
and
mov
pop
sar
(bad)
scas
xchg
pop
scas
addr16
in
aaa
fxch
mov
mov
sar
out
jae
outs
mov
cmp
mov
hlt
adc
push
lds
js
push
cmp
daa
ins
shr
addr16
cwde
jnp
aad
rcr
mov
cmps
mov
mov
(bad)
fisub
add
stos
dec
inc
aaa
dec
dec
adc
xor
push
dec
adc
out
sbb
iret
and
or
dec
push
adc
cmp
sbb
xchg
int
xchg
mov
(bad)
es
loopne
xchg
xlat
(bad)
sub
sbb
out
je
dec
sbb
xor
cdq
(bad)
outs
inc
inc
xchg
cmp
retf
cmp
and
jb
adc
rcr
mov
push
cmp
pop
je
adc
aad
fwait
xchg
ror
mov
in
or
ins
leave
sbb
ss
int
push
out
test
push
(bad)
stc
pop
mov
ret
mov
sub
pop
outs
lods
push
cmc
adc
mov
mov
push
add
mov
fstp
icebp
xchg
and
(bad)
int3
pop
inc
or
jge
cwde
out
aam
cmps
(bad)
aas
push
inc
xlat
jns
cld
cmp
push
sub
clc
pop
jp
loopne
ret
mov
inc
jo
and
(bad)
ins
jl
hlt
mov
add
jmp
in
jle
mov
fwait
sbb
test
loopne
dec
test
data16
xchg
xchg
sti
push
add
dec
js
and
daa
adc
adc
mov
stc
fwait
jmp
ret
leave
or
mov
add
leave
int
mov
loope
stos
add
cmp
int
call
xor
lock
mov
fist
mov
cli
pop
in
shr
sub
mov
int3
ret
rol
stc
mov
int3
cdq
(bad)
loopne
jmp
inc
jmp
gs
push
or
fidivr
cmc
sub
pop
pop
xlat
and
pop
fmul
fimul
iret
(bad)
push
cmps
aad
outs
js
mov
cli
cmp
repnz
xchg
cmps
outs
addr16
push
add
addr16
retf
out
lahf
xor
xchg
mov
(bad)
pop
rcr
sbb
mov
dec
mov
fdiv
dec
adc
pushf
and
cli
xchg
pusha
add
(bad)
(bad)
call
push
xlat
dec
jb
aas
inc
mov
mov
xor
test
adc
mov
stos
mov
test
mov
cmc
cli
pop
inc
jge
push
xor
call
fs
rol
push
mov
add
jge
shl
lods
mov
or
push
jnp
mov
xchg
rcr
test
enter
out
ja
sti
outs
vandnpd
jb
and
sbb
jno
mov
ins
or
fst
aam
fisttp
xchg
lea
shl
push
shl
outs
outs
nop
dec
cwde
jmp
sub
jns
xchg
popa
call
xor
aas
int
xchg
aas
aaa
lds
cmovns
fstp
out
xchg
xor
lea
or
xchg
xchg
jns
nop
aas
in
mov
mov
fdivp
ins
shl
int
xor
mov
cmp
jl
xor
scas
pop
in
call
and
xor
push
push
leave
ja
lods
push
inc
(bad)
sbb
sub
gs
out
fcomp
(bad)
cmc
jmp
xor
mov
fiadd
jns
jp
rcl
lock
sub
sbb
rol
scas
fmulp
stos
pop
sbb
add
sti
or
mov
cmc
jnp
daa
imul
mov
sub
or
or
sbb
ss
pop
dec
lods
adc
js
push
adc
cmp
dec
popf
xchg
into
pop
call
nop
mov
and
not
push
jbe
ja
in
into
test
xor
out
xchg
call
mov
mov
aaa
popa
push
pushf
shr
faddp
or
addr16
sbb
into
fdivr
sub
lahf
retf
icebp
imul
adc
les
ds
call
inc
push
push
fs
or
lds
xchg
inc
xchg
inc
dec
jo
jmp
arpl
jle
cdq
daa
aad
inc
adc
sbb
inc
cs
jns
xor
outs
(bad)
push
or
add
xor
or
sti
xor
inc
mov
pop
(bad)
push
push
(bad)
int3
lock
pop
out
pop
data16
out
push
mov
jmp
sub
add
pusha
fistp
lock
aam
outs
add
add
mov
jns
jne
movs
vmovdqu
push
movs
lods
in
popf
sbb
sbb
push
push
cmp
adc
adc
pop
xor
or
mov
jle
pop
sbb
push
xor
in
jns
pop
add
mov
mov
or
lock
popf
fdivr
or
dec
ins
mov
out
mov
test
dec
or
pop
cld
std
push
stc
pop
adc
or
cwde
xchg
arpl
dec
jle
xor
or
mov
mov
mov
and
clc
xchg
dec
sub
daa
mov
mov
mov
stos
adc
or
dec
aas
adc
cmp
sub
std
mov
pushf
mov
hlt
add
mov
fs
adc
rcr
sbb
xchg
dec
mov
add
jo
lods
sar
push
pop
push
ins
xchg
mov
rol
in
pop
outs
test
push
pop
or
adc
je
xor
inc
pushf
push
cmps
sahf
rcl
jbe
cmp
rcl
arpl
sub
je
cld
add
mov
xchg
xchg
and
cmp
or
dec
out
stos
jb
jb
dec
mov
push
sti
push
cmp
lock
push
int3
imul
dec
fbld
mov
mov
sub
scas
adc
in
sub
aaa
jno
mov
movs
jp
arpl
ins
jns
movs
movs
mov
cs
mov
popa
test
daa
in
sti
or
into
js
pop
movs
jecxz
aad
aas
mul
nop
scas
pushf
or
shl
mov
mov
in
mov
pop
retf
ins
rcl
cmp
xchg
sub
adc
fidiv
adc
push
xor
xlat
pop
inc
xchg
xchg
fisub
out
sub
aaa
repz
(bad)
sbb
jecxz
mov
cmps
jnp
adc
sbb
fwait
mov
fdiv
sub
push
inc
idiv
jecxz
fild
stos
and
stos
inc
xlat
inc
dec
jne
sub
repnz
je
shr
test
mov
inc
mov
es
stc
xor
and
das
in
stc
push
rcl
test
and
or
lahf
movq
ret
fnsave
in
ret
inc
mov
lahf
pusha
lds
xchg
pusha
and
xchg
xor
sub
xor
mov
loopne
sti
in
cmp
loopne
sub
mov
mov
adc
repnz
icebp
fs
push
stc
dec
sub
test
jg
mov
je
push
mov
pop
sbb
shl
cmps
push
cli
mov
hlt
jmp
lds
retf
xor
dec
add
inc
in
and
hlt
scas
add
ret
mov
dec
lock
or
xchg
mov
ins
inc
rol
sbb
fs
xchg
adc
add
sti
push
pop
adc
std
sahf
push
adc
aad
push
lock
pop
xchg
sub
jne
scas
in
mov
aaa
fld
repnz
cdq
cmp
and
push
cmps
int
jl
dec
arpl
cmp
mov
or
dec
push
bound
call
xchg
pop
add
or
mov
test
jo
adc
js
neg
mov
mov
inc
daa
stos
ret
out
sbb
lds
xor
outs
or
clc
mov
scas
enter
mov
in
ret
mov
test
push
dec
and
and
inc
mov
adc
mov
in
call
int
cmp
rcl
ss
cmc
lds
fild
xlat
jp
lahf
ins
mov
iret
pop
mov
test
imul
fisttp
into
jb
xchg
ja
dec
imul
mov
sub
lahf
scas
sbb
stos
sub
push
stos
out
adc
mov
ret
inc
mov
mov
movs
loopne
or
addr16
sub
sbb
les
sub
in
xchg
mov
sub
daa
dec
jo
pop
add
push
jbe
fucomp
mov
popa
and
jge
into
mov
mul
and
pop
loopne
or
inc
adc
leave
cmp
push
sub
and
movs
daa
ins
pusha
or
sete
vpaddb
lds
xor
xchg
dec
dec
fild
lds
call
or
(bad)
sbb
stc
popf
test
les
sbb
or
cmp
dec
mov
push
mov
mov
cmp
call
fisttp
call
cmp
fisub
aas
xor
push
int
mov
stos
mov
and
xchg
mov
cmp
mov
bound
jle
sub
adc
mov
mov
pop
mov
fwait
or
clc
push
sahf
or
test
jae
sub
jbe
mov
mov
pop
push
jno
pop
nop
ds
imul
inc
and
mov
cmps
sbb
and
shr
mov
jmp
pushf
mov
xchg
adc
mov
js
lods
(bad)
mov
xchg
push
std
or
(bad)
in
retf
cdq
data16
loopne
xor
push
pop
in
adc
inc
pop
lods
repz
daa
imul
ficomp
iret
jle
les
loope
adc
push
jl
dec
jge
xchg
cmp
pop
inc
jecxz
cs
movs
pop
out
jg
mov
mov
fild
jno
pop
enter
imul
js
cmps
imul
push
mov
test
and
js
adc
mov
xchg
jp
mov
and
lds
push
dec
ja
adc
xchg
mov
rcl
dec
lods
in
cmp
test
scas
push
in
fs
adc
cmc
in
mov
clc
in
xor
in
js
fwait
cmp
sub
es
in
into
dec
xchg
pop
adc
mov
dec
push
jo
and
dec
xchg
sbb
fidiv
clc
test
pop
mov
jmp
add
inc
lods
mov
xchg
int
inc
mov
cmovne
int3
fsub
into
inc
xor
sub
mov
loopne
in
jp
add
clc
mov
mov
stc
lahf
lock
add
or
cmp
jo
push
xchg
sbb
je
lods
lods
pushf
pop
inc
dec
pushf
sbb
and
mov
push
mov
ja
pop
jecxz
test
mov
jecxz
call
shr
add
ret
sbb
push
jns
mov
adc
inc
fstp
outs
in
jno
cld
out
inc
or
xchg
sti
lods
pop
shr
pop
aad
stos
pop
aaa
add
push
cdq
push
fcom
cmp
cli
pop
xchg
pop
jo
mov
fimul
inc
jl
lods
pushf
out
retf
pusha
ja
mov
sub
dec
cmps
adc
in
or
xchg
push
dec
hlt
inc
cmp
adc
sbb
jb
shl
cwde
(bad)
call
out
int
fs
inc
jp
clc
sub
les
add
cs
jg
dec
add
and
jg
jno
sbb
mov
adc
add
cli
sar
adc
mov
pop
hlt
cmps
jle
jmp
jge
xchg
mov
mov
pop
(bad)
shl
repz
fiadd
push
pusha
loope
sahf
jle
mov
mov
not
rol
push
or
sub
shr
psubusw
inc
inc
jge
in
cmp
dec
inc
daa
cdq
xor
and
mov
xchg
pop
fild
fstp
jbe
mov
repnz
lsl
xchg
mov
push
sub
pop
inc
push
mov
out
xchg
imul
mov
mov
jmp
adc
jecxz
and
cmps
mov
jmp
das
jnp
ja
(bad)
imul
jbe
xor
pop
sub
add
xor
dec
xor
fwait
adc
push
jno
stos
adc
push
push
or
stc
jb
xchg
scas
loope
cmc
xchg
push
add
popf
xor
int
adc
and
inc
mov
fld
loope
mov
or
push
or
bnd
mov
loop
shr
outs
push
mov
jno
sbb
mov
sub
test
pusha
ds
cmp
scas
pop
mov
cmp
pop
dec
push
lock
cwde
dec
outs
and
cmps
xor
pop
int
and
orps
outs
or
sub
xchg
das
sbb
fcom
sub
in
aam
inc
dec
mov
jne
mov
lahf
das
(bad)
ds
pop
or
stos
es
jecxz
lods
cs
mov
mov
mov
push
push
in
cmp
and
pop
popa
fdivrp
mov
fwait
push
js
adc
sahf
js
xor
sub
dec
retf
std
(bad)
sub
xchg
or
out
push
pop
aam
add
add
mov
(bad)
scas
dec
jns
or
cmps
test
rcr
call
(bad)
adc
lea
bound
call
and
in
loop
push
pop
pop
cmp
xchg
in
or
lods
ins
xchg
in
sbb
or
push
fcom
xchg
retf
mov
or
pop
jmp
push
mov
dec
call
(bad)
mov
gs
jbe
jb
dec
cmp
dec
stc
sub
stos
out
mov
mov
hlt
fisttp
fcmovnbe
mov
out
stos
cmp
retf
leave
rol
sbb
and
sbb
mov
(bad)
ins
mov
mov
xchg
mov
ret
push
aad
mov
add
dec
fcomp
cmp
jns
mov
sti
aad
out
frstor
sub
cmp
cli
sbb
(bad)
into
xor
pop
pushf
nop
sbb
sub
gs
mov
sbb
jo
adc
scas
scas
jmp
es
aaa
clc
cs
mov
mov
push
loopne
xor
push
or
sub
mov
and
in
pop
dec
push
lock
jge
mov
inc
xlat
cld
test
mov
push
repnz
add
ins
adc
fistp
mov
fdivr
inc
jb
ins
mov
int3
pusha
and
xor
push
and
loopne
lock
scas
(bad)
pop
adc
and
add
add
call
jmp
neg
ins
push
push
push
pop
mov
into
xchg
jno
enter
inc
cdq
pop
aas
rcr
mov
xchg
mov
cmps
mov
jo
clc
js
lods
and
out
test
jne
retf
xchg
loope
cmp
sbb
and
cmc
je
je
out
sahf
imul
inc
mov
int
jne
push
rol
retf
rol
sbb
jg
xchg
das
iret
add
xchg
test
jb
sar
mov
push
adc
movs
pop
mov
movhps
pop
jecxz
xor
add
mov
sti
jbe
out
sbb
pop
das
repnz
(bad)
sub
or
icebp
je
mov
stos
jb
pop
das
jb
sub
loopne
push
dec
pop
and
xor
lds
stos
inc
cmps
mov
cmp
outs
mov
fild
(bad)
rcl
xchg
daa
mov
mov
dec
out
sub
xchg
test
add
dec
retf
arpl
les
cmp
rol
inc
jle
ret
bnd
jmp
ror
pop
test
xor
fcmovnb
neg
adc
xor
xor
leave
jae
retf
aam
push
sti
stos
cmp
scas
test
push
cmps
imul
jne
lods
jmp
scas
jl
mov
jne
scas
and
sbb
inc
inc
pop
jge
or
sub
jge
sbb
ins
in
retf
mov
jl
add
xor
xor
or
imul
shl
sub
(bad)
stos
mov
hlt
adc
pop
push
jge
loop
and
movs
rcr
jmp
mov
ss
rol
pusha
idiv
adc
mov
mov
xchg
pop
jbe
fild
loope
rcr
ret
outs
test
xchg
pop
in
and
test
rcl
popa
xor
mov
rcl
call
cmp
jbe
jnp
adc
jl
xor
imul
sbb
vpavgw
sub
and
inc
call
jge
pop
(bad)
(bad)
cmps
int
sbb
push
lds
inc
mov
stc
sbb
cmps
and
xchg
test
push
add
ret
mov
cmps
mov
mov
and
stos
std
or
retf
xlat
push
scas
mov
mov
lods
sub
enter
mov
xor
mov
pop
fwait
lods
ret
ss
call
inc
(bad)
stos
iret
push
push
push
mov
dec
push
jno
retf
inc
loop
pop
push
(bad)
jnp
push
sub
jp
pusha
inc
jecxz
fs
cmp
push
jmp
imul
xchg
push
inc
xchg
fsubr
jbe
fmul
add
adc
dec
retf
addr16
lds
rcl
popa
(bad)
and
(bad)
and
cs
call
jbe
xchg
hlt
rol
cli
inc
ss
sub
jne
ins
xor
mov
sbb
or
cli
sbb
int3
sar
mov
xor
into
mov
sub
repz
adc
fwait
(bad)
mov
test
outs
cmp
pop
dec
fisttp
jmp
jbe
addr16
cmp
push
dec
js
in
sti
int3
fidiv
mov
mov
mov
fsubr
hlt
loopne
out
loop
ret
dec
xchg
out
(bad)
or
adc
daa
inc
(bad)
cmp
in
inc
push
jle
ret
and
mov
enter
pop
aas
mov
jb
sbb
fimul
cmp
jecxz
loope
jbe
lea
jg
int3
add
xor
push
aam
add
or
ins
mov
push
shl
mov
fild
and
add
jne
add
aaa
cmc
hlt
add
ror
mov
adc
js
or
mov
mov
dec
or
(bad)
jo
xor
adc
test
cmp
adc
ins
push
push
or
cmc
inc
push
(bad)
test
out
in
and
jae
mov
cmp
add
and
sbb
pop
mov
and
mov
hlt
push
xchg
aas
mov
(bad)
xchg
scas
mov
push
xor
push
pop
aas
mov
cmp
cmps
pop
adc
icebp
(bad)
sti
rol
pop
out
xchg
mov
(bad)
loopne
or
sbb
pop
jae
mov
cmp
inc
arpl
mov
in
jle
mov
sbb
and
(bad)
test
xlat
xchg
bound
mov
outs
push
sbb
jmp
ret
sbb
mov
xor
cmp
int3
int
fs
inc
js
loopne
lds
mov
add
mov
pop
xor
js
movs
fisub
mov
inc
cmp
jl
push
fdivr
fucomi
(bad)
inc
pop
adc
cmp
sbb
iret
sar
imul
mov
dec
pop
cs
repnz
mov
out
adc
push
inc
push
or
mov
stc
dec
nop
lods
stos
inc
inc
ficom
popa
pusha
adc
scas
es
inc
xor
inc
cwde
stos
stc
ins
or
sti
fcmovnu
xlat
aam
lods
call
mov
dec
fbld
lock
xor
sub
cmp
dec
sbb
mov
icebp
or
mov
hlt
out
stos
shr
inc
sti
jns
call
into
jge
dec
popa
inc
icebp
jge
and
dec
cmp
sub
sub
stos
push
mov
(bad)
movs
adc
imul
add
ins
mov
fisubr
test
or
fs
jae
push
outs
int3
loopne
xchg
mov
cld
imul
popa
pop
adc
cmps
add
xor
iret
dec
shr
inc
sti
mov
jns
cdq
outs
imul
rcr
mov
dec
dec
pop
(bad)
mov
pop
out
shr
in
pop
adc
lds
jne
mov
mov
or
adc
mul
(bad)
sti
cmp
push
and
js
cmps
cmp
adc
loope
sbb
mov
sub
les
xor
loop
sbb
loopne
xor
cmp
sub
stos
iret
(bad)
fdiv
shr
call
sbb
pop
xchg
mov
loope
sub
(bad)
jmp
and
es
mov
shl
(bad)
test
into
test
fisubr
mov
test
ror
pop
aad
push
mov
cwde
pop
sbb
sub
xchg
ss
(bad)
xor
mov
xor
adc
outs
loope
sub
add
repz
push
push
sub
stos
aam
add
pop
aas
out
retf
dec
add
mov
xor
mov
jg
fbstp
add
push
(bad)
jmp
daa
pop
mov
xor
pushf
cmps
ror
push
frstor
(bad)
call
dec
pop
sub
cmp
push
inc
nop
fdiv
ins
sbb
lds
pop
xor
cmp
adc
addr16
cmc
dec
mov
or
mov
jae
sahf
outs
loop
dec
daa
mov
mov
jbe
mov
dec
jmp
sub
mov
mov
adc
je
push
ins
inc
lock
pop
(bad)
iret
sbb
test
or
inc
jae
mov
adc
mov
mul
adc
loop
popf
inc
adc
jmp
sub
stos
pop
aad
and
js
jmp
push
cmp
jo
sbb
add
xchg
adc
shl
sti
jp
add
mov
ror
jp
pop
jb
fisttp
in
add
pop
daa
mov
dec
arpl
shl
cld
mov
lds
test
int3
adc
jg
ja
mov
imul
xchg
pop
sti
(bad)
popa
lods
pop
mov
inc
jg
lds
scas
fwait
ret
push
sbb
jl
rol
sahf
sub
mov
stos
in
pop
mov
and
mov
popa
xor
mov
dec
call
adc
fdiv
fistp
xchg
retf
cmp
cld
cmp
int
dec
mov
cs
or
fidivr
ss
push
mov
outs
sub
aas
loopne
dec
clc
sbb
mov
push
(bad)
xor
jecxz
mov
stos
mov
neg
pop
sbb
mov
in
popf
aad
xlat
and
jae
aam
dec
jmp
mov
cs
inc
sub
pop
mov
lahf
or
add
push
add
pop
push
mov
fwait
pop
in
add
fistp
pop
ror
pause
and
xor
in
mov
and
mov
scas
xchg
gs
sbb
pop
mov
xchg
xor
movs
retf
pmulhuw
test
cmp
outs
push
cmps
aam
sbb
out
lds
ret
movs
sbb
js
add
push
and
jg
adc
inc
lds
xchg
mov
daa
pop
icebp
sahf
shl
retf
fisub
cmp
repnz
fnstcw
ins
pop
inc
jmp
cmp
jp
xor
mov
les
jno
sbb
add
in
push
out
sahf
inc
leave
xchg
mov
jge
(bad)
ror
div
ins
push
or
retf
js
shl
jl
in
mov
mov
test
push
repz
jp
shr
cs
push
push
je
pushf
pop
les
fnstenv
mov
pop
push
div
add
clc
test
cwde
jmp
add
sti
imul
xchg
das
jg
adc
xchg
test
lods
xor
call
sub
mov
pop
scas
add
imul
imul
and
sub
cmps
fstp
cli
gs
dec
push
add
in
dec
xor
dec
cmp
sti
pusha
mov
test
mov
xor
add
cs
or
jmp
jno
sbb
dec
dec
pop
adc
add
imul
shr
clc
push
dec
test
mov
mov
or
fnstsw
push
scas
jnp
pop
dec
mov
jo
in
es
lds
scas
outs
lock
pushf
dec
pop
in
dec
push
fwait
add
jecxz
mov
mov
jmp
inc
out
in
out
ficom
stos
popf
sahf
std
inc
ins
mov
movs
es
jb
mov
add
jle
into
fdivr
(bad)
adc
(bad)
adc
jae
mov
(bad)
cmps
mov
lea
inc
mov
dec
test
inc
mov
cmps
pop
xor
push
xor
mov
rol
push
enter
out
sbb
inc
xchg
inc
mov
fstp
xchg
(bad)
and
les
cmc
xchg
lahf
and
push
and
sub
jb
mov
xchg
pop
aam
mov
dec
cmc
fwait
outs
out
push
cwde
sub
cmp
std
lock
mov
sub
jecxz
jae
push
cmps
dec
movs
in
in
retf
sbb
iret
adc
pop
sbb
mov
test
or
and
clc
add
fcmovnu
adc
xor
out
sbb
rcr
into
fs
jae
jbe
or
das
cmp
xlat
mov
test
cmp
add
push
sbb
je
xchg
jmp
in
fwait
xchg
shl
xchg
xor
cmp
or
lea
mov
or
and
fcos
dec
pop
clc
cmps
(bad)
mov
cmp
loope
pop
ror
(bad)
in
cmp
fisubr
dec
mov
sub
fsub
sbb
fucom
fwait
dec
not
hlt
icebp
add
int3
in
mov
push
mov
lea
es
mov
sub
adc
scas
arpl
inc
imul
sahf
push
popf
test
push
aad
sbb
into
retf
jmp
mov
xlat
push
xor
ds
icebp
jl
jne
shr
pop
xor
push
ins
cmp
and
sub
xor
lea
ins
fcmovnu
xor
mov
(bad)
addr16
cld
xchg
std
pusha
mov
mov
movs
rol
repnz
dec
shr
inc
push
xchg
loopne
adc
mov
ret
(bad)
xchg
inc
stos
movs
fwait
push
pusha
movs
stc
in
adc
mov
jb
xor
push
lea
fdivr
sub
enter
xchg
mov
inc
and
xchg
(bad)
pop
fstp
test
pusha
sub
xchg
xor
repz
push
xchg
in
sbb
inc
and
ffree
xchg
popf
add
sub
movs
jge
sahf
cmc
fadd
sub
xchg
adc
mov
sbb
jmp
sbb
aaa
adc
or
jmp
jg
rcr
iret
fsub
add
ja
cmp
int
jg
repz
loopne
jbe
icebp
mov
xchg
(bad)
call
lahf
fwait
sub
leave
(bad)
add
add
mov
cwde
call
add
rcr
outs
sbb
sub
fisttp
add
arpl
mov
or
jnp
mov
scas
movs
and
push
fwait
jge
and
push
or
cmp
rol
das
adc
cli
test
adc
pop
pushf
jg
movs
sbb
or
(bad)
and
dec
jl
std
sub
dec
fcomp
mov
retf
dec
(bad)
arpl
loope
inc
mov
fsub
fcom
mov
mov
lahf
dec
mov
sbb
pop
jge
sbb
fidiv
cmp
in
lds
imul
jns
cli
xor
jmp
loope
in
sti
leave
push
(bad)
hlt
mov
ret
inc
imul
test
test
ret
pop
xor
xchg
mov
icebp
std
sbb
into
cmp
ds
pop
and
sbb
cmp
popf
xor
shl
(bad)
outs
pop
pop
icebp
stos
adc
adc
shl
cwde
pop
mov
and
leave
aad
ficom
push
or
in
or
add
add
push
inc
leave
xchg
sub
aam
or
xor
mov
inc
pushf
xor
pop
xchg
xor
(bad)
loopne
rcl
lods
mov
clc
xchg
(bad)
push
js
idiv
and
mulps
ret
rcl
jae
jl
pop
loopne
mov
je
and
jmp
(bad)
int3
hlt
push
mov
into
pop
jne
mov
mov
pop
daa
(bad)
inc
mov
mov
into
cwde
sysenter
ds
adc
adc
and
jl
popf
xchg
aad
adc
inc
les
adc
jecxz
outs
adc
repnz
movs
fs
sbb
cmp
test
movs
push
out
stc
xchg
inc
add
repz
dec
fisttp
adc
cmp
loopne
jnp
or
push
int
mov
daa
test
ins
stc
fs
mov
mov
xor
or
fstp
and
xor
mov
pushf
add
or
stos
xor
sahf
sbb
xchg
and
push
outs
test
adc
data16
enter
inc
bound
outs
jb
mov
pop
jmp
lea
mov
jns
test
test
(bad)
cli
mov
(bad)
outs
inc
or
popa
inc
inc
xchg
outs
mov
cmp
stc
pop
outs
inc
xchg
pop
dec
mov
test
aam
jno
xor
inc
arpl
(bad)
sbb
xchg
inc
xor
imul
xor
pushf
jno
and
or
scas
adc
pop
cmps
and
pop
sahf
xchg
sub
inc
mov
mov
ss
mov
push
stc
jne
dec
cmp
lahf
in
psubusb
popf
sub
mov
clc
inc
pop
adc
mov
neg
xchg
data16
mov
and
jbe
loopne
repz
jne
scas
daa
jns
mov
cmc
imul
pop
sub
pop
mov
push
inc
int
icebp
sbb
jmp
or
lods
dec
and
and
mov
mov
push
ror
cdq
or
icebp
stc
adc
stos
jmp
adc
je
jmp
sbb
mov
data16
cmps
inc
lods
dec
retw
mov
cmps
lahf
stos
jnp
outs
cmp
fldcw
leave
fcom
adc
fdivrp
push
outs
sbb
int
sbb
inc
push
scas
jg
xor
xor
add
push
push
adc
test
sar
(bad)
bound
and
jns
pop
push
xchg
jmp
sub
hlt
sar
mov
jg
mov
xchg
mov
je
fistp
jnp
sub
sbb
scas
rol
sbb
(bad)
sub
push
ror
xlat
mov
push
inc
sub
out
fld
xor
stc
pusha
shl
jne
lods
pop
in
mov
loopne
outs
in
cld
sti
xchg
sbb
fwait
inc
nop
dec
adc
inc
ret
xchg
retf
pop
pop
cmp
das
or
adc
fcmovbe
or
pop
jo
jmp
or
cli
je
mov
or
shl
outs
ins
cmp
xchg
fild
addr16
ret
test
jle
add
sub
test
cwde
ret
stos
xlat
and
andnps
mov
aad
loope
sub
sbb
adc
inc
js
jmp
pop
or
ss
push
fadd
jno
cmps
mov
or
iret
inc
xchg
dec
mov
loope
inc
int
dec
dec
cmp
mov
mov
adc
imul
dec
sbb
jae
retf
push
mov
inc
push
mov
push
mov
mov
mov
or
push
ins
push
jecxz
jbe
pop
mov
add
loopne
ret
sub
in
jg
aaa
xor
cmp
ret
fwait
dec
test
sub
jbe
or
enter
imul
scas
stc
push
mov
cdq
and
lods
push
mov
(bad)
jle
ja
push
js
test
lahf
ret
retf
pop
popf
loopne
ror
mov
lea
add
enter
inc
add
inc
push
pop
fcom
or
std
cmp
dec
mov
sbb
lea
sbb
loope
cdq
mov
xchg
adc
mov
bound
sbb
jnp
sbb
sbb
mov
jmp
pop
jp
call
mov
les
xchg
sti
xor
push
(bad)
hlt
jae
add
xchg
jb
mov
repz
push
das
shl
and
repz
pushf
gs
retf
(bad)
fisttp
jno
sub
xchg
mov
dec
push
loop
push
push
hlt
adc
xchg
sub
mov
repz
xchg
sbb
mov
ficom
xor
pop
sar
hlt
cs
add
leave
fisubr
sub
sbb
popa
pop
mov
pop
stos
jl
std
lods
sbb
pop
std
pop
add
imul
cwde
retf
jnp
imul
push
cmps
mov
pop
ret
test
and
mov
xor
rol
and
ins
push
(bad)
movs
mov
in
fcmove
not
popa
loop
sahf
dec
int
stos
and
ss
ins
and
test
sbb
jg
jns
push
adc
or
add
dec
sar
retf
sti
test
call
mov
add
js
jmp
pop
dec
cli
cmp
mov
push
xlat
loopne
stc
scas
xlat
adc
add
add
jbe
xor
imul
inc
sahf
xor
mov
or
loop
mov
adc
aaa
ret
loop
test
test
xchg
sysexit
(bad)
jle
xchg
jle
jge
jmp
or
sub
clc
push
test
dec
(bad)
mov
das
push
pop
and
jne
ret
aad
jno
inc
push
jl
iret
jmp
pop
loope
out
mov
xor
call
and
ins
sub
outs
ds
ins
aad
(bad)
cwde
sbb
or
sub
lods
sub
inc
or
test
sub
xchg
shl
bound
mov
inc
inc
cmc
pop
ins
mov
add
idiv
aad
xchg
repz
push
inc
bnd
ret
dec
popa
mov
aad
xchg
stos
repz
rcl
ds
and
inc
pusha
push
loop
pop
dec
fwait
or
call
lods
outs
sbb
leave
mov
jle
aaa
hlt
jmp
mov
cmps
(bad)
pop
imul
imul
add
jl
dec
sub
jb
daa
jns
leave
jg
add
add
aaa
and
and
xchg
xchg
je
jae
loop
iret
fcom
or
pop
loopne
push
stc
les
xchg
out
out
stc
out
(bad)
data16
push
mov
pushf
retf
lds
int
jne
enter
push
xor
fbstp
je
int3
pop
mov
retf
mov
call
sub
adc
cmp
(bad)
aad
sbb
nop
or
sbb
xor
sar
and
sub
mov
out
sub
cdq
jns
sbb
sub
stc
jnp
std
sub
mov
pop
shl
adc
ss
jp
out
and
gs
cmp
xchg
out
aas
into
out
fcom
push
add
push
jg
jbe
cli
and
sbb
rcl
push
adc
pop
cmp
mov
imul
xor
ins
pop
xchg
add
jne
mov
ja
test
pop
int3
cmp
fs
aaa
push
xor
lds
and
aas
mov
jae
movs
fisttp
sbb
sub
push
shr
call
(bad)
jb
jecxz
mov
in
xchg
cmp
mov
int
ins
dec
test
and
hlt
pop
aad
outs
aaa
push
adc
enter
mov
jb
leave
call
add
dec
and
cmps
xor
jno
js
pushf
and
mov
sbb
xor
ret
xor
mov
jecxz
sub
shl
pop
neg
cmps
lahf
test
mov
fwait
(bad)
jo
(bad)
ret
cmp
daa
pop
mov
push
jge
pop
jmp
xor
aam
in
ins
ja
pop
add
push
inc
mov
mov
xchg
ss
jl
mov
cmps
les
sbb
inc
pop
out
shr
pop
xor
xchg
xchg
fisubr
psubusw
outs
iret
jb
inc
fst
sahf
scas
nop
out
cs
xchg
adc
sbb
hlt
lock
mov
ret
jmp
or
mov
xchg
outs
pop
push
xor
dec
mov
outs
inc
sub
adc
jmp
add
inc
xchg
inc
in
xor
lea
sub
jmp
call
mov
out
pushf
mov
scas
mov
lahf
dec
mov
dec
pusha
mov
(bad)
lahf
mul
jmp
repnz
call
add
adc
add
call
call
cmp
xchg
pushf
pop
and
pop
pop
call
fs
and
and
ret
jb
and
mov
cmp
inc
call
(bad)
in
and
mov
jo
and
mov
jno
int
test
inc
add
add
jge
ins
je
addr16
mov
xchg
retf
ds
cmp
aas
(bad)
std
inc
push
aaa
mov
xchg
aad
pop
(bad)
addr16
mov
mov
mov
ds
sub
retf
mov
repnz
das
xchg
mov
shr
ret
out
pop
jmp
(bad)
outs
bound
mov
cmp
rcl
push
imul
mov
adc
adc
aam
stos
jb
lds
jge
add
stc
(bad)
dec
leave
shl
and
xor
(bad)
mov
rcr
push
aaa
je
shl
(bad)
test
cld
and
sbb
gs
es
retf
pop
je
test
loopne
mov
adc
jne
rcr
mov
mov
dec
enter
cmp
imul
add
mov
mov
and
stos
or
jno
mov
fidiv
sbb
fst
lea
xchg
fcom
mov
mov
(bad)
stos
xchg
retf
iret
lods
dec
or
cmps
(bad)
fst
stos
clc
es
test
jns
jae
pop
bound
popa
mov
test
bound
sbb
scas
and
pop
mov
pop
or
xchg
and
push
stos
rcl
ret
sub
push
xor
add
inc
pop
pop
jmp
test
nop
ror
mov
push
call
(bad)
test
mov
iret
mov
xor
push
jb
xlat
sub
mov
test
mov
and
ficomp
lea
sbb
dec
sahf
ret
fbstp
push
mov
inc
and
adc
fs
sti
ret
mov
cmp
dec
fs
aad
retf
pusha
test
sub
mov
nop
lahf
add
call
jmp
cld
stc
dec
lea
test
cld
inc
xor
or
mov
movs
imul
mov
mov
ret
or
inc
jo
xchg
pop
mov
mov
scas
aad
sbb
xchg
(bad)
in
and
mov
inc
movs
movs
adc
or
jo
push
mov
mov
ds
and
pop
jb
jbe
add
adc
cmp
popa
inc
jge
rcl
test
push
inc
mov
push
add
fnstcw
mov
daa
bound
push
inc
dec
cmp
push
in
jnp
and
(bad)
jmp
push
fisubr
sbb
jo
imul
jmp
inc
adc
inc
ss
out
das
(bad)
call
or
or
add
xlat
rcr
sub
jbe
sub
retf
or
or
daa
or
or
add
push
ja
pop
xor
(bad)
cmp
pop
mov
loopne
popf
push
push
pop
repz
je
into
push
mov
jb
cmp
cmc
add
push
call
pushf
mov
xor
arpl
jp
push
gs
fstp
and
push
push
adc
xchg
ret
ret
test
cmc
pop
stos
(bad)
and
mov
lods
out
push
fistp
or
pop
mov
cmp
xchg
fcomp
ins
cmovo
test
dec
popf
push
mov
mov
leave
mov
adc
xchg
ins
jecxz
es
fiadd
jo
mov
dec
lds
pop
jle
jb
stos
mov
and
pop
addr16
test
ffree
stos
lods
push
sbb
or
jae
cmp
and
mov
movs
and
pop
shl
popf
mov
mov
sbb
imul
push
sti
mov
and
scas
adc
mov
mov
arpl
fadd
pop
stos
lock
lds
push
mov
sbb
xchg
jmp
xchg
mov
call
jg
aaa
xor
jne
ja
mov
and
mov
mov
xchg
sub
push
add
ds
and
or
call
push
dec
les
pop
mov
or
sub
inc
mov
(bad)
in
(bad)
gs
jecxz
jecxz
xchg
sub
or
pop
push
fimul
xchg
dec
sub
and
pushf
lea
loope
frstor
push
repz
std
and
inc
popf
or
pushf
call
mov
nop
mov
dec
cmp
ficomp
push
lds
int
adc
xchg
daa
mov
push
push
pop
call
daa
or
mov
jg
(bad)
inc
nop
repz
arpl
xor
pop
fcmove
lock
call
in
movs
mov
les
shl
or
cmp
dec
pop
shl
and
mov
jbe
mov
mov
pop
and
push
mov
sub
lds
pop
(bad)
aas
or
xor
and
adc
and
div
loope
imul
test
ficomp
xchg
fiadd
mov
xor
data16
or
cmp
icebp
sbb
dec
enter
aam
cdq
xor
loope
jae
sbb
aas
test
mov
and
lock
iret
frstor
push
(bad)
jmp
jae
lahf
sbb
pop
data16
jecxz
and
pop
aad
add
push
sbb
xor
es
call
mov
lods
cld
shl
push
cmp
data16
push
ror
popa
data16
test
cmp
cmc
add
push
fild
cwde
push
aaa
xor
pop
hlt
xor
loop
mov
fadd
fimul
jb
ror
addr16
pop
retf
adc
cmps
mov
adc
lods
sbb
sbb
mov
stc
mov
xchg
cli
data16
ins
scas
retf
stc
not
ins
movs
mov
sahf
xor
mov
inc
sbb
ja
test
adc
xor
cld
inc
dec
inc
loop
push
stc
cli
mov
cmc
sti
or
aam
add
push
(bad)
pmaxsw
lods
(bad)
retf
jo
inc
inc
push
lock
jmp
out
pop
inc
fcom
xchg
mov
stc
fdivr
js
icebp
cmp
adc
sub
and
js
or
movs
sbb
aas
mov
(bad)
in
outs
sub
sbb
lock
iret
movs
add
mov
int3
mov
inc
(bad)
xor
cmovl
lahf
retf
xlat
add
sub
jmp
in
pushf
dec
push
pop
cmp
test
(bad)
idiv
jae
pop
inc
loope
jnp
in
sub
add
jp
adc
xor
popf
sub
xchg
pushf
jmp
adc
jl
pop
enter
push
cmp
push
sti
addr16
rol
dec
lahf
call
jns
or
in
popf
mov
out
jmp
dec
xor
fsubr
sbb
repnz
call
jmp
dec
fidivr
(bad)
mul
ret
mov
neg
mov
jmp
addr16
cmp
jmp
xor
mov
cld
ret
cmp
sbb
bound
mov
adc
pushf
mov
cmps
outs
push
inc
into
mov
mov
popf
sub
xchg
stos
dec
ret
loopne
data16
iret
neg
mov
push
inc
lea
or
mov
popa
xchg
and
add
mov
call
mov
out
es
fwait
adc
mov
fsub
xor
inc
pop
arpl
adc
dec
enter
pushf
pop
mov
cli
inc
lea
mov
pop
cmps
fwait
mov
mov
sti
stos
fimul
xchg
xlat
and
pop
push
mov
in
jb
xrelease
push
imul
inc
fld
nop
mov
mov
int3
pusha
xor
jl
mov
cwde
data16
pop
sbb
inc
aaa
std
jno
push
les
jmpw
movs
xchg
ret
jmp
das
cdq
dec
pop
cmovns
jae
or
stc
or
sbb
push
aas
aam
lock
(bad)
xor
shr
popa
xor
mov
fidivr
sbb
adc
sbb
les
retf
jecxz
int3
mov
xlat
xchg
gs
movs
xchg
call
jnp
gs
loop
cli
mov
dec
popf
push
popa
mov
repz
jno
in
sub
or
shr
and
shl
jge
jmp
pop
jp
gs
push
mov
push
mov
imul
mov
movs
xor
xchg
cmp
lock
xor
xchg
in
cwde
inc
xchg
and
loopne
pop
cmp
cdq
jge
mov
aam
popa
repz
jp
int3
hlt
cmp
jb
push
or
jbe
jecxz
xchg
(bad)
aaa
mov
cdq
adc
mov
fild
fcomp
repz
push
int3
mov
xchg
pop
(bad)
daa
mov
lahf
jb
mov
xor
mov
call
add
stos
add
inc
dec
fs
xchg
jp
outs
xchg
or
outs
jb
ror
outs
fcomp
dec
inc
push
lahf
retf
test
add
jge
icebp
or
aas
pop
into
jle
pop
jnp
jge
jnp
mov
out
in
add
aam
stos
xchg
add
cwde
(bad)
mov
lods
xor
adc
dec
das
jle
dec
push
lods
cld
popa
cld
xor
xchg
movs
push
push
mov
movs
jo
fucomp
add
xchg
loop
fdivr
fild
aas
popa
and
cmp
sub
out
and
nop
in
dec
jmp
ror
ins
cmps
cmp
xchg
fdivr
cmps
into
push
push
call
xlat
shl
in
jge
lea
mov
xor
fisttp
xor
gs
and
sbb
sub
xchg
push
or
inc
push
pop
jmp
mov
aam
cmp
xchg
js
leave
push
retf
adc
aam
aaa
aam
mov
sub
inc
mov
jb
push
in
cmp
fmul
scas
fldenv
lea
ins
mov
mov
jbe
push
int
and
fidivr
rcr
lahf
out
mov
aam
jmp
mov
ss
in
xor
sub
das
push
jl
xchg
sub
in
jle
imul
add
call
mov
xor
lea
dec
cmp
stos
sbb
xor
das
inc
xchg
es
int3
int
imul
push
leave
sub
dec
push
xchg
inc
mov
lods
lods
sub
mov
add
dec
xor
mov
mov
fisub
xor
fs
sub
pop
fdivr
sub
lock
or
popa
mov
lock
out
call
in
and
bound
popf
cmp
xchg
cmc
dec
lea
mov
jbe
(bad)
mov
cmp
pop
sti
or
ins
mov
test
xor
inc
imul
jg
aas
scas
lds
mov
cmp
adc
or
imul
mov
cld
sbb
pop
xor
stos
push
sti
jnp
(bad)
or
inc
sub
xchg
push
sbb
ins
pop
mov
mov
hlt
les
cmp
or
push
fdiv
add
xlat
xchg
into
mov
hlt
fwait
ins
push
jb
test
mov
data16
jl
repz
retf
cli
mov
mov
icebp
(bad)
(bad)
jmp
rcl
sub
and
lock
xlat
inc
mov
mul
mov
sub
cli
dec
enter
bound
and
into
pop
pop
pop
pop
(bad)
push
inc
outs
push
xchg
jnp
or
cmps
fsub
add
jae
and
adc
lods
sub
dec
jns
pop
retf
(bad)
push
sub
add
ds
adc
mov
cmps
dec
lods
jp
ja
dec
dec
inc
cdq
dec
pop
mov
cmp
je
mov
cmp
cdq
pop
mov
xchg
cmp
inc
adc
sub
pop
movs
lods
out
cdq
sub
lods
dec
pop
and
and
call
ret
inc
icebp
cwde
les
lods
mov
fisub
rol
dec
jo
arpl
ja
int3
gs
cmp
adc
dec
xchg
jle
iret
(bad)
cmp
add
push
pop
ja
fnsave
call
add
call
sar
xchg
xor
push
ds
inc
ins
mov
or
sub
jmp
shr
cmc
xor
rcr
dec
fsub
pop
lods
jg
(bad)
sbb
mov
sbb
call
retf
shr
adc
inc
inc
pop
jmp
fs
push
dec
add
ret
pop
fisub
mov
loopne
aad
(bad)
movs
pop
call
mov
test
add
push
(bad)
das
sbb
mov
test
jnp
dec
sub
dec
in
jae
fld
sbb
mov
pop
addr16
lods
in
dec
retf
inc
int
or
xor
cmp
adc
sub
out
(bad)
sbb
inc
mov
add
movs
and
pop
fwait
retf
stos
mov
outs
dec
cmps
jbe
xchg
out
ret
mov
jp
jl
jmp
mov
pop
aam
cmp
sub
(bad)
nop
fdiv
out
and
dec
mov
jo
fidiv
mov
ja
mov
stos
jmp
idiv
lds
sbb
dec
arpl
cs
xor
add
sub
ret
les
stos
ja
or
mov
cwde
sbb
scas
aaa
popf
xor
and
fld
push
lahf
dec
jnp
lods
popa
add
cmps
in
ss
lods
cmp
or
lods
mov
or
mov
outs
pushf
xlat
push
push
push
pop
aaa
ss
imul
in
es
push
sbb
jmp
pop
jp
fist
enter
lahf
sbb
scas
pop
jae
cld
or
cmp
xchg
sub
jmp
adc
or
xchg
or
lods
or
mov
ficomp
xchg
clc
mov
cmps
inc
or
jmp
iret
cmp
push
adc
in
xor
clc
jae
outs
mov
add
call
mov
fs
inc
not
and
stc
enter
ret
jmp
or
pop
xchg
mov
mov
popf
into
mov
xchg
xchg
lock
cmp
fimul
dec
pushf
cmp
test
cli
mov
inc
add
gs
xchg
push
adc
sub
cli
xchg
mov
xlat
psrld
mov
xchg
inc
inc
pop
addr16
mov
push
push
jne
adc
in
shl
jle
(bad)
in
mov
cld
cli
loope
(bad)
stos
jg
jnp
hlt
xor
(bad)
xlat
int3
dec
xor
or
dec
ins
les
mov
out
pop
jge
mov
retf
jmp
push
dec
mov
or
repz
mov
inc
iret
repnz
push
mov
adc
mov
nop
push
fild
dec
sub
inc
xchg
push
mov
xchg
retf
xor
xchg
into
test
ror
ret
repnz
jle
neg
add
cs
ins
movs
mov
push
pop
jnp
dec
out
sub
adc
jne
adc
pop
in
stc
pop
cmp
(bad)
sub
push
ins
mov
cmps
in
test
test
dec
movs
lock
hlt
mov
popf
test
ret
inc
or
mov
cwde
dec
adc
cmp
rcr
loop
pop
out
arpl
adc
cmps
sub
inc
aam
in
cmps
repz
fwait
not
dec
adc
and
(bad)
mov
add
mov
repz
xlat
jmp
or
hlt
adc
and
jle
cmp
sbb
popa
mov
ins
fidivr
jle
dec
xor
xor
sti
aam
jns
sub
in
hlt
clc
lods
cmp
aaa
sub
and
mov
cmps
pop
fbstp
ret
cmp
mov
push
xchg
cmp
std
lods
dec
xor
loope
pop
mov
jle
xor
(bad)
test
stos
push
cmp
std
jo
addr16
xor
mov
(bad)
nop
repnz
pop
cmp
inc
xchg
mov
rcr
outs
push
sbb
push
xchg
fst
push
ror
into
retf
in
inc
mov
mov
retf
lods
cli
xchg
fisttp
push
cmp
add
push
push
(bad)
retf
(bad)
ss
add
inc
sub
dec
push
out
fstp
pushf
and
fsubr
adc
popf
or
in
std
(bad)
in
out
aam
repz
push
jge
ret
je
out
pop
sbb
dec
iret
and
mul
call
push
xchg
(bad)
xchg
cmp
sbb
sub
cmps
loopne
enter
rcr
popf
inc
mov
and
cld
xchg
test
pop
or
scas
mul
dec
fisttp
arpl
arpl
dec
jno
cmp
dec
ins
mov
mov
imul
jb
jecxz
inc
and
mov
aad
loope
(bad)
mov
scas
fld
bound
mov
lea
add
shr
aad
aam
pop
jns
adc
test
je
jae
sbb
add
pusha
(bad)
sahf
(bad)
movs
addr16
jge
mov
pop
stos
mov
(bad)
aam
and
retf
push
mov
scas
sub
push
xchg
fdivr
cdq
in
add
or
pop
adc
xchg
pop
es
cmp
cmp
lea
xchg
inc
or
cmp
cmps
cmp
out
int
rol
sub
cli
cmp
push
inc
clc
stos
cmp
repnz
mov
and
imul
pop
pop
dec
jmp
sbb
or
jmp
ins
jno
jns
pop
bound
out
inc
xor
lds
mov
cmc
popf
lahf
cmp
sbb
ror
sub
outs
arpl
scas
cmp
dec
loop
aad
mov
and
test
in
mov
xchg
mov
mov
push
stos
add
mov
mov
push
pusha
xor
popa
jbe
out
mov
and
mov
inc
dec
cli
adc
pushf
ins
mov
imul
mov
shl
or
push
movs
fbld
(bad)
ss
adc
mov
cdq
loop
push
hlt
int
add
stos
ins
cmp
mov
adc
and
mov
repz
inc
daa
int
lock
ja
xor
test
in
lea
push
xchg
sbb
sub
ret
out
cs
in
shl
sbb
pop
nop
xchg
mov
mov
les
ret
scas
sub
adc
add
jb
mov
shr
js
(bad)
in
aas
adc
xchg
in
js
mov
xor
cmp
cmps
sub
cmc
jg
mov
nop
jb
xor
outs
xchg
xor
fwait
ins
ret
arpl
ror
mov
jae
pop
adc
jb
fcmovb
inc
push
or
mov
adc
jno
jmp
add
mov
jmp
mov
mov
rcl
add
shr
in
aad
daa
pop
repz
ja
push
in
mov
mov
or
mov
mov
or
rcr
stos
inc
and
push
mov
outs
out
data16
sub
inc
mov
call
xor
in
jle
mov
mov
fisubr
loopne
ins
mov
lods
cmp
cdq
or
std
stos
movs
jl
in
into
loop
inc
or
adc
or
adc
mov
sbb
sub
aad
jmp
mov
enter
mov
fcom
aad
movs
fnsave
mov
push
mov
movs
adc
ret
loope
enter
mov
call
push
ins
mov
push
scas
pop
ret
fcom
dec
add
mov
sub
cmp
shr
fldcw
xchg
mov
or
xor
adc
xchg
sbb
or
dec
mov
xchg
loopne
add
sbb
cwde
inc
pop
movs
les
sub
pop
push
ins
pop
sub
inc
adc
out
cwde
bound
hlt
loopne
xchg
popa
or
sbb
pushf
aas
xor
int
fdivr
sbb
add
aam
les
cmp
mov
cmp
sahf
repz
aas
jno
jmp
and
push
push
aas
dec
mul
xor
cmp
dec
dec
sbb
inc
jbe
jl
or
in
and
jns
loopne
cwde
fld
mov
and
add
out
pop
push
sbb
xchg
add
lahf
lods
sbb
mov
fst
ret
pushf
outs
enter
sti
scas
jg
adc
jbe
iret
lds
adc
dec
icebp
and
mov
sbb
aas
cmp
mov
pop
jl
ud2
popa
or
aam
loope
cs
push
aaa
push
shl
out
cmp
mov
nop
add
out
call
cdq
clc
adc
and
inc
fsubrp
movs
(bad)
xor
lods
retf
or
and
int3
ror
inc
adc
push
add
adc
push
fwait
or
pop
stos
dec
jg
outs
inc
fisubr
push
push
stos
out
leave
fst
inc
jg
out
inc
dec
scas
mov
inc
and
retf
pop
or
mov
pop
xor
lea
scas
inc
mov
fdiv
xchg
or
push
in
div
sbb
xor
jge
(bad)
cmp
push
fwait
in
(bad)
fwait
and
adc
icebp
cwde
lods
add
add
das
ins
(bad)
daa
jmp
nop
std
in
in
sub
aaa
lods
mov
and
adc
bound
xchg
xor
inc
std
ret
mov
mov
in
add
dec
or
pop
sub
xchg
xchg
adc
push
fwait
pop
and
out
push
inc
xlat
sub
int
push
fs
pop
and
test
sub
cmp
fst
dec
mov
inc
xor
ins
cmps
mov
dec
xchg
fisttp
or
sub
mov
jns
cmp
stos
arpl
das
and
pop
inc
jo
push
adc
adc
add
scas
sbb
xchg
retf
and
sub
inc
test
test
imul
xor
sub
leave
and
xor
popa
push
mov
add
dec
cmc
pop
dec
or
dec
in
mov
in
loop
call
sub
jns
call
push
popf
pop
scas
test
stos
xor
inc
mov
test
xchg
cmc
mov
mov
rol
(bad)
iret
arpl
adc
les
add
jl
lahf
pushf
and
jne
ret
out
add
jmp
mov
loop
cmp
adc
jmp
dec
sbb
jnp
lea
shl
aaa
mov
sub
in
lds
cmps
cmps
mov
dec
add
sbb
sahf
test
sbb
ins
imul
push
aas
retf
inc
rol
adc
add
aad
call
and
lds
push
iret
outs
and
add
fs
sub
jb
mov
inc
int
push
scas
jle
test
jnp
retf
gs
imul
mov
ret
in
out
sub
iret
push
cli
lods
adc
or
push
push
(bad)
(bad)
xor
cdq
test
in
fadd
call
neg
inc
rcr
mov
cmps
enter
inc
cmps
std
xor
mov
adc
or
add
push
in
ffreep
push
shl
pop
fdiv
mov
jmp
aas
leave
and
scas
jmp
jp
pcmpeqd
adc
es
iret
stc
pop
test
lds
push
in
dec
sub
xchg
ins
cmp
jl
dec
jmp
out
or
(bad)
jns
add
or
or
ret
stos
repnz
inc
xor
push
popf
dec
ds
outs
pop
xor
xchg
jb
in
in
sbb
fidiv
sbb
ror
cwde
sbb
fst
jmp
fdivrp
mov
jae
cs
daa
adc
and
fs
hlt
mov
adc
push
aas
es
xchg
cmp
xor
in
cld
(bad)
int
dec
push
inc
mov
add
call
(bad)
in
std
mov
and
jmp
stos
push
xor
pop
lahf
sub
leave
scas
sar
inc
ja
std
cmp
dec
ficomp
cs
ss
(bad)
jmp
aas
lock
scas
ins
call
xchg
adc
push
retf
lea
test
mov
push
or
shl
sar
add
push
xor
inc
fst
hlt
push
gs
xchg
out
add
mov
pop
or
dec
jp
pop
into
jg
jae
xchg
pop
mov
arpl
sub
mov
xor
stc
sub
pop
outs
sub
adc
imul
enter
pop
addr16
popa
jb
loopne
leave
js
scas
neg
push
adc
into
add
popf
nop
adc
dec
mov
xor
lock
add
imul
fwait
and
push
push
retf
ss
inc
outs
and
(bad)
fmul
shr
push
cmovae
or
test
jno
(bad)
xchg
(bad)
jo
push
ret
inc
adc
dec
sub
xor
push
xor
mov
mov
inc
push
std
movs
fmul
sub
ins
and
ja
gs
jl
push
xchg
mov
mov
pop
mov
push
das
mov
je
imul
mul
outs
mov
lods
jmp
cwde
int
xor
mov
xchg
ja
pop
jge
cmp
(bad)
pop
push
retf
mov
es
or
(bad)
pop
pop
push
xor
imul
cmp
or
fst
jl
jge
aad
jge
mov
add
ds
dec
rcl
pinsrw
test
xchg
mov
mov
push
cmp
loopne
and
mov
popa
sbb
xor
(bad)
dec
in
sbb
jp
js
dec
mov
test
mov
pop
xlat
sbb
sub
and
sahf
add
xchg
xchg
cld
mov
cld
shl
mov
stos
shr
inc
inc
outs
and
retf
fild
jnp
fwait
mov
push
mov
mov
dec
int3
je
clc
movs
push
xchg
jo
std
sbb
xchg
dec
or
pushf
inc
(bad)
jle
(bad)
sbb
cs
lea
push
mov
push
sub
sti
mov
hlt
outs
jo
push
inc
pop
test
mov
(bad)
ins
aad
mov
jle
jne
ret
or
leave
push
es
dec
test
setno
outs
adc
jl
inc
ins
lods
lods
and
add
mov
(bad)
fnsave
mov
imul
mov
jg
mov
ds
ror
stos
sbb
inc
xor
clc
or
std
mov
jg
in
xor
(bad)
cs
inc
add
ret
das
mov
add
xchg
sti
lods
mov
clc
mov
sub
xchg
pop
outs
adc
ss
(bad)
gs
xchg
jo
(bad)
icebp
aaa
std
mov
mov
push
(bad)
pop
arpl
(bad)
int
push
dec
fdiv
hlt
fldenv
lds
mov
jmp
ss
sar
out
dec
movs
adc
shl
fs
mov
cmps
jnp
push
add
adc
cld
jl
and
jae
mov
dec
sbb
inc
jmp
xchg
repz
into
pop
clc
out
or
ins
(bad)
jae
pop
jnp
dec
mov
adc
retf
fcomip
pop
or
jb
(bad)
rol
dec
jle
push
fwait
popf
xchg
xchg
jns
popa
jne
adc
in
into
fidiv
fldpi
add
sbb
and
rol
fwait
or
push
cmp
sbb
or
cmps
mov
push
stc
sbb
(bad)
scas
sub
mov
mov
xor
inc
mov
pusha
enter
lahf
ds
pop
cmp
stos
mov
in
mov
inc
imul
ret
push
movs
mul
movs
(bad)
je
cwde
mov
inc
and
lock
aam
repnz
aaa
push
int
dec
fcom
outs
push
std
cmp
pop
pushf
adc
bound
pushf
inc
lahf
loopne
jmp
mov
mov
fcom
sub
mov
xchg
mov
(bad)
mov
and
mov
js
inc
mov
mov
jno
loop
xchg
(bad)
sti
cmp
inc
in
inc
cmp
sub
pop
dec
fwait
xor
sahf
fisub
repnz
jb
mov
ins
pop
test
fs
add
out
adc
fidiv
mov
xchg
rol
mov
adc
cmp
mov
es
dec
push
dec
out
or
push
adc
retf
push
add
retf
xchg
in
shl
add
loope
mov
je
lods
mov
add
int
pop
sub
adc
out
jae
ss
daa
mov
jp
(bad)
pop
repz
adc
xor
adc
sub
inc
and
jg
shl
inc
movs
fsub
in
cmc
shl
test
xchg
adc
fdivr
in
lock
cmp
ins
sbb
sti
pop
mov
or
repnz
stos
sbb
out
popf
in
inc
and
fisubr
mov
adc
mov
in
lds
add
or
shl
fadd
or
add
sub
mov
sbb
repnz
and
imul
jns
(bad)
mov
jns
xor
mov
repnz
imul
xor
repz
dec
mov
outs
add
ds
shl
add
or
fs
enter
sub
mov
stos
jno
das
cdq
mov
ss
leave
sar
mov
cmp
addr16
jb
push
jns
push
cmp
xlat
pslld
(bad)
test
adc
inc
dec
sub
jle
inc
pop
(bad)
fsub
(bad)
mov
and
push
lds
xor
stos
gs
inc
add
gs
jne
stc
pushf
outs
mov
and
or
into
out
ins
jg
test
inc
ds
jp
push
nop
inc
cmp
repnz
adc
sbb
pop
sbb
inc
mov
leave
inc
fs
rcl
pop
pop
imul
mov
jl
add
imul
mov
stos
out
aam
or
outs
mov
sbb
dec
jns
out
jmp
fldenv
mov
xlat
ret
call
dec
and
jp
loopne
or
pop
pop
(bad)
sbb
(bad)
cmp
xor
fistp
or
mov
xchg
pushf
cmps
retf
ds
sbb
jae
mov
iret
sbb
outs
or
dec
mov
lds
mov
adc
lds
and
fsubr
adc
rol
push
jb
add
ficomp
cmp
loope
out
mov
push
xor
leave
push
stos
and
xor
repnz
retf
cli
xor
lock
popf
xchg
mov
xchg
in
cmp
mov
into
or
push
jbe
jmp
mov
not
jns
add
arpl
and
pop
jmp
in
fist
pushf
push
shl
imul
mov
out
add
out
mov
jge
movs
aas
adc
nop
cli
in
jmp
or
outs
xor
jb
and
fs
cli
in
(bad)
ins
cmp
(bad)
jg
fwait
icebp
xchg
je
(bad)
loopne
mov
lds
add
push
in
(bad)
fcmovu
(bad)
push
mul
sbb
pop
fiadd
test
cwde
aas
xor
lahf
gs
jmp
jle
sub
jo
or
add
adc
sbb
mul
inc
pop
loopne
jo
xchg
mov
xchg
arpl
popa
(bad)
adc
sub
fld
jns
sub
mov
jno
fs
pop
pop
sub
pop
pop
aas
and
adc
shl
loop
xchg
es
pop
cdq
pop
fild
or
jo
int
xchg
rcl
mov
aas
popf
ficomp
call
ins
cdq
jnp
popa
sbb
pop
nop
ds
fwait
pop
add
popf
jp
(bad)
daa
sbb
cmp
fs
idiv
inc
or
dec
pop
inc
aam
cmp
jbe
sbb
adc
push
int
xchg
add
ret
popa
loop
pop
pop
sub
mov
lock
adc
xchg
push
mov
push
mov
pop
inc
xchg
jmp
cmps
jg
inc
cmp
jmp
mov
and
push
and
mov
push
imul
retf
cld
arpl
xor
cmp
and
ja
push
mov
xchg
pop
sub
sub
rol
mov
push
add
or
sbb
bswap
ins
push
mov
mov
mov
or
popa
test
pop
pop
mul
mov
mov
add
xor
add
fs
pop
push
(bad)
in
pop
movs
pop
jno
in
out
call
dec
push
cmp
push
sbb
sub
and
test
pop
xchg
xchg
cmp
enter
test
imul
or
inc
shl
push
mov
cs
imul
mov
leave
dec
pop
in
jns
push
jp
and
lahf
cs
arpl
cmp
mov
and
int3
xor
call
xchg
add
movs
(bad)
ss
jecxz
es
out
in
imul
sahf
gs
jne
and
add
mov
fdivr
mov
jns
icebp
adc
ja
xchg
arpl
mov
sub
loope
inc
in
enter
mov
sub
stos
mov
adc
jl
iret
int
call
retf
cmp
sub
enter
mov
dec
and
push
ins
ss
data16
inc
push
lds
adc
out
xlat
(bad)
retf
add
popf
sub
in
(bad)
push
ja
(bad)
repz
fisubr
sbb
ret
int
mov
pusha
inc
movs
xor
sbb
pand
mov
je
sbb
add
xchg
fadd
xor
and
cmc
fldenv
pop
mov
pusha
xor
in
pop
xlat
scas
pop
push
pusha
jne
and
sbb
xor
xor
and
loope
inc
sub
imul
dec
dec
push
push
std
daa
lods
(bad)
sub
sub
mov
xchg
nop
add
push
inc
xor
xor
mov
jp
add
and
scas
jmp
mov
(bad)
pusha
push
das
add
out
hlt
lock
add
bound
xchg
mov
movs
call
pop
jnp
xor
cs
xchg
xor
cs
add
push
shl
cmp
cmp
mov
mov
push
(bad)
pop
add
test
test
std
inc
aas
xchg
xor
daa
aam
and
stos
lock
cwde
stc
xor
out
mov
fadd
rol
jno
jmp
adc
test
add
jne
xchg
int3
in
adc
mov
cli
fisub
rol
nop
and
imul
jecxz
pop
inc
xor
out
inc
enter
mov
jnp
stos
retf
xchg
jno
jl
bound
hlt
cmp
ficom
mov
adc
frstor
inc
sub
js
or
xchg
sti
push
(bad)
cmp
dec
inc
cmp
imul
adc
jns
mov
lock
and
aad
add
adc
or
or
test
inc
sub
dec
jns
dec
push
jno
test
sub
test
dec
(bad)
cli
ret
cdq
(bad)
movs
fisub
pop
xchg
jmp
outs
jo
mov
add
test
mov
(bad)
imul
push
push
and
imul
cld
std
fs
(bad)
and
into
mov
call
lods
cdq
das
aaa
xor
mov
cmp
addr16
dec
jge
loope
lods
jecxz
dec
ret
jne
inc
ss
mov
push
push
rcl
repz
cs
out
lods
add
xchg
or
ins
pop
pop
sbb
inc
mov
jno
sub
push
cmp
rcr
scas
je
xchg
dec
inc
jle
std
cmp
into
test
shl
lods
fs
loop
mov
lds
rcr
dec
loop
xchg
aam
icebp
fild
push
push
fsub
call
xchg
xlat
in
idiv
and
ds
pushf
daa
pop
imul
sub
dec
imul
mov
inc
imul
mov
push
push
cmp
xchg
inc
mov
(bad)
lods
hlt
and
loope
cli
or
les
pop
cmp
movs
pop
movs
scas
jle
sub
or
xchg
inc
jp
int3
ret
daa
inc
call
mov
aas
mov
xchg
inc
add
test
push
push
out
jb
enter
in
icebp
dec
movs
pop
mov
data16
lock
inc
fimul
mov
jp
je
xchg
(bad)
leave
jle
pushf
(bad)
fdiv
test
push
sbb
adc
jmp
jle
clc
mov
and
sub
adc
xor
cs
hlt
lock
jmp
cmc
add
test
(bad)
jb
ds
fsubr
sbb
mov
add
push
xor
inc
shr
je
loope
iret
outs
data16
dec
adc
and
pop
or
fwait
loop
push
aaa
jl
inc
je
(bad)
(bad)
mov
ror
mov
jge
cmp
(bad)
cmc
pop
jmp
(bad)
dec
jmp
mov
shl
inc
test
and
xchg
xor
test
das
pop
cmp
sub
inc
xor
jge
push
outs
pop
dec
cmp
push
clc
add
inc
jmp
pop
outs
xchg
fiadd
pushf
popf
fistp
jg
push
push
loop
das
cdq
cmp
push
jge
ja
or
mov
mov
push
cld
aam
mul
jae
(bad)
fsubrp
clc
inc
mov
xor
sub
gs
jp
mov
leave
pop
(bad)
pop
add
shl
jb
cmc
es
iret
pop
push
mov
sub
jns
inc
mov
movs
jbe
rcl
jg
sahf
call
xor
call
(bad)
mov
clc
mov
xor
dec
inc
xchg
cdq
sub
rcr
inc
add
xor
dec
cmp
imul
mov
mov
mov
push
sbb
cmp
adc
sbb
popa
int
sub
sar
or
sahf
mov
sbb
imul
jns
pop
lods
cld
xor
cmps
adc
stos
mov
xchg
add
cli
xchg
js
jmp
adc
sar
ret
and
enter
sub
and
(bad)
mov
mov
imul
js
or
hlt
cmps
js
je
daa
pop
test
mov
push
or
xor
lea
mov
int3
push
ret
pop
inc
aad
scas
jle
inc
int3
sbb
cs
push
jp
mov
rol
test
pushf
aaa
push
jnp
adc
clc
stc
repz
rcl
int
fwait
cmp
mov
(bad)
mov
out
ins
cmp
and
push
and
jmp
and
shl
and
in
aaa
sbb
test
lock
(bad)
cmc
loope
jnp
aas
or
pop
pop
or
fidiv
lock
stc
data16
mov
pushf
push
xchg
mov
mov
lea
or
sbb
jg
fsubr
mov
test
(bad)
jo
inc
push
pop
mov
mov
loop
and
out
adc
sbb
adc
jmp
mov
sbb
mov
cdq
inc
mov
(bad)
repz
push
retf
cli
shr
icebp
mov
sbb
ret
mov
out
sahf
loopne
mov
mov
test
sar
repz
out
fdivr
xor
pusha
addr16
sti
xchg
dec
imul
pop
jno
pop
fneni(8087
ficomp
loop
iret
or
add
es
jbe
jmp
aaa
jmp
inc
pcmpgtd
stos
stos
fwait
inc
and
and
jb
popa
std
outs
jecxz
cmc
dec
dec
sub
out
push
popf
xor
jo
or
(bad)
cmp
adc
sar
out
retf
mov
repnz
out
and
or
rcl
retf
cwde
xchg
in
add
(bad)
cdq
lea
outs
stos
rcl
mov
or
add
push
dec
int
aas
bound
in
rcr
stc
jnp
jo
aas
addr16
aam
retf
in
xor
(bad)
cmp
mov
frstor
test
ja
dec
jl
xor
out
repz
jge
jecxz
xor
(bad)
aas
push
xchg
out
mov
inc
mov
or
pop
sbb
mov
mov
jmp
movs
push
pusha
push
(bad)
cmps
push
sbb
outs
ins
jnp
test
dec
adc
sub
fisttp
adc
inc
sbb
push
retf
jecxz
add
dec
xor
or
mov
and
or
mov
xchg
jbe
lea
stc
(bad)
sbb
or
adc
jno
std
sahf
dec
in
cmp
mov
repnz
xor
add
add
out
shl
pop
inc
sub
dec
mov
fisttp
pop
inc
in
jbe
dec
dec
push
jp
hlt
push
sbb
dec
ds
cmp
ds
int3
and
adc
popf
sbb
and
out
mov
fadd
test
sbb
adc
add
repnz
or
or
int
sub
xlat
retf
(bad)
cmc
inc
xchg
xor
xor
pop
cmp
js
add
aad
mov
loop
add
xchg
cdq
cdq
or
jl
sbb
out
(bad)
sahf
test
pop
mov
or
mov
icebp
and
(bad)
popf
(bad)
adc
push
shl
daa
sub
ror
jno
dec
xor
lods
mov
loop
mov
jp
adc
inc
inc
push
hlt
movs
sar
shr
jecxz
xchg
pop
retf
inc
into
pop
cmc
das
cmps
dec
jge
adc
cmp
out
add
ror
(bad)
fisub
sbb
lds
jle
in
pop
cwde
push
sti
adc
cmps
dec
enter
or
cmc
ds
icebp
xchg
and
xor
pop
jecxz
call
outs
mov
pop
mov
pop
in
sub
xchg
xchg
gs
gs
or
jnp
imul
repz
test
movs
mov
cmps
adc
scas
je
test
dec
movs
sar
fsubr
sahf
inc
and
or
aam
sub
mov
push
xor
jno
sbb
fsub
mov
test
(bad)
xchg
add
jmp
pop
and
hlt
sbb
jge
pop
jg
pop
daa
cmp
mov
jge
(bad)
mov
mov
rcr
sar
enter
test
aaa
fmul
aaa
cdq
mov
or
ret
je
xchg
shl
clc
shl
jne
fstp
mov
xor
xchg
retfw
mov
in
fcomp
lahf
mov
xchg
(bad)
cmp
(bad)
dec
fiadd
pop
mov
stos
sub
push
mov
mov
dec
sub
xchg
sbb
fstp
fidiv
pop
lea
rol
fwait
jge
add
sub
inc
xchg
mov
cmp
(bad)
jmp
push
rcl
imul
(bad)
(bad)
cmp
test
sub
cmp
or
mov
and
js
fwait
push
xchg
mov
mov
int3
cld
push
xchg
jbe
mov
lods
iret
(bad)
sub
pusha
out
call
mov
or
lea
or
mov
inc
ret
popa
jae
or
pop
inc
rcr
ins
xor
inc
xor
and
aas
arpl
outs
cmps
js
call
call
movs
xor
sub
mov
pcmpgtw
in
xor
js
lds
adc
dec
jp
in
pop
xchg
std
int
dec
loop
push
mov
aad
sti
cli
mov
jecxz
xor
and
inc
mov
mov
fldcw
imul
mov
mov
enter
out
int
adc
jge
(bad)
cld
test
out
out
push
mov
aad
cmp
adc
sbb
cmc
into
mov
icebp
nop
and
repnz
setbe
xchg
ror
imul
mov
jo
arpl
cmp
out
repnz
shr
pop
cs
pushf
ficomp
cmp
pop
inc
dec
dec
push
test
inc
pop
push
xlat
jmp
cmps
les
ins
data16
dec
les
(bad)
adc
outs
push
fwait
cmp
sti
jp
movs
jge
jo
mov
inc
gs
push
stos
in
movs
adc
hlt
test
pop
cmp
push
cmp
scas
aad
adc
mov
shl
xor
and
mov
aam
sbb
mov
push
pusha
inc
jecxz
sub
xchg
add
inc
out
stos
pushf
dec
pop
add
dec
inc
(bad)
cmp
cmp
dec
push
ins
xchg
fild
sbb
mov
mov
mov
sbb
out
and
popf
sub
aaa
mov
shl
imul
xor
jecxz
mov
inc
mov
push
sti
cmp
js
adc
(bad)
out
out
je
fcomp
pop
and
and
je
xchg
inc
xchg
inc
xor
int3
mul
cmp
mov
mov
dec
mov
cmp
out
xchg
inc
xor
push
xchg
add
loop
push
or
std
call
pop
inc
mov
adc
call
pop
or
push
mov
addr16
dec
hlt
out
jnp
sti
(bad)
cmps
dec
cwde
iret
add
loopne
push
push
leave
xor
addr16
push
arpl
test
push
ror
cmp
stos
xor
mov
out
call
xlat
dec
pop
mov
gs
out
adc
sbb
inc
fwait
test
jecxz
xchg
imul
adc
test
and
xor
outs
push
stos
test
aas
nop
in
imul
inc
ds
adc
jb
mov
mov
pop
in
or
and
call
popf
(bad)
ds
lock
mov
movs
pop
and
repnz
add
xor
call
pop
pop
jne
and
in
cmc
push
jmp
sbb
bound
xchg
enter
ret
sar
mov
es
push
cmp
(bad)
rcr
mov
outs
outs
es
fcom
fwait
daa
add
pop
mov
adc
call
in
pop
fsubr
loope
iret
call
repz
add
jbe
or
xchg
cmc
mov
and
xchg
lds
inc
test
cwde
jns
mov
dec
dec
xchg
(bad)
mov
jl
dec
js
mov
mov
popf
pop
movs
fadd
mov
push
xchg
pop
addr16
sbb
jo
out
mov
sub
mov
dec
mov
cmp
and
icebp
pop
adc
les
jns
iret
xchg
aam
int
mov
or
or
ficomp
daa
in
cmc
cmps
jbe
pusha
or
imul
(bad)
xor
xor
push
jg
push
aas
push
mov
cmp
cmp
mov
cmps
imul
push
push
test
xor
pop
cdq
repz
fstp
and
bound
adc
push
mov
ffree
lea
mov
inc
mov
push
cwde
mov
adc
popf
jle
sti
jmp
cli
cmp
mov
cmp
xchg
ret
cmp
mov
jnp
movs
aas
inc
push
mov
fistp
adc
lods
js
mov
fbstp
adc
xchg
nop
retf
scas
clc
dec
(bad)
iret
(bad)
sbb
(bad)
jl
popf
lock
xlat
in
push
push
mul
in
xchg
imul
sub
mov
pop
icebp
mov
dec
fwait
or
rol
retf
mov
cmp
rol
inc
mov
dec
scas
mov
jp
push
mov
adc
in
ret
(bad)
mov
cmps
sub
inc
jmp
popf
add
jns
or
bound
xor
xor
or
retf
sub
inc
clc
sub
test
inc
ret
arpl
or
aas
lods
in
pusha
(bad)
xor
and
cmps
jbe
jle
sti
cmp
or
stos
int
dec
ror
arpl
fbld
jnp
mov
cwde
outs
push
stos
jno
add
shl
push
adc
fdiv
push
sub
je
bound
sahf
std
push
out
xchg
gs
jbe
rcl
and
jmp
sub
cli
add
mov
add
outs
pop
mov
in
lods
lock
repnz
sbb
(bad)
push
daa
push
inc
loop
xor
das
into
out
cwde
ds
cmp
(bad)
movs
and
mov
pop
cwde
add
cld
sub
mov
push
pop
push
dec
cmps
xchg
int3
add
mov
jle
out
or
cmp
sbb
pmullw
ins
or
mov
unpcklps
xchg
arpl
in
push
add
arpl
mov
aas
adc
sub
pop
dec
xor
call
and
out
inc
std
sub
scas
xchg
dec
aaa
pop
pop
push
xlat
imul
pop
daa
fs
ds
fbld
(bad)
(bad)
test
dec
cs
je
outs
dec
xchg
sbb
call
or
pop
push
pushf
popa
out
in
push
aam
rol
rcr
mov
jne
xchg
push
ins
rcr
jl
xor
leave
fdiv
xlat
cli
mov
mov
ss
test
push
pop
inc
jp
inc
sbb
and
push
je
pop
mov
(bad)
stc
out
adc
add
xor
ins
mov
mov
xchg
data16
inc
pushf
cmp
adc
xlat
lods
sub
cli
imul
das
scas
ins
inc
shr
sub
hlt
pop
call
shl
inc
sub
nop
cmc
nop
xor
loop
xchg
mov
and
push
mov
inc
and
mov
push
and
push
popa
call
test
cmp
rcr
call
cmp
dec
inc
add
ins
sub
cld
es
(bad)
sahf
aaa
mov
xor
adc
sub
mov
pop
sbb
fs
js
sbb
test
lea
pop
arpl
sub
loop
pop
adc
push
imul
jnp
outs
ret
add
cmpps
or
jmp
adc
xchg
xor
mov
jmp
popf
mov
dec
xor
movs
lahf
xchg
mov
test
cmp
bound
dec
pop
imul
stos
sbb
pop
push
ret
daa
test
inc
in
movs
mov
movs
mov
jae
test
add
stos
push
std
cwde
aas
div
(bad)
or
push
imul
cdq
cmp
(bad)
(bad)
lock
popa
arpl
je
inc
add
push
in
push
in
sub
fld
jg
out
dec
cmp
in
mov
popf
jp
adc
cld
in
or
int
retf
ds
jp
xchg
lock
scas
data16
daa
push
push
cmps
(bad)
cmp
push
adc
scas
push
push
push
add
fmul
ror
mulps
mov
push
cli
dec
ss
or
mov
mov
push
cmps
pop
mov
dec
gs
jp
hlt
dec
dec
dec
ins
push
test
shr
rol
sub
jl
enter
mov
aad
mov
inc
test
xor
pop
dec
push
fstp
fdivr
das
dec
leave
push
cmp
mov
das
nop
xor
cli
push
dec
or
out
and
aas
ja
sahf
daa
cmc
or
imul
shr
leave
and
imul
mov
out
mov
aas
add
xchg
xchg
pusha
sbb
push
add
hlt
test
add
inc
add
loopne
dec
or
test
ror
or
xchg
add
sbb
out
jl
fsub
fidivr
mov
pop
jb
rcl
(bad)
call
xor
xchg
xchg
mov
jecxz
pop
jmp
cmps
(bad)
push
pop
dec
cmps
rcr
cmp
out
xchg
stos
xchg
mul
and
and
cld
mov
addr16
cmp
xchg
das
cli
or
xlat
add
sahf
cmp
repz
nop
loope
push
scas
pop
pop
jns
pop
xchg
fnstcw
call
cmps
and
sbb
cmps
out
push
fnstenv
lahf
sbb
scas
and
arpl
mov
pop
xor
cmp
push
les
js
inc
adc
stos
popa
adc
shr
arpl
jne
jne
adc
inc
mov
popa
mov
js
dec
rcr
inc
mov
adc
data16
call
lock
call
(bad)
arpl
mov
mov
hlt
sbb
mov
adc
xor
jmp
xchg
in
sub
imul
retf
ret
mov
cmp
lahf
jae
xchg
push
dec
add
push
popf
int3
cmp
pop
in
test
mov
or
xor
mov
push
cmp
mov
mov
cli
popa
adc
mov
pop
loop
inc
outs
pop
xor
(bad)
scas
and
std
sub
lahf
push
ret
sbb
push
js
ins
cwde
es
mov
and
cld
sbb
sbb
fisubr
les
fnstsw
aas
jle
jb
ret
sbb
fldcw
and
sar
cli
adc
ret
xchg
pop
mov
sbb
cmc
xor
and
xchg
ret
mov
mov
ja
fs
mov
cmp
sub
mov
xor
sub
mov
and
mov
sbb
xchg
loopne
out
xor
sbb
jle
out
push
movs
(bad)
idiv
cmc
push
aas
std
inc
loop
jmp
fisub
cmp
dec
or
add
data16
inc
imul
mov
stc
and
mov
lfs
or
fst
aam
fstp
into
aam
addr16
hlt
mov
rol
jl
mov
rcr
jecxz
push
mov
stc
pop
jno
cmp
pop
inc
jmp
scas
loope
shl
(bad)
push
and
push
fcom
les
daa
adc
lahf
jge
ret
push
add
and
push
jne
sar
mov
add
jmp
push
out
cld
pop
rcl
mov
loope
cmp
ret
aad
push
cmp
add
xchg
js
jmp
scas
dec
(bad)
adc
inc
cmp
push
inc
loop
pop
addr16
popa
stos
in
xor
mov
test
es
dec
sub
inc
int
xchg
pop
jnp
mov
jb
pusha
mov
jg
fdiv
inc
dec
sub
aam
or
(bad)
call
xor
or
jo
sar
ins
sbb
mov
in
dec
stos
outs
mov
idiv
cdq
sbb
daa
cmp
inc
adc
and
(bad)
lock
sub
add
dec
sbb
xchg
mov
ds
jno
xor
pop
push
ret
pop
inc
(bad)
ja
and
fs
mov
in
icebp
stos
mov
jecxz
jne
nop
mov
in
aam
sbb
imul
and
shl
add
sbb
sahf
mov
in
jbe
cmc
mov
xor
int
inc
and
mov
pop
fwait
pop
lahf
les
mov
(bad)
mov
inc
mov
es
inc
mov
int
ret
mov
je
arpl
cmp
add
cmp
fwait
jmp
leave
out
cmp
dec
jmp
popf
outs
inc
jnp
(bad)
aas
or
imul
les
mov
adc
adc
jle
or
(bad)
pushf
and
cli
mov
les
call
push
sbb
(bad)
stos
pop
push
pusha
mov
sar
ret
ror
add
retf
sahf
mov
retf
clc
jbe
mov
cmps
and
popa
retf
les
xor
jg
shr
retf
and
ds
adc
shr
fdiv
std
rcr
shr
sti
inc
out
pusha
sar
dec
js
push
movs
xor
jb
aas
and
shl
ret
push
(bad)
xor
mov
mov
call
pmaxsw
nop
les
(bad)
aam
push
dec
gs
test
stos
dec
pop
mov
xchg
and
xchg
movs
fld
pusha
inc
jnp
into
mov
push
mov
jo
cmps
ja
xchg
aas
js
stos
inc
(bad)
adc
in
stc
in
arpl
xor
xlat
pushf
hlt
cmp
stos
gs
cmp
adc
sbb
rcr
shl
mov
daa
cmc
imul
dec
fwait
and
jb
xchg
sbb
cmp
pop
jmp
pop
or
outs
and
shr
mov
scas
in
jl
popa
push
out
in
sti
or
mov
cmp
cdq
psrlq
xor
pushw
xchg
ins
xlat
and
fst
mov
xchg
into
sbb
push
out
xor
test
dec
retf
push
sbb
test
jl
jl
sar
inc
xchg
push
add
inc
xor
mov
jae
scas
or
pop
and
adc
inc
jnp
(bad)
or
or
(bad)
leave
xor
pop
loope
movs
sbb
dec
cmps
push
add
push
dec
adc
test
adc
pop
add
cmc
jle
popa
aad
outs
or
inc
movs
je
loopne
mov
cmps
clc
or
pop
loopne
inc
mov
outs
aas
jl
hlt
pop
xor
mov
icebp
xchg
cmp
pop
scas
jmp
inc
dec
in
or
retf
cwde
pop
sbb
pushf
call
xchg
test
dec
lods
sbb
mov
(bad)
movs
pop
jmp
daa
bound
pop
int
aam
mov
jg
mov
mov
jo
xor
fistp
out
(bad)
and
mov
arpl
pop
mov
in
cmp
mov
jp
(bad)
sti
shr
inc
jge
or
dec
mov
dec
aas
int3
call
add
mov
or
and
or
shr
fldcw
jmp
push
jecxz
push
inc
push
mov
retf
shl
aad
(bad)
out
mov
loopne
popa
jl
daa
push
xor
sub
push
xchg
inc
cld
adc
push
(bad)
test
adc
mov
jbe
addr16
scas
jo
inc
jne
lock
test
js
sub
cdq
cmps
ja
jle
int3
pushf
shl
fucomp
xor
mov
repnz
sbb
rcl
lea
nop
and
sbb
fimul
and
pop
les
outs
fnstcw
sbb
ror
dec
cdq
popa
(bad)
mov
mov
mov
shl
push
inc
xsha1
cmps
mov
fstp
or
xchg
repz
test
sub
jle
push
pusha
inc
pop
push
push
inc
add
sub
dec
test
inc
push
push
out
mov
mov
fdivr
icebp
repz
push
and
sub
ret
mov
and
mov
dec
inc
hlt
clc
inc
pop
or
push
mov
movs
cmp
mov
and
cmps
dec
out
jno
mov
add
mov
mov
cmp
sbb
sbb
out
mov
je
xchg
nop
pop
jnp
mov
xchg
pusha
push
jnp
call
mov
hlt
xchg
xchg
or
jb
inc
je
hlt
rol
mov
pop
pusha
sbb
fnstsw
xchg
lods
test
idiv
popf
mov
arpl
mov
mov
inc
scas
cdq
jae
and
jns
sub
xchg
inc
(bad)
cmp
pop
sub
mov
stos
xchg
or
jecxz
add
push
xor
scas
adc
imul
ins
nop
xor
ss
sbb
mov
jno
bound
inc
aad
ins
icebp
ret
cs
xchg
sbb
stos
push
test
pop
mov
xchg
add
imul
das
or
retf
mov
xor
push
or
add
jge
inc
cld
push
mov
retf
inc
pop
mov
dec
lahf
and
mov
jmp
scas
cmp
(bad)
inc
dec
sahf
cwde
jg
or
in
inc
cmp
mov
pop
push
inc
push
(bad)
or
pop
out
add
mov
fimul
hlt
sar
push
sub
das
test
arpl
push
test
lods
sub
pop
mov
fnstenv
movsx
and
push
test
dec
add
jns
mov
xchg
lods
dec
add
dec
movs
aam
(bad)
push
mov
cli
dec
push
adc
popa
mov
lds
push
xchg
stos
test
inc
mov
jnp
imul
pop
pop
xor
push
push
push
push
js
shl
rol
sub
jo
std
lea
jg
push
jmp
cmp
adc
mov
inc
sbb
sub
rcl
xor
lods
in
jbe
xchg
call
dec
pop
pop
test
pop
pusha
cmps
stc
lds
in
push
mov
retf
ins
test
es
pop
adc
(bad)
ret
and
retf
xchg
lea
adc
repnz
cmp
les
cs
dec
repz
mov
jns
or
cmp
aad
das
mov
fyl2x
sbb
ds
or
(bad)
sbb
pop
cmp
sbb
pop
(bad)
jg
mov
mov
fadd
cs
std
call
movs
pop
mov
pop
xlat
addr16
or
jl
popa
add
mov
mov
or
xchg
aam
push
jecxz
int3
lea
je
push
mov
jmp
icebp
stos
mov
les
pop
cmps
out
sub
jo
clc
sbb
and
dec
xchg
call
mul
dec
mov
jbe
mov
and
ror
out
sar
and
in
sbb
in
fdivr
or
scas
xchg
nop
mov
retf
sub
(bad)
mov
pop
pop
clc
cmp
inc
loop
(bad)
mov
fsub
push
js
or
mov
jmp
lods
jns
or
lahf
scas
jb
sahf
mov
call
xchg
dec
out
sbb
push
in
ins
and
int3
push
test
movs
sbb
lahf
push
stos
stos
push
inc
movs
jl
push
push
cmps
retf
ror
call
into
and
and
sti
push
cli
xchg
repz
ret
adc
mov
es
sub
jmp
rcl
stos
dec
int
das
sub
inc
jge
xchg
shl
(bad)
std
jne
cld
push
fisubr
inc
fsubr
jae
add
shl
retf
mov
mov
mov
inc
adc
mov
lock
in
or
repnz
dec
add
push
cli
and
xchg
sbb
adc
xor
xor
xchg
(bad)
jne
mov
mov
add
not
out
call
loope
mov
inc
movs
js
arpl
cmps
xchg
dec
and
mov
mov
stc
(bad)
and
push
fist
je
enter
out
ja
cmp
leave
cld
jnp
cmp
mov
mov
and
gs
popf
add
mov
adc
repz
mov
outs
cmps
mov
push
or
fld
xor
push
dec
test
push
les
mov
xchg
popf
push
cmp
call
das
push
mov
call
pop
cmc
das
sar
pop
popa
push
mov
fidiv
cmp
pop
imul
cmps
ja
test
ror
xor
mov
adc
add
xor
nop
dec
mov
mov
xchg
add
pop
pop
fbstp
aas
xchg
mov
mov
das
push
mov
mov
sub
inc
(bad)
aas
movs
cmps
movs
fwait
mov
sub
add
inc
test
adc
(bad)
stc
aam
inc
imul
into
leave
fld
clc
push
shl
ins
mov
and
push
adc
and
out
call
jno
jo
loopne
inc
test
xchg
xchg
pop
jmp
pop
mov
call
lds
(bad)
das
push
pop
xchg
mov
rcl
push
sub
jnp
sbb
xchg
aas
or
dec
ret
and
out
movs
stos
ficomp
mov
enter
jmp
mov
outs
movs
sbb
call
xor
les
dec
pop
cmp
sub
cmps
hlt
jge
scas
outs
fisub
mov
adc
(bad)
mov
or
mov
inc
sub
cs
ja
xor
repnz
add
fs
mov
pop
mov
addr16
dec
movs
fild
shr
push
les
push
inc
ret
jp
xor
sbb
leave
nop
jb
hlt
outs
movs
aam
xchg
xchg
xor
jmp
mov
add
inc
jnp
pop
outs
sub
icebp
xchg
dec
outs
ret
sub
xchg
mov
inc
test
inc
inc
sbb
retf
and
not
jno
sub
push
xchg
pop
inc
mov
stos
pop
or
cs
pop
mov
xchg
(bad)
jb
shl
mov
retf
add
inc
sbb
sahf
fnstsw
lods
gs
pop
sbb
mov
out
retf
sub
xor
add
lahf
pop
call
js
mov
inc
loope
lock
adc
pop
push
xor
sub
sub
ret
pop
inc
dec
jmp
fldcw
jns
loop
xor
into
and
cld
ja
or
dec
jl
clc
mov
sub
jo
cmp
aas
jmp
ins
dec
movs
(bad)
sub
mov
cmc
xor
jmp
xor
mov
cmp
jle
cmps
cmp
mov
push
sar
mov
mov
add
es
or
jb
cmc
pushf
or
xchg
xchg
jne
sar
xor
mov
rcr
jbe
cmc
lods
clc
mov
adc
sub
cld
jmp
sbb
rol
cmp
cmc
sbb
push
add
lods
(bad)
fist
pop
lahf
bound
dec
mov
repnz
fucom
pxor
(bad)
daa
jne
add
out
(bad)
pop
call
stos
sbb
pop
(bad)
pop
mov
fist
cmp
test
loopne
or
(bad)
mov
mov
lods
out
das
and
jno
inc
aam
xor
mov
add
pop
or
stos
mov
add
jp
das
enter
jl
mov
mov
xor
and
arpl
mov
mov
cli
dec
or
cmp
sub
es
mov
out
jmp
cmps
popf
mov
push
aaa
cmps
and
in
pop
push
mov
fild
nop
ins
push
add
test
xchg
cmc
mov
std
cmp
(bad)
pop
jmp
pop
mov
xlat
(bad)
mov
push
aam
add
inc
ins
adc
jl
or
cs
jo
mov
lds
in
add
push
adc
adc
push
(bad)
mov
add
xor
xor
jge
push
addr16
pusha
add
in
ret
add
out
push
in
inc
mov
mov
in
sub
or
icebp
jmp
movs
int3
push
add
xchg
hlt
and
ss
cmp
aam
pop
add
sub
jnp
mov
adc
add
imul
pushf
jnp
sbb
pop
xor
and
in
pop
shl
fcmovnu
pop
sti
adc
mov
pop
icebp
ins
xor
xchg
push
jne
jmp
and
bound
loope
shl
pusha
aas
stos
psubusw
pop
xchg
sub
mov
das
int
sub
add
pop
nop
cmp
xlat
stos
mov
addr16
jnp
mov
icebp
lods
lds
ret
xor
lods
cmp
(bad)
fsub
mov
cs
or
(bad)
sbb
enter
mov
adc
mov
dec
fimul
push
(bad)
xchg
dec
cmp
mov
mov
js
sti
pop
lds
or
int3
jo
loope
add
xor
idiv
sub
ret
test
jg
int
mov
cmp
cmp
xor
lock
mov
in
adc
adc
imul
jno
pushf
pop
sub
jle
dec
retf
push
stos
popw
jns
and
add
popa
std
cdq
pop
sub
jno
out
jmp
mov
les
retf
psubq
out
inc
int
cmps
mov
loop
aam
shr
xor
inc
inc
lods
cmp
mov
xchg
dec
les
xor
xchg
add
jge
cmp
inc
inc
repnz
dec
addr16
jp
jmp
or
jnp
mov
outs
nop
inc
mov
cdq
test
sbb
xchg
imul
outs
add
inc
sti
or
and
popa
stc
jl
inc
xchg
adc
jl
je
arpl
addr16
mov
movs
push
lods
mov
pop
cmp
in
mov
dec
push
xor
jo
xchg
pop
push
js
pop
push
mov
shl
test
mov
int3
mov
outs
fdiv
aam
mov
stos
mov
pop
mov
stos
push
sub
xchg
cdq
pop
das
jg
inc
mov
leave
shl
fwait
aad
mov
mov
call
inc
mov
or
clc
or
ret
and
pop
pop
and
pop
jmp
jb
adc
cmc
clc
sub
(bad)
adc
xchg
fs
sbb
adc
mov
or
dec
in
mov
and
adc
mov
mov
push
aad
stc
jg
aas
inc
fldenv
or
dec
ret
cld
ficomp
sbb
and
xor
jmp
in
cmps
inc
pop
mov
push
(bad)
std
push
fcos
cmp
cmp
mov
icebp
popa
imul
cdq
out
pop
push
cmp
data16
xlat
loop
jns
lea
mov
mov
in
push
and
pop
xchg
mov
fdivrp
fbstp
push
movs
pop
cmc
cmp
or
adc
push
add
mov
mov
and
loopne
push
push
repz
out
ins
ret
sub
scas
arpl
mov
push
mov
loop
add
out
fs
sbb
(bad)
xor
dec
ins
mov
cdq
rcr
ret
dec
cld
mov
inc
jmp
add
push
jge
jo
fwait
hlt
sti
pop
retf
mov
and
test
pop
dec
jo
fdiv
mov
retf
mov
adc
icebp
or
push
mov
rcr
jb
xchg
add
push
js
test
scas
add
add
stos
and
data16
or
xchg
mov
sti
dec
jae
dec
lods
xchg
stos
(bad)
cli
mov
fmul
pop
mov
adc
jmp
sar
push
push
and
jne
(bad)
fldenv
jp
lds
fdivr
push
pusha
inc
out
nop
imul
jl
imul
cmp
and
pop
stos
cli
gs
int3
xchg
push
mov
(bad)
fsubr
sbb
loope
ja
adc
aas
lods
jae
jmp
mov
jb
data16
and
jecxz
pop
mov
jo
push
mov
jmp
lahf
stc
inc
xchg
dec
cwde
js
loopne
or
pop
popf
fwait
repz
inc
xchg
repz
in
es
dec
jmp
dec
jmp
pop
stos
add
jbe
jae
imul
clc
scas
pop
ss
jb
lds
pushf
sbb
mov
inc
retf
xlat
sub
jle
cmp
xchg
(bad)
xor
lods
xchg
out
dec
(bad)
and
pop
jle
test
call
pushf
pop
xor
mov
jne
or
cwde
pop
dec
adc
adc
sbb
ds
lock
dec
or
call
lods
imul
adc
ss
push
cmp
pop
push
ret
les
jno
addr16
arpl
(bad)
add
ja
add
retf
fwait
daa
loop
test
cmp
inc
or
aam
retf
loope
out
adc
pop
leave
mov
repz
stc
cdq
jo
ds
into
push
and
ins
in
add
stos
cld
sbb
lods
retf
mov
(bad)
in
pop
ds
mov
imul
dec
fistp
lock
and
dec
iret
bound
fisub
inc
push
xchg
stos
call
dec
inc
retf
mov
push
add
cmp
cmp
dec
(bad)
aaa
test
mov
ror
cmp
sub
push
aas
retf
fwait
xchg
hlt
push
inc
retf
jne
shr
fldcw
xor
xor
mov
mov
lock
push
test
xchg
test
mov
add
jle
or
xchg
arpl
fstp
and
mov
addr16
fcomip
and
adc
add
daa
imul
push
scas
xor
push
adc
cs
jno
scas
sbb
cmp
retf
pop
push
or
push
dec
cmp
ror
inc
and
mov
pop
ficomp
adc
adc
mov
push
movs
mov
xchg
imul
sub
push
addr16
xor
in
sub
jo
aaa
mov
mov
ret
aad
pop
loopne
mov
pushf
stos
stos
adc
pop
push
add
jnp
inc
hlt
mov
clc
inc
pop
iret
mov
pop
push
or
ret
lods
hlt
mov
pop
or
(bad)
xor
inc
or
or
fiadd
outs
pop
push
cwde
mov
cmp
cmp
push
pop
mov
arpl
or
dec
mov
(bad)
push
jae
cmp
cmp
fbld
sbb
mov
jmp
ss
xchg
dec
data16
pusha
fdivrp
cmp
std
mov
push
push
mov
pop
xchg
cmps
movs
out
adc
ret
dec
xor
leave
jnp
rol
cmps
fsub
pop
call
ficomp
lods
lahf
or
and
loop
fs
int
dec
and
daa
jmp
xor
inc
test
clc
aam
xor
pop
cwde
xor
add
push
pushf
pop
arpl
dec
sub
loope
cli
push
int3
arpl
out
fnstcw
idiv
cmc
mov
popf
pop
add
lahf
jmp
mov
popa
and
fiadd
sar
push
sub
call
sbb
jp
jne
daa
mov
pop
jecxz
adc
rcr
aad
call
push
jmp
or
test
shr
push
push
and
push
rol
in
nop
lods
mov
aaa
xlat
mov
(bad)
push
push
call
mov
push
mov
xchg
sbb
int
(bad)
(bad)
jge
mov
or
test
mov
stos
imul
or
add
shl
repnz
inc
stos
jns
cld
mov
rol
push
(bad)
(bad)
jae
fcom
push
pop
and
(bad)
pop
adc
(bad)
movs
adc
inc
xchg
add
(bad)
sbb
jg
xor
(bad)
mov
xchg
not
xor
rol
fimul
movs
adc
xchg
dec
mov
lock
xor
xor
out
stc
clc
and
mov
outs
or
fucomi
add
push
ret
pop
mov
fwait
push
(bad)
sub
sbb
cmp
xchg
test
push
jbe
jmp
inc
rcl
sbb
lea
push
es
mov
jmp
or
out
mov
or
call
icebp
xor
jb
mov
and
(bad)
leave
or
ficom
outs
ror
movs
dec
xchg
adc
in
div
sbb
push
or
test
add
push
shl
jle
sbb
cmp
fisttp
mov
add
ins
sbb
fist
lods
not
add
mov
imul
into
adc
jb
cmp
inc
inc
cwde
test
xchg
cmps
mov
mov
xchg
xor
addr16
stos
mov
test
xlat
rol
stc
aad
js
cmp
mov
and
sbb
fs
mov
in
fcom
jge
icebp
xor
pop
add
popa
push
cmc
pusha
add
sub
cdq
inc
pop
sbb
xor
lock
or
outs
mov
repz
mov
push
jl
adc
jecxz
adc
data16
sbb
dec
hlt
mov
push
int
lds
adc
mov
(bad)
and
inc
jmp
sbb
data16
es
push
sub
imul
push
fs
push
outs
cmp
adc
jb
repz
sub
or
(bad)
shl
adc
push
mov
(bad)
into
pop
repz
mov
inc
jns
out
push
test
int
fcomp
mov
xchg
mov
(bad)
mov
ret
ds
ficom
xchg
aam
cmc
sub
stos
test
gs
popf
sar
sbb
mov
fstp
data16
lahf
imul
ja
add
lods
push
aam
das
xchg
in
push
lds
scas
test
lea
and
lock
xchg
sub
fild
mov
imul
mov
cli
das
fbld
dec
mov
jp
xor
test
fst
gs
lods
cmp
test
fstp
xchg
fisubr
lods
or
in
js
loope
push
aad
enter
add
(bad)
das
inc
stos
out
mov
pop
push
jb
lods
mov
mul
mov
jg
clc
push
aaa
sub
adc
pop
aad
fs
mov
mov
stos
fisttp
out
and
jno
adc
adc
fld
test
in
and
pop
dec
shl
xor
or
mov
xchg
nop
imul
inc
pop
pop
mov
in
fisttp
inc
call
xor
in
lods
and
repnz
(bad)
lea
dec
jno
xchg
inc
dec
pop
inc
cli
test
mov
xchg
loope
in
cmps
dec
loop
iret
sbb
in
and
out
stc
mov
and
jge
and
xchg
push
pop
retf
mov
xchg
cmc
mov
(bad)
(bad)
sar
icebp
xchg
or
mov
jle
jle
out
cmp
cmp
adc
aad
lods
inc
push
or
sbb
mov
cwde
jmp
mov
mov
int3
ins
and
jno
cs
imul
sub
mov
fmul
or
xlat
test
jo
and
rcl
jb
and
push
dec
test
(bad)
ins
retf
imul
call
ds
add
add
or
cmps
pop
out
popa
sub
sbb
out
repnz
jbe
std
jmp
jl
movs
dec
inc
pushf
xchg
jl
dec
mov
pop
je
ds
bound
xchg
cmp
cmp
jecxz
adc
sbb
mov
mov
pop
call
or
jle
xchg
push
stos
push
nop
push
adc
sub
ret
adc
cwde
mov
cmp
shl
stos
mov
aad
out
into
sub
and
ds
mov
adc
rcr
mov
add
mov
add
cmc
cmps
fiadd
dec
jl
xor
ss
bound
sub
jmp
sub
fiadd
xchg
fsubr
mov
sbb
int3
cmps
cwde
sub
retf
std
call
cmps
adc
dec
fsubr
push
mov
jns
pop
ss
stos
mov
in
push
xchg
dec
jp
test
xchg
lods
test
dec
pusha
inc
jbe
mov
aad
in
bound
sub
pop
jne
and
fimul
fcomip
bound
cmps
bound
test
leave
fstp
ret
mov
jmp
leave
in
test
mov
mov
movs
imul
mov
mov
dec
jo
cmp
inc
sub
mov
xchg
adc
or
jbe
pop
xchg
scas
test
inc
inc
xchg
je
inc
mov
std
pop
test
pop
and
jae
jecxz
clc
jbe
lds
movs
or
and
sbb
xor
push
add
fsub
jl
fwait
adc
sbb
push
add
and
xor
add
(bad)
push
adc
(bad)
push
add
fiadd
xor
inc
and
add
adc
ds
rcr
or
scas
cmps
loop
inc
pop
call
(bad)
push
(bad)
cld
mov
xchg
mov
and
neg
pop
push
xchg
sar
push
xor
push
fsubp
cmp
mov
jns
xor
push
sub
adc
ins
sbb
movs
sub
inc
shr
es
xchg
sub
xchg
bound
jmp
fst
call
sub
arpl
and
outs
lock
pushf
adc
pop
sbb
or
and
mov
push
jecxz
int
imul
mov
cmc
fwait
push
push
(bad)
cmc
xchg
in
retf
cmp
out
add
or
push
imul
add
mov
movs
mov
jmp
xor
dec
(bad)
fisttp
jmp
inc
pop
mov
sub
jecxz
pop
mov
cmp
pop
add
dec
xlat
push
data16
jle
or
cmp
in
repnz
test
popa
ins
shl
add
pop
lods
jmp
stos
(bad)
js
lods
or
retf
xchg
inc
scas
stos
sbb
clc
mov
mov
and
pushf
jmp
(bad)
lahf
pop
fdiv
imul
xchg
jge
int
pop
ficom
cwd
retf
xchg
jo
mov
stc
jge
div
xchg
jl
xchg
jmp
aaa
jbe
fcmove
fucom
lds
mov
clc
call
out
fs
out
lahf
mov
dec
and
xor
fistp
mov
adc
fstp
xchg
arpl
fdivr
mov
ret
push
cmp
scas
ror
jae
popa
dec
push
add
dec
(bad)
xchg
jbe
sub
shl
(bad)
cmp
mov
aaa
inc
ss
test
outs
loopne
pop
aad
ins
movs
fdiv
or
fsubr
cld
mov
movs
mov
push
add
mov
test
leave
aad
mov
test
call
cdq
in
push
dec
mov
iret
int
into
pop
std
mov
retf
dec
fstp
push
push
inc
divps
es
add
cmp
jmp
fadd
push
pop
cmp
cmp
retf
(bad)
in
lahf
(bad)
mov
imul
inc
adc
jno
jo
xchg
add
enter
push
mov
scas
adc
and
cmc
sbb
inc
fisub
push
sub
or
push
xchg
pop
inc
in
xor
and
je
out
mov
pop
sub
popf
cmps
sub
push
dec
fnstsw
fisubr
cmps
add
dec
(bad)
mov
xlat
jge
lahf
mov
clc
xchg
in
sbb
in
mov
js
and
xchg
retf
(bad)
mov
or
test
cmc
lods
leave
add
dec
jae
rcl
mov
pop
inc
pop
inc
js
sbb
popf
xlat
xor
sbb
mov
cmp
clc
jb
or
fwait
cdq
pop
scas
dec
inc
(bad)
pop
sbb
adc
fdiv
or
cmp
scas
mov
push
xchg
out
inc
push
ror
sbb
jnp
jno
mov
in
inc
and
lock
pop
dec
test
sbb
push
fisubr
dec
cmp
and
in
add
rcl
js
outs
clc
scas
test
cmp
mov
outs
dec
adc
mov
enter
cvtps2pd
and
(bad)
int
js
sub
mov
outs
ret
pop
jo
sbb
div
push
sbb
stos
jbe
test
popa
cmp
xchg
enter
xor
pop
je
fisub
iret
nop
xchg
jg
sbb
ds
cmp
faddp
sbb
add
jecxz
jae
cmp
clc
ret
xchg
rol
test
nop
dec
aam
shl
mov
sbb
loope
mov
arpl
push
(bad)
fwait
rol
mov
es
pop
push
and
dec
xor
pushf
pushf
sbb
inc
mov
xchg
inc
xor
add
push
xor
sbb
xor
inc
popf
dec
xor
dec
cmc
in
dec
in
sbb
data16
mov
aad
ss
popf
mov
fs
lock
xchg
xchg
push
clc
out
cmp
cmps
mov
cli
xchg
jae
xchg
dec
inc
repnz
(bad)
jmp
in
dec
xchg
nop
pop
and
icebp
sti
or
test
xchg
sti
in
push
add
es
dec
mov
test
pop
cmp
stc
xor
pop
sub
not
xchg
cld
cli
lea
fwait
adc
mov
or
add
sti
lods
pop
or
push
ins
fdiv
and
mov
sub
cmp
cdq
mov
loop
dec
stos
(bad)
aaa
fxch
nop
cdq
mov
shr
cmp
int
ja
adc
push
pop
adc
dec
mov
(bad)
in
push
adc
(bad)
xchg
dec
(bad)
pop
movnti
adc
inc
pop
movs
leave
sahf
xor
sar
loopne
push
data16
setno
ins
retf
ret
out
fisubr
shl
mov
gs
cmp
sub
xor
es
call
mov
inc
xchg
push
retf
lahf
call
push
imul
shl
dec
icebp
adc
imul
ds
mov
cmp
jg
mov
push
hlt
sub
inc
jmp
call
retf
outs
sbb
mov
jo
jp
add
dec
cmp
cmp
ds
mov
inc
jp
mov
dec
shl
xchg
outs
hlt
aaa
or
call
mov
push
ins
(bad)
mov
aaa
sbb
xchg
push
js
outs
sbb
cmc
aas
and
scas
pop
or
out
in
arpl
sbb
inc
ds
jl
xor
add
cmp
dec
cmp
call
not
and
scas
rcl
xchg
pop
ins
mov
pop
mov
les
ins
push
nop
sub
int3
popf
fcom
cmp
inc
jp
popf
jmp
pop
xlat
std
mov
aaa
addr16
pushf
call
or
xlat
sbb
and
and
and
mov
repz
fisttp
test
inc
rcl
rcr
jmp
pop
sti
test
mov
ins
cmp
jb
add
mov
mov
sub
and
movs
out
pop
add
and
(bad)
aas
push
ror
xchg
ficom
cmc
sub
je
call
pop
dec
xchg
pushf
jp
cmp
jbe
dec
(bad)
lods
and
shr
or
inc
nop
xor
aas
inc
adc
inc
and
test
nop
dec
pop
add
enter
outs
mov
std
jmp
(bad)
dec
cmp
ret
dec
xchg
fild
jmp
add
jl
mov
inc
add
mov
in
mov
mov
in
dec
lds
inc
arpl
or
out
in
dec
push
jmp
inc
mov
xabort
inc
clc
xor
je
ds
jecxz
jo
sbb
xor
in
inc
cli
xor
lock
pop
mov
add
jecxz
aaa
ficom
in
out
imul
pop
xchg
jno
cmp
or
iret
xchg
mov
push
(bad)
xor
iret
jnp
outs
dec
xor
xchg
mov
inc
ds
fidiv
rcl
loop
ins
xchg
daa
xchg
dec
inc
sub
sub
xchg
sub
nop
mov
cmc
(bad)
stc
mov
adc
mov
or
aam
or
jo
out
push
clc
dec
in
test
outs
call
mov
mov
push
and
(bad)
mov
sub
xor
xor
add
mov
sti
(bad)
arpl
gs
xor
outs
lds
inc
test
enter
jnp
std
sbb
and
pop
cmc
mov
or
pop
sub
dec
adc
pop
shr
xor
jae
jg
ja
addr16
xor
xor
xor
jmp
loope
fldcw
aaa
lock
or
dec
repz
in
lods
ret
pop
cmp
clc
dec
(bad)
sti
sbb
int
jo
push
sbb
stos
or
retf
sbb
cmp
test
clc
aaa
mov
mov
mov
mov
adc
ins
call
jo
sahf
lahf
stos
jmp
xor
nop
push
fwait
dec
sahf
dec
lods
rol
outs
push
ficom
stos
mov
push
loope
jmp
mov
sti
add
outs
addr16
mov
and
pop
(bad)
add
bound
sbb
jge
sbb
dec
das
test
aas
sbb
mov
dec
sub
in
or
add
mov
retf
dec
xchg
stos
and
push
icebp
inc
je
(bad)
mov
out
lds
test
fadd
aaa
sub
pushf
cmp
mov
into
mov
dec
ret
or
movs
test
stc
stos
pop
jb
xchg
and
mov
xor
mov
outs
enter
test
enter
cwde
cmp
ret
jp
or
not
out
lea
loop
inc
or
sub
mov
dec
or
test
sbb
mov
mov
push
xor
dec
cli
mov
fistp
cmps
mov
mov
dec
mov
jle
lock
inc
(bad)
jmp
cmp
ret
pop
sar
fld
mov
add
call
cli
mov
ja
in
mov
(bad)
ror
movs
pop
arpl
inc
and
fdiv
dec
retf
and
(bad)
outs
jmp
push
pop
dec
(bad)
call
mov
popf
jmp
outs
jno
ss
inc
xchg
and
sahf
(bad)
aaa
call
jmp
out
rcl
fiadd
jle
ds
enter
retf
inc
test
pop
call
xor
cld
inc
or
sbb
sahf
dec
and
fucomi
mov
mov
dec
call
mov
jl
stos
imul
inc
push
test
sbb
stos
pop
fsubr
test
add
movs
test
retf
shl
xlat
mov
loop
scas
cmp
ss
sub
pop
sbb
add
(bad)
push
and
push
dec
mov
push
inc
mov
ret
mov
cdq
xchg
pmaxsw
xor
jae
rcl
retf
mov
push
out
cmp
and
es
shl
push
inc
mov
shr
add
pop
sub
xor
mov
and
nop
cmc
pop
push
mov
dec
lods
sahf
cld
test
push
pop
sub
mov
pop
xor
test
pop
push
(bad)
mov
and
push
xor
cli
jnp
scas
mov
icebp
cmp
clc
rcr
stos
xor
ds
mov
out
xor
jno
je
in
sbb
lock
daa
fst
sub
aam
pop
movs
and
fdivr
imul
add
and
ret
xchg
xor
(bad)
push
neg
sbb
cmp
sub
scas
(bad)
xchg
sbb
aas
mov
icebp
lea
rcl
(bad)
pushf
add
mov
xor
push
movs
out
fdiv
retf
fwait
les
imul
pop
je
sbb
xor
xchg
retf
retf
adc
or
ja
and
or
pop
les
jns
(bad)
lods
ss
in
ret
push
cli
js
push
adc
sub
push
idiv
fdiv
popa
icebp
adc
inc
push
cmp
xchg
sbb
fiadd
cwde
push
lahf
mov
inc
cld
and
popf
iret
and
sar
and
xchg
addr16
sbb
fiadd
das
fdiv
and
out
sbb
push
push
test
dec
repnz
cmp
adc
imul
mov
xor
adc
sbb
ret
add
das
ror
pop
mov
sbb
and
mov
push
pop
lea
lock
inc
cmp
add
push
adc
test
mov
pusha
or
inc
bswap
push
(bad)
rol
sbb
je
cli
mov
retf
les
adc
mov
add
xchg
sub
fnop
test
outs
fwait
loope
cmp
xor
xchg
and
shr
mov
adc
lds
adc
and
add
pop
mov
add
add
mov
outs
push
scas
mov
adc
(bad)
in
dec
int3
and
pusha
std
js
mov
push
test
hlt
(bad)
or
aaa
jb
mov
fmul
fimul
sub
sar
test
inc
loop
(bad)
pop
adc
push
rol
js
sub
lea
pusha
dec
loopne
push
movs
sbb
dec
popa
fmul
sub
rcpps
out
ins
sub
je
adc
fistp
dec
jo
pop
sub
cmp
jg
mov
jmp
lea
fs
lods
ss
gs
addr16
and
push
in
pop
inc
jmp
push
dec
xchg
xchg
xchg
mov
sub
mov
xchg
and
sub
aam
pop
int3
outs
push
stos
inc
and
cmps
rcl
mov
jne
pop
cmp
or
sub
xchg
ret
pop
or
sub
mov
mov
aaa
jg
retf
push
inc
push
repz
cmp
stos
mov
or
in
mov
mov
push
cmp
shl
and
movs
mov
add
xor
mov
mov
dec
(bad)
mov
outs
ficom
out
leave
xchg
pmaxub
sub
inc
adc
popf
sub
pop
sbb
fcomp
lods
dec
mov
in
in
push
jb
fs
dec
or
xchg
sbb
aas
sahf
inc
mov
mov
and
or
mov
xor
lahf
mov
loope
push
sub
shl
mov
loop
js
shr
sbb
repnz
daa
ins
(bad)
clc
in
jns
push
das
aas
pop
lock
lea
in
repnz
pop
and
lock
jp
push
or
aad
mov
jnp
pushf
(bad)
enter
call
sbb
fadd
add
pop
and
adc
loope
jbe
sub
ins
fwait
jge
inc
sbb
push
cmp
les
mov
sbb
dec
loop
stos
cmp
aam
je
cmp
fld
(bad)
je
add
nop
arpl
fcomp
push
test
sar
retf
out
fcomp
add
mov
push
es
sar
repz
fs
ret
jno
retf
pop
xor
lods
push
mov
adc
sbb
cdq
jl
pop
repnz
inc
dec
popf
sbb
(bad)
cs
shr
sbb
rol
repnz
push
add
out
popa
icebp
test
es
or
cmps
push
popa
pop
fisub
sbb
sbb
std
repnz
test
dec
push
xor
xchg
into
jbe
push
xor
mov
mov
dec
jb
pop
cmc
mov
fneni(8087
add
push
or
js
ret
(bad)
stc
mov
pop
xchg
xchg
mov
cdq
scas
jnp
jl
imul
jle
mov
addr16
and
aas
in
rol
out
add
mov
or
or
pop
popa
je
lods
mov
xchg
jl
arpl
mov
jmp
xor
mov
inc
fistp
push
retf
fucomp
cli
movs
xor
in
push
dec
or
mov
xchg
sbb
add
enter
pop
pop
mov
adc
addr16
or
ins
sti
adc
xor
rol
or
mov
das
scas
and
or
or
cwde
movs
in
fs
in
sbb
push
int
sbb
int3
xchg
nop
stos
loopne
inc
in
jae
fwait
xchg
or
(bad)
cdq
mov
pop
xchg
jecxz
call
push
pop
fidivr
push
pop
mov
or
out
popf
xor
add
stos
push
mov
add
xchg
popa
call
mov
sub
movs
mov
cmps
push
ss
or
xor
sub
lds
mov
pop
loop
jno
int3
add
add
jmp
sub
div
into
jno
out
dec
push
pop
not
sahf
sbb
pushf
cmp
gs
pop
mov
xor
mov
call
enter
cdq
iret
rcl
pop
mov
xor
jmp
dec
or
data16
into
jno
mov
stos
dec
cmp
mov
(bad)
jecxz
ds
sbb
cmp
adc
dec
pop
xchg
xor
sbb
mov
out
inc
std
cwde
retf
or
sub
fs
mov
cli
mov
rcr
mov
mov
inc
das
push
fdivrp
enter
repnz
sbb
and
add
sub
iret
cmc
adc
int
sbb
test
pop
mov
adc
cmp
cmp
js
jg
lea
push
cmp
inc
imul
jns
adc
adc
(bad)
fistp
cmp
mov
cmp
(bad)
dec
in
xor
inc
mov
popf
pop
hlt
aaa
add
pop
and
hlt
and
xchg
adc
fcomp
mov
push
or
jns
jnp
movs
in
cmp
push
sbb
jb
push
mov
mov
or
jmp
mov
adc
mov
sahf
rol
je
mul
pop
(bad)
sub
inc
mov
or
scas
shl
rcl
outs
inc
inc
or
or
or
mov
jecxz
sub
popf
add
cmps
push
xlat
imul
rcr
dec
adc
add
(bad)
mov
xchg
jbe
jg
inc
in
ins
imul
aas
inc
push
(bad)
fsubr
addr16
bound
bound
push
pop
outs
mov
loopne
(bad)
not
adc
mov
xchg
mov
jle
dec
inc
dec
retf
jne
outs
das
aaa
inc
dec
(bad)
out
neg
nop
xor
aad
stos
or
xor
mov
mov
scas
jge
and
sbb
mov
dec
and
jle
xor
adc
xor
retf
dec
mov
add
dec
ins
outs
xor
dec
out
imul
and
loop
rcl
aas
inc
sub
vpshuflw
mov
sbb
cli
neg
into
pop
mov
fdivp
xchg
xor
pop
sbb
adc
cmp
int
lock
pop
lock
(bad)
cmp
fcom
stc
dec
call
pop
lock
or
icebp
test
xor
mov
inc
(bad)
mov
mov
(bad)
out
gs
cwde
cmp
xchg
pushf
test
shl
in
jmp
jno
(bad)
push
jo
jmp
hlt
mov
cmp
push
xor
call
es
std
add
adc
lahf
cmp
out
push
outs
push
gs
cmp
pop
xchg
enter
test
leave
retf
scas
push
mov
dec
push
(bad)
icebp
cmc
mov
(bad)
and
test
jecxz
push
movs
mov
pusha
fs
js
jecxz
ja
(bad)
cli
aaa
loop
mov
dec
push
sub
imul
cwde
rcr
mov
leave
or
lea
inc
mov
mov
ds
pop
dec
movs
sti
push
jne
in
aaa
sub
push
and
pop
pop
xor
adc
xchg
sbb
stos
jo
mov
mov
jecxz
cwde
repz
repnz
mul
or
mov
das
jb
and
fldcw
call
inc
jmp
bound
jl
sub
pop
cld
inc
mov
sbb
sbb
popf
or
leave
lods
div
(bad)
inc
lahf
shl
call
sbb
loope
adc
mov
jne
sbb
popf
data16
cli
cs
sub
pushf
mov
pop
sar
push
xchg
popf
fucomip
aaa
lea
xor
loop
cmp
lock
push
fadd
push
in
les
add
inc
cmp
inc
xor
mov
loopne
mov
sbb
sub
xchg
or
stos
mov
jecxz
push
jecxz
mov
sub
sbb
mov
shl
xor
jbe
xor
ins
rcr
mov
stc
dec
out
pop
sbb
jno
jp
(bad)
js
stos
and
movs
cmp
into
and
cmp
cmp
ret
mov
mov
cmp
mov
sub
mov
jae
xchg
jmp
outs
xchg
inc
cmp
cmp
mov
inc
sahf
mov
push
mov
movs
std
lock
sbb
rol
mov
inc
cmp
cmp
inc
enter
out
mov
cmp
push
xchg
jno
scas
les
fwait
inc
nop
ret
inc
js
fwait
inc
test
pusha
mov
add
(bad)
jns
dec
scas
test
into
repnz
jbe
push
xchg
ins
and
adc
push
les
add
mov
push
rcr
ffreep
jp
sahf
mov
(bad)
and
in
jns
jl
sbb
push
loopne
js
mov
fsubrp
jnp
lahf
push
ficom
add
(bad)
mov
lds
adc
fisubr
outs
adc
xchg
bound
inc
das
adc
mov
mov
daa
push
xchg
in
push
mov
mov
sub
push
pop
(bad)
and
pop
cld
push
and
dec
test
pop
mov
inc
mov
aas
fsub
std
js
into
sbb
test
inc
adc
adc
addr16
pop
or
scas
push
gs
outs
clc
push
call
sbb
popa
push
cmp
gs
xchg
sti
lock
mov
repz
fwait
(bad)
fptan
call
aaa
cli
xchg
(bad)
std
mov
ds
das
pop
fcom
out
daa
ins
or
inc
sti
jg
sbb
or
mov
jmp
mov
int
cmps
aaa
loope
aam
(bad)
(bad)
mov
(bad)
(bad)
movs
pop
sti
inc
hlt
push
xchg
sbb
jg
pop
not
div
add
popf
adc
jmp
mov
scas
sbb
push
mov
sbb
adc
xchg
stos
push
lock
sub
jge
cmc
pop
test
(bad)
xchg
jno
movs
es
call
mov
das
mov
pop
jl
dec
fsubr
lea
in
pop
iret
sbb
add
sbb
mov
mov
test
push
cdq
and
xor
sub
jno
sub
mov
push
jne
stc
push
cmps
jnp
fbld
or
(bad)
js
push
jg
dec
mov
push
mov
pop
lea
and
mov
mov
pop
sahf
out
stos
stos
out
cmp
jl
les
and
mov
ret
and
fistp
in
rol
ja
jmp
xor
mov
imul
int
or
fcomp
cmp
push
pop
mov
iret
out
(bad)
mov
(bad)
ins
adc
or
sub
jp
data16
into
cmp
rcr
loope
and
lahf
mov
loop
pop
repz
or
ds
mov
out
sar
sub
adc
ror
ins
sub
adc
cmp
ja
test
xor
jno
pop
arpl
add
mov
pushf
mov
pop
add
adc
push
mov
jg
arpl
push
push
xchg
jmp
add
adc
call
or
mov
mov
sub
and
mov
inc
emms
mov
mov
xchg
inc
adc
in
sbb
lea
mov
or
shl
call
xchg
call
push
int3
mov
mov
sbb
mov
sbb
push
je
mov
aaa
stos
ficomp
jmp
mov
fimul
and
xchg
push
into
add
jle
icebp
pop
scas
or
add
mov
rcl
pop
es
adc
or
adc
pop
sub
mov
push
imul
add
call
and
jg
cmps
adc
ret
ins
xor
pushf
(bad)
aad
call
mov
jnp
push
sbb
xchg
cmp
and
pushf
lahf
arpl
mov
push
repz
loop
test
jmp
and
cmp
jge
inc
in
(bad)
sbb
cmps
sbb
popf
xor
scas
pop
aam
jle
retf
cmp
(bad)
iret
inc
mov
(bad)
mov
sub
xlat
stos
and
in
test
mov
(bad)
(bad)
shl
daa
mov
les
inc
cli
(bad)
retf
lds
push
jo
mov
or
dec
sar
sbb
imul
xor
xchg
inc
sbb
sub
pop
stos
call
loope
mov
sbb
jl
ss
mov
xor
ficomp
retf
push
or
cwde
push
xlat
inc
jp
(bad)
fs
daa
push
sbb
dec
pop
jnp
rol
sbb
or
lock
push
mov
mov
and
or
mov
adc
add
test
cmp
add
stos
push
push
xchg
sti
mov
and
cmp
ret
pop
stos
pushf
cs
inc
add
bound
xor
inc
mov
loopne
stos
cld
stos
clc
xchg
and
hlt
mov
xor
movs
adc
mov
pusha
adc
add
lds
scas
fdivr
ds
dec
add
xchg
pop
popa
push
xchg
mov
cmc
add
dec
pop
sub
into
and
repz
add
cmc
push
jle
lods
leave
add
xor
rol
aas
xor
loop
pop
pop
or
int3
ret
in
add
mov
add
jns
test
push
ins
dec
cmp
mov
ds
pop
int3
mov
lods
xchg
and
push
data16
lds
xor
and
aad
and
and
test
lods
das
adc
addr16
dec
nop
aam
jnp
scas
shr
je
xchg
jg
dec
or
and
(bad)
jo
cmp
xchg
xchg
mov
icebp
xchg
scas
cmps
rcr
jmp
imul
push
call
add
adc
sahf
iret
inc
jns
mov
mov
and
scas
addr16
shr
jae
inc
xor
inc
test
push
jbe
push
push
or
and
int
jns
dec
pop
out
(bad)
rcr
je
popf
mov
and
ja
sub
lock
mov
add
bound
mov
and
sar
dec
mov
cdq
inc
ds
sbb
cmp
mov
add
pop
sti
cmps
stc
sbb
dec
les
aad
lahf
cmc
shl
cmp
popf
test
outs
jo
xchg
loope
jns
push
add
inc
push
mov
jbe
lahf
push
jge
(bad)
sar
adc
jne
out
pop
hlt
scas
mov
dec
(bad)
mov
push
jno
xor
dec
pop
mov
jmp
(bad)
lds
ret
and
out
pop
xchg
ds
mov
xor
out
pop
loopne
jnp
dec
pop
mov
push
pop
cmps
inc
pusha
add
and
cmp
aas
inc
adc
imul
sbb
fadd
cmp
cmps
repnz
cld
call
lods
aad
mov
adc
cmp
and
lock
sbb
jbe
addr16
mov
jo
mov
pop
sub
push
and
pushf
retf
in
jno
nop
mov
inc
ret
inc
les
inc
adc
stos
push
in
fdivr
outs
outs
or
les
mov
stos
aad
dec
jmp
jns
adc
lods
push
imul
mov
sti
shl
cld
int3
mov
xor
pop
xchg
out
outs
adc
jbe
js
ins
cmps
dec
adc
xor
test
pop
push
sub
fldl2e
fcmovb
in
ret
loope
iret
fnstenv
repz
fidiv
addr16
(bad)
popf
add
aaa
es
clc
sbb
(bad)
scas
retf
div
dec
pushf
daa
or
or
gs
aaa
sub
xchg
test
and
push
pusha
outs
jo
pushf
inc
clc
or
retf
cli
add
shl
retf
data16
and
in
int
jns
icebp
xchg
mov
es
popf
adc
int
mov
in
sub
movs
cld
into
and
fs
jne
mov
adc
adc
pop
leave
adc
jl
jo
pop
jle
mov
jge
in
test
nop
push
out
jmp
dec
push
mov
mov
pop
stos
(bad)
dec
mov
cdq
int3
aad
stos
mov
movs
xchg
pop
push
test
lods
jmp
dec
loop
(bad)
xor
sbb
out
aam
out
adc
retf
jg
push
sti
adc
test
fst
out
mov
mov
cmp
pop
popf
adc
test
pop
xor
outs
cmp
jns
or
imul
cmp
lock
retf
ins
addr16
daa
aam
cdq
js
dec
push
inc
loope
pop
(bad)
sbb
xor
aaa
sbb
addr16
pushf
out
retf
adc
pop
jne
inc
loope
inc
sub
inc
in
daa
dec
aam
mov
adc
pop
xchg
in
inc
rcr
daa
cmp
pop
adc
cmp
(bad)
mov
and
fucomip
lock
cmc
es
rcr
cmp
ss
mov
mov
lds
sbb
mov
adc
call
mov
push
mov
imul
mov
push
lods
and
jnp
pop
or
dec
cmp
loop
sbb
adc
mul
mov
inc
xchg
(bad)
out
loopne
daa
leave
outs
lds
fidivr
sbb
clc
sub
jecxz
(bad)
sub
retf
adc
push
push
hlt
or
push
mov
cmp
add
pop
std
adc
dec
in
lahf
sub
adc
test
xor
jns
and
and
mov
inc
std
aam
scas
popa
jnp
jl
and
pushf
retf
push
into
cmp
add
stos
sbb
mov
call
fisttp
add
jbe
cmp
mov
mov
mov
inc
inc
shr
mov
(bad)
cdq
jle
jg
shl
ins
test
mov
cmc
add
inc
dec
cwde
lock
dec
int
dec
adc
pop
xor
jmp
lods
retf
test
pop
mov
pop
outs
test
enter
retf
or
adc
js
data16
jle
clc
mov
mov
cmp
in
cmc
lahf
shr
cld
fimul
(bad)
xchg
loope
adc
adc
dec
mov
rol
xchg
pop
(bad)
sti
fcmovnbe
add
mov
xchg
lods
pushf
fs
adc
mov
pop
sti
(bad)
pop
cmp
or
and
daa
popf
addr16
mov
or
loope
push
outs
dec
jb
dec
out
ss
jmp
imul
add
pop
cmp
push
push
push
push
mov
(bad)
push
jp
leave
inc
pop
int
(bad)
xchg
xchg
mov
fs
aam
or
js
ds
inc
dec
data16
ret
or
iret
xchg
cwde
ret
adc
fisubr
stos
mov
cmc
scas
xchg
push
inc
mov
sub
(bad)
cwde
arpl
mov
cld
pop
and
jg
jmp
or
xchg
fidivr
mov
jbe
aad
test
inc
inc
call
jmp
push
imul
add
outs
jo
sub
nop
jo
mov
sub
xchg
and
pandn
mov
mov
mov
push
call
push
pop
jg
jno
daa
dec
stos
fidivr
div
sbb
inc
bound
dec
add
neg
mov
push
push
and
xlat
loop
push
shl
out
sar
jne
rol
and
jg
mov
test
inc
adc
pop
mov
pop
sbb
mov
push
lea
xor
xchg
sbb
leave
push
(bad)
aaa
add
mov
cs
mov
das
sbb
cmps
xchg
rcl
gs
call
cdq
(bad)
jno
cmps
sub
xor
push
adc
retf
pop
fcmovu
outs
jne
fcmove
adc
hlt
sbb
or
or
data16
fisub
not
call
push
dec
(bad)
test
in
jecxz
and
fwait
and
bound
imul
add
cmp
cmp
jnp
push
jb
inc
fcmovb
in
int3
xor
adc
inc
xlat
in
inc
hlt
hlt
inc
cmp
sbb
(bad)
out
pop
jae
inc
push
pusha
nop
pop
push
fcmovb
cwde
stos
cmc
es
aaa
xor
test
sbb
mov
push
and
and
mov
or
and
sub
xchg
dec
jge
and
dec
jl
and
push
inc
cdq
pop
or
out
fld
mov
jmp
mov
dec
ror
clc
imul
aas
xor
cmp
in
fmulp
sub
(bad)
sti
mov
inc
xor
jns
loope
mov
mov
dec
sbb
add
imul
xchg
sub
push
popa
xchg
lahf
retf
xchg
pop
(bad)
gs
stos
sbb
test
dec
xor
xchg
jge
inc
shl
sub
nop
add
ins
nop
int
jo
jl
push
xchg
pop
(bad)
in
sbb
sbb
jbe
pop
sbb
adc
(bad)
in
pusha
pop
das
pop
pop
xor
iret
hlt
loope
movs
xchg
push
xor
(bad)
xor
mov
sub
fcmovbe
mov
aas
call
iret
aam
push
xchg
mov
cmp
fdivr
xchg
xor
or
shl
sub
push
arpl
pop
push
cmps
daa
sub
(bad)
lock
add
fcmovb
imul
and
xchg
adc
cli
test
call
mov
dec
pop
sub
imul
xchg
call
pop
adc
cmp
stc
cmp
das
stos
adc
jle
leave
(bad)
pop
push
lahf
dec
add
adc
xor
lods
out
push
jp
mov
push
(bad)
data16
adc
je
sbb
(bad)
mov
xor
sbb
jp
shl
sub
test
mov
adc
push
cmc
aas
lds
cmps
aad
jnp
arpl
and
in
outs
xchg
mov
(bad)
xlat
and
pop
(bad)
leave
mov
lock
ret
xchg
xor
(bad)
cld
push
repz
pushf
adc
jnp
pushf
cmp
cmp
fwait
into
rcl
xchg
lahf
cmp
loopne
cmp
mov
test
xor
cmp
push
inc
out
imul
imul
mov
xchg
cmp
cld
sbb
sbb
or
jnp
mov
lods
cld
rcr
in
xchg
dec
dec
(bad)
sub
fwait
sub
(bad)
outs
inc
push
into
lea
lods
test
and
sub
adc
mov
repnz
jb
xchg
inc
jge
xchg
loopne
stos
cmp
(bad)
nop
add
push
add
jb
ds
ret
bound
aad
es
or
dec
dec
xchg
add
stos
cld
xchg
pop
mov
mov
or
mov
rcr
ins
scas
call
add
loope
lods
je
add
sar
xor
push
fdivrp
mov
pop
cmps
test
mov
(bad)
pop
inc
(bad)
es
retf
pop
push
fmulp
out
sbb
sti
pop
pop
out
lds
fst
cmp
cdq
xchg
addr16
sub
add
scas
xchg
cmps
jecxz
mov
cmp
pop
pop
fnstcw
adc
scas
ins
sub
int
mov
add
ret
cmp
add
mov
loopne
inc
jg
das
jl
sti
(bad)
sub
cmp
xchg
enter
mov
clc
push
(bad)
stos
dec
lods
cwde
xchg
push
mov
sbb
pop
ds
mov
mov
or
cmp
aad
shr
(bad)
lock
push
(bad)
dec
inc
mov
out
retf
sahf
(bad)
push
push
cmp
cmps
mov
mov
sub
shrd
push
push
ds
nop
lea
clc
jl
mov
jbe
movs
dec
outs
js
out
cs
addr16
push
push
(bad)
xor
xchg
push
sub
inc
xchg
fcmove
dec
jbe
xor
and
pusha
lahf
repnz
ss
jo
scas
icebp
js
sbb
sar
dec
or
cmp
jmp
into
inc
pop
test
std
(bad)
nop
mov
(bad)
adc
ret
stos
cwde
adc
push
or
rol
and
sbb
aas
test
inc
lds
cmp
inc
add
aad
cmp
or
mov
mov
imul
jbe
je
sub
pushf
sub
xor
and
ror
out
push
jo
lods
aas
fidivr
(bad)
xor
pushf
mov
dec
pushf
push
fld
out
cli
push
mov
jno
mov
pop
xor
push
bound
mov
ficomp
add
scas
(bad)
cld
in
mov
and
cld
and
add
inc
push
or
pushf
or
pop
mov
sub
dec
sbb
pavgb
adc
out
and
pop
cmp
std
dec
or
clc
mov
shl
and
or
bound
xchg
xor
retf
add
in
in
cmp
test
push
maxps
outs
xchg
jbe
mov
or
popa
popf
jne
dec
push
shl
pushf
cmp
or
jge
jo
cwde
sbb
and
dec
jns
and
pusha
inc
movs
xchg
out
pop
fidiv
inc
mul
cdq
hlt
push
mov
adc
mov
sbb
mov
sub
test
out
cmp
mov
(bad)
or
stos
fimul
inc
sub
jo
in
xor
repz
inc
or
retf
xchg
lods
repnz
out
xlat
repnz
jno
popf
retf
pop
ds
in
dec
push
inc
or
fdivr
xchg
jne
out
jne
aam
test
shr
mov
mov
ins
xor
fs
pop
sub
push
inc
or
fnstcw
mov
or
out
test
xor
popf
mov
push
loopne
cmps
gs
cmp
mov
pop
jns
fs
std
mov
loope
jp
xchg
push
mov
cmc
pop
cmp
call
jecxz
cmp
ret
inc
cs
xchg
outs
dec
fsub
lock
mov
cmc
dec
push
ret
mov
jae
and
into
jno
inc
ss
arpl
xor
bound
ret
popf
ret
xchg
nop
add
dec
out
inc
rcl
add
cmp
sub
out
test
mov
pop
cmp
lods
mov
es
aam
stc
sub
push
stos
fdivr
add
adc
retf
push
sub
push
ins
cmp
add
inc
xchg
movs
std
mov
and
les
sub
and
sub
or
je
in
inc
dec
fistp
pop
call
js
inc
jb
in
jmp
ret
imul
or
sbb
mov
pop
enter
dec
jp
jb
xor
vmaxps
rcr
mov
call
imul
sbb
pop
aaa
mov
push
pop
and
fs
sbb
or
jle
movs
inc
dec
ds
pop
das
sbb
out
pop
sahf
mov
stos
xlat
(bad)
mov
in
ins
pop
mov
sub
fadd
out
mov
xor
push
das
in
add
bound
or
mov
or
pop
pop
xchg
sub
retf
(bad)
pop
pushf
js
hlt
mov
rcr
and
imul
and
clc
les
push
(bad)
jne
lahf
aas
out
add
shl
sub
add
(bad)
inc
push
inc
mov
push
scas
rcr
mov
cmp
push
iret
sti
xor
push
retf
hlt
nop
call
cmp
call
adc
cdq
mov
add
movs
call
fdivr
mov
loop
outs
add
jnp
js
xchg
mov
in
dec
cmp
dec
aaa
adc
call
jge
sub
ret
adc
pusha
dec
cmps
lods
aam
pop
cmp
lock
jbe
sub
adc
fsub
sub
jb
je
fidivr
jmp
mov
pop
pop
push
pop
push
fst
adc
fs
inc
ffreep
xor
inc
mov
xchg
pop
call
cmps
pop
jecxz
cmp
mov
jno
js
dec
or
adc
cdq
and
sar
cmp
jge
pop
jno
xor
mov
jecxz
call
popfw
(bad)
out
mov
ret
imul
fcomi
mov
(bad)
in
pop
or
hlt
dec
push
shl
mov
mov
xchg
mov
fimul
mov
xchg
mov
adc
push
add
js
loope
and
fcomp
xchg
adc
test
or
ins
stos
(bad)
fdivrp
cmc
cmp
popf
out
jns
sub
int3
adc
(bad)
js
pop
mov
stos
in
jecxz
xlat
adc
popa
test
push
in
add
test
or
pop
scas
adc
rcl
mov
sub
or
data16
scas
lods
jecxz
fistp
int3
mov
sbb
jle
pop
std
push
(bad)
sub
lods
mov
out
xlat
pop
fsub
push
jae
dec
inc
rcr
mov
adc
test
(bad)
call
add
iret
sbb
in
mov
fldenv
lock
dec
repz
xchg
in
out
pop
dec
jmp
or
lds
dec
push
(bad)
mov
pushf
aam
mov
sbb
mov
jns
push
add
repz
test
or
aas
aam
clc
or
mov
sub
adc
into
(bad)
cmp
call
jecxz
hlt
adc
dec
mov
mov
or
mov
jo
aaa
hlt
shr
jmp
xchg
sar
mov
pop
sbb
stc
xor
jmp
mov
test
jecxz
lock
inc
movs
sub
fs
xor
into
inc
inc
movs
or
mov
xor
std
pusha
cmps
loop
stos
in
dec
or
fxtract
sbb
and
mov
aaa
inc
dec
inc
or
jmp
ficomp
jp
daa
and
retf
sub
imul
scas
or
retf
les
fimul
jg
push
sub
or
sbb
fdivr
jmp
pop
and
dec
mov
and
fs
mov
call
bound
aad
mov
(bad)
sub
add
(bad)
jmp
cmp
call
mov
imul
inc
icebp
ds
pop
xchg
daa
es
jbe
lods
movs
or
sub
sub
cmp
jno
and
sub
fimul
cld
sbb
in
jl
dec
dec
push
and
or
arpl
or
nop
outs
ficom
movs
cli
pop
jb
xchg
jo
jle
jmp
pushf
jo
add
cmps
and
add
pushf
stos
sbb
leave
pop
lods
push
repnz
lods
imul
fs
cs
and
or
push
call
in
icebp
adc
ss
gs
cmc
xchg
ins
arpl
mov
xchg
jmp
add
mov
jae
popa
outs
(bad)
sahf
ins
push
lock
pop
sahf
mov
scas
xchg
rcl
out
pusha
aad
sbb
stc
bound
push
sub
mov
xchg
addr16
jp
or
popf
jl
ins
mov
or
mov
mov
cmps
mov
jb
stc
pop
mov
add
arpl
imul
jg
mov
and
add
cs
push
mov
mov
xor
pop
inc
cdq
push
or
jmp
mul
xchg
cli
enter
test
(bad)
sbb
xor
xchg
inc
scas
xchg
dec
xor
xor
(bad)
into
jnp
push
add
sbb
jle
dec
into
into
xor
sbb
fcom
shr
ret
call
repz
nop
fidiv
push
mov
xchg
or
mov
aam
push
sar
test
xchg
psrlw
(bad)
int3
push
aaa
inc
sahf
pop
adc
pop
into
loope
pop
jbe
fst
mov
mov
popa
in
lahf
retf
mov
add
std
dec
mov
into
xor
pop
stos
inc
stos
lods
repz
imul
jae
adc
or
inc
mov
aad
cs
lahf
or
jecxz
hlt
(bad)
inc
movs
mov
shl
cmp
das
jbe
dec
stos
test
daa
mov
jnp
sub
repnz
clc
add
fnsetpm(287
imul
inc
aam
push
cli
xchg
std
shl
fwait
jle
fbstp
out
cli
fnstsw
jge
into
mov
pop
push
xchg
mov
das
add
mov
push
add
lods
mov
sbb
dec
movlps
cdq
lds
mov
fninit
test
xor
xor
ja
or
cld
push
dec
sub
or
or
out
adc
inc
retf
adc
pop
push
mov
dec
fimul
test
add
dec
loopne
shl
(bad)
aam
inc
inc
fdivr
pop
xchg
adc
jmp
test
jo
sbb
dec
cmp
add
jmp
inc
or
inc
fwait
inc
(bad)
imul
sub
jmp
jmp
in
icebp
push
xchg
mov
aaa
fdiv
cmp
in
ret
arpl
(bad)
cld
push
xchg
pushf
lds
cmps
ins
push
rol
sub
xchg
imul
and
add
(bad)
int
and
pop
cld
repnz
xchg
xchg
pusha
clc
sbb
xchg
push
jl
mov
dec
idiv
sub
stos
inc
mov
and
bound
and
cmp
mov
dec
(bad)
(bad)
and
in
sub
jnp
fmul
sub
rep
cli
mov
push
sub
stos
cmp
nop
ja
movs
outs
or
repz
(bad)
ins
mov
jns
outs
jno
push
cmp
fdiv
adc
retf
adc
push
(bad)
dec
pop
and
out
or
shl
inc
push
repz
fistp
xchg
fcmovbe
dec
ja
pushf
adc
retf
ins
pop
inc
sbb
call
mov
call
ror
and
push
ds
add
or
fist
jmp
daa
xlat
xor
mov
jo
xchg
inc
mov
xchg
into
into
and
daa
jae
mov
shl
mov
cs
xor
cmp
es
xchg
movs
neg
shl
dec
inc
repnz
and
jns
rcr
push
into
mov
pushf
or
ror
fstp
gs
cmp
jmp
inc
mov
adc
and
ins
loop
xchg
mov
loop
int3
and
sbb
push
xor
pop
test
in
jo
dec
push
dec
aas
in
sub
dec
dec
adc
ret
add
mov
push
sahf
or
out
mov
mov
(bad)
movs
outs
push
bound
jecxz
sbb
mul
sub
pushf
sub
js
test
sti
aam
add
fidivr
(bad)
retfw
push
add
fdiv
dec
in
push
jns
jo
push
mov
adc
fdiv
call
or
sbb
and
push
shl
mov
in
xor
test
add
lea
lock
out
nop
pushf
fwait
loop
push
or
bnd
aad
fidiv
xchg
ret
mov
aad
stos
(bad)
mov
jnp
inc
adc
cmps
rcl
scas
test
pop
in
adc
(bad)
in
(bad)
xor
in
enter
mov
jbe
mov
bound
fstp
(bad)
pop
in
outs
(bad)
pop
xor
rcl
cmp
inc
ss
out
mov
jmp
mov
inc
sbb
add
rcl
neg
gs
ja
bound
add
cmp
scas
adc
cmp
fbld
retf
in
jo
jg
adc
lock
inc
icebp
xor
cmps
pop
sbb
cmp
mov
add
int
sub
lea
scas
sbb
cmp
test
repz
mov
int3
sub
push
cwde
adc
imul
out
lods
xlat
xor
out
inc
sbb
xchg
sar
sbb
js
mov
add
test
es
mov
(bad)
jmp
imul
repnz
fidivr
inc
sbb
div
out
jno
jno
fcom
out
iret
ins
mov
mov
xor
enter
aam
test
sbb
dec
sbb
xor
add
pop
pop
cli
adc
xchg
inc
xchg
popa
jge
and
fs
push
cmc
test
lock
pop
fcomi
into
sub
dec
xchg
out
in
or
xor
ss
jmp
sbb
loopne
repnz
mov
ret
jae
mov
ret
xor
(bad)
jle
shr
xlat
mov
(bad)
sub
rol
dec
inc
xchg
inc
mov
adc
mov
cs
pop
outs
sub
mov
pop
jecxz
sub
out
cli
sbb
loopne
inc
xor
xor
(bad)
push
stos
cmp
lea
and
test
inc
push
jno
mov
pmaddwd
fisubr
jae
jl
out
call
lds
ficom
fidivr
add
sbb
inc
jecxz
or
mov
pop
ror
xchg
and
cmp
or
add
pusha
mov
xchg
xchg
gs
test
cmp
hlt
push
ror
xchg
(bad)
jbe
(bad)
jae
sbb
call
(bad)
dec
pusha
sbb
sub
sub
inc
cmps
ins
push
pop
sub
push
pop
and
jl
rcl
mov
mov
inc
in
inc
test
dec
dec
lea
push
mov
push
popa
sub
jge
sbb
test
mov
call
jmp
adc
inc
pop
xchg
stos
sar
jbe
dec
jns
cmp
call
fsubr
xchg
pusha
clc
mov
fs
or
pop
ins
sub
lds
ds
cmp
adc
shl
stos
ss
and
and
ret
loope
(bad)
idiv
mov
fidiv
adc
in
sub
scas
aad
(bad)
call
pop
jecxz
jl
mov
addr16
ja
ror
cmp
ins
xor
fs
ss
dec
xor
addr16
xchg
ins
cld
fcmovnu
jns
cmp
xchg
pop
adc
mov
cwde
(bad)
cli
inc
inc
xor
lds
mov
mov
(bad)
ret
test
jmp
mov
cmc
shr
xchg
and
int
push
outs
mov
xchg
bound
pop
push
in
aam
push
cmps
sub
loop
xor
dec
cdq
fisub
push
inc
daa
and
mov
sub
ret
pop
sbb
dec
push
adc
sub
ret
lds
out
dec
fistp
rol
xor
movs
pushf
push
movs
or
push
fstp
call
sub
ret
(bad)
pop
sbb
adc
jle
adc
ja
and
mov
addr16
mov
push
push
ret
mov
cli
or
aad
mov
int3
sbb
in
int
or
push
mov
xchg
xchg
mov
jno
and
jne
pop
jae
and
repz
pusha
xchg
daa
xchg
jne
mov
dec
fsubr
loopne
(bad)
fisub
cmp
adc
inc
or
fisub
imul
and
mov
test
popa
dec
ins
adc
push
out
cmc
das
ror
shr
pop
(bad)
jecxz
jno
arpl
mov
push
jmp
in
push
push
fistp
ds
mov
outs
aaa
je
icebp
ja
and
ins
mov
jne
cmp
out
fwait
call
bnd
les
mov
or
lods
fist
push
pusha
mov
push
popf
mov
add
lods
xor
push
lds
cmp
cdq
sbb
(bad)
sbb
pop
xor
and
mov
fstp
mov
in
rol
jo
dec
or
jge
leave
pop
sbb
cmps
icebp
fistp
cmps
test
jle
inc
xor
data16
std
adc
(bad)
mov
nop
inc
outs
sbb
mov
int3
push
rcl
pop
mov
ja
dec
inc
ficomp
mov
cdq
std
xchg
add
jg
lods
popa
sub
and
cmp
ds
imul
fistp
mov
jmp
lock
and
lods
stos
popa
mov
jnp
pop
test
popf
fs
xchg
and
or
cld
mov
aam
loop
and
ins
call
push
shr
test
mov
sub
aaa
sub
sbb
cmp
jne
sahf
pop
push
mov
(bad)
fmul
push
popa
mov
test
int3
jnp
add
sub
pop
(bad)
std
les
lods
mov
xchg
fmul
test
lods
xor
sbb
sahf
pop
jge
xor
je
fiadd
dec
pop
mov
test
loope
arpl
mov
adc
sub
ins
mov
(bad)
loope
fs
mov
sub
mov
aas
and
jmp
movs
lds
dec
adc
sbb
mov
xchg
gs
mov
jmp
mov
call
je
pop
repz
mov
jmp
lods
arpl
dec
call
or
xchg
repnz
or
mov
jb
or
lds
ret
sub
lods
sbb
jp
push
jb
je
xchg
mov
ins
aas
mov
or
add
inc
pusha
jg
and
or
xchg
or
adc
outs
xchg
pop
pushf
cli
sub
pusha
adc
sub
cmp
xor
ret
cs
imul
lods
lods
sbb
loopne
fbld
shl
test
add
adc
into
fild
fs
mov
dec
adc
xor
dec
sub
pushw
std
or
pop
not
dec
std
lock
mov
es
sbb
xor
and
in
or
retf
lods
neg
mov
imul
lods
jnp
sub
lahf
vmovlps
rcl
and
adc
fcomi
ret
in
mov
fwait
or
(bad)
adc
popa
pop
jmp
pusha
xor
psllw
pop
(bad)
call
dec
dec
aaa
div
dec
lods
mov
(bad)
adc
push
(bad)
jmp
add
loope
lds
xchg
inc
das
sbb
repnz
and
int3
sub
push
xor
sbb
or
popfw
fcomp
stos
fisub
pop
and
outs
mov
stos
retf
daa
arpl
push
add
outs
sbb
out
aam
push
pushf
aad
mov
iret
and
mov
je
ins
push
movs
push
add
jne
and
add
inc
data16
push
sbb
xor
mov
or
xlat
and
aad
retf
mov
xor
jp
test
fsub
adc
inc
stos
fcom
mov
inc
lea
jp
mov
or
cli
pop
daa
imul
sti
push
add
inc
iret
xlat
jp
popf
pop
popf
and
mov
pop
push
push
adc
push
xchg
sbb
add
not
push
mov
stos
jecxz
rcr
ret
mov
xlat
xchg
shl
adc
jp
popf
pop
cwde
fs
push
mov
mov
add
cmps
push
push
arpl
sbb
imul
sti
mov
pop
mov
lahf
pop
loop
sub
aam
dec
int3
(bad)
push
fs
mov
scas
mov
dec
and
lds
dec
pop
addr16
jb
mov
inc
adc
in
jnp
xchg
cs
jbe
arpl
mov
mov
adc
and
dec
repz
dec
cmp
jae
sub
cli
inc
int
jge
imul
lock
sbb
outs
xor
xchg
and
push
jge
fnstsw
jmp
sub
popa
push
mov
jnp
pusha
jbe
dec
xlat
add
out
xor
add
hlt
repnz
in
mov
inc
pop
lods
cwde
sbb
jg
scas
xor
(bad)
lods
mov
std
xchg
fistp
or
and
inc
push
or
xchg
pushf
mov
ficomp
hlt
leave
add
cmps
xor
fnsave
dec
shl
ins
pop
repnz
add
push
jmp
in
call
in
shl
mov
enter
aad
ror
cmc
les
jecxz
mov
sub
pop
pushf
ret
mov
inc
ins
sti
fwait
jmp
dec
mov
sub
scas
push
xor
fisub
(bad)
jmp
fld
xor
push
jle
and
jp
mov
dec
inc
aaa
adc
mov
jne
xchg
jle
mov
iret
inc
jp
xlat
pop
dec
out
push
fidiv
movs
push
pop
jmp
or
hlt
xor
mov
xor
popf
xchg
out
and
sub
sub
or
push
je
jmp
sbb
aaa
icebp
sbb
mul
aad
lock
mov
push
jmp
mov
jb
sub
ret
bound
xchg
sub
pop
or
(bad)
into
fisubr
jns
mov
dec
sub
lea
adc
(bad)
imul
in
imul
or
mov
pop
in
fld
in
cdq
sbb
sub
lock
xchg
cmp
mov
(bad)
push
sti
jg
dec
sbb
hlt
iret
popa
add
push
stos
fimul
add
lods
mov
sbb
(bad)
ret
outs
popf
int
ffree
aaa
mov
ja
(bad)
dec
mov
adc
pop
pushf
and
push
(bad)
or
or
aaa
cwde
icebp
scas
jge
mov
je
pop
cmp
pop
sbb
or
in
out
test
movs
icebp
into
mov
push
mov
cs
mov
test
loope
inc
pop
outs
out
mov
jge
add
js
inc
dec
and
imul
xchg
xlat
add
les
sub
xchg
sub
xor
mov
cmp
adc
sti
jp
jle
gs
dec
jmp
test
push
pop
mov
mov
lock
push
and
stos
stc
xchg
adc
cld
repz
pop
out
xchg
stos
add
dec
jae
ins
mov
sbb
icebp
mov
mov
sbb
mov
adc
scas
sub
das
sti
dec
(bad)
sbb
and
and
sbb
fiadd
mov
or
into
stos
arpl
jbe
test
out
clc
stos
or
clc
and
loop
stos
add
mov
adc
call
push
jnp
test
clc
int
pop
cdq
xchg
pop
lahf
add
sar
jmp
pop
sub
test
loope
dec
cmp
int3
pop
leave
fild
xchg
test
test
scas
pop
mov
inc
xchg
or
or
dec
cmp
into
push
or
push
jge
add
mov
pushf
data16
adc
jecxz
adc
push
test
jmp
inc
lea
sub
mov
sub
dec
popf
(bad)
push
nop
xor
mov
mov
(bad)
dec
push
xchg
cli
aam
pop
imul
repnz
or
pop
(bad)
je
lahf
jne
cmp
inc
mov
mov
test
push
mov
xchg
test
push
mov
scas
and
ret
pop
out
iret
push
je
ror
std
loope
mov
gs
mov
sub
and
xchg
cwde
test
jns
and
cs
enter
or
rol
xchg
popw
xchg
sbb
dec
rcl
loopne
dec
sbb
and
cmp
pop
jmp
leave
movs
popf
mov
ss
or
lea
jnp
test
mov
xor
ret
stos
lods
inc
adc
neg
dec
sbb
sar
cmp
adc
add
sub
jmp
outs
and
jg
(bad)
jl
jne
in
add
test
pop
mov
jg
das
push
aas
xlat
inc
cmp
cmp
pop
inc
dec
lods
fwait
mov
imul
dec
test
imul
xchg
test
stos
mov
cmp
mov
cmp
add
(bad)
jno
or
push
xchg
fs
ret
push
cld
mov
repnz
mov
add
retf
xchg
das
test
scas
inc
neg
test
in
in
call
jno
jb
dec
xchg
imul
nop
cld
add
loop
xor
jmp
cmpxchg
pop
ja
test
ins
mov
dec
xchg
addr16
std
test
xchg
ficomp
xchg
cmp
xchg
push
pop
retf
sbb
or
sub
jmp
jl
std
fwait
and
sahf
cli
in
jl
hlt
or
pop
add
aad
and
mov
pop
or
(bad)
mov
xchg
int3
aas
mov
push
int
xor
arpl
inc
mov
add
inc
cs
xor
not
out
ins
sub
imul
stc
dec
mov
push
(bad)
push
mov
test
jmp
adc
add
popf
mov
mov
(bad)
add
add
stos
push
or
and
leave
adc
pusha
xor
call
jg
and
retf
in
inc
mov
jb
xor
sub
retf
pop
mov
inc
icebp
and
inc
scas
xor
jl
mov
push
cwde
push
movs
(bad)
inc
add
jae
outs
pop
cmps
or
aad
push
cmp
scas
xchg
fwait
dec
sub
push
inc
ret
pusha
les
mov
cld
sar
push
add
pop
pop
jne
pusha
repz
pop
jbe
sub
test
push
fisubr
pop
aaa
out
aam
mov
lock
div
lods
jmp
fdiv
push
mov
sbb
and
push
movs
aad
nop
retf
mov
jge
(bad)
inc
es
or
je
mov
cdq
sub
inc
xor
mov
clc
into
dec
push
inc
iret
jae
scas
repnz
stc
mov
repnz
aam
sub
push
xchg
cmp
icebp
(bad)
cs
rol
pop
cmps
pop
inc
mov
jle
xchg
pushf
daa
call
xor
lods
xor
jns
jmp
fwait
sti
gs
pop
aad
call
cmp
ins
xchg
test
jmp
mov
icebp
sub
sub
cmp
add
or
shr
xchg
outs
dec
repnz
pop
arpl
inc
test
iret
jbe
into
xor
mov
rol
inc
mov
(bad)
les
fbstp
mov
sbb
movs
imul
retf
pop
push
inc
push
push
int3
push
cmp
(bad)
fwait
mov
mov
sbb
mov
(bad)
or
cwde
clc
arpl
pop
mov
adc
push
mov
dec
(bad)
mov
xor
jmp
and
js
inc
jmp
retf
adc
icebp
pop
push
loope
inc
in
loop
jb
jmp
popf
call
lock
push
mov
xchg
sahf
xchg
sub
ror
mov
or
das
sub
je
sub
cmps
push
shl
ret
jg
out
clc
lock
bound
dec
mov
sti
jl
cmp
std
out
or
call
rol
push
popa
sbb
nop
and
mov
and
dec
push
retf
sub
mov
fcomp
fcomp
mov
xchg
das
add
out
add
mov
cld
lods
push
sbb
cs
mov
jae
xchg
sub
in
sbb
pop
inc
pop
sbb
sub
loop
addr16
mov
call
ins
xlat
js
(bad)
dec
mov
mov
and
test
cmp
jmp
mov
cmp
xor
pop
push
repnz
jnp
popa
sbb
scas
enter
inc
idiv
push
(bad)
inc
enter
fld
sbb
lods
xor
in
mov
sub
pop
andnps
(bad)
std
stos
test
and
cs
fstp
mov
fwait
push
add
js
out
into
les
jmp
mov
inc
sub
out
fmul
and
lds
cmp
sar
or
and
je
cs
cld
js
sbb
and
add
push
xor
xchg
adc
test
jecxz
lods
stc
popf
lods
xchg
xlat
rol
jge
push
sti
(bad)
or
je
mov
out
pop
cmp
adc
sub
aas
pop
and
or
les
idiv
repnz
stos
call
or
call
mov
adc
dec
adc
lea
std
call
or
sub
enter
in
xchg
mov
fadd
cmc
aad
jmp
test
push
(bad)
enter
mov
inc
pusha
addr16
or
dec
in
cmp
test
into
sub
mov
stos
jecxz
rcr
xchg
outs
adc
cdq
sub
mov
outs
or
mov
mov
mov
push
je
dec
mov
xchg
mov
adc
ds
ss
and
cmps
push
wbinvd
scas
movs
jg
test
clc
mov
add
fmul
xchg
(bad)
and
enter
add
aam
(bad)
xlat
cmp
daa
mov
into
cld
adc
pop
dec
add
push
xchg
or
jecxz
das
cli
fwait
pop
aaa
and
inc
cmc
jmp
mov
mov
int3
cmp
addr16
bound
or
pop
in
leave
mov
jmp
pop
jl
mov
gs
icebp
out
int3
push
mul
and
sbb
xchg
fild
push
pop
add
rcr
mov
inc
cmp
jno
repnz
xchg
xor
std
in
hlt
dec
call
sub
push
xchg
mov
pop
mov
out
pop
xchg
mov
inc
ja
push
test
xchg
push
and
fdivr
(bad)
cld
jbe
inc
dec
pop
jle
pop
(bad)
jg
lods
sbb
hlt
shl
mov
ret
sub
pop
xor
sub
popf
out
fnstsw
xchg
jno
movs
(bad)
cmps
cmp
xor
out
adc
pop
out
adc
cmc
pop
cld
loop
mov
or
mov
scas
aam
or
hlt
lock
xchg
rol
je
xchg
rcl
call
cmp
cwde
pusha
mov
push
ins
mov
js
out
xor
movs
test
nop
and
inc
pop
loopne
mov
loope
and
daa
cmp
int3
lods
and
mov
loopne
jnp
jle
lea
push
aam
test
in
or
fist
pop
xchg
or
push
ret
adc
bound
adc
je
leave
mov
dec
pushf
add
aas
and
stos
ss
mov
cmc
push
jle
imul
adc
rol
aaa
mov
scas
jmp
xor
jl
add
imul
mov
sub
shr
movs
test
cs
out
sti
dec
mov
mov
pop
(bad)
jg
das
pop
jl
mov
sbb
mov
sti
mov
rcr
in
jge
cmps
outs
aad
sub
out
adc
cmp
push
jns
jp
fbld
pop
cld
mov
loopne
or
loop
or
xor
movs
mov
das
fst
mov
repnz
imul
out
out
out
test
xchg
add
fldcw
or
jns
jb
sub
jb
pop
inc
adc
aam
sbb
hlt
xor
cmp
adc
ins
dec
scas
inc
enter
movs
ins
inc
repnz
adc
add
icebp
jl
inc
push
int
sbb
cmp
jbe
jmp
xchg
out
fcmovbe
lods
sub
jmp
sbb
mov
jmp
sub
jecxz
scas
imul
mov
ret
pop
or
push
std
xchg
sub
mov
or
rcl
out
dec
mov
mov
lock
or
xor
lods
iret
add
mov
lock
ja
call
jno
cmp
in
mov
xchg
sahf
mov
enter
or
(bad)
out
cmp
in
inc
loope
into
xor
pop
and
jecxz
ja
push
movs
add
leave
das
jge
repnz
test
sbb
adc
bound
adc
cmp
out
scas
call
loop
jg
adc
clc
push
sbb
call
ins
and
xor
jnp
movs
jbe
cmp
aas
or
popf
call
(bad)
in
dec
sub
shl
cmp
xchg
jo
fadd
les
scas
addr16
xor
stos
fisubr
in
test
mov
int3
mov
or
push
mov
jl
inc
pop
xlat
into
test
and
dec
retf
fld
xchg
sbb
ror
xchg
push
cld
in
jmp
lds
mov
adc
jo
call
pop
leave
mov
bound
sbb
hlt
xor
(bad)
push
iret
xor
cmps
sub
or
pop
imul
adc
pop
jmp
sub
ss
mov
push
popa
cmps
pop
addr16
call
dec
sub
inc
std
out
add
or
push
sub
jne
out
jmp
hlt
sbb
jnp
inc
or
xor
call
sub
int
cmp
push
adc
push
sbb
in
mov
xchg
je
loop
and
icebp
ds
mov
in
xchg
bswap
dec
mov
dec
inc
adc
sbb
xchg
lahf
dec
push
inc
mov
xchg
dec
clc
out
lds
mov
call
cmp
repnz
in
xchg
std
sbb
adc
mov
inc
mov
aas
xor
mov
push
test
test
adc
in
jmp
rol
(bad)
jle
js
inc
std
cmp
out
imul
push
out
sbb
outs
dec
ds
adc
addr16
popa
jp
icebp
mov
pop
cdq
in
pop
mov
xchg
fnstcw
or
mov
xchg
lahf
xor
inc
nop
add
dec
push
iret
xchg
arpl
inc
jbe
jb
cwde
push
jp
cmp
push
sub
pop
loopne
inc
jno
std
jne
mov
cs
adc
mov
dec
lea
push
iret
or
adc
test
xchg
inc
pusha
lock
ins
pop
mov
addr16
sub
fadd
js
cmp
imul
xor
out
add
inc
adc
push
(bad)
add
outs
out
loopne
ins
push
mov
mov
aaa
bnd
stc
lods
sbb
lock
xchg
(bad)
xor
lahf
arpl
ffree
test
jnp
adc
pop
aaa
shr
xor
add
or
daa
mov
enter
xor
jge
mov
and
cmp
cmps
cmp
hlt
jne
pop
pop
out
cmovb
fisub
arpl
not
call
jmp
(bad)
call
rcr
jl
ja
in
jbe
clc
mov
rcl
not
idiv
inc
outs
aaa
jl
pop
lods
jecxz
mov
lods
mov
(bad)
mov
test
push
sbb
and
lea
popa
imul
(bad)
add
retf
cmp
mov
cmp
push
aas
mov
in
add
inc
scas
cmp
mov
pushf
lea
mov
fcomp
icebp
mov
stos
pop
lahf
push
cmp
jg
les
add
leave
into
outs
ror
xor
dec
sub
mov
mov
cli
mov
ins
lds
out
ins
out
aad
addr16
out
ins
adc
adc
push
test
pop
and
mov
pop
outs
adc
cs
ins
jl
loop
add
ins
dec
pop
idiv
push
push
call
fwait
push
mov
arpl
pushf
xchg
mov
sbb
div
xchg
mov
xchg
mov
hlt
add
retf
jecxz
scas
es
popa
clc
adc
push
adc
jl
dec
mov
push
inc
leave
sub
jmp
adc
test
fistp
retf
out
inc
add
or
es
lds
xlat
xor
cmp
daa
and
jg
pushf
rol
or
add
or
cwde
pop
mov
popf
loope
jbe
dec
(bad)
iret
add
clc
icebp
popa
ds
cmc
adc
sub
inc
sbb
push
repnz
jecxz
stos
push
movs
push
inc
push
mov
stos
jp
clc
mov
fistp
fcom
xor
sbb
inc
jmp
mov
outs
lods
jmp
in
add
adc
nop
mov
xor
popa
inc
ror
jecxz
add
sbb
hlt
scas
(bad)
cmp
ret
adc
cld
sbb
outs
sbb
aaa
cdq
push
xor
std
pop
neg
retf
mov
fwait
add
lock
push
jg
dec
push
in
in
ror
cmps
pop
pusha
inc
push
dec
dec
fst
mov
sbb
mov
dec
xchg
loop
movs
jbe
in
add
dec
test
leave
test
test
jp
cwde
mov
jbe
ret
out
mov
das
xchg
cmps
mov
neg
in
mov
add
movs
(bad)
out
push
scas
cmps
or
mov
mov
pop
mov
mov
lahf
cmp
test
shl
cmps
add
lock
mov
outs
lods
cmp
adc
hlt
rcl
jmp
push
jmp
enter
test
push
(bad)
(bad)
stc
mov
xor
pop
(bad)
in
scas
addr16
mov
xor
and
ret
push
jns
xor
mov
sbb
std
iret
or
inc
aaa
xchg
leave
dec
push
xchg
jnp
xor
pop
test
addr16
pop
push
push
mul
push
pop
ret
fs
shl
adc
dec
hlt
inc
fst
add
call
test
sub
xlat
movs
(bad)
dec
sub
inc
sub
in
ins
xchg
or
mov
or
jge
loop
inc
xchg
mov
es
retf
retf
outs
inc
sbb
jge
mov
inc
inc
push
add
mov
or
add
jmp
mov
jle
xchg
mov
dec
adc
imul
xlat
jmp
fwait
jns
int3
ror
mov
test
xor
pushf
mov
jns
adc
(bad)
test
out
rcl
ins
or
stos
and
or
mov
scas
push
fwait
xchg
mov
ja
sbb
inc
pop
add
test
ss
into
stc
pop
xchg
pop
fwait
push
ds
aam
std
mov
inc
adc
ret
int3
imul
sub
icebp
xchg
leave
pop
clc
test
inc
cmp
or
mov
sub
test
xor
fsubrp
cmp
mov
mov
lock
jb
sbb
and
aad
push
stos
pop
loop
adc
imul
std
cs
in
mov
dec
scas
daa
test
lods
xor
jecxz
cmp
adc
xlat
and
call
aam
scas
mov
mov
stc
mov
inc
js
cmps
jne
jnp
dec
inc
and
pop
(bad)
lahf
cld
xchg
sbb
mov
movs
test
rcr
test
ror
push
(bad)
nop
into
stos
mov
lods
pop
xor
es
inc
xchg
mov
or
cmps
cld
cmp
out
cmp
pushf
jge
fwait
in
loopne
lahf
adc
loope
imul
sbb
outs
pop
pop
mov
es
ror
jmp
(bad)
fldl2e
out
push
aad
fsub
lock
push
nop
add
push
lods
rol
jp
cmps
dec
push
dec
clc
divps
ins
mov
retf
(bad)
dec
(bad)
push
sub
mov
ins
push
cs
and
nop
and
lds
ja
out
out
adc
repnz
mov
fs
out
mov
cld
inc
jecxz
lods
outs
adc
dec
mov
popf
jmp
mov
mov
nop
ja
jmp
in
mov
add
out
inc
pushf
fdivr
jmp
retf
jle
xchg
cmps
sub
je
cmp
cwde
cld
pushf
mov
pop
pop
dec
outs
outs
(bad)
inc
daa
js
fstp
enter
mov
jns
repz
loopne
and
xchg
cmp
add
mov
sbb
and
shl
xchg
dec
iret
or
test
arpl
dec
rol
shr
inc
mov
mov
cli
jbe
(bad)
hlt
adc
inc
daa
je
push
dec
and
call
push
mov
test
imul
sub
outs
and
fld
adc
sbb
rcl
cmps
inc
ins
xchg
xor
cdq
xchg
pop
push
(bad)
cmc
ja
outs
popf
cmc
push
xor
in
sub
cmp
adc
jmp
mov
jl
out
push
push
stc
test
mov
cmp
mov
out
stc
sbb
push
cmc
jo
adc
(bad)
and
jmp
push
add
pop
enter
inc
daa
out
fisub
jle
setns
cld
push
(bad)
push
mov
push
add
rcl
cld
and
or
dec
das
lds
mov
ret
mov
retf
xchg
cmps
int
fisub
xor
sti
fiadd
out
in
into
ds
sub
daa
lds
push
sbb
arpl
scas
loope
loope
cmp
jp
sub
pop
test
adc
mov
cmp
cmp
in
lds
xchg
jns
stos
add
add
push
adc
test
cmp
and
push
add
xor
ficomp
jmp
gs
lahf
out
add
cmps
cmp
cmc
jp
cdq
fs
and
pop
mov
push
adc
pop
lods
out
xchg
cmps
ret
cmp
dec
dec
pop
or
push
push
xor
mov
loope
cmp
fdivr
data16
lahf
scas
mov
lea
stc
fwait
jae
jle
xchg
push
pop
int3
pop
pop
sar
loopne
dec
aas
dec
jmp
sahf
test
repnz
push
es
jnp
push
cmp
add
test
mov
add
and
xchg
inc
popa
stc
test
lods
xchg
pop
jns
pop
out
dec
push
mov
add
(bad)
xchg
and
cmp
cmc
cmps
(bad)
ficom
add
rcl
cdq
nop
or
or
sub
pop
movs
iret
fcomp
or
xchg
push
adc
mov
pop
xchg
lds
dec
hlt
in
xor
repz
add
jno
sub
mov
inc
stos
loope
cmc
cmp
mov
inc
(bad)
mov
stos
mov
test
addr16
inc
push
fisttp
jbe
push
retf
xchg
cld
iret
outs
sahf
push
sbb
inc
mov
mov
pop
idiv
repnz
mov
lahf
xchg
lock
out
jecxz
sbb
and
sub
mov
mov
lods
xchg
cmp
mov
mov
das
push
or
pop
xchg
jb
arpl
pop
mov
cmp
adc
sbb
pop
cmp
mov
jecxz
adc
mov
xchg
ins
aam
xor
sahf
mov
mul
call
xchg
inc
in
dec
imul
add
ret
lea
dec
in
(bad)
cld
aad
loop
fild
sbb
sbb
cmp
enter
xchg
xchg
pusha
int
les
jmp
(bad)
(bad)
je
xchg
lock
xchg
inc
arpl
jp
imul
shl
jno
outs
or
inc
xchg
mov
mul
dec
xor
outs
jmp
mov
add
sbb
hlt
lds
and
imul
inc
push
mov
mov
push
mov
js
add
xchg
hlt
xor
xchg
push
push
xchg
inc
and
jmp
sti
fiadd
cmp
mov
push
dec
mov
push
mov
stos
(bad)
xor
out
mov
push
les
jno
mov
mov
xchg
(bad)
xchg
jge
sbb
mov
sbb
loope
mov
jae
pop
mov
xor
and
sub
mov
xor
mov
rcr
les
pop
fsubr
add
cs
imul
sbb
lock
sub
adc
jns
pop
test
sahf
adc
mov
imul
push
into
pop
je
dec
pusha
pop
and
push
mov
ds
stc
inc
movs
add
mov
dec
fnstenv
mov
mov
fst
cmp
cmc
(bad)
test
bnd
jne
(bad)
in
vpsubb
push
mov
jle
idiv
mov
in
xchg
xlat
jne
rcr
mov
enter
sub
inc
movs
mov
adc
or
in
loop
pushf
(bad)
sbb
ss
or
hlt
cdq
adc
enter
aaa
inc
imul
xlat
daa
stos
nop
or
add
push
jno
mov
cdq
sahf
aas
mov
jnp
mov
mov
ficom
push
lock
jnp
loope
out
adc
mov
sub
fist
cmps
(bad)
fst
aaa
xor
repz
inc
clc
xor
in
rcl
adc
mov
inc
xchg
fcom
jne
cs
xchg
xchg
or
stos
pop
call
lods
mov
into
ins
or
mov
icebp
inc
sub
jmp
adc
leave
lea
xchg
les
inc
add
cdq
ret
jne
clc
pop
push
push
in
adc
and
jae
clc
cdq
(bad)
hlt
scas
xchg
(bad)
or
aam
out
mov
call
aaa
xor
mov
mov
or
jne
sub
rcl
aam
pop
cmp
dec
dec
dec
leave
and
cmp
mov
mov
fdivr
mov
pusha
cmp
sbb
vmread
aam
push
mov
and
std
xor
cmp
imul
cmp
rol
popa
cwde
stos
jmp
out
ret
add
loopne
sbb
sbb
jmp
cmp
xchg
push
sub
test
ret
fcom
add
pop
push
add
jmp
je
sbb
adc
cmps
stos
out
pop
outs
mov
mov
scas
mov
mov
ror
xor
iret
mov
and
inc
ror
pop
lods
retf
sbb
xor
push
sub
daa
fsubr
aaa
ret
push
xchg
mov
je
fnstsw
add
add
(bad)
rcl
add
xlat
and
std
test
xor
fdivr
inc
aad
sub
jb
fstp
push
mov
sub
into
adc
ret
push
push
jae
inc
test
add
lea
rcl
push
mov
pop
dec
xor
xchg
push
xchg
sahf
loope
xlat
push
dec
cmp
sbb
cmp
ret
(bad)
(bad)
int
add
add
push
xchg
push
mov
dec
mov
ds
jg
jbe
cli
or
push
into
push
in
scas
xor
inc
push
sub
sub
pop
jg
jmp
ins
cmp
nop
or
jecxz
or
aad
jl
cmp
test
je
leave
int3
lds
mov
cwde
nop
adc
scas
pop
push
xchg
mov
(bad)
loop
push
fisub
mov
xor
jg
cmp
movs
test
push
je
icebp
(bad)
aam
movs
jbe
or
or
mov
mov
inc
fdivr
jns
sbb
jbe
call
mov
or
mov
sub
jne
pop
test
lods
(bad)
hlt
stos
(bad)
jae
inc
aaa
in
data16
mov
stos
retf
adc
sub
cmp
add
and
pushf
jbe
xchg
ss
gs
cmps
add
inc
pop
pop
xor
movs
inc
rcl
out
jns
(bad)
ins
out
out
aam
mov
jnp
push
nop
pop
arpl
jecxz
movs
test
call
cmp
iret
(bad)
fucom
ss
push
mov
imul
push
mov
add
(bad)
dec
jne
cmp
add
mov
fst
aaa
mov
int3
lahf
pop
adc
pop
fld
xchg
div
push
or
sub
inc
push
jb
sbb
and
and
mov
cdq
out
fimul
scas
mov
xchg
in
cld
arpl
mov
jmp
sbb
mov
sti
retf
iret
mov
cmp
in
fs
mov
pop
xlat
call
add
jge
jmp
ds
jno
and
inc
sub
(bad)
popf
pop
and
leave
sub
push
xchg
push
jne
fsubr
les
imul
icebp
enter
fimul
push
ja
mov
out
adc
mov
xchg
clc
popa
inc
lock
and
shr
in
idiv
rol
cwde
mov
test
lods
cmp
jno
mov
pop
arpl
jo
inc
dec
add
jns
add
cwde
rcr
pop
cmps
rol
call
std
lock
test
in
dec
or
sbb
pop
jns
xchg
mov
or
int3
das
pop
gs
xchg
mov
xchg
scas
pop
(bad)
mov
mov
mov
mov
mov
mul
fcmovne
mov
cmp
inc
or
mov
(bad)
cs
jbe
jbe
mov
sub
mov
fdiv
retf
cld
pavgw
adc
xchg
movs
pop
xor
mov
dec
xsavec
mov
les
sub
bound
jle
imul
(bad)
lods
jl
jle
sar
dec
stos
mov
mov
popf
xor
sahf
adc
push
frndint
push
stc
iret
outs
sbb
sbb
mov
lea
rcr
inc
mov
das
vrsqrtps
pusha
xchg
push
(bad)
xor
mov
rol
aaa
test
add
fucomi
gs
rcl
in
mov
loopne
popa
or
pop
cmp
sbb
fcomp
sbb
jne
pop
inc
enter
push
adc
sub
jbe
sbb
adc
sbb
mov
retf
or
ins
mov
imul
add
add
inc
inc
jl
xchg
inc
enter
or
sahf
push
mov
fbstp
fbld
sar
js
mov
jl
scas
ror
cs
movs
je
adc
mov
push
mov
pop
out
jmp
dec
pop
(bad)
xchg
adc
mov
out
das
out
stos
add
mov
out
retf
in
jmp
mov
ja
add
pop
cmc
mov
int
js
push
pop
sbb
repnz
loop
jne
sahf
stc
jne
fdiv
mov
sub
dec
icebp
repz
cmp
xchg
sub
adc
mov
jmp
mov
cli
sbb
push
xchg
xchg
loope
mul
popa
lds
or
and
pushf
into
lds
or
jae
ret
cli
fsub
cmp
lods
outs
inc
into
mov
ins
inc
pop
into
jns
stc
jbe
or
pop
(bad)
jge
imul
push
adc
push
pop
xor
loop
xor
psubd
pop
pop
shr
enter
pop
outs
or
imul
cmp
push
inc
cmp
adc
inc
mov
jmp
cmc
outs
and
arpl
fistp
ja
add
sbb
and
out
outs
jns
xor
aaa
adc
pop
loope
fild
dec
ja
stos
cbw
mov
push
pop
xor
mov
mov
lock
into
in
push
scas
std
shl
add
add
xlat
(bad)
cmp
scas
mov
cli
jecxz
stos
std
dec
clc
jmp
out
sbb
cli
and
jl
daa
(bad)
arpl
out
fst
dec
or
repnz
or
mov
jl
(bad)
jnp
retf
adc
pop
adc
(bad)
mov
mov
aas
cmp
or
hlt
inc
xchg
cmps
and
mov
mov
hlt
push
pop
ror
leave
pusha
cld
sbb
ja
popa
fiadd
mov
(bad)
mov
daa
sub
popf
daa
and
and
jmp
sar
ret
retf
inc
icebp
push
jnp
test
int
push
pop
repz
add
ret
jns
repz
pop
push
into
pop
jb
movs
addps
xlat
bound
pop
dec
stc
imul
retf
aas
sub
(bad)
jp
add
(bad)
aam
test
or
push
adc
movs
imul
loop
vrcpss
mov
xor
rol
and
cs
adc
xchg
mov
outs
cld
dec
cmps
frstor
push
(bad)
rcl
test
in
dec
jno
xor
jp
inc
cmp
cmp
cmp
mov
cdq
or
cmp
xchg
inc
arpl
cmp
push
sbb
xor
sub
xchg
loop
xchg
jbe
push
stos
push
push
mov
imul
jnp
(bad)
stos
int3
enter
idiv
in
dec
lds
je
sub
and
jo
cdq
je
xor
in
mov
push
jmp
push
add
xor
xor
sbb
out
ins
(bad)
test
mov
push
ins
mov
scas
sub
(bad)
int
dec
test
test
xor
jg
retf
in
cwde
fdecstp
(bad)
aaa
cs
dec
push
and
cmc
scas
pushf
inc
loopne
stos
mov
mov
adc
and
jns
mov
js
cmp
mov
dec
mov
jge
xor
mov
stc
xchg
imul
or
hlt
jmp
push
lods
(bad)
jnp
out
test
jecxz
stos
in
lock
loopne
push
adc
mov
add
out
or
ror
or
mov
adc
mov
rcl
pop
cs
repz
rcl
(bad)
sbb
xor
cld
inc
sub
mov
add
enter
push
mov
repz
inc
jo
fistp
gs
mov
pusha
leave
cdq
and
repz
adc
ins
and
ret
fwait
je
popa
test
fwait
bound
mov
adc
js
inc
out
inc
loope
sbb
dec
mov
adc
cdq
cmps
sbb
cmp
adc
adc
mov
clc
jnp
xchg
loop
mov
mov
dec
repnz
(bad)
rcl
push
movs
inc
rol
jg
or
xor
mov
mov
stos
in
outs
popa
xchg
pushf
gs
jl
popf
icebp
xor
aad
jle
dec
push
(bad)
loop
lods
call
xor
int3
stos
pop
aaa
call
mov
cld
and
ss
outs
lods
pop
inc
dec
stc
mov
xlat
jmp
xor
mov
inc
xchg
mov
xlat
mov
jg
fld
mov
jbe
jmp
fsubp
nop
push
jg
push
hlt
retf
outs
or
mov
or
add
iret
xor
push
mov
aam
mov
xor
add
xor
adc
iret
scas
js
adc
jmp
in
and
add
inc
jmp
sub
mov
xor
jne
inc
(bad)
inc
inc
or
scas
push
adc
sbb
test
test
inc
pop
lahf
mov
xchg
push
xchg
test
xlat
or
idiv
pop
inc
or
jl
(bad)
or
mov
mov
jae
xlat
aaa
fadd
mov
fst
and
ret
cwde
mov
mov
pop
and
sub
and
aaa
lahf
mov
dec
int
fist
mov
cmps
xchg
pop
jnp
test
or
and
sbb
cmp
push
sub
fcmovnu
sub
jnp
sar
sub
aas
test
inc
icebp
repz
push
bound
iret
(bad)
lods
je
shl
xchg
xor
pushf
inc
push
iret
cwde
nop
push
push
psubb
and
fidivr
std
add
test
cmps
call
int3
stos
push
pop
arpl
mov
ret
adc
sub
iret
cmp
mov
inc
mov
shl
daa
pop
mov
test
shl
add
mov
mov
mov
adc
repnz
jp
and
lods
jne
aam
mov
dec
mov
inc
mov
out
and
test
(bad)
movs
fbstp
(bad)
sbb
popf
aam
imul
mov
je
pusha
je
daa
pop
jns
(bad)
add
fcmovb
mov
test
je
add
inc
fisub
dec
inc
stos
cmp
pop
lods
pop
(bad)
and
cmp
hlt
jmp
push
int
add
push
ret
lds
inc
sbb
outs
dec
push
push
adc
mov
sub
xor
call
aaa
lahf
cmps
pushf
test
in
adc
sbb
call
cmp
mov
mov
xor
mov
hlt
and
in
popf
jbe
aaa
mov
jmp
jo
icebp
add
adc
jnp
pop
mov
dec
inc
fsubrp
pop
and
push
jo
push
xchg
sub
sub
test
out
ret
mov
jmp
cmp
rol
inc
sbb
lods
xor
das
not
(bad)
sbb
bound
retf
leave
jns
sbb
enter
mov
xchg
pop
add
daa
xchg
xchg
aad
leave
lock
push
cmc
pop
or
dec
mov
ja
push
jge
xor
loope
(bad)
mov
sub
cmps
jno
lahf
fimul
mov
cmps
call
std
jnp
jg
xor
int3
lds
mov
and
dec
push
out
cmp
cmp
jmp
cli
fwait
xor
mov
jl
xor
ror
and
xchg
aad
inc
jns
mov
ret
push
add
sub
iret
cld
les
mov
daa
xchg
pop
adc
movs
push
dec
mov
pushf
jno
rol
mov
les
xor
push
cwde
jecxz
mov
sbb
lea
pushf
dec
mov
or
(bad)
or
test
sub
jne
dec
cmp
mov
retf
push
lahf
aaa
mov
out
mov
out
pusha
cmp
dec
stos
fstp
movs
xchg
lea
adc
ret
mov
dec
or
stos
pushf
jle
es
retf
enter
mov
int3
add
fsubr
jnp
outs
adc
iret
dec
inc
bound
into
push
movs
aaa
loope
mov
cmp
inc
cmp
and
and
lds
xchg
mov
inc
push
xchg
push
mov
adc
pop
mov
xchg
sub
mov
dec
ds
and
pusha
pop
fldcw
xor
sbb
arpl
inc
repnz
sub
push
test
je
fwait
out
in
jge
test
push
mov
xchg
push
cld
pushf
push
and
mov
push
sbb
or
cmp
enter
cdq
(bad)
dec
mov
jp
cmp
jl
clc
add
xchg
push
mov
push
cmp
ror
mov
xor
sbb
pop
cmp
cld
sbb
mov
or
jb
dec
push
stos
add
aam
mov
add
pop
and
test
add
mov
das
inc
repz
out
aam
mov
xor
and
pop
sbb
test
add
pandn
test
inc
jle
(bad)
mov
fild
ins
or
xor
out
out
icebp
iret
fcmovb
repnz
fwait
sahf
xor
(bad)
xchg
xor
xor
pop
shl
cmp
mov
add
or
lahf
mov
call
mov
adc
dec
push
dec
mov
fstp
popf
mov
rcl
mov
mov
rcl
jnp
dec
pop
cdq
imul
js
icebp
push
nop
(bad)
mov
int3
or
mov
push
stos
sub
push
lods
ss
add
fdivr
xchg
push
mov
adc
add
fucom
nop
add
ror
dec
leave
loopne
mov
and
xchg
adc
jle
jge
(bad)
pop
sub
sub
add
xor
mov
pop
pop
into
push
psrlw
adc
dec
jmp
sar
(bad)
hlt
cmp
sbb
pop
gs
ret
repnz
sub
and
js
sbb
and
mov
xchg
sbb
cmps
or
sub
jne
dec
sub
mov
mov
stc
mov
sbb
cli
arpl
or
or
adc
aaa
xor
cmp
mov
cld
sub
(bad)
sbb
cmp
and
xor
adc
lds
pop
hlt
or
xlat
cdq
xchg
push
or
cwde
and
retf
push
sub
pop
adc
jnp
ficom
icebp
shl
jb
ror
xor
repz
inc
jae
push
mov
aam
add
add
in
or
scas
test
gs
clc
outs
test
sbb
sub
ror
dec
dec
xor
out
cmps
jne
mov
fist
nop
add
inc
fucomp
dec
bound
clc
imul
adc
ret
dec
dec
sbb
fs
dec
xor
or
lock
jmp
ret
jp
jmp
dec
in
xor
inc
test
jmp
dec
into
cmp
or
sub
pop
clc
jbe
or
arpl
pushw
lods
pop
xor
movs
sahf
je
(bad)
xchg
aas
push
out
(bad)
out
(bad)
outs
je
ja
add
inc
(bad)
xor
aas
fnstcw
js
addr16
pop
(bad)
stc
leave
sub
fs
adc
xor
inc
sti
dec
xchg
repz
xlat
jae
aam
fucomi
out
or
sar
es
test
fisttp
imul
mov
aam
mov
cmp
in
or
lods
out
jae
inc
xchg
inc
and
and
ss
in
scas
jno
inc
push
in
xchg
fnstsw
aad
dec
mov
fild
bswap
(bad)
mov
pop
mov
pop
cmc
and
pop
mov
mov
outs
mov
int3
retf
cmp
pop
jae
xchg
outs
out
xor
pusha
les
or
xchg
fwait
cmp
mov
daa
lds
out
popf
dec
call
mov
sar
jb
jb
xor
aas
mov
cmps
dec
xor
xor
dec
aas
and
cmc
cli
mov
xor
sbb
cdq
iret
mov
and
(bad)
xor
push
mul
mov
fnstcw
push
cmp
jns
jmp
jbe
aad
mov
inc
xchg
push
adc
sbb
(bad)
in
movs
retf
push
int3
xchg
jbe
loopne
lahf
leave
outs
fidivr
(bad)
adc
xor
sahf
pop
adc
jbe
xor
rcl
jle
stos
or
sub
xchg
inc
push
ret
pop
aad
les
pop
mov
cld
(bad)
pop
je
mov
jmp
ja
test
enter
and
sti
xchg
inc
xchg
daa
fisttp
push
dec
xchg
pushf
or
and
out
and
mov
loop
mov
or
jns
xchg
int3
ficomp
sbb
pop
sbb
stos
sbb
icebp
fist
ins
aam
pop
aad
xchg
loope
js
xchg
mov
xor
sti
std
nop
jg
and
lahf
mov
add
cwde
stc
(bad)
(bad)
stos
outs
shl
adc
in
pop
mov
ds
xchg
sbb
mov
push
jnp
mov
std
jl
fmul
push
in
stc
push
sbb
xchg
adc
inc
nop
cmp
or
daa
sahf
mov
nop
mov
dec
mov
dec
push
adc
aas
mov
push
out
mov
jl
mov
push
mov
add
inc
mov
or
sar
jno
cdq
dec
test
std
mov
(bad)
mov
sub
repz
data16
aaa
push
test
scas
js
pop
xlat
cmp
popf
stc
xchg
adc
dec
outs
(bad)
test
xchg
mov
xor
retf
ret
ins
sti
xchg
jg
shl
test
jmp
sub
loope
out
push
shl
mov
mov
lea
out
xor
sub
or
les
out
lds
and
sbb
and
xor
sub
mov
mov
mov
jp
mov
xor
daa
fld
mov
in
pop
ins
jecxz
inc
and
sub
dec
xchg
movs
push
push
fwait
push
xchg
jo
jecxz
clc
mov
pop
sbb
push
call
jl
sub
inc
fadd
add
js
retf
std
sahf
test
xor
jmp
daa
into
mov
cld
mov
ror
test
jbe
gs
enter
add
scas
aas
retf
push
sahf
outs
and
fucomp
jae
push
fs
push
mov
loope
cmp
popa
ror
push
fimul
ja
fidiv
in
sbb
fwait
call
push
ss
pop
addr16
sbb
popa
add
rcr
daa
cdq
popf
pop
stos
popf
adc
out
in
sub
in
or
outs
aaa
fsubr
cmp
push
pop
cmps
xchg
push
mov
cmp
call
sahf
xchg
out
push
xlat
push
adc
sti
stc
pop
daa
movs
lods
outs
int
shl
pop
and
cmp
pop
cmp
fstp
ds
arpl
nop
(bad)
test
xlat
fsubr
sar
or
fcomp
jmp
inc
mov
cmp
rcl
adc
adc
in
loope
pop
lock
and
call
movs
or
imul
lock
push
push
push
nop
stos
sub
or
or
xor
cwde
call
or
dec
ret
cmp
call
leave
jmp
aas
xchg
dec
pop
(bad)
out
gs
push
outs
inc
mov
cmp
cs
(bad)
mov
repz
dec
mov
mov
mov
rcr
rcr
sub
lds
in
inc
or
push
cmps
sub
and
jg
sahf
mov
sbb
pop
pusha
ss
(bad)
sub
xchg
inc
sbb
mov
mov
and
fdiv
jp
ds
add
scas
jb
iret
jg
stos
inc
or
or
mov
push
jp
add
sbb
dec
cdq
ins
inc
into
sbb
cmps
pop
test
inc
push
cmp
add
(bad)
fstp
mov
mov
shr
pop
cwde
jl
jne
mov
sub
xchg
outs
pop
stc
jmp
dec
mov
mov
sbb
push
fmul
ja
ja
cli
push
mov
jl
outs
sub
push
imul
mov
xor
(bad)
push
sub
cmps
stos
jb
adc
inc
das
cmp
mov
mov
lahf
dec
pop
imul
(bad)
fimul
add
pusha
and
push
ret
ja
test
retf
std
or
push
out
inc
sti
cmc
movs
cmp
adc
ins
mov
lods
push
or
sbb
inc
cmp
cmps
xchg
ss
stos
mov
movs
xchg
arpl
fild
dec
data16
mov
xchg
push
mov
and
imul
lods
in
dec
shl
fidiv
lods
cmovns
cmp
adc
rcl
add
inc
jge
jg
lahf
repz
push
push
lods
in
xchg
sub
xchg
or
retf
pop
imul
or
retf
ja
iret
(bad)
xor
mov
mov
mov
adc
add
test
call
sub
xor
mov
sbb
jnp
xor
sti
push
ret
push
lock
jmp
cmps
fsubr
or
jb
inc
dec
add
in
gs
loopne
(bad)
data16
jae
mov
push
rcl
ins
inc
jmp
jns
dec
or
movs
and
std
and
pop
mov
test
mov
mov
mov
xchg
lods
xchg
stos
data16
fadd
xchg
dec
jo
xor
add
repz
imul
sbb
push
push
int
and
cld
test
xchg
pusha
scas
sub
movs
cmps
cmp
or
outs
push
int
sbb
mov
push
cmp
ins
idiv
xor
mov
and
(bad)
dec
adc
push
inc
xor
pusha
fs
dec
mov
fwait
test
jmp
es
pop
je
dec
or
pop
iret
or
scas
xchg
mov
sub
lahf
(bad)
lahf
mov
mov
and
dec
pop
push
adc
push
xor
mov
pop
xchg
bound
test
xchg
test
das
and
mov
dec
ss
pop
fmulp
or
cmp
jl
and
ficom
or
add
mov
(bad)
shl
fstp
loope
sub
pop
or
pop
dec
neg
fimul
lods
jbe
jo
stos
pusha
push
leave
adc
mov
idiv
jmp
lahf
std
(bad)
in
cmp
sbb
push
xor
rcl
stos
shl
(bad)
movs
mov
push
xor
shl
sbb
sub
(bad)
push
arpl
dec
(bad)
adc
ds
adc
mov
mov
ins
and
mov
loop
neg
lods
jle
cmps
imul
sbb
jbe
mov
shr
jl
xchg
fist
lock
or
fld
leave
cmp
cdq
lods
pop
dec
and
jl
sub
ret
pop
adc
adc
(bad)
ins
mov
rcl
pop
xor
dec
aam
mov
or
stc
outs
fsub
cs
and
pushf
add
ds
fisubr
loopne
out
xchg
mov
xlat
stos
jmp
xchg
jne
inc
pop
adc
shr
dec
add
mov
das
into
xor
fld
mov
(bad)
scas
mov
mov
das
xor
adc
jne
pop
shl
add
dec
xchg
xor
sti
(bad)
std
xor
jge
push
cmps
jbe
outs
inc
adc
adc
mov
test
jno
ins
pop
ins
jecxz
enter
adc
xchg
lock
jg
inc
adc
mov
mov
loope
shl
(bad)
js
call
aad
cmp
cmp
(bad)
jns
pop
mov
movs
popf
out
adc
pop
xchg
mov
jns
xlat
lock
dec
in
add
push
rcr
popf
add
pusha
mov
bound
xchg
test
push
(bad)
push
in
popf
xchg
cmp
xor
imul
gs
and
mov
dec
mov
retf
xchg
mov
jb
mov
dec
out
icebp
mov
cdq
icebp
aas
out
js
test
sti
stos
sbb
test
mov
add
dec
add
push
adc
data16
jnp
ins
mov
out
add
fstp
add
sub
and
mov
(bad)
jns
sar
loope
and
cli
cmp
xchg
sub
test
or
imul
call
jno
and
jge
pop
stc
ds
add
dec
jae
iret
jecxz
retf
mov
inc
retf
shl
inc
push
push
mov
mov
xchg
das
sbb
inc
jb
adc
aam
(bad)
call
fwait
cs
jge
cli
sbb
sub
leave
test
dec
dec
push
mov
(bad)
rol
mov
sub
daa
cmps
jae
cmp
fcom
adc
hlt
sbb
jns
sbb
movs
mov
dec
push
adc
arpl
and
call
ds
mov
imul
in
push
push
sahf
addr16
jmp
and
stc
ret
arpl
jo
sbb
jmp
adc
cmp
arpl
adc
or
jp
pop
mov
dec
push
cdq
in
cmp
and
add
gs
xor
jp
pop
jmp
fstp
add
xor
mov
cmp
mov
cmp
add
cmps
jmp
clc
out
xor
pushw
jb
push
inc
inc
aas
jle
or
mov
fimul
clc
fwait
stos
push
and
cs
or
sub
jecxz
iret
push
push
fimul
test
or
pusha
xor
hlt
retf
adc
inc
addps
mov
pop
ret
cmc
inc
sub
mov
lods
or
add
adc
fcmovnbe
dec
(bad)
adc
sbb
dec
push
imul
lahf
jecxz
test
inc
daa
mov
fnstcw
pop
pop
out
cli
mov
cmp
sahf
add
mov
jmp
idiv
outs
cmp
scas
call
addr16
test
pop
mov
cmps
sahf
fistp
mov
dec
clc
push
push
test
enter
cmp
sbb
inc
and
bound
in
xor
lea
cmps
xchg
mov
or
es
stos
test
or
mov
xchg
call
add
cmp
xor
loop
or
das
xchg
xchg
leave
xchg
inc
adc
sti
daa
sub
jbe
pop
hlt
push
sbb
push
mov
pop
daa
(bad)
ds
mov
outs
retf
sbb
sub
scas
dec
push
ss
sbb
sub
jmp
fwait
mov
mov
mov
sub
jmp
add
sub
dec
cmps
cmp
stos
lock
mov
cmc
test
lods
scas
mov
mov
pxor
loop
test
mov
addr16
jno
mov
call
mov
dec
into
fcomp
cmps
jecxz
dec
cmps
sahf
inc
add
out
pop
ins
in
pusha
jae
pmullw
scas
inc
push
xchg
ds
xchg
mov
xchg
lock
scas
jb
daa
mov
cmp
dec
dec
xchg
jnp
out
popf
ins
hlt
bound
xchg
fst
in
test
shr
mov
lock
or
imul
stos
out
mov
mov
stos
xor
adc
add
dec
mov
popa
(bad)
mov
shr
ja
leave
dec
xchg
inc
cmps
push
add
and
scas
cdq
stos
xor
sbb
jmp
adc
mov
mov
mov
fsub
xor
jno
aaa
sub
outs
cmp
inc
aam
push
pop
test
xchg
cmp
jns
xor
pushf
lea
loop
mov
push
cmp
sti
mov
retf
mov
call
xchg
pushf
jmp
mov
jne
inc
jg
fimul
mov
retf
popf
sbb
nop
jmp
lods
clc
jnp
mov
lock
xchg
sahf
jmp
or
mov
push
pop
scas
sub
fcom
mov
psubsb
es
inc
mov
dec
cmp
call
xchg
cmp
inc
inc
(bad)
and
loopne
test
jns
ss
inc
iret
fst
xlat
or
jg
test
xor
or
and
or
push
adc
mov
cmp
sti
nop
xchg
cmps
cwde
outs
xor
call
shl
in
jge
jle
push
dec
add
repnz
cld
leave
ja
cmp
push
lahf
lahf
sbb
scas
repnz
movs
fucomp
shr
imul
ror
pop
mov
and
sbb
ds
test
fmulp
mov
(bad)
dec
mov
push
popf
xor
add
nop
inc
int3
add
xor
mov
outs
dec
sub
cmp
jmp
inc
jmp
popa
out
inc
and
mov
sbb
retf
test
call
mov
jge
xchg
lock
fincstp
mov
mov
mov
adc
arpl
aas
shl
mov
pop
std
push
mov
pop
lock
jp
sub
or
mov
pop
jle
mov
sub
cmp
push
sub
shl
dec
mov
sbb
int3
push
xchg
xchg
ds
mov
loope
push
aaa
xchg
dec
add
not
imul
test
out
mov
mov
mov
inc
inc
sub
add
pop
mov
les
pusha
lods
repnz
jae
ret
push
movs
jae
or
dec
add
nop
mov
or
mov
jecxz
xlat
sbb
cld
pop
sub
es
movs
lock
(bad)
push
xchg
jmp
xchg
inc
sbb
pop
(bad)
idiv
pop
sbb
add
shr
xor
jecxz
pop
outs
pusha
bound
(bad)
mov
loope
mov
dec
int
loope
lock
push
sbb
push
push
ret
fldcw
fnsave
lea
push
out
jnp
stos
xchg
js
fisub
enter
in
ins
outs
hlt
xchg
inc
clc
jb
jbe
and
push
int
xlat
mov
adc
imul
xchg
xchg
ins
leave
test
jmp
icebp
mov
inc
push
jg
imul
in
and
and
popf
movs
sar
jmp
dec
lods
jae
xor
add
aam
mov
or
loopne
jg
addr16
sahf
or
js
je
icebp
cmp
popf
lds
cmps
pop
adc
or
pop
jge
jbe
stc
mov
jg
sahf
or
mov
cwde
cmps
or
dec
data16
adc
test
(bad)
std
inc
les
mov
dec
sub
fmul
sahf
mov
stos
aad
jmp
std
or
mov
cmps
pop
adc
test
ret
pop
test
lock
lahf
xor
or
popa
loop
ds
lods
push
out
mov
and
mov
ss
adc
sahf
icebp
jnp
in
scas
mov
sub
shr
nop
not
test
fdivr
jmp
arpl
xchg
sbb
into
pusha
dec
ret
and
jns
jle
and
(bad)
repnz
cs
mov
add
std
jg
aaa
push
std
and
mov
mov
dec
and
dec
jl
xchg
lahf
loopne
dec
in
shl
fbstp
xchg
mov
pop
sti
jns
mov
cld
xchg
mov
jmp
xchg
rcr
ret
sbb
xchg
or
xchg
test
sbb
nop
loop
sub
dec
pop
mov
mov
out
push
dec
dec
sbb
retf
mov
jae
(bad)
stos
or
pop
icebp
adc
cli
int3
xchg
neg
mov
shl
and
mov
xchg
mov
or
mov
or
adc
inc
int3
mov
aaa
cmp
das
dec
mov
iret
xchg
mov
cmp
pusha
inc
int
xchg
push
inc
mov
stos
mov
ret
xchg
aam
jp
int
outs
mov
cmps
jbe
cmps
in
ja
out
shl
sbb
xor
sbb
jmp
xchg
mov
movs
test
in
jmp
push
cmps
mov
cmps
pop
hlt
int
push
cwde
scas
sbb
xor
dec
or
lea
mov
cmc
cs
fwait
mov
out
jle
adc
sahf
idiv
and
mov
add
push
cwde
popf
lods
inc
(bad)
xlat
mov
clc
adc
mov
xchg
adc
jg
xchg
pushf
vmwrite
mov
cmp
fisubr
xchg
mov
xchg
stc
push
(bad)
or
pop
push
fwait
or
sub
(bad)
cld
inc
out
push
hlt
pop
and
in
popf
push
mov
xlat
(bad)
cmps
call
arpl
add
aas
stos
ret
mov
add
jns
mov
jmp
test
es
call
add
cmp
sbb
js
pop
cs
mov
xor
in
inc
pop
idiv
mov
push
popf
iret
xchg
jge
mov
add
mov
adc
fwait
add
pop
push
fsub
ins
jns
xor
inc
js
not
daa
xlat
sbb
mov
addr16
dec
test
enter
arpl
lods
mov
mov
inc
test
inc
and
add
pushf
stc
cmp
div
jb
and
xor
jne
mov
pop
fdivr
mov
inc
shl
sbb
sub
adc
pop
pop
int
out
pop
std
lods
lock
or
fnsave
push
rol
mov
xchg
sub
sbb
(bad)
lock
ss
clc
sbb
(bad)
stc
scas
cmps
popa
jl
xor
call
out
repnz
repz
push
and
pusha
sbb
and
or
aad
jns
pop
mov
sub
out
xchg
adc
sbb
test
ret
pop
cmp
add
jo
dec
push
movs
xor
cwde
popf
cdq
add
mov
sub
call
xchg
(bad)
aas
int
dec
adc
cmp
lods
mov
loop
pop
lods
or
dec
pop
add
(bad)
push
mov
aas
inc
adc
mov
cmp
mov
div
mov
dec
rcr
out
xor
call
xchg
pop
sbb
adc
lds
jle
imul
adc
mov
add
xor
xor
nop
push
cmp
mov
sbb
mov
xor
adc
call
jne
daa
jmp
cmp
add
jns
xchg
xchg
jmp
xchg
int
sbb
in
jno
loope
gs
fwait
dec
(bad)
jl
mov
test
not
lods
mov
scas
adc
(bad)
push
cmc
int
cmps
xor
and
daa
inc
mov
xchg
test
icebp
mov
popf
stos
fidivr
cmps
(bad)
call
pushf
rcr
adc
(bad)
mov
call
sbb
frstpm(287
jg
xor
mov
sahf
enter
or
inc
adc
xchg
ss
enter
ds
outs
cmp
stos
sub
inc
inc
jns
adc
sub
jnp
push
push
xchg
xchg
scas
or
adc
sar
call
aas
outs
dec
leave
cmp
rcl
movs
inc
stos
rcl
or
popf
mov
cmp
pop
loope
mov
mov
bswap
outs
fnsave
sbb
fsubr
mov
ret
add
xor
cld
pop
sub
clc
dec
icebp
pusha
int3
fmul
jae
scas
rcl
call
sbb
jbe
mov
inc
mov
inc
(bad)
sbb
cld
push
add
movs
test
cli
adc
outs
lea
dec
scas
sbb
sahf
in
inc
inc
dec
retf
sbb
ins
std
mov
cmp
scas
(bad)
rol
mov
and
xor
mov
dec
sahf
loop
shr
add
cmps
pusha
sub
stos
mov
sub
adc
je
popf
pop
js
add
je
retf
push
out
push
std
push
daa
fcmove
stos
dec
adc
jmp
xor
js
fnstsw
dec
mov
or
sub
jp
fwait
or
es
pop
sbb
mov
xor
stc
sub
pop
mov
iret
mov
leave
sbb
in
jb
jns
test
ds
or
cld
pop
push
xchg
push
cmp
push
hlt
rcl
loop
mov
das
xchg
jae
lds
in
pop
inc
mov
movs
arpl
daa
ja
addr16
es
push
or
xor
sub
fcmovne
addr16
xchg
push
neg
int
sub
fbld
or
out
mov
out
mov
pop
inc
add
push
sbb
ds
sub
inc
or
lods
outs
test
add
fistp
pushf
mov
pushf
ss
adc
or
xchg
pop
xor
ret
les
test
push
push
stos
fs
in
scas
test
dec
dec
ja
inc
rol
inc
xlat
imul
add
push
inc
pushf
and
push
sbb
dec
dec
sub
in
mov
scas
push
or
lds
inc
jne
adc
mov
xor
cmp
mov
push
sbb
jae
fist
push
repnz
test
inc
dec
imul
push
cs
pushf
ds
imul
retf
pop
add
out
scas
adc
mov
sub
jno
pop
test
stos
es
mov
in
les
daa
loop
inc
mov
adc
out
(bad)
mov
jge
stc
aaa
mov
dec
mov
stc
iret
jmp
add
xchg
clc
jmp
jmp
idiv
xchg
ss
shl
sub
mov
in
jecxz
out
ins
sbb
dec
inc
push
mov
sbb
jp
fidivr
jmp
and
cmp
or
rcr
lea
cld
sub
lods
jl
or
and
dec
js
mov
sbb
iret
mov
(bad)
test
inc
pop
add
mov
sti
aad
inc
cmc
ss
sbb
jle
cmp
stos
mov
repz
es
jmp
pop
mov
cmp
fisttp
je
xor
arpl
push
call
sahf
push
cmp
cmova
es
data16
loopne
outs
pop
dec
test
in
iret
imul
push
or
in
pop
loope
fsubr
add
cs
pop
cmp
adc
jge
xchg
xchg
jmp
das
stos
imul
outs
or
jae
(bad)
bound
mov
in
imul
cli
mov
inc
xchg
fldenv
icebp
xchg
mov
xchg
adc
mov
push
pushf
clc
pusha
ficomp
fisub
mov
pop
cmp
jb
inc
xchg
sbb
pop
pop
pushw
ins
push
cmp
not
lods
sbb
pushf
mov
fcmovne
pop
daa
xchg
outs
sti
repnz
and
add
or
loope
fistp
ins
std
loope
mov
mov
add
adc
mov
int3
fcomp
inc
or
add
and
loop
cmp
and
pop
xor
mov
jbe
mov
dec
fcmovu
bound
mov
push
clc
or
clc
cdq
or
sub
pop
mov
into
cmc
scas
(bad)
movs
mov
cmps
add
inc
mov
sub
outs
aad
pop
or
xor
mov
mov
ins
addr16
add
ss
add
and
test
adc
push
xchg
dec
popa
out
div
arpl
mov
jl
push
pop
lods
cs
ror
add
hlt
pop
xor
cmp
xchg
daa
pop
mov
jp
or
xlat
in
mov
hlt
xchg
mov
mov
pusha
xchg
pop
movs
enter
pushf
cmp
pop
jle
into
adc
loope
iret
jne
mov
xchg
neg
sbb
jmp
fild
or
cmc
add
add
adc
je
mov
mov
fisubr
adc
xor
mov
js
(bad)
xlat
repnz
test
and
mov
mov
sti
pop
js
sbb
pop
(bad)
into
xor
movs
jl
test
dec
retf
fs
shl
cmp
outs
repnz
push
sbb
jmp
fisttp
jecxz
xor
mov
or
adc
dec
push
retf
stos
pop
xchg
aam
add
dec
cmps
aad
aaa
mov
les
into
jmp
repnz
adc
shl
popa
popa
mov
or
ins
xchg
rcr
adc
jecxz
popf
in
sub
test
pop
lock
out
or
dec
sbb
or
repz
push
std
and
pusha
sbb
push
xlat
mov
mov
shr
imul
mov
ins
xchg
sub
dec
ret
pushf
and
fsubr
fild
leave
iret
mov
int
lods
or
inc
(bad)
movs
jbe
imul
or
test
das
popa
out
fdivr
popa
sbb
retf
push
push
mov
inc
sub
mov
sbb
sbb
ins
xor
ja
or
mov
aaa
lods
sbb
jo
in
bound
jb
je
and
inc
jno
jge
sbb
cli
sbb
mov
iret
stos
lea
cs
sub
fs
imul
js
pop
(bad)
xor
in
outs
mov
cmp
imul
add
dec
adc
imul
sbb
(bad)
xlat
inc
in
mov
push
in
movs
jno
arpl
ds
call
adc
imul
mov
sub
dec
dec
pushf
sbb
inc
cmps
pop
aam
pop
rcl
out
sub
sbb
in
xor
adc
out
mov
dec
loope
sbb
dec
repnz
lea
xchg
mov
fsubr
mov
jne
leave
xchg
rcr
xlat
stc
inc
pop
fstp
cdq
sub
adc
dec
popa
or
mov
bound
cmp
mov
ins
xor
or
mov
adc
or
(bad)
scas
in
bound
repnz
push
pop
xchg
cmp
and
(bad)
sub
mov
add
leave
inc
je
hlt
xchg
inc
cmp
push
push
shl
(bad)
pop
jno
call
das
pop
mov
sub
jge
mov
clc
stos
idiv
or
inc
dec
cmp
cmp
test
sub
rcr
fist
sbb
dec
sub
dec
inc
popf
test
pop
xchg
test
je
mov
mov
push
jl
ficom
pop
xchg
and
repnz
xchg
dec
adc
lds
and
lock
jg
add
test
inc
test
enter
pushf
fstp
pop
push
retf
ds
(bad)
ret
mov
jmp
dec
daa
add
sub
cmpps
mov
sbb
sbb
ficomp
shr
xchg
xor
call
aam
push
(bad)
pop
stos
sub
stos
ins
cwde
scas
lea
out
xchg
ja
adc
mov
sub
cli
popf
add
xor
xchg
xor
call
cmps
(bad)
xor
cdq
adc
mov
test
mov
pop
jbe
ds
pushf
repnz
pusha
shl
xchg
jmp
int
sbb
pop
lods
out
mov
inc
ja
and
cmc
inc
jbe
jbe
mov
mov
call
ds
dec
dec
pop
sbb
xchg
pop
sahf
or
xor
mov
je
retf
sbb
sub
movs
(bad)
leave
hlt
dec
sub
cmp
cmp
out
cmp
push
or
lods
mov
mov
sbb
sbb
mov
push
inc
sbb
cmp
xor
or
stos
aam
mov
hlt
stos
stos
sub
dec
and
cld
and
jae
pop
addr16
out
jbe
icebp
adc
and
jge
or
jp
mov
push
cdq
cmp
or
jae
ins
repnz
popa
cwde
jmp
das
mov
pop
daa
test
or
cmp
int3
movs
sbb
in
dec
icebp
repnz
jle
jnp
adc
mov
outs
sub
mov
std
shr
pop
mov
ja
inc
stos
push
out
and
jmp
fidivr
and
xor
lea
cli
sub
ficomp
(bad)
add
xor
mov
loopne
dec
out
add
push
loopne
adc
xchg
xor
xchg
imul
jmp
sub
test
xor
pop
adc
jge
sbb
test
push
ins
xor
repz
xor
in
pop
mov
out
mov
mov
movs
sbb
cmp
fcmovnu
das
adc
daa
int
idiv
hlt
retf
mov
mov
adc
dec
jns
call
push
enter
mul
mov
and
in
ins
repz
(bad)
mov
xor
fs
jae
and
ficom
loopne
(bad)
sbb
(bad)
in
xor
pop
ins
(bad)
jg
jo
outs
pop
sbb
and
retf
and
aas
add
mov
or
sub
int
push
addr16
into
xchg
add
adc
adc
jno
out
or
bound
rsm
sbb
add
inc
cmps
push
stc
stos
mov
mov
fcomp
test
mov
push
pushf
mov
test
mov
jno
push
sar
test
(bad)
sar
dec
mov
sub
sub
mov
dec
mov
stc
add
mov
rcr
jmp
adc
arpl
arpl
mov
stos
inc
sahf
adc
sub
sub
scas
(bad)
aaa
pop
jle
nop
das
push
mov
call
sti
xor
(bad)
jne
cmp
mov
(bad)
cmp
or
jg
test
add
cmps
push
lock
jo
fwait
or
es
inc
push
adc
inc
add
xchg
sbb
push
cmps
jne
pop
push
pop
loope
xor
ss
dec
push
test
cdq
mov
rcr
(bad)
fldcw
xchg
cmp
mov
mov
fwait
add
aas
jmp
fistp
xor
push
in
xchg
fsub
in
xchg
adc
in
out
xchg
and
int
jb
and
fdivr
fcmovb
push
sti
shl
sti
xchg
rol
(bad)
xchg
xor
mov
xchg
int3
mov
and
test
ins
mov
aaa
into
mov
enter
mov
cmp
arpl
pop
push
add
mov
jmp
push
xchg
xchg
xor
mov
fdivr
inc
add
pop
mov
out
repz
xlat
mov
in
push
and
dec
pop
fwait
pop
add
pop
cmp
fs
mov
rcl
inc
mov
adc
call
stc
add
mov
js
mov
int
jnp
push
lahf
sbb
leave
jp
sub
add
les
leave
or
dec
mov
inc
push
fstp
(bad)
in
icebp
in
icebp
xor
jmp
call
jg
dec
jecxz
xor
les
sbb
cld
sub
call
fst
xor
mov
(bad)
push
dec
movzx
jl
inc
adc
dec
loop
sti
mov
mov
cmp
jns
inc
div
lods
repz
sub
shl
jnp
or
ret
loopne
add
mov
inc
mov
xchg
gs
shl
jge
add
add
jnp
lock
div
adc
push
mov
into
sbb
adc
retf
dec
sub
sbb
lds
jmp
test
aas
mov
cwde
(bad)
add
fisttp
aad
xchg
push
fnstenv
or
pop
(bad)
pop
mov
setns
xor
mov
sbb
pop
ret
out
je
xchg
fstp
sub
pop
shl
xchg
lods
fisttp
add
aaa
cmp
push
pusha
or
sub
xor
sbb
inc
push
pop
inc
mov
and
sbb
dec
ror
pop
out
xchg
jmp
iret
mov
lahf
inc
dec
retf
popa
retf
pop
popf
sbb
call
push
popf
aam
ins
cmp
xor
aad
loopne
or
push
imul
ret
mov
fbstp
ror
mov
mov
jmp
lds
fdivr
lahf
stos
mov
daa
sbb
(bad)
aam
loopne
mov
push
push
dec
adc
jecxz
loopne
enter
and
jno
sub
sub
mov
jecxz
(bad)
in
sub
cmp
call
xchg
inc
xchg
and
int3
js
mov
enter
sar
addr16
cmp
xor
pop
mov
popa
popa
xchg
mov
repnz
mov
pop
(bad)
mov
dec
jb
xchg
cld
ror
frstor
push
int
fimul
and
xchg
imul
jg
inc
or
cmp
jne
mov
pop
xor
fisub
cmc
jbe
xor
inc
dec
mov
ins
jg
(bad)
cmp
jmp
cld
xchg
xchg
mov
std
xor
in
int
loope
mov
sbb
retf
pop
dec
test
dec
xchg
jge
dec
jle
pop
call
pop
xchg
xor
jl
call
add
popa
fld
(bad)
pop
mov
(bad)
xchg
rol
outs
js
loop
stc
lahf
adc
mov
or
and
in
scas
fsubr
in
jne
arpl
jecxz
pop
mov
(bad)
fs
fiadd
es
jmp
lahf
mov
enter
loopne
sahf
inc
cmp
sbb
push
push
mov
lock
aas
gs
mov
mov
push
add
lock
lea
hlt
sar
imul
pop
in
xor
std
fistp
ror
sub
inc
(bad)
xor
mov
xchg
rol
sub
add
sar
scas
push
sar
push
push
shl
mov
jmp
adc
movs
aad
xchg
jg
mov
cmp
pop
lods
arpl
mov
rcl
das
in
xchg
pop
loope
mov
cmc
sub
pop
(bad)
cmps
jg
xchg
sub
lods
inc
loopne
aad
imul
shl
xchg
jp
pop
sahf
cwde
test
sahf
movs
push
dec
xor
into
pop
sub
xlat
add
dec
pop
jmp
ss
xor
jb
ror
xor
xchg
loop
dec
dec
and
push
mov
je
jl
sbb
aas
dec
call
push
cld
xchg
es
scas
into
into
repz
jae
jne
test
inc
or
mov
mov
fsubr
mov
sti
mov
pop
add
xlat
retf
sub
inc
cmp
sbb
daa
fiadd
xor
add
inc
in
shl
scas
mov
mov
movs
mov
pop
add
cdq
arpl
fsubr
adc
sbb
cli
aam
xchg
pop
mov
xchg
fcomp
cmps
ss
call
into
xor
ret
adc
jmp
inc
sbb
dec
dec
jp
jmp
cdq
cli
out
mov
xchg
stc
sub
dec
xor
in
data16
mov
and
sbb
sub
bound
movs
mov
xor
aad
icebp
add
or
das
or
pop
call
sahf
mov
fcomp
sbb
frndint
in
mov
mov
dec
scas
test
fdivr
jecxz
xchg
pop
push
ret
test
mov
cmps
jp
lahf
push
xchg
and
sahf
imul
mov
fist
aas
ret
xor
inc
mov
out
fwait
arpl
sahf
cmp
lea
cdq
mov
cwde
push
ret
cmps
cli
ret
repz
imul
es
inc
inc
cmc
mov
mov
retf
in
jo
mov
xor
fsubrp
inc
add
and
arpl
cmp
mov
add
stc
mov
or
leave
loopne
sbb
pop
adc
jae
icebp
pop
leave
or
in
lds
js
push
push
pop
and
(bad)
in
inc
mov
mov
sub
out
test
sti
sahf
xor
and
mov
dec
inc
adc
arpl
loop
jbe
hlt
cmps
push
scas
inc
adc
and
dec
or
pop
fwait
and
sti
inc
adc
cs
in
inc
or
xor
mov
inc
jge
cmp
sbb
aam
adc
out
jb
nop
adc
push
hlt
mov
(bad)
imul
mov
and
es
lahf
jnp
cmp
fldenv
cmc
sub
imul
gs
inc
stos
mov
push
mov
push
daa
pop
in
fdivp
call
sar
lahf
xchg
(bad)
jge
imul
mov
call
test
mov
fcom
call
pop
sar
cmp
rcl
push
push
stos
repz
in
cmp
dec
mov
push
js
jae
push
fdivr
int
movs
jbe
xor
leave
add
in
mov
into
(bad)
cdq
int
pusha
unpcklps
jg
inc
dec
fstp
sbb
xchg
frstor
push
inc
pop
aas
not
cwde
sub
retf
cmp
mov
dec
inc
adc
push
lahf
ror
mov
stc
std
mov
cmc
(bad)
les
stc
xor
outs
mov
push
xchg
addr16
mov
lock
sbb
(bad)
dec
daa
and
push
test
int3
lods
jnp
pop
hlt
loope
cmps
scas
or
cs
sti
mov
xor
push
icebp
retf
mov
inc
loope
or
and
ins
cdq
mov
mov
cmc
jg
stos
jl
aam
push
shr
xchg
cmp
sub
pop
mov
sub
jno
int3
pushf
add
adc
push
popf
aaa
and
mov
sti
cmps
retf
push
jmp
inc
fsub
xchg
fidivr
outs
iret
cmp
in
sub
mov
lds
mov
mov
dec
mov
push
mov
lods
imul
sub
lahf
add
cmp
fwait
(bad)
outs
int
pop
out
iret
sbb
out
mov
inc
call
lea
(bad)
fninit
jb
rol
adc
sub
repz
push
(bad)
pop
dec
push
lds
jp
push
test
neg
cmp
iret
add
or
(bad)
fmulp
loope
dec
repz
xchg
push
pop
mov
daa
rol
out
out
adc
push
pusha
movs
pop
aaa
fdivr
cmp
repnz
fisub
in
jb
sub
dec
xchg
or
test
setl
mov
pop
mov
push
into
add
push
dec
clc
cmp
adc
bound
loope
xor
add
push
loop
dec
xchg
icebp
pop
and
jle
cmps
push
pop
icebp
pusha
pop
dec
dec
mov
cmp
test
and
jbe
stc
clc
iret
or
shl
cmc
or
push
pop
mov
outs
adc
xor
pop
movs
push
pop
test
push
push
enter
vmovshdup
fdivr
jae
imul
jmp
or
out
push
dec
bound
and
clc
ret
cld
mov
cmp
cmc
xor
mov
frstor
loopne
jne
and
xlat
fcomp
(bad)
jecxz
jp
test
pop
sti
pop
pop
sub
and
jno
jbe
loopne
retf
shr
in
or
out
mov
or
cmc
fist
sbb
jg
pop
jecxz
mov
out
add
retf
cli
fwait
jl
stc
lods
fidiv
cmp
sub
sub
je
or
mov
in
paddsb
push
and
inc
test
loope
dec
pop
pop
xor
pop
pushf
cwde
dec
add
cmp
xor
sbb
pop
cmp
push
pop
fsub
sub
push
add
sbb
adc
xchg
jb
stc
pushf
lods
and
vcomiss
rol
pop
pushf
sub
imul
icebp
pop
enter
inc
adc
(bad)
xor
sub
imul
lods
clc
or
push
leave
(bad)
scas
adc
inc
stos
dec
repnz
data16
adc
ins
js
cmp
(bad)
jbe
dec
mov
mov
test
fimul
push
mov
xchg
fnstsw
fwait
retf
call
das
sbb
push
mov
jmp
pop
mov
xor
jge
aaa
lahf
cmp
adc
jmp
inc
pop
mov
cwde
dec
dec
sbb
mov
jb
cmp
pop
test
in
sbb
pop
repnz
hlt
fscale
dec
inc
call
scas
dec
xchg
aam
dec
mov
mov
shl
test
pop
mov
into
cdq
pop
fdecstp
sar
popf
aad
cwde
cmps
shr
lahf
xlat
retf
or
fsubr
xor
js
jbe
jle
jl
inc
sub
jmp
aas
lock
icebp
and
fsubrp
sbb
ja
sahf
(bad)
mov
mov
and
lock
cdq
mov
sar
rcl
loopne
sbb
fucomi
dec
inc
adc
sbb
dec
mov
sbb
std
sbb
fidivr
rcr
ret
std
dec
pusha
jp
cld
repnz
add
and
adc
push
cld
stos
jecxz
out
mov
in
mov
push
shr
loop
sbb
jecxz
js
push
xlat
add
in
iret
adc
push
mov
imul
cmp
inc
push
das
lock
sub
mov
ss
(bad)
jmp
inc
movs
dec
dec
jae
sub
fld
mov
dec
add
jns
inc
mov
retf
leave
rol
in
and
mov
and
inc
sti
or
and
aad
fcmovnbe
mov
popf
add
mov
les
clc
enter
inc
rcl
pushf
pop
and
cmp
loope
out
push
js
repnz
div
and
add
cmc
mov
lds
popf
xor
rcl
jo
ins
in
lods
adc
xchg
call
cmp
fadd
jno
jne
js
mov
(bad)
push
fucomip
jo
test
mov
push
mov
xor
es
push
popf
xor
lock
bound
pop
je
sbb
pop
(bad)
and
xor
xor
ror
mov
jne
out
mov
into
cmp
dec
add
ret
and
test
jae
or
xchg
out
lea
sbb
outs
push
sbb
(bad)
dec
push
fsub
imul
push
dec
(bad)
clc
xchg
and
jl
shr
jbe
jmp
cdq
loopne
xor
scas
pushf
jae
jno
loope
ins
xchg
fiadd
in
mov
dec
add
xlat
xor
xchg
stos
aas
sub
test
test
xchg
mov
(bad)
add
ret
aaa
xor
inc
mov
sub
jo
inc
(bad)
std
test
add
mov
mov
sub
pop
pop
xor
and
int3
push
sbb
stc
cld
outs
jle
cdq
fisubr
out
mov
xor
pop
and
arpl
in
mov
mov
ins
cli
ret
int3
pop
cmp
sbb
jnp
push
imul
lock
stos
mov
and
mov
mov
outs
dec
(bad)
push
add
add
inc
pop
xchg
pop
jb
bound
sub
push
cld
xchg
shl
into
xchg
mov
loop
jmp
jmp
iret
xchg
movs
xor
iret
dec
push
cwde
(bad)
stc
addr16
sub
retf
fst
repnz
lea
retf
test
fimul
add
sub
and
jle
push
js
add
ds
jmp
xchg
sti
imul
inc
xchg
add
jl
mov
and
cmp
out
and
adc
mov
adc
sbb
or
sub
(bad)
jecxz
pop
or
push
shl
mov
ss
xchg
push
or
pop
add
sub
cmp
sub
lock
bnd
scas
clc
lock
mov
dec
mov
adc
shl
sub
mov
(bad)
mov
std
jmp
mov
lods
daa
sbb
ja
jb
lds
dec
push
gs
dec
or
pop
dec
add
fadd
mov
mov
shl
dec
(bad)
sti
outs
test
push
inc
cmc
ficom
xchg
dec
loop
mov
scas
imul
jae
in
sub
mov
mov
loopne
scas
xor
ficom
out
dec
lods
mov
add
push
ins
push
jl
cmp
sub
and
hlt
push
leave
inc
pop
jno
lods
clc
mov
popf
in
mov
jle
scas
sbb
add
jo
cmp
sbb
xor
out
aas
dec
rol
scas
or
adc
jo
dec
fnstcw
sbb
jge
movs
push
push
into
sar
mov
inc
pop
mov
int
aam
cmp
lock
pop
addr16
xor
sub
add
push
and
xchg
sbb
ds
adc
ja
data16
dec
inc
xor
xchg
lods
jecxz
xchg
ds
sahf
inc
dec
imul
mov
adc
in
jbe
lods
add
dec
inc
(bad)
rcl
and
lahf
inc
sbb
inc
mov
shr
rcl
retf
std
scas
fnstcw
dec
xchg
or
cmp
mov
xchg
mov
dec
mov
push
pusha
imul
loop
out
fnstcw
(bad)
push
and
shl
mov
pop
mov
test
sub
rol
js
push
xchg
pop
jae
add
xchg
sub
out
inc
mov
push
push
dec
fisttp
shl
mov
sar
jnp
dec
xor
dec
adc
mov
xchg
pop
cmp
nop
mov
jo
leave
sbb
mov
mov
jo
jl
dec
aas
mov
gs
rol
xor
jl
arpl
test
jo
pop
fnstsw
lea
cmps
sbb
fcom
les
rcr
cmp
jmp
cmp
out
xlat
mov
adc
pop
jmp
cmp
les
cmc
retf
lock
mov
push
outs
clc
xor
dec
(bad)
jb
icebp
sub
cmps
push
jnp
cld
fs
cmp
pop
mov
rcl
fs
movs
inc
mov
ret
sbb
das
in
cmp
sbb
add
adc
je
aas
mov
fidivr
ins
test
sbb
xor
mov
or
or
mov
lods
jg
hlt
pop
sub
cld
xchg
mov
aad
stc
cmp
(bad)
mov
ret
gs
pop
mov
inc
out
cmps
gs
or
lock
pop
mov
sbb
movs
sbb
cs
(bad)
adc
jge
xchg
out
(bad)
sbb
(bad)
adc
in
(bad)
and
(bad)
xchg
jge
push
inc
test
xchg
stos
dec
imul
cmp
add
mov
not
aam
popf
and
jo
xor
ret
inc
bound
clc
add
fdiv
xchg
adc
repnz
cli
and
inc
cmp
inc
pop
sbb
dec
adc
icebp
and
(bad)
fstp
or
addr16
mov
gs
pushf
mov
hlt
lods
jbe
popf
push
and
je
mov
fcomp
fcom
rcl
imul
mov
test
lock
jae
call
jl
adc
test
ins
stos
pop
fisttp
jb
cmp
sub
cmp
push
mov
loop
jbe
sbb
cld
jle
mov
fdivr
mov
lds
imul
push
push
lea
in
movs
sbb
imul
fild
les
push
pop
mov
xchg
pop
add
cwde
push
sub
iret
push
push
(bad)
adc
fnstcw
or
aas
and
and
lock
loope
cli
shr
sub
ins
xchg
lock
repnz
ds
dec
mov
mov
push
cmps
arpl
jo
or
add
iret
xchg
lods
lods
cmc
lock
mov
sar
fmul
pushf
mov
push
push
jecxz
jnp
aad
cld
test
scas
mov
pop
dec
mov
jnp
jmp
cs
mov
mov
enter
pop
dec
sub
mov
mov
push
and
das
xor
mov
add
test
loopne
push
out
adc
shr
add
imul
ss
sbb
rcl
sub
ret
rcr
push
retf
add
cmps
loopne
sub
ins
xchg
or
std
sahf
cmp
xor
xchg
or
jecxz
mov
dec
gs
jbe
fwait
icebp
aas
clc
mov
ror
loope
mov
movs
(bad)
ins
pop
std
xchg
lods
or
jecxz
icebp
popf
cmps
jns
mov
(bad)
icebp
popf
dec
and
jne
(bad)
mov
push
or
mov
sub
xor
push
push
push
cmps
mov
xchg
outs
(bad)
sbb
push
or
ret
mov
push
and
add
sahf
jle
fbld
mov
inc
dec
mov
or
mov
pop
rol
sbb
fldcw
mov
and
mov
call
movs
or
sub
jge
xchg
adc
jno
xor
cld
cli
sti
pop
mov
mov
mov
ins
cwde
mov
inc
les
in
daa
push
fistp
lock
jns
out
and
fdiv
sub
js
or
mov
aas
pop
xor
dec
cmps
aas
cmp
sbb
add
cs
sti
push
call
jo
ins
out
and
imul
jmp
sbb
add
sbb
mov
and
push
loopne
test
pushf
jmp
cmp
hlt
add
das
out
push
rcr
push
xchg
mov
inc
xor
out
fldcw
jns
pop
adc
xchg
push
jae
inc
cs
dec
pop
movs
push
jl
push
add
enter
inc
add
mov
test
xor
mov
dec
stos
in
sub
in
in
shr
push
pop
ret
stos
mov
call
sbb
fs
pop
sub
add
out
int3
lods
loopne
call
aad
and
fmul
sar
loope
adc
xor
loop
fidiv
hlt
pop
xor
loope
ja
not
js
and
shr
mov
fidivr
push
imul
rcl
add
jne
ds
push
cs
pusha
das
or
sahf
inc
gs
imul
pop
(bad)
dec
adc
push
and
pop
sub
ja
cmps
cmp
nop
(bad)
out
jge
pop
sahf
cli
push
fdiv
fdivp
(bad)
inc
into
sbb
lods
arpl
sti
in
lock
mov
push
xchg
dec
mov
mov
cmps
xchg
inc
jge
jns
test
or
lods
je
xor
int3
push
cmc
jb
(bad)
mov
dec
pop
adc
jg
inc
retf
out
(bad)
mov
stc
scas
(bad)
or
cmp
mov
fwait
jp
add
xchg
fisttp
fisttp
adc
stc
jae
xchg
ja
mov
lods
jmp
mov
cmp
adc
lock
fisubr
or
mov
das
jns
mov
repz
inc
push
and
cmp
or
stc
out
fsub
into
dec
sbb
ja
mov
sub
mov
mov
mov
cli
retf
ja
stos
xchg
pusha
(bad)
mov
sti
push
inc
shr
xor
(bad)
sbb
jnp
fisub
mov
fisttp
inc
sub
dec
outs
test
xchg
xor
out
pop
stc
arpl
and
loopne
pop
push
add
repnz
jmp
xlat
or
in
mov
je
xor
imul
push
inc
aam
add
mov
mov
aad
mov
(bad)
jecxz
pop
fpatan
add
inc
xlat
call
int
shl
imul
into
or
mov
dec
bound
inc
loop
fild
sub
dec
scas
push
pushf
cmc
jle
sub
int
ficomp
mov
(bad)
push
ins
jb
push
dec
test
or
dec
push
leave
pop
in
xchg
fwait
scas
xchg
xchg
out
adc
mov
mov
cdq
mov
scas
ror
mov
xchg
xor
push
sbb
fucomp
xor
fstp
test
popf
jp
cmp
add
or
pop
mov
and
xchg
dec
ret
jl
in
xchg
fisub
push
aad
or
push
test
dec
stc
mov
add
cmp
shl
fadd
hlt
adc
cmp
pop
sahf
stos
cli
sub
repz
in
vdivps
shr
lahf
aaa
js
in
jmp
sub
jecxz
pushf
clc
jnp
xor
(bad)
push
mov
push
sbb
test
mov
ins
xchg
cmp
or
jno
pop
or
in
pop
addr16
sub
jno
pop
cs
mov
es
and
addr16
aaa
xlat
xchg
das
pop
mov
pusha
sbb
cmp
sbb
les
fisub
xchg
ficomp
not
pop
xchg
inc
jns
out
xchg
adc
not
loope
das
xor
xchg
aad
outs
pop
and
mov
test
jge
ins
mov
xor
sub
inc
pop
push
stos
aam
jmp
inc
cmp
push
test
inc
(bad)
fsub
bound
mov
hlt
cmp
adc
push
pop
cmp
popa
adc
loope
xchg
clc
hlt
sar
cmp
add
dec
ds
scas
sub
cmp
xchg
sub
push
pop
mov
popa
sbb
(bad)
dec
cmp
dec
push
jg
mov
xchg
mov
xor
adc
je
dec
(bad)
xchg
ss
or
icebp
gs
xor
outs
push
jmp
cmps
pop
aad
sub
repnz
cmp
mov
dec
in
add
data16
cmp
mov
push
inc
dec
cmp
cli
inc
(bad)
icebp
inc
jge
pop
or
nop
ret
jno
test
inc
push
push
push
imul
and
les
sbb
repz
xchg
sub
in
jmp
pop
or
xor
(bad)
adc
pslld
mov
dec
aam
daa
mov
mul
pop
jae
cs
add
(bad)
mov
jecxz
ss
jge
xchg
js
lods
prefetchw
shr
jae
retf
stc
(bad)
xor
repz
push
push
dec
shr
cmp
sbb
neg
push
push
das
cli
mov
mov
cmps
sbb
mov
push
mov
mov
repnz
out
inc
mov
out
and
dec
xlat
bound
mov
leave
sub
and
jae
das
push
gs
xor
out
mov
sbb
shl
clc
cmps
pop
adc
ror
lds
mov
cmp
and
dec
repz
cmp
inc
or
cmp
cld
sbb
add
cdq
inc
xchg
jp
lods
pop
out
dec
(bad)
sbb
cmp
in
mov
mov
imul
xchg
and
call
(bad)
or
bound
aas
mov
lea
mov
shr
pop
(bad)
adc
push
sub
push
xchg
sub
push
push
sbb
push
mov
push
jge
inc
sub
xor
and
push
or
aam
mov
mov
clc
mov
fsubr
pop
mov
dec
and
xor
popa
lahf
jmp
xchg
pop
call
jae
hlt
jl
add
sbb
cmc
addr16
jl
ds
jl
call
pop
aaa
mov
sbb
push
lods
xlat
out
inc
mov
cmp
add
or
ds
rcl
sti
addr16
gs
daa
repz
std
mov
inc
push
js
mov
enter
fstp
out
sub
test
mov
mov
in
loopne
pop
sbb
retf
xlat
gs
jp
out
mov
push
add
div
(bad)
enter
jae
adc
mov
adc
pop
in
and
lea
pushf
cmp
cmp
test
dec
pop
cmp
adc
mov
in
es
mov
dec
cmp
mov
add
adc
cmc
(bad)
jae
and
mov
sahf
daa
popa
xor
in
xchg
ja
and
jo
and
lds
clc
mov
cwde
jge
out
cmp
in
rcl
mov
mov
pop
call
call
mov
sbb
push
or
jge
push
rol
(bad)
ins
(bad)
dec
inc
pushf
adc
leave
mov
cmps
dec
neg
jmp
out
lods
mov
shl
stos
and
je
outs
lods
aad
add
shl
xchg
ficom
lods
gs
pushf
(bad)
in
jmp
mov
test
xchg
popa
xor
inc
xchg
xchg
and
inc
and
inc
cmp
(bad)
xor
pop
jge
xchg
stc
adc
jecxz
mov
xchg
xor
out
mov
mov
xchg
mov
or
in
mov
iret
aad
add
retf
rol
lahf
mov
xor
loopne
inc
lods
and
sbb
ret
sub
or
jle
mov
fst
inc
cmp
stos
inc
xor
sub
pusha
test
cmp
lds
addr16
and
mov
and
inc
lock
fidiv
mov
iret
cli
dec
shr
sub
icebp
jp
es
adc
or
int
pop
mov
mov
xchg
push
test
push
pusha
adc
push
fdiv
imul
push
int
ja
loope
stc
lock
mov
cmp
scas
mov
ss
pop
dec
mov
hlt
xchg
inc
les
retf
pop
(bad)
idiv
inc
or
jecxz
stos
pop
inc
cmc
ins
cmps
mov
mov
sbb
dec
jge
icebp
mov
push
push
out
and
mov
int
mov
mov
pop
mov
mov
push
das
sbb
fcomip
mov
unpcklps
rcr
jb
out
rol
sub
mov
outs
inc
ret
(bad)
sbb
(bad)
xor
retf
xchg
push
cmc
lea
movs
add
push
nop
add
push
jno
jnp
ins
sahf
pop
js
mov
pop
xor
xor
cmps
icebp
stc
jbe
mov
push
dec
mov
fstp
inc
bound
ss
pop
fild
movs
call
rol
mov
fsub
cs
cld
jb
push
push
pushf
xor
outs
rol
inc
jnp
xchg
fldcw
xor
mov
scas
cwde
ja
add
stos
push
or
iret
or
mov
call
xchg
push
sub
icebp
pushf
xor
int3
stc
iret
mov
jno
stos
mov
sbb
or
adc
mov
loopne
mov
loop
dec
sahf
(bad)
shr
sbb
or
movs
push
imul
cli
adc
mov
test
pop
out
pop
push
loopne
(bad)
lods
aaa
or
retf
push
pop
mov
xlat
out
pop
mov
jg
jae
pop
sbb
push
shl
mov
ds
mov
lds
repz
retf
clc
push
mov
inc
xchg
retf
sahf
sub
aaa
adc
ja
mov
outs
ds
stos
jnp
xchg
push
test
psubusw
sbb
fisubr
mov
mov
into
sub
cld
aam
repnz
or
js
int
rcl
test
bound
sbb
jl
pop
jmp
cmp
push
pop
icebp
cld
cdq
jb
aam
jg
mov
xlat
xlat
inc
leave
push
lock
push
call
pop
pop
mov
pop
(bad)
cmps
cdq
ja
push
repnz
dec
or
inc
jmp
xor
retf
fnstsw
mov
cmp
inc
sti
adc
or
pop
fnstenv
and
add
add
xchg
add
mov
mov
cmc
cmp
xchg
mov
sub
xchg
cmps
pop
out
enter
xor
sub
js
retf
sbb
mov
push
scas
mov
adc
(bad)
push
jg
mov
xchg
cmp
out
xor
mov
or
(bad)
mov
cmc
cmp
mov
movs
pop
xor
loope
shl
aad
test
mov
mov
lods
shl
push
and
ja
mov
nop
cmp
cli
jge
repnz
mov
jl
bound
inc
xlat
push
int
inc
fdivr
retf
and
jo
loopne
arpl
lods
mov
mov
mov
rep
retf
ins
int3
hlt
rol
mov
aas
addr16
fwait
push
in
and
mov
add
inc
jl
popf
(bad)
call
mov
stos
loopne
ret
add
int
push
mov
test
(bad)
push
or
pop
adc
sub
lea
and
and
dec
jp
jmp
(bad)
lock
cmp
lock
in
sub
movs
popf
cli
push
sbb
or
into
dec
jmp
sti
pop
sub
stos
xchg
or
or
and
inc
rol
mov
retf
adc
mov
and
in
retf
or
dec
xchg
jb
adc
dec
int3
stos
cmp
movs
popa
and
(bad)
in
sub
and
dec
mov
daa
sub
mov
mov
retf
loopne
xor
repnz
sbb
test
xchg
or
jg
add
aas
sub
cmp
pushf
clc
push
mov
lods
jnp
jb
sbb
ret
movs
(bad)
call
add
lods
sahf
adc
std
loop
nop
ror
inc
enter
test
cmp
jno
dec
jbe
mov
mov
(bad)
adc
in
xchg
retf
xchg
jbe
inc
push
loopne
in
and
retf
std
add
outs
cmp
mov
pop
cmps
mov
xchg
test
dec
pop
pop
mov
jmp
sti
stos
adc
cdq
and
outs
pushf
dec
iret
ins
and
mov
es
xchg
xchg
cmp
aad
push
sahf
test
ins
adc
sahf
mov
mov
push
inc
call
mov
add
cmc
fistp
mov
jo
push
push
xor
xchg
inc
jnp
sbb
sbb
mov
and
sub
jno
arpl
jae
jns
mov
loopne
mov
adc
cmp
es
mov
in
(bad)
neg
movs
repz
xchg
or
cli
hlt
out
jb
xor
les
push
in
loop
sbb
cmps
out
int3
xor
loop
pop
mov
lds
cmc
pop
lea
lock
data16
push
movs
pusha
pop
jmp
pop
scas
ds
repz
mov
mov
push
push
pusha
sar
pushf
jnp
xor
mov
xor
mov
and
(bad)
fstp
rcr
std
adc
xchg
mov
push
inc
jno
into
jp
pop
fidiv
sbb
xchg
mov
pop
dec
into
out
mov
imul
add
call
mov
inc
xchg
mov
jo
xchg
(bad)
outs
rol
int3
addr16
in
pushf
xchg
dec
lods
xchg
pop
xor
ret
pop
int3
xor
dec
sub
lock
push
push
cmps
push
and
jno
add
aad
pop
sub
dec
cmp
retf
cmp
cmps
enter
(bad)
aad
xchg
loope
mov
xor
imul
sub
mov
or
sbb
jne
add
movs
(bad)
movs
scas
add
or
out
not
ss
faddp
push
dec
iret
mov
repnz
mov
dec
cwde
mov
pop
imul
stc
loope
inc
mov
pop
adc
test
adc
cwde
sub
and
cwde
(bad)
xor
jl
icebp
js
inc
repnz
push
jne
outs
add
cmp
dec
cli
pop
jbe
xor
dec
push
hlt
pop
cmps
mov
ss
or
test
mov
bound
push
je
stos
pop
mov
dec
das
dec
xor
push
rcl
adc
lahf
mov
xlat
pop
movs
rcr
hlt
xchg
inc
push
jge
jmp
inc
push
add
dec
add
movs
clc
daa
xor
fwait
mov
dec
leave
jno
gs
nop
mov
push
retf
in
inc
inc
mov
mov
cmp
push
sbb
add
pop
js
test
pusha
jmp
dec
sbb
dec
test
sbb
mov
out
pop
and
mov
push
ret
cwde
xor
out
cld
mov
scas
sbb
sbb
imul
mov
popa
(bad)
cmp
out
lahf
or
xchg
mov
jmp
xchg
jmp
test
les
adc
(bad)
sbb
dec
inc
popf
fadd
xor
lods
movs
cmp
sbb
jmp
cdq
mov
add
mov
daa
repnz
ror
retf
sbb
in
xor
fnstsw
fmul
mov
mov
or
out
dec
jae
fs
push
or
in
adc
movs
aad
test
jns
pop
dec
sub
popf
cmps
mov
loop
push
jmp
and
jmp
pop
in
push
mov
dec
(bad)
add
mov
out
dec
or
xlat
push
movs
sar
jg
sub
jae
ins
xchg
mov
fadd
jbe
fdivrp
out
pop
xor
cs
push
mov
cmps
into
cmps
mov
inc
fist
fadd
sbb
adc
stos
mov
jmp
ficomp
xchg
(bad)
imul
jbe
sub
gs
cwde
je
test
outs
jne
shl
cmp
popa
pop
fisttp
mov
mov
fist
out
fadd
shr
in
fwait
rcl
xor
jmp
xchg
stc
and
add
cmp
add
sar
sbb
not
sbb
push
pop
jne
or
xor
lods
mov
jae
movs
inc
cmp
out
or
(bad)
ss
adc
outs
jecxz
aad
cmp
add
in
cmps
sahf
mov
stc
or
xor
cmp
in
xchg
adc
test
aaa
xchg
inc
pusha
pop
sub
ret
add
lods
(bad)
mov
adc
imul
dec
adc
call
xchg
jp
lahf
(bad)
rcl
push
adc
sbb
mov
stos
jmp
add
test
loop
xchg
push
sbb
or
inc
scas
(bad)
mov
dec
lahf
sub
lock
and
jp
hlt
and
xchg
nop
fisub
xor
xchg
cdq
jp
push
jnp
xor
mov
add
sti
xor
xchg
inc
in
movs
das
mov
cmp
pop
push
mov
pop
sbb
movs
dec
in
mov
push
adc
scas
daa
outs
add
in
push
push
fisttp
or
jmp
sub
adc
dec
dec
jne
fbld
arpl
and
mov
jp
pop
cmp
enter
mov
lods
add
jmp
shr
stos
fwait
js
xchg
xchg
cmc
sbb
add
into
les
mov
wbinvd
or
sbb
or
inc
push
(bad)
retf
inc
mov
shl
sub
(bad)
cmps
lahf
popa
stos
pop
push
fwait
mov
ins
push
fld
jo
in
mov
push
dec
xchg
(bad)
repnz
scas
call
fist
adc
inc
cwde
and
fbstp
adc
repz
jmp
sbb
into
adc
push
in
cmp
leave
jbe
xchg
xchg
push
pop
dec
fcomip
adc
mov
fdiv
std
mov
push
fistp
(bad)
aam
and
int
mov
sar
pop
adc
or
jmp
loopne
scas
or
cmp
mov
pop
mov
push
inc
xchg
or
mov
cdq
stos
hlt
cmps
ror
or
sub
daa
and
sbb
jl
repnz
cs
lds
shl
arpl
aam
lds
or
shr
inc
inc
jno
aaa
daa
adc
sbb
mov
je
fdiv
stos
xchg
cs
adc
mov
mov
mov
inc
call
add
push
sbb
xor
es
push
mov
jmp
shl
ror
fcomp
or
dec
dec
cmps
sti
mov
or
jbe
sub
jo
jae
imul
xchg
ret
outs
or
es
mov
nop
push
ror
inc
pop
mov
out
std
sbb
iret
adc
mov
clc
jp
sbb
dec
jecxz
dec
adc
xor
adc
std
and
fcos
cdq
adc
or
dec
sub
(bad)
dec
in
(bad)
push
adc
and
aaa
(bad)
push
dec
imul
and
xchg
sub
xor
shl
shl
jb
mov
add
test
xchg
sbb
mov
das
push
push
bound
rcr
mov
add
and
sbb
out
mov
cdq
xchg
cmc
xchg
mov
sub
cmp
sbb
adc
shl
or
lods
lock
jmp
ss
enter
jge
inc
js
jnp
add
scas
add
fcmovnbe
xchg
dec
mov
icebp
jge
jecxz
mov
stos
test
movs
push
movs
or
push
push
mov
ret
nop
addr16
mov
je
sbb
or
jno
aas
sahf
push
cld
(bad)
jae
pop
sbb
lea
push
push
add
icebp
xor
xchg
inc
push
nop
xchg
in
dec
sbb
add
test
push
les
add
xchg
add
les
popa
gs
xchg
shr
mov
out
fist
gs
fcom
and
adc
xchg
xchg
ins
pushf
repz
ja
int3
jns
lahf
jne
retf
ins
cmp
xchg
daa
add
shr
xor
stc
mov
jb
das
dec
dec
adc
fidiv
xor
mov
adc
rcr
scas
cmp
icebp
xchg
outs
dec
pop
into
call
dec
cmp
xor
cmp
or
cwde
stos
sbb
stos
xor
cmc
sub
lea
ret
push
add
add
fdivr
pop
out
mov
sbb
fdivr
mov
test
dec
fidiv
shl
cwde
cmc
sbb
ds
ret
cmp
inc
neg
icebp
push
cld
mov
or
cmps
adc
sbb
xchg
or
call
jge
into
sub
xchg
cmp
mov
xchg
jecxz
fnstenv
jne
jge
ss
lock
dec
in
aaa
push
dec
cmps
ret
mov
loopne
xor
jmp
mov
xchg
loopne
aas
or
pushf
mov
ins
mov
push
and
cmp
das
ret
push
outs
ja
(bad)
aam
mov
out
arpl
jno
dec
outs
jecxz
cmp
jb
retf
inc
jl
cmps
mov
std
dec
jbe
lds
arpl
or
movs
ret
leave
out
aam
mov
repnz
rcl
jno
in
or
adc
xor
pop
dec
add
leave
mov
or
xchg
mov
push
fs
xchg
pop
mov
pop
and
stos
loop
fst
stc
(bad)
fs
lea
cmc
pop
pop
pop
movs
scas
js
push
push
cmp
dec
inc
push
push
repz
or
inc
push
lahf
or
int
sti
dec
or
mov
cmp
cli
pop
cmp
mov
pushf
dec
or
jmp
jns
mov
(bad)
xchg
add
stos
xor
popa
add
ret
sbb
jmp
inc
(bad)
cwde
mov
jne
jle
hlt
fisubr
fisub
and
(bad)
ds
fwait
jbe
gs
or
mov
cmc
xchg
dec
mov
int
mov
rcr
dec
lds
test
mov
xor
movs
mov
rcl
mov
lea
adc
cmps
jecxz
retf
mov
sub
push
xor
lods
mov
jb
mov
mov
cmp
and
cmp
pusha
cmp
pop
jb
jae
push
inc
aaa
sub
push
sub
popa
test
pusha
pop
pop
or
mov
push
cmp
dec
xor
ins
in
retf
inc
fcmovb
push
jb
mov
psrlq
xor
mov
cmp
mov
lds
je
mov
pop
push
(bad)
adc
push
repnz
test
out
pop
loope
pop
les
pop
cmp
push
jge
jmp
fnstenv
fwait
sar
stos
jmp
rcr
sbb
ja
jmp
lea
jl
inc
shl
mov
fisub
aad
push
pop
rcl
ret
add
enter
repnz
mov
lds
retf
addr16
int3
add
xor
mov
add
mov
add
mov
lods
mov
push
loopne
fisubr
push
dec
jle
je
mov
or
fisttp
cmc
sub
(bad)
popa
mov
movs
mov
jno
lods
and
cmp
inc
(bad)
cli
pop
imul
xchg
push
push
outs
inc
stc
pop
into
jp
xor
sub
push
jbe
(bad)
jmp
push
js
xchg
ins
ror
mov
ds
ffreep
push
test
pop
or
sbb
in
jb
push
das
sbb
ins
adc
jle
jge
lahf
inc
cli
pop
sbb
inc
out
dec
cld
and
fmul
cmps
xor
mov
in
loope
xor
mov
jmp
shr
mov
in
movs
mov
rcl
xor
sbb
pop
push
or
cmova
xor
retf
pushf
loop
pop
test
clc
scas
pop
pop
sub
pop
les
sbb
sbb
fld
push
cmp
not
mov
push
fidivr
out
mov
inc
lods
cmc
adc
(bad)
nop
jmp
sub
retf
mov
fwait
out
pop
in
dec
mov
repnz
lea
xchg
mov
add
repz
in
or
sbb
dec
mov
dec
sahf
sub
jns
or
cmps
push
jle
sti
xor
aad
push
fisttp
xchg
cmp
jle
cmc
ins
ror
mov
das
xor
rcr
es
cdq
xor
(bad)
push
enter
mov
ret
jno
iret
mov
pop
pop
(bad)
aad
sub
repz
sbb
or
enter
xchg
(bad)
jg
add
jnp
pop
nop
hlt
bound
cld
jp
or
pop
hlt
adc
jle
jne
js
test
mov
pop
sub
push
movs
popa
inc
mov
add
push
je
(bad)
scas
out
push
xor
xchg
cmp
lock
xchg
hlt
out
mov
xor
jmp
cmp
or
clc
stos
(bad)
push
(bad)
shr
pop
fimul
adc
xchg
in
addr16
xchg
js
mov
or
push
xor
inc
shl
jae
das
inc
aaa
sub
mov
fbld
mov
sbb
aaa
and
mov
xlat
mov
xor
jb
mov
jmp
mov
push
lock
div
jbe
push
into
xchg
sbb
adc
xchg
push
jl
sbb
inc
adc
leave
xor
stos
ins
je
das
mov
iret
stos
jo
pop
or
cmps
imul
adc
push
mov
mov
push
xor
adc
inc
xchg
ss
hlt
retf
sub
jp
jne
outs
popf
and
push
inc
fist
in
inc
(bad)
in
dec
sbb
xchg
inc
sar
and
in
gs
repz
sub
push
(bad)
cli
xor
test
mov
int
push
mov
mov
popa
jg
adc
mov
pop
(bad)
mov
test
cmp
cmp
(bad)
pusha
xor
xor
aaa
cmp
sub
xchg
pop
retf
sbb
add
mov
test
dec
inc
inc
or
pop
test
adc
das
mov
pop
aad
cmp
xchg
movs
cmps
mov
sbb
shr
push
or
xchg
fcomp
stos
sub
inc
(bad)
mov
mov
movs
jmp
inc
jl
(bad)
mov
imul
mov
idiv
mov
call
mov
jno
enter
sti
sub
adc
leave
jge
cmp
pop
push
retf
stc
add
mov
loope
inc
or
pop
dec
sub
retf
xor
push
or
push
cwde
rcl
jb
sub
or
stc
fist
mov
popa
push
(bad)
jae
dec
or
repnz
adc
cli
fnstcw
and
push
push
sti
enter
push
scas
stos
clc
es
sbb
dec
jne
stos
mov
test
(bad)
pop
in
pop
stc
jmp
cwde
in
push
add
faddp
push
std
push
cmp
cld
add
(bad)
(bad)
jecxz
fwait
jbe
sbb
arpl
dec
dec
in
mov
ins
daa
test
gs
jns
into
jg
es
imul
cdq
pop
fdivr
imul
xchg
mov
push
clc
sbb
jg
stc
repnz
xchg
sbb
xor
pop
inc
pop
xor
(bad)
pop
ss
fnstcw
add
enter
popf
lea
add
sub
loope
jno
imul
xor
iret
(bad)
(bad)
xor
(bad)
sti
ret
and
rcr
jns
ja
fs
(bad)
jne
mov
dec
cmp
mov
pop
push
jne
push
sub
cmc
mov
imul
aad
mov
clc
push
mov
in
mov
adc
push
(bad)
or
lock
(bad)
loop
mov
fnstenv
push
jmp
outs
out
out
xchg
fld
inc
cld
pop
adc
xchg
test
adc
inc
sub
mov
pop
fwait
push
jg
cmp
ds
add
(bad)
pop
push
shl
add
stos
scas
add
nop
scas
cmp
or
dec
dec
in
xor
pop
mov
movs
xor
test
adc
arpl
in
add
adc
jmp
jb
repnz
test
int3
jp
scas
call
into
(bad)
adc
(bad)
mov
jne
inc
push
stc
dec
call
inc
ficom
jge
push
test
adc
imul
or
cmp
clc
push
dec
mov
adc
xchg
stos
sub
inc
ficomp
iret
pop
and
sbb
adc
or
cmps
push
mov
js
push
pushf
and
mov
cli
mul
push
repz
or
mov
dec
xchg
iret
test
not
pop
push
mov
mov
pop
icebp
xchg
(bad)
repz
xchg
mov
pusha
sahf
pop
jge
sbb
loopne
fdiv
mov
inc
adc
pop
and
jle
(bad)
fcomp
test
sbb
pusha
xlat
mov
xchg
imul
pop
rcr
add
fs
inc
cmps
jge
ret
retf
push
mov
push
pop
pop
mov
push
in
sbb
mov
je
outs
dec
xchg
dec
push
clc
retf
push
xchg
pop
rol
pusha
lods
fadd
in
jno
xor
into
cmp
nop
(bad)
sub
rol
inc
sbb
je
outs
dec
repz
jne
sbb
sub
sub
pusha
in
cwde
leave
ficomp
cmp
iret
js
inc
loopne
jno
jp
push
retf
push
mov
frstor
jmp
push
jmp
ins
pop
cli
push
les
lods
inc
(bad)
cli
lahf
sub
nop
xor
pop
out
lods
in
sbb
push
les
xchg
lods
stos
in
cmps
inc
sbb
in
hlt
inc
sub
mov
sbb
out
aad
add
repz
mov
ret
loope
sub
sub
xchg
push
aaa
mov
(bad)
push
jl
lds
in
fldenv
push
popf
mov
leave
(bad)
mov
adc
fcmovnb
mov
mov
mov
sar
std
std
jge
repnz
dec
and
jnp
sub
out
pop
loope
loope
inc
cli
pop
xor
and
push
mov
(bad)
jne
jo
push
sti
add
(bad)
xchg
pushf
ja
sti
cmps
scas
mov
and
js
mov
dec
sub
mov
(bad)
cmp
sub
test
jmp
or
mov
loopne
or
mov
arpl
loopne
retf
xchg
imul
iret
or
sbb
ret
cmp
dec
aas
or
lds
fcmovne
aad
movs
xchg
in
sub
shr
leave
frstor
jns
bound
sub
loope
jmp
movs
in
push
ret
xchg
xor
xchg
push
ins
jmp
inc
psadbw
(bad)
cmc
sbb
mov
mov
cwde
dec
jbe
std
(bad)
imul
pop
cwde
adc
mov
jmp
clc
jg
sbb
cmp
mov
bswap
xchg
push
movs
cmp
and
into
(bad)
xor
inc
adc
outs
adc
jo
lods
mov
xchg
sbb
inc
ret
push
dec
lahf
jno
push
call
pop
inc
mov
cdq
inc
ja
jecxz
aam
push
xor
pusha
int3
sub
and
in
lods
inc
int
push
sub
cmp
repz
mov
rcr
cmp
jmp
gs
ret
ret
rol
mov
adc
adc
pop
aaa
push
xchg
pusha
cmp
mov
aad
imul
je
push
add
pusha
xchg
cmps
xor
cdq
js
dec
jae
in
iret
cmps
pop
adc
adc
inc
jae
lods
mov
loope
pop
or
je
xor
jae
xchg
add
icebp
jbe
nop
lods
xchg
xor
call
shl
pop
pop
(bad)
push
cdq
jne
xlat
push
mov
bound
mov
shl
das
pushf
(bad)
je
sbb
inc
hlt
sbb
jp
pushf
loopne
and
jmp
cli
mov
cdq
lahf
mov
out
xchg
mov
gs
pop
xor
neg
adc
mov
push
inc
xchg
or
pop
jmp
je
xchg
mov
pop
add
mov
sub
sbb
in
pusha
fwait
sbb
sbb
push
xor
mov
dec
lds
push
retf
(bad)
outs
loope
mov
mov
and
dec
mov
into
xchg
test
xor
xchg
scas
loope
fdivrp
pop
cwde
mov
push
mov
shl
dec
lods
mov
push
test
mov
mov
or
pop
arpl
cmp
dec
jmp
scas
cmp
daa
movs
jmp
push
gs
lds
adc
outs
mov
jne
xchg
xchg
mov
pop
and
push
mov
or
dec
mov
cmc
mov
ficomp
hlt
adc
pop
pop
xchg
dec
cmps
inc
add
pusha
(bad)
icebp
push
sub
test
repnz
xor
add
addr16
mov
mov
pop
hlt
mov
xor
out
(bad)
xor
jmp
lods
lods
xchg
adc
ins
outs
std
adc
sbb
add
cmc
out
leave
popf
in
(bad)
xchg
xor
dec
enter
dec
mov
(bad)
cmps
iret
xchg
mov
loope
sbb
add
pop
sahf
scas
gs
fsubp
bound
shr
mov
fisubr
pop
mov
dec
mov
mov
jmp
push
xor
daa
mul
sub
aam
or
pop
pop
jno
jns
inc
sub
(bad)
(bad)
imul
mov
out
sub
mov
hlt
add
push
push
mov
out
(bad)
fidivr
dec
mov
sbb
mov
dec
ja
jecxz
mov
pop
pop
xchg
je
cmp
(bad)
sub
push
adc
fwait
mov
push
sbb
pop
mov
ret
push
add
jae
jmp
mov
and
jno
sub
jo
add
ins
ins
pop
ror
(bad)
fbstp
movs
mov
sub
push
xor
push
mov
jg
(bad)
jo
leave
daa
gs
ror
sbb
out
retf
jmp
push
rol
sahf
sbb
aad
inc
pop
cli
mov
mov
cmp
sub
outs
jne
bound
xlat
fstp
xchg
or
mov
mov
pop
mov
stos
jbe
daa
mov
pop
call
cmp
movs
pop
jnp
adc
bound
lods
jp
push
movs
push
fs
mov
inc
fimul
mov
cmp
stos
dec
mov
test
fist
std
ja
(bad)
cmp
add
outs
aas
add
dec
mov
nop
sti
out
jns
mov
fdivr
movs
popf
mov
lds
mov
shl
jl
xchg
or
dec
xor
cmp
mov
(bad)
fwait
jl
rol
xor
sar
repnz
lods
cmps
(bad)
mov
add
ss
mov
movs
push
mov
loopne
pop
test
jo
pop
jno
lds
inc
inc
wrmsr
mov
pop
pop
and
enter
(bad)
in
xor
sub
mov
leave
push
sti
inc
and
imul
mov
xchg
movs
(bad)
(bad)
sbb
dec
leave
jns
sbb
mov
jmp
aad
popa
icebp
loopne
xchg
cmc
xor
or
add
leave
or
adc
fsub
xchg
xchg
stos
mov
std
xchg
mov
test
hlt
(bad)
call
aaa
and
cmp
inc
repnz
sbb
pop
ror
mov
mov
mov
cmp
into
cdq
add
data16
jge
dec
xchg
cmp
xchg
sbb
aam
fs
sahf
jge
mov
dec
push
retf
stc
inc
sub
inc
icebp
dec
and
repz
cmps
imul
(bad)
jb
pop
push
scas
or
aad
dec
sbb
test
sahf
or
in
gs
call
pop
mov
dec
outs
int
pop
mov
sti
stos
das
jmp
and
push
dec
sbb
push
and
test
pusha
movs
cli
mov
jecxz
(bad)
jb
jne
push
fld
out
out
loop
jb
lods
push
bound
push
scas
xor
jnp
ss
std
jns
les
cmp
(bad)
into
jb
inc
jne
push
lea
inc
icebp
mov
jne
mov
lods
jl
out
cmp
movs
ret
cmp
xchg
mov
or
stos
jp
mov
and
hlt
xchg
sbb
jecxz
and
scas
repz
and
lock
outs
dec
pop
xchg
xchg
outs
and
test
outs
stc
mov
jg
mov
in
or
mov
add
mov
fsub
frstor
nop
repnz
out
and
scas
call
mov
mov
push
sub
fsub
jbe
or
cmp
adc
push
pop
fs
push
mov
(bad)
(bad)
loopne
inc
(bad)
sbb
inc
scas
jb
and
movs
leave
mov
mov
cli
pusha
inc
in
scas
sub
jge
frstor
js
loop
sub
pop
dec
loop
rcl
out
(bad)
cmp
inc
cmp
data16
dec
loope
push
repz
jb
icebp
mov
and
mov
movs
and
int3
sub
pop
ins
ss
push
adc
xchg
mov
imul
inc
mov
inc
inc
sub
push
lds
std
pop
clc
add
sub
cmp
in
mov
sar
dec
jb
pop
sbb
inc
std
sub
push
xor
jmp
jle
push
lods
ret
sbb
(bad)
fs
sbb
xor
(bad)
lock
mov
fcom
fiadd
mov
sub
clc
cmp
jmp
out
mov
call
js
cmp
sub
mov
pop
pop
mov
sbb
sub
les
dec
iret
inc
(bad)
jns
mov
jmp
inc
add
adc
inc
mov
and
lds
int3
(bad)
mov
lahf
lea
aas
and
pushf
mov
shl
lea
jno
cli
jns
std
add
cs
test
cmp
adc
cdq
mov
(bad)
and
xor
cmc
mov
out
loope
test
xchg
pop
sahf
mov
fdiv
jno
pop
ret
sbb
sti
mov
pop
mov
cmp
fs
ja
cmps
cdq
dec
mov
push
pop
call
test
jbe
retf
imul
jecxz
icebp
(bad)
addr16
mov
mov
ret
leave
xchg
cmp
(bad)
test
aam
mov
mov
inc
xchg
xchg
pop
xchg
sub
cld
ins
jb
cmp
je
enter
fwait
popa
mov
bound
jnp
push
retf
mov
push
add
ret
mov
pop
xor
dec
es
movs
iret
pop
scas
xor
movs
aad
mov
aaa
jecxz
shl
jno
in
jp
and
rol
pop
outs
retf
mov
arpl
push
out
pusha
pop
or
pause
add
outs
stos
outs
xor
mov
xchg
scas
and
aaa
push
fnstcw
inc
push
sub
fcmovbe
leave
mov
stos
push
mov
and
das
add
and
cld
cmp
or
jp
jne
in
neg
jne
or
cli
scas
inc
(bad)
sub
cmp
mov
aam
and
or
ret
push
call
push
arpl
ds
xor
ins
sbb
cmp
mov
fdivr
pop
daa
and
dec
fisubr
mov
aad
out
aad
mov
cmovno
sub
(bad)
mov
int
cli
pusha
sub
jge
leave
sti
cmp
mov
loope
pop
inc
sbb
cmps
jno
dec
jne
retf
jnp
dec
icebp
fistp
push
push
or
add
ins
adc
outs
add
push
mov
jae
pusha
and
out
mov
push
ret
aaa
xchg
sbb
sub
mov
ret
sbb
or
sub
ds
mov
push
(bad)
pop
jae
lods
pushf
arpl
adc
jle
dec
mov
out
sbb
sbb
push
adc
aam
rcr
mov
lea
fdiv
adc
aas
jne
and
xor
push
fild
cli
mov
icebp
ret
stc
adc
push
inc
test
xor
mov
mov
outs
gs
shl
movs
xor
inc
in
sbb
mov
jge
icebp
mov
inc
scas
dec
mov
add
inc
push
call
fist
cli
dec
(bad)
push
add
push
or
fdivr
inc
test
mov
sti
sbb
cdq
mov
fdivr
sbb
pop
xor
dec
inc
adc
rcl
cmp
push
inc
mov
ss
push
sub
std
xchg
or
in
push
inc
xchg
jns
mov
jmp
jmp
rol
cmp
cs
jnp
push
inc
ins
dec
lea
aas
fwait
outs
jp
jns
addr16
sbb
rol
mov
test
inc
les
push
xchg
mov
xlat
gs
sbb
fadd
(bad)
out
nop
xchg
lahf
cmp
in
bnd
add
and
dec
rcr
std
jns
rcr
mov
jp
inc
repz
jmp
add
into
sbb
in
retf
adc
(bad)
stc
and
mov
std
ficom
(bad)
ror
cmp
cmp
adc
fdivr
inc
(bad)
pop
js
jmp
cmp
scas
div
repz
lea
inc
xchg
adc
(bad)
retf
jle
(bad)
(bad)
out
cmp
mov
aaa
dec
or
and
lock
imul
pop
xchg
cld
movs
repnz
out
mov
xor
test
mov
mov
fucompp
in
addr16
xchg
dec
push
xchg
mov
jecxz
mov
cmps
xchg
outs
es
pushf
pop
pcmpgtb
leave
out
dec
mov
sub
mov
ins
mov
popf
and
popf
or
jp
push
movs
jb
xchg
mov
jl
inc
add
pop
cwde
push
mov
sbb
cli
std
sub
xor
imul
hlt
and
xor
inc
mov
daa
mov
add
(bad)
push
push
cmp
test
jmp
mov
jg
jno
xlat
and
add
out
push
addr16
jmp
js
frstor
cmp
jne
nop
push
mov
rcl
jno
sahf
jmp
scas
sahf
dec
inc
loope
inc
mov
cdq
push
outs
repz
and
push
call
lahf
mov
ss
movs
pop
and
lods
ja
test
jae
cdq
jnp
cmp
mov
add
cs
add
addr16
popa
outs
xlat
mov
xchg
xchg
xchg
dec
in
inc
cmps
dec
jg
hlt
pop
sar
mov
xchg
sbb
jmp
cwde
out
imul
adc
lea
(bad)
sbb
xor
es
jmp
add
jmp
xlat
jbe
sub
cmp
cs
sub
push
inc
xchg
imul
mov
call
test
dec
jae
ficom
inc
jge
mov
dec
push
lods
inc
pop
add
retf
loopne
lar
jb
or
dec
push
es
mov
inc
push
outs
lods
inc
sbb
inc
or
(bad)
lods
lds
jbe
dec
pop
inc
add
retf
mov
mov
xor
jbe
adc
xchg
mov
arpl
mov
js
inc
ror
or
popa
adc
sub
mov
iret
ds
cmps
mov
repz
gs
push
fild
loope
mov
push
and
test
stc
ret
dec
and
inc
out
enter
cmp
add
loop
sub
retf
dec
xchg
push
xor
xchg
pushf
add
sbb
xchg
inc
lock
aas
dec
call
push
xor
inc
gs
cmp
popa
ret
ds
jbe
mov
mov
in
lods
mov
imul
ficomp
or
int3
int3
(bad)
adc
ja
and
add
mov
icebp
pop
bound
mov
fwait
and
push
sti
inc
cmps
int3
cmp
dec
xchg
sub
inc
mov
xchg
push
xchg
push
cmp
cmps
dec
push
rcr
mov
lahf
bound
jecxz
jbe
mov
adc
scas
jmp
or
xchg
icebp
pop
nop
dec
sub
loop
pop
ret
outs
arpl
sub
xchg
mov
adc
out
inc
pop
mov
add
call
mov
call
cwde
mov
push
ins
and
adc
rcr
aaa
dec
jbe
retf
xlat
fldenv
mov
cmp
jne
fisttp
inc
pop
cld
or
into
add
icebp
sbb
sbb
mov
ss
adc
mov
push
inc
and
daa
inc
inc
mov
mov
sub
sbb
mov
mov
adc
pop
jne
cdq
or
in
(bad)
dec
mov
push
ret
xchg
jbe
(bad)
cmps
add
inc
retf
push
aam
pop
scas
xchg
lods
in
sub
mov
fadd
pop
inc
add
fwait
and
jge
add
in
scas
and
inc
push
pop
loopne
pop
mov
(bad)
sub
or
lds
add
or
jno
inc
add
dec
dec
jl
push
lods
ret
jp
xchg
adc
out
iret
push
add
arpl
cwde
xchg
pop
cdq
clc
fcomp
call
aam
aaa
and
or
xchg
or
fnstenv
test
scas
sub
movs
jnp
cli
nop
test
pop
add
std
(bad)
cld
(bad)
ja
mov
sub
nop
pop
cmp
neg
loop
add
and
inc
dec
adc
in
adc
cmps
adc
inc
xlat
sub
ds
ret
(bad)
imul
push
pop
push
jmp
push
dec
enter
jmp
cdq
cmp
retf
xor
sbb
sub
loopne
repz
jle
xor
addr16
sbb
std
out
push
dec
ins
xor
mov
imul
lahf
fcom
mov
out
xchg
fsub
pop
pop
cmps
pusha
movs
loope
loop
in
aaa
imul
aad
outs
out
cmp
loope
fsqrt
mov
fcmovnu
jns
mov
gs
retf
ror
jae
inc
xor
imul
push
ja
and
xchg
inc
hlt
pop
call
jb
xchg
xlat
test
inc
xchg
xor
mov
(bad)
loop
inc
test
outs
outs
ret
sbb
lea
mov
ror
cmc
leave
not
mov
mov
sbb
loop
enter
cmp
icebp
inc
shl
mov
clc
scas
mov
xchg
aam
aad
movs
scas
cmp
stc
push
sub
jle
sbb
cmp
fst
nop
push
sbb
dec
sub
lea
add
fwait
xchg
adc
sbb
adc
fwait
ja
xchg
out
sar
cmps
and
mov
pop
push
ds
fdivr
in
push
mul
call
jp
ret
push
and
pop
adc
sub
pop
and
fsubr
jbe
xchg
repnz
cmp
loopne
push
clc
cli
fstp
fwait
rol
lahf
int3
shl
push
imul
iret
and
jle
imul
dec
ins
into
ins
xchg
sub
jo
aas
dec
cmp
lea
clc
repnz
mov
loopne
out
adc
mov
mov
inc
(bad)
xor
fisub
dec
jo
fidivr
imul
or
inc
mov
jno
adc
add
test
or
jle
push
sbb
xchg
iret
mov
into
jb
cld
sbb
sti
mov
je
fidivr
add
mov
mov
or
loopne
xchg
test
loop
xchg
movs
leave
repnz
push
pop
or
test
repz
js
jo
or
jg
stc
inc
mov
xchg
fdivr
scas
mov
mov
shr
in
add
lock
mov
js
jl
mov
std
jno
xor
pop
cmps
clc
fisub
fs
mov
cs
pop
mov
mov
scas
mov
pop
push
dec
pop
cmp
data16
aas
inc
repz
xor
or
les
enter
and
mov
ds
in
fsub
or
add
mov
pop
mov
daa
jmp
push
dec
cmp
mov
push
jmp
out
pop
fsub
sbb
push
sub
fisttp
test
adc
std
mov
popf
daa
mov
push
mov
rcr
scas
es
cwde
inc
jmp
and
in
dec
ficomp
push
sub
cmp
(bad)
(bad)
adc
mov
hlt
dec
and
push
mov
loope
mov
fcmove
cmps
adc
(bad)
mov
sub
xchg
dec
stc
clc
mov
push
push
retf
jb
pusha
sahf
imul
(bad)
pop
add
mov
(bad)
repz
std
adc
push
push
push
mul
ret
and
ins
dec
jns
iret
push
xor
xor
push
mov
pop
jo
ret
stos
sahf
xchg
fdivr
inc
or
je
push
test
cmp
fdivr
lods
and
popa
mov
jo
lods
inc
pop
aaa
rcr
shr
in
les
ror
fdiv
inc
test
leave
loope
in
jl
stc
jecxz
pop
sbb
mov
es
arpl
out
sbb
cld
mov
xchg
int3
lea
fsubr
sbb
cld
or
push
iret
jg
sub
test
hlt
add
mov
(bad)
dec
imul
ss
dec
jns
addr16
sahf
punpcklbw
outs
or
dec
aaa
cpuid
xor
mov
out
addr16
shl
mov
mov
sub
out
cmp
out
dec
push
dec
jg
in
stos
xchg
mov
mov
xchg
jecxz
ret
add
jno
push
jg
ins
sbb
nop
popa
cli
imul
outs
dec
or
mov
sub
xor
stos
cmp
cmps
add
mov
mov
je
neg
call
fcomp
das
shr
add
inc
mov
jg
ret
dec
sbb
xor
lea
sbb
outs
inc
jge
ret
mov
test
pop
xor
cli
out
cld
cld
(bad)
jge
mov
mov
fistp
sub
icebp
in
loope
cmp
ret
inc
mov
jne
inc
pop
dec
mov
add
outs
pop
pop
xchg
aas
je
(bad)
shr
aam
inc
int
xor
cmp
test
sbb
cmp
sub
jle
je
push
call
jbe
lds
fimul
out
mov
fmul
sbb
inc
jb
(bad)
sbb
fcmovnu
imul
mov
push
ficomp
scas
mov
xor
cli
xlat
out
cmp
sbb
pop
mov
jbe
push
fisub
movs
test
loope
xchg
fsincos
cmp
pop
pop
ins
xor
ins
mov
imul
outs
je
or
shl
inc
push
popf
sbb
je
mov
jne
test
in
push
(bad)
fstp
ret
mov
lods
xchg
and
std
(bad)
cmc
(bad)
stc
or
in
pop
std
cmp
push
(bad)
xchg
push
mov
mov
loope
in
in
push
outs
jno
jle
mov
jge
test
aas
push
in
rep
inc
mov
addr16
push
aaa
and
stos
dec
inc
mov
mov
popa
lea
aam
cmps
ja
addr16
cmp
bnd
push
enter
cmp
dec
call
pop
dec
pop
jbe
xchg
pop
inc
add
add
jecxz
pop
out
mov
imul
lds
adc
inc
xlat
add
and
or
pusha
cs
mov
push
inc
push
jmp
add
sbb
in
pop
or
stos
and
jmp
leave
push
retf
mov
or
cmp
dec
mov
sub
jns
add
jnp
jge
sbb
jne
jle
mov
jle
nop
retf
repz
jns
cmp
cwde
dec
adc
jmp
mov
jae
stc
jne
movs
hlt
fiadd
xchg
adc
mov
test
in
fs
cmps
jb
inc
push
fs
adc
ins
inc
jnp
hlt
ret
pop
outs
sbb
dec
xlat
loopne
rcl
fbld
retf
shr
mov
jle
in
inc
mul
dec
out
jnp
xchg
cmp
pushf
add
pop
xchg
div
inc
jle
and
std
cwde
mov
jo
sar
and
idiv
(bad)
adc
cmps
leave
cmp
rcr
push
xor
dec
fnstcw
cmp
retf
cmp
adc
mov
pop
cld
int3
fcomp
mov
(bad)
mov
call
jg
mov
mov
and
lahf
or
cmp
mov
push
xchg
fdivr
cmp
repz
xlat
into
cmps
cmp
mov
hlt
popa
mov
jmp
jno
lahf
cmp
jbe
out
push
add
leave
fimul
cld
sbb
ja
pop
xchg
ds
sbb
fist
jmp
popf
inc
push
fmulp
inc
mov
adc
pop
call
mov
xor
(bad)
inc
adc
retfw
cs
rcr
neg
add
imul
lock
cmc
into
dec
inc
fisttp
loope
sbb
fs
les
mov
bound
jnp
and
repnz
jno
push
(bad)
adc
(bad)
inc
mov
cmp
loope
loopne
inc
xchg
jmp
mov
pop
or
pop
push
ins
out
lea
push
or
xchg
mov
inc
cmp
and
xor
out
dec
sub
xor
cmp
mov
ficom
push
add
int
test
add
popf
add
cmp
aad
in
aad
xchg
xor
pop
xor
jl
mov
sbb
jecxz
imul
icebp
pop
out
add
ins
hlt
push
xor
mov
cdq
sbb
sbb
xchg
lds
outs
cmp
or
sahf
aaa
mov
mov
push
imul
call
mov
jge
mov
push
push
jge
jno
mov
adc
jecxz
mov
push
cli
xchg
iret
fwait
leave
pop
in
ins
pop
xlat
mov
daa
pop
cmp
mov
pop
jne
imul
mov
adc
imul
sub
and
into
mov
addr16
mov
pop
hlt
outs
in
dec
in
ds
adc
call
adc
cmps
and
in
retf
mov
lea
aas
push
loop
xor
sbb
mov
cmp
sahf
sbb
call
ss
or
cmp
pop
(bad)
mov
mov
pop
lds
popa
ret
rol
lds
fadd
xor
sub
xchg
lods
shr
push
(bad)
push
fild
and
aam
icebp
jae
div
inc
cli
aaa
out
sahf
mov
outs
cli
add
cmp
sub
rol
cmps
cwde
enter
std
inc
pop
inc
and
sar
cmp
loope
pushf
cmc
jae
xchg
and
loopne
cmps
jle
jmp
ins
jg
fs
lahf
outs
retf
xchg
inc
jl
jge
js
imul
lds
fwait
mov
fld
xor
dec
mov
lods
mul
test
dec
sub
stos
sub
loop
jl
shr
rcl
mov
pusha
or
mov
or
xchg
xor
stc
inc
leave
cmps
(bad)
jg
sbb
and
mov
outs
les
sahf
mov
xor
cs
jbe
lods
fdivr
and
xchg
out
mov
call
xor
xor
mov
ds
sbb
shr
ins
cmc
xchg
or
xor
jo
add
inc
lods
ror
call
pop
dec
je
cld
push
and
test
aaa
jbe
scas
mov
and
mov
sub
push
mov
cmps
scas
in
jmp
fs
scas
or
inc
into
mov
or
sbb
push
mov
jns
sub
push
fisttp
js
ret
out
cmc
in
data16
in
sub
dec
sar
imul
cmp
fld
retf
pop
loope
fs
pop
fld
mov
xor
and
fadd
lock
scas
les
test
or
mov
add
fcom
jbe
xor
adc
jns
dec
adc
push
movs
push
jg
leave
sbb
(bad)
jae
mov
push
xchg
or
mov
dec
push
xor
push
xor
icebp
repz
and
hlt
icebp
cwde
jp
out
mov
xchg
pop
adc
mov
cmp
xchg
ret
jns
cmp
cwde
push
lds
retf
adc
or
inc
mov
pusha
clc
mov
dec
and
fs
push
sbb
pop
pop
ret
mov
popf
adc
mov
or
jecxz
ss
mov
out
nop
das
out
rcr
movs
test
pop
repz
fxch
jo
xchg
retf
lds
mov
inc
or
out
scas
dec
mov
ret
xchg
jl
mov
mov
popa
clc
sbb
xchg
inc
std
inc
add
addr16
call
cdq
cld
mov
pop
adc
pop
pop
sbb
fldenv
or
cwde
adc
push
int
mov
xchg
and
std
int3
or
add
mov
test
sub
and
out
dec
cli
mov
or
and
test
pop
add
retf
add
add
les
packssdw
out
dec
pop
gs
dec
stc
js
mov
or
cmp
jp
mov
das
adc
push
int
jmp
(bad)
mov
dec
retf
addr16
inc
and
popa
xchg
and
jb
lds
enter
scas
gs
fimul
sub
int3
lds
pop
and
mov
sbb
cmp
or
inc
push
repz
sahf
pop
mov
or
adc
imul
cwde
fcmovne
pusha
das
pop
cmp
push
fstp
jb
jns
jmp
lock
adc
dec
addr16
call
cmp
bound
in
jne
cld
push
mov
xchg
cld
cmp
sbb
mov
das
xchg
push
jle
inc
jmp
test
dec
xchg
cdq
icebp
loop
outs
or
cs
daa
inc
(bad)
not
xchg
sub
lods
clc
xchg
int3
add
cmp
cmp
nop
cmp
sbb
(bad)
imul
aad
ss
mov
jecxz
mov
push
mov
in
pmulhuw
inc
push
or
addr16
xchg
cdq
mov
jns
shr
sbb
mov
jle
add
pop
jo
jp
xchg
pop
push
test
mov
push
jo
mov
pop
mov
and
or
hlt
and
and
sbb
pop
das
xor
xor
sti
jae
out
mov
mov
dec
lahf
jno
inc
mov
ss
arpl
ins
sub
bound
adc
dec
shr
nop
adc
adc
(bad)
fdiv
adc
pop
fdivr
push
mov
xor
nop
sub
out
aaa
mov
push
mov
cmovae
(bad)
pop
inc
pop
pop
push
stos
xchg
inc
xchg
popa
push
shl
neg
out
inc
pusha
scas
mov
test
pop
xchg
in
mov
push
sahf
stos
cmc
stos
in
jno
int3
ja
or
xchg
pop
into
cmp
loop
mov
pusha
ret
cmp
push
rol
mov
mov
jg
add
std
scas
mov
mov
inc
outs
push
loop
cwde
jmp
or
and
out
cdq
sub
add
mov
xchg
push
sbb
sbb
mov
scas
test
xor
push
jo
xor
into
jge
inc
idiv
inc
shr
jp
nop
ret
sub
cmp
mov
call
sub
aad
rol
add
mov
inc
cs
cmp
push
fidiv
daa
or
fwait
jbe
sbb
cmc
mov
inc
push
and
adc
sbb
add
pop
push
push
imul
retf
lea
cmp
cmp
lods
inc
(bad)
out
add
ss
add
push
sti
dec
cld
pop
add
and
push
int
push
xchg
mov
push
popf
xor
aam
push
dec
and
popf
and
jg
mov
sbb
jnp
call
mov
inc
addr16
scas
mov
and
call
fldenv
sbb
and
sbb
inc
call
sub
sub
sub
mov
je
inc
adc
push
std
mov
aaa
hlt
pop
sub
lods
sahf
pop
scas
or
mov
icebp
psadbw
inc
into
sub
ins
outs
pop
jg
lods
adc
and
pop
jmp
arpl
cli
sbb
mov
cmps
sahf
sbb
stc
(bad)
cmp
dec
dec
inc
inc
inc
fldcw
es
shl
iret
(bad)
rcl
pop
cwde
jbe
fwait
pop
adc
mov
popf
push
xor
xchg
push
scas
scas
sub
int
call
dec
shl
test
inc
push
(bad)
rol
outs
or
mov
fcomp
dec
and
(bad)
es
ins
push
scas
jmp
push
push
xchg
xor
sbb
cmc
nop
add
jnp
leave
icebp
stos
mov
les
jae
test
pop
shl
repz
sub
inc
jae
sub
mov
mov
pop
cmps
outs
xchg
inc
or
stos
xchg
mov
or
mov
mov
hlt
inc
inc
loop
and
pop
dec
fld
jnp
lahf
jno
aad
inc
jp
and
mov
(bad)
pop
push
popa
out
pusha
jl
xchg
aad
js
test
outs
mov
or
pop
inc
mov
ds
or
xor
xchg
sahf
adc
cs
mov
push
xchg
pop
out
xor
mov
sbb
out
jno
in
aam
test
das
jg
outs
xor
mov
jecxz
cmp
and
pop
fisubr
nop
movs
arpl
imul
dec
or
imul
xor
dec
dec
sbb
ja
stos
xchg
repz
dec
push
add
pop
jle
push
pop
scas
inc
lea
cdq
adc
out
pop
inc
popa
imul
xor
into
cdq
pop
out
add
iret
iret
cli
popa
outs
adc
add
adc
int3
test
addr16
neg
das
test
add
mov
ss
sbb
rcl
mov
dec
addr16
repnz
mov
out
popa
mov
or
jmp
lds
aas
cmp
add
add
mov
aad
nop
jmp
cwde
inc
dec
into
repz
fnstenv
fldcw
clc
int
adc
movs
leave
jno
mov
lods
sbb
popf
or
xchg
inc
push
shr
leave
sbb
xchg
js
sbb
mov
push
xchg
and
scas
inc
push
hlt
cld
(bad)
les
ins
repnz
adc
pop
mov
mov
ins
push
rol
sub
ins
adc
pusha
ins
jg
add
lock
icebp
mov
(bad)
cmp
dec
gs
xchg
xchg
test
sahf
repz
add
inc
mov
(bad)
sbb
mov
leave
mov
hlt
dec
cwde
dec
les
movs
mov
mov
leave
nop
xchg
adc
outs
daa
adc
mov
sub
cmp
jge
push
add
add
pusha
jg
jmp
inc
dec
pop
adc
sbb
cdq
ret
jne
popf
ins
adc
cmp
ror
push
fsubr
sub
sub
mov
cmp
lahf
jnp
ror
clc
int
(bad)
fisubr
mul
dec
pop
xor
xchg
dec
dec
dec
adc
out
stos
mov
adc
add
or
jl
call
hlt
js
pop
inc
sub
ret
dec
ss
lock
fiadd
lea
jg
sub
xchg
mov
cmp
lahf
shl
test
sbb
fwait
mov
dec
dec
jnp
(bad)
outs
and
mov
in
ret
fiadd
lds
add
add
mov
mov
(bad)
stc
pop
pop
pop
test
ds
(bad)
ds
and
imul
cmp
inc
retf
push
jmp
jne
out
int
inc
push
je
cmp
sbb
xchg
xchg
adc
shr
ja
add
mov
int3
sbb
(bad)
xor
cli
test
in
stos
fstp
push
test
ins
pop
ins
adc
push
adc
push
popf
adc
add
cwde
dec
lods
adc
xchg
push
sahf
and
xor
pop
(bad)
not
and
sub
add
es
in
dec
sahf
xor
dec
xlat
adc
sub
pusha
fldenv
inc
jge
div
push
clc
movs
xchg
xchg
test
test
call
mov
mov
ds
xchg
and
push
loope
ja
sbb
xchg
mov
xchg
js
xchg
ret
jno
rol
mov
aas
jo
in
xor
and
mov
aam
es
fwait
outs
push
inc
into
movs
dec
mov
mov
daa
loope
push
shl
in
pop
mov
push
lds
push
neg
jmp
in
inc
sub
or
aaa
pop
inc
lahf
dec
mov
pop
jmp
xor
jno
(bad)
fist
pop
retf
into
repnz
inc
ret
stc
add
(bad)
fnsave
cld
stos
and
jge
shl
nop
out
stos
das
sub
xor
aam
movs
jmp
popf
and
sub
shl
movs
(bad)
sbb
mov
cld
fdiv
ss
inc
aad
dec
int
test
dec
add
ror
adc
adc
test
arpl
lods
enter
mov
das
fucomip
jl
jmp
mov
xchg
mov
mov
lds
inc
mov
cdq
jecxz
jb
or
push
je
sbb
adc
sbb
xchg
jge
mov
push
mov
test
mov
je
inc
push
pop
cmc
push
sub
pushf
std
(bad)
fist
inc
push
icebp
sub
cmp
inc
add
cmp
xor
mov
sbb
cmps
shl
mov
jns
xchg
push
push
fwait
inc
push
xchg
ja
lea
out
mov
fild
inc
mov
cmps
sti
xchg
shl
sbb
dec
inc
data16
xor
sub
jge
data16
mov
pop
xor
push
mov
lods
push
aam
ins
xchg
mov
pop
push
sub
ds
fwait
imul
call
stos
push
loope
push
push
jmp
movs
sub
imul
stos
test
sub
imul
rcl
(bad)
jge
das
iret
adc
push
in
jb
push
dec
sbb
xor
xchg
jae
push
es
sbb
and
sar
and
pop
int
repnz
pop
xchg
xchg
mov
and
add
fild
sahf
fwait
jecxz
sbb
pop
lods
ret
cmp
mov
xchg
frstor
inc
test
bound
pushf
punpckhdq
pop
mov
cld
fld
and
dec
(bad)
push
jmp
mov
jl
pop
cdq
mov
xlat
or
aad
or
retf
or
xchg
jae
cmp
ret
adc
pop
jb
jmp
addr16
mov
mov
xor
ins
sbb
add
and
adc
add
je
xor
mov
daa
adc
sbb
jp
sub
in
dec
sub
(bad)
ret
cmp
popf
adc
jne
sbb
add
jl
jb
dec
cmp
mov
mov
sub
sbb
fadd
lds
xchg
or
mov
nop
stos
aaa
loope
stos
fs
or
cdq
jle
lods
pop
mov
mul
sub
pusha
or
ds
dec
test
jmp
push
push
mov
int3
daa
test
push
sbb
add
stc
xlat
dec
inc
inc
gs
and
sbb
sub
cmp
aam
(bad)
mov
(bad)
outs
(bad)
arpl
sub
jns
push
xor
sbb
and
or
adc
xchg
dec
mov
mov
adc
pop
mov
in
pusha
push
mov
movs
pop
(bad)
sar
cmp
inc
(bad)
mov
push
jnp
inc
xchg
mov
out
jmp
and
ror
and
into
(bad)
scas
cmp
sub
xor
adc
push
ds
mov
(bad)
sub
cmp
rcl
xor
jae
outs
add
dec
outs
xchg
out
(bad)
fstp
mov
aad
ss
jge
pop
ja
out
jl
or
repnz
int
pop
cmps
or
outs
jno
scas
scas
ficom
sahf
xor
ret
or
(bad)
arpl
mov
retf
fsub
or
push
fldenv
pop
sahf
xor
test
sub
push
lahf
push
clc
fisub
sub
mov
lock
lods
add
sub
mov
mov
sub
sbb
inc
mov
push
mov
popf
and
pop
hlt
out
ss
adc
mov
sar
sbb
xor
jle
jo
jb
imul
cmp
rcr
lods
mov
arpl
or
xchg
xor
push
aam
or
pop
test
dec
popa
dec
loopne
lds
push
xchg
pop
je
nop
sbb
xor
dec
ds
shr
mov
sti
inc
test
adc
inc
rol
retf
inc
xor
push
movs
sbb
push
popf
hlt
bound
out
mov
loopne
cs
lock
xor
add
imul
in
repnz
mov
mov
sbb
fidivr
inc
icebp
es
push
pop
in
jne
xchg
sahf
xchg
sub
cmp
xchg
enter
fdiv
pop
xlat
sahf
mov
cwde
fcmovb
(bad)
sti
cmp
pop
mov
cmp
scas
int
movs
std
ror
jbe
ret
xchg
inc
adc
pop
cwde
fidivr
add
daa
test
(bad)
jo
sbb
or
sti
iret
sar
into
out
es
and
mov
sti
icebp
mov
ret
or
je
ins
mov
test
push
ret
into
sub
sub
(bad)
dec
mov
inc
hlt
ret
jmp
out
add
sub
movs
iret
or
mov
dec
xchg
push
push
cmp
mov
xchg
inc
push
je
shl
in
pusha
sub
dec
jp
xor
hlt
outs
inc
in
(bad)
mov
push
ins
dec
sbb
call
mov
cdq
xor
lods
or
test
rol
xchg
push
push
xlat
std
fsub
pop
mov
mov
sbb
ret
cmp
lea
pop
xchg
ss
in
stos
cmps
cmp
push
mov
pop
aaa
ds
sub
jb
adc
or
inc
(bad)
xchg
inc
div
in
call
cld
inc
xchg
dec
lahf
jnp
jg
in
arpl
pop
stos
dec
dec
mov
sub
cwde
push
call
push
scas
pop
pop
out
dec
xchg
out
add
mov
fstp
or
jbe
jmp
movs
es
fsubrp
mov
xor
mov
repnz
ret
fcom
and
repz
cld
pop
push
or
dec
fmul
or
mov
inc
out
cmp
pop
sub
mov
test
mov
push
sahf
fmul
ror
mov
out
scas
inc
or
(bad)
out
fistp
int
and
add
in
fcomp
popa
cmp
pop
xchg
xlat
aaa
mov
icebp
add
mov
mov
cmp
retf
push
sub
fiadd
pusha
mov
fwait
cmp
test
popa
clc
scas
inc
pop
mov
std
out
jmp
xchg
sbb
mov
int3
sbb
(bad)
sti
mov
test
or
(bad)
clc
ss
pop
xlat
int
sub
dec
mov
out
ret
jb
pop
sar
out
sar
xchg
inc
dec
cmps
sbb
and
pop
ret
pop
jmp
cmps
push
retf
xor
shl
fisub
ret
(bad)
(bad)
(bad)
xor
cmps
scas
cmp
xchg
sbb
rol
in
cmp
cmps
ja
(bad)
mov
pop
mov
mov
mov
xor
test
jle
shl
int3
xor
cmp
out
test
cmp
cmp
cmp
out
pop
in
inc
shl
jbe
dec
xchg
fst
push
pop
dec
inc
push
jg
or
div
push
nop
mov
push
mov
call
imul
jg
push
test
push
xor
cmp
lods
pop
inc
jb
int3
retf
fcom
pop
stc
pop
loopne
stos
bound
pushf
je
mov
mov
pop
xchg
and
mov
or
and
sub
ins
rcl
xchg
dec
dec
les
call
scas
jbe
push
es
push
scas
inc
push
jne
sub
mov
popf
test
inc
and
and
jp
out
cmp
int
outs
outs
jle
pop
clc
outs
aam
movs
jp
hlt
lea
jp
push
in
or
cmp
sar
dec
pop
adc
pop
ret
mov
adc
jnp
sbb
or
mov
jbe
vmwrite
add
fidiv
out
mov
jmp
in
jne
cdq
sbb
xrelease
rcr
shl
shl
or
or
jmp
(bad)
or
mov
or
nop
jbe
cmp
in
jl
add
push
jnp
shr
sbb
popa
shl
push
test
icebp
pop
lock
mov
fimul
aaa
pop
and
retf
pop
push
(bad)
scas
loope
adc
xchg
mov
sbb
cmp
or
aad
mov
stc
lods
and
dec
mov
(bad)
lock
out
jne
ret
xor
call
and
mov
mov
pop
(bad)
ret
jl
shl
retf
test
jle
call
fidivr
mov
mov
ret
jbe
push
jecxz
adc
sahf
xor
jle
jge
das
fcomp
sub
mov
fsub
outs
inc
push
fcomp
ds
inc
mov
inc
stos
cmc
jmp
out
and
xor
push
sbb
inc
inc
push
adc
arpl
inc
retf
dec
in
test
jmp
sbb
sub
dec
cmp
fcmovnbe
jb
cmp
js
push
int
inc
push
mov
lahf
pop
add
dec
adc
push
outs
pusha
enter
xlat
add
or
rcr
loope
stos
dec
sti
pop
daa
adc
mov
xchg
add
clc
loope
in
push
mov
push
lods
imul
icebp
sub
mov
int3
inc
pushf
sbb
test
mov
or
jno
xor
jp
jp
inc
jge
int3
fdivrp
rol
push
lods
add
pusha
xchg
jnp
jecxz
jl
neg
(bad)
jmp
or
sub
sub
scas
jne
test
dec
xchg
addr16
dec
adc
dec
or
std
dec
das
pusha
mov
pop
jp
adc
sbb
icebp
or
shl
add
retf
jnp
xor
pop
cmps
lea
nop
stc
dec
jp
xchg
sbb
adc
scas
dec
pop
in
out
(bad)
pushf
movs
mov
cmp
test
mov
push
cdq
in
call
cmp
pop
mov
sar
out
stos
push
xor
xchg
cdq
repz
sbb
pop
into
pop
cmc
and
test
mov
clc
in
mov
out
mov
xor
pop
jl
pop
or
adc
push
mov
ficom
mov
das
adc
and
push
sub
pop
pop
sbb
xchg
and
or
(bad)
pop
pop
test
pop
movs
adc
fnstcw
and
dec
(bad)
test
cwde
and
adc
out
sahf
xchg
jecxz
jns
shl
fimul
xchg
pop
adc
scas
ss
mov
mov
bound
inc
mov
dec
loop
rdpmc
jo
pop
push
or
and
out
pusha
bound
mov
fwait
aaa
fwait
test
add
mov
pop
push
jge
pop
mov
adc
mov
sbb
inc
mov
and
sahf
adc
pusha
test
dec
ret
mov
xchg
push
jl
inc
out
xchg
push
ficomp
inc
movs
int
xchg
stos
imul
and
mov
(bad)
push
mov
inc
inc
push
loope
jae
dec
mov
sub
in
or
pop
pusha
adc
mov
dec
test
or
outs
ss
ror
adc
in
mov
mov
pop
inc
outs
fst
jo
imul
or
mov
push
xor
push
(bad)
cmp
data16
fdiv
mov
add
and
sbb
push
cmp
popa
rol
pop
dec
dec
jnp
ds
mov
in
int
out
adc
test
jl
outs
scas
cmc
(bad)
push
(bad)
mov
sub
lock
out
xchg
add
sub
xlat
xor
jmp
mov
js
add
xor
(bad)
mov
pop
adc
push
push
sub
out
mov
fcomi
shl
cmp
xchg
mov
fcomp
mov
mov
mov
test
mov
aad
inc
mov
mov
sub
(bad)
aad
out
scas
bound
fs
sub
shr
xor
and
xchg
addr16
or
add
mov
lods
xchg
mov
pop
out
mov
loopne
sub
js
mov
cmp
pop
mov
sub
add
jl
pop
pop
add
test
rcl
lods
fcom
jmp
in
or
out
ins
xchg
arpl
dec
and
loop
add
aaa
inc
test
sub
mov
push
fiadd
inc
test
inc
lahf
mov
pop
mov
inc
pop
or
mov
xor
mov
jnp
xor
popa
gs
fmul
mov
test
inc
outs
lahf
movs
(bad)
shr
sahf
or
push
push
push
mov
and
push
ja
sbb
and
inc
sbb
hlt
(bad)
mov
pop
data16
jmp
or
repz
dec
jp
and
fucom
cmp
jo
mov
dec
mov
in
sti
pop
dec
cmps
aas
ss
sbb
(bad)
loop
jns
ds
sub
jo
paddw
mov
cmp
rol
adc
xor
mov
xchg
aaa
imul
repz
scas
dec
out
outs
xchg
in
call
jg
dec
sub
jmp
xchg
xchg
push
in
ds
(bad)
push
sbb
pop
movs
mov
jno
pushf
inc
lds
ins
movs
in
bound
call
ret
cmp
cmps
pop
aad
cwde
in
or
push
mov
jns
retf
sbb
aaa
and
cmovbe
xchg
(bad)
mov
or
rcr
mov
es
add
mov
dec
sbb
lods
pop
pop
mov
push
sub
mov
pop
add
cli
sub
shl
bound
aam
fs
add
mov
mov
loop
mov
repz
push
repz
push
ror
push
cld
loope
push
scas
mov
into
inc
xchg
hlt
adc
cmp
jecxz
adc
sub
adc
(bad)
int
ja
ss
(bad)
test
sub
stos
call
neg
sar
in
enter
xchg
push
dec
push
out
data16
fcomp
add
dec
mov
sub
mov
mov
movs
jle
test
inc
mov
add
push
jle
bound
or
in
test
mov
pusha
cmp
out
fnsave
jge
and
fucomi
mov
mov
cmp
pop
rol
stos
jo
shl
call
sbb
jl
push
or
sub
and
outs
sub
jae
movs
push
pop
imul
clc
inc
dec
adc
mov
sbb
or
adc
leave
mov
scas
sbb
jecxz
xor
stc
sub
stos
ss
jg
das
cmp
retf
(bad)
sbb
xchg
cmp
sar
sub
retf
test
fmul
xor
stos
iret
and
lahf
lds
test
(bad)
fisubr
mov
dec
movs
jle
fadd
xlat
and
jmp
test
sahf
scas
imul
std
sub
push
jg
clts
nop
and
rcr
adc
push
adc
lock
lea
outs
cmc
pop
retf
and
paddsw
cmp
loop
loop
push
imul
adc
pop
inc
sub
dec
xlat
ret
xchg
mov
sub
xchg
jecxz
retf
out
rsqrtps
(bad)
pop
call
push
mov
enter
es
(bad)
out
in
enter
jns
and
(bad)
or
test
inc
add
jle
js
outs
dec
push
push
xor
mov
lahf
(bad)
pop
(bad)
sub
sub
mov
or
inc
rcr
(bad)
lock
xor
dec
ins
xchg
add
mov
mov
add
jns
jl
xchg
xchg
mov
mov
pop
pop
cmp
cs
stos
pop
pop
mov
jnp
cmp
pop
ins
adc
sub
ss
pop
fistp
push
es
pushf
and
cwde
shr
xchg
out
mov
jo
pop
pop
ja
mov
push
mov
xor
loopne
sub
js
mov
shl
sub
mov
xor
dec
and
pop
test
das
jge
repz
push
jmp
(bad)
xlat
push
cwde
push
(bad)
ins
cmc
enter
inc
std
jmp
push
loopne
scas
add
out
(bad)
fimul
add
or
int
in
iret
add
pop
add
inc
mov
adc
hlt
pop
mov
mov
movs
pop
add
mov
mov
mov
push
pushf
push
aad
imul
aaa
aad
mov
or
inc
adc
pop
lods
out
fmulp
cmc
enter
pop
loopne
inc
aam
cmc
out
or
mov
in
cli
push
push
sbb
(bad)
xchg
jge
jae
xor
(bad)
cmp
cli
xor
into
and
push
ins
jb
pop
push
push
into
gs
dec
mov
loop
movs
fsub
aam
fnstsw
loopne
jl
out
retf
mov
call
inc
out
gs
loope
fcomp
sub
mov
jmp
(bad)
outs
repnz
jl
pushf
adc
sub
sbb
rcl
push
fld
outs
cli
xchg
imul
in
mov
mov
adc
push
mov
push
pop
in
popf
xor
dec
out
inc
push
add
jmp
pop
xor
imul
rcr
xlat
addr16
xchg
icebp
popf
jle
test
or
imul
cmps
outs
out
mov
(bad)
xchg
or
nop
pop
and
and
leave
ret
mov
xchg
arpl
retf
dec
sub
bsf
lds
dec
push
mov
aam
(bad)
cs
add
xor
pop
rol
sub
add
sbb
and
fdecstp
dec
jns
imul
jmp
adc
mov
xchg
cli
aam
lods
fwait
not
sbb
push
mov
push
dec
cs
loopne
push
out
xchg
push
cmc
sahf
hlt
push
inc
jnp
sbb
movs
nop
fld
cmp
sub
or
pop
in
mov
bnd
mul
cld
ins
mov
test
fdivr
(bad)
fst
call
shl
fld
arpl
ret
mov
pop
hlt
push
test
pop
in
ss
jmp
mov
cmp
and
pop
sbb
cs
xor
mov
sub
pop
jnp
das
ins
mov
dec
xor
repnz
push
sbb
in
lods
and
or
fnstenv
setle
enter
xor
popf
sbb
in
push
jae
push
test
or
movs
ficom
cmps
nop
out
scas
mov
adc
or
inc
push
fist
inc
adc
je
push
movs
and
(bad)
push
xchg
dec
les
dec
sub
movs
(bad)
or
and
retf
pushf
sub
jns
sbb
out
mov
retf
pop
xor
xor
jae
mov
jo
jne
jns
cwde
stc
xor
xchg
inc
test
test
iret
daa
(bad)
(bad)
cdq
cmps
jns
pop
sahf
mov
push
loopne
push
or
push
adc
scas
out
pop
jb
push
arpl
mov
call
cwde
loopne
clc
ins
pop
or
movs
lock
fs
cmp
shl
push
pushf
in
loope
cdq
stos
ret
and
popa
mov
pop
les
sbb
rol
cs
rol
inc
push
jae
push
in
loopne
inc
icebp
inc
sbb
pusha
outs
push
or
add
ins
fdiv
ret
mov
and
xchg
stc
jne
iret
cld
pop
pop
repz
call
int3
sbb
daa
dec
std
dec
das
cmp
mov
retf
out
push
dec
sbb
and
xchg
or
inc
mov
mov
and
pop
mov
or
cdq
dec
xor
(bad)
inc
inc
movs
mov
fsubr
xchg
sub
mov
push
mov
(bad)
loope
mov
scas
dec
or
sub
xor
scas
adc
inc
xchg
nop
adc
xchg
stos
dec
cdq
adc
aaa
inc
lds
ins
mov
inc
enter
sbb
outs
pop
or
jae
lods
cmp
cli
or
inc
push
jne
push
js
pop
stc
dec
adc
stc
das
cwde
mov
sahf
(bad)
out
pop
pop
sahf
mul
sbb
push
movs
stc
pop
fist
xchg
icebp
mov
sahf
mov
fwait
out
sar
cld
icebp
fbld
das
enter
neg
ret
mov
xchg
lds
int3
sahf
jmp
ret
mov
pop
xchg
enter
mov
xchg
adc
into
xchg
test
cld
repz
xchg
mov
fst
aaa
jbe
out
mov
inc
cld
mov
pop
loopne
das
fsubr
adc
test
clc
or
xchg
gs
adc
cmp
mov
shl
cwde
in
enter
sub
adc
ficomp
jl
outs
dec
xor
gs
jmp
xchg
xchg
(bad)
xor
xlat
inc
cmp
pop
sbb
jl
sub
xchg
mov
shr
mov
xor
or
call
mov
shr
mov
xchg
fst
pusha
ret
std
stos
dec
mov
sbb
retf
scas
dec
(bad)
mov
push
out
outs
add
movs
sbb
scas
je
mov
repz
adc
repz
popa
add
mov
repnz
outs
and
adc
pop
cmps
mov
dec
jl
cmps
dec
and
jle
pop
pop
fcmovbe
ret
cdq
pop
in
sbb
pushf
add
ja
push
mul
jmp
and
jne
fdiv
adc
add
sar
adc
sbb
add
mov
add
scas
mov
popa
rcl
jns
test
xor
(bad)
mov
and
mov
pop
sti
sar
jne
out
adc
mov
mov
shr
lahf
adc
xchg
inc
mov
aaa
inc
xchg
in
imul
call
sub
add
imul
jb
adc
fild
(bad)
mov
ds
adc
push
push
mov
loope
data16
pop
cmp
inc
cmc
mov
pop
sub
sti
cmp
jmp
hlt
add
jp
div
inc
test
fmul
adc
cmp
aam
retf
rol
push
xor
push
les
add
xchg
sbb
mov
jne
cmps
das
scas
mov
mov
jb
jb
pop
fstp
sbb
out
(bad)
xor
loope
adc
icebp
xchg
ins
aas
adc
sbb
std
xchg
mov
cs
shl
sbb
xchg
icebp
inc
movs
inc
mov
dec
pop
inc
xchg
xor
jb
ss
test
or
xor
mov
push
xchg
in
mov
stos
dec
retf
pop
into
test
(bad)
inc
lahf
or
xchg
jns
rcr
in
xchg
jo
arpl
and
push
cwde
pop
in
outs
daa
pop
loop
mov
movs
xchg
mov
xor
xchg
pop
lods
scas
add
jmp
sub
sbb
lods
bound
je
mov
es
xchg
ror
(bad)
adc
jle
jo
sub
out
je
hlt
jmp
ins
jmp
aam
ja
sub
push
push
pop
xor
out
jmp
(bad)
push
scas
adc
add
out
inc
adc
dec
loope
mov
pop
fmul
rol
mov
es
into
rcl
or
in
jmp
pop
sub
ins
xchg
push
mov
inc
int
add
mov
loopne
jge
sahf
hlt
addr16
ret
lea
jmp
aaa
aam
jbe
hlt
arpl
jnp
sub
and
jne
mov
inc
xchg
repz
std
inc
jne
imul
retf
loopne
inc
xor
xbegin
inc
sbb
inc
lods
mov
js
push
push
sahf
cld
mov
rcl
test
lahf
cmp
mov
mov
pushf
out
call
rcr
mov
inc
fwait
ret
cmp
jmp
or
add
fbstp
inc
cmp
retf
lods
cmc
push
(bad)
int
sbb
test
xchg
mul
out
xor
pushf
fmulp
push
out
adc
loop
aam
(bad)
jb
push
xor
ins
test
clc
add
fs
retf
test
or
add
stc
cdq
cmp
jp
shl
adc
movs
push
push
lods
stos
pop
push
test
jne
jmp
adc
test
pop
aas
jle
mov
sar
mov
in
cmp
loop
std
sysret
fwait
call
out
jg
pusha
call
imul
push
jno
xchg
inc
or
out
dec
and
loop
dec
mov
out
jge
xor
ins
mov
xchg
add
test
js
lock
call
aas
(bad)
in
xor
or
sub
push
push
enter
dec
fs
cmps
aam
or
push
sbb
sti
mov
pop
and
and
lods
inc
sahf
pop
icebp
lahf
test
dec
push
cmps
adc
jns
loope
test
cld
push
das
jbe
fdivr
rol
fimul
push
lock
clc
cdq
jmp
ror
push
push
shr
pop
cmps
call
fild
or
pushf
aam
pop
fs
lods
push
xor
int3
push
outs
xchg
pop
daa
imul
mov
movs
mov
dec
popf
push
repnz
rcl
mov
inc
sub
inc
xchg
mov
xchg
enter
ret
or
gs
aad
lock
loope
fidiv
outs
loopne
lahf
fwait
jo
adc
or
test
mov
fmul
push
cdq
das
das
clc
(bad)
dec
jge
jb
je
xchg
ins
mov
xchg
push
mov
add
sti
sub
outs
dec
pop
clc
mov
adc
and
sbb
add
mov
loope
mov
outs
(bad)
ror
cs
adc
inc
xor
retf
jg
push
pop
retf
ret
loopne
loop
jne
mov
push
les
mov
cmp
stos
adc
out
pop
cmc
push
pop
xor
xor
les
in
loop
inc
dec
xor
into
push
mov
pop
sub
cwde
test
xor
popa
dec
test
stc
or
out
(bad)
ss
out
adc
adc
jg
loope
stos
lds
mov
push
rcl
mov
mov
xchg
retf
mov
dec
sub
mov
xor
pop
cmp
sub
jo
cdq
xor
push
mov
bound
lahf
sbb
(bad)
arpl
mov
xchg
pop
lods
xchg
mov
out
sar
or
cmps
aaa
leave
jmp
jb
mov
(bad)
sbb
arpl
jns
repz
xlat
mov
add
cld
sub
out
inc
sar
and
shl
fwait
jo
fmul
jl
ins
xor
es
push
and
xor
shl
push
lahf
out
mov
add
mov
iret
add
sub
dec
push
jae
test
sub
push
inc
mov
mov
pushf
push
jmp
pop
sub
sub
loop
fld
ret
in
jbe
neg
aaa
mov
ud1
ficom
ja
hlt
xchg
inc
sbb
jo
mov
jbe
xor
movs
jne
pop
jne
das
xchg
int
sar
push
js
add
outs
shl
sar
mov
lea
test
test
(bad)
fidivr
push
icebp
fchs
sbb
sar
mov
mov
mov
mov
mov
lahf
gs
rcl
sub
push
ins
adc
mov
loope
gs
mov
ins
pop
add
mov
fs
in
iret
adc
mov
dec
mov
inc
stos
lods
sbb
push
out
xor
mov
popf
mov
xchg
sub
push
in
jbe
loope
push
int
sub
lods
imul
and
or
mov
imul
and
(bad)
enter
pop
pusha
or
or
jno
xchg
lahf
fnsave
jmp
iret
or
cli
dec
jle
imul
mov
or
lods
fcmovne
and
xchg
cwde
dec
dec
movs
mov
or
adc
cld
jmp
adc
into
out
test
(bad)
jecxz
or
outs
xchg
xchg
pop
and
jb
pop
imul
xchg
mov
mov
mov
push
popa
iret
(bad)
dec
lock
sub
shl
push
add
mov
(bad)
scas
adc
arpl
mov
push
out
push
movs
fistp
daa
adc
push
mov
mov
mov
dec
or
cwde
popa
jns
hlt
and
neg
xchg
in
adc
sbb
test
les
clc
add
cmps
pop
ret
std
leave
xor
pop
lods
push
dec
(bad)
(bad)
je
or
fwait
cmp
loope
xchg
push
xchg
inc
xor
adc
adc
shl
push
mov
mov
cwde
hlt
cmp
push
dec
lds
cld
xlat
in
push
lock
xchg
cmp
shl
cli
adc
sub
dec
pop
out
or
into
popa
sbb
xor
les
outs
pop
mov
jb
fs
mov
ds
in
test
lock
pop
mov
mov
mov
fsub
in
in
in
adc
pop
xor
retf
stos
or
mov
test
cmps
xchg
outs
rol
jmp
dec
stos
and
call
sbb
push
pop
pop
pop
imul
fwait
mov
jecxz
shl
sub
dec
rol
mov
pop
add
stos
mov
jl
or
cmps
bound
cwde
cmp
das
inc
(bad)
dec
mov
inc
cdq
lock
mov
out
sar
add
mov
dec
cld
sub
cs
in
ins
ffree
cmp
ins
retf
popf
mov
cwde
pop
xor
das
shr
fadd
mov
out
movs
std
sar
push
and
aas
jae
dec
std
push
aas
sbb
in
popa
in
cmc
call
jno
inc
xchg
test
xchg
bound
into
bound
mov
aaa
cs
lods
xchg
dec
popf
cmp
je
(bad)
outs
xor
push
xchg
test
or
nop
std
stc
pop
outs
xor
aaa
mov
sub
sub
ss
cmp
ret
add
fsubr
fcom
ret
popf
stc
add
fistp
or
imul
retf
clc
lea
adc
jbe
ins
das
xor
jg
push
ins
test
jg
xchg
paddusw
aam
imul
or
lods
(bad)
(bad)
(bad)
add
sub
sub
cdq
gs
jne
mov
inc
sub
jl
add
shr
es
je
xchg
xchg
or
movs
push
sub
mov
outs
push
mov
int3
push
sti
movs
movs
imul
sub
jo
bound
mov
fimul
jp
mov
frstor
sbb
lea
sub
pop
pusha
ret
dec
mov
lahf
dec
pushf
mov
pop
lods
jae
xchg
test
jle
rsm
pand
xor
or
out
movs
sbb
push
mov
or
and
xchg
cmp
mov
test
ins
mov
mov
pushf
and
cld
in
push
jae
sbb
(bad)
xchg
pop
adc
pop
inc
and
ja
cmps
add
loop
push
idiv
cmp
fisubr
sub
sbb
dec
mov
ja
mov
cmps
lods
(bad)
sub
ror
dec
shl
mov
mov
sub
stos
add
lea
bswap
test
and
popf
test
cmp
cmc
jmp
fidivr
jne
xor
pop
arpl
push
dec
pushf
or
jp
cdq
lea
daa
add
push
mov
push
aad
xor
pop
sahf
(bad)
int3
mov
or
aaa
nop
movs
and
ss
sub
adc
sbb
sar
(bad)
stos
movs
cmp
jae
outs
pop
test
ins
sahf
mov
sti
sub
add
std
jmp
and
call
(bad)
add
xchg
fwait
call
sbb
mov
push
cmp
jo
and
jae
sub
(bad)
in
pop
xor
mov
and
clc
mov
ins
popa
cmps
push
adc
jnp
hlt
repz
push
aad
es
push
(bad)
fld
loop
pop
imul
sbb
dec
jne
mov
pop
mov
ss
push
arpl
xor
sub
cmc
push
div
mov
jp
ret
les
loop
retf
ret
inc
scas
popa
icebp
cmp
push
push
add
lods
pop
and
pop
jmp
test
xor
in
fld
stos
(bad)
repnz
hlt
popf
add
and
scas
sbb
pop
std
rol
xlat
in
mov
inc
adc
add
je
pushf
inc
enter
push
add
sbb
arpl
repnz
jb
rcr
(bad)
dec
loopne
mov
xor
jo
add
mov
dec
and
ret
xchg
scas
aaa
test
es
sbb
retf
rcr
pop
xor
jle
retf
mov
stos
cmps
jg
test
stc
icebp
or
(bad)
aas
sub
push
in
cmp
pop
xor
out
test
mov
call
out
mov
pop
add
std
sahf
mov
sbb
sti
adc
cmc
out
xlat
mov
call
mov
xor
push
sahf
lock
icebp
(bad)
sti
das
add
das
loope
iret
cwde
(bad)
sbb
out
jne
inc
or
ja
or
xchg
push
and
add
mov
or
cdq
mov
ret
scas
and
sbb
nop
inc
retf
vmovaps
stos
inc
mov
pop
add
jmp
lock
ja
imul
push
mov
(bad)
call
push
pop
dec
sbb
sub
xchg
and
js
fiadd
iret
mov
mov
ins
push
ja
pop
out
pop
out
ret
stos
xchg
add
arpl
and
test
inc
jge
gs
jo
or
pusha
std
push
push
rcr
or
test
cld
inc
or
xor
pop
xchg
pop
js
call
stos
nop
xor
shl
mov
dec
aaa
xchg
adc
ror
stos
pop
xor
dec
push
bound
dec
int
and
movs
push
cmp
test
sti
jb
and
inc
cmp
adc
push
or
mov
ins
fnstcw
daa
(bad)
(bad)
jne
sub
mov
add
lahf
xchg
(bad)
mov
mov
mov
jno
icebp
cmp
add
in
fs
sbb
mov
jmp
add
std
jo
dec
mov
cdq
clc
jecxz
iret
hlt
pop
push
(bad)
aam
and
mov
jp
lahf
cs
sbb
div
in
or
sbb
lea
push
add
push
dec
sar
aad
sti
ret
popa
shl
sub
xchg
int
cli
pop
fild
pushf
not
inc
cli
and
and
mov
jae
cmp
xchg
add
in
and
mov
cmp
mov
and
mov
pop
xchg
sbb
or
dec
imul
test
mov
rol
imul
ret
cmps
sub
je
sbb
inc
retf
pop
inc
inc
mov
push
push
cmps
dec
sub
mov
sbb
(bad)
rcr
mov
or
clc
arpl
test
or
jle
inc
repz
stos
div
inc
jno
mov
adc
xchg
add
mov
push
outs
jp
dec
(bad)
leave
test
stos
add
jnp
out
xchg
pusha
or
ins
mov
sbb
fmul
fnsave
sub
mov
fidivr
div
fdiv
cmp
cmp
xchg
(bad)
and
pop
pusha
mov
inc
and
jno
out
ud1
retf
mov
test
cmp
xchg
dec
and
div
inc
cld
add
xchg
jmp
xor
xchg
dec
cmp
out
or
iret
lea
jp
arpl
xchg
jle
pop
cmp
bound
fwait
mov
mov
push
call
or
adc
outs
in
mov
xchg
out
mov
mov
push
mov
(bad)
or
aaa
fwait
dec
xor
or
inc
sbb
retf
lods
in
adc
mov
and
sub
mov
pusha
add
push
shufps
mov
push
inc
or
int
rcr
or
in
int
pop
xor
mov
mov
lods
mov
cmp
xor
push
mov
cmps
and
xor
sbb
jle
pop
xor
inc
fwait
bound
mov
adc
pushf
clc
cmp
stc
lock
pop
mov
std
loope
cmp
cmp
test
push
aaa
jmp
cli
xchg
dec
xor
add
cmps
cmp
jbe
in
icebp
or
fst
add
mov
lahf
and
retf
mov
call
movs
mov
mov
arpl
dec
imul
int3
aas
inc
or
jg
or
cwde
lods
push
xor
push
lahf
and
fld
ins
jnp
adc
cld
icebp
clc
cli
xor
xor
imul
jle
sub
xchg
fwait
mov
sub
push
mov
js
xchg
pop
cmp
jecxz
(bad)
pop
xchg
mov
sahf
pushf
ds
nop
sbb
sub
jge
loop
in
cs
mov
jb
lods
stos
bound
mov
fiadd
jnp
or
bound
call
outs
dec
jmp
xchg
hlt
cs
mov
lds
mov
pop
(bad)
setnp
loope
(bad)
add
imul
jo
js
(bad)
inc
mov
fisttp
in
fucomp
jp
fcomp
iret
add
add
mov
repz
jnp
or
or
rol
push
stos
sbb
mov
dec
and
int
aam
cmp
(bad)
in
xor
in
repnz
inc
out
push
test
ret
and
mov
iret
aas
pop
pop
sub
or
mov
mov
mov
xchg
lods
inc
dec
popa
lods
into
mov
adc
jle
retf
sub
pop
(bad)
jbe
test
adc
sbb
jg
dec
inc
inc
mov
stos
fldcw
call
cmc
call
bound
mov
loopne
sub
popa
xor
call
iret
and
(bad)
ror
cmp
aas
cmp
movs
inc
mov
cmp
loopne
int3
inc
dec
bsr
cmp
data16
push
jno
mov
mov
dec
adc
mov
ins
push
leave
out
bound
sbb
dec
aas
mov
mov
jge
movs
dec
mov
xchg
and
out
adc
dec
mov
test
cmps
push
xchg
lahf
enter
adc
jnp
sbb
loopne
pop
adc
add
stos
bound
jne
xchg
mul
pop
or
ror
or
mov
shr
xchg
jl
dec
push
adc
sub
mov
test
fsubr
pop
aam
xchg
rcr
test
outs
xor
xchg
cmp
inc
jmp
xor
les
inc
(bad)
jbe
push
test
ret
and
adc
out
sti
ret
dec
jecxz
cmp
repnz
aad
adc
cmps
pop
(bad)
push
shl
outs
je
xor
cmc
rcl
vpshaw
pop
xor
xchg
scas
mov
cmps
cmc
pop
cmps
sbb
fwait
add
and
sbb
add
(bad)
(bad)
lea
test
div
mov
xor
in
out
xchg
push
pop
aad
jmp
jecxz
mov
aad
enter
jle
push
mov
(bad)
xlat
cs
mov
mov
mov
in
icebp
lock
and
leave
aad
mov
rcl
pusha
mov
or
inc
mov
jmp
je
xchg
mov
lea
mov
dec
loopne
test
shl
mov
aad
mov
adc
in
push
add
js
sbb
(bad)
push
ror
jns
jnp
mov
ret
scas
lea
mov
pcmpeqb
lods
adc
push
mov
xlat
sbb
out
xchg
mov
icebp
jecxz
push
xchg
xchg
loope
push
xor
dec
mov
shl
cmp
pop
mov
shr
jmp
test
pop
pusha
outs
das
and
imul
inc
rol
(bad)
nop
sbb
sar
xchg
cmc
fidivr
inc
jmp
push
cmp
xor
mov
movs
add
push
mov
pop
xchg
leave
mov
cdq
jae
adc
loop
mov
sbb
test
inc
mov
jmp
pop
int3
jp
cmps
add
ret
(bad)
cmps
mov
inc
lods
inc
test
outs
addr16
mov
xor
jne
push
dec
ins
cmps
and
sahf
aaa
pushf
mov
fldcw
scas
jae
cmps
movs
mov
mov
xor
lds
fistp
ja
xchg
(bad)
pop
das
dec
jnp
(bad)
enter
sbb
mov
int
or
add
sar
cmp
adc
fnstsw
dec
and
enter
xchg
cmp
sti
loop
sub
enter
in
sar
in
add
adc
out
ret
shl
sbb
dec
ja
shr
call
adc
in
sbb
enter
sbb
(bad)
lock
out
in
jle
pop
out
ror
das
(bad)
outs
push
xor
pop
sbb
sbb
mov
dec
rol
cmc
add
js
dec
aaa
cld
aas
neg
push
add
retf
call
or
xlat
aad
ret
mov
inc
mov
shrd
cmp
cmps
addr16
jg
cli
xor
jbe
retf
mov
in
adc
scas
mov
mov
ret
mov
or
arpl
xor
xor
mov
repnz
adc
push
mov
mov
dec
push
mov
addr16
imul
pop
cdq
les
lock
pushf
scas
lods
and
test
call
aaa
or
jle
fld
rdtsc
and
gs
js
aaa
iret
xchg
sbb
lahf
xchg
aam
dec
shl
adc
iret
sub
mov
scas
nop
inc
xor
jle
jne
sbb
push
movs
fiadd
inc
xchg
jl
repz
stos
out
adc
cmp
dec
aaa
daa
cmp
ins
sbb
lock
mov
jle
pop
and
sub
adc
or
jae
retf
or
aad
pop
mov
in
or
jmp
mov
jae
xor
mov
outs
jmp
xchg
xchg
hlt
jb
xchg
fwait
lahf
repz
fldcw
fdivr
pop
push
mov
sbb
xchg
int3
and
mov
add
into
inc
pop
xor
popf
lods
push
(bad)
shr
jns
nop
rcr
pop
mov
sub
mov
jecxz
ret
sub
iret
test
in
shr
gs
out
loop
sbb
push
out
mov
push
dec
lahf
std
or
inc
imul
aas
push
xchg
mov
cs
test
push
std
stos
xchg
repz
jo
and
aaa
push
xchg
inc
pop
lea
mov
pop
(bad)
nop
into
mov
jne
xchg
pop
jl
jno
ret
stc
xor
xor
fwait
sub
xlat
lods
imul
and
dec
xchg
xor
repz
ror
out
pop
pop
mov
mov
lods
out
in
loop
pushf
sub
mov
and
mov
xchg
pop
test
sub
fldcw
cdq
sbb
in
popf
scas
out
dec
pop
ret
sbb
loop
dec
xor
out
jl
sbb
xlat
jnp
mov
aas
mov
mov
in
outs
cdq
and
daa
fcmove
fstp
inc
cmp
or
lea
test
cmp
adc
addr16
(bad)
repnz
xchg
repz
loope
sbb
test
outs
ja
jnp
xchg
mul
mov
sti
cmp
add
je
inc
fisub
iret
jmp
arpl
inc
xchg
jp
das
(bad)
fimul
inc
mov
push
jno
in
cmp
dec
push
or
pop
scas
cmp
push
fcom
xor
pop
xchg
mov
ins
out
add
cmp
fmul
mov
popa
or
test
arpl
mov
pop
push
dec
jecxz
cs
cmp
and
cvtdq2ps
jo
or
and
add
jo
xchg
mov
sub
and
imul
push
push
icebp
call
or
fcomi
scas
adc
mov
xor
jmp
push
(bad)
call
in
or
ret
xchg
push
arpl
sub
jge
xor
retf
mov
xor
sub
push
xchg
call
out
push
push
push
popa
mov
cld
dec
shl
ss
add
gs
iret
jns
mov
fnclex
or
lahf
push
and
stos
pop
pushf
pop
test
mov
popf
ins
in
push
lahf
push
pop
xchg
push
out
adc
cwde
scas
bound
sub
inc
arpl
inc
dec
hlt
xor
mov
and
and
sbb
xchg
push
pop
in
pop
push
(bad)
es
fidiv
(bad)
mov
cmp
(bad)
sbb
xchg
push
xor
jp
neg
les
scas
jnp
mov
jns
add
mov
(bad)
rcl
fsub
or
sub
cmp
lods
imul
shl
or
jl
pusha
test
pop
rcl
stos
int
(bad)
pop
adc
cmp
xchg
sbb
fsub
in
leave
hlt
sbb
pop
mov
addr16
in
daa
out
push
push
mov
aam
pop
pop
test
push
je
ror
mov
(bad)
mov
add
aas
pusha
mov
in
pop
jmp
xchg
jg
popa
mov
call
pop
dec
lds
xor
pop
pop
scas
jnp
retf
inc
cmp
pop
adc
pop
dec
mov
out
or
push
pop
or
inc
adc
add
data16
push
call
ins
rcl
cli
(bad)
into
aam
(bad)
in
aas
outs
repz
and
popa
pushf
shl
retfw
pop
jecxz
int
jo
mov
mov
lods
jge
cld
fld
jle
sub
sub
xor
cmp
(bad)
scas
cmp
test
(bad)
push
inc
in
retf
or
mov
sbb
psubusb
stos
loope
push
dec
(bad)
repnz
adc
xor
clc
out
rcr
xchg
addr16
dec
movs
cmp
xchg
das
adc
out
test
mov
sar
(bad)
out
pop
inc
ja
xchg
fwait
push
sbb
retf
push
mov
sahf
inc
not
in
jmp
adc
mov
stos
into
jns
stos
add
aaa
pop
ret
mov
out
and
push
(bad)
fmul
std
add
xchg
mov
sub
and
and
mov
push
and
pop
inc
sub
pop
mov
sub
xchg
lahf
call
stos
daa
neg
arpl
or
xchg
rcr
sub
push
and
push
aaa
xchg
movs
adc
or
call
dec
retf
or
push
mov
mov
sti
add
fimul
sti
cli
fs
inc
jp
(bad)
lods
push
ret
cmp
push
sar
sbb
xchg
dec
sbb
jmp
push
pop
pop
mov
ins
adc
test
jg
ja
adc
scas
jecxz
rcl
cmp
dec
sti
add
hlt
(bad)
fistp
std
jns
mov
fcom
or
sub
adc
iret
out
inc
mov
jb
cmp
pop
push
mov
adc
out
pop
fisttp
leave
pop
push
cmp
and
shr
add
ja
fwait
mov
jae
cmp
sbb
xchg
idiv
out
ja
mov
imul
lods
cwde
cwde
ja
bound
mov
out
enter
add
pop
retf
fcom
aas
mov
aaa
je
movs
xchg
sbb
loop
in
test
test
leave
push
shl
sbb
or
(bad)
push
fsubr
jge
mov
push
fcom
iret
repnz
mov
(bad)
or
push
dec
cmp
test
not
push
ins
mov
out
shl
cld
dec
dec
aaa
scas
sub
dec
xchg
dec
adc
cvtpi2ps
lods
sbb
jae
imul
fstp
jp
inc
xchg
pop
fld
push
xor
mov
cmp
out
sbb
mov
or
stos
jp
stos
mov
jmp
out
into
stc
push
mov
pop
sbb
int3
mov
icebp
sub
jmp
fstp
mov
xchg
in
pop
test
imul
data16
sbb
call
popf
js
push
pop
push
sub
push
mul
xchg
imul
dec
loopne
nop
cs
int
pusha
cmp
(bad)
or
jmp
popf
or
push
xchg
daa
adc
inc
mov
sbb
sbb
push
jb
aaa
push
or
jmp
cdq
add
ror
arpl
pop
adc
fadd
popa
mov
mov
adc
sbb
xchg
clc
fisttp
adc
sub
rcl
push
xchg
icebp
pop
lahf
dec
(bad)
adc
cld
inc
scas
ins
shr
outs
ds
mov
mov
push
std
fsubr
fidivr
imul
jp
fcomp
adc
lock
sub
inc
test
inc
sub
stc
pop
dec
sahf
mov
jno
aaa
test
scas
mov
and
and
test
out
inc
sti
enter
(bad)
sbb
jb
jl
ja
les
and
mov
sub
push
lods
inc
push
popf
sub
(bad)
and
sahf
xor
dec
rcr
push
std
xchg
aaa
jne
dec
or
xlat
jecxz
mov
(bad)
mov
mov
(bad)
out
mov
retf
retf
xchg
and
loope
nop
pushf
daa
xor
test
nop
cmp
lods
(bad)
jg
cmps
es
scas
outs
push
dec
(bad)
retf
sub
sub
sub
cmps
ret
mov
adc
ja
xchg
mov
call
movs
in
(bad)
(bad)
stos
pop
xor
(bad)
arpl
enter
std
(bad)
xchg
cmp
jo
js
shl
push
jno
xchg
mov
shl
in
sbb
mov
mov
jmp
(bad)
pop
sbb
inc
sub
js
cmp
inc
fild
dec
lds
adc
mov
pop
adc
push
rcl
push
xor
push
cld
jmp
mov
xor
dec
inc
je
mov
mov
shl
xchg
int
add
cmps
mov
ret
cs
cmp
in
jle
mov
or
movs
out
cwde
fmul
push
call
mov
cwde
mov
iret
sbb
into
xchg
test
jns
pushf
test
add
sbb
aad
cs
pop
out
push
out
js
and
jns
scas
cmc
dec
jge
or
sti
and
stos
lahf
mov
jae
shl
ds
enter
inc
mov
sbb
xor
cmp
jae
pop
int3
or
js
sbb
pushf
fdivrp
cmc
xor
lods
mov
in
mov
into
ins
add
aad
jbe
ja
mov
pop
fdiv
pop
xchg
cmp
loope
outs
out
mov
xor
push
mov
call
pushf
(bad)
lahf
jo
xor
ret
les
test
xchg
pop
pop
mov
push
adc
shl
outs
mov
leave
pop
cdq
mov
mov
ror
shl
outs
imul
dec
adc
cmp
dec
add
adc
out
xor
mov
jbe
aam
not
dec
dec
xchg
outs
adc
repz
jecxz
sahf
mov
xchg
push
mov
rol
mov
jae
fistp
cld
mov
dec
ret
loope
inc
cld
imul
adc
jno
xchg
or
pop
jns
inc
dec
push
stc
mov
daa
mov
dec
call
mov
fs
ins
sbb
(bad)
std
call
(bad)
gs
dec
arpl
leave
mov
sub
pop
inc
xchg
(bad)
jl
fbstp
ss
and
scas
and
sub
or
add
fdivr
pop
out
mov
push
mov
mov
cs
or
pop
cmps
ror
mov
jbe
nop
test
loop
inc
mul
int
push
cmp
pop
xchg
mov
ret
cmps
adc
dec
sub
mov
outs
mov
shr
jb
add
or
push
sbb
inc
mov
leave
call
sub
push
xor
or
clc
lds
nop
imul
scas
je
out
dec
pop
push
cmp
ins
test
adc
ret
push
jmp
scas
or
inc
sub
sbb
ret
cmp
aaa
sbb
enter
lea
(bad)
pop
jp
jl
mov
out
jae
lods
inc
(bad)
jp
mov
cld
mov
cld
or
mov
dec
leave
mov
jnp
xchg
cwde
xor
mov
push
cmc
(bad)
mov
inc
test
fisubr
shr
mov
or
mov
cmp
sbb
mov
xchg
inc
jle
sbb
and
popa
(bad)
xchg
mov
data16
ja
lea
call
dec
inc
sbb
sti
cmp
neg
jo
jge
mov
outs
xchg
mov
aad
xor
es
add
mov
adc
xchg
shr
mov
jl
dec
mov
pop
jl
sahf
pop
push
outs
repz
pop
jge
repz
fidivr
pop
sub
stos
stos
add
jae
mov
dec
mov
fs
push
push
and
outs
(bad)
xchg
pop
ds
cmps
jnp
mov
ficomp
sti
scas
loope
xchg
addr16
jno
and
mov
movs
adc
dec
fs
ins
push
and
int3
stos
popa
adc
retf
bnd
and
mov
outs
xor
aaa
repz
ret
outs
xor
push
ficomp
or
dec
pop
pop
mov
jl
out
push
in
push
imul
jb
ja
in
push
clc
mov
mov
adc
adc
jae
retf
and
(bad)
mov
adc
enter
leave
js
xchg
or
and
sbb
test
lock
xchg
dec
nop
shl
repz
fadd
dec
sbb
fsubr
pop
outs
pop
and
pop
push
pop
mov
(bad)
jle
jb
in
cmp
push
and
stos
enter
inc
out
mov
std
add
clc
fscale
xlat
xor
jl
add
jge
add
dec
inc
jae
in
repnz
inc
scas
pop
(bad)
scas
inc
aam
and
out
sub
sbb
aas
xor
add
dec
iret
xchg
adc
fxch
retf
jne
mov
dec
int3
mov
mov
push
add
data16
sub
pop
mov
sub
std
inc
adc
sar
inc
(bad)
cmc
dec
(bad)
aaa
mov
(bad)
(bad)
pop
fxch
push
scas
jmp
inc
dec
xchg
push
push
pop
or
pop
das
mov
adc
jg
lea
mov
pop
loop
mov
out
ror
xor
dec
push
cmps
stc
sbb
arpl
adc
enter
aam
jge
sub
jbe
jmp
pop
add
sbb
xchg
inc
sub
std
xor
in
(bad)
sti
mov
mov
or
or
adc
push
fmul
mov
xchg
cmp
sar
sub
std
cwde
add
fsub
mov
dec
mov
test
sub
cmp
std
add
and
or
shl
hlt
aam
aas
rcl
push
add
mov
add
pop
ret
ret
scas
adc
imul
ins
add
pop
aas
aam
repz
pushf
fdivr
daa
jmp
mov
ficomp
inc
mov
loopne
pusha
push
or
mov
push
neg
pop
pop
xor
cmp
rol
pop
mov
sbb
(bad)
mov
mov
sbb
and
out
fimul
push
icebp
or
sub
ret
push
sub
fidivr
outs
in
call
and
pop
add
ror
shr
jns
pop
enter
shl
jle
add
cmc
clc
adc
mov
scas
add
ins
mov
fdiv
mov
rol
or
sbb
hlt
mov
xor
and
shr
add
retf
retf
inc
push
inc
sub
sbb
stos
adc
mov
add
imul
shl
cmp
pop
call
mov
xor
add
ss
dec
pop
push
call
cmp
inc
addr16
mov
and
jmp
cmp
sbb
cmps
int3
xchg
ret
idiv
push
mov
xchg
or
adc
cmps
test
xchg
lock
imul
pop
xchg
and
inc
sbb
movs
fnstcw
mov
cmp
in
mov
push
je
lock
shl
ja
(bad)
mov
pop
mov
and
jae
jns
add
idiv
jl
jnp
iret
imul
neg
xlat
mov
in
xlat
add
stos
mov
xor
inc
dec
fsub
fwait
nop
adc
push
and
out
adc
in
adc
fwait
call
stos
and
shr
retf
xchg
shl
mov
push
mov
jnp
push
daa
(bad)
es
push
push
rol
and
mov
xchg
jb
cmp
popa
lahf
pop
push
lock
leave
dec
imul
out
adc
nop
sub
sar
(bad)
adc
int3
std
leave
test
in
ins
push
mov
mov
sub
xor
sbb
cdq
jne
test
cmp
inc
(bad)
std
pushf
retf
add
push
jmp
or
inc
icebp
xchg
jge
(bad)
mov
stos
push
xor
ins
inc
call
push
sbb
sbb
cld
lock
push
iret
ss
pop
push
jmp
push
xchg
mov
sbb
cmp
sti
movs
ficom
mov
push
xor
fist
mov
push
xor
stc
or
adc
xchg
push
xor
inc
pop
rol
sub
das
xlat
and
xor
fist
cmps
jmp
push
push
jae
and
mov
std
into
fs
push
dec
cdq
repz
nop
and
out
push
dec
(bad)
jle
pusha
push
xchg
mov
daa
jne
cmp
int3
pop
or
add
daa
cmp
ins
xchg
(bad)
pop
pop
retf
xchg
aad
cmp
sub
sub
mov
addr16
mov
cmp
inc
test
lahf
push
cmps
sbb
xchg
ret
inc
in
dec
or
js
ret
sar
add
dec
(bad)
push
loop
mov
test
sub
sti
in
jnp
cmp
mov
mov
ret
adc
movs
dec
sar
xchg
shr
sub
jmp
jb
cmp
mov
rol
out
push
adc
push
jp
and
popa
test
dec
and
lea
out
xor
aaa
setp
in
push
xor
adc
inc
call
imul
jbe
rcl
je
push
scas
aam
mov
adc
aaa
jmp
or
cmp
jnp
jle
ret
dec
jle
lods
inc
add
jle
mov
sbb
outs
lds
mov
or
test
loop
popf
cld
push
ret
into
and
jae
stos
loop
nop
jbe
sbb
or
nop
adc
add
fwait
xor
push
jnp
push
adc
shl
xchg
pop
ss
test
pop
cmc
sti
aaa
popa
stos
movs
jno
call
(bad)
adc
inc
shl
cmp
mov
aaa
loope
cs
ins
and
loopne
bound
jle
out
movs
and
adc
lds
lock
arpl
je
inc
mov
arpl
aas
push
xor
ret
adc
mov
fnstcw
loopne
cmp
fcomp
(bad)
fdiv
xchg
sar
mov
inc
add
cs
pop
ficom
adc
bnd
xchg
mov
and
cld
out
fcomp
aad
pop
sti
iret
sub
add
xor
inc
shr
dec
sub
and
xor
in
inc
add
scas
call
aas
rcr
sub
fisub
test
jbe
cs
or
mov
or
aam
ins
and
sub
lea
pop
popf
inc
cmp
xchg
sub
lods
pop
adc
push
jb
enter
sub
fmul
adc
or
or
or
mov
out
or
shl
jg
call
adc
mov
(bad)
xchg
retf
pop
pushf
xchg
movs
test
addr16
les
mov
adc
jecxz
and
popf
and
retf
enter
jmp
xor
retf
xchg
jbe
ss
push
sahf
dec
popf
ds
rcl
cld
xor
les
mov
lods
mov
lods
sbb
outs
dec
adc
push
dec
loopne
in
call
sar
sbb
stc
lds
shr
rcr
jle
jno
or
jo
test
sbb
ret
or
clc
inc
fcom
xor
pop
mov
test
jl
sbb
xchg
ins
es
cwde
mov
xchg
mov
mov
fild
or
popa
(bad)
aam
add
jbe
ja
push
xchg
fmul
push
movs
mov
jnp
mov
sbb
repnz
icebp
xchg
dec
inc
push
pop
sbb
bnd
sar
mov
dec
adc
and
inc
int
sbb
cmp
outs
xor
xchg
xchg
adc
jne
stos
xlat
add
dec
cmp
vorpd
mov
popf
pop
adc
call
jle
push
std
and
mov
adc
movs
dec
imul
lahf
add
xchg
adc
ja
loop
jmp
adc
pop
(bad)
cmp
stos
not
enter
mov
fidivr
jnp
loopne
ja
call
mov
xor
ins
inc
mov
or
cli
push
jnp
arpl
lahf
cmps
cmp
jmp
fimul
loope
int3
xchg
pop
xor
mov
bound
retf
cdq
aas
mov
mov
lock
into
iret
lock
cmp
inc
call
mov
and
les
push
sbb
les
icebp
sahf
out
and
ins
lea
push
sub
mov
and
fs
test
mov
mov
test
xor
pop
pusha
xchg
into
and
inc
mov
sub
pushf
clc
pop
retf
and
jmp
xlat
lea
and
jmp
and
dec
push
push
mov
sbb
ds
(bad)
movs
sub
out
mov
lahf
sahf
(bad)
lahf
shl
mov
fnstcw
add
xchg
push
call
stos
sub
bound
movs
mov
add
mov
mov
cmps
xor
test
call
push
fisub
jo
and
mov
cs
ds
mov
jmp
cmp
mov
scas
or
das
inc
iret
push
out
push
hlt
pop
hlt
fst
pop
push
stos
cmp
repnz
add
pusha
(bad)
adc
cmp
jmp
inc
pop
jp
int
dec
es
inc
bswap
call
pop
xchg
les
jle
pop
xchg
aas
inc
retf
(bad)
sbb
push
sub
push
lods
push
sbb
mov
and
retf
in
mov
or
mov
enter
cmps
push
test
cmp
or
jns
mov
sub
adc
mov
sub
xchg
int3
loop
(bad)
push
sbb
xchg
or
out
test
je
xchg
xchg
jae
adc
ins
and
mov
push
mov
retf
scas
mov
dec
and
rcl
movs
test
stos
iret
adc
jge
arpl
dec
adc
test
int
fnstcw
clc
outs
ror
int3
pop
push
retf
jne
aaa
mov
aad
xor
popf
pop
mov
repnz
retf
add
(bad)
add
lods
es
and
add
addr16
into
mov
pop
jnp
sbb
mov
adc
in
dec
adc
(bad)
or
push
hlt
push
or
ficomp
in
out
dec
arpl
fld
cld
mov
mov
lea
repnz
sbb
pushf
hlt
dec
add
addr16
mov
jb
jae
cld
in
sbb
frstor
jne
or
mov
adc
pushf
(bad)
cmp
xor
dec
pop
mov
pop
and
in
movs
je
ja
retf
test
jecxz
jno
fadd
mov
cwde
ins
(bad)
xor
mov
pop
pop
dec
sub
lods
push
sub
jno
mov
cmp
adc
outs
rcr
pop
cmp
(bad)
mov
scas
sub
and
pop
cli
movs
adc
clc
scas
push
fs
add
adc
pop
adc
xor
es
fwait
out
or
scas
aaa
xchg
and
lds
pop
out
pop
into
pusha
es
into
mov
jle
(bad)
fdivr
bnd
mov
jne
repnz
inc
cld
jge
out
sahf
sbb
add
aad
xor
ds
pop
push
mov
mov
movs
dec
add
repz
or
pop
popf
idiv
push
das
stc
xchg
stc
sub
xchg
test
mov
mov
adc
xchg
push
stos
scas
fild
mov
or
cli
or
retf
js
lds
shl
sar
xchg
call
ror
add
pop
dec
je
xor
xchg
push
push
lahf
jecxz
mov
or
sbb
stos
xchg
inc
popf
sbb
sbb
xor
repz
sbb
jl
(bad)
mov
inc
(bad)
scas
mov
push
mov
xchg
sar
aaa
lods
pop
mov
stc
aas
dec
sub
adc
mov
rol
xlat
xlat
adc
jecxz
xchg
sub
sti
xlat
xlat
fimul
outs
mov
or
dec
std
ins
xchg
rcl
lahf
(bad)
hlt
xchg
add
jnp
adc
ins
add
and
adc
movs
sbb
ds
mov
cmp
adc
sbb
mov
stos
pop
jle
nop
dec
add
fsubr
nop
in
rol
sbb
fild
(bad)
faddp
and
dec
add
and
daa
xchg
push
inc
pop
or
adc
push
inc
jbe
dec
lahf
mov
movs
cmps
arpl
xchg
cld
ja
or
mov
or
cmp
js
pop
mov
addr16
loopne
test
dec
and
test
cwde
mov
test
jb
les
lods
sbb
jmp
or
fidiv
clc
je
fisub
enter
push
sub
mov
push
add
div
ror
mov
call
(bad)
and
cs
xchg
add
test
(bad)
test
xchg
outs
addr16
out
icebp
push
cmp
aam
pop
xchg
rol
inc
test
xchg
not
add
pushf
mov
fistp
out
sub
jns
arpl
nop
in
mov
or
retf
mov
inc
and
nop
fsubr
cld
dec
test
test
jns
pop
imul
mov
aaa
leave
repz
jb
scas
xchg
xor
dec
call
test
add
jmp
sbb
shr
push
mov
dec
loop
inc
adc
gs
push
mov
mov
mov
mov
or
pop
pushf
std
loopne
push
stc
adc
daa
mov
inc
adc
jbe
pop
imul
or
out
sti
das
push
stos
dec
dec
adc
jle
inc
das
vpackssdw
ror
nop
push
shl
push
lahf
xor
pushf
aas
pop
mov
mov
pop
add
mov
jbe
add
int
cli
fstp
ins
jle
loop
fist
int
sbb
fwait
pop
adc
push
fbld
sbb
sbb
mov
mov
data16
movs
test
test
or
xor
mov
mov
aam
inc
fsub
call
inc
mov
movs
mov
push
mov
push
push
(bad)
cwde
add
sar
sbb
and
imul
push
xchg
or
mov
mov
adc
cmps
lea
sahf
shl
inc
mov
xchg
add
push
call
mov
push
sbb
ds
dec
sbb
into
mov
or
inc
stos
scas
sbb
int3
push
xchg
adc
cmp
or
sar
cwde
pop
retf
dec
or
(bad)
pop
cs
loopne
jmp
ins
add
and
push
ja
fwait
jnp
add
iret
stos
mov
fsubrp
(bad)
sti
nop
and
jb
call
sar
int
repnz
mov
adc
sub
dec
mov
cmp
mov
mov
daa
mov
xor
jns
xchg
pop
xor
or
inc
stc
and
sahf
or
xchg
xor
(bad)
xchg
out
fstp
jo
xor
mov
xchg
dec
mov
adc
jl
jo
and
cmc
and
mov
mov
ins
pop
mov
xchg
fnstsw
stos
daa
push
cwde
dec
push
stos
mov
das
or
cmp
shl
fs
aas
inc
sub
mov
and
xchg
loope
call
jmp
pop
mov
jne
loope
push
int3
jp
inc
xchg
pop
xchg
pop
pusha
mov
daa
das
loopne
das
movs
outs
lea
loope
push
out
call
push
call
sbb
fcom
std
(bad)
int
xchg
imul
out
rol
ficom
test
daa
popf
test
jne
ss
or
ins
aad
pop
xlat
aad
cmp
addr16
addr16
movs
sub
sub
dec
mov
or
shl
loopne
inc
push
sub
or
and
int3
(bad)
xor
mov
and
nop
pop
adc
popa
jg
push
jbe
push
mov
xor
test
bound
and
scas
pusha
push
pop
std
retf
(bad)
add
pop
pusha
mov
mov
gs
mov
cmp
(bad)
mov
int
mov
stc
add
cmp
mov
mov
sti
dec
cmp
std
dec
sbb
xor
aad
and
adc
pushf
push
les
out
cmp
shl
dec
mov
imul
pusha
mov
jmp
popf
fstp
loopne
rol
xlat
sbb
stos
dec
jmp
sbb
mov
lock
lea
jmp
mov
(bad)
and
pop
xor
lock
dec
pop
jnp
fwait
rcr
(bad)
mov
test
push
push
mov
es
cmp
dec
inc
xchg
out
push
and
xchg
int3
pop
gs
adc
jb
je
add
xchg
imul
push
pop
aad
mov
push
mov
pop
and
neg
aam
xchg
fstp
jb
add
cmps
ret
dec
pop
loope
out
std
pop
repnz
or
jle
daa
shr
jno
enter
scas
inc
jmp
xor
pop
mov
pop
adc
and
hlt
mov
int3
rol
int
lds
pop
push
int
(bad)
and
aas
and
and
inc
cmps
ret
push
mov
stos
cmc
dec
into
fist
jge
scas
pop
push
mov
ds
push
nop
ins
daa
fidiv
dec
fdivr
add
sub
mov
(bad)
std
pop
popf
fld
arpl
leave
push
ins
and
or
rcl
test
push
push
inc
jg
add
mov
movs
dec
gs
out
and
add
add
aad
das
sbb
add
cmp
jo
pop
sar
cmp
push
push
adc
outs
(bad)
xor
mov
bound
movs
fstp
(bad)
stc
adc
fs
add
xor
mov
dec
jno
in
xor
xor
cmp
mov
(bad)
loope
sub
mov
je
test
sbb
sub
jmp
stc
idiv
sub
sbb
adc
mov
rcl
aas
out
add
js
jne
push
mov
(bad)
icebp
loop
mov
add
out
js
fcomp
cmp
adc
lea
std
pop
dec
push
push
dec
dec
mov
aam
retf
movs
cmp
add
fistp
add
adc
jmp
cdq
stc
cmp
arpl
fadd
(bad)
call
loop
jle
int3
fwait
dec
push
pop
jle
xor
mov
aas
jo
xchg
mov
js
sub
push
pop
mov
dec
fs
push
pop
jns
ins
sbb
inc
sub
loop
adc
out
sbb
mov
enter
das
or
and
mov
arpl
in
popa
cmp
pop
bound
push
gs
popa
add
mov
aas
ror
push
add
fstp
test
inc
pop
dec
test
pop
clc
pop
jmp
or
pop
cmp
jno
mov
sar
push
cmp
mov
repz
dec
add
mov
stc
cmps
jecxz
xor
jmp
popa
mov
mov
out
lea
out
sti
sub
stc
into
loope
mov
mov
dec
imul
mov
outs
add
(bad)
sbb
mov
mov
ss
aam
imul
cdq
sub
add
mov
movs
xchg
jmp
jge
cmp
(bad)
das
xchg
loope
dec
xchg
ss
lea
add
(bad)
in
adc
push
imul
push
cs
pop
loop
push
daa
aas
sbb
pop
sbb
shr
mov
mov
js
sub
retf
xor
mov
mov
sti
inc
or
dec
add
imul
cdq
ror
sar
ds
ret
pop
pop
inc
iret
mul
xchg
mov
shr
aam
arpl
mov
leave
call
out
les
mov
add
jae
mov
mov
cmp
je
or
enter
mov
stos
push
dec
xchg
cli
addr16
cmp
and
mov
xchg
test
test
iret
outs
inc
or
popa
repnz
movs
push
xor
test
sahf
add
push
xor
sub
push
mov
adc
and
scas
and
xor
cmc
cmc
xchg
les
mov
fucomp
scas
fiadd
jns
sbb
std
pop
lea
sub
pop
push
xor
test
aaa
xor
daa
mov
sub
out
imul
lea
ins
nop
xchg
xor
js
xchg
cld
mov
pop
gs
adc
sbb
js
not
popa
shl
leave
repz
and
and
xlat
mov
push
movs
loop
push
sub
xchg
xor
cwde
xlat
aaa
fmul
je
or
sub
add
adc
mov
dec
push
ja
dec
loope
(bad)
mov
mov
lock
push
jmp
cmp
jo
or
sbb
mov
mov
inc
mov
inc
dec
in
jnp
lods
adc
inc
inc
ss
xchg
xor
mov
mov
inc
or
mov
sub
nop
jae
loope
sbb
loop
push
xchg
pushf
dec
jbe
push
clc
sbb
mov
stc
mov
ret
out
pop
rcr
les
push
adc
fbld
mov
mov
lock
jb
mov
shl
fwait
push
stos
adc
pop
(bad)
jmp
pusha
or
mov
adc
inc
jg
cmc
push
ja
jno
ds
stc
or
lea
push
ds
stc
jbe
jns
push
test
js
jb
enter
addr16
xor
test
sti
rol
pusha
les
rcr
push
adc
(bad)
jb
addr16
mov
sbb
(bad)
jecxz
cmp
pop
push
sahf
xor
mov
in
clc
pop
and
fisub
ins
pop
cwde
stc
outs
inc
mov
sub
cmps
sar
or
(bad)
and
test
hlt
imul
pop
arpl
push
bnd
add
mov
pop
mov
popf
pop
and
jle
push
dec
loopne
xchg
push
sbb
and
cmp
out
leave
add
sbb
inc
pop
cmp
pop
inc
pushf
scas
fdivr
cmc
xchg
arpl
and
xchg
popf
gs
popf
bound
fld
dec
dec
test
movs
push
pusha
shl
xchg
xor
add
push
add
push
call
test
jmp
fsubr
imul
inc
dec
mov
retf
js
cmps
or
mov
mov
or
movs
mov
(bad)
pop
jbe
xlat
nop
cmps
push
(bad)
sahf
mov
aaa
fdivr
xor
nop
pop
cs
lock
mov
adc
out
fisttp
dec
lahf
fs
fdivrp
shl
fucomp
lea
xchg
out
mov
xchg
mov
aaa
add
in
retf
adc
das
pop
jo
sub
jmp
ins
or
and
mov
scas
pop
test
adc
adc
retf
pop
jg
lods
into
sbb
stos
mov
les
jae
outs
je
jp
xchg
jb
movs
out
ror
xchg
bound
out
sti
push
jb
pop
xchg
or
hlt
jb
pop
mov
sbb
inc
adc
pop
imul
mov
push
pop
pop
sbb
push
mov
add
retf
data16
(bad)
es
pusha
std
mov
inc
mov
or
mov
jae
fst
add
fs
(bad)
cmc
pop
and
imul
and
mov
test
mov
cdq
cwde
and
loope
pop
dec
dec
les
retf
xlat
sub
push
xchg
aad
inc
xchg
and
pop
je
in
lea
call
imul
and
ds
or
pop
loope
push
nop
push
push
sub
fst
ins
ins
jno
mov
sar
mov
fwait
jg
es
sub
lods
fcmovbe
(bad)
shl
rcr
mov
dec
arpl
clc
sbb
pop
and
adc
mov
pop
(bad)
add
push
mov
push
mov
stos
aam
dec
lods
sbb
adc
pusha
push
test
mov
pushf
xchg
push
mov
or
(bad)
mov
push
outs
stos
push
ja
cmp
xor
sub
inc
loopne
xchg
mov
pusha
sbb
loop
out
mov
test
sbb
(bad)
xor
push
fiadd
pop
pop
jmp
in
out
cmp
(bad)
aam
(bad)
push
mov
shl
arpl
jnp
je
div
push
cmps
sbb
pop
addr16
lds
adc
jp
sbb
dec
xchg
add
mov
pop
mov
dec
outs
cmp
outs
repz
mov
cmp
jnp
movs
out
cmps
scas
ins
mov
xchg
push
jp
xor
test
pop
out
test
scas
push
mov
fldlg2
cld
sahf
push
out
retf
xor
adc
xor
mov
mov
int3
mov
cmp
sbb
inc
sbb
dec
dec
jecxz
(bad)
aam
stc
(bad)
out
jb
add
ins
inc
ret
jns
aas
adc
(bad)
pop
push
pop
mov
adc
push
xchg
jg
call
push
pop
mov
xor
sar
retf
jae
mov
dec
mov
stc
xchg
div
and
fucomip
call
xor
aam
dec
adc
fwait
xchg
add
and
test
clc
int
fwait
out
xor
popa
xor
dec
and
pop
dec
cmc
retf
xor
das
add
movs
out
popf
sbb
clc
mov
out
fwait
mov
xlat
les
cmp
iret
cdq
mov
mov
mov
dec
movs
in
fld
vmovups
js
lds
retf
ins
ja
add
stos
pop
adc
or
or
push
pop
fcomp
enter
inc
movs
aad
mov
scas
cmps
add
mov
ins
jb
int
jmp
xchg
fcom
sbb
jmp
js
pusha
cld
gs
adc
sahf
jbe
push
sti
stos
sub
cdq
cmp
adc
in
inc
push
shl
xor
addr16
jns
xchg
inc
retf
dec
cmps
addr16
xchg
movs
iret
arpl
cdq
pop
sar
adc
inc
cdq
jmp
fmul
shl
mov
mov
mov
jmp
push
mov
lods
mov
pop
xchg
and
bound
aas
pop
aam
repnz
mov
mov
inc
dec
dec
jb
inc
out
leave
xor
repnz
add
ret
mov
jb
clc
adc
cwde
cld
fwait
xlat
fld
call
sub
aam
mov
cmps
mov
lock
into
add
push
test
data16
call
rol
push
enter
(bad)
cmp
cs
leave
add
std
fnsave
mov
pusha
mov
das
jns
inc
or
pop
jle
and
sbb
add
jmp
push
xchg
mov
adc
addr16
xchg
pop
xchg
and
dec
pusha
xor
cmp
mov
fadd
mov
xor
add
fsqrt
mov
mov
mov
xchg
ins
mov
jl
mov
dec
bound
out
dec
and
push
add
pop
ficomp
mov
inc
push
push
pop
cmps
fnstcw
cwde
lahf
sbb
ficomp
arpl
(bad)
repz
jbe
or
fisttp
pop
or
shl
xor
call
inc
xor
in
stc
mov
push
cmp
test
loope
sbb
into
sub
dec
cs
dec
mov
fwait
idiv
js
gs
stc
(bad)
adc
pop
and
inc
fsubr
fnstenv
adc
mov
sti
cmps
jmp
mov
loop
jno
and
hlt
icebp
test
(bad)
ins
ins
ss
or
mov
sub
or
jno
bound
fist
mov
mov
or
js
popf
adc
cmps
and
mov
and
inc
mov
pop
shl
xchg
es
xchg
or
inc
add
test
enter
inc
pop
mov
(bad)
sti
cmp
je
push
mul
push
jmp
sbb
fnstcw
xchg
popf
fsubr
pop
hlt
adc
mov
xchg
and
and
mov
iret
adc
or
ds
mov
lods
rcl
and
cmp
icebp
retf
dec
mov
pop
gs
sub
jg
xor
mov
inc
lock
int3
(bad)
loop
in
mov
adc
fs
loopne
add
xchg
cwde
rcr
dec
xchg
jo
clc
cmps
and
add
(bad)
xchg
(bad)
cmp
sbb
push
and
int3
jmp
pop
sub
hlt
adc
mov
(bad)
cmps
and
jge
fidivr
retf
test
leave
(bad)
cmps
push
sti
jmp
inc
sbb
iret
xor
call
ss
xchg
inc
pop
inc
push
stos
out
mov
ins
cmp
cmp
dec
push
(bad)
(bad)
xor
dec
xchg
das
sub
out
jecxz
mov
xlat
sbb
mov
in
inc
fs
xor
icebp
cmp
fs
nop
add
stos
dec
xchg
ss
xchg
sub
cmp
mov
dec
jecxz
pop
scas
or
pop
cmp
or
std
jne
cmps
pusha
jb
in
out
sti
sbb
adc
fsub
push
mov
lods
scas
dec
mov
sbb
mov
jne
js
outs
icebp
xchg
xchg
in
leave
sar
add
in
iret
mov
push
inc
(bad)
out
inc
mov
rcl
movs
pop
inc
sbb
cmp
cmp
xchg
inc
pop
push
sbb
and
mov
pop
add
pop
ins
inc
mov
(bad)
xchg
adc
call
retf
retf
cmp
jb
push
mov
xchg
mov
sbb
sub
es
bound
iret
mov
sbb
div
push
cs
not
jl
mov
loopne
pop
loop
push
jae
lock
daa
sub
loopne
cld
(bad)
leave
dec
ins
imul
cld
cmps
inc
adc
sub
cdq
ins
cmp
mov
sub
call
inc
cdq
xlat
xor
and
sbb
mov
dec
hlt
in
pop
ror
xor
je
inc
int3
mov
fld
ret
inc
adc
ror
mov
ins
mov
mov
out
adc
adc
xor
sub
(bad)
fidiv
inc
pushf
xor
mov
fwait
xchg
clc
xchg
push
dec
sbb
jo
push
pop
pushf
retf
jl
jmp
aad
jl
movs
xchg
mov
inc
ja
int
xchg
cmp
pop
jmp
inc
xchg
adc
out
loope
aas
mov
mov
or
pop
inc
(bad)
outs
int
enter
adc
test
mov
xchg
ror
or
add
mov
pusha
adc
add
leave
gs
push
addr16
mov
xchg
data16
mov
xchg
adc
(bad)
cmc
push
lds
cmps
cld
into
test
(bad)
stos
fisttp
mov
and
out
or
sahf
xor
jle
sbb
out
cli
ins
in
or
mov
xchg
fdiv
pushf
sub
arpl
mov
movs
push
sub
imul
mov
mov
pop
mov
mov
xor
loopne
mov
(bad)
xor
and
mov
cmp
loope
sbb
call
loopne
push
jo
dec
ret
jno
(bad)
add
inc
mov
adc
pop
loopne
icebp
test
pusha
mov
inc
leave
imul
sbb
push
add
in
sbb
cs
jnp
mov
int3
lods
pop
xor
dec
xor
mov
cmp
add
adc
out
stos
jne
dec
in
enter
push
mov
jge
(bad)
mov
pushf
outs
pop
fwait
push
loope
movs
pop
push
push
movs
aam
jmp
daa
lods
stc
jmp
jmp
jg
push
les
inc
movs
(bad)
loope
iret
cmp
adc
ror
retf
pop
in
or
push
mov
nop
aas
(bad)
popf
inc
popf
dec
xor
dec
mov
shr
je
push
das
xchg
scas
xchg
sbb
fsub
jmp
sbb
(bad)
sub
push
ror
xchg
test
mov
(bad)
in
add
enter
pop
imul
addr16
add
clc
les
lahf
jno
xchg
dec
aas
mov
pop
mov
retf
fnsave
jno
sub
xchg
fcomi
xchg
dec
and
xchg
sti
into
cld
lahf
sub
in
pop
add
sub
pop
popf
pop
ja
stos
xchg
out
sbb
int
shl
jecxz
leave
xor
lds
(bad)
add
jg
int
shl
neg
ds
stos
loopne
int3
repnz
xlat
cmp
push
cmps
sbb
jns
icebp
test
aam
mov
dec
lahf
rcl
lock
pop
mov
mov
outs
push
shr
sbb
dec
cmp
mov
test
pop
outs
mov
xlat
(bad)
xlat
jecxz
or
pop
and
or
cmp
ror
icebp
sbb
pushf
mov
(bad)
xchg
cmps
ja
call
jp
lods
inc
mov
cld
dec
pop
cli
cmps
loopne
adc
ret
neg
imul
fsubrp
popf
push
xor
je
mov
dec
clc
pop
fdivr
push
mov
mov
adc
sub
cmp
test
and
div
dec
call
xor
push
rol
(bad)
in
sub
(bad)
xor
mov
sub
add
push
fs
push
sar
sub
mov
sbb
mov
mov
jmp
jge
ja
scas
mov
push
outs
jno
das
add
outs
outs
sub
popa
fnstsw
sub
adc
mov
cld
das
int3
test
addr16
out
mov
xor
shl
adc
fmulp
cmps
and
jb
scas
scas
xchg
out
cld
shl
mov
jnp
shl
mov
test
(bad)
lock
bound
gs
mov
push
or
mov
sub
bound
in
fs
mov
push
adc
xchg
adc
lods
cli
icebp
fdivr
mov
or
and
jmp
pop
fbstp
xchg
xchg
mov
xor
adc
sub
mov
inc
or
lea
movs
sub
pop
mov
mov
not
jmp
mov
mov
ret
adc
adc
data16
cwde
fs
lods
(bad)
sub
pop
jg
and
das
cdq
test
(bad)
dec
jae
add
jmp
pushf
out
ja
push
dec
shl
in
repz
(bad)
push
not
imul
push
int3
out
xor
aaa
mov
ins
popa
inc
pop
dec
mov
adc
cdq
add
fs
or
lea
or
dec
pop
cmps
mov
cld
dec
bound
cmp
xchg
dec
adc
pop
lock
inc
mov
cs
sbb
adc
pop
dec
sbb
cwde
xor
cmp
or
es
ja
lods
out
sahf
sbb
jae
cmp
cmps
adc
pop
and
inc
sbb
inc
hlt
pop
out
loopne
adc
out
sub
xor
xchg
sbb
jmp
pop
sahf
mov
push
out
ret
mov
data16
imul
mov
leave
push
dec
xlat
pop
test
rep
fild
mov
arpl
test
push
fld
xchg
arpl
std
(bad)
jecxz
mov
ret
and
arpl
push
and
je
scas
pop
xchg
dec
in
jl
sbb
mov
(bad)
in
mov
(bad)
xor
test
adc
test
fsub
dec
cs
mov
or
out
(bad)
out
test
cld
in
cmp
in
pusha
jmp
cmp
inc
stos
data16
pop
(bad)
lock
or
fwait
adc
mov
sbb
js
push
push
outs
aas
ds
pop
cmps
es
inc
test
je
push
mov
xchg
xchg
jno
mov
inc
jne
pop
adc
adc
push
rcr
repnz
into
out
push
inc
adc
pop
mov
imul
sahf
and
push
fimul
mov
sbb
imul
(bad)
adc
js
jge
mov
inc
pusha
cmps
dec
shr
fld
(bad)
jne
test
xchg
stos
ins
int
(bad)
cwde
(bad)
or
jle
mov
mov
(bad)
aas
dec
push
mov
sub
in
pop
push
lds
out
loope
adc
dec
mov
cmp
pop
and
push
dec
mov
adc
jno
xlat
loop
cld
or
jne
and
pop
inc
sti
fiadd
int3
sbb
arpl
sbb
mov
push
pop
mov
cmp
sbb
pop
fmul
jo
push
mov
ror
pop
adc
mov
ss
push
mov
mov
nop
xor
neg
jg
arpl
cmp
add
mov
icebp
pop
jns
cdq
cs
mov
test
mov
aam
push
dec
retf
shl
mov
int3
inc
rol
xor
or
shl
and
mov
or
out
xor
adc
imul
sub
xchg
or
mov
sti
out
inc
xchg
jnp
sub
rcr
add
sub
ss
aad
adc
xor
dec
or
xbegin
fdiv
pop
daa
push
jl
pop
addr16
mov
daa
(bad)
out
pop
dec
call
adc
push
cdq
jge
lea
mov
cmp
fldcw
je
jp
ja
stc
mov
push
scas
test
je
mov
out
cmp
fist
jmp
ja
cmp
shl
push
mov
adc
dec
xor
ror
ins
fcomp
cli
sub
fdivr
jle
xor
xchg
inc
pusha
jge
dec
(bad)
lods
cld
adc
arpl
int3
pop
xor
cli
jg
in
and
add
jne
adc
add
push
cdq
jns
loop
sti
fisubr
repnz
sahf
in
jno
xor
idiv
cld
mov
cli
inc
ret
icebp
les
sub
shl
mov
cmp
jle
repnz
xlat
sbb
dec
mov
inc
and
push
out
imul
sub
sub
cs
outs
pop
inc
pop
in
mov
or
mov
sub
or
inc
xchg
sti
pop
pop
test
dec
mov
push
(bad)
mov
xchg
in
in
pusha
or
(bad)
mov
addr16
fstp
dec
addr16
jae
pop
adc
movs
out
adc
cmp
sbb
test
retf
jge
ret
lods
mov
bound
repz
(bad)
or
xchg
in
clc
fsub
rcl
dec
adc
mov
mov
xchg
call
dec
pop
or
mov
xlat
lods
mov
jo
dec
pop
adc
inc
jecxz
xor
cwde
rol
pop
inc
daa
mov
test
mov
movs
and
repz
ds
jmp
aaa
or
mov
(bad)
retf
mov
loopne
push
jae
sbb
int
stos
add
cwde
cwde
cdq
arpl
sbb
pop
loope
xor
xchg
int3
frstor
out
mov
mov
cmp
enter
hlt
enter
(bad)
push
or
js
adc
shl
sub
or
jnp
in
scas
repz
aaa
retf
fsubp
and
inc
pop
popf
push
sbb
lds
jne
add
add
icebp
sbb
adc
lods
dec
inc
sub
in
sub
idiv
sahf
xor
sahf
pop
aam
xchg
cmc
mov
es
lods
add
add
add
mov
or
xor
lods
mov
push
pmulhw
shl
sub
fmul
dec
sbb
ss
ds
xor
sbb
jmp
push
add
loopne
test
std
sar
lock
sahf
dec
push
iret
test
mov
fidivr
mov
mov
sub
in
movs
retf
in
jmp
loope
jge
daa
fstp
imul
jne
and
mov
shl
jb
inc
sbb
sbb
push
sbb
xchg
mov
lds
jae
loopne
cmp
lods
sub
sbb
fmul
mov
sub
loop
out
xor
loopne
sub
(bad)
xchg
add
jnp
repz
push
in
mov
and
jbe
and
imul
lods
(bad)
push
xor
push
mov
cmp
or
shl
imul
and
add
enter
shl
mov
xchg
ja
repz
fadd
stos
push
into
clts
add
adc
mov
aaa
xchg
mov
ret
push
mov
fistp
fild
data16
je
(bad)
rcl
test
mov
loope
xor
loopne
mov
hlt
and
lods
push
cdq
add
shl
sub
xchg
dec
call
jo
jmp
xor
call
dec
xor
aas
sbb
ror
sbb
mov
or
fdivr
shl
retf
rol
jle
push
lods
aad
popf
mov
or
(bad)
out
fisubr
int3
xchg
loope
out
test
or
cmp
pop
xor
mov
daa
fidivr
mov
std
inc
(bad)
xchg
or
ucomiss
add
data16
cli
pop
aaa
mov
or
mov
stc
pop
into
das
mov
test
adc
mov
and
aaa
inc
fdiv
(bad)
pop
jmp
mov
fldcw
mov
xchg
mov
mov
fstp
(bad)
pop
sbb
lahf
stc
stos
adc
pushf
jb
jmp
xchg
xchg
sti
(bad)
xchg
fwait
(bad)
mov
xchg
jmp
xchg
shrd
sub
(bad)
retf
inc
cmp
fcmovnbe
fiadd
and
mov
adc
add
dec
inc
test
push
lods
jg
xor
dec
lods
test
pop
adc
test
add
(bad)
pop
sbb
jle
std
cdq
jb
or
add
and
lods
adc
div
jmp
outs
jmp
sub
sub
jbe
xchg
inc
in
dec
call
scas
dec
fs
ror
sbb
je
js
add
add
mov
loopne
and
xchg
mov
cli
mov
mov
leave
cs
aam
or
pop
pop
and
dec
pop
aas
mov
test
dec
xchg
out
fild
jmp
cmp
push
cmp
xchg
jmp
popa
cs
xchg
cmovno
in
cmp
mov
adc
push
(bad)
scas
ins
addr16
mov
cmc
mov
lock
mov
js
push
lea
ja
(bad)
test
push
inc
sbb
popf
pop
add
ror
push
aad
outs
call
sahf
add
and
add
gs
sbb
jnp
inc
ins
hlt
imul
sti
repnz
sahf
pop
call
pop
test
fld
in
xchg
sub
scas
mov
shl
sub
ins
loop
scas
leave
mov
call
dec
ins
push
push
jge
dec
xor
sbb
in
push
or
movs
xchg
fbld
aaa
ret
xor
mov
or
xrelease
push
in
jecxz
sbb
popa
std
jns
rcr
mov
and
test
sub
dec
cmp
adc
loop
ret
xor
or
gs
ret
push
mov
sbb
sub
push
lods
stos
adc
jge
in
das
push
mov
sar
(bad)
xlat
mov
iret
xlat
clc
stos
std
(bad)
dec
add
add
mov
cmp
inc
inc
push
mov
cmp
mov
hlt
movs
(bad)
lahf
clc
jge
in
and
out
in
aad
cmc
inc
cmp
or
mov
mov
mov
dec
dec
test
sbb
or
push
cmp
mov
idiv
out
and
add
call
inc
sar
aad
cmp
fisub
adc
shl
jmp
ja
aam
push
and
add
ins
xchg
xchg
in
(bad)
xchg
dec
lods
por
movs
mov
imul
sub
cmp
push
fisttp
sub
(bad)
outs
push
push
dec
pop
sub
xor
outs
xchg
jmp
or
and
js
arpl
cmc
mov
outs
mov
sub
add
xor
call
bound
enter
inc
fmul
inc
sbb
addr16
std
jp
mov
ss
aas
pop
or
adc
movs
pop
pop
rol
adc
xchg
popf
xchg
mov
retf
idiv
xchg
and
xor
mov
xchg
retf
push
in
dec
sbb
and
repnz
xor
sub
shr
jg
and
aam
out
std
mov
sub
ret
or
fs
xor
or
sbb
or
scas
add
sbb
pop
mov
(bad)
(bad)
cwde
or
xlat
(bad)
push
add
adc
xor
test
ins
pusha
push
(bad)
and
aad
mov
pop
jge
loopne
in
push
cmp
cmps
rol
push
xor
fstp
(bad)
xor
mov
adc
xchg
ret
ds
popa
mov
mov
(bad)
sti
sbb
jp
fsubr
je
bound
rcl
mov
add
jb
adc
jbe
movs
xchg
push
jno
ret
jno
in
rol
(bad)
xlat
not
mov
mov
jle
push
or
leave
jnp
pop
pop
mov
arpl
fdivr
push
out
xor
fstp
sub
pop
test
or
clc
es
jg
inc
jge
pop
lock
(bad)
in
xor
int
into
mov
aad
or
test
cdq
xchg
jae
mov
inc
or
pop
jmp
pop
mov
add
popa
jo
hlt
mov
mov
push
jl
pop
mov
cmp
add
inc
pop
jo
shl
ss
xor
or
adc
sub
test
adc
pop
mov
xor
sub
pop
mov
push
inc
ror
add
mov
out
clc
sub
fisubr
or
hlt
sbb
mov
add
xchg
enter
or
add
cli
fild
fisub
fst
add
adc
mov
imul
pop
jns
sti
test
gs
dec
mov
mov
fisttp
aas
push
xchg
iret
pop
int3
leave
mov
aas
lds
(bad)
dec
jmp
aas
shl
jmp
mov
cmps
cmps
mov
clc
icebp
pop
shl
aam
jno
aad
xor
test
add
sbb
mov
aas
inc
sbb
test
pop
fs
or
in
adc
pop
lods
sbb
sbb
pop
rol
adc
popf
into
mov
mov
inc
scas
scas
push
imul
xchg
aad
add
test
mov
mov
dec
push
rcl
enter
data16
(bad)
test
js
jb
sbb
fdiv
div
popf
xor
cmp
xor
jno
pop
mov
clc
mov
fwait
out
ret
gs
je
cmp
pop
(bad)
pop
and
jo
test
test
inc
loope
jns
add
or
pop
cmp
loop
jne
pop
int
fwait
lods
(bad)
pop
xor
outs
jmp
cmp
cwde
jb
inc
loop
imul
imul
test
loop
movs
adc
sti
scas
push
fstp
pop
cdq
lock
addr16
adc
and
add
(bad)
add
add
sub
(bad)
xchg
cwde
fld
cmps
dec
pop
sbb
push
cmp
loop
mov
lahf
inc
imul
ror
and
push
es
push
cli
scas
dec
mov
imul
call
jmp
aad
inc
stos
mov
inc
and
mov
mov
mov
xchg
sub
cld
pop
outs
mul
or
push
iret
es
jns
into
mov
ret
cs
add
sub
test
push
imul
and
sbb
shl
inc
xchg
xchg
dec
xchg
or
push
push
cwde
add
cwde
mov
xor
cli
pop
neg
fsub
icebp
icebp
mov
push
adc
into
xchg
pop
add
jecxz
mov
iret
pop
jl
push
xchg
xchg
mov
or
inc
ror
gs
xor
hlt
xchg
repnz
add
lods
ror
mov
scas
cmpxchg
push
xchg
add
push
pop
lahf
mov
push
sub
jg
adc
dec
sub
xchg
cmove
in
fbstp
aaa
(bad)
push
in
sub
aam
int
or
pusha
pop
sbb
push
outs
pop
xlat
dec
sti
push
dec
ja
inc
push
cmp
ins
loope
adc
shl
pop
jne
mov
sti
sub
je
adc
jecxz
pmullw
inc
sbb
arpl
ret
test
shl
add
push
mov
call
mov
leave
ret
dec
rol
push
adc
fucomp
movs
mov
push
imul
lahf
test
pop
inc
lods
xor
cmps
stc
dec
fs
sub
jae
std
movs
jl
gs
call
cmps
xchg
jo
add
enter
pop
js
leave
mov
mov
das
sbb
test
inc
sbb
scas
or
popf
sub
mov
sti
push
es
(bad)
jl
ret
mov
sub
gs
scas
and
and
adc
jmp
push
lahf
movs
(bad)
adc
imul
pop
cli
stos
xchg
or
fwait
and
enter
shl
and
aas
jbe
cdq
imul
mov
push
popa
mov
add
sub
test
test
repnz
pop
mul
or
test
popa
inc
cs
and
fcom
enter
xlat
addr16
jnp
shufps
jmp
xchg
mov
push
and
call
les
out
scas
leave
fmul
stos
dec
ins
mov
hlt
loope
cmp
movs
push
adc
adc
mov
mov
call
js
imul
jb
mov
cmp
movs
and
xor
loopne
inc
xor
aad
dec
mov
mov
sbb
jo
dec
inc
xor
mov
ins
sbb
pop
fisttp
ret
and
pop
sbb
xor
push
adc
out
pop
icebp
stc
shl
xchg
into
in
neg
xlat
xor
pop
sub
dec
outs
xchg
sbb
inc
aad
push
jle
stc
push
movs
call
jg
retf
(bad)
sbb
jne
dec
and
lea
repz
push
mov
sbb
jae
setl
mov
jge
es
cld
div
sub
out
xor
mov
or
in
add
xchg
pop
or
sub
add
scas
aam
test
lea
out
data16
push
xchg
or
test
sbb
xchg
adc
sub
sahf
cmp
imul
adc
inc
clc
(bad)
fst
test
pop
pop
scas
add
hlt
bswap
mov
add
inc
je
call
scas
xchg
sbb
daa
xor
(bad)
pop
push
inc
popf
es
and
jno
cdq
and
sub
inc
mov
(bad)
xchg
aas
test
retf
std
pop
mov
or
pop
sahf
ins
(bad)
clc
xor
loop
xchg
add
(bad)
call
mov
xor
jg
gs
or
mov
sti
mov
pop
dec
lods
xchg
adc
test
ror
retf
popf
jecxz
test
mov
lods
jno
cmp
adc
sbb
fs
outs
fist
xlat
rcl
dec
pop
sahf
push
adc
cmp
data16
jbe
push
in
or
and
push
dec
lahf
add
inc
cwde
fwait
sub
popa
test
cmp
and
idiv
stos
mov
dec
mov
mov
call
shr
gs
jnp
rcr
daa
pushf
inc
pop
lea
mov
adc
inc
das
dec
(bad)
add
fmul
pop
dec
mov
cwde
inc
cmp
mov
addr16
and
sub
and
lds
mov
imul
je
enter
fild
(bad)
adc
xchg
pop
inc
or
arpl
popa
mov
loope
sbb
or
jecxz
arpl
aam
mov
push
scas
push
cwde
rcr
aaa
fimul
ins
into
test
mov
rcr
push
inc
jmp
and
mov
adc
das
cmp
in
mov
pop
lds
div
dec
call
div
movs
mov
ror
ss
mov
push
nop
add
in
jo
mov
or
mov
bound
pop
or
sbb
mov
out
outs
pop
rol
push
lods
int
inc
and
rol
pop
xchg
inc
add
cmp
call
cmp
dec
push
pop
popf
loopne
pushf
inc
int
xor
les
mov
(bad)
sbb
cmps
enter
in
movs
add
aad
je
leave
cli
stos
dec
ins
cmp
rol
dec
mov
mov
enter
and
inc
fidiv
mov
and
addr16
dec
jb
mov
das
call
ja
stos
inc
mov
sub
inc
mov
fs
push
pop
cdq
ins
pop
(bad)
fistp
adc
out
jmp
(bad)
fnstcw
ja
cmp
aad
push
inc
add
or
jbe
xcrypt-ofb
cmps
ins
adc
sbb
cmp
movs
jae
jge
xor
inc
enter
adc
xchg
xchg
mov
dec
dec
dec
addr16
add
ja
test
fwait
push
aam
mov
scas
outs
rcl
push
sbb
imul
xor
out
js
sub
jne
(bad)
je
mov
pop
sub
in
xor
push
or
mov
add
loope
and
xchg
pop
int3
dec
mov
xchg
popf
dec
(bad)
pusha
std
adc
popa
or
add
addr16
mov
sbb
gs
or
popa
je
cmp
push
mov
dec
jle
retf
call
mov
jae
push
mov
in
pop
popa
cmp
pop
mov
pop
push
fnsave
mov
xchg
cmp
or
out
mov
mov
xor
or
popf
cld
dec
sti
dec
test
mov
pop
push
or
fdiv
in
xor
in
jnp
push
sub
sub
cli
jb
outs
mov
(bad)
ror
iret
dec
in
nop
das
cmp
mov
cli
pop
jnp
mov
or
xlat
test
out
push
stc
jne
daa
loop
adc
jae
jecxz
and
lods
jge
repnz
stc
mov
dec
mov
cwde
mov
imul
test
std
pop
into
movs
(bad)
jmp
rcl
lods
and
mov
lods
shr
or
xchg
mov
xchg
outs
jo
sub
dec
push
pop
pop
cmp
mov
mov
jmp
pop
cmp
or
mov
pusha
xchg
lods
lea
ja
mov
aaa
jb
xor
cmp
pop
adc
ins
pushf
mov
loop
push
or
xchg
push
fst
rcl
xchg
sahf
mov
nop
js
push
test
fadd
jno
test
push
and
inc
adc
ret
lods
jmp
fdivrp
and
fwait
movs
cs
in
mov
xchg
add
inc
addr16
fsubr
sub
int3
stc
push
and
ins
(bad)
mov
lea
cmps
mov
mov
pop
int3
xchg
call
lock
test
or
lds
lahf
mov
mov
xchg
sub
sub
cmps
sbb
push
cmp
xchg
jnp
push
or
fmul
arpl
test
sbb
lods
pop
movs
pop
and
sti
xchg
and
inc
fcomp
mov
in
jo
nop
push
retf
xchg
jo
mov
or
mov
or
out
sbb
ds
dec
cmp
mov
inc
clc
sahf
addr16
repz
(bad)
fld
outs
sub
ins
ret
sar
ficomp
and
call
push
jo
sbb
sbb
aas
push
sbb
mov
movs
jle
in
popf
push
ret
out
(bad)
(bad)
in
sub
neg
inc
adc
xlat
jb
xor
jnp
cmp
pop
lds
jb
shl
pop
push
xor
mov
xor
cmp
cwde
stc
dec
nop
rcr
xchg
cmps
imul
icebp
add
mov
pop
es
mov
dec
mov
mov
lock
xor
ror
ds
mov
inc
xchg
xor
mov
mov
mov
dec
sub
jne
push
sub
outs
pushf
pop
mov
stos
mov
sbb
shr
sbb
xor
mov
cdq
xchg
ret
cmp
aad
inc
or
in
jg
mov
outs
(bad)
add
jnp
inc
loope
xchg
inc
lods
js
sbb
dec
cwde
inc
push
icebp
mov
sbb
stos
aam
and
dec
clc
adc
les
adc
xor
lea
rcr
and
add
sbb
sbb
jne
sub
stos
cmp
cmp
and
std
sbb
out
or
fiadd
ffreep
push
(bad)
(bad)
sbb
or
cmp
call
int
sub
xor
int3
xchg
cmps
cmp
ins
push
pushf
fstp
sbb
das
lds
xor
sbb
xchg
mov
add
ficomp
aaa
jmp
leave
push
xor
push
jg
mov
fstp
jnp
sahf
rol
and
jg
dec
loopne
es
pop
jns
pop
retf
loopne
pop
out
xchg
mov
das
test
inc
retf
inc
(bad)
pop
loope
push
mov
shr
jg
jo
out
ret
mov
and
cdq
into
das
arpl
jg
pop
jbe
std
sub
mov
fiadd
mov
jne
stc
ss
fimul
mov
mov
cmp
imul
dec
fst
mov
mov
push
stos
call
scas
int
sbb
xor
hlt
mov
ds
inc
in
and
pop
aaa
mov
imul
sub
ds
xor
sbb
push
psraw
aam
push
cmps
cmp
cli
inc
mov
popf
mov
cmp
inc
clc
and
mov
out
push
push
mov
(bad)
aaa
push
and
pop
ret
push
cmp
data16
loope
pushf
fwait
push
xchg
inc
mov
cmp
fwait
js
and
jb
cs
aam
pop
dec
arpl
retf
adc
cmp
cmp
int
sbb
xchg
and
pop
stos
lods
sub
fistp
jmp
movs
push
mov
mov
scas
pop
sbb
les
sub
xchg
xor
in
sti
sbb
ret
jmp
sbb
push
jl
pop
mov
jp
test
xchg
cld
and
push
jge
std
mov
mov
or
ret
push
mov
fisubr
outs
shl
xor
iret
ret
mov
pop
icebp
mov
mov
mov
lds
lods
mov
jg
sbb
inc
pop
movs
sbb
out
xor
popa
xor
scas
mov
cmp
stc
mov
in
sbb
dec
icebp
dec
sbb
ja
pop
jmp
clc
fwait
sub
jo
and
inc
das
cmp
mov
stos
mov
adc
bound
inc
ins
xchg
inc
test
lahf
sbb
or
or
push
jl
dec
ret
inc
cmps
popa
pop
test
shr
sahf
fnsetpm(287
cmc
sbb
daa
inc
inc
sbb
push
iret
xchg
xchg
xor
cli
mov
and
mov
enter
arpl
test
xchg
pop
div
and
xor
shl
inc
push
push
mov
js
sub
push
sub
jg
add
gs
imul
arpl
(bad)
ret
fld
mov
fs
test
stos
push
push
inc
lea
ds
xor
hlt
iret
rcl
neg
push
mov
lds
hlt
es
sub
aad
sbb
xchg
and
ror
adc
cmp
xchg
push
pop
xchg
loop
jp
jno
and
adc
repz
loopne
mov
push
in
out
mov
es
hlt
loopne
xchg
popa
movs
pop
xchg
jp
pop
jecxz
das
sbb
ror
adc
and
fldcw
push
xchg
int3
out
xlat
mov
xlat
xchg
or
and
popa
ins
add
repz
mov
into
pop
int
push
stos
jne
xchg
test
cmp
or
ss
mov
adc
in
push
cdq
test
(bad)
push
or
(bad)
push
jmp
adc
js
add
and
dec
into
fsub
shr
int
in
mov
or
jecxz
sbb
xchg
mov
scas
lahf
nop
scas
popf
scas
mov
dec
fisub
mov
dec
jb
shl
je
mov
add
pop
push
stos
mov
mov
or
jp
fnstcw
(bad)
cmc
and
add
xor
mov
out
jp
clc
or
lods
add
push
xchg
add
mov
ret
dec
xchg
fdivr
cdq
ret
jl
cld
(bad)
or
jnp
ss
pop
bound
adc
outs
mov
add
retf
dec
hlt
fstp
scas
jnp
xor
sti
dec
xchg
ret
add
mov
and
mov
jo
lods
(bad)
inc
pop
lea
nop
inc
sti
inc
dec
or
inc
inc
pusha
mov
ret
mov
pop
test
daa
cmp
mov
bound
fidiv
mov
(bad)
mov
test
pop
nop
adc
jp
adc
hlt
stc
push
clc
arpl
pop
pop
inc
cmp
sub
sub
iret
and
inc
je
fimul
mov
popa
sbb
cmp
in
mov
dec
test
out
not
scas
stos
in
fdiv
jmp
repnz
sbb
jge
jno
cwde
sti
enter
jge
cdq
repnz
mov
imul
stc
push
rcr
pop
addr16
arpl
inc
and
out
std
pushf
dec
dec
mov
test
ss
pop
push
test
repnz
dec
rcl
xlat
sub
adc
sbb
push
add
daa
xor
jne
xor
daa
xor
push
inc
scas
arpl
lds
bound
mov
arpl
aad
ja
test
sti
mov
call
cmp
aas
xchg
add
jmp
sar
mov
imul
xchg
xlat
xchg
xor
push
dec
inc
movs
sbb
cmp
stos
cmc
ret
add
mov
xor
(bad)
jp
daa
cmp
ror
mov
pmullw
xchg
xchg
fs
sub
add
sub
in
dec
pop
mov
pop
mov
adc
add
xchg
push
adc
adc
mov
pop
movs
stos
xchg
xor
xor
adc
test
les
mov
pop
out
iret
mov
xor
xor
pop
ins
adc
rcr
jl
(bad)
(bad)
iret
mov
hlt
lahf
(bad)
fistp
xchg
into
(bad)
cli
stc
(bad)
cmp
int3
sbb
repz
fdiv
or
aad
daa
jle
or
push
add
lock
bound
clc
cmp
enter
int3
adc
inc
pop
sbb
mov
aam
and
andnps
and
sub
cmp
mov
repz
add
arpl
bound
stos
cmps
add
leave
cdq
loop
clc
int3
scas
add
cmp
mov
add
fs
call
shl
int3
(bad)
mov
adc
cli
test
out
push
xchg
test
add
add
inc
push
call
out
cmc
icebp
add
shl
ret
sub
xor
sbb
inc
mov
inc
int3
fcom
ss
rcr
addr16
scas
test
sub
cmc
pop
lods
(bad)
sahf
fld
popf
mov
out
rcl
add
ror
in
rol
aam
out
cmc
mov
sub
push
mov
mov
in
mov
mov
add
jae
(bad)
xchg
(bad)
test
jne
sahf
add
inc
xor
ret
sbb
mov
fdiv
fbld
lock
test
pushf
data16
in
and
ds
(bad)
jmp
push
mov
inc
dec
xchg
bound
ja
add
cmp
sbb
cmp
sbb
inc
scas
sbb
sar
dec
pusha
fld
mov
and
mov
movs
sbb
(bad)
es
(bad)
fadd
xor
pop
sbb
pushf
dec
inc
fistp
and
sub
jmp
or
dec
mov
cdq
or
(bad)
jle
mov
test
adc
lahf
cmp
mov
sbb
cmps
lods
out
(bad)
lods
movs
xor
fmul
int
and
aas
and
xchg
mov
fs
fwait
jmp
add
jmp
retf
jmp
std
inc
xchg
fistp
repz
je
pop
pop
jmp
cli
lock
cmps
shr
sbb
adc
arpl
mov
push
or
dec
dec
xchg
push
bound
push
test
cmp
ins
xchg
mov
nop
mov
dec
ret
aam
mov
retf
cli
jnp
retf
call
nop
mov
xchg
jecxz
adc
and
jne
std
pusha
cmp
mov
ins
jge
pushf
lea
popa
mov
mov
loopne
jge
dec
aaa
inc
dec
in
push
in
imul
aaa
inc
cmp
lock
hlt
mov
xor
pop
(bad)
and
and
loop
sbb
ret
stos
retf
add
pop
pop
outs
arpl
in
adc
(bad)
repnz
push
fisttp
repz
dec
jmp
out
xor
inc
dec
test
dec
stos
cld
mov
ror
cmp
pusha
push
fstp
or
or
sub
shl
int
and
sub
jo
into
and
sbb
cwde
pop
scas
int3
push
mov
and
add
jmp
je
cmp
push
sbb
cmp
or
and
mov
xlat
xchg
movs
push
adc
jnp
sub
jnp
cmps
inc
data16
lock
inc
fld
pop
call
push
retf
sub
inc
lock
lock
jge
xor
(bad)
into
out
inc
adc
mov
push
mov
push
sub
ss
jl
aad
test
xchg
outs
cmp
mov
push
(bad)
aas
xchg
xor
or
rcr
mov
sbb
xor
inc
or
pop
std
aas
add
cdq
in
sub
or
leave
ins
leave
or
into
ins
aas
aaa
push
sbb
mov
movs
mov
mov
(bad)
jb
mov
cmp
and
sbb
jle
pop
daa
dec
mov
inc
push
outs
mov
rcr
mov
cmps
sahf
ror
push
lahf
test
repnz
xchg
cmp
cwde
ss
push
dec
es
pop
std
repnz
xchg
shr
push
jle
inc
ror
std
mov
scas
or
shl
sbb
cli
mov
xchg
cmp
push
(bad)
scas
popf
dec
adc
scas
and
or
imul
inc
and
xor
(bad)
cdq
xchg
aaa
and
or
add
xor
test
test
inc
aad
rcl
mov
dec
stc
mov
add
loop
test
daa
xor
sbb
scas
dec
mov
push
into
popf
mov
js
(bad)
fisubr
mov
mov
inc
icebp
push
or
sahf
lods
in
les
call
xchg
and
inc
out
mov
cmp
cmp
iret
xchg
mov
sbb
cmp
dec
inc
clc
mov
gs
pop
mov
enter
aas
mov
cmovbe
inc
xchg
adc
mov
int3
lds
fs
inc
adc
pop
test
lea
mov
add
push
pop
scas
test
loop
pop
sar
xchg
stc
mov
pop
retf
das
sar
inc
mov
cmp
mov
or
(bad)
fldenv
or
nop
inc
ins
dec
adc
(bad)
mov
aam
rcr
pop
lahf
xchg
dec
jg
sbb
fiadd
arpl
jl
test
in
inc
mov
clc
and
or
jns
dec
out
(bad)
test
and
push
clc
pop
rol
jp
cdq
lods
(bad)
pop
jno
jae
push
pop
pop
push
xchg
sti
inc
mov
xchg
add
ds
jno
sub
repz
mov
mov
add
gs
scas
daa
cmps
dec
fwait
(bad)
into
cmps
rcpps
loop
inc
pop
cmp
arpl
add
jo
out
mov
inc
sub
sub
sub
push
mov
adc
xchg
dec
mov
push
and
push
add
arpl
cmp
pop
scas
movs
push
cmps
mov
fwait
sbb
jb
(bad)
push
push
push
fs
adc
jg
movaps
(bad)
jnp
jo
inc
jb
mov
dec
daa
test
or
ds
inc
idiv
std
jns
cmp
adc
mov
mov
cld
push
jnp
call
or
jbe
sbb
sub
and
in
or
(bad)
fwait
sub
pop
retf
and
push
ds
dec
jbe
or
imul
in
cmp
mov
sub
int3
push
xor
scas
ret
dec
fs
pop
or
cmp
shl
mov
xchg
jbe
jnp
leave
mov
mov
das
xchg
push
push
xchg
cmps
(bad)
scas
popf
inc
sub
mov
stc
cmps
retf
inc
cli
and
jge
fwait
xchg
in
fsubp
jle
mov
loopne
xchg
ret
shl
rcl
jmp
jmp
jmp
sub
out
adc
ror
mov
xchg
sbb
popf
mov
leave
xor
add
lods
mov
sahf
sub
out
fld
inc
mov
out
arpl
lea
aad
ror
push
push
dec
dec
add
loope
imul
inc
fild
out
mov
pop
ret
jb
pop
fiadd
inc
call
aad
jnp
xchg
pop
jbe
(bad)
stos
inc
mov
xor
jb
push
mov
es
push
(bad)
ds
shl
enter
and
mov
loopne
stc
or
clc
retf
dec
jg
cs
ficom
add
adc
std
mov
fsubr
xchg
(bad)
xor
xchg
cmp
loop
mov
daa
xchg
xor
call
aas
mov
and
paddsb
lds
movs
sahf
push
or
mov
enter
fwait
add
push
neg
stos
xchg
push
fcomip
fiadd
and
dec
cmps
xchg
adc
inc
das
jb
pop
add
jmp
mov
mov
pop
retf
push
arpl
shr
sahf
cli
imul
or
inc
push
ret
sub
(bad)
or
add
mov
test
xor
adc
les
inc
inc
addr16
sub
dec
shl
xor
cmp
cmps
sub
sbb
mov
dec
ds
add
dec
push
cli
or
(bad)
call
aaa
fiadd
jns
and
lods
mov
(bad)
push
test
aaa
popf
movs
shl
mov
out
pop
adc
pop
clc
add
cs
jb
push
push
mov
in
add
mov
ret
std
inc
lea
adc
mov
popf
(bad)
and
inc
call
inc
add
pop
imul
jge
retf
cmps
loopne
mov
cmp
pop
fucom
or
adc
std
sbb
imul
dec
mov
jns
lea
iret
push
(bad)
or
test
sbb
pop
add
cmp
popf
adc
dec
lods
fwait
out
(bad)
jns
adc
add
adc
xor
pop
ja
xor
adc
add
(bad)
(bad)
push
fdivr
mov
push
rcl
icebp
lahf
and
dec
jecxz
in
jge
xchg
cmp
stos
inc
xor
lods
mov
pop
pop
les
inc
cmps
fst
cmp
pop
xor
imul
jmp
xor
mov
mov
cdq
test
movs
pop
out
hlt
and
mov
lds
pop
shr
and
jp
jns
pop
mov
mov
data16
and
add
xchg
xchg
fidiv
inc
xor
inc
push
cmp
push
test
and
and
mov
scas
and
inc
adc
sar
and
or
bound
mov
arpl
sahf
aad
into
out
test
add
aam
jbe
stos
jmp
arpl
ret
mov
mov
addr16
dec
rol
pop
cli
cmp
sbb
or
mov
ja
out
lods
inc
and
xor
xchg
iret
add
in
(bad)
std
rcr
add
ins
enter
jb
adc
mov
aas
push
leave
dec
cld
push
int
pop
mov
jmp
arpl
iret
adc
pop
cmp
xchg
xchg
idiv
xor
pop
cld
mov
aas
ds
xchg
mov
push
jge
lds
cli
out
mov
daa
mov
shr
jnp
mov
push
fiadd
fldcw
sbb
int
out
jecxz
or
cmp
xchg
xor
push
ins
xor
(bad)
aaa
push
jecxz
lds
setg
xchg
daa
pop
mov
sar
xor
push
jns
in
hlt
fisubr
lock
dec
sbb
rcr
out
jns
ins
add
push
push
xor
mov
push
movs
fisubr
or
movlhps
fidiv
mov
and
out
inc
xor
or
pop
inc
in
adc
sbb
or
fsub
pop
fs
mov
sbb
pop
push
popa
push
mov
repz
push
mov
fidivr
xchg
add
sbb
(bad)
rcr
add
mov
mov
ficom
daa
lods
push
stos
and
scas
in
imul
(bad)
stos
(bad)
hlt
mov
test
push
cli
cmc
call
loopne
sti
je
mov
(bad)
div
adc
add
das
rcl
xchg
fs
xchg
rcr
xchg
test
add
aam
or
nop
and
mov
in
cli
adc
add
mov
sub
daa
push
sbb
mov
dec
lahf
out
fcomp
mov
lds
mov
std
jae
dec
scas
jg
mov
ins
in
test
(bad)
fldln2
adc
nop
fsubr
enter
push
push
mov
sbb
cdq
inc
(bad)
movs
or
dec
sub
or
addr16
popf
jge
xchg
dec
shl
pusha
pop
add
mov
das
ds
and
mov
jne
ss
add
jnp
aam
pop
inc
push
lahf
mov
out
push
or
adc
xchg
inc
je
push
and
leave
jmp
inc
and
lods
fiadd
mov
mov
mov
cmps
cmp
cmp
xchg
xchg
push
mov
daa
add
repz
adc
pop
mov
xchg
pop
sub
adc
xchg
in
add
inc
jg
xor
mov
(bad)
jmp
inc
adc
lds
pop
cmps
mov
mov
out
xchg
jle
push
sbb
ret
repnz
aaa
gs
stc
arpl
cmp
cmp
nop
fiadd
aas
div
jae
adc
ret
bound
fbstp
add
sti
or
cmps
stc
sbb
loope
rol
pop
mov
adc
imul
adc
cli
xchg
jg
add
mov
push
mov
clc
pop
ret
pop
lock
arpl
xchg
and
pop
fldcw
out
rcl
fidivr
movs
inc
adc
(bad)
fcom
sub
ficom
cmps
(bad)
fiadd
into
mov
jp
mov
pop
in
retf
mov
stos
pushf
in
pop
xchg
jle
lahf
sti
inc
push
and
xor
mov
(bad)
mov
sbb
mov
xchg
push
(bad)
jg
cmp
xchg
sub
push
sbb
loop
dec
inc
pop
ret
cmp
xchg
inc
cli
shl
aaa
ror
dec
jecxz
loopne
pop
push
fcos
adc
jno
repz
inc
lea
fidivr
pushf
or
ins
push
add
and
fist
sbb
add
out
enter
popa
jnp
mov
jge
and
pop
or
mov
out
imul
mov
cmp
js
dec
fwait
sub
sub
mov
xor
or
dec
mov
icebp
add
fistp
test
cmps
out
xor
in
cmp
push
scas
add
push
adc
mov
jno
xchg
dec
(bad)
arpl
iret
sub
fist
lods
ret
loopne
pusha
cmp
cdq
and
hlt
sahf
enter
push
sahf
and
pop
adc
sbb
aam
sub
dec
dec
sbb
dec
call
not
jb
dec
imul
fiadd
mov
fdiv
xor
pop
scas
adc
mov
not
das
mov
mov
jbe
test
and
aaa
pop
mov
inc
sbb
mov
lea
mov
div
xor
lahf
iret
push
aas
aam
cli
sahf
test
push
pop
dec
jg
jno
xlat
into
dec
push
pop
and
dec
add
sbb
adc
retf
call
and
inc
mov
add
and
or
ss
inc
dec
iret
ss
add
cmp
enter
rcr
ja
sti
push
jmp
out
push
enter
dec
cmp
or
ja
lods
push
pop
scas
icebp
cmp
lods
out
xor
imul
cmp
sbb
jmp
inc
and
lds
retf
aad
test
xchg
ss
dec
add
mov
jl
inc
loope
adc
sahf
and
add
das
retf
cmp
sbb
mov
popf
inc
(bad)
or
inc
cld
and
mov
pusha
dec
dec
popf
rol
inc
test
xchg
test
repnz
jge
or
loope
sbb
adc
jmp
dec
xchg
cmp
jge
xchg
out
xor
sub
sub
inc
hlt
stos
mov
push
fidiv
test
push
jmp
pop
and
pop
test
je
call
push
jno
cmc
dec
and
aad
push
dec
mov
cwde
movs
cld
push
ins
js
ror
je
cmp
pop
jp
and
test
jnp
scas
in
je
and
or
test
mov
popa
push
imul
stc
and
cmp
stc
pop
rcr
test
mov
retf
and
fisub
stos
jl
jnp
xchg
loopne
xchg
dec
das
(bad)
push
sub
in
xor
and
cmp
fwait
dec
dec
out
xchg
push
rcr
add
cs
pop
(bad)
in
clc
push
test
imul
xchg
loop
bound
xor
mov
xor
xor
ret
pop
jns
and
mov
retf
xor
push
mov
sbb
js
popa
std
dec
jge
pop
cmps
add
xor
jecxz
pop
mov
in
mov
jmp
jae
dec
out
cmp
lods
sbb
mov
push
in
scas
jne
retf
in
out
int3
or
add
popa
mov
data16
add
inc
add
pop
sbb
add
pop
inc
or
push
jo
sbb
and
jmp
icebp
push
cs
push
push
shl
shr
out
mov
dec
shl
(bad)
adc
xchg
repz
push
sbb
sbb
inc
retf
xchg
jge
jmp
mov
icebp
inc
cmps
mov
aaa
das
nop
pushf
mov
pusha
(bad)
add
dec
aam
or
dec
mov
push
sbb
jge
xor
rol
ja
xchg
add
cmp
mov
dec
mov
push
test
ret
push
or
neg
scas
test
mov
adc
xchg
sub
and
sbb
and
std
or
mov
pop
imul
(bad)
xor
cmp
ds
and
sub
mov
inc
out
jecxz
nop
aas
jbe
cmp
adc
xchg
jmp
mov
adc
dec
fiadd
jecxz
fisttp
repnz
push
ret
cs
mov
outs
inc
fsub
mov
fisub
ret
push
pop
or
mov
dec
pop
push
rcr
cmps
leave
add
inc
addr16
xchg
or
rcr
push
repz
(bad)
cmc
movs
jmp
xor
cmp
xor
fs
jp
mov
jno
and
mov
in
xchg
out
in
mov
sbb
std
es
sub
dec
test
add
inc
or
movs
es
fs
repz
loop
dec
rcr
push
or
test
dec
sub
cmc
div
mov
(bad)
out
mov
pop
xor
out
and
fs
jo
out
jle
inc
call
jne
pop
in
clc
sar
not
cmp
cmp
jmp
out
inc
popf
(bad)
in
popa
aas
enter
xchg
ds
or
sub
into
lahf
fwait
inc
pop
jl
push
stos
push
mov
xchg
jecxz
inc
xor
push
push
xor
lock
js
add
xchg
movs
ss
inc
pop
mov
add
push
adc
outs
mov
ror
mov
aaa
xchg
je
pop
push
or
std
dec
rcr
(bad)
mov
xchg
dec
inc
push
loop
dec
add
sub
sub
dec
cmc
ret
aam
and
cli
stos
xchg
imul
es
(bad)
inc
gs
and
fwait
int
sub
aaa
mov
fist
not
inc
push
push
retf
sub
dec
mov
cmps
lock
mov
popf
dec
xor
push
das
fnstsw
pop
or
sahf
adc
jnp
pusha
es
mov
mov
mov
rcl
scas
lahf
sbb
sbb
lods
imul
xor
fwait
or
add
ds
jo
cmps
mov
mov
sti
or
outs
addr16
fcmovnb
push
and
sub
pop
mov
push
into
cmps
sbb
out
test
push
mov
(bad)
mov
fdiv
js
push
test
or
pop
jb
ficomp
mov
and
test
adc
iret
out
xor
int3
lods
jne
or
add
push
lock
loope
unpcklps
bound
je
fwait
or
sub
out
cli
pop
test
scas
pop
imul
fistp
gs
xchg
jne
push
jae
cmps
(bad)
pop
hlt
clc
inc
ret
mov
out
push
call
xor
inc
lea
sahf
push
dec
in
sub
movs
je
in
inc
mov
push
stc
data16
or
call
xchg
xlat
mov
imul
mov
inc
inc
mov
inc
jo
mov
sbb
cdq
xchg
mov
aad
inc
int
jmp
aas
jmp
pusha
sub
and
stos
or
test
push
fwait
shr
and
sbb
dec
loop
movs
inc
xchg
shl
inc
adc
inc
add
xchg
lahf
(bad)
xor
and
(bad)
ret
xor
add
mov
xchg
repz
dec
int
in
jns
sahf
int
inc
test
dec
cmp
popa
push
jns
fisttp
adc
es
lea
clc
xchg
in
or
fdivr
xor
or
popa
iret
dec
daa
aad
jae
pop
cld
sar
push
gs
xchg
jmp
mov
int3
loope
(bad)
add
cld
inc
mov
stc
adc
gs
sahf
ss
xchg
mov
mov
mov
xchg
mov
in
iret
inc
dec
std
adc
loopne
xchg
sub
das
mov
cmp
adc
jge
xchg
iret
dec
sahf
imul
test
jne
sahf
jne
xchg
call
jnp
outs
pop
xchg
loope
in
sub
and
inc
imul
jmp
(bad)
sub
add
retf
mov
inc
ins
jo
and
push
and
cmp
iret
mov
xchg
pop
in
sbb
mov
push
jne
xlat
fld
fisubr
jl
popf
test
ja
(bad)
lahf
dec
sub
xor
jbe
inc
inc
shl
push
jnp
cmp
shr
cmps
push
mov
mov
pop
sub
xchg
sub
push
jge
cdq
fadd
stos
outs
or
dec
mov
jo
push
mov
mov
ret
faddp
shl
xchg
imul
xor
ins
imul
sbb
add
cwde
jae
sub
dec
xor
int3
xchg
mov
adc
dec
aad
ficomp
cmp
movs
cmp
inc
mov
test
sbb
mov
jo
scas
repnz
adc
inc
cmps
sub
dec
movs
sar
adc
jns
loop
test
sub
jecxz
mov
(bad)
test
jbe
mov
pop
jge
push
mov
xlat
paddb
add
dec
(bad)
push
repz
or
push
aas
inc
and
mov
cmps
ins
and
jle
pop
fwait
pop
pop
xchg
fwait
push
sahf
inc
mov
and
sar
jae
(bad)
pop
lock
test
sbb
lods
mov
cld
ret
xlat
(bad)
stos
jge
xor
ja
ss
aam
jb
cmps
push
aad
adc
inc
inc
jae
mov
cmp
add
mov
ins
cli
sti
pop
inc
les
adc
sub
cmp
cmps
push
xchg
xchg
inc
test
pop
dec
dec
xor
push
push
add
(bad)
or
inc
jle
xor
cs
push
mov
push
xor
scas
sbb
cmps
(bad)
fiadd
and
std
icebp
test
fnsave
xchg
cmp
jae
or
(bad)
add
adc
dec
inc
lds
push
mov
xor
bswap
cmps
sar
jmp
or
in
inc
xchg
rcr
mov
jns
mov
dec
cmp
jnp
jg
mov
or
leave
push
ins
out
scas
sub
int3
cli
fmulp
mov
add
out
movs
loop
sahf
adc
pop
cmp
mov
into
xchg
mov
sti
jle
and
nop
xchg
and
lods
mov
adc
ret
fistp
stc
pop
adc
fstp
rcl
and
sbb
in
push
idiv
mov
std
mov
fsub
out
mov
imul
pop
fadd
xor
push
mov
rcl
jns
xchg
cwde
xchg
call
inc
loope
fnsave
or
sub
push
(bad)
fsubr
enter
mov
jle
pop
fwait
mov
shl
fwait
mov
in
outs
sbb
aam
add
stos
push
xor
(bad)
jge
adc
dec
dec
das
test
out
mov
sbb
push
pop
fisubr
sbb
sub
dec
es
cs
adc
cmps
out
daa
mov
xchg
mov
dec
or
pop
hlt
lods
mov
(bad)
or
adc
ret
push
hlt
jae
mov
mov
rcl
add
and
and
sub
loope
mov
jmp
mov
test
push
or
sbb
sbb
jle
cld
ins
outs
xor
sub
sar
sahf
sbb
pop
and
int
daa
hlt
lds
loope
push
xor
addr16
adc
das
lods
sub
and
stos
lods
es
sti
or
movs
clc
adc
push
scas
imul
xor
sbb
inc
inc
lahf
sbb
sbb
icebp
dec
xor
xor
cmp
paddb
jne
retf
pop
scas
dec
and
push
xlat
sub
dec
(bad)
lea
sub
(bad)
test
and
push
fsubr
test
int3
inc
popa
(bad)
hlt
sbb
xchg
xchg
jne
fstp
lahf
jno
stos
and
xor
into
adc
lods
fmul
cs
in
and
push
shl
in
ret
adc
push
fwait
dec
jnp
jae
sbb
push
xchg
jg
jp
xchg
pop
ins
scas
daa
pop
pop
fbstp
daa
cli
in
loope
mov
jl
dec
pop
and
jl
repz
xor
sbb
std
stos
sar
(bad)
jle
mov
mov
pusha
sbb
and
dec
xor
jb
fdivrp
stc
push
dec
and
jmp
mov
aas
fdivp
dec
cmps
mov
xchg
dec
aad
clc
mov
cld
fsub
jne
nop
fisttp
cmps
lea
stc
es
aad
jae
iret
fdiv
jb
jno
push
inc
pop
push
sub
or
sub
test
mov
in
bound
dec
(bad)
jp
jmp
cmp
xchg
sbb
lock
iret
dec
adc
push
arpl
mov
mov
sub
inc
xchg
mov
outs
test
mov
jle
lahf
adc
shr
push
xchg
std
sti
pop
or
dec
shl
xor
jo
adc
sbb
dec
shl
cmp
cmc
mov
pop
cmps
inc
daa
and
mov
pop
or
mov
pop
(bad)
push
dec
cmps
popf
mov
fst
and
int3
jae
ret
and
jmp
bswap
xchg
ss
clc
mov
out
popa
xor
mov
div
clc
test
popa
js
neg
add
cmp
(bad)
jbe
imul
nop
loopne
mov
or
mov
jne
xchg
jmp
xor
inc
xor
sub
adc
and
cmp
test
mov
cmc
dec
fsub
jle
scas
and
fcmovnb
jae
mov
hlt
jb
ret
in
shl
outs
adc
fstp
test
xchg
iret
jl
sbb
push
into
mov
jae
mov
xor
mov
push
(bad)
fcomp
test
(bad)
lods
mov
in
push
cmp
cli
mov
fwait
(bad)
aas
sub
inc
icebp
and
es
cmp
pop
ja
or
and
movs
jg
xchg
cdq
jbe
mov
push
and
cli
int3
ss
jle
adc
mov
cli
inc
pop
add
rcr
std
pop
jge
lea
outs
jp
xchg
nop
sbb
xchg
pop
jnp
sahf
push
retf
inc
sub
ins
xchg
pop
outs
xchg
jl
cmp
stos
das
inc
cmps
sbb
psubb
jb
and
lahf
in
je
setb
adc
mov
sti
mov
xchg
aam
test
hlt
or
sub
aaa
mov
xor
add
pop
scas
and
aam
lock
add
outs
outs
popa
push
movs
je
sbb
ja
popf
ret
sub
inc
leave
add
sub
test
add
test
sub
hlt
ins
adc
add
adc
aas
hlt
cmp
or
xchg
adc
add
lods
xlat
or
int
mov
and
movs
inc
xchg
inc
adc
dec
fs
cmp
mov
xchg
nop
rol
inc
sub
out
adc
add
cmp
push
out
cmp
lahf
adc
jp
popf
cmp
sahf
repnz
xor
jmp
adc
je
lods
push
jns
(bad)
xor
xchg
or
imul
out
(bad)
mov
sub
les
out
cmp
cwde
stos
mov
sbb
inc
inc
xor
dec
addr16
adc
repz
out
lahf
add
popa
adc
imul
rol
ins
imul
je
push
jne
ror
jecxz
retf
fidiv
and
into
mov
mov
mov
mov
mov
inc
in
xor
xchg
push
xchg
xchg
call
xchg
and
push
dec
stos
push
jge
and
mov
call
xor
dec
jge
cmp
test
mov
mov
shr
clc
stc
mov
add
sub
jno
mov
mov
push
jle
inc
or
push
retf
cmps
aaa
jg
and
lahf
push
fs
lds
lods
pop
movs
mov
popf
jmp
rcl
rol
shl
push
sub
rol
push
jo
adc
mov
push
dec
jmp
je
out
mov
or
mov
daa
mov
call
ja
sar
xor
jmp
loope
imul
nop
cmc
inc
outs
cmp
pusha
dec
push
xchg
dec
mov
adc
cmp
and
sbb
push
push
int3
mov
ins
push
int3
cld
icebp
test
(bad)
lods
add
aas
pop
push
out
jne
jb
add
fbstp
or
rcl
xchg
xor
and
les
sub
sub
inc
xor
sbb
sub
mov
mov
aam
(bad)
or
retf
xchg
xor
mov
sti
jp
pop
mov
jp
mul
ins
pop
loopne
xor
(bad)
ins
test
out
xchg
jbe
aaa
(bad)
pop
xor
outs
add
inc
inc
outs
fadd
dec
mov
inc
mov
cwde
pushf
and
cmp
inc
push
pop
xchg
stc
jp
pop
or
loope
dec
scas
dec
inc
push
jecxz
imul
pop
call
or
adc
mov
xchg
mov
and
jo
ret
inc
pusha
push
jecxz
(bad)
repz
mov
repz
cmp
aas
cmps
scas
outs
cli
icebp
sbb
adc
js
jo
retf
cmc
sbb
and
dec
mov
pop
mov
dec
int
movs
sbb
mov
arpl
push
or
inc
pushf
ds
adc
sub
scas
aas
cmc
xchg
xchg
ret
(bad)
sbb
push
repnz
test
ins
sbb
dec
lods
pop
loopne
xchg
movs
scas
iret
call
leave
dec
push
into
mov
cmp
push
and
lods
arpl
ret
shl
sbb
in
xchg
test
xchg
out
mov
mov
cmps
(bad)
push
in
mov
call
movs
pop
jmp
sub
cli
mov
xchg
sbb
mov
or
mov
out
jmp
sbb
add
faddp
in
into
int3
shl
dec
dec
fdivr
add
sub
or
sbb
pop
mov
jge
cwde
mov
xchg
jnp
jg
cmps
mov
in
(bad)
cmp
gs
sub
enter
nop
fadd
mov
loope
jecxz
lods
imul
xchg
jnp
js
jmp
adc
ror
dec
sbb
mov
jecxz
int
mov
xchg
mov
pop
test
add
mov
xor
arpl
or
jne
jge
xchg
adc
pop
inc
sub
(bad)
out
call
push
or
pushf
pop
dec
cmp
jle
nop
(bad)
rcr
xchg
out
ret
dec
dec
(bad)
into
jbe
mov
call
lods
call
push
ins
leave
(bad)
mov
mov
xchg
push
pop
adc
or
cmp
sub
int
pop
pop
push
rcl
in
adc
neg
sub
mov
xchg
es
sub
div
mov
out
fs
repnz
sbb
(bad)
bnd
lahf
xchg
inc
pop
pop
test
int
(bad)
in
mov
inc
cmp
lock
inc
js
outs
stos
add
mov
xchg
gs
or
dec
sub
pop
or
pop
xor
int3
dec
test
dec
mul
pop
ror
jmp
or
fnstsw
lds
push
cmp
(bad)
ss
shl
mul
call
(bad)
in
mov
xor
(bad)
sub
xchg
test
sbb
xor
or
stc
fimul
enter
retf
inc
jns
imul
jae
sub
adc
ja
add
mov
adc
addr16
dec
ficom
push
mov
dec
lods
push
xor
or
xchg
imul
jo
stc
xchg
pop
addr16
xor
ja
add
bnd
jb
jp
(bad)
imul
xor
popf
mov
xor
idiv
out
je
cld
or
cmp
add
xor
push
xchg
pop
(bad)
clc
mov
mov
sub
lds
inc
out
adc
and
sub
fmul
sti
mov
cs
or
clc
(bad)
lock
and
ins
fwait
xor
cmp
popa
clc
adc
mov
loope
int3
sub
inc
mov
mov
mov
cld
scas
test
mov
sub
inc
cwde
add
inc
xor
xchg
daa
inc
fcomp
push
fmulp
adc
outs
adc
int
pop
ss
dec
mov
jo
sub
mov
dec
xchg
sti
mov
leave
fcomp
pop
loop
data16
fstp
fisttp
mov
rol
stc
mov
pop
mov
test
xor
mul
mov
sub
fstp
xchg
fld
js
or
dec
test
add
test
stos
push
jae
lods
pop
ror
stos
(bad)
inc
sub
fmul
test
and
mov
mov
(bad)
cmp
and
pop
scas
test
pushf
xchg
div
xor
inc
cmp
enter
dec
mov
pusha
sub
jbe
retf
movs
jmp
repnz
push
enter
ja
push
dec
loop
imul
xor
adc
fwait
js
jmp
shr
adc
cli
inc
cmc
cmc
cli
add
std
or
stos
dec
jae
imul
loopne
xor
in
cmp
test
fldcw
cmc
or
stos
sahf
inc
call
adc
mov
add
dec
rol
xchg
mov
or
push
push
arpl
popf
adc
arpl
nop
cmp
jo
jne
adc
aaa
sbb
xchg
xor
or
leave
dec
jmp
test
pop
cmp
ret
loopne
clc
mov
push
popa
fucomp
add
cmp
pop
cmp
(bad)
repz
rol
mov
(bad)
pop
xor
retf
sahf
and
les
cli
xor
lahf
mov
repz
stos
jle
stc
jge
and
and
test
xor
aaa
dec
adc
dec
or
pushf
rol
push
jp
stos
push
xchg
shr
jle
cmps
sbb
inc
dec
js
imul
push
xchg
cmp
inc
iret
lods
xor
mov
inc
xchg
xor
jmp
add
stos
xor
outs
shr
popf
mov
mov
out
movs
mov
add
inc
jo
shl
mov
cmp
inc
dec
sub
xchg
fsub
popf
cmps
mov
fcmovu
cld
mov
sub
popa
inc
in
int3
bound
out
stos
movs
jmp
sti
mov
int
or
adc
es
test
pop
pop
mov
dec
dec
add
push
push
push
dec
movs
add
mov
pop
sub
cli
push
lock
test
dec
int
xchg
pop
lea
popf
push
jle
push
imul
rcr
sbb
repnz
aas
add
fisub
mov
in
xchg
enter
das
adc
pop
test
inc
cdq
nop
and
fadd
mov
jmp
jmp
(bad)
mov
rcl
mov
jns
scas
cmps
jg
cmps
jg
inc
or
sbb
out
dec
int
pop
out
ret
or
xlat
and
inc
nop
aas
pop
jmp
test
sti
push
scas
test
fs
fisttp
mov
pusha
in
stos
out
rcl
or
add
bound
arpl
mov
or
jl
mov
mov
and
test
dec
mul
jmp
loopne
sub
sub
jae
inc
cmp
gs
pop
sub
arpl
cmps
loop
mov
out
leave
in
retf
xor
cmps
xor
arpl
call
jmp
aaa
mov
cmc
frstor
dec
repz
adc
pushf
fsubrp
mov
push
jne
jg
sbb
adc
je
jnp
(bad)
dec
sub
sub
ins
(bad)
jg
add
cmc
mov
jmp
sbb
shl
lock
jns
mov
dec
jbe
pop
mov
sahf
movs
lods
pop
imul
xor
xor
out
loopne
je
xor
xchg
sub
sub
jmp
sub
mov
(bad)
sbb
cmp
push
or
loopne
jnp
or
mov
sub
add
add
inc
push
into
fs
jecxz
cmp
pop
lock
push
inc
repz
popa
out
and
fistp
fdivr
mov
and
cmps
xor
shr
cwde
dec
sub
data16
stos
lock
fsin
ja
loope
out
cs
in
call
xchg
leave
in
ja
(bad)
mov
mov
es
push
or
jecxz
adc
cld
inc
adc
test
push
cmps
push
jno
push
sti
sti
adc
lods
pushf
out
jne
mov
lea
mov
out
dec
(bad)
repz
jmp
xchg
jl
mov
mov
(bad)
pop
(bad)
pop
cdq
test
hlt
adc
pop
jbe
addr16
push
retf
movs
push
fs
stos
xchg
iret
int
mov
inc
mov
mov
mov
mov
outs
cwde
fdivr
xchg
jb
jb
and
add
ss
test
pop
or
sbb
push
test
shl
push
jno
mov
mov
cmps
pushf
mov
sti
push
xchg
ret
add
mov
adc
ficom
or
mov
inc
cmps
ds
or
(bad)
iret
mov
(bad)
out
pop
out
jne
aad
cld
and
push
adc
(bad)
and
mov
retf
retf
inc
mov
idiv
sub
mov
ins
(bad)
mov
scas
test
push
jp
ficom
mov
mov
mov
js
addr16
mov
(bad)
jl
jo
xchg
imul
mov
sbb
inc
popf
imul
mov
(bad)
pusha
js
mov
sub
add
pushf
aas
imul
or
push
xor
iret
mov
gs
(bad)
repz
and
mov
xchg
aas
push
sub
jb
scas
mov
ja
and
push
enter
lahf
xor
and
and
(bad)
out
jae
addr16
and
in
leave
icebp
mov
xor
hlt
in
xchg
popf
lds
pop
jmp
xchg
in
or
push
xor
add
and
push
jno
std
jecxz
retf
aam
sti
cmp
cmp
sti
pusha
dec
shr
shl
add
mov
push
push
stos
ds
push
cmp
xchg
sub
les
repnz
ins
pop
shr
inc
(bad)
js
xor
test
cmps
mov
stc
cwde
(bad)
mov
xchg
mov
std
dec
sbb
in
mov
or
fwait
jns
ss
in
push
fcmovnu
add
loope
sub
inc
int3
movs
add
fbld
sbb
or
lds
ret
mov
inc
add
mov
jns
sbb
movs
sub
pop
push
mov
add
and
out
shl
ret
sub
push
in
mov
push
dec
xchg
and
into
dec
or
aad
adc
rcl
mov
add
pop
pop
div
repnz
ja
xchg
cs
outs
rcl
push
ds
jo
cmp
pop
fisttp
dec
test
lea
es
lea
out
(bad)
in
scas
movs
push
inc
add
movs
add
mov
xchg
outs
fisubr
pop
mov
jbe
cmp
jmp
retf
push
sub
cmp
fwait
pop
lods
push
xchg
xor
mov
xchg
xor
out
lods
aaa
xchg
inc
test
mov
sub
out
xor
pop
jo
test
jns
add
test
dec
loop
aaa
mov
fild
sbb
pop
xchg
add
push
arpl
or
push
lods
sbb
adc
or
adc
and
push
fmul
mov
(bad)
mov
mov
in
xor
dec
or
iret
jne
jmp
push
dec
xor
mov
push
xchg
xchg
mov
xchg
or
push
or
push
mov
push
sub
adc
mov
data16
imul
add
icebp
inc
or
sti
mov
popf
sub
xchg
adc
jae
inc
aaa
mov
xor
in
outs
cmp
popf
or
adc
shr
inc
dec
jge
sbb
movs
(bad)
in
xlat
retf
jbe
adc
test
rcr
popa
lods
inc
in
sub
and
push
mov
cmp
je
int3
in
les
cmp
cmps
lahf
jl
jne
fs
(bad)
sbb
mov
stc
push
adc
cli
sahf
icebp
xor
xor
xlat
test
ja
and
or
inc
mov
mov
xor
adc
rol
movs
or
std
jmp
pop
imul
loop
iret
test
sub
out
inc
fbstp
mov
jnp
pop
cli
push
mov
jg
imul
cmp
imul
in
in
mov
call
cmps
(bad)
cmp
xchg
das
pop
movs
mov
out
mov
aad
xchg
or
cs
shl
cmp
inc
pop
outs
dec
jno
ja
iret
pop
add
iret
inc
push
pop
mov
mov
cmps
push
sbb
outs
scas
inc
clc
aaa
cwde
dec
inc
hlt
leave
test
xor
add
aas
enter
add
jnp
mov
push
mov
shl
sub
jmp
add
lock
xor
gs
mov
jl
adc
xchg
sahf
fnstcw
add
or
in
xor
dec
add
lahf
outs
es
(bad)
jg
aam
pop
(bad)
sub
pop
repnz
mov
pop
or
cdq
or
adc
fld
cmp
aaa
jp
dec
mov
inc
sbb
movs
sub
ins
sub
and
cmp
mov
and
enter
cmp
pop
das
push
(bad)
jae
test
jo
repnz
in
inc
xchg
or
dec
push
setl
mov
adc
jge
cmps
je
and
push
mov
push
gs
movs
cmps
call
jno
not
inc
popf
cmps
mov
out
rcr
enter
adc
mov
bound
push
mov
jle
(bad)
cmc
stos
(bad)
and
aam
mov
pop
aaa
lock
inc
and
add
xchg
jb
pushf
jne
stc
cld
adc
cs
dec
pop
inc
fisub
(bad)
cmp
test
jp
cdq
push
mov
adc
mov
pop
xor
js
and
int
(bad)
and
ja
fcomp
jp
call
dec
data16
pop
push
push
lea
pop
iret
push
adc
call
push
mov
hlt
pop
mov
stc
ja
cmps
push
dec
fs
push
cmp
sbb
xchg
pop
(bad)
rol
xor
sbb
loope
pop
sbb
sbb
xor
icebp
call
es
xchg
ret
js
xchg
push
pop
jl
cmps
add
inc
loope
jp
sbb
add
mov
sub
in
push
mov
retf
xor
ror
nop
retf
idiv
mov
dec
pop
repnz
movs
scas
xchg
mov
mov
jmp
int
cld
jnp
ss
stc
or
xchg
add
ins
addr16
out
mov
fidivr
add
jmp
scas
dec
mov
cli
(bad)
push
loopne
rcl
js
mov
fistp
sbb
jl
test
retf
push
mov
add
sub
mov
fisttp
ss
jno
test
mov
push
sub
or
sbb
imul
mov
es
(bad)
sub
and
mov
push
push
xor
adc
sub
(bad)
add
sbb
dec
bound
push
jle
dec
repz
outs
mov
aaa
inc
and
mov
in
dec
cmc
pop
in
stos
in
or
lods
xchg
pop
in
into
jnp
or
shl
pop
cs
shr
jmp
rol
and
fist
mov
ret
lds
pop
pop
ret
test
ins
mov
mov
je
mov
cmp
gs
or
jp
jg
xchg
pushf
jns
or
fsubr
adc
(bad)
aam
xlat
xor
(bad)
pushf
mov
bound
push
scas
push
lea
push
pop
adc
mov
stc
sub
call
aaa
into
dec
test
sbb
xchg
fnstsw
jmp
add
add
add
enter
xor
fs
fadd
icebp
adc
addr16
gs
daa
fld
icebp
cmps
shl
(bad)
loop
xchg
imul
scas
xor
int3
xor
adc
cdq
inc
push
add
repnz
adc
jmp
jnp
not
sbb
jmp
mov
jmp
mov
sbb
dec
sub
push
push
adc
imul
xchg
gs
test
adc
xor
push
movs
call
ja
fisubr
cwde
or
int3
fisttp
jge
int3
and
xlat
push
push
pop
cmps
sbb
mov
into
cs
test
iret
inc
jle
push
jae
test
xchg
arpl
jbe
(bad)
inc
loopne
mov
pop
xchg
xchg
adc
push
jp
and
sub
xor
(bad)
mov
push
in
and
adc
push
inc
stos
add
xchg
sar
pop
xlat
ret
push
nop
out
movs
imul
shl
out
xor
pop
ret
sbb
aaa
(bad)
cmc
mov
mov
adc
and
ret
sbb
movs
sbb
imul
mov
js
sub
cs
mov
ja
pop
xchg
lock
sbb
dec
shl
movs
fbstp
and
movs
mov
pop
push
xchg
sbb
push
cmp
lods
cmp
je
add
stc
sub
not
repnz
nop
dec
ja
and
outs
jecxz
push
jmp
(bad)
mov
test
xchg
out
lock
imul
shl
jle
iret
dec
sbb
in
int
add
jp
inc
aaa
out
xchg
leave
cwde
jg
js
add
mov
hlt
in
int3
mov
jle
jg
mov
dec
push
cmc
jno
push
dec
mov
push
sbb
jae
jne
fild
ret
jne
fwait
lock
pop
push
(bad)
mov
mov
push
sahf
fs
call
(bad)
pushf
jmp
adc
shr
out
out
add
js
inc
pop
jg
xchg
cli
sub
and
retf
xcrypt-ofb
cmps
jmp
jo
mov
add
test
outs
fidiv
bound
fs
mov
pop
movs
fsub
ja
xor
fmul
das
(bad)
stc
lea
add
sub
sahf
stc
or
cmps
in
jmp
inc
cmps
xchg
adc
ret
cmp
cmp
lea
mov
ret
ins
scas
dec
ret
add
sbb
sbb
push
ror
inc
jmp
sub
sbb
das
inc
lea
mov
jge
std
lds
dec
daa
lahf
repz
js
mov
sub
ret
repnz
ror
mov
or
jno
xchg
(bad)
adc
push
test
mov
mov
outs
mov
cmp
xchg
repnz
bound
inc
inc
les
pop
mov
js
fsubr
add
push
sub
sbb
push
inc
sbb
mov
ins
xor
out
or
ins
xchg
js
out
outs
out
lock
shr
jns
out
ret
xchg
loope
sbb
xchg
dec
adc
mov
lahf
fbstp
push
pusha
test
sbb
mov
les
sbb
lahf
aaa
ficomp
mov
js
push
inc
in
or
jbe
pop
sub
es
dec
pushf
fld
ins
mov
inc
mov
add
shl
call
jl
(bad)
ds
xchg
ret
lahf
mov
lds
div
xor
xor
or
cmp
in
adc
clc
lea
dec
cmp
lds
cmc
mov
retf
inc
sar
sbb
xchg
arpl
mov
in
sub
or
push
mov
push
(bad)
cmc
xor
hlt
sbb
push
sbb
js
addr16
(bad)
xor
pop
sub
das
inc
push
popf
test
push
fldl2t
sbb
cmp
mov
addr16
or
mov
add
sub
stos
cmps
xor
call
ja
repnz
popf
ss
fsub
push
retf
add
mov
xchg
mov
test
inc
xlat
int
fs
pop
jmp
push
sti
in
pop
js
pop
adc
fcmovu
leave
mov
mov
call
mov
cmc
es
cld
jbe
fidivr
and
int3
and
cmp
inc
mov
add
jg
fcom
sub
xchg
cwde
cmp
lods
xlat
cdq
xchg
mov
and
xor
in
js
es
lods
jmp
cwde
add
mov
jbe
aam
dec
pop
int3
xchg
sbb
adc
inc
jns
enter
imul
adc
stc
sar
pop
inc
test
outs
mov
retf
int3
mov
sub
enter
jbe
popw
das
adc
das
sbb
inc
sub
add
arpl
pop
sbb
inc
mov
dec
xchg
jne
or
jae
stos
add
dec
and
fwait
pop
movs
sub
out
pop
call
jne
fist
daa
mov
xor
dec
call
in
mov
in
xchg
sbb
into
hlt
je
fiadd
sbb
in
lods
call
add
nop
jecxz
nop
ja
mov
loopne
or
int
xor
into
adc
nop
jge
das
cmp
mov
das
sub
dec
(bad)
ret
scas
lds
xlat
mov
or
hlt
outs
call
enter
push
jmp
and
xchg
enter
cmps
test
in
sti
inc
jecxz
jg
or
jne
pop
sub
imul
shl
imul
loop
lds
sub
out
outs
sar
sub
sub
pushf
jle
xor
ret
sbb
mov
sbb
and
cmp
test
mov
imul
stos
rol
int3
jo
movs
add
jmp
fsubr
sbb
mov
neg
call
ret
jnp
sub
jae
imul
cmc
cmps
xchg
fwait
daa
fldcw
xor
mov
mov
dec
push
in
into
int
dec
out
gs
rcl
pop
outs
and
add
xor
push
clc
jl
daa
iret
ins
sbb
xor
outs
mov
addr16
rcr
and
out
pop
aas
push
bound
push
fld
jno
outs
jmp
mov
mov
and
rol
mov
mov
call
loopne
mov
or
push
xchg
sahf
shl
or
mov
pop
sub
xchg
or
jo
retf
pop
repnz
push
sub
add
jl
lahf
jo
ins
xchg
push
push
cld
sbb
mov
jnp
xor
fild
(bad)
popf
pop
mov
xchg
sbb
ins
xchg
lahf
xor
xor
popf
or
mov
retf
push
push
popf
aam
inc
mov
jle
sbb
(bad)
sbb
int3
aas
or
mov
dec
cmp
pop
jnp
stos
mov
loope
xor
xchg
jbe
mov
sub
loopne
jmp
mov
and
and
pop
adc
jl
repnz
call
and
pop
retf
fadd
jmp
out
mov
ret
and
fild
aad
xor
or
add
dec
pop
mov
pop
stc
(bad)
push
shl
pop
lds
push
adc
(bad)
cmp
inc
add
cli
xor
mov
adc
dec
fmul
dec
fwait
into
mov
mov
stos
mov
mov
out
dec
cmp
fimul
inc
cwde
mov
sub
in
jns
fistp
movs
and
cmps
mov
add
jmp
pop
or
ficomp
sti
xchg
xchg
icebp
xor
inc
out
adc
arpl
inc
mov
(bad)
xor
cli
(bad)
call
jae
inc
mov
pop
ss
mov
jnp
cdq
inc
pop
or
xor
push
lahf
push
cmp
pushf
imul
shl
lods
cmp
mov
imul
call
sub
into
jge
xchg
adc
call
fwait
or
popa
lods
fcmovne
cdq
mov
test
mov
call
push
mov
jle
(bad)
sub
out
or
cs
jne
mov
add
or
push
jge
pop
(bad)
(bad)
imul
mov
or
mov
lods
outs
jmp
std
jmp
cdq
rcr
jmp
imul
aas
(bad)
dec
mov
fisubr
clc
cli
sub
rcr
jnp
je
jo
cmp
sbb
ins
xor
mov
adc
repz
stos
xchg
xchg
pop
or
xchg
pop
loopne
in
test
ds
call
mov
pop
mov
push
movs
cmp
addr16
popf
pushf
jne
leave
dec
gs
mov
xor
(bad)
shr
push
fild
or
xchg
jno
mov
inc
mov
pop
cdq
out
popa
mov
and
mov
or
gs
in
repz
jmp
add
xor
leave
adc
aaa
push
loop
and
rcl
daa
or
adc
and
popf
div
and
cmp
inc
repz
je
mov
xor
jne
dec
pop
xor
(bad)
jmp
test
popf
ins
pop
out
mov
push
push
imul
and
sbb
ret
fwait
int3
inc
adc
and
mov
call
scas
jl
test
cmp
lea
mov
idiv
sub
test
dec
jmp
sbb
gs
lahf
inc
or
(bad)
loop
mov
jno
pop
js
test
cmp
sbb
jg
stos
xchg
mov
sub
jo
inc
movs
fidiv
xchg
push
sbb
jbe
clc
push
or
adc
mov
add
sub
es
xchg
adc
daa
scas
adc
pop
dec
jnp
enter
je
dec
push
retf
push
or
cmps
inc
xchg
jecxz
pop
xchg
std
mov
fsubr
push
and
push
ror
fdivp
adc
push
sub
mov
add
pop
pushf
out
mov
pusha
shl
popa
cs
je
pop
fwait
push
pushf
jle
std
dec
loop
std
in
in
(bad)
pop
div
in
ret
ror
adc
cmp
stos
(bad)
mov
inc
sbb
mov
cmp
cmp
jmp
pop
xchg
enter
aaa
lods
push
push
scas
push
mov
loope
fsubr
pop
mov
or
fst
enter
xchg
add
fcomp
add
fisttp
mov
pushf
add
gs
cmp
or
fbld
es
fld
shl
push
out
lds
adc
repnz
aas
xchg
dec
or
shl
retf
mov
add
jp
jge
jge
retf
clc
push
out
(bad)
sbb
mov
mov
and
dec
pop
shr
(bad)
fstp
leave
loop
arpl
jbe
mov
cwde
jmp
stos
xchg
sub
jl
inc
ins
inc
scas
lock
scas
int
dec
and
push
sub
jmp
in
inc
jp
adc
loope
lea
je
cdq
push
and
imul
mov
mov
push
je
dec
pop
(bad)
out
adc
(bad)
or
mov
shr
mov
ja
or
mov
push
inc
addr16
add
mov
dec
data16
cs
sbb
test
push
sbb
popf
bound
test
repnz
sbb
aam
mov
cmps
lods
into
adc
push
pop
push
or
mov
call
(bad)
scas
(bad)
push
mov
pop
fdivp
ins
xor
lods
not
out
sub
add
pop
cmp
je
mov
xchg
mov
lock
fsubr
jb
or
cmc
adc
rcl
mov
sbb
mov
pop
inc
bound
sar
push
cmp
pop
repnz
(bad)
ficomp
xor
pop
jb
xchg
adc
push
test
dec
imul
icebp
push
xchg
shl
out
push
xchg
retf
push
xchg
xchg
and
pop
movs
dec
fwait
je
dec
jbe
fucom
pop
ds
or
dec
loope
cmp
or
cmc
arpl
fisub
pop
lock
test
stc
int
test
sub
push
rcr
push
rcr
dec
sbb
fs
mov
shr
jns
rol
retf
dec
cmps
movs
sbb
mov
je
or
pop
inc
std
and
xchg
call
stos
loop
add
xchg
out
sbb
arpl
dec
push
(bad)
call
gs
jl
jb
shr
retf
fwait
aam
mov
dec
add
cld
adc
mov
(bad)
imul
xor
fisubr
ret
hlt
js
jo
fsub
femms
pop
enter
cmp
outs
cmp
cwde
jns
loop
pusha
cmp
or
xchg
mov
cmp
push
test
xchg
sub
and
and
movs
push
mov
fist
push
inc
add
adc
std
cmps
ins
push
test
sbb
and
addr16
in
aam
imul
sahf
add
cmp
pop
dec
add
mov
xchg
sub
gs
les
or
jle
xchg
mov
popa
xchg
fisub
sub
mul
das
fstp
loope
nop
aad
inc
dec
fnsave
xchg
sahf
ret
sub
nop
popa
outs
(bad)
and
pop
push
mov
mov
retf
das
retf
jbe
mov
pop
inc
xchg
test
mov
dec
inc
cmp
mov
push
out
sub
adc
and
into
dec
addr16
adc
es
test
sbb
adc
pmuludq
mov
mov
inc
out
push
inc
and
in
call
sub
fmul
test
cmps
cmps
vmread
and
pop
push
jl
sub
cmps
mov
in
mov
push
xchg
and
mov
in
dec
mov
test
pusha
jae
sub
and
out
mov
or
lahf
jns
inc
(bad)
leave
push
adc
pop
push
or
movs
add
and
mov
or
xchg
jae
fwait
movs
mov
out
dec
lods
adc
mov
dec
and
cdq
jecxz
mov
ins
inc
in
adc
in
fistp
mov
movs
icebp
iret
mov
jg
inc
jp
cmp
adc
and
dec
and
fmul
jecxz
stos
pop
pop
fsubp
push
adc
outs
repz
lods
dec
nop
les
push
stos
jnp
cmp
pop
xor
test
(bad)
add
mov
sub
lahf
sub
pop
ret
sti
not
dec
jbe
mov
and
retf
(bad)
sbb
xchg
jle
cli
in
fist
push
push
mov
loope
scas
out
nop
outs
cmp
mov
xchg
into
or
stos
or
inc
pop
fiadd
in
aaa
xor
les
ss
cmp
dec
jge
rol
js
push
shl
test
dec
(bad)
cmp
lock
ret
ret
lock
inc
pop
inc
pop
mov
fdivr
stos
and
mov
or
and
sub
ins
dec
sub
or
xor
das
lahf
or
add
loopne
xchg
add
lods
sahf
sbb
inc
pop
outs
sbb
cmps
mov
xor
push
add
mov
fisub
imul
in
out
imul
mov
cwde
xor
xor
ins
cmp
or
adc
dec
cld
sub
fadd
cmp
cmp
cmc
out
shl
xchg
sub
push
xor
pop
dec
push
push
hlt
cdq
(bad)
push
adc
(bad)
ja
int3
ficom
mov
sbb
pop
adc
sar
icebp
xchg
pop
sub
pop
sbb
xor
jbe
add
pushf
test
or
iret
loope
cmp
mov
mov
inc
lods
dec
cmp
adc
leave
in
mov
or
stos
pop
and
arpl
xchg
adc
pop
mov
push
mov
mov
xor
lock
cmc
aaa
xchg
mov
pop
inc
xchg
shl
xlat
enter
mov
not
cmp
aam
rcl
push
repz
push
(bad)
daa
stos
iret
xor
xor
rcr
repz
fistp
pop
lock
arpl
xor
jl
fadd
enter
rcr
push
test
pusha
push
fadd
cmp
fnstsw
push
icebp
jmp
shl
mov
jmp
loop
bound
jo
jnp
mov
fnstcw
test
adc
les
pop
xchg
mov
xchg
pop
adc
idiv
mov
sbb
pop
arpl
dec
mov
(bad)
cmp
mov
jbe
(bad)
sub
dec
xor
popf
inc
popa
jb
pop
mov
cmp
pop
cli
and
shl
pop
push
dec
shl
jb
es
mov
cpuid
pusha
iret
jo
adc
loope
in
repnz
shl
sub
out
jns
mov
jmp
cmp
push
mov
ja
mov
ret
call
mov
iret
lahf
out
loope
push
lahf
mov
pop
or
xchg
mov
rcl
jl
add
or
into
clc
gs
xchg
test
ror
test
pop
dec
fsub
push
lea
iret
sub
xor
or
je
int3
imul
adc
call
lods
int3
mov
mov
adc
jle
push
push
pushf
shr
pop
pop
and
fxch
jp
pop
sbb
pop
scas
enter
sub
and
ss
or
dec
retf
mov
xor
ins
ss
dec
in
scas
lods
jge
add
dec
and
das
mov
mov
mov
sbb
jge
add
add
shl
mov
sub
mov
gs
push
inc
or
add
and
jno
mov
push
mov
into
push
aaa
ror
movs
xchg
call
ins
jge
cwde
aas
fcmove
rcr
cmc
leave
arpl
lods
retf
or
sub
xor
mov
xlat
pushf
cs
push
sub
pop
fist
sub
sub
inc
clc
daa
pushf
es
push
pop
in
loope
sbb
leave
dec
loopne
sti
repz
sar
retf
dec
pop
adc
daa
jno
mov
sti
cmp
jle
sti
call
inc
repz
nop
call
add
and
adc
lds
jae
dec
sub
pop
dec
xlat
call
xchg
inc
cmp
sbb
jb
in
jg
pop
je
mov
aas
outs
xchg
ins
rcr
int
xor
xor
cmp
loope
and
shr
mov
push
ins
mov
ret
jnp
aam
pop
clc
sub
mov
cs
jnp
dec
add
lea
pop
push
push
sbb
xchg
mov
add
daa
or
shl
nop
daa
into
(bad)
sbb
shl
mov
clc
mov
pop
jmp
inc
pop
inc
sub
arpl
sub
pop
or
loopne
inc
mov
outs
mov
adc
mov
ins
fwait
jmp
pop
and
xchg
iret
dec
jp
add
aaa
sbb
xlat
push
mov
and
push
add
sbb
pop
jnp
jb
jmp
adc
jmp
jmp
lea
jo
sub
pusha
rcr
sar
dec
jmp
add
jne
int3
sub
stos
inc
mov
cld
hlt
call
mov
ins
stc
xchg
jbe
pusha
mov
or
js
cmp
pop
out
(bad)
jne
and
adc
add
ret
adc
mov
pop
and
data16
mov
es
and
pushf
loope
stc
push
repnz
aaa
rcr
adc
or
rol
ss
imul
mov
aas
push
mov
in
lahf
or
cmp
dec
(bad)
int3
sbb
xchg
(bad)
movs
jecxz
cmps
or
dec
cmp
mov
loopne
sub
jg
xchg
pusha
adc
mov
gs
aas
imul
clc
imul
test
fdivp
sbb
add
fidiv
cmp
push
sub
push
cld
fstp
push
es
and
ret
stos
in
fucomp
lea
(bad)
xlat
push
pop
stos
adc
es
ret
xor
aaa
mov
mov
test
repz
sbb
mov
inc
sti
loopne
pop
mov
mov
xor
mov
jmp
sub
dec
sub
push
stos
retf
ret
inc
inc
adc
jns
pop
jge
sub
mov
out
sar
xor
mov
out
adc
repz
aad
rcl
sub
jbe
inc
fstp
repnz
or
pop
mov
xchg
mov
inc
cmc
jno
sbb
jne
sub
lds
push
imul
into
push
pop
or
cmc
add
gs
cmps
jle
mov
mov
add
test
bound
jmp
xchg
into
adc
stos
jns
aas
xchg
ins
jb
or
adc
push
imul
gs
inc
clc
dec
in
mov
cmp
sbb
jb
sahf
mov
adc
mov
stos
mul
mov
sbb
jge
jnp
arpl
out
pusha
dec
cdq
sbb
fcmovbe
fcomp
mov
and
test
or
dec
sbb
out
cmp
test
jg
inc
sahf
jp
inc
xchg
jle
lds
ss
dec
and
jo
push
imul
fdiv
(bad)
mov
fld
ja
pushf
cmps
add
ret
pop
sar
fild
mov
popf
ret
mov
xchg
test
xchg
push
cld
pop
es
jl
shl
pop
xor
rcl
or
imul
je
adc
daa
push
out
cmps
repz
leave
loopne
int3
ror
adc
jnp
xor
fwait
cdq
pop
test
adc
(bad)
adc
sbb
iret
fisubr
pop
pop
jbe
inc
sub
mov
cmps
jnp
cmp
icebp
mov
loope
jecxz
mov
stos
jmp
das
pop
jle
mov
sub
cmps
fs
push
add
or
inc
add
mov
aaa
jns
loopne
push
mov
mov
jmp
xchg
movs
gs
xchg
jo
or
push
cli
icebp
imul
mov
jmp
xchg
push
daa
mov
xor
dec
mov
mov
add
imul
xchg
cmp
dec
in
mov
jne
ret
cwde
(bad)
aad
out
mov
push
mov
nop
push
jl
mov
mov
cmp
pop
fdiv
mov
test
mov
out
xchg
pop
retf
shr
test
mov
cdq
das
and
ins
mov
icebp
imul
xchg
mov
loop
add
test
xchg
arpl
retf
jge
add
retf
sub
movs
dec
les
or
jns
fs
mov
xchg
mov
gs
and
jns
inc
lods
inc
fcomp
sbb
cmp
sub
mov
mov
push
mov
fs
movs
ins
push
movs
repnz
stos
aam
repz
test
add
enter
and
mov
adc
stos
pushf
int3
call
lds
out
push
pusha
nop
fild
sub
sub
mov
xchg
inc
sbb
and
sbb
xchg
lock
pop
jnp
push
xor
stos
sub
loop
shr
xor
add
movs
mov
mov
sub
retf
lock
push
sbb
adc
call
das
sbb
repz
mov
stos
xchg
es
cmps
fst
cmp
outs
xor
pop
movs
mov
xor
pop
adc
aad
push
sbb
adc
ins
fsubr
arpl
test
cdq
add
lods
push
xchg
mov
cli
lods
mov
hlt
xchg
or
nop
jo
mov
(bad)
out
test
aaa
fs
(bad)
into
push
jnp
loope
movs
add
fisttp
dec
pop
xchg
mov
jle
aas
xchg
in
jp
mov
inc
neg
out
fs
mov
mov
in
mov
popa
jnp
add
push
mov
mov
mov
movs
test
cmps
sbb
add
cmc
sbb
xchg
cmp
pop
(bad)
sub
or
scas
mul
sub
pop
outs
scas
pop
push
hlt
sub
sahf
or
ins
fimul
ins
pusha
inc
test
xor
scas
xchg
cmp
or
mov
ret
xor
lock
adc
loopne
sbb
push
pop
out
sub
mov
je
dec
out
and
jmp
in
ficomp
or
xchg
mov
jno
and
xor
(bad)
es
or
jo
sub
mov
or
rol
aad
pop
lds
pusha
cmp
xchg
mov
push
lock
inc
xchg
jge
xor
xchg
lea
pop
loopne
push
pop
mov
dec
dec
and
push
jmp
or
push
sbb
ins
push
fs
jmp
out
mov
mov
pop
int3
sbb
pop
js
mov
ret
jge
jle
or
mov
xchg
xchg
ficom
xor
mov
movs
dec
pop
xlat
test
loope
sub
mov
ret
inc
sub
mov
cli
pop
adc
fiadd
jmp
ss
or
cs
nop
hlt
pop
inc
mov
or
(bad)
std
lea
pusha
push
lea
sbb
inc
fsubrp
repnz
add
sub
push
in
dec
(bad)
mov
clc
scas
sub
xlat
lods
enter
jae
test
stc
dec
repnz
or
popa
jl
out
cmps
loop
inc
out
add
mov
shl
sub
sbb
ret
and
jmp
mov
push
out
sbb
ins
and
jp
mov
outs
bound
arpl
sub
push
and
inc
imul
loope
jne
aam
sbb
jl
stc
jbe
sub
mov
in
js
daa
pop
add
loopne
call
std
sbb
xor
iret
popf
xor
sbb
add
sbb
sbb
mov
out
cmp
cmp
jmp
imul
xchg
cmp
dec
add
sbb
pop
data16
push
sub
ins
daa
sar
or
jmp
xor
lock
outs
sub
out
xlat
mov
in
add
(bad)
mov
sub
fiadd
movs
out
pop
or
jo
push
pop
sahf
rcr
div
push
cmps
pop
in
jb
push
cmps
vdivpd
mov
pop
iret
pop
mov
popf
enter
out
outs
(bad)
mov
(bad)
mov
mov
das
jno
adc
ficom
pop
stc
cmps
sbb
xchg
add
mov
cs
jns
jne
neg
jp
or
add
mov
data16
(bad)
mov
jnp
mov
push
pop
repz
rcl
fsub
call
scas
jp
push
lods
add
xchg
cmp
xor
mov
inc
and
in
arpl
inc
test
enter
push
add
dec
jns
mov
sbb
inc
leave
push
(bad)
sub
mov
jecxz
xchg
push
jg
sahf
outs
mov
nop
aam
pop
aas
mov
stos
arpl
imul
ret
sub
sti
mov
es
nop
sub
ds
(bad)
adc
and
cs
stc
ret
push
push
sub
cmp
fwait
mov
ins
pop
fdivp
cmp
(bad)
xchg
add
xchg
xchg
add
mov
xor
xchg
sbb
fist
and
fstp
add
pop
fstp
add
ja
(bad)
push
pusha
nop
mov
mov
cmc
sub
(bad)
jae
or
jb
scas
push
mov
cmp
pop
loope
pusha
mov
dec
pop
and
xor
mov
sbb
mov
pop
test
in
movd
fldcw
pop
and
sub
inc
pop
mov
lea
and
jge
fs
pusha
stos
(bad)
adc
push
sub
xor
mov
adc
rcr
cdq
shl
daa
mov
xor
ret
cld
or
jl
cmc
sbb
xor
sbb
dec
das
outs
test
jns
jns
mov
jnp
and
mov
and
iret
xor
ret
or
daa
mov
ror
mov
xor
pop
xor
sub
aaa
jge
sub
mov
popf
sub
outs
icebp
(bad)
dec
dec
or
add
xchg
jbe
enter
inc
or
or
in
cmp
mov
arpl
scas
int3
(bad)
nop
inc
repnz
sub
jmp
sub
xchg
ret
gs
sbb
adc
nop
sbb
pushf
xor
arpl
adc
lods
addr16
fdiv
fcom
call
mov
sub
push
nop
ja
fidivr
sbb
pop
imul
loopne
xchg
fmulp
mov
inc
xor
cmc
sbb
dec
mov
dec
adc
inc
loop
push
xchg
cmp
sub
jmp
enter
mov
sbb
pause
cmp
fisub
sbb
test
cli
in
xchg
xor
cmp
push
mov
cmps
dec
xchg
stos
ficom
loop
jne
call
or
mov
xchg
aas
scas
and
sar
push
inc
xor
add
xor
jecxz
aad
xor
mov
int
call
mov
frstor
and
inc
fwait
jb
or
out
jb
sub
ffreep
pop
jg
jno
loopne
mov
out
(bad)
aaa
mov
in
out
ds
cmps
popf
mov
mov
adc
sti
aam
mov
mov
bound
ret
cmc
(bad)
arpl
sub
add
push
mov
mov
xchg
retf
jns
xor
dec
or
(bad)
es
push
xor
aad
push
mov
(bad)
scas
movs
jbe
repz
fsubrp
ret
ds
inc
outs
call
mov
(bad)
cmps
adc
xor
dec
sub
jmp
mov
and
cmp
sbb
jbe
mov
adc
shl
(bad)
dec
leavew
in
mov
mov
aad
push
mov
adc
rcr
(bad)
cmp
and
outs
cli
adc
push
aas
imul
retf
scas
xor
loop
loopne
or
loopne
aas
push
mov
ror
sbb
cmc
jmp
(bad)
xlat
data16
push
cmp
in
xor
repnz
jp
mov
fnsave
push
adc
movs
inc
imul
pavgw
adc
mov
aam
adc
xlat
(bad)
push
mov
xchg
loope
sbb
int
stos
repnz
mov
and
ins
cs
ror
addr16
push
bnd
cmp
cdq
xor
pop
popa
pusha
push
cld
sbb
ret
push
xchg
fsub
adc
ret
(bad)
leave
jle
mov
cmc
loopne
je
pushf
inc
aad
scas
mov
test
leave
xchg
pop
sbb
pop
jmp
arpl
scas
inc
retf
call
mov
mov
mov
xchg
or
test
fild
pop
rcr
cld
addr16
js
in
jmp
mov
leave
mov
out
dec
fistp
je
dec
push
sub
cmp
fld
jnp
or
in
cmps
addr16
xchg
jo
inc
dec
jmp
jmp
push
mov
pop
mov
lods
cmc
xlat
div
pushf
in
fsubr
xor
dec
das
retf
lahf
mov
jle
(bad)
movs
lea
add
enter
sub
dec
ins
jmp
add
and
pop
inc
fild
and
iret
int3
test
stc
mov
ret
cdq
bound
and
mov
shr
call
jns
xor
mov
xchg
and
test
jae
jnp
lea
jp
mov
loopne
mov
ret
push
xchg
retf
loopne
adc
pop
fcmove
outs
xor
push
sbb
clc
xor
movs
lock
sbb
loopne
pop
push
dec
das
shl
or
stos
xchg
pop
jg
fmul
mov
adc
pusha
dec
sub
ja
ret
sub
aad
dec
cs
scas
das
fist
adc
pop
and
sti
push
lds
inc
pop
jnp
inc
rcr
je
dec
das
jle
add
sbb
call
mov
fist
push
dec
jl
jmp
push
std
mov
aam
ret
pop
dec
or
xor
stos
sub
out
mov
dec
sti
sbb
cwde
mov
xlat
push
shl
xchg
push
inc
mov
mov
xor
inc
repz
nop
jmp
adc
inc
je
xor
out
test
sub
add
add
xor
in
add
add
ss
fistp
daa
scas
push
int3
mov
and
mov
sub
inc
dec
pop
jae
fs
movs
adc
cmp
cdq
push
dec
push
out
pop
cmps
test
loopne
jg
jns
arpl
inc
mov
adc
sub
jl
sbb
frstor
mov
add
data16
loop
mov
mov
push
ss
sbb
and
push
sbb
rcr
add
in
add
pop
dec
inc
jp
jo
outs
inc
mov
call
hlt
dec
mov
pop
repnz
fwait
nop
push
enter
and
jmp
(bad)
mov
(bad)
xor
mov
sahf
sbb
in
loope
cmp
es
inc
cmp
mov
adc
jae
aam
pop
les
and
add
dec
xor
fs
jg
xor
inc
push
jle
inc
ds
imul
clc
out
loopne
ins
sahf
lods
not
mov
cdq
nop
dec
pop
jo
push
lahf
mov
inc
push
push
or
push
popa
cwde
and
jp
jp
cmp
mov
int
sub
pop
push
lea
popf
push
push
pop
inc
pop
aas
div
enter
test
(bad)
out
cmp
imul
xchg
test
push
xchg
clc
or
scas
nop
pop
loop
shr
push
int3
xchg
sbb
fwait
repnz
jl
stos
fisttp
jne
jo
jne
out
push
lock
fcomp
xor
test
mov
mov
fst
inc
mov
inc
test
or
mov
lahf
fbld
(bad)
adc
push
xor
push
int
cmps
or
xchg
xchg
aam
fisttp
(bad)
push
xor
xchg
inc
loop
div
in
xchg
ret
scas
inc
aad
clc
push
cmc
mov
es
push
fnsave
sub
retf
(bad)
imul
add
add
add
fld
in
adc
dec
mov
lock
pop
sbb
jmp
mov
xchg
test
or
test
mov
psllw
and
out
and
inc
arpl
xchg
inc
test
push
popa
add
(bad)
inc
mov
xlat
pop
jmp
mov
dec
div
mov
inc
mov
and
lods
cmp
pop
adc
dec
cmp
in
imul
xor
push
add
inc
mov
retf
mov
add
mov
push
lahf
dec
sbb
cmp
inc
outs
es
retf
sub
mov
or
das
mov
push
inc
dec
cmp
das
cmc
pop
(bad)
mov
sbb
sbb
fidiv
call
ss
out
jmp
repz
mov
xchg
fwait
jo
cwde
fcom
and
push
mov
push
pop
cmp
xchg
mov
aam
jmp
ror
aaa
das
test
adc
cmp
repz
jnp
sbb
call
add
dec
xchg
out
sbb
fnsave
and
and
push
cmp
pusha
mov
fst
jp
cmp
xchg
jmp
adc
cmc
sub
jl
loope
rol
enter
xor
xchg
mov
stos
clc
popa
push
xor
inc
or
leave
(bad)
sub
iretw
xchg
loop
sahf
jmp
inc
mov
enter
and
repz
fwait
imul
hlt
mov
jle
sub
je
out
call
push
adc
int
bts
rcr
sub
popf
sbb
push
out
jge
sahf
into
repz
test
add
pushf
xchg
cdq
xor
hlt
std
lods
mov
fdivr
imul
jmp
jae
aas
sbb
inc
into
cmp
sbb
(bad)
out
idiv
out
push
mov
jo
cmps
cmps
jb
jge
or
cmp
jns
xor
jns
fisub
cmps
shl
sbb
daa
movs
jbe
dec
sar
xor
mov
shr
mov
rol
pop
inc
(bad)
shl
jp
add
cmps
xor
mov
fxch
sbb
inc
pop
scas
jnp
rcr
retf
inc
and
out
jle
xchg
mov
iret
mov
das
test
lahf
in
pushf
push
shr
push
mov
loope
nop
lods
sbb
pushf
call
leave
pop
outs
test
in
loopne
outs
xor
xlat
cmp
int3
gs
and
sbb
inc
cld
mov
mov
nop
jmp
cmp
js
jmp
out
or
ror
dec
aaa
xor
out
add
int
mov
pop
add
lds
cdq
mov
pop
out
rcl
imul
outs
pusha
or
icebp
xchg
jmp
mov
jo
mov
std
(bad)
jno
icebp
pop
xchg
push
lds
shl
test
cli
mov
test
mov
inc
or
inc
movs
mov
mov
or
sbb
aas
movs
rol
dec
mov
xor
sub
ss
scas
iret
add
push
outs
sub
sub
addps
lds
loop
and
lds
in
or
(bad)
pop
sbb
ss
sbb
add
jmp
out
std
in
std
or
(bad)
xchg
ins
fcomip
fwait
mov
imul
push
mov
(bad)
mov
aas
xor
lea
mov
in
jl
pop
in
xchg
push
out
push
aas
jno
call
pop
mov
dec
or
xor
dec
enter
imul
or
test
mov
shr
mov
sbb
adc
fild
cdq
daa
ins
inc
data16
imul
repz
xchg
add
inc
jo
pop
ins
mov
mov
mov
les
cld
inc
test
dec
or
imul
sub
fisttp
jl
mov
pop
pop
mov
icebp
outs
fisubr
je
cmp
add
xchg
out
jo
jo
iret
gs
and
sahf
jecxz
dec
cmc
test
and
arpl
mov
neg
jmp
dec
pop
mov
add
adc
add
movs
push
mov
lock
and
and
adc
or
jmp
(bad)
cmps
retf
jl
xor
rol
mov
(bad)
sub
add
sub
loope
jmp
out
adc
mov
pop
pusha
lahf
js
test
or
jecxz
sbb
das
adc
addr16
loopne
out
cmp
outs
push
dec
cmp
int3
(bad)
add
pop
mov
xchg
mov
popa
sbb
jmp
xchg
aam
push
pushf
or
pop
das
cmp
jecxz
adc
stos
sub
stos
xor
push
adc
mov
push
push
jno
mov
add
and
mov
sub
jns
in
ror
lock
movs
xor
ret
xlat
push
scas
test
outs
mov
mov
xchg
pop
push
mov
sbb
add
icebp
movs
popa
sahf
rcr
mov
outs
dec
mov
scas
lds
out
arpl
(bad)
xor
shl
scas
cwde
scas
and
pop
dec
sti
rol
or
push
bound
into
ret
das
pop
mov
cmps
icebp
push
stos
bound
push
mov
popa
cmps
ins
fadd
call
pop
mov
sub
ret
xor
push
push
adc
(bad)
sbb
loopne
scas
and
mov
mov
mov
inc
mov
xchg
ds
imul
push
test
test
and
aaa
sbb
add
cmps
mov
jae
dec
or
popf
out
sbb
arpl
inc
(bad)
aad
push
xor
mov
add
sub
movs
out
sub
ja
rcl
jmp
fisubr
jecxz
pop
mov
or
mov
jae
jecxz
pop
cmp
xchg
inc
adc
pop
outs
mov
inc
movs
push
stc
or
add
rol
das
psrlq
sahf
stc
xor
ret
dec
lods
shr
sbb
adc
pop
loop
inc
mov
in
pop
inc
popf
(bad)
cwde
lods
adc
adc
dec
mov
aam
imul
(bad)
fstp
(bad)
adc
movs
dec
pop
pop
in
cmp
jne
jne
and
cmp
or
dec
lds
scas
cmp
mov
dec
adc
jb
push
test
retf
xchg
adc
xchg
repz
mov
ficom
loope
mov
test
shl
rcr
jbe
add
ds
dec
push
fimul
mov
pop
ja
cmp
enter
cmps
lods
fbld
push
les
lock
test
test
test
(bad)
call
mov
sub
shr
xor
or
stc
push
pop
add
cmp
xor
push
fwait
cmp
and
adc
push
fld
push
in
rcr
pop
sub
pop
sti
xor
and
sbb
jbe
out
pop
jb
adc
mov
xor
(bad)
sbb
shl
test
jp
repz
pusha
rcr
mov
xchg
mov
mov
or
mov
xor
jmp
jl
aas
mov
icebp
mov
fcomp
cmp
enter
(bad)
movs
push
stos
inc
jecxz
fcomi
inc
and
sbb
jmp
retf
jbe
lock
add
jmp
xor
sub
mov
dec
lds
mov
jnp
(bad)
ret
sub
cmp
xchg
sbb
inc
pop
cmp
(bad)
xchg
inc
add
or
mov
fs
cmp
add
mov
adc
sub
push
push
in
xchg
mov
ror
out
jp
mov
fild
aad
xchg
out
mov
sbb
lds
aaa
mov
xor
push
mov
popf
gs
jle
push
ins
inc
sub
and
push
inc
sbb
mov
les
cmp
push
dec
sub
or
imul
test
cmp
cmps
pop
mov
test
mov
mov
scas
scas
(bad)
fistp
and
mov
and
ins
aad
push
dec
mov
out
dec
mov
mov
shr
add
ds
icebp
std
movs
fadd
mov
(bad)
xor
inc
bound
ficomp
movs
mov
adc
(bad)
or
push
movs
sbb
pop
mov
cmp
outs
fdivr
cmps
push
ja
xor
dec
add
pushf
jl
les
rcl
mov
inc
fnstenv
cmp
clc
xor
jl
jg
ficomp
nop
(bad)
pop
mov
aad
into
dec
pop
loop
inc
ret
dec
pop
sbb
mov
test
jne
mov
fnsave
icebp
or
leave
mov
cmp
clc
ins
lods
add
fadd
mov
jno
mov
(bad)
lock
jp
dec
xchg
scas
inc
cmps
dec
inc
mov
mov
xchg
aaa
fwait
test
data16
retf
pop
cli
xor
clc
sbb
add
rcr
push
scas
retf
lock
xor
(bad)
inc
cmps
mov
xchg
xchg
push
or
sbb
scas
push
mov
sahf
out
pop
xlat
or
pushf
sbb
out
pusha
or
pop
mov
add
jb
scas
pop
(bad)
pop
xchg
scas
pop
lds
int3
jmp
inc
and
call
inc
data16
rcl
std
sbb
add
cmps
xchg
aas
retf
push
shl
push
jno
sub
dec
movs
enter
(bad)
xor
sub
aad
pop
aas
jge
xor
push
aad
push
(bad)
xor
mov
pop
cs
mov
push
(bad)
frstor
push
pop
(bad)
sti
mov
(bad)
enter
ror
mov
addr16
rol
cld
retf
in
xchg
mov
inc
std
fcomi
add
es
clc
mov
mov
ret
inc
push
xchg
imul
pusha
push
mov
push
jp
es
jg
cmp
fild
imul
fst
cdq
daa
ret
jb
add
neg
mov
hlt
mov
ret
call
xchg
xchg
adc
fwait
xor
jno
aad
push
leave
xchg
pop
cmp
repz
xor
pop
aad
push
jae
cld
retf
jecxz
and
ins
or
jne
xlat
and
sbb
adc
jmp
mov
mov
sbb
or
mov
test
sbb
into
mov
pop
mov
jne
in
jle
cs
sub
fld
mov
outs
xchg
into
sti
(bad)
adc
xor
mov
mov
test
leave
or
jo
push
add
mov
and
out
or
add
or
aas
fyl2xp1
shl
pop
and
nop
mov
adc
adc
mov
pop
les
dec
mov
xchg
push
repnz
cmp
cs
mov
in
jg
mov
push
test
in
lods
gs
pop
popf
mov
mov
push
and
jl
add
add
inc
arpl
push
mov
fstp
imul
rcl
(bad)
mov
shl
pop
pop
hlt
and
fsub
scas
sub
imul
nop
jmp
mov
push
xlat
cmps
mov
sbb
mov
inc
outs
in
adc
clc
je
xor
jns
in
ds
add
in
dec
addr16
xchg
sub
fld
hlt
or
push
cmps
dec
mov
fnstsw
mov
(bad)
stc
ror
or
nop
xchg
adc
gs
adc
jae
fiadd
cmp
or
into
jbe
mov
lahf
pop
add
dec
mov
mov
mov
pushf
inc
push
in
sub
repz
aad
aam
xchg
call
push
mov
inc
pop
call
mov
mov
and
repz
in
pop
leave
or
xlat
mov
push
das
cld
push
jne
daa
aam
sub
cmp
out
cld
jns
or
inc
dec
movs
mov
lds
aas
sub
sbb
mov
sbb
outs
aaa
arpl
aam
inc
dec
jno
mov
shr
pop
xchg
pop
(bad)
sub
cmp
cwde
bound
popa
push
xchg
imul
pop
inc
retf
icebp
repz
repnz
shl
dec
and
push
movs
mov
mov
or
pop
and
lahf
jns
adc
xchg
out
aas
jnp
push
sbb
std
fwait
rol
jge
jecxz
and
add
js
aaa
(bad)
dec
or
nop
jmp
or
fstp
ins
cmc
imul
or
in
xor
test
sub
out
or
outs
cmp
shr
es
cmps
lods
jmp
cmp
mov
call
mov
(bad)
out
xchg
dec
mov
dec
lea
int3
add
outs
cmp
inc
lahf
test
out
icebp
js
gs
ins
xchg
test
inc
movs
daa
(bad)
xchg
cwde
pop
icebp
bound
in
sbb
mov
cmp
push
pop
cmp
mov
loop
mov
div
popa
xchg
pop
test
ins
inc
sbb
xchg
ins
pop
xor
cmp
sbb
std
lahf
jecxz
add
rcl
sbb
jb
cld
or
sub
ffreep
pop
popf
dec
call
mov
movs
xor
ss
pop
scas
shl
cmp
clc
sub
or
(bad)
mov
ret
xchg
repnz
sar
xor
cmp
shl
jne
push
push
(bad)
(bad)
xchg
(bad)
fiadd
sub
and
cmps
xchg
es
cmp
xor
(bad)
stc
imul
cmp
repnz
ret
rcl
sbb
shl
xor
pop
imul
mov
fidivr
sub
add
stos
push
shl
push
fwait
pop
push
inc
dec
push
sti
jmp
sti
lods
xchg
inc
cmp
push
ss
enter
inc
cmp
inc
and
add
shl
push
cmp
pop
hlt
lea
repnz
mov
lods
xchg
mov
fldcw
jmp
mov
ret
jnp
jae
test
sbb
cmp
int3
ficomp
xor
sub
fwait
and
std
or
push
or
inc
xchg
jns
hlt
sbb
push
(bad)
outs
bound
mov
arpl
adc
loopne
(bad)
test
bswap
std
pop
cmc
gs
inc
setae
iret
dec
cli
xchg
js
sub
cmp
loop
leave
jns
cmps
sti
xor
iret
mov
vaddss
mov
inc
popf
push
shl
sub
mov
mov
and
out
mov
test
lods
call
xlat
xchg
dec
mov
push
mov
mov
pop
es
pop
add
add
test
into
cld
sbb
in
mov
push
inc
push
xor
scas
push
inc
mov
jle
sub
mov
leave
inc
out
pusha
loop
(bad)
fldcw
pop
sub
and
enter
popf
xchg
xor
call
hlt
stos
mov
cmps
ja
ja
pop
lods
push
loope
and
pop
test
mov
out
cmp
dec
mov
and
aaa
push
jg
mov
pushf
add
mov
ret
outs
jmp
stos
les
and
dec
(bad)
std
mov
stc
fstp
pop
mov
lods
into
jmp
jb
jmp
push
outs
hlt
test
aaa
inc
xchg
and
ret
push
cmps
xor
hlt
xlat
pop
pop
leave
dec
(bad)
aam
dec
add
popf
outs
or
into
hlt
pusha
jns
mov
jno
ror
jb
data16
mov
and
(bad)
adc
sub
cwde
sahf
cmp
xchg
cdq
mov
inc
xor
stos
into
inc
mov
hlt
adc
fnstcw
iret
xor
iret
retf
jb
jge
imul
or
jl
xor
sub
jnp
cld
out
jmp
out
pop
push
jmp
xor
inc
or
ror
mov
add
jne
jbe
cwde
je
popa
xchg
inc
ficom
ja
jno
or
enter
pop
xlat
test
mov
mov
out
or
sti
retf
lods
leave
or
fsub
xor
xor
int3
pop
pushf
xor
fistp
xchg
arpl
mov
inc
push
inc
adc
inc
adc
cmps
test
repz
movs
mul
(bad)
cmps
mov
out
cmps
int3
jle
call
mov
fs
sbb
sbb
shl
cmp
test
adc
fwait
and
inc
mov
cs
cmp
icebp
dec
cmp
add
mov
aad
idiv
and
push
jnp
inc
retf
fcmovnb
and
cmp
shl
daa
pop
in
mov
jg
mov
push
cld
xchg
sti
sbb
je
and
bound
pop
mov
adc
adc
jbe
mov
sbb
xchg
out
mov
cmp
fidiv
in
push
jl
mov
push
jne
ret
mov
dec
xchg
sbb
test
xor
mov
xchg
test
sbb
(bad)
dec
add
iret
pop
scas
mov
aas
xchg
test
push
mov
sub
(bad)
in
jns
(bad)
push
lahf
outs
mov
jl
dec
push
inc
adc
jo
je
adc
cs
in
pop
hlt
push
mov
adc
ret
and
loop
loope
lock
push
mov
jbe
test
call
cmp
xor
int3
fiadd
pop
aad
dec
test
push
cwde
add
lea
mov
sub
and
cdq
mov
shr
sub
lahf
mov
cmp
adc
cmps
and
jne
cmc
mov
inc
(bad)
and
dec
push
xchg
jns
or
ja
cmc
mov
mov
mov
shl
nop
jl
fcomp
leave
adc
nop
sbb
dec
bound
pop
gs
js
cmp
sub
out
imul
(bad)
out
rol
ror
es
gs
sar
adc
inc
xchg
out
jno
pop
ins
stc
jno
mov
jg
pop
mov
dec
les
fucomi
(bad)
loop
loopne
js
pop
mov
dec
rol
lea
push
inc
cmp
cmp
icebp
aad
rcl
stos
push
jbe
xor
int3
movs
fsubp
sahf
mov
lahf
add
daa
sti
and
fs
(bad)
push
cmp
mov
jnp
loopne
out
jno
xchg
mov
inc
addr16
add
mov
push
push
pop
push
push
pop
jb
inc
popa
in
cmp
push
or
sbb
mov
retf
data16
fcomp
dec
sub
les
leave
(bad)
add
mov
xchg
jbe
pushf
xchg
cmp
adc
dec
sbb
mov
xor
sti
push
std
sbb
pop
push
cmps
test
mov
inc
mov
cmp
fadd
add
jo
imul
sbb
sub
out
cmp
ret
adc
mov
pusha
cwde
mov
dec
sbb
pop
xchg
bound
inc
ins
push
dec
lds
fwait
add
out
loope
xchg
test
in
push
push
add
xchg
add
rcr
les
test
jmp
shl
push
icebp
mov
(bad)
aaa
stos
sbb
inc
mov
push
pop
jo
xlat
popf
or
repnz
xchg
jle
and
sub
add
hlt
sbb
fnstsw
shl
inc
fmul
outs
pop
mov
xor
(bad)
jmp
in
fild
sti
mov
xor
or
or
mov
mov
dec
mov
ins
adc
jns
aam
nop
pushf
mov
ret
or
imul
mov
fdivr
xchg
(bad)
lock
mov
add
sbb
mov
cdq
xlat
dec
mov
or
sub
ss
jg
lods
fdivr
sbb
mov
sbb
cwde
(bad)
and
pop
scas
jp
fdivr
push
out
cmp
or
out
fcom
mov
mov
cmps
mov
nop
mov
mov
ret
mov
dec
(bad)
adc
and
setb
aam
std
(bad)
loope
rcl
add
(bad)
ds
adc
jmp
dec
test
outs
cmp
pop
mov
cmp
sar
ins
ins
mov
jge
sbb
adc
out
mov
fsubr
push
lods
aaa
mov
inc
int
stos
aad
xor
(bad)
xor
fimul
idiv
addr16
fld
push
or
call
cli
aaa
jnp
pop
sbb
xor
or
std
enter
int3
repz
push
jns
jmp
ds
mov
mov
inc
push
add
mov
shl
pop
add
jmp
lea
icebp
adc
inc
sub
clc
sub
xchg
sub
dec
into
fs
popf
push
mov
xchg
stos
std
gs
mov
and
mov
xchg
in
lods
pop
adc
push
out
cmp
sbb
push
daa
push
fidiv
cwde
idiv
lock
stc
cvtps2pi
fstp
push
push
lods
(bad)
xor
clc
adc
push
or
and
jmp
lds
sub
movsx
mov
stos
push
mov
dec
imul
aas
mov
stos
and
(bad)
sbb
arpl
xchg
call
arpl
idiv
inc
mov
push
cmp
into
call
push
jae
xchg
pop
jp
xor
mov
(bad)
(bad)
push
inc
scas
imul
into
mov
dec
es
or
cmp
fsub
push
xor
inc
outs
daa
(bad)
jmp
sub
fadd
mov
cwde
and
sub
inc
cmp
pop
jle
cmc
ret
aam
shl
neg
stc
pop
ficomp
arpl
sub
cmp
pop
mov
mov
aam
(bad)
(bad)
push
call
bound
loopne
call
xor
xor
outs
dec
inc
mov
xor
jmp
xor
add
rcl
out
jl
loopne
jne
js
mov
fild
cld
jmp
stc
xchg
(bad)
aam
mov
in
push
or
lea
add
jecxz
arpl
sub
movs
add
xchg
sub
repz
fdiv
add
xor
mov
inc
inc
stos
dec
fadd
(bad)
push
clc
test
sub
adc
loope
cli
mov
sbb
pop
std
gs
xor
cld
les
std
popa
sub
pop
loop
jb
in
or
test
inc
lock
jo
aad
jge
xor
mov
sbb
into
hlt
xchg
retf
pop
or
jns
ret
push
mov
pop
(bad)
sub
jns
idiv
pop
sbb
sbb
inc
aas
repz
xchg
into
fiadd
sbb
xor
test
xchg
movs
shr
sbb
sti
inc
js
sahf
lea
dec
sub
pop
jno
cli
test
test
mov
push
dec
adc
std
jb
clc
pushf
test
clc
pop
xor
push
jl
leave
xchg
xor
sub
jp
cmp
(bad)
loop
mov
sbb
push
xchg
cs
(bad)
sbb
mov
xor
fs
test
inc
call
mov
leave
test
aas
xlat
push
out
cmp
test
out
inc
jo
mov
mov
xchg
mov
cld
or
fs
hlt
fcmove
mov
adc
jns
sbb
ins
adc
xor
pushf
aam
push
fwait
rcr
mov
out
jle
dec
out
cmc
scas
jp
fnstsw
dec
or
sub
sti
lahf
and
arpl
stos
test
adc
add
daa
test
xchg
dec
sahf
push
mov
call
gs
cmp
inc
test
adc
fcomi
inc
mov
mov
pop
leave
jmp
scas
sub
jb
popa
mov
test
sub
adc
and
sub
sub
cld
sbb
out
leave
jmp
sub
dec
iretw
jne
or
in
gs
imul
mov
mov
gs
ss
jne
dec
jbe
mov
mov
or
mov
mov
inc
movs
fs
and
push
stos
popa
mov
cmp
dec
mov
pop
aam
mov
std
aas
add
push
je
sbb
mov
leave
adc
cmp
jecxz
push
push
sub
popf
mov
pusha
mov
hlt
and
pop
push
fldcw
rol
cmp
mov
nop
inc
pop
dec
hlt
fisub
jae
jge
cli
outs
mov
test
mov
xor
in
in
xchg
mov
mov
fcomp
cmp
out
inc
mov
mov
ret
add
test
mov
loope
je
fisub
shl
dec
mov
in
add
out
pop
xor
out
xchg
jmp
mov
pop
jp
lea
mov
sub
dec
fs
push
jno
mov
scas
(bad)
adc
nop
sar
clc
dec
cs
cs
sub
dec
hlt
call
scas
xor
adc
inc
xor
popf
loopne
pop
dec
ret
in
fcom
fidiv
mov
and
mov
rcr
push
retf
sbb
sbb
xchg
pusha
mov
(bad)
imul
nop
jne
jne
out
add
scas
xchg
je
ds
pop
iret
lds
ins
lahf
xchg
cmp
xor
ja
test
sbb
sbb
inc
mov
out
cmps
inc
or
push
fnsave
dec
push
pushf
repnz
mov
jle
(bad)
cmp
sbb
aas
pop
and
fmul
adc
mov
mov
adc
sub
mov
mov
mov
mov
shl
inc
sbb
popa
jmp
ror
push
out
aas
cwde
jp
je
dec
pusha
mov
mov
jle
sti
cs
mov
inc
out
out
mov
(bad)
xlat
hlt
js
push
stos
and
leave
xor
mov
mov
mov
scas
aas
add
test
mov
add
dec
add
push
pop
mov
nop
scas
mov
or
ficomp
out
xchg
retf
or
cmc
scas
int
stos
pop
xchg
xchg
jmp
mov
sti
idiv
cmps
push
das
leave
cmp
cmp
ror
fucompp
mov
mov
push
int3
popa
pop
jp
call
dec
inc
mov
cmp
xor
mul
mov
loop
sub
in
mov
xor
sti
ja
out
popa
jbe
ret
dec
aas
or
stc
mov
call
js
cld
fwait
dec
mov
loope
into
or
cdq
push
add
sub
cld
xor
pushf
test
out
add
jmp
cmc
arpl
addr16
rcl
in
cdq
mov
xor
xor
xchg
test
imul
jo
ins
out
jmp
dec
adc
push
cmp
popf
jnp
inc
adc
cmp
out
cmps
inc
popa
jecxz
adc
xchg
sub
int
das
ins
lds
add
mov
or
imul
jne
test
mov
ins
dec
adc
shl
sbb
aam
inc
out
push
out
cmps
std
call
mov
ret
xchg
push
xchg
dec
fdivrp
xchg
popf
nop
cmp
xchg
shl
mov
call
jb
in
jp
adc
sub
pop
cmps
cdq
and
idiv
mov
inc
clc
daa
js
test
adc
pop
xchg
jle
dec
out
cwde
fisttp
or
inc
fwait
aam
xor
in
idiv
sbb
scas
push
popa
mov
frstor
cmp
inc
or
or
xor
loope
mov
mov
add
ds
jmp
pop
mov
lea
jmp
xlat
or
in
jns
pop
rcl
or
(bad)
xchg
mov
jnp
sub
loope
fcomp
(bad)
mov
rcr
cmps
push
xor
(bad)
std
inc
lsl
sub
sahf
shr
rcl
retf
jl
ins
jl
and
outs
repz
lock
pop
add
repz
sub
ins
fwait
xchg
dec
mov
add
add
rep
or
pushf
jo
addr16
mov
sub
cmc
pop
mov
std
stos
js
scas
cmp
aam
dec
and
dec
jmp
cmp
xchg
sub
jle
pop
cmc
xor
push
xchg
int3
xchg
mov
sub
cdq
mov
cmp
(bad)
mov
or
movs
jns
cmp
adc
(bad)
fisub
dec
jle
jmp
pop
mov
push
push
adc
ja
or
(bad)
pop
pop
movs
pop
jmp
scas
std
popf
add
xchg
aad
aas
fwait
popa
mov
call
add
pop
xchg
jle
pop
and
icebp
into
ret
gs
icebp
push
dec
enter
xlat
push
xor
dec
gs
jne
adc
lea
mov
daa
imul
mov
mov
sub
ss
std
inc
mov
cmp
out
adc
mov
icebp
mov
push
xchg
imul
push
and
mov
scas
nop
xchg
mul
lahf
mov
mov
mov
push
add
mov
pop
inc
scas
sub
retf
frstor
rol
(bad)
fcom
dec
(bad)
(bad)
aam
sub
sahf
cmps
movs
sbb
sbb
or
pop
outs
mov
or
push
das
outs
mov
sbb
xchg
push
enter
mov
and
mov
ins
inc
xchg
mov
dec
fmul
mov
outs
and
lds
ror
mov
fs
aad
movs
lods
in
in
xor
mov
loopne
shl
lds
fisttp
fidiv
mov
ja
stos
mov
mov
mov
sub
xlat
pop
stos
push
aas
inc
cmp
mov
test
or
adc
cmp
cdq
xor
pusha
dec
pop
repnz
nop
add
pop
xor
call
call
cdq
lods
(bad)
fld
mov
inc
xchg
jne
fwait
setg
and
or
leave
lock
shr
ins
push
int3
add
cli
movs
pop
push
mov
enter
mov
mov
and
dec
stc
and
or
pusha
inc
dec
stos
push
and
jno
xchg
shl
mov
scas
(bad)
jns
push
mov
into
les
jmp
pop
imul
mov
sar
mov
mov
sbb
in
mov
dec
adc
cmp
js
pop
adc
addr16
(bad)
xor
add
adc
jge
test
cmps
dec
out
xchg
sbb
cli
fnstenv
mov
shl
retf
iret
mov
add
std
sbb
inc
cmp
sub
sbb
lock
cwde
add
movs
lock
sub
add
lock
nop
cdq
add
mov
clc
jge
cmp
dec
add
lea
outs
xor
sti
repnz
and
sahf
aas
pushf
pop
stos
jmp
test
dec
rol
inc
mov
or
movs
in
mov
pop
jae
dec
or
ins
jle
clc
adc
mov
pop
daa
pop
xchg
fmulp
movs
dec
jmp
pop
hlt
(bad)
int3
push
cmc
and
mov
xor
or
sub
cmp
not
dec
inc
fild
xchg
in
adc
xor
test
cmp
outs
mov
or
or
mov
sti
push
mov
xchg
mov
push
xchg
fild
das
push
or
push
mov
sbb
iret
mov
sub
loop
icebp
stc
shl
cdq
xlat
push
jp
push
cmp
(bad)
jl
movs
push
scas
mov
jmp
js
fbld
adc
call
pop
jno
popf
cmps
dec
movs
add
sbb
outs
sub
leave
repz
je
scas
pushf
inc
xchg
test
iret
sub
ins
pop
push
aad
add
cmps
in
xor
cdq
ret
jg
jbe
pop
call
jp
iret
js
daa
addr16
icebp
loopne
sub
dec
push
inc
nop
mov
sub
lods
dec
movs
test
sbb
adc
push
cmps
ja
or
bound
or
imul
int
adc
test
jp
xor
add
xchg
das
dec
out
adc
or
out
in
pop
popf
mul
pop
call
jmp
jns
jg
arpl
(bad)
retf
jb
push
clc
adc
cmp
cmp
xor
out
loope
rep
cmp
cmp
ins
ja
int
fwait
dec
mov
(bad)
adc
inc
cld
retf
sub
mov
fidiv
out
mov
ror
out
out
(bad)
xor
mov
mov
add
(bad)
cmps
loope
mov
test
shr
adc
dec
adc
or
not
add
jo
in
imul
xchg
push
jle
aas
std
repz
outs
inc
jge
xchg
in
fcmovnbe
xchg
mov
std
lea
pop
mov
stos
sti
fidivr
xchg
adc
loop
mov
scas
adc
es
adc
inc
lock
out
xchg
mov
(bad)
jge
or
sub
test
adc
fdivrp
fcomp
sbb
(bad)
fimul
sbb
lods
mov
xchg
rcr
cmps
test
scas
push
dec
add
(bad)
aad
in
dec
jecxz
adc
sbb
or
cld
cmp
mov
shl
in
dec
xor
xchg
(bad)
jno
push
mov
pop
mov
sbb
cmp
cdq
div
push
lahf
inc
ins
lock
dec
test
or
xor
out
dec
mov
rcr
jmp
fisubr
jae
mov
jae
xchg
fidiv
imul
and
nop
daa
xchg
rol
outs
(bad)
ins
push
aam
outs
inc
dec
repnz
into
js
pop
(bad)
retf
add
xor
retf
xchg
inc
es
lds
mov
imul
(bad)
add
loope
es
aas
sahf
mov
or
dec
out
(bad)
mov
lods
gs
ror
les
(bad)
cs
adc
repz
mul
add
adc
sub
js
or
test
retf
xor
push
in
fsub
jae
fsubr
(bad)
lds
movs
stos
jnp
mov
stc
fs
lock
pop
pop
dec
iret
out
xor
das
cmp
and
pop
jmp
(bad)
cli
cmp
and
hlt
add
jecxz
scas
push
xchg
call
push
mov
ror
fldenv
int
dec
mul
mov
pusha
sbb
call
not
sub
nop
nop
push
add
lods
mov
cmps
gs
mov
in
push
cmp
test
mov
test
sbb
mov
in
jnp
cmp
jae
retf
call
repz
xor
xor
fs
shl
rol
pop
loope
pop
loope
ins
daa
je
adc
bound
add
xchg
dec
pop
imul
test
push
or
out
out
xor
adc
leave
mov
push
cmp
ins
adc
sub
not
adc
ret
fs
push
ss
sub
adc
xor
and
cld
jle
mov
inc
std
xchg
jo
pop
cmps
loop
xor
(bad)
hlt
fld
frstor
mov
aam
stc
cwde
nop
push
lahf
mov
xchg
jb
inc
cli
jne
dec
jecxz
imul
data16
es
pop
mov
imul
sar
std
clc
ror
pop
test
aad
mov
cmp
jns
add
xor
clflush
movs
cmc
repnz
fwait
sub
movs
xchg
(bad)
jle
repz
outs
mov
xchg
loop
or
(bad)
sub
pop
or
ret
and
adc
loop
mov
cwde
sub
cmp
(bad)
sub
pop
pop
int
push
sbb
popa
pushf
inc
mov
pop
mov
daa
gs
push
outs
fs
push
nop
lea
(bad)
aam
xchg
(bad)
iret
lods
jg
xor
add
or
dec
sub
cmp
mov
dec
retf
fisttp
adc
scas
(bad)
shl
cmp
sub
pop
xchg
inc
push
dec
cmp
cmp
out
mov
jmp
or
mov
dec
cli
test
loopne
push
sub
call
icebp
ror
sub
cmp
and
mov
mov
sub
sbb
add
dec
push
imul
cld
sub
push
aam
retf
test
cmp
sbb
jmp
xchg
sbb
popf
mov
or
ret
retf
and
fsub
cwde
add
enter
push
adc
mov
sar
push
jecxz
inc
add
jg
or
xor
pop
add
fstp
mov
adc
fidiv
or
pop
aaa
(bad)
push
cmp
push
movs
data16
hlt
jge
mov
or
sbb
daa
jns
sub
or
add
das
bound
xchg
push
pop
mov
jnp
ja
aam
int3
jmp
pop
shr
add
mov
inc
push
ret
push
pusha
dec
cli
ret
jae
nop
std
call
stc
scas
mov
imul
fdiv
(bad)
xchg
push
xchg
cmp
xchg
jg
mov
xor
jecxz
mov
add
push
stos
(bad)
(bad)
rol
shr
sbb
mov
pop
fwait
lea
std
shl
adc
add
fsubr
ret
push
aaa
add
call
hlt
pop
mov
shl
inc
cwde
xchg
dec
add
xchg
scas
aaa
outs
mov
mov
pop
sbb
dec
and
dec
mov
imul
ja
je
shl
xchg
in
fild
call
je
cwde
sbb
out
and
push
xchg
jp
push
ror
cmp
retf
cs
jnp
push
shl
jae
mov
cmp
and
cmps
test
dec
ds
(bad)
push
into
or
aaa
pop
pop
ret
loop
sub
cmp
cdq
shl
rol
dec
pop
sbb
cmc
out
leave
stos
cdq
imul
push
mov
sub
addr16
(bad)
arpl
sbb
add
lods
xlat
adc
lods
stc
fwait
cs
sub
xor
jb
test
enter
ins
(bad)
cmc
adc
out
rcl
inc
inc
jge
ja
lods
jecxz
dec
sbb
mov
xchg
iret
aas
mov
jne
pushf
adc
add
lods
fdiv
xchg
cmps
xor
mov
mov
sbb
lods
add
mov
pusha
pop
fistp
mov
push
(bad)
cwde
loop
cdq
mov
sub
outs
pop
(bad)
(bad)
xor
pop
retf
push
imul
push
outs
cmps
jmp
xor
fnsave
sub
outs
mov
mov
push
mov
sbb
jle
push
test
fwait
jo
mov
push
adc
shl
mov
clc
dec
jg
inc
pop
not
into
xor
ret
add
add
outs
out
inc
mov
imul
js
aas
push
stos
jb
stc
ds
out
hlt
data16
pop
sub
mov
clc
rol
cdq
dec
loop
es
out
inc
add
jp
pop
sbb
out
mov
jne
sbb
jmp
xchg
jb
in
into
outs
push
(bad)
mov
repz
fdiv
out
add
or
aam
into
aad
mov
jo
push
js
imul
mov
stos
xchg
and
xchg
jl
mov
ins
pushf
pop
inc
and
push
imul
stc
jns
stos
cmp
jmp
xor
lahf
jp
or
push
pop
and
inc
dec
and
sub
leave
mov
adc
add
jne
jb
jge
das
and
mov
cmp
stos
je
sub
add
(bad)
rol
jno
xor
inc
add
ror
add
les
push
jae
inc
(bad)
adc
add
lods
lods
test
in
sahf
mov
jnp
xchg
jg
cmp
xor
imul
push
dec
test
sub
arpl
out
and
repnz
jle
shl
stos
jp
mov
unpckhps
aas
test
ror
add
je
jle
jne
inc
adc
xchg
popf
hlt
pop
ins
lea
jmp
push
xchg
fwait
mov
cmp
xor
sub
jbe
lock
mov
xor
nop
sahf
das
(bad)
retf
imul
iret
cs
cmp
push
xchg
sbb
pushf
aas
sbb
sub
jmp
in
or
push
cs
ret
dec
iret
(bad)
lea
inc
imul
in
push
fs
adc
fmul
in
jo
and
cmps
inc
sbb
add
sbb
enter
push
ds
ja
mov
out
shl
sti
jbe
mov
cmp
xlat
jge
in
jne
dec
and
movs
aas
mov
stos
in
xlat
pop
pop
or
dec
or
sbb
out
rcr
and
or
(bad)
int3
jnp
dec
cmc
jg
out
mov
cmp
or
mov
mov
scas
fisttp
cmps
aaa
(bad)
out
dec
sbb
add
loope
outs
mov
popa
and
adc
xchg
sbb
aam
ss
cdq
movs
pop
test
daa
jmp
call
(bad)
fisttp
cwde
ins
shl
ss
fwait
or
pop
push
in
inc
je
sahf
or
inc
adc
mov
push
aam
add
cwde
inc
mov
aaa
popa
nop
inc
xchg
push
jnp
into
jmp
dec
and
mov
lock
cmp
xor
ds
xor
and
jecxz
jp
repnz
push
arpl
clc
je
jl
or
or
loopne
and
dec
scas
cmp
cmp
cmp
mov
cmps
sub
test
das
xor
mov
xchg
or
pop
mov
loop
mov
jl
pop
sbb
test
push
inc
call
mov
xor
push
out
xlat
xchg
push
pop
ror
(bad)
bound
pop
push
push
std
dec
mov
movs
mul
xor
push
jmp
mov
iret
cs
push
ins
(bad)
lea
repnz
or
sbb
loopne
jo
sub
lock
test
add
jno
fldcw
pop
mov
addr16
adc
aad
sbb
and
sub
xchg
ins
and
out
and
mov
scas
pop
push
mov
jnp
jnp
test
cmp
jnp
pop
inc
and
xchg
aad
cmp
or
test
cld
pop
pop
sti
in
je
lods
pop
mov
dec
out
sub
das
lods
mov
loopne
or
out
sbb
push
pop
call
pop
sbb
popf
add
in
mov
adc
stos
neg
(bad)
sbb
jge
les
and
dec
test
pop
ss
iret
sbb
jae
mov
scas
add
(bad)
pop
shr
fcom
sbb
cmp
popa
enter
jo
fbstp
inc
enter
ret
pop
jle
add
mov
in
push
jno
push
cmc
cli
lahf
mov
adc
hlt
xor
and
leave
imul
jmp
pop
int
aaa
mov
lods
or
jge
pusha
mov
sbb
popf
scas
sub
fldenv
fmul
pop
(bad)
call
pop
cli
sbb
pop
out
std
sbb
sub
pop
jb
imul
inc
sti
xor
and
sbb
repnz
ret
cdq
xor
jecxz
sbb
(bad)
in
dec
and
cwde
not
jns
data16
sti
xchg
pop
jle
mov
jl
not
shr
pop
idiv
call
int
jne
data16
and
cdq
mov
loope
inc
mov
push
std
lahf
sbb
(bad)
popa
sub
jo
jl
nop
fsubr
retf
inc
stc
mov
mov
test
in
cmp
retf
mov
das
out
dec
pop
nop
xchg
add
pushf
jmp
add
mov
or
aaa
ror
add
adc
fbld
ret
inc
fcmovu
mov
xchg
sub
enter
dec
dec
and
cmp
out
in
ss
fwait
cmp
call
mov
call
push
add
jmp
popa
ins
nop
and
movs
push
(bad)
in
ins
sbb
(bad)
bound
cmp
ins
add
je
aas
ss
enter
mov
dec
(bad)
sahf
repnz
ins
and
cmp
leave
mov
sub
hlt
fst
mov
add
mov
call
xchg
xchg
xor
int3
push
mov
(bad)
ror
scas
xchg
movs
pop
xchg
mov
sahf
and
mov
popa
xor
lods
adc
shl
add
icebp
xor
cmp
daa
loope
mov
ins
and
sahf
xchg
cwde
(bad)
xchg
rcl
adc
ds
scas
cwde
sub
mov
je
daa
std
outs
cmp
pop
jae
ss
pusha
add
movs
fldcw
shl
call
xchg
push
inc
data16
add
daa
add
retf
dec
stos
and
arpl
out
lock
cmp
clc
push
ds
pop
neg
arpl
clc
jo
adc
fwait
xchg
outs
lahf
stos
out
push
push
inc
inc
ja
jo
pop
mov
or
mov
(bad)
add
call
sar
(bad)
jbe
xor
jg
push
gs
aam
fisub
inc
stos
jge
mov
or
icebp
outs
test
out
(bad)
xor
fsub
cmp
rol
sbb
or
dec
sub
or
jo
pusha
fist
dec
cmps
cmp
jno
scas
gs
clc
mov
or
push
call
das
imul
fistp
lds
push
pop
mov
jp
sbb
inc
cwde
stos
sub
test
popa
sahf
and
dec
lock
cmp
inc
adc
add
sar
cld
stc
scas
into
ficomp
sbb
les
ret
sbb
cs
or
aaa
cmps
loope
imul
xchg
xor
push
sti
neg
jno
ror
xor
sbb
jbe
dec
mov
jb
hlt
fadd
loopne
clc
dec
xchg
cmp
push
icebp
(bad)
das
jne
jae
mov
sbb
adc
jmp
adc
fst
mov
lock
pop
cmp
in
jae
xchg
xchg
ja
add
xor
add
jmp
loop
dec
shr
dec
dec
jmp
jle
and
pusha
cmp
cdq
xchg
pop
imul
lods
push
xor
enter
push
pusha
dec
and
fnsave
lds
out
mov
inc
xor
jno
dec
in
xchg
xlat
(bad)
ja
ds
xor
sub
mov
cmovo
and
push
push
fisubr
ja
gs
sbb
dec
xor
jno
fstp
fwait
xchg
xchg
outs
mov
popf
loope
mov
lea
call
mov
pop
jl
lock
lods
mov
psllw
fldcw
loopne
cmp
fimul
jg
add
test
mov
inc
or
in
jnp
daa
jp
pop
int3
lahf
in
push
mov
aam
fldcw
aas
xchg
jne
mov
pop
cmc
leave
aad
push
je
push
call
sub
pop
inc
jle
adc
jnp
std
fistp
shl
add
and
clc
mov
adc
cli
mov
mov
adc
push
icebp
jbe
and
hlt
xchg
xacquire
sub
add
outs
je
cs
mov
(bad)
hlt
pop
mov
xor
mov
ja
sub
mov
ret
mov
enter
pop
dec
lods
cmp
inc
mov
mov
data16
bound
xchg
push
hlt
sub
ins
pop
out
rcl
inc
mov
enter
sbb
scas
rcl
or
sar
(bad)
mov
nop
dec
pop
mov
push
in
and
and
aad
dec
adc
sub
jmp
push
fcmovu
mov
ffreep
fwait
xor
adc
shl
clc
xchg
scas
icebp
jne
and
jecxz
xchg
iret
mov
mov
sbb
cld
xchg
xchg
jno
out
push
mov
js
mov
ds
cmp
cwde
adc
rcl
mov
aad
inc
xchg
add
bound
inc
add
imul
and
xchg
add
jne
mov
sbb
mov
xor
or
movs
ja
cdq
in
sub
mov
sbb
jae
popf
inc
xor
outs
or
imul
hlt
ret
adc
rcr
mov
push
fdiv
xor
push
push
repnz
push
mov
pop
fisub
js
adc
mov
jne
jmp
xchg
sub
push
or
rol
sbb
dec
pop
push
and
fist
(bad)
ror
scas
(bad)
cli
xor
fs
pop
(bad)
hlt
ins
cmc
retf
push
mov
inc
push
cmps
add
clc
cmp
jge
cdq
sbb
rcl
loop
mov
mov
sbb
push
mov
sub
sahf
aas
push
inc
and
call
fs
aas
je
sub
adc
idiv
dec
mov
dec
into
mov
xor
xor
sbb
inc
dec
add
test
xor
movs
cli
xor
sbb
test
lock
(bad)
mov
jne
or
bound
add
dec
es
mov
test
lahf
call
ret
ins
xchg
sbb
retf
repnz
pop
jno
fs
fldcw
jecxz
icebp
cld
shr
dec
pushf
mov
dec
mov
xor
scas
mov
(bad)
xor
xchg
cwde
mov
fidiv
mov
ja
mov
scas
test
dec
xchg
and
enter
pushf
pop
xor
push
(bad)
inc
push
js
shl
test
sub
adc
mov
mov
outs
push
xor
mov
into
call
cld
xor
out
adc
mov
pop
add
xchg
scas
pop
mov
push
ret
xchg
mov
repnz
ss
imul
ins
add
(bad)
(bad)
out
jns
ja
retf
xlat
out
inc
mov
out
in
cld
fist
mov
xchg
xchg
mov
js
push
add
pop
imul
mov
das
lea
mov
arpl
sbb
add
dec
sbb
int
shl
add
test
inc
repnz
stc
inc
es
mov
into
ror
sub
sub
shr
popa
mov
or
out
dec
loopne
xchg
jmp
sub
pop
(bad)
repz
das
sbb
push
mov
xor
inc
mov
cdq
out
stos
inc
push
xchg
cmps
pop
rcr
clc
inc
ret
jnp
mov
add
push
mov
jb
das
mov
push
mov
pop
out
mov
stc
call
jp
lahf
mov
or
mov
cmp
test
imul
scas
jnp
push
cmp
ret
push
xchg
jae
outs
cmp
pop
cmp
or
lds
hlt
xchg
and
sbb
out
or
or
stc
pop
retf
mov
xor
rcl
mov
mov
hlt
push
(bad)
aas
nop
test
gs
fs
pop
push
jg
xchg
push
(bad)
push
fdivr
cmc
add
call
mov
aad
sub
push
and
loop
sti
bound
aam
cwde
rcr
mov
iret
das
mov
aad
sbb
or
push
pcmpeqw
jbe
inc
sti
add
nop
popf
add
dec
in
and
stc
cmps
ins
jge
mov
xor
add
and
cwde
mov
adc
cmp
fbstp
mov
(bad)
iret
outs
movs
or
fild
ins
mov
(bad)
jmp
adc
or
fs
push
inc
mov
jmp
into
fst
enter
fwait
sub
dec
and
push
xchg
movs
push
adc
adc
jmp
xor
mov
cli
inc
pop
fiadd
dec
ds
pop
repnz
sbb
adc
shl
add
sub
bnd
ins
inc
xchg
jle
sub
push
adc
in
jbe
jl
loop
sbb
xchg
movs
lds
scas
or
mov
repz
jecxz
mov
xchg
xlat
pusha
aaa
test
mov
pop
addr16
pop
xchg
vpavgb
das
mov
daa
xor
out
push
push
out
stos
push
jmp
movs
lods
scas
and
ret
push
pop
or
inc
jmp
adc
into
mov
in
add
iret
rcr
push
(bad)
adc
sub
cmp
das
sar
(bad)
add
cmp
gs
jmp
int
inc
push
bnd
stos
cli
fisub
ins
aam
mov
loope
xlat
pop
cdq
xchg
or
sub
push
cmp
sub
cwde
add
dec
stos
adc
pop
xor
sar
jmp
mov
clc
pop
push
inc
arpl
test
nop
mov
cs
adc
or
mov
jbe
into
jo
inc
push
dec
sub
push
add
fsub
movs
inc
ja
xor
fwait
(bad)
loopne
mov
imul
pop
test
fwait
push
pusha
cwde
add
jmp
jp
or
inc
fwait
hlt
mov
lds
mov
sub
je
ret
xor
or
mov
mov
in
mov
and
ror
stc
iret
into
inc
sbb
int3
and
loop
call
cmc
syscall
jnp
jns
ins
test
mov
adc
call
push
cmp
add
pop
call
pop
or
mov
pop
pop
adc
rol
leave
xor
test
cmps
test
dec
push
mov
inc
xchg
adc
xchg
outs
repnz
imul
jecxz
idiv
imul
sbb
repnz
add
stos
dec
xchg
jbe
arpl
jmp
(bad)
xor
lahf
or
mov
pop
xor
jae
cwde
cmps
inc
push
stos
shr
mov
mov
push
xor
inc
adc
(bad)
push
outs
jmp
movs
outs
mov
repnz
xchg
daa
repnz
test
pop
les
bound
cs
add
rcl
rcl
mov
icebp
pushf
rcr
push
xchg
xchg
ins
daa
sahf
mov
and
frstor
loopne
and
sub
and
jns
ins
ror
(bad)
mov
stc
pop
xchg
in
mov
shr
gs
ret
sbb
or
popf
sbb
pop
xchg
fcomp
sar
mov
cmp
and
push
aaa
pop
je
cmp
and
rcl
repz
mov
jl
jbe
call
jne
rcl
mov
pop
(bad)
retf
retf
dec
jle
cld
xlat
mov
dec
and
or
mov
cwde
or
jecxz
js
dec
in
(bad)
repnz
jno
fst
jge
lods
mov
cld
ja
mov
loope
sub
jp
push
mov
int3
fild
lds
xchg
hlt
repz
pop
popf
arpl
mov
fidivr
jg
loop
adc
fisubr
out
ins
mov
pop
and
icebp
stos
pushf
pop
sti
push
jge
scas
and
ss
scas
inc
adc
icebp
jl
nop
inc
pushf
jmp
add
call
inc
cld
jle
pop
adc
dec
mov
mov
xchg
ret
nop
pop
cmp
mov
jns
(bad)
sub
add
inc
dec
mov
lahf
inc
push
mov
(bad)
mov
cmc
mov
dec
pop
ret
ja
xor
fs
dec
fld
push
stos
popa
mov
jns
fwait
call
pushf
(bad)
ins
sub
xor
xchg
cmp
cmp
aam
push
scas
mov
xchg
adc
and
dec
mov
xor
clc
clc
cmp
movs
sub
mov
cmp
cmp
push
mov
xor
lahf
lea
dec
or
mov
mov
daa
mov
cmp
pop
in
stos
mov
imul
imul
jne
or
and
fsubr
sbb
jns
xor
cwde
cmp
and
inc
mov
es
pop
inc
sub
enter
pop
add
dec
lods
jp
(bad)
call
stos
popa
imul
sbb
xchg
pushf
sub
mov
cmp
sbb
push
or
aam
xor
or
mov
lods
push
jns
and
sub
pop
or
sub
dec
stc
rol
pop
retf
pop
sti
out
ficomp
and
mov
in
lods
popa
add
sub
test
dec
aam
or
rcl
dec
jg
jg
xchg
cs
xchg
hlt
push
icebp
daa
mov
and
popf
fdiv
clc
fmul
push
mov
int3
xor
fdiv
mov
lahf
xchg
jmp
sub
call
js
outs
adc
add
jle
push
lods
mov
add
jmp
jns
jle
mov
and
adc
std
imul
iret
mov
aad
ja
xor
repz
cli
sahf
or
dec
out
outs
stc
test
adc
push
jnp
adc
sub
mov
inc
sub
cmps
push
mov
and
mov
ror
push
cmps
pop
mov
neg
std
mov
sbb
add
xor
ret
push
and
aas
pop
mov
outs
dec
icebp
repnz
mov
imul
retf
inc
loop
cmp
fst
lock
mov
fldenv
(bad)
jnp
add
test
pushf
or
push
(bad)
push
in
aam
arpl
sbb
mov
adc
je
xor
fdivr
add
xchg
scas
pop
outs
es
les
xchg
call
out
(bad)
stc
addr16
jmp
lahf
(bad)
sbb
arpl
mov
jmp
dec
mov
dec
pop
push
push
js
jecxz
sbb
push
in
test
jne
or
ins
out
jge
jnp
inc
imul
jb
mov
loopne
xchg
and
inc
mov
mov
cdq
mov
sbb
call
cmc
movs
xor
std
push
stos
mov
outs
push
xchg
das
push
js
mov
mov
(bad)
adc
fnstsw
sbb
cmp
sbb
dec
cmp
ds
xchg
push
pop
call
ror
outs
and
pop
and
mov
add
ficom
cmp
push
and
adc
inc
lahf
scas
inc
cmp
call
(bad)
cmovle
xor
inc
out
push
call
or
das
lahf
xor
out
fpatan
dec
pop
sbb
cwde
mov
adc
(bad)
leave
or
vpunpcklqdq
push
push
cmp
add
push
add
cmp
mov
xor
loop
hlt
pop
enter
addr16
inc
cs
push
xlat
lods
ret
imul
xchg
inc
lods
sub
or
mov
push
xchg
dec
cmp
lods
or
mov
popf
xchg
into
push
es
clc
ret
add
push
imul
jae
ror
adc
shl
sbb
outs
push
push
aas
scas
add
ret
enter
xchg
in
xor
loopne
sub
and
lock
dec
clc
adc
cdq
(bad)
cmp
cmp
mov
mov
in
jae
mov
clc
and
push
xchg
test
in
jb
das
xchg
popf
and
ror
mov
jb
xchg
(bad)
or
or
jmp
xchg
and
mov
inc
pop
or
sub
mov
or
outs
jg
and
stc
jmp
xchg
dec
xor
sub
cmp
sbb
mov
int
fidiv
rol
and
fstp
jp
js
push
icebp
adc
mov
adc
ds
lods
aas
mov
cmps
imul
xchg
fnstenv
imul
xor
xchg
shl
pushf
leave
movs
jmp
push
fisttp
mov
xor
lahf
and
adc
cmp
outs
add
cld
mov
or
pusha
inc
stc
jp
mov
bound
push
jp
push
shl
inc
sub
test
add
push
(bad)
cmp
inc
mov
mov
pusha
xchg
test
cmc
jp
pop
push
sbb
push
xor
jbe
mov
(bad)
and
lahf
cs
or
sub
in
sub
je
pop
mov
(bad)
pop
ficomp
xchg
jp
aas
fcomi
lahf
xor
mov
das
mov
xor
cmp
jge
and
aas
push
aas
mov
stos
dec
sbb
adc
movs
pop
lock
addr16
call
out
fbstp
pop
mov
inc
fwait
pop
inc
xchg
imul
xchg
and
outs
ins
in
out
retf
scas
jnp
dec
call
test
test
arpl
and
ret
jmp
dec
pop
fwait
ret
scas
cli
(bad)
cmp
mov
mov
ret
pop
push
dec
lds
jns
loopne
arpl
inc
ror
ror
test
xor
out
fisub
(bad)
fistp
out
(bad)
xor
sub
out
mov
jp
es
jl
out
ins
mov
adc
out
mov
test
adc
aad
adc
jne
sub
xchg
ins
xchg
popa
aas
add
mov
add
jecxz
inc
sahf
jecxz
jo
jo
jb
sbb
aad
mov
pop
enter
cmc
cwde
sbb
xor
mov
sti
sar
loopne
push
scas
sti
mov
xchg
(bad)
out
sub
mov
mov
cmp
rol
out
(bad)
iret
ffreep
pop
sbb
mov
inc
cmp
and
fcom
mov
jb
scas
and
sbb
fdiv
in
dec
add
pop
adc
arpl
cmp
xor
push
dec
outs
jae
sti
movs
ja
push
loope
jno
inc
out
xchg
rcr
lods
rol
jmp
ds
jbe
add
cdq
mov
xchg
pusha
into
sbb
scas
dec
ins
xchg
jne
shr
ins
sar
out
add
popf
loope
in
push
or
mov
pop
daa
adc
iret
sbb
movs
push
pop
test
adc
popf
(bad)
push
ins
dec
repz
test
inc
jbe
outs
and
push
hlt
pop
or
in
inc
dec
jno
pop
adc
(bad)
gs
mov
fdivrp
push
fs
push
out
js
in
out
mov
fdivr
sub
cmp
dec
shr
dec
adc
retf
aad
cld
aaa
fisub
fisub
push
mov
psllq
adc
cmps
sub
sbb
je
jbe
dec
dec
sbb
jg
mov
lods
sahf
mov
sbb
pop
pop
loope
(bad)
jbe
hlt
jp
aas
lock
push
inc
popf
daa
pushf
push
cmp
sbb
jl
jb
mov
push
call
dec
mov
dec
add
lods
mov
out
mov
xchg
leave
inc
jmp
jnp
mov
lock
inc
jb
sub
sub
adc
jle
sbb
adc
outs
jmp
mov
jne
sbb
jmp
and
add
clc
loop
lahf
mov
mov
adc
ret
mov
ins
jo
add
pop
add
pop
retf
aad
arpl
adc
sbb
arpl
loopne
std
mov
aas
sahf
aad
aam
jb
or
je
inc
add
or
shl
enter
add
mov
movnti
call
mov
mov
sub
mov
mov
pop
inc
inc
cld
xchg
sbb
(bad)
xchg
xchg
pop
inc
adc
ja
mov
xor
mov
inc
std
aas
in
rol
dec
pop
inc
data16
pop
fisubr
(bad)
into
dec
xor
(bad)
sub
cdq
rcr
addr16
bound
sti
jbe
push
inc
or
push
mov
dec
int
xor
mov
pop
fld
cmp
push
mov
xor
js
dec
loop
jnp
jle
push
iret
cmps
cmps
dec
(bad)
rcr
fidivr
sub
pop
retf
fist
test
or
mov
scas
jb
adc
push
adc
push
fmul
xchg
inc
inc
push
and
rol
push
rcl
jmp
dec
in
arpl
test
mov
movs
std
cmp
push
mov
jns
shl
cmp
add
clc
ret
rcl
sbb
push
lods
ret
mov
dec
jl
pop
(bad)
cld
or
mov
rcl
jg
scas
and
dec
xchg
les
cdq
div
into
sub
sti
popa
out
or
adc
sub
jecxz
fild
(bad)
push
dec
push
les
mov
out
je
ss
popf
repz
xor
repnz
adc
into
sub
ret
imul
fnstenv
cwde
xor
push
xchg
arpl
test
or
stos
mov
test
xchg
xchg
mov
iret
push
or
mov
mov
jnp
and
shl
movs
leave
sub
cmp
cmps
cmp
dec
(bad)
call
pop
ins
loop
sub
xor
and
or
inc
add
repz
in
add
nop
xor
xor
adc
xor
fwait
jmp
adc
mov
mov
adc
js
mov
jle
or
add
int3
(bad)
lock
dec
xor
jecxz
inc
inc
mov
mov
sti
lods
in
mov
sbb
adc
addr16
mov
sbb
ds
cmc
mov
in
push
ja
mov
pop
pop
mov
(bad)
loopne
xchg
aaa
dec
imul
cli
std
push
shl
jg
and
jmp
int
call
xor
pop
lahf
sbb
push
inc
and
out
sub
out
movs
(bad)
sub
mov
pop
hlt
daa
inc
mov
bound
shl
mov
adc
mov
pushf
call
mov
lods
mov
cwde
(bad)
dec
bound
mov
in
fimul
fnsave
outs
adc
xchg
mov
fwait
mov
cmp
sar
aaa
mov
int
sub
xor
mov
icebp
call
cld
dec
sub
jmp
inc
ins
bound
loope
sub
jno
bound
addr16
jne
out
fadd
mov
outs
dec
jmp
scas
pop
dec
das
sbb
aam
arpl
lods
adc
push
push
lahf
and
xchg
aaa
test
cmp
(bad)
popa
popa
out
sub
xor
mov
mov
popa
jmp
cli
(bad)
xor
sbb
mov
mov
push
cmps
push
sbb
lods
retf
cmp
cmps
push
(bad)
out
mov
push
inc
sbb
sub
adc
je
pushf
adc
mov
in
loopne
mov
popa
movs
scas
jmp
inc
in
inc
inc
cmp
pop
sbb
shr
out
out
fstp
mov
cmp
fs
and
stos
sub
cmps
pop
xchg
adc
or
pop
jb
dec
push
xor
add
cdq
dec
dec
sar
adc
(bad)
pop
cld
pop
cmps
sub
jo
loop
xor
jae
add
enter
movs
xchg
inc
lds
pusha
and
cmp
fnsave
sti
popa
sub
or
rol
sub
or
cwde
and
inc
loope
test
sbb
bound
and
jp
std
sbb
push
xchg
sub
xchg
pop
sbb
arpl
add
inc
and
hlt
bound
xchg
fsubr
mov
cmp
dec
lock
scas
mov
call
pop
inc
mov
mov
retf
push
pop
jg
jge
das
dec
dec
and
pop
cmc
pop
icebp
ins
add
jo
imul
stc
mov
pop
push
jmp
jnp
(bad)
bound
test
imul
mov
sub
sub
mov
sub
int3
pop
push
sar
jno
jecxz
movs
push
inc
dec
push
cmp
mov
out
bound
mov
mov
(bad)
push
int
ja
mov
idiv
inc
sbb
adc
cwde
add
ret
xchg
std
mov
out
xchg
fisub
xchg
(bad)
cmp
xor
das
mov
jae
cmps
je
mov
sub
or
mov
popf
xlat
dec
cmp
test
test
test
jo
and
aas
(bad)
mov
xchg
int
sbb
mov
cmp
xchg
loopne
push
(bad)
repz
hlt
sar
and
out
in
(bad)
fst
fisub
fdivrp
outs
leave
mov
cmp
push
retf
mov
das
stc
leave
mov
enter
call
sbb
push
adc
rol
(bad)
(bad)
lds
dec
jno
scas
in
and
jp
das
mov
fnstenv
push
fldcw
mov
dec
jns
dec
(bad)
jmp
sub
add
jnp
test
mov
mov
jbe
mov
sbb
out
loop
adc
mov
and
mov
mov
jnp
mov
enter
sub
add
es
push
add
cmp
lock
pop
(bad)
mov
mov
push
imul
jns
cmps
outs
mov
adc
add
in
mov
pop
(bad)
mov
and
imul
sbb
push
es
movs
rcl
je
pop
ds
mov
(bad)
stos
js
dec
cwde
mov
dec
push
and
out
add
cmp
test
pop
das
mov
and
pop
fwait
(bad)
repz
out
pushf
xor
xor
out
or
icebp
out
dec
dec
mov
lock
shl
jne
or
or
outs
jg
push
add
(bad)
rcl
in
(bad)
rcl
movs
cmp
and
and
scas
and
neg
mov
(bad)
or
adc
retf
sar
or
or
into
add
pop
fsub
(bad)
pop
push
sub
or
fwait
push
push
add
iret
jae
push
jne
mov
adc
sahf
push
mov
and
adc
pop
leave
inc
test
xor
fwait
or
sub
arpl
sub
sbb
fcom
fwait
xchg
icebp
pop
or
mov
sub
fidiv
lods
faddp
rcl
push
inc
mov
or
aam
pmullw
lahf
jg
out
ins
and
shr
fsub
jo
(bad)
iret
cmps
out
imul
inc
sub
inc
clc
(bad)
mov
dec
mov
pop
fs
adc
xchg
or
mov
retf
inc
not
push
stos
xchg
mov
stc
pop
rcr
adc
jg
call
cmp
test
cld
dec
fidiv
add
jmp
bound
fisttp
popf
mov
pop
cmps
outs
or
jecxz
sbb
popa
out
mov
or
into
or
dec
mov
or
(bad)
into
jmp
jmp
in
xchg
xor
lock
fcmovne
adc
mov
xchg
call
dec
and
fisub
pop
or
sbb
pop
xor
jns
cmps
sbb
lock
push
stos
icebp
stos
ins
sub
out
(bad)
dec
fst
adc
int
lea
mov
add
popa
mov
jmp
jmp
xchg
lock
mov
add
mov
ret
shl
push
jmp
lea
add
rol
dec
xor
add
mov
mov
mov
push
icebp
(bad)
mov
sahf
dec
inc
fsubp
bound
xchg
push
scas
pusha
call
mov
mov
(bad)
dec
into
inc
xor
push
mov
(bad)
mov
add
into
outs
inc
aas
mov
xchg
mov
(bad)
push
mov
dec
(bad)
xchg
addr16
push
mov
push
aad
dec
(bad)
jmp
dec
xor
sar
leave
mov
enter
ror
jg
mov
outs
fldcw
lods
push
push
pushf
das
aaa
sub
xchg
arpl
fisttp
xor
or
or
jbe
es
sub
push
jecxz
fs
jge
cmp
pop
and
and
xchg
push
aam
lds
mov
xchg
push
cwde
fs
(bad)
cmps
cmps
call
scas
jp
bound
sub
inc
out
sahf
mov
(bad)
(bad)
push
movs
mov
std
jns
pop
not
cdq
lea
xchg
add
jle
dec
stos
arpl
call
ret
sub
sub
sbb
jns
ja
jne
cmps
or
mov
daa
mov
xor
inc
(bad)
daa
lea
arpl
lock
mov
dec
pop
outs
dec
add
mov
aam
jge
cmp
(bad)
int3
push
sbb
scas
dec
ret
ud1
and
pusha
imul
push
mov
inc
neg
inc
(bad)
clc
icebp
pop
xchg
inc
hlt
dec
pop
mov
or
mov
mov
lods
cmp
in
fld
jne
xor
loop
mov
sub
add
or
std
daa
faddp
nop
push
jl
out
or
daa
push
and
push
jmp
jmp
fldenv
mov
into
adc
jo
popf
das
and
add
jo
scas
(bad)
popf
sbb
pop
inc
cmp
cmp
iret
and
cmps
addr16
or
mov
je
mov
push
ins
xchg
or
inc
pop
xchg
mov
(bad)
pusha
fucomi
into
int3
xor
cmc
cdq
sar
neg
pop
and
or
(bad)
xchg
xchg
int3
imul
xlat
pop
(bad)
fmul
mov
mov
cmps
dec
jb
in
sub
data16
sbb
test
setge
or
sbb
and
mov
xor
in
clc
outs
fwait
iret
or
scas
jno
jge
bound
jae
push
inc
jmp
xor
mov
sbb
inc
push
jl
sbb
and
cmp
sbb
fstp
out
pop
xchg
xchg
loope
cmc
cmp
ret
jecxz
push
mov
fst
inc
sbb
xor
cmc
mov
bound
sbb
sahf
sti
loope
dec
(bad)
js
ret
cmp
sbb
fst
and
push
push
xchg
fwait
mov
std
mov
inc
xchg
dec
push
sub
mov
jae
mov
jno
ror
pop
cmp
enter
aaa
aam
pusha
add
dec
cmps
jae
test
xchg
pop
pop
pushf
retf
jb
lods
pop
or
repz
jns
jno
jge
fld
(bad)
js
test
mov
mov
add
cdq
adc
xchg
aaa
pushf
das
mov
dec
dec
or
jp
inc
adc
call
or
jge
xchg
scas
lahf
imul
scas
in
lods
ja
pushf
mov
jbe
retf
inc
sub
aaa
and
clc
ss
push
dec
popa
xchg
dec
mov
je
pop
aad
pop
push
mov
test
mov
outs
mov
out
push
(bad)
mov
pop
push
mov
scas
pop
pop
arpl
inc
mov
jmp
int3
fldenv
sbb
push
and
or
pop
dec
xlat
mov
sub
std
and
jmp
imul
jbe
fistp
dec
repnz
mov
data16
or
inc
out
mov
fiadd
fld
ins
or
aas
xor
aam
push
mov
in
in
sar
cwde
ror
sar
into
mov
sub
test
lods
sbb
adc
mov
jecxz
push
or
pop
out
push
or
(bad)
lock
loopne
pop
enter
fbld
adc
rol
test
inc
rcr
jo
adc
int
call
inc
and
jae
cmp
jae
and
fcom
cdq
sar
add
xor
sahf
ins
lods
jnp
dec
xor
mov
xor
push
mov
popa
jecxz
sar
clc
out
arpl
mov
call
sbb
jno
dec
repz
cwde
and
ss
cmps
push
adc
call
or
repz
loope
ret
mov
mov
pushf
dec
dec
mov
inc
cs
xchg
stos
sub
dec
inc
add
stc
in
loop
add
cld
(bad)
stos
jns
xor
mov
ss
call
dec
test
lods
jmp
jge
adc
xchg
sub
add
lods
and
push
adc
loopne
ss
int
or
and
adc
ja
mov
push
sbb
iret
arpl
mov
or
or
ds
mov
xchg
inc
outs
ret
dec
into
push
sbb
inc
pop
shr
cmp
(bad)
cli
popf
ror
fidivr
scas
dec
fadd
sbb
std
sahf
jge
jne
push
pop
imul
add
test
pop
jmp
aam
adc
je
pusha
das
mov
sub
xchg
les
and
adc
sar
sub
xlat
rdmsr
pop
mov
pop
sti
add
mov
mov
js
cmp
sub
cmp
arpl
sbb
mov
cld
fst
cmp
out
icebp
adc
xchg
cmp
sbb
jns
nop
leave
js
lods
mov
sbb
xor
jmp
sub
and
push
xchg
mov
retf
inc
cmc
lea
ja
add
out
icebp
(bad)
ror
xor
add
mov
rcl
and
clc
mov
repz
mov
(bad)
pop
adc
and
mov
or
aad
pop
or
push
mov
sbb
xchg
imul
ja
imul
xchg
aas
cs
scas
fwait
lods
aam
jbe
or
mov
cmps
dec
and
inc
ds
xchg
popf
pop
pop
aas
out
xchg
xlat
aad
or
ret
add
push
pop
adc
mov
pop
hlt
ret
mov
add
dec
fnsave
out
inc
stos
adc
shr
lds
retf
pop
call
inc
aad
adc
movs
in
ds
sbb
in
sub
icebp
adc
cmp
fs
mov
(bad)
jno
sbb
xlat
hlt
fst
dec
xchg
cmp
js
sbb
cmovl
cmp
in
data16
jecxz
pop
mov
dec
int
addr16
pop
test
in
mov
mov
push
gs
cmps
add
fsubr
pop
in
ror
xchg
stos
adc
push
adc
test
inc
mov
adc
jecxz
adc
call
pushf
mov
jle
or
sbb
(bad)
jle
xchg
add
(bad)
xchg
mov
cmps
iret
and
mov
push
rol
sub
repnz
mov
xor
shl
bswap
(bad)
pushf
inc
mov
xchg
sub
movs
daa
aad
ins
ret
xchg
leave
(bad)
lea
popf
test
pop
adc
dec
mov
fs
add
adc
pushf
dec
or
inc
mov
or
push
fdiv
mov
(bad)
stc
mov
xchg
jp
cmp
cmp
push
cmp
loop
sbb
(bad)
pop
enter
(bad)
mov
int3
sbb
add
xor
mov
pop
fs
adc
cmp
add
or
jb
mov
stos
jns
(bad)
jns
dec
xchg
mov
xor
mov
push
rcl
push
aad
sub
and
sbb
gs
mov
pop
add
lods
jae
retf
jp
dec
mov
aas
jmp
lahf
int3
add
out
mov
cmp
out
int3
pop
fwait
les
in
stos
dec
pop
push
shr
push
js
xchg
fmul
(bad)
hlt
cmp
pop
xor
push
jl
aad
and
ja
pop
scas
sub
pop
cmc
int3
adc
jl
xchg
fld
out
fisubr
jg
cwde
xlat
pop
sbb
push
adc
iret
nop
dec
lds
or
add
pop
pop
push
pop
fmul
pusha
add
repz
imul
jae
mov
inc
lods
nop
push
cmp
cmp
movs
mov
call
sbb
pop
mov
in
xor
cdq
adc
xor
fistp
fild
xor
arpl
sahf
inc
xchg
sbb
gs
enter
dec
addr16
fldlg2
popa
cmp
repnz
lock
add
pop
add
cmp
lock
leave
sbb
int
adc
jl
add
and
aad
mov
popf
in
dec
mov
fnstcw
dec
test
dec
sbb
inc
mov
into
arpl
mov
mov
arpl
adc
or
cmp
dec
daa
sub
mov
imul
je
pop
jp
loope
mov
inc
test
clc
fst
xchg
fwait
movs
fs
jnp
cmp
xchg
add
cs
imul
pop
add
xor
stos
pop
sbb
cli
rcl
fnstsw
mov
mov
arpl
lock
cmp
push
in
ins
push
retf
push
mov
xlat
add
or
inc
and
push
jnp
jnp
mov
inc
jmp
mov
dec
out
inc
xchg
pop
rol
xor
inc
cwde
dec
jge
lock
jno
cmp
pop
mov
fprem
outs
(bad)
in
(bad)
jg
dec
(bad)
pop
add
arpl
sar
cmps
fist
jno
cmp
add
fiadd
ror
push
loop
call
or
and
inc
push
loopne
mov
xchg
inc
jmp
in
jmp
jg
or
in
leave
cmc
and
jns
cmp
jp
js
out
xor
aam
push
jb
popf
push
push
sub
int3
adc
aaa
leave
outs
sbb
add
cmp
lock
shl
dec
add
pop
test
cmps
dec
cli
lods
pushf
dec
aam
sbb
leave
iret
leave
hlt
mov
in
arpl
sub
cdq
in
es
jl
xchg
lock
rol
(bad)
rol
mov
adc
movs
ins
gs
push
mov
(bad)
jg
into
push
xchg
xchg
xchg
or
popf
or
pushf
adc
cmp
jmp
pop
movs
shl
jo
cmp
cmp
sub
ds
cmp
repnz
call
bound
ror
les
cmc
dec
leave
push
out
das
into
pop
or
dec
sub
and
mov
xor
dec
lods
add
mov
retf
hlt
outs
cmp
fidiv
pop
(bad)
call
jo
xor
cld
pop
push
fadd
dec
inc
aas
imul
mov
adc
cmc
add
add
adc
sbb
mov
ret
jmp
repnz
fisubr
out
mov
shr
cmp
das
iret
pop
cmp
adc
dec
aas
stos
lods
mov
adc
ret
mov
(bad)
mov
jmp
mov
rol
cdq
mov
out
inc
dec
je
(bad)
and
cmp
jnp
add
mov
retf
pusha
adc
call
aad
add
jo
fnsave
push
repz
dec
cmp
sbb
mov
cmp
shr
or
clc
fcomi
in
mov
leave
inc
push
mov
lds
lea
mov
xchg
add
pop
add
xchg
retf
mov
test
jge
lock
imul
les
mov
(bad)
in
(bad)
mov
cmp
dec
lahf
shr
and
mov
sub
xchg
sub
mov
lea
pop
and
pop
retf
xor
stos
xchg
pop
adc
clc
and
lds
fsub
push
fiadd
add
in
mov
gs
add
jns
adc
imul
push
retf
cmp
push
ss
mov
je
mov
adc
cmp
jg
dec
call
les
cmp
cmps
mov
jmp
jmp
nop
dec
mov
rcr
imul
js
into
out
popa
leave
pop
fadd
fwait
mov
mov
push
fsubr
outs
nop
lods
and
push
scas
mov
adc
inc
inc
into
lea
jmp
adc
mov
pop
not
cli
adc
stos
cmps
mov
add
es
jge
(bad)
inc
push
jmp
push
mov
popf
xor
cmp
jle
shr
jno
push
cdq
sbb
mov
adc
mov
scas
fisttp
mov
mov
mov
mov
adc
ins
inc
xlat
and
loopne
shr
adc
and
retf
retf
xchg
adc
nop
adc
dec
leave
or
push
test
retf
pop
push
popa
loope
inc
lahf
mov
(bad)
jmp
sar
sbb
jbe
mov
mov
mov
sar
std
add
rcl
dec
cmp
add
or
cli
fimul
jo
(bad)
push
push
pop
not
sub
inc
int
scas
and
lods
pushf
lds
shl
daa
out
mov
mov
cmc
ret
data16
push
jecxz
mov
xor
jecxz
(bad)
sbb
loopne
test
aam
jne
cmp
scas
retf
cs
icebp
mov
jecxz
push
sub
mov
add
mov
lds
imul
or
les
jns
cdq
mov
or
pusha
pop
push
lods
jne
jmp
test
out
xchg
aaa
dec
(bad)
inc
in
fwait
xor
icebp
das
mov
cmc
inc
add
fadd
in
aad
push
lods
sbb
pop
cmp
cmps
bound
cmp
je
daa
enter
retf
sub
push
xor
in
xchg
cld
popf
adc
ret
and
das
in
leave
inc
out
dec
pop
push
imul
xor
xlat
lds
ror
xchg
or
jg
jno
fild
fild
jmp
std
mov
sbb
pop
lock
or
adc
cld
pop
inc
pop
cmps
jp
pushf
sub
xchg
push
cld
dec
fisttp
inc
dec
(bad)
aam
or
popa
call
jge
and
mov
idiv
xor
sti
out
scas
push
pop
lods
sub
scas
sahf
ret
mov
ret
movs
and
pop
retf
sbb
cmp
jl
aas
push
fsub
(bad)
mov
sub
call
out
mov
shr
push
push
pop
call
sbb
repz
xchg
mov
xor
pop
mov
dec
aaa
lods
xchg
sahf
clc
std
push
and
lahf
pop
fld
test
push
jg
push
ret
add
or
loop
dec
sub
and
fstp
cmp
jmp
movs
arpl
aad
inc
shl
ins
adc
dec
sub
or
cmp
push
dec
add
and
fldcw
add
jae
pop
pop
cmp
and
in
das
dec
neg
mov
mov
mov
popa
aaa
stc
fistp
aam
aas
adc
sti
xchg
sbb
daa
cdq
imul
xor
mov
sub
cmp
in
or
test
rol
aad
adc
push
int
and
and
xor
mov
fist
xchg
push
out
xchg
test
ins
mov
pop
inc
in
in
mov
(bad)
scas
xchg
pop
(bad)
clc
and
outs
jecxz
in
pop
out
pop
inc
dec
dec
jg
jge
int3
or
mov
ret
call
push
xchg
call
cmp
fnstenv
addr16
mov
dec
shl
inc
jnp
sahf
mov
push
or
fadd
xchg
int3
mov
xchg
int
movs
push
pop
(bad)
jg
or
push
(bad)
loope
jg
adc
test
cmc
das
sub
pop
fwait
jg
mov
dec
test
xchg
cmp
stc
pop
jp
push
hlt
sub
adc
adc
mov
fcom
int3
sbb
mov
pop
dec
dec
adc
fistp
jmp
nop
(bad)
popf
push
icebp
icebp
ror
clc
out
pop
mov
mov
or
bound
test
ins
rcr
outs
push
xlat
in
fldenv
jo
test
xor
mov
or
inc
xchg
cmps
dec
add
out
test
dec
pop
rol
pushf
ret
loopne
fld
dec
push
mov
cli
adc
cmp
arpl
fidivr
lods
jno
or
inc
and
cmps
cmp
pop
(bad)
js
sti
cmp
call
add
(bad)
mov
pop
mov
repz
adc
das
xor
adc
sub
mov
and
mov
stos
mov
cmps
mov
pop
imul
mov
test
or
sub
cmp
adc
retf
sub
sti
push
(bad)
out
adc
pop
jle
cld
push
mov
mov
or
pop
sub
rcr
aaa
xor
cmp
sub
push
(bad)
lahf
outs
outs
out
gs
test
jo
rcr
outs
ror
lds
adc
or
push
imul
jbe
cli
adc
mov
adc
push
shl
aaa
in
sbb
push
ins
addr16
xchg
ret
sub
xchg
fistp
xor
xor
pop
ss
imul
addr16
ss
cli
inc
jmp
(bad)
imul
mov
gs
push
fcomp
mul
dec
adc
repnz
sbb
xchg
in
fs
adc
mov
not
xchg
mov
scas
dec
sbb
das
mov
int
aaa
mov
int
nop
pop
mov
repz
bound
and
pop
mov
mov
xchg
test
imul
lea
cmps
sub
xchg
stc
js
out
aaa
and
lods
dec
jo
jo
cmps
mov
pop
jb
jecxz
mov
mov
jl
cmp
into
sahf
push
rcr
test
mov
xchg
ins
adc
(bad)
mov
test
add
div
and
xor
xlat
scas
add
push
test
bound
ror
push
xchg
cmp
fdivr
sbb
or
cmps
or
js
mov
jmp
int3
adc
mov
test
inc
scas
sbb
xchg
fld
adc
loope
xor
sub
mov
leave
cld
fcmovnu
scas
ror
sub
sbb
ins
adc
inc
leave
ds
(bad)
and
retf
xchg
aad
xor
sbb
xlat
dec
jne
aaa
sbb
lds
cmp
test
je
push
stos
jno
inc
in
xchg
test
push
pop
ins
test
(bad)
xchg
scas
cdq
mov
jns
ja
in
lock
sahf
push
pop
mov
cmp
call
or
imul
scas
mov
adc
das
xor
mov
cmps
iret
and
sbb
mov
int3
inc
fwait
sub
mov
push
daa
and
int3
into
je
and
jmp
retf
xchg
imul
dec
in
enter
mov
fist
mov
push
inc
les
sub
and
gs
jno
std
jle
push
pop
clc
xchg
pop
imul
bound
(bad)
repnz
jp
xchg
adc
out
outs
xor
inc
inc
push
inc
call
jp
aad
sbb
fdiv
lds
sbb
jmp
mov
sub
jb
jmp
nop
inc
in
and
jmp
push
daa
adc
dec
sbb
hlt
les
popa
xchg
sub
mov
loopne
add
adc
es
ds
and
bound
out
or
lods
aas
dec
sti
and
mov
rcr
mov
retf
stc
call
dec
gs
push
pop
cmc
adc
jle
mov
daa
push
imul
jmp
js
dec
jb
and
push
cmps
loopne
add
dec
jb
hlt
aaa
out
les
call
mov
jmp
inc
push
add
pop
mov
and
ja
mov
js
adc
in
out
mov
xor
clc
sbb
ins
movs
push
inc
pusha
xor
adc
sub
pop
lock
push
or
mov
cmp
leave
ins
lahf
pusha
cwde
xlat
ret
not
xchg
push
loopne
xchg
cli
int
inc
inc
xor
outs
popa
or
dec
sar
mov
or
pop
popf
pop
xchg
cs
sbb
jnp
mov
xchg
inc
rcl
sbb
cmp
push
movs
push
pop
jo
mov
(bad)
mov
clc
mov
data16
sar
mov
cmp
add
lea
cmp
sub
(bad)
and
popa
mov
std
or
xor
xor
mov
repz
js
mov
dec
out
and
aam
nop
pop
jl
push
push
xor
in
outs
mov
mov
mov
xchg
lds
mov
fstp
inc
lahf
xchg
pusha
stc
xor
jecxz
and
mov
mov
je
sub
pop
mov
mov
and
cmc
cmps
sub
inc
call
jecxz
imul
xlat
out
or
rol
push
shl
lods
dec
inc
aad
adc
jmp
add
inc
xchg
ins
aam
in
and
fbstp
mov
scas
jae
and
aad
leave
test
mov
mov
dec
pop
gs
cmps
sbb
sbb
pushf
xor
inc
or
int3
fsub
fwait
push
sbb
inc
push
sbb
test
add
jle
push
mov
fwait
sub
sub
jmp
shl
call
adc
and
(bad)
cwde
jns
xor
lds
push
out
adc
mov
push
call
inc
cmps
(bad)
fld
sub
jle
jmp
dec
pop
enter
(bad)
loope
xlat
mov
out
(bad)
psubsb
out
loopne
div
scas
dec
push
push
cmp
(bad)
retf
mov
dec
daa
mov
push
dec
fimul
mov
fwait
sbb
scas
ror
(bad)
icebp
das
cmp
adc
jnp
fmul
jle
adc
jmp
adc
dec
ror
jne
or
add
xor
fimul
mov
push
xchg
mov
jo
imul
dec
mov
mov
mov
add
rcr
inc
int3
scas
sbb
adc
retf
mov
jecxz
xchg
xchg
out
xchg
adc
mov
mov
push
and
dec
mov
outs
mov
jecxz
push
sahf
fwait
xor
xchg
push
mov
stc
pushf
add
mov
xor
push
cld
pop
(bad)
daa
xor
fadd
out
sub
pop
fldenv
cwde
sbb
xor
adc
inc
or
fidiv
sbb
outs
fbstp
es
fadd
out
jge
test
fidivr
or
retf
or
icebp
mov
hlt
out
sar
ret
pop
adc
xchg
dec
push
push
mov
call
rol
sub
jne
mov
daa
and
je
aad
mov
jecxz
push
pushf
push
in
or
mov
xlat
pop
ror
mov
inc
int
ins
xor
cmp
nop
mov
mov
jl
lds
repz
test
xor
or
movs
sub
or
iret
adc
push
ss
jb
mov
sbb
movs
and
dec
xchg
add
inc
sbb
mov
mov
mov
call
and
inc
jnp
push
jmp
mov
xchg
mov
pop
or
test
fld
mov
xchg
mov
fldcw
mov
xchg
mov
xchg
cmp
loope
movs
cmp
push
dec
sub
rol
or
mov
add
add
je
xchg
xchg
sbb
js
xor
loope
retf
out
int3
cwde
pop
push
(bad)
ds
out
sub
inc
ja
mov
(bad)
push
dec
cmps
xchg
mov
mov
push
retf
fsubr
mov
and
adc
mov
dec
not
mov
outs
es
mov
mov
add
sbb
ins
lods
inc
mov
pop
lods
xchg
popf
xor
sub
loopne
cmp
sub
int3
jp
mov
outs
lea
test
mov
clc
fadd
mov
jg
jl
shr
mov
sbb
sbb
int3
jmp
fmulp
sbb
jb
xchg
add
leave
ror
fist
adc
not
inc
xor
iret
ins
repnz
mov
pop
sub
push
xchg
ins
push
aas
inc
inc
mov
scas
pop
into
cmps
movs
pop
pushf
(bad)
in
cmc
cwde
and
daa
sub
sub
pop
dec
cmp
xchg
and
lds
xor
fsubr
popa
repz
sub
sbb
or
dec
loopne
ins
aaa
mov
cmp
cmp
cmc
shl
push
add
addr16
ins
adc
mov
int
cmps
aas
hlt
mov
enter
pop
sub
mov
sbb
push
idiv
dec
in
jno
pop
shl
test
(bad)
test
add
js
mov
rcr
mov
sbb
xor
test
inc
sbb
cmp
pop
stos
cmps
call
std
jmp
lea
push
sahf
cmp
cmp
push
and
in
stos
pop
ss
mov
push
call
mov
push
or
mov
loopne
and
mov
jmp
aam
fxch
and
mov
or
int3
push
or
mov
push
sub
push
pushf
or
inc
xchg
jmp
add
push
hlt
adc
cmp
sub
xchg
cmp
popa
mov
mov
inc
adc
clc
mov
sar
pop
aaa
not
aaa
pop
sbb
addr16
int
mov
lods
pusha
adc
inc
sti
mov
cmps
dec
(bad)
mov
retf
ret
sbb
xor
dec
mov
xlat
outs
jl
test
or
dec
rcr
jmp
fwait
popf
and
push
xchg
scas
in
pusha
inc
dec
jle
dec
(bad)
out
cmps
pop
cmp
or
push
xchg
hlt
mov
mov
imul
retf
je
sar
(bad)
outs
stc
push
sub
jne
loopne
pop
pop
(bad)
mov
out
jp
adc
sub
fisub
mov
inc
mov
lock
and
jmp
lods
std
sbb
ret
ror
ret
mov
loopne
rol
dec
rol
jge
bound
xor
fist
loope
fidivr
out
div
fs
ret
jnp
mov
pusha
mov
clc
jno
cmps
pop
adc
daa
retf
push
dec
loopne
cmp
mov
(bad)
ficomp
push
sbb
(bad)
aam
daa
ins
rcl
inc
pop
mov
enter
imul
in
call
daa
pop
(bad)
mov
mov
xchg
imul
repnz
scas
inc
jge
test
movs
out
stos
push
jmp
ss
popf
add
push
xchg
movs
mov
cmp
jecxz
xor
ret
and
or
aad
popa
xchg
or
mov
rcl
loope
aam
inc
push
cmp
xchg
pmuludq
lods
scas
mov
push
and
int
jnp
mov
mov
fdivr
imul
adc
shl
ror
mov
sub
aas
xor
mov
dec
(bad)
adc
outs
jo
in
jne
sub
aam
test
inc
fcmovnu
shl
sbb
sbb
add
call
sti
push
jmp
(bad)
and
dec
sbb
inc
sbb
and
nop
or
test
cmp
jno
jmp
or
jo
jns
and
ja
and
and
retf
cs
repz
and
pop
dec
ja
nop
and
mov
daa
dec
aaa
or
sbb
push
iret
jno
adc
sub
adc
les
mov
call
jo
sbb
iret
loopne
aas
add
mov
add
mov
in
pop
push
sub
idiv
sub
in
aas
leave
aaa
test
dec
pop
xor
mul
cmp
fnstcw
mov
sti
cld
in
retf
cld
mov
popa
xor
mov
arpl
lods
mov
xchg
adc
lods
mov
sti
pop
ins
xlat
mov
dec
outs
mov
(bad)
daa
jnp
bound
call
pusha
scas
enter
fs
sub
out
push
jmp
dec
lods
mov
inc
xor
xchg
jg
mov
xor
in
cmp
add
enter
push
add
not
sbb
dec
jmp
mul
movs
xor
cmps
shl
clc
sub
mov
cmp
lds
inc
sti
xor
mov
sbb
and
mov
ss
jp
mov
fsub
inc
mov
test
rcl
inc
and
push
in
jb
ins
or
shl
dec
call
or
or
in
js
push
aas
fcomi
pop
daa
pop
adc
ins
mov
add
ins
push
xchg
xchg
lods
push
xchg
cmc
aaa
dec
ret
mov
lods
lds
cld
sbb
jnp
push
push
sbb
dec
push
iret
xor
js
xor
imul
and
xor
or
ins
stos
and
cs
cdq
div
xchg
js
cmc
enter
fsubr
in
mov
push
mov
sar
pop
xchg
push
test
and
shl
repnz
les
xchg
dec
outs
rol
sbb
sub
adc
xor
or
mov
dec
into
ja
add
icebp
fld
push
mov
cmps
cld
repnz
sbb
mov
sub
mov
hlt
sar
lds
sar
inc
aam
mov
add
jmp
popf
jae
lock
jecxz
dec
xchg
sar
dec
mov
mov
pop
popa
or
fstp
call
pop
jns
xor
lahf
lea
popf
and
test
add
pop
xchg
test
ret
pop
mov
sbb
mov
inc
jns
scas
or
sbb
enter
cdq
inc
jmp
out
repz
mov
loop
mov
scas
out
cwde
jge
add
popa
mov
jmp
cmp
push
adc
or
inc
push
cmps
repnz
dec
mov
inc
fisttp
ror
pop
adc
xor
mov
mov
xor
xor
xor
retf
mov
mov
rcl
xlat
jge
jnp
outs
out
sbb
push
push
in
daa
dec
pop
idiv
xor
scas
mov
repnz
fcom
pop
ins
mov
test
in
imul
dec
adc
cld
enter
cmc
repz
or
loop
into
and
ss
je
sti
jp
loope
pop
daa
xor
push
or
push
je
fisttp
iret
jmp
fidivr
retf
pusha
and
mov
adc
(bad)
in
arpl
pop
pop
in
dec
jae
cmp
pop
cmp
repz
popa
cmp
rol
sub
sbb
in
cmps
pop
mov
add
(bad)
pop
fwait
dec
cwde
inc
ja
test
jns
sub
rcr
rcr
stos
cli
out
in
mov
add
ss
or
imul
aad
xchg
shr
xchg
or
mov
xor
or
and
jo
pop
mov
add
cmp
icebp
popf
mov
not
fisub
ss
pop
push
imul
dec
ja
mov
mov
fldz
movaps
pusha
sub
add
pop
dec
mov
loop
push
ret
add
mov
popa
shl
fbstp
addr16
xor
mov
xor
addr16
adc
inc
pop
mov
in
aas
pop
scas
mov
xchg
stc
push
xor
sub
ss
in
adc
add
push
je
push
pop
rcr
pop
imul
jmp
and
mov
inc
sbb
adc
(bad)
gs
sub
adc
adc
cdq
push
clc
fidiv
xor
cmp
cdq
cmp
inc
ds
fld
add
or
mov
xor
je
aas
lahf
retf
in
adc
int3
ret
rcl
pop
mov
mov
dec
jnp
pop
sbb
shl
xchg
repz
or
adc
sti
out
jmp
int
pop
xor
pop
sbb
or
test
scas
(bad)
mov
loop
ret
cmp
sbb
pop
mov
scas
jp
xlat
adc
sbb
jno
push
addr16
mov
(bad)
(bad)
mov
repnz
fidivr
mov
cmp
dec
push
jge
jns
ficomp
sub
jle
pop
shr
jg
inc
sbb
pop
and
je
push
ret
sar
cld
cmp
add
aad
imul
lods
jg
mov
shl
jmp
test
and
outs
neg
into
aam
mov
xchg
mov
daa
mov
cmp
cmp
movs
mov
test
push
sbb
jle
ret
in
jmp
mov
adc
and
or
nop
pop
fs
leave
or
idiv
enter
cld
fild
clc
sub
data16
xchg
mov
aaa
outs
cdq
add
push
push
cmp
scas
int3
lahf
mov
jbe
cld
mov
int
ja
inc
psubb
sub
xchg
pusha
add
push
and
loopne
outs
leave
sar
cmps
add
or
jmp
enter
out
imul
(bad)
retf
lods
ja
lods
test
(bad)
pop
movups
out
adc
cmp
out
les
je
add
cmp
or
scas
dec
dec
aas
scas
sbb
inc
imul
retf
rcl
cmp
sbb
mov
or
push
mov
mov
jae
pop
push
(bad)
dec
mov
dec
call
jge
fild
sub
mov
repnz
ret
mov
fdiv
mov
add
dec
inc
xor
and
test
cmp
(bad)
jp
in
aas
push
pop
or
pusha
mov
loopne
jbe
jne
mov
stc
dec
test
sbb
mov
jb
dec
xchg
frstor
pop
xlat
(bad)
mov
ins
mov
inc
stos
mov
inc
dec
out
push
adc
jl
adc
adc
sti
shr
popa
cwde
mov
loopne
popa
push
icebp
imul
(bad)
fidiv
or
mov
fisub
dec
mov
pop
ret
mov
ja
gs
pop
ret
jg
or
push
outs
xchg
popa
mov
shl
push
mov
jno
mov
ret
mov
sub
or
int
mov
jno
dec
pop
adc
aaa
fwait
retf
loopne
ret
ds
in
push
sbb
xchg
retf
push
push
test
jmp
hlt
push
mov
(bad)
mov
aad
cmp
and
fiadd
jge
push
out
cwde
int
int
xor
addr16
inc
daa
add
and
int3
pop
dec
mov
mov
test
sbb
aam
ins
mul
jo
jge
mov
aam
xchg
mov
je
stc
jnp
sub
sbb
pusha
call
fidiv
nop
xchg
mov
adc
add
(bad)
adc
add
out
inc
mov
jae
inc
sub
dec
cmp
xchg
inc
cmp
bt
shr
out
ret
call
in
(bad)
test
push
stc
dec
call
fst
xchg
sar
neg
mov
dec
les
add
lea
or
out
jp
xchg
sbb
(bad)
and
repz
and
jle
shl
sbb
pop
(bad)
arpl
dec
(bad)
cmp
mov
adc
pop
xor
fbstp
mov
cmps
lds
pop
bound
ja
retf
or
mov
inc
jg
push
js
jp
pop
push
(bad)
call
test
xor
sbb
into
inc
mov
jb
cld
hlt
hlt
push
inc
scas
or
retf
xchg
push
add
push
jmp
(bad)
mov
adc
mov
(bad)
clc
mov
sub
shld
mov
sbb
xor
into
pop
int3
sbb
jne
lea
and
jecxz
and
xchg
jo
xlat
and
cdq
test
aas
push
je
jae
jo
fld
mov
(bad)
call
xchg
push
addr16
cli
xor
arpl
sbb
popf
xchg
mov
jno
rcr
cmps
repz
sahf
in
pop
je
and
out
xchg
gs
push
and
ins
adc
inc
ret
addr16
(bad)
jnp
(bad)
add
inc
scas
pusha
push
inc
jg
aaa
add
dec
sbb
adc
add
jmp
test
push
sub
inc
and
fs
lahf
les
jl
pop
popf
cmp
sar
in
inc
and
into
mov
pop
adc
mov
pop
loope
dec
add
or
inc
cmp
mov
mov
sub
and
xchg
push
jns
xor
ins
in
shr
sldt
sbb
loop
cmp
adc
mov
jno
test
lods
(bad)
jae
mov
(bad)
mov
iret
adc
lods
les
fild
mov
xor
fld
jle
adc
fstp
sbb
lods
xchg
sbb
jae
sbb
pop
js
xlat
loop
jmp
test
stos
loope
sub
cli
les
push
and
test
cmp
adc
xor
retf
mov
dec
cmp
xchg
add
or
jge
sar
mov
cmps
out
push
pop
je
sub
sub
dec
(bad)
pop
fisttp
sbb
jns
xor
jge
dec
cmp
repz
mov
mov
scas
jmp
test
or
sbb
dec
fnstsw
push
pusha
mov
gs
and
das
mov
jnp
jecxz
mov
push
jge
aam
mov
mov
cmp
pop
jns
cmp
mov
das
test
pop
push
sti
fst
mov
mov
cs
ret
sahf
enter
adc
push
fs
out
sub
(bad)
call
clc
add
in
mov
je
adc
adc
idiv
mov
pushf
dec
jnp
xor
aam
pop
cmp
xchg
sti
cmc
(bad)
mov
pop
pop
mov
jno
test
jle
mov
inc
xchg
(bad)
cmp
sbb
jl
ins
movs
mov
loope
test
test
push
cmps
out
retf
jmp
ror
ins
cmp
cmp
enter
sbb
fcmovnu
ror
fisubr
xchg
in
dec
loop
mov
scas
ret
xor
pop
pop
mov
cmps
(bad)
(bad)
and
out
push
inc
or
pusha
cmp
sub
sbb
enter
cmp
mov
aam
ins
stos
xchg
scas
jp
int
ins
in
ficom
das
push
dec
cld
push
push
push
pop
or
mov
mov
mov
cli
push
inc
or
mov
ins
cmp
jmp
in
dec
stos
adc
push
in
mov
sub
test
xchg
mov
test
inc
rol
fdivp
mov
mov
jl
stos
cmp
ficomp
arpl
inc
jmp
add
push
jg
add
fst
fld
jns
pop
or
imul
xor
and
test
mov
aam
rcl
(bad)
out
fst
xlat
jmp
xchg
leave
push
inc
loope
mov
mov
mov
sub
inc
adc
mov
leave
xchg
aad
pop
inc
rcl
inc
and
and
loope
add
enter
mov
int
xchg
mov
outs
xor
test
(bad)
enter
(bad)
jae
push
ss
sub
mov
rcl
leave
cmp
jnp
xchg
stc
(bad)
sbb
cdq
dec
ror
arpl
xrelease
retf
nop
fcomp
mov
xor
and
cmp
jb
loop
ret
mov
sub
adc
neg
sbb
inc
outs
std
scas
cld
jo
imul
cdq
pop
add
jae
mov
shl
scas
iret
sbb
mov
mov
xor
fs
hlt
test
dec
loope
push
mov
lods
or
ds
(bad)
or
xchg
add
hlt
dec
inc
jmp
out
outs
fnstsw
nop
ja
cmps
rcl
add
mov
faddp
xchg
and
movs
addr16
cmp
add
mov
sbb
push
bound
xchg
mov
pop
in
loopne
lea
int3
pop
sub
pusha
mov
jle
xchg
sbb
mov
repnz
repz
jne
pop
into
mov
add
mul
push
jge
inc
and
rcr
jmp
sbb
rcr
mov
xor
mov
sub
(bad)
cld
lods
mov
mov
xor
pop
ins
sar
in
iret
(bad)
pop
push
fst
ja
(bad)
jp
dec
sar
add
cmp
sahf
js
inc
jo
into
xchg
sub
push
dec
ja
pop
bound
adc
cs
mov
dec
or
xlat
in
push
cmp
sbb
ret
or
retf
add
mov
and
pusha
mul
js
add
dec
ins
xor
inc
xchg
mov
clc
pop
fs
std
inc
pop
cmp
(bad)
data16
add
into
cld
sub
mov
cld
xchg
cmp
outs
jnp
pop
jne
mul
dec
cmp
(bad)
rcl
mov
cmp
and
add
push
mov
ja
and
sub
pop
pop
mov
outs
inc
ins
mov
rol
lds
sbb
pop
sbb
inc
push
lahf
jmp
hlt
out
mov
mov
mov
leave
cmc
iret
pop
dec
pop
call
call
mov
pop
inc
inc
and
ficom
mov
and
call
xchg
lods
into
sbb
mov
jge
or
dec
movs
stc
stc
ret
ins
dec
mov
inc
cmc
cmp
sub
mov
in
push
int3
cmp
idiv
jmp
or
ins
sub
aas
icebp
repz
push
push
pop
sbb
loopne
sbb
out
ror
out
xchg
mov
sbb
lock
jo
jl
xor
cmp
xor
pop
mov
inc
and
xchg
mov
sti
xor
popa
mov
add
add
hlt
std
cmps
cdq
aas
push
mov
and
fistp
inc
stc
and
ret
movs
pusha
cli
imul
out
sub
sbb
push
and
cs
mov
pop
(bad)
dec
jp
movs
fs
jae
ja
ror
adc
mov
xchg
stc
pop
mov
or
mov
in
pop
pop
sub
pop
pop
cld
jnp
jbe
gs
fmul
or
scas
scas
adc
and
mov
out
mov
inc
ds
repz
outs
jb
iret
xor
pop
dec
or
loopne
jne
push
pusha
shl
dec
mov
movs
loopne
pusha
fsub
stos
rcl
xchg
jecxz
jb
fld
neg
cmps
pop
ss
stc
pop
xor
dec
cli
out
push
(bad)
xchg
outs
push
adc
fnstcw
or
shr
mov
lahf
mov
and
icebp
lock
mov
sub
fwait
in
jo
xor
cmp
inc
push
fild
push
dec
xchg
sub
call
daa
(bad)
rcl
cmp
pusha
jmp
int
or
and
icebp
mov
adc
push
xor
adc
sub
add
mov
xchg
inc
mov
rcl
mov
mov
and
das
ins
pop
dec
in
push
xchg
mov
mov
adc
fldcw
cdq
xchg
push
xor
inc
cmp
out
push
(bad)
mov
xor
sti
cmp
ja
add
mov
test
sub
push
fcom
ja
sub
outs
sub
cmp
xchg
int3
adc
cmp
fwait
je
and
inc
xor
mov
aaa
pop
ins
out
jmp
xchg
hlt
and
jb
cli
rcr
xchg
jp
and
pop
test
es
ja
xor
xor
inc
jno
inc
adc
push
leave
add
or
and
or
stos
jl
lock
nop
jg
mov
cmp
popa
rcr
aas
push
fcom
movs
add
outs
mov
les
pushf
retf
dec
loop
iret
mov
cdq
adc
scas
pop
fwait
ret
icebp
icebp
xchg
imul
push
retf
mov
or
dec
jl
sub
adc
pop
dec
scas
adc
xchg
les
mov
hlt
hlt
xlat
das
cld
cli
sub
js
or
mov
outs
adc
xchg
add
push
inc
cmp
sbb
mov
mov
push
pop
jmp
es
cmp
pushf
jae
xchg
mov
lods
mov
mov
dec
ret
test
popf
push
mov
or
sub
mov
mov
pop
aas
cmp
dec
xor
jns
ret
paddusw
sahf
movs
sub
sub
push
sbb
pop
xchg
std
scas
push
jecxz
int3
mov
test
cmp
dec
popf
jno
and
mov
inc
pop
jne
movs
xchg
push
stos
fwait
mov
data16
lahf
fdivr
add
mov
sub
inc
into
mov
mov
push
stos
xchg
inc
repnz
jno
out
popa
mov
mov
dec
mov
ss
ret
test
or
dec
sti
xchg
stos
retf
clc
aad
xchg
mov
pop
cdq
in
lds
xor
lods
jbe
stos
cmp
imul
ss
or
xchg
inc
mov
jns
xchg
imul
sahf
iret
mov
fcomi
mov
mov
push
sar
jne
push
or
ja
and
int3
mov
cmp
fstp
fimul
nop
sbb
outs
xor
sub
xchg
mov
cmps
mov
and
cmp
mov
(bad)
lea
pop
inc
neg
inc
xchg
pusha
mov
xchg
pop
fld
jge
mov
inc
push
sbb
leave
mov
(bad)
sub
adc
test
jmp
sbb
dec
adc
(bad)
jmp
jne
in
fld
push
movs
fcom
test
push
lds
pop
fistp
cmps
retf
aad
shl
adc
sar
dec
setne
into
mov
mov
nop
mov
lods
daa
mov
rcr
pop
gs
xchg
sti
iret
lock
jb
ficomp
xor
rcr
test
xor
loop
ss
and
or
push
pop
push
add
mov
mov
inc
(bad)
mov
pop
test
sub
mov
mov
movs
into
sti
fisubr
sbb
xchg
int
cwde
jg
jmp
dec
shl
iret
pop
(bad)
pop
(bad)
cs
mov
inc
cli
inc
stos
ror
push
sub
xchg
sti
mov
pop
fisttp
pop
aaa
add
lods
stos
lock
movs
xchg
sar
dec
cmps
xchg
daa
adc
sbb
int
pop
movs
dec
and
cmp
out
out
ins
iret
nop
jne
push
fs
add
div
jecxz
mov
sbb
cmp
(bad)
in
jecxz
jl
sti
mov
loope
gs
add
push
outs
cld
pop
out
xlat
cdq
and
popa
pop
fistp
adc
and
movs
or
inc
mov
jge
scas
out
ja
mov
ja
push
jl
and
pop
call
mov
push
std
or
xchg
jmp
imul
stos
mov
cld
mov
out
push
retf
inc
xchg
jl
and
push
mov
jnp
push
jno
mov
adc
adc
retf
xchg
mov
mov
sbb
jbe
test
jb
sub
test
mov
sub
inc
jbe
scas
sub
xchg
aaa
(bad)
add
retf
mov
jle
add
ret
cmps
retf
mov
sub
(bad)
jg
sti
jns
pop
or
cmp
iret
xor
aas
sbb
xchg
(bad)
fcom
aad
lds
out
and
jp
inc
inc
data16
add
inc
push
icebp
cmc
aam
sbb
inc
pop
mov
xor
repz
jbe
mov
inc
xchg
xor
cmp
test
pop
push
scas
outs
sub
cmp
cmps
dec
sbb
jb
mov
cs
sar
cdq
and
ds
dec
ret
add
movs
xor
ret
ss
loopne
pop
adc
jno
inc
jbe
das
sub
enter
fisubr
rol
sahf
push
xor
pop
xchg
or
in
dec
loopne
cmp
ffree
movs
sub
mov
dec
cmp
sbb
mov
stos
sbb
iret
adc
or
or
sti
repnz
pop
ret
jns
inc
add
mov
sub
xchg
repz
int3
(bad)
dec
xlat
xchg
xchg
clc
ins
std
jae
add
xchg
popf
lea
cmp
xchg
in
iret
mov
fmul
push
(bad)
imul
cmp
je
lds
or
sub
pop
jmp
daa
sub
and
imul
pop
mov
cmp
or
lods
mov
loop
jmp
cmps
sbb
pop
jb
sbb
hlt
movs
push
into
retf
test
mov
cmp
sbb
ret
sub
xchg
sar
lahf
inc
(bad)
into
out
fldz
push
ror
cmp
int
and
jl
cmp
pushf
sbb
jecxz
add
mov
dec
repz
xor
ret
clc
neg
ins
js
and
pop
fwait
gs
push
add
inc
jg
pushf
test
xor
push
mov
xor
jne
jmp
sub
sti
pop
ret
mov
in
or
pop
xor
ja
sub
xlat
addr16
(bad)
cmp
mov
cdq
in
test
add
ins
sub
test
or
test
std
cmp
cmp
leave
push
and
shr
and
sbb
ret
cmp
mov
mov
inc
fmul
dec
(bad)
mov
dec
xlat
pop
jmp
scas
xchg
(bad)
sub
std
out
(bad)
sub
out
test
inc
cmp
bound
aaa
repnz
push
push
dec
sti
enter
push
popf
cmp
pop
mov
(bad)
pop
mov
lods
push
movs
int3
xor
mov
cmp
lock
fbld
inc
sbb
adc
jl
mov
xlat
int3
mov
jp
adc
add
jge
imul
out
dec
cmp
pop
out
out
mov
retf
ret
sahf
pop
dec
xchg
test
into
xchg
jl
(bad)
sub
pop
cwde
xchg
mov
cwde
inc
jmp
or
jnp
jg
jo
das
in
imul
stos
dec
mov
jl
jg
adc
mov
loop
jg
stc
pusha
jp
mov
and
or
mov
sbb
sbb
mov
mov
mov
pop
xor
or
movs
jmp
jns
xchg
aas
addr16
dec
hlt
cwde
lods
out
mov
jmp
cmp
mov
or
lds
xor
repnz
sar
sti
cmp
shl
cld
fs
fisttp
xchg
mov
(bad)
sti
mov
and
enter
daa
mov
jge
dec
inc
dec
push
pop
test
addr16
daa
mov
push
mov
xor
jmp
lods
dec
cli
dec
loop
mov
mov
cmps
(bad)
and
cli
lods
or
xchg
adc
pop
or
retf
pop
loope
loope
jmp
adc
mov
cmp
pmaddwd
dec
cmps
push
or
add
jb
cmps
pop
cmp
(bad)
mov
call
(bad)
fcomp
mov
jg
push
jne
les
mov
mov
adc
mov
push
ret
loop
jb
loopne
js
fs
cmp
loopne
inc
push
pop
jp
jecxz
xor
cli
or
cmp
inc
cmc
adc
scas
push
push
jno
jnp
(bad)
adc
sub
loopne
data16
xchg
mov
push
popf
js
lods
cmp
push
jle
fs
pop
mov
pop
mov
adc
fcom
das
cmp
retf
cwde
out
xlat
ds
cmc
enter
xor
sub
cmp
jne
sub
(bad)
adc
retf
pushf
shl
sbb
leave
popa
stos
ss
add
adc
dec
jmp
sbb
sub
mov
add
and
mov
dec
pop
ss
int3
loope
stc
stos
fisubr
(bad)
test
mov
jmp
ret
push
xchg
icebp
pop
int3
shl
jb
retf
lds
movs
lahf
jp
push
aas
(bad)
mov
cmp
das
mov
lea
hlt
inc
push
fld
ja
frstor
cmp
(bad)
out
pusha
loop
bound
stos
stos
nop
out
xchg
sbb
adc
imul
out
gs
mov
adc
jle
inc
push
sub
push
and
shl
in
cmp
shl
cmp
stos
aaa
nop
xchg
pop
mov
shl
jl
pop
cmp
in
ins
jno
or
inc
xchg
jl
cmps
mov
jmp
inc
sbb
pop
xor
mov
mov
(bad)
popf
retf
aas
lock
or
adc
sub
nop
push
cdq
jne
sbb
std
fs
fistp
cmps
pushf
cmp
sbb
or
ds
stos
(bad)
sbb
pop
ss
adc
jne
movs
sbb
cmps
repz
or
lea
or
xchg
popf
push
push
retf
mov
dec
lds
xchg
push
adc
sub
clc
hlt
inc
mov
sub
mov
jmp
pop
jle
pop
mov
repnz
pusha
sub
ror
mov
and
and
xor
aaa
lods
fwait
pop
inc
cmp
je
ja
jo
cwde
jo
inc
mov
add
ins
dec
or
inc
call
xchg
adc
pop
push
push
add
jle
int
cmp
pop
fs
stc
ret
jb
mov
and
pushf
(bad)
loope
push
pop
les
jbe
mov
leave
test
aam
cdq
mov
aas
pop
gs
pop
div
inc
push
push
stos
sbb
int3
jb
pop
test
push
mov
xchg
cs
push
and
dec
push
loopne
adc
ins
push
jg
xchg
pop
inc
in
push
(bad)
outs
outs
ja
enter
jle
push
js
mov
sbb
xchg
out
push
fild
repnz
scas
das
and
sub
mov
jns
mov
shr
(bad)
ror
in
xor
dec
je
sub
mov
ds
stc
jmp
fistp
sbb
sub
fs
outs
jmp
int
cld
popa
ins
into
test
fnsave
push
xor
scas
dec
sbb
enter
inc
rol
sti
dec
xor
mov
push
sbb
sub
aad
jne
call
nop
lahf
into
push
inc
repz
jo
cld
fldenv
movs
movs
test
jae
mov
inc
sbb
int
(bad)
popa
in
jecxz
popa
mov
mov
adc
jmp
fldenv
mov
push
inc
jmp
sub
jbe
cmps
sahf
ds
push
mov
dec
jmp
inc
inc
cmp
pop
jmp
xor
not
jnp
push
xor
stos
and
sub
mov
mov
push
aaa
adc
push
ja
adc
movs
cmp
sti
mov
sub
dec
xchg
test
clc
mov
cmp
hlt
pop
aam
push
mov
xor
fldenv
retf
adc
xchg
mov
xor
adc
adc
adc
test
ret
or
test
pop
or
cmp
mov
xlat
pop
xchg
in
ficom
push
fs
pop
mov
and
or
sub
stc
test
enter
push
sti
or
xlat
iret
std
inc
in
jl
cmp
stos
leave
push
mov
test
push
xor
aad
sbb
lock
xchg
mov
les
sub
(bad)
repnz
(bad)
cli
sbb
loop
fnsave
push
aas
popf
test
fcomp
adc
cmp
and
push
aas
mov
pop
mov
loope
aaa
mov
fdiv
or
and
call
aad
dec
xchg
pop
and
and
(bad)
pop
bound
test
sar
xor
or
sub
call
mov
push
xchg
push
add
adc
adc
pushf
inc
or
pop
int
cmpps
xor
sub
mov
shl
aaa
enter
mov
jle
xor
cmps
xchg
inc
lahf
loop
lea
out
int
sti
xchg
push
js
fdivr
xchg
hlt
mov
xor
ret
dec
loope
loope
jecxz
lods
mov
inc
mov
adc
pop
xor
bound
cdq
js
icebp
ds
push
icebp
pop
cmp
arpl
(bad)
mov
and
std
out
loope
mov
mov
lea
mov
mov
jno
(bad)
jp
cmp
add
push
mov
push
push
dec
in
stc
inc
pusha
ss
je
scas
mov
iret
test
sub
fs
ds
sub
test
ror
sub
and
jae
aad
mov
adc
sub
fld
mov
sub
xchg
daa
jo
(bad)
jp
scas
pop
mov
mov
and
mov
jg
jnp
xchg
mov
stos
inc
int3
scas
xor
push
je
mov
(bad)
(bad)
dec
jo
jg
dec
clc
xor
int3
inc
mov
dec
jo
cld
imul
xlat
cmp
sbb
xchg
leave
rcl
dec
jns
cwde
lock
adc
push
mov
dec
ret
jle
es
cdq
jp
and
les
loope
cmps
sub
stos
mov
rol
cmps
mov
jae
aaa
jb
hlt
out
or
mov
imul
or
and
mov
out
(bad)
cdq
push
aad
ss
inc
ins
dec
push
lds
das
das
sub
mov
je
and
cld
pop
pop
inc
fisttp
mov
popf
cmps
fst
inc
test
sbb
cli
repz
pop
mov
adc
dec
inc
mov
shl
inc
clc
and
rcr
push
fs
addr16
dec
test
cmps
push
scas
mov
scas
adc
jno
movs
movs
or
test
jno
push
aam
push
int3
inc
pop
pop
xchg
xor
xor
mov
and
test
rcl
sub
push
push
dec
in
popf
xchg
pop
mov
adc
jnp
cmp
xchg
push
cli
xchg
fwait
push
test
in
addr16
dec
push
mov
ror
(bad)
outs
xchg
clc
fnstsw
pop
pop
xlat
jnp
sbb
movs
cmps
test
mov
sbb
lds
and
adc
aaa
xor
ds
and
jae
lds
adc
mov
ror
ror
inc
sub
(bad)
xchg
inc
mov
xchg
sbb
push
out
and
int3
inc
ficom
mov
in
ror
test
jo
dec
data16
dec
int3
cmp
xchg
lahf
mov
or
mov
dec
ins
pop
add
pop
in
add
icebp
xchg
in
and
out
dec
jge
daa
jno
sahf
add
shl
pusha
cli
jp
pop
or
lods
xor
sub
bound
iret
ss
cld
std
dec
and
(bad)
pop
out
cmp
es
inc
(bad)
div
add
xchg
(bad)
sbb
call
daa
jle
adc
icebp
push
iret
sbb
push
mov
xchg
inc
cmp
hlt
xchg
ins
dec
push
mov
cli
cmps
push
mov
dec
into
test
mov
jns
sub
sbb
leave
(bad)
jmp
dec
adc
mov
dec
sbb
cmp
test
xchg
das
cmp
cmp
repz
lods
xchg
(bad)
dec
pop
ret
pop
mov
xlat
popa
jb
daa
jb
ror
mov
or
cmc
aaa
or
cmp
xchg
jg
(bad)
pop
mov
push
xor
daa
and
xchg
ds
mov
cmc
xor
adc
inc
adc
stc
inc
loop
push
int3
je
jmp
jne
pop
push
es
mov
mov
call
fs
daa
sub
mov
cmps
xor
int3
push
sub
cmc
jae
mov
pushf
outs
stos
push
lds
cwde
movs
jae
ss
dec
fs
int3
or
ins
xor
enter
inc
addr16
pop
adc
push
or
call
shl
out
add
lahf
pop
loopne
pop
xchg
dec
add
jno
push
repnz
sbb
pop
and
sbb
mov
dec
push
xor
inc
xchg
dec
mov
mov
ins
push
push
test
test
out
cmp
cmp
test
into
sbb
jmp
push
popa
loope
jmp
or
mov
pop
int3
push
push
imul
scas
test
mov
adc
pop
enter
mov
jae
shl
jl
mul
std
dec
cmp
push
inc
jne
dec
sub
ins
fistp
icebp
fs
dec
mov
int3
out
sahf
fcomp
and
mov
pop
jp
sub
pop
sbb
sbb
xchg
mov
adc
inc
loop
sti
pusha
clc
or
in
adc
adc
mov
inc
mov
push
(bad)
retf
aas
sbb
sub
out
test
lock
iret
mov
or
sbb
jae
jle
dec
dec
jo
sar
outs
jo
clc
ins
and
xlat
jmp
ds
shl
mov
cmp
push
or
dec
xchg
jne
test
out
out
movs
inc
ss
mov
or
or
aas
pop
cld
adc
dec
ret
fiadd
mov
xchg
add
pushf
mov
adc
mov
jbe
xchg
lods
out
pushaw
out
push
mov
and
mov
out
sub
jae
sar
test
mov
jnp
add
neg
jecxz
shl
or
xor
push
or
sub
je
fldenv
ja
jp
aaa
mov
repnz
mov
call
aam
push
pop
adc
push
jecxz
dec
mov
lahf
push
stc
xchg
sti
cmp
push
inc
adc
jge
xor
les
cmp
mov
in
jne
jecxz
push
adc
js
call
aaa
xchg
lods
pop
mov
push
sbb
fwait
out
push
in
addr16
jne
adc
cmps
add
dec
rol
call
stc
add
push
sub
adc
leave
mov
call
and
mov
ins
outs
in
ja
mov
cs
ss
inc
push
sbb
lods
pop
(bad)
adc
ds
fsubr
or
scas
mov
outs
ins
pop
pop
mov
adc
push
ds
push
or
fwait
jne
mov
mov
adc
ror
scas
lods
xor
cmp
jmp
pop
sub
sub
sbb
cmc
aaa
inc
leave
jecxz
and
std
call
movs
mov
mov
jp
jnp
pop
sahf
mov
in
ins
push
fist
pusha
xchg
mov
dec
xlat
add
or
pop
xchg
enter
pop
mov
mov
xchg
repz
cmp
es
(bad)
imul
ja
fsubr
sar
movs
jmp
adc
inc
pop
push
inc
les
or
dec
lea
test
pop
push
fcom
aad
aas
sub
enter
ins
js
mov
test
jl
xor
ret
inc
(bad)
pusha
push
rol
or
adc
aas
jmp
enter
sub
push
mov
or
in
js
dec
jno
inc
or
lock
inc
mov
jae
inc
ret
sub
cld
mov
mov
mov
gs
jle
in
push
push
cs
test
inc
mov
mov
mov
movs
jecxz
iret
(bad)
jne
pop
test
into
cmc
cdq
(bad)
mov
pushf
in
jnp
adc
add
idiv
inc
pop
mov
ins
push
inc
jle
xor
jle
adc
cmp
out
push
sub
xor
into
push
dec
push
test
test
bound
push
mov
icebp
add
dec
xchg
mov
cli
inc
sub
mov
ret
inc
dec
xchg
fwait
pop
test
mov
and
pop
and
lahf
and
xchg
mov
mov
pop
push
xor
clc
(bad)
dec
test
dec
sub
cmp
retf
mov
push
sub
push
push
das
dec
sbb
mov
cmp
popf
call
xchg
cmp
repz
adc
dec
add
sahf
or
movs
(bad)
adc
es
xlat
jmp
and
aad
(bad)
sub
sahf
in
mov
outs
shl
out
test
cmc
push
repz
loopne
pop
in
sub
pop
sbb
pushf
stos
lods
mov
es
stos
adc
push
push
xchg
shl
imul
inc
data16
inc
rol
out
sbb
or
ins
das
inc
pop
test
jne
rcl
movs
jbe
loope
or
sub
les
mov
ds
nop
mov
popa
or
xchg
mov
add
repnz
ret
mov
push
retf
(bad)
fwait
mov
ss
push
adc
xchg
dec
aam
int
xor
cdq
loop
les
shl
adc
xlat
inc
xor
or
sahf
sub
xchg
inc
ins
mov
fs
scas
dec
xchg
cmp
repnz
pusha
push
ret
out
push
jmp
mov
sar
xor
shl
add
in
pushf
add
leave
std
add
sub
push
leave
sar
movs
sbb
jge
imul
mov
loop
xchg
cmp
bound
test
cmp
adc
xor
clc
push
clc
add
movs
mov
jle
fild
(bad)
arpl
in
movs
push
mov
and
clc
mov
scas
mov
dec
ins
stos
pop
fcomp
sbb
pop
or
aam
mov
jl
pushf
lea
cdq
mov
adc
push
fdiv
ja
(bad)
arpl
ja
push
jecxz
retf
push
daa
fcomp
sbb
cmps
pop
repnz
adc
xchg
shr
fwait
cmps
adc
mov
add
cmc
cmps
sub
adc
push
push
clc
sub
ds
into
adc
out
pop
bound
xor
ret
and
mov
push
faddp
sahf
hlt
aaa
add
inc
xor
sti
cwde
movs
pusha
movs
xchg
pushf
mov
outs
mov
iret
fmul
fsubrp
sub
mov
enter
mov
aad
mov
sub
(bad)
sbb
dec
data16
sub
lock
test
sub
push
bound
cmp
xchg
or
fldenv
add
ret
out
or
pop
scas
mov
rcl
fbstp
std
cmp
stos
cmp
dec
loopne
fs
add
(bad)
jecxz
and
sbb
pushf
(bad)
retf
es
clc
xchg
ss
push
sahf
(bad)
mov
sbb
or
sbb
pop
pop
call
adc
push
outs
pop
jne
cld
xchg
ins
mov
push
fdivp
adc
mov
xchg
pop
jbe
cmps
ins
xlat
xor
cdq
loop
add
lods
fistp
scas
inc
inc
mov
xor
mov
pop
loopne
arpl
int3
test
retf
add
xor
mov
call
mov
enter
add
call
add
sbb
pop
fld
xchg
retf
and
sub
js
fisttp
pushf
jecxz
mov
xchg
scas
fcmovnb
push
inc
bound
mov
mov
mov
push
test
je
dec
cli
iret
rol
jae
pop
mov
push
pop
xor
ja
icebp
inc
in
rol
sub
dec
push
cmps
jnp
add
sti
repnz
rcr
xchg
mov
cmc
push
sbb
call
xor
pop
scas
jg
cs
xchg
mov
lods
(bad)
mov
xchg
cs
sti
mov
xchg
movs
dec
test
mov
fwait
lock
int
frstor
popf
xchg
test
sub
xor
cdq
mov
daa
jg
stos
sbb
jg
cmp
(bad)
cmp
pop
scas
sar
mov
scas
add
frstor
loop
call
aad
jbe
shl
jbe
xchg
mov
aaa
test
and
in
movs
mov
popf
aad
leave
retfw
add
sar
aaa
ds
jmp
cdq
repnz
cs
jl
neg
add
lds
inc
jl
cmp
push
cmp
call
mov
push
cmp
icebp
mov
add
or
loope
pop
addr16
cmps
sbb
xor
js
sbb
push
xchg
mov
cmp
(bad)
push
push
mov
xor
mov
lods
outs
call
pop
into
push
outs
cld
in
jnp
(bad)
call
jmp
cmp
std
mov
or
(bad)
hlt
ds
jns
cmps
fisubr
adc
adc
mov
fldcw
icebp
mov
retf
adc
cmp
xchg
lock
add
pushf
call
jp
out
mov
fisubr
or
mov
and
xchg
pop
add
retf
pop
mov
pop
out
push
imul
je
arpl
outs
cld
pusha
push
mov
cmps
mov
int
(bad)
push
hlt
jl
cmps
push
or
jecxz
mov
int3
pop
and
ret
ja
(bad)
in
xor
popf
adc
mov
in
cld
ja
out
sub
or
and
jb
aad
pop
sub
pop
fnstcw
arpl
in
rcl
xchg
mov
xor
(bad)
pusha
jmp
(bad)
sub
ins
add
dec
mov
mov
jl
jmp
popa
aas
mov
mov
out
xor
out
mov
push
lds
jno
jae
cdq
in
leave
push
stos
xchg
cmp
cmp
(bad)
xchg
imul
push
pop
pop
movs
cld
stc
push
data16
rcr
pusha
retf
mov
iret
pop
push
mov
pop
and
jnp
js
push
(bad)
fisubr
xchg
jns
test
xchg
mov
aas
fadd
xchg
fldenv
jecxz
out
xchg
ins
cwde
jno
fstp
sbb
add
call
sub
daa
ss
repnz
dec
xor
jle
(bad)
mov
cmps
add
push
imul
dec
(bad)
std
or
jne
cli
inc
jb
and
pop
js
add
repz
and
pushf
mov
push
addr16
out
adc
xor
pop
fwait
cdq
push
cld
push
pushf
jo
cmp
sub
sub
push
cmp
test
fstp
dec
jb
shr
ret
dec
(bad)
test
pusha
jnp
lea
in
scas
stos
lods
or
inc
std
mov
clc
jo
sar
push
clc
add
fadd
inc
mov
mov
jl
and
int
lock
test
das
daa
stos
(bad)
outs
mov
jb
add
(bad)
dec
retf
push
mov
nop
jl
inc
inc
popa
mov
mov
mov
jb
pop
push
cmp
test
loop
mov
rcr
outs
cmp
sub
cmp
int3
push
sbb
dec
(bad)
cmp
cdq
scas
mov
inc
gs
adc
repnz
das
xor
or
stos
adc
push
pusha
xor
mov
and
jb
call
cmp
and
sbb
jle
ja
cmp
jg
sar
pop
daa
lods
jo
adc
inc
adc
das
add
mov
inc
mov
ja
cli
mov
pushf
mov
xchg
push
jge
mov
add
sub
mov
adc
inc
inc
jecxz
clc
mov
cmps
mov
popf
inc
pop
or
jns
inc
xchg
in
push
dec
stc
mov
sbb
dec
mov
rcr
sar
js
bound
out
not
mov
push
ror
adc
cmp
sti
inc
mov
adc
or
leave
int
arpl
test
stos
aaa
xchg
iret
and
push
das
(bad)
sbb
clc
hlt
adc
dec
inc
mov
imul
into
push
mov
mov
into
jge
cmps
sbb
je
ins
mov
dec
push
pushf
movs
xchg
pop
or
lock
xlat
bound
fisubr
push
push
pushf
das
movs
mov
jmp
cld
adc
xchg
fadd
mov
ss
lock
mov
xchg
push
push
ins
test
pop
adc
clc
xchg
dec
sahf
(bad)
fist
jae
aas
test
sub
cmp
jmp
xor
popf
mov
cmps
cmp
or
xor
push
sub
cmps
das
dec
test
dec
dec
mov
add
and
add
or
xor
nop
mov
push
aas
mov
push
and
cdq
mov
outs
fnstsw
(bad)
call
mov
lds
stos
jb
mov
retf
int3
sbb
adc
xchg
in
jbe
movs
daa
sbb
call
add
lods
repz
ss
sbb
sbb
in
lahf
push
int
jge
movs
or
push
cmp
xor
cmp
aas
in
ja
retf
inc
push
adc
sub
pop
fisttp
lock
jae
and
fwait
mov
pop
xor
(bad)
ins
imul
pop
push
sub
jg
jae
jo
jp
adc
cmp
ins
stc
loope
add
mov
mov
lods
xor
test
xlat
test
(bad)
shl
stos
nop
iret
sar
xchg
pop
dec
and
lock
std
aaa
dec
cmc
test
push
jo
mov
(bad)
in
rcl
inc
(bad)
ror
je
mov
stos
out
scas
cmp
mov
pop
mov
ins
in
cli
push
xlat
or
loope
sbb
test
add
cmps
lahf
add
and
adc
inc
adc
xchg
loop
xor
daa
or
jne
imul
jns
jmp
add
mov
fs
(bad)
pop
out
push
outs
aas
cwde
test
push
fild
call
mov
sti
and
(bad)
(bad)
sahf
inc
pop
fmul
push
mov
mov
dec
jnp
jecxz
ins
rol
mov
aaa
jbe
(bad)
push
xor
mov
mov
push
nop
in
call
sub
into
mov
cmp
fwait
mov
jle
test
out
mov
es
mov
(bad)
mov
mov
xchg
cmp
cmp
cmp
ret
mov
inc
push
jbe
(bad)
mov
fcomp
push
loop
fstp
jno
shl
out
mov
adc
push
stc
mov
or
inc
cmp
fsubr
jecxz
pop
cmps
enter
mov
outs
imul
sub
shl
jo
mov
movs
or
les
pusha
out
cmps
and
xor
jecxz
xchg
pushf
adc
and
push
sbb
push
or
and
icebp
gs
jg
and
mov
xor
pop
push
push
dec
pusha
repz
es
mov
push
mov
enter
lds
(bad)
fst
pop
xchg
(bad)
movs
in
jns
push
lods
neg
lock
and
das
adc
out
lock
push
loop
jb
sbb
inc
mov
push
call
or
cmp
fld
or
scas
repz
movs
outs
loope
sub
add
fidiv
push
das
aam
pop
or
aaa
addr16
cmp
dec
fwait
bound
adc
gs
div
cmc
xchg
in
xor
cli
mov
xor
icebp
fsubr
push
mov
out
daa
push
jmp
aas
mov
rcr
mov
cs
jl
xchg
xor
xchg
enter
rcl
ret
add
outs
sbb
or
arpl
mov
aaa
xlat
fistp
stos
(bad)
into
mov
fist
aaa
push
clc
xor
pop
(bad)
cmps
mov
mov
mov
lds
mov
add
sbb
in
and
(bad)
and
enter
out
popf
mov
xor
aas
(bad)
clc
retf
retf
mov
in
stos
mov
movups
js
scas
jno
sbb
adc
in
pop
aam
pop
ja
rol
push
aas
cwde
jbe
dec
je
cmps
inc
or
push
es
dec
cli
mov
fild
fdivp
call
imul
loopne
adc
push
jbe
es
mov
sti
hlt
(bad)
and
mov
das
test
push
inc
inc
mov
(bad)
jmp
test
mov
aas
xor
xor
mov
and
and
or
ins
int3
repz
xchg
mov
mov
or
cmps
pop
nop
in
out
jns
add
or
xchg
imul
aas
fucomip
fcmovne
mov
inc
mov
aam
dec
mov
sbb
mov
or
push
shr
es
add
arpl
or
inc
leave
adc
or
xchg
or
retf
fcom
add
aam
movs
inc
ror
rol
push
or
sub
pop
pushf
loope
ds
das
mov
mov
push
or
jbe
mov
push
xchg
pop
mov
or
mov
mov
std
jne
(bad)
mov
xor
mov
or
(bad)
cs
xor
inc
push
jmp
xchg
iret
rcr
data16
popf
cmp
dec
dec
rcl
stos
mov
pop
int
(bad)
repz
sub
xchg
jge
pop
mov
gs
pop
in
in
xor
pop
ror
pop
mov
adc
sbb
dec
mov
mov
into
inc
loope
jg
xor
or
xchg
xchg
mov
imul
ja
push
jp
adc
pop
mov
mov
dec
and
(bad)
dec
in
fidiv
movs
ja
mov
out
xlat
dec
xchg
fcomp
mov
xor
mov
(bad)
pusha
(bad)
dec
dec
sar
clc
lds
stc
fcomp
cdq
out
jl
test
or
inc
push
adc
sbb
loopne
ret
push
cli
cmp
cmps
mov
push
pop
pop
movs
ss
push
add
or
adc
rcl
mov
(bad)
sahf
mov
shl
inc
sbb
xchg
out
mov
jmp
inc
shl
ret
xor
sub
pusha
or
cmp
jae
es
xchg
xor
test
lahf
mov
inc
adc
test
jae
adc
adc
ret
xchg
loopne
aaa
call
or
cmp
sar
pop
sbb
jg
retf
sbb
xor
out
xor
xor
std
nop
fs
xchg
pop
adc
jb
pop
dec
(bad)
dec
fwait
sbb
popf
cmp
nop
hlt
cwde
push
mov
cdq
inc
push
mov
aas
out
cli
mov
push
sar
xor
mov
scas
add
outs
ds
das
xchg
adc
add
scas
jbe
inc
xor
inc
frstor
sub
movs
xchg
cmp
mov
push
sbb
pop
pop
sbb
add
push
adc
lahf
ja
add
jge
xor
jmp
add
test
stos
sar
into
ror
mov
fwait
sub
mov
sub
adc
xor
jb
in
add
sar
outs
jecxz
mov
mov
push
scas
mov
or
cs
pop
popa
jmp
xor
jmp
div
inc
xor
fdivrp
pop
loopne
(bad)
jae
inc
sbb
mov
out
xchg
add
jp
cdq
xchg
out
jl
jmp
lahf
mov
cmp
test
fcomp
mov
call
rcl
(bad)
and
mov
mov
pop
shr
jmp
sub
jns
out
lock
clc
pop
stos
cs
adc
addr16
std
and
push
and
outs
xchg
mov
test
cmps
jl
stos
ror
imul
fisub
ds
outs
jae
cmp
sub
add
neg
fmul
fbld
xchg
cmc
leave
mov
ret
into
repnz
dec
and
pop
enter
dec
mov
outs
cmp
push
xor
cwde
cmp
cmp
mov
(bad)
dec
jnp
mov
xlat
mov
fcmovnb
pop
inc
or
(bad)
adc
out
(bad)
neg
fwait
cs
stc
mov
pop
shl
mov
icebp
shl
push
retf
jge
outs
out
xchg
push
(bad)
or
out
mul
mov
popf
mov
pop
ins
mov
inc
(bad)
fmul
dec
aam
and
rcr
xchg
pop
arpl
sbb
in
arpl
or
test
jmp
xor
cmp
ret
mov
(bad)
icebp
dec
je
out
pop
or
(bad)
ins
(bad)
sbb
(bad)
loop
pusha
xlat
(bad)
(bad)
adc
push
(bad)
jb
in
ror
mov
cmp
or
in
test
sbb
ss
mov
push
sub
inc
xchg
(bad)
mov
push
xor
inc
aad
or
adc
aaa
mov
enterw
loope
enter
pushf
inc
dec
loopne
push
sbb
and
xor
sub
xor
movs
jo
sub
sub
inc
add
xlat
mov
mov
jns
cli
xchg
test
and
dec
fucomi
aaa
or
movs
lock
jne
cmp
aas
inc
dec
in
fistp
push
repnz
aam
xchg
in
pop
push
retf
hlt
inc
shl
aad
lods
test
jb
shr
sub
repz
xchg
daa
dec
adc
jo
repz
or
or
add
test
mov
xchg
addr16
movs
or
mov
sub
call
imul
push
shl
xor
ins
imul
fstp
leave
add
lods
xchg
idiv
jae
shl
mov
call
xor
pop
lds
sti
loope
daa
mov
ja
sub
imul
or
sbb
inc
cmps
and
sbb
mov
inc
daa
(bad)
mov
sti
or
mov
mov
jl
inc
popw
ja
xor
adc
dec
cmp
sbb
xor
mov
push
mov
dec
call
jae
dec
loop
adc
xchg
dec
sar
das
mov
mov
sbb
std
mov
xor
psubusb
adc
xchg
(bad)
adc
jl
mov
pop
cli
jb
mov
dec
pop
mov
hlt
and
add
jmp
push
int
stos
sahf
xchg
mov
test
in
xchg
lock
ja
in
xor
xchg
out
mov
mov
push
or
hlt
je
xlat
mov
jns
jne
push
out
adc
imul
xor
pop
sub
ret
rcr
sbb
pop
nop
sar
pop
pop
lea
cmp
jns
cmp
outs
xchg
inc
cmc
hlt
fstp
cmps
cmp
sbb
adc
cmc
std
add
mov
adc
push
xor
mov
cmp
xchg
imul
mov
jbe
movs
jmp
and
mov
scas
mov
call
scas
stc
retf
movs
sbb
in
cmps
jmp
push
retf
retf
inc
lea
jle
xor
sub
adc
fdivr
ins
adc
jecxz
cld
mov
cmp
push
mov
pop
imul
adc
iret
aam
or
mov
fcom
(bad)
push
sahf
inc
mov
xor
cmps
mov
pop
stos
add
icebp
mov
ret
fs
or
mov
fst
retf
inc
icebp
xor
mov
not
or
test
jecxz
jg
or
test
mov
fwait
add
pop
jl
and
in
or
aaa
inc
fidiv
scas
dec
call
sbb
in
push
imul
fwait
(bad)
fild
fsubr
and
push
sahf
js
pop
arpl
sub
mov
stos
jg
rcr
call
push
pusha
sbb
dec
scas
add
add
iret
adc
(bad)
in
repnz
es
mov
mov
test
cdq
xchg
inc
sbb
lahf
call
pop
sbb
pop
or
div
jmp
sub
cli
lea
mov
add
sbb
push
out
inc
es
pop
or
cwde
sub
add
cmp
sbb
push
xor
dec
aam
loope
pop
mov
jmp
ja
xor
stc
or
mov
repz
lea
inc
inc
and
fld
push
pop
xchg
xchg
cli
pop
and
rcr
fidiv
shl
cwde
in
mov
hlt
jmp
sti
cmp
dec
outs
ja
sub
add
out
(bad)
(bad)
icebp
mov
inc
add
stos
push
cli
dec
ss
(bad)
fisttp
xor
or
jge
int
mov
icebp
push
dec
mov
mov
adc
push
and
mov
sbb
into
test
movs
lds
xchg
jecxz
xor
push
fptan
retf
repnz
repz
nop
mov
leave
div
ret
xchg
cmp
xchg
xchg
int3
fisub
out
xchg
xchg
repnz
adc
in
add
outs
or
cmps
sub
inc
inc
fwait
std
lock
fninit
adc
fstp
enter
xlat
push
push
fcmovnbe
test
arpl
mov
outs
je
pop
pop
push
mov
daa
sub
rcr
and
repnz
mov
inc
call
repnz
sub
pop
push
out
or
pop
stc
xor
clc
sar
push
or
mov
dec
(bad)
adc
add
aas
lahf
push
mov
ror
and
jg
lahf
jns
mov
addr16
cmc
pusha
rcr
mov
mov
pop
adc
imul
call
shl
nop
jno
fadd
call
dec
cmc
push
xchg
inc
or
dec
inc
sbb
cli
sbb
add
jmp
jmp
sub
movs
call
mov
iret
add
ss
movs
out
pop
or
jae
pop
ret
(bad)
repz
sbb
push
jo
in
in
add
or
xor
cmps
jns
xor
das
pop
cmp
inc
cmc
mov
cli
std
ffree
lock
sbb
inc
jle
jb
sahf
mov
and
add
cmc
ret
adc
mov
mov
iret
in
adc
cmps
jg
aam
mov
pop
scas
scas
adc
mov
mov
mov
into
shl
mul
div
add
iret
push
shl
fcomip
(bad)
aaa
xor
(bad)
bound
(bad)
xor
sbb
loop
aaa
xchg
inc
fdivr
and
aad
fisttp
jnp
rcl
idiv
fucomi
jns
cmp
mov
inc
pop
and
aad
ret
xchg
inc
call
dec
sub
inc
faddp
int
js
and
inc
int
xlat
or
xchg
out
xchg
xchg
and
nop
out
and
iret
loopne
adc
cmp
inc
sbb
cmp
cdq
push
xor
dec
xor
mov
cmp
sbb
inc
loopne
inc
aas
in
das
fsubp
in
push
pop
mov
sbb
mov
pop
mov
and
jnp
mov
sti
cli
push
loop
pop
mov
add
mov
adc
mov
mov
jne
in
adc
jmp
mov
pop
sti
in
push
pushf
xlat
xor
pop
dec
xchg
scas
cmps
push
in
jns
cwde
or
push
fs
rcr
push
mov
mov
bound
add
test
jns
cs
push
jb
ja
cmc
pop
sub
repz
retf
cmp
inc
mov
xchg
pop
jbe
or
loopne
sub
jo
test
fisubr
aad
(bad)
test
movs
pushf
clc
xor
mov
mov
faddp
test
pop
or
clc
cwde
pop
or
js
idiv
sbb
pop
(bad)
and
mov
xor
add
inc
outs
aad
imul
iret
addr16
xchg
aam
das
push
call
mov
std
or
mov
inc
pop
sub
inc
and
pop
dec
mov
stos
ror
mov
mov
and
jb
scas
adc
ins
enter
cdq
mov
pop
in
call
push
je
xchg
fsubr
pop
pop
mov
jbe
movs
dec
push
or
jle
cld
jmp
pop
or
cmc
push
test
iret
inc
pop
scas
add
fs
jns
push
mov
movs
ja
mov
addr16
inc
adc
out
(bad)
loopne
hlt
retf
cmp
cld
jg
xchg
and
(bad)
call
push
fistp
ins
sar
std
push
add
test
xchg
cmp
lea
out
dec
pop
jle
xor
mov
mov
sbb
xchg
pop
or
add
icebp
out
or
out
movs
call
out
out
jg
xor
stos
push
add
(bad)
mov
jnp
xchg
(bad)
into
inc
mov
cmp
pop
adc
sub
push
and
push
mov
fsub
retf
not
out
mov
pop
lds
loop
mov
leave
adc
ds
fdivr
outs
std
rcl
cmps
cmps
mov
and
sub
(bad)
add
arpl
out
xchg
xor
pop
std
dec
push
rol
mul
out
fcomip
pop
jmp
mov
fnstcw
or
leave
mov
mov
mov
inc
mov
retf
dec
retf
adc
pop
sar
pop
sbb
and
les
sahf
mov
xchg
imul
gs
gs
frstor
rol
inc
test
addr16
jnp
adc
jge
mov
neg
scas
jns
dec
scas
shl
cdq
push
adc
cmp
inc
loope
and
hlt
scas
or
sub
xor
sti
(bad)
stc
into
jmp
gs
mov
adc
std
mov
cmp
pushf
outs
dec
fisubr
stc
lock
cwde
or
lods
or
jg
inc
ds
popf
cwde
or
sbb
gs
aad
lock
rcr
pop
scas
imul
aad
das
lods
scas
(bad)
fld
popa
lock
jnp
call
icebp
dec
adc
add
pop
or
jo
cmps
iret
cmp
lock
sub
aad
pop
das
test
xor
xchg
or
add
in
dec
cmp
xchg
sbb
scas
cdq
pop
adc
jmp
test
pop
pop
hlt
xor
pop
push
fstp
and
cld
sub
jo
xchg
adc
nop
or
mov
pop
(bad)
xor
nop
mov
test
test
sbb
pop
into
add
or
inc
or
push
cmp
mov
inc
push
sbb
pop
mov
pop
jmp
xlat
shr
(bad)
mov
jecxz
jle
adc
cwde
lds
jmp
leave
cmp
popf
mov
jge
push
sub
sub
or
imul
in
arpl
mov
and
dec
xchg
and
stos
xchg
in
or
push
mov
repnz
nop
sti
(bad)
popf
sbb
mov
rol
mov
jmp
inc
mov
xor
pusha
arpl
sbb
and
lds
(bad)
fsub
mov
(bad)
mov
mov
test
jnp
in
or
sbb
cmp
or
into
cwde
sub
test
push
shl
or
dec
sbb
jns
push
out
ss
sub
dec
cmp
loope
pop
(bad)
push
mov
push
sbb
lahf
loope
mov
cmp
inc
and
or
xor
mov
dec
outs
push
xor
sub
or
test
fnstsw
or
cld
push
ds
and
in
das
add
fild
cmp
mov
adc
pop
add
(bad)
retf
mov
fist
dec
mov
enter
jo
cmp
lea
loope
outs
data16
retf
repz
jmp
and
pop
and
push
xor
(bad)
dec
pusha
int3
aas
mov
or
mov
sub
out
in
cmp
fdiv
mov
mov
inc
xchg
outs
movs
ss
iret
daa
xor
in
and
dec
test
js
test
retf
inc
test
pushf
test
imul
jle
fld
adc
test
push
mov
and
loop
push
cmc
dec
push
into
cdq
pop
and
dec
clc
jo
inc
imul
stos
repnz
test
pop
ja
std
sub
pop
ja
movs
nop
fimul
xchg
addr16
push
inc
cmc
and
not
mov
in
cmc
addr16
jne
adc
ins
add
sub
ret
jae
stc
push
sti
bound
push
icebp
scas
in
xor
jecxz
std
and
gs
mov
shl
push
push
ja
retf
mov
xchg
add
mov
or
cmp
xchg
adc
div
scas
gs
jl
into
daa
in
or
adc
mov
xchg
jae
cmps
add
lods
leave
js
je
xor
ds
cmps
sar
inc
ja
inc
je
sbb
inc
sub
scas
jmp
fcom
mov
shl
and
ror
xchg
xchg
mov
pusha
jns
jnp
cmps
addr16
or
imul
or
add
loop
rol
push
xchg
imul
sbb
inc
dec
xor
inc
add
mov
dec
xchg
jg
pop
bound
retf
dec
cli
popa
jns
adc
inc
sbb
fdivp
call
or
push
pop
push
mov
jmp
pop
xchg
adc
shl
and
pop
dec
adc
jle
icebp
es
pop
dec
and
pop
into
int3
mov
mov
jecxz
dec
fidiv
mov
popa
mov
push
xchg
fld
xor
jp
xchg
push
mov
mov
pushf
or
dec
xor
cli
into
xor
add
cwde
cld
add
test
mov
cli
cwde
je
fdiv
test
sub
rol
cmp
mov
jmp
test
cmp
call
sti
and
movs
jae
xchg
test
loope
movs
sbb
int
fnclex
push
push
mov
inc
sub
dec
adc
push
xor
mov
sahf
fild
xor
sbb
mov
jg
movs
inc
cmp
std
ins
les
inc
ret
stos
sbb
inc
lock
cmc
aas
xchg
idiv
xchg
sbb
jae
sbb
pop
cmps
mov
js
inc
fs
push
and
jno
jnp
xlat
aad
xchg
mov
shl
dec
addr16
ds
pusha
dec
adc
or
fwait
imul
das
mov
repnz
push
dec
dec
rcl
adc
or
stos
and
ror
fsub
fcom
sub
jae
add
pop
xor
scas
dec
sub
arpl
fld
jo
sbb
add
jp
xor
xchg
push
imul
cmp
inc
inc
outs
in
ret
sbb
das
lea
add
push
in
scas
jmp
cmp
retf
inc
mov
adc
xor
out
sub
mov
inc
adc
mov
aad
jnp
mov
and
data16
sub
inc
mov
ret
mov
loop
adc
fdiv
pop
mov
adc
mov
call
pop
int
(bad)
ds
ins
dec
in
stc
les
inc
lds
jne
pushf
icebp
dec
adc
stos
(bad)
aam
nop
push
repz
push
mov
(bad)
cld
mov
jae
mov
(bad)
mov
cdq
jg
int3
add
test
pop
lds
fimul
pusha
sbb
jl
addr16
out
and
inc
jge
sbb
xchg
add
scas
mov
cmp
in
push
ror
stos
sti
add
(bad)
(bad)
call
inc
scas
xlat
adc
xor
mov
stos
jge
sub
dec
and
das
sub
aaa
xchg
add
push
jp
jbe
sub
imul
loopne
xlat
push
lds
pop
push
(bad)
sbb
mov
xchg
mov
mov
add
ins
aam
enter
mov
push
xchg
(bad)
fdivp
sub
xchg
repz
push
fdiv
cdq
mov
rol
and
and
xor
mov
add
mov
dec
dec
fwait
jb
loopne
add
stos
adc
xor
fwait
sub
ins
int
mov
repz
psubq
and
ret
jmp
or
mov
hlt
xor
neg
jmp
(bad)
in
and
mov
leave
xchg
popf
jmp
movs
jp
mov
test
dec
mov
pop
dec
cmp
cmp
gs
call
pop
out
sti
inc
rcr
adc
xor
cs
and
sub
scas
lods
adc
pusha
mov
push
lods
pop
adc
and
lds
xchg
sbb
into
mov
dec
add
imul
dec
outs
rcr
push
mov
fsubr
lods
lods
or
xchg
xchg
les
xor
lds
jmp
sahf
(bad)
aam
fidiv
adc
int3
fs
dec
enter
add
enter
and
daa
repz
(bad)
inc
inc
mov
push
cs
enter
jns
scas
cmovb
xchg
pop
inc
and
sbb
retf
inc
xor
shr
pop
loope
test
push
mov
fs
inc
dec
push
jmp
bound
mov
push
fcom
sbb
loope
imul
stos
and
xor
jmp
adc
call
sti
sub
into
cli
icebp
pop
mov
lods
and
pop
add
cmp
in
loop
iret
cmp
mov
sar
into
stc
pop
mov
mov
addr16
sbb
pop
adc
push
adc
cmp
cmp
push
push
push
scas
jno
pop
cld
sbb
push
ret
xchg
jg
jns
add
sbb
in
ficom
adc
mov
push
xor
fistp
xlat
mov
int
mov
cmps
movs
das
enter
and
inc
rcl
mov
repz
fimul
xchg
and
lock
imul
into
lds
repnz
mov
ret
lahf
cdq
pop
cmp
push
sub
mov
nop
sbb
imul
in
lea
(bad)
in
add
mov
or
fisub
cmp
dec
or
bound
push
fst
popf
and
pop
imul
push
shr
out
pop
pop
fcmovnb
inc
mov
mov
repz
and
not
adc
pop
jmp
inc
mov
add
ret
push
mov
jnp
add
sbb
or
and
cld
pushf
mov
add
inc
jmp
and
call
pushf
je
mov
pop
push
imul
inc
int3
test
push
pop
dec
or
add
cli
mov
push
jmp
enter
dec
arpl
call
lea
or
cmps
jne
pop
add
mov
outs
jl
rcl
sub
inc
xchg
sbb
dec
clc
ja
mov
in
mov
xor
sbb
sub
or
dec
cmps
setl
mov
jmp
pop
fs
cmps
or
add
daa
sub
in
push
outs
call
xor
test
cmp
add
sub
or
ret
into
jp
cmps
scas
jge
leave
push
sub
lea
xchg
pop
cmp
stc
adc
push
jp
inc
push
pusha
mov
push
dec
test
test
cmc
mov
add
mov
test
xor
cmp
mov
inc
xor
push
add
mov
mov
mov
test
inc
imul
out
bound
jno
pop
xor
lahf
and
cmp
dec
jae
dec
cwde
inc
test
ja
ins
(bad)
pop
mov
sbb
daa
push
push
mov
jp
cmp
add
sbb
outs
fist
inc
jle
lock
es
jp
movs
push
and
je
or
mov
and
jle
fcomp
loopne
lods
sbb
jno
or
hlt
adc
sbb
gs
shl
adc
lods
or
out
std
and
push
js
lea
dec
aas
dec
mov
mov
fxch
mov
mov
(bad)
xchg
out
push
(bad)
ret
mov
xor
jmp
ret
adc
out
sbb
push
push
mov
jne
dec
pop
and
pusha
and
mov
mov
pop
jb
sub
jae
push
adc
gs
movs
scas
ret
adc
jl
pop
mov
ret
jl
addr16
punpckldq
repz
ror
rol
mov
shl
das
popa
cmp
scas
mov
pop
out
mov
mov
out
jl
and
ds
(bad)
or
loope
push
outs
inc
scas
xor
mov
fdivr
adc
sub
fiadd
lahf
add
popa
in
inc
mov
mov
jno
sbb
je
mov
out
mov
adc
dec
(bad)
mov
pop
out
sbb
or
ds
daa
addr16
sahf
jne
dec
adc
(bad)
retf
fidivr
jmp
mov
cmp
test
mov
xchg
ror
mov
(bad)
mov
mov
mov
push
ins
out
aaa
dec
mov
jns
fnstcw
shrd
xchg
mov
and
or
mov
push
mov
adc
sbb
pop
nop
mov
cmp
cmp
jo
test
mov
loopne
inc
sahf
push
push
std
push
dec
and
xor
out
jmp
retf
cmp
sahf
mov
shl
ins
dec
ins
shl
jmp
fcmove
mov
loope
movs
popf
repnz
imul
repz
out
repnz
iret
and
test
mov
into
rcr
dec
sbb
pop
xor
out
dec
out
icebp
dec
add
dec
lock
mov
xchg
lods
fcomp
push
(bad)
add
rcr
pop
push
inc
or
mov
scas
adc
mov
jnp
add
das
mov
call
js
xchg
sbb
add
xlat
pop
lahf
pop
push
adc
inc
mov
pop
(bad)
mov
ins
pop
mov
and
mov
or
imul
std
bound
popf
cmp
jmp
xchg
push
stos
sti
jmp
cdq
mov
sti
jno
(bad)
jl
pop
jp
into
push
cmp
fstp
xchg
or
clc
inc
or
sub
out
pop
push
cli
rcl
mul
(bad)
popf
dec
cmp
loop
popf
retf
aaa
fs
imul
lahf
mov
movs
loop
fs
dec
cmp
cwde
add
mov
xor
popf
mov
inc
dec
popf
or
sbb
shl
scas
pop
sub
or
adc
mov
pop
ret
xor
cli
(bad)
fs
mov
push
mov
ret
mov
mov
test
dec
pop
dec
out
or
imul
sbb
push
fistp
xchg
jbe
sbb
enter
mov
push
sbb
cli
sbb
in
adc
test
inc
sbb
outs
mov
bound
cmc
add
cmp
js
mov
movs
push
mov
fistp
enter
shl
mov
outs
xchg
popf
mov
inc
ror
scas
add
mov
lods
pop
movs
push
or
dec
xchg
jne
test
call
fwait
sbb
adc
or
stos
lods
push
(bad)
and
fild
in
fcomp
inc
push
dec
and
mov
sbb
jge
jno
mov
adc
outs
sbb
in
sbb
aam
mov
pop
xchg
jnp
push
out
repnz
arpl
cmps
cmp
inc
outs
mov
jns
arpl
in
loopne
cld
sub
push
and
std
sahf
xor
pop
cld
sar
jne
sbb
cmps
ret
scas
xor
loop
mov
rcl
mov
mov
lahf
cli
xor
stc
fsub
push
pop
or
xor
mov
sbb
int3
lea
ret
inc
push
inc
aas
bound
ja
push
jae
cmp
in
add
dec
aaa
or
mov
push
dec
(bad)
jmp
cli
sub
fmul
outs
not
dec
cmps
jp
pop
sub
mov
push
movs
add
jmp
mov
xor
fistp
xor
sbb
or
push
push
and
mov
inc
(bad)
(bad)
adc
shr
pop
jmp
jbe
retf
cmp
mov
lahf
mov
xor
jb
fsubp
sbb
(bad)
retf
imul
test
gs
shl
aad
call
mov
add
cmp
push
cmp
pop
leave
sub
push
addr16
(bad)
jmp
je
(bad)
push
lahf
mov
inc
dec
movs
mov
jo
sahf
popa
sbb
jnp
test
std
xchg
fnstenv
xchg
in
push
cmp
add
into
jmp
xchg
ins
neg
and
call
push
pop
push
out
fdivr
and
sbb
fsub
imul
and
dec
xor
test
mov
addr16
cmp
movs
enter
pop
add
imul
lods
test
xchg
xchg
rcl
mov
scas
mov
sub
inc
retf
mov
imul
xor
push
das
jo
movs
mov
les
sbb
pop
jmp
mov
outs
les
(bad)
mov
in
es
add
mov
pop
adc
daa
dec
inc
cmp
dec
add
sbb
cmp
xor
call
cmps
push
lds
repnz
loopne
push
stos
mov
inc
in
(bad)
xchg
inc
and
or
xchg
and
pop
stos
shl
aas
mov
out
sbb
mov
loopne
and
(bad)
mov
inc
inc
mov
daa
add
jns
js
jo
iret
or
int
rol
mov
daa
mov
dec
pop
mov
or
cwde
mov
jg
sub
jg
nop
es
pop
jo
scas
push
out
sti
jmp
fimul
int
retf
(bad)
sbb
push
pop
push
retf
inc
shr
movs
xor
(bad)
jmp
call
outs
scas
and
mov
and
icebp
in
xlat
fwait
repnz
add
push
adc
je
imul
xchg
jae
sub
push
pop
in
ds
mov
sbb
ret
xchg
adc
or
or
(bad)
lahf
call
(bad)
cld
hlt
test
xor
enter
lods
movs
or
shl
out
dec
mov
ins
or
lea
scas
inc
adc
sub
push
js
xchg
and
xchg
mov
and
pushf
retf
ror
les
aas
iret
jle
cmps
aas
test
loope
push
ins
scas
imul
cmp
inc
and
(bad)
xor
pop
arpl
rol
mov
mov
push
cmp
jnp
pop
addr16
add
jns
icebp
pop
mov
into
mov
add
mov
mov
or
mov
mov
psllw
ja
mov
mov
pushf
inc
div
bound
and
pop
sbb
mov
sub
fs
rol
dec
scas
icebp
mov
mov
pop
rcr
sbb
sbb
jge
mov
fidiv
mov
lock
lods
mov
sub
daa
out
pop
aas
and
ss
mov
out
mov
aam
enter
push
cmc
addr16
jle
cwde
add
xor
jmp
jle
pop
xlat
jne
and
repnz
and
ret
je
or
test
sub
call
sbb
jns
popf
push
sub
(bad)
mov
pop
and
dec
add
xchg
xchg
and
and
jae
daa
out
pop
aaa
ud1
mov
cmp
or
nop
xor
aaa
xchg
xor
adc
xlat
inc
inc
push
fdivrp
xchg
retf
mov
add
mov
inc
add
dec
outs
mov
js
test
mov
xchg
xor
dec
and
dec
div
fdivrp
cwde
push
adc
pop
aam
popa
(bad)
idiv
fcom
icebp
cwde
jp
call
or
inc
inc
ins
cmps
lods
lahf
(bad)
push
pop
sbb
int3
imul
addr16
sub
gs
jnp
sbb
aad
loop
std
cdq
out
iret
jbe
mov
sbb
sub
cs
push
and
adc
and
sahf
cmp
xor
sub
scas
push
(bad)
repnz
stos
sbb
pop
popa
in
call
sub
imul
daa
sbb
lock
xor
pop
in
xchg
mov
loopne
loope
icebp
loope
hlt
cwde
adc
push
adc
ret
push
pusha
aad
jmp
jmp
add
cmps
push
adc
(bad)
movs
(bad)
fidiv
mov
int
leave
add
int3
icebp
mov
sbb
cmps
mov
repz
dec
sub
push
cmp
push
ins
pop
lea
loop
das
xor
mov
icebp
dec
repz
das
sti
jb
test
and
imul
xchg
icebp
ror
clc
repnz
mov
add
dec
push
cmp
shl
fiadd
or
scas
mov
push
stos
cpuid
and
dec
movs
jp
addr16
pop
or
dec
pop
or
cmps
sub
cmps
sbb
daa
fldcw
mov
sbb
int
mov
cwde
mov
mov
ins
(bad)
pop
mov
push
cmp
jecxz
inc
in
pop
(bad)
neg
stc
ins
push
sbb
cmp
mov
cmp
(bad)
movs
addr16
add
arpl
test
add
shl
lea
scas
xchg
jp
out
cmp
(bad)
enter
cmp
cmp
push
lods
dec
or
ins
stc
sub
sub
add
call
pop
loopne
stos
fistp
cmp
int
push
sub
add
call
dec
xchg
mov
cmc
dec
(bad)
jae
pop
out
sub
pop
sbb
xor
shr
aas
xchg
mov
dec
aaa
test
mov
pop
jno
in
jns
jb
dec
rcr
fimul
aaa
inc
mov
popf
out
mov
mov
movs
test
cdq
call
(bad)
(bad)
jbe
add
outs
and
cmp
mov
mov
pop
stos
sbb
icebp
dec
test
cmp
cwde
mov
enter
inc
ins
arpl
mov
mov
xor
das
popf
jne
and
das
sub
pop
ins
pop
jp
and
push
mov
pushf
hlt
popw
lods
dec
sub
comiss
aaa
stc
outs
mov
dec
fist
out
neg
mov
gs
das
sub
popf
or
sysret
pop
ss
ds
xchg
jb
push
cdq
or
xchg
xlat
add
repnz
or
mov
or
push
popa
mov
mov
push
out
scas
adc
adc
movs
xor
jl
stc
xor
ret
cmp
push
mul
fimul
and
in
bndldx
fst
jne
int
outs
jg
rol
loope
or
fdiv
pop
fild
push
xchg
fdiv
(bad)
adc
stos
cmp
jle
inc
das
pcmpgtd
(bad)
fwait
movs
cmp
mov
jo
(bad)
jp
pop
sar
shl
retf
je
xchg
repnz
pop
adc
pop
jnp
jnp
fld
xchg
dec
push
out
and
int3
cmc
jmp
sbb
add
and
mov
cdq
aas
stos
retf
sub
stc
mov
xor
(bad)
sti
push
push
aad
jnp
push
sahf
xchg
jne
mov
les
lahf
pop
mov
dec
loop
jae
jbe
sar
jns
mov
repnz
std
add
and
xchg
mov
dec
rcr
stos
popa
jge
fwait
imul
xor
jno
sbb
mov
xchg
(bad)
cld
sahf
das
nop
adc
mov
imul
adc
out
xchg
jl
push
dec
add
xchg
push
cmp
pop
inc
pop
and
in
dec
repz
mov
mov
xchg
xchg
cmps
das
test
fst
add
adc
mov
jg
pop
rol
mov
in
call
mov
cmp
jno
mov
add
mov
inc
mov
pop
sbb
iret
dec
iret
or
push
outs
and
push
sbb
inc
jae
and
jno
fidiv
jo
mov
je
jnp
adc
data16
sub
popa
and
(bad)
ins
arpl
mov
jno
inc
push
enter
fsqrt
jg
cmp
into
cmp
jmp
or
cs
pop
cmp
adc
bound
push
movs
ret
jg
aam
cmp
out
mov
dec
mov
sbb
pop
jno
mov
repnz
xor
xchg
fcmovne
sti
(bad)
jmp
sbb
int
int3
in
js
pop
inc
es
pop
push
shr
add
aaa
test
nop
push
or
mov
sbb
push
or
sbb
cli
scas
xchg
mov
test
iret
dec
enter
mov
iret
les
push
data16
mov
scas
pop
xchg
xchg
dec
(bad)
stos
pusha
add
dec
js
bound
test
or
cwde
scas
add
aaa
popa
and
push
mov
cwde
cmp
cmp
sub
jmp
clc
push
adc
push
push
out
xchg
add
mov
add
and
fdivr
hlt
xchg
or
mov
and
mov
push
push
loope
add
xlat
mov
mov
push
mov
movs
mov
push
and
call
sbb
clc
popf
jg
mov
inc
rcl
xchg
stc
jmp
push
xor
add
add
jmp
test
into
inc
(bad)
call
jnp
out
jecxz
fwait
jl
sub
adc
pop
ss
and
cmp
mov
fldz
cmp
loop
call
test
xor
add
and
push
and
inc
inc
cmp
dec
fwait
sub
lea
in
loope
mov
faddp
lods
cwde
adc
push
mov
push
adc
mov
jecxz
aad
fimul
ret
or
jl
mov
lock
dec
mov
repz
push
mov
loopne
scas
lods
int3
push
add
mov
aam
in
cmp
sub
pop
pop
push
cmp
into
xchg
in
fiadd
pop
sbb
sub
dec
and
fs
or
stos
or
mov
mov
sub
bound
push
mov
(bad)
scas
jns
jge
ret
(bad)
or
(bad)
ins
sub
push
outs
lock
fs
xor
rol
das
sar
inc
add
rcr
psllq
test
(bad)
shl
jge
and
mov
cmp
mov
call
lock
dec
lds
adc
xor
outs
outs
xor
enter
loope
lea
out
mov
add
push
sbb
out
mov
mov
xchg
addr16
cli
imul
test
xchg
xchg
or
mov
sub
jns
push
in
les
pop
sub
and
outs
mov
xchg
daa
(bad)
adc
pop
dec
mov
pop
test
mov
xor
mov
imul
mov
aas
movs
nop
ins
mov
or
mov
inc
sbb
or
adc
addps
ins
adc
rcl
pop
imul
add
loope
sub
aad
and
sub
setge
loopne
sub
lahf
cmp
int
sbb
pusha
sub
adc
je
add
jmp
jns
pusha
mov
mov
aaa
mov
mov
or
mov
lea
mov
(bad)
mov
fisubr
ins
fs
push
out
jo
ret
int3
scas
mov
test
and
jo
into
push
int
xchg
push
inc
xor
js
push
aam
or
sub
mov
fdiv
jns
or
div
jbe
inc
sbb
int3
mov
sbb
pop
push
xchg
fwait
xor
sbb
push
inc
mov
adc
movs
mov
push
mov
hlt
sub
and
inc
(bad)
cmp
outs
push
jns
(bad)
jmp
push
test
loop
cmp
data16
push
gs
pushf
cmc
(bad)
cmp
cmp
(bad)
sti
xlat
popa
adc
push
sbb
xchg
or
loop
movs
fstp
mov
in
mov
int3
movs
mov
or
mov
inc
xchg
nop
in
xor
mov
dec
fwait
inc
scas
out
jo
inc
loop
sahf
icebp
retf
cmp
(bad)
popf
lods
xor
sub
pop
jl
test
mov
inc
adc
dec
repnz
sub
addr16
mov
test
adc
mov
sar
cmp
and
int
gs
mov
leave
sbb
cwde
push
cmp
inc
ror
push
add
fidivr
add
cmp
repz
adc
loop
adc
xchg
enter
inc
xchg
or
and
in
ret
xchg
test
push
sbb
scas
push
add
stos
adc
sub
mov
xchg
push
in
adc
push
jge
sbb
push
je
mov
ds
dec
imul
push
dec
push
pop
aam
push
push
mov
jle
mov
sub
sahf
dec
push
loope
push
(bad)
xchg
lods
ins
pop
adc
(bad)
or
popa
add
or
pusha
jge
pop
push
hlt
jle
mov
mov
xor
jo
sbb
repz
stos
mov
xchg
ss
or
pop
push
outs
fidivr
sub
ret
push
xor
or
jnp
mov
adc
iret
jmp
(bad)
xchg
adc
push
xlat
mov
inc
rcr
mov
add
mov
jl
retf
or
cmc
inc
stos
sbb
sahf
fstcw
mov
aas
add
adc
pop
xor
ss
dec
pop
pop
data16
cmp
cmp
pop
adc
push
jge
test
sbb
jb
popa
xchg
sbb
aam
cmc
jmp
out
and
in
sbb
mov
sub
fsub
pushf
cli
xlat
dec
out
(bad)
js
pop
xor
mov
adc
pop
lds
push
mov
xor
lods
cmps
mov
sti
test
jbe
ds
popf
inc
inc
mov
add
je
pop
fild
aaa
fidiv
add
push
fs
ja
pushf
into
xchg
test
dec
in
or
push
pop
es
adc
cld
mov
xchg
cmp
out
jmp
pop
mov
inc
xchg
adc
cwde
int3
jne
js
or
pusha
jae
je
scas
xor
inc
dec
adc
xchg
push
loop
push
mov
fisubr
int
sbb
je
outs
xlat
out
mov
xchg
(bad)
push
jg
cbw
scas
iret
cmp
push
idiv
sub
sbb
adc
out
mov
test
push
and
es
cdq
jp
test
or
mov
mov
push
mov
mov
das
dec
adc
inc
pop
xor
sbb
push
adc
mov
mov
lock
leave
fdiv
and
loopne
mov
data16
cdq
add
loop
test
out
aas
fndisi(8087
(bad)
jne
shl
mov
push
xchg
xor
repz
mov
mov
mov
adc
rcl
out
jb
je
sar
in
(bad)
data16
stc
int3
shl
mov
jmp
adc
xchg
xchg
or
mov
push
clc
iret
jecxz
loopne
movs
cdq
fistp
mov
pop
jne
outs
jl
neg
xor
imul
and
sub
dec
arpl
stos
jp
nop
sub
mov
dec
pop
sub
xchg
push
je
ja
sub
out
ret
jmp
sub
pop
mov
or
je
dec
js
pop
out
popf
test
inc
xchg
cmp
mov
pusha
sub
fs
mov
adc
push
test
call
daa
(bad)
stc
add
sub
push
mov
push
or
out
push
add
or
fldcw
mov
imul
mov
(bad)
mul
leave
mov
ds
or
std
jnp
mov
sahf
fcom
out
dec
fwait
icebp
imul
dec
sub
(bad)
(bad)
dec
rcr
into
pop
or
mov
xabort
push
jmp
or
inc
xor
ret
popa
stos
add
pop
and
pop
out
lock
mov
push
and
cmp
jecxz
sbb
or
jno
sub
out
add
jmp
arpl
cmp
jne
sar
pop
add
aaa
scas
adc
jno
mov
fistp
adc
loop
or
xchg
arpl
xchg
rcl
inc
dec
fild
cmp
arpl
push
cmps
push
mov
push
dec
mov
je
dec
push
xchg
add
ds
das
lods
add
add
stos
dec
mov
cwde
adc
cmps
jnp
popa
fistp
xchg
sahf
fadd
(bad)
sub
cmp
cmps
push
jp
dec
int3
out
sar
and
pop
cmps
cmp
inc
daa
inc
je
cdq
mov
nop
outs
add
js
jns
(bad)
loopne
stc
icebp
retf
xchg
retf
in
adc
(bad)
lock
shr
pop
lea
(bad)
fisub
inc
ds
cmps
movs
ret
mov
test
movs
mov
xor
das
aam
repnz
dec
xor
je
dec
cmp
xchg
or
out
mov
mov
pop
retf
add
mov
outs
sub
dec
nop
ss
scas
adc
cdq
loope
lock
aas
or
add
xrelease
dec
jne
(bad)
iret
fsub
and
push
js
mov
lahf
inc
fs
sub
and
mov
inc
mov
inc
sub
push
int3
cdq
and
and
stc
out
sbb
iret
and
push
lods
add
lahf
sub
in
add
or
aas
outs
and
push
ret
cmp
es
or
dec
ret
push
mov
add
and
mov
jge
imul
inc
(bad)
ds
mov
mov
sub
sub
mov
std
cs
sub
imul
popf
inc
xor
loop
in
push
outs
add
xor
in
bound
(bad)
pinsrw
sub
imul
cmc
ss
xor
mov
pop
mov
mov
sbb
jno
cmps
and
repnz
aam
daa
pop
test
in
add
dec
jo
adc
push
push
ins
pushf
xchg
pop
or
pop
push
mov
or
add
jecxz
mov
pop
or
enter
mov
fiadd
fs
sar
and
(bad)
mov
fst
mov
add
push
movs
mov
push
mov
add
jmp
mov
inc
mov
mov
retf
cmp
out
pop
adc
fisub
add
sbb
mov
loope
sar
adc
rcr
out
shl
xor
hlt
jno
outs
inc
mov
xor
pop
adc
mov
dec
in
or
or
sti
pop
ret
ins
sub
and
xor
push
dec
test
jmp
arpl
push
sub
test
pop
mov
lea
leave
loopne
and
cli
sub
pushf
push
inc
test
out
add
sar
mov
test
jnp
inc
aas
pushf
retf
std
push
push
add
add
xor
sub
inc
into
inc
movs
sub
in
jbe
add
inc
fild
test
psubusw
cld
leave
and
cmc
jnp
ficom
ror
das
add
dec
push
inc
hlt
push
pushf
add
sbb
lods
dec
ret
mov
(bad)
or
mov
jbe
out
lods
popa
repz
inc
xchg
jbe
fisttp
stos
mov
add
loop
inc
mov
stos
pop
dec
sbb
add
pop
jne
inc
stc
movs
pop
and
sbb
mov
sbb
outs
pop
jmp
movs
adc
icebp
pop
(bad)
cli
shr
push
loope
mov
fldenv
cli
iret
stos
movs
out
sbb
stos
mov
sub
inc
adc
xchg
test
cmp
shl
cmp
mov
xor
or
bound
mov
cwde
adc
sbb
cs
xor
xchg
adc
jo
in
and
daa
cwde
test
stos
aad
ss
inc
scas
mul
push
xor
sub
pop
inc
mov
or
dec
xor
outs
scas
push
test
lock
jmp
jp
scas
lea
hlt
pop
sub
rcl
sbb
sbb
pop
mov
sbb
or
jae
nop
sub
inc
arpl
or
das
fisttp
imul
mov
loopne
nop
js
mov
sub
mov
iret
add
mov
xor
push
pop
pop
pushf
push
pop
fimul
push
mov
mov
or
addr16
ret
repnz
mov
pop
cmp
sbb
cmp
mov
movs
std
push
jnp
push
aam
je
scas
test
je
mov
daa
rcr
adc
jne
mov
fcmove
and
das
jle
dec
outs
mov
mov
mov
retf
enter
and
mov
xchg
cmp
cld
arpl
mov
inc
mov
sbb
mov
es
inc
sub
or
and
xlat
cmp
pop
xor
push
nop
xor
mov
jno
cmps
shr
adc
ficom
arpl
adc
jne
mov
xchg
and
(bad)
fisttp
sub
std
add
repnz
inc
dec
mov
sbb
mov
mov
sbb
out
fnstsw
cmp
test
dec
movs
jae
jb
xor
or
neg
cmp
stos
fdiv
cmc
cld
call
ss
arpl
xlat
mul
cmp
mov
das
in
les
mov
fs
mov
test
sbb
mov
icebp
mov
or
(bad)
arpl
mov
push
pop
leave
ss
shl
xor
shl
frstor
cmp
and
mov
fst
adc
out
mov
hlt
push
in
dec
jge
outs
fisubr
lock
popa
push
leave
or
fwait
daa
xlat
shl
xlat
sub
aas
cmp
sub
and
mov
les
jo
push
imul
add
xchg
inc
cmp
and
push
and
cmps
repz
into
and
data16
and
call
mov
dec
push
je
sub
int
dec
movs
push
shl
int3
sub
mov
or
sub
cmp
in
adc
sar
sub
cdq
or
loope
mov
xor
mov
enter
add
leave
mov
adc
outs
xchg
into
xor
dec
pop
neg
out
xor
test
mov
push
adc
dec
or
add
pop
sar
add
cmp
icebp
jb
sbb
retf
shl
xlat
and
xchg
(bad)
(bad)
lods
xchg
pop
push
out
loopne
xor
add
add
jmp
jmp
push
aaa
mov
add
cmp
inc
jmp
add
shl
dec
(bad)
cs
sbb
sub
dec
xchg
sub
xor
ja
xlat
dec
(bad)
in
nop
jne
sar
pop
mov
sbb
outs
or
rcl
mov
inc
outs
std
bound
(bad)
hlt
push
mov
xchg
add
(bad)
ins
cmps
pop
out
xchg
mov
dec
or
or
test
dec
(bad)
pusha
xchg
xor
stos
das
(bad)
xor
sti
test
sub
loopne
into
aad
ss
fwait
sbb
sbb
mov
pop
mov
(bad)
in
push
xchg
xor
pushf
or
xchg
xchg
les
mov
push
sar
int
adc
mov
(bad)
cli
jns
pop
mov
in
jns
cmps
test
mov
daa
pop
clc
pop
out
ret
int3
mov
dec
int3
stos
xor
pop
enter
mov
inc
and
add
pusha
popf
pop
sub
iret
imul
mov
pusha
cmps
or
pop
sti
mov
ret
movs
push
add
cmps
jmp
lock
cmps
iret
hlt
mov
in
push
sbb
cmp
mov
(bad)
aam
ins
outs
xor
lods
mov
movs
xchg
push
adc
lods
xor
xchg
aam
nop
jb
push
xchg
or
xchg
stos
push
pop
dec
mov
push
cmps
and
or
packssdw
mov
in
or
into
sub
fsubr
pop
lea
jmp
mov
aad
aad
arpl
cmps
pop
xor
sbb
fs
mov
dec
xchg
ds
push
int3
rcl
std
pop
add
xchg
and
or
fwait
sbb
add
outs
jge
stc
sub
int3
adc
cmc
xor
in
lahf
mov
test
call
pop
or
fisubr
inc
push
(bad)
xchg
es
inc
xor
push
inc
lahf
dec
jae
lds
js
mov
sub
loopne
inc
jnp
jle
div
js
push
adc
nop
and
js
fld1
outs
(bad)
pop
out
or
(bad)
mul
dec
clc
mov
ja
leave
or
loope
test
adc
(bad)
iret
repz
or
pushf
dec
jnp
pop
add
sub
fsubr
push
mov
xchg
push
jge
shl
rol
push
daa
popa
xchg
mov
popa
jecxz
sub
sbb
sub
push
pop
loopne
div
idiv
fistp
or
and
aaa
leave
adc
xchg
dec
lods
leave
pop
ficomp
hlt
aad
mov
add
test
ins
cli
mov
ins
sti
cli
test
cmp
pop
push
int
stc
cmps
cli
inc
add
arpl
jecxz
cld
xor
push
inc
sbb
loop
adc
loope
call
dec
jg
out
xchg
mov
jmp
adc
mov
movs
jb
cmp
push
or
popa
mov
cmp
sbb
cmps
pop
pop
or
bound
jecxz
pop
xchg
pop
pop
and
mov
cmp
test
stos
jbe
mov
bswap
adc
fsubr
imul
inc
mov
pop
jp
imul
add
call
and
xlat
pusha
mov
ja
je
dec
or
loop
sbb
int
ror
fsub
mov
dec
mov
lea
and
shl
push
mov
xor
mov
mov
out
ficom
imul
inc
jecxz
sub
mov
or
mov
sahf
or
movs
int
and
sbb
fadd
cmc
dec
aam
and
cli
or
dec
cmps
in
push
test
shl
jns
xchg
jo
pop
and
jl
test
add
pushf
xor
or
xchg
dec
in
xor
idiv
pushf
js
and
js
sbb
ins
sbb
xchg
jmp
sbb
and
mov
mov
push
imul
xor
rol
js
xor
stos
int3
into
popa
cmp
inc
xchg
adc
sub
cmp
xor
retf
inc
scas
cmp
xlat
inc
daa
loope
cmp
std
and
mov
inc
outs
sahf
pop
push
mov
push
sahf
sbb
int
(bad)
mov
mov
fsub
and
aaa
lds
adc
jbe
rcl
les
test
iret
or
addr16
push
xor
mov
jmp
add
daa
cmp
cs
call
adc
loop
outs
inc
sbb
mov
sub
loopne
sub
jmp
aas
add
mov
inc
stos
nop
or
test
mov
push
sub
sar
add
jmp
ds
dec
js
dec
adc
mov
ja
mov
adc
jne
ss
call
inc
and
cs
mov
sub
pop
jle
nop
aas
dec
retf
dec
(bad)
cmp
xor
push
mov
pop
movs
cs
in
and
mov
jg
xor
sub
ins
xchg
and
mov
sbb
shl
fnstsw
sub
jge
inc
add
add
xor
loop
xor
outs
adc
or
stos
and
sar
(bad)
call
xchg
lds
add
and
and
popa
add
shl
xor
div
shl
cmp
mov
xor
repz
int
shl
into
jle
and
inc
dec
pusha
(bad)
shr
fsub
cmps
or
mov
and
push
dec
movs
(bad)
or
js
stc
dec
push
loopne
stc
mov
mov
or
std
sahf
mov
and
ss
out
mov
test
mov
fbstp
add
push
sub
ret
test
std
dec
sbb
scas
mov
inc
pop
sbb
push
sbb
and
imul
push
in
push
mov
xor
shl
add
cmp
ins
enter
gs
mov
loop
or
adc
into
pop
mov
fwait
cmp
scas
xchg
jmp
mov
enter
pop
or
rol
cmc
push
cmp
and
xor
and
sub
das
in
fsub
or
push
pop
adc
ds
sbb
jmp
jno
mov
and
push
mov
in
enter
push
(bad)
adc
or
and
sbb
out
imul
jb
jnp
aam
rol
jecxz
outs
cmps
jecxz
repnz
leavew
inc
pop
mul
lods
inc
pop
add
cmp
imul
or
ins
mov
push
mov
or
cmp
aad
cdq
repnz
xchg
or
pop
outs
xchg
loope
stc
jp
mov
inc
je
jno
(bad)
or
sar
movs
(bad)
fist
adc
jmp
sbb
aas
adc
jb
dec
push
xchg
xchg
inc
imul
sub
pusha
inc
std
bound
fxch
xchg
sar
cmp
ret
jnp
call
sub
add
in
dec
aad
lds
jo
iret
and
out
adc
(bad)
mov
dec
sub
cmps
dec
pop
mov
or
aad
es
inc
and
and
pop
sbb
jl
push
push
cmp
frndint
dec
sub
repz
ins
sub
ds
lods
fmul
out
(bad)
retf
sbb
jae
mov
mov
and
mov
in
push
fdivr
pop
test
and
and
loope
into
loopne
call
mov
cmp
sbb
adc
sub
pop
loope
mul
or
mov
jg
xchg
adc
push
out
mov
jne
icebp
sub
push
scas
jl
lahf
mov
pop
mov
xchg
adc
jmp
(bad)
jl
repz
div
ja
ret
cmp
mov
cmp
jae
mov
mov
inc
fsubr
aas
mov
xchg
nop
and
sub
pcmpgtb
(bad)
je
cdq
fist
jne
shl
adc
lods
mov
jno
inc
push
lock
push
stc
loop
fsubp
push
icebp
mov
shl
mov
icebp
repz
movs
cmp
aas
inc
dec
out
dec
xor
stos
adc
out
mov
dec
movs
inc
std
and
adc
fcom
jmp
sbb
in
xchg
and
stos
fldcw
out
xchg
lods
cmp
les
stos
xlat
or
sbb
adc
fsubr
mov
jp
popa
cmps
clc
leave
or
mov
shl
or
inc
mov
into
and
mov
int
cmps
je
pushf
jmp
dec
jl
inc
cmp
push
pop
mov
fwait
into
test
leave
ja
mov
aaa
iret
mov
(bad)
icebp
rol
jle
inc
cmps
cld
daa
leave
ret
mov
sbb
push
ins
ss
cli
mov
(bad)
xchg
scas
sub
and
cmc
mov
mov
jmp
sub
adc
loop
sbb
xor
xor
add
dec
dec
std
inc
xchg
sub
repz
test
shr
xchg
mov
or
cwde
and
(bad)
int
stos
rol
mov
or
jno
dec
jmp
xchg
or
xchg
lds
jmp
mov
and
xor
lods
movs
div
fadd
mov
or
cmp
push
je
div
fnsave
inc
push
push
lahf
push
and
int
cmps
dec
adc
pop
sbb
jle
sbb
int
in
sar
sbb
in
push
pop
xchg
pop
ds
sahf
xor
pop
push
pop
pop
les
xor
add
xor
pop
(bad)
sub
loop
mov
jg
clc
aaa
cmc
push
enter
jmp
xlat
repz
xchg
sbb
xor
movs
lock
retf
outs
retf
inc
sbb
xor
mov
jp
into
push
sub
test
add
in
std
std
inc
inc
shl
ins
sub
or
neg
pushf
xchg
mov
inc
dec
retf
adc
stos
and
inc
call
adc
pop
fwait
repnz
shr
add
in
jno
mov
lods
push
cli
cmps
fbld
and
sub
imul
pop
sbb
pusha
addr16
mov
sbb
outs
mov
xchg
xchg
loope
xchg
das
out
pop
pop
nop
lods
je
fisub
lods
xor
(bad)
ds
dec
arpl
dec
xor
mov
xchg
sti
push
xor
arpl
xor
adc
and
inc
cs
ficomp
pop
push
mov
cld
pusha
das
out
pop
dec
and
shr
idiv
jns
adc
mov
in
sbb
push
ins
inc
and
cdq
call
inc
xor
fmul
int3
xchg
push
jno
loop
sub
add
add
test
fcmovnu
or
push
pop
pop
pop
outs
scas
ins
test
cmp
add
js
jp
add
ret
jo
add
cmp
icebp
inc
mov
pushf
push
ret
int
xchg
cli
(bad)
and
in
into
leave
je
jmp
(bad)
or
or
in
lea
sub
jp
and
push
aad
je
dec
sub
add
pop
push
inc
aad
push
fstp
int3
sbb
popf
into
in
or
adc
mov
sti
pop
out
cli
mov
cwde
ins
aad
sub
and
mov
dec
push
xor
add
ins
xor
sub
lods
pop
xor
dec
and
int
dec
out
jb
push
dec
(bad)
pop
stos
icebp
imul
stos
mov
cmp
mov
jl
or
cmp
dec
mov
jno
push
push
mov
retf
mov
addr16
in
sub
stc
or
loopne
into
pop
sti
or
fisub
mov
mov
leave
lods
int3
test
or
fidiv
jg
nop
cmp
cs
push
push
jl
jmp
adc
sub
addr16
stc
mov
xchg
leave
sub
ins
bound
pop
repnz
mov
sti
out
sahf
push
xchg
and
loopne
loopne
mov
(bad)
cdq
lods
(bad)
or
pushf
adc
into
cmp
aad
xchg
loope
repz
in
cmp
leave
adc
out
cs
dec
jnp
sbb
gs
mov
out
mov
dec
bound
pop
mov
outs
mov
sub
sub
bound
out
adc
and
xchg
fst
and
add
retf
ja
adc
mov
ss
or
push
aaa
aas
adc
jle
dec
fbld
sub
pop
shr
pushf
adc
inc
cmp
push
push
or
sar
out
mov
adc
add
out
add
pop
jne
xchg
or
xchg
fisub
shl
or
push
in
sbb
in
js
add
mov
repnz
pop
jo
sub
vxorps
mov
das
leave
or
xchg
pop
xor
inc
sub
add
pop
ret
adc
or
push
into
mov
mov
nop
shl
bound
push
adc
or
adc
sub
stos
jne
retf
nop
jns
lods
inc
(bad)
push
mov
sahf
cld
shl
xchg
sbb
push
bound
and
repz
sbb
sbb
and
push
aam
pop
cld
stos
mov
les
push
jnp
pusha
iret
mov
mov
adc
cmp
cmp
dec
jno
fnstcw
add
mov
test
add
shl
pop
sub
sbb
sti
pop
leave
pop
ret
lods
or
shl
mov
fwait
xor
mov
daa
iret
es
leave
lahf
mov
arpl
enter
pop
int3
mov
jne
xor
scas
jl
fdivr
lahf
jmp
or
pop
and
and
cld
sbb
movs
test
outs
loopne
jb
enter
(bad)
stos
popf
push
enter
test
sbb
inc
dec
jae
mov
mov
sub
(bad)
leave
ficom
cmp
int3
rcl
mov
mov
repnz
test
rcr
xor
in
imul
ror
or
dec
ja
mov
jp
mov
dec
cdq
mov
mov
jl
jae
stos
or
mov
jne
div
push
or
mov
adc
movs
bound
xchg
inc
jp
leave
inc
scas
(bad)
pop
ficom
hlt
sub
or
rol
pop
or
stos
xor
dec
xor
xchg
out
inc
add
cmp
iret
inc
in
inc
xor
add
xchg
cld
(bad)
imul
leave
dec
out
mov
dec
and
scas
je
adc
in
mov
jne
(bad)
in
cli
gs
xor
(bad)
or
cmc
fistp
jp
jg
outs
rol
mov
mov
sahf
fnstcw
int3
(bad)
out
sbb
xchg
loopne
cmp
xchg
mov
outs
inc
hlt
fistp
inc
sub
repnz
xor
les
ds
cmp
dec
or
repz
je
cmp
ins
mov
div
mov
mov
test
jb
mov
or
add
cmps
adc
mov
lea
push
fnsave
jle
imul
jg
enter
xchg
push
mov
das
adc
sbb
es
adc
mov
mov
inc
adc
mov
or
loopne
out
hlt
inc
into
dec
and
and
xchg
rcr
cld
mov
mov
addr16
dec
mov
shl
and
je
out
(bad)
dec
mov
cwde
mov
push
dec
sbb
(bad)
out
xchg
jno
pusha
xchg
mov
mov
add
mov
and
fild
mov
rcr
lea
pop
jb
iret
and
jmp
dec
mov
or
into
adc
das
call
push
jmp
fcmovbe
jo
sar
data16
inc
fst
sbb
dec
fbld
xchg
sbb
add
adc
cmp
xor
fwait
out
in
and
inc
pop
adc
test
mov
mov
sub
mov
sar
xchg
bound
inc
mov
jno
gs
sbb
test
cwde
mov
push
retf
call
or
sbb
movs
mov
pop
jb
pop
(bad)
and
add
add
pop
imul
xchg
mov
das
sti
(bad)
imul
pop
out
int
sub
into
inc
mov
jl
jmp
dec
inc
fisttp
add
test
inc
dec
shl
inc
ins
fimul
std
frstor
ret
dec
outs
test
adc
and
cmp
ret
or
in
xchg
push
pop
push
jo
imul
sub
mov
dec
das
idiv
sub
jecxz
push
fidivr
sbb
or
retf
lea
std
push
das
js
push
mov
mov
cmp
leave
js
cld
jns
inc
mov
jl
cmp
popf
fs
pop
stos
retf
leave
repnz
fmul
std
jmp
test
loop
lahf
arpl
jl
repnz
fst
fisttp
arpl
fdecstp
fnstcw
pop
leave
jp
mov
fist
xor
(bad)
push
mov
lods
jbe
ds
lock
jbe
cmp
aam
stc
loop
mov
fsubr
jo
sbb
imul
sub
imul
rcl
repnz
popf
ja
inc
pop
mov
jle
ret
push
mov
dec
xlat
mov
imul
adc
push
rol
mov
je
adc
mov
xchg
scas
cmp
xchg
mov
ret
push
out
addr16
enter
pop
arpl
sbb
jbe
xlat
sub
jl
ret
fstp
sub
(bad)
cli
and
lahf
(bad)
pop
pop
sti
aam
adc
sti
push
ret
es
mov
ror
pushf
popa
cmp
cwd
fwait
xchg
imul
nop
jnp
mov
int3
sti
pop
pop
jae
pushf
push
fmul
mov
or
pop
in
shr
mov
pop
push
xor
jne
xchg
xchg
cmp
movs
ror
(bad)
mov
(bad)
popw
xor
lahf
jge
push
xchg
add
pop
test
xchg
(bad)
cmp
dec
xor
imul
pop
sar
outs
outs
jecxz
cmp
xchg
cmp
sti
sub
pop
and
xchg
cdq
xchg
inc
and
push
gs
or
cmp
sahf
aam
aam
mov
test
cmp
jmp
test
xor
mov
mov
or
jmp
xchg
sar
mov
loope
lea
sbb
(bad)
bound
out
shl
jne
jmp
inc
xor
sub
jp
scas
sub
add
fwait
sbb
repnz
iret
test
adc
loopne
push
loop
ins
cmps
dec
fidiv
push
popa
iret
outs
xor
test
jle
or
cmp
leave
dec
mov
and
add
inc
ret
int3
out
das
inc
adc
push
add
inc
xchg
out
sub
add
jno
xor
imul
mov
movs
mov
push
inc
int
dec
out
push
mov
cmp
nop
mov
push
cmp
xchg
mov
rol
jno
xchg
mov
xlat
pop
sbb
push
dec
stos
pop
test
inc
ror
and
lods
dec
movq
and
adc
sbb
int3
lods
sar
std
fs
imul
aaa
dec
loopne
lods
(bad)
(bad)
pop
push
xor
pop
loopne
adc
mov
out
dec
dec
stos
push
(bad)
cld
cmps
dec
cmp
push
inc
fld1
rol
leave
pusha
jge
cmc
adc
mov
jne
popa
xor
adc
leave
mov
mov
retf
add
nop
add
aaa
push
and
ror
or
dec
(bad)
outs
jb
dec
cmp
ins
or
and
jecxz
ins
js
adc
and
in
fsub
cmp
or
cmp
fist
dec
jmp
mov
in
call
xor
mov
add
jno
enter
scas
gs
cmp
gs
hlt
fucomi
add
or
(bad)
sbb
fnstsw
sub
jg
push
push
mov
pop
stos
mov
mov
inc
cmp
push
popa
fmul
xchg
push
adc
test
bound
pop
rol
sub
pop
(bad)
test
inc
lods
mov
xor
ret
fcomp
inc
stc
dec
push
(bad)
loop
add
mov
add
(bad)
push
test
pop
push
popa
xchg
(bad)
not
call
push
jle
movs
cdq
in
fs
aaa
sti
aam
mov
add
inc
jne
imul
pop
(bad)
mov
and
fld
out
call
cmps
pop
out
jg
xor
pushf
js
retf
cmps
xor
cmp
(bad)
imul
and
cmp
inc
in
pushf
mov
scas
jno
push
pop
pop
mov
fwait
jmp
jb
addr16
out
cs
mov
fnstcw
ss
sbb
cdq
xchg
jle
jae
dec
(bad)
adc
jbe
cmp
inc
jmp
fcom
mov
aam
push
(bad)
push
xchg
adc
pop
mov
(bad)
(bad)
mov
mov
adc
or
(bad)
movs
imul
dec
aaa
adc
addr16
or
or
mov
mov
test
cld
or
out
in
fwait
sbb
pop
mov
xchg
xchg
dec
fbld
xor
xchg
loopne
into
pop
cmps
(bad)
stos
ja
jmp
neg
stc
jl
or
mov
call
lock
out
xchg
outs
shl
pop
xlat
jb
in
mov
inc
inc
adc
mov
jne
aad
inc
xchg
add
cld
cdq
pop
dec
cmps
push
mov
cmp
ret
test
push
mov
jo
dec
xchg
adc
and
pop
xchg
outs
and
xor
sbb
pop
push
idiv
fmul
xchg
in
imul
dec
pusha
div
cmp
jbe
push
cli
stc
rol
(bad)
retf
jge
cmp
jmp
aad
mov
inc
lea
int
loopne
mov
jae
mov
push
iret
not
sub
inc
mov
sub
(bad)
bound
or
shr
mov
pushf
or
or
out
and
jo
sti
shl
push
mov
(bad)
inc
jno
jg
mov
push
pop
test
pushf
fbstp
(bad)
stos
outs
adc
js
in
sbb
xor
rcl
cmp
cmps
jmp
or
(bad)
dec
jecxz
cmp
test
mov
ror
das
mov
pop
in
fidivr
jle
jecxz
sub
push
cmp
or
add
push
xor
xchg
shr
adc
idiv
sbb
mov
xor
jno
mov
in
jg
fcmovbe
mov
clc
ret
fild
push
jmp
xchg
and
movs
and
pop
call
cs
adc
test
dec
push
jbe
sbb
cdq
imul
and
jmp
or
sub
xchg
sbb
inc
retf
jle
sbb
sub
fwait
test
aas
das
out
sbb
xlat
inc
add
pop
and
mov
mov
push
in
xor
lahf
test
ins
xchg
aaa
out
fcom
lds
inc
sahf
pop
mov
cld
mov
inc
daa
push
lods
or
cmp
cwde
mov
cmp
retf
sbb
fsincos
fadd
pop
loope
sar
mov
cmp
in
rcl
int3
xchg
clc
lock
and
in
sbb
xchg
jae
xor
and
stos
adc
xor
jo
add
loopne
ss
sbb
rol
sbb
add
in
and
mov
lahf
inc
sbb
test
ret
mov
les
(bad)
pop
add
test
xchg
xor
cmps
cwde
add
inc
cmp
mov
dec
cmp
leave
setae
add
fcomp
cmp
lods
cli
dec
sbb
cmps
movs
addr16
rdtsc
sub
xchg
dec
inc
jae
(bad)
clc
jnp
cmps
shr
mov
inc
and
shl
xchg
(bad)
sahf
aad
fld
xchg
push
popf
inc
rcl
and
cld
xchg
push
call
fscale
cmp
push
hlt
out
xchg
jecxz
mov
xchg
cld
aas
daa
xlat
add
pop
cli
(bad)
(bad)
jge
out
(bad)
mov
sahf
push
popa
inc
jae
in
or
scas
mov
into
in
fxch
sub
mov
ror
mov
push
(bad)
jae
cld
add
movs
xor
out
lock
or
push
mov
sbb
jle
inc
nop
mov
jmp
mov
pop
and
pop
or
jnp
mov
aam
imul
sti
mov
adc
loop
push
or
repz
(bad)
xchg
cld
into
or
ror
xchg
push
add
add
movs
ja
cwde
sbb
test
std
sbb
xchg
stos
inc
xor
enter
mov
pop
mov
(bad)
mov
arpl
jle
add
ss
stos
adc
inc
jg
(bad)
scas
jmp
sbb
lods
pop
mov
out
push
test
mov
lock
test
jns
(bad)
pop
nop
into
or
aad
cmps
inc
(bad)
jge
retf
mov
ins
lahf
je
cmc
dec
sub
mov
jmp
xchg
mov
dec
test
pop
imul
sti
jmp
imul
mov
push
iret
or
jl
sbb
loope
arpl
inc
mov
mov
retf
mov
jmp
pushf
xor
push
mov
mov
sbb
cld
push
daa
(bad)
mov
push
jge
gs
test
mov
shl
mov
(bad)
les
(bad)
in
in
xchg
aas
in
fist
jbe
xchg
dec
repnz
shl
xchg
jmp
xchg
and
popf
in
jge
mov
pop
(bad)
and
cmp
xchg
jns
ret
adc
fld
mov
fst
inc
inc
sbb
mov
inc
or
sub
push
mov
lods
outs
add
scas
xchg
mov
and
bound
inc
and
arpl
jp
xchg
loope
and
xor
aas
adc
daa
test
shl
int3
fcmovb
in
xchg
adc
add
adc
add
stos
aad
(bad)
std
sbb
test
(bad)
cs
mov
in
neg
out
push
inc
jp
push
pop
inc
fwait
mov
dec
inc
lods
sbb
neg
test
pop
mov
mov
fstp
ja
aas
arpl
mov
test
sub
and
and
dec
push
dec
call
div
outs
push
jmp
out
stos
and
pop
jp
add
std
dec
jge
and
test
arpl
sbb
ins
jae
push
out
xchg
or
test
aam
dec
push
jne
in
jmp
fimul
jno
js
ud0
add
dec
adc
pop
mov
push
cs
push
out
into
mov
cmps
int3
out
sti
cli
push
cwde
mov
sti
sub
imul
mov
leave
jbe
inc
sbb
scas
mov
es
mov
leave
push
rol
fistp
or
cli
xchg
sahf
cs
std
mov
in
mov
mov
dec
lds
enter
pop
adc
pop
push
sub
daa
xor
add
add
push
je
cwde
adc
(bad)
mov
cmps
pop
xchg
test
adc
lods
loope
ds
dec
adc
sbb
repnz
cs
imul
sbb
ss
dec
dec
aaa
aaa
jmp
call
xchg
xchg
pop
aam
push
gs
xchg
cmps
cmp
pop
in
aad
iret
in
repnz
sbb
loope
ins
data16
cmp
dec
stos
xor
mov
cmps
in
sub
in
jmp
jo
add
gs
cmps
pushf
shl
cmp
inc
cmps
scas
sahf
xchg
out
inc
in
cmp
and
repz
das
fistp
sbb
(bad)
push
pusha
mov
in
push
fcmovb
jbe
xchg
jp
jg
inc
mov
push
inc
loop
cli
xchg
jne
rcr
(bad)
pop
mov
pushf
call
xchg
dec
cmp
add
daa
icebp
and
in
mov
mov
fnstsw
popf
xor
cmp
ins
inc
dec
adc
lods
ins
xchg
pop
jecxz
ror
xor
xor
xchg
loope
lahf
push
adc
inc
das
mov
aas
cli
push
in
or
outs
mov
ds
mov
and
call
push
jno
bound
movs
and
mov
push
jmp
lahf
mov
push
sbb
in
inc
and
add
xor
imul
lods
push
xchg
mov
xchg
aad
inc
test
bound
movs
inc
cmp
jl
mov
mov
fs
inc
and
add
push
jmp
int3
int
jmp
push
fwait
sbb
ss
iret
sti
dec
stos
outs
imul
mov
dec
repz
mov
jp
pop
int3
pop
inc
pop
sub
je
inc
lods
fwait
jb
cli
jne
sbb
jecxz
das
js
cmp
jnp
pop
in
add
inc
loope
xchg
inc
rcl
cwde
inc
or
pop
push
sbb
lock
jne
jle
push
lds
jl
xor
adc
ficom
sub
mov
lods
pop
bound
repnz
add
xchg
loop
lods
fst
retf
mov
mov
lock
sub
mov
jp
mov
jp
adc
sbb
or
add
adc
cmp
ss
cmp
scas
dec
call
mov
in
lods
push
stc
enter
test
retf
xchg
aad
mov
mov
in
adc
scas
push
pop
pop
int
sub
test
call
xchg
repz
scas
mov
sbb
cmp
sbb
test
jp
int3
fwait
jecxz
leave
mov
pusha
pusha
sub
mov
jne
sahf
jae
arpl
jg
cmp
test
outs
ss
mov
mov
shr
(bad)
pop
push
add
xchg
and
mov
nop
mov
inc
loop
jmp
dec
sub
and
add
(bad)
jp
in
rol
dec
mov
cmps
dec
int
cmp
retf
fidivr
inc
xor
push
xor
call
sub
xchg
(bad)
stos
sti
das
neg
push
pop
sbb
ror
mov
cmp
xchg
sub
adc
mov
std
in
or
push
cwde
call
pushf
jns
jne
mov
imul
aam
cs
test
and
loopne
call
int3
jbe
out
mov
ins
pop
xchg
jmp
in
ret
fmul
call
jmp
leave
dec
add
mov
call
push
push
dec
dec
pushf
xchg
xor
in
cdq
mov
(bad)
out
cs
inc
mov
inc
jo
and
pushf
bound
mov
sbb
cwde
pop
fild
fwait
adc
or
push
test
dec
sbb
fnstsw
scas
mov
cmp
add
fisubr
xor
pop
call
jae
call
mov
mov
fisttp
mov
mov
pop
adc
mov
xor
jl
add
enter
scas
cli
lea
sub
jl
jge
mov
mov
es
ds
jmp
mov
(bad)
push
jb
hlt
mov
repz
outs
mov
push
xchg
sub
cmps
mov
lds
test
dec
fs
mov
nop
push
or
mov
dec
dec
xchg
inc
lods
dec
ins
mov
or
(bad)
xchg
xor
and
inc
mov
ror
fs
iret
push
cmp
add
xchg
push
jae
mov
sub
xor
jmp
add
test
adc
jo
(bad)
mov
aam
xchg
imul
mov
inc
xchg
test
(bad)
mov
inc
data16
or
mov
int
dec
leave
aas
dec
call
in
mov
sub
jb
ins
xor
out
inc
dec
aad
pop
loopne
mov
(bad)
out
les
sub
scas
(bad)
fild
mov
call
shl
sbb
aam
mov
or
shl
ja
ins
sub
imul
imul
push
lahf
push
dec
pop
mov
aam
ins
je
or
lea
and
pop
cmps
mov
movs
ins
pop
pusha
into
shl
into
icebp
jle
push
or
fcmovne
xchg
cli
loop
cmps
sub
mov
or
add
data16
retf
push
pop
push
dec
gs
fcomp
lods
mov
pop
cmps
ror
jb
jle
loop
sub
sub
fcomp
sbb
sub
push
lods
call
cmp
jns
dec
mov
inc
mov
or
sbb
aam
shl
xor
clc
aas
and
cld
add
push
push
outs
adc
mov
push
jmp
and
jecxz
(bad)
loope
test
pop
repnz
imul
cmc
pop
xchg
push
pop
sbb
pop
shl
mul
add
(bad)
add
cmc
fucomi
stc
jecxz
pop
add
mov
call
rol
cdq
mov
inc
mov
outs
add
xor
ins
clc
mov
cdq
hlt
mov
loope
mov
fistp
ins
mov
push
mov
les
add
imul
rol
test
lds
cli
mov
lds
dec
stos
xor
call
fnsave
xor
in
jecxz
mov
imul
scas
mov
sub
pop
mov
fsub
int3
pop
pushf
(bad)
cmp
pop
push
fiadd
shr
add
int3
sub
inc
es
mov
lods
and
nop
dec
ret
push
ss
(bad)
rcr
and
push
cmps
fcmovbe
fcmovnb
dec
daa
xchg
or
fistp
cmp
cwde
ret
mov
je
in
pop
cdq
push
mov
div
cdq
call
fist
into
outs
test
leave
xor
xchg
in
adc
mov
int
push
test
adc
pop
jne
popf
int3
adc
sub
(bad)
or
mov
cwde
ins
push
or
jb
loop
cwde
xor
jmp
hlt
adc
mov
std
stc
pop
dec
outs
adc
add
sbb
push
or
int3
pop
test
cs
adc
mov
pop
inc
test
fimul
dec
adc
out
fldenv
dec
mov
and
dec
jp
mov
or
push
push
sar
jb
scas
push
rcl
mov
scas
sub
sar
jmp
fsub
fs
scas
in
xchg
mov
pusha
and
inc
leave
jecxz
push
mov
(bad)
cmps
iret
adc
mov
fld
adc
lods
or
inc
loope
xchg
(bad)
loop
popf
xchg
je
mov
mov
int
lahf
xchg
fild
(bad)
jg
mov
inc
(bad)
jns
mov
jle
mov
or
inc
jno
bound
jp
mov
push
or
cdq
fidiv
adc
and
and
add
or
das
jmp
rcr
(bad)
jle
jecxz
adc
arpl
les
and
sahf
inc
icebp
cmp
(bad)
popa
dec
pushf
adc
(bad)
cmc
out
add
fistp
inc
inc
cmp
sub
mov
sbb
cmp
sbb
les
sub
ja
xor
pop
jl
xchg
and
add
test
mov
xlat
add
jb
pop
jno
mov
xchg
lods
lods
and
sub
sbb
out
jle
push
mov
in
(bad)
(bad)
pop
arpl
jb
dec
sub
popa
sbb
and
fucomi
ror
jl
pushf
adc
shr
scas
(bad)
sub
cwde
jmp
and
pop
inc
das
adc
pop
push
icebp
push
jo
inc
add
push
mov
lock
popf
jecxz
pop
adc
jge
nop
cwde
and
adc
jnp
dec
mov
sub
loop
fstp
sub
sbb
mov
sbb
rol
xchg
cmp
mov
aas
lods
sahf
outs
sub
sbb
jge
repz
adc
jmp
adc
outs
push
test
jle
push
inc
unpcklps
call
addr16
sbb
test
stos
loopne
sbb
sub
and
or
int
mov
jp
cmc
inc
scas
fstp
shr
repnz
outs
pop
jnp
movs
jne
fidiv
sub
enter
xor
mov
inc
add
push
push
in
mov
push
or
jae
loope
ins
push
dec
pop
mov
dec
mov
aaa
mov
loop
xchg
rol
dec
jge
rcl
(bad)
mov
(bad)
pop
sbb
inc
out
imul
mov
jl
jno
(bad)
mov
jnp
inc
pop
mov
push
or
cmp
dec
mov
mov
sub
mov
cmp
cmp
inc
sbb
imul
out
jp
mov
mov
jl
loop
and
sbb
(bad)
push
lods
jns
cmp
gs
mov
loopne
xor
add
sahf
or
mov
push
mov
or
push
cmp
cld
hlt
xchg
outs
add
xchg
cwde
push
hlt
jae
cdq
(bad)
cmp
inc
mov
ins
stos
popf
mov
push
jge
mov
ins
daa
fisttp
pop
stos
loopne
sub
cs
shl
xor
rol
retf
addr16
or
aam
nop
fisub
fwait
std
fstp
add
jmp
mov
lods
mov
xor
iret
outs
in
scas
retf
jl
retf
movs
mov
enter
out
mov
int
int
xor
cli
call
stc
jmp
aaa
jmp
out
(bad)
pop
cmp
retf
cs
pop
mov
pop
push
fimul
and
pop
pushf
cmp
inc
(bad)
mov
sub
sub
ds
xor
test
in
xchg
out
cld
cwde
ds
pop
pop
pop
add
cmp
push
aad
mov
outs
popa
xlat
or
mov
push
pop
sub
outs
and
enter
sub
jle
cmps
stos
adc
xchg
sti
sub
dec
mov
(bad)
hlt
pushf
mov
inc
addps
adc
mov
add
lea
mov
pop
mov
push
lods
popa
inc
lods
inc
lea
cld
jmp
(bad)
and
pop
ret
(bad)
getsec
leave
loop
push
scas
mov
ins
std
stos
daa
out
add
in
adc
bound
inc
add
xor
add
lahf
mov
sub
repnz
stos
cld
and
sub
cmp
mov
loopne
or
push
fucomi
scas
lds
adc
pop
dec
(bad)
push
in
in
mov
pop
inc
lock
sub
aad
or
xchg
stos
das
or
shl
inc
cwde
dec
sub
push
or
pop
je
adc
bound
xchg
pop
adc
pop
sub
mov
sbb
pop
mov
xlat
jmp
push
or
(bad)
sbb
jno
pop
add
pop
cdq
rcl
xor
sbb
dec
add
dec
sub
add
adc
ds
jl
xchg
sbb
push
repnz
cwde
(bad)
in
mov
aas
dec
cmp
mov
popf
ret
dec
stos
shl
jecxz
and
push
cdq
and
sub
sub
test
cmp
test
nop
aaa
cmc
cmps
or
daa
iret
into
(bad)
std
div
daa
add
xchg
pop
pop
jne
lahf
aad
(bad)
ret
pop
jp
pop
xchg
call
inc
sub
dec
ins
neg
cld
or
jmp
pop
push
sbb
ins
sbb
mov
jp
ficom
dec
enter
sbb
pop
ins
not
jmp
or
dec
inc
div
std
mov
add
movs
xchg
in
faddp
and
cwde
push
(bad)
scas
mov
fnstsw
push
(bad)
imul
mov
daa
adc
cmps
xlat
pop
(bad)
shl
and
test
push
add
pop
pushf
sub
ret
cmp
ret
sub
mov
mov
xchg
iret
lods
push
mov
jo
cli
test
aas
dec
cwde
test
(bad)
cmp
push
adc
push
push
out
js
pop
data16
pop
and
stos
mov
sub
or
xchg
mov
adc
adc
pop
call
cmp
test
(bad)
jno
xchg
or
fst
loop
das
xlat
lahf
sub
and
dec
or
(bad)
mov
ins
fild
inc
movs
cs
and
hlt
int
js
shl
movs
mov
mov
lock
inc
jno
aam
fwait
add
jo
jns
dec
dec
ja
arpl
push
outs
enter
lods
push
xchg
mov
inc
xor
mov
jle
mov
popa
add
pop
aam
inc
pop
or
test
mov
pop
add
xchg
push
pusha
into
xchg
in
xchg
test
(bad)
xor
rcl
xor
loope
push
xchg
mov
fisubr
sbb
xchg
stos
dec
inc
mov
mov
jl
dec
lahf
push
mov
cli
dec
push
add
jecxz
xor
jo
leave
cmc
fstp
pop
shr
sbb
xchg
and
xor
daa
mov
fsubr
xchg
mov
cli
pop
or
add
repz
lea
daa
cdq
clc
jnp
mov
sub
cwde
ss
and
and
xor
cmps
mov
pop
xchg
fld
mov
or
mov
mov
jl
push
je
adc
jne
adc
sub
mov
push
pop
sub
mov
mov
fidivr
retf
add
dec
sbb
nop
push
push
mov
fs
cmp
imul
or
mov
cdq
repnz
mov
bound
mov
mov
sar
stc
imul
xchg
sub
loopne
vmovlpd
mov
adc
push
dec
mov
js
sub
jp
xchg
cmp
sbb
cmp
gs
sub
pop
xor
je
sub
xchg
push
jae
fs
aad
cli
ins
cwde
xlat
dec
hlt
sub
inc
cmp
or
mov
jno
sar
xchg
add
fwait
push
enter
mov
lods
out
sar
dec
in
push
stos
aad
test
mov
repnz
sar
es
mov
sub
cmps
or
mov
sbb
clc
cmp
mov
in
gs
nop
fistp
fist
iret
xchg
xor
call
(bad)
xchg
mov
xchg
push
pushf
xor
movs
test
mov
out
push
ror
push
sub
imul
pop
js
fidivr
sbb
das
jmp
inc
(bad)
ret
(bad)
fwait
dec
inc
pop
sub
nop
add
sbb
bound
push
out
pop
stc
cmps
lods
cmps
(bad)
push
int
adc
rcr
add
mov
inc
aad
fisttp
jmp
push
push
pop
(bad)
repz
sub
inc
adc
mov
push
nop
xchg
jle
aad
jmp
ins
push
cli
lods
or
and
ffree
jp
imul
sahf
xchg
push
mov
dec
stos
stos
outs
mov
xchg
(bad)
retf
sbb
cmps
xchg
jno
ret
mov
push
pop
loopne
ror
push
add
cmp
push
in
jno
jle
xchg
cwde
sbb
mov
mov
pop
sub
and
xor
fwait
mov
pop
cld
mov
leave
sahf
pop
bnd
or
xchg
in
mov
cmp
test
inc
mov
add
mul
adc
repnz
lods
dec
push
mov
push
(bad)
in
aaa
in
pop
xor
sub
ret
sti
mov
and
xchg
leave
std
push
test
mov
add
add
ja
fcomp
cmp
outs
mov
push
bound
lahf
pop
mov
test
fwait
sbb
mov
fdivr
mov
aad
mov
push
mov
sbb
cmps
jecxz
shl
in
push
lds
cmps
ds
xchg
enter
imul
scas
enter
jg
cli
sahf
loopne
and
(bad)
sub
cld
or
xchg
inc
out
push
movs
aad
sbb
ret
pop
cmp
sbb
push
xchg
mov
shl
jne
mov
std
add
push
mov
jp
cmps
mov
dec
stos
jmp
xchg
jl
pop
in
(bad)
cmp
push
lods
imul
mov
sahf
sub
aad
adc
nop
cmc
push
les
xlat
lock
arpl
sar
lahf
dec
add
fs
ret
mov
icebp
sahf
lods
ins
arpl
pop
dec
cmc
sub
lods
rcl
or
sub
pushf
addr16
cmc
movs
mov
into
xchg
and
mov
adc
addr16
lods
mov
cmp
nop
(bad)
div
and
add
arpl
mov
mov
fdivr
loope
ja
dec
inc
arpl
sub
cli
inc
inc
cmp
jne
popf
xor
mov
pop
pop
outs
sub
add
dec
pushf
int
mov
jns
fsubp
dec
je
stc
mov
push
sub
scas
test
pusha
aam
cdq
cwde
pusha
les
push
std
cmp
scas
das
dec
iret
cld
or
aas
lea
pop
popf
out
xlat
push
or
dec
add
imul
(bad)
sbb
fwait
cmps
dec
add
sti
and
out
pop
cmp
stos
ds
lods
and
sbb
xor
(bad)
cmp
xor
mov
mov
aam
pop
inc
ins
out
push
in
sub
or
jge
mov
arpl
add
push
mov
sub
in
addr16
sub
loope
jge
pop
xchg
retf
nop
inc
xor
pusha
call
into
xchg
jl
arpl
pop
jb
out
mov
mov
adc
sub
mov
pop
sbb
pop
fcom
lock
pop
div
push
sub
sub
mov
in
jge
jmp
inc
dec
push
jmp
(bad)
xchg
dec
sub
cmp
push
clc
jnp
iret
adc
nop
inc
jns
in
cmp
adc
mov
movs
fild
mov
arpl
stc
xlat
sub
mov
sbb
or
fcom
(bad)
cld
bound
ret
pop
jmp
aad
dec
lahf
imul
cmps
cmps
adc
cmps
or
push
aad
fisubr
ja
or
jns
loopne
(bad)
sbb
push
xchg
aad
nop
cmps
icebp
dec
inc
pop
clc
cmp
retf
pop
scas
ds
add
jl
sahf
and
mov
cmp
xchg
ja
xchg
pop
loop
sbb
shr
sbb
aas
sbb
popa
add
test
xchg
jge
mov
test
jae
xor
xchg
or
xchg
(bad)
or
push
mov
dec
dec
sbb
les
dec
aaa
mov
(bad)
mov
jmp
and
and
sub
ficom
cmp
cmp
push
pop
push
xchg
out
in
mov
(bad)
ficomp
or
cwde
xchg
xchg
repnz
jae
nop
push
jne
rol
sbb
es
push
js
(bad)
lods
or
hlt
mov
int3
lock
scas
pop
and
mov
repz
xchg
inc
cmc
imul
(bad)
pop
or
repnz
retf
jno
and
dec
jmp
out
mov
dec
sub
jmp
ja
sar
pop
ret
inc
jmp
inc
sbb
jecxz
ds
jno
sar
pusha
xchg
icebp
ss
fnsave
test
bndldx
add
in
xchg
adc
mov
fimul
popf
jns
je
xchg
popf
xor
add
sub
add
mov
pop
jae
out
cmps
add
mov
ficom
pop
push
adc
jno
mov
and
int
mov
gs
mov
jle
jp
in
addr16
inc
push
sahf
sbb
icebp
out
scas
and
jmp
stos
mov
cmp
fwait
repnz
mov
in
push
repz
adc
adc
movs
loope
shr
xor
stos
inc
inc
fdiv
sbb
jne
pop
push
mov
aaa
das
cli
xchg
jnp
push
jno
lds
push
neg
pop
xchg
mov
push
mov
(bad)
loope
lea
pop
les
retf
mov
jl
test
out
out
gs
sub
fsub
inc
xchg
iret
test
test
int
shl
arpl
das
jmp
inc
push
nop
sub
sti
push
and
out
inc
and
outs
pop
movs
repz
ins
adc
out
test
mov
adc
cli
pop
push
adc
sub
cwde
push
jb
retf
pushf
dec
(bad)
lods
jnp
fild
faddp
add
(bad)
shl
sub
ss
retf
fs
fnstenv
push
mov
movs
std
mov
dec
lock
lahf
nop
les
(bad)
dec
ins
mov
call
dec
sbb
and
mov
sar
jle
bound
mov
cmp
add
xchg
ror
fild
inc
sub
adc
repnz
jecxz
div
fisub
lea
ja
lds
fild
les
rcr
mov
cmp
jle
push
fild
mov
xor
fnstenv
iret
mov
mov
xor
push
jl
sbb
outs
sub
ins
dec
ret
jge
movs
cmps
and
add
sub
pop
add
push
push
inc
aad
shl
sbb
mov
mov
(bad)
dec
push
ret
mov
jae
ficom
test
xor
mov
jge
sbb
or
(bad)
jmp
sbb
cmp
into
inc
jne
mov
cld
cmps
inc
inc
add
dec
pushf
int3
push
mov
ds
pop
add
rol
imul
pop
jp
dec
and
cmp
in
shl
ds
add
jp
sbb
sub
sti
je
pop
dec
dec
test
popa
inc
add
test
hlt
mov
or
call
pop
loopne
jmp
stos
mov
dec
inc
sbb
jne
push
push
les
xor
sub
lods
shl
iret
stos
cmp
dec
test
test
and
dec
stos
jns
mov
repnz
neg
bound
dec
sti
mov
dec
dec
inc
stc
into
add
test
bound
shl
(bad)
stc
xchg
shl
outs
jno
adc
xor
inc
stc
movs
popf
adc
mov
cwde
jno
mov
or
jecxz
jg
gs
dec
in
dec
ret
push
fwait
(bad)
jbe
push
stos
popf
call
jno
ins
retf
sub
mov
dec
sub
in
out
repz
push
dec
fnsave
jno
(bad)
jp
mov
jnp
xchg
dec
inc
adc
mov
mov
xchg
fs
mov
call
mov
push
inc
adc
and
add
xor
sub
push
jecxz
repnz
push
sub
mov
lahf
xchg
mov
call
xor
mov
and
jns
test
jmp
mov
inc
call
dec
cmc
pushf
xchg
mov
ss
and
mov
stc
pop
cmp
aas
scas
stos
repnz
sub
sbb
inc
cmp
or
pop
daa
or
rol
out
aam
xchg
sti
icebp
mov
jns
adc
test
jl
shl
int3
jo
call
popf
mov
inc
mov
pushf
jo
test
fcom
inc
mov
sub
dec
mov
push
enter
icebp
mov
movs
push
movs
or
xor
pop
push
sbb
sbb
jge
cld
mov
mov
mov
dec
mov
fcmovbe
push
ja
stc
jne
cs
mov
(bad)
das
repz
sub
cmp
leave
nop
iret
cmp
push
aam
fs
aaa
cli
hlt
mov
dec
or
add
das
and
fdiv
xor
xor
js
jbe
bound
cwde
dec
out
adc
and
inc
adc
and
fild
or
xchg
push
daa
mov
jmp
mov
or
push
aad
jp
sub
adc
js
fcom
fwait
in
jmp
gs
inc
ja
fdivr
outs
pop
outs
ins
sub
(bad)
test
lock
jl
pushf
cmp
xchg
adc
movs
push
cdq
arpl
jl
mov
(bad)
(bad)
mov
mov
cdq
add
(bad)
pop
adc
les
mov
pop
aam
scas
push
mov
pop
jmp
and
pop
mov
sti
pop
xor
in
mov
sub
in
jne
xchg
push
dec
xor
loop
not
xor
mov
ror
fidiv
ss
rol
mov
dec
dec
js
leave
cli
xchg
or
sub
cmp
test
jne
mov
jbe
sbb
and
push
push
outs
mov
push
xor
rcl
fisub
mov
les
jl
adc
mov
xchg
nop
js
inc
jno
fld
call
pop
sahf
cmp
in
and
add
push
data16
mov
lock
and
arpl
xchg
inc
cmps
neg
stc
cmps
jecxz
push
push
jo
inc
or
out
arpl
pop
int3
or
(bad)
mul
jo
leave
mov
cmp
cwde
inc
dec
mov
xchg
int
outs
xlat
cmp
call
nop
mov
push
(bad)
mov
test
ins
dec
jl
test
push
and
or
sahf
sub
fyl2x
add
and
les
add
xchg
xchg
aad
fwait
cmp
mov
aas
push
pop
and
jno
xor
pusha
test
dec
(bad)
sahf
sub
ins
push
bound
sub
in
call
add
inc
mov
call
out
mov
popa
jae
lock
push
in
xor
add
mov
enter
jle
or
retf
loope
mov
ins
ins
inc
cmps
pop
adc
or
inc
pop
mov
xchg
pop
scas
cmp
or
push
dec
dec
ret
push
stos
icebp
inc
mov
(bad)
rcr
cwde
aas
dec
iret
cmc
cmp
(bad)
mov
push
sahf
push
jns
les
sub
lahf
sub
ficomp
push
and
imul
repz
xchg
xor
sbb
setns
jg
repnz
fxsave
jnp
mov
das
jnp
ins
dec
das
mov
mov
jl
jns
mov
fcmovbe
mov
(bad)
pop
jnp
loopne
mov
jg
push
sub
cmp
jnp
mov
sub
mov
aad
sbb
loopne
pop
outs
fcmovbe
cmp
repnz
movs
mov
pop
pop
add
dec
dec
mov
repnz
loope
pop
jne
ret
enter
or
adc
mov
add
aad
sub
mov
daa
pop
movs
ror
push
jbe
and
or
inc
or
rcl
adc
rcr
inc
(bad)
(bad)
fnstsw
pop
xor
cmp
xchg
xchg
push
cmc
push
je
xor
inc
je
xor
sbb
push
xor
mov
in
out
push
aas
sar
stc
mov
and
jmp
mov
movs
aaa
dec
fsubr
in
jge
sub
aam
dec
std
xadd
add
aas
sub
out
(bad)
xchg
xchg
aaa
bound
inc
jae
sub
outs
jp
mov
cmps
pop
icebp
sbb
hlt
gs
mov
dec
je
test
add
xchg
sub
adc
repnz
dec
sbb
popf
into
int
stos
shl
mul
xchg
jae
scas
xor
mov
xchg
inc
jo
jmp
adc
fwait
iret
mov
cmp
jae
xchg
xchg
out
leave
sbb
mov
adc
pop
in
mov
test
sbb
in
push
and
or
sbb
movs
jne
cmp
add
mov
imul
xchg
lods
paddsw
mov
out
loope
out
push
mov
mov
call
imul
xor
ss
xor
inc
adc
add
shl
bound
(bad)
sub
jg
xor
pop
inc
and
adc
xlat
jmp
adc
push
sbb
fsub
int
add
xor
pop
rol
icebp
xchg
mov
frstor
mov
and
pusha
aam
and
fadd
sub
call
das
setne
mov
sub
mov
in
mov
sbb
ja
or
and
lods
(bad)
xchg
push
cmp
stc
and
jb
movs
pop
push
stos
add
fs
out
mov
xor
repz
cdq
int3
lods
dec
sub
addr16
(bad)
leave
mov
ret
repz
(bad)
frstor
scas
xchg
in
cmps
dec
aam
and
mov
iret
mov
or
adc
mov
pop
xchg
jmp
push
and
xor
mov
test
mov
fs
and
pop
ds
push
int
fs
xchg
xor
adc
cmps
lods
fs
loop
mov
push
ficom
ret
js
les
lock
push
pop
les
call
(bad)
in
repnz
or
dec
mov
jge
mov
lods
hlt
test
cmp
aam
mov
ror
push
mov
movs
jae
or
daa
imul
in
lods
xlat
popa
loope
outs
inc
mov
pop
dec
xor
sbb
xor
cmp
dec
imul
mov
js
mov
cs
push
dec
xchg
add
mov
and
dec
les
(bad)
das
test
xchg
dec
loope
inc
sub
aas
rep
sbb
imul
xor
mov
xchg
sbb
rcr
lock
test
cmp
cmp
xor
mov
jno
cmp
cmp
lea
push
mov
mov
ret
adc
test
fld
cmps
inc
add
push
xchg
jb
sbb
ss
pop
iret
sbb
scas
inc
dec
scas
(bad)
dec
jnp
push
cmc
cdq
pop
ret
in
and
jg
push
adc
add
fld
push
mov
dec
and
mov
cmp
in
pop
pop
int3
sbb
dec
push
sahf
enter
rol
pop
sbb
push
aad
sub
nop
jmp
mov
lods
addr16
retf
xor
lods
pop
add
(bad)
rcl
arpl
ja
in
shl
outs
ret
cmc
(bad)
inc
add
mov
jno
sbb
mov
inc
retf
mov
lds
fdivr
dec
jle
sahf
std
pop
sbb
not
jg
sub
stc
sbb
call
clc
push
and
sbb
jae
enter
inc
mov
mov
and
pop
adc
(bad)
push
cld
mov
jbe
adc
push
ret
aad
(bad)
aad
pop
mov
push
jbe
sub
retf
lods
push
pop
icebp
xchg
mov
dec
push
dec
ret
sub
lods
or
inc
retf
jnp
cmp
adc
pop
stos
call
out
inc
clc
xor
fwait
xor
xor
inc
ror
mov
or
push
xor
mov
inc
dec
jo
mov
dec
jp
push
dec
inc
stos
pop
out
ja
sub
and
shr
jae
sub
mov
inc
or
das
movs
retf
cmp
xchg
pop
cmp
mov
jl
and
inc
or
dec
rol
cmp
pop
gs
jl
inc
sub
mov
push
stos
aaa
fnstcw
dec
sub
dec
mov
es
push
jg
cs
add
adc
movsx
imul
jmp
push
add
inc
out
loopne
cmp
add
rcl
mov
shl
cmp
pop
and
arpl
jmp
inc
loope
test
je
jge
popf
sbb
push
jp
push
and
sub
adc
ds
test
in
into
lock
pop
pop
mov
das
cmp
mov
stos
mov
mov
int
daa
cdq
mov
cmp
daa
dec
xchg
lea
xor
cdq
cmp
idiv
fcmovnb
jle
sbb
adc
sbb
ror
mov
cmp
imul
jecxz
call
ror
sbb
cwde
adc
cmp
mov
jmp
fucomip
cmp
pop
lahf
aaa
add
mov
fisttp
push
std
mov
bound
aas
push
fs
xor
scas
gs
jmp
push
movs
mov
lds
xchg
popf
rcr
stos
dec
push
xchg
sti
pop
mov
stc
(bad)
push
push
sbb
fldcw
movs
xor
jmp
enter
inc
clc
inc
and
cmp
int
add
xor
lock
test
mov
int3
cmc
movs
aas
out
xchg
(bad)
adc
clc
xchg
lea
jnp
ror
mov
mov
pop
add
pop
pusha
ja
lea
push
retf
push
mov
sbb
repnz
and
bound
cs
or
inc
data16
pop
retf
pushf
xchg
and
imul
inc
push
or
cmp
jne
mov
or
cmp
stc
xor
jb
pop
fst
test
push
add
or
repnz
cmp
add
push
pop
or
(bad)
popf
fldcw
sti
adc
pop
jns
test
mov
rcr
push
jns
push
aad
pusha
das
xchg
jg
push
adc
and
push
scas
pop
js
stos
inc
mov
sahf
out
test
mov
fild
xor
sti
shl
jle
or
and
sub
loopne
arpl
xchg
aas
outs
repnz
repz
cmp
out
out
push
pop
imul
repz
sbb
ins
test
and
push
in
cdq
mov
lods
push
and
hlt
adc
test
jg
mov
xor
jmp
pusha
push
cmps
cmp
xchg
out
int3
cwde
inc
jbe
pop
ret
add
cmp
in
jno
mov
test
push
retf
es
nop
pushf
jp
lods
dec
test
jecxz
push
add
sub
out
cmps
jne
jns
pop
mov
or
mov
mov
retf
cwde
mov
inc
and
mov
sbb
mov
je
movs
js
pop
pop
loop
mov
or
inc
jne
push
cdq
push
xor
sub
push
ret
iret
jle
inc
inc
loopne
mov
mov
and
adc
mov
(bad)
cmc
cmps
push
add
xchg
repz
ret
fimul
push
fmul
inc
push
mov
jo
(bad)
clc
ret
cmp
rcr
pop
sbb
jle
push
add
pop
sbb
outs
adc
pop
mov
add
fcom
jb
jns
icebp
cmps
jo
js
arpl
fistp
xchg
lea
xchg
mov
lock
sbb
mov
sbb
adc
mov
adc
pop
imul
je
arpl
xchg
adc
mov
cmp
imul
cmp
push
add
out
jecxz
mov
(bad)
jbe
adc
cli
sar
xchg
std
mov
mov
mov
mov
outs
xchg
icebp
push
out
xchg
pop
stc
leave
stc
pop
fadd
sbb
scas
cmp
mov
add
movs
add
lods
pushf
xchg
sbb
mov
fmul
ja
pop
or
sub
sbb
stos
(bad)
pushf
adc
cmp
pop
rol
daa
je
jbe
cmps
adc
hlt
push
mov
(bad)
cmc
stos
ss
inc
push
push
cs
mov
(bad)
fcom
xchg
pop
clc
loope
mov
loopne
mov
cmp
retf
outs
jge
mov
dec
add
dec
jmp
addr16
mov
jmp
fist
into
dec
pop
adc
jmp
adc
aaa
push
mov
xchg
push
mov
or
and
les
lods
inc
push
aam
shr
xchg
clc
test
jbe
scas
and
fisubr
adc
pop
lds
test
push
cli
std
cmp
je
loopne
mov
and
or
out
aaa
stos
cmp
dec
aad
scas
shl
ins
gs
cs
shl
push
jp
lock
out
(bad)
fwait
cli
retf
repz
jnp
inc
imul
movs
pop
push
fistp
cdq
(bad)
neg
inc
ins
(bad)
mov
pusha
push
ret
pop
mov
pop
lods
pop
push
out
xor
retf
sbb
or
jb
adc
xor
xor
and
push
mov
push
shr
stos
(bad)
or
cmps
mov
lahf
fs
(bad)
dec
mov
cli
mov
addr16
push
mov
shr
adc
das
inc
mov
test
mov
push
push
sbb
pop
ret
popa
cs
mov
cwde
retf
neg
repz
or
xchg
jl
shr
mov
adc
adc
aad
xor
push
sahf
shl
cwde
outs
push
dec
nop
les
outs
push
jmp
sub
js
dec
fidiv
enter
cmp
repz
or
stos
lfs
jle
cmp
push
dec
div
fldcw
and
ror
xor
cmps
pop
shl
out
push
fld
adc
cld
daa
retf
test
cmp
add
jg
push
aas
sahf
in
mov
xchg
sbb
scas
pop
inc
sub
int3
outs
hlt
xor
mov
jno
(bad)
popa
fwait
cmps
dec
iret
imul
inc
mov
call
lock
test
xchg
inc
cs
shl
or
stc
inc
jnp
inc
adc
add
stos
jno
add
test
mov
movs
retf
cmp
mov
(bad)
aad
xor
xor
cmp
dec
(bad)
fbld
int3
jmp
sbb
not
add
pop
jne
inc
push
sbb
jecxz
dec
dec
popf
imul
add
sbb
push
fxam
loopne
sub
cmps
or
cli
xor
into
in
lahf
xchg
adc
jnp
out
std
mov
adc
adc
mov
mov
gs
adc
dec
fmul
add
xor
sbb
xchg
xchg
sbb
cmp
aas
cmp
repz
pop
stc
int3
retf
out
inc
into
pop
mov
test
cmp
invd
xchg
cdq
adc
gs
retf
movs
dec
fs
mov
neg
jge
(bad)
mov
dec
ss
scas
inc
scas
mov
scas
mov
mov
movs
bnd
and
imul
out
loopne
mov
mov
dec
fsubrp
sar
inc
out
sbb
popfw
adc
pop
inc
sbb
inc
arpl
mov
push
cli
sbb
pop
dec
int3
mov
mov
xchg
scas
paddb
push
jl
mov
movs
pop
pop
mov
fisttp
cmp
in
jmp
pop
inc
jns
dec
sbb
pop
mov
adc
and
adc
loope
repz
inc
cld
lods
sti
pop
dec
cmp
or
jge
jbe
mov
jp
dec
rcr
push
push
iret
ja
stos
mov
cmp
pop
test
xor
pop
and
retf
movs
adc
dec
sub
addr16
stc
rcl
ret
cmp
mov
xchg
dec
add
adc
daa
aas
idiv
cld
clc
push
movs
cdq
push
sti
xlat
fisubr
cmp
jecxz
pushf
pop
mov
lods
mov
jg
jecxz
repnz
call
add
jle
psllq
call
lahf
stos
push
add
dec
jbe
icebp
or
mov
dec
mov
xchg
div
(bad)
cmp
(bad)
ficom
pop
mov
iret
inc
xor
mov
pop
and
xchg
mov
adc
popa
dec
push
sahf
cdq
lods
(bad)
stos
(bad)
jp
setge
dec
(bad)
inc
outs
xor
inc
adc
ss
sub
cmc
bound
push
mov
popa
pop
mov
std
ins
aas
test
hlt
inc
fidivr
add
xor
shr
daa
cmp
cmp
cwde
movs
or
sub
add
dec
jno
mov
inc
ja
sub
dec
mov
rcl
jmp
adc
hlt
pop
xchg
aaa
ins
inc
test
hlt
dec
xchg
retf
jmp
sbb
pop
adc
push
pop
sub
adc
xchg
outs
iret
fcmovnbe
cli
pop
mov
sub
jo
dec
icebp
stc
lahf
ins
cdq
xchg
adc
jno
int3
repz
jo
lahf
mov
ror
jle
or
sub
les
or
test
adc
sbb
mov
sub
mov
jmp
test
inc
and
shl
popf
loopne
fs
cmp
sbb
inc
mov
fisttp
scas
adc
imul
or
jb
(bad)
fdiv
mov
scas
sub
push
mov
call
add
fisub
sbb
out
inc
sti
jbe
mov
sti
mov
std
mov
or
inc
push
inc
call
in
inc
in
fcomi
aam
imul
adc
test
push
into
or
test
movs
outs
out
lahf
push
xchg
mov
test
jmp
cmp
sbb
mov
test
sahf
cmp
arpl
push
adc
or
(bad)
into
jge
jl
adc
fcom
and
out
and
or
mov
cld
inc
call
icebp
mov
cmc
ja
sub
ss
ret
mov
and
jae
jb
test
hlt
push
or
jbe
push
mov
inc
fistp
mov
cmp
pop
cmp
mov
pop
out
gs
mov
sub
fs
pop
sbb
xor
mov
leave
imul
cmp
jmp
dec
dec
das
call
pop
dec
imul
mov
cld
cmp
mov
add
in
jge
mov
and
xchg
xchg
pop
dec
and
js
and
add
mov
xor
jnp
jp
lahf
mov
or
add
retf
xchg
jecxz
das
ret
fist
xor
or
in
push
pop
push
lea
cld
inc
icebp
mov
mov
or
xchg
push
and
add
call
hlt
jo
adc
lea
and
inc
cld
(bad)
mov
jle
ins
add
aad
mov
push
add
sar
loop
inc
sbb
or
sub
cli
enter
push
jp
ret
fimul
fstp
das
data16
mov
mov
xor
add
xor
fiadd
push
outs
cli
ficom
inc
mov
retf
pop
shr
imul
cvtdq2ps
push
cmps
or
sub
and
add
jmp
data16
pushf
jb
add
sbb
aaa
fiadd
repnz
push
push
inc
or
jg
ret
test
cwde
dec
adc
inc
test
repz
daa
sub
(bad)
fld
call
fistp
dec
xchg
fldenv
(bad)
div
mov
lock
mov
fcompp
(bad)
mov
and
sbb
fnstsw
and
sbb
dec
jnp
xor
mov
and
add
shl
mov
and
adc
pop
sbb
daa
sbb
mov
sbb
dec
mov
cmp
push
fldenv
xor
jae
sbb
add
test
pop
test
sub
sub
nop
imul
inc
lods
and
pop
jecxz
es
popa
mov
pop
clc
int
xchg
cmps
push
fldcw
jl
test
cmp
or
pop
ret
(bad)
push
mov
push
mov
pop
das
fiadd
retf
inc
jecxz
outs
sbb
and
rcr
(bad)
adc
aaa
sbb
inc
xor
add
add
aaa
sbb
(bad)
fwait
mov
sub
lock
gs
out
inc
retf
dec
pop
cli
adc
jae
sub
ja
(bad)
or
pop
les
je
ret
cmps
mov
sub
test
cmps
test
cmp
ror
aas
push
and
push
ret
mov
imul
push
pop
lds
add
push
icebp
sub
fnstenv
mov
sub
push
out
movs
sbb
iret
(bad)
in
je
mov
ffree
add
stos
lahf
cdq
ins
into
jmp
push
icebp
jl
mov
leave
xchg
add
enter
jb
inc
fwait
rcl
(bad)
stos
mov
into
in
cmc
inc
fisub
cmp
jp
ret
mov
adc
mov
pop
(bad)
mov
in
jne
shl
mov
adc
sub
fadd
dec
push
sbb
pop
mov
cli
sub
mov
push
jl
push
cmc
or
fs
movs
lods
jmp
push
mov
outs
fsub
jg
int
xor
movs
outs
in
mov
xor
adc
(bad)
icebp
repz
shr
(bad)
mov
(bad)
xchg
pop
fst
call
lds
mov
or
ins
mov
mov
pop
push
ret
ror
jp
adc
test
cmp
in
ret
jne
push
and
mov
dec
gs
imul
push
jo
loopne
sahf
mov
frstor
or
repnz
cmps
jl
xlat
enter
mov
std
fsub
je
mov
sub
mov
jne
loope
mov
mov
call
xor
jge
out
leave
aad
mov
retf
mov
ins
push
cmp
push
rep
fimul
dec
outs
std
std
test
fild
xchg
sahf
es
in
ror
push
mov
out
rcr
pop
sub
push
or
ror
shl
jno
call
add
push
mov
inc
mov
push
sbb
lods
rcl
cmp
cmps
push
mov
pop
(bad)
sub
in
jge
aas
push
xchg
jbe
lea
pop
movs
xchg
in
jecxz
mov
aad
cmp
jl
mov
lds
mov
cmp
mov
pusha
sar
push
dec
neg
or
ror
cmp
rcl
pop
je
mov
mov
mov
sbb
inc
sbb
shr
dec
mov
retf
mov
push
out
and
pop
xchg
mov
(bad)
mov
lea
pop
push
sub
adc
fild
fnsave
test
pop
jns
mov
push
jo
mov
aaa
adc
cmp
cwde
xchg
test
pop
repz
xor
dec
push
call
loop
lods
inc
jmp
pop
mov
retf
inc
jl
cmps
(bad)
ja
ret
xor
mov
ins
inc
jge
pop
push
cmps
pop
sub
xor
xchg
dec
adc
inc
dec
jo
pop
pop
popf
inc
lea
sub
mov
dec
fmul
out
sub
outs
adc
repnz
adc
cmpxchg
push
xchg
scas
aaa
shl
out
jge
mov
pop
xchg
jge
mov
jle
rcr
ins
xchg
scas
shr
mov
xor
les
jg
xchg
iret
outs
cld
iret
lds
ins
dec
mov
mov
cwde
test
sbb
in
push
daa
lock
adc
push
cmc
and
retf
repz
popa
jp
lea
jns
xor
(bad)
(bad)
jmp
gs
ins
aas
bndstx
push
and
inc
lea
sub
adc
cmps
mov
mov
jecxz
mov
lds
shl
mov
shr
(bad)
pop
gs
sbb
jl
(bad)
cli
push
data16
adc
mov
push
adc
or
cmp
sbb
jp
sub
scas
jmp
xor
ret
or
xor
fwait
aas
mov
fs
mov
adc
daa
loope
mov
out
movs
lock
mov
lock
jge
leave
xor
inc
ret
jp
dec
mov
and
pop
mov
adc
add
sbb
push
xlat
xchg
pop
pop
sbb
in
mov
fwait
and
xor
cmp
pop
sub
mov
aas
jge
out
es
pop
push
(bad)
and
inc
mov
pop
push
mov
dec
jb
and
movs
bound
xchg
clc
add
rcr
mov
inc
xor
push
iret
ror
jae
(bad)
std
pop
lods
mov
out
js
push
jno
mov
mov
xchg
ds
mov
jbe
mov
fucom
sub
inc
js
xor
outs
push
and
stos
and
mov
push
arpl
or
jg
outs
daa
or
es
and
fbstp
push
xchg
test
(bad)
ins
xor
and
push
outs
sub
dec
aad
sub
cmc
in
sub
sahf
xchg
xor
in
ret
jne
iretw
mov
pop
pop
mov
ret
icebp
aaa
into
adc
mov
sbb
dec
mov
(bad)
or
imul
mov
xlat
or
popa
call
cmps
pop
mov
xlat
jno
mov
rol
add
sbb
or
adc
pop
inc
dec
mov
jg
div
adc
mov
cwde
cmp
xchg
clc
stos
fsubp
jnp
mov
call
popf
adc
jmp
sub
cmc
inc
aas
cld
jg
dec
jns
jnp
stos
into
adc
popf
xchg
ss
mov
sbb
mov
inc
fwait
ins
mov
int
pop
push
not
cmc
pop
(bad)
push
test
adc
call
shl
xchg
int
sub
xor
jne
js
jae
or
push
popf
jne
inc
and
jle
fild
adc
jmp
cmp
jle
(bad)
adc
pusha
xchg
(bad)
mov
addr16
xchg
or
jmp
test
cwde
push
dec
push
and
push
(bad)
adc
mov
(bad)
into
mov
push
shr
xchg
and
fwait
ins
mov
outs
mov
gs
pop
mov
sar
pop
dec
cmps
sub
cmc
nop
push
nop
sub
(bad)
ror
pop
sbb
das
scas
(bad)
aas
and
or
mov
aam
test
cld
mov
sub
push
pushf
cmc
jbe
mov
mov
out
mov
jmp
fidivr
xor
mov
dec
sbb
pushf
mov
es
push
dec
and
push
pusha
std
or
loope
mov
(bad)
jle
adc
inc
addr16
jecxz
out
aad
cwde
xchg
xchg
iret
dec
cmp
repz
loop
mov
hlt
mov
cmp
or
jp
mov
xor
sar
jb
mul
pop
push
push
or
or
jmp
xor
adc
adc
jb
aaa
push
cmc
lods
ins
jecxz
into
dec
add
adc
retf
mov
push
inc
pop
or
mov
outs
int3
jns
xchg
xor
push
inc
pop
push
push
mov
sahf
repnz
and
jl
mov
imul
int
mov
test
add
mov
jge
outs
or
mov
out
cmc
mov
dec
mov
sub
shr
(bad)
sahf
add
mov
fidiv
out
adc
xchg
mov
ror
dec
arpl
sub
mov
jnp
pop
sub
int3
shr
mov
pop
push
sbb
pop
imul
sbb
mov
sbb
sti
bound
ins
push
out
cmp
sub
cs
sub
je
call
icebp
cmps
mov
sbb
push
xor
jb
jg
mov
adc
pop
(bad)
xlat
ds
aam
pop
sti
ds
cmp
or
in
es
adc
rol
aam
push
ins
adc
mov
push
inc
in
bound
add
mov
or
popf
push
mov
push
aaa
sub
mov
pop
mov
rol
imul
xchg
push
sbb
cmps
pushf
mov
push
xchg
rcr
in
loop
dec
mov
(bad)
mul
icebp
scas
xchg
test
adc
ja
push
inc
and
cmp
bound
xchg
mov
lods
fisttp
or
call
ja
jno
in
arpl
(bad)
outs
stc
or
ud2
and
mov
or
mov
mov
sbb
mov
popa
cmp
les
xor
or
add
pop
mov
or
fdivr
sbb
inc
sub
loope
popf
pusha
jns
cmp
mov
dec
push
fwait
pop
push
call
add
scas
out
scas
outs
pop
push
shl
cli
push
and
dec
jnp
test
in
or
mov
dec
fldpi
fst
sub
xlat
stos
imul
push
sbb
dec
jae
scas
jmp
push
xor
dec
dec
in
cmp
push
add
xchg
mov
test
mov
push
dec
retf
mov
or
push
adc
inc
inc
fnstsw
mov
cmp
adc
arpl
movs
scas
push
cmp
xor
xchg
mov
dec
inc
and
pop
(bad)
rcr
je
jmp
mov
xchg
cmps
je
add
xchg
adc
dec
or
fucomp
ja
fcom
sbb
xchg
clc
repz
xor
cwde
es
add
xchg
clc
mov
pop
mov
add
ins
lods
sbb
push
cmp
jns
mov
cmps
shl
call
add
dec
mov
leave
dec
lods
sbb
dec
icebp
das
pop
xlat
mov
js
test
jecxz
sbb
mov
imul
shl
add
daa
aaa
fisubr
adc
sub
cld
sar
outs
pop
add
jne
cmp
jbe
sbb
cmp
or
jecxz
dec
pop
dec
push
ja
sbb
push
fwait
jmp
adc
inc
fcom
or
jecxz
dec
inc
pop
hlt
in
cmp
cmp
lods
sub
fucomi
and
mov
popf
into
dec
sub
out
es
into
rcr
dec
cmp
adc
mov
leave
mov
lahf
rcl
retf
sub
mov
fistp
cmp
xchg
mov
jbe
cs
sbb
pop
in
repz
xor
(bad)
shr
nop
mov
shl
inc
pop
xor
jne
jno
not
and
cmps
jno
xchg
inc
or
push
mov
mov
mov
sub
push
popa
sti
bound
and
(bad)
shl
mov
and
or
sub
mov
jno
scas
sahf
jnp
xchg
add
(bad)
mov
dec
(bad)
cli
scas
clc
mov
scas
test
fucomi
xor
add
stc
imul
hlt
aad
aam
inc
outs
cmp
stos
sub
(bad)
or
mov
lahf
pop
loopne
push
(bad)
ret
arpl
add
dec
and
mov
int3
add
repz
leave
jae
xor
scas
lods
inc
ss
pop
xor
rol
fnstsw
call
push
lods
imul
mov
gs
adc
fcomi
mov
in
xchg
js
lahf
cmp
les
out
pop
imul
out
add
pushf
pop
dec
lea
mov
div
imul
pop
or
into
repz
cdq
dec
outs
loope
or
aad
arpl
(bad)
movs
cvttps2pi
loopne
and
lea
call
scas
lock
and
out
sar
jle
imul
mov
cld
cmp
retf
dec
movs
cmp
mov
div
mov
mov
add
daa
sbb
inc
and
sub
in
jb
sub
mov
adc
fsub
icebp
popa
xchg
or
add
or
dec
push
inc
mov
test
xchg
inc
mov
jno
cmp
fnstenv
retf
or
jg
add
or
mov
mov
cwde
jmp
lock
pop
sbb
(bad)
jl
sbb
arpl
hlt
xor
xlat
pop
test
rcl
cmp
(bad)
cwde
popf
jbe
jbe
push
repz
fdivrp
sbb
dec
jle
popa
imul
fld
pop
sahf
xchg
adc
mov
mov
ret
outs
ins
add
js
hlt
cs
out
sti
jns
fwait
pusha
mov
outs
jbe
mov
mov
stos
cmp
sbb
pop
sti
jae
add
cmp
mov
call
mov
sub
ret
push
sub
lods
mov
dec
out
and
pop
imul
movs
push
pop
cmps
out
stc
in
and
or
add
aam
sbb
mov
cmc
(bad)
sub
rcl
fucom
retf
in
das
jno
gs
mov
test
ins
in
xchg
add
fild
les
pusha
(bad)
push
test
(bad)
out
or
xor
ja
dec
pop
and
ja
popa
call
fld
mov
pop
inc
fsub
stos
lock
xor
mov
xchg
add
xchg
aaa
fwait
mov
ds
pop
in
arpl
inc
sub
popa
xchg
(bad)
mul
jge
and
scas
nop
jnp
pop
icebp
nop
pop
in
test
or
test
and
mov
sub
(bad)
in
mov
xor
div
shl
cld
aas
mov
pushf
mov
sbb
pop
ret
pop
sar
or
xor
pop
xor
rcl
lods
jb
cld
sbb
add
test
fistp
adc
lods
jge
jg
iret
mov
jno
sar
xchg
sub
imul
popf
or
mov
ins
fstp
scas
xchg
and
xor
cld
push
popa
push
xor
sub
inc
pop
icebp
dec
shl
shr
cmp
loopne
mov
jle
xchg
ror
jnp
mov
mov
in
imul
sub
and
mov
add
adc
scas
dec
into
jnp
pusha
pop
out
(bad)
mov
mov
xchg
or
jl
xor
pop
out
imul
cld
lds
and
inc
popf
dec
cmps
and
div
xor
mov
(bad)
cmc
arpl
out
mov
je
xlat
pop
add
mov
cmp
push
daa
xchg
sbb
cdq
pop
pop
adc
clc
test
sbb
jmp
jne
sbb
cmps
cdq
fadd
je
xlat
mov
loope
(bad)
sbb
push
pop
inc
fst
push
jl
cmps
mov
loop
inc
pop
rol
ret
dec
in
or
xchg
cmps
or
mov
jno
(bad)
cmp
in
cmp
mov
cmc
pop
xchg
cmp
lds
push
sahf
or
paddsw
in
push
xlat
lods
loope
fwait
ret
adc
pop
jl
mov
fnstsw
pop
pop
mov
(bad)
mov
daa
adc
hlt
mov
xlat
mov
add
dec
inc
or
repz
xchg
into
xchg
scas
in
xchg
dec
dec
add
sar
(bad)
xor
pop
pop
cli
out
int3
cmp
je
and
sub
inc
stos
xor
cmp
inc
mov
(bad)
cmp
imul
and
popf
lahf
xchg
fsub
pusha
scas
ror
xor
dec
push
fnstcw
adc
xchg
int3
(bad)
inc
mov
and
daa
push
mov
mov
push
movs
dec
fld
call
xor
push
es
aas
sub
or
es
clc
add
adc
xlat
stc
neg
pop
imul
dec
retf
inc
and
sub
stos
movs
or
push
jno
adc
push
xchg
(bad)
jmp
mov
je
es
sbb
rcr
imul
mov
out
inc
and
mov
div
mov
and
test
je
adc
mov
movs
test
jb
mov
(bad)
jp
test
inc
inc
xlat
call
and
mov
sbb
cmp
xor
push
adc
cmp
pop
mov
out
jmp
movs
into
sbb
loopne
cmp
cmp
fwait
sub
scas
imul
les
int
xchg
jle
or
rol
es
sbb
jg
cmp
push
dec
pop
pop
aaa
stc
sub
scas
xchg
leave
sbb
mov
or
mov
retf
xchg
sbb
cmp
mov
shl
mov
push
sar
xor
jno
int
in
xor
adc
in
push
push
add
in
ins
(bad)
push
cli
(bad)
shl
sbb
xor
adc
lods
push
nop
bound
lods
add
inc
lea
push
mov
sub
std
mov
mov
mov
ins
jmp
ss
es
mov
shr
in
(bad)
rcl
jg
fld
retf
push
and
push
ficomp
fwait
xchg
jp
xchg
xchg
sbb
push
push
xor
xor
test
mov
pop
mov
je
rcl
call
test
call
jmp
outs
sbb
popa
call
cmp
lods
loop
jb
sub
add
test
(bad)
cmp
adc
shl
mov
ret
fidiv
ret
mov
dec
ins
adc
js
adc
ins
repnz
popf
pop
cdq
pop
or
aaa
dec
push
jmp
push
aam
addr16
test
sub
sahf
sub
loopne
dec
and
into
mov
mov
inc
jne
aaa
lock
cli
call
repz
fstp
xchg
ret
push
std
sbb
jge
int3
mov
int
cmp
push
push
nop
test
aaa
out
mov
shr
rcr
xchg
arpl
(bad)
sahf
leave
loop
sbb
sub
popa
into
stos
cmp
in
imul
pop
push
cmp
jo
adc
xchg
xor
sbb
mov
and
cmc
scas
xor
jbe
add
enter
cmp
inc
fs
shl
cld
outs
mov
fld
popf
push
push
cmp
cmp
inc
repz
loope
sbb
(bad)
fst
pushf
pop
inc
inc
imul
add
shl
jmp
xchg
mov
mov
jmp
xor
test
les
ins
cli
call
xchg
dec
sbb
outs
dec
dec
push
lock
daa
push
lods
in
mov
js
sar
daa
mov
ss
fst
or
mov
inc
xor
lds
mov
mov
add
sti
push
test
in
retf
bound
xchg
or
mov
fcom
outs
cmc
dec
adc
jo
jnp
sub
(bad)
and
ds
lock
adc
leave
call
push
out
sub
fsub
pop
outs
mov
mov
jo
(bad)
or
fs
jmp
jp
or
mov
out
and
inc
loop
jmp
mov
mov
adc
fsub
inc
ret
cmc
loop
adc
jne
adc
sub
test
jge
adc
inc
inc
data16
push
mov
adc
(bad)
ja
jp
enter
fdivr
cmp
mov
imul
push
stos
dec
in
mov
aaa
dec
cmp
mov
mov
int3
xor
dec
mov
lods
add
outs
fsub
add
mov
jns
xor
inc
inc
xchg
mov
pop
aaa
inc
movs
xchg
in
mov
iret
out
jmp
and
xchg
xchg
cdq
cmp
push
cli
fwait
xor
push
sbb
and
fwait
aam
xchg
jno
push
lea
add
add
pop
cmp
push
jecxz
cmp
dec
rcr
data16
xor
fbstp
push
lods
add
xchg
cmps
jp
mov
sahf
push
or
jnp
and
cmp
sub
fist
add
jo
push
mov
mov
mov
pushf
leave
movs
mov
repz
cmp
pop
jns
push
push
xchg
or
add
mov
pusha
push
std
cs
lahf
mov
dec
pop
mov
pop
mov
daa
test
or
mov
in
ss
cmp
mov
mov
or
push
cld
retf
dec
mov
test
lods
hlt
adc
pop
icebp
jmp
and
cmp
fistp
icebp
inc
call
repnz
test
div
cld
ja
lods
pop
sub
jle
test
aaa
or
sub
test
mov
loopne
xor
inc
mov
icebp
fmul
xchg
adc
jl
xor
push
add
(bad)
gs
push
ins
dec
xor
shl
pusha
mov
pop
inc
mov
(bad)
and
dec
and
inc
xchg
and
mov
push
out
fadd
and
adc
lods
ds
fist
xchg
jo
cmp
shl
dec
jno
into
sub
add
addr16
sub
inc
iret
sar
loope
movs
push
lds
retf
pop
jne
test
js
and
xor
mov
push
adc
mov
pop
fsub
stos
jns
add
or
movs
popfw
jnp
dec
push
adc
jo
js
in
stos
mov
loop
adc
arpl
les
adc
jp
mov
mov
xlat
jns
jbe
or
fiadd
(bad)
mov
enter
pop
and
std
hlt
jbe
gs
adc
sub
and
fcom
hlt
loope
les
popa
add
repz
mov
push
xchg
dec
inc
mov
sub
xor
xchg
pop
or
or
add
mov
jb
ins
stc
jecxz
bound
xchg
push
dec
aas
push
lods
mov
xor
sub
fs
cs
enter
shr
mov
pop
imul
shl
bound
jg
dec
retf
jmp
cmc
not
sub
mov
in
pop
in
sub
test
hlt
out
cld
mov
sub
scas
scas
mov
or
dec
rcr
add
mov
push
sbb
mov
cld
inc
jnp
pushf
pop
push
push
jp
or
or
je
inc
xor
and
jmp
jmp
sub
mov
in
mov
xchg
pop
xchg
dec
push
dec
xlat
fiadd
sahf
stc
jb
(bad)
jecxz
xchg
jbe
jb
pop
movs
push
pop
cmc
cmp
std
dec
fdivr
scas
fisub
push
out
mov
cmp
mov
sbb
mov
mov
and
jp
(bad)
(bad)
cdq
call
test
mov
lock
sub
cli
shl
icebp
sub
push
xor
cmps
jae
leave
mov
popf
sbb
int
scas
sbb
bound
sub
daa
add
dec
cmps
shr
std
das
loopne
or
pop
mov
outs
add
pop
lock
xor
and
cmp
repz
sbb
sbb
sbb
or
out
jns
pop
sbb
xor
add
cld
pop
movs
add
or
sub
stc
pop
int
loope
xlat
pop
sub
movs
mov
es
dec
out
push
mov
fiadd
or
mov
stc
mov
xchg
add
and
sbb
push
lods
enter
lahf
inc
cmp
pop
bound
les
dec
and
ret
and
call
mov
loopne
and
test
add
call
movs
lds
sub
fmul
retf
pop
push
retf
xor
fstp
hlt
pop
jmp
cs
dec
into
inc
out
dec
arpl
mov
jae
xor
popf
sub
or
mov
inc
shl
adc
out
and
mov
cwde
mov
sub
shl
scas
call
adc
lods
retf
cmps
jmp
jmp
xor
jo
cdq
push
iret
fwait
adc
into
call
mov
fwait
xchg
push
mov
lahf
pop
push
or
dec
das
test
inc
inc
adc
xor
jbe
mov
imul
adc
cmp
mov
in
call
adc
adc
cmps
aaa
add
or
sahf
rcr
cmp
pop
sbb
xchg
inc
mov
inc
cmp
xor
inc
cmp
leave
cmps
sub
sahf
mov
xchg
call
inc
js
enter
dec
lods
push
pop
in
loopne
or
push
xchg
sbb
mov
mov
je
ins
sub
repz
adc
jmp
push
jmp
push
sub
pusha
inc
add
jns
or
mov
retf
push
mov
xchg
(bad)
mov
push
mov
retf
and
mov
mov
or
inc
mov
cmp
xchg
outs
push
push
test
inc
jecxz
dec
xchg
mov
inc
ss
fld
sti
les
pusha
pushf
mov
jle
push
mov
fwait
imul
inc
pushw
sbb
mov
js
sbb
push
lods
sub
inc
mov
clc
loop
test
jne
sub
test
jb
xor
or
push
xchg
push
in
repz
mov
icebp
iret
sbb
or
pop
xor
hlt
jmp
(bad)
ror
mov
aam
ss
repz
movs
pusha
xchg
enter
mov
les
cmps
pop
xchg
adc
out
retf
jbe
sub
mov
push
les
scas
pop
pop
xor
mov
(bad)
cld
and
mov
int
mov
inc
fs
ficom
mov
pop
pop
jmp
push
popf
sahf
scas
outs
aaa
push
pop
ins
div
add
push
test
mov
or
inc
dec
sahf
test
jnp
hlt
rcl
mov
lods
push
adc
lea
inc
mov
and
lods
and
cmp
sbb
and
mov
or
(bad)
cdq
xchg
inc
call
aas
jl
lock
ficomp
arpl
or
imul
fldlg2
mov
test
aas
add
ret
hlt
mov
mov
cmps
sub
stos
shl
popa
push
xlat
jno
mov
fldcw
sub
mov
sub
lods
ficom
mov
cmps
ins
sbb
cmps
push
xor
retf
fstp
bound
xchg
cs
mov
mov
pop
inc
lods
lds
xchg
aas
jne
mov
xchg
cmp
daa
xchg
xchg
or
out
adc
mov
ins
cmp
push
inc
cmc
stos
rcr
leave
stos
mov
pop
mov
retf
mov
lods
or
push
sti
inc
push
mov
mov
or
or
dec
mul
repz
mov
shl
cmps
xor
pop
mov
cmps
mov
in
test
push
fstp
push
sub
retf
sbb
push
movs
jmp
pushf
push
xchg
xor
sbb
add
ins
push
dec
mov
pop
xchg
cmps
loop
mov
adc
cmp
add
sar
jecxz
das
jbe
ret
push
xchg
mov
gs
add
sub
mul
popf
lock
ret
retf
mov
inc
sbb
jne
leave
xchg
jae
push
enter
(bad)
xor
add
arpl
push
add
mov
jne
add
or
dec
xor
xchg
mov
add
inc
sbb
retf
mov
cmp
or
push
mov
mov
xchg
pop
mov
inc
mov
pop
jns
std
stos
scas
cmps
call
mov
mov
jmp
test
mov
mov
adc
mov
in
ret
sar
cmp
in
ins
xchg
cdq
pop
xchg
inc
cmp
jmp
stos
add
std
mov
fld
aaa
xchg
jmp
mov
loop
jno
shl
fild
into
loop
add
fwait
ins
retf
or
mov
cmp
xor
mov
arpl
jmp
pop
pop
cmp
pusha
fxch
popf
aas
mov
test
add
cmp
sub
inc
mov
jbe
mov
jge
xchg
mov
push
sub
push
cmp
dec
fimul
or
sahf
pop
mov
and
mov
mov
adc
mov
xchg
push
or
(bad)
jp
jmp
xchg
adc
jle
iret
scas
xchg
sub
ret
inc
inc
out
push
and
push
jecxz
cmp
add
or
jge
ins
sahf
aas
xchg
dec
jl
jnp
cld
out
(bad)
nop
fnstsw
xchg
dec
lods
inc
mov
mov
xchg
cmc
popa
and
dec
ror
add
iret
sub
fidivr
not
loopne
(bad)
cmp
enter
outs
push
push
or
sub
scas
add
cmps
mov
mov
les
xor
dec
outs
arpl
stos
add
dec
mov
or
dec
cmp
sub
mov
xor
(bad)
pop
pop
push
and
xor
xchg
xchg
out
jns
out
dec
retf
dec
iret
xchg
sahf
pusha
sub
in
jmp
pop
ret
sbb
lods
iret
mov
ds
inc
and
pop
daa
imul
rcr
cmp
inc
cmp
sbb
jmp
fld
add
mov
and
mov
ffreep
pusha
jnp
scas
aaa
sbb
xchg
repnz
cmp
ss
fwait
(bad)
jg
add
sbb
mov
and
mov
les
xchg
or
test
inc
mov
call
mov
sbb
(bad)
mov
aam
inc
ss
push
lds
push
add
repnz
add
pop
xor
retf
jecxz
mov
imul
mov
add
dec
or
jns
repz
ficom
add
repnz
xor
inc
test
pop
cmp
cdq
xchg
iret
scas
xchg
js
jbe
mov
fistp
retf
popf
or
xchg
mov
push
call
rcr
cmp
adc
inc
imul
setg
push
dec
repnz
pop
add
cwde
cmp
mov
xor
jnp
scas
mov
icebp
adc
sbb
xor
sbb
repnz
cld
mov
imul
push
mov
and
sbb
ret
cmps
jl
clc
pop
js
sub
mov
adc
cmp
pop
add
pop
lods
dec
mov
xchg
inc
and
sub
mov
mov
cmp
repz
into
sti
mov
xor
(bad)
sbb
sub
adc
retf
push
jns
mov
jb
xor
loop
inc
jae
add
loopne
add
cs
add
lea
xchg
xchg
shl
inc
ja
repnz
jl
punpckhwd
xor
cmps
xchg
rcr
sub
ret
dec
mov
adc
leave
mov
les
and
mov
int3
loopne
fs
sahf
push
sub
ja
or
mov
scas
fwait
pop
sbb
mov
call
ja
mov
dec
int
pusha
retf
aam
fcomp
mov
push
inc
cmp
sub
movs
ja
fild
pop
sbb
ins
jno
mov
dec
mov
push
jne
or
inc
mov
data16
ss
add
adc
out
movs
nop
out
inc
and
dec
inc
cmp
mov
movs
pop
mov
test
in
pushf
jo
addr16
cwde
mov
pop
inc
pop
(bad)
stos
lds
fimul
(bad)
out
add
sbb
push
int
and
push
sbb
mov
adc
sbb
ret
comiss
inc
(bad)
ret
imul
call
push
or
jb
sbb
push
inc
mov
sub
test
jb
xchg
inc
ins
adc
out
mov
(bad)
mov
movs
xchg
repnz
mov
sahf
mov
xor
iret
outs
leave
xor
and
imul
mov
dec
dec
inc
dec
aad
mov
in
or
mov
pushf
xor
add
jg
xor
cmp
popf
cmp
dec
mov
mov
xchg
jl
mov
jo
sub
stc
jmp
shl
loop
mov
fwait
push
dec
adc
cmp
push
xchg
jbe
add
neg
(bad)
xor
sbb
sub
pop
test
or
retf
cmc
iret
arpl
xchg
jge
inc
jle
push
and
dec
mov
je
mov
movs
call
ret
lods
dec
sbb
dec
stos
fnstsw
test
xchg
mov
das
dec
leave
add
mov
and
mov
xchg
or
test
cld
sbb
sub
mov
fld
(bad)
sbb
mov
push
int3
mov
adc
iret
cdq
push
dec
mov
inc
mov
aaa
push
test
inc
retf
data16
jge
xor
inc
int3
xor
mov
pop
inc
inc
mov
test
cmps
lahf
inc
ins
jmp
stc
push
sbb
sbb
retf
mov
add
mov
(bad)
int3
and
mov
cwde
ins
jo
dec
std
adc
sbb
test
jmp
js
sbb
xchg
and
xlat
pop
dec
jecxz
cmp
and
in
cdq
mov
outs
(bad)
scas
gs
xor
loope
mov
add
inc
and
popa
adc
dec
cmp
cmp
sbb
dec
add
dec
xchg
inc
or
inc
pop
push
stos
or
sub
xor
lea
sahf
mov
push
xor
mov
jmp
and
pushf
inc
test
mov
daa
scas
mov
dec
scas
rcl
shr
pop
into
or
enter
dec
fmul
dec
xchg
xor
adc
loop
xchg
inc
jl
sbb
adc
retf
test
aaa
loop
inc
push
adc
rcr
les
push
mov
ds
pop
daa
sbb
sbb
push
dec
xchg
fist
and
shr
push
mov
adc
xchg
sbb
lahf
cmps
shl
inc
mov
lock
pop
in
sub
shl
push
push
(bad)
iret
sub
dec
outs
stos
and
(bad)
pushf
sub
das
mov
das
fcomip
push
loop
push
mov
dec
mov
mov
hlt
inc
jne
es
out
rcl
cmps
out
pop
pop
out
jbe
shl
ds
ins
dec
or
sub
cmp
scas
mov
aaa
fs
adc
imul
mov
sbb
adc
std
lahf
repz
sub
nop
adc
mov
push
inc
pop
xor
cld
movs
mov
fst
jmp
mov
and
(bad)
nop
lods
ja
js
call
mov
cmps
dec
(bad)
ret
rcr
fnsave
dec
sbb
push
stos
pop
cmc
fs
shl
popf
aas
inc
mov
dec
pusha
fnstcw
imul
sbb
push
jle
es
gs
cld
push
add
sbb
mov
add
and
fiadd
push
repnz
test
enter
dec
add
retf
gs
cmp
mov
aaa
inc
xor
pushf
jge
add
push
cmp
cmp
(bad)
fnstenv
push
jns
mov
xchg
jae
je
out
fiadd
push
add
or
test
or
(bad)
rcl
or
imul
lods
lods
cs
inc
(bad)
add
(bad)
rol
or
stc
daa
popf
retf
pusha
mov
xchg
out
test
mov
jmp
mov
cdq
call
test
sub
std
rcl
stos
jecxz
cld
pop
inc
movs
inc
adc
mov
add
and
mov
retf
adc
mov
push
call
scas
mov
mov
pop
scas
push
dec
clc
xchg
in
jecxz
xchg
stos
xchg
data16
push
sub
scas
inc
ins
or
test
cmp
fwait
jmp
mov
jmp
fstp
xor
mov
int
xchg
movs
fbld
out
mov
cdq
or
stos
ret
jnp
cmc
jno
pop
lahf
test
movs
retf
sub
scas
imul
and
xchg
iret
(bad)
dec
hlt
dec
pop
out
jge
in
rol
lock
jecxz
cmp
and
adc
mov
cmp
and
sbb
ret
sbb
(bad)
scas
add
push
nop
pusha
loopne
sahf
jmp
pop
mov
popf
inc
jbe
adc
mov
add
aam
retf
out
stc
(bad)
fwait
cmps
and
push
(bad)
xchg
xchg
pushf
les
les
or
mov
cmp
push
hlt
xchg
push
cmp
sub
lods
mov
push
pop
nop
std
sahf
xchg
fabs
and
push
xor
mov
test
jle
pop
adc
cmp
pop
pop
mov
push
rcr
jle
js
mov
dec
lods
xor
mov
clc
icebp
test
repnz
jecxz
cmp
pusha
pop
jle
xlat
scas
cdq
xchg
add
repz
adc
mov
inc
outs
inc
inc
test
bound
test
jns
push
scas
push
repnz
or
out
inc
or
and
std
fnstenv
mov
mov
lods
push
xlat
add
add
push
fisub
jne
leave
cmc
je
jle
inc
fidiv
cmp
adc
dec
scas
jecxz
sbb
movs
into
pop
into
xchg
sub
popf
push
sub
cld
outs
test
jl
scas
push
scas
inc
mov
sub
jnp
mov
jle
mov
clc
or
rcr
(bad)
scas
sub
sahf
cmp
ss
fild
lea
scas
aas
mov
add
and
sub
sahf
cmps
hlt
xor
sahf
mov
mov
or
hlt
sub
inc
das
popf
ins
adc
add
sub
pmulhw
jge
xor
int
inc
std
mov
imul
xchg
or
mov
pop
xor
adc
call
and
aaa
mov
pusha
fst
pop
lds
icebp
sahf
xor
mov
mov
lahf
enter
add
lock
sub
repnz
sub
mov
inc
dec
loopne
pop
xor
mov
shl
outs
das
or
out
js
add
and
nop
xchg
scas
xchg
sub
sbb
ins
add
xor
sbb
xchg
mov
dec
clc
cmp
mov
and
inc
jmp
cmc
ds
out
mov
lea
xchg
mov
ret
dec
mov
xchg
stos
inc
sub
push
scas
xchg
cmps
sub
mov
dec
addr16
cmp
inc
std
mov
jae
jo
dec
pop
jno
inc
in
(bad)
adc
push
(bad)
lods
sahf
enter
and
fist
out
aas
test
sub
sbb
xchg
pusha
aaa
xor
lods
sti
cld
imul
mov
cmp
enter
inc
dec
xor
daa
mov
popf
mov
pop
inc
push
push
add
imul
adc
loop
call
mov
cmp
out
mov
lea
pop
sar
shl
adc
xor
dec
inc
addr16
pusha
add
push
add
sti
add
mov
and
imul
stos
bound
div
imul
adc
push
hlt
bound
xlat
cmp
add
pop
movs
aaa
clc
fcom
shl
mov
push
int3
mov
imul
test
idiv
into
push
aaa
lock
sar
inc
dec
imul
icebp
jmp
push
popa
or
aas
movs
pop
dec
(bad)
xchg
mov
leave
cli
mov
add
pushf
dec
sbb
mov
jnp
je
inc
ficom
cmps
retf
sbb
fmul
sub
xchg
mov
ret
push
aas
sahf
mov
jg
xor
int
movs
data16
ins
jns
cdq
adc
mov
inc
jo
fimul
jmp
sub
pop
cs
jo
adc
add
xor
(bad)
inc
shr
push
(bad)
shl
sbb
cdq
mov
ret
data16
inc
jmp
leave
popf
lods
popa
mov
mov
into
iret
jecxz
pop
adc
lock
enter
sbb
lods
xchg
mov
in
cmp
mov
xor
push
repnz
jle
in
xchg
fcmovu
dec
mov
push
mov
jo
mov
fwait
or
(bad)
in
dec
lea
xor
leave
mov
xchg
aad
repnz
(bad)
cdq
mov
jp
jp
mov
std
adc
pop
inc
int3
sbb
cmp
mov
shr
fxch
jecxz
ins
sar
sbb
int3
mov
dec
arpl
cmc
mov
push
adc
jo
fdiv
fbld
and
add
cmp
out
add
lahf
and
pop
sbb
adc
xor
call
(bad)
popf
imul
pop
fstp
fistp
sbb
push
adc
je
sbb
push
cmp
jg
sub
xchg
lds
jmp
xchg
and
pop
scas
icebp
pop
ret
jns
fadd
xchg
out
(bad)
jle
xchg
add
cmp
cmp
imul
pop
jae
dec
(bad)
and
ror
popa
push
adc
test
lods
xor
call
arpl
repz
inc
push
sbb
movs
cmp
shl
ss
push
push
add
ja
sub
aaa
cmp
xor
data16
(bad)
jg
mov
sahf
add
das
mov
mov
adc
push
push
jge
out
sub
stos
sti
pop
daa
je
sbb
sub
scas
cdq
outs
cs
cmp
fisub
jno
enter
popf
cmps
xor
sbb
in
mov
mov
push
dec
pop
imul
out
dec
fild
xchg
add
(bad)
into
dec
lahf
in
xchg
div
call
fcom
psrlq
add
movs
or
mov
ins
mov
xchg
inc
push
stos
cmp
(bad)
dec
cld
test
div
cmps
pop
dec
into
or
sbb
sub
aas
fwait
dec
test
xchg
add
ror
aas
dec
hlt
lods
dec
pop
out
dec
getsec
outs
inc
fisttp
push
(bad)
or
adc
sub
aam
jbe
(bad)
pop
fdiv
inc
cmp
fist
dec
jecxz
lock
sbb
dec
adc
cmp
ror
fsubr
mov
int3
pop
inc
jl
and
xchg
jle
jne
int
in
retf
xchg
cmp
pop
push
scas
loope
mov
hlt
xor
or
mov
inc
shl
mov
arpl
mov
dec
mov
jb
adc
mov
lods
push
shr
push
out
sbb
mov
repnz
jne
aad
pop
rcl
sahf
push
test
mov
pop
and
xor
dec
push
out
lods
pop
xchg
in
mov
imul
and
lea
xor
scas
or
mov
pop
adc
inc
lahf
mov
mov
push
inc
push
pop
nop
hlt
pushf
cmp
adc
add
sbb
or
movs
push
mov
imul
jbe
jb
retf
aaa
outs
movs
inc
jno
add
jg
ins
xor
scas
rcl
ret
shl
add
(bad)
push
mov
push
in
add
xchg
sbb
or
pusha
and
mov
jl
xor
dec
setne
in
xor
push
lods
movs
out
push
in
cmp
xchg
push
jg
fild
or
sub
and
sbb
ss
test
fwait
shr
sbb
ja
push
in
iret
mov
pusha
sbb
dec
dec
ins
xor
xchg
out
loope
sbb
inc
adc
retf
push
daa
aam
xchg
or
enter
mov
mov
int3
fdiv
cmp
jns
xchg
stos
pop
cmp
test
cmp
push
into
xchg
in
mov
add
into
mov
cmp
sbb
in
inc
and
imul
les
sbb
push
or
(bad)
mov
out
push
add
es
and
mov
mov
mov
push
(bad)
stos
outs
mov
cld
push
mov
pop
mov
lds
mov
jnp
(bad)
call
ror
jmp
lock
and
movs
adc
pop
fisub
dec
enter
sub
out
push
add
mov
adc
sub
call
sub
out
pop
dec
add
rcr
jmp
adc
or
mov
out
sub
xor
xor
iret
imul
jnp
cs
and
clc
xor
pop
ja
fdivr
inc
(bad)
ins
pop
rol
arpl
mov
sub
shr
sbb
mul
jo
dec
mov
add
das
add
and
mov
or
sub
push
in
sub
sub
mul
rcr
fadd
inc
scas
cmp
sbb
dec
push
aas
pop
inc
adc
ds
daa
arpl
cmp
mov
fidivr
or
pop
and
out
and
adc
and
push
push
jg
in
enterw
dec
push
jg
push
mov
aaa
cs
inc
mov
inc
movs
pop
add
call
mov
sub
adc
push
loope
mov
adc
loopne
sub
stc
push
test
add
std
sar
fcom
not
dec
movs
sub
retf
movs
(bad)
mov
or
out
pop
fsub
outs
inc
call
jne
(bad)
retf
enter
mov
jmp
je
pop
mov
sub
loope
stos
fidivr
popa
lahf
stos
stc
push
sub
or
shl
jg
mov
cmps
ins
pop
push
popa
mov
outs
jge
dec
jecxz
pop
push
pusha
jb
bound
xchg
and
mov
inc
cmc
rcr
adc
jbe
mov
shl
mov
stos
xchg
sub
or
push
mov
mov
int3
jo
mov
mov
inc
push
bound
and
nop
idiv
fbld
int3
and
lahf
inc
repnz
sahf
pop
cmp
pusha
fisttp
dec
dec
adc
push
rcr
mov
push
pop
lea
sub
retf
nop
(bad)
mov
push
push
jbe
sub
lea
sub
out
add
push
add
std
ins
jmp
cmp
das
jl
mov
push
mov
inc
fimul
lods
mov
pop
mov
aas
push
inc
popf
add
out
mov
or
cs
push
jmp
bound
pusha
int
pop
fs
sub
mov
fld
jmp
std
aaa
or
pusha
imul
pop
inc
aad
mov
sub
adc
call
mov
push
mov
xlat
jne
loope
adc
adc
fst
(bad)
jl
dec
mov
dec
loopne
iret
fstp
mov
dec
(bad)
pop
xchg
imul
retf
out
ja
sar
lods
dec
jge
adc
jne
loopne
mov
aas
(bad)
loopne
cmc
in
lds
fistp
dec
push
cmp
xor
icebp
inc
rcl
xchg
jl
icebp
mov
vpshlq
daa
loop
call
adc
inc
xor
test
cld
iret
mov
jmp
stos
mov
dec
clc
cmps
cmp
xor
jp
push
icebp
cwde
xor
cmp
push
jns
ja
add
outs
sbb
loopne
jno
push
shl
adc
xchg
ins
fnstenv
(bad)
and
mov
icebp
sahf
inc
jmp
sub
xchg
movs
aam
jno
nop
scas
dec
mov
xor
popa
cmp
xor
int3
mov
push
cmp
iret
sub
add
mov
das
retf
fmul
rcl
dec
rol
push
ror
ja
aas
cli
mov
ins
loopne
xor
fcom
int3
add
xor
sar
enter
lds
movs
and
jbe
fsubr
je
cmc
iret
push
jl
(bad)
jecxz
mov
stos
ret
test
outs
cli
cmp
ss
in
and
ss
pop
mov
add
test
cli
jne
sub
stos
imul
xor
jmp
(bad)
(bad)
aas
(bad)
pusha
(bad)
cmps
repnz
mov
and
pop
das
mov
add
movs
cmps
inc
in
pop
test
aas
cli
dec
in
sbb
mov
pusha
leave
and
repz
adc
data16
push
mov
gs
les
cmps
add
adc
mov
stos
rcl
push
mov
loop
and
adc
outs
or
dec
jne
fcom
ss
mov
inc
cmp
in
inc
or
xor
ss
mov
mov
pop
and
call
rcl
es
pop
in
in
mov
out
jae
mov
shr
mov
(bad)
in
sbb
push
(bad)
jmp
add
mov
mov
loope
mov
pop
mov
(bad)
inc
pop
pop
sub
fdiv
pop
les
xchg
pop
jne
sub
es
call
movs
cld
jns
jnp
and
add
imul
sub
jl
cmp
jbe
sub
sbb
in
out
rcl
clc
int
pop
push
pop
ins
cwde
les
dec
test
retf
xchg
inc
repnz
shl
push
data16
retf
lods
into
loopne
ror
es
jbe
je
test
adc
lock
loope
imul
imul
pop
ins
imul
xor
enter
test
sbb
test
pop
aas
cmp
sub
pusha
enter
sub
xchg
clc
dec
inc
in
push
or
rol
imul
add
sbb
rcl
out
shl
pop
add
xor
rcl
lock
fstp
mov
into
cwde
push
mov
fdivr
inc
jae
inc
or
inc
mov
inc
sub
(bad)
div
mov
mov
sbb
jmp
sar
and
es
xor
rol
icebp
mov
xlat
jmp
mov
sub
pop
inc
pop
sub
popf
cld
push
gs
adc
mov
ret
xchg
lods
in
lea
es
pusha
pop
out
sub
inc
xor
loope
push
mov
mov
and
clc
mov
mul
sbb
mov
mov
loope
sbb
lock
shl
ffree
jmp
xor
leave
push
mov
push
(bad)
lods
mov
shl
xor
leave
test
jnp
sti
mov
js
test
add
mov
push
mov
leave
cmp
data16
jne
pusha
mov
push
cmp
jne
sahf
jno
dec
cs
retf
in
xchg
add
je
add
fist
mov
cld
mov
ins
(bad)
ja
push
mov
dec
dec
sub
in
push
and
test
sub
icebp
imul
inc
mov
fisttp
int3
xchg
test
mov
jp
mov
ret
fstp
xchg
adc
push
retf
out
sub
push
aam
sub
add
or
and
stos
xor
sub
push
cmp
jnp
dec
and
and
sahf
dec
loopne
mov
mov
loop
fild
adc
pusha
pop
rcr
push
add
xchg
xchg
cli
outs
push
ror
pop
ds
clc
mov
in
mov
jnp
pop
loopne
out
call
(bad)
push
sbb
call
jno
mov
push
ret
shl
movs
fld
test
rcr
arpl
mov
jl
aaa
icebp
adc
mov
icebp
aaa
push
add
sbb
mov
mov
dec
stos
jo
mov
bound
outs
mov
(bad)
fmul
call
xchg
mov
das
lods
jl
adc
(bad)
cmp
mov
sbb
fild
call
lea
(bad)
into
adc
mov
jae
scas
outs
lods
push
cmp
add
and
and
mov
cmp
or
mov
or
(bad)
cmc
xor
dec
popa
shr
fstp
cmc
pushf
in
mov
popf
cld
inc
xchg
xchg
and
cmps
jnp
into
mov
repz
cmp
aad
loop
gs
xchg
stos
inc
jge
cmp
scas
aam
push
xor
scas
scas
mov
mov
xchg
mov
loopne
in
test
(bad)
adc
iret
xor
or
add
jbe
xor
loope
mov
xchg
mov
sub
add
mov
dec
ret
lods
inc
int
loop
mov
inc
jmp
out
and
aaa
scas
rcr
mov
xlat
imul
or
dec
sub
dec
inc
push
popf
bound
xor
(bad)
mov
and
cmc
xchg
add
mov
push
jmp
dec
test
or
idiv
int
sahf
pop
sahf
xor
or
lock
jp
add
nop
inc
lds
dec
cmp
scas
mov
sub
xor
push
(bad)
je
pop
xchg
push
push
into
push
push
das
outs
push
sar
add
bound
das
ret
addr16
pop
iret
pop
mov
push
test
or
pop
push
addr16
push
test
sahf
adc
sub
inc
add
sub
std
scas
out
pop
out
sub
je
loop
out
add
pop
lods
ret
dec
ficomp
sahf
sbb
cdq
push
aam
fimul
ror
dec
dec
ret
sbb
scas
and
xchg
popf
ds
jge
adc
sbb
mov
int
mov
jle
and
fadd
jmp
xchg
jbe
jnp
or
fcmove
xor
mov
ja
and
xlat
ss
mov
lods
pusha
and
inc
mov
es
xor
mov
jg
mov
mov
bound
push
sub
dec
sbb
dec
mov
mov
add
cmc
jge
pusha
cmp
sahf
adc
imul
pop
arpl
jle
nop
rcr
jmp
(bad)
push
xor
iret
mov
mov
in
adc
rcr
xor
repz
retf
hlt
dec
push
ja
mov
aad
cmp
cdq
dec
inc
xlat
dec
mov
jge
rcl
push
imul
sbb
jmp
xchg
xlat
push
push
mov
add
inc
jo
mov
adc
dec
daa
push
or
and
adc
xchg
movs
bound
leave
jmp
dec
jb
shl
dec
fcmovnb
call
cli
mov
in
rcr
imul
loopne
rcl
inc
or
retf
jp
bound
xor
ins
cs
enter
movs
push
test
mov
in
or
sub
fistp
add
xchg
dec
or
shl
sub
frstor
fisub
not
add
loopne
cmps
ins
push
add
div
je
jae
(bad)
les
jmp
bnd
loop
xchg
rcr
pop
lock
pop
xor
loop
add
adc
jl
ja
leave
(bad)
test
jg
dec
out
popa
scas
sub
rol
imul
movs
mov
mov
in
and
cmps
inc
ss
jge
nop
xchg
bound
inc
xchg
rcr
mov
push
inc
sbb
dec
mov
lds
sub
out
lods
ds
ja
in
out
or
jl
inc
call
sbb
lock
dec
sbb
dec
int3
clc
and
loope
in
or
lods
outs
or
sbb
outs
mov
stos
sbb
(bad)
loope
xor
add
cwde
outs
mov
adc
mov
lahf
dec
dec
movs
inc
xchg
shl
in
adc
push
sbb
cmp
leave
jecxz
stc
push
mov
movs
xchg
xor
xor
scas
cld
jmp
mov
(bad)
or
ins
les
fst
cld
xchg
xchg
ja
(bad)
pop
movs
mov
jl
mov
lds
je
mov
add
stos
mov
nop
adc
xchg
lods
cwde
jno
(bad)
fadd
popa
jl
push
jnp
push
adc
in
jne
and
sbb
sub
mov
stc
dec
push
xchg
call
loope
pop
sub
pusha
repnz
sbb
iret
jae
sbb
mov
push
hlt
jp
rcr
inc
mov
adc
outs
and
pop
and
mul
xor
jno
frstor
cmp
ret
out
pop
push
push
dec
xor
ror
test
adc
and
sbb
cld
lods
sbb
sbb
mov
pop
outs
mov
mov
adc
mov
(bad)
retf
movs
jb
loopne
ss
cwde
add
adc
inc
sbb
cwde
or
mov
retf
mov
pop
push
add
push
jae
pop
aad
sbb
jl
call
arpl
jnp
fsub
pop
test
mov
dec
mov
jbe
movs
imul
xchg
retf
ss
aad
inc
cmp
shl
xchg
popa
inc
mov
lahf
sub
es
pop
dec
dec
sbb
pop
sbb
cs
pop
movs
mov
jge
(bad)
in
cld
sub
pcmpeqd
cmps
push
pop
adc
mov
mov
inc
enter
sub
mov
sbb
mov
jbe
mov
mov
sti
cmp
sub
ror
mov
add
inc
into
jnp
cmp
and
pop
mov
dec
cdq
xchg
data16
dec
fcmovnu
pop
fdivr
xchg
in
push
shl
add
scas
and
or
xor
pop
and
jmp
mov
jno
add
js
stos
call
retf
call
jmp
ret
add
retf
movs
lock
imul
lea
(bad)
fcomp
xor
fstp
sbb
push
xor
cld
outs
stos
mov
cmp
push
push
cmp
jg
xchg
test
cmp
or
inc
or
pop
sbb
daa
rcr
or
cmp
movs
mov
pop
mov
cmp
jmp
mov
sbb
ffreep
lahf
mov
sar
mov
icebp
sub
int
mov
rol
stos
gs
add
jne
inc
mov
loopne
add
mov
dec
clc
push
(bad)
test
xor
add
cmp
jp
movs
js
rcl
xchg
not
mov
bound
pop
cli
sahf
sub
cld
mov
cmp
lahf
addr16
sbb
and
dec
int
neg
inc
lahf
repz
jle
jb
aad
cmp
or
jecxz
inc
lahf
mov
xor
and
add
lds
mov
daa
pop
inc
popf
mov
(bad)
ficomp
(bad)
pop
inc
fisubr
pop
dec
lock
es
fimul
dec
cs
je
pop
sub
movs
xchg
mov
stc
sahf
mov
jbe
mov
imul
int
mov
das
mov
shl
mov
bound
xchg
outs
jg
mov
push
mov
xchg
(bad)
call
orps
out
pusha
retf
xor
out
and
pop
mov
test
mul
fidiv
fisttp
cmp
push
in
es
add
ss
aas
mov
add
rcl
xor
test
or
es
mov
loopne
icebp
outs
ror
jecxz
jbe
jne
and
push
outs
in
inc
xchg
pop
and
inc
push
dec
test
scas
cli
fprem1
(bad)
mov
adc
jmp
call
adc
mov
dec
subps
or
cli
pop
dec
push
sbb
shr
push
push
fdivp
xor
cmp
aam
lds
push
sahf
inc
cmp
adc
enter
adc
push
cld
(bad)
push
aaa
cmps
rcl
les
adc
test
or
sub
(bad)
inc
adc
into
sbb
mov
sub
jb
jecxz
nop
fiadd
and
cmp
sub
adc
rcl
push
or
sbb
cmps
lock
(bad)
es
jbe
mov
push
add
sbb
dec
push
pop
ins
(bad)
xchg
ret
scas
ja
and
or
sbb
push
jne
cli
mov
scas
mov
xchg
xchg
dec
adc
mov
popf
mov
dec
arpl
pop
jg
(bad)
les
mov
mov
inc
push
xor
and
sub
sbb
dec
mov
xchg
mov
xchg
lods
push
xor
addr16
push
loopne
mov
add
or
jge
das
repz
sub
fidivr
inc
in
int3
stos
push
lods
clc
pop
or
add
jne
cmps
xchg
test
sbb
mov
lahf
inc
dec
call
xor
fbld
retf
adc
fild
loop
jo
sub
lods
sub
cmp
mov
jmp
cmp
cmp
jg
icebp
mov
popf
mov
idiv
cs
mov
stos
push
pop
add
cmps
jns
sub
scas
dec
ss
jbe
cmps
mov
push
repnz
out
inc
fild
mov
xchg
mov
push
(bad)
jmp
and
mov
inc
hlt
mov
nop
cmps
jg
fnstenv
or
xchg
mov
loopne
sar
int
dec
pop
push
pop
mov
jmp
clc
xchg
fiadd
outs
popf
fwait
pop
dec
(bad)
adc
cmp
pop
sbb
adc
(bad)
xchg
jmp
sbb
movs
push
inc
cmc
test
sub
and
mov
pop
push
repz
stos
lahf
push
in
ret
mov
jns
test
sbb
aam
jg
int
push
popf
loop
fcom
mov
add
xchg
outs
xchg
ja
rol
cld
das
iret
xor
out
std
mov
movs
cmps
dec
dec
imul
cdq
pop
fstp
sbb
imul
das
jge
(bad)
xlat
in
adc
daa
xchg
(bad)
xlat
in
cmp
xchg
pop
fldz
es
pop
xor
vpmullw
xchg
xchg
jge
sub
jg
stc
cmp
xchg
out
fisttp
inc
and
call
or
mov
mov
inc
retf
in
aad
mov
inc
nop
ins
fcom
mov
cmp
push
(bad)
pusha
rcr
jne
dec
loope
pop
aaa
shl
jmp
std
pop
push
push
mov
into
jb
std
adc
pop
jle
sub
sub
pop
or
ins
sbb
add
mov
popa
fbstp
fistp
inc
emms
fild
(bad)
int3
lahf
mov
cmp
icebp
pop
cmp
(bad)
iret
xchg
xchg
pop
or
mov
in
loopne
cmp
cmp
loop
xchg
shl
jne
pusha
sub
mov
in
xchg
xchg
gs
sbb
call
shl
mov
pop
mov
sub
test
outs
popa
fidivr
dec
mov
sbb
test
cmp
adc
lods
pop
movs
sti
sub
stos
push
inc
or
mov
push
out
pop
push
aaa
pushf
outs
daa
push
mov
fidivr
and
dec
fwait
push
jns
and
sub
std
sub
das
lahf
bound
jge
jnp
aas
imul
xor
imul
in
mov
arpl
sbb
fldpi
test
sub
ret
cmp
ins
pusha
xchg
popf
xlat
fdiv
add
ins
ss
pop
ins
mov
xor
and
lds
cmps
lock
sbb
push
cli
imul
inc
sbb
cmp
jl
xchg
cmps
mov
(bad)
sti
sub
bound
imul
sub
int3
shr
jbe
pop
jae
xor
sub
lea
retw
xchg
push
fsub
xor
clc
mov
hlt
mov
(bad)
loope
or
push
les
dec
mov
xor
add
aam
lods
out
leave
enter
jo
or
and
outs
test
(bad)
call
les
xlat
adc
ja
xchg
pop
fidiv
je
gs
dec
mov
stc
out
mov
loop
xchg
xor
jmp
xchg
push
add
enter
aaa
ret
retf
daa
jmp
pop
mov
into
or
retf
jae
ja
ror
(bad)
scas
dec
(bad)
outs
mov
mov
fisub
mov
or
xchg
adc
leave
repnz
adc
push
scas
pop
aaa
xchg
test
mov
add
out
out
in
dec
cld
mov
or
sar
ret
rcl
mov
and
add
xor
mov
jbe
outs
movs
add
and
enter
not
test
addr16
lea
popa
add
mov
retf
adc
cmp
je
scas
cmp
xor
imul
test
adc
and
shl
mov
adc
sub
std
mov
dec
cmp
cmp
js
jle
scas
sub
cmp
(bad)
mov
test
stos
adc
mov
pop
call
fwait
mov
cli
push
fwait
test
call
loopne
mov
or
fs
icebp
cmp
rcl
fs
call
ret
pop
into
push
pusha
mov
mov
push
jnp
cmc
(bad)
aas
add
popa
sbb
inc
cmp
stos
push
aam
push
popf
pop
inc
adc
sbb
mov
xchg
dec
xchg
int
adc
pop
push
sbb
test
out
popf
pop
pop
mov
fdivrp
or
mov
inc
and
xor
in
mov
xor
icebp
mov
ret
xor
das
in
std
push
into
adc
mov
retf
and
lds
pop
cmp
aad
cs
aam
stos
loope
push
and
add
or
mov
std
out
mov
test
ret
mov
jo
pop
mov
push
data16
jecxz
or
test
(bad)
sti
jae
mov
jo
bnd
cmp
movs
push
dec
fcomp
ja
fs
test
adc
movs
ret
retf
loopne
push
cmps
movs
pusha
inc
push
fcom
mov
arpl
and
imul
mov
into
xor
inc
add
pop
or
inc
stc
popa
into
jbe
fiadd
lock
inc
or
mov
pusha
cmp
push
and
addr16
xor
mov
dec
loopne
sahf
pop
stos
push
dec
pop
mov
mov
repz
sub
inc
jg
out
and
les
push
or
inc
inc
iret
(bad)
sbb
inc
mov
mov
loopne
out
and
mov
dec
popf
dec
pop
outs
pop
(bad)
xor
and
cmc
rcl
int
dec
dec
xchg
xor
not
cmp
out
pop
jle
push
lea
test
lds
outs
mov
test
xor
std
repnz
pop
pop
pushf
or
pusha
ret
test
sahf
pminsw
in
adc
outs
leave
mov
es
mov
out
pop
icebp
arpl
sub
lds
cmps
mov
cmp
xchg
stc
clc
sbb
xor
popa
aam
adc
jecxz
ror
mov
or
popf
dec
imul
sbb
lea
out
xchg
or
jns
mov
out
mov
sub
test
aaa
rcr
retf
fnstsw
add
jns
and
rcl
repz
inc
pop
test
push
jp
fs
dec
(bad)
adc
push
inc
dec
ins
mov
and
push
sti
ins
mov
cmp
pusha
int3
inc
add
xchg
scas
mov
repnz
out
sbb
add
ror
jo
imul
(bad)
xchg
lods
imul
sbb
jp
jne
pop
cmp
xor
and
stc
les
cmp
sahf
popf
mov
in
pop
mov
fwait
test
jecxz
out
fbld
cmp
or
(bad)
mov
mov
loop
scas
mov
or
push
mov
mov
add
outs
out
or
push
and
mov
xchg
cld
or
mov
jne
add
div
(bad)
fdivr
ds
sbb
xlat
push
xor
(bad)
jmp
adc
gs
and
mov
adc
mov
sub
ret
inc
scas
adc
pop
jae
fisttp
jb
push
pop
sahf
jns
cwde
xor
ins
mov
mov
pop
mov
jae
popf
push
clc
out
les
mov
mov
jno
enter
call
add
int3
jns
test
ja
ret
icebp
mov
xor
stc
lgs
shl
js
xchg
in
cwde
jbe
push
push
mov
cmp
or
ffree
inc
cwde
xor
adc
mov
int3
inc
mov
mov
push
out
cwde
xor
call
lea
shr
sbb
xor
cmp
mov
xchg
(bad)
sahf
jl
popf
push
loopne
cld
fwait
sub
clc
nop
les
movs
mov
jl
lds
lods
push
fdivr
pusha
push
push
out
out
loop
pop
add
sahf
mov
push
pop
sub
js
xor
lahf
cld
nop
xchg
jl
jle
icebp
arpl
mov
xor
daa
cmp
jmp
dec
outs
es
bound
adc
pop
ret
jae
pushf
add
fs
clc
loop
jmp
cli
test
fild
or
jle
and
cmp
std
pop
mov
and
movs
inc
or
push
push
fsub
(bad)
cmc
sub
pop
test
dec
mov
xor
aaa
(bad)
shl
sbb
xor
shl
xor
fs
jmp
movs
xlat
xor
int
mov
cmp
mov
mov
lods
and
(bad)
addr16
test
cmp
das
dec
push
shr
cmps
mov
lods
test
iret
add
fcomp
lea
and
test
cmp
sub
into
cmp
(bad)
push
dec
inc
push
add
bound
pop
inc
cwde
add
mov
cwde
out
outs
aas
pop
pop
bound
xor
int
clc
rol
mov
ds
rol
or
fcom
xor
cmp
mov
adc
mov
dec
jns
xlat
mov
xor
and
adc
cmc
push
or
sub
push
in
pushf
out
stc
ins
and
loop
xor
inc
mov
adc
in
add
sub
stos
cmps
cmp
mov
jp
out
aas
std
fsub
lds
cli
outs
stos
or
xor
adc
or
cdq
ja
or
(bad)
pop
cwde
aas
(bad)
jmp
jae
mov
push
stos
gs
iret
stos
xor
pop
test
sbb
(bad)
adc
add
inc
inc
inc
inc
jnp
mov
fwait
sub
fxch
add
mov
inc
mov
in
div
push
xchg
ins
jmp
aaa
outs
jbe
pop
call
xlat
jns
test
adc
push
and
push
loopne
inc
jne
inc
das
cmp
nop
fnsave
ret
jl
and
mov
push
adc
pop
jmp
sbb
sar
mov
jmp
cdq
mov
loopne
fs
mov
idiv
mov
fdivr
sub
and
mov
leave
repz
(bad)
mov
jle
rcr
xor
sbb
dec
mov
mov
and
clc
fimul
push
(bad)
call
aas
adc
or
sub
or
push
sub
xor
mov
add
mov
sub
ficom
jle
or
ja
mov
cld
mov
jne
xchg
jmp
xchg
push
xchg
xor
leave
push
cmp
inc
jo
cmps
sbb
scas
call
ins
neg
jnp
int
xor
cmc
popa
movs
sahf
lds
cs
imul
enter
dec
sub
mov
fcomp
mov
(bad)
in
pop
lock
std
into
adc
mov
add
lea
or
adc
call
inc
test
popf
out
push
sub
jmp
push
rcr
loope
imul
mov
imul
repz
repz
cmp
sti
call
or
dec
sahf
scas
jge
fistp
mov
scas
add
dec
int3
push
mov
xchg
test
pop
enter
mov
xor
shl
jl
push
inc
pop
mov
and
pop
mov
dec
sti
mov
je
pop
lods
mov
fmul
clc
push
pushf
inc
pop
loope
out
and
dec
add
lahf
jb
adc
xchg
mov
and
dec
xchg
test
fwait
pop
xchg
fs
or
xor
mov
(bad)
sbb
int3
jo
xchg
idiv
mov
scas
jnp
mov
sti
adc
or
mov
outs
inc
in
mov
bound
xor
repz
popf
repz
dec
push
jg
fisub
pop
loop
mov
cmps
je
in
adc
fimul
aas
test
lock
adc
repnz
dec
es
jnp
das
out
push
inc
add
rol
repz
sbb
(bad)
loopne
sbb
mov
xor
add
mov
or
mov
retf
mov
cdq
push
pop
cmc
es
push
cmp
bound
mov
push
scas
mov
inc
jnp
or
out
xor
xchg
fisubr
mov
jge
test
mov
pop
mov
jmp
inc
call
mov
add
jbe
mov
pusha
je
pop
jg
sub
dec
fisubr
cmp
cmp
xlat
dec
cmp
jp
xchg
ds
pop
jmp
stos
clc
sbb
call
or
leave
cmp
pop
(bad)
push
push
outs
pop
fnstenv
stc
in
mov
sbb
pop
mov
sub
pop
push
fucomip
dec
stos
imul
test
inc
loope
arpl
shl
jl
lods
cmc
lea
imul
jge
call
cs
push
sbb
outs
adc
push
frstor
fcmovu
xchg
pusha
sbb
repz
psllq
push
mov
imul
push
aaa
fs
sbb
es
cld
sti
jmp
stos
in
out
sahf
pop
inc
sbb
mov
shr
test
push
xor
ds
mov
mov
sbb
cmps
cwde
stc
bound
addr16
test
pop
dec
inc
and
xchg
mov
jo
mov
sbb
aas
fisubr
les
inc
and
push
pop
test
sub
je
arpl
lock
sub
inc
fisub
inc
jnp
mov
lods
mov
out
push
and
jg
arpl
xor
inc
int3
or
pushf
adc
in
xor
arpl
outs
lods
fst
sbb
shr
enter
int3
les
popf
int3
fsubr
jp
imul
add
fdiv
gs
loopne
and
mov
mov
adc
push
pop
and
and
inc
push
fstp
mov
push
or
and
ss
rcl
mov
not
mov
gs
xchg
sbb
sub
popa
adc
pusha
js
and
ret
jne
add
arpl
xchg
jmp
sub
lods
ds
jmp
div
xor
outs
dec
nop
scas
inc
jl
jp
imul
and
and
aad
out
out
popf
jecxz
cmp
rcl
bound
imul
and
je
js
pop
retf
xor
imul
xchg
mov
mov
xlat
jno
cmc
push
les
stos
sub
sbb
fwait
cmp
je
ss
jne
sbb
cmp
ins
ret
mov
daa
or
xlat
and
popa
(bad)
outs
movs
sbb
cmp
cs
push
js
pop
or
xchg
cmp
mov
push
dec
dec
mov
xor
dec
mov
cmp
mov
push
push
mov
(bad)
mov
cmp
in
div
push
ins
xor
push
hlt
xor
ret
sub
out
in
jo
pop
mov
xor
xor
inc
mov
dec
adc
test
dec
scas
pusha
pusha
lods
push
inc
xor
push
jp
push
add
mov
and
dec
in
loop
js
mov
mov
jl
sub
mov
jo
and
fcomp
mov
arpl
call
test
xchg
adc
test
ss
pop
jnp
addr16
xchg
jle
cmps
jno
jp
push
or
mov
mov
pop
shl
inc
pusha
adc
jmp
mov
stos
arpl
and
lock
cmps
jne
outs
(bad)
lea
pop
out
sbb
jle
stc
dec
lods
or
sub
mov
test
jl
pop
retf
jl
lods
fucomip
or
fadd
xlat
mov
mov
jg
inc
inc
mov
(bad)
xchg
sub
jecxz
mov
xchg
and
mov
pusha
or
in
in
mov
mov
lahf
aad
(bad)
sub
jb
js
or
jle
in
imul
retf
sbb
jnp
movs
adc
inc
ja
xor
loope
loope
and
popf
jo
mov
pushf
add
and
jno
pop
add
mov
pushf
jo
arpl
test
arpl
das
cmps
cs
rep
fs
movs
shl
outs
jnp
test
mov
sbb
adc
push
fadd
test
and
mov
fadd
push
icebp
pop
movs
imul
and
sub
in
shl
xor
jbe
fnsave
mov
jmp
lods
js
sahf
jp
stc
movs
push
loope
mov
pop
sub
(bad)
mov
fldcw
scas
stc
jns
cld
pusha
jb
js
icebp
or
ret
ret
inc
sbb
mov
lea
ret
push
xor
jle
js
cmp
sbb
push
or
cmps
add
mov
or
jb
ret
je
repnz
inc
sub
cmp
or
add
xchg
mov
cs
addr16
pop
pop
add
rcr
repnz
adc
inc
cld
(bad)
mov
cmps
lods
dec
add
fcomp
cmp
jne
pop
lea
mov
xchg
(bad)
mov
dec
fxch
adc
bound
pop
push
retf
(bad)
xchg
cs
pop
rol
or
push
jae
dec
inc
mov
test
pop
mov
scas
mov
sub
scas
dec
lods
mov
test
fistp
ss
outs
xchg
fucom
pushf
scas
push
push
pop
push
jl
in
xor
sub
sub
sti
push
adc
xor
outs
or
mov
mov
push
pop
inc
ficomp
cli
(bad)
push
repnz
and
mov
in
push
sbb
adc
stos
jne
(bad)
fld
stos
add
(bad)
push
lahf
dec
mov
daa
pusha
add
add
mov
sub
and
leave
mov
lods
push
retf
or
add
sbb
retf
repnz
clc
push
push
mov
and
add
hlt
imul
xchg
xchg
xchg
cmp
jg
inc
push
inc
jmp
dec
scas
mov
jbe
dec
jmp
out
lods
and
or
mov
leave
retf
mov
test
push
jne
outs
mov
pop
sbb
inc
rcr
xchg
jo
es
aaa
cli
and
inc
or
lods
inc
mov
mov
inc
mov
pop
mov
test
push
add
out
jmp
xchg
inc
and
mov
ret
aam
or
cs
hlt
mul
cwde
mov
lea
mov
pop
dec
in
in
jecxz
cmp
test
jmp
loope
repnz
mov
stc
mov
mov
test
test
push
pop
inc
addr16
cmps
mov
push
mov
xor
xor
xchg
cmp
mov
lock
scas
out
clc
std
mov
and
mov
or
xchg
push
stos
bound
mov
jno
cmp
les
mov
xchg
retf
xor
fstp
mov
(bad)
jl
loop
mov
leave
dec
mov
sbb
(bad)
or
rol
clc
and
xor
(bad)
adc
ja
out
dec
test
cli
shr
pop
xor
imul
mov
dec
(bad)
movs
add
or
adc
das
add
and
lahf
stc
mov
scas
sbb
int
outs
stos
stos
jne
mov
push
(bad)
fnstsw
jbe
or
retf
inc
xor
pop
addr16
fnstenv
mov
dec
mov
inc
enter
daa
ds
cmp
fiadd
xchg
ds
vucomisd
mov
fmul
loop
cmp
adc
call
outs
out
fstp
push
mov
std
mov
push
push
and
fldenv
arpl
cmp
jne
sbb
pop
push
movs
jl
in
dec
stos
mov
lods
sub
loopne
or
push
and
imul
push
sbb
popa
or
movs
inc
add
sahf
test
ffree
jmp
leave
jmp
mov
ja
cmps
into
call
inc
push
xchg
inc
imul
push
call
fnsave
stos
pop
iret
mov
ja
or
jge
dec
fimul
jno
lds
or
outs
imul
adc
je
pandn
xchg
fadd
and
into
out
pushf
lock
jp
push
fnstcw
imul
xchg
cli
pop
xchg
xor
pop
clc
iret
hlt
call
loope
mov
mov
push
mov
cmp
mov
xor
test
mov
imul
sbb
movs
xor
push
addr16
dec
movs
leave
xchg
cmp
cmps
or
stos
jne
xchg
imul
stos
push
and
ret
sbb
fwait
xor
(bad)
imul
and
fucomip
mov
adc
sahf
idiv
push
xchg
in
fdivr
add
xchg
jge
mov
movzx
clc
inc
fst
or
imul
sub
scas
adc
scas
(bad)
ds
mov
jl
pop
sbb
jge
das
mov
and
out
dec
pop
xchg
imul
sbb
mov
das
int
push
gs
sbb
dec
dec
repz
test
mov
mov
pop
scas
into
repz
fcomp
ret
test
test
pop
xor
leave
pop
sub
or
jns
xchg
push
inc
inc
faddp
mov
imul
jns
(bad)
jbe
or
mov
ror
xor
fistp
test
ins
xchg
pop
nop
jg
add
in
sbb
mov
fcomi
mov
add
(bad)
fst
xchg
cmps
jp
mov
adc
jg
sbb
and
push
out
mov
cmp
jmp
ss
sbb
ret
mov
pop
mov
push
retf
sub
pop
and
std
jne
outs
push
inc
sbb
sub
repz
bound
lds
cmp
sbb
lahf
dec
adc
and
xor
aas
cmp
aad
addr16
aas
jmp
push
or
jne
loop
xrelease
fld
arpl
or
xchg
(bad)
dec
sub
and
adc
jb
pusha
leave
mov
jp
dec
adc
call
mov
mov
cmp
jns
test
addr16
aam
inc
or
xchg
xor
xchg
push
xor
pop
push
push
mov
add
sub
aas
mov
xchg
test
and
or
mov
inc
xchg
lods
ret
cmps
mov
add
jne
out
mov
xchg
je
enter
push
sbb
add
and
ins
movs
xor
test
dec
sar
or
sahf
sub
sub
sbb
push
call
aas
push
push
mov
push
int3
or
icebp
or
sbb
daa
push
fild
std
push
cmc
mov
push
mov
in
mov
cmp
ror
adc
imul
ror
ds
frstor
ja
mov
scas
mov
lea
ins
xchg
jne
pop
imul
mov
pop
rcr
fdiv
mov
xor
stos
pop
aas
add
(bad)
xchg
mov
xchg
inc
icebp
push
sbb
mov
rcl
mov
shr
dec
add
jmp
cmps
jmp
lods
jecxz
aas
out
shl
je
push
ja
cmps
mov
call
aam
iret
jne
dec
add
cmp
push
mov
lea
jmp
jo
movs
sub
mov
jne
mov
xor
adc
es
enter
ror
mov
cmps
inc
clc
icebp
in
add
cmp
sub
shl
aaa
add
out
add
call
jmp
js
cmp
lea
retf
ins
lea
cmp
(bad)
fnsave
cmc
cli
push
xchg
stos
push
xor
daa
rcr
popf
add
pushf
(bad)
scas
retf
adc
sbb
fimul
jns
jmp
mov
adc
retf
jle
fs
loop
retf
neg
push
or
ret
scas
dec
mov
aaa
push
push
fadd
push
shrd
in
jp
loope
mov
pop
inc
stos
or
xor
cmps
retf
in
repz
out
call
ja
push
inc
mov
retf
retf
std
fadd
lods
xor
repnz
repnz
scas
mov
daa
fist
enter
ret
stos
cwde
jg
mov
mov
mov
shl
pop
add
mov
dec
jo
bound
fimul
out
inc
fadd
sbb
ins
stos
xchg
call
xchg
aam
mov
test
btc
xor
(bad)
adc
iret
scas
or
rcr
mov
cmp
loopne
push
pop
xchg
pop
pop
or
cmp
push
and
rcl
stos
jg
outs
out
push
scas
repnz
jmp
shl
cmp
sbb
ss
xchg
mov
inc
push
sub
fld
test
lods
or
stc
adc
jecxz
jmp
enter
cmp
pop
jb
adc
dec
outs
fmul
cmc
pop
sbb
dec
cmps
test
mov
test
jae
mov
jge
pop
popa
popa
push
arpl
inc
(bad)
mov
xchg
pop
and
iret
lock
cwde
popf
jbe
sbb
mov
test
push
or
jmp
jp
mov
push
push
mov
sbb
cmp
and
fsub
pushf
xchg
or
mov
nop
imul
sahf
jo
std
lock
aam
ret
push
jmp
push
fldcw
test
int3
pusha
call
ss
adc
test
xor
jmp
push
sbb
xchg
out
push
(bad)
cli
les
out
xor
icebp
mov
imul
mov
es
mov
pop
retf
or
inc
ins
mov
mov
jmp
xchg
or
movs
pop
stos
push
mov
or
and
(bad)
mov
push
jl
pop
dec
xlat
inc
sbb
xchg
loopne
test
lock
sti
test
mov
push
sbb
imul
in
lock
mov
or
outs
fisttp
or
xor
mov
mov
xchg
mov
and
mov
loopne
jg
dec
sbb
out
mov
sbb
cmp
cmps
aaa
arpl
dec
push
jp
adc
cmp
sti
loop
fs
or
inc
cld
retf
mov
xlat
and
movs
jae
xchg
jecxz
or
ret
pop
jb
cli
rcl
nop
xor
jmp
fucom
sbb
xor
xchg
ret
adc
jp
mov
out
jne
cmp
mov
fisttp
dec
cmp
rol
out
nop
rcr
sbb
shr
mov
mov
or
xlat
arpl
xchg
xchg
iret
jo
add
pop
push
add
sahf
or
fsubr
scas
or
xor
out
pop
or
ins
cld
or
sbb
cmp
jle
es
in
shl
call
cmps
icebp
jb
pop
and
std
mov
mov
jle
push
jae
add
pop
retf
retf
jns
mov
jmp
and
sub
out
sub
test
and
mov
pop
or
not
mov
arpl
loop
jmp
(bad)
jmp
or
add
(bad)
movs
and
inc
(bad)
mov
jbe
adc
pusha
out
mov
xor
sub
enter
outs
mov
clc
add
(bad)
(bad)
(bad)
sub
imul
add
nop
test
fwait
cmp
aas
sbb
fwait
xor
sbb
xchg
scas
mov
sar
in
mov
and
xchg
mov
popa
fld
popa
pop
and
pushf
loope
dec
loopne
popf
fnsave
sub
rol
push
ret
xchg
test
jb
or
dec
and
lods
sub
pop
cmp
loope
push
retf
adc
(bad)
xchg
or
mov
ret
pop
enter
fcmovbe
add
mov
jbe
mov
shr
mov
mov
retf
jns
fadd
int3
stos
mov
and
jmp
call
out
test
ja
xor
not
rol
fcomp
retf
xor
cmps
in
test
dec
rcl
jno
fsub
add
cli
hlt
mov
mov
ss
pop
adc
mov
leave
scas
sub
push
mov
mov
shl
data16
push
dec
inc
mov
(bad)
cld
loop
inc
inc
add
js
and
cwde
test
mov
add
jne
adc
inc
xor
or
xchg
inc
and
sar
aam
and
xor
sub
ror
mov
add
ins
repz
push
adc
sbb
jmp
dec
fldcw
arpl
and
mov
and
and
pushf
sti
fcomip
arpl
or
sti
mov
popa
sub
out
push
sub
inc
dec
dec
or
sub
xor
or
mov
pop
dec
and
and
xlat
dec
(bad)
or
outs
cdq
xchg
sbb
fisubr
fsubr
in
int3
ja
aam
sar
fisub
jmp
push
(bad)
push
dec
and
ins
cmp
sbb
out
daa
mov
xchg
rep
rcl
add
and
test
sub
add
add
pop
jecxz
sub
and
cs
imul
iret
cmp
jg
xchg
or
dec
out
sub
pushf
daa
cld
mov
add
mov
add
cmps
sub
fldenv
mov
pop
pop
into
sub
test
scas
add
mov
add
outs
inc
imul
out
fisubr
mov
dec
cmp
cmp
(bad)
pop
or
ins
pop
mov
pushf
pop
mov
repnz
ret
aas
or
mov
pop
cmp
push
push
fst
popa
ins
inc
mov
mov
std
xchg
push
and
and
cmp
aad
shl
lock
or
inc
ja
pop
test
sbb
jnp
jns
push
inc
lock
lods
in
mov
outs
xchg
jnp
dec
rol
mov
pusha
repnz
sbb
mov
and
mov
jecxz
sbb
mov
xlat
loop
outs
sahf
pop
add
mov
xchg
aad
dec
jge
call
(bad)
daa
adc
and
les
and
movs
add
push
ss
adc
nop
xlat
mov
sbb
push
sbb
ret
sbb
sub
mov
dec
cs
mov
jae
fisubr
pop
sub
jne
sbb
cli
aad
popa
(bad)
rcr
adc
mov
call
cs
xor
cld
fsub
lock
ss
jmp
mov
(bad)
js
dec
mov
call
in
out
pusha
mov
fisubr
test
jbe
mov
ins
push
mov
cwde
push
mov
movs
pop
push
loope
pop
sub
inc
jnp
adc
jecxz
inc
outs
imul
jne
arpl
xor
xor
dec
xor
add
repnz
or
xchg
repz
xor
mov
mov
jnp
leave
pop
fcmovnbe
out
jp
mov
test
pop
or
push
gs
into
fisub
mov
leave
gs
mov
pushf
xor
xchg
inc
dec
fldenv
add
xor
mov
loope
pop
or
mov
fistp
push
sub
sbb
mov
shr
fsub
rol
mov
xchg
in
and
dec
dec
jae
repnz
push
push
push
jecxz
add
daa
in
movs
or
fwait
icebp
adc
in
test
lahf
pop
adc
add
in
xlat
clc
and
cwde
pop
outs
jns
push
jne
sbb
jb
xchg
xlat
dec
aas
push
fdiv
ret
mov
mov
test
mov
mov
inc
adc
dec
pop
icebp
pop
dec
push
and
jae
and
push
(bad)
push
iret
mov
sub
xchg
out
arpl
pop
mov
add
jge
jmp
fld
adc
and
sub
out
loopne
add
scas
clc
pop
sbb
xchg
mov
movs
and
loop
sbb
sbb
int3
sbb
mov
xchg
cli
stc
lds
stc
jmp
lds
stos
call
lds
sbb
test
bound
out
shr
outs
xor
jne
shr
test
clc
mov
scas
cmps
and
and
imul
rcl
dec
cld
mov
or
ja
fdiv
lock
es
lock
lods
mov
sbb
sbb
add
test
lock
std
leave
(bad)
test
loop
pop
in
cmp
cmp
mov
addr16
pop
xchg
mov
mov
mov
(bad)
jg
mov
aad
ss
imul
xchg
jmp
jp
mov
in
imul
(bad)
pop
mov
mov
lods
out
sub
pushf
push
vpunpckldq
mul
int3
into
xor
test
sub
jnp
sbb
jg
fisub
ins
push
aam
add
sbb
scas
sub
sbb
iret
or
(bad)
jmp
mov
mov
cmp
xchg
lds
dec
push
sub
xchg
lea
aaa
gs
push
daa
mov
in
cmps
not
pop
inc
call
stc
imul
outs
out
cwde
sbb
mul
sub
add
dec
inc
call
loopne
push
bound
adc
jmp
js
sti
cmp
daa
mov
iret
dec
ins
adc
or
leave
cld
push
pusha
fstp
dec
sub
lock
adc
lea
cli
neg
aas
in
retf
jo
es
inc
xor
pop
push
adc
(bad)
aad
pop
outs
add
std
pop
mov
jnp
jge
shl
std
xchg
add
mov
js
lods
cs
dec
lods
mov
retf
dec
xchg
in
idiv
loopne
gs
(bad)
in
neg
cmp
or
add
pop
out
add
(bad)
shl
popf
data16
jmp
inc
mov
jl
je
mov
mov
inc
lds
lea
jno
cmp
adc
not
cdq
fidiv
adc
movs
leave
dec
in
iret
popa
mov
adc
xchg
repz
xchg
test
inc
mov
fisttp
push
cwde
shl
add
test
ret
add
(bad)
in
dec
inc
shl
mov
outs
xor
aam
aas
mov
shl
out
adc
mov
inc
popf
mov
xor
pop
jo
mov
mov
clc
pop
or
(bad)
in
(bad)
dec
mov
fsubr
fbstp
adc
loope
pop
int3
jbe
or
je
shr
fld
fisttp
cmp
jmp
inc
xor
lods
lea
fld
xchg
leave
test
pop
add
mov
and
pop
xor
jle
mov
pop
fsub
cwde
les
cli
loopne
ins
xchg
xor
lahf
jno
push
adc
push
jo
cmps
retf
lea
cmp
push
and
call
outs
stc
ins
pop
clc
sahf
mov
xor
jno
xor
cmp
mov
daa
mov
jg
sbb
sbb
jae
mov
into
mov
shr
sti
inc
mov
movaps
dec
das
push
lds
js
out
and
cmc
es
or
or
mov
adc
movups
sbb
and
xchg
cmp
inc
add
adc
inc
mov
push
jns
cmp
(bad)
ins
scas
adc
and
lock
(bad)
xchg
or
xor
or
inc
xchg
mov
lds
sbb
movs
neg
test
inc
scas
jmp
xchg
pop
div
sbb
stos
dec
mov
mov
dec
imul
les
sbb
sbb
js
fild
jmp
jecxz
push
jno
aaa
jecxz
in
sbb
(bad)
(bad)
mov
dec
enter
out
or
lods
repnz
test
cmp
clc
fdivr
xchg
loope
retf
mov
jmp
or
xchg
cmp
icebp
sub
xchg
shl
leave
jle
lods
pop
fcomp
(bad)
mov
mov
inc
sub
sbb
aam
cld
dec
and
test
add
addr16
xor
push
add
(bad)
in
pusha
in
dec
inc
cli
scas
mov
pop
push
movs
lea
popa
or
jmp
dec
mov
test
inc
daa
cmp
test
repz
mov
shl
fwait
cmp
mov
popa
lahf
hlt
call
repz
push
jmp
dec
movs
xor
pop
dec
mov
rcr
sar
dec
mov
movs
loope
inc
pop
in
adc
mov
dec
fidivr
test
mov
lods
lock
xchg
pop
push
std
mov
jle
and
add
mov
js
inc
lds
in
xchg
test
mov
movs
mov
test
jns
popf
retf
lods
or
data16
or
mov
scas
ss
aas
pop
add
pop
movs
mov
mov
call
rol
mov
ds
xor
mov
mov
mov
xor
cwde
inc
add
jecxz
push
iret
inc
xor
cmc
pop
jge
imul
sbb
mov
(bad)
ficom
adc
xor
mov
sbb
xchg
inc
push
in
inc
xor
dec
fisub
repnz
inc
mov
fst
test
popw
repz
jecxz
loope
jp
cld
fidivr
add
cmp
jae
mov
outs
out
mov
repz
neg
outs
fidiv
call
add
sbb
jl
push
aaa
shl
aaa
jmp
jg
pop
imul
repz
mov
mov
out
dec
push
inc
jns
xchg
push
clc
sub
stos
sub
adc
sub
adc
imul
stos
lock
jo
(bad)
jge
push
dec
push
or
pop
mov
mov
ins
jb
sbb
pop
xchg
mov
sub
rol
mov
push
stos
(bad)
out
and
mov
pop
jns
sub
cmps
aas
js
add
repnz
push
jae
out
and
jmp
xor
pop
js
pusha
adc
aam
jb
cmp
push
sub
sar
add
(bad)
mov
fs
fiadd
sub
jecxz
daa
out
inc
jmp
add
mov
jp
push
jmp
mov
inc
or
cmp
jle
pop
sbb
dec
pusha
shl
stos
and
jmp
fnstsw
stos
fsubr
ret
add
neg
mov
push
fld
push
dec
dec
std
fild
inc
mov
adc
xlat
shl
adc
aaa
les
dec
in
adc
ss
mov
and
or
mov
arpl
pushf
iret
bound
or
ins
sti
in
int
call
jecxz
inc
jp
inc
push
lahf
dec
gs
into
lods
add
les
out
adc
enter
das
push
cmp
repz
dec
xor
mov
cmp
jo
mov
jmp
test
or
call
shr
shl
jno
cmp
scas
lds
(bad)
pusha
jl
sub
mov
rcl
clc
mov
or
push
xchg
mov
mov
and
scas
fisttp
mov
fdivr
sbb
dec
jle
cwde
xchg
mov
pop
aam
pushf
add
or
jmp
jecxz
sbb
icebp
and
mov
inc
or
cmp
in
int
outs
push
pop
sbb
or
adc
addr16
jne
or
nop
pop
aas
in
mov
or
or
or
enter
out
je
xchg
or
repnz
push
out
mov
mov
dec
push
jecxz
mov
rcr
pop
test
adc
xchg
imul
xchg
daa
push
das
iret
add
push
mov
sti
ret
loop
pop
mov
test
sub
inc
mov
out
mov
dec
mov
pop
inc
cmp
or
lock
cld
jmp
jns
push
and
pop
lock
(bad)
in
stc
mov
pop
(bad)
add
aam
pop
pop
and
fsubrp
ret
psllw
push
mov
aad
out
push
mov
fcmovnb
outs
push
mov
pop
mov
mov
add
dec
add
imul
jnp
cmp
aas
push
rcr
stc
arpl
and
movs
ins
xor
rcr
lds
mov
add
or
add
lds
(bad)
js
aaa
mov
xchg
xchg
sti
dec
mov
bound
fdivr
rol
cmps
les
jo
into
ja
cmps
bound
jne
mov
shr
inc
jnp
jecxz
clc
mov
or
sti
push
add
mov
leave
sub
jae
(bad)
sbb
pop
std
pop
stc
ret
pop
xchg
scas
add
pop
xchg
repz
jp
mov
jne
push
fisttp
xchg
(bad)
push
pop
mov
pop
or
mov
push
push
or
xchg
add
and
cld
or
fwait
sar
jae
ss
and
add
(bad)
mov
out
jbe
jmp
stos
movaps
xchg
xor
push
sbb
repnz
xchg
dec
rol
in
inc
clc
shl
fcom
std
cmp
ret
mov
sbb
(bad)
rol
ret
xor
sbb
test
push
push
dec
popf
das
inc
push
mov
push
dec
or
xchg
stos
in
test
mul
push
mov
mov
mov
dec
cmp
mov
add
pop
js
xchg
sbb
xchg
int
cmp
imul
aad
icebp
push
cmc
je
xor
in
enter
out
or
sub
cmp
aaa
popa
inc
lds
(bad)
adc
mov
pop
xchg
out
push
mov
ja
lahf
sub
pop
pushf
nop
push
in
aam
jmp
cdq
mov
test
test
jmp
mov
(bad)
jp
ret
out
jmp
andps
clc
sbb
push
xchg
lock
pop
dec
jae
pusha
jecxz
push
cli
loopne
jnp
popa
adc
(bad)
fiadd
adc
add
test
mov
ja
mov
jecxz
add
inc
outs
cld
or
push
cmps
xchg
in
mov
jne
arpl
dec
jne
push
sahf
out
adc
es
jmp
fnstcw
test
cmps
pop
popf
imul
call
or
jmp
fild
inc
pop
retf
iret
mov
fmul
(bad)
cld
push
or
fadd
scas
sub
iret
dec
cmp
popa
bound
or
inc
push
mov
ret
and
pop
mov
adc
jmp
mov
pop
dec
cmp
pop
inc
pushf
dec
stc
loop
cwde
fmul
dec
test
adc
inc
pop
jns
clc
cmp
cmps
pusha
xlat
inc
and
sahf
push
xchg
push
sbb
in
dec
gs
ins
ret
fnstsw
mov
fbld
add
push
cli
mov
lahf
jb
jl
aas
jge
inc
mov
retf
retf
loope
out
mov
cmp
je
xchg
shl
sub
int
inc
mov
das
stc
cmp
mov
leave
aam
or
pop
mov
aad
push
sbb
jo
aam
lahf
arpl
scas
pop
ret
nop
test
sbb
inc
sahf
lods
push
or
xchg
rcl
das
dec
dec
xor
pop
fmul
mov
cmp
mov
sbb
push
jno
mov
(bad)
repz
bound
ds
dec
inc
aam
inc
scas
pop
bound
adc
xchg
cmp
popf
dec
retf
push
sub
jo
retf
mov
das
inc
sar
mov
push
pop
mov
xor
dec
ret
jnp
clc
adc
sub
xchg
shl
push
cmp
out
daa
outs
push
dec
scas
sub
push
mov
and
xchg
movs
cmps
data16
jns
xchg
les
xchg
jno
fs
jecxz
ret
xor
(bad)
xchg
stos
idiv
mov
jecxz
test
mov
push
jecxz
rol
ret
jg
frstor
add
push
and
pop
or
rep
aad
minps
add
or
push
jle
cli
inc
inc
movs
pop
jle
std
adc
fistp
(bad)
rol
jo
xchg
mov
stc
movs
cmp
push
imul
inc
rol
loop
sbb
sbb
repnz
mov
test
in
das
ja
add
fsubr
add
bound
xchg
(bad)
dec
inc
and
stos
push
adc
rol
add
fistp
ja
push
mov
mov
sbb
in
clc
and
dec
inc
inc
out
outs
fsub
mov
ins
loopne
ror
std
cmp
sub
test
sub
imul
xchg
xchg
jle
daa
retf
and
addr16
je
dec
mov
das
sub
adc
ror
call
pop
lock
(bad)
rcr
jne
dec
mov
cmp
fs
iret
pop
mov
add
pop
in
hlt
adc
fmul
shl
dec
out
aas
pop
(bad)
add
es
ins
jmp
repnz
rcr
out
aas
xchg
shl
sahf
jne
gs
aad
or
sub
lds
mov
(bad)
mov
dec
cmc
das
jbe
and
jmp
in
(bad)
lds
inc
pop
ins
lahf
jp
push
xor
mov
mov
or
arpl
sbb
mov
cmp
push
cmp
dec
fidivr
xchg
add
sti
fldcw
jmp
cmc
cli
inc
gs
mov
mov
popf
cld
jge
or
out
xchg
jp
imul
shl
aaa
add
mov
popf
and
xchg
arpl
sub
xor
sbb
loop
cmp
loopne
aad
aas
je
aas
call
jno
movs
adc
std
cmp
and
jbe
mov
enter
ret
push
xchg
jg
movs
mov
(bad)
stos
cdq
mov
outs
or
loopne
cmc
(bad)
sbb
out
pushfw
and
pop
ins
fsub
add
fucomp
inc
xor
jecxz
jecxz
stos
div
outs
jb
add
xchg
aas
js
mov
jb
xchg
push
fist
loop
and
mul
inc
ds
rcl
retf
scas
inc
mov
add
mov
call
mov
or
and
cmps
sub
and
(bad)
int3
jno
dec
cmps
popf
dec
xchg
fild
adc
in
adc
cmp
push
cmp
xor
mov
daa
mov
cld
bound
ins
push
fst
dec
cmp
xor
in
call
jo
js
cmp
mul
cdq
pushf
nop
inc
enter
mov
neg
cdq
repnz
sbb
sbb
outs
inc
sub
inc
inc
and
(bad)
cmps
mov
mov
pop
enter
lods
jge
pop
inc
pushf
lods
add
test
stc
mov
rol
and
cli
xor
ins
jne
retf
sub
jmp
mov
hlt
jno
pop
push
lods
ins
sbb
add
mov
mov
add
adc
retf
jbe
aaa
xor
xchg
(bad)
pop
scas
dec
in
in
int3
xlat
pop
cmp
xchg
fbld
dec
mov
pop
clc
ins
push
stos
fldenv
or
cmc
rol
inc
aam
push
xchg
pop
imul
pop
xlat
fistp
rcl
adc
into
mov
(bad)
int
sub
movs
jb
mov
retf
sub
and
dec
push
setl
dec
or
mov
push
jbe
pop
xor
add
or
mov
inc
adc
icebp
add
movs
cs
int
xor
and
daa
lahf
leave
int
fist
add
aas
aaa
pushf
(bad)
xor
fs
push
jbe
xor
les
fsub
and
clc
add
xchg
push
cli
scas
fs
push
mov
sbb
out
inc
pop
mov
and
fdivr
out
dec
xchg
mov
ret
jo
xor
jl
jb
test
fwait
sti
gs
adc
push
mov
(bad)
(bad)
ins
mov
in
xlat
cmp
jnp
hlt
out
mov
gs
adc
(bad)
scas
xor
mov
mov
inc
mov
mov
loop
inc
push
push
pop
lahf
(bad)
fisttp
inc
daa
add
sbb
sub
pop
fisubr
pop
mov
sbb
retf
ins
outs
popa
jb
add
push
ficom
mov
and
jg
ins
sub
jmp
xor
ins
inc
xchg
cs
inc
xchg
inc
shl
and
jbe
cld
inc
mov
add
aad
aas
mov
mov
leave
(bad)
jle
jo
fwait
sub
mov
cdq
retf
rep
scas
daa
xchg
and
sbb
mov
add
gs
pop
shl
movs
mov
shl
xor
sbb
push
xor
ror
ja
push
push
jmp
push
add
mov
mov
dec
jmp
add
push
aas
mov
xor
std
imul
adc
sbb
mov
push
mov
es
ffree
mov
inc
dec
push
push
mov
in
cmp
add
xor
mov
push
xchg
push
pop
jb
rcl
out
xor
mov
test
mov
push
retf
fisub
stos
sbb
je
aas
ds
pop
loopne
adc
bound
lahf
jne
shl
adc
sbb
jle
xchg
(bad)
ret
ret
push
popf
in
bnd
je
or
sub
push
inc
push
dec
sbb
and
ins
fidivr
cmp
xor
mov
jge
(bad)
(bad)
push
xchg
xchg
jae
scas
cmps
leave
xor
outs
bswap
or
and
jp
pop
dec
fwait
dec
xor
js
mov
jne
sub
xchg
test
not
aam
push
mov
imul
inc
daa
mov
pop
aam
mov
cmp
js
loop
(bad)
rcr
icebp
fsubp
cmps
cmp
dec
mov
xchg
inc
es
and
mov
loop
test
mov
ins
sar
je
sub
je
stos
nop
imul
inc
fldenv
int3
(bad)
jmp
cmps
es
sbb
fwait
lods
ins
cmp
shl
(bad)
sub
dec
enter
jg
outs
dec
out
js
test
adc
aas
jecxz
stos
inc
cli
rcl
loope
and
pop
call
inc
pop
jae
pop
mov
push
repz
test
fs
cwde
cmc
mov
xchg
cdq
pop
xor
addr16
cmp
shr
mov
sbb
cli
push
cmps
add
jo
mov
mov
movs
push
sbb
cmp
jmp
inc
test
dec
and
arpl
cmc
inc
or
repnz
les
in
xor
movs
mov
xchg
sbb
lock
rol
pop
cwde
xor
jo
mov
xor
jns
push
pushf
imul
xchg
in
mov
mov
xor
outs
xchg
cwde
sbb
fadd
repz
mov
pop
stc
xchg
jno
fwait
add
and
ss
nop
cmc
inc
mov
inc
and
or
fwait
mov
xchg
es
lock
or
xor
movs
push
mov
out
stos
pop
or
mov
in
dec
or
sub
mov
mov
fidivr
inc
inc
jge
in
movs
jne
jns
sahf
xor
add
ins
test
outs
xor
pop
std
scas
pop
jmp
cwde
mov
xor
inc
cs
xchg
stos
ret
add
sbb
std
es
dec
lods
leave
in
stos
mov
push
add
jb
ins
and
(bad)
push
sbb
lods
lods
xor
sahf
mov
shl
(bad)
cld
add
or
movs
loop
mov
inc
(bad)
pop
or
nop
bound
ds
out
sub
and
push
or
mov
push
jb
dec
stos
jle
dec
or
loope
jnp
xchg
mov
jg
or
cdq
cmp
and
cmp
sti
int3
jo
jne
stos
xor
test
inc
and
clc
pop
sbb
daa
mov
xchg
jge
sub
pop
sub
pop
inc
sbb
ret
sub
inc
xchg
and
jae
xor
xor
rcl
addr16
xor
or
pop
nop
les
mov
pop
adc
sbb
add
sub
pop
adc
enter
jbe
mov
ret
out
sbb
lods
sub
add
add
repnz
popf
or
jno
pop
xor
fistp
mov
and
into
not
adc
mov
xchg
shr
pop
mov
icebp
jecxz
sti
cmp
mov
add
shl
enter
mov
je
lods
nop
(bad)
test
retf
mov
mov
and
pop
sbb
ins
or
and
add
icebp
jno
mov
cmps
pmaddwd
jno
in
jg
sbb
or
xchg
push
jno
das
test
loope
cdq
ror
fwait
xchg
jmp
rcl
std
test
xchg
inc
test
sub
jl
push
sbb
cmp
mov
pop
retf
and
clc
push
rcr
leave
retf
jg
lea
mov
and
or
cmp
jle
adc
loope
mov
mov
push
mov
(bad)
cpuid
fwait
push
pop
repz
pop
nop
sbb
dec
push
cmp
push
fs
and
push
std
mov
ficomp
pop
shl
inc
out
out
dec
test
xchg
mov
inc
aas
rol
xchg
repnz
cmp
add
scas
push
test
fdivr
xchg
push
jae
cmp
and
mov
mov
jns
cwde
cmp
scas
out
mov
xor
sub
std
add
icebp
or
jnp
jbe
dec
dec
inc
fld
sub
es
aam
jne
jno
out
pop
cld
popf
mov
and
xor
out
inc
xor
mov
repz
loop
repnz
adc
fsubrp
dec
fmul
or
scas
push
xlat
and
sbb
jp
mov
loop
inc
mov
outs
outs
cmovno
dec
in
test
mov
jl
ja
out
jns
xor
loop
cli
cmc
cld
sahf
fimul
aas
or
and
pop
pop
lds
push
dec
idiv
jge
dec
fiadd
mov
cs
mov
loopne
dec
xor
add
sbb
rcl
fsubr
aaa
enter
loop
sub
leave
push
xor
push
inc
aad
sbb
dec
or
add
xor
call
stos
imul
jge
aad
lds
inc
sub
fwait
loope
sub
inc
xchg
push
push
cmp
jg
push
xor
push
xchg
sub
leave
aad
sbb
pop
add
ds
sub
ficom
mov
es
in
(bad)
repnz
repnz
inc
or
pop
mov
shl
addr16
mov
pop
imul
ror
in
bound
push
test
pop
dec
mov
pop
clc
(bad)
jge
xor
dec
fbld
push
mov
cmps
push
xchg
cmp
jae
dec
cmps
mov
pushf
pusha
loope
inc
mov
sbb
fwait
jge
push
jno
pop
call
mov
xchg
mov
pushf
call
es
dec
jns
packssdw
cmps
xlat
imul
mov
xor
sahf
fsincos
in
and
fdiv
mov
inc
shl
popf
fst
and
mov
mov
pop
loopne
in
dec
ja
rcr
xor
aas
data16
xchg
add
mov
add
xor
shr
xchg
lahf
cmc
jg
es
push
fcomip
adc
add
adc
jne
fadd
leave
add
xor
push
maxps
mov
leave
and
cs
add
sbb
xor
jb
lock
xchg
jmp
pop
cwde
xchg
mov
(bad)
cmp
jne
and
push
fisubr
fmul
(bad)
add
cmps
cmc
lahf
push
cmps
es
test
es
and
jg
or
cmp
xor
sbb
and
xchg
pop
push
dec
sbb
jle
pop
or
adc
push
inc
mov
sub
jne
pop
pushf
push
xchg
retf
add
inc
jp
mov
aas
lock
mov
dec
bound
not
rol
mov
xchg
out
rol
js
das
sbb
leave
add
fdivr
retf
mov
dec
pop
loopne
xchg
in
in
adc
pop
(bad)
xor
jae
shl
leave
in
ror
mov
push
call
ins
push
sbb
pop
jne
mov
xor
push
out
sti
fimul
ins
xchg
jb
jno
mov
fcom
jb
call
lods
test
add
stos
popf
mov
cdq
pop
out
pop
mov
jecxz
popf
fprem
sbb
movs
maxps
pop
xor
xlat
fst
aam
xor
pop
mov
outs
inc
or
push
xor
adc
aas
jmp
push
jge
cmp
add
mov
(bad)
jle
sahf
dec
hlt
idiv
mov
imul
clc
mov
ret
jns
retf
cmp
shl
mov
(bad)
ret
mov
cmp
dec
adc
adc
xchg
sub
call
mov
push
imul
mov
xchg
(bad)
cmp
adc
or
retf
cwde
dec
ins
lods
in
sbb
add
into
aam
call
cwde
mov
pop
cmp
pop
adc
push
inc
dec
xor
and
ins
enter
or
xlat
mov
xchg
jns
mov
out
call
repz
or
dec
rcr
and
aad
aam
sti
pop
sub
push
jne
xchg
aam
movs
jne
int
scas
jae
(bad)
retf
shl
inc
repz
mov
ds
in
jmp
loop
adc
loop
mov
outs
or
loopne
pop
fisttp
mov
mov
repz
hlt
iret
aam
outs
add
adc
add
pop
xor
cmp
das
call
scas
pop
loope
mov
test
jge
fdivp
sub
sahf
push
add
xchg
or
loop
outs
mov
(bad)
sti
fisubr
sub
in
xlat
jmp
out
jnp
test
sahf
loop
gs
gs
push
cmps
jbe
pop
imul
lods
shr
dec
stos
je
sub
xchg
out
mov
lahf
jb
stos
dec
jbe
jecxz
in
shl
cmp
mov
adc
aaa
stos
je
jle
shl
aad
push
cli
xchg
xor
add
lock
pop
and
lods
lock
add
popa
mov
(bad)
shl
sub
adc
loopne
lea
int3
inc
popf
aas
sbb
loopne
push
std
mov
sahf
jmp
call
call
jo
jl
aaa
jbe
adc
mov
jbe
outs
jp
mov
scas
add
pop
mov
outs
jmp
test
cdq
out
sbb
sbb
jno
cli
pop
std
mov
add
rcr
push
dec
add
popf
jecxz
gs
mov
mov
dec
jo
mov
dec
ins
mov
dec
ror
sub
inc
mov
sub
xchg
jl
add
mov
inc
jmp
dec
fisub
pop
ss
xchg
adc
sub
adc
fwait
push
(bad)
pusha
jle
inc
clc
cmps
shl
mov
imul
in
fisttp
or
imul
add
push
mov
inc
and
lahf
loope
mov
cmp
mov
sbb
repz
mov
int
xchg
sub
lods
fdiv
imul
push
popa
int
or
mov
mov
adc
adc
pop
cld
jne
xlat
mov
add
inc
mov
sbb
icebp
mov
push
push
xchg
push
fidiv
cmp
sbb
mov
push
int3
push
dec
mov
daa
push
(bad)
(bad)
(bad)
mov
mov
(bad)
int3
push
repz
cmp
in
push
push
jae
ret
imul
sahf
cli
pop
jnp
stc
mov
loop
mul
mov
loope
jmp
je
sahf
test
cmp
jmp
inc
pop
stc
jp
xor
clc
ror
push
mov
or
push
aas
in
sbb
into
mov
das
or
cmc
retf
and
jle
sbb
add
dec
inc
pusha
int3
add
mov
push
pushf
cld
ins
push
dec
js
(bad)
cs
jg
and
imul
call
call
or
mov
fisub
inc
xchg
add
xchg
xor
pop
mov
ins
clc
pop
(bad)
pop
xor
pop
mov
mov
xchg
mov
movs
mov
and
fcmovnb
call
jmp
bound
inc
mov
pop
jbe
jge
icebp
pop
les
or
aas
pop
test
pop
lods
mov
enter
pusha
pop
inc
push
scas
fadd
dec
xor
or
adc
jae
cmp
(bad)
sub
or
adc
cmp
mov
ret
(bad)
mov
fwait
jle
jp
jmp
(bad)
retf
add
xchg
mov
cmps
and
les
hlt
mov
jb
and
mov
jne
enter
xor
imul
cli
mov
push
cmp
fist
int
idiv
pop
inc
cli
out
mov
fdiv
(bad)
aad
mov
loop
xor
sbb
cmp
loopne
dec
push
or
aad
xor
mov
popf
pop
mov
aad
mov
dec
push
ins
outs
fs
inc
(bad)
mov
pop
clc
and
test
jmp
aad
pop
scas
and
aam
push
out
test
cwde
test
add
xchg
jmp
xchg
sub
jge
xchg
jnp
jns
mov
xor
leave
pop
daa
jecxz
mov
xchg
ds
sbb
popa
stos
mov
or
dec
imul
gs
lods
imul
xor
push
fistp
xchg
leave
std
lds
ror
cmp
push
into
cmp
sbb
fsub
cmc
or
movq
sub
cmc
icebp
xchg
fsub
jecxz
and
mov
add
xbegin
in
cmp
push
loope
int
bound
addr16
pop
or
pusha
les
dec
xchg
cli
add
dec
sbb
and
mov
call
call
dec
push
xor
push
xchg
daa
mov
pop
cmp
int
cld
jbe
test
jle
push
mov
or
sub
movs
jne
sub
movs
jmp
jmp
in
jne
mov
lds
cld
jecxz
pop
inc
jg
cmp
mov
xor
movs
lods
call
pop
xchg
pop
fimul
push
bound
popf
and
push
or
(bad)
sar
and
sbb
and
add
jmp
xchg
cmp
gs
and
sub
hlt
add
stos
pop
and
fwait
aam
clc
or
ss
jno
stc
pop
sbb
dec
dec
xchg
ds
mov
push
jmp
je
ret
(bad)
and
test
add
shl
shld
fdivr
shr
and
in
mov
sbb
or
jecxz
sub
cmp
pop
pop
sub
pop
xchg
imul
cmps
jno
push
repnz
ds
jae
push
mov
popa
and
daa
jl
jp
adc
mov
dec
fisttp
dec
out
popf
xchg
mov
jbe
cmp
inc
out
pop
adc
dec
daa
jo
stc
mov
scas
jp
sub
loop
cli
mov
(bad)
bnd
aaa
jg
(bad)
test
je
stos
mov
movs
sbb
(bad)
loop
les
test
aas
mul
std
in
push
shr
iret
xchg
sub
jo
mov
adc
sti
dec
sub
mov
push
mov
call
lods
mov
call
inc
mov
jns
icebp
lods
scas
nop
xchg
data16
add
pop
in
or
mov
sub
aas
push
pop
dec
jo
ret
sub
cwde
pop
and
jns
add
(bad)
fdivr
xchg
xchg
or
in
pop
mov
aam
xor
call
push
call
call
jle
imul
mov
sub
pusha
fisub
(bad)
aas
pusha
ja
iret
daa
in
fwait
mov
jle
clc
add
add
sti
pop
loop
test
fsub
ja
mov
xor
jb
out
iret
mov
std
pop
dec
xchg
out
inc
hlt
sahf
push
(bad)
dec
iret
jl
imul
jl
or
mov
push
cld
outs
and
add
dec
je
aam
cld
add
punpckhdq
cmp
and
sti
inc
push
dec
scas
cld
pop
fmul
xchg
mov
das
pop
xchg
pop
xor
push
mov
ins
retf
scas
cmp
int
pop
movs
imul
ficom
out
jecxz
xor
stc
out
and
xor
add
lds
sbb
lahf
lock
into
jg
adc
call
test
popf
sub
add
leave
mov
je
call
jb
adc
mov
fistp
js
out
loope
iret
out
sbb
test
mov
mov
ins
add
pop
fdiv
shl
mov
scas
pop
fldcw
out
add
mov
lahf
sbb
push
dec
add
jg
adc
mov
inc
out
add
dec
and
dec
and
arpl
data16
inc
adc
cmp
aas
jb
ja
scas
xchg
push
pusha
inc
mov
mov
sbb
push
call
dec
js
sbb
fld
out
xchg
cmp
mov
daa
mov
add
xchg
clc
daa
xlat
jno
mov
stc
loop
xchg
mov
sbb
addr16
stos
and
dec
adc
test
ffreep
push
xor
test
ficomp
pop
in
rcl
cmp
arpl
and
jns
cdq
mov
or
popf
adc
mov
pusha
outs
push
and
xchg
push
sub
add
push
cmp
lea
pop
movs
test
sahf
outs
push
cmp
mov
outs
(bad)
jno
cwde
xchg
cmp
cdq
mov
mov
in
imul
cmp
mov
cmp
fstp
pop
and
shr
repz
mov
jne
fwait
call
cmp
pop
imul
movs
repz
or
and
cmp
push
test
push
loopne
test
loopne
shr
leave
mov
push
add
push
adc
jae
call
into
dec
xor
dec
sbb
into
pusha
and
nop
mov
xchg
retf
jbe
aam
arpl
push
je
inc
jbe
and
push
repz
ins
xchg
mov
mov
into
nop
not
hlt
lods
popf
xchg
ss
fild
imul
or
sar
imul
hlt
into
arpl
push
pminub
out
imul
enter
scas
mov
cmp
daa
jl
pop
bound
and
(bad)
pushf
mov
rcr
or
out
iret
mul
test
and
(bad)
sbb
(bad)
arpl
test
push
push
cmc
and
pop
fild
or
mov
xchg
push
sahf
sub
mov
enter
cmp
mov
add
test
test
xlat
adc
cmc
inc
int3
jle
or
jecxz
jmp
cmps
cmps
aaa
pop
add
inc
cmp
cmps
cli
push
add
ss
xchg
adc
aas
dec
jae
sub
add
dec
inc
xchg
movs
or
scas
mov
or
addr16
sub
dec
mov
add
(bad)
dec
cmps
test
test
sub
fprem
hlt
icebp
inc
pop
add
jl
add
lahf
xor
out
(bad)
retf
xchg
pop
aaa
fcomi
jnp
out
xchg
mov
sar
(bad)
stos
pop
dec
push
leave
fimul
jae
in
stos
outs
call
into
popf
pop
cld
loop
lods
ins
cmp
sub
fwait
sar
test
in
mov
into
mov
div
xchg
retf
sbb
push
int3
mov
imul
pop
push
inc
jae
outs
(bad)
aas
stos
fldcw
push
push
mov
mov
mov
loop
adc
cs
std
dec
mov
xlat
mov
icebp
add
and
fimul
mov
fiadd
mov
sbb
xchg
inc
cmp
push
jns
sar
jns
dec
pop
ins
jnp
mov
in
gs
mov
fcmovu
fdivr
in
xor
push
and
data16
mov
or
adc
sbb
push
out
stos
dec
in
sbb
pusha
sbb
into
push
jae
sbb
js
jle
adc
mov
pusha
iret
cmp
retf
push
ret
mov
xchg
sbb
push
sub
pop
pop
add
jo
mov
ins
jge
and
dec
lods
mov
fld
sub
dec
pop
adc
sub
sbb
sbb
push
pusha
fisttp
mov
add
push
dec
jae
leave
jb
pop
stos
adc
sub
into
push
push
dec
jg
gs
paddb
push
imul
call
adc
push
cld
pop
pushf
stos
sbb
repz
idiv
stc
mov
rol
sub
and
cmps
xchg
loopne
fidivr
push
sbb
daa
mov
xchg
(bad)
lahf
mov
pop
jne
pop
sahf
das
and
sub
(bad)
movs
sbb
xor
add
dec
dec
ret
pop
bound
sbb
push
inc
(bad)
xchg
push
cmp
stc
int
jg
mov
arpl
addr16
push
jne
add
push
xor
adc
pop
aam
add
mov
sbb
sub
(bad)
aaa
xchg
scas
mov
jp
std
mov
xor
xlat
loope
inc
pop
cmps
out
data16
pusha
pop
imul
pop
cmps
loope
(bad)
sub
(bad)
stc
enter
(bad)
lea
jae
hlt
dec
jge
stos
dec
dec
sub
mov
sub
imul
out
ret
idiv
xchg
jp
mov
inc
xchg
sbb
stc
inc
cwde
enter
in
je
pop
xchg
imul
pop
mov
aam
mov
rcl
out
xchg
gs
jl
cwde
and
jo
and
shl
loopne
stc
mov
loope
mov
inc
cli
adc
cmps
dec
(bad)
jecxz
xor
mov
add
mov
mov
mov
dec
mov
jmp
mov
ret
xor
pop
loop
sbb
add
xchg
jle
push
inc
jg
jmp
cmp
rcr
cdq
imul
loop
add
fld
hlt
aad
(bad)
cwde
stos
je
stc
pop
xchg
je
cdq
loopne
cli
xor
in
inc
iret
retf
jo
cmps
and
xor
(bad)
test
loopne
inc
pop
mov
sub
pop
cmps
fyl2xp1
sbb
add
aad
sub
sbb
xchg
sbb
mov
or
bound
push
inc
xchg
dec
pop
inc
ret
bound
xchg
lock
jb
or
inc
lahf
test
fcom
cmp
or
movs
js
or
xchg
mov
test
lods
sbb
nop
push
mov
mov
stos
mov
mov
std
sbb
jge
inc
loope
gs
into
add
sbb
repnz
cmp
mov
adc
hlt
xchg
retf
push
jl
scas
loop
fisub
or
mov
ins
pop
pop
imul
fbstp
mov
mov
xchg
call
inc
cmp
mov
mov
jno
leave
sub
repnz
mov
inc
push
jmp
scas
test
lods
pushf
add
xlat
or
out
outs
cmp
cmp
add
arpl
add
adc
or
sti
xor
clc
fist
stc
mov
xlat
xchg
inc
addr16
jp
icebp
jge
xchg
xchg
js
add
hlt
mov
cli
popa
sub
dec
lods
push
inc
repnz
push
xchg
or
mov
pop
call
pop
aas
push
shl
aaa
dec
sbb
in
jg
dec
sub
fist
mov
hlt
popa
push
jmp
adc
and
jns
std
je
push
push
push
sahf
xchg
or
mov
stos
sbb
jno
addr16
fdivrp
push
retf
aas
jmp
pop
push
div
pop
push
mov
mov
or
daa
adc
mov
mov
inc
add
ds
sbb
aam
dec
cmp
outs
push
xor
in
shl
xchg
sub
pop
pop
sub
ds
sub
inc
or
nop
js
inc
ret
and
inc
add
cmps
fistp
jge
scas
and
and
mov
xor
dec
mov
inc
push
xchg
jb
fsub
mov
icebp
push
add
xor
aam
fdiv
and
cs
mov
xchg
fst
cli
and
mov
dec
xchg
enter
and
addr16
cwde
std
ret
mov
sub
imul
fucom
pop
or
hlt
test
sub
mov
mov
mov
adc
ins
pop
(bad)
adc
inc
lea
sbb
push
in
or
mov
pop
jmp
jno
out
push
int3
push
repz
cmp
not
lds
sbb
mov
xchg
(bad)
inc
cld
mov
addr16
mov
jg
dec
inc
or
out
scas
dec
pop
cmp
add
icebp
inc
stos
fimul
xor
pop
push
bound
loopne
push
mov
call
mov
inc
mov
retf
add
neg
inc
sub
cwde
push
xchg
pop
es
cdq
stos
sub
sar
and
(bad)
aam
imul
sti
cli
in
test
loopne
int
pop
pop
movs
jmp
dec
out
in
sbb
jle
adc
pop
pop
push
xor
xor
stc
mov
and
sub
retf
call
nop
or
(bad)
sbb
mov
jae
aas
jmp
jl
aas
mov
mov
std
popf
or
mov
(bad)
(bad)
int
pushf
popf
sbb
add
adc
lds
stos
adc
sbb
sub
add
popf
loopne
pop
lds
push
out
iret
push
movs
jnp
movs
dec
neg
test
mov
xchg
jmp
in
pop
call
shr
cmps
or
or
shl
(bad)
jmp
mov
cmp
sub
mov
adc
fwait
dec
lods
hlt
xchg
dec
jl
and
dec
retf
mov
lods
pop
dec
inc
in
out
call
mov
outs
test
jmp
or
or
sub
fidiv
xor
jo
or
cmps
lahf
mov
mov
push
inc
sbb
ins
jle
jae
loop
in
and
fdivr
jnp
inc
retf
pop
mov
arpl
rol
loope
push
in
sti
xlat
jno
mov
inc
lea
popf
mov
test
sub
(bad)
daa
inc
test
stos
mov
adc
sahf
mov
mov
mov
data16
imul
dec
test
std
test
test
popf
outs
pusha
pop
mov
rcr
daa
sub
or
mov
pop
cmp
ss
inc
mov
jmp
or
pop
dec
sub
lock
sub
or
out
int3
cli
dec
jp
xlat
mov
adc
sub
mov
jb
xchg
mov
xor
mov
rol
out
retf
cmp
xor
sti
cmp
arpl
sahf
dec
jb
mov
in
push
jbe
cmp
ja
sub
dec
out
mov
cmp
xchg
jmp
dec
pop
rol
mov
mov
sbb
dec
test
pop
pop
das
dec
sbb
sub
cmp
inc
inc
call
in
mov
scas
shl
and
scas
jge
mov
(bad)
pop
xor
jns
int3
sub
cmp
xchg
out
(bad)
adc
mov
aas
adc
or
mov
js
xchg
stos
push
xchg
outs
aam
jmp
or
ret
(bad)
lock
mov
rcr
sbb
outs
mov
push
pop
mov
stos
push
adc
mov
mov
(bad)
xor
cmc
push
sbb
repz
jmp
out
retf
push
out
out
mov
cdq
sbb
pop
fld
ret
ror
adc
ret
cmp
jns
sub
inc
xlat
mov
mov
add
jge
stos
or
and
stos
mov
dec
dec
xchg
inc
push
in
call
xchg
mov
pop
(bad)
and
ins
clc
push
lods
fcomp
push
in
rcr
call
sar
dec
loope
xchg
mov
ret
shl
jl
adc
xchg
or
in
adc
mov
js
call
popf
ins
jmp
movs
add
lods
mov
ror
(bad)
jne
cwde
sbb
sub
push
inc
adc
fsubr
popa
fs
jno
inc
jnp
dec
jb
fdivp
lock
ds
seto
mov
xchg
ror
add
pop
mov
int
sub
bound
hlt
es
loop
jl
scas
shr
pop
iret
jne
outs
xor
cmp
push
ss
push
sbb
push
ret
dec
movs
jne
mov
lea
hlt
add
add
sar
addr16
shr
jg
push
test
jb
imul
or
xchg
adc
lds
and
and
sbb
xor
daa
dec
movs
dec
xchg
xchg
adc
push
xor
icebp
movs
inc
cmp
dec
sbb
dec
stc
icebp
icebp
cs
jecxz
retf
test
(bad)
push
popf
iret
mov
mov
mov
cmc
adc
ds
xchg
sub
xchg
mov
test
movs
sbb
imul
clc
fs
xchg
cmp
arpl
loope
popa
mov
mov
mov
dec
pop
call
loopne
(bad)
cmps
jns
push
push
cld
mov
(bad)
lock
xchg
sbb
ins
dec
cmp
xor
cmc
push
cdq
aam
ret
cmovno
bound
mov
ror
jno
push
xchg
call
mov
inc
retf
pop
and
mov
js
stc
mov
adc
icebp
shr
mov
sub
add
push
addr16
sbb
ja
xor
xchg
jecxz
cmc
xor
retf
jge
xor
je
sbb
ss
mov
sbb
xchg
and
popf
add
xchg
sbb
jmp
pop
out
pusha
cwde
jae
inc
imul
int3
mov
push
dec
xchg
data16
mov
or
dec
mov
out
pop
movs
adc
(bad)
mov
pop
out
aam
or
and
xchg
or
inc
ja
(bad)
(bad)
cs
pop
ins
jp
mov
jl
mov
sub
mov
daa
mov
cli
dec
pop
mov
adc
and
sub
cmp
or
pop
xchg
adc
sub
ret
outs
iret
fstp
ss
mov
into
sub
aam
mov
mov
imul
mov
(bad)
fcomp
clc
std
push
pop
out
cmc
jo
inc
sti
mov
xor
iret
xchg
cmp
retf
loope
aad
fnstcw
and
(bad)
cmp
ret
call
int3
inc
lods
ds
mov
jae
sbb
(bad)
addr16
pop
cwde
sub
jl
mov
or
daa
pop
push
mov
push
mov
jo
cli
adc
lock
dec
adc
es
jmp
mov
mov
xchg
idiv
mov
jbe
movs
push
mov
cmp
enter
aas
xor
dec
bound
gs
jnp
inc
dec
sti
les
hlt
jns
add
adc
out
mul
push
iret
daa
dec
and
inc
sub
mov
push
xchg
mov
aas
inc
push
xor
or
fisubr
xchg
jle
pop
mov
sub
dec
push
sbb
(bad)
dec
enter
xor
into
cs
test
(bad)
jg
out
push
inc
data16
xor
neg
mov
leave
mov
call
inc
adc
(bad)
loopne
shl
lods
mov
jle
int3
sub
aaa
clc
(bad)
mov
mov
and
jb
shl
mov
(bad)
shl
pop
(bad)
push
add
mov
add
test
xchg
mov
inc
cwde
jne
lahf
sub
pop
cmp
or
fcmove
mov
pop
and
or
retf
jae
xlat
xor
jl
call
or
shl
call
mov
dec
sub
repnz
sbb
pmovmskb
loop
cli
scas
xor
or
push
sub
add
push
cmc
add
test
std
dec
scas
mov
push
shl
stos
stos
fs
ins
into
call
imul
mov
and
js
cmp
cmp
sbb
out
std
ret
xchg
push
out
adc
and
inc
dec
(bad)
in
xor
shr
adc
sub
push
jge
mov
out
jmp
cmp
jnp
inc
movs
fistp
mov
daa
mov
xchg
push
mov
and
jb
mov
stos
fmul
push
cmp
aam
push
in
cwde
mov
gs
jnp
pusha
popa
jle
inc
mov
mov
js
daa
jle
inc
cmp
stos
outs
loopne
mov
jg
out
nop
popw
(bad)
xchg
mov
and
mov
(bad)
mov
push
imul
dec
push
or
xchg
ss
(bad)
pop
mov
cmp
xchg
mov
jb
in
push
push
pop
xchg
xchg
imul
retf
cmp
lods
test
pop
ror
aaa
jns
test
mov
cli
stos
adc
lods
jbe
cmp
sbb
subps
pop
mov
fucomp
sub
jl
cmc
fisttp
arpl
(bad)
dec
pop
call
lea
push
repz
xchg
repz
pop
ins
cmp
repnz
pop
pop
add
ret
sbb
cmp
ins
(bad)
jg
mov
mov
enter
mov
push
loopne
cmp
dec
xchg
sub
les
stos
call
and
inc
div
jo
mov
xor
(bad)
push
pop
push
loop
mov
push
fadd
jmp
sti
ss
pushf
pop
lods
aas
gs
imul
and
xor
repz
call
fiadd
xchg
xchg
aas
xor
xor
pop
cmp
push
pusha
push
sub
loop
inc
ss
jp
or
out
sub
mov
push
push
or
inc
mov
mov
jle
sub
cwde
lea
mov
mov
pop
add
cmp
ficom
cmp
(bad)
sub
ficomp
mov
sbb
or
adc
mov
sahf
sahf
mov
pop
jne
sbb
sti
test
test
out
lea
jmp
inc
and
imul
(bad)
pop
in
push
cmp
and
int3
xchg
sub
popf
fs
inc
pushf
dec
fmul
jnp
ss
xchg
mov
(bad)
fmulp
popa
jb
add
or
sbb
dec
jp
pop
out
clc
mov
and
sbb
dec
repz
push
in
jns
inc
adc
mov
adc
(bad)
fimul
push
or
inc
push
out
vmovdqa
movs
inc
in
cmp
sub
cs
ret
leave
sub
mov
jb
repz
pop
loop
cmp
lahf
int
and
fmul
push
mov
sbb
sar
je
mov
shl
inc
jnp
shr
std
mov
mov
xchg
adc
mul
out
cmp
push
retf
lods
std
das
jns
sub
dec
mov
xor
cmps
adc
iret
push
dec
jns
cmp
pop
popa
pushf
movs
repz
mov
dec
inc
pop
sbb
inc
jb
ss
sub
xchg
sbb
inc
jo
xlat
push
mov
inc
rcl
cs
inc
jg
aad
mov
call
pop
push
dec
adc
in
dec
sti
out
enter
inc
ret
nop
fwait
(bad)
test
clc
xchg
cld
rol
jnp
lahf
call
add
push
aas
add
stos
dec
rol
adc
cmps
setp
movs
sub
pop
shl
mov
mov
jle
imul
sub
xor
lahf
mov
retf
pop
xchg
fcom
push
mov
xchg
sub
aas
mov
or
mov
lock
inc
cmp
daa
push
popf
mov
fcomp
or
pop
mov
fnstenv
loop
xor
(bad)
mov
repz
mov
or
push
mov
mov
ss
daa
mov
adc
in
inc
xor
sar
mov
sbb
je
fsub
sbb
mov
xor
push
and
addr16
and
push
rcr
sbb
sbb
imul
shr
and
loop
outs
cmp
imul
js
add
in
jg
cmp
es
dec
fiadd
stos
lahf
add
fcmovnbe
push
xor
dec
dec
nop
out
loopne
xchg
sbb
jge
or
call
push
xor
or
mov
iret
cwde
or
mov
fstp
mov
in
test
or
sti
mov
data16
bound
aad
std
test
test
clc
xchg
fxam
int
mov
xchg
imul
sbb
loope
cmps
xlat
mov
xchg
gs
test
pop
in
mov
retf
fisubr
std
movs
cmp
add
bound
and
ins
and
repz
stc
mov
inc
stos
outs
mov
pop
or
fsub
lods
ins
pushf
sar
adc
cmp
mov
mov
inc
shl
mov
push
lds
sub
(bad)
sbb
and
jbe
popf
(bad)
rcr
xchg
sub
mov
aam
pusha
xor
adc
scas
pop
inc
or
jmp
or
mov
sahf
and
pop
fld
and
out
in
sub
pop
xor
fnstsw
inc
or
pop
mov
mov
call
xchg
xchg
pop
ds
lds
or
and
lea
push
adc
lahf
ins
xor
scas
pusha
jmp
xchg
(bad)
xchg
sub
pushf
push
pop
sbb
rol
outs
call
js
adc
out
(bad)
fnstenv
mov
cmp
imul
out
adc
pusha
mov
mov
push
or
mov
stos
std
mov
jecxz
mov
leave
popf
shl
xchg
push
pop
push
adc
mov
into
sbb
movs
out
mov
push
das
mov
lods
std
(bad)
or
jecxz
sub
pop
pushf
jmp
enter
jne
loopne
daa
push
sti
js
je
inc
jl
popa
jo
xor
xlat
adc
and
push
or
bound
pop
outs
jnp
outs
bound
adc
xchg
or
pushf
cmp
mov
xlat
mov
clc
jae
call
xchg
inc
pop
das
pop
mov
inc
xchg
mov
adc
xor
pop
scas
add
sbb
test
stc
jns
scas
dec
lock
fwait
xor
cmps
lock
add
mov
and
and
pop
mov
daa
sbb
icebp
add
adc
sub
stos
js
mov
stos
daa
xchg
and
sahf
add
repz
dec
(bad)
cmps
into
adc
inc
inc
add
in
sar
xchg
mov
jmp
push
addr16
addr16
outs
scas
sbb
repnz
(bad)
or
das
add
adc
stos
imul
cmp
push
lods
xlat
push
dec
movs
mov
jo
pop
push
in
add
inc
loope
sbb
push
loop
mov
jnp
dec
loopne
mov
scas
pop
inc
sbb
sahf
mov
pop
movs
push
push
mov
add
ror
(bad)
jmp
cmp
or
add
sbb
stos
inc
je
or
jb
mov
and
sub
xor
push
stc
pop
cmps
cli
test
pop
(bad)
mov
test
call
sahf
shl
jmp
das
mov
in
(bad)
por
hlt
sub
or
(bad)
ficom
mov
mov
cs
or
(bad)
cmp
inc
cs
or
jbe
dec
shl
and
xor
into
xor
ins
or
lahf
movs
pop
sub
mov
xchg
retf
lods
mov
dec
jnp
ins
shr
fwait
cmp
sub
push
cmps
outs
cdq
jp
pop
xor
xor
cmp
out
jb
xchg
jecxz
push
add
cmc
pop
fs
cmp
xlat
sub
dec
div
(bad)
ffreep
xor
repnz
sub
add
mov
cmp
inc
outs
jge
rcr
adc
(bad)
and
cmp
xor
repz
xchg
xchg
cmp
adc
lea
cmps
inc
bound
mov
rol
aas
lods
mov
push
nop
push
pop
add
or
xor
or
sbb
iret
adc
popf
aaa
cdq
bound
inc
pop
shl
sub
sti
xchg
pop
sar
dec
dec
adc
lods
adc
mov
sahf
iret
pop
push
push
(bad)
icebp
inc
xchg
dec
(bad)
loope
jne
ror
out
rol
shl
out
sbb
scas
mov
dec
sbb
(bad)
std
addr16
cmps
ins
lods
xchg
pop
mov
mov
(bad)
ficomp
rol
inc
setns
(bad)
pop
add
hlt
mov
lea
mov
into
push
lods
popf
(bad)
sub
sub
jmp
icebp
inc
cmp
cmp
and
lods
xlat
scas
sbb
repnz
mov
les
fnstenv
and
jbe
imul
push
imul
pusha
scas
pop
add
jnp
jmp
sbb
push
icebp
push
inc
scas
adc
movs
punpckldq
stos
test
sbb
inc
sub
neg
sub
in
rcl
push
adc
outs
adc
sti
xlat
repz
xor
mov
aad
xor
pop
sbb
js
ret
ret
mov
add
mov
lods
xchg
sar
xor
inc
ror
xor
xor
ficom
dec
pusha
dec
mov
icebp
pop
and
vpshab
popa
adc
push
adc
adc
push
sar
iret
pop
add
loope
imul
out
sub
jae
gs
lahf
cld
mov
mov
inc
and
xchg
inc
je
sbb
mov
call
js
sub
pop
add
mov
dec
sti
or
lock
xor
ret
mov
out
inc
mov
mov
daa
ss
adc
push
pop
mov
scas
add
push
imul
xor
or
call
xor
popf
and
mov
jmp
or
sbb
int3
ss
fldenv
imul
rcl
push
(bad)
les
xchg
dec
rcl
out
aad
outs
mov
adc
and
es
fisttp
jbe
ret
rol
pop
je
lock
inc
pop
imul
cld
test
jo
(bad)
in
inc
mov
rol
(bad)
ffree
push
jg
lea
loopne
(bad)
loopne
ror
nop
jmp
sub
in
icebp
ficom
addr16
or
mov
or
js
mov
fild
sub
fld
retf
vpcomub
shl
jmp
xchg
imul
mov
sbb
and
sbb
daa
dec
repz
(bad)
mov
inc
fwait
cdq
sbb
jmp
mov
ds
xchg
dec
ret
(bad)
sub
ret
cmp
adc
stc
dec
in
push
imul
xchg
mov
test
pop
xchg
jns
and
mov
jne
jmp
ss
nop
xchg
lods
fmul
mov
or
data16
aam
xchg
scas
sub
and
xlat
scas
add
mov
add
pop
jae
dec
in
(bad)
adc
sub
or
pop
into
xchg
std
dec
sbb
jmp
sar
pop
or
sub
cwde
ds
test
lods
jmp
scas
cmp
push
push
retf
mov
adc
sbb
ja
popa
xor
mov
xor
pop
jns
hlt
stc
push
adc
xchg
idiv
cli
scas
xchg
data16
push
cld
or
dec
cmps
dec
xchg
int
pop
jbe
(bad)
jp
jecxz
outs
stc
lahf
sbb
xor
and
idiv
and
xor
mov
xchg
adc
pop
jp
mov
popa
mov
mov
js
pop
add
dec
leave
mov
pop
jp
test
call
mov
xchg
add
mov
pop
dec
or
dec
pop
jle
sbb
cmp
xchg
xor
ror
test
enter
xchg
iret
mov
cdq
xor
fadd
lock
lea
adc
cmc
aaa
cmc
(bad)
push
sbb
mov
lock
loope
out
and
jmp
pop
xchg
push
jns
aas
push
lahf
and
mov
pop
mov
jns
and
shl
dec
retf
xchg
mov
ret
test
push
adc
movs
scas
ret
jne
mov
lahf
ret
jecxz
imul
leave
cmp
call
stc
pusha
in
in
cld
pushf
mov
mov
mov
ror
nop
jle
adc
(bad)
xor
push
pop
retf
mov
mov
mov
les
cmp
sub
dec
pop
jno
adc
mov
bound
(bad)
xchg
loopne
mov
outs
jno
cld
cmp
or
in
aaa
fsub
cmc
lods
fcom
ret
dec
pop
movs
in
mov
repz
lahf
xor
add
aas
and
xchg
mov
in
sub
call
jb
jae
sar
rcr
pop
in
and
mov
into
retf
ret
mov
cdq
loop
jmp
jl
(bad)
popa
imul
fldenv
fs
popa
add
dec
mov
pop
mov
ds
mov
or
jmp
lock
arpl
ds
push
sub
push
jb
fnsave
fcomp
cmps
in
(bad)
int3
adc
lock
or
push
nop
icebp
test
in
test
sbb
cwde
mov
mov
test
sub
push
inc
jmp
lahf
hlt
sub
adc
pop
pop
jae
test
repz
push
push
and
and
cmp
fs
aaa
fwait
outs
mov
inc
ins
aam
fdiv
sti
nop
jl
out
cmp
ja
ss
aad
sbb
sub
cdq
inc
enter
pushf
daa
xchg
and
push
push
sub
jge
icebp
add
push
dec
movs
mov
mov
adc
lea
cmp
add
mov
jae
ins
jne
and
xchg
jmp
nop
fiadd
xor
mov
mov
inc
sub
adc
sbb
push
loop
aam
cwde
push
fisubr
int3
repnz
imul
ss
aaa
pop
mov
or
in
(bad)
inc
sti
mov
loop
and
fwait
xlat
pop
retf
ret
inc
ins
xchg
imul
jl
frstpm(287
xor
imul
popf
scas
xchg
cdq
(bad)
rol
data16
add
nop
scas
shl
push
std
xor
(bad)
and
jg
dec
out
or
in
not
ja
push
add
jge
inc
sti
jb
push
mov
pop
jbe
mov
inc
stos
push
scas
pop
in
mov
movs
lock
inc
or
inc
add
pushf
mov
ins
out
mov
push
lods
or
inc
pusha
dec
fadd
jae
mov
ins
sbb
retf
(bad)
push
fistp
sub
push
fidivr
jle
mov
mov
and
cmps
or
call
xchg
es
dec
adc
adc
movs
push
in
sbb
dec
xchg
ret
mov
sub
clc
adc
push
shl
push
push
pop
adc
js
xor
fst
or
cmps
sahf
cmps
or
jg
sbb
sahf
pop
xchg
pusha
sbb
mov
movs
cmp
int3
clc
xchg
xor
push
(bad)
dec
and
cmp
sar
mov
sub
or
pop
or
(bad)
imul
sub
loop
push
jns
iret
mov
push
out
pushf
fsub
or
test
xlat
(bad)
int3
cmc
push
inc
inc
pop
and
fs
test
cld
mov
cmp
cmp
xor
sbb
(bad)
jmp
arpl
ins
jmp
jno
cs
mov
out
pop
cmp
cmps
retf
cmp
sub
cmps
outs
cmp
sbb
sbb
mov
das
out
call
outs
imul
jecxz
jb
xchg
gs
movs
outs
cmps
popf
lahf
mov
lods
stos
and
cld
lock
xchg
mov
dec
fsub
dec
shl
jmp
aad
test
adc
mov
aaa
push
fst
pop
dec
in
test
xor
fadd
xchg
cmp
sub
lahf
adc
fwait
cmp
jle
mov
pop
pop
inc
push
jecxz
and
adc
add
push
pop
dec
push
into
jp
cmps
adc
arpl
mov
push
or
mov
inc
das
into
and
pusha
sub
xchg
int
or
cwde
movs
das
in
mov
outs
xchg
inc
jl
dec
jge
iret
pop
mov
rol
inc
fldenv
sub
call
cmp
xchg
les
outs
fild
outs
or
retf
mov
mov
pop
add
(bad)
retf
or
jo
out
xor
stos
sbb
add
jl
push
pop
call
add
xchg
or
cmp
fmul
icebp
add
add
cmp
jb
sub
and
xchg
mov
xor
inc
sbb
call
xchg
out
xlat
and
dec
or
jo
iret
stc
mov
loope
add
nop
les
or
stos
jp
push
or
dec
mov
cmp
stc
mov
mov
dec
dec
lods
ins
inc
adc
enter
jmp
mov
jle
stc
push
dec
inc
adc
sbb
shl
aad
xor
ret
sbb
imul
data16
push
inc
inc
sub
adc
cli
inc
jp
dec
and
sub
imul
jmp
aas
lods
pop
adc
or
fld
inc
movs
push
pop
inc
data16
push
mov
ins
in
scas
ffree
sbb
mov
jo
int
ds
xchg
xlat
(bad)
sbb
out
loop
mov
inc
jl
loop
test
mov
outs
mov
mov
cmp
imul
jmp
lea
lock
fld
idiv
mov
sbb
mov
or
sub
cwde
sti
repnz
push
sub
push
shr
ins
daa
imul
xchg
ss
(bad)
push
fbld
ja
repz
int
cmp
test
call
and
add
in
mov
bound
les
hlt
pop
adc
inc
out
inc
sbb
addr16
ins
mov
jl
leave
int3
dec
retf
or
adc
outs
jns
push
outs
or
mov
mov
push
mov
mov
ds
push
das
pusha
(bad)
std
push
fisttp
lods
cmp
retf
imul
scas
and
pop
push
or
inc
xor
enter
xchg
je
out
dec
jecxz
movs
push
sbb
xor
mov
jne
sub
or
inc
das
das
in
add
jb
and
pop
fdiv
sub
nop
jno
jo
xchg
inc
push
mov
add
xor
int3
ret
adc
loop
mov
div
jae
push
outs
(bad)
(bad)
ds
call
cmp
xchg
mov
and
jmp
add
test
pop
mov
push
fdivr
xor
jo
pop
mov
pmaxub
(bad)
jne
mov
(bad)
cmp
cmps
push
out
xor
mov
aam
(bad)
mov
sub
xor
pop
mov
ret
cwde
and
add
imul
ja
lods
xor
dec
xchg
cmps
add
cmp
out
pop
leave
ror
pushf
mov
shr
jae
sahf
jecxz
pop
jl
out
(bad)
cmp
test
js
fmul
outs
iret
jns
mov
dec
mov
mov
mov
jb
inc
shl
push
sahf
fimul
clc
push
push
mov
inc
and
mov
dec
dec
ret
outs
jnp
sub
inc
jne
cwde
int3
mov
xchg
mov
inc
sbb
jo
pop
in
ror
hlt
mov
xchg
imul
dec
ficomp
xor
loope
cs
pop
mov
push
outs
pusha
mov
sub
das
jo
retf
add
stc
sar
aam
mov
jae
inc
push
lods
rcr
pop
(bad)
out
adc
(bad)
jecxz
nop
jmp
retf
push
sbb
hlt
ds
popa
inc
push
and
push
add
imul
outs
movs
mov
mov
and
adc
retf
xor
push
loopne
jno
mov
xchg
call
ins
in
inc
mov
inc
cmp
xor
push
je
xchg
fadd
shr
inc
scas
outs
add
pop
repz
push
aas
in
pop
loope
imul
jge
sub
cmp
call
jnp
jne
test
xchg
dec
adc
(bad)
std
inc
inc
mov
popf
or
fisttp
fwait
ins
xor
adc
push
sbb
fmul
mov
div
and
loop
das
dec
mov
jecxz
sub
jb
sbb
test
fwait
xchg
sbb
ds
bound
(bad)
sbb
(bad)
fwait
add
mov
lea
jg
dec
jmp
fs
imul
jmp
test
(bad)
popa
inc
adc
adc
inc
ins
cmp
(bad)
cmp
jle
into
mov
imul
mov
xlat
jb
sub
mov
and
sbb
js
xchg
inc
cli
mov
sub
mov
xor
add
scas
jecxz
sub
test
sbb
test
in
xor
jbe
call
loopne
rcr
pop
or
fisttp
sub
lods
imul
stc
fld
jns
mov
cli
fs
out
jb
pop
sbb
sub
push
sbb
cld
jo
jmp
dec
js
xchg
mov
mov
arpl
inc
aad
jg
es
retf
mov
leave
add
stos
inc
jno
add
xchg
rol
movs
(bad)
mov
push
xchg
in
mov
push
mov
leave
cs
pushf
repnz
pop
(bad)
ror
sti
cdq
ins
push
jmp
add
inc
movs
ret
dec
ss
jnp
jge
enter
cwde
ds
xchg
dec
int3
jl
loopne
mov
xchg
sub
sahf
ins
inc
pop
clc
and
rol
push
jge
add
push
mov
(bad)
das
sub
add
imul
add
or
repz
xchg
adc
and
inc
scas
inc
(bad)
aaa
loope
imul
push
out
or
std
mov
vmwrite
mov
repz
cli
xchg
and
cld
xchg
pop
jnp
(bad)
shl
mov
cmps
gs
scas
rol
pop
mov
ja
xor
xor
push
mov
adc
in
push
call
mov
retf
cmp
mov
sub
lds
push
addr16
dec
les
ret
call
and
cdq
inc
add
(bad)
stos
in
shr
push
pop
dec
lds
mov
imul
inc
mov
test
inc
sub
pop
popa
inc
or
cmp
scas
mov
cmps
(bad)
adc
xchg
xor
adc
mov
cmp
stos
popa
jl
or
psubq
bound
dec
(bad)
or
in
jno
and
mov
cmps
loope
add
pop
push
aam
cmp
pop
xor
aad
dec
add
jmp
daa
inc
repz
leave
stos
(bad)
nop
pushf
out
and
push
and
push
pop
ror
mov
js
sub
test
sub
mov
out
pop
xor
test
fbstp
loopne
inc
mov
xchg
mov
shl
out
addr16
pop
cmp
test
mov
sub
jmp
or
(bad)
lods
jns
cmp
lds
jbe
xor
lds
lea
fst
popf
cmp
pop
add
xchg
call
cmps
rcr
add
stos
les
jmp
dec
call
xchg
push
or
mov
push
gs
or
and
xchg
adc
add
lds
aas
in
js
pop
ins
sub
lods
fldlg2
scas
push
repz
push
adc
out
pop
push
mov
sub
jp
jmp
cmp
dec
push
stc
adc
mov
ds
push
(bad)
and
xchg
cmps
and
mov
les
push
sub
ja
dec
jmp
scas
cs
je
fistp
pop
test
mov
jecxz
xchg
retf
fidiv
imul
es
add
adc
mov
pop
scas
fdivr
push
xchg
xchg
out
lods
fild
clc
mov
loope
shl
in
hlt
adc
stc
push
dec
push
imul
fwait
jmp
xchg
ror
in
pop
test
iret
shl
sar
adc
xor
(bad)
jmp
repz
sbb
in
iret
dec
xchg
in
inc
mov
pushf
mov
and
mov
cmp
pop
ret
and
nop
or
addr16
ins
je
sbb
cmp
fwait
mov
rol
xor
adc
and
lds
sbb
push
dec
scas
ret
xchg
aas
cmp
js
in
pop
adc
dec
fdiv
add
ror
add
mov
gs
cmc
adc
jae
cld
adc
out
cwde
pop
mov
mov
movs
idiv
stos
repnz
hlt
mov
stos
add
popf
cmp
mov
loopne
inc
das
pop
ret
cmp
xor
and
sub
and
jecxz
fistp
into
jmp
sub
xchg
int
mov
sbb
retf
in
and
or
pusha
xlat
aas
pop
(bad)
ja
add
inc
pop
mov
xchg
push
outs
pop
repnz
sbb
and
xor
mov
inc
and
mov
(bad)
into
sub
scas
jmp
mov
add
sar
xor
jle
sbb
fdiv
xchg
xchg
rcr
and
jecxz
rol
push
fistp
dec
sub
clc
add
mov
and
aas
mov
mov
call
xchg
xor
out
repnz
mov
or
icebp
ds
lahf
mov
xor
repnz
push
sti
std
pop
pop
shl
scas
icebp
mov
leave
pop
xchg
cld
mov
push
mov
stos
cmp
and
sahf
inc
cli
add
(bad)
jmp
adc
sahf
out
arpl
mov
rcl
ret
into
leave
push
fdivr
xchg
add
dec
jbe
(bad)
lock
and
lock
(bad)
sub
shl
or
ror
adc
cmps
fst
dec
mov
mov
pop
xchg
mov
ficom
xchg
loopne
add
and
inc
mov
jp
mov
aam
mov
pushf
mov
adc
xor
pop
sbb
adc
out
adc
pop
mov
mov
pop
dec
scas
mov
pop
bound
sub
mov
scas
mov
mov
in
leave
mov
psllq
and
xor
jge
xor
and
cmp
adc
and
push
fs
push
dec
fdiv
pushf
or
aaa
inc
pushf
xchg
dec
scas
(bad)
cmp
push
push
leave
mov
and
add
stos
pop
jle
xor
loopne
sub
dec
push
dec
scas
mov
push
jb
push
mov
jae
pop
js
and
push
dec
in
sub
pop
and
or
aam
or
fiadd
std
call
js
add
add
pop
jl
ficom
js
test
mov
repz
or
inc
ins
fnstcw
ins
push
scas
mov
punpckhbw
xor
(bad)
int3
test
mov
fdiv
mov
scas
mov
inc
ss
iret
mov
mov
cmps
dec
pusha
aam
adc
add
gs
xor
push
ins
fidivr
add
xlat
mov
pop
js
push
addr16
out
ins
(bad)
and
pop
cmps
je
cli
cld
jp
adc
pop
xchg
jge
xchg
dec
nop
fist
mov
mov
jge
pop
scas
loopne
in
scas
or
call
scas
jb
out
das
pop
outs
xchg
mov
sub
ja
cmps
enter
sub
mov
inc
sbb
dec
mov
inc
sar
leave
ds
fsubr
out
(bad)
fcomp
jo
(bad)
mov
sub
repz
adc
jne
fwait
xor
xor
aam
mov
mov
fbld
xchg
mov
das
push
and
add
adc
xor
(bad)
pop
ins
popf
jbe
ror
std
add
inc
in
dec
push
leave
das
and
xchg
int
inc
or
mov
jl
cmc
bound
inc
test
je
adc
(bad)
mov
repz
cmc
aam
jl
adc
cli
popa
fs
hlt
xchg
fs
push
or
push
rcr
sti
push
clc
cmp
dec
dec
cld
mov
fld
stos
inc
cld
ins
and
sub
movs
pop
data16
add
test
pushf
call
inc
xor
inc
popf
rcr
xchg
pushf
xor
(bad)
fsubr
mov
xchg
push
sub
and
jnp
mov
mov
pop
nop
add
xor
or
es
int3
aaa
inc
jmp
sahf
mov
sub
(bad)
pop
leave
jne
dec
shr
cs
jge
xchg
rcl
xor
lods
xor
add
xchg
repz
mov
mov
stos
mov
addr16
jmp
in
dec
aaa
jg
fyl2xp1
idiv
jne
mov
cmp
push
cld
mov
call
mov
jne
push
lock
std
xor
xchg
jp
retf
mov
xor
lds
push
jmp
aas
cmps
(bad)
fdivr
inc
cmp
mov
push
pusha
mov
(bad)
out
sbb
(bad)
cld
xchg
aaa
mov
sub
data16
lahf
sti
stc
add
(bad)
mov
adc
jnp
(bad)
hlt
pop
leave
add
sahf
daa
mov
js
loope
dec
mov
imul
fdivr
dec
cmps
jnp
hlt
xor
in
xchg
add
sbb
fcmovnb
jns
cmps
inc
fisttp
xchg
retf
sbb
pop
dec
ins
int
les
icebp
inc
pop
add
sbb
aam
mov
mov
xor
push
mov
stc
ins
dec
and
mov
adc
out
mov
std
mov
push
cmp
or
and
sub
scas
sar
add
or
inc
xor
movs
sbb
shl
jbe
loopne
icebp
clc
movs
and
mov
xchg
sub
cmp
cs
mov
int
xor
and
(bad)
xchg
in
call
daa
ins
fst
sub
push
fcom
add
xchg
pushf
mov
push
sub
jle
xor
test
stos
mov
push
pop
push
aad
les
pop
and
cmp
cdq
cwde
retf
daa
adc
pop
xlat
movs
test
or
out
mov
mov
jecxz
push
adc
fcomp
fidivr
lock
inc
push
add
adc
call
fs
add
lods
(bad)
add
jae
lds
sbb
xchg
mov
stos
aam
sub
fstp
add
push
jnp
mov
dec
push
push
mov
mov
xchg
das
cmp
fsub
leave
mov
test
mov
(bad)
mov
clc
push
cli
xchg
sbb
sbb
scas
push
out
dec
push
and
aad
std
mov
aam
and
(bad)
push
mov
jecxz
sahf
std
popa
xchg
paddusb
mov
sub
push
loopne
or
sar
mov
and
dec
and
cmp
std
xchg
sub
jne
test
jp
mov
fnstcw
inc
(bad)
arpl
loope
cwde
or
jns
out
add
mov
test
jg
push
cld
adc
cmp
and
push
mov
aas
stc
movs
daa
cmc
fisttp
ja
aas
mov
add
fild
stc
and
xchg
cmps
jge
add
leave
sti
mov
xchg
pop
leave
int3
je
adc
fistp
sub
pop
or
jmp
xchg
and
movs
sbb
adc
scas
mov
add
and
adc
sahf
ret
inc
push
and
not
mov
loopne
inc
cs
pop
dec
jg
mov
xlat
(bad)
pop
js
fnsave
fwait
(bad)
jmp
mov
es
mov
cmp
add
pop
jns
cmps
and
xchg
gs
xchg
cmps
loop
dec
mov
mov
mov
loope
jb
stos
xchg
pop
rcr
jecxz
das
add
fs
and
(bad)
pop
scas
(bad)
mov
bound
dec
mov
addr16
imul
inc
sbb
rcl
push
mov
xlat
push
xor
out
js
lods
cli
icebp
sub
dec
enter
xchg
add
mov
mov
and
jo
(bad)
cmc
test
jbe
outs
xchg
dec
sub
rcpps
test
jmp
lea
mov
sub
(bad)
dec
mov
fsub
popf
les
rcl
dec
nop
xchg
push
cdq
std
adc
mov
rcr
push
(bad)
pop
push
imul
ins
push
sub
xlat
lahf
test
loop
and
cwde
xchg
jnp
jae
idiv
mov
mov
lock
xchg
push
(bad)
ret
bound
popa
fimul
mov
sub
repz
fisubr
arpl
or
push
ror
pop
out
jae
out
fisub
lods
cmp
jno
sbb
xchg
inc
inc
jns
mov
repz
call
lods
lds
xchg
out
movs
aaa
es
pop
lock
or
in
outs
pop
mov
enter
fwait
xor
pop
push
ins
bound
jns
test
ins
iret
and
aam
(bad)
cmc
push
inc
in
dec
pop
fcos
mov
mov
lock
and
int3
aas
push
(bad)
adc
dec
pop
test
xchg
push
mov
ror
mov
push
xchg
jne
cmps
test
out
xchg
sub
xor
push
clc
pop
cmp
xchg
or
jnp
std
add
mov
add
push
(bad)
mov
mov
rol
mov
jl
je
aad
mov
call
sar
pop
(bad)
ins
scas
repnz
test
jae
movs
mov
inc
out
ins
xchg
loop
gs
ds
mov
(bad)
arpl
inc
sub
add
aas
pop
pop
xor
or
scas
nop
pop
jmp
or
in
xor
push
out
mov
(bad)
xlat
lea
xchg
jmp
xchg
cmps
js
ins
adc
mov
iret
push
pop
dec
scas
fidivr
sti
pop
push
push
adc
(bad)
push
inc
(bad)
dec
pop
sbb
mov
cmp
ret
test
das
jmp
xor
bound
and
cmp
je
shl
mov
shr
imul
push
jl
sti
jmp
dec
mov
std
and
push
cmc
aaa
leave
jnp
rcl
sbb
and
rcl
test
(bad)
mov
cld
out
lea
mov
scas
inc
xchg
lods
or
mov
xchg
dec
out
dec
cs
pusha
ss
rcr
aam
fld
int3
cmc
aam
sar
push
js
xchg
rol
out
retf
lea
sub
jne
cmc
mov
xor
jmp
inc
cwde
pop
mov
xor
push
inc
mov
aam
aaa
btc
enter
xchg
out
cwde
aaa
sub
in
fld
xchg
int3
cmp
jns
mov
mov
fs
retf
adc
fidiv
push
jle
bound
ret
out
(bad)
cmp
rcr
push
inc
mov
inc
push
test
adc
mov
es
adc
je
pop
lock
cmp
xor
xchg
nop
sbb
and
lock
xor
std
sbb
add
imul
pop
xor
pushf
or
jp
add
xchg
pop
push
pop
in
mov
cwde
jnp
pusha
push
cmp
ret
xchg
push
imul
dec
pop
out
xchg
repz
cmp
stos
xchg
pusha
cmp
cmp
jle
mov
call
and
cmp
xlat
test
pop
push
mov
fdivr
into
jmp
shl
mov
push
adc
inc
cmp
fnstcw
std
retf
stc
mov
popa
movs
mov
pusha
jnp
jp
cld
jge
jg
in
adc
int
dec
inc
mov
in
mov
sub
jne
push
and
out
xor
test
inc
sub
bound
clc
loope
cmp
xchg
jno
lods
test
jp
jmp
mov
adc
jb
inc
in
pop
xor
outs
sub
sub
jl
jg
push
retw
int3
arpl
pop
(bad)
inc
jb
cmp
pop
int
into
xchg
jns
test
arpl
xchg
sub
xchg
mov
or
out
stos
xchg
fwait
push
jae
mov
push
and
inc
mov
pop
scas
js
dec
jmp
scas
(bad)
mov
inc
sbb
jle
add
stos
mov
mov
addr16
pop
ret
jg
add
fnstsw
sti
stos
push
pushf
fcomip
(bad)
pushf
stos
push
aas
sbb
(bad)
add
lea
inc
fcmovnu
inc
xchg
call
test
mov
xor
jb
fwait
push
pop
loope
or
mov
fld
add
cli
add
in
sub
adc
cmpxchg8b
clc
pop
xor
jbe
ins
xor
cmp
(bad)
hlt
mov
arpl
es
adc
stc
jbe
jmp
push
scas
pusha
test
sub
(bad)
(bad)
mov
pusha
cmc
jmp
daa
dec
lods
ins
test
imul
pop
push
mov
les
mov
push
ss
sbb
sbb
stos
adc
aas
adc
mov
xor
mov
mov
mov
aad
adc
jg
inc
div
jo
stos
cmc
popa
fidiv
repnz
scas
push
int3
cmc
mov
lds
inc
addr16
jg
bound
jmp
xchg
outs
out
adc
adc
arpl
stc
sar
jmp
int
ins
or
retf
fmulp
movs
jmp
les
mov
and
cli
pop
jmp
sub
mov
xchg
pop
and
sub
push
sbb
repz
mov
pop
call
add
dec
popf
mov
inc
movs
fisubr
out
mov
inc
les
js
test
sub
movs
in
jnp
xor
call
inc
data16
inc
shl
jb
add
fmul
xor
mov
inc
cmp
je
dec
sbb
push
dec
jo
sbb
imul
rcr
out
ins
movs
mov
lock
(bad)
call
ror
ja
push
xchg
adc
shr
bound
div
test
inc
retf
mov
lock
fadd
add
add
inc
cmp
sti
pop
pop
push
mov
inc
mov
je
add
test
dec
xor
jnp
xchg
arpl
jnp
outs
dec
imul
push
push
clc
int
push
pop
push
add
stc
mul
push
cmp
xor
ja
inc
xchg
out
inc
(bad)
mul
adc
xor
or
ficom
rol
sbb
fsub
cmp
add
mov
inc
data16
fisttp
leave
push
out
mov
sbb
call
push
xchg
mov
xlat
mov
mov
gs
xchg
dec
cdq
mov
je
mov
rcr
cld
daa
(bad)
stc
push
into
add
js
lods
xchg
add
mov
sbb
mov
icebp
mov
add
jbe
sar
stos
fimul
arpl
int3
ins
mov
cmp
sbb
gs
stos
jmp
and
cdq
popa
gs
push
inc
pop
repz
rol
dec
pop
and
call
mov
xchg
inc
sub
pop
mov
lahf
pop
jmp
dec
retf
sub
jmp
lds
sub
sti
(bad)
out
outs
mov
xor
imul
push
std
pop
(bad)
pop
jmp
mov
das
cs
jmp
push
repz
imul
je
retf
jge
lods
sti
mov
ret
add
jb
test
mov
xchg
mov
jp
mov
sbb
jl
rcr
mov
movs
sbb
jp
mov
sbb
mov
push
sub
in
or
mov
mov
sbb
inc
ret
mov
or
int3
xor
je
dec
scas
mov
sahf
mov
repnz
xchg
xchg
sbb
push
rol
sbb
and
adc
sbb
mov
(bad)
push
pop
lock
jbe
cli
mov
aam
cmp
mov
mov
test
jae
ror
jne
ror
mov
push
cmp
sbb
fcomp
pop
sbb
ja
leave
arpl
mov
icebp
sbb
pop
mov
mov
ror
dec
jo
xor
cdq
aad
nop
loope
xor
ins
xor
pop
(bad)
fisubr
and
les
mov
jp
add
sub
fcom
or
mov
xchg
jmp
(bad)
enter
jnp
bound
dec
mov
fcomp
mov
scas
cmp
or
cmps
sub
pop
xchg
xchg
ins
sbb
jl
add
popa
outs
dec
popf
add
adc
and
(bad)
mov
jo
xor
bound
xchg
add
out
movs
loop
clc
inc
jmp
pop
sub
addr16
lahf
pop
pop
inc
dec
sbb
fadd
xchg
add
jecxz
xchg
icebp
add
aas
add
mov
out
pop
dec
icebp
test
repz
or
das
and
out
jo
pop
adc
and
dec
push
cmp
fwait
lds
lods
call
push
enter
pop
je
jnp
and
int3
(bad)
ficom
sbb
push
(bad)
mov
xchg
pop
inc
xchg
retf
sub
adc
jecxz
mov
dec
hlt
cmp
scas
clc
adc
inc
adc
fs
fisubr
xor
int
icebp
or
dec
ret
sub
mov
scas
ja
jl
and
cmc
stos
cmc
dec
fs
pop
cmp
xor
push
xor
mov
in
or
dec
scas
out
in
inc
cmps
and
(bad)
popf
pop
dec
addr16
mov
out
outs
and
and
xor
fwait
test
repz
sub
mov
in
push
xor
pop
xchg
cmp
inc
jmp
es
lods
pop
dec
xchg
xchg
hlt
xchg
pusha
inc
ficom
pop
xchg
cmc
addr16
rcr
rol
mov
jmp
or
(bad)
enter
sahf
(bad)
imul
call
adc
inc
mov
push
ins
xchg
sub
(bad)
daa
xor
pop
xchg
cmp
movs
(bad)
inc
test
stc
sar
mov
push
push
mov
and
push
xchg
or
cmp
cmp
inc
int3
xchg
nop
adc
adc
xor
sub
or
mov
xchg
adc
in
loop
cmovno
lea
ret
lahf
and
mov
(bad)
(bad)
fcmovu
gs
jge
popf
fcom
jle
adc
push
adc
mov
mov
pusha
mov
cli
add
cmp
mov
sbb
and
sbb
xchg
add
je
test
lock
lds
out
loop
xchg
xchg
add
lea
or
cwde
and
aam
rol
and
dec
jp
es
sbb
pusha
les
sub
pusha
adc
movs
push
mov
sub
adc
lds
xchg
xor
sar
add
retf
jmp
retf
mov
std
sar
fbld
mov
icebp
mov
test
push
or
jae
mov
ins
add
pop
ins
out
stc
mov
sbb
ret
lock
stc
xor
jmp
shl
iret
xor
jae
cmp
fsubr
push
dec
xchg
loop
pop
push
mov
add
ret
pop
inc
ja
test
fdivr
dec
push
es
dec
cmp
daa
add
mov
xor
test
pop
push
jae
jo
(bad)
sbb
push
jp
in
mov
aad
inc
jecxz
mov
xchg
dec
cmp
cmp
nop
jns
xchg
or
mov
ins
out
(bad)
jp
fadd
add
add
xchg
outs
das
leave
jl
dec
mov
ds
or
rol
outs
fwait
sbb
shl
frstor
lods
or
cmc
cmp
cld
aas
test
lods
(bad)
xchg
mov
stos
jbe
fldcw
js
cmps
int
xor
add
fist
out
(bad)
stos
xlat
jl
lods
and
shl
test
out
inc
dec
xchg
fs
arpl
icebp
jb
aas
cld
dec
pusha
push
cmp
stos
jb
jmp
or
mov
sub
into
mov
and
sub
mov
fistp
fcom
lock
pusha
or
dec
jns
cdq
pusha
mov
std
push
push
pop
pushf
or
fadd
mov
ds
les
nop
inc
aam
test
loop
loopne
lock
push
jmp
mov
outs
pop
add
cmp
or
mov
(bad)
or
(bad)
cmp
loope
jns
test
cs
je
or
mov
cwde
inc
add
sub
loope
dec
jae
sahf
aaa
sub
jb
sbb
loopne
xor
aad
jmp
adc
pop
pop
(bad)
aad
data16
(bad)
fistp
cli
je
(bad)
jmp
add
pop
sti
pop
daa
(bad)
movs
fcom
xchg
rcr
mov
sbb
jmp
mov
sub
in
sub
daa
(bad)
rol
call
cmps
int3
(bad)
retf
push
aad
loopne
stos
add
out
fs
or
mov
mov
fstp
(bad)
sahf
pop
cmp
lahf
xchg
sar
retf
push
test
hlt
cs
jg
fld
xchg
test
push
lods
and
add
push
popf
test
popa
nop
sbb
ins
jo
dec
lahf
pushf
rol
mov
or
js
retf
pop
jae
push
pusha
xchg
xchg
pusha
mov
jp
enter
out
mov
lods
in
cld
sahf
je
pop
rcl
stc
add
mov
jle
mov
imul
sub
std
clc
iret
sbb
movs
scas
cmc
call
out
(bad)
mov
sahf
or
scas
dec
sub
push
loop
retf
and
imul
stos
movs
mov
daa
hlt
and
test
sbb
mov
xchg
xchg
pop
jge
or
test
mov
loop
add
in
dec
pop
sbb
or
repnz
call
xchg
xor
cmp
pop
outs
cmp
std
jns
xor
cmp
loop
out
outs
cmp
dec
jmp
pop
enter
sbb
sbb
and
mov
xchg
mov
je
xor
jnp
(bad)
xchg
push
jae
cmp
xorps
cmp
jp
or
fistp
jp
rcr
mov
arpl
or
int
dec
pop
jns
(bad)
imul
ret
mov
xchg
push
pop
lahf
mov
mov
movs
pop
mov
dec
(bad)
leave
mov
xchg
pop
pop
xchg
or
ret
jo
stc
add
sbb
loopne
sbb
fnstenv
in
pop
fcom
inc
mov
xchg
jle
pcmpgtw
jnp
sbb
frstor
xchg
dec
rep
fisubr
enter
repnz
sub
fsubr
inc
dec
loop
jnp
dec
stos
das
ds
sahf
mov
frstor
sbb
out
adc
mov
jae
cwde
movs
or
stos
push
mov
pusha
int
out
xchg
out
push
xchg
fdivr
inc
jl
ins
pop
imul
scas
pop
cmc
stos
scas
inc
mov
cmp
xchg
mov
cmp
jmp
push
adc
jbe
inc
fcomp
icebp
mov
push
leave
dec
ins
out
jmp
xor
adc
loope
pop
push
mov
cmp
mov
(bad)
cs
jo
shr
pop
sub
clc
ret
push
imul
push
lea
cld
ret
fsubp
and
and
scas
test
xchg
add
outs
mov
push
xchg
fstp
mov
add
push
enter
int3
push
mov
popa
aaa
jge
or
dec
ret
dec
xchg
or
inc
inc
pop
jae
jmp
imul
and
jmp
(bad)
(bad)
enter
sbb
test
stos
mov
inc
push
rol
sub
mov
sahf
ds
pop
inc
cs
retf
stos
jp
push
in
dec
iret
popa
fadd
sbb
jmp
call
fs
fs
pushf
jo
test
xchg
test
inc
sbb
and
add
stos
add
cld
pop
inc
std
push
or
cs
dec
push
out
sbb
pop
and
daa
jmp
xor
mov
pop
sahf
dec
loope
int3
fnstcw
mov
test
mov
pop
call
repz
jno
jl
jg
aas
cmc
xor
cld
xchg
loope
inc
ss
pushf
cmps
sub
retf
not
out
test
retf
jge
lock
push
out
test
ret
cmp
fisttp
jb
jl
mov
add
fdivr
out
and
call
push
xchg
lea
mov
ins
mov
mov
inc
cli
fcomi
add
xor
les
in
dec
mov
mov
(bad)
paddsw
push
setae
and
jnp
iret
jne
or
xor
mov
cmps
(bad)
sbb
mov
enter
xchg
fild
pop
mov
icebp
pop
push
mov
out
xchg
cmps
xchg
test
inc
pop
and
mov
outs
dec
lods
fcomp
das
pop
popa
cwde
popf
lods
sbb
aaa
sar
mov
mov
pop
je
(bad)
cmp
fmul
push
dec
ds
aad
xchg
sti
sub
add
xor
movs
imul
sub
mov
add
cmps
dec
ret
xchg
mov
and
push
xchg
(bad)
stc
add
stos
jmp
cwde
mov
mov
outs
imul
leave
mov
mov
aad
xchg
scas
(bad)
js
sbb
call
aad
inc
dec
loope
adc
adc
xcrypt-cfb
cmps
out
jmp
std
ret
test
fadd
and
fs
loopne
les
sub
stos
div
or
test
test
div
adc
mov
xor
in
and
loop
xor
dec
sahf
adc
inc
mov
mov
mov
(bad)
es
and
jmp
ss
mov
mov
rcl
ret
pop
xor
mov
xor
loopne
js
push
and
inc
mov
cmp
cli
sbb
rol
xor
and
inc
retf
fs
ret
add
cmc
loope
cdq
mov
adc
fiadd
and
dec
pop
fstp
test
movs
aam
push
cmc
pop
fadd
aad
int
mov
jg
imul
mov
dec
cmps
jle
ret
mov
mov
mov
push
hlt
sub
sub
inc
mov
push
adc
stos
add
ret
aaa
xor
cmps
inc
jmp
shr
and
fwait
add
jae
mov
push
dec
imul
dec
inc
popa
sbb
dec
push
xor
cmp
clc
fcomp
retf
mov
lea
inc
push
loopne
mov
jmp
mov
icebp
jns
test
push
xor
out
nop
fs
test
mov
cld
fcmove
mov
adc
xchg
mov
jae
or
mov
mov
adc
inc
imul
stos
ror
or
mov
retf
inc
addr16
ds
dec
test
lahf
aas
rol
and
xchg
out
sub
popa
ss
inc
js
pusha
aas
mov
sbb
or
pop
cld
loop
cli
cmc
fsub
shl
sub
xor
fisttp
pop
and
out
stos
dec
or
jle
mov
and
sbb
fmul
xchg
adc
jo
xchg
jmp
ror
push
ja
loope
std
fld
xor
rol
stos
ret
retf
int
loop
out
test
jb
push
enter
dec
loop
fst
scas
aaa
bound
mov
push
loope
cdq
mov
mov
mov
jge
mov
mov
mov
imul
into
cmp
in
pop
pop
mov
scas
mov
xchg
iret
clc
mov
push
push
mov
iret
(bad)
mov
pop
shl
(bad)
xor
in
sub
and
aaa
xchg
enter
mov
je
mov
inc
jb
inc
out
hlt
je
adc
sbb
ds
fisubr
fsub
add
je
and
(bad)
popf
mov
test
out
fdiv
inc
or
dec
mov
inc
call
jge
mov
loopne
inc
rcr
stc
cmp
mov
std
mov
xor
test
mov
inc
mov
popa
mov
out
sbb
scas
movs
movs
je
jns
adc
into
push
and
ror
(bad)
xchg
ja
aas
fdivrp
mov
mov
in
lahf
(bad)
cmp
pop
sbb
jmp
jle
je
(bad)
pop
test
rol
pop
cmps
mov
adc
lahf
shl
sbb
and
xlat
int3
jle
push
int
xor
inc
(bad)
jns
inc
iret
shr
outs
push
sti
push
cli
mov
sub
push
repnz
in
mov
into
inc
test
lods
dec
xchg
cwde
dec
stc
jmp
retf
dec
pop
es
xchg
sub
sub
mov
stc
sub
sub
add
outs
pop
into
out
pop
sub
jne
loopne
div
mov
(bad)
push
lds
cld
clc
pop
xor
rcr
dec
ins
pop
test
xor
nop
jbe
xchg
and
mov
push
mov
jmp
add
mov
mov
jle
rcl
das
and
lahf
xor
fwait
enter
xchg
xlat
fdivr
mov
sub
pop
shr
cmp
(bad)
aad
ret
cmp
jae
mov
fs
cs
or
sbb
in
movs
sbb
or
aam
xor
dec
pop
lods
mov
aas
test
and
inc
movs
loopne
sub
pop
mov
push
sti
jbe
mov
jno
push
daa
push
outs
repnz
mov
repz
cs
cmp
xchg
lods
adc
(bad)
rcl
aam
pop
int
mov
les
adc
cli
stc
xchg
dec
fnsave
jp
jmp
lahf
mov
mov
jecxz
fimul
mov
or
or
hlt
jne
xor
push
pop
cld
add
outs
adc
shr
pop
sbb
add
xchg
or
(bad)
outs
(bad)
jl
in
push
ret
mov
push
sbb
test
ja
dec
bound
sahf
pop
xchg
mov
xchg
jl
fcom
xlat
mov
mov
out
sahf
lods
cmp
mov
xchg
not
jp
push
aaa
mul
popa
popa
xor
add
mov
jg
adc
enter
sbb
push
icebp
div
mov
scas
pop
(bad)
mov
pandn
mov
scas
mov
sahf
mov
cmp
popa
mov
in
pop
fld
inc
mov
cmps
or
outs
and
mov
das
dec
ret
loope
int3
mov
mov
outs
retf
pop
stos
inc
mov
cmc
xor
js
int3
mov
lods
hlt
inc
movs
inc
xchg
sbb
popa
push
or
(bad)
outs
fucomip
icebp
jno
mov
icebp
adc
es
retf
mov
popa
loopne
push
jmp
or
test
mov
sub
stc
sbb
jp
test
adc
pop
cdq
mov
jmp
cmp
mov
or
jbe
cmp
ins
inc
mov
xor
cmc
fbstp
out
nop
repz
ins
xor
loope
ins
jmp
and
mov
cmp
jmp
xor
sar
push
add
sub
and
jmp
jge
xor
sti
mov
das
sbb
ret
mov
lahf
enter
add
or
mov
fbstp
mov
call
hlt
mov
fadd
mov
jp
fstp
or
jge
js
push
push
ret
(bad)
cmp
xor
out
pop
outs
lock
pusha
fld
cmps
push
dec
dec
in
xchg
adc
pop
call
sub
xor
pop
fnstsw
jmp
xor
pop
mov
icebp
movs
mov
lea
les
aad
cmc
ja
mov
dec
sbb
out
mov
mov
shl
push
xchg
addr16
outs
sub
mov
ins
pusha
sub
rol
sti
gs
jmp
sbb
jb
inc
mov
jns
out
imul
fldenv
cdq
mov
(bad)
pop
or
push
jb
pop
xor
jnp
iret
mov
stc
jle
pusha
xchg
sub
lock
outs
xabort
sbb
add
lea
popa
cmps
retf
ins
jmp
or
jg
xchg
push
sub
fnop
inc
push
pop
rcl
fsub
hlt
ins
push
mov
mov
repz
js
xchg
dec
cmps
retf
adc
push
cmp
int
repnz
sub
cmps
mov
pop
not
adc
mov
std
and
dec
stos
and
test
jmp
adc
mov
or
mov
pop
mov
xor
icebp
fistp
fdivr
xchg
and
push
mov
pop
je
pop
fucom
xor
test
dec
fadd
pop
or
mov
or
arpl
push
mov
push
sbb
(bad)
sti
pop
cwde
ja
jmp
mov
xor
scas
sub
mov
shrd
ss
gs
jmp
xchg
inc
ins
xchg
cmps
call
dec
les
xor
(bad)
hlt
xchg
dec
add
(bad)
aad
and
rcr
push
aad
cdq
fisubr
inc
and
(bad)
gs
mov
pop
rcl
cmc
sbb
xor
sub
pop
cmp
jnp
push
retf
push
cmc
mov
add
ins
call
mov
dec
in
mov
popa
and
xchg
and
sub
nop
jne
push
cmp
(bad)
ja
add
in
std
sbb
add
daa
cmp
cmp
push
test
and
movs
clc
mov
sub
xchg
and
movs
push
aaa
movs
addr16
push
ins
in
mov
cdq
int
rol
pop
xlat
repnz
mov
sbb
push
mov
mov
cmc
and
pop
or
in
mov
mov
sbb
fidiv
gs
test
in
xchg
xchg
xchg
aaa
jecxz
inc
mov
xchg
out
and
pop
test
repz
mov
sbb
lock
or
mov
mov
xor
push
out
inc
mov
loop
push
cdq
inc
pop
push
stc
push
cwde
cmp
pop
pop
or
cmp
mov
adc
cs
pop
pop
or
or
sub
ret
lods
movs
jbe
push
clc
push
jnp
sahf
nop
and
sti
out
std
imul
test
add
jp
dec
inc
pop
fimul
push
jno
mov
mov
jmp
in
cli
push
sub
pop
add
sub
stos
(bad)
xchg
push
push
push
and
scas
ret
pushf
ds
and
outs
call
popa
ss
fisubr
push
pushf
ret
push
lds
ror
std
jp
push
stc
call
dec
pushf
cmp
pop
inc
mov
addr16
inc
int3
ss
xchg
pop
je
push
mov
push
mov
push
int
(bad)
(bad)
sub
jmp
imul
jg
xchg
lahf
fdiv
scas
test
push
cmc
fyl2x
mov
adc
sbb
pop
mov
(bad)
imul
call
mov
outs
mov
or
sbb
shr
xchg
fadd
or
leave
call
sub
xor
dec
xor
jp
(bad)
in
adc
arpl
std
popa
(bad)
ror
mov
sti
and
inc
inc
pop
add
mov
dec
adc
inc
popa
pcmpeqd
jecxz
mov
aaa
shl
iret
sub
paddusb
ins
jge
dec
das
fucomp
push
jge
inc
xor
ret
cmps
(bad)
and
mov
jecxz
inc
retf
in
call
xchg
cmps
lods
repnz
xor
aaa
sub
arpl
call
push
cmp
(bad)
movs
iret
inc
(bad)
rcl
fstp
pop
push
or
loope
stc
mov
mov
mov
jmp
jo
mov
jmp
pmaxsw
dec
and
xchg
repz
push
ret
std
or
mov
fiadd
and
rol
sbb
pop
sub
std
enter
cvtps2pd
mov
loop
lahf
aad
sub
xor
push
sar
ret
jo
sub
push
add
mov
and
jg
dec
pop
cmp
mov
xchg
cmp
not
push
mov
fwait
add
lahf
pop
dec
pop
pop
jno
iret
dec
aad
cld
jae
div
and
in
jl
pop
mov
xor
repz
mov
jge
mov
fimul
jnp
fwait
retf
cmp
js
push
xor
les
inc
cli
out
imul
push
push
addr16
neg
pop
ret
dec
dec
in
jg
retf
nop
jge
mov
push
out
je
lahf
mov
xchg
push
adc
cmc
push
cwde
ds
fild
jno
mov
retf
add
cmpxchg
push
pusha
inc
cmp
or
icebp
(bad)
js
cli
movs
cmp
mov
das
mov
adc
fdiv
jecxz
pusha
ins
mov
cmp
(bad)
out
outs
pop
repz
pop
jmp
(bad)
hlt
repnz
mov
jns
aam
stc
aad
dec
mov
or
pusha
add
jg
movs
pop
pop
jns
pop
out
ins
test
jle
mov
sub
sub
inc
inc
add
cmps
sbb
imul
cwde
jae
pop
dec
call
loope
enter
mov
out
lods
stc
push
xchg
pop
mov
sahf
mov
mov
or
xchg
mov
rol
mov
jb
aaa
jmp
or
push
outs
pop
icebp
repz
sbb
dec
out
(bad)
test
pop
xor
xor
push
shl
mov
mov
loop
out
push
or
test
or
sar
imul
shr
aaa
cld
add
mov
push
add
mov
pop
gs
std
jge
scas
pop
mov
inc
mov
and
ss
imul
push
dec
pop
fist
cmp
and
xchg
mov
pop
inc
sti
jmp
xchg
(bad)
jmp
arpl
adc
enter
call
jae
leave
sahf
(bad)
fisttp
or
sti
mov
or
sub
int
cmp
movs
mov
mov
cmp
cmc
shl
or
aad
std
cmc
test
dec
pop
sbb
cmp
mov
test
push
loopne
cmp
or
cmps
(bad)
fsubrp
cmp
daa
in
into
js
add
repnz
and
sbb
and
xor
push
fmul
hlt
or
sbb
dec
popa
push
jge
sbb
push
int
push
xchg
icebp
in
mov
ds
jbe
pop
in
clc
ret
js
mov
mov
(bad)
popf
xor
mov
xor
or
dec
pop
out
push
and
push
dec
cmps
les
lea
outs
push
in
push
bswap
jae
lds
mov
leavew
leave
mov
pushf
lock
mov
xchg
sub
imul
jo
push
(bad)
in
pop
add
sub
jae
es
imul
iret
push
xor
inc
int
cld
xchg
push
push
popa
es
sbb
inc
mov
and
cmp
icebp
adc
jae
adc
mov
sar
jmp
mov
inc
mov
push
scas
jbe
xor
int
sub
test
jmp
hlt
add
daa
lods
xor
arpl
cmps
es
xchg
aad
jp
lahf
cdq
ins
sbb
and
sub
(bad)
ins
lods
xchg
and
inc
push
xor
jp
xor
shl
int
outs
cmp
pop
shl
js
inc
and
leave
add
aad
test
push
leave
lods
dec
enter
add
or
cs
inc
push
movs
mov
push
fadd
push
loopne
mov
das
push
cmps
les
cmp
pop
(bad)
or
loope
or
dec
sbb
inc
xchg
sbb
or
adc
or
xor
mov
stc
mov
adc
cld
int
fld
test
and
xor
fnstsw
movs
sbb
xchg
iret
mov
inc
div
aas
cmp
or
adc
data16
or
mov
cdq
test
push
adc
cwde
cwde
(bad)
movs
dec
or
popf
sub
fstp
sbb
jo
out
sub
pop
in
movs
lahf
push
and
les
mov
fld
hlt
mov
popa
pop
addr16
test
repnz
sbb
xchg
(bad)
shl
jo
pop
imul
cmp
outs
loopne
mov
cmp
mov
and
cwde
das
inc
add
jmp
cmp
aad
inc
xlat
fild
adc
inc
popf
mov
frstor
pusha
cmps
cmc
aaa
xor
sbb
pop
pop
mov
cmps
(bad)
ds
cmp
(bad)
cmp
pop
fidivr
pop
jecxz
sub
sub
mov
cld
or
fist
imul
in
pop
pusha
in
push
into
test
fcomip
jae
jl
in
push
leave
inc
jae
retf
or
or
push
scas
scas
xchg
pop
and
mov
adc
jo
loop
out
xchg
mov
push
xchg
cmp
addr16
mov
call
mov
pop
fmulp
jle
ds
cs
mov
inc
add
imul
xchg
in
xchg
mov
xchg
mov
out
sbb
jg
sar
mov
dec
jmp
jno
in
mov
adc
std
dec
stos
(bad)
mov
xchg
test
add
(bad)
aad
cmp
and
jecxz
fs
ja
imul
std
(bad)
mov
or
pop
scas
xor
(bad)
inc
dec
inc
repnz
fadd
mov
mov
fsubr
in
mov
ret
xor
adc
retf
xor
les
jnp
adc
xchg
repnz
xchg
call
xor
or
adc
(bad)
mov
shr
adc
(bad)
das
mov
shl
pop
addr16
fdiv
jecxz
shr
jns
xor
cs
and
or
sbb
into
push
xchg
stos
inc
jbe
ret
mov
mov
mov
jle
call
mov
xchg
pop
mov
std
push
sub
add
(bad)
fdiv
je
cmp
add
retf
mov
cld
dec
dec
aam
sub
fld
cmp
scas
jmp
imul
fs
mov
pop
mov
xor
mov
pop
xlat
ret
inc
mov
pushf
sbb
or
(bad)
jl
das
dec
sbb
xor
cmp
xor
pusha
jns
cmp
sti
mov
adc
rol
adc
inc
sub
inc
dec
fs
pushf
repnz
jnp
sub
inc
xor
je
hlt
in
add
cmps
rol
leave
inc
rcl
sbb
in
cmps
cmps
jg
sub
mov
stc
mov
fwait
pop
inc
dec
in
inc
cs
aaa
push
int
call
pop
sahf
sub
std
cmp
xor
jbe
jecxz
ffree
mov
cmps
test
call
sbb
sbb
popf
call
mov
cmp
mov
mov
and
push
out
cmc
mov
rcl
inc
push
xchg
mov
and
mov
ror
add
dec
(bad)
xlat
inc
lock
sti
xchg
mov
mov
and
add
sbb
gs
pop
cmps
cmp
sub
bound
leave
mov
add
int
pusha
shr
cmp
dec
movs
imul
jo
inc
mov
in
data16
lahf
jbe
adc
data16
add
sbb
mov
lock
dec
push
sub
or
into
ins
js
cwde
jmp
je
mov
jno
jmp
fs
jne
pusha
adc
clc
lds
les
mov
xchg
iret
adc
push
jg
mov
sbb
xchg
mov
and
das
mov
mov
mov
loopne
sbb
sbb
push
inc
sbb
jge
int
lods
lods
sub
inc
jmp
xchg
sbb
or
push
and
sbb
jg
add
push
int3
out
push
xor
push
call
cmp
add
xchg
sbb
inc
mov
fwait
cs
cmp
sbb
stc
sbb
add
ins
out
push
hlt
cmps
call
and
scas
call
sub
cmps
inc
jmp
dec
shl
aam
xchg
add
dec
fbld
mov
shl
xor
sbb
neg
jl
push
pop
sbb
sub
pop
cdq
fild
dec
ficom
add
cmps
neg
mov
add
lahf
call
ret
stos
jbe
push
stc
retf
mov
and
std
xor
push
int
jbe
mov
ja
pusha
adc
sub
dec
push
into
addr16
arpl
paddw
mov
push
pop
inc
mov
jmp
push
fwait
js
icebp
pop
push
jae
pop
jecxz
mov
mov
mov
(bad)
in
arpl
xchg
xchg
inc
xchg
stos
aas
jb
fdiv
pop
inc
int
mov
mov
jmp
push
fisttp
jge
mov
or
sub
sub
adc
pop
cli
adc
stc
xchg
test
pop
and
scas
add
enter
mov
cli
daa
xchg
push
dec
lea
pop
xchg
or
mov
outs
cmc
ror
test
int
push
js
add
add
inc
jns
icebp
and
test
mov
clc
adc
iret
or
gs
jns
sub
mov
inc
fwait
retf
or
jae
or
cmp
add
cmps
adc
loopne
mov
cmps
cmp
daa
xchg
jb
xor
push
mov
fcom
jnp
add
int3
stos
push
(bad)
cmp
in
mov
dec
cmp
lahf
mov
retf
pop
data16
pop
mov
retf
stos
mov
inc
push
and
sti
push
dec
adc
imul
shr
ret
fs
cwde
push
jge
movs
mov
std
mov
xor
dec
mov
sahf
aas
ret
gs
je
mov
and
or
xchg
in
and
push
pop
xor
(bad)
fiadd
add
push
add
pushf
inc
cmc
add
mov
out
push
jecxz
mov
dec
icebp
and
fmul
fwait
cmp
cs
into
mov
(bad)
in
sbb
mov
jp
shl
int3
popf
dec
out
or
fcmovu
ror
xchg
adc
xor
retf
das
sub
push
cld
ins
jmp
ss
(bad)
jo
test
jmp
sahf
rcl
inc
cmp
inc
push
iret
(bad)
add
ja
inc
or
mov
mov
jmp
iret
push
sar
mov
jnp
arpl
push
dec
std
lds
test
cli
leave
mov
fs
cmp
je
mov
push
cs
jmp
pop
push
push
xchg
int3
(bad)
ins
ins
std
pop
xchg
dec
cmp
sub
xchg
cmp
repnz
mov
cs
xor
outs
push
cli
stos
or
bound
or
mov
push
inc
ins
arpl
aas
or
mov
(bad)
je
adc
clc
xlat
cmp
mov
in
sub
push
mov
pusha
cmp
test
sbb
xor
push
shl
(bad)
cmp
sub
iret
sbb
out
pop
push
sub
lods
push
xor
ins
inc
pop
xlat
mov
movs
imul
or
mov
and
xchg
cs
and
xchg
out
test
jmp
xchg
pop
and
adc
pop
loope
jbe
pop
cmps
ins
cld
imul
xor
sub
sbb
enter
xor
(bad)
call
out
mov
cmp
pop
dec
sub
cmps
cs
pop
imul
neg
cmp
xor
mov
iret
dec
lods
out
push
cmc
mov
mul
sbb
(bad)
or
out
push
dec
cmp
fcmovne
mov
xchg
adc
mov
sub
lea
shr
push
xchg
je
pop
lods
inc
dec
fnstcw
inc
dec
xchg
hlt
push
push
mov
xchg
outs
pushf
mov
mov
mov
psraw
add
stos
fldl2t
clc
lea
cmp
jne
cmp
cmc
das
xchg
cmp
xchg
xor
push
push
lods
and
mov
dec
inc
mov
outs
fsin
xchg
add
and
sbb
push
mov
sub
call
pop
xchg
out
sub
cmp
push
fdivr
enter
dec
inc
push
fsub
loope
fld
lock
jno
mov
push
pop
cmp
pushf
cmovbe
add
in
sahf
das
sub
xchg
pop
mov
mov
pop
fcmovu
test
aad
sti
popa
sub
dec
aam
into
and
sub
pop
sbb
and
push
xchg
mov
shr
jg
or
aas
ins
ret
sub
not
mov
mov
fs
cmp
les
dec
xor
int
scas
fbld
jne
nop
or
ror
cmp
and
push
pushf
adc
nop
in
mov
pop
sbb
stos
mov
jecxz
xor
jecxz
lds
mov
fs
xchg
adc
or
fld
retf
cdq
test
mov
ret
ins
jo
js
mov
add
mov
bound
(bad)
add
mov
xchg
push
sar
push
stos
mov
mov
dec
jmp
call
movs
addr16
in
retf
cmp
push
mov
cli
or
(bad)
jge
inc
adc
xchg
sbb
jae
icebp
ret
add
or
cmp
sahf
and
fnstenv
sbb
sub
imul
loopne
aad
jb
mov
test
or
movs
shl
pop
jne
inc
xor
fs
sub
mov
pop
out
jl
(bad)
adc
xchg
int3
shr
mov
dec
dec
out
test
pop
mov
add
or
nop
pushf
cdq
add
cmp
dec
pop
ret
sub
jg
out
sti
addr16
shr
xchg
pop
inc
pop
jbe
xchg
add
xchg
scas
mov
aaa
std
aaa
lahf
add
out
lahf
jno
arpl
rcr
jb
pop
and
dec
adc
jg
jp
int3
(bad)
test
pop
cmp
xchg
aad
(bad)
repnz
fst
rol
add
cwde
repnz
loope
call
jmp
jno
call
mov
retf
ins
mov
or
pop
mov
pop
adc
dec
pop
call
or
clc
imul
imul
lods
add
addr16
inc
es
xor
in
mov
std
add
and
and
dec
aam
retf
xchg
xchg
rcr
pop
in
cmp
pop
aaa
pop
js
and
sub
in
cmp
pop
js
popa
push
aas
cmp
imul
mov
dec
pushf
ret
hlt
mov
arpl
leave
xchg
cmp
push
mov
mov
cmp
ret
mov
cwde
test
scas
mov
call
xor
inc
popa
js
cmp
enter
inc
jno
sar
ficomp
pop
clc
outs
stc
mov
addr16
xlat
mov
sbb
inc
jno
daa
xor
out
mov
mov
sar
add
pop
clc
loop
dec
lds
ds
(bad)
fidiv
lahf
xchg
sub
in
mov
sbb
adc
mov
dec
add
jge
rcr
inc
or
jp
daa
add
dec
outs
pop
push
mov
loope
mov
mov
out
pop
xlat
cmp
retf
jo
pop
mov
sub
dec
in
adc
ins
add
jns
push
push
and
ret
push
jbe
push
ins
mov
arpl
outs
hlt
cmps
imul
mov
jecxz
ds
mov
push
movs
mov
into
ins
or
fsubr
inc
adc
xchg
add
sbb
cwde
out
push
and
xchg
nop
test
inc
sbb
dec
repnz
mov
mov
jmp
sbb
and
call
and
adc
imul
neg
fwait
sbb
adc
adc
inc
cwde
adc
push
mov
inc
jmp
in
xor
jns
lahf
call
push
sub
mov
lock
mov
adc
mov
ss
adc
jno
push
xor
xor
loopne
xor
dec
dec
cmp
add
mov
inc
inc
xor
sub
jge
cmp
adc
(bad)
fsubr
add
or
ds
dec
loop
scas
and
cmp
push
add
in
fcmovnb
adc
add
mov
mov
iret
pop
or
jbe
or
jb
mov
mov
or
scas
les
xchg
add
mov
sbb
pop
pop
movs
sub
jns
movs
pop
dec
cmp
scas
jae
jbe
aaa
dec
pop
push
imul
outs
std
xlat
and
(bad)
mov
repz
mov
imul
es
adc
and
add
adc
sbb
mov
jp
xchg
pop
pop
cmps
test
lods
shl
es
ds
movs
xor
push
dec
mov
adc
lahf
lods
iret
(bad)
sub
clc
and
add
mov
or
cwde
sbb
sbb
cmc
ja
xor
loop
imul
xchg
xchg
jecxz
xchg
mov
lds
jg
cmps
push
xchg
mov
js
lds
mov
rcr
push
xchg
ins
mov
test
lea
imul
pop
dec
dec
sbb
jge
shl
int
cld
js
dec
xor
mov
mov
scas
and
ss
addr16
popa
push
cmp
push
jnp
shl
pop
push
dec
stc
push
sbb
jl
mov
mov
call
jno
mov
mov
mov
adc
push
rol
in
cdq
fsub
retf
xor
cmps
push
nop
push
sub
ror
sbb
push
in
jmp
mov
add
es
sti
outs
cmp
mov
retf
(bad)
sub
mov
sbb
push
daa
push
mov
jecxz
stos
in
add
mov
imul
cmp
sbb
sub
dec
or
rcl
mov
fdiv
push
xor
sub
or
dec
inc
outs
into
pop
cmps
pop
pop
xchg
mov
xor
sar
mov
or
mov
xchg
(bad)
mov
test
push
add
dec
pop
dec
pusha
xlat
ficom
cwde
shl
push
scas
ss
mov
jns
(bad)
movs
ins
arpl
inc
movs
mov
adc
lds
mov
scas
hlt
int3
inc
loopne
sub
ret
fist
add
jb
push
ds
jae
js
dec
jae
int3
xlat
xchg
jbe
scas
mov
test
sub
mov
out
cmp
and
iret
add
cmp
test
addr16
jp
xlat
ds
mov
mov
mov
dec
xor
dec
and
xchg
dec
imul
xor
out
inc
push
sar
adc
add
je
xchg
mov
movs
mov
adc
shl
push
jge
shr
cmp
jp
lds
xchg
lods
push
or
in
sar
mov
(bad)
fs
movs
xchg
push
xor
lods
xchg
cli
add
cmp
sub
pop
jle
icebp
pop
gs
inc
mov
data16
scas
ror
rcl
inc
pop
nop
xlat
xor
dec
push
dec
nop
std
xor
mov
add
mul
shr
sub
jg
mov
xchg
leave
dec
pop
or
xchg
add
push
mov
ja
pop
lahf
ret
hlt
xchg
out
(bad)
mov
cmps
add
push
xchg
jmp
nop
cmp
xor
dec
mov
loop
jae
rol
or
push
jne
jae
sbb
xchg
sti
xor
outs
push
movs
jo
or
mov
cmps
sub
arpl
add
das
repnz
fild
cmp
(bad)
pop
jmp
loop
push
xor
push
sub
pop
xchg
adc
jle
xor
leave
mov
cmp
dec
shr
push
and
push
dec
inc
xor
popf
test
mov
popf
pop
(bad)
imul
in
in
lock
jl
jecxz
mov
jne
cmp
add
int
jg
fild
ret
xor
jmp
fsubr
lods
xchg
fwait
or
test
fmul
mov
pop
scas
scas
adc
retf
lods
rcr
dec
mov
push
fadd
gs
mov
call
adc
cwde
push
pop
inc
cmp
(bad)
sbb
cmp
pop
xor
or
cs
inc
leave
add
scas
sub
icebp
and
sbb
and
mov
or
adc
lock
jmp
sbb
test
fcomp
repz
ins
push
dec
test
adc
std
push
xchg
sti
mov
cmps
pop
push
movs
adc
cli
cmp
xor
or
aaa
xchg
dec
aam
add
movs
repz
push
retf
adc
sahf
jge
gs
hlt
(bad)
(bad)
loopne
jecxz
jg
lods
adc
push
xor
xor
lahf
cmc
push
push
sub
mov
jae
add
push
std
or
xor
jmp
mov
cwde
ds
movs
add
pop
pop
pop
imul
push
retf
dec
or
or
add
movs
inc
aas
dec
dec
addr16
cmp
mov
fbld
mov
mov
push
lea
mov
pusha
add
xlat
mov
add
mul
(bad)
sbb
jmp
and
popa
add
mov
ins
jmp
sub
sub
push
push
push
or
ds
sar
sbb
inc
or
push
and
cdq
jnp
sbb
dec
repz
mov
cs
jp
xchg
leave
sbb
push
and
jmp
xor
mov
rol
or
int
push
jns
(bad)
mov
jnp
loope
test
sub
or
xor
xor
push
pusha
and
and
ret
jb
int3
imul
xchg
fisub
mul
stc
mov
ins
cli
xor
mov
hlt
sahf
in
(bad)
sub
das
jb
in
lea
out
je
mov
mov
fdivr
dec
push
sti
dec
sbb
lea
imul
fstp
pop
rcr
test
push
jg
test
push
sub
retf
rcl
ins
xchg
sub
mov
lods
xchg
lods
inc
out
aam
into
cli
call
and
daa
enter
ss
push
aaa
retf
xor
mov
push
mov
sbb
shl
cdq
sub
sub
inc
outs
movs
xchg
cmp
pop
loopne
sbb
mov
pop
sbb
inc
jnp
jns
mov
fs
cmp
xchg
lods
jb
pop
lock
(bad)
mov
dec
fsub
retf
je
push
inc
mov
push
jnp
jo
fistp
call
fs
clc
inc
sub
mov
ins
nop
out
fs
pop
sub
ss
rol
jmp
inc
imul
inc
test
lea
add
mov
mov
clc
jl
imul
fsub
cmp
fst
scas
fwait
cmp
scas
mov
dec
retf
push
in
stos
scas
(bad)
inc
lea
pop
ret
dec
inc
push
mov
xor
mov
mov
xchg
je
and
mov
pop
adc
ret
stos
popf
stc
pop
sub
mov
retf
(bad)
dec
mov
pop
and
xor
push
outs
aam
and
(bad)
cmp
inc
iret
js
out
or
pop
iret
xchg
bound
pop
in
xchg
sub
add
push
push
add
xchg
lods
dec
sub
jns
adc
mov
cld
movs
imul
sbb
and
pop
in
or
ins
sub
les
retf
add
xlat
jmp
inc
in
add
fiadd
leave
arpl
pop
or
cmc
jmp
sbb
les
jp
adc
loope
clc
sbb
loope
test
sub
pop
gs
ds
jb
sbb
mov
ins
adc
loop
add
adc
in
in
dec
ret
push
push
in
(bad)
loopne
jg
and
rcl
add
jo
pop
pop
add
mov
adc
pushf
jge
xlat
and
pushf
push
cmp
out
out
imul
pop
and
xchg
loope
out
xchg
mov
fs
and
pop
and
ss
ficomp
xchg
jnp
popf
add
fisubr
push
pop
les
mov
into
scas
js
adc
je
mul
gs
popa
cwde
sbb
adc
mov
adc
scas
cwde
iret
cmp
sub
and
and
addr16
sbb
cwde
test
mov
gs
mov
hlt
push
int3
xchg
dec
pop
mov
test
xor
inc
(bad)
adc
jno
out
fs
mov
sbb
aad
jns
sub
addr16
aam
cdq
adc
jmp
or
cmp
mov
dec
jnp
mov
mov
mov
jecxz
ins
out
test
jnp
jge
call
inc
dec
call
ss
push
lods
js
aaa
movs
cmp
int
ds
test
jmp
inc
lods
lock
cmp
jns
adc
stos
mov
adc
or
pop
nop
das
xchg
sbb
pop
sbb
cmp
push
xchg
dec
gs
cdq
imul
hlt
push
fstp
pushf
and
hlt
cs
add
or
xchg
xchg
xor
push
and
ficom
adc
(bad)
out
dec
inc
adc
ret
jp
das
aas
frndint
mov
sub
dec
fidiv
mov
or
test
dec
int3
movs
xor
cmp
xchg
mov
cmp
jmp
jl
push
xchg
jne
jge
(bad)
ds
add
iret
retf
dec
fadd
cli
imul
and
ds
or
(bad)
jmp
xchg
(bad)
xor
mov
shl
rcr
mov
and
outs
inc
cmp
mov
xchg
jp
mov
cmp
jbe
cmps
xchg
xor
sub
jns
and
push
sti
outs
sbb
xchg
cmps
add
mov
mov
mov
in
cmps
sbb
sbb
call
pop
jl
mov
or
pusha
xor
and
mov
mov
jno
mov
xor
sub
mov
xor
lahf
and
inc
jle
fsub
mov
add
out
mov
test
dec
imul
pop
arpl
cmp
mov
cmp
or
sahf
inc
cmp
in
mov
mov
mov
jns
lahf
movs
in
jne
ss
call
out
xchg
ja
loope
push
ds
arpl
into
mov
test
fs
push
fdivr
(bad)
shr
mov
xlat
and
leave
loopne
push
dec
mov
(bad)
rcl
mov
inc
xchg
cmovo
sahf
(bad)
addr16
pop
adc
or
clc
jnp
sbb
mov
push
retf
aaa
scas
outs
mov
jb
inc
pushf
je
(bad)
(bad)
out
xchg
or
sub
dec
xor
mov
jo
inc
mov
sti
stc
xchg
pop
cdq
sub
jo
sbb
mov
call
aad
cmp
sbb
movs
arpl
or
mov
dec
aas
xchg
test
xchg
xor
outs
cmp
not
(bad)
adc
cwde
push
ins
xchg
jl
(bad)
or
shl
fsub
inc
push
sar
push
rol
inc
or
jl
cmp
inc
gs
cmp
xor
aam
sbb
xchg
mov
rol
adc
xchg
jp
and
push
push
out
sbb
jo
lea
mul
cmp
sbb
lock
outs
into
xchg
call
cmps
mov
mov
mov
push
mov
(bad)
jo
sbb
int3
add
inc
push
daa
mov
lods
out
xchg
xor
inc
xchg
push
mov
and
push
push
clc
pop
js
dec
(bad)
and
pop
add
pop
add
popf
mov
fdivr
xor
arpl
test
imul
outs
jns
jns
pop
add
cli
inc
dec
mov
dec
neg
mov
adc
pop
xchg
inc
mov
adc
push
shr
jno
call
jns
sbb
jle
sub
mov
cli
mov
into
pop
sahf
cmp
les
push
aad
mov
pop
vpaddb
mov
rcl
in
mov
and
dec
icebp
sbb
jnp
add
adc
jmp
xor
sub
push
push
mov
mov
jae
or
mov
push
dec
xchg
jns
mov
pop
sar
sub
sbb
dec
cmp
(bad)
cmp
out
jmp
out
jb
out
xchg
cmp
ins
stos
es
pop
ret
mov
dec
adc
sub
(bad)
and
mov
xor
sahf
push
and
call
test
jbe
cli
sub
test
adc
int3
pop
push
or
jmp
data16
arpl
or
push
mov
add
sub
cmps
xchg
push
movs
idiv
cmp
daa
aam
cmp
hlt
test
clc
aam
adc
jmp
shl
mov
sub
sbb
cmps
add
cs
in
cmp
ds
cdq
jbe
pop
stos
movs
add
jno
and
mov
sbb
data16
call
sbb
cdq
les
sub
push
cmp
or
inc
call
ret
xchg
sub
xchg
push
(bad)
ret
and
in
jno
movs
jne
adc
fdiv
xlat
jge
or
mov
sub
aaa
jge
add
dec
sub
hlt
loop
jne
das
aam
repz
call
mov
scas
cmp
jae
das
sbb
pop
sbb
sub
mov
aam
inc
fistp
jp
mov
jnp
mov
dec
adc
popa
mov
test
jmp
cli
push
jmp
scas
dec
jo
and
leave
mov
(bad)
mov
add
xor
test
lods
out
ret
mov
or
stc
add
dec
adc
add
and
add
ret
mov
jg
sbb
mov
cmp
cmp
rcl
dec
sti
pop
inc
clc
xchg
imul
push
push
mov
test
retf
aaa
scas
mov
retf
lahf
push
inc
mov
inc
sbb
jno
ss
(bad)
push
jmp
adc
fadd
outs
push
int3
dec
in
aam
aas
mov
xchg
(bad)
ror
test
and
rol
mov
mov
push
icebp
aas
call
sub
mov
and
data16
leave
or
push
push
fnstenv
cmp
je
sbb
fistp
addr16
adc
pop
test
jmp
pop
lds
test
adc
call
sub
add
cld
dec
test
dec
pop
repz
iret
push
jmp
stos
xor
jg
test
mov
in
fnstenv
inc
(bad)
xor
push
jb
pop
pushf
or
mov
idiv
cs
pop
push
cmps
jnp
scas
icebp
mov
into
into
retf
into
and
jo
neg
popa
in
ds
adc
jecxz
xchg
or
or
dec
in
jmp
fild
adc
popf
imul
int
jmp
dec
out
push
std
cmp
push
push
mov
sbb
xchg
and
or
(bad)
and
xchg
mov
xchg
sbb
jns
jns
ficom
xchg
mov
loope
or
inc
add
js
inc
lock
or
movs
mov
xchg
js
cdq
push
test
jp
mov
jp
add
arpl
mov
cmps
imul
into
sub
cmp
call
jns
xchg
cs
out
pop
lods
adc
daa
hlt
cmp
pop
in
mov
(bad)
sub
add
std
mov
mov
pop
sub
mov
or
jge
mov
xchg
ins
inc
xchg
fld1
outs
and
in
push
pop
jle
inc
pop
inc
cmp
imul
xchg
ss
int3
nop
push
cmp
jmp
loopne
jno
xchg
sbb
call
sbb
imul
mov
jne
shr
add
or
pop
ins
int3
(bad)
fisttp
aad
dec
outs
lods
push
mov
pop
aas
imul
ins
scas
hlt
shl
jecxz
jb
retf
lods
sahf
mov
enter
jle
lods
mov
movs
push
xchg
xchg
fst
pop
sub
loop
lock
jo
xchg
sub
sub
repz
je
mov
test
sbb
lods
push
lds
sub
jmp
push
xor
cli
dec
cmp
scas
cmp
shl
clc
loop
outs
mul
jae
imul
lods
xchg
imul
(bad)
outs
ss
xor
notrack
ret
mov
(bad)
aad
mov
push
fs
push
in
cmps
dec
lock
(bad)
call
(bad)
xchg
pop
loopne
mov
jns
stos
and
cmps
dec
scas
scas
shr
jo
mov
scas
fdiv
dec
mov
nop
add
dec
adc
xchg
xor
jae
clc
(bad)
movs
add
dec
out
sbb
shl
fisttp
scas
cmp
or
or
mov
enter
mov
and
mov
fisub
in
xor
mov
mov
mov
mov
inc
pop
inc
jg
and
xchg
scas
mov
pop
int
or
aad
fcom
pop
jmp
mov
jb
mov
cs
aam
or
pop
data16
lds
cld
out
jne
mov
sbb
mov
add
sub
and
shr
jmp
mov
xlat
call
ficomp
call
xor
push
sub
jl
mov
movs
xor
mov
add
sbb
in
loop
fcomi
scas
ds
push
popf
or
and
jnp
cmc
or
retf
test
in
test
(bad)
std
inc
jns
leave
adc
pop
push
push
nop
or
add
test
fdiv
add
sub
add
push
cmp
sbb
loop
and
call
in
adc
std
pop
add
addr16
(bad)
bswap
fisub
pop
mov
push
arpl
xchg
cdq
lds
pop
stos
push
sub
in
xchg
aas
mov
push
icebp
(bad)
mov
inc
(bad)
adc
std
push
xor
xchg
xor
mov
or
mov
call
push
retf
xchg
xchg
cld
call
inc
(bad)
sbb
ds
(bad)
mov
pop
and
sbb
cmp
call
jns
cli
pop
cmp
call
fdivr
movs
cmps
dec
fistp
fild
aaa
jns
mov
mov
cs
xor
cdq
repnz
jmp
pop
xchg
pop
call
imul
dec
not
div
cmp
xchg
ss
cmps
imul
pop
adc
jmp
(bad)
jne
sbb
xchg
adc
pop
cli
retf
pop
ret
add
push
aas
sub
adc
popa
(bad)
push
inc
mov
mov
icebp
shr
jns
es
ins
xor
xchg
or
cmp
fisttp
outs
aas
mov
cmp
xor
leave
and
pushf
enter
jbe
pop
mov
hlt
jp
mov
inc
mov
call
movs
cmp
mov
mov
hlt
sub
mov
xchg
and
dec
in
adc
add
xchg
pop
(bad)
call
sub
test
test
sub
inc
test
jnp
xchg
cmc
adc
popa
hlt
stos
or
fisub
dec
sbb
sbb
adc
into
imul
xor
xchg
test
adc
add
dec
(bad)
(bad)
sub
repz
add
loopne
dec
pop
mov
push
xchg
enter
add
or
int
mov
jg
xor
pop
push
or
inc
sbb
mov
cwde
jae
retf
jmp
in
in
arpl
cwde
adc
or
inc
(bad)
jnp
in
cmp
scas
stc
inc
add
pushf
das
lods
jp
mov
ins
fstp
xchg
popf
sbb
pop
call
or
sub
cs
mov
xchg
jl
dec
sub
cs
cs
jns
or
test
xchg
mov
cmp
movs
inc
add
or
cmps
sub
popf
or
psubw
xchg
jno
mov
sub
mov
in
xchg
shr
adc
jne
push
sbb
popf
iret
lahf
fistp
push
adc
sub
jg
enter
mov
xchg
(bad)
out
mov
jecxz
jnp
mov
and
outs
stos
pusha
jne
inc
pusha
dec
adc
daa
inc
add
fld
nop
std
pop
sbb
add
fld
push
mov
push
jmp
xchg
lock
iret
loop
jns
cli
aam
mov
jne
ficomp
or
pop
add
jmp
(bad)
loope
mov
cwde
icebp
call
add
lods
or
popf
(bad)
jnp
fnsave
jmp
rol
push
(bad)
fistp
xlat
pop
xchg
pop
rcr
sbb
imul
xchg
(bad)
dec
shl
pop
bound
leave
jne
push
fs
sti
sbb
pushf
clc
jmp
(bad)
jge
inc
not
dec
jbe
sar
mov
xor
pop
xor
push
(bad)
mov
fistp
mov
in
add
xchg
sub
pop
stos
jp
dec
mov
and
xor
into
xchg
mul
add
jle
and
fcomp
jecxz
mov
sub
inc
adc
and
sub
neg
lods
xchg
adc
xchg
sbb
xchg
jge
stos
imul
push
imul
push
jge
lea
ror
or
xor
int3
fadd
hlt
push
retf
loopne
jae
pushf
pushf
cmc
rol
dec
imul
pop
and
fbld
addr16
test
xor
ds
push
push
ss
cmp
sub
push
ret
retf
jns
push
adc
inc
cwde
xchg
movs
jb
repz
lahf
xchg
shl
out
xchg
sub
fst
cmps
in
lahf
dec
cmps
and
mov
or
and
pop
neg
sbb
pop
ficom
adc
sar
and
add
stos
mov
jno
(bad)
retf
jl
(bad)
sti
mov
cld
test
(bad)
dec
xlat
adc
out
inc
aaa
mov
clc
jmp
aad
dec
in
dec
xor
shr
inc
es
dec
js
sti
mov
es
inc
push
add
jmp
pushf
cmps
jp
inc
addr16
inc
mov
shl
push
pop
adc
mov
adc
pop
sbb
and
inc
scas
aas
inc
pusha
cwde
add
hlt
sbb
xchg
and
call
mov
dec
(bad)
dec
ins
retf
and
test
sub
jbe
das
out
sbb
inc
aaa
rcr
push
sbb
std
jmp
and
(bad)
ficom
add
jmp
xlat
xchg
xor
dec
sbb
daa
adc
ins
(bad)
outs
xlat
lock
cmp
sbb
ficom
clc
jmp
adc
xchg
bound
xlat
test
push
mov
inc
sbb
cmp
mov
bound
mov
(bad)
mov
or
repnz
jmp
cld
scas
cmp
shr
neg
and
ins
or
pop
xor
inc
pop
int
and
arpl
xchg
add
stos
jl
push
push
gs
ss
rol
repz
and
ins
jp
push
push
push
enter
pop
push
(bad)
not
pop
push
jmp
imul
(bad)
dec
and
xlat
cmp
and
gs
sbb
push
jno
xchg
inc
cmp
aas
lahf
cmp
xchg
loop
fwait
fwait
sti
iret
bound
pop
(bad)
mov
sub
cmp
mov
xor
mov
jbe
mov
sbb
and
int
cmps
cmp
call
xor
inc
cmps
mov
stos
xchg
inc
and
inc
jmp
inc
out
cmps
inc
popf
sub
sbb
and
pop
scas
daa
cmpxchg
push
and
not
fldcw
mov
mov
(bad)
popf
xor
jmp
and
lahf
iret
inc
or
scas
mov
pop
and
sahf
icebp
mov
xor
jno
shl
pop
pop
(bad)
sti
arpl
ja
stos
shr
inc
cmps
test
lock
mov
mov
(bad)
jle
pop
sub
(bad)
jle
xor
ds
pop
bound
mov
(bad)
mov
pop
jecxz
or
xor
cmp
lods
sbb
clc
sub
mov
mov
adc
pop
and
jne
xchg
(bad)
out
xchg
sti
ja
jle
sub
or
xor
movs
mov
shr
adc
jecxz
jp
lods
cmp
sbb
mov
xor
(bad)
ds
dec
aam
fadd
mov
hlt
lock
lock
ss
call
mov
dec
repnz
and
test
std
gs
mov
addr16
outs
cmps
pop
jp
mov
mov
fnstenv
test
xchg
xor
adc
stos
mov
(bad)
(bad)
sti
out
arpl
dec
aad
cmp
mov
and
lahf
je
xchg
cmp
push
sub
mov
add
fld
sahf
mul
pusha
jg
fist
(bad)
mov
jb
mov
xchg
sbb
jmp
inc
pop
pop
loope
test
and
rcr
stc
mov
mov
jnp
imul
hlt
adc
inc
pop
cdq
xor
inc
sbb
pop
fst
cmovle
mul
test
rcr
and
mov
scas
in
mov
adc
and
cwde
daa
jbe
mov
dec
lock
dec
imul
sbb
adc
mov
idiv
pop
add
push
add
sbb
mov
(bad)
(bad)
out
dec
stc
lahf
fsub
(bad)
pop
adc
les
dec
dec
call
mov
mov
ins
scas
cmc
sbb
jl
xor
jo
imul
pusha
pop
(bad)
xchg
adc
loop
bound
push
dec
mov
dec
mov
pop
stc
push
xor
test
dec
xchg
pop
push
add
push
or
inc
mov
mov
std
loope
iret
jbe
dec
xor
test
pop
mov
aam
cmp
mov
sbb
adc
jmp
adc
dec
adc
push
fnstenv
in
xor
inc
ja
(bad)
fist
jnp
xor
sub
stc
mov
mov
iret
and
loop
lods
bound
out
dec
sbb
dec
mov
inc
and
add
stos
aam
repz
lea
pop
mov
out
movs
jecxz
adc
mov
fistp
push
mov
loope
and
stos
(bad)
ficomp
xchg
in
es
jnp
pusha
fucomip
jne
and
push
xor
adc
mov
dec
add
mov
fmul
imul
mov
popa
scas
mov
inc
and
seta
cmps
jbe
or
cmc
push
int3
test
lods
xor
aad
inc
cmp
adc
ins
cmc
xor
cmp
loopne
push
inc
rcr
pop
mov
imul
sub
test
adc
popa
xchg
aad
sbb
or
push
add
dec
jo
adc
or
mov
jbe
pop
add
xor
push
mov
mov
ja
fldln2
cmp
lock
push
push
aas
clc
add
sbb
ins
pop
xlat
dec
ins
dec
mov
ja
xchg
pop
(bad)
jecxz
movs
gs
sub
icebp
cmp
pop
or
into
mov
das
inc
xchg
fcmovnb
mov
pop
jmp
xchg
or
sar
sbb
xor
jne
enter
frstor
ins
and
push
aaa
icebp
mov
inc
cmp
call
xor
fidivr
push
adc
daa
scas
add
inc
out
cdq
dec
lds
xchg
sbb
aad
loope
xchg
sbb
push
sbb
jo
ins
adc
sub
mov
xor
pop
add
and
mov
cmps
(bad)
ret
or
push
lods
xchg
iret
sbb
pusha
loopne
mov
jae
les
les
xchg
sbb
scas
dec
dec
cmps
in
or
or
mov
pop
sub
imul
pop
loopne
cdq
inc
push
xchg
jb
imul
add
mov
pop
jmp
xchg
sub
inc
aam
xlat
retf
fidivr
imul
test
popa
dec
imul
fcom
in
(bad)
push
sti
ret
popf
pop
mov
lock
in
and
mov
dec
push
dec
cli
cmp
or
jle
jns
fs
xor
sbb
pop
call
fstp
dec
push
push
push
inc
mov
push
push
ins
jo
mov
or
fbstp
in
mov
push
and
push
sub
sti
jmp
rcl
pop
or
mov
div
mov
icebp
and
mov
jle
stos
pop
dec
aam
cmp
je
add
fimul
pop
popa
pop
ds
pop
data16
cmp
gs
dec
cmps
repnz
mov
push
dec
pop
mov
push
or
lods
pop
out
test
inc
or
movs
sbb
call
iret
fistp
jmp
or
jecxz
aaa
xor
shl
xchg
repz
dec
retf
popf
or
ret
cmp
into
adc
xchg
xchg
ret
mov
adc
xor
daa
cdq
mov
mov
fisubr
jle
mov
mov
loopne
cmps
sbb
in
mov
loopne
push
xlat
fnsave
sbb
push
cld
sub
xor
sti
sbb
mov
pop
jle
inc
xchg
pop
jp
mov
mov
mov
and
inc
inc
lea
clc
js
jns
pop
jmp
dec
push
inc
adc
ds
and
test
inc
or
imul
aaa
push
imul
int3
dec
push
xchg
mov
sbb
push
push
(bad)
adc
dec
popa
scas
aam
and
mov
fscale
jne
xor
movs
sub
add
gs
pop
mov
in
js
cdq
call
inc
popa
or
neg
mov
fist
in
popa
stc
daa
pop
adc
arpl
or
adc
movs
dec
scas
push
inc
xchg
adc
stos
xor
pop
push
int3
mov
das
in
(bad)
mov
jno
data16
sbb
jns
sub
retf
jmp
leave
ja
dec
cmp
push
xor
xor
ds
mov
xor
sub
sbb
test
mov
cmps
test
aad
std
dec
and
or
inc
pop
fwait
sahf
jp
cs
mov
push
lahf
into
repz
jl
xlat
shl
push
push
xchg
cmc
cmp
dec
pop
imul
sub
xchg
cld
imul
aam
fstp
outs
cmps
jne
(bad)
clc
mov
in
in
jne
out
test
sbb
pop
aad
std
pusha
push
clc
pop
lock
xchg
retf
sub
mov
pushf
xor
sbb
stc
cld
pop
jecxz
inc
dec
pop
push
lods
enter
ret
sbb
jbe
jge
shl
loop
inc
cmp
inc
push
call
jns
fldcw
and
jp
add
push
data16
test
sti
jmp
jno
out
imul
xor
(bad)
jno
cmps
add
retf
jae
jmp
xchg
mov
pop
sub
fnsave
ror
imul
xchg
les
fs
sahf
out
mov
pop
mov
popa
fwait
sbb
lea
ror
mov
cmc
imul
pop
or
(bad)
sub
gs
add
jp
dec
push
sar
cmc
fidiv
jns
sbb
jns
idiv
icebp
jmp
(bad)
xor
mov
nop
cmps
pop
int3
ja
or
stos
jns
ins
push
jb
fst
popa
(bad)
sbb
jne
push
shl
inc
mov
enter
or
icebp
add
test
adc
pop
push
int3
data16
pop
inc
loopne
sub
jbe
mov
pop
xchg
push
mov
loopne
mov
cwde
adc
xchg
int3
inc
(bad)
ficom
es
aas
ss
adc
sti
and
stos
add
es
(bad)
loop
pop
aaa
or
neg
xchg
fdivr
int3
adc
sub
data16
aaa
ror
loopne
inc
and
jns
js
sub
xor
sub
jl
mov
inc
xor
lds
nop
into
mov
lock
or
out
sbb
jle
(bad)
push
stc
aaa
cmp
(bad)
jb
lock
dec
daa
int3
shl
popf
sahf
push
adc
push
mov
std
loope
mov
std
clc
ja
int
lahf
push
xchg
mov
rcr
fstp
test
shl
cmp
and
jne
push
or
(bad)
in
test
mov
jle
sti
cdq
stos
push
xchg
bound
ss
mov
je
xchg
sbb
or
scas
push
aam
js
ror
fisttp
clc
mov
cdq
add
mov
sbb
mov
and
and
add
xchg
xchg
mov
inc
ds
jae
xchg
ret
ret
jnp
les
mov
push
cmp
(bad)
lahf
(bad)
cmps
out
jae
inc
test
lock
into
sbb
sbb
dec
xor
mov
xchg
mov
mov
iret
push
daa
retf
rcl
cli
push
fidivr
popf
or
pop
adc
push
dec
xchg
add
(bad)
cmp
or
aaa
xchg
out
and
fcom
test
push
lea
mov
js
punpckhdq
adc
out
mov
ds
jmp
sbb
stc
sbb
dec
pop
stos
outs
push
pusha
cmps
ror
adc
push
push
shr
pop
fcomi
adc
movs
and
xor
inc
fsubr
pop
cmp
mov
add
ja
shl
ret
mov
(bad)
(bad)
jmp
jmp
xor
jle
mov
loop
mov
lahf
xlat
and
cli
out
daa
ficom
add
clc
pop
cmp
mov
mov
mov
call
adc
js
sar
rcr
and
ss
(bad)
mov
mov
nop
call
mov
mov
inc
cmc
xchg
dec
sbb
pop
mov
mov
push
and
les
mov
or
dec
stos
pop
iret
mov
jae
mov
push
outs
or
ins
jge
adc
mov
dec
scas
pop
test
adc
adc
(bad)
push
xor
mov
rcl
enter
cmp
dec
cmp
mov
cli
(bad)
mov
retf
out
push
lgs
or
mov
xor
jo
xchg
mov
ins
aad
cmp
shr
aaa
lock
sub
jmp
cmp
mov
and
mul
mov
(bad)
cld
jl
out
push
xor
sbb
jl
iret
enter
xor
rcr
push
sbb
jge
jg
mov
xor
jae
iret
fiadd
jbe
add
test
ret
hlt
and
mov
push
pop
fld
mov
inc
in
fadd
in
mov
sti
cmp
movs
aad
cs
sub
sti
and
icebp
lods
xor
mov
rol
or
jne
mov
addr16
ret
lods
pop
pop
loop
or
or
push
test
outs
rcl
add
and
gs
(bad)
out
xor
push
bound
bound
mov
jbe
shl
mov
jg
dec
xor
imul
call
adc
sbb
mov
inc
pop
fsubr
cs
fmul
(bad)
inc
mov
sub
ret
pop
pop
xchg
stc
xor
cmp
and
push
cmp
stc
mov
xchg
mov
jmp
xchg
mov
int3
add
mov
sub
(bad)
pop
mov
outs
dec
pop
lahf
or
pop
xchg
pop
(bad)
dec
push
and
pop
test
nop
xor
shl
outs
adc
cmps
cmp
push
in
xchg
xor
out
not
daa
pushf
and
icebp
mov
in
xlat
jg
(bad)
jle
or
or
sti
outs
inc
inc
repz
xchg
nop
sbb
mov
mov
mov
adc
sub
aad
in
stc
(bad)
inc
fadd
cmps
mov
scas
sahf
adc
adc
shl
rcl
mov
shl
jo
push
mov
sub
xor
xor
loop
or
cld
add
push
xchg
adc
inc
inc
or
mov
es
imul
jle
mov
push
mov
test
adc
arpl
jmp
mov
sub
mov
jb
dec
xor
test
inc
or
sahf
adc
fsubr
pop
or
add
shl
jno
loop
jecxz
test
pop
cmps
mov
sub
lahf
loopne
jecxz
jno
and
jl
add
repnz
in
jl
les
mov
sub
nop
ja
in
mov
mov
dec
push
fst
enter
mov
into
push
nop
push
out
jle
repnz
iret
repz
ret
loope
in
fld
mov
pusha
iret
or
dec
icebp
push
pop
scas
mov
push
push
mov
add
fsub
mov
xchg
add
ins
jl
mov
xor
fdiv
jecxz
dec
xchg
adc
adc
mov
cwde
mov
mov
lahf
lahf
pop
jo
xchg
sub
iret
cdq
out
push
jle
add
rcr
ja
sbb
in
into
sbb
inc
int3
clc
xchg
dec
sub
sub
pop
(bad)
bound
xor
dec
in
sar
xlat
pusha
or
(bad)
dec
frstor
cmps
jne
jbe
mov
je
mov
cs
mov
jne
test
mov
cli
dec
and
pop
(bad)
inc
cmp
sbb
idiv
xchg
mov
data16
mov
push
or
and
push
aas
mov
inc
mov
xor
mov
sub
mov
sahf
xor
xchg
out
or
sbb
hlt
cmc
jg
jmp
lds
iret
xor
fsubr
ds
xor
(bad)
outs
xor
mov
cdq
cmp
aaa
xlat
mov
out
add
jge
push
rcr
lods
cmp
inc
fcmovnb
adc
(bad)
pop
data16
ds
inc
call
outs
jp
aas
test
cs
lods
loopne
pop
dec
push
xchg
mov
adc
sub
mov
pop
inc
lahf
test
je
fbld
cmps
mov
sub
out
adc
mov
xlat
dec
call
and
pop
xor
leave
repnz
dec
das
xor
adc
popa
cmp
mov
jno
inc
cmps
pop
and
fnstenv
adc
and
loopne
stos
jne
test
xchg
mov
dec
or
jb
lods
cld
pop
repz
pop
xchg
ins
ds
lods
mov
xor
xor
call
jbe
(bad)
and
jnp
and
jae
jg
mov
(bad)
pushf
mov
ret
imul
fld
inc
xor
xlat
ins
xor
mov
std
int
in
add
js
imul
cld
je
sar
cmp
or
pop
add
in
call
or
xor
enter
outs
jle
sub
retf
push
int
loopne
fpatan
or
inc
pop
mov
adc
push
pop
dec
inc
dec
push
sub
in
or
imul
push
adc
and
cmp
sub
imul
ja
ins
bound
or
cmp
loopne
std
push
mov
mov
pop
mov
jne
outs
shl
cwde
into
ja
xor
pop
test
jb
test
icebp
push
mov
and
movs
cmps
mov
xchg
leave
or
mov
xadd
add
js
cdq
hlt
loope
movs
xchg
mov
(bad)
(bad)
cmc
pop
push
sti
sub
jo
pop
mov
fcmovb
sub
adc
fisttp
sub
mov
das
cmp
add
lods
rcl
add
xchg
dec
jle
sti
push
add
dec
sub
shr
push
leave
clc
mov
int
enter
fs
push
mov
popa
jne
ins
repz
dec
out
inc
cwde
lods
and
push
xor
mov
mov
jmp
imul
push
xor
mov
xor
xchg
add
clc
push
mov
dec
jo
jbe
inc
rol
or
mov
jnp
and
mov
(bad)
les
(bad)
sbb
jmp
sbb
scas
cmp
sahf
sbb
std
loop
adc
mov
cld
repz
sub
loope
cmp
retf
jge
xchg
mov
arpl
pop
xchg
cmp
mul
aad
es
pop
or
jnp
(bad)
out
inc
retf
or
mov
pop
pop
jo
inc
push
popf
add
sbb
imul
rcr
sahf
scas
ret
pop
push
xchg
add
dec
pushf
into
lods
mov
test
ror
test
mov
les
cmp
add
jae
(bad)
sub
sbb
fwait
cmp
xor
fcom
addr16
jle
movs
mov
adc
xor
pop
cmps
mov
and
inc
adc
mov
stc
sub
push
mov
test
sub
fcom
sub
mov
push
xchg
dec
addr16
adc
idiv
aam
mov
stc
movs
mov
sub
mov
enter
stc
mov
jmp
rcr
push
mov
adc
mov
aad
lods
xor
lods
mov
sbb
(bad)
dec
cmp
mov
push
mov
mov
sbb
(bad)
pop
dec
mov
sbb
mov
out
xchg
xchg
sti
sbb
jg
cs
mov
pop
xchg
xchg
cmp
sbb
jmp
push
add
xor
nop
and
mov
xor
inc
int3
in
dec
mov
adc
movs
(bad)
sbb
test
xchg
sub
jl
jb
pop
jmp
and
dec
cmp
xchg
cdq
cmp
jmp
in
sub
push
std
sub
loope
mov
adc
mov
inc
movs
or
into
loopne
ficomp
pop
xlat
pop
mov
rcr
pop
inc
mov
lahf
cmp
pusha
fisubr
adc
xor
xchg
xchg
call
shr
rcl
das
fcos
cwde
aam
push
lods
out
not
jle
jle
push
xchg
mov
pop
fwait
rol
cmps
es
sbb
xor
mov
cld
(bad)
addr16
(bad)
or
call
loopne
fcomp
xchg
pop
add
test
(bad)
xchg
mov
ss
pop
outs
aam
inc
mov
inc
lock
retf
cli
push
dec
and
(bad)
std
rcl
imul
sbb
aad
(bad)
in
jl
push
mov
xchg
call
or
loopne
mov
lods
inc
(bad)
dec
pop
and
xor
aas
jle
dec
out
mov
sub
push
(bad)
xchg
mov
scas
mov
sbb
fcom
mov
inc
or
adc
add
mov
cmp
dec
add
movs
or
(bad)
jno
(bad)
jmp
fistp
push
jnp
and
mov
loope
loope
xor
jg
out
jne
hlt
pushf
test
ins
out
jp
mov
cmps
out
mov
and
xlat
cmps
xchg
mov
push
mov
xchg
loopne
in
xchg
mov
mov
jmp
xor
jmp
fild
and
adc
mov
fsubr
mov
xor
inc
daa
xchg
and
scas
mov
pop
out
sub
cmp
test
mov
lods
and
retf
gs
(bad)
montmul
cmps
(bad)
or
pop
stos
ja
repz
cmp
push
adc
outs
add
test
mov
adc
pop
sbb
push
pop
sbb
cmp
ror
mov
arpl
cmp
or
loope
cmps
xchg
mov
sub
clc
sbb
mov
cmp
repnz
jbe
xor
lahf
inc
sub
leave
or
mul
iret
ficom
mov
xchg
jmp
mov
sbb
into
cmps
xlat
neg
fldcw
mov
mov
addr16
loopne
call
mov
sbb
sahf
bound
test
and
adc
cmps
jmp
inc
inc
out
ret
cld
xlat
mov
das
mul
hlt
sub
add
ins
enter
retf
popf
mov
xchg
push
test
pop
adc
pop
(bad)
pushf
jge
adc
inc
adc
outs
in
inc
inc
(bad)
push
lods
enter
dec
dec
inc
int3
fwait
cmp
dec
inc
add
xchg
pop
xchg
adc
jecxz
add
sbb
lahf
jnp
jmp
mov
mov
daa
lods
hlt
fwait
in
inc
jne
js
mov
std
out
and
lods
dec
sub
popf
xchg
push
push
cmps
adc
cmp
fs
out
sbb
dec
cmp
mov
push
adc
push
arpl
mov
aas
out
add
scas
mov
sbb
shl
gs
test
es
rcl
ret
pop
mov
cmc
push
pop
pop
je
pop
(bad)
adc
(bad)
push
lods
(bad)
pop
xchg
cdq
pop
adc
ret
dec
sti
aas
clc
inc
movs
pop
retf
inc
pop
pop
jbe
js
sbb
iret
ds
stc
jmp
adc
jno
adc
shl
out
fld
and
out
or
jb
or
mov
cdq
ja
lods
loop
push
cmps
sub
out
pop
dec
stos
fwait
sti
pop
ffreep
jle
push
dec
stos
lahf
aad
je
sub
js
push
lods
mov
jmp
pusha
cmc
vpunpckhwd
sbb
push
pusha
fwait
mov
(bad)
out
out
pop
nop
mov
xchg
cwde
push
lods
cmp
mov
pop
cdq
inc
jb
dec
sbb
(bad)
pop
sti
lods
xor
pop
sub
mov
jnp
imul
pusha
add
ficom
pop
inc
sbb
sbb
call
jno
repnz
test
repnz
mov
movs
fild
loop
je
call
rcr
(bad)
adc
dec
repz
sti
dec
loope
cmps
ret
push
fwait
xchg
sbb
fiadd
pusha
mov
sahf
daa
leave
sar
popa
mov
cmp
repz
and
out
push
mov
cmp
and
in
lods
es
nop
jp
cmps
cli
es
sbb
sbb
add
pop
cmp
xor
push
aam
jne
cmp
mov
mov
sti
dec
sbb
add
and
dec
push
jmp
xchg
push
mov
movs
pop
and
lea
mov
or
adc
nop
sbb
adc
add
out
das
sub
push
cmp
dec
int3
imul
mov
clc
(bad)
cmp
mov
mov
loopne
pop
or
shr
add
loope
and
loope
int3
nop
cmp
push
cmp
cs
jae
and
mov
jno
fwait
mov
and
push
out
fwait
out
stos
adc
and
cs
mov
retf
jmp
retf
lds
cmp
add
add
aaa
pusha
xchg
sub
std
sbb
mov
mov
add
leave
inc
shl
jo
outs
retf
cmp
pop
and
pusha
xchg
es
dec
test
iret
inc
pop
ret
ins
cmps
addr16
retf
sbb
and
lahf
push
popa
clc
xchg
adc
ficomp
into
xor
rcl
cmovg
retf
cs
movs
push
dec
or
cli
jle
fdiv
and
fwait
mov
mov
icebp
or
xchg
jmp
fdivr
ins
or
sbb
jnp
mov
test
mov
sbb
scas
push
mov
push
jle
arpl
jle
lods
mov
xor
(bad)
lock
inc
nop
mov
push
xchg
rcl
loopne
sbb
xchg
lds
(bad)
or
mov
mov
sub
mov
and
leave
xchg
pop
int3
mov
dec
cmp
(bad)
cld
push
mov
add
(bad)
push
lds
sub
mov
mov
nop
mov
and
popf
xor
sub
lock
fs
mov
test
mov
sbb
ret
gs
lock
into
pop
cmp
pusha
and
pop
cmps
js
push
inc
retf
dec
jbe
ja
sti
neg
and
cmp
jmp
mov
aas
xchg
xlat
(bad)
mov
sbb
pop
daa
ss
cli
xchg
lds
mov
push
mov
mov
icebp
cmp
add
add
and
jb
xchg
inc
icebp
gs
add
shr
ins
lahf
or
pop
push
xchg
xchg
pop
push
gs
fadd
sbb
int
dec
arpl
mov
jle
shr
push
mov
add
mov
js
push
push
and
popf
adc
(bad)
ins
sub
les
xor
pop
pop
aad
(bad)
and
cli
push
loopne
xchg
lods
loopne
ret
cmp
loop
nop
data16
popf
pop
jo
push
jge
nop
adc
movs
dec
pop
mov
push
mov
pop
add
jbe
jmp
and
push
(bad)
call
cmp
xchg
inc
pushf
std
push
push
mov
mov
push
test
jo
ins
sbb
shr
retf
jg
ins
and
gs
dec
enter
hlt
out
(bad)
(bad)
push
sbb
push
mov
cmp
out
or
mov
pop
and
lods
mov
mov
out
ss
ds
mov
sbb
stos
je
mov
fs
adc
jno
cmp
aas
xchg
cmps
pop
inc
fwait
xchg
test
cmps
les
pop
or
jmp
rcr
outs
gs
ds
jp
mov
cmc
fsub
dec
shl
daa
stos
pop
add
sub
inc
jo
lods
(bad)
sub
retf
xor
ds
jp
jo
test
pop
or
imul
sti
jmp
fs
mov
sti
cld
cmp
jp
ror
vpmullw
adc
jno
test
sub
mov
mov
xbegin
or
xchg
sbb
lds
inc
in
lea
xchg
stos
pop
mov
fld
pop
cmp
adc
adc
xor
and
or
in
pop
cli
clc
into
mov
mov
loope
cmp
xlat
out
repnz
cmp
je
xchg
leave
jmp
or
rol
inc
lds
(bad)
ins
retf
rol
add
and
or
mov
mov
jae
iret
mov
or
repz
(bad)
xchg
outs
test
retf
push
jno
cmp
pop
cwde
dec
(bad)
stos
mov
popf
pop
icebp
pop
mov
dec
sahf
ins
fild
out
pop
test
repnz
push
cmp
std
pop
cdq
pop
mov
loop
inc
and
mov
mov
adc
rol
push
jo
hlt
test
jo
popa
sub
outs
dec
clc
idiv
or
and
sbb
sbb
retf
iret
fsub
mov
lods
dec
pop
fsubr
or
pop
fucomip
jmp
hlt
pop
movs
lea
pop
cs
jg
inc
mov
daa
cmp
mov
or
and
pop
rol
and
aaa
lods
mov
jne
es
test
call
jge
in
imul
adc
repz
push
add
pushf
push
mov
push
jge
ja
aaa
fimul
mov
icebp
push
mov
mov
inc
pop
(bad)
idiv
(bad)
loop
mov
pop
std
pop
jle
es
aaa
mov
adc
test
sbb
dec
les
pop
sbb
test
pop
es
icebp
clc
sub
fwait
pop
xor
push
rol
lahf
mov
out
or
inc
dec
push
push
cmp
xor
push
ffreep
loope
push
mov
add
xchg
pop
dec
cmp
inc
push
fadd
add
imul
popa
xor
push
pop
ss
or
mov
aam
(bad)
pushf
sbb
xor
adc
mov
ins
pop
pop
sub
and
cs
mov
sbb
pushf
cmp
inc
mov
dec
retf
sar
push
test
push
adc
into
cld
jmp
int
fnstenv
call
test
js
out
cli
mov
push
rcr
loope
mov
lds
test
mov
imul
nop
int3
mov
fs
test
push
popa
jmp
icebp
jno
imul
mov
cs
pop
mov
sub
sar
mov
jmp
icebp
ds
mov
(bad)
sbb
add
aam
out
movs
mov
arpl
int3
pop
add
imul
je
jle
sbb
and
mov
sahf
push
fdivr
cmc
in
xchg
data16
inc
aaa
in
xchg
lea
sub
(bad)
xor
call
(bad)
std
push
xchg
call
or
sahf
sub
lahf
sbb
push
add
leave
sahf
js
push
jb
scas
imul
fist
cs
adc
pop
push
inc
push
xor
lods
sub
cmps
sub
sub
hlt
mov
mov
push
xor
xchg
or
daa
adc
sub
sbb
or
jge
movhps
mov
(bad)
push
fiadd
push
aas
or
inc
iret
push
and
test
adc
test
adc
cmp
cmps
push
icebp
inc
shl
mov
ins
cld
nop
adc
mov
adc
pusha
and
fld
push
adc
outs
inc
pop
stos
adc
jbe
hlt
data16
aam
pop
lods
aad
adc
test
mov
add
mov
mov
pusha
and
and
stc
sbb
dec
inc
add
cmps
movs
or
and
and
push
retf
mov
jne
pop
mov
xchg
aad
mov
sub
lods
lahf
mov
(bad)
and
add
xor
dec
add
mov
lahf
in
dec
in
push
or
in
xchg
outs
or
les
jl
adc
sti
pop
shr
int3
and
ror
pop
xchg
test
xlat
out
push
inc
sbb
push
jne
lock
pusha
pop
data16
or
sub
iret
lock
in
push
jg
lods
cmp
mov
jle
int
cmps
jo
bound
test
fimul
xchg
(bad)
std
cmp
scas
sub
in
push
dec
ficomp
(bad)
jnp
popf
inc
es
jne
out
lock
inc
xor
lock
xchg
cmp
(bad)
sahf
(bad)
hlt
lods
xor
(bad)
sub
in
xchg
call
sub
mov
or
cmps
jmp
daa
loopne
dec
add
cmp
mov
fistp
out
mov
(bad)
mov
jmp
ret
pop
dec
jl
lods
inc
push
ret
xor
cmp
inc
sbb
inc
fidivr
das
push
lods
add
sti
stos
fstp
mov
jmp
xchg
mov
outs
jb
dec
xchg
ja
imul
sti
dec
sub
pop
test
daa
call
pop
inc
(bad)
lahf
jbe
(bad)
retf
sbb
sbb
test
outs
jmp
mov
aas
cmp
push
jg
daa
mov
sbb
addr16
ret
adc
ret
inc
cmps
loop
dec
cld
jg
jecxz
inc
cmps
mov
sbb
rcr
push
jns
mov
lahf
retf
dec
jne
mov
neg
xchg
popa
xchg
adc
and
inc
sbb
retf
push
bound
mov
gs
cmc
xchg
das
xchg
jmp
fcmovnu
enter
daa
leave
mov
mov
pop
mov
mov
xchg
adc
lds
loop
adc
push
push
and
and
mov
addr16
push
mov
mov
jns
xchg
mov
or
push
xor
test
cs
out
lds
dec
sub
daa
push
or
int3
mov
popa
test
scas
aas
cdq
or
mov
or
imul
adc
fstp
rol
xchg
or
loope
xchg
aad
movs
fwait
(bad)
test
mov
loope
sbb
scas
jnp
(bad)
pop
mov
lds
jae
add
clc
shl
inc
mov
jle
(bad)
push
(bad)
test
inc
pusha
dec
xchg
pop
push
sti
sub
sbb
sbb
mov
mov
add
jmp
mov
fcmovb
iret
jmp
es
test
int3
mov
xchg
lea
pop
mov
stc
ins
iret
xchg
inc
les
adc
xor
std
dec
xlat
in
lock
(bad)
and
daa
stos
jmp
adc
ja
addr16
pop
neg
in
popf
shr
fstp
fwait
lods
mov
xchg
mov
sbb
scas
ss
out
jp
mov
imul
jo
fcmovb
fist
jbe
mov
jb
outs
push
mov
je
add
mov
xor
lahf
out
(bad)
mov
mov
rcr
push
add
iret
push
pop
hlt
das
int3
mov
aam
fsubr
mov
push
mov
and
sub
(bad)
in
mov
sub
fs
push
mov
scas
repz
aaa
jne
inc
mov
add
inc
xor
inc
movs
ror
xor
adc
pop
jbe
jno
pop
adc
fbstp
out
scas
imul
shl
pop
outs
repz
nop
jecxz
(bad)
fst
push
sub
lds
pusha
movs
or
mov
xor
lods
or
fsubr
mov
inc
mov
aaa
sbb
sbb
repnz
gs
pusha
fsubr
cmp
jo
add
sbb
mov
pushf
clc
repnz
inc
iret
cmps
jge
jle
mov
aaa
or
add
imul
aam
out
(bad)
pop
arpl
pop
mov
cmp
rol
lahf
fs
xor
into
push
dec
cmp
cmc
xor
js
push
gs
sar
test
cmp
add
adc
adc
ja
test
int3
sub
jb
dec
int
loop
dec
in
scas
adc
je
cdq
mov
mov
inc
movs
push
cmps
mov
sbb
mov
and
pop
fdivr
cs
jb
imul
mov
std
or
add
adc
call
sbb
inc
lods
mov
sub
mov
xor
push
jo
lock
out
sbb
movs
jo
push
ins
rcr
gs
(bad)
cmp
cmps
popa
iret
jg
hlt
jnp
imul
jp
lods
arpl
dec
mov
iret
imul
add
push
jp
mov
xchg
or
or
xor
adc
mov
sbb
push
sti
outs
mov
retf
xor
inc
in
ins
dec
(bad)
push
mov
adc
mov
xchg
jae
cli
xchg
ret
in
jp
mov
push
xchg
mov
push
xor
clc
cmp
cmp
mov
jne
(bad)
ret
loope
dec
(bad)
xchg
(bad)
mov
out
cmps
cld
pop
push
xchg
push
add
add
iret
pop
or
in
jg
xchg
imul
enter
lock
in
jbe
cmps
lods
ret
fadd
or
movs
mov
test
or
gs
dec
(bad)
cmps
int
sub
(bad)
push
out
enter
mov
inc
mov
imul
sti
mov
adc
ja
dec
push
out
pop
cli
push
xchg
dec
or
outs
leave
add
mov
ins
mov
shl
push
xor
xor
xor
call
pusha
into
push
gs
and
fldcw
daa
pop
loopne
je
sar
add
lods
push
dec
call
adc
or
inc
mov
in
in
mov
mov
into
xor
jl
loop
rcr
inc
in
in
mov
icebp
neg
adc
and
(bad)
dec
push
mov
adc
out
loop
das
pushf
ja
xchg
test
mov
push
sub
lods
add
mov
sub
gs
sbb
dec
mov
out
jne
bound
in
dec
pop
cld
adc
inc
mov
fiadd
ds
icebp
sub
pop
das
mov
pop
out
xor
sbb
sub
push
cmp
xlat
and
es
outs
dec
and
movs
je
clc
bound
and
in
inc
mov
sub
(bad)
mov
fsub
pop
retf
sbb
mov
inc
shl
mov
sub
out
sbb
or
cmp
jno
xor
add
das
sub
(bad)
shr
cmp
and
cdq
call
in
push
mov
gs
mov
mov
aas
push
(bad)
xor
ins
lods
repnz
lock
pop
ja
clc
mov
aas
pop
aam
mov
jmp
dec
inc
cmp
loop
fisub
das
adc
pushf
inc
pop
(bad)
out
add
clc
mov
fiadd
mov
ja
dec
and
xchg
mov
jp
lea
cmp
idiv
cmp
aad
test
add
mov
je
cmps
arpl
xchg
imul
mov
cdq
popf
mov
cld
mov
dec
leave
or
fcom
fbstp
sbb
add
repz
call
gs
aaa
push
push
mov
cwde
and
(bad)
lahf
push
sbb
cmp
xlat
pop
dec
xchg
xor
popf
mov
fistp
pop
inc
or
xchg
pop
or
into
aad
cmp
cmps
adc
scas
pop
dec
cli
sbb
mov
mov
iret
sub
rcl
aad
cmp
cmps
sbb
jns
repz
mov
gs
and
arpl
call
mov
in
or
xor
and
adc
cdq
cwde
pop
xor
fsubp
adc
mov
js
retf
sub
rcl
and
push
cmc
lea
xchg
inc
fistp
mov
push
jecxz
cmp
fwait
jle
pop
rol
dec
push
mov
call
cld
ins
xchg
addr16
cmps
enter
scas
cmps
test
jmp
xchg
stos
out
pop
popf
iret
xor
jmp
adc
dec
stos
fs
xor
xor
jne
mov
adc
out
xchg
push
inc
call
mov
mov
out
sahf
retf
xchg
and
push
scas
add
mov
mov
pop
out
add
cmp
pop
inc
cli
cmp
pop
add
add
rcr
sbb
mov
inc
shl
outs
(bad)
repnz
mov
addr16
mov
shl
inc
push
fwait
mov
in
jmp
stos
lds
pop
lahf
in
push
std
sub
fdiv
shl
fidiv
jmp
add
idiv
pop
rcr
inc
pop
pop
leave
out
mov
pop
pop
xchg
(bad)
hlt
mov
scas
xchg
in
shl
cmp
jecxz
outs
jle
jp
push
xor
adc
ss
sub
mov
pop
xchg
jmp
xchg
inc
push
push
shl
cmp
jmp
das
daa
adc
mov
mov
(bad)
mov
jl
sbb
test
call
cdq
(bad)
cli
call
pushf
pop
xor
or
mov
scas
and
out
mov
push
mov
and
jno
es
xor
xchg
out
in
pop
int
loopne
add
fsub
push
jne
xor
jne
mov
push
call
and
push
mov
scas
mov
fild
test
repz
loope
push
lods
or
dec
xchg
dec
or
push
add
add
stc
mov
aam
push
push
sbb
setae
pop
ret
adc
imul
dec
lea
(bad)
cld
fisttp
stos
or
jge
das
out
fs
sbb
cmc
push
int
xchg
mov
mov
stos
jmp
xor
repz
mov
cmps
cmp
jecxz
cmp
movs
and
dec
adc
jbe
pop
push
mov
push
es
inc
bound
iret
xor
int3
push
pop
loopne
es
in
sbb
shl
mov
jle
inc
data16
ror
(bad)
pop
je
leave
jbe
ins
scas
adc
loopne
and
adc
push
jnp
sub
or
pop
or
mov
test
push
push
cwde
add
(bad)
sub
jns
push
mov
imul
and
push
icebp
loopne
push
clc
xchg
retf
sbb
xchg
inc
xchg
pop
test
ja
cmp
fwait
test
pop
iret
pop
leave
imul
xchg
cmp
adc
sub
inc
imul
push
xchg
jle
jg
ins
out
mov
mov
mov
push
push
or
add
cs
jno
jnp
or
sbb
and
adc
dec
sub
aaa
add
sub
dec
mov
(bad)
ja
or
scas
and
cld
cmps
push
mov
cmps
pop
mov
in
dec
imul
mov
outs
lods
dec
jp
jno
jnp
adc
lds
pop
push
add
popf
sbb
cld
gs
gs
cwde
jb
(bad)
push
ins
and
ins
cmp
inc
jne
jg
lahf
jmp
xlat
dec
shl
cmp
leave
dec
inc
and
cs
dec
push
shl
test
adc
dec
hlt
mov
scas
(bad)
xor
fistp
stos
sbb
jp
cwde
cdq
stc
ror
push
xchg
or
outs
cld
add
pop
std
xlat
jecxz
inc
mov
pusha
mov
arpl
jle
cmp
repz
lods
or
pop
fs
imul
inc
inc
pop
lds
loope
inc
mov
push
pop
pop
mov
ds
(bad)
sar
xchg
ins
inc
jno
inc
mov
aad
dec
add
retf
sbb
push
data16
shl
call
and
inc
icebp
popa
sbb
out
inc
fist
movs
(bad)
jb
fild
pushf
int
pop
clc
cli
jmp
out
add
pop
sub
mov
pushf
(bad)
push
mov
mov
mov
ins
loop
test
repnz
aam
scas
mov
mov
mov
stc
fcom
fld
pop
mov
cli
mov
jbe
scas
xor
in
test
pop
test
in
mov
in
test
(bad)
xor
ror
lods
fistp
aam
dec
div
xor
cli
fistp
clc
fcom
jne
mov
push
ficomp
push
mov
daa
add
stos
sbb
ja
mov
sbb
js
or
inc
repz
push
push
fwait
pop
and
mov
xor
(bad)
in
jecxz
and
cmp
dec
into
xchg
or
sar
and
nop
inc
sbb
retf
dec
jg
es
mov
stos
xor
or
imul
add
(bad)
stos
je
inc
add
inc
xchg
jo
mov
push
fst
in
push
add
in
add
test
cwde
add
or
mov
mov
add
push
cmp
mov
jae
lock
mov
ror
fst
rcl
lock
clc
mov
push
dec
and
fldcw
in
xor
and
xor
enter
sub
pop
mov
pop
jecxz
mov
shr
in
or
sub
ss
es
not
test
mov
inc
or
jle
xchg
imul
pop
mov
outs
mul
fld
lods
into
arpl
sbb
pop
jo
shl
(bad)
pop
cmc
scas
mov
fbld
mov
adc
mov
aas
repz
call
mov
fwait
dec
shl
sbb
jle
dec
popa
dec
cs
pop
mov
test
mov
ret
push
orps
xor
mov
inc
inc
int
popf
mov
mov
push
sub
ret
es
dec
pop
lahf
call
dec
loopne
add
pop
in
or
dec
mov
mov
xor
sysret
inc
push
int
loope
pusha
test
dec
loope
xchg
lahf
in
mov
loope
jg
xchg
and
es
popa
test
pop
cmp
outs
cmp
test
jbe
test
mov
inc
enter
fbld
dec
push
xchg
lock
add
fcmovne
mov
cmp
add
lea
mov
pop
pop
popw
mov
jo
adc
cmp
scas
jle
scas
jp
aas
inc
into
mov
in
adc
mov
cs
push
or
adc
out
out
aas
jecxz
dec
sub
and
(bad)
cmp
ret
mov
out
aaa
call
add
mov
or
fs
xchg
cmp
sub
frstor
adc
push
jl
mov
push
shl
not
fstp
ja
in
mov
(bad)
mov
repnz
push
leave
mov
pop
in
pop
inc
enter
mov
sbb
outs
loope
adc
cs
icebp
(bad)
mov
aas
mov
in
pop
inc
push
push
sbb
lods
sbb
sbb
inc
jne
sub
lds
push
das
cld
pop
push
xchg
and
outs
inc
add
sub
mov
sub
in
and
retf
(bad)
enter
mov
mov
(bad)
and
fisubr
pop
ds
mov
outs
xor
repnz
cmp
call
push
lea
in
fbld
and
loope
lods
push
mov
mov
inc
xchg
in
cmp
clc
mov
aam
cdq
ja
fisub
pop
pop
mov
mov
and
mov
shl
clc
sub
jmp
in
pop
fcomi
or
pop
xchg
mov
jbe
add
push
adc
sbb
dec
sbb
imul
inc
es
clc
repnz
dec
retf
not
pop
inc
lods
ret
movs
ss
int
pop
movs
daa
cmp
adc
xchg
in
xchg
ds
cs
retf
sbb
xor
(bad)
int
(bad)
sub
xor
mov
and
fnstenv
mov
aas
sbb
add
call
outs
mov
xor
inc
cmps
loop
out
xor
(bad)
xchg
mov
mov
or
jg
jecxz
repz
lods
aaa
fcmovnbe
dec
push
imul
jae
mov
cdq
movs
out
xor
leave
sbb
(bad)
ins
sbb
or
fcomp
mov
xchg
jmp
push
xor
loope
adc
es
das
stos
iret
outs
(bad)
sbb
dec
(bad)
inc
hlt
jle
rol
adc
enter
xlat
lahf
fcmovu
jp
mov
jge
es
mov
xor
pop
retf
add
mov
or
mov
xchg
sub
inc
push
inc
enter
jb
retf
or
int3
addr16
push
mov
push
sar
rcr
movs
and
ds
pop
cmp
xchg
adc
ins
aas
push
dec
xchg
rcr
cli
cmc
shr
ins
adc
adc
int
mov
or
cmp
mov
mov
aas
fs
sbb
mov
inc
into
iret
imul
(bad)
out
fild
dec
icebp
add
js
aad
retf
dec
popf
sub
jp
ret
mov
sar
dec
xchg
je
push
neg
adc
xchg
sbb
call
mov
dec
lds
add
mov
aas
cmp
(bad)
xor
mov
daa
mov
in
xchg
sti
dec
pop
ins
cdq
and
add
shl
stos
dec
stos
mov
mov
pop
out
aam
call
mov
xchg
push
stos
mov
pusha
hlt
mov
test
or
adc
bound
xor
mov
adc
les
pop
mov
inc
pushf
push
pop
fiadd
jl
mov
push
loope
movs
lea
push
imul
cmp
sbb
jae
mov
adc
loop
xlat
int
sbb
not
test
in
xlat
imul
push
jmp
xor
shl
push
inc
scas
pop
push
(bad)
aam
mov
cmp
jmp
and
hlt
mov
imul
into
pop
or
adc
pop
and
popf
call
inc
js
fild
jg
fstp
sahf
sub
dec
sbb
retf
sar
in
push
je
outs
aad
mov
and
pop
rcl
sub
cmps
lea
test
inc
das
ficomp
mov
push
rcl
iret
sub
adc
and
jne
and
jbe
push
push
(bad)
jo
mov
mov
scas
mov
call
ins
in
cmc
jnp
ficom
lock
aas
mov
xchg
and
xor
lock
shr
sbb
pop
cmp
cwde
sub
fwait
repz
inc
pop
out
mov
shl
xlat
mov
shl
data16
or
pop
jge
ins
sbb
mov
ds
ss
movs
fsub
lods
ret
fsubr
das
fadd
push
sub
and
add
jb
pop
ret
mov
jmp
push
pop
mov
pop
rol
add
outs
lahf
inc
push
mov
jmp
pop
shl
rcr
xchg
mov
test
fsub
mov
gs
and
jo
xchg
mov
or
jg
add
(bad)
fs
loop
dec
test
xchg
xchg
lock
fadd
cmp
fimul
xchg
xchg
inc
jns
jp
lods
sub
fnstsw
(bad)
bound
(bad)
addr16
add
(bad)
fmul
test
test
nop
push
test
push
enter
push
dec
out
dec
jl
iret
push
jle
fistp
add
out
jbe
bound
pusha
and
jne
cmp
test
outs
ficom
jmp
cdq
cmc
pop
loop
fidiv
repz
xchg
dec
sbb
pop
mov
mov
or
lahf
(bad)
aaa
jno
add
or
xchg
lds
cmp
mov
lods
mov
push
jne
pop
leave
aas
stc
sub
popa
sub
movs
cwde
(bad)
out
pusha
pop
idiv
xchg
scas
pop
push
fisub
rcl
ds
xchg
xchg
(bad)
xor
xor
sbb
inc
aam
or
and
dec
sbb
test
mov
cmps
xor
aam
(bad)
and
sub
jecxz
ret
in
mov
nop
imul
mov
dec
inc
or
fild
mov
mov
inc
xor
cli
and
push
add
std
pop
jnp
adc
pushf
pop
loop
pop
inc
pop
icebp
push
push
sub
inc
retf
fisub
(bad)
mov
push
das
mov
xor
xor
mov
dec
retf
adc
and
(bad)
ja
ins
push
retf
add
inc
add
out
loopne
dec
lods
xchg
mov
mov
adc
cs
nop
inc
es
pop
mov
add
cmp
push
xor
repnz
sbb
xor
scas
lea
inc
in
adc
inc
jae
int3
shr
outs
mov
cs
adc
ins
xchg
in
aam
sbb
ins
cmc
push
sub
enter
shr
adc
xor
ins
and
cli
and
arpl
sbb
pushf
pusha
pop
dec
sbb
cmc
mov
jbe
mov
pop
nop
jno
pop
xchg
jmpw
mov
sbb
adc
out
ins
ja
push
int3
adc
and
enter
xlat
mov
mov
mov
fiadd
xor
(bad)
add
inc
fimul
adc
addr16
fidivr
mov
sub
or
mov
add
test
imul
inc
es
dec
push
xchg
int
es
cdq
and
jb
aaa
cwde
popf
sahf
pop
xchg
push
gs
dec
scas
cmp
and
jg
or
lock
loope
(bad)
aad
mov
scas
std
mov
inc
hlt
cmp
jb
mov
in
pop
aam
adc
sub
push
mov
jns
adc
(bad)
js
(bad)
gs
sar
xchg
cmp
inc
shl
aas
nop
xor
scas
(bad)
cs
add
sbb
addr16
push
push
xchg
hlt
(bad)
push
mov
jae
xor
sbb
push
dec
adc
add
inc
jecxz
(bad)
jg
cmps
movs
into
stos
in
push
push
xchg
sub
(bad)
mov
fwait
aas
mov
mov
mov
cli
fild
push
imul
rcr
push
rol
and
push
bound
fstp
pop
mov
es
cli
mov
or
adc
dec
sbb
into
ja
push
rol
adc
in
pop
rol
add
jle
pusha
add
jg
ss
add
xchg
enter
scas
xor
add
scas
fbstp
mov
jmp
int3
or
xor
mov
add
sub
push
outs
jo
and
jmp
xchg
mov
dec
shl
(bad)
mov
mov
pop
push
call
jge
dec
jge
cdq
rdtsc
(bad)
call
daa
mov
sbb
fisub
dec
clc
(bad)
repz
popa
sbb
pop
mov
jnp
test
nop
adc
or
inc
or
xor
and
adc
pop
cwde
and
ret
mov
cld
mov
imul
sub
jle
xor
push
mov
lahf
out
mov
pop
retf
mov
(bad)
lahf
outs
lea
dec
fist
or
adc
add
add
pop
cmp
in
scas
mov
cmps
(bad)
ins
fcom
ds
rcl
sub
jnp
xchg
inc
stos
jno
mov
xchg
arpl
ins
cmp
scas
mov
or
push
jbe
popf
imul
inc
add
inc
sub
jnp
(bad)
mov
pop
jp
pusha
and
clc
(bad)
mov
in
cmp
dec
sbb
or
adc
and
jmp
int
fwait
push
adc
cmp
out
lahf
int3
out
fs
fwait
loopne
cmps
sub
mov
imul
in
cld
mov
push
xchg
dec
std
icebp
xchg
jle
scas
retf
push
hlt
mov
and
scas
inc
add
or
mov
pop
push
pop
dec
or
jno
test
into
cli
xchg
retf
pop
gs
cmc
mov
sub
mov
scas
mov
out
pop
leave
add
and
jne
push
mov
in
and
push
lahf
or
jg
lahf
dec
aam
scas
shr
movs
aaa
or
das
jp
daa
and
pextrw
push
mov
dec
mov
je
clc
push
dec
dec
js
push
pop
(bad)
ins
lock
mov
retf
lea
not
push
gs
push
cmps
sbb
mov
aad
retf
int3
inc
call
xor
mov
fucom
mov
mov
out
in
loop
jmp
or
test
pop
and
(bad)
pop
in
scas
int
aam
push
into
ss
outs
(bad)
xchg
leave
scas
mov
sbb
add
jl
test
cmp
sbb
jl
adc
lds
rol
stos
lahf
push
lods
stos
(bad)
fdiv
jnp
add
push
adc
inc
and
mov
pop
mov
(bad)
mov
and
and
xchg
xor
or
xchg
gs
sub
xchg
pop
mov
fstp
in
dec
stos
cwde
fcmovnu
lds
leave
pop
add
aaa
lahf
sbb
or
or
outs
sbb
je
cdq
push
adc
push
(bad)
enter
lods
jno
fisttp
sbb
xlat
dec
jns
push
and
out
dec
mov
mov
cmc
fld
pop
sub
dec
mov
in
sub
pop
mov
clc
adc
cmp
mov
mov
push
leave
xor
adc
jp
mov
out
inc
hlt
pop
adc
sbb
fdiv
mov
and
jl
mov
mov
jmp
adc
out
ins
xor
sti
mov
mov
jecxz
fisub
mov
xchg
adc
mov
or
jle
fld
(bad)
imul
rcr
ret
push
mov
movs
iret
stos
sbb
int
inc
mov
and
sbb
aas
and
add
jg
or
popa
neg
leave
sub
shl
lea
xchg
cmp
dec
int3
pop
enter
sub
and
dec
ror
jae
adc
cmp
rcl
out
or
mov
xor
mov
mov
sub
push
or
test
add
psllw
jg
mov
ins
mov
repz
pop
pushf
ins
ins
rcl
xchg
pop
add
in
xchg
fcmovnu
push
or
push
mov
inc
xor
sbb
ror
push
and
add
mul
and
adc
pop
push
xlat
call
xchg
add
pop
ret
cmp
push
xor
stos
test
sub
(bad)
loopne
push
dec
cs
loopne
out
cmp
pop
xchg
push
sbb
jmp
mov
js
in
aad
or
push
fimul
cmp
sbb
lds
fcom
mov
push
inc
add
in
aas
add
mov
pop
aad
ins
fstp
jmp
or
mov
mov
outs
sti
add
mov
retf
iret
in
sbb
je
and
xchg
(bad)
xor
scas
clc
dec
fldenv
aas
add
arpl
loope
fadd
jno
mov
stc
adc
and
mov
pusha
xchg
and
rol
mov
lock
cmp
mov
pushf
xlat
pop
addr16
in
je
out
cli
scas
(bad)
icebp
in
jo
push
into
xchg
mov
repnz
ret
dec
mov
and
lea
push
jb
xor
sub
jl
pop
mov
ins
mov
cdq
and
in
pop
push
repnz
pop
xor
mov
bound
pop
lods
call
sbb
std
inc
ds
js
xchg
fstp
push
or
push
ds
popf
lea
mov
mov
cmps
and
popa
test
cmc
cmp
loope
pop
pop
and
sub
xor
jmp
scas
out
sahf
popf
pop
sar
in
or
jae
loope
sti
mov
shl
popf
and
and
pop
arpl
mov
daa
fcmovnbe
mov
xor
(bad)
lods
fwait
(bad)
int
fs
sti
and
popa
jne
rcr
adc
data16
ret
repz
ja
jne
sti
jb
mov
xor
mov
ficomp
and
push
cmp
mov
loop
ins
ja
adc
fidivr
jp
mov
cli
ins
add
out
xor
repnz
xchg
mov
add
lock
and
jmp
fchs
mov
pop
je
add
lods
ins
inc
mov
push
fld
test
jp
ss
cmps
cmc
pop
in
mov
bnd
jp
add
mov
aad
into
pop
mov
add
in
jne
xchg
push
(bad)
or
push
popf
sub
lods
test
test
cmp
int
repnz
sbb
fistp
mov
fs
sbb
sub
(bad)
adc
or
xor
xor
pop
mov
cmp
test
cmp
pushf
(bad)
adc
int3
rcl
dec
adc
sbb
popf
push
mov
pop
icebp
cmp
imul
xchg
aas
nop
jb
sbb
movs
popa
ror
and
pop
add
mov
fcomp
mov
cmp
(bad)
mov
js
fistp
clc
or
out
mov
sbb
mov
push
cmp
aas
ins
cmp
pop
in
or
mov
xchg
xlat
or
inc
push
jmp
(bad)
fisubr
imul
mov
mov
jnp
sub
ja
add
mov
mov
mov
pusha
inc
popf
jecxz
das
movs
ins
repnz
std
cmp
mov
(bad)
cs
fnstenv
and
scas
adc
jne
jmp
jae
aad
push
retf
sub
inc
or
adc
xor
fcmove
fwait
mov
not
inc
gs
mov
mov
mov
les
sar
or
xchg
jmp
iret
stc
sti
pop
pop
mov
call
(bad)
mov
mov
push
mov
and
push
cmp
mov
call
loop
inc
mov
ins
xchg
dec
jno
gs
push
ret
mov
and
mov
ins
mov
jne
push
aad
sub
push
into
scas
adc
lea
outs
xor
pop
push
rol
das
jo
je
jp
imul
repnz
retf
add
(bad)
jns
mov
dec
jmp
cmp
cmp
cmp
cmc
adc
scas
xchg
jns
mov
xchg
adc
pusha
iret
push
sub
dec
mov
cmps
inc
bound
out
test
imul
loope
dec
addr16
mov
and
popa
stc
xchg
inc
int
rol
jp
xchg
retf
push
mov
stos
ficomp
cmc
aad
or
(bad)
into
pop
adc
jp
imul
xchg
sub
xchg
dec
xchg
inc
mov
mov
arpl
and
test
mov
call
dec
pop
mov
movs
lods
cmp
mov
loopne
clc
popf
clc
ds
jnp
jae
lods
cwde
or
pushf
ins
out
inc
cmovs
out
ja
inc
nop
sub
popf
cmc
push
mov
mov
retf
cmp
sbb
in
fisub
jnp
mov
push
inc
adc
sbb
xor
enter
mov
push
push
jnp
or
into
sahf
(bad)
std
movs
and
(bad)
clc
cwde
xor
fsubr
jmp
cmp
retf
rcl
mov
mov
push
cmp
movs
nop
loopne
rcr
addr16
imul
(bad)
or
lock
shl
mov
xchg
push
and
sub
aaa
jnp
cmps
pop
or
aas
push
les
shl
mov
mov
int
mov
jecxz
loop
add
ins
push
mov
jo
loopne
mov
dec
fs
sar
jnp
adc
rol
sub
shr
sbb
sbb
pop
cmp
xchg
and
sub
pop
or
mov
xchg
into
test
add
adc
fwait
sbb
cs
sbb
test
inc
in
test
inc
cmps
and
outs
scas
cmps
das
fisttp
in
imul
push
popf
shl
xor
popa
mov
jb
inc
ds
and
imul
mov
mov
aaa
sbb
sub
xchg
loopne
xchg
or
in
popa
sbb
cmps
add
and
call
jae
mov
or
mov
dec
lea
(bad)
fdiv
jl
dec
vphaddbd
(bad)
(bad)
xchg
xchg
data16
je
mul
pop
and
call
sbb
cmp
clc
bound
mov
lahf
nop
rcr
xlat
adc
add
xor
adc
fistp
inc
(bad)
sar
cmp
mov
ja
std
shl
(bad)
add
push
mov
and
addr16
pop
cdq
ins
movs
xor
push
xchg
mov
cmps
in
call
xchg
adc
xchg
adc
jl
mov
inc
jo
sub
ins
repz
lea
push
and
popa
adc
popf
out
repz
stos
fs
xchg
push
int3
xor
mov
pop
shl
enter
(bad)
jnp
sbb
xchg
or
push
dec
jne
dec
dec
pusha
add
inc
and
cmp
dec
jae
in
loop
xor
je
push
adc
sti
nop
enter
xor
lock
dec
xor
dec
pop
out
nop
movs
xchg
xlat
and
mov
mov
retf
sub
jne
cmp
jl
pop
imul
sbb
mov
cmp
or
or
adc
cmp
or
add
lods
ror
jne
shl
adc
pusha
outs
mov
loopne
sbb
lea
adc
pop
xchg
mov
lea
fidivr
sub
push
pushf
iret
cli
ss
dec
rcl
(bad)
adc
adc
movs
sbb
push
ds
(bad)
pop
test
dec
(bad)
fdivr
leave
and
mov
repz
inc
inc
add
in
cdq
cld
mov
jge
jl
sub
push
popf
sahf
pop
mov
xor
sbb
test
jge
jg
mov
ds
jb
push
repz
dec
fiadd
repz
xor
mov
sbb
enter
push
adc
movs
mov
mov
fstp
fnstenv
push
addr16
mov
mov
stc
sbb
bound
(bad)
out
daa
in
les
dec
pop
aad
mov
inc
in
push
push
mov
fcomp
ins
xchg
push
lods
mov
cmp
div
inc
repz
add
jnp
loopne
jmp
mov
mov
pop
out
and
and
div
not
push
test
xchg
(bad)
and
aaa
and
push
test
ds
lock
dec
jle
int3
mov
jg
arpl
sub
inc
daa
pop
dec
xchg
jno
cwde
mov
out
aaa
xchg
mov
lea
not
lea
cmps
div
scas
test
aaa
inc
ror
cld
lock
vpcmpgtw
cli
jno
jle
faddp
jg
push
jnp
and
inc
and
jecxz
xor
aas
pop
pop
out
ret
sbb
fisub
jg
adc
test
add
and
xchg
jnp
retf
pop
popf
jge
es
repz
add
or
sar
mov
jns
mov
and
mov
add
mov
pop
xchg
(bad)
je
add
fiadd
jno
jl
nop
pop
bound
sti
pop
fld
push
pop
inc
pop
ss
mov
jg
(bad)
and
pop
int3
hlt
repz
sub
cmp
add
mov
jnp
fst
pop
xchg
cmps
fcomp
sbb
and
inc
push
jecxz
daa
pop
call
mov
sbb
test
dec
add
jne
imul
jno
jbe
mov
push
pop
or
add
dec
aad
call
js
jo
into
mov
mov
mov
inc
xor
jnp
ror
sti
or
ja
mov
imul
cdq
pop
adc
cmc
cmp
aas
inc
jecxz
xor
and
xadd
ins
mov
add
test
push
in
aam
pop
mov
mov
cmp
cli
add
mov
fsub
xor
shl
sbb
rcr
cmp
add
or
stos
inc
test
xor
cmp
inc
cmp
popf
fdivr
xor
rol
mov
inc
pushf
enter
xchg
xchg
jmp
ror
out
dec
mov
call
loopne
test
pop
mov
jmp
sbb
dec
dec
mov
sbb
aam
mov
jnp
xor
cwde
in
lahf
sub
ror
hlt
xchg
or
mov
ins
out
mov
sbb
mov
imul
push
cmp
fwait
sbb
sbb
shr
adc
dec
sbb
repz
mov
popf
xor
div
xchg
mov
cmc
imul
add
mov
adc
push
and
ds
adc
test
hlt
sub
mov
and
pop
ret
not
mov
sbb
aas
jne
call
(bad)
push
ins
adc
hlt
lock
into
int
xor
pop
cmp
daa
jp
mov
push
(bad)
pushf
add
xchg
pop
call
xchg
jns
(bad)
fistp
xchg
stos
arpl
pop
add
(bad)
sub
and
or
call
js
fstp
jns
add
fstp
in
xchg
(bad)
retf
mov
add
xchg
xor
jns
cmp
cld
push
dec
mov
push
loopne
adc
test
adc
inc
aad
pop
jo
repz
sbb
cli
mov
inc
add
adc
cmp
stos
out
pop
mov
mov
pusha
out
rcr
ss
or
xchg
repz
add
imul
pop
fdiv
mov
aas
(bad)
imul
jecxz
adc
mov
(bad)
mov
sbb
fdivrp
mov
push
inc
add
lahf
jg
clc
ret
pop
ins
popa
push
mov
(bad)
mov
iret
ror
outs
mov
frstor
not
xchg
push
(bad)
sti
enter
lds
mov
pop
(bad)
addr16
adc
les
clc
jae
jno
pop
mov
add
sbb
or
pusha
rol
mov
mov
sbb
aad
test
lahf
jle
dec
clc
dec
inc
dec
(bad)
data16
rcl
mov
punpckldq
push
sbb
add
mov
sub
sub
in
jmp
loopne
cld
xor
xchg
cmp
push
imul
fsub
icebp
push
clc
loop
mov
mov
xor
cmc
push
pusha
inc
aad
aad
loopne
data16
push
and
cwde
std
or
frstor
sub
js
pop
xchg
arpl
out
and
int
lods
pusha
iret
sub
out
dec
mov
sbb
sbb
xchg
mov
adc
lock
cmps
cwde
cwde
jno
jb
inc
add
pop
add
(bad)
aad
stc
xor
mov
(bad)
mov
and
lods
push
retf
add
adc
dec
movs
add
imul
outs
imul
in
outs
aas
fisubr
cs
jg
fild
xchg
xchg
aad
ror
dec
daa
sbb
cdq
out
inc
cmp
test
xchg
les
mov
in
mov
pop
pop
into
repz
sub
pop
lods
cmp
inc
xor
addr16
call
scas
dec
cmp
xor
add
data16
xchg
addr16
stc
push
lea
inc
mov
or
or
xchg
push
cmp
(bad)
call
aam
loopne
jnp
into
pop
jmp
(bad)
mov
addr16
leave
sub
jno
aam
test
cmc
ds
clc
fnstsw
xrelease
xor
xchg
xchg
pop
add
mov
std
xor
js
jo
mov
pop
cmp
jmp
cmp
adc
ja
adc
ds
adc
cmps
adc
out
push
outs
rcr
mov
stos
or
or
sbb
bound
add
push
sbb
and
fisttp
cld
mov
das
jecxz
and
add
xchg
inc
push
jmp
das
jne
mov
popf
push
mov
sbb
adc
mov
pushf
xchg
push
cmps
cdq
or
mov
fcos
mov
and
fs
cmps
mov
mov
out
mov
in
cmp
jecxz
or
and
push
icebp
sahf
cli
mov
in
loopne
add
out
push
pop
ret
shr
loopne
cmp
fidivr
cs
das
push
ins
inc
pop
rcl
aaa
adc
daa
sub
dec
inc
jnp
cmps
imul
or
push
jnp
add
and
shl
lds
xor
dec
jb
or
add
ret
jo
sahf
enter
into
pushf
inc
rol
mov
xchg
push
jo
push
or
fld
and
adc
fwait
dec
pop
xor
mov
sbb
aas
lods
loop
in
into
jo
jl
cwde
jmp
sahf
(bad)
xlat
(bad)
push
or
cmp
mov
and
fadd
pusha
test
xchg
loopne
inc
or
xlat
retf
push
cmp
mov
push
sbb
xchg
cmp
xchg
xchg
outs
rol
push
out
enter
xor
ins
mov
add
mov
push
rcr
jmp
sahf
dec
pop
lods
aam
out
leave
icebp
dec
mov
(bad)
mov
inc
mov
sub
or
cmp
and
cld
ins
xchg
xlat
sbb
shl
aas
mov
(bad)
les
cmps
inc
in
ror
(bad)
mov
and
arpl
jbe
arpl
push
jp
push
push
ins
std
fisubr
int
or
lods
ins
sub
popf
cmp
mov
mov
jecxz
pop
loopne
xor
xor
cmp
pop
or
outs
cwde
in
pop
shl
inc
repnz
arpl
jmp
or
mul
sub
mov
iret
xor
mov
cli
out
aam
int3
imul
aam
(bad)
or
nop
retf
lahf
shl
dec
clc
lds
bswap
(bad)
call
xchg
pop
add
stos
inc
and
aam
retf
fld
pop
stc
xchg
and
jae
mov
movs
div
pop
inc
sbb
dec
cmp
add
mov
pop
sbb
push
pop
push
mov
fs
aam
xchg
mov
xchg
repz
inc
mov
mov
loope
adc
or
mov
inc
push
loop
cli
leave
mov
fsub
loop
fstp
mov
(bad)
xor
push
mov
stc
lock
ss
inc
jne
scas
xchg
adc
das
loope
int
mov
in
fst
inc
fisub
mov
xchg
xchg
mov
mov
es
jmp
(bad)
outs
push
push
xchg
push
dec
cs
dec
xor
pop
dec
jecxz
(bad)
jns
jle
sub
(bad)
fucomi
cmp
add
inc
int
or
inc
adc
ret
gs
cwde
mov
outs
and
arpl
xchg
movs
scas
lods
out
pushf
mov
jl
pop
pop
std
arpl
fcom
in
(bad)
push
push
dec
cli
adc
daa
fstp
int
push
lahf
aaa
mov
jmp
mov
jp
aad
aad
(bad)
lahf
hlt
sub
pusha
gs
mov
icebp
mov
add
test
sbb
add
rcl
fidiv
cmp
scas
or
mov
es
das
dec
sahf
into
xchg
dec
push
sahf
js
ins
scas
test
in
enter
mov
add
pusha
push
dec
(bad)
je
(bad)
(bad)
jne
(bad)
cli
lahf
sbb
movs
outs
fwait
add
outs
mov
mov
or
(bad)
jmp
outs
sub
mov
mov
mov
sub
enter
push
clc
push
dec
imul
ret
in
add
add
or
mov
cmp
loop
inc
xlat
dec
popa
test
das
xor
aad
retf
adc
(bad)
iret
jge
sub
push
fsubr
and
dec
and
jge
jle
sbb
pop
xlat
and
(bad)
imul
fs
je
test
jns
cmps
cdq
dec
call
inc
ss
add
mov
dec
fstp
or
inc
dec
add
imul
mov
ins
and
adc
ds
push
shr
or
ins
sbb
inc
jnp
xor
or
cli
push
scas
dec
mov
xor
mov
sbb
cmp
nop
add
and
pop
pop
add
loop
jns
xor
fwait
adc
mov
xchg
and
nop
jg
sbb
dec
sbb
dec
arpl
scas
cli
xor
int
pop
aaa
sbb
mov
mov
inc
pop
jg
outs
js
push
sbb
xchg
xchg
mov
int
repz
and
inc
xchg
xor
mov
fsubr
sbb
mov
adc
sbb
push
adc
and
pushf
xor
xchg
mov
sti
in
inc
inc
bound
outs
lahf
iret
push
cmc
mov
cmp
adc
jg
lock
sar
addr16
jecxz
call
les
sub
fistp
pushf
mov
fistp
xchg
jg
xlat
mov
out
and
loop
out
lods
mov
(bad)
ror
fnstsw
pusha
jns
cs
out
hlt
das
in
sub
cmc
adc
call
xor
arpl
aam
daa
lock
pusha
out
sahf
dec
jge
jns
cmp
arpl
fmul
dec
add
dec
push
icebp
repnz
sti
pushf
mov
sbb
fwait
int
mov
jns
adc
ds
ret
mov
cmp
jmp
or
out
cmc
test
and
int
(bad)
dec
xchg
bound
jmp
ins
mov
inc
shr
sahf
daa
(bad)
cmp
repnz
(bad)
or
push
loopne
in
hlt
test
xchg
xor
psrad
movs
enter
cmp
dec
outs
pop
dec
hlt
mov
lods
in
xchg
inc
retf
int
ret
sar
ror
test
fsubr
enter
cmps
mov
outs
jnp
mov
or
mov
stos
push
mov
sub
mov
cmp
inc
jb
test
push
(bad)
out
loop
mov
pusha
lea
leave
mov
aad
rcl
mov
mov
call
iret
mov
aaa
in
fdiv
fistp
fnsave
mov
pop
sub
das
pop
pop
fs
mov
daa
inc
mov
sub
jne
je
adc
scas
addr16
cmp
out
enter
mov
pop
imul
mov
jmp
push
enter
sbb
lea
stos
jb
rcl
jle
ins
jmp
int3
(bad)
sbb
mov
in
aam
push
aad
pop
dec
outs
xor
push
jmp
arpl
jb
ss
out
mov
cwde
push
cdq
je
jmp
mov
cld
sete
lods
cmp
and
daa
loope
imul
push
inc
rcr
lds
ret
rcl
push
out
(bad)
loopne
dec
xlat
cmp
mov
add
(bad)
daa
out
cmp
mov
add
mov
jge
les
jns
outs
inc
mov
cmp
mov
retf
lea
sub
sub
cs
jno
enter
mov
sbb
sbb
fs
das
mov
fcom
loopne
mov
jmp
retf
mov
cmp
je
lods
scas
popf
in
pushf
sub
mov
inc
je
and
push
(bad)
jo
dec
cmp
bound
repz
daa
pop
ret
(bad)
jmp
scas
mov
inc
and
stos
aam
push
call
and
bnd
arpl
imul
xchg
xor
jno
inc
mov
addr16
ins
push
and
inc
js
or
iret
popa
jecxz
mov
imul
pop
cmp
sar
mov
push
retf
in
and
jecxz
and
(bad)
fwait
mov
jmp
dec
(bad)
sbb
adc
xchg
mov
mov
dec
xor
cdq
cld
mov
cmps
enter
or
scas
repnz
out
cmp
rcr
push
cmp
jecxz
js
pop
es
dec
sahf
mov
jbe
icebp
jp
(bad)
jb
imul
adc
mov
std
jmp
mov
loop
mov
add
test
mov
out
sti
fsub
adc
fsubp
mov
push
(bad)
jl
pop
jae
int3
loop
movs
sbb
xchg
out
rol
jae
fld
or
rol
(bad)
fisubr
sbb
inc
jae
sub
sub
outs
loopne
add
loop
mov
mov
retf
fwait
dec
dec
push
pushf
shr
mov
stc
mov
stos
lds
inc
sub
call
jb
mov
mov
pop
jle
xchg
or
mov
fimul
mov
retf
imul
sbb
and
adc
cmc
xor
outs
stos
xor
inc
xchg
mov
mov
arpl
sar
rcr
ins
dec
test
cs
sub
shl
lahf
clc
mov
pop
or
gs
or
cdq
leave
pop
sub
and
sbb
add
loop
and
outs
jno
xchg
sbb
mov
aas
arpl
leave
adc
xlat
fld
out
sub
pop
int
xor
ins
mov
ins
fimul
call
icebp
xchg
outs
xlat
jno
leave
cmps
scas
push
push
div
repnz
dec
jl
mov
add
inc
jb
push
dec
and
mov
push
inc
fsub
xlat
mov
jle
je
div
push
call
fs
pop
xchg
xchg
icebp
in
cmp
adc
mov
xorps
call
mov
mov
inc
inc
add
mov
gs
jns
inc
pop
dec
in
ins
mov
rcl
in
repnz
lods
and
inc
jbe
cmp
jbe
rcr
test
loopne
mov
inc
imul
sbb
xor
retf
(bad)
test
pushf
mov
mov
mov
pop
jmp
movs
cdq
icebp
add
dec
xchg
stos
sar
test
mov
mov
pop
lahf
cmp
jns
cmp
sti
inc
mov
shl
jecxz
call
popf
dec
test
retf
mov
add
sbb
sbb
pop
push
pop
lods
push
mov
sbb
mov
dec
jno
jnp
jecxz
ror
or
and
fsub
sahf
pop
outs
pop
fbld
sbb
(bad)
xchg
or
sub
xchg
add
mov
in
mov
adc
enter
outs
mov
push
icebp
xchg
ins
push
cmc
or
stos
jae
pop
dec
movs
and
or
fwait
or
aad
mov
hlt
loop
inc
push
inc
and
adc
ds
mov
or
mov
jp
push
mov
push
in
out
or
cmp
aaa
adc
popa
mov
out
xchg
mov
cmp
arpl
cmp
rcl
and
pop
aam
dec
movs
fs
cmpps
(bad)
fwait
jnp
popa
mov
ret
sahf
add
addr16
xchg
fld
or
mov
popa
test
add
shl
dec
push
shr
nop
rol
pusha
movs
retf
cmc
mov
xchg
jbe
xor
sub
or
xchg
sub
repz
out
adc
or
pop
enter
pop
or
mov
movs
dec
lahf
adc
xor
cmp
push
mov
pop
or
xchg
pop
mov
movs
inc
and
cmp
movs
mov
rcl
int
mov
or
cmp
lahf
jecxz
inc
jmp
xchg
sahf
cmc
cli
sahf
pop
sub
pusha
add
xor
xchg
jnp
sbb
xchg
mov
adc
cld
movs
ret
lods
test
pop
fwait
pop
mov
bound
pop
nop
das
cmp
into
jns
sub
retf
dec
push
push
shr
or
dec
mov
ss
cld
sbb
xchg
add
pop
imul
push
mov
mov
sbb
out
shr
pusha
sar
jo
in
sbb
jg
cmps
les
leave
in
cmp
sub
mov
repz
inc
add
sbb
ds
mov
call
or
and
cmp
cmp
rsm
out
arpl
sahf
add
sbb
cmp
pop
and
lock
stos
dec
cmp
inc
(bad)
bound
es
icebp
imul
retf
fild
mov
mov
jne
loopne
mov
push
icebp
loopne
xchg
sub
xor
jne
and
xchg
ja
lock
fisubr
adc
mov
addr16
imul
lds
and
retf
push
sbb
cli
jge
push
hlt
mov
fs
xor
adc
jl
iret
mov
popa
in
repz
ret
xor
xchg
xor
push
inc
pop
call
push
and
add
mov
mov
rcl
repnz
fwait
jl
mov
mov
jmp
ins
inc
in
out
xchg
push
inc
xor
loopne
daa
mov
sbb
cmp
lock
repnz
cmc
enter
sbb
xor
mov
inc
push
stos
or
cmp
mov
leave
dec
adc
mov
fidivr
enter
imul
aaa
sub
test
lods
jbe
popf
jbe
lods
fwait
ret
ds
push
out
inc
nop
imul
pushf
and
xchg
and
daa
xor
cli
mov
loop
xchg
outs
mov
mov
mov
imul
mov
sub
jb
outs
mov
xor
mov
adc
div
cdq
adc
cs
inc
mov
ret
fwait
imul
add
clc
test
mov
hlt
mov
stos
xor
fisttp
movs
out
retf
cmp
jecxz
xor
dec
into
imul
das
or
cli
ret
inc
dec
mov
or
jle
loope
cmp
sbb
cmps
cmp
imul
push
cmps
sub
test
rol
jne
sub
outs
stc
jecxz
test
jmp
icebp
mov
loopne
cmp
adc
int
inc
mov
test
out
mulps
and
call
and
push
adc
test
pop
in
xchg
dec
pushf
xchg
cmc
push
add
pop
add
mov
outs
jmp
cmp
movs
enter
dec
xchg
xchg
call
jge
(bad)
je
movs
xchg
lods
aaa
and
adc
das
pop
inc
test
pop
mov
fdiv
mov
pop
pop
shl
jg
mov
xchg
arpl
mov
cld
mov
fs
add
mov
and
(bad)
ins
(bad)
lahf
jb
mov
stos
jmp
adc
push
and
add
js
pop
repz
in
std
fsubr
aad
icebp
push
sbb
mov
mov
loop
mov
mov
adc
retf
cs
mov
(bad)
out
cmps
adc
stc
outs
int
js
push
mov
punpckhwd
neg
(bad)
aad
sub
and
adc
bound
nop
lds
inc
test
inc
mov
mov
ins
mov
xlat
xchg
and
enter
loop
addr16
push
das
cwde
pusha
test
mov
sub
mov
mov
dec
and
xor
sbb
test
out
cmps
loopne
inc
outs
popf
(bad)
sub
js
cmps
fidivr
imul
mov
cmp
(bad)
pusha
fistp
inc
scas
not
cmp
mov
jg
mov
enter
iret
push
cmps
mov
jecxz
cmp
push
cdq
xchg
ret
pop
or
or
sbb
loop
mov
xchg
mov
rcl
mov
fisubr
cmps
inc
movs
pop
jb
in
or
push
adc
scas
hlt
cmps
xchg
or
sti
jbe
int3
or
pop
inc
(bad)
jnp
mov
test
scas
aaa
retf
ficom
and
jbe
repz
push
jnp
fiadd
cmps
fiadd
or
gs
out
or
mov
mov
xchg
pop
rcl
icebp
inc
lods
sbb
push
push
hlt
test
popa
sub
jnp
out
push
loope
adc
repz
ficomp
clc
mov
retf
ja
cmp
jle
sbb
dec
cdq
dec
xor
sbb
dec
aaa
xchg
bound
pop
clc
mov
cmp
popa
rcl
add
adc
adc
loope
outs
jb
mul
jb
xchg
cmps
mov
es
or
mov
push
xchg
icebp
xor
jge
mov
pusha
retf
dec
lods
cmps
cmp
cdq
sbb
in
ins
add
data16
std
loop
inc
sahf
das
lea
xchg
cs
in
push
sub
adc
movs
scas
xor
push
cmp
mov
dec
jle
push
movs
fbstp
dec
push
adc
adc
arpl
dec
sbb
sbb
inc
sub
out
push
rcr
jle
cli
add
movs
aaa
aaa
mov
jg
cmp
sti
push
push
(bad)
push
mov
xchg
sub
jns
addr16
adc
cdq
cmp
ins
jg
mov
sub
mov
cdq
inc
push
adc
sub
cmp
sub
pop
adc
and
adc
aad
(bad)
adc
push
aam
adc
or
xlat
jg
push
out
push
xor
imul
add
cdq
cli
popf
mov
not
xchg
(bad)
mov
iret
adc
int
rcr
dec
adc
push
mov
mov
mov
xlat
imul
sbb
xor
mov
mov
mov
fild
fild
mov
ror
test
sub
push
mov
mov
dec
mov
mov
xchg
repnz
push
lds
outs
std
mov
enter
mov
pop
dec
stos
(bad)
sub
ss
popa
jmp
cmps
add
xlat
adc
out
fld
scas
psllq
out
aaa
inc
inc
ins
aam
inc
xchg
cmp
push
imul
jno
push
and
mov
leave
in
jbe
movs
repnz
fadd
cmps
push
lahf
test
aaa
movs
push
outs
aad
ins
je
push
xor
fwait
mov
scas
ins
xchg
outs
popw
and
in
fs
mov
retf
jmp
push
pop
cs
in
mov
mov
jl
pop
scas
(bad)
(bad)
push
data16
call
xchg
xchg
stos
out
xchg
addr16
and
loope
mov
mov
push
push
xlat
(bad)
jno
outs
leave
jno
inc
dec
mov
loop
pop
pop
add
or
icebp
inc
inc
lods
cmc
push
loop
mov
inc
pop
in
ins
mov
inc
(bad)
jmp
xchg
ret
sub
test
adc
inc
mov
and
sahf
ret
rol
out
cmps
and
dec
mov
mov
jg
adc
mov
push
pop
or
loopne
pcmpgtb
mov
jne
add
aam
sub
(bad)
ins
and
or
btr
add
sub
xchg
mov
ret
popa
fs
push
sub
es
mov
icebp
or
dec
or
pop
jmp
aam
lods
and
shl
(bad)
inc
jmp
cmps
jne
xor
imul
(bad)
ja
sub
out
push
sbb
imul
xor
daa
repnz
or
sub
adc
pop
loop
das
pushf
and
cmp
sahf
jecxz
jp
push
or
or
mov
out
fwait
sbb
cmp
fild
add
cmp
pop
nop
test
out
mov
out
mov
retf
cli
cmp
(bad)
stos
mov
je
dec
mov
out
dec
ja
cld
or
dec
rcr
shl
sbb
mov
adc
jecxz
add
je
addr16
adc
and
movs
mov
xor
imul
jnp
(bad)
xor
cmc
xlat
jb
xchg
xor
add
sub
in
adc
mov
cmp
mov
push
xchg
lock
mov
mov
mov
popa
push
push
dec
or
or
outs
movs
lea
jnp
mov
xor
add
ret
imul
test
enter
es
and
in
imul
sahf
(bad)
in
push
inc
cli
int
cmp
fild
lods
retf
sub
mov
xchg
inc
gs
imul
fwait
cmps
je
adc
sub
jns
sub
mov
das
shl
adc
shl
inc
ins
dec
dec
sub
adc
inc
jle
pop
dec
push
mov
movs
(bad)
cmp
out
popf
inc
and
xchg
sti
ja
nop
mov
fs
sti
cmp
in
rep
ds
mov
nop
add
lods
inc
jno
jnp
pop
sbb
pop
add
pop
mov
fild
xor
mov
xchg
mov
scas
lods
cmp
mov
and
add
add
imul
mov
push
sbb
imul
outs
in
pop
mov
clc
xor
jo
dec
lods
push
dec
sub
(bad)
ins
cld
outs
sbb
fist
out
jno
mov
ja
lods
repnz
movs
fwait
xchg
aaa
outs
scas
push
pop
outs
fisub
inc
pop
inc
aam
pop
popa
xor
lock
in
cdq
fs
out
jne
lock
mov
mov
(bad)
jmp
mov
sbb
nop
add
and
push
jae
popf
mov
lahf
gs
push
clc
in
push
mul
push
daa
cmp
xchg
cmp
fsub
dec
scas
test
leave
jecxz
mov
aaa
xchg
(bad)
lods
pop
xchg
mov
call
hlt
and
enter
popa
xor
push
cmps
ret
jo
and
jbe
push
and
dec
xchg
jne
and
and
sbb
mov
push
add
test
xor
clc
dec
cmp
ss
sub
popf
sbb
int3
(bad)
jmp
xchg
fstp
inc
xchg
movs
dec
out
xchg
mov
sbb
or
dec
nop
xchg
mov
sub
cs
shl
and
add
fucomp
ror
xchg
out
mov
div
add
jmp
out
add
leave
add
das
in
add
call
pop
jbe
shl
xchg
or
in
xlat
xor
mov
movs
fdiv
jb
sti
add
int3
cmp
adc
sbb
dec
xor
imul
(bad)
fdivrp
pop
sub
pop
xor
aam
outs
aam
rcr
sbb
in
aas
xchg
shr
or
enter
ss
mov
xor
inc
ror
hlt
fild
hlt
nop
mov
jae
jmp
fsub
or
hlt
xchg
or
mov
out
retf
mov
adc
lock
or
stos
mov
stc
adc
(bad)
and
pop
mov
pop
add
push
int3
mov
lahf
sub
mov
(bad)
shl
xor
fisub
div
add
icebp
stc
push
add
(bad)
sub
movs
push
xor
pop
mov
jl
cmp
das
and
movs
retf
add
pop
push
cmp
es
pop
xchg
popf
sbb
ins
push
ret
mov
xor
jno
std
xor
std
fdivr
(bad)
aam
arpl
push
inc
inc
xor
cmp
push
xchg
outs
gs
adc
pop
add
jnp
bound
(bad)
je
inc
enter
fidivr
jmp
loopne
lahf
xor
das
push
or
retf
dec
sub
popa
mov
test
(bad)
not
pop
pushf
mov
fsubr
pop
std
cmp
adc
adc
call
xchg
aas
ret
mov
dec
mov
pop
cli
bound
mov
jnp
dec
cmp
imul
inc
lods
call
sub
mov
push
xor
pop
fisttp
pop
adc
or
cmps
cli
scas
mov
sub
pop
mov
iret
jmp
cmc
scas
rol
and
repz
arpl
icebp
pop
add
movs
xchg
test
(bad)
das
clc
loop
ja
xor
push
or
pop
lock
gs
cli
inc
out
mov
push
in
in
inc
adc
pop
pop
loope
fstp
cmp
dec
and
scas
jmp
and
mov
fst
jno
push
outs
or
xor
and
mov
aaa
xor
dec
xor
std
cli
lods
dec
sub
push
movs
mov
in
add
push
xchg
sub
sbb
leave
aaa
dec
adc
aad
mov
ins
jg
dec
fcmove
out
sti
mov
xchg
test
out
add
push
jmp
jp
jle
xchg
lods
mov
xchg
mov
mov
inc
or
int
mov
sti
pushf
sbb
adc
cmp
push
ins
mov
mov
movs
xor
xchg
pushf
popf
add
int3
mov
adc
adc
sar
addr16
jbe
cmps
pusha
pop
jno
test
aas
sub
js
jns
xchg
(bad)
int
dec
call
dec
test
sahf
gs
in
jle
fnstcw
repz
xor
aam
test
iret
retf
or
pop
pop
retf
mov
fcmovne
ins
push
adc
scas
movs
pop
jmp
adc
mov
arpl
jns
jo
xchg
xor
mov
sbb
iret
sahf
xchg
rol
mov
xor
xor
fs
neg
and
ins
adc
sub
pusha
imul
adc
std
cmp
loopne
aad
push
adc
pop
pusha
das
std
inc
lods
sub
xor
je
push
scas
stc
sub
(bad)
in
ret
jne
ret
iret
aam
mov
push
retf
call
mov
daa
jmp
mov
mov
push
pop
inc
cmp
gs
test
cwde
and
push
mov
shl
fcmovnb
xor
das
out
enter
or
jg
sbb
scas
adc
mov
loop
jne
sbb
mov
f2xm1
dec
cmp
les
retf
cld
dec
sbb
loopne
and
pop
pop
fs
(bad)
xchg
pop
je
lods
popf
out
xchg
mov
cmp
fcom
jae
ja
xor
fbld
push
int
fs
pop
push
les
mov
ss
and
or
fstp
lods
imul
mov
fldenv
mov
faddp
loop
and
jb
arpl
dec
xchg
xchg
mov
xor
jmp
movs
or
and
out
xchg
xor
iret
ins
cwde
ja
test
cmp
test
stc
xchg
pop
fisttp
scas
mov
xchg
std
in
imul
push
cdq
lods
loope
inc
pop
sub
int3
retf
xor
xchg
push
adc
out
clc
popa
push
pop
jmp
or
pushf
add
mov
xchg
cmps
(bad)
iret
mov
mov
js
fs
hlt
xlat
(bad)
cli
xchg
ret
daa
test
add
mov
inc
xchg
and
arpl
cmp
sub
mov
aaa
bound
dec
mov
popa
adc
jae
or
test
ja
mov
mov
jne
pop
jl
test
mov
inc
scas
xchg
lahf
movs
ror
scas
imul
loop
mov
rcl
ficomp
sti
xchg
sar
ins
cmp
outs
sahf
rcl
dec
xor
sub
jl
mov
ja
add
es
pusha
push
xor
push
push
lds
cmp
cmps
sub
push
xchg
add
fwait
and
mov
fnstsw
sti
xor
add
dec
sbb
xlat
imul
stos
iret
fsub
leave
sub
ds
daa
xchg
xchg
pop
sbb
sbb
ss
pop
xchg
adc
sbb
dec
ja
gs
dec
cmp
aad
mov
push
push
jo
sbb
fidiv
inc
xor
(bad)
scas
in
leave
mov
test
(bad)
sbb
test
mov
(bad)
xchg
hlt
sbb
(bad)
jl
pushf
xchg
(bad)
cmps
add
(bad)
outs
push
add
call
mov
mov
add
add
mov
fsubr
xchg
stos
sub
cmp
jo
mov
inc
leave
jp
jae
fsub
fs
jge
stc
sub
pop
xor
cmc
jnp
rcl
push
inc
ret
ds
xor
stc
stos
dec
sub
dec
mov
sbb
mov
jmp
into
in
mov
stc
jl
add
cmp
add
adc
test
add
cmp
lahf
fwait
pop
push
gs
jp
stos
iret
ret
jg
and
test
icebp
mov
pop
and
fsub
aam
mov
out
gs
mov
dec
in
cmp
cld
pop
shl
mov
inc
pop
lock
jle
ficomp
data16
mov
dec
or
jnp
adc
out
pop
xlat
mov
mov
xor
enter
xor
je
cld
test
pop
gs
add
jbe
repz
and
(bad)
adc
sub
std
scas
cld
mov
jl
mov
push
call
push
pop
movs
enter
jae
sbb
mov
push
and
js
out
mov
(bad)
daa
cmc
int
jne
fisubr
mov
xchg
(bad)
in
stc
cmp
cld
in
dec
inc
xor
xlat
adc
and
xchg
sti
rcr
fist
mov
dec
inc
and
adc
daa
(bad)
ins
test
jne
add
lods
scas
adc
test
cmc
retf
(bad)
jl
daa
lea
sub
lahf
imul
push
scas
mov
(bad)
fldcw
dec
xor
int3
ds
out
jae
cmp
add
or
push
stos
and
lods
dec
push
into
jbe
jbe
movs
(bad)
inc
loopne
or
dec
add
or
adc
mov
ss
out
in
es
mov
add
xchg
in
das
xchg
mul
(bad)
aaa
and
adc
sub
mov
cdq
push
pop
xor
adc
leave
les
movs
inc
scas
stos
cmp
jecxz
pop
inc
dec
fcmovnbe
inc
movs
xchg
mov
mov
mov
mov
and
and
mov
cli
jmp
mov
push
xchg
push
fs
(bad)
mov
out
mov
pusha
test
inc
test
xor
adc
aam
jp
add
cdq
fbstp
push
pop
mov
lea
shl
sub
sbb
dec
push
outs
and
(bad)
xchg
push
cmc
popf
scas
lods
inc
popa
into
jns
mov
repz
mov
jg
xchg
xor
mov
and
retf
aad
dec
int3
gs
ret
jecxz
rcr
lods
mov
mov
mov
sub
ds
cmp
ja
popf
jmp
push
dec
inc
pmaxub
and
dec
jmp
push
or
outs
and
mov
fsub
or
hlt
push
add
mov
pop
or
add
cs
sbb
jnp
pop
xchg
cmp
push
stos
pusha
loopne
jae
xor
inc
cmps
mov
push
jns
or
mov
xor
cmp
push
mov
add
add
adc
cmc
lods
bound
jmp
pop
cmp
xor
test
lods
ja
ds
repz
and
nop
mov
out
xchg
fild
fwait
repnz
add
jle
sub
gs
xchg
mov
jp
mov
out
enter
or
je
cmp
lods
mov
jp
xor
outs
outs
xor
scas
jmp
gs
outs
iret
push
rcr
loop
int
push
mov
pop
movs
xchg
popa
fwait
loopne
cli
push
adc
add
clc
repnz
das
sbb
stc
mov
mov
lods
pop
cmp
add
and
std
adc
call
rcl
add
pop
jns
dec
mov
cmp
or
push
jecxz
inc
mov
icebp
adc
pop
dec
fcom
pop
pusha
push
jbe
cwde
jno
mov
or
add
mov
mov
pop
xchg
bound
aas
adc
std
mov
adc
cli
ds
add
hlt
inc
add
mov
nop
data16
in
lahf
jmp
mov
loope
xchg
pop
fimul
leave
add
sub
mov
add
lahf
dec
cmps
test
pop
mov
sub
aad
mov
mov
clc
inc
popa
xchg
fnstcw
scas
dec
adc
sub
cld
pop
pop
add
sbb
dec
pop
pop
scas
pop
(bad)
xlat
xor
jge
jne
sbb
retf
gs
and
cmps
dec
or
lock
mov
dec
mov
sub
mov
mov
sti
pop
adc
pushf
jb
push
push
in
add
jmp
xor
xor
ins
cdq
ins
push
daa
mov
push
test
ret
jo
div
adc
dec
jnp
mov
or
test
mov
and
pop
jnp
mov
pop
and
into
psrlq
pop
cmc
cld
into
daa
push
push
sub
in
push
or
cld
imul
scas
xchg
scas
cmp
cmp
sbb
cs
add
ja
inc
mov
pop
sahf
popa
jnp
lea
and
cmc
into
sub
mov
and
test
mov
iret
fiadd
ins
outs
and
xchg
lahf
sbb
sub
fld
xchg
pmulhuw
ja
scas
and
call
cmp
test
scas
add
sub
fsubr
(bad)
mov
add
push
test
out
sbb
push
mov
repz
xchg
adc
mov
in
pusha
mov
pusha
lods
in
aad
mov
sub
jecxz
mov
pop
clc
enter
fadd
icebp
ret
jb
test
cmp
test
repnz
dec
mov
call
xchg
dec
jne
or
int
movs
arpl
ds
and
dec
pop
loope
popf
(bad)
sbb
(bad)
lock
ins
dec
jbe
js
dec
push
cmps
fcomp
sub
fmul
jmp
mov
bound
test
mov
mov
jle
jnp
test
stos
xchg
stos
cmp
(bad)
xchg
(bad)
xchg
jae
cmp
pop
add
hlt
dec
push
push
mov
mov
je
daa
into
pop
push
ss
nop
add
nop
dec
add
adc
inc
test
sub
fsub
test
push
adc
xor
ret
mov
pop
mov
inc
jl
in
inc
jecxz
mov
jbe
jp
shl
and
clc
test
jle
adc
jg
sbb
and
(bad)
mov
mov
out
adc
imul
pop
das
xor
xor
rcl
pop
mov
sub
xor
loope
inc
mov
scas
rcl
dec
daa
out
inc
repnz
push
cmp
adc
lock
mov
lahf
gs
out
add
xlat
call
out
adc
inc
loope
sahf
mov
clc
(bad)
xor
daa
jmp
lock
jecxz
fisttp
fstp
les
gs
push
xchg
out
ins
(bad)
out
movs
mov
push
add
pop
xor
sub
int3
out
(bad)
test
shl
adc
loop
push
mov
fwait
cli
and
adc
mov
leave
mov
push
sbb
xchg
repnz
or
xchg
sub
arpl
jg
or
push
dec
int3
mov
aad
fld
mov
or
mov
push
xchg
mov
cmp
(bad)
(bad)
ja
mov
mov
mul
inc
mov
xor
pop
cmp
mov
jmp
(bad)
adc
push
add
(bad)
out
sub
pop
or
add
enter
push
int3
pop
fisubr
inc
dec
ins
mov
push
sub
aaa
push
test
(bad)
fld
mov
pop
jle
jo
cmp
xchg
sub
and
xor
test
ins
xchg
add
or
push
push
clc
sub
(bad)
out
cmps
or
and
test
aaa
sbb
push
xchg
dec
icebp
cmps
out
jmp
xchg
es
dec
or
(bad)
in
ret
cmps
cmp
fiadd
xchg
into
jmp
aad
or
fsub
fcomp
push
enter
idiv
jmp
cs
int
dec
lds
sar
xchg
sub
dec
pushf
cdq
pop
retf
cmp
dec
dec
dec
repz
xchg
fisubr
cs
push
and
add
(bad)
push
lods
xchg
dec
mov
push
adc
or
mov
into
fisub
dec
(bad)
loopne
es
fs
dec
pop
cmp
mov
jns
pop
fldcw
sbb
inc
in
cs
jns
jmp
sbb
mov
add
iret
dec
cmp
dec
adc
std
nop
push
retf
out
cwde
jno
leave
ins
sub
push
or
enter
les
ins
xor
or
cs
sbb
jbe
sub
les
jb
inc
adc
in
dec
mov
xchg
scas
shr
add
jle
mov
imul
lods
pop
add
dec
(bad)
jle
shl
pop
dec
inc
jmp
mov
cmp
and
lods
int3
dec
push
(bad)
cld
mov
dec
rcr
loope
xchg
out
or
cmps
jno
add
mov
ret
xor
sti
lahf
ja
ficomp
stc
ror
add
fisttp
mov
pop
sub
fadd
in
add
fistp
cmp
cdq
sbb
ss
xchg
scas
(bad)
jo
(bad)
or
out
mov
adc
dec
in
jb
outs
fisubr
or
(bad)
sahf
push
rcl
xor
xor
mov
ror
(bad)
jmp
inc
mov
cmp
jl
sub
push
jge
aaa
jmp
push
lahf
pop
mov
cdq
aas
mov
jns
dec
(bad)
in
call
arpl
sbb
and
popa
ins
push
aad
or
pop
push
test
dec
dec
mov
push
mov
push
aas
dec
xchg
cmp
nop
es
test
aad
scas
cmp
pop
xchg
cmp
scas
jg
xor
push
imul
jle
xchg
lea
ffree
pop
inc
sub
jecxz
sbb
dec
xchg
aas
outs
dec
inc
mov
inc
pop
dec
push
add
xchg
sub
or
icebp
fsubp
or
je
(bad)
sub
pop
mov
lea
test
adc
and
sbb
xchg
loop
jmp
adc
lock
dec
mov
js
sub
lahf
push
xor
(bad)
pop
into
in
and
hlt
sar
stos
pop
inc
fstp
cli
or
in
aas
mov
cs
lods
xor
push
mov
jge
sub
mov
outs
add
stos
jns
adc
les
mov
xchg
clc
(bad)
push
fs
bound
push
nop
pop
jnp
add
fs
and
test
jbe
pop
imul
rcl
out
mov
or
jecxz
ret
cdq
mov
adc
jmp
mov
and
push
les
jno
sub
out
int
test
push
pop
das
xchg
(bad)
ja
(bad)
and
fcom
inc
push
inc
add
lds
int3
inc
mov
xchg
sub
in
xor
dec
scas
fwait
inc
jg
push
jp
shr
pop
pop
xchg
xchg
test
fmul
pushf
movs
inc
cmp
and
(bad)
xor
mov
push
cdq
mov
lds
xor
xor
and
fwait
sahf
outs
dec
bound
jns
fs
ret
xchg
jg
inc
iret
shl
cmp
jne
and
and
ror
jle
fwait
inc
je
sbb
ror
pop
pusha
loopne
loopne
inc
(bad)
xchg
mov
adc
fbstp
or
test
(bad)
fnstsw
rep
aad
push
ret
in
lock
and
sbb
movs
int3
mov
aad
and
jle
sbb
mov
lahf
mov
sbb
mov
and
pop
mov
cmp
dec
call
(bad)
je
(bad)
adc
or
xor
inc
(bad)
mov
pop
jmp
jge
adc
xor
hlt
sub
lock
push
and
rol
(bad)
add
mov
cs
fidivr
add
adc
shr
lods
fcom
cmp
retf
mov
mov
adc
nop
hlt
(bad)
sti
clc
adc
repnz
popa
bound
pop
nop
dec
jo
dec
nop
sar
or
mov
push
and
jb
adc
test
test
adc
mov
mov
sti
xchg
mov
pop
fdivr
fmul
movs
xor
les
push
imul
fidivr
xchg
pop
inc
retf
push
and
pusha
mov
xor
jl
pop
call
ins
(bad)
xchg
mul
jnp
mov
adc
call
and
dec
push
add
mov
add
sbb
adc
mov
not
shl
sub
push
push
fcom
mov
sub
inc
test
or
mov
xchg
and
cli
test
loope
push
cld
inc
sbb
mov
dec
je
cmp
add
mov
add
add
xchg
inc
jg
cld
mov
add
mov
jnp
fsub
test
fmul
ins
jle
xchg
cmp
add
sub
xor
mov
and
dec
push
mov
data16
arpl
mov
mul
mov
in
test
cdq
sbb
push
out
cmps
aam
daa
retf
push
push
push
sbb
dec
in
adc
push
xchg
pop
adc
pop
test
xchg
xchg
pop
add
cmps
(bad)
jbe
or
call
push
movs
clc
in
ja
(bad)
sbb
rol
ja
add
cmps
and
add
or
mov
sub
fs
add
call
cmc
call
adc
icebp
shl
test
dec
fld
sti
pop
pushf
push
inc
(bad)
and
mov
xchg
retf
add
cmps
test
dec
je
cli
test
xor
lahf
int
xchg
push
ss
fsubr
test
jns
fwait
dec
into
inc
mov
add
(bad)
retf
xor
and
aad
in
xor
enter
add
repnz
push
adc
lods
std
test
xchg
xor
push
xchg
jne
sbb
inc
shr
mov
xor
mov
fbstp
or
mov
mov
xor
and
test
test
pop
push
adc
pop
dec
mov
jnp
retf
dec
test
jl
push
sbb
mov
pop
adc
add
outs
inc
mov
out
adc
sbb
and
push
or
jns
sbb
mov
ret
js
es
xchg
(bad)
dec
mov
out
pushf
add
pop
xchg
leave
xor
add
fnsave
mov
adc
mov
or
(bad)
out
jge
and
fwait
out
xchg
rcr
pop
mov
push
pop
shl
mov
push
jnp
mov
jge
jl
movs
mov
pop
outs
push
imul
dec
xor
stc
sub
fld
xchg
jbe
(bad)
jmp
pop
out
pop
inc
add
or
mov
scas
and
fcomp
adc
loop
dec
dec
sbb
xchg
mov
jne
inc
jmp
int
mov
adc
cld
mov
mov
loop
or
mov
lods
jne
mov
or
mov
mov
mov
add
and
lahf
aas
aaa
cmp
(bad)
(bad)
xchg
xchg
loop
jle
vminpd
rep
and
je
in
xor
or
mov
cwde
aas
or
fadd
or
mov
mov
mov
mov
cmp
(bad)
pop
and
pusha
mov
adc
shr
mov
push
loopne
stc
jne
imul
adc
mov
sub
movs
ins
pop
pop
in
js
inc
and
scas
add
xchg
jbe
sub
mov
cli
dec
ret
mov
xor
clc
push
inc
cmp
adc
and
or
fptan
cmp
fsub
pop
or
rcr
ins
dec
sbb
inc
mov
mov
sub
xor
addr16
(bad)
lock
shl
xchg
in
sub
push
stc
push
mov
stc
push
jle
out
call
aam
sbb
jne
sbb
fs
xor
ret
(bad)
mul
aad
lods
add
(bad)
(bad)
ins
add
mov
push
call
aas
test
inc
dec
pop
jp
or
mov
movs
inc
movd
jecxz
outs
fsubr
or
or
cdq
lss
push
mov
push
nop
outs
and
ret
cs
xchg
test
cmp
mov
and
inc
leave
cs
movs
(bad)
adc
into
int
push
xor
xchg
mov
mov
push
aas
dec
xlat
push
xchg
hlt
jb
in
mov
mov
mov
fstp
or
jge
or
frstor
sub
cmp
movs
mov
jle
jo
mov
mov
and
iret
xchg
lock
aam
es
jmp
add
xchg
sbb
ficomp
adc
jmp
ja
xor
sbb
push
jle
arpl
ja
icebp
loope
fist
int
aad
push
xchg
arpl
adc
pop
mov
call
(bad)
push
push
pop
fdivr
dec
sbb
inc
adc
inc
fisub
jne
loope
mov
gs
out
add
xchg
sub
sahf
inc
add
out
lds
neg
mov
jns
jno
xor
mov
shr
mov
movs
jp
sub
xchg
fs
add
xchg
test
inc
fwait
pop
cmp
cmp
call
or
add
cmp
arpl
xor
cmps
xor
fwait
call
and
or
xchg
push
popa
xor
pushf
popf
inc
daa
pop
jecxz
fstp
cwde
jbe
inc
call
rol
hlt
(bad)
ror
add
scas
in
push
push
and
push
sub
or
and
jl
adc
mov
pushf
cmp
imul
stos
fild
inc
(bad)
in
dec
iret
pusha
mov
cli
ja
pusha
gs
mov
mov
addr16
and
dec
enter
mov
and
inc
inc
inc
movs
cmp
push
cmp
dec
xor
adc
neg
mov
(bad)
lock
repz
ds
mov
hlt
and
outs
jae
(bad)
and
push
cmp
push
sbb
sbb
xor
jmp
shl
pop
and
push
or
and
push
mov
(bad)
mov
or
retf
jp
xchg
pop
lds
ds
jmp
rcl
ins
lods
fmul
xor
mov
jae
push
out
dec
fldenv
adc
mov
ins
in
mov
rol
cmp
stos
pop
mov
xchg
push
mov
pusha
push
retf
call
jno
dec
lds
fst
add
pop
mov
jo
push
fwait
jp
xlat
cmp
push
jmp
dec
ja
or
mov
int3
rol
add
xchg
sbb
mov
cmp
mov
jns
push
jns
shr
push
dec
cmc
imul
nop
loop
pop
mov
mov
inc
dec
push
pop
fnsave
lods
mov
repnz
fucomp
push
rol
je
addr16
lods
mov
and
add
jge
(bad)
add
adc
pusha
sbb
sub
rol
ds
inc
mov
xchg
or
add
dec
idiv
jns
fimul
jmp
loopne
sub
je
aaa
mov
pusha
int
cld
sub
fidivr
pop
dec
or
mov
ins
test
test
dec
and
stos
jno
pop
cmp
xchg
push
inc
xor
retf
js
mov
sbb
xchg
out
dec
inc
cmps
inc
adc
push
mov
pop
rol
and
xchg
dec
lea
dec
sbb
push
pop
dec
leave
xor
in
xchg
dec
sbb
ret
mov
cmp
fld
jmp
xor
ja
fwait
inc
or
adc
retf
lods
cwde
xor
sub
fs
repnz
movs
mov
lods
add
stos
dec
fcom
aad
jns
add
or
(bad)
adc
sar
stos
(bad)
je
push
sub
jns
arpl
test
add
jnp
xchg
cmps
lds
(bad)
aad
repnz
and
cmps
jno
mov
fxtract
pushf
ds
js
shl
sub
adc
sub
adc
les
pop
mov
jnp
data16
mov
cmc
xchg
inc
inc
mov
push
mov
add
popa
adc
jo
add
mov
push
push
pop
in
push
out
add
mov
cmp
push
cmp
ret
mov
and
jnp
(bad)
adc
or
fstp
add
cmps
jmp
enter
(bad)
bound
dec
sbb
mov
jns
mov
sti
dec
out
xchg
movs
adc
mov
call
push
in
stos
popf
imul
lods
mov
mov
retf
mov
not
je
in
jmp
sar
push
adc
push
hlt
inc
xchg
push
push
enter
mov
and
js
mov
mov
aaa
cdq
(bad)
imul
lds
or
(bad)
je
and
es
jl
jns
push
rcr
dec
or
mov
call
pop
test
popa
shl
imul
add
bound
xchg
sar
cmps
(bad)
cmc
sbb
addr16
hlt
ja
pushf
movs
popw
js
push
inc
retf
jle
jecxz
mov
pop
cmp
mov
xor
imul
loop
ins
mov
in
mov
or
aam
push
mov
mov
repz
mov
mov
data16
leave
ror
stc
pop
daa
sub
ins
(bad)
iret
call
icebp
dec
dec
xor
cmp
xchg
inc
adc
mov
pop
fs
repz
jecxz
jo
or
f2xm1
test
add
mov
mov
xchg
xor
mov
inc
sbb
fwait
sbb
outs
xchg
aam
xor
cs
div
xchg
lahf
mov
sar
inc
fadd
imul
push
cmp
cmp
dec
and
ret
xor
call
jp
xor
jbe
cmps
mov
jb
movs
push
add
mov
mov
inc
pop
jge
cdq
inc
mov
ficom
or
out
repz
xchg
xchg
pop
(bad)
push
xor
pop
push
dec
push
adc
mov
xor
push
xchg
pop
sahf
inc
hlt
hlt
outs
stos
dec
dec
pop
mov
or
aad
xchg
test
pop
xchg
pushf
mov
pop
es
push
jge
jecxz
pop
xchg
add
cmp
in
dec
addr16
cdq
jle
dec
pop
(bad)
icebp
inc
lods
enter
mov
std
and
retf
dec
push
cmp
mov
or
jl
sub
sub
outs
and
mov
(bad)
shr
stos
inc
ret
pop
in
push
aad
fiadd
inc
or
and
sub
loope
aaa
jmp
or
mov
dec
outs
(bad)
fs
fnstsw
pop
cmp
sbb
clc
(bad)
int
fs
(bad)
mov
mov
xchg
cmp
in
ret
xor
rep
xor
stos
repz
idiv
jmp
dec
xor
popf
xchg
(bad)
(bad)
fimul
aad
push
xor
scas
xchg
xchg
or
test
sti
mov
push
dec
push
nop
dec
test
lock
enter
mov
add
cmps
sbb
idiv
mov
ja
cmp
or
fsub
cmp
retf
(bad)
mov
cwde
inc
repnz
mov
push
or
mov
jle
jno
stos
inc
out
retf
push
in
xor
call
inc
aas
sbb
leave
cmp
pop
sbb
cmp
bound
mov
dec
(bad)
xlat
mov
pop
and
dec
in
mov
pop
sub
cs
inc
pushf
adc
sti
daa
xchg
add
mov
push
mov
mov
icebp
mov
push
xchg
xor
repz
dec
loope
cwde
pop
cwde
scas
xor
dec
popf
aaa
into
outs
test
clc
dec
mov
(bad)
js
sub
loopne
add
pop
jge
sub
mov
pop
ins
cld
pushf
or
or
mov
mov
push
sti
das
fsub
add
inc
pop
or
push
(bad)
cli
xchg
sbb
mov
sti
popa
test
pop
out
sbb
pop
in
scas
addr16
push
and
je
xchg
cmp
xor
adc
or
mul
retf
shl
das
clc
outs
and
stc
jmp
lods
ss
push
and
mov
test
mov
pusha
xchg
mov
dec
jns
lahf
mov
sbb
mov
push
push
out
sbb
add
fild
mov
mov
fs
frstor
sbb
inc
(bad)
or
dec
loop
push
xor
xchg
xchg
test
test
cmps
mov
xor
movs
out
ja
dec
dec
loop
scas
push
sti
sbb
out
scas
push
adc
pop
retf
lods
or
hlt
sbb
xlat
pop
and
enter
sahf
pop
in
je
mov
scas
fdivr
dec
(bad)
mov
mov
inc
lea
pop
cmps
xor
mov
lahf
push
jecxz
jp
mov
push
inc
or
(bad)
sbb
scas
push
outs
pop
test
lods
in
xchg
and
dec
or
inc
mov
mov
cmc
fnsave
xor
jbe
hlt
or
lods
mov
mov
out
or
xchg
push
and
sbb
sub
idiv
seto
adc
or
int
inc
call
out
xchg
sar
add
jnp
mov
leave
in
sub
jmp
mov
sub
test
jecxz
mov
jae
mov
scas
sbb
aad
stos
fstp
sar
jno
push
mov
shl
out
mov
hlt
inc
icebp
or
and
or
mov
(bad)
pop
arpl
mov
imul
faddp
in
sahf
pushf
fcomip
push
xchg
sahf
ins
adc
mov
push
jnp
scas
sub
pop
test
jmp
test
jg
dec
or
jne
dec
or
and
cmp
inc
adc
test
mov
mov
add
call
sub
mov
ror
sbb
loopne
sbb
lahf
out
xor
dec
loope
stc
inc
pusha
mov
fiadd
jae
pop
les
push
or
xor
stc
xor
loope
adc
cmp
ror
das
mov
pop
add
inc
mov
mov
aaa
lock
scas
add
cli
or
sahf
fadd
dec
inc
jb
fadd
cdq
push
sbb
fs
xor
add
mov
inc
push
sub
mov
lahf
or
push
dec
loop
rcr
push
dec
pop
retf
jp
sti
mov
push
lods
and
xchg
dec
lock
sbb
mov
mov
pop
in
jmp
rol
(bad)
icebp
or
outs
add
cmps
stos
aam
nop
in
std
out
fucom
mov
enter
out
jl
xor
or
mov
repz
cmp
pop
push
into
cmc
cmp
pop
mov
popf
daa
lods
cmp
jns
push
hlt
outs
push
int3
in
xchg
sub
sbb
mov
and
(bad)
or
in
dec
mov
aad
dec
mov
adc
sbb
push
push
adc
sub
add
(bad)
ins
movs
call
cmp
mov
bound
sbb
inc
call
sub
mov
pop
sbb
call
xlat
push
stos
and
pop
sub
push
mov
pop
shl
call
in
sbb
test
pop
movs
adc
out
pop
add
cmp
int
and
scas
scas
mov
or
loope
pop
pop
mov
in
or
adc
scas
jns
cmp
xchg
inc
std
sahf
mov
dec
in
xchg
pop
mov
enter
in
push
pop
push
mov
ror
mov
cmp
repnz
repnz
xchg
push
sbb
sahf
inc
test
dec
pusha
inc
shl
not
sbb
std
pop
fidiv
jge
sbb
imul
clc
es
jnp
pushf
repnz
in
mov
lods
(bad)
or
jnp
pushf
test
repz
mov
loop
cs
mov
(bad)
cmp
add
adc
push
mov
or
hlt
jecxz
mov
sub
mov
inc
shl
mov
mov
in
sbb
xchg
inc
shl
in
inc
jno
pop
add
push
push
and
lods
xchg
repnz
sub
das
fistp
aas
jne
ins
sti
cs
xchg
fs
loopne
test
mov
test
loopne
ins
sub
xor
dec
call
sti
std
add
fdivr
adc
popf
dec
xchg
fwait
inc
sub
cld
rol
call
ret
mov
ins
pop
dec
mov
test
mov
scas
push
(bad)
std
sub
repz
gs
aam
cmp
jp
mov
push
into
hlt
in
xor
or
clc
daa
mov
outs
dec
or
mov
lea
aam
cmp
lock
push
test
stc
mov
gs
pop
mov
or
nop
ficomp
ja
out
mov
pusha
iret
dec
push
add
sar
push
xor
clc
imul
(bad)
popf
popf
ret
pop
sub
xchg
jns
jae
ret
or
push
imul
xchg
rcr
jbe
adc
push
pop
mov
push
or
mov
xchg
sbb
repnz
ret
call
enter
jnp
ins
jb
arpl
sbb
dec
xchg
push
mul
or
ret
push
push
pop
outs
js
push
popa
jnp
cmp
jb
sub
(bad)
idiv
cld
das
mov
daa
and
sub
sti
stc
and
xchg
std
ror
push
and
ret
sub
imul
and
xlat
stos
adc
and
movs
in
mov
call
pop
pop
(bad)
(bad)
hlt
sbb
add
call
in
mov
sbb
xchg
je
daa
ja
and
(bad)
pop
fcomip
outs
pushf
mov
mov
ja
adc
sahf
add
inc
cmp
sub
and
fisttp
cmc
arpl
fnstsw
dec
test
movs
jge
xchg
xlat
jmp
pop
mov
mov
xchg
test
or
xchg
shr
or
out
fcmovnu
mov
test
sub
int3
dec
std
and
or
inc
test
mov
fwait
jge
sti
xor
mov
push
dec
mov
xchg
and
jns
pop
xchg
int3
xchg
jge
cmp
and
dec
add
jp
adc
jge
je
mov
cmp
fist
adc
fdiv
loopne
xchg
sub
leave
push
dec
mov
jge
xlat
mov
idiv
and
xor
xchg
icebp
lock
pop
data16
mov
pusha
sbb
ja
adc
and
mov
ret
adc
out
mov
cmp
movs
add
les
pop
sub
pop
gs
sub
add
mov
in
cs
adc
pop
stc
cs
or
and
sbb
mov
aaa
push
shl
std
div
inc
icebp
and
ror
jno
pop
and
jns
push
pop
mov
aas
inc
fcmovbe
popa
push
je
pop
rol
inc
repnz
test
pushf
(bad)
sbb
outs
call
mov
repz
outs
into
mov
mov
and
popf
mov
jge
push
inc
add
pushf
add
sahf
stc
xor
push
xchg
xchg
lods
shr
fld
xor
jns
(bad)
lds
out
iret
sbb
pop
add
inc
and
inc
adc
stos
aad
(bad)
stc
pop
arpl
dec
retf
lods
fcomi
sub
jge
mov
mov
cli
aam
and
outs
sub
pushf
repnz
loop
in
std
adc
sbb
sti
movs
fdivr
push
movs
fld
(bad)
jmp
scas
cmp
add
pop
dec
sbb
aad
loopne
repnz
xchg
sub
jno
aam
cdq
repnz
lock
cdq
test
add
xchg
mov
scas
mov
out
repnz
sti
nop
aas
add
jns
add
jbe
and
ds
pop
xor
push
lods
pop
jb
sbb
jbe
cmp
push
xchg
pop
push
scas
xchg
and
outs
out
dec
mov
mov
push
xchg
inc
cmps
inc
cs
inc
and
(bad)
add
fnstenv
mov
arpl
std
loope
jp
arpl
add
adc
les
pop
mov
or
popf
leave
mov
pop
xchg
(bad)
mov
setge
xor
dec
ret
test
fwait
retf
ret
pop
adc
sub
add
icebp
inc
or
aaa
xchg
jge
cwde
in
or
xor
pop
xor
fs
shl
cmps
sahf
popa
outs
mov
(bad)
jecxz
aaa
cli
inc
xchg
dec
xchg
mov
mov
ds
nop
cmp
out
jno
shr
fstp
out
dec
pop
retf
loop
cmps
out
iret
int3
xor
cdq
cmp
call
sahf
stc
int3
jnp
push
sub
mov
mov
mov
or
or
ds
dec
jns
mov
dec
in
inc
dec
sahf
leave
and
pushf
jmp
jmp
ret
lods
pop
xchg
mov
mov
or
out
lock
xchg
ins
or
lods
mov
in
adc
mov
in
push
add
dec
movs
sar
xchg
fidiv
out
imul
jns
jp
or
sub
shrd
(bad)
adc
jmp
dec
adc
dec
or
xchg
adc
xchg
mov
sahf
pop
sbb
xor
add
dec
test
add
stos
mov
jno
repz
or
movs
xchg
sub
add
or
movs
mov
mov
add
inc
daa
push
fist
fild
aam
mov
retf
jecxz
xchg
jg
add
push
(bad)
hlt
out
pop
out
push
data16
adc
in
xor
xor
outs
jno
mov
fistp
adc
lock
sub
cmps
aaa
push
add
cmp
and
xchg
fs
cmp
stos
in
xchg
test
stos
mov
xchg
fyl2x
js
inc
in
or
adc
sbb
iret
mov
mov
fadd
out
and
and
into
fsub
cmp
sbb
jmp
push
or
inc
js
pop
ds
imul
fist
sahf
(bad)
vaddsubpd
jmp
jns
mov
(bad)
and
loop
sub
lods
and
shl
sbb
pop
stc
mov
sahf
fsubr
or
inc
imul
jne
adc
jg
mov
mov
sahf
cmp
push
test
loop
jne
xor
add
jae
mov
in
(bad)
hlt
mov
push
or
lds
fst
inc
or
mov
push
jmp
(bad)
jno
(bad)
mov
int
in
sub
stos
movs
lea
jp
call
aaa
out
dec
scas
out
ror
iret
inc
iret
leave
cmps
cmc
sbb
shl
add
retf
adc
bound
push
stos
retf
mov
fidiv
fist
jg
adc
add
sbb
outs
adc
popa
sahf
aas
xchg
lahf
in
lea
mov
sti
push
mov
lds
mov
and
cmc
sbb
fadd
retf
mov
loop
loop
cmp
pop
neg
inc
adc
push
loope
repnz
mov
out
mov
ret
fs
aam
int3
jle
jno
ja
push
scas
loope
mov
mov
or
jae
dec
(bad)
cmc
fist
pop
test
push
dec
call
loop
dec
loop
mov
cmc
mov
adc
retf
stos
call
daa
repz
pop
mov
test
and
gs
jle
jp
sbb
in
lods
cli
rol
inc
mov
mov
mov
rol
sbb
test
xchg
push
shl
imul
js
xchg
mov
jle
jge
jb
dec
or
je
gs
push
test
jns
std
sub
mov
gs
test
aaa
(bad)
adc
add
das
mov
call
inc
jmp
xchg
push
imul
cld
push
sbb
cmp
(bad)
mov
and
fdivr
test
cmp
imul
xor
pop
jo
stos
or
fld
or
mov
add
jae
mov
jbe
mov
pushf
js
ror
xchg
lahf
js
xchg
mov
and
js
in
outs
add
call
mov
cdq
pop
cmp
out
inc
ins
jne
in
add
or
icebp
pop
lahf
fnstcw
iret
neg
stos
es
in
fdiv
stos
mov
lock
fwait
je
fld
sbb
not
(bad)
mov
xor
(bad)
lds
rcr
mov
aam
pop
data16
pop
or
cmp
jo
mov
xchg
push
in
push
cmp
mov
movs
scas
imul
and
mov
pop
sbb
(bad)
leave
outs
mov
retf
data16
xchg
and
dec
rol
push
inc
jnp
loop
ja
mov
lds
xor
jp
cmc
jo
xor
out
fwait
aam
jge
gs
stc
mov
xlat
les
inc
add
sub
mov
not
cmp
daa
shl
int
jmp
adc
or
scas
push
ret
mov
repz
loope
ret
push
pop
mov
hlt
pop
mov
dec
jmp
call
stc
inc
add
sbb
test
mov
pop
dec
mov
mov
test
sti
js
repnz
push
data16
mov
cmp
push
addr16
pop
cli
mov
lds
pop
(bad)
xlat
dec
push
and
mov
arpl
push
dec
(bad)
stc
push
add
repz
call
ffreep
cmp
fldenv
fild
pop
push
add
arpl
lods
sbb
mov
adc
mov
mov
mov
dec
(bad)
fimul
pop
lock
int
neg
inc
jbe
cs
sbb
xor
jle
mov
mov
aad
push
pusha
ja
into
xor
jl
repnz
jmp
mov
call
sbb
iret
pop
out
pop
fidiv
push
jg
push
cmp
adc
jge
xchg
arpl
int3
sbb
out
je
adc
aas
outs
push
jb
mov
scas
inc
imul
xchg
fild
dec
fild
pop
loope
dec
mov
mov
addr16
popf
stc
xor
repnz
cpuid
inc
and
(bad)
mov
loope
push
xchg
mov
push
or
adc
std
push
icebp
add
sub
sbb
dec
enter
and
ins
jmp
or
test
mov
mov
push
(bad)
dec
fcmovbe
sub
popa
ret
push
jecxz
or
cli
jge
in
add
dec
xchg
push
loope
push
inc
repz
out
sub
ds
imul
call
clc
into
dec
cmp
mov
cli
push
adc
push
jne
pushf
daa
nop
jp
fiadd
in
lock
mov
mov
call
lods
test
xchg
hlt
jno
fcomp
jb
loope
retf
in
and
rcl
imul
pusha
inc
shl
xor
out
ins
jae
jb
inc
cmovl
sbb
add
int3
stos
cmp
lods
mov
jle
ret
push
push
and
cmp
add
pop
(bad)
call
popa
mov
scas
jb
cmc
xor
fadd
fimul
jo
pop
clc
sti
add
cmps
pop
jae
sub
push
repz
sbb
aaa
cdq
clc
ds
stc
inc
rol
inc
ins
mov
arpl
inc
jmp
js
add
xchg
or
(bad)
mov
inc
push
sbb
icebp
test
cwde
add
mov
jl
mov
xchg
pop
adc
mov
mov
loop
inc
cmp
or
nop
pop
mov
sub
add
out
cld
pop
gs
or
das
sbb
les
xor
pushf
xchg
push
xor
xor
inc
push
cmp
xor
jmp
fdivr
rol
popa
cmp
sbb
retf
push
dec
adc
and
out
fst
push
shl
cld
shl
mov
stos
out
(bad)
pop
arpl
and
test
mov
rcl
mov
cmp
je
mov
push
fcmove
pop
lods
popf
pop
gs
call
cmp
jle
test
xchg
mov
ins
sbb
mov
adc
push
dec
sahf
and
not
repnz
cwde
lock
or
push
sbb
icebp
push
std
pusha
push
arpl
ins
inc
loopne
fisttp
add
enter
mov
gs
fstp
add
test
(bad)
popf
push
add
setg
pushf
mov
test
pop
mov
sub
sub
adc
popf
sub
and
ret
aad
jp
in
int
xchg
sahf
lea
jp
test
popa
enter
call
push
xor
cmps
cs
mov
sbb
cmp
bound
fistp
les
jge
icebp
sub
fistp
ror
leave
lock
cld
cld
jae
or
sar
cmp
cmp
add
stc
or
rcl
je
retf
mov
xor
js
mov
xor
xchg
aad
rcr
out
jge
push
mov
push
mov
mov
cld
adc
push
mov
adc
out
out
int3
inc
sub
push
cmp
addr16
xchg
pop
push
data16
and
dec
jl
sbb
daa
add
pushf
inc
in
daa
aas
imul
adc
xlat
fisttp
add
mov
jge
loopne
xor
xor
pop
movs
out
mov
inc
sbb
fcmovnbe
push
xor
mov
sub
push
jg
dec
mov
shl
popf
inc
ds
or
mov
in
lods
and
repnz
mov
xchg
add
xchg
outs
cmp
repz
and
cmps
inc
imul
scas
cli
ret
test
mov
mov
sub
call
dec
dec
out
rol
xlat
sub
in
outs
pop
inc
movs
shr
and
(bad)
dec
iret
rol
aas
lea
xchg
loopne
and
pop
cmps
jae
sbb
hlt
pop
jle
(bad)
xor
retf
movs
sbb
jbe
and
cmp
fwait
pop
or
mov
daa
mov
scas
jb
in
jecxz
sbb
mov
cwde
sub
adc
and
push
mov
mov
pushf
popf
hlt
nop
enter
mov
imul
cmps
dec
mov
hlt
xor
add
sbb
push
add
and
mov
or
movs
jge
dec
mov
xor
jnp
outs
mov
loopne
lock
sub
popa
and
loopne
mov
adc
mov
mov
or
inc
mov
mov
pop
int
adc
push
inc
shr
stos
xor
lds
popf
mov
and
push
(bad)
fmul
jno
in
test
scas
push
cdq
mov
ins
sahf
push
pop
shl
bound
inc
dec
inc
stos
ja
mul
ror
sub
js
mov
imul
sbb
jb
retf
aas
jae
push
in
movs
dec
int3
mov
and
jle
adc
(bad)
std
inc
xor
fimul
fst
cwde
mov
cmp
or
out
ret
inc
dec
add
cmp
fcom
mov
test
mov
movs
pop
bound
loopne
sub
or
in
ficom
sti
imul
iret
push
jp
clc
daa
jo
inc
add
in
push
aaa
sub
arpl
xchg
xor
mov
and
sub
ret
popa
mov
xor
fisttp
leave
jo
pop
sub
xor
inc
movs
pop
or
and
jo
aaa
dec
retf
aaa
nop
inc
cmps
sahf
fcom
daa
dec
sub
and
mov
xchg
xchg
les
cwde
xlat
loopne
or
call
mov
aad
in
enter
shl
mov
sub
retf
sbb
lds
dec
out
loopne
ins
mov
cmps
lods
int
mov
mov
pop
push
xor
pop
(bad)
cs
mov
retf
pop
sbb
sbb
adc
inc
push
stc
int
inc
fs
pop
or
retf
fst
or
push
mov
ja
pop
ret
gs
out
xor
lods
and
loope
xor
popfw
sar
sbb
pop
adc
inc
into
push
call
mov
cmp
or
adc
xchg
sub
call
lods
sbb
push
ins
adc
rcr
pop
pop
mov
add
outs
loope
jo
mov
pop
jge
inc
mov
jno
popa
jp
pop
jno
pop
mov
jne
mov
jmp
js
and
aad
sar
mov
cld
dec
pop
mov
mov
jle
iret
cmc
ret
sbb
std
jmp
imul
mov
jp
sub
mov
push
cmc
pop
mov
pushf
ds
cmc
(bad)
inc
add
adc
das
loop
ret
inc
mov
jg
mov
xchg
fdiv
and
imul
ins
push
inc
scas
sbb
imul
push
or
hlt
fst
inc
push
jbe
or
and
jae
pop
xor
sbb
inc
(bad)
sbb
sub
push
jo
push
mov
mov
xchg
push
push
test
into
xchg
dec
push
repz
mov
sbb
enter
test
add
(bad)
mov
js
cmp
pmulhuw
dec
pop
fwait
and
in
lods
enter
jmp
dec
cli
push
and
jge
pop
inc
shl
hlt
lahf
out
jg
cmps
fisttp
adc
xor
fsub
mov
cmc
ds
xchg
add
out
sbb
inc
cld
leave
dec
pop
cmp
mov
mov
fcmovne
inc
cld
inc
dec
rol
leave
pop
xchg
sbb
pusha
mov
push
inc
fbstp
xor
add
mov
(bad)
call
jecxz
loop
test
push
enter
adc
push
add
xchg
frstor
out
aaa
sub
mov
sti
cmp
xor
ds
xlat
inc
jmp
mov
movs
lds
test
cmp
add
pop
push
pop
in
sbb
(bad)
xor
jp
jmp
sbb
cmp
adc
mov
push
mov
setno
gs
out
pop
ret
cmp
sub
push
push
fcmovne
ja
out
repnz
or
mov
cmc
mov
jmp
pusha
loopne
and
push
setb
push
add
bound
dec
xchg
imul
dec
jo
mov
pop
retf
(bad)
stos
lods
jnp
enter
inc
xor
push
lds
mov
cld
outs
rcl
pop
push
aaa
xchg
fld
jge
dec
inc
dec
shr
cdq
xchg
iret
cmp
xchg
call
push
imul
icebp
add
loopne
fnstenv
out
xor
pushf
mov
loopne
es
test
xor
in
mov
sub
and
jb
bound
aad
gs
loopne
fs
sbb
inc
jmp
add
push
fucomp
test
xlat
xor
mov
imul
or
inc
jnp
cmp
sbb
xchg
mov
iret
mov
and
in
jmp
dec
sub
pusha
ja
in
in
imul
iret
and
xchg
inc
lss
rcr
popf
mov
cmc
mov
xlat
cmp
ins
retf
test
rcl
jg
fcomp
jle
cdq
(bad)
or
popf
pop
into
pop
or
sub
loop
sti
mov
jae
in
mov
mov
out
imul
scas
test
cmp
sub
sub
xchg
(bad)
imul
jmp
gs
jne
push
mov
xor
call
xlat
mov
adc
mov
test
ins
aas
jge
push
jbe
loopne
ins
and
jl
dec
rcr
outs
cmp
dec
xor
adc
mov
adc
mov
and
bnd
ret
cmps
mov
push
fsubr
mov
in
xchg
mov
leave
inc
push
or
jo
add
xchg
ds
mov
mov
(bad)
xchg
xchg
mov
push
pop
js
cwde
cdq
(bad)
jo
hlt
jno
xchg
not
(bad)
bound
out
cmp
xor
add
mov
cmp
mov
fbld
hlt
sbb
ss
dec
push
js
out
cmp
xchg
call
adc
loopne
je
(bad)
popa
(bad)
or
adc
fwait
ins
clc
movs
add
sub
pop
jo
into
adc
popf
inc
in
scas
in
enter
adc
aam
inc
sub
sbb
mov
sbb
pushf
adc
js
dec
mov
rcr
clc
jmp
push
mov
ds
icebp
sub
scas
xor
mov
and
xchg
mov
jbe
fisttp
in
inc
iret
push
mov
jmp
aas
aad
cs
es
inc
ror
rcl
icebp
std
lods
sar
popa
repz
jnp
sahf
or
fst
sub
cmp
cmp
mov
dec
test
mov
jmp
push
lahf
ins
jge
push
dec
cld
ror
pop
(bad)
mov
loope
or
fld
inc
imul
in
inc
clc
jns
rcr
lods
push
push
rcl
iret
mov
ins
iret
je
call
dec
fcomip
push
or
push
or
push
cmp
add
xchg
in
cli
ins
and
test
ja
retf
inc
repnz
jbe
loopne
or
xor
(bad)
cmp
adc
popf
fbld
jno
bound
popf
mov
movs
inc
cdq
mov
popa
fsub
iret
xor
cmp
mov
xor
or
lds
neg
call
int
stos
pusha
mov
in
clc
ja
cmp
fld
hlt
mov
fs
clc
add
enter
sub
pop
repnz
push
mov
scas
sar
frstor
mov
mov
jl
mov
lahf
jo
leave
dec
push
hlt
add
cmps
mov
stc
pop
push
and
xchg
scas
popa
sbb
sbb
pop
out
push
jmp
xchg
test
dec
pop
fistp
jnp
nop
rcl
mov
adc
dec
sub
ins
mov
mov
jg
lods
shl
icebp
lods
stc
add
mov
lods
mov
ror
in
push
cld
xchg
mov
and
test
sbb
pusha
push
dec
int
fs
out
push
jg
jae
pop
or
je
and
jo
mov
aam
cmp
mov
hlt
push
out
xchg
push
jl
into
dec
shr
sbb
iret
adc
xlat
aam
jg
sbb
adc
aad
fild
push
sub
fcmovb
and
add
dec
xchg
pop
mov
nop
int
mov
(bad)
imul
push
clc
cwde
in
and
out
test
cdq
push
pusha
push
mov
into
push
sbb
mov
test
push
call
scas
mov
cwde
sub
sbb
jae
mov
fidivr
pop
cmp
sbb
xchg
mov
xchg
cmp
(bad)
dec
in
iret
cmps
fst
or
or
dec
add
mov
mov
cmp
sub
adc
pop
xchg
add
add
fist
fcomp
mov
mov
push
leave
mov
and
push
mov
mov
stos
push
adc
outs
pop
xchg
(bad)
fst
lea
push
sub
into
bswap
mov
mov
sub
push
mov
lahf
es
test
sub
lock
retf
fdiv
(bad)
mov
ret
inc
sbb
(bad)
ds
cmp
push
and
pop
mov
scas
jnp
add
inc
stos
dec
sub
jmp
xor
mov
adc
inc
nop
sub
push
mov
shl
lahf
out
ret
int3
retf
(bad)
jo
bound
out
pop
dec
or
loop
popa
in
mov
inc
xchg
cmp
imul
repnz
gs
sbb
jbe
sbb
loope
xchg
mov
retf
mov
loope
xor
in
mov
xor
shl
dec
xor
mul
add
fwait
lods
ins
stc
mov
pop
dec
in
sub
dec
enter
out
out
dec
jb
mov
iret
xor
pcmpgtb
lods
mov
add
push
mov
out
data16
and
and
in
mov
es
fstp
mov
inc
std
popa
enter
mov
push
adc
sbb
int3
and
cli
jle
retf
xor
sbb
jae
push
mov
inc
int3
rcr
cld
cmps
mov
cmc
jg
mov
push
clc
adc
in
stc
outs
mov
out
xor
cmc
fadd
outs
ja
mov
sahf
out
xor
dec
mov
mov
sub
fadd
push
popf
sub
aam
pop
jne
imul
adc
loopne
adc
scas
xchg
outs
int3
xchg
test
aam
push
fnstcw
push
pop
dec
movs
push
dec
pop
dec
mov
ret
scas
ss
stos
lods
mov
stos
mov
hlt
pop
jp
leave
sahf
sub
push
ins
xchg
ins
sbb
movs
or
pop
ins
ds
mov
lahf
xor
xor
arpl
in
gs
jg
fldenv
lods
pusha
fsubr
mov
cmp
lods
std
mov
retf
gs
jp
pusha
sbb
movs
push
push
ds
dec
push
fist
sub
push
jno
mov
in
stc
xchg
adc
mov
or
adc
push
dec
or
addr16
stc
pusha
dec
push
clc
sub
scas
jge
(bad)
out
mov
fs
xchg
popf
jecxz
loope
not
cdq
loope
pop
pop
xor
(bad)
dec
dec
out
xor
ret
fmul
adc
xchg
pop
mov
sub
pop
push
pop
add
in
inc
jl
mov
aad
xchg
mov
sbb
fs
mov
mov
(bad)
and
std
inc
push
iret
xor
pop
push
xor
sbb
mov
stos
push
xchg
dec
daa
inc
jge
int3
add
ret
int3
cld
inc
jno
sub
sub
je
cwde
pusha
push
push
and
bound
mov
or
mov
inc
and
mov
in
cwde
aad
(bad)
adc
mov
adc
jno
imul
test
inc
cmps
cmp
jecxz
in
nop
mov
shl
leave
mov
mov
test
inc
(bad)
out
sub
in
arpl
ds
push
les
(bad)
pop
in
mov
push
xor
inc
adc
push
iret
fist
push
dec
and
mov
xchg
pop
fcomp
push
aam
(bad)
jmp
mov
mov
ins
jl
pop
inc
push
jmp
push
push
in
ret
test
ret
je
push
imul
outs
outs
push
test
xor
fs
jmp
jle
test
jle
cmp
mov
mov
out
sbb
sub
cli
and
sbb
or
popf
call
sub
in
fdivr
jno
or
scas
add
xchg
mov
mov
enter
cmp
jg
out
imul
pop
test
adc
cmps
jmp
dec
cmc
mov
push
call
pop
and
xchg
push
jnp
inc
les
push
add
jl
scas
xor
inc
xchg
(bad)
cmps
aas
xor
pusha
fisubr
inc
dec
cmps
leave
and
adc
in
pop
dec
sbb
fwait
test
add
push
ds
div
dec
popa
popf
or
jge
outs
(bad)
mov
sub
clc
fistp
test
pop
adc
mov
cmp
mov
add
mov
mov
retf
sti
push
outs
das
cmps
call
neg
and
xor
(bad)
mov
enter
psubsw
add
aad
leave
jecxz
mov
cdq
cmps
push
aas
test
gs
in
dec
jecxz
ss
jle
loop
jg
movs
inc
cld
adc
mov
mov
cli
push
push
pop
push
dec
push
jae
mov
adc
cmp
call
cs
outs
and
pop
in
cs
cmp
inc
vxorps
aaa
jecxz
loop
(bad)
jmp
nop
add
cmp
in
test
mov
sub
xor
push
enter
outs
aas
daa
mov
push
popa
jmp
int
add
mul
out
xchg
pop
out
ds
adc
inc
xchg
push
lock
mov
retf
mov
or
mov
fisttp
inc
fidiv
and
ss
cmps
jp
sbb
push
int
movs
dec
push
push
xlat
popf
aam
xchg
xchg
adc
xchg
imul
adc
inc
(bad)
js
shr
jne
or
inc
shl
add
dec
sub
jp
lea
push
fistp
cmp
dec
mov
and
stc
daa
imul
dec
dec
scas
xor
je
jnp
push
test
lahf
outs
fdivr
fistp
xchg
mov
or
js
inc
xor
repz
cmp
daa
mov
pop
mov
les
pop
inc
nop
imul
shl
pop
mov
popf
adc
mov
mov
out
xor
push
sbb
movs
out
ds
xchg
inc
lea
bound
cmp
push
shl
icebp
ficomp
out
or
call
mov
stc
mov
scas
out
fisub
jo
adc
test
imul
retf
push
loope
push
es
xchg
fisubr
dec
jmp
sbb
cdq
mov
popf
(bad)
jle
sti
add
daa
inc
andnps
loope
cmp
mov
outs
cmc
adc
xchg
push
inc
shr
sti
(bad)
test
lds
push
scas
inc
mov
and
das
clc
mov
sub
xor
jno
jae
xor
test
and
out
scas
mov
jge
fstp
jl
jmp
jb
leave
or
pop
cmp
test
xchg
inc
jbe
mov
mov
pop
sub
ins
in
or
movs
test
dec
adc
xor
adc
mov
push
sahf
ret
loope
sub
outs
bound
cmc
mov
and
jne
sub
jo
cmp
inc
inc
into
sbb
mov
stc
inc
ss
leave
addr16
fistp
xor
push
jmp
mov
ds
psrad
cmp
lods
cmp
jmp
imul
sub
outs
imul
(bad)
jne
and
(bad)
xchg
ret
cmp
(bad)
test
hlt
loopne
lods
mov
es
inc
sti
xor
(bad)
std
repnz
prefetch
fst
xchg
aad
push
int3
outs
les
xor
xor
daa
mov
fbstp
(bad)
out
addr16
mov
mov
and
push
mov
or
inc
int
nop
int
dec
sbb
sbb
loopne
imul
icebp
not
into
shr
cmps
sbb
rol
cmp
scas
test
and
push
(bad)
(bad)
(bad)
std
pusha
push
std
(bad)
es
cmp
jmp
retf
xchg
mov
and
cwde
bound
jp
nop
je
fistp
inc
xchg
ins
cmp
ins
stos
pop
dec
sbb
push
xor
sub
push
pop
and
dec
fs
xor
(bad)
sar
cld
and
(bad)
pop
daa
jmp
adc
xor
fcmovu
mov
xchg
mov
jmp
ja
and
inc
pop
mov
and
movs
les
dec
sub
jmp
retf
lock
ins
clc
inc
imul
cwde
fs
(bad)
ret
hlt
movs
je
adc
dec
shr
cli
cld
dec
mov
sub
and
cmp
outs
xchg
inc
clc
rol
jb
in
rcl
pop
cwde
mov
xchg
xlat
pop
rol
push
xchg
ror
leave
pop
cmps
ret
mov
aas
adc
mov
or
out
pushf
in
mov
and
jle
in
sti
addr16
gs
push
xchg
cmovge
pop
ins
rcr
(bad)
jnp
pushf
shl
pop
ror
or
addr16
js
pop
aaa
push
outs
retf
jbe
push
pop
inc
jmp
mov
xor
or
(bad)
outs
cmps
inc
or
mov
in
pop
fdivrp
cmp
mov
sbb
and
js
cdq
test
fild
jg
and
xchg
fwait
test
ds
pushf
cs
xchg
hlt
mov
mov
push
pop
mov
pusha
pop
imul
imul
dec
sub
shl
mov
add
aaa
ror
or
jmp
pop
stos
push
ins
sub
retf
add
mov
xor
es
leave
xor
fsub
mov
inc
fst
sbb
jg
add
mov
inc
daa
adc
xor
loop
out
push
sti
jg
jp
sbb
ds
add
add
imul
sbb
mov
loopne
jge
es
retf
std
in
dec
push
pop
push
outs
movs
inc
mov
fwait
mov
call
inc
in
call
movs
fwait
pop
jno
rol
scas
loope
mov
into
cwde
jno
icebp
sbb
mov
push
xor
pop
push
movs
and
dec
mov
cmp
mov
ins
jl
std
je
imul
pop
dec
or
shl
sbb
fimul
out
jns
(bad)
hlt
fsub
cmp
popa
cmps
mov
sbb
(bad)
mov
call
mov
add
shl
sub
push
xchg
push
mov
les
inc
jmp
sar
jno
dec
out
inc
mov
and
sub
sub
std
jmp
repnz
push
mov
sbb
push
pop
not
(bad)
and
shl
mov
mov
sbb
out
push
ds
jne
shl
and
sahf
movs
mov
mov
jo
xor
outs
push
pusha
sub
sbb
and
xor
xchg
jno
jl
and
jl
shl
test
ja
pop
dec
ds
pop
fld
jbe
ret
repz
mov
mov
sti
mov
arpl
cmp
mov
xor
mov
jp
popf
iret
retf
in
and
int3
dec
mov
sub
xor
mov
sti
std
push
test
inc
enter
or
inc
mov
xchg
fcom
dec
push
xchg
stc
mov
enter
xchg
test
mov
(bad)
into
jecxz
pop
sub
ror
adc
cld
ja
in
jne
fwait
imul
stos
dec
mov
add
stc
das
sub
gs
imul
mov
cmp
das
stc
arpl
sbb
test
std
adc
leave
cmps
add
cld
jb
mov
pushf
pop
adc
xchg
jge
outs
hlt
add
ffreep
or
push
and
sub
scas
cmps
xchg
fcomip
push
and
fsub
outs
cmp
jle
jle
ds
imul
dec
nop
and
std
enter
push
mov
sti
and
jbe
sub
leave
add
scas
ds
mov
lahf
addr16
sub
xchg
xchg
and
push
sub
sub
and
jne
jb
xchg
enter
sahf
pushf
inc
sub
loopne
cmps
ficom
imul
xlat
sub
adc
das
mov
inc
push
adc
sti
fisub
and
adc
mov
adc
add
ins
(bad)
pop
ins
dec
pop
movs
inc
test
add
stc
daa
xchg
push
or
mov
setae
mov
push
mov
adc
or
jge
jg
add
cmc
sub
lods
add
jmp
lahf
or
inc
ds
ficomp
push
mov
mov
int3
int3
mov
jge
out
or
pop
jb
mov
adc
xor
mov
loop
retf
rol
cmp
gs
bound
xchg
add
push
mov
and
mov
jnp
in
xchg
dec
rcl
data16
cmp
jae
fcom
ins
xchg
arpl
mov
in
inc
and
or
call
or
int
aam
sbb
push
int
sbb
pop
rcl
push
push
jbe
int
retf
add
mov
push
cmp
sar
dec
aad
das
jmp
xchg
rcl
dec
jge
imul
or
(bad)
or
sbb
(bad)
enter
scas
xor
std
stc
inc
retf
imul
ss
push
or
mov
gs
mov
call
inc
add
jle
imul
sbb
sar
pop
adc
pop
push
push
in
loope
add
test
sbb
sub
sbb
inc
and
ds
lea
dec
(bad)
cdq
pop
sub
test
cwde
in
or
hlt
imul
push
push
pusha
aas
or
jge
adc
fsubr
jae
jmp
mov
mov
loop
out
mov
xchg
push
icebp
add
les
push
or
mov
(bad)
adc
push
jge
aas
or
mov
lods
jl
(bad)
sbb
cmp
jbe
sub
fimul
mov
arpl
arpl
push
loopne
retf
stos
test
mov
xchg
(bad)
mov
nop
push
cmp
pop
movs
out
jg
xchg
mov
pop
dec
xor
daa
data16
pop
mov
push
mov
lahf
and
inc
ja
fs
fisttp
imul
(bad)
dec
scas
into
iret
mov
(bad)
cld
lock
sbb
and
call
pmuludq
mov
mov
pusha
lods
or
inc
cmp
shr
lock
ret
fiadd
xchg
fnsave
int3
xlat
sub
(bad)
mov
mov
ss
pop
in
or
jg
sbb
sahf
repz
enter
push
aam
xchg
sub
loope
sbb
sub
add
popa
dec
sti
imul
sbb
ds
ret
aaa
pop
cmp
cld
xor
pop
(bad)
fwait
add
in
pop
leave
fimul
in
out
mov
fisubr
(bad)
and
mov
cmp
push
lahf
inc
adc
sbb
aad
add
sar
ins
inc
cdq
cmc
or
out
adc
je
int
fs
ins
or
ds
test
lea
xchg
icebp
sbb
jnp
fiadd
mov
cmps
dec
or
hlt
sbb
and
pop
xchg
cmp
sbb
or
jns
cmp
sbb
mov
xchg
adc
retf
xchg
(bad)
or
sbb
fcmovnu
es
inc
les
aas
int3
jno
test
fs
test
imul
or
sub
imul
push
in
icebp
inc
test
mov
cs
stos
xor
and
xchg
js
test
xchg
fisttp
xchg
cmp
push
inc
test
repnz
(bad)
hlt
xor
and
mov
das
jle
inc
fadd
(bad)
fwait
mov
sbb
jecxz
pop
gs
cmc
fcmovb
push
lods
adc
sbb
mov
jb
cld
scas
or
or
out
daa
push
stos
sub
push
nop
xchg
inc
cmps
outs
and
scas
mov
rcr
pushf
inc
cmp
movs
sub
add
push
fimul
inc
sub
lahf
adc
sbb
jmp
in
in
ss
es
imul
je
sti
cmc
out
push
je
out
les
jmp
xor
cmp
das
dec
test
or
dec
mov
mov
pop
nop
test
jmp
add
cmp
xor
out
shr
sbb
and
es
fild
mov
dec
repnz
push
popf
mov
xlat
xchg
ror
(bad)
fnstcw
pop
lea
mov
test
scas
jmp
rcr
fcomi
in
movs
je
out
pop
out
mov
cdq
sti
xlat
or
pop
lock
js
adc
add
out
jbe
ret
sbb
data16
das
mov
xor
and
into
pop
jge
adc
retf
mov
in
lock
(bad)
loopne
adc
inc
xor
es
and
pop
jg
into
xchg
cmp
push
push
fldenv
mov
and
sahf
mov
sub
xchg
mov
out
lds
idiv
stos
cwde
pop
fisttp
nop
cmp
push
mov
movs
pop
dec
ret
(bad)
fmul
(bad)
(bad)
dec
cmps
mov
sbb
mov
ficom
adc
jae
xor
pop
sub
adc
mov
dec
inc
add
sbb
and
scas
inc
dec
mov
sbb
sbb
or
mov
adc
adc
(bad)
push
jb
icebp
jbe
sbb
ret
add
xchg
sub
icebp
xor
not
(bad)
retf
iret
xor
push
or
sbb
out
pop
leave
or
jg
add
push
ins
dec
outs
aam
push
into
dec
loope
mov
call
stos
int3
inc
cld
js
mov
or
sbb
(bad)
dec
popa
xchg
iret
fcomp
xor
jg
cmp
fwait
pop
jecxz
out
fnsave
clc
sbb
inc
mov
jmp
pop
repz
cmp
cmp
push
push
mov
call
out
xor
mov
xor
sub
ficom
test
test
cmp
out
jbe
mov
js
out
stos
in
add
aam
enter
mov
repnz
ret
shr
test
ds
jno
clc
sub
mov
mov
push
sar
call
cmp
push
fs
adc
jne
popf
repz
(bad)
cwde
retf
shr
pop
arpl
and
xor
jbe
jne
lods
test
push
int3
repz
sbb
cmp
pop
aam
and
shl
ins
adc
xchg
pop
sbb
sub
inc
xchg
jne
xor
(bad)
mov
sub
sub
jo
mov
xchg
mov
inc
fs
repz
jb
adc
jecxz
(bad)
or
pop
mov
jl
mov
or
scas
mov
and
push
mov
jb
int
mov
out
jbe
cmp
xor
lods
loopne
push
sub
pop
je
das
jp
fnstsw
fwait
test
jo
jecxz
retf
add
add
mov
inc
ins
ss
dec
dec
scas
imul
and
sub
and
or
xchg
sbb
dec
call
(bad)
pop
sahf
jl
and
and
ficom
lahf
adc
(bad)
fsub
(bad)
aad
adc
stos
into
mov
lds
sbb
cmps
xchg
pop
lea
mov
mov
and
push
dec
out
retf
enter
sbb
stc
faddp
cmp
and
loope
and
(bad)
jl
add
cmps
push
mov
retf
sahf
mov
dec
pushf
cmp
push
test
adc
add
adc
add
pop
sbb
fidiv
into
jns
cmps
and
xchg
fist
adc
pop
cmp
jge
ins
out
addr16
jp
sub
xchg
xchg
sti
hlt
cmp
mov
xchg
pusha
or
fs
xlat
mov
(bad)
sti
loopne
adc
mov
add
je
mov
mov
mov
hlt
xchg
pop
inc
jg
das
jno
jmp
call
mov
nop
pop
aaa
(bad)
loop
jae
xchg
fwait
inc
es
ret
cmps
jbe
pop
mov
stos
(bad)
jns
lds
daa
mov
(bad)
call
daa
dec
and
push
int3
stc
repz
or
nop
push
scas
or
sub
inc
and
or
push
push
xchg
js
or
ror
scas
jp
pushf
cbw
sub
jne
mov
mov
fild
lods
sub
sub
dec
call
mov
push
cmp
aaa
js
je
int3
mov
out
ss
sbb
loopne
(bad)
addr16
jbe
pop
push
adc
sahf
pop
imul
inc
add
fnstcw
xchg
daa
dec
stc
mov
jp
inc
gs
push
test
repz
push
cmp
and
das
outs
repz
jmp
mov
mov
ret
aas
jp
or
push
sbb
ror
cmp
hlt
adc
ss
mov
xor
fisubr
outs
add
push
cmp
adc
into
cmp
mov
inc
adc
adc
mov
dec
dec
xchg
xchg
cmc
sbb
lods
aad
out
jmp
mov
pop
jmp
cmp
xchg
mov
test
fild
cli
inc
cwde
sbb
leave
cmp
cmp
push
inc
cmps
rol
repnz
cwde
push
inc
jae
fisttp
clc
hlt
push
mov
push
push
xchg
pop
retf
(bad)
mov
in
mov
lods
pop
fwait
shl
cmpxchg
and
in
xchg
retf
sahf
call
enter
mov
xor
shl
sbb
jbe
pop
sub
out
test
or
loop
pop
push
mov
bound
xor
arpl
and
push
push
dec
int
imul
jle
mov
xchg
scas
ins
inc
jo
pop
cmps
cmp
out
xchg
jae
sbb
pop
push
sub
icebp
fidiv
sbb
jge
pusha
xchg
shr
aas
xor
cmps
cld
sar
icebp
or
jge
sub
ret
jns
fsub
das
ds
retf
in
pop
pop
fstp
repnz
add
push
sbb
sbb
call
cli
jns
ins
arpl
icebp
and
pop
aas
nop
dec
mov
out
pop
add
dec
cld
shr
lahf
pop
daa
xor
push
jnp
sbb
cdq
out
jbe
jo
test
(bad)
rcr
and
mov
sub
or
mov
stos
jmp
cmp
aaa
and
jb
push
out
jg
push
retf
push
dec
std
and
shl
jne
xchg
jno
inc
xor
sbb
dec
and
push
popa
cmp
out
aad
xor
push
scas
leave
mov
mov
add
cld
mov
sbb
mov
dec
lds
and
stc
sti
mul
cmp
mov
pop
call
jae
mov
scas
lods
pop
mov
loopne
jmp
pop
into
mov
ret
(bad)
fdivr
inc
jg
or
daa
xchg
fisubr
fcmovbe
icebp
mov
add
adc
stos
js
pop
sti
enter
aaa
outs
loop
and
xchg
lea
add
movs
mul
jmp
ror
outs
imul
int3
xchg
sub
scas
xor
fld
ror
jne
adc
loopne
pop
sti
inc
gs
mov
xchg
aam
inc
cs
(bad)
cmp
jmp
retf
sti
scas
push
or
in
mov
sbb
nop
shl
aas
icebp
push
stc
jnp
int3
call
xchg
inc
or
out
add
jb
mov
out
fstp
and
fwait
adc
adc
dec
push
jge
call
mov
test
loopne
(bad)
dec
scas
sbb
ret
pushf
or
xchg
push
jmp
inc
int
inc
add
aaa
xlat
arpl
call
mov
adc
adc
mov
cmp
out
inc
fcomp
cmp
lahf
outs
pushf
movs
aad
sbb
in
aad
movs
push
and
push
gs
inc
or
aad
pop
and
fist
mov
adc
mov
cmps
pop
sbb
pop
imul
cmp
xchg
push
adc
mov
imul
out
mov
int3
or
repz
dec
cmp
or
scas
js
neg
mov
pop
fstp
pop
push
adc
stos
mov
cmp
(bad)
jo
dec
push
cmc
and
les
push
xchg
cmp
ret
mov
adc
sbb
xor
ret
dec
pop
push
imul
sbb
outs
jbe
test
std
dec
mov
and
adc
neg
mov
jge
(bad)
out
push
sub
push
adc
enter
call
inc
ficomp
repnz
ret
loop
or
xor
cmp
in
sub
pop
jb
and
cdq
scas
aas
sbb
test
cli
pop
mov
inc
fcmovnb
outs
ret
ds
es
mov
dec
inc
inc
add
sti
imul
or
mov
retf
add
adc
xor
fdiv
inc
xlat
stc
mov
xor
xor
mov
rcl
repz
add
into
dec
cmp
or
cmp
dec
ins
movs
es
push
push
cdq
retf
or
repz
dec
jbe
dec
ret
add
inc
xlat
(bad)
or
adc
pop
mov
fstp
sub
iret
mov
pop
xor
ror
cmps
mov
sar
ins
aam
cmp
addr16
and
imul
aas
jle
push
mov
xchg
add
xchg
call
jle
(bad)
push
mov
push
xchg
aas
cmp
pop
lahf
add
mov
jecxz
ja
dec
jle
ror
jnp
or
rol
xor
movs
test
push
nop
ins
lods
ficom
retf
ss
cwde
jnp
fnstsw
test
jmp
mov
adc
cwde
xchg
push
xchg
lods
mov
xor
push
fimul
or
pop
imul
popa
shl
les
inc
push
push
ret
ret
mov
mov
push
mov
mov
scas
sbb
or
jge
mov
jne
outs
loopne
sbb
and
(bad)
mov
dec
jecxz
pop
test
ins
shl
dec
mov
rol
int3
mov
mov
mov
fwait
cmp
lds
out
adc
lock
pop
sti
jb
int
mov
js
or
jno
jnp
cmp
push
dec
sub
scas
dec
gs
jmp
shl
cmp
(bad)
dec
pop
fdiv
cli
fdivp
or
mov
push
mov
xchg
xor
xchg
sti
in
jp
cs
lock
test
inc
and
lock
test
adc
ss
aas
and
cld
adc
xchg
dec
in
mov
mov
inc
pop
mov
cmp
rdpmc
cmp
(bad)
and
in
inc
(bad)
fnstenv
imul
fcomp
ret
pop
jg
xchg
mov
sub
jle
aas
mov
mov
pop
push
es
mov
lock
nop
stc
jge
mov
mov
jl
push
sub
cmp
inc
int3
dec
pop
call
push
fcom
sub
cwde
add
dec
pushf
out
xlat
xchg
in
push
xchg
pop
rol
push
xchg
sub
sub
push
xor
and
movs
ret
out
aas
js
aaa
jo
out
cli
xor
cmps
pop
into
in
sbb
pop
stos
shl
push
js
rcl
test
mov
mov
pop
xor
sbb
mov
fbld
cmp
or
sbb
sar
dec
pop
inc
sub
test
xor
ja
dec
lea
xor
push
adc
and
add
outs
sbb
idiv
adc
or
shl
scas
inc
push
enter
xchg
push
or
test
fcmovnbe
or
cmps
in
mov
ja
and
lock
mov
jnp
mov
je
ja
cld
dec
jne
sbb
dec
push
loope
xchg
jns
repz
mov
sub
jnp
mov
(bad)
sbb
cdq
fdiv
add
imul
mov
dec
std
push
sbb
cmp
cmc
les
bound
jg
mov
pop
add
and
ja
fsub
mov
out
test
sub
mov
pop
inc
and
loopne
mov
(bad)
shl
cli
or
icebp
sbb
fistp
outs
ins
sub
sbb
sub
mov
xor
retf
or
xchg
aad
push
ds
mov
je
js
fmul
dec
sub
xchg
mov
pop
sub
cmc
or
inc
inc
icebp
repnz
push
imul
cdq
pop
(bad)
jl
rcl
mov
sub
lock
dec
in
gs
lods
shl
ficomp
imul
gs
and
dec
push
jg
and
adc
enter
(bad)
aaa
test
sbb
or
fst
test
xchg
mov
and
lods
mov
(bad)
push
mov
ret
jae
mov
ins
fdiv
jnp
push
pop
dec
aas
sub
aad
scas
adc
arpl
or
popf
out
retf
cmp
jb
es
iret
adc
xchg
addr16
ss
(bad)
bound
inc
imul
jl
adc
push
call
call
mov
aaa
sbb
ss
xor
push
nop
push
dec
retf
sub
jae
sbb
loop
push
adc
mul
repnz
stos
mov
cmp
dec
fimul
and
mov
pop
stos
rol
mov
aad
mov
mov
imul
cmps
stos
or
xchg
dec
push
in
xchg
push
mov
pop
jg
adc
std
ins
push
pop
pop
outs
push
mov
xor
in
retf
movs
xchg
sub
and
in
push
mov
mov
rol
ds
add
out
jecxz
pop
push
mov
aaa
pusha
mov
xchg
icebp
daa
out
xchg
sub
in
in
icebp
(bad)
loopne
rcr
cmp
cmps
jg
test
xlat
das
jb
cmp
mov
xor
pushf
les
outs
push
aaa
pusha
out
mov
jp
ins
mov
mov
ret
(bad)
into
inc
in
cmp
test
mov
rcr
sub
sbb
mov
pop
iret
mov
adc
pop
xchg
pusha
mov
push
sub
pusha
dec
jmp
or
and
mov
inc
sbb
xor
(bad)
and
scas
std
loopne
fdivr
sbb
shr
cmps
push
xchg
leave
int3
mov
mov
jmp
cmp
out
aad
in
lods
pop
cdq
fdivrp
test
jp
add
push
sbb
push
into
cs
cmp
dec
rcr
adc
wbinvd
or
jns
jb
dec
add
jl
push
fidivr
(bad)
int
jnp
mov
clc
dec
data16
sub
or
aam
inc
(bad)
fidivr
outs
ror
and
popa
pop
cdq
push
hlt
jge
inc
sbb
test
xchg
xchg
lahf
adc
cld
iret
push
cmps
bound
sub
xor
dec
push
jl
add
ins
mov
popa
scas
inc
gs
retf
pushf
sub
mov
mov
mov
scas
push
call
mov
pop
sbb
test
fidivr
mov
xor
mov
sub
shl
in
or
shl
inc
add
mov
fdiv
jns
dec
jnp
mov
push
inc
std
sub
ss
jae
test
mov
lea
cmps
(bad)
and
push
push
aaa
into
data16
rcl
mov
cli
out
ret
ins
loope
add
popf
pop
outs
in
movs
mov
mov
push
movs
and
xor
pop
adc
in
add
add
dec
push
push
mov
mov
sub
adc
xlat
or
mov
or
inc
mov
jmp
nop
sub
adc
pusha
mov
mov
shr
jno
pop
mov
ja
mov
sbb
push
xor
add
fwait
int
xchg
cli
ins
sub
adc
jns
pop
mul
xchg
aaa
aas
outs
stc
fnstsw
out
xchg
stc
or
ds
loope
push
jl
test
imul
in
sbb
jns
movlps
mov
sbb
push
imul
push
(bad)
sbb
clc
push
pop
dec
aam
cld
mov
or
and
sbb
sar
je
mov
xlat
push
push
dec
mul
(bad)
cwde
push
sbb
inc
test
div
repnz
xchg
in
loopne
jae
cld
lahf
dec
retf
je
mov
xchg
pop
retf
(bad)
and
push
shl
add
and
cld
lock
dec
sbb
ret
icebp
pop
fcomip
repnz
jns
or
call
and
push
test
sub
mov
das
pushf
mov
jo
into
les
aaa
mov
cmp
(bad)
outs
mov
mov
stos
in
rep
imul
jmp
jns
or
cmp
arpl
cld
mov
inc
nop
ret
adc
cmp
lahf
bound
add
pusha
push
push
dec
mov
ret
jno
fist
mov
ins
fidiv
out
call
lds
call
xchg
or
test
mov
and
das
adc
sahf
inc
inc
dec
ja
inc
cmovg
adc
rcr
int
inc
out
sahf
aaa
sub
arpl
icebp
dec
cmc
mov
mov
pop
rcr
add
out
ja
push
adc
fnstcw
std
xor
sbb
cmc
mov
pop
jmp
xor
mov
cmp
out
shr
stos
push
imul
std
mov
std
or
fstp
ins
shl
adc
sbb
ins
sub
add
pop
mov
push
cmp
xor
iret
pop
adc
or
vpsubusb
sbb
cmp
and
iret
in
adc
pusha
and
xor
cmps
sbb
aad
test
ins
int
lock
repz
test
xchg
rcl
sahf
mov
stos
sub
int
(bad)
call
cmp
ds
arpl
push
dec
test
ror
pop
in
retf
mov
test
or
fwait
inc
push
jl
add
and
cmp
out
aas
stos
stos
ss
add
cmps
ds
pop
sub
push
dec
lahf
in
in
xor
or
mov
fsubr
pusha
in
cwde
jne
jle
in
xchg
jge
fwait
add
shr
cmp
hlt
movs
unpcklps
sbb
jmp
push
loopne
iret
idiv
pushf
rcl
mov
push
scas
popa
aam
inc
cmc
sbb
repnz
and
call
sub
adc
pusha
mov
sub
and
mov
repz
xchg
jb
out
cmc
in
xor
std
push
cli
and
xchg
sub
cmp
fstp
in
xchg
(bad)
adc
push
mov
(bad)
leave
outs
ja
or
push
popf
xchg
xor
fwait
sbb
xor
jb
pushf
and
call
sub
jno
adc
jo
ss
jne
xor
adc
push
xchg
stos
push
cdq
mov
hlt
and
int
shl
dec
cmp
(bad)
push
adc
xor
jecxz
sbb
add
or
mov
xchg
pop
adc
in
test
jl
and
sti
call
fld
cwde
pop
adc
or
test
repnz
dec
rcr
nop
jl
push
(bad)
mov
mov
mov
clc
sub
mov
xor
ret
lods
jle
push
or
mov
das
xlat
xchg
test
and
pop
fwait
push
test
push
mov
fdiv
add
fmulp
out
addr16
jae
scas
sub
test
pop
ins
xor
stos
adc
dec
mov
inc
push
clc
sti
in
mov
fiadd
js
test
mul
xchg
(bad)
mov
stos
aad
and
test
mov
xor
test
mov
jecxz
in
xchg
xor
outs
hlt
(bad)
mov
cld
cmps
push
in
mov
jecxz
lock
in
push
in
ja
ins
out
sub
into
cli
mov
and
mov
add
cmp
jo
rol
scas
dec
cmc
dec
aas
and
(bad)
pop
push
xor
je
sbb
push
aaa
stos
mov
pop
sub
lods
movs
leave
mov
repnz
add
adc
test
pop
std
cld
or
jmp
ffreep
push
dec
addr16
hlt
movs
leave
cs
pop
push
adc
mov
push
(bad)
mov
out
mov
adc
dec
mov
sub
add
mov
sbb
inc
inc
call
(bad)
idiv
jp
sub
stos
ds
test
mov
sbb
mov
cs
add
in
les
dec
sub
jmp
or
sub
add
ins
inc
add
mov
mov
xchg
or
and
jo
push
mov
pop
mov
cmps
mov
adc
jb
adc
inc
ja
cld
cmps
hlt
les
mov
adc
jmp
add
mov
imul
cmp
xchg
xor
inc
popf
gs
cwde
xchg
addr16
and
test
sti
pop
pop
retf
jmp
das
es
xchg
iret
cmp
lds
outs
cmp
or
mov
sti
mov
(bad)
xchg
dec
cmp
jmp
gs
adc
(bad)
iret
sahf
add
jae
cmp
in
scas
xchg
(bad)
push
jmp
mov
adc
arpl
rcl
mov
pop
mov
cmp
add
xor
add
adc
out
jg
das
retf
dec
push
leave
and
fldcw
pop
out
cmp
lock
iret
sbb
rcr
mov
jecxz
push
or
or
xchg
inc
adc
popa
dec
stos
rcr
mov
mov
sbb
out
jno
leave
pop
rol
imul
jae
and
std
call
mov
mov
test
mov
leave
int
fisub
sbb
adc
jb
test
fldcw
shl
pushf
lea
xor
test
push
sub
ja
mov
shl
cmps
pop
or
in
xor
and
xor
add
imul
sub
push
sub
jmp
pop
adc
mov
mov
mov
dec
test
cs
movs
rcl
push
push
push
xchg
retf
cmp
xor
jnp
in
shr
addr16
call
outs
mov
add
and
and
push
xchg
cmps
out
(bad)
mov
pop
pop
push
ins
push
(bad)
jno
loop
fcomp
jl
movs
retf
push
or
mov
ds
imul
dec
xchg
sbb
neg
dec
ds
jmp
lea
push
push
lock
add
sar
pop
ins
adc
push
mov
cld
sub
pop
sub
push
fidivr
loope
hlt
or
jnp
test
push
or
jle
or
bound
ret
sar
add
jae
in
mov
mov
stc
cli
outs
(bad)
mov
(bad)
imul
cmps
jbe
adc
ins
jno
arpl
xor
addr16
push
dec
adc
sbb
fiadd
push
pop
cmc
push
pop
das
daa
in
scas
movs
daa
mov
and
test
je
xor
xchg
push
and
stos
push
shr
push
add
out
cli
mov
add
pop
or
call
(bad)
mov
setle
pop
rcr
push
xlat
pop
jb
ss
popaw
jnp
fsubr
stc
hlt
test
ds
sbb
dec
push
push
inc
je
xor
mov
cmp
add
adc
iret
call
cmc
jb
jno
fdivr
(bad)
mov
inc
jg
xchg
add
pop
in
sub
ins
mov
dec
inc
ja
cmp
cdq
call
sbb
pop
mov
pop
pop
cmp
sub
mov
dec
sar
push
dec
scas
repz
mov
cdq
fild
or
xor
pushf
or
xor
lods
jge
mov
sbb
aaa
xor
aam
adc
xor
xor
cwde
(bad)
dec
xchg
bound
dec
xor
xor
out
test
sbb
add
scas
xchg
enter
mov
push
cmp
pop
stc
cli
or
(bad)
stc
add
push
ins
shl
loope
loopne
sbb
sbb
sbb
pop
mov
xor
mov
es
nop
sub
sbb
sar
in
movs
fs
(bad)
pop
fisttp
adc
cmp
sahf
fdivr
jp
mov
mov
mov
mov
push
call
imul
popf
mov
mov
ja
aas
retf
jb
in
stc
das
mov
sub
movs
and
push
inc
dec
inc
call
and
in
mov
jp
data16
push
xchg
dec
add
xchg
sbb
shr
adc
mov
cmps
mov
(bad)
rol
pop
or
push
popf
movs
pop
movs
fld
add
clc
jae
push
mov
sub
mov
mov
leave
mov
test
outs
cmp
jae
xchg
pavgb
mov
shr
lahf
clc
adc
sti
fisttp
pop
xor
cmp
adc
test
inc
jp
mov
rcl
and
inc
mov
call
push
aam
mov
xchg
jg
inc
cs
call
mov
(bad)
mov
fidiv
inc
gs
test
stc
ins
push
xchg
adc
call
or
and
fdivr
rcl
data16
mov
cli
test
mov
lods
fisubr
rcl
jge
ja
cmp
out
xchg
std
mov
push
add
push
mov
mov
dec
inc
cmp
lahf
or
bound
in
adc
enter
or
ss
adc
(bad)
pop
sbb
xchg
sbb
into
pop
cmp
ins
pushf
test
push
ja
ficomp
(bad)
xor
pop
push
push
push
xchg
fcmovbe
shl
shr
mul
mov
bound
fldcw
mov
cmp
push
bound
push
stc
in
aam
clc
inc
daa
cmp
adc
add
push
pop
popa
outs
xchg
jecxz
jne
sti
cdq
inc
push
loopne
es
jg
enter
ja
push
in
xlat
push
loop
jae
out
aas
xchg
repnz
mov
mov
outs
dec
pop
dec
ins
pushf
in
stc
enter
scas
fwait
xor
fstp
dec
mov
xor
xchg
xchg
add
mov
pop
neg
stc
jns
bound
test
inc
or
xor
int
or
cmp
dec
xchg
mov
pop
adc
add
test
int
or
mov
addr16
mov
mov
test
in
nop
push
mov
hlt
mov
jg
popf
enter
dec
neg
xor
xchg
fimul
stc
mov
xchg
xchg
jne
rol
or
(bad)
add
and
mov
push
mov
jae
out
sbb
ds
jb
imul
xchg
repz
or
ret
scas
mov
push
(bad)
sub
enter
pop
jb
ret
pop
push
into
xor
push
(bad)
xor
pop
mov
out
or
loopne
std
cmp
loope
push
bound
dec
fst
stc
cmp
rol
xor
inc
lock
jnp
pop
dec
je
push
sar
fwait
and
popa
jmp
sbb
(bad)
mov
rol
xchg
aad
mov
sub
movs
stos
mov
pop
pop
dec
mov
jns
jle
or
add
ins
adc
or
int
cs
pop
xchg
mov
dec
(bad)
lock
jns
leave
sar
xchg
jne
sbb
sub
test
mov
(bad)
in
sub
dec
push
jo
mov
mov
mov
ins
push
sub
add
fcom
or
into
xor
pop
(bad)
iret
dec
push
pop
and
cmc
mov
cmp
outs
(bad)
adc
rcr
jmp
lods
sbb
jg
inc
xchg
adc
push
xchg
clc
sub
mov
imul
mov
(bad)
sub
add
scas
push
or
add
cmp
or
sub
fisttp
inc
ds
inc
jae
js
inc
xor
dec
add
es
jge
or
jne
dec
adc
mov
xchg
add
mov
jge
shr
iret
arpl
(bad)
jno
adc
xchg
adc
pop
inc
clc
mov
cmp
xchg
fisub
push
mov
int3
and
ja
or
arpl
jmp
cwde
das
jle
inc
lock
xor
add
leave
sub
call
mov
push
jmp
inc
enter
call
sbb
loop
xor
aad
cmp
or
jl
cld
cdq
mov
inc
mov
ret
add
dec
dec
test
and
loope
jb
les
in
test
stos
adc
shl
int3
pop
mov
cmps
pop
or
out
movs
inc
pop
mov
push
mov
ja
dec
or
cmp
inc
add
pop
jne
or
lods
jmp
and
jae
outs
xor
cmp
retf
mov
stc
fdiv
jae
mov
xchg
(bad)
(bad)
stc
call
push
adc
sub
mov
imul
popa
jnp
sbb
push
imul
fistp
out
jmp
dec
scas
mov
mov
dec
sbb
jbe
inc
jp
std
sbb
outs
(bad)
or
mov
mov
jmp
call
lea
repnz
in
sbb
or
adc
sub
sbb
mov
push
nop
std
dec
pushf
mov
adc
sbb
imul
push
mov
ins
inc
jmp
movs
push
fbld
cmp
inc
(bad)
and
jle
push
fstp
pop
(bad)
(bad)
arpl
aad
adc
pop
clc
fdiv
jmp
jae
lods
mov
pop
ins
lds
scas
rcr
jl
cmps
mov
jns
or
in
dec
add
sahf
sbb
sub
or
dec
xlat
(bad)
in
sahf
in
inc
pusha
mov
push
pop
push
js
add
xlat
scas
jl
out
cmp
adc
xor
stos
adc
test
mov
add
aad
aad
das
xchg
in
sbb
ja
or
repz
add
jae
cmc
iret
dec
imul
daa
lahf
imul
dec
rol
mov
jg
jl
dec
stos
dec
dec
and
test
cmp
call
cmp
mov
icebp
leave
mov
bnd
inc
jmp
cmc
sbb
sahf
test
int3
jb
mov
ds
into
mov
aam
push
push
out
add
dec
hlt
repnz
scas
inc
pop
ins
clc
sub
movs
jl
push
sub
ds
aad
jb
mov
rol
in
cmps
cmp
pop
les
dec
pusha
and
arpl
mov
or
cmp
bound
mov
gs
jno
xchg
cdq
add
por
cs
fsubr
das
loope
or
nop
cs
aam
fs
ds
push
push
inc
mov
pop
pop
imul
jl
mov
setl
jb
fldenv
adc
mov
repz
cmp
ss
sti
push
das
int
inc
adc
mov
mov
popf
paddd
pop
jmp
or
das
or
enter
xchg
out
lods
es
adc
not
call
bound
mov
les
or
dec
mov
lods
sbb
sub
inc
ds
sbb
sbb
xlat
lock
xor
inc
dec
sub
call
adc
ja
movs
test
cmp
mov
movs
and
cs
inc
(bad)
adc
out
hlt
in
test
rol
xor
inc
lds
mov
inc
cmps
ret
jg
or
sar
call
cdq
xchg
xlat
shl
xor
sub
dec
mov
(bad)
std
or
mov
loope
add
bound
in
mov
xor
and
pop
dec
ja
xor
dec
mov
xor
rol
js
add
cmp
test
fmul
sbb
cmp
jb
and
aam
jns
dec
(bad)
aaa
adc
sub
add
mov
jb
sahf
jge
pop
imul
xor
std
or
outs
dec
ficomp
jns
out
jo
mov
stc
int3
xor
shr
ss
dec
nop
push
sbb
xor
hlt
jp
out
stos
dec
cdq
mov
sbb
jno
cli
sub
adc
pop
in
stos
outs
pop
mov
sbb
fnstenv
push
pop
mov
int
mov
jnp
or
fs
retf
stc
xor
int3
loopne
mov
mov
mov
pop
sub
fbld
in
in
ss
dec
lahf
jnp
cmp
pusha
push
jecxz
mov
ror
xlat
or
xor
loop
nop
or
mov
(bad)
iret
sbb
(bad)
call
inc
std
retf
imul
mov
arpl
ins
mov
cmps
push
xchg
(bad)
or
mov
out
mov
push
dec
jmp
sti
mov
js
or
mov
std
or
add
or
add
retf
dec
imul
mov
push
jecxz
mov
and
jns
cmp
push
test
dec
(bad)
pop
test
jle
lea
sub
jne
bound
dec
push
mov
cmp
mov
outs
mov
dec
loopne
jp
daa
in
sub
sub
inc
add
ins
call
sbb
and
xchg
fcmovnu
hlt
and
test
inc
inc
in
popa
fdiv
jl
hlt
push
xor
stos
dec
cld
imul
jnp
push
inc
lods
push
mov
ss
(bad)
int
ins
jno
mov
cld
mov
aas
sub
jge
push
sbb
in
xor
and
pop
out
out
outs
lds
sbb
aad
leave
fwait
ret
mov
int
cld
xchg
pop
ja
cmp
arpl
test
ror
scas
cmp
sbb
lods
not
xchg
cld
jle
rcr
jo
pop
jmp
jnp
add
cmp
cld
fadd
retf
xchg
mov
pop
stc
frstor
es
adc
cvtps2pd
adc
mov
mov
iret
mul
inc
ficomp
push
mov
ins
dec
adc
loope
xor
sub
test
retf
aad
add
sahf
loopne
sar
add
fst
ins
adc
sub
jns
xchg
jne
push
jo
bound
fist
repnz
out
in
dec
dec
or
cld
sub
mov
iret
sbb
cmp
dec
lea
das
and
or
fistp
ins
push
sub
sub
dec
(bad)
xchg
inc
imul
mov
das
lds
jle
mov
hlt
inc
mov
retf
aam
xchg
sub
inc
mov
je
popa
ja
push
mov
dec
adc
dec
inc
mov
cmp
popa
jecxz
mov
or
(bad)
add
call
mov
clc
adc
mov
push
out
xor
std
dec
fld
sahf
sbb
mov
push
cmp
push
popa
mov
sbb
lock
mov
stc
fucom
push
pop
xor
mov
inc
jnp
aam
adc
hlt
xchg
xchg
sub
es
jmp
pop
icebp
call
(bad)
daa
lahf
cmp
je
and
add
add
out
data16
popf
dec
adc
or
jmp
imul
mov
xchg
ss
clc
data16
popf
cmps
icebp
mov
dec
or
out
out
outs
std
add
or
mov
movs
out
or
fwait
enter
push
inc
sbb
mov
repnz
lahf
in
fcmovnb
sub
jecxz
push
ficomp
push
add
inc
mov
cwde
mov
in
push
scas
popa
push
cmp
in
fnop
call
dec
inc
dec
add
fmul
loope
cdq
mov
call
cmp
lea
pop
dec
int
jns
sbb
adc
jl
push
in
inc
(bad)
mov
aam
nop
sbb
(bad)
mov
xchg
pop
aas
js
sub
bound
cmp
or
lds
gs
inc
pop
in
push
call
inc
pop
jle
aad
jmp
cmp
inc
or
dec
ja
add
scas
xchg
test
mov
adc
call
stos
mov
sbb
adc
pusha
cmp
sar
(bad)
or
inc
loopne
jnp
or
clc
adc
dec
repnz
test
idiv
pusha
and
push
ror
pop
jnp
dec
sar
rcl
xor
(bad)
not
loopne
ds
(bad)
out
stos
pop
test
cdq
into
sbb
jo
mov
retf
loop
sar
push
xbegin
call
fisttp
fisubr
in
add
leave
ret
cdq
mov
outs
leave
lods
ds
test
cli
inc
sbb
mov
dec
add
mov
xchg
adc
rcl
jle
lods
push
test
test
xlat
dec
loop
jle
dec
inc
or
fisttp
mov
pop
xor
into
dec
ins
xchg
bound
add
movs
je
cli
mov
retf
inc
dec
push
(bad)
mov
xchg
inc
xchg
add
mov
cld
mov
int3
inc
movs
pop
xchg
call
sbb
push
scas
lods
lock
and
loopne
loope
sub
xchg
leave
xchg
push
arpl
adc
fcmovnbe
nop
mov
dec
pop
mov
push
mov
mov
(bad)
mov
mov
lods
pusha
xchg
in
cdq
xor
mov
cmps
jge
(bad)
clc
xchg
cmp
fucomp
out
rol
int
sub
sub
movs
dec
or
repz
call
test
dec
mov
sbb
shr
cmp
mov
dec
call
pop
sbb
pushaw
popa
mov
xchg
or
fadd
jmp
imul
mov
jb
fnstsw
fs
fmul
sbb
pop
or
add
mov
and
leave
mov
cmp
add
mov
inc
fwait
aad
cld
das
xor
xor
movs
fcomp
mov
cmp
sub
int
xchg
fdivr
retf
cmp
sub
sahf
and
jle
loope
cmp
loope
jge
call
xchg
call
arpl
or
ror
mov
mov
mov
inc
fld
or
and
imul
mov
jne
imul
lods
sub
fs
cmp
dec
js
push
out
mov
out
or
loope
repnz
in
sub
cmp
test
stos
stos
sbb
gs
or
pop
rcl
jp
inc
pop
pop
nop
fadd
or
inc
jecxz
inc
daa
xchg
adc
scas
sub
cmps
je
and
out
addr16
loopne
hlt
xor
cmp
out
jnp
out
frstor
add
push
adc
inc
ffreep
mov
fmul
dec
shl
xlat
in
nop
or
ins
mov
outs
sti
or
push
fs
rcl
(bad)
out
rol
cwde
ins
ror
mov
or
ins
js
fisub
addr16
je
adc
push
lods
pop
xchg
cwde
aam
dec
mov
aad
test
xchg
sub
add
dec
fld
push
jecxz
in
arpl
rcr
(bad)
out
(bad)
cs
xor
push
fistp
aad
jle
je
jmp
inc
sti
mov
clc
cld
ss
mov
jne
bswap
movs
retf
dec
adc
add
shl
mov
dec
xchg
mov
xchg
jecxz
jmp
inc
pop
into
sub
fs
gs
into
pop
hlt
cmp
out
cld
ror
push
ret
and
loop
xor
fnsave
pop
sahf
call
rol
jp
xchg
pop
pop
pop
mov
in
push
rcl
inc
jno
jns
sbb
mov
ret
add
pop
out
ret
mov
xchg
add
cmp
push
retf
imul
cmps
xor
mov
pop
push
popa
mov
add
dec
jo
xchg
cmp
push
mov
gs
cmp
lea
fwait
xor
fild
sbb
mov
popf
jg
fisttp
jb
stc
add
sbb
outs
and
push
mov
ds
mov
sbb
mov
scas
ficomp
fcom
jb
addr16
sbb
pop
mov
push
and
mov
in
dec
scas
lahf
dec
mov
pushf
mul
imul
mov
push
(bad)
(bad)
cmp
div
add
cli
fmul
add
mov
rcl
or
aad
push
pop
retf
iret
cmc
(bad)
mov
std
sbb
sub
jae
sar
fisub
std
lock
jp
mov
jmp
ins
mov
or
pushf
fisub
pop
movs
ss
cmc
mov
inc
in
or
or
sar
imul
popf
mov
jecxz
xor
stos
sbb
hlt
xor
xchg
or
mov
sbb
mov
retf
movs
xchg
jmp
popf
mov
lahf
repnz
popa
aas
int3
or
(bad)
xchg
mov
test
out
mov
ret
add
fcmovnbe
push
push
imul
push
outs
jmp
lahf
and
or
mov
into
dec
pop
retf
or
mov
add
sub
cmp
in
daa
push
sar
mov
fs
inc
test
aas
movs
cmp
inc
xor
mov
add
daa
dec
cmp
dec
sahf
int3
inc
jecxz
bound
shl
sbb
outs
sub
xchg
dec
call
mov
sbb
scas
inc
lahf
jbe
jg
out
nop
sahf
in
xchg
hlt
pop
push
mov
pushf
sbb
icebp
and
and
xchg
jb
sbb
pop
add
xor
xor
arpl
in
mov
adc
stos
mov
jo
mov
movs
mov
into
adc
xor
mov
pop
inc
jb
fs
mov
ins
dec
enter
jg
sbb
adc
mov
xchg
sbb
test
sti
pop
imul
nop
adc
loopne
mov
lods
outs
and
push
push
mov
iret
rol
pop
sub
mov
loopne
sbb
aam
rol
xchg
inc
fcmovnbe
(bad)
aas
icebp
movs
lock
int
das
push
scas
test
jecxz
dec
retf
cli
lea
cmp
mov
inc
(bad)
mov
shr
ficomp
repz
jb
or
test
pop
pop
lods
in
mov
jmp
ret
mov
out
jo
mov
arpl
adc
test
push
dec
mov
push
sub
or
jns
xchg
adc
dec
inc
out
jp
or
sbb
and
push
lock
es
mov
test
(bad)
rol
mov
clc
and
je
xchg
add
cmp
test
cmp
sub
dec
xchg
xlat
cmp
cmp
(bad)
in
fisubr
daa
cdq
adc
add
ja
and
(bad)
adc
ror
ss
pop
iret
into
nop
mov
dec
retf
and
clc
bound
cmp
fdiv
jne
add
hlt
add
pop
rol
cmp
sub
into
mov
mov
test
sahf
xor
add
(bad)
fiadd
add
push
push
ret
imul
lea
push
push
cdq
call
push
add
and
adc
ss
inc
scas
ins
in
fcom
ror
and
adc
jb
mov
and
jmp
add
sti
std
sub
movs
inc
mov
xchg
pop
neg
pop
xchg
xor
jp
inc
pop
out
push
push
dec
add
inc
lea
pop
and
mov
xor
and
and
iret
mov
xchg
enter
div
js
mov
mov
das
es
push
push
jo
mov
mov
push
push
xchg
xor
jge
pop
pop
adc
cwde
pop
cmp
into
add
popf
pop
loope
iret
mov
xchg
cmps
in
js
push
add
or
shl
pop
mov
(bad)
push
ja
inc
sbb
mov
fdivr
stos
retf
iret
dec
retf
lods
das
pushf
pop
push
adc
push
mov
ror
test
add
add
aad
jecxz
movs
in
add
(bad)
cmp
sbb
ret
mov
mov
or
push
or
mov
lods
(bad)
jne
cmps
sub
btr
pop
mov
cli
out
sub
inc
adc
pop
faddp
inc
push
or
imul
lock
dec
add
dec
mov
mov
test
fidiv
cmp
in
mov
jmp
pop
add
mov
mov
arpl
cmp
sbb
pusha
or
cmp
xchg
xor
mov
sub
outs
push
lods
dec
test
enter
int
sub
cmc
(bad)
dec
or
aad
ror
sub
imul
xor
jno
aad
outs
pop
adc
xchg
mov
leave
lock
inc
inc
scas
xor
inc
pop
push
ficom
popf
data16
into
test
data16
jge
std
sti
mov
aad
out
push
xor
aas
and
sti
adc
xor
imul
add
clc
in
or
or
repz
inc
push
sub
loopne
xchg
mov
(bad)
aas
mov
add
xor
not
jo
test
and
mov
arpl
mov
fcom
repz
pop
lds
in
sar
outs
inc
pop
aad
mov
cdq
loop
add
pop
rcl
cmc
xchg
(bad)
(bad)
push
cmc
mov
dec
inc
adc
inc
jne
aaa
or
jecxz
or
in
cmps
cwde
cmp
jmp
push
ja
loope
xlat
push
push
mov
push
xchg
sbb
pop
popf
daa
ret
mov
ins
push
mov
pop
pop
lahf
imul
mov
ja
mov
cmc
cwde
popa
pop
(bad)
sbb
jg
xchg
fwait
in
in
jns
jns
lods
pop
sub
shl
test
out
out
rcr
xlat
outs
fnstcw
cmp
js
jg
ins
lahf
cld
movs
xchg
dec
in
mov
clc
cs
lods
or
out
out
jmp
jo
mov
mov
sub
or
(bad)
xor
mov
hlt
imul
xchg
xchg
js
(bad)
into
mov
ins
hlt
mov
adc
jns
xor
push
fsub
fdiv
fnsave
and
fisttp
xor
std
cmp
ret
or
inc
dec
nop
sub
(bad)
sbb
add
je
into
stc
call
and
pop
fstp
hlt
out
test
xor
daa
popf
sbb
xor
push
mov
pop
fnstenv
xchg
pop
out
pop
outs
xchg
out
iret
sub
pushf
mov
push
pop
inc
xchg
cli
out
div
and
jbe
sbb
adc
pop
mov
addr16
test
push
test
mov
movs
or
add
pusha
cld
js
dec
mov
xchg
or
aaa
movs
popa
xchg
jne
pop
fs
aad
dec
jecxz
or
add
mov
loope
in
xchg
inc
sbb
add
ret
pop
xchg
dec
sub
mov
adc
xchg
scas
in
imul
and
xchg
dec
nop
pop
lds
or
out
data16
sub
xor
aam
xor
shl
mov
je
xor
mov
push
icebp
add
bnd
adc
stos
loope
jmp
ja
add
sub
cdq
xor
aas
test
cmp
jg
aas
call
sbb
cmc
pusha
or
mov
and
jle
imul
dec
sbb
xor
mov
pop
xchg
popa
in
push
push
ret
add
data16
stos
sbb
shl
mov
pop
in
shl
jle
xchg
mov
mov
lods
fst
cmp
aam
lahf
mov
call
stc
ja
mov
jp
repnz
cli
mov
sti
hlt
mov
pusha
pop
pop
shr
sahf
mov
sbb
mov
fdivr
in
push
xor
rcl
mov
xor
out
rcr
imul
and
and
rcl
ret
(bad)
in
jae
sar
mov
sar
sahf
inc
or
push
(bad)
dec
sub
test
icebp
push
cli
sar
push
fisubr
ss
jg
jl
and
mov
(bad)
cs
mov
lods
in
ss
and
pop
test
into
or
rcr
cmc
and
out
sbb
out
loope
xchg
out
or
rcl
jne
xchg
outs
fs
pop
(bad)
jl
inc
and
or
std
cmps
xor
cmp
lods
sub
ret
call
jnp
inc
mov
and
lahf
mov
sub
dec
mov
mov
nop
mov
sub
das
popf
cmp
jmp
cwde
add
pushf
mov
out
mov
jno
pop
dec
cmps
mov
xor
nop
adc
xor
gs
fld
enter
das
and
or
push
retf
xlat
les
mov
stos
mov
(bad)
into
jno
cmp
arpl
lea
outs
(bad)
cli
or
int
jle
jae
jmp
fucomi
fs
push
sbb
cwde
retf
ret
sbb
adc
and
add
gs
in
dec
sub
jne
popf
or
cmps
lods
xor
cmp
cld
adc
iret
jmp
into
push
nop
in
loope
push
cmps
bnd
mov
arpl
retf
in
and
popf
dec
int3
std
mov
dec
adc
vmovdqa
and
xor
dec
pop
dec
test
arpl
(bad)
sub
xchg
shl
mov
sti
inc
add
inc
lods
jne
xchg
nop
ss
lock
sahf
pop
xchg
popa
(bad)
adc
adc
out
cmps
popf
mov
addr16
ss
cmps
dec
neg
mov
jl
movs
dec
inc
(bad)
push
das
test
push
rcl
add
imul
js
jo
nop
add
outs
iret
cmp
sbb
bound
cmp
sbb
scas
pop
rcr
add
sti
lods
daa
push
dec
mov
addr16
retf
jns
aad
adc
test
repnz
sub
adc
xor
aaa
mov
loope
adc
aam
fcom
mov
pop
jl
in
int3
sub
dec
mov
ror
and
sub
clc
mov
add
mov
sbb
push
rcr
or
movs
pop
neg
faddp
aad
sub
into
repnz
cmc
mov
mov
call
jo
lods
push
inc
mov
dec
inc
push
push
fdivp
test
mov
idiv
cmp
dec
add
loop
adc
xor
into
cs
jg
and
rcr
retf
lds
cmp
and
stc
cli
bnd
ret
pop
adc
pop
jecxz
fdivr
fist
shr
scas
movs
fs
pop
pop
(bad)
in
cli
movs
push
mov
les
das
lds
iret
and
jb
and
loope
movs
lea
sub
inc
add
mov
pop
adc
bound
cmp
push
in
mov
jo
ja
mov
ins
mov
daa
addr16
jge
sbb
push
mov
inc
loopne
xchg
fidivr
add
adc
dec
sahf
dec
(bad)
jg
sub
cmpps
test
sbb
ror
push
fs
(bad)
in
jge
cmps
cli
iret
inc
leave
daa
popf
int
cld
dec
add
xor
(bad)
pusha
retf
addr16
ss
popf
cmp
out
add
cmp
push
mov
mov
shl
lock
arpl
push
das
mov
ja
pop
fild
push
(bad)
mov
jne
fisttp
les
sbb
and
(bad)
xor
scas
xchg
mov
aas
sbb
scas
ficomp
outs
inc
mov
xchg
cmp
dec
inc
or
shl
(bad)
jge
jb
pop
in
cld
data16
sub
pop
movs
add
pop
push
movs
call
lea
lahf
aas
test
or
ss
retf
cli
mov
pushf
mov
cld
mov
popf
out
jo
mov
enter
ins
xor
jb
repz
inc
xchg
das
inc
add
mov
in
mov
in
loop
mov
xchg
test
add
bound
adc
mov
iret
rol
and
jo
jo
aad
dec
movs
and
cld
retf
std
fimul
or
iret
push
inc
outs
mov
loopne
retf
add
out
mov
sub
or
pop
mov
enter
cmp
jnp
repnz
jmp
jp
test
rol
push
or
cmp
popa
push
fs
jmp
and
adc
pop
dec
lahf
and
int3
push
xor
pushf
mov
jp
cmp
jae
push
inc
iret
cmp
fbld
jmp
inc
dec
mov
dec
data16
mov
call
jb
fucomp
stos
or
xchg
mov
mov
adc
lds
(bad)
arpl
xchg
loope
popf
mov
add
popa
(bad)
shr
(bad)
and
jo
ret
inc
inc
xlat
mov
cmc
sub
mov
sbb
movs
xchg
mov
fwait
mov
cmp
(bad)
mov
xchg
jns
stos
sbb
sub
mov
jno
scas
in
jnp
mov
(bad)
and
ret
ins
lods
sbb
add
sub
lods
mov
cmp
je
psrlw
fwait
mov
fbld
movs
ret
pop
clc
(bad)
mov
mov
push
es
lods
push
loop
dec
pop
cmp
dec
push
push
lahf
iret
or
push
inc
ret
cmp
or
push
sbb
int3
pusha
pusha
mov
in
inc
retf
sbb
adc
out
lock
push
adc
pop
jmp
repnz
in
outs
fnstcw
sub
js
scas
(bad)
test
(bad)
sub
cmps
popa
outs
test
and
add
outs
push
ret
jmp
sti
mov
mov
jle
adc
sub
add
int3
bound
vhaddps
and
push
add
cmp
test
test
fstp
nop
mov
aam
(bad)
dec
mov
psllq
inc
jnp
cmc
xchg
xlat
into
add
icebp
repz
cld
xchg
clc
jecxz
cwde
or
pop
test
cmps
xchg
push
out
mov
adc
lds
ins
sahf
test
dec
je
push
loop
xchg
fwait
iret
push
addr16
push
outs
xor
daa
push
sub
retfw
xchg
inc
nop
mov
aam
aam
push
sub
cmps
(bad)
shl
scas
dec
int
xor
pop
sbb
shr
rcr
aad
and
out
lods
add
mov
push
inc
or
mov
or
out
sub
(bad)
sub
scas
mov
lods
sbb
inc
cmp
leave
adc
sbb
xchg
push
inc
mov
mov
mov
sub
xor
dec
(bad)
jnp
and
fimul
pop
ds
mov
in
jb
dec
mov
xor
mov
xchg
sbb
mov
jl
rcl
ret
aaa
and
jmp
pop
aaa
repnz
cmps
fidivr
xchg
sub
in
aam
jae
and
cmp
movs
std
rol
mov
inc
mov
bound
pop
ins
mov
xchg
push
push
push
fs
std
xchg
push
das
mov
cwde
add
mov
pop
ins
lods
mov
mov
cmp
xchg
dec
int
dec
push
push
sti
in
test
cmp
pop
xor
sub
sub
dec
daa
cmc
shl
out
out
fld
ins
in
popf
(bad)
(bad)
dec
jmp
fcomp
adc
int
cmp
and
scas
jecxz
push
mov
mov
out
scas
mov
adc
(bad)
movs
in
into
out
out
jle
mov
rcr
scas
lahf
in
inc
loop
jle
mov
gs
sahf
daa
fild
mov
xor
idiv
out
(bad)
sub
inc
stc
test
xor
mov
loop
sahf
stc
jns
or
dec
out
sahf
dec
cli
jg
pop
fild
push
adc
test
cwde
dec
mov
mov
add
xchg
pushf
and
adc
sub
pop
push
and
clc
(bad)
rcl
std
add
loop
cmp
ror
icebp
mov
lock
lds
mov
imul
mov
pop
in
jmp
les
inc
leave
adc
scas
add
jno
fmul
fld
mov
dec
sub
mov
mov
adc
xor
sub
adc
xchg
xor
jno
mov
cli
mov
and
shl
pop
loope
mov
mov
ds
adc
mov
push
btr
mov
fisttp
xchg
shr
xor
lods
stc
pop
push
jne
pop
mov
in
icebp
pop
mov
test
add
jecxz
xchg
cdq
xchg
mov
stos
stos
cmp
ins
mov
mov
ret
sti
and
or
loop
dec
lds
fld
dec
dec
xor
nop
lahf
fidiv
sbb
push
jne
movs
pop
cmp
nop
retf
mov
pop
inc
cmp
mov
jecxz
nop
sahf
cmps
int
call
sbb
sbb
stos
daa
sub
adc
popa
ds
nop
ins
int3
inc
shl
xchg
pop
sbb
pushf
pop
sbb
out
dec
or
pop
add
pushf
dec
mov
jnp
mov
(bad)
loope
sbb
clc
popa
mov
fnsetpm(287
fs
ficom
mov
test
or
outs
cmp
aad
cwde
mov
call
ret
add
mov
fucomip
dec
arpl
xor
mov
xor
iret
jle
test
fdiv
mov
xchg
fdivr
pop
pop
or
cmps
(bad)
mov
inc
inc
sbb
ret
fsubr
push
xor
jns
push
(bad)
addr16
sbb
icebp
xor
div
xchg
inc
or
or
fyl2x
push
cmps
aas
aas
ins
es
mov
and
xlat
sar
mov
popa
call
lock
push
jle
cmp
in
addr16
popa
mov
add
xchg
push
push
sbb
retf
inc
in
jl
push
lock
push
cmp
hlt
pop
test
xchg
hlt
adc
fwait
cdq
xor
repnz
loopne
dec
aaa
push
test
test
out
ret
shl
fucom
leave
and
daa
push
fwait
pop
and
scas
mov
aas
and
jmp
(bad)
retf
push
adc
adc
xchg
mov
and
int3
cdq
xchg
cld
adc
pusha
out
into
ins
inc
adc
or
push
add
cld
adc
movs
in
inc
xor
(bad)
cmp
nop
and
std
je
test
mov
pop
gs
jmp
cmps
push
(bad)
pop
xchg
(bad)
adc
pop
pop
cmp
ja
cwde
xor
inc
(bad)
je
and
sbb
xchg
push
cmps
sbb
ror
inc
(bad)
data16
nop
sub
mov
and
jmp
loop
sahf
jb
imul
jmp
adc
aad
cmps
jb
jg
add
test
jnp
mov
clc
mov
inc
dec
inc
mov
lea
je
ror
pop
cmps
fcomp
mov
xor
stc
xchg
dec
ja
cmps
push
fs
adc
loopne
mov
or
or
jge
mov
and
adc
pop
call
jns
pop
and
imul
(bad)
cmps
sub
push
call
adc
outs
ret
xchg
(bad)
in
les
pop
cmp
leave
ins
test
jno
aam
sub
pop
and
loope
out
scas
add
xlat
xor
mov
xchg
dec
pop
mov
xchg
fst
dec
jle
mov
ficomp
mov
jle
adc
jne
pop
mov
jne
cmp
xchg
cmp
and
and
(bad)
mov
mul
mov
mov
into
pop
push
ins
inc
jle
sbb
jle
stos
mov
clc
loop
adc
test
jb
adc
or
and
ret
push
sbb
adc
out
jns
rcl
das
ja
outs
js
lods
mov
lock
neg
clc
and
lds
test
inc
shr
jb
sub
neg
xchg
out
sbb
push
ficom
adc
inc
mov
push
sub
lods
out
setnp
int3
inc
addr16
jae
fwait
jo
mov
dec
js
add
lods
add
pop
jecxz
sbb
fmul
jecxz
xor
xor
pop
loope
bnd
mov
and
pop
push
xor
out
sub
and
mov
repz
aas
repnz
(bad)
sbb
scas
int
mov
stos
stos
popf
or
adc
(bad)
inc
call
xchg
pop
jbe
mov
push
in
cmp
stc
popf
int3
fdivr
jb
test
mov
xchg
inc
sbb
je
inc
xchg
lea
pusha
(bad)
scas
ins
push
fimul
in
jo
mov
leave
pop
push
cwde
xchg
(bad)
sar
hlt
sbb
mov
mov
fcmovb
shl
test
xchg
dec
xchg
sub
ds
pop
mov
out
in
gs
std
lock
sub
jnp
retf
pop
push
nop
js
fidivr
sub
retf
in
cmp
ror
add
xchg
and
mov
call
loope
xor
pop
imul
mov
dec
imul
mov
fstp
hlt
mov
arpl
pop
adc
ret
jno
fcom
adc
mov
arpl
push
inc
cmps
stc
aas
push
mov
mov
shl
pop
leave
ret
mov
mov
sbb
sbb
inc
xor
lods
lds
and
mov
in
popf
test
pop
add
retf
push
xchg
mov
add
mov
(bad)
xchg
push
je
sbb
xchg
nop
les
or
and
pop
adc
(bad)
sahf
cdq
sti
fucomp
cmp
sbb
popa
xchg
popf
mov
stc
les
sbb
cmps
mov
fld
aaa
mov
cmp
cmps
and
cmc
ds
dec
mov
jne
mov
jno
(bad)
shl
int
pop
sahf
icebp
mov
mov
call
pop
sbb
push
jae
push
int
or
je
pop
and
sub
xchg
mov
mov
stos
fiadd
out
imul
sub
and
cmp
xchg
sub
mov
(bad)
or
sbb
xchg
int
pop
(bad)
sbb
cmc
call
mov
and
jle
cmp
fnstsw
fistp
ret
xor
in
addr16
xchg
mov
les
pop
scas
clc
addr16
dec
loopne
out
(bad)
xchg
cmps
hlt
adc
sbb
dec
and
stc
xchg
aam
and
push
rol
es
push
inc
lods
adc
push
inc
sbb
push
mov
cdq
in
push
sub
pushf
aad
jl
inc
pslld
(bad)
push
sub
xchg
fidiv
add
cmp
add
mov
into
push
fiadd
clc
(bad)
ins
repnz
pop
cli
ret
icebp
outs
sub
clc
clc
repnz
pushf
xchg
or
je
inc
and
frstpm(287
xchg
out
jmp
(bad)
cmp
xchg
aaa
das
inc
dec
cmp
std
jg
adc
add
cmp
or
pop
loopne
sbb
retf
mov
(bad)
icebp
xchg
out
inc
sub
lock
cli
jns
jge
(bad)
movs
and
dec
xchg
neg
addr16
loope
fst
xor
push
rcl
xor
ret
cli
fstp
dec
cmps
mov
push
inc
sti
dec
aad
mov
add
mov
jns
test
mov
pop
clc
call
imul
inc
jge
or
and
fcomp
call
mov
cmp
in
inc
fwait
sub
add
jl
shufps
xor
jge
pushf
(bad)
adc
int
xor
cmp
push
icebp
mov
push
(bad)
push
int
outs
cld
loope
push
jmp
inc
xchg
jecxz
or
cmp
dec
fidivr
bound
lods
jmp
cmp
stc
jmp
imul
out
cld
imul
repnz
inc
pop
push
push
add
adc
xchg
sub
ror
les
lds
leave
or
jmp
jnp
movs
lods
jae
or
outs
arpl
xor
sub
or
inc
sub
icebp
pop
mov
cmp
repz
mov
rol
push
xor
adc
bnd
xor
xchg
and
daa
xchg
cmp
cmp
daa
outs
sbb
push
jns
cmp
dec
inc
cmps
pop
push
inc
cmp
jmp
or
(bad)
movs
icebp
xchg
lahf
push
cmps
lea
inc
icebp
pop
sbb
mov
or
leave
adc
cmp
data16
subps
mov
cmp
outs
inc
loope
xlat
sar
ins
dec
test
xor
popf
je
(bad)
std
sub
push
test
rol
jle
pop
leave
jne
popf
test
imul
mov
stos
mov
mov
mov
int
ss
mov
in
mov
push
fmul
stc
fcmovne
imul
jno
sbb
pop
fld
fidiv
cs
mov
std
mov
ds
mov
cmps
int3
push
inc
int
inc
mov
int
mov
ins
mov
inc
test
push
xor
push
mov
xor
dec
mul
addr16
repz
jno
pop
sub
fnop
dec
sbb
cmp
sub
push
cdq
inc
or
ficomp
lods
push
js
adc
pop
cdq
hlt
inc
or
es
push
sub
cs
mov
xor
xlat
ja
out
sbb
lahf
mov
aad
dec
imul
pop
out
fld
bswap
into
ins
adc
inc
movs
mov
inc
ficom
sahf
jo
ins
(bad)
shl
inc
test
xchg
pop
pop
cwde
add
or
jno
ss
mov
mov
push
jg
xchg
and
scas
ret
xchg
fwait
scas
ja
ror
sub
dec
xor
push
cli
jle
in
std
sbb
ins
xchg
jb
cdq
cmp
movs
rol
push
xchg
fstp
mov
jp
sbb
fadd
out
pinsrw
or
jbe
jp
adc
jmp
sub
push
enter
pop
and
mov
jne
shl
mov
push
pop
ins
push
aaa
jns
pop
add
scas
(bad)
lock
int
ds
cmp
(bad)
ds
xlat
outs
ins
pop
jno
pop
outs
lock
aad
rcr
scas
sub
cmp
sbb
pop
arpl
fadd
pusha
mov
pop
mov
cli
pop
jmp
lods
ins
movs
dec
loop
xlat
lds
jecxz
cmc
sub
sbb
int
sub
scas
jmp
idiv
sbb
retf
push
aam
pop
jbe
rol
das
push
inc
out
mov
dec
adc
dec
arpl
(bad)
(bad)
hlt
push
add
test
inc
dec
jmp
ins
ficom
nop
retf
mov
lahf
lds
jg
jp
repnz
jp
and
popa
repz
inc
retf
add
outs
hlt
imul
retf
push
pop
sub
and
push
xor
(bad)
outs
sub
push
es
movs
dec
dec
adc
movs
inc
cmp
cmp
sub
and
movs
cmp
cmp
cdq
xchg
or
scas
cmps
mov
cmp
dec
jno
xchg
repz
jecxz
mov
sbb
inc
sub
cmps
rcr
addr16
pushf
dec
lds
push
sbb
mov
ja
ret
dec
mov
das
inc
(bad)
adc
cmc
dec
cmp
sub
mov
outs
pop
bound
sub
mov
in
sbb
push
in
mov
scas
call
cwde
push
jge
pop
jbe
inc
push
(bad)
dec
aas
int3
stc
pop
inc
cmp
mov
push
pop
pop
scas
cmp
shr
lahf
gs
arpl
xor
bound
xchg
dec
jae
fcmove
mov
lods
test
mov
pusha
inc
jg
cwde
stos
fstp
jns
inc
push
mov
stc
leave
sbb
or
test
(bad)
int3
les
cmps
fsubr
mov
scas
aam
cdq
inc
cdq
fucom
retf
cmp
pop
call
int3
mov
cs
clc
sahf
or
js
cmp
imul
in
sahf
cs
add
call
mov
in
sbb
out
adc
or
cmp
mov
xchg
adc
and
scas
stos
test
mov
mov
jbe
push
jg
sbb
leave
sub
dec
gs
or
out
cmp
xchg
cmps
data16
fwait
xchg
jbe
in
jbe
shl
mov
movs
das
and
imul
and
or
jg
jne
std
mov
and
mov
imul
popf
pop
xchg
jmp
adc
mov
cmp
sbb
dec
jae
or
gs
jae
cmp
loop
call
mov
sub
sbb
nop
retf
fld1
xchg
xor
repnz
mov
sub
adc
je
jg
mov
sub
mov
int
push
jmp
mov
fist
sbb
pop
mov
jg
adc
frstor
cld
add
xchg
lds
cmp
out
pop
and
(bad)
in
shr
jne
in
or
ins
mov
xchg
jne
inc
jl
les
mov
mov
mov
fdiv
inc
fsubr
hlt
cmp
(bad)
idiv
xchg
lods
jb
mov
inc
mov
lds
xchg
dec
jecxz
cmp
adc
and
or
add
fld
nop
cdq
cmps
cmp
or
rcl
lds
cld
movs
and
in
into
outs
data16
gs
ja
mov
in
cmc
sub
xchg
sub
ret
sub
cwde
sub
pushf
(bad)
enter
push
ins
cli
sbb
outs
test
cmps
xor
xlat
xor
lock
adc
ja
inc
in
jae
push
ficom
stc
pop
and
and
or
test
fcomp
sub
mov
test
test
push
shl
iret
arpl
dec
call
push
adc
mov
xor
cmps
push
mov
xor
sbb
lods
push
arpl
aas
(bad)
and
cmps
push
ds
sar
mov
add
sbb
and
xor
fwait
repz
or
aas
adc
out
cmp
popf
mov
les
jle
mov
mov
xchg
enter
push
push
cmps
out
inc
dec
outs
mov
xchg
jae
or
xchg
(bad)
fxch
scas
mov
pop
fwait
xchg
dec
push
pusha
test
scas
test
xchg
pop
stc
add
fadd
sub
scas
shl
jae
shl
push
sbb
sar
pop
sub
sbb
xor
sbb
mov
push
pusha
xchg
movs
aas
pop
push
push
lock
mov
(bad)
jmp
push
gs
daa
lods
cmp
push
sub
int
mov
push
popa
xor
sub
fisub
sbb
jle
xor
pop
repnz
xor
cmp
xchg
cmp
xor
outs
sub
or
sub
hlt
inc
test
push
adc
cmp
adc
jmp
xchg
jmp
mov
fild
xchg
mov
out
call
push
movs
loop
call
test
rol
sub
mov
and
jb
add
jle
aas
mov
jae
lahf
dec
in
jl
xchg
ins
(bad)
rol
sub
sbb
cmp
mov
call
push
add
and
xor
std
test
repnz
mov
push
inc
fisub
or
xor
in
or
or
pusha
jb
dec
jbe
stos
ret
shr
leave
cmp
data16
stos
daa
cmps
ror
test
xchg
sbb
pop
xchg
mov
lea
inc
push
sub
retw
in
xchg
jo
push
test
add
out
cmp
inc
mov
jmp
adc
xchg
jns
mov
jnp
repz
pop
fwait
inc
addr16
xor
shl
fistp
xchg
mov
std
test
pop
xchg
or
rol
loop
or
call
int3
cmp
ins
pop
jns
sub
adc
(bad)
lods
fsubr
fcmovbe
sti
ucomiss
mov
mov
cdq
fistp
xchg
jp
ins
call
sub
mov
jg
inc
mov
push
into
mov
lds
cli
mov
mov
(bad)
fild
and
addr16
cdq
ja
xchg
cmp
inc
mov
cmp
fdivr
pusha
xchg
mov
mov
mov
(bad)
sub
or
jmp
cwde
stc
aam
xchg
adc
aaa
cwde
mov
rol
sahf
add
leave
mov
cmp
dec
mov
leave
ror
xor
test
dec
out
xor
ror
mov
xchg
in
mov
iret
loope
xchg
jno
fs
out
cmp
not
(bad)
outs
sub
adc
int
cmp
scas
arpl
cmp
jmp
lods
xchg
adc
imul
mov
ja
popa
add
ret
inc
xchg
mov
dec
in
adc
ins
xchg
mov
test
push
pop
pop
rcl
jno
mov
repz
in
mov
sub
add
jp
pop
and
mov
out
push
(bad)
out
or
push
inc
jns
nop
mov
stc
cwde
sbb
inc
inc
cli
das
inc
inc
jb
(bad)
and
and
pop
cmp
data16
add
fiadd
daa
leave
cdq
dec
xchg
scas
or
xor
fld
mov
aaa
js
or
add
stos
scas
jae
dec
jne
mov
mov
add
jae
ror
stos
mov
adc
ins
movs
jmp
inc
aad
jle
mov
mov
push
out
pop
cmp
popa
lods
inc
repz
add
jae
mov
xor
(bad)
sti
aam
retf
mov
fstp
mov
(bad)
mov
movs
cmp
stos
xchg
pop
and
sti
and
jns
pop
dec
les
cli
mov
shl
mov
or
mov
leave
cmp
xor
imul
lea
test
out
sub
out
jp
and
sub
retf
sar
scas
xor
pop
retf
loopne
retf
rcl
and
mov
mov
jmp
aam
or
pop
add
dec
mov
mov
aas
fs
and
jo
mov
push
add
popa
out
fstp
cmp
push
daa
mov
cmp
jmp
retf
push
cmps
stc
pop
jns
fidivr
mov
pop
cmp
mov
pop
fs
push
jno
push
cmp
icebp
sbb
repz
cmp
(bad)
push
mov
shl
add
or
repnz
add
and
pop
ret
jae
jg
inc
jl
imul
cmp
jg
or
add
ins
cmps
inc
loopne
sbb
arpl
cmp
and
ret
int3
and
out
sar
dec
dec
add
icebp
pop
pushf
iretw
stos
mov
fiadd
inc
sbb
jle
mov
popa
pop
fistp
rol
mov
xchg
inc
call
mov
push
shl
into
pusha
jl
scas
push
imul
jne
outs
adc
jae
mov
mov
mov
cdq
sub
pop
std
add
popf
lds
push
loope
xlat
adc
out
adc
mov
mov
jnp
inc
xor
push
jno
pop
adc
mov
dec
jmp
mov
and
or
icebp
inc
iret
clc
retf
call
call
(bad)
fisttp
into
das
pop
xor
sbb
mov
pop
(bad)
pfrcpit2
and
mov
xor
sub
xchg
push
mov
jns
loop
inc
jno
daa
pop
push
arpl
pop
or
cmps
jecxz
aam
cli
pop
inc
push
imul
ret
ja
mov
cs
cmp
les
test
and
rol
sti
xchg
retf
mov
xor
push
dec
push
or
loop
mov
mov
(bad)
push
pop
push
sub
pop
push
lock
repnz
mov
add
mov
out
pop
pop
mov
sub
cwde
arpl
ret
and
pop
cmp
add
pop
mov
psadbw
and
repz
sbb
adc
mov
push
pop
or
ss
mov
pop
push
mov
sbb
fdivr
xor
mov
push
(bad)
adc
lea
mov
mov
loop
add
mov
popf
xchg
lock
shl
jle
and
mov
adc
xor
and
mov
lock
shl
add
fadd
aaa
clc
sub
sbb
nop
pop
or
sbb
dec
cmp
retf
mov
sub
adc
xor
dec
loopne
xor
sbb
jns
mov
popf
jmp
cmp
push
push
mov
pop
ins
ror
enter
cmp
xchg
cmp
out
dec
and
(bad)
jo
mov
cmp
ss
sbb
retf
movs
mov
les
cmp
add
and
or
(bad)
out
push
push
xchg
shl
call
ds
(bad)
daa
cmp
mov
out
daa
xlat
gs
mov
lock
fdivr
pushf
and
loope
xchg
adc
pop
or
push
and
mov
(bad)
hlt
dec
xor
iret
mov
ja
cdq
lds
into
aaa
or
push
and
arpl
in
jmp
sar
mov
icebp
sbb
xchg
dec
fstp
cdq
sbb
fwait
inc
dec
sar
add
ret
les
shr
mov
inc
dec
pop
(bad)
jne
jecxz
xor
xchg
mov
in
(bad)
pop
outs
mov
jecxz
pop
call
jnp
and
adc
push
loope
aaa
lock
mov
inc
sbb
je
ja
xor
push
outs
movs
int
(bad)
lods
jae
ror
mov
test
sbb
jle
out
scas
test
stos
test
lds
inc
mov
xchg
jb
pushf
push
mov
push
sbb
lods
add
jb
lock
dec
add
adc
outs
pop
movs
cmp
ja
sub
inc
rcr
jmp
adc
shr
rcr
repnz
pop
lahf
dec
je
mov
sub
popa
lods
sub
gs
jecxz
lea
pop
jne
and
std
mov
jp
add
mov
xor
add
out
call
xchg
xlat
xchg
enter
cmp
leave
mov
mov
xor
in
mov
gs
jb
pop
fiadd
xor
aaa
and
repnz
adc
inc
jbe
(bad)
ror
jae
lock
cwde
mov
jmp
cwde
inc
and
imul
scas
dec
bound
jno
sbb
mov
xlat
xchg
hlt
xchg
ins
lods
into
out
nop
push
jne
movs
xchg
mov
and
inc
lods
dec
movs
fimul
inc
test
xchg
or
dec
or
fsub
aad
test
or
mov
mov
aas
pop
pop
test
(bad)
pop
lea
cmp
lock
push
pop
in
jnp
stos
gs
popw
call
fidiv
mov
mov
call
loope
cmp
cmp
int
pop
jb
pop
inc
mov
movhps
pusha
imul
fmul
dec
pop
mov
xor
jno
jg
imul
dec
test
scas
and
scas
xor
shr
cli
push
out
dec
cwde
retf
in
cmp
adc
jmp
mov
and
push
addr16
shr
sbb
scas
pop
pusha
jbe
and
mov
sbb
mov
fnstenv
loop
and
dec
xor
out
(bad)
xor
mov
push
mov
add
sti
sbb
inc
jmp
add
mov
ja
imul
dec
add
jmp
int3
loopne
test
repnz
mov
inc
imul
fild
sbb
pop
inc
test
jl
ret
in
outs
cld
loopne
or
add
jne
sar
sahf
xchg
dec
push
mov
xor
mov
add
inc
test
mov
sbb
es
mov
in
loopne
(bad)
jmp
sbb
dec
jbe
and
mov
sub
sub
mov
stc
mov
popf
(bad)
pop
mov
repz
(bad)
and
out
out
retf
pop
pop
out
(bad)
cmp
and
jmp
jbe
or
add
mov
scas
mov
push
cmps
jo
icebp
xor
or
fld
jg
pop
loope
ds
fstp
sub
xchg
test
iret
xchg
inc
(bad)
hlt
add
loop
sar
sub
(bad)
mov
mov
and
lods
pop
popa
fs
and
outs
mov
or
push
test
test
sti
dec
in
cmc
retf
add
lods
movs
retf
mov
dec
xlat
retf
enter
mov
sbb
pop
addr16
pop
lock
xor
fwait
data16
sub
mov
inc
adc
mov
daa
mov
outs
mov
mov
(bad)
and
jmp
(bad)
shl
xchg
lods
test
sub
adc
xchg
xor
mov
out
adc
push
mov
ja
xchg
jecxz
xchg
inc
(bad)
test
push
xchg
out
repz
mov
into
push
pop
clc
and
and
sbb
mov
pop
imul
mov
ins
fmul
js
fisub
cmps
dec
arpl
or
mov
mov
(bad)
sbb
(bad)
call
inc
loop
xor
mov
into
cdq
adc
sbb
test
xchg
pushf
fldenv
iret
enter
mov
mov
jmp
push
sub
(bad)
mov
mov
mov
inc
xchg
push
movs
cld
scas
fucom
add
fld
nop
push
inc
movs
pop
iret
jo
pop
aam
xor
xlat
sbb
mov
dec
mov
xor
fcmove
xor
sbb
mov
add
mov
cs
jg
xchg
pop
xchg
ficomp
cmp
nop
jge
and
fst
mov
in
lahf
loope
stc
and
push
stos
xchg
inc
push
push
adc
fdiv
jne
(bad)
imul
mov
jp
(bad)
xchg
push
mov
jg
fistp
pop
sbb
pusha
test
leave
cs
sti
mov
es
loop
cmp
mov
movs
popf
jg
and
lahf
(bad)
sti
dec
inc
(bad)
aam
in
hlt
in
xchg
xlat
(bad)
mov
inc
ret
add
in
jp
jl
(bad)
dec
xchg
inc
dec
out
mov
mov
adc
aas
xor
mov
mov
fcom
pop
je
xor
outs
pop
lods
lahf
fs
cwde
dec
imul
add
mov
das
adc
in
xchg
mov
scas
xor
or
sub
jmp
add
shr
cld
neg
xor
mov
repz
or
in
jbe
cli
xlat
inc
fs
(bad)
pop
sub
test
cmps
mov
daa
cmps
aam
dec
out
out
adc
adc
cmp
jnp
xchg
aam
xchg
jno
pop
out
xchg
jle
inc
dec
cld
cmp
mov
adc
inc
in
rcl
lods
push
pop
inc
lahf
mov
push
xchg
aaa
ret
movs
int3
xchg
mov
shl
lahf
fdivr
push
(bad)
add
mov
add
ror
jl
mov
ins
popa
xor
mov
sbb
repz
cli
ret
sub
dec
push
movs
out
cmp
scas
ds
mov
jle
xchg
add
push
mov
div
or
xlat
popf
dec
sub
mov
lock
jge
xlat
shl
test
ret
sbb
push
cmps
push
lods
or
jnp
pusha
xor
push
pop
hlt
data16
das
shr
add
lock
jmp
jae
mul
adc
outs
arpl
outs
js
xchg
mov
jnp
out
repnz
mov
sbb
loopne
rcr
(bad)
cmp
sbb
xor
aam
pop
jmp
test
ins
sub
rsqrtps
aam
or
jge
and
sbb
and
lods
mov
and
jbe
mov
movs
aad
dec
in
repz
push
int3
cmc
nop
ficom
outs
mov
xor
int3
iret
cld
and
pop
loopne
push
les
enter
mov
das
push
ins
stos
faddp
xchg
xchg
arpl
gs
lds
sti
js
call
push
test
add
xlat
mov
cli
pop
loope
js
movs
pop
sbb
xor
scas
sbb
or
fdivp
fxch
stos
or
div
sahf
push
icebp
lods
push
retf
and
xchg
je
xor
cdq
call
fisttp
cmps
aam
imul
xor
jp
sbb
(bad)
pshufw
cmovo
xor
push
ja
inc
(bad)
xlat
cmp
mov
gs
push
add
mov
push
mul
ja
push
(bad)
or
ret
push
xchg
out
fsub
jae
xchg
add
add
ret
dec
pusha
push
jp
lea
in
xchg
jecxz
push
repz
stc
push
and
fld
movs
lea
ja
(bad)
xchg
mov
sub
rol
adc
mov
ret
ret
jecxz
call
xchg
sbb
cmp
test
or
jg
cmp
mov
xchg
push
retf
jb
rol
je
mov
mov
sbb
jmp
rol
sub
adc
adc
dec
loope
cmp
sub
popa
bound
push
loop
daa
jp
mov
(bad)
icebp
mov
movs
adc
(bad)
addr16
outs
(bad)
pushf
sbb
idiv
dec
xchg
je
repz
fist
test
popf
push
mov
test
fbstp
sub
ins
add
push
xchg
inc
jno
pop
pop
inc
dec
scas
scas
mov
in
outs
mov
inc
xlat
sub
dec
dec
popa
push
mov
xor
push
mov
push
mov
inc
ficomp
(bad)
inc
pop
add
and
imul
mov
fs
push
add
lods
lock
cs
push
ss
push
repnz
jle
add
(bad)
inc
xchg
popf
ja
jecxz
push
stc
in
das
ins
lock
jmp
push
fisttp
pop
dec
out
mov
div
mov
xchg
dec
int3
pop
ror
dec
dec
cld
pop
add
aas
movs
inc
add
push
mov
mov
adc
arpl
adc
mov
out
or
jge
jb
pop
(bad)
imul
xchg
loope
(bad)
xor
std
aaa
ins
push
sbb
das
ret
xchg
jge
push
iret
pop
push
shr
cmc
jmp
dec
movs
sub
cld
jae
ja
std
or
lea
jno
jp
xchg
(bad)
sbb
inc
cmp
pop
dec
pop
cmp
add
cdq
sbb
into
or
add
stos
inc
hlt
ins
mov
sti
pop
fsub
movs
fnstenv
jg
std
sub
jg
inc
pop
inc
jo
pandn
mov
cmp
mov
or
inc
dec
push
ins
push
popf
movs
out
jg
(bad)
fcomip
add
popf
les
sbb
xor
vmread
mov
xchg
loope
sahf
das
push
jnp
dec
stos
pop
cmp
push
int
xlat
mov
adc
mov
sub
stc
mov
jge
mov
cdq
aad
out
jle
out
sub
sbb
(bad)
cmp
pop
int
scas
jmp
inc
mov
xchg
sub
movs
cmp
and
imul
in
fcmovbe
mov
pushf
pop
mov
xor
int
xchg
pushf
push
xor
add
mov
or
fild
mov
std
jge
pop
jno
rcr
or
xor
pop
sbb
retf
push
xor
inc
add
mov
out
js
ins
jg
clc
popf
stc
das
(bad)
adc
aas
fwait
mov
bound
test
or
neg
loop
(bad)
shl
popa
inc
mov
out
dec
cmp
or
xchg
int3
(bad)
fiadd
xchg
and
ror
(bad)
out
imul
aaa
jle
imul
xor
cmps
xor
nop
and
iret
xchg
inc
mov
aas
jne
mov
adc
int3
outs
mov
mov
adc
(bad)
mov
call
sub
cs
je
outs
fld
ficomp
inc
mov
mov
xchg
nop
fsub
adc
and
aaa
movs
adc
lods
neg
into
mov
jne
jb
lods
push
stos
rcr
popa
or
cs
rep
out
sub
xor
movs
cmp
data16
ret
mov
neg
in
das
xchg
pop
jno
dec
adc
fsubr
cs
outs
push
in
xchg
jmp
dec
mov
mov
outs
lds
fwait
xchg
cmps
aam
and
adc
movs
not
sbb
lea
imul
adc
xor
rcl
fs
mov
addr16
xchg
pop
inc
stos
inc
jb
in
addr16
loop
inc
xor
test
push
movs
mov
sbb
mov
jg
jnp
jmp
cmp
pop
pop
mov
sbb
iret
xor
push
aas
cmc
lahf
(bad)
inc
rcl
push
popa
aam
and
xlat
ficomp
mov
ins
xor
xchg
out
lods
adc
pop
outs
and
jnp
int
or
and
inc
adc
and
dec
inc
sar
inc
(bad)
fistp
out
pusha
clc
adc
repz
mov
inc
sbb
sbb
loope
test
imul
pushf
sub
loopne
je
mov
lods
xchg
jae
and
test
in
dec
jge
hlt
and
enter
mov
adc
sub
or
pushf
sahf
dec
int3
jmp
sub
push
xchg
nop
push
xor
clc
dec
xchg
sub
pop
pop
jecxz
cdq
jmp
and
in
push
xor
and
(bad)
mov
clc
pushf
xor
shl
lock
mov
push
push
and
dec
ret
pop
aad
test
scas
xor
or
out
lods
mov
cmp
imul
push
jae
loop
xor
mov
scas
cs
(bad)
push
xchg
ja
rcr
push
mov
jae
sbb
ss
pop
xlat
and
mov
xchg
cmps
in
mov
mov
ss
fnstenv
mov
scas
shl
aam
cmp
jne
xor
push
int3
out
sbb
xchg
sbb
pop
aad
cmp
xor
or
dec
pop
push
push
push
inc
cmc
xor
outs
push
sub
sti
mov
mul
push
adc
imul
pop
pushfw
lods
rol
int3
fild
mov
ret
ficomp
mov
out
hlt
mov
sub
mov
sub
push
stos
inc
mov
cdq
dec
std
lea
jmp
push
cmps
adc
adc
ja
cli
movs
inc
mov
pop
jo
lea
sub
sub
(bad)
pop
mov
xor
sub
inc
fdivr
pop
jg
mov
lods
ror
out
test
push
mov
stos
ins
push
cmps
(bad)
and
cmp
test
dec
adc
pop
lds
mov
mov
(bad)
in
or
cli
mov
ss
dec
aad
adc
pop
push
daa
outs
dec
pop
and
add
test
inc
imul
icebp
dec
pop
cmp
mov
imul
dec
xor
outs
mov
jb
pop
xor
xor
push
xchg
xor
sub
sbb
xchg
rcr
jp
push
adc
mov
stos
xchg
push
clc
rcr
aas
or
sub
mov
push
mov
into
repnz
lahf
xor
pop
sbb
dec
stos
add
pop
lods
mov
pop
fs
xchg
add
pop
neg
sbb
inc
cmp
std
cmc
sbb
out
iret
xchg
cmc
mov
bound
lahf
outs
jmp
and
cld
xchg
mov
cmp
in
adc
mov
push
cmc
cdq
in
in
dec
adc
mov
test
mov
aad
mov
jmp
scas
and
sbb
mov
retf
sbb
and
inc
fiadd
shl
(bad)
pop
dec
out
cmp
and
xor
mov
xchg
test
and
daa
adc
xor
jg
movs
test
mov
jle
xchg
jnp
mov
cmp
inc
sbb
mov
out
xchg
aas
sahf
mov
jbe
iret
in
xor
xchg
or
fnsave
psubw
(bad)
fs
cmp
sbb
test
pop
dec
cmovb
push
retf
jp
ret
clc
mov
pop
dec
sub
sub
stos
inc
mov
scas
movs
in
jg
in
cmps
cmp
(bad)
cmp
inc
inc
inc
mov
icebp
enter
sbb
pop
jns
xchg
and
mov
inc
or
push
mov
inc
(bad)
mov
aam
mov
cmp
mov
sub
fsubr
popa
or
push
inc
mov
jg
imul
js
sub
repnz
mov
ret
sahf
mov
stc
push
stos
fidivr
ret
dec
retf
xchg
sahf
fdiv
jp
adc
push
push
mov
xchg
dec
ins
lods
out
add
jecxz
xchg
and
call
and
mov
push
and
mov
iret
xchg
fld
or
ret
mov
cmp
stos
xchg
mov
jbe
jl
mov
loop
push
cdq
pop
mov
xor
ja
mov
jne
pop
rol
shl
ret
xor
leave
or
cmps
imul
test
sub
pop
out
daa
mov
call
mov
ss
push
inc
mov
hlt
(bad)
cmp
mov
mov
mov
inc
sbb
sbb
icebp
jne
in
jbe
and
adc
cmp
mov
pop
pushf
mov
ins
iret
sahf
xchg
ins
jo
fnsave
cli
xlat
ror
adc
jge
mov
inc
ret
hlt
and
popa
sub
push
shr
scas
(bad)
aam
enter
sbb
stos
or
sbb
int
adc
jo
mov
sahf
test
push
xchg
and
aad
fidivr
js
inc
cmp
repz
pushf
add
dec
or
mov
jne
jno
push
fisub
inc
jnp
sbb
pusha
push
sar
mov
jb
shr
mov
cmp
mov
cmp
jns
xchg
lods
push
scas
stos
cld
std
sbb
mov
add
xor
fisttp
test
fld
dec
movs
mov
xchg
arpl
aam
test
push
adc
xchg
data16
ret
in
adc
lock
sti
adc
test
rol
xchg
push
sbb
pusha
and
stc
adc
dec
jo
xor
inc
call
scas
ret
fisub
and
sub
pop
mov
enter
inc
lods
dec
push
inc
inc
(bad)
shl
add
pop
jmp
ror
mov
sbb
and
sub
ds
mov
inc
in
push
retf
pop
loop
sbb
mov
inc
push
pop
rol
fxam
mov
pop
push
or
loopne
xlat
jnp
dec
mov
inc
(bad)
xchg
xchg
leave
test
adc
cmp
ss
mov
mov
mov
or
stos
test
fmul
cmc
mov
xchg
loopne
inc
cmp
rep
imul
dec
pop
push
(bad)
cdq
sbb
push
jmp
test
xlat
pop
in
sbb
mov
je
mov
mov
cwde
jecxz
fs
int
mov
mov
(bad)
jl
pushf
popf
xlat
pop
sahf
ja
fmulp
das
std
sbb
test
mov
int3
push
fmul
loopne
test
xchg
cmp
es
icebp
xor
hlt
std
les
gs
loopne
bound
inc
imul
scas
imul
clc
gs
xor
out
fistp
retf
shl
test
xchg
push
mov
in
pop
adc
std
adc
sbb
inc
lds
int3
mov
ret
adc
add
mov
xchg
iret
test
test
sbb
sbb
xor
add
shl
mov
xchg
in
cmps
ror
outs
mov
lahf
xchg
lds
adc
or
icebp
mov
xchg
ror
adc
xor
mov
jae
(bad)
or
xchg
scas
or
jno
lods
and
push
push
sbb
adc
mov
add
inc
add
mov
test
jmp
pushf
mov
and
imul
inc
mov
and
sub
call
in
ficom
les
or
or
arpl
(bad)
hlt
sbb
mov
inc
aaa
mov
xchg
mov
in
sbb
mov
(bad)
jmp
mov
adc
jbe
sbb
shl
pop
or
add
jne
adc
jno
scas
pop
sbb
enter
jecxz
stc
stos
mov
add
jp
mov
cmp
jb
lods
pop
adc
xchg
ds
outs
into
push
fcom
push
pop
lea
cmps
xor
mov
xchg
cli
inc
imul
jo
pop
leave
xlat
fsubp
add
pop
sahf
sti
xchg
not
mov
sbb
je
pop
push
imul
push
add
jle
sbb
mov
shl
jmp
popf
add
add
mov
(bad)
ror
cdq
push
(bad)
jmp
mov
test
and
out
mov
mov
push
jae
cdq
jmp
push
pop
xchg
je
inc
cli
in
sub
or
std
sub
pop
or
(bad)
icebp
mov
sub
dec
stos
gs
arpl
pusha
stos
cmps
push
clc
mov
adc
mov
aad
dec
fcomp
ja
mov
xchg
in
mov
mov
clc
xchg
sub
stos
and
mov
out
in
pop
cwde
shl
rcl
push
pop
inc
dec
ret
test
push
add
push
je
jge
cld
add
out
jnp
or
mov
cmps
adc
mov
scas
(bad)
jns
out
cld
mov
xchg
xor
cs
or
mov
lea
adc
cli
movs
pop
iret
mov
sbb
aaa
gs
dec
fs
aas
xchg
sub
cli
retf
gs
(bad)
in
rcl
rcr
xchg
packuswb
push
xchg
cmp
ins
rol
or
ja
adc
cs
fucomi
sub
ins
gs
lock
lods
bound
inc
jbe
nop
and
inc
adc
mov
lods
lock
push
push
ja
mov
jge
je
sbb
aad
les
adc
iret
adc
popa
fnstcw
jno
std
jp
sbb
retf
lea
jmp
xbegin
lea
in
sbb
jo
imul
(bad)
loop
dec
sbb
cmp
ret
not
dec
stc
sti
dec
dec
lods
outs
retf
pop
out
inc
or
je
shr
jecxz
pop
mov
xchg
adc
aas
(bad)
rcr
and
fcomp
aas
ds
mov
scas
pop
test
add
icebp
test
dec
and
scas
adc
mov
sub
sub
movs
loop
dec
inc
mov
add
cmp
mov
fcomp
lock
es
cli
xchg
call
into
ret
ja
add
xor
scas
jns
or
push
jno
cmp
jns
add
pop
xchg
mov
inc
pushf
test
leave
dec
addr16
repz
mov
push
pusha
push
ror
in
loopne
inc
call
cld
cmp
cwde
dec
sub
xor
test
xor
push
sahf
pop
in
test
rcl
outs
inc
adc
push
sub
sub
mov
bt
loope
sub
dec
push
fild
dec
mov
in
cmp
(bad)
(bad)
lods
inc
aaa
xor
push
iret
pop
lods
mov
fyl2x
fistp
mov
hlt
ja
fisttp
pop
test
pusha
jmp
cdq
mov
cli
icebp
shl
push
mov
xchg
jne
jmp
mov
fcmovnu
inc
aad
jmp
push
jle
add
dec
xchg
push
dec
ss
xor
fst
and
xor
pop
mov
rcl
in
sar
dec
aaa
cmp
sub
ss
repz
jmp
int3
pop
addr16
sub
fisttp
gs
rcl
popf
mov
ss
dec
add
and
push
cdq
xchg
je
inc
push
icebp
inc
and
and
repz
jmp
mov
adc
cmps
fidiv
loope
mov
sbb
inc
sbb
cmp
rcr
or
lods
push
mov
cmp
jns
in
test
cmc
mov
cmp
sub
adc
std
dec
inc
sub
test
rcl
mov
mov
mov
jbe
mov
hlt
ins
add
mov
fwait
cmc
ins
mov
xchg
inc
inc
mov
sub
cmps
xchg
jae
aam
ret
enter
adc
adc
add
push
mov
sahf
outs
adc
sbb
fstp
or
shl
jae
adc
mov
aad
addr16
out
(bad)
cmps
or
pop
out
xchg
ins
sti
push
xor
xchg
adc
mov
sub
add
xor
retf
call
or
mov
outs
popa
and
cmp
pop
repz
pop
cmp
(bad)
dec
(bad)
jmp
out
(bad)
hlt
loope
add
icebp
add
pop
ja
xchg
jbe
jl
add
scas
xor
add
stc
in
xchg
xchg
stos
inc
(bad)
aam
fwait
clc
mov
cmp
fucomip
dec
push
push
bound
cmp
(bad)
or
pop
mov
and
jecxz
jecxz
scas
sahf
jb
out
inc
xchg
scas
inc
sub
inc
test
rol
adc
pop
mov
daa
xchg
mov
test
add
mov
jmp
add
jno
or
cmps
xchg
cs
and
push
(bad)
imul
outs
pop
jns
pop
ret
mov
out
imul
cmp
iret
lock
or
addr16
popw
xor
and
or
cwd
or
adc
xchg
in
scas
addr16
push
sub
inc
inc
cld
or
les
aad
or
mov
add
fcmovnb
mov
push
and
mov
lods
jnp
or
mov
mov
and
cmp
pop
lds
and
jle
cli
fisttp
into
sub
adc
fistp
lahf
inc
pop
mov
sbb
push
jo
ss
bound
mov
jmp
inc
inc
shufps
dec
dec
xchg
popa
jns
jg
div
xchg
repnz
fsub
dec
sbb
push
test
add
dec
cmp
clc
js
adc
push
imul
pusha
les
cmp
xor
adc
movs
and
stc
mov
cmps
icebp
sub
pop
mov
pusha
sub
ss
add
xor
adc
xor
loopne
and
mov
popf
addr16
movs
into
mov
adc
retf
int3
pop
pop
pop
cwde
mov
and
cdq
hlt
or
frstor
fistp
mov
mov
movs
loop
fadd
add
pop
and
sti
hlt
adc
adc
aad
call
(bad)
and
jg
dec
scas
adc
or
(bad)
lods
inc
icebp
inc
test
mov
(bad)
fstp
shl
push
jmp
inc
jno
jl
and
lods
xchg
mov
pop
adc
shl
inc
retf
cmp
dec
sub
cld
xor
dec
pop
pop
mov
and
cli
mov
mov
sub
inc
sahf
das
adc
mov
sar
xchg
xor
mov
xchg
jmp
in
mov
cmps
mov
scas
dec
test
and
jmp
jno
cmps
aas
sbb
add
inc
mov
sbb
pop
inc
or
jecxz
xor
mov
pushf
dec
pop
mov
dec
arpl
mov
pop
jg
cmps
jmp
arpl
xchg
mov
cld
pop
cmc
out
ret
push
test
ins
js
xchg
and
pop
pop
xchg
pop
ret
pop
jecxz
mov
jl
nop
test
mov
xor
xchg
fs
into
push
movs
mov
pushf
sub
jnp
(bad)
push
inc
push
ret
push
mov
and
jmp
and
sub
fdivrp
mov
scas
xchg
shr
xchg
sub
repz
shl
xor
inc
(bad)
cdq
sbb
sub
and
sub
inc
imul
shl
xchg
lods
sbb
xor
dec
ins
inc
loope
mov
shr
addr16
in
scas
push
sahf
adc
pusha
aaa
pop
mov
clc
dec
pushf
push
div
stos
xor
push
or
xor
adc
xchg
les
addr16
pop
dec
stc
jecxz
inc
jb
fiadd
test
sub
pushf
add
movs
add
add
cs
out
mov
in
fidivr
js
test
jle
inc
jae
leave
stc
addr16
pop
hlt
inc
aas
mov
enter
mov
dec
sar
ja
shl
mov
jge
cmp
inc
(bad)
mov
loop
cmp
fwait
mov
aam
movs
jge
mov
xor
call
cmp
jg
(bad)
mov
and
add
out
jmp
push
mov
cs
and
xor
mov
jbe
imul
repnz
jmp
jmp
adc
in
adc
in
mov
add
sub
jnp
fcom
cdq
mov
push
enter
out
xor
jg
xor
sti
sti
ret
sub
mov
hlt
pop
mov
jb
stos
mov
xor
mov
pop
stc
mov
cs
xor
clc
push
fldcw
mov
test
xchg
mov
xchg
mov
xor
pop
xor
loopne
rol
ja
mov
in
loop
call
inc
mov
icebp
fsubr
pop
jle
inc
push
inc
mov
int3
out
sti
xchg
ins
mov
ficom
or
shr
sti
in
icebp
pop
cmps
and
adc
lds
cmp
sub
lods
(bad)
out
stos
mov
fdivrp
ret
inc
mov
adc
popf
mov
pop
dec
adc
inc
push
jle
pop
sbb
inc
lock
dec
or
cmp
pop
xchg
popf
push
test
mov
popf
mov
out
ror
cmp
push
repz
movs
xor
and
pushf
mov
ins
test
out
adc
test
aad
(bad)
in
ss
push
nop
call
ret
(bad)
es
mov
fidiv
or
pop
mov
lock
fs
ss
or
out
or
clc
mov
push
adc
in
loop
nop
lahf
cmp
ret
imul
lahf
xchg
xchg
inc
pop
call
xchg
dec
dec
rcl
push
cmc
pop
mov
std
int3
cmp
sub
pop
adc
push
pop
mov
xor
push
aas
mov
fnsave
(bad)
outs
mov
push
ins
fidiv
jnp
cmp
fstp
rol
retf
adc
sbb
pushf
xor
push
push
adc
jge
cmps
daa
arpl
mov
mov
in
inc
(bad)
push
jns
ret
lods
dec
mov
nop
cmp
cmps
push
add
ds
sbb
mov
jmp
inc
scas
add
es
mov
sbb
sub
in
cmps
adc
push
add
push
pop
ds
xor
pusha
adc
sub
jb
rcr
or
jmp
sbb
mov
dec
adc
cmp
mov
mov
sub
cmps
mul
ss
push
bound
imul
(bad)
pop
cs
bnd
adc
cld
xor
in
or
dec
dec
das
lds
ins
push
in
das
test
xchg
inc
outs
push
sbb
fisttp
out
push
js
push
jnp
outs
enter
out
cmp
mov
(bad)
pminub
(bad)
push
add
sbb
push
clc
cmp
fwait
mov
in
inc
pop
inc
add
xor
daa
mov
jmp
outs
pop
push
jge
pushf
daa
jne
inc
or
sahf
das
jne
push
ss
adc
rcr
call
xor
fstp
outs
out
int3
int
(bad)
stc
scas
mov
sub
xchg
sar
arpl
(bad)
rcl
add
push
jle
push
push
xchg
sub
ror
outs
aam
inc
push
mov
push
sbb
popa
cmp
mov
addr16
idiv
adc
sar
xchg
shl
add
sub
mov
ins
enter
cmp
sti
jns
in
and
in
loop
pop
bound
xor
gs
mov
xchg
jns
cmps
xchg
mov
xchg
mov
loopne
out
dec
sbb
xchg
jmp
sbb
dec
add
add
pop
mov
push
adc
lds
inc
mov
jg
sbb
popw
or
loopne
push
addr16
xor
(bad)
ret
pop
jge
xchg
mov
pusha
and
rol
mov
pop
sar
add
jnp
push
nop
outs
fucomi
sub
push
test
pop
jle
cwde
test
cdq
sub
xor
int
int
cmp
loopne
sbb
mov
clc
pop
and
ret
pop
lea
lahf
mov
jo
and
jl
icebp
dec
retf
jb
pop
xlat
(bad)
jnp
inc
leave
sub
push
movs
push
mov
push
lds
adc
lea
addr16
add
mov
xchg
retf
xchg
mov
repz
mov
mov
imul
out
addr16
mov
or
sbb
test
mov
push
shl
mov
js
adc
jg
cli
xor
movs
xor
(bad)
sub
out
call
mov
leave
mov
cld
and
mov
pop
test
sub
dec
test
loope
push
pusha
test
xor
repnz
js
add
into
cli
sbb
cmp
sub
push
pop
pop
sahf
test
scas
test
and
mov
repnz
fsub
mov
inc
dec
pop
aam
jo
xor
dec
push
push
mov
xor
inc
xchg
sub
push
and
bound
popf
pop
scas
sahf
cmc
inc
outs
or
int
sub
xchg
pop
out
mov
std
and
call
aaa
aam
dec
cli
imul
hlt
inc
inc
stc
fnstsw
adc
gs
sbb
pop
xlat
push
jo
mov
scas
inc
ins
or
repz
(bad)
out
shl
pusha
mov
dec
adc
pop
xchg
inc
sbb
jo
xchg
repnz
ficomp
xchg
cwde
(bad)
loopne
pop
pushf
cmp
es
push
(bad)
aam
mov
pop
mov
jnp
aad
fstp
push
fdiv
dec
lods
shl
adc
repnz
jns
mov
enter
fist
cmp
hlt
rcr
mov
jmp
in
hlt
jb
dec
mov
jecxz
repz
scas
inc
fnsave
adc
shl
das
fmul
mov
out
or
push
int3
sbb
popf
rol
ins
add
sub
jnp
lods
jl
push
inc
sbb
mov
in
push
repz
icebp
jl
pop
push
sar
dec
pop
popa
dec
and
mov
push
sub
cld
(bad)
mov
mov
xchg
ret
shl
movs
add
mov
dec
retf
out
mov
out
aas
sbb
sbb
les
ficom
cmp
int3
jle
cmp
icebp
xchg
sbb
sbb
movs
jo
cmp
daa
sbb
cmps
pop
test
in
push
xchg
xchg
inc
adc
push
xor
add
loopne
stos
mov
cmp
fsub
repz
fistp
leave
ror
or
cmp
out
fldenv
adc
sbb
xchg
jle
arpl
ins
lock
cmp
jmp
int
mov
sti
lea
jge
and
(bad)
cmc
push
(bad)
aam
in
int
push
push
ins
not
xchg
adc
inc
jb
into
mov
fistp
add
shl
je
pop
jg
add
int
ja
loope
jmp
xor
push
xchg
adc
out
in
mov
repnz
sub
xor
bound
lds
inc
xchg
adc
push
xor
pop
nop
jo
mov
add
in
es
mov
les
out
mov
in
bound
mov
adc
xor
jge
cmp
inc
xor
pop
jbe
pop
in
push
lahf
mov
int3
mov
add
sar
xor
inc
data16
sahf
shl
add
das
mov
clc
mov
movs
mov
(bad)
mov
or
xor
ins
mov
ret
push
loope
gs
jmp
movs
xor
or
adc
mov
ja
xor
sub
pop
icebp
shl
mov
clc
scas
jge
loope
popf
sbb
or
mov
xchg
sbb
mov
sbb
fs
movups
cmp
stc
cmp
or
mov
daa
xchg
mov
pushf
movs
popf
pop
and
fild
jmp
xchg
inc
push
inc
out
(bad)
sbb
sbb
cmc
sub
sub
sbb
push
mov
add
aaa
daa
jo
dec
push
mov
int
xchg
push
data16
sub
movs
lock
es
jle
xor
dec
jne
rcr
and
mov
adc
jmp
pop
call
dec
fsub
adc
ins
or
test
jo
cmc
push
push
pop
stos
jge
add
xor
stos
dec
mov
rcr
test
dec
mov
xchg
mov
popa
sbb
outs
enter
pop
add
rol
cmp
xchg
xchg
jp
push
cwde
dec
lds
pop
repnz
out
adc
test
jp
xor
dec
push
pop
jg
xchg
ins
popf
xor
jge
sub
mov
call
pop
add
jl
outs
retf
pop
or
aas
loop
aas
sbb
mov
je
dec
leave
mov
sbb
mov
mov
sbb
ret
sbb
in
lock
sbb
jne
pushf
add
sbb
rcr
sub
sbb
pop
jmp
sub
mov
xor
outs
pop
fs
jb
out
mov
xchg
sbb
sub
lods
icebp
mov
(bad)
fadd
cmp
sub
adc
jns
or
push
or
xchg
cmp
sbb
mov
sub
ret
pop
add
xlat
and
shr
inc
xchg
test
bnd
xchg
and
das
ja
sub
test
mov
in
icebp
sbb
dec
or
sar
dec
add
and
int
arpl
sbb
or
inc
cmps
dec
adc
nop
xchg
enter
loop
mov
jae
rol
adc
ret
or
mov
xor
mov
mov
rol
and
dec
stos
adc
pop
cmps
adc
mov
jne
mov
jle
push
dec
icebp
sbb
and
ins
and
in
(bad)
cmps
jb
pop
xchg
dec
cld
jo
push
jo
(bad)
fistp
add
pusha
lock
lahf
xchg
fisub
inc
fidivr
pop
inc
xchg
inc
jbe
xor
pop
stos
sub
hlt
lods
ror
(bad)
movs
add
imul
inc
into
std
jae
fisttp
dec
mov
mov
adc
mov
push
push
loope
ret
(bad)
sub
and
jns
adc
cdq
inc
sub
sbb
mov
mov
movs
and
sbb
pop
retf
push
test
out
imul
mov
and
dec
adc
jl
mov
adc
scas
dec
ss
mov
sub
push
pop
test
sbb
fidivr
popa
mov
dec
ret
mov
out
mov
cmp
leave
les
jge
adc
xchg
mov
and
xchg
icebp
mov
in
pop
xor
sti
add
dec
stos
add
ret
fnsave
mov
stos
int3
xor
xchg
add
add
mov
in
fadd
cmp
call
loopne
movzx
xor
inc
xchg
adc
stos
dec
sub
and
data16
cmps
push
mov
mov
(bad)
push
push
ret
cmps
fwait
call
xchg
mov
mov
rcl
xchg
xchg
jo
out
add
nop
and
xor
fld
cmp
mov
retf
jmp
cmp
mov
dec
enter
xchg
test
retf
cdq
add
pop
scas
rcr
push
hlt
xchg
push
xor
repnz
iret
imul
out
and
sbb
push
or
(bad)
dec
pop
test
vlddqu
inc
loope
(bad)
fs
sahf
dec
bound
cmp
(bad)
call
mov
test
bound
and
xor
xor
es
in
pusha
test
inc
xor
xor
outs
mov
in
jmp
xor
xor
or
sub
xchg
and
jecxz
cmp
mov
mov
cmp
enter
rol
fild
out
mov
out
mov
(bad)
pop
cmc
xchg
nop
mov
push
loop
sahf
(bad)
pop
adc
gs
pop
xor
push
push
enter
sub
cld
jmp
ss
int3
fwait
sti
mov
movs
xchg
adc
add
xor
jecxz
and
sti
inc
dec
retf
add
xchg
into
xor
jae
aam
push
pop
jg
inc
or
ins
or
lea
xor
je
mov
cli
out
mov
in
push
jg
loope
dec
pushf
sbb
cmp
push
and
fld
imul
adc
jmp
(bad)
or
(bad)
jno
cmp
mov
cmps
push
hlt
sub
sbb
or
inc
enter
push
(bad)
xlat
stc
jg
cmc
adc
lods
mov
leave
jns
add
clc
mov
and
data16
mov
jno
adc
jecxz
gs
or
fs
adc
inc
popf
int3
out
pop
cmc
pop
idiv
or
dec
lahf
mov
jg
call
fwait
lahf
jmp
sbb
out
movs
loop
push
pop
pop
inc
retf
repz
sub
xchg
xor
cld
mov
add
test
popa
daa
and
xchg
ins
or
(bad)
scas
ins
mov
outs
xor
xchg
(bad)
repz
pop
fadd
mov
mov
mov
bound
shl
mov
adc
xor
pop
hlt
(bad)
call
push
popa
std
leave
jge
jmp
ss
or
js
daa
mov
fwait
imul
into
loopne
add
lods
leave
push
mov
mov
mov
daa
add
inc
xchg
ja
jnp
cmp
mov
cmp
xchg
or
pop
loopne
mov
or
gs
pushf
inc
outs
hlt
out
mov
fstp
pop
push
sar
mov
sbb
push
xchg
in
pusha
or
repz
xlat
(bad)
pop
inc
or
mov
gs
push
mov
adc
icebp
aam
or
fcmovbe
imul
mov
mov
stos
stos
mov
mov
stos
xchg
push
inc
pop
lahf
hlt
rcr
and
sub
pop
ds
xchg
sub
aas
ds
fbstp
jns
mov
sbb
enter
cmp
mov
les
jno
mov
xchg
mov
push
scas
or
fs
or
movs
mov
jmp
xor
repnz
sahf
ror
mov
les
mov
jg
jae
sti
push
ror
popf
std
mov
je
clc
cmp
dec
xor
push
jo
push
mov
ds
retf
sbb
mov
fld
add
xchg
enter
test
push
and
enter
lds
cli
leave
test
cmp
in
rol
jp
xchg
and
xchg
(bad)
ret
sahf
push
pushf
mov
sub
in
les
pop
int3
in
add
pop
fist
push
sti
pushf
inc
jl
inc
sub
pop
cld
dec
jnp
stos
inc
sub
js
bnd
xchg
mov
out
dec
clc
adc
or
or
push
sahf
mov
mov
(bad)
nop
ins
scas
cmp
sub
fiadd
push
ss
rcr
pop
mov
and
test
fwait
cmp
pop
add
dec
and
cmp
sbb
(bad)
cli
xchg
fcom
pop
daa
jno
jnp
mov
ins
pop
arpl
addr16
cmp
adc
sub
iret
mov
repnz
sub
mov
je
jne
jge
dec
xchg
add
sbb
jg
fcmovu
rcl
push
or
xchg
repz
imul
mov
leave
(bad)
fadd
pop
cmp
sbb
cwde
push
xchg
and
inc
and
mov
out
jecxz
(bad)
shl
sbb
jb
movs
add
sbb
add
aaa
push
je
les
xor
dec
add
and
inc
adc
ins
or
dec
sub
daa
jne
nop
std
iret
outs
stc
imul
push
push
and
cmc
add
adc
jl
fwait
xchg
and
pop
sbb
jge
lods
or
push
daa
int3
les
mov
inc
dec
pop
sub
lea
sahf
push
ds
xor
push
loop
popf
pop
(bad)
xor
dec
push
lea
xor
push
ja
stos
fidivr
mov
jmp
sub
enter
sub
loop
mov
adc
in
xor
movs
mov
mov
lahf
inc
push
clc
ja
sbb
add
aas
add
outs
mov
js
inc
sbb
xchg
lods
xchg
fs
out
dec
sub
mov
or
add
mov
daa
xor
ins
inc
pop
(bad)
dec
sbb
test
out
mov
dec
shl
retf
dec
daa
fisttp
pop
cwde
xor
and
jecxz
fsubr
inc
sbb
xor
sbb
test
leave
mov
jmp
adc
aas
fmul
and
nop
lods
and
mov
push
jg
dec
out
in
in
xor
mov
outs
push
aam
clc
xchg
icebp
loopne
pop
xchg
dec
inc
adc
add
ins
fdivr
pop
lods
inc
dec
mov
pop
(bad)
inc
rol
jb
and
push
sub
sti
bsr
loopne
push
jae
dec
xchg
hlt
adc
fs
push
dec
cmp
ins
push
push
xchg
shr
jp
dec
add
sbb
jae
and
idiv
call
push
addr16
(bad)
lds
test
out
sub
jg
ret
jecxz
aad
int
xchg
test
or
sbb
fidiv
ret
mov
test
repz
dec
sbb
daa
sub
lock
mov
mov
int3
ds
xchg
push
lods
jge
cmps
call
ds
push
xchg
test
sub
sbb
pop
or
rcl
mov
dec
call
in
sar
inc
push
lock
and
aaa
add
jns
stos
mov
fs
cmp
dec
or
dec
xchg
adc
or
inc
adc
xor
jp
mov
add
adc
adc
pushf
xor
push
pop
sbb
jae
ret
sub
mov
dec
adc
out
push
push
pusha
add
xlat
(bad)
mov
aas
shl
sbb
fnstsw
ds
jg
and
push
mov
push
in
imul
push
add
or
sub
hlt
rcr
inc
mov
and
fdivr
sbb
mov
mov
repz
cwde
ss
add
daa
hlt
pop
aaa
and
(bad)
repnz
sub
xchg
jmp
out
dec
movs
sbb
inc
adc
dec
mov
cwde
div
mov
cmp
in
scas
int3
inc
mov
jbe
inc
retf
mov
ret
les
pop
xchg
into
fprem1
out
adc
sub
mov
and
push
inc
mov
inc
ss
push
jmp
outs
in
scas
and
dec
inc
ins
cmp
xor
xor
sahf
jecxz
mov
pushf
loop
mov
mov
mov
gs
sbb
mov
lahf
test
popa
sub
dec
push
add
fwait
cli
nop
into
(bad)
cmp
fdiv
push
pop
outs
mov
ja
imul
jecxz
arpl
mov
ins
das
xchg
stos
scas
jmp
cmp
cmp
test
sub
dec
xchg
mov
mov
push
or
dec
or
hlt
or
push
cli
pop
pushf
in
cmp
arpl
dec
mov
or
dec
cvtps2pd
xchg
ins
ret
repnz
mov
jecxz
add
add
cmp
loope
fadd
and
add
mov
inc
lahf
loope
pusha
jmp
adc
das
mov
dec
mov
mov
repz
inc
sub
fisubr
jns
fidivr
cli
cld
sub
sbb
jbe
xchg
sbb
sbb
rcl
leave
cmps
shl
mov
pusha
and
and
popf
cmps
ds
out
out
or
(bad)
out
lock
sub
loop
push
mov
(bad)
in
mov
call
imul
sub
aam
fisub
or
sbb
leave
pop
fndisi(8087
out
push
aam
stos
lods
ins
fadd
cmp
mov
fcmovne
sbb
shr
jecxz
cli
sar
push
dec
cld
fisubr
jecxz
mov
mov
inc
and
inc
repnz
fcmovne
add
(bad)
and
int
bound
out
xchg
jl
iret
(bad)
lock
out
mov
inc
mov
add
pop
dec
in
sub
adc
sbb
jl
test
jb
add
sbb
loope
lea
mov
push
loop
inc
mov
add
out
mov
loope
daa
cmps
or
adc
inc
pop
sub
adc
stos
imul
jge
aam
mov
add
add
mov
xchg
call
cli
push
mov
in
call
jno
in
mov
adc
pusha
push
out
sahf
test
enter
inc
loopne
test
enter
imul
mov
or
xchg
cld
loop
add
pop
cmp
cs
retf
pop
push
aad
dec
adc
inc
inc
lds
cli
xor
push
pop
dec
in
rol
pop
pop
pushf
cmp
mov
mov
pop
xchg
mov
sar
push
inc
mov
cs
push
idiv
adc
jnp
push
fs
jnp
jns
push
inc
jmp
lahf
in
pop
in
add
adc
daa
(bad)
ss
(bad)
int
add
repz
inc
idiv
inc
(bad)
cmp
js
xor
mov
sbb
mov
mov
xor
data16
and
push
test
mov
mov
cmps
ins
cmp
cmp
movs
repnz
nop
aas
(bad)
add
mov
daa
outs
arpl
ja
sbb
retf
fimul
ins
leave
out
xor
mov
jmp
adc
fsubr
in
jne
mul
rcl
push
mov
xor
push
jo
mov
inc
xlat
(bad)
gs
imul
pop
pop
add
jecxz
retf
int
xbegin
dec
jle
dec
das
dec
mov
mov
fs
mov
push
fs
das
push
pop
arpl
jne
push
int
jl
xchg
xlat
push
leave
adc
(bad)
dec
dec
out
adc
mov
aaa
fld
into
loop
(bad)
mov
and
in
xchg
in
ret
daa
fimul
inc
stos
jle
das
push
mov
mov
cld
mov
pop
ret
sub
imul
push
cmp
add
xor
js
mov
inc
outs
mov
shl
pop
int
xlat
mov
mov
mov
inc
pop
jns
and
jae
add
add
das
mov
js
into
add
cmp
dec
mov
cdq
mov
scas
out
fcomp
dec
sub
jnp
push
ss
push
jg
test
xor
in
and
and
das
call
xchg
(bad)
inc
and
pusha
or
cmp
and
mov
arpl
out
mov
sbb
ficom
push
mov
stos
cmp
les
jg
rcr
mov
dec
jne
js
inc
sub
aad
pusha
retf
push
repz
test
addr16
pop
inc
iret
and
push
(bad)
imul
pop
or
test
lods
stos
aad
test
enter
leave
add
xor
xchg
into
mov
or
icebp
stos
adc
out
into
gs
jecxz
jmp
add
(bad)
clc
mov
data16
ror
push
jmp
inc
loopne
mov
adc
push
mov
sbb
push
dec
int3
cwde
lods
pop
les
xchg
gs
mov
adc
(bad)
hlt
and
and
iret
or
fcmovnbe
pop
jge
jo
cmp
dec
mov
jge
adc
mov
dec
push
shl
and
outs
call
outs
test
aad
fnstsw
mov
push
mov
je
imul
sbb
mov
and
fistp
(bad)
dec
and
lea
leave
jp
jmp
pop
mov
ins
sub
mov
xchg
dec
loop
aam
cmp
pop
ins
mov
pop
fisttp
mov
pop
out
sub
movs
mov
popf
sub
add
pop
cmp
xor
idiv
les
jae
xchg
mov
neg
fwait
adc
lea
mov
jmp
repz
ror
or
inc
add
mov
dec
and
adc
xchg
pop
mov
pop
repz
loop
sahf
push
xchg
mov
dec
jo
test
hlt
(bad)
mov
or
jmp
xor
and
add
dec
imul
mov
cmc
pop
loope
cmps
cli
xor
and
cmp
in
cs
mov
push
test
mov
xor
adc
dec
in
test
adc
aam
test
iret
xchg
and
sahf
lahf
pop
div
jmp
cmp
lods
xchg
popa
dec
and
mov
aas
xor
dec
test
rcr
dec
dec
mov
ret
mov
test
adc
(bad)
js
ror
adc
out
jmp
retf
in
lods
retf
sub
add
fldcw
retf
inc
mov
and
xchg
mov
jge
test
xor
outs
call
inc
mov
int3
mov
shr
xchg
pop
out
in
xor
outs
leave
xchg
sub
pop
push
fiadd
sub
rcr
inc
xchg
push
add
adc
iret
ror
dec
fistp
mov
fcomp
repz
pop
dec
ror
enter
mov
cwde
jmp
sub
gs
and
mov
adc
mov
cmp
sbb
mov
lahf
test
sti
in
stc
cmp
sbb
cs
cmp
push
sahf
or
sbb
sub
div
stos
pop
mov
in
in
mov
movs
mov
lds
cmp
test
lds
stos
cmc
fstp
cmps
inc
add
shl
test
mov
loop
adc
sti
jp
scas
jl
pop
mov
ds
push
mov
inc
sbb
dec
out
pop
xor
mov
dec
fsubr
mov
mov
or
cli
adc
mov
sub
sbb
call
stc
inc
div
lods
xchg
in
mov
jge
xor
(bad)
cmp
xchg
or
or
xor
ror
nop
loop
jmp
imul
mov
pop
retf
or
sub
das
js
loopne
sbb
push
enter
sbb
iret
fistp
rcl
fimul
rcr
test
xor
cwde
fld
test
mov
lock
out
dec
cmp
cmp
pop
shr
or
sub
sbb
xor
jmp
push
hlt
cli
xor
scas
cmp
lea
cmp
xchg
mov
sbb
lea
cmp
xor
es
cmp
adc
ins
jl
dec
clc
mov
jne
pop
aaa
push
lea
cmp
jb
sti
ds
cli
icebp
cmp
daa
or
xchg
sbb
mov
xor
or
adc
inc
mov
movs
xchg
mov
xor
fistp
ror
mov
(bad)
fst
xor
in
xchg
cwde
mov
fs
mov
jle
in
nop
mov
cdq
(bad)
mov
push
add
hlt
sbb
push
mov
inc
mov
addr16
adc
cld
not
cwde
push
into
jbe
cmp
inc
jmp
dec
rol
call
push
mov
icebp
cmps
cmp
sbb
sub
inc
(bad)
mov
add
retf
mul
aas
pcmpeqw
sahf
(bad)
shl
dec
jnp
push
xchg
into
outs
es
xchg
dec
lea
or
cmp
fwait
outs
shl
outs
(bad)
loopne
cmp
rcl
call
stos
cmp
xlat
icebp
or
inc
jo
and
cmp
fdivr
iret
and
ins
les
(bad)
ror
mov
mov
push
sbb
mov
(bad)
stos
sub
jp
loope
(bad)
ror
in
cdq
aad
or
into
xor
stos
jb
enter
dec
adc
scas
mov
xchg
shl
test
adc
push
and
iret
fwait
or
retf
cld
mov
ds
cld
out
test
mov
fiadd
xchg
sub
out
xor
fs
jg
push
loope
dec
aad
ds
inc
retf
int3
gs
xchg
jno
push
dec
dec
mov
ins
fsubr
loope
xchg
and
xchg
sub
adc
movq
jge
mov
pop
sahf
lods
mov
out
loop
test
add
fistp
outs
call
or
or
sub
cmp
cmp
cmc
outs
xchg
in
loop
mov
mov
dec
je
scas
push
xchg
pop
call
pushf
outs
add
icebp
pusha
ret
push
aam
mov
fcmovnb
pop
pop
ja
pop
xchg
aas
(bad)
mov
cmp
add
push
push
imul
stc
dec
cs
pusha
fadd
idiv
push
push
cmp
rol
xchg
xor
ins
outs
cmp
movs
lahf
mov
lods
sbb
aas
dec
shl
inc
dec
jl
scas
hlt
clc
mov
bnd
popa
sub
mov
dec
or
nop
gs
repz
xchg
ret
mov
cs
add
jle
and
ds
je
lds
aas
sbb
(bad)
rol
sub
cvtps2pi
call
sar
(bad)
sbb
jl
push
lahf
adc
ins
sbb
cmc
jge
xor
rcl
scas
daa
push
test
jnp
or
fstp
lahf
xor
mov
iret
jg
cmp
pop
lods
pop
jne
ret
(bad)
das
pop
test
jle
call
jge
call
shl
fcmovbe
mov
cli
outs
sbb
loope
mov
push
ins
pop
ins
shr
(bad)
push
stos
xchg
and
nop
pop
push
push
pop
popa
push
pop
pop
inc
je
daa
mov
enter
inc
adc
cmc
sub
inc
mov
sub
or
in
push
jnp
aam
test
push
shl
add
test
mov
push
xor
inc
inc
add
popa
and
pop
and
jnp
jo
xor
stos
push
cmc
fwait
and
xor
into
int
mov
addr16
stc
test
push
push
mov
cdq
mov
jne
dec
xchg
xchg
mul
push
inc
cmp
jmp
mov
in
imul
xchg
inc
push
pushf
aad
mov
or
cdq
sbb
or
div
pushw
fimul
lds
daa
pop
and
test
clc
push
add
lds
sbb
inc
lds
fdiv
xor
xchg
mov
jg
(bad)
jb
inc
in
cdq
xchg
sbb
shr
xlat
inc
pushf
push
mov
test
xor
pop
pop
ins
inc
push
addr16
inc
xchg
fbstp
in
inc
push
inc
inc
xor
or
(bad)
imul
fwait
sar
pop
add
push
scas
test
jge
rol
mov
push
cmp
in
fist
mov
fwait
pop
sbb
loope
mov
aad
inc
test
dec
fisttp
push
cld
push
movs
mov
mov
(bad)
loop
push
lock
inc
and
jmp
inc
aam
call
pop
sub
ins
mov
(bad)
(bad)
dec
aas
add
sub
xchg
mov
dec
and
nop
ins
adc
adc
push
ss
aas
sbb
dec
push
scas
jns
or
push
(bad)
cmp
fild
jmp
mov
test
out
sbb
popf
push
test
jmp
pop
movs
or
mov
jl
cwde
add
xchg
(bad)
mov
dec
ds
adc
loopne
js
(bad)
mov
push
rcl
out
pop
test
adc
enter
inc
adc
mov
sahf
mov
rcl
(bad)
data16
push
out
pop
cwde
pop
lds
mov
push
mov
mov
rol
and
fist
fwait
xchg
gs
mov
popa
or
add
mov
imul
pop
cs
shl
jmp
xor
pusha
mov
lods
xchg
push
loop
cmp
xor
and
out
bound
pop
jl
(bad)
data16
add
xchg
push
ins
sub
xchg
or
pushf
push
jle
inc
into
mov
clc
aas
xor
std
dec
cmc
add
cmp
add
dec
arpl
call
push
call
call
lds
sub
inc
dec
mov
movs
jge
sti
bound
(bad)
sar
imul
ret
call
dec
xor
cmp
shl
test
push
pop
aad
dec
mov
iret
add
and
ret
repnz
dec
push
in
xor
shl
not
push
push
lds
popf
in
pusha
imul
mov
mov
sbb
push
adc
mov
(bad)
out
mov
mov
sub
cmp
inc
int
iret
mov
mov
fisttp
sub
cmp
cmc
jo
cmp
add
clc
test
cmps
ins
lahf
daa
sub
js
dec
(bad)
int3
or
pop
js
mov
fbld
call
sti
pop
mov
push
or
adc
xchg
sar
or
mov
dec
xchg
hlt
mov
cmc
cdq
inc
xchg
inc
std
sbb
sub
sub
popa
mov
cli
lds
xchg
and
xchg
xor
xchg
aas
pushf
cmp
mov
mov
push
or
xor
jae
je
pop
dec
leave
popa
ror
mov
and
loopne
(bad)
gs
popf
sahf
retf
dec
ja
ret
sbb
or
neg
in
cli
jge
mov
xor
pusha
jnp
arpl
mov
push
lock
jg
(bad)
imul
fld
mov
lods
(bad)
sub
data16
push
lods
aaa
movs
stos
je
mov
(bad)
xor
jecxz
add
fnstsw
or
sub
cmp
jp
cmp
pop
xchg
pop
cmc
popf
jbe
dec
or
push
or
mov
out
sbb
inc
in
clc
jg
inc
pop
inc
add
dec
sub
loop
loopne
test
push
sub
rol
push
ret
(bad)
(bad)
addr16
jl
mov
(bad)
pop
fdiv
arpl
inc
pop
shl
mov
add
inc
or
xchg
fnsave
sbb
xchg
scas
scas
rcl
or
popa
pusha
out
loop
pop
push
shl
add
arpl
imul
and
popf
movs
aaa
adc
ins
jge
ret
enter
outs
in
jb
dec
xor
cli
pop
fcom
hlt
xor
mov
das
test
mov
add
imul
lods
lahf
cmp
mov
mov
jle
fbld
push
movs
call
xchg
aaa
in
mov
xchg
push
mul
sbb
lock
je
test
mov
call
pop
adc
xlat
mov
test
jns
jno
mov
daa
mov
mov
dec
hlt
stc
cmp
xchg
push
mov
mov
in
jl
mov
mov
aad
stc
sbb
(bad)
inc
sub
and
cs
repnz
pushf
sbb
ficom
or
mov
je
loop
pop
xor
cmp
imul
lods
fwait
(bad)
out
loope
stos
cdq
jl
in
and
push
add
xor
(bad)
out
test
(bad)
or
jp
push
push
test
aas
xor
neg
inc
cli
inc
dec
or
ins
iret
mov
adc
fdivrp
fcmove
mov
mov
xchg
cdq
test
lods
cli
sbb
sub
cmp
pop
int
xchg
dec
rcl
pop
cmp
je
lods
cdq
jae
cmp
cmp
ja
out
sub
shr
hlt
inc
lea
mov
pop
dec
jmp
inc
(bad)
(bad)
clc
xchg
pop
xchg
popa
jecxz
sub
inc
mov
xchg
retf
ss
rcr
xchg
and
dec
push
and
test
sub
push
neg
or
cmps
xlat
dec
xchg
inc
ret
mov
mov
cmp
cmp
pop
xor
lods
popa
rcr
int
test
cmp
and
xchg
enter
in
int
jnp
sbb
(bad)
outs
pop
inc
xor
pop
cld
rol
jmp
push
fdiv
dec
retf
and
icebp
(bad)
movs
adc
out
or
sti
fdivr
repnz
xlat
pop
sub
cmp
(bad)
setle
out
repz
sub
cld
imul
lock
aaa
or
repz
fidivr
push
retf
fadd
mov
scas
mov
mov
add
stos
lds
or
push
fnstenv
or
cmps
fstp
nop
shl
sbb
loopne
xchg
rol
arpl
sub
sbb
jne
sysexit
dec
sub
fldenv
out
(bad)
mov
push
jmp
adc
cld
sub
(bad)
xchg
cmp
pop
mov
aad
jle
mov
jp
mov
int
mov
clc
nop
inc
push
sbb
pusha
arpl
ror
fld
jmp
ret
or
iret
push
fldenv
or
bound
mov
test
jb
sbb
lods
daa
les
xor
ins
sbb
clc
push
mov
mov
or
mov
mov
mov
cmp
xor
dec
retf
sub
ret
jp
les
push
pop
mul
call
inc
or
ror
out
push
das
add
mov
mov
pop
inc
or
sbb
ds
fmul
push
and
mov
out
aas
push
inc
fwait
sub
js
sbb
in
out
push
stos
push
xchg
repz
adc
or
cld
xchg
sub
jmp
jmp
fcomp
(bad)
sub
aam
mov
retf
push
daa
mov
xor
fidiv
outs
mov
push
mov
jb
cmp
or
fst
rcr
aam
test
jp
lahf
and
fadd
mov
movs
and
(bad)
pop
scas
dec
repz
mov
dec
push
inc
sub
mov
mov
dec
shl
dec
cmp
call
mov
mov
cmps
mov
push
cmp
cdq
ret
sub
sub
adc
arpl
les
dec
(bad)
lea
jg
jne
stc
push
mov
iret
and
xchg
test
fs
in
std
repnz
stc
add
or
es
adc
daa
cmps
ror
inc
test
movs
mov
(bad)
into
adc
inc
adc
xor
popa
lds
adc
dec
jne
mov
adc
ficomp
cmp
jo
cli
mov
xor
aas
xchg
pop
jbe
xchg
xchg
arpl
mov
jns
outs
sub
jmp
leave
and
cmp
cmp
add
pop
in
adc
out
adc
pusha
enter
fwait
xchg
push
pop
call
or
in
sub
dec
sub
mov
cmp
jecxz
nop
cmc
inc
and
mov
sar
shl
fdiv
push
sahf
dec
mov
inc
cli
dec
imul
inc
cmovne
pop
int
mov
rcr
add
jns
adc
cmp
adc
fwait
js
or
lahf
pop
push
xlat
fadd
inc
not
outs
in
outs
adc
ret
sbb
sub
stos
or
adc
inc
xor
mov
in
and
add
test
push
not
ret
xor
mov
and
cdq
xor
pushf
sbb
daa
mov
mov
fld
jno
sub
in
lahf
lock
add
aaa
inc
int3
arpl
and
and
dec
jecxz
pop
test
dec
mov
loope
dec
clc
movs
xor
ins
outs
sub
cli
push
stos
push
inc
nop
out
or
jge
imul
or
mov
stos
in
test
cmp
cmc
cdq
sahf
test
imul
jl
enter
ret
(bad)
fprem
int
test
or
rcr
pop
and
stc
test
add
into
cld
pusha
aaa
fs
xor
stos
mov
push
xchg
not
pop
or
pop
jb
push
dec
mov
icebp
xor
and
into
sbb
mov
sbb
lock
cmc
ficomp
test
xchg
outs
inc
ss
(bad)
aas
pop
stc
mov
xchg
mov
icebp
mov
lahf
mov
adc
fld
ret
aam
jb
jno
inc
jno
adc
mov
sbb
or
out
mov
sub
mov
iret
(bad)
daa
jns
mov
nop
(bad)
xor
cmp
loopne
gs
dec
cli
(bad)
jmp
push
sub
or
imul
xor
inc
xor
mov
add
jg
push
scas
jne
in
jmp
jmp
lahf
jg
clc
fs
xchg
mov
or
inc
xor
ret
or
test
fidiv
add
pop
outs
movs
dec
sti
pushf
outs
cmps
inc
pop
dec
fcomp
or
(bad)
mov
stos
cmps
push
add
movs
faddp
xor
cld
mov
test
lahf
jmp
xchg
repz
into
jnp
test
jl
or
nop
add
cmps
sahf
adc
push
mov
imul
jmp
or
mov
shl
jl
push
xchg
scas
fcomp
cdq
mov
mov
cmp
call
jno
and
jne
push
dec
(bad)
adc
fwait
pop
and
lods
jge
and
xchg
stos
sub
jle
inc
sbb
ret
push
dec
ins
sbb
cmp
or
das
addr16
xor
xchg
push
retf
std
push
push
xchg
imul
or
imul
movq
mov
or
add
dec
leave
xchg
dec
cld
sbb
mov
adc
jne
je
dec
not
inc
fadd
fs
cli
outs
jp
cwde
and
aas
jg
jl
int
(bad)
push
jb
in
xchg
clc
push
retf
jns
mov
pop
inc
jmp
xor
pop
cli
out
inc
out
fbld
jmp
xchg
jmp
sbb
pusha
cli
jb
pushf
jmp
sub
xchg
xor
or
lods
push
push
pop
mov
jecxz
jne
fs
stos
pop
sub
dec
scas
and
push
fmul
popf
lods
rol
js
push
fwait
adc
icebp
xchg
push
fsubr
je
or
into
sub
xlat
xchg
mov
sub
add
lea
sar
adc
jno
xor
cmp
jns
fcmovbe
cld
jmp
push
in
mov
or
gs
es
mov
ficomp
scas
cmp
add
add
mov
or
cli
cmps
cmp
lods
mov
and
leave
(bad)
lods
repz
and
test
mov
pop
sahf
push
add
dec
sub
mov
pop
enter
out
xchg
icebp
xor
sub
inc
adc
ins
and
movs
jmp
add
or
dec
or
adc
pop
push
shr
dec
retf
inc
and
mov
hlt
iret
mov
scas
sub
push
inc
cli
dec
push
xor
in
push
jnp
lods
leave
adc
sub
shl
dec
hlt
mov
pop
jnp
dec
hlt
ins
(bad)
jmp
(bad)
ror
push
(bad)
jmp
or
pop
das
(bad)
in
xchg
mov
jmp
aad
(bad)
xor
ret
cmp
mov
fwait
arpl
inc
mov
ret
jmp
jne
mov
or
popf
add
or
je
(bad)
push
cmps
push
lods
imul
push
scas
jbe
and
lods
scas
addr16
pop
mov
sub
pop
cmp
jge
push
sub
mov
add
jmp
call
pushf
push
fs
sbb
test
lods
jg
mov
ja
div
(bad)
das
jo
aad
and
xchg
mov
imul
sar
and
hlt
jecxz
aaa
out
cmp
push
shr
push
push
aad
dec
and
xchg
pushf
retf
out
ins
into
loop
push
push
jle
cld
(bad)
jle
outs
and
ds
xchg
push
jnp
mov
call
mov
hlt
mov
lock
mov
mov
stos
mov
loopne
cdq
cmps
into
(bad)
mov
(bad)
pop
dec
mov
mov
adc
ins
movs
adc
mov
ror
xchg
out
mov
and
leave
(bad)
fmul
mov
and
inc
mov
push
inc
js
sbb
fs
out
inc
sbb
add
xchg
mov
sub
lgs
(bad)
fstp
push
inc
xchg
not
adc
push
int
loope
cwde
ss
xor
pop
inc
fsubr
mov
xor
sub
jge
fistp
or
popf
or
and
xor
setl
scas
adc
test
push
mov
out
sbb
adc
adc
(bad)
push
je
xchg
adc
inc
inc
add
mov
ss
in
daa
jg
rcr
mov
xor
push
(bad)
xchg
ret
jns
ins
popf
pop
xor
adc
jl
in
pop
pushf
push
jge
test
sahf
mov
xor
dec
fcmovu
shr
popf
ins
xor
pop
sub
mov
test
jae
cdq
mov
jno
xchg
sub
adc
jecxz
fnsave
inc
mov
add
sub
mov
jge
push
cmp
stos
mov
xchg
adc
mov
inc
and
mov
imul
xor
and
rcl
in
jb
lahf
pop
fistp
fwait
push
jb
out
push
push
pop
rol
push
mov
xlat
cli
xchg
into
xor
or
jle
or
rcr
fnclex
aad
mov
cmp
mov
jne
rol
mov
push
or
icebp
pop
xor
lods
scas
sbb
aam
jnp
fnstenv
sbb
fiadd
sbb
push
xchg
(bad)
std
inc
inc
sbb
cmp
(bad)
mov
cmp
(bad)
jmp
sahf
adc
imul
pop
cmp
mov
sub
xor
ds
sti
js
jle
(bad)
lods
fisub
sti
inc
adc
data16
and
xchg
or
cmp
test
pusha
push
jg
push
shr
dec
mov
dec
(bad)
retf
mul
sbb
push
push
inc
xor
sti
xchg
(bad)
dec
jns
fwait
dec
push
dec
cs
mov
std
adc
xchg
clc
mov
sahf
or
cmp
adc
mov
push
cwde
out
adc
add
in
fild
popf
enter
(bad)
int3
mov
in
push
mov
std
cmc
lock
push
jmp
pop
inc
inc
out
adc
scas
pushf
icebp
dec
cmp
fs
sbb
fs
pop
mov
push
adc
or
xchg
loopne
or
imul
inc
cmp
xor
fchs
xlat
push
dec
std
mov
test
mov
adc
mov
inc
scas
imul
nop
xchg
cmc
out
sbb
mov
shr
cld
mov
fisubr
adc
ret
add
out
and
mov
lds
(bad)
mov
stos
mov
cmc
jbe
xchg
and
push
mov
lahf
cmp
cs
lods
data16
icebp
jp
pop
add
xchg
xlat
push
mov
xchg
hlt
mov
add
popf
xchg
lods
cwde
(bad)
mov
cmc
dec
repz
movs
jp
gs
movs
sub
popf
mov
jnp
popa
dec
push
or
dec
lea
sbb
mov
ja
pusha
test
ret
iret
add
fadd
xor
lds
xchg
dec
cwde
dec
xchg
jle
or
sub
retf
ret
movs
pop
mov
cmp
sahf
pop
mov
test
bound
mov
stos
mov
cmp
jae
in
movs
outs
inc
(bad)
daa
div
int
in
mov
xor
cmps
mov
mov
lock
xchg
inc
mov
jmp
out
dec
and
imul
js
test
adc
push
pop
outs
sahf
sbb
add
scas
pop
dec
popa
ins
rcl
adc
cmp
or
rcr
ret
sbb
mov
fdiv
sbb
jmp
lds
xor
movs
shr
xor
mov
aam
stos
or
fistp
aam
push
hlt
sar
lds
cs
out
jg
loop
cli
inc
cmp
and
jne
jecxz
push
sbb
ja
inc
cmp
jmp
outs
test
push
(bad)
pop
test
int3
cwde
cmc
push
and
imul
call
imul
mov
dec
mov
push
inc
xchg
jne
das
gs
and
push
push
xchg
out
fwait
arpl
pop
dec
jle
mov
sub
mov
mov
dec
aam
pop
(bad)
out
bound
stos
dec
jmp
retf
stos
(bad)
push
inc
in
fstp
xor
pop
out
xchg
retf
xchg
xlat
leave
adc
pop
mov
cmp
(bad)
repnz
cmps
sbb
aam
mov
sbb
clc
call
repz
sub
scas
clc
int3
out
cmp
sub
mov
jp
inc
popf
xor
dec
ror
pop
sub
push
dec
lods
daa
gs
shl
fisttp
cmp
jo
fdivr
or
dec
je
sbb
(bad)
and
pushf
movs
jb
mov
cmp
push
inc
sub
(bad)
movs
ss
xchg
dec
push
pop
mov
shr
jbe
pop
add
(bad)
fisttp
out
push
xor
nop
xlat
xchg
fwait
push
mov
xchg
mov
pop
lods
loop
mov
push
nop
sub
jmp
mov
lock
xor
adc
lods
jbe
add
pop
(bad)
fidiv
push
mov
and
inc
add
es
out
out
jecxz
xchg
(bad)
repz
or
push
leave
sar
repnz
xor
movs
dec
or
fs
out
mov
xor
sti
pavgb
mov
push
retf
das
rol
les
imul
sub
sub
sbb
ret
neg
jbe
inc
jb
mov
clc
arpl
retf
sbb
mov
jne
push
adc
xor
test
xchg
ret
fcos
inc
mov
call
loope
fisubr
popa
test
aam
mov
jne
fcom
imul
mov
fstp
retf
(bad)
lds
add
mov
arpl
mov
push
popf
adc
jg
jle
repz
push
xor
inc
(bad)
push
adc
pop
out
int
dec
mov
cld
mov
xchg
popf
mov
push
xchg
imul
jns
jno
les
jecxz
pop
int3
push
push
or
jno
sbb
addr16
lahf
add
xor
mov
sub
enter
das
inc
aad
aam
cmp
mov
out
rcl
pusha
jnp
rcpps
lds
test
dec
xchg
call
add
imul
pushf
jecxz
mov
test
gs
out
ds
test
mov
xor
mov
xor
jmp
out
sahf
outs
mov
dec
(bad)
repnz
stc
sbb
push
sahf
ins
jmp
loopne
js
mov
clc
pop
ins
imul
fld
adc
mov
(bad)
lods
sti
popf
enter
push
cmp
jle
pushf
aam
pop
ror
(bad)
dec
mov
les
into
ret
data16
push
xchg
dec
sub
xor
mov
xchg
sbb
inc
adc
shr
mov
gs
xchg
pop
sub
js
leave
pop
inc
cmps
jle
mov
or
pop
pop
cld
cs
xchg
pop
cwde
add
hlt
pushf
fs
push
lds
test
test
in
repz
cmp
xor
mov
and
mov
out
arpl
repz
inc
pop
mov
xchg
jne
test
cmp
jmp
aam
adc
pop
push
clc
leave
(bad)
inc
lahf
sbb
jns
in
push
data16
sti
push
loope
push
xchg
bound
dec
and
ret
into
ins
aaa
xchg
jecxz
js
push
sub
or
fwait
add
xor
les
loop
aas
sbb
aam
jp
jb
out
or
cmp
cmp
aas
iret
sbb
inc
adc
push
int3
clc
xchg
frstor
cmps
leave
ror
stos
in
jg
pop
and
mov
fiadd
dec
or
push
add
add
out
add
stos
aaa
cli
pop
or
movs
enter
cld
iret
inc
(bad)
sbb
mov
shl
nop
sti
or
adc
jmp
add
inc
ret
sub
mov
test
ror
and
fst
add
sub
pop
add
cmp
xor
xor
xlat
movs
call
and
scas
push
rcl
xor
outs
push
and
xchg
add
cli
idiv
popf
lods
add
jae
inc
rol
dec
cmc
inc
sub
data16
test
lahf
stos
jle
jo
pop
inc
and
leave
loope
cmp
push
dec
pop
and
sbb
inc
add
cmp
mov
imul
or
ins
call
pop
mov
xor
in
sbb
xchg
or
(bad)
ret
(bad)
sbb
mov
in
adc
jnp
cmp
(bad)
sbb
dec
cmp
gs
ds
push
pushf
sbb
cmp
fld
mov
mov
jo
push
std
pop
fmul
or
outs
scas
cmps
iret
dec
imul
adc
push
push
pop
jle
mov
push
aas
jbe
fidivr
out
adc
add
in
pushf
inc
fistp
ja
das
xor
adc
cmp
imul
cmp
dec
(bad)
pop
jecxz
cmp
sbb
sub
pop
push
cld
pop
cmps
setns
outs
mov
(bad)
lock
add
inc
inc
mov
xchg
jge
xor
data16
mov
dec
add
dec
test
lock
outs
mov
clc
jae
into
pop
scas
jmp
lods
mov
or
xchg
add
icebp
or
test
lds
fisttp
add
je
xor
je
push
sar
pop
and
ror
mov
jae
lock
push
jmp
test
add
add
movs
popf
out
adc
popa
rcr
push
jo
mov
mov
jge
push
nop
test
cwde
pop
cli
aam
std
adc
jge
in
jnp
mov
(bad)
mov
add
cs
push
and
mov
into
pop
mov
cmp
(bad)
icebp
push
xchg
sahf
sbb
and
or
pop
add
add
mov
sub
int
push
push
jo
cs
xor
in
shl
movs
cs
fs
or
cmp
push
loop
mov
aaa
dec
in
movs
jno
add
cmp
push
fiadd
lods
jae
dec
ja
(bad)
sub
mov
push
sub
xor
xor
ins
out
daa
xchg
retf
adc
nop
dec
mov
movs
movs
cli
repz
das
and
popa
inc
rcl
mov
xor
lods
jg
popf
js
rol
inc
scas
cmp
int3
repnz
sbb
jne
mov
retf
mov
pushf
out
loop
mov
xchg
leave
fcmovnbe
mov
(bad)
fnsave
fisub
push
xor
ror
adc
repz
mov
fisubr
pushf
sbb
mov
pusha
mov
mov
dec
xchg
retf
push
sbb
pop
les
sub
jl
jo
loop
add
repz
aas
pop
mov
pop
iret
popa
in
sbb
pop
retf
repz
fneni(8087
pushf
adc
cmp
in
ret
sbb
loopne
shl
aad
scas
mov
cdq
icebp
adc
sub
pop
cmp
mov
rcr
fdiv
push
adc
pop
daa
fsub
jne
pop
lods
pop
mov
les
leave
ds
shl
fistp
hlt
les
pushf
repnz
push
dec
mov
clc
cmp
mov
outs
repz
movs
pop
pop
xor
mul
jg
jae
lods
(bad)
push
mov
pop
pop
sbb
or
sub
cmc
add
daa
sub
jbe
or
mov
leave
and
add
push
ins
cli
dec
dec
cwde
in
loop
fild
dec
(bad)
(bad)
adc
popa
test
mov
fild
inc
ins
sti
inc
mov
mov
adc
(bad)
stos
imul
sub
mov
add
xor
xchg
cmp
push
sti
inc
shr
add
fucomi
push
jb
add
cdq
and
jg
fwait
mov
loop
out
popf
push
add
xchg
adc
inc
mov
or
mov
mov
test
loopne
xor
not
icebp
retf
rep
mov
movs
and
and
inc
push
outs
fwait
mov
movs
jg
fdiv
loope
cli
shr
out
test
and
xor
mov
call
mov
xchg
ret
and
gs
not
(bad)
scas
mov
icebp
dec
lods
out
pop
ja
retf
into
out
imul
push
and
or
cwde
out
imul
imul
adc
mov
push
cli
mov
scas
sahf
jp
std
icebp
inc
push
js
sub
dec
pop
out
pop
add
loop
or
mov
stos
push
pextrw
mov
sar
retf
outs
call
mov
shl
hlt
outs
shl
popa
fadd
js
in
fdiv
inc
push
mov
cmps
stc
mov
adc
inc
cmp
dec
mov
jnp
mov
push
or
dec
addr16
or
into
push
sti
pop
push
(bad)
das
adc
push
and
popa
ficomp
xchg
mov
pusha
xchg
(bad)
jmp
enter
ret
les
and
fldln2
jns
cdq
adc
xor
and
movs
std
loopne
aaa
js
mov
sahf
ss
and
fisub
sbb
je
push
pop
cdq
push
clc
push
mov
push
inc
int3
push
add
lods
add
or
mov
sbb
bound
jle
scas
repnz
add
test
add
push
xor
xchg
daa
lea
pop
xlat
inc
ja
and
inc
iret
jecxz
test
addr16
add
mov
fbstp
stos
xchg
mov
pop
inc
movs
lea
retf
std
or
outs
push
xor
sbb
into
test
fwait
ret
pop
jmp
fsub
(bad)
jmp
les
call
and
add
add
(bad)
js
imul
inc
pop
in
scas
xchg
mov
add
cmc
out
pushf
mov
inc
push
push
push
mov
shr
cld
das
retf
pop
test
outs
aad
jae
aad
inc
sub
inc
shr
add
xchg
sub
call
adc
fild
fcmovu
mov
aas
movs
push
or
not
gs
out
xlat
lock
sahf
or
adc
sub
cs
call
fsubr
push
add
sbb
ja
xor
fist
xor
popa
pop
mov
add
jae
cmp
pop
cmp
jae
cmc
xchg
nop
xchg
int3
mov
test
jp
ficomp
rcl
dec
sub
shl
retf
pusha
xchg
ja
imul
pop
int3
gs
sbb
jb
retf
jns
sub
retf
cmp
mov
jmp
mov
mov
aas
daa
mov
inc
add
cmp
test
repnz
mov
fidivr
cli
in
stos
ins
cmp
outs
loopne
ds
jno
mov
mov
aaa
jecxz
sub
jecxz
sbb
mov
mov
popa
leave
or
and
dec
scas
cwde
pop
scas
mov
jmp
mov
add
or
arpl
jmp
sub
push
add
and
pop
push
mov
inc
and
cs
ja
lock
loopne
xor
jnp
sub
cmp
rcr
jl
xor
mov
repnz
xchg
test
sub
jbe
call
and
fild
sbb
iret
jne
mov
mov
mov
jae
add
and
or
and
sub
adc
push
xor
(bad)
aam
dec
iret
bound
mov
mov
jne
enter
imul
mov
stc
push
pop
push
sub
cld
cdq
ja
jb
push
adc
xor
and
fwait
sub
jnp
in
jle
inc
adc
mov
xor
dec
cmp
mov
call
sub
jne
cmp
sti
cmp
dec
jge
push
inc
inc
int
test
xchg
and
mov
cli
dec
(bad)
mov
xor
xchg
das
popf
push
or
inc
(bad)
call
arpl
lods
pop
sub
js
loop
shr
in
xor
xor
mov
push
sub
cld
out
lock
bound
fdiv
in
pop
push
inc
dec
sbb
jge
psllw
in
cmp
call
mov
cmp
fs
jo
int3
cmp
js
cdq
mov
xchg
clc
jnp
jb
scas
or
or
fs
cs
retf
xor
mov
pusha
aaa
jecxz
(bad)
std
mov
imul
shl
push
jle
aas
mov
stos
mov
adc
push
fnstcw
mov
retf
sub
mov
jno
sub
hlt
mul
cmp
icebp
movs
(bad)
out
fdivr
out
and
call
inc
fisub
imul
bound
sbb
outs
retf
cli
dec
cmp
mov
cmp
mov
retf
adc
dec
push
int
out
sbb
mov
cli
cli
mov
bound
sbb
sbb
jbe
pop
sbb
cli
pusha
mov
outs
pop
(bad)
in
enter
pop
out
les
mov
fwait
mov
mov
xchg
mov
mov
les
push
mov
xor
ror
aad
add
xchg
adc
lock
pusha
es
cs
out
iret
mov
xor
ins
cmps
jmp
retf
jg
leave
fistp
out
xchg
inc
stos
sub
fisub
jp
call
adc
sub
hlt
mov
cli
enter
jae
jno
mov
inc
mov
call
sub
sub
jle
in
or
mov
dec
sbb
push
into
dec
cmp
or
lds
add
sbb
pop
sbb
(bad)
lds
shl
or
mov
sbb
and
sub
jne
and
xchg
mov
(bad)
and
push
mov
leave
inc
jae
adc
or
rcl
fcmove
or
mov
inc
sbb
jnp
rcl
push
cli
mov
call
xor
or
test
or
xor
jae
int3
cmp
push
sbb
das
xor
inc
cmps
mov
xchg
hlt
pop
call
into
and
cmp
pop
jp
jl
jle
add
daa
xchg
ret
sti
jge
jbe
adc
dec
mov
cwde
pop
sahf
jmp
pop
sub
add
cwde
enter
xor
or
repz
pushf
jb
pop
std
fadd
dec
and
push
push
iret
jmp
mov
and
pop
mov
int3
mov
jg
pop
mov
jno
mov
dec
sbb
lahf
call
jmp
or
int
in
dec
ja
int
mov
loopne
xor
sbb
jge
push
hlt
sbb
loopne
mov
stc
out
repnz
adc
out
rcl
inc
mov
outs
fst
cdq
aam
adc
ret
or
test
(bad)
mov
outs
adc
bound
inc
sub
ds
pop
pop
adc
(bad)
retf
cs
sbb
hlt
imul
inc
imul
push
movs
jmp
jecxz
fwait
mov
or
nop
jecxz
dec
pop
dec
scas
mov
scas
dec
sbb
jno
sbb
xchg
or
pop
dec
test
inc
mov
in
in
into
outs
pop
mov
sub
fwait
int
sub
repz
lahf
dec
ss
xchg
dec
cmc
fsub
mov
cmp
jecxz
pushf
and
dec
mov
and
push
push
dec
push
pop
sub
add
test
daa
in
sub
push
imul
inc
jge
xor
adc
xor
sub
push
fwait
in
popf
mov
fdiv
scas
xor
gs
ja
sbb
das
and
dec
jnp
adc
xchg
inc
jmp
jmp
inc
mov
dec
push
cmp
xor
and
ds
jmp
mov
jno
mov
mov
shr
inc
test
xchg
dec
lods
popf
sub
test
idiv
dec
cmp
inc
rcr
inc
adc
inc
inc
xchg
stos
xor
xchg
fidiv
mov
addr16
sub
push
jl
inc
cmp
jae
cmps
psubq
jl
or
xor
sar
(bad)
jmp
pusha
mov
(bad)
aaa
das
dec
jns
fdiv
cdq
sbb
xchg
mov
mov
sbb
xchg
popa
ins
mov
or
or
pop
mov
pusha
sub
jmp
or
mov
inc
fldenv
mov
inc
cmp
mov
mov
stc
mov
je
mov
jl
and
xchg
inc
test
jb
jae
clc
jns
into
jl
out
cli
inc
mov
inc
dec
cmp
popa
push
shl
or
lods
rcl
shl
idiv
sub
add
retf
sbb
fwait
push
shl
mov
jns
popf
jmp
jno
adc
(bad)
push
loope
add
out
inc
xor
ror
imul
mov
push
in
mov
inc
sub
popf
inc
cmp
out
mov
xchg
xchg
jno
sbb
jp
sub
leave
or
popf
sar
sub
mov
sub
lods
dec
mov
movs
pop
jle
call
fimul
lock
dec
sbb
call
add
push
in
sbb
sbb
push
mov
mov
mov
idiv
adc
or
ins
aaa
inc
xor
cwde
pusha
cmp
sbb
std
retf
scas
(bad)
ins
push
dec
hlt
adc
jecxz
cmp
dec
and
retf
add
mov
inc
test
xor
das
xor
pop
scas
icebp
xchg
shl
mov
shl
pop
dec
pusha
inc
mov
(bad)
adc
neg
mov
dec
jecxz
add
ret
aaa
outs
mov
xchg
test
fcmovu
mov
call
xor
aaa
and
sub
mov
aad
add
pop
(bad)
ret
xchg
sbb
push
mov
loope
push
or
cmp
js
dec
mov
dec
jno
xor
jle
mov
shr
ds
mov
fst
outs
adc
add
cmps
int3
sbb
or
or
aad
sti
or
mov
jmp
loopne
(bad)
sbb
dec
pop
push
inc
das
and
xor
scas
enter
movs
xor
mov
je
iret
pop
cmp
lahf
inc
cwde
pop
repnz
gs
pop
lods
aas
scas
mov
test
pop
inc
dec
fcmovnbe
mov
adc
lods
pop
xor
and
mov
jmp
lods
hlt
jmp
ret
sbb
in
cmps
fcom
(bad)
mov
mov
xor
int3
int
pushf
fs
sub
icebp
jbe
or
loop
stc
clc
sub
jg
adc
repz
push
rcl
inc
dec
(bad)
jg
or
add
cmp
xor
push
sub
xchg
seto
sbb
pop
sub
loope
call
pop
jnp
mov
out
add
lock
sbb
inc
pushf
inc
(bad)
shl
mov
(bad)
sbb
pop
out
shl
dec
mov
xchg
push
sbb
outs
ja
data16
mov
shl
xchg
clc
loopne
mov
push
inc
(bad)
lea
push
out
push
loopne
fdivp
dec
mov
adc
popa
pop
push
jmp
cmp
mov
push
or
jnp
sub
imul
outs
push
cmp
mov
ja
movs
test
push
sub
and
stos
mov
add
jge
nop
rcl
rcl
icebp
jo
xchg
sub
or
(bad)
test
jo
fiadd
inc
cwde
je
xchg
add
movs
popa
push
(bad)
adc
push
imul
daa
and
mov
adc
push
xchg
sub
push
out
out
pop
in
ja
jae
sbb
jecxz
add
nop
add
mov
inc
mov
add
jecxz
daa
jg
aad
mov
test
push
lods
dec
retf
fsubr
and
cmps
and
xchg
repnz
jne
cmp
push
push
push
jg
ins
inc
cmp
retf
mov
xor
sub
cmc
cmp
add
push
arpl
fiadd
int
(bad)
sbb
inc
fild
sub
out
cmc
xchg
dec
pop
push
jne
lock
push
push
push
shl
push
sahf
idiv
push
test
loope
into
aas
push
xchg
xchg
ret
xchg
mov
push
jno
outs
sahf
out
add
sub
pusha
jp
jmp
pusha
nop
clc
cmp
jle
xor
pop
dec
mov
jp
bound
popa
jbe
and
xchg
add
xchg
leave
int
mov
iret
xchg
and
aaa
ret
inc
(bad)
shl
lds
or
shr
cmp
inc
sub
pop
pop
out
popa
call
xchg
mov
adc
pusha
adc
stc
mov
test
mov
xchg
imul
cs
inc
ficom
xor
pop
(bad)
ror
std
out
aad
adc
dec
xor
pop
xor
test
inc
(bad)
aam
mov
call
pop
pop
and
mov
pusha
fwait
and
dec
push
cmps
mov
imul
add
cmp
mov
xchg
mov
hlt
push
xchg
das
mov
add
rcr
retf
lock
jecxz
mov
jns
mov
dec
jecxz
sar
cmps
in
es
adc
sub
push
inc
push
mov
cdq
or
aam
mov
adc
lods
cmp
jne
and
hlt
cmp
sti
outs
ja
cmp
cwde
out
pop
adc
icebp
jbe
or
sbb
xchg
sbb
adc
and
mov
add
sbb
shl
imul
jecxz
das
mov
sub
scas
out
ror
dec
and
stc
push
mov
add
into
aad
jecxz
std
into
retf
jecxz
add
push
cmp
sub
mov
add
out
pop
push
stos
fld
lahf
xchg
pop
ja
fsubr
mov
ror
in
ja
push
aad
jno
and
push
cmp
pop
push
or
imul
and
(bad)
mov
sbb
fcmovu
inc
push
outs
pop
dec
push
push
mov
mov
bound
inc
jb
jecxz
or
dec
xchg
ror
pop
or
pop
inc
inc
movs
xchg
ja
movs
add
cmp
or
(bad)
pop
xchg
mov
jns
in
lds
inc
iret
adc
in
cmp
mov
icebp
retf
in
pop
fwait
sub
sbb
nop
push
xchg
jns
jno
ror
repnz
xchg
into
pop
std
clc
adc
je
mov
arpl
jmp
inc
stos
cwde
stos
push
test
loope
sar
xchg
add
jge
in
arpl
lahf
sub
cwde
add
push
mov
xor
addps
sbb
aam
push
or
shl
xchg
dec
xor
in
mov
call
sub
jne
mov
lds
jp
xchg
jns
imul
add
call
cwde
push
mov
hlt
xor
xor
rcl
or
mov
out
jecxz
mov
lock
pop
fcomp
or
sbb
lods
xchg
cmc
sbb
(bad)
aad
mov
mov
push
inc
call
sub
and
inc
test
out
pop
cmps
test
iret
and
fwait
call
fistp
jg
push
mov
stos
sbb
mov
repnz
push
mov
or
add
pop
neg
mov
(bad)
cmp
xchg
gs
scas
or
mov
cmp
test
data16
add
icebp
jne
mov
jecxz
dec
pop
fucomp
xor
cmps
push
jns
xchg
aad
mov
lds
mov
in
int
into
mov
push
mov
ds
gs
call
fdivr
int
icebp
loop
pop
fisub
leave
xchg
xchg
xchg
cmp
pop
inc
(bad)
sub
inc
cmp
imul
inc
jecxz
pop
inc
test
jp
add
stos
push
push
mov
mov
adc
bound
repnz
xchg
cmp
sub
sbb
and
dec
frstor
jmp
mov
push
mov
jle
pop
push
jp
mov
pop
data16
lods
cmp
cs
inc
sub
mov
aad
fdivr
sbb
cmp
sti
or
(bad)
sahf
cmp
jae
dec
jmp
pop
(bad)
fcomp
loopne
cmp
ins
sbb
mov
sahf
push
movs
fsub
xorps
pop
xor
dec
xchg
sbb
inc
aad
shl
xchg
jle
jecxz
popa
pop
adc
mov
dec
std
(bad)
loope
xchg
cli
cmp
xor
clc
sbb
pushf
ins
mov
fild
mov
and
outs
mov
or
ins
xor
mov
dec
adc
inc
test
adc
scas
inc
push
xchg
xor
cmp
xor
sub
in
out
sub
(bad)
sbb
call
pusha
push
xchg
or
xor
cwde
xchg
imul
pop
push
sti
mov
mov
fwait
gs
popf
ins
inc
out
adc
outs
es
inc
(bad)
jle
mov
sbb
ds
ja
test
sub
sub
iret
sar
jbe
fldenv
jl
mov
enter
mov
sbb
bound
jnp
and
in
hlt
push
xchg
pop
mov
jbe
mov
fadd
mov
add
dec
aaa
add
popa
std
push
mov
mov
lods
add
jne
js
loope
push
jp
sub
rcl
mov
mov
add
or
cmp
(bad)
das
mov
xchg
cmp
mov
popa
push
gs
in
sbb
movs
ja
mov
call
rcr
(bad)
aaa
inc
mov
mov
xchg
cwde
out
clc
push
sbb
aam
pop
movs
adc
jnp
and
hlt
mov
xchg
xchg
sbb
pop
aaa
je
out
push
shl
enter
das
or
cs
nop
(bad)
aam
not
pop
or
ret
mov
pusha
mov
mov
or
pop
int3
pop
mov
lock
dec
adc
push
xchg
pop
mul
rcl
test
dec
cwde
xor
and
sbb
enter
in
jae
lea
push
xchg
fnsave
shl
or
cmps
mov
hlt
adc
adc
fdiv
imul
mov
mov
push
sub
or
xor
lods
das
push
dec
cdq
or
fld
adc
mov
or
push
push
mov
mov
xchg
mov
sbb
inc
mov
ds
mov
ja
push
sub
cmp
dec
ss
les
and
jg
jecxz
popa
or
xor
mov
int
cs
mov
sbb
stos
cmp
push
lds
nop
dec
aaa
mov
cdq
test
lahf
int3
leave
inc
jmp
jns
outs
mov
or
add
cld
dec
call
frstor
cmp
cwde
fld
imul
jmp
int3
mov
or
dec
mov
sub
fsub
mov
push
jb
sar
cmc
ins
pop
in
(bad)
and
jle
sbb
lods
aam
call
inc
cdq
out
inc
mov
ss
aam
lods
xchg
cmp
stos
out
lea
push
mov
cld
pop
mov
scas
mov
mov
add
test
mov
push
pop
stos
inc
mov
dec
jge
stos
mov
loop
test
cmps
mov
inc
jge
int3
mov
mov
and
and
aas
mov
lock
mov
push
jae
(bad)
(bad)
dec
sub
sub
push
mov
mov
jmp
ret
ss
mov
xlat
jmp
bound
inc
into
(bad)
pushf
icebp
nop
push
mov
nop
out
sti
sub
adc
adc
push
pop
out
fidivr
pop
daa
cmp
pushf
and
adc
pop
jle
jecxz
call
inc
jns
jae
inc
cmps
cmp
add
mov
in
fdivr
ficomp
movs
test
icebp
into
out
push
jecxz
lock
mov
test
(bad)
sbb
xor
in
xchg
sahf
out
cmc
scas
or
adc
mov
fcom
cli
nop
and
sbb
arpl
imul
(bad)
jno
addr16
popf
cmp
jne
xor
adc
sub
jmp
mov
ror
imul
movs
or
js
call
movs
call
cmp
push
ror
(bad)
adc
enter
mov
xchg
inc
test
leave
push
push
pop
data16
and
cmp
data16
sub
and
enter
shr
pop
ret
sub
stos
mov
popa
mov
stc
test
into
add
mov
scas
dec
mov
into
jb
pop
push
mov
mov
retf
mov
pusha
mov
retf
xchg
add
add
(bad)
lahf
repnz
jbe
dec
sub
mov
pop
mov
xlat
mov
add
inc
cmp
mov
mov
pop
ins
stos
adc
cmp
fld
retf
mov
jb
cmp
and
mov
clc
xchg
cmp
retf
inc
push
push
imul
aad
jae
out
pop
jne
push
jl
and
out
inc
les
and
or
in
or
loope
mov
fstp
in
dec
cmp
out
ja
mov
pop
inc
jge
test
cmp
nop
sbb
repnz
jnp
sbb
mov
xor
jae
or
pushf
push
icebp
pop
out
iret
or
aam
outs
push
stc
call
into
inc
pop
dec
jns
enter
cdq
add
inc
in
cdq
lock
in
bound
push
in
mov
push
scas
std
pushf
jp
xor
push
scas
test
aam
add
mov
popa
scas
fadd
inc
mov
adc
dec
pop
cmp
xor
xor
outs
leave
ficom
or
sub
cmp
in
xor
cmp
stos
cmps
sub
(bad)
inc
call
loopne
jae
jbe
or
movs
out
mov
ret
cmp
add
outs
jbe
test
ins
push
ret
mov
pushf
cli
out
and
jmp
out
jns
loopne
xchg
call
mov
and
cmp
je
mov
xor
out
push
scas
aad
aaa
bound
xor
cmp
jg
pop
add
les
cmp
push
aas
or
mov
jmp
mov
dec
call
aas
jne
cmp
addr16
cmp
fistp
outs
sbb
cmp
(bad)
call
call
fs
or
test
and
ret
sbb
jns
clc
xchg
inc
addr16
addr16
xor
nop
test
adc
xchg
cld
cdq
pusha
call
cmp
or
pop
push
hlt
sbb
cmps
hlt
call
mov
jp
fsub
bound
fadd
jae
mov
rcl
inc
jmp
rcr
(bad)
pop
cmp
stc
mov
jge
aaa
mov
call
lods
jo
sbb
clc
mov
mov
add
aad
inc
int
hlt
push
push
cmp
jge
inc
cs
xchg
out
call
pop
add
jns
push
ss
add
repnz
pop
mov
popa
subps
mov
sbb
fcomip
aaa
rol
sahf
jmp
pop
push
mov
pop
cwde
clc
mul
add
dec
mov
pop
sub
push
sbb
(bad)
les
pusha
lds
mov
jl
popf
push
pop
aad
arpl
push
repz
mov
xchg
push
pop
or
int
clc
js
add
adc
(bad)
in
cli
cmp
adc
icebp
inc
fdivr
outs
pop
and
push
leave
pop
sti
push
jno
jo
stos
jo
inc
jg
fild
aam
and
cmp
mov
xchg
sbb
jnp
mul
arpl
xchg
xor
test
cmp
mov
jae
imul
outs
pop
pop
cmc
imul
fs
push
test
or
push
inc
leave
xchg
ret
fsubr
test
das
sbb
cmp
inc
pop
ja
call
jb
jns
push
not
jmp
mov
xor
and
outs
sbb
mov
pop
aas
cmp
push
jmp
shl
retf
and
inc
aaa
inc
test
in
xor
xlat
call
cmc
pop
pop
jle
inc
cmp
ins
retf
cmp
dec
xchg
scas
inc
into
adc
sub
jle
out
cmp
push
inc
or
stos
sbb
xor
cmp
popa
mov
adc
cmp
movs
jb
(bad)
in
pop
popf
lods
jmp
cmp
mov
rol
mov
popa
call
mov
push
movs
mov
ret
or
add
in
imul
mov
push
loope
inc
cs
inc
fdiv
lea
mov
pop
xchg
mov
cli
lds
imul
or
imul
sahf
jl
xor
dec
inc
iret
and
adc
nop
into
lahf
mov
aaa
cmps
dec
std
pop
jmp
jp
cmc
push
(bad)
xchg
mov
cdq
xchg
mov
jp
or
jbe
adc
fadd
or
div
xchg
or
ins
or
or
outs
test
ins
adc
dec
dec
dec
pop
loop
cmp
std
pop
sbb
sbb
cmp
int3
mov
xchg
jl
cmp
sbb
jl
pop
push
push
push
xchg
jle
pop
sbb
gs
fwait
mov
daa
jmp
rol
mov
pop
scas
push
aaa
mov
xchg
loope
inc
movs
mov
jnp
xchg
repz
sbb
cwde
cdq
pop
cmps
jnp
aaa
pop
push
dec
xchg
xchg
mov
shl
pop
cmp
dec
dec
outs
outs
dec
inc
sti
movs
xchg
jb
loopne
fcomp
retf
dec
dec
int3
ins
ss
fst
xchg
dec
addr16
mov
ror
rcr
ins
popa
inc
and
mov
ins
and
sbb
ret
mov
test
fldcw
xchg
ret
or
test
cld
arpl
xchg
lea
leave
jo
cmp
cmp
retf
jmp
cmp
repz
jbe
jae
jle
xor
adc
rol
inc
add
pop
cmp
jb
sub
inc
sbb
movs
in
push
mov
xchg
dec
xor
in
push
int3
in
bound
dec
out
arpl
movs
test
scas
inc
fnsave
xor
sub
pop
out
xchg
pop
adc
push
movs
cdq
dec
cmps
sahf
ret
imul
dec
stos
xchg
mov
xbegin
xchg
xor
sbb
test
ss
cmp
push
or
push
cmc
inc
xchg
popf
aad
lods
dec
inc
scas
clc
cdq
mov
sub
pop
mov
retf
into
or
pop
and
(bad)
cmp
inc
out
pop
call
popa
std
mov
and
mul
idiv
inc
cmp
cld
scas
inc
lods
add
(bad)
adc
rcl
not
add
mov
add
mov
enter
dec
and
dec
mov
mov
xchg
pop
xor
push
les
xchg
jecxz
add
or
mov
adc
aaa
scas
cwde
or
mov
loopne
adc
addr16
in
call
push
test
mov
jmp
push
pop
test
adc
lea
add
or
test
dec
mov
jne
enter
push
rol
in
cmp
push
xor
or
cwde
es
pop
pop
das
or
mov
ret
xchg
lods
in
mov
adc
xor
pop
mov
aad
fnstsw
movs
inc
cmps
data16
(bad)
mov
sub
mov
push
mov
dec
pop
cmp
(bad)
out
push
add
mov
sbb
in
mov
mov
mov
push
retf
(bad)
jnp
and
dec
sqrtps
loope
mov
sub
cmp
vphaddbq
mov
test
push
vmptrst
pop
loope
icebp
mov
xlat
ss
stc
es
clc
cmc
aam
push
jae
sbb
repz
nop
lods
clc
push
imul
retf
inc
pop
inc
aad
mov
call
jne
adc
cmps
and
(bad)
stos
in
sbb
aad
(bad)
ds
mov
js
loope
in
and
fnstenv
sub
pushf
jmp
lock
inc
dec
jne
or
(bad)
dec
mov
out
mov
aad
cmp
psubq
std
loop
push
(bad)
jbe
mov
xor
fsub
mov
sbb
in
add
lahf
repz
xchg
daa
mov
inc
mov
pop
adc
xchg
inc
add
not
movs
fsub
dec
(bad)
cli
mov
(bad)
pop
aaa
mov
(bad)
dec
mov
adc
mov
aas
cmps
cmp
addr16
inc
push
cmps
push
in
sti
or
mov
push
jl
shr
cmp
imul
ret
jle
cmps
cwde
out
sbb
imul
nop
inc
dec
dec
add
call
sub
cmp
test
xor
sbb
mov
adc
xor
ret
jp
jae
push
or
pop
fnstsw
out
push
cli
leave
test
mov
cmp
pop
xor
cs
pusha
mov
mov
cwde
mov
retf
add
push
add
stos
sbb
scas
push
mov
cmp
pop
dec
sub
aad
lahf
cwde
es
add
es
jbe
daa
in
shl
js
mov
jne
inc
aam
mov
xor
or
retf
mov
dec
or
add
mov
inc
push
mov
push
(bad)
pop
ins
push
stos
test
stos
fldenv
into
mov
add
inc
cmovo
push
out
test
les
pop
in
cmp
ret
mov
movs
std
or
mov
mov
ins
mov
(bad)
mov
push
mov
inc
retf
sbb
ss
add
push
or
fs
adc
push
sbb
push
in
or
retf
pop
fs
fld
(bad)
lock
and
sbb
inc
push
jge
fdivp
ins
add
mov
push
pop
js
pop
push
imul
mov
cmp
pusha
scas
jns
loope
xchg
pop
mov
cmp
pop
das
push
fidiv
sub
push
adc
lods
in
lds
xchg
shr
lods
sub
cmc
std
lock
rcr
out
fisubr
aad
cwde
adc
cmps
cmps
mov
cdq
fdiv
popa
jmp
mov
repnz
mov
arpl
dec
das
std
and
stos
adc
out
push
push
xchg
movs
jns
repnz
cs
popa
in
cmp
ins
lahf
imul
pop
or
scas
(bad)
ret
add
iret
mov
iret
mov
loopne
mov
jns
sbb
sahf
out
jp
es
sub
aad
jg
test
inc
loop
adc
mov
pop
inc
mov
push
aas
or
out
stos
push
fmul
jne
fild
outs
jnp
test
je
stos
cmp
loop
mov
mov
mov
pop
pusha
stos
(bad)
cmp
fldenv
popf
imul
add
das
(bad)
test
into
and
cmp
daa
push
or
mov
(bad)
(bad)
int
inc
dec
(bad)
in
dec
pushf
inc
cmp
mov
push
pop
and
out
sub
xchg
or
sbb
xchg
popa
repz
scas
scas
jmp
les
xor
sub
fcompp
inc
stos
dec
jbe
hlt
mov
jae
inc
call
in
int3
mov
call
fisttp
push
test
add
rol
int
mov
aad
jl
fsub
sub
out
jmp
mov
mov
mov
pusha
pop
xor
(bad)
daa
sbb
pop
jmp
lods
out
mov
sbb
or
jnp
inc
mov
or
loope
jbe
jecxz
ja
mov
jo
jge
push
jns
and
js
lock
jb
mov
test
pop
jbe
cmps
dec
inc
mov
mov
or
leave
sbb
loope
xchg
cld
jne
in
loop
push
int
aas
fsubp
push
aaa
dec
sub
es
test
cs
clc
into
push
and
mov
mov
ja
test
ins
pop
fimul
clc
push
shl
inc
cld
ss
push
in
dec
ficomp
sbb
inc
(bad)
xchg
mov
push
ss
cld
cs
stc
jl
cmp
pop
jbe
bound
loopne
cmp
jns
pop
js
xor
loope
sub
xchg
xchg
ins
scas
sbb
fistp
xor
cmp
aad
(bad)
jge
cmps
jbe
leave
add
test
push
mov
in
xor
fwait
and
js
test
mov
stos
ja
cmp
mov
ret
pop
push
ins
pop
aas
cmp
retf
fcos
push
les
(bad)
cmp
push
jns
test
(bad)
mov
mov
push
scas
add
or
inc
add
arpl
je
add
mov
dec
(bad)
fcomp
adc
fisttp
stos
inc
scas
mov
ror
dec
mov
loope
je
movs
pop
sahf
mov
cld
inc
cmc
sub
ja
lods
jo
mov
pop
lahf
iret
pop
push
cmps
jo
xor
(bad)
test
outs
dec
int
iret
cmp
and
jns
mov
retf
retf
bound
add
imul
push
imul
popa
call
stos
les
add
call
mov
mov
gs
dec
imul
and
and
push
mov
movs
jmp
cwde
mov
inc
popa
int3
(bad)
mov
jno
inc
jp
adc
div
mov
jp
les
inc
jmp
add
iret
scas
push
mov
mov
iret
pop
int
mov
cdq
(bad)
sbb
push
jbe
retf
jbe
inc
pop
es
push
sbb
fimul
in
imul
cmp
push
test
jecxz
push
jge
lea
ror
jmp
lahf
lds
gs
neg
aad
or
lods
int3
jmp
cmp
and
mov
mov
dec
jge
jnp
cmp
sbb
mov
adc
les
popf
gs
xchg
(bad)
xor
nop
mov
call
and
ret
imul
sti
aaa
mov
movs
pushf
sar
add
push
and
movs
lds
cld
mov
add
inc
je
lea
push
scas
sahf
cmc
mov
and
adc
xchg
sub
xchg
daa
aaa
pop
jecxz
adc
mov
cwde
mov
or
push
adc
sbb
movs
test
movs
sub
rcr
jg
sub
mov
iret
sbb
stos
dec
lock
ret
mov
enter
push
sti
mov
sar
pop
or
test
adc
vfrczpd
imul
xlat
jb
(bad)
xchg
loope
jne
daa
(bad)
sub
push
mov
inc
icebp
lods
push
les
test
aam
dec
adc
push
mov
dec
push
inc
sub
je
jns
xlat
sti
cs
dec
imul
dec
add
xlat
jo
sbb
shl
nop
imul
or
xor
into
inc
sti
ret
sbb
sub
xor
stc
inc
xchg
int
and
mov
inc
nop
icebp
mov
fldcw
jns
daa
movs
push
inc
sahf
sub
push
icebp
arpl
inc
in
xchg
mov
out
in
sbb
(bad)
leave
in
pop
mov
in
fild
mov
arpl
mov
dec
(bad)
sahf
xchg
push
push
jg
(bad)
movs
icebp
jge
lods
ficomp
and
mov
push
ss
pop
push
imul
adc
adc
loope
jbe
fcom
(bad)
das
jge
out
mov
aas
and
(bad)
inc
clc
jno
bound
and
jle
outs
test
add
inc
hlt
ins
jnp
fucomp
aas
or
mov
mov
jg
push
sbb
lods
icebp
nop
mov
shl
inc
addr16
in
add
xchg
xor
sub
inc
mov
arpl
mov
js
mov
push
in
lahf
enter
sub
sbb
dec
std
inc
movs
inc
xor
fstp
fstp
inc
(bad)
mov
push
dec
test
push
pop
add
test
mov
cmp
shr
movs
in
mov
je
ret
(bad)
out
ret
outs
test
in
out
push
xchg
pushf
bound
js
shl
les
dec
std
pop
stos
pop
and
inc
dec
les
mov
setb
mov
aam
fxtract
mov
adc
out
mov
mov
imul
sbb
push
mov
inc
loop
ret
mov
push
pop
jne
jno
(bad)
mov
ret
and
xchg
and
imul
xor
aam
fidiv
fcom
icebp
(bad)
cs
push
jns
pop
repz
int
(bad)
jmp
mov
cmp
dec
push
push
pop
cmps
mov
sub
les
dec
cmp
idiv
bnd
xchg
sbb
in
lahf
push
adc
pop
aaa
stos
push
jo
std
outs
mov
neg
fisttp
pop
out
gs
sti
loopne
sub
pop
das
cmp
push
cmp
aaa
mov
or
pop
cmps
jl
movzx
mul
jge
call
jno
ins
adc
mov
cmp
push
mov
cmps
jecxz
int3
scas
sbb
push
dec
call
ror
test
test
pop
(bad)
push
cmp
or
push
stc
xchg
mov
cmp
fcomp
jae
nop
mov
loopne
sbb
cmp
mov
dec
push
call
pop
wrmsr
xor
(bad)
cmp
push
sub
out
push
cld
mov
cmp
mov
or
dec
pop
bound
(bad)
(bad)
fwait
mov
test
sti
imul
(bad)
mov
add
lock
cwde
push
cdq
dec
mov
int
fisttp
push
fst
pop
push
sbb
sti
sbb
leave
cmp
lods
sbb
jmp
imul
dec
repnz
mov
sub
cmps
cdq
(bad)
pop
xlat
cmp
sub
xchg
(bad)
xchg
cmp
shl
leave
pop
sub
cdq
inc
adc
adc
(bad)
jo
mov
cmp
pusha
loop
out
imul
arpl
outs
mov
and
push
jp
pop
stos
jo
dec
and
ffree
fucom
pop
jae
mov
repz
add
iret
push
xor
lods
imul
xchg
jp
mov
dec
mov
jno
into
into
push
xchg
push
mov
xchg
cmp
or
test
push
std
mov
push
pop
adc
inc
or
sub
or
pop
push
aam
aam
fmul
hlt
cmp
kxorw
in
clc
fsubr
popa
inc
fisttp
cli
enter
or
jne
jg
ins
mov
in
imul
rcl
or
pop
pop
clc
loope
(bad)
adc
and
adc
mov
outs
pop
jp
pop
and
aas
mov
sub
jp
mov
mov
mov
sub
or
push
mov
pop
imul
clc
mov
xor
push
dec
loopne
(bad)
retf
add
cmp
sub
jecxz
add
or
xchg
loop
repnz
(bad)
arpl
mov
or
add
dec
lods
out
push
nop
mov
push
add
imul
clc
mov
xchg
adc
lds
mov
stos
jno
sub
ret
fptan
ror
test
fwait
iret
dec
xchg
push
ins
out
mov
mov
push
mov
fisub
xchg
inc
mov
ins
pop
mov
and
popf
mov
cdq
cmc
jae
add
jmp
push
cmps
fild
jmp
xlat
mov
test
aad
add
and
iret
(bad)
cmc
pop
cmp
jge
outs
jae
jmp
add
mov
inc
push
dec
jo
xor
retf
push
push
adc
jl
jnp
and
outs
jp
sbb
outs
sbb
scas
xchg
cmps
sbb
mov
test
int
mov
das
pop
mov
pop
xor
mov
sti
xchg
call
xchg
dec
dec
pop
xor
fucomp
sti
retf
imul
cmp
daa
mov
(bad)
jl
(bad)
xor
pop
ret
scas
jae
sub
sbb
ss
int3
mov
lds
and
add
or
xacquire
in
rol
outs
adc
adc
sti
loopne
(bad)
int
test
push
cmp
xchg
enter
sbb
js
cmps
ss
mov
mov
inc
call
movs
rcr
sbb
cmp
cmp
lahf
pop
inc
xchg
mov
ror
dec
cmp
in
sbb
jg
aaa
inc
adc
xchg
loop
mov
xchg
pushf
(bad)
push
mov
ins
stos
pushf
pop
xor
push
pop
loope
and
push
xor
pop
xchg
inc
mov
(bad)
mov
cmp
cmp
and
je
movs
fs
(bad)
or
lahf
mov
out
cwde
mov
mov
loop
je
mov
dec
repz
add
icebp
loopne
bound
outs
data16
mov
push
sbb
test
push
xor
push
fdiv
das
data16
and
stos
jl
jae
pop
sbb
inc
inc
and
cmp
int
add
inc
sub
test
jae
xchg
(bad)
sahf
imul
cmc
or
fwait
push
aas
call
cmp
xor
pop
jmp
push
ret
cmc
cmp
icebp
xchg
pop
jbe
arpl
add
xchg
jge
fdivr
push
xor
cmc
sbb
clc
push
jmp
jbe
and
inc
loop
mov
inc
ds
icebp
mov
and
es
push
lods
mov
js
inc
xor
loop
sbb
mov
outs
mov
test
jnp
enter
sub
out
aas
into
cwde
test
icebp
je
and
lock
and
jb
xchg
jae
std
das
sbb
inc
enter
into
inc
in
fdivr
xor
pop
inc
sbb
sub
jmp
mov
add
jle
shl
sbb
rcl
test
in
stc
xor
add
add
or
and
jecxz
imul
xchg
cmp
cmp
pop
test
and
sbb
or
push
sbb
ret
and
(bad)
into
or
sub
adc
pop
push
add
jns
mov
(bad)
movs
lock
pop
fld
stc
rol
sub
add
mov
ss
cmp
add
fwait
cmps
xor
(bad)
std
mov
push
sbb
iret
mov
xor
cmp
popf
shl
xchg
inc
dec
js
add
enter
in
lahf
ins
pop
daa
or
xchg
jbe
pop
push
cmps
and
mov
movs
adc
push
mov
jo
lock
mov
cmp
test
mov
xor
call
outs
pop
sub
cdq
out
jae
sub
cmp
retf
ja
mov
repnz
adc
lock
ja
xor
jae
rol
mov
int
add
in
jne
ss
in
das
jle
pop
jne
sub
cwde
dec
fst
push
rcr
inc
mov
les
jb
xchg
mov
in
push
xlat
mov
mov
push
push
(bad)
fcom
addr16
aad
lds
call
(bad)
out
scas
adc
fs
stc
and
jl
or
push
xor
data16
or
mov
hlt
in
or
pop
sbb
jno
test
test
jno
fsincos
inc
xor
pop
mov
into
dec
adc
retf
test
dec
cmp
cmp
dec
mov
test
mov
jb
scas
lods
out
retf
fisubr
outs
xchg
fidiv
mov
cld
sbb
sbb
adc
or
xor
pop
bnd
stos
shl
pop
repz
movs
dec
rcr
lds
sbb
xor
xchg
jge
cs
ins
shl
std
add
jne
rol
xor
push
mov
je
sub
mov
jnp
mov
or
inc
cs
popf
inc
xor
xor
jmp
rol
outs
nop
cdq
lods
add
js
pmaddwd
ror
and
xor
mov
sahf
fld
hlt
jl
add
and
jmp
nop
int
mov
sub
mov
(bad)
fs
sbb
pushf
pop
aad
aas
(bad)
jge
xchg
ins
lea
in
(bad)
jp
ja
mov
test
data16
test
int
(bad)
adc
leave
nop
jp
mov
mov
out
xor
arpl
lods
cld
cmc
clc
lods
add
call
xchg
cs
xchg
push
push
test
dec
jo
cwde
add
shld
sub
pop
jp
enter
mov
jmp
adc
sub
(bad)
stc
mov
jecxz
imul
sub
cmp
fistp
aad
aam
fist
mov
mov
push
mov
aad
inc
mov
dec
mov
dec
push
xchg
mov
add
jae
ins
mov
int3
movs
sar
aad
jo
fwait
inc
ret
adc
shl
loopne
or
jns
dec
loopne
inc
fwait
push
add
pop
xor
sub
or
stos
dec
push
add
retf
push
mov
xchg
hlt
and
adc
mov
and
jmp
fisttp
mov
dec
push
fist
loop
fwait
js
aad
push
test
outs
and
push
cwde
rcl
loopne
popf
mov
movs
cld
inc
shl
movs
sub
ss
dec
fsub
push
rol
xchg
and
push
mov
add
and
mov
xchg
pop
jg
cld
test
div
popa
push
fwait
dec
cmc
arpl
push
adc
aad
fiadd
leave
pop
cmp
shr
and
aam
add
push
loope
push
(bad)
add
retf
loope
sbb
and
xchg
add
dec
adc
cmp
jl
call
add
rcl
xchg
jnp
xchg
fisub
dec
rol
mov
int3
call
fucomip
clc
adc
(bad)
arpl
lea
popa
xchg
dec
push
pop
jmp
stos
lds
jp
imul
fldenv
cmps
fs
sbb
mov
(bad)
jge
or
cmps
sti
rcl
jb
xabort
mov
mov
and
push
mov
xor
stos
xor
jno
push
mov
add
mov
push
mov
imul
pop
int3
add
data16
pop
adc
stc
and
jb
clc
ret
dec
xor
dec
xchg
and
stc
inc
inc
inc
xchg
mov
inc
and
mov
inc
jae
data16
and
cmp
inc
jp
movs
dec
fstp
popf
loope
or
rcr
test
outs
fidiv
fdiv
ja
push
xchg
pop
cmp
push
test
lods
(bad)
repnz
pop
add
cdq
rol
arpl
out
mov
push
dec
je
shr
push
pop
ss
adc
sbb
xor
push
test
pop
lods
fwait
ja
dec
aas
in
jl
cmc
dec
stos
es
sbb
lds
sub
fidivr
call
cmp
push
int
sub
leave
push
jmp
popf
jb
pop
adc
cmps
outs
mov
retf
or
cld
or
pop
push
sbb
dec
cmp
xor
int3
out
jnp
das
(bad)
sbb
or
and
pop
xchg
ja
xchg
std
mov
cmp
outs
jo
push
test
imul
into
jl
mov
xor
pop
push
mov
xchg
out
dec
outs
stos
int
pop
sbb
mov
mov
es
arpl
xor
scas
ret
pop
push
jmp
push
mov
mov
cmps
test
fsubr
scas
adc
movs
mov
test
sbb
jne
jge
int
xlat
aas
dec
mov
dec
call
inc
idiv
lods
pop
push
(bad)
push
mov
cmp
call
js
mov
jbe
push
mov
cmp
js
cwde
dec
push
data16
mov
or
adc
xchg
push
mov
clc
add
(bad)
xchg
mov
mov
pop
dec
fsubr
xchg
pop
dec
or
cmps
hlt
clc
dec
pop
les
or
xlat
push
popa
add
dec
push
pop
arpl
push
sbb
shl
das
add
jmp
xchg
and
dec
sub
xlat
pop
fild
aam
rol
ja
dec
popa
adc
jae
(bad)
daa
aas
jo
sub
fwait
js
je
mov
ror
xchg
xchg
test
repnz
leave
hlt
sbb
rcr
pop
pop
sahf
(bad)
mov
movs
cld
pushf
mov
push
cs
ret
inc
sti
movs
xchg
mov
push
push
aas
ror
nop
and
adc
outs
(bad)
mov
fisttp
stc
mov
clc
sti
retf
or
je
shl
paddw
loop
add
fdivr
outs
inc
sbb
leave
loope
addr16
jns
cli
dec
xchg
aaa
mov
mov
dec
cs
push
mov
in
sub
retf
push
fdivr
arpl
pusha
mov
pop
dec
call
dec
pop
add
xchg
mov
xor
mov
push
stc
pop
dec
and
cmp
int
jl
push
pop
or
mov
test
ret
mov
sahf
sbb
adc
mov
sub
jle
ret
out
push
imul
sub
xchg
(bad)
test
js
imul
call
mul
mov
push
xor
sbb
leave
enter
jmp
or
test
push
cdq
or
adc
add
(bad)
jb
cmps
mov
ja
pop
popf
dec
push
sar
jbe
ss
push
cmp
ret
mov
pop
(bad)
pop
nop
or
repnz
push
lds
xchg
cmps
mov
enter
jp
nop
out
mov
imul
and
mov
mov
into
adc
sti
pushf
cdq
mov
fistp
sbb
mov
popa
xchg
ss
pop
mov
icebp
mov
nop
scas
add
xlat
push
inc
add
repz
add
retf
xor
sbb
bnd
ss
mov
jg
sub
xchg
push
jmp
div
sbb
and
sbb
inc
mov
and
push
and
mov
jae
fistp
jmp
xchg
push
in
jecxz
arpl
xchg
sbb
lds
ror
(bad)
inc
stos
shl
enter
int3
adc
daa
mov
push
out
push
int
xchg
mov
js
iret
shl
add
lea
(bad)
dec
test
fisubr
ret
mov
dec
dec
ss
ret
loopne
sbb
fisttp
rol
cli
lods
xor
jmp
stc
cld
push
xchg
dec
add
and
mov
dec
xlat
sub
ins
jae
ror
and
push
push
data16
(bad)
enter
pop
mov
aam
test
inc
and
sar
pop
adc
(bad)
aad
cmp
or
xor
xor
outs
pushf
xor
xchg
or
idiv
xchg
jmp
test
jmp
ss
or
je
cmc
adc
adc
mov
inc
aam
cmp
stos
and
int
jbe
icebp
rol
cwde
nop
fadd
fsubp
mov
mul
xchg
dec
push
outs
repnz
mov
pop
inc
add
jl
movs
lods
ins
xlat
(bad)
pop
into
sbb
mov
jmp
or
add
movs
cmps
xchg
cmp
cdq
das
pop
xchg
mov
bnd
push
xchg
shl
adc
test
adc
add
shl
(bad)
dec
std
jg
fs
or
std
xchg
(bad)
push
add
shr
stos
sti
(bad)
sub
sbb
rol
push
in
push
ror
ins
inc
(bad)
pop
sub
fcomip
sub
enter
adc
repz
mov
or
iret
iret
es
lahf
mov
aas
jb
movs
test
push
mov
adc
fnstenv
sub
cmps
push
out
and
das
mov
rcl
or
mov
mov
mov
stos
mov
sti
cli
mov
nop
mov
ret
xor
jle
mov
adc
mov
scas
daa
dec
or
retf
jns
int
jbe
pop
fsub
(bad)
pop
psubusb
pop
sbb
dec
jb
iret
jns
into
test
and
lock
addr16
jecxz
xchg
mov
sahf
fsubr
mov
push
cs
or
lea
inc
push
cmp
push
jb
push
and
mov
imul
pop
xlat
and
ins
xchg
jge
mov
jecxz
mov
mov
(bad)
cmps
out
jb
fcom
lds
in
mov
mov
or
dec
in
retf
jo
ror
xor
(bad)
jns
push
xor
movs
lods
dec
jecxz
in
add
test
adc
(bad)
out
mov
fwait
xor
sub
clc
repz
fild
xor
inc
into
shl
jno
out
addr16
pop
inc
imul
inc
mov
push
adc
ss
imul
and
inc
call
add
ja
lahf
mov
data16
retf
jne
(bad)
xchg
leave
nop
call
mov
inc
and
adc
xchg
mov
xor
sar
sub
inc
dec
shl
xchg
add
je
addr16
cmps
add
mov
neg
or
rol
iret
xor
fs
jo
mov
cmps
loop
cld
lods
pop
iret
rol
and
aam
imul
push
pusha
cmp
and
dec
inc
mov
in
frstor
cwde
cmp
dec
or
cmp
test
iret
bound
pusha
je
icebp
call
inc
mov
cmp
cmp
fldcw
cld
or
inc
push
cs
xchg
cmp
cmps
mov
push
movs
in
pop
nop
or
or
inc
movs
push
call
xchg
dec
pop
mov
xlat
fld
and
add
mov
push
sub
movs
sub
xor
jp
pop
pop
dec
and
sub
mov
loope
sbb
mov
stos
jecxz
pop
push
loope
stos
add
retf
jno
and
inc
and
clc
fimul
call
cmp
push
add
call
push
call
fisubr
sub
movs
mov
stos
into
lahf
test
mov
fcomp
add
js
retf
xchg
imul
add
jo
cmp
(bad)
les
(bad)
in
pop
into
dec
mov
push
cmp
or
outs
mov
and
sti
xchg
retf
xchg
leave
dec
mov
mov
and
ds
aam
repz
popa
mov
push
push
mov
mov
xor
pop
and
xor
sub
add
int3
jge
sub
adc
arpl
cmp
ins
rcr
nop
dec
and
sbb
leave
enter
test
(bad)
leave
add
std
fmul
dec
cmp
dec
(bad)
mov
mov
add
call
and
push
les
adc
push
inc
add
xor
mov
pop
arpl
cmp
(bad)
lahf
xchg
pop
stc
xor
into
pop
mov
jne
push
mov
jle
dec
adc
add
and
fmul
enter
jne
pusha
cmp
jmp
sbb
sub
xchg
jmp
jnp
add
(bad)
cli
add
push
(bad)
ds
out
dec
retf
hlt
aam
dec
sub
ret
and
pop
and
jl
aas
dec
fimul
xchg
xor
jno
ins
movs
push
call
iret
sub
or
mov
les
adc
xor
loopne
int
clc
dec
leave
sbb
scas
xchg
fst
fisub
pop
jbe
jno
loopne
cmp
sbb
cli
ret
mov
mov
xor
lock
punpckhwd
jle
das
xchg
frstor
lahf
mov
adc
pop
push
mov
xchg
add
push
and
dec
(bad)
dec
sub
scas
jns
ins
pop
pop
in
or
clc
out
jmp
sbb
dec
adc
cs
sbb
sub
ins
stc
mov
push
addr16
sbb
inc
inc
and
(bad)
jmp
sbb
cmp
mov
pop
mov
or
out
lock
pop
cs
and
in
scas
mov
cmps
and
popf
jbe
pop
pop
outs
xchg
(bad)
push
dec
jb
dec
add
aaa
xor
jmp
and
cmp
pop
bound
lds
lahf
cmp
pop
ds
mov
sar
mov
out
cs
test
pop
jne
push
mov
mov
mov
popf
imul
cmc
fnstcw
dec
mov
push
add
daa
mov
sbb
ret
out
push
inc
stc
add
mov
pop
loopne
mov
or
out
push
push
xchg
xchg
andnps
xlat
sub
mov
jge
push
fmul
aam
clc
mov
adc
outs
pushf
and
dec
jmp
call
sbb
xchg
mov
xchg
pop
lock
jae
sub
add
dec
jns
push
shl
(bad)
(bad)
cmps
mov
sbb
sar
popf
pushf
jb
stos
xor
and
leave
jg
out
das
aaa
mov
xor
mov
in
inc
jg
cmp
fldenv
pop
fnsave
and
mov
push
pop
lea
das
rol
jge
and
aaa
aad
lods
inc
add
sbb
pop
push
mov
(bad)
mov
dec
mov
push
jb
arpl
xor
into
pop
xchg
dec
mov
mov
cmps
mov
add
popa
aas
cmps
mov
mov
stos
jle
adc
jp
adc
sub
mov
test
(bad)
mov
(bad)
std
jecxz
jp
ins
pop
push
fdiv
pop
mov
(bad)
adc
js
mov
or
addr16
sar
ret
mov
mov
xchg
test
mov
adc
xchg
addr16
pushf
ds
adc
neg
outs
dec
sbb
pop
stos
push
les
sbb
out
imul
dec
(bad)
xchg
push
mov
or
ins
in
pop
int
mov
repz
dec
mov
mov
sti
(bad)
ins
sahf
inc
ds
stc
test
mov
mov
sub
out
(bad)
sbb
add
inc
cmps
stc
scas
and
lea
ret
ret
or
call
xchg
mov
lds
shl
inc
jno
pop
arpl
out
mov
test
or
movs
sbb
nop
xchg
outs
lahf
cs
push
adc
ins
out
pop
clc
popa
stc
cmp
popa
jnp
(bad)
out
xchg
or
inc
cmp
pop
xchg
sbb
adc
pop
pop
dec
inc
sub
push
and
pusha
push
sbb
jecxz
sub
or
mov
xchg
mov
fcom
jg
clc
inc
mov
mov
in
push
sbb
js
cmc
add
mov
sbb
out
pop
pop
xchg
enter
out
cmp
es
fisubr
cmp
jl
in
sahf
or
xor
mov
xchg
sbb
repnz
(bad)
xor
loope
ss
sbb
add
sbb
mov
mov
js
pop
out
add
pusha
sahf
dec
dec
dec
inc
scas
and
mov
jns
ins
and
push
cmp
out
into
loop
push
mov
sbb
adc
repz
and
pusha
xor
(bad)
aam
cmp
aad
mov
stos
hlt
sub
cmps
pop
call
ins
sub
pusha
push
pusha
jl
mov
adc
and
data16
popa
les
ds
daa
data16
adc
mov
ret
dec
dec
ficom
jecxz
sub
(bad)
(bad)
mov
dec
mov
rol
pop
adc
add
aam
iret
fwait
(bad)
cmc
mov
cld
sbb
div
push
xor
clc
call
gs
cmc
pop
adc
fnstsw
fcmovb
xor
inc
dec
enter
mov
adc
popf
jge
mov
adc
ror
mov
popa
daa
cld
pop
in
ds
add
outs
test
stos
test
js
lods
(bad)
add
and
push
push
lahf
add
jb
fdivr
data16
outs
jb
mov
dec
clc
inc
sahf
lahf
cmps
xor
push
dec
test
imul
out
(bad)
in
test
test
mov
test
xchg
jl
fdivr
adc
in
lea
call
sbb
hlt
sahf
gs
test
retf
xor
cld
inc
loopne
xor
xchg
pop
cmp
cld
jne
xor
inc
mov
ja
test
mov
mov
or
and
js
fsubr
imul
add
push
cmp
aam
scas
hlt
nop
cdq
xchg
adc
push
add
in
xchg
bound
pushf
(bad)
loop
xchg
push
cmp
out
call
pop
xchg
xor
into
mov
adc
and
adc
or
rcl
jno
push
cmp
mov
mov
dec
jne
adc
out
dec
(bad)
xor
test
or
jnp
mov
pop
sahf
cmc
adc
int
stos
idiv
mov
push
(bad)
jmp
stos
neg
cmp
push
adc
in
mov
sbb
cmp
xchg
xchg
imul
cmp
aaa
jo
inc
(bad)
ja
cmc
inc
(bad)
adc
sbb
pop
push
movs
jl
das
xchg
jl
dec
(bad)
aam
mov
cmc
pop
cmp
shl
inc
mov
cwde
sub
mov
cmps
dec
cmp
sbb
mov
das
pop
movs
rcr
or
pop
add
inc
push
xor
push
cli
enter
lahf
jmp
test
lahf
add
inc
dec
ficomp
shl
sbb
fisttp
push
(bad)
jmp
outs
ds
cdq
cmps
inc
loop
xchg
mov
adc
rcl
fbld
cmp
ret
jp
mov
push
int3
call
adc
inc
jbe
out
jecxz
xor
or
retf
lea
cli
call
lahf
ss
mov
stos
outs
fdivr
call
xor
add
pop
xchg
sub
outs
inc
sub
adc
mov
lods
pop
push
pop
cmp
sar
inc
and
mov
cmp
outs
mov
fimul
push
imul
sbb
sub
sbb
xchg
fwait
xor
pop
mov
pop
mov
mov
loopne
cmp
(bad)
fldcw
mov
cmps
push
hlt
int3
fcomip
jp
dec
cmp
add
push
(bad)
jmp
mov
jo
mov
sbb
xchg
xchg
cmp
mov
out
lods
adc
stos
inc
jne
movs
mov
mov
sahf
and
pop
sbb
push
and
xchg
sbb
popa
in
and
lods
cmp
push
jge
sti
or
xor
and
jecxz
cmc
pop
sar
cmp
push
push
retf
ins
jb
fimul
fld
mov
jo
dec
sti
aaa
xor
sbb
arpl
stos
ins
pop
xchg
arpl
jle
xlat
sbb
push
mov
lock
fild
mov
and
push
cmp
push
jmp
sbb
ins
and
pop
fiadd
pop
(bad)
cdq
int3
sbb
mov
or
leave
dec
mov
mov
adc
mov
pop
add
or
sub
mov
rcr
cs
jp
jle
sub
xchg
ret
iret
outs
leave
mov
mov
pushf
jo
push
stos
adc
pop
pop
lahf
xchg
xbegin
jecxz
popf
lea
push
or
jne
dec
xor
iret
jge
in
dec
aam
jmp
test
mov
arpl
lahf
mov
or
pushf
sbb
cmp
shl
loop
push
mov
sub
add
cmp
ins
int
mov
mov
lods
cmp
inc
dec
jge
in
dec
aam
adc
pop
loop
daa
adc
sub
mov
iret
stos
mov
test
add
out
inc
sbb
gs
movs
add
out
jge
bnd
mul
(bad)
pop
push
out
or
pusha
out
cmp
xchg
sub
inc
retf
rcr
add
sub
test
jae
(bad)
sti
stc
lods
sbb
mov
sar
add
(bad)
retf
push
outs
or
sub
das
jg
test
fmul
mov
das
stc
sub
mov
cld
jl
xlat
inc
scas
dec
iret
scas
sbb
cmc
iret
dec
nop
test
mov
inc
sub
xor
scas
idiv
int
cld
in
jo
adc
sub
jnp
inc
push
mov
xchg
repz
popa
daa
xor
and
xchg
adc
sub
(bad)
popf
test
fsubr
add
pop
ss
xor
stc
jns
test
arpl
hlt
push
dec
ror
movs
ins
call
xor
sub
jbe
push
(bad)
xchg
push
clc
xchg
jp
rcr
mov
sbb
cmps
nop
inc
addr16
cdq
sbb
cwde
movs
and
movs
arpl
enter
cmp
dec
pop
mov
popf
jmp
call
sti
shl
inc
imul
(bad)
sti
sub
aas
mov
cmps
jecxz
(bad)
fcom
push
and
out
push
retf
pop
rcl
stc
ret
out
inc
mov
push
mov
jg
xchg
cmp
or
fs
fbstp
in
xor
pop
es
cmc
jmp
dec
arpl
sub
in
dec
dec
xchg
ja
clc
pop
das
adc
xchg
stos
mov
cmp
(bad)
jl
(bad)
test
cdq
mov
test
sbb
cli
sub
ins
push
mov
stc
or
pop
bound
sahf
popf
dec
xchg
pop
retf
sti
lods
push
dec
pop
aam
sub
cmp
loopne
pushf
add
sub
add
clc
ss
mov
mov
mov
push
jg
ss
xlat
movs
push
mov
sbb
inc
jne
adc
xor
inc
sti
cmp
(bad)
and
pop
lods
push
lods
aas
enter
cmp
les
jmp
fsubrp
aas
inc
loope
nop
in
mov
mov
outs
pop
stos
inc
popa
xor
cs
repz
loopne
imul
and
icebp
mov
push
xor
add
gs
mov
lods
cmp
add
mov
cs
hlt
arpl
and
mov
mov
push
movs
sub
dec
mov
rcl
test
pop
je
jecxz
(bad)
pop
fcomi
adc
mov
jecxz
pop
and
and
jnp
dec
cwde
int
mov
sub
push
sbb
mov
ja
ret
aad
adc
xchg
js
inc
mov
clc
dec
bound
xchg
push
cmp
clc
xor
or
mov
movs
mov
sbb
inc
outs
nop
inc
aas
movs
push
push
cmp
mov
test
div
(bad)
dec
adc
inc
rol
jb
into
mov
(bad)
sub
call
and
outs
sub
in
jecxz
pop
imul
cwde
mov
in
lods
mov
jnp
cld
xchg
aad
push
fdiv
jae
jge
pop
xchg
xchg
jae
pop
mov
cmp
test
imul
in
(bad)
repz
sub
xchg
inc
push
push
(bad)
neg
push
test
outs
xor
test
repnz
or
inc
ja
stc
(bad)
dec
jmp
fdivp
fisub
mov
mov
movs
test
mov
jns
mov
adc
pop
movs
and
js
(bad)
xor
jmp
inc
xchg
adc
fist
mov
xchg
out
dec
and
inc
sbb
fsubr
add
adc
repnz
add
dec
loop
xlat
push
add
add
jnp
addr16
jbe
sub
inc
idiv
jno
add
inc
and
pop
xchg
adc
xchg
adc
sub
jge
stos
sti
mov
sbb
jg
push
test
jne
xchg
jne
xor
mov
push
pop
xor
push
and
jo
pushf
data16
pop
rcr
pop
cli
and
xchg
imul
ret
call
sub
out
cmp
and
xor
jp
mov
mov
test
mov
inc
pusha
cmp
(bad)
and
cdq
mov
fcmovnb
cmp
retf
dec
cmp
repnz
dec
jno
mov
push
inc
mov
ficomp
lds
jg
ds
mov
sub
pop
jg
jmp
inc
popf
jo
leavew
push
imul
fmulp
sbb
mov
inc
fbstp
inc
push
pop
cld
and
adc
ret
in
mov
in
dec
out
pop
mov
mov
or
adc
push
enter
lds
mov
in
popf
das
dec
sub
test
rcl
fdiv
mov
in
xchg
pop
push
outs
mov
pushf
lahf
mov
pop
int3
(bad)
std
mov
pop
sub
adc
lods
xor
xor
push
shl
xchg
inc
jecxz
sbb
push
fistp
sub
push
sbb
cmp
jb
sahf
pop
stc
mov
and
outs
ret
lods
rol
ins
pushf
cmp
mov
ror
mov
xlat
xchg
mov
fsub
fisttp
div
dec
gs
dec
es
rol
mov
jmp
aas
pop
ja
mov
and
and
mov
(bad)
xchg
cdq
mov
add
push
jl
mov
lock
mov
mov
popa
mov
clc
repnz
scas
mov
pushf
das
xor
ror
adc
push
mov
not
add
jno
mov
cmp
xor
(bad)
out
in
xchg
dec
cmp
and
loop
mov
lods
mov
cmps
and
(bad)
lea
xchg
add
cmp
or
gs
sbb
xchg
mov
test
and
fwait
and
sbb
repnz
fdivr
cmc
xchg
add
push
es
jle
clc
xor
out
data16
addr16
mov
adc
dec
cmc
nop
les
inc
xchg
cmp
div
pop
aam
test
adc
movs
movs
inc
imul
mov
shr
dec
int3
fnstcw
test
pop
inc
nop
mov
mov
or
adc
push
rcr
ret
push
pop
inc
cmc
or
scas
adc
ret
pop
stc
xchg
dec
push
dec
repnz
fdivr
les
ror
test
(bad)
std
call
ins
imul
inc
call
or
in
scas
mov
sti
sbb
push
repz
dec
cmp
aaa
sar
push
pop
stos
cmps
enter
push
ss
adc
mov
adc
test
pop
dec
push
mov
(bad)
mov
pop
pop
jnp
add
or
out
jbe
imul
jmp
mov
fsub
push
repnz
fldcw
jb
dec
mov
xor
out
loope
sbb
rol
inc
test
dec
and
add
mov
add
cmp
jl
inc
lea
push
jnp
jb
pop
test
push
or
mov
in
imul
addr16
xor
jo
enter
mov
push
shl
pop
loope
mov
ins
(bad)
jp
fwait
mov
shl
mov
push
fs
retf
ins
jmp
sub
xor
and
icebp
push
cld
cs
pop
js
jnp
push
inc
push
ror
int
pusha
lods
mov
and
adc
jb
std
addr16
jnp
dec
stos
es
add
cwde
pop
cmc
xor
jp
rol
out
cmps
cwde
scas
mov
inc
rol
sbb
aas
or
and
xchg
sti
ror
lahf
mov
pop
in
mov
adc
aaa
stos
movs
fidivr
mov
je
adc
test
xchg
xchg
call
cmps
mov
shr
jnp
xchg
in
jns
mov
lods
mov
or
mov
ss
ds
xchg
mov
fcom
inc
push
scas
aas
inc
jns
lods
mov
xchg
dec
aam
lock
ficom
dec
mov
(bad)
je
jmp
and
add
test
add
mov
(bad)
jmp
mov
pop
scas
fld
pop
stc
adc
jo
cmp
cmp
test
dec
dec
and
call
pop
sbb
or
sbb
fstp
add
hlt
adc
mov
push
(bad)
aam
into
test
mov
add
in
jne
pop
aad
mov
cmc
inc
jle
shr
icebp
fmul
into
cli
rol
bound
pop
cmp
sti
inc
dec
ins
stos
or
jb
dec
sbb
leave
rcr
inc
jb
pop
(bad)
std
cmp
and
fucom
mov
jae
dec
gs
sub
sub
xchg
mov
mov
test
sti
or
inc
out
dec
pop
setae
add
ja
aam
adc
mov
mov
mov
aam
mov
jp
mov
pop
mov
mov
inc
push
sub
cs
in
ss
retf
in
int
hlt
stos
or
dec
call
lock
outs
mov
out
aaa
repz
fwait
nop
test
enter
inc
jns
call
ror
jnp
mov
mov
imul
mov
dec
(bad)
dec
jg
scas
cmp
sbb
not
mov
adc
pop
jno
inc
(bad)
adc
mov
pop
sub
movs
test
into
and
stos
rcr
je
and
cmp
rcr
into
pop
sbb
ins
or
xchg
(bad)
rcl
or
imul
jns
fld
sbb
int3
xchg
in
inc
ins
pop
xor
bound
iret
imul
push
leave
pop
jl
pop
push
sub
dec
cmps
call
pop
jae
push
dec
cmp
sti
inc
sar
and
rcl
clc
mov
popf
dec
sti
into
mov
jne
test
adc
js
cld
mov
and
sub
in
push
cmp
cmps
sub
adc
rcl
xchg
xchg
mov
add
xchg
pop
push
or
(bad)
or
cwde
mov
ins
sbb
push
inc
in
adc
retf
xor
fwait
stos
es
sbb
inc
inc
mov
push
int3
mov
scas
leave
iret
mov
aas
sub
ss
outs
inc
mov
adc
cwde
cmp
imul
add
xchg
push
out
inc
loop
test
cmp
ficom
add
cmp
ins
mov
mov
push
adc
sub
lock
adc
mov
inc
push
mov
dec
js
test
mov
mov
test
jg
ret
in
jbe
jbe
mov
pop
sbb
pop
sub
dec
fcompp
inc
repz
jmp
sub
imul
sub
pop
sbb
imul
sub
add
inc
test
mov
jecxz
push
inc
and
and
ja
push
cmps
xor
cwde
and
or
mov
ror
add
ja
mov
fdivr
pop
nop
sbb
dec
dec
cmc
sub
adc
mov
sti
inc
dec
dec
jae
and
dec
rcl
cmp
call
pop
(bad)
jb
nop
xchg
mov
scas
movs
test
mov
in
je
mov
test
cmp
xlat
stc
add
stc
cmp
das
hlt
das
cdq
jo
or
push
xor
adc
(bad)
inc
jmp
push
je
out
mov
jae
mov
inc
dec
xchg
jbe
adc
sbb
inc
stc
addr16
push
push
jmp
or
push
in
out
bound
fsub
clc
popa
aad
cs
mov
xor
cmps
mov
ror
lahf
add
(bad)
jns
aaa
not
push
das
jp
clc
pop
lock
xor
xor
adc
aam
addr16
cmp
ror
mov
stc
aam
jns
out
mov
das
loopne
and
inc
sbb
xchg
mov
mov
repnz
mov
nop
cld
(bad)
mov
ss
and
ins
in
mov
mov
xor
lds
jle
dec
mov
dec
shr
lea
bound
and
and
cmc
aad
mov
test
inc
pop
(bad)
out
jo
mov
mov
push
sub
mov
dec
aaa
fwait
xchg
dec
push
or
add
jg
cmp
pop
dec
shl
or
dec
call
sar
add
(bad)
or
fld
and
cmp
movs
cli
push
das
arpl
cwde
in
movs
mov
movs
pop
ins
pop
call
xchg
sbb
bound
add
ffree
pusha
inc
les
pop
out
jne
(bad)
xchg
cmps
push
not
pop
mov
or
ss
adc
nop
stc
repz
ins
cmc
jge
push
ja
into
clc
scas
mov
cdq
pushf
sbb
fbld
lods
dec
inc
mov
idiv
movs
cmp
add
ret
xor
xchg
pop
mov
mov
adc
test
retf
out
dec
mov
sub
jge
in
xlat
aas
stc
int3
not
or
(bad)
mov
call
pop
sbb
shl
movs
fimul
loop
in
ds
mov
out
mov
xor
mov
cwde
loop
xor
inc
add
push
retf
lods
pop
aaa
mov
dec
ins
sub
repnz
xchg
ins
out
popa
jmp
dec
push
ret
push
jmp
aad
les
sub
inc
xlat
out
jecxz
outs
mov
pushf
sub
add
gs
dec
data16
inc
cmp
ffreep
fst
das
out
xor
cwde
ss
cli
sbb
mov
sbb
(bad)
adc
rol
rcr
je
mov
pop
fyl2xp1
test
or
test
ret
adc
xor
sar
mov
jmp
jb
cmp
mov
dec
sub
adc
push
push
in
jl
shr
mov
cmc
jne
dec
js
mov
pop
std
adc
xlat
and
sbb
ret
imul
sahf
xchg
in
mov
jl
test
mov
cmp
and
adc
mov
(bad)
sub
sub
ror
(bad)
pop
pop
push
mov
mov
lea
popf
mov
pop
sbb
repnz
ret
sar
inc
repnz
mov
add
dec
jge
loop
push
xchg
stc
mov
or
nop
dec
in
icebp
pop
or
mov
mov
sub
jp
pop
inc
sbb
call
or
cwde
scas
(bad)
fild
(bad)
pop
int3
retf
or
js
pop
fmul
inc
cdq
inc
adc
dec
push
mov
mov
dec
mov
jl
inc
(bad)
aaa
out
adc
in
inc
sub
loopne
int3
stc
in
popa
xchg
(bad)
sbb
mov
movs
xchg
sbb
adc
sub
mov
(bad)
xchg
and
jg
sub
cs
mov
js
neg
loopne
or
dec
popf
jnp
(bad)
(bad)
ficom
jae
pop
dec
inc
icebp
adc
repnz
rcl
push
je
adc
inc
call
push
sahf
cmp
push
imul
fstp
imul
shr
xchg
push
imul
dec
in
in
mov
pop
mov
pushf
aaa
pop
sub
pop
jp
out
push
xchg
test
icebp
jge
gs
cwde
call
pop
mov
and
mov
mov
push
in
xchg
ins
ins
fisubr
shl
add
les
call
mov
push
mov
aas
adc
ins
in
dec
push
rcl
hlt
in
dec
pop
dec
fldenv
adc
dec
mov
cdq
jl
mov
(bad)
fistp
or
pop
xor
fadd
sbb
fwait
repz
jnp
js
xchg
xchg
mov
cmp
imul
imul
aas
mov
(bad)
mov
pop
retf
shr
pop
outs
fs
cmp
xchg
stc
xchg
nop
fst
mov
and
je
mov
mov
rol
jmp
cmp
mov
mov
sahf
scas
andps
leave
add
push
xor
cmp
jge
pop
cs
test
pop
xchg
xchg
in
fidiv
and
xchg
push
xchg
and
jno
rcl
mov
mov
mov
push
xchg
je
adc
and
out
test
inc
mov
stos
xchg
sub
cmp
jmp
ins
mov
pop
inc
bound
xchg
test
jge
jp
jno
in
xchg
test
pop
jg
nop
or
ss
fs
mov
push
lods
test
jmp
(bad)
adc
stos
(bad)
jmp
stos
cmp
add
mov
test
sub
daa
cmp
test
jp
inc
sbb
xor
xor
cmps
jne
movs
jmp
dec
xor
retf
sahf
jl
fistp
pop
adc
fnsave
daa
stos
out
iret
push
mov
cmp
icebp
or
arpl
inc
out
xor
movs
adc
sub
out
jbe
mov
jmp
mov
push
pop
inc
mov
test
add
hlt
in
jo
xor
in
(bad)
std
mov
out
aas
arpl
pop
out
cmp
pop
inc
test
cmp
mov
retf
ss
loop
cdq
xchg
and
pop
(bad)
pop
dec
mov
cmps
movs
fidiv
add
ins
lods
jb
inc
jecxz
aad
push
repz
data16
jp
bound
out
in
fnstcw
sahf
xchg
jecxz
imul
and
ins
scas
mov
add
rcr
mov
mov
stos
and
dec
xlat
sub
sti
shl
out
shl
xor
lds
and
daa
xlat
sbb
pop
(bad)
cmps
lods
fisub
dec
ins
dec
out
fisubr
imul
lods
sub
xor
mov
mov
jae
in
mov
mov
mov
push
inc
pop
pop
inc
mov
std
hlt
or
aas
push
push
test
mov
adc
mov
imul
clc
in
cld
test
cmp
sbb
adc
xlat
aad
int
lock
jmp
dec
stos
ja
out
sbb
sahf
and
out
cs
pop
jmp
sbb
(bad)
xor
jecxz
int
sub
pop
or
inc
out
shl
dec
into
dec
arpl
pushf
sti
movs
ret
es
sbb
adc
rol
mov
rcr
outs
lahf
and
les
pop
cmp
mov
xlat
(bad)
in
and
sbb
cli
xor
jno
push
cwde
jg
pop
adc
cvtps2pi
pop
int
sbb
icebp
push
xor
sub
add
or
sub
cmps
xor
(bad)
aas
dec
loop
pop
sbb
mov
pusha
dec
mov
mov
ins
cs
hlt
inc
jl
xchg
int
cmp
inc
jns
push
xchg
pop
daa
sub
jnp
cs
or
jo
(bad)
cmp
adc
push
and
adc
push
stc
leave
lods
aad
xor
idiv
out
ficom
retf
(bad)
into
aad
add
aad
je
es
xor
cli
in
cmps
and
pop
dec
mov
push
mov
xor
mov
inc
push
int3
dec
out
mov
add
sub
mov
outs
ror
xor
mov
sub
pop
outs
mov
outs
jge
jne
jns
imul
popf
movs
icebp
lds
ds
add
xchg
xchg
outs
adc
das
push
inc
sar
je
mov
dec
sub
pop
pusha
ror
xchg
sahf
xchg
outs
adc
js
test
pop
scas
sub
scas
addr16
sub
stos
call
xchg
out
out
jecxz
fimul
xchg
in
ror
cmps
(bad)
mov
into
jg
inc
jp
cs
shr
sub
push
pop
mov
mov
imul
jge
push
test
pop
push
mov
lea
int
mov
cmp
dec
les
adc
sbb
sub
push
mov
cmp
sbb
sbb
push
dec
jl
push
xlat
in
dec
jne
fistp
ret
push
adc
jp
sahf
sbb
cmp
outs
ja
mov
daa
mov
inc
jne
test
jle
in
dec
imul
imul
pop
inc
adc
cmp
in
mov
fwait
movs
push
xchg
jbe
test
jnp
jae
and
lock
retf
call
push
inc
xchg
push
push
sbb
xor
fadd
inc
xor
pop
fs
push
or
sbb
jno
cmp
xchg
jmp
pop
inc
xor
xchg
mov
jmp
push
mov
mov
cwde
ins
(bad)
sbb
fnsave
rol
stos
dec
pop
pusha
dec
mov
sub
and
adc
inc
xor
mov
pop
cs
int
mov
(bad)
int3
lock
sub
int3
xchg
pop
ret
not
in
jg
jno
mov
jnp
push
mov
ffreep
in
mov
imul
dec
push
add
fadd
or
jmp
push
cmp
and
xor
mov
out
push
test
pop
sti
dec
or
scas
xor
mov
push
jno
cld
loope
adc
mov
add
xor
add
mov
pop
mov
add
fisub
jb
inc
fdivr
leave
sub
pop
test
mov
lods
dec
popf
je
dec
fs
fld
xchg
fidiv
inc
cwde
ja
mov
pop
adc
xchg
xor
fnstenv
adc
add
inc
cmp
mov
dec
sub
xor
pop
les
sub
fadd
ret
mov
jae
addr16
pop
in
dec
sub
rcr
(bad)
fiadd
sbb
inc
(bad)
mov
cmp
rcl
and
pop
cmps
jbe
push
mov
and
push
es
(bad)
jmp
xchg
call
dec
mov
dec
loop
sahf
sbb
and
xlat
mov
cwde
bound
fmul
imul
push
jb
or
pop
cmp
dec
cmc
sbb
sub
mov
mov
cmp
xchg
mov
icebp
popa
jle
movs
xchg
retf
xor
xchg
xor
(bad)
pop
lods
push
sbb
test
into
sar
stos
ss
push
sbb
sbb
int
dec
adc
jmp
(bad)
leave
push
mov
jbe
sub
xor
xchg
pop
jecxz
jnp
and
popf
xchg
rcr
cs
int
enter
std
test
inc
les
or
jmp
and
adc
cmps
add
(bad)
jno
adc
mov
leave
sub
mov
fnstcw
or
dec
lea
sbb
fadd
mov
ret
fsin
or
inc
xor
pop
mov
mov
dec
pushf
imul
sub
push
repnz
sti
ror
or
jb
or
mov
jno
mov
hlt
mov
jns
outs
lahf
xchg
xchg
sub
rcl
inc
inc
cmps
rol
jg
xchg
jle
gs
mov
add
add
add
mov
sbb
imul
push
popf
cmp
cli
out
test
ins
mov
and
add
jno
mov
jo
jae
adc
out
mov
sbb
fisubr
jg
int
or
sub
jo
loop
mov
outs
cmps
jnp
mov
sbb
mov
push
sar
bound
mov
jecxz
ins
imul
fucomi
sbb
pop
jns
xor
(bad)
out
xchg
jle
lds
out
push
xor
push
fs
icebp
repnz
cmps
inc
adc
dec
mov
scas
mov
push
or
sbb
dec
sar
xchg
xor
fstp
mov
jmp
sbb
sbb
or
mov
retf
not
pop
shl
mov
fmul
test
cmp
out
test
in
cmp
dec
dec
loope
xor
pop
jmp
mov
popa
add
sbb
in
dec
pop
push
fmul
neg
pop
shr
mov
retf
xor
sub
(bad)
xlat
mov
mov
jnp
push
cmp
pop
jmp
jg
stos
sub
in
xor
rcr
in
sbb
arpl
xchg
imul
mov
sbb
icebp
ficom
cmps
ss
jg
pop
(bad)
push
and
repz
sub
jnp
xchg
jbe
lahf
xchg
das
jg
xor
adc
jecxz
mov
push
lods
cmp
or
mov
xchg
cmp
das
cs
fs
shl
add
daa
aaa
arpl
sbb
dec
call
or
(bad)
popa
neg
fisub
sbb
pusha
jge
cmp
xchg
xor
mov
or
fsub
mov
lods
pop
shl
xchg
or
add
mov
pop
mov
or
add
jno
xor
aad
inc
push
push
movs
pop
imul
shr
nop
rcl
push
push
bound
mov
xchg
mov
cmp
dec
pop
imul
(bad)
pop
and
jae
mov
(bad)
cmps
(bad)
push
pop
dec
xor
mov
sti
repz
pop
retf
dec
mov
clc
cmps
xor
loop
xlat
sahf
sbb
dec
cld
sbb
cmp
inc
out
xchg
sub
xor
and
adc
push
outs
mov
scas
fs
fist
push
repnz
adc
lea
ds
mov
xor
enter
ins
jbe
jno
and
test
mov
add
test
mov
aas
xor
sti
sbb
fiadd
outs
jns
in
je
fadd
push
repz
xchg
or
mov
mov
scas
scas
mov
jno
mov
and
daa
xchg
and
or
leave
and
or
or
xchg
data16
xchg
mov
je
dec
rol
push
mov
xor
in
jmp
jecxz
shl
es
push
xchg
div
push
fdivr
xor
inc
mov
push
mov
pop
neg
and
dec
aad
add
add
sar
lods
(bad)
lock
lock
ds
test
mov
push
shl
gs
enter
loop
aas
or
adc
into
dec
es
sub
sub
mov
push
lods
ret
pop
cmps
cs
rcr
lods
rol
mov
or
test
adc
aad
pop
ins
mov
sub
add
jns
dec
xor
scas
out
ja
sbb
push
mov
lds
jne
push
loop
mov
scas
jbe
sub
rol
adc
cmp
mov
ror
popa
pop
xchg
inc
push
mov
gs
and
lock
cwde
or
mov
mov
(bad)
in
or
and
test
daa
sbb
stos
sbb
mov
cmp
cmc
fmul
mov
mov
mov
adc
mov
sti
cmp
js
shl
jne
inc
imul
fidiv
fistp
mov
aam
retf
mov
mov
or
push
daa
push
xor
pop
scas
stos
(bad)
pop
add
jbe
fmul
(bad)
div
add
inc
mov
into
xchg
movhps
add
sub
test
inc
ins
cmps
or
pop
outs
cmp
nop
sbb
pop
retf
popa
mov
xor
sub
popf
add
and
push
mov
mov
aad
add
cmp
sub
pop
xor
mov
test
addr16
std
add
xchg
(bad)
cmc
int
lahf
loopne
sar
mov
jb
or
adc
jne
mov
mov
pop
retf
pop
pop
adc
sbb
das
jp
mov
xchg
ins
xlat
mov
mov
loopne
pop
nop
(bad)
es
ss
in
sub
lahf
ret
jle
or
scas
xor
push
mov
mov
leave
sub
adc
add
adc
dec
cld
(bad)
fisubr
cmp
push
je
dec
jl
add
add
add
rol
jnp
retf
adc
jne
sar
push
daa
imul
jbe
dec
mov
loop
nop
xchg
(bad)
loopne
in
xor
jmp
mov
fsubp
loope
pop
mov
shr
xor
shr
sub
sbb
fldcw
fs
cmps
xchg
jno
jle
pop
add
inc
retf
adc
stc
outs
and
out
mov
push
pop
add
jge
pop
rol
pop
ficom
cld
dec
push
into
and
sbb
sti
outs
cmc
and
lods
pop
dec
cwde
(bad)
pushf
retf
nop
and
push
pushf
add
adc
xchg
mov
call
pop
mov
adc
hlt
jns
out
jbe
pop
push
push
push
inc
pop
outs
ss
add
jo
sti
add
pop
push
lahf
movs
sahf
in
mov
push
sbb
jp
int
sbb
or
icebp
aam
lods
jp
jle
inc
test
xchg
mov
sbb
mov
or
and
in
loopne
fs
nop
pushf
cmp
movs
inc
mov
jl
outs
mov
ret
and
inc
int
fadd
sbb
ins
mov
mov
(bad)
cmc
xchg
jle
push
shl
repz
sbb
mov
retf
pop
or
loop
push
shr
les
xor
adc
sub
and
shr
or
push
jb
unpcklps
jb
push
sub
jmp
jle
leave
sbb
mov
pavgb
mov
dec
jno
mov
addr16
xchg
test
popf
mov
fwait
xchg
ds
inc
mov
sahf
sbb
fsub
int
add
or
push
jo
imul
popw
or
clc
mov
cmc
pop
xchg
jno
or
loop
mov
sbb
(bad)
pop
fwait
pusha
repz
loop
xchg
add
jmp
inc
call
dec
inc
(bad)
test
inc
push
jns
inc
push
ins
out
mov
inc
add
mov
inc
in
(bad)
out
(bad)
inc
aaa
xor
aaa
mov
daa
xchg
dec
call
push
outs
out
xchg
stc
das
xchg
mov
push
pop
dec
xor
inc
pushf
scas
and
mov
jmp
repnz
xor
add
pop
sub
mov
(bad)
mov
jne
lods
inc
js
enter
jo
sbb
push
loop
outs
je
xchg
scas
xchg
push
mov
inc
(bad)
arpl
in
sahf
loopne
std
pop
xor
add
sar
(bad)
std
add
daa
mov
dec
cmps
in
sti
jle
aaa
cmp
test
cwde
(bad)
ja
dec
clc
mov
loop
sub
push
cmp
(bad)
dec
rol
rcr
add
and
aad
jb
jge
fiadd
gs
hlt
or
push
pop
dec
lods
out
test
jbe
(bad)
retf
inc
mov
imul
push
fild
std
(bad)
repnz
loope
dec
adc
ins
jno
inc
cmp
and
shl
sbb
(bad)
in
inc
loopne
mov
and
ficom
ins
shl
pusha
fbstp
push
neg
and
adc
sub
das
inc
jp
sti
scas
xchg
sbb
jg
(bad)
xchg
das
xchg
sahf
hlt
div
add
shr
add
push
inc
jle
pusha
in
sub
xchg
cmc
sub
(bad)
lods
jmp
mov
xor
push
xchg
xchg
(bad)
mov
adc
aas
lods
scas
push
fidivr
mov
nop
jmp
retf
scas
icebp
adc
(bad)
mov
mov
enter
sbb
arpl
loope
or
sub
jp
arpl
jle
rol
or
(bad)
mov
or
xchg
jae
pop
add
or
xchg
leave
in
cli
push
mov
mov
mul
jge
mov
ret
xchg
ret
mov
das
inc
fwait
scas
add
ret
sub
dec
imul
adc
adc
push
and
mov
mul
add
ror
mov
shl
lods
or
inc
push
test
inc
sub
pop
(bad)
cmp
into
fadd
shl
neg
aaa
cmp
cmp
sahf
xlat
mov
inc
arpl
jno
mov
mov
add
cmp
xchg
jl
xor
cmp
add
and
gs
mov
stos
cdq
and
xchg
inc
jmp
call
sub
and
ja
inc
cs
xchg
add
adc
push
rcr
idiv
sbb
in
mov
(bad)
sub
fistp
jmp
sahf
lea
pop
(bad)
aad
push
or
xor
fs
retf
cmps
jmp
popf
int
mov
push
pop
pop
jmp
adc
shl
xor
mov
fwait
mov
pop
outs
aas
and
adc
out
out
lock
mov
pop
mov
mov
or
gs
push
js
dec
aam
mov
or
cmp
mov
push
lods
gs
inc
jl
push
retf
jmp
(bad)
fistp
aaa
test
dec
dec
jns
retf
mov
call
rol
jp
xchg
add
jp
int3
dec
imul
scas
sti
shl
xor
xchg
out
add
mov
mov
jb
dec
push
mov
push
call
bound
push
loop
cmp
jbe
push
xor
addr16
add
jl
and
hlt
pop
cmps
addr16
add
hlt
fimul
and
call
mov
cdq
neg
fs
fimul
mov
shl
jl
loope
add
mov
pop
lods
mov
inc
fdivp
adc
inc
adc
adc
ftst
add
(bad)
xor
jle
or
mov
out
push
push
dec
and
(bad)
outs
pop
mov
xchg
(bad)
pop
sbb
cld
(bad)
sub
xor
test
lahf
xor
inc
dec
jmp
cli
jmp
pushf
sub
pop
inc
gs
cmps
frstor
xchg
into
cld
mov
and
cmc
gs
xor
pop
and
outs
sub
out
add
mov
rcr
imul
mov
xchg
pop
dec
fisttp
and
retf
lock
call
(bad)
push
call
dec
xchg
adc
repz
enter
aaa
pusha
pop
in
mov
scas
mov
ret
fst
xor
ficomp
cmp
cld
cwde
aam
(bad)
in
xchg
adc
aam
cli
sbb
push
push
push
xchg
and
and
into
leave
dec
push
or
xchg
jnp
dec
and
push
cs
mov
cmps
pop
addr16
fistp
(bad)
xor
mov
jne
mov
sub
jl
sahf
dec
mov
(bad)
lds
mov
out
clc
or
mov
mov
lahf
shl
cmp
movs
es
push
and
aaa
dec
mov
jle
clc
into
mov
call
inc
pop
pop
add
jbe
cmps
sub
aam
and
in
cs
mov
cs
repz
test
and
pop
and
jg
in
stos
mov
dec
mov
fmul
cmp
in
sub
fisttp
lds
aas
xchg
add
in
mov
adc
stos
cmp
aad
jae
jge
pop
dec
hlt
jbe
add
mov
stos
mov
setns
cmp
cld
scas
enter
mov
push
fld
cmp
retf
icebp
push
push
push
jae
(bad)
ret
imul
and
je
mov
add
into
adc
push
mov
add
imul
lea
cmp
(bad)
mov
xor
pop
xor
cmc
(bad)
xchg
inc
call
push
loope
or
imul
ins
mov
clc
mov
inc
aad
mov
inc
jne
leave
push
mov
jle
add
sbb
cmc
retf
test
or
pop
pop
xchg
mov
push
xor
cmp
cmp
xchg
push
mov
ror
jno
add
lea
dec
loope
inc
inc
mov
pop
inc
mov
nop
out
mov
popa
fwait
call
sub
dec
sub
test
lds
and
and
out
lods
hlt
add
mov
inc
shl
ret
ins
xor
in
cmp
in
jmp
stc
pop
push
cmp
popf
and
(bad)
sbb
std
sub
cmp
int3
daa
xchg
clc
inc
mov
into
and
sub
mov
adc
mov
sets
sub
adc
mov
das
dec
mov
sbb
je
inc
and
adc
xor
push
cmp
jp
xor
and
js
arpl
sub
push
or
in
es
mov
outs
xchg
dec
(bad)
mov
push
ret
mov
and
dec
mov
(bad)
retf
fwait
das
stos
inc
push
adc
jmp
mov
inc
dec
repz
xchg
pop
cmp
dec
inc
cmps
cmp
sbb
fs
cdq
cld
aaa
jmp
jb
push
sbb
nop
les
jnp
add
movs
dec
fwait
ret
jns
(bad)
popa
repz
daa
jbe
es
retf
stc
icebp
stos
popf
data16
mov
inc
fs
dec
push
call
into
out
mov
out
mov
jge
sbb
ja
mov
sub
mov
mov
fadd
cs
sub
xchg
test
imul
popa
push
repz
mov
mov
xchg
mov
into
call
and
push
xor
icebp
jbe
loop
adc
seto
js
push
jmp
test
add
std
push
rol
scas
test
mov
retf
mul
sti
jne
and
mov
xchg
jl
dec
leave
xor
inc
jo
jge
jns
or
add
ja
sub
or
dec
ss
or
cmp
jmp
xchg
mov
scas
jle
adc
shl
jno
retf
repz
shr
pop
jns
retf
push
lahf
fadd
jns
jle
mov
mov
rol
sub
rcr
push
mov
data16
test
xchg
jb
out
pop
mov
dec
stos
adc
or
retf
or
fst
xchg
jle
es
fdivr
push
jle
cmp
lods
push
pop
rcr
adc
sbb
and
and
iret
cmp
sub
test
cwde
push
dec
cdq
out
stos
fsubr
jb
jle
outs
pop
adc
inc
adc
stos
ins
test
(bad)
fldenv
(bad)
in
scas
xor
dec
shl
aam
xor
add
jns
or
mov
push
sbb
mov
sahf
pop
xor
das
data16
mov
xchg
in
(bad)
int3
pop
and
div
jo
pop
mov
or
retf
jae
loopne
in
sub
je
(bad)
imul
jl
mov
arpl
pop
sub
fs
xchg
in
mov
xor
mov
inc
cmp
xlat
inc
inc
xchg
retf
adc
add
enter
sub
scas
or
shld
mov
mov
pop
sbb
test
mov
test
aaa
mov
retf
add
(bad)
inc
push
ret
adc
push
xor
add
mov
sub
dec
dec
push
in
dec
pop
cdq
push
jge
adc
xor
cmp
mov
jnp
push
pop
(bad)
aam
sbb
jae
mov
pop
inc
(bad)
fsubr
out
mov
mov
in
neg
ds
iret
xor
repnz
add
movs
mov
repnz
push
popf
sbb
cmp
fiadd
in
push
pop
mov
movs
inc
into
adc
inc
inc
sti
mov
mov
(bad)
xor
mov
and
push
mov
out
sub
add
jb
lock
fst
test
mov
and
shl
ins
jp
out
pop
jl
jmp
push
adc
and
xchg
pop
fisub
add
(bad)
pop
lds
sbb
xor
sub
jne
daa
mov
imul
out
jp
pop
xor
and
pop
jge
mov
dec
jae
lahf
push
shl
scas
std
mov
(bad)
sub
mov
mov
call
push
dec
in
inc
dec
cmp
sub
push
outs
sbb
cmp
das
cmp
sub
fidiv
xchg
push
outs
mov
test
jno
stos
dec
fmul
movs
xchg
int
mov
lea
popa
imul
sub
dec
adc
xchg
rcr
dec
cmp
push
sbb
in
inc
(bad)
ss
mov
xchg
rcl
stos
mov
sbb
pop
and
imul
cmc
inc
cmp
out
jg
nop
push
pop
fsub
mov
inc
ret
xor
cmp
or
and
icebp
dec
mov
add
sub
cdq
sbb
xor
stos
cwde
das
icebp
cwde
and
daa
sub
pop
adc
mov
jne
jns
loope
jecxz
xor
or
xchg
jns
xor
es
sub
push
mov
sar
fisubr
push
mov
inc
mov
mov
(bad)
out
cmc
ins
fdivr
je
call
and
pop
sub
out
and
lods
out
pushf
test
out
jle
(bad)
daa
push
shr
cwde
ins
ret
popf
or
xor
rol
xchg
ffree
jb
pop
pop
scas
jmp
xor
xor
mov
mov
imul
sub
psubb
out
inc
pop
xchg
mov
ds
dec
sbb
mov
sbb
loopne
push
dec
and
push
cmp
ins
ds
mov
aam
repnz
or
sbb
pop
pop
adc
fmul
cmp
and
pop
(bad)
nop
rcl
in
or
lods
xor
fst
es
(bad)
adc
pop
aam
jo
mov
mov
push
xor
in
sbb
in
cmps
adc
arpl
jmp
data16
xor
mov
lds
xchg
adc
jge
fldcw
and
adc
push
ins
xchg
jmp
inc
out
cmp
popf
jecxz
leave
mul
scas
sti
fadd
or
loope
jecxz
and
pop
jge
xchg
(bad)
mov
adc
call
(bad)
jmp
(bad)
sub
push
or
sbb
sbb
cmps
mov
mov
loop
dec
jmp
sbb
xchg
mov
mov
aas
mov
mov
popa
jmp
mov
mov
mov
add
cdq
lds
stos
popa
pop
adc
leave
ins
sbb
mov
adc
sub
aas
in
pop
(bad)
mov
retf
and
test
ficom
mov
jl
ror
vmread
mov
gs
cmp
mov
jbe
push
jge
jb
in
fldl2t
mov
mov
cmp
daa
inc
mov
cdq
push
dec
pop
loop
es
xor
into
cmp
retf
out
fstp
mov
jp
jmp
push
push
jecxz
dec
push
imul
add
dec
ss
call
sbb
sbb
inc
xor
dec
popf
ss
inc
sbb
pusha
cmp
mov
test
push
repnz
aad
leave
shl
push
inc
and
cmp
push
add
push
push
add
and
sbb
mov
js
cmp
fcom
cmp
xor
mov
imul
adc
mov
push
xor
or
inc
ror
sub
pop
push
jne
fild
repnz
jmp
mov
dec
xchg
jg
(bad)
fsubr
push
add
icebp
xchg
data16
push
in
push
pop
je
pushf
mov
(bad)
xor
dec
in
dec
cmp
ins
add
(bad)
pushf
mov
aaa
xor
mov
inc
jno
stos
push
cmc
xlat
call
pop
inc
pmulhw
psadbw
add
das
xor
pushf
mov
mov
jecxz
and
mov
das
in
jo
xlat
cmps
cmps
addr16
fcomp
xor
cmc
inc
xor
test
cmp
fst
push
aas
ds
push
xor
shr
xchg
sub
sbb
xor
movs
cmp
jecxz
scas
push
jg
mov
retf
cwde
push
xor
loop
cmp
dec
jecxz
and
jge
push
pop
out
xchg
xchg
cmp
add
adc
(bad)
mov
ds
xchg
and
fld
lods
dec
pop
sar
ss
add
mov
pop
jl
or
cmp
add
outs
xchg
xchg
ins
retf
or
inc
mov
mov
xor
mov
push
call
in
dec
mov
xchg
inc
jmp
sub
push
popa
add
es
mov
add
push
test
lea
imul
inc
and
xor
mov
loop
cmp
dec
retf
stos
jge
mov
test
adc
pop
iret
arpl
pusha
inc
rol
and
xor
gs
mov
cdq
adc
inc
icebp
push
sahf
sbb
push
adc
adc
fadd
push
ins
daa
cmc
sub
cmps
ror
adc
sbb
mov
push
leave
jmp
pop
mov
inc
ins
xchg
add
aaa
arpl
test
add
arpl
and
mov
add
mov
dec
inc
pop
mov
sub
push
pusha
add
(bad)
xor
and
jp
xchg
pop
lds
cmp
retf
mov
stc
mov
in
in
pop
shl
imul
in
inc
push
shl
gs
and
out
test
sbb
fcom
imul
sahf
aad
ins
push
mov
push
push
dec
test
movs
in
in
mov
loopne
adc
dec
inc
sbb
inc
and
jmp
adc
retf
mov
dec
cwde
adc
and
xchg
popa
add
daa
aaa
sub
je
mov
jecxz
test
dec
popf
xchg
addps
hlt
pushf
xchg
fld
dec
xchg
cmp
dec
(bad)
sub
jnp
sbb
xchg
jb
jl
sub
jl
leave
fst
das
push
sbb
inc
jb
test
pop
mov
mov
push
pushf
stos
add
test
xlat
(bad)
je
aam
loope
loopne
inc
jmp
sbb
xchg
lahf
lahf
mov
dec
das
ret
dec
and
mov
sub
jmp
mov
aaa
or
or
jge
lods
mov
and
dec
retf
cld
jmp
lock
loopne
adc
xor
xor
or
outs
cmp
jmp
sbb
dec
jg
fcom
fld
adc
test
leave
mov
aaa
mov
(bad)
outs
or
cdq
and
xchg
add
lods
out
xchg
ins
leave
sbb
nop
sub
sbb
or
(bad)
cli
dec
push
push
inc
lods
sub
das
and
call
mov
cs
cwde
jl
sbb
pop
inc
mov
dec
xchg
jmp
xor
mov
inc
in
dec
sbb
jae
pusha
or
mov
out
test
mov
movs
arpl
(bad)
jg
fnstcw
inc
or
inc
test
inc
lock
cld
xor
xlat
cli
lods
fidivr
mov
cdq
hlt
shl
jle
inc
xlat
cld
adc
mov
and
jecxz
xchg
ja
(bad)
lock
xor
jbe
pop
mov
mov
cmp
cs
(bad)
jno
and
dec
in
fld
popa
fidiv
clc
sahf
repz
je
cwde
fldenv
test
lock
or
add
fisub
mov
fist
imul
pop
movs
mov
(bad)
or
movq
mov
pop
sti
sub
(bad)
sbb
add
push
jb
ins
loope
xor
out
pushf
and
xor
add
into
(bad)
hlt
sti
cmps
ins
imul
inc
pop
pop
js
mov
sub
sbb
out
xor
int
pop
clc
and
pop
xchg
cdq
mov
inc
stc
xacquire
rcr
jae
sbb
(bad)
fld
data16
jae
ins
adc
test
jbe
fst
dec
mov
sub
and
outs
outs
cmp
xor
push
pop
fisubr
rcr
(bad)
sahf
jmp
ins
cmc
fdivr
test
jp
lods
cmp
ret
cmp
out
loop
fucomp
call
out
sub
mov
fisttp
ins
or
pop
mov
pop
sar
dec
pushf
enter
or
repnz
mov
in
cmp
push
push
in
mov
dec
les
add
mov
pop
inc
mov
cli
push
inc
shl
repnz
mov
lahf
rcl
xchg
test
pop
pop
inc
or
add
ret
das
scas
aas
mov
movs
or
call
xchg
add
push
popf
jb
loope
mov
pop
sbb
movs
or
sti
sub
xchg
inc
imul
scas
fs
mov
cmp
out
sbb
inc
push
mov
add
xor
addr16
jecxz
jp
mov
sbb
sahf
mov
ins
mov
shl
jnp
xor
and
mov
loop
fnstenv
icebp
sti
add
add
add
lods
mov
pop
lods
xchg
push
std
cmp
aad
popa
test
out
push
inc
mov
xchg
adc
mov
push
loopne
xlat
fnstsw
loopne
pop
xchg
lahf
or
scas
test
sub
(bad)
jns
xchg
out
inc
pop
mov
test
lahf
xchg
mov
loope
mov
xor
cdq
fadd
mov
cmp
xchg
data16
lock
iret
mov
js
repz
jg
sbb
mov
and
adc
mov
push
fstp
imul
aam
inc
(bad)
(bad)
xchg
dec
int
dec
inc
jo
scas
data16
cmps
or
xchg
cmp
sbb
lahf
rcr
sbb
xchg
ja
mov
(bad)
icebp
ja
popf
icebp
neg
xchg
inc
imul
cmps
jnp
lock
das
or
(bad)
cdq
cmp
sbb
add
cmps
sbb
sub
inc
scas
jo
lahf
test
dec
aam
jmp
retf
enter
add
aad
jmp
loope
ds
push
daa
pusha
add
cwde
adc
cmp
ja
(bad)
and
les
mov
and
ret
push
sub
dec
fimul
dec
repnz
hlt
mov
pop
stos
sub
or
aas
rcl
or
mov
outs
mov
std
int
push
mov
in
mov
jns
js
pop
data16
mov
in
dec
xchg
int
loope
ret
mov
or
mov
in
lock
add
push
(bad)
or
xor
pop
inc
(bad)
or
ins
(bad)
ret
mov
xchg
dec
leave
(bad)
dec
xor
sbb
cmp
nop
ins
jno
in
or
jl
pop
push
nop
jecxz
adc
mov
dec
not
push
adc
push
test
push
sub
mov
in
cld
ss
and
dec
push
es
ja
sahf
push
inc
dec
lds
jno
dec
and
loop
outs
mov
cs
lods
(bad)
fmul
and
dec
sbb
jb
retf
fnstenv
or
pop
in
add
xor
jb
(bad)
fyl2x
sub
lods
sbb
aad
dec
ret
aaa
lods
loope
add
xchg
in
pop
xchg
sbb
in
and
call
mov
scas
push
mov
fnstcw
sub
or
sbb
or
fcom
push
xlat
pop
std
rcl
(bad)
adc
fcmovnu
(bad)
(bad)
mov
ins
cmp
test
dec
pusha
or
and
xor
scas
bound
fbstp
mov
in
shld
(bad)
fild
sub
icebp
jp
pop
pop
xlat
stc
in
frstor
not
aas
rcr
ja
sbb
mov
stos
jo
(bad)
jle
xor
mov
mov
js
daa
xor
xchg
inc
aas
out
xchg
or
rcr
ja
fs
not
bnd
dec
daa
xor
pop
and
mov
xlat
aad
ret
inc
pop
inc
iret
test
(bad)
xor
jae
xchg
add
lods
ds
std
sbb
add
sbb
pop
mov
(bad)
sahf
jo
add
es
sub
mul
push
lahf
or
sub
xchg
imul
pop
scas
mov
outs
dec
inc
sub
push
and
mov
inc
inc
sbb
adc
sub
arpl
pop
sbb
jmp
mov
mov
or
xchg
repz
xor
ret
jns
les
js
loopne
mov
mov
lea
add
sbb
js
fmul
in
inc
scas
sbb
sbb
ret
and
mov
lods
mov
or
mov
mov
and
test
outs
cld
dec
call
dec
inc
aam
std
rol
les
adc
int3
inc
lock
neg
mov
or
imul
pusha
js
aam
into
and
mov
mov
int
jbe
dec
or
jb
inc
adc
inc
or
mov
out
push
stc
and
push
cmp
adc
and
or
std
mov
repz
xor
jg
popf
sub
rcr
pop
fidiv
ss
(bad)
fnstcw
or
lods
rol
sub
inc
outs
xchg
add
and
mov
loopne
inc
sahf
xchg
xchg
mov
stc
jne
enter
fs
inc
cmp
mov
fiadd
inc
mov
inc
aad
(bad)
push
arpl
pop
jnp
ret
mov
cmp
hlt
jmp
jp
mov
fsub
rcr
pop
xor
popa
push
ret
gs
and
mov
into
not
ins
je
stos
sub
pop
pop
lock
aaa
sub
loopne
mov
mov
pop
mov
jnp
(bad)
cmp
call
das
cmp
cmp
(bad)
and
scas
das
(bad)
mov
scas
dec
sub
xchg
movd
mov
nop
int3
out
(bad)
xchg
xchg
mov
pop
(bad)
pop
push
dec
popf
test
pop
xchg
xchg
and
jo
jge
mov
aaa
fisttp
loopne
xchg
adc
xchg
xchg
pusha
inc
mov
retf
jno
fsin
sar
push
inc
scas
shr
and
pop
(bad)
xlat
pop
jb
nop
xor
add
hlt
mov
dec
push
sbb
mov
or
repz
fs
mov
mov
jle
fsubr
cmp
xchg
retf
adc
movs
ret
pop
sub
jns
sub
fcomip
push
daa
jle
out
jl
push
repz
mov
xchg
push
stos
movs
jae
mov
mov
fnstcw
cmp
bound
push
push
push
xchg
xor
and
aas
clc
lahf
(bad)
mov
dec
jmp
or
cmp
mov
and
clc
popa
mov
int3
icebp
sub
and
xor
addr16
test
loopne
jp
ficomp
test
jmp
mov
lods
cld
addr16
mov
ja
call
jp
or
mov
loope
mov
(bad)
std
mul
push
mov
cmp
loopne
cmp
pop
mov
sbb
into
inc
dec
pop
ja
adc
sub
adc
or
xlat
mov
pushf
cmps
pop
dec
mov
jp
cmc
mov
push
adc
add
push
lods
pop
(bad)
fst
mov
and
(bad)
inc
dec
inc
fmul
out
mov
(bad)
pop
pop
loopne
inc
ret
dec
or
sti
or
retf
mov
push
fdivr
jo
lock
scas
mov
xchg
ins
inc
cmp
aaa
lock
or
ss
lea
mov
fnsave
mov
fild
jmp
fld
fcom
lods
sub
pop
mov
push
inc
shr
sbb
mov
es
xchg
fld
jecxz
(bad)
int3
out
fisttp
lods
or
icebp
int3
jg
cli
rol
inc
xchg
loopne
out
mov
fdivrp
dec
outs
inc
push
sbb
ins
mov
pop
sbb
jecxz
retf
sbb
push
out
cdq
movs
adc
shr
inc
and
dec
xchg
fld
mov
inc
cmps
mov
xchg
pop
pop
mov
loopne
(bad)
cmp
stos
mov
imul
dec
test
add
cmp
xchg
shr
adc
jns
nop
dec
mov
(bad)
std
jle
scas
scas
cmp
fsub
jmp
mov
sub
inc
adc
mov
inc
mov
jnp
mov
inc
loope
jmp
xchg
jle
fwait
jno
int3
adc
ror
adc
scas
sub
scas
das
or
and
push
cmp
mov
idiv
sahf
out
repz
adc
xchg
add
add
adc
jmp
push
dec
mov
xor
dec
jp
add
pop
push
rol
(bad)
adc
pop
cli
adc
fwait
mov
pop
enter
inc
leave
retf
(bad)
scas
xchg
in
mov
test
cld
cwde
mov
jno
sbb
test
pop
adc
sahf
xchg
mov
(bad)
imul
aad
pop
loope
outs
inc
and
dec
in
dec
mov
mov
add
pop
sbb
lods
push
in
mov
pop
cmp
(bad)
imul
aam
in
jl
adc
js
jmp
mov
pop
retf
inc
(bad)
jmp
pop
cmp
inc
cdq
repnz
add
mov
sbb
mov
loop
push
(bad)
and
addr16
cli
push
dec
stos
cmp
pop
(bad)
push
cmc
call
jmp
cmp
in
pop
fimul
arpl
and
call
(bad)
push
jnp
clc
out
mov
mul
xchg
cmps
pcmpeqd
dec
mov
sbb
jmp
xor
sub
inc
(bad)
int
mov
inc
mul
adc
jnp
test
jle
icebp
addr16
scas
sub
cmp
mov
inc
test
adc
nop
(bad)
in
test
lds
pop
jno
ds
iret
mov
add
mov
cs
push
sahf
pop
adc
cmp
or
cmc
jbe
in
pop
add
sbb
retf
ss
mov
mov
jns
fisttp
mov
and
add
mov
adc
inc
icebp
jmp
test
mov
mov
push
mov
pop
push
iret
or
xor
shr
outs
fcmovbe
(bad)
mov
adc
sbb
cmps
les
sbb
inc
leave
js
push
aad
jg
push
fstp
pop
inc
xor
pop
pop
push
mov
cwde
push
(bad)
ins
pop
aam
out
mov
scas
fldenv
jae
clc
push
dec
aas
leave
aas
adc
xchg
push
gs
mov
jle
push
add
adc
pop
mov
dec
mov
ret
push
push
sbb
dec
sub
movzx
xchg
jle
(bad)
jp
xchg
pop
icebp
pop
call
mov
sub
test
jmp
sbb
call
daa
test
inc
imul
sub
fwait
in
and
jbe
xchg
aaa
inc
mov
mov
xchg
inc
iret
call
jle
stos
mov
adc
test
pop
jecxz
xor
test
push
xchg
adc
pusha
iret
pop
test
sub
hlt
dec
push
pushf
push
xchg
fbld
or
rcl
je
test
dec
jmp
aaa
pusha
ret
xor
not
js
push
mov
jp
cwde
xor
and
sub
sbb
bound
push
inc
jle
hlt
arpl
push
adc
mov
into
in
jno
sbb
push
test
mov
fs
jnp
add
imul
lods
and
loope
cmp
lea
fmulp
fsubr
test
dec
mov
inc
popf
dec
push
scas
ror
test
popf
xchg
jmp
jmp
mov
jae
jmp
jmp
add
inc
lea
cld
mov
sar
push
xlat
repnz
nop
popf
jne
mov
lock
(bad)
adc
add
cmp
jp
inc
and
cmp
add
mov
add
mov
test
cmp
mov
mov
stos
and
and
mov
addr16
xchg
iret
aas
cmc
imul
jmp
push
in
xor
jge
sub
dec
mov
dec
cmps
(bad)
and
in
sbb
inc
sar
add
lods
mov
repz
gs
popa
mov
cmp
aad
and
adc
test
enter
shl
or
outs
xor
fsubr
cmp
into
sub
cmp
sbb
dec
push
fcomi
ss
lds
sar
(bad)
cmps
cld
fcomi
fdiv
jae
inc
shl
pusha
push
cmc
jns
loope
and
fs
jnp
(bad)
sub
adc
mov
cmp
jo
das
mov
fadd
and
add
adc
lods
xchg
int
xor
and
cmps
(bad)
imul
test
dec
xchg
push
stc
sub
call
aaa
iret
cli
sub
add
and
inc
adc
test
push
push
mov
(bad)
xchg
mov
cmp
xchg
jno
cmc
pusha
out
cld
xor
add
lods
aad
xchg
mov
maskmovq
not
inc
or
jae
into
mov
daa
mov
fcomp
add
ds
clc
jle
jg
jb
call
pop
shl
add
outs
push
xor
call
mov
(bad)
xchg
mov
scas
lock
inc
mov
or
stos
stos
pop
scas
fcomp
rcr
xchg
call
push
pop
sub
mov
sbb
mov
retf
mov
mov
pushf
pop
in
xor
imul
cmp
loop
test
(bad)
dec
dec
mov
xor
(bad)
adc
mov
(bad)
int3
or
sub
stos
stos
or
enter
xchg
fisubr
fs
shr
cmc
xor
mov
pop
or
adc
repnz
std
jnp
bound
lods
leave
mov
sti
xchg
loopne
xor
repz
popf
outs
ret
and
enter
je
jmp
in
(bad)
popa
aad
dec
fiadd
mov
mov
in
and
jmp
cs
adc
(bad)
adc
outs
mov
jmp
push
(bad)
cli
inc
rcr
into
sub
clc
adc
leave
sub
adc
push
inc
sub
sbb
add
lahf
scas
lods
xchg
xchg
out
ja
repnz
lock
push
aad
jge
inc
(bad)
and
nop
fnstsw
add
jg
and
call
sbb
sub
sub
jne
xor
arpl
sbb
(bad)
fdivp
dec
out
mov
test
xchg
fsubr
sub
loopne
pop
jbe
or
push
icebp
push
push
inc
in
out
retf
jecxz
loop
jne
cmc
push
add
cld
push
nop
scas
ret
scas
mov
rol
pop
std
pop
or
test
mov
mov
sub
fs
mul
sar
push
jg
int3
add
inc
ins
cwde
sbb
call
xor
stos
cmp
fdiv
inc
(bad)
sub
and
seta
pop
leave
cmp
lods
dec
xor
dec
(bad)
pop
xchg
(bad)
imul
or
or
ret
movsx
pop
xchg
or
retf
out
xchg
sbb
adc
add
add
(bad)
in
(bad)
sub
and
mov
pop
(bad)
cmp
outs
sbb
mov
pop
xchg
call
in
cmp
jmp
out
pop
jbe
leave
jl
or
xor
leave
or
inc
add
fiadd
or
loop
retf
mov
cdq
std
add
retf
cmp
cmp
dec
es
mov
mov
les
inc
in
pop
cld
scas
xor
pop
in
test
pop
mov
jecxz
ficomp
fmulp
loopne
out
ja
mov
jb
mov
or
rcl
inc
gs
xor
clc
mov
and
hlt
fadd
adc
test
test
pop
jbe
sub
out
push
sbb
(bad)
xor
jns
xchg
push
pop
popf
pop
popf
sar
loop
cli
jo
cmp
sbb
or
mov
or
push
xchg
sbb
mov
mov
fild
xchg
aas
add
or
loope
jno
inc
push
in
xchg
dec
dec
add
stos
outs
add
dec
ins
sbb
sub
div
dec
int3
in
push
cmp
mov
dec
mov
stos
ret
add
out
adc
inc
push
pop
aam
leave
stos
mov
popa
repnz
stc
out
sbb
or
leave
(bad)
daa
push
arpl
call
ror
adc
or
test
inc
sub
xchg
test
sub
mov
stos
test
mov
jmp
(bad)
push
inc
leave
inc
mov
sub
adc
test
rol
dec
lods
in
xor
nop
clc
popa
mov
xor
pop
les
mov
dec
(bad)
mov
dec
addr16
mov
inc
inc
cmp
dec
stos
jg
sbb
sar
xchg
dec
fsub
mov
gs
pop
add
and
inc
bound
loop
mov
and
push
retf
dec
or
xchg
and
or
dec
mov
loopne
pop
jp
inc
xor
or
sub
daa
inc
or
mov
sub
dec
jp
cmp
jo
add
mov
push
or
jmp
add
xor
lea
cmp
outs
mov
add
popf
stos
jo
lahf
push
adc
pop
or
ret
loop
aad
and
std
pop
clc
rcr
call
in
cmps
sub
out
int
ja
aad
jnp
imul
xchg
dec
movs
std
sahf
pop
sub
push
stos
sbb
mov
addr16
mov
test
daa
xor
ds
add
xor
dec
jmp
jmp
mov
inc
cld
call
hlt
xlat
in
mov
inc
mov
dec
pop
cdq
xchg
mov
mov
pop
data16
dec
pop
and
sahf
and
shl
inc
fsub
mov
and
or
sub
arpl
scas
dec
or
push
xor
push
adc
in
mov
jle
or
fstp
cmp
(bad)
push
pusha
stos
mov
dec
dec
lds
jo
add
outs
or
lods
jg
sahf
push
mul
imul
cli
fsubr
sub
cli
int
(bad)
dec
int
aaa
push
(bad)
fisttp
ficom
lods
xor
sbb
arpl
xchg
push
movs
xor
es
mov
sahf
mov
and
push
cwde
inc
test
ins
mov
jp
dec
loopne
lods
movs
mov
add
cmp
mov
adc
sbb
outs
xor
fimul
es
dec
sub
and
or
add
cmp
jp
emms
fmul
arpl
fst
imul
int3
mov
repz
inc
inc
sbb
jns
inc
xor
mov
and
cmp
lock
(bad)
addr16
adc
outs
cld
mov
iret
dec
out
mov
movs
adc
cmp
das
add
ror
xchg
mov
push
rol
lods
jecxz
xor
mov
push
dec
loop
lods
add
add
js
push
mov
ret
sahf
jmp
in
int3
xchg
xchg
call
or
sub
push
out
push
lock
xor
mov
mov
jmp
mov
rep
(bad)
cdq
xchg
push
(bad)
mov
sub
add
(bad)
jbe
std
inc
mov
mov
cmp
sar
cmp
mov
inc
mov
nop
xchg
sub
adc
cmp
pusha
mov
mov
adc
mov
xchg
loope
stc
fsubr
jmp
std
pushf
xchg
adc
jb
xlat
ficomp
adc
mov
jbe
jb
mov
push
jo
jb
dec
js
mov
fwait
mov
ds
out
mov
sbb
retf
into
adc
test
adc
cld
ret
sub
pop
add
mov
scas
dec
sbb
leave
jle
adc
fistp
enter
hlt
jb
adc
pop
shl
stos
push
shr
push
mul
mov
in
add
ret
lahf
jnp
pusha
push
mov
mov
ss
ja
sub
mov
adc
inc
dec
and
and
sbb
push
mov
sub
aad
ror
pop
ficomp
js
cmp
mov
call
adc
mov
popa
das
mov
cmp
mov
and
je
sahf
fisub
push
xchg
loope
pop
push
lock
or
lock
add
mov
cmp
xor
stos
(bad)
xchg
ja
fisub
les
adc
xor
xchg
int3
loopne
push
xor
xor
mov
imul
xlat
push
ror
test
inc
shr
xchg
cmc
dec
cld
sbb
push
jae
sbb
leave
mov
lds
test
mov
sbb
sbb
dec
into
jle
loopne
loopne
sub
inc
mov
mov
arpl
and
mov
sti
das
sbb
test
mov
pop
mov
sbb
sub
(bad)
push
dec
(bad)
movs
push
push
mov
jmp
fcom
jle
rcr
xor
adc
shr
adc
retf
mov
imul
and
out
and
stos
and
cmp
pop
jle
repz
dec
movs
inc
imul
(bad)
xor
imul
sbb
pop
lock
jl
ret
and
lahf
stos
fld
test
clc
aam
inc
sub
sub
xor
xlat
adc
xor
cmp
out
mov
jl
rol
rol
(bad)
mov
xor
inc
sbb
push
shld
dec
jmp
adc
sub
push
leave
dec
lock
jno
scas
int
ja
jge
hlt
pop
adc
lock
and
xchg
stc
outs
jo
add
mov
push
cmp
mov
xlat
in
sbb
push
loope
repnz
es
mov
jno
nop
popf
inc
mov
mov
popa
push
popa
jg
(bad)
stos
jae
div
pop
cmp
not
pop
push
imul
mov
mov
push
ins
mov
inc
push
int3
fdiv
aad
inc
(bad)
mov
imul
into
loope
retf
push
dec
scas
mov
(bad)
push
jge
pop
leave
xchg
jnp
cli
repnz
idiv
push
jmp
add
cmp
cmp
jnp
cld
pusha
xor
stos
mov
and
dec
pop
push
in
jnp
pop
jo
sti
stc
cmp
movs
clc
or
test
inc
sbb
retf
pop
iret
mov
pop
ret
cmp
daa
or
sbb
pop
(bad)
outs
sbb
push
ret
push
sub
clc
daa
(bad)
sbb
ss
out
mov
and
fs
xor
or
fisubr
aaa
add
sub
imul
cs
ins
xchg
or
gs
xchg
push
sub
pop
add
xchg
inc
ja
imul
push
mov
mov
sub
jp
pop
xor
cmp
cmp
std
stos
xor
push
loop
stos
sti
pop
xor
jns
outs
aas
jp
push
and
cmp
inc
mov
je
and
das
pop
lahf
mov
mov
int
getsec
bound
test
push
rcr
(bad)
jmp
int3
ds
dec
outs
fs
dec
paddsw
mov
iret
inc
fadd
std
aam
xchg
mov
adc
hlt
push
or
aam
cli
pop
aad
loop
xor
dec
jl
stos
mov
xor
jl
mov
icebp
adc
and
popa
mov
or
dec
data16
cmp
inc
icebp
shr
fimul
or
pop
dec
jp
push
imul
xlat
add
ret
imul
and
addr16
mov
jmp
pop
mov
mov
mov
cmp
inc
xchg
mov
pop
add
rcl
out
jle
mov
mov
pop
addr16
pusha
adc
or
(bad)
mov
jns
dec
jge
and
xchg
outs
pop
xchg
push
push
fcomi
push
mov
cmp
push
jmp
cmp
pop
pop
in
mov
jo
addr16
pusha
xor
cmp
push
sbb
scas
aam
xor
xchg
mov
pop
scas
cmps
mov
pop
daa
jns
xor
out
sub
lods
or
xchg
inc
lea
lods
mov
pop
mov
adc
add
mov
pop
pop
(bad)
shl
call
(bad)
sysenter
jle
mov
jg
aaa
dec
push
inc
sbb
(bad)
aam
(bad)
mov
cwde
das
mov
pop
mov
fidiv
das
mov
arpl
xchg
aaa
pop
xor
xor
inc
inc
xlat
mov
popf
pushf
push
sbb
pop
lock
imul
je
xchg
sbb
(bad)
or
nop
shufps
int
cmps
xchg
mov
out
dec
pop
nop
push
push
mov
push
mov
inc
pop
mov
jmp
into
inc
jmp
scas
sub
cmp
jae
pop
retf
shrd
sbb
jle
mov
jbe
jae
call
and
jnp
int3
add
mov
sub
pop
and
push
push
fst
mov
shr
mov
add
sub
ffreep
add
pusha
add
movs
mov
xchg
enter
not
ins
fistp
push
cmp
mov
imul
sub
pushf
pop
fbld
or
and
mov
inc
xchg
dec
movs
mov
mov
xor
(bad)
cli
out
sub
lds
mov
mov
mov
mov
in
jb
imul
dec
sbb
xor
push
mov
rcl
ins
or
pusha
jge
xchg
xlat
rcr
cmp
mov
retf
loop
nop
or
xor
aaa
push
std
cs
test
add
push
mov
cmps
add
(bad)
pop
mov
jmp
push
xchg
sbb
push
js
cmp
mov
aam
inc
sub
test
lods
mov
and
and
mov
fisub
mov
pop
icebp
ret
cs
ins
sub
addr16
ud1
mov
pop
xchg
inc
xchg
cwde
jb
outs
or
mov
dec
mov
push
and
jmp
inc
lea
loop
mov
into
ret
or
int
sbb
lods
adc
mov
sub
lods
cwde
cmp
fist
loop
mov
aam
aas
iret
pop
inc
mov
(bad)
jns
imul
xchg
dec
jae
sub
jge
pop
add
xor
sub
test
mov
mov
xchg
inc
jecxz
neg
sub
aad
adc
or
mov
xor
scas
imul
push
outs
popa
je
jnp
gs
fstp
mov
inc
sbb
fdivrp
test
pop
add
mov
mov
inc
fnsave
push
push
cmp
mov
lea
pop
test
xchg
test
mov
dec
mov
or
das
std
pop
mov
add
and
(bad)
call
in
ret
or
jmp
stc
xor
inc
xor
(bad)
jecxz
and
xchg
xchg
jnp
pushf
adc
push
dec
sub
push
bound
imul
movs
cpuid
and
fcomp
loop
shr
xlat
dec
fcom
mov
mov
sbb
mov
xchg
inc
clc
in
adc
jae
inc
add
call
shr
push
cmps
xchg
es
sti
add
jb
mov
pop
sbb
ja
pop
cmp
and
adc
inc
push
xchg
ins
mov
add
jl
repz
out
mov
imul
popf
pop
or
imul
sbb
xor
push
loopne
sub
mov
xchg
cmp
outs
ds
test
or
lahf
(bad)
dec
sub
int
ja
sbb
mov
jg
push
adc
push
scas
mov
ja
scas
jno
mov
fisubr
mov
fcomp
push
pop
ficomp
dec
mov
mov
nop
xchg
ja
pop
cs
int
push
adc
fdivr
cld
add
mov
sbb
mov
ret
pop
xor
dec
repz
lahf
inc
test
(bad)
lea
in
cld
adc
stos
jmp
aam
push
scas
mov
xchg
xchg
sub
retf
add
(bad)
adc
mov
aad
xor
adc
xchg
test
inc
inc
aaa
ins
or
mov
stc
sbb
ins
std
sub
sub
sbb
push
cld
xchg
xor
test
sbb
inc
cli
addr16
jl
ss
popa
or
scas
ds
repz
mov
xchg
jb
push
xor
les
int3
inc
dec
sub
mov
movs
sar
ins
fst
(bad)
stos
jbe
cmp
shl
out
leave
xchg
sbb
jg
mov
push
stc
cmps
mov
jmp
jle
jl
call
and
cmp
or
ins
stos
iret
sti
outs
or
mov
jg
ss
std
ja
mov
(bad)
(bad)
ja
loopne
sub
hlt
xor
test
bound
iret
out
scas
inc
js
(bad)
out
ins
xchg
mov
hlt
out
xchg
test
sub
out
les
call
xchg
or
iret
adc
cmps
je
movs
mov
shl
and
push
aaa
repnz
sbb
sub
fild
sub
pop
mul
stc
es
(bad)
mov
inc
in
push
outs
jb
loope
sahf
movs
gs
mov
jge
and
sbb
loopne
pop
sbb
call
test
sbb
mov
xchg
lock
xor
fdivr
cmps
and
dec
inc
and
cmps
sbb
mov
out
fmul
jp
or
sbb
mov
cwde
jnp
pop
adc
and
sbb
mov
xor
mov
loope
mov
jg
and
mov
pop
movs
pop
stos
(bad)
jle
ss
call
xchg
jle
mov
hlt
xchg
pop
into
fistp
clc
test
or
mov
xor
xor
and
(bad)
ret
mov
xor
ins
test
sub
inc
inc
cmps
xchg
xchg
jg
add
lea
push
mul
pop
cmps
add
mov
jle
pop
test
mov
dec
retf
dec
movs
(bad)
jg
jae
leave
adc
push
adc
mov
jns
out
inc
xchg
push
pop
(bad)
repz
(bad)
ins
adc
nop
or
outs
ins
push
pop
lods
add
in
mov
mov
mov
cmp
mov
das
popa
ins
mov
push
in
mov
and
and
mov
jnp
outs
stc
mov
test
sbb
add
mov
push
out
mov
in
jecxz
je
ins
jnp
das
or
adc
jne
xor
dec
xor
pop
pop
ficomp
movs
mov
push
sub
dec
sub
neg
lods
ins
addr16
test
outs
(bad)
fnstcw
xor
add
popf
sub
mov
sbb
mov
jge
(bad)
cmp
jle
or
and
and
push
xor
call
call
push
push
inc
(bad)
js
stos
mov
neg
retf
xor
jmp
lds
add
bound
push
ja
xor
and
loop
mov
popf
add
jmp
push
bound
loope
enter
xlat
xchg
add
ss
push
ins
retf
cmc
or
dec
pop
pop
mov
sub
add
xor
xor
imul
fadd
xchg
adc
loop
cmps
add
(bad)
lock
pop
mov
sub
stc
sar
push
cmp
es
xlat
test
pop
xchg
sbb
push
mov
xor
xchg
cmps
lds
lahf
loope
(bad)
mov
xchg
xchg
popf
movs
xor
(bad)
jns
sbb
mov
cmp
adc
mov
mov
mov
push
int3
inc
push
lds
or
cmp
out
cmp
mov
jmp
daa
xor
mov
out
or
movs
cmp
es
xchg
lock
bound
xchg
(bad)
mov
mov
pop
inc
(bad)
mov
push
and
mov
outs
xor
mov
hlt
in
adc
fmul
mov
imul
stc
(bad)
addr16
(bad)
cmp
push
cs
xor
sub
pop
mov
mov
or
jb
(bad)
mov
jmp
dec
icebp
mov
sub
retf
outs
jle
retf
dec
mov
mov
dec
test
fs
in
ficom
popf
push
clc
pop
out
and
ss
push
push
pop
das
test
stc
not
ds
stos
mov
jo
and
jb
inc
test
jno
in
pusha
inc
or
aaa
mov
push
scas
sub
fbstp
js
adc
xor
xor
test
lods
mov
gs
scas
sbb
icebp
mov
out
mov
mov
leave
mov
lods
sub
daa
dec
push
repz
fistp
adc
xor
fiadd
daa
stos
nop
or
push
aas
cmp
(bad)
push
aam
test
pusha
jmp
jecxz
xchg
pop
xchg
mov
pop
repz
imul
mov
add
mov
fwait
push
jge
cwde
fisub
jb
add
adc
and
jge
shl
and
shl
loopne
push
fbld
mov
stos
(bad)
pop
into
push
jne
test
add
and
mov
push
out
jns
jmp
pop
and
sub
jo
dec
fldenv
pusha
fwait
repnz
in
push
mov
je
and
jo
sbb
nop
jae
or
jns
std
xchg
inc
lods
add
test
push
in
bound
push
cs
cmps
stos
cdq
xlat
xor
mov
sub
pop
fwait
pop
mov
mov
jl
adc
push
fsub
sbb
and
cmp
stc
loop
loopne
inc
out
sub
adc
shl
int
mul
mov
retf
xchg
push
dec
leave
inc
repnz
jmp
out
sti
xor
arpl
inc
arpl
scas
mov
jmp
mov
jne
cmp
jecxz
test
pop
and
shl
and
dec
into
cld
mov
and
mov
mov
sbb
stos
int3
rcr
setae
xchg
sub
mov
sti
dec
jne
fisttp
xchg
sub
dec
into
out
out
jb
sahf
lea
mov
xchg
pop
inc
adc
sbb
cmp
jl
call
sub
push
fwait
cmps
sub
push
jae
retf
outs
push
xlat
xchg
sub
jbe
and
test
xor
push
push
pop
ror
jecxz
gs
(bad)
push
ss
cmp
jmp
sbb
jmp
jne
or
iret
dec
pop
pop
add
mov
addr16
add
ins
push
pop
push
frstor
cwde
inc
test
call
mov
nop
(bad)
call
in
dec
(bad)
movs
cmps
inc
sar
cdq
dec
mov
fsubr
and
rol
inc
fdiv
jl
jge
das
inc
lock
or
in
movs
and
lods
lea
push
xchg
(bad)
or
(bad)
xor
push
jle
push
xchg
(bad)
push
test
sub
fstp
xchg
rol
arpl
imul
sar
pop
xor
into
cmps
adc
dec
sbb
es
push
mov
xlat
jle
mov
punpckhdq
mov
inc
sub
mov
lahf
sbb
in
loopne
hlt
fdivr
jmp
es
mov
mov
inc
lds
push
rcl
push
gs
scas
lds
daa
push
pop
idiv
aaa
xchg
stos
int3
lahf
sar
loope
xor
dec
in
fst
xchg
das
leave
(bad)
cdq
cmps
jns
add
add
cmp
sahf
in
stos
and
out
repz
jae
sbb
(bad)
jge
in
sbb
test
or
mov
pop
jle
mov
std
mov
push
fldcw
dec
movs
sbb
(bad)
adc
mov
cmovp
call
xchg
ss
scas
dec
mov
and
xor
or
leave
pop
mov
je
fst
dec
cmc
fisttp
sub
outs
or
jmp
adc
int
out
into
les
leave
push
adc
sub
addr16
out
popf
mov
out
adc
loope
xchg
idiv
enter
loop
and
mov
sub
pop
retf
inc
add
pop
leave
fs
xchg
push
push
ins
or
icebp
mov
ret
and
pushf
or
add
pop
push
dec
push
mov
push
add
aaa
(bad)
pop
lahf
ins
mov
mov
popf
retf
mov
dec
aam
xchg
sub
and
jno
dec
push
push
pop
shr
loopne
mov
std
sbb
test
mov
dec
mov
std
mov
pop
inc
ss
loope
sbb
sbb
jge
js
call
sbb
push
stos
fidivr
stos
jmp
lahf
xchg
aam
mov
or
inc
adc
mov
inc
push
sbb
adc
mov
test
sbb
scas
(bad)
pop
mov
bound
and
ds
out
sahf
imul
test
cmp
mov
mov
call
pop
enter
xor
inc
mov
out
sub
bound
jns
mov
cmc
jge
mov
lea
inc
dec
daa
cmp
je
test
jecxz
jecxz
in
fld
std
call
pop
xlat
out
clc
jnp
push
stos
pop
cmps
cmp
fdiv
and
call
lds
push
cld
into
xchg
sub
adc
out
je
sbb
das
jae
mov
cs
sahf
int
ret
pop
add
and
and
jbe
jbe
push
cdq
test
push
xrelease
stos
and
fs
sbb
jmp
cs
sbb
dec
(bad)
fist
pusha
setns
pop
mov
jmp
xor
popf
ret
mov
push
cmp
mov
lea
mov
lds
mov
adc
push
lahf
xchg
xor
jnp
les
nop
das
cmc
test
in
in
push
sahf
inc
into
xor
or
xlat
and
mov
cmp
push
hlt
popa
inc
mov
push
pop
rcl
(bad)
lods
les
pop
dec
(bad)
into
or
rol
jg
icebp
mov
dec
cmp
in
lahf
jbe
xor
mov
jg
je
mov
std
sbb
push
jae
leave
fcom
jl
sti
jb
test
int
cmp
xchg
es
es
(bad)
jp
jnp
sbb
xlat
adc
int
addr16
push
loope
js
mov
ins
ficomp
dec
push
pcmpeqw
lods
popa
cli
(bad)
movs
add
sbb
(bad)
cmps
cmp
jl
popf
div
movs
cs
cmp
jbe
dec
jecxz
mov
xor
mov
retf
test
sub
jnp
rcl
adc
adc
call
pop
jp
sub
sub
and
adc
(bad)
cmc
adc
jmp
in
faddp
jmp
aaa
mov
sbb
pop
dec
sbb
cmp
cmp
pop
scas
push
iret
and
push
shr
pop
lods
push
inc
call
sbb
call
in
mov
pop
leave
xchg
cmp
les
bound
mov
and
or
dec
test
cmp
mov
outs
fisub
jno
and
not
inc
sub
outs
inc
stos
std
fdiv
mov
int3
inc
jne
shr
outs
imul
retf
dec
cmp
inc
lods
cmp
cwde
pop
mov
aas
dec
mov
add
jmp
xchg
xchg
cmp
sbb
cmp
cld
sar
sub
aad
or
fmul
mov
out
out
xchg
(bad)
dec
bound
pop
xchg
add
in
rcl
push
add
or
xchg
aam
dec
aaa
add
jno
loope
jbe
pop
(bad)
pop
jge
aam
fcmovnbe
lock
sbb
jle
add
stos
xor
adc
cmp
xor
push
xor
mov
loope
add
sub
jnp
ins
inc
cli
in
sub
adc
iret
push
scas
or
pop
pop
int
call
mov
imul
and
push
pop
in
xchg
es
dec
mov
pop
outs
xchg
and
bound
push
cld
xchg
and
nop
inc
add
jb
call
sub
xlat
out
cwde
push
cmps
in
retf
fs
cld
ins
xor
scas
je
icebp
adc
cs
popa
and
pusha
cdq
punpcklwd
jo
pop
add
cwde
enter
jb
test
leave
movs
in
mov
jmp
jge
add
mov
mov
mov
sub
sub
jns
enter
jmp
mov
and
adc
ret
out
adc
aad
fstp
push
out
out
push
fcom
inc
xchg
dec
mov
cmps
out
data16
cmp
ds
dec
xchg
dec
xor
mov
cmps
mov
xchg
scas
adc
aad
aam
(bad)
mov
push
movs
inc
push
xchg
mov
add
cwde
push
jecxz
ret
pop
mov
loop
cld
add
mov
pushf
dec
imul
leave
adc
jge
test
hlt
mul
outs
push
jmp
add
hlt
add
dec
dec
adc
dec
ja
adc
cmp
je
shl
popa
mov
nop
fcomp
sub
cmp
popa
les
pop
cs
push
mov
xchg
cmp
cmp
lock
add
push
in
lods
inc
push
dec
leave
loop
(bad)
repz
dec
xor
mov
push
push
and
sar
lds
fidiv
scas
mov
(bad)
cld
xchg
rol
sub
das
push
test
ins
ja
sub
push
push
inc
repnz
addr16
sahf
mov
lea
adc
mov
loopne
inc
or
test
iret
retf
push
iret
mov
aad
sub
or
ins
cmp
aam
cmp
xor
imul
or
sahf
sub
pop
or
inc
jo
mov
pop
xor
jge
lods
push
jnp
jb
ja
cmps
clc
sub
addr16
inc
fist
imul
loope
or
out
or
pop
pop
jno
dec
(bad)
or
fldcw
sahf
pusha
jmp
fisttp
jmp
push
out
cld
cmp
ja
call
fsubr
mov
lahf
loopne
aaa
mov
dec
retf
or
inc
or
movs
hlt
(bad)
stc
xchg
pop
cmp
sbb
jecxz
test
(bad)
jne
cmp
xor
xor
cmp
cmc
cmp
pop
push
jmp
mov
mov
cli
fs
int3
and
add
cmp
add
test
cdq
dec
(bad)
fdiv
adc
mov
sub
mov
(bad)
imul
fisubr
cmc
push
outs
sub
jno
ret
sbb
sbb
pushf
sti
jae
cmp
sub
popf
out
lods
sbb
cld
cmc
scas
jno
inc
sub
sub
jo
pop
push
mul
int
xor
mov
xchg
sub
(bad)
outs
cdq
xor
mov
jnp
cmp
and
pop
inc
loop
push
leave
test
xchg
mov
cmp
ins
sub
(bad)
(bad)
jae
mov
xor
retf
loop
ja
sbb
pop
cld
in
add
add
stos
sahf
cli
adc
jge
rcl
(bad)
cld
in
stc
mov
adc
cmp
leave
fwait
cmps
test
lds
or
mov
test
xchg
mov
repnz
jg
push
fldl2t
pop
mov
js
dec
enter
adc
sar
call
sbb
loopne
call
mov
ss
stc
test
into
int
xchg
loope
rol
mov
int
or
jg
sub
dec
stos
xlat
mov
add
xor
push
and
and
xchg
cli
mov
push
scas
pop
add
xchg
ins
mov
fsubr
push
jno
jns
push
adc
inc
cmp
jae
test
retf
(bad)
outs
ins
test
ret
(bad)
mov
inc
scas
jle
jbe
pop
ins
mov
es
adc
js
call
dec
aaa
cmp
pop
xchg
repnz
mov
outs
stos
test
xchg
jnp
call
pop
dec
into
and
or
xor
fimul
popf
xchg
cmc
sbb
dec
ss
iret
fstp
inc
mov
mov
jg
adc
sbb
stos
lea
sbb
and
out
push
jp
mov
cli
das
and
and
out
cwde
rol
nop
call
add
jmp
mov
sbb
mov
cdq
cmp
push
sbb
jnp
and
push
mov
mov
inc
clc
test
pop
jge
inc
xlat
js
(bad)
cmps
stos
stc
push
inc
mov
sar
jg
cmp
mov
pop
or
inc
popa
mov
test
mov
cmp
stc
cmp
and
cs
xor
cdq
jb
cdq
mov
fisubr
inc
inc
into
cmps
sar
mov
dec
dec
jno
push
mov
fcom
dec
cmp
pop
mov
and
cmp
retf
xlat
fsubr
fld
or
or
jo
sbb
ins
mov
(bad)
xchg
dec
(bad)
ror
cld
push
adc
mov
cwde
and
add
clc
xchg
(bad)
aam
pop
mov
shl
mov
ja
fucomp
dec
jmp
or
sub
push
push
cdq
adc
push
lock
xor
mov
jnp
cmc
jecxz
mov
mov
loope
data16
out
das
nop
arpl
adc
adc
addr16
dec
stos
push
dec
js
ins
mov
xchg
ins
push
mov
ret
mov
cmc
int
push
jl
mov
mov
pop
rol
xchg
cmp
stos
out
mov
out
push
sbb
pop
pop
mov
retf
cmp
add
jmp
stc
push
jg
test
jno
mov
cmps
in
je
lock
cld
pop
in
add
sahf
sub
mov
mov
push
adc
(bad)
hlt
adc
sbb
add
cmps
imul
mov
mov
xor
inc
inc
push
cmps
sub
add
mov
push
pop
mov
(bad)
aam
xchg
jb
outs
out
xchg
xor
mov
iret
imul
jb
adc
mov
add
mul
jmp
(bad)
pop
cmp
dec
mov
and
push
retf
scas
jmp
adc
(bad)
push
pop
jge
call
xor
ins
mov
jno
or
cmps
mov
aas
js
jecxz
pop
sub
and
repnz
inc
movaps
sahf
mov
sbb
test
arpl
xchg
leave
inc
imul
jbe
mov
jmp
xor
sbb
jg
push
lods
(bad)
mov
repz
ins
pop
adc
inc
in
pop
dec
xor
pop
push
fstp
xchg
test
dec
stc
rcl
test
stc
rcr
in
sub
and
and
cmc
je
dec
daa
test
and
mov
jo
out
ret
test
and
xor
pop
mov
out
stos
cmp
and
rcr
ja
(bad)
sub
cmp
adc
in
mov
inc
jg
or
or
or
and
scas
shl
dec
movq
xor
jns
sbb
sbb
sar
(bad)
iret
in
pop
idiv
es
dec
lods
add
and
(bad)
pop
sub
out
mov
push
out
sbb
sbb
push
add
sub
jge
arpl
adc
jge
inc
out
lods
and
add
mov
adc
bound
or
fwait
ins
icebp
inc
push
dec
add
pusha
pushf
daa
mov
sar
fisub
cmps
jo
xchg
cmp
rcr
jle
mov
ret
jecxz
cmp
sbb
das
pop
dec
iret
fsubr
inc
or
jmp
sub
and
xor
test
pop
daa
or
mov
js
xchg
ds
iret
lock
xor
imul
mov
adc
xchg
bound
ret
repz
movs
cdq
sbb
mov
imul
or
and
cmp
jbe
adc
lds
push
fdiv
inc
(bad)
daa
xchg
adc
push
bound
xor
sub
ret
fist
mov
xchg
lea
mov
test
mov
lods
xor
repnz
sub
scas
and
mov
adc
xor
cmc
cmp
pop
inc
addr16
cmp
add
jae
jmp
das
out
lock
cmp
pop
in
movs
mov
jp
cmp
repz
mov
test
loop
dec
xlat
cwde
jae
mov
pusha
imul
ja
jbe
mov
mov
sahf
push
iret
or
gs
lods
out
mov
jmp
sub
sbb
adc
sub
adc
add
add
aad
jle
pop
(bad)
rcl
mov
repnz
inc
xchg
sub
cmp
popf
test
xchg
lods
jle
clc
daa
xchg
in
popa
in
lds
or
vpmacsdql
loop
loope
aas
jle
dec
aam
int3
stc
(bad)
fs
in
xor
or
int3
fst
cdq
mov
sbb
mov
and
sub
xor
out
mov
popf
mov
sar
fwait
inc
or
js
pop
mov
rol
mov
test
pop
test
(bad)
lods
fidiv
int
cld
push
lods
repz
push
loop
mov
int
shr
inc
inc
addr16
in
(bad)
test
lods
push
xor
jmp
adc
push
adc
(bad)
add
jg
xchg
xchg
jmp
out
jle
iret
fsubr
or
mov
pop
sbb
jmp
sub
add
shl
in
into
(bad)
adc
cwde
jne
cmp
push
sbb
add
mov
enter
(bad)
push
dec
adc
lods
adc
pusha
push
sbb
pushf
aas
fild
dec
or
xor
lock
mov
js
or
jmp
icebp
je
cli
das
adc
jp
cmps
add
test
dec
mov
xchg
rol
fisub
mov
je
mov
adc
push
inc
mov
jnp
sub
xchg
enter
fwait
pop
fdiv
ss
sub
and
aam
jge
pop
mov
fdivr
js
jp
sbb
cmc
mov
xchg
ret
lock
xchg
dec
aad
hlt
add
jb
pop
add
popf
js
jno
loope
sub
push
push
mov
out
sbb
dec
cmp
jmpw
mov
in
xor
mov
jl
cmps
cdq
sub
stos
xor
out
cli
adc
rcr
push
mov
cwde
test
sbb
jp
(bad)
(bad)
mov
add
fnstsw
mov
test
inc
inc
xchg
out
ret
sub
lods
or
dec
ss
shl
add
xchg
xchg
adc
xor
push
js
cs
push
mov
nop
shr
sti
cmp
and
inc
push
inc
or
addr16
inc
push
dec
or
ins
sub
in
jns
mov
test
cwde
test
pop
rcr
inc
movs
shr
adc
mov
(bad)
xchg
(bad)
push
leave
cmovno
mov
cmps
or
sahf
sub
fs
mov
cli
cld
enter
fcomp
je
push
adc
(bad)
ins
xacquire
fsubr
xchg
shl
adc
in
adc
fnstsw
or
add
xchg
daa
cwde
call
stos
and
sbb
lock
je
jl
pop
mov
cwde
jb
rcr
xchg
sbb
ins
into
or
xchg
xchg
test
ret
mov
xchg
xchg
push
imul
sbb
mov
pop
and
mov
push
push
push
dec
(bad)
jne
stos
mov
sar
aam
xor
pop
sahf
xchg
inc
xchg
mov
xchg
adc
fst
rcr
sar
pop
mov
mov
sbb
aaa
adc
sbb
xchg
in
push
ficom
arpl
add
jno
cmps
lods
push
dec
mov
leave
mov
ret
shl
mov
cmp
push
bound
mov
sub
jecxz
jb
pop
(bad)
daa
push
rcr
sub
add
sbb
idiv
mov
mov
push
popa
cdq
mov
sub
inc
cld
cwde
xchg
adc
rcl
fsub
ja
sbb
in
scas
out
out
sub
stc
scas
xor
dec
adc
lds
sbb
mov
dec
jno
xor
sbb
ins
outs
jb
lods
and
inc
je
pop
sbb
sbb
sub
mov
in
pop
(bad)
cdq
mov
cs
and
pop
cmp
movs
adc
cld
or
mov
cmp
loop
jle
cmps
or
and
sbb
adc
jge
xor
push
push
push
cld
daa
cmp
dec
inc
outs
jl
xor
sub
mov
icebp
hlt
sub
je
push
mov
adc
mov
rol
sbb
sub
in
xchg
cmp
loopne
push
mov
xchg
inc
xor
ficomp
mov
aaa
das
ret
fs
and
mov
push
pop
pop
clc
fs
inc
jae
lea
mov
xchg
dec
adc
pop
je
(bad)
adc
jbe
das
inc
loope
push
lods
xchg
jo
mov
lock
xor
ds
retf
pop
and
sub
test
dec
pop
ror
scas
movs
cmp
sub
cs
fcomp
sub
std
jmp
test
popf
ss
jecxz
jno
xchg
rcr
jb
mov
dec
push
inc
nop
xor
sub
lods
xor
sbb
cmps
xor
loope
fwait
cld
push
ins
(bad)
fisubr
rcl
pop
xchg
dec
dec
jmp
xor
xchg
ret
jecxz
scas
bound
push
adc
xchg
xor
xor
out
sbb
fcom
pusha
fdivr
stos
cmp
or
add
mov
sub
stos
sbb
and
div
inc
xchg
shr
mov
pushf
into
inc
jb
adc
sti
sbb
shl
arpl
aas
xor
jmp
push
ss
push
push
jae
pop
ficomp
pop
ins
inc
sub
fld
dec
(bad)
les
cmp
ss
iret
(bad)
repnz
jle
pop
rcr
inc
push
pop
mov
sub
inc
imul
xchg
push
pop
mov
jle
push
fld
shl
pop
jmp
add
push
dec
and
enter
or
push
repz
cwde
mov
cwde
neg
add
mov
cmp
xchg
cs
enter
cmp
cmc
and
cmp
or
or
(bad)
iret
aas
iret
bound
sbb
pop
mov
mov
xor
cmp
shl
or
sub
jmp
ins
push
cmps
mov
test
adc
inc
dec
fsubr
retf
xor
or
popa
aaa
cmps
cmps
imul
push
and
pop
inc
mov
or
retf
add
(bad)
mov
adc
retf
or
or
xlat
push
aas
mov
xchg
adc
pop
stos
add
jbe
sbb
mov
pop
iret
out
loope
add
int
push
dec
and
fadd
shl
jecxz
pushw
ret
(bad)
jmp
adc
add
jae
push
test
in
dec
xchg
ret
or
leave
lods
and
pop
or
or
sbb
mov
loop
call
neg
xor
push
sub
repz
test
mov
ficomp
stc
mov
cdq
mov
pop
test
mov
push
test
and
adc
shr
lods
arpl
mov
loope
push
icebp
fnsave
jle
mov
call
jns
adc
in
fidiv
out
sub
je
fstp
into
inc
mov
cmp
nop
loope
out
mov
xor
adc
fs
aas
(bad)
mov
shl
adc
add
test
daa
add
jnp
repz
and
mov
cmp
mov
mov
sahf
cdq
popa
mov
xor
mov
pop
mov
sub
adc
rol
cmp
adc
jmp
pop
pusha
retf
es
fcomp
(bad)
cld
pop
xchg
sbb
mov
cld
jb
ins
(bad)
shl
add
pop
push
jp
imul
mov
popf
ficomp
out
mov
cs
or
sub
nop
loope
xchg
lock
jecxz
inc
push
imul
outs
lods
xor
cmp
sbb
pop
inc
outs
push
pop
inc
shl
in
(bad)
call
push
inc
stos
xchg
es
mov
add
mov
dec
lea
fbstp
cmps
stos
arpl
and
pop
movs
pop
or
mov
scas
(bad)
push
lods
push
jg
fmul
daa
mov
push
into
popa
sbb
pop
add
dec
sub
xor
add
add
mov
sbb
clc
mul
lods
retf
rcl
pop
dec
jg
pop
lods
in
cmps
aad
pop
ficomp
sbb
dec
in
pushf
repnz
jo
sub
dec
jnp
add
sti
jno
mov
sub
jle
retf
push
stc
ficom
(bad)
mov
xchg
xchg
scas
(bad)
in
dec
sub
inc
retf
mov
fcom
jp
push
xor
mov
sbb
mov
xor
adc
sub
inc
jmp
cmps
movs
jp
or
gs
out
leave
ins
sbb
aaa
vmwrite
push
push
jmp
data16
aas
out
int
scas
lock
pop
jmp
stos
gs
daa
loope
pop
sbb
clc
rcr
rcl
mov
cmp
mov
mov
mov
lahf
cs
outs
stos
cs
outs
shr
lahf
adc
retf
das
mov
sbb
mov
ret
repz
cmps
fbstp
aas
sbb
stos
adc
das
sub
mov
push
add
sub
into
mov
sahf
data16
sbb
test
jmp
dec
pop
xor
mov
pop
jb
ror
dec
inc
mov
dec
sbb
fisub
inc
mov
mov
push
call
sbb
cli
je
inc
adc
pop
adc
popa
adc
and
cmp
mov
push
and
fbld
jo
loop
push
cmp
inc
ins
xor
imul
jb
loopne
in
sbb
ja
iret
mov
loop
mov
adc
cmps
cwde
or
lods
pop
sbb
std
jmp
ret
mov
test
mov
sahf
mov
test
push
js
sub
out
aaa
adc
mov
sub
mov
xlat
adc
or
sub
inc
mov
pop
xchg
mov
(bad)
enter
sub
ror
inc
mov
cwde
sub
inc
push
or
push
jle
add
imul
pop
lods
push
jmp
test
(bad)
jle
(bad)
stos
dec
inc
adc
push
inc
mov
xor
push
ret
cs
xchg
out
lea
mov
dec
daa
or
xchg
push
das
int3
fsub
or
xchg
jg
idiv
mov
push
push
stos
jg
test
cmc
or
adc
push
push
popa
repz
das
mov
rol
mov
jns
sub
iret
aaa
mov
scas
daa
mov
jp
nop
les
rcr
xor
adc
mov
gs
mov
cdq
sub
adc
pushf
mov
push
jge
fs
les
cdq
(bad)
inc
mov
in
ja
jmp
jp
rcl
cmp
xor
jb
adc
repnz
arpl
push
inc
iret
adc
fdivr
xor
test
mov
adc
dec
lods
mov
cld
repnz
push
push
mov
dec
gs
std
mov
outs
ror
jle
inc
inc
or
sub
add
jb
neg
dec
mov
je
pop
out
pop
test
arpl
pop
fwait
jbe
cmp
jmp
and
in
enter
int3
sbb
loopne
jne
sub
out
and
in
movs
mov
adc
jb
cdq
and
push
inc
scas
jl
or
lahf
push
dec
retw
add
and
inc
movs
adc
hlt
lods
inc
leave
sub
sbb
dec
sub
mov
cmp
out
cmc
add
xchg
dec
and
and
pop
nop
cwde
aas
mov
fistp
arpl
pop
aaa
xchg
mov
mov
pop
sub
mov
out
cmp
mov
mov
pop
call
sti
(bad)
dec
mov
and
lods
add
or
push
(bad)
xchg
mov
pop
cmp
mov
inc
mov
pop
xchg
inc
loop
xor
pop
imul
cmp
push
jge
sbb
lods
cli
cmp
fcmovnb
(bad)
cmp
lods
xor
ins
mov
call
add
mov
cmp
mov
repz
fucom
xchg
add
pop
stc
jb
fsub
push
out
jb
mov
mov
mov
xor
and
bound
int
es
add
call
in
in
mov
jnp
mov
and
out
jge
imul
or
ins
dec
xor
mov
jg
xchg
xor
rcl
outs
mov
mov
xchg
out
(bad)
jle
test
push
test
push
sub
gs
jae
mov
pop
into
clc
jne
pushf
loopne
xchg
repnz
daa
pop
fwait
mov
mov
not
scas
and
sbb
rol
sbb
(bad)
stos
adc
outs
and
test
repnz
adc
cmp
add
mov
test
out
std
popf
fwait
(bad)
pusha
sar
push
jge
cmp
dec
in
jns
pop
xchg
loopne
movs
and
cmp
ficomp
adc
push
fs
or
adc
call
lock
mov
dec
inc
icebp
dec
test
pop
cli
mov
jo
push
jno
xor
and
test
fucom
mov
call
stos
shl
xchg
xchg
imul
movs
fimul
outs
mov
fwait
jne
mov
cmp
sar
das
aas
rol
scas
mov
pushf
outs
sbb
xchg
retf
ret
mov
iret
jno
xchg
shr
inc
loop
mov
int3
push
fs
mov
data16
je
or
adc
in
hlt
ret
push
jae
ds
xchg
xchg
(bad)
xlat
movs
(bad)
loopne
jo
stos
cld
iret
and
mov
(bad)
mov
fld
fldenv
push
loopne
es
jge
xor
lock
inc
stos
jnp
xchg
lds
dec
(bad)
mov
je
jbe
mov
lahf
cld
outs
cmp
jne
sahf
cli
pop
mov
test
stos
cmps
cmps
lock
retf
dec
rol
xchg
(bad)
stc
jp
lahf
shl
mov
(bad)
jae
ror
dec
and
shr
aam
mul
outs
sahf
push
fstp
xlat
loopne
gs
(bad)
fadd
mov
mov
fld
sar
cli
push
fnstsw
adc
fcomp
adc
cmp
fstp
xchg
xor
add
dec
push
sahf
and
popa
test
lds
test
xchg
adc
stos
pop
lea
push
or
mov
jecxz
test
enter
mov
mov
call
inc
fs
add
adc
dec
jo
xlat
out
loope
loope
push
sbb
lock
xchg
shl
lds
pop
pop
ins
pop
sub
sub
jmp
sbb
cdq
in
out
aad
inc
or
xchg
jb
add
mov
inc
pop
cdq
push
xchg
lds
inc
mov
sti
push
pusha
push
sbb
out
mov
loope
add
(bad)
pusha
out
adc
(bad)
add
xchg
std
retf
sbb
cmps
inc
pop
sti
jmp
pop
push
lods
mov
(bad)
(bad)
cli
sbb
add
mov
jle
jmp
and
xor
pop
push
bound
push
leave
mov
or
cmp
clc
ins
cmp
icebp
std
ret
ja
add
div
push
(bad)
sbb
enter
mov
push
adc
(bad)
xchg
xchg
fistp
jmp
xor
and
test
loope
pusha
inc
pop
push
cld
add
ret
into
out
jg
cmp
xchg
lea
iret
xlat
inc
add
out
mov
sbb
xor
sti
stc
(bad)
std
in
in
cmp
mov
dec
mov
mov
outs
xor
(bad)
frndint
jbe
mov
mov
add
mov
mov
adc
jno
add
imul
mov
mov
mov
and
js
adc
mov
lds
inc
fdiv
mov
movs
call
push
fisttp
call
cmp
fisttp
js
dec
sbb
ret
outs
ins
cld
gs
loopne
inc
sub
out
jns
test
ins
push
mov
stc
or
or
mov
xor
mov
jae
dec
call
adc
rcr
pusha
mov
dec
sbb
and
xchg
dec
xor
in
in
xchg
jecxz
sahf
pop
pop
cmp
fistp
push
clc
adc
(bad)
cmps
and
mov
jbe
push
cmc
sub
mov
int
add
and
lods
cmp
addr16
sub
mov
imul
stos
push
mov
rol
push
loope
cmp
add
jmp
jmp
push
xchg
sbb
daa
mov
in
vmovlps
jmp
dec
(bad)
xor
nop
dec
je
imul
dec
mov
es
inc
shl
mov
cmp
(bad)
adc
movzx
pop
push
mov
push
lahf
jecxz
fwait
lods
imul
std
pop
bound
dec
mov
test
jbe
jp
xor
fdiv
push
mov
xchg
or
mov
sub
push
arpl
cmp
out
jne
out
retf
ret
test
ret
stos
rcl
arpl
jmp
ds
pop
ret
call
jne
and
dec
xor
sub
inc
shl
imul
mov
leave
xor
mov
push
rcr
sti
or
ins
mov
aad
mov
out
inc
icebp
push
(bad)
arpl
dec
call
cld
ins
jg
daa
cmp
hlt
xchg
inc
and
lea
in
fcmovbe
cmp
inc
fdivr
(bad)
test
xchg
out
ins
outs
gs
dec
and
movs
dec
int3
ret
and
icebp
jo
xchg
mov
push
mov
sub
mov
sbb
cwde
jg
enter
and
ins
ja
lea
scas
rcl
mov
cmc
adc
ficom
sub
mov
xchg
out
mov
movs
xchg
add
jbe
mov
and
js
enter
mov
aad
add
lods
loopne
outs
cs
pop
adc
pusha
es
sahf
movs
lds
mov
jne
outs
pop
xchg
mov
cmc
jl
dec
mov
popa
pause
sti
xchg
mov
mov
add
push
adc
retf
push
push
cdq
hlt
pushf
(bad)
or
sbb
lods
jmp
push
mov
jecxz
pop
cmp
push
addr16
and
cmp
jp
movs
aas
jge
xor
adc
sub
cmp
fcmovb
inc
dec
jl
(bad)
xchg
sub
(bad)
popa
ds
and
test
dec
or
scas
add
adc
push
es
sub
xor
daa
inc
lea
cmp
scas
adc
out
dec
(bad)
mov
sub
or
mov
ror
iret
out
aaa
repz
out
sbb
push
xor
jnp
add
js
cdq
push
pop
mov
(bad)
dec
jmp
cmp
daa
ins
div
cmc
popf
pushw
cmp
mov
leave
fxch
stc
sbb
outs
inc
cmp
pop
icebp
sti
jo
das
cwde
mov
xor
ss
(bad)
mov
fwait
xchg
je
into
push
sbb
xchg
pop
cmps
stos
ror
sbb
or
push
aad
scas
mov
inc
vsqrtss
div
jge
mov
fs
cwde
dec
dec
jmp
xor
cmp
or
adc
mov
lods
sub
out
call
xchg
inc
std
lods
adc
leave
push
ret
stos
cmp
inc
test
mov
mov
arpl
mul
stos
push
repnz
add
mov
and
sub
(bad)
popf
push
xchg
ss
jg
pop
mov
retf
jle
jmp
pop
xor
mov
sbb
xor
pop
mov
adc
dec
into
sub
aaa
repz
inc
add
fstp
or
imul
xchg
cmp
cmp
ins
pop
adc
push
lahf
push
into
pop
cmp
loop
jno
push
lahf
ss
add
mov
sar
cdq
nop
adc
fistp
dec
gs
inc
scas
mov
out
and
mov
cmp
adc
mov
push
je
call
mov
sbb
aad
sar
retf
bound
inc
rcl
out
rcr
add
push
xchg
and
shl
mov
call
ja
add
ficom
xchg
dec
push
stc
push
movs
push
cmp
cmp
mov
fild
retf
out
mov
loope
pop
mov
aam
adc
xchg
sahf
xlat
loop
mov
shl
mov
sub
sub
fdivr
mov
rol
aaa
dec
fwait
cmp
test
mov
and
xor
fidivr
bound
fwait
lock
stos
jmp
es
in
movs
call
push
clc
lock
out
inc
xchg
jmp
bndstx
std
out
rcl
retf
and
enter
mov
call
fld
and
pop
addr16
idiv
fstp
push
xor
adc
xchg
outs
mov
cmc
mov
jo
push
add
movs
in
mov
mov
(bad)
mov
or
in
out
scas
or
pop
test
nop
mov
or
(bad)
pushf
out
or
in
cmp
push
ins
cmps
inc
in
(bad)
clc
shl
sbb
lock
mov
pop
and
addr16
in
sbb
dec
shr
test
add
aas
inc
mov
xor
ret
nop
sub
fdivr
ins
inc
movs
or
into
rol
stos
sub
jo
loopne
pop
pop
mov
imul
stc
push
imul
and
xchg
push
adc
sbb
rcl
jp
pop
mov
dec
or
dec
or
sbb
sbb
div
xlat
out
popf
and
sti
inc
or
jb
inc
(bad)
(bad)
addr16
mov
adc
inc
sbb
mov
xor
nop
xor
pop
loop
shl
sub
dec
fcmovne
add
add
lods
pop
retf
add
xchg
arpl
clc
test
xor
mov
int3
(bad)
jle
add
pop
jmp
(bad)
mov
lds
ror
int
mov
shl
aad
inc
push
loopne
es
imul
ret
cmc
ror
cmc
shl
shl
lock
cmp
cmc
sbb
movs
push
mov
sub
jno
iret
push
out
dec
stc
ret
bound
sti
repz
icebp
(bad)
pop
sub
int3
mov
mov
mov
mov
mov
mov
pop
nop
xor
add
shl
pushf
rcr
cwde
jbe
mov
repz
es
mov
jle
(bad)
out
sbb
pop
sahf
fild
and
mov
lock
aas
test
fst
add
cmp
idiv
mov
mov
cmps
cmp
loop
jbe
jmp
push
stos
(bad)
jge
dec
and
xlat
outs
and
inc
test
push
mov
imul
mov
imul
leave
cwde
into
push
or
pop
sub
push
out
in
mul
adc
dec
pop
jnp
mov
sub
mov
and
adc
or
int3
fs
xlat
mov
ins
dec
fdivr
cmp
and
push
dec
mov
neg
or
add
ret
or
pop
call
push
imul
xchg
push
scas
mov
ror
std
lds
mov
xchg
ret
adc
add
mov
cmp
lea
push
sub
pop
jg
leave
cmp
stc
sti
aas
stos
xchg
dec
mov
jne
stc
xchg
mov
jnp
inc
push
xchg
jecxz
xlat
retf
ror
jbe
pop
jne
push
xchg
mov
div
cwde
mov
sahf
iret
ss
mov
pop
lods
repz
lods
and
inc
sahf
lods
in
fstp
xlat
fdivrp
imul
mov
call
call
sti
sbb
iret
jmp
rcr
sti
adc
out
push
idiv
fs
call
ret
xor
rcr
test
imul
inc
(bad)
das
pusha
jae
dec
mov
mov
in
(bad)
add
sub
dec
mov
rol
mov
ja
ja
inc
iret
push
sar
mov
clc
daa
mov
mov
or
xlat
sub
and
dec
dec
push
stc
(bad)
mov
leave
dec
jecxz
jae
gs
sar
jmp
sbb
sbb
mov
sub
(bad)
mul
fadd
sbb
xchg
or
pop
mov
lahf
or
cli
dec
mov
repz
mov
mov
xor
test
sub
ret
mov
int3
lods
and
inc
and
and
arpl
sbb
mov
pop
cmp
into
dec
fwait
mov
and
loopne
mov
imul
push
xor
jge
cmp
mov
xor
cmps
outs
cmc
call
adc
xchg
je
fsubrp
out
call
xor
jae
pop
pusha
inc
imul
mov
daa
adc
lods
inc
xlat
out
stos
xchg
ror
xor
outs
xor
add
jnp
pop
ror
popa
fisub
shr
sub
dec
in
daa
add
push
lock
xchg
add
in
cmp
inc
inc
popa
lods
stos
jns
inc
hlt
mov
mov
cmc
test
fsubr
adc
pop
les
mov
jmp
(bad)
push
dec
jo
lods
xchg
fwait
mov
es
movs
test
or
cvtps2pi
call
mov
ss
leave
and
jp
push
mov
add
jmp
pop
ret
test
jecxz
xchg
dec
aaa
mov
cld
repnz
fld
fisubr
mov
xchg
sub
inc
xor
rcr
xor
es
(bad)
and
fbstp
idiv
je
iret
test
inc
push
sbb
jge
inc
int
not
xor
dec
mul
imul
imul
cmps
xor
jg
data16
push
or
dec
inc
add
jb
push
fstp
jbe
arpl
cmp
lods
pop
shr
outs
mov
call
fcom
xchg
cmp
and
test
cmp
retf
shl
(bad)
jecxz
lock
aad
cmp
mov
shl
mov
mov
xchg
in
mov
mov
cmp
jo
and
hlt
fs
pop
fistp
add
daa
iret
out
leave
mov
pop
(bad)
sbb
in
push
sub
loope
rcr
jmp
cmp
cmps
dec
(bad)
mov
dec
loopne
fldcw
inc
call
stos
cmp
add
shl
or
je
out
adc
push
iret
dec
add
sbb
fsubr
adc
jmp
out
jl
js
xchg
cdq
mov
pop
mov
adc
adc
shl
xchg
(bad)
(bad)
mov
inc
mov
(bad)
int
add
xchg
jno
stos
jns
cmp
add
mov
jo
sar
fisubr
sub
xchg
ins
out
sar
pop
push
bound
cmp
sbb
pop
mov
jle
std
jae
xor
aaa
and
cmp
cli
cmc
or
mov
in
rol
adc
je
mov
mov
xchg
das
bound
xchg
int3
popa
test
mov
shl
mov
mov
je
mov
test
loope
aam
sar
dec
sahf
jp
mov
jne
pop
xchg
cmp
aam
jns
push
inc
jno
or
pop
imul
daa
or
hlt
mov
imul
xchg
push
into
jmp
push
out
pop
dec
sub
jnp
sbb
popf
ret
sbb
sbb
and
rcr
out
add
out
or
xchg
mov
pop
fsub
imul
dec
add
inc
outs
retf
jmp
jge
mov
mov
icebp
sbb
xlat
pop
cmp
cmc
xchg
xchg
cmc
scas
adc
xor
mov
jp
jnp
test
pusha
sub
cmp
pop
daa
mov
cmp
pushf
or
dec
jp
xchg
cs
jbe
jecxz
mov
int3
jp
sub
sbb
cmps
repnz
jmp
scas
out
xchg
add
cmp
fnstcw
sbb
scas
ss
cmp
mov
or
xchg
adc
mov
jns
mov
sbb
sub
push
push
ins
loopne
push
pop
adc
and
add
sub
enter
iret
test
in
dec
stos
xchg
ss
scas
adc
imul
test
scas
jmp
add
out
into
mov
popa
adc
and
mov
push
out
ds
iret
pop
mov
and
push
lods
stos
add
dec
add
pop
sahf
icebp
fmul
sbb
cmps
xchg
mov
add
jmp
cli
mov
adc
call
data16
push
sub
movs
pop
jb
pop
outs
test
jmp
pop
cli
and
popa
dec
(bad)
fldcw
aam
movs
xor
fist
aas
xor
lahf
cmp
xchg
mov
lock
pop
lods
test
dec
aad
fiadd
push
xor
loopne
lds
scas
movs
repz
dec
mov
aam
cs
jne
sbb
push
sub
pop
sub
in
cmp
jg
shl
mov
sub
aas
imul
and
fbstp
push
and
or
fidiv
jb
ds
pop
popa
inc
aam
ins
add
aad
mov
dec
and
pop
push
mov
adc
cmp
inc
loope
std
cmps
adc
outs
jp
mov
aad
sbb
pusha
jp
cmp
cs
adc
jnp
in
mov
rol
mov
push
in
mov
ret
xor
jmp
dec
xor
sbb
cmp
ret
mov
jmp
repnz
rcr
xchg
jb
push
mov
cmps
movs
inc
mov
and
shr
gs
(bad)
mul
sub
pop
adc
movs
movs
pop
and
dec
sbb
pop
dec
dec
imul
jmp
jno
pop
add
jle
xchg
mov
push
ror
mov
rcl
out
mov
nop
dec
pop
in
out
call
mov
or
loop
mov
fxam
loop
sbb
dec
sub
cmp
fwait
popa
xchg
fwait
mov
inc
xor
pusha
fimul
cmp
lock
add
cdq
adc
loope
push
popa
pop
mov
adc
out
test
adc
cmp
(bad)
in
das
mov
dec
in
inc
and
adc
nop
push
push
call
inc
out
push
(bad)
pushf
fld
test
push
xchg
push
lods
push
sbb
xor
push
xor
mov
(bad)
and
cmp
xchg
and
xor
int
mov
push
test
inc
lods
mul
ret
pop
sub
clc
pop
stos
jge
jecxz
inc
push
pusha
out
dec
test
loopne
imul
mov
test
jb
nop
scas
add
data16
mov
jmp
in
sub
mov
sub
pop
pusha
sub
push
sbb
adc
data16
into
cmp
out
dec
sub
ins
fcmovb
pop
pop
movs
(bad)
and
cld
push
pushf
setnp
sti
stc
mov
adc
test
adc
adc
in
es
lea
test
ficomp
jns
into
outs
sbb
clc
xchg
je
push
pop
in
pop
xor
cmp
sti
test
mov
dec
pushf
cmp
inc
sub
xchg
out
popf
retf
in
out
rcl
cmps
repnz
jbe
xchg
outs
or
pusha
shr
push
loop
xor
xor
xor
add
dec
ins
scas
pop
lahf
clc
stc
and
and
repnz
mov
inc
xor
jae
rol
add
adc
cmp
push
fdiv
cmp
in
ins
lods
adc
fstp
adc
xor
jns
xor
xor
mov
pusha
enter
ret
pop
(bad)
xchg
lods
bound
pusha
cwde
mov
shl
addr16
push
mov
mov
add
or
lods
push
push
outs
and
imul
push
push
es
enter
adc
push
scas
sub
jno
push
std
sbb
pushf
loopne
stos
(bad)
fbld
adc
stc
jnp
pushf
cmp
aaa
call
xchg
jne
inc
das
cmps
std
(bad)
sub
in
and
jne
icebp
or
dec
xor
sub
call
daa
outs
enter
jle
mov
js
mul
jae
(bad)
test
sub
mov
addr16
xlat
mov
outs
push
repz
pop
mov
add
mov
or
sub
xchg
das
cmps
pop
rol
(bad)
adc
repnz
jge
and
enter
inc
jns
aam
inc
aaa
clc
mov
xor
inc
push
mov
stos
mov
inc
frstor
pop
add
sti
movs
outs
jno
clc
xchg
or
lods
out
inc
jae
bnd
lahf
fist
sbb
mov
(bad)
rcl
dec
xchg
xchg
mov
mov
adc
add
xchg
and
pop
out
inc
pusha
lds
shl
mov
mov
jge
pop
fcom
fucomi
mov
push
pop
and
(bad)
fcmovu
stc
mov
or
pop
jmp
jno
add
mov
outs
jmp
mov
dec
scas
out
cs
cld
jge
push
push
inc
(bad)
push
lods
mov
aas
mov
jmp
mov
push
xchg
xor
outs
add
or
adc
fisubr
xlat
sub
les
lods
cmps
jb
jo
add
neg
out
dec
shr
add
(bad)
mov
aaa
inc
pop
xor
adc
mov
aam
mov
cmps
call
pop
dec
or
mov
jo
jp
fild
je
jecxz
pop
jg
outs
fistp
aaa
jne
adc
inc
out
mov
jnp
mov
shl
jmp
xchg
pop
cmc
fcmovnb
and
mov
and
xor
popw
dec
adc
in
xlat
and
cmp
stos
mov
loope
push
mov
cmp
mov
retf
fdiv
cmc
xchg
jbe
hlt
in
retf
mov
dec
jle
cmovbe
jnp
fisttp
push
xchg
pop
adc
mov
mov
fld
push
pusha
add
data16
pop
push
add
sbb
fwait
adc
imul
mov
mov
out
fdiv
repz
ret
xchg
ins
ficomp
in
pop
inc
mov
cmp
fnsave
add
pop
adc
ins
pop
mov
pop
inc
loopne
add
outs
jmp
outs
sub
loop
aaa
cmc
out
lods
or
mov
pop
fwait
mov
add
loope
mov
sub
addr16
stc
jmp
imul
xchg
fsub
movs
pop
mov
mov
xchg
ficomp
call
sbb
jg
sbb
or
dec
jle
push
mov
xchg
cmp
dec
fist
mov
dec
xchg
aam
jno
and
iret
data16
inc
inc
add
sbb
lahf
bnd
sub
sbb
and
shr
xor
call
dec
and
sub
jmp
inc
xlat
call
clc
inc
mov
sub
xchg
pop
call
in
clc
gs
mov
mov
pusha
adc
push
mov
aad
(bad)
test
xchg
sub
xchg
jecxz
pop
lahf
je
pop
and
rcr
pushf
in
add
ror
jl
inc
sbb
jne
pop
repz
test
popa
jmp
in
mov
xchg
pop
jb
xor
pusha
inc
xchg
mov
add
adc
adc
xchg
sahf
sub
retf
xor
std
add
mov
cmp
mov
ins
jmp
std
dec
jle
xchg
push
int3
push
inc
stos
ret
hlt
pushf
or
add
std
(bad)
cdq
push
mov
sub
mov
rol
sti
sub
dec
outs
ins
sbb
jp
sub
test
shr
push
outs
call
ficom
(bad)
(bad)
out
aam
sbb
mov
xlat
mov
or
stos
mov
push
or
sub
bound
cli
cmp
jmp
mov
loopne
or
out
jle
push
mov
cld
adc
xor
sub
ds
lods
dec
int
mov
push
outs
mov
stos
mov
stos
ss
pop
add
jle
dec
xchg
pop
inc
out
lahf
(bad)
xchg
mov
int
das
add
sahf
cmps
dec
and
mov
sub
fisttp
or
push
lea
and
xor
xchg
or
imul
and
dec
pop
push
jp
sub
mov
lock
outs
push
add
sub
mov
or
mov
stos
adc
push
jb
leave
ror
inc
xor
out
mov
mov
nop
xor
idiv
sar
push
mov
mov
(bad)
clc
in
addr16
fcom
add
xchg
std
fidivr
add
mov
pop
adc
cmp
jno
pop
mov
mov
xlat
mov
gs
and
push
mov
ret
xor
addr16
aam
mov
dec
or
push
clc
in
stc
lods
pop
stc
mov
jns
dec
sub
cmp
in
mov
movs
or
xor
cwde
or
mov
pushf
xor
and
add
test
push
and
mov
lock
gs
mov
inc
movs
push
scas
pop
add
aaa
mov
retf
mov
cwde
in
retf
mov
sub
mov
sub
lgs
push
jmp
std
ret
out
push
push
imul
in
adc
rcr
data16
cmp
loop
dec
or
lods
fist
ds
xor
inc
imul
mov
jge
movs
fist
ins
ins
dec
out
stos
nop
ins
pushf
in
jmp
std
rcl
and
or
jmp
xor
test
outs
lds
int
inc
mov
mov
or
cdq
xchg
fwait
inc
scas
inc
xchg
xchg
push
imul
es
and
cmp
pop
pop
movs
and
daa
and
fnsave
push
jmp
xchg
sar
lahf
push
adc
bound
mov
sar
lods
test
xchg
sub
ret
clc
shl
pushf
adc
shld
mov
mov
mov
sub
outs
sbb
mov
jle
push
jae
mov
xlat
mov
push
(bad)
push
sbb
sub
push
cmp
cli
adc
sti
xchg
adc
xchg
mov
shl
and
std
out
bound
adc
sub
dec
nop
adc
lahf
imul
jmp
or
push
pushf
call
jmp
bound
cli
ss
inc
mov
xchg
test
out
mov
dec
jmp
movs
test
popf
and
aam
lods
mov
movs
in
lods
scas
mov
out
int3
out
aam
test
adc
jae
lds
cdq
sub
dec
sbb
(bad)
mov
mov
mov
cdq
les
je
mov
sbb
dec
and
fwait
cwde
popa
or
in
xchg
jg
dec
pusha
sahf
imul
lds
mov
pop
dec
mov
adc
pusha
cmp
sbb
out
xor
scas
ds
xchg
popa
test
mov
push
xchg
mov
ret
(bad)
pop
cli
sbb
or
mov
cmc
xor
pop
sbb
fistp
sub
cdq
(bad)
out
adc
outs
jmp
sbb
and
inc
data16
in
neg
jne
push
fs
or
xchg
in
ss
imul
es
fwait
xor
sub
push
daa
jmp
push
pop
push
ins
cmps
cmp
out
dec
aam
and
or
push
sub
pusha
and
cmp
dec
mul
scas
adc
dec
cld
test
inc
jle
mov
movs
xchg
and
xchg
gs
mov
sub
fidiv
xchg
imul
test
arpl
xor
retf
pop
scas
cli
in
mov
aas
adc
dec
mov
jbe
add
jp
clc
clc
jae
push
(bad)
push
addr16
shl
into
add
data16
jecxz
outs
inc
cmp
scas
cmp
rcl
mov
sbb
jnp
out
pop
scas
aas
es
ins
fdiv
repz
cmp
xor
fs
add
xchg
stos
xchg
mov
inc
adc
xchg
or
jne
daa
adc
adc
cmp
rol
jnp
push
outs
fist
xor
pusha
mov
push
int3
fbstp
data16
aam
jns
(bad)
stc
ror
fnsave
xchg
fistp
ret
mov
iret
mov
lock
pop
cmps
jb
ror
cmp
pop
lock
push
test
sub
and
inc
es
xchg
push
xchg
repz
or
neg
fimul
cli
nop
inc
pusha
ins
push
mov
pop
ins
das
shl
mov
call
ficom
mov
(bad)
dec
(bad)
push
dec
loopne
leave
call
and
mov
inc
test
cmps
mov
dec
cmp
push
nop
pop
push
loopne
mov
xor
fild
add
div
fist
jmp
jp
repnz
or
(bad)
pop
xchg
dec
sub
xchg
xchg
jg
fild
bound
jmp
outs
and
or
js
pop
or
daa
mov
fsubr
push
lahf
xchg
xchg
sub
lock
ret
and
mov
mov
adc
and
mov
jmp
mov
movs
mov
mov
sbb
cmp
cmp
fcmovnbe
jo
mov
adc
mov
div
(bad)
mov
dec
or
xor
dec
retf
in
js
pop
fiadd
pop
add
xor
sbb
jb
out
fiadd
ins
sub
cmp
jmp
mov
mov
push
inc
push
dec
xchg
dec
in
sti
inc
aam
aad
adc
jle
fidiv
jmp
xchg
out
sbb
gs
mov
or
mov
cmp
(bad)
retf
lods
jnp
into
cmc
push
jae
mov
dec
push
push
push
xchg
nop
and
push
scas
inc
jge
iret
and
jno
js
dec
sub
mov
ret
jle
into
sub
xor
jmp
les
push
or
jp
arpl
stos
jne
fwait
pop
mov
test
mov
fdivrp
fnop
sbb
and
xlat
imul
loop
inc
add
mov
sub
dec
sbb
mov
loop
cmp
mov
push
adc
mov
lock
jecxz
and
int
in
ret
jo
loop
pop
and
iret
push
cmc
jg
adc
(bad)
repnz
jg
push
inc
adc
nop
jl
cmp
mov
jno
out
jmp
dec
(bad)
stc
or
xor
jb
or
push
jge
xchg
jbe
ins
xor
fwait
popa
or
cmc
in
xchg
jae
mov
int3
(bad)
into
icebp
scas
push
jne
sbb
adc
sbb
retf
mov
jge
(bad)
cmp
mov
xor
mov
mov
pop
lods
inc
mov
add
push
mov
adc
cmp
inc
xor
fs
or
and
dec
clc
push
mov
jbe
clc
stos
js
push
push
mov
nop
aam
pusha
mov
push
fcomp
sbb
jbe
leave
aad
mov
mov
(bad)
jmp
lds
or
jle
dec
test
dec
ins
pop
addr16
int3
clc
adc
push
js
loope
cmp
aam
shr
ss
ror
jg
popa
cmovg
pop
or
scas
pushf
and
pusha
mov
add
jg
les
lods
cmps
inc
aas
(bad)
pushf
dec
jb
test
xlat
cmps
int3
add
mov
mov
sub
xor
stc
sbb
inc
mov
mov
loopne
push
and
add
dec
(bad)
and
pop
pop
xchg
xchg
mov
cmp
lock
in
fmul
dec
mov
ins
sub
push
pop
loope
jge
cmc
cli
jne
push
xchg
enter
mov
jp
dec
in
jge
shl
fidivr
cmp
lods
in
retf
push
in
jp
add
lea
pop
jge
cmc
jns
inc
mov
ins
fsubr
mov
mov
bound
pop
out
xchg
sub
push
jg
inc
mov
inc
addr16
add
mov
js
cmp
(bad)
jmp
cli
fisttp
xor
jns
or
lock
out
adc
cmp
leave
mov
dec
xchg
mov
int
(bad)
sub
sub
cli
xchg
div
sub
sbb
lds
inc
in
ins
push
sub
int3
xchg
retw
mov
cmps
dec
mov
adc
inc
pop
inc
pop
mov
cli
(bad)
mov
fsubr
das
push
pop
jg
or
xor
mov
ret
aaa
jns
jge
mov
xchg
popa
sbb
dec
aam
mov
xor
call
mov
ja
xchg
aad
pop
add
into
sahf
cdq
sub
pop
fdivrp
pushf
sti
ss
cmc
inc
mov
ins
or
pushf
cmp
pop
jbe
in
retf
fmul
out
or
xor
ins
inc
lods
test
jecxz
das
pop
mov
push
inc
loop
dec
(bad)
iret
clc
imul
mov
and
sbb
test
pop
and
iret
arpl
push
(bad)
ret
ficom
mov
push
mov
cmp
pusha
add
pop
lea
imul
xchg
imul
sahf
in
addr16
loopne
arpl
adc
cmp
xor
jno
(bad)
mov
(bad)
pop
adc
mov
lock
cdq
dec
jno
or
outs
sahf
jecxz
mov
ret
and
xchg
stos
inc
retf
cmc
sahf
(bad)
ins
loopne
test
jno
fdivr
mov
lea
mov
inc
imul
jmp
leave
and
sub
enter
stos
or
mov
pop
pop
mov
retf
popa
loope
sbb
gs
loopne
cmp
inc
pusha
add
xchg
push
(bad)
fiadd
mov
loop
mov
rcr
fist
outs
add
ds
dec
sbb
in
mov
push
cmps
jmp
cmps
sbb
xor
iret
mov
(bad)
aaa
movs
mov
mov
push
mov
in
push
retf
xor
lods
inc
inc
or
cmovns
xor
inc
arpl
or
jbe
push
pusha
inc
mov
mov
jb
adc
inc
xchg
fsub
dec
sbb
and
ds
pop
fimul
aad
sub
mov
pop
or
shr
mov
cmps
or
push
mov
mov
(bad)
mov
or
aas
aaa
nop
test
push
xor
push
jb
cdq
mov
or
pop
xor
inc
(bad)
dec
and
scas
add
test
push
adc
adc
inc
adc
icebp
add
jg
lods
sub
push
pop
xchg
push
daa
popf
mov
imul
xchg
nop
adc
mov
fucomp
xlat
stc
sbb
push
adc
rcr
fwait
xor
mov
int3
into
pusha
or
push
sti
jns
mov
xchg
mov
(bad)
push
xchg
lock
mov
fdiv
inc
shr
and
(bad)
pop
call
push
xor
cmp
int3
cld
cwde
mov
stos
push
xor
and
dec
dec
pop
(bad)
mov
xchg
ins
pushf
in
xor
push
mov
push
stc
dec
xchg
sti
(bad)
gs
jns
mov
imul
rcl
loope
push
rol
loop
out
fs
hlt
or
xchg
xchg
sbb
or
repz
shl
pop
push
dec
data16
int3
and
mov
xchg
aas
popa
ins
call
(bad)
outs
(bad)
in
cld
out
clc
hlt
push
and
push
inc
pop
fiadd
jmp
lods
out
sbb
lods
test
pop
jmp
enter
mov
xor
mov
shl
xlat
push
inc
push
sbb
sti
inc
inc
jp
outs
pop
neg
or
or
add
push
ins
loop
adc
int
bound
shl
shr
jmp
cwde
sub
and
inc
adc
call
jmp
popf
sub
sbb
(bad)
jae
rcl
jno
mov
(bad)
pop
sahf
mov
cmp
ja
into
rol
pusha
(bad)
js
outs
cmc
call
out
xchg
(bad)
sbb
push
stos
mov
add
sbb
dec
adc
test
jecxz
mov
rol
jmp
xchg
add
xchg
inc
push
pop
mov
fisubr
push
int
cli
js
jnp
jl
dec
mov
out
cdq
test
mov
mov
push
in
fcom
mov
mov
mov
sti
ds
and
cmp
dec
mov
inc
shl
xchg
or
sbb
or
retf
or
lock
pop
add
call
pop
test
dec
jl
mov
sar
es
add
shl
scas
xchg
or
dec
ja
je
sub
dec
dec
mov
test
fnsave
sbb
xor
or
jge
push
jge
xchg
pop
retf
into
adc
nop
in
or
push
fcom
ds
fadd
out
(bad)
xchg
sbb
jb
test
fs
out
inc
jno
int3
push
pop
bound
ins
rol
jo
cmp
adc
cmp
popf
(bad)
cmc
cmp
cmp
sbb
lea
jb
movs
push
push
push
shr
jmp
cli
aas
in
call
add
nop
adc
add
sbb
aad
or
dec
or
xchg
jno
xor
inc
data16
loop
int3
lods
add
imul
repnz
inc
neg
sub
xchg
sub
gs
push
idiv
stc
jnp
add
jnp
sahf
cld
or
push
adc
fistp
pop
repz
inc
mov
jnp
dec
and
stc
and
not
or
or
sar
pop
fs
mov
out
fild
jb
fxch
(bad)
in
imul
cmp
test
inc
jmp
ins
sub
movs
in
jecxz
pop
cmp
in
leave
xor
aad
pop
mov
push
mov
out
mov
pop
call
(bad)
sbb
mov
mov
js
sbb
xor
sti
xchg
cmps
fwait
das
pop
sub
or
lods
repz
fwait
mov
mov
dec
lods
sbb
ds
ins
fcomp
and
xchg
leave
mov
cmp
call
jne
aam
int
fwait
cs
pop
imul
xor
pop
or
and
adc
xchg
gs
mov
adc
xchg
dec
adc
(bad)
ss
adc
es
shl
jle
xchg
pusha
cmp
bound
repnz
sub
sub
sub
mov
cs
mov
and
fcomp
pop
xchg
aam
scas
cmp
sbb
ret
out
mov
and
sub
in
mov
cmp
stos
xchg
jbe
loope
dec
push
cld
je
sub
sub
loopne
sub
add
mov
popa
cmp
push
dec
test
icebp
jae
dec
adc
xchg
mov
bound
mov
sub
fs
xor
fisttp
ja
dec
push
out
jle
ret
mov
shl
pop
into
xchg
(bad)
std
mov
add
mov
inc
js
sub
mov
in
aad
add
nop
mov
pop
adc
sahf
loope
dec
ja
fisubr
mov
push
inc
rcl
loope
jmp
(bad)
in
into
xor
clc
or
les
call
fcomp
out
inc
jp
sub
loopne
and
xchg
inc
mov
sub
cdq
and
push
pop
(bad)
jl
test
or
xor
or
jo
jnp
push
cmps
adc
adc
inc
xor
push
adc
pcmpgtb
movs
cdq
cwde
fisub
sbb
test
nop
(bad)
jmp
jmp
adc
scas
retf
adc
outs
mov
leave
test
test
stos
ror
push
xchg
dec
outs
pop
xchg
rcl
sub
push
dec
inc
sbb
les
jg
sub
test
push
sbb
inc
inc
mov
or
(bad)
jmp
sbb
mov
sub
push
sahf
ret
js
push
nop
(bad)
cmp
(bad)
push
test
dec
xor
sbb
cmp
jmp
pop
(bad)
dec
inc
xor
arpl
mov
mov
mov
mov
xchg
cwde
jno
inc
cmps
cmps
arpl
cs
inc
xchg
sti
test
jno
inc
xchg
call
outs
sahf
wrmsr
jno
mov
jae
arpl
sahf
xor
enter
push
push
daa
mov
retf
cmp
dec
pop
movs
and
inc
rcr
xor
jno
cmp
add
push
mov
mov
jp
mov
xor
in
sbb
js
int
popa
cli
mov
cmps
cmp
sbb
mov
test
data16
xchg
jmp
mov
(bad)
rcl
popa
stc
daa
xor
imul
stc
xchg
xor
add
and
mov
mov
jp
cld
hlt
dec
stos
(bad)
jno
pop
fiadd
cwde
popa
stc
cmp
enter
and
shl
gs
out
ins
and
pusha
loop
push
mov
out
cmps
xor
(bad)
imul
xchg
ja
aaa
ins
arpl
(bad)
daa
pop
pushf
repnz
daa
daa
or
mov
mov
ss
push
jb
in
jo
mov
jo
scas
pop
push
push
push
cmp
test
dec
jecxz
push
popa
sti
mov
movs
mov
fwait
push
adc
push
scas
(bad)
or
call
push
stos
xchg
mov
gs
imul
and
mov
lods
movs
push
jmp
icebp
cmp
shr
xor
mov
sub
mov
push
je
push
pop
cdq
leave
adc
je
test
pop
nop
cmp
xlat
movs
cmc
xor
neg
repz
pop
(bad)
(bad)
cmps
out
rcl
shl
mov
fisubr
mov
push
addr16
pop
pop
sbb
mov
cmp
ins
and
imul
inc
inc
xchg
push
adc
inc
dec
dec
pop
jmp
fild
mov
dec
jb
lods
lds
xor
jns
lds
add
pop
inc
leave
dec
and
test
jb
dec
jecxz
stc
jno
arpl
lea
mov
retf
mov
sbb
out
mov
jnp
fcomi
(bad)
push
or
out
inc
and
sbb
pop
retf
daa
cld
pop
dec
pop
dec
xchg
pop
cmp
or
enter
sub
add
xor
sar
rcl
inc
lods
jmp
popf
test
cmp
inc
ror
(bad)
mov
fs
add
and
ds
push
mov
movs
xchg
scas
into
jge
movs
inc
push
dec
fcom
inc
mov
push
out
aam
mov
or
popa
das
sar
adc
(bad)
stos
test
stos
les
outs
stos
sbb
aam
adc
or
lahf
dec
pop
jl
add
lods
inc
mov
and
pusha
dec
shl
pop
scas
xchg
call
mov
movs
(bad)
lock
mov
jns
test
cs
sbb
push
test
push
mov
dec
in
es
imul
add
cmp
leave
arpl
push
jo
lahf
imul
repz
scas
dec
jmp
ret
(bad)
in
xchg
into
adc
cmp
mov
fsubr
nop
dec
mov
pop
addr16
push
test
jmp
loope
stos
movs
rol
sbb
in
fidiv
sbb
in
and
or
cs
mov
popa
or
adc
fnstcw
xor
out
add
jge
pop
inc
(bad)
cmc
sar
and
ret
jg
jl
push
add
test
pushf
and
adc
or
jg
mov
popf
cmp
movs
push
in
jmp
out
mov
push
pushf
sub
std
arpl
sub
jecxz
xchg
mov
pop
mov
inc
cmp
inc
das
mov
js
aaa
jmp
cmp
pop
or
pop
out
sub
lods
out
mul
inc
fcom
or
loope
xor
inc
adc
rol
inc
test
(bad)
cwde
xchg
push
inc
popf
inc
int3
mov
jb
aaa
int3
test
cwde
pop
xlat
fcmovbe
push
mov
cmp
mov
or
(bad)
repnz
sbb
mov
and
mov
loopne
fs
repz
push
push
scas
loope
fstp
xchg
pop
cmp
and
add
sbb
rcr
jl
sbb
push
adc
jecxz
sti
test
clc
ror
sbb
sub
mov
fisubr
push
cmp
imul
inc
scas
jmp
ins
loopne
pushf
xor
xchg
inc
jle
(bad)
cmovb
in
(bad)
bound
into
cmps
dec
test
dec
and
and
pop
jmp
rol
dec
popfw
dec
jo
loopne
scas
cmp
aas
call
mov
xchg
call
loopne
sar
test
das
repz
mov
jmp
sbb
(bad)
jmp
nop
adc
jp
inc
pop
mov
mov
push
cmps
mov
sbb
hlt
inc
lea
and
data16
frstor
xchg
dec
adc
rol
pop
mov
stos
retf
and
jae
and
lock
jg
or
mov
sbb
loopne
jo
das
fdivr
push
dec
jne
cmps
bnd
add
adc
and
push
mov
pop
imul
(bad)
stos
adc
pop
lods
mov
adc
out
cwde
jecxz
mov
lds
cld
sub
cmp
nop
push
xlat
sbb
loopne
jne
sub
and
dec
xor
and
ja
dec
int3
pop
inc
mov
or
xchg
fsub
mov
mov
push
(bad)
in
and
sub
in
or
mov
pop
js
inc
ret
clc
jg
sar
dec
xor
pop
pop
push
cmps
(bad)
and
or
cmp
ds
rcr
lods
ror
xor
les
loopne
jge
scas
xchg
je
inc
cld
mov
aaa
(bad)
mov
add
cmp
jbe
jbe
add
add
mov
push
xlat
xor
lgs
adc
(bad)
out
lods
outs
hlt
dec
cli
outs
sbb
dec
pushf
mov
int
xchg
xchg
sub
arpl
nop
loopne
push
arpl
outs
cmp
cdq
fld
xor
jmp
sbb
and
inc
dec
fwait
cmc
cmp
repnz
clc
sub
inc
mov
add
mov
in
(bad)
adc
or
popf
leave
gs
mov
or
pusha
and
mov
xchg
push
push
or
fdiv
cli
mov
call
aam
mov
and
data16
aam
jno
jne
cli
call
inc
ins
or
fadd
out
xchg
shr
push
pop
jno
cmp
inc
push
jne
outs
add
jle
lea
fwait
out
inc
int3
out
stos
repnz
mov
ins
push
retf
cmp
cmp
mov
dec
(bad)
ja
push
or
jmp
in
fs
cmp
mov
xchg
jg
add
sar
jno
mov
jl
lds
(bad)
fwait
imul
and
jae
dec
mov
sahf
inc
fsub
stc
test
push
mov
scas
pop
in
ds
(bad)
xchg
inc
sub
sub
ret
push
jns
cld
mov
scas
jl
mov
xchg
cli
xchg
daa
pop
lds
pop
or
mov
scas
mov
and
pop
test
adc
std
fldenv
pop
push
das
cmps
call
movs
jb
test
xchg
mov
stc
outs
cmp
cmps
mov
or
ret
fisub
addr16
mov
sbb
call
xor
ins
test
leave
inc
test
retf
or
add
shr
jns
sbb
dec
aas
leave
(bad)
xchg
ins
arpl
or
push
arpl
cmp
sti
inc
ins
call
sub
shl
nop
jg
hlt
popf
into
xchg
inc
jecxz
or
cmp
nop
mov
gs
cwde
sbb
cmp
pushf
lahf
xchg
xor
pushf
xchg
dec
sub
sbb
jmp
es
(bad)
push
xlat
movs
cs
mov
mov
fmul
push
adc
in
jns
push
pop
inc
push
mov
inc
shr
shr
inc
test
add
cmps
adc
jle
lahf
ins
icebp
sbb
push
pop
mov
and
rol
dec
push
sahf
movs
mov
outs
sub
push
sar
and
jns
rcr
push
das
outs
jmp
jecxz
mov
nop
or
lods
inc
ja
jg
dec
add
mov
imul
lahf
lea
pop
ret
jo
lods
rol
das
jns
xchg
in
xor
push
out
fnstcw
test
cld
mov
int
into
sbb
sub
ret
repz
aam
call
fdiv
mov
adc
xchg
mov
les
xor
mov
test
in
and
add
scas
jbe
fimul
xchg
test
sar
dec
mov
into
xor
cmps
lds
gs
(bad)
icebp
imul
pusha
repz
out
pop
icebp
jnp
std
movs
fcomp
fnstsw
cmp
mov
div
sub
jle
fwait
push
aam
outs
imul
mul
out
sub
(bad)
pushf
dec
pop
es
cmps
loop
adc
or
outs
stc
scas
loopne
pop
pop
cdq
and
adc
rol
(bad)
xor
xlat
inc
(bad)
sub
sub
cmps
les
out
(bad)
hlt
in
dec
fwait
ins
lods
inc
shl
dec
xor
xor
push
aaa
mov
sub
mov
or
outs
jmp
lea
imul
(bad)
in
movs
push
ds
xor
adc
in
sub
int
jb
xchg
fcmovnbe
adc
out
(bad)
xlat
movs
movs
rcl
repz
cmc
outs
loopne
cmps
pop
xchg
dec
mov
fwait
pop
mov
bound
jg
xor
imul
lods
sbb
rcr
pop
add
adc
fldcw
pop
ja
imul
rcl
retf
out
or
push
xchg
sbb
iret
bound
jne
cmp
sbb
ja
repnz
and
call
add
push
mov
or
fbstp
ins
fwait
fwait
sub
push
retf
std
add
and
add
in
push
popf
arpl
xor
mov
dec
pop
xchg
push
push
hlt
push
aad
std
cli
inc
jne
test
push
dec
dec
in
movs
pushf
sub
jbe
mov
push
(bad)
xor
cmp
xchg
xor
dec
xchg
scas
pop
push
clc
repz
inc
movs
rcr
mov
add
push
mov
(bad)
jmp
not
inc
outs
ret
pop
retf
rol
cmps
rol
imul
sahf
sub
daa
sbb
adc
jnp
jae
pop
(bad)
fidiv
xchg
fsub
mov
leave
arpl
jecxz
jae
(bad)
sti
in
inc
sub
sahf
ins
out
dec
movs
mov
(bad)
pop
jle
or
xor
(bad)
ret
aaa
mov
repz
push
push
sub
mov
ret
bound
(bad)
cmc
mov
call
push
cdq
es
shl
sahf
ret
daa
inc
xor
xor
and
movs
push
mov
outs
sub
sbb
inc
push
aaa
mov
cli
jmp
call
jl
dec
scas
inc
cmp
std
mov
add
mov
push
pop
cs
push
dec
sub
or
jge
and
jmp
in
dec
popf
iret
test
pop
sub
push
adc
shl
cwde
lods
mov
xor
add
(bad)
test
sub
gs
xchg
push
test
(bad)
std
push
mov
rcr
sub
cmp
movs
dec
xor
pop
cld
push
ss
ss
cdq
push
cmps
jp
enter
(bad)
adc
cmp
test
outs
mov
xchg
adc
and
xchg
pop
fwait
retf
jecxz
test
xlat
test
fcmovb
aas
inc
loope
scas
movs
cmp
hlt
icebp
dec
jnp
lahf
pop
gs
outs
mov
and
add
loope
adc
loop
push
sub
(bad)
mov
repz
or
pop
rcl
retf
xchg
mov
imul
shr
fistp
mov
adc
sti
add
sbb
pop
test
push
mov
jae
push
std
movs
iret
setle
sti
push
in
adc
dec
xor
adc
cmp
push
inc
and
push
inc
div
add
xchg
mov
in
fisub
pop
inc
jmp
shl
test
mov
repnz
cmps
sub
push
mov
xchg
in
ins
or
and
inc
into
int3
ins
sbb
push
push
and
sbb
outs
movs
jne
addr16
test
sub
jbe
fwait
imul
fbstp
ret
sar
stos
and
mov
xchg
push
dec
add
jecxz
and
cmps
int
test
repz
sub
add
mov
sub
fstp
(bad)
push
in
scas
call
lds
popf
sbb
push
dec
loope
mov
movs
out
in
sub
or
hlt
sahf
jnp
push
neg
sub
add
pop
movs
into
cmp
jno
push
arpl
inc
pusha
lahf
push
rcl
mov
mov
pop
push
sbb
retf
dec
stc
imul
es
xchg
push
sub
(bad)
data16
mov
jmp
mov
sbb
test
stos
mov
mov
xor
sub
xchg
ret
ret
pop
pop
jg
or
sub
loopne
cmp
push
or
push
mov
pusha
or
retf
cld
jmp
imul
adc
push
mov
dec
jmp
or
popf
test
jg
das
mov
stos
mov
rol
ja
iret
jecxz
xchg
push
test
or
adc
mov
xchg
daa
pop
pop
ror
xor
(bad)
adc
repnz
add
scas
hlt
das
dec
nop
leave
mov
js
leave
aaa
fisubr
or
mov
cli
or
and
js
sbb
mov
ja
mov
mov
jno
sub
mov
pop
pop
dec
rcr
stc
call
js
sub
loopne
add
lock
pop
sub
out
adc
test
in
add
mov
dec
and
ret
pop
dec
ds
xor
repz
cmp
pop
outs
mov
pop
adc
and
cli
or
xor
int3
(bad)
xlat
rcr
in
cmp
mov
pop
sbb
mov
dec
retf
and
or
jle
call
push
pop
not
mov
lock
ds
aam
leave
cwde
jl
ja
stos
push
fst
cs
lods
rcr
mov
and
out
or
ret
sbb
inc
xlat
pop
fidiv
jmp
xlat
in
add
stc
lock
fidivr
bound
ret
setge
out
pop
jo
neg
cli
sub
stos
xchg
cli
dec
bound
push
(bad)
sbb
push
cmp
sbb
lahf
cmps
fs
aam
jmp
ficom
in
or
retf
rol
inc
jbe
movs
mov
fstp
fisttp
pusha
nop
ins
inc
sbb
mov
jnp
xor
lock
inc
jmp
cmps
jge
push
mov
out
lods
outs
(bad)
call
sbb
cld
mov
cld
add
rcl
xor
dec
cdq
(bad)
mov
aaa
xor
sti
rcr
inc
ins
adc
fsubr
loopne
mov
mov
pop
shl
and
fild
push
xchg
mov
and
cmp
sahf
xchg
popa
hlt
call
aad
xor
cmp
or
lahf
das
jns
in
push
mov
loop
xor
add
ins
add
adc
sub
js
or
arpl
sub
shr
andps
lahf
das
test
call
mov
xor
fild
cmp
push
inc
inc
xchg
xor
nop
fidiv
(bad)
jbe
ds
xchg
push
fcomp
xor
cmc
test
ss
cmp
mov
pop
bound
xor
call
inc
enter
ss
in
xchg
fistp
inc
add
xchg
loope
mov
add
mov
xor
xchg
clc
xor
or
cmp
sub
sub
scas
mov
mov
sar
or
aas
fcom
fcmovne
pop
xor
ror
mov
(bad)
cmps
pusha
jg
add
mov
adc
das
cmp
or
pop
std
js
inc
mov
loop
inc
adc
ss
leave
xor
adc
xor
stos
xchg
push
cmp
ds
or
movs
sbb
mov
ficomp
pop
fisttp
add
xchg
jl
lods
pop
add
rol
and
mov
jp
call
sub
outs
or
xor
xor
mov
dec
mul
les
fcmove
dec
outs
stos
fucomp
add
jo
cmp
daa
pop
inc
sbb
retf
adc
mov
sbb
cmp
pop
add
jbe
ja
in
fistp
fwait
jg
fld
adc
fwait
jb
push
sbb
cmp
jle
sbb
loopne
pop
rcl
add
pop
xrelease
loopne
pop
rcl
mov
dec
xchg
mov
xchg
out
push
mov
lock
lods
and
(bad)
or
ss
test
xchg
das
rcr
sbb
cli
repnz
in
cld
repz
hlt
das
and
mov
iret
scas
pusha
jg
pop
jle
fidivr
adc
jl
stos
pushf
mov
jns
repz
int
and
inc
dec
cmp
sub
push
add
inc
push
xor
mov
or
rol
pop
mov
xor
pop
sbb
push
xor
xchg
jl
cmp
jge
arpl
data16
pop
sbb
xor
inc
mov
mov
pop
rcr
imul
dec
or
cwde
js
and
mov
cld
iret
or
sbb
sbb
or
jle
repz
loop
fucomip
stos
mov
(bad)
cmc
jl
add
sub
and
stos
cmp
aaa
inc
retf
les
lds
imul
sub
(bad)
test
dec
(bad)
dec
stos
int
fcmove
mov
and
mov
out
popf
sub
push
aas
aas
mov
call
out
iret
jecxz
(bad)
(bad)
push
and
shl
dec
mov
xor
js
and
jmp
into
mov
in
jno
out
in
das
and
popf
fwait
xor
int3
adc
xchg
and
sbb
jmp
lea
popw
fstp
add
out
fistp
mov
pop
dec
xchg
pop
jb
xchg
fdiv
inc
sahf
jmp
jmp
xor
mov
sbb
add
stos
ds
stos
ficomp
sub
rcl
sbb
jno
dec
pop
repnz
mov
dec
xchg
call
add
mov
dec
(bad)
inc
jg
xchg
mov
sbb
sub
adc
(bad)
and
push
jno
dec
sti
pop
dec
fs
popa
sahf
dec
sub
mov
pop
add
stos
and
mov
and
test
cdq
ss
mov
xchg
retf
push
(bad)
mov
into
ins
adc
hlt
scas
pop
mov
out
aas
ss
in
cdq
xor
push
mov
sub
fsub
sti
jl
cld
cmp
mov
and
out
les
mov
fidivr
call
repnz
cdq
cli
inc
iret
test
dec
hlt
inc
imul
dec
add
pop
mov
out
cmp
pop
sub
push
(bad)
dec
std
loopne
in
xor
xchg
jl
loopne
xor
mov
mov
loopne
jne
icebp
fbld
lock
inc
scas
xchg
jp
mov
adc
mov
scas
je
pop
cmp
push
cli
cmp
xchg
sub
push
dec
or
adc
mov
xor
in
add
sub
xchg
popf
jp
loope
cmp
sti
jnp
(bad)
mov
in
scas
inc
dec
and
ins
movs
jl
mov
mov
push
pusha
jbe
lahf
stc
adc
cli
add
mov
fwait
mov
add
mov
cwde
or
mov
ss
fwait
mov
jb
loop
rol
ja
pop
xchg
rol
xchg
cmp
loopne
aad
mov
mov
xchg
sbb
fisub
aaa
cs
cmp
and
xor
gs
mov
jmp
dec
aas
mov
daa
mov
mov
movs
sbb
js
fldcw
stos
ins
in
popf
inc
and
push
pop
jle
pop
addr16
adc
fwait
jmp
pop
adc
and
or
jp
pop
bound
adc
and
aaa
sahf
mov
adc
add
arpl
loope
outs
mov
fmul
xchg
dec
dec
in
lahf
xor
xor
pushf
jno
xchg
icebp
inc
xor
rcl
cmp
xor
inc
jge
add
adc
xor
add
mov
fcomp
pop
jne
push
aad
pop
mov
retf
sbb
mov
stos
xchg
adc
cli
cli
gs
in
inc
int3
(bad)
scas
iret
jge
and
out
push
pop
stc
cdq
loopne
mov
push
or
imul
inc
stos
iret
adc
dec
xlat
mov
and
sub
das
fbld
int3
bound
mov
pop
jnp
sub
lods
xchg
jbe
or
xchg
arpl
jae
push
xor
dec
fistp
jle
jo
rcl
push
mov
and
mov
pop
js
(bad)
lahf
aad
int3
shr
inc
xchg
jmp
jmp
sub
xchg
mov
les
adc
inc
cmp
sbb
sbb
xchg
jmp
mov
cmp
popf
pop
add
mov
jns
mov
shl
xchg
ror
inc
mov
lds
or
xchg
sub
scas
les
call
(bad)
xor
jbe
jne
jnp
dec
jne
fst
fcmovu
dec
mov
add
push
mov
aam
sbb
mov
js
push
or
cwde
mov
mov
lods
clc
adc
sti
imul
jp
retf
scas
mov
cmp
icebp
into
sub
scas
out
mov
fs
loopne
sbb
je
push
mov
ret
push
fs
mov
ins
pop
dec
dec
mov
enter
jmp
das
es
aad
jle
adc
idiv
pop
jo
jns
ins
inc
lds
push
(bad)
mov
sbb
je
sahf
retf
mov
xor
ror
test
xor
pop
push
sahf
push
aam
(bad)
push
sub
or
add
scas
aad
je
gs
arpl
cmp
lea
adc
jmp
and
ja
sbb
out
add
pusha
dec
cdq
pop
push
iret
out
jmp
push
ror
inc
aam
cdq
(bad)
dec
jg
cmps
iret
ds
mov
ins
and
mov
inc
pop
sub
(bad)
push
cld
lds
inc
lea
add
pop
jmp
mov
inc
aaa
das
jns
inc
cmps
addr16
ja
or
mov
sub
add
push
ret
jge
ds
and
repnz
sub
mov
inc
stos
in
and
jl
push
jne
(bad)
jg
addr16
out
jae
dec
xchg
out
mov
fimul
sahf
movs
movs
movs
xchg
pop
jnp
mov
xchg
cmc
int3
call
adc
in
xlat
(bad)
fstp
jo
pop
add
retf
xor
in
push
xor
adc
pop
mov
jp
xchg
xor
or
mov
pop
cmp
pop
jo
call
push
add
cmp
dec
ret
cs
dec
xchg
mov
fldcw
scas
aad
mov
jg
mov
mov
shl
fwait
jb
xor
pushf
int3
inc
pop
pop
sbb
push
movs
sbb
fsubp
pop
int
out
inc
repnz
bound
rol
gs
outs
popa
jns
sub
ins
pop
sub
mov
ins
cmp
adc
jmp
mov
jb
push
xchg
push
jae
fist
retf
scas
add
adc
stos
xor
into
mov
rep
mov
mov
jae
das
jecxz
pop
xchg
scas
push
push
das
sub
jmp
pop
jg
and
mov
lock
or
jl
icebp
lods
(bad)
je
bswap
(bad)
(bad)
push
int
sbb
mov
dec
fs
and
pop
std
jge
pop
nop
xor
lea
dec
jmp
dec
dec
or
pop
xor
shr
enter
retf
stc
fcom
cmp
xchg
ss
xor
sub
cmp
inc
popa
jne
(bad)
outs
mov
scas
test
cmc
aas
xor
aaa
add
xor
inc
xor
sub
cld
call
out
jp
repz
pop
vmovaps
cmp
xor
pop
and
sahf
dec
xchg
loop
fcmovnb
jp
lock
int
add
adc
bound
cmp
(bad)
jmp
retf
cmp
cmp
stos
daa
popf
sbb
dec
or
xor
dec
mov
xor
xor
fld
fsub
aaa
jne
adc
adc
outs
outs
sbb
call
fsubp
jb
(bad)
jg
inc
aad
aad
shr
test
sbb
sub
div
jle
dec
push
sbb
shl
mov
in
or
shl
imul
push
mov
scas
bound
pop
arpl
pop
jb
sbb
cld
sbb
xchg
lea
iret
cmp
mov
outs
out
add
js
test
ret
jp
xlat
aad
dec
cmp
sub
dec
jle
loope
mov
test
test
inc
aad
sbb
dec
or
jp
les
fnstenv
cdq
mov
xor
(bad)
cmp
adc
jmp
fbld
dec
sbb
pop
std
inc
cmc
out
or
cmp
jne
(bad)
lea
push
adc
mov
sub
jbe
or
jbe
inc
cwde
jmp
sub
cld
inc
xor
jmp
pop
dec
mov
es
inc
pop
xchg
popa
mov
dec
jg
cs
mov
or
or
fstp
mov
imul
movs
push
mov
ins
dec
push
out
imul
aam
(bad)
lock
and
add
add
jne
jmp
scas
cmp
add
cmp
and
dec
or
out
push
into
in
rol
or
or
dec
out
js
mov
add
xor
retf
les
sub
jo
sbb
cmp
call
push
sbb
sub
int
enter
mov
push
loopne
jg
test
push
inc
retf
lods
or
(bad)
data16
mov
call
mov
xchg
dec
loopne
mov
jno
movs
adc
pop
bound
nop
xchg
icebp
cmp
imul
ins
mov
mov
test
ins
sti
lds
loopne
xchg
xor
inc
mov
xchg
inc
add
aas
mov
ja
pop
rcl
and
in
dec
test
enter
das
mov
xor
or
cmp
mov
aam
dec
lahf
mov
add
jg
push
xchg
mov
test
scas
mov
mov
xor
in
push
out
repz
mov
mov
sbb
rol
xchg
cmp
loope
daa
jno
cmp
mov
push
jmp
call
or
je
mov
fdiv
cmp
pop
sti
loopne
pop
out
inc
sahf
adc
xchg
jne
or
pop
add
xchg
fs
arpl
push
jne
and
cdq
out
sub
sti
push
cmc
pop
mov
pusha
rcr
cli
ds
cld
(bad)
fst
repnz
dec
jecxz
or
addr16
jno
adc
pop
adc
mov
shl
jbe
cmp
es
cmp
inc
aam
aam
pop
fimul
and
out
aad
mov
or
lds
sbb
push
fsubr
xor
push
sbb
and
int
or
stos
movs
daa
fsubrp
and
xor
in
cmc
mov
movups
and
out
adc
js
push
daa
fnstsw
cmp
addr16
inc
jmp
popf
es
mov
jne
ret
mov
and
push
js
xor
xlat
or
and
mov
jp
push
pop
shl
push
arpl
xlat
sahf
pop
jge
(bad)
pusha
mov
test
sub
add
sub
jg
jnp
jl
mov
jne
(bad)
fadd
pop
ror
or
adc
cmps
sub
push
data16
sub
popa
sbb
pop
add
sbb
imul
push
dec
adc
cmc
(bad)
and
repz
in
pop
shr
cmp
bsr
mov
adc
fwait
sti
js
mov
ret
daa
mov
cmp
sub
int
sub
cdq
jne
rcr
dec
xchg
je
sbb
scas
movs
cdq
scas
dec
shl
mov
sub
push
xor
jns
int3
(bad)
xchg
cdq
push
mov
popf
aaa
fwait
xchg
inc
sub
push
in
rcl
jle
push
push
out
and
mov
dec
pop
mov
mov
sub
jecxz
mov
add
cmp
adc
push
or
xor
jmp
retf
jge
add
sbb
mov
cmp
inc
in
das
xor
sbb
inc
ins
sub
xchg
jecxz
dec
xor
je
mov
test
cmp
xor
(bad)
clc
stc
ret
scas
sbb
lahf
sub
(bad)
fmul
xchg
push
mov
pop
cmp
or
add
mov
sti
xor
(bad)
mov
jge
xor
inc
jmp
mov
or
mov
out
outs
into
bound
cld
outs
ds
scas
add
sub
push
sbb
xchg
fist
mov
and
les
or
cmp
pop
and
or
xchg
lock
test
(bad)
frndint
mov
inc
add
call
and
repz
mov
ja
(bad)
aam
push
cmp
js
push
ret
stos
aam
movs
cmp
in
fst
push
or
adc
inc
ret
push
xchg
daa
push
push
sub
inc
outs
in
or
and
int
mov
test
cmp
pop
cld
dec
cmps
adc
jmp
fwait
and
pop
mov
fcomp
mov
nop
test
rep
ret
cmp
lods
and
xchg
push
pop
mov
pushf
leave
ficom
add
in
jl
ja
(bad)
pcmpgtw
pop
sbb
dec
inc
add
xor
inc
xor
retf
and
xlat
mov
int
pop
sbb
cmp
in
xchg
mov
fstp
cmc
test
scas
test
cmp
mov
dec
adc
daa
dec
adc
mov
and
test
cli
push
mov
adc
pop
out
jecxz
cmp
adc
das
xor
dec
and
xor
test
repz
pop
mov
xchg
adc
sbb
cmp
sar
cwde
sbb
xor
dec
pop
xor
mov
mov
cwde
retf
jbe
and
rol
adc
cwde
in
mov
xchg
adc
test
xchg
aas
xchg
inc
or
int3
imul
popf
retf
loop
fisttp
cs
cmp
xor
repz
jg
xor
(bad)
sub
fsub
cmc
push
or
push
jl
pop
push
scas
(bad)
mov
hlt
xor
and
iret
arpl
rcl
lods
or
sub
test
adc
out
(bad)
fstp
jnp
stc
dec
dec
cli
cdq
sub
fstp
mov
cmp
fs
(bad)
aad
inc
ss
or
mov
mov
jae
(bad)
aad
inc
outs
xor
inc
test
pop
sbb
or
or
xchg
(bad)
ret
pop
push
int
add
pushf
into
(bad)
lea
mov
adc
pop
jg
gs
pop
fldln2
or
mov
icebp
idiv
push
mov
xchg
mov
repnz
iret
pop
xchg
popf
aaa
pop
push
dec
js
div
xchg
jl
mov
xchg
jbe
gs
cmp
call
movs
int
sub
jmp
scas
mov
gs
push
ret
sbb
fwait
test
sti
and
pop
clc
sbb
pop
je
or
xchg
pop
scas
addr16
cmp
xchg
(bad)
jmp
in
in
fstp
add
mov
cmps
popf
popa
stc
pop
cmps
mov
ret
sti
push
sub
pop
popf
jo
dec
cmc
scas
bound
cmp
xor
call
inc
dec
jno
(bad)
sti
dec
dec
mov
xchg
dec
dec
jbe
rcr
sbb
xor
in
mov
push
dec
leave
stos
call
mov
lods
lods
jne
adc
fsubr
sti
in
movs
aaa
gs
mov
pushf
outs
ss
lea
push
xor
ret
xchg
loopne
pop
dec
adc
loop
mov
inc
sti
sub
pusha
xchg
test
push
jns
clc
mov
add
scas
fistp
lea
cmp
jnp
mov
sub
sub
pop
adc
ja
das
fcmovnbe
aad
cmp
xor
pop
iret
cmps
inc
gs
xchg
les
das
pandn
jae
dec
cmp
jns
jmp
(bad)
std
(bad)
movs
mov
int
add
jmp
mov
mov
xchg
frstpm(287
push
fdiv
into
and
add
sub
movs
les
outs
fwait
loop
stos
and
adc
ret
fs
push
jg
pop
mov
push
mov
or
sbb
pop
xchg
ins
pop
dec
xchg
call
add
cmp
cwde
inc
(bad)
push
aad
aad
lea
cmp
mov
scas
cmp
(bad)
jmp
sub
aaa
pop
mov
mov
(bad)
out
xor
mov
movs
ins
xchg
scas
(bad)
adc
cmp
pop
fmul
xor
mov
pop
call
iret
xchg
pop
jg
mov
add
adc
hlt
mov
inc
iret
dec
(bad)
repz
fidivr
jge
loopne
mov
retf
sbb
sbb
xchg
retf
out
dec
or
inc
mov
mov
fwait
jnp
outs
mov
ins
sbb
or
sar
pop
and
pop
fwait
mov
lahf
cmps
cmps
call
push
push
fwait
pop
setne
mov
aam
mov
pop
sub
push
cli
lahf
fild
fs
and
fadd
test
and
jno
push
push
mov
leave
scas
ds
xchg
lods
call
ins
add
imul
add
sbb
ds
mov
fcomp
dec
xchg
jmp
cli
push
sahf
mov
and
movs
(bad)
fcmovne
mov
jbe
les
lds
(bad)
mov
add
lock
call
loope
mov
add
xchg
cmp
cmp
retf
les
pop
lods
neg
sub
jb
jp
ficomp
arpl
sbb
mov
cmp
fisttp
int
push
movs
popf
fadd
inc
sub
test
hlt
jae
add
fwait
xor
adc
inc
inc
push
or
push
jb
aad
and
mov
mov
xchg
or
inc
inc
in
lahf
sbb
mov
call
mov
jo
pop
xchg
cmps
xchg
test
test
pop
sbb
sbb
xor
jns
xchg
cld
jo
loop
mov
ins
jmp
gs
jl
mov
ins
jnp
push
test
sub
inc
cmps
outs
dec
cld
fnstsw
int
in
rol
mov
jb
data16
js
or
mov
jle
scas
mov
ror
out
pop
(bad)
enter
dec
cmp
fs
hlt
(bad)
in
leave
adc
xchg
xchg
mov
cwde
das
loop
scas
push
addr16
xchg
push
dec
aaa
shl
push
sahf
mul
jmp
js
and
mov
sub
mov
aaa
pushf
leave
cmps
dec
cmps
push
and
ss
mov
rcl
test
pop
xor
out
add
inc
sti
(bad)
mov
out
shl
or
fs
push
mov
dec
xchg
enter
loop
xchg
in
mov
cmp
inc
mov
jg
rcr
call
push
rcl
mov
push
scas
sub
add
cld
fldcw
scas
aad
and
dec
xor
sub
mov
inc
aaa
in
mov
jbe
in
out
sbb
pminub
mov
adc
mov
jmp
paddusb
(bad)
aam
sub
out
and
jbe
push
fwait
sbb
cli
js
int3
push
mov
or
in
(bad)
mov
(bad)
ror
jge
xchg
inc
into
cwde
mov
adc
adc
sti
pusha
mov
add
int
ins
(bad)
in
icebp
minps
das
dec
loopne
add
ins
sti
call
sbb
imul
dec
repnz
(bad)
pop
int
movs
mov
xor
xor
sahf
sbb
jmp
xor
std
mov
xchg
inc
cmp
sub
mov
(bad)
call
(bad)
out
or
adc
aad
jo
jp
push
clc
retf
inc
fnstsw
dec
mov
retf
adc
mov
hlt
data16
adc
or
rcl
add
int3
or
xor
adc
and
and
in
(bad)
fs
jbe
adc
xchg
clc
mov
cwde
pop
arpl
xchg
add
jl
das
jnp
bound
xor
mul
aaa
loopne
shl
cmc
mov
jmp
in
daa
lds
arpl
je
call
mov
sbb
push
and
rcr
sub
and
repnz
std
inc
and
xchg
pop
sub
and
or
nop
xchg
sub
and
sti
cli
loop
arpl
push
sub
xor
add
dec
adc
mov
add
jecxz
sbb
xchg
repz
fist
pop
jg
or
or
jnp
inc
cld
push
repz
sbb
div
mov
(bad)
into
das
repz
lock
cli
jae
xchg
nop
jne
cmp
popf
mov
icebp
test
(bad)
pop
push
fisub
pop
retf
xor
dec
adc
push
je
das
enter
add
icebp
xchg
push
adc
ja
mov
mov
mov
je
mov
inc
popa
rol
jmp
pop
sub
arpl
ret
fstp
xor
pop
mov
mul
jns
stos
ds
rol
call
les
mov
xchg
icebp
out
adc
sbb
in
xor
inc
int3
out
(bad)
and
dec
xor
dec
cdq
push
mov
push
and
ficom
mov
or
icebp
dec
cmps
push
loope
dec
pop
push
ret
pop
dec
mov
inc
push
bswap
xchg
mov
mov
out
mov
xchg
ret
jne
clc
lea
cli
cmp
inc
xchg
and
fwait
xchg
into
sbb
fcomp
leave
sub
in
ret
es
cmps
test
aad
sub
ret
pop
cmp
sub
adc
mov
push
mov
addr16
cmp
push
xchg
(bad)
data16
cs
int3
push
or
(bad)
mov
cmp
sbb
dec
retf
(bad)
and
dec
push
mov
aas
push
les
mov
loope
mov
(bad)
call
adc
cmp
imul
mov
sub
add
dec
inc
push
movs
mov
and
add
hlt
dec
stc
adc
test
sub
mov
push
mov
push
mov
adc
adc
add
mov
leave
outs
cmp
xor
imul
and
ss
xchg
fiadd
inc
mov
xor
cld
sahf
lock
popa
test
push
int
daa
and
pop
es
push
push
andnps
sbb
mov
adc
repz
mov
push
sub
out
pop
addr16
fs
mov
and
mov
push
ds
and
sbb
loop
xchg
ret
sahf
xchg
cmp
aaa
sahf
jg
sar
fwait
push
cmps
or
or
mov
adc
sbb
lods
add
es
stc
mov
bound
push
adc
add
retf
aam
jne
jp
fistp
mov
repz
sub
repz
ss
cwde
std
jo
addr16
and
ins
dec
add
ss
cmp
sub
add
adc
and
data16
sub
imul
inc
loop
cmp
xchg
jbe
mov
lock
jb
dec
bnd
dec
fdivr
jb
repnz
dec
dec
cs
int
xor
or
dec
pop
iret
inc
add
lods
test
sbb
mov
sbb
push
inc
test
add
mov
ficom
ja
dec
aam
xor
into
retf
mov
xchg
sub
js
push
cmp
xchg
dec
popa
dec
inc
or
jp
ja
xchg
aaa
mov
call
xchg
xchg
and
and
imul
mov
hlt
add
jmp
xchg
add
inc
xchg
jno
mov
retf
sub
lahf
ja
ficomp
mov
bound
push
sbb
sbb
cmp
xchg
mov
mov
les
sbb
pop
sti
push
dec
imul
shl
xor
inc
imul
ins
push
sbb
out
push
outs
push
arpl
imul
data16
fwait
ins
aaa
pusha
addr16
xor
mov
sar
movs
sub
push
outs
inc
inc
inc
std
call
outs
cld
cmp
lods
mov
xchg
mov
add
cmc
inc
outs
push
leave
mov
lods
cmps
add
aad
push
pusha
adc
lods
loopne
mov
sub
mov
dec
mov
jnp
sub
or
fwait
cmp
test
addr16
test
or
pop
and
push
push
movs
pop
fadd
int
cmp
nop
jne
clc
push
pusha
pop
cmp
nop
aam
mov
popf
rol
cmp
lahf
test
xchg
out
sub
(bad)
pop
pusha
test
pusha
mov
adc
out
jge
or
scas
aam
iret
jb
mov
call
push
shr
fwait
sbb
rcl
popa
inc
xchg
mov
cld
aas
mov
push
call
pop
test
and
push
popf
mov
cmp
pop
push
jle
pusha
xchg
pop
jl
call
aam
sub
mov
push
xor
daa
sbb
cmp
out
add
clc
sahf
mov
data16
outs
das
or
cmp
sub
outs
pop
add
pop
fwait
(bad)
mov
adc
push
mov
push
stos
sub
out
adc
dec
dec
xchg
pushf
hlt
ins
test
or
leave
out
pop
xlat
mov
dec
mov
adc
sti
lahf
ds
stos
data16
dec
pop
arpl
test
xchg
xor
popa
jae
and
sub
fidivr
sub
and
fist
ja
gs
sti
pop
scas
lods
xchg
xchg
mov
out
cli
dec
and
sub
retf
clc
and
and
push
jns
pop
lea
mov
xchg
sub
add
cli
cdq
mov
mov
mov
sub
mov
lds
(bad)
cmp
ins
xchg
or
imul
pop
iret
fs
outs
test
jmp
mov
cmp
scas
test
xor
adc
or
out
fcomp
ins
mov
dec
mov
aaa
xor
leave
scas
pop
mov
ret
mov
and
(bad)
jmp
sti
mov
in
or
in
leave
add
mov
fnstsw
add
mov
mov
cmps
mov
lods
dec
out
cs
ins
sub
sub
retf
adc
adc
inc
cmp
mov
nop
xchg
cmp
push
rcl
gs
retf
icebp
jns
add
xchg
or
(bad)
in
push
jp
mov
or
in
or
retf
mov
mov
mov
arpl
push
and
imul
add
sahf
cmp
dec
test
inc
cmp
cmp
pop
gs
jnp
stc
jmp
cmps
mov
pop
sbb
stc
dec
mov
out
test
retf
int3
imul
(bad)
dec
sahf
jmp
(bad)
out
pop
pop
push
lahf
fwait
call
and
das
mov
jae
ins
(bad)
rol
movs
rcl
into
mov
out
or
ins
fdivr
mov
into
adc
outs
add
sbb
in
add
movs
mov
xchg
adc
push
push
imul
jecxz
test
call
sub
mov
push
sbb
jae
add
mov
add
xchg
or
fadd
aad
in
das
movs
jns
test
retf
mov
push
aas
fs
and
pop
pop
cmp
jl
add
(bad)
mov
les
xor
not
out
clc
jne
ins
sub
retf
out
cmp
jnp
sub
xor
push
xchg
ds
ins
xchg
push
sbb
js
daa
nop
aaa
mov
or
call
push
xchg
xchg
xchg
retf
idiv
(bad)
and
add
fstp
pushf
inc
clc
mov
add
push
test
jbe
idiv
sub
hlt
xlat
and
mov
xchg
xlat
cmp
cwde
xchg
loopne
xor
popf
or
js
enter
shl
push
mov
push
movs
fstp
scas
mov
dec
inc
je
fdivr
adc
sti
bound
outs
cmp
jmp
aad
or
test
outs
add
arpl
pop
(bad)
rcl
loop
pop
dec
sbb
sbb
mov
push
psraw
(bad)
(bad)
pop
pop
or
(bad)
cmp
adc
mov
out
gs
lock
ficom
ds
sbb
pop
jle
fwait
pop
aaa
xor
ds
dec
xor
dec
daa
adc
or
pop
pusha
hlt
xchg
and
push
arpl
dec
outs
out
pop
scas
add
jle
mov
gs
jecxz
aam
xchg
call
scas
jecxz
popa
dec
push
into
fstp
call
and
data16
call
cwde
push
(bad)
sbb
rol
add
sub
add
mov
push
push
mov
pop
pop
mov
loope
retf
ficomp
jl
hlt
add
pop
xor
bound
push
jno
mov
hlt
mov
push
lgs
push
and
daa
push
jp
(bad)
aaa
dec
push
and
pop
jbe
das
out
out
cmp
fwait
pop
pop
xor
rcr
mov
(bad)
shl
scas
test
sbb
mov
inc
fmul
and
xor
mov
and
in
jp
inc
mov
inc
in
mov
movs
xchg
push
adc
and
cmps
or
and
imul
sub
cdq
mov
or
jnp
aad
cld
push
sub
add
jo
stc
lods
pop
dec
pushf
inc
sbb
dec
in
mov
call
loop
fldenv
mov
in
(bad)
mov
jae
inc
sbb
or
icebp
xchg
fild
xor
or
lea
in
jne
add
push
mov
mov
rol
push
fcmovnb
jb
sbb
adc
mov
fwait
imul
js
add
mov
jle
inc
add
add
sub
loop
sub
sub
test
mov
enter
mov
outs
cli
cmp
dec
(bad)
xchg
retf
loop
pop
(bad)
or
xor
sbb
add
mov
bound
int
push
test
stc
xchg
or
add
fcomi
dec
neg
out
ret
ja
es
jne
inc
dec
out
sbb
je
fmul
in
lahf
mov
mov
lds
lods
pushf
enter
retf
push
sbb
mov
mov
sub
jae
das
sub
push
add
aas
inc
mov
xchg
sub
push
inc
mov
dec
movs
xor
sub
dec
add
rol
adc
call
push
and
jo
leave
nop
ret
or
je
xor
push
mov
mov
les
jnp
(bad)
fild
cdq
and
rcl
pop
sub
mov
mov
loopne
sar
mov
xchg
loope
aaa
retf
aas
xchg
nop
je
push
push
test
xchg
iret
jns
sar
push
cmps
imul
mov
mov
dec
(bad)
cmp
cmp
loop
lea
int3
ret
loope
pop
jno
out
xchg
fcmove
ja
jp
xlat
push
xor
cmc
in
rol
sub
push
popf
jecxz
jl
push
call
call
in
es
mov
(bad)
int
jl
popf
sub
push
or
jnp
or
mov
jae
gs
int
mov
lods
js
pop
sbb
test
mov
adc
pop
out
mov
push
(bad)
mov
xchg
fstp
xchg
adc
(bad)
loopne
cmp
cmovge
lods
test
jo
pushf
push
and
lods
push
xchg
jmp
fist
popa
pop
popa
(bad)
loopne
lock
dec
addr16
in
add
mov
adc
inc
xchg
dec
lds
das
sub
lods
sub
xlat
into
idiv
mov
test
pushf
popf
push
mov
sbb
in
jns
or
push
or
rol
js
dec
push
sub
fmul
cmp
push
xor
push
or
sbb
popa
les
(bad)
jb
pop
stc
mov
mov
add
add
mov
mov
inc
mov
ins
lea
stc
mov
push
push
xor
ja
push
movs
js
mov
mov
sbb
pop
mov
lock
or
adc
jns
test
cwde
sbb
int
or
add
pop
pushf
mov
and
cmp
push
xchg
mov
movs
fxtract
pop
rcl
pop
jne
pop
mov
dec
xor
mov
jmp
cwde
movs
mov
bound
pushf
pop
or
test
mov
inc
jne
sar
push
add
mov
dec
stc
ret
repnz
(bad)
xchg
scas
push
aas
sub
or
push
sub
inc
push
or
test
add
sti
test
jmp
dec
cmps
test
leave
sbb
xor
ins
pushf
in
lahf
xor
inc
fnstenv
adc
ret
mov
pop
mov
xor
sbb
in
xchg
xchg
popa
and
cdq
push
enter
or
lds
int3
sti
in
popf
adc
mov
jl
xchg
sbb
mov
cmps
add
inc
cdq
ret
push
popa
and
mov
shr
mov
dec
jo
out
(bad)
movs
stc
movs
mov
loop
(bad)
pop
call
jecxz
aad
mov
ret
push
test
dec
add
mov
sti
bound
shr
jmp
add
cmp
adc
sub
adc
cld
jbe
jp
jne
ror
and
pop
leave
jge
(bad)
mov
sub
push
mov
sbb
scas
pop
clc
adc
dec
push
adc
shl
sub
in
sub
inc
xchg
mov
mov
cmp
xor
ins
ja
ins
je
pop
push
and
mov
xchg
fimul
das
pop
adc
iret
lahf
jae
or
mov
stos
dec
mov
add
jno
mul
cmp
inc
xor
jg
call
addr16
push
sbb
pop
xor
push
pop
mov
in
sahf
popa
xor
xchg
lahf
dec
dec
out
add
jle
int3
enter
ins
repz
push
imul
ret
imul
pop
fadd
dec
pop
inc
sub
jbe
jne
frstor
sub
jmp
out
jo
pop
pop
outs
sti
clc
inc
or
ins
ret
sar
and
xchg
cmp
mov
call
(bad)
clc
push
js
shl
ficom
in
and
add
pop
xor
jo
bound
je
movs
sub
cli
mov
cld
adc
je
(bad)
(bad)
(bad)
shl
xlat
jge
mov
xor
push
ret
inc
mov
sbb
fcom
sbb
and
es
xchg
cmps
sahf
cs
push
stos
and
rcl
ja
clc
sub
mov
outs
xrelease
jne
and
scas
xchg
sub
stos
xor
dec
mov
imul
or
call
cmp
sbb
bound
sbb
and
call
wrmsr
fwait
pop
add
inc
(bad)
cmp
mov
xor
lock
adc
ror
dec
jg
mov
mov
inc
pop
aaa
push
retf
aad
pop
ret
adc
push
cmp
hlt
movs
(bad)
data16
imul
mov
push
inc
cwde
mov
jns
push
cmp
dec
xchg
les
std
aad
int3
(bad)
xor
adc
aas
mov
call
jo
test
xor
push
pop
sbb
(bad)
imul
or
xchg
dec
movs
pop
mov
lds
test
stos
test
cli
push
data16
aas
mov
adc
test
(bad)
into
scas
mov
jne
or
popf
cwde
add
or
sbb
mov
xchg
push
xchg
sahf
xchg
push
test
inc
in
sbb
adc
jmp
sub
mov
jecxz
fcom
movs
es
addr16
mov
out
cwde
pop
sub
mov
push
call
pop
mov
add
or
cmp
push
push
int
push
leave
rol
jnp
mov
xor
pop
cli
popf
lock
inc
icebp
aad
cmp
xchg
mov
push
iret
cli
rcr
mov
in
push
sbb
addr16
push
js
inc
mov
inc
je
lds
ret
repnz
mov
cmc
mov
mov
pop
dec
mov
mov
fdivr
xor
cli
jno
gs
mov
sbb
in
dec
test
retf
and
dec
cwde
pushw
jo
loopne
add
adc
sub
xchg
or
clc
and
shl
push
push
popf
aad
xchg
in
inc
ins
dec
add
add
int3
div
ret
retf
sbb
cmp
jne
fisttp
push
mov
jbe
fwait
cwde
xor
adc
and
jmp
mov
aaa
mov
fsubp
push
sbb
ins
push
test
dec
out
mov
fst
push
sti
clc
ins
cmps
push
pop
bound
aad
add
sbb
in
(bad)
pop
pop
or
xchg
sbb
in
jecxz
dec
popf
xchg
leave
rcr
push
inc
dec
jo
stos
xchg
push
mov
stos
ins
imul
mov
pop
cmp
ret
push
xor
lods
pop
mov
adc
(bad)
mov
cld
dec
jmp
outs
les
test
stc
mov
lea
sahf
cmp
mov
pop
stc
or
les
xchg
sbb
jns
pop
adc
pop
rcl
int3
cmc
sub
inc
popf
pop
call
xchg
leave
cs
das
push
scas
cmp
sbb
gs
mov
dec
mov
sbb
mov
jns
dec
ja
mov
enter
push
cmp
lods
hlt
rol
pop
addr16
jno
cmp
dec
and
jb
mov
rcr
mov
push
cld
idiv
(bad)
retf
sahf
pop
adc
dec
mov
xlat
sbb
pop
adc
and
sbb
xchg
mov
das
sub
pop
dec
xchg
test
clc
je
jo
out
pop
inc
push
dec
xchg
enter
daa
pushf
test
jnp
xchg
(bad)
inc
inc
add
and
test
ins
lods
or
(bad)
lea
add
neg
push
xchg
add
mov
inc
ret
inc
lea
cmps
movs
or
dec
cmp
ja
retf
xlat
in
pop
out
inc
mov
mov
push
ins
movs
inc
popa
push
pop
pop
push
inc
popf
stc
pushf
call
ss
jnp
addr16
and
adc
cs
and
add
push
jmp
cwde
dec
mov
jne
sbb
sub
or
(bad)
pop
sub
cmps
shr
leave
push
lods
push
jl
and
adc
or
inc
mov
out
inc
lahf
pop
cdq
ror
int3
or
jmp
inc
in
sub
xchg
out
push
xor
retf
daa
add
jbe
shl
inc
xlat
mov
xlat
add
sbb
xchg
pusha
or
sub
scas
mov
jmp
sub
out
out
mov
ins
sub
cwde
xor
movs
add
inc
movs
adc
lea
and
jmp
aaa
lods
mov
cmp
sti
mov
shl
call
in
push
dec
jne
stos
add
jno
xor
movs
cli
mov
xor
test
xchg
add
inc
mov
movs
dec
jmp
popf
push
jne
imul
dec
pop
inc
xchg
stos
repnz
not
imul
xchg
dec
adc
pop
or
les
(bad)
cmp
lods
adc
and
cvtpi2ps
mov
jae
lahf
push
cmp
or
mov
pusha
cmps
jae
dec
je
cwde
test
xlat
int3
xchg
test
jg
mov
aaa
push
cmp
in
mov
mov
(bad)
dec
(bad)
daa
test
(bad)
pop
and
(bad)
rcr
pushf
test
fdivr
jb
cmp
add
shl
nop
outs
or
mov
stos
sub
jno
inc
dec
(bad)
mov
scas
arpl
cmp
jae
pop
dec
test
sar
(bad)
clc
jbe
xchg
jbe
add
sub
jb
jge
ss
cmp
neg
sub
sbb
ins
int3
dec
cmp
mov
xchg
mov
lods
addr16
dec
mov
dec
and
scas
shl
int3
push
mov
push
dec
ficomp
push
enter
jmp
or
pop
mov
mov
fisttp
(bad)
fsubr
pop
push
xchg
adc
adc
sub
cmp
out
push
xchg
adc
push
mov
iret
xchg
mov
xchg
and
add
aas
dec
sub
cld
arpl
push
jge
lahf
mov
rcl
jns
jl
mov
ret
je
pop
(bad)
shr
push
jg
retf
lds
sbb
ss
sbb
mov
movs
add
mov
in
test
mov
or
jno
(bad)
xchg
not
pop
outs
push
pop
push
repnz
jmp
xchg
stos
push
push
hlt
xchg
xlat
test
pop
arpl
movs
pop
pop
sbb
dec
or
cmp
daa
push
push
push
lea
mov
xchg
out
jae
inc
ss
xchg
aam
in
jae
push
mov
sbb
push
mov
sbb
cmps
xor
pop
sbb
adc
ret
retf
les
and
sbb
inc
add
push
pop
dec
jg
mov
das
test
or
les
ins
nop
push
add
push
adc
sub
jp
fild
push
repnz
jne
jo
les
xor
or
jns
scas
movs
cmp
loop
adc
sub
mov
loopne
adc
test
inc
push
jle
lods
pop
or
mov
push
je
xchg
sub
fadd
enter
addr16
ja
sbb
mov
sbb
adc
pop
cld
imul
call
out
or
outs
jg
mov
into
fwait
daa
in
ins
jo
pop
add
imul
fucomip
mov
lahf
es
inc
jg
aaa
adc
pop
cmp
(bad)
cmp
ja
loop
std
daa
aad
inc
fnstcw
inc
mov
xchg
out
mov
dec
cmp
add
and
sbb
pop
std
fbstp
popf
push
sti
mov
push
outs
adc
pop
xor
lea
mov
mov
stos
push
mov
shl
aad
push
adc
rcl
mov
mov
movs
adc
pusha
ins
or
mov
arpl
jmp
fucomp
jno
pop
loop
and
jbe
stos
in
(bad)
ss
sahf
inc
ret
xchg
xor
mov
add
cmp
push
fucomi
cmp
inc
je
loop
leave
test
xchg
jle
test
jns
ja
pop
mov
adc
je
ins
and
lock
or
xor
rcl
bound
dec
das
loop
sub
int
das
ja
test
xor
scas
pop
sub
out
(bad)
out
cmp
call
mov
sbb
xor
inc
fwait
stos
push
int
inc
add
shl
xchg
sar
icebp
push
fiadd
fwait
jmp
ins
xor
inc
out
clc
cld
retf
inc
(bad)
jle
int
aad
jo
jo
popf
in
mov
fprem
cs
sbb
cmp
jno
xchg
jno
mov
mov
fs
jb
jle
jbe
ret
sar
out
cmc
sub
(bad)
scas
(bad)
mov
lods
jmp
stos
xchg
ins
movntq
clc
cmc
or
je
ret
sbb
(bad)
mul
into
fwait
jl
jne
mov
mov
push
int
pusha
mov
jns
dec
pop
sbb
add
aad
rcl
test
cmp
and
mov
sbb
push
xor
loop
shl
pop
sbb
in
dec
ja
mov
xor
(bad)
mov
push
test
mov
dec
pop
xchg
dec
retf
mov
pop
push
popa
cmp
sub
sub
xor
rcr
test
icebp
(bad)
cmc
adc
out
push
cmp
ret
popa
inc
gs
push
ds
outs
xor
cmc
or
sub
iret
and
dec
pop
mov
dec
mov
imul
cwde
daa
retf
adc
in
add
std
int3
mov
ret
jae
icebp
mov
add
fisttp
stos
int
sbb
pop
mov
stc
sub
dec
add
fldenv
mov
lock
xchg
jl
xor
cld
rcl
mov
jl
jg
bound
ins
test
mov
sub
xchg
mov
cdq
loop
cmp
mov
push
push
cdq
data16
aas
dec
mov
jl
cmp
xor
mov
js
leave
hlt
test
cwde
adc
cmps
jne
or
cmp
stos
js
fnstenv
and
pusha
mov
stos
pop
ret
icebp
inc
les
test
push
jmp
add
cmp
pop
jne
and
pop
dec
xor
or
mov
cmc
push
cmp
sbb
arpl
movd
lds
sbb
fisubr
cld
or
test
shl
mov
ret
jmp
int
scas
xor
out
mov
and
adc
push
out
int3
retf
iret
shl
sub
iret
sbb
mov
or
xor
sub
xchg
aaa
push
push
outs
xor
addr16
lds
cmp
ins
(bad)
xchg
repnz
mov
iret
in
add
sahf
push
movs
dec
ret
adc
jno
jb
add
out
and
cmp
mov
rcr
sub
mov
out
or
xchg
and
popf
lock
fadd
push
sub
dec
cmp
jmp
adc
or
mov
push
jb
or
cmp
push
push
fwait
in
push
jmp
mov
nop
sbb
xchg
mov
push
or
xor
test
daa
mov
cmp
(bad)
ret
cmp
ins
in
cmc
fsub
jp
push
or
adc
jnp
push
(bad)
daa
or
mov
dec
dec
add
int3
in
mov
pop
mov
mov
pop
fwait
ins
retf
push
push
call
dec
lods
or
inc
mov
call
or
cs
or
push
arpl
xor
imul
imul
popf
mov
pop
stos
into
fs
xchg
and
retf
stc
xor
in
in
and
and
jae
cmp
in
sahf
test
shl
xor
(bad)
fmul
and
cmp
cmp
and
or
mov
int3
mov
fs
outs
jo
mov
push
test
xor
adc
dec
imul
scas
inc
movs
and
lock
mov
inc
or
jb
jbe
out
loop
cmp
push
dec
fstp
adc
test
(bad)
cmps
push
push
rcr
mov
xlat
ins
cmps
and
add
outs
cmp
fwait
adc
test
cmc
jmp
jmp
xor
int3
mov
inc
jae
jb
dec
xchg
adc
jmp
in
das
in
mov
jl
sar
das
dec
sub
add
mov
retf
retf
out
mov
ret
jne
loopne
aaa
xchg
sti
mov
fcmovnu
mov
fcom
jo
scas
sub
leave
sbb
mov
pop
jnp
sub
aam
repz
push
dec
push
push
icebp
pop
imul
jmp
std
or
inc
inc
fcom
or
adc
test
movs
mov
(bad)
call
inc
mov
int3
aaa
sbb
jne
outs
or
jg
fs
push
mov
adc
pop
pop
add
pop
movs
or
or
mov
jmp
pop
(bad)
adc
dec
dec
xor
inc
push
dec
push
cmp
push
ins
es
addr16
jno
shl
movs
mov
jnp
loopne
xchg
and
xchg
mov
scas
in
ret
es
inc
pop
jo
sbb
push
nop
sbb
inc
fcomip
xchg
ret
mov
push
mov
pop
xchg
mov
test
repnz
mov
or
(bad)
push
in
xchg
push
shl
and
cmps
mov
int
jb
sbb
sbb
xor
inc
or
test
sbb
xchg
imul
(bad)
mov
xlat
loope
sub
jl
aad
test
push
imul
push
in
mov
pop
sub
push
(bad)
dec
mov
jnp
mov
stos
retf
mov
xor
ficomp
out
ja
and
popf
mov
test
cmps
mov
cs
(bad)
movs
lds
dec
fidivr
xchg
ins
push
(bad)
ds
lods
scas
in
cmp
or
mov
mov
in
sbb
adc
xor
aas
cmp
xor
mov
ja
or
adc
int
fst
(bad)
push
cli
dec
ds
in
cmp
aad
mov
arpl
inc
adc
outs
lds
mov
popf
out
leave
stc
ins
rol
jb
push
ret
cmp
mov
sub
mov
fwait
push
outs
call
jp
sub
pop
(bad)
push
ss
sbb
xchg
xor
sbb
mov
gs
les
inc
out
imul
xchg
stc
popa
or
push
cmc
or
pop
mov
sbb
inc
jg
mov
xchg
dec
jne
xor
stos
enter
sbb
cmp
scas
icebp
cmps
loop
setle
push
push
fstp
add
xchg
mov
pushf
in
gs
out
fdiv
xchg
xchg
push
or
call
stos
jnp
push
jle
jo
or
scas
mov
test
out
int3
sub
mov
add
mov
cmc
sub
popa
cmp
les
call
shl
lea
(bad)
retf
adc
inc
in
and
adc
jb
cli
or
adc
or
inc
jg
xlat
and
call
xchg
jae
cld
inc
pusha
hlt
nop
fisubr
cmp
mov
sub
inc
loop
pop
rcl
fs
out
(bad)
sbb
dec
or
mov
pop
jne
xor
fcom
inc
clc
ins
lahf
fisub
das
popa
popf
inc
mov
imul
inc
xchg
dec
sub
xchg
(bad)
pop
push
jmp
xchg
fs
xchg
shr
xor
pop
cdq
mov
fst
sbb
outs
hlt
adc
add
lods
xchg
jmp
sti
aaa
in
sbb
pusha
aaa
xchg
loop
dec
add
idiv
daa
add
aam
lock
shl
inc
scas
out
add
in
cmps
mov
lahf
je
cmps
mov
push
push
inc
inc
sbb
ret
sti
add
fcmove
and
sub
js
cli
jb
sti
xchg
enter
outs
jp
scas
pop
or
sahf
and
sub
jmp
imul
add
inc
lock
ds
pop
dec
es
nop
cli
sbb
bound
out
jo
cmps
inc
xor
daa
push
pop
test
in
cmps
aaa
cmp
or
mov
xchg
mov
cmp
xor
imul
or
test
ja
push
jmp
jg
hlt
icebp
push
pop
dec
cmp
add
js
or
ja
lods
fndisi(8087
imul
in
in
pop
adc
daa
fwait
dec
cmp
adc
pop
cmp
inc
jnp
call
ds
mov
lds
inc
sub
fwait
aaa
in
sbb
xchg
js
cmp
and
push
(bad)
das
dec
in
ins
repnz
in
cmp
push
daa
mov
rcl
popf
addr16
jmp
sar
(bad)
jns
mov
ret
mov
std
pop
cmp
or
pop
jp
mov
repz
inc
je
adc
pop
ds
rep
dec
addr16
dec
push
scas
lods
dec
push
push
outs
arpl
cs
push
inc
out
addr16
add
enter
push
jbe
fcom
(bad)
fcomp
std
js
xor
jl
sub
das
xchg
cli
test
int3
sar
data16
daa
movs
mov
pusha
ja
pop
mov
hlt
fxch
jge
adc
pop
pop
push
cmp
fsubr
movs
mov
outs
and
ins
pop
xchg
inc
loope
inc
popa
cmp
dec
cmps
inc
call
mov
test
xor
out
xchg
and
retf
les
mov
loope
repnz
or
fcmovnbe
fist
cdq
jbe
cdq
shr
sub
ror
hlt
cwde
call
jns
in
(bad)
adc
dec
xchg
mov
jne
push
push
fnstcw
and
daa
push
leave
call
mov
pop
push
and
and
mov
les
scas
fidivr
sti
add
lds
mov
sub
sbb
adc
fs
cld
push
jmp
pop
imul
add
xchg
xchg
mov
mov
xchg
push
cwde
aaa
dec
jae
sub
in
jg
xor
fadd
scas
pop
xor
pop
sbb
loope
stc
jne
inc
inc
arpl
aam
movs
popf
sbb
test
ins
aad
in
push
test
adc
inc
(bad)
out
rol
pop
fiadd
ret
xchg
xchg
movs
and
mov
ror
div
xchg
rcr
hlt
clc
imul
and
jecxz
popa
dec
ins
movs
adc
(bad)
push
and
shl
sbb
sti
lahf
mov
xchg
inc
jecxz
std
and
mov
hlt
imul
ret
inc
jecxz
mov
sbb
mov
mov
iret
js
xchg
lods
rol
sub
cmp
jecxz
cli
mov
shl
jno
dec
jb
in
dec
cmps
xor
js
mov
les
mov
or
in
mov
xor
stos
jno
add
sbb
and
push
inc
sbb
movs
fldenv
sbb
rol
lahf
ror
(bad)
jne
mov
icebp
xchg
stos
pop
aam
out
loope
sbb
adc
fist
or
popf
xchg
sbb
fcom
dec
popf
jge
clc
cmps
adc
mov
andnps
and
ins
pop
mul
mov
mov
inc
xchg
or
mov
ja
popfw
mov
dec
sub
xchg
or
lds
mov
inc
push
aaa
rol
in
xor
jae
inc
cmp
stos
test
xchg
loopne
inc
test
push
jg
mov
inc
lods
jb
add
imul
ror
mov
es
(bad)
lahf
pop
sbb
inc
sbb
rcl
jp
xchg
dec
and
cmp
jmp
jecxz
and
(bad)
aam
add
fnstenv
inc
movs
xchg
(bad)
mov
jmp
mov
sbb
inc
ret
pop
outs
mov
cdq
int3
icebp
jns
xor
not
xchg
inc
loope
popa
xchg
xchg
retf
cmp
loopne
pop
dec
xchg
cmp
sbb
mov
mov
mov
cs
fmul
adc
inc
push
jns
addr16
(bad)
popa
outs
jnp
lea
rcl
cs
xchg
xchg
test
xor
in
movs
fistp
mov
outs
xchg
into
ins
iret
cmps
jae
xor
add
std
fwait
mov
xor
inc
stos
mov
pop
cs
icebp
rcr
xor
mov
dec
rcl
addr16
push
push
pusha
pop
in
xchg
xchg
les
retf
or
xchg
ins
sahf
aad
retf
xchg
cmc
pop
mov
dec
inc
stc
call
ss
pop
mov
and
cs
sbb
fbstp
cmp
cdq
ja
movhps
ret
es
mov
or
inc
dec
push
in
and
cmps
mov
or
sub
sbb
adc
sub
inc
push
xchg
cmp
inc
ftst
xor
(bad)
call
mov
dec
xchg
sbb
(bad)
outs
outs
rol
sub
inc
(bad)
pop
fcomip
fdivr
mov
mov
das
and
mov
xor
and
xchg
jns
pop
jbe
and
push
sbb
iret
and
scas
(bad)
lds
stc
cs
aad
dec
or
lea
mov
push
(bad)
xchg
mov
int3
fs
ficom
adc
jmp
aad
test
sbb
in
mov
in
popf
cmp
mov
arpl
fs
loopne
push
dec
jmp
jae
cmp
mov
into
aas
mov
jns
inc
dec
out
xor
popf
mov
pop
xchg
aam
mov
add
or
rcr
adc
daa
xor
inc
cld
ss
mov
out
test
out
pop
push
in
adc
pop
sbb
pop
jp
push
pop
int3
lods
add
js
mov
es
mov
xchg
daa
pop
pop
dec
shl
out
and
inc
mov
pop
fst
sbb
out
xor
xor
sbb
mov
in
push
js
mov
in
dec
xchg
cmp
xor
loopne
sar
mov
sahf
pop
leave
movs
loope
repz
mov
pop
adc
mov
inc
mov
bound
in
mov
mov
cwde
pop
push
inc
scas
movs
rol
pop
scas
leave
imul
inc
bound
test
test
pop
data16
adc
mov
adc
pop
mov
mov
adc
inc
dec
jne
lahf
sub
ins
fcmovne
out
aam
sbb
pop
push
ss
test
ret
mov
sub
inc
mov
loopne
or
pop
inc
or
xor
sbb
repz
mov
clc
inc
stos
cmp
popa
add
pop
mov
cmp
fsub
adc
sahf
popa
es
enter
jno
in
push
xlat
stc
or
(bad)
jle
push
out
cld
rcl
jge
aam
int3
rcr
cld
pop
in
sub
and
ds
mov
rcr
out
xor
inc
mov
jnp
jmp
arpl
inc
inc
jns
(bad)
(bad)
jge
jno
fiadd
push
push
adc
(bad)
push
dec
push
cmp
push
bound
iret
mov
jae
cli
sbb
lock
cmp
cmps
add
stos
xor
int
xor
mov
test
movs
loopne
aas
xor
inc
iret
xchg
outs
retf
xor
std
add
mov
jp
cdq
dec
xor
js
(bad)
aas
pop
jnp
loop
loopne
fwait
cmp
cmp
sbb
das
loope
dec
inc
mov
push
loopne
and
xor
adc
xchg
adc
mov
out
pop
and
jmp
ret
movs
daa
dec
sbb
add
rol
es
pop
test
inc
or
(bad)
imul
imul
sub
movs
fmul
repnz
xor
jnp
xchg
scas
rcl
sbb
sahf
repnz
jmp
pop
lods
in
loopne
mov
push
push
sar
retf
or
shr
mov
xchg
cld
or
(bad)
stos
int
push
inc
fstp
inc
inc
and
out
sub
repz
push
icebp
push
loope
pushf
ja
mov
repnz
mov
jl
(bad)
cmp
mov
imul
inc
or
iret
(bad)
dec
fmul
mov
add
add
mov
mov
jmp
cmp
loope
lods
out
gs
out
xchg
bound
mov
sub
push
mov
dec
or
push
dec
out
cs
adc
test
outs
push
or
or
adc
fbld
push
and
mov
imul
test
hlt
aad
push
leave
inc
jns
and
mov
jne
add
mov
pop
jns
xchg
out
inc
sbb
jmp
cmp
xchg
aad
push
adc
sbb
repz
repz
mov
test
into
ds
ds
repnz
ror
mov
jo
mov
loop
pop
fwait
das
out
sbb
stc
mov
add
cmp
pop
push
sti
xor
adc
xchg
cmps
cmc
pop
out
(bad)
and
lods
popf
xchg
inc
(bad)
sahf
ins
and
jo
ja
push
adc
mov
or
outs
sbb
loop
les
loope
push
rcl
add
popf
mov
jecxz
stos
loope
out
sub
call
pop
js
iret
inc
jo
inc
mov
jg
int
or
ds
xchg
leave
adc
mov
dec
cwde
push
aas
int
inc
mov
push
fld
cwde
movs
inc
dec
xchg
mov
pop
fld
adc
xchg
or
test
add
dec
or
jno
cmp
mov
mov
test
(bad)
or
out
bound
mov
add
out
pop
xchg
lds
inc
sti
mov
dec
and
call
data16
or
xor
jmp
mov
and
cli
rol
mov
fcom
mov
test
loope
dec
push
imul
mov
gs
out
mov
dec
stos
nop
xchg
mov
into
in
mov
mov
out
enter
cmp
in
dec
fdivr
jb
mov
cmp
lahf
or
retf
or
sbb
mov
cmp
mov
or
push
es
(bad)
jno
fmul
xchg
inc
sete
cli
dec
jge
mov
ja
pop
pop
rcl
xchg
adc
lds
push
pop
outs
dec
cli
(bad)
add
sub
and
inc
jge
jb
out
mov
or
mov
mov
imul
mov
sub
fnsave
(bad)
aas
retf
jns
or
out
inc
jb
xchg
xchg
js
int
mov
das
push
lods
fucom
call
std
cmp
retf
push
out
ret
fs
out
cwde
xlat
xchg
jge
jle
scas
arpl
pushw
push
cwde
rcr
xor
inc
stos
cmp
js
dec
sub
push
dec
mov
sub
xchg
int
pop
mov
lea
inc
nop
cmps
and
and
daa
sahf
xlat
jmp
push
nop
(bad)
fwait
cdq
iret
mov
cmp
sbb
leave
mov
xchg
xchg
lock
dec
fidivr
adc
outs
ret
ds
dec
sub
mov
pop
inc
add
popa
sbb
pushf
pop
bnd
push
xchg
std
mov
mov
int
xchg
ret
or
mov
das
add
push
cdq
aaa
stos
sbb
pop
ins
aad
xchg
stos
pop
das
xchg
cld
aas
stos
and
pop
xchg
push
aad
mov
cmp
xor
push
ins
fst
ss
inc
ds
aas
mov
inc
and
into
(bad)
jp
cmps
mov
pop
add
mov
jle
ret
inc
lds
cmp
xchg
cdq
adc
mov
or
(bad)
retf
addr16
sbb
ret
les
call
retf
xor
mov
inc
in
pop
sbb
sahf
jo
cmp
mov
psubusw
into
xor
push
mov
mov
cmp
or
cmps
jmp
jnp
sub
cmps
icebp
inc
ins
push
das
xchg
std
jne
jo
stos
xchg
xchg
sbb
jnp
call
mov
add
xor
or
fiadd
cmp
pushf
mov
adc
jmp
mov
or
nop
(bad)
sbb
and
dec
fst
into
sub
inc
sbb
jo
ret
ret
ins
or
ret
outs
cmps
loopne
shr
xor
pop
cld
test
mov
out
inc
aad
xchg
lahf
gs
cmp
xchg
mov
rep
inc
mov
and
dec
enter
cmp
leave
or
pop
and
mov
and
sahf
scas
stc
repnz
ret
xchg
inc
push
div
rcl
popa
jle
add
dec
outs
test
(bad)
push
arpl
xor
repnz
push
fcmovbe
xor
mov
jmp
std
push
rcr
dec
dec
jmp
cli
push
pop
mov
ins
adc
fistp
mul
inc
rcr
jns
adc
dec
sar
out
call
lods
xor
ret
(bad)
loope
cdq
mov
ja
xchg
sub
xchg
aam
iret
sbb
cli
push
inc
push
out
es
call
or
shr
or
loope
mov
pusha
jg
jne
or
test
and
ja
aaa
in
or
xlat
ret
jp
(bad)
mov
mov
(bad)
cdq
cmp
cmps
mov
mov
and
inc
push
hlt
xor
sbb
or
jae
(bad)
jnp
and
call
add
movs
mov
mov
inc
sub
test
stc
arpl
les
sbb
sub
sub
inc
xchg
sub
dec
loop
push
scas
icebp
pop
out
xlat
sbb
ins
sbb
sahf
in
xchg
and
out
stos
jmp
mov
sbb
and
jns
repz
and
dec
xchg
pushf
mov
jnp
movs
loopne
push
call
iret
mov
pop
imul
repnz
dec
imul
mov
arpl
ror
mov
int3
sub
xchg
in
retf
sub
icebp
jecxz
aaa
popf
popa
xor
xor
mov
adc
jo
mov
bound
fmul
enter
mov
fsubp
in
test
std
jae
in
adc
int3
mov
mov
test
jbe
(bad)
fst
push
add
jp
test
lods
pop
cmps
leave
sbb
jno
inc
mov
mov
scas
sbb
mov
xor
jmp
arpl
aas
xchg
inc
ficomp
add
sbb
jns
bound
test
sbb
fild
cmp
xor
pop
push
inc
inc
fwait
jl
sahf
cwde
mov
sbb
pusha
mov
test
gs
jmp
push
cmp
out
cmp
mov
repz
retf
xchg
xchg
jecxz
hlt
(bad)
psllw
xchg
ror
neg
and
adc
or
mov
fld
xchg
sub
jg
pop
pop
es
mov
retf
pop
jne
mov
dec
mov
hlt
or
clc
jmp
or
xchg
out
pop
dec
add
adc
mov
(bad)
and
lock
imul
fs
(bad)
ds
(bad)
clc
mov
xchg
xchg
push
clc
fidivr
imul
out
imul
clc
jg
xchg
mov
dec
pop
mov
cdq
jns
and
ret
ret
jp
cmps
je
aas
jp
mov
jl
mov
repnz
mov
xor
test
mov
jmp
mov
mov
enter
xchg
mov
ret
mov
inc
inc
jns
movs
rcr
mov
mov
fldcw
imul
(bad)
fstp
sar
pop
mov
(bad)
ins
mov
lock
lods
mov
mov
(bad)
ins
nop
xor
adc
sbb
mov
cmp
movs
mov
adc
mov
dec
or
pop
pop
mov
cmp
xlat
es
out
and
dec
mov
add
xchg
xchg
sub
lea
mov
stos
xor
(bad)
push
sub
jmp
push
and
sahf
xor
jne
in
lods
adc
(bad)
dec
mov
and
stc
punpckldq
fwait
mov
loop
xchg
pop
and
cmp
push
addr16
inc
sbb
add
pop
dec
sbb
mov
iret
dec
and
out
pop
sahf
js
std
xor
int
loope
inc
test
mov
dec
inc
add
push
mov
xor
jne
dec
out
cmp
retf
jl
sub
sbb
jnp
rol
dec
sahf
call
pushf
mov
fistp
test
and
repnz
mov
imul
xchg
cwde
and
fs
out
retf
fiadd
mov
fld
sbb
mov
fmul
cwde
in
mov
sub
sbb
jp
scas
es
xchg
push
hlt
cmp
(bad)
pop
pop
mov
add
ror
dec
loop
push
fdivr
jmp
les
dec
jmp
(bad)
sbb
retf
sub
sar
dec
ret
pop
pop
ss
leave
adc
mov
xchg
rol
pop
and
cmp
dec
jecxz
sti
scas
jecxz
and
sub
sbb
ins
push
adc
es
std
xchg
int
daa
jo
xchg
je
jno
pop
inc
mov
test
dec
(bad)
sub
cmp
xor
fist
and
push
xchg
xchg
popa
lds
scas
inc
and
mov
mov
fld
mov
in
lods
mov
call
add
fdiv
es
add
sbb
adc
out
inc
jns
or
fisubr
mov
aas
adc
loop
xchg
idiv
leave
xchg
adc
(bad)
xor
mov
push
mul
pop
and
xchg
in
xchg
popf
lds
jb
xchg
mov
in
dec
jns
mov
std
mov
(bad)
popa
inc
mov
(bad)
sub
sti
adc
lahf
je
cmp
fimul
adc
fwait
cli
shl
ret
push
retf
sahf
pop
mov
inc
call
or
pushf
pop
mov
sbb
fcom
jg
nop
leave
inc
inc
int3
adc
dec
pop
sbb
inc
out
sbb
pop
std
inc
in
jmp
ds
and
mul
inc
dec
inc
mov
fstp
ror
push
stos
fwait
int3
push
xor
addr16
scas
cdq
(bad)
sbb
dec
fwait
test
push
gs
(bad)
in
xchg
xor
mov
bound
mov
repnz
daa
fdivr
mov
fild
adc
outs
shl
fist
shr
jae
mul
mov
sub
lods
inc
ja
or
sub
div
sub
mov
pop
scas
test
mov
jnp
and
xor
jmp
inc
cmovo
mov
repnz
jle
pop
pop
daa
das
mov
and
icebp
das
or
out
sbb
gs
pop
push
sbb
xor
and
add
xor
inc
clc
sub
push
out
pop
jmp
inc
not
out
(bad)
dec
mov
xor
add
push
lods
aad
xor
scas
xor
dec
jecxz
cdq
aam
jmp
jb
pop
inc
add
mov
jl
mov
jmp
icebp
xchg
push
dec
jp
and
dec
aam
int
inc
imul
je
rol
int3
jno
cmp
jb
mov
(bad)
(bad)
push
push
cmps
jo
sub
jmp
out
aad
pop
setnp
or
(bad)
imul
shl
(bad)
fist
test
sahf
cmp
movs
cld
jae
pop
(bad)
sbb
sub
js
out
lods
adc
lods
outs
inc
arpl
call
sbb
and
mov
loope
das
sub
push
jmp
cmps
sub
jae
sar
out
add
push
mov
div
pop
shl
loope
cmp
mov
inc
inc
arpl
or
xor
add
inc
loope
out
ins
aam
call
push
bound
in
jne
fst
in
xchg
xchg
addr16
sahf
push
stc
inc
inc
jl
xchg
into
sub
jmp
fcmovu
cmp
gs
enter
inc
iret
cmp
lea
inc
lahf
nop
outs
call
cmp
mov
inc
hlt
mov
call
imul
xor
cmp
das
xor
rol
cmp
mov
or
jl
jle
mov
inc
stc
push
push
call
mov
out
outs
hlt
pop
out
(bad)
jno
xchg
xchg
inc
pusha
pop
sub
sub
mov
mov
test
leave
dec
jle
mov
das
es
sub
mov
add
push
fs
inc
sub
cmp
gs
jp
lahf
aaa
les
call
and
mov
pop
cli
cli
and
shl
nop
(bad)
mov
out
xor
sub
jmp
test
jge
mov
sahf
push
out
inc
outs
push
xor
mov
jno
in
xchg
mov
(bad)
in
xchg
sbb
loopne
xchg
xor
mov
mov
or
cmp
or
adc
jg
inc
sahf
gs
imul
test
ror
mov
pop
call
aas
cwde
xlat
push
mov
add
in
arpl
push
sub
ss
mov
ret
and
inc
mov
test
mov
lock
add
lods
(bad)
push
ror
push
sbb
retf
nop
enter
push
jmp
sbb
mov
pop
cmps
push
(bad)
and
(bad)
stos
scas
fwait
sahf
mul
ret
in
je
in
add
ins
dec
retf
mov
jmp
(bad)
mov
les
lea
mov
gs
out
(bad)
sub
loopne
inc
aaa
rcl
popf
sub
outs
imul
(bad)
je
pop
cli
pusha
fdivr
test
sbb
xchg
js
out
lods
in
jbe
and
addr16
ins
ss
push
retf
hlt
jo
dec
repnz
add
mov
cld
in
mov
push
mov
mov
test
mov
cmps
lea
inc
xchg
scas
es
xor
xor
adc
jae
or
js
cmp
fs
mov
fwait
xchg
fcom
and
movs
in
jnp
fcom
mov
fidivr
and
jne
pop
jae
xor
add
jmp
mov
push
xchg
xor
pop
shl
lods
sub
lds
enter
inc
mov
repz
int
fstp
cld
xchg
loop
and
dec
and
xchg
ins
outs
mov
aaa
push
push
pusha
jae
fwait
ret
sbb
aas
or
lods
add
adc
xchg
loop
aas
dec
push
mov
dec
or
leave
in
pop
or
aaa
das
les
lea
xor
ret
cmp
add
inc
inc
xlat
scas
inc
call
jge
call
aas
(bad)
out
in
push
imul
and
test
(bad)
leave
in
fwait
add
jl
push
mov
test
scas
bound
push
xchg
cmp
in
fadd
mov
jbe
mov
jecxz
lahf
or
outs
js
fcom
outs
das
cs
jns
xchg
sti
leave
add
lods
mov
fmul
push
div
movs
das
xor
xor
push
das
adc
out
int
xchg
mov
arpl
or
in
xchg
xlat
ja
cs
sti
mov
scas
mov
adc
in
add
fsubr
inc
scas
gs
loope
xor
mov
dec
fisubr
ins
mov
pop
cmps
cmp
push
div
test
cmp
xchg
jmp
sbb
pop
sub
xchg
add
lds
inc
adc
add
popf
out
pop
out
xor
and
movs
mov
push
xor
out
xlat
xlat
int3
adc
lea
cmp
or
retf
or
popa
ins
cmp
je
push
pop
lds
aas
cli
test
sbb
js
sbb
leave
xor
cmps
or
popf
cmp
ds
sub
mov
inc
ins
fistp
(bad)
cmp
je
sub
jne
idiv
sub
pop
mov
xchg
call
rcl
frstor
jb
aaa
sub
mov
push
jmp
xor
push
outs
lods
scas
(bad)
int
inc
int
or
cmc
xchg
std
sbb
jg
retf
xchg
jb
adc
sbb
push
jge
call
and
mov
call
adc
cli
mov
or
sbb
jle
movd
inc
and
daa
mov
movs
adc
mov
retf
pop
and
cmp
mul
cmp
mov
push
clc
push
sbb
mov
sbb
aam
ds
push
mov
dec
mov
mov
fsubr
ins
arpl
push
in
rcl
push
and
fwait
ss
imul
sub
fistp
xchg
leave
xor
pop
call
add
rol
fcmovb
pop
shl
out
in
jg
popa
xor
mov
mov
push
inc
jl
or
sub
cdq
(bad)
xchg
jmp
pop
arpl
rcr
cmp
add
pop
mov
dec
sbb
int
rcl
imul
jo
sahf
ficom
or
aam
jnp
cmp
sub
imul
scas
or
add
push
in
push
leave
mov
jge
jl
mov
into
lds
es
adc
jo
pop
int3
sar
xchg
call
and
shr
test
xor
xchg
and
cmp
ret
iret
js
jecxz
sub
xchg
lock
mov
mov
lods
ret
xor
push
sbb
scas
xchg
and
stc
jns
in
call
and
shl
push
sbb
in
mov
xchg
adc
ss
and
scas
repnz
add
nop
or
sub
inc
inc
aam
test
cwde
hlt
in
pop
xchg
fs
sub
cli
adc
pop
hlt
lds
lock
dec
bound
xchg
mov
les
xchg
push
ror
mov
scas
mov
ss
jmp
iret
addr16
lea
int3
pop
cmps
mov
enter
fst
fadd
mov
mov
gs
sahf
mov
xchg
dec
fdiv
push
mov
imul
scas
xor
mov
adc
push
sub
pop
pop
adc
int
jnp
jbe
cmp
dec
mov
int
mov
jb
and
xlat
je
enter
pop
movs
int
xor
retf
mov
mov
fldcw
out
sbb
jo
ss
mov
aad
fist
cmp
add
mov
dec
add
mov
out
out
and
cwde
call
push
jo
sbb
(bad)
fld
or
jns
into
mov
mov
mov
into
adc
cmp
push
adc
add
jmp
movs
js
mov
dec
dec
jae
dec
(bad)
shr
or
lds
imul
mov
xchg
xor
jecxz
rcr
call
dec
inc
mov
mov
sub
xchg
dec
or
std
jnp
xor
sub
xchg
rol
call
pop
repz
mul
dec
sub
xchg
inc
xor
adc
cli
outs
cmc
daa
scas
dec
ja
div
xlat
cwde
popa
cmc
adc
inc
and
popf
fild
and
call
xchg
rcl
pop
ror
pop
test
ficomp
jl
add
xor
xor
out
dec
sbb
clc
and
popf
jmp
lods
sbb
add
dec
pop
xchg
push
cli
js
clc
or
outs
push
sbb
fistp
xchg
fwait
movs
mov
ret
jno
in
jge
icebp
push
sbb
lods
jns
sub
fwait
push
sbb
sbb
xor
jb
cld
outs
pop
cmp
hlt
xchg
xor
xor
mov
enter
mov
push
(bad)
rcl
sub
jge
in
jge
in
stos
mov
and
xchg
push
shl
out
dec
fcmove
pushf
push
and
adc
into
and
(bad)
fist
pushw
dec
js
stos
cmp
in
jl
mov
push
cmp
rcr
mov
cmp
push
add
cmp
shr
jge
int3
in
lods
mov
sub
retf
into
jne
in
push
and
pop
push
sbb
movs
ret
retf
adc
dec
cld
cs
pop
ret
dec
(bad)
call
dec
je
and
sub
mov
sbb
pop
xor
sahf
mov
scas
jp
sar
and
jmp
mov
sub
or
xor
bound
jnp
bound
ret
cmc
push
or
(bad)
cmc
push
mov
out
or
(bad)
or
ds
pop
scas
jnp
mov
ja
sahf
push
pop
das
xlat
jg
cmc
jns
xchg
int
push
std
or
daa
movs
pop
jp
imul
sbb
mov
(bad)
loope
cmp
(bad)
ror
rcr
call
inc
stos
cmp
inc
xor
scas
mov
daa
xor
dec
(bad)
inc
mov
mov
je
imul
(bad)
and
aas
push
mov
idiv
ds
push
xchg
aad
add
out
mov
(bad)
mov
outs
sub
das
inc
jno
retf
jb
outs
lock
mov
outs
loopne
and
cwde
lods
les
imul
sbb
and
add
jbe
icebp
jns
adc
dec
(bad)
push
inc
pop
xor
push
test
sbb
fadd
ror
cmp
mov
or
imul
inc
jle
cmp
loope
jecxz
mov
sbb
or
loope
(bad)
jnp
inc
and
jbe
jo
loop
mov
imul
loop
push
bound
loopne
or
mov
retf
arpl
fs
or
sbb
adc
iretw
retf
mov
(bad)
push
stos
xor
jecxz
xor
adc
fst
add
pushf
sti
sub
pusha
cli
ficomp
push
or
pop
cs
scas
cmp
jecxz
push
(bad)
mov
push
mov
adc
push
popa
ror
ja
jns
or
mov
cdq
call
rol
inc
mov
cmp
in
out
mov
mov
and
dec
leave
xchg
cmp
std
and
pop
mov
add
fdivr
mov
dec
sahf
jo
and
cmp
nop
xchg
add
xor
mov
mov
into
outs
test
jecxz
inc
or
es
xchg
jl
(bad)
sub
std
sub
push
or
call
sbb
and
in
js
movs
test
ja
in
sub
aam
in
test
xchg
xchg
in
sub
sti
dec
inc
cmp
xor
mov
xor
scas
pop
xchg
stos
dec
jecxz
call
cmp
jmp
scas
and
int3
push
lods
pop
add
sub
call
push
sub
ficomp
icebp
sub
(bad)
cwde
in
add
scas
mov
xchg
mov
xor
mov
cmp
in
mov
jmp
mov
imul
pop
nop
imul
gs
adc
jo
test
ins
(bad)
out
mov
mov
clc
adc
lahf
adc
(bad)
ins
pop
xchg
cmp
(bad)
in
loope
pusha
lahf
gs
fstp
fistp
mov
add
(bad)
ss
sbb
repz
data16
jb
ret
fild
push
xor
inc
mov
xor
test
xchg
(bad)
arpl
test
ret
xor
add
mov
aaa
mov
mov
(bad)
(bad)
(bad)
movs
stos
mov
cmps
shl
mov
cmp
sbb
int3
sbb
imul
(bad)
fcom
inc
scas
xlat
mov
sbb
int
pop
aam
hlt
mov
or
sbb
and
cmp
inc
loope
xchg
cmp
push
aaa
shl
js
mov
mov
xchg
leave
fsubr
push
cmc
clc
(bad)
mov
mov
retf
int
das
test
cmp
iret
inc
sbb
ins
(bad)
jp
sti
adc
pushf
or
dec
inc
push
outs
cmp
sbb
xchg
jb
and
movs
bound
mov
add
(bad)
xor
inc
sbb
fdivr
adc
dec
and
pop
ret
neg
lods
cli
xchg
mov
shl
lods
mov
cmp
mov
push
fwait
ret
inc
and
adc
shr
inc
cld
cs
jnp
cwde
xor
cmps
xor
fwait
ds
sub
mov
inc
jl
clc
cmp
adc
retf
das
call
fsubr
adc
mov
ins
pop
mov
jmp
(bad)
int3
imul
push
cmp
push
(bad)
retf
fnstenv
clc
and
mov
pop
inc
adc
sub
pusha
adc
mov
mov
and
xchg
ror
ret
(bad)
sbb
rol
loop
sbb
sbb
adc
adc
sbb
sbb
sbb
repnz
xor
add
dec
fwait
into
cmp
outs
sahf
push
ficomp
arpl
idiv
sbb
call
pusha
lods
xlat
sar
cmp
std
push
xor
pop
mov
sub
test
sahf
cmps
scas
jnp
xchg
mov
in
sbb
js
sbb
loope
sbb
addr16
je
je
cmp
ss
in
xchg
(bad)
sbb
dec
and
sbb
arpl
dec
dec
add
cli
pop
mov
jns
dec
jg
sub
aas
xchg
cli
popa
out
fmul
or
mov
out
daa
and
rcl
xchg
fcomp
pop
mov
cmp
sub
xchg
sbb
jo
cwde
mov
daa
lods
jne
(bad)
inc
adc
lods
pop
(bad)
(bad)
lods
dec
sbb
add
push
jge
neg
or
int
nop
pop
shr
sbb
pop
sbb
jl
mov
dec
daa
xchg
mov
fcomp
cld
ror
xchg
ja
mov
sub
and
xchg
add
xchg
add
xor
shl
or
inc
or
jmp
push
rol
or
imul
les
aam
or
sbb
jae
mov
call
mov
lods
pop
push
cmp
je
xchg
sbb
xlat
push
sub
xor
or
push
dec
pop
pop
xchg
repz
adc
sub
adc
clc
movs
js
fwait
outs
mov
lods
jo
movs
xor
pop
mov
sbb
jge
sub
arpl
popa
adc
movs
and
add
jmp
cwde
mov
mov
out
(bad)
in
fimul
pop
pushf
sti
sbb
sub
popf
jle
push
imul
data16
add
mov
jne
push
push
test
arpl
lods
out
dec
sub
mov
clc
iret
loope
rol
adc
dec
shr
jae
sub
gs
jae
ret
adc
(bad)
shr
adc
es
imul
aad
jne
in
add
loope
mov
scas
jae
push
pop
sbb
jl
jl
test
mov
cmps
push
pop
adc
adc
orps
sub
cmp
and
mov
inc
add
lods
movs
scas
daa
fiadd
and
mov
and
add
inc
push
xchg
addr16
dec
pop
sbb
jne
or
test
pop
addr16
xchg
inc
outs
test
mov
loope
cmps
xchg
imul
sbb
aaa
cld
inc
in
lock
lods
dec
jmp
cmps
dec
js
jne
xor
(bad)
out
popa
xlat
mov
aas
xchg
xchg
mov
fisub
add
ja
test
fst
mov
and
(bad)
call
push
cmp
jg
repz
pop
push
std
sbb
fist
or
jne
mov
inc
pop
fbld
xor
les
push
ds
lahf
mov
pop
xchg
not
rcr
sub
xor
ds
sbb
mul
sub
push
inc
aam
movs
outs
outs
jp
push
xor
scas
lds
push
ficomp
push
repnz
xor
add
cmp
and
inc
cmp
aaa
cmp
imul
clc
(bad)
jnp
push
cmps
shl
fs
pop
adc
ficom
cmps
cmc
cli
ror
into
rol
cmp
adc
mov
rcl
xchg
stos
xor
cmps
call
test
push
outs
adc
pushf
xchg
sbb
push
nop
or
or
push
leave
xchg
dec
add
icebp
sar
mov
pop
jno
mov
push
xchg
test
mov
bound
jp
ins
mov
and
stos
dec
aaa
jge
fsub
xor
add
fst
xor
test
clc
xchg
movs
inc
add
in
jno
sbb
dec
outs
psubq
sub
ins
sti
cmc
sub
inc
(bad)
into
dec
mov
nop
in
mov
fcom
stos
mov
jnp
ja
cs
fld
adc
mov
js
add
stc
jmp
or
sub
popf
(bad)
dec
and
mov
jp
jns
and
cmps
inc
hlt
test
ret
clc
adc
rcr
repz
or
adc
cs
push
fcmovb
stc
jbe
sar
sbb
(bad)
dec
pop
jle
(bad)
leave
or
inc
push
out
pop
aad
cmp
cmps
jb
cmp
and
push
sahf
pop
movs
jns
pop
or
mov
add
mov
jmp
into
pushf
pushf
fs
add
mov
das
push
xor
fnstsw
fwait
in
inc
jg
int
int
push
nop
gs
mov
adc
pop
mov
mov
(bad)
scas
les
push
push
adc
loopne
fldcw
repz
xor
mov
dec
jno
sbb
fs
rcr
push
jmp
mov
push
add
(bad)
call
or
ret
popa
out
ins
inc
(bad)
test
mov
mov
aam
inc
xor
outs
rol
enter
push
mov
daa
and
adc
or
inc
fwait
mov
add
rcr
in
int3
das
or
repnz
dec
inc
mov
and
sbb
mov
ja
jbe
dec
add
mov
dec
push
dec
push
lods
outs
and
and
stos
add
push
cmp
cli
push
xchg
cli
push
in
popf
jmp
xor
cmps
xor
shr
into
xor
pop
cld
pop
iret
cmp
(bad)
push
cdq
in
repz
arpl
mov
jmp
xchg
int
cs
and
out
pop
cmp
mov
pop
xchg
test
cwde
popf
mov
sar
movs
pushf
dec
mov
sahf
scas
out
test
daa
pop
fmulp
jae
inc
aad
ins
popa
mov
add
addr16
shr
aaa
(bad)
aam
cmp
xor
es
adc
xchg
sbb
sub
fsub
ret
fstp
pop
stos
push
adc
(bad)
stc
scas
push
xchg
shl
aad
adc
xor
stc
jno
popa
repnz
pop
xor
into
dec
pop
or
dec
loopne
xchg
xor
js
pop
jmp
mov
mov
lods
lahf
and
ja
add
xor
mov
and
xchg
mov
stos
frstor
adc
and
div
les
mov
pop
sbb
repnz
cmp
dec
ret
daa
scas
jno
gs
push
or
xor
inc
into
das
sub
mov
bound
out
loopne
push
pop
push
dec
hlt
dec
movs
push
pop
scas
push
mov
scas
(bad)
idiv
dec
adc
(bad)
sub
dec
sub
retf
push
mov
cli
push
push
loopne
mov
push
into
mov
cmp
pushf
push
jmp
psadbw
sub
cdq
inc
cdq
adc
lock
into
pop
clc
mov
sbb
and
movhps
je
imul
(bad)
es
loopne
out
inc
daa
dec
add
jl
jmp
inc
or
jne
jmp
cmp
fldenv
push
hlt
add
jecxz
push
(bad)
mov
mov
sbb
or
icebp
push
jge
mov
aaa
aaa
adc
loope
call
test
sar
and
aaa
xor
fistp
xchg
mov
and
push
inc
repnz
lods
test
pop
inc
std
push
jg
mov
sbb
push
push
popa
sub
cs
push
xor
sub
xor
nop
xor
movs
lods
xchg
ret
push
inc
pop
mov
mov
in
dec
pop
(bad)
cld
lods
xor
cmps
add
in
mov
mov
mov
mov
adc
in
loop
cmp
mov
aas
add
pop
ins
jb
loopne
adc
cmp
bound
cmc
icebp
add
fs
push
sub
aas
jno
lock
retf
call
retf
cli
mov
sub
loopne
lods
jle
adc
and
add
jmp
inc
and
jge
scas
bound
fcmovbe
mov
aaa
test
mov
adc
mov
mov
ror
movs
add
adc
xchg
jl
sub
mov
loopne
loopne
sar
dec
sub
inc
cmp
mov
and
sbb
and
into
loopne
mul
mov
test
in
vmovdqa
sar
xchg
nop
and
cmp
pusha
jns
(bad)
fiadd
mov
push
fnstenv
lock
mov
lock
adc
in
jbe
fdivr
sbb
xlat
sbb
push
inc
in
pop
imul
je
hlt
ds
mov
leave
add
lods
popa
shl
adc
lods
xchg
int
daa
adc
mov
mov
mov
jns
dec
mov
shr
push
(bad)
rcr
push
pop
dec
sbb
push
sbb
lods
popf
outs
cmp
mov
les
inc
fdiv
mov
push
dec
ins
push
cmps
shl
popf
xor
mov
(bad)
mov
out
inc
xor
popf
fbld
mov
inc
add
or
xchg
test
push
sbb
jmp
sahf
mov
scas
push
mov
jmp
mov
adc
push
cmps
mov
jno
lods
xchg
into
call
jmp
cmp
inc
and
xor
jl
xchg
push
cmp
mov
adc
mov
cmp
daa
mov
xor
popa
ss
jne
bound
shr
test
xor
or
out
enter
repnz
fldcw
pop
push
les
cmp
ins
gs
ja
xor
jmp
pop
sbb
icebp
adc
add
xchg
mov
pop
inc
jo
js
std
mov
mov
aaa
push
fsub
pop
inc
jo
jecxz
fwait
cmps
sbb
mul
sub
push
(bad)
push
loop
push
adc
movs
cmc
sub
repnz
xor
or
icebp
mov
pop
push
ror
loop
jb
or
xor
and
fimul
ret
popa
cmp
(bad)
dec
pop
repnz
ror
cmps
cmp
and
rcr
push
add
outs
fcom
cmc
mov
inc
sub
mov
loope
adc
ds
pushf
imul
fldcw
dec
(bad)
and
jmp
xchg
or
pop
and
xchg
dec
jb
in
repz
pop
clc
or
sub
cmps
or
dec
xlat
mov
mov
repnz
ror
or
dec
(bad)
lea
dec
jo
loope
xchg
adc
adc
stc
imul
pop
pop
aaa
pop
dec
ja
cdq
xchg
sub
xchg
fninit
adc
out
stos
pop
add
xchg
mov
inc
fadd
(bad)
jmp
(bad)
sub
mov
into
jl
mov
adc
adc
or
jns
push
inc
aad
(bad)
int3
sub
xlat
fidiv
outs
loopne
lahf
jg
call
jmp
fidivr
cmps
sbb
dec
imul
or
stc
xlat
pop
ror
aad
add
stc
xchg
dec
ja
popa
mov
(bad)
fcom
js
mov
pop
or
stos
adc
inc
out
mov
xchg
hlt
jne
pop
jae
cli
loop
vcmpsd
pusha
gs
inc
icebp
mov
xor
(bad)
sub
ss
add
xor
sahf
retf
inc
addr16
and
xchg
pop
and
cld
mov
es
retf
jbe
sti
ds
jmp
jbe
cld
mov
sbb
dec
les
xchg
jae
pop
xchg
ja
hlt
push
and
test
mov
xchg
cdq
(bad)
lods
test
out
mov
or
xchg
lock
idiv
xor
jmp
iret
push
or
cs
nop
loop
lds
(bad)
cli
jmp
inc
loopne
or
das
daa
test
mov
cmps
dec
mov
adc
cwde
cld
xchg
arpl
ds
outs
inc
shl
mov
mov
push
pop
jo
mov
ror
out
arpl
or
mov
inc
mov
test
lds
xchg
or
rcr
mov
cmps
push
(bad)
outs
pop
mov
into
call
mov
mov
xor
sbb
repz
cld
pop
lock
xchg
xchg
mov
test
rcr
adc
cmp
jo
inc
push
ins
xchg
rcr
mov
test
jg
test
int
jg
and
inc
inc
xchg
dec
loop
pop
icebp
sbb
(bad)
enter
mov
cmp
arpl
jnp
cmp
and
and
xchg
or
lods
xchg
pushf
jae
push
and
sbb
fsub
cwde
ror
mov
mov
jecxz
xchg
adc
push
dec
lods
adc
xor
cmps
push
dec
jae
repnz
adc
sbb
xchg
cld
push
xor
sub
(bad)
lock
jns
fadd
div
int
cdq
sbb
jno
xchg
dec
fidiv
shl
clc
mov
jo
jns
ror
stos
ret
or
and
mov
stos
call
shr
stos
dec
es
test
cmp
imul
xchg
xchg
icebp
inc
cmc
(bad)
repnz
xor
(bad)
mov
fstp
rcl
jge
(bad)
out
mov
dec
fcomp
(bad)
xchg
(bad)
lods
sbb
or
push
imul
sahf
cmp
out
(bad)
(bad)
dec
adc
xor
movs
and
jnp
push
sbb
mov
pop
movs
xor
xor
loop
in
shl
les
dec
vcvtpd2qq
xor
gs
gs
not
and
movs
ret
in
ret
ftst
inc
and
das
inc
pop
adc
xchg
ret
cwde
movs
data16
cld
push
xchg
push
ja
int
push
pop
sahf
movs
xlat
fstp
outs
ins
sub
jecxz
fisubr
and
push
mov
call
iret
stc
add
adc
cmp
adc
dec
xchg
xchg
and
stos
ficom
cs
pop
cmp
sbb
neg
popf
push
(bad)
fcmovb
pop
(bad)
mov
inc
js
std
dec
xchg
push
int3
repz
or
bound
lds
pushf
(bad)
(bad)
daa
mov
int3
push
mov
push
pop
popf
cmp
out
xchg
loope
ja
neg
shl
icebp
push
imul
xchg
imul
loop
mov
shl
mov
sub
mov
loopne
xchg
hlt
inc
mov
adc
adc
pusha
ins
adc
jmp
xor
imul
repz
cdq
test
out
ss
les
push
inc
jne
sub
sub
fdivr
repz
mov
addr16
cmp
add
xchg
scas
xor
xor
mov
push
mov
sub
outs
out
mov
retf
push
or
movs
(bad)
addr16
cwde
sub
(bad)
mov
adc
in
inc
cli
loope
outs
cdq
imul
cld
fist
popa
shr
mov
retf
jnp
int3
add
aaa
fld
lea
rol
int
xchg
mov
cmp
adc
in
and
inc
jmp
or
or
cmp
pop
lods
das
dec
push
fist
iret
inc
enter
xor
cmps
shl
movs
retf
mov
retf
dec
mov
lock
je
test
arpl
pushf
jmp
dec
retf
clc
xor
push
xlat
cmp
clc
cmps
mov
or
test
scas
out
jge
sbb
arpl
xlat
(bad)
and
mov
cs
retf
ins
aad
lods
outs
push
lahf
out
stos
mov
clc
jo
jno
(bad)
movs
(bad)
call
cmc
(bad)
pop
and
and
jle
(bad)
sbb
jmp
push
pop
cmp
retf
fstp
mov
scas
lods
loope
jo
cdq
pop
pop
lods
mov
and
cmp
mov
fdivr
pop
gs
cmp
sub
jno
popa
cmps
and
movs
enter
dec
je
out
fs
ja
and
sub
mov
inc
bound
ret
imul
jle
out
pop
mov
or
push
les
fstp
out
push
inc
pop
sbb
iret
push
(bad)
jbe
mov
pusha
lods
fwait
pushf
addr16
or
and
jae
out
aaa
call
adc
retf
sbb
movs
xchg
mov
shl
adc
in
dec
sbb
xor
push
xchg
push
lock
gs
and
lock
inc
mov
sbb
xlat
dec
mov
(bad)
in
or
fwait
mov
inc
mov
cmp
test
xor
mov
xor
pop
xchg
arpl
out
and
mov
lea
es
aaa
jnp
add
movs
sbb
mov
inc
mov
xor
push
inc
lahf
out
pop
mov
stc
jp
jnp
cld
icebp
fimul
call
(bad)
mov
sub
mov
popa
adc
lea
dec
or
mov
xchg
shl
push
jle
xor
mov
int
loope
adc
dec
xor
add
push
push
adc
ret
fwait
mov
fnstsw
and
mov
loopne
pop
or
and
int
push
pmaxub
sti
mov
mov
(bad)
lahf
outs
cmps
push
mov
inc
test
xor
inc
inc
mov
arpl
inc
andnps
rol
movs
inc
loope
out
scas
stos
ss
push
cmp
dec
enter
imul
or
sbb
out
dec
(bad)
stc
xchg
mov
inc
inc
std
dec
cmp
and
adc
(bad)
fwait
pop
push
es
and
adc
and
(bad)
aaa
inc
(bad)
(bad)
and
inc
push
sub
cli
cli
ficom
stc
sbb
push
push
pop
out
fwait
mov
mov
dec
mov
int
aaa
sbb
xchg
cmps
les
out
neg
xor
iret
lea
ja
int
adc
pop
nop
jmp
mov
cmp
jmp
cli
and
pop
rol
add
xor
add
pop
ds
push
mov
sub
test
in
push
push
and
cld
sti
xchg
(bad)
imul
shl
(bad)
xchg
cmps
jns
inc
and
mov
push
sbb
test
in
inc
mov
in
and
(bad)
jb
or
inc
inc
test
push
hlt
cmp
push
jge
dec
lods
jecxz
adc
out
dec
push
pop
cmovo
enter
in
push
mov
rcr
mov
dec
mov
(bad)
into
(bad)
cmp
and
in
xor
stos
je
cwde
ja
int3
sahf
ja
or
add
adc
mov
mov
or
adc
xchg
loop
les
xor
cdq
fidiv
sub
push
or
imul
mov
mov
aam
fisttp
in
int3
xchg
mov
sbb
xchg
mov
cmps
pop
add
inc
aaa
rcr
enter
add
adc
push
pop
or
dec
les
inc
inc
push
cmp
lods
mov
push
dec
push
adc
or
fs
mov
and
push
test
pushf
fisttp
and
mov
pop
pop
mov
hlt
jae
and
adc
arpl
mov
fwait
mov
sub
xor
jmp
pop
in
mov
add
sbb
mov
gs
in
fist
adc
cmp
jle
aad
imul
fnstsw
scas
ins
pop
nop
dec
dec
or
inc
xchg
sub
adc
hlt
mov
aad
outs
jmp
xchg
push
stos
pushf
xchg
jns
(bad)
in
jns
shl
out
cmp
inc
mov
in
and
jno
nop
xor
jbe
jge
int
inc
push
in
rcr
sbb
ja
adc
and
ret
mov
dec
stos
cmp
(bad)
das
push
mov
ins
push
cmp
loop
or
fcom
js
xor
or
hlt
sub
fisttp
test
adc
push
sbb
out
jmp
fcom
push
out
mov
add
jge
adc
dec
std
jge
call
mov
push
add
push
cmps
pop
xor
je
(bad)
lock
sub
xchg
or
mov
adc
(bad)
mov
adc
inc
shl
mov
jae
mov
push
pop
xor
outs
out
mov
pop
adc
enter
cmp
push
loop
mov
arpl
jl
aas
xchg
retf
pop
js
mov
aaa
xor
mov
push
mov
xchg
push
(bad)
dec
ret
and
push
add
jnp
cli
mov
push
(bad)
xor
fldenv
mov
test
rcr
xchg
das
cli
jae
dec
mov
sub
test
mov
adc
mov
adc
je
loop
cs
in
inc
call
shr
fiadd
pop
loopne
sub
and
mov
out
xor
cwde
outs
cmp
cmc
test
ficomp
inc
in
leave
push
aas
(bad)
xchg
je
jge
sub
mov
sbb
push
in
pop
cmps
popf
xchg
in
inc
cmp
adc
cli
fmul
sahf
pop
push
loope
ret
sub
mov
les
iret
push
loop
adc
mov
lock
jl
(bad)
cmc
add
or
sub
sub
xchg
push
ja
sbb
jmp
or
add
jmp
xor
cmps
mov
imul
inc
adc
fldenv
cli
xchg
pop
mov
enter
mov
shr
sbb
and
jmp
popf
ss
inc
xor
adc
int
dec
scas
sbb
(bad)
mov
and
outs
test
xchg
inc
out
sub
push
(bad)
mov
pop
retf
jecxz
(bad)
push
stos
inc
repz
mov
fstp
add
and
xlat
shl
retf
xchg
dec
lock
movs
daa
imul
and
test
scas
push
jne
xchg
pop
in
sbb
cdq
dec
pushf
or
inc
js
into
push
sbb
sub
ror
xor
ds
mov
add
mov
mov
sub
stos
jbe
repnz
xchg
mov
adc
femms
pop
pop
inc
sub
pop
aas
push
daa
popf
scas
push
rcl
retf
in
or
aas
addr16
dec
test
jae
ffree
xchg
push
and
dec
xchg
xchg
adc
(bad)
fld
xor
mov
psubsb
or
(bad)
movs
jl
cmp
retf
shr
mov
inc
sbb
fadd
out
mov
xchg
xor
sbb
cli
add
or
xchg
pusha
js
mov
adc
pop
shl
mov
mov
adc
test
xchg
lods
mov
xchg
out
xor
mov
(bad)
scas
jecxz
push
cld
ret
cmc
test
xchg
adc
sub
fnstenv
push
xor
xchg
loopne
test
int3
mov
mov
in
push
push
sbb
mov
lahf
fs
aam
in
sti
enter
sbb
jecxz
add
inc
push
inc
cmp
and
ror
inc
xor
pushf
fcmovnb
xor
add
jmp
movs
pop
scas
sbb
(bad)
fnstsw
jle
sbb
or
daa
movs
pop
cmp
loopne
dec
(bad)
aaa
clc
fmul
sti
cwde
test
scas
mov
shl
cs
jmp
jno
pop
inc
test
out
(bad)
or
shl
ret
out
sar
sub
loopne
fild
cmp
shl
xchg
xchg
and
push
push
cmps
mov
movs
js
addr16
aam
add
fidivr
push
fs
sar
push
pop
ins
mov
adc
pop
retf
dec
xor
outs
out
pop
push
inc
jmp
popf
sbb
pop
and
mov
jmp
imul
dec
and
out
shl
xchg
mov
jmp
outs
mov
cmps
std
pushf
mov
outs
in
and
jecxz
and
mov
mov
popf
inc
and
pop
adc
retf
mov
mov
or
shl
mov
gs
push
push
aad
fsubr
push
push
cdq
popf
sub
out
inc
xchg
push
out
ins
mov
adc
mov
in
loop
mov
mov
adc
addr16
cmp
mov
inc
xchg
icebp
cmp
clc
add
push
jo
jb
jmp
cld
xor
fsubr
mov
inc
mov
jge
add
aaa
int3
cmps
into
outs
push
in
outs
std
(bad)
fild
pop
and
cli
inc
div
mov
xchg
or
iret
sbb
xlat
sub
scas
stos
jbe
mov
in
sub
push
cmp
dec
cld
pusha
rdtsc
pmuludq
xor
push
inc
fadd
sbb
int3
mov
mov
xchg
icebp
lods
ins
retf
push
lods
cmps
mov
int
push
inc
push
add
xor
test
push
addr16
or
mov
sub
hlt
sub
test
or
je
(bad)
push
sbb
ror
imul
fiadd
pop
dec
jg
push
jmp
inc
or
call
jecxz
and
and
add
dec
mov
mul
cmp
int
mov
jae
les
cmps
imul
fiadd
mov
movs
(bad)
mov
aam
mov
(bad)
out
fs
movs
jmp
loop
or
fbstp
mov
pop
xchg
or
or
or
in
jecxz
adc
inc
or
movs
xor
int3
or
or
lahf
enter
push
out
(bad)
fcomp
into
cmc
xchg
jg
dec
inc
pop
gs
jl
xchg
test
into
aas
mov
fcomp
fs
adc
loope
push
push
xor
mov
or
mov
xchg
ss
popf
movs
je
adc
add
outs
and
into
fist
icebp
adc
or
retf
(bad)
jno
mov
icebp
aaa
jmp
push
ror
mov
ds
push
pop
(bad)
xchg
xchg
cs
pop
or
retf
fdivrp
in
imul
adc
jge
jb
or
pop
cmpxchg
(bad)
jo
inc
ret
sub
clc
rol
shr
popf
or
call
adc
xchg
inc
dec
pushf
iret
and
add
mov
push
dec
cmp
sti
retf
mov
out
cs
in
xchg
out
setne
fs
arpl
xchg
fiadd
cli
sbb
xor
jne
cs
shl
lock
push
neg
mov
std
fdivr
cmp
jg
inc
mov
or
popf
xor
push
xor
or
mov
push
call
lahf
or
outs
pop
hlt
push
mov
daa
push
mov
sub
jp
jae
sub
nop
push
mov
add
mov
or
inc
stos
xchg
repnz
call
dec
retf
xchg
pop
iret
in
mov
movs
cli
xor
mov
sbb
inc
es
push
lahf
cdq
pop
aas
fadd
add
fld
push
mov
bound
shl
mov
out
out
xchg
fldcw
test
jbe
jmp
imul
cmps
and
dec
push
cwde
mov
or
inc
lods
aaa
inc
ror
dec
mov
sar
and
inc
fs
cmp
inc
inc
xchg
hlt
lahf
icebp
xchg
push
mov
xchg
in
mov
jb
xor
mov
xchg
and
add
ret
mov
jmp
lahf
dec
pop
shl
sbb
jne
imul
movs
inc
jae
aad
xchg
mov
hlt
xchg
repnz
pushf
ret
push
sbb
arpl
call
sahf
stc
adc
push
add
xchg
lds
icebp
jb
mov
dec
retf
jno
mov
jl
add
xchg
das
arpl
(bad)
sbb
add
out
icebp
in
jle
xlat
cdq
icebp
(bad)
push
or
lods
int3
xor
and
jbe
add
pop
lods
dec
push
mov
mov
mov
sub
enter
test
sub
xchg
leave
jmp
shl
(bad)
out
stos
jl
lods
outs
sub
aad
outs
cmp
ficom
cmp
imul
div
fld
rcr
sahf
xchg
mov
rol
and
jnp
xchg
push
lds
jge
mov
cmps
add
dec
repnz
xor
movs
or
xchg
cmp
or
adc
out
push
jae
adc
jge
sub
push
fnstsw
adc
jb
std
lahf
stos
mov
dec
mov
sbb
or
rcl
sbb
inc
stc
push
mov
mov
dec
inc
push
stos
out
call
mov
(bad)
aaa
push
popf
stos
outs
jle
dec
adc
sbb
and
leave
jg
cmp
(bad)
xchg
sbb
and
or
ret
aad
push
inc
hlt
repz
xchg
cld
jbe
loopne
stos
pusha
add
popf
cdq
xor
pop
mov
xchg
cdq
add
and
mov
mov
adc
lock
push
rcl
sbb
pop
mov
or
daa
mov
ins
(bad)
cmps
adc
add
cmp
shl
add
shr
scas
imul
int3
xor
arpl
stc
mov
jmp
add
fucomi
pop
add
je
push
jle
sbb
jo
push
mov
repnz
and
jae
nop
sbb
bound
sbb
jbe
dec
mov
jns
retf
enter
cs
jne
add
push
inc
dec
das
in
mov
call
sbb
xor
ficomp
imul
mov
out
cmc
popa
mov
lock
(bad)
mov
stc
hlt
shl
and
pusha
mov
arpl
ins
dec
xor
clc
fiadd
and
adc
in
inc
push
pop
and
jmp
js
pop
push
out
inc
(bad)
mov
sahf
mov
pop
in
jnp
mov
repnz
pop
adc
xchg
stos
lahf
punpckhwd
jmp
imul
jmp
inc
mov
or
stos
loopne
cmps
lock
ret
mov
cdq
mov
mov
push
sbb
cld
mov
mov
lods
int
jb
out
mov
cld
fidivr
mov
outs
(bad)
(bad)
cmc
out
movs
popf
ja
daa
mov
push
lods
out
mov
xor
in
mov
and
pop
add
imul
xor
shl
or
sbb
loop
in
int3
pop
cld
pop
xor
inc
jp
push
out
jmp
sub
movs
out
push
sar
add
aaa
and
outs
or
jp
xchg
rol
pop
movs
mov
loopne
add
mov
icebp
repnz
iret
dec
mov
mov
pop
lds
mov
adc
pop
mov
push
imul
movs
cmp
push
or
mov
mov
repz
xor
mov
mov
and
int
cs
xor
jle
cmp
mov
in
sub
and
repz
pop
sar
shr
pop
pop
retf
cwde
and
sub
aam
mov
ins
shr
xchg
sub
pusha
test
jecxz
mov
push
push
jmp
fsubr
sbb
dec
mov
push
ret
cmp
cmp
jnp
xor
and
and
icebp
cmp
xor
push
inc
rcr
dec
and
jp
dec
ret
xor
in
cmp
div
fisubr
mov
inc
or
scas
mov
in
sbb
and
call
aad
sub
sbb
std
and
shl
inc
pop
sbb
mov
pop
jecxz
imul
movs
cwde
mov
mov
jns
test
mov
inc
sub
cli
mov
ds
mov
stos
mov
jnp
or
in
loop
mov
clc
pop
push
into
lods
or
cmp
push
mov
cmp
mov
sub
sub
jns
sub
dec
sti
arpl
inc
std
fsub
adc
xor
lods
pop
ja
xchg
dec
pop
out
sbb
adc
(bad)
jne
ret
xchg
push
dec
ficom
xchg
pop
aam
mov
hlt
mov
aam
push
cmps
or
and
stc
fwait
push
push
sub
xor
iret
jno
push
adc
out
dec
loopne
sbb
popa
xchg
in
adc
pop
mov
pop
out
inc
add
inc
inc
mov
aam
pop
lods
adc
pop
pop
retf
push
jg
mov
xchg
imul
xor
loop
cmp
js
cdq
xlat
mov
adc
fisttp
push
je
inc
daa
(bad)
cdq
repnz
jb
push
xchg
aaa
pop
sub
loop
xchg
mov
int
mov
jno
xchg
xor
(bad)
adc
inc
xor
sbb
push
repz
adc
adc
gs
scas
dec
popf
jecxz
dec
cdq
dec
movs
in
mov
jecxz
outs
sub
jae
popa
dec
or
push
imul
mov
stc
sbb
div
add
dec
dec
jno
and
push
es
push
imul
mov
jmp
xchg
aad
jb
push
stos
pop
cmc
adc
mov
loope
mov
add
outs
into
mul
gs
xchg
push
loope
fcom
hlt
popa
xchg
add
outs
jbe
daa
mov
push
pop
cmp
rcr
outs
daa
add
push
pop
cmp
adc
jmp
sub
inc
inc
daa
stc
push
and
add
jecxz
call
in
adc
lods
iret
icebp
das
sbb
or
and
xlat
jge
cmp
sbb
cwde
sub
mov
xchg
dec
cmp
retf
xor
cmp
xor
cmp
mov
fld
jecxz
adc
mov
in
adc
in
int
aaa
out
in
pushf
jecxz
fistp
sub
pop
imul
outs
aad
fnstcw
sbb
xchg
mov
inc
jmp
jmp
or
sbb
jbe
adc
push
xchg
mov
inc
push
mov
push
xchg
jg
out
retf
sub
repz
mov
div
dec
push
xlat
lea
sub
dec
dec
sub
jae
jle
mov
mov
int3
(bad)
(bad)
js
lods
jo
add
mov
mov
jb
fwait
sbb
inc
jle
sbb
dec
xchg
mov
fidiv
mov
cmp
into
mov
es
dec
cmc
int
imul
outs
adc
inc
xchg
test
pop
jae
jg
dec
push
pop
jge
mov
fdiv
ror
fimul
inc
int
mov
pop
pop
xchg
in
rcl
cmp
jg
inc
stc
or
idiv
ror
push
xor
aam
fild
in
not
xchg
mov
shl
(bad)
ds
adc
movlps
sti
jmp
(bad)
retf
mov
fbstp
jmp
mov
outs
push
push
aas
sub
into
xchg
mov
xor
mov
pop
arpl
out
(bad)
int
mov
adc
cli
scas
loopne
sahf
retf
pop
cmp
dec
jl
out
ror
push
dec
jecxz
(bad)
push
jae
jo
push
stos
mov
imul
or
mov
pop
sub
xchg
test
mov
in
or
push
push
push
and
inc
or
adc
mov
shr
psrlw
mov
mov
push
jecxz
popa
test
xchg
dec
mov
or
sub
xor
(bad)
in
not
sar
(bad)
jmp
ss
mov
or
cdq
sub
int
jle
mov
test
add
jl
sbb
ja
out
and
(bad)
sub
loop
cli
mov
outs
mov
cwde
adc
mov
cld
aam
aaa
fiadd
les
pop
adc
movs
leave
test
inc
inc
and
mov
dec
call
mov
sbb
xor
std
sbb
imul
mov
in
push
fld
mov
out
or
dec
jecxz
ss
xchg
mov
sub
cmp
sar
std
test
mov
hlt
dec
scas
sub
jle
sbb
dec
in
cmps
loop
push
push
pop
push
ss
cli
call
call
inc
xor
leave
scas
sti
xchg
fwait
pop
push
outs
inc
mov
mov
pop
pop
xor
dec
and
loop
jge
dec
and
ja
dec
out
bound
call
pop
mov
mov
or
neg
mov
std
imul
sahf
ret
cmp
jl
sbb
mov
mov
or
shl
pop
bound
ret
inc
int
lahf
cwde
stos
data16
sbb
cmp
in
lods
add
mov
fcmovne
addr16
mov
push
cs
sbb
jecxz
es
xchg
inc
cmps
or
adc
push
(bad)
cld
or
xchg
mov
fist
xor
into
mov
lahf
and
adc
inc
loop
mov
daa
mov
sub
and
push
push
int
in
cmps
rol
fs
push
adc
es
push
and
cmp
inc
(bad)
clc
add
out
data16
out
in
adc
push
or
outs
sbb
or
jmp
test
jnp
push
mov
pop
mov
stos
jbe
sbb
test
retf
or
or
sbb
or
push
sahf
pop
pop
rcr
aas
dec
(bad)
xchg
fnsave
adc
ret
mov
call
pop
jne
dec
dec
jo
inc
push
sbb
rol
cdq
push
sbb
push
inc
jp
mov
(bad)
cld
fsubr
jmp
sub
mov
(bad)
in
add
mov
imul
cmp
mov
sbb
fwait
test
push
stc
pop
or
ja
or
mov
loop
sbb
pop
in
mov
data16
mov
sub
mov
push
add
xacquire
cmp
dec
push
mul
mov
jne
fwait
dec
repz
add
fdivr
or
and
cmps
fcomp
(bad)
jo
push
jmp
into
pushf
pop
xlat
jo
daa
push
or
(bad)
sub
in
out
jo
(bad)
sbb
test
pop
mov
adc
call
push
(bad)
jmp
arpl
mov
sbb
adc
fcom
jns
pop
ret
addr16
add
adc
(bad)
(bad)
sub
out
popf
add
(bad)
xchg
or
inc
(bad)
cs
inc
mov
adc
xor
adc
aas
mov
std
jns
fs
sahf
cmp
xlat
mov
movs
ss
test
cmps
jmp
enter
jno
sbb
fwait
aaa
dec
gs
repz
xor
into
movs
adc
xchg
dec
rcr
shr
std
test
dec
lods
push
outs
sub
cld
inc
outs
push
dec
push
sti
fwait
clc
lahf
(bad)
xchg
in
ins
pop
ret
mov
xchg
sub
das
fwait
and
fst
sub
xor
pop
call
push
repnz
mov
popa
push
arpl
pop
vpmovsxbq
mov
adc
out
pop
ins
pop
pop
sar
cld
pop
and
sbb
jmp
test
push
pusha
daa
push
sbb
movs
pop
imul
sbb
(bad)
call
push
fld
cli
(bad)
sti
push
aam
pusha
xor
popa
mov
into
push
(bad)
je
pop
jo
mov
jbe
or
in
int
inc
sbb
dec
cmps
mov
mov
gs
and
add
(bad)
sti
pop
leave
cmp
jmp
(bad)
repnz
mov
or
xchg
mov
repnz
mov
jmp
add
aam
sbb
lds
sbb
stos
in
mov
pop
sub
sub
lsl
retf
mov
lods
jns
adc
inc
in
call
pushf
sbb
cmp
dec
nop
lahf
pushf
sahf
mov
or
inc
mov
push
sub
add
sbb
cli
sub
test
or
xchg
cmp
cmc
in
dec
rcl
repnz
lds
mov
mov
cmp
pusha
jb
dec
arpl
push
shl
out
lock
(bad)
jmp
(bad)
scas
outs
mov
fnstsw
inc
xor
mov
pop
dec
inc
dec
outs
mov
sub
shl
in
or
(bad)
dec
mov
inc
sbb
adc
mov
rcl
stc
mul
test
sbb
or
lea
sbb
mov
jae
inc
mov
ret
loop
movd
mov
popa
and
mov
nop
out
aaa
int3
sbb
pop
push
aam
ja
inc
jmp
daa
pushf
shr
out
cmp
sub
out
scas
loope
int
push
and
inc
and
push
jnp
cs
jp
jo
jecxz
inc
push
shl
pop
and
add
fcom
dec
popf
test
jle
cld
xor
xchg
in
mov
dec
out
push
(bad)
or
or
pop
mov
add
call
push
mov
or
nop
sbb
shl
sbb
pop
or
maxps
lahf
push
inc
xor
mov
jo
sbb
adc
sub
push
or
mov
mov
mov
cmp
movs
test
lods
call
pop
test
pop
mov
movs
in
sbb
in
call
xchg
mov
jno
iret
add
iret
mov
cmp
ins
aam
pop
mov
out
mul
mov
aad
fmul
in
and
sub
outs
call
fwait
movlps
cld
sbb
mov
sbb
mov
xor
adc
imul
jmp
sub
pop
mov
pop
(bad)
fimul
(bad)
sti
adc
or
sub
dec
sar
fisub
div
pop
and
jl
cmpxchg
popa
enter
shr
lock
mov
sub
mov
rcr
call
jnp
mov
sbb
adc
and
mov
dec
stos
inc
mov
push
(bad)
rcl
lods
in
xchg
sbb
mov
addr16
add
pop
popa
push
xchg
xor
je
sub
inc
lods
inc
inc
ret
sbb
mov
dec
popf
(bad)
test
adc
js
(bad)
lods
xchg
mov
movs
add
xor
in
add
in
xchg
sahf
in
sti
bound
shr
ja
mov
test
test
xor
(bad)
push
cmp
(bad)
push
mov
inc
movs
inc
adc
mov
popf
lahf
sbb
ds
shl
gs
xor
mov
cdq
jmp
fdivr
fnsave
xor
out
je
ja
fsubr
jbe
neg
push
xlat
mov
fs
retf
pop
pusha
es
shl
test
jno
or
vpsrlq
xchg
lods
stc
xchg
call
cmps
test
pop
adc
or
sub
outs
shr
cmp
mov
js
loop
mov
push
movs
(bad)
push
sub
cmc
xchg
test
mov
mov
push
fdivr
push
retf
inc
jmp
xor
adc
pop
push
inc
mov
int3
(bad)
mul
dec
ffree
mov
call
pop
mov
sar
push
loope
push
add
std
xchg
push
mov
cmp
sub
out
scas
lea
test
mov
jae
lock
and
outs
adc
(bad)
jl
cmp
mov
imul
jg
(bad)
mov
call
lock
sbb
stc
xor
and
push
dec
cmp
aas
xchg
ror
js
and
jbe
mov
inc
test
ins
jge
inc
test
dec
push
scas
sbb
mov
dec
jp
test
repnz
jne
jno
loope
push
dec
aaa
sub
ss
pop
jns
ret
mov
imul
ret
and
loope
lods
adc
ret
mov
out
sub
sahf
pushf
mov
inc
aad
jl
arpl
mov
xchg
fld
jmp
retf
scas
or
mov
add
popf
test
jne
cmc
adc
outs
in
jg
sbb
and
xchg
dec
sbb
test
(bad)
mov
or
jmp
or
push
cmp
or
add
mov
or
xchg
loopne
fs
xor
or
pop
dec
jbe
or
pop
jmp
xchg
xor
inc
sub
ret
jle
cdq
dec
mov
ds
je
mov
cmp
dec
adc
dec
xor
sahf
jnp
mov
fcomi
leave
loopne
jb
or
mov
push
retf
pop
pop
(bad)
in
bound
pushf
dec
fisub
sub
inc
dec
fstp
sti
push
sbb
mov
sbb
xchg
loopne
xor
aas
mov
cmp
push
daa
call
jo
sbb
pop
mov
xor
test
in
mov
adc
in
cwde
add
sar
mov
test
inc
jae
(bad)
add
mov
cld
jp
pop
and
cmps
and
and
scas
mov
arpl
add
add
inc
sti
inc
adc
adc
push
or
test
jbe
(bad)
xchg
cmps
and
(bad)
push
xchg
mov
cmp
push
ins
adc
movs
or
and
xchg
add
jg
adc
dec
loope
daa
or
mov
sbb
loopne
in
fwait
pop
jl
cs
or
jle
test
lock
mov
arpl
ds
retf
mov
push
and
adc
je
in
pop
out
mov
enter
mov
push
scas
jp
inc
xchg
cmp
push
mov
and
stos
add
push
jae
movs
int
pop
in
data16
add
xchg
cmp
adc
xchg
push
jp
je
mov
sbb
and
xor
dec
sbb
push
loope
xor
cmp
xor
in
mov
data16
ret
sbb
add
pop
shr
mov
cmp
jl
mov
jmp
sub
inc
xchg
pop
xchg
jnp
mov
mov
and
out
movs
add
fwait
inc
je
xchg
stc
and
push
mov
fstp
fwait
adc
scas
ds
sbb
test
or
cmc
loopne
jmp
pop
jae
cmp
or
xchg
mov
mov
mov
sbb
dec
das
dec
fidivr
js
mov
mov
aam
adc
push
adc
jl
call
inc
mov
xchg
or
xchg
call
and
cmp
jg
dec
(bad)
aas
in
inc
loope
jae
xchg
xchg
scas
and
sub
(bad)
cdq
fistp
retf
shl
test
jmp
xor
jae
mov
bound
leave
pop
call
fcmovne
call
lea
ds
adc
add
repz
mov
loope
jg
pop
cmps
in
gs
dec
adc
jge
mov
xlat
jae
push
cwde
mov
(bad)
mov
mov
cli
movs
xlat
stc
int3
mov
inc
add
outs
loopne
arpl
mov
retf
dec
adc
sbb
js
(bad)
in
push
inc
and
pop
rcl
adc
hlt
pop
mov
mov
pop
stc
jne
sbb
inc
aad
dec
(bad)
sub
outs
stos
mov
jnp
mov
mov
fs
cwde
pop
arpl
cmp
dec
push
mov
xchg
mov
xchg
icebp
fidiv
sar
out
xor
xchg
or
dec
mov
cli
jmp
sub
jae
mov
or
(bad)
outs
ret
push
or
imul
adc
and
iret
jb
add
adc
addr16
sub
jmp
int
je
dec
frstor
test
out
mov
cmps
sbb
sbb
(bad)
icebp
fistp
mov
rcr
mov
inc
outs
sti
cmp
fsub
adc
js
xchg
cmps
bound
sbb
xchg
shl
push
pop
jecxz
sbb
les
xor
out
adc
inc
xchg
lods
add
mov
sbb
shl
and
jp
xor
retf
inc
sbb
pop
shr
test
push
dec
push
mov
cld
adc
inc
pop
mov
call
jmp
sti
fwait
push
xor
and
lock
mov
ret
jle
and
inc
jb
adc
xor
xchg
out
xchg
mov
sbb
(bad)
jecxz
sub
mov
lods
add
sti
mov
jnp
xchg
int
fdiv
(bad)
sbb
inc
pop
or
aam
aam
pushf
sub
iret
test
xchg
ins
lods
pop
fwait
and
push
les
jae
mov
sub
fcomp
inc
(bad)
pop
scas
(bad)
jo
aam
push
je
(bad)
mov
mov
test
sub
xor
pushf
sub
and
jle
pop
sbb
hlt
cld
mov
push
add
adc
xor
das
test
or
cmps
(bad)
adc
inc
outs
push
test
sbb
(bad)
out
dec
shr
scas
sahf
xor
(bad)
jns
aam
sub
xchg
mov
jg
cmp
bound
xor
jo
xchg
xchg
sub
push
stos
mov
and
fst
rol
inc
inc
cmp
jg
out
je
adc
sbb
jmp
push
mov
div
push
outs
rcl
add
or
pusha
test
lds
(bad)
push
dec
outs
cs
out
xor
outs
mov
aad
mov
idiv
dec
dec
jp
mov
in
jnp
add
mov
jmp
or
fiadd
ja
jno
bnd
add
xchg
sti
jp
dec
scas
dec
xor
(bad)
aaa
call
jl
sbb
loopne
lds
daa
push
aad
pop
lods
adc
sar
mov
mov
shl
imul
inc
cli
cmp
mov
add
jp
inc
and
sub
ds
retf
push
push
mov
ins
mov
fild
push
data16
mov
mov
loopne
inc
mov
inc
mov
ret
mov
inc
into
mov
jo
mov
cmp
jmp
sbb
add
mov
test
sbb
call
push
clc
xor
or
imul
xchg
imul
fld
push
xlat
fs
mov
pop
jge
cmps
push
adc
jp
adc
ja
inc
out
fs
and
enter
add
add
aaa
xchg
sbb
pop
outs
loop
adc
or
mov
idiv
ret
add
fs
mov
push
cmp
xor
push
ds
out
sbb
adc
xor
jns
adc
mul
daa
ja
add
xor
cmc
jns
inc
arpl
lock
add
in
mov
in
sub
sbb
push
mov
(bad)
lahf
mov
dec
push
jmp
das
lock
or
aas
loope
rcr
pop
aas
loop
loopne
fcom
xchg
scas
into
mov
mov
pop
sbb
addr16
mov
iret
push
cwde
cmp
pop
retf
adc
xchg
xlat
pop
sub
sbb
xlat
dec
inc
sbb
(bad)
pop
dec
add
push
popf
fisubr
pop
jne
dec
push
pop
xchg
mov
and
scas
(bad)
sbb
cdq
pop
mov
cdq
(bad)
ret
(bad)
jbe
push
and
sti
push
push
inc
cdq
stos
mov
pushf
jns
jle
pop
lods
inc
stos
int3
aas
jl
imul
jno
sub
rcr
js
mov
jl
add
or
jns
shr
xlat
mov
stos
lods
inc
clc
xor
clc
out
sub
adc
sbb
xchg
nop
xor
cmps
js
xchg
or
push
adc
push
mov
fiadd
arpl
stc
add
push
stos
stos
dec
daa
aas
add
das
sub
in
jmp
push
xor
dec
xchg
loope
loop
xchg
fld
push
sbb
(bad)
in
inc
mov
push
cmp
xor
mov
xor
leave
ja
cmp
xchg
ror
cdq
and
sbb
lahf
jle
pusha
sbb
mov
mov
dec
jp
fist
add
neg
inc
mov
xor
dec
push
jns
mov
aaa
pop
out
daa
mov
out
cs
adc
divps
xor
stos
pop
ins
add
dec
pop
sub
cmp
movs
outs
mov
icebp
fsubrp
or
jno
inc
mov
mov
fcmovbe
pushf
lock
arpl
fmul
fsubr
or
fisub
fild
mov
sbb
jbe
imul
ins
jb
cli
lahf
adc
xchg
fwait
xor
(bad)
cmp
mov
xor
shl
cmp
pop
cmps
(bad)
cwde
adc
inc
xchg
jmp
jne
popa
call
in
stc
and
jmp
mov
jp
in
lods
addr16
push
(bad)
jbe
and
leave
sahf
push
mov
adc
mov
and
jnp
fst
push
out
add
mov
xor
nop
mov
lods
add
mov
test
add
and
dec
push
dec
clc
add
cmp
sbb
xchg
push
out
sbb
mov
nop
je
les
pop
add
mov
mul
cs
enter
xchg
jmp
hlt
jge
in
fld
sbb
ror
jno
pushf
pusha
call
in
xchg
xlat
adc
dec
leave
cmp
ret
jg
mov
pop
jg
in
movs
sti
mov
in
adc
retf
aam
cmp
xor
das
ss
outs
fmul
das
(bad)
dec
dec
mov
adc
inc
pop
mov
neg
jne
pop
dec
js
mov
mov
jmp
push
xor
test
jns
push
jg
popf
push
adc
rol
fprem
retf
dec
pop
adc
pop
pushf
or
sub
rol
mov
push
hlt
jg
pusha
pop
imul
inc
lods
(bad)
xor
push
outs
mov
lock
and
fidiv
cmp
and
inc
mov
mov
pop
es
mov
push
add
mov
or
(bad)
jp
test
daa
adc
adc
mov
sbb
xor
aad
sub
mov
call
dec
aam
sar
xor
movs
(bad)
shr
mov
xor
aad
xchg
(bad)
outs
inc
mov
jbe
int
jo
cli
loop
popf
add
add
les
sti
xor
sub
add
jp
and
call
mov
jle
in
ins
mov
jecxz
sahf
pop
fcmovne
xchg
ffree
jmp
repz
adc
imul
loope
or
test
sti
jno
or
icebp
jl
and
xchg
mov
fwait
inc
dec
mov
mov
fnstcw
sti
mov
sbb
inc
mov
jmp
and
cmp
mov
stos
or
mov
pop
std
cmps
inc
(bad)
repz
jns
xchg
lds
ss
out
jmp
das
js
xchg
xor
aam
aam
pop
gs
push
(bad)
pusha
sub
cmc
sbb
push
(bad)
fprem
dec
sub
pushf
cmps
loop
add
mov
fcomip
inc
ins
je
xor
inc
add
test
nop
or
push
stc
cdq
push
xor
cmp
push
mov
nop
pop
add
add
outs
jns
mov
inc
or
adc
ins
hlt
jnp
inc
push
push
lds
nop
in
pop
cmp
xchg
pop
push
aam
(bad)
sub
cmp
(bad)
das
pop
jae
jmp
retf
adc
iret
mov
js
and
and
cmp
imul
mov
push
imul
add
(bad)
je
push
cmc
lahf
dec
stos
adc
sub
mov
fwait
aas
push
sbb
(bad)
mov
sub
mov
push
stc
mov
cmp
mov
and
jge
mov
adc
aaa
cmp
jl
mov
cli
movs
stos
mov
push
push
gs
cld
and
mov
ficom
ror
push
repnz
adc
popf
sbb
sub
dec
stc
sub
lods
(bad)
rcr
ret
outs
jmp
sbb
cmovae
cmc
mov
leave
in
and
mov
ficom
pushw
cmp
jbe
jmp
outs
xor
cdq
cdq
retf
outs
cwde
mov
sahf
in
push
add
mov
xchg
mov
les
repnz
sbb
jns
ins
(bad)
ins
push
(bad)
cmps
inc
sbb
cmps
arpl
(bad)
stos
and
xor
cmp
stos
imul
(bad)
mov
adc
repnz
add
mov
sar
adc
xor
jmp
add
adc
mov
loope
dec
inc
adc
imul
movs
dec
jge
and
nop
mov
adc
add
cld
adc
inc
dec
mov
scas
pop
int
inc
push
inc
adc
aas
push
sub
mov
sub
dec
ins
cdq
or
xor
rcl
cld
mov
mov
out
(bad)
stos
ins
cmp
sbb
adc
add
out
jbe
and
push
pusha
leave
loope
idiv
pop
or
push
jl
add
jno
or
inc
pop
add
movs
repnz
loop
je
and
fwait
mov
loopne
xor
cs
pop
sub
or
mov
xchg
scas
mov
adc
xor
pop
inc
jno
lahf
mov
push
std
scas
int3
mov
rcr
mov
mov
cmp
(bad)
retf
mov
cmp
mov
lea
sub
call
daa
push
mov
rol
out
or
mov
xchg
iret
out
xlat
mov
push
or
inc
or
cmps
inc
les
cmps
pop
mov
loop
lock
shl
(bad)
sub
pop
cmp
or
in
mov
inc
daa
adc
rol
inc
pop
mov
(bad)
dec
popf
call
xor
mov
jb
dec
jmp
repz
stos
stos
stc
push
pusha
sahf
xchg
loopne
mov
(bad)
js
pop
lds
jge
test
dec
iret
loope
cmp
cmps
mov
cmp
out
(bad)
cli
pusha
std
xchg
repnz
repz
les
ins
xchg
ds
and
adc
fcmovb
mov
xchg
jns
or
add
adc
sub
mov
test
mov
bound
mov
inc
outs
test
push
mov
mov
mov
push
cmp
leave
out
add
jg
out
push
adc
mov
push
loope
sub
push
mov
dec
mov
movs
adc
cld
pop
jb
xchg
stos
or
adc
call
cs
outs
rol
out
nop
jmp
mov
mov
ins
mov
data16
popf
fiadd
arpl
mov
cwde
dec
js
adc
add
mov
stos
jb
loopne
fnstenv
mov
cmps
ret
xchg
out
mov
adc
pop
cdq
add
mov
ins
lea
ret
dec
scas
xchg
push
mov
call
adc
sub
shl
adc
mov
mov
stc
cmp
cli
dec
mov
or
push
retf
loopne
or
add
out
in
and
daa
cdq
arpl
and
int3
or
mul
xor
adc
inc
enter
dec
mov
adc
and
sahf
pop
sbb
jg
icebp
arpl
iret
dec
cmp
das
cmp
jge
ja
outs
mov
lock
rcr
push
test
sbb
outs
(bad)
adc
mov
sbb
ins
sub
jmp
shl
aaa
jbe
dec
dec
arpl
pop
xor
push
xchg
inc
enter
imul
lods
sub
add
jno
cmp
cwde
neg
or
stc
cdq
ds
dec
shl
adc
cwde
xchg
in
inc
mov
retf
sub
adc
(bad)
jge
cmp
not
fidivr
jns
scas
pop
pusha
cmp
pop
or
in
ja
jge
imul
int
adc
call
mov
out
mov
pop
outs
(bad)
jmp
dec
adc
cmp
inc
dec
out
xchg
ins
mov
xchg
lods
cmp
push
and
xor
out
mov
scas
push
out
dec
bnd
xor
sti
sbb
aas
pushf
pusha
(bad)
mov
cmp
cli
ficomp
xchg
push
jle
movs
xor
or
(bad)
mov
or
(bad)
popa
nop
inc
std
or
mov
xchg
lods
jae
rcr
jp
push
push
js
mul
movs
stos
lds
rcl
(bad)
shl
outs
add
jnp
lods
inc
scas
mov
xchg
fldenv
xchg
fdiv
gs
mov
cmp
sub
pop
fnstenv
inc
retf
ins
stos
cmp
jbe
shl
or
clc
inc
imul
mov
add
aaa
inc
movs
mov
outs
sub
dec
mov
sbb
inc
mov
icebp
retf
mov
mov
push
adc
out
out
xor
push
gs
cmps
inc
inc
pusha
xor
out
hlt
(bad)
sahf
shl
cmp
or
cmc
cmovne
ins
adc
sti
and
jge
inc
fwait
mov
scas
aad
jge
ds
push
xchg
in
call
jnp
pop
lods
inc
push
adc
xor
sbb
cmps
inc
daa
xchg
pusha
iret
mov
jle
jmp
mov
add
sbb
inc
add
pop
ja
add
sbb
mov
in
test
inc
lods
ins
dec
push
mov
(bad)
mov
movs
outs
faddp
out
xor
test
imul
loop
sbb
sbb
mov
fwait
aam
fs
sahf
pop
hlt
cmp
and
mov
sbb
stos
scas
sbb
ins
aad
and
sbb
sub
jo
pop
or
push
jecxz
add
jge
loope
mov
lock
cmp
and
loop
jae
mov
sub
cmp
jae
stc
das
je
in
sbb
mov
popf
dec
out
clc
fcomip
mov
sub
xlat
ss
sti
ins
ja
mul
mov
and
jg
stos
mov
ret
push
jecxz
xchg
popa
dec
sbb
or
add
cli
pop
dec
sub
push
mov
xchg
scas
scas
jmp
cmp
push
aas
sub
cs
arpl
xor
ret
scas
mov
jmp
push
adc
retf
cmp
scas
sbb
cs
dec
in
mov
inc
dec
std
fldcw
mov
stc
retf
das
xor
push
xor
dec
cmps
loopne
das
push
shl
mov
imul
cmp
and
cmc
nop
or
out
int3
mov
mov
mov
cmps
je
(bad)
jnp
xor
push
leave
rcr
inc
and
fldenv
in
(bad)
fdivr
or
adc
in
cmc
jo
dec
push
inc
jae
call
sub
push
div
cmp
mov
inc
jmp
adc
repz
cs
jl
sahf
jp
xchg
dec
and
jecxz
je
and
sub
mov
adc
adc
(bad)
enter
fcomp
push
add
out
movs
sub
add
mov
adc
push
adc
test
mov
pop
mov
test
test
inc
xchg
add
and
out
xchg
xlat
mov
add
or
test
or
outs
test
jle
(bad)
test
dec
jmp
inc
out
inc
xchg
pop
inc
inc
sbb
and
xor
loop
dec
iret
imul
add
mov
and
(bad)
dec
in
xchg
jnp
in
xor
sbb
sub
js
mov
push
or
mov
lahf
xchg
test
add
xchg
rcl
mov
push
sub
fsubr
(bad)
scas
mov
sub
dec
not
dec
icebp
xor
dec
daa
cmp
test
test
ins
pop
aad
mul
aad
push
adc
push
hlt
or
shl
pop
int
jnp
stos
nop
xchg
movs
(bad)
mov
dec
or
leave
push
and
inc
mov
jo
fdiv
ja
pop
out
gs
mov
inc
ins
xor
retf
inc
cmp
out
jnp
ror
dec
push
sbb
pop
inc
pop
jns
xchg
call
popf
movs
mov
nop
leave
jmp
mov
jmp
push
push
cmc
adc
push
cli
call
or
retf
bound
(bad)
mov
jl
ret
pusha
data16
jae
scas
xor
sbb
pop
jl
je
pop
mov
sub
xor
adc
adc
(bad)
jb
out
jnp
(bad)
adc
mov
int3
mov
push
adc
xchg
add
jnp
(bad)
nop
fwait
xchg
inc
in
outs
rcr
sahf
out
outs
ins
stos
push
inc
fbstp
scas
jne
and
and
out
cmps
outs
ins
push
jbe
ja
pop
cwde
jge
push
pop
arpl
icebp
cli
sub
std
xchg
add
push
cs
mov
jne
jecxz
inc
pop
cmps
dec
dec
outs
mov
dec
neg
push
icebp
stos
stos
mov
push
cmps
(bad)
sbb
jae
sub
es
sahf
xchg
or
and
push
jae
(bad)
dec
movs
push
sub
jb
cmps
pusha
sbb
test
lods
jge
into
mov
xchg
call
cmp
mov
movs
fldcw
rcr
outs
mov
jecxz
dec
out
or
repz
sbb
mov
sub
mov
aaa
inc
dec
vmwrite
shl
test
push
xor
hlt
repz
scas
loopne
jno
popa
lea
bound
xor
xchg
jle
push
test
jge
stc
call
test
aaa
pop
repz
imul
sbb
retf
(bad)
mov
push
lds
shl
imul
mov
or
push
shl
adc
fsub
aad
ret
aaa
xor
test
les
add
xchg
push
jmp
jbe
fadd
cwde
outs
rol
fadd
shr
push
push
jmp
or
shr
push
bound
aaa
xchg
mov
adc
(bad)
dec
out
adc
mov
push
out
dec
arpl
lods
imul
shl
jbe
adc
add
imul
ja
push
and
inc
stos
dec
jle
xor
fsub
leave
mov
ins
add
push
mov
shl
mov
xchg
mov
inc
xchg
push
mov
pop
ins
mov
mov
mov
ret
cs
push
dec
cmp
mov
or
ja
pushf
inc
push
ret
xlat
out
enter
xchg
adc
(bad)
(bad)
cmc
sar
lock
inc
(bad)
jecxz
mov
push
movs
xchg
mov
adc
psubusb
mov
sub
and
mov
into
mov
xchg
mov
or
xchg
(bad)
pop
mov
xchg
push
mov
movs
cmps
pushf
push
push
scas
in
push
mov
pushf
addr16
sub
dec
xchg
or
xchg
lahf
lss
outs
arpl
(bad)
in
mov
cmp
js
aam
sub
shr
int
shl
out
cmp
mov
adc
pop
clc
adc
or
cmp
mov
mov
arpl
mov
fild
dec
fdivr
cmp
ret
pop
mov
push
stc
push
pop
dec
pop
enter
popa
inc
sbb
push
mov
out
shl
jno
shl
test
and
jb
retf
retf
(bad)
cmp
xchg
push
shr
shl
in
out
es
add
popf
shr
jmp
in
cmp
ss
(bad)
push
enter
mov
retf
xchg
ror
nop
sub
or
mov
and
jecxz
add
xor
ror
mov
shr
cmp
push
xchg
sub
sar
push
out
or
inc
popf
lods
inc
call
jns
cwde
push
add
ins
(bad)
and
ja
jne
in
and
dec
call
mov
jno
adc
sub
repnz
cmp
add
rol
test
adc
or
nop
xor
adc
pmullw
push
cmp
lods
outs
pop
mov
sbb
xor
outs
lods
cmc
das
scas
mov
loop
sub
adc
test
in
pop
push
jo
mov
inc
shr
pop
leave
mov
or
mov
cmp
xor
(bad)
es
xchg
xlat
jp
jne
mov
or
ds
xchg
mov
neg
pminsw
push
or
jge
xlat
sbb
pushf
mov
rcl
xchg
jne
es
stc
xchg
aaa
push
mov
push
loope
sub
jnp
cwde
js
push
(bad)
call
int
aad
and
mov
mov
loop
cmp
lock
ds
xor
inc
(bad)
aam
sti
mov
stos
mov
jle
fxch
sbb
hlt
or
icebp
xchg
jne
mov
scas
adc
movs
mov
nop
push
xor
aas
sti
or
and
outs
iret
rsm
out
dec
outs
fsubr
test
add
js
or
xor
xor
mov
mov
fs
add
add
arpl
fisttp
and
retf
mov
xchg
xor
push
inc
jno
into
sahf
retf
xlat
aad
inc
sbb
(bad)
daa
or
mov
push
fsub
out
aas
cmp
or
mov
jecxz
add
call
pushf
dec
sub
popa
or
xchg
dec
xor
xlat
or
int3
sbb
cmp
into
jle
jns
adc
pop
aam
xchg
mov
sub
stc
push
mov
repz
std
or
inc
mov
push
iret
sbb
dec
cmp
neg
pop
scas
push
retf
and
adc
shl
dec
or
mov
sbb
xor
cmp
dec
pop
call
xchg
add
add
xor
fsub
cld
daa
(bad)
cld
sbb
cmp
dec
mov
cmp
mov
pop
mov
pop
popa
(bad)
jns
cld
add
add
jae
adc
stc
aaa
in
lods
and
xchg
mov
xor
mov
pop
xor
mov
test
mov
out
outs
mov
in
jnp
sbb
ds
fsubr
mov
jnp
lods
mov
or
inc
xchg
outs
gs
adc
test
dec
(bad)
jmp
sbb
jb
cmp
push
pop
or
popf
mov
mov
adc
stos
out
repnz
mov
push
psubusb
pop
hlt
pop
fsubr
xor
lods
(bad)
jge
push
mul
out
adc
mov
jb
es
xchg
sub
outs
mov
xchg
test
cmps
inc
and
repz
xor
int3
ins
and
das
scas
rcl
push
or
cmp
movs
mov
retf
std
(bad)
jecxz
xchg
pusha
das
or
in
lea
sub
push
je
pusha
aaa
enter
enter
call
loope
repnz
add
and
xchg
movs
xor
xlat
enter
push
mov
add
sub
xchg
mov
test
sbb
cmp
stos
mov
rol
xlat
aaa
fwait
mov
pop
cmp
outs
mov
scas
xchg
lds
fistp
das
push
adc
mov
fisttp
cwde
(bad)
xchg
cwde
dec
fidiv
and
and
fnstenv
sbb
sbb
std
push
adc
mov
pop
scas
cmp
mov
push
sbb
lock
mov
or
mov
adc
lock
sbb
adc
fst
bound
push
inc
push
or
ins
or
aas
and
(bad)
lock
rcr
aaa
enter
inc
xor
ret
or
jns
test
xor
add
ds
int
fmul
inc
xchg
inc
call
push
rol
xchg
mov
in
and
push
imul
jg
aad
sub
idiv
and
and
push
mov
mov
adc
push
xchg
and
clc
into
imul
mov
aam
(bad)
retf
mov
xor
(bad)
dec
in
xor
cmc
out
mov
jae
movs
lea
dec
push
sbb
pop
jmp
aas
push
jmp
and
mov
sbb
push
les
mov
inc
les
arpl
or
inc
scas
fiadd
dec
stos
dec
jle
sub
inc
and
jmp
sar
cdq
add
push
jmp
int3
push
ins
and
xor
and
sub
(bad)
xchg
(bad)
jmp
aad
js
jp
out
imul
or
cld
repnz
mov
popf
xchg
fistp
out
cdq
jo
jns
pop
leave
mov
test
inc
call
push
push
mov
add
jb
adc
inc
push
lds
dec
out
(bad)
mov
xchg
sbb
mov
ret
ss
stc
pop
adc
loop
out
ja
add
fstp
dec
mov
jl
xor
mov
inc
test
loope
repz
jae
or
add
push
sbb
in
movs
aaa
jmp
inc
aad
retf
aas
push
jle
ret
div
sbb
xchg
pusha
mov
and
test
daa
mov
adc
cwde
cs
mov
ret
aam
xlat
inc
lods
cmp
xchg
mov
xchg
pop
clc
pop
and
repnz
retf
std
mov
pop
jmp
add
pop
xor
stos
or
(bad)
ret
dec
xor
cdq
jb
mov
add
cwde
movs
xlat
jno
push
or
mov
jle
mov
dec
shld
push
daa
dec
jno
adc
out
cmc
enter
int3
add
pop
ins
cmp
hlt
pop
fdivr
xor
cld
rcl
and
sbb
cdq
inc
pop
mov
ja
xor
mov
in
out
inc
xchg
push
and
push
arpl
sbb
lea
pop
loop
jmp
push
mul
cmp
imul
xor
xor
js
jmp
lods
push
mov
pop
mov
xlat
xchg
dec
pop
and
push
fmul
sub
loop
out
mov
or
ret
shl
sbb
jg
adc
mov
mov
popf
in
jp
int3
inc
aam
add
(bad)
fldcw
outs
in
push
jne
push
cmc
push
loopne
aam
addr16
mov
mov
ss
pmulhuw
dec
repz
outs
imul
ins
jp
or
cs
mov
mov
mov
and
adc
out
call
stos
fild
dec
or
or
ret
and
int
aaa
std
fld
mov
pop
scas
repnz
add
outs
rcl
jbe
scas
add
and
dec
adc
pop
retf
jns
mov
or
dec
jmp
cdq
cmp
sub
jbe
dec
jl
nop
aad
sub
mov
es
daa
mov
add
xor
pop
test
sahf
push
scas
add
cmp
(bad)
fcmovnb
leave
(bad)
or
inc
xchg
rol
pop
outs
cbw
out
mov
in
int3
(bad)
and
add
retf
outs
pop
pop
loopne
cmp
stos
lea
sbb
aad
pusha
out
sar
iret
imul
or
pusha
sub
pushf
sti
push
push
in
jbe
jno
cli
das
test
push
stos
inc
(bad)
xchg
mov
fs
and
inc
push
push
or
int3
arpl
add
stc
dec
sub
jge
lods
int3
jne
push
retf
iret
or
test
aam
push
mov
and
loope
cs
shl
xchg
call
push
ds
scas
and
das
mov
fcmovb
cmp
(bad)
sub
arpl
cld
pusha
into
fcmovnbe
dec
jmp
dec
xlat
ja
mov
and
and
mov
lahf
and
xchg
ss
mov
cmp
stc
sbb
pop
cs
rcr
sub
fcomp
lahf
loope
jl
in
je
push
pop
aas
ret
pop
jno
push
pushf
ret
mov
jmp
mov
cmp
jae
popf
pop
icebp
dec
ins
clc
jno
lea
mov
dec
cli
hlt
xchg
push
mov
dec
imul
outs
push
pushf
outs
out
jmp
pop
jo
leave
mov
push
cmp
mov
fsub
adc
mov
mov
(bad)
in
add
(bad)
ror
xor
movs
lahf
push
fs
jge
jne
xchg
mov
sahf
mov
pop
xor
(bad)
shl
fwait
lds
popf
push
push
push
(bad)
inc
cld
and
sahf
pop
add
rol
call
test
es
mov
mov
pushfw
or
ds
call
add
xor
(bad)
stc
jecxz
rol
stos
fwait
inc
sub
mov
int
loope
push
mov
dec
dec
push
cs
fst
imul
cmp
jecxz
fimul
daa
enter
es
or
ficomp
ins
push
shr
cs
pushf
call
and
xchg
mov
mov
sbb
into
ins
push
cmp
es
jg
mov
sub
(bad)
imul
mov
sar
add
sub
(bad)
xor
mov
shr
sub
aaa
xchg
sar
jnp
cmps
lahf
and
sbb
call
xchg
push
mov
jae
icebp
in
nop
inc
cs
xchg
out
mov
(bad)
jmp
in
outs
xor
jge
cwde
cmp
mov
in
pop
repnz
inc
fucomip
dec
les
mov
dec
je
dec
getsec
movs
je
ret
pop
mov
movs
mov
retf
fwait
pop
sbb
popa
fst
add
or
hlt
ins
push
mov
push
(bad)
or
gs
mov
push
popa
jno
mov
and
mul
jno
test
sti
adc
mov
jmp
ret
in
mov
push
retf
sub
add
imul
shld
(bad)
inc
cmps
cmps
push
jmp
mov
push
pop
idiv
std
xor
push
cmp
outs
pusha
jmp
cmp
xchg
dec
mov
jne
inc
and
scas
add
jecxz
xor
call
or
mov
mov
fdiv
jg
fisttp
mov
mov
mov
mov
fsub
adc
adc
aad
push
lahf
jge
dec
jnp
or
mov
sti
rol
mov
dec
mov
push
mov
stos
int
xlat
pop
add
mov
je
add
es
dec
dec
aad
pop
push
sub
push
inc
lods
hlt
pop
or
inc
leave
jo
pop
retf
jle
jle
add
push
retf
or
outs
push
and
inc
jle
inc
sub
xchg
cmps
das
dec
and
movs
enter
ret
or
js
xchg
mov
pop
pusha
push
xchg
push
aad
test
(bad)
cmp
add
int3
pop
ins
cs
add
(bad)
mov
out
js
or
lea
test
xchg
hlt
pop
sub
leave
fdiv
push
mov
mov
dec
mov
cdq
std
jmp
outs
sub
mov
or
dec
rcl
loopne
and
pop
es
adc
sub
lods
into
jmp
xor
and
hlt
or
ror
mov
in
mov
fnstsw
sub
repz
out
or
push
mov
pop
cmp
test
(bad)
push
xor
scas
int3
push
jae
jmp
push
mov
call
dec
test
dec
movs
call
pushf
fs
test
push
out
dec
xchg
push
jmp
jns
(bad)
sub
push
cmp
fld
out
(bad)
or
xchg
dec
xchg
(bad)
push
fneni(8087
cli
xor
mov
or
jp
mov
push
xchg
push
loop
jg
mov
xchg
sbb
cmps
fs
inc
inc
and
cwde
cwde
arpl
sbb
mov
ror
js
adc
sbb
jp
clc
gs
fst
sub
(bad)
nop
push
jae
dec
cmp
sbb
mov
mov
cmp
pop
pop
into
shl
dec
lds
cwde
push
loope
fs
out
xchg
add
seta
in
(bad)
(bad)
cmp
xchg
dec
adc
jle
xlat
div
(bad)
mov
gs
xchg
bound
cmp
mov
mov
adc
push
push
aaa
sar
inc
dec
push
stc
imul
and
add
aam
adc
jecxz
cmc
sub
xchg
mov
mov
je
or
add
pop
mov
dec
fnstcw
dec
sti
push
xchg
hlt
les
cmp
dec
(bad)
daa
xor
ins
adc
mov
jno
lea
popa
or
fsubr
(bad)
out
adc
xor
iret
jmp
push
push
push
jae
cmp
jp
ror
ins
mov
mov
sub
push
jmp
(bad)
repz
dec
jo
jmp
sub
in
xchg
cli
push
inc
pop
pavgb
mov
shr
dec
and
nop
mov
adc
jmp
cwde
add
les
cmp
jae
cld
pop
in
and
lods
rcr
pop
bound
gs
adc
adc
sbb
loope
lds
imul
jmp
popa
aam
cdq
les
cld
mov
outs
mov
pop
es
sub
xor
fs
push
shl
pushf
mov
jl
jnp
(bad)
xchg
add
xchg
fcomp
inc
jle
dec
ins
iret
mov
push
loop
inc
lods
jno
jmp
add
mov
xchg
or
iret
jno
xchg
imul
cmps
jno
jne
adc
cmp
shl
test
gs
xor
mov
into
das
mov
addr16
inc
ja
cmp
jecxz
lea
jmp
sub
lea
lods
ja
out
inc
and
adc
sub
lods
xchg
xchg
fmul
(bad)
bound
dec
leave
mul
or
pop
xor
in
fs
cmp
pop
stos
xor
sub
jecxz
into
mov
arpl
push
sbb
retf
jl
popa
or
call
sub
sub
sbb
aad
sar
call
js
mov
out
sbb
mov
retf
stos
xor
mov
xchg
xor
inc
add
ins
imul
aas
inc
rcl
inc
xchg
in
aaa
sub
(bad)
fwait
pop
mov
jne
mov
xor
mov
inc
jno
ins
aad
push
jnp
cmp
add
xchg
out
sub
int3
rcl
mov
out
inc
jns
loop
adc
into
xchg
push
mov
jo
and
pop
mov
(bad)
jmp
and
sub
fisttp
and
out
jmp
mov
mov
movs
stc
xchg
push
out
mov
add
mov
xchg
in
jecxz
(bad)
sub
stc
mov
and
jecxz
retf
movs
pop
(bad)
dec
pop
outs
out
mov
repz
ins
mov
jae
fcom
fwait
pop
fsubrp
push
add
ins
mov
mov
fiadd
scas
adc
jb
out
cmp
cmp
push
push
cld
cwde
in
jmp
loop
cli
loop
mov
mov
gs
inc
inc
mov
test
mov
(bad)
leave
popf
icebp
inc
out
mov
ds
sub
out
sahf
push
jne
and
dec
lock
mov
repz
in
adc
lahf
push
jecxz
push
jnp
out
mul
hlt
inc
outs
call
cwde
cmp
(bad)
call
mov
not
jmp
lods
xchg
jmp
scas
cmp
aaa
xchg
add
cmp
les
add
cs
in
imul
ins
add
outs
cmp
aas
das
retf
mov
enter
adc
clc
mov
in
cmp
pop
int3
pusha
and
inc
xor
or
sar
(bad)
bound
cmp
int
and
dec
cmp
xor
iret
sub
xor
cmp
jge
ficomp
cld
xor
data16
(bad)
int
mov
mov
pop
das
rcl
lods
and
push
xchg
rcl
call
hlt
and
call
cmp
add
in
xlat
lods
(bad)
es
cwde
xchg
sub
push
inc
pop
(bad)
jno
adc
jo
enter
jne
sti
xchg
pusha
sbb
nop
xchg
test
fsubr
and
cmp
nop
scas
xor
push
xchg
movs
hlt
cld
retf
or
stos
mov
sub
(bad)
jmp
mov
adc
or
push
dec
cmp
push
aad
aad
(bad)
mov
dec
mov
mov
add
sbb
inc
and
xchg
fcom
dec
lds
mul
dec
fst
movs
arpl
xchg
stc
cmc
inc
test
in
cmp
xor
outs
mov
jge
and
xchg
fwait
add
xor
into
daa
and
mov
sbb
(bad)
inc
mov
jne
stos
mov
jge
ss
cwde
sbb
mov
scas
jo
sbb
pop
sub
dec
mov
les
add
sti
add
bound
clc
or
xor
sbb
pop
inc
pop
inc
add
sub
ja
fistp
lods
loopne
retf
pop
mov
fwait
sbb
xchg
add
(bad)
shr
icebp
popa
fimul
ds
mov
sti
mov
xchg
sbb
jmp
es
pop
mov
jo
adc
aas
sbb
test
dec
mov
dec
ds
outs
push
adc
(bad)
out
je
not
stos
imul
lods
sti
add
test
pop
leave
inc
push
push
or
rol
xchg
aas
mov
xchg
arpl
addr16
icebp
in
mov
pop
ins
xchg
mov
pushf
inc
repz
ss
or
(bad)
xor
mov
(bad)
cmp
lods
fisub
mov
clc
fdivr
adc
or
or
push
rcl
dec
inc
in
(bad)
mov
mov
jns
aam
lea
sub
mov
pop
jg
mov
stos
adc
arpl
pop
mov
push
jbe
adc
(bad)
xchg
fcmovb
(bad)
call
push
das
cmp
mov
and
jmp
enter
dec
aam
rcl
and
xor
arpl
hlt
push
mov
add
mov
sub
cld
nop
js
sbb
adc
jmp
cmp
in
xchg
add
add
hlt
jo
iret
inc
cld
xor
xor
outs
sub
cmp
lods
mov
jo
dec
mov
push
sbb
fcomp
pushf
and
gs
test
sbb
jmp
in
adc
(bad)
and
test
pop
pop
in
test
adc
push
cdq
dec
rol
adc
in
ss
iret
jp
inc
idiv
jbe
fwait
(bad)
cmps
in
ret
sbb
(bad)
cmp
into
cmp
mov
lahf
or
dec
mov
icebp
daa
xchg
dec
push
(bad)
mov
push
mov
mov
mov
jne
je
out
jbe
call
jecxz
ret
in
mov
nop
mov
in
sbb
cmp
out
adc
mov
pop
or
or
inc
gs
xor
pop
js
jge
aas
loope
xchg
(bad)
loope
push
outs
sub
outs
jmp
cmp
scas
lahf
mov
arpl
loopne
push
adc
add
stos
push
fnstsw
and
jo
push
pop
(bad)
pop
sbb
scas
push
push
dec
test
and
cmp
mov
xchg
jbe
es
stos
pusha
push
dec
shl
out
leave
xor
push
jecxz
sti
jns
xor
ds
push
pop
add
push
imul
out
cwde
mov
and
lock
mov
mov
push
and
mov
fld
loopne
push
jmp
test
mov
xchg
inc
mov
cmp
xor
xchg
cmp
xchg
popa
and
sub
das
mov
inc
jg
ret
mov
cmps
pop
int3
mov
pop
cmp
retf
sub
loop
cli
xlat
std
push
arpl
loope
jmp
rol
aad
mov
fnstenv
push
popa
test
xor
sub
cmp
icebp
out
mov
rcr
mov
adc
clc
bound
add
jns
jmp
jmp
ins
(bad)
das
cmp
dec
repnz
cdq
xor
fsub
inc
push
or
xchg
call
jbe
sbb
push
jecxz
dec
dec
push
out
and
xor
inc
push
movs
mov
jae
push
fild
mov
retf
mov
(bad)
pop
in
sbb
dec
test
cli
fucomip
xchg
mov
jns
js
jmp
adc
pop
adc
xor
daa
add
xor
shl
jo
fmul
nop
jmp
ds
ins
ror
sub
jne
mov
push
fs
sub
inc
lods
push
stc
std
sbb
mov
and
leave
add
jnp
add
push
test
rcl
sbb
jb
cld
adc
xchg
add
xlat
push
xchg
xor
iret
mov
mov
sub
call
or
out
mov
into
rcr
cmc
ins
cmp
push
or
ins
jge
out
mov
cs
mov
movs
fisub
cmp
pop
cmp
icebp
dec
es
hlt
inc
mov
pusha
xchg
cmps
pop
xor
lock
cli
jp
cld
retf
add
dec
pop
xor
in
jmp
outs
push
xor
jns
mov
fwait
sub
push
adc
xor
clc
jmp
pop
add
lods
sub
jg
pop
jno
push
pop
mov
call
cmc
test
jle
in
fadd
imul
add
test
cmp
aas
inc
xor
push
(bad)
sub
mov
pushf
push
ss
push
xlat
xchg
and
retf
pop
das
dec
and
mov
cmp
mov
inc
adc
mov
dec
sbb
(bad)
jnp
jp
es
jno
mov
mov
stc
jae
or
jmp
mov
ins
ss
cmp
and
popa
int3
jmp
retf
pop
inc
pushf
aam
xor
xchg
out
das
mov
or
sbb
push
iret
aaa
push
mov
std
mov
cmps
aas
or
test
inc
inc
mov
and
xor
icebp
sahf
call
cwde
imul
push
cli
outs
add
hlt
retf
stc
shl
jmp
adc
xchg
mov
imul
cmp
inc
pop
retf
es
push
dec
popa
retf
sbb
adc
mov
dec
mov
jbe
pop
cmp
in
dec
push
ret
icebp
or
sbb
xchg
mov
je
jae
dec
and
xlat
inc
ds
mov
mov
pop
and
retf
and
stc
pop
stos
loop
in
pop
add
call
iret
les
adc
inc
ret
jns
jmp
in
pop
sbb
loop
xor
fld
or
rcr
mov
(bad)
out
int3
and
rcr
mov
cmp
je
jne
push
adc
inc
and
ja
test
xor
jl
sbb
sahf
in
lahf
nop
xchg
mov
fdivp
mov
and
xchg
push
int3
add
mov
cmp
jo
sub
mov
pop
stos
sbb
addr16
movs
adc
xchg
xchg
or
add
push
bound
sbb
sti
or
int3
loopne
dec
into
out
jnp
enter
inc
rcl
sbb
loop
jns
cld
mov
movs
cmc
adc
pop
sbb
cmps
mov
cmc
and
dec
and
or
aam
mov
and
push
mov
leave
call
test
clc
test
xor
dec
(bad)
idiv
shr
clc
and
(bad)
jl
push
push
arpl
test
and
xchg
retf
retf
adc
outs
and
fs
fisubr
lds
mov
adc
jno
add
mov
shl
jle
push
(bad)
iret
push
shl
mov
jno
cwde
dec
pop
add
movs
out
test
push
loopne
aam
and
repnz
sub
mov
pop
jno
mov
adc
jle
cmp
(bad)
cmp
(bad)
(bad)
jmp
adc
ss
mov
bound
mov
clc
cmps
fs
mov
movs
into
movs
out
push
dec
mov
mov
shr
sbb
mov
mov
sub
mov
sar
mov
dec
stos
or
adc
add
jne
je
mov
xor
iret
inc
lods
bound
retf
dec
cmp
sbb
test
xchg
sub
loop
inc
addr16
idiv
mov
cmp
fimul
cmp
or
add
lods
adc
jo
sbb
(bad)
mov
ds
adc
adc
int3
scas
les
jecxz
push
scas
sbb
mov
in
mov
jnp
rol
test
push
test
cdq
fnsave
stos
pusha
jg
xchg
xor
call
push
pop
xor
mul
push
div
aad
mov
push
aam
in
push
das
je
xchg
mov
enter
shl
mov
addr16
fcmovbe
scas
movs
gs
cmp
and
ret
movs
xchg
mov
xor
jge
mov
jb
xor
xchg
jnp
inc
push
call
pop
mov
ret
scas
inc
sub
xchg
fst
cli
mov
fwait
mov
jge
inc
mov
ret
inc
in
bswap
retf
std
dec
or
cmp
add
or
jb
pop
sbb
or
(bad)
push
jl
pop
hlt
mov
xchg
ins
xchg
and
int
mov
scas
dec
cmps
mov
ins
sbb
or
push
into
sub
sbb
and
add
inc
sub
out
lock
adc
test
inc
stc
pop
gs
mov
ins
rol
(bad)
pop
sbb
push
inc
cli
imul
cdq
mov
add
loopne
xor
aad
hlt
sbb
bound
inc
add
leave
adc
xchg
mov
(bad)
fcom
pop
out
popa
test
add
jmp
pushf
sbb
clc
mov
fistp
aas
adc
ds
mov
mov
dec
je
or
callw
pop
inc
push
(bad)
push
sahf
add
sbb
mov
shl
mov
jecxz
mov
sbb
adc
hlt
popa
jl
sub
cwde
mov
call
ins
xchg
xor
mov
cmp
lahf
into
push
nop
dec
jo
xchg
mov
lods
gs
cmp
scas
test
sub
sbb
into
ret
mov
push
in
in
cwde
ins
xor
addr16
imul
fild
js
add
sbb
adc
imul
je
stos
pop
out
push
addr16
push
mov
in
pushf
retf
imul
or
cdq
inc
push
fyl2xp1
(bad)
ins
fdiv
mov
xlat
fsub
jmp
jp
int3
sbb
mov
or
mov
sar
xchg
js
jns
ret
pop
(bad)
jne
scas
and
or
lds
inc
sbb
or
repz
and
pop
inc
pop
inc
adc
xor
pop
xor
and
pop
xlat
mov
rol
add
cli
sub
inc
lds
and
and
jno
xchg
leave
js
das
mul
jmp
dec
leave
mov
xor
mov
sub
add
mov
bound
icebp
xchg
xor
(bad)
adc
cmp
sbb
cmp
cmp
mov
xor
pop
xchg
mov
inc
mov
dec
mov
scas
into
ins
aaa
mov
(bad)
mov
jle
leave
test
push
cdq
and
aam
mov
outs
test
sbb
mov
call
iret
imul
push
fucomi
mov
outs
or
(bad)
(bad)
xor
pusha
pop
cmc
aaa
mov
dec
in
rcl
retf
push
jge
xor
ret
add
jp
and
adc
push
jbe
sub
and
xchg
cmp
push
push
sti
pop
xchg
shr
fidivr
mov
push
mov
hlt
lds
sub
push
ret
add
mov
test
push
(bad)
xor
loope
mov
adc
push
mov
mov
stos
xor
fild
mov
inc
xchg
fld
mov
(bad)
rol
and
retf
cmps
inc
push
add
test
mov
inc
and
add
mov
mov
pop
xlat
test
test
bound
in
shr
rcr
jbe
dec
call
pop
or
fldcw
fwait
aaa
(bad)
imul
push
fiadd
fsub
(bad)
add
sbb
std
les
pop
bound
xchg
xchg
dec
ja
fnstsw
sbb
push
clc
(bad)
std
push
gs
xchg
call
push
cli
into
mov
cs
enter
stos
in
mov
in
sbb
sbb
xor
push
mov
sub
das
or
in
sub
into
mov
add
dec
mov
pop
out
push
mov
push
mov
ja
aam
fmulp
jecxz
xor
sub
pop
xor
hlt
add
sbb
push
xchg
cmps
test
cs
and
sub
xor
adc
lock
movs
xchg
daa
test
jmp
mov
lea
push
dec
mov
sub
add
xchg
xchg
fidivr
add
dec
cmp
push
in
pop
add
mov
sub
call
and
fld
aaa
xchg
in
mov
and
push
dec
scas
pushf
jbe
dec
mov
push
imul
push
cld
daa
mov
pop
repz
bnd
and
and
cmp
mov
test
bound
and
and
push
pusha
scas
jmp
dec
(bad)
aam
lds
dec
jl
ins
mov
push
inc
test
aam
ds
sub
mov
outs
pop
daa
sbb
mov
arpl
xchg
test
jne
pop
xchg
lods
ret
mov
imul
pop
je
repz
das
pop
enter
rcr
mov
xor
test
and
jo
or
add
fisubr
jmp
imul
inc
jge
and
and
aam
aaa
dec
repz
mov
shl
and
xchg
int
mov
or
mov
idiv
xor
aam
or
sub
push
xor
xchg
je
inc
sets
int3
retf
mov
leave
and
sub
sbb
retf
mul
mul
pop
je
adc
sub
in
and
nop
out
stos
sub
(bad)
mov
ins
mov
xchg
cmp
stc
or
outs
repz
lea
push
inc
sbb
xchg
mov
xlat
jnp
jno
adc
lock
movs
fiadd
mov
jmp
(bad)
not
(bad)
pop
jl
or
inc
int3
cmp
lds
rol
jge
outs
pop
xchg
ss
add
push
sbb
pop
loop
pop
add
js
js
fwait
dec
mov
or
adc
mov
rcl
sbb
push
mov
scas
and
daa
scas
push
lods
repz
cmps
cld
nop
pop
jecxz
fmul
inc
imul
dec
imul
addr16
pop
call
dec
jl
leave
mov
sub
(bad)
jmp
pop
mov
mov
push
push
fwait
jbe
fld
sar
inc
add
mul
xlat
(bad)
sub
ins
jecxz
sbb
push
sahf
cmp
cmps
xchg
ja
test
sbb
mov
push
pop
aaa
mov
dec
dec
stc
jmp
icebp
(bad)
movs
push
aaa
dec
or
sahf
and
lods
mov
jmp
ficom
fs
or
retf
pop
pop
mov
in
push
jae
mov
jnp
sbb
xchg
(bad)
pop
mov
mov
add
jbe
adc
popf
xor
inc
jbe
addr16
jns
jge
inc
sahf
pop
data16
and
(bad)
ficomp
push
ja
int3
data16
out
sbb
lds
shl
pop
xor
pusha
imul
aad
jecxz
sahf
pop
into
enter
push
mov
or
inc
fwait
pop
or
nop
shr
jb
je
cmp
not
fdiv
das
add
ficomp
stos
fcom
imul
jb
aam
loope
pop
outs
pop
xor
push
js
daa
dec
pop
sub
push
gs
or
sub
push
int3
mov
out
dec
inc
cli
popf
pop
mov
cmc
add
sub
or
inc
dec
ds
cld
xlat
cmp
mov
jmp
repz
(bad)
arpl
xchg
mov
mov
add
fmulp
imul
inc
cwde
in
ins
or
imul
ins
xchg
in
ss
and
fldcw
shl
arpl
or
ficom
aam
add
mov
push
fisttp
cmp
rcr
sahf
push
inc
sub
xor
sbb
dec
shl
adc
bound
xor
mov
js
inc
sub
inc
test
inc
pop
pushf
xchg
das
pop
adc
aam
jmp
ds
pusha
inc
jns
outs
into
sub
adc
cmp
mov
std
mov
push
scas
push
fdiv
adc
mov
cmps
test
pusha
jne
mov
imul
mov
fidiv
cmp
or
dec
dec
cmp
sbb
or
jmp
clc
sbb
cdq
push
push
(bad)
je
add
imul
and
pop
add
and
stos
les
inc
lock
pop
fs
push
test
cmp
aad
push
adc
jbe
loop
inc
dec
leave
lds
lds
mov
push
jo
(bad)
(bad)
and
mov
inc
adc
mov
jno
or
push
ret
shl
xor
jae
xchg
(bad)
mov
sbb
sub
mov
xchg
fwait
or
dec
sub
ins
fisub
fstp
jne
pop
les
xchg
ins
in
aam
mov
imul
push
mov
push
push
sub
mul
(bad)
imul
xchg
retf
inc
fsubp
xor
push
aas
mov
aad
and
scas
mov
xor
sub
in
aas
jg
repz
and
cwde
es
popa
je
xchg
push
lds
out
inc
push
cmp
jb
pop
jp
scas
sub
mov
pop
pop
pop
js
lock
or
movs
mov
lods
mov
jb
cld
or
bound
cli
and
bnd
inc
mov
pop
pop
push
push
and
mov
rcr
fisub
mov
call
mov
or
pop
push
xchg
je
call
jae
cmp
test
ss
test
jl
jg
into
ror
mov
push
shl
daa
cmp
sbb
fisub
inc
sbb
lahf
mov
fstp
mov
into
scas
mov
test
inc
push
cmc
add
pop
jg
mov
sub
xor
mov
or
xchg
mov
mov
push
and
(bad)
mov
dec
lds
adc
into
icebp
popa
add
sub
adc
xor
outs
ins
adc
out
mov
fisttp
int
sbb
test
movd
fadd
add
outs
mov
(bad)
mov
lods
xlat
xor
cmps
add
xchg
popa
mov
ds
fwait
xchg
jle
pop
adc
jnp
(bad)
mov
and
pop
mov
or
jbe
mov
and
test
inc
ror
loop
jg
dec
mov
icebp
loope
sub
(bad)
es
pop
movs
or
outs
xor
sti
xchg
ficomp
xchg
jmp
sbb
dec
jp
stos
popf
jge
jecxz
add
mov
xor
dec
aam
arpl
add
mov
mov
xchg
or
pop
addr16
mov
adc
out
xchg
out
movs
jl
inc
xchg
movs
dec
push
in
movs
enter
iret
push
mov
stc
jl
jmp
leave
sahf
push
jmp
cmp
test
repnz
ret
sti
popaw
adc
jl
shr
xchg
push
lea
push
cdq
xchg
data16
(bad)
lea
push
movs
shl
dec
cmp
bound
test
cmp
xchg
fcomip
into
mov
mov
in
ins
shl
push
mov
gs
xor
inc
mov
xor
xor
pushf
iret
not
push
fcomp
and
in
rcr
rol
cli
gs
or
xor
sbb
(bad)
mov
xchg
ror
xchg
fst
mov
les
pop
aaa
or
sahf
cmc
inc
hlt
or
sbb
fidiv
pop
push
repnz
cmp
in
add
fs
cmp
sar
fimul
sub
cmc
call
pusha
cmps
gs
cwde
sahf
enter
(bad)
dec
jmp
cmps
sti
shr
out
inc
ret
(bad)
lahf
mov
dec
dec
dec
add
outs
(bad)
arpl
ja
aam
jle
mov
rol
retf
add
mov
(bad)
lods
outs
out
sub
(bad)
dec
hlt
add
(bad)
mov
dec
adc
add
pop
fisubr
int3
scas
cld
and
add
shl
(bad)
outs
aad
xor
shl
xor
cmps
push
stc
pop
mov
fnstsw
inc
push
repz
call
popa
xchg
ficomp
mov
gs
lock
out
jbe
call
push
adc
stos
inc
jp
xchg
mov
mov
aad
stc
test
mov
cli
imul
inc
ss
ffree
sbb
cwde
movs
mov
outs
es
ins
or
rcl
pop
fstp
retf
mov
rcl
push
dec
je
jmp
or
in
mov
cli
test
xlat
inc
inc
push
icebp
loope
cdq
sub
mov
mov
mov
scas
cld
ja
hlt
mov
out
dec
pop
(bad)
jnp
mov
and
fidivr
or
pop
mov
adc
add
xlat
scas
(bad)
xor
xor
pop
xchg
jne
jp
dec
adc
inc
sbb
out
adc
repnz
out
rcl
cmp
movs
and
pushf
push
inc
adc
sbb
or
mov
jns
cli
lock
add
push
add
mov
loop
and
cmp
call
sar
push
add
(bad)
aas
popf
xchg
mov
sub
jmp
jl
mov
xchg
mov
xor
aas
inc
jmp
adc
cmc
cmp
jecxz
xchg
xchg
mov
nop
jns
and
loope
xchg
es
repnz
shl
mov
dec
fstp
daa
mov
cs
sub
mov
xchg
sub
lea
gs
xor
(bad)
fiadd
add
scas
inc
sbb
jmp
add
test
mov
ret
lods
mov
dec
inc
shufps
in
pushf
leave
adc
scas
mov
aad
sbb
fs
or
xchg
mov
icebp
leave
jno
mov
pop
dec
ror
jle
push
fld
adc
test
cld
push
ja
xor
ror
sbb
pop
fcmovne
add
mov
pusha
int3
movs
xchg
mov
int3
mov
mov
int
in
mov
ficom
rol
cmp
sbb
in
(bad)
call
adc
adc
mov
ret
push
maskmovq
movs
xlat
ffreep
or
(bad)
and
daa
jb
in
jecxz
mov
(bad)
(bad)
sub
ds
jg
lods
dec
pop
aas
sub
repz
mov
mov
dec
pop
rcl
xor
xchg
into
scas
sar
cmps
xchg
jo
pop
shl
jne
sbb
inc
movs
dec
sub
ins
adc
in
jae
cld
imul
sbb
popf
push
pushf
fnstcw
in
sahf
jb
dec
mov
cs
sub
xor
sbb
fs
push
(bad)
sbb
ret
pop
xchg
(bad)
cli
jle
jle
not
xchg
dec
xchg
mov
outs
fcmovnu
sbb
push
cmc
inc
dec
and
mov
or
or
enter
(bad)
repnz
and
xchg
inc
stos
mov
jecxz
stos
mov
jmp
(bad)
fsub
sbb
loope
and
mov
jb
push
lods
pop
or
xor
mov
shl
cld
(bad)
outs
stos
mov
scas
mov
pushf
push
aas
loop
fmul
xor
aad
icebp
retf
push
mov
xchg
jp
dec
mov
jb
sbb
icebp
mov
into
or
sbb
shr
aad
(bad)
in
jns
daa
push
inc
cmps
fiadd
mov
vmovupd
push
push
jbe
add
out
or
mov
pop
mov
repnz
fwait
sub
sub
jle
cs
les
xchg
mov
rcr
push
sbb
xor
int3
stos
ret
mov
and
rol
addr16
xor
jmp
jae
or
dec
and
cld
(bad)
stc
mov
sbb
frstor
xor
mov
mov
xor
pop
ja
pop
mov
fstp
retf
mov
out
mov
xchg
test
mov
dec
add
clc
adc
push
sub
mov
sbb
xor
mov
lods
lods
div
jmp
push
mov
sbb
or
das
and
sahf
sbb
pop
inc
mov
lahf
fs
adc
jnp
xchg
retf
add
adc
cmp
xor
(bad)
mov
mov
jg
call
shl
and
stos
mov
and
pop
pushf
sbb
dec
fwait
(bad)
stos
adc
jne
jg
or
pop
xchg
stos
aad
dec
rcl
pop
xchg
imul
mov
xor
fldcw
lods
pop
mov
xchg
movs
inc
gs
out
test
les
pop
xor
mov
mov
(bad)
das
or
clc
mov
sub
inc
jb
pusha
sbb
mov
sahf
test
and
outs
pop
mov
mov
rol
pop
adc
push
sbb
repnz
dec
jns
ror
cmp
sbb
into
sti
cli
jmp
sub
fwait
sub
test
push
ret
in
mov
cmp
fild
hlt
mov
cs
aas
sub
das
stc
mov
or
mov
sub
jb
leave
movs
inc
mov
movs
xchg
lods
jle
call
add
push
lds
pop
inc
sbb
aas
and
ret
aaa
sbb
xchg
clc
fld
sub
lods
pop
pop
cmovo
pop
nop
fdivr
push
test
js
jp
icebp
sub
fs
in
push
test
adc
adc
pop
push
xor
add
mov
mov
dec
test
ins
add
mov
popf
in
pop
fcmovbe
sbb
sub
push
inc
adc
pop
push
mov
push
mov
push
jp
bound
lahf
sbb
adc
loop
xor
pop
jmp
xor
repz
pop
and
xchg
push
fisttp
dec
add
inc
pusha
aad
adc
cmp
scas
test
pop
leave
xor
mov
mov
inc
int3
ds
loope
(bad)
out
(bad)
leave
retf
dec
stc
or
xchg
mov
inc
(bad)
mov
push
into
popf
cwde
xchg
jp
movs
ss
int3
mov
jg
or
cmps
xchg
cmp
inc
jmp
movs
cmp
sbb
pop
jae
ret
(bad)
adc
xchg
data16
inc
idiv
jl
dec
movs
inc
mov
leave
mov
pop
sbb
and
push
arpl
or
push
sub
inc
or
mov
movs
(bad)
add
xor
sub
test
aam
inc
retf
jmp
inc
aas
rcl
ins
repnz
xor
inc
cli
and
ins
xchg
adc
jbe
pop
aad
mov
sbb
xchg
jle
imul
inc
dec
jl
fistp
sub
(bad)
jbe
gs
xor
(bad)
repz
test
xchg
loop
adc
xchg
adc
cmc
sub
or
xchg
jno
mov
push
cmp
ret
aaa
adc
xor
les
mov
dec
cs
jno
retf
and
enter
outs
out
dec
mov
add
and
mov
je
dec
lods
int3
add
shr
adc
sbb
(bad)
stc
aas
xor
loope
jp
push
push
sahf
outs
repnz
cmp
jp
push
and
dec
dec
mov
cdq
imul
dec
adc
ja
dec
ret
and
hlt
scas
adc
movs
(bad)
xor
cwde
fabs
xchg
pop
test
in
sub
sub
outs
adc
xlat
gs
inc
mov
push
and
icebp
sbb
mov
xor
mov
dec
js
dec
mov
enter
mov
mov
sahf
sub
sar
jo
jge
xor
sub
inc
out
stc
cmp
and
pusha
call
daa
push
push
out
ds
fisub
pop
xchg
push
dec
and
pusha
xor
cmc
fs
into
test
lock
adc
test
bound
and
mov
mov
shl
enter
aam
push
mov
push
mov
add
(bad)
mov
jge
or
test
pop
xor
cli
rcl
jge
xchg
cmps
call
data16
jmp
icebp
out
pop
retf
xor
inc
fstp
cmp
fisttp
gs
adc
inc
mov
fsubr
out
xchg
push
adc
outs
ret
sub
test
pushf
shr
cld
mov
inc
cmp
pop
xchg
or
push
fcmovb
and
mov
and
xchg
xor
mov
fwait
repnz
ror
and
mov
add
xchg
or
cmp
push
daa
cmp
rol
and
mov
clc
enter
pop
jl
sub
in
or
enter
call
pop
xor
pop
jnp
add
mov
jmp
aad
sub
push
das
or
and
push
inc
fdivr
sbb
cmp
outs
ror
iret
xchg
in
xor
adc
fwait
adc
movs
mov
hlt
push
cmp
outs
push
cmp
sub
mov
js
loopne
mov
mov
pop
inc
mov
xchg
sti
int
xchg
xchg
add
cmove
cmc
or
ret
and
push
pop
sub
popf
call
pop
mov
out
pop
xchg
pop
loopne
popf
inc
add
test
call
inc
std
inc
mov
jmp
loop
fidiv
in
aad
into
aad
push
or
xchg
cwde
mov
fimul
add
fdivp
adc
cmc
jl
movs
sbb
(bad)
mov
and
push
push
repz
outs
data16
add
mov
sub
mov
cwde
xor
pop
jb
sub
in
lock
imul
sub
(bad)
mov
repnz
adc
xchg
xor
add
out
sub
mov
test
sub
neg
adc
jns
or
outs
ror
repnz
rcr
add
pop
mov
push
or
iret
and
ins
mov
adc
push
push
popf
xchg
mov
loop
sub
mov
inc
bound
hlt
pop
mov
(bad)
aam
(bad)
hlt
mov
mov
mov
cmc
mov
cdq
inc
dec
sbb
retf
pop
(bad)
cdq
add
mov
loope
ss
sub
fwait
jmp
jne
cmps
rcr
leave
jne
enter
dec
rcl
mov
in
dec
sbb
fsubr
fcomi
jp
loopne
out
mov
or
dec
nop
gs
jmp
retf
call
or
mov
imul
ficom
mov
dec
retf
mov
cmps
adc
loopne
bnd
pop
xchg
mov
xlat
jnp
xchg
and
outs
pop
jge
jns
repnz
mov
and
mov
std
test
(bad)
cmp
xchg
inc
jno
cmp
cmp
jg
xchg
mov
pop
mov
sbb
push
cmp
arpl
xor
xor
mov
push
dec
repz
(bad)
mov
or
pop
addr16
retf
xor
div
mov
iret
cli
stc
sbb
sahf
shl
cmp
jo
mov
adc
aas
pop
(bad)
fisttp
sahf
xchg
push
int3
gs
mov
xchg
(bad)
jne
adc
sbb
clc
adc
fwait
mov
mov
repz
fidiv
cmps
packssdw
dec
pop
aaa
jb
xchg
mov
leave
sbb
sbb
in
and
cld
aad
sbb
inc
adc
jne
sub
xor
hlt
xchg
ss
fwait
mov
ins
pop
(bad)
fwait
retf
adc
sbb
mov
scas
jne
inc
int3
cli
push
stos
mov
int
test
lahf
icebp
in
ins
lea
jecxz
arpl
push
movs
inc
jp
dec
adc
sbb
(bad)
push
jmp
(bad)
mov
gs
in
pop
bt
jae
loopne
sbb
ficom
xor
imul
xchg
jnp
mov
ss
dec
test
fist
popf
xchg
xor
inc
sub
aas
stos
and
ror
inc
pop
push
push
cmp
fs
pop
test
xor
call
dec
xchg
test
jno
in
dec
aam
xchg
lods
inc
push
lods
dec
popa
cmp
mov
test
repz
jbe
pop
jo
xor
out
mov
shl
push
push
imul
inc
sbb
inc
leave
jecxz
aad
cmp
retf
jnp
aad
shr
mov
call
out
cmp
sbb
push
mul
pop
int
pusha
leave
or
jp
jecxz
ret
jle
je
retf
sbb
sub
repz
cmp
add
or
or
lock
dec
push
cmp
icebp
hlt
xor
sbb
cs
sbb
test
mov
adc
mov
inc
stos
push
push
es
fwait
scas
ins
and
pop
fwait
or
loop
lock
in
pop
dec
mov
cmp
xchg
inc
xor
cmc
fstp
push
xor
out
lods
fstp
mov
and
jo
push
out
add
ins
(bad)
out
dec
(bad)
add
xchg
out
test
sub
ds
icebp
repnz
push
mov
sahf
mov
push
or
call
sbb
mov
inc
leave
add
ds
add
outs
imul
inc
in
xchg
fnsave
adc
movs
pop
sub
jle
cmp
mov
cdq
fstp
test
inc
sub
jmp
lods
out
out
sbb
and
in
jl
or
mov
inc
outs
daa
xor
mov
ret
repnz
add
ds
rcr
mov
mov
fimul
mov
je
stos
xchg
scas
push
and
dec
repz
scas
push
xor
sub
inc
cli
lea
cmp
jge
xchg
add
xchg
jl
push
mov
test
dec
js
rol
retf
push
out
or
adc
dec
sbb
lods
jg
push
jp
cdq
adc
push
inc
dec
push
out
movs
push
xchg
(bad)
test
cwde
das
rol
xchg
fild
pop
sahf
mov
add
test
ss
leave
dec
(bad)
push
xchg
mov
inc
inc
pop
out
lock
sub
(bad)
sbb
inc
or
jmp
(bad)
mov
cld
xor
cs
sub
mov
pop
inc
cmp
les
std
push
add
push
aaa
sbb
ja
inc
dec
jge
or
call
sbb
add
mov
fiadd
scas
dec
jno
add
jae
pop
mov
xor
adc
stos
ds
and
daa
jns
jge
push
cmp
sub
into
pop
cmps
xor
imul
mov
pop
xor
xlat
jnp
xor
mov
adc
push
arpl
adc
je
inc
std
or
push
mov
sbb
ins
ds
call
adc
or
loop
add
push
jl
je
dec
(bad)
and
mov
dec
cs
add
mov
cwde
dec
add
and
outs
and
dec
add
adc
pop
std
sbb
cmps
jns
xor
and
mov
ds
pop
inc
je
push
cmp
fst
and
shl
mov
aam
inc
sar
stos
scas
mov
sub
inc
sahf
sub
sub
and
dec
scas
int3
shr
dec
stos
rcl
sbb
cmps
cmp
sar
jno
(bad)
sub
mov
lods
xchg
sub
or
push
es
icebp
fisub
inc
in
loope
jg
jae
xor
pop
popf
adc
pop
jl
bound
ins
cmp
cli
adc
jg
cmp
mov
jecxz
sbb
stos
jmp
push
jecxz
(bad)
dec
pop
mov
jl
enter
mov
test
lods
or
fs
aad
sbb
in
(bad)
int3
out
pop
sub
shr
add
push
mov
dec
xlat
sbb
test
sub
or
mov
and
mov
mov
hlt
xor
push
pop
cmc
or
sub
dec
(bad)
adc
inc
daa
push
push
icebp
arpl
call
test
push
add
movs
mov
add
cmp
je
jecxz
inc
and
xchg
xchg
fstp
xor
imul
inc
mov
cmp
and
cmp
jl
add
sub
lods
dec
imul
shl
push
in
call
add
ja
sub
dec
push
sub
sar
inc
push
push
in
aaa
stos
movs
push
mov
and
(bad)
cmp
test
dec
dec
push
pusha
addr16
push
(bad)
sbb
jbe
lods
pop
mov
rol
sahf
das
mov
das
arpl
jb
jecxz
jecxz
xor
xor
xor
lock
call
jne
(bad)
mov
add
adc
adc
aad
je
leave
add
test
adc
loop
sbb
imul
dec
mov
mov
jmp
and
mov
(bad)
adc
xor
es
ror
cli
je
inc
jge
ins
mov
ins
cmp
repnz
out
cmps
lea
rol
data16
cli
sbb
pop
imul
loop
pop
sbb
and
scas
retf
leave
das
push
mov
jo
pop
jmp
or
ins
pop
sub
int3
loopne
in
scas
pop
mov
mov
mov
cmp
and
pop
sub
cmp
fnsave
stc
fsubr
cld
add
cwde
aaa
rcr
stos
inc
outs
mov
mov
fidiv
pushf
xchg
stos
test
sbb
out
aam
dec
mov
aad
and
movs
les
fcom
xchg
mov
stos
test
jmp
retf
out
sbb
rol
mov
fnstsw
out
mov
movs
nop
cmp
rol
dec
fdivr
ss
xchg
xlat
sbb
fild
ficomp
mov
mov
int
lds
add
ins
inc
call
leave
or
and
ficom
lea
ss
pop
mov
imul
adc
jl
dec
mov
adc
push
sbb
pop
popf
inc
rcl
xchg
neg
fist
jbe
sbb
call
inc
pop
or
je
rol
add
and
(bad)
sub
xor
(bad)
jae
xchg
dec
in
cs
dec
ja
idiv
sub
mov
pop
push
or
adc
mov
cmovns
pop
jmp
xchg
call
adc
pop
je
cmp
mov
push
cli
and
jno
jbe
mov
sub
mov
xlat
mov
inc
jmp
sub
ins
add
or
sub
int
mov
out
jle
and
sar
xor
jb
les
pop
dec
or
mov
(bad)
lock
adc
adc
test
mov
mov
pop
dec
out
jnp
or
dec
fstp
imul
jae
pop
cmps
fdivr
sub
fidivr
mov
mov
pop
and
jmp
dec
dec
fist
pop
ficom
stos
sub
sti
push
push
cmp
or
inc
jge
push
cmp
push
sub
xlat
(bad)
mov
cmp
lea
outs
lods
lock
xchg
add
out
mov
mov
push
cmc
imul
aas
push
mov
fcmovne
or
inc
mov
std
popf
push
(bad)
dec
imul
shr
xchg
add
fistp
xor
ss
jno
in
push
or
inc
push
retf
lahf
cs
enter
mov
loop
mov
mov
and
movs
push
out
dec
aaa
mov
push
shl
or
sub
mov
mov
cdq
sbb
cmp
(bad)
loope
or
cs
mov
retf
xchg
mov
push
daa
fdivr
mov
clc
and
sbb
cmc
mov
loop
xchg
lds
icebp
stos
in
cld
std
dec
out
pop
xlat
test
jb
sahf
dec
fmul
inc
cmp
daa
push
sbb
rol
popf
push
lods
loopne
mov
xchg
xor
cdq
pop
leave
adc
sbb
nop
mov
fist
jne
dec
jge
jp
gs
mov
rol
(bad)
(bad)
xor
in
push
fcomp
js
cmp
cdq
shr
inc
sbb
stos
es
sahf
pop
out
mov
aad
inc
ja
mov
sub
inc
lock
cmps
pop
jns
test
enter
adc
test
sar
lock
inc
sub
cmc
push
adc
jle
(bad)
ins
and
cmp
mov
inc
test
pop
fwait
inc
sbb
je
push
fnstenv
xor
push
dec
aas
stos
add
loop
test
vxorps
jbe
push
or
cli
test
bound
add
repnz
movs
lods
(bad)
movs
jne
hlt
lock
push
mov
push
pop
imul
js
mov
sbb
cld
cmp
jae
and
repz
out
dec
mov
ss
int
retf
sar
movs
xchg
das
loope
pop
data16
sub
shl
dec
sbb
fs
jnp
jle
dec
icebp
and
dec
loope
sbb
std
or
test
cmp
movs
enter
xchg
xchg
jecxz
and
out
cli
ror
dec
sbb
sbb
xchg
or
das
lds
mov
rcl
adc
mov
int
inc
or
mov
xchg
call
jg
lods
int3
sbb
pop
inc
lock
mov
int3
and
repnz
movs
int
pop
xchg
shl
dec
sub
popf
aad
icebp
mov
jg
movs
(bad)
fld
mov
xchg
lahf
jbe
cmps
mov
in
data16
fdivr
or
xlat
xor
lahf
mov
xor
and
add
sub
mov
or
xchg
cwde
lahf
int
popf
adc
js
inc
outs
rol
push
cli
popa
xor
mov
push
(bad)
(bad)
ds
sar
jae
pushf
and
in
xchg
or
and
sub
mov
jae
cld
mov
out
ss
xchg
cli
loopne
xchg
in
inc
leave
jo
cmp
(bad)
aad
mov
mov
xchg
ror
fwait
dec
js
shl
imul
mov
jl
inc
or
stos
lods
adc
mov
xchg
add
inc
mov
in
fiadd
repz
or
jle
sub
cmp
xchg
inc
xchg
int3
repz
outs
fs
stos
outs
mov
retf
cmps
imul
retf
lock
dec
cdq
ja
loopne
jbe
cmps
in
jge
mov
icebp
push
pop
sbb
je
sub
xor
leave
jo
int
mov
dec
mov
std
cmp
shl
mov
mov
xchg
push
arpl
fbstp
inc
and
adc
adc
stos
add
jae
paddd
imul
int3
(bad)
jnp
rcr
fild
icebp
mov
pop
lds
dec
loope
in
jno
pop
rcl
outs
out
cmps
push
call
repnz
push
retf
lock
popa
push
mov
pop
mov
cwde
outs
sub
or
mov
cmps
jge
std
(bad)
cmps
stos
in
sbb
inc
mov
mov
jb
lea
scas
fld
xor
ret
cmps
xor
in
mov
adc
xor
iret
lock
adc
mov
sbb
mov
pop
repnz
loopne
(bad)
mov
scas
in
imul
sub
gs
dec
cmp
mov
mov
xchg
push
std
mov
pop
adc
cli
pop
in
mov
jns
jle
pop
(bad)
out
scas
dec
ins
in
xchg
xchg
and
push
sbb
repnz
cmps
cwde
aam
cmps
xor
(bad)
stos
sbb
addr16
stos
sbb
mov
inc
enter
je
stos
cmps
mov
cli
in
jne
imul
pusha
pop
cmp
jg
push
inc
lea
or
jmp
sbb
mov
(bad)
jmp
xchg
xchg
add
(bad)
mov
sahf
adc
(bad)
or
les
lock
mov
mov
adc
(bad)
(bad)
mov
mov
mov
call
aad
or
scas
push
stos
stos
repz
loopne
xchg
jge
adc
push
mov
jns
outs
mov
fistp
inc
(bad)
fbld
retf
adc
adc
xlat
out
mov
idiv
lods
shr
fild
addr16
cwde
jns
fwait
dec
(bad)
sbb
adc
jl
cmp
adc
daa
aaa
inc
pop
test
es
mov
sub
shrd
fisubr
repnz
adc
lea
pop
xchg
mov
sahf
sub
dec
std
test
leave
jg
(bad)
xchg
add
ret
aad
dec
push
ror
out
cdq
nop
scas
sahf
sub
push
repnz
jbe
pcmpeqw
call
jnp
sub
dec
jmp
jno
inc
shl
pop
pop
arpl
jnp
xchg
sub
xlat
call
es
push
outs
jb
outs
aaa
out
mov
fwait
push
inc
push
xor
aaa
ds
cli
jns
call
push
ffreep
ficomp
sub
(bad)
out
or
inc
(bad)
outs
push
nop
dec
jno
adc
lea
pushf
dec
xchg
push
jmp
cmp
clc
scas
out
pop
movs
arpl
mov
repnz
repz
in
outs
scas
mov
ffree
xchg
cli
inc
xchg
cmps
out
mov
popf
jnp
push
jo
push
stos
push
dec
loopne
call
bound
push
retf
ss
mov
pop
outs
dec
ds
lds
pushf
movs
in
dec
jge
add
pop
aad
loope
(bad)
repz
imul
pop
push
shl
xor
pop
add
lock
int3
sar
stos
out
xor
xor
ja
mov
retf
pop
adc
sbb
lods
sub
cmp
scas
jb
mov
ss
bound
jecxz
cmp
out
sahf
mov
jl
lock
sub
mov
push
pop
adc
bound
sub
add
xor
mov
push
mov
int
loope
js
mov
and
fcom
cmp
xchg
scas
adc
fsub
dec
rcr
sbb
inc
jecxz
add
out
dec
jmp
push
mov
or
fsubr
mov
adc
ficom
ja
add
push
je
pop
cdq
test
rol
(bad)
dec
cmps
mov
sbb
add
dec
mov
shl
ins
sub
mov
inc
inc
clc
fadd
rol
and
(bad)
fsub
out
jb
ja
sbb
sti
aaa
inc
pop
sbb
hlt
mov
or
sub
data16
leave
push
sbb
in
fdivr
mov
adc
ins
mov
mov
in
shl
xor
outs
into
(bad)
ds
mov
hlt
dec
and
mov
xor
inc
sbb
cmc
(bad)
jl
lods
div
call
mov
ret
sub
outs
in
addr16
jl
je
pop
rol
or
ds
push
in
and
cmps
push
push
add
call
dec
cli
in
dec
or
pop
jmp
dec
out
adc
xchg
(bad)
imul
jmp
dec
hlt
add
test
bnd
das
stc
fsubp
jp
aad
outs
mov
dec
in
pop
loop
pop
jne
popa
xchg
sbb
sbb
mov
sub
mov
xchg
push
jge
popa
inc
ins
movs
push
test
xor
and
mov
jecxz
mov
lahf
shr
push
mov
push
or
push
mov
pop
icebp
ds
inc
sahf
and
pop
out
scas
xor
repz
dec
sub
pop
inc
pop
je
fsub
jp
mov
loopne
(bad)
xchg
adc
call
pop
repnz
fcomp
pop
push
sbb
mov
repz
sbb
call
cmps
pushf
in
fisttp
lahf
or
mov
in
cmp
fisubr
btr
iret
pop
adc
(bad)
mov
jle
cmp
xlat
sbb
aaa
and
pop
fidivr
xchg
adc
push
xor
mov
mov
mov
pop
daa
cmc
aad
jp
popa
clc
(bad)
cmp
rcr
mov
aad
dec
into
in
push
or
jecxz
data16
inc
ret
add
mov
cmp
or
mov
jl
add
mov
mov
push
jb
xchg
test
mov
jmp
cmps
mov
mov
imul
in
ss
ins
popf
in
xchg
adc
into
or
dec
sbb
pop
add
sub
mov
sbb
mov
xchg
cmp
sub
ret
inc
sbb
cmp
mov
mov
jns
iret
add
mov
xor
shl
adc
mov
inc
add
add
xor
xor
test
repz
mov
nop
fisttp
sbb
and
dec
jb
cs
xor
push
push
push
xchg
sahf
add
or
xor
adc
js
mov
sbb
(bad)
jb
or
(bad)
movs
leave
mov
pop
mov
cmps
les
xlat
xchg
or
cs
pop
call
pop
push
adc
xor
mov
lds
loop
es
popa
lods
jae
dec
(bad)
xor
cmps
pop
(bad)
shl
adc
adc
xchg
aaa
(bad)
ins
push
mov
sub
adc
mov
addr16
dec
mov
(bad)
xor
jo
and
ret
mov
pop
mov
inc
in
dec
mov
add
add
add
or
or
adc
fsubr
xlat
xchg
pop
stos
popf
jmp
iret
and
pop
(bad)
jecxz
jne
call
fldcw
mov
pop
rol
cs
mov
(bad)
mov
cli
cmp
pop
mov
and
ret
addr16
jno
je
lods
(bad)
jmp
or
gs
and
call
outs
sub
cmp
pop
push
jo
mov
(bad)
mov
inc
outs
repnz
or
pop
inc
stos
(bad)
push
bound
aaa
mov
(bad)
cmps
mov
test
xlat
cdq
sbb
repnz
cwde
mov
dec
test
inc
cld
jno
sbb
fnstcw
inc
aad
push
mov
pause
xchg
adc
sbb
call
push
adc
mov
sbb
pop
out
xchg
shr
add
(bad)
jnp
movs
in
push
das
add
scas
(bad)
push
push
hlt
clc
sub
add
test
cmp
inc
shl
mov
shl
sti
pop
lods
lods
call
mov
outs
cmp
inc
add
sbb
mov
sub
icebp
xor
mov
mov
stc
shr
ins
cld
dec
stos
cmps
xlat
in
push
into
pop
adc
push
jmp
(bad)
pop
jp
xchg
lods
mov
sub
shl
sub
movd
adc
lods
(bad)
aaa
jo
lods
int3
test
mov
xchg
cmp
scas
leave
add
jbe
jmp
or
mov
xor
sbb
retf
pop
mov
and
push
cs
xchg
dec
jecxz
leave
and
je
js
(bad)
in
cli
mov
movs
sahf
dec
test
popf
in
xchg
imul
enter
in
sbb
bound
mov
in
xchg
push
loopne
imul
jns
dec
push
icebp
ins
and
cwde
adc
pop
sub
adc
jg
shl
xchg
aaa
fwait
mov
fistp
retf
clc
test
jecxz
out
jmp
rcr
cmps
sbb
xchg
nop
mov
inc
mov
mov
(bad)
sub
inc
adc
out
sub
or
aaa
lahf
sar
inc
(bad)
stc
movs
or
inc
frstor
dec
inc
xor
ins
mov
cmps
mov
mov
add
(bad)
cli
cmp
push
mov
out
mov
in
es
mov
dec
add
test
rol
movs
fwait
rol
adc
lock
stos
sub
xor
inc
icebp
inc
std
add
dec
and
push
out
mov
(bad)
xlat
pop
sahf
imul
jg
ret
call
std
daa
mov
movs
imul
icebp
test
fsub
sub
fsub
push
pusha
sub
in
in
dec
call
push
in
xor
adc
mov
scas
mov
and
push
push
(bad)
in
jg
aaa
lahf
jg
inc
xor
out
ins
call
jge
arpl
sub
add
cmp
mov
add
and
aaa
ror
mov
pop
aas
mov
add
enter
jl
arpl
cmps
mov
ins
and
mov
adc
add
lock
test
lahf
jo
arpl
or
sub
sar
dec
mov
pop
(bad)
daa
mov
push
fcomp
icebp
loopne
test
pop
test
push
ja
sub
mov
fimul
or
jp
sbb
addr16
stos
xor
ss
scas
out
fstp
dec
pop
lds
call
jge
movs
jb
jno
pop
xchg
push
sub
xchg
std
loopne
mov
ror
jmp
adc
loope
dec
stos
loop
inc
retf
adc
jb
sub
mov
shl
cwde
mov
mov
bound
int3
stos
cs
ins
mov
repz
jecxz
call
fadd
adc
idiv
xchg
sub
stos
jp
lods
xlat
out
mov
push
sub
sbb
jae
jmp
stc
and
cmp
movs
add
and
adc
(bad)
outs
and
leave
sub
fsub
mov
dec
push
and
fidiv
cmp
out
push
jnp
retf
adc
mov
mov
push
loopne
cld
repz
adc
es
ja
test
dec
mov
fsubr
retf
stos
mov
xor
xlat
mov
hlt
pushf
cmp
ror
adc
rcr
jp
mov
enter
scas
movs
movs
clc
mov
xor
inc
ja
fild
add
or
cld
ja
ficom
out
aad
add
push
fidiv
add
xlat
lds
dec
sahf
je
in
cmp
pop
call
in
int
mov
cwde
lods
frstor
xchg
mov
scas
popa
mov
test
jnp
and
adc
and
gs
les
dec
add
or
xchg
in
addr16
push
out
pop
fistp
xadd
inc
add
xchg
cdq
inc
div
inc
fbstp
fnstcw
in
xor
mov
sar
pop
inc
cli
mov
stos
push
out
xor
sub
jp
and
enter
xor
sbb
mov
fmul
jmp
and
cwde
(bad)
cmc
das
dec
inc
out
pop
imul
cmp
rcl
test
es
push
repnz
sbb
jbe
push
pop
pop
add
pop
mov
pop
jae
jge
mov
mov
push
pop
lods
out
mov
sti
push
stos
aaa
jg
push
out
cli
mov
vmaskmovdqu
jmp
fmul
xchg
jl
into
sbb
pop
pop
imul
cdq
cmp
xor
rcr
or
cld
call
sub
int
inc
dec
call
xchg
test
je
push
or
inc
sbb
push
sbb
in
in
push
mov
fidiv
and
mov
dec
xor
cmps
cwde
add
das
mov
sbb
nop
pop
adc
test
sar
jmp
mov
cs
dec
or
mov
push
rcl
pop
jb
inc
retf
popf
sub
clc
sub
pop
pop
xchg
and
jge
sub
cwde
push
or
mov
test
xchg
in
pop
xchg
neg
push
(bad)
cld
mov
sbb
adc
adc
out
jmp
xchg
callw
push
icebp
jp
pop
and
xor
fadd
call
int3
sub
fild
int3
cmp
cwde
in
and
mov
pop
test
bound
fs
inc
and
and
and
stc
ja
dec
push
adc
jb
push
pushf
sbb
mov
dec
xor
pop
dec
lods
adc
ret
and
test
sbb
xor
in
scas
out
add
mov
aaa
and
and
fstp
jecxz
xchg
ja
inc
mov
ja
and
enter
pop
imul
push
rcr
mov
cli
test
xor
rcl
dec
cmp
pushf
mov
pop
and
jae
pop
and
pop
jnp
repz
fwait
pop
repz
or
test
and
iret
in
div
mov
je
or
iret
mov
sub
ins
xor
mov
test
push
push
test
add
mov
mov
lahf
lea
scas
cmp
int
pop
aaa
imul
sub
outs
push
movs
js
sbb
inc
ins
shr
repz
xchg
or
repnz
inc
jo
loop
xor
aam
mov
xor
xor
in
push
fadd
xchg
xchg
jno
jae
mov
(bad)
sbb
mov
aam
pop
data16
xchg
ror
ror
push
pusha
mov
dec
pusha
mov
std
pushf
das
pop
cmp
and
in
push
and
lea
clc
or
repz
jle
jo
mov
sub
movs
cmp
out
fcmove
mov
mov
pop
push
cmp
cdq
(bad)
inc
into
imul
xor
pop
adc
jle
ja
adc
jae
push
or
mov
movs
ins
repnz
jns
mov
dec
or
mov
test
fwait
xchg
mov
jbe
mov
js
sbb
jo
inc
scas
pop
mov
ss
in
add
icebp
or
popa
out
imul
arpl
pusha
in
rcl
test
or
jnp
es
not
loopne
xchg
leave
fwait
mov
push
pop
stos
cmp
into
es
mov
jnp
cmp
xor
sar
dec
dec
mov
data16
jns
push
lahf
mov
push
cmc
lock
lds
xchg
xor
jnp
cmp
loop
clc
nop
scas
mov
cld
mov
xlat
es
mov
sub
cmp
sub
xor
mov
and
mov
pop
shr
mov
adc
test
xor
adc
cld
aas
repz
xchg
pusha
xchg
sub
dec
adc
xchg
mov
leave
leave
pop
jmp
jge
loope
aas
add
lea
or
xchg
ss
xchg
ja
dec
std
cmp
popf
sbb
std
xor
mov
inc
cmp
inc
dec
rol
test
pusha
(bad)
push
pop
push
ret
or
dec
inc
and
fild
loopne
adc
mov
mov
loop
pop
mov
and
sub
or
test
rcl
(bad)
push
jae
(bad)
mov
mov
lods
or
or
mov
push
pop
cli
jge
sahf
push
stos
sub
sub
jmp
scas
call
push
xchg
mov
dec
cmp
mov
pop
(bad)
fsubr
sar
jmp
dec
push
ds
mov
ss
sti
cmp
adc
push
jne
push
pop
cmp
xor
sub
lods
inc
cmp
jp
mov
ss
fbstp
jo
and
and
xchg
mov
and
xchg
mov
sub
aaa
inc
jnp
mov
xchg
jmp
cmp
scas
push
cmp
(bad)
lds
jl
jne
imul
or
pop
dec
cdq
out
dec
and
inc
idiv
mov
jae
in
popa
pop
adc
sbb
jle
call
dec
(bad)
hlt
jnp
pop
mov
cmps
xchg
xor
cmc
inc
iret
loopne
iret
adc
fs
xchg
fwait
adc
xlat
mul
retf
pop
stc
les
cmp
xchg
xchg
ror
aas
shl
cdq
movs
xchg
into
data16
inc
popa
test
xchg
outs
daa
test
call
sub
sti
mov
add
mov
pushf
xchg
retf
xchg
fsubr
pop
push
xlat
jg
inc
lahf
adc
mov
out
inc
xchg
sub
xor
push
pop
fld
das
jae
and
xchg
inc
in
jb
dec
and
imul
and
in
push
mov
loopne
repz
and
mov
xchg
xchg
mov
loope
lahf
inc
popa
pop
mov
cmp
js
mov
inc
imul
inc
sub
jnp
test
push
push
hlt
(bad)
adc
mov
sbb
popa
xor
or
std
mov
mov
mov
rol
mov
ss
push
lods
retf
jne
mov
(bad)
in
(bad)
sbb
nop
jge
cmp
retf
dec
das
dec
pop
clc
or
data16
out
jg
int3
pop
xor
popf
xlat
cmp
inc
cmp
inc
loop
inc
add
sbb
sub
(bad)
xor
je
std
xor
mov
xchg
pop
icebp
and
adc
lahf
int
ins
mov
pushf
jmp
mov
pop
xchg
xor
and
xor
jbe
push
test
add
rcl
mov
cmp
jbe
pop
add
cli
ror
cmp
call
mov
pop
addr16
pop
sub
outs
jmp
sbb
and
mov
xchg
add
lods
mov
lods
mov
dec
sti
rcl
scas
add
adc
jle
cmp
out
mov
in
rcr
jmp
jno
ss
push
pop
ror
xchg
sub
push
cmp
cmc
sbb
movs
xlat
test
add
nop
pop
repnz
ins
bound
shl
shr
and
sub
inc
and
xor
shl
pop
xor
sub
and
shl
xlat
in
arpl
aas
call
jb
pop
addr16
in
in
xchg
je
ins
cli
cmp
cmps
push
cs
movs
nop
or
push
pop
dec
sar
mov
hlt
in
call
adc
inc
jge
ss
adc
hlt
in
sbb
pop
jl
dec
mov
in
mov
scas
addr16
push
movs
push
xchg
js
pop
xchg
rol
(bad)
(bad)
lods
cmp
dec
jo
mov
sub
sahf
clc
mov
cmp
sbb
sahf
dec
fist
movs
loopne
mov
in
inc
ja
scas
xchg
out
jb
jmp
push
fld
and
sti
aaa
jbe
or
mov
call
fnstsw
or
mov
imul
daa
call
mov
lock
add
sar
push
lods
jnp
xor
mov
call
fsubr
inc
retf
imul
xor
sub
dec
jg
sub
cwde
imul
in
cmp
in
(bad)
hlt
mov
and
fistp
nop
add
mov
popf
jo
loope
stc
inc
ins
pop
mov
fwait
push
push
mov
jecxz
dec
add
leave
mov
push
mov
jmp
test
pop
xchg
retf
lods
clc
call
mov
add
hlt
or
fdiv
cmps
add
mov
cmps
(bad)
mov
jecxz
loopne
bnd
stos
sbb
int
and
jge
loopne
sbb
icebp
repz
jbe
subps
stos
xor
scas
in
cli
mov
xchg
icebp
retf
and
ficom
pop
loope
mov
ins
mov
push
and
scas
inc
jae
cmps
inc
rol
iret
loopne
dec
ficom
pop
sub
inc
xor
jge
xlat
xchg
push
mov
fiadd
int3
xchg
jp
lds
lods
push
sti
push
(bad)
das
mov
out
mov
js
in
or
ficomp
dec
push
loop
das
out
inc
add
fwait
iret
mov
imul
mov
push
aad
jae
cs
mov
das
jbe
call
(bad)
xchg
stos
outs
cmp
sub
sti
scas
mov
jle
jmp
movs
sbb
nop
mov
pusha
shl
pop
sub
jg
call
test
xor
pusha
(bad)
mov
xor
dec
sub
das
cmc
retf
xor
cmps
mov
xor
loop
pop
(bad)
sbb
mov
fwait
stos
xchg
jb
jns
jae
fsubr
mov
or
jmp
call
psubusw
jecxz
retf
div
cmps
or
scas
sbb
mov
xchg
inc
mov
push
mov
out
fidiv
dec
cs
jne
mov
test
sbb
or
push
jge
push
repz
xchg
fist
pop
pushf
cli
or
stos
sti
xchg
in
fcomp
inc
pushf
mov
or
pop
jb
xchg
dec
outs
push
dec
das
clc
sti
inc
push
adc
mov
push
push
adc
cwde
lods
sub
lahf
jnp
aam
mov
movs
pop
adc
jmp
nop
jb
add
int3
xor
sub
movs
inc
sbb
mov
jbe
ds
and
int
xor
ret
jno
cmps
xchg
mov
mov
dec
test
add
pop
cmp
enter
dec
adc
xchg
and
jno
mov
push
push
shr
addr16
cmp
sbb
xchg
and
pusha
cmps
sub
ss
add
mov
add
lods
sub
(bad)
out
or
mov
lods
gs
add
cmp
xor
jmp
sti
push
mov
fisttp
push
pop
leave
retf
jl
xchg
mov
clc
stos
lods
fcmovne
xlat
push
std
and
push
adc
jle
jmp
nop
jno
imul
pop
mov
shl
mov
push
mov
out
fisub
jo
(bad)
aas
stc
pop
imul
dec
stc
call
(bad)
xchg
addr16
push
int
loope
or
push
movs
cwde
mov
dec
lea
push
gs
aam
cmp
push
stc
mov
inc
lock
mov
jmp
ret
sti
sbb
cmp
hlt
aad
sub
or
push
and
out
mov
int3
repz
ret
mov
xor
or
repnz
hlt
imul
jno
(bad)
jle
jns
aaa
jg
shl
xchg
loope
or
jecxz
stc
fs
jne
ficomp
rcl
fldenv
call
aad
mov
mov
pop
ja
retf
(bad)
pop
mov
jmp
ficomp
and
ins
mov
imul
call
mov
mov
pop
stos
mov
and
xchg
xlat
stos
push
pop
arpl
pusha
popa
neg
mov
inc
aam
and
rep
jle
xor
jmp
cdq
and
hlt
lahf
mov
clc
inc
or
and
or
pop
aad
das
jp
inc
xor
lds
(bad)
daa
cmps
or
aas
aam
mov
and
test
call
dec
jne
adc
push
cdq
scas
jb
je
jg
mov
pop
jb
inc
in
cwde
mov
jmp
jmp
sar
jno
fbld
jbe
sbb
and
xchg
ret
lea
xchg
pop
mov
fistp
mov
xor
call
(bad)
in
jge
pop
and
or
jecxz
dec
dec
sub
cdq
iret
dec
dec
cmc
cmp
aad
sub
retf
fwait
dec
lock
cmp
out
xchg
sbb
jns
gs
mov
lods
rcr
jmp
inc
into
or
cli
pop
mov
fwait
in
pop
adc
push
aas
pop
mov
jne
int
leave
(bad)
lahf
fistp
loope
mov
call
jmp
dec
mov
xor
xor
es
sub
imul
push
xor
cmp
jo
jnp
stos
xchg
or
repnz
xacquire
mov
iret
sub
(bad)
mov
mov
jmp
mov
xchg
jle
aam
outs
dec
mov
ret
das
ss
push
repz
push
adc
pop
ja
and
scas
jae
and
inc
sbb
ficomp
int
jae
pop
jmp
das
mulps
ret
in
pop
jnp
fild
dec
movs
sbb
call
mov
loop
imul
sub
test
and
(bad)
and
push
and
sub
push
sahf
mov
in
fs
out
loopne
sbb
sub
lock
mov
popa
ficomp
cmp
mov
lods
outs
fnsave
mov
and
hlt
jp
mov
xchg
inc
push
(bad)
loopne
fistp
leave
or
sbb
or
jae
push
dec
into
push
or
lds
cmps
jecxz
cli
stos
scas
jmp
loopne
inc
sub
(bad)
movs
stos
js
jbe
dec
mov
je
jg
sbb
test
pusha
cmp
jbe
add
adc
rol
mov
outs
jb
loope
mov
and
push
push
push
inc
mov
push
fndisi(8087
pushf
scas
mov
cmp
sbb
mov
push
add
in
ins
ror
and
cmps
daa
and
pop
fiadd
xchg
xlat
stos
sbb
fs
into
pop
stos
push
push
xor
pop
sub
in
cld
and
sub
cmps
shl
cmp
push
or
leave
call
out
jmp
dec
dec
add
add
or
push
call
repz
add
iret
sahf
test
aaa
ret
or
dec
mov
aam
and
adc
pop
xor
jmp
inc
dec
scas
and
neg
js
mov
nop
repnz
retf
dec
lods
xchg
push
or
cmp
int3
scas
pop
mov
add
cli
mov
jecxz
sahf
inc
cwde
in
bound
icebp
pop
repz
add
jmp
loopne
imul
scas
cld
adc
ja
das
clc
shl
jp
push
rcr
xor
pop
or
dec
jg
movs
in
adc
out
push
adc
push
nop
fsubr
inc
loope
mov
cmp
jl
inc
adc
jae
js
sub
jle
adc
iret
test
sbb
mov
jbe
out
je
in
shr
cmps
rcl
aam
mov
cmp
nop
jecxz
dec
loopne
stc
popf
mov
push
cmp
std
(bad)
sub
ins
mov
xchg
and
pushf
sub
or
push
out
cmp
and
sbb
xchg
jmp
jbe
(bad)
nop
pop
mov
or
dec
dec
xor
mov
scas
in
inc
sbb
fs
pop
(bad)
jnp
call
aaa
jg
pushf
call
and
inc
mov
paddusw
inc
test
ret
mov
cmp
imul
mov
inc
jle
imul
mov
mov
test
fs
repnz
outs
into
gs
ds
retf
mov
lahf
and
loop
and
rcl
in
fcomp
(bad)
repz
pop
xchg
fcom
and
dec
xchg
dec
mov
cmovl
cmp
ja
fcomp
pop
push
stos
sub
and
enter
lods
push
jmp
popa
pop
ret
aaa
jge
stc
sar
aaa
sahf
ins
mov
repnz
push
inc
cs
sahf
sbb
sbb
sar
arpl
mov
aad
aam
arpl
dec
sub
cmp
inc
mov
mov
xchg
jne
or
and
ins
xchg
xchg
ret
ret
(bad)
sub
mov
sub
mov
cs
pop
adc
inc
add
mov
pushf
add
xor
call
dec
pop
bts
test
jno
cmp
jp
sub
out
in
call
aad
jmp
lea
in
push
pop
jne
push
jge
inc
pop
and
(bad)
sti
enter
cmp
stos
sbb
mov
fdiv
pop
xchg
mov
or
lods
adc
inc
sbb
jmp
retf
(bad)
das
and
mov
fisub
cdq
mov
or
mov
in
pop
add
es
jg
dec
mov
int
std
out
add
sub
gs
jns
inc
xchg
es
loop
loopne
cmc
sub
xchg
out
(bad)
fimul
jmp
packsswb
and
or
ins
jae
or
push
sbb
cwde
jge
cmp
enter
sbb
ss
adc
pop
sbb
mov
mov
stos
or
adc
(bad)
test
mov
lods
hlt
dec
(bad)
dec
or
sbb
scas
mov
dec
or
mov
mov
popa
xlat
or
lods
push
xchg
out
pop
and
fnstcw
lds
ds
xchg
xchg
test
push
xor
and
mov
inc
xlat
sub
je
repz
xchg
bound
sbb
je
fild
and
iret
ficom
pop
(bad)
sub
xor
sub
outs
mov
pop
or
mov
adc
ret
cmp
mov
jmp
xchg
lea
mov
and
mov
inc
iret
pop
sti
movs
inc
add
adc
jmp
dec
stos
cmps
or
lahf
pop
mov
adc
adc
pop
daa
adc
fsubr
mov
loop
(bad)
jo
mov
cmovne
test
xlat
pop
pop
add
push
jle
(bad)
sti
jno
int
call
ret
push
outs
call
xchg
inc
sbb
jge
inc
call
dec
mov
push
fidivr
push
(bad)
jge
jp
xchg
push
dec
iret
mov
daa
retf
(bad)
cmps
(bad)
test
push
xor
push
mov
out
loopne
fsubp
(bad)
or
aaa
ss
loopne
sub
cmp
adc
jecxz
xor
shl
jb
repz
iret
scas
call
fild
jg
js
dec
fwait
adc
pushf
cli
adc
cmp
mov
addr16
add
xchg
cli
dec
inc
jbe
fmul
aad
mov
aam
mov
out
je
sar
jl
div
test
aaa
inc
mov
jg
pop
add
jo
in
jmp
rcr
popa
cmp
mov
mov
jmp
out
xchg
jg
mov
add
into
das
sbb
das
div
push
pusha
(bad)
mov
ja
push
mov
(bad)
sbb
and
dec
dec
ja
mov
push
not
pop
xlat
fist
sub
cmp
xor
mov
loopne
daa
xchg
jmp
outs
bound
dec
mov
and
ins
scas
iret
mov
add
sub
or
je
mov
fldcw
jne
stos
test
jno
pop
dec
cmp
sub
push
pop
fcmovb
add
hlt
pop
push
mov
test
push
xchg
(bad)
fidiv
mov
out
inc
js
sahf
or
pop
fdivrp
dec
xchg
push
outs
ds
jl
or
mov
enter
mov
and
cmp
pop
mov
hlt
loop
mov
gs
fnstenv
adc
mov
push
(bad)
lahf
sti
mov
cmp
and
or
int3
jl
cmp
jp
sub
retf
ds
pop
cdq
stos
dec
jmp
push
xor
push
dec
jno
mov
test
xor
scas
aad
out
out
and
xchg
jae
or
rcl
js
add
test
mov
mov
sbb
inc
or
add
and
aad
mov
xchg
push
sub
sub
pushf
sti
sbb
sbb
push
adc
cmp
mov
adc
mov
lea
or
pop
jp
inc
adc
imul
loope
jne
dec
das
push
mov
mov
or
fst
ins
sub
add
mov
and
push
in
and
mov
jne
clc
mov
push
xor
sub
or
mov
jle
push
push
paddd
repnz
scas
dec
push
hlt
sub
add
jnp
push
fwait
pop
jo
pop
cwde
loopne
and
xchg
scas
dec
mov
popa
push
cmp
les
dec
fbld
std
mov
inc
push
test
adc
ficomp
mov
pop
in
outs
gs
pop
xor
jmp
push
stc
sub
cs
jle
sub
aas
rol
dec
mov
dec
pop
mov
cmps
outs
pop
pop
pop
(bad)
mov
xlat
push
in
pop
fidiv
pop
lods
pop
sub
sbb
xor
push
repnz
sahf
div
jl
jmp
jbe
in
push
jnp
lahf
and
scas
jne
sub
sub
(bad)
loope
loop
or
pusha
aam
add
jae
sar
aad
mov
pop
sub
arpl
lahf
jmp
push
cs
inc
cmp
rcr
cwde
out
(bad)
fwait
inc
mov
retf
out
inc
jmp
imul
mov
jge
cdq
lea
addr16
popa
pop
adc
push
push
inc
xchg
(bad)
add
sar
sets
jns
jb
mov
mul
and
enter
push
outs
sub
dec
mov
shl
fmul
cmp
mov
xchg
loop
ss
sar
fcom
dec
in
cwde
dec
dec
and
(bad)
cmps
loope
sbb
imul
sbb
outs
dec
fsub
scas
cmp
aam
jmp
ja
dec
sbb
gs
mov
push
inc
cmp
jmp
dec
retw
or
aam
out
cdq
stos
xchg
aaa
push
es
jbe
dec
sbb
xor
mov
jmp
xchg
push
xchg
cmp
int3
stos
hlt
(bad)
dec
pop
jb
int3
cli
cmp
or
push
scas
mov
inc
xchg
iret
fisttp
mov
dec
cmps
pop
adc
sti
retf
loop
ret
push
jb
pop
jmp
out
xchg
outs
push
fmul
dec
adc
movs
outs
retf
push
out
paddusb
xor
call
sar
sub
cmp
scas
xchg
pop
hlt
enter
daa
lea
sti
in
or
shr
sbb
jp
pop
jo
and
pop
push
add
jnp
push
sub
frstor
xor
ficom
popa
xor
fadd
push
ja
dec
fsub
or
mov
xor
cwde
adc
mov
adc
xor
mov
inc
icebp
sbb
inc
fild
mov
cmc
xor
cmp
repnz
mov
inc
lahf
xchg
xor
jnp
and
xchg
mov
enter
call
(bad)
mov
jne
sbb
pop
or
inc
jp
cwde
dec
sar
or
sar
sbb
mov
jmp
xor
mov
lahf
aaa
rol
xchg
or
popa
sbb
xchg
fsubr
mov
jne
mov
cmp
rol
mov
aad
mov
dec
pusha
fsubr
les
scas
xor
xchg
in
loopne
inc
xchg
popa
push
scas
jnp
(bad)
jmp
aas
and
push
(bad)
dec
rol
das
push
pop
cmc
mov
jge
mov
mov
les
push
pushf
xor
(bad)
imul
ret
and
pop
pop
push
aad
leave
in
pop
push
(bad)
rol
mov
ja
jge
or
in
stos
fsubr
iret
popf
call
or
push
vpsubq
popf
popa
dec
mov
mov
cmp
mov
test
add
call
mov
test
mov
push
and
jmp
mov
outs
lea
inc
add
pop
ret
dec
dec
cmp
stc
or
(bad)
popf
pop
pop
test
xchg
add
push
loopne
jg
inc
mov
mov
sub
cmp
mov
pop
in
xchg
jmp
std
xchg
dec
pop
call
ss
mov
shl
push
lods
inc
xor
jmp
inc
sbb
cmp
xchg
loopne
jecxz
aam
outs
xchg
lahf
add
test
add
cmp
and
pop
push
ins
ror
sub
rcr
push
push
test
mov
dec
mov
mov
bnd
mov
popa
mov
push
repnz
jb
jge
dec
loopne
cs
adc
xor
mov
sub
call
inc
pushf
adc
pop
(bad)
mov
clc
lods
jmp
(bad)
jnp
neg
outs
pop
jl
daa
add
mov
cwde
adc
mov
xor
mov
push
int3
sbb
outs
shl
pop
cld
pop
xor
enter
xchg
(bad)
cmps
mov
xor
movs
cdq
push
mov
add
bound
shl
mov
jne
(bad)
mov
pop
add
sub
cmp
sbb
arpl
jmp
jnp
jnp
push
jns
or
cmp
push
lods
jbe
xchg
ret
jge
in
jle
shr
repz
hlt
pop
cwde
lds
clc
pop
iret
jg
in
dec
(bad)
call
sub
sbb
sub
xchg
adc
lods
enter
pop
and
ret
pop
adc
fisub
pop
arpl
aam
fadd
icebp
jge
xor
movs
pop
in
ds
and
mov
retf
mov
jb
mov
ss
out
imul
imul
fisttp
sbb
dec
lods
fsubr
push
pop
xchg
add
and
adc
sub
mov
popa
ss
fnstcw
bound
in
dec
push
pop
adc
mov
int
imul
push
fist
pop
sahf
and
loope
jecxz
xchg
rol
xchg
test
mov
movs
push
popa
ins
pop
and
bound
fcom
or
inc
(bad)
fucomi
ins
mov
pop
jno
inc
es
push
mov
loope
mov
cwde
sbb
mov
jo
scas
jns
jbe
movs
mov
mov
ss
jbe
sub
push
inc
cs
add
xor
jb
ja
ss
xor
xchg
mov
adc
dec
cwde
push
mov
dec
shl
adc
movs
pop
out
xchg
in
or
aad
into
cmp
mov
xchg
inc
int
or
mov
jg
jnp
add
loop
or
scas
repnz
cmp
adc
les
push
outs
mov
test
sbb
inc
iret
or
loopne
hlt
push
int
adc
or
and
inc
jo
or
shr
ds
jnp
aad
arpl
sub
push
mov
inc
sbb
(bad)
fnstcw
xchg
pop
pop
stc
mov
xlat
adc
and
cmps
xchg
pop
fstp
jmp
adc
in
fstp
in
inc
pop
std
mov
js
add
fstp
push
mov
push
and
aaa
(bad)
sahf
and
cmc
push
mov
cdq
add
dec
lods
and
xor
jns
ss
or
xchg
scas
pop
inc
call
push
mov
and
inc
sbb
leave
cmp
outs
and
mov
push
stc
dec
test
shl
jle
cmps
movs
jp
or
dec
push
ss
mov
cmp
sbb
mov
or
and
adc
mov
cmp
cs
in
mov
sbb
sbb
add
xor
mov
fild
movs
fist
retf
test
cmp
xor
movs
jge
inc
cmp
fs
test
sbb
or
stos
cwde
pop
mov
jmp
movs
mov
xchg
fwait
mov
pushf
lds
jbe
rcr
mov
mov
test
lock
hlt
add
inc
sar
mov
inc
inc
jbe
adc
xor
call
mov
aaa
mov
ror
mov
or
cmps
imul
in
shl
into
mov
stos
pushf
shl
jmp
ins
mov
mov
repz
addr16
mov
adc
test
out
dec
out
inc
jg
sahf
jp
int3
sbb
movs
add
shl
sub
or
mov
cmp
imul
ror
xchg
sub
push
add
xlat
adc
scas
jmp
test
dec
aas
aam
clc
adc
(bad)
int3
mov
std
pop
arpl
sub
cdq
jno
(bad)
ja
xor
mov
xchg
ss
mov
ficom
xor
pop
mov
and
xchg
mov
stos
or
jne
rcl
(bad)
mov
xchg
loopne
es
in
movs
loope
dec
adc
fs
inc
sub
cmp
stc
mov
mov
shr
push
mov
adc
mov
cmp
into
ins
jg
sbb
jbe
jp
pushf
aaa
pop
add
jae
movs
aaa
or
jae
sub
mov
push
imul
lea
pop
daa
pushf
imul
loop
aad
push
xchg
out
(bad)
fdivr
jae
mov
inc
sub
adc
pop
jge
cmp
cmp
jl
push
jns
or
out
jbe
dec
push
packuswb
inc
add
sahf
and
pop
cmp
(bad)
int3
pop
jl
or
dec
aaa
(bad)
inc
jbe
xchg
pusha
aad
pop
xchg
sbb
pop
add
push
jne
loope
xor
mov
movs
add
jle
(bad)
sbb
adc
xor
int
hlt
and
das
lods
(bad)
cmp
das
dec
imul
jg
dec
inc
ins
popf
mov
lods
or
mov
pop
push
or
ja
mov
(bad)
es
lock
(bad)
movs
stc
shl
stos
outs
or
mov
inc
pop
loope
xchg
cs
mov
test
test
aam
data16
lock
xchg
(bad)
js
mov
hlt
scas
dec
and
push
(bad)
sub
jb
dec
dec
sub
sbb
mov
add
pop
jecxz
push
pop
sbb
xchg
cs
(bad)
out
xchg
popa
pop
ret
mov
jle
adc
nop
mov
and
sbb
movs
aad
adc
frstor
lock
push
and
pop
add
adc
push
loop
pop
lods
mov
cmp
pop
xchg
mov
cs
pop
rcl
mov
lods
mov
pop
test
cmp
retf
cmps
cmp
test
in
pop
mov
mov
(bad)
daa
arpl
push
push
and
stos
xchg
pop
cmps
sub
lds
je
pop
add
cmp
rcl
pop
and
or
xor
jmp
jmp
add
loop
iret
push
cs
pop
pop
push
and
jnp
or
int
cmp
mov
leave
mov
dec
pop
mov
imul
xor
dec
out
cmp
out
mov
addr16
outs
xchg
loopne
jecxz
mov
mov
pop
dec
lods
sub
push
or
popa
cwde
call
mov
scas
scas
je
fmul
jnp
je
sbb
jne
test
jmp
mov
add
jne
aas
inc
(bad)
push
cwde
das
push
call
mov
popf
into
xor
xchg
lds
rol
jmp
mov
fwait
popf
shr
and
cmp
scas
jg
leave
mov
xlat
push
loopne
cwde
jmp
pop
dec
fldenv
fs
mov
pop
inc
(bad)
cmp
imul
fild
sbb
jecxz
aaa
add
pushf
pusha
xor
push
mov
rcr
mov
cs
in
dec
aas
mov
sbb
add
lods
ins
pop
push
scas
jns
xor
push
mov
mov
ficomp
bound
out
cmp
jl
adc
jne
icebp
mov
ins
clc
xor
sub
or
pop
inc
cmp
aad
pop
int3
inc
push
and
dec
lods
aad
sub
ins
aad
jno
push
inc
(bad)
cdq
mov
daa
cmp
je
dec
push
lahf
rcl
push
mov
fcomp
mov
pop
push
retf
imul
push
xor
fisttp
mov
call
cmp
dec
mov
push
mov
imul
lods
push
or
add
inc
gs
stc
xchg
push
dec
(bad)
std
ss
in
pop
pop
call
or
icebp
xchg
loop
rcr
sub
stc
fdiv
cmp
in
mov
fist
fdivr
shl
rol
test
mov
mov
data16
daa
pop
repnz
jmp
ins
push
rcl
lock
push
jbe
sub
ficom
loopne
dec
sub
aaa
push
and
cld
jmp
in
push
pop
dec
lds
ss
cmp
pop
sub
jecxz
(bad)
pop
xchg
fisttp
cmc
pop
dec
and
iret
adc
mov
adc
xchg
ret
movs
adc
or
add
nop
int
outs
or
xlat
loope
(bad)
ret
push
adc
test
nop
push
lds
mov
and
pop
mov
clc
idiv
and
adc
mov
shl
cmp
cmp
addr16
movs
fstp
push
and
in
shr
sbb
test
xchg
add
push
push
shr
lock
sbb
enter
jge
sub
sbb
out
jp
(bad)
push
mov
mov
invd
sub
xor
and
adc
sbb
push
mov
xor
movs
in
jne
test
(bad)
popa
aam
cmp
xor
jle
sbb
lea
retf
aad
inc
bound
push
movs
pusha
or
and
push
jno
jge
inc
mov
cld
clc
in
lods
mov
jae
and
(bad)
sbb
mov
fcomp
pushf
dec
push
push
rol
mov
push
sub
cdq
mov
retf
ss
rol
jmp
cmps
sbb
inc
lds
pushf
ins
stc
js
mov
dec
xor
sti
aad
(bad)
stos
js
xor
fstp
nop
push
push
inc
fdivr
mov
cwde
cld
or
ror
retf
rol
shl
scas
adc
mov
rcr
cmp
add
sub
(bad)
mov
(bad)
fwait
cmps
repz
fcom
movs
int
mov
scas
mov
pushf
test
outs
movs
inc
mov
shl
mov
mov
inc
lock
jnp
mov
cmp
and
inc
push
inc
sub
std
xchg
aad
mov
jno
ins
fcmovne
shr
mov
sub
fld
jae
das
push
jmp
lds
pop
loop
xchg
mov
cmp
stos
xchg
dec
or
inc
cmp
rol
stos
nop
sbb
call
jle
cwde
jecxz
mov
aas
shl
xor
lods
jae
movs
inc
add
xlat
(bad)
pop
inc
je
test
add
xlat
xor
sbb
sahf
push
cli
clc
into
xchg
push
icebp
mov
mov
aam
mov
and
dec
mov
push
shl
mov
ins
sub
ret
(bad)
repz
sub
(bad)
cmp
jge
icebp
in
push
cwde
sbb
sti
lods
mov
and
xor
out
repz
adc
pusha
repnz
cmp
mov
push
iret
mov
out
and
mov
pop
xor
dec
stos
retf
jmp
fisttp
push
mov
arpl
lods
sbb
ja
retf
pop
cmps
mov
pop
imul
mov
and
cdq
ja
rol
stc
inc
mov
jmp
xchg
popf
xchg
xor
jnp
dec
sub
std
cs
xor
into
out
fld
aad
xchg
movs
mul
mov
add
and
mov
ins
fadd
aam
(bad)
in
stos
mov
not
rcl
jbe
leave
in
pusha
adc
sub
cmp
adc
jge
jge
(bad)
and
sbb
aas
xchg
add
push
idiv
enter
and
mov
clc
xchg
loopne
mov
and
rcl
mov
lahf
xchg
cdq
add
scas
and
scas
jne
repz
xchg
jp
rcr
scas
mov
dec
data16
pop
daa
xor
loope
scas
fstp
jae
push
daa
cmps
mov
sbb
ret
cdq
shl
adc
fs
mov
cmp
sub
inc
(bad)
loop
dec
out
xor
in
mov
push
mov
loopne
dec
mov
xor
outs
dec
xor
inc
jmp
rcl
jno
add
repnz
mov
ins
(bad)
std
leave
jle
stos
pusha
sub
(bad)
sbb
adc
fwait
jmp
cwde
ficom
test
mov
call
pushf
inc
jg
dec
cmps
test
and
popf
inc
popa
in
adc
sti
jno
jmp
repnz
sub
inc
xor
inc
pop
leave
jl
repz
jo
sbb
or
push
cmps
sti
push
add
ja
cwde
loop
jb
ins
fisttp
push
ret
lock
and
sti
fs
call
or
or
pop
dec
cmp
mov
cmp
adc
xor
mov
push
xor
repnz
push
pop
push
xlat
mov
inc
test
cs
and
jbe
push
rol
mov
mov
adc
ss
(bad)
add
out
mov
div
and
(bad)
into
inc
imul
jge
and
cmps
arpl
xchg
cwde
loopne
out
xor
push
(bad)
xor
fwait
in
sar
dec
cmp
pop
push
push
push
jg
mov
arpl
jo
stc
xchg
mov
xor
jecxz
daa
addr16
and
fs
jle
push
sub
bound
or
dec
retf
nop
aam
idiv
loopne
xor
(bad)
(bad)
fsubp
xor
sub
sub
out
inc
adc
pop
xor
retf
lods
or
(bad)
test
add
adc
xchg
movs
stos
and
iret
jl
mov
data16
les
push
das
iret
jmp
jmp
in
add
push
or
fild
in
jl
cmp
mov
sbb
inc
fadd
stos
xor
test
add
sbb
cmp
sahf
jno
push
xchg
popf
sub
push
into
sub
sub
into
jne
and
xlat
stc
push
push
or
sub
popa
and
je
push
ja
test
jnp
outs
lea
fiadd
test
dec
(bad)
icebp
icebp
and
cmp
sti
call
ja
addr16
sub
jecxz
xor
inc
sbb
pop
sar
dec
jae
(bad)
scas
sub
in
mov
mov
jns
xor
arpl
jmp
mov
mov
cmp
rcr
dec
iret
aam
push
in
loopne
sbb
aas
test
inc
xchg
and
xchg
repnz
pop
jbe
dec
(bad)
mov
sbb
or
xchg
clc
outs
push
and
fiadd
cmps
mov
ja
jg
mov
push
pop
and
mov
fsub
push
inc
mov
push
rol
das
pop
shl
and
outs
nop
jge
push
(bad)
mov
pop
mov
mov
scas
push
movs
mov
jle
inc
sub
jmp
xor
fdivr
mov
jae
gs
jg
mov
sub
push
dec
or
jne
call
mov
pushf
and
cmps
mov
adc
or
inc
cld
mov
loop
xor
in
cmp
fs
fsub
rol
fwait
outs
and
push
inc
push
mov
sbb
out
sub
jbe
out
and
ror
sahf
ins
sbb
aam
and
out
fcomp
mov
add
jnp
and
pmaxub
and
inc
dec
mov
add
fwait
fs
inc
fidiv
adc
xor
fistp
repnz
sub
add
or
or
daa
mov
stos
pop
xchg
in
loopne
cli
test
lds
adc
dec
sub
or
outs
lea
dec
test
shl
push
cmc
sbb
xchg
in
mov
and
add
jecxz
bound
pop
pushf
mov
sbb
stc
ins
call
cmp
pusha
rol
dec
cmp
es
sbb
fidiv
lock
and
lods
shl
inc
loop
mov
arpl
pop
jecxz
or
mov
aam
dec
js
inc
in
lods
icebp
(bad)
pop
mul
mov
or
or
inc
pop
add
out
sbb
shl
sub
jmp
jno
dec
jecxz
mov
and
pop
cmps
(bad)
popa
mov
xor
call
aas
cmp
sub
addr16
cmp
mov
xor
inc
push
adc
rcr
push
xchg
xchg
push
adc
loope
ret
pop
imul
repz
mov
push
push
or
cmp
and
pop
loope
mov
div
aaa
inc
rcl
mov
sub
imul
or
test
sti
repnz
sub
xor
(bad)
jae
fild
aam
fisubr
jl
jbe
mov
das
pop
or
jo
push
xchg
sti
mov
les
lea
int
test
jmp
pop
shl
or
adc
xor
lods
das
hlt
sbb
sub
mov
in
leave
sub
cmp
cmc
fnstsw
push
dec
jmp
push
dec
daa
push
and
add
inc
daa
xchg
ins
cmovb
daa
mov
sub
mov
push
xor
pusha
das
xor
in
loope
xor
jnp
(bad)
mov
in
rol
sbb
not
xor
arpl
xor
call
xor
imul
out
mov
xchg
test
leave
in
mov
(bad)
stos
cmp
push
repnz
mov
xlat
sbb
pop
repz
int
adc
stos
mov
dec
mov
nop
lahf
repz
xor
push
sbb
pop
add
out
ret
stos
leave
dec
xor
int
sar
add
idiv
std
push
aaa
cmps
xor
or
mov
mov
push
ja
pusha
ret
xor
pop
fild
mov
pop
test
adc
push
dec
xchg
push
adc
xlat
adc
data16
jns
or
lods
xor
sub
and
repz
inc
leave
in
sbb
fwait
in
xchg
cmp
mov
pop
mov
ins
adc
mov
cmc
dec
idiv
adc
sbb
repnz
enter
sahf
into
ror
into
lods
(bad)
cmps
push
cmps
je
add
xor
dec
or
fild
xor
dec
inc
jbe
ss
arpl
sbb
and
jl
sar
fwait
push
mov
(bad)
fbstp
sahf
test
stc
loop
inc
je
call
cmp
je
dec
scas
and
sbb
lods
jl
inc
out
mov
shr
aam
push
bound
jne
mov
mov
push
inc
inc
cwde
add
mov
sbb
stos
pop
push
(bad)
cmp
mov
call
mov
mov
loope
push
ror
xor
addr16
imul
mul
(bad)
jb
jbe
cdq
dec
jb
int3
pop
pop
mov
sub
cmc
in
ins
sbb
fiadd
cs
out
aam
(bad)
pop
jecxz
dec
jecxz
popf
mov
push
popa
push
jmp
push
mov
data16
add
(bad)
push
sbb
push
push
valignd
cmps
jecxz
push
gs
xchg
jbe
in
je
pop
arpl
xor
dec
cs
xor
mov
in
lods
dec
fcom
mov
adc
push
jecxz
rcl
cwde
jp
and
(bad)
fs
enter
ins
ja
ins
pop
das
add
out
cmps
adc
or
pop
out
mov
addr16
push
sub
xor
jmp
(bad)
ins
sahf
arpl
jns
sub
popa
(bad)
cmp
push
xchg
push
arpl
adc
inc
pop
cld
in
jbe
and
cmp
pop
bound
xchg
cmp
push
fiadd
fbld
es
adc
push
leave
(bad)
pop
add
xor
and
stos
jno
push
outs
loopne
sti
xor
push
test
mov
push
mov
xor
jnp
or
ds
mov
inc
jae
mov
repnz
pop
dec
sbb
pop
pop
fs
lock
(bad)
cmc
test
mov
mov
pop
jo
or
repnz
sbb
fwait
sub
mov
push
jle
ret
retf
nop
sub
loope
jl
sub
adc
jmp
push
pop
pop
popa
mov
enter
fimul
rol
mov
cmp
dec
cmp
adc
out
xchg
push
push
sub
fnstcw
jp
movs
add
push
adc
pop
or
pop
mov
sub
push
and
and
fld
leave
add
cmp
inc
ret
rcr
fimul
pop
(bad)
in
add
sub
(bad)
sbb
mov
sbb
push
dec
inc
adc
mov
clc
outs
jne
out
aam
push
loopne
pop
mov
mov
cs
mov
in
daa
dec
mov
add
cmp
stos
rol
mov
sbb
outs
jae
jmp
add
sub
loopne
pop
stos
and
cmps
mov
adc
jl
call
dec
xor
jno
dec
cmp
jg
inc
inc
sbb
popa
xchg
mov
push
pop
gs
imul
clc
in
imul
or
sbb
or
jmp
or
(bad)
(bad)
in
in
add
int3
data16
shl
movs
cmps
sar
push
add
addr16
nop
mov
mov
fcomp
cdq
and
fwait
dec
adc
retf
jno
pop
test
pusha
call
dec
mov
loopne
sub
out
cdq
sbb
xchg
stc
dec
fdivrp
push
inc
pop
(bad)
jg
sub
push
pop
jmp
ror
test
jae
jb
push
iret
dec
fnstenv
pop
mov
pushf
pushf
(bad)
clc
adc
add
hlt
or
repnz
xor
cld
cs
mov
mov
sub
lods
or
and
or
add
xchg
sahf
or
imul
ret
into
mov
dec
and
enter
jmp
arpl
add
xchg
movs
fidiv
adc
in
outs
xor
cmp
cmp
mov
ins
push
rol
mov
cmp
loop
pop
call
daa
add
sbb
clc
dec
outs
mov
sbb
jge
mov
(bad)
(bad)
sar
fsub
pop
cmp
aam
and
stos
mov
je
out
scas
adc
aas
dec
arpl
jnp
inc
sbb
sbb
jle
dec
jb
xchg
hlt
fs
xchg
test
xor
cli
adc
add
jp
xlat
mov
or
mov
jmp
dec
dec
ins
je
mov
dec
aaa
mov
jp
in
sub
cmp
fsub
mov
stos
stos
outs
mov
jb
cld
pop
mov
mov
fidiv
mov
test
pop
adc
sub
stos
jmp
jbe
dec
loop
popa
sub
sbb
mov
into
mov
xor
int
repnz
stc
pop
mov
mov
mov
dec
loopne
mov
mov
stos
lahf
scas
mov
cwde
pop
dec
es
enter
mov
jae
scas
inc
cmp
jb
sbb
jae
loope
leave
cs
iret
enter
cmps
push
ins
mov
out
sub
xchg
push
pop
and
cs
mov
xor
mov
or
cmp
push
fdivr
sbb
ret
jbe
add
les
xor
dec
pop
xchg
sub
dec
call
and
mov
lahf
add
fidiv
or
jge
add
outs
nop
ss
ret
and
mov
dec
inc
out
rol
addr16
repz
pop
cmovno
add
js
repz
(bad)
outs
inc
sub
push
jns
adc
inc
mov
fs
aaa
inc
call
pop
mov
comiss
or
arpl
pushf
stos
mul
sahf
movs
sub
mov
jne
icebp
mov
loop
push
ins
mov
test
xchg
cmp
(bad)
fistp
popa
stos
jl
call
push
adc
jge
pop
cmp
loop
adc
push
frstor
pop
adc
add
push
push
lea
push
inc
fcom
mov
jle
add
ins
sbb
jno
add
xor
or
jbe
lods
cmp
xchg
cmp
add
and
sahf
into
dec
inc
inc
jnp
stc
adc
dec
jb
lods
(bad)
or
jno
sub
inc
arpl
inc
pusha
mov
adc
(bad)
fdivr
mov
movs
pop
repz
adc
mov
pop
mov
out
sbb
pusha
push
mov
sbb
pushf
bnd
push
(bad)
lods
add
and
adc
push
add
scas
jecxz
push
jns
mov
or
dec
dec
std
sar
nop
xchg
pusha
jns
mov
mov
rol
lea
dec
add
stos
icebp
jno
gs
dec
call
pushf
out
sbb
dec
mov
repnz
test
mov
jne
out
jmp
add
retf
mov
stc
add
pop
mov
and
dec
fisttp
fadd
data16
jg
xchg
inc
aam
sahf
push
xchg
pop
mov
cs
or
fabs
stc
cli
cmp
inc
dec
inc
sahf
bound
cmp
test
cmp
xor
xor
shr
and
add
retf
(bad)
sbb
push
pop
or
sub
push
aam
cmp
push
shl
movs
retf
and
lea
lea
(bad)
(bad)
shl
fimul
or
jo
and
hlt
or
popf
and
adc
fsub
mov
inc
clc
ins
in
push
popf
cmp
nop
cmp
mov
lods
popf
adc
mov
pop
dec
dec
movs
dec
ja
mov
dec
shld
push
push
in
das
mov
daa
adc
je
xchg
in
das
adc
jae
and
mov
mov
fsub
out
xchg
cmp
mov
and
sbb
xchg
mov
mov
and
in
sbb
push
cmp
mov
mov
test
in
jnp
fld
cmp
call
inc
xchg
shl
lds
les
cmp
loopne
xor
mov
push
les
and
mov
ss
mov
pop
int
mov
mov
mov
pop
outs
icebp
iret
gs
mov
push
and
jmp
cmc
cmps
imul
lahf
mov
imul
and
cs
rol
dec
stc
jl
adc
mov
leave
call
call
cld
push
cmp
cmovb
push
mov
daa
mov
jno
aad
or
in
popa
jne
or
cs
inc
cli
loopne
jmp
push
or
(bad)
call
pop
xor
fmul
jns
int
into
dec
or
sar
cs
aam
sti
or
mov
cmp
aam
fstp
inc
jl
sbb
out
sbb
in
jo
jbe
dec
lods
movs
fwait
xchg
shr
sub
xchg
xor
xchg
clc
fwait
mov
and
xor
dec
xor
call
out
fcomp
cld
and
pop
inc
mov
xchg
push
mov
sti
jge
xchg
inc
cmp
push
or
popf
pop
xchg
fbstp
jno
cmp
test
push
cdq
loope
out
dec
stc
or
lahf
cmp
push
add
sbb
mov
lods
sbb
mov
jl
(bad)
pop
sub
fwait
outs
dec
add
retf
add
push
call
and
sbb
cdq
pop
mov
dec
retf
in
and
or
pusha
and
sub
call
or
mov
je
or
cli
ins
push
mov
jb
mov
icebp
(bad)
jle
inc
add
(bad)
cmp
mov
jns
add
fwait
xor
movs
pop
test
je
test
lods
shr
or
mov
or
cs
dec
pop
fst
aas
and
add
fistp
ret
sbb
pop
cmps
ss
cli
add
neg
jo
call
mov
cmp
adc
pop
lea
leave
into
xchg
adc
iret
xor
hlt
jo
ins
jo
mov
inc
sbb
shl
mov
xchg
mov
test
cmp
fiadd
xor
and
pop
mov
dec
int3
push
cmp
movs
xchg
sub
fadd
and
sub
sti
cdq
aam
inc
pusha
mov
adc
retf
push
push
sar
aaa
lahf
retf
inc
jg
cmp
(bad)
fidiv
enter
and
xlat
loopne
xchg
mov
sub
mov
cmp
sbb
pop
or
xchg
in
stos
fdiv
or
(bad)
adc
xor
arpl
lea
mov
mov
xor
jmp
and
jl
or
mov
push
in
inc
push
stos
ficom
inc
mov
cmp
in
or
scas
stc
xor
in
cmp
test
lods
dec
pop
hlt
sbb
ret
out
xchg
adc
or
pop
jp
xchg
test
adc
cmp
mov
jecxz
adc
int3
xor
or
in
or
enter
loopne
stos
xor
pop
(bad)
and
dec
jnp
or
xchg
aas
and
(bad)
jae
and
aad
outs
sar
pop
cmp
arpl
pcmpgtb
or
arpl
push
sar
xchg
jmp
jne
cmps
sbb
mov
jbe
std
or
rcl
data16
xor
push
vsqrtsd
push
inc
xchg
dec
cli
add
inc
dec
mov
aam
ins
test
ror
call
sahf
int3
je
cs
inc
jno
add
stc
std
xor
xchg
and
jge
add
cld
mov
add
cwde
cwde
push
(bad)
call
push
pop
mov
dec
aaa
and
data16
xchg
int
mov
mov
cmp
dec
xchg
push
or
pop
pop
ins
push
xor
sub
xchg
loope
out
mov
shr
or
mov
stc
jmp
rcr
sub
es
sub
inc
fld
je
adc
xchg
mov
shl
jnp
xchg
jmp
cmp
js
cmp
jbe
adc
lahf
push
(bad)
cmp
and
or
test
shl
loope
test
inc
rol
mov
xchg
pop
jecxz
or
push
sbb
fidivr
scas
popa
in
sbb
movs
movs
sub
lods
jecxz
sar
mov
sti
cld
(bad)
ja
mov
ret
lods
jne
mov
aam
fwait
nop
xor
cmps
movs
fst
xchg
xor
push
popf
cli
std
push
sub
push
fwait
push
in
push
xor
mov
in
int
xchg
sbb
test
in
int3
cmp
pusha
dec
push
aam
test
repnz
inc
or
cwde
es
xchg
mov
push
sbb
rcr
mov
xor
sbb
add
fwait
mov
inc
inc
adc
pmuludq
add
test
pusha
add
push
jbe
fadd
lea
in
mov
retf
cs
adc
pop
stos
push
data16
jg
xchg
push
call
fadd
mov
(bad)
popa
mov
mov
pop
dec
psubw
(bad)
dec
lds
push
sahf
push
sub
movs
mov
inc
inc
jg
sub
sub
sub
popf
adc
and
sahf
adc
and
jno
mov
lods
ins
cmp
lahf
or
jae
cwde
mov
or
jle
adc
fwait
mov
push
not
pop
mov
jbe
sbb
test
add
xchg
(bad)
stos
shr
mov
push
jmp
in
fnstcw
sti
mov
xchg
jmp
dec
stos
pop
mov
aad
fsub
or
lods
jp
mov
aad
dec
adc
ins
mov
and
dec
repz
fist
stos
mov
cmp
das
test
pop
lea
dec
and
imul
fcom
dec
aam
js
xor
ret
icebp
int3
ret
and
and
sahf
into
push
mov
or
pop
call
sub
loope
rcr
outs
gs
mov
xor
mov
xor
mov
addr16
and
add
clc
dec
mov
in
mov
outs
mov
cmc
xlat
cmc
nop
mov
pop
rcl
rol
xchg
ret
mov
clc
mov
dec
push
scas
jmp
test
pop
test
add
inc
dec
push
mov
sub
fnsave
sti
jae
ins
sbb
ror
xchg
out
outs
or
(bad)
push
arpl
retf
mov
push
pop
(bad)
icebp
neg
push
adc
sbb
pop
add
xchg
push
mov
(bad)
fdiv
sbb
inc
and
and
push
mov
and
sbb
mov
adc
enter
sar
test
fcomp
js
lock
mov
gs
pop
fs
leave
test
push
ins
lods
in
dec
mov
sbb
mov
cmc
add
in
xor
inc
test
nop
push
imul
sbb
mov
and
out
inc
icebp
pop
ins
stc
movs
adc
fsub
cmp
push
out
lods
out
inc
add
fdiv
movs
jmp
mov
mov
jmp
cwde
xchg
sub
ja
mov
adc
sbb
ficom
nop
aas
popa
push
cli
mov
push
or
cwde
scas
cmp
outs
pop
aam
inc
rol
sbb
push
jo
aad
pushf
movs
push
inc
add
retf
fisubr
imul
jecxz
mov
fdivr
popf
pusha
xor
movs
addr16
jb
(bad)
gs
cmps
cmps
mov
aad
(bad)
in
mov
pop
fwait
push
inc
sbb
pop
ss
int
jle
mov
push
pop
adc
leave
gs
xlat
dec
jge
push
pushf
cld
sub
out
jmp
test
daa
ins
xchg
repz
popa
sub
pop
fwait
push
inc
mov
jecxz
pop
xor
push
iret
cmp
xor
mov
dec
retf
adc
lahf
imul
aam
jb
cmp
xchg
jnp
inc
int3
mov
out
cmps
inc
push
and
dec
push
repnz
push
or
jmp
cmp
rcl
sbb
add
add
mov
cli
pop
xchg
fadd
out
cmps
rol
test
jl
les
inc
mov
ret
jle
stos
cmp
xor
rcr
mov
fsubrp
push
add
or
cmp
ror
mov
cmp
(bad)
cdq
pop
inc
and
ret
fld
movs
inc
jb
nop
dec
call
pusha
sbb
cli
add
or
fistp
sub
aad
mov
cmps
push
int3
add
ret
mov
adc
movs
shl
in
cmp
cwde
outs
jo
adc
push
pushf
stc
xlat
sub
fisubr
aam
sbb
xchg
jno
(bad)
bound
pop
xchg
rol
adc
xchg
clc
cmp
pop
mov
fimul
mov
pop
mov
imul
sub
xlat
xchg
lea
mov
not
int3
rcr
cmp
je
jns
hlt
xchg
fidiv
sahf
cmp
jnp
idiv
das
outs
mov
cmps
mov
jle
pusha
sbb
add
push
outs
aam
jmp
jb
ret
mov
xor
mov
pop
push
cmp
call
jmp
ja
js
test
dec
into
sti
adc
jmp
add
push
xchg
mov
fst
icebp
aaa
inc
add
push
ins
fstp
enter
movs
xchg
test
dec
cli
je
nop
adc
push
or
ss
dec
adc
dec
mov
xchg
add
push
pop
mov
add
jae
jbe
je
jne
mov
sbb
mov
mov
dec
inc
mov
dec
xchg
sub
vmovups
stos
dec
mov
cmp
lea
loope
mov
push
inc
test
fcom
sbb
push
adc
rol
cmp
ret
and
lea
adc
lods
scas
pop
push
dec
iret
mov
scas
jo
xor
stos
test
push
push
outs
aam
sub
mov
jno
call
xor
lea
add
(bad)
mov
jecxz
sub
pop
retf
popf
lea
cmp
xchg
dec
repz
out
adc
add
add
loope
fwait
mov
fwait
rol
mov
jno
rcr
mov
push
jecxz
cmps
cmp
inc
push
cmp
in
ins
ficom
or
xchg
mov
cdq
es
jmp
arpl
or
sub
outs
aas
inc
xor
mov
mov
fwait
aas
pop
lea
mov
jo
lds
xor
jns
sahf
push
pop
jae
jl
fdivr
test
cld
pop
cmp
loope
test
cdq
pop
sbb
out
jno
addr16
pop
push
scas
aaa
jmp
mov
mov
sbb
ds
pop
out
fist
xor
shr
daa
fwait
stos
pop
mov
repz
cmp
sbb
jge
into
pop
sub
pop
leave
sub
clc
out
lea
push
stos
sub
dec
xor
jg
cs
movs
ins
lahf
jb
stc
movs
xor
iret
scas
mov
outs
(bad)
mov
push
mov
push
or
jecxz
popa
add
out
mov
push
xchg
add
icebp
cmp
cmp
add
cli
rol
daa
loop
sub
inc
dec
(bad)
das
jb
mov
daa
xchg
and
scas
mov
push
cmps
movs
icebp
sub
cli
retf
hlt
add
sub
xchg
out
dec
sub
jecxz
outs
xor
and
pop
xor
adc
aaa
nop
test
cmps
dec
ja
xor
push
dec
(bad)
test
xor
cli
cmc
jecxz
adc
sub
xchg
into
aam
mov
ja
out
into
(bad)
mov
inc
bt
pop
imul
push
rcr
movs
sbb
(bad)
adc
out
adc
das
loope
cs
pop
dec
cvtps2pi
out
imul
add
mov
xor
mov
in
add
or
test
pop
hlt
shr
jp
lahf
rcl
aad
ins
ins
add
sub
jmp
out
dec
addr16
dec
daa
dec
ja
(bad)
ficom
xchg
fisub
ficom
clc
mov
adc
push
sub
movs
pop
dec
mov
push
inc
xchg
pop
in
jp
mov
xchg
xor
call
pop
call
cmp
jle
loopne
test
and
jle
pop
inc
mov
repz
scas
jae
jecxz
push
pushf
in
push
adc
ins
sub
pop
push
pop
fist
loop
jge
ins
sahf
and
sbb
not
adc
xchg
int
mov
pop
or
cli
cs
ret
jl
sub
jmp
call
test
int3
and
out
stos
push
cmp
gs
pop
inc
jae
mov
jno
fcom
loope
stc
shr
xchg
add
jns
sub
arpl
mov
xchg
xchg
or
ds
xchg
jns
call
dec
mov
sbb
push
cmc
adc
mov
loopne
rsqrtps
inc
mov
jp
les
jmp
xor
pop
jmp
lahf
sub
jge
cmp
mov
sub
inc
jge
cdq
mov
jne
or
ds
inc
shr
test
neg
and
adc
retf
dec
sbb
or
xchg
dec
or
push
sti
les
fdivr
jl
xchg
dec
inc
dec
push
hlt
repnz
stos
in
pop
in
outs
scas
sbb
xchg
mov
out
out
dec
mov
test
push
repnz
and
test
inc
sub
mov
icebp
not
into
xor
pop
bound
int
bound
or
std
adc
jp
and
(bad)
and
ret
movs
inc
xchg
enter
(bad)
cli
(bad)
mov
fldl2e
push
mov
in
dec
jno
cmp
arpl
mov
lea
mov
mov
mov
inc
mov
ret
inc
push
xor
scas
jae
repnz
stos
pop
test
dec
jmp
arpl
mov
xchg
ins
pop
jno
cmp
inc
shl
fsubr
cmps
out
cmp
jne
sbb
xor
repz
mov
enter
jo
pop
lods
jecxz
mov
dec
push
inc
in
inc
imul
fbld
fs
fist
fdiv
xor
push
aas
aam
leave
cmp
or
call
sub
sahf
fnstenv
int
dec
(bad)
sbb
inc
test
sub
pusha
test
push
inc
fcmovne
xor
pop
in
ins
mov
push
push
lea
and
pop
out
push
and
adc
sub
fwait
jge
pusha
cli
mov
dec
hlt
into
mov
pop
mov
pop
jb
cmps
aaa
inc
sub
idiv
fcmovnu
cwde
out
mov
mov
add
dec
(bad)
pop
jle
ror
pop
jmp
pusha
pusha
jl
les
out
add
jp
push
push
mov
xor
stc
cld
aaa
sub
mov
xor
outs
fwait
aam
pop
call
cmp
outs
mov
scas
xor
addr16
das
mov
cmp
popf
adc
pusha
pop
dec
aam
sub
xchg
js
jns
ss
hlt
arpl
mov
dec
retf
jmp
daa
mov
xor
out
cmps
aad
jne
ins
ins
cmp
test
inc
dec
in
inc
std
add
xchg
pop
push
ins
loop
int3
bound
fistp
add
leave
add
shl
pop
sub
mov
push
mov
stc
loope
sbb
dec
add
add
jecxz
push
push
push
dec
xor
xor
(bad)
imul
es
push
push
movs
adc
pop
mov
inc
mov
out
adc
das
aam
aaa
push
ror
out
jmp
mov
cmps
fdivr
jmp
repz
inc
xchg
sahf
movs
and
sbb
loope
push
fisttp
adc
loopne
and
stc
mov
mov
xchg
sub
fisub
stos
mov
addr16
lds
out
fisubr
mov
or
and
push
sbb
mov
sub
nop
test
xchg
ins
fldenv
push
icebp
(bad)
cwde
sbb
js
xlat
daa
dec
push
push
pop
out
and
int
xchg
mov
arpl
xor
or
out
inc
pop
movs
popa
or
xchg
inc
mov
jmp
fst
xchg
call
bound
pop
repz
jle
push
stos
add
push
sub
ss
and
hlt
sub
sub
gs
fs
sub
adc
cld
int3
aas
sub
mov
xor
add
loopne
ror
mov
mov
cmc
fwait
test
es
imul
push
xor
pop
mov
pop
iret
dec
fstp
es
in
test
cmc
add
shr
and
sbb
test
jl
adc
sbb
sbb
jecxz
dec
add
daa
shr
adc
mov
pop
or
adc
retf
das
jge
not
mov
mov
ss
or
lods
sbb
out
outs
(bad)
andnps
mov
sahf
xchg
icebp
jo
and
add
in
pop
rcr
mov
push
cmp
popa
fild
jge
cmp
retf
repz
jmp
or
dec
inc
outs
or
cmp
xchg
dec
cld
test
std
lea
or
sub
push
jmp
or
rcl
loope
(bad)
fld
arpl
xchg
retf
inc
add
outs
fisttp
jne
mov
pop
addr16
adc
sbb
lock
scas
popa
fnstenv
or
(bad)
mov
mov
jne
adc
mov
mov
mov
hlt
fwait
xchg
dec
movs
mov
movs
fldenv
out
xor
mov
or
sti
loopne
xor
cmp
and
or
call
dec
mov
pushf
cs
push
xlat
dec
test
mov
pop
mov
xor
popf
dec
cmps
aad
lods
pop
sbb
repnz
inc
pop
jo
daa
xchg
or
loop
sbb
push
sahf
loopne
call
inc
xlat
ins
repnz
adc
(bad)
repnz
mov
cmp
sub
sbb
push
sar
pusha
outs
enter
std
or
add
cmp
dec
jmp
inc
and
das
out
outs
(bad)
or
arpl
cwde
(bad)
pop
add
pop
xchg
push
cmc
push
retf
repz
or
xchg
adc
mov
test
ret
pop
add
pushf
je
das
jl
(bad)
sbb
stos
xchg
xchg
call
test
adc
in
mov
mov
test
and
sti
add
(bad)
push
add
fbld
dec
aas
jge
idiv
in
test
not
mov
gs
ja
xor
clc
inc
adc
mov
pop
call
push
mov
inc
pcmpgtb
mov
mov
push
loope
xlat
repnz
data16
movs
ror
(bad)
pop
mov
or
scas
mov
sbb
shl
aas
imul
push
mov
inc
pusha
push
sub
imul
jno
xchg
sbb
mov
push
xchg
jmp
lods
jg
cmc
xchg
fwait
outs
jmp
ins
pop
shl
mov
ret
xor
cmp
add
nop
aas
push
jp
jle
ss
mov
in
lea
call
test
jg
push
mov
icebp
sbb
mov
outs
fcomp
cdq
adc
out
loop
std
cmps
jne
je
ins
test
sti
xchg
shr
mov
xchg
add
push
xchg
cmp
add
cld
fist
sahf
rcr
push
shr
(bad)
push
mov
mov
in
arpl
aaa
sbb
inc
loop
je
addr16
pop
stos
gs
ins
mov
aas
popf
cmps
push
jmp
jge
xchg
pop
adc
(bad)
cli
retf
and
int
and
shl
push
(bad)
es
jno
mov
lds
jg
scas
cmp
push
mov
push
cmc
xor
jnp
in
xor
cmp
xchg
pop
pop
mov
and
xor
lds
sbb
pushaw
dec
jecxz
sbb
(bad)
cmp
scas
(bad)
sti
xor
inc
push
sbb
aad
test
gs
inc
mov
dec
push
cdq
xchg
and
int
adc
sar
pop
cmp
mov
jmp
jecxz
test
and
fdivp
cmp
push
call
pushf
jne
ret
xor
pushf
dec
add
adc
daa
and
es
das
das
pop
hlt
or
loop
mov
call
push
in
cs
adc
sbb
adc
pusha
sbb
cs
push
in
dec
or
inc
imul
xlat
sbb
push
mov
push
xor
push
adc
inc
test
adc
dec
leave
cld
or
rol
ja
in
rol
jp
adc
shl
out
rcr
jmp
mov
inc
shr
inc
ins
push
mov
cmp
xchg
push
test
dec
stc
cs
and
jecxz
test
push
test
pushf
test
int3
mov
xor
in
cmp
pop
xlat
and
xor
fsubrp
xchg
fidiv
cwde
scas
or
adc
adc
dec
into
mov
lods
or
fcmovb
mov
jecxz
jns
and
loope
ss
pop
sub
pop
test
xchg
cmps
xor
loop
inc
mov
mov
adc
mov
jl
sbb
cmp
mov
mov
stc
cdq
addr16
xor
mov
jge
iret
push
add
mov
stos
in
ja
jmp
mov
xchg
adc
(bad)
mov
inc
fwait
xchg
sahf
mov
xchg
lods
scas
push
clc
sbb
cmp
pusha
jmp
sbb
mov
push
enter
imul
and
pop
xchg
jl
gs
imul
aas
mov
scas
push
imul
push
add
pop
xchg
retf
fsubr
xor
dec
mov
ja
mov
jmp
cdq
xchg
adc
fdiv
push
push
cli
test
and
and
lock
movs
sub
shr
in
dec
pop
mov
loop
cmp
rcr
dec
sar
fwait
das
push
(bad)
aas
pop
xchg
xor
and
fimul
sub
and
push
repz
int3
mov
dec
pop
(bad)
sbb
cmp
inc
jg
jnp
and
cmp
or
imul
sub
push
into
or
loop
adc
mov
jl
inc
sub
aaa
dec
je
cmp
mov
lds
pop
orps
xchg
lea
push
jmp
in
clc
jg
cmp
add
fidivr
rcr
call
stos
mov
or
lods
imul
imul
test
repz
lahf
sbb
xchg
inc
fisub
shr
xor
xor
movs
sub
dec
inc
dec
cmps
pop
popa
lea
pop
dec
mov
sbb
jg
std
sbb
mov
call
sub
jmp
push
movs
cmp
or
pushf
shl
pop
stos
mov
jae
nop
int3
jno
shl
jmp
adc
sar
int3
pop
cwde
neg
jmp
xchg
pop
popf
repnz
arpl
mov
pop
push
push
jae
mov
test
push
stos
into
xchg
stos
cmc
push
sar
lock
add
mov
sti
das
cmp
add
sbb
scas
mov
and
xor
fwait
cmp
push
inc
adc
push
ficomp
je
(bad)
mov
sub
idiv
sub
inc
int3
jae
aad
jge
fcomp
xchg
pop
neg
jp
mov
in
jnp
cmp
cmp
iret
mov
push
jns
dec
fld
outs
sbb
and
adc
in
test
js
fwait
inc
retf
gs
add
mov
pop
aad
hlt
fcom
lea
mov
jecxz
jns
movs
pop
push
adc
and
xchg
aaa
lea
in
pop
aaa
mov
mov
sbb
retf
into
xor
data16
cli
mov
xor
mov
je
pop
loope
inc
mov
and
xor
xchg
add
test
jge
mov
pop
adc
cmp
lods
stc
cmp
aam
cmps
jae
and
mov
cmp
jmp
pop
jle
push
mov
push
int3
push
fwait
xor
(bad)
cmp
leave
pop
lahf
push
popf
sti
cdq
rcl
jns
add
pop
mov
lods
mov
stos
cmc
add
pop
vpsrad
push
mov
adc
push
xchg
fwait
call
mov
lahf
sbb
(bad)
aaa
test
jmp
inc
test
sub
mov
sub
out
cmps
sub
fwait
inc
ds
mov
or
cmp
cs
xchg
sar
outs
jmp
int
stos
pop
jl
out
js
shl
retf
mov
mov
mov
aaa
movs
xchg
lea
aad
mov
icebp
dec
out
shl
mov
sar
call
xor
mov
fisubr
gs
mov
movs
into
dec
mov
mov
add
shl
fmul
je
dec
rcl
or
sub
lahf
into
xor
cmps
popa
adc
pop
mov
mov
fnsave
mov
sti
loope
add
(bad)
in
das
mov
repnz
push
push
cwde
or
(bad)
idiv
cmp
mov
adc
out
stos
fwait
popa
or
lahf
xchg
pop
std
inc
fsub
leave
or
enter
ja
not
cs
mov
pop
dec
scas
jge
stos
mov
mov
dec
ds
scas
mov
adc
in
lea
sub
loopne
mov
jle
rcr
push
inc
mov
icebp
int3
cdq
loop
dec
inc
sar
pop
cmp
loopne
iret
push
icebp
jnp
outs
xor
jo
mov
stos
std
out
pop
sbb
mov
pushf
jne
add
ret
sub
jnp
xor
xchg
repz
retf
ret
inc
mov
gs
mov
loop
adc
imul
inc
jnp
dec
dec
cmp
push
push
and
or
out
fucom
cmp
xlat
pop
repnz
and
lahf
ins
into
xor
mov
test
popa
jge
sbb
mov
inc
dec
mov
add
dec
daa
jns
test
push
jae
xor
cmp
movs
sbb
retf
idiv
and
fld
outs
fldenv
or
mov
leave
enter
push
push
fistp
call
and
(bad)
std
out
(bad)
call
jl
icebp
mul
in
jnp
xlat
(bad)
add
ins
mul
cli
xor
push
sub
cmp
ds
test
push
jbe
add
adc
retf
and
test
push
add
pop
or
pop
xlat
jl
jl
vandnps
int3
int3
push
inc
sti
test
jbe
iret
jcxz
adc
cli
cmp
pusha
sbb
cmp
cli
xchg
shl
push
xchg
stos
lds
leave
out
fs
push
repnz
or
ins
sbb
mov
sbb
push
in
mov
push
cli
mov
adc
dec
mov
pop
sbb
div
imul
movs
jo
inc
cmp
or
nop
cdq
mov
mov
inc
cmp
pop
scas
out
mov
cmp
add
shl
shl
fcomp
loope
or
jmp
mov
dec
fild
shr
lea
bound
mov
add
and
fs
cmps
xlat
jl
jecxz
mov
inc
movs
retf
in
xor
or
mov
or
fs
mov
dec
icebp
int
xor
adc
sub
xchg
imul
imul
mov
inc
jae
and
and
dec
mov
ins
test
popa
mov
aad
add
push
adc
out
(bad)
xor
iret
sub
sbb
lock
iret
sub
jl
pop
xchg
(bad)
in
(bad)
and
push
test
pop
(bad)
jge
xchg
cmp
mov
jnp
mov
mov
or
cmps
xchg
push
into
test
icebp
and
xchg
sub
lds
or
ds
jmp
mov
cs
inc
fcomp
mov
fwait
je
lods
fs
jae
clc
clc
xor
das
lods
xor
pop
popf
fst
je
clc
test
imul
stos
add
imul
je
dec
push
cmp
ret
shl
or
cmc
xchg
or
jne
mov
sub
loopne
dec
and
inc
ins
pusha
mov
push
inc
test
and
inc
rcl
mov
add
lds
mov
xor
ret
cwde
clc
xchg
les
cmp
pop
sahf
mov
add
rcl
jge
or
outs
data16
sahf
repz
cmp
in
lds
stos
pop
stc
xor
xchg
hlt
repz
mov
cmp
inc
cs
fs
imul
(bad)
xchg
in
mov
sti
mov
xor
in
out
sub
das
xchg
push
out
sti
clc
mov
outs
and
mov
loopne
lds
sub
and
bound
inc
pusha
and
dec
je
call
sbb
lahf
xor
or
and
jnp
sub
adc
retf
clc
mov
je
sbb
sbb
jo
ror
sub
jle
mov
or
sahf
inc
(bad)
dec
xchg
fidivr
inc
out
out
fnsave
ins
cmps
dec
cmp
pop
or
lock
cmp
adc
sti
ffreep
jnp
dec
lea
jae
js
imul
xor
xlat
out
push
xchg
xchg
jg
rcr
out
mov
sub
or
and
push
add
pop
fst
mov
addr16
sbb
pop
mov
int
sub
sbb
mov
lea
sub
inc
addr16
outs
aam
test
sub
(bad)
rol
idiv
jo
fld
cmps
jl
xchg
sti
scas
call
adc
push
mov
xor
sbb
mov
aaa
jns
xchg
mov
ins
fcmovbe
or
add
aam
inc
enter
push
push
cwde
inc
je
fiadd
jae
pop
jge
or
mov
add
pop
xchg
xor
mov
jno
jmp
or
mov
or
shr
mov
dec
xchg
mov
mov
outs
jle
sub
addr16
adc
ror
cs
movs
dec
(bad)
push
sub
scas
push
(bad)
jp
lds
xor
sbb
into
scas
cmc
enter
mov
out
cwde
out
daa
dec
or
pop
(bad)
xor
add
shr
push
jno
sbb
jne
enter
or
ja
push
cpuid
stos
lods
adc
repnz
jge
pop
xchg
xchg
shr
cld
(bad)
fst
shr
jb
mov
add
clc
ret
test
jno
dec
sbb
enter
mov
pop
push
int
int
mov
push
(bad)
int3
jecxz
imul
mov
(bad)
cmp
mov
int
dec
aad
xor
lea
adc
lods
xchg
in
sahf
mov
sbb
sbb
(bad)
fsub
movs
repnz
dec
jmp
adc
inc
jmp
repnz
mov
cli
and
mov
in
pop
outs
scas
test
push
ds
mov
(bad)
pop
and
mov
je
sar
movs
sub
pop
(bad)
or
popa
and
push
stos
mov
icebp
leave
mov
fstp
xchg
pop
mov
dec
test
addr16
fild
iret
aas
xor
lea
sbb
jnp
call
push
jg
mov
jle
jmp
push
aad
xor
push
arpl
xor
pushf
adc
loope
std
mov
jnp
fsub
cmps
mov
cmp
in
hlt
push
dec
dec
mov
pop
stos
xchg
lahf
push
xchg
enter
das
mov
retf
rcr
(bad)
adc
cs
ss
sbb
rcl
mov
add
xlat
adc
rcl
movs
cdq
add
rcr
pop
mov
ds
(bad)
(bad)
adc
lock
jnp
loop
add
xor
pop
xchg
js
sub
push
in
sbb
(bad)
push
inc
fdivr
enter
mov
pop
dec
shl
stc
fs
adc
ins
and
inc
mov
cmps
popa
mov
jp
pop
ins
dec
jbe
jle
cli
xrelease
into
xlat
mov
mov
das
xor
outs
idiv
jmp
inc
cli
adc
jae
dec
movs
pop
xchg
mov
out
mov
and
ret
push
mov
pop
jae
fiadd
push
xchg
cmp
xchg
inc
daa
shl
lds
sbb
rcr
xchg
test
or
outs
(bad)
dec
mov
xchg
rcl
shl
gs
dec
mov
aaa
or
movs
cmp
push
jno
add
cmp
sbb
dec
or
lock
mov
out
or
lahf
arpl
aad
fsubr
jo
push
mov
push
jmp
repz
dec
push
xchg
dec
add
popa
inc
add
push
fstp
mov
aas
or
inc
out
out
cmps
push
sub
push
ss
cwde
mov
push
fidivr
ret
push
ins
cs
aad
imul
mov
jae
add
push
popf
jmp
xchg
lea
lahf
cs
mov
add
mov
jno
movs
mov
cmp
fwait
shl
out
aaa
add
repnz
jo
and
inc
mov
icebp
cs
test
mov
gs
fld
sub
mov
dec
inc
test
fldcw
je
rcr
cmps
loopne
out
adc
jmp
daa
sub
sbb
cdq
xor
inc
jmp
pop
cmps
sti
in
cld
pop
mov
mov
push
push
movs
js
movs
xchg
fwait
jmp
loop
rol
hlt
adc
arpl
ret
iret
mov
nop
movs
jmp
rol
push
mov
mov
popa
call
mov
xor
mov
pop
add
mov
cmp
jae
jecxz
push
addr16
push
adc
ins
inc
mov
and
push
mov
jns
mov
jo
hlt
js
pop
pop
xor
mov
xor
es
jp
es
sub
or
sbb
jb
arpl
adc
dec
mov
imul
inc
gs
ja
jns
dec
mov
jg
xor
into
iret
push
add
push
or
adc
pop
xlat
add
test
jbe
or
xchg
not
dec
dec
(bad)
aas
pop
stos
fucomip
jno
add
cmp
ja
shl
xchg
dec
ret
sbb
(bad)
ins
stos
mov
retf
pop
xor
iret
xor
fcom
xchg
inc
mov
fdiv
pusha
and
jae
mov
std
mov
mov
rol
retf
add
jns
test
in
(bad)
sbb
ins
das
push
hlt
ins
imul
cmp
cmp
xlat
call
mov
mov
pop
mov
fsub
xor
sub
(bad)
sbb
out
mov
sbb
or
mov
arpl
pop
dec
bound
pop
xor
or
leave
mov
hlt
sar
fadd
adc
mov
jmp
cmp
enter
fs
pop
in
jg
jno
cmps
test
jno
inc
mov
in
cpuid
sahf
(bad)
data16
mov
sbb
jno
xor
(bad)
jp
sub
shl
rcr
lock
and
sub
lods
jmp
es
jnp
lods
ss
(bad)
in
adc
aas
retf
or
adc
cld
test
pop
mov
in
xor
or
or
loop
xor
push
xor
inc
sbb
shl
jp
cmp
xchg
test
xlat
sbb
jb
pop
sub
js
jmp
and
push
dec
add
push
in
arpl
inc
inc
in
adc
fsub
jns
stos
aas
dec
dec
scas
retf
ficom
cmps
fdiv
js
cmps
iret
fisub
xchg
inc
in
sbb
or
pop
xchg
jns
out
lods
bound
mov
arpl
cli
call
jl
vpshufd
hlt
adc
das
sbb
sub
sbb
add
dec
in
fwait
mov
add
repz
ror
js
ret
sub
sti
jns
repnz
mov
dec
push
jmp
jns
pop
xchg
in
adc
cwde
mov
lahf
mov
shl
bound
scas
nop
fimul
fbstp
xor
pusha
mov
cs
stos
sub
mov
int3
xchg
xchg
retf
cmp
shr
cmp
out
dec
lock
cwde
xchg
push
xlat
arpl
cmps
lods
sar
shl
(bad)
mov
xor
out
inc
inc
mov
dec
ja
jmp
mov
test
(bad)
in
mov
mov
fcmovne
sub
test
pop
aaa
je
jne
push
xchg
pusha
push
adc
mov
push
sbb
loopne
adc
fild
add
mov
in
push
outs
sar
xor
rcl
jmp
xchg
dec
xchg
push
mov
or
xlat
dec
bound
fistp
push
repz
push
push
cmps
ret
gs
sbb
xor
xor
sbb
xor
cld
jmp
cmp
dec
rol
or
push
xchg
hlt
inc
adc
repz
daa
pop
push
mov
dec
jb
mov
sbb
sbb
imul
inc
adc
and
adc
add
aas
push
adc
(bad)
in
jae
gs
cmps
sbb
retf
inc
push
stos
imul
jno
in
jmp
jg
adc
jne
es
scas
mov
pusha
dec
pop
xchg
sbb
pop
mov
pop
movs
ror
pop
and
lods
subps
mov
js
push
jnp
stos
push
scas
sbb
imul
loopne
mov
xlat
mov
popa
or
pop
jmp
inc
ja
es
or
cdq
or
dec
imul
test
cdq
mov
cmp
sub
jmp
(bad)
sbb
xor
test
shr
cmp
add
out
xor
sbb
jmp
ret
test
mov
mov
cmp
jmp
dec
in
pusha
lea
add
pushf
xchg
sbb
xchg
push
jge
add
and
jmp
repz
loopne
mov
jg
lahf
inc
sub
mov
call
int
retf
and
dec
inc
retf
mov
cld
or
je
push
inc
sub
cmp
rcr
sub
xor
adc
mov
pop
xchg
sbb
ja
sti
pusha
in
dec
sbb
mov
mov
adc
mov
pop
imul
jp
in
or
sar
or
fst
cdq
mov
push
jmp
mov
pusha
mov
nop
ins
lahf
mov
mov
jge
pop
jp
mov
pop
adc
jno
rol
gs
enter
jle
inc
loopne
jns
cmps
inc
enter
sar
sub
push
imul
dec
cmc
jl
lea
retf
shl
mov
into
mov
add
lods
jnp
add
aaa
mov
hlt
pop
cmp
sub
and
test
pop
xor
pop
jle
shr
xchg
in
div
xor
and
movs
xor
sti
pushf
icebp
lds
or
inc
ins
inc
(bad)
out
inc
fs
push
adc
xor
in
adc
fadd
ins
mov
mov
inc
outs
retf
aam
ins
cs
repnz
cli
pop
lds
clc
bound
fs
or
xor
in
dec
neg
mov
adc
adc
retf
or
scas
mov
adc
and
sti
add
xchg
push
xchg
push
lods
cmp
sub
fcmove
xchg
repz
sub
jecxz
sbb
add
push
sahf
fcomp
loop
jmp
mov
mov
mov
cmc
rcr
cmp
stc
ror
xor
movs
mov
sbb
fnsave
mov
sbb
jl
(bad)
mov
retf
(bad)
fistp
xchg
pop
(bad)
push
adc
mov
stc
sub
jno
cwde
test
jne
dec
or
mov
mov
inc
in
inc
pop
mov
mov
mov
data16
push
pop
sbb
fistp
and
retf
or
add
dec
retf
mov
sub
repnz
or
xchg
xor
(bad)
pop
ret
push
sbb
add
xchg
adc
cmp
test
cmps
fs
pop
dec
repz
imul
adc
rcr
pop
push
push
cmp
fld
inc
inc
shr
test
push
shl
xchg
into
ret
neg
push
daa
std
cmp
sub
xchg
icebp
inc
stos
hlt
jmp
pushf
enter
dec
stos
or
add
pop
xchg
out
xchg
repnz
sar
bound
jecxz
ds
pop
pop
(bad)
sti
xchg
add
cwde
outs
adc
jbe
xlat
push
jo
and
ins
pop
mov
mov
and
sbb
outs
or
push
push
jge
xchg
imul
fs
lahf
or
scas
mov
arpl
inc
in
xor
jmp
xor
dec
add
pop
xchg
xor
mov
cmp
js
jo
fwait
aam
fbstp
mov
lods
outs
push
pop
inc
inc
mov
retf
and
movs
(bad)
idiv
sub
xor
cli
int
and
add
mov
xchg
pop
dec
xchg
cdq
dec
dec
(bad)
lock
les
outs
mov
cli
lods
enter
push
adc
call
cmp
mov
(bad)
rol
sahf
fcom
sbb
xor
outs
mov
push
cmp
pop
data16
scas
xchg
pop
mov
pushf
inc
addr16
stos
sbb
pop
test
cmp
jg
add
les
fdivr
out
pusha
sbb
pop
imul
or
sub
(bad)
pop
hlt
sub
lods
lea
pop
push
sub
leave
add
and
add
call
mov
mov
mov
mov
xchg
fwait
icebp
stos
enter
add
ret
mov
nop
push
mov
jb
jnp
jmp
xchg
cmps
mov
dec
ret
ror
(bad)
in
int
sar
or
(bad)
xor
mov
(bad)
lahf
and
dec
hlt
mov
pop
jbe
out
pop
jp
jl
push
mov
mov
dec
and
shr
enter
sub
fbstp
clc
push
neg
jbe
mov
xchg
mov
xor
sbb
loope
in
pop
add
xor
cmps
mov
mov
ins
cmps
add
les
mov
movs
shr
xchg
es
jnp
mov
and
push
clc
fwait
inc
arpl
jg
ja
(bad)
sub
shl
jb
out
xchg
pushf
aaa
jae
mov
inc
inc
sbb
adc
sbb
push
jno
nop
dec
pop
inc
jae
or
or
cdq
pop
xchg
inc
pop
popa
sub
icebp
ret
push
mov
adc
cwde
xchg
xchg
mov
fisub
xchg
xor
test
cmp
mov
sahf
or
aas
and
addr16
push
loopne
cs
sub
retf
mov
adc
cmps
enter
jae
in
outs
and
aad
xchg
imul
jne
push
pusha
fnstcw
xor
lfs
repz
sbb
pop
cmp
cmc
stos
(bad)
mov
adc
push
in
push
daa
xchg
cmp
add
(bad)
movs
inc
jno
sub
pusha
retf
push
movs
fcmovnb
lds
xchg
push
push
xchg
dec
cmc
xchg
push
dec
add
(bad)
add
mov
dec
dec
push
lods
call
and
repnz
adc
pusha
push
mov
(bad)
cmps
aaa
inc
mov
mov
xor
mul
lods
xchg
push
icebp
jl
sbb
mov
mov
mov
mov
mov
jle
ins
xor
into
aam
stc
es
jnp
mov
repnz
leave
aas
or
iret
mov
fnstsw
add
not
int3
add
xor
and
sbb
test
pop
and
xor
dec
push
sbb
sar
ret
lock
jmp
push
pusha
fcmovb
mov
add
xor
add
inc
pop
inc
jmp
in
pop
movs
sbb
shr
jns
imul
pop
test
or
call
loope
xor
push
es
push
imul
push
mov
das
inc
retf
clc
mov
popa
pop
(bad)
into
xchg
aam
lods
repz
fcomi
mov
pop
sub
addr16
out
sub
sbb
into
jle
pusha
pop
cmp
fwait
ss
cmc
call
nop
outs
add
mov
int3
sub
push
pop
mov
and
jo
das
jno
enter
in
mov
int
jne
pop
mov
xchg
ds
imul
scas
sub
push
jo
ins
sub
jnp
hlt
fidivr
xor
int3
out
pop
mov
out
int
popa
lds
mov
mov
push
sub
cmp
xlat
ror
push
hlt
ins
into
jbe
test
sub
push
data16
cmp
jge
cdq
cwde
adc
fcmovne
cmc
add
(bad)
test
int3
pop
stos
cmc
add
mov
cmps
stos
rcl
pusha
cs
xor
jmp
mov
xchg
sbb
in
push
sub
sti
cli
inc
or
jge
mov
les
sub
dec
push
xor
add
mul
into
out
in
dec
movs
mov
pop
hlt
xlat
dec
pop
add
and
out
xlat
es
fild
sbb
daa
inc
mov
dec
dec
cwde
or
jecxz
loope
sti
sub
jle
sub
push
out
sbb
fwait
dec
and
out
pop
mov
jp
jecxz
jg
mov
stos
fwait
sti
fcomp
sahf
repnz
(bad)
mov
scas
shl
(bad)
jecxz
sub
popf
xchg
push
mov
push
sahf
push
add
sub
popa
jmp
cmc
add
(bad)
out
mov
rol
aas
mov
adc
adc
xchg
or
jbe
lock
in
repz
fwait
in
cmp
mov
js
fiadd
rcl
stc
adc
imul
add
lods
push
jle
cwde
aam
or
(bad)
xor
jecxz
clc
and
test
call
push
adc
and
cmp
sbb
int3
popf
sub
mov
sti
std
out
adc
jnp
loopne
sbb
sub
mov
cli
fwait
xlat
(bad)
in
xor
ds
xchg
arpl
outs
out
mov
inc
xchg
out
mov
cwde
stc
push
cmp
dec
aas
mov
neg
inc
fidivr
sbb
out
scas
shl
push
mov
xor
jnp
aaa
add
lahf
stos
inc
pop
mov
add
push
jp
cmp
sub
cmps
push
xor
je
sub
adc
lds
jg
loop
mov
loope
loopne
cmp
lds
jmp
pop
pop
(bad)
retf
shr
xchg
int
push
mov
pop
addr16
pop
lods
fcom
pop
mov
in
and
pop
adc
sbb
jne
bound
mov
(bad)
mov
sub
dec
lds
mov
mov
push
xor
pop
fucomp
outs
loope
jge
sub
pushf
fdivr
mov
mov
test
loop
leave
fimul
sar
retf
pop
add
inc
aaa
xor
retf
pop
mov
retf
add
fcomp
ret
ficom
cwde
push
xor
mov
repnz
jg
jbe
or
adc
ror
gs
(bad)
fdiv
data16
xchg
inc
hlt
adc
adc
pop
ds
(bad)
pop
pop
adc
hlt
cmc
movs
inc
repz
test
mov
sub
sub
in
inc
rcr
pushf
sahf
adc
jl
mov
jp
sti
fwait
xchg
mov
not
mov
sub
test
fwait
out
inc
das
(bad)
dec
sti
loop
mov
push
enter
fadd
inc
mov
mov
push
mov
adc
mov
rcr
iret
iret
mov
mov
add
xor
cmp
sub
mov
mov
in
(bad)
lahf
lahf
jle
jne
scas
push
ret
in
xchg
sub
imul
popa
int
and
ss
xchg
sbb
mov
fdivr
mov
inc
xchg
rep
js
jb
cmps
push
sbb
(bad)
push
sub
mov
lahf
mov
jo
leave
jg
push
shl
push
or
cmp
movups
out
scas
dec
inc
int3
jno
sub
mov
sub
sar
dec
dec
test
mov
fwait
(bad)
or
jnp
adc
cmp
mov
jns
cmp
aaa
adc
jno
push
jo
scas
dec
mul
scas
jb
dec
aas
scas
xor
pusha
and
ret
fwait
rcl
bound
jp
cmp
test
push
enter
and
jp
xor
ss
mov
pop
mov
jp
push
push
dec
in
add
push
push
xchg
pushf
int
pop
xor
retf
fnstcw
jne
jl
enter
daa
in
sub
jne
scas
test
inc
push
dec
add
jb
ret
movs
unpcklps
addr16
or
frstor
pop
cmp
and
cs
pop
aam
test
dec
ficomp
test
and
push
stc
packsswb
xchg
mov
loop
push
fbld
scas
push
stos
mov
pushf
out
das
mov
cwde
and
and
ret
(bad)
push
out
dec
fcomp
call
jge
jne
lods
add
cmp
fsubr
jbe
jle
mov
dec
imul
imul
jg
hlt
push
xor
xchg
ss
sub
xor
mov
daa
(bad)
mov
mov
push
movs
stc
dec
(bad)
ss
jp
xor
mov
shl
xor
leave
lea
outs
test
fs
retf
cmp
retf
and
fnsave
fnstcw
ret
dec
mov
xchg
les
icebp
ror
gs
inc
mov
repz
rcl
das
inc
and
xlat
les
out
sbb
pop
cmp
test
xchg
fnsave
adc
(bad)
mov
mov
pop
imul
fld
stos
in
outs
rol
xor
jno
xchg
loop
jecxz
cmp
inc
xor
push
(bad)
daa
mov
test
imul
(bad)
mov
push
test
jae
xchg
retf
sbb
mov
lea
adc
jno
(bad)
sub
sub
add
jecxz
sub
mov
or
jb
mov
xlat
stos
add
jne
test
test
adc
int
pop
mov
nop
pop
push
xor
xchg
mov
mov
jbe
(bad)
push
data16
call
jl
test
and
lahf
leave
repnz
rol
aam
(bad)
mov
push
jmp
jl
inc
jl
lahf
aas
fbstp
mov
add
mov
mov
mov
push
stos
push
outs
lea
mov
xchg
daa
test
adc
cmp
push
stos
cmp
cmove
mov
retf
ins
mov
in
ja
addr16
imul
jae
inc
(bad)
mov
lahf
mov
cwde
dec
fs
add
lds
js
push
pop
jle
mov
sbb
es
mov
push
mov
pop
mov
out
sub
(bad)
cld
int
mov
sbb
push
cs
clc
mov
popa
or
and
(bad)
xchg
fadd
pop
pop
outs
sar
xchg
neg
sti
inc
mov
push
add
mov
mov
shl
sub
dec
mov
mov
ficomp
pusha
imul
les
imul
dec
fcomi
and
imul
mov
js
cmp
xchg
mov
lods
fdiv
add
adc
fcomp
outs
push
out
stos
outs
add
pushw
into
int
arpl
mov
clc
pusha
mov
add
lock
mov
cs
adc
sub
inc
cmp
dec
clc
popf
hlt
and
scas
btr
jmp
test
jmp
dec
and
call
add
jmp
sahf
mul
xor
xchg
mul
xchg
inc
sahf
(bad)
aas
xchg
retf
sub
lock
popa
xchg
sub
ret
fidiv
sbb
and
cmp
mov
test
pop
push
mov
pushf
fdiv
or
mov
xor
inc
jbe
fdiv
dec
push
inc
inc
out
jnp
test
xorps
or
loopne
jmp
sub
cwde
and
push
aad
outs
sbb
add
or
in
jbe
and
stos
mov
inc
repnz
add
cs
mov
bswap
aas
retf
push
je
xchg
fcom
jl
div
dec
push
in
imul
lds
mov
pop
xor
pop
or
aam
fwait
pop
dec
mov
sub
mov
das
sub
enter
pop
jge
jmp
addr16
leave
outs
jg
repnz
xlat
inc
repz
cdq
sub
pop
sahf
cwde
adc
push
jmp
inc
(bad)
hlt
shl
es
xchg
icebp
(bad)
stc
dec
add
pop
je
pop
ret
xor
adc
ins
fidivr
enter
mov
mov
das
mov
xchg
pop
push
aaa
dec
jmp
pop
dec
and
push
imul
add
repz
fnstcw
(bad)
das
adc
inc
push
dec
imul
push
xchg
push
repz
mov
ret
xor
mov
inc
ja
mov
adc
ds
mov
mov
dec
xor
pop
mov
jns
jnp
bound
jo
jmp
repnz
fadd
imul
sbb
xchg
sub
jmp
iret
sbb
sbb
pop
aas
(bad)
cmps
(bad)
scas
(bad)
rol
fcom
mov
mov
add
xchg
and
push
mov
retf
les
mov
xchg
push
ficomp
jecxz
mov
jno
cmp
iret
xchg
(bad)
adc
add
and
mov
stos
pop
sub
stos
ret
je
test
mov
shl
mov
mov
stos
cs
push
sub
inc
cmp
pop
sti
icebp
movs
or
xor
mov
xor
add
loopne
js
popf
inc
mov
dec
adc
ficom
xor
sbb
push
jb
xchg
sbb
dec
pop
dec
sbb
popf
ffree
jne
pop
inc
add
adc
dec
dec
xor
push
xor
movs
sti
or
shufps
jo
add
movs
adc
ds
mov
fisub
ret
jecxz
sbb
out
and
outs
sub
sbb
stos
ds
mul
mov
mov
cld
cwde
push
pop
popf
leave
mov
loop
fnstenv
cmps
loope
mov
push
mov
ins
mov
ja
jmp
mov
scas
xchg
pop
sbb
jmp
imul
cmp
sub
dec
jp
add
aaa
cdq
mov
mov
xchg
stc
or
scas
sahf
or
pop
add
movs
rol
cwde
lods
xor
and
enter
mov
mov
inc
out
aaa
dec
xchg
pop
ror
xor
ss
movsx
push
push
dec
(bad)
in
xchg
idiv
fwait
lods
jl
out
sbb
inc
(bad)
loopne
jge
mov
and
loope
or
push
ficom
test
dec
xchg
xchg
xor
dec
push
pop
dec
xchg
sub
scas
push
shl
loopne
xchg
fbstp
stc
sbb
fdiv
fsub
loope
addr16
ins
add
hlt
test
sub
addr16
lods
and
icebp
jb
push
pop
or
push
(bad)
lock
outs
stc
imul
inc
xchg
mov
xor
lods
push
mov
jge
(bad)
pop
dec
ja
push
adc
push
dec
inc
mov
dec
iret
jge
jge
push
cmp
jmp
imul
or
xchg
call
xor
ss
xchg
push
and
test
add
adc
lahf
push
js
ss
into
inc
(bad)
adc
scas
xor
ficom
cmp
and
js
pop
lahf
xor
repz
into
bound
xchg
fidivr
or
push
cli
fstp
xchg
icebp
push
aas
aam
pop
pusha
mov
movs
call
lock
hlt
enter
xor
xor
xchg
pop
fst
lods
mov
cs
ja
sub
enter
cmp
pusha
mov
mov
mov
ret
pop
icebp
rcr
in
jp
adc
add
xchg
aam
mov
ja
test
pause
test
lds
add
jmp
mov
dec
lds
pop
ret
fsubp
ficom
mov
aaa
mov
jmp
inc
sar
pop
xchg
xlat
pop
int
fdiv
jg
mov
test
sub
stos
jge
adc
retf
pop
loop
outs
mov
sti
mov
cld
imul
mov
dec
xor
int
inc
retf
fs
leave
(bad)
sbb
dec
cs
cdq
sbb
sar
pop
add
cmp
xchg
out
leave
gs
in
das
push
xchg
jg
adc
add
ret
or
rol
add
out
cli
scas
xor
aaa
xchg
push
(bad)
push
in
jge
jmp
jno
js
sbb
repnz
aam
adc
dec
mov
xchg
out
icebp
push
sbb
mov
enter
retfw
nop
imul
mov
xor
sbb
mov
(bad)
jg
inc
push
js
les
inc
mov
lods
adc
daa
adc
dec
out
and
ret
and
lods
loopne
sahf
ror
movs
xchg
pop
dec
xor
or
xor
ja
xor
add
push
mov
lahf
push
mov
imul
sbb
xchg
loope
push
daa
pop
fdivr
es
ins
call
mov
sub
xor
cmc
cmps
rcl
dec
arpl
cs
push
adc
ror
push
jmp
fnsave
xor
clc
sub
retf
dec
inc
xchg
scas
gs
sub
stc
mov
fcomi
cmp
cmp
cmp
push
or
pushf
daa
pop
inc
cmp
dec
xchg
mov
jo
outs
add
cmc
nop
iret
fdivr
scas
mov
push
leave
inc
pop
adc
inc
mov
xor
or
rcl
jno
pusha
pop
xchg
adc
popf
xor
sub
jbe
or
push
inc
sti
fist
ficom
mov
(bad)
mov
das
scas
int
dec
retf
xchg
xor
xor
mov
cmc
fldlg2
sbb
movs
(bad)
das
movs
(bad)
adc
adc
cmps
jne
pop
test
mov
in
daa
and
(bad)
jl
and
push
push
push
adc
add
dec
mov
xchg
cli
add
(bad)
pop
push
sbb
or
adc
test
int
xlat
fwait
lds
nop
aaa
mov
dec
and
repnz
or
inc
inc
hlt
fwait
sbb
mov
in
sbb
leave
adc
imul
adc
mov
pop
adc
cmp
adc
push
xchg
ret
or
(bad)
and
sbb
std
mov
in
add
lea
(bad)
pusha
lods
xor
sbb
jne
cmp
int3
movs
mov
pop
addr16
xor
iret
ret
add
push
inc
or
mov
cwde
mov
adc
movs
fdiv
arpl
aad
sbb
aaa
push
retf
inc
outs
nop
push
aaa
dec
mov
imul
push
add
or
ret
jo
(bad)
xor
aaa
cmp
std
dec
not
ins
xchg
sbb
sub
and
jmp
gs
sbb
xor
and
int3
sub
dec
rcl
inc
pop
daa
sahf
or
ret
mov
xchg
pop
cmp
and
adc
std
pop
fnstenv
or
adc
add
pusha
ret
icebp
(bad)
scas
into
dec
push
ret
cdq
ja
adc
mov
std
push
jg
imul
popa
xchg
push
mov
idiv
scas
mov
pop
lds
retf
push
cmp
or
dec
(bad)
cmp
jg
pop
jmp
mov
mov
imul
mov
dec
cmps
jb
in
mov
fmul
sub
adc
xchg
imul
(bad)
ret
or
add
xchg
jmp
dec
popa
mov
adc
jo
mov
xor
sbb
idiv
xor
dec
mov
adc
push
loope
ins
(bad)
sbb
mov
mov
(bad)
xchg
or
fs
ins
add
shl
sub
mov
movs
push
mov
jg
retf
mov
out
jp
or
lds
in
push
cli
or
xchg
movs
cmp
les
mov
outs
xor
and
test
mov
std
cdq
jb
and
adc
test
fdiv
lahf
ret
pop
mov
cmp
in
test
or
mov
fidivr
xor
xchg
jo
sub
xchg
call
push
popa
lock
jl
(bad)
rcr
inc
jge
or
push
dec
bsr
mov
enter
pop
jne
cmps
push
lea
pop
inc
dec
outs
sahf
sub
data16
jecxz
ins
and
xor
jge
xchg
scas
inc
mov
iret
outs
stos
jo
or
sub
jecxz
(bad)
sub
mov
aam
imul
sbb
in
fld
cmp
mov
push
out
sub
js
mov
lods
clc
adc
cld
sbb
stos
sar
cmp
ds
mov
cmp
mov
fisttp
movs
aad
jbe
mov
jnp
inc
ss
ret
push
loope
out
popa
xchg
test
xchg
mov
mov
sub
inc
das
adc
fadd
dec
jle
ins
dec
jbe
cmp
mov
(bad)
and
out
push
push
pop
nop
imul
pop
ins
sub
shl
xchg
lods
or
add
xchg
fwait
and
jb
test
inc
mov
sbb
mov
inc
pop
inc
push
iret
jo
pusha
push
arpl
ins
stc
and
rcl
repnz
cmps
add
push
push
aad
inc
(bad)
sti
shl
and
jp
imul
(bad)
mov
dec
fidiv
neg
mov
ds
test
push
pop
xchg
ss
test
leave
push
int3
jne
stos
iret
loope
inc
cli
std
imul
inc
iret
xor
aaa
in
or
pusha
sbb
pop
shl
xchg
scas
ret
lds
stc
mov
mov
loopne
int3
lods
xchg
mov
mov
sub
imul
(bad)
sar
xor
mov
jns
add
mov
inc
idiv
inc
mov
js
popf
xor
cmp
xchg
hlt
xchg
jb
fadd
repnz
jae
mov
and
inc
dec
add
and
add
mov
cmp
(bad)
lods
and
call
xor
movs
jp
and
ror
dec
call
jl
ror
mov
push
xchg
rcr
jns
daa
sub
js
mov
cmp
push
jp
or
and
or
xchg
mov
lds
pop
pop
ds
cmp
ror
push
nop
cwde
jp
in
mov
adc
sub
les
lods
mov
clc
sub
sbb
sub
mov
std
push
imul
jle
mov
das
call
dec
ret
shl
xchg
or
loop
fidivr
repnz
pushf
dec
ins
push
retf
mov
sbb
xor
mov
add
sbb
test
cmps
imul
inc
in
retf
movs
arpl
loopne
outs
jo
nop
jg
mov
sub
stc
(bad)
mov
loop
cmps
xor
in
cmp
mov
and
and
retf
push
jge
add
icebp
call
and
aas
sahf
bound
lds
sbb
sbb
lea
iret
gs
jmp
rcr
adc
sub
jae
cmp
retf
rol
aam
jbe
or
test
pop
out
jp
xor
adc
aaa
out
popf
inc
cwde
add
and
or
js
push
stos
shl
popa
dec
add
fwait
jmp
pop
in
pop
sub
dec
sub
loope
aaa
mov
push
in
sbb
inc
pop
xor
mov
fcomi
loope
push
or
inc
(bad)
out
int3
dec
cmp
push
xor
ds
call
fmul
adc
or
ret
inc
(bad)
movs
jl
fmul
or
push
or
aad
mov
bound
stc
clc
or
and
jecxz
pop
cmp
into
inc
rcl
push
push
and
cwde
daa
out
loope
push
jmp
addr16
or
or
leave
mov
fsub
jl
xor
call
(bad)
jecxz
and
jo
out
add
jg
jmp
lods
sub
dec
inc
jne
call
or
ret
or
scas
pop
ins
pop
sbb
movs
mov
cs
mov
out
cmp
xor
mov
enter
pop
int3
cwde
mov
push
mov
jmp
sti
pop
das
test
mov
ins
xor
pop
addr16
icebp
push
sub
cwde
add
mov
daa
add
shr
mov
cmp
add
adc
mov
jp
xchg
ss
jmp
lods
lahf
cmp
push
cmp
ins
test
mov
imul
stos
js
dec
dec
push
mov
out
and
sti
xchg
pop
int3
sti
pop
stos
sub
adc
xlat
sub
daa
(bad)
sahf
mov
push
jo
popa
or
jmp
xor
mov
or
or
pop
cmc
push
sar
pop
aas
cmps
cli
pushf
das
ds
pop
sbb
test
xor
and
fdiv
pop
mov
xchg
ret
xor
cmps
(bad)
mov
(bad)
fild
popa
push
xchg
cdq
mov
sub
inc
sahf
push
mov
or
jl
inc
lods
pusha
arpl
sub
and
adc
dec
das
mov
adc
and
aaa
xor
(bad)
neg
mov
push
test
and
sbb
cmp
xchg
in
scas
sbb
mov
test
mov
movs
and
adc
(bad)
jne
sub
xlat
in
adc
iret
ins
adc
imul
sub
repnz
js
push
cmp
out
popa
clc
lea
add
iret
icebp
stos
dec
inc
xor
dec
and
dec
cld
mov
inc
pop
pop
inc
out
inc
jl
sub
out
jb
xor
mov
dec
push
xchg
jbe
push
je
mov
icebp
mov
out
and
in
in
push
inc
inc
cmp
(bad)
aaa
ss
push
pushf
cmp
stos
mov
and
loope
outs
bound
lods
add
int3
dec
in
dec
dec
daa
or
jno
pop
dec
ins
out
pop
lods
sub
aam
push
retf
jnp
aaa
or
test
xchg
adc
and
aas
mov
jno
sub
jp
cmc
ret
imul
xchg
sub
popf
add
fisttp
lods
sub
cmp
mov
pop
dec
fs
jnp
gs
mov
push
and
arpl
dec
out
fsubr
cmps
imul
loope
mov
cs
movs
mov
iret
imul
mov
mov
mov
mov
scas
in
fdivr
imul
mov
sbb
jge
jp
(bad)
idiv
daa
test
cmp
sbb
mov
inc
inc
mov
leavew
cli
iret
fmulp
test
push
rcl
sbb
test
call
out
jo
jns
int
cmc
leave
adc
jmp
ret
inc
mov
adc
adc
arpl
and
sar
sub
adc
dec
push
std
fld
cmps
mov
out
inc
xchg
loop
jne
inc
mov
ins
mov
sub
loope
(bad)
xor
jo
imul
enter
data16
cwde
das
test
jbe
and
mov
sub
fstp
sub
mov
push
cli
mov
mov
jg
dec
lds
xchg
pushf
push
mov
cwde
xor
add
dec
lds
pusha
jp
clc
jnp
sar
nop
add
xchg
sub
div
and
xchg
and
xor
inc
or
nop
xor
or
outs
push
pop
loop
push
cmp
add
mov
push
sub
cwde
push
addr16
inc
mov
cdq
push
pusha
leave
stc
leave
push
mov
or
jns
mov
es
add
jae
bound
sub
push
sahf
iret
mov
aaa
or
iret
pop
ffree
push
mov
add
cmp
or
pusha
mov
and
pop
sahf
clc
es
das
push
imul
(bad)
push
addr16
add
pop
mov
call
xchg
push
sar
mov
jmp
jo
xor
daa
dec
inc
sub
add
mov
inc
xor
mov
pop
jp
aaa
xor
mov
inc
clc
pop
jl
add
push
cmps
mov
inc
fiadd
xchg
imul
popa
aas
add
sbb
popa
aam
leave
dec
cli
dec
iret
cdq
xchg
jmp
in
mov
jle
jbe
add
add
call
pop
cwde
shl
leave
(bad)
or
hlt
les
sbb
dec
mov
xchg
pop
sbb
pop
pushf
add
cmps
push
imul
sti
rol
pop
clc
pop
and
in
(bad)
mov
rcl
imul
jne
mov
mov
jg
ins
xlat
repnz
dec
mov
xor
pop
mov
or
mov
lods
pop
dec
loopne
mov
xor
iret
mov
ret
(bad)
jae
aam
mov
jns
cmp
jl
test
xor
rcl
ja
inc
popa
(bad)
xchg
cmp
inc
idiv
ror
xchg
or
and
pop
fist
or
inc
lock
in
push
aas
sti
cmp
dec
and
retf
mov
adc
jle
lds
iret
sub
cmps
cmp
mov
repnz
xchg
popa
adc
adc
or
sti
test
sbb
add
or
mov
test
sbb
sti
shl
xor
in
and
jne
into
aad
fs
popf
sub
or
in
(bad)
repz
sbb
add
add
out
xor
lds
jge
sbb
mov
or
push
push
in
or
mov
mov
or
pop
push
int3
add
or
xor
fs
popa
data16
mov
popa
aaa
adc
push
retf
jle
mov
or
sbb
call
movs
repz
mov
lods
(bad)
mov
xor
ds
xchg
mov
cmps
inc
jecxz
adc
sahf
cs
dec
jno
push
fistp
aam
(bad)
cmps
popf
std
fmul
fisttp
mov
loop
stc
pop
movs
pop
loope
test
pusha
stc
rcr
xor
loopne
fwait
jno
xchg
repz
in
dec
shr
xor
call
sahf
out
jnp
mov
ss
push
stc
cdq
push
cmp
sbb
std
sbb
mov
fadd
push
sahf
(bad)
xor
xor
xchg
jg
stos
jb
ja
cs
jecxz
mov
pop
aad
xchg
(bad)
aad
cs
lods
jo
mov
mov
mov
fistp
scas
cwde
arpl
out
push
pop
cld
cmp
fs
mov
cmps
pop
pop
pop
sbb
jl
cmp
mov
cwde
(bad)
in
das
push
outs
les
or
mov
push
dec
aam
push
add
add
fnsave
cmp
jmp
das
ss
test
sub
pop
xchg
rcl
lock
jae
jno
jle
sub
shr
inc
fisttp
out
push
and
xor
(bad)
sahf
popf
sar
loopne
jg
test
popf
sub
ficomp
and
ret
addr16
pop
ret
test
ins
mov
dec
movaps
push
dec
clc
rcr
outs
xchg
push
sbb
jp
xchg
iret
shr
rcl
mov
add
mov
loopne
adc
nop
sbb
std
push
movs
mov
push
lods
mov
imul
jns
hlt
call
not
sub
push
push
cld
jg
mov
jae
out
sbb
mov
call
adc
test
push
clc
pop
mov
pop
mov
adc
dec
ins
mov
ret
cwde
fldcw
lock
sbb
push
ror
(bad)
shr
pushf
add
call
outs
push
push
mov
rep
inc
gs
pop
aas
add
push
fbstp
or
mov
sbb
xchg
mov
gs
jnp
lods
pop
cmp
ja
scas
dec
lock
sub
in
scas
les
call
call
cmc
mov
jo
dec
jmp
or
imul
lds
shl
cdq
(bad)
fwait
xlat
jae
loopne
sbb
out
dec
stc
pop
nop
push
mov
mov
bound
add
jo
xor
test
iret
adc
push
pop
jg
stc
mul
push
aas
mov
ret
ret
(bad)
fwait
pop
dec
push
or
in
ja
mov
cdq
cs
xor
imul
leave
xchg
lods
mov
cld
fist
jns
inc
out
fdiv
daa
cmp
inc
clc
test
add
int
(bad)
dec
cdq
sub
out
out
aam
clc
mov
mov
dec
(bad)
fstp
jmp
push
ins
inc
push
adc
pop
xchg
ret
pop
push
adc
scas
out
cmp
mov
pop
mov
xchg
in
pop
xchg
xchg
sub
mov
cmp
xchg
lahf
hlt
out
div
call
shl
outs
int
dec
scas
cmps
lea
push
das
mov
push
mov
inc
and
je
enter
cmp
sahf
jecxz
cmp
jmp
shr
nop
mov
out
retf
add
das
inc
retf
inc
jmp
mov
ja
mov
jb
dec
cs
sti
ror
aam
fwait
pop
cmp
fsub
xor
mov
xchg
jb
retf
lods
test
push
mov
fisubr
enter
cdq
pop
xor
ret
aas
and
jo
add
out
dec
clc
push
ret
mov
push
jmp
fisubr
int3
and
arpl
les
jmp
xor
cmp
stos
xor
ret
xlat
cmp
cmp
pop
push
(bad)
mov
cli
xchg
(bad)
add
imul
jmp
aaa
fidivr
mov
fild
sbb
jns
add
dec
leave
mov
bound
int
xor
mov
mov
clc
xor
mov
xchg
dec
mov
sub
pop
and
mov
rcl
mov
imul
jmp
movs
jmp
inc
inc
cmp
and
(bad)
aad
int3
jnp
(bad)
icebp
or
adc
pop
xchg
jg
pusha
fcomp
sbb
addr16
mov
push
jg
jb
enter
mov
int
jg
adc
dec
push
pop
call
jge
pop
data16
adc
lods
mov
mov
mov
inc
int3
push
mov
cmp
jnp
pop
cmp
stos
lock
popa
pusha
out
mov
xor
ss
push
shl
xchg
xlat
cwde
and
xchg
icebp
in
ss
dec
adc
mov
mov
or
ss
adc
push
add
mov
cs
dec
inc
imul
js
pop
xor
addr16
retf
pop
push
and
scas
(bad)
push
scas
aad
rol
iret
lea
xchg
and
mov
shl
leave
aad
out
add
mov
pop
pop
xchg
nop
cmp
mov
sbb
jbe
adc
ficom
aas
(bad)
mov
cmc
retf
pop
sbb
cdq
dec
pop
xchg
or
push
popw
pushf
jmp
leave
sub
call
sbb
rcr
imul
jmp
push
ins
outs
push
mov
jno
imul
push
loopne
retf
add
push
popf
nop
sub
adc
mov
mov
jbe
ret
bound
or
out
scas
dec
lahf
jno
xchg
push
loopne
cmps
out
retf
cmp
sub
mov
lds
sub
adc
fadd
(bad)
inc
test
loopne
jno
gs
xor
and
mov
mov
xor
push
ins
push
jl
xchg
jo
push
leave
into
(bad)
ins
add
sbb
int
div
jg
mov
jns
out
stc
inc
inc
mov
aad
mov
mov
sbb
xlat
cmps
bound
shr
imul
mov
cmc
pop
mov
xchg
cmp
and
sub
jle
jmp
add
or
adc
pusha
rcl
lock
rol
xchg
inc
sbb
sub
sar
xor
in
dec
mov
fcmovb
cmp
js
jmp
jnp
xor
add
movs
and
out
xchg
inc
fs
jbe
mov
xor
mov
pushf
mul
mov
pop
add
push
mov
inc
pop
sub
push
jno
xchg
imul
mov
lods
or
mov
int3
imul
fwait
ret
push
jp
cmp
adc
adc
popa
loop
loope
lock
cmp
push
test
pop
xor
aas
mov
jle
pop
sbb
ins
xchg
fidiv
in
dec
fisttp
sbb
jecxz
fwait
cmp
out
push
das
mov
adc
repz
and
mov
mov
pop
std
in
mov
ss
jae
mov
into
pop
jp
aaa
(bad)
cld
sbb
jbe
clc
int
add
out
lock
mov
repnz
sub
mov
push
(bad)
cmps
cmps
cmc
stos
fst
push
mov
(bad)
xor
ins
sbb
xchg
(bad)
enter
fbld
dec
mov
xchg
ficomp
ja
(bad)
int
xchg
pop
xchg
mov
push
sbb
ror
mov
inc
xor
call
push
cmps
inc
mov
adc
sub
ror
mov
cmp
dec
movs
(bad)
or
sub
fiadd
retf
mov
add
pop
xchg
fmulp
inc
and
loope
sahf
lahf
cmps
xchg
cmp
(bad)
int
popa
enter
or
in
and
or
sub
clc
into
stos
cmp
bound
xchg
and
jl
outs
arpl
movs
mov
ja
push
jp
outs
mov
and
push
add
stos
pusha
es
cli
jl
adc
or
mov
mov
add
fcomp
call
(bad)
stos
ins
sbb
xchg
xchg
push
jge
push
jne
cwde
mov
(bad)
or
dec
xchg
cmp
rol
not
or
push
pushf
jp
adc
add
mov
stos
inc
pop
cmps
or
or
push
retf
xor
mov
loopne
into
dec
rcr
adc
mov
inc
pop
loop
push
mov
xchg
push
push
leave
retf
or
xor
add
pusha
sub
scas
mov
and
xchg
or
mov
test
test
pop
push
inc
xchg
arpl
out
ins
pop
cmp
jp
cmp
cmp
inc
cmp
hlt
popa
imul
xchg
mov
cld
sbb
sar
and
hlt
xor
jne
retf
(bad)
shl
push
mov
inc
clc
clc
cmp
nop
dec
push
sub
push
popa
jecxz
add
adc
xchg
ds
jle
mov
cmp
sub
loopne
ret
xor
fild
in
stos
loope
unpckhps
push
pop
jp
add
or
xor
push
aas
mov
dec
xchg
sahf
rol
rcr
add
lods
sbb
inc
js
loope
pop
mov
rol
mov
outs
fs
enter
mov
fnstcw
dec
cmp
fldenv
retf
repnz
fidivr
or
repnz
ds
xchg
das
add
das
in
and
lahf
jg
fist
shl
popa
fldcw
xchg
scas
fisubr
in
dec
cmc
(bad)
xchg
dec
cwde
cwde
and
push
add
adc
adc
ret
jne
clc
fdivp
mov
out
push
jg
push
in
in
(bad)
pop
mov
xor
mov
inc
int3
lahf
into
add
loope
pop
out
push
call
mov
cs
je
cs
sahf
mov
int3
xor
mov
mov
sti
push
cmp
shr
aad
ret
je
mov
mov
xor
inc
xchg
in
cld
mov
not
gs
mov
xlat
fld
xchg
fmul
push
mov
aad
ja
adc
fst
ror
add
or
(bad)
cld
out
mov
or
xor
cs
outs
es
js
in
sub
xchg
clc
add
out
fmul
fldcw
jmp
int
xchg
jns
in
adc
adc
rol
xchg
push
jae
push
adc
jg
rol
mov
pop
shl
rcr
jg
fnstcw
icebp
pop
popf
adc
xor
inc
loopne
mov
inc
(bad)
clc
adc
cmp
loope
mov
cdq
scas
in
lods
fcom
jne
stc
and
rcl
mov
push
mov
icebp
cmp
nop
in
adc
or
(bad)
(bad)
pusha
cmp
add
iret
cmp
shl
(bad)
aam
inc
add
push
fcmovb
lea
cmps
div
xchg
dec
xor
out
xor
or
sbb
ret
loope
aaa
dec
stos
pop
aaa
not
test
ds
in
mov
sub
jno
cmp
inc
pusha
adc
inc
aaa
mov
add
ds
mov
fs
stos
xor
shl
mov
enter
sub
int3
les
and
jecxz
(bad)
retf
mov
ret
adc
mov
adc
mov
mov
mov
in
pop
or
call
mov
in
pop
sar
push
xor
nop
dec
(bad)
leave
cld
clc
or
(bad)
aam
xchg
cwde
fadd
push
test
adc
pop
push
inc
and
lahf
(bad)
fucomip
(bad)
xor
int
outs
or
xchg
sbb
gs
inc
push
enter
hlt
xor
inc
jmp
imul
cmp
or
xchg
inc
xchg
jl
xchg
jmp
test
(bad)
or
add
jle
sbb
scas
add
pop
bound
loope
mov
cmp
in
rol
popw
xchg
push
push
test
mov
ret
mov
mov
mov
dec
dec
inc
ins
adc
div
xchg
and
(bad)
push
aam
xchg
xchg
xor
test
outs
cmc
icebp
mov
sti
jmp
loope
mov
xor
ret
mov
jp
enter
jbe
mov
sub
sahf
cs
push
xor
in
out
or
aaa
inc
pusha
xlat
cmp
xor
hlt
mov
xor
xchg
fmul
sar
enter
into
fimul
popa
fild
dec
in
imul
add
sub
adc
pop
and
sbb
jnp
retf
jne
popa
jecxz
jp
mov
sbb
arpl
movs
pop
cmp
jno
jae
shl
pop
fwait
call
sub
pop
jo
cmp
scas
jmp
mov
out
xchg
pushf
(bad)
and
jmp
(bad)
push
jmp
push
jnp
rol
mov
fsubr
test
jno
cmps
fisubr
into
xchg
es
mov
push
mov
jmp
(bad)
lds
popf
stos
loopne
xchg
ja
push
lahf
call
out
push
xchg
mov
push
and
das
xor
jle
inc
adc
out
enter
movs
sbb
or
and
inc
aam
mov
leave
(bad)
cmc
and
(bad)
adc
cli
mov
sub
cwde
xor
cwde
xlat
not
test
mov
push
in
pop
xchg
adc
ja
adc
pop
ja
mov
cmp
adc
lods
cmp
cld
push
ins
adc
xor
jmp
jge
aam
jne
jne
call
cmps
ins
xor
lods
sbb
ins
movs
test
adc
mov
mov
iret
sub
xchg
and
ror
jno
enter
loop
inc
(bad)
cwde
inc
mov
push
mov
out
dec
pop
ror
push
and
loope
push
push
addr16
les
jmp
push
mov
push
jecxz
jnp
adc
jg
inc
(bad)
mov
dec
mov
icebp
add
and
into
cmps
not
jmp
pop
push
or
in
mov
in
pushf
jecxz
mov
pushf
lahf
xlat
test
mov
push
in
imul
popa
jae
test
ins
jmp
dec
sbb
mov
es
aas
fcom
iret
xchg
call
cwde
movs
mov
cmp
outs
stos
cmovb
inc
in
outs
sbb
sbb
in
out
sbb
jno
adc
inc
ror
push
outs
adc
push
loopne
ret
ficomp
bnd
les
pop
loopne
loopne
xor
scas
out
fwait
stos
(bad)
pop
xlat
sub
push
aas
bound
cli
das
xor
push
sbb
sub
dec
jnp
mov
and
movs
jnp
aas
inc
retf
(bad)
(bad)
pop
push
mov
cmp
outs
ds
fcom
test
rol
retf
jno
ss
dec
ss
out
sbb
shl
aas
push
sbb
(bad)
in
(bad)
fnstcw
stos
xchg
push
adc
(bad)
(bad)
test
call
mov
xchg
adc
cli
and
les
inc
(bad)
xor
outs
or
add
mov
rcl
cmp
stc
xchg
inc
mov
in
call
xchg
in
cs
sbb
xor
xchg
sbb
data16
outs
in
jo
pop
jne
data16
lods
outs
repnz
mov
add
pop
cli
sub
je
jl
pop
cmc
cmp
pop
lods
sar
xor
sar
sub
xor
stos
ret
fwait
out
ins
sbb
jo
fdiv
movs
inc
aad
retf
movs
les
addr16
int
out
scas
mov
cmp
stos
jns
xor
mov
repz
fdivr
aaa
bound
pop
stos
inc
popf
xchg
cmp
xchg
cld
xchg
jmp
out
sbb
addr16
add
xor
jge
int3
loopne
and
pop
outs
xchg
cmc
jmp
fcom
jae
es
push
pop
push
or
adc
stos
cld
mov
cmp
ss
pushf
(bad)
sar
(bad)
stos
mov
xchg
rol
ret
out
sbb
mov
cmp
pop
call
push
clc
pop
fbld
enter
hlt
mov
or
cmp
jno
popa
pushf
sbb
mov
add
clc
ins
popf
pop
stc
pop
scas
loop
fistp
mov
or
sti
mov
repnz
pop
(bad)
mov
repz
imul
fdivrp
jns
imul
cmp
sub
inc
in
jecxz
gs
sbb
enter
xchg
movs
out
retf
inc
sbb
lods
adc
cmps
push
imul
sub
test
sub
xor
sbb
das
mov
jns
push
push
jmp
aas
inc
pop
cmp
repz
dec
dec
in
dec
or
pop
jno
xor
loope
jecxz
test
jae
popf
xor
loopne
dec
jnp
pop
shl
sub
adc
mov
out
inc
jne
cld
mul
scas
rcl
es
cmp
stc
jmp
test
or
push
or
sub
mov
(bad)
ficom
out
push
out
or
push
in
fiadd
adc
cmp
mov
mov
push
into
adc
jmp
sti
in
not
or
fwait
movs
cmp
jmp
cli
fs
pop
repnz
inc
pop
xchg
imul
jne
jecxz
sti
int3
mov
imul
movs
je
jmp
dec
test
retf
fnstenv
mov
mov
or
push
outs
outs
(bad)
cmps
jl
ss
scas
xchg
aas
mov
pop
jecxz
rol
ins
scas
cmc
mov
jae
pop
mov
sbb
mov
fstp
pusha
mov
xor
mov
pop
call
push
mov
icebp
pop
jo
movs
sub
push
inc
lds
mov
ins
and
lock
xchg
xchg
fyl2x
ja
jo
cmp
test
aas
xor
ds
fadd
sahf
imul
mov
mov
cmp
(bad)
sbb
fadd
mov
arpl
cmp
cmp
lea
pop
bound
sub
out
iret
jbe
cdq
neg
dec
cmp
pop
adc
fstp
xor
mov
xchg
mov
(bad)
sti
push
pop
inc
xchg
jns
shl
stos
or
inc
sub
or
pop
cdq
scas
xchg
pop
scas
inc
sub
mov
or
inc
jns
inc
in
and
xchg
push
pop
iret
cld
dec
pusha
fist
test
adc
jo
cmp
mov
(bad)
gs
in
cmc
push
aas
aaa
mov
inc
xlat
xchg
dec
pop
jo
jg
test
icebp
xchg
mov
out
push
add
arpl
js
scas
pop
in
pop
pop
mov
jne
cmp
cmp
pop
(bad)
pop
shr
popa
and
mov
leave
cmp
aam
jne
jg
into
ja
cmp
sub
mov
aas
or
icebp
mov
and
ret
jbe
xor
shl
movs
popf
outs
jp
and
movs
hlt
fisub
movs
jnp
(bad)
call
not
push
scas
jg
inc
add
or
sub
pop
jl
dec
out
jnp
cwde
adc
mov
or
pop
call
sar
and
and
hlt
hlt
mov
cmp
iret
ror
pop
push
mov
enter
outs
rol
repz
lock
jbe
pop
add
lods
and
cmp
jae
jbe
or
inc
jno
sbb
mov
sbb
inc
sub
adc
fs
cdq
enter
xchg
sbb
das
sbb
jbe
xchg
or
xchg
ss
lock
jmp
fadd
arpl
and
imul
adc
push
cmp
arpl
je
xor
xchg
mov
jb
mov
das
shl
into
cmp
jle
mov
jp
aam
jb
add
push
pop
add
clc
arpl
dec
ss
adc
popf
rol
in
lds
rcl
lahf
jecxz
push
push
sub
xlat
jle
adc
imul
adc
loope
xlat
lods
sbb
addr16
(bad)
ins
add
scas
mov
cmc
adc
or
inc
in
jle
fsub
dec
fcomp
leave
jmp
sar
lock
fidivr
pushf
push
inc
push
aam
sub
xchg
cs
and
inc
and
lock
jbe
dec
ret
sub
pop
movs
and
adc
movs
ror
add
inc
sbb
pushf
shl
fs
inc
jp
scas
ins
retf
and
jne
js
stos
dec
addr16
sub
out
data16
cmps
jne
mov
mov
adc
xchg
mov
in
sub
fist
bound
sbb
fdiv
icebp
xchg
xchg
cld
movs
lods
or
mov
add
jmp
mov
pop
es
lea
add
cwde
outs
push
(bad)
push
nop
out
sub
mov
cld
retf
mov
adc
movs
adc
mul
fisttp
dec
push
clc
ss
out
scas
fchs
lds
ds
sub
lahf
xor
daa
pop
mov
stc
add
fcomi
pop
push
popf
js
out
jae
or
lock
push
lds
pop
imul
arpl
push
ret
xor
jge
mov
dec
mov
cmps
mov
jg
cli
scas
or
and
inc
mov
lock
(bad)
xchg
test
jmp
movs
ss
inc
mov
or
loopne
mov
jecxz
mov
lds
fild
jmp
ja
mov
sub
or
shl
pop
ins
mov
sbb
ficom
shr
add
dec
sub
aam
xor
sub
pop
cmp
inc
cmp
add
push
js
test
fld
mov
jle
pop
dec
dec
mov
mov
sbb
xchg
dec
lods
push
dec
cmp
test
pushf
cmp
mov
stc
and
outs
sub
mov
(bad)
cs
push
and
cld
in
enter
mov
xchg
out
and
mov
add
jle
int3
pop
ins
or
into
mov
shl
push
lds
push
shl
push
jl
sub
fistp
jmp
sbb
mov
shr
stos
pop
mov
or
loopne
mov
lods
mov
aas
adc
jne
xor
push
push
push
test
(bad)
movs
sub
inc
hlt
dec
dec
xchg
jnp
ficomp
and
dec
add
sub
into
in
mov
add
ss
dec
adc
aas
cmp
sbb
xchg
jecxz
jno
inc
xchg
retf
mov
retf
es
inc
inc
cmp
cmp
sub
sbb
sti
mov
push
ficomp
lods
xchg
arpl
in
and
mov
shr
pop
scas
ins
sahf
sbb
int
ds
xchg
int
rcl
mov
aad
movs
sub
fmul
lock
or
sub
jne
xchg
fwait
mov
push
pop
dec
xchg
arpl
add
in
leave
std
les
inc
jp
xor
dec
std
push
pop
sahf
mov
pushf
gs
(bad)
bound
jl
scas
pop
fnstsw
inc
jbe
jmp
stos
add
jmp
pop
adc
cmps
sub
sbb
sbb
aam
mov
xchg
dec
fwait
or
mov
jmp
outs
pop
(bad)
sbb
imul
in
cmp
jmp
ficom
nop
(bad)
push
dec
adc
and
adc
sbb
lahf
xchg
loop
sbb
dec
jb
in
adc
mov
(bad)
push
and
push
inc
cs
mov
jns
cs
int3
or
lock
dec
fsubr
add
in
test
push
adc
and
inc
arpl
cmps
jmp
inc
dec
dec
dec
das
add
call
in
adc
movs
adc
daa
mov
add
mov
pop
aam
inc
push
cld
dec
xchg
cmc
jmp
aaa
out
jg
clc
ficomp
push
fwait
xor
inc
pop
ficom
cwde
pop
out
rol
mov
pop
into
dec
in
xchg
jmp
pop
pop
jle
lahf
daa
mov
adc
gs
in
cmp
dec
dec
mov
frstor
xor
xchg
xchg
or
lock
mov
lea
mov
sahf
sbb
inc
aaa
mov
out
les
jne
lahf
cmc
dec
sub
fwait
dec
mov
shl
fs
mov
inc
outs
(bad)
xor
adc
and
cmp
cmp
pushf
pop
xor
mov
addr16
(bad)
adc
mov
fwait
aad
mov
pop
xchg
scas
je
or
jne
add
lds
cmp
cdq
mov
leave
dec
xchg
xchg
inc
add
addr16
jge
jp
fwait
retf
jle
mov
pop
and
stos
mov
es
fucomp
and
in
cmp
mov
in
cmc
and
push
jl
popa
push
out
arpl
jle
imul
pop
xchg
xchg
xchg
xor
and
sub
inc
movs
scas
stc
bound
ss
outs
jmp
pop
dec
inc
outs
test
adc
dec
outs
sub
push
push
sub
xchg
pop
mov
fcom
xor
aam
xchg
out
in
ret
or
xor
add
jnp
sub
add
pop
fxch
or
sar
fnsetpm(287
jmp
outs
mov
add
jbe
popf
loopne
mov
lods
movs
mov
cmps
pop
sub
lods
jmp
sti
push
xor
aad
mov
mov
shr
mov
bts
cmp
and
in
cmp
push
popa
cdq
sub
sar
ret
mov
pop
enter
cli
inc
xor
shl
scas
and
hlt
arpl
adc
mov
pop
fs
xor
cmp
xor
mov
pop
fwait
xchg
enter
icebp
pop
push
fist
fidivr
dec
jae
mov
mov
(bad)
bnd
add
pop
outs
out
pushf
mov
or
ins
jb
xchg
les
(bad)
loopne
std
dec
dec
jo
in
out
xchg
or
cli
call
retf
int3
push
mov
cmp
adc
push
pop
shr
mov
lods
in
pusha
inc
mov
je
adc
shl
xchg
push
out
cdq
sbb
or
pop
or
mov
mov
xchg
pusha
cmp
push
popa
wrmsr
jg
(bad)
or
jmp
and
push
rcl
cld
out
in
stos
mov
jle
pop
push
sbb
lea
jae
cmp
adc
mov
mov
jno
outs
lock
test
mov
pop
fsubp
sahf
mov
cmp
sti
inc
xor
mov
mov
ror
xchg
ds
mov
retf
bound
dec
fcom
or
movs
pop
push
push
pop
and
xor
mov
imul
and
add
addr16
xchg
xchg
cmp
sbb
cdq
cmp
pushf
ins
add
fadd
sub
jo
pop
ret
inc
mov
