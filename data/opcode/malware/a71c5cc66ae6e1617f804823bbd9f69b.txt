cmc
mov
out
ret
test
xor
arpl
cmp
aaa
into
and
popa
push
aaa
les
not
inc
cli
fs
popf
xor
jmp
arpl
xor
call
mov
dec
adc
mov
pushf
sahf
adc
pop
into
adc
call
into
cmp
sub
mov
shr
xor
mov
pusha
ja
add
mov
arpl
mov
outs
mov
lahf
mov
mov
pop
les
js
test
inc
int3
mov
call
popa
dec
xchg
int3
xor
dec
es
dec
shr
test
gs
arpl
mov
aam
scas
enter
jbe
out
scas
int3
dec
and
mov
int3
loopne
retf
retf
out
xor
arpl
mov
xchg
mov
xchg
ss
aam
scas
fmul
popa
xor
push
pop
jbe
call
dec
add
mov
je
jmp
arpl
mov
(bad)
call
jmp
and
mov
les
mov
cmp
xor
push
inc
in
sbb
mov
out
pushf
adc
mov
sub
adc
cmp
cs
outs
pushf
mov
enter
int3
call
pushf
mov
cmp
popa
dec
or
pop
cmp
add
add
xor
data16
test
arpl
xor
loopne
cmp
mov
sub
xor
arpl
xor
imul
mov
imul
mov
push
xor
jecxz
adc
mov
mov
jbe
mov
lock
pushf
fbld
and
fsub
pop
jmp
arpl
xor
cmp
outs
dec
(bad)
mov
inc
pop
mov
jmp
les
fsub
pop
jbe
or
retf
and
push
xor
adc
dec
xor
arpl
popa
dec
xchg
jbe
or
test
push
dec
inc
jmp
xor
sbb
outs
into
xor
mov
out
pop
les
jmp
inc
pop
jbe
or
test
arpl
retf
icebp
dec
pop
jbe
pushf
fist
je
jmp
jmp
mov
jmp
jmp
les
mul
arpl
xor
jmp
sub
pushf
xor
xor
mov
adc
and
outs
les
adc
pop
les
jmp
pop
les
mov
inc
jp
les
arpl
jl
enter
or
retf
sub
xor
mov
addr16
rcl
xchg
or
js
arpl
cmp
adc
xchg
xor
fnsave
mov
add
mov
jmp
shr
ja
adc
xor
loopne
cmp
pushf
adc
add
inc
movs
sti
mov
cmp
xor
test
sub
adc
dec
movs
rol
mov
fcomi
fwait
cmp
arpl
xchg
xor
cld
loop
push
mov
fwait
mov
pop
les
aad
retf
arpl
xor
push
out
mov
add
add
sub
cmp
add
aam
mov
adc
sub
pushf
lahf
enter
xor
jmp
mov
pop
out
add
mov
fucomi
xor
arpl
cmp
les
hlt
test
std
pop
ss
inc
(bad)
out
xchg
fcom
push
push
arpl
ret
and
scas
int3
dec
movs
addr16
xor
pop
les
fcom
movs
jecxz
mov
fcomi
das
push
adc
and
push
neg
pushf
lahf
and
push
push
fadd
adc
dec
les
ret
fcomi
das
ins
fcomi
test
or
repz
cmp
movzx
jae
bound
es
sar
(bad)
mov
cmc
mov
out
inc
jo
jmp
lahf
jmp
fwait
arpl
lds
out
inc
jo
jmp
lahf
jmp
dec
ss
jp
call
or
dec
xchg
imul
lds
int
mov
push
mov
xor
out
mov
jl
mov
les
mov
xor
jecxz
xor
add
inc
retf
sbb
stos
mov
(bad)
jmp
loope
retf
cmp
imul
jl
sub
sahf
xor
xor
cdq
jae
mov
pushf
adc
icebp
push
mov
retf
cmp
mov
cmp
add
sub
clc
(bad)
jmp
movs
outs
xor
das
sub
das
jno
int3
in
xchg
popa
popa
int3
jmp
out
xor
std
mov
push
retf
cmp
retf
dec
out
retf
cmp
retf
dec
out
retf
cmp
retf
dec
mov
out
xor
dec
out
xor
pushf
mov
lahf
stos
sub
xchg
shl
mov
repz
jmp
jmp
sub
xchg
xor
call
cmps
push
aam
arpl
xor
adc
in
test
sub
repz
popa
jno
movs
out
sub
call
push
mov
xor
scas
fmul
push
imul
pcmpgtw
out
sbb
sub
cmc
xchg
add
sub
popf
xor
call
cmps
push
aam
arpl
xor
adc
in
test
sub
repz
push
in
repnz
ret
mov
jmp
xchg
jno
movs
out
sub
cmp
outs
or
xor
and
ds
repz
sub
cmp
add
popa
jno
ins
push
xor
jmp
retf
(bad)
and
cmc
mov
shr
mov
mov
xor
push
sub
cmp
not
xor
adc
fs
fcmovne
dec
movs
adc
xor
push
out
call
leave
cmp
cmp
and
bound
pop
retf
cmp
popa
imul
adc
cmp
adc
push
int3
xor
imul
pcmpgtw
out
dec
jge
je
jmp
or
repz
loop
call
movs
xor
or
arpl
addr16
pushf
lahf
cmp
arpl
xor
fld
ror
adc
(bad)
jmp
xchg
jmp
mov
push
inc
repnz
mov
xor
mov
(bad)
loopne
test
and
xor
push
jmp
call
out
mov
dec
gs
addr16
jmp
dec
movs
add
mov
jmp
jmp
xchg
call
xlat
xchg
jmp
loop
imul
rcr
xchg
or
aad
arpl
mov
pop
jmp
add
xor
pop
mov
sub
xor
jmp
xchg
mov
xor
mov
in
add
scas
fmul
mov
imul
and
pushf
fdivr
les
xor
mov
jmp
jmp
mov
mov
fcomi
test
adc
cmp
push
stos
sub
xchg
les
fdiv
jmp
adc
dec
mov
imul
xlat
test
cmp
adc
xchg
add
outs
cld
lds
mov
jo
jmp
loopne
test
and
xor
jnp
test
and
fs
push
adc
mov
loope
dec
jbe
arpl
mov
cmp
adc
inc
les
xor
(bad)
out
outs
aad
popf
adc
retf
cmp
cs
pushf
adc
mov
dec
les
push
aaa
xchg
loop
vpmovsxbw
xchg
mov
je
xor
cmp
mov
xor
mov
(bad)
jmp
out
xor
cmp
imul
xlat
test
cmp
in
xor
adc
dec
mov
test
dec
es
or
les
pop
jbe
arpl
jo
jmp
or
add
mov
jmp
mov
call
mov
jo
jmp
sub
jmp
aaa
(bad)
popa
dec
int3
call
aad
xchg
inc
arpl
jmp
cmp
xchg
enter
pop
pop
shr
(bad)
call
ror
rcr
xor
arpl
cmp
inc
repz
inc
mov
dec
test
and
fs
pop
adc
xor
es
cmp
rcr
jbe
pushf
adc
cmp
out
retf
cmp
sbb
arpl
pop
shr
pop
shr
xchg
imul
std
adc
inc
dec
adc
test
and
xor
and
xor
xchg
or
cmp
sub
cmp
not
jae
bound
push
imul
pop
jmp
xchg
enter
imul
jecxz
add
ins
outs
movs
les
cmp
sbb
sbb
mov
xor
xor
cli
inc
cdq
call
jmp
cmp
push
sahf
xor
push
xor
es
and
lods
repz
jbe
mov
inc
les
lock
jmp
dec
movs
sub
shr
cmp
push
cmp
dec
cmp
arpl
dec
jbe
ror
dec
fwait
jmp
dec
movs
imul
fwait
sbb
mov
pop
pop
out
or
(bad)
call
fimul
std
sbb
or
push
out
mov
lahf
jmp
and
(bad)
add
ins
outs
pop
cmp
mov
lahf
jmp
push
jae
les
add
movs
js
les
xor
arpl
xor
arpl
xor
or
stos
test
adc
sbb
fcomp
arpl
int3
jmp
clc
(bad)
jmp
out
cmps
rcl
lahf
int3
sub
test
or
mov
(bad)
or
aam
arpl
pop
les
int3
xor
les
adc
pop
les
push
stos
sub
xchg
les
fsub
push
jmp
sbb
sub
xor
xchg
or
cmp
sub
les
adc
jbe
mov
mov
pushf
adc
dec
out
retf
cmp
retf
popf
push
cmp
loop
(bad)
jmp
les
add
arpl
mov
cmp
xor
jno
adc
lock
adc
cmp
cmp
jbe
xchg
inc
push
(bad)
xlat
dec
out
retf
cmp
retf
cmp
xor
call
arpl
push
inc
jmp
outs
cwde
cmp
outs
call
lods
add
jbe
call
adc
and
arpl
xor
jmp
repz
inc
mov
addr16
pushf
adc
xchg
ret
xchg
mov
dec
es
cmp
int3
arpl
pop
xchg
ret
stos
xor
(bad)
sub
cmp
mov
imul
jmp
inc
scas
adc
xchg
xchg
in
in
mov
push
retf
cmp
xor
call
arpl
push
cmp
in
xor
add
adc
les
(bad)
arpl
mov
sahf
adc
mov
fs
and
mov
cmp
add
add
repz
popf
adc
xor
ins
pop
mov
pushf
adc
stc
pushf
adc
or
jae
dec
retf
cmp
retf
cmp
xor
cwde
test
loopne
cmp
aam
xchg
cmp
mov
mov
retf
adc
or
ins
outs
test
mov
xor
or
pop
adc
dec
jne
mov
ret
imul
les
adc
and
mov
cmp
cmp
pushf
adc
retf
cmp
inc
into
movs
outs
pushf
cmp
jmp
arpl
fsubr
adc
or
pushf
jmp
fimul
jbe
out
push
leave
cmp
pop
retf
cmp
cs
pushf
adc
repz
retf
adc
xor
or
pop
imul
dec
sar
imul
les
adc
and
mov
cmp
mov
add
retf
cmp
inc
into
movs
outs
pushf
cmp
jmp
arpl
fsub
cmps
out
cmp
xor
(bad)
out
push
leave
cmp
pop
retf
cmp
cs
pushf
adc
repz
retf
adc
xor
jmp
cmp
jmp
push
sub
les
imul
les
ds
inc
retf
cmp
xor
les
mov
lds
pushf
adc
retf
cmp
inc
into
movs
outs
pushf
cmp
jmp
arpl
fmul
xchg
adc
or
pushf
jmp
fimul
jbe
out
push
leave
cmp
push
retf
cmp
cs
pushf
adc
pop
lds
call
pushf
adc
xchg
mov
cmp
retf
les
ds
inc
retf
cmp
(bad)
mov
xor
fiadd
cmp
inc
jo
jmp
pushf
mov
retf
popf
mov
repnz
jbe
bound
fs
xchg
mov
mov
sub
cmp
xor
arpl
and
dec
out
retf
cmp
retf
popa
or
xor
mov
retf
out
xor
arpl
jl
adc
xchg
call
adc
arpl
jmp
dec
mov
in
add
xor
(bad)
ds
cmp
xor
loopne
in
popf
adc
retf
cmp
xor
loop
pop
mov
out
retf
cmp
retf
cmp
mov
pushf
adc
xchg
out
outs
lods
cmp
xor
cmp
sub
sbb
retf
cmp
retf
cmp
xor
out
retf
cmp
or
arpl
xor
es
cmp
shl
inc
mov
retf
popa
mov
pushf
adc
xchg
call
jmp
mov
imul
addr16
pushf
mov
retf
popa
or
xor
mov
retf
out
aaa
les
(bad)
sub
xor
dec
addr16
pushf
adc
xchg
call
adc
arpl
jmp
les
retf
sub
inc
mov
outs
sar
popf
adc
retf
cmp
adc
push
mov
pop
loopne
enter
push
(bad)
arpl
mov
adc
les
popf
adc
retf
cmp
mov
cmp
add
add
xchg
sub
aaa
les
xor
mov
cld
and
retf
outs
leave
cmp
or
out
outs
leave
cmp
xchg
loopne
and
ret
in
dec
mov
adc
mov
cmp
outs
movs
cmp
adc
or
mov
les
xchg
dec
(bad)
(bad)
retf
cmp
(bad)
shl
aaa
(bad)
popa
mov
adc
xchg
call
arpl
push
cmp
call
nop
cmp
adc
les
mov
pushf
adc
xchg
or
xchg
mov
pushf
adc
xchg
call
jmp
push
cmp
call
jp
arpl
mov
cmp
popa
mov
pushf
adc
xchg
call
arpl
push
cmp
jmp
(bad)
loopne
pushf
cmp
jmp
les
jmp
jmp
add
call
out
retf
cmp
retf
dec
out
retf
cmp
retf
push
and
test
les
(bad)
popa
out
pop
inc
cmp
arpl
jge
jmp
(bad)
adc
or
xor
mov
xchg
arpl
ret
daa
jmp
pop
loopne
enter
push
lds
mov
out
retf
addr16
pushf
adc
xchg
or
mov
pushf
adc
xchg
call
jmp
push
cmp
jmp
(bad)
loopne
mov
popf
adc
xor
movs
pushf
adc
xchg
or
retf
jno
adc
mov
popf
adc
arpl
jmp
dec
mov
in
pop
arpl
xor
loopne
push
cmp
daa
xor
arpl
lods
pushf
adc
les
les
mov
cmp
adc
retf
sub
sbb
cmp
cs
movs
lods
mov
cmp
sub
jns
adc
mov
arpl
xor
out
retf
cmp
xor
(bad)
inc
retf
cmp
retf
xchg
or
mov
pushf
adc
xchg
mov
pop
les
lock
addr16
cmp
stos
mov
(bad)
jmp
popf
adc
xor
pushf
pop
ins
cmp
adc
mov
pushf
adc
dec
out
leave
cmp
xor
cmp
pushf
adc
xchg
or
mov
pushf
adc
xchg
mov
pop
les
lock
sbb
jmp
arpl
retf
cmp
cmp
mov
mov
cmp
retf
cmp
retf
std
out
retf
cmp
retf
dec
out
retf
cmp
cmp
out
retf
cmp
cmp
out
retf
cmp
retf
std
out
retf
cmp
retf
inc
ficomp
retf
cmp
leave
cmp
jmp
retf
adc
mov
cmp
popa
add
xor
adc
cmp
cmp
cmp
cmp
fidivr
retf
cmp
loopne
popf
adc
(bad)
int3
call
adc
(bad)
int3
call
adc
(bad)
int3
jmp
inc
adc
cmp
adc
std
pop
ss
scas
pushf
xor
jae
xor
ret
les
push
dec
inc
jmp
xor
add
cmps
xor
movs
scas
enter
xor
es
cld
loope
jmp
push
xor
sbb
cmp
xlat
mov
and
xor
mov
push
retf
cmp
aam
arpl
xor
es
dec
push
add
cmp
adc
cmp
lahf
call
cmp
outs
push
call
jmp
addr16
xor
push
xchg
jmp
dec
movs
xor
jmp
arpl
xor
jmp
les
not
ja
bound
loop
mov
xchg
jmp
dec
movs
adc
xor
mov
stos
xor
jmp
loope
jne
les
adc
cld
stos
xor
loopne
cmp
and
xor
pushw
test
les
xor
arpl
xor
stos
stos
mov
test
add
jae
les
cmp
call
xor
arpl
mov
cmp
movs
jo
jmp
and
push
(bad)
arpl
retf
rcl
jbe
push
sub
sub
shl
jno
(bad)
out
or
and
(bad)
popa
jmp
arpl
mov
popa
jmp
arpl
inc
leave
ret
test
xor
cld
stos
xor
gs
xor
xchg
sbb
mov
les
xor
cld
stos
xor
cdq
jmp
les
ret
jne
les
xor
mov
jmp
jecxz
sub
and
and
and
(bad)
test
add
sar
les
xor
mov
jmp
jecxz
sub
and
xor
xchg
out
sub
and
cmp
fs
sub
loop
push
cmps
arpl
mov
jnp
jne
imul
and
xchg
test
stos
xor
adc
xchg
out
sub
and
xor
sub
jmp
leave
jnp
jne
bound
xor
arpl
xor
aam
retf
cmp
jmp
jmp
retf
arpl
mov
jnp
jne
popa
sub
xor
arpl
xor
call
out
inc
jo
jmp
jmp
leave
jnp
jne
and
xor
arpl
xchg
sub
stos
xor
data16
scas
arpl
ret
and
scas
les
push
fdivr
stos
xor
mov
xor
arpl
pop
and
mov
popa
jmp
cld
cld
stos
xor
lods
jmp
arpl
xor
rep
xor
fucomp
xor
ret
test
xor
cld
stos
xor
int
xor
pushf
out
inc
jo
jmp
popa
add
xor
sbb
pop
and
aaa
sub
push
sub
or
xor
outs
repnz
test
mov
sub
xor
jmp
fs
cmp
mov
hlt
mov
sbb
retf
loopne
jp
xchg
mov
arpl
dec
test
xor
arpl
hlt
jb
jmp
and
add
data16
add
ja
les
or
and
(bad)
pushf
out
or
and
mov
add
out
pop
and
je
outs
fcomi
sub
loop
pushf
mov
retf
rcl
jbe
xchg
out
sub
and
je
out
xor
arpl
test
jmp
xchg
ret
les
in
rcl
jbe
inc
sub
arpl
aas
ins
pop
xor
in
mov
sbb
jmp
push
in
retf
shr
(bad)
xchg
cmp
adc
inc
arpl
xor
push
jmp
loopne
jo
and
ss
push
aas
arpl
xor
rep
xor
mov
inc
loopne
out
pop
and
mov
xchg
jmp
dec
movs
arpl
test
jmp
aad
rcr
jmp
jecxz
into
rcl
mov
cwde
jmp
and
xor
ret
les
imul
les
popa
and
rep
xor
arpl
rcr
jne
pushf
out
cmp
xchg
int3
rep
xor
data16
test
out
inc
lea
adc
rep
xor
mov
mov
enter
dec
arpl
ror
dec
jbe
pushf
out
cmp
xchg
cld
cld
stos
xor
data16
test
out
cmp
add
dec
xor
add
or
xor
inc
cmp
clc
and
and
scas
enter
xor
push
jbe
mov
lods
jo
jbe
xor
mov
arpl
xchg
cwde
ret
test
lods
dec
push
jbe
xor
inc
fwait
arpl
xchg
aam
stos
xor
and
xor
xchg
or
sbb
add
arpl
xchg
xor
stos
xor
sub
les
jno
arpl
xchg
hlt
cld
stos
xor
cmp
add
fwait
arpl
xchg
pushf
ret
test
fwait
cmp
movzx
adc
add
sbb
arpl
cmp
add
jmp
aas
dec
jbe
movs
scas
(bad)
arpl
xor
mov
imul
jmp
les
mov
in
xor
loopne
int3
(bad)
loopne
enter
inc
jo
jmp
push
xor
les
xor
es
mov
and
jmp
(bad)
jmp
xchg
jno
popa
jmp
arpl
mov
lds
xor
push
push
xor
push
push
mov
les
(bad)
popa
out
scas
fcom
addr16
xor
xor
mov
addr16
xor
fs
arpl
xor
push
push
fcomp
jmp
push
dec
mov
lds
adc
xor
arpl
pop
les
out
pop
ret
shr
mov
(bad)
je
arpl
mov
sub
mov
les
mov
mov
addr16
xor
xor
es
ffreep
loop
nop
loopne
jmp
jmp
cmp
jb
call
push
mov
and
scas
call
sub
and
adc
push
jmp
ror
pop
(bad)
int3
xchg
out
scas
fcom
addr16
xor
retf
rcl
jne
call
imul
stos
xor
stos
sub
xchg
sub
jmp
rcl
jbe
pushf
lahf
cmp
pushf
adc
xor
test
mov
fwait
stos
sub
xchg
enter
dec
push
loop
cdq
outs
adc
xor
pushf
in
rcr
les
inc
lock
pop
jo
(bad)
xlat
retf
les
inc
in
ins
pop
jo
popa
xlat
retf
les
inc
fsubr
repz
xlat
retf
les
inc
aam
pop
jo
xlat
retf
les
cmp
call
and
daa
jmp
mov
cmp
add
mov
rcr
test
jge
les
into
mov
rcr
cmp
jmp
popa
in
shl
div
mov
cmp
cld
or
cmp
add
retf
aad
xor
mov
xor
push
mov
jb
adc
xor
or
les
add
arpl
cmp
adc
and
mov
jbe
xor
xor
adc
aam
mov
mov
addr16
in
adc
xor
scas
and
daa
jmp
fadd
call
out
xor
in
pop
jno
or
and
out
and
xor
ins
push
cmp
add
pushf
adc
jbe
jecxz
or
push
mov
or
addr16
jg
fwait
imul
rcl
mov
inc
pop
in
xor
mov
cmp
in
or
jmp
mov
mov
gs
inc
shr
xor
xor
faddp
loopne
xor
push
clc
pop
call
jl
pop
in
ss
arpl
inc
mov
mov
gs
mov
pusha
push
ret
jb
fwait
imul
ret
xor
arpl
xor
push
lds
aam
mov
mov
addr16
in
mov
scas
int3
dec
es
mov
cmp
add
dec
adc
les
or
bound
mov
gs
(bad)
jmp
ret
or
imul
lds
fnstcw
retf
aad
xor
pop
sahf
cmp
popf
jmp
arpl
xor
jnp
popf
sahf
arpl
mov
xlat
data16
inc
mov
mov
les
mov
arpl
xor
ins
push
imul
movzx
outs
mov
inc
jo
jmp
pushf
add
inc
pop
aam
mov
lods
mov
mov
xor
adc
jmp
jb
es
sub
jmp
mov
xor
loopne
cmp
add
sub
(bad)
call
stos
xor
mov
mov
retf
popf
pushf
out
inc
jo
jmp
arpl
xor
inc
xlat
ffree
arpl
inc
in
(bad)
in
sbb
scas
enter
mov
cmp
out
movs
test
jno
adc
(bad)
jmp
hlt
mov
(bad)
jmp
in
mov
into
lds
push
mov
xchg
xchg
arpl
jle
movs
test
iret
rcl
mov
pushf
arpl
lds
jmp
lds
scas
int3
add
fisttp
hlt
xor
aam
out
inc
jo
jmp
aaa
hlt
xor
mov
fadd
jmp
rcr
les
(bad)
retf
aad
and
sub
mov
pushf
adc
push
stos
sub
xchg
loope
jmp
xor
adc
jmp
pushf
jmp
arpl
xor
adc
repnz
xor
aaa
mov
inc
jo
jmp
pushf
jmp
mov
push
js
jmp
mov
stc
cmp
sbb
cmp
jbe
popa
lahf
ss
cmp
add
pushf
sbb
cmp
pop
push
jbe
xor
popf
popf
arpl
mov
cmp
out
mov
retf
aad
(bad)
sub
cmp
mov
sub
(bad)
jmp
lock
lods
test
rcr
xor
cmp
out
and
repnz
xor
out
fstp
pushf
jmp
jb
sbb
cmp
xor
fsubr
jns
pushf
adc
retf
cmp
adc
retf
cmp
call
out
xor
arpl
adc
retf
cmp
jmp
jmp
pushf
out
inc
jo
jmp
arpl
mov
(bad)
jmp
jmp
rcl
jbe
call
adc
and
jmp
mov
mov
adc
les
add
add
sbb
add
ficom
fstp
pushf
lods
mov
arpl
xor
pop
ja
sub
mov
pushf
adc
xor
pushf
out
inc
jo
jmp
arpl
mov
cmp
fstp
pushf
adc
retf
sub
adc
cmp
cmp
push
cmp
popa
jecxz
retf
cmp
test
das
and
retf
dec
mov
or
(bad)
ss
mov
rcr
cmp
adc
mov
arpl
xor
adc
mov
pushf
jmp
mov
les
mov
mov
imul
jae
xor
cwde
jmp
push
push
fmul
cdq
adc
fsubr
pushf
adc
mov
cmp
retf
les
mov
mov
retf
cmp
xor
(bad)
xor
cmp
fld
jg
sub
and
inc
jnp
(bad)
jmp
popa
xchg
add
mov
add
mov
call
cmp
jmp
dec
neg
fstp
pushf
sub
(bad)
jmp
(bad)
pusha
cmps
enter
ds
pushf
outs
shr
adc
retf
cmp
xor
adc
rcl
jbe
jecxz
xlat
sbb
push
and
fsubr
xor
out
jmp
out
or
arpl
mov
cmp
sub
arpl
dec
out
jmp
adc
aaa
(bad)
jmp
inc
ret
xor
cmp
jg
sbb
movs
sbb
retf
cmp
outs
loopne
pushf
adc
retf
cmp
idiv
cmp
adc
retf
sub
mov
loopne
pushf
adc
retf
cmp
test
retf
cmp
outs
sbb
adc
retf
cmp
push
xlat
sbb
xor
gs
call
adc
mov
cmp
out
lds
mov
das
clc
adc
xor
aad
(bad)
sub
mov
out
out
ds
pushf
arpl
rcl
je
ins
pop
mov
add
jbe
movs
test
mov
lods
arpl
xor
xor
or
shl
cmp
jmp
(bad)
les
lds
mov
cmp
stc
mov
xor
pop
in
mov
pop
jmp
les
popa
mov
mov
xor
cs
addr16
arpl
adc
jmp
xor
and
xchg
mov
sbb
xchg
imul
mov
arpl
inc
mov
mov
arpl
fadd
jecxz
xor
imul
cld
arpl
retf
rcl
jbe
ins
pop
mov
add
jbe
out
cmp
retf
lds
stc
mov
xor
push
cld
mov
les
fdivr
out
scas
add
jmp
inc
jmp
sub
mov
(bad)
fimul
jmp
pushf
cwde
fld
jmp
dec
jmp
push
and
adc
mov
pop
jmp
les
inc
in
jecxz
or
arpl
xor
push
hlt
mov
pop
jmp
inc
shl
(bad)
or
arpl
xor
push
loopne
clc
pop
out
xor
arpl
inc
(bad)
and
cld
retf
aad
xchg
sbb
mov
imul
fsubr
aaa
mov
call
jno
xor
int
pushf
imul
sbb
xchg
xor
shr
adc
in
add
popa
jmp
and
adc
retf
inc
xchg
add
shr
adc
inc
adc
out
inc
jo
jmp
out
fstp
pushf
jmp
jb
sbb
cmp
xor
fsubr
sbb
pushf
adc
not
pop
mov
cmp
es
test
push
les
jno
bound
and
fild
and
(bad)
aad
jmp
jmp
mov
jmp
icebp
out
jbe
(bad)
xor
arpl
nop
dec
push
cmp
(bad)
(bad)
xor
arpl
nop
inc
push
adc
(bad)
arpl
mov
add
cmp
call
jmp
dec
ss
sbb
adc
xor
ret
retf
ror
mov
popf
sti
inc
and
dec
xor
arpl
retf
aad
leave
(bad)
daa
(bad)
in
retf
out
xor
arpl
cmp
stos
xor
jecxz
retf
lds
lds
xor
arpl
xor
(bad)
loopne
je
addr16
cmp
add
in
mov
addr16
ds
cdq
out
inc
int
adc
push
cmp
add
lahf
cmp
in
mov
data16
xor
aaa
dec
adc
xchg
fwait
in
xchg
hlt
les
or
xor
addr16
cmp
add
sbb
xor
jmp
mov
push
cmp
jno
bound
cmp
xchg
pushf
adc
xor
jne
aaa
retf
aad
enter
in
gs
cmp
ds
es
xor
mov
imul
scas
xor
ins
pop
aaa
stc
loopne
xor
push
out
mov
pushf
jmp
jb
adc
not
xor
inc
int3
fcomp
sbb
jmp
xor
mov
mov
pushf
stos
mov
(bad)
jmp
jecxz
or
push
jmp
das
movs
mov
bound
in
dec
mov
sub
xchg
in
jmp
xor
mov
xchg
or
retf
cmp
sub
mov
mov
addr16
adc
les
mov
adc
les
lock
adc
xor
std
pop
ss
xchg
fdivr
dec
imul
imul
scas
arpl
pop
les
mov
pop
ss
inc
(bad)
out
xchg
xor
pushf
call
xor
or
pop
inc
arpl
xor
pusha
xor
xor
push
mov
add
xchg
arpl
mov
mov
imul
es
in
arpl
xor
add
les
jmp
or
xor
es
mov
(bad)
jmp
mov
outs
jmp
es
ffreep
out
scas
int3
dec
es
retf
mov
mov
fmul
jmp
arpl
cmp
adc
or
xor
sbb
dec
arpl
lds
xor
jmp
mov
nop
les
repnz
movs
mov
retf
out
add
(bad)
or
pop
les
jmp
stos
adc
xor
call
cmp
mov
fmul
xor
xor
arpl
cmp
xor
xchg
or
xor
jmp
xor
jmp
cmp
arpl
inc
(bad)
out
xchg
fcomp
pusha
ja
pop
and
and
scas
int3
dec
movs
xor
jmp
or
pop
les
hlt
cmp
loop
and
jmp
test
xor
sub
xor
mov
xor
mov
xor
arpl
cmp
adc
cmp
arpl
in
fwait
arpl
xchg
mov
les
hlt
test
std
pop
ss
xchg
xor
sbb
int3
xor
push
xor
jb
aam
pop
and
dec
enter
cmp
out
test
mov
enter
xor
pop
or
mov
lock
xor
xlat
ins
pop
xor
xor
fcom
cmps
loop
(bad)
ds
sub
adc
or
push
out
repnz
call
out
xor
sbb
jmp
cmps
loop
sbb
mov
or
xor
cmp
push
out
sbb
int
les
rcl
xchg
rcl
add
retf
aad
sete
(bad)
xchg
aad
arpl
mov
imul
loop
test
sub
mov
jno
jmp
fwait
cmp
arpl
inc
pop
addr16
xor
mov
pop
fnstsw
pop
add
jmp
mov
mov
xchg
mov
pop
fisubr
xor
nop
dec
mov
jmp
jmp
ret
jno
jnp
mov
test
jno
mov
mov
add
xor
and
jmp
jb
out
lds
hlt
xor
cmp
xor
push
ss
mov
les
pop
cmp
dec
cmp
dec
out
jae
call
pop
inc
mov
les
add
sbb
sub
xchg
retf
out
mov
mov
mov
popf
jmp
mov
jmp
dec
mov
pop
xor
ss
jae
ret
in
mov
in
xchg
and
ror
jmp
dec
mov
and
or
ds
enter
ret
cmp
aam
xor
mov
adc
scas
ror
out
jae
loop
xchg
imul
xchg
imul
lds
push
mov
dec
mov
mov
lahf
stos
sub
jp
push
fucomi
and
arpl
inc
in
stos
xor
ficom
mov
repz
push
pop
les
repz
push
and
push
repz
push
repz
push
and
push
repz
push
repz
push
pop
xor
repz
push
fucomi
test
sub
pop
and
add
jp
push
pop
mul
repz
push
loopne
xor
or
push
push
push
movs
push
repz
push
repz
push
add
mov
movs
repz
push
repz
fadd
arpl
xor
repz
push
repz
dec
stc
and
movs
jmp
repz
sub
repz
dec
sub
movs
push
repz
fs
repz
cmc
jo
movs
push
repz
std
test
movs
push
repz
fcom
movs
inc
mov
imul
stos
jp
push
repz
mov
cmp
mov
sar
jmp
arpl
push
push
repz
push
fucomi
and
arpl
shl
movs
push
cmp
movs
push
repz
cmp
jp
push
pop
mov
pop
stos
xor
jmp
add
push
cmp
repz
push
jmp
xor
jp
push
bnd
push
repz
push
repz
push
fst
add
push
bound
movs
push
repz
ss
push
fucomi
test
arpl
push
pop
mov
(bad)
adc
test
push
jmp
add
push
cmp
repz
push
jmp
xor
jp
push
bnd
push
repz
push
repz
push
(bad)
add
push
bound
movs
push
repz
ss
push
add
push
repz
sub
mov
imul
dec
ds
sub
jno
mov
dec
mov
push
add
xor
jmp
mov
je
cmp
iret
inc
push
adc
gs
arpl
push
sub
movs
xor
jmp
(bad)
fsubr
xor
arpl
adc
jae
cmp
(bad)
jae
cmp
cdq
push
in
and
mov
jmp
mov
dec
mov
bound
je
aad
cmp
adc
jb
hlt
or
arpl
xor
jae
in
lds
in
mov
imul
nop
xor
or
pop
push
arpl
xor
sbb
movs
xor
ins
pop
jno
xor
lds
in
xchg
cdq
jmp
xchg
mov
les
xor
sbb
jmp
xchg
mov
lock
sub
inc
push
push
add
arpl
push
cmp
sbb
jae
out
std
movs
in
fcomp
std
pop
ss
inc
pop
addr16
xor
cmc
shl
shl
test
arpl
les
gs
mov
sub
leave
mov
arpl
popf
jmp
add
test
les
in
add
les
jno
xor
int3
cmp
cmp
(bad)
arpl
cmp
add
and
iret
push
jbe
dec
dec
ins
fisubr
mov
jb
add
add
retf
push
jbe
jmp
les
cmc
mov
pop
enter
xor
out
lock
jmp
cs
fisubr
(bad)
loop
pop
mov
jmp
jbe
mov
es
xor
push
jbe
pusha
out
clc
jns
jmp
mov
jbe
jmp
xchg
arpl
ret
daa
jmp
(bad)
adc
les
mov
fwait
out
xchg
adc
test
(bad)
data16
cmp
cmp
test
jmp
cs
pushf
arpl
retf
aam
cmc
es
jecxz
pop
cmp
ficom
sub
cmps
xor
jmp
(bad)
call
adc
out
cmp
call
test
push
mov
data16
and
jmp
fisubr
(bad)
loop
shl
arpl
mov
dec
jbe
mov
es
xor
push
jbe
pusha
out
clc
jns
jmp
mov
jbe
jmp
(bad)
sbb
les
mov
xchg
out
xchg
adc
test
(bad)
data16
xor
xor
lock
jmp
call
test
dec
outs
cmp
(bad)
jmp
les
sub
push
mov
fisubr
mov
inc
in
(bad)
lds
out
mov
mov
cmp
add
jmp
xor
mov
cmp
pop
les
call
pop
les
je
push
loop
int3
sub
xor
es
mov
sbb
xor
or
mov
mov
mov
dec
lea
retf
mov
add
sub
mov
je
outs
push
xor
arpl
ret
daa
jmp
lahf
stos
sub
xchg
fsub
xor
xor
inc
inc
jl
xchg
xor
xchg
or
inc
(bad)
pop
retf
cmp
sub
rcl
jbe
leave
jmp
and
mov
add
push
out
add
gs
mov
in
cmc
cmp
mov
mov
dec
cdq
bound
add
adc
movs
(bad)
arpl
cmp
adc
and
jmp
add
jmp
movs
jmp
or
popf
adc
xor
int3
adc
adc
popa
(bad)
arpl
mov
mov
sub
rcr
cmp
ins
les
mov
popf
adc
xchg
xchg
rcr
jmp
xor
add
or
pop
(bad)
or
pop
les
jmp
sahf
adc
jae
arpl
xor
loop
dec
test
in
jg
arpl
leave
cmp
xor
fwait
push
jbe
pushf
pop
sar
adc
xor
xchg
jmp
dec
movs
adc
retf
sub
lods
xor
pushf
out
inc
jo
jmp
out
outs
retf
cmp
xor
out
outs
iret
cmp
jbe
out
outs
retf
cmp
xor
mov
mov
arpl
ret
and
outs
fdivr
pushf
adc
inc
jo
jmp
scas
xor
retf
cmp
xor
mov
xor
arpl
xor
push
xor
xor
jecxz
cmp
arpl
mov
aaa
imul
pop
jmp
ss
inc
(bad)
out
xchg
xor
inc
rcr
fimul
dec
arpl
in
fwait
arpl
cmp
add
arpl
jmp
sbb
aad
retf
arpl
xor
push
out
mov
add
xor
jecxz
xor
sbb
adc
enter
xor
loop
or
arpl
retf
mov
add
mov
imul
packsswb
rcl
add
retf
mov
add
and
lds
adc
and
push
out
mov
add
les
mov
jnp
imul
xor
sar
push
lds
sbb
(bad)
cmp
cli
retf
mov
adc
xor
arpl
fdivr
not
xor
mov
push
adc
xchg
out
scas
enter
pop
ret
xor
arpl
inc
enter
sub
mov
inc
rcl
repz
lahf
sub
push
dec
mov
xor
cli
retf
mov
add
arpl
cmp
mov
add
mov
add
cmp
adc
sub
mov
je
stos
sub
xchg
aam
mov
jno
add
push
jg
inc
imul
and
jmp
out
scas
enter
xor
arpl
retf
mov
add
and
add
out
add
cmp
xor
push
cli
retf
mov
add
and
add
out
mov
add
and
add
lock
mov
add
jae
repnz
fild
and
arpl
mov
pop
ss
xchg
xor
fsub
sub
mov
lahf
aas
jbe
arpl
xor
xor
xchg
and
sbb
aas
jbe
pop
scas
int3
mov
fcomi
test
sub
xor
arpl
jbe
mov
enter
mov
jbe
xor
push
inc
rcl
rcr
fmul
push
ffreep
loop
rcr
arpl
imul
jae
dec
stos
ret
cld
dec
mov
and
xor
xor
not
xor
popa
imul
and
dec
es
mov
xchg
lahf
arpl
das
push
push
cli
outs
lahf
sbb
ret
in
xchg
jmp
aam
mov
les
lock
sbb
mov
xor
fwait
imul
sbb
jmp
jecxz
or
push
icebp
mov
ret
es
es
repnz
jno
out
xor
jmp
lds
jmp
loope
xor
push
inc
fldl2e
sbb
aam
xchg
jbe
arpl
cmp
sub
dec
mov
fcomi
fwait
cmp
arpl
inc
(bad)
(bad)
addr16
xor
imul
inc
popa
xor
sbb
mul
addr16
scas
xor
jmp
inc
movs
loop
scas
and
mov
arpl
mov
das
jne
add
imul
into
ins
pop
xor
loopne
inc
dec
fnstenv
push
adc
loop
(bad)
in
jmp
arpl
jl
aam
retf
(bad)
cmovge
jmp
movs
mov
fwait
push
les
mov
sub
fmul
imul
xor
outs
sbb
jmp
loopne
and
aam
retf
adc
call
mov
pop
ss
jl
jmp
arpl
ja
pop
sub
shl
sar
adc
retf
cmp
retf
adc
les
pushf
imul
xor
sbb
ret
push
sub
in
push
adc
cmp
popf
xchg
add
les
inc
ror
arpl
jl
jmp
popf
adc
leave
cmp
push
in
cmp
adc
mov
dec
(bad)
xor
arpl
arpl
arpl
mov
cmp
sub
mov
jmp
arpl
fdivr
xor
xchg
ret
les
popa
jno
jmp
add
jecxz
xor
add
loop
push
mov
leave
cmp
data16
daa
retf
cmp
cs
ss
cmp
in
scas
xor
loopne
cmp
sub
pop
enter
fcomp
loop
cld
es
cli
sbb
dec
xlat
or
aam
arpl
retf
sub
scas
xor
loopne
cmp
xchg
fcmovnb
dec
movs
add
and
xor
xchg
adc
sub
scas
xor
fimul
ret
cmp
pushf
adc
xchg
or
jmp
arpl
xor
cmps
cli
fcomp
jmp
cli
sbb
dec
xlat
or
aam
arpl
retf
sub
scas
xor
loopne
cmp
push
xor
enter
fsub
daa
jmp
daa
jmp
cli
sbb
dec
xlat
or
aam
arpl
retf
sub
scas
xor
loopne
cmp
sbb
xor
arpl
cmp
inc
add
arpl
lea
xchg
adc
ficom
retf
cmp
xor
mov
aam
lahf
adc
outs
enter
lods
inc
xor
jge
arpl
mov
ja
fiadd
cmp
xor
inc
scas
xor
(bad)
xor
arpl
cmp
jo
les
jmp
mov
lock
or
jmp
arpl
retf
sub
scas
xor
loopne
cmp
mov
xor
arpl
cmp
jo
les
jmp
mov
jo
arpl
int3
or
jmp
arpl
retf
sub
test
cmp
shr
xor
arpl
cmp
inc
add
cmps
arpl
xor
xchg
adc
ficom
retf
cmp
xor
mov
arpl
aam
lahf
pop
les
ror
es
cmp
xor
fiadd
aaa
les
ret
cmp
and
mov
cmp
pop
xchg
mov
cmp
adc
enter
lods
mov
jbe
xor
xchg
mov
inc
add
into
arpl
xor
xchg
adc
sub
test
xor
arpl
cmp
pushf
adc
xchg
or
jmp
arpl
xor
cmps
cli
mov
inc
stos
adc
fdiv
jmp
cli
sbb
dec
xlat
or
aam
arpl
retf
sub
test
cmp
test
xor
(bad)
xor
arpl
cmp
jo
call
and
retf
jno
adc
jbe
arpl
int3
mov
arpl
les
lods
xor
stc
pop
xor
test
cmp
push
retf
cmp
mov
imul
xchg
arpl
lods
hlt
xor
les
retf
cmp
xor
mov
ror
push
les
lods
xor
stc
pop
bsr
retf
cmp
mov
imul
xchg
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
pushf
pop
enter
fcomp
loop
shl
jmp
cli
sbb
dec
out
call
push
les
lods
xor
adc
or
and
arpl
stos
xor
loopne
and
push
retf
out
xor
add
xor
les
retf
(bad)
mov
jmp
arpl
dec
dec
out
retf
cmp
retf
jmp
adc
cmp
retf
cmp
retf
retf
aad
cmovge
jmp
xor
jge
jmp
sub
jmp
leave
cmp
cmp
mov
cmp
outs
sbb
jmp
xor
pop
test
mov
ja
sbb
arpl
ret
and
outs
mov
sahf
adc
hlt
cmp
adc
xor
ins
push
retf
jno
adc
sub
out
xor
pushf
mov
retf
adc
jmp
loopne
sub
pushf
stos
xor
(bad)
xor
arpl
cmp
jo
imul
lahf
adc
jne
arpl
int3
mov
je
arpl
les
lods
xor
stc
pop
bsr
retf
cmp
mov
imul
xchg
arpl
sub
stos
xor
(bad)
xor
arpl
cmp
jo
les
jmp
mov
les
lock
loop
lock
jmp
call
adc
leave
cmp
cmp
leave
cmp
sbb
and
outs
hlt
cmp
xchg
xor
fsubr
outs
int3
cmp
jmp
pushf
jmp
jmp
cmp
or
cmp
lds
mov
cmp
outs
fdivr
sahf
adc
ins
sbb
jmp
xor
sub
add
mov
inc
stos
adc
xor
call
cmp
sbb
les
repnz
push
retf
cmp
xor
out
retf
cmp
retf
inc
cmps
out
mov
cmp
retf
mov
adc
retf
dec
out
retf
cmp
xor
mov
arpl
fmul
push
les
lods
xor
stc
pop
cdq
mov
push
retf
cmp
mov
imul
xchg
arpl
sub
aad
(bad)
(bad)
xor
arpl
cmp
jo
call
and
retf
jno
adc
or
arpl
int3
mov
or
arpl
les
lods
xor
stc
pop
xor
test
cmp
push
retf
cmp
mov
imul
sub
shl
loop
jne
arpl
retf
inc
xchg
adc
xor
pushf
adc
retf
cmp
retf
inc
cmps
out
inc
fwait
adc
cmp
adc
cmp
shr
xchg
cmp
fs
(bad)
loopne
cmp
mov
loopne
les
ret
cmp
jo
imul
lahf
adc
or
arpl
int3
mov
arpl
les
lods
xor
stc
pop
bsr
retf
cmp
mov
imul
test
add
pop
cli
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
pushf
pop
enter
fmul
jmp
mov
push
retf
cmp
mov
imul
cli
arpl
(bad)
into
arpl
xor
xchg
adc
sub
aam
(bad)
fimul
ret
cmp
pushf
adc
xchg
or
jmp
arpl
xor
cmps
cli
fadd
pop
jmp
cli
sbb
dec
xlat
or
cmp
jl
xor
loopne
cmp
xchg
icebp
push
les
loope
arpl
(bad)
into
arpl
xor
xchg
adc
lods
test
jbe
pushf
pop
enter
fdiv
pop
jmp
pop
jmp
cli
sbb
dec
xlat
or
aam
arpl
retf
sub
xlat
xor
loopne
cmp
call
loopne
les
ret
cmp
inc
add
arpl
lea
xchg
adc
ficom
retf
cmp
xor
mov
aam
ret
jmp
adc
sub
xlat
xor
loopne
cmp
xchg
ret
les
add
stc
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
pushf
pop
enter
fcomp
cmps
loop
fdivr
push
retf
cmp
mov
imul
stc
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
pushf
pop
enter
fsub
pop
jmp
mov
push
retf
cmp
mov
imul
jne
xor
movs
(bad)
xor
(bad)
xor
arpl
cmp
jo
les
jmp
mov
les
lock
out
outs
jmp
push
retf
cmp
xor
mov
arpl
aam
ins
or
arpl
les
lods
xor
stc
pop
xor
test
cmp
push
retf
cmp
mov
imul
jno
adc
or
arpl
int3
mov
les
lods
xor
stc
pop
xor
test
cmp
push
retf
cmp
mov
imul
arpl
ret
and
outs
hlt
cmp
lock
arpl
(bad)
arpl
lods
xor
cli
adc
arpl
retf
sbb
and
arpl
(bad)
xor
loopne
and
mov
xor
(bad)
xor
arpl
cmp
jo
les
jmp
mov
or
arpl
int3
or
xchg
cmp
cwde
shl
loopne
cmp
aam
xor
(bad)
xor
arpl
cmp
jo
les
jmp
mov
les
lock
loop
inc
and
xor
imul
int
cdq
out
dec
out
nop
pinsrw
les
lods
xor
adc
or
and
arpl
shl
loopne
and
mov
jbe
pushf
pop
enter
fmul
xor
cmps
loop
les
jmp
or
xor
and
or
arpl
sub
pop
retf
inc
movs
jae
les
cmp
in
xor
or
mov
cmp
retf
jno
adc
fdivr
sahf
adc
xor
(bad)
add
cmp
retf
jno
adc
add
arpl
lds
jl
les
mov
pushf
pop
retf
fwait
cmp
arpl
inc
(bad)
loop
les
mov
fwait
sbb
retf
arpl
add
adc
add
test
dec
out
retf
mov
xor
fcmovne
dec
movs
xor
aaa
jbe
out
outs
retf
cmp
xor
mov
lock
scas
retf
(bad)
retf
clc
cbw
mov
and
pop
mov
jmp
pushf
and
and
pop
push
mov
ss
or
xor
jecxz
mov
add
fistp
stos
sub
xchg
push
popa
jmp
outs
push
inc
dec
fcmovne
dec
movs
imul
inc
pop
jmp
push
mov
outs
movs
cmp
xor
(bad)
jmp
pushf
adc
mov
sub
bound
fnsave
call
call
xchg
cmp
xor
jmp
jno
pop
retf
cmp
popa
popa
int3
call
adc
mov
dec
div
cmp
repz
mov
add
arpl
mov
(bad)
dec
leave
cmp
mov
cmp
fsub
loop
dec
sbb
retf
cmp
mov
inc
cmp
mov
dec
mul
cmp
xor
arpl
les
arpl
inc
xchg
push
cmp
arpl
mov
sahf
adc
or
icebp
arpl
fs
shl
or
xor
jo
adc
call
sbb
jmp
jne
retf
cmp
cs
mov
dec
add
arpl
hlt
sub
mov
retf
xor
arpl
mov
cmp
addr16
sahf
adc
add
arpl
retf
cmp
jp
cmp
retf
cmp
(bad)
leave
cmp
retf
cmp
dec
leave
cmp
retf
cmp
add
pushf
adc
mov
sahf
adc
cmp
arpl
hlt
sub
or
xchg
mov
popf
adc
or
arpl
in
fwait
arpl
dec
out
leave
cmp
retf
cmp
add
xor
out
leave
cmp
mov
popf
adc
or
arpl
fsubr
adc
inc
fist
cmp
jmp
pushf
adc
push
add
add
cmp
leave
cmp
mov
popf
adc
repz
jmp
pushf
mov
retf
popf
out
outs
nop
cmp
retf
mov
pop
in
jmp
lahf
adc
cmp
xor
fidiv
push
cmp
jmp
pushf
adc
xor
fwait
ret
int3
dec
movs
adc
retf
lods
jno
jbe
or
mov
popf
adc
add
arpl
aam
outs
inc
cmp
ret
iret
ds
pushf
mov
xor
inc
fbstp
jmp
sub
jmp
jecxz
inc
cmp
leave
cmp
out
mov
xor
jmp
fidivr
cmp
(bad)
les
or
shl
dec
out
retf
mov
xor
or
pop
scas
mov
push
retf
mov
retf
inc
cmps
out
cmp
xchg
pop
sahf
adc
mov
call
retf
cmp
repz
xor
outs
imul
hlt
arpl
mov
cmp
add
arpl
mov
jmp
sahf
adc
fdiv
adc
retf
sub
fnstenv
pushf
pop
nop
cmp
xor
out
leave
cmp
xor
xchg
or
retf
cmp
sub
test
mov
and
xor
push
mov
arpl
add
xor
jmp
cmp
adc
sub
fnstenv
jmp
mov
add
push
add
add
push
add
pop
jno
ins
pop
popa
cmp
cmp
sbb
adc
pop
popa
xor
scas
and
xor
xor
jmp
les
mov
jg
cmp
arpl
jmp
pop
shr
sub
jmp
les
lock
dec
xchg
imul
cmc
arpl
retf
mov
in
sbb
(bad)
jmp
mov
in
sbb
addr16
popa
mov
xor
ins
pop
jno
out
scas
xor
ins
pop
popa
cmp
cmp
sbb
xor
sub
fidiv
out
scas
int3
xchg
or
bound
jmp
arpl
inc
mov
les
retf
xchg
mov
les
jno
xor
xchg
mov
jno
cmp
outs
or
(bad)
mov
arpl
addr16
xor
imul
add
int3
in
fwait
arpl
jl
loop
les
retf
cmp
sub
retf
cmp
cmc
xor
out
outs
mov
adc
aam
pushf
mov
xor
mov
sub
add
outs
movs
les
mov
es
xor
xor
retf
sub
fidiv
loopne
cmp
mov
and
cmp
add
arpl
xor
retf
dec
movs
fcomi
test
or
cmp
cmc
xor
out
outs
mov
adc
aam
pushf
mov
xor
push
inc
lock
cmp
cs
pushf
add
lock
mov
imul
mov
adc
retf
cmp
out
adc
cmc
mov
add
fild
sub
cmp
not
inc
jmp
xor
outs
aas
pop
ins
inc
movs
retf
arpl
lds
out
xor
hlt
arpl
mov
test
(bad)
xor
add
loop
push
bound
data16
push
retf
cmp
cs
ss
jno
arpl
mov
imul
or
xor
xchg
ret
les
cmp
jmp
xor
xor
add
aad
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
fcomp
xor
(bad)
xor
arpl
cmp
dec
add
cmps
arpl
xor
xchg
adc
fsubrp
aam
pushf
mov
xor
fsubrp
aam
pushf
mov
xor
cmps
cli
fadd
xor
imul
int
cdq
out
dec
ror
sbb
xchg
mov
adc
les
lock
jmp
repz
jmp
push
jmp
push
jmp
cli
sbb
dec
ror
sbb
xchg
mov
adc
les
lock
mov
pop
les
les
lods
xor
ret
fmul
push
jmp
cli
sbb
xor
pushf
adc
jbe
out
push
xor
pushf
adc
xor
loopne
and
push
cli
pop
(bad)
mov
jmp
mov
jmp
push
jmp
xchg
or
inc
xchg
xor
fdiv
xor
imul
int
cdq
out
dec
ror
sbb
xchg
mov
adc
les
lock
or
jmp
arpl
les
push
push
les
lock
mov
les
lods
xor
(bad)
pop
xor
test
dec
out
aam
pushf
mov
xor
cmps
loop
(bad)
mov
jmp
push
jmp
xchg
or
inc
xchg
xor
fdiv
push
jmp
cli
sbb
dec
in
mov
push
les
push
les
lods
xor
or
cmp
ins
sbb
jmp
xor
and
arpl
mov
jae
sbb
inc
arpl
retf
cmp
add
mul
mov
imul
cmc
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
sub
jbe
out
outs
xor
pushf
adc
xor
loopne
cmp
xchg
fcmovnb
dec
movs
add
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
jns
jbe
out
outs
xor
pushf
adc
xor
loopne
cmp
add
xor
(bad)
xor
arpl
cmp
ja
les
jmp
xor
mov
arpl
mov
imul
dec
jmp
arpl
retf
cmp
sbb
and
mov
cmp
add
cmc
arpl
mov
jae
sub
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
arpl
(bad)
out
outs
xor
pushf
adc
xor
loopne
cmp
sbb
(bad)
(bad)
xor
arpl
cmp
ja
les
jmp
xor
xor
add
or
jmp
add
push
fadd
arpl
lods
xor
cli
adc
arpl
retf
cmp
and
and
mov
cmp
test
add
dec
hlt
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
mov
outs
xor
pushf
adc
xor
loopne
cmp
lea
les
or
arpl
(bad)
into
arpl
xor
xchg
adc
lods
xchg
or
out
outs
xor
pushf
adc
xor
loopne
cmp
je
xor
(bad)
xor
arpl
cmp
dec
add
hlt
arpl
lea
xchg
adc
fsubrp
aam
pushf
mov
xor
fsubrp
aam
pushf
mov
xor
cmps
cli
pop
adc
test
dec
out
aam
pushf
mov
xor
cmps
loop
les
jmp
or
xor
and
xor
out
jmp
pushf
imul
je
xor
out
aam
pushf
mov
xor
arpl
cmp
adc
mov
adc
sbb
xor
(bad)
push
jmp
pushf
add
arpl
add
dec
xchg
ret
les
mov
lahf
stos
sub
xchg
inc
addr16
push
adc
fwait
sbb
iret
cmp
leave
cmp
inc
mov
jmp
dec
jmp
popa
jmp
push
not
retf
cmp
adc
and
outs
mov
pushf
adc
pop
les
fdiv
dec
jmp
loop
in
arpl
pop
les
shl
outs
xchg
cmp
mov
cmp
add
jmp
xor
out
leave
cmp
xor
xlat
ss
or
xor
jecxz
aam
pushf
adc
hlt
retf
out
les
xor
arpl
mov
cmp
addr16
sahf
adc
push
les
int3
lds
dec
leave
cmp
retf
cmp
add
add
hlt
retf
out
les
xchg
sbb
jmp
xor
popf
jmp
retf
cmp
addr16
popf
adc
sbb
arpl
ret
adc
retf
cmp
adc
or
mov
cmp
add
jmp
repz
xor
out
retf
scas
xor
arpl
retf
lds
xor
fidiv
cmp
mov
popf
adc
repz
jmp
pushf
mov
retf
popf
out
outs
nop
cmp
retf
mov
pop
in
jmp
lahf
adc
cmp
xor
shl
sub
inc
loope
xor
pushf
pop
pushf
cmp
xor
fwait
jmp
dec
movs
adc
retf
lods
jno
jbe
or
mov
popf
adc
sbb
arpl
aam
outs
dec
aas
pushf
adc
repz
jmp
pushf
mov
xor
dec
shl
sub
add
icebp
pop
sub
jmp
jecxz
dec
aas
pushf
adc
iret
cmp
ret
jecxz
les
xor
arpl
fcom
ret
int3
dec
movs
xor
arpl
mov
cmp
mov
xor
bound
mov
cmp
add
pushf
adc
retf
cmp
cmp
jmp
pushf
adc
ret
cmp
cmp
jmp
not
retf
cmp
outs
mov
sub
ret
xor
loop
dec
scas
arpl
mov
cmp
adc
retf
sub
cmp
retf
jno
pop
retf
cmp
cmp
and
(bad)
dec
jmp
arpl
inc
cmps
(bad)
cmp
iret
mov
ret
xor
call
adc
mov
cmp
jle
cmp
mov
outs
add
dec
out
leave
cmp
retf
jno
pop
retf
cmp
imul
scas
arpl
bound
ret
xor
movs
outs
test
pushf
adc
mov
cmp
add
in
arpl
mov
add
jmp
mov
sbb
pusha
sahf
adc
xor
call
adc
cmp
cmp
test
mov
and
xor
push
ret
mov
popf
mov
popa
in
arpl
mov
enter
les
popa
cmp
mov
je
sbb
xor
jmp
les
repz
ret
and
scas
ror
fsub
dec
jmp
gs
sub
int
les
add
arpl
mov
les
jmp
dec
jmp
mov
arpl
xor
mov
sub
int
les
jmp
stos
sub
xchg
aam
jmp
xor
inc
adc
xor
or
retf
mov
add
in
arpl
mov
cmp
sub
add
cmp
dec
out
les
pushf
mov
xor
or
retf
mov
addr16
xchg
adc
test
pushf
imul
les
xor
add
inc
xchg
hlt
push
les
ss
mov
arpl
das
int3
mov
or
loopne
cmp
jge
ret
outs
sbb
xor
movs
scas
retf
add
aam
retf
in
call
xor
add
out
arpl
mov
dec
mov
(bad)
out
scas
rcl
xor
push
push
xchg
sbb
jae
adc
add
mov
xor
es
fs
shl
cs
es
fs
arpl
retf
icebp
dec
jne
les
mov
sbb
jg
or
loopne
cmp
jnp
mov
test
cmp
sub
les
call
pop
ror
pop
les
jmp
arpl
xor
arpl
mov
les
ror
adc
scas
push
adc
xor
in
ret
or
arpl
(bad)
stos
xor
sbb
xor
or
arpl
ret
sub
ret
or
arpl
cld
stos
xor
cmp
xor
or
arpl
imul
xor
loop
stos
xchg
arpl
pop
lds
add
push
ret
arpl
or
lds
add
push
retf
arpl
sbb
lds
add
push
jp
xchg
sub
lds
add
push
sahf
xchg
xchg
cmp
xor
sbb
scas
push
adc
xor
nop
int
les
jmp
scas
push
adc
xor
or
les
jmp
scas
push
adc
xor
mov
xor
or
arpl
shr
(bad)
fistp
les
ror
push
mov
pop
xor
neg
(bad)
xchg
mov
xor
xor
or
retf
icebp
mov
les
dec
adc
and
pop
aam
stos
xor
lahf
adc
xor
pop
int
les
push
retf
icebp
jecxz
jbe
mov
adc
arpl
pop
and
pop
aam
stos
xor
lahf
adc
xor
je
xor
loop
jbe
arpl
pop
cmp
fdivr
jne
les
cli
mov
arpl
stos
test
(bad)
arpl
pop
cmp
fcom
inc
jmp
or
mov
arpl
mov
loop
jmp
and
fdiv
xor
sbb
les
cli
mov
arpl
stos
test
xchg
loop
jmp
and
fmul
jmp
or
mov
arpl
stos
test
mov
arpl
mov
add
push
retf
icebp
out
jbe
mov
sub
jmp
lahf
adc
xor
xor
xor
cmp
popa
dec
xchg
shl
jge
inc
mov
pop
les
rcr
jmp
pushf
adc
out
xchg
fadd
adc
xchg
int3
cld
stos
xor
arpl
xor
xchg
scas
sub
arpl
xor
mov
xor
arpl
xor
arpl
xor
popa
jno
dec
scas
les
jmp
and
pop
and
arpl
xor
mov
adc
arpl
fs
pop
les
pop
les
or
adc
adc
xor
mov
xor
mov
jmp
addr16
(bad)
jmp
les
pop
les
pop
push
(bad)
jmp
xchg
imul
scas
ja
cmp
sbb
jbe
or
fadd
inc
jmp
or
pop
(bad)
or
pop
les
out
pop
lds
jmp
popa
jmp
imul
(bad)
jmp
cmp
stos
test
push
loope
jmp
and
pop
les
pop
aam
fdiv
les
push
scas
dec
xor
mov
xor
mov
jmp
pop
dec
jbe
loop
add
arpl
pop
les
pop
les
pop
aam
leave
les
dec
scas
dec
xor
mov
xor
mov
jmp
ret
dec
jbe
or
retf
icebp
push
jne
les
jmp
or
pop
adc
ret
jmp
arpl
lods
lods
xor
or
out
xchg
xor
or
(bad)
shl
test
xor
push
fisubr
cmp
xchg
test
and
sbb
xor
or
arpl
xor
or
arpl
pop
les
dec
and
jmp
and
pop
les
pop
mov
arpl
xor
ja
aaa
(bad)
sbb
jbe
or
fdiv
mov
vfnmsub231ps
arpl
pop
mov
arpl
fs
into
xor
or
xor
and
xor
pushf
(bad)
pop
and
(bad)
inc
jmp
cld
stos
xor
arpl
xor
dec
jmp
les
fcomp
jmp
jecxz
pop
sbb
jbe
or
fmul
inc
jmp
loop
push
les
pop
les
pop
call
pop
sbb
arpl
xor
pusha
jmp
arpl
pop
les
dec
sbb
jmp
arpl
xor
arpl
xor
jae
shrd
xor
les
pop
scas
mov
xor
or
fmul
jmp
jmp
dec
movs
xor
fisubr
cmp
xchg
test
and
loop
xor
or
and
arpl
pop
les
lods
xor
jbe
or
out
xchg
xor
and
xor
rcr
cmp
stos
test
xor
push
scas
xchg
test
and
add
sub
arpl
pop
pop
arpl
xor
arpl
xor
or
out
pop
and
pop
les
dec
add
and
pop
les
pop
les
pop
aam
pop
xor
arpl
pop
mov
xor
pop
push
mov
add
out
jmp
arpl
xor
arpl
xor
jae
bound
dec
xor
arpl
pop
ret
xor
mov
jmp
test
icebp
push
jne
les
jmp
or
pop
call
repnz
arpl
lods
mov
jmp
xchg
xor
arpl
fsub
dec
jbe
or
retf
icebp
push
jne
les
jmp
or
pop
inc
arpl
xor
mov
(bad)
pop
les
lods
repz
jbe
or
out
xchg
xor
arpl
fsub
inc
jmp
jmp
les
pop
les
pop
fmul
ret
arpl
xor
ja
xor
jecxz
pop
sbb
jbe
or
les
shl
arpl
xchg
in
cld
stos
xor
arpl
xor
arpl
xor
jnp
push
lods
xchg
jmp
arpl
lods
mov
jmp
xchg
xor
arpl
fsubr
jmp
or
retf
icebp
push
jne
les
jmp
or
pop
pop
arpl
xor
retf
les
hlt
pop
les
lods
xor
les
adc
xchg
xor
adc
xor
shl
arpl
outs
cmp
adc
mov
cmp
mov
xchg
xor
add
push
adc
xchg
inc
int3
mov
ret
cmp
jbe
xor
adc
cmp
and
mov
add
jmp
mov
adc
xor
mov
xor
arpl
xor
arpl
xor
popa
jno
dec
scas
les
jmp
and
pop
and
arpl
xor
mov
adc
arpl
fs
pop
les
pop
les
or
adc
adc
xor
mov
xor
mov
jmp
addr16
vpbroadcastq
pushf
fild
pop
and
pop
les
pop
call
adc
adc
cmp
mov
xor
or
fcomp
dec
jbe
or
pop
(bad)
or
pop
les
out
pop
lds
jmp
popa
jmp
imul
(bad)
jmp
cmp
stos
test
int
arpl
pop
les
pop
les
pop
mov
or
pop
(bad)
arpl
lods
mov
outs
out
xchg
xor
mov
xor
rol
test
fcmovnu
jne
xor
sbb
jbe
or
pop
xchg
xor
mov
arpl
pop
les
test
add
stos
xor
hlt
cmc
xor
jecxz
movs
and
add
bound
retf
icebp
mov
les
add
scas
arpl
xor
pushf
(bad)
pop
and
fsub
arpl
xor
arpl
xor
dec
jmp
les
fcomp
or
lods
mov
outs
out
xchg
xor
xor
xor
shr
arpl
lds
adc
xor
arpl
xor
dec
jmp
les
(bad)
pop
ror
inc
xor
arpl
pop
sbb
jbe
or
(bad)
jl
xor
dec
jne
les
xor
fisubr
cmp
xchg
test
and
loop
xor
or
lods
arpl
xor
or
out
pop
and
pop
les
dec
inc
gs
pop
les
pop
les
pop
aam
lea
jmp
or
xor
xor
pop
push
mov
add
hlt
cli
stos
xor
mov
xor
xchg
or
repz
arpl
xor
arpl
xor
jae
leave
les
pop
fs
xor
pop
xor
mov
xor
mov
jmp
xchg
ja
les
jmp
or
retf
icebp
daa
dec
jne
or
pop
xchg
or
les
xchg
les
pop
les
lods
xor
or
out
xchg
xor
inc
hlt
xor
sar
arpl
stos
test
xor
push
scas
xchg
test
and
xchg
xor
or
les
sub
xchg
in
xchg
out
pop
and
pop
les
dec
dec
gs
pop
les
pop
les
pop
aam
pop
xor
arpl
pop
fimul
jmp
and
pop
push
mov
add
shr
lock
stos
xor
arpl
xor
jnp
mov
arpl
pop
jmp
arpl
lods
repz
jbe
or
out
xchg
xor
arpl
fdivr
jg
vfmsubadd231ps
pushf
fild
pop
and
pop
les
pop
fmul
ret
or
pop
les
lods
mov
jmp
xchg
xor
arpl
fdivr
jle
xor
dec
jne
les
jmp
or
retf
icebp
add
les
repnz
mov
or
xor
xor
pop
lds
call
sub
arpl
pop
and
pop
les
pop
les
pop
ror
jno
les
je
arpl
pop
fimul
jmp
and
pop
ds
add
fsub
xchg
pop
shr
cmp
xor
arpl
mov
cmp
mov
xchg
xor
push
cmp
sbb
mov
inc
arpl
xor
pusha
xor
xor
push
mov
add
add
adc
retf
out
xor
arpl
sub
xchg
mov
arpl
cmp
jno
addr16
jmp
xor
addr16
xor
cmp
adc
add
push
(bad)
rcl
cdq
lahf
cdq
jae
arpl
in
xchg
pusha
sbb
outs
adc
sar
pushf
imul
int
sahf
pop
scas
xor
adc
cli
pop
stc
xlat
test
lods
(bad)
jmp
pushf
imul
cmp
sub
not
imul
les
mov
push
dec
xchg
jmp
dec
movs
imul
and
pop
jbe
out
outs
xor
pushf
adc
xor
mov
sub
arpl
les
lods
xor
adc
inc
aad
push
test
pushf
adc
sub
arpl
in
xchg
arpl
inc
push
adc
in
je
jmp
xor
sub
mov
or
test
pushf
adc
sub
arpl
cmp
and
(bad)
out
outs
xor
pushf
adc
xor
jmp
mov
or
test
pushf
adc
and
arpl
cmp
and
(bad)
out
outs
xor
pushf
adc
xor
jecxz
retf
ret
push
sti
pop
mov
out
retf
cmp
xor
push
adc
mov
and
mov
cmp
add
xor
sbb
int
sti
pop
data16
retf
cmp
xor
push
adc
jmp
and
mov
cmp
add
arpl
mov
pushf
loope
aad
jmp
xchg
mov
pushf
adc
and
arpl
cmp
and
(bad)
out
outs
xor
pushf
adc
xor
jecxz
retf
leave
push
sti
pop
std
shr
retf
cmp
xor
xchg
sbb
retf
arpl
inc
push
adc
popa
jbe
jmp
xor
(bad)
arpl
pop
les
jmp
sub
jbe
out
outs
xor
pushf
adc
jne
mov
sar
pushf
or
and
pop
jp
test
lods
and
les
xor
push
fdiv
jmp
xchg
or
inc
fwait
adc
cmp
sub
loop
adc
test
mov
arpl
loop
and
dec
fwait
ret
int3
dec
movs
arpl
xchg
mov
arpl
ret
addr16
add
cmp
mov
mov
xor
cmp
jmp
imul
xchg
xor
stos
or
lahf
pop
les
(bad)
pop
jmp
out
outs
fnstenv
pushf
adc
xor
mov
les
cmp
arpl
lods
xor
adc
int3
cmp
xchg
xchg
adc
and
arpl
aaa
fwait
adc
pop
add
test
dec
out
ret
cmp
xor
ficomp
int3
cmp
xchg
xchg
adc
and
arpl
aad
jmp
pushf
adc
(bad)
cmp
adc
xor
inc
mov
xchg
shl
mov
nop
adc
cmp
and
(bad)
out
outs
fnstenv
pushf
adc
xor
jecxz
(bad)
cmp
adc
add
jmp
xor
pop
shl
mov
nop
adc
cmp
lods
sub
jbe
out
outs
fnstenv
pushf
adc
xor
jmp
jns
adc
cmp
and
(bad)
out
outs
fnstenv
pushf
adc
xor
jecxz
(bad)
cmp
adc
mov
inc
mov
sub
jns
adc
cmp
and
(bad)
out
outs
fnstenv
pushf
adc
xor
jecxz
(bad)
cmp
adc
std
ja
jmp
xor
rcl
arpl
mov
inc
sbb
jns
adc
cmp
and
(bad)
out
outs
fnstenv
pushf
adc
xor
jecxz
(bad)
cmp
adc
aaa
jo
jmp
xor
xchg
shl
mov
nop
adc
cmp
and
(bad)
out
outs
fnstenv
pushf
adc
xor
or
mov
xchg
adc
fnstcw
pushf
arpl
xor
adc
inc
fs
pop
dec
shr
retf
cmp
cs
out
ret
cmp
retf
not
out
jns
sbb
mov
pusha
jmp
arpl
xor
adc
les
fucomi
scas
arpl
fadd
cmps
loop
inc
(bad)
adc
cmp
cmp
call
aaa
les
mov
lahf
adc
std
(bad)
arpl
mov
lahf
push
retf
cmp
mov
(bad)
jmp
pushf
sar
inc
dec
jmp
les
adc
xor
xchg
or
inc
mov
retf
cmp
sub
inc
fwait
adc
cmp
add
and
mov
cmp
add
add
mov
adc
fadd
jge
cmps
xor
xor
adc
in
test
sub
int3
cmp
xor
pop
mov
repz
xchg
push
sbb
lahf
adc
cmp
add
fsub
mov
add
jp
xchg
sub
lahf
adc
cmp
add
shl
mov
jnp
js
arpl
xor
out
outs
enter
fs
(bad)
xor
fistp
les
ror
cmp
cmp
int3
cmp
xor
out
retf
mov
xor
pusha
xor
out
outs
enter
fs
std
xor
loopne
and
push
retf
mov
xor
out
enter
hlt
shl
mov
fwait
adc
in
xchg
mov
fwait
adc
and
arpl
aam
jmp
xor
xchg
shl
pop
lds
push
in
xchg
mov
lahf
adc
test
enter
inc
add
xor
out
outs
enter
mov
mov
jne
xor
jmp
xor
or
inc
mov
retf
cmp
sub
jns
adc
cmp
mov
(bad)
jmp
pushf
and
test
dec
out
int3
cmp
xor
cmps
cli
pop
dec
shr
retf
mov
xor
out
retf
mov
xor
out
ret
cmp
ret
cmp
retf
cmp
dec
out
ret
cmp
retf
cmp
cmp
out
ds
cmp
retf
(bad)
adc
mov
inc
scas
sbb
retf
jno
adc
cmp
outs
enter
lods
mov
jbe
out
outs
enter
fs
cld
xor
loopne
and
out
int3
cmp
xor
out
ret
cmp
retf
xchg
mov
les
mov
adc
and
or
xor
out
int3
cmp
xor
out
int3
cmp
retf
cmp
addr16
fwait
adc
daa
les
mov
popf
adc
sar
mov
sub
sti
xor
out
outs
int3
cmp
adc
xor
sbb
daa
les
fcom
jb
xor
out
enter
addr16
push
int3
cmp
mov
outs
arpl
int
in
into
sahf
adc
int3
cmp
mov
dec
movs
xor
or
add
arpl
ins
sub
cmp
outs
or
jmp
sub
cli
xor
xor
loop
xor
push
shr
xor
in
jmp
pushf
jecxz
mov
mov
xor
bound
cmp
inc
mov
arpl
int3
rcr
test
xor
jmp
out
fnstcw
pushf
arpl
lods
xor
les
or
arpl
pop
push
ret
sub
sti
xor
mov
and
in
jmp
arpl
mov
cmp
adc
and
arpl
jbe
out
outs
test
pushf
adc
retf
cmp
cs
pushf
adc
sub
arpl
mov
pop
pop
jbe
imul
mov
test
cmp
add
jmp
fnstcw
jns
jae
mov
ds
fisttp
mov
inc
movs
stos
mov
sub
retf
cmp
add
(bad)
xor
ins
pop
mov
adc
push
aam
arpl
xor
adc
in
test
sub
add
arpl
dec
not
xchg
sub
retf
cmp
mov
mov
hlt
inc
mov
sub
outs
mov
and
arpl
xor
outs
popf
sub
fnstcw
pushf
fdivr
cmp
and
test
dec
out
fdivr
pushf
mov
xor
nop
lods
les
xor
out
fdivr
pushf
mov
retf
cmp
add
arpl
mov
cmp
add
pushf
adc
retf
cmp
add
add
xor
out
fdivr
pushf
mov
xor
bound
add
arpl
mov
xchg
int3
xor
or
xchg
movs
gs
pop
add
jne
les
mov
retf
dec
push
out
loop
arpl
les
(bad)
mov
and
pop
push
ret
lods
movs
xor
or
inc
xlat
arpl
mov
pop
out
push
sbb
pushf
adc
jbe
(bad)
xor
arpl
push
popa
or
xchg
movs
gs
pop
add
jp
les
mov
retf
dec
push
push
xchg
pop
les
(bad)
mov
and
pop
push
ret
lods
movs
xor
or
stos
test
and
arpl
mov
and
jp
adc
loop
arpl
les
(bad)
popa
jmp
les
jmp
or
xor
and
fcomp
xor
es
pop
(bad)
or
pop
les
add
sbb
addr16
xor
jno
adc
cmp
arpl
jno
adc
je
pop
jmp
mov
xor
push
bound
adc
fcomp
ins
jmp
xor
jbe
pushf
lahf
sub
xor
loop
sub
fist
jno
xor
jno
adc
and
jno
adc
je
pop
jmp
mov
xor
push
bound
adc
fadd
jmp
xor
jbe
pushf
lahf
sub
xor
pushf
lahf
sub
xor
fstp
inc
les
xlat
dec
out
fnstcw
pushf
popa
mov
mov
xor
or
dec
es
(bad)
jmp
les
jmp
es
(bad)
sbb
xor
arpl
(bad)
retf
arpl
mov
adc
xor
es
arpl
pop
les
arpl
movs
scas
mov
arpl
xor
mov
sub
xor
movs
scas
cld
les
xor
es
fs
in
les
jmp
or
pop
les
jmp
or
xor
arpl
pop
and
arpl
xor
arpl
xchg
(bad)
cld
stos
xor
neg
les
jmp
arpl
retf
cmp
xor
out
les
xor
jecxz
sbb
lock
arpl
fs
out
(bad)
jmp
das
(bad)
std
xor
mov
cmp
arpl
cwde
sub
retf
cmp
xor
jmp
inc
fild
retf
cmp
addr16
lea
add
jmp
(bad)
jmp
pushf
imul
ret
loopne
pop
jo
jmp
arpl
xor
arpl
mov
sbb
xor
sub
xor
(bad)
call
mov
cmp
arpl
xor
out
fidivr
pushf
mov
pop
fist
stos
xor
arpl
xor
xor
pop
enter
les
push
xor
cmp
stos
test
ins
retf
(bad)
out
scas
rcl
imul
pop
jmp
aam
xor
or
pop
les
jmp
ins
jmp
cmp
jmp
popa
jmp
pop
mov
aaa
les
jno
loopne
and
out
xor
inc
fwait
call
xor
mov
cmp
arpl
and
inc
adc
xor
pop
stc
xor
stc
jb
xor
ins
cwd
int3
arpl
or
(bad)
jmp
arpl
test
stc
or
les
mov
arpl
xor
xchg
xor
pushf
fistp
jmp
out
leave
cmp
rep
(bad)
xor
pushf
pop
fdivr
pushf
adc
retf
inc
cmps
cli
mov
cmp
outs
in
cmp
leave
cmp
cmp
les
mov
cmp
adc
xor
xchg
out
les
inc
stos
call
adc
retf
cmp
add
dec
idiv
leave
cmp
retf
std
mov
sub
push
leave
cmp
retf
inc
mov
mov
cmp
clc
cmp
pop
(bad)
sar
pushf
adc
retf
cmp
popa
mov
sahf
adc
leave
cmp
retf
icebp
daa
dec
jne
mov
les
ret
call
pop
mov
inc
mov
mov
jo
jmp
loopne
push
jo
jmp
arpl
inc
ret
xor
retf
das
pushf
adc
add
in
xor
pushf
fistp
jmp
mov
int3
lds
jne
les
cmp
out
xor
arpl
xor
mov
xor
and
or
cmp
loop
shr
xor
jns
xor
xchg
or
retf
cmp
sub
xor
es
mov
cmp
sbb
xadd
dec
jbe
pop
scas
xadd
dec
jbe
pop
(bad)
xadd
jne
pop
fimul
rcl
xadd
dec
jbe
pop
into
xadd
dec
jbe
pop
test
ret
dec
jbe
pop
dec
shr
les
out
shl
les
ret
pop
les
xor
call
adc
jbe
pop
cli
xadd
dec
jbe
pop
loop
rcl
les
out
je
cli
xor
push
cli
fdivr
xor
pushf
adc
and
cld
out
(bad)
fcmovnb
sbb
arpl
leave
cmp
leave
cmp
retf
cmp
mov
sahf
adc
cmp
arpl
sub
adc
les
push
arpl
mov
add
adc
mov
pushf
adc
fcomp
jmp
fsubrp
retf
cmp
pop
les
mov
xor
xor
xor
pushf
(bad)
pop
and
fadd
push
out
xor
jmp
inc
bound
sar
adc
retf
cmp
or
outs
scas
les
pop
cmp
xor
out
retf
cmp
jbe
mov
arpl
lds
je
pop
jmp
mov
imul
lds
mov
xchg
test
xchg
mov
cmp
retf
les
adc
arpl
jbe
or
fmul
jmp
arpl
inc
into
arpl
frstor
in
xor
xchg
or
retf
cmp
sub
retf
cmp
addr16
sahf
adc
in
xchg
mov
sahf
adc
cmp
arpl
aam
adc
mov
pushf
adc
sub
jmp
fsubrp
retf
cmp
pop
les
in
xchg
xor
xor
xor
pushf
fild
push
and
fadd
imul
xor
out
addr16
or
stos
mov
(bad)
jmp
inc
xor
adc
and
pop
les
adc
xor
lods
jecxz
les
sub
les
cmp
jmp
bound
dec
rcr
in
jmp
arpl
xor
pushf
fild
push
and
fcom
xor
loope
xor
jecxz
xor
pushf
adc
retf
cmp
int3
in
fwait
arpl
dec
out
retf
cmp
retf
cmp
sbb
and
mov
cmp
add
add
retf
les
mov
cmp
adc
xor
pushf
loop
(bad)
cmp
xor
arpl
pop
les
adc
xor
je
xor
mov
xor
arpl
int3
or
xor
out
retf
cmp
retf
cmp
sbb
and
mov
cmp
add
iret
arpl
mov
jae
retf
les
mov
cmp
adc
xor
hlt
loop
(bad)
cmp
xor
arpl
pop
les
adc
xor
int3
loop
les
arpl
cmc
fwait
arpl
dec
out
retf
cmp
retf
cmp
adc
xchg
pop
retf
cmp
add
into
arpl
mov
jae
retf
les
mov
cmp
adc
xor
dec
loop
(bad)
cmp
xor
arpl
pop
les
adc
xor
and
xor
mov
aaa
les
mov
inc
stos
adc
xor
call
les
jmp
arpl
push
int3
arpl
retf
icebp
dec
jne
les
add
(bad)
arpl
repnz
pushf
adc
cmp
or
aad
retf
cmp
retf
cmp
or
scas
arpl
pop
les
adc
xor
mov
xor
mov
les
mov
popf
adc
retf
cmp
mov
add
outs
xor
dec
out
leave
cmp
xor
out
leave
cmp
xor
cmps
cli
pop
cmp
xor
out
retf
cmp
jne
mov
mov
pushf
adc
pop
les
jmp
arpl
cdq
ret
arpl
retf
icebp
inc
jne
les
add
arpl
repnz
popf
adc
cmp
or
aad
retf
adc
retf
cmp
or
scas
arpl
pop
les
adc
xor
js
xor
mov
les
mov
popf
adc
xor
or
stos
mov
(bad)
jmp
popf
adc
pushf
dec
fcmovne
dec
movs
addr16
pushf
adc
sar
adc
jbe
out
outs
sar
adc
xor
loopne
and
fnsave
mov
cmp
outs
fdivr
pushf
adc
pop
les
out
pop
les
jmp
and
les
arpl
scas
popa
xor
adc
retf
sub
out
xor
jecxz
inc
jo
jmp
cli
stos
xor
stos
adc
xor
call
xor
adc
add
and
retf
jno
adc
cmp
xor
sbb
cmp
aam
arpl
retf
sub
out
xor
out
sar
adc
mov
(bad)
jmp
xchg
pop
retf
cmp
mov
retf
cmp
adc
retf
sub
out
xor
or
mov
cmp
xor
xchg
or
pushf
pop
sar
adc
xor
(bad)
push
retf
add
icebp
daa
dec
jne
mov
arpl
xor
arpl
xor
or
movs
test
(bad)
shl
inc
xchg
adc
cmp
adc
and
outs
sar
pushf
adc
retf
cmp
sub
pop
les
fdiv
jmp
arpl
cmp
push
lds
int
mov
sbb
cmp
jbe
pushf
pop
sar
adc
xor
arpl
xor
adc
pop
sub
push
retf
add
shl
jno
adc
cmp
sub
xor
arpl
xor
fwait
ret
int3
dec
movs
xor
sbb
jmp
xor
les
jmp
(bad)
dec
pushf
adc
xor
push
loop
test
loope
arpl
mov
xor
test
and
adc
and
mov
adc
cmp
sub
les
outs
or
jmp
xchg
call
loope
cmps
jmp
sub
cmp
jmp
ins
outs
repz
psllw
dec
jbe
push
loope
icebp
mov
les
arpl
xor
psllw
loope
icebp
jecxz
jbe
mov
les
add
xor
push
stos
xor
or
xor
pop
fistp
pop
and
inc
iret
pushf
fild
push
and
fcomp
fwait
sbb
mov
push
and
inc
iret
pushf
fistp
and
fadd
ret
arpl
stos
test
sbb
arpl
psllw
jne
push
(bad)
mov
adc
les
aas
cmp
test
shl
icebp
inc
jne
les
cmc
mov
adc
les
and
push
outs
xchg
xchg
rol
jmp
jmp
call
test
dec
jle
mov
inc
ret
mov
popa
sub
cld
stos
xor
push
(bad)
stos
test
xor
into
stos
test
fisttp
jl
xor
push
mul
dec
jle
movs
test
add
cld
stos
xor
gs
sub
retf
arpl
lods
test
add
test
mov
popa
sub
cld
stos
xor
mov
dec
mov
adc
fdiv
gs
jns
xor
cmp
jmp
arpl
les
xor
inc
out
xchg
movs
les
xor
inc
cli
mov
inc
inc
xchg
movs
les
xor
inc
retf
arpl
les
xor
inc
mov
arpl
les
xor
inc
fcmovb
xchg
movs
les
xor
inc
faddp
xchg
movs
les
xor
jmp
les
repz
pop
enter
enter
mov
xor
cmps
loop
sbb
jmp
inc
pop
retf
mov
jae
fucomp
cmp
cmp
lahf
(bad)
das
bound
hlt
mov
imul
les
xor
pop
add
neg
arpl
sbb
jae
xor
addr16
or
jae
xor
mov
lock
addr16
retf
and
aaa
into
cmp
mov
adc
ret
sbb
daa
into
cmp
call
dec
mov
loopne
sub
arpl
xor
inc
stos
mov
inc
scas
mov
inc
mov
movs
les
xor
inc
cmps
mov
inc
mov
movs
les
xor
inc
mov
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
add
arpl
les
xor
inc
xchg
xchg
movs
les
xor
inc
call
arpl
xor
inc
sahf
mov
inc
xchg
mov
inc
xchg
mov
inc
push
xchg
movs
les
xor
inc
outs
mov
inc
(bad)
mov
inc
mov
xor
inc
jp
xchg
movs
les
xor
inc
jle
xchg
movs
les
xor
inc
jb
xchg
movs
les
xor
inc
jbe
xchg
movs
les
xor
inc
dec
mov
inc
dec
mov
inc
inc
mov
inc
inc
mov
inc
pop
mov
inc
pop
mov
inc
push
mov
inc
push
mov
inc
sub
xchg
movs
les
xor
inc
mov
inc
and
xchg
movs
les
xor
inc
mov
inc
cmp
xchg
movs
les
xor
inc
mov
inc
xor
xchg
movs
les
xor
inc
mov
inc
or
xchg
movs
les
xor
inc
push
mov
inc
add
xchg
movs
les
xor
inc
push
mov
inc
adc
xchg
movs
les
xor
inc
push
mov
inc
jmp
arpl
xor
inc
out
rol
jmp
arpl
les
xor
inc
out
xchg
movs
les
xor
inc
cli
rol
jmp
arpl
les
xor
inc
repnz
jmp
arpl
les
xor
inc
retf
arpl
les
xor
inc
into
rol
jmp
arpl
les
xor
inc
mov
arpl
les
xor
inc
fcmovb
xchg
movs
les
xor
inc
faddp
xchg
movs
les
xor
inc
rol
xchg
movs
les
xor
inc
(bad)
rol
jmp
arpl
les
xor
inc
scas
rol
jmp
arpl
les
xor
inc
cmps
rol
jmp
arpl
les
xor
inc
mov
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
mov
xchg
movs
les
xor
inc
call
arpl
xor
inc
sahf
rol
jmp
arpl
les
xor
inc
xchg
rol
jmp
arpl
les
xor
inc
data16
jmp
arpl
les
xor
inc
jle
xchg
movs
les
xor
inc
jb
xchg
movs
les
xor
inc
jbe
xchg
movs
les
xor
inc
dec
rol
jmp
arpl
les
xor
inc
inc
rol
jmp
arpl
les
xor
inc
push
rol
jmp
arpl
les
xor
inc
sub
xchg
movs
les
xor
inc
rol
jmp
arpl
les
xor
inc
rol
jmp
arpl
les
xor
inc
rol
jmp
arpl
les
xor
inc
rol
jmp
arpl
les
xor
inc
push
rol
jmp
arpl
les
xor
inc
push
rol
jmp
arpl
les
xor
inc
push
rol
jmp
arpl
les
xor
inc
push
rol
.byte
.byte
