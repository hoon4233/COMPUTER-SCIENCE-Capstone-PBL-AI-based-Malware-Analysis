push
mov
sub
push
push
push
mov
mov
mov
call
mov
mov
add
sub
test
je
call
cmp
je
push
push
call
push
push
push
push
call
push
push
call
call
push
call
pop
push
push
push
push
call
jmp
and
mov
mov
mov
mov
sub
mov
mov
movzx
mov
and
sub
mov
add
mov
mov
sub
mov
cmp
jge
mov
mov
cmp
jne
push
call
pop
jmp
push
push
push
push
call
mov
jmp
push
call
mov
sub
add
mov
jmp
mov
add
mov
mov
and
mov
sub
mov
movzx
add
mov
sub
movzx
sub
mov
add
mov
and
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
mov
mov
mov
cmp
je
push
push
push
push
push
call
jmp
mov
mov
mov
mov
and
jmp
mov
inc
mov
mov
add
mov
movzx
cmp
ja
mov
and
mov
mov
add
movzx
mov
inc
mov
add
movzx
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzx
mov
dec
mov
add
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
movzx
movzx
xor
mov
add
mov
mov
and
mov
jmp
xor
cmp
setne
pop
pop
pop
leave
ret
mov
mov
mov
mov
dec
je
push
call
jmp
mov
mov
call
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
inc
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
movzx
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
test
je
push
call
pop
mov
ret
lea
mov
add
jmp
dec
cwde
lods
dec
mov
jne
xchg
push
add
or
add
add
push
pop
hlt
add
retf
add
add
dec
add
sub
add
add
add
add
fadd
jp
dec
add
pushf
add
outs
add
add
mov
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
adc
in
inc
add
inc
add
add
add
add
dec
add
test
adc
in
dec
add
inc
add
add
dec
add
mov
adc
in
adc
jnp
adc
in
jl
dec
add
cmp
adc
in
push
dec
add
add
xchg
xchg
push
add
add
add
add
add
xor
test
push
add
adc
retf
add
xchg
xchg
adc
cmp
cmps
add
add
add
push
add
add
scas
add
mov
add
xchg
dec
add
add
pop
inc
add
jle
scas
add
add
inc
add
mov
push
add
and
mov
rol
add
add
add
scas
add
add
pop
add
add
add
add
xchg
xchg
lds
outs
add
add
add
xchg
xchg
adc
in
mov
add
add
add
mov
add
add
add
add
aad
dec
add
add
in
mov
add
add
add
xchg
xchg
lds
jl
dec
add
add
mov
add
add
add
add
hlt
add
add
arpl
xor
test
add
add
dec
add
xor
js
add
dec
add
add
add
add
add
outs
add
add
add
add
add
cmp
mov
add
mov
add
add
add
lds
mov
dec
add
add
mov
add
adc
cmp
das
add
push
add
add
xchg
push
add
add
repz
add
xchg
xchg
push
add
add
add
push
add
add
xchg
mov
add
add
add
add
add
inc
add
add
add
jg
in
jnp
ins
add
add
mov
add
lds
cmps
add
sub
sub
pop
call
add
add
add
add
add
add
add
add
add
add
repz
xchg
xchg
xchg
mov
add
add
add
add
add
add
add
enter
xchg
xchg
dec
add
add
and
lahf
add
add
add
sub
sub
mov
add
hlt
add
add
add
add
dec
add
and
lahf
add
jle
dec
add
add
add
add
dec
add
add
add
add
adc
scas
add
add
add
add
add
in
mov
add
lahf
add
outs
add
add
add
add
outs
add
imul
add
add
jnp
or
add
je
lahf
add
push
add
add
add
test
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
and
ins
add
add
add
push
add
add
and
lsl
mov
imul
xchg
add
add
add
add
xor
jne
xchg
adc
imul
cmp
mov
add
add
add
add
add
add
add
lahf
add
xor
and
xor
test
push
add
add
xchg
xchg
add
mov
sub
xchg
xchg
xchg
push
add
add
mov
add
add
in
and
push
add
test
iret
add
add
add
add
sub
adc
or
xchg
add
add
add
add
push
add
add
add
xor
push
add
add
add
add
add
imul
daa
add
add
pop
xchg
pop
add
add
add
outs
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
xor
test
lsl
add
add
sub
add
inc
add
pop
add
dec
add
add
cmp
mov
and
pop
add
add
add
ins
add
inc
add
xchg
sub
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
and
cmp
push
mov
je
cmp
je
push
push
push
call
mov
call
mov
mov
mov
mov
movzx
movzx
xor
movzx
xor
call
mov
mov
test
je
push
push
call
mov
movzx
push
pop
cmp
sbb
xor
and
xor
add
mov
test
pop
pop
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
mov
mov
cmp
je
push
push
call
push
call
push
push
push
push
push
push
call
call
mov
mov
cmp
je
mov
dec
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
ret
ja
addr16
arpl
pop
pop
test
(bad)
pop
mov
out
xchg
imul
fnstenv
leave
daa
stc
pop
jmp
out
xlat
and
pop
mov
cmps
jns
imul
cmp
popf
mov
sti
mov
int3
mov
pusha
adc
cwde
sub
mov
scas
mov
mov
adc
in
pop
cmps
push
mov
xchg
dec
out
test
xor
or
not
adc
cmp
xor
call
xor
adc
das
push
in
sbb
push
icebp
je
push
mov
cdq
xor
in
cmc
and
fisttp
int3
xchg
pop
(bad)
jmp
sub
pop
leave
daa
mov
pop
xchg
xor
outs
cli
fmul
shr
dec
mov
push
jbe
inc
dec
clc
push
cmps
enter
or
xor
inc
jecxz
jecxz
push
push
cmps
hlt
ret
fsub
add
cmps
push
mov
es
sub
fcomi
lea
clc
xchg
sbb
xchg
cmps
jg
test
test
mov
es
int3
bound
push
mov
fnstsw
mov
ja
scas
repz
inc
add
test
inc
ss
xchg
sahf
jo
jae
and
xor
add
dec
in
cmp
movs
test
mov
adc
sbb
out
cmc
sub
push
loopne
call
inc
int3
sub
out
out
mov
cmp
cmp
xchg
repnz
fwait
out
test
hlt
pop
es
cmp
pop
into
loopne
not
fdivr
repnz
jge
jl
data16
cwde
jns
sub
jb
das
add
push
mov
(bad)
xlat
dec
mov
scas
rol
adc
lods
pop
mov
cmp
ja
cmp
nop
das
cmps
jmp
pop
xor
test
fcmovne
lods
cmp
aad
ins
retf
sbb
pop
jmp
and
and
mov
stos
and
daa
xchg
call
rcr
out
sub
leave
loop
mov
cld
in
aaa
fadd
cld
call
popa
ins
mov
sub
scas
xchg
add
mov
jecxz
mov
test
cmps
mov
sar
dec
mov
cmps
cmp
xchg
(bad)
sahf
cli
fstp
mov
dec
adc
pop
fidivr
je
shufps
xchg
daa
mov
sbb
cdq
sub
xor
dec
pop
fbstp
or
adc
mov
or
fbld
and
add
call
xor
or
add
pop
mov
mov
jmp
add
test
ret
aaa
mov
inc
sbb
sbb
dec
sbb
mov
or
int3
adc
fadd
push
bound
or
sub
or
sbb
xchg
mov
cmp
cmc
out
pushf
and
pop
mov
bound
pop
jns
cmps
leave
adc
repnz
retf
cmp
into
in
fsubr
add
cmp
(bad)
pop
test
ja
pop
and
fsubr
bound
les
cmc
stc
xor
pop
mov
hlt
mov
in
repnz
add
cdq
or
push
call
leave
popa
add
not
fld
xor
call
sbb
push
pop
add
mov
jns
xchg
fcomp
xchg
cwde
xor
out
mov
je
scas
clc
cmp
pop
out
cmp
push
ja
mov
aas
lds
mov
inc
out
mov
or
lock
int
int3
inc
cmp
int
daa
xchg
call
or
in
sahf
mov
sar
stos
add
adc
and
adc
xor
inc
ins
and
aaa
frndint
push
pusha
pop
push
fbstp
das
jae
mov
dec
cmps
rcr
daa
mov
mov
out
std
loop
push
jmp
stos
jo
push
shl
neg
das
sub
mov
inc
pop
xchg
(bad)
xchg
cmps
idiv
add
xor
dec
ins
ret
loope
(bad)
sub
push
test
inc
push
pop
ret
int
inc
imul
test
mov
push
popa
bnd
ja
push
ror
addr16
test
or
cli
cmp
ss
inc
stos
push
es
jge
pop
jecxz
mov
mov
arpl
jl
icebp
mov
daa
mov
jp
out
sub
jge
jo
xor
iret
push
push
sub
sti
push
ins
mov
stos
cmp
push
cmp
inc
mov
sbb
dec
pop
adc
and
cs
scas
rcr
js
pushf
add
scas
and
es
ss
jb
movs
adc
out
arpl
daa
dec
pop
icebp
mov
jnp
push
fimul
push
aaa
cmp
clc
pop
lds
dec
sub
xor
mov
or
cdq
or
int3
dec
mov
mov
movs
and
mov
add
inc
and
mov
jb
push
sbb
sub
cmp
mov
stc
and
jns
inc
test
sub
mov
add
xchg
daa
cmp
aaa
rcl
mov
sbb
in
or
mov
das
push
out
or
(bad)
stos
push
(bad)
mov
jns
pop
inc
scas
dec
mov
push
aaa
cmp
sbb
in
sub
mov
dec
(bad)
stos
cmp
xchg
sbb
mov
jg
and
es
or
clc
iret
pop
neg
and
jne
cdq
das
jnp
xchg
and
in
jg
test
aam
push
and
lahf
(bad)
mov
arpl
gs
xchg
sbb
(bad)
fld
enter
std
int
sbb
push
mov
test
mov
inc
jne
mov
mov
stc
imul
call
pop
in
cmps
repnz
dec
js
daa
in
push
push
inc
int3
int
sbb
out
out
jle
sub
(bad)
or
push
jp
outs
ds
adc
and
outs
add
xor
lods
pop
sbb
pop
mov
rcr
mov
add
sub
add
mov
lods
mov
call
sbb
sub
(bad)
daa
mov
fptan
push
les
ror
mov
ins
sbb
sbb
test
(bad)
mov
pop
mov
push
test
daa
mov
test
pop
mov
cmps
jns
imul
and
dec
or
add
aas
dec
dec
push
retf
data16
sbb
les
jl
fstp
adc
or
pop
mov
dec
or
lahf
jns
push
sub
popf
add
push
xor
cdq
ret
mov
cs
repz
dec
mov
fisub
aaa
ret
cli
je
inc
(bad)
or
cld
dec
retf
pop
test
pop
out
and
adc
pop
cmps
and
sub
mov
nop
pop
mov
mov
and
sub
mul
jmp
jb
sbb
rcr
mov
push
test
daa
stc
pop
jmp
out
xlat
sub
pop
mov
cmps
jns
imul
fnstenv
leave
daa
stc
pop
jmp
out
xlat
sub
pop
mov
cmps
jns
imul
in
or
pop
int3
or
mov
jne
stc
add
adc
dec
mov
mov
mov
xchg
ret
jecxz
repnz
mov
pop
sbb
cmp
or
fadd
push
lds
(bad)
xchg
xchg
out
mul
enter
sub
aas
xchg
(bad)
pop
(bad)
pop
mov
cmps
jns
imul
fnstenv
leave
daa
stc
pop
jmp
out
xlat
sub
pop
mov
cmps
jns
imul
scas
mov
retf
mov
iret
(bad)
inc
movups
and
and
inc
dec
push
pop
arpl
jg
(bad)
xchg
lahf
mov
iret
rcr
jecxz
repz
movlps
das
xor
inc
dec
pop
pop
arpl
xchg
(bad)
push
out
dec
jno
shr
popa
adc
xor
iret
rol
inc
retf
mov
(bad)
add
ins
in
test
mov
arpl
ja
pop
dec
sub
inc
dec
or
jmp
mov
out
pop
cmp
imul
les
lods
dec
ins
mov
cmp
mov
mov
mov
adc
popa
dec
pop
outs
jbe
and
cmp
(bad)
cli
lahf
loop
(bad)
mov
int
lahf
dec
sub
and
push
pop
push
jp
popa
inc
cli
arpl
scas
ror
stos
(bad)
cmps
jmp
fld
xor
enter
pushf
xchg
mov
cmp
retf
adc
jnp
iret
cmp
repz
pushf
call
jmp
cmp
adc
std
fs
push
push
in
(bad)
outs
fdiv
adc
or
pop
retf
shr
adc
shl
pop
rol
adc
shl
scas
(bad)
mov
aad
nop
sbb
xchg
xor
xor
scas
ret
xor
mov
div
xchg
sub
stc
es
ror
jne
lea
ret
jb
imul
sar
retf
sahf
hlt
mov
pop
sub
sbb
inc
es
mov
fmul
or
pusha
scas
mov
push
out
or
stos
add
fistp
mov
push
pop
mov
mov
stos
fnstsw
or
ret
pop
ss
pop
cld
cmp
mov
cmps
lea
gs
icebp
dec
dec
iret
push
fucom
mov
retf
fild
les
pop
pop
pushf
mov
dec
xchg
sahf
pop
and
add
adc
loop
rol
xchg
mul
mov
jmp
je
int
pop
popa
jae
dec
mov
jg
jno
push
or
push
call
jg
adc
ins
loop
add
cmp
pop
add
pop
fdiv
inc
and
nop
ja
inc
retf
xlat
scas
mov
mov
cmc
and
out
loopne
jmp
cwde
test
push
retf
daa
pop
addr16
call
dec
mov
data16
rol
sbb
mov
jp
call
lods
or
loope
xchg
data16
push
jno
xor
lods
pop
inc
in
pop
add
push
pop
(bad)
ficomp
loop
and
cmps
adc
repz
mov
cmp
sub
loop
out
and
xchg
loop
es
xchg
add
dec
jbe
inc
test
push
mul
ss
int3
int3
aas
adc
or
add
adc
mov
and
test
push
dec
xor
outs
scas
out
sti
fnstenv
xor
inc
adc
jmp
test
sbb
and
jge
leave
push
mov
call
mov
test
mov
(bad)
movs
xor
add
push
dec
inc
jmp
jbe
retf
push
imul
bound
inc
pop
retf
mul
jnp
cmps
fist
jmp
push
stos
(bad)
jbe
push
dec
iret
sbb
das
mov
inc
mov
jbe
ret
mov
nop
cmps
inc
mov
repz
(bad)
mov
test
test
inc
aaa
leave
mov
sbb
and
mov
xor
xlat
cld
cli
push
loopne
out
outs
out
cmc
add
hlt
bound
dec
xor
iret
sub
sbb
or
cld
xor
popa
sbb
lds
jl
mov
lds
rcl
stos
cdq
mov
cmp
pusha
and
pushf
push
daa
gs
xchg
das
and
fisubr
xor
scas
adc
mov
mov
sbb
ror
jp
push
sub
mov
dec
xor
aas
sub
mov
adc
push
mov
nop
and
loope
xchg
jg
fild
loopne
cmp
push
jne
fdivr
sbb
fst
cmp
(bad)
or
add
sub
(bad)
shl
pop
fwait
or
jae
sub
mov
nop
dec
sbb
iret
xor
xlat
pop
les
test
(bad)
mov
inc
xbegin
outs
xor
inc
pop
out
bound
inc
sar
mov
jl
xchg
push
and
mov
inc
adc
xchg
clc
cmc
pusha
lods
push
rol
xlat
add
push
leave
or
lahf
out
inc
xlat
(bad)
mov
cdq
push
cmp
push
jnp
mov
or
inc
outs
jl
ins
loop
clc
dec
inc
dec
dec
ins
(bad)
lods
cld
adc
shl
mul
xor
hlt
pop
out
dec
mov
cmp
push
test
and
imul
test
mov
psrlq
jecxz
repz
cdq
adc
stos
dec
shr
and
test
popf
cs
cmp
mov
sar
push
imul
pop
shr
pop
xchg
adc
push
pop
push
xor
or
aaa
xchg
adc
mov
ss
inc
retf
dec
xor
das
popf
dec
dec
pusha
cmc
mov
sub
outs
add
sti
dec
mov
mov
jbe
fwait
add
add
iret
pop
lahf
pop
inc
cmp
adc
pop
mov
cmp
cld
inc
mov
mov
jmp
hlt
add
arpl
fucomip
lods
test
leave
pop
les
fdivr
fisubr
out
(bad)
aas
cmps
gs
mov
inc
xor
retf
cld
psubd
das
xor
cwde
sbb
mov
sti
jns
movs
movzx
loopne
mov
lock
fs
cli
lock
call
pop
pop
or
mov
ja
scas
cmp
shl
lods
jmp
jmp
sbb
nop
mov
xchg
mov
push
mov
(bad)
xchg
dec
test
stos
lds
ja
inc
pop
sub
ins
mov
int3
ror
sti
or
cld
push
cwde
loopne
lods
and
cs
aaa
call
mov
cmp
iret
jnp
jne
loopne
mov
shl
and
(bad)
xchg
int
mov
stos
mov
shr
int
add
adc
inc
popa
xor
inc
dec
push
pop
arpl
jg
(bad)
ja
mov
scas
fdiv
int
dec
jae
les
lock
stos
imul
outs
arpl
aad
retf
sub
jno
fstp
test
out
and
test
outs
mov
pop
shl
xor
xor
repz
jb
dec
loop
push
adc
into
mov
sub
movs
aad
inc
int
test
shl
mov
popf
push
mul
inc
ins
(bad)
fisub
mov
mov
inc
pop
sub
aaa
cmp
push
push
bound
jns
xchg
xchg
sahf
mov
xchg
mov
xchg
iret
ret
jae
pop
adc
push
inc
push
or
arpl
(bad)
xchg
lahf
mov
iret
rcr
jecxz
repz
movlps
and
xor
inc
dec
push
pop
arpl
jg
(bad)
xchg
lahf
mov
iret
rcr
jecxz
repz
movlps
and
xor
inc
dec
push
pop
arpl
jg
mov
and
fldcw
and
pop
jb
pop
ficomp
dec
push
xchg
lods
test
inc
jecxz
sar
sub
cmp
add
inc
in
inc
mov
xchg
lock
xor
jl
repz
sub
sbb
aas
inc
dec
push
pop
arpl
jg
(bad)
xchg
lahf
mov
iret
rcr
jecxz
repz
movlps
and
xor
inc
dec
push
pop
arpl
jg
int3
int3
add
jg
add
pop
and
lahf
xchg
fbstp
mov
lahf
std
scas
fnstsw
cmp
(bad)
pop
jge
dec
aas
cmp
mov
(bad)
scas
int
fld
sub
dec
jne
ins
fstp
icebp
pop
dec
mov
xchg
cli
pop
mov
cmp
add
mov
ins
adc
ds
fwait
mov
popf
popf
mov
xchg
ror
inc
das
dec
sub
jae
ins
fnsave
lods
loopne
sbb
push
stos
jle
cdq
ja
sbb
and
ret
and
sbb
and
pop
stos
dec
clc
mov
call
pop
xchg
and
push
cs
jg
ds
pop
push
pop
dec
dec
pop
sahf
jge
in
fs
mov
fistp
cmps
cmp
xchg
add
mov
push
inc
mov
fisub
push
in
fdivr
xor
mov
jne
pop
sub
ins
hlt
stos
fld
mov
xchg
stos
fld
cmp
pop
dec
mov
jl
cmp
popa
das
pop
dec
inc
push
sbb
push
push
sbb
and
in
inc
xor
mov
sbb
pop
add
dec
es
stos
or
test
aaa
(bad)
xor
fild
pop
js
sub
daa
into
frstor
xchg
cdq
repz
mov
repz
mov
arpl
std
popf
xor
fidivr
setge
(bad)
mov
mov
xor
or
xor
shl
add
add
push
cmp
xor
and
xchg
xlat
xchg
and
push
lds
mov
add
pop
mov
inc
test
mov
jno
or
dec
lods
sar
mov
repnz
xor
sbb
cmp
sub
xor
mov
or
jns
stos
fsin
clc
dec
pop
push
xlat
mov
cmp
pop
fnstsw
aas
pop
mov
mov
adc
pop
jmp
sbb
cmp
movs
cmp
push
fnsave
jmp
adc
push
adc
mov
or
sub
sbb
rcr
rcl
xchg
loope
icebp
mov
inc
iret
mov
push
aas
dec
out
loop
gs
aas
ror
out
sbb
inc
(bad)
xchg
cwde
mov
test
ror
jmp
sbb
mov
aas
jne
inc
push
and
jbe
aad
or
pop
ins
or
mov
fmul
test
sti
push
ficom
pushf
fdiv
mov
or
jp
xchg
mov
inc
pop
stos
mov
add
lods
push
fcmove
inc
fxch
rcl
add
add
sbb
inc
test
inc
pop
inc
std
xchg
add
mov
shl
sub
adc
fs
popa
dec
(bad)
mov
stc
push
push
clc
rcl
rol
(bad)
lds
shl
fild
mov
and
jecxz
stos
test
cs
jl
pop
loop
xor
ret
shr
clc
(bad)
jne
in
sbb
xchg
int
(bad)
mov
in
inc
sbb
scas
dec
(bad)
pop
inc
cdq
mov
aas
jae
fimul
pusha
adc
mov
dec
dec
nop
or
loopne
push
mov
int3
ret
movs
movs
cmp
xchg
imul
(bad)
inc
mov
mov
cmc
jp
(bad)
aas
cmc
push
mov
mov
ret
lea
popf
cli
push
cmc
rcr
scas
ss
les
push
jae
add
movs
jno
pop
mov
call
in
pusha
mov
sub
outs
nop
stos
gs
cmp
aam
mov
punpcklbw
or
xor
(bad)
sub
bound
inc
(bad)
scas
adc
jg
in
pop
dec
adc
mov
xchg
in
push
imul
mov
xchg
push
push
adc
ss
pop
mov
and
jmp
sub
rol
lds
mov
dec
(bad)
push
pusha
push
ret
add
inc
imul
rcl
lods
mov
mov
sahf
jo
push
cmp
mov
aaa
push
push
or
xchg
adc
repz
cmp
hlt
sbb
scas
push
mov
and
cmp
mov
out
xchg
mov
leave
adc
std
out
mov
dec
in
pop
or
jnp
push
xchg
out
mov
sbb
and
inc
adc
jmp
add
jns
or
sub
lock
cmp
dec
outs
mov
add
adc
call
mov
dec
add
test
ret
aam
xor
cdq
out
pop
xchg
ds
push
inc
mov
cmc
ror
imul
dec
ret
stc
dec
mov
(bad)
cli
mov
into
xchg
adc
and
xor
cmp
dec
xor
jns
add
push
mov
test
rcr
xlat
fistp
mov
dec
lock
sub
sbb
in
dec
(bad)
cdq
fcom
mov
out
mov
and
xor
xchg
repnz
out
imul
aas
mov
in
bound
std
outs
and
adc
repnz
out
mov
jno
scas
pop
ret
call
mov
add
or
mov
push
jns
dec
or
neg
loope
imul
fidivr
rcl
sub
pop
add
rcr
and
jae
inc
add
inc
and
lds
loop
test
cmc
call
lods
push
xor
pop
popf
push
pop
test
and
inc
add
not
fld
jb
iret
adc
add
sub
cmp
and
cdq
xchg
cmp
rcl
mov
cli
(bad)
pusha
lods
lahf
int
mov
push
push
or
iret
push
xchg
xchg
mov
jae
inc
mov
mov
add
mov
jg
sub
aas
cmps
sbb
adc
in
cld
jb
gs
jbe
int3
inc
sbb
aad
sbb
mov
dec
movs
mov
popf
pushf
imul
fnsave
or
loop
xchg
loopne
cmps
mov
sub
gs
popf
xchg
in
nop
loopne
retf
daa
ins
push
cmp
sbb
adc
movq
fld
lea
call
or
cmp
(bad)
imul
and
pop
into
lods
inc
mov
(bad)
in
lahf
std
scas
int
fisttp
jle
xor
xchg
push
push
dec
mov
pop
jae
fnstenv
mov
das
into
mov
dec
mov
xchg
mov
inc
inc
mov
fwait
lods
mov
dec
push
sub
sub
pop
loope
das
stos
(bad)
adc
push
lahf
mov
mov
inc
clc
pusha
pop
(bad)
push
xor
out
movs
xchg
xchg
mov
(bad)
out
cmp
iret
pop
mov
push
movs
lods
cmp
add
mov
xchg
shl
jl
je
ror
clc
(bad)
enter
and
sub
cs
or
add
fistp
repz
mov
mov
inc
sub
jg
(bad)
pop
jge
dec
aas
pop
iret
lods
fistp
(bad)
in
lahf
std
scas
int
fisttp
pop
cmp
(bad)
pop
jge
dec
aas
pop
iret
lods
fistp
(bad)
in
lahf
std
scas
int
fisttp
sbb
jne
test
pop
pop
or
or
push
pop
push
mov
aad
or
and
arpl
iret
mov
xchg
stos
adc
sub
fimul
mov
add
push
pop
mov
mov
mov
iret
mul
push
popf
(bad)
in
lahf
std
scas
int
fisttp
pop
cmp
(bad)
pop
jge
dec
aas
pop
iret
lods
fistp
(bad)
in
lahf
std
scas
int
(bad)
int3
int3
add
and
inc
add
and
inc
add
add
inc
add
and
inc
add
and
fild
add
aaa
jmp
fsubr
inc
add
add
inc
add
add
add
stc
inc
add
or
or
or
js
inc
add
add
inc
add
add
cmp
add
mov
add
inc
inc
add
add
xor
add
add
inc
add
and
add
add
iret
inc
add
and
fadd
add
cmp
inc
add
add
in
add
and
inc
add
add
add
std
inc
add
add
inc
inc
add
in
add
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
sub
mov
mov
mov
mov
cmp
jne
call
mov
cmp
jne
push
call
mov
push
push
push
push
push
call
mov
sub
mov
call
push
push
push
call
push
call
pop
push
push
push
push
push
call
call
lea
mov
jmp
mov
sub
movzx
mov
cmp
je
mov
leave
ret
push
mov
mov
push
cmp
push
jne
push
jmp
push
call
pop
ret
mov
mov
test
je
mov
push
push
add
mov
push
call
ret
mov
mov
mov
mov
inc
and
sub
cmp
dec
pusha
pop
inc
ins
inc
jl
mov
mov
shr
ret
or
sbb
sub
cmp
and
pop
push
ins
inc
jl
mov
rcl
jecxz
jecxz
cld
and
les
mov
lea
jmp
imul
mov
(bad)
daa
push
jno
inc
sbb
ss
sbb
xor
retf
jmp
call
jmp
repnz
out
out
fstp
mov
lods
aam
cmp
ror
dec
rol
mov
xchg
xchg
jge
cmp
and
or
mov
cmp
cmps
cld
sbb
jmp
pop
mov
add
jae
xchg
mov
sbb
and
sub
(bad)
daa
dec
sahf
in
ds
pushf
out
jge
in
call
xor
leave
pop
cs
mov
mov
fwait
pushf
rcr
leave
or
mov
imul
retf
stc
out
fst
je
aad
shl
mov
bound
sub
and
popa
and
jns
or
sbb
cmp
dec
cmp
arpl
xor
nop
fdivr
push
cdq
(bad)
adc
fistp
mov
sub
pop
cmc
cmp
call
mov
mov
xchg
pushf
fild
(bad)
sar
aam
sub
ficom
jb
popf
pop
xchg
ins
iret
push
lods
paddusb
(bad)
jg
inc
jmp
or
fisubr
ret
adc
rol
mov
movs
adc
xchg
leave
and
cmp
mov
nop
sub
xchg
push
in
jge
jae
mov
repnz
sbb
shr
dec
add
vpmacsdqh
xchg
dec
cmp
pop
bound
nop
repz
popfw
adc
sub
inc
cmc
xchg
cmp
pop
repnz
mov
movs
xchg
add
sub
mov
xor
imul
and
or
aad
mov
pop
add
inc
push
rcr
jmp
(bad)
repz
jmp
push
std
ret
ins
(bad)
jmp
add
mov
inc
or
mov
mov
and
popa
stc
ss
jle
jae
dec
popf
les
rcl
mov
(bad)
xchg
push
add
fnstsw
stos
cmps
cs
inc
test
push
and
int3
loop
fmulp
add
or
jecxz
movs
in
push
test
sub
icebp
xchg
xor
sub
js
aam
rol
outs
jb
pop
mov
dec
xchg
loop
int3
addr16
adc
das
xchg
pop
std
mov
inc
xchg
mov
arpl
inc
loopne
mov
shl
xchg
and
or
or
(bad)
aam
dec
test
pop
mov
popf
iret
or
adc
xor
fisubr
pop
daa
cmp
idiv
ret
out
mov
jp
mov
ffree
add
into
mov
jo
or
data16
push
push
xor
push
inc
sar
jp
(bad)
sbb
sar
mov
lods
push
and
loop
das
mov
or
lea
sub
jp
test
in
mov
int
fst
xchg
cmps
push
ret
inc
cs
dec
imul
and
ins
leave
test
and
repz
jbe
fld
jmp
pop
sub
ds
mov
mov
mov
jg
ret
or
dec
jmp
sub
stos
or
or
cwde
push
push
jge
mov
sbb
add
into
je
das
pop
scas
dec
dec
mov
xor
test
fmul
arpl
das
jge
xor
imul
sub
ds
dec
sahf
movs
sub
push
int
popf
stos
arpl
push
mov
fcomp
repz
pop
les
ins
lea
pop
dec
xchg
daa
pop
inc
gs
or
mov
(bad)
leavew
jne
lea
imul
or
inc
lods
mov
test
pop
sub
cld
int
retf
ror
push
dec
cmp
inc
mov
enter
cld
mov
mov
repz
test
xor
mov
xlat
pop
inc
adc
mov
mov
call
push
and
imul
and
call
cdq
rcl
sub
in
scas
mov
jl
aam
je
push
daa
popa
mov
loop
pop
jp
dec
stc
rcr
mov
inc
or
cmc
clc
jae
das
lods
adc
cmp
hlt
push
lods
mov
fcomp
ds
repz
cld
inc
rcl
jb
stos
mov
test
mov
aam
cmps
dec
mov
test
dec
int
or
jo
les
gs
adc
xchg
xchg
fst
dec
shl
xlat
add
and
sub
lods
dec
pop
or
fs
xor
jle
je
repz
adc
jmp
arpl
inc
std
call
cmps
mov
repnz
pop
inc
mov
stos
shl
mov
lock
cli
adc
aam
sbb
lods
or
shl
jo
adc
cli
xor
mov
in
add
add
sub
sbb
jg
and
dec
cmp
ror
out
int3
mov
adc
iret
xor
and
sar
dec
lea
cmp
dec
jo
ins
ins
xchg
jge
xor
rcl
inc
hlt
loopne
retf
push
xchg
dec
or
bound
nop
mov
dec
cmp
lods
push
mov
or
xchg
inc
ins
into
or
fsub
or
mul
or
int
and
cli
in
sbb
in
xchg
ins
enter
(bad)
adc
out
imul
mov
lahf
sar
dec
lods
lds
outs
fwait
iret
jb
enter
and
sub
add
lock
mov
jp
dec
dec
pusha
dec
mov
cmc
hlt
popf
pop
loop
jg
jl
dec
addps
stc
xor
sub
sbb
cdq
or
pop
jbe
iret
jl
dec
pusha
popf
ins
lods
test
ret
loopne
inc
ja
addr16
popa
repz
bound
(bad)
mov
jp
or
pop
cmp
enter
leave
hlt
and
sub
jo
cmp
adc
(bad)
push
xchg
lods
cmp
pop
cld
xor
cmp
dec
bound
inc
jl
mov
mov
or
mov
mov
xchg
push
mov
clc
enter
mov
push
out
mov
xlat
cmp
push
fcom
mov
ror
movs
xchg
pop
sub
ds
test
sar
loope
add
dec
not
daa
sub
push
ret
adc
lock
cli
push
sub
inc
mov
neg
add
mov
mov
xchg
inc
ficomp
and
xchg
mov
mov
test
mov
fcomp
jp
pop
push
sbb
sub
cmp
push
jb
or
xchg
mov
loopne
cmc
retf
push
aaa
pop
sbb
cmp
dec
rcr
int3
push
jp
mov
mov
shr
ret
or
sbb
sub
cmp
dec
bound
inc
jl
mov
mov
shr
ret
or
sbb
sub
cmp
dec
bound
inc
jl
mov
mov
(bad)
stc
xlat
jmp
or
sub
cmp
dec
jno
pop
arpl
dec
xchg
mov
loopne
sar
ret
add
sub
inc
jnp
imul
mov
mov
fsub
fcomip
enter
sub
xor
pop
push
ins
inc
jl
mov
mov
shr
ret
or
sbb
sub
cmp
dec
bound
inc
jl
int3
int3
ds
ins
mov
push
test
inc
lods
jne
or
sub
in
add
jae
pop
pushf
pop
retf
scas
jl
ins
sbb
cmp
cmp
sbb
js
les
in
outs
and
int3
outs
into
jle
dec
pushf
pop
mov
out
xchg
call
jae
pop
(bad)
push
imul
mov
lea
int
dec
or
(bad)
jae
lea
jns
or
jmp
jno
sbb
jle
and
xor
ret
and
pop
and
outs
add
push
inc
outs
pop
add
ror
aaa
in
mov
mov
ins
jmp
shr
sbb
adc
outs
fnstsw
dec
(bad)
pop
mov
cli
pop
sahf
dec
out
push
(bad)
push
cld
jo
or
or
sub
ins
lods
jle
int
inc
test
push
retf
jns
push
neg
mov
sbb
adc
fistp
fcomp
leave
shl
push
or
outs
lock
mov
xor
daa
rcr
sub
ins
mov
xor
mov
sub
sbb
jg
aam
or
test
cmc
push
or
cld
outs
jg
mov
xchg
dec
mov
movs
and
test
xor
das
popf
or
push
into
mov
jecxz
test
les
pusha
fdivr
retf
dec
addr16
xor
ins
dec
jb
cli
inc
hlt
push
into
cmp
or
in
mov
clc
fisttp
pop
sub
jno
xor
rcl
xor
aam
int3
sbb
jle
mov
add
push
sub
cld
mov
fwait
mov
fidiv
jge
cwde
mov
loope
pop
test
pop
jne
mov
xchg
cli
push
pop
pop
daa
jns
pop
xchg
xchg
and
cmps
jns
xchg
push
mov
test
jl
push
mov
mov
fnstenv
mov
(bad)
popa
stos
aas
cs
inc
std
xchg
xchg
ret
jno
jp
outs
in
push
add
test
xchg
sti
hlt
xor
(bad)
fs
sbb
jl
inc
pushf
mov
or
mov
and
arpl
sub
pop
fstp
sbb
(bad)
mov
xlat
data16
dec
ss
jl
jmp
sbb
outs
lds
stc
push
cmp
mov
sbb
ror
fld
sbb
xchg
fsub
xor
add
pushf
pop
xor
dec
ds
(bad)
xchg
sub
icebp
ror
xchg
in
jle
or
dec
dec
scas
(bad)
mov
push
inc
pop
add
icebp
(bad)
xor
xchg
pop
aam
mov
ins
jae
and
fs
pop
ss
jo
xchg
push
mov
cwde
in
call
in
cs
inc
dec
dec
xchg
rep
arpl
jl
sbb
mov
add
and
movs
jns
es
test
adc
lds
push
add
add
sub
adc
rcr
mov
jo
loope
xchg
mov
(bad)
scas
inc
mov
movs
arpl
loopne
mov
add
and
inc
and
je
sub
cmp
lds
or
(bad)
push
js
add
lahf
outs
inc
std
lods
mov
and
cmps
xchg
retf
js
mov
addr16
in
xchg
(bad)
mov
push
(bad)
mov
mov
cmps
retf
push
xchg
xor
shl
fisubr
adc
mov
in
mov
mov
pop
mov
xor
inc
or
inc
fmul
sub
inc
adc
repnz
mov
dec
pushf
shl
sar
mov
(bad)
jp
jecxz
add
mov
repnz
fcom
clc
lds
xchg
mov
inc
popa
jo
ret
je
(bad)
sbb
or
int3
clc
test
mov
loopne
sbb
ds
pop
cmps
mov
stos
push
sbb
stos
cmps
(bad)
dec
push
fs
ds
clc
fsub
mov
pop
fstp
outs
and
jbe
addr16
push
and
push
pop
xor
cmps
and
adc
jns
mov
inc
shl
adc
jno
out
cmp
repnz
push
int
movs
jl
adc
and
stc
mov
fdiv
adc
inc
and
mov
data16
mov
enter
jmp
xor
add
in
push
hlt
and
xchg
cld
rcl
icebp
xor
mov
xchg
div
mov
lock
mul
adc
(bad)
mov
fstp
xor
mov
ja
loopne
neg
ins
rcl
shl
sbb
or
scas
mov
setp
cmp
lods
sbb
xchg
ins
(bad)
lock
lahf
jle
dec
test
fsubr
xchg
in
lods
shr
sub
pop
ret
xlat
popa
dec
push
dec
in
das
xor
jns
dec
fdiv
adc
ss
lds
inc
fs
loopne
mov
lahf
(bad)
retf
and
push
sub
lods
cmps
test
aas
outs
pop
outs
fcom
and
mov
push
scas
jp
loop
mov
push
pop
dec
stc
int
fcmovnbe
stc
nop
push
adc
inc
iret
push
sar
ds
hlt
and
adc
add
mov
shr
fs
mov
inc
shl
in
mov
pop
and
jle
js
pop
jnp
mov
outs
bound
cmp
ror
push
addr16
xor
call
xchg
dec
xchg
add
test
pop
dec
and
jne
add
and
rcl
fldcw
xchg
ret
pop
aad
adc
das
sar
repnz
sti
popf
xchg
cmp
push
mov
or
popa
inc
loop
jns
es
adc
add
sahf
in
xor
fimul
mov
ins
mov
xor
mov
cld
rcl
(bad)
movs
xchg
js
shl
add
in
cli
imul
push
dec
adc
pop
push
xor
xlat
adc
mov
mov
dec
xchg
sub
sbb
repz
jns
in
sub
xchg
or
sbb
pushf
pop
test
hlt
leave
ins
cli
sbb
aaa
std
pop
into
jecxz
mov
sbb
push
xchg
mov
cli
ins
jp
dec
dec
repnz
sub
dec
jno
mov
ficom
pop
loopne
rcr
sti
mov
mov
call
mov
test
psrlw
popa
pop
in
jae
xor
lea
xor
jo
or
jmp
cdq
jp
imul
mov
inc
in
and
sub
adc
xchg
(bad)
cdq
shr
push
push
loop
int3
inc
in
mov
sahf
dec
out
cmp
inc
pushf
js
or
cld
lds
ja
outs
mov
pop
mov
pop
adc
xchg
push
jp
sbb
int
jecxz
das
mov
fldenv
jle
sti
xchg
lds
mov
call
daa
pushf
xor
icebp
fcmovnu
ret
retf
outs
lea
mov
arpl
jnp
jbe
jb
les
inc
(bad)
mov
in
aad
outs
inc
cs
hlt
and
mov
fadd
jl
jg
pop
shl
pop
sub
mov
(bad)
xchg
mov
scas
int
ret
adc
in
rcr
sbb
push
jnp
imul
ins
mov
push
int
int3
and
adc
sbb
not
and
adc
test
movs
jl
ins
mov
out
cmp
sub
sbb
or
cld
ds
push
fcomp
int3
outs
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
cld
ds
push
fcomp
int3
outs
mov
pop
mov
outs
push
jg
or
cmp
out
lock
cmp
pop
imul
jne
push
mov
xor
int3
rcr
out
arpl
fisttp
mov
cli
inc
jecxz
bound
jb
add
ins
movs
cs
cmc
leave
sbb
int3
outs
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
cld
ds
push
fcomp
int3
outs
mov
pop
mov
int3
int3
dec
adc
jnp
add
lds
retf
push
inc
jmp
sti
pop
mov
fwait
cmp
jmp
or
cmp
lahf
sbb
pop
mov
js
or
push
xor
cmp
inc
add
add
fidiv
mov
mov
cld
sbb
out
int
in
(bad)
retf
adc
xor
frstor
jno
cmp
ins
add
fst
xchg
(bad)
addr16
out
popa
sar
pop
outs
and
fdiv
jne
gs
movs
pusha
xchg
es
cmp
scas
mov
cli
imul
fimul
into
sbb
je
or
jmp
stc
stos
push
jmp
lds
push
scas
test
jae
hlt
cli
les
sub
add
cmp
(bad)
push
xchg
sub
add
cmp
push
popf
mov
pop
retf
dec
scas
mov
arpl
dec
shl
mov
(bad)
jmp
(bad)
pop
mov
fisttp
ds
fistp
mov
mov
lahf
inc
jge
scas
fidivr
cmps
aas
jb
adc
sbb
sbb
fisttp
in
(bad)
adc
inc
sar
adc
sub
cdq
fisub
mov
shr
pusha
adc
xor
mov
xchg
inc
iret
pop
add
in
aam
ins
fadd
fyl2x
mov
mov
inc
in
out
cli
imul
fiadd
and
cmp
cmp
push
xchg
mov
pop
call
dec
ret
cli
adc
jnp
jg
xor
sbb
jo
mov
jp
aas
add
cmp
sbb
ror
push
mov
mov
mov
xor
and
je
sti
sub
test
dec
bound
fxch
sub
jne
inc
inc
push
add
ins
aad
mov
dec
lahf
adc
out
test
mov
adc
neg
lods
aam
cmp
inc
stos
cmc
xor
xor
popf
test
adc
pop
fmul
fnsavew
dec
movs
sbb
fld
inc
jo
mov
lock
jecxz
ret
adc
pop
call
inc
loop
adc
mov
outs
inc
aam
les
dec
sti
jg
sub
and
push
or
nop
stos
sub
aas
gs
cmp
movs
add
xchg
lds
xor
(bad)
jp
or
jnp
(bad)
adc
loope
jnp
push
jecxz
and
pop
adc
lahf
push
mov
test
shl
sub
mov
loope
jle
mov
add
push
xchg
movs
or
std
dec
dec
inc
pop
mov
inc
lahf
(bad)
stos
das
int3
jne
mov
shr
and
cmps
aad
gs
lahf
jp
iret
adc
xchg
leave
(bad)
xchg
and
lock
hlt
sub
sahf
clc
sbb
or
fs
clc
cmc
in
out
(bad)
push
jmp
xor
jmp
stos
xchg
test
add
sbb
pavgw
mov
adc
jp
add
or
jle
ret
leave
push
mov
mov
mov
out
xchg
repnz
test
xchg
push
dec
das
add
push
xchg
iret
xchg
push
inc
or
out
add
jg
in
adc
and
dec
mov
in
fisttp
scas
cmovb
sub
pop
xchg
shr
bnd
test
inc
out
jl
out
cld
dec
ret
das
(bad)
adc
mov
or
add
imul
inc
nop
pushf
gs
movs
and
jo
cld
cli
out
mov
mov
retf
add
ret
add
and
jl
and
sub
lock
mov
xor
dec
xor
(bad)
repz
sti
dec
jae
adc
cmc
in
bt
icebp
movs
xchg
push
mov
xor
stc
out
js
ja
fs
pop
inc
pop
inc
push
push
enter
push
cld
stc
jg
aam
cmp
mov
jp
dec
push
mov
loop
adc
dec
and
xor
and
shr
icebp
push
jg
test
pop
out
dec
dec
lahf
movs
(bad)
xchg
retf
hlt
mov
ret
repnz
xchg
test
jmp
add
je
arpl
sti
or
lods
out
xor
mov
cmp
pop
je
icebp
mov
or
jno
inc
test
sub
mov
inc
loopne
mov
mov
outs
lds
pop
in
adc
lock
outs
movs
leave
mov
jnp
push
sub
cmp
or
(bad)
push
jmp
mov
retf
dec
push
pop
push
cmps
mov
dec
mov
arpl
imul
jno
loopne
test
loopne
dec
(bad)
cmp
gs
push
push
idiv
and
jg
in
sbb
lahf
adc
gs
xor
adc
pop
fwait
inc
push
jle
in
ins
fisubr
push
push
lods
ret
mov
test
mov
movs
add
and
(bad)
in
mov
mov
pop
xchg
repz
add
adc
stos
leave
inc
pusha
or
cli
cwde
cmp
rcr
xchg
movs
xchg
paddw
iret
aam
std
sub
xlat
xchg
outs
pop
xor
jge
mov
pop
adc
push
mov
(bad)
lds
fcom
jmp
test
lods
jp
or
test
push
add
sub
gs
mov
xchg
xor
pop
jecxz
(bad)
push
(bad)
cmps
mov
mov
jg
xchg
iret
stos
shl
or
mov
fcmovnb
cld
shl
icebp
cs
cmc
lahf
or
(bad)
dec
stos
sbb
ss
call
into
cld
pop
pusha
rol
cmp
cdq
mul
sub
test
or
in
xor
scas
ror
in
sbb
mov
in
mov
push
push
jb
mov
pop
test
or
lds
mov
repz
ficom
adc
sub
jnp
pop
mov
xor
inc
jecxz
aam
sti
out
mov
mov
jg
es
hlt
and
pop
push
mov
mov
xchg
and
inc
adc
mov
mov
and
(bad)
icebp
sbb
push
fimul
test
sti
mov
(bad)
sub
call
or
jno
out
push
movd
pop
call
and
ins
pop
adc
pop
and
push
retf
dec
and
sar
or
in
addr16
js
cmp
(bad)
retf
ins
pop
das
shl
cs
or
call
retf
push
das
jns
popf
cmp
mov
test
mov
je
push
lock
sub
es
pop
ds
cld
fwait
push
mov
push
mov
aam
add
add
push
xchg
jp
dec
call
cmp
inc
in
sti
ja
fmul
adc
sub
rcl
outs
out
jl
or
xor
pop
cli
imul
fimul
stos
sbb
retf
push
jp
dec
sti
pop
mov
fwait
cmp
jmp
or
cmp
jmp
sti
pop
mov
fwait
cmp
fldcw
pop
stc
dec
jmp
push
mov
loop
shl
data16
cmps
cmp
fsubr
pop
std
inc
jecxz
xchg
and
retf
pop
jmp
fnstcw
outs
mov
xor
(bad)
push
test
sbb
in
dec
fnstsw
mov
fwait
cmp
jmp
or
cmp
jmp
sti
pop
mov
fwait
cmp
int3
int3
cmps
imul
pop
in
sti
cmp
aad
add
test
mov
lea
jge
dec
xchg
pop
in
cmc
cmp
and
sbb
jne
inc
lea
movs
ins
pop
sub
and
mov
mov
and
movsx
jecxz
loope
mov
push
xchg
xchg
test
daa
mov
jae
jp
push
pop
sbb
sub
cmp
lods
test
sar
lods
cdq
push
sbb
mov
or
sar
scas
into
rol
sub
pop
mov
mov
mov
mov
jbe
or
(bad)
mov
test
mov
push
mul
sbb
adc
test
push
inc
enter
js
cmp
dec
lock
movs
ret
stos
loope
push
dec
inc
or
adc
add
adc
(bad)
out
xor
in
fimul
retf
popa
ins
cmc
mov
mov
fs
dec
test
cdq
add
xor
loope
lods
add
(bad)
sub
and
xor
hlt
adc
jns
mov
xor
dec
pushf
dec
out
jne
add
(bad)
(bad)
in
addr16
mov
jno
aad
mov
aam
push
mov
jge
sbb
adc
and
retf
mov
xor
jecxz
jo
pop
out
hlt
aam
xchg
fmul
add
add
add
add
(bad)
arpl
push
test
jl
or
adc
jecxz
mov
push
out
imul
lods
pop
sub
jge
cmp
(bad)
ror
dec
dec
mov
xor
fisubr
adc
xor
das
test
out
jle
sbb
addr16
xchg
jne
lods
mov
test
or
mov
inc
lahf
xor
sub
mov
sahf
push
out
lods
fs
rcr
mov
jp
push
loope
mov
adc
lock
mov
(bad)
sub
inc
xor
scas
pop
push
mov
jns
jmp
leave
in
adc
outs
add
ja
test
or
sub
jne
jle
mov
sar
push
jae
arpl
adc
scas
cmc
cmp
ss
add
mov
or
dec
xchg
cmp
dec
jns
loop
adc
fwait
and
push
(bad)
(bad)
pop
or
call
jp
dec
add
xor
and
(bad)
jp
(bad)
fisubr
jae
or
rcr
outs
xor
xor
mov
mov
xchg
jne
loop
clc
arpl
add
sub
sbb
les
mov
mov
ins
in
cmp
div
or
mov
sub
aam
mov
jno
into
push
lods
fsub
ror
stos
(bad)
cwde
and
mov
enter
lods
lock
stos
loope
test
dec
icebp
xchg
cmc
shl
iret
andps
jbe
push
push
loopne
mov
icebp
sbb
je
pusha
sbb
ret
mov
cmc
and
and
addr16
cmp
sbb
rcr
sbb
in
cmp
int
mov
sub
mov
lods
push
pop
test
ins
shl
jle
xchg
repnz
adc
fstp
mov
fs
mov
pop
in
sub
bound
xchg
sbb
inc
lds
cdq
into
std
cmp
dec
test
push
inc
movs
sbb
pop
aad
shr
stc
inc
mov
inc
cli
sbb
add
mov
inc
addr16
mov
mov
std
xchg
mov
(bad)
jo
popf
out
mov
xchg
fld
outs
add
shl
icebp
(bad)
xor
mov
in
xor
hlt
push
fst
mov
(bad)
cld
sub
adc
or
jmp
call
leave
cs
test
sbb
adc
in
retf
sbb
repz
test
pop
push
mov
or
add
or
retf
arpl
sbb
ror
cmp
movs
outs
dec
lods
jp
xchg
mov
or
call
(bad)
push
inc
add
xor
mov
inc
inc
push
daa
iret
stos
sub
sub
daa
ret
sahf
xor
outs
je
mov
in
push
outs
mov
add
popa
push
sbb
mov
inc
push
ja
pop
inc
mov
test
and
inc
rcr
cmp
leave
xchg
aas
fwait
into
iret
cmp
mov
push
call
jge
sub
fnstenv
xchg
lods
mov
cs
cmp
inc
push
cmp
push
or
mov
imul
inc
xchg
or
sti
shl
add
stos
in
test
rcr
xor
push
popa
movs
sub
ret
out
aaa
outs
sub
(bad)
sub
mov
jmp
popa
dec
addr16
pop
dec
lea
loope
mov
mov
push
sbb
retf
xor
jmp
xchg
mov
sub
call
jno
cmp
int
xor
fucomp
lods
mov
xor
adc
push
mov
dec
or
pop
ficomp
pop
xor
neg
xchg
inc
jge
sbb
and
xchg
mov
(bad)
dec
push
retf
mov
jmp
repz
pop
icebp
out
repz
jmp
pusha
mov
cmp
fst
xor
pop
pop
movs
jo
mov
push
lea
dec
sbb
xor
adc
push
and
sub
push
fldenv
jno
pop
push
(bad)
mov
dec
pop
xchg
adc
rcr
add
xchg
or
mov
jl
mov
mov
(bad)
push
push
cmc
sbb
fwait
sub
imul
(bad)
rcr
jbe
popf
inc
xor
mov
sub
push
sbb
scas
inc
mov
frstor
jmp
ror
adc
jbe
call
sub
or
fnstcw
cmp
cli
mov
jne
out
pop
lea
enter
sub
aam
repnz
push
cli
std
stos
mov
push
lahf
pop
cmc
idiv
mov
test
and
sbb
outs
test
jne
inc
lea
movs
ins
(bad)
into
repnz
fnsave
xlat
scas
xchg
inc
movs
sbb
xabort
or
leave
mov
dec
push
jl
outs
dec
add
inc
xchg
jne
sbb
adc
popa
leave
pop
cmps
xor
rcl
xchg
and
inc
push
or
fisubr
cdq
xchg
repz
sub
xor
dec
dec
fcom
dec
cmp
sti
cdq
and
xchg
sub
imul
in
icebp
mov
or
fdivr
or
std
xchg
xchg
adc
popa
test
push
shr
pop
push
dec
in
sub
setno
shl
jmp
imul
call
xchg
pop
in
cmc
cmp
and
int
frstor
jne
inc
lea
movs
ins
mov
test
pop
in
cmc
cmp
and
int
frstor
jne
inc
lea
jge
stc
sub
cmp
leave
in
scas
push
pop
mov
xlat
or
arpl
and
scas
mov
cli
imul
jmp
mov
dec
nop
sbb
lds
(bad)
int
mov
cmp
rcl
mov
lods
jne
inc
lea
movs
ins
mov
test
pop
in
cmc
cmp
and
int
frstor
jne
inc
lea
int3
int3
int3
std
push
in
mov
jo
fistp
jge
dec
cmp
or
sbb
ins
sub
pop
std
lods
in
mov
mov
int3
lea
pop
or
sbb
add
pop
std
lods
in
inc
ins
loope
xor
pop
movs
or
mov
jbe
js
adc
inc
lahf
add
add
test
mov
xchg
jmp
imul
pop
pop
pop
jge
pop
sub
rcr
dec
stc
popf
pop
psllq
inc
adc
iret
loop
or
add
mov
in
es
jnp
neg
(bad)
test
fdivp
fadd
adc
push
inc
or
popf
outs
pop
ins
std
enter
in
call
ret
stc
lods
loope
data16
mov
out
imul
imul
mov
dec
cwde
jg
inc
into
call
ins
test
dec
push
repnz
shr
and
dec
or
pusha
bound
cs
into
and
mov
sub
fldcw
test
mov
mov
fadd
push
inc
and
sbb
aaa
popf
shl
ss
xchg
xor
xor
dec
shl
cmp
mov
outs
(bad)
rcr
in
xchg
fcomp
jnp
cmp
test
and
(bad)
(bad)
and
mov
loop
adc
fcomp
gs
lock
and
or
fldln2
mov
inc
fidivr
and
sub
imul
nop
(bad)
or
iret
cmc
pop
js
test
jae
cwde
stos
jmp
hlt
sub
xor
pop
aad
scas
cmps
adc
mov
adc
fadd
cwde
and
cdq
push
movs
fwait
mov
lods
mov
dec
or
aam
cmps
dec
repnz
push
sub
lahf
mov
jb
add
popf
xor
push
cmp
out
pop
or
cmps
jae
mov
leave
and
aad
popf
xor
ins
xlat
mov
sub
jge
sbb
cs
mov
xchg
pop
loopne
or
xchg
aad
sub
and
int
inc
in
dec
pop
clc
in
or
jge
clc
in
push
pushf
test
sub
cwde
mov
mov
lods
add
jmp
and
push
cli
xchg
dec
sbb
jecxz
in
mov
sti
jmp
pop
fsubr
data16
cmps
add
add
dec
or
int
and
push
cld
jmp
cmp
ret
jb
mov
mov
push
ss
inc
adc
clc
fist
xchg
enter
arpl
sbb
cmp
(bad)
out
cmc
fldl2t
leave
call
rol
fisub
mov
cld
test
test
and
push
mov
clc
xor
leave
push
and
mov
sub
cmp
or
jecxz
jne
jl
dec
xchg
push
ror
mov
push
jns
xor
jno
xchg
jl
sbb
cli
aam
push
and
inc
out
call
jb
and
test
aam
movs
in
cmp
icebp
fmul
repz
or
cs
sbb
loope
adc
gs
inc
xchg
int
frstor
not
std
retf
shl
xchg
push
mov
stc
push
add
enter
ins
pushf
jb
popa
pop
or
pop
or
or
xchg
lods
adc
sbb
sub
imul
inc
jecxz
ins
pop
cmc
xchg
inc
pop
adc
add
push
jae
adc
sbb
jg
ss
sbb
aam
hlt
inc
es
pushf
pop
and
add
mov
cwde
dec
and
push
mov
add
frstor
and
or
in
fild
xchg
dec
add
movs
pop
ss
daa
dec
push
imul
jecxz
cmp
sub
mov
push
jae
mov
popa
xchg
bound
sub
mov
scas
jle
es
sbb
mov
jae
loop
adc
adc
inc
push
sar
mov
repz
mov
adc
dec
mov
ror
jmp
popa
stc
test
mul
mov
mov
and
test
xchg
mov
retf
push
mov
and
or
jno
push
add
xchg
aad
outs
add
dec
pushf
stos
adc
mov
dec
sub
psubusb
jno
jl
and
xchg
xchg
(bad)
fcomp
sub
dec
mov
fcom
clc
aam
lods
sbb
mov
in
rcl
pop
popf
fiadd
mov
xor
enter
inc
enter
xor
adc
sub
cmps
(bad)
lock
fs
adc
(bad)
fld
mov
pop
cmp
ret
mov
push
jecxz
test
sub
add
je
mov
xor
cld
mov
popa
cmps
dec
add
dec
fdiv
adc
(bad)
add
fadd
and
xchg
mov
movs
mov
adc
dec
mov
push
inc
test
loopne
jmp
or
sbb
pop
repz
mov
xchg
sub
adc
(bad)
cmovge
sub
push
stc
in
test
stc
pop
fs
idiv
xchg
xchg
mov
repz
jl
mov
test
xchg
mov
mov
pushf
mov
xchg
pop
xchg
repz
dec
mov
or
adc
icebp
mov
inc
cmp
add
xor
ins
fst
cmp
push
repnz
(bad)
jmp
loopne
pop
sub
into
enter
adc
inc
or
fnsave
out
ss
fcomp
inc
std
fdivp
test
js
add
jl
sbb
xchg
dec
and
jne
dec
data16
jns
aad
ret
xchg
(bad)
jae
pop
or
sbb
pusha
mov
aad
movs
add
inc
adc
add
cmp
rcl
adc
fs
push
add
dec
push
(bad)
fadd
jp
xor
add
sbb
js
jl
push
sub
fstp
mov
add
add
in
inc
push
jae
cdq
ret
mov
test
ds
fnsetpm(287
sti
push
les
loope
gs
push
and
fisttp
cdq
scas
int3
sar
ins
xchg
xor
sbb
ins
sub
pop
std
lods
pop
push
mov
test
push
pop
jb
cmp
dec
xchg
(bad)
mov
xchg
ds
cwde
jg
mov
fidiv
jecxz
add
add
mov
push
ret
xchg
xchg
jp
imul
in
jmp
pop
in
outs
daa
pop
inc
popa
in
(bad)
fptan
dec
imul
test
out
bound
push
jno
xchg
fwait
add
aaa
enter
arpl
das
pusha
nop
add
pop
stos
ror
and
out
in
sub
(bad)
js
retf
adc
cmp
jne
inc
or
aas
std
call
cmps
mov
shl
push
pop
sbb
sub
daa
jge
jg
inc
shrd
fisttp
cld
popf
int3
(bad)
fdivr
ins
cmp
or
sbb
ins
sub
pop
std
lods
in
mov
mov
int3
(bad)
fdivr
ins
cmp
or
sbb
ins
sub
pop
std
nop
fsubp
out
lock
mov
cwde
test
push
push
sub
add
sub
pop
leave
rcr
jmp
imul
pop
xor
jle
or
sbb
and
xor
mov
repz
cmp
mov
push
imul
sbb
ins
sub
pop
std
lods
in
mov
mov
int3
(bad)
fdivr
ins
cmp
or
sbb
ins
sub
pop
int3
int3
int3
cmp
jne
call
push
mov
call
test
pop
je
mov
xor
mov
and
shr
mov
mov
shl
add
mov
call
mov
call
mov
call
call
call
call
inc
push
pop
ret
xor
cmp
jne
cmp
jle
dec
cmp
jne
call
call
call
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
mov
jne
cmp
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
mov
cmp
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmp
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmp
jne
call
push
call
push
call
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
mov
jae
test
je
call
add
jmp
pop
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
push
call
push
push
push
call
push
push
push
call
add
inc
cmp
jl
pop
pop
push
push
push
call
push
call
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
and
pop
add
cmp
jl
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
cmp
mov
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
and
mov
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
lea
cmp
jne
mov
jmp
mov
xor
mov
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
mov
cmp
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
add
fadd
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
add
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
add
add
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
add
dec
add
push
add
pop
add
add
ins
add
je
add
add
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
test
ins
pushf
test
ins
xchg
test
ins
mov
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rol
add
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
xchg
ins
mov
add
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
add
add
add
add
add
add
add
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
xchg
ins
push
xchg
ins
mov
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
