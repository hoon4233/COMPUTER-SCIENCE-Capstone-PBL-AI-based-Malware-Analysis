sbb
add
mov
jo
pop
sub
into
loope
pusha
mov
or
aaa
pop
and
enter
iret
xchg
pop
mov
in
push
fiadd
pushf
adc
fisttp
add
hlt
pop
push
ret
push
sub
imul
jp
(bad)
xchg
mov
sub
call
or
test
xchg
inc
cmc
test
lock
mov
push
mov
push
sub
shr
xchg
test
push
and
test
adc
addr16
pop
or
push
xor
mov
ja
jns
adc
dec
cld
bound
push
lea
in
and
adc
pop
xor
not
mov
(bad)
xchg
test
test
inc
jnp
inc
xor
sbb
imul
and
xor
loop
out
cmp
in
test
retf
mov
ins
inc
inc
sbb
in
push
jbe
sub
cld
cwde
cmc
sub
push
gs
add
stc
lods
jnp
cwde
(bad)
mov
nop
push
add
add
cmc
loop
cdq
sub
cmp
mov
pop
xor
addr16
in
retf
sub
cdq
sbb
sub
pop
inc
or
sbb
stos
inc
and
push
data16
jmp
lahf
int
mov
cli
nop
or
fadd
jae
pop
mov
push
ins
retf
repnz
test
cmps
mov
mov
aad
sub
sahf
cmp
push
aaa
pusha
dec
arpl
push
jl
jb
pop
mov
adc
sub
adc
fadd
movs
push
push
add
push
repnz
push
dec
sahf
xchg
addr16
mov
add
(bad)
sbb
scas
push
or
pop
daa
mov
mov
and
xchg
retf
jmp
push
dec
shl
repz
pop
bound
mov
cli
xchg
and
xchg
xor
dec
and
dec
and
dec
ins
dec
cmps
adc
stos
(bad)
cmp
inc
mov
mov
cwde
pop
loop
mov
and
mov
mov
sahf
rol
inc
jb
ins
push
xchg
shr
ret
in
sbb
mov
xlat
je
fidivr
pop
hlt
and
lock
sub
(bad)
inc
push
loop
xor
fs
fcomp
mov
ins
push
(bad)
loopne
sub
sub
lea
in
retf
and
add
jae
(bad)
jp
ja
inc
xor
mov
pop
pop
cwde
clc
fstp
inc
pop
lods
fiadd
mov
sbb
std
add
xchg
lods
test
push
mov
dec
add
mov
xor
jnp
cmps
push
xor
cli
lods
adc
out
mov
js
fisubr
movs
adc
push
lea
fwait
inc
jo
(bad)
cwde
jo
xchg
out
(bad)
out
sbb
fsubr
mov
mov
ftst
mov
xlat
jle
cmp
pop
pop
mov
cmps
test
repnz
jmp
aaa
mov
adc
lahf
jge
ror
cdq
test
pop
(bad)
(bad)
pslld
repz
fldenv
pop
lea
aaa
ins
push
adc
inc
out
int3
dec
or
outs
cs
push
retf
ficomp
adc
sub
xchg
loop
inc
jmp
(bad)
out
mov
mov
push
lock
movs
ffree
mov
ficom
sub
loope
sub
neg
jns
enter
ja
call
data16
rol
ja
js
adc
out
adc
aad
(bad)
jb
pop
pop
fs
mov
das
retf
pop
(bad)
movs
scas
xchg
lods
imul
xor
je
adc
pop
out
and
xor
add
sbb
cmps
fwait
int
fbstp
pop
dec
int
dec
popa
xchg
pop
xor
pusha
stc
sbb
clc
dec
clc
mov
jbe
cli
mov
pushf
cmps
push
jns
mov
mov
out
shl
sbb
scas
lock
jo
xchg
test
je
adc
jns
sub
sbb
shl
cmp
xchg
jmp
or
sahf
inc
cmp
ret
mov
and
jno
sub
adc
jp
mov
cdq
sbb
inc
scas
xor
push
sub
lods
mov
bswap
cli
ret
fadd
jnp
sar
and
xor
inc
ret
pop
xchg
sub
in
aas
jae
aad
cmp
call
mov
sbb
lods
mov
sar
movs
jne
popa
fist
and
push
(bad)
popf
idiv
sbb
aaa
fucomip
fwait
into
stc
jnp
cwde
cmp
shr
lock
jmp
pop
and
shr
jmp
in
hlt
(bad)
retf
mov
mov
xchg
mov
ja
xor
test
sub
mov
mov
jb
bound
ja
aam
adc
leave
in
(bad)
test
or
mov
mov
pop
push
dec
push
mov
push
cmp
ficomp
cmps
cmps
mov
sahf
ret
addr16
aaa
sub
add
aad
cmps
push
and
mov
jecxz
imul
jge
adc
or
in
push
popf
dec
mov
push
or
or
enter
popf
lods
into
icebp
std
ja
into
mov
jno
out
les
(bad)
push
adc
aas
pop
jmp
jmp
mov
and
lahf
test
fild
leave
mov
mov
jns
frstor
aaa
aas
mov
and
test
jmp
mov
dec
sub
lds
cli
jmp
mov
inc
add
pop
adc
add
xor
in
xor
jb
mov
and
dec
rcr
dec
sub
push
cmc
aaa
test
bound
or
into
pop
leave
nop
(bad)
mov
vpshufd
inc
inc
repz
cwde
scas
push
enter
mov
ds
pop
div
inc
adc
and
es
ret
sti
xchg
push
(bad)
std
push
xchg
add
mov
cmp
aaa
cmp
xchg
add
mov
cmps
xor
mov
fadd
push
mov
loop
pop
test
sub
and
sub
fild
mov
xchg
mov
cli
sar
icebp
and
pop
(bad)
aas
jno
inc
inc
(bad)
ins
pop
aas
push
and
loopne
sbb
out
jp
jle
aam
mov
ret
jp
or
push
sub
or
mov
push
or
xchg
icebp
mov
push
xor
sar
sbb
mov
call
enter
or
jge
push
dec
test
out
fld
adc
push
or
test
push
rol
and
sub
mov
or
aam
call
xchg
(bad)
mov
push
bound
pusha
xchg
sub
lods
pop
sub
add
inc
mov
cld
and
inc
fldcw
rcl
and
dec
xchg
xor
in
xor
jmp
inc
mov
jle
xchg
cmc
push
adc
and
pop
cmp
aaa
lock
pop
mov
jecxz
daa
xor
in
das
arpl
xor
ja
fs
out
(bad)
sbb
loopne
ret
adc
shl
popf
in
test
sbb
adc
adc
test
xchg
add
mov
or
sub
es
xlat
sbb
fisub
call
xlat
mov
dec
mov
movs
mov
add
and
aad
bound
jo
fldenv
jns
das
jns
xchg
call
icebp
ds
xchg
pop
out
pop
ffree
inc
sub
scas
add
ins
rol
lods
adc
cmp
(bad)
leave
or
xchg
cmps
(bad)
and
push
add
outs
into
mov
mov
andnps
pop
adc
xchg
jae
add
test
pusha
or
clc
cmp
sub
enter
dec
xor
popf
cmps
call
addr16
mov
jnp
cmc
jbe
je
xor
or
call
test
test
fistp
mov
aam
xchg
faddp
or
pop
aas
fs
xchg
(bad)
fisttp
imul
add
mov
mov
(bad)
cmp
adc
mov
xor
fxch
mov
or
mov
xlat
sbb
mov
ror
adc
adc
hlt
push
push
std
inc
pop
jp
jno
clc
sbb
push
into
cmp
xchg
loopne
jb
mov
dec
(bad)
int3
inc
push
dec
cmp
(bad)
cmps
jns
xor
dec
or
and
adc
data16
daa
add
add
(bad)
in
push
cs
movs
loopne
dec
stos
or
inc
fnstcw
and
ss
aas
retf
mov
rol
stos
push
adc
(bad)
lods
in
jmp
xor
stos
or
ss
cmp
icebp
imul
xchg
fimul
jmp
fcmovne
test
lods
ficomp
rol
icebp
push
cld
sbb
dec
xlat
rol
pop
lahf
test
xor
imul
jle
inc
xchg
lods
or
test
iret
test
xchg
jae
stos
mov
je
adc
push
movs
int3
dec
dec
sti
aaa
imul
xor
jne
dec
jns
test
jmp
pop
mov
mov
jmp
push
jae
les
ror
jb
sub
jl
pop
inc
xchg
jp
or
pop
scas
jmp
in
rcl
fnstenv
clc
jge
das
xor
pop
inc
js
inc
ret
dec
lds
das
sbb
mov
sub
sbb
mov
loopne
xor
dec
pop
mov
(bad)
cmp
mov
push
movs
retf
xor
sbb
xchg
aad
jge
je
in
mov
(bad)
push
xchg
xchg
mov
sub
(bad)
jmp
sub
cmp
sbb
pop
stos
call
and
outs
xchg
fisttp
pop
cmps
test
mov
rol
test
xor
push
pop
retf
ja
and
cmpps
and
lock
lahf
mov
mov
loop
std
inc
clc
repnz
inc
mov
xor
xchg
sbb
adc
jp
mov
test
jg
and
iret
sub
icebp
out
and
jo
icebp
mov
stos
jl
nop
les
and
out
inc
jge
and
sti
mov
pop
or
pop
pop
es
push
push
push
in
jp
and
push
pop
adc
jl
xchg
(bad)
pushf
ret
(bad)
lods
adc
xor
add
sbb
shl
(bad)
cmp
sbb
imul
or
sbb
ins
outs
mov
out
stos
mov
and
mov
outs
jge
(bad)
or
xchg
inc
and
sahf
mov
cmp
loope
push
cmp
jno
inc
out
loope
push
mov
push
or
cmps
inc
xor
jno
in
clc
(bad)
sub
in
fwait
je
lahf
sub
data16
cld
push
idiv
jne
std
cmps
popf
(bad)
mov
or
pop
dec
leave
ss
dec
mov
add
cmp
add
dec
leave
inc
test
pop
std
add
stc
sbb
mov
lods
jae
or
pop
in
into
cmp
call
mov
xor
sbb
or
lahf
adc
ja
pop
pusha
jae
inc
enter
inc
mov
pop
dec
icebp
adc
jne
scas
and
push
xlat
xor
fimul
cmp
and
repnz
mov
jg
mov
cmp
dec
leave
mov
inc
sbb
xor
or
or
sbb
repnz
sbb
leave
cmc
push
push
and
scas
cmp
sub
mov
scas
and
or
adc
or
imul
js
(bad)
push
jo
test
fistp
pop
and
or
jns
pop
sub
sbb
ret
(bad)
xchg
mov
and
in
push
and
jp
xor
and
fwait
pop
push
rcr
sti
and
cmps
dec
push
push
push
mov
pop
sbb
jno
daa
stc
pop
or
loop
cdq
add
xor
bnd
cmps
sbb
ds
sbb
movs
cmps
cs
mov
jl
out
data16
add
je
dec
aaa
movs
pop
jae
mov
cmp
out
add
pop
ret
dec
mov
push
and
push
mov
arpl
pop
and
inc
mov
sbb
xchg
es
push
mov
add
push
outs
enter
cmp
sub
or
in
cli
int3
fimul
mov
lock
shl
loopne
fdivp
mov
pop
xor
test
push
jno
ret
dec
aaa
cld
or
das
cmps
ror
jns
sbb
push
mov
ja
push
daa
and
xor
push
scas
cdq
ds
nop
mov
xchg
cmp
aas
in
xchg
or
enter
movs
xor
call
addr16
jnp
add
ficomp
or
lods
sti
and
(bad)
mov
jge
in
in
jnp
(bad)
movs
mov
jg
mov
lods
sub
test
aad
std
ins
jp
aaa
aam
(bad)
pop
xchg
lds
dec
push
fimul
loope
dec
lea
rcr
loop
jle
repnz
ins
jo
mov
sti
add
repz
mov
lds
jmp
int3
inc
jl
mov
xor
xchg
pop
faddp
lahf
stos
(bad)
imul
lahf
hlt
in
push
test
and
je
sub
idiv
inc
les
sbb
xor
movs
imul
inc
rol
sahf
mov
and
cwde
test
dec
cdq
xor
dec
aad
cmp
repnz
fdiv
xchg
jno
aas
enter
scas
mov
mov
sub
dec
mov
sbb
cld
(bad)
clc
mov
sbb
jno
test
loopne
arpl
popa
xlat
xor
es
cmc
pop
aas
lock
sbb
and
cmp
outs
jp
jg
and
mov
mov
shr
sub
ins
mov
jae
sbb
sbb
les
jmp
adc
cld
cmps
vfrczsd
imul
ret
std
inc
je
(bad)
xlat
aam
or
pop
fnstsw
iret
scas
into
mul
adc
dec
add
std
xlat
adc
repnz
push
stos
adc
bound
scas
ss
movs
add
dec
daa
push
jb
ja
mov
dec
inc
leave
cmps
push
in
adc
mov
aam
fimul
cmp
leave
mov
sub
pop
dec
cli
add
mov
mov
add
mov
inc
mov
sub
dec
cmp
mov
dec
(bad)
mov
sbb
lahf
xor
or
sub
lock
rol
jne
fs
xor
out
inc
add
mov
add
movups
mov
sbb
fcomp
push
pop
pop
ins
call
js
int
xor
test
nop
int3
cmp
inc
aam
(bad)
les
xchg
push
fsub
mov
cli
fs
jmp
out
push
rcr
jnp
push
mov
clc
movs
pusha
std
cmp
or
or
fidivr
std
ret
dec
(bad)
cld
and
sub
imul
das
jmp
lods
jne
inc
jmp
mov
ffree
cmp
mov
(bad)
stos
hlt
ret
adc
pop
cs
dec
mov
loop
xchg
add
xor
xor
jp
fst
sahf
outs
mov
and
adc
enter
sub
das
mov
enter
cwde
jbe
mov
jge
push
movhps
mov
call
push
aas
sub
pop
dec
daa
xchg
jae
dec
inc
jp
jb
or
loopne
xchg
mov
mov
push
(bad)
es
pop
enter
mov
je
mov
push
or
push
shr
div
inc
stc
movs
iret
cdq
xchg
adc
bound
aad
fnstcw
dec
mov
push
sbb
inc
add
xor
ficomp
add
jecxz
mov
sbb
adc
sub
rol
paddusb
mov
inc
mov
inc
sahf
fiadd
jns
mov
sbb
mov
addr16
inc
ins
shr
fstp
or
push
mov
adc
retf
push
stos
mov
xor
sub
out
mov
push
push
sbb
retf
mov
adc
xchg
nop
(bad)
cmp
adc
outs
test
jne
loope
pusha
mov
fstp
inc
and
mov
fs
mov
clc
shr
ds
xor
aas
add
mov
pop
cmp
(bad)
(bad)
es
stos
push
dec
xchg
and
(bad)
fistp
daa
mov
sub
(bad)
cmc
popa
or
test
lods
push
std
gs
lods
inc
aam
push
stos
popa
mov
mov
push
mov
fnstsw
sbb
cmp
dec
test
in
cmc
loopne
sbb
add
aad
xchg
mov
stc
pop
cmps
fdiv
pop
scas
ins
gs
js
imul
rcl
fs
mov
or
in
jne
ds
push
mov
lock
jge
dec
xchg
fsub
das
add
cmc
out
xchg
pop
xor
imul
xor
mov
pop
imul
aad
inc
jo
pop
push
sti
scas
jge
push
iret
ja
xor
repz
or
sahf
test
push
sti
retf
adc
add
je
test
(bad)
mov
xor
(bad)
xlat
dec
addr16
ret
push
in
inc
push
mov
cmp
adc
push
mov
mov
add
sbb
mov
mov
cmp
cwde
out
scas
test
and
(bad)
fisttp
in
jmp
mov
inc
sub
out
and
jle
mov
addr16
lahf
push
neg
mov
jbe
push
mov
pop
xchg
cmp
push
add
scas
fist
test
or
add
(bad)
(bad)
jg
pusha
fwait
sbb
cmp
into
sbb
ret
imul
(bad)
mov
mov
stos
stos
bound
fnstcw
mov
push
dec
xchg
pop
mov
scas
cmps
xor
lods
sbb
push
out
scas
sub
fist
adc
(bad)
or
inc
movs
dec
arpl
push
ret
xchg
inc
mov
xchg
in
mov
aas
jmp
mov
in
fwait
xor
lahf
push
mov
sub
xor
js
rcl
call
mov
dec
(bad)
(bad)
in
xchg
xlat
shl
mov
mov
inc
mov
loop
mov
and
andps
dec
imul
push
in
mov
adc
xlat
mov
sub
or
fwait
pop
inc
jecxz
add
retf
retf
cli
pop
cdq
mov
dec
lods
nop
dec
cmp
push
adc
popf
loop
xchg
push
push
sbb
jmp
test
jecxz
mov
call
adc
ins
or
dec
iret
jo
aaa
mov
mov
cmps
jnp
test
xchg
add
outs
popf
add
int3
mov
add
test
dec
popf
mov
sbb
nop
call
stc
xchg
aam
loop
rep
in
pop
hlt
adc
mov
sbb
pusha
pop
jb
shr
jnp
and
pop
test
std
(bad)
(bad)
sbb
inc
pop
cmp
in
mov
popf
cs
cmp
pop
inc
sub
out
clc
pop
stc
xor
scas
sbb
mov
mov
push
jnp
sti
fwait
mov
jb
leave
ins
pop
(bad)
xchg
add
dec
sub
inc
cli
mov
aaa
mov
and
mov
sar
sti
or
fiadd
cmp
jmp
jns
adc
ins
inc
and
cli
(bad)
aas
es
xchg
aaa
js
sbb
jmp
push
(bad)
xchg
jb
in
outs
jne
outs
out
iret
out
push
push
cmp
push
ins
sahf
sbb
dec
push
adc
xor
mov
push
retf
jmp
dec
loopne
(bad)
mov
adc
mov
and
dec
mov
add
ror
(bad)
hlt
repnz
xor
mov
jmp
(bad)
mov
dec
clc
retf
inc
adc
cmp
xor
xchg
ficom
int
enter
sti
pop
ret
cli
add
icebp
xchg
js
arpl
jo
mov
sub
out
sub
test
cld
outs
ror
xor
cdq
pushf
inc
adc
jge
and
or
addr16
jle
loopne
mov
test
add
test
jmp
ins
es
pop
sub
imul
jl
mov
sahf
xor
cmps
loop
(bad)
mov
cmp
retf
lods
inc
out
inc
inc
popa
imul
adc
push
out
push
retf
cdq
and
ja
out
ja
jno
adc
push
pop
sub
cmp
jmp
mov
mul
mov
test
pop
mov
nop
jmp
mov
in
cmp
hlt
aaa
jb
pop
lods
loop
inc
je
inc
jns
pop
cmp
retf
into
inc
mov
in
inc
push
int3
pushf
aam
daa
mov
shl
pop
cmp
aaa
int3
retf
icebp
mov
jle
(bad)
sbb
inc
jno
add
mov
adc
cld
add
or
sub
jae
(bad)
sar
cmc
dec
add
or
movs
pop
sbb
mov
fdivrp
ret
and
push
cmp
jno
ret
ins
pusha
push
jle
nop
mov
loope
push
xor
(bad)
in
add
imul
and
mov
mov
mov
inc
test
mov
lods
jne
shr
stos
xchg
and
or
pusha
lds
or
ins
xchg
jl
pop
loopne
mov
int3
fcmovnbe
inc
cld
call
out
adc
scas
jle
shl
stc
mov
sbb
mov
pop
shl
fcomp
lahf
loop
xor
call
sub
adc
or
dec
or
jg
ins
add
jmp
loope
leave
mov
xchg
movmskps
lds
cwde
cmp
jecxz
dec
sahf
rcl
pusha
push
enter
out
cmp
push
aad
fiadd
inc
pop
cld
test
or
jno
mov
(bad)
cdq
add
push
pusha
arpl
cdq
mov
dec
xchg
test
sbb
push
mov
lahf
dec
mov
add
clc
daa
and
xlat
push
mov
cmp
push
repz
inc
add
int3
jecxz
retf
ds
call
cs
push
nop
pop
out
push
xchg
mov
push
pushf
jg
es
int
les
sahf
mov
call
pop
cmp
xor
pop
or
ins
(bad)
out
(bad)
mov
repz
sbb
push
sbb
jnp
lahf
lods
add
jge
stos
add
and
lods
test
cld
push
aas
aam
xchg
clc
jg
leave
mov
(bad)
fs
and
dec
push
mov
and
sbb
test
xchg
jbe
jne
mov
sti
xchg
or
xlat
fwait
imul
shr
shl
loopne
scas
push
fstp
mov
and
cmc
dec
retf
jo
xor
aad
test
leave
jne
lods
or
mov
retf
fst
out
repz
jp
pop
lahf
stos
push
sbb
into
enter
aaa
xor
cmp
dec
stos
rol
add
ffreep
mov
idiv
ficomp
sbb
test
push
jbe
cli
add
pop
inc
dec
stos
shr
(bad)
adc
jns
rcl
vorps
fisttp
mov
xchg
inc
popf
and
sar
cld
lock
inc
mov
mov
int
das
mov
mov
push
push
clc
sub
js
pop
inc
push
repnz
mov
xor
sbb
dec
popf
cmp
sbb
es
mov
sbb
ja
out
out
cmps
push
(bad)
fadd
daa
inc
stos
jmp
sub
sub
pop
mov
and
inc
or
or
add
sahf
jmp
das
ins
mov
test
rcr
sbb
push
mov
mov
ffree
cmc
leave
inc
out
push
loop
pop
pop
out
cmps
or
rcr
outs
xor
call
ret
shl
sbb
test
sub
xor
inc
lss
dec
in
adc
mov
aad
ret
rol
add
mov
xor
sar
leave
pusha
cdq
sbb
sub
push
mov
outs
push
jns
lea
cmp
push
sbb
lds
adc
jbe
gs
ror
ror
lods
in
and
std
push
sub
outs
ret
jl
or
push
out
pop
shl
inc
mov
mov
fadd
or
or
(bad)
ins
xor
loope
push
imul
inc
pop
in
lods
pop
dec
mov
stos
aas
dec
dec
ret
outs
(bad)
out
and
in
out
bswap
mov
mov
xor
push
push
test
andnps
les
xor
pop
jbe
cld
pop
dec
cli
dec
sub
sahf
lock
ja
mov
in
es
ds
cmp
fidivr
pop
push
adc
pop
shl
ins
dec
xchg
lods
add
push
inc
icebp
xchg
push
xor
popa
mov
in
sub
ficom
pop
scas
loop
inc
stos
inc
xor
int
shl
cld
sub
jge
inc
cmp
stos
sbb
adc
jo
add
jne
fstp
xor
out
retf
push
sub
jne
or
out
xchg
push
xchg
sbb
jbe
stos
sar
into
mov
mov
and
hlt
or
ret
popf
fwait
fwait
mov
add
leave
sar
sub
mov
int
cmp
cmp
imul
push
xchg
jb
xchg
shr
adc
mov
repnz
inc
das
ins
rcr
neg
jnp
adc
adc
mov
lea
frstor
push
add
push
cld
out
cmc
pop
xchg
outs
js
jns
jmp
cmp
and
jne
adc
push
mov
hlt
movs
in
dec
jge
out
(bad)
loope
add
jge
retf
sub
mov
pop
jo
and
mov
test
or
mov
xor
xchg
sar
cmps
and
add
mov
fidivr
loopne
(bad)
xchg
imul
lea
jne
mov
jmp
add
(bad)
adc
pop
jnp
pop
adc
js
pop
call
mov
add
dec
dec
ja
pop
gs
test
fistp
jns
mov
push
and
lahf
cmp
or
jl
cwde
loopne
xchg
pop
and
mov
mov
cmps
fdiv
dec
fimul
(bad)
ret
inc
inc
mov
aas
xor
lods
ins
xlat
enter
push
mov
jl
leave
sbb
movs
adc
cwde
mov
out
inc
sub
pop
push
lds
mov
retf
iret
(bad)
sbb
cld
mov
sbb
bnd
imul
cli
aad
test
pop
pop
sbb
mov
pop
(bad)
(bad)
clc
mov
int
inc
or
outs
and
mov
enter
fcom
cmps
sar
je
retf
shl
ret
or
mov
repnz
or
sbb
imul
cmp
xchg
push
mov
sub
jmp
mov
mov
adc
enter
in
add
lea
add
push
(bad)
mov
mov
cmp
imul
jnp
add
dec
lahf
fsubr
ret
repnz
dec
mov
pop
outs
stc
mov
cmp
pop
add
test
outs
(bad)
xchg
movs
movs
xchg
jae
popf
cmps
inc
jne
sbb
mov
mov
push
jae
adc
fisttp
sbb
jbe
clc
(bad)
mov
ret
lahf
addr16
retf
loop
daa
adc
mov
bound
jmp
mov
sub
ins
xor
cmp
sub
mov
out
xlat
mov
pop
push
lahf
push
mov
sbb
lods
mov
stos
out
js
pusha
stc
dec
(bad)
lock
dec
jns
call
pop
in
cdq
mov
dec
das
fwait
or
scas
(bad)
adc
ds
ins
sbb
push
popa
aaa
aas
mov
call
mov
xlat
add
in
cmps
xor
inc
int3
repnz
push
pop
ja
aaa
outs
imul
jp
jmp
test
inc
in
and
push
and
out
pusha
sub
fsubr
pop
outs
mov
loope
xchg
xor
ret
pop
cwde
pop
fimul
push
aam
push
mov
movs
cmp
adc
imul
in
test
pop
jns
sbb
jmp
and
aad
inc
test
add
inc
mov
adc
add
jmp
xlat
mov
js
mov
mov
fs
arpl
cmp
push
jo
gs
cld
push
xor
dec
jbe
jle
mov
xchg
les
cmp
cmp
out
add
sbb
fs
xor
push
adc
sbb
dec
add
idiv
mov
mov
inc
sbb
ja
call
(bad)
xchg
pop
shl
inc
add
inc
scas
mov
pushf
adc
neg
jp
mov
jge
into
or
adc
cwde
pop
jmp
push
mov
jg
pop
push
push
inc
and
adc
js
fisub
test
pop
push
jge
imul
jl
inc
pop
mov
icebp
cld
xor
mov
or
adc
and
pop
shr
or
adc
pop
push
lock
and
out
test
or
movs
ret
aad
xchg
out
and
adc
mov
sbb
out
add
popa
call
push
jmp
jecxz
outs
cmp
add
pop
cmp
pop
scas
and
jge
push
xchg
loope
fld
cs
daa
test
cmp
popf
dec
sar
les
jb
xor
pop
cmp
cli
inc
push
mov
lods
and
lea
cmc
retf
test
mov
dec
dec
xchg
push
pop
or
mov
jmp
je
fisubr
dec
jnp
mov
pushf
xor
nop
movs
mov
arpl
cli
inc
add
mov
and
sbb
iret
fist
sbb
and
cdq
int3
ins
xor
xchg
sub
scas
(bad)
sbb
or
pop
push
pop
adc
int
cld
push
int
xor
lods
(bad)
jle
mov
mov
lea
mov
arpl
mov
pop
sbb
loop
into
xor
fisub
jl
bound
pop
jl
mov
cmp
mov
and
jne
ret
inc
pop
add
jmp
and
cdq
push
dec
inc
ret
push
div
sbb
push
scas
(bad)
jbe
and
xor
inc
mov
jbe
in
fistp
dec
or
mov
icebp
push
inc
les
sbb
or
outs
mov
lahf
xchg
sbb
adc
dec
test
inc
shr
add
dec
mov
push
cmp
imul
test
inc
jns
fsub
jp
adc
into
cmps
arpl
loopne
je
pmaddwd
cmp
inc
(bad)
dec
or
dec
imul
lods
pop
push
xor
int3
jno
jle
fcmovne
dec
jno
sbb
mov
xchg
jnp
mov
pop
dec
push
mov
jno
xchg
movs
call
pushf
out
int
retf
jno
mov
pusha
jle
inc
fwait
jno
lods
addr16
push
sbb
xchg
addr16
lods
fstp
push
int
(bad)
push
xor
or
xchg
outs
loopne
int3
inc
(bad)
or
sti
pop
aaa
pushf
clc
adc
xor
cmps
xchg
ret
faddp
cmp
daa
test
shr
pop
test
jmp
cmp
mov
xlat
out
jg
into
add
and
sbb
xchg
repz
mov
inc
sub
cmp
cmp
xor
js
and
(bad)
int3
stc
or
pop
push
mov
in
imul
pop
int3
repz
or
cmp
jl
push
out
aas
dec
jno
es
xchg
adc
ja
sub
pop
jae
xlat
sub
test
loope
fistp
mul
ja
mov
movs
inc
inc
in
shl
inc
jg
push
call
fist
mov
out
adc
pop
xor
mov
sub
jmp
xchg
cmp
ja
sbb
mov
in
push
not
mov
jne
arpl
test
nop
jo
aaa
jge
cmc
mov
and
xchg
imul
push
dec
mov
test
pushf
loopne
mov
adc
mov
dec
fnstsw
ja
xchg
(bad)
mov
es
jmp
dec
out
push
sbb
call
add
bound
jmp
aad
push
sbb
scas
or
call
out
int3
cdq
mov
xchg
fisub
or
cmps
sar
sub
hlt
cmps
aad
adc
retf
mov
lea
add
call
cli
cmp
pop
in
js
pop
inc
cld
adc
pop
in
not
sub
mov
pop
fistp
jmp
xor
std
jge
or
pop
and
adc
sbb
and
add
aad
adc
aam
mov
and
fist
mov
fdiv
test
pop
push
rol
dec
mov
test
outs
stos
aas
pinsrw
pop
fisub
jo
rcl
sbb
das
sbb
imul
loopne
mov
push
enter
or
and
and
popf
fs
stos
cmp
push
sbb
mov
es
mov
arpl
cmp
ret
sub
mov
push
cmp
scas
sbb
cmp
adc
adc
fist
scas
sbb
mov
jbe
mov
xchg
movs
cmp
pop
pmuludq
out
mov
inc
mov
pop
imul
sbb
fldcw
push
call
cmps
retf
cdq
fwait
dec
fmul
xlat
clc
cmp
mov
icebp
push
cmps
int3
jbe
imul
idiv
cmp
jne
ret
or
xor
mov
js
jmp
push
pop
pop
rol
(bad)
in
cmps
in
pop
div
repz
lock
leave
es
push
pop
jb
imul
mov
and
(bad)
cs
mov
cwde
loopne
out
mov
(bad)
(bad)
fld
mov
scas
test
inc
inc
inc
pop
xor
cmc
cli
movs
jmp
(bad)
cmp
push
jnp
adc
out
push
adc
test
out
cmp
xchg
cli
bound
shl
mov
enter
rol
jns
dec
nop
les
ja
movs
and
xor
jo
push
inc
xor
out
jp
call
and
inc
push
pop
xchg
xor
mov
mov
inc
pop
into
xlat
cmp
retf
(bad)
and
test
mov
adc
aam
popa
sub
shl
mov
lods
jmp
fcom
and
cmps
rcl
repz
not
mov
xor
lods
inc
(bad)
fiadd
leave
sti
in
stos
jge
ja
cs
jb
scas
out
mov
or
shr
leave
clc
push
adc
mov
jp
call
sbb
(bad)
bound
sub
daa
xor
out
inc
test
jmp
rol
stc
sbb
cli
int
jmp
data16
jo
dec
int
mov
scas
shl
iret
xor
xor
scas
dec
call
push
idiv
dec
loope
retf
cmp
push
jmp
aad
mov
pop
sub
outs
xor
sub
popa
fs
rcr
inc
sbb
mov
jmp
push
cmc
inc
sbb
mov
js
sub
cld
jns
mov
and
jbe
dec
mov
jae
adc
and
gs
stc
push
push
(bad)
js
or
movs
cs
data16
neg
mov
std
ss
mov
fnstenv
adc
int
stos
ss
mov
stos
xor
inc
cmp
push
ret
jno
xchg
xor
leave
loop
and
popa
lods
dec
dec
inc
in
iret
push
push
cmc
sub
int
mov
dec
test
or
fbstp
lahf
inc
fsub
mov
pop
and
jnp
pop
jmp
retf
xchg
push
mov
outs
mov
pop
ret
(bad)
repz
jp
dec
jns
cmp
gs
lods
mov
dec
adc
inc
pop
jmp
jo
add
add
lods
push
ja
in
sbb
cmp
jbe
cmp
fwait
cmp
ret
test
retf
and
inc
dec
dec
lock
ret
mov
cmp
data16
push
ja
mov
mov
or
retf
loope
lock
dec
leave
icebp
cmp
daa
dec
inc
cli
imul
sbb
sub
adc
test
pop
or
xchg
out
fbld
test
daa
sub
daa
mov
pop
pop
out
dec
mov
pop
mov
icebp
add
aaa
int
ins
imul
das
adc
(bad)
dec
in
loop
cwde
data16
enter
in
popf
cmp
daa
ins
ret
cmc
add
loope
ret
cmp
in
test
jb
div
xchg
leave
pushf
mov
repnz
enter
xor
std
fwait
aas
mov
cmp
mov
fmulp
jno
nop
or
mov
retf
sbb
push
xchg
xor
std
push
pop
fs
(bad)
scas
pop
jb
ss
mov
xor
(bad)
pop
and
inc
scas
stos
adc
test
(bad)
into
sub
out
pop
imul
ss
in
popf
pop
ins
adc
test
jmp
retf
stos
repz
repnz
out
xchg
test
dec
jg
ins
push
fnstsw
repz
fsubr
sbb
sbb
jmp
popa
test
sub
bnd
or
test
jp
push
jmp
cmp
pop
jge
mov
out
sbb
imul
test
hlt
or
(bad)
add
xor
mov
pushf
out
and
pop
and
arpl
sar
aaa
mov
xchg
shl
xor
dec
leave
sub
sub
ret
xlat
out
icebp
les
sar
push
into
lods
dec
xor
jl
neg
test
xchg
jp
call
jns
dec
add
adc
cmp
(bad)
(bad)
cmps
lods
xor
dec
and
mov
shr
pop
ins
sti
aas
inc
pop
pop
(bad)
cmps
movs
retf
pop
jge
js
pop
mov
js
test
out
pop
pop
or
push
in
cmp
mov
lods
mov
sub
bound
push
mov
inc
mov
dec
pcmpeqd
adc
add
cmc
stos
sahf
pushf
(bad)
stc
lods
ins
xor
cwde
sti
fisub
xchg
addr16
ja
push
cmp
fmul
aad
jle
jmp
(bad)
(bad)
push
mov
loopne
stc
(bad)
mov
mov
push
(bad)
jle
adc
xchg
jo
daa
lahf
xor
loope
cli
pop
call
xchg
xchg
jne
in
js
xor
(bad)
cmp
jmp
mov
fmulp
adc
jmp
fdivr
fwait
cld
jg
imul
xlat
pop
into
loopne
es
push
mov
pop
sub
mov
push
jno
sti
call
jnp
sub
jo
dec
out
movs
sbb
sbb
clc
cmp
retf
popa
loope
xchg
xchg
lea
xchg
mov
std
das
stos
mov
cmp
inc
xor
test
ret
out
aas
mov
in
mov
and
pusha
mov
in
pop
arpl
daa
les
rcl
xchg
fs
sbb
addr16
or
sbb
xlat
pop
xor
daa
xor
mov
mov
xor
add
ret
loop
arpl
cmp
push
mov
imul
ret
addr16
cmc
or
ins
adc
aam
inc
idiv
stos
dec
adc
test
xchg
mov
mov
jecxz
cmp
test
jb
repnz
push
inc
jecxz
push
push
in
popf
cmp
lea
hlt
jp
mov
pushf
aaa
inc
out
jns
(bad)
test
xchg
aaa
mov
pop
pop
inc
stc
add
cmp
and
mov
push
mov
dec
mov
test
movs
jecxz
sbb
test
fidivr
jb
dec
mov
(bad)
imul
in
stos
ficomp
jge
popa
and
inc
push
push
xchg
adc
aaa
jmp
repnz
pop
loop
lods
inc
fild
lock
xchg
cmp
popf
adc
in
nop
dec
sbb
pop
jmp
xchg
dec
loopne
popa
jbe
cmp
scas
jg
dec
lods
fadd
adc
mov
lock
add
pushf
(bad)
retf
adc
lock
out
lods
xor
addr16
jbe
mov
inc
dec
rcr
aaa
inc
and
xchg
push
aad
scas
lea
jo
out
dec
mov
sub
shl
push
jecxz
xchg
mov
mov
mov
lds
les
push
add
in
aam
xlat
pop
es
leave
sahf
cmp
rcl
leave
add
ins
pop
adc
sub
pop
add
ret
cmp
sbb
aad
cld
shl
retf
sub
outs
cmps
pop
inc
repnz
mov
sub
jb
fcom
aad
push
cs
ficomp
xchg
call
into
xor
sbb
out
in
pusha
arpl
mov
jg
mov
sub
jno
or
(bad)
fs
retf
clc
mov
pusha
mov
jl
push
aad
fcomp
je
lods
cmc
xchg
jbe
cmp
push
pop
sbb
pop
xchg
mov
pushf
or
(bad)
iret
jnp
cmp
aam
jnp
sub
xlat
adc
mov
ds
xchg
inc
and
sub
sbb
sub
(bad)
in
aam
sub
in
out
sahf
xchg
popa
cwde
(bad)
loop
shr
dec
add
dec
movs
movs
pop
nop
loopne
fisttp
cmc
sti
imul
mov
pusha
xor
arpl
rol
rol
xchg
pop
add
or
leave
lock
inc
stc
or
or
or
bound
cmp
(bad)
push
aad
jnp
into
ret
jmp
mov
lds
adc
sbb
push
xor
cmp
int3
mov
sti
ins
out
jmp
adc
or
push
lea
pop
push
movntq
cmc
mov
lods
inc
mov
mov
popf
bound
daa
scas
xchg
(bad)
mov
call
add
mov
jbe
inc
hlt
and
sahf
xor
xchg
xchg
jp
int
jno
or
mov
popa
pop
into
mov
cmp
fsubr
xchg
call
pop
dec
test
shl
in
icebp
pop
mov
mov
into
rol
mov
or
xchg
popa
cmp
and
push
jae
push
push
xchg
mov
and
movlps
xor
add
jge
or
push
dec
mov
retf
inc
leave
push
inc
inc
jne
leave
and
jg
data16
mov
aam
(bad)
int3
sub
je
sub
xor
dec
popf
in
sbb
mov
add
ins
sub
test
xor
pop
sub
retf
jb
jb
push
push
mov
aaa
mov
neg
cwde
xchg
test
fcomp
adc
mov
ds
mov
call
and
mov
lahf
pop
movs
xor
cmp
nop
push
stos
jbe
inc
add
setl
popf
sub
push
lods
std
push
jmp
mov
je
test
pop
dec
cmp
fsubr
mov
out
mov
ins
xor
ror
loope
add
and
xchg
(bad)
xchg
add
nop
call
mov
popf
cmp
jb
and
or
fldcw
lahf
mov
dec
call
fistp
cmp
pop
sbb
sbb
aaa
psubsw
mov
sbb
jns
pop
push
or
call
cmps
mov
add
(bad)
cmps
sbb
in
mov
sbb
in
ds
jg
leave
dec
mov
mov
fbld
nop
jmp
retf
(bad)
movs
push
pop
mov
mov
add
cmp
pop
ret
js
cmovge
sti
and
dec
movs
test
ret
pop
add
dec
out
push
cmp
(bad)
dec
mov
add
mov
jne
pop
or
frstor
cmp
jb
push
cmp
sar
mov
fst
test
out
cmp
sub
retf
dec
push
or
xchg
add
imul
xor
stc
push
dec
ins
jp
cmp
pop
repz
or
sbb
push
push
dec
add
pop
outs
jo
and
mov
sub
cmp
pop
dec
jmp
push
test
add
or
hlt
(bad)
les
inc
xchg
jbe
jmp
jmp
cdq
in
push
push
(bad)
xor
sbb
sbb
pop
mov
inc
fnstsw
xchg
jecxz
stos
push
and
pop
inc
sub
ins
test
es
push
rcr
mov
xchg
das
sbb
jl
xchg
inc
mov
shl
test
ins
jmp
or
dec
sub
sub
mov
push
mov
inc
xor
lea
cld
dec
ss
into
movntq
leave
rol
scas
dec
test
ret
mov
jo
(bad)
adc
nop
pop
stos
aas
test
aaa
mov
pop
fldcw
sbb
or
push
aas
cmp
loopne
sub
(bad)
mov
lods
(bad)
mov
or
and
sahf
mov
iret
out
fst
push
jb
in
inc
inc
sahf
mov
xchg
lahf
cmps
cmps
in
out
adc
sar
repz
sub
arpl
jns
xchg
fdiv
in
lahf
sub
xchg
repz
in
adc
and
sub
pop
out
sub
(bad)
js
or
fld
or
gs
bound
cmp
bound
clc
neg
pop
jbe
xchg
enter
jnp
pop
fdivr
call
test
sbb
les
jne
cmp
mov
rcr
jmp
out
and
pop
push
(bad)
mov
inc
adc
ret
pop
clc
and
push
xchg
jns
mov
lahf
or
add
cmp
jle
sbb
xor
pop
mov
sbb
cmps
jmp
imul
movs
mov
scas
xor
repnz
rep
imul
pop
and
or
xor
ds
jo
or
sub
fs
push
aaa
fcom
push
pop
mov
dec
in
add
(bad)
lock
(bad)
lods
pop
xor
loop
xor
cmps
dec
mov
xchg
jle
(bad)
rcr
inc
xor
outs
out
in
nop
cs
lea
jo
addr16
pop
ja
inc
or
shl
test
add
out
ss
add
(bad)
pop
push
xchg
lods
dec
nop
mov
push
not
sbb
test
cmps
xchg
push
xchg
jle
cmp
inc
cmp
adc
xor
add
sbb
sbb
std
or
inc
adc
fdiv
lods
sbb
sub
ss
arpl
nop
mov
mov
dec
jno
adc
pop
(bad)
ror
out
outs
pop
test
cs
xor
in
mov
outs
dec
(bad)
jle
enter
int
out
jno
(bad)
scas
inc
mov
xlat
mov
add
pop
mov
mov
ficom
dec
jl
pop
mov
mov
stos
mov
icebp
rcl
push
push
mov
ins
xchg
add
vpmaxsw
sar
ret
pop
adc
and
pusha
jne
sub
push
jbe
xchg
leave
(bad)
call
ins
int
jle
inc
arpl
mov
xchg
inc
mov
xor
inc
int3
call
in
mov
mov
pusha
rcr
not
ret
dec
aas
sbb
por
out
inc
jmp
popf
push
loop
outs
xor
loop
not
leave
outs
test
retf
mov
ror
jp
outs
in
ss
mov
(bad)
frstor
push
sar
push
cs
pusha
fwait
add
cld
jg
push
fsubr
pop
push
mov
adc
sub
in
shl
mov
imul
(bad)
inc
(bad)
xchg
ins
push
shl
pop
add
pop
pushf
add
fisttp
mov
push
or
cs
cmps
cld
stc
test
xlat
jne
sbb
jmp
test
test
fnstenv
retf
pop
xchg
jle
imul
int
dec
mov
imul
mov
cmc
push
pop
mov
les
test
sbb
sbb
push
(bad)
xor
movs
shr
(bad)
je
pop
sub
mov
mov
loop
ficomp
cld
(bad)
sub
frstor
daa
mov
dec
std
mov
lods
pop
gs
in
and
adc
stc
addr16
mov
xor
fldenv
pop
ret
pop
or
and
push
jno
data16
shl
and
push
fst
ins
and
popf
dec
aas
clc
push
xchg
hlt
jge
les
popa
inc
das
cmp
dec
shl
inc
jae
rcl
xlat
ret
fld
xor
pop
push
sub
fdivr
push
cld
xchg
pop
cmps
out
(bad)
mov
pop
stos
out
mov
lahf
mov
imul
xchg
scas
mov
add
push
sbb
nop
xchg
ins
je
repz
mov
inc
gs
push
jp
shl
out
pop
xor
xchg
cmp
push
imul
sub
imul
fs
and
jg
mov
adc
adc
mov
jb
faddp
mov
cwde
sbb
dec
out
xchg
mov
ficom
mov
xchg
sbb
dec
bound
call
cmp
cmp
and
imul
shr
data16
mov
stos
shl
sub
xchg
cmps
mov
mov
mov
mov
adc
sub
sub
jmp
mov
fnsave
idiv
adc
jecxz
in
lock
xor
mov
dec
dec
mov
out
neg
out
adc
cmp
add
mov
les
je
sbb
jge
movs
push
and
push
push
jecxz
inc
push
cmp
push
pop
xchg
stos
or
mov
inc
mov
cmp
lods
push
add
dec
push
inc
movs
push
int3
push
add
or
clc
dec
sub
xchg
adc
inc
leave
mov
inc
add
idiv
push
out
dec
jecxz
pop
mov
sub
jg
inc
jge
pop
loop
jge
pop
mov
call
test
push
es
stos
jne
or
adc
mov
sbb
mov
dec
outs
push
mov
sub
dec
je
loopne
jae
jbe
mov
es
imul
(bad)
or
pop
jo
inc
aaa
maskmovq
mov
xchg
mov
mov
pop
scas
popf
mov
aas
fisub
pop
cmp
cmps
nop
ret
and
or
popa
sbb
cs
in
or
add
push
cli
push
mov
pop
std
push
arpl
outs
int
sub
sub
mov
cld
sti
bound
(bad)
add
or
sbb
stos
xor
sbb
into
xchg
jge
inc
iret
pusha
xlat
arpl
(bad)
ins
iret
lods
enter
aam
fisubr
and
inc
jle
iret
adc
fwait
(bad)
pop
sub
test
push
pop
shl
push
mov
test
or
ret
ss
gs
xchg
imul
sbb
loop
add
pop
sub
popa
leave
cmps
loopne
dec
mov
pop
or
xor
dec
cmps
gs
mov
dec
in
push
mov
(bad)
jge
popf
dec
sbb
js
sar
xchg
arpl
xor
fwait
push
movs
xchg
fcmovne
cmc
lea
xchg
dec
cmc
stc
ins
jbe
clc
std
in
mov
pop
cld
retf
loop
or
inc
mov
je
aas
mov
pushf
fdivr
xor
gs
sub
ja
push
loopne
nop
push
mov
sbb
rcl
loop
add
int
jl
(bad)
hlt
pop
mov
scas
inc
outs
xchg
ret
push
cmp
pop
shl
add
ja
jmp
mov
adc
jmp
dec
xchg
(bad)
fsub
and
xchg
and
pop
push
inc
jl
nop
cmp
xchg
pop
call
xor
ins
sbb
mov
rcr
jbe
mov
imul
test
xchg
push
or
jecxz
jmp
mov
lahf
(bad)
outs
ret
dec
test
mov
xor
fbstp
sub
in
sbb
movs
ds
out
mov
std
cmc
sub
mov
js
lods
sub
inc
retf
dec
jge
push
aas
cmp
and
pop
add
dec
inc
cmps
add
mov
in
jbe
test
xchg
xlat
call
iret
sahf
outs
(bad)
xor
fbld
xor
sti
mov
sub
sub
add
mov
adc
fidiv
cwde
int3
xor
mov
mov
mov
mov
aam
mov
pushf
imul
or
xchg
std
jo
lods
inc
retf
fs
jne
cmp
sbb
pop
fcmovne
xor
out
xor
jnp
xlat
mov
xchg
mov
sub
add
(bad)
pop
dec
enter
std
xchg
mov
and
pushf
add
mov
jbe
shr
or
sbb
imul
sar
int
call
mul
cs
cmp
pop
gs
xchg
fld
mov
rol
inc
ds
jo
jnp
xchg
ret
jae
loope
jnp
(bad)
test
cmp
adc
leave
push
mov
jne
xor
pop
xor
arpl
fnstenv
cs
imul
int3
mov
dec
jecxz
inc
lods
push
sbb
sar
pop
adc
daa
xor
daa
mov
inc
xor
push
cs
xchg
int3
xchg
outs
dec
clc
jno
repz
mov
scas
mov
retf
(bad)
cld
jmp
icebp
push
retf
or
or
inc
sbb
adc
(bad)
aad
mov
add
add
and
out
mov
mov
sub
xchg
xor
mov
ins
add
lock
ins
rcr
shl
ret
jg
jecxz
aam
xchg
adc
ss
inc
pop
arpl
xchg
mov
jb
scas
cmp
in
jo
sub
adc
xor
jp
clc
rcl
xor
aaa
mov
jecxz
(bad)
sub
popf
test
(bad)
add
sub
mov
jno
inc
jmp
or
lock
xor
leave
inc
jnp
sub
fdivr
sub
retf
xchg
mov
mov
xchg
dec
cwde
test
sbb
xchg
xor
cs
xchg
add
push
sbb
inc
xlat
jbe
loopne
pop
shl
aas
lods
mov
adc
loop
outs
xor
enter
icebp
les
lods
cmp
popf
movs
jl
out
retf
in
adc
and
popf
clc
push
inc
push
enter
imul
mov
iret
xchg
sbb
add
pop
pusha
xor
and
push
es
adc
popf
xor
xchg
mov
push
dec
iret
inc
xlat
call
test
out
jge
scas
jnp
pop
ja
mov
stos
push
stos
movs
arpl
retf
lods
mov
sub
or
xor
mov
jbe
jb
lds
inc
in
push
add
and
pop
pop
gs
outs
jnp
(bad)
test
sbb
add
scas
call
popa
cmp
loopne
cli
push
xor
adc
in
mov
jns
mov
out
pop
push
cld
ror
sar
(bad)
mov
jae
pusha
xor
mov
pop
push
push
push
or
inc
mov
and
xor
arpl
xor
xor
movs
(bad)
ret
sbb
jp
push
xor
(bad)
mov
add
jl
pop
jnp
es
lahf
add
mov
jae
out
xlat
jge
movs
mov
stc
push
int3
sub
dec
sbb
aad
xchg
dec
out
imul
retf
outs
into
push
gs
mov
push
jge
in
mov
mov
sub
xor
stos
into
fcomp
retf
dec
sbb
jns
aas
es
(bad)
loop
dec
adc
daa
and
or
mov
and
xor
pop
or
adc
fs
fldcw
xchg
cwde
(bad)
sbb
mov
mov
enter
ret
aad
(bad)
cmp
ins
aaa
xor
mov
sbb
pop
popf
popa
es
stos
sub
jle
loope
cmp
out
jmp
leave
int
mov
mov
jnp
ins
(bad)
xchg
shr
or
mov
ror
fidivr
cmp
mov
dec
jecxz
test
mov
mov
ret
fiadd
ret
sub
inc
xor
dec
adc
(bad)
sahf
mov
add
push
xchg
div
mov
imul
or
ins
dec
jno
int
and
sbb
add
mov
cdq
and
(bad)
fldcw
mov
xor
call
sbb
lds
(bad)
iret
shr
(bad)
fcom
dec
pop
enter
push
out
rol
lods
adc
out
cmp
pop
cmp
dec
sub
xlat
mov
mov
sbb
arpl
inc
adc
and
add
mov
(bad)
xor
fldcw
or
inc
jne
popa
gs
fucomip
pop
aam
mov
or
ins
inc
jbe
sbb
aas
aam
ins
jb
and
push
stc
pop
adc
in
dec
and
ins
push
aaa
push
lods
std
dec
inc
(bad)
ds
jl
push
cli
xor
rol
out
dec
jne
test
je
mov
shl
mov
icebp
cmp
push
daa
rcl
or
dec
cmp
xor
adc
repnz
int3
xor
int
jb
stc
mov
leave
jg
int
(bad)
push
daa
call
push
mov
xor
fiadd
les
jb
lahf
push
imul
out
jns
pop
push
imul
xchg
daa
jbe
jo
push
pop
int3
in
sar
pop
stc
inc
(bad)
jp
pop
cmp
in
sar
push
mov
lods
clc
inc
cld
or
push
pop
ja
mov
out
aas
and
repnz
inc
adc
outs
add
call
mov
shl
stc
fsub
inc
hlt
push
fnstcw
ins
popa
mov
sub
aaa
dec
mov
call
sbb
aaa
imul
into
shl
pop
or
jbe
jp
mov
scas
mov
push
or
dec
lea
test
cdq
xchg
int3
int3
inc
jge
and
sub
and
adc
fcomp
jne
pop
push
adc
or
aad
xor
mov
cli
outs
cmc
stos
dec
in
mov
jno
or
jge
lea
dec
shl
xor
mov
inc
push
dec
iret
and
xor
inc
pop
out
(bad)
aad
arpl
or
push
(bad)
push
inc
in
mov
dec
je
dec
push
add
(bad)
ret
addr16
add
clc
mov
fsubr
rol
loope
xlat
out
cwde
pop
and
and
sti
repnz
nop
loope
fisubr
dec
lds
clc
push
cmp
xchg
xchg
xlat
mov
cli
push
adc
inc
pop
sti
lds
inc
mov
fild
std
adc
jg
mov
pushf
movs
in
mov
(bad)
or
pusha
aas
inc
cmp
cmc
dec
stos
sbb
fucomi
push
ss
data16
mov
sbb
push
scas
dec
xchg
push
imul
sbb
int
ds
xor
icebp
movs
in
iret
or
cli
push
inc
(bad)
ficomp
jb
pushf
dec
jno
mov
add
in
shl
push
inc
dec
xor
scas
jb
jbe
push
push
adc
xchg
popf
or
mov
sbb
(bad)
adc
mov
in
nop
xor
js
inc
bound
ret
push
psllw
pop
sbb
test
iret
jno
in
push
jns
lods
jg
xchg
sti
scas
mov
out
mov
mov
and
repnz
mov
mov
test
xchg
or
sar
fdivr
push
jmp
fild
push
popa
pop
push
xlat
dec
call
xor
jge
(bad)
pop
ficomp
ins
leave
mov
mov
mov
mov
inc
sbb
mov
xor
pop
shl
pop
jmp
mov
daa
movs
adc
sub
mov
scas
or
aaa
xchg
repz
inc
add
pushf
das
lea
sub
xor
mov
cli
sub
fwait
div
mov
jns
sub
data16
or
mov
jl
(bad)
lock
clc
gs
fwait
pop
out
jle
jmp
and
cli
in
fs
push
fnstsw
cmps
leave
jmp
fsub
repnz
aam
xchg
fs
loopne
stc
add
loope
dec
xor
outs
mov
inc
mov
cmp
outs
mov
cli
mov
gs
out
cmp
(bad)
aas
out
(bad)
out
test
ret
andnps
mov
sbb
test
inc
outs
ss
push
and
mov
ror
and
in
lods
retf
xchg
push
adc
mov
out
outs
xor
xchg
les
inc
dec
lahf
or
xor
(bad)
ja
fadd
pop
cwde
dec
push
cmp
push
mov
in
int
mov
stos
adc
psubsw
aaa
repz
shl
sbb
push
bound
adc
jg
sub
dec
icebp
lock
fs
adc
pop
add
xchg
jmp
mov
mov
add
add
mov
repnz
jp
(bad)
jl
fs
adc
clc
dec
jge
xor
jmp
loop
(bad)
call
xchg
inc
xchg
push
push
or
(bad)
mov
inc
or
sub
aad
pop
mov
(bad)
mov
or
add
shr
xchg
cdq
sub
add
push
xchg
xchg
mov
lods
call
clc
scas
int3
into
ins
fistp
(bad)
jecxz
arpl
inc
jbe
and
jle
and
cwde
loopne
mov
mov
xchg
cmp
jecxz
cmp
mov
js
jo
xor
lods
pop
dec
jns
dec
dec
(bad)
cmc
mov
push
into
push
pop
cmp
test
jecxz
xchg
gs
push
ins
std
jmp
cmps
test
aam
and
xchg
xchg
and
int
loope
test
xchg
es
mov
lahf
mov
mov
aaa
in
mov
js
inc
je
(bad)
aaa
add
lods
fcom
push
ret
jo
push
mov
cmc
sahf
jmp
pop
and
ret
mov
scas
add
pop
cld
sar
cmp
mov
iret
cmp
mov
xor
inc
cmp
aad
jg
sbb
pop
mov
add
pop
and
dec
popa
xchg
add
repnz
popf
shr
mov
inc
int3
jno
repz
loope
stos
push
jmp
cmp
aam
fistp
inc
leave
cmp
xchg
push
fmul
mov
test
rcr
iret
cmp
les
movs
and
xchg
(bad)
sti
cmp
repz
mov
aam
push
mov
in
jb
mov
sti
jg
lods
cld
push
adc
cli
clc
jbe
jne
in
and
mov
shl
inc
out
imul
sub
shr
je
outs
ds
xchg
mov
icebp
int
adc
xchg
lea
mov
das
loope
mov
jne
jne
adc
lds
clc
movs
push
inc
sub
add
fwait
or
je
(bad)
cmps
xlat
mov
sar
mov
fld
int3
js
shl
sbb
movs
cmovo
scas
cdq
mov
or
push
out
lods
or
int3
or
fsub
cmp
ins
mov
jle
jp
hlt
movs
adc
sub
pop
cs
loop
jecxz
dec
cmps
es
push
inc
sbb
in
call
sub
and
xor
xchg
loope
fnstsw
inc
mov
mov
push
arpl
mov
in
xor
mov
cmp
mov
adc
gs
lods
fild
ss
cld
pusha
add
in
dec
xor
mov
push
sub
mov
das
retf
xchg
adc
push
or
aas
in
aam
cmp
test
aam
sub
data16
sub
cmp
fiadd
enter
xchg
pop
lahf
push
jb
clc
xor
and
sbb
cmp
(bad)
cmps
jge
push
btc
test
enter
mov
mov
int3
sub
ror
mov
sub
pushf
gs
(bad)
stc
xchg
mov
call
xchg
dec
or
imul
cmp
inc
mov
add
push
sahf
add
ds
iret
leave
sub
mov
mov
jbe
pop
sbb
ficom
popa
jp
in
loopne
xor
mov
cmc
stos
mov
rol
mov
push
loopne
and
jecxz
in
sub
or
ins
js
imul
push
call
push
out
cmp
out
mov
and
dec
push
jnp
pop
push
push
fiadd
pop
sub
mov
popf
dec
inc
ins
outs
(bad)
mov
xor
mov
cwde
push
pusha
push
ins
arpl
pop
int3
pushf
les
rcr
sti
mov
mov
outs
aam
into
js
pop
nop
in
jmp
or
add
mov
mov
rcr
inc
in
sbb
sbb
shr
outs
adc
cmps
mov
xlat
sbb
xor
test
xchg
inc
sahf
pop
add
fimul
in
jmp
or
rcr
mov
pop
out
ret
repnz
(bad)
and
pop
xchg
movs
mov
out
inc
pop
mov
push
jmp
fiadd
xor
xor
test
pop
push
adc
outs
scas
cs
jmp
adc
dec
jnp
imul
xchg
and
scas
imul
loopne
inc
stos
inc
adc
retf
daa
and
xchg
xchg
sbb
xchg
add
mov
out
sub
scas
daa
mov
pusha
cli
in
fst
mov
scas
cmp
push
pop
xor
outs
rep
faddp
jmp
xchg
sub
inc
scas
pop
inc
and
movs
push
inc
fidiv
loope
adc
(bad)
sbb
adc
int
data16
pop
push
test
das
imul
xchg
cmp
dec
out
adc
sti
adc
js
dec
fst
and
or
add
jae
inc
mov
cmps
adc
addr16
loopne
pop
clc
cld
lsl
out
mov
inc
jle
movs
xor
jb
not
test
add
pop
jb
fwait
(bad)
sahf
(bad)
in
out
sbb
cmps
out
jnp
cli
mov
repnz
mov
xchg
retf
sbb
mov
xchg
jbe
(bad)
inc
out
loopne
mov
and
dec
mov
fsub
test
xchg
mov
mov
cmp
mov
dec
std
sub
inc
addr16
push
pop
pop
mov
inc
and
jecxz
ds
sti
mov
inc
(bad)
imul
inc
add
gs
test
gs
cld
dec
cld
sahf
sahf
inc
das
sub
and
enter
mov
jmp
int3
xchg
popf
push
into
gs
lea
repnz
or
dec
std
sbb
mov
jae
mov
pop
or
lods
sbb
push
out
fsubr
lods
das
add
mov
les
ds
sahf
mov
mov
mov
hlt
leave
or
inc
sbb
pop
mov
jmp
sub
and
or
adc
ins
mov
mov
lds
push
out
lahf
popf
or
push
pusha
dec
and
imul
add
pop
xchg
enter
pop
jmp
fiadd
(bad)
lods
xchg
adc
adc
adc
jecxz
xchg
adc
dec
xor
sbb
push
das
adc
cmp
xchg
sbb
lahf
aaa
mov
ins
in
sbb
dec
dec
les
and
mov
cmp
mov
fdivr
inc
push
jae
adc
scas
adc
popa
xchg
movs
sub
pop
movs
xor
popf
xchg
leave
cmps
lods
shl
ficom
cwde
and
mov
or
xchg
push
js
xchg
jp
mov
test
push
jno
push
push
sub
(bad)
cmp
(bad)
iret
mov
retf
pop
stos
loope
adc
and
inc
add
inc
out
xchg
jae
or
popf
xchg
popa
and
test
(bad)
pop
sbb
into
ja
inc
push
sub
mov
gs
loope
adc
or
loop
inc
pop
(bad)
push
lods
jbe
movs
out
out
pop
mov
jp
in
cmp
inc
xchg
cmp
out
loope
test
cmp
test
inc
sti
out
jp
inc
push
xor
std
sbb
sahf
or
scas
and
mov
jae
xor
and
(bad)
loopne
imul
fistp
popa
scas
adc
mov
ins
int
mov
std
push
inc
and
inc
scas
xor
cwde
es
rcl
mov
mov
mov
push
mov
mov
xchg
(bad)
retf
inc
leave
cmp
jb
xchg
shl
aaa
das
ficom
sahf
movs
das
add
cli
mov
adc
mov
mov
push
inc
js
mov
std
inc
fsubrp
cli
dec
push
jo
dec
shr
dec
leave
sahf
jg
fstp
shr
leave
mov
xor
ins
ins
cs
pushf
dec
push
sar
jns
add
inc
pop
bound
sbb
adc
mov
ins
pop
and
hlt
mov
xchg
inc
mov
xor
dec
inc
add
ds
mov
stos
dec
popf
jle
loope
sub
mov
and
mov
mov
sub
push
push
dec
fwait
pop
xlat
imul
aaa
es
jno
dec
pop
and
aaa
mul
and
jp
sbb
xchg
sub
das
sub
out
inc
rcr
mov
fcom
test
mov
lods
ret
jbe
inc
and
inc
add
jge
mov
leave
add
movs
loope
lods
xchg
scas
sar
(bad)
inc
outs
aaa
loop
xor
fild
mov
or
loopne
clc
hlt
sti
adc
or
pop
jae
and
push
jnp
(bad)
test
pop
and
mov
mov
cmc
mov
mov
sub
movs
lds
movs
sbb
inc
lods
and
out
mov
sar
sbb
mov
dec
pop
js
test
call
jle
mov
and
adc
jmp
daa
xchg
and
pushf
inc
push
and
dec
(bad)
idiv
jne
jle
jo
xlat
xor
jo
jo
retf
fcomi
je
xlat
sbb
adc
out
jns
and
adc
fs
retf
test
and
adc
test
mov
ds
lods
outs
(bad)
mov
enter
pop
lea
mov
mov
inc
sahf
jo
add
outs
push
push
ret
mov
push
pop
mov
jmp
gs
dec
sbb
call
mov
daa
mov
mov
out
dec
repz
add
stos
dec
jae
iret
mov
mov
sbb
int
xchg
in
pop
fld
out
jns
inc
push
sub
mov
es
cmps
jne
aaa
cmp
daa
ds
push
mov
dec
aam
div
xlat
xchg
dec
imul
call
xor
dec
push
add
div
sub
xor
mov
loope
cmp
dec
push
or
addr16
mov
test
idiv
push
(bad)
mov
bound
adc
and
mov
mov
bound
pop
int
std
sbb
xchg
into
cmp
shl
mov
push
mov
repz
mov
lea
cli
and
shr
xor
add
xor
xchg
je
mov
dec
mov
retfw
dec
xchg
pop
pop
iret
imul
mov
sub
dec
pop
mov
adc
push
std
sbb
xchg
add
push
mov
pusha
mov
cmp
dec
ins
(bad)
aad
jmp
pusha
lea
loope
push
add
dec
push
cmp
cmc
xor
add
(bad)
push
add
aaa
mov
pop
dec
cs
pushf
cwde
push
mov
les
mov
adc
int3
adc
clc
push
adc
sbb
inc
jnp
movs
cmps
in
aad
cdq
xchg
ss
mov
test
sub
mov
cli
xchg
inc
fsub
inc
ss
es
xor
adc
dec
dec
vmwrite
jno
pop
sbb
cli
add
enter
push
push
adc
lahf
add
(bad)
fsubr
aaa
add
mov
xchg
mov
xor
dec
cmp
outs
xor
push
adc
movs
push
(bad)
popf
mov
jno
dec
xor
arpl
(bad)
mov
inc
es
lods
dec
jle
aaa
pop
and
push
fwait
les
std
xor
push
stos
pop
inc
in
stos
mov
cld
enter
leave
es
mov
add
retf
push
jns
mov
mov
fadd
cmps
fadd
sti
cs
mov
pop
cs
in
push
enter
cmc
mov
fbstp
and
pop
lods
leave
sub
and
mov
cmps
aam
ret
dec
fwait
xor
and
stos
repz
xchg
dec
dec
stos
addr16
add
adc
stc
(bad)
imul
fsubr
movs
ds
pusha
sub
aam
scas
or
xor
loope
mov
enter
lods
add
outs
add
das
cmp
xchg
shl
adc
movs
sub
push
jg
out
ror
pop
sbb
push
jmp
cld
ror
arpl
(bad)
mov
andps
imul
jns
sub
loopne
dec
in
jmp
inc
xor
ror
data16
pop
cmc
sbb
jmp
dec
mov
inc
xor
popf
cmp
jbe
or
aaa
iret
jmp
scas
and
lods
loop
out
int3
in
xor
jnp
xchg
adc
sub
ins
mov
pop
jle
pop
jmp
fadd
fld
jg
(bad)
fmul
lock
adc
mov
and
iret
fnstenv
les
(bad)
hlt
enter
out
in
bound
adc
stc
fisubr
mov
mov
aas
mov
in
xchg
fcmovne
sub
popa
and
mov
jmp
and
inc
inc
es
rol
mov
xor
(bad)
es
(bad)
pop
inc
call
cdq
xlat
xor
adc
lods
and
xor
push
cmp
dec
arpl
sbb
arpl
pop
mov
xor
ins
cmps
ror
movs
and
inc
and
jnp
pop
xor
test
cmps
push
(bad)
out
popf
mov
mov
cli
movs
test
icebp
outs
adc
xlat
jl
imul
adc
inc
or
repnz
lods
add
fadd
mov
pop
xchg
push
cmp
shl
xlat
sbb
outs
add
nop
mov
fwait
hlt
dec
jns
fsubr
in
inc
jns
push
and
repz
or
js
scas
adc
std
and
dec
out
out
jmp
jle
sub
daa
popf
js
jp
mov
sub
and
sti
imul
in
sub
rol
pop
sbb
out
loopne
push
scas
gs
std
pop
or
loop
lahf
adc
loop
out
retf
(bad)
into
mov
out
cmps
out
movs
xchg
(bad)
jp
adc
push
xor
popa
adc
sub
ins
js
sub
push
mov
out
sahf
cmp
enter
pop
sahf
hlt
jne
pop
repnz
inc
pop
sbb
mov
imul
xor
push
sub
imul
stc
das
cmp
repz
fistp
cmc
inc
jmp
shl
lock
ins
sbb
in
or
in
nop
movs
ret
leave
inc
xchg
fidiv
jbe
rcl
out
adc
or
sub
mov
lea
push
imul
movs
movs
cld
je
shl
add
ret
mov
movs
test
in
(bad)
lock
jae
or
adc
lods
push
hlt
call
nop
(bad)
in
inc
or
xor
pop
pop
ins
lods
xor
pop
hlt
sahf
cmovo
add
mov
fidiv
dec
cmp
shr
mov
out
push
gs
paddsw
sbb
fsubr
dec
popa
or
(bad)
fist
daa
int3
mov
xchg
jb
inc
sub
or
not
dec
es
jbe
dec
shr
dec
in
xchg
sbb
lock
out
jg
jbe
xlat
call
and
mov
mov
add
sbb
and
jb
inc
inc
and
lods
mov
std
cmp
(bad)
in
aaa
xchg
adc
fstp
and
mov
lock
sbb
jnp
cmp
(bad)
jo
pop
pop
cmp
mov
jge
std
stos
sub
fwait
cmps
mov
pushf
sbb
jecxz
cmp
cmc
popa
cmp
movs
retf
stos
adc
ins
adc
call
call
into
jno
add
popf
xor
xchg
mov
ds
push
adc
sub
dec
cld
mov
inc
gs
add
int
popf
aad
aas
ja
mov
mov
push
(bad)
popa
pushf
lock
fidivr
jg
jmp
mov
fwait
ss
imul
and
repnz
loop
div
mov
arpl
sbb
xor
mov
xor
pop
jg
sub
cmp
imul
sub
and
adc
test
and
xchg
push
call
pop
shl
pop
into
inc
mov
cli
call
xor
jnp
cmps
sbb
in
fsub
sbb
or
and
loop
dec
jg
cwde
sub
pushf
fbld
lods
and
push
call
pop
adc
shl
add
mov
rcl
jecxz
mov
dec
add
stos
sbb
or
sbb
push
jnp
push
(bad)
stc
fdiv
(bad)
push
sbb
loop
push
sbb
jl
add
push
dec
push
xchg
xchg
addr16
rcr
test
xchg
dec
pop
dec
lds
xor
dec
sub
dec
fwait
pop
jle
in
sbb
iret
sbb
(bad)
cld
ss
xor
pop
(bad)
ja
dec
popf
ret
aas
fst
xor
cmp
lea
test
popa
jl
xchg
push
add
mov
push
mov
loopne
mov
mov
enter
sar
retf
mov
add
popf
fs
jge
jne
stc
or
inc
cmp
sub
jmp
dec
gs
(bad)
(bad)
iret
test
sub
pop
sbb
cdq
out
or
lds
test
(bad)
sbb
push
jmp
call
fiadd
mov
pop
js
imul
mov
sub
fwait
std
inc
cdq
sub
(bad)
sbb
imul
xchg
(bad)
pop
mov
xor
push
enter
xchg
(bad)
pusha
xchg
retf
outs
int
add
fidiv
sbb
ret
xor
sub
or
out
sub
not
pop
mov
hlt
jg
cmp
cmp
lods
adc
jl
inc
retf
(bad)
add
inc
xor
cmp
iret
jbe
jge
mov
retf
into
inc
inc
lahf
mov
scas
retf
in
inc
nop
dec
sbb
mov
or
fcomip
pop
jne
mov
adc
fs
jg
jp
sub
jns
add
push
push
jb
lods
addr16
inc
inc
out
addr16
adc
jge
test
mov
ret
mov
cld
retf
aaa
cs
jnp
dec
xor
inc
ror
mov
(bad)
mov
and
loope
cmp
xlat
push
xor
sbb
aaa
lea
xor
loop
xchg
sub
loop
push
je
adc
(bad)
push
les
movs
add
outs
inc
imul
jmp
inc
iret
add
outs
pop
in
aam
aas
icebp
sub
retf
inc
sub
ja
mov
je
jnp
sbb
mov
and
inc
sub
cwde
xchg
dec
cmps
or
push
push
data16
rol
pop
ins
inc
out
and
xlat
into
test
add
mov
lea
cmc
jecxz
(bad)
(bad)
sahf
jno
mov
pop
loop
imul
bound
and
retf
and
(bad)
adc
loope
shl
push
aam
popf
push
imul
fcmovu
or
mov
jl
cmp
sub
mov
xor
gs
mov
push
ja
outs
mov
loop
repnz
mov
cmps
popa
call
push
ror
dec
jmp
(bad)
jmp
in
and
dec
push
aas
mov
dec
xchg
out
jmp
push
mov
inc
push
sub
loope
dec
xor
imul
ret
shl
test
mov
mov
xor
jmp
add
adc
pop
add
mov
out
sub
jnp
jnp
neg
jp
aad
xor
arpl
mov
scas
jne
xor
repnz
fdiv
sbb
fs
iret
gs
xchg
cmps
stos
cs
dec
mov
dec
pop
(bad)
stc
jae
pop
(bad)
cmp
ret
xchg
pop
mov
cmps
add
xchg
scas
mov
repnz
adc
popa
add
dec
ror
test
mov
outs
(bad)
jl
(bad)
cmp
or
mov
add
(bad)
adc
retf
pop
push
retf
push
scas
retf
lahf
dec
fld
inc
test
(bad)
cmp
adc
call
mov
call
xchg
and
mov
push
jecxz
lahf
vmovupd
add
inc
xchg
xor
loopne
dec
ins
test
jno
sub
or
jnp
xchg
sub
ins
lods
inc
dec
jg
mov
lds
pushf
sub
dec
push
retf
fistp
inc
lahf
sbb
ret
mov
(bad)
stos
(bad)
sub
or
cmp
mov
mov
xor
mov
pop
je
sbb
shr
repz
and
int
or
movs
pop
pusha
mov
inc
mov
or
sar
push
mov
adc
(bad)
mov
push
mov
jb
and
ins
and
sub
in
rcr
xchg
idiv
mov
mov
push
stos
sub
mov
mov
sahf
inc
(bad)
and
mov
and
mov
fdiv
dec
popf
adc
hlt
dec
xor
push
iret
jge
push
cmps
pop
das
jae
aad
push
aam
ror
or
(bad)
cmp
das
das
ins
and
xchg
cmp
hlt
jl
jp
cmps
cmp
es
out
(bad)
out
test
icebp
sub
jp
scas
stos
dec
fsub
test
sti
cmp
sbb
(bad)
xchg
pop
in
lock
punpckhbw
popf
add
xor
loopne
cmp
cmc
ret
stc
fsubp
loopne
push
adc
dec
retf
xchg
push
pop
stos
adc
movs
ror
sbb
scas
lods
fmulp
jmp
mov
bnd
cmp
xchg
movs
mov
in
loopne
or
cdq
(bad)
lea
or
xchg
and
lahf
jle
cmp
push
push
push
out
dec
loopne
sbb
xchg
pop
and
cmp
dec
imul
jb
stos
xor
pop
xor
loope
shr
pop
fist
mov
fsubr
cmp
test
and
cmp
sub
in
outs
aad
or
jge
and
push
add
shr
adc
mov
cmp
cwde
icebp
scas
xor
pop
je
daa
frstor
mov
jno
dec
out
xchg
dec
xchg
sahf
inc
mov
xchg
ret
add
add
xchg
cmc
dec
cs
or
mov
xchg
(bad)
stos
push
mov
div
mov
push
aas
nop
into
mov
push
setnp
xchg
pop
or
nop
retf
inc
push
pop
dec
aas
(bad)
inc
iret
cmps
cs
cmp
popa
push
leave
or
and
mov
inc
fcom
push
clc
clc
mov
arpl
outs
cld
scas
pop
xchg
into
mov
inc
loope
fidivr
dec
movs
add
outs
fmul
and
cmps
or
push
push
cli
jb
xchg
je
and
ror
aam
int
rcr
fwait
js
xchg
out
adc
imul
and
nop
bound
xor
fstp
shl
arpl
cli
mov
fwait
xchg
inc
cmp
xor
je
fld
xchg
dec
push
sub
fidivr
cmp
and
fidivr
int3
xor
jge
and
mov
dec
xchg
mov
test
push
mov
mov
mov
mov
sub
(bad)
jns
aad
ret
and
adc
popf
jg
ret
out
pop
test
jb
xchg
sub
jnp
cmp
ror
inc
dec
test
shl
pop
push
ins
mov
or
xor
pop
xor
cmp
(bad)
pop
cmp
pop
mov
mov
cmc
adc
mov
pop
mov
pop
fsubr
cmp
leave
push
adc
je
test
cmp
pop
push
rcr
push
enter
mov
jne
push
lea
mov
jnp
into
inc
xchg
xchg
sub
ret
mov
les
xor
rcl
imul
inc
xor
mov
int
test
jp
stos
int
rcl
fcom
in
in
pushf
rol
ret
test
loope
sub
inc
nop
fild
popf
retf
ins
pop
(bad)
jmp
(bad)
push
cmp
mov
daa
jecxz
push
rcr
std
fdivp
ins
mov
fnstsw
jae
push
xor
jp
cmp
push
stc
(bad)
frstor
inc
mov
fdivp
(bad)
jbe
loope
int
stos
test
call
cs
pop
retf
xchg
mov
sub
int
loopne
sub
fisubr
scas
lods
add
repnz
cmps
lods
neg
clc
mov
push
aaa
scas
cld
push
setno
mov
mov
retf
out
xchg
jnp
stos
cmp
aad
mul
cdq
dec
lea
and
or
sub
and
and
into
stos
xchg
ror
mov
mov
inc
xchg
dec
inc
es
jmp
dec
aad
xchg
cld
and
arpl
sbb
sub
imul
movs
cmps
out
shr
cmps
and
or
repnz
jg
std
dec
push
pop
mov
dec
jl
dec
push
mov
daa
xor
or
(bad)
jnp
or
xchg
xchg
jbe
call
push
add
pusha
jbe
mov
sbb
push
adc
push
ins
mov
xchg
and
mov
and
push
add
iret
and
cmp
mov
(bad)
inc
and
push
scas
mov
mov
ret
mov
push
pop
into
jmp
mov
cmp
inc
sub
or
ins
add
das
ret
mov
jg
pop
int3
push
mov
inc
push
sbb
test
jge
xor
push
mov
iret
xchg
test
inc
(bad)
fnstenv
popf
add
cs
(bad)
pop
push
push
mov
jne
dec
adc
das
shr
xlat
cmp
movs
mov
cmp
xor
(bad)
icebp
sub
and
xchg
mov
std
aaa
lds
sbb
adc
popf
adc
adc
cmp
retf
pop
xchg
(bad)
daa
ret
repnz
cdq
xchg
(bad)
fbld
inc
and
add
mov
int
bound
inc
repz
mov
mov
cmp
int3
pushf
out
add
xchg
sbb
inc
adc
bnd
jo
sbb
pop
mov
movzx
popa
adc
fidivr
or
add
jb
push
pop
mov
xor
or
out
push
outs
push
lea
dec
out
add
and
in
add
mov
push
push
pop
test
xchg
scas
push
mov
mov
retf
ret
int
adc
gs
fstp
movs
ret
or
xor
cld
pop
sub
popa
cmp
into
(bad)
(bad)
movs
lock
cmps
pop
gs
stc
or
int
jl
xor
mov
inc
jnp
inc
jge
cmp
les
dec
pop
add
test
pop
mov
sahf
out
fidiv
inc
stc
cs
push
jae
popa
mov
mov
movs
lahf
xchg
xchg
mov
pushf
inc
jecxz
cmps
fsub
pushf
out
fisub
enter
loope
into
fwait
inc
jg
inc
scas
addr16
sahf
mov
int3
mov
pop
es
lea
popa
or
jnp
setl
push
mov
ss
jle
xchg
fidiv
push
mov
ins
mov
jmp
popf
add
ins
add
in
jns
inc
add
sub
(bad)
(bad)
jge
les
lahf
les
out
dec
dec
test
int3
jle
sub
cmp
call
data16
sbb
xchg
xor
push
cmp
cwde
jnp
call
pop
or
sbb
xchg
and
popa
mov
fcomp
adc
mov
fwait
cmp
mov
jb
xor
jle
cmp
add
int
out
fs
inc
and
sbb
arpl
xchg
add
out
js
and
jmp
or
xchg
imul
jp
sbb
rol
enter
popa
cmp
cmps
push
xor
cmp
popf
adc
jmp
cwde
lods
lahf
push
div
out
mov
aad
das
in
rcl
add
fadd
frndint
sbb
mov
jge
mov
push
outs
sahf
pop
cmp
iret
and
add
data16
mov
inc
adc
retf
cmp
scas
sub
add
loop
gs
adc
fistp
adc
out
jg
shl
adc
popa
adc
cmp
inc
sar
adc
sub
jle
xchg
fsub
cdq
retf
sub
sbb
jp
pop
mov
(bad)
call
cmps
push
jns
jmp
xchg
loope
or
jno
shl
or
xchg
xor
into
fwait
sbb
jmp
adc
sbb
add
push
mov
push
jbe
sti
mov
dec
push
cmc
js
retf
out
pop
mov
push
xchg
es
or
sbb
test
push
outs
sub
inc
fisub
xlat
pop
sub
jle
cmc
pop
cli
jae
or
dec
inc
stc
fisttp
bound
mov
pop
iret
fwait
outs
pop
sbb
sbb
pop
(bad)
int
dec
clc
xchg
or
jl
cmps
popa
pop
call
mov
pop
push
dec
jecxz
cmp
add
sbb
pop
mov
retf
pop
lods
call
push
sub
pop
push
pushf
mov
and
or
xchg
jns
ret
aad
add
xchg
mov
or
stc
je
push
xchg
pop
pop
sti
movs
cmp
jnp
lds
cmps
xchg
add
retf
mov
ins
retf
in
dec
dec
js
pop
push
inc
add
scas
fdiv
jecxz
pusha
cmp
adc
dec
(bad)
xchg
jmp
jle
fnstcw
push
daa
push
push
pop
cmp
mov
inc
xchg
jae
xchg
cmc
pop
(bad)
and
and
sbb
jb
push
xor
xchg
jo
jmp
aad
(bad)
loop
fbld
cmp
sub
out
ins
adc
xor
add
gs
ret
test
cs
and
ja
(bad)
sti
sub
jmp
or
cdq
adc
movs
enter
pop
or
adc
rcl
out
imul
mov
or
sahf
data16
adc
dec
mov
cmp
pushf
popa
and
xchg
pop
int3
mov
push
scas
pop
popa
emms
ja
leave
jno
movs
(bad)
lds
dec
dec
ret
cmc
in
adc
sbb
inc
cmp
test
call
inc
pop
lock
ret
jno
arpl
mov
std
jle
aas
inc
jnp
xchg
scas
pop
and
ret
adc
add
cmc
jecxz
adc
xor
clc
sub
leave
mov
retf
sbb
jno
adc
xchg
ficomp
int3
or
lea
jae
inc
xor
push
ja
push
aad
jno
sbb
mov
loope
add
adc
jb
sbb
mov
sub
push
clc
std
dec
mov
int3
(bad)
xor
push
je
xor
icebp
sbb
sub
int
popa
pushf
rcr
aaa
lods
mov
icebp
push
paddusb
pop
in
icebp
fsubr
les
push
test
rcr
gs
pop
shl
sar
sub
ds
mov
xchg
push
adc
and
popf
jae
pop
pop
out
push
mov
xchg
out
xlat
mov
(bad)
mov
mov
nop
sub
and
out
out
pusha
sbb
mov
inc
shl
jns
iret
push
mov
std
pop
loop
fdiv
sub
in
jmp
jge
mov
adc
sar
pop
out
add
xor
test
add
mov
mov
iret
and
mov
inc
push
push
and
in
pcmpeqb
pop
xchg
inc
mov
pusha
or
test
mov
mov
push
or
das
xchg
mov
mov
jg
inc
lods
xchg
cmp
xchg
push
and
and
xchg
sti
or
(bad)
jmp
mov
jo
call
(bad)
cmp
mov
inc
mov
pop
movs
repz
pusha
push
adc
or
cmp
and
test
jp
int3
add
ja
push
mov
adc
sahf
ret
pop
popa
in
ficomp
(bad)
sub
out
cmp
inc
lods
mov
lahf
popf
sub
hlt
pop
aas
iret
dec
pushf
sahf
inc
xchg
adc
mov
sbb
iret
pop
lahf
and
push
jbe
shl
lock
jne
mov
adc
mov
loope
outs
sbb
cmp
jmp
add
push
out
push
ins
cmp
xchg
pushf
and
mov
cmp
xchg
push
add
pcmpeqw
stc
retf
call
mov
popf
pop
jo
adc
xor
jbe
retf
add
inc
loop
in
sub
xchg
add
and
call
cmp
in
adc
jno
sti
fwait
adc
ja
pop
cmp
push
out
dec
jmp
mov
popa
mov
pop
xor
add
jl
xchg
cwde
cmp
gs
dec
pop
dec
xchg
loope
idiv
jmp
les
or
jo
and
inc
inc
mov
popa
movs
inc
sahf
into
mov
gs
mov
push
in
inc
xor
mov
sti
mov
loope
mov
add
pop
call
push
enter
pop
mov
scas
ss
jecxz
inc
hlt
(bad)
aam
jl
inc
fwait
js
xchg
jg
std
cmp
and
or
jp
cld
jmp
test
pop
xchg
lahf
movs
xor
and
xchg
gs
nop
nop
int
or
pop
add
repnz
pop
shr
pushf
imul
adc
and
cmp
jns
sbb
stos
rol
mov
cmp
cmps
pop
mov
lea
cmp
outs
jne
xor
arpl
in
mov
das
retf
std
test
or
xchg
pusha
dec
jne
sbb
dec
push
push
test
or
loopne
je
call
sahf
pop
lea
test
out
and
push
pop
mov
push
ret
mov
jge
aas
inc
hlt
(bad)
stc
add
movs
mov
jmp
pop
xchg
les
and
mov
adc
or
sub
ins
pop
and
sbb
fnstcw
mov
hlt
adc
add
iret
mov
sbb
mov
ss
in
sti
add
mov
jnp
or
ret
aad
mov
mov
idiv
lea
pop
inc
ja
aad
xor
in
(bad)
imul
push
lods
outs
scas
inc
popw
dec
ja
call
ret
mov
sub
dec
adc
out
ret
adc
in
enter
sub
mov
mov
aas
xchg
sbb
daa
sub
int3
test
int
jb
add
aas
and
xlat
rcl
mov
data16
inc
(bad)
icebp
dec
mov
xchg
push
(bad)
mov
mov
push
jecxz
cmp
jno
cmp
not
lock
push
pop
stc
aas
pop
sti
cmp
nop
call
push
xor
inc
ss
xchg
fstp
enter
pop
out
fadd
xchg
xchg
in
sahf
xor
test
test
add
scas
push
push
xchg
mov
sub
pop
int3
push
push
and
nop
cld
xchg
or
dec
mov
pushf
dec
test
push
movs
xlat
pop
hlt
shl
adc
mov
jns
movs
sti
enter
mov
(bad)
mov
add
aaa
enter
je
shl
pop
or
xchg
fs
mov
arpl
in
dec
out
shl
outs
cs
(bad)
aam
fidivr
stc
js
fcomp
stos
enter
aad
sbb
mov
or
sti
leave
push
add
mov
(bad)
mov
movs
leave
xor
push
mov
jns
sbb
push
dec
mov
mov
mov
jle
xlat
xchg
aad
lds
add
sahf
jae
sub
pop
cli
sbb
popf
and
inc
jns
call
inc
pop
in
cmp
test
sbb
jns
cmc
in
dec
cli
fild
lods
mov
or
pop
shl
cmp
or
mov
fsubrp
mov
push
and
scas
add
xor
jg
xor
fmul
lods
xor
jns
mov
fld
nop
fidiv
fcmovnbe
inc
(bad)
mov
jb
sub
sbb
dec
lock
dec
inc
gs
js
push
mov
bound
into
jl
push
ins
aam
fimul
push
or
or
cmc
nop
or
js
fiadd
repnz
test
xchg
rcl
inc
push
imul
data16
mov
mov
dec
iret
ror
xchg
pushf
sub
cmp
or
fwait
mov
adc
jno
jmp
stc
dec
xor
mov
lods
iret
mov
mov
ins
js
nop
mov
mov
push
sbb
xchg
cdq
inc
inc
loopne
mov
shl
push
sub
xor
call
pusha
jecxz
dec
ficomp
add
jl
jmp
ret
fwait
bound
lea
xchg
mov
add
push
push
push
ja
mov
sbb
leave
pop
mov
xlat
retf
scas
data16
or
and
loopne
in
mov
jno
jg
lods
and
push
arpl
pop
fistp
dec
fs
pushf
jp
rcl
mov
retf
cmp
inc
pop
mov
inc
loopne
in
xchg
xor
xchg
push
adc
xor
cmovg
inc
xchg
mov
inc
sbb
inc
jg
test
add
jecxz
add
push
outs
pop
inc
outs
int
sub
jns
sub
pop
push
pop
loope
dec
rcl
jmp
inc
mov
pop
xor
mov
push
and
xor
scas
or
or
mov
or
dec
or
call
and
ret
mov
inc
mov
xchg
pop
inc
mov
sbb
out
jmp
inc
imul
in
xchg
cmp
stos
sbb
repnz
pop
dec
inc
cmp
jae
jae
inc
mov
and
(bad)
sbb
add
inc
gs
lods
push
mov
lahf
push
add
xor
pop
or
fwait
pop
cmp
and
xchg
xor
mov
daa
daa
push
push
sub
sbb
and
mov
sti
in
(bad)
push
jo
push
les
fnstcw
(bad)
fdivr
mov
arpl
in
rcr
mov
shl
sbb
pop
test
adc
inc
adc
inc
aam
mov
ss
push
mov
shl
sahf
cs
jmp
loop
call
fmul
outs
lahf
loope
inc
test
jns
jmp
(bad)
test
mov
test
xor
and
out
xor
adc
nop
sub
sbb
and
gs
mov
adc
xor
test
xlat
movs
and
sub
or
shl
xchg
sti
imul
repz
add
sub
std
retf
ja
adc
inc
mov
iret
fisub
int
gs
fnstcw
js
xor
ja
dec
xor
in
jno
and
les
out
jnp
pop
and
xor
pop
push
push
pusha
rcl
rcr
call
adc
push
mov
jmp
xor
push
and
cmp
cmp
fadd
push
mov
sub
mov
arpl
in
bound
loope
lods
leave
inc
jnp
inc
push
jae
les
dec
inc
aad
(bad)
and
mov
add
out
je
xor
fsub
ds
loope
sbb
xchg
sbb
int
mov
xor
xchg
out
lods
xchg
add
or
ds
xchg
mov
call
mov
scas
std
or
push
pop
lods
or
pop
stos
mov
call
arpl
xchg
fwait
sub
mov
addr16
(bad)
and
push
fidiv
jns
cmc
pop
shl
rol
adc
imul
mov
sub
pop
leave
enter
inc
cli
sub
das
and
jns
push
into
std
(bad)
cmps
push
dec
pop
jle
jle
pop
ret
cld
or
xor
add
cmp
outs
inc
sub
or
and
imul
push
xor
dec
xchg
push
xchg
dec
aaa
jno
mov
mov
outs
dec
test
in
sbb
add
fbld
mov
cmp
popa
pop
add
inc
xor
(bad)
fisubr
lea
mov
mov
pop
cmp
mov
dec
ret
jo
mov
lods
pop
sbb
inc
pop
hlt
push
jmp
dec
enter
sub
scas
imul
jbe
movs
cmps
adc
pop
jp
cmp
mov
adc
inc
lock
pop
(bad)
xchg
lods
jnp
dec
jmp
jmp
imul
ds
call
lods
cmps
(bad)
push
adc
cmps
mov
das
out
and
push
jl
mov
imul
gs
push
test
(bad)
xchg
fsub
cmps
cwde
xor
push
dec
mov
cmps
sub
and
mov
mov
aad
push
xor
inc
shr
into
ficom
jl
mov
shl
fs
pusha
fcmovb
cli
cwde
es
in
mov
es
cmc
xor
mov
jecxz
in
mov
dec
or
ret
mov
pop
mov
sbb
cmps
cmc
push
mov
xchg
xor
pop
lds
or
in
pop
sbb
pop
xchg
jmp
cmps
inc
int
das
sbb
mov
sti
ins
ret
add
test
out
ja
xor
int3
push
sub
pop
sbb
push
push
push
cmp
sub
xchg
jp
xor
frstor
rcl
popa
add
jmp
xchg
xor
pop
lods
movs
or
(bad)
scas
sbb
cmps
outs
int
out
or
mov
sbb
jmp
fidivr
in
pop
dec
fucomp
ja
shl
add
mov
fs
mov
div
mov
add
outs
les
mov
mov
lds
dec
push
sbb
cdq
push
ins
shr
xchg
push
nop
(bad)
mov
jae
in
inc
xchg
mov
daa
lea
lock
jl
div
xor
jno
adc
(bad)
and
pusha
rol
mov
sub
mov
loope
push
xchg
mov
sub
popa
fst
sub
mov
sub
imul
xor
fs
(bad)
fisttp
aad
call
jp
jge
aas
lods
push
push
add
ror
dec
inc
(bad)
jmp
test
xchg
out
test
xchg
stos
scas
jae
xchg
and
ja
test
dec
inc
jo
push
sti
pop
or
div
inc
sbb
mov
mov
cmp
sub
pop
and
mov
scas
popa
popf
or
jb
clc
jp
lods
cmp
rcl
shl
push
jle
popf
and
es
rol
push
jae
gs
xor
xchg
inc
stc
cs
push
jbe
dec
int
pop
sub
adc
leave
dec
out
(bad)
push
out
pop
inc
mov
lods
(bad)
adc
retf
or
jmp
and
repz
icebp
iret
sub
movs
xor
jp
add
xor
or
shl
push
les
pop
jo
bound
dec
cmp
retf
loop
and
aaa
out
stos
popa
in
jne
push
or
lods
mov
in
sub
mov
cmp
in
rol
mov
mov
test
adc
push
push
in
adc
daa
cmp
cmp
adc
jmp
retf
mov
push
pop
in
call
sub
or
and
movs
ins
mov
aam
push
jg
cs
add
mov
xor
pop
gs
dec
xor
add
lahf
scas
fadd
mov
push
lock
xchg
test
mov
inc
jbe
adc
jo
repnz
sub
push
inc
stos
out
ret
fs
retf
in
mov
mov
xchg
add
dec
mov
xchg
push
or
cmps
mov
push
mov
js
or
mov
sbb
mov
push
ror
and
jmp
sbb
mov
loope
dec
inc
ret
cmp
mov
cmp
in
cmp
je
mov
iret
mov
sbb
loop
mov
pop
mov
leave
in
repnz
test
jae
int3
stos
setne
mov
or
fcom
rol
or
bound
mov
call
fidiv
loop
cdq
(bad)
lock
mov
xor
das
cmp
stc
mov
pop
out
in
add
scas
sub
repnz
add
sub
xchg
dec
add
(bad)
and
inc
imul
or
mov
(bad)
mov
iret
ret
dec
cmp
dec
mov
aaa
cld
mov
dec
xchg
jg
or
jbe
and
repz
mov
pusha
imul
xchg
data16
lea
xor
outs
jo
sbb
out
into
pop
mov
push
int3
sbb
pop
iret
pop
loopne
sbb
cmp
in
adc
mov
cmp
scas
into
push
add
outs
mov
adc
xor
lods
mov
(bad)
cmp
xchg
bound
cmp
mov
adc
pop
clc
pop
add
test
outs
mov
(bad)
adc
mov
nop
add
imul
test
int3
push
add
fdiv
jg
inc
mov
push
jge
rcr
ds
movzx
dec
stc
add
inc
adc
rcr
xchg
outs
cli
pop
enter
mov
sbb
add
fldcw
pop
gs
or
pop
cmp
jne
das
out
hlt
push
jne
test
(bad)
or
push
imul
add
and
push
mov
mov
(bad)
adc
in
addr16
ja
nop
out
ret
retf
aaa
sub
test
test
repz
jmp
mov
ss
jns
(bad)
sbb
mov
jbe
or
pop
dec
lods
ret
icebp
jmp
dec
push
rol
mov
pop
fiadd
xor
mov
or
test
sub
nop
fstp
ja
mov
lahf
mov
add
out
xchg
sbb
jmp
scas
dec
(bad)
mov
push
(bad)
mov
loope
in
ret
outs
mov
pop
lods
les
gs
lahf
xor
push
in
add
std
add
mov
fdivr
and
push
adc
iret
scas
leave
stos
ja
test
fwait
mov
inc
xchg
shl
das
or
in
mov
nop
dec
mov
inc
push
push
mov
mov
ret
cmp
pop
aam
icebp
repz
sbb
nop
or
or
in
inc
test
data16
and
cs
(bad)
in
test
pop
mov
add
cli
push
imul
and
ss
jnp
mov
repnz
mov
dec
jns
push
and
mov
cwde
inc
push
fwait
addr16
sbb
enter
inc
fadd
ins
and
shr
sub
push
test
dec
sbb
outs
nop
call
ficom
icebp
add
neg
xor
ins
call
xchg
sahf
or
mov
cs
sahf
shr
push
dec
mov
fidivr
in
add
sub
sti
pop
cs
mov
idiv
inc
mov
xchg
mov
cmp
lock
and
popf
xchg
jmp
les
and
test
idiv
xchg
cwde
jecxz
cmp
iret
mov
addr16
clc
rcr
cmp
cwde
pop
push
hlt
xchg
loope
div
leave
inc
mov
inc
ds
ror
icebp
mov
je
movnti
sahf
rol
sub
dec
xor
aad
xlat
push
push
jl
into
sub
jmp
ret
cmp
setle
mov
add
or
cmp
dec
in
push
cli
ffree
cmps
mov
(bad)
retf
mov
scas
pop
mov
retf
mov
inc
push
jmp
push
repz
adc
scas
sub
xor
out
cmp
xchg
imul
push
fs
adc
xor
sub
jnp
movs
mov
int3
jmp
loopne
sahf
movs
shr
mov
cmp
in
jae
xor
jecxz
adc
cli
enter
ins
sub
inc
je
cwde
cmp
inc
rol
fstp
pop
lds
das
xor
call
sub
xor
movs
loope
push
and
sbb
xchg
addr16
aaa
bts
jae
shl
or
cli
imul
push
in
imul
pop
adc
adc
xchg
or
cmp
pop
mov
enter
push
adc
sbb
pop
adc
mov
dec
adc
and
push
das
adc
mov
mov
and
inc
inc
dec
mov
cli
jg
cmp
fisubr
cld
std
call
jno
adc
rol
or
mov
loopne
loopne
lahf
sub
adc
shr
xor
xchg
xchg
sbb
cli
mov
shr
sub
fistp
mov
pop
in
push
or
push
xor
lods
mov
ret
xchg
pop
or
mov
es
fdiv
dec
pop
popa
ins
ss
sbb
inc
out
sub
mov
fisub
popf
inc
cwde
(bad)
(bad)
in
outs
pusha
rcr
push
test
pop
sahf
mov
jbe
push
mov
movs
add
jl
jno
fsubrp
mov
test
leave
inc
test
rcl
dec
cmp
fs
iret
push
jno
punpckhdq
sbb
imul
(bad)
cmp
mov
pop
and
fwait
cmp
cmp
mov
fldenv
push
lock
mov
and
(bad)
(bad)
inc
cmp
sub
ret
(bad)
fisubr
dec
and
lods
(bad)
shl
jl
test
popa
dec
jecxz
inc
add
sub
ficomp
popf
and
cmp
inc
stc
add
cmp
xchg
dec
mov
(bad)
cld
and
loop
in
xchg
xchg
ss
inc
mov
outs
sbb
out
xchg
xor
(bad)
jl
xchg
jp
push
add
push
inc
inc
jno
sahf
call
or
loopne
out
adc
mov
cli
daa
into
fld
frstor
lock
into
fisttp
ds
push
push
icebp
pop
sbb
test
inc
pop
lods
gs
out
add
xor
pop
and
pop
out
in
or
test
mov
hlt
and
pop
mov
push
test
shl
push
mov
inc
ja
mov
fidivr
jg
nop
lds
fistp
inc
pop
ret
inc
mov
mov
xchg
test
popa
add
xcrypt-cfb
cmps
mov
loopne
sbb
sub
sbb
adc
std
jl
dec
dec
mov
std
aad
in
repz
push
mov
sbb
in
mov
cwde
mov
and
js
movs
mov
jb
out
loopne
push
fs
push
lds
repnz
xchg
aaa
mov
mov
loop
mov
jne
cmc
aam
and
sbb
out
dec
mov
xchg
cld
mov
leave
cmp
xchg
push
ds
add
ja
sbb
push
js
imul
fucomip
out
addr16
or
lock
pop
scas
inc
adc
xchg
push
mov
lock
and
movs
sub
in
sbb
jae
in
aad
pop
xor
mov
enter
mov
mov
(bad)
cmp
jae
movs
js
icebp
dec
cmps
test
outs
ins
pop
outs
fdiv
ins
jb
scas
int
nop
(bad)
xor
lock
(bad)
(bad)
ja
sbb
int3
popa
pusha
pop
adc
adc
int
xor
xchg
mov
(bad)
pop
addr16
mov
inc
ja
pop
push
jo
dec
aas
xor
inc
in
sbb
ror
idiv
jns
and
or
data16
mov
inc
(bad)
ss
call
stc
xor
pop
(bad)
clc
jb
xlat
xchg
add
rcr
pusha
mov
add
dec
mov
into
mul
sub
fdiv
repnz
cmc
dec
cmp
cmp
dec
scas
(bad)
sbb
xor
icebp
xor
sub
imul
xor
hlt
xchg
call
pop
out
and
pop
push
cmc
lahf
stos
ret
sahf
jmp
push
and
add
lods
les
xchg
ret
jb
xchg
dec
imul
cmps
imul
sub
mov
aam
sub
test
int3
(bad)
mov
sub
mov
jo
div
retf
xor
xor
cmps
mov
mov
test
(bad)
mov
and
mov
jp
or
dec
mov
inc
cmp
fwait
scas
push
test
retf
mov
mov
sbb
sahf
call
jb
mov
out
sbb
adc
mov
dec
inc
jbe
adc
adc
fistp
cmp
sbb
cmp
lea
lds
sbb
add
jno
test
int
cld
out
daa
mov
(bad)
xor
popf
retf
inc
lods
mov
cmp
test
xor
cmps
cdq
adc
fcomp
pop
repnz
cmp
fwait
icebp
sbb
push
cmc
test
adc
mov
inc
loope
jmp
mov
pop
pop
pop
std
in
cmp
test
fs
push
cmp
pop
pop
cwde
call
fwait
ret
mov
sbb
pusha
pushf
dec
movs
mov
aas
jo
jnp
add
and
pop
or
outs
lea
or
sub
jge
mov
rcr
sbb
aad
(bad)
jmp
hlt
sar
xor
scas
iret
xor
mov
rcr
xchg
mov
mov
dec
mov
aaa
mov
(bad)
call
cli
nop
aad
out
mov
outs
fs
sti
neg
js
outs
sub
xchg
movs
xchg
jge
movs
pop
dec
iret
js
push
fs
out
lds
mov
xor
add
in
imul
mov
out
cmc
stos
inc
lods
scas
out
popa
and
sbb
ficomp
pop
push
cld
rol
push
call
inc
xor
xchg
jbe
ret
xchg
in
(bad)
sbb
pop
out
jnp
cmc
gs
jb
or
jmp
sub
(bad)
int
push
dec
mov
mov
and
cs
mov
pop
xchg
add
sub
lods
stos
fisttp
push
cmps
outs
enter
and
xchg
scas
xor
test
xor
shl
push
ins
add
lods
push
xchg
xchg
cdq
fnstcw
mov
ret
ss
push
cmp
and
pop
cmp
mov
and
pop
repz
mov
sub
or
shl
ds
stos
mov
rcr
mov
shr
jnp
sub
lea
jne
sbb
in
cmp
movs
scas
dec
test
loopne
push
ret
loop
cmp
jge
xor
leave
mov
test
cmp
cmp
sbb
cmps
repz
mov
xchg
shr
mov
pop
pop
xchg
pop
ror
mov
push
inc
add
sahf
(bad)
push
addps
mov
sbb
pusha
or
and
leave
(bad)
mov
(bad)
hlt
loop
sbb
adc
xchg
xchg
add
dec
outs
std
mov
ja
adc
mov
ins
shr
xchg
in
bsr
and
lea
pop
pop
pop
fnsave
or
and
sub
mov
mov
lods
pop
jns
mov
push
pop
leave
push
fist
ret
jecxz
in
stos
jo
pop
cmp
fsub
adc
mov
and
add
cmp
ror
not
add
push
mov
shl
dec
push
pop
mov
and
hlt
aaa
cmp
xchg
jp
cmps
test
mov
inc
clc
adc
scas
push
es
mov
shl
aam
push
mov
jmp
mov
outs
jl
dec
sbb
fsub
daa
inc
dec
mov
out
adc
jecxz
bound
fstp
and
call
dec
aad
and
sar
inc
inc
mov
inc
dec
loopne
push
test
loope
cli
jmp
in
mov
jmp
push
and
leave
adc
jmp
cmp
jmp
ficomp
dec
pop
xor
cmps
std
xor
(bad)
cmp
sti
and
jb
dec
int3
mov
mov
adc
cmp
rol
push
xor
in
push
sub
imul
xchg
scas
js
hlt
stc
mov
add
inc
cmp
stos
xchg
bound
dec
xchg
dec
iret
(bad)
mov
movs
mov
lahf
test
addr16
es
jae
fwait
mov
leave
push
adc
daa
add
sahf
rol
in
fsubp
jae
and
ror
fst
repnz
aaa
js
mov
inc
xor
mov
mov
(bad)
xor
xor
mov
jle
shr
cmp
mov
cmps
jmp
mov
xchg
mov
inc
jno
dec
lock
sbb
inc
out
jns
imul
pushf
jnp
add
sub
dec
dec
xchg
mov
mov
pop
aad
jns
dec
xchg
ss
add
push
cdq
inc
jns
push
lods
xor
test
dec
add
rol
data16
pop
lds
clc
push
jge
in
and
jl
enter
idiv
sbb
in
and
xchg
in
loopne
scas
mov
clc
xlat
xchg
popf
out
call
dec
dec
xchg
dec
mov
inc
and
jno
movs
test
jae
stc
fmulp
mov
jp
lea
cmp
mov
xchg
jmp
pop
xor
loope
ins
ins
sbb
cmp
out
mov
(bad)
aas
pop
push
add
in
xchg
mov
iret
xchg
mov
popa
push
or
adc
xchg
sbb
sti
adc
pop
adc
jecxz
xor
inc
xor
mov
icebp
pop
pop
adc
add
pop
or
jmp
adc
pop
inc
pop
sub
push
and
(bad)
jp
sbb
cmp
sub
lock
mov
cmp
inc
push
lds
fldcw
fisubr
pop
sar
xlat
loope
nop
mov
cs
mov
ja
mov
in
scas
push
inc
jg
xchg
push
pop
in
aad
xchg
jp
les
repz
int3
outs
mov
and
push
add
sar
mov
inc
ja
xor
test
sub
inc
push
adc
mov
cmps
shl
cmp
push
push
pushf
aam
add
pushf
add
mov
push
shr
mov
push
xor
lods
adc
mov
cmp
adc
or
std
mov
jmp
lods
cmp
mov
mov
and
hlt
in
push
std
and
data16
xchg
das
or
retf
pop
sub
jne
out
jae
cli
icebp
mov
int3
mov
fwait
leave
ret
fld
lock
shl
mov
cmps
stos
retf
shl
jp
mov
mov
mov
in
(bad)
jbe
lods
mov
mov
ja
movs
loope
rol
cmc
loope
jno
sub
das
inc
push
cwde
(bad)
sub
sahf
or
out
pusha
xchg
push
loopne
(bad)
rol
xor
cmp
add
mov
popf
bound
add
pop
lods
mov
in
or
ins
aas
clc
xchg
js
call
fisttp
sbb
push
cs
test
xlat
inc
(bad)
and
mov
pop
cmp
imul
mov
xchg
jno
mov
push
inc
mov
mov
jp
cmp
add
repz
jmp
jecxz
(bad)
cmp
mov
sub
je
retf
mov
mov
fs
pop
dec
xor
xor
fistp
xor
lock
dec
bound
in
sbb
xchg
leave
ins
cmps
outs
and
aas
adc
fwait
js
add
je
outs
jg
ins
shr
xor
gs
mov
js
lods
call
dec
(bad)
sub
adc
mov
sbb
pop
stos
leave
add
ds
addr16
cmps
dec
or
int3
data16
daa
sub
retf
mov
xor
jae
pop
sbb
mov
fucomip
and
call
and
call
in
xor
jo
(bad)
xor
jns
mov
imul
push
inc
mov
mov
xchg
dec
mov
fadd
jne
adc
data16
iret
cs
ret
js
inc
lock
push
add
test
outs
jae
xchg
add
or
sub
in
add
in
push
cmc
pushf
test
out
test
push
mov
push
mov
sub
inc
sbb
fs
or
push
mov
(bad)
and
cmp
cmp
mov
inc
ret
mov
cwde
dec
mov
ds
into
leave
lea
pusha
fadd
imul
lock
add
nop
call
sbb
data16
movs
sbb
jo
pop
fwait
push
cmps
jge
rcl
test
inc
adc
jbe
pop
and
fist
mov
(bad)
pushf
jmp
retf
(bad)
fmul
lahf
in
mov
out
cmp
ss
icebp
data16
cmp
imul
movs
mov
js
shr
xor
ror
pusha
xor
loope
fist
mov
stc
loope
dec
pop
in
xchg
in
inc
pop
push
cwde
shl
jae
gs
sub
lea
add
sbb
lock
retf
sub
int3
ror
scas
aas
mov
or
pusha
fisub
adc
rcr
test
(bad)
(bad)
dec
test
les
ss
pop
hlt
sbb
add
adc
jmp
xor
and
fldenv
mov
(bad)
and
sbb
inc
mov
mov
rol
stos
in
pop
cdq
push
and
idiv
dec
mov
shl
mov
sub
pushf
outs
add
les
pop
mov
int3
pop
add
ficomp
jbe
fnstcw
pop
mov
fdiv
movs
xor
neg
pop
dec
xchg
and
sbb
iret
and
js
int
mov
shl
call
or
fild
adc
int
sub
in
mov
int
pushf
push
sbb
xor
in
xor
pusha
and
ffree
push
xchg
(bad)
pop
mov
pop
push
push
mov
adc
scas
inc
sti
test
xchg
dec
inc
rol
or
sub
push
sub
pop
cmp
cwde
jo
dec
jo
out
lea
mov
ficomp
out
adc
mov
ins
mul
lds
int
sbb
add
gs
mov
popf
les
xor
jmp
inc
fsub
mov
jne
loop
out
mov
and
lods
sub
jecxz
stc
arpl
inc
mov
fistp
out
hlt
sub
inc
scas
mov
sub
lods
(bad)
pusha
cmp
ins
jo
add
push
push
ins
adc
and
or
mov
movs
in
and
(bad)
daa
xor
call
jae
mov
sbb
pop
add
mov
and
out
fidivr
adc
ret
sub
adc
bound
outs
mov
pop
shl
pop
call
int3
shr
mov
cs
sbb
fs
cmp
mov
push
retf
add
sub
xchg
inc
adc
inc
and
mov
inc
neg
sbb
idiv
mov
inc
jl
sub
push
jle
std
movd
fmul
push
test
and
gs
inc
push
out
int
adc
xchg
dec
out
daa
arpl
sub
push
and
push
mov
jno
out
icebp
(bad)
idiv
pop
std
push
sbb
shr
loop
inc
push
sbb
sbb
(bad)
mov
ins
popa
mov
adc
dec
sub
push
or
es
xchg
out
xchg
(bad)
mov
jl
retf
pop
inc
or
in
or
jo
inc
cmps
adc
icebp
dec
pop
mov
jns
push
add
push
sub
mov
not
into
ret
clc
inc
out
imul
or
or
sbb
daa
aaa
ror
movs
sub
adc
cli
aas
aaa
lahf
pop
jg
sbb
loop
test
adc
push
cmps
popa
hlt
dec
inc
not
cli
adc
pop
dec
jecxz
lods
movs
and
cmp
cmp
fldcw
and
ds
mov
sar
add
jecxz
fld
imul
fld
push
jno
mov
push
pop
jg
mov
or
pop
ret
jnp
sbb
push
lahf
jl
popa
cli
aad
ins
cmp
push
in
or
and
ins
add
xchg
test
pop
data16
mov
pop
or
jp
ins
add
outs
js
cmps
clc
cmp
or
jb
sub
jg
ja
addr16
jp
fadd
mov
retf
or
and
test
adc
xor
daa
dec
aam
cmps
stc
or
lahf
inc
mov
gs
test
stos
cmp
(bad)
ins
cld
gs
pop
inc
hlt
js
dec
call
sbb
dec
jecxz
mov
jmp
sahf
repz
xchg
loop
mov
jp
adc
mov
mov
inc
inc
test
ret
mov
and
mov
or
aam
mov
les
lea
or
mov
mov
push
sub
push
or
and
sub
add
fistp
cmp
xor
and
push
mov
sti
mov
fidiv
jl
xchg
sub
lds
sub
neg
xchg
xchg
or
aad
mov
push
enter
xor
sbb
dec
int
xchg
push
mov
mov
or
mov
out
mov
pop
sar
xor
enter
dec
aad
sub
gs
fidiv
mov
xor
in
adc
ins
imul
scas
push
and
sub
popf
jmp
fadd
xchg
cmp
pop
push
in
mov
jg
lods
inc
mov
rcl
sub
add
lods
mov
push
arpl
jmp
adc
enter
enter
(bad)
xor
aam
xchg
shr
(bad)
dec
mov
ret
jnp
pusha
add
and
pop
ss
cmps
xchg
add
(bad)
jle
(bad)
mov
xor
sub
adc
xor
add
retf
std
sub
jnp
sub
jg
cmp
mov
push
test
loop
or
inc
cmp
dec
cmps
shr
xchg
(bad)
mov
data16
movs
dec
xchg
bound
gs
jno
mov
push
pop
je
mov
xchg
inc
nop
cld
xor
iret
xor
push
mov
repz
mov
call
lods
scas
jge
les
mov
in
push
mov
and
movs
xor
mov
ja
in
push
cmp
mov
cmp
inc
fild
mov
jno
test
into
fcmovne
inc
lea
leave
popf
out
repnz
add
out
in
dec
inc
sbb
pop
lods
stc
ja
les
inc
sub
push
and
int
sbb
loopne
jge
popf
jo
cld
fist
xchg
dec
lahf
mov
call
scas
idiv
in
sub
mov
or
push
add
push
xchg
jbe
ret
rol
mov
pop
iret
call
push
inc
je
ror
push
neg
pusha
xchg
sbb
xchg
ds
cmps
call
test
push
xchg
and
pop
sbb
outs
leave
and
push
sub
cmp
mov
dec
int3
mov
xor
sahf
inc
xchg
dec
mov
and
mov
cli
fcom
call
dec
dec
push
push
sbb
dec
test
inc
jl
inc
dec
sub
pop
mov
retf
sbb
mov
cli
mov
inc
sub
cmps
jnp
adc
xor
loopne
lds
imul
pop
mov
in
push
jge
xchg
mov
pushf
or
mov
jmp
cmps
hlt
(bad)
mov
pop
mov
push
push
ss
sar
mov
rcr
push
test
sub
inc
addr16
(bad)
retf
add
or
cmp
inc
push
scas
adc
pushf
mov
lods
cmp
es
push
cmp
mov
paddb
ds
cwde
cmc
in
(bad)
int3
lds
inc
cmp
dec
cmp
jne
sbb
jg
push
cmps
fistp
and
or
shl
xor
mov
jp
mov
push
pop
adc
ret
jecxz
lods
push
add
adc
popa
push
xor
dec
out
inc
repnz
loope
mov
retf
enter
loopne
out
jg
pop
and
sub
jno
clc
dec
adc
adc
push
int3
cmps
jmp
in
ret
movs
daa
sub
sbb
adc
rol
loope
xchg
xor
sub
dec
dec
jle
cli
dec
out
cmp
mov
mov
pop
jl
push
gs
dec
pop
jo
pusha
addr16
cdq
addr16
xlat
aaa
mov
shl
out
pop
iret
(bad)
(bad)
std
loopne
adc
mov
cmp
xchg
jnp
jp
jo
and
add
fsub
mov
mov
test
xchg
out
enter
std
cmps
inc
mov
int3
sub
xchg
enter
mov
sbb
dec
adc
dec
ror
cld
push
sbb
fild
cdq
iret
mov
cli
rol
and
bound
fmul
cdq
leave
add
cmp
cmp
fmul
stc
loopne
dec
pop
repnz
or
and
shl
iret
mov
push
jb
jl
addr16
out
iret
push
(bad)
xor
adc
cmps
call
mov
(bad)
cmp
inc
or
ins
push
xor
sbb
sub
and
xor
inc
stos
loop
fcmovne
or
sub
mov
adc
and
or
or
js
fcmovu
xor
inc
fisub
stos
add
nop
mul
shl
mov
inc
scas
lock
cld
pushf
adc
push
add
iret
mov
jb
and
loope
jge
mov
sub
push
dec
sbb
pop
xor
and
jbe
adc
clc
test
or
mov
cmc
mov
add
lods
xchg
adc
jnp
aam
ins
jae
(bad)
popa
aas
mov
push
inc
ins
hlt
push
and
cdq
test
std
test
fldenv
scas
out
aaa
mov
adc
jl
fcomp
mov
fwait
sar
xchg
jno
mov
add
mov
sahf
addr16
retf
mov
add
mov
push
or
pusha
enter
enter
loope
mov
shl
and
jno
and
push
sbb
les
(bad)
xchg
mov
pop
sahf
std
add
rcl
mov
pop
fcomi
cli
mov
push
mov
jle
or
scas
jmp
xchg
dec
repz
fstp
mov
jbe
fcomp
aad
bnd
(bad)
fsubr
out
jne
xchg
sbb
push
mov
pop
adc
movs
shl
mov
mov
lahf
mov
sbb
push
xchg
add
icebp
cmps
or
js
lods
push
stos
add
retf
or
mov
retf
out
mov
or
bound
sub
je
dec
jmp
out
icebp
pop
aam
cmp
sub
push
psubd
(bad)
stos
mov
lods
test
not
mov
jae
stos
imul
ss
cmp
inc
cmp
xchg
add
dec
adc
std
fidivr
add
fisub
and
arpl
les
es
push
adc
pop
add
orps
leave
mul
push
mov
je
mov
shr
add
adc
gs
push
fcomp
fwait
pop
inc
sbb
out
dec
cmp
(bad)
jmp
ret
push
loope
pop
xchg
sub
(bad)
jmp
pop
cdq
cmp
ss
and
and
sub
lea
icebp
test
adc
leave
je
ins
mov
sbb
dec
hlt
or
rcr
xchg
lods
out
inc
jb
xor
int
pop
push
je
cs
in
xchg
imul
pop
lahf
ins
and
add
std
bound
xchg
mov
inc
jns
xor
adc
ret
jg
xchg
mov
call
push
out
data16
and
mov
or
mov
(bad)
add
xchg
pushf
retf
and
sbb
fldcw
sbb
jnp
je
popf
xchg
inc
imul
stc
pop
mov
mov
push
push
repz
xchg
fsub
sub
push
inc
ins
sahf
and
fsubr
bound
push
pop
xchg
retf
push
cmp
and
stos
inc
sub
iret
lods
lods
jmp
mov
lock
mov
or
push
loopne
mov
mov
jo
mov
jne
add
into
pop
iret
jmp
fistp
aaa
bound
jg
cmp
xor
xchg
imul
xor
jnp
jnp
or
sub
mov
jne
pop
inc
xchg
in
push
fnstsw
inc
pop
sub
dec
(bad)
dec
nop
daa
pop
jbe
sbb
push
push
cmp
and
mov
cmp
inc
ds
cmps
iret
hlt
test
repnz
sub
inc
xlat
sub
xchg
(bad)
ficomp
add
or
jbe
jp
inc
jp
in
inc
fild
(bad)
sti
sub
shl
pop
dec
arpl
daa
jo
daa
ins
retf
or
xchg
test
inc
int3
xor
stc
in
(bad)
das
movs
sti
mov
pop
push
jne
xor
pop
push
pushf
stos
ins
cmp
and
dec
sbb
loop
ds
fdiv
outs
mov
sbb
xor
push
scas
mov
cmps
lea
inc
inc
jmp
push
and
xchg
add
neg
adc
sbb
sbb
mov
aam
imul
repnz
sub
ficom
inc
add
outs
test
nop
xor
jno
out
ds
test
sub
dec
in
push
pushf
add
adc
sub
cmp
xchg
xor
inc
cmp
pop
mov
add
add
add
inc
mov
imul
loop
inc
and
add
cmc
pusha
xor
leave
jp
in
mov
pop
add
lods
cmp
scas
or
add
jecxz
test
cwde
xlat
inc
sub
repnz
in
fimul
push
pop
add
pushw
xchg
fwait
xchg
out
add
xor
mov
jmp
retf
xchg
pop
push
xchg
repz
cmp
dec
or
jmp
rcl
xor
jmp
daa
xchg
inc
jae
xor
push
xchg
cdq
dec
jne
sbb
in
add
xchg
cmp
pop
vpsubd
addr16
sub
cmp
push
std
mov
inc
(bad)
mov
cmp
int
jg
xchg
mov
mov
or
mov
push
call
ror
or
rcr
lea
out
maskmovq
idiv
lods
cwde
add
xlat
gs
sub
or
outs
sbb
and
pop
sub
mov
jp
ficom
push
xchg
push
mov
mov
jbe
sub
pusha
sbb
sbb
(bad)
mov
ins
xor
aad
and
fisttp
jecxz
push
in
int
xchg
cmps
js
dec
test
fdiv
not
stos
clc
clc
loop
lock
mov
aas
sbb
div
scas
xchg
cmp
sbb
jl
sahf
mov
scas
jae
cli
shr
das
outs
sbb
lods
cmps
cwde
retf
lods
repz
add
xchg
das
sub
outs
imul
mov
sub
sbb
dec
std
cmps
fimul
mov
adc
retf
lock
pop
fs
jecxz
sub
fsubr
out
push
mov
pop
pop
fsub
adc
and
daa
repz
mov
or
retf
jae
loop
shl
jp
mov
cmp
les
sub
lds
push
push
std
fwait
inc
(bad)
pop
ja
adc
aam
adc
mov
mov
in
and
sar
call
iret
adc
sub
pop
ja
aas
out
sub
stos
ins
and
test
cs
jl
aad
mov
inc
pop
add
mov
xchg
nop
xor
fwait
inc
add
mov
daa
mov
out
stos
stos
adc
repnz
add
movs
lahf
mov
dec
xor
packssdw
xchg
inc
push
std
mov
inc
stos
push
pop
mov
xchg
hlt
and
push
pop
(bad)
sub
sub
cs
inc
push
mov
(bad)
in
or
sub
push
pop
cwde
jg
push
lods
adc
dec
xor
mov
ss
(bad)
jns
lds
push
retf
pop
dec
dec
jae
rcl
push
test
in
inc
stos
cld
gs
shl
jne
retf
dec
(bad)
(bad)
cmp
mov
add
loopne
ja
popf
inc
adc
inc
and
loop
xchg
sub
cmp
aad
mov
or
cmps
sub
mov
ss
jmp
shr
stos
sub
stos
mov
imul
add
mov
pop
fwait
sub
hlt
test
mov
dec
test
push
adc
ret
dec
loopne
gs
pop
shl
xor
enter
lds
sbb
cld
daa
push
(bad)
adc
leave
and
sbb
(bad)
je
popf
or
sbb
xor
loop
out
rcl
mov
pop
sub
mov
pushf
push
cmp
movs
dec
pop
cdq
clc
sbb
mov
add
stos
xchg
sbb
jae
fisttp
fbld
sahf
loope
sbb
and
leave
stos
cmc
mov
scas
pushf
xchg
add
adc
and
jmp
add
test
fst
push
add
push
and
add
stos
mov
hlt
jnp
jbe
or
in
hlt
and
ss
jl
in
in
inc
mov
mov
ret
jl
fld
ins
in
push
retf
iret
sbb
dec
push
and
push
sub
mov
and
sbb
test
push
mov
add
and
push
push
mov
push
adc
jmp
ret
test
mov
inc
cmp
xor
out
fwait
jae
fadd
loope
aaa
addr16
(bad)
in
ds
mov
shr
adc
nop
das
mov
fidiv
jne
jmp
add
xchg
sbb
sub
dec
ins
jbe
ins
push
pushf
add
nop
fld
dec
inc
xor
pusha
pop
mov
in
add
push
pushf
mov
ret
xor
sub
outs
js
in
jns
mov
pop
stc
sahf
xor
movs
div
shr
cli
inc
mov
xchg
jb
sti
int3
mov
mov
xchg
(bad)
leave
sub
out
and
fisubr
and
push
sahf
fwait
push
arpl
push
repnz
(bad)
out
xor
hlt
or
xor
bound
movs
iret
inc
fsubr
or
or
daa
inc
(bad)
cli
(bad)
sub
enter
mov
rcr
pop
sar
ss
pop
pop
pop
ror
fisubr
(bad)
sub
adc
xchg
adc
xor
push
cmp
inc
test
sti
jne
in
out
push
mov
jl
fldenv
xchg
aad
push
test
outs
iret
lods
adc
sti
fwait
dec
pop
inc
loopne
bound
je
push
mov
pop
(bad)
in
daa
aaa
lahf
or
out
pop
ss
in
bound
pop
out
ret
mov
pop
dec
and
cmp
scas
sbb
mov
jno
sti
aas
pop
lahf
mov
hlt
push
mov
into
imul
mov
je
ret
int
push
std
stc
das
pusha
dec
jle
add
aaa
out
in
jb
ret
xchg
push
pop
ins
dec
mov
movs
out
stos
(bad)
pop
daa
sbb
bound
inc
cdq
ja
les
xor
mov
dec
dec
push
or
and
mov
push
ret
int3
push
dec
add
push
pop
int
sbb
in
jne
icebp
(bad)
sbb
out
sub
rcr
ins
jb
jae
aam
test
shl
add
stos
mov
stc
jp
call
retf
or
leave
mov
fldcw
cmps
sbb
in
mov
sub
mov
not
mov
mov
mov
xchg
add
out
mov
sbb
es
fimul
sub
(bad)
or
or
mov
xlat
add
fsubr
mov
fidivr
pop
mov
mov
or
out
dec
mov
xor
push
xor
mov
clc
xor
(bad)
sbb
mov
mov
and
neg
ret
push
repz
sar
stos
and
mov
movs
inc
out
in
push
and
pop
or
js
mov
xchg
xchg
dec
sub
out
aam
cmp
(bad)
icebp
xchg
jmp
xchg
mov
cs
mov
mov
loopne
and
ja
mov
pop
ret
adc
retf
cs
mov
retf
fwait
inc
xor
adc
push
es
adc
mov
popa
lods
(bad)
mov
and
xor
bound
xchg
pop
jo
xor
enter
cs
mov
jmp
lea
mov
push
loop
ds
sub
fcom
mov
xor
clc
pusha
pop
pop
in
(bad)
sub
popa
out
repz
out
leave
inc
into
mov
aad
or
push
les
pop
pop
push
jg
push
adc
lods
call
sub
jb
loopne
rcl
jecxz
rol
pop
aad
jbe
mov
push
inc
dec
sub
sub
dec
mov
dec
mov
mov
push
mov
sar
nop
add
and
or
jb
adc
adc
inc
jno
loop
popf
repnz
repnz
arpl
aad
out
fidiv
es
in
call
(bad)
scas
push
inc
lahf
test
mov
pop
inc
das
jns
inc
mov
hlt
out
arpl
adc
fnstenv
xor
or
ins
imul
jecxz
xor
xchg
aas
mov
jno
or
mov
jb
jnp
in
stos
and
cmp
add
(bad)
adc
mov
mov
(bad)
in
mov
sub
pop
(bad)
inc
jmp
jno
shr
repnz
xchg
push
pop
cmovne
cmp
xchg
fwait
imul
xor
fwait
add
fnstenv
rcl
and
scas
inc
int3
and
movs
test
or
(bad)
xor
or
cmp
test
inc
dec
mov
mov
mov
and
loop
mov
cmp
mov
mov
std
and
push
or
xchg
push
mov
lahf
push
mov
in
inc
xor
lods
pop
xchg
pop
jnp
jns
dec
inc
sbb
imul
imul
fsub
jecxz
fld
icebp
jp
push
mov
mov
les
pop
rol
cmps
sti
xchg
mov
into
mov
mov
pop
xchg
sti
pusha
icebp
popf
push
xor
mov
sbb
jb
cmps
push
push
inc
push
inc
popf
ror
cmp
in
xchg
add
fcom
mov
sub
xchg
pusha
loop
int
xor
mov
std
sub
fimul
jmp
and
pop
rcr
mov
pop
pop
fs
mov
mov
fidiv
xchg
jo
daa
mov
pop
das
repnz
xchg
inc
inc
mov
pop
leave
jo
in
cmp
iret
sub
mov
shl
iret
out
xchg
lock
mov
es
or
push
xor
loopne
call
icebp
and
or
add
pop
or
pushf
xchg
sbb
dec
and
xor
xor
pop
pop
dec
cmp
js
and
pop
inc
mov
inc
mov
and
icebp
int
data16
test
adc
mov
das
lods
mov
pop
jmp
icebp
cli
jge
cmps
div
mov
pushf
imul
stos
stos
imul
pop
and
adc
push
jo
adc
sub
js
jne
fsub
retf
sub
inc
mov
sub
and
iret
pop
js
in
pusha
in
shl
aam
out
jbe
ret
sub
into
cmp
loop
lds
cmps
popa
fsub
(bad)
sub
push
(bad)
jmp
cmc
enter
xor
imul
lea
vmread
js
adc
test
cmps
pop
bound
cmp
dec
clc
mov
jmp
mov
push
xchg
out
test
aad
mov
dec
lahf
inc
test
mov
xor
rcr
dec
not
nop
cwde
add
ret
retf
test
push
mov
pushf
fadd
test
jl
push
sub
xchg
cmp
cmp
or
xchg
stc
iret
int3
call
or
arpl
into
xor
repz
in
xor
out
adc
jmp
aaa
(bad)
mov
and
xlat
mov
hlt
mov
and
dec
aaa
in
inc
les
jmp
(bad)
xor
daa
iret
neg
ins
adc
mov
push
movs
test
xchg
in
lock
repnz
movs
mov
cmc
inc
jecxz
(bad)
adc
jl
std
pop
and
das
push
out
das
je
test
and
int
ret
(bad)
das
cmp
mov
xor
inc
pop
and
xchg
test
mov
fcmovb
or
sub
or
mov
ror
push
mov
adc
mov
fs
mov
and
mov
ja
xor
add
push
adc
movs
jecxz
add
mov
retf
cmp
dec
nop
aad
(bad)
repnz
mov
pop
jne
repnz
cmp
aaa
fidivr
gs
outs
sub
push
cli
jmp
aam
jne
sbb
inc
mov
or
jle
pop
pop
fsubr
cmc
rcl
sub
sbb
jbe
xor
int
push
sub
bound
mov
cmp
ret
mov
inc
retf
inc
pop
mov
and
movs
sub
mov
ins
mov
and
add
dec
xor
dec
fistp
cmc
and
inc
mov
push
icebp
jno
ins
mov
scas
scas
or
les
int
adc
test
addr16
icebp
pop
mov
jmp
xchg
ss
lahf
test
add
sar
adc
je
shr
in
pop
cli
or
cmp
in
aad
not
loope
mov
jmp
cmp
(bad)
out
xor
cmp
push
rcr
sub
pop
xor
mov
lods
mov
mov
xor
sbb
adc
jb
and
fst
ins
mov
pop
(bad)
dec
lea
mov
jns
and
sbb
sub
adc
mov
push
and
pop
jnp
mov
shl
inc
arpl
jmp
mov
xlat
call
mov
add
iret
popa
jb
imul
scas
inc
jmp
or
sar
and
ror
cs
cmp
rcr
test
sub
aam
(bad)
mov
dec
mov
test
lahf
dec
sbb
icebp
scas
xchg
add
inc
mov
push
xchg
ins
call
xchg
inc
sbb
adc
jp
sub
mov
sahf
pop
outs
(bad)
sub
fwait
aam
int
and
(bad)
ret
leave
mov
popa
and
out
iret
popa
jg
int
or
push
frstor
inc
sbb
pop
cli
pop
mov
cmps
jl
(bad)
loop
sbb
and
mov
hlt
push
mov
out
sub
xor
call
sub
and
imul
es
mov
je
push
in
dec
inc
mov
dec
int
bnd
pop
lods
dec
or
sbb
push
xchg
sahf
dec
es
push
les
or
test
xchg
test
mov
or
fcom
(bad)
mov
jp
(bad)
test
push
adc
xchg
loope
out
push
out
pusha
in
idiv
bound
rol
jg
xchg
(bad)
push
mov
dec
icebp
pcmpgtb
push
pop
mov
aas
jge
and
push
jecxz
pop
dec
ja
push
div
or
(bad)
aam
in
jnp
push
sub
sti
lock
out
mov
jl
sti
push
xchg
mov
cld
sti
f2xm1
adc
repnz
adc
shl
test
and
pushf
mov
xchg
xchg
test
mov
aad
neg
lea
xchg
ffreep
test
pop
dec
xor
sti
iret
aas
int3
pop
ret
adc
sahf
push
retf
push
cmps
js
(bad)
cmp
add
and
scas
out
rcl
bound
ret
ins
test
xor
ror
(bad)
and
sub
pop
push
cmc
and
xor
mov
mov
jmp
fadd
mov
inc
es
cmps
push
ins
pushf
mov
adc
cs
jnp
call
leave
int
add
(bad)
xchg
pop
xchg
test
imul
pop
fstp
xchg
fiadd
aam
ret
into
xor
mov
and
aaa
int3
(bad)
mov
iret
inc
xor
cmps
std
mov
mov
pop
and
add
jo
test
mov
adc
and
add
push
push
cld
push
mov
add
fwait
mov
xchg
mov
fisub
fiadd
sub
pushf
mov
movhps
fdiv
and
push
mov
in
sub
imul
test
outs
(bad)
inc
add
mov
cmp
popa
hlt
or
mov
push
out
and
mov
mov
lock
jo
repnz
dec
inc
aaa
mov
xor
in
imul
ins
jb
or
(bad)
and
lods
rcr
mov
push
inc
jge
fidivr
add
mov
test
push
mov
jb
test
cmp
jne
test
push
mov
clc
push
cmp
dec
and
imul
(bad)
pop
aad
push
int
les
pop
xchg
or
mov
pop
push
push
jmp
int
daa
sbb
or
call
add
jns
jns
mov
bndldx
imul
fs
movs
sub
mov
test
test
adc
psadbw
loope
adc
mov
pop
pop
cmp
mov
loope
sub
aad
pop
ins
dec
dec
fldenv
dec
add
push
je
loopne
neg
sub
dec
sub
push
xchg
retf
pop
loop
adc
xchg
and
dec
(bad)
mov
popa
xchg
sub
hlt
adc
popf
xlat
outs
cmp
shr
mov
pop
fadd
loopne
in
icebp
shl
jmp
pusha
jle
ret
into
movs
pushf
fcom
add
mov
std
cs
icebp
jmp
fistp
mov
fild
inc
xchg
jecxz
pop
pop
lahf
cmp
or
in
mov
in
jno
mov
ins
cmp
sbb
lea
xor
add
arpl
sbb
or
cmp
push
test
test
add
mov
aad
(bad)
pop
and
ins
sti
sti
je
jmp
loop
xor
cdq
mov
cdq
in
mov
pop
mov
lahf
sbb
ficomp
cmp
pushf
dec
in
out
repnz
dec
adc
fnstcw
xor
int3
stos
xor
mov
int3
fsubp
push
and
stos
jg
scas
stc
cs
setns
out
cmc
enter
or
xchg
or
mov
adc
xor
fmul
(bad)
mov
imul
add
das
fstp
ret
jmp
lock
lds
mov
leave
xchg
stos
(bad)
xchg
inc
and
push
in
mov
sbb
pop
ds
mov
out
sbb
push
dec
mov
fwait
fs
cmc
mov
rcl
(bad)
sar
dec
into
push
sbb
sbb
out
loop
aas
xor
sahf
pop
add
mov
push
aad
cld
jg
cmp
pop
cs
pop
std
rcl
jecxz
frstor
xchg
hlt
mov
icebp
cmp
dec
add
fmul
add
stos
mov
dec
std
mov
outs
jnp
xchg
dec
mov
dec
test
cld
jge
movs
push
adc
cmps
dec
add
xchg
mov
xchg
cmp
addr16
in
fsubr
xlat
xor
inc
mov
imul
loope
out
mov
mov
push
jp
inc
push
mov
ins
pop
clc
jo
test
mov
push
mov
sbb
push
lods
out
int
leave
fdivr
in
pop
jb
outs
push
cmp
pop
pushf
ds
and
pop
mov
adc
cmp
out
nop
pop
mov
sub
stos
in
and
pop
ins
sub
jns
ret
pop
data16
stos
das
mov
and
outs
and
or
fsub
(bad)
jo
sbb
leave
int3
add
mov
add
lock
inc
sub
(bad)
sbb
push
mov
pop
jecxz
(bad)
sar
mov
jnp
addr16
jp
jmp
lds
dec
sub
repnz
daa
ja
(bad)
arpl
jg
push
push
pop
jae
xor
adc
loopne
push
xchg
adc
jmp
push
mov
sbb
push
dec
push
mov
adc
les
scas
cmps
gs
push
test
or
jb
mov
pusha
adc
push
mov
or
jbe
test
aas
call
and
ret
xor
stos
rcr
int
push
push
jnp
sbb
dec
jnp
xor
adc
repnz
mov
enter
and
mov
adc
cmps
jo
std
jg
push
push
mov
sbb
repz
mov
aad
dec
mov
adc
test
in
ja
sub
adc
stos
pop
pop
pop
and
cmp
and
cmps
test
data16
jnp
push
xor
dec
adc
adc
lods
test
cmp
sar
xchg
je
mov
jo
lods
mov
aad
scas
jmp
imul
ror
jmp
cmp
inc
sub
push
add
repnz
or
xor
jmp
xchg
pop
inc
mov
loopne
mov
test
in
add
sub
inc
xchg
sar
addr16
fwait
xchg
mov
add
lods
dec
mov
mov
mov
ins
hlt
mov
into
sub
(bad)
mov
jecxz
xor
mul
and
shl
add
mov
stos
pop
fdivr
repnz
lods
sub
daa
xchg
and
int
inc
movs
pop
in
mov
adc
cmp
movs
fstp
push
lahf
push
outs
cmp
inc
scas
add
push
nop
ss
call
xor
lock
shl
fimul
sbb
dec
inc
ret
push
adc
jae
push
add
out
(bad)
test
dec
lods
add
hlt
imul
push
in
call
mov
pusha
fadd
inc
outs
sub
mov
in
pop
repz
or
mov
int
sbb
xor
xchg
cmp
dec
mov
stos
push
aas
and
lock
cs
xor
mov
or
into
adc
leave
inc
dec
adc
stos
stc
lea
pop
mov
mov
(bad)
mov
retf
call
addr16
pop
outs
push
mov
dec
dec
pop
or
shl
push
xchg
lds
in
and
sub
scas
sub
cwde
out
mov
xor
fcmovne
adc
lock
lods
icebp
rol
into
shl
aam
cs
punpckhdq
mov
sbb
dec
adc
stos
daa
or
and
lods
dec
push
imul
mov
adc
jg
lock
mov
imul
addr16
mov
push
fnstenv
loopne
push
out
dec
imul
jae
jp
mov
dec
jmp
lods
jo
cmp
outs
push
jmp
pop
pop
jne
adc
xor
lock
stos
scas
dec
mov
callw
dec
jl
mov
cmp
cdq
sbb
(bad)
sahf
mov
cmps
imul
scas
repnz
sbb
cmp
mov
add
push
arpl
push
jl
inc
outs
sub
mov
jp
jnp
inc
fisttp
dec
es
dec
push
mov
cmp
mov
mov
call
push
clc
stc
sub
sbb
(bad)
xor
xchg
out
mov
push
pop
not
inc
test
(bad)
push
cmp
pop
cmp
jns
adc
xor
(bad)
loope
aam
xor
push
adc
fidivr
in
push
(bad)
and
jle
push
pop
out
ds
jns
in
pop
shr
mul
rol
retf
sbb
gs
push
pop
mov
sti
mov
dec
mov
or
mov
cmp
call
cs
mov
stos
rol
call
scas
lahf
cmp
jmp
addr16
xor
out
aaa
dec
nop
fistp
sub
pusha
dec
cmp
in
add
nop
cmp
movs
cs
and
nop
push
jae
sbb
pop
jg
sub
xchg
sub
jno
inc
in
pop
cs
mov
clc
(bad)
xor
push
sbb
scas
and
sub
mul
mov
fidiv
and
inc
repnz
and
add
mov
dec
hlt
aaa
test
add
repnz
hlt
dec
das
xor
push
mov
repz
out
mov
cmp
push
test
retf
dec
pop
and
inc
or
mov
sar
adc
xchg
mov
fisttp
mov
mov
add
or
pop
adc
mov
pop
add
pop
ins
mov
push
adc
fist
cmp
lahf
dec
sbb
jp
(bad)
imul
cld
mov
aas
setns
aas
and
jne
dec
stos
out
or
dec
cli
mov
shr
jmp
push
sbb
cli
xchg
and
es
test
iret
shl
push
cmp
cmp
mov
aas
loope
aas
in
mov
iret
cmp
xchg
sar
lods
icebp
push
in
and
jecxz
out
cmps
mov
in
cld
mov
lahf
and
dec
sbb
jge
ror
adc
add
and
adc
jmp
shr
aaa
test
dec
dec
sar
pop
out
or
jb
adc
adc
gs
loop
gs
fadd
pop
test
dec
fnstenv
dec
xchg
mov
adc
ret
scas
mov
out
out
popa
int3
xor
mov
inc
ror
mov
gs
das
aad
dec
bound
add
clc
ins
sbb
mov
mov
in
add
prefetch
or
ss
and
xor
stos
dec
inc
shr
call
cli
aaa
mov
inc
bound
adc
ss
int3
addr16
sar
in
jo
and
mov
enter
jmp
adc
jle
test
dec
push
jb
cld
popf
repz
cmp
aam
mov
mov
push
mov
add
loop
sub
aas
xchg
aaa
or
xchg
scas
gs
add
pop
enter
out
loope
daa
mov
jge
jp
ins
(bad)
out
ss
imul
inc
das
sbb
(bad)
lock
pop
loop
in
rol
sahf
sub
aam
jg
ins
pop
xchg
cmps
popf
push
jno
icebp
inc
xchg
bound
push
jne
sub
pop
ds
xchg
xor
dec
(bad)
mov
mov
imul
push
xchg
(bad)
pusha
sub
stos
mov
and
(bad)
jl
push
push
push
add
cli
int3
ins
mov
dec
sub
lea
test
ja
pop
xchg
scas
dec
jns
mov
mov
sbb
pop
and
nop
outs
xchg
and
xchg
xchg
xchg
inc
dec
jge
retf
cmp
loopne
or
icebp
enter
jge
loop
mov
fwait
imul
add
jecxz
pop
cmp
inc
or
sub
push
inc
or
xchg
cmc
fs
mov
les
jbe
and
jmp
dec
imul
std
pop
push
add
push
cmp
sub
sahf
lods
pushf
inc
sub
sete
pop
dec
pop
mov
test
jmp
pop
mov
sub
(bad)
and
outs
ja
and
sbb
cmp
inc
add
fs
stos
outs
add
loope
mov
adc
into
jo
mov
push
cdq
mov
jge
lods
jmp
jle
lahf
sete
rcl
xchg
push
(bad)
ja
iret
sbb
jp
popf
sbb
jbe
add
push
jle
pushf
lahf
push
cwde
add
jp
fwait
mov
into
dec
inc
sub
les
jle
sub
in
cld
add
ins
(bad)
das
inc
ret
popa
popa
push
cmc
push
out
mov
fdivr
iret
push
inc
jl
push
std
push
xchg
in
ficom
push
cmp
into
cmp
xlat
or
fs
ret
leave
dec
add
push
add
xchg
arpl
push
mov
dec
shl
mov
push
xor
jbe
cld
into
xchg
scas
cld
xor
sub
xor
xchg
sahf
aas
mov
xor
(bad)
repnz
adc
adc
xor
jecxz
sbb
mov
inc
xchg
push
pop
pop
sahf
sbb
icebp
xor
cwde
add
jb
push
adc
jno
aad
mov
movs
dec
xchg
je
add
xchg
rcr
or
inc
adc
mov
add
into
test
fdiv
dec
cmp
fld
outs
and
retf
mov
data16
repz
xchg
cld
sbb
(bad)
mov
mov
xlat
js
add
mov
xor
lea
ds
cmps
lahf
mov
fdiv
cmc
pop
fcom
dec
dec
outs
fmul
and
and
jecxz
mov
xlat
gs
or
fmul
call
mov
jns
popf
jae
xor
cdq
pop
jp
sysret
neg
(bad)
iret
rol
xchg
pop
outs
mov
inc
dec
or
sbb
out
xor
(bad)
addr16
movs
xlat
cmps
add
adc
xchg
ficomp
jbe
retf
enter
jle
adc
(bad)
push
jp
popf
rcl
sbb
jecxz
add
pop
shl
jnp
or
mov
adc
push
imul
mov
lahf
inc
cmp
xor
xor
into
fdivp
cmps
(bad)
popa
dec
mov
call
xchg
jmp
(bad)
cld
neg
cs
enter
dec
fisub
pop
fistp
test
cmp
and
inc
test
(bad)
and
adc
cmps
fsub
or
pusha
bound
jecxz
pop
cmp
test
xchg
daa
mov
sub
(bad)
fst
add
fcom
mov
jbe
and
scas
or
add
out
test
dec
dec
mov
pop
jns
call
fs
xor
and
jno
dec
es
in
daa
clc
cmp
int3
jecxz
test
pop
stos
jecxz
jecxz
in
push
mov
loope
jge
jmp
(bad)
loop
inc
jg
or
pop
in
loope
out
test
js
push
xor
jno
cli
shl
aaa
aaa
sbb
sbb
and
fidiv
outs
out
jae
mov
shl
icebp
loop
inc
sbb
int3
xchg
or
dec
aam
adc
cmp
fldenv
pushf
cmc
or
bnd
inc
retf
add
xchg
cmc
push
mov
pop
mov
test
jmp
retf
and
jle
scas
in
das
dec
and
out
pop
rcr
hlt
adc
test
cmp
or
or
outs
jnp
sub
push
add
iret
mov
adc
push
test
das
mov
scas
leave
inc
pop
jge
inc
mov
fidivr
ret
hlt
das
rol
add
push
das
(bad)
mov
stc
dec
jb
outs
sbb
inc
mov
xchg
dec
push
xor
loope
or
clc
mov
cmps
cmps
dec
dec
cwde
leave
sub
jae
shl
jecxz
xchg
cmp
pop
inc
mov
jnp
pop
(bad)
fistp
sub
pop
test
ds
nop
pop
les
push
nop
(bad)
pop
xchg
scas
mov
push
out
scas
ins
in
pop
int3
mov
cld
dec
inc
sbb
jns
fidiv
pop
daa
mov
movs
in
mov
fstp
popf
mov
add
mov
(bad)
and
adc
loope
test
add
aas
cwde
sub
sbb
lgs
nop
pop
lahf
pop
inc
sub
int
add
xchg
mov
jmp
jo
or
cmps
rcl
inc
jo
dec
xchg
fsubrp
pop
add
inc
mov
(bad)
call
lods
cli
and
div
xchg
sub
push
mov
js
inc
mov
sahf
fadd
jb
push
sub
mov
mov
aad
push
test
sbb
mov
dec
loopne
add
popa
retf
movs
or
and
cwde
inc
adc
xor
inc
ins
mov
leave
xor
sti
retf
jmp
push
jns
out
std
push
pop
dec
mov
mov
fnstenv
inc
out
lods
dec
faddp
dec
jle
dec
jl
cmp
retf
retf
gs
addr16
and
pop
cmp
or
pusha
mov
cmp
add
imul
pop
add
ror
cmps
inc
jge
add
xchg
cmp
pop
in
and
jg
cmps
push
aaa
outs
xlat
ret
int
ins
iret
push
daa
add
xor
jns
cmp
push
mov
sub
push
(bad)
adc
ja
inc
jp
push
mov
cdq
inc
push
lods
cmc
sbb
stos
ins
jmp
jae
adc
jae
ins
xchg
xchg
sbb
outs
loop
ret
leave
bound
xchg
out
mov
(bad)
mov
xor
pop
movs
movs
neg
mov
iret
and
sti
mov
xchg
loope
push
dec
add
push
lea
xchg
xor
sub
and
clc
adc
push
mov
scas
enter
add
xor
cmp
jecxz
or
(bad)
repz
inc
jmp
or
cmp
push
test
push
mov
jne
add
or
jg
ss
mov
(bad)
and
adc
push
xor
mov
mov
jge
cld
(bad)
out
lods
sub
aam
jno
(bad)
fldlg2
popf
mov
mov
lock
test
(bad)
mov
jmp
rcl
fistp
add
jmp
mov
pop
dec
fwait
nop
push
push
jp
inc
mov
adc
inc
jecxz
add
sahf
push
inc
sbb
and
(bad)
inc
loopne
xchg
sbb
or
scas
stos
pop
into
cmc
out
fdiv
dec
mov
add
das
rol
push
scas
test
fcomp
sbb
lahf
popa
adc
jl
repz
enter
mov
sub
mov
push
mov
mov
lods
stos
adc
(bad)
fs
lea
out
or
cmp
ror
jmp
xchg
loope
out
xor
bound
mov
or
cmps
ins
fucomi
fwait
nop
push
cli
sub
fwait
or
mov
aam
cmc
cmp
mov
ja
call
or
sbb
sub
imul
add
std
push
mov
aas
dec
rol
xchg
mov
jne
div
daa
lock
inc
cdq
and
mov
jmp
push
push
jge
mov
jne
aaa
adc
mov
and
scas
inc
pop
test
lea
pop
popa
outs
daa
lea
cmp
das
ja
aas
inc
jg
lods
outs
int
je
(bad)
or
pop
fcmovnu
mov
es
popf
jae
jno
or
xor
ret
(bad)
sahf
(bad)
fild
pop
xchg
inc
add
xor
mov
or
adc
out
jnp
jae
mov
loop
int3
addr16
adc
mov
aad
imul
out
test
daa
xchg
cmc
std
add
stos
iret
addr16
ds
xrelease
pop
in
push
and
add
jp
(bad)
cld
pushf
sbb
mov
mov
pop
and
out
pop
mov
inc
push
xor
(bad)
and
xchg
add
mov
push
leave
out
mov
ficomp
arpl
test
outs
or
cmps
mov
mov
jmp
ins
sti
in
shl
aad
shr
daa
pop
ins
imul
pop
or
pop
repz
dec
cs
test
mov
or
dec
add
jmp
inc
popf
lea
xor
mov
xor
or
inc
bound
xor
fucomp
adc
push
aas
mov
out
sbb
test
pop
clc
inc
and
in
sub
sahf
leave
sub
and
inc
or
xchg
out
jp
and
sub
mov
test
xchg
mov
iret
es
cmc
pop
dec
and
dec
and
leave
pop
jb
add
lds
dec
sub
sar
lock
sbb
(bad)
dec
push
dec
scas
sbb
inc
fnstenv
(bad)
cmp
mov
xchg
jae
push
and
movs
popa
cmp
mov
js
xlat
test
ins
cmp
inc
in
sar
jo
push
pop
ret
shl
enter
push
xor
and
cmc
cwde
xor
mov
pusha
stc
cs
xchg
inc
cmps
push
and
cmps
xchg
(bad)
mov
xchg
rcl
push
sti
sbb
jg
ins
pop
(bad)
mov
and
add
mov
mov
sub
mov
out
lods
dec
ret
push
add
xchg
cmp
in
gs
test
clc
xchg
mov
jne
movsx
cmc
dec
cmc
popf
arpl
imul
sahf
fbld
jecxz
cld
adc
in
icebp
push
ret
jge
xor
repz
push
add
and
scas
daa
push
cmp
push
outs
jmp
arpl
repnz
retf
mov
(bad)
jb
imul
pop
inc
icebp
getsec
enter
imul
mov
call
or
icebp
aam
test
adc
stos
(bad)
xchg
jge
sub
inc
sbb
sbb
cld
stos
mov
mov
pusha
sub
mov
out
mov
jg
xor
mov
jl
cmp
lds
mov
out
clc
mov
gs
popf
xchg
les
mov
cld
inc
xchg
adc
pop
inc
leave
mov
rcl
icebp
(bad)
mov
mov
(bad)
fnstenv
mov
mov
inc
ror
fcmovnu
lods
mov
cmp
out
(bad)
inc
xchg
pop
sbb
loop
out
or
lods
push
cld
add
retf
cmp
pop
lock
pop
jmp
movs
data16
scas
(bad)
loope
fs
sbb
xor
mov
shl
add
shr
sbb
ret
adc
das
daa
repz
shl
adc
int3
bound
sub
ret
in
sti
cmps
jne
cmp
sub
ds
push
pop
je
inc
(bad)
aas
sbb
jge
jne
adc
or
lds
xor
or
mov
xor
add
vpackssdw
(bad)
test
add
pop
xor
cwde
mov
sub
mov
dec
arpl
sub
adc
mov
frstor
int
cmps
xchg
cs
mov
sahf
push
pushf
mov
es
xor
sub
rcl
push
test
cwde
inc
jmp
add
in
hlt
push
sbb
aam
inc
add
aaa
call
xchg
push
xchg
cmc
push
push
clc
adc
sub
adc
cmp
iret
icebp
rcl
cmp
push
mov
xor
jg
jb
ret
xchg
imul
fld
addr16
xchg
and
push
int3
mov
scas
push
push
imul
sbb
xor
int3
inc
(bad)
jne
cwde
mov
rcl
fidiv
in
mov
xchg
sub
jmp
loopne
ins
jbe
stos
and
and
pusha
inc
test
sub
call
and
mov
sar
sub
scas
pushf
into
mov
cwde
(bad)
out
dec
add
dec
push
mov
movs
pop
push
sbb
mov
pop
pop
sub
cld
cmps
xchg
cmc
pop
cdq
pop
loopne
mov
mov
neg
outs
dec
add
scas
cdq
rol
loop
test
pushf
in
retf
in
mov
xor
loop
mov
lock
into
les
push
mov
pop
loopne
jns
test
fisub
loopne
je
dec
popa
jp
(bad)
mov
or
pop
xor
add
test
pusha
aas
mov
inc
sub
stos
push
sti
fcom
sbb
jne
nop
lahf
shl
add
or
mov
add
push
inc
sub
mov
push
or
retf
xchg
sar
ret
mov
rcr
push
xor
repnz
cdq
lock
shl
lock
jo
sbb
push
push
add
mov
xchg
xor
jecxz
or
aad
out
dec
mov
mov
jb
out
lods
daa
sbb
sub
sub
js
dec
jb
cmps
cdq
dec
ins
cmp
cld
jne
xchg
jb
cmp
fild
daa
add
nop
stos
ret
cmp
pop
fs
mov
dec
xor
mov
lods
sbb
daa
fsub
mov
outs
jno
add
push
cmp
xchg
mov
dec
pop
outs
lahf
cli
push
or
mov
cmp
stos
cmp
mov
inc
ja
adc
retf
mov
jae
or
or
inc
mov
fwait
ins
xor
in
jg
aas
shr
mov
dec
xchg
mov
js
pop
aad
ins
cmp
movs
xor
dec
cli
mov
(bad)
mov
les
lds
mov
das
cmc
push
adc
xchg
imul
xor
mov
and
sbb
cmp
popw
mov
cld
xor
push
retf
test
pop
adc
shl
sub
sbb
mov
into
data16
sub
jecxz
cmp
outs
fnstsw
sub
imul
aam
push
(bad)
pop
sbb
sbb
aaa
inc
out
jg
or
ret
mov
lods
ret
or
pop
aas
out
hlt
retf
add
push
pusha
cmps
mov
test
mov
fld
leave
inc
mov
push
inc
xor
mov
repz
fwait
test
mov
cs
(bad)
jmp
das
ss
jnp
xor
bsf
add
into
(bad)
fwait
sbb
int3
mov
inc
hlt
loop
test
jmp
sub
cmp
rcl
dec
ss
mov
mov
mov
lods
(bad)
xchg
les
add
sub
adc
inc
xor
mov
cwde
pop
movs
jno
stos
jp
fiadd
mov
sbb
das
and
mov
add
call
clc
jbe
sbb
int
jne
daa
sub
dec
mov
mov
inc
fsub
add
jnp
cmp
call
add
fst
loop
sub
dec
mov
inc
shr
test
adc
adc
or
add
ror
mov
mov
pusha
inc
gs
mov
jb
pusha
mov
xchg
jo
mov
iret
leave
loop
or
jl
cwde
jmp
cmps
loope
dec
push
adc
xor
lahf
mov
cmp
dec
xchg
sbb
push
rol
xlat
jg
ss
sbb
je
sub
jle
mov
dec
mov
mov
in
mov
sub
sbb
fisub
jne
outs
retf
outs
or
retf
push
jle
out
das
in
inc
xchg
retf
add
add
add
iret
pop
jmp
cmp
push
cmps
lock
cmp
mov
fiadd
push
add
shl
jecxz
stos
adc
retf
lods
imul
xor
push
jl
add
repnz
mul
leave
push
push
add
xor
push
push
adc
stos
dec
or
sbb
aas
call
xor
in
dec
dec
sar
out
sti
out
dec
and
cmp
mov
sub
mov
int3
add
xchg
fisttp
retf
cmovs
pop
push
and
mov
and
in
pop
in
push
mov
ss
or
and
xchg
sub
jno
or
mov
xchg
fcomp
or
dec
ds
sbb
pusha
dec
dec
xchg
jp
sub
retf
jbe
fsub
inc
lahf
and
leave
mov
loop
stos
ficomp
shl
cmp
pop
mov
(bad)
fwait
sbb
retf
fcomi
or
sbb
in
dec
arpl
movs
aas
inc
ss
(bad)
lds
push
xchg
jmp
fs
sbb
movq
in
icebp
leave
dec
and
push
lahf
mov
lea
cli
es
jmp
mov
in
add
jecxz
movs
push
mov
out
xlat
sar
ds
xchg
mov
test
das
sub
xor
pop
(bad)
push
call
shl
mov
jnp
xchg
rcr
adc
cmc
shl
sbb
dec
sbb
inc
mov
cli
inc
lds
jmp
xchg
dec
xchg
mov
jmp
cli
sahf
les
and
jp
jmp
in
or
xchg
pop
push
cmp
dec
outs
mov
xor
inc
dec
cmp
xor
inc
mov
scas
push
pop
ror
lods
dec
sub
daa
int
add
mov
push
lahf
mov
rcr
inc
sbb
(bad)
ds
xor
fcomip
xchg
mov
sub
adc
mov
(bad)
imul
sub
add
in
xchg
or
jb
adc
inc
jo
repz
aas
aam
dec
rol
call
mov
rcr
add
adc
scas
leave
inc
ror
loope
sub
xchg
ss
leave
pushf
jmp
dec
mov
das
in
xchg
inc
mov
xor
push
fistp
sub
or
fdivr
pop
jbe
push
(bad)
xor
test
sbb
data16
dec
inc
lea
mov
scas
(bad)
mov
and
test
cmp
sbb
xor
out
adc
aad
outs
rcl
test
mov
ins
or
push
mov
sbb
xor
movs
push
fild
rol
push
es
in
pop
mov
mov
jae
int3
hlt
hlt
mov
dec
cmps
xchg
jnp
out
out
adc
repz
or
or
icebp
ss
cmp
push
dec
outs
jmp
mov
mov
out
inc
neg
mov
mov
mov
xor
arpl
loop
in
lock
inc
ins
call
jno
sahf
jge
popa
fld
es
dec
(bad)
das
push
int
jmp
sbb
lds
add
jne
in
mov
adc
fbstp
ret
rcl
sbb
retf
mov
fcomp
test
xchg
mov
cs
loope
sub
and
jmp
lds
stos
cli
sub
jnp
rcl
or
add
jo
mov
adc
cmp
shr
jbe
sbb
arpl
pushf
mov
pop
stos
cdq
sbb
add
mov
push
sbb
mov
test
inc
or
rcl
sbb
test
or
movs
std
stc
jbe
icebp
(bad)
cld
pop
gs
adc
movs
test
xor
enter
scas
jecxz
imul
js
pushf
adc
fcom
(bad)
je
sar
test
mov
out
xor
cdq
pop
xor
jmp
xchg
sub
jle
test
loope
lods
xlat
(bad)
outs
mul
sbb
stos
lods
(bad)
cdq
mov
pop
adc
pushf
cmp
leave
push
fild
es
stos
sbb
cdq
aaa
jns
cmp
inc
jne
test
(bad)
sti
cwde
sbb
sahf
stos
mov
sub
(bad)
and
sbb
xchg
in
jge
enter
addr16
mov
ret
mov
push
fld
std
sub
(bad)
call
clc
inc
push
das
mov
inc
(bad)
lock
jg
ret
cmp
xchg
sbb
xor
movs
push
lahf
push
fiadd
sbb
je
xor
or
stos
jp
mov
frstor
sbb
mov
xor
inc
jno
mov
loop
dec
jmp
retf
sar
cmps
mov
xor
dec
scas
pop
adc
adc
add
sar
test
mov
lds
xor
push
sub
xor
dec
ds
or
xchg
adc
imul
ds
popa
fist
jmp
xor
cmp
loop
leave
cdq
xchg
and
xor
hlt
mov
out
sbb
stc
and
mov
ret
jo
xchg
cli
mov
xchg
fs
sub
or
dec
lahf
imul
adc
arpl
mov
lahf
dec
stc
dec
rcr
xor
xchg
cmp
xlat
stos
jnp
mov
add
inc
add
scas
xchg
xlat
out
cmp
and
xchg
rcr
rcr
test
jmp
stos
pop
pop
xchg
adc
jp
bound
loop
push
in
stos
imul
xchg
xchg
lahf
test
mov
adc
loop
mov
sbb
mov
cmp
inc
sub
jmp
mov
mov
push
dec
adc
ja
rcr
add
lds
xor
cmc
shl
xchg
into
outs
mov
ror
call
mov
neg
cmp
cmps
jg
push
dec
aaa
push
xchg
rep
cmps
mov
mov
jmp
jmp
cmp
xor
push
lea
xchg
jae
in
xor
push
test
jbe
xchg
test
imul
or
xor
std
push
lods
imul
(bad)
or
ret
bnd
sub
mov
jne
pop
add
psubd
call
inc
xchg
cmp
(bad)
(bad)
xor
mov
les
mov
loopne
bound
adc
das
in
jb
fcmove
jno
cli
ss
inc
sahf
push
sbb
jmp
fcomip
test
loope
dec
add
into
das
mov
dec
inc
inc
pop
xchg
mov
add
sub
leave
mov
mov
daa
ds
test
sub
xchg
mov
inc
and
and
push
inc
jmp
push
int
xor
ja
and
retf
(bad)
and
cmp
mov
retf
test
cmp
sbb
mov
iret
stos
lahf
pusha
aas
pop
mov
sub
or
clc
mov
leave
sahf
jg
jmp
inc
adc
inc
in
loope
xchg
fisubr
in
sti
sbb
mov
out
mov
clc
cmps
repnz
shr
test
sahf
pop
dec
nop
(bad)
std
cwde
scas
adc
sbb
push
(bad)
pop
add
das
pop
sub
or
test
add
scas
pop
fcom
ja
out
sub
repnz
jle
mov
add
dec
xchg
(bad)
retf
xchg
jno
leave
mov
add
cli
xor
nop
mov
iret
pop
sub
sar
pop
loope
fistp
xchg
add
or
push
adc
pop
outs
jbe
adc
add
sar
movs
repz
mov
or
(bad)
mov
cld
cwde
inc
or
(bad)
sti
and
stos
test
jbe
cmp
mov
jmp
out
adc
popf
and
xlat
stos
clc
add
xchg
(bad)
imul
mov
mov
and
xor
cmps
out
gs
jg
jle
js
or
lock
or
lock
ret
mov
leave
dec
sbb
push
add
pop
movs
jb
cmp
pop
enter
(bad)
fistp
leave
dec
mov
movs
stc
push
sbb
pop
repnz
sub
sbb
inc
mov
sar
or
push
movs
int
and
pushf
js
cmps
jmp
sbb
int3
loop
or
loop
mov
jg
sub
out
lahf
inc
xor
arpl
fcomp
stos
mov
lea
fsub
add
jo
fisub
pop
mov
bound
push
inc
popf
call
pop
dec
xchg
addr16
lods
jo
mov
push
adc
lahf
adc
ins
je
sub
or
ins
pop
sbb
jmp
mov
aad
shl
movs
xchg
outs
fstp
(bad)
scas
dec
sar
mov
scas
add
jns
adc
sub
(bad)
cmc
sub
fucomp
push
add
xchg
inc
xlat
or
into
rcr
xor
ffree
pop
ret
iret
div
cmps
call
call
movs
cdq
mov
ffreep
xor
es
imul
push
imul
and
sub
mov
pop
cmp
lods
loopne
push
mov
and
int
cwde
add
dec
cdq
push
inc
xlat
popf
jb
scas
xor
mov
jmp
(bad)
jge
cmp
xchg
hlt
mov
mov
or
push
push
ins
les
loop
stos
scas
loope
sbb
(bad)
push
push
adc
int
dec
xchg
cmp
into
jnp
out
fild
xchg
push
setl
sbb
mov
lds
pop
pop
(bad)
push
mov
mov
cld
sbb
pop
enter
jns
dec
mov
lds
shr
mov
arpl
jns
adc
dec
pop
xchg
inc
out
in
stos
fwait
xchg
fwait
jbe
mov
push
xchg
inc
mov
cmp
fiadd
xchg
je
test
dec
mov
xchg
sub
xchg
lahf
cmp
sbb
pop
pop
xor
sub
stc
mov
popa
mov
(bad)
shl
call
pop
inc
adc
pop
fdivr
sahf
sub
jp
ds
inc
mov
cmp
fdivr
mov
jae
mov
sub
les
sbb
xor
or
jmp
ss
and
mov
out
push
popa
data16
xor
xor
push
scas
mov
inc
jmp
in
sbb
test
push
add
popf
or
ds
mov
div
das
add
daa
or
ficomp
js
jle
pop
leave
cmp
dec
movs
sub
jbe
jno
dec
cmp
mov
sbb
aad
ins
mov
(bad)
ins
fiadd
sub
sbb
mov
mov
mov
pop
lahf
fnsave
mov
dec
sbb
in
or
sub
imul
inc
adc
hlt
dec
cmp
jmp
mov
push
lahf
push
fs
xchg
pop
mov
or
add
cmps
stos
push
stc
cwde
xchg
xor
push
and
cmp
jmp
mov
sbb
xchg
mov
mov
in
ins
popa
ins
push
cmps
popf
std
dec
adc
out
dec
mov
inc
mov
repz
xor
mov
sbb
sub
test
int3
mov
fwait
sub
pop
or
push
mov
inc
in
out
gs
test
out
mov
adc
fsub
mov
or
test
std
dec
ret
fld
dec
sub
xor
cmp
mov
mov
scas
(bad)
mov
enter
xor
pop
pop
lahf
sbb
pop
add
mov
mov
les
xchg
inc
pop
push
mov
pop
jbe
inc
aaa
and
jl
pop
mov
sti
push
popa
out
jne
mov
neg
push
out
dec
test
xchg
sbb
inc
and
cdq
rcl
inc
jmp
cmps
add
stos
lods
das
mov
sub
and
adc
out
data16
dec
out
stc
(bad)
cmp
aas
jecxz
out
mov
stc
inc
mov
in
xchg
ret
imul
adc
fld
mov
scas
repnz
pop
jp
pop
cmps
nop
inc
xlat
mov
dec
repnz
jmp
cmps
imul
sub
in
ins
push
mov
pop
jnp
popa
imul
mov
mov
or
and
jae
sahf
iret
jnp
imul
inc
mov
mov
aas
mov
loop
ss
or
stos
cmp
ins
(bad)
out
jb
mov
add
(bad)
cs
into
in
call
dec
(bad)
sti
push
sub
mov
(bad)
nop
aaa
out
sbb
shr
add
sub
stc
shl
out
scas
jo
mov
int
dec
fistp
jmp
jns
leave
inc
sub
sub
frstor
jns
dec
sub
push
mov
fnstcw
bound
popa
jo
pop
mov
(bad)
das
or
add
fisttp
fwait
xor
jbe
cwde
dec
gs
cmc
loop
cmp
nop
cs
pop
leave
and
sub
pop
jecxz
jmp
dec
xor
dec
retf
xchg
retf
or
js
mov
xchg
test
rcr
int
imul
ret
sbb
into
(bad)
and
xchg
outs
xchg
add
lods
mov
sub
push
xchg
inc
lea
ss
outs
or
jns
xor
jmp
repz
mov
mov
and
cmps
movs
add
or
mov
sbb
inc
call
clc
push
or
xor
cdq
hlt
push
add
repnz
xchg
mov
jg
test
hlt
sbb
add
dec
jecxz
(bad)
push
popf
sbb
mov
pop
(bad)
popa
retf
fcom
je
adc
mov
stos
mov
lahf
fsubr
cli
jne
mov
stc
mov
lea
es
femms
in
mov
adc
repnz
or
outs
js
add
addr16
pop
and
inc
mov
retf
test
cmps
mov
outs
jge
icebp
outs
mov
aas
idiv
sub
scas
(bad)
dec
dec
and
popf
dec
ins
xor
mov
ins
cmp
fidivr
nop
xchg
push
push
aad
jle
lods
ins
xchg
add
movs
mov
movs
add
aas
ds
mov
dec
pop
inc
(bad)
ja
std
cdq
adc
outs
bound
mov
outs
and
mov
sbb
add
mov
cld
add
(bad)
stc
cld
ss
cmp
(bad)
cli
cmc
cwde
loop
loope
sti
dec
jmp
bound
fst
ror
mov
add
pop
adc
sub
call
sub
jns
rcr
out
jle
sub
pop
adc
shr
je
repnz
mov
xor
cmp
mov
(bad)
es
inc
imul
(bad)
aad
and
enter
xchg
xor
stos
dec
(bad)
pop
lods
bound
fnstenv
fs
jmp
call
mov
inc
mov
pushf
mov
xchg
jnp
jnp
inc
jp
iret
int
mov
jmp
sbb
sub
jg
out
push
jecxz
aas
arpl
fcmovnu
xor
push
push
arpl
in
dec
mov
or
scas
out
or
mov
mov
mov
jns
sahf
pop
xor
sti
sbb
jae
mov
pushf
in
push
sub
mov
and
arpl
cs
rcl
sub
xor
push
dec
mov
and
xchg
and
add
iret
aam
retf
sub
sub
xchg
xor
mov
mov
(bad)
mov
xchg
and
mov
fisttp
pusha
adc
add
stc
std
loopne
and
cmp
jmp
jno
movs
xchg
jl
mov
repnz
cwde
cld
cs
jae
or
std
or
jp
shr
inc
add
push
inc
lahf
sbb
movs
pop
scas
(bad)
sbb
lahf
icebp
ret
cmc
push
pop
ret
sub
xor
pusha
retf
add
mov
ins
cwde
aam
mov
in
fadd
out
aaa
dec
dec
inc
popa
mov
sti
aaa
jp
sbb
mov
shl
movs
outs
or
test
je
call
add
sub
ins
fidivr
sbb
sub
push
xor
test
popa
dec
(bad)
mov
fcomp
fimul
jmp
jne
dec
into
movs
xchg
cmps
inc
rcr
test
push
xor
hlt
push
aas
jnp
test
mov
fcmovb
data16
mov
sub
jb
lods
clc
xor
retf
pop
inc
push
addr16
mov
movs
fild
add
fnstsw
sub
sahf
mov
stos
sub
sbb
pop
cmp
fmulp
test
jg
enter
pop
cmp
sbb
mov
or
aas
or
or
push
push
aad
pop
dec
jecxz
jge
inc
inc
arpl
xor
ret
not
cmp
add
int
or
mov
jmp
pop
xchg
push
xchg
mov
loope
cdq
push
stc
inc
sub
arpl
sbb
push
cmpps
jmp
aaa
add
stos
lods
adc
and
mov
or
(bad)
xchg
sti
or
fld
fwait
das
or
jnp
lds
xchg
mov
rol
mov
je
nop
stos
dec
jp
pop
leave
bound
add
ins
lods
push
adc
xchg
jns
jl
pop
push
jg
or
adc
inc
push
pop
adc
add
test
cwde
mov
retf
cmc
sbb
xchg
in
sbb
bound
inc
xor
pop
enter
push
stc
aad
arpl
push
dec
sub
inc
and
out
ins
cmp
dec
std
int3
push
mov
cs
xchg
xor
add
imul
rcl
jge
sub
enter
mov
xchg
jae
test
icebp
dec
add
mov
xor
inc
outs
rcr
adc
out
int
jmp
jb
or
mov
popf
and
pushf
or
(bad)
mov
loop
xchg
rcl
enter
inc
push
sub
hlt
inc
mov
pop
lods
sub
mov
mov
scas
cmp
jmp
lock
sub
aam
cmp
sub
iret
aas
into
xor
jo
test
inc
mov
jnp
ins
aam
inc
fbstp
xchg
outs
jp
imul
xor
jg
or
jmp
(bad)
enter
iret
(bad)
sbb
xor
xor
mov
jp
xchg
sbb
jg
add
jae
inc
adc
sub
pop
addr16
loop
jb
pusha
jl
push
cmp
mov
mov
clc
sbb
mov
rol
inc
aad
and
test
(bad)
adc
gs
sub
arpl
mov
jle
outs
jmp
jge
fs
mov
mov
movs
or
ins
ins
jb
or
ret
mov
repnz
jbe
or
bound
dec
push
fucom
call
clc
push
mov
add
iret
inc
adc
cs
pop
mov
mov
push
popa
jne
mov
int3
rcl
in
lahf
lods
xchg
call
shl
add
fnstenv
sub
fcomp
pop
cmp
and
cdq
xchg
mov
dec
clc
ret
adc
push
cmp
push
add
pop
addr16
sub
movs
nop
loop
retf
mov
out
mov
mov
ret
pop
push
dec
inc
xor
xchg
mov
jge
mov
call
test
clc
imul
push
adc
and
jp
cdq
bound
jne
inc
push
jb
push
sub
sbb
sub
pop
fwait
jae
xchg
mov
pop
push
jne
inc
dec
mov
dec
es
inc
fmul
arpl
pop
pop
xchg
dec
out
sbb
dec
xor
xchg
rol
adc
test
inc
(bad)
in
addr16
fucomi
pop
mov
dec
imul
dec
cdq
push
loopne
mov
test
cmps
cwde
xchg
or
movs
pop
inc
(bad)
iret
and
aas
shl
in
or
(bad)
pop
inc
push
fwait
mov
cmp
jecxz
les
or
popf
adc
xlat
inc
mov
int
sbb
add
inc
jmp
mov
mov
call
loopne
cmp
fld
push
xchg
das
(bad)
int3
das
xchg
and
ret
pop
xchg
outs
sbb
lds
pop
or
(bad)
mov
mov
xchg
sbb
jns
mov
pop
cmp
mov
repnz
pop
push
xor
sub
loop
xchg
push
xor
xor
mov
or
loop
out
mov
dec
push
and
dec
adc
mov
popa
adc
cmc
sub
ins
mov
adc
jmp
add
add
int
sbb
jmp
adc
fs
ins
(bad)
adc
in
mov
ret
aad
sbb
pushf
into
ja
cmp
and
cdq
xchg
clc
test
cdq
rcr
pop
pop
jp
push
mov
dec
xchg
push
out
mov
mov
mov
and
push
lea
das
pop
test
sub
movs
pop
jl
jl
add
fucomp
bound
aam
cmp
mov
mov
sub
sbb
scas
mov
repz
sub
push
iret
popw
xchg
push
pop
loop
or
daa
loop
call
xchg
stos
xchg
dec
ins
or
xchg
out
mov
fwait
pop
cmps
int
inc
cli
add
mov
iret
lock
xchg
outs
clc
push
les
or
jp
cdq
leave
adc
mov
jecxz
cmps
xchg
cwde
aam
pop
mov
js
pop
jo
inc
jle
fwait
sub
mov
xlat
pushf
jg
cmp
dec
dec
dec
ss
frndint
std
addr16
inc
mov
push
shr
pop
ins
sahf
pop
ficomp
icebp
lock
jle
ins
adc
jno
movs
in
jnp
ror
ror
dec
cmp
out
aas
call
sub
adc
nop
jmp
or
pop
movs
sar
and
lods
call
rol
in
sbb
mov
(bad)
daa
xchg
jle
cmp
mov
mov
mov
fbld
daa
iret
sub
or
pop
inc
sbb
xor
loop
cmp
cmps
xchg
jnp
(bad)
hlt
fadd
ret
mov
(bad)
test
inc
cs
ficomp
mov
xor
add
and
lods
mov
mov
add
int3
mov
popa
or
in
sbb
cmp
inc
inc
xor
jns
cs
jl
shl
pop
cld
mov
out
push
cmp
cmp
mov
jecxz
sahf
ror
loope
mov
dec
xchg
pop
jns
(bad)
je
data16
cmps
push
scas
shr
out
add
xor
stos
push
fstp
icebp
fnstenv
cmp
mov
xor
ror
retf
mov
mov
mov
out
nop
jle
xchg
rcr
out
sbb
ja
js
stc
xor
popa
(bad)
xor
sub
sahf
inc
cmp
es
sub
fistp
dec
and
stos
test
ror
fisubr
popa
inc
push
ret
ror
mov
aam
aam
mov
mov
jmp
pop
xor
dec
jne
sbb
out
pop
in
and
in
fbld
cli
shr
jle
sbb
call
push
xchg
adc
lea
fstp
jle
in
dec
out
pop
xor
(bad)
mov
in
ret
sbb
pusha
add
mov
xchg
xchg
pop
daa
pop
out
popa
or
xor
fdivr
pop
clc
add
nop
push
popa
sbb
mov
dec
jbe
xchg
test
in
or
xchg
sahf
cmovns
cmps
shl
or
mov
fstp
dec
call
mov
mov
push
mov
fwait
cwde
cmps
xor
or
sub
ss
outs
pushf
inc
sar
xor
mov
jecxz
aad
jne
call
ja
push
and
(bad)
push
mov
cdq
xor
mov
mov
dec
cs
call
retf
mov
xor
dec
or
and
imul
push
push
rol
dec
into
loope
fisttp
stos
sub
and
push
data16
push
add
xchg
loope
pop
call
inc
pop
rcl
scas
and
push
inc
mov
inc
sub
adc
mov
jle
push
and
lds
or
sbb
pop
pusha
(bad)
call
imul
inc
sub
cdq
stos
mov
fldcw
mov
(bad)
aam
shl
inc
push
xchg
push
stc
stos
aad
nop
sbb
dec
push
mov
(bad)
xchg
mov
movs
leave
data16
clc
in
inc
xchg
cmp
mov
push
(bad)
cdq
push
popf
and
fiadd
aad
or
add
push
mov
loope
scas
cmp
sbb
mov
xchg
out
push
dec
mov
push
ret
or
mov
call
or
jne
shl
inc
jno
sar
retf
call
imul
jp
cmp
shl
jb
neg
adc
jecxz
in
imul
xchg
imul
daa
popf
inc
sbb
outs
mov
addr16
add
or
out
retf
fstp
sti
inc
push
sub
mov
sbb
pop
or
scas
es
xchg
lds
inc
or
(bad)
pop
push
and
arpl
jmp
in
mov
push
gs
test
pop
dec
jg
cmps
pop
enter
add
js
sub
push
cmp
rol
mov
mov
inc
mov
push
mov
pusha
movs
ds
mov
xchg
jnp
(bad)
repnz
mov
dec
cld
push
cmc
stos
and
xlat
xor
mul
lahf
sbb
and
out
xor
push
mov
aaa
imul
loopne
call
sub
jmp
movs
stos
adc
mov
sbb
jmp
xchg
test
mov
cwde
sbb
mov
out
sub
cli
mov
push
jo
repnz
out
rol
ss
xor
add
pop
js
jns
and
neg
repz
cmp
add
mov
pop
(bad)
lock
adc
xchg
xor
loop
push
fild
add
mov
add
sahf
pxor
or
fcmovnbe
mov
ds
nop
jno
jmp
out
cmp
pop
xchg
cmp
or
repnz
scas
bound
push
lods
sbb
(bad)
xchg
mov
ds
addr16
push
out
loope
mov
jg
or
in
jmp
jo
pop
and
fs
(bad)
sub
shl
mov
clc
cmp
test
call
ret
in
jecxz
scas
test
cmp
loop
out
xor
ds
in
in
in
jmp
popf
push
jae
call
cmp
sub
xchg
imul
stos
dec
(bad)
cmp
fisttp
enter
dec
out
inc
iret
xor
inc
jp
ret
and
stc
and
cmps
lds
ret
ret
cs
push
pop
hlt
push
push
and
mov
or
dec
mov
pop
or
stos
jle
jmp
mov
or
retf
retf
mov
inc
mov
sbb
clc
xor
xchg
cwde
mov
xchg
lods
adc
push
stos
(bad)
or
cmp
aam
xchg
movs
mov
jne
int3
xchg
adc
jne
cmovne
xchg
sbb
sbb
mov
pop
test
inc
es
mov
neg
arpl
fsub
cmps
xchg
sub
or
outs
iret
adc
cmp
outs
jmp
inc
(bad)
push
mov
jecxz
push
mov
rcl
pop
movs
in
push
pop
push
mov
ror
(bad)
jmp
mov
pop
in
clc
fiadd
lahf
inc
xor
shl
and
out
pop
push
sbb
cld
hlt
cld
inc
xor
cmp
jmp
daa
add
pusha
mov
pop
cld
neg
inc
mov
push
ror
popf
mov
xor
mov
movd
in
xor
dec
test
movs
or
das
lods
push
(bad)
aam
inc
(bad)
(bad)
fs
pop
dec
aam
out
(bad)
loope
pop
push
out
adc
dec
push
outs
cmp
out
sbb
jne
sahf
popa
adc
js
cli
dec
idiv
pop
clc
movs
xor
test
fwait
jmp
cmp
dec
sub
loope
mov
retf
movups
out
inc
xor
sub
xchg
mov
push
lods
inc
push
cmp
pop
mov
pop
mov
stc
push
cmp
jb
scas
push
stc
int3
ins
dec
lahf
sbb
mov
mov
mov
dec
xor
pop
bswap
test
cmps
imul
shl
imul
test
jp
cdq
mov
mov
mov
xchg
ficom
add
mov
ret
xchg
jnp
in
dec
xchg
pop
pop
out
pop
loopne
adc
pop
mov
fimul
bound
ins
push
loop
xchg
push
and
dec
pop
fdiv
adc
or
loop
clc
div
mov
cs
ja
jb
movs
lock
out
aaa
pop
add
adc
sbb
push
mov
daa
sbb
dec
xor
xchg
mov
fsub
iret
sub
or
in
lock
std
rcl
lods
push
lods
adc
lods
and
xchg
add
add
pop
test
ins
jae
leave
sub
lahf
adc
lock
adc
retf
dec
repnz
ds
inc
dec
adc
fld
popf
and
xor
mov
rcr
jnp
mov
test
cli
ins
dec
pop
jmp
mov
retf
popf
jbe
add
inc
sbb
(bad)
and
dec
sub
dec
mov
call
jmp
cmps
in
bound
inc
cmp
mov
js
add
xchg
imul
push
pop
or
push
cmp
ret
inc
es
add
add
fadd
adc
jmp
pop
mov
xor
sbb
cmp
jb
mov
push
int3
pop
push
jmp
mov
popf
loop
into
ja
lahf
mov
mov
(bad)
jb
enter
retf
push
xchg
lock
icebp
outs
sbb
cs
popa
fwait
outs
adc
lods
mov
inc
sbb
sbb
clc
sbb
push
sbb
mov
mov
sti
js
xlat
cwde
movs
in
fs
push
mov
push
jb
std
xor
pushw
mov
jb
xor
pop
loop
(bad)
int
sbb
pop
loopne
fucomp
test
jnp
sbb
popa
pop
(bad)
retf
cmp
mov
icebp
in
jmp
pop
sub
add
push
enter
sub
or
cmp
pop
in
movs
mov
fild
push
cmp
lahf
fbstp
popa
retf
sub
xchg
clc
call
cmc
adc
jb
mov
jg
mov
jmp
(bad)
mov
pop
retf
cmp
(bad)
pushf
in
and
cs
add
pop
mov
js
or
jmp
in
fld
xchg
ret
stos
dec
call
dec
dec
pop
push
int
lock
adc
lahf
and
(bad)
cmp
jae
pop
add
call
mov
imul
mov
push
in
push
xchg
mov
sub
xor
xchg
pop
and
sub
push
repz
sub
pop
idiv
xchg
inc
movs
add
cli
push
mov
shr
sbb
jne
data16
or
sbb
aam
adc
push
repz
push
fdivr
out
lods
or
mov
add
adc
mov
sti
sar
and
(bad)
out
mov
ins
inc
mov
jb
dec
jmp
or
cmp
jl
dec
xor
adc
jmp
(bad)
outs
jno
sti
push
in
mul
fld
arpl
sar
dec
mov
outs
push
les
xor
into
hlt
adc
fldcw
and
cwde
dec
xchg
enter
sahf
mov
push
jmp
mov
add
ret
or
ins
jge
pop
mov
aas
in
ins
int3
xchg
add
adc
xchg
mov
mov
cli
pop
repnz
mov
scas
dec
call
push
sbb
dec
add
aad
push
fimul
mov
ja
fstp
(bad)
loop
fs
test
std
dec
adc
mov
mov
(bad)
push
leave
cmps
dec
sbb
sbb
pop
pop
and
dec
pop
ins
xor
jmp
inc
mov
fidiv
test
pop
mov
int3
test
sbb
xor
cwde
repnz
aad
movs
cmp
or
outs
sub
(bad)
mov
cli
cmp
cmc
les
xchg
cmp
inc
mov
test
add
adc
xchg
lds
xor
daa
jmpw
cdq
jmp
add
push
lods
sub
dec
icebp
jecxz
stc
jbe
dec
sub
add
aas
leave
sub
(bad)
frstor
dec
sbb
(bad)
int
hlt
push
jl
mov
pop
sub
icebp
inc
ss
push
mov
jo
icebp
pop
sbb
adc
movs
stc
cmps
mov
outs
mov
xchg
movs
cwde
stos
test
pop
nop
sub
popa
jp
dec
mov
div
ins
fwait
and
in
adc
aam
push
std
add
ret
enter
(bad)
adc
jb
pushf
push
lods
test
lds
scas
xchg
jno
xor
sti
aam
and
and
in
loopne
add
ja
movs
mov
stos
add
and
xor
adc
mov
icebp
bound
and
or
aad
mov
aas
xchg
mov
dec
add
scas
or
or
test
(bad)
into
mov
lods
push
daa
mov
shl
cwde
push
in
ss
jno
pushf
push
mov
xchg
retf
push
cmp
xchg
mov
mov
sbb
ins
aam
sub
sbb
sbb
imul
sub
pop
inc
push
xchg
push
fcomp
fmul
mov
les
jno
inc
and
mov
pop
aam
arpl
xor
push
lock
push
or
sub
cmp
or
xchg
test
mov
out
push
scas
mov
pop
inc
and
mov
call
sbb
dec
mov
pop
retf
lahf
push
dec
mov
fist
mov
imul
test
dec
ds
inc
rcr
xchg
hlt
rep
sub
xlat
ss
inc
mov
push
das
imul
test
sub
ins
push
mov
pop
(bad)
pop
inc
xor
mov
jae
push
lds
add
stc
call
sub
(bad)
mov
into
cmp
xchg
cld
xchg
shr
fnsave
pop
adc
sbb
dec
test
rcl
call
daa
mov
outs
add
add
aaa
inc
push
adc
jge
fcmovnb
mov
pop
loop
xchg
sahf
add
cmps
mov
leave
movs
jmp
cs
xchg
div
pop
sub
mov
cmp
dec
push
retf
xor
ss
retf
fcom
and
mov
xchg
sti
sbb
std
mov
and
arpl
fs
and
cwde
pusha
dec
push
sbb
cld
push
mov
dec
sbb
pop
mov
xchg
or
je
adc
pop
das
pop
mov
jmp
bound
(bad)
shr
xor
lods
in
pop
pop
sar
fild
adc
out
or
add
(bad)
sbb
cld
inc
sbb
arpl
mov
rcl
xchg
ja
test
ss
add
inc
push
xchg
pop
cdq
rol
inc
jae
sub
mov
add
dec
jno
ss
mov
and
mov
fwait
lock
jns
rol
out
movs
(bad)
sbb
inc
inc
repnz
outs
int
test
dec
mov
sbb
cwde
pop
loop
(bad)
jb
jge
jge
sub
and
(bad)
rol
pop
and
scas
mov
je
outs
not
xor
mov
fmul
into
sub
nop
js
in
sub
push
test
sbb
and
inc
popf
cmp
or
shl
inc
sahf
cmp
dec
sbb
js
loop
enter
cmps
mov
outs
lds
push
call
and
sub
repz
sbb
adc
bound
jmp
loope
lods
(bad)
mov
aad
jmp
call
mov
cmp
aad
das
bound
mov
fisubr
ret
int
add
push
mov
addr16
push
imul
jl
cdq
mov
test
mov
jmp
add
mov
(bad)
jge
adc
fnstcw
xchg
dec
jns
fsubr
mov
push
push
jmp
call
mov
popf
push
mov
xchg
lahf
cdq
sbb
retf
ror
dec
push
adc
push
pop
loopne
call
add
inc
(bad)
pushf
sub
imul
jmp
mov
jne
hlt
jecxz
lds
mov
jo
jno
pop
setne
ret
popa
push
push
jl
clc
jo
adc
inc
pop
mov
mov
xchg
loopne
jmp
jnp
imul
xchg
adc
std
loop
adc
push
mov
cmp
ds
adc
cmp
push
dec
in
retf
imul
(bad)
xchg
ror
test
sbb
cmc
(bad)
mov
in
and
xlat
sar
lea
retf
es
sub
xchg
fwait
push
pushf
mov
std
sub
lds
mov
in
inc
lods
aad
push
push
mov
xor
push
pop
rol
ret
push
push
xlat
lods
xchg
ja
mov
cdq
inc
(bad)
lahf
adc
ret
lea
(bad)
hlt
shl
pop
add
imul
out
call
popf
jmp
repz
push
mov
or
and
popa
cs
cdq
scas
xchg
div
cmp
ret
test
xchg
jl
daa
xchg
fs
inc
xor
(bad)
xor
call
(bad)
xor
cmc
pop
stos
push
sbb
xchg
test
(bad)
ja
cmc
test
sub
inc
adc
dec
hlt
mov
fmul
and
imul
std
add
out
sbb
addr16
sub
pop
xor
fs
outs
adc
cmps
mov
pop
inc
into
int
and
mov
cmps
fwait
push
pop
rcl
and
and
in
stc
(bad)
pop
cmp
xor
pop
xchg
mov
jp
mov
adc
fs
and
sahf
mov
icebp
rcl
mov
retf
mov
add
pop
cmp
sar
arpl
nop
in
add
gs
fstp
push
xor
mov
js
leave
in
ror
fld
jb
push
movs
inc
dec
test
movs
dec
les
test
sbb
dec
daa
mov
adc
cmp
stc
sub
or
(bad)
or
or
iret
loopne
std
ret
ja
ror
sub
sub
lods
sar
ds
sub
(bad)
outs
cmp
outs
and
shr
inc
fcomp
jg
outs
mov
sbb
imul
jl
push
cmps
jbe
lods
or
mov
mov
pop
lods
mov
fwait
test
jne
push
or
mov
add
arpl
xor
mov
nop
aam
pop
in
sub
add
push
xchg
inc
js
mov
xchg
mov
xor
sbb
mov
push
pushf
dec
push
xchg
addr16
out
fst
fs
sub
(bad)
addr16
pop
mov
cwde
xchg
mov
sbb
inc
push
aad
cmp
pusha
mov
das
fsub
stos
mov
mov
push
mov
scas
fisttp
pop
enter
xchg
mov
ja
ins
jge
jne
ins
cmp
test
les
ret
jp
push
lods
outs
sub
loope
cmp
fidiv
jnp
xor
push
cdq
aam
cwde
add
sub
shl
mov
int
mov
stc
push
mov
mov
adc
(bad)
jns
adc
mov
test
dec
call
std
clc
jne
iret
adc
and
mov
mov
mov
adc
je
xor
sbb
scas
mov
ds
xor
adc
xchg
mov
jnp
sbb
sub
aad
call
aas
xchg
sar
mov
jecxz
in
pusha
cdq
inc
pop
mov
imul
sub
retf
push
adc
sbb
adc
(bad)
iret
rcl
jge
lds
fucomip
sbb
(bad)
in
inc
retf
push
adc
addr16
dec
push
cli
lea
cmp
lea
pushf
jle
jmp
fiadd
enter
jo
push
int3
iret
jnp
mov
fwait
mov
dec
xchg
dec
and
popa
push
pusha
daa
iret
or
fs
jb
jbe
loope
retf
pusha
xchg
loopne
dec
inc
jle
xlat
inc
xchg
stos
mov
ror
xor
sub
mov
or
xor
shl
push
in
mov
jecxz
fcom
retf
push
hlt
sub
sahf
loop
shl
jns
aam
loopne
sbb
mov
or
movs
test
aad
xor
jbe
jo
loopne
xor
xchg
mov
or
xchg
pop
cmp
aam
test
std
xchg
sub
mov
and
dec
lods
add
add
dec
addr16
mov
scas
in
iret
dec
sbb
or
xor
mov
adc
cld
pop
sti
ret
jmp
xchg
retf
inc
jecxz
popf
dec
dec
pushf
sbb
push
in
std
dec
in
mov
imul
xchg
leave
imul
ds
jp
xchg
outs
adc
popa
xchg
fidiv
mov
xor
movs
mov
jle
jo
xchg
int
mov
push
xchg
push
push
out
mov
and
mov
outs
and
inc
push
movs
movs
cmp
out
retf
outs
bound
cmc
lds
das
ja
mov
fst
sub
cmp
test
hlt
fcom
popa
in
out
jle
arpl
mov
retf
ficom
cwde
jmp
pop
jg
sub
int3
stc
add
mov
sbb
xchg
pop
fisub
fisttp
dec
mov
sbb
mov
and
inc
or
push
in
inc
stc
mov
and
test
xchg
or
lods
cli
jmp
or
adc
add
sub
pop
(bad)
sub
hlt
int
sub
add
(bad)
test
or
addr16
leave
sub
mov
nop
outs
xor
cs
nop
and
push
cmps
ret
in
xor
push
pop
call
in
jp
das
adc
mov
js
int
mov
iret
sti
or
cmp
sti
leave
cmps
mov
cli
mov
adc
scas
xchg
das
out
fadd
or
jnp
(bad)
push
inc
mov
push
stc
jl
jns
sar
mov
or
sub
pop
dec
cmp
fs
je
call
adc
lods
fisub
stc
dec
fisttp
bound
mov
gs
lods
cmps
inc
jbe
jmp
or
mov
fistp
movs
repnz
dec
js
xchg
jp
adc
lods
xchg
(bad)
daa
jbe
cmp
hlt
mov
adc
sub
cld
stos
pop
jecxz
ds
jno
adc
idiv
rcl
jo
or
jg
test
data16
sub
inc
and
and
inc
mov
jno
inc
inc
jmp
arpl
or
inc
popa
ja
mov
shr
jp
or
pop
ja
or
push
je
bound
bound
cli
push
or
jge
je
cmp
push
mov
sahf
push
mov
xchg
push
sbb
sub
inc
test
pop
test
xor
push
fisttp
mov
ror
not
cmp
sahf
loope
nop
xlat
test
dec
or
or
push
cmp
jbe
cli
xchg
enter
aas
shl
xchg
cmp
push
dec
inc
adc
in
jecxz
xor
mov
arpl
mov
sbb
and
jmp
out
adc
xchg
scas
cdq
jmp
shr
imul
xor
ins
xchg
out
repnz
jl
jge
int3
js
add
cdq
in
or
fwait
ins
scas
jno
dec
sbb
lock
push
sbb
fnstsw
push
movs
int3
sub
jb
outs
dec
retf
int3
popf
js
cmp
fsubr
shl
clc
add
test
inc
test
scas
(bad)
cmps
push
or
ja
pop
shl
outs
js
pop
adc
bound
out
xor
push
dec
push
xor
jne
addr16
fldcw
mov
mov
pop
aas
shl
cli
jno
jmp
add
sub
fst
movs
test
bound
cmp
jbe
lock
cmp
jne
int
gs
ret
push
shl
int
pop
xchg
push
pop
pop
bound
xlat
test
xor
cmps
aam
or
push
or
sub
mov
push
xchg
pop
xchg
pop
call
mov
stos
cmp
mov
cmp
xchg
retf
nop
sbb
xchg
or
mov
retf
gs
pop
aas
loopne
jp
in
fild
sbb
ins
add
out
out
cmp
add
(bad)
fild
std
popf
push
pushf
jle
div
pop
pop
js
jb
sbb
pop
fucomp
cmps
imul
and
loope
(bad)
fistp
ss
adc
xchg
pop
scas
jecxz
sbb
push
stos
xchg
mov
mov
lods
aas
adc
cwde
or
sub
ret
imul
scas
mov
cli
icebp
push
movs
sbb
dec
xor
out
mov
iret
sti
mov
push
push
adc
arpl
addr16
push
repnz
arpl
cmps
bound
pop
or
leave
pop
sbb
pop
rcr
in
mov
retf
dec
lods
xor
ins
push
push
or
inc
xchg
add
test
inc
rol
mov
in
fucomp
outs
aaa
adc
ficomp
stos
dec
fwait
add
inc
sub
cmp
jb
rcl
pop
xor
cmp
sub
frstor
sub
test
pop
mov
sub
xor
call
push
mov
leave
sbb
xor
sub
mov
lock
fsub
pop
(bad)
sar
xor
bound
sbb
std
out
xchg
neg
xlat
inc
das
pop
cld
mov
test
out
xor
clc
sbb
les
cmp
in
rcr
aas
jg
cmps
adc
push
dec
push
ret
add
push
retf
bound
lds
and
jae
inc
fst
in
popf
aaa
push
scas
jnp
pop
fadd
adc
cmp
pop
movs
push
push
mov
fild
xchg
mov
mov
int
mov
popf
scas
mov
inc
push
or
jb
outs
mov
push
(bad)
call
mov
nop
adc
mov
or
xchg
test
pop
ins
loope
mov
(bad)
mov
sbb
pop
push
imul
(bad)
fst
pop
(bad)
aaa
sbb
cmp
lods
and
je
dec
mov
dec
cmp
cmp
and
mov
and
into
cdq
fstp
(bad)
sti
enter
jecxz
dec
jno
pusha
lods
jo
xlat
adc
aad
adc
ja
add
stos
mov
jo
mov
xor
je
cmps
xor
fmul
and
jmp
dec
mov
es
test
outs
stc
push
pop
mov
ror
fistp
fist
iret
push
jge
push
scas
sbb
pop
je
fimul
jge
ret
pop
add
pop
sbb
(bad)
clc
jle
push
ss
adc
cmp
cmp
push
push
ja
cmps
pop
test
fst
jmp
ret
pop
jno
test
add
fmul
dec
push
aam
jo
rcr
bound
jecxz
mov
xchg
or
mov
cmp
push
shr
outs
(bad)
stos
neg
jo
ja
mul
jne
stc
xor
adc
aas
dec
stc
xor
dec
or
lods
jle
sbb
adc
clc
mov
xchg
rol
icebp
xor
out
xchg
loope
arpl
sbb
add
ins
xchg
xor
scas
jg
int
enter
aad
or
sar
fwait
xchg
push
push
push
jbe
nop
mov
movs
mov
jb
data16
mov
jmp
dec
inc
cmp
in
imul
cmp
xor
repnz
push
fiadd
out
add
cmp
aad
stos
push
clc
pop
and
cmp
mov
cmc
push
xchg
xor
mov
int3
jge
jbe
test
sub
inc
shl
mov
leave
cmova
adc
jge
ret
cmp
mov
fst
push
xor
scas
mov
(bad)
cmc
daa
mov
adc
stos
sub
and
ficom
test
mov
push
adc
xchg
adc
add
das
movs
mov
shr
inc
aas
push
jge
adc
sbb
shl
mov
sbb
div
jns
adc
inc
mov
mov
inc
jb
aas
push
movs
enter
dec
or
call
shl
adc
outs
or
fisub
sbb
loope
mov
jge
movhps
cmp
imul
call
dec
mov
push
xchg
xlat
jg
gs
dec
or
xor
(bad)
mov
mov
or
into
mov
std
sub
out
in
retf
and
cmps
push
icebp
mov
sbb
repnz
scas
aam
mov
in
clc
(bad)
lds
outs
(bad)
stc
sub
fs
pushf
test
loopne
add
ins
xchg
adc
add
xor
sbb
push
test
scas
mov
neg
sbb
jae
add
pop
inc
jnp
mov
jl
and
sbb
js
pop
jge
and
enter
push
mov
leave
fadd
sbb
mov
out
xlat
mov
hlt
or
nop
sub
mov
outs
dec
ds
dec
ins
pop
shl
sub
lods
xchg
inc
mov
jo
retf
inc
mov
xchg
ror
mov
push
and
push
xchg
int3
or
aas
ja
dec
cwde
inc
mov
retf
es
inc
fcom
jbe
int
call
(bad)
ds
iret
add
pusha
jbe
(bad)
imul
cmp
mov
push
mov
out
std
mov
cwde
pusha
addr16
loop
push
mov
xlat
sti
pop
stos
and
inc
outs
pop
mov
jg
mov
call
sbb
dec
je
gs
(bad)
xor
sub
push
add
mov
fs
push
or
inc
pop
hlt
sub
cmp
pop
pminsw
or
test
add
push
aam
xor
fdivr
sub
fldcw
fnclex
xor
test
dec
xchg
pop
push
mov
push
mov
imul
cmp
popa
push
call
outs
enter
sbb
xchg
das
popa
in
add
sub
clc
cmc
jl
and
fxch
mov
jo
mov
xchg
mov
add
retf
sti
xlat
inc
(bad)
and
sbb
or
dec
scas
sub
and
cmp
jge
pop
(bad)
dec
xor
pop
aaa
outs
jle
mov
pop
ins
sub
pop
push
xor
push
dec
xlat
jnp
ss
xor
adc
sbb
and
xor
jns
pop
(bad)
jge
out
jb
shl
dec
mov
frndint
gs
jmp
mov
dec
ror
pop
inc
in
jb
push
stos
cmp
mov
inc
fcomp
shl
outs
leave
nop
pop
jmp
or
sub
(bad)
rcl
push
leave
clc
mov
int3
sub
add
in
stc
ret
and
cmp
inc
inc
jmp
mov
rcl
ror
in
jne
lods
bound
xchg
jge
loope
icebp
mov
or
mov
lahf
jmp
inc
and
push
scas
push
sub
es
lahf
jmp
int
jbe
push
inc
xor
in
pop
jle
and
mov
adc
addr16
icebp
jecxz
mov
loopne
ret
iret
sub
stos
repnz
ja
adc
scas
jbe
fiadd
iret
mov
call
jns
dec
dec
(bad)
retf
or
pop
sub
push
mov
(bad)
adc
jl
dec
ret
ins
ins
mov
xchg
jl
sahf
dec
out
loop
mov
sbb
push
fwait
mov
(bad)
scas
shl
stos
adc
sbb
cmps
test
sub
dec
dec
adc
xlat
aas
enter
imul
pop
dec
fisttp
or
mov
push
fmul
jbe
jae
inc
or
mov
ins
out
shl
inc
sub
out
push
pop
or
mov
int3
cmp
sbb
or
cs
pop
sahf
(bad)
(bad)
push
fcomip
stos
pop
pop
jmp
lea
mov
pushf
mov
and
stc
leave
ret
(bad)
sbb
call
lahf
je
stos
inc
dec
pop
ins
mov
dec
cmp
or
jne
mov
push
ja
out
xchg
add
loop
jge
jmp
enter
cmp
dec
add
ss
mov
movs
cmc
jns
mov
sahf
push
cs
and
fwait
adc
push
pop
mov
retf
(bad)
inc
imul
pop
bound
pop
in
popa
imul
ss
fcomp
push
cwde
js
and
cmp
fmul
cdq
adc
or
lods
jb
mov
mov
inc
mov
clc
and
jmp
imul
mov
or
xchg
adc
fstp
mov
adc
xor
sbb
and
popa
mov
xlat
aaa
sub
daa
popa
sub
inc
in
xor
retf
lahf
mov
out
sub
xchg
loope
neg
pop
add
addr16
mov
push
dec
stos
es
cmp
shl
repz
sbb
mov
fisub
test
xchg
jnp
mov
dec
pop
pushf
inc
sahf
ins
cwde
ss
jae
push
adc
mov
push
sub
cli
mov
fidiv
sub
push
push
fsubr
pop
loopne
adc
push
bound
retf
xchg
popa
into
cmp
movs
mov
popf
jnp
pop
faddp
test
mov
jl
imul
icebp
and
mov
jno
fidivr
cmp
xor
outs
inc
scas
pop
cmp
cli
jl
mov
mov
add
cli
inc
dec
mov
mov
jmp
mov
push
xor
hlt
les
movs
stos
mov
gs
icebp
daa
movs
mov
ins
das
xchg
aam
sub
xchg
xor
cmp
iret
cmp
pusha
jecxz
jmp
out
xchg
addr16
shl
js
mov
pusha
mov
sub
rol
sbb
(bad)
arpl
or
pop
jecxz
lods
lock
dec
mov
sub
jl
js
fidivr
cs
ret
xchg
repnz
(bad)
lods
jnp
sbb
xchg
ficom
in
mov
xor
add
repz
cmc
mov
dec
or
sbb
push
xchg
xchg
push
ja
cmps
(bad)
mov
or
lea
dec
and
(bad)
int3
test
sbb
pusha
xor
jbe
dec
jmp
rcr
es
mov
cld
inc
not
jo
mov
add
test
cli
sub
mov
movs
jmp
pop
fstp
mov
std
adc
das
mov
ins
dec
mov
dec
icebp
inc
and
ins
adc
pop
movs
ss
cdq
mov
leave
rol
push
xchg
movs
cmc
push
and
push
mov
inc
jecxz
sbb
mov
mov
cwde
popf
xor
cmp
jg
adc
fs
out
daa
mov
or
jne
or
sub
inc
push
pusha
xor
loop
sbb
dec
inc
(bad)
sbb
cmc
stc
es
es
xchg
(bad)
add
inc
repz
in
jmp
mov
loop
push
mov
push
cmps
dec
and
xchg
mov
pop
test
push
jmp
fbld
cmp
inc
xor
mov
fprem1
adc
addr16
out
into
jne
dec
or
mov
xor
push
dec
push
sbb
out
dec
sbb
(bad)
in
and
mov
ficomp
in
cmp
bound
and
xor
stos
inc
mov
retf
mov
out
push
out
sub
xchg
aaa
ss
mov
sbb
popa
pop
xchg
cmp
rcr
dec
sbb
out
or
adc
mov
xchg
push
and
push
loopne
pusha
cmp
xor
jmp
and
mov
call
mov
cmp
rcl
nop
sti
movs
cmc
xchg
aaa
stos
push
xchg
sub
mov
ja
dec
out
cmp
ret
mov
push
lods
xor
outs
mov
outs
les
pop
loop
xchg
cmp
aas
loop
push
loope
sar
scas
mov
mov
jne
jle
cmps
push
push
jecxz
dec
mov
test
sub
(bad)
inc
(bad)
inc
aaa
dec
popf
push
jl
repz
in
push
es
xchg
leave
sbb
in
cmps
jecxz
loope
or
push
adc
das
add
cdq
clc
mov
ja
or
inc
test
cmp
mov
sbb
(bad)
ficom
mov
push
pop
in
int3
scas
and
pop
jl
imul
dec
lods
mov
xor
retf
and
pop
ficom
(bad)
or
hlt
push
pop
enter
cwde
cwde
cmp
out
imul
mov
in
ss
jge
pop
mov
sub
adc
(bad)
mov
mov
in
inc
push
mov
je
fadd
pop
add
stc
outs
jne
das
sbb
popa
loopne
call
and
loope
pop
push
sbb
pop
leave
jle
mov
rcr
aaa
loopne
repz
fiadd
mov
mov
and
add
xor
cdq
xchg
into
xchg
adc
scas
or
ffree
xor
test
mov
mov
jno
cwde
movs
icebp
sbb
ss
inc
lock
out
mov
rcr
imul
popf
or
not
into
mov
push
daa
ror
xchg
or
inc
neg
sub
sbb
pop
mov
nop
add
or
mov
test
sahf
or
stos
xchg
mov
test
popf
mov
clc
je
test
cmp
dec
in
cld
and
sbb
loope
mov
es
pop
dec
mov
jl
retf
cmp
jns
aaa
aad
repz
pop
dec
push
push
repz
jb
mov
or
jbe
imul
cld
sub
fld
xchg
sub
push
jno
lahf
adc
pushf
jecxz
pushf
sub
pop
pop
sbb
mov
(bad)
arpl
lock
imul
inc
ds
clc
mov
gs
xlat
clc
or
mov
fwait
jle
sub
mov
nop
call
adc
push
pop
lock
hlt
adc
mov
sub
mov
mov
lods
mov
cmps
jmp
xor
ficomp
mov
das
xchg
xchg
test
je
inc
mov
xchg
and
loop
sub
ja
cwde
popf
dec
adc
cmp
or
test
rol
mov
call
aad
shl
jb
sbb
popa
out
pop
sbb
xor
or
add
xchg
pop
je
leave
bound
or
arpl
enter
ret
push
mov
mov
cld
(bad)
icebp
out
dec
ds
sbb
and
jbe
inc
dec
ss
xor
lahf
sbb
sub
into
mov
dec
push
pop
pop
aas
sbb
adc
test
gs
out
scas
inc
jno
sbb
or
fdiv
fwait
push
pop
(bad)
in
scas
cmp
sahf
inc
dec
add
xchg
cmp
int
xchg
lods
push
adc
popf
or
jecxz
push
mov
leave
mov
(bad)
in
in
repnz
sbb
fimul
fs
adc
bound
and
xchg
fisub
shl
loope
xchg
call
fnstcw
push
test
xor
inc
jno
test
mov
inc
dec
addr16
dec
xlat
lahf
push
cwde
jae
das
sar
clc
out
sbb
and
push
jmp
or
clc
push
push
pop
stc
sti
fstp
push
cmp
cs
and
pop
jno
jp
fisubr
popf
sub
test
pop
jg
mov
sub
shl
adc
pop
cmp
push
mov
(bad)
popa
ror
pop
sub
int
or
ja
cmp
in
mov
lahf
jmp
adc
out
push
add
xchg
sbb
jmp
push
mov
mov
dec
ds
xchg
jmp
mov
push
inc
and
stos
or
out
inc
jge
xchg
pop
(bad)
push
pop
cmp
scas
gs
ds
aaa
popa
arpl
lods
rcr
or
call
mov
out
add
aaa
and
mov
fidivr
xchg
xchg
retf
scas
mov
inc
lods
inc
inc
push
sub
aad
fidivr
push
in
pop
mov
jle
push
sbb
pop
sbb
inc
sub
sub
(bad)
mov
rcl
cmp
or
mov
dec
inc
cs
push
cmp
lock
ins
shl
ret
xchg
xchg
in
iret
push
mov
rol
sar
inc
(bad)
mov
mov
sub
push
cmps
jmp
icebp
xchg
rcr
pop
sub
(bad)
xor
in
xchg
loope
cdq
xchg
pop
hlt
pop
mov
or
mov
cld
mov
mov
xor
arpl
aam
xchg
mov
lock
jo
sar
jp
mov
sub
sti
mov
mov
mov
(bad)
mov
adc
dec
cmp
repz
es
js
test
and
mov
mov
mov
cmp
mov
mov
mov
or
pop
test
lock
dec
in
sub
shl
xor
mov
jle
sbb
mov
ror
div
push
xchg
fild
dec
jno
nop
out
jmp
jbe
(bad)
iret
fyl2xp1
or
aas
xchg
push
jmp
mov
fs
mov
ins
adc
ins
xchg
in
or
xor
(bad)
mul
mov
stos
xchg
int3
xchg
xchg
push
xchg
stc
scas
xor
test
inc
xchg
xchg
mov
jb
dec
sahf
mov
and
sub
psubq
imul
sbb
mov
test
push
mov
sahf
scas
add
(bad)
mov
push
pop
and
jns
data16
mov
push
out
push
sti
gs
scas
sub
call
sub
call
jno
test
retf
scas
cmp
sbb
xchg
inc
mov
fcomp
movs
cmp
sub
(bad)
(bad)
xchg
or
pushf
sti
mov
rcl
pusha
and
sbb
mov
call
nop
imul
dec
mov
jge
inc
jnp
out
ds
adc
aaa
add
pop
mov
int3
movs
lods
jo
sub
adc
pop
pop
xor
in
imul
mov
pop
jb
in
inc
shl
sar
dec
in
pop
scas
mov
adc
call
retf
push
ins
loopne
lea
jne
repz
and
gs
ret
cmp
cmps
jecxz
jp
cs
mov
int3
pop
or
mov
(bad)
sti
das
shr
add
dec
mov
aas
mov
test
jmp
popf
push
aam
ins
ins
loopne
popa
and
ins
je
call
sbb
cmp
add
and
cmps
ins
mov
adc
pop
(bad)
data16
out
mov
mov
mov
aaa
cs
mov
add
imul
mov
and
adc
retf
fwait
sbb
adc
or
(bad)
adc
or
cmp
push
push
sub
jns
jo
arpl
adc
sub
push
adc
pushf
int3
mov
in
ret
fld
jae
xor
inc
xchg
jg
push
aam
jmp
pushf
xor
and
push
inc
add
arpl
sub
or
and
add
or
cmp
jmp
dec
pop
xchg
jbe
mov
(bad)
out
mov
outs
out
mov
pop
xchg
xchg
(bad)
cmp
inc
jl
adc
inc
inc
jne
stos
adc
lds
jmp
addr16
sub
in
sub
sub
inc
pop
inc
or
jne
dec
inc
icebp
or
stc
jl
scas
adc
inc
jae
(bad)
ss
test
repz
xlat
std
lds
push
jp
push
stos
(bad)
dec
sub
call
xchg
jmp
cdq
sti
out
push
(bad)
or
sub
lahf
sbb
pushf
loopne
rol
jg
and
retf
or
mov
imul
xor
je
jnp
(bad)
inc
sub
cs
shl
adc
xor
inc
sar
retf
mov
xor
cmp
sbb
mov
out
mov
call
call
fs
adc
cmp
push
sbb
jp
loop
ds
cmp
adc
imul
cdq
call
movs
dec
push
push
rol
cmp
sub
dec
pop
enter
add
inc
repnz
xchg
sub
cmps
not
sbb
or
or
fdivr
pop
adc
mov
pop
retf
test
test
dec
mov
pushf
mov
gs
enter
mov
mov
or
xchg
mov
sub
dec
shl
mov
mov
in
jge
shr
daa
fdiv
cs
scas
data16
shl
add
xchg
inc
sub
bound
adc
add
mov
and
cmp
xor
pop
scas
mov
mov
inc
push
sub
cs
loop
xor
mov
es
or
push
adc
scas
in
add
xchg
ja
pop
and
push
jg
std
mov
ins
jge
lods
cmc
sub
(bad)
add
cmp
ins
cwde
mov
fdivr
and
sub
jge
repz
xchg
lods
sub
push
lds
lds
jb
outs
std
enter
or
ins
sub
push
cli
cmp
add
test
arpl
not
or
outs
pop
pushf
jbe
sbb
mov
pop
add
xor
sahf
add
inc
cmc
sub
int3
bswap
sub
mov
push
ja
(bad)
(bad)
popa
add
jmp
(bad)
and
leave
adc
loope
in
add
ds
mov
cmp
movs
push
inc
jo
enter
ret
mov
sbb
ja
mov
shl
inc
mov
add
sub
push
push
adc
and
imul
ret
mov
aas
outs
repz
fisub
cs
xlat
mov
xchg
mov
jge
std
out
(bad)
pop
and
jb
jno
retf
fistp
aam
out
jecxz
repz
mov
fs
mov
iret
fwait
lods
out
adc
jmp
push
data16
stos
cmp
inc
lds
ret
mov
cld
or
retf
dec
std
dec
xor
or
jg
int3
push
add
data16
dec
pop
sub
and
neg
hlt
cmp
mov
mov
jg
ror
pop
imul
addr16
add
imul
imul
push
ss
ja
jo
aad
addr16
(bad)
sbb
and
scas
sbb
fs
xchg
sbb
inc
mov
(bad)
aad
fldenv
sub
inc
ins
push
inc
ss
out
sbb
dec
jle
std
sub
pop
aam
or
pop
push
pop
in
icebp
inc
pop
pop
adc
shl
xlat
out
fist
and
mov
mov
clc
sbb
push
sbb
fs
rol
and
out
fisub
jno
fst
push
(bad)
push
jo
mov
lea
test
inc
icebp
mov
(bad)
cmp
(bad)
push
cld
add
int
xchg
into
es
mov
add
jo
jns
vcvttsd2si
div
mov
jae
hlt
xchg
push
cli
mov
lea
popa
fisttp
push
sub
lods
movs
in
mov
repz
cdq
test
lahf
pop
push
xor
jg
and
pop
call
ins
loop
mov
aam
repnz
or
fmul
mov
in
sbb
push
js
call
push
loopne
inc
add
scas
dec
fiadd
mov
movs
sbb
mov
outs
mov
mov
hlt
(bad)
ja
jge
mov
inc
sahf
push
divps
ins
fisub
xchg
rcl
leave
mov
jo
or
(bad)
mov
mul
les
mov
mov
cmps
in
cmp
fidiv
fidiv
(bad)
inc
fsub
add
pop
sbb
call
dec
int3
push
or
push
test
add
adc
fwait
or
retf
je
inc
cmp
cdq
adc
ja
push
outs
outs
outs
pop
inc
and
call
sub
addr16
xor
mov
mov
push
pop
ficomp
add
and
or
es
mov
adc
dec
ins
xchg
and
mov
mov
jecxz
xchg
and
in
lahf
mov
jle
rol
movs
inc
mov
repnz
pop
and
jb
jb
pop
dec
jne
cdq
cmp
pop
pop
adc
(bad)
xor
push
inc
pop
frstor
push
push
inc
cld
xchg
sbb
lods
inc
adc
jns
mov
in
nop
cmps
cmp
sub
cs
push
inc
les
jno
mov
sbb
stos
and
xchg
mov
and
push
sub
(bad)
mov
and
mov
fs
(bad)
push
loop
iret
xchg
or
adc
cli
pop
pop
mov
call
stos
dec
jno
jae
or
jnp
bound
push
push
fs
in
adc
adc
stc
jae
outs
mov
(bad)
stos
push
mov
mov
inc
push
mov
fs
sub
xor
mov
lea
fadd
fsubr
mov
je
and
dec
xchg
iret
sbb
pushf
xor
add
ins
inc
ret
lods
aam
sbb
inc
lds
pop
mov
or
call
ds
sbb
adc
hlt
into
xor
and
fisubr
jecxz
nop
and
fadd
test
and
aas
rol
or
add
iret
dec
scas
jne
mov
in
sbb
mov
pop
xchg
add
fdivr
xchg
mov
jbe
loopne
loope
push
xchg
cwde
test
aas
in
(bad)
push
and
ins
add
nop
dec
cmc
mov
mov
cld
jbe
ins
or
imul
sti
popf
adc
pushf
(bad)
movs
movs
adc
sub
mov
iret
or
icebp
jns
icebp
pop
enter
xadd
(bad)
xchg
cmc
lahf
ffreep
cmp
cmp
call
(bad)
lods
and
pop
mov
in
popf
std
ins
xchg
inc
scas
fmul
lock
ja
shl
xchg
mov
jl
fld
fldcw
mov
or
mov
inc
xchg
aaa
cmp
inc
sub
in
push
inc
or
xor
sub
cs
inc
cs
int
scas
popf
fcom
cmp
(bad)
aas
jns
adc
setbe
pop
push
cmp
dec
sbb
mov
jns
ins
sahf
sbb
inc
inc
mov
out
and
add
test
adc
push
fst
fstp
ds
lds
xor
xchg
adc
ret
jmp
pop
sbb
pop
cs
dec
mov
sub
int
icebp
es
sub
cwde
push
pop
data16
das
or
jo
mov
mov
mov
ins
pop
xor
in
ror
cmovne
cdq
jne
test
sbb
les
arpl
lods
arpl
fnsave
inc
dec
xor
(bad)
imul
jnp
aas
cmp
sub
test
inc
cld
fucomi
pop
adc
aad
bnd
pop
dec
adc
ss
or
enter
or
stc
or
pop
in
mov
fnstenv
(bad)
adc
fprem
icebp
and
mov
cmp
sub
mov
mov
cmp
in
pop
lahf
sbb
xchg
pushf
lds
sbb
cmps
daa
fisub
mov
out
mov
movs
mov
sub
or
push
mov
fucomip
or
cmps
lods
popf
in
fwait
jo
cwde
sub
ss
mov
ss
and
movs
es
lahf
and
cmps
rol
ss
pop
fisttp
hlt
je
div
inc
icebp
inc
dec
jne
sub
and
mov
das
dec
mov
sbb
out
imul
inc
mov
test
ds
adc
xchg
repz
rol
pop
mov
adc
movs
fsub
push
adc
nop
imul
or
jns
(bad)
enter
test
outs
lock
sub
int3
push
ret
(bad)
shr
xchg
mov
outs
stos
icebp
cmps
xor
mov
mov
test
cmps
cmp
int3
fxch
and
dec
push
scas
dec
repz
lahf
imul
int3
adc
rcr
jg
adc
rcr
aaa
mov
xchg
pop
mov
jns
jno
push
ret
xchg
out
cmps
sbb
xchg
fnsave
dec
adc
xchg
jb
adc
inc
or
and
mov
xchg
mov
jge
inc
ja
adc
ds
xchg
or
pop
cmps
lahf
xchg
fbstp
jge
push
sbb
fist
cli
(bad)
test
adc
sbb
fld
cld
mov
or
jnp
(bad)
ins
cli
jo
loopne
outs
lock
hlt
lds
pushf
dec
loope
pop
das
mov
push
bound
nop
sti
popa
rcr
xlat
rcr
lea
sub
mov
aas
daa
fisttp
outs
clc
ds
xor
xor
mov
std
(bad)
sbb
test
dec
loope
mov
shr
jne
test
pop
sbb
in
push
movs
lock
pop
sbb
(bad)
sbb
repnz
or
cwde
mov
cmp
pop
adc
shl
ret
pop
pop
repz
inc
adc
jns
mov
aaa
addr16
cmc
les
xchg
push
or
push
popa
test
shl
jae
clc
shl
stos
ds
outs
and
repnz
sub
dec
ja
lock
lea
cli
std
jmp
shl
ds
mov
inc
lds
repz
stos
scas
ror
mov
add
(bad)
pusha
mov
xor
or
inc
pmaxub
adc
call
or
aaa
xor
outs
lds
mov
push
or
movs
cmp
adc
std
mov
pop
mov
loop
ins
push
bnd
jmp
repz
cwde
sub
push
inc
ror
nop
out
in
dec
jge
les
shr
sub
xchg
jecxz
xchg
repz
rcl
or
pop
ins
xchg
sbb
xchg
push
adc
hlt
push
sbb
or
scas
mov
in
push
cs
sahf
mov
jl
xchg
sub
test
or
cld
sub
adc
in
push
sbb
sbb
jnp
mov
pushf
cmps
sub
shl
nop
imul
rcl
adc
lock
inc
js
aaa
add
es
ret
adc
inc
loop
mov
and
test
into
mov
leave
sub
push
retf
out
push
test
cmc
retf
mov
or
les
cmps
in
into
cld
jmp
and
dec
pushf
and
retf
dec
shr
(bad)
aaa
adc
jmp
inc
outs
movs
inc
push
jmp
arpl
fimul
sbb
test
cmp
fcmove
inc
ret
vmulss
xchg
out
sub
(bad)
sbb
test
inc
jnp
ret
and
cmp
xor
pop
or
out
jne
out
mov
and
ins
adc
pusha
fistp
ror
scas
sti
xchg
popf
outs
sub
(bad)
ja
hlt
pop
push
xor
(bad)
inc
mov
add
scas
cmp
lock
jge
push
lds
push
popa
pop
xor
add
jmp
scas
pop
ins
mov
sub
jp
cmc
add
out
cmp
pop
loope
jle
icebp
xchg
and
fs
xchg
sbb
ins
sbb
loop
and
xor
mov
imul
xchg
xchg
repz
je
scas
test
sbb
mov
mov
inc
out
movs
xor
out
dec
adc
xchg
add
cs
fdivr
cmp
adc
jp
xchg
es
sub
cmp
aad
jno
xchg
test
mov
fisttp
jp
int3
stos
imul
xchg
sbb
fcmovnbe
mov
push
pusha
sub
shr
and
call
push
vmptrld
xchg
test
xchg
mov
sbb
ds
dec
mov
loope
cmp
mov
in
cs
inc
aas
gs
cmc
ffreep
pushf
cdq
mov
pushf
jbe
(bad)
out
xchg
test
sub
sti
mov
push
movs
xchg
mov
mov
pop
dec
xchg
ret
sub
mov
xchg
cdq
fbstp
retf
lock
ja
add
(bad)
stos
int3
mov
dec
push
ins
cmp
in
pop
scas
in
test
dec
or
xor
xor
call
hlt
lods
push
lds
mov
xchg
retf
adc
adc
pop
and
xchg
cmp
aaa
push
cmp
jge
pop
inc
adc
loopne
(bad)
and
fld
mov
(bad)
mov
pop
mov
adc
aaa
mov
retf
push
push
mov
arpl
push
les
pop
jb
(bad)
popa
fdiv
call
sub
sbb
(bad)
loop
iret
xchg
(bad)
push
aaa
sub
in
movs
mov
add
push
call
push
mov
mov
mul
fadd
and
jge
cmp
pop
ins
and
mov
inc
out
dec
jp
mov
nop
aaa
shl
sub
push
mov
nop
sub
jb
pop
xor
xchg
mov
pop
dec
fnstcw
xchg
popf
daa
retf
dec
je
aas
xchg
daa
cmp
pop
test
adc
pop
mov
inc
wbinvd
data16
mov
cmp
mov
mov
jecxz
inc
les
jle
clc
loope
jle
cmps
js
fcmovbe
adc
add
push
(bad)
or
test
test
jg
dec
mov
dec
or
jbe
xchg
std
push
(bad)
jp
dec
stos
jp
(bad)
lea
xchg
cdq
cwde
test
inc
fisubr
jb
pop
push
daa
mov
lds
rol
and
sub
(bad)
int
int3
xchg
mov
push
or
lock
scas
or
cwde
xor
cli
jns
popf
push
ret
fstp
test
aam
adc
mov
or
xor
nop
loope
lahf
imul
inc
xchg
jns
int
sbb
sbb
test
or
lods
aaa
popf
stos
leave
cwde
inc
inc
sbb
add
inc
rol
ret
cld
mov
shr
stos
adc
imul
add
jl
jb
dec
mov
xor
mov
push
xchg
pushf
pop
jle
dec
xor
jl
inc
les
mul
jp
fdivp
in
and
xor
add
jmp
aam
xlat
shl
pop
dec
stc
jle
cs
jmp
outs
and
mov
mov
add
sbb
imul
repnz
push
xor
(bad)
pop
es
outs
aas
ss
scas
add
test
fadd
sub
pushf
sbb
ss
(bad)
sti
sub
cmp
push
and
jbe
es
inc
sahf
push
and
and
mov
mov
xchg
pop
not
inc
pop
(bad)
ficomp
clc
mov
test
std
inc
es
jge
gs
cmp
cmp
fwait
jb
mov
sub
ss
jge
dec
mov
inc
pop
dec
(bad)
ror
sbb
jo
adc
jge
sbb
adc
mov
and
and
lods
inc
add
inc
xchg
test
pop
bound
sub
dec
or
dec
push
leave
rol
cmp
test
rcr
push
add
jae
mov
xchg
retf
cmove
and
(bad)
daa
and
pop
adc
jo
inc
iret
jns
stos
test
mov
cmp
clc
aad
mov
repnz
out
push
sbb
lds
(bad)
pop
outs
nop
ucomiss
pop
arpl
or
mov
xchg
push
loopne
sub
jbe
mov
test
and
push
movs
cmp
cmp
jo
in
sub
fdivr
daa
icebp
or
mov
es
xor
jae
popa
inc
xchg
push
fidiv
mov
ss
mov
sub
xor
cmp
sbb
dec
mov
dec
mov
ins
fiadd
pop
push
and
into
and
test
fidiv
and
push
sbb
dec
or
packsswb
xchg
out
xchg
inc
or
cmp
dec
or
push
gs
adc
movs
shl
jmp
pusha
inc
push
(bad)
cld
fsub
mov
popf
or
xor
int3
sbb
pusha
push
jmp
scas
out
jb
daa
(bad)
out
cmp
sbb
shl
addr16
jg
adc
push
sub
popa
clc
add
(bad)
retf
in
mov
jg
(bad)
adc
test
hlt
(bad)
imul
xchg
mov
inc
fnstenv
lods
sbb
and
dec
dec
push
jbe
cmp
sbb
bound
adc
mov
ds
std
mov
sub
mov
jle
into
jecxz
es
lds
pop
movs
popf
lahf
movs
aas
push
outs
pop
loope
fadd
adc
push
pop
jne
std
movs
shl
daa
push
and
sbb
mov
and
inc
loopne
jb
inc
jmp
mov
imul
shl
stc
fs
cmps
add
into
cmp
cmc
dec
xchg
adc
fimul
aam
(bad)
and
stos
shl
xchg
adc
adc
fsub
push
pop
fbstp
mov
pop
retf
jo
jmp
test
repz
ins
loopne
xor
cdq
aaa
ds
cld
push
(bad)
lock
into
cmps
movs
lahf
fld
dec
push
push
mov
and
mov
xlat
mov
jp
aas
shr
mov
outs
loope
(bad)
xchg
test
jle
jae
test
xchg
or
sub
pop
les
mov
xchg
mov
or
pop
adc
xchg
cmp
cmp
iret
jp
mov
sbb
popa
aaa
movs
sub
shr
shr
ds
icebp
iret
push
nop
outs
pop
or
jno
sti
inc
std
mov
add
cmp
scas
mov
inc
in
(bad)
push
push
push
push
lahf
addr16
hlt
jg
jg
retf
outs
push
stc
cmp
gs
mov
cmc
and
pop
xchg
inc
add
call
pop
out
(bad)
mov
leave
cmps
sbb
inc
or
sbb
dec
imul
add
jae
in
adc
mov
adc
fsubr
ror
dec
clc
sbb
pop
mov
sbb
test
xor
sub
sub
adc
add
push
(bad)
pmaddwd
sub
pop
mov
and
cwde
scas
or
inc
xor
jo
scas
push
stos
retf
xchg
cs
jnp
aas
sub
stc
push
lds
aaa
out
mov
les
pushf
jp
jge
jns
stc
mov
adc
and
jg
and
aad
xchg
out
jp
mov
inc
stc
inc
push
into
add
push
test
imul
call
lock
inc
dec
mov
nop
xchg
add
xor
sbb
popa
lea
loop
jmp
inc
adc
push
sbb
fwait
hlt
repnz
ins
jg
sub
jmp
into
retf
test
mov
pop
add
movs
dec
mov
repnz
xor
mov
aas
mov
mov
movq
sub
ins
mov
cmps
frstor
xchg
stc
xchg
adc
pop
call
imul
and
movs
std
cdq
push
out
jl
(bad)
cdq
sub
xor
mov
sub
or
and
jae
sbb
mov
add
sub
call
scas
dec
adc
loop
daa
jno
sti
fistp
sbb
stos
xor
pushf
and
jle
add
adc
xlat
pop
loopne
mov
cmp
mov
mov
cwde
ds
js
lods
imul
jne
add
sub
stos
scas
sub
jb
cmp
jns
fnstenv
iret
(bad)
mov
jmp
sbb
push
inc
mov
jno
shl
movs
push
xor
cmp
adc
push
pop
adc
push
pop
shr
movs
jns
sbb
or
outs
or
icebp
sub
stos
rcr
sbb
mov
cmp
test
and
lds
daa
call
xchg
pop
adc
js
cmps
dec
and
push
lods
(bad)
dec
pop
(bad)
add
sahf
daa
jns
pop
cmp
add
sub
cld
pop
adc
or
ret
sbb
adc
ror
cwde
push
mov
push
neg
rol
xor
push
rol
test
jmp
jae
jmp
mov
cmp
jle
and
mov
and
bound
std
fidivr
pusha
jmp
rcl
cdq
pop
dec
cld
xor
xchg
jne
adc
lods
push
mov
mov
dec
dec
mov
enter
neg
jmp
or
jge
sub
(bad)
aaa
jo
test
cmp
mov
inc
imul
pop
fwait
adc
sub
adc
scas
jne
jns
test
shr
leave
mov
popf
repz
mov
inc
xchg
fwait
aaa
pop
push
or
and
in
adc
push
imul
push
push
sahf
fadd
xor
mov
jge
fisttp
je
dec
or
xor
lods
inc
mov
retf
rcr
cmp
dec
loop
mov
daa
sub
ret
cdq
rcr
call
sub
fstp
xchg
out
push
inc
xchg
cmps
es
in
jmp
aaa
xor
xchg
and
cdq
sub
xor
aad
cli
jge
push
vmwrite
and
cmp
loope
popa
or
inc
push
lahf
les
stos
pop
push
cmp
push
mov
xor
pop
add
inc
or
(bad)
jmp
jmp
fdivr
pop
aad
sub
or
cmps
outs
sets
int
mov
shl
cli
push
imul
or
inc
push
cli
pop
dec
inc
jne
pop
mov
dec
mov
(bad)
xlat
int3
dec
in
xchg
mov
push
imul
pop
ja
clc
das
mov
inc
jmp
cmp
adc
add
movs
addr16
add
aaa
xor
or
sbb
add
lock
imul
push
xor
jno
scas
call
mov
cmp
mov
pop
mov
dec
xor
(bad)
(bad)
push
test
push
pushf
sbb
ins
cmp
shr
neg
add
in
xor
addr16
add
jno
mov
xchg
push
jecxz
mov
ja
adc
arpl
add
cmp
fwait
cmps
(bad)
loopne
mov
js
movs
mov
mov
pop
mov
add
jge
adc
sub
inc
inc
push
int3
inc
mov
enter
imul
xchg
repz
jne
push
stc
imul
(bad)
or
sbb
int
lds
nop
xor
push
inc
out
iret
xor
rcl
mov
dec
int3
movs
ja
mov
mov
ss
pop
test
dec
pop
outs
add
mov
dec
fwait
mov
xchg
(bad)
movs
dec
pusha
cmps
sbb
cmps
adc
test
out
push
inc
ret
push
push
fisttp
scas
fs
ja
pop
push
xchg
xlat
fnstenv
push
retf
mov
aas
mov
rol
adc
xchg
xor
inc
jbe
js
mov
or
leave
and
out
fisttp
fs
cmp
ins
inc
adc
or
std
and
jp
add
repz
push
jl
je
jecxz
std
mov
pop
cmps
pop
ret
pop
mov
or
sbb
popf
imul
repnz
mov
mov
ret
pop
(bad)
pop
adc
cdq
cmps
aam
fs
enter
retf
dec
outs
pop
loopne
pop
lahf
push
cmp
cmps
xor
in
(bad)
jae
lods
movs
lods
stos
nop
gs
jae
stc
mov
cmps
xor
int3
iret
mov
xor
fxch
daa
mov
pop
and
inc
outs
les
jmp
in
fiadd
call
jno
fnstcw
lea
add
and
jg
xor
pop
jecxz
imul
push
popf
sub
sub
or
sbb
mov
mov
pusha
aas
mov
or
in
jnp
pop
pop
je
push
cmc
xor
mov
es
push
stos
(bad)
clc
jmp
mov
push
add
xchg
retf
sub
bound
daa
xor
outs
popf
and
inc
scas
addr16
mov
enter
js
iret
mov
sbb
inc
out
rol
shl
dec
mov
inc
or
push
sub
ficomp
dec
sbb
arpl
adc
adc
inc
mov
push
call
fwait
jmp
sub
cmps
das
gs
jne
adc
push
je
mov
jb
shr
pop
nop
cld
or
repnz
nop
mov
pop
xchg
cs
xchg
pop
fiadd
jo
jle
outs
nop
fmul
mov
mov
(bad)
das
es
iret
out
jo
stc
pop
sub
out
dec
cli
lods
push
and
imul
mov
mov
ja
rol
mov
mov
aas
dec
nop
dec
pop
push
not
retf
mov
or
xchg
and
imul
and
mov
fwait
ins
push
fistp
aam
pop
out
ss
in
inc
xchg
mov
push
popf
and
arpl
loop
gs
loopne
cmps
push
mov
cdq
adc
cmp
in
inc
push
jns
cs
in
dec
mov
mov
add
and
sub
test
pop
shl
outs
outs
in
not
int
pop
jmp
out
and
xor
jmp
mov
mov
js
sbb
jp
idiv
mov
movs
jge
int3
add
ror
jae
pop
(bad)
jge
ret
add
mov
dec
jmp
sbb
pop
addr16
mov
adc
pop
or
imul
rcl
add
sar
sub
cmp
into
cli
push
cmp
mov
(bad)
jbe
out
ss
sub
inc
mov
mov
sbb
leave
out
inc
fdivp
(bad)
and
cdq
pop
jmp
stc
lds
div
and
adc
mov
outs
push
aad
jle
inc
das
jmp
push
call
mov
xchg
ror
rol
sub
jo
mov
mov
add
xlat
add
cwde
dec
jge
cvtsd2si
(bad)
sbb
rol
dec
push
sbb
jns
fmul
lock
ja
push
sub
fs
jmp
jp
add
dec
int3
je
ror
mov
das
jp
jle
jle
inc
push
cmp
add
cmp
mov
adc
sub
cmc
adc
adc
mov
cmp
jg
or
push
pandn
adc
and
(bad)
cmp
xlat
addr16
push
or
out
mov
(bad)
push
int3
xchg
inc
dec
daa
mov
xchg
nop
sar
pop
dec
das
cmp
cdq
push
mov
ss
imul
lds
mov
xrstors
outs
outs
ja
or
js
retf
shl
cmps
cli
les
dec
push
mov
push
cs
pushf
xchg
mov
(bad)
ins
stc
xor
fstp
sbb
es
dec
jns
jg
ins
fstp
sub
adc
sub
adc
rcr
xchg
xor
mov
inc
mov
rcl
mov
add
inc
sahf
push
daa
push
push
mov
cmps
push
(bad)
xlat
xor
inc
pop
shl
mov
cmp
mov
fsub
add
test
fisub
(bad)
jl
or
ss
pop
push
(bad)
adc
leave
cmp
in
pop
movs
xchg
out
mov
fwait
pop
aaa
pushf
pop
jmp
shl
inc
add
bnd
xchg
fs
adc
mov
cmp
xor
push
cmps
aam
popa
mov
loope
loope
sbb
mov
xor
shl
inc
(bad)
jl
cmp
mov
jmp
ja
and
and
fsub
outs
cmps
leave
cmps
mov
imul
sbb
mov
sub
fwait
push
iret
lea
(bad)
(bad)
addr16
jno
inc
lock
jae
ffreep
xor
jle
pop
xor
lods
push
jo
aad
sti
fsub
fwait
cmp
mov
lea
adc
mov
inc
sti
mov
xchg
std
jp
push
pop
mov
mov
mov
mov
push
popf
test
jno
mov
lods
int
js
stos
dec
xor
sbb
daa
xor
mov
sahf
repnz
lahf
sub
xchg
adc
fist
test
(bad)
out
lea
pushf
(bad)
ins
dec
outs
dec
sub
inc
push
inc
sub
sbb
fiadd
test
mov
mov
jp
or
lds
pop
mov
arpl
mov
repz
jge
sbb
nop
or
(bad)
arpl
xchg
adc
imul
sbb
rcl
ins
scas
jno
push
std
pop
loop
cwde
dec
push
cmp
fcomi
not
sub
scas
(bad)
retf
jecxz
pop
xchg
sbb
jge
aaa
mov
dec
dec
pop
movs
scas
lds
xchg
sbb
sbb
enter
(bad)
sub
jg
push
mov
cli
adc
out
mov
jmp
push
jmp
lock
cmp
loopne
stc
mov
dec
addr16
jns
mov
sahf
push
mov
bound
mov
mov
and
daa
clc
dec
icebp
mov
mov
lods
aad
cld
xlat
out
inc
fiadd
xchg
scas
fst
and
pop
pop
or
lea
fimul
xor
imul
(bad)
(bad)
jmp
mov
loope
(bad)
lahf
out
push
sbb
leave
sub
push
mov
or
cmp
adc
movs
mov
hlt
call
jne
or
cmp
xor
out
mov
je
cmp
sbb
retf
sar
in
test
fsub
ss
sbb
xchg
repnz
ss
push
cwde
repz
std
xchg
xor
ret
xor
xchg
(bad)
movs
cmp
popf
inc
mov
test
xor
dec
lea
cmps
xlat
mov
hlt
push
ja
or
enter
(bad)
mov
enter
outs
loopne
push
sbb
scas
iret
xchg
data16
imul
xchg
pop
mov
and
(bad)
mov
fiadd
and
mov
lahf
fld
sbb
adc
cmc
push
call
push
aas
je
mov
repnz
aam
jecxz
(bad)
xor
shr
lock
rcl
popf
lods
data16
lods
in
push
mov
mov
fidiv
or
sbb
adc
xchg
dec
imul
enter
dec
add
xor
out
adc
int3
(bad)
fucomp
mov
mov
push
in
retf
(bad)
neg
or
(bad)
mov
loop
stc
nop
xor
test
call
xchg
popf
inc
xchg
jnp
clc
test
sbb
leave
out
sahf
fcmovnbe
lea
pop
leave
imul
jmp
or
movs
das
push
repnz
mov
stc
push
adc
jle
dec
test
cmp
lock
push
int
dec
pop
mov
cld
mov
fs
mov
mov
in
sar
jle
pop
inc
cmc
cwde
daa
mov
mov
and
in
repnz
cdq
xchg
and
ins
sub
inc
or
int3
jl
fwait
leave
mov
adc
pop
in
fwait
(bad)
fnsave
push
adc
cmp
test
adc
and
push
and
ds
sub
dec
sahf
push
lea
inc
mov
push
jo
mov
xchg
div
je
pop
retf
pop
and
ins
fsubr
js
xor
or
xchg
add
stos
jo
clc
fadd
xchg
inc
push
(bad)
in
ret
mov
jns
and
out
(bad)
xor
out
imul
lods
stos
push
daa
ins
jecxz
mov
jae
cmp
pop
cmp
and
jge
cmp
mov
push
push
xchg
cdq
sub
adc
gs
mov
repz
sub
in
sbb
in
lds
clc
sbb
dec
add
push
sbb
ffree
jle
mov
loop
add
cmp
lods
mov
pxor
loop
stc
sub
pop
popf
addr16
push
pop
popa
inc
loopne
mov
in
xchg
xor
mov
and
(bad)
cmps
mov
sbb
fimul
mov
lea
and
push
repnz
popf
ror
xor
mov
jmp
mov
ret
push
xchg
fs
push
sti
and
aam
into
outs
leave
cs
icebp
test
je
imul
sar
(bad)
aad
imul
and
pop
(bad)
repnz
retf
xor
push
sub
sbb
cs
add
adc
retf
inc
fwait
add
inc
push
xor
pop
pop
dec
pop
sub
or
sbb
inc
(bad)
or
ins
pop
aad
aaa
inc
mov
sbb
mov
lock
(bad)
ret
mov
std
rcl
cdq
dec
adc
xchg
jns
xor
mov
sbb
cdq
mov
sub
das
jmp
aad
cs
sbb
jb
mov
ret
out
scas
int
push
add
movs
mov
rol
sub
xor
adc
jb
push
retf
adc
ja
(bad)
xchg
fild
adc
jp
sbb
mov
xchg
(bad)
outs
jmp
ja
cmps
jp
add
mov
xchg
es
jo
adc
sub
jo
or
xor
stos
sub
out
mov
les
jp
aad
mov
cmp
or
xchg
xchg
push
lds
(bad)
mov
test
cdq
add
mov
xchg
icebp
(bad)
sub
icebp
and
sbb
jle
sub
sbb
mov
cld
daa
inc
pop
pop
and
inc
dec
inc
mov
pop
dec
or
add
enter
mov
dec
xchg
fild
mov
out
mov
push
and
pop
sbb
call
pop
aam
sub
pop
push
jg
cmp
scas
add
fisubr
(bad)
xor
mov
lods
ror
inc
cld
cmp
lods
shl
test
stc
(bad)
neg
retf
retf
mov
xlat
cmp
call
sbb
jno
(bad)
in
xchg
xchg
inc
loop
inc
lock
mov
(bad)
sti
test
repz
test
mov
push
test
stos
out
(bad)
inc
sbb
ja
push
sbb
adc
jb
fdivr
cmp
cmps
ror
(bad)
fldenv
dec
pushf
inc
aad
pop
xchg
aam
lds
push
imul
dec
mov
fldz
cmp
into
mov
cmps
sbb
jne
jl
loopne
mov
push
cld
ja
fisttp
data16
das
nop
jecxz
push
jge
pop
add
das
xlat
test
xchg
xchg
xchg
dec
xchg
or
imul
addr16
mov
arpl
in
stos
xchg
dec
adc
icebp
cld
loope
xchg
dec
retf
shl
add
mov
pop
and
push
hlt
gs
fnsave
in
ins
repnz
pop
pop
test
add
mov
in
mov
mov
push
add
enter
mov
ins
shl
sbb
cdq
repnz
add
sub
seta
in
push
cmc
jge
and
ret
mov
jo
jecxz
mov
cld
push
and
or
cmp
not
mov
cmp
shr
push
rol
sub
(bad)
cs
(bad)
pop
pop
rcr
fmul
push
xchg
stc
or
ret
push
mov
or
add
loopne
push
leave
mov
bound
stos
dec
out
push
leave
(bad)
gs
in
push
fldcw
gs
push
add
jbe
jnp
add
sar
inc
xchg
scas
rcl
jne
push
ins
xchg
cmp
pop
repnz
ret
xchg
push
imul
push
add
rcl
dec
xchg
aaa
out
inc
imul
ret
dec
(bad)
test
and
and
add
popa
sub
and
jb
shr
hlt
mov
jne
ins
fisttp
jnp
mov
pop
lods
push
std
lahf
jns
jb
mov
mov
jb
and
and
and
sbb
push
inc
xor
and
sbb
neg
out
out
popa
movs
inc
push
push
sbb
dec
jbe
(bad)
cwde
push
(bad)
in
ret
fisubr
inc
(bad)
fnstcw
shl
sbb
sti
or
mov
call
fdivr
cmp
sub
test
fwait
aad
in
rol
fucomip
into
or
movs
lds
fmul
cmp
jle
and
shl
jg
push
test
push
stos
mov
inc
push
xor
pop
mov
xchg
jb
loop
cmp
mov
push
inc
sbb
call
std
int3
rol
bound
mov
hlt
int
mov
std
cmp
and
or
je
add
out
cmp
sub
push
ss
jae
push
push
mov
mul
xor
jp
mov
rol
jecxz
inc
mov
and
test
test
dec
gs
xchg
dec
aad
inc
cmp
es
stos
adc
div
xor
sub
mov
cmp
icebp
lock
mov
outs
sub
repz
psubq
dec
mov
sbb
ss
jne
sahf
stos
lock
pop
mov
sub
cmps
mov
movs
mov
shl
imul
pop
repnz
js
std
js
sub
dec
je
sbb
or
add
mul
enter
out
jle
daa
(bad)
cdq
pusha
test
fs
nop
pushf
sbb
fimul
or
shl
ret
pop
das
dec
or
lock
div
out
push
jge
push
inc
hlt
xor
push
ss
xchg
fadd
and
mov
fcmovnb
in
mov
daa
and
cli
stc
icebp
sub
addr16
adc
cmps
ret
(bad)
test
mov
xor
shr
sti
bound
or
jg
int3
xor
(bad)
mov
in
loop
inc
pop
inc
aas
push
mov
jns
adc
das
inc
cmc
and
mov
movs
mov
movs
call
pop
repz
dec
daa
push
outs
cmp
gs
ja
out
mov
xchg
(bad)
retf
inc
pop
iret
repz
xchg
inc
push
adc
out
mov
loopne
pop
mov
imul
ret
push
sub
adc
into
xchg
call
adc
lock
outs
sub
lods
push
inc
sub
dec
addr16
mov
pop
cdq
and
mov
rol
cmp
pop
in
adc
inc
mov
call
sbb
out
in
hlt
jle
mov
popf
mov
push
movs
aas
mov
inc
adc
or
call
push
pop
mov
cmps
ins
(bad)
call
jg
pop
mov
pop
push
pop
leave
xchg
mov
in
(bad)
lea
std
movs
jp
sahf
mov
jae
(bad)
repz
sub
jns
add
pop
adc
retf
stc
out
sbb
fistp
fldcw
or
mov
call
jmp
add
enter
and
adc
scas
lfs
out
jmp
mov
popf
jle
into
ds
inc
and
neg
xchg
sbb
(bad)
xchg
mov
push
mov
hlt
adc
sbb
or
xor
lea
lods
pusha
and
mov
add
jne
enter
xchg
inc
xor
sub
pop
nop
adc
bound
mov
xchg
cmps
push
sbb
loopne
cli
inc
cmp
dec
xchg
add
inc
repz
add
int3
test
adc
bound
cli
ror
xor
sbb
enter
push
jmp
les
daa
in
pop
cld
adc
or
dec
aaa
add
mov
mov
inc
(bad)
stc
int
adc
test
dec
mov
mov
test
pop
pop
jmp
mov
sub
movs
je
xor
aas
push
cmps
pop
aas
movs
das
and
scas
shl
and
in
xor
paddw
mov
sub
mov
es
gs
inc
stos
mov
adc
lock
push
ror
ret
popf
(bad)
stos
sub
xchg
sbb
cs
shl
dec
jbe
fcmovu
pusha
and
into
pop
(bad)
stos
and
ds
mov
in
mov
movs
aas
stos
cmp
jecxz
sbb
cmp
mov
add
cwde
sbb
jnp
fwait
mov
pop
nop
jle
xchg
jnp
jne
xor
lods
(bad)
ss
in
faddp
cli
mov
mov
sbb
dec
sar
pop
int
pop
test
loopne
pop
fld
cmp
jecxz
cmp
or
int3
pop
imul
lea
hlt
jbe
pop
jp
pop
xor
iret
lock
mov
lods
ja
xchg
inc
pop
loopne
add
les
repnz
scas
es
das
stos
sub
retf
ret
aaa
(bad)
dec
fadd
push
test
dec
sub
fmul
jge
add
mov
push
mov
hlt
in
adc
imul
xchg
cdq
dec
fdivr
call
arpl
js
or
outs
mov
aaa
jmp
test
and
lods
sahf
aas
pop
je
ret
sbb
in
inc
xor
(bad)
stc
and
push
mov
and
outs
mov
mov
shl
xor
sub
and
pop
(bad)
loop
inc
push
outs
or
fisubr
fisub
cmps
movs
rcr
imul
icebp
aad
mov
gs
int
cld
icebp
stc
loopne
mov
loope
cwde
inc
sbb
or
pop
call
adc
and
pop
cmp
pop
fidiv
push
mov
push
push
mov
pop
xchg
adc
lahf
mov
test
pusha
stos
rol
push
and
out
movs
ins
cmc
xor
jmp
cld
cmp
lahf
out
lock
mov
ds
out
inc
sub
sbb
scas
push
sbb
lds
sbb
jmp
cmp
xor
enter
shl
sti
test
adc
(bad)
outs
pop
xchg
ss
push
xchg
dec
xlat
repz
dec
neg
mov
shl
and
repz
add
cmps
outs
inc
xor
(bad)
mov
xchg
gs
xchg
push
data16
icebp
mov
fcomp
jmp
inc
sbb
enter
push
dec
jg
int3
loopne
data16
test
xlat
dec
xchg
int
mov
add
mov
test
sub
pop
not
xor
and
inc
add
adc
jl
pop
(bad)
adc
jecxz
imul
scas
xchg
xlat
in
dec
leave
mov
pop
inc
jno
ja
inc
fisttp
movs
call
push
test
xor
push
sar
movs
popa
dec
(bad)
mov
cs
hlt
movs
lea
mov
and
jl
arpl
out
cwde
mov
lock
and
pop
mov
inc
sub
fcom
jno
add
sub
push
jnp
inc
rcr
inc
shr
or
or
or
add
xchg
push
test
fwait
hlt
adc
sbb
mov
xor
push
jo
(bad)
mov
dec
xchg
in
jb
mov
xchg
in
push
pushf
mov
lsl
ja
pop
outs
stc
mov
pop
xor
div
xchg
pop
jp
push
ret
xchg
lahf
movs
push
popf
adc
loope
inc
inc
mov
imul
xchg
data16
inc
test
outs
out
std
pop
jns
pop
jmp
inc
pop
xchg
sbb
or
fsub
xor
or
add
cmp
clc
pop
arpl
mov
out
jae
enter
lods
xchg
adc
(bad)
adc
push
into
or
inc
mov
loopne
add
sub
mov
sub
pop
xchg
adc
cmps
rcr
mov
loop
inc
mov
mov
push
addr16
popa
movs
and
clc
jb
iret
and
jl
retf
es
mov
pop
popa
es
pop
out
and
and
add
(bad)
sbb
div
clc
add
das
pusha
push
cli
xchg
push
mov
inc
je
vmovapd
push
xchg
mov
mov
sbb
xor
xchg
outs
cmp
dec
mov
mov
jmp
ins
inc
xchg
pop
jmp
sahf
mov
out
jge
fdivr
fstp
pusha
lahf
gs
test
ins
xor
out
mov
mov
daa
xchg
cli
fistp
dec
call
mov
cld
in
adc
mov
jl
mov
cmp
inc
xchg
setno
aam
adc
icebp
push
inc
pop
xor
push
push
cmp
push
sahf
pop
sbb
xchg
push
nop
enter
mov
ja
jno
jae
and
ficomp
(bad)
push
scas
mov
cwde
jnp
dec
add
sbb
(bad)
lock
ins
pop
movs
jecxz
xor
stos
fstp
stos
jle
nop
fcom
sbb
lahf
cmp
fidiv
mov
inc
movs
push
dec
sub
inc
dec
aaa
ins
mul
(bad)
shr
imul
int3
sbb
xor
push
dec
mul
outs
cmp
rcr
ss
sub
cmp
inc
and
js
sbb
xchg
adc
jge
xlat
test
or
and
ret
(bad)
std
cmp
ret
dec
xchg
in
inc
cmps
pop
scas
pop
xor
lock
popa
leave
mov
lea
ror
iret
cs
add
sbb
xor
push
mov
aaa
sub
pop
or
xchg
xchg
mov
pusha
stos
or
into
scas
xor
sub
(bad)
and
jecxz
push
hlt
in
xor
mov
movs
add
lds
push
int
dec
ja
or
pop
(bad)
fs
push
sbb
js
push
rcl
aad
cmp
jb
or
or
inc
adc
movs
mov
test
push
dec
push
call
ret
arpl
mov
push
scas
sub
mov
mov
in
js
xor
mov
mov
sub
jmp
mov
xrelease
je
mov
mov
daa
cmps
ret
lahf
and
mov
aam
cmc
sahf
xor
cwde
jecxz
jmp
js
cmp
lds
or
ins
sbb
mov
fadd
std
call
sbb
rcl
and
rol
pop
imul
dec
cs
xor
ins
cmp
xchg
or
es
fs
dec
rol
push
mov
inc
pusha
jg
or
push
jne
fidiv
rol
xchg
data16
scas
arpl
dec
enter
xchg
jmp
pushf
push
sub
fwait
xor
dec
enter
add
sub
xchg
ficomp
nop
pop
outs
or
jnp
dec
scas
push
or
retf
shr
push
loopne
sbb
mov
pop
push
xchg
mov
(bad)
idiv
repnz
push
jg
push
sbb
ins
popf
pop
(bad)
movs
in
shr
dec
or
inc
mov
mov
(bad)
cmp
fadd
or
mov
mov
add
mov
jns
test
cmp
or
and
sub
push
(bad)
cmps
gs
js
retf
dec
mov
icebp
test
imul
popf
adc
scas
push
cmp
and
xor
clc
mov
mov
adc
sar
mul
ds
stos
out
jae
test
data16
fisub
add
rol
shr
inc
fs
ins
xor
fcmove
int
fistp
and
in
pop
push
js
adc
lock
lock
fidiv
push
bound
loop
or
lahf
cli
push
inc
sub
pop
nop
cmp
pop
xchg
push
mov
add
ficomp
cmps
pop
mov
shl
xlat
mov
xchg
pushf
mov
imul
movs
je
sbb
lds
add
mov
dec
data16
inc
adc
mov
iret
ficomp
xchg
sbb
jg
add
cmp
repz
clc
sbb
xor
inc
call
xchg
pop
xor
push
mov
shr
mov
iret
inc
dec
cli
xchg
or
add
sahf
fwait
ja
mov
adc
push
or
cld
repz
xchg
loop
xor
mov
and
loop
xor
and
adc
xchg
movs
sbb
in
jp
sub
test
cwde
cmps
out
xchg
xchg
jmp
jmp
mov
xor
test
adc
cmp
adc
mov
or
sti
pop
pop
jno
push
out
(bad)
cli
mov
add
call
cmp
xor
cmps
push
adc
pop
mov
pop
mov
jl
add
and
lea
dec
movs
push
popa
push
and
inc
iret
les
setb
cmp
dec
out
sbb
dec
fcomp
xchg
fistp
inc
mov
fidivr
mov
sbb
fbstp
xchg
outs
sbb
xchg
mov
xchg
shr
dec
in
dec
out
lds
dec
sub
mov
mov
dec
vmwrite
movs
adc
clc
mov
test
inc
fstp
jns
pusha
cwde
(bad)
push
add
adc
ret
fiadd
aaa
fstp
stc
xchg
out
not
imul
cmp
and
or
mov
jl
xor
out
loope
mov
je
ret
mov
jg
bound
gs
retf
leave
adc
pusha
add
loopne
outs
(bad)
(bad)
push
sbb
mov
dec
pop
stos
dec
es
mov
mov
push
rol
jo
shr
cmps
push
shl
xchg
std
mov
add
shl
push
jmp
add
(bad)
sti
xor
fmul
fild
lods
push
xchg
cmp
aas
mov
mov
xchg
jmp
dec
cdq
lds
sahf
mov
cwde
jne
sub
xor
popf
sub
mov
jmp
xchg
std
ins
sti
jle
lods
loope
int3
jle
repnz
rol
fldln2
dec
dec
test
imul
or
mov
aam
mov
jecxz
pop
xchg
or
push
sahf
je
loope
inc
adc
pop
mov
das
mov
call
rcr
pusha
mov
outs
inc
outs
clc
ja
mov
pop
fstp
lea
pop
mov
inc
mov
bound
or
(bad)
cli
push
push
test
(bad)
call
adc
nop
push
push
test
mov
out
sti
sar
xor
fwait
repz
and
sti
jmp
push
movs
mov
lods
cmps
jl
cli
pop
test
push
lods
push
cmp
je
out
rcl
shr
push
add
ins
in
mov
xor
fsub
jae
ficom
inc
hlt
cs
popf
adc
pop
stos
aaa
pusha
jb
push
test
pushf
mov
cdq
in
icebp
scas
cmp
sub
xchg
ins
pop
test
jle
and
cli
add
sar
pop
clc
jbe
or
stos
iret
sub
mov
push
shl
scas
jb
or
cmp
pop
add
retf
loop
add
jg
rol
fstp
mov
fimul
mov
fild
es
popa
mov
cmps
fsubr
ins
mov
add
test
mov
mov
xor
jne
xor
xor
mov
clc
push
popa
into
jge
test
call
aam
pop
add
cmps
dec
or
movs
mov
xor
or
cmp
test
push
sub
scas
lea
in
and
inc
jne
dec
push
mov
fnstcw
jae
mov
or
fcmovne
push
data16
shl
push
movs
in
mov
cmp
pop
aad
es
pop
gs
ret
rol
sub
and
pop
inc
fbld
add
pop
push
int
popf
xchg
xor
pop
cmp
dec
mul
je
aaa
jg
sar
fsubr
dec
jb
div
sbb
sub
into
rol
rcl
mov
dec
and
shr
cdq
mov
out
jno
xchg
outs
mov
retf
sbb
js
sub
test
sub
or
test
pop
fstp
mov
add
xchg
cmc
loopne
cmp
mov
pop
dec
neg
xor
arpl
shl
inc
cwde
inc
std
movzx
inc
(bad)
cs
addr16
jb
push
or
arpl
mov
push
fmulp
jl
xchg
movs
add
aas
out
stos
xor
fidiv
ss
mov
push
scas
test
cmp
jo
xchg
outs
jne
sbb
lock
cmp
(bad)
ins
xchg
ins
loope
sub
mov
cmp
hlt
fdiv
xchg
(bad)
inc
clc
hlt
pushf
fdivr
enter
cmp
in
and
add
jmp
cmp
pop
clc
push
lahf
ss
and
xchg
iret
int
push
in
inc
mov
pop
int3
xor
stos
jne
fdivr
push
cmp
cmps
jae
mov
sbb
inc
adc
mov
sub
mov
adc
adc
(bad)
(bad)
fisubr
pop
cld
jmp
jns
xor
ret
ret
in
xor
inc
fwait
pop
scas
gs
xor
into
rcr
fstp
shr
icebp
cdq
mov
arpl
xchg
fcomi
hlt
xchg
push
pop
ins
jmp
inc
call
xor
xor
stos
(bad)
jno
push
sbb
ror
push
es
mov
sbb
inc
(bad)
sbb
(bad)
push
xor
cmp
sbb
mov
jecxz
rcr
and
lahf
out
mov
fdivr
mov
inc
push
aam
in
repnz
fdivr
std
pop
aaa
xor
sbb
jo
pop
icebp
nop
test
xchg
(bad)
and
xchg
cmp
shr
out
mov
or
jmp
inc
test
push
jae
inc
push
jno
sar
in
xlat
mov
dec
push
fcomp
mov
inc
and
jmp
lods
fbstp
add
mov
dec
scas
call
mov
lds
ins
fld
cmp
int
cmp
mov
mov
push
dec
movs
push
sbb
or
and
mov
retf
fldenv
pushf
out
and
dec
push
or
inc
mov
fsub
xlat
and
data16
cmc
cmovbe
cmp
and
jmp
or
and
inc
xor
data16
cdq
push
xchg
mov
scas
and
cdq
ror
xor
arpl
ror
push
sbb
fs
scas
mov
xlat
jmp
jb
adc
cmc
stc
push
cwde
popa
or
iret
jo
and
xchg
jne
jne
xor
and
cmp
(bad)
repz
push
mov
adc
std
in
sub
loop
es
dec
sbb
jo
icebp
rcr
add
lods
leave
test
ins
(bad)
sbb
cmps
in
fimul
xchg
mov
pusha
and
lds
or
xchg
xor
xor
out
add
xor
fst
mov
(bad)
pop
pusha
sbb
mov
les
rol
xchg
pusha
cmps
xchg
add
add
cs
push
std
pop
and
push
shl
pop
cmp
push
cwde
inc
popf
push
imul
aaa
xchg
jmp
nop
test
jnp
popa
pop
dec
mov
inc
mov
lea
dec
pop
sub
je
add
in
stos
lahf
pop
mov
adc
jae
adc
add
test
xor
loope
mov
dec
clc
sub
adc
ss
push
push
sbb
shl
xchg
adc
test
mov
aaa
leave
adc
sbb
fwait
xchg
jmp
sahf
inc
xchg
and
scas
add
xor
fld
mov
mul
gs
mov
into
retf
ss
xor
push
lods
test
icebp
inc
jo
add
add
mov
or
addr16
cdq
add
in
jecxz
in
test
dec
sar
jbe
ror
adc
inc
mov
shr
mov
fcom
or
(bad)
sub
push
inc
dec
sbb
jmp
push
iret
cwde
xchg
addr16
retf
cmp
outs
push
and
jge
sbb
test
sar
jne
xor
ret
push
test
repnz
and
test
mov
rol
sub
imul
xchg
xlat
pop
dec
adc
int
fld
pop
ins
pop
fidiv
mov
sbb
(bad)
sub
cwde
cmp
xor
sub
clc
dec
sar
or
mov
outs
jne
idiv
cmc
pop
movs
lock
sub
retf
pop
fiadd
jne
rcr
cmp
dec
test
int
imul
je
mov
loopne
mov
xchg
dec
sub
nop
mov
sbb
add
lods
test
add
cmp
popa
mov
and
pop
dec
in
push
cmps
xor
std
cmp
mov
dec
test
ss
cli
and
bound
pop
cwde
outs
call
(bad)
in
jle
mov
xchg
mov
shl
jmp
pop
dec
jnp
test
xor
in
lds
and
dec
sbb
scas
mov
mov
fcmovbe
xchg
mov
int
pop
sahf
mov
int
sbb
cmps
cmp
inc
mov
cwde
dec
fs
stc
mov
rcl
add
mov
mov
xchg
inc
add
add
in
in
je
in
retf
out
xor
xor
fcmovbe
inc
or
mul
gs
loope
xchg
mov
add
inc
mov
mov
stos
adc
call
or
mov
mov
adc
push
cmp
pop
div
in
lea
mov
mov
call
stos
icebp
cmp
hlt
inc
mov
push
jp
xor
fisttp
(bad)
fs
out
jge
ss
pusha
test
push
and
mov
sub
js
add
test
sub
mov
outs
push
cvtps2pd
xor
jnp
and
mov
js
enter
push
in
shr
cmp
mov
mov
sub
stos
leave
add
jl
add
stos
jbe
sub
push
pop
sub
mov
(bad)
or
sbb
call
mov
stc
das
jae
sahf
sub
ins
jns
push
jno
add
fimul
push
sub
add
mov
or
pushf
(bad)
inc
(bad)
dec
js
xor
cdq
push
inc
push
mov
and
jecxz
rcl
test
sbb
lock
dec
add
lds
cli
repz
mov
fdivr
mov
(bad)
mov
pop
inc
dec
mov
icebp
or
pop
mov
jnp
pop
jo
sbb
pop
dec
xchg
stc
pop
shl
mov
pop
dec
push
lahf
loop
adc
add
cmp
test
dec
je
lods
mov
cmp
mov
inc
pop
popa
nop
pop
sub
cmps
mov
xchg
jne
and
cmc
push
mov
pop
xor
pop
cmc
movs
cmp
inc
add
dec
in
xchg
outs
(bad)
stos
(bad)
mov
arpl
fs
(bad)
into
or
or
push
xor
ror
add
lds
std
test
mov
or
sbb
sub
and
jno
sti
jl
mov
addr16
jle
jp
test
push
stos
ror
ja
pop
adc
out
inc
xlat
aam
stos
aam
cmp
pop
ss
push
fwait
sbb
jp
dec
add
ret
ret
sbb
adc
lods
int
pop
cdq
leave
gs
jl
or
sbb
sub
in
jbe
dec
xchg
dec
push
lea
jmp
js
leave
push
dec
dec
out
scas
sub
mov
or
into
sbb
movs
pop
leave
(bad)
push
inc
pop
loope
pop
cmp
cmp
or
in
push
fisubr
xchg
pop
sahf
into
mov
cmp
push
nop
or
xchg
popf
(bad)
pop
cmps
or
lods
fisubr
cmp
push
add
add
cli
dec
mov
mov
inc
scas
dec
dec
cmps
retf
fwait
cmp
xchg
inc
fwait
cmc
xchg
ret
fstp
xor
cmp
mov
and
rcl
push
(bad)
cld
(bad)
xor
mov
daa
cdq
sub
xor
pop
loopne
test
or
sub
loop
xchg
xlat
out
inc
or
mov
or
jno
cmc
pop
ins
cmps
icebp
push
cmc
jmp
call
mov
sub
aam
in
lock
and
js
imul
add
mov
out
dec
cmp
push
sbb
or
iret
and
scas
push
jmp
inc
sbb
pop
cmps
pop
rol
cmp
sti
in
cmp
test
jg
stos
jns
lods
mov
xor
out
ins
scas
jmp
mov
jo
das
adc
adc
(bad)
stc
shl
arpl
mov
mov
jmp
pop
mov
xor
jo
stc
mov
fimul
xor
push
push
jno
and
cld
and
adc
jg
call
sbb
mov
pop
test
pop
or
inc
mov
push
retf
sbb
loopne
mov
inc
or
xor
sahf
leave
inc
inc
dec
jo
dec
mov
cmp
popa
hlt
mov
std
add
jg
ret
dec
mov
jno
(bad)
ffree
sub
cmp
jmp
push
(bad)
pop
mov
jno
idiv
enter
lock
sbb
cmc
mov
cmp
les
stos
call
sahf
push
jmp
xchg
cmp
ret
mov
and
data16
leave
mov
cmp
add
jp
jne
xchg
inc
adc
ds
push
js
aam
inc
jnp
les
sahf
movs
aaa
cmp
mov
mov
dec
call
inc
shl
jmp
mov
jl
clc
movs
fimul
dec
mov
jge
into
stc
scas
and
cld
cdq
out
mov
sbb
mov
lods
xchg
cmps
jne
aad
push
pop
sub
aad
lds
and
or
mov
sub
xchg
xchg
dec
jge
and
cmp
mov
mov
mov
les
int
pop
push
rcr
push
adc
mov
leave
dec
add
and
cwde
add
dec
stc
inc
adc
inc
mov
or
mov
xor
shl
add
ds
and
push
sti
std
cmp
xchg
push
cmp
cmp
mov
dec
cmp
std
xchg
sbb
mov
packssdw
in
add
add
xor
pop
stos
out
push
or
movs
outs
xor
mov
and
test
cmp
stos
add
daa
mov
xor
dec
add
enter
mov
mul
sub
bound
fstp
fwait
cmps
or
arpl
leave
cld
fst
cld
mov
movups
jbe
add
jle
mov
push
inc
cmp
dec
inc
xor
push
or
inc
cmps
ins
add
retf
outs
in
add
es
add
fidivr
ins
mov
enter
sti
mov
sub
jmp
adc
pop
push
outs
jl
fsub
bound
or
xor
popf
test
iret
icebp
test
ret
dec
retf
and
nop
lods
xchg
pusha
or
push
aas
push
xchg
call
jp
dec
jg
aam
adc
loop
psubb
outs
and
cli
pop
or
ret
push
sub
lahf
mov
stc
xchg
mov
lods
xor
xchg
jbe
daa
cmp
aam
and
pop
mov
add
adc
into
push
cdq
cmc
adc
sahf
xchg
xchg
add
jo
and
fnstenv
test
jno
mov
cmp
mov
(bad)
test
movs
shl
sub
sub
mov
(bad)
retf
hlt
inc
cld
inc
scas
mov
xlat
sub
lods
mul
in
ret
jmp
or
inc
jge
mov
xchg
jnp
jl
sbb
sahf
in
(bad)
mov
xchg
xchg
pop
inc
test
sub
iret
jge
into
mov
(bad)
bound
(bad)
jmp
leave
lds
in
lds
sbb
xor
fst
mov
cmps
jge
cs
(bad)
push
(bad)
pop
out
push
cmp
adc
call
or
iret
or
(bad)
in
xchg
cmp
loopne
movs
xchg
fsubr
push
mov
xor
and
sbb
xor
mov
dec
call
mov
fst
xchg
xor
stos
inc
adc
out
not
mov
push
rcl
es
jl
and
pop
hlt
xor
push
or
mov
push
jg
shl
cmp
jmp
out
ror
adc
call
xlat
out
pop
mov
ror
sub
mov
or
fisttp
aad
xor
mov
xchg
clc
aaa
or
aam
pusha
test
popf
neg
pop
or
repnz
pop
sar
lahf
push
fild
aam
sahf
mov
adc
inc
cmp
adc
mov
scas
(bad)
neg
pop
shl
mov
xor
jmp
shl
out
(bad)
fld
and
xlat
popa
fmul
and
add
shl
jecxz
(bad)
cmps
stos
cld
scas
(bad)
push
fimul
cmc
jp
and
loopne
mov
daa
mov
mov
mov
fcom
daa
or
dec
test
sbb
sub
mov
push
xchg
test
mov
popa
cmp
test
(bad)
repz
jno
cli
(bad)
cs
sub
dec
and
xor
xchg
add
cmp
mov
adc
mov
in
sub
cs
fwait
sti
mov
std
adc
fisttp
pop
jno
jo
mov
mov
push
jno
movs
loop
ja
shl
ret
mov
sbb
test
aam
loop
stc
xchg
test
or
pop
inc
mov
(bad)
xor
icebp
xor
pop
push
inc
jb
pop
sub
in
loop
movs
lods
(bad)
test
jns
fidiv
out
(bad)
cmc
scas
or
mov
mov
fwait
mov
inc
adc
push
sbb
mov
ds
adc
outs
pop
rol
and
mov
jl
fisttp
movs
loop
daa
stos
and
ffree
imul
mov
nop
ins
sub
add
cdq
sbb
adc
push
xor
push
stos
int
jmp
sti
xor
xor
mov
push
jb
fsub
mov
mov
mov
dec
sbb
repz
daa
enter
in
push
div
dec
leave
movs
sbb
mov
(bad)
cmp
or
mov
clc
jmp
retf
out
hlt
xchg
adc
mov
and
push
mov
mov
ror
xchg
push
push
jecxz
inc
repz
sar
stc
sub
test
jbe
xchg
and
sub
sbb
test
mov
xor
xchg
fdiv
jecxz
push
cmp
out
lea
loop
jmp
cmps
ds
ret
push
cmp
jle
lds
dec
mov
adc
sbb
sar
aad
sti
mov
inc
xchg
inc
mov
retf
and
fdiv
(bad)
lods
xor
dec
xchg
jmp
pop
mov
sub
xor
cmps
mov
das
fld
(bad)
mov
movs
sbb
sub
cmp
pmaxub
mov
sti
sbb
ss
xchg
test
ja
loop
add
loope
sbb
mov
dec
retf
or
push
push
fcom
loop
int3
xlat
jecxz
push
shr
mov
lock
aad
and
xchg
ins
arpl
int3
enter
mov
dec
push
push
push
mov
daa
adc
inc
cld
xor
retfw
or
fisttp
mov
movs
call
mov
iret
dec
pop
push
jne
push
dec
(bad)
daa
stc
xchg
cmp
fistp
cmp
and
push
pop
dec
and
push
(bad)
ror
ret
sub
xchg
imul
and
inc
out
adc
cmp
es
loop
mov
and
push
sbb
or
fwait
jno
mov
stos
pop
ss
jl
stos
sbb
out
(bad)
imul
into
cmp
mov
lock
(bad)
mov
pop
xchg
xor
push
ins
sbb
ja
das
daa
imul
(bad)
fist
dec
cdq
push
xor
ins
or
out
mov
pop
adc
daa
and
push
dec
adc
dec
fxch
xlat
stos
jg
pop
cwde
fidiv
ds
cmp
into
outs
and
adc
sub
jmp
loope
lds
dec
bound
lock
jns
cmps
mov
cmp
call
cmp
cwde
or
push
mov
cs
sar
mov
inc
cmp
and
mov
cmp
(bad)
sahf
fs
mov
in
loopne
mov
jp
ins
popf
repz
sbb
mov
outs
push
fisubr
sub
mov
fidiv
out
dec
adc
mov
adc
jnp
out
mov
sti
jg
xchg
xor
dec
sub
je
mov
mov
test
jo
out
aaa
in
or
mov
dec
jae
out
je
lea
cmps
repz
(bad)
push
and
inc
pop
add
pop
jnp
and
(bad)
iret
jnp
out
jne
aaa
and
addr16
dec
add
or
call
jmp
and
idiv
es
sbb
outs
loopne
adc
lahf
in
mov
jmp
inc
movs
xchg
aam
sbb
sub
xchg
pop
nop
pop
push
or
fsubp
dec
inc
mov
jne
aam
addr16
shl
(bad)
xlat
or
ret
xchg
imul
push
push
mov
push
cmp
popa
in
mov
in
not
jns
rol
stos
imul
dec
mov
xor
ja
xor
lahf
out
clc
lds
test
rcl
mov
mov
nop
das
shr
push
fisub
call
popa
retfw
jbe
fiadd
pop
inc
cli
xor
dec
sahf
movs
adc
lea
lahf
cmps
pop
std
rcr
leave
push
xchg
dec
and
scas
int
iret
cmc
mov
pushw
icebp
jb
and
stos
aas
cmp
cmp
add
inc
sub
fsub
jno
or
mov
inc
pop
jle
clc
adc
mov
mov
popf
dec
xor
fld
pop
push
ja
mov
test
push
jmp
jmp
jmp
inc
(bad)
hlt
cmc
in
mov
mov
int3
cmp
pop
sub
push
iret
cmc
mov
mov
repnz
test
push
scas
and
mov
mov
xchg
mov
into
inc
fild
jb
pop
test
pushf
xlat
or
dec
mov
out
mov
and
cld
(bad)
sbb
lods
in
pop
jb
dec
in
popa
mov
mov
loop
shl
dec
aam
addr16
push
mov
sbb
imul
mov
aad
int
(bad)
mov
lahf
sti
push
fld
xchg
push
in
push
cmp
push
data16
retf
outs
ds
fsub
jg
fisttp
xor
aas
loopne
and
rcl
mov
retf
xchg
dec
or
push
cmp
out
xor
or
jle
in
inc
dec
ds
gs
dec
mov
jo
sub
cmp
mov
cmps
inc
xchg
or
xor
lds
popa
mov
dec
aas
scas
mov
mov
adc
mov
jl
in
daa
add
loop
adc
imul
movs
mov
jp
retf
pop
sbb
vpsraw
adc
lahf
xchg
push
clc
or
push
imul
cmc
inc
add
xchg
div
fstp
add
mov
shr
push
call
sysenter
fwait
adc
jecxz
xchg
mov
jecxz
cmps
mov
cwde
mov
jp
inc
mov
jo
mov
sahf
add
inc
ja
xor
mov
mov
sub
sub
sbb
jns
lea
cmp
fisubr
fisttp
add
inc
inc
mov
(bad)
sub
mov
xchg
icebp
ds
popf
repnz
js
xchg
ss
add
push
add
pop
loop
imul
mov
arpl
lea
(bad)
fwait
out
pop
inc
mov
cmps
sub
(bad)
stc
jae
adc
xor
loop
mov
and
sbb
ficomp
jae
push
push
shl
ds
clc
movs
pop
push
mov
add
out
mov
es
fs
jmp
xor
mov
sub
pop
bound
popf
repnz
dec
xor
pusha
cmps
or
xchg
rcr
(bad)
call
cs
mov
je
dec
test
mov
adc
fsub
arpl
shl
mov
pushf
repz
mov
sub
outs
shr
lock
pop
xchg
xchg
div
pushf
pop
sbb
jno
sar
cmp
int3
jle
aad
jb
mov
dec
retf
jnp
lods
adc
rol
adc
xchg
pushf
cli
test
and
inc
shl
aas
mov
dec
cmp
fwait
mov
test
loope
test
fwait
pop
adc
aad
sub
mov
jl
mov
(bad)
or
leave
rol
push
icebp
loopne
adc
test
mov
push
scas
and
mov
ins
jle
aam
and
imul
hlt
sbb
iret
rol
push
aad
into
test
mov
pop
int
and
pushf
dec
call
xor
or
retf
jno
push
rcl
xchg
imul
cs
movs
xor
push
test
inc
jmp
mov
out
xor
jbe
popa
xor
iret
jle
dec
inc
out
inc
outs
jb
icebp
push
mov
lods
out
dec
sub
mov
add
lds
and
outs
lods
test
stos
jecxz
add
retf
enter
sub
cs
retf
cmp
xchg
test
pop
pop
dec
cli
in
psubb
cld
pop
jmp
mov
scas
repnz
mov
dec
sti
jns
adc
lods
test
and
repz
pop
mov
retf
adc
mov
sbb
test
add
mov
cli
in
and
xor
push
mov
cmp
xchg
adc
cwde
das
loope
add
das
cld
mov
nop
lods
shr
scas
icebp
fmul
lods
in
stos
jle
les
aam
inc
mov
in
or
imul
jmp
and
adc
cmps
inc
pop
push
bound
inc
adc
sub
shl
(bad)
xor
enter
xchg
lock
out
retf
(bad)
shl
ror
fwait
sub
inc
mov
movs
not
jp
sbb
enter
adc
lock
stos
mov
jl
cmp
cmp
adc
jo
jmp
(bad)
in
push
or
jecxz
jecxz
xor
or
sub
stos
add
pop
ss
lahf
fild
shr
lea
aas
mov
aad
mov
sub
add
mov
push
and
sti
sti
sbb
mov
aas
mov
out
out
pop
mov
mov
cdq
loopne
dec
pop
gs
jecxz
sub
cmp
pop
je
nop
inc
push
pop
inc
jnp
push
sub
fmul
addr16
in
pop
add
lods
js
dec
cmp
sar
mov
out
and
mov
enter
xor
add
(bad)
or
test
add
gs
or
out
(bad)
mov
jno
mov
in
jns
fldcw
in
sub
mov
(bad)
mov
out
inc
bound
ret
sbb
xor
les
and
das
out
jmp
ins
lods
ret
dec
rcr
out
cmps
push
enter
xor
in
iret
fsub
popa
jg
sub
mov
sub
movs
retf
ficomp
push
es
or
in
pop
sahf
(bad)
in
ins
sub
dec
popa
or
jae
jb
imul
inc
push
clts
aas
ficomp
jmp
scas
mov
in
ins
sub
arpl
add
sbb
and
lahf
pop
xor
outs
jmp
and
out
in
ds
push
es
inc
arpl
sti
mov
jg
hlt
cwde
movs
pop
hlt
test
sub
cmp
fistp
ins
xor
dec
dec
shr
sbb
adc
mov
sbb
mov
data16
mov
sti
stos
enter
xor
outs
test
mov
pop
jl
push
or
push
jb
push
rcl
rol
pop
and
aam
adc
aas
jl
out
daa
imul
ins
mov
jle
daa
xor
push
in
mov
xor
fst
mov
push
adc
(bad)
or
ret
call
jge
adc
cmp
aad
inc
pop
adc
cmp
pusha
(bad)
out
and
sub
inc
and
dec
loope
fld
lods
mov
fisubr
rol
or
mov
popf
stos
xchg
add
je
inc
bound
cwde
cmc
je
add
out
lahf
and
scas
popf
jbe
mov
sbb
mov
inc
pop
mov
pop
add
outs
jnp
test
cmc
and
xchg
movs
jmp
xchg
out
repz
mov
scas
mov
in
cmps
push
pop
cmp
adc
pop
sar
pandn
je
push
hlt
call
in
aam
sub
outs
jg
push
mov
mov
adc
jne
dec
sub
sub
jmp
dec
cs
ds
push
mov
out
loopne
jbe
lods
fimul
push
div
xrelease
mov
cmp
fcmove
pushf
lods
mov
xor
pop
stos
or
test
adc
outs
cmp
mov
mov
jl
mov
push
add
loope
add
xor
loop
push
mov
in
loope
jne
fxch
popf
or
cmp
arpl
jl
cld
mov
fimul
mov
xlat
mov
jmp
sbb
test
xchg
dec
sub
xor
jecxz
imul
mov
adc
in
mov
sub
add
lahf
mov
or
fstp
jle
fs
retf
mov
hlt
push
cmp
sub
nop
scas
sub
dec
mov
push
(bad)
mov
jecxz
xchg
imul
xor
mov
sub
jo
xor
lods
std
cmp
mov
out
mov
aad
(bad)
paddw
setp
mov
xchg
adc
push
mov
dec
pop
inc
mov
jg
ja
jp
sbb
gs
mov
movs
clc
loope
mov
test
inc
rcr
(bad)
(bad)
jbe
ja
out
sbb
jmp
int
adc
mov
xor
call
add
pop
fidiv
rol
adc
push
ss
aaa
into
or
or
dec
nop
dec
test
pop
out
push
lods
xor
mov
stos
mov
add
(bad)
xchg
aas
icebp
jg
movs
or
sub
sbb
inc
fwait
retf
call
dec
aas
(bad)
call
(bad)
and
imul
mov
ror
mov
jns
lea
out
das
into
or
dec
xlat
xchg
in
jmp
xchg
pop
jne
mov
stc
test
xor
lods
xchg
xor
out
mov
test
fisttp
pop
rcl
jmp
scas
aas
imul
lea
cmp
jbe
loope
nop
(bad)
mov
inc
sub
aam
push
pop
outs
push
pop
dec
dec
shr
leave
pushf
cmp
mov
imul
(bad)
cmp
sbb
ror
dec
jg
and
sbb
mov
pop
aas
retf
lods
mov
sahf
mov
in
bound
out
cld
(bad)
fsub
xor
loopne
stos
inc
(bad)
clc
push
mov
dec
fld
adc
jmp
ret
dec
inc
stc
push
mov
jo
arpl
inc
mov
out
mov
xchg
mov
inc
or
mov
dec
aas
xchg
mov
mov
mov
mov
inc
pop
(bad)
mov
out
ret
fstp
in
gs
aam
inc
pusha
(bad)
xlat
jmp
jle
add
sub
sbb
sub
lahf
xchg
mov
test
sub
mov
and
outs
and
mov
(bad)
xor
pop
dec
hlt
gs
sub
push
retf
cmc
xchg
pop
mov
loop
mov
int
cmp
push
dec
lock
inc
fs
(bad)
add
add
aad
(bad)
pop
push
cs
fs
xchg
mov
retf
test
mov
fbstp
sub
imul
das
test
or
mov
fdiv
loop
aas
nop
icebp
xchg
lahf
fsubrp
or
or
mov
dec
std
idiv
fld1
mov
scas
fisttp
loopne
retf
ins
push
or
bound
test
pop
sub
or
adc
sub
mov
and
iret
fldcw
push
or
add
sbb
sub
adc
pop
or
pushf
xor
adc
xchg
add
pop
or
das
push
jo
sbb
mov
and
cmc
nop
and
mov
int
stos
dec
inc
je
mov
adc
ror
cwde
test
mov
(bad)
mov
and
dec
shl
out
(bad)
xchg
cmps
mov
dec
xchg
cwde
push
rol
mov
push
xchg
cmc
(bad)
outs
inc
inc
push
(bad)
fcomp
movs
pop
imul
add
popf
ja
xor
lods
pop
mov
(bad)
mov
add
and
adc
daa
fisub
in
mov
sti
adc
test
hlt
sub
shl
xchg
loope
pushf
or
cmp
adc
(bad)
push
push
pop
xchg
sub
push
push
add
lahf
jp
push
mov
into
xor
pusha
sar
das
(bad)
popa
xor
fs
ficom
in
leave
inc
test
xchg
pop
jmp
or
jno
loop
fsubp
(bad)
call
daa
out
push
das
ins
std
or
xchg
call
les
push
mov
arpl
fdiv
or
fadd
adc
out
sub
push
inc
fnstcw
out
mov
mov
pop
gs
or
retf
mov
pop
mov
scas
test
push
jle
pop
inc
jb
xor
cmps
inc
out
dec
cmp
ffreep
retf
mov
dec
pop
test
or
push
aaa
movs
jns
shl
jle
cmp
add
les
xchg
pop
inc
pop
lods
jmp
imul
push
add
mov
repz
in
data16
in
push
and
jg
dec
mov
das
add
fnstcw
xchg
xchg
jl
mul
sub
ins
or
out
mov
enter
in
out
xchg
jl
sbb
dec
(bad)
mov
jne
call
sbb
out
sbb
mov
cmp
pop
pop
sti
push
pop
xor
lahf
mov
aam
outs
movs
(bad)
cmps
sub
pop
(bad)
fdivp
pop
retf
arpl
out
cmp
push
outs
inc
mov
or
mov
jmp
imul
push
mov
pop
mov
sub
xchg
add
sub
repz
and
call
(bad)
test
iret
lods
mov
(bad)
mov
mov
pop
mov
pop
cmp
mov
lds
jo
in
mov
xchg
leave
sbb
(bad)
ds
in
sbb
inc
cli
pop
mov
pop
jb
add
test
pop
sti
cs
xor
mov
sbb
pop
enter
jb
in
ret
xchg
std
xor
loop
outs
jle
js
add
jmp
sbb
mov
mov
fwait
jl
xchg
or
imul
aas
xchg
enter
jo
sbb
fadd
lds
lods
mov
ds
sub
pop
xchg
push
xlat
test
add
sub
pusha
pop
mov
fisub
and
add
fbld
or
adc
push
or
cmp
xor
test
loope
test
xor
mov
sub
and
add
lock
push
fisttp
add
mov
rol
shr
and
add
jne
and
pop
dec
and
iret
sbb
xor
adc
aad
and
xor
rol
mov
dec
jmp
mov
stos
fabs
xchg
into
mov
sub
inc
mov
and
sub
mov
int3
fsubr
adc
sbb
and
sub
push
inc
lods
cmps
movs
xor
mov
xchg
loop
aas
xchg
dec
mov
sbb
and
jg
das
ja
mov
push
out
xchg
pop
xor
hlt
je
xchg
pavgw
movs
xlat
push
and
mov
mov
jmp
pop
and
test
jle
mov
sbb
mov
pop
adc
sar
push
adc
in
jmp
dec
scas
inc
sub
dec
loopne
cld
adc
pop
inc
xchg
dec
dec
aaa
shl
in
xor
xchg
imul
xor
out
jge
push
outs
std
inc
and
test
adc
movs
int3
sub
js
pop
data16
pop
sahf
rcl
(bad)
xchg
iret
fwait
mov
pop
mov
push
mov
xchg
add
sub
mov
call
cmp
movs
aam
pmuludq
test
leave
inc
xchg
icebp
dec
std
pop
mov
ins
mov
cmp
add
xchg
pop
sbb
push
popf
pop
jo
adc
les
aaa
mov
cmps
adc
cmp
test
in
std
or
popf
or
test
and
push
xchg
push
and
dec
das
mov
clc
mov
add
add
outs
jmp
fisttp
jle
test
neg
mov
mov
pop
pop
xlat
and
js
outs
or
or
xor
in
add
fwait
outs
mov
in
add
sbb
dec
cmc
out
or
inc
jge
adc
bound
sbb
adc
mov
adc
push
inc
test
add
mov
int3
retf
sub
xlat
ret
add
pop
mov
jecxz
lods
leave
inc
cmc
jae
mov
jnp
fnstcw
inc
mov
ficomp
xchg
xchg
adc
mov
aam
lods
stos
push
adc
jge
pop
std
sbb
retf
pop
rcr
xchg
xor
and
adc
xchg
push
mov
call
icebp
cmp
rcl
sbb
imul
jbe
cmps
and
mov
or
lahf
mov
lock
xor
sbb
movs
outs
nop
arpl
imul
mov
imul
sub
out
xchg
(bad)
rcl
jecxz
dec
mov
push
shr
shl
cmp
aaa
push
and
xor
mov
jnp
aaa
cmp
mov
pop
xchg
daa
imul
mov
inc
push
ret
outs
scas
mov
pop
dec
cdq
arpl
mov
mov
jne
or
nop
jmp
iret
and
jle
dec
xor
test
mov
jle
sub
push
jmp
add
pop
enter
adc
add
iret
jmp
call
jge
lds
shl
es
ficom
shr
cmp
mov
sub
mov
les
sbb
ins
push
mov
retf
ins
cs
mov
mov
adc
sub
sub
ins
and
fist
xchg
jle
mov
ret
jb
xchg
aas
cmps
jecxz
rcl
cmp
repz
xchg
pop
iret
push
sub
or
mov
int3
scas
movs
mov
sar
pop
mov
dec
int3
jg
push
aaa
cmps
sub
repnz
jp
mov
int
push
(bad)
adc
or
in
icebp
out
mov
adc
fsubrp
mov
sub
inc
call
and
rcl
retf
sti
mov
xchg
movs
mov
stos
or
fcomp
call
lds
lea
aam
sub
push
scas
fbstp
push
das
or
jns
sub
dec
pop
icebp
shl
(bad)
out
addr16
inc
dec
push
lods
test
(bad)
jb
pop
fld
push
inc
inc
cmc
sub
sub
add
stos
cmc
mov
outs
les
adc
inc
test
(bad)
jo
clc
sub
mov
sbb
pop
repz
cld
or
mov
call
icebp
sahf
outs
cmps
loopne
sbb
and
addr16
push
pop
mov
xchg
push
addr16
add
pushf
sub
mov
lock
fbstp
or
and
dec
retf
jae
pop
inc
retf
push
(bad)
(bad)
mov
mov
arpl
enter
cs
sbb
xchg
xchg
xchg
inc
mov
(bad)
mov
rcr
and
outs
xchg
loope
das
lock
push
dec
call
or
xor
xor
and
ja
push
mov
mov
add
ss
sbb
add
mov
xor
scas
sbb
(bad)
mov
cmp
pop
sub
push
push
test
test
stc
jge
jg
cmc
ret
jge
cld
mov
call
pop
inc
push
add
push
jmp
movs
adc
outs
fwait
sbb
pop
sub
mov
cmp
dec
push
fsubr
retf
out
jle
out
fcom
mov
hlt
outs
mov
add
lds
pop
dec
inc
lock
cmp
add
js
fdivr
push
idiv
enter
jecxz
lods
mov
mov
das
fcom
lahf
inc
cmc
push
pushf
jb
dec
jmp
sub
jp
push
inc
nop
dec
scas
out
or
sbb
fiadd
cmps
sbb
push
fwait
data16
ins
sub
ins
pop
add
mov
xor
or
call
cmp
cwde
ins
(bad)
aad
test
jge
add
movs
or
rol
sub
fs
mov
push
scas
les
leave
test
xchg
imul
(bad)
out
xchg
mov
out
inc
ins
cmp
test
add
or
sti
js
es
outs
xor
pop
fild
xchg
cmps
scas
loop
and
or
xchg
sub
mov
inc
cwde
dec
mov
inc
sub
cmp
ret
fbstp
mov
dec
popa
jbe
mov
sahf
or
mov
rol
add
sub
out
mov
push
repz
in
mov
fwait
mov
ret
loopne
cs
pop
(bad)
in
xor
pop
loope
fiadd
pushf
into
dec
sub
lods
jmp
xor
outs
sbb
loop
mov
pop
(bad)
and
rcl
fcomp
jns
sbb
xchg
adc
aad
loop
push
xor
push
add
push
cmps
sub
js
mov
shl
inc
int3
(bad)
dec
xor
sbb
sbb
dec
and
test
mov
inc
mov
mov
dec
xor
popf
out
cmp
xchg
mov
ss
int3
cmp
les
add
rcr
cdq
add
retf
dec
dec
pop
ror
loopne
fwait
sar
inc
mov
cld
repz
test
gs
pop
popf
ja
or
scas
daa
jl
sub
xchg
push
fldenv
mov
daa
fistp
in
and
mov
sub
imul
out
or
mov
adc
mov
(bad)
cmp
inc
out
loope
and
imul
rcl
sub
sbb
daa
(bad)
ret
mov
push
dec
into
test
xor
inc
or
pop
scas
fadd
and
dec
push
cwde
inc
ja
lock
jg
sub
mov
(bad)
push
pop
ret
js
rcr
in
pop
sbb
dec
adc
enter
gs
xor
push
sahf
out
push
lods
nop
mov
add
mov
mov
mov
xor
inc
loop
xor
adc
add
lods
scas
loop
mov
push
daa
inc
rol
int
push
shr
cmp
outs
retf
inc
pop
cmp
adc
sub
sub
bound
pop
mov
dec
in
sub
jo
in
(bad)
pop
cmps
lods
imul
xor
mov
mov
js
loopne
into
aam
imul
mov
jno
fsubr
sub
lods
mov
sbb
test
adc
and
je
xabort
rsqrtps
lods
inc
xor
and
mov
mov
pop
sbb
fdivp
test
lods
stos
pop
fistp
ins
xchg
popf
(bad)
std
les
shr
test
lock
pushw
adc
scas
cld
mov
cs
mov
add
xchg
(bad)
mov
hlt
mov
fs
cmp
mov
xchg
shr
aad
xchg
(bad)
adc
mov
mov
int
mov
(bad)
jae
call
jl
scas
lea
mov
add
pop
lea
mov
or
cli
cmc
daa
sbb
jnp
sti
loope
ds
movs
stos
pusha
dec
jg
cs
clc
lock
sbb
or
fistp
jne
xchg
and
mov
ja
mov
sbb
push
movs
test
fmul
inc
pop
popa
sahf
outs
xchg
sub
cmp
push
xor
mov
push
call
pop
fsubr
call
(bad)
arpl
ss
fwait
ins
cmps
movs
(bad)
mov
jg
jno
push
jl
into
xchg
das
xrelease
sub
cwde
sbb
lock
les
ret
scas
push
in
aaa
lods
pop
add
add
(bad)
jl
loop
hlt
retf
mov
retf
push
dec
or
xchg
ja
leave
dec
lea
xor
cs
pop
(bad)
ror
ret
in
and
iret
js
enter
inc
or
call
jno
add
ss
enter
clc
xchg
nop
sahf
sub
or
sbb
call
sub
add
cmp
retf
cmp
adc
pop
push
mov
dec
sar
lods
xor
and
pop
jns
sub
mov
lds
xchg
movs
mov
mov
add
jb
fild
mov
repz
xor
cdq
js
adc
jmp
sbb
lock
cdq
lahf
dec
push
sbb
jne
test
mov
mov
(bad)
adc
mov
sub
std
jns
and
leave
sbb
push
cwde
in
push
pop
lods
xor
jle
mov
lods
cmp
sub
dec
pcmpeqb
xlat
rcr
cmc
test
and
inc
mov
(bad)
mov
(bad)
ins
xor
gs
or
and
jbe
(bad)
push
sub
in
js
arpl
je
mov
in
mov
and
pop
push
mov
pop
dec
mov
out
fwait
inc
sbb
shl
scas
(bad)
pusha
in
jle
cmps
(bad)
aad
les
mov
lods
mov
int3
dec
lods
inc
jmp
inc
xchg
cwde
in
cmp
and
or
sub
push
xchg
xor
inc
lea
cmps
sahf
loop
dec
popa
aam
leave
mov
and
pop
or
mov
stos
in
jmp
je
aad
push
jne
and
sar
cs
nop
sbb
mov
in
mov
(bad)
fs
mov
add
and
out
jmp
mov
mov
cmovae
popf
xchg
in
cmp
(bad)
out
mov
aaa
repnz
ret
retf
dec
(bad)
int
dec
out
outs
jmp
test
out
jle
push
and
outs
cdq
push
mov
test
gs
cmp
fldenv
cld
or
pop
stos
stos
aam
loopne
(bad)
sbb
or
mov
pop
neg
movs
icebp
jp
and
dec
push
inc
jmp
dec
add
adc
test
sub
(bad)
popa
mov
sar
lods
pop
fisttp
bound
jge
int3
div
mov
jb
add
leave
icebp
addr16
push
jnp
and
out
movs
sbb
retf
ret
mov
rol
movs
ins
adc
fist
std
fist
add
xchg
jne
loopne
cld
aas
int3
fisub
in
shl
es
inc
cmps
pop
mov
push
xor
rol
xchg
push
jecxz
push
inc
push
inc
or
mov
pusha
pop
retf
add
fcomp
mov
test
dec
inc
jno
mov
das
retf
popa
bound
adc
aam
jmp
pop
ror
pop
dec
cmp
retf
popf
mov
cmps
mov
xlat
add
les
adc
in
push
into
mov
loope
movs
cli
and
fisttp
test
mov
xchg
test
xchg
sub
out
push
aad
xlat
xor
dec
pop
pop
jae
sar
call
jne
inc
cli
xor
idiv
loopne
xchg
sahf
test
dec
cmc
pop
mov
cs
jne
outs
sub
fldcw
movs
xor
pushf
js
rol
ja
adc
in
(bad)
sar
sub
dec
mov
sbb
xlat
pop
ins
push
sub
inc
sub
lods
aaa
sti
jae
xor
cmp
xor
adc
or
mov
sbb
ins
mov
sbb
adc
pop
and
out
xchg
shl
xor
stos
mov
repz
jmp
lahf
scas
mov
sbb
sbb
pop
mov
sub
sbb
cmp
pop
mov
inc
mov
push
in
aaa
push
and
je
fs
test
scas
mov
scas
cmp
in
fisub
dec
mov
inc
mov
fisub
xchg
mov
mov
add
pop
imul
sub
pop
pop
imul
test
mov
daa
pop
int3
sub
mov
bound
ret
adc
les
cmps
(bad)
in
inc
sbb
mov
add
mov
stos
jo
or
push
int
test
inc
adc
pusha
stos
xchg
ins
aaa
cmc
ror
push
xor
ins
adc
mov
jl
in
(bad)
and
add
test
fstp
dec
and
push
jg
pop
lods
ret
push
push
nop
test
jmp
xor
adc
in
fdivr
jo
push
and
ret
pop
cmp
data16
inc
mov
sbb
(bad)
mov
and
and
or
and
clc
arpl
test
adc
sahf
add
in
mov
mov
dec
jae
cmp
push
mov
pop
jle
and
rcr
mov
jle
loop
scas
dec
xchg
call
into
mov
ja
rcr
mov
repz
into
mov
or
and
push
mov
sbb
inc
in
jno
mov
out
das
xor
and
in
sbb
test
jle
sub
dec
jp
loop
mov
push
imul
inc
adc
(bad)
or
mov
inc
ins
pop
inc
lahf
adc
out
(bad)
jo
inc
into
lods
jmp
lock
and
mov
jae
fmul
scas
in
loope
jmp
jns
and
sub
stc
pushf
and
ret
rol
aam
sub
mov
sbb
xchg
mov
mov
pop
je
pushf
ss
call
dec
cdq
sub
imul
dec
inc
push
(bad)
(bad)
jo
fstp
ret
sub
add
fxtract
xchg
not
arpl
mov
arpl
jmp
pop
outs
(bad)
push
aaa
nop
xlat
dec
aas
std
out
pop
lock
(bad)
stc
jb
ror
xchg
add
shl
sub
scas
retf
loopne
out
and
aam
pushf
mov
in
cmps
xchg
sahf
out
adc
dec
sub
inc
cmp
pushf
jmp
adc
into
adc
cmp
repnz
pop
or
les
pop
aas
leave
and
dec
aam
lods
add
outs
or
nop
jo
add
pop
rol
push
cmp
(bad)
aam
test
mov
mov
adc
mov
ja
in
aaa
in
shr
sub
jbe
imul
enter
jp
pop
and
popa
dec
stc
sub
mov
sar
retf
xchg
rol
dec
popf
not
test
inc
pushf
fmul
je
enter
dec
xchg
adc
ja
shr
sbb
xor
sbb
lods
pop
mov
add
ss
loopne
jmp
jnp
push
mov
loopne
movs
(bad)
mov
mov
mov
outs
stos
iret
sahf
or
pop
sti
xor
cld
loopne
xor
pop
mov
in
push
fidivr
xchg
mov
movs
cmp
daa
xchg
outs
call
cmps
or
aas
ins
and
ror
xor
idiv
adc
cmp
xchg
pop
ja
add
adc
pop
repnz
xchg
(bad)
sbb
pop
xchg
mov
fiadd
jo
ret
std
int3
aaa
je
arpl
repnz
and
dec
std
data16
xchg
push
mov
pop
and
data16
jne
or
jp
rcl
cmp
mov
xchg
jl
or
jmp
loop
test
(bad)
mov
ss
jne
or
rcl
(bad)
sahf
lods
in
add
loop
jmp
mov
in
push
or
clc
inc
sub
mov
mov
outs
ins
outs
(bad)
addr16
jb
aas
lock
shl
fcmovu
int3
inc
dec
ins
imul
mov
ins
and
mov
mov
sbb
xor
push
call
mov
dec
and
(bad)
sbb
mov
(bad)
pop
jmp
pop
mov
mov
cmp
in
fxch
in
xor
xchg
push
jecxz
sub
xor
jecxz
test
mov
jae
or
aad
sahf
or
inc
ficom
out
(bad)
jmp
or
mov
retf
push
pusha
frstor
rcl
adc
mov
jbe
mov
adc
sub
push
push
clc
je
cmps
cs
(bad)
stos
dec
inc
retf
dec
sub
loopne
ins
idiv
ins
data16
push
pop
mov
lahf
repnz
or
or
and
inc
stc
mov
sub
xchg
sub
jl
(bad)
(bad)
lock
shr
push
add
inc
ins
jbe
pop
cld
xcrypt-cbc
cmps
shr
fs
cs
test
faddp
fwait
jle
jle
or
add
aad
jg
test
sti
jo
mov
sub
out
xchg
outs
cmp
xchg
sbb
ss
xchg
add
add
in
xor
cmp
(bad)
rcr
mov
scas
lea
pop
adc
add
pop
inc
add
outs
rcl
add
jo
test
lea
xchg
addr16
(bad)
pop
push
cmps
cmp
fsub
pushf
mov
pop
mov
push
add
int
in
xchg
call
jns
icebp
jne
sbb
inc
cli
inc
out
mov
jp
fwait
inc
inc
into
mov
and
cmp
jg
mov
clc
movs
not
ret
cwde
adc
push
pop
xchg
(bad)
cs
dec
inc
mov
dec
mov
(bad)
stc
add
mov
add
sti
fwait
pop
mov
mov
leave
fldenv
inc
arpl
sbb
dec
pop
jmpw
mov
mul
cmp
xchg
mov
ds
clc
out
scas
mov
bound
cld
mov
add
mov
inc
mov
pop
push
sub
push
jmp
mov
xor
aam
mul
adc
ficomp
xor
xchg
inc
sbb
push
bound
fsub
adc
ins
hlt
mov
arpl
lods
sbb
pusha
lahf
call
in
aaa
lock
popa
mov
pop
retf
or
sub
je
cld
xchg
jo
mov
daa
xchg
mov
xor
mov
sbb
ror
test
sbb
jne
push
mov
(bad)
sub
out
cmp
and
iret
or
lea
in
sbb
and
movs
rcl
test
ins
aam
ins
push
popf
fidiv
sbb
in
out
sbb
outs
jecxz
xor
pushf
cdq
push
stc
and
fsub
add
fs
sahf
fisubr
(bad)
in
jb
lods
pop
(bad)
rcl
mov
pop
sub
dec
push
xchg
pop
(bad)
out
xchg
stos
dec
xchg
int3
or
dec
dec
test
jmp
jle
inc
add
xchg
fucom
icebp
jb
nop
push
pop
mov
aam
test
push
mov
add
aaa
inc
sub
fdiv
mov
add
shl
std
xchg
popa
add
(bad)
or
out
sub
fnstenv
jle
add
clc
xchg
mov
push
mov
inc
nop
xchg
mov
pop
arpl
aas
mov
jbe
xchg
xchg
repnz
mov
std
sbb
cld
and
test
xchg
xor
scas
and
jp
jns
mov
cmp
outs
xchg
pop
cld
js
xchg
rcl
xor
fmul
pop
adc
jo
inc
popw
dec
pop
sbb
pop
push
into
mov
cld
push
and
mov
cmc
retf
and
data16
xlat
neg
xlat
mov
cwde
retf
mov
mov
retf
fbld
mov
and
outs
jno
xchg
adc
and
adc
mov
call
and
adc
int
jnp
jge
mov
ins
push
jp
lods
movs
fwait
and
xor
cmps
mov
loop
ja
adc
lea
scas
jge
and
sar
enter
push
pop
mov
xchg
push
btc
cmps
(bad)
add
call
jb
jo
ret
and
push
xchg
add
popa
cmps
pusha
or
mov
sbb
sub
pushf
push
mov
jl
jnp
or
sti
or
mov
sub
inc
adc
sub
push
mov
cs
cdq
lds
test
ins
add
imul
mov
jae
outs
outs
lock
and
mov
xor
xor
inc
inc
push
mov
add
mov
out
xor
mov
pop
aad
cmc
sub
jnp
add
sbb
cdq
hlt
xchg
mov
sub
push
mov
in
xchg
sbb
xor
pop
dec
aaa
xor
adc
pop
xchg
ror
jnp
jmp
push
inc
aaa
arpl
arpl
jle
pop
and
or
or
out
xor
(bad)
sub
in
mov
add
fs
add
dec
or
push
jl
fsubr
daa
cs
xchg
loopne
into
or
jae
frstor
cmp
adc
enter
pop
data16
mov
lods
mov
push
sub
cmp
sub
clc
or
push
repnz
mov
scas
mov
push
scas
jb
add
mov
(bad)
fwait
idiv
leave
push
xchg
jge
push
push
inc
test
movs
dec
pop
ja
lods
iret
mov
jae
dec
mov
mov
outs
pop
ins
mov
jmp
xor
jp
movs
lods
xor
mov
and
xchg
ss
in
dec
adc
push
test
lea
les
ror
sbb
enter
mov
movs
mov
stos
fld
fst
dec
scas
xlat
dec
jno
adc
cmp
pop
arpl
les
mov
loope
jp
lock
lds
cmp
or
mov
dec
sub
ret
xor
mov
je
mov
mov
xchg
jge
sub
push
stos
test
inc
push
mov
mov
fiadd
xchg
and
or
cmp
je
je
bound
push
push
lea
ds
cmp
stos
mov
not
loop
mov
mov
nop
out
stc
pmuludq
inc
push
xchg
dec
mov
ins
adc
inc
data16
mov
mov
scas
or
sti
cld
repz
adc
outs
les
fwait
movs
sub
ret
pushf
jmp
jo
in
push
dec
pop
xchg
sub
out
test
adc
cs
or
es
xor
outs
inc
lock
sti
sahf
pop
fstp
sbb
sub
xor
sar
sbb
mov
rol
movs
mov
xchg
mov
popa
(bad)
jno
ja
sbb
inc
pop
pop
pop
aaa
cdq
mov
scas
push
imul
cmps
dec
push
sub
or
push
add
mov
cwde
xchg
pusha
jmp
loopne
mov
inc
data16
sti
add
iret
pop
scas
or
daa
repnz
sub
cld
dec
jmp
xchg
adc
mov
int
dec
cld
jmp
cdq
mov
leave
dec
xor
repnz
dec
fsub
popa
pop
inc
push
and
xlat
retf
pop
jnp
xor
xchg
out
inc
in
retf
and
das
(bad)
fcmovu
mov
push
adc
hlt
inc
inc
dec
and
lods
loop
adc
loop
test
les
push
mov
and
sar
dec
hlt
xor
daa
pop
test
cmp
dec
fucomp
jmp
xor
aad
mov
sub
sub
(bad)
mov
lea
call
jnp
cmps
cs
out
cli
neg
adc
call
call
out
and
lds
repnz
out
in
pop
mov
xor
jl
mov
add
dec
cli
sub
mov
jnp
mov
repnz
push
test
adc
(bad)
add
lods
pop
aaa
jb
push
mov
(bad)
dec
jmp
aaa
or
arpl
test
fbld
mov
bswap
cmp
adc
sbb
outs
das
out
cmp
inc
sub
mov
les
push
xor
jno
or
sbb
loope
mov
gs
pop
cmp
ja
lahf
js
(bad)
adc
lahf
or
leave
ins
sahf
ds
gs
pusha
push
pop
imul
fstp
pop
ds
out
adc
addr16
mov
popf
outs
repz
inc
and
mov
punpckhwd
out
jmp
push
(bad)
pop
call
jge
push
frstor
adc
das
xchg
xor
stos
mov
mov
mov
mov
pop
leave
pop
and
pop
adc
lock
imul
js
loop
and
inc
push
lods
aam
push
mov
push
data16
fst
sbb
stc
pop
movs
mov
cmp
jp
mov
xchg
movs
mov
imul
xchg
push
push
adc
adc
aaa
pop
or
push
and
dec
push
jae
popa
retf
clc
mov
mov
int
fs
cmc
xor
inc
iret
and
cmc
sub
aas
xchg
mov
les
add
or
mov
dec
jae
(bad)
outs
xchg
outs
(bad)
out
sbb
lea
pop
mov
mov
or
mov
or
pop
push
cld
dec
xchg
adc
lock
cs
aaa
push
sar
push
call
sbb
cs
ins
jb
jae
loopne
hlt
clc
loopne
push
cmp
mov
xchg
push
out
imul
imul
xchg
cmp
mov
jne
mov
das
cmc
inc
sub
cli
aam
movs
in
call
fcom
or
clc
cmps
imul
vhsubps
loop
sub
sub
jmp
sbb
push
dec
clc
sahf
mov
mov
push
lock
mov
loope
mov
lea
pop
pop
nop
call
loopne
repz
leave
hlt
inc
sar
jl
retf
in
mov
adc
mov
dec
mov
stc
cld
jge
sbb
push
xchg
and
ja
loopne
div
mov
mov
jno
xor
mov
pusha
repnz
xor
or
loope
cli
in
test
stos
pop
mov
(bad)
sub
and
into
inc
js
xchg
cmps
aad
(bad)
or
mov
jp
mov
leave
xor
out
mov
fsubr
pop
popf
mov
sbb
mov
pusha
jg
dec
ss
add
ja
xchg
popf
xor
mov
aad
jg
push
fisub
pop
shl
dec
cmp
inc
mov
loopne
mov
mov
xchg
xlat
lea
movs
jne
jp
jl
xor
retf
xchg
fcmove
fnstcw
cli
mov
lock
je
add
ins
call
call
imul
test
scas
mov
sar
lea
das
mov
inc
ja
adc
or
jl
and
(bad)
sar
push
dec
mov
cmp
sahf
and
std
out
sbb
int3
cmps
inc
xchg
sbb
pop
inc
jmp
push
inc
icebp
jo
sbb
mov
call
outs
push
pop
fs
daa
pop
mov
idiv
hlt
sub
or
pusha
scas
mov
add
adc
lods
inc
scas
xchg
sub
cmps
fcom
cmp
sbb
test
xor
or
dec
adc
test
sbb
push
xchg
push
enter
into
sub
loopne
and
js
dec
dec
add
ja
adc
mov
push
push
ret
inc
jmp
loopne
mov
stos
out
sub
(bad)
xchg
outs
(bad)
jmp
cmps
loop
inc
xor
xchg
data16
pop
lods
pop
mov
fstp
rcr
dec
out
rcr
pushf
pop
add
mov
mov
xor
push
rol
call
dec
scas
cld
cmps
outs
inc
add
lods
shr
or
mov
imul
pop
es
xchg
add
push
cmp
(bad)
or
mov
inc
(bad)
push
iret
(bad)
iret
ss
cmp
lds
mov
jnp
xchg
mov
bound
cdq
std
pop
adc
std
inc
xchg
int
fstp
or
or
sbb
pushf
scas
push
hlt
rol
mov
jae
sub
xlat
cwde
(bad)
cld
mov
aad
fbstp
fstp
sub
xchg
mov
xor
lahf
jmp
xchg
cmp
ins
iret
xor
in
jge
jecxz
(bad)
xchg
xor
push
cdq
mov
xchg
test
jne
mov
fsubr
dec
jne
cdq
and
jl
hlt
pop
out
shl
add
je
stos
repz
fisttp
xor
ins
pop
sbb
retf
es
popf
sub
ret
push
jl
(bad)
mov
stos
mov
out
dec
add
push
xor
lahf
dec
rcr
fisttp
clc
imul
mov
out
mov
arpl
xor
dec
sti
dec
addr16
shl
ficom
add
dec
add
jg
push
daa
dec
sub
ds
mov
sar
or
bound
outs
mul
mov
jl
movs
loop
sbb
out
scas
mov
or
bound
xor
pop
push
pop
dec
bound
sub
jbe
xchg
repz
fnsave
mov
and
mov
stos
fsubr
in
mov
mov
scas
xchg
jo
xor
add
mov
mov
pop
jns
call
jbe
add
loop
enter
adc
add
adc
mov
add
mov
retf
lock
icebp
jne
ret
pop
or
arpl
aam
add
cmp
add
and
and
and
jae
xor
bound
jnp
gs
mov
std
std
scas
sub
in
pop
dec
ja
adc
fs
mov
je
and
repnz
mov
std
out
pop
out
cmp
mov
loope
or
repnz
mov
out
or
pop
scas
rcl
pop
adc
cli
cmp
jmp
gs
mov
mov
stos
rcl
inc
inc
jno
jnp
cmps
ins
xchg
cld
push
sub
adc
pop
sub
cmp
jmp
jno
sbb
call
cs
inc
jne
mul
mov
cmps
sbb
lods
in
aaa
fcomi
dec
in
xor
scas
neg
jo
out
das
sti
cmp
xchg
les
cmp
pop
sbb
add
(bad)
das
out
cld
dec
mov
in
sub
imul
sbb
lods
push
push
std
jno
and
mov
movs
test
retf
shl
sbb
repnz
in
imul
shl
xor
xchg
test
mov
mov
jns
lds
rcr
mov
(bad)
popa
daa
popa
push
cmp
cmp
mov
pop
arpl
cmp
xchg
test
jmp
imul
inc
pop
mov
cmp
scas
stos
pop
sub
inc
and
imul
mov
push
sbb
xchg
cmps
jecxz
out
dec
inc
jne
or
xor
nop
mov
popa
push
fadd
and
(bad)
(bad)
xor
mov
xchg
or
sub
pop
nop
in
add
jl
xchg
cli
dec
(bad)
movs
adc
hlt
sub
ins
jmp
inc
cmp
cmp
sub
mov
clc
pop
xchg
out
mov
and
mov
sti
sub
fwait
add
fnstenv
mov
mov
fwait
out
cmp
pop
xchg
inc
cmp
std
or
xor
sbb
sbb
(bad)
push
cs
add
test
movs
leave
movs
repnz
and
and
jno
fnstenv
test
cmc
fstp
outs
and
test
pushf
mov
mov
(bad)
call
iret
xchg
add
rol
sub
xchg
mov
mov
scas
nop
mov
ja
fucomp
or
mov
sub
arpl
dec
cmp
in
sar
hlt
and
jge
pop
push
mov
xchg
inc
add
cli
xchg
dec
cmc
or
pop
dec
jb
inc
loop
mov
(bad)
clc
ins
push
jmp
je
or
out
sti
repz
cmps
rcr
cld
(bad)
int
imul
push
popa
daa
sub
daa
xor
jbe
out
pop
pop
xchg
pop
stc
adc
dec
(bad)
add
jne
add
mov
dec
inc
sub
xor
or
xor
aas
or
sar
and
push
push
mov
add
jne
ret
jle
ror
(bad)
in
inc
aaa
sar
test
push
cmp
loopne
sahf
add
push
add
fisttp
push
outs
sub
mov
mov
push
sbb
xchg
adc
mov
and
push
xchg
inc
sub
popf
add
call
outs
pop
pop
xchg
ret
fmulp
cmc
sub
dec
adc
lock
xor
inc
push
push
pop
lods
xor
cmp
xchg
lahf
mov
pop
unpcklps
add
inc
(bad)
dec
fwait
lods
jmp
sub
repnz
jge
mov
aaa
pop
jns
ins
ins
jo
aad
inc
mov
cmc
mov
in
mov
lahf
jns
push
and
xchg
arpl
mov
lea
push
jne
stos
int3
aad
lahf
adc
test
add
adc
and
int
add
adc
and
cwde
and
call
ins
imul
retf
push
test
leave
push
fimul
or
sti
mov
aas
sbb
dec
xchg
mov
push
lock
not
xchg
in
cmps
sbb
dec
pop
(bad)
dec
cmp
fadd
sub
dec
ds
hlt
cmc
and
add
les
sbb
adc
lods
addr16
rol
aam
xor
xchg
loop
sbb
dec
dec
in
mov
je
xchg
push
xchg
sub
enter
les
inc
add
loope
push
push
mov
cmp
aam
jg
mov
mov
push
dec
pop
cmp
jmp
in
add
in
xchg
inc
sub
fwait
std
fistp
mov
fidiv
push
in
add
xor
cmp
fidivr
stc
test
in
add
inc
ss
leave
sti
(bad)
(bad)
dec
mov
pop
bound
inc
cmp
mov
mov
adc
daa
sub
arpl
or
cmps
and
loopne
cmp
mov
jmp
mov
jb
inc
xchg
lods
adc
inc
popa
mov
in
test
mov
icebp
push
cli
popa
jb
ins
shl
sar
outs
or
cld
xor
stos
jle
int3
lea
inc
inc
cdq
cli
jmp
jbe
in
jnp
cs
push
js
dec
xchg
cmp
popf
fsub
jns
test
adc
lods
fs
cmp
sub
sbb
fstp
jp
ins
iret
(bad)
dec
add
dec
enter
cli
push
mov
sbb
call
and
fbstp
inc
push
ret
xchg
xor
je
inc
mov
xchg
cdq
and
ret
add
mov
fdiv
push
adc
dec
pushf
xchg
retf
mov
sub
jp
sbb
dec
push
or
jb
pop
and
sbb
cmps
mov
in
enter
outs
call
clc
lea
cmp
mov
fcmovb
loop
aaa
jo
mov
inc
jmp
mov
sbb
jnp
xlat
cmp
adc
xor
retf
jb
jbe
daa
sbb
retf
xchg
and
jge
rcr
mov
enter
push
add
loope
sbb
mov
iret
mov
or
lods
xchg
dec
fisubr
ficom
mov
mov
pop
lahf
test
sar
scas
xchg
sbb
xchg
push
in
sub
fs
sti
xchg
out
mov
mov
xor
lods
or
push
and
mov
rcl
cmp
in
(bad)
fimul
hlt
stos
jle
dec
mov
xchg
gs
sti
pop
sbb
in
add
sbb
cwde
pop
pop
jae
sub
xchg
bound
cmp
sub
in
dec
sbb
(bad)
sub
xor
aad
inc
xchg
mov
add
cmps
repz
into
test
dec
and
rcr
adc
lods
in
call
mov
mov
nop
sub
clc
aad
or
jge
mov
pop
adc
push
(bad)
cs
test
nop
(bad)
cmp
cdq
out
mov
in
dec
xor
dec
dec
sar
in
or
bound
mov
pop
dec
mov
add
out
add
sub
push
mov
aaa
es
push
(bad)
(bad)
mov
fmul
fdiv
nop
xchg
inc
fldcw
test
(bad)
jecxz
jne
ins
enter
loopne
jne
xchg
repz
sahf
mov
mov
cmp
mov
mov
(bad)
mov
sahf
imul
and
cmp
or
xchg
add
arpl
sbb
pand
repz
std
mov
cmp
test
inc
movs
out
pop
fs
mov
jns
fisubr
adc
test
sub
mov
retf
pop
sbb
sub
test
in
pop
call
shr
xor
enter
dec
mov
test
in
lahf
dec
(bad)
sti
sub
adc
mov
(bad)
mov
popa
in
outs
or
dec
cmp
and
retf
push
loopne
adc
jnp
mov
cmc
scas
test
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
sbb
inc
add
inc
inc
add
