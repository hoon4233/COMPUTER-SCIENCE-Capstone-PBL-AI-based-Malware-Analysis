pop
mov
sbb
ins
jns
jb
cmp
cmp
jnp
jle
jns
mov
sub
sub
jl
sbb
xchg
dec
sbb
ins
jns
hlt
dec
jns
jge
repnz
pop
dec
repnz
jne
or
(bad)
xchg
xchg
push
or
xchg
dec
sbb
adc
out
cmp
xor
(bad)
adc
sbb
scas
jecxz
fbstp
lods
or
sbb
jns
(bad)
test
inc
and
mov
dec
sub
adc
ins
adc
or
pop
ins
jns
and
and
sub
pushf
lahf
xchg
sub
cmp
inc
jno
cmp
fsubp
leave
pop
jge
fs
cs
cmp
ins
jbe
shr
sub
pop
or
hlt
pop
test
cmp
neg
jne
push
fs
loop
arpl
mov
ins
jns
jno
cli
pusha
repnz
sub
push
jl
pop
xchg
out
xchg
jge
dec
lods
aas
ins
repnz
xchg
out
mov
imul
jge
inc
fdivr
sbb
cmp
movs
imul
aas
ins
repnz
cmp
leave
hlt
and
cmp
push
dec
lods
aas
ins
and
xchg
sub
xchg
and
fmul
inc
add
not
jno
xchg
inc
xchg
sub
sbb
pop
imul
xchg
cli
fdiv
jne
imul
xchg
ds
xchg
fs
jne
neg
cmc
pop
xchg
xchg
dec
lods
xchg
ins
sub
adc
xchg
sub
call
test
jbe
stos
jl
int
jns
jge
jns
jbe
cli
pusha
jge
cli
fdiv
mov
fstp
leave
pop
jge
jns
jge
jno
adc
jns
(bad)
test
adc
jl
jns
xchg
dec
cli
in
sbb
sbb
aas
ins
xchg
push
add
mov
fdivr
sbb
dec
add
sbb
ins
jns
jge
es
es
inc
mov
cs
or
sbb
xchg
int
lods
aas
ins
adc
or
xchg
mov
jns
sub
pushf
jbe
add
lods
aas
ins
adc
sbb
pop
sbb
ins
jns
xchg
jl
dec
sub
sbb
sub
in
jne
jge
mov
sbb
ins
adc
add
lods
aas
ins
adc
pop
jns
sbb
aas
ins
xchg
pop
fdivr
sbb
pop
pop
lods
aas
ins
lock
cmp
out
mov
push
cmp
aad
or
sbb
ins
jns
jge
lock
lds
jge
(bad)
push
ins
sub
rol
jg
sbb
lock
(bad)
fild
sbb
ins
adc
pop
ins
adc
add
mov
ins
jns
mov
ins
mov
hlt
jmp
lock
xchg
xchg
pop
mov
xchg
clc
cwde
retf
cmp
adc
ins
jns
clc
xchg
retf
cmp
hlt
xchg
sbb
cld
and
sbb
dec
call
jge
std
sub
test
jge
cli
fdiv
xchg
jge
or
mul
mov
sbb
fwait
sahf
xchg
clc
test
loop
in
daa
enter
sbb
sub
mov
sub
cwde
cmp
xchg
sub
repz
jns
lock
dec
pop
ins
adc
jge
jns
jge
jns
jge
or
sbb
hlt
rcl
(bad)
call
sbb
jecxz
js
imul
xchg
test
fiadd
adc
or
or
adc
push
jge
jns
je
mov
sub
mov
sub
cwde
out
xchg
adc
cmp
out
rol
dec
vmwrite
mov
pop
test
mov
je
ins
jnp
pop
ins
xchg
xchg
or
xchg
cmp
sbb
in
adc
mov
je
imul
xchg
xchg
or
xchg
sub
sbb
in
jecxz
nop
xchg
add
jns
mov
jge
mov
sub
adc
hlt
sub
aad
cmp
stc
inc
repnz
out
imul
adc
or
cmp
or
sbb
add
imul
adc
or
cmp
xchg
xchg
pop
imul
test
jb
jge
jb
ins
and
sbb
mov
cmp
push
mov
call
cmp
test
inc
aam
inc
jge
mov
in
in
hlt
sub
aam
sub
and
in
stos
or
cmp
(bad)
movs
xchg
js
or
sti
adc
xchg
jns
and
and
mov
jl
sbb
jge
sub
out
adc
xor
clc
nop
xchg
sbb
add
cld
loopne
xchg
xchg
call
xchg
jl
leave
cs
cmp
(bad)
movs
xchg
js
or
mov
jecxz
xchg
xchg
mov
mov
inc
in
sbb
jecxz
push
cmps
pusha
xchg
out
loopne
xchg
xchg
and
call
fcom
in
adc
loop
in
xor
jl
xchg
jge
cld
sbb
and
mov
sub
pushf
lahf
xchg
js
dec
sub
and
mov
adc
lods
dec
jns
mov
test
sbb
fs
repnz
jne
stos
push
pop
jl
xchg
mov
imul
lods
xor
sbb
adc
sbb
repnz
and
mov
sbb
cmp
and
and
mov
cmp
dec
sub
and
mov
nop
ss
cmp
lock
sbb
imul
popa
jne
stos
push
pop
jl
xchg
mov
imul
lods
xor
sbb
adc
sbb
or
pop
adc
mov
inc
movs
mov
dec
sub
repnz
test
cmp
lock
adc
gs
cmp
jns
lock
sahf
repnz
jno
(bad)
or
push
xchg
bound
and
adc
dec
fsub
xor
aad
cmp
stc
sub
sub
out
adc
mov
sub
jge
or
adc
cmp
xchg
cmp
sub
cmp
test
adc
dec
sub
fcomp
jo
test
lock
xor
aad
cmp
stc
sub
sub
out
adc
in
dec
cmp
ins
mov
hlt
sub
adc
inc
or
jbe
push
jns
xor
cmp
jbe
test
pop
je
jns
call
sbb
lock
and
and
mov
aas
das
dec
neg
jno
push
pop
rol
loopne
jge
cli
and
iret
cmp
iret
cmp
fs
jns
(bad)
div
jne
jg
dec
out
jecxz
fs
mov
pop
and
jns
and
and
mov
and
cmp
imul
lock
xchg
lock
dec
jns
sbb
jbe
test
ins
jge
hlt
pop
lea
or
cs
hlt
sbb
sbb
scas
lock
xchg
lock
(bad)
jb
mov
fmul
cmp
je
lea
sbb
push
mov
or
mov
pop
xchg
gs
lahf
mov
lea
sbb
push
sub
jl
or
jns
jge
mov
sbb
pop
mov
fdiv
sub
sub
hlt
xchg
js
hlt
stos
das
hlt
js
xchg
and
mov
fild
in
movs
push
ins
js
xchg
fmul
sbb
aas
das
dec
(bad)
loope
mov
movs
in
popf
inc
adc
pop
jge
xchg
adc
pop
jge
fsub
jns
cmp
cwde
mov
jns
imul
jne
add
scas
stc
add
cli
and
iret
cmp
iret
cmp
fs
div
cmp
in
aas
ins
jns
adc
jecxz
xchg
sub
or
or
jns
jl
mov
aas
ins
hlt
cdq
pushf
xchg
xchg
sub
xchg
cli
fdiv
xchg
jge
or
dec
mov
and
sbb
lahf
mov
aas
jns
lock
xchg
cmp
xchg
cs
sub
adc
pop
js
jge
add
jge
cld
xor
sbb
pop
jge
xchg
fwait
call
in
jecxz
adc
pop
jge
cmp
inc
imul
test
ins
jns
add
cmp
sub
sbb
push
jns
sbb
sbb
in
sub
mov
out
in
sub
sbb
sub
lahf
xchg
jl
sti
les
sbb
lahf
fcom
jns
repnz
nop
lock
xchg
xchg
hlt
scas
cli
popa
sub
jge
mov
pop
lea
and
js
sbb
ins
jns
cmp
lock
fcomip
jmp
sub
sub
clc
jns
jge
cmp
je
or
mov
ins
xchg
jge
repnz
jno
cld
rol
mov
inc
lock
ins
or
pop
jge
repnz
cmp
cmp
in
out
push
jecxz
xchg
cli
cmp
iret
cmp
ins
mov
hlt
jmp
lock
xor
aad
cmp
stc
inc
(bad)
shl
dec
popf
xchg
popf
add
xchg
mov
mov
and
sbb
stc
and
jbe
in
ins
jns
je
or
mov
ins
jns
mov
sub
hlt
stos
xchg
fs
pushf
push
les
xor
pop
jne
cmp
push
jns
sbb
jge
cmp
lock
sub
ins
xchg
push
push
ins
jns
mov
mov
pop
test
mov
pop
jge
xchg
jb
xchg
xchg
sbb
jns
sub
sub
js
cs
ss
sbb
sbb
sub
hlt
stos
xchg
add
sbb
push
xchg
jle
pop
jne
jge
inc
push
push
sbb
add
dec
test
xchg
dec
in
stos
aas
xchg
cmp
dec
ins
jbe
dec
xchg
xchg
dec
test
adc
imul
xchg
into
adc
pop
in
mov
jbe
push
jns
jns
jns
jge
jns
jge
adc
sub
jns
hlt
sub
jbe
cmp
sub
ins
jns
cmp
(bad)
movs
xchg
js
or
hlt
push
mov
xchg
test
jae
ins
adc
sub
in
popf
cs
or
xchg
test
repnz
(bad)
in
jecxz
xchg
xchg
out
ins
jns
and
mov
sub
pushf
movs
aad
jnp
xchg
dec
adc
jge
das
dec
(bad)
or
add
retf
ins
mov
hlt
jmp
lock
scas
jle
jge
mov
jecxz
add
cld
aas
ins
xchg
jle
ins
jns
clc
cwde
xchg
and
fadd
sbb
jecxz
xor
cmps
adc
ins
lock
fist
ins
xchg
xor
jns
adc
jns
hlt
jmp
lock
fild
xchg
hlt
cdq
mov
test
fdiv
inc
sbb
jns
or
jns
sahf
in
lods
adc
cld
adc
pop
jge
repnz
cmp
xchg
cmp
lock
xchg
xchg
hlt
scas
hlt
cdq
mov
add
std
aas
ins
repnz
popf
xchg
xchg
sub
push
jns
jge
lock
and
sbb
in
mov
xchg
clc
lods
xchg
cmp
fisubr
jns
not
add
lods
jbe
jg
jns
adc
xchg
int3
fadd
xchg
xchg
(bad)
test
xchg
mov
xchg
xchg
imul
mov
adc
xchg
movs
inc
mov
mov
fdiv
ficomp
cmp
and
cmp
fdiv
rcr
ins
pop
lahf
rcl
loop
ins
jbe
repnz
jns
std
rol
stc
icebp
jle
jge
js
and
test
adc
jecxz
test
xchg
mov
xchg
xchg
cld
scas
cld
es
jbe
clc
retf
adc
jge
jbe
inc
outs
jns
jb
cld
mov
sub
xchg
xchg
fstp
test
fdiv
into
cdq
fist
jl
(bad)
shl
adc
pop
jge
jbe
mov
scas
test
sbb
jge
sub
xchg
xchg
sub
push
js
mov
cmp
rol
jo
xchg
(bad)
test
and
mov
xchg
xchg
jl
jns
pop
ins
adc
popf
cs
sub
test
inc
xchg
xchg
add
cld
aas
ins
hlt
mov
sub
fdiv
xchg
jge
or
jecxz
xchg
js
jge
adc
jge
sub
xchg
xchg
sub
push
js
les
jecxz
xchg
cs
hlt
cdq
xchg
(bad)
test
and
mov
xchg
xchg
jl
jns
pop
ins
adc
sub
or
inc
xchg
xchg
add
cld
aas
ins
hlt
mov
sub
fdiv
xchg
jge
or
jecxz
xchg
js
jge
lock
xchg
xchg
hlt
scas
adc
jge
sub
xchg
xchg
sub
stos
cld
mov
xchg
xchg
jl
cli
cld
aas
ins
adc
jns
mov
jne
adc
cdq
aad
xchg
jl
jns
pop
ins
adc
jns
sub
mov
mov
sbb
sbb
cld
aas
ins
hlt
mov
sub
fdiv
xchg
jge
or
pop
ins
adc
jns
rcl
mov
pusha
inc
jecxz
ins
jns
ja
cld
mov
xchg
xchg
mov
jb
jge
les
jp
sbb
loope
loope
xchg
xchg
and
xor
or
sub
cmp
or
pop
jge
mov
(bad)
xchg
xchg
sub
ins
jns
mov
jge
jge
cld
les
jmp
sub
hlt
sub
jmp
ins
jns
clc
aam
loop
cmp
cdq
movs
xchg
xchg
sub
dec
lock
and
mov
adc
test
fmul
adc
push
jge
cli
mov
jge
les
loop
sbb
ins
clc
fist
jns
sbb
xchg
jge
cld
mov
jge
jns
clc
in
loop
cmp
cdq
in
xchg
sub
xchg
xchg
xchg
in
jmp
in
cwde
adc
enter
dec
adc
out
mov
push
xchg
inc
ins
jns
jge
cmp
je
jbe
inc
push
test
xchg
clc
mov
repnz
sti
test
pop
and
mov
adc
ins
jge
jge
cld
hlt
adc
jecxz
xchg
sub
hlt
sub
sar
jns
mov
push
xchg
clc
test
cdq
mov
out
jecxz
push
lock
adc
mov
hlt
jmp
lock
adc
pop
jge
hlt
cdq
cdq
xchg
xchg
sub
xchg
xchg
xchg
in
loopne
mov
(bad)
hlt
scas
cli
popa
sub
cld
xchg
js
ins
cli
mov
jge
int3
in
xchg
xchg
cmp
jmp
sub
dec
add
(bad)
test
lahf
fadd
nop
sbb
ins
jns
jge
xchg
ja
ins
clc
out
mov
jns
sbb
jecxz
xchg
hlt
cdq
adc
cld
aas
ins
hlt
cdq
adc
jo
ins
cli
fsubr
mov
jp
jmp
jnp
imul
xchg
jecxz
xchg
lock
in
xchg
xchg
lock
sub
sub
or
mov
sbb
jns
fsub
int3
xchg
adc
sti
les
sbb
lahf
fcom
cmp
and
nop
jo
jb
push
push
jge
cli
mov
jge
mov
xchg
clc
enter
cmp
pushf
pushf
cs
clc
lock
cmp
cmp
jge
jns
cmp
push
push
jge
clc
out
xor
(bad)
adc
loop
cmp
and
cmp
fdiv
xchg
aad
xchg
jge
cwde
sbb
xchg
nop
adc
mov
fistp
stos
cld
ins
adc
mov
xchg
xchg
and
pushf
adc
jecxz
xchg
cli
lock
in
movs
jns
jns
mov
hlt
test
inc
jge
jge
mov
adc
push
or
jns
mov
xchg
hlt
scas
cli
popa
sub
dec
std
jecxz
xchg
jns
clc
call
adc
jns
clc
in
xchg
cmp
cmp
jge
jns
cmp
outs
sbb
stc
xchg
xchg
jge
std
adc
clc
or
loop
cmp
sbb
(bad)
cdq
stc
xchg
xchg
sub
dec
lock
and
mov
adc
mov
sbb
or
mov
jne
cld
sar
jns
rol
sub
ins
jns
lock
sub
enter
add
jne
mov
jecxz
xchg
clc
(bad)
data16
std
shl
adc
sbb
stos
cld
in
adc
jbe
xchg
int3
mov
xchg
xchg
cmp
popf
cs
clc
xchg
xchg
cmp
pop
ins
jns
mov
xchg
xchg
(bad)
movs
xchg
js
or
xchg
cld
xchg
jge
xchg
lock
sub
and
sbb
test
jne
ins
cli
fdiv
jge
clc
xchg
xchg
cmp
popf
cs
clc
xchg
xchg
cmp
adc
jns
mov
sub
(bad)
sar
jecxz
xchg
jns
jge
cld
pushf
adc
dec
jne
mov
inc
adc
mov
xchg
xchg
adc
adc
jecxz
out
mov
neg
jne
cld
add
xchg
xchg
cld
lock
loop
push
cld
lock
jecxz
out
(bad)
in
adc
cdq
adc
sbb
ins
mov
hlt
jmp
lock
jmp
sub
(bad)
shr
push
adc
dec
jne
(bad)
enter
sbb
pusha
repnz
test
out
jecxz
fs
movs
xchg
xchg
sub
fs
mov
out
jecxz
lock
fcomip
jmp
sub
xchg
dec
mov
xor
inc
mov
sub
cwde
push
xchg
cmp
or
sbb
ins
jns
sbb
pop
sbb
ins
jns
xchg
js
dec
sub
sbb
mov
not
adc
mov
sbb
in
cmp
mov
jns
adc
test
jge
cli
fdivr
or
adc
sbb
sbb
loopne
xchg
xchg
xchg
inc
mov
sbb
out
cld
mov
sub
xchg
add
lock
xchg
es
es
repnz
lea
ficomp
scas
jge
sub
pushf
dec
sub
cs
cmp
in
mov
pop
and
cmp
ins
adc
push
jns
jge
push
jns
ins
lock
test
aad
cmp
stc
inc
and
ret
adc
in
sbb
js
int
jge
mov
pop
jge
lock
jl
lock
dec
popa
cmp
lahf
pop
push
out
jge
cli
cmp
cmp
sub
jns
js
loopne
jge
jns
jge
mov
imul
in
jns
retf
imul
fdiv
pop
push
jge
inc
jecxz
ins
jns
repnz
jnp
jge
pop
cdq
in
fdivr
sbb
popa
popa
cmp
cmc
sbb
imul
adc
lods
xor
cmp
sbb
push
jnp
jge
je
loop
jns
mov
adc
inc
jnp
jge
jl
in
jns
or
lock
jns
js
out
jge
jg
js
out
jge
mov
fwait
in
call
jg
jns
js
out
jge
sbb
fdivr
sbb
imul
jp
mov
sbb
call
repz
ins
fisttp
xchg
xchg
mov
cmp
push
jle
jns
cld
call
repz
test
adc
sbb
sbb
mov
ins
clc
ficomp
jns
std
popa
popa
cmp
mov
fild
pop
jge
call
repz
sbb
mov
ins
lock
push
pushf
lock
popa
popa
cmp
fstp
in
jge
jns
jge
into
loop
xchg
(bad)
sbb
cmp
sbb
mov
ins
clc
bnd
jns
std
popa
popa
cmp
fstp
loopne
jge
jns
jge
repnz
xchg
xchg
or
cmp
imul
jl
lock
popa
popa
cmp
cmc
jns
jns
fadd
jl
loop
jns
arpl
jns
mov
mov
pop
jge
nop
std
jge
jns
xchg
icebp
cmp
lods
jnp
js
out
jge
mov
jge
fcomp
sub
jmp
sbb
ins
fdiv
loopne
jns
js
out
jge
xlat
sbb
ins
xchg
or
cmp
imul
loope
jns
hlt
pushf
push
in
hlt
stos
cli
sbb
cmp
test
sbb
ins
dec
fcom
je
loop
jns
cld
stos
xor
jge
lock
out
mov
jb
jl
(bad)
jns
mov
addr16
sbb
cs
std
ins
jns
add
jns
inc
xchg
pop
cdq
mov
popa
popa
cmp
test
jns
push
int
cmp
cmp
dec
xchg
inc
repz
pushf
dec
in
hlt
stos
stc
adc
cmp
test
sbb
aad
jns
sub
aas
ins
(bad)
sbb
cmp
ins
jns
mov
repz
sbb
pop
jge
mov
retf
imul
fdivr
jns
cmp
fcomp
out
cdq
sbb
sub
and
call
stc
popa
xchg
sbb
ins
clc
repnz
jns
jb
cmp
inc
in
jns
jge
jb
cmp
cmp
imul
cmp
cmp
sbb
xchg
jns
das
in
add
jnp
xor
pop
jge
xchg
pop
std
adc
adc
cmp
in
xchg
mov
repz
mov
pop
jge
iret
sbb
mov
cmp
or
std
adc
sbb
cmp
in
xor
pop
pusha
jmp
add
movs
cmp
jge
jns
jns
inc
test
xchg
jno
cmp
fs
adc
sub
outs
cmps
in
xchg
inc
pop
ins
jns
pop
pusha
jmp
add
movs
cmp
jge
jns
jns
sar
jno
cmp
push
out
jge
jl
in
sub
outs
cmps
xchg
jl
leave
cs
mov
mov
sbb
lods
cmp
movs
mov
dec
sub
(bad)
push
or
jns
mov
mov
pop
jge
jo
aas
ins
xchg
push
ins
jns
mov
ins
cs
cld
xor
fidiv
fstp
add
cmps
aas
ins
cs
or
jns
fidivr
jge
cmp
jge
mov
hlt
sub
cmps
aas
ins
cs
sub
jns
ficomp
xor
cmp
jns
ficomp
jge
daa
cmps
aas
ins
cs
dec
xor
fidiv
pop
jge
daa
aad
cmp
stc
inc
ret
push
xchg
movs
ins
mov
push
stc
(bad)
cmp
sub
dec
cmp
aas
ins
mov
sbb
in
sbb
sbb
lock
lea
jns
cld
xchg
and
cli
jns
ins
cli
jns
ins
xchg
or
cmp
or
(bad)
hlt
scas
cli
jns
ins
mov
sbb
stos
cmp
jl
jns
lds
pop
sbb
fwait
call
imul
push
cmp
jnp
jge
shl
jns
sahf
in
mov
scas
mov
sbb
out
sbb
jge
add
lock
sbb
leave
hlt
pop
xchg
cmp
sbb
push
xchg
cmp
in
jge
mov
xchg
cmp
sub
loope
mov
jge
jge
jnp
or
xchg
lock
xchg
or
lock
dec
pop
ins
xchg
mov
js
int
jge
jns
or
adc
ins
adc
pop
push
imul
ins
jns
sahf
in
mov
scas
xchg
test
sbb
fdivr
sbb
sub
xchg
cmp
in
jge
cmp
xchg
push
neg
dec
jns
and
and
mov
sbb
nop
pop
sbb
and
pop
and
cdq
jmp
mov
pop
mov
sub
cmp
in
or
dec
xchg
in
hlt
pop
push
hlt
pop
test
pop
xchg
cmp
imul
xchg
or
cmp
cmp
repnz
mov
push
fild
in
dec
sub
jle
gs
in
xchg
lock
ins
xchg
push
xchg
push
aam
data16
mov
hlt
sub
fild
in
lahf
xchg
pusha
sub
out
adc
xor
js
int
jge
xchg
retf
push
jns
or
stos
cmp
and
inc
jbe
cmp
and
jo
stos
cmp
and
jl
stos
cmp
and
call
repnz
ins
loope
pop
js
ins
and
js
fidivr
xchg
jns
retf
sub
jle
cs
retf
js
and
jge
jns
xchg
jbe
imul
sbb
ins
lock
xchg
retf
js
and
xchg
xchg
pop
jb
ins
or
jb
xchg
cli
hlt
jns
iret
sbb
xchg
sbb
ins
or
jb
cmp
push
lods
jbe
jns
adc
and
jns
jb
sub
push
mov
stos
mov
xchg
xor
in
movs
xchg
outs
imul
lods
outs
cmp
inc
pop
ins
loope
pop
js
sbb
jl
jns
xchg
dec
jbe
cmp
inc
sbb
sbb
cmp
xchg
sub
aas
ins
stc
and
or
hlt
xchg
xor
in
lahf
xchg
outs
stc
and
or
hlt
xchg
cli
hlt
jle
inc
sbb
dec
xchg
test
xchg
sbb
jge
inc
add
push
inc
sar
jge
jb
test
xchg
sbb
push
jg
or
les
imul
jp
jge
jl
jns
std
push
inc
push
or
lock
in
inc
sbb
and
push
std
push
jg
or
jp
inc
push
imul
push
inc
hlt
jge
jns
jp
nop
sbb
ins
or
(bad)
movs
xchg
outs
imul
lods
ins
mov
pop
test
cmp
lock
jl
cli
hlt
jns
sub
hlt
js
sbb
inc
push
js
das
in
push
std
push
jg
or
jnp
inc
push
imul
stc
and
or
hlt
xchg
cli
hlt
jns
iret
sbb
inc
push
jge
or
sbb
sbb
aam
jns
idiv
imul
hlt
push
jns
cld
xchg
jns
jge
jbe
retf
jecxz
xor
aad
cmp
stc
inc
xchg
or
cmp
sbb
popa
pop
xchg
jp
inc
and
jo
cld
xchg
xchg
pop
jge
paddsw
xchg
xchg
pop
jge
or
cmp
cmp
push
test
jge
mov
sbb
ins
cli
fidiv
jl
leave
cs
retf
cmp
lahf
outs
repnz
call
xchg
test
dec
xchg
call
xchg
or
cmp
fidivr
inc
test
jge
pop
and
cli
jns
ins
xchg
adc
mov
pop
and
jg
cmp
jns
cmp
repz
jge
lock
imul
test
mov
xchg
sbb
lock
idiv
lea
in
sub
lahf
xchg
xchg
(bad)
movs
xchg
lods
in
sbb
xchg
push
jge
xchg
loope
add
in
jl
sbb
fdivr
sbb
movs
xchg
js
test
pop
test
inc
sbb
sub
dec
ins
lods
fwait
push
sbb
shr
hlt
or
jne
and
mov
sub
pushf
movs
and
sbb
mov
das
dec
xchg
mov
jecxz
stos
cld
jmp
aam
sbb
push
jns
jge
or
mov
xchg
js
clc
lahf
xchg
jecxz
ins
cli
sbb
fdivr
sbb
in
(bad)
jmp
jge
stos
clc
lahf
xchg
jecxz
in
inc
sbb
sbb
ror
(bad)
(bad)
out
xchg
xchg
xchg
ins
jnp
jg
daa
adc
stc
mov
adc
jecxz
cmps
jbe
jno
inc
mov
aam
jns
idiv
rol
adc
pop
jge
iret
mov
cmps
addr16
jno
cmps
cmps
aas
ins
sub
lahf
outs
lock
mov
jecxz
pop
ins
dec
in
jns
cwde
xor
sbb
stc
ffree
adc
pop
jge
cld
out
xchg
xchg
xchg
xchg
xchg
xchg
jb
and
ret
ins
jbe
xor
mov
adc
repz
or
cmp
ins
jns
retf
stc
mov
adc
or
stc
lods
ret
adc
sbb
rcr
adc
sti
js
jge
inc
in
xchg
lock
movs
mov
jecxz
imul
jecxz
mov
call
sub
xchg
clc
cwde
xchg
jecxz
pop
xchg
pop
add
or
ins
sub
shl
sbb
stos
cli
jmp
(bad)
in
xchg
xchg
scas
jns
jge
inc
or
mov
jecxz
test
inc
jge
xchg
or
cmp
leave
xchg
repz
sbb
xchg
xchg
xchg
xchg
enter
add
jno
cmp
je
or
ret
jns
loopne
cmps
jecxz
xchg
sub
xchg
outs
mov
loopne
pop
ret
lahf
fwait
push
xchg
jecxz
sbb
cld
xchg
jns
jge
or
cld
xchg
xchg
jge
or
hlt
mov
sbb
ins
jns
clc
in
cmps
jecxz
xchg
popf
mov
in
sbb
or
xchg
addr16
xor
xchg
jge
js
imul
cmc
ret
push
jecxz
ins
jns
clc
adc
adc
pop
jge
int3
les
cmp
xchg
sub
sbb
arpl
mov
mov
imul
mov
leave
(bad)
repz
jecxz
lods
fwait
push
hlt
mov
cmc
jg
cwde
push
jle
test
push
out
call
lahf
outs
lock
jp
sub
cdq
mov
(bad)
repz
stos
sub
aas
ins
stc
mov
jge
and
cmp
in
mov
mov
ins
jns
hlt
stc
in
adc
xchg
clc
hlt
cmps
jecxz
out
mov
call
out
mov
cdq
jmp
jmp
repnz
mov
jecxz
outs
lock
in
mov
jecxz
jmp
repnz
test
jmp
adc
lock
sub
enter
add
test
jmp
or
imul
mov
cdq
leave
mov
jecxz
jmp
stc
mov
jge
mov
cmp
ins
repnz
mov
jecxz
xchg
idiv
rol
xchg
mov
adc
jns
call
xchg
jecxz
sbb
pop
jge
iret
mov
mov
lock
jecxz
inc
hlt
enter
xchg
jno
dec
mov
lahf
xchg
jecxz
lods
fwait
push
idiv
cmp
sub
xchg
call
add
or
ins
sub
inc
cmp
hlt
jmp
jo
jb
sbb
jne
jbe
inc
ins
jns
imul
(bad)
repz
sbb
ins
or
sbb
jge
nop
pop
jl
jns
clc
cwde
xchg
jecxz
out
sbb
sbb
xchg
xchg
clc
mov
mov
inc
popf
ret
adc
jecxz
in
push
std
push
jns
push
in
lahf
xchg
outs
stc
and
sbb
(bad)
out
xchg
pop
std
push
jns
imul
stc
and
sbb
(bad)
out
xchg
sbb
push
jns
je
xchg
rol
ins
jbe
call
lods
fwait
push
hlt
fsubr
xchg
xchg
ins
jbe
jnp
nop
sbb
ins
or
imul
sbb
xchg
xchg
hlt
pop
dec
push
xchg
xchg
out
lock
arpl
cdq
mov
push
in
idiv
or
push
(bad)
clc
mov
in
aam
mov
(bad)
mov
lahf
outs
repnz
sub
sbb
or
inc
outs
jns
jge
or
std
push
inc
pop
jge
jns
or
and
jns
jge
or
std
push
inc
sbb
jns
or
div
mov
jecxz
lods
push
mov
or
stos
clc
lahf
xchg
jecxz
cmp
test
sbb
ret
adc
lahf
mov
mov
jecxz
sbb
lahf
fcomp
repnz
mov
movs
lods
nop
push
mov
nop
repnz
push
in
or
adc
jecxz
push
xchg
or
cmp
inc
test
sub
out
xchg
xchg
xchg
xchg
xchg
xchg
jb
and
ret
ins
jbe
push
xchg
xchg
and
and
mov
add
cmp
inc
jne
cmp
sbb
cld
add
fidivr
xchg
js
add
cmp
jge
sbb
lahf
fst
mov
cmp
mov
mov
cmp
add
lock
cld
mov
jge
jns
fabs
add
lock
in
mov
jge
jns
fldln2
adc
pusha
push
jns
std
push
push
imul
repnz
test
mov
in
sub
pop
jb
sub
inc
sub
push
pop
sub
std
sub
or
sub
ins
jns
jle
iret
dec
adc
movs
arpl
nop
jge
jns
cmp
pop
sub
ds
inc
fdivr
jns
pop
arpl
pop
jl
mov
in
sbb
cmp
js
mov
xchg
jge
ja
sbb
gs
in
adc
cmp
js
ds
mov
sbb
xchg
jl
jns
cmp
jle
cmp
hlt
scas
push
fdivp
cmp
cmp
in
jns
jge
jge
cmp
inc
jmp
ins
jns
ja
cmp
cmp
js
add
xchg
sub
xchg
jle
iret
dec
adc
pushf
cmp
cmp
jl
add
jp
popf
popf
adc
stos
jle
cli
sbb
ins
or
std
sub
jecxz
xor
aad
cmp
stc
cmp
xchg
or
ins
mov
popf
xchg
sub
jge
xchg
test
jge
lock
(bad)
movs
xchg
js
or
stc
and
or
mov
xchg
(bad)
xchg
js
nop
in
sub
and
and
sub
pushf
movs
jns
jns
xchg
dec
sub
add
hlt
xchg
mov
hlt
jmp
lock
fcomi
sbb
sbb
xchg
clc
ins
cdq
jecxz
cmp
or
ins
jns
clc
ins
cdq
jecxz
cmp
adc
jns
mov
xchg
lock
inc
mov
sub
cwde
cmp
mov
push
popf
xchg
div
jge
jns
jge
or
pop
ins
xchg
sub
jns
and
xchg
adc
cmp
mov
cld
fwait
xor
sbb
in
jns
jge
jp
jge
jp
jge
jns
sbb
hlt
pusha
ds
hlt
stos
cli
loop
sbb
add
push
dec
test
lock
dec
pop
ins
das
hlt
js
jns
hlt
scas
cli
fsubr
adc
sub
sbb
jge
adc
adc
or
jno
cmp
xchg
push
pop
test
cmp
sbb
dec
sbb
dec
xchg
movs
sub
ins
jns
cmp
push
in
stos
es
movs
mov
dec
sub
(bad)
sub
push
xchg
test
xchg
mov
ins
jns
pop
push
adc
fs
data16
jns
mov
ins
jns
adc
dec
pop
outs
adc
ins
das
hlt
cld
cmp
jne
mov
in
inc
sbb
mov
nop
sub
sbb
xchg
mov
jns
cmp
mov
aas
ins
das
hlt
les
mov
hlt
sub
jns
lds
sbb
xor
inc
mov
sub
cwde
out
xchg
adc
cmp
scas
jo
ins
movs
pop
sub
mov
mov
sbb
ins
adc
pop
ins
adc
xchg
or
xchg
mov
sbb
in
xchg
test
lock
xchg
xchg
pop
mov
jbe
push
jns
xchg
mov
sbb
push
jns
cmp
xchg
cmp
xchg
test
xchg
mov
ins
jns
mov
scas
sub
cwde
cmp
or
mov
out
popf
adc
dec
(bad)
hlt
mov
sbb
jge
jl
ds
add
call
adc
test
dec
jge
clc
imul
ins
xchg
jbe
ins
jns
mov
jg
stos
jns
sub
cmp
out
mov
adc
test
xchg
addr16
and
or
mov
push
add
add
sbb
inc
sub
sub
xchg
sub
mov
dec
sub
repnz
jne
or
mov
lods
push
popf
cmp
adc
popf
cs
mov
jns
and
xchg
outs
arpl
sbb
adc
popf
cs
pushf
ds
(bad)
test
pop
inc
fwait
or
adc
test
xchg
cmp
lock
xor
sub
cwde
out
xchg
xor
cmp
cmps
std
and
hlt
mov
(bad)
hlt
scas
pop
fstp
mov
dec
xchg
sbb
or
sbb
adc
pop
jge
jp
jge
mov
jge
call
adc
or
fstp
mov
imul
jno
retf
xchg
cmp
sbb
mov
fbstp
cmp
jb
cmp
add
pushf
add
adc
jg
xchg
mov
adc
jns
mov
cmp
jb
cmp
cmc
sub
cli
jae
jns
retf
sub
in
(bad)
lods
addr16
sub
inc
xchg
push
std
add
sbb
mov
lock
movs
in
xchg
cmp
stos
jge
sub
jb
imul
ins
jns
retf
adc
scas
js
cdq
in
sbb
xor
adc
and
enter
xchg
cmp
stos
cmp
arpl
dec
jnp
test
adc
scas
js
cdq
out
adc
cmp
cmp
retf
xor
imul
popf
idiv
mov
inc
and
mov
sbb
cld
rcr
neg
shl
mov
lods
jmp
xor
cld
jmp
mov
cld
cmp
cld
jmp
mov
cld
jmp
mov
cld
inc
(bad)
in
cld
jmp
mov
cld
rcr
cwde
pop
jge
rcr
cmp
cld
or
mov
mov
cld
cli
fdivr
jmp
mov
cld
or
in
cld
jmp
mov
cld
push
cmc
hlt
jge
jecxz
or
mov
cld
jmp
sbb
xor
mov
cld
jmp
sbb
inc
pop
and
cld
jmp
sbb
cld
jmp
mov
pop
push
in
cld
jmp
mov
push
mov
in
cld
jmp
mov
out
mov
lahf
inc
ins
jmp
mov
cld
jmp
mov
or
sbb
sub
cwde
repz
bound
sbb
cs
pushf
cs
jae
cmp
sbb
cld
rcr
jmp
mov
cld
jmp
mov
cld
or
mov
call
lock
mov
mov
cld
dec
into
in
cld
jmp
mov
cld
lock
cld
jmp
mov
cld
call
mov
cld
(bad)
bound
mov
mov
cld
js
in
cld
jmp
mov
cld
rcr
jns
in
cld
or
mov
mov
lock
mov
mov
cld
dec
into
in
cld
jmp
mov
cld
lock
cld
jmp
mov
cld
call
mov
cld
(bad)
pop
jae
cmp
cld
js
in
cld
jmp
mov
cld
sbb
test
adc
lahf
xchg
je
dec
sub
and
imul
jne
hlt
sub
cmp
repnz
and
sub
dec
call
xchg
mov
sbb
in
sbb
mov
icebp
dec
xchg
add
jge
jg
cmp
sub
ins
lock
xchg
aam
arpl
(bad)
sbb
jns
retf
cmp
test
sub
fdivp
cmp
sbb
or
pop
and
or
inc
adc
or
mov
in
cmp
fidiv
push
cmps
icebp
or
fidivr
inc
mov
jge
imul
retf
and
popf
cmp
adc
loope
out
sub
ins
jbe
cmp
mov
mov
retf
cmp
xchg
xor
jnp
cmp
sub
cmp
xor
mov
in
or
dec
push
jns
sbb
cmp
xor
je
jecxz
xor
inc
mov
sub
cwde
out
xchg
xor
cmp
cmps
mov
scas
into
ss
xchg
jb
ins
jns
jo
jp
sub
mov
fld
inc
mov
lods
xor
xchg
lahf
inc
test
pop
jge
or
dec
lods
nop
pop
jg
jns
cmp
cmps
test
lock
cwde
push
outs
jns
jb
add
mov
push
aad
aas
ins
push
or
les
in
push
hlt
adc
repz
push
shl
jle
mov
hlt
mov
pusha
adc
pushf
jp
mov
sub
sbb
out
mov
pop
jge
cmp
xchg
jnp
fist
pushf
jp
and
jns
ins
out
cmp
jns
mov
aas
ins
jp
mov
cmp
sub
mov
test
jns
mov
mov
in
jns
mov
(bad)
sub
pop
jge
jl
shr
and
xchg
add
jge
cmp
xchg
or
jge
add
jb
xchg
mov
in
int3
shr
popf
xchg
jb
sbb
test
push
jge
lock
movs
test
jge
repnz
movs
arpl
jecxz
scas
jbe
scas
lods
fwait
or
mov
cmp
sub
movs
shr
xchg
lea
fadd
cs
xchg
mov
adc
movs
les
in
call
cdq
pop
jns
hlt
pushf
jp
mov
ins
int3
shr
sub
jns
mov
aas
ins
jp
mov
cmp
sub
mov
lea
cmp
idiv
mov
(bad)
sub
pop
jge
jl
shr
and
hlt
fwait
jp
mov
fisubr
lods
mov
or
mov
pop
jge
je
shr
xchg
jno
lock
push
mov
stos
sub
in
clc
shr
xchg
jo
les
in
es
scas
pop
adc
stc
popa
xchg
ins
or
inc
xchg
add
fstp
sub
test
pop
jge
xchg
mov
xchg
xchg
pop
ins
adc
pop
ins
adc
xchg
or
xchg
xor
lahf
add
jge
adc
sub
dec
sbb
hlt
add
popf
hlt
fs
sbb
test
fdivr
push
jns
mov
mov
fild
in
popf
xchg
je
sbb
aas
das
dec
ret
mov
mov
aam
gs
mov
hlt
jmp
lock
imul
add
pushf
dec
in
hlt
stos
xchg
mov
scas
and
or
in
jmp
lods
sbb
xchg
xor
test
fstp
xchg
sub
hlt
in
daa
jns
jb
add
(bad)
mov
lock
lods
add
cmps
lock
and
mov
mov
xchg
sub
jecxz
out
jecxz
fs
mov
xchg
jns
sub
jns
hlt
scas
(bad)
fidivr
(bad)
imul
jecxz
in
pop
and
jns
clc
xchg
xchg
cmp
fsubr
jns
mov
and
xchg
sub
dec
daa
jns
pop
ins
adc
outs
adc
ins
adc
xchg
test
cmp
cmp
clc
cwde
test
adc
pop
jge
xchg
sbb
ins
jns
jge
cld
in
adc
sbb
add
mov
mov
xor
in
jecxz
cwde
test
add
or
cmp
add
ret
aas
ins
hlt
cdq
adc
push
jge
hlt
cdq
xchg
movs
ret
aas
ins
hlt
cdq
adc
sbb
in
xchg
dec
jge
jns
cld
and
lock
xchg
xchg
xchg
hlt
stos
xchg
or
cmp
add
ret
aas
ins
hlt
cdq
adc
sbb
in
xchg
aas
jge
jns
adc
add
ret
aas
ins
adc
jge
stc
hlt
jae
jns
(bad)
test
popf
mov
add
inc
mov
sub
cwde
out
xchg
adc
cmp
xchg
or
sub
not
test
xchg
mov
cs
test
lock
or
dec
lock
and
jns
jge
jns
jge
or
sbb
hlt
pop
and
cli
aam
sub
and
in
sub
jbe
push
jns
or
add
sbb
sbb
sbb
xor
aad
cmp
stc
sub
out
pop
cmp
jns
sbb
hlt
jo
jns
pop
ins
sub
or
imul
jno
dec
ins
jns
(bad)
test
inc
and
mov
hlt
xchg
mov
hlt
sub
jbe
loope
or
sbb
or
jge
jns
mov
cmp
stc
sub
mov
hlt
xchg
dec
in
stos
hlt
pop
test
pop
cmp
push
jge
jns
jge
jns
or
imul
jo
or
fcom
xchg
or
sbb
jbe
xchg
or
sbb
hlt
adc
sbb
lods
or
hlt
inc
and
sbb
lods
xchg
or
hlt
stos
xchg
test
jge
dec
fdivr
in
lahf
xchg
jl
dec
neg
ins
xchg
cmp
cmp
movs
pop
popf
mov
aas
sbb
stos
jg
hlt
xchg
dec
in
stos
hlt
pop
cmp
jbe
xchg
or
sbb
hlt
mov
jns
je
or
and
sub
sub
jns
jge
or
sbb
hlt
cwde
sub
je
or
hlt
mov
lods
xchg
push
sbb
hlt
enter
jb
cmp
xchg
pusha
shl
ins
jns
call
inc
mov
sub
cwde
cmp
fistp
je
fstp
vmwrite
push
test
aas
ins
jns
pop
test
jge
sub
fsubr
jns
hlt
sub
xchg
mov
ins
inc
pop
test
push
sub
pop
ins
adc
jge
jns
jge
jns
jge
sbb
aas
ins
xchg
inc
cmp
cmp
jo
or
fcom
mov
aas
sbb
in
loopne
push
jmp
jbe
sbb
xor
test
mov
mov
mov
xchg
push
in
adc
cmp
stc
sub
das
dec
neg
jno
and
pop
xor
cmp
hlt
scas
push
fdivp
cmp
pushf
inc
push
je
push
in
xor
jl
sub
or
cmp
mov
mov
dec
ins
stos
jge
jge
sbb
push
jns
std
push
inc
sbb
test
stc
and
or
hlt
xchg
xor
out
or
ins
jns
cmp
lock
ins
mov
sbb
in
popf
cmp
jo
or
in
jl
sub
or
aas
ins
jns
cmp
lock
and
jnp
mov
scas
sub
cwde
out
xchg
or
cmp
xchg
and
lea
or
pop
pop
jns
test
pop
jge
lock
test
mov
adc
push
cmp
cld
das
jns
hlt
sub
adc
push
jo
or
stos
jns
cli
in
or
jge
cmp
in
mov
jno
dec
inc
sbb
or
div
arpl
and
and
stos
out
mov
movs
ins
jns
(bad)
and
fst
in
lahf
mov
cwde
cs
mov
sbb
test
pop
jge
cli
fsubr
xchg
arpl
pop
adc
(bad)
repnz
mov
daa
inc
mov
sub
cwde
aam
sbb
ins
xchg
bound
jns
sub
(bad)
push
ds
inc
fstp
xchg
xchg
jge
fdiv
adc
jecxz
xchg
sub
or
xchg
fs
pushf
js
hlt
stos
jo
or
fcom
(bad)
in
xchg
xchg
popa
sub
aam
jns
dec
lods
nop
push
jbe
jns
or
push
ds
jns
clc
mov
loope
aam
sbb
ins
mov
hlt
jmp
repnz
push
shl
xchg
call
loope
es
jns
sub
cmp
sub
jns
hlt
jmp
clc
(bad)
sbb
sbb
je
ins
jns
xchg
aam
sbb
in
xor
cmp
lods
xchg
test
hlt
lods
cli
aam
sub
and
in
stos
adc
stc
test
out
test
rol
add
ret
aas
ins
xchg
test
pop
jge
cli
fdiv
aaa
ret
aas
ins
xchg
xchg
xor
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
jg
in
popf
cs
enter
add
jne
mov
jo
jns
les
sbb
cmc
mov
(bad)
xchg
jl
pop
test
jg
ins
jns
mov
xchg
cmp
and
xchg
cmp
or
mov
sbb
aad
sbb
ins
loopne
test
sbb
jg
in
popf
cs
enter
add
jne
dec
ret
aas
ins
xchg
xchg
mov
adc
int3
cmp
sbb
ins
loopne
test
sbb
jg
in
popf
cs
enter
add
jne
add
ins
rcl
ins
jns
mov
pop
hlt
adc
jns
les
jns
jge
mov
das
out
loopne
xchg
xchg
push
cmps
pop
jge
xchg
jp
ins
jns
mov
add
ret
aas
ins
repnz
adc
sub
xor
jns
(bad)
test
popf
xchg
test
pop
pop
jge
rcl
ins
jns
mov
push
lea
jecxz
xchg
xchg
pop
cmp
mov
cs
enter
add
jne
xchg
pop
jge
rcl
ins
jns
mov
push
lea
jecxz
xchg
xchg
push
cmp
mov
cs
enter
add
jne
retf
ins
rcl
ins
jns
mov
pop
hlt
fsubr
jns
les
jns
jge
mov
das
out
loopne
xchg
xchg
push
cmps
pop
jge
xchg
cmp
jns
mov
ins
jns
fwait
in
rol
test
pop
jge
shl
ins
jns
mov
cmp
shl
hlt
adc
jns
lock
sub
or
adc
sub
sub
jns
(bad)
test
hlt
dec
das
jns
les
sbb
cmc
mov
(bad)
xchg
jl
pop
test
jge
sar
jns
mov
xchg
cmp
and
jo
sbb
out
mov
cli
hlt
jmp
lock
aad
sbb
ins
loopne
test
sbb
jg
in
popf
cs
enter
add
jne
mov
jge
rcl
ins
jns
mov
push
mov
cmp
fld
idiv
ins
jns
mov
ins
jns
ja
jns
in
sbb
pushf
cdq
pop
jge
int3
loopne
xchg
xchg
mov
test
xchg
lea
xchg
mov
ins
xchg
out
loopne
xchg
xchg
cmps
pop
jge
xchg
bound
ins
jns
mov
ins
jns
ja
jns
in
sbb
cmps
cmps
pop
jge
int3
loopne
xchg
xchg
add
jns
(bad)
test
hlt
inc
cs
les
sbb
cmc
mov
(bad)
xchg
jl
outs
add
cld
aas
ins
xchg
xchg
xor
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
dec
xchg
push
aas
ins
jns
push
ins
jns
in
or
test
adc
sbb
test
fsubr
add
jge
std
cwde
jl
jns
fsubr
nop
push
jl
jns
clc
ins
jns
sub
pop
jns
dec
mov
test
xchg
xchg
clc
lods
xchg
adc
adc
fadd
lods
xchg
and
inc
in
movs
ins
jns
in
sbb
aad
sbb
ins
ret
push
xchg
test
jmp
lods
xchg
pop
hlt
stc
(bad)
xchg
lock
(bad)
stos
sbb
sar
adc
sbb
sar
adc
sbb
test
movs
push
cmp
mov
test
hlt
stos
xchg
cld
sar
sbb
ins
jbe
or
xchg
sbb
jecxz
xchg
xchg
loope
sbb
xchg
xchg
test
adc
sbb
test
jge
cli
fsub
xchg
rcl
ins
jns
mov
push
and
test
adc
lahf
mov
ins
jns
ja
jns
in
sbb
cmps
cmps
pop
jge
int3
loopne
xchg
xchg
test
sbb
test
xchg
lea
xchg
mov
ins
rcl
ins
jns
mov
push
lea
jecxz
xchg
xchg
sar
fs
cdq
mov
ins
jns
sub
jecxz
xchg
repnz
test
mov
sahf
loop
xchg
hlt
jmp
lock
mov
test
hlt
stos
nop
addr16
jns
cmp
cdq
test
js
jge
les
call
lock
dec
pushf
lock
sub
jge
jns
inc
jmp
jbe
cmp
sbb
jmp
lock
xchg
xchg
test
sbb
je
mov
sbb
jmp
sub
fs
sbb
test
xchg
lock
xchg
sub
jecxz
in
inc
sbb
mov
xchg
test
hlt
pushf
dec
in
hlt
stos
hlt
cdq
jge
xchg
sub
xchg
test
lock
xchg
inc
sbb
loope
call
xchg
fld
sbb
jmp
xchg
sbb
jecxz
pushf
xchg
and
loopne
xchg
xchg
cmps
pop
jge
xchg
mov
mov
ins
jns
ja
jns
in
sbb
xor
loopne
xchg
xchg
fcom
sbb
test
xchg
lea
xchg
mov
ins
rcl
ins
jns
mov
push
mov
cmp
fld
inc
ins
jns
mov
ins
jns
ja
jns
in
sbb
pushf
cdq
pop
jge
int3
loopne
xchg
xchg
sub
sbb
test
jecxz
pushf
xchg
add
cmp
jns
sub
jecxz
xchg
hlt
cdq
jge
xchg
sub
xchg
xchg
inc
mov
sub
adc
jmp
jo
jb
jmp
cs
enter
add
jne
mov
push
jge
jns
mov
push
and
test
adc
lahf
mov
ins
jns
ja
jns
in
sbb
cmps
cmps
pop
jge
int3
loopne
xchg
xchg
rcl
(bad)
test
xchg
lea
xchg
and
hlt
adc
sbb
data16
jge
mov
(bad)
xchg
jl
outs
add
cld
aas
ins
xchg
xchg
loopne
sbb
out
mov
pop
jge
int3
loopne
xchg
xchg
add
jns
(bad)
test
hlt
dec
push
jns
les
sbb
cmc
mov
(bad)
xchg
jl
pop
test
jge
sar
jns
mov
xchg
cmp
and
dec
inc
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
jg
inc
mov
nop
xchg
add
jne
pop
push
ins
jns
test
jns
les
sbb
cmc
mov
(bad)
xchg
jl
outs
add
ret
xchg
xchg
cwde
inc
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
jg
in
popf
cs
enter
add
jne
repnz
rcl
ins
jns
mov
pop
hlt
add
jns
les
jns
jge
mov
das
out
loopne
xchg
xchg
push
cmps
pop
jge
xchg
push
ins
jns
mov
cs
enter
add
jne
mov
inc
push
jns
les
sbb
cmc
mov
(bad)
xchg
jl
outs
add
cld
aas
ins
xchg
xchg
xor
out
mov
pop
jge
int3
loopne
xchg
xchg
xor
jns
(bad)
test
hlt
js
jns
les
sbb
cmc
mov
(bad)
xchg
jl
outs
add
cld
aas
ins
xchg
xchg
dec
inc
sbb
out
mov
pop
jge
int3
loopne
xchg
xchg
ins
push
jns
(bad)
test
popf
mov
sbb
test
push
jge
jns
mov
push
lea
jecxz
xchg
xchg
cli
inc
ins
jns
mov
xchg
test
sub
xchg
xchg
cmps
pop
jge
xchg
mov
mov
ins
jns
ja
jns
in
sbb
pushf
cdq
pop
jge
int3
loopne
xchg
xchg
fcom
sbb
test
je
mov
sbb
fld
mov
jns
mov
ins
jns
ja
jns
in
sbb
pushf
cdq
pop
jge
int3
loopne
xchg
xchg
adc
sbb
test
movs
or
jns
mov
test
hlt
stos
xchg
push
inc
ins
jns
xchg
outs
jns
in
adc
ins
jns
not
test
adc
sbb
test
jge
cli
fsubr
xchg
daa
jge
rcl
ins
jns
mov
push
lea
jecxz
xchg
xchg
adc
jns
mov
cs
enter
add
jne
into
daa
jge
rcl
ins
jns
mov
push
lea
jecxz
xchg
xchg
retf
jns
mov
sub
xchg
loopne
sbb
aad
sbb
ins
loopne
test
sbb
dec
xchg
inc
ins
jns
push
ins
jns
in
or
test
adc
sbb
test
daa
jge
cli
fsubr
test
test
xchg
in
sbb
out
mov
sbb
outs
adc
ins
adc
fs
push
inc
ins
jns
clc
test
test
ins
jns
enter
add
lock
dec
sbb
jecxz
xchg
xchg
xchg
or
sbb
xchg
int3
hlt
adc
sbb
fld
mov
lea
xchg
mov
ins
jns
clc
add
mov
sub
cwde
in
xchg
adc
ins
jns
ret
adc
sub
adc
jecxz
xchg
retf
sub
pop
jge
cld
jecxz
xchg
xchg
inc
sbb
in
sub
jge
inc
aas
ins
hlt
cdq
adc
sbb
in
xchg
jmp
xchg
xchg
sub
adc
ret
push
jns
inc
mov
sbb
movs
pop
jge
js
jge
xchg
iret
lea
cmp
add
sar
adc
jge
stc
hlt
hlt
pushf
xchg
(bad)
test
popf
xchg
xor
sbb
xor
popf
xchg
clc
jnp
jge
das
dec
ret
cmps
or
in
lahf
fdiv
test
sub
in
inc
sbb
popf
ins
lock
in
xchg
xchg
imul
jno
jns
js
jge
lock
icebp
xchg
xchg
hlt
xchg
push
in
stos
dec
(bad)
imul
jno
mov
test
sub
repnz
jne
sub
mov
xchg
xchg
sub
cdq
add
fabs
adc
xchg
sub
add
jae
lock
aas
in
test
ins
adc
clc
adc
jecxz
xchg
int3
mov
mov
sbb
jmp
xchg
xchg
mov
jge
sub
mul
add
adc
xchg
or
jae
lock
aas
in
xchg
adc
sbb
add
retf
xchg
mov
clc
clc
test
sub
lock
jns
ins
push
jns
clc
enter
cmp
push
inc
ins
jns
sub
sbb
test
jge
adc
jl
jns
clc
fadd
mov
mov
sbb
outs
jns
std
test
adc
imul
jns
mov
ins
xchg
adc
ins
jns
lock
sub
cmp
dec
ins
jns
enter
adc
jecxz
loopne
jecxz
xchg
int3
xchg
adc
jecxz
xchg
int3
mov
lock
sub
xor
pop
xchg
clc
lock
and
jo
xchg
and
jns
mov
ins
adc
nop
xchg
cmp
inc
ins
jns
test
xchg
mov
xchg
xchg
test
adc
sbb
popf
xchg
jecxz
in
cwde
adc
xchg
clc
aam
jecxz
cmp
or
jns
mov
xchg
lock
xchg
cmp
cdq
cdq
xchg
xchg
jl
jns
sbb
xchg
xchg
xchg
jo
(bad)
test
popf
mov
loope
movs
adc
jecxz
xor
xchg
sub
xchg
xchg
adc
dec
adc
ins
adc
jmp
sub
test
fdiv
mov
test
xchg
aam
sbb
in
xor
enter
add
aas
ins
adc
cs
clc
nop
xchg
cmp
dec
ins
jns
mov
xchg
xchg
jge
push
popf
mov
sbb
loope
loopne
xchg
xchg
movs
pop
jge
pop
sub
lock
pop
adc
test
sub
stc
cdq
push
xchg
xchg
jl
cld
outs
adc
adc
jge
jns
xchg
and
jge
les
adc
pop
jns
adc
loope
loopne
xchg
xchg
into
sub
adc
jge
cld
loopne
xchg
xchg
(bad)
mov
sbb
sbb
lock
sub
leave
in
adc
sbb
xchg
lock
sub
pop
jns
lock
sub
and
sbb
sti
addr16
fwait
sahf
xchg
clc
sbb
jecxz
in
dec
xchg
sbb
sbb
push
jns
enter
add
fst
dec
sbb
out
add
and
jge
mov
hlt
jmp
lock
xor
aad
push
cli
lock
aas
das
dec
div
ins
mov
hlt
xchg
dec
in
stos
xchg
test
ficomp
in
loop
xchg
dec
in
stos
xchg
test
das
jge
lock
in
loopne
sbb
rcr
sbb
scas
pop
xchg
sub
jns
hlt
scas
pop
xchg
sub
jbe
sub
sub
jl
jbe
sub
sub
test
cs
lock
sub
jge
dec
fdivr
adc
jb
mov
sbb
push
lock
cmp
ins
jns
mov
in
lahf
mov
pop
jns
sbb
adc
sub
pop
sub
ins
lock
xchg
lock
sub
adc
cmp
dec
xchg
fs
sbb
aas
jbe
cmp
jbe
sub
sub
lock
sub
ins
hlt
pop
test
sbb
add
dec
cmp
ins
xchg
out
ins
jns
mov
ins
jns
cmp
mov
cmp
sbb
cmp
xchg
cmp
dec
hlt
mov
push
bound
cld
pop
jns
cmp
xchg
and
cmp
xchg
test
xchg
mov
ins
mov
hlt
jmp
lock
xchg
cmp
jge
hlt
cdq
ror
popf
xchg
xchg
movs
pop
jge
mov
fidiv
cwde
in
ins
jns
cld
fwait
cmp
jge
sub
enter
add
jne
mov
aam
xchg
xchg
or
xor
jns
test
cdq
jecxz
in
sub
mov
xchg
cmp
jge
hlt
cdq
ror
popf
xchg
xchg
push
xor
jo
or
in
xchg
lock
xchg
int3
fcomp
pop
jns
(bad)
test
adc
enter
adc
sbb
pop
mov
repz
and
dec
fsub
xor
aad
cmp
stc
lds
sbb
test
xor
sub
out
adc
(bad)
and
cmp
ins
jns
lea
xchg
mov
ins
jns
and
jns
hlt
mov
aam
sub
and
in
stos
adc
mov
out
test
adc
ret
aas
ins
sub
cmp
sbb
test
popf
mov
adc
in
je
mov
sbb
jmp
sub
jl
jns
(bad)
test
hlt
pushf
pop
jns
les
sbb
cmc
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
ret
ins
rcl
ins
jns
mov
push
hlt
aam
jns
les
jns
jge
mov
das
loope
sbb
xchg
xchg
xor
pop
jge
les
int3
dec
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
js
in
popf
cs
clc
ins
cdq
jecxz
cmp
or
lahf
mov
pushf
lock
loope
sbb
xchg
xchg
dec
sbb
out
mov
sbb
aad
sbb
ins
loopne
test
sbb
js
in
popf
cs
clc
ins
cdq
jecxz
cmp
inc
dec
ins
jns
mov
ins
jns
ja
jns
in
sbb
fs
sbb
aad
sbb
ins
loopne
test
hlt
mov
sub
sar
hlt
mov
sub
fsubr
or
adc
loope
sbb
xchg
xchg
cmps
pop
jge
cld
sbb
xchg
xchg
dec
sbb
out
mov
cli
hlt
jmp
lock
aad
sbb
ins
loopne
test
sbb
js
in
popf
cs
clc
ins
cdq
jecxz
cmp
ror
jns
mov
cs
clc
ins
cdq
jecxz
cmp
cmps
dec
ins
jns
mov
ins
jns
ja
jns
in
sbb
pushf
cdq
pop
jge
cld
sbb
xchg
xchg
dec
sbb
out
mov
pop
jge
cld
sbb
xchg
xchg
dec
sbb
out
mov
cli
hlt
jmp
lock
aad
sbb
ins
loopne
test
sbb
inc
xchg
add
jns
push
ins
jns
in
or
jns
adc
sbb
sar
adc
sbb
test
je
mov
sbb
jmp
sub
pop
pop
jns
(bad)
test
hlt
pushf
pop
jns
les
sbb
cmc
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
xor
aas
ins
hlt
cdq
jge
xchg
sub
ins
cli
fdiv
mov
fcomp
sbb
data16
jge
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
arpl
aas
ins
hlt
cdq
jge
xchg
sub
ins
cli
fdiv
push
sub
jge
jns
mov
ins
je
mov
sbb
jmp
sub
clc
pop
jns
(bad)
test
popf
mov
push
sbb
xchg
or
lock
sub
cmp
jmp
sub
inc
pop
jns
(bad)
test
hlt
pusha
pop
jns
les
sbb
cmc
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
jns
aas
ins
hlt
cdq
jge
xchg
sub
ins
cli
fdiv
call
ins
jns
mov
ins
je
mov
sbb
jmp
sub
jl
jns
(bad)
test
movs
inc
add
mov
xchg
hlt
stos
xchg
mov
ins
jns
xchg
outs
jns
in
adc
ins
jns
lock
adc
sbb
sar
adc
sbb
test
hlt
add
les
sbb
cmc
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
cmps
sar
hlt
cdq
jge
xchg
sub
ins
cli
fdiv
xchg
scas
cmp
jns
inc
pop
jns
les
sbb
cmc
mov
(bad)
xchg
jl
imul
cdq
jge
xchg
sub
ins
cli
fdiv
outs
sub
ins
rcl
ins
jns
mov
push
hlt
js
jns
les
jns
jge
mov
das
loope
sbb
xchg
xchg
xor
pop
jge
les
nop
push
sbb
out
mov
pop
jge
cld
sbb
xchg
xchg
dec
sbb
out
mov
sbb
outs
adc
ins
adc
in
sbb
in
loopne
xchg
xchg
jge
cld
sbb
xchg
xchg
push
sbb
push
jns
rcl
shr
cmp
jecxz
mov
jge
int3
loopne
xchg
xchg
add
sbb
lods
cmp
jnp
mov
and
mov
sub
pushf
popf
xchg
call
das
dec
ret
out
in
jmp
in
cwde
xchg
fadd
dec
call
div
jno
xchg
int3
push
sbb
out
adc
cmp
hlt
stc
in
loope
xchg
lock
mov
cdq
std
xchg
xchg
hlt
stos
xchg
push
push
ins
jns
xchg
pop
push
sbb
test
adc
sbb
ins
scas
pop
jge
push
aaa
jge
lock
fst
adc
jmp
sub
mov
push
cld
test
xchg
xchg
movs
pop
jge
int
aas
ins
adc
jge
stc
hlt
popf
mov
adc
jg
jns
jns
jns
lock
sub
cmp
push
ins
jns
test
xchg
mov
xchg
xchg
jmp
sub
push
xchg
xchg
(bad)
test
adc
jg
jns
fnsave
test
adc
sbb
jmp
sub
cmp
push
ins
jns
mov
loope
adc
fist
sub
sbb
jmp
sub
push
test
popf
mov
stos
cld
movs
adc
(bad)
mov
sbb
out
les
jo
(bad)
test
popf
mov
loope
movs
adc
jecxz
xor
xchg
sub
xchg
xchg
adc
dec
adc
ins
adc
jmp
sub
test
fdiv
sti
sbb
aad
xchg
xchg
lods
push
sbb
in
sbb
enter
add
aas
ins
adc
cs
clc
nop
xchg
cmp
push
ins
jns
mov
xchg
xchg
jge
push
popf
mov
loope
loopne
xchg
xchg
movs
pop
jge
push
aaa
jge
lock
pop
adc
test
ss
stc
cdq
add
cld
arpl
push
mov
mov
adc
jge
jns
xchg
cmp
sbb
in
xor
jns
jns
lock
sub
movs
push
sbb
push
js
pop
mov
sbb
jmp
sub
sub
xchg
(bad)
test
and
call
hlt
cdq
icebp
xchg
xchg
sub
xchg
xchg
jb
xlat
sbb
ins
adc
fldln2
loope
xchg
hlt
cdq
icebp
xchg
xchg
sub
ins
clc
jmp
pop
jns
lock
sub
enter
add
sbb
loope
xchg
xchg
push
push
ins
jns
jbe
cmp
cmp
pop
mov
xchg
push
sbb
out
mov
xor
jge
xchg
loope
xchg
inc
js
cs
int3
mov
mov
jecxz
test
mul
cld
add
sub
fldln2
loope
xchg
xchg
pop
movs
xchg
xchg
cwde
pop
jns
sub
cdq
loope
xchg
jl
jns
lock
sub
mov
jns
hlt
xchg
js
hlt
stos
adc
(bad)
loope
xchg
xchg
and
jecxz
enter
test
jge
repnz
loope
xchg
xchg
push
jmp
push
jns
and
and
mov
mov
lock
aas
das
dec
div
jno
mov
pop
jge
stos
xchg
ins
sub
sub
sbb
sub
push
push
ins
jns
sub
jbe
test
xor
ins
lock
cmp
movs
mov
mov
pop
mov
mov
sbb
xchg
or
lock
das
test
jge
sub
and
jns
lock
je
xor
sbb
ins
adc
in
jbe
cmp
xchg
test
lock
sub
cmp
das
hlt
adc
sbb
sub
fild
in
movs
jge
jns
xchg
clc
pop
sbb
cmp
mov
cld
stos
jo
jge
adc
sbb
hlt
add
stos
lock
xchg
lock
sbb
pop
adc
loope
sbb
sub
sbb
clc
ins
mov
cmp
int3
xchg
xchg
sub
in
imul
mov
sbb
jg
xchg
mov
ins
jns
mov
movs
mov
lock
(bad)
pop
cmp
addr16
mov
add
ins
jns
pop
arpl
pop
cmp
mov
cwde
sub
lods
inc
jns
cld
fwait
push
inc
jge
hlt
pop
mov
sbb
das
js
jge
dec
pushf
fsubr
jns
push
inc
jns
jb
cmp
(bad)
lods
jp
adc
loope
call
jge
cli
fsub
cmp
sub
ins
jns
sbb
cmp
xchg
out
ins
jns
sub
adc
sub
mov
movs
mov
lock
mov
lds
lahf
xchg
cmp
adc
pop
ins
adc
imul
sbb
ins
adc
push
jns
jnp
imul
hlt
stos
shl
jns
fwait
in
in
stos
adc
dec
call
div
push
dec
jecxz
test
pop
jge
push
xor
ins
adc
dec
in
fcomp
test
xor
ins
adc
dec
inc
out
jge
es
ins
adc
dec
jo
pop
jge
ss
ins
clc
repnz
jns
pop
ins
cs
xchg
dec
xor
sub
jns
pop
ins
cs
xchg
dec
cmp
sub
jns
pop
ins
cs
xchg
dec
mov
cs
fs
jns
pop
ins
cs
xchg
dec
push
je
jns
hlt
pushf
dec
in
hlt
stos
adc
dec
pop
loopne
jge
mov
jge
adc
dec
pushf
in
jge
call
push
dec
jecxz
clc
ficomp
test
sbb
dec
hlt
ficomp
test
test
ins
jns
fwait
in
call
mov
mov
cld
fwait
sub
jge
adc
sbb
cmp
xchg
pop
pop
ins
jns
pop
stc
cmp
push
test
dec
test
pop
jge
inc
cmp
adc
sbb
aas
ins
xchg
ds
ins
jns
inc
repz
push
test
dec
in
fcomp
test
jge
clc
jmp
fs
pop
nop
xchg
push
repz
iret
pop
cmp
or
sub
jbe
xchg
dec
xor
sub
jns
pop
nop
xchg
popa
stc
cmp
iret
jns
cmp
sub
jbe
xchg
dec
add
sub
hlt
mov
jns
pop
nop
xchg
push
repz
iret
add
cli
sub
jbe
xchg
dec
xor
sub
jns
pop
nop
xchg
pop
repz
iret
push
test
sub
jbe
xchg
dec
cmp
sub
jns
hlt
xchg
dec
in
stos
adc
sbb
aas
ins
xchg
jle
ins
jns
popa
repz
push
test
dec
call
cmp
fild
in
lahf
xchg
js
dec
ret
mov
xchg
rcr
je
mov
sbb
sbb
in
nop
xchg
hlt
stos
adc
cmps
cs
xchg
out
test
sub
or
fs
jge
jns
xchg
adc
sbb
in
mov
ins
jns
cmp
sbb
push
jns
dec
pop
out
jge
jns
imul
test
cmp
push
pop
lea
sbb
ins
adc
mov
sbb
lea
push
jge
xchg
and
jns
cmp
cmp
ins
xchg
dec
repz
ins
sub
out
in
sub
jbe
push
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
iret
jge
cmp
lock
xchg
lock
ins
xchg
dec
repz
ins
xchg
cmp
cmp
out
in
sub
jbe
push
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
iret
sbb
outs
adc
ins
adc
pop
ins
adc
ins
adc
push
jns
jge
jno
imul
jbe
xchg
dec
sbb
sub
jns
pop
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jl
sub
jns
sbb
push
je
ins
jns
adc
add
(bad)
aas
ins
adc
iret
add
jmp
sbb
pop
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jl
aas
jg
jns
add
ins
jns
adc
add
(bad)
aas
ins
adc
iret
fnstcw
sbb
cmp
adc
pop
cmp
or
mov
fstp
ins
jns
sub
ins
adc
cmps
cs
jge
call
sub
dec
sub
sub
dec
pop
(bad)
add
jge
jns
push
add
sbb
cmp
xchg
cmps
cs
cmps
mov
sbb
ins
xchg
mov
ins
jns
imul
xchg
dec
repz
ins
xchg
sbb
or
js
(bad)
jns
jge
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
iret
xchg
cmp
jns
adc
push
jns
ds
jns
sub
ins
adc
cs
jge
cmp
xchg
icebp
cmp
push
jns
dec
pop
out
jge
jns
dec
or
pop
jge
push
sbb
adc
push
add
stc
dec
adc
add
(bad)
aas
ins
adc
iret
stc
mov
and
jns
pop
ins
xchg
dec
repz
ins
xchg
sbb
inc
js
jge
inc
je
ins
jns
adc
add
sbb
cmp
shl
cmp
ins
xchg
(bad)
pop
ins
jns
push
repz
push
jns
dec
pop
out
jge
jns
dec
sub
pop
jge
imul
ins
adc
jns
jge
jns
adc
add
(bad)
aas
ins
adc
iret
jmp
in
mov
pop
xchg
in
jbe
xchg
dec
sub
sub
dec
pop
(bad)
clc
sbb
ins
adc
jge
jns
imul
sbb
add
(bad)
aas
ins
adc
cmps
cs
jge
ds
jge
fisubr
cs
jge
dec
sub
sub
dec
pop
(bad)
push
je
ins
jns
adc
add
sbb
cmp
pop
cmps
cs
cmps
mov
sbb
ins
xchg
adc
jns
dec
cmc
cmp
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jl
loope
ins
jns
dec
ins
jns
pop
or
sbb
ins
sub
cmp
push
jns
test
jns
ficomp
jecxz
pop
out
jge
jns
dec
sub
pop
jge
imul
ins
adc
ins
jns
adc
add
(bad)
aas
ins
adc
iret
in
mov
sbb
cmp
adc
pop
sbb
inc
js
jge
call
or
add
ret
aas
ins
adc
jge
jns
xchg
or
sbb
iret
std
mov
sbb
cmp
adc
pop
sbb
out
jns
jge
mov
or
add
mov
cmps
cs
jge
jns
xchg
dec
pop
sbb
iret
mov
xchg
lock
ins
xchg
dec
repz
ins
xchg
sbb
je
xor
mov
sbb
push
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
ins
jns
cwde
dec
jns
fiadd
jge
jns
dec
pop
out
jge
jns
dec
or
pop
jge
popa
jbe
add
sbb
ins
adc
adc
add
ret
aas
ins
adc
jge
jns
xchg
rcr
iret
pop
cmp
sbb
pop
dec
cmp
sbb
pop
cmp
or
add
sbb
adc
add
lds
ins
adc
movs
cs
jge
or
fisubr
jns
es
xchg
hlt
xchg
push
in
stos
xchg
fwait
test
mov
lock
mov
hlt
xchg
dec
in
stos
adc
cmps
cs
or
mov
xchg
(bad)
aas
ins
das
hlt
popa
fwait
xchg
(bad)
test
mov
hlt
xchg
push
in
stos
adc
pop
jno
cmp
xchg
sbb
xchg
cmp
sbb
push
jns
dec
pop
out
jge
jns
imul
test
cmp
push
pop
lea
sbb
ins
adc
mov
sbb
lea
push
jge
xchg
into
pop
ins
jns
cmp
cmp
ins
xchg
dec
repz
ins
sub
out
in
sub
jbe
push
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
iret
jge
cmp
clc
repz
jns
pop
ins
xchg
dec
repz
ins
xchg
cmp
cmp
out
in
sub
jbe
push
ins
je
ins
stc
dec
adc
add
(bad)
aas
ins
adc
iret
sbb
outs
adc
ins
adc
pop
ins
adc
ins
adc
push
jns
jge
jno
imul
jbe
xchg
dec
sbb
sub
jns
pop
ins
xchg
dec
repz
ins
xchg
sbb
or
js
js
or
add
ret
aas
ins
adc
jge
xchg
add
(bad)
loopne
jns
xchg
jne
sbb
add
(bad)
aas
ins
adc
cmp
mov
ins
jns
or
adc
ins
jns
dec
test
pop
jge
out
add
stc
and
into
cmp
sbb
jge
js
xor
sbb
pop
xchg
cmp
jns
imul
aaa
sbb
xchg
icebp
cmp
push
jns
dec
pop
out
jge
jns
dec
or
pop
jge
push
sbb
pop
js
adc
pushf
sub
ins
adc
jge
add
ficomp
ins
adc
jge
jns
dec
or
pop
jge
push
sbb
pop
js
mov
ins
jns
jle
stc
dec
adc
add
(bad)
aas
ins
adc
iret
push
cmp
mov
dec
sub
sub
dec
pop
(bad)
clc
sbb
ins
adc
js
sbb
add
sbb
cmp
dec
cmps
cs
cmps
mov
sbb
ins
xchg
(bad)
arpl
or
cmp
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jl
jnp
jmp
sbb
add
sbb
ins
adc
mov
sbb
mov
pop
jge
jns
fdiv
sbb
pop
loopne
jge
nop
cs
mov
hlt
sub
jecxz
pop
out
jge
jns
dec
sub
pop
jge
imul
jns
jge
sbb
dec
adc
add
(bad)
aas
ins
adc
iret
mov
sbb
cmp
adc
pop
cmp
or
cmp
movs
jge
jns
(bad)
adc
add
(bad)
aas
ins
adc
cmps
cs
jge
pop
add
fimul
jge
dec
sub
sub
dec
pop
(bad)
popf
sbb
jge
jns
arpl
sbb
cmp
bound
cmp
ins
xchg
mul
jns
add
cmp
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jl
loope
ins
jns
sub
jb
sbb
ins
sub
cmp
push
jns
int3
jno
sbb
int3
ficomp
push
jns
dec
pop
out
jge
jns
dec
or
pop
jge
popa
je
ins
jns
pop
inc
adc
adc
add
mov
cmps
cs
jge
jns
xchg
adc
sbb
iret
mov
adc
xchg
dec
repz
ins
xchg
sbb
je
xor
sub
or
add
ret
aas
ins
adc
jge
jns
xchg
push
fs
iret
push
cmp
sbb
pop
dec
cmp
sbb
pop
sbb
or
inc
pop
js
sbb
in
sub
cmp
add
push
jge
xchg
sbb
jns
pop
repz
ins
xchg
dec
repz
ins
xchg
cmp
cmp
jnp
xchg
jns
cmp
jb
sbb
in
sub
cmp
push
jns
mov
jns
fdivp
ficomp
test
out
adc
jmp
in
hlt
hlt
stos
xchg
(bad)
mov
mov
lock
das
dec
ret
movs
jno
sub
hlt
stos
adc
push
jp
jge
jp
jge
jns
sbb
hlt
loopne
jns
hlt
stos
cli
loop
arpl
lea
jns
jge
xchg
xchg
xchg
mov
ins
jns
sbb
jge
jge
lock
mov
pop
xchg
in
xchg
cmp
xchg
cmp
adc
leave
cs
jl
jns
xchg
and
mov
outs
cmp
jns
or
jns
sub
jne
or
fwait
xchg
xchg
test
push
jns
cmp
sub
push
int
jge
js
jge
xchg
arpl
xchg
xchg
dec
xchg
lock
xor
aad
cmp
stc
cld
xor
ins
sub
fist
sbb
mov
xchg
fistp
sbb
add
lods
aas
ins
hlt
cdq
jge
xchg
sub
ins
xchg
out
ins
jns
jb
jns
in
adc
adc
mov
clc
ins
xchg
cmp
gs
jns
lea
xchg
mov
sbb
movs
fdivr
sbb
jmp
sub
fs
sbb
adc
jmp
clc
ins
xchg
cmp
gs
jns
add
ins
lods
aas
ins
hlt
cdq
jge
xchg
sub
ins
lock
jl
lock
adc
sub
cs
clc
ins
xchg
cmp
push
jns
add
xor
jge
xchg
sub
ins
stc
popa
sub
adc
loope
sbb
xchg
xchg
outs
sbb
in
add
jne
push
sbb
jmp
sub
hlt
jnp
sbb
pushf
push
in
hlt
stos
stc
popa
and
adc
loope
sbb
xchg
xchg
outs
sbb
in
add
ja
push
sbb
jmp
sub
sub
sbb
adc
sbb
clc
ins
xchg
cmp
push
jns
add
pop
scas
aas
ins
hlt
cdq
jge
xchg
sub
ins
stc
popa
and
adc
loope
sbb
xchg
xchg
outs
sbb
in
jmp
in
loopne
xchg
xchg
jae
push
sbb
jmp
sub
nop
jp
sbb
ins
adc
add
lds
ins
hlt
cdq
jge
xchg
sub
ins
xchg
lock
xchg
xchg
cmp
add
cmp
inc
adc
sbb
pushf
arpl
pushf
mov
hlt
jmp
lock
and
mov
mov
dec
sub
or
ret
mov
in
xor
mov
xchg
call
js
test
adc
push
xchg
cmp
jge
daa
inc
and
pushf
popf
xchg
push
jno
jge
das
dec
ret
push
pop
inc
in
(bad)
jns
xchg
dec
inc
sbb
add
scas
aas
ins
hlt
cdq
nop
fwait
xchg
sub
ins
xchg
fisub
jns
jb
jns
in
adc
(bad)
out
test
adc
clc
or
pushf
rcr
or
jge
cld
icebp
mov
ins
sbb
in
(bad)
out
test
adc
iret
cs
clc
or
movs
fnstcw
sbb
mov
cdq
cdq
fwait
xchg
hlt
stos
stc
mov
jns
push
sbb
jmp
sub
fdivr
sbb
ror
imul
cdq
nop
fwait
xchg
sub
ins
stc
mov
jnp
push
sbb
jmp
sub
adc
sbb
ror
imul
cdq
nop
fwait
xchg
sub
ins
lock
jl
lock
ror
imul
cdq
nop
fwait
xchg
sub
ins
stc
mov
je
push
sbb
jmp
sub
fs
sbb
ror
imul
cdq
nop
fwait
xchg
sub
ins
stc
mov
jbe
push
sbb
jmp
sub
cwde
js
sbb
pushf
mov
hlt
jmp
lock
ror
imul
cdq
nop
fwait
xchg
sub
ins
stc
mov
jo
push
sbb
jmp
sub
fdivr
sbb
ror
imul
cdq
nop
fwait
xchg
sub
ins
adc
jns
clc
or
xchg
lea
mov
and
je
int3
cmp
test
fsubr
cld
hlt
mov
and
(bad)
rcl
adc
push
jp
jge
xchg
pushf
jbe
jns
lea
mov
and
xor
cmps
push
jns
or
sub
mov
in
xchg
jo
jb
mov
sbb
rcl
cwde
mov
jns
std
rol
adc
push
js
jge
(bad)
xchg
jb
push
sbb
adc
sub
mov
hlt
jmp
lock
jmp
sub
cmp
jmp
sub
cld
je
sbb
test
lahf
rcl
xchg
sub
sbb
(bad)
mov
xchg
mov
imul
lods
xor
(bad)
in
xchg
xchg
cli
and
jge
inc
jl
sub
adc
mov
sbb
jmp
sub
push
pushf
push
in
hlt
stos
adc
mov
sbb
jmp
sub
test
sbb
test
div
add
sbb
hlt
cdq
adc
scas
and
fwait
in
int3
mov
cld
loopne
xchg
xchg
mov
loopne
xchg
xchg
outs
sbb
add
lds
ins
hlt
cdq
adc
fsubr
cld
loopne
xchg
xchg
ins
sbb
loope
loopne
xchg
xchg
clc
nop
and
movs
cs
clc
nop
and
push
jns
mov
jmp
sub
fdivr
sbb
ins
adc
movs
cs
clc
nop
test
cmp
loopne
xchg
jb
sbb
adc
outs
sbb
xor
xchg
hlt
pushf
mov
hlt
jmp
lock
rol
adc
pop
js
jge
int3
in
xchg
xchg
cmp
loope
loopne
xchg
xchg
outs
sbb
out
mov
pop
jge
cld
loopne
xchg
xchg
imul
xchg
ins
sbb
in
enter
neg
cld
enter
pushf
shr
adc
enter
(bad)
imul
enter
lahf
sar
int
pushf
mov
hlt
jmp
lock
xchg
hlt
cdq
adc
hlt
cdq
adc
cli
fsubr
cld
loopne
xchg
xchg
push
jge
cld
aam
xchg
xchg
cmp
scas
outs
ins
jns
shl
ins
cmp
pop
xchg
mov
jge
cld
call
mov
push
loopne
xchg
xchg
(bad)
in
xchg
xchg
push
ins
jns
clc
nop
and
outs
ins
jns
rcl
mov
lock
sub
cdq
test
jecxz
cwde
and
cmp
ins
xchg
inc
outs
ins
jns
xchg
mov
cld
loopne
xchg
xchg
int3
lock
xchg
(bad)
test
xchg
mov
data16
adc
hlt
and
sbb
adc
ins
adc
jns
dec
jns
sbb
test
out
xchg
es
movs
mov
stc
lds
push
jge
ret
ins
sub
xlat
fld
dec
lock
fist
push
jns
jl
data16
dec
imul
xchg
xchg
cmp
sbb
push
js
je
jns
and
xchg
add
xchg
cmp
loop
jns
js
in
jge
jns
jge
mov
test
xchg
xchg
cmp
xchg
jle
ins
jns
sub
cld
fcomp
test
jge
xchg
sub
dec
xchg
dec
ins
sbb
in
xchg
fistp
jns
jns
jns
lock
sub
or
ins
ins
jns
jl
jmp
cdq
int3
add
adc
jecxz
ins
jbe
arpl
sbb
imul
pop
jge
jl
leave
cs
mov
test
or
ret
iret
xor
imul
xchg
jle
test
(bad)
hlt
mov
mov
mov
add
test
jbe
rcr
jecxz
(bad)
stos
push
pop
jl
xchg
mov
imul
lods
xor
sbb
fiadd
retf
xchg
js
clc
fist
mov
ins
jns
clc
(bad)
xchg
jecxz
ins
xchg
cmp
jns
mov
bound
jecxz
stos
cld
mov
xchg
xchg
lock
sub
cmp
loope
adc
ins
sbb
in
mov
ins
jns
jge
cld
adc
enter
sub
xor
jns
lock
sub
cmp
(bad)
adc
jecxz
test
jbe
loope
adc
push
hlt
dec
arpl
cld
lahf
mov
jge
adc
in
int
sbb
stos
mov
cmp
mov
ror
jecxz
loope
sbb
ins
jns
mov
fdiv
cmp
add
les
ins
adc
jns
or
sbb
mov
(bad)
hlt
scas
hlt
mov
lock
aas
retf
rol
ins
jns
sbb
adc
in
int
sbb
stos
mov
mov
ins
jns
ror
pushf
stos
cs
pop
ins
jns
mov
fdiv
cmp
add
les
ins
adc
sub
jns
(bad)
test
xchg
rcl
jecxz
loope
fisubr
ins
jns
mov
lock
fist
ins
adc
push
adc
repnz
in
test
outs
adc
ins
sub
shl
sbb
sub
jecxz
ins
jns
cmp
sub
cmp
jae
jns
lock
jecxz
in
inc
sbb
jge
or
sub
mov
sub
jbe
jge
jns
cmp
sub
add
cld
aas
ins
xchg
test
mul
jns
mov
ins
jns
cmp
sub
cmp
ins
ins
jns
lock
jecxz
in
inc
sbb
jge
or
sub
mov
sub
jbe
jge
jns
cmp
sub
add
cld
aas
ins
xchg
test
adc
xchg
test
jge
ror
ins
jns
sahf
in
lods
nop
xchg
xchg
and
xchg
js
mov
cld
fcomp
pop
jge
cmp
lock
arpl
adc
in
enter
sbb
push
jns
les
sbb
sub
sbb
stos
cmp
jge
jns
pop
ins
xchg
mov
jns
cmp
sbb
in
xor
cmp
mov
sbb
loope
mov
jge
adc
pop
dec
cmp
sbb
ins
adc
ins
adc
ins
adc
mov
sbb
lea
hlt
js
jns
fisubr
jge
in
lods
aas
ins
adc
ins
xchg
pop
jae
jns
jge
fld
jns
or
jge
inc
sbb
ins
stc
outs
push
add
les
ins
xchg
push
jo
jns
add
adc
lock
rol
fimul
jge
xchg
fidiv
jns
jl
xchg
mov
xchg
jge
jge
lock
fcomip
jmp
sub
cmp
leave
cs
add
cmp
add
sbb
in
xchg
xchg
jmp
xchg
or
cmp
fdivr
sbb
stos
jl
leave
cs
jge
jns
jmp
mov
(bad)
hlt
scas
hlt
cdq
aad
xchg
sub
add
ins
cmp
ins
xchg
adc
jns
xchg
in
sbb
loope
mov
xchg
xchg
adc
push
jns
jge
xchg
adc
sub
adc
jns
pop
ins
adc
jl
jns
jl
dec
sbb
sub
jns
xchg
je
pop
cdq
cmp
cmps
jae
jns
mov
loope
clc
sub
ins
adc
ins
adc
sub
sbb
gs
inc
mov
imul
push
jnp
jge
das
dec
ret
dec
sbb
ins
jns
cmp
in
arpl
mov
arpl
sbb
jge
nop
(bad)
jne
jns
ins
ins
jns
jb
or
jge
inc
(bad)
ins
jns
push
push
nop
shl
inc
push
js
jge
std
bound
cmc
loopne
jns
(bad)
push
adc
stc
mov
mov
aas
ins
xchg
adc
push
popf
jecxz
in
lock
xchg
mov
ins
xchg
xchg
dec
popf
jecxz
out
mov
loope
xchg
hlt
cdq
movs
xchg
xchg
sub
xchg
xchg
ins
popa
jns
je
jbe
clc
ins
jns
lock
sub
dec
sub
pop
jge
mov
jge
jo
or
repnz
popf
xchg
xchg
push
jmp
cli
hlt
jns
in
int3
adc
jecxz
push
test
clc
adc
jecxz
out
xchg
sbb
stc
lods
loope
xchg
push
mov
mov
repnz
cdq
xchg
xchg
push
jmp
sub
add
adc
sbb
pop
cmp
mov
ins
jns
mov
sbb
out
inc
js
cs
jb
mov
js
cs
adc
fwait
dec
daa
jge
cli
cmp
fdivr
sbb
in
inc
ins
leave
cs
or
hlt
add
ins
leave
cs
jb
cmc
sbb
xchg
adc
adc
addr16
jns
test
xchg
mov
ins
inc
pop
jne
cld
jnp
ins
jns
jge
jle
jge
nop
inc
jp
jns
jge
cmp
sub
jne
or
xchg
js
sbb
aam
xor
mov
hlt
jmp
lock
cmp
hlt
jmp
clc
jmp
inc
jns
inc
imul
pop
inc
imul
test
or
cmp
in
mov
inc
imul
mov
inc
imul
inc
imul
cmps
push
sbb
ins
xchg
test
cdq
test
add
or
imul
adc
imul
adc
xchg
or
xchg
aam
sbb
add
jecxz
ins
xchg
test
adc
shl
ins
jns
call
xchg
mov
xchg
xchg
leave
cdq
loope
xchg
jns
clc
mov
jecxz
cmp
xchg
jno
jns
clc
test
ins
jns
and
sbb
xchg
push
in
stos
adc
jge
jns
clc
ins
xchg
cmp
xchg
icebp
cmp
in
les
or
pop
ins
adc
cs
jge
cs
jge
xchg
xchg
icebp
cmp
test
in
xchg
lock
jmp
icebp
cdq
mov
(bad)
loope
xchg
jns
inc
sbb
pop
jge
jbe
out
jns
adc
loope
sbb
sbb
aas
ins
xchg
call
xchg
sub
jecxz
in
inc
sbb
test
add
ins
adc
cs
loopne
xchg
cmp
loop
xchg
xchg
sub
push
jns
jge
dec
les
ins
adc
xchg
dec
cwde
fsubr
jns
or
sbb
or
aam
and
mov
hlt
jmp
lock
jmp
sub
cmp
movs
cs
clc
cdq
test
cmp
jno
jns
mov
ins
jns
clc
ins
xchg
cmp
popa
stc
cmp
in
les
or
pop
ins
adc
movs
cs
jge
cs
jge
xchg
popa
stc
cmp
test
xchg
jl
xchg
(bad)
movs
xchg
js
or
pop
jbe
push
jns
call
ds
jns
dec
jo
pop
jge
mov
jge
nop
fnstsw
jns
clc
ins
xchg
sub
(bad)
sbb
xchg
xchg
adc
and
pop
ins
adc
stos
cs
jge
call
stc
cmp
test
sbb
stc
cdq
jge
xchg
jl
cld
sbb
xchg
xchg
ins
push
rcl
loope
sbb
lock
sub
cmp
jmp
sub
call
test
je
ins
jns
lock
sub
dec
in
fcomp
test
mov
jge
pop
jbe
push
jns
mov
ins
xchg
jbe
ins
jns
dec
in
fcomp
test
jge
nop
adc
xchg
adc
xchg
xchg
mov
adc
sbb
jmp
sub
push
addr16
(bad)
test
je
ins
jns
lock
sub
dec
inc
out
jge
out
adc
ins
stc
mov
jge
pop
jbe
push
jns
aad
cmp
ins
xchg
push
je
jns
dec
inc
out
jge
(bad)
adc
ins
nop
mov
test
xchg
mov
xchg
xchg
mov
adc
sbb
jmp
sub
mov
test
je
ins
jns
lock
sub
dec
inc
out
jge
push
adc
ins
stc
mov
jge
pop
jbe
push
jns
push
mov
xchg
xchg
jns
dec
inc
out
jge
ds
ins
nop
and
lock
xchg
sub
jecxz
in
inc
sbb
test
cmp
ins
adc
push
jns
sbb
sbb
cmp
xchg
push
jne
jns
jns
jns
mov
xchg
jns
inc
arpl
cdq
adc
sbb
dec
adc
inc
adc
jge
jns
push
mov
xchg
cmp
jns
dec
inc
out
jge
stos
sbb
nop
fnstcw
jns
clc
xchg
xchg
sub
adc
movs
hlt
xchg
push
in
stos
hlt
cdq
jl
xchg
sub
xchg
xchg
mov
jmp
xchg
mov
sbb
out
mov
sbb
loope
sbb
sbb
cmp
xchg
pop
jp
jns
shr
sub
ins
adc
push
jns
shr
sbb
pop
pop
cmp
inc
jp
jns
xor
sbb
jmp
jns
inc
arpl
cdq
adc
sbb
dec
adc
inc
adc
jge
jns
xchg
mov
xchg
jb
ins
jns
dec
dec
out
jge
bound
jge
nop
adc
jns
clc
xchg
xchg
sub
jl
xchg
(bad)
movs
xchg
js
or
xchg
adc
aad
sub
cmp
mov
push
les
ins
hlt
cdq
mov
jbe
jge
cli
fsubr
mov
jmp
repnz
xchg
xchg
xchg
hlt
stos
adc
ins
adc
pop
ins
adc
add
cmp
mov
jns
clc
cwde
xchg
add
jbe
push
jns
enter
add
or
sbb
xchg
jo
loopne
jge
mov
cmp
sbb
xchg
call
sub
cmp
(bad)
(bad)
js
jns
jge
cld
in
adc
in
popf
cs
enter
add
mov
xchg
js
or
mov
adc
loope
xchg
sub
enter
add
lock
sub
add
cld
aas
ins
xchg
xchg
adc
sbb
xchg
int3
call
ins
push
cmp
mov
jge
jns
jns
jns
jge
jns
jge
adc
push
(bad)
loop
xchg
lock
mov
cdq
cdq
xchg
xchg
imul
popf
loope
xchg
lock
outs
adc
ins
xchg
xchg
fdivr
jge
je
fild
jns
mov
cmp
in
jbe
loope
in
adc
mov
mov
jge
jge
jns
clc
pushf
test
cmp
adc
xchg
int3
call
movs
push
(bad)
loop
xchg
xchg
outs
jle
jns
js
int
jge
jns
jge
xor
adc
cmp
add
test
ins
adc
sti
loopne
jecxz
test
jbe
xchg
dec
adc
sub
jns
(bad)
sbb
fwait
sahf
xchg
clc
mov
ins
xchg
or
sbb
jecxz
pusha
xchg
test
inc
movs
mov
stc
inc
repnz
lock
xchg
lock
sub
jge
jns
jb
test
jge
cli
popa
ins
gs
mov
pop
std
mov
sbb
cmp
xchg
cmp
xchg
test
lock
xchg
cmp
stc
mov
jns
jns
dec
in
fcomp
sbb
dec
inc
out
jge
push
sbb
inc
sub
cmp
xchg
popa
stc
cmp
in
jmp
in
call
popa
stc
cmp
xchg
push
repz
push
dec
xor
sub
dec
cmp
sub
jns
inc
pop
pop
cmp
or
push
or
jbe
dec
hlt
loopne
jns
ins
push
pop
cmp
add
push
or
imul
hlt
mov
sbb
gs
mov
pop
(bad)
in
sub
loopne
jns
jnp
fs
sub
daa
dec
in
fcomp
sbb
pusha
push
out
jge
dec
xor
sub
fs
sub
data16
push
dec
add
sub
imul
jns
dec
inc
out
jge
jg
pusha
adc
pop
jge
dec
cmp
sub
fs
sub
daa
dec
call
jg
pusha
jo
pop
jge
mov
or
pusha
das
dec
xchg
sbb
jge
jg
mov
xor
inc
mov
imul
ins
jns
jge
pop
adc
ins
jns
jge
pop
or
cs
in
ins
jns
jge
pop
or
ins
jns
jge
pop
cmp
cs
in
ins
jns
jge
pop
xor
ins
jns
jge
pop
sub
cs
in
ins
jns
jge
pop
sub
ins
jns
jge
lock
sub
xchg
mov
mov
dec
adc
hlt
xchg
cmp
jl
jge
mov
adc
mov
in
inc
cmp
xchg
xchg
add
arpl
sbb
sbb
xchg
pop
imul
sbb
dec
or
fidivr
jns
jl
adc
xchg
es
xor
jns
push
ins
imul
pop
xchg
xor
or
cmp
mov
jecxz
xchg
mov
and
cmp
repnz
pop
push
scas
xchg
cmp
fidiv
jns
jge
pop
pop
mov
jns
in
ins
jns
jge
pop
pop
mov
jns
in
ins
jns
jge
pop
push
mov
jns
in
ins
jns
jge
pop
push
mov
jns
in
ins
jns
jge
pop
dec
mov
jns
in
ins
jns
jge
pop
dec
mov
jns
in
ins
jns
jge
pop
inc
mov
jns
in
ins
jns
jge
pop
inc
mov
jns
in
ins
jns
jge
pop
jl
cs
in
ins
jns
jge
pop
js
cs
in
ins
jns
jge
pop
je
cs
in
ins
jns
jge
pop
jo
cs
in
ins
jns
jge
pop
ins
mov
jns
in
ins
jns
jge
pop
push
in
ins
jns
jge
pop
mov
jns
in
ins
jns
jge
pop
pusha
mov
jns
in
ins
jns
jge
pop
pushf
mov
jns
in
ins
jns
jge
pop
cwde
mov
jns
in
ins
jns
jge
pop
xchg
mov
jns
in
ins
jns
jge
pop
nop
mov
jns
in
ins
jns
jge
pop
mov
ins
jns
jge
pop
mov
ins
jns
jge
pop
test
ins
jns
jge
pop
or
jns
jge
pop
mov
in
ins
jns
jge
pop
mov
in
ins
jns
jge
pop
mov
cs
in
ins
jns
jge
pop
mov
cs
in
ins
jns
jge
pop
lods
mov
jns
in
ins
jns
jge
pop
test
cs
in
ins
jns
jge
pop
movs
mov
jns
in
ins
jns
jge
pop
mov
in
ins
jns
jge
pop
fmul
ins
jns
jge
pop
fmul
ins
jns
jge
pop
aam
cs
in
ins
jns
jge
pop
ror
ins
jns
jge
pop
int3
mov
jns
in
ins
jns
jge
pop
enter
mov
ins
jns
jge
pop
les
ins
jns
jge
pop
ror
jns
jge
pop
cld
mov
jns
in
ins
jns
jge
pop
clc
mov
jns
in
ins
jns
jge
pop
hlt
mov
jns
in
ins
jns
jge
pop
lock
jns
in
ins
jns
jge
pop
in
cs
in
ins
jns
jge
pop
loopne
cs
in
ins
jns
jge
pop
sbb
cs
in
ins
jns
jge
pop
sbb
ins
jns
jge
pop
adc
cs
in
ins
jns
jge
pop
adc
ins
jns
jge
pop
or
cs
in
ins
jns
jge
pop
or
ins
jns
jge
pop
add
cs
in
ins
jns
jge
pop
add
ins
jns
jge
pop
cmp
cs
in
ins
jns
jge
pop
cmp
ins
jns
jge
pop
xor
cs
in
ins
jns
jge
pop
xor
ins
jns
jge
pop
sub
cs
in
ins
jns
jge
pop
sub
ins
jns
jge
pop
and
cs
in
ins
jns
jge
pop
and
ins
jns
jge
pop
pop
mov
jns
in
ins
jns
jge
pop
pop
mov
jns
in
ins
jns
jge
pop
push
mov
jns
in
ins
jns
jge
pop
push
mov
jns
in
ins
jns
jge
pop
dec
mov
jns
in
ins
jns
jge
pop
dec
mov
jns
in
ins
jns
jge
pop
inc
mov
jns
in
ins
jns
jge
pop
inc
mov
jns
in
ins
jns
jge
pop
jl
cs
in
ins
jns
jge
pop
js
cs
in
ins
jns
jge
pop
ins
mov
jns
in
ins
jns
jge
pop
push
in
ins
jns
jge
pop
mov
jns
in
ins
jns
jge
pop
pusha
mov
jns
in
ins
jns
jge
pop
pushf
mov
jns
in
ins
jns
jge
pop
nop
mov
jns
in
ins
jns
jge
pop
mov
ins
jns
jge
pop
mov
ins
jns
jge
pop
test
ins
jns
jge
pop
or
jns
jge
pop
mov
in
ins
jns
jge
pop
mov
in
ins
jns
jge
pop
mov
cs
in
ins
jns
jge
pop
mov
cs
in
ins
jns
jge
pop
movs
mov
jns
in
ins
jns
jge
pop
mov
in
ins
jns
jge
pop
fmul
ins
jns
jge
pop
fmul
ins
jns
jge
pop
aam
cs
in
ins
jns
jge
pop
ror
ins
jns
jge
pop
int3
mov
jns
in
ins
jns
jge
pop
enter
mov
ins
jns
jge
pop
les
ins
jns
jge
pop
ror
jns
jge
pop
cld
mov
jns
in
ins
jns
jge
pop
clc
mov
jns
in
ins
jns
jge
pop
hlt
mov
jns
in
ins
jns
jge
pop
lock
jns
in
ins
jns
jge
pop
in
mov
jns
in
ins
jns
jge
pop
call
in
ins
jns
jge
pop
in
cs
in
ins
jns
jge
pop
loopne
cs
in
ins
jns
.byte
