es
add
add
dec
jge
add
add
add
add
nop
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
add
sub
add
jle
add
add
pusha
jle
add
add
xchg
add
jle
add
add
fdivr
add
jle
add
jg
add
add
and
add
cs
add
add
cmp
add
add
bound
add
add
xor
add
jg
add
add
mov
jg
add
jg
add
jg
add
add
pop
add
adc
add
and
add
mov
add
pop
add
and
add
add
add
int3
add
adc
add
call
add
add
sbb
add
fadd
add
cld
add
or
add
sbb
add
cmp
add
add
add
add
outs
add
add
add
mov
add
mov
add
mov
add
add
add
imul
add
sbb
add
add
imul
xor
add
dec
add
push
add
pop
add
outs
add
js
add
mov
add
add
add
add
add
add
jno
inc
add
inc
inc
add
add
add
add
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
add
add
dec
inc
add
add
add
inc
add
add
add
adc
push
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
add
adc
cmovge
add
add
pop
adc
add
add
push
dec
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
repz
inc
add
push
inc
add
add
add
add
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
push
inc
add
push
inc
add
add
add
adc
rcl
add
add
add
adc
push
add
add
inc
add
inc
add
add
push
inc
add
push
inc
add
add
add
add
add
add
icebp
pop
inc
add
pop
inc
add
add
add
adc
or
add
ds
inc
add
inc
add
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
arpl
add
add
outs
arpl
add
add
push
add
add
inc
add
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
bound
pop
arpl
add
or
dec
fs
add
add
add
add
dec
addr16
add
inc
add
add
add
adc
or
fs
add
fs
add
inc
add
inc
add
gs
add
inc
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
push
add
imul
add
add
add
add
add
add
fisubr
add
add
add
add
add
add
sub
ins
inc
add
add
add
inc
add
add
add
inc
add
push
add
push
add
imul
imul
imul
imul
ins
inc
add
inc
add
add
add
add
mov
outs
inc
add
add
add
add
add
ins
inc
add
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
add
add
add
add
add
in
inc
add
inc
add
add
add
adc
add
add
add
outs
inc
add
outs
inc
add
add
outs
inc
add
jo
add
jo
add
inc
add
inc
add
add
add
add
add
add
bnd
add
add
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
add
add
xor
add
cmp
add
add
add
or
popa
mov
stos
shl
cmp
jbe
mov
add
add
add
add
add
xor
xor
xor
xor
xor
add
add
dec
xor
add
mov
dec
inc
test
push
ror
in
xchg
cmp
mov
cmp
xor
or
stos
add
xchg
adc
add
inc
add
add
add
ins
xor
or
mov
mov
in
into
repz
add
inc
add
add
ins
xor
add
add
dec
add
add
add
push
add
inc
add
add
adc
add
or
push
imul
add
add
sldt
ins
je
add
sldt
inc
dec
test
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
into
rcr
lods
scas
mov
mov
inc
xor
xor
sub
sub
sub
sub
xor
xor
inc
inc
pop
pop
arpl
into
rcr
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fidiv
jae
xor
or
dec
add
arpl
add
add
add
add
add
add
add
or
or
sbb
dec
inc
dec
jae
jnp
mov
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
mov
add
jae
add
test
add
mov
add
test
add
cmp
add
sbb
sbb
dec
xchg
xchg
pushf
(bad)
retf
into
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fmulp
rcr
arpl
add
jnp
add
mov
add
test
add
mov
add
jnp
add
jnp
add
or
or
xor
test
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
faddp
iret
(bad)
inc
dec
mov
add
mov
add
xchg
add
mov
add
pushf
add
mov
add
mov
add
test
add
add
sub
jnp
mov
retf
into
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fimul
xchg
add
pushf
add
xchg
add
mov
add
pushf
add
pushf
add
movs
add
pushf
add
movs
add
pushf
add
movs
add
xchg
add
pushf
add
mov
add
mov
add
add
add
xor
mov
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
imul
add
add
xchg
add
pushf
add
pushf
add
lods
add
movs
add
lods
add
movs
add
lods
add
movs
add
movs
add
pushf
add
pushf
add
mov
add
mov
add
add
add
inc
lods
scas
mov
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
ficomp
add
pushf
add
xchg
add
movs
add
pushf
push
dec
(bad)
push
push
into
add
movs
add
movs
add
mov
add
add
add
add
mov
add
test
add
adc
imul
(bad)
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fisub
and
add
movs
sub
mov
(bad)
(bad)
(bad)
(bad)
dec
into
add
lods
add
lods
add
mov
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
and
add
xchg
add
xchg
add
xchg
add
mov
add
cmp
into
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
fiadd
add
pushf
add
lods
add
lods
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
add
mov
add
add
add
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
add
xchg
add
pop
adc
jnp
test
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
and
mov
add
add
jns
(bad)
iret
lods
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
into
add
mov
add
add
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
mov
add
movs
add
xchg
add
pushf
add
mov
add
dec
dec
push
mov
(bad)
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
fidiv
lods
add
add
add
retf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
add
mov
push
(bad)
(bad)
sti
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jmp
jnp
pushf
add
lods
add
mov
add
add
cmp
xor
pushf
mov
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fidiv
into
add
add
add
add
into
add
(bad)
push
push
imul
lods
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
into
push
push
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jecxz
jae
xchg
add
mov
add
add
mov
add
add
add
sbb
xchg
xchg
pushf
into
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
ficom
into
add
add
add
add
add
(bad)
add
fiadd
add
arpl
into
retf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
(bad)
jnp
pushf
add
mov
add
add
mov
mov
mov
add
add
adc
test
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fisubr
sub
or
mov
add
add
add
add
add
(bad)
add
(bad)
add
(bad)
imul
ffreep
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
fimul
add
into
add
mov
into
add
mov
add
add
or
mov
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
ficomp
sbb
or
(bad)
or
into
or
(bad)
or
fimul
or
add
add
fiadd
add
add
fiadd
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
(bad)
add
into
add
into
add
add
add
mov
mov
add
or
test
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fimul
or
or
or
into
or
fimul
or
or
or
fiadd
add
add
(bad)
add
fiadd
add
inc
dec
into
(bad)
sti
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
into
add
into
add
into
add
(bad)
add
into
add
add
add
add
add
add
adc
and
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
ficomp
sbb
adc
(bad)
or
or
or
or
or
out
add
out
add
add
fimul
(bad)
imul
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
out
add
add
(bad)
add
(bad)
add
add
add
add
add
add
adc
xor
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fisubr
xor
adc
(bad)
adc
(bad)
adc
out
adc
out
adc
test
out
add
fidivr
cmp
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fiadd
add
add
(bad)
add
or
(bad)
or
(bad)
or
mov
(bad)
or
mov
add
and
sub
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
ficom
ficom
adc
adc
sbb
neg
sbb
sbb
dec
or
add
not
fdivp
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
out
into
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
out
add
fiadd
add
or
or
fimul
or
or
mov
add
cmp
lods
mov
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fisubr
ficomp
sbb
sbb
sbb
and
call
sbb
add
dec
dec
out
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
test
add
fiadd
add
jae
mov
iret
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
out
add
out
or
out
or
or
or
or
add
arpl
into
rcr
into
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
fidiv
out
and
and
and
and
arpl
out
into
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
jnp
movs
add
out
add
add
test
jnp
(bad)
lods
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
out
add
adc
out
adc
fimul
or
or
sbb
arpl
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
sub
and
sub
xor
jmp
sub
jnp
pushf
out
mov
(bad)
(bad)
out
jecxz
jae
pushf
add
out
add
add
out
add
out
add
out
add
ficomp
jae
ret
movs
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
movs
jnp
(bad)
adc
not
adc
adc
adc
(bad)
or
dec
dec
arpl
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
fiadd
xor
inc
(bad)
cmp
cmp
push
pushf
out
(bad)
out
(bad)
jae
movs
add
inc
add
add
test
out
add
test
out
push
jae
mov
arpl
adc
sbb
call
sbb
sbb
out
adc
or
xchg
call
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fidiv
xor
sub
inc
inc
dec
dec
dec
jmp
test
mov
and
adc
dec
or
add
add
add
add
or
dec
or
sbb
jmp
arpl
xchg
and
jmp
and
and
and
neg
sbb
adc
ficomp
jae
iret
(bad)
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fisub
(bad)
cmp
dec
jmp
jmp
jmp
call
call
inc
push
xor
and
call
sbb
sbb
call
sbb
and
cmp
push
xor
cmp
cmp
(bad)
cmp
xor
jmp
sub
and
sbb
div
xor
mov
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
jnp
out
sub
inc
call
push
(bad)
jnp
dec
jnp
jmp
call
dec
inc
dec
dec
call
call
call
dec
inc
(bad)
cmp
jmp
sub
and
call
and
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fisub
out
sub
push
push
jmp
inc
pushf
call
dec
jnp
(bad)
jnp
push
push
jmp
jmp
call
dec
push
xor
sub
and
(bad)
mov
mov
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
jae
out
sub
dec
jmp
inc
lods
cmps
jmp
jmp
dec
jae
jmp
call
dec
(bad)
cmp
jmp
and
xor
mov
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
ficomp
dec
dec
jmp
inc
movs
sahf
jmp
call
jnp
push
call
call
(bad)
cmp
call
sbb
arpl
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fidiv
out
cmp
inc
inc
jmp
push
dec
test
jae
jmp
call
(bad)
cmp
sub
call
out
mov
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fisubr
out
arpl
push
push
call
dec
call
call
imul
out
xchg
xchg
out
iret
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
into
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
(bad)
xlat
fmulp
rcl
add
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
(bad)
xlat
fiadd
add
sub
sbb
adc
add
add
inc
add
jmp
inc
add
add
or
inc
outs
ins
ins
popa
outs
xor
add
add
enter
add
add
add
add
inc
cmp
add
add
add
gs
xor
add
sbb
into
les
mov
repnz
fidiv
mov
mov
loopne
xlat
or
adc
add
add
add
add
add
add
gs
xor
add
pop
add
in
into
repz
sub
js
xor
xor
xor
aaa
xor
add
pop
or
add
add
pop
add
add
add
add
stc
mov
dec
inc
test
push
add
add
add
add
add
add
int3
pop
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
xor
sbb
inc
add
add
add
sub
add
and
add
add
aam
and
shr
add
inc
add
popa
add
add
je
jne
add
outs
add
add
cmp
cmp
pop
add
xor
add
push
add
add
inc
add
add
add
cmp
pop
add
add
cmp
pop
add
add
add
push
cmp
pop
add
add
cmp
pop
add
add
add
jo
inc
add
add
add
inc
add
add
add
aaa
inc
add
add
add
add
add
add
add
inc
add
add
add
xor
push
inc
xor
bound
arpl
cs
ins
add
add
sub
or
add
add
in
sub
adc
xor
add
(bad)
dec
add
add
add
add
add
add
add
add
sub
cmp
inc
add
add
add
add
test
add
test
add
mov
add
add
jae
xor
xor
add
add
add
add
add
loopne
inc
add
inc
add
or
add
nop
inc
add
adc
inc
add
sub
push
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
xor
or
add
mov
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
mov
push
cs
add
xchg
inc
add
add
add
dec
sbb
push
add
add
add
add
add
mov
xor
inc
add
add
add
xor
(bad)
(bad)
(bad)
inc
add
add
add
add
bound
add
xor
(bad)
(bad)
(bad)
inc
sbb
js
add
xor
add
add
inc
das
inc
add
bound
add
add
add
add
adc
jl
add
xor
add
add
les
inc
add
bound
add
add
add
adc
add
add
add
add
inc
add
bound
add
add
add
adc
test
add
mov
add
add
pop
add
add
add
xor
cmc
xor
add
inc
add
xor
sbb
inc
add
xor
xor
inc
xor
push
xor
pop
xor
push
inc
add
inc
add
add
mov
inc
add
sub
inc
add
inc
add
inc
add
xor
add
add
cmp
inc
add
sub
inc
add
add
inc
add
inc
add
inc
add
sub
inc
add
inc
add
inc
add
inc
add
sub
inc
add
inc
add
inc
add
add
sub
inc
add
inc
add
inc
add
xor
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
sbb
sub
data16
jne
stc
or
add
add
add
loopne
inc
add
add
add
add
add
add
add
add
sub
(bad)
(bad)
mov
add
add
add
add
inc
add
inc
add
add
add
(bad)
(bad)
jmp
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
adc
add
adc
add
add
add
add
add
jo
and
inc
outs
jb
xor
add
dec
outs
fs
xor
jae
xor
xor
mov
add
dec
fsub
dec
xchg
cmp
mov
hlt
or
fmul
ins
mov
test
mov
dec
inc
test
push
xor
movs
dec
mov
test
xor
or
stos
add
xchg
inc
outs
jb
add
add
cs
push
add
xor
cmp
outs
addr16
ins
and
ins
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
lock
add
add
push
add
add
add
add
xor
cmp
inc
add
inc
add
xchg
sbb
ror
xor
or
stos
add
xchg
push
imul
add
add
fimul
xor
or
stos
add
xchg
dec
popa
bound
xor
add
gs
xor
add
dec
lods
xor
or
stos
add
xchg
inc
outs
ins
ins
popa
outs
xor
add
add
add
add
jb
gs
xor
add
add
adc
add
inc
gs
jns
je
ins
inc
imul
jns
add
xor
shl
inc
add
add
cmp
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
jae
gs
ins
xor
cs
ins
add
add
add
inc
gs
outs
ins
fs
popa
je
inc
add
add
sbb
inc
add
inc
add
add
inc
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
ins
inc
js
arpl
gs
add
add
inc
add
inc
add
add
push
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
nop
add
add
add
add
xor
add
inc
add
add
add
add
add
add
add
add
push
add
jb
imul
imul
add
imul
push
add
jae
je
add
dec
add
push
add
je
add
add
sbb
add
ja
jae
arpl
jb
imul
add
push
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
imul
add
jo
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
jb
popa
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
jne
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
cmp
push
add
xor
and
push
add
xor
add
add
dec
ss
add
add
add
add
add
add
add
add
jae
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
jb
jp
imul
add
sbb
inc
add
add
add
sub
add
add
add
add
add
or
adc
add
add
adc
add
or
or
add
add
or
add
adc
add
inc
gs
outs
fs
gs
imul
add
shl
add
add
add
pop
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
xor
shl
add
add
push
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
push
popa
je
dec
popa
ins
gs
add
add
xor
adc
inc
add
add
je
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jne
jb
outs
je
jb
arpl
jae
add
shl
add
add
add
adc
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jne
jb
outs
je
push
dec
add
shl
add
add
mov
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jb
outs
jb
je
inc
ins
popa
jae
add
add
shl
add
cmp
add
add
cwde
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
push
push
jb
outs
jb
je
add
add
xor
inc
cmp
add
add
movs
xchg
inc
add
or
je
jmp
push
mov
call
jmp
add
add
gs
ins
gs
push
add
add
shl
add
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
jne
jb
outs
je
push
add
add
shl
add
cmp
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
je
push
jb
arpl
jae
add
shl
add
cmp
add
add
enter
mov
or
je
jmp
push
mov
call
jmp
add
add
or
push
add
add
xor
pop
add
add
add
add
dec
add
dec
add
add
add
add
sub
add
inc
add
je
inc
add
ins
add
add
inc
add
add
imul
je
add
add
add
or
add
inc
add
push
add
add
add
add
add
add
ja
add
add
add
jns
add
add
add
xor
add
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
pop
pop
jbe
popa
dec
xor
add
add
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
push
je
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
push
popa
jb
add
add
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
pop
pop
jbe
popa
dec
bound
popa
jb
pop
pop
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
jne
xor
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
pop
pop
jbe
popa
push
gs
bound
jb
push
outs
ins
outs
arpl
add
jbe
popa
dec
gs
inc
popa
arpl
popa
jb
add
add
jbe
popa
dec
outs
push
popa
jb
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
add
add
pop
pop
jbe
popa
inc
outs
jb
popa
arpl
popa
jb
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
bound
gs
fs
data16
add
add
xchg
inc
add
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
je
push
popa
jb
popa
ins
add
pop
pop
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
dec
outs
push
je
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
je
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
popa
jb
gs
popa
jb
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
push
outs
push
outs
imul
add
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
push
je
dec
outs
jbe
add
add
push
add
add
dec
add
push
add
inc
add
add
adc
add
and
das
add
and
add
ins
add
add
add
add
add
add
add
add
jbe
popa
push
arpl
je
jne
je
add
add
jbe
popa
push
arpl
je
jne
je
outs
jae
add
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
arpl
imul
add
add
inc
add
(bad)
(bad)
inc
add
add
sub
(bad)
inc
add
add
add
add
add
inc
aas
inc
add
add
add
ds
add
ds
add
ds
add
add
add
(bad)
inc
add
add
ds
add
(bad)
(bad)
inc
add
add
inc
add
xor
fcom
inc
add
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
mov
push
lea
push
call
push
call
call
mov
push
lea
push
call
lea
call
mov
mov
mov
mov
push
lea
push
call
mov
mov
lea
mov
mov
push
lea
push
lea
push
push
lea
push
call
push
lea
push
lea
push
call
push
call
push
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
lea
mov
mov
push
lea
push
lea
push
call
mov
mov
lea
push
lea
push
call
mov
lea
call
movsx
test
je
mov
mov
push
push
call
mov
lea
call
mov
mov
mov
mov
lea
lea
call
push
jmp
mov
and
test
je
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
push
push
lea
push
call
lea
push
mov
add
push
call
lea
call
mov
push
push
lea
push
call
lea
push
mov
add
push
call
lea
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
mov
lea
push
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
fstp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
push
push
call
mov
lea
call
lea
call
mov
mov
push
lea
push
call
push
push
push
push
push
call
mov
call
mov
push
lea
push
call
mov
mov
lea
call
mov
cmp
jne
cmp
je
mov
push
mov
push
push
call
mov
lea
call
push
push
call
sub
jo
push
mov
push
call
mov
mov
lea
mov
add
call
lea
call
lea
call
jmp
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
mov
lea
mov
add
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
mov
add
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
mov
add
push
call
mov
lea
call
push
push
call
neg
sbb
inc
neg
mov
lea
call
movsx
test
je
mov
mov
add
push
lea
push
call
push
call
lea
call
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
mov
push
call
mov
lea
call
push
push
call
neg
sbb
neg
neg
mov
lea
call
movsx
test
je
mov
mov
push
call
push
jmp
lea
call
ret
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
lea
push
lea
push
push
call
add
mov
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
mov
push
call
push
jmp
lea
call
lea
push
lea
push
push
call
add
lea
push
push
call
ret
lea
call
lea
push
push
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
fstp
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
push
call
mov
lea
push
mov
mov
mov
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
lea
call
lea
push
lea
push
mov
mov
mov
push
call
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
mov
mov
mov
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
fstp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
push
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
call
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
and
mov
and
push
mov
mov
call
call
mov
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
lea
call
push
push
lea
push
mov
lea
call
push
lea
push
call
push
lea
push
call
lea
lea
call
lea
call
lea
call
mov
mov
mov
lea
lea
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
mov
mov
lea
push
lea
push
call
push
lea
push
call
movsx
test
je
mov
push
lea
push
lea
push
call
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
lea
call
mov
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
lea
lea
call
push
jmp
mov
and
test
je
lea
call
lea
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
push
push
push
push
call
push
push
mov
call
sub
jo
push
push
push
lea
push
push
push
call
add
push
call
mov
push
lea
push
push
call
push
call
mov
mov
push
push
push
push
call
push
push
call
sub
jo
push
push
push
lea
push
push
push
call
add
push
call
mov
push
lea
push
push
call
push
call
mov
mov
mov
push
lea
push
push
call
mov
push
call
mov
mov
push
push
push
push
call
push
push
lea
push
push
mov
call
push
mov
add
jo
push
lea
push
push
call
push
push
call
mov
lea
mov
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
call
mov
lea
call
push
add
jo
add
jo
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
call
push
jmp
call
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
push
mov
call
lea
push
push
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
push
lea
push
call
lea
push
call
push
lea
push
call
lea
call
mov
mov
lea
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
lea
push
call
add
push
call
push
lea
push
call
lea
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
lea
call
push
lea
push
call
movsx
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
push
lea
push
call
mov
push
lea
push
call
push
jmp
lea
call
ret
lea
call
lea
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
lea
push
call
mov
lea
call
push
push
call
neg
sbb
inc
neg
mov
lea
call
movsx
test
je
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
mov
push
mov
push
call
mov
jmp
mov
lea
push
lea
push
call
lea
push
lea
push
call
lea
call
mov
mov
mov
lea
push
call
movsx
mov
lea
call
mov
mov
mov
push
mov
call
push
push
push
call
mov
mov
call
push
lea
push
push
call
mov
mov
call
push
call
push
jmp
lea
call
lea
call
lea
push
push
call
ret
lea
push
push
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
lea
push
push
call
mov
lea
call
lea
call
mov
mov
push
lea
push
call
push
push
push
push
push
call
mov
call
mov
push
lea
push
call
mov
mov
lea
call
mov
cmp
jne
cmp
je
mov
push
mov
push
push
call
mov
lea
call
push
push
call
sub
jo
push
mov
push
call
mov
mov
lea
mov
add
call
lea
call
lea
call
jmp
mov
push
mov
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
mov
add
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
lea
xor
rep
mov
lea
mov
mov
rep
mov
lea
mov
push
lea
xor
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
mov
lea
call
lea
lea
push
push
push
call
add
lea
lea
mov
push
push
push
mov
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
lea
lea
mov
push
push
push
mov
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
mov
add
lea
push
push
push
call
push
push
call
mov
mov
call
mov
lea
push
push
call
mov
push
lea
push
push
call
push
mov
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
push
lea
push
push
call
push
lea
push
push
call
push
call
mov
call
mov
lea
push
push
call
mov
xor
cmp
mov
setne
neg
xor
cmp
setne
neg
and
mov
xor
cmp
setne
neg
and
lea
mov
lea
push
lea
push
lea
push
lea
push
push
push
call
add
cmp
je
mov
lea
push
push
mov
mov
call
lea
lea
push
lea
mov
push
push
lea
push
push
mov
mov
mov
call
lea
push
lea
push
push
call
push
call
push
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
lea
mov
push
push
mov
call
lea
lea
push
lea
mov
push
push
lea
push
push
mov
mov
mov
call
push
lea
lea
push
push
call
push
call
push
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
mov
add
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
lea
push
lea
push
push
push
call
add
mov
mov
mov
call
mov
call
push
push
call
call
call
mov
call
push
push
call
call
lea
lea
push
lea
push
push
push
mov
call
push
lea
push
push
mov
push
lea
push
lea
push
push
lea
push
push
call
push
push
call
mov
call
lea
lea
push
push
push
call
mov
lea
push
push
call
xor
cmp
setne
neg
mov
lea
call
lea
push
push
call
cmp
je
mov
push
push
call
call
mov
push
push
call
call
mov
push
call
call
mov
push
jmp
call
mov
call
push
push
call
call
call
mov
call
push
push
call
call
mov
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
push
push
call
lea
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
push
push
call
mov
lea
call
lea
call
lea
push
push
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
jl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jge
add
adc
add
jge
add
add
dec
jge
add
add
add
add
nop
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
add
sub
add
jle
add
add
pusha
jle
add
add
xchg
add
jle
add
add
fdivr
add
jle
add
jg
add
add
and
add
cs
add
add
cmp
add
add
bound
add
add
xor
add
jg
add
add
mov
jg
add
jg
add
jg
add
add
pop
add
adc
add
and
add
mov
add
pop
add
and
add
add
add
int3
add
adc
add
call
add
add
sbb
add
fadd
add
cld
add
or
add
sbb
add
cmp
add
add
add
add
outs
add
add
add
mov
add
mov
add
mov
add
add
add
imul
add
sbb
add
add
imul
xor
add
dec
add
push
add
pop
add
outs
add
js
add
mov
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
popa
jb
jae
inc
je
add
pop
inc
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
jne
xor
add
pop
pop
jbe
popa
dec
gs
inc
popa
arpl
popa
jb
add
add
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
arpl
jae
push
outs
push
outs
imul
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
arpl
je
jne
je
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
push
je
add
add
jbe
popa
inc
js
je
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
push
popa
jb
push
popa
jb
add
add
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
dec
bound
popa
jb
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
jbe
popa
push
gs
pop
jbe
popa
push
arpl
imul
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
dec
outs
push
je
push
popa
jb
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
ins
add
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
add
pop
pop
jbe
popa
push
popa
jb
popa
je
add
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
dec
outs
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
push
arpl
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
popa
jb
gs
popa
jb
add
add
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
push
arpl
je
jne
je
outs
jae
add
add
pop
pop
jbe
popa
dec
popa
je
dec
gs
inc
popa
ins
ins
dec
add
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
outs
jb
popa
arpl
popa
jb
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
push
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
ins
and
jae
and
and
outs
and
fs
push
imul
aaa
push
inc
add
dec
add
out
repnz
loopne
sidtd
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
adc
add
add
add
rol
ror
add
add
add
adc
add
cs
js
add
add
inc
add
add
add
add
add
add
add
and
add
fs
je
add
add
jo
add
push
add
add
add
add
add
inc
add
shr
fs
je
add
add
add
add
add
add
add
add
add
add
jb
jb
add
add
inc
add
add
add
add
add
pop
add
inc
add
inc
call
push
call
add
add
nop
push
mov
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
mov
call
sub
je
dec
je
jmp
push
push
push
call
mov
jmp
and
dec
je
dec
je
jmp
push
push
push
push
call
push
push
call
mov
jmp
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
mov
call
sub
je
dec
je
jmp
mov
mov
push
push
push
call
mov
jmp
and
dec
je
dec
je
sub
jne
mov
call
push
push
mov
call
mov
mov
mov
call
test
je
push
push
push
call
mov
jmp
push
push
push
push
call
push
push
call
mov
jmp
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
mov
add
push
dec
jne
add
mov
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
mov
call
sub
je
dec
je
jmp
mov
mov
cmp
je
push
push
push
push
call
cmp
je
push
push
push
push
push
call
push
push
call
mov
lea
push
push
call
push
lea
push
push
push
call
push
push
call
push
push
push
push
mov
sub
inc
push
mov
sub
inc
push
push
push
push
push
push
push
call
mov
test
jne
push
push
call
jmp
push
push
push
push
push
push
push
call
push
call
mov
push
push
push
push
call
test
je
push
push
push
push
call
push
push
push
push
call
lea
push
push
call
push
push
call
mov
cmp
je
mov
jmp
lea
push
push
call
mov
call
mov
mov
mov
mov
call
cmp
jle
mov
mov
mov
call
cmp
jne
mov
mov
mov
lea
call
mov
call
mov
lea
call
inc
cmp
jle
cmp
jne
lea
mov
push
mov
mov
call
cmp
jle
xor
mov
mov
call
cmp
je
cmp
jne
push
mov
mov
mov
call
mov
call
cmp
je
push
push
push
push
push
call
test
jne
mov
push
push
call
mov
jmp
mov
mov
mov
call
cmp
jne
push
push
call
cmp
je
xor
mov
mov
call
xor
mov
mov
call
cmp
je
cmp
jne
cmp
jne
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
mov
call
push
push
push
call
mov
jmp
and
dec
je
dec
je
sub
jne
mov
call
mov
lea
mov
call
test
je
lea
push
push
push
call
mov
jmp
push
lea
push
push
push
call
cmp
je
cmp
je
mov
push
push
call
mov
jmp
cmp
je
mov
jmp
push
push
call
mov
cmp
jne
push
push
push
push
call
push
push
push
push
call
push
call
mov
lea
xor
xor
call
test
jne
call
cmp
je
cmp
jne
mov
lea
push
call
test
setne
and
mov
cmp
jne
call
cmp
jne
mov
call
test
je
cmp
jne
cmp
je
call
push
push
lea
push
call
add
lea
call
lea
lea
xor
call
mov
cmp
jne
call
cmp
jne
mov
lea
mov
call
cmp
jne
cmp
je
mov
xor
mov
cmp
sbb
neg
mov
cmp
jne
push
lea
push
push
call
push
lea
push
push
lea
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
add
mov
mov
xor
lea
mov
push
call
test
je
push
push
call
push
call
mov
mov
jmp
mov
cmp
je
mov
call
push
lea
push
push
lea
push
call
add
mov
mov
call
push
mov
call
push
lea
push
push
call
inc
push
push
call
mov
jmp
lea
call
mov
xor
mov
mov
call
xor
mov
mov
call
xor
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
cmp
jne
cmp
jne
cmp
jne
mov
mov
xor
call
mov
mov
mov
call
xor
mov
cmp
jle
cmp
jne
mov
mov
call
push
push
push
call
mov
cmp
jne
mov
jmp
mov
cmp
je
add
push
mov
call
push
mov
call
push
push
call
jmp
push
push
call
mov
jmp
cmp
je
mov
cmp
je
cmp
jne
mov
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
mov
call
sub
je
dec
je
jmp
cmp
je
push
push
push
push
push
call
cmp
je
push
push
push
push
call
push
push
call
mov
push
push
push
push
call
push
call
push
push
push
push
call
mov
mov
mov
call
cmp
je
push
mov
mov
mov
call
mov
call
jmp
push
push
call
mov
jmp
mov
jmp
and
dec
je
dec
je
jmp
push
push
call
mov
jmp
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
mov
test
je
jmp
lea
xor
mov
shl
lea
add
call
inc
cmp
jl
or
xor
push
lea
push
call
test
jne
mov
jmp
inc
cmp
jl
cmp
ja
jmp
mov
inc
add
inc
add
inc
add
and
popa
and
mov
and
push
and
lea
inc
add
and
clc
add
test
test
jnp
call
add
add
in
daa
add
lea
lea
call
lea
call
lea
lea
call
lea
call
lea
lea
call
lea
call
lea
call
lea
call
jmp
push
lea
push
call
cmp
je
call
cmp
je
lea
lea
call
lea
call
lea
call
mov
cmp
jl
lea
call
cmp
jb
lea
xor
call
test
jne
lea
call
mov
lea
mov
xor
call
mov
mov
lea
mov
lea
push
call
lea
push
call
cmp
je
lea
push
call
test
jne
xor
push
lea
push
push
lea
push
call
add
lea
push
call
cmp
je
inc
jmp
lea
push
lea
push
call
test
je
call
test
je
push
push
lea
push
call
lea
lea
xor
call
test
jne
lea
mov
call
jmp
cmp
jne
cmp
sete
and
test
jne
mov
mov
call
cmp
je
lea
jmp
mov
call
mov
test
je
xor
jmp
mov
call
mov
mov
call
mov
mov
add
add
call
mov
test
je
mov
mov
mov
mov
call
cmp
jne
mov
call
jmp
cmp
jne
lea
push
push
call
jmp
cmp
jne
cmp
jne
lea
xor
mov
mov
cmp
jne
inc
mov
call
cmp
jae
xor
mov
cmp
jne
xor
mov
cmp
jne
lea
lea
call
jmp
xor
mov
cmp
je
cmp
je
xor
mov
cmp
jne
lea
mov
call
jmp
lea
push
push
push
push
push
call
test
jne
mov
lea
push
lea
push
lea
push
push
push
push
call
push
call
cmp
je
lea
call
xor
mov
cmp
je
mov
lea
call
lea
call
mov
mov
call
add
cmp
jae
lea
mov
call
lea
mov
call
test
je
cmp
jne
mov
lea
mov
call
lea
call
push
push
call
mov
lea
push
push
call
push
push
push
push
call
lea
mov
call
test
je
lea
push
push
push
push
call
jmp
cmp
je
xor
mov
call
test
je
xor
mov
add
mov
jmp
mov
jmp
mov
sub
jb
sub
je
dec
je
dec
je
jmp
xor
mov
xor
mov
jmp
xor
mov
mov
jmp
mov
xor
mov
jmp
cmp
jne
lea
xor
call
jmp
cmp
jne
lea
push
push
call
lea
call
xor
push
lea
push
push
lea
push
push
call
add
lea
push
call
cmp
je
inc
jmp
lea
push
push
push
call
cmp
je
cmp
jne
mov
lea
mov
call
test
jne
xor
jmp
xor
mov
cmp
jne
lea
lea
add
call
mov
jmp
inc
cmp
jne
cmp
jne
lea
lea
call
lea
lea
call
lea
call
mov
push
lea
push
lea
push
push
call
cmp
je
push
mov
push
mov
call
cmp
jne
cmp
jne
mov
mov
jmp
cmp
jne
cmp
je
lea
push
push
call
mov
call
mov
mov
jmp
cmp
jne
lea
mov
call
jmp
cmp
jne
xor
mov
call
sub
je
sub
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
lea
lea
call
xor
mov
cmp
jne
lea
lea
call
cmp
je
lea
mov
mov
call
jmp
lea
mov
call
test
je
mov
lea
lea
call
jmp
lea
xor
call
test
jne
xor
mov
lea
jmp
xor
mov
cmp
je
xor
mov
cmp
jne
mov
mov
lea
xor
call
test
je
mov
xor
mov
cmp
jne
mov
lea
lea
call
jmp
inc
jmp
inc
xor
mov
cmp
je
lea
mov
call
mov
mov
jmp
mov
inc
cmp
jne
cmp
je
mov
mov
lea
lea
call
lea
mov
call
lea
call
cmp
je
lea
lea
call
lea
call
lea
lea
call
cmp
je
lea
jmp
lea
call
mov
lea
call
lea
call
test
je
mov
call
test
je
mov
lea
call
lea
mov
xor
call
cmp
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
lea
lea
call
cmp
je
push
lea
push
push
push
call
jmp
cmp
jne
mov
lea
push
lea
push
push
lea
lea
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
push
mov
add
push
add
push
push
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
test
je
cmp
jne
xor
jmp
xor
mov
xor
jmp
mov
xor
mov
inc
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
mov
mov
jmp
xor
mov
cmp
je
xor
mov
cmp
jne
and
cmp
jne
inc
jmp
mov
inc
mov
add
cmp
jle
mov
mov
jmp
inc
cmp
jne
mov
cmp
je
mov
mov
cmp
je
push
lea
push
push
call
mov
dec
lea
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
call
cmp
jae
lea
mov
xor
call
mov
mov
xor
mov
cmp
jne
lea
jmp
mov
mov
xor
jmp
xor
mov
cmp
jne
jmp
xor
mov
cmp
jne
mov
jmp
inc
cmp
jne
xor
mov
cmp
je
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
lea
mov
jmp
inc
cmp
jne
cmp
je
mov
mov
mov
call
mov
test
je
mov
mov
call
test
jne
mov
xor
mov
call
mov
cmp
je
lea
mov
call
lea
mov
cmp
je
cmp
jne
lea
mov
call
mov
lea
call
lea
xor
call
test
je
lea
push
call
test
setne
and
test
jne
and
mov
lea
push
call
test
setne
and
test
je
xor
cmp
jne
cmp
je
cmp
je
push
call
test
jne
xor
jmp
mov
test
je
push
push
call
mov
push
push
call
mov
call
push
call
test
je
mov
mov
call
test
je
cmp
je
cmp
jne
push
call
jmp
cmp
mov
jne
add
push
call
test
je
push
push
call
pop
pop
mov
pop
ret
push
mov
add
push
mov
jmp
push
push
push
push
lea
push
call
push
push
call
cmp
je
pop
mov
pop
ret
push
mov
add
lea
push
push
call
cmp
jne
lea
call
mov
mov
call
test
jne
push
call
lea
call
mov
lea
mov
xor
call
mov
mov
lea
mov
lea
push
call
mov
pop
ret
push
mov
add
push
add
push
push
push
mov
mov
call
mov
xor
mov
jmp
cmp
jne
xor
mov
cmp
je
xor
mov
cmp
je
lea
call
add
cmp
ja
lea
mov
call
mov
call
mov
jmp
dec
test
jle
xor
mov
cmp
je
cmp
jne
mov
lea
call
push
lea
push
push
lea
xor
mov
call
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
call
xor
jmp
xor
mov
cmp
je
xor
mov
cmp
je
xor
mov
cmp
jne
mov
inc
cmp
jne
pop
ret
push
mov
add
push
mov
cmp
je
cmp
je
lea
mov
call
lea
lea
push
push
push
push
push
push
push
push
push
call
test
jne
mov
call
inc
lea
push
push
push
push
push
push
call
push
call
pop
mov
pop
ret
push
mov
add
push
mov
cmp
je
lea
mov
call
lea
push
push
push
push
push
call
test
jne
mov
lea
lea
push
push
lea
lea
push
push
push
push
call
test
jne
lea
mov
call
push
call
pop
mov
pop
ret
nop
nop
nop
ret
nop
nop
nop
push
inc
mov
cmp
jl
xor
mov
mov
shl
add
mov
push
push
push
push
call
push
push
mov
mov
mov
call
mov
pop
ret
push
mov
mov
call
test
je
xor
mov
cmp
je
mov
mov
call
pop
ret
nop
push
mov
add
push
push
push
push
lea
push
call
test
je
push
push
push
lea
push
call
lea
push
call
lea
push
call
mov
pop
ret
push
mov
add
push
lea
push
push
push
call
xor
mov
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
cmp
jne
call
mov
mov
push
push
lea
push
call
add
mov
push
push
push
lea
push
push
push
call
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
cmp
jbe
shr
shr
test
jne
xor
pop
ret
cmp
jbe
mov
pop
ret
imul
xor
div
pop
ret
nop
push
mov
add
push
push
push
mov
mov
test
je
cmp
jne
mov
xor
jmp
mov
xor
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
test
jne
cmp
jne
xor
mov
cmp
je
cmp
je
inc
mov
inc
jmp
mov
test
je
xor
jmp
lea
mov
call
test
setne
and
mov
cmp
jne
xor
mov
cmp
jne
test
jne
mov
inc
xor
mov
cmp
je
xor
mov
cmp
je
mov
jmp
mov
mov
inc
inc
cmp
jne
mov
mov
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
xor
push
call
lea
push
push
push
push
push
call
test
jl
push
mov
push
mov
call
push
mov
push
mov
call
cmp
je
push
push
mov
push
mov
call
cmp
je
push
mov
push
mov
call
lea
mov
call
lea
call
cmp
je
lea
push
mov
push
mov
call
lea
push
push
mov
push
mov
call
test
jl
push
lea
push
push
push
push
push
call
push
lea
push
mov
push
mov
call
test
jl
mov
mov
push
mov
call
mov
push
mov
call
call
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
mov
mov
lea
push
call
lea
push
push
push
call
push
push
call
push
mov
push
mov
call
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
cmp
jl
cmp
jne
cmp
jne
push
call
mov
test
je
push
push
call
mov
cmp
setne
and
mov
cmp
je
push
lea
push
push
call
test
je
push
lea
push
call
test
je
push
push
push
push
call
mov
test
je
push
push
call
pop
pop
mov
pop
ret
nop
mov
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
inc
add
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
inc
add
jmp
mov
inc
mov
inc
cmp
jne
mov
ret
nop
push
mov
add
lea
lea
push
push
push
call
lea
xor
call
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
push
push
call
mov
cmp
jne
mov
call
push
push
call
push
push
push
push
call
push
push
push
push
call
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
mov
test
je
and
or
mov
or
lea
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
test
je
or
and
lea
push
push
push
push
call
push
push
push
push
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
cmp
jne
inc
jmp
mov
cmp
je
lea
lea
push
push
push
call
lea
mov
call
inc
mov
pop
ret
nop
nop
nop
push
mov
test
je
push
mov
call
push
push
call
add
jmp
push
mov
call
push
push
call
add
call
cmp
sete
and
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
cmp
je
mov
jmp
cmp
je
mov
jmp
push
push
push
push
push
call
cmp
ja
jmp
add
inc
add
xor
lea
inc
add
xor
lock
mov
mov
jmp
mov
mov
mov
push
push
call
jmp
push
push
push
push
push
call
test
je
mov
mov
jmp
push
mov
mov
mov
call
jmp
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
push
push
push
push
mov
mov
call
sub
je
dec
je
jmp
lea
mov
mov
call
mov
lea
mov
xor
call
lea
push
push
push
call
push
lea
push
push
lea
push
push
call
push
push
push
push
push
call
lea
push
lea
push
call
mov
cmp
je
lea
push
lea
push
call
lea
push
lea
push
call
push
lea
push
push
lea
push
push
push
call
push
lea
push
push
lea
push
push
push
call
lea
lea
push
mov
push
call
push
push
lea
push
call
add
lea
push
push
push
call
push
call
test
jne
lea
mov
call
mov
call
push
lea
push
push
lea
push
call
add
lea
push
push
push
call
push
push
push
push
push
call
mov
lea
mov
push
shr
push
push
call
lea
push
lea
push
call
push
lea
push
push
lea
push
push
push
call
push
lea
push
push
lea
push
push
push
call
lea
lea
push
push
mov
call
push
push
lea
push
call
add
lea
push
push
push
call
test
je
cmp
je
lea
mov
call
mov
call
push
lea
push
push
lea
push
call
add
lea
push
push
push
call
mov
jmp
xor
and
movzx
cmp
jg
je
sub
je
sub
je
dec
je
jmp
sub
je
dec
je
dec
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
je
push
push
push
push
push
call
test
je
push
call
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
push
push
push
push
mov
mov
mov
call
sub
je
dec
je
jmp
mov
push
push
push
call
push
push
push
call
mov
jmp
mov
and
dec
je
dec
je
jmp
push
push
push
push
push
call
push
push
call
mov
jmp
push
push
call
mov
jmp
xor
jmp
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
cmp
je
mov
mov
mov
call
jmp
mov
cmp
jne
push
call
test
jne
xor
cmp
jne
push
push
push
push
push
call
test
je
mov
mov
call
jmp
mov
mov
cmp
je
mov
mov
mov
call
cmp
setne
and
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
push
mov
pop
call
push
push
push
push
call
pop
ret
nop
nop
nop
push
mov
add
push
push
cmp
jne
mov
cmp
je
call
mov
lea
push
lea
push
push
call
lea
push
push
call
add
test
je
push
call
pop
mov
pop
ret
nop
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
call
add
ret
push
mov
push
push
push
push
call
call
pop
ret
nop
nop
nop
push
mov
xor
mov
call
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
ret
nop
nop
push
push
push
push
push
call
ret
nop
nop
nop
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
mov
call
lea
xor
call
lea
xor
mov
call
lea
call
lea
lea
xor
call
test
je
mov
mov
lea
push
call
pop
mov
test
je
mov
mov
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
xor
xor
mov
xor
mov
mov
ret
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
mov
push
mov
add
push
dec
jne
mov
add
push
mov
call
lea
call
mov
lea
call
mov
mov
call
lea
xor
mov
call
mov
mov
mov
mov
mov
lea
call
lea
lea
call
lea
mov
call
lea
mov
call
pop
mov
pop
ret
nop
nop
push
mov
add
sub
push
push
mov
je
sub
jne
mov
jmp
mov
mov
call
push
mov
call
push
lea
push
call
add
lea
call
call
pop
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
call
call
mov
test
je
mov
call
push
push
call
push
push
push
call
push
push
call
push
call
mov
mov
push
push
call
mov
push
push
call
mov
lea
call
mov
mov
call
lea
call
lea
call
push
push
lea
push
mov
lea
push
push
mov
call
xor
xor
mov
mov
mov
mov
lea
call
lea
mov
call
lea
mov
call
cmp
je
call
mov
mov
xor
call
cmp
jle
mov
call
push
call
cmp
je
push
call
cmp
jne
cmp
je
mov
mov
call
mov
cmp
je
mov
call
push
call
xor
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
jmp
inc
xor
mov
cmp
je
xor
mov
cmp
je
cmp
je
xor
xor
jmp
xor
mov
cmp
jne
and
cmp
sbb
neg
mov
jmp
cmp
jge
mov
mov
inc
inc
cmp
je
test
jne
xor
mov
cmp
je
xor
mov
cmp
jne
mov
inc
mov
dec
je
xor
mov
cmp
je
xor
mov
cmp
jne
xor
mov
call
sub
je
dec
je
sub
je
sub
jne
xor
mov
call
sub
jb
sub
je
dec
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
call
jmp
xor
mov
call
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
call
jmp
lea
mov
mov
call
jmp
pop
mov
pop
ret
mov
cmp
je
mov
call
push
push
push
call
xor
mov
mov
cmp
je
push
push
call
cmp
jne
cmp
jne
push
push
push
push
call
jmp
call
cmp
jne
cmp
je
call
ret
push
mov
xor
xor
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
call
mov
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
mov
mov
mov
mov
cmp
je
mov
push
mov
call
xor
mov
test
je
push
call
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
test
jne
mov
jmp
mov
mov
mov
mov
call
test
jne
mov
jmp
mov
mov
mov
mov
call
test
jne
lea
mov
jmp
mov
mov
mov
mov
call
test
jne
lea
mov
jmp
mov
mov
mov
mov
call
test
jne
lea
mov
jmp
mov
mov
mov
mov
call
test
jne
mov
jmp
xor
mov
mov
jmp
push
mov
call
xor
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
inc
mov
pop
ret
push
mov
mov
dec
je
mov
jmp
mov
call
xor
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
xor
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
push
mov
push
call
test
jne
mov
jmp
mov
mov
mov
xor
pop
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
xor
pop
ret
nop
nop
nop
push
mov
xor
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
lea
mov
xor
mov
lea
mov
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
push
push
call
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
push
mov
call
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
xor
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
add
push
mov
lea
push
push
call
lea
lea
push
push
push
push
push
call
cmp
je
lea
push
push
mov
push
mov
call
test
jl
push
mov
push
mov
call
mov
push
mov
call
lea
push
push
mov
push
mov
call
test
jl
mov
push
mov
call
mov
push
mov
call
pop
mov
pop
ret
nop
push
mov
add
push
mov
cmp
je
lea
push
push
mov
push
mov
call
test
jl
push
mov
push
mov
call
push
mov
push
mov
call
mov
push
mov
call
lea
push
push
mov
push
mov
call
test
jl
mov
push
mov
call
mov
push
mov
call
mov
push
mov
call
mov
push
mov
call
xor
mov
pop
pop
pop
pop
ret
nop
nop
mov
ret
push
mov
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
push
mov
call
test
jl
lea
add
push
push
mov
push
mov
call
mov
push
mov
call
pop
pop
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
lea
push
push
mov
push
mov
call
test
jl
test
je
lea
push
push
push
push
push
push
mov
push
mov
call
lea
push
push
push
push
push
push
mov
push
mov
call
jmp
push
push
push
push
push
push
mov
push
mov
call
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
cmp
je
test
je
lea
push
push
mov
push
mov
call
test
jl
lea
push
push
push
push
push
push
mov
push
mov
call
mov
push
mov
call
pop
pop
pop
ret
nop
nop
push
mov
cmp
jne
xor
pop
ret
mov
push
mov
call
mov
pop
ret
nop
xor
xor
mov
mov
xor
xor
mov
xor
mov
mov
mov
mov
ret
nop
nop
nop
push
push
mov
mov
test
je
cmp
je
call
test
je
push
call
pop
pop
pop
ret
nop
push
mov
add
push
mov
push
push
cmp
mov
mov
jne
push
call
call
mov
mov
push
push
call
mov
mov
call
mov
lea
mov
push
push
call
push
lea
push
push
call
push
push
call
cmp
je
push
call
push
push
push
push
call
push
mov
sub
push
mov
sub
add
push
push
mov
inc
push
push
push
push
push
call
mov
cmp
je
push
push
call
push
call
cmp
jne
cmp
je
push
call
xor
mov
push
push
call
mov
call
add
lea
add
call
mov
mov
mov
call
mov
mov
call
test
jne
mov
mov
call
mov
mov
call
mov
mov
call
test
je
push
push
call
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
cmp
je
push
call
xor
mov
pop
ret
push
mov
add
push
push
push
lea
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
push
push
call
mov
xor
mov
mov
xor
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
dec
je
dec
je
sub
je
sub
jne
mov
mov
push
push
push
call
jmp
push
push
call
mov
call
jmp
push
push
call
call
jmp
push
push
call
mov
mov
shr
movzx
and
movzx
call
push
push
push
push
call
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
mov
call
cmp
jne
test
jle
cmp
jl
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
cmp
je
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
test
je
lea
push
push
push
mov
call
test
jl
push
mov
push
mov
call
push
mov
call
mov
mov
call
pop
pop
pop
ret
nop
push
mov
cmp
je
mov
push
mov
call
xor
mov
cmp
je
mov
call
mov
push
mov
call
xor
mov
pop
ret
nop
nop
nop
cmp
je
push
push
mov
xor
xor
call
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
xor
mov
xor
mov
call
mov
jmp
call
sub
cmp
ja
push
push
push
push
lea
push
call
test
je
push
push
push
lea
push
call
lea
push
call
lea
push
call
lea
push
push
mov
call
test
jl
cmp
je
xor
cmp
je
lea
push
push
mov
push
mov
call
test
jl
mov
push
mov
call
test
jl
push
mov
push
mov
call
test
setge
and
mov
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
cmp
je
xor
mov
push
push
push
push
push
mov
push
mov
call
mov
mov
call
mov
push
call
mov
add
lea
add
mov
push
push
call
mov
mov
test
je
mov
lea
push
call
cmp
jne
mov
and
cmp
jae
xor
jmp
mov
mov
mov
mov
call
cmp
je
mov
mov
call
mov
call
add
mov
mov
mov
call
mov
jmp
inc
xor
mov
cmp
je
mov
mov
mov
call
test
sete
and
mov
cmp
je
lea
jmp
mov
mov
call
cmp
jne
mov
mov
call
cmp
jne
mov
mov
call
cmp
je
mov
add
call
mov
test
je
push
push
push
push
push
push
call
test
lea
setne
and
mov
push
push
push
push
push
push
push
push
call
test
jne
mov
mov
call
cmp
je
mov
mov
mov
jmp
mov
mov
lea
push
push
push
call
test
jl
mov
mov
call
mov
mov
push
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
call
inc
call
mov
cmp
jne
xor
jmp
mov
mov
call
mov
mov
jmp
jmp
cmp
je
xor
mov
cmp
je
xor
mov
cmp
jne
cmp
je
xor
mov
cmp
je
mov
inc
inc
jmp
xor
cmp
je
xor
mov
cmp
jne
xor
jmp
xor
mov
cmp
jne
lea
add
mov
inc
cmp
jge
cmp
jne
test
jne
cmp
je
xor
mov
cmp
jne
cmp
je
xor
mov
cmp
je
mov
mov
inc
inc
cmp
je
xor
mov
cmp
jne
mov
mov
mov
call
test
sete
and
mov
cmp
jne
mov
mov
mov
call
test
jne
mov
inc
mov
inc
cmp
je
mov
inc
mov
inc
mov
mov
mov
mov
call
test
jne
jmp
mov
mov
inc
mov
call
test
jne
add
jmp
cmp
jne
jmp
inc
cmp
je
xor
mov
cmp
jne
xor
mov
cmp
jne
inc
cmp
jne
mov
pop
pop
pop
pop
pop
ret
nop
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
ret
inc
cmp
jl
inc
cmp
jne
xor
ret
nop
nop
push
mov
push
push
push
push
mov
mov
call
add
lea
add
call
mov
test
je
mov
mov
call
mov
call
mov
mov
jmp
mov
mov
mov
call
test
jne
jmp
mov
lea
call
add
add
xor
mov
cmp
jne
xor
mov
cmp
je
inc
jmp
cmp
jbe
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
lea
call
add
jmp
mov
mov
inc
inc
cmp
jne
mov
lea
mov
mov
call
mov
call
pop
pop
pop
pop
pop
ret
nop
nop
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
nop
nop
xor
xor
mov
mov
mov
ret
nop
nop
push
push
mov
mov
test
je
mov
call
test
je
push
call
pop
pop
pop
ret
nop
push
mov
mov
call
mov
call
pop
ret
nop
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
mov
mov
call
test
jne
push
lea
push
push
call
lea
mov
call
test
je
inc
mov
call
jmp
lea
mov
call
lea
call
push
push
lea
lea
xor
call
test
jne
lea
mov
call
jmp
mov
xor
mov
jmp
lea
call
mov
lea
lea
mov
call
mov
cmp
jl
xor
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
lea
add
mov
call
test
jne
add
mov
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
lea
add
mov
call
test
jne
lea
mov
call
jmp
inc
lea
cmp
jle
mov
add
add
cdq
push
push
lea
xor
call
inc
cmp
jge
cmp
je
cmp
jne
lea
mov
call
jmp
mov
mov
cdq
push
push
lea
xor
call
mov
add
call
mov
test
jne
lea
mov
call
jmp
mov
mov
mov
lea
mov
mov
call
mov
xor
xor
jmp
mov
mov
inc
movzx
test
je
cmp
jne
mov
mov
movzx
cmp
jg
je
sub
je
sub
je
jmp
sub
je
sub
je
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
je
inc
inc
jmp
cmp
je
cmp
jne
mov
mov
add
inc
push
pop
mov
cmp
jl
mov
mov
mov
lea
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
mov
push
call
push
push
push
call
test
je
mov
jmp
push
push
lea
mov
mov
call
mov
lea
call
test
sete
and
mov
pop
mov
pop
ret
nop
push
mov
add
push
push
mov
push
mov
mov
cmp
je
mov
sub
jb
je
dec
je
jmp
mov
jmp
mov
jmp
mov
mov
mov
or
call
cmp
mov
je
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
xor
lea
mov
push
push
push
call
add
lea
mov
call
mov
test
jne
lea
mov
call
mov
test
je
lea
mov
mov
call
test
je
mov
sub
inc
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
call
test
je
mov
jmp
cmp
je
mov
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
xor
ret
nop
push
push
mov
mov
jmp
mov
cmp
jne
lea
lea
mov
call
test
jne
xor
mov
cmp
jne
xor
mov
cmp
jne
mov
pop
pop
ret
inc
cmp
je
xor
mov
cmp
jne
jmp
inc
xor
mov
cmp
je
cmp
jne
xor
pop
pop
ret
push
mov
add
push
push
push
mov
mov
lea
push
mov
mov
mov
lea
call
mov
lea
push
push
call
lea
push
push
call
mov
sub
inc
sub
mov
mov
sub
inc
sub
test
mov
je
cmp
jne
mov
mov
imul
cdq
idiv
mov
mov
imul
cdq
mov
idiv
add
add
push
push
push
push
push
push
push
call
cmp
jne
push
lea
push
push
call
push
push
lea
lea
mov
call
lea
push
push
call
push
call
sub
push
push
call
mov
mov
xor
jmp
push
lea
push
push
call
cmp
je
push
push
lea
lea
mov
call
lea
push
push
call
test
je
lea
push
push
call
mov
sub
mov
sar
jns
adc
sub
mov
imul
cdq
idiv
mov
mov
sub
sub
imul
cdq
push
mov
idiv
pop
mov
mov
sub
inc
imul
cdq
push
mov
idiv
pop
mov
mov
sub
inc
imul
cdq
push
mov
idiv
pop
push
push
push
push
push
push
push
call
push
push
call
mov
cmp
je
inc
test
je
cmp
jl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
push
push
mov
lea
mov
call
lea
mov
call
mov
test
je
lea
call
mov
lea
call
mov
jmp
mov
mov
mov
cmp
jne
cmp
jne
xor
jmp
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmp
je
push
push
call
or
push
push
push
call
pop
ret
nop
nop
nop
push
mov
add
cmp
jne
mov
lea
push
call
mov
mov
mov
mov
cmp
jne
mov
jmp
xor
mov
pop
ret
nop
nop
push
mov
push
push
mov
push
mov
xor
mov
mov
push
push
push
call
push
call
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
sub
je
sub
je
jmp
mov
xchg
call
jmp
test
setne
mov
and
xchg
push
mov
call
pop
ret
push
mov
add
push
push
push
mov
mov
mov
lea
push
call
test
je
xor
jmp
mov
xor
mov
lea
mov
mov
mov
xor
mov
xor
mov
lea
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
mov
push
mov
call
test
setne
and
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
lea
test
je
mov
mov
call
mov
call
inc
add
mov
mov
call
mov
call
inc
add
mov
call
mov
mov
call
mov
call
inc
add
mov
mov
call
mov
call
inc
mov
add
lea
xor
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
cmp
jne
lea
push
push
call
lea
mov
mov
cmp
je
lea
push
call
mov
jmp
lea
push
call
mov
test
jne
call
cmp
jne
mov
cmp
je
lea
push
call
mov
jmp
lea
push
call
mov
test
setne
and
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
push
mov
mov
push
call
mov
push
call
mov
call
mov
mov
push
call
mov
test
je
push
push
call
test
je
lea
push
call
push
call
push
call
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
push
mov
mov
test
je
cmp
je
push
call
cmp
je
push
call
mov
push
mov
call
test
je
push
call
pop
pop
pop
ret
nop
nop
nop
push
mov
push
call
pop
ret
nop
mov
mov
mov
mov
ret
nop
nop
nop
push
push
mov
mov
test
je
cmp
je
push
call
test
je
push
call
pop
pop
pop
ret
push
push
mov
mov
mov
mov
call
cmp
jne
lea
mov
mov
call
mov
pop
pop
ret
push
push
push
mov
mov
mov
cmp
jne
xor
jmp
cmp
je
push
lea
mov
or
call
mov
cmp
jne
xor
jmp
push
lea
mov
mov
call
cmp
jne
xor
jmp
mov
call
mov
xor
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
call
test
jne
xor
mov
mov
call
jmp
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
test
je
xor
jmp
push
mov
mov
or
call
cmp
jne
xor
jmp
push
call
mov
call
mov
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
call
test
je
cmp
je
mov
cmp
je
lea
mov
call
jmp
lea
mov
mov
call
cmp
jne
lea
push
lea
push
call
mov
cmp
jne
call
cmp
je
cmp
je
cmp
jne
xor
jmp
mov
mov
jmp
lea
push
push
call
test
jne
or
call
cmp
setne
and
mov
cmp
je
lea
lea
call
lea
call
lea
call
lea
mov
mov
call
mov
xor
mov
xor
push
push
mov
xor
add
adc
mov
mov
lea
mov
lea
mov
mov
add
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
lea
lea
call
lea
lea
call
lea
call
mov
lea
call
test
je
mov
jmp
test
je
cmp
je
lea
mov
call
jmp
lea
mov
mov
call
cmp
jne
lea
push
lea
push
call
mov
cmp
jne
call
cmp
je
cmp
jne
xor
jmp
mov
mov
jmp
lea
push
push
call
test
jne
or
call
cmp
setne
and
mov
cmp
je
lea
mov
call
mov
call
lea
call
lea
mov
mov
call
mov
xor
mov
xor
push
push
mov
xor
add
adc
add
mov
mov
mov
mov
lea
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
lea
call
lea
lea
call
lea
call
mov
mov
call
test
je
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
xor
mov
mov
jmp
xor
mov
call
test
je
lea
mov
mov
cmp
je
mov
mov
call
jmp
lea
mov
cmp
jne
cmp
je
mov
jmp
cmp
je
xor
mov
call
test
je
mov
cmp
je
mov
mov
call
jmp
lea
lea
cmp
jne
lea
jmp
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
push
mov
mov
call
mov
dec
test
jl
movzx
call
test
je
lea
add
add
pop
pop
ret
dec
test
jge
cmp
je
movzx
call
test
je
lea
jmp
mov
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
call
jmp
lea
mov
jmp
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
jmp
xor
mov
call
test
je
xor
mov
cmp
jne
xor
mov
cmp
jne
xor
mov
call
test
je
lea
inc
cmp
jne
jmp
mov
cmp
je
xor
mov
call
test
je
add
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
lea
mov
call
mov
test
je
lea
mov
call
mov
test
je
lea
mov
jmp
xor
mov
call
test
je
lea
jmp
xor
mov
cmp
jne
inc
cmp
jne
cmp
je
mov
cmp
jne
xor
mov
cmp
jne
xor
mov
cmp
jne
cmp
jne
add
cmp
je
lea
mov
mov
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
jmp
movzx
call
test
je
cmp
jne
cmp
jne
movzx
call
test
je
lea
add
cmp
jne
jmp
mov
cmp
je
movzx
call
test
je
add
cmp
jne
cmp
jne
lea
mov
call
mov
test
je
lea
mov
call
mov
test
je
lea
mov
jmp
movzx
call
test
je
lea
jmp
cmp
jne
add
cmp
jne
cmp
je
mov
cmp
jne
cmp
je
lea
mov
mov
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
push
push
mov
mov
call
mov
cmp
je
mov
mov
mov
call
jmp
mov
mov
call
pop
pop
ret
push
push
mov
call
mov
test
je
lea
mov
call
test
je
xor
jmp
mov
pop
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
cmp
je
mov
mov
call
test
setne
and
pop
pop
ret
test
jne
xor
jmp
mov
mov
call
test
setne
and
pop
pop
ret
nop
nop
cmp
je
cmp
je
xor
jmp
mov
ret
cmp
sete
and
ret
nop
nop
push
push
push
mov
mov
mov
mov
call
sub
lea
cmp
jle
dec
jmp
mov
call
mov
sub
mov
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
push
push
mov
mov
call
mov
lea
cmp
jb
xor
mov
call
test
je
add
cmp
jb
dec
mov
pop
pop
ret
push
mov
push
push
push
push
mov
mov
call
mov
add
dec
jmp
dec
xor
mov
call
test
jne
cmp
jb
mov
jmp
dec
xor
mov
call
test
je
cmp
jb
jmp
xor
mov
call
test
je
mov
call
mov
cmp
je
mov
mov
mov
call
jmp
mov
mov
call
test
je
cmp
jbe
mov
jmp
dec
cmp
jae
xor
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
call
mov
test
jne
mov
mov
call
mov
call
mov
jmp
cmp
je
mov
lea
call
test
je
mov
lea
call
test
jne
mov
lea
call
cmp
jne
mov
call
mov
jmp
mov
dec
cmp
ja
xor
mov
call
test
jne
mov
call
add
cmp
je
mov
mov
dec
cmp
jne
mov
jmp
inc
mov
xor
mov
cmp
je
jmp
xor
mov
call
test
je
xor
mov
call
test
jne
mov
lea
call
jmp
add
jmp
xor
mov
cmp
jne
mov
jmp
mov
dec
inc
mov
xor
mov
cmp
je
pop
pop
pop
pop
ret
nop
push
push
push
mov
cmp
je
cmp
je
lea
mov
call
test
je
xor
jmp
mov
jmp
xor
mov
cmp
jge
xor
jmp
xor
mov
cmp
jne
xor
mov
call
test
je
xor
jmp
mov
cmp
je
mov
mov
call
jmp
lea
mov
cmp
jne
cmp
je
mov
mov
call
test
je
xor
jmp
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
xor
mov
call
test
jne
cmp
je
xor
mov
cmp
jge
mov
mov
sub
dec
jle
xor
mov
cmp
jne
mov
xor
mov
cmp
jne
xor
mov
call
test
je
mov
mov
cmp
je
mov
mov
call
jmp
lea
mov
cmp
jne
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
test
je
cmp
je
mov
call
cmp
ja
mov
mov
jmp
mov
mov
call
mov
jmp
xor
mov
cmp
jne
test
jne
mov
jmp
mov
sub
mov
mov
cmp
je
mov
mov
call
jmp
lea
mov
cmp
jne
test
jne
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
push
mov
xor
mov
call
mov
xor
mov
cmp
jl
xor
mov
cmp
jg
xor
mov
call
test
jne
xor
jmp
mov
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
test
je
xor
mov
push
push
push
call
add
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
lea
mov
call
mov
test
je
lea
mov
call
mov
test
je
sub
inc
jmp
mov
call
mov
mov
mov
mov
call
mov
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
xor
mov
cmp
je
mov
mov
mov
call
jmp
mov
mov
call
mov
test
je
lea
call
cmp
mov
je
mov
test
je
mov
mov
call
mov
test
je
test
jne
lea
call
mov
cmp
je
mov
mov
pop
pop
pop
pop
pop
pop
ret
nop
xor
mov
ret
nop
nop
nop
push
mov
add
push
mov
lea
push
push
call
lea
push
lea
push
call
movzx
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
mov
dec
mov
mov
jmp
mov
add
inc
cmp
jb
cmp
jbe
mov
call
test
je
inc
mov
lea
push
lea
push
call
mov
sub
mov
mov
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
push
push
call
mov
add
mov
cmp
jae
inc
push
lea
push
call
pop
pop
mov
pop
ret
nop
push
mov
add
cmp
jne
xor
xor
jmp
lea
call
mov
xor
mov
xor
push
push
mov
xor
add
adc
add
pop
pop
pop
ret
nop
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
mov
ret
nop
nop
push
push
mov
mov
mov
call
push
push
mov
call
cmp
jne
cmp
setb
jmp
setl
and
add
pop
pop
ret
push
push
mov
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
jmp
mov
pop
pop
ret
mov
mov
shl
shr
or
mov
shl
or
mov
shl
or
mov
mov
shl
sub
shl
or
or
mov
ret
mov
and
add
mov
mov
shr
and
mov
mov
shr
and
mov
mov
shr
and
mov
mov
shr
shr
and
mov
add
mov
xor
mov
ret
nop
push
mov
test
jne
mov
mov
cdq
idiv
test
jne
mov
mov
cdq
idiv
test
je
xor
jmp
mov
pop
ret
nop
push
push
push
mov
mov
mov
call
test
je
test
je
cmp
je
push
push
call
jmp
push
push
call
test
je
mov
mov
mov
call
xor
jmp
call
cmp
je
cmp
jne
mov
jmp
mov
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
call
test
jne
xor
jmp
mov
mov
mov
mov
xor
test
je
mov
sub
cmp
jge
cmp
jne
mov
test
je
cmp
jge
mov
cmp
je
test
jne
cmp
jne
test
je
mov
cmp
je
test
jne
xor
mov
cmp
jne
xor
test
mov
je
lea
mov
mov
call
mov
lea
mov
cmp
je
lea
mov
mov
call
jmp
mov
sub
lea
mov
call
mov
sub
mov
lea
mov
mov
call
test
je
mov
cmp
jne
mov
cmp
je
mov
mov
call
jmp
mov
inc
mov
inc
jmp
cmp
jne
mov
call
movzx
call
test
jne
mov
mov
mov
call
test
je
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
test
je
cmp
je
mov
cmp
setne
and
test
jne
xor
jmp
mov
mov
cmp
je
mov
cmp
setne
and
test
jne
xor
jmp
mov
mov
cmp
je
mov
cmp
setne
and
test
jne
xor
jmp
mov
mov
xor
mov
call
mov
cmp
je
test
jne
xor
jmp
mov
mov
cmp
je
xor
xor
mov
call
push
push
push
push
push
push
push
call
mov
cmp
je
cmp
je
lea
mov
call
cmp
je
lea
mov
call
cmp
je
lea
mov
call
cmp
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
push
push
call
push
call
cmp
je
mov
xor
mov
call
pop
pop
pop
mov
pop
ret
nop
push
push
mov
mov
call
test
je
test
je
cmp
je
push
call
cmp
setne
and
pop
pop
ret
push
call
cmp
setne
and
pop
pop
ret
nop
nop
nop
cmp
je
test
jne
xor
jmp
mov
ret
nop
xor
ret
nop
xor
call
ret
push
push
mov
mov
call
test
je
test
je
cmp
je
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
push
push
mov
mov
mov
call
test
je
test
je
cmp
je
push
push
call
test
setne
and
jmp
push
push
call
test
setne
and
pop
pop
pop
ret
push
mov
add
push
push
mov
mov
lea
push
lea
push
push
push
call
test
je
lea
mov
call
jmp
cmp
je
mov
mov
call
pop
pop
mov
pop
ret
nop
push
push
mov
mov
call
test
je
test
je
cmp
je
push
call
test
setne
and
jmp
push
call
test
setne
and
pop
pop
ret
nop
nop
test
jne
mov
jmp
mov
mov
ret
mov
call
mov
ret
push
push
call
ret
push
push
call
ret
push
push
mov
mov
push
push
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
push
push
push
mov
mov
mov
push
push
push
push
push
push
call
add
pop
pop
pop
ret
nop
cmp
jne
mov
ret
call
ret
nop
nop
nop
xor
jmp
cmp
jb
cmp
jbe
xor
ret
inc
cmp
jne
mov
ret
nop
nop
nop
xor
jmp
cmp
jb
cmp
jbe
xor
ret
inc
cmp
jne
mov
ret
call
ret
nop
nop
push
push
mov
mov
test
jbe
mov
mov
dec
call
mov
mov
pop
pop
ret
nop
nop
push
mov
add
push
mov
push
push
cmp
mov
mov
jne
xor
jmp
lea
mov
call
test
je
mov
xor
push
add
push
mov
xor
call
mov
call
jmp
movzx
add
xor
push
add
push
mov
xor
call
mov
mov
call
test
je
mov
mov
mov
call
test
jne
xor
jmp
mov
push
lea
mov
call
pop
jmp
cmp
jle
mov
push
push
push
call
test
je
lea
mov
call
xor
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
cmp
setg
and
push
lea
mov
call
pop
pop
pop
pop
mov
pop
ret
nop
nop
cmp
jle
sub
call
ret
mov
ret
nop
nop
push
mov
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
pop
pop
pop
ret
nop
nop
cmp
jle
sub
call
ret
mov
ret
nop
nop
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
add
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
nop
nop
push
mov
add
push
mov
push
push
test
setne
and
mov
mov
mov
mov
mov
xor
call
test
jne
xor
jmp
cmp
mov
je
mov
mov
cdq
idiv
mov
lea
lea
call
mov
mov
mov
call
mov
mov
mov
shl
lea
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
lea
mov
call
mov
mov
call
lea
mov
call
jmp
test
je
xor
mov
call
lea
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
push
mov
mov
mov
add
call
mov
cmp
jne
test
je
mov
call
mov
mov
mov
pop
pop
ret
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
push
mov
mov
mov
call
mov
mov
call
cmp
je
mov
add
mov
mov
call
pop
pop
ret
nop
nop
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
ret
nop
nop
nop
push
push
push
mov
mov
mov
call
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
lea
call
lea
call
lea
call
lea
call
lea
call
lea
lea
call
lea
call
lea
call
lea
call
lea
call
test
jne
lea
jmp
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
call
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
mov
call
test
jne
mov
call
push
add
push
call
add
mov
mov
call
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jne
xor
jmp
xor
mov
call
test
jne
mov
call
push
lea
push
call
add
mov
call
xor
jmp
mov
pop
pop
pop
ret
nop
nop
nop
xor
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
ret
nop
push
mov
add
mov
push
mov
push
push
mov
lea
mov
mov
call
cmp
je
xor
jmp
xor
mov
lea
mov
call
test
je
cmp
je
push
push
xor
mov
call
jmp
lea
mov
call
mov
call
mov
mov
mov
mov
add
call
mov
xor
cmp
jle
mov
xor
mov
cmp
jne
mov
mov
add
call
test
je
cmp
je
test
jle
cmp
jge
cmp
jle
mov
sub
add
xor
mov
cmp
jne
xor
mov
cmp
jne
xor
mov
cmp
jne
movzx
cmp
jne
add
xor
mov
mov
push
push
mov
xor
call
cmp
jne
lea
mov
mov
call
jmp
inc
cmp
jg
cmp
jne
xor
push
lea
mov
call
pop
jmp
lea
mov
call
mov
call
mov
call
mov
cmp
je
mov
call
push
lea
push
call
add
call
cmp
jne
xor
jmp
test
setne
and
mov
test
setne
and
mov
test
setne
and
mov
test
setne
and
mov
cmp
setne
and
mov
test
setne
and
mov
test
setne
and
mov
cmp
jbe
mov
mov
call
xor
jmp
cmp
je
test
je
xor
jmp
mov
mov
cmp
je
cmp
jne
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
lea
call
test
sete
and
test
je
mov
test
jne
cmp
je
test
jne
mov
jmp
cmp
jne
test
jne
cmp
je
cmp
jb
test
jne
mov
jmp
mov
call
mov
call
test
jne
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
cmp
jne
lea
lea
call
lea
lea
call
mov
pop
pop
pop
mov
pop
ret
nop
push
push
mov
mov
mov
call
mov
cmp
jne
test
je
mov
call
mov
mov
mov
pop
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
push
xor
call
ret
push
mov
push
push
push
push
mov
mov
test
je
lea
mov
lea
call
lea
mov
lea
call
lea
mov
call
xor
mov
call
test
je
push
call
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
xor
mov
jmp
inc
mov
test
jne
call
cmp
jne
mov
jmp
mov
call
mov
call
mov
test
je
cmp
je
cmp
jne
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
jmp
cmp
jne
mov
lea
mov
call
test
sete
and
test
je
mov
jmp
mov
call
mov
call
mov
test
je
cmp
jne
xor
pop
pop
pop
pop
pop
ret
push
mov
add
push
add
push
push
push
mov
mov
call
mov
mov
lea
mov
call
cmp
je
mov
add
xor
cmp
jne
cmp
jbe
jmp
jle
xor
jmp
mov
mov
cmp
je
lea
mov
mov
call
cmp
je
xor
push
lea
mov
call
pop
jmp
mov
cmp
jne
push
lea
mov
mov
add
call
test
jne
mov
call
mov
mov
call
push
push
cmp
setae
and
lea
push
lea
mov
add
call
lea
mov
lea
mov
call
cmp
jne
mov
call
mov
mov
mov
mov
cmp
jne
cmp
ja
jmp
jg
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
call
push
add
push
call
add
mov
mov
call
xor
push
lea
mov
call
pop
jmp
lea
lea
call
lea
lea
call
xor
mov
mov
lea
lea
call
lea
lea
call
cmp
jae
push
mov
call
push
lea
push
call
mov
add
mov
mov
call
xor
push
lea
mov
call
pop
jmp
cmp
jne
lea
mov
call
jmp
cmp
jne
test
je
lea
mov
call
jmp
movzx
add
lea
call
movzx
cdq
add
adc
mov
mov
mov
sub
je
dec
je
sub
je
dec
je
jmp
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
lea
call
test
je
lea
lea
call
jmp
mov
mov
mov
mov
mov
mov
test
je
lea
lea
call
test
je
lea
lea
call
jmp
cmp
jne
lea
jmp
lea
mov
mov
mov
mov
mov
mov
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
lea
lea
call
test
je
lea
lea
call
lea
lea
call
jmp
xor
mov
mov
cmp
jne
xor
mov
mov
mov
xor
mov
xor
push
push
mov
xor
add
adc
add
mov
mov
mov
xor
mov
xor
push
push
mov
xor
add
adc
add
mov
mov
cmp
jae
movzx
jmp
mov
lea
lea
mov
call
mov
lea
lea
mov
call
cmp
jne
movzx
movzx
sub
add
test
je
sub
test
jle
lea
mov
call
lea
mov
mov
call
mov
lea
call
test
sete
and
test
je
mov
xor
add
xor
mov
mov
shl
add
xor
mov
movzx
shl
shl
add
add
mov
jmp
cmp
jne
test
je
lea
call
lea
call
movzx
cmp
jne
lea
lea
mov
call
lea
lea
mov
call
lea
lea
call
jmp
movzx
inc
lea
sub
push
lea
add
push
lea
push
lea
call
cmp
jne
and
jmp
mov
mov
call
test
je
lea
lea
mov
call
lea
mov
call
xor
xor
mov
xor
mov
mov
test
je
lea
lea
call
lea
lea
mov
mov
lea
lea
mov
mov
xor
mov
mov
mov
mov
mov
sub
shl
movzx
sar
test
je
cmp
je
lea
lea
call
mov
mov
call
mov
push
push
mov
lea
mov
rep
pop
pop
test
je
inc
xor
and
mov
mov
xor
cmp
jge
lea
lea
call
lea
xor
sub
mov
shl
shl
or
inc
cmp
jl
mov
push
mov
lea
mov
rep
pop
inc
cmp
jl
mov
mov
add
adc
test
setne
and
mov
lea
mov
call
not
and
mov
mov
cmp
je
cmp
jne
mov
lea
call
mov
mov
mov
call
lea
call
push
mov
call
push
lea
push
call
add
jmp
test
je
lea
lea
call
mov
xor
add
adc
lea
xor
call
not
and
mov
mov
mov
cmp
je
mov
sub
add
cdq
add
adc
mov
cmp
je
mov
cmp
jne
test
je
lea
mov
call
mov
call
mov
mov
mov
mov
sub
sbb
push
push
xor
mov
call
mov
xor
mov
call
test
je
mov
inc
cmp
jl
lea
mov
call
cmp
jne
lea
mov
push
call
push
lea
push
call
add
mov
call
mov
mov
mov
call
xor
push
lea
mov
call
pop
jmp
mov
mov
cmp
jne
cmp
ja
jmp
jg
push
mov
call
push
lea
push
call
mov
add
mov
mov
call
xor
push
lea
mov
call
pop
jmp
mov
push
lea
mov
call
pop
pop
pop
pop
mov
pop
ret
nop
nop
movzx
and
cmp
sete
and
mov
ret
nop
nop
cmp
ja
test
jne
xor
jmp
mov
ret
mov
sub
jb
je
sub
je
jmp
movzx
and
cmp
jne
mov
ret
mov
ret
movzx
and
cmp
jne
mov
ret
mov
ret
nop
nop
push
push
push
mov
cmp
jae
test
je
or
cmp
jb
movzx
and
cmp
jne
mov
jmp
mov
lea
jmp
xor
mov
cmp
je
xor
mov
cmp
jne
mov
mov
cmp
je
mov
mov
call
jmp
lea
mov
cmp
jne
lea
jmp
cmp
je
cmp
jne
mov
add
cmp
jne
pop
pop
pop
ret
push
mov
push
mov
add
push
dec
jne
add
mov
push
mov
push
mov
mov
mov
cmp
je
mov
call
push
add
push
call
add
mov
mov
call
xor
jmp
cmp
jb
cmp
ja
cmp
jbe
mov
call
push
add
push
call
add
xor
jmp
cmp
jne
test
jne
mov
jmp
lea
call
lea
lea
call
lea
xor
call
test
jne
mov
mov
call
mov
mov
lea
mov
call
test
je
mov
cmp
je
test
je
lea
jmp
xor
push
push
cmp
setae
and
push
lea
mov
add
xor
mov
call
jmp
xor
push
lea
mov
call
pop
jmp
mov
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
test
setne
and
mov
lea
lea
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
xor
push
push
lea
call
jmp
xor
mov
lea
xor
call
mov
not
cmp
je
lea
push
mov
call
push
add
push
call
add
mov
mov
call
cmp
je
mov
call
xor
push
lea
mov
call
pop
jmp
mov
push
lea
mov
call
pop
pop
pop
mov
pop
ret
nop
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
mov
call
xor
mov
call
test
je
push
call
pop
pop
pop
ret
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
push
call
pop
mov
test
je
mov
call
jmp
mov
mov
pop
pop
ret
push
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
xor
lea
mov
mov
mov
mov
mov
call
pop
ret
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
mov
xor
push
call
mov
mov
mov
call
jmp
xor
mov
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
push
mov
mov
push
push
mov
mov
mov
call
test
je
mov
pop
pop
ret
mov
cmp
jne
xor
pop
pop
ret
push
push
mov
mov
mov
call
test
je
xor
pop
pop
ret
mov
pop
pop
ret
nop
push
mov
add
push
mov
push
push
mov
lea
mov
call
cmp
jae
lea
call
cmp
jl
xor
jmp
lea
xor
mov
call
test
je
xor
jmp
mov
call
mov
jmp
lea
mov
mov
call
test
je
cmp
je
lea
mov
call
test
mov
sete
and
mov
mov
jmp
inc
lea
lea
mov
call
test
jne
xor
pop
pop
pop
mov
pop
ret
mov
call
ret
push
mov
push
push
push
mov
mov
mov
push
mov
mov
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
xor
mov
xor
test
je
mov
shr
xor
jmp
mov
shr
mov
inc
cmp
jl
mov
inc
cmp
jl
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
mov
jne
call
mov
jmp
mov
xor
xor
dec
mov
shr
mov
xor
inc
mov
test
jbe
test
jne
cmp
jb
xor
xor
mov
sub
shr
mov
xor
xor
mov
mov
shr
mov
xor
xor
mov
mov
shr
mov
xor
xor
mov
mov
shr
mov
xor
xor
mov
xor
add
mov
shr
mov
xor
xor
mov
mov
shr
mov
xor
xor
mov
mov
shr
mov
xor
xor
mov
mov
shr
mov
xor
cmp
mov
jae
xor
mov
jmp
mov
mov
shr
xor
and
mov
xor
mov
inc
cmp
ja
mov
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
call
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
cmp
je
cmp
jne
xor
xor
imul
add
mov
call
test
jne
cmp
jne
imul
cmp
je
cmp
je
imul
cmp
je
imul
add
mov
mov
call
test
jne
imul
mov
cmp
jne
imul
add
mov
add
mov
call
imul
add
mov
add
mov
call
mov
jmp
inc
cmp
jl
test
jne
lea
mov
mov
call
mov
lea
lea
mov
call
lea
call
mov
add
cmp
je
lea
add
mov
mov
call
add
lea
call
xor
mov
lea
push
lea
mov
call
mov
mov
sar
mov
sar
mov
mov
lea
mov
mov
push
lea
call
mov
and
jns
dec
or
inc
test
jne
push
lea
lea
mov
rep
pop
lea
lea
mov
call
mov
test
jns
add
sar
mov
mov
mov
inc
cmp
jl
lea
lea
mov
call
xor
xor
mov
shl
mov
shr
mov
lea
mov
inc
cmp
jl
inc
cmp
jl
imul
add
mov
call
cmp
setne
imul
and
mov
cmp
jne
imul
add
mov
mov
call
imul
mov
mov
mov
imul
add
mov
add
call
imul
add
mov
add
mov
call
mov
inc
and
mov
mov
add
push
xor
cmp
jne
inc
mov
mov
add
call
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
add
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jne
lea
jmp
lea
mov
cmp
je
cmp
jne
mov
test
jne
xor
jmp
mov
mov
test
je
cmp
je
mov
cmp
jb
mov
cmp
je
mov
mov
mov
not
cmp
je
mov
mov
add
push
call
push
lea
push
call
add
mov
call
mov
mov
mov
call
mov
lea
lea
call
test
je
cmp
jne
xor
jmp
mov
lea
call
cmp
je
lea
lea
call
lea
call
mov
jmp
dec
lea
cmp
jbe
xor
mov
call
test
je
xor
mov
call
test
jne
lea
cmp
jbe
dec
lea
call
lea
mov
sub
sub
mov
lea
call
sub
test
jle
mov
lea
add
add
mov
sub
mov
dec
call
mov
mov
mov
jmp
cmp
jne
lea
lea
call
lea
mov
call
mov
push
push
lea
xor
mov
call
test
je
lea
lea
call
mov
jmp
mov
cmp
jne
lea
call
test
jne
mov
jmp
mov
push
push
lea
lea
mov
call
test
je
cmp
je
mov
call
push
lea
push
call
add
lea
lea
mov
push
push
call
push
push
xor
mov
call
xor
jmp
mov
mov
call
mov
xor
mov
cmp
je
add
lea
call
cmp
je
mov
mov
call
jmp
mov
call
cmp
jne
mov
call
mov
mov
sub
sbb
push
push
xor
mov
call
test
je
cmp
jne
mov
jmp
mov
test
setne
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
test
jne
xor
ret
mov
ret
nop
push
mov
cmp
jne
mov
call
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
xor
mov
and
mov
shr
lea
lea
push
mov
pop
mov
inc
cmp
jb
xor
mov
mov
inc
cmp
jl
lea
mov
call
cmp
jne
mov
call
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
mov
test
je
test
jg
xor
jmp
mov
add
lea
mov
call
test
jns
add
sar
mov
mov
test
jle
lea
mov
mov
call
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
dec
test
jg
lea
mov
add
mov
call
mov
shl
pop
pop
mov
pop
ret
nop
nop
push
push
push
push
add
mov
mov
xor
mov
lea
mov
call
xor
xor
xor
jmp
jmp
xor
mov
mov
shl
lea
lea
mov
lea
mov
inc
cmp
jl
inc
inc
cmp
jge
cmp
jl
cmp
jne
inc
xor
cmp
jge
cmp
jle
cmp
jg
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
inc
cmp
je
mov
cmp
jge
xor
lea
lea
mov
xor
inc
cmp
jl
inc
cmp
jl
jmp
mov
jmp
xor
lea
lea
mov
xor
inc
cmp
jl
inc
mov
sar
jns
adc
cmp
jl
mov
sar
jns
adc
xor
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
mov
inc
cmp
jge
xor
lea
lea
mov
xor
inc
cmp
jl
inc
cmp
jl
xor
jmp
jmp
xor
mov
shl
mov
lea
lea
lea
lea
mov
mov
inc
cmp
jl
inc
inc
cmp
jge
cmp
jl
cmp
jne
inc
xor
cmp
jge
cmp
jle
cmp
jle
add
pop
pop
pop
pop
ret
nop
nop
nop
push
push
push
add
mov
mov
xor
xor
mov
mov
shl
add
shl
add
xor
add
movzx
mov
lea
lea
mov
xor
movzx
movzx
lea
lea
xor
xor
lea
mov
inc
cmp
jl
inc
cmp
jl
mov
lea
shl
mov
add
add
call
inc
cmp
jl
add
pop
pop
pop
ret
nop
nop
nop
push
push
push
add
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
lea
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
lea
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
lea
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
xor
mov
shl
add
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
mov
shl
dec
add
mov
add
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
movzx
movzx
shl
add
mov
movzx
shl
add
mov
movzx
shl
shl
add
mov
add
mov
mov
xor
mov
xor
mov
xor
mov
lea
movzx
movzx
shl
add
mov
movzx
shl
add
mov
movzx
shl
shl
add
mov
add
mov
mov
xor
mov
xor
mov
xor
mov
lea
movzx
movzx
shl
add
mov
movzx
shl
add
mov
movzx
shl
shl
add
mov
add
mov
mov
xor
mov
xor
mov
xor
mov
lea
movzx
movzx
shl
add
mov
movzx
shl
add
mov
movzx
shl
shl
add
mov
add
mov
mov
xor
mov
xor
mov
xor
cmp
mov
jg
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
movzx
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
xor
mov
add
pop
pop
pop
ret
nop
push
push
push
add
mov
xor
mov
mov
mov
mov
mov
mov
inc
add
mov
test
jne
add
xor
xor
cmp
jne
xor
mov
mov
mov
add
mov
test
jne
add
xor
mov
inc
cmp
jl
xor
test
je
xor
mov
xor
mov
mov
sub
movzx
jmp
xor
mov
mov
shl
add
xor
mov
shl
xor
mov
shl
xor
xor
mov
sar
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
xor
mov
movzx
mov
jmp
xor
mov
mov
mov
mov
test
je
and
movzx
mov
jmp
xor
mov
mov
mov
mov
and
mov
mov
mov
shl
add
xor
mov
shl
xor
mov
mov
mov
sar
xor
xor
je
mov
and
mov
mov
shl
add
xor
mov
shl
xor
mov
mov
sar
mov
xor
mov
xor
and
movzx
sub
mov
jmp
xor
mov
test
je
xor
mov
movzx
mov
jmp
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
test
je
xor
mov
movzx
mov
jmp
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
test
je
xor
mov
movzx
mov
jmp
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
test
je
xor
mov
movzx
mov
jmp
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jl
add
pop
pop
pop
ret
push
mov
add
cmp
jne
mov
lea
push
push
call
push
call
test
je
mov
mov
lea
push
push
push
call
test
je
push
push
push
lea
push
push
push
call
test
je
call
test
jne
mov
lea
push
push
push
call
test
je
push
push
push
lea
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
push
mov
add
push
mov
mov
mov
call
test
je
lea
call
lea
xor
mov
call
test
jne
lea
mov
call
jmp
call
mov
cmp
je
or
cmp
mov
je
push
push
push
call
jmp
push
push
push
call
test
jne
push
mov
call
push
add
push
call
add
mov
call
mov
mov
call
lea
mov
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
mov
call
test
je
test
je
cmp
je
lea
mov
call
jmp
lea
mov
mov
call
cmp
je
cmp
jne
mov
lea
call
lea
lea
call
jmp
lea
lea
call
lea
call
mov
mov
lea
add
mov
add
mov
mov
mov
sar
jns
adc
mov
lea
call
add
cmp
jl
mov
mov
call
jmp
mov
mov
mov
call
mov
mov
cmp
je
mov
mov
call
jmp
lea
lea
call
lea
call
lea
call
lea
call
push
lea
mov
mov
call
mov
test
je
mov
and
mov
mov
call
lea
lea
mov
call
lea
call
lea
lea
lea
call
test
je
lea
xor
mov
call
test
je
lea
call
lea
call
cmp
je
push
push
lea
mov
mov
call
test
je
lea
push
lea
push
lea
push
push
call
mov
mov
mov
call
lea
mov
call
lea
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
mov
lea
call
test
sete
and
test
je
mov
mov
mov
call
mov
lea
call
test
sete
and
test
je
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
test
je
mov
mov
mov
call
jmp
mov
cmp
jne
xor
xor
lea
mov
mov
lea
cdq
idiv
lea
mov
mov
lea
cdq
idiv
lea
mov
mov
lea
cdq
idiv
lea
mov
mov
lea
cdq
idiv
lea
mov
inc
test
je
lea
jmp
mov
mov
cmp
jl
mov
xor
mov
mov
mov
inc
cmp
jl
xor
mov
mov
shr
mov
shl
or
mov
shl
and
shr
or
lea
and
or
lea
mov
mov
mov
mov
xor
lea
mov
and
lea
mov
xor
lea
add
lea
mov
mov
mov
mov
shr
shl
or
add
lea
add
mov
add
lea
mov
mov
lea
shl
mov
mov
shr
or
lea
mov
mov
inc
cmp
jl
mov
lea
lea
and
and
mov
lea
and
xor
lea
and
xor
mov
and
xor
lea
and
add
mov
xor
lea
and
xor
mov
and
xor
lea
shr
or
mov
and
mov
lea
mov
mov
mov
xor
lea
mov
and
lea
mov
xor
lea
add
lea
mov
mov
mov
mov
shr
shl
or
add
lea
add
mov
add
lea
mov
mov
lea
shl
mov
mov
shr
or
lea
mov
mov
inc
cmp
jl
mov
lea
lea
and
and
mov
lea
and
xor
lea
and
xor
mov
and
xor
lea
and
add
mov
xor
lea
and
xor
mov
and
xor
lea
shr
or
mov
and
mov
lea
mov
mov
mov
xor
lea
mov
xor
lea
add
lea
mov
mov
mov
mov
shr
shl
or
add
lea
add
mov
add
lea
mov
mov
lea
shl
mov
mov
shr
or
lea
mov
mov
inc
cmp
jl
mov
lea
lea
lea
and
mov
mov
mov
lea
mov
or
lea
mov
and
lea
mov
mov
and
lea
or
lea
and
and
mov
xor
lea
and
xor
mov
and
xor
lea
and
add
mov
xor
lea
and
xor
mov
and
xor
shr
or
mov
and
add
mov
lea
lea
mov
mov
mov
shl
mov
shr
or
add
lea
add
mov
add
lea
mov
mov
lea
shl
mov
mov
shr
or
lea
mov
mov
inc
cmp
jl
mov
lea
lea
and
and
mov
lea
and
xor
lea
and
xor
mov
and
xor
lea
and
add
mov
xor
lea
and
xor
mov
and
xor
lea
shr
or
mov
and
mov
lea
mov
mov
mov
xor
lea
mov
xor
lea
add
lea
mov
mov
mov
mov
shr
shl
or
add
lea
add
mov
add
lea
mov
mov
lea
shl
mov
mov
shr
or
lea
mov
mov
inc
cmp
jl
xor
mov
mov
add
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
mov
xor
mov
mov
mov
mov
mov
mov
ret
nop
push
mov
push
push
push
push
mov
mov
mov
mov
shl
mov
shr
and
add
mov
cmp
jbe
inc
mov
shr
add
lea
cmp
jbe
mov
mov
sub
add
add
mov
call
lea
mov
mov
call
jmp
mov
add
mov
mov
call
add
lea
cmp
ja
xor
jmp
xor
cmp
jae
mov
sub
mov
add
add
add
mov
call
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
lea
push
mov
xor
mov
mov
mov
mov
and
mov
sub
shl
xor
cmp
jae
inc
mov
shr
and
mov
mov
inc
cmp
jb
mov
mov
lea
push
mov
mov
call
jmp
mov
mov
mov
push
lea
mov
call
mov
and
cmp
jne
mov
mov
push
lea
mov
call
xor
mov
mov
mov
mov
and
mov
inc
cmp
jb
mov
mov
xor
call
lea
mov
xor
call
lea
mov
xor
call
mov
xor
mov
call
lea
mov
xor
call
lea
mov
xor
call
cmp
je
lea
mov
mov
call
pop
pop
pop
mov
pop
ret
nop
push
mov
mov
call
xor
mov
mov
pop
ret
nop
push
push
mov
mov
test
je
push
call
pop
xor
mov
call
test
je
push
call
pop
pop
pop
ret
nop
nop
push
mov
cmp
jne
push
call
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
push
push
mov
mov
push
mov
lea
lea
call
cmp
jge
mov
jmp
mov
test
je
mov
add
mov
mov
call
mov
sub
cmp
jbe
mov
jmp
mov
sub
test
je
mov
add
add
mov
mov
xchg
call
mov
xor
mov
cmp
je
mov
jmp
mov
mov
mov
mov
call
test
jne
mov
mov
mov
mov
mov
and
and
lea
cmp
jb
xor
mov
mov
add
mov
mov
lea
call
mov
cmp
jae
mov
mov
jmp
mov
test
je
lea
lea
call
lea
mov
add
mov
call
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
lea
cmp
jne
mov
mov
mov
add
and
add
jmp
mov
lea
cmp
jne
mov
mov
add
and
add
jmp
mov
mov
mov
cmp
ja
jmp
mov
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
inc
add
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
adc
add
adc
add
retf
or
add
push
xor
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
mov
sub
test
jne
mov
jmp
cmp
setb
and
and
or
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
xor
mov
jmp
mov
add
cmp
mov
je
and
cmp
setb
and
test
jne
mov
jmp
test
je
mov
jmp
xor
or
mov
jmp
cmp
setb
and
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
xor
mov
jmp
mov
mov
sub
test
jne
mov
jmp
cmp
mov
seta
and
and
or
mov
cmp
je
mov
jmp
mov
jmp
test
je
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
jne
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
cmp
je
xor
mov
jmp
mov
inc
cmp
je
and
cmp
je
mov
jmp
mov
test
jne
mov
jmp
mov
and
mov
jmp
cmp
je
xor
mov
jmp
mov
dec
cmp
je
mov
jmp
mov
test
jne
mov
jmp
mov
and
mov
jmp
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
xor
mov
test
jne
mov
jmp
mov
and
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
and
mov
test
jne
mov
jmp
mov
and
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
or
mov
test
jne
mov
jmp
mov
and
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
and
mov
cmp
jne
mov
jmp
mov
and
mov
jmp
test
je
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
jne
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
je
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
je
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
jne
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
test
jne
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
sub
mov
and
mov
mov
mov
jmp
mov
and
mov
mov
mov
add
jmp
sub
mov
sub
mov
cdq
idiv
inc
mov
and
mov
mov
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
shl
lea
add
jmp
cmp
je
cmp
je
mov
jmp
mov
not
mov
jmp
cmp
je
xor
mov
jmp
mov
not
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
xor
mov
jmp
mov
mov
mov
mov
shl
mov
dec
mov
shl
test
je
mov
jmp
xor
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
xor
mov
jmp
mov
mov
mov
mov
shr
mov
dec
mov
shr
and
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
xor
mov
jmp
mov
mov
mov
mov
sar
mov
dec
mov
shr
and
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
neg
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
mov
xor
mov
sub
mov
and
mov
add
mov
mov
inc
sub
cmp
jl
sub
jmp
mov
xor
mov
mov
and
mov
push
mov
sub
pop
mov
inc
add
cmp
jb
jmp
sub
mov
and
mov
mov
mov
jmp
mov
and
mov
mov
mov
add
jmp
movzx
mov
jmp
movsx
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
mov
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
cmp
je
xor
mov
jmp
mov
imul
mov
cmp
je
mov
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
cmp
je
cmp
je
xor
mov
jmp
mov
xor
div
mov
cmp
je
mov
mov
jmp
mov
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
mov
and
mov
cmp
je
xor
mov
jmp
mov
add
add
cmp
mov
je
and
cmp
jb
cmp
jne
cmp
jne
xor
jmp
mov
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
je
xor
mov
jmp
mov
mov
mov
and
mov
cmp
je
xor
mov
jmp
mov
mov
sub
sub
cmp
je
and
cmp
ja
cmp
jne
cmp
jne
xor
jmp
mov
test
jne
mov
jmp
mov
and
or
mov
cmp
je
mov
jmp
mov
jmp
cmp
jb
mov
jmp
mov
and
mov
mov
cmp
jb
mov
jmp
dec
mov
test
jg
xor
jmp
mov
and
mov
mov
shl
lea
add
add
jmp
mov
mov
call
add
dec
jmp
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
call
mov
mov
cmp
jge
mov
xor
inc
cmp
jl
mov
mov
call
xor
mov
mov
cmp
jne
mov
mov
mov
call
mov
test
je
mov
mov
call
mov
mov
shl
inc
lea
add
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
mov
call
test
je
mov
call
inc
mov
xor
jmp
lea
mov
call
mov
call
shr
mov
mov
mov
mov
call
inc
mov
cmp
jge
cmp
jl
jmp
mov
mov
call
mov
mov
shl
lea
add
call
test
jne
shr
mov
mov
mov
call
jmp
shr
sub
mov
mov
mov
call
mov
test
je
mov
call
shr
setne
and
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
xor
mov
and
mov
xor
mov
mov
cmp
jle
lea
mov
mov
call
cmp
jne
lea
mov
mov
call
jmp
cmp
jne
mov
test
je
mov
cmp
jl
sub
jmp
cmp
jl
sub
jmp
cmp
jl
sub
jmp
cmp
jl
sub
add
mov
inc
mov
cmp
jl
mov
mov
call
mov
inc
mov
shl
lea
add
mov
mov
lea
mov
lea
mov
mov
mov
mov
xor
jmp
mov
shl
lea
add
cmp
jne
lea
mov
cmp
jne
lea
mov
inc
cmp
jl
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
shl
lea
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
mov
call
test
je
shr
xor
mov
and
mov
mov
mov
mov
shl
add
add
mov
call
jmp
test
jne
mov
cmp
je
shr
and
mov
mov
mov
call
jmp
mov
mov
call
mov
call
mov
jmp
test
mov
jne
shr
and
mov
mov
mov
shl
add
add
xor
mov
mov
mov
call
jmp
test
jne
shr
mov
and
mov
mov
mov
shl
add
add
mov
call
jmp
xor
mov
mov
mov
call
mov
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
call
mov
mov
and
sub
jb
sub
je
sub
je
jmp
mov
mov
call
mov
shr
and
pop
pop
ret
test
jne
shr
mov
and
mov
or
call
jmp
shr
and
mov
mov
call
mov
pop
pop
ret
mov
mov
call
mov
call
mov
mov
mov
call
mov
pop
pop
ret
mov
mov
call
mov
call
mov
shl
mov
mov
call
mov
call
or
mov
mov
call
mov
pop
pop
ret
push
mov
push
push
mov
cmp
jae
mov
add
cmp
je
mov
mov
sub
add
cmp
jb
mov
sub
mov
xchg
call
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
push
mov
lea
mov
rep
pop
mov
mov
or
call
mov
xor
xor
lea
cmp
jne
lea
cmp
jne
lea
mov
jmp
inc
cmp
jl
xor
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmp
ja
jmp
popa
retf
test
inc
add
inc
add
mov
les
cwde
leave
inc
add
clc
mov
mov
mov
mov
cmp
jge
cmp
jl
mov
cmp
mov
je
dec
mov
xor
mov
jmp
mov
inc
mov
mov
inc
cmp
je
mov
cmp
jne
mov
add
mov
mov
mov
mov
cmp
jge
mov
add
test
jl
mov
mov
add
mov
jmp
cmp
jge
mov
mov
sub
mov
add
add
mov
add
cmp
jg
jmp
mov
mov
mov
mov
mov
mov
cmp
jge
cmp
jl
xor
mov
shr
jmp
mov
xor
mov
and
add
mov
cmp
jl
mov
mov
mov
cmp
je
xor
mov
mov
mov
shl
xor
mov
and
je
imul
add
mov
push
mov
add
mov
mov
call
mov
cmp
jne
push
mov
mov
mov
add
call
mov
mov
mov
add
push
push
mov
mov
sub
and
call
inc
cmp
jle
add
add
inc
mov
add
cmp
jg
jmp
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jge
xor
mov
mov
cmp
jge
xor
mov
add
cmp
jge
mov
inc
mov
sub
mov
mov
add
cmp
jl
inc
mov
cmp
jl
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jge
cmp
jl
xor
mov
xor
mov
cmp
jge
mov
sub
cmp
jl
add
xor
mov
mov
movzx
mov
add
sub
mov
sub
mov
mov
cdq
xor
sub
mov
mov
sub
sub
mov
mov
cdq
xor
sub
mov
mov
mov
mov
cdq
xor
sub
cmp
jg
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
and
mov
inc
add
cmp
jl
inc
cmp
jl
mov
mov
mov
add
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
add
mov
cmp
jl
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jge
xor
mov
mov
cmp
jge
xor
xor
mov
mov
xor
xor
mov
mov
xor
xor
mov
mov
xor
xor
lea
mov
call
mov
xor
mov
mov
mov
cmp
jge
mov
mov
sub
mov
mov
mov
mov
imul
mov
imul
shl
add
mov
imul
add
mov
inc
add
xor
mov
mov
mov
add
shr
push
pop
and
sub
mov
mov
sub
movsx
mov
mov
movsx
shl
mov
mov
cdq
xor
sub
add
mov
sub
mov
mov
cdq
xor
sub
add
lea
mov
mov
cdq
xor
sub
add
mov
sub
mov
mov
cdq
xor
sub
add
mov
add
mov
mov
cdq
xor
sub
add
mov
sub
add
mov
mov
cdq
xor
sub
add
mov
mov
cdq
xor
sub
add
test
jne
xor
xor
mov
mov
mov
cmp
jbe
mov
mov
xor
mov
inc
cmp
jl
cmp
ja
jmp
push
leave
inc
add
enter
leave
inc
add
leave
inc
add
leave
inc
add
inc
add
push
jl
dec
jmp
cmp
jge
inc
jmp
cmp
jl
dec
jmp
cmp
jge
inc
jmp
cmp
jl
dec
jmp
cmp
jge
inc
mov
add
inc
mov
cmp
jl
inc
mov
cmp
jl
jmp
mov
xor
mov
mov
mov
mov
cmp
jge
mov
cmp
jge
mov
inc
mov
mov
mov
cmp
jne
mov
inc
mov
mov
mov
cmp
je
add
mov
mov
mov
mov
inc
mov
cmp
jl
mov
mov
sub
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
test
jns
add
sar
mov
mov
inc
xor
and
mov
xor
mov
inc
shl
or
xor
mov
inc
shl
movzx
shl
or
or
mov
shr
mov
or
sub
shr
and
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
mov
test
jns
add
sar
mov
and
mov
sub
or
shr
mov
shl
not
mov
shl
xor
mov
mov
add
and
mov
mov
add
mov
shr
or
or
shr
inc
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
xor
xor
mov
xor
mov
mov
ret
push
mov
add
push
push
push
mov
mov
xor
mov
mov
xor
inc
mov
mov
jmp
cmp
jne
mov
mov
mov
inc
mov
xor
mov
sar
sub
jb
je
dec
je
dec
je
jmp
mov
mov
movzx
mov
inc
inc
jmp
mov
movzx
movzx
shl
inc
add
mov
mov
inc
jmp
mov
mov
movzx
movzx
shl
add
mov
mov
inc
add
jmp
mov
mov
inc
movzx
test
je
mov
mov
inc
and
mov
add
mov
jmp
mov
dec
movzx
movzx
add
movzx
and
shl
add
mov
mov
inc
test
jle
cmp
jl
jmp
add
jmp
mov
mov
dec
movzx
mov
inc
test
jle
cmp
jl
shl
sub
cmp
jge
cmp
jl
cmp
jl
mov
dec
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
mov
call
mov
pop
ret
nop
nop
xor
xor
mov
mov
mov
mov
mov
ret
nop
nop
push
mov
mov
call
mov
mov
call
pop
ret
push
push
mov
mov
cmp
jne
push
mov
call
push
push
call
add
mov
call
mov
mov
call
pop
pop
ret
nop
push
mov
mov
mov
xor
call
mov
mov
call
pop
ret
xor
ret
nop
push
mov
mov
call
mov
mov
call
pop
ret
push
mov
add
push
push
cmp
mov
jne
push
mov
call
push
lea
push
call
add
call
mov
push
mov
call
push
lea
push
push
call
cmp
push
sete
and
call
mov
jmp
xor
pop
pop
mov
pop
ret
nop
push
push
mov
mov
cmp
jne
push
mov
call
push
push
call
add
mov
call
mov
mov
call
pop
pop
ret
nop
mov
call
push
call
pop
ret
nop
nop
mov
xor
call
ret
nop
nop
push
push
push
mov
mov
mov
push
mov
call
push
test
je
cmp
jne
xor
push
call
add
mov
call
pop
pop
pop
ret
mov
xor
call
ret
nop
nop
push
push
push
mov
mov
mov
push
mov
call
push
test
je
cmp
jne
xor
push
call
add
mov
call
pop
pop
pop
ret
push
push
push
mov
mov
mov
push
mov
call
push
push
call
add
mov
call
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
mov
mov
push
mov
call
push
push
call
add
mov
call
pop
pop
pop
ret
nop
nop
nop
call
ret
nop
nop
mov
dec
je
dec
je
sub
je
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
mov
jmp
mov
inc
ret
nop
push
mov
cmp
jne
cmp
je
mov
mov
call
call
call
mov
call
pop
ret
ret
nop
nop
nop
push
push
mov
mov
call
xor
mov
mov
push
call
pop
mov
test
je
mov
mov
call
jmp
mov
mov
xor
mov
call
mov
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
lea
mov
xor
call
test
je
push
call
pop
pop
pop
ret
nop
nop
push
mov
add
push
add
push
push
mov
push
mov
mov
mov
mov
lea
call
lea
call
lea
call
jmp
push
lea
lea
lea
call
test
je
mov
mov
add
adc
push
lea
lea
mov
call
test
jne
mov
call
jmp
lea
lea
call
mov
mov
call
mov
lea
lea
call
dec
jne
jmp
push
lea
lea
lea
call
test
je
mov
mov
add
adc
push
lea
lea
mov
call
test
jne
cmp
jne
xor
mov
cmp
je
cmp
jne
mov
call
push
add
push
call
add
mov
mov
call
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
xor
xor
mov
mov
cmp
je
lea
lea
call
cmp
setne
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
lea
mov
call
lea
lea
lea
call
test
jne
mov
mov
call
xor
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
jmp
lea
mov
call
test
jne
mov
lea
call
test
je
mov
mov
call
xor
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
jmp
cmp
jne
xor
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
jmp
lea
mov
mov
call
xor
mov
cmp
je
xor
mov
cmp
jne
mov
lea
call
cmp
jne
xor
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
jmp
lea
call
mov
mov
lea
push
push
mov
lea
mov
call
test
jne
cmp
je
lea
call
call
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
jmp
jmp
xor
push
lea
mov
call
lea
mov
call
lea
mov
call
lea
xor
call
pop
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
add
push
dec
jne
add
mov
push
push
push
mov
mov
mov
mov
mov
cmp
jg
cmp
je
mov
xor
push
xor
mov
call
test
jne
mov
mov
call
xor
jmp
mov
jmp
xor
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
lea
call
test
sete
and
test
je
mov
cmp
je
cmp
je
lea
jmp
xor
push
lea
mov
mov
call
cmp
jne
test
je
mov
xor
push
xor
mov
call
test
jne
mov
mov
call
xor
jmp
mov
push
push
xor
mov
call
mov
jmp
xor
jmp
mov
call
mov
jmp
mov
cmp
jne
cmp
jne
mov
mov
cmp
ja
cmp
je
xor
jmp
lea
lea
call
lea
lea
call
mov
mov
mov
lea
push
mov
lea
call
test
setne
and
mov
cmp
je
cmp
jne
mov
test
je
call
test
jne
xor
jmp
mov
mov
cmp
je
lea
jmp
xor
mov
cmp
je
lea
lea
call
lea
lea
mov
call
test
je
lea
call
test
je
lea
lea
call
lea
lea
call
mov
call
test
je
mov
jmp
test
je
cmp
je
cmp
jne
cmp
jne
mov
lea
lea
xor
call
mov
dec
cmp
jne
lea
lea
mov
call
jmp
mov
jmp
mov
call
test
jne
cmp
jle
mov
mov
call
test
setne
and
mov
mov
mov
mov
sub
sbb
push
push
xor
mov
call
mov
mov
mov
cmp
jne
mov
mov
test
je
mov
xor
push
lea
mov
cmp
mov
sete
and
call
test
jne
xor
jmp
test
je
cmp
jne
push
lea
lea
mov
call
test
jne
push
call
pop
lea
push
mov
call
push
call
add
mov
xor
jmp
lea
lea
call
lea
mov
mov
cmp
jne
xor
mov
cmp
jne
mov
call
test
jne
xor
jmp
mov
mov
cmp
je
mov
xor
mov
cmp
je
cmp
jne
mov
call
mov
lea
call
jmp
lea
mov
call
xor
mov
call
mov
cmp
je
xor
mov
cmp
jne
xor
mov
call
test
je
xor
mov
cmp
jl
xor
mov
cmp
jg
mov
cmp
je
cmp
je
lea
lea
call
jmp
lea
lea
mov
call
lea
mov
cmp
je
mov
xor
mov
cmp
je
cmp
jne
mov
call
mov
lea
call
jmp
lea
mov
call
cmp
je
cmp
jne
movzx
call
test
je
mov
jmp
mov
cmp
jne
cmp
jne
test
je
xor
jmp
mov
mov
cmp
jne
cmp
je
xor
mov
cmp
je
xor
mov
cmp
jne
lea
call
lea
call
lea
call
push
lea
lea
mov
call
test
je
lea
lea
call
test
je
mov
jmp
cmp
je
mov
test
je
cmp
jne
mov
mov
call
mov
cmp
je
cmp
je
cmp
je
lea
mov
push
call
push
lea
push
call
mov
add
mov
mov
call
lea
call
mov
call
test
jne
mov
call
test
je
cmp
je
xor
mov
cmp
je
xor
mov
cmp
je
cmp
jne
mov
push
lea
mov
call
pop
jmp
cmp
je
mov
push
lea
mov
call
pop
jmp
inc
cmp
je
mov
push
lea
mov
call
pop
jmp
lea
mov
mov
call
mov
test
je
lea
mov
call
mov
cmp
je
lea
mov
call
call
test
jne
push
push
lea
xor
push
lea
push
push
push
mov
call
mov
lea
mov
mov
call
lea
mov
mov
call
test
jne
mov
jmp
cmp
je
lea
mov
mov
call
mov
jmp
lea
push
mov
call
push
lea
push
call
add
mov
call
mov
mov
call
cmp
je
cmp
jne
xor
jmp
lea
push
cmp
jne
xor
jmp
lea
cmp
jne
xor
jmp
lea
lea
call
mov
push
lea
mov
call
pop
jmp
jmp
cmp
je
cmp
je
mov
xor
mov
cmp
je
xor
mov
cmp
jne
cmp
je
cmp
jne
push
push
lea
lea
push
mov
push
push
push
lea
call
test
jne
mov
cmp
jne
lea
lea
mov
call
mov
mov
call
lea
call
test
jne
mov
call
push
lea
push
call
add
lea
lea
mov
call
lea
mov
call
lea
mov
xor
call
push
lea
push
push
mov
push
push
push
lea
lea
call
test
je
mov
jmp
lea
lea
mov
call
cmp
jne
cmp
je
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
mov
cmp
je
lea
call
test
je
lea
mov
push
call
push
lea
push
call
add
lea
lea
mov
call
inc
inc
xor
mov
mov
mov
mov
cmp
jne
dec
mov
mov
test
je
lea
jmp
xor
push
push
cmp
setae
and
push
lea
test
je
xor
mov
jmp
xor
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
shld
shl
cmp
jne
cmp
jbe
jmp
jle
cmp
jne
cmp
jb
jmp
jl
mov
call
cmp
jne
cmp
jbe
jmp
jle
push
push
lea
call
xor
mov
cmp
sbb
neg
mov
cmp
jne
cmp
je
xor
jmp
mov
mov
lea
push
lea
mov
mov
push
mov
call
test
je
mov
mov
jmp
test
jne
cmp
jne
push
push
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
setne
and
xor
mov
mov
call
cmp
setne
and
test
je
mov
call
mov
cmp
jne
cmp
je
mov
cmp
je
cmp
jne
mov
xor
cmp
je
lea
mov
test
je
lea
mov
push
call
push
push
call
add
jmp
lea
mov
push
call
push
push
call
add
mov
mov
mov
call
call
cmp
jne
xor
mov
cmp
je
xor
mov
cmp
jne
mov
call
test
jne
cmp
je
and
cmp
je
cmp
je
cmp
je
lea
call
cmp
jne
xor
jmp
lea
push
cmp
jne
xor
jmp
lea
cmp
jne
xor
jmp
lea
lea
call
lea
call
push
cmp
jne
xor
jmp
lea
cmp
jne
xor
jmp
lea
lea
call
mov
lea
mov
call
cmp
je
inc
cmp
jne
cmp
jne
xor
jmp
cmp
jne
cmp
jne
mov
call
jmp
cmp
jne
xor
jmp
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
push
push
lea
mov
mov
call
mov
mov
mov
call
mov
test
je
cmp
je
mov
xor
cmp
jne
cmp
jae
jmp
jl
mov
mov
mov
mov
mov
call
cmp
jne
cmp
jb
jmp
jl
mov
xor
sub
sbb
jmp
mov
mov
call
pop
pop
pop
mov
pop
ret
push
push
mov
mov
mov
call
mov
cmp
jne
test
je
mov
call
mov
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
cmp
mov
mov
je
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
call
test
jne
cmp
jne
cmp
je
mov
mov
xor
jmp
mov
cmp
jne
cmp
je
cmp
jne
lea
mov
call
push
push
cmp
sete
and
lea
push
lea
mov
call
xor
mov
mov
call
sub
inc
cmp
je
cmp
jne
cmp
je
mov
mov
xor
jmp
cmp
jne
mov
mov
jmp
cmp
jne
cmp
je
mov
mov
mov
mov
xor
jmp
cmp
jne
lea
mov
call
lea
call
lea
cmp
jne
mov
call
lea
call
jmp
lea
mov
call
test
je
mov
jmp
cmp
jne
mov
mov
call
cmp
jne
mov
call
test
je
test
je
mov
jmp
xor
mov
mov
mov
call
test
jne
cmp
je
mov
mov
mov
call
test
je
mov
jmp
mov
mov
call
mov
mov
mov
call
cmp
je
mov
mov
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
call
cmp
jbe
xor
jmp
mov
call
mov
test
jne
mov
call
mov
add
mov
push
push
mov
push
sub
lea
push
push
push
call
add
lea
xor
call
test
jne
lea
mov
call
jmp
cmp
jl
xor
jmp
inc
jmp
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
mov
lea
lea
call
lea
call
lea
call
push
lea
mov
mov
call
test
jne
xor
jmp
cmp
je
cmp
jne
xor
jmp
lea
call
lea
call
test
je
mov
call
lea
call
test
je
xor
jmp
xor
mov
mov
mov
call
push
push
mov
call
push
call
add
mov
xor
call
test
je
add
cmp
jl
mov
xor
call
test
je
xor
jmp
lea
mov
mov
call
lea
call
push
lea
call
pop
call
push
lea
push
call
test
jne
xor
jmp
lea
call
xor
xor
mov
call
test
jne
lea
xor
mov
call
mov
lea
push
push
call
test
je
lea
call
lea
call
mov
push
lea
mov
call
pop
pop
pop
pop
mov
pop
ret
nop
nop
nop
mov
xor
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
ret
push
push
mov
mov
test
je
mov
cmp
je
cmp
jne
cmp
je
mov
call
jmp
mov
call
test
je
push
call
pop
pop
pop
ret
push
mov
add
push
push
mov
push
mov
xor
mov
mov
cmp
mov
je
mov
cmp
mov
je
or
mov
test
je
or
xor
cmp
jne
add
mov
call
test
je
test
je
cmp
je
push
push
push
push
push
push
push
call
mov
jmp
push
push
push
push
push
push
push
call
mov
cmp
jne
call
cmp
jne
mov
xor
cmp
mov
setne
mov
and
mov
mov
cmp
je
mov
test
je
lea
mov
call
jmp
mov
cmp
je
lea
mov
call
jmp
lea
mov
mov
call
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
mov
call
test
je
mov
pop
ret
mov
mov
call
xor
pop
ret
nop
nop
push
push
push
mov
mov
mov
call
test
je
test
je
cmp
je
push
push
push
push
push
push
push
call
mov
jmp
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
test
je
lea
mov
call
jmp
mov
test
je
lea
mov
call
jmp
lea
mov
mov
call
mov
mov
call
cmp
setne
and
pop
pop
pop
ret
nop
nop
mov
cmp
je
xor
cmp
jne
mov
ret
inc
cmp
jl
ret
push
mov
mov
call
test
je
mov
pop
ret
mov
mov
call
mov
mov
call
xor
pop
ret
nop
nop
nop
push
push
push
mov
mov
mov
cmp
je
xor
mov
jmp
cmp
je
cmp
jne
push
call
test
setne
and
test
jne
cmp
jne
xor
cmp
jne
xor
mov
jmp
inc
cmp
jl
mov
test
jne
cmp
je
lea
mov
call
inc
mov
pop
pop
pop
ret
nop
nop
push
mov
cmp
je
xor
pop
ret
cmp
je
mov
call
cmp
jne
xor
pop
ret
lea
lea
call
pop
ret
push
mov
add
push
push
push
mov
mov
mov
test
je
cmp
je
mov
dec
je
dec
je
jmp
push
call
mov
jmp
push
call
mov
cmp
je
xor
cmp
jle
push
lea
push
mov
sub
cmp
jge
mov
sub
jmp
mov
push
mov
add
push
push
call
test
setne
and
mov
test
je
add
cmp
jg
jmp
push
lea
push
push
push
push
call
test
setne
and
mov
cmp
jne
cmp
je
cmp
jne
lea
mov
call
test
je
mov
cmp
jae
cmp
jbe
mov
call
push
push
mov
xor
sub
sbb
pop
pop
push
push
xor
mov
call
jmp
lea
mov
xor
call
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
add
push
mov
push
push
mov
mov
cmp
mov
je
mov
call
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
cmp
je
cmp
je
xor
mov
xor
cmp
jle
mov
cdq
add
adc
push
push
xor
mov
call
mov
sub
cmp
jge
mov
sub
jmp
mov
mov
mov
mov
call
cmp
jne
mov
jmp
mov
add
add
cmp
jg
jmp
cmp
jne
lea
mov
call
test
jne
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
push
push
mov
push
push
mov
cmp
mov
jne
cmp
jle
mov
push
call
mov
push
lea
push
push
push
push
call
test
jne
mov
call
test
je
cmp
jle
mov
mov
mov
call
jmp
cmp
jne
call
cmp
jne
xor
jmp
or
jmp
mov
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
push
push
mov
mov
call
test
jne
cmp
je
lea
mov
call
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
mov
cmp
jne
mov
jmp
cmp
jne
cmp
jae
jmp
jge
test
je
dec
jne
mov
call
jmp
mov
call
add
adc
mov
mov
xor
mov
mov
sar
mov
push
lea
push
mov
push
push
call
cmp
jne
call
test
je
xor
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
xor
lea
mov
push
push
push
push
call
mov
cmp
jne
call
test
je
cmp
je
lea
mov
call
jmp
mov
mov
jmp
mov
cdq
mov
xor
push
push
mov
xor
add
adc
add
pop
pop
pop
pop
ret
push
mov
push
mov
push
push
xor
mov
call
test
je
mov
call
push
push
xor
mov
call
pop
pop
ret
nop
nop
push
mov
push
mov
mov
lea
call
mov
pop
pop
ret
nop
push
mov
push
call
test
setne
and
pop
ret
nop
nop
nop
push
mov
add
test
push
push
push
mov
mov
mov
je
cmp
setne
and
test
jne
xor
jmp
mov
test
je
cmp
setne
and
test
jne
xor
jmp
mov
mov
test
je
cmp
setne
and
test
jne
xor
jmp
mov
mov
test
je
lea
mov
mov
mov
call
cmp
je
lea
mov
call
cmp
je
lea
mov
call
test
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
push
cmp
je
lea
jmp
xor
push
mov
push
call
pop
pop
pop
mov
pop
ret
nop
push
mov
push
call
pop
ret
nop
push
mov
lea
add
mov
call
pop
ret
push
mov
add
push
mov
lea
mov
call
push
push
mov
mov
call
mov
call
push
push
lea
mov
call
pop
pop
pop
mov
pop
ret
cmp
jne
xor
ret
push
call
cmp
je
cmp
je
xor
jmp
mov
mov
ret
nop
push
push
push
mov
inc
mov
xor
cmp
je
mov
mov
mov
cmp
je
mov
call
jmp
mov
call
test
je
xor
mov
jmp
xor
inc
cmp
jl
dec
mov
pop
pop
pop
ret
push
mov
push
call
pop
mov
mov
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
ret
nop
nop
nop
add
mov
sar
add
and
mov
ret
nop
nop
nop
push
mov
mov
mov
movzx
mov
shl
movzx
shl
mov
or
mov
movzx
or
mov
sub
shr
and
mov
pop
ret
mov
call
mov
call
ret
mov
mov
call
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
cmp
je
xor
mov
jmp
xor
mov
push
call
mov
mov
mov
mov
mov
inc
cmp
je
xor
mov
jmp
xor
mov
push
call
mov
sub
jb
sub
je
sub
je
jmp
cmp
sete
and
jmp
cmp
jne
xor
jmp
cmp
jne
mov
jmp
xor
mov
cmp
jne
xor
mov
cmp
jne
cmp
jne
mov
jmp
mov
mov
call
cmp
jne
test
je
cmp
je
xor
jmp
mov
mov
jmp
test
je
mov
mov
mov
call
test
jne
lea
mov
call
test
jne
lea
lea
mov
call
test
sete
and
jmp
jmp
mov
inc
mov
mov
call
test
je
mov
jmp
cmp
jne
xor
jmp
cmp
je
xor
mov
cmp
jne
cmp
jne
mov
mov
mov
call
jmp
xor
jmp
inc
jmp
pop
pop
pop
pop
pop
ret
test
je
call
ret
call
ret
push
mov
cmp
je
call
jmp
call
pop
ret
push
mov
add
push
push
push
mov
mov
mov
test
setne
and
and
test
je
mov
call
mov
cmp
je
push
mov
mov
mov
call
test
jne
mov
mov
mov
xor
mov
cmp
je
xor
mov
cmp
je
test
jne
mov
jmp
lea
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
test
jne
mov
jmp
cmp
je
cmp
jne
lea
lea
mov
call
test
je
xor
jmp
cmp
je
cmp
jne
lea
xor
call
test
je
mov
mov
mov
call
jmp
cmp
je
xor
mov
call
test
je
cmp
je
push
lea
call
mov
lea
lea
call
test
je
xor
jmp
lea
lea
mov
call
test
je
xor
jmp
mov
call
mov
mov
call
mov
push
mov
mov
mov
call
test
jne
xor
jmp
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
mov
lea
call
lea
call
lea
call
mov
call
mov
pop
ret
nop
xor
xor
mov
xor
mov
mov
ret
nop
push
push
mov
mov
test
je
mov
xor
mov
call
lea
mov
call
test
je
push
call
pop
pop
pop
ret
nop
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
mov
mov
xor
mov
call
mov
xor
xor
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
call
mov
call
ret
push
push
mov
mov
mov
call
mov
xor
mov
xor
mov
xor
mov
mov
pop
pop
ret
push
mov
add
push
mov
push
push
cmp
mov
je
mov
mov
sub
push
mov
pop
sub
test
jle
mov
not
inc
and
add
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
add
mov
mov
call
cmp
jne
xor
jmp
mov
add
jmp
add
jmp
test
je
mov
mov
call
mov
add
mov
mov
call
add
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
cmp
jge
mov
mov
mov
mov
inc
pop
ret
mov
pop
ret
nop
nop
nop
push
push
mov
inc
cmp
jge
mov
mov
movzx
mov
mov
movzx
shl
add
mov
add
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
push
mov
add
cmp
jge
mov
mov
mov
movzx
mov
movzx
shl
mov
add
mov
movzx
shl
mov
add
mov
movzx
shl
add
mov
add
pop
pop
ret
xor
mov
pop
pop
ret
nop
push
mov
push
mov
mov
add
dec
cmp
jge
mov
add
mov
mov
xchg
call
add
pop
pop
ret
mov
mov
xor
call
pop
pop
ret
push
mov
push
push
mov
mov
cmp
jle
cmp
je
mov
jmp
mov
add
mov
add
or
call
jmp
or
pop
pop
pop
ret
nop
push
mov
push
lea
mov
call
lea
mov
call
mov
call
mov
pop
pop
ret
nop
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
xor
mov
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
xor
xor
mov
mov
mov
xor
xor
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
add
push
push
push
mov
xor
mov
mov
mov
mov
xor
test
mov
jbe
mov
xor
mov
mov
cmp
jne
cmp
jbe
jmp
jle
mov
jmp
mov
mov
cmp
je
mov
mov
mov
call
mov
xor
mov
jmp
mov
cmp
jne
or
jmp
mov
mov
mov
call
mov
cmp
je
mov
jmp
mov
add
test
je
mov
mov
mov
call
mov
mov
add
cdq
adc
add
add
mov
cdq
sub
sub
sbb
cmp
jne
cmp
jne
cmp
je
mov
mov
push
mov
mov
call
test
jne
mov
or
jmp
test
ja
mov
test
je
mov
mov
add
adc
push
push
push
push
mov
call
cmp
je
cmp
mov
je
test
jne
mov
jmp
mov
and
add
add
mov
mov
mov
xchg
call
call
mov
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
mov
mov
mov
mov
cmp
je
cmp
ja
mov
mov
mov
call
add
sub
jmp
cmp
jne
mov
mov
mov
call
mov
xor
add
adc
cmp
jne
mov
mov
mov
call
mov
mov
call
call
pop
pop
pop
ret
nop
push
mov
add
cmp
je
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
ret
ret
nop
nop
nop
test
je
mov
test
je
mov
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
test
je
cmp
jne
xor
mov
push
push
add
mov
push
mov
mov
call
jmp
cmp
je
mov
jmp
xor
mov
push
cmp
setl
and
add
push
mov
push
mov
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
mov
mov
mov
ret
nop
push
mov
push
push
call
push
call
pop
ret
nop
push
mov
test
je
push
push
call
push
call
pop
ret
nop
push
push
mov
mov
test
jne
mov
call
pop
pop
ret
push
push
push
call
push
call
pop
pop
ret
nop
nop
push
mov
add
mov
lea
lea
push
push
push
call
push
call
mov
push
lea
push
lea
push
call
mov
pop
pop
pop
ret
nop
nop
nop
push
xor
cmp
jbe
mov
inc
cmp
ja
pop
ret
nop
nop
nop
push
push
xor
cmp
jbe
mov
mov
inc
cmp
ja
pop
pop
ret
nop
nop
push
jmp
mov
cmp
jae
or
pop
ret
mov
cmp
jbe
or
pop
ret
inc
inc
mov
add
test
ja
xor
pop
ret
push
mov
push
push
mov
mov
cmp
jbe
mov
mov
call
jmp
mov
dec
jmp
mov
mov
dec
test
jge
mov
pop
pop
pop
ret
nop
nop
nop
xor
jmp
inc
mov
inc
test
jne
mov
ret
nop
jmp
xor
mov
cmp
je
inc
cmp
jne
xor
ret
nop
push
push
mov
mov
mov
call
dec
test
jl
xor
mov
cmp
jne
add
pop
pop
ret
dec
test
jge
xor
pop
pop
ret
nop
nop
push
push
xor
jmp
xor
jmp
mov
cmp
jne
add
mov
pop
pop
ret
inc
cmp
jne
inc
cmp
jne
xor
pop
pop
ret
jmp
mov
inc
mov
inc
cmp
jne
mov
ret
nop
nop
nop
push
jmp
mov
mov
inc
cmp
je
inc
mov
add
test
ja
pop
ret
nop
nop
nop
mov
cmp
jae
or
ret
mov
cmp
jbe
or
ret
cmp
je
inc
inc
jmp
xor
ret
push
jmp
mov
cmp
jae
or
pop
ret
mov
cmp
jbe
or
pop
ret
cmp
je
inc
inc
mov
add
test
ja
xor
pop
ret
nop
nop
nop
push
push
mov
mov
push
push
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
push
push
push
mov
mov
mov
push
push
push
push
push
push
call
add
pop
pop
pop
ret
nop
push
push
mov
mov
mov
call
add
mov
call
mov
pop
pop
ret
nop
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
mov
call
pop
pop
ret
nop
nop
cmp
jl
cmp
jle
xor
jmp
mov
ret
push
mov
mov
call
pop
ret
nop
nop
nop
push
mov
mov
call
pop
ret
nop
nop
nop
push
mov
mov
call
pop
ret
nop
nop
nop
push
mov
mov
call
pop
ret
nop
nop
nop
push
push
mov
xor
jmp
mov
xor
add
mov
lea
add
add
inc
mov
xor
mov
call
test
jne
mov
pop
pop
ret
nop
nop
nop
call
ret
nop
nop
push
mov
push
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
pop
ret
nop
push
push
mov
mov
test
je
mov
mov
cmp
jne
push
push
xor
mov
call
test
je
push
call
pop
pop
pop
ret
push
mov
mov
call
lea
call
lea
call
mov
call
mov
pop
ret
nop
nop
nop
xor
xor
mov
xor
mov
mov
ret
nop
xor
xor
mov
xor
mov
mov
ret
nop
xor
xor
mov
xor
mov
mov
ret
nop
push
push
mov
mov
test
je
lea
mov
call
lea
mov
call
mov
mov
call
test
je
push
call
pop
pop
pop
ret
nop
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
mov
mov
call
mov
call
lea
call
lea
call
xor
xor
mov
mov
pop
ret
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
xor
call
ret
push
mov
add
push
mov
push
push
mov
mov
mov
mov
call
mov
mov
inc
call
mov
mov
add
call
test
je
cmp
je
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
call
mov
lea
inc
call
mov
mov
add
add
call
inc
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
nop
nop
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
shl
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
test
je
lea
lea
mov
call
test
jne
xor
jmp
mov
mov
mov
call
test
je
mov
call
mov
mov
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
push
mov
push
xor
lea
call
mov
pop
pop
ret
push
mov
push
mov
mov
cmp
jb
xor
xor
mov
pop
pop
ret
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jne
inc
test
je
mov
add
add
mov
mov
add
add
call
inc
add
jmp
test
je
xor
mov
mov
call
inc
add
mov
pop
pop
ret
xor
xor
mov
xor
mov
mov
ret
cmp
jne
call
mov
inc
call
sub
cmp
jle
cmp
je
mov
mov
call
mov
mov
call
call
ret
nop
nop
push
mov
xor
pop
ret
nop
nop
nop
mov
call
ret
nop
push
push
mov
mov
push
push
push
push
push
push
push
push
call
test
jne
xor
mov
pop
pop
ret
nop
push
push
mov
mov
push
push
push
push
push
push
call
test
jne
xor
mov
pop
pop
ret
nop
push
push
xor
cmp
jle
mov
mov
movzx
sar
mov
cmp
je
inc
add
cmp
jg
mov
pop
pop
ret
nop
nop
push
push
push
xor
cmp
jle
movzx
movzx
shl
add
mov
test
je
inc
cmp
jg
mov
pop
pop
pop
ret
push
push
dec
jmp
mov
inc
and
cmp
jb
mov
shr
cmp
jne
movzx
and
cmp
jne
movzx
and
and
shl
or
inc
jmp
mov
shr
cmp
jne
movzx
and
cmp
jne
movzx
and
cmp
jne
movzx
and
and
shl
shl
or
movzx
and
or
add
jmp
mov
shr
cmp
jne
movzx
and
cmp
jne
movzx
and
cmp
jne
movzx
and
cmp
jne
movzx
and
and
shl
shl
or
movzx
and
shl
or
movzx
and
or
add
dec
js
cmp
jbe
dec
js
cmp
ja
mov
and
sub
shr
add
mov
add
add
mov
add
jmp
mov
add
cmp
jne
mov
pop
pop
ret
nop
nop
nop
mov
ret
nop
xor
jmp
inc
mov
add
test
jne
mov
ret
nop
mov
mov
add
mov
add
test
jne
ret
nop
nop
nop
push
mov
mov
add
mov
add
test
je
dec
test
jg
pop
ret
push
push
mov
mov
mov
call
add
mov
add
call
pop
pop
ret
nop
jmp
movzx
cmp
je
add
cmp
jne
xor
ret
nop
nop
nop
push
push
mov
mov
mov
call
dec
test
jl
movzx
cmp
jne
lea
mov
pop
pop
ret
dec
test
jge
xor
pop
pop
ret
push
push
mov
mov
jmp
movzx
mov
call
test
je
mov
pop
pop
ret
add
cmp
jne
xor
pop
pop
ret
nop
nop
nop
xor
jmp
movzx
add
lea
add
add
add
mov
cmp
jb
cmp
jbe
mov
ret
nop
nop
nop
push
mov
mov
call
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
push
push
call
cmp
seta
and
mov
xor
push
call
test
setne
and
mov
inc
cmp
jl
pop
pop
mov
pop
ret
nop
xor
mov
cmp
je
lea
jmp
lea
ret
nop
push
jmp
xor
mov
cmp
je
add
jmp
xor
mov
cmp
jne
mov
pop
ret
inc
cmp
jne
xor
pop
ret
push
push
xor
jmp
movzx
cmp
je
add
jmp
movzx
cmp
jne
mov
inc
cmp
jne
mov
pop
pop
ret
push
push
push
mov
mov
xor
mov
mov
mov
xor
mov
cmp
jle
mov
call
mov
inc
mov
xor
mov
mov
shl
or
mov
inc
cmp
jl
pop
pop
pop
ret
nop
push
mov
mov
call
mov
pop
ret
nop
nop
xor
mov
ret
nop
nop
nop
cmp
je
xor
mov
mov
call
ret
nop
nop
nop
push
push
mov
mov
shl
push
cmp
jne
mov
jmp
mov
call
mov
mov
xor
div
mov
shl
lea
add
mov
call
mov
test
jne
mov
call
xor
jmp
mov
mov
add
add
mov
mov
pop
pop
pop
ret
nop
push
mov
push
push
push
lea
mov
xor
call
mov
mov
mov
mov
test
jns
add
sar
xor
mov
mov
div
imul
mov
xor
div
mov
mov
sub
xor
mov
mov
mov
push
div
mov
mov
xor
mov
div
shl
pop
shl
lea
add
mov
add
mov
mov
lea
mov
add
mov
mov
mov
mov
add
mov
mov
add
xor
mov
mov
inc
inc
cmp
jl
inc
cmp
jge
mov
inc
add
cmp
jl
inc
cmp
jge
mov
inc
add
cmp
jl
inc
cmp
jge
mov
inc
add
cmp
jl
xor
mov
mov
mov
cmp
jge
xor
mov
lea
cmp
setl
and
add
mov
inc
cmp
jl
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
add
mov
cmp
jne
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
jmp
mov
inc
cmp
jne
dec
xor
mov
mov
shl
lea
shl
mov
sub
lea
cmp
jge
sub
sub
mov
jmp
xor
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
movzx
movzx
sub
mov
shl
lea
add
xor
mov
movzx
cmp
je
mov
dec
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
shl
lea
add
sub
mov
movzx
mov
mov
mov
mov
add
pop
pop
pop
ret
nop
nop
push
push
push
add
mov
cmp
je
mov
xor
lea
mov
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
jne
inc
cmp
jl
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
add
movzx
mov
mov
mov
shl
lea
add
cmp
jne
movzx
add
cmp
jl
mov
lea
cmp
jne
jmp
mov
mov
mov
mov
mov
movzx
cmp
jle
mov
mov
sub
mov
mov
mov
add
cmp
mov
jg
xor
mov
movzx
cmp
je
dec
movzx
push
mov
pop
sub
mov
sub
shl
lea
add
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
jne
add
pop
pop
pop
ret
nop
nop
nop
push
mov
lea
call
xor
mov
xor
mov
xor
mov
mov
pop
ret
nop
nop
push
push
push
mov
push
add
xor
lea
mov
call
lea
call
cmp
jge
mov
jmp
mov
neg
lea
dec
mov
mov
cmp
je
sub
mov
jmp
cmp
je
mov
mov
mov
mov
jmp
xor
mov
call
mov
mov
mov
mov
xor
mov
lea
mov
mov
mov
mov
mov
inc
mov
movzx
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
shl
lea
add
mov
cmp
ja
mov
jmp
xor
mov
mov
mov
mov
shl
lea
sub
call
mov
mov
mov
mov
mov
xor
mov
mov
cmp
jge
mov
lea
mov
inc
mov
mov
xor
mov
mov
cmp
jl
xor
xor
xor
movzx
lea
mov
cdq
idiv
mov
lea
sub
mov
shl
add
cmp
lea
mov
jl
inc
cmp
jl
inc
cmp
jl
xor
xor
mov
mov
shl
lea
shl
add
add
add
mov
mov
mov
mov
mov
shl
mov
inc
mov
cmp
jl
inc
cmp
jl
add
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
call
mov
mov
lea
mov
mov
call
lea
mov
mov
call
xor
mov
inc
cmp
jl
mov
mov
mov
cmp
jge
mov
dec
mov
jne
inc
inc
mov
inc
cmp
jl
lea
mov
xor
call
lea
mov
mov
call
mov
pop
pop
pop
ret
nop
nop
push
push
push
push
add
mov
mov
movzx
mov
dec
mov
mov
mov
jmp
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
add
add
movzx
movzx
sub
mov
cmp
setne
and
mov
mov
add
sar
mov
and
mov
add
movzx
sub
mov
add
sar
mov
and
add
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
cmp
jb
mov
mov
mov
mov
dec
jne
cmp
jne
inc
sub
cmp
je
mov
add
sub
mov
cmp
jne
mov
mov
mov
mov
mov
xor
mov
sar
sub
sar
cmp
jg
mov
mov
inc
add
sar
mov
add
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sar
sub
add
mov
inc
sar
mov
movzx
inc
sar
mov
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
xor
mov
mov
mov
mov
movzx
cmp
jne
mov
jmp
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
xor
mov
mov
mov
mov
mov
xor
mov
xor
sub
mov
mov
mov
mov
xor
shl
lea
add
mov
mov
mov
xor
mov
mov
cmp
je
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
shl
lea
add
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
push
lea
mov
call
mov
mov
call
mov
mov
call
pop
pop
ret
push
push
push
push
add
mov
mov
mov
cmp
jle
mov
call
mov
inc
mov
movzx
test
setne
and
test
je
cmp
jle
mov
call
mov
inc
mov
xor
mov
mov
jmp
cmp
jne
xor
jmp
test
je
cmp
jle
mov
call
mov
inc
mov
xor
mov
mov
mov
lea
mov
call
test
je
and
inc
cmp
jle
add
lea
add
mov
cmp
jne
lea
call
xor
jmp
mov
lea
inc
call
mov
mov
call
cmp
setne
and
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
cmp
jbe
cmp
jbe
or
jmp
cmp
je
mov
mov
cmp
jbe
cmp
jbe
or
jmp
mov
mov
call
test
jne
or
jmp
mov
mov
mov
lea
lea
movzx
mov
mov
xor
mov
mov
movzx
movzx
xor
mov
add
xor
mov
add
xor
mov
mov
sar
add
add
and
add
mov
sub
xor
mov
add
shr
dec
shl
add
add
mov
mov
xor
div
add
movzx
cmp
jae
mov
cmp
setb
and
add
xor
mov
movzx
mov
mov
mov
movzx
add
add
sar
sub
mov
mov
inc
jmp
movzx
mov
movzx
add
sar
sub
xor
mov
movzx
sar
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
lea
mov
imul
add
mov
sub
imul
mov
jmp
jmp
mov
cmp
jle
mov
call
mov
inc
mov
xor
mov
mov
shl
or
mov
shl
shl
mov
mov
add
xor
cmp
jb
cmp
jae
mov
mov
neg
and
test
mov
jne
inc
mov
mov
mov
mov
cmp
jbe
cmp
jbe
or
jmp
movzx
cmp
je
mov
mov
call
test
jne
or
jmp
lea
mov
imul
add
mov
sub
imul
mov
cmp
je
mov
cmp
movzx
jne
mov
mov
cmp
jbe
mov
mov
mov
mov
jmp
mov
call
cmp
jne
mov
lea
mov
xor
call
jmp
mov
cmp
jle
mov
call
mov
inc
mov
xor
mov
mov
shl
or
mov
shl
shl
mov
mov
add
xor
cmp
jb
cmp
jae
mov
mov
neg
and
test
mov
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
push
mov
movzx
lea
mov
xor
add
mov
mov
div
mov
mov
push
pop
mov
sub
mov
xor
div
mov
cmp
jb
xor
jmp
xor
mov
cmp
jge
mov
mov
add
cmp
seta
and
xor
mov
mov
add
add
mov
mov
add
cmp
jle
mov
mov
call
xor
mov
mov
jmp
cmp
jne
xor
jmp
mov
movzx
dec
jmp
dec
jne
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
movzx
mov
mov
dec
xor
mov
sub
xor
mov
dec
mov
mov
jne
mov
mov
mov
jmp
add
movzx
add
cmp
jge
mov
xor
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
add
mov
cmp
jbe
mov
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
call
mov
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
add
movzx
sub
mov
mov
mov
mov
cmp
je
mov
mov
movzx
movzx
movzx
sub
movzx
shl
add
cmp
setg
imul
and
shl
add
movzx
cmp
setl
and
add
shl
add
mov
cmp
setg
and
shl
shl
add
xor
mov
shl
add
movzx
mov
sar
mov
mov
sub
cmp
sete
and
add
mov
jmp
mov
lea
mov
lea
mov
add
xor
mov
add
xor
mov
mov
cmp
je
xor
mov
add
mov
add
dec
jne
mov
lea
add
xor
mov
mov
div
mov
push
pop
mov
sub
mov
xor
div
mov
cmp
jb
xor
jmp
lea
cmp
mov
jge
xor
mov
jmp
add
mov
movzx
add
mov
cmp
jge
mov
mov
xor
mov
sub
mov
mov
cmp
jae
mov
dec
mov
test
jne
mov
mov
mov
add
mov
mov
inc
mov
shl
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
mov
mov
call
inc
mov
mov
jmp
mov
mov
mov
mov
movzx
sub
sub
mov
add
mov
xor
mov
mov
mov
dec
jne
mov
mov
add
movzx
mov
mov
add
pop
pop
pop
ret
push
push
push
mov
push
add
mov
xor
mov
mov
mov
mov
cmp
jae
mov
mov
test
je
cmp
je
mov
mov
cmp
je
add
mov
cmp
jne
mov
cmp
jb
mov
lea
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
add
add
jmp
lea
cmp
setb
and
add
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
jmp
mov
inc
mov
mov
mov
mov
cmp
jae
cmp
je
mov
cmp
jb
mov
xor
mov
call
mov
test
je
dec
jne
mov
mov
mov
cmp
setne
and
sub
jmp
mov
mov
mov
mov
mov
mov
movzx
movzx
xor
mov
mov
sub
dec
sub
mov
mov
jmp
movzx
cmp
je
test
jne
mov
mov
shr
mov
mov
lea
mov
xor
mov
xor
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
inc
mov
mov
xor
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
xor
mov
mov
shl
lea
add
mov
cmp
ja
mov
jmp
mov
xor
mov
mov
shl
lea
sub
mov
mov
call
mov
cmp
je
mov
mov
shl
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
movzx
mov
shl
cmp
mov
setbe
shl
and
cmp
mov
setbe
and
add
and
add
cmp
setb
and
add
add
jmp
lea
xor
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
xor
mov
mov
shl
lea
add
mov
cmp
ja
mov
jmp
mov
xor
mov
mov
mov
shl
lea
sub
mov
call
mov
mov
test
je
mov
mov
mov
mov
mov
mov
cmp
jae
add
jmp
mov
xor
mov
add
cmp
seta
and
add
mov
movzx
xor
mov
mov
add
add
imul
add
mov
add
lea
cmp
jae
cmp
setb
shl
and
cmp
setae
and
add
inc
add
mov
jmp
lea
mov
cmp
setae
shl
and
lea
cmp
mov
jae
dec
add
mov
shl
sub
cmp
setae
and
add
add
mov
add
mov
mov
add
lea
add
inc
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
mov
call
mov
add
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
xor
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
nop
nop
xor
xor
mov
xor
mov
mov
ret
nop
push
push
mov
mov
test
je
mov
test
je
cmp
jne
push
call
pop
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
mov
call
lea
add
call
xor
mov
call
test
je
push
call
pop
pop
pop
ret
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
push
mov
test
jne
push
call
pop
mov
mov
test
jne
mov
call
jmp
mov
mov
xor
mov
call
pop
pop
ret
sub
je
sub
je
ret
mov
call
ret
nop
push
push
push
mov
sub
mov
cmp
jae
cmp
jae
mov
inc
mov
add
mov
mov
inc
mov
jmp
mov
inc
mov
add
mov
mov
inc
mov
dec
jne
jmp
mov
mov
and
mov
inc
mov
mov
mov
inc
and
mov
mov
add
test
jne
pop
pop
pop
ret
nop
push
push
push
xor
mov
mov
mov
mov
shl
movzx
shl
or
mov
movzx
or
mov
sub
shr
and
and
cmp
jae
cmp
jae
cmp
jae
cmp
jae
mov
jmp
mov
jmp
cmp
jae
mov
jmp
mov
jmp
cmp
jae
cmp
jae
mov
jmp
mov
jmp
cmp
jae
mov
jmp
mov
jmp
cmp
jae
cmp
jae
cmp
jae
mov
jmp
mov
jmp
cmp
jae
mov
jmp
mov
jmp
cmp
jae
cmp
jae
mov
jmp
mov
jmp
mov
mov
add
mov
and
sar
add
mov
mov
mov
sub
sub
shr
add
cmp
jb
xor
mov
pop
pop
pop
ret
nop
nop
nop
push
push
push
push
add
mov
mov
cmp
jne
xor
xor
xor
xor
mov
xor
jmp
mov
mov
inc
inc
mov
mov
shl
add
mov
cmp
jl
inc
inc
cmp
jl
mov
cmp
jne
xor
mov
mov
call
mov
call
test
je
cmp
je
cmp
jne
mov
call
test
je
and
mov
cmp
jle
mov
call
test
je
mov
mov
mov
sub
and
cmp
jae
cmp
je
mov
call
mov
mov
cmp
jne
cmp
jbe
jmp
jg
cmp
je
mov
jmp
cmp
jne
lea
call
mov
cmp
jne
lea
call
xor
mov
jmp
cmp
jne
lea
call
mov
cmp
jne
mov
call
test
je
jmp
cmp
je
cmp
je
cmp
jne
mov
call
test
je
jmp
cmp
jne
xor
mov
mov
xor
mov
jmp
lea
call
mov
cmp
jne
mov
jmp
cmp
jne
xor
mov
mov
jmp
mov
xor
shl
mov
add
mov
inc
cmp
jge
cmp
je
cmp
jne
mov
mov
add
add
mov
call
jmp
cmp
jne
lea
call
mov
cmp
je
mov
add
mov
mov
call
jmp
mov
inc
mov
mov
mov
jmp
lea
mov
call
cmp
jge
mov
inc
mov
lea
push
pop
mov
jmp
cmp
jl
sub
xor
movzx
add
mov
test
jbe
mov
mov
mov
movzx
mov
shl
movzx
shl
mov
or
mov
movzx
or
mov
sub
shr
mov
and
sub
shr
add
mov
mov
add
mov
sar
add
and
mov
lea
mov
call
mov
xor
mov
inc
test
jbe
cmp
jle
cmp
jbe
mov
mov
mov
movzx
mov
shl
movzx
shl
mov
or
mov
movzx
or
mov
sub
shr
mov
and
sub
shr
shl
add
mov
sub
add
mov
sar
add
and
mov
cmp
jle
dec
add
jmp
lea
mov
call
cmp
jne
mov
add
jmp
add
mov
jmp
mov
mov
mov
movzx
mov
shl
movzx
shl
mov
or
mov
movzx
or
mov
sub
shr
mov
and
sub
shr
add
mov
add
mov
sar
add
and
mov
cmp
jb
inc
cmp
jb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
call
test
je
jmp
cmp
jne
mov
call
test
je
jmp
cmp
jne
cmp
je
mov
mov
mov
call
jmp
cmp
jge
add
mov
mov
mov
mov
test
jle
mov
mov
dec
test
jg
mov
lea
mov
call
mov
xor
mov
mov
movzx
mov
add
test
jbe
mov
mov
movzx
shl
mov
mov
mov
movzx
shl
or
mov
mov
movzx
or
mov
sub
shr
mov
mov
sub
mov
mov
and
add
shr
mov
add
sar
mov
add
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jge
sub
xor
movzx
inc
mov
test
jbe
mov
mov
movzx
shl
mov
mov
mov
movzx
shl
or
mov
mov
movzx
or
mov
sub
shr
mov
mov
sub
and
shr
mov
add
mov
add
mov
sar
add
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
jmp
jmp
mov
call
add
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
mov
mov
mov
movzx
movzx
shl
shl
or
mov
movzx
mov
or
sub
mov
shr
and
test
je
mov
mov
add
mov
sar
add
and
mov
jmp
test
setne
mov
mov
add
and
mov
sar
add
and
mov
xor
mov
cmp
sbb
neg
mov
cmp
jne
test
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mov
movzx
movzx
shl
add
shl
or
mov
movzx
mov
or
sub
shr
and
shr
mov
mov
add
mov
mov
sar
and
add
mov
mov
and
inc
cmp
jne
mov
mov
mov
movzx
movzx
shl
shl
or
mov
movzx
mov
or
sub
shr
mov
mov
add
and
mov
sar
add
shr
add
and
mov
jmp
cmp
jne
mov
mov
xor
mov
mov
mov
shl
movzx
shl
or
mov
movzx
mov
or
sub
shr
mov
mov
add
and
mov
sar
add
and
mov
lea
mov
call
xor
cmp
jle
mov
dec
cmp
jg
mov
call
test
jne
lea
cmp
jge
xor
push
lea
mov
call
pop
jmp
mov
mov
xor
mov
mov
shl
movzx
shl
or
mov
movzx
mov
or
sub
shr
and
mov
shr
mov
mov
add
mov
sar
add
and
mov
inc
cmp
jg
push
mov
mov
mov
call
push
lea
mov
call
pop
add
pop
pop
pop
ret
nop
nop
nop
push
push
push
mov
add
lea
mov
call
mov
cmp
jne
xor
jmp
mov
and
inc
cmp
jne
mov
call
cmp
jne
xor
jmp
lea
jmp
cmp
jne
mov
call
mov
cmp
jne
xor
jmp
mov
call
cmp
jne
xor
jmp
shl
add
mov
lea
mov
call
xor
cmp
jle
lea
call
cmp
jne
xor
push
lea
mov
call
pop
jmp
mov
mov
inc
cmp
jg
push
mov
mov
mov
call
push
lea
mov
call
pop
add
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
mov
lea
call
xor
mov
mov
cmp
jle
mov
jmp
mov
mov
mov
call
lea
call
test
je
lea
call
mov
cmp
jne
mov
call
jmp
dec
jmp
mov
mov
mov
cmp
ja
mov
cmp
jbe
xor
push
lea
mov
call
pop
jmp
mov
mov
mov
cmp
sete
and
mov
push
call
pop
mov
test
je
lea
mov
call
lea
call
lea
call
xor
mov
mov
jmp
mov
cmp
mov
je
cmp
jbe
xor
push
lea
mov
call
pop
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
add
mov
call
lea
call
lea
call
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
dec
mov
lea
mov
call
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
inc
xor
xor
jmp
mov
push
mov
sub
mov
lea
pop
mov
mov
cmp
jne
inc
test
jle
mov
xor
mov
inc
cmp
jl
test
jne
lea
mov
call
mov
mov
mov
sub
mov
mov
mov
lea
mov
call
test
mov
je
add
mov
add
and
mov
test
je
lea
call
mov
jmp
mov
cmp
jae
mov
mov
mov
jmp
xor
mov
mov
mov
cmp
je
sub
and
cmp
jae
xor
jmp
mov
mov
mov
mov
mov
mov
lea
mov
xor
call
mov
mov
mov
mov
mov
test
je
lea
call
shr
mov
lea
mov
call
xor
mov
mov
shl
and
je
lea
call
mov
inc
cmp
jl
cmp
je
lea
call
mov
cmp
jae
cmp
jne
xor
push
lea
mov
call
pop
jmp
lea
mov
call
xor
jmp
mov
add
cmp
setge
and
test
je
xor
push
lea
mov
call
lea
mov
call
pop
jmp
lea
call
shr
mov
mov
lea
mov
call
inc
cmp
jb
mov
add
push
lea
mov
mov
call
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
test
jle
cmp
jge
lea
mov
call
mov
mov
mov
mov
call
cmp
jge
lea
call
lea
mov
call
mov
mov
xor
mov
mov
shl
lea
add
call
inc
cmp
jl
mov
lea
mov
add
mov
call
mov
add
mov
xor
call
mov
add
mov
mov
call
mov
add
mov
xor
call
test
je
mov
add
cmp
setge
and
test
je
xor
push
lea
mov
call
pop
jmp
lea
call
mov
cmp
jbe
xor
push
lea
mov
call
pop
jmp
mov
lea
cmp
jae
lea
sub
lea
call
mov
add
mov
xor
jmp
mov
add
cmp
setge
and
test
je
xor
push
lea
mov
call
pop
jmp
lea
call
shr
mov
lea
mov
call
inc
cmp
ja
mov
push
lea
mov
call
pop
pop
pop
pop
mov
pop
ret
nop
xor
xor
mov
xor
mov
mov
ret
nop
push
mov
push
add
mov
cmp
jle
mov
test
jns
add
sar
add
add
cmp
jge
mov
jmp
mov
mov
mov
shl
call
mov
cmp
jne
mov
call
mov
pop
pop
ret
nop
nop
nop
push
mov
push
mov
mov
sub
test
jge
xor
pop
pop
ret
cmp
jle
test
jle
mov
mov
add
mov
mov
xchg
call
xor
mov
mov
jmp
mov
mov
mov
sub
mov
and
add
call
test
jle
add
mov
add
inc
setne
and
mov
pop
pop
ret
nop
push
mov
push
push
push
add
mov
mov
sub
and
xor
jmp
mov
mov
test
je
cmp
je
mov
jmp
mov
mov
mov
mov
mov
sub
and
cmp
jbe
cmp
je
mov
mov
call
mov
mov
sub
and
cmp
jb
mov
add
and
mov
mov
cmp
jb
cmp
jne
push
mov
add
lea
xor
call
jmp
mov
sub
push
mov
add
lea
xor
call
push
lea
mov
mov
call
mov
mov
mov
add
add
mov
cmp
jle
mov
lea
call
mov
add
mov
add
mov
add
call
mov
mov
call
mov
cmp
jle
cmp
jle
mov
lea
call
mov
add
mov
add
mov
add
call
jmp
lea
call
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
add
call
mov
mov
add
call
mov
mov
call
push
call
pop
mov
xor
mov
jmp
mov
mov
test
je
mov
cmp
jne
cmp
jne
cmp
jne
push
lea
mov
xor
call
mov
mov
mov
add
add
mov
cmp
jle
mov
lea
call
mov
add
mov
add
mov
add
call
mov
mov
call
mov
cmp
jle
cmp
jle
lea
mov
mov
mov
call
mov
add
mov
add
mov
add
call
jmp
lea
call
mov
inc
mov
mov
mov
mov
test
je
lea
mov
mov
mov
add
call
mov
mov
add
call
mov
mov
call
push
call
pop
mov
xor
mov
lea
cmp
jl
mov
mov
mov
call
mov
mov
xor
add
adc
mov
mov
sub
and
jmp
mov
jmp
mov
mov
test
je
cmp
je
mov
inc
cmp
jl
mov
jmp
inc
cmp
jl
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
mov
test
je
cmp
je
mov
call
test
je
push
call
pop
pop
pop
ret
push
push
push
mov
mov
cmp
jle
mov
lea
mov
mov
mov
mov
mov
add
call
mov
mov
mov
sar
mov
mov
add
call
mov
mov
call
pop
pop
pop
ret
push
push
mov
mov
cmp
je
mov
cmp
jbe
mov
mov
neg
and
add
mov
mov
call
mov
mov
mov
call
mov
pop
pop
ret
mov
mov
sub
add
mov
mov
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
add
mov
cmp
mov
jne
cmp
jb
jmp
jge
mov
mov
mov
sub
sbb
mov
mov
mov
cdq
cmp
jne
cmp
jbe
jmp
jle
mov
mov
mov
mov
call
mov
cdq
add
adc
pop
pop
pop
pop
pop
ret
nop
push
push
mov
push
push
add
mov
add
lea
cmp
jge
mov
call
test
jne
xor
jmp
mov
mov
sub
and
call
mov
call
test
je
mov
lea
lea
mov
call
jmp
xor
xor
mov
xor
mov
mov
test
jne
lea
mov
xor
call
mov
mov
call
xor
mov
call
mov
mov
shr
mov
mov
mov
and
call
cmp
jne
mov
call
mov
mov
shr
mov
mov
mov
and
call
test
jne
mov
jmp
add
jmp
mov
inc
mov
add
test
jle
cmp
jl
dec
jmp
mov
mov
inc
cmp
jl
push
lea
lea
mov
call
xor
mov
add
cmp
jge
mov
call
test
jne
xor
jmp
lea
mov
call
cmp
jge
add
and
mov
inc
jmp
cmp
jge
cmp
jne
mov
call
mov
mov
shr
mov
add
call
jmp
mov
call
mov
mov
shr
mov
add
call
jmp
mov
mov
inc
mov
add
test
jle
cmp
jl
jmp
cmp
jne
mov
call
mov
mov
shr
mov
add
call
jmp
mov
call
mov
mov
shr
mov
add
call
jmp
mov
inc
mov
add
test
jle
cmp
jl
cmp
jl
mov
mov
cmp
jle
xor
jmp
push
lea
mov
mov
call
push
lea
lea
mov
call
push
lea
lea
mov
call
push
lea
lea
mov
call
mov
lea
mov
call
mov
add
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
test
jne
mov
lea
mov
xor
call
xor
mov
xor
mov
mov
lea
mov
xor
call
lea
mov
xor
call
lea
mov
xor
call
lea
mov
xor
call
lea
mov
xor
call
lea
mov
xor
call
xor
xor
mov
mov
mov
mov
mov
call
xor
xor
mov
mov
mov
mov
mov
xor
mov
pop
ret
nop
nop
push
mov
push
push
push
lea
call
xor
mov
xor
jmp
mov
mov
test
je
lea
mov
lea
call
lea
mov
call
mov
mov
call
push
call
pop
inc
cmp
jl
lea
call
xor
jmp
mov
mov
test
je
lea
mov
lea
call
lea
mov
call
mov
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
pop
ret
push
mov
cmp
je
mov
call
xor
mov
xor
xor
mov
mov
pop
ret
nop
push
mov
add
push
push
mov
mov
lea
mov
xor
call
mov
shl
lea
xor
call
xor
cmp
jge
mov
xor
mov
and
inc
inc
cmp
jl
xor
xor
mov
mov
mov
mov
mov
xor
add
add
mov
sub
mov
shl
cmp
jle
mov
mov
mov
add
mov
mov
inc
cmp
jl
xor
cmp
jge
mov
mov
test
je
mov
and
and
mov
inc
mov
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
push
push
push
add
test
mov
lea
mov
mov
mov
mov
mov
mov
jne
mov
mov
add
cmp
je
test
je
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
cmp
je
add
mov
mov
mov
cmp
jne
jmp
lea
mov
cmp
je
mov
jmp
mov
mov
add
cmp
jne
lea
cmp
jne
mov
jmp
mov
inc
mov
mov
cmp
je
mov
cmp
ja
xor
jmp
mov
mov
cmp
je
add
mov
cmp
jne
xor
movzx
mov
movzx
dec
sub
mov
sub
add
cmp
jb
lea
cmp
setb
and
jmp
mov
lea
add
add
add
xor
dec
div
mov
inc
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
je
sub
mov
jmp
cmp
je
mov
mov
mov
mov
jmp
xor
mov
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
xor
jmp
lea
cmp
jne
mov
add
pop
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
int3
int3
jmp
jmp
jmp
int3
int3
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
add
enter
add
nop
add
add
and
repnz
add
nop
push
jmp
xor
add
add
add
add
push
inc
add
push
inc
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
and
ins
ja
jo
cs
ins
add
inc
jne
outs
inc
outs
ins
jo
gs
add
dec
push
add
push
dec
inc
inc
inc
inc
dec
dec
inc
inc
dec
inc
add
dec
inc
dec
inc
inc
dec
inc
add
and
push
push
inc
push
push
push
dec
push
inc
xor
inc
push
dec
dec
inc
pop
push
push
dec
dec
add
sub
push
popa
jb
inc
pop
add
js
ins
add
js
popa
ins
add
inc
push
push
inc
dec
inc
add
arpl
imul
inc
dec
push
inc
inc
dec
inc
add
je
jo
jb
jb
jae
js
popa
arpl
jae
pop
arpl
arpl
and
ins
and
sub
and
sub
and
sub
and
jb
outs
popa
jae
and
jae
inc
gs
gs
add
je
push
imul
push
outs
je
dec
jbe
jb
jb
je
add
je
jo
push
gs
jo
outs
fs
outs
jae
add
gs
je
jo
push
push
jne
add
jbe
push
popa
je
add
cs
jo
cmp
jb
add
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
addr16
ins
inc
imul
and
add
ins
outs
imul
imul
je
ins
ins
add
gs
add
add
data16
popa
jb
pop
push
imul
inc
pop
add
jb
je
ins
inc
ins
popa
jae
dec
popa
ins
add
push
add
add
add
add
js
jo
ins
add
jb
add
add
popa
add
outs
add
je
cmp
bound
ins
add
outs
add
add
cmp
je
ins
add
gs
fs
gs
and
je
sub
jbe
and
outs
je
outs
je
je
jo
and
arpl
je
outs
je
and
je
push
and
popa
jb
gs
add
sub
ds
push
add
push
add
jo
add
jb
add
je
ins
gs
jae
jns
gs
je
ins
gs
jns
outs
outs
je
popaw
ins
imul
popa
ins
and
outs
outs
je
jae
jp
cmp
xor
jge
das
jae
jns
gs
outs
bound
cmp
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
add
inc
add
inc
add
inc
add
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
gs
popa
addr16
sub
add
sbb
add
dec
add
add
and
inc
add
add
add
(bad)
(bad)
jmp
add
add
arpl
xor
cs
ins
add
arpl
xor
cs
ins
add
dec
inc
push
dec
xor
cs
dec
dec
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
add
add
add
add
add
add
aas
add
pop
add
add
jb
jb
gs
add
js
xor
add
sub
jl
add
sub
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
aas
aas
add
add
add
push
gs
arpl
imul
ins
gs
push
gs
outs
jb
push
jb
jbe
ins
gs
add
add
dec
add
dec
add
nop
nop
nop
push
inc
inc
inc
sub
inc
inc
or
inc
inc
sub
sub
sub
add
adc
add
add
and
add
push
push
data16
push
add
cmp
add
jle
xlat
cmp
add
add
add
aas
mov
add
add
sbb
pop
push
push
push
add
add
pop
sub
add
add
fadd
add
add
test
add
add
mov
add
push
push
add
pop
pop
add
add
add
add
jb
jb
inc
push
add
inc
push
inc
add
inc
dec
push
inc
add
and
add
ins
jo
add
add
add
add
or
inc
add
jb
jb
add
aas
nop
nop
nop
fnstsw
pop
mov
fs
pusha
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
add
add
push
push
push
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
inc
out
adc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
or
add
add
add
rol
add
add
inc
and
jg
dec
sbb
scas
sub
(bad)
adc
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
push
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
sbb
add
add
add
rol
add
add
inc
popa
push
or
scas
int
adc
leave
loop
mov
add
and
mov
add
out
add
add
or
add
add
add
cmp
inc
add
ret
sub
add
jl
inc
add
add
ret
add
cmp
add
inc
add
add
xor
add
add
add
add
add
add
add
lds
add
add
add
mov
inc
add
lds
add
ret
add
jl
inc
add
lds
add
lds
add
add
add
add
add
lds
add
add
lds
add
mov
sbb
add
das
mov
cmp
mov
pop
mov
jae
add
test
add
cdq
mov
add
add
jmp
add
add
add
sbb
add
das
mov
cmp
mov
pop
mov
jae
add
test
add
cdq
mov
add
add
lods
mov
mov
mov
loope
add
cmc
mov
add
add
adc
add
pop
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
sbb
add
sub
add
cmp
leave
add
pop
leave
add
ins
leave
add
jg
add
(bad)
popf
leave
add
test
leave
add
ret
leave
add
aad
add
in
add
dec
add
or
add
sbb
add
das
retf
cmp
add
push
retf
arpl
add
jge
add
xchg
retf
test
retf
leave
retf
fxch
add
loope
add
stc
retf
bswap
add
and
retf
add
cmp
add
add
mov
int
add
loope
add
cmc
mov
add
add
adc
add
pop
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
sbb
add
sub
add
cmp
leave
add
pop
leave
add
ins
leave
add
jg
add
(bad)
popf
leave
add
test
leave
add
ret
leave
add
aad
add
in
add
dec
add
or
add
sbb
add
das
retf
cmp
add
push
retf
arpl
add
jge
add
xchg
retf
test
retf
leave
retf
fxch
add
loope
add
stc
retf
bswap
add
and
retf
add
cmp
add
add
add
add
add
adc
add
dec
retf
add
popa
retf
add
jne
add
add
add
dec
retf
add
popa
retf
add
jne
add
add
add
mov
add
add
add
mov
add
add
add
cdq
retf
add
scas
retf
add
ror
add
retf
add
out
add
cmc
retf
add
adc
add
and
add
add
retf
add
ror
add
retf
add
out
add
cmc
retf
add
adc
add
and
add
add
int3
add
pop
int3
add
imul
add
add
mov
add
fwait
int3
add
test
int3
add
retf
int3
add
(bad)
add
out
int3
add
sti
int3
add
or
add
sbb
add
sub
add
cmp
add
dec
int
add
add
gs
add
add
xchg
add
xchg
int
add
int
add
int
add
int
add
int
add
int
add
into
add
or
into
add
sub
into
add
dec
into
add
pop
into
add
imul
add
add
(bad)
into
add
movs
into
add
mov
add
(bad)
into
add
ror
add
(bad)
add
out
into
add
dec
add
adc
add
pop
iret
add
xor
add
inc
iret
add
push
iret
add
arpl
add
add
add
cmp
int3
add
pop
int3
add
imul
add
add
mov
add
fwait
int3
add
test
int3
add
retf
int3
add
(bad)
add
out
int3
add
sti
int3
add
or
add
sbb
add
sub
add
cmp
add
dec
int
add
add
gs
add
add
xchg
add
xchg
int
add
int
add
int
add
int
add
int
add
int
add
into
add
or
into
add
sub
into
add
dec
into
add
pop
into
add
imul
add
add
(bad)
into
add
movs
into
add
mov
add
(bad)
into
add
ror
add
(bad)
add
out
into
add
dec
add
adc
add
pop
iret
add
xor
add
inc
iret
add
push
iret
add
arpl
add
add
add
jno
add
or
add
iret
add
mov
add
add
add
or
add
iret
add
mov
add
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
add
push
jae
push
outs
imul
jb
jbe
ins
gs
add
dec
outs
outs
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
outs
push
jb
arpl
jae
outs
imul
add
add
addr16
ins
outs
jae
dec
gs
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
jo
outs
dec
gs
js
add
add
addr16
jne
jb
push
popa
ins
jne
inc
js
add
add
push
gs
gs
popa
ins
jne
inc
js
add
add
push
gs
imul
imul
push
gs
imul
imul
inc
ins
outs
jae
dec
popa
outs
fs
add
add
ins
jo
jb
push
je
imul
add
gs
je
inc
imul
jns
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
jb
popa
je
inc
imul
jb
popa
je
inc
imul
gs
gs
inc
imul
gs
gs
inc
imul
outs
jae
popa
je
push
imul
ins
gs
imul
js
je
jb
arpl
jae
add
inc
js
popa
outs
fs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
ins
gs
imul
arpl
inc
imul
add
inc
imul
outs
push
jns
je
ins
push
imul
inc
imul
add
add
outs
fs
imul
gs
add
add
inc
imul
je
imul
inc
imul
inc
imul
imul
inc
imul
imul
jne
arpl
add
add
gs
imul
add
inc
gs
push
dec
outs
outs
add
add
je
outs
ins
ins
popa
outs
fs
imul
inc
gs
jne
jb
outs
je
imul
jns
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
inc
gs
popa
je
inc
outs
jb
popa
je
add
add
inc
gs
imul
bound
gs
add
add
inc
gs
imul
bound
gs
add
add
inc
gs
imul
add
inc
gs
jne
ins
push
popa
je
dec
popa
ins
gs
add
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
je
outs
arpl
gs
outs
outs
inc
add
add
inc
gs
outs
fs
gs
imul
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
inc
gs
jne
bound
inc
outs
jb
popa
je
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
dec
popa
outs
fs
add
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
gs
imul
je
add
add
je
imul
popa
je
add
add
inc
gs
gs
imul
add
inc
ins
outs
bound
inc
ins
ins
outs
arpl
add
dec
gs
jo
ins
ins
outs
arpl
add
dec
gs
jo
jb
add
add
dec
gs
jo
gs
ins
ins
outs
arpl
add
dec
jae
inc
inc
push
dec
gs
fs
jns
add
add
dec
outs
popa
fs
imul
add
add
dec
outs
arpl
inc
imul
outs
inc
imul
add
dec
outs
jbe
inc
imul
outs
jbe
inc
imul
add
ins
je
inc
jns
gs
outs
push
imul
add
push
gs
fs
imul
gs
jne
jb
outs
je
imul
jns
add
add
push
gs
outs
fs
inc
imul
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
add
je
imul
bound
gs
add
add
push
gs
imul
bound
gs
add
add
push
gs
imul
gs
add
add
je
imul
add
push
gs
popa
jae
inc
jb
outs
jb
add
add
gs
add
push
jns
je
ins
push
imul
ins
gs
imul
push
popa
imul
ins
gs
bound
arpl
add
fs
push
dec
jne
je
inc
jns
add
add
imul
add
ins
jae
jb
ins
jo
inc
add
add
jb
outs
inc
add
add
inc
outs
ins
ins
inc
ins
addr16
js
outs
fs
jb
outs
jb
add
add
je
jo
outs
inc
imul
add
add
inc
gs
popa
jbe
inc
imul
add
add
inc
gs
gs
dec
bound
arpl
add
push
dec
inc
jb
ja
gs
outs
jb
outs
ins
fs
add
add
push
dec
inc
push
dec
outs
je
data16
add
add
inc
imul
je
outs
outs
inc
add
add
push
dec
inc
gs
imul
add
add
push
dec
inc
gs
popa
ins
ins
outs
arpl
add
push
dec
inc
gs
jo
arpl
ins
inc
outs
ins
fs
outs
arpl
imul
push
push
js
arpl
gs
js
add
add
inc
gs
popa
je
inc
jb
ins
dec
inc
dec
imul
add
popa
jb
outs
dec
gs
inc
add
add
inc
push
dec
gs
inc
jne
inc
add
add
inc
push
jo
jb
add
add
inc
outs
jo
push
arpl
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outs
arpl
add
add
je
outs
jns
arpl
add
add
je
outs
jns
imul
add
ins
outs
addr16
outs
js
popa
jb
ins
inc
add
add
jo
je
push
popa
addr16
add
add
inc
outs
popa
bound
imul
add
inc
outs
fs
imul
add
outs
fs
imul
inc
add
add
je
ins
popa
jae
dec
popa
ins
gs
add
add
je
ins
imul
je
add
inc
gs
ins
addr16
je
ins
add
add
inc
gs
ins
addr16
je
ins
push
gs
inc
add
add
je
gs
popa
addr16
add
add
je
popa
jb
outs
je
add
inc
gs
jns
inc
outs
ins
outs
jb
add
inc
gs
jns
je
ins
dec
gs
imul
inc
gs
imul
add
je
imul
outs
addr16
add
add
inc
gs
imul
arpl
add
je
imul
js
inc
add
add
dec
jae
imul
add
dec
jae
imul
jae
bound
add
dec
outs
popa
fs
imul
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
fs
je
imul
dec
popa
jo
imul
imul
dec
gs
popa
addr16
outs
js
add
add
ins
push
outs
inc
push
add
add
ins
push
outs
inc
push
data16
add
add
push
gs
jae
addr16
add
add
push
outs
jae
dec
gs
popa
addr16
add
add
push
imul
popa
jae
inc
js
add
add
push
outs
fs
ins
addr16
je
ins
dec
gs
popa
addr16
add
add
outs
fs
gs
popa
addr16
add
add
push
gs
ins
addr16
je
ins
push
gs
inc
add
add
je
outs
arpl
add
add
push
gs
outs
jne
add
push
gs
imul
outs
addr16
add
add
push
gs
imul
jae
add
add
je
imul
js
inc
add
add
push
push
outs
outs
ja
add
add
outs
jae
popa
je
dec
gs
popa
add
add
push
jo
popa
je
push
imul
add
push
popa
imul
jne
dec
fs
add
add
ja
jo
imul
add
jae
jb
outs
je
inc
add
add
inc
dec
push
dec
inc
inc
jb
ins
push
je
imul
outs
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
add
add
gs
je
push
je
gs
ins
dec
outs
dec
inc
ins
outs
bound
add
add
gs
outs
imul
add
add
gs
outs
imul
imul
add
add
add
pop
add
add
add
add
pusha
add
add
add
rol
add
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
js
add
nop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fadd
add
lock
sbb
or
add
and
add
cmp
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
sub
add
in
add
add
add
nop
loope
add
add
in
add
add
add
clc
out
add
add
add
add
add
add
add
jmp
add
in
add
add
add
mov
add
jbe
add
in
add
add
add
add
add
(bad)
add
add
add
add
add
add
hlt
add
mov
add
in
add
add
add
nop
cmc
add
add
add
in
add
add
add
xchg
test
add
add
add
add
add
add
stc
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
fadd
add
in
add
add
add
fdivr
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
dec
add
pop
add
add
dec
add
inc
add
push
add
inc
add
push
add
dec
add
inc
add
add
add
add
inc
add
push
add
inc
add
add
add
inc
add
inc
add
inc
add
add
push
add
inc
add
dec
add
inc
add
inc
add
dec
add
inc
add
add
add
push
add
push
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
dec
or
add
or
add
or
add
add
sub
add
add
add
add
rol
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
inc
xor
adc
add
inc
xor
inc
adc
add
inc
xor
add
xor
inc
rdpmc
add
cmp
adc
add
cmp
adc
add
xor
inc
or
add
aaa
xor
inc
or
add
xor
pop
inc
or
add
xor
and
add
xor
and
add
xor
inc
pop
xor
add
sub
add
sub
sub
add
xor
inc
add
add
daa
xor
inc
add
inc
add
add
and
sbb
sbb
add
and
sbb
sbb
add
and
sbb
sbb
add
pop
xor
inc
or
sbb
add
sbb
sbb
sbb
add
sbb
sbb
sbb
add
sbb
sbb
sbb
add
pop
xor
inc
adc
sbb
add
adc
sbb
sbb
add
adc
sbb
sbb
add
adc
sbb
sbb
add
rdpmc
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
pop
xor
inc
and
sbb
add
add
sbb
sbb
add
add
sbb
sbb
add
sbb
sbb
add
sbb
sbb
add
pop
inc
sub
sbb
add
adc
sub
add
inc
xor
add
adc
sbb
add
cmove
xor
add
or
xor
add
inc
xor
add
or
sbb
add
pop
inc
cmp
sbb
add
add
cmp
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
inc
xor
add
adc
cmp
add
xor
add
xor
add
xor
add
xor
xor
inc
add
adc
add
xor
inc
add
adc
add
and
add
add
adc
adc
add
and
add
push
ja
add
add
adc
adc
add
and
add
ja
ja
add
add
adc
adc
add
push
add
or
ja
aaa
daa
jne
add
adc
adc
add
sbb
add
addr16
xor
and
add
adc
adc
add
sbb
add
push
ja
xor
xor
or
ja
or
add
adc
adc
add
sbb
add
addr16
xor
and
or
add
adc
adc
add
push
add
or
push
xor
xor
or
and
add
adc
adc
add
adc
add
addr16
xor
xor
jb
and
jne
add
adc
adc
add
adc
add
push
ja
xor
xor
jb
and
jne
add
adc
adc
add
adc
add
addr16
xor
and
jne
add
adc
adc
add
push
add
or
push
xor
xor
jb
and
jne
add
adc
adc
add
or
add
addr16
xor
xor
jb
and
jne
add
adc
adc
add
or
add
push
ja
xor
xor
jb
and
jne
add
adc
adc
add
or
add
addr16
xor
and
jne
add
adc
adc
add
pop
add
add
jne
xor
jb
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
addr16
add
and
jne
add
adc
adc
add
pop
add
sbb
add
ja
and
push
push
add
adc
adc
add
pop
add
sbb
add
push
ja
jne
daa
push
add
add
adc
adc
add
pop
add
addr16
xor
adc
push
push
ja
daa
push
push
add
adc
adc
add
pop
add
addr16
add
ja
adc
push
jne
push
add
add
adc
adc
add
pop
add
adc
add
push
ja
adc
jne
add
inc
add
adc
add
pop
add
adc
add
push
ja
adc
adc
or
push
add
add
adc
adc
add
pop
add
addr16
xor
or
push
adc
adc
add
jne
add
add
inc
add
adc
add
pop
add
addr16
add
push
ja
adc
jne
add
add
push
inc
add
adc
add
pop
add
or
add
push
ja
adc
ja
add
xor
xor
pop
add
or
add
push
ja
adc
ja
add
add
add
or
add
adc
add
pop
add
addr16
xor
or
push
adc
ja
add
add
add
add
xor
or
jo
add
add
xor
push
ja
movups
or
push
add
add
push
xor
inc
add
rdpmc
add
inc
ja
add
add
xor
push
adc
ja
add
xor
inc
add
or
ja
add
or
ja
movups
or
push
add
add
or
or
or
push
inc
add
pop
add
or
push
adc
ja
add
add
or
pop
inc
add
or
pop
inc
add
pop
add
add
jno
adc
or
push
add
add
or
push
inc
add
push
xor
inc
add
or
add
adc
or
push
add
xor
xor
inc
add
or
add
push
or
add
push
ja
add
add
or
add
add
add
or
add
addr16
adc
or
push
add
add
or
add
xor
inc
add
or
add
push
adc
add
push
xor
inc
add
adc
or
add
or
add
rdpmc
add
adc
or
ja
add
add
adc
add
adc
push
add
addr16
add
adc
add
adc
xor
xor
add
inc
add
xor
xor
add
inc
add
cmp
add
ja
xor
add
inc
push
xor
add
inc
pop
xor
add
inc
push
xor
add
add
inc
pop
xor
add
inc
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
pop
xor
add
add
push
inc
sub
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
pop
add
pop
xchg
add
jg
bound
jg
and
imul
stos
dec
jmp
add
inc
add
pop
add
(bad)
(bad)
inc
jo
mov
test
jg
add
add
add
pop
pop
add
add
pop
adc
pop
neg
fstp
fst
jg
adc
adc
add
xor
add
add
jae
adc
adc
add
add
add
add
loopne
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
adc
add
adc
add
sbb
add
cmps
mov
push
add
sbb
add
rol
add
je
daa
adc
int3
mov
add
jg
dec
add
cmp
ja
mov
lods
add
sti
clc
add
iret
retf
add
call
or
add
es
iret
into
add
std
cld
add
(bad)
inc
lock
inc
ficom
inc
sar
add
jns
add
ins
inc
shl
mov
call
add
(bad)
pop
add
add
add
add
dec
add
push
aas
add
sub
add
inc
push
add
add
retf
jns
and
pop
add
in
cmps
loope
add
popf
and
add
add
cmps
pop
add
pop
mov
add
stc
std
add
bound
add
dec
add
jp
cmc
add
clc
std
add
add
add
gs
in
add
add
loope
mov
add
inc
adc
add
out
xchg
xlat
or
fist
add
adc
dec
jo
add
mov
ltr
add
push
popf
ret
loope
add
into
add
add
push
xchg
add
add
add
add
test
add
movs
add
inc
add
add
push
imul
jnp
add
dec
arpl
add
add
add
add
popa
bound
add
add
add
das
daa
pop
sub
pop
xor
pop
pop
pop
pop
push
add
daa
sbb
xor
pop
pop
pop
dec
add
sbb
dec
dec
cmp
push
adc
add
inc
sbb
add
or
xor
inc
inc
sbb
cmp
sub
cmp
add
sbb
xor
ss
adc
add
xor
xor
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
and
and
and
add
adc
push
push
pop
push
pop
push
pop
push
pop
push
sbb
add
or
adc
adc
adc
push
add
push
pop
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
pop
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
add
jnp
jnp
add
jnp
xor
add
add
add
mov
mov
jae
add
add
add
jnp
add
jnp
mov
add
add
add
mov
mov
jnp
add
add
add
ja
add
jnp
mov
xor
add
add
add
mov
jnp
js
add
add
jo
add
jnp
jnp
mov
add
add
mov
mov
add
mov
mov
add
add
jnp
add
jnp
mov
mov
add
add
mov
mov
jnp
jnp
add
add
jnp
jnp
jnp
jnp
mov
add
add
ja
ja
ja
ja
mov
add
cmp
cmp
cmp
cmp
cmp
aaa
mov
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
aaa
add
add
add
add
add
and
inc
int3
add
adc
cmp
xor
add
dec
add
push
add
cmp
push
inc
int3
add
adc
xor
dec
int3
add
adc
add
sub
mov
adc
add
mov
push
add
movs
dec
into
add
push
mov
add
daa
push
push
push
cmp
add
jg
inc
push
not
jno
cmp
add
add
push
push
push
test
add
jg
inc
push
not
cmp
cmp
add
add
push
push
push
add
add
add
add
jg
inc
push
not
add
add
add
add
add
push
add
add
lock
push
add
push
add
push
add
jg
add
aas
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
sldt
add
add
xadd
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
pop
lock
pop
clc
add
add
add
add
add
add
add
aas
inc
arpl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
dec
sldt
pop
add
add
add
push
or
and
jo
add
jnp
add
jo
add
add
arpl
arpl
jo
jo
jg
jg
add
add
dec
pop
add
push
pusha
add
push
push
add
pop
ins
add
pop
ins
add
push
jo
add
add
pop
js
add
add
gs
add
add
gs
add
add
addr16
add
add
pusha
jg
add
add
imul
ins
jnp
sub
add
add
add
add
add
push
add
iret
pop
add
call
add
jge
add
jo
add
and
adc
nop
add
pop
xchg
or
outs
test
inc
add
pop
add
jae
dec
fidiv
push
push
cmc
xchg
xor
call
inc
add
mov
add
imul
add
ins
add
outs
xchg
add
add
ja
add
jp
add
jae
add
je
add
jae
add
jp
add
jnp
add
jge
add
jle
add
js
add
jp
add
jg
add
test
nop
add
add
adc
lahf
add
and
add
pop
rol
(bad)
jb
add
adc
add
xchg
add
(bad)
mov
add
mov
mov
add
mov
add
add
mov
add
mov
add
mov
mov
add
retf
leave
iret
add
int
add
retf
add
rol
push
iret
aad
add
rol
add
xlat
add
fcomp
add
(bad)
add
fstp
add
(bad)
rol
add
loopne
add
loop
push
loop
add
lock
div
add
fild
arpl
out
pop
repz
sbb
(bad)
iret
add
(bad)
inc
(bad)
(bad)
(bad)
(bad)
adc
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fs
push
push
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jb
jb
jb
jb
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jb
jbe
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jae
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jae
jg
jbe
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
ins
add
add
jb
jb
jae
jg
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
add
jb
cmp
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
add
add
add
cmp
jle
jle
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
add
add
add
jae
jg
jle
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
cmp
cmp
jnp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jo
jae
jg
jnp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
jb
jb
jb
jo
jae
jg
jp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
imul
imul
imul
push
xor
jp
(bad)
(bad)
(bad)
(bad)
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
data16
gs
ins
jne
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
inc
popa
dec
dec
dec
push
popa
ins
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
dec
popa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
or
das
xor
adc
pop
adc
adc
sbb
sub
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
xor
xor
pop
adc
adc
push
sbb
inc
dec
popa
(bad)
(bad)
(bad)
sbb
sbb
rdpmc
cmp
sub
xor
add
push
pop
pop
push
adc
adc
adc
dec
popa
(bad)
sbb
and
cmp
xor
xor
add
push
pop
pop
push
and
push
sbb
inc
dec
inc
(bad)
sbb
and
cmp
add
xchg
adc
adc
pop
sbb
inc
inc
(bad)
(bad)
(bad)
sbb
or
xor
xor
adc
push
gs
adc
adc
pop
push
inc
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
aaa
mov
sub
mov
adc
push
pop
arpl
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
jle
adc
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
outs
adc
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
adc
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
inc
xchg
xchg
inc
(bad)
(bad)
(bad)
lock
push
add
push
add
push
add
jg
add
aas
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
sldt
add
add
xadd
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
pop
lock
add
add
add
add
add
add
aas
inc
add
inc
arpl
rol
nop
add
add
pop
add
add
ret
add
add
add
xchg
or
ja
add
or
mov
dec
add
add
pop
add
push
add
add
push
add
mov
imul
(bad)
(bad)
inc
add
add
add
push
add
add
or
add
add
(bad)
(bad)
inc
pop
jnp
or
dec
pop
push
mov
jg
push
ja
dec
(bad)
std
and
in
jle
mov
add
add
add
add
add
gs
inc
add
add
add
push
add
add
add
add
add
add
(bad)
inc
mov
add
add
sub
add
add
add
add
add
add
push
add
add
or
add
add
(bad)
(bad)
inc
push
es
or
imul
ja
test
js
jbe
jno
push
push
push
sti
push
sbb
outs
js
pop
sbb
xchg
int
aad
sub
push
bound
sti
push
sbb
(bad)
push
mov
and
arpl
gs
mov
xor
add
add
add
push
add
add
sub
ja
xor
push
add
add
inc
pop
add
add
add
ja
xor
push
add
add
inc
ins
add
add
push
inc
ror
nop
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
push
add
add
(bad)
(bad)
inc
push
(bad)
pop
xchg
dec
xchg
(bad)
gs
(bad)
pop
add
add
add
sub
cmp
add
add
add
mov
add
add
add
add
add
inc
add
add
add
push
add
add
and
xor
xor
push
add
add
inc
pop
add
add
add
xor
xor
push
add
add
inc
ins
add
add
add
add
add
push
add
add
add
inc
add
ror
nop
add
add
add
add
lock
add
add
add
add
add
or
push
add
add
push
add
add
add
inc
add
add
push
add
add
dec
add
add
add
add
(bad)
inc
add
add
add
push
add
add
add
fld
pop
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
rol
fild
cmp
push
add
add
inc
push
add
add
add
add
add
push
add
add
inc
jle
add
add
rol
nop
add
add
pop
add
push
add
add
add
xchg
jge
or
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
push
add
xor
push
add
add
inc
pop
add
add
add
dec
add
add
add
add
inc
ins
add
add
add
add
add
(bad)
(bad)
inc
push
or
dec
cmp
add
add
add
or
push
add
add
push
add
add
add
inc
add
add
add
push
add
add
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
push
add
add
add
add
cdq
add
(bad)
(bad)
(bad)
inc
add
rol
nop
add
add
adc
xor
sub
test
xchg
add
add
add
movs
mov
bound
add
add
add
add
push
add
add
or
or
xchg
add
add
(bad)
(bad)
inc
push
xchg
dec
repnz
iret
jle
pop
sub
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
or
and
xchg
add
add
(bad)
(bad)
inc
es
outs
js
pop
or
sub
jbe
test
add
add
add
add
add
add
add
add
add
data16
inc
add
add
add
push
add
add
and
add
add
(bad)
inc
add
add
add
push
add
add
and
add
add
(bad)
inc
add
add
add
push
add
add
or
inc
add
(bad)
(bad)
inc
arpl
dec
cmp
add
add
add
add
add
add
add
add
add
addr16
inc
add
add
add
push
add
add
and
add
add
(bad)
inc
add
add
add
push
add
add
and
add
add
(bad)
inc
add
add
add
push
add
add
add
(bad)
jmp
(bad)
inc
add
add
add
push
add
add
or
jae
xor
or
inc
add
add
sub
add
add
add
add
add
add
add
xor
or
inc
nop
or
add
sub
add
add
add
jae
xor
or
inc
push
or
add
sub
add
add
add
add
add
add
add
add
(bad)
inc
add
add
sub
add
add
add
add
add
add
add
add
(bad)
inc
nop
or
add
add
push
add
add
ins
add
add
(bad)
inc
ins
sub
add
sub
add
add
push
inc
ror
nop
add
add
or
sbb
das
add
lock
add
add
imul
inc
add
and
jmp
test
or
mov
dec
add
push
or
push
add
add
push
add
add
add
inc
add
add
add
push
add
add
dec
add
add
(bad)
(bad)
inc
push
cmp
add
add
add
add
add
and
add
add
lods
add
add
add
(bad)
inc
add
add
add
push
add
add
push
add
add
(bad)
inc
mov
add
add
sub
add
add
add
add
add
push
add
add
dec
add
add
add
inc
add
add
add
push
add
add
dec
add
add
(bad)
(bad)
inc
mov
(bad)
cmps
pop
add
add
add
add
adc
add
dec
add
add
add
add
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
adc
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
rol
fild
cmp
push
add
add
inc
mov
add
add
add
add
push
add
add
push
add
add
push
add
add
inc
ins
add
add
push
inc
pop
add
nop
jmp
push
cmp
add
sub
mov
add
pop
add
sub
(bad)
(bad)
(bad)
and
and
add
cwde
cdq
test
push
sub
test
out
jp
add
add
add
pop
arpl
or
mov
jg
test
retf
pop
pop
arpl
or
mov
jg
test
retf
arpl
pop
add
lea
pop
test
push
pop
pop
or
and
add
mov
add
gs
push
bound
pop
and
and
add
gs
sbb
pop
and
and
add
gs
sbb
pop
xchg
dec
cmp
add
inc
adc
pop
xchg
dec
and
and
add
push
add
and
xor
lea
add
pop
add
xchg
out
mov
add
add
add
add
push
add
and
xor
lea
xor
add
outs
arpl
add
add
push
add
and
xor
lea
xor
add
add
sbb
xchg
dec
and
and
add
xchg
out
mov
xor
js
jbe
push
std
xor
loope
or
xchg
dec
and
and
add
mov
push
sbb
xchg
dec
jae
in
xchg
sbb
lds
xchg
test
push
sub
push
or
push
or
jg
test
maxps
addr16
push
vpermt2d
dec
push
or
arpl
push
into
dec
and
and
add
push
add
add
dec
mov
jg
push
or
mov
jg
test
pop
arpl
add
add
jae
in
xchg
add
sbb
bound
pop
arpl
dec
mul
push
pop
jne
xchg
out
mov
add
or
dec
outs
pusha
xchg
jp
push
mov
(bad)
push
hlt
data16
jle
and
outs
pusha
add
push
pop
add
mov
add
pop
loopne
aad
mov
add
addr16
dec
xchg
dec
loopne
aad
stos
mov
push
cli
pop
add
or
test
arpl
push
ror
xchg
pop
sub
jp
pop
sub
int
mov
das
push
test
and
push
add
outs
add
add
jae
and
jbe
lea
imul
dec
mov
pop
lds
sbb
shl
dec
mov
mov
mov
dec
push
add
or
test
add
gs
jb
addr16
(bad)
int
aad
mov
mov
jp
pop
add
inc
bound
xchg
dec
bound
cmp
jae
je
jns
ins
add
add
outs
add
add
data16
outs
add
add
popa
add
imul
cmp
and
inc
add
imul
sub
mov
dec
and
cmp
data16
outs
add
add
imul
cmp
xor
xor
cmp
jge
cmp
das
add
je
jns
ins
add
add
jne
ins
add
add
ins
add
add
sti
push
and
cmp
bound
add
add
add
add
add
arpl
pop
jecxz
mov
xor
das
add
add
add
bound
jb
add
bound
jb
add
add
ins
add
add
sub
add
bound
add
enter
das
add
add
add
arpl
jbe
pop
adc
dec
or
pop
push
cmp
xor
push
in
dec
bound
push
add
add
add
add
add
add
bound
jb
add
bound
jb
add
add
ins
add
add
arpl
jbe
push
cmp
dec
pop
pop
sub
jmp
push
xchg
dec
jecxz
mov
push
sbb
stos
mov
sub
add
das
add
add
add
das
add
ins
add
add
cmp
jns
jno
or
sub
add
adc
adc
add
add
sub
add
add
adc
add
add
sbb
push
add
and
add
add
call
add
and
add
add
add
add
cmp
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
jae
ins
bound
fs
je
je
or
gs
imul
xor
xor
xor
or
jb
arpl
jae
jb
jb
push
je
jb
cmp
and
popa
ins
gs
push
inc
push
and
pop
and
jns
gs
xor
and
ds
jae
jb
jo
imul
push
inc
push
and
pop
and
fs
gs
fs
jb
jo
imul
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
jae
arpl
imul
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
and
and
and
and
and
or
and
and
inc
arpl
jae
cmp
jae
and
ds
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
das
jae
arpl
imul
je
jne
je
outs
outs
ds
jo
outs
fs
arpl
or
fs
outs
fs
je
jae
gs
bound
or
and
jae
gs
bound
fs
je
je
or
and
and
gs
xor
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
jb
imul
xor
xor
xor
or
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
addr16
addr16
ds
das
fs
outs
fs
je
jae
gs
bound
or
gs
outs
fs
arpl
or
jae
gs
bound
or
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
popa
jb
sbb
add
nop
jae
add
add
add
jp
and
ja
add
jl
add
add
sar
add
add
sbb
add
add
push
or
jmp
adc
pop
push
out
mov
mov
(bad)
xor
push
aam
out
sbb
sub
ror
aam
fmulp
mov
faddp
pop
sbb
cdq
lock
jecxz
loope
mov
dec
sbb
add
mov
xchg
aaa
stc
in
ror
movs
dec
dec
aad
fiadd
xor
jle
je
nop
cmp
inc
add
add
add
add
pop
bound
sbb
add
add
inc
pop
inc
dec
inc
push
pop
fs
je
jo
imul
ss
cs
push
ins
popa
jae
dec
outs
outs
pop
or
dec
inc
cmp
xor
xor
cmp
sub
sub
inc
cmp
cmp
cmp
or
sub
add
add
add
add
add
aam
lahf
cmp
push
add
add
inc
pop
inc
dec
inc
push
add
push
gs
shl
xor
movs
sbb
add
cmp
add
popf
push
or
inc
lahf
sub
sbb
add
add
imul
imul
add
sbb
adc
sub
retf
xchg
adc
dec
add
dec
or
or
add
cmp
inc
or
xchg
inc
adc
and
pop
adc
mov
adc
jl
inc
adc
inc
push
inc
push
dec
shl
xor
pop
or
mov
neg
mov
fst
pushf
fbstp
mov
jg
stos
scas
scas
jmp
sub
out
jne
dec
ror
cs
lock
or
add
add
cmp
xor
add
dec
nop
pop
adc
(bad)
mov
cs
pushf
jle
add
std
mov
xor
adc
jg
pusha
or
cli
add
add
add
xchg
shr
push
lds
fcom
push
cmp
(bad)
adc
jecxz
enter
or
push
bound
dec
dec
stos
sub
repnz
jb
pop
lea
in
std
mov
std
push
das
xchg
shr
xor
outs
pop
repz
sbb
fbstp
adc
cmps
hlt
fcmovu
outs
jmp
outs
mov
sbb
ss
dec
sbb
(bad)
stos
dec
sbb
mov
lock
sub
dec
daa
out
ins
ins
pop
(bad)
xchg
sbb
shl
rol
pop
out
test
mov
jge
xor
hlt
xchg
xchg
stos
sub
pusha
sahf
jle
mov
data16
(bad)
shl
outs
gs
mov
mov
xor
xor
jg
pop
cmp
adc
cmps
cmps
lea
outs
ins
enter
mov
pusha
cmc
pop
dec
gs
cmp
call
aas
aas
dec
pop
lock
neg
adc
outs
cmp
popa
gs
mov
inc
pop
and
ja
clc
je
lods
sahf
dec
pop
hlt
pop
cs
xor
shl
call
repz
jecxz
ror
leave
stc
pop
jnp
push
jb
mov
cmp
(bad)
stc
ds
jmp
ins
iret
xor
fild
xchg
retf
jl
rcl
mov
das
outs
div
sbb
inc
movs
xchg
cmc
sbb
push
(bad)
dec
jp
cld
arpl
imul
jo
hlt
push
xchg
mov
cmp
adc
cmp
call
in
daa
jnp
or
pusha
icebp
cmp
mov
enter
adc
lock
scas
inc
hlt
push
pop
int3
inc
mov
xlat
sti
inc
pop
rol
rol
movs
xor
imul
and
cmps
jmp
sbb
mov
(bad)
lock
push
mov
fs
int3
pop
xlat
sub
es
test
fldenv
push
(bad)
dec
pop
fdivr
xor
push
leave
dec
push
mov
xchg
jl
push
(bad)
hlt
pusha
push
inc
add
mul
cmp
mov
cmp
stos
out
ficom
mov
cmps
xchg
imul
sbb
sub
pusha
std
mov
dec
aam
dec
jge
in
retf
mov
xchg
popa
mov
cmps
test
mov
(bad)
lahf
stos
xor
aad
in
pop
xchg
movs
sbb
dec
fnstsw
dec
lahf
lea
or
pop
int3
add
xor
mov
or
int
mov
sti
cmp
mov
fwait
fwait
in
xlat
lock
mov
xchg
lods
sub
push
movs
mov
mov
es
shl
call
or
pop
adc
or
sub
movs
jle
adc
mov
jg
(bad)
push
mov
inc
adc
out
dec
rcr
test
aaa
lea
bound
call
(bad)
cmp
rcl
test
cmp
add
hlt
fxch
adc
mov
mov
jle
mov
imul
cld
xchg
jecxz
js
aaa
or
sbb
sbb
pop
loop
dec
jge
aam
iret
shl
pop
mov
in
lods
xchg
mov
mov
xor
in
dec
ficom
mov
jge
es
inc
or
mov
push
test
call
cmp
ins
into
jle
stos
cmps
mov
push
dec
dec
sub
ficom
pop
sti
xchg
add
out
or
xor
adc
adc
loop
pop
into
clc
fwait
xchg
inc
div
mov
test
mov
pop
dec
push
out
ret
jbe
add
inc
jp
sub
ds
or
pusha
arpl
dec
mov
and
push
neg
cmps
xor
or
cli
adc
jecxz
outs
jp
mov
(bad)
fs
pusha
das
ret
ins
sbb
dec
nop
jbe
xlat
ins
lds
sbb
push
adc
jmp
shl
mov
imul
shr
dec
jmp
and
dec
jg
(bad)
pushf
call
(bad)
mov
ret
inc
retf
push
xor
pop
daa
add
add
jle
add
sub
shl
call
pop
sub
and
pusha
xchg
fs
test
mov
mov
inc
push
xchg
fdivr
add
fsubr
outs
rdtsc
add
mov
repnz
xchg
or
test
xor
pop
mov
cld
outs
add
call
xchg
mov
pop
jnp
pop
pop
sbb
lock
icebp
jmp
mov
jns
bound
cld
sub
ret
idiv
mov
inc
push
cmp
(bad)
pop
neg
or
ret
mov
xor
enter
arpl
test
adc
movs
ins
dec
fwait
pop
jns
inc
push
stos
fist
adc
and
jmp
imul
mov
dec
aas
scas
sbb
(bad)
bound
std
mov
fdivr
outs
retf
lods
into
adc
mov
inc
mov
pusha
ret
movs
scas
(bad)
push
jecxz
mov
inc
test
or
cld
jbe
and
aas
jle
repnz
push
or
dec
xlat
adc
aaa
inc
sbb
pop
mov
sar
iret
cmc
mov
mov
sbb
mov
push
xchg
clc
cmc
bound
or
mov
pop
test
mov
sahf
lods
xor
fcomp
sbb
dec
inc
xchg
mov
push
pop
xlat
ins
mov
jmp
mov
jo
rol
or
fist
loope
sub
jecxz
xchg
jno
inc
(bad)
(bad)
adc
std
push
les
ins
mov
adc
ret
ds
push
mov
shl
sbb
scas
xor
fist
(bad)
popf
rcr
pop
cmc
pop
xchg
push
cmps
mov
inc
test
imul
dec
test
xchg
xor
rcl
enter
ret
out
aas
mov
jecxz
popa
pop
adc
mov
movs
gs
adc
dec
xchg
ins
dec
rcl
pop
push
cwde
sbb
dec
cld
mov
out
fcomp
mov
add
(bad)
lds
out
daa
push
enter
push
xchg
dec
cwde
shr
push
daa
lods
push
fsub
sub
and
(bad)
neg
shl
jecxz
and
or
push
mov
and
into
add
(bad)
xchg
(bad)
mov
fimul
pop
fld
call
in
or
hlt
jl
arpl
cmp
pop
push
shr
mov
ror
sar
dec
xchg
into
sti
hlt
(bad)
out
mov
sbb
add
in
outs
inc
stos
cdq
cdq
push
aaa
imul
add
xor
push
push
sub
clc
mov
scas
retf
jb
fs
add
sub
mov
sbb
aas
lods
dec
fwait
jo
out
mov
sbb
addr16
push
push
inc
rcr
popf
cdq
les
mov
jae
das
inc
pop
pcmpgtb
sbb
ficom
sub
or
repz
es
test
aad
cs
xor
lds
fs
xor
cs
sbb
(bad)
mov
adc
ss
or
sub
mov
mov
gs
pop
idiv
adc
shl
jnp
sub
pop
mov
pop
or
or
cmp
(bad)
mov
out
(bad)
xor
and
pop
sub
xlat
imul
cmp
xor
(bad)
enter
jae
jecxz
cmp
enter
in
sbb
cmp
jbe
fs
xchg
add
mov
inc
mov
or
test
test
cmp
xor
xchg
adc
sahf
inc
dec
mov
mov
adc
push
int
test
(bad)
mov
cmp
cmp
xlat
fdivr
add
sar
or
mov
ins
(bad)
popf
jg
movs
jbe
imul
aas
stos
push
xor
pop
xchg
fs
or
or
mov
ret
(bad)
lods
sbb
cmc
adc
mov
jno
xchg
mov
and
mov
and
gs
adc
test
les
fisub
(bad)
mov
lahf
push
jno
xchg
sub
sub
outs
hlt
jne
xchg
and
ret
test
data16
nop
sbb
js
push
or
ret
mov
mov
adc
mov
aaa
shl
push
mov
cmp
mov
call
aaa
mov
push
into
retf
mov
pop
mov
mov
sub
or
mov
or
std
fwait
push
xor
jp
add
test
adc
mov
ret
(bad)
adc
mov
cmp
not
mov
sbb
pop
and
push
fdivr
nop
cs
sub
sbb
out
in
xor
push
xchg
shl
inc
clc
inc
popa
mov
scas
mov
inc
pop
pop
icebp
out
shl
cld
xchg
dec
and
mov
push
test
imul
xchg
inc
push
inc
test
push
xchg
push
popa
or
stos
mov
mov
cmp
das
or
jno
push
pop
repz
(bad)
push
iret
pop
or
and
fs
or
xor
pop
(bad)
call
fs
das
mov
and
cmp
hlt
shl
mov
adc
out
mov
mov
retf
or
mov
sub
out
and
jg
sub
js
cmp
lods
sahf
stos
js
sbb
arpl
push
scas
stc
loope
leave
sbb
fwait
ja
mov
sar
mov
sahf
sbb
test
loop
sbb
pop
cmp
fldenv
or
sub
inc
sub
popa
cdq
test
stos
(bad)
sbb
dec
loope
mov
pop
pop
rcr
(bad)
test
ror
sub
adc
mov
dec
mov
cmp
aas
icebp
mov
retf
mov
pop
outs
and
dec
sbb
push
cmp
adc
test
or
push
xor
adc
in
adc
or
fistp
repnz
inc
out
outs
mov
sub
jnp
scas
mov
xchg
shl
scas
lock
adc
fmul
xor
repz
adc
adc
inc
sub
push
fiadd
repnz
loope
pusha
icebp
mov
fld
cli
sub
push
jp
xor
jbe
mov
ja
mov
pop
add
xchg
jle
ror
les
sbb
aad
sub
push
clc
mov
daa
inc
sub
and
mov
cmp
retf
mov
mov
mov
call
lods
imul
xchg
(bad)
push
jbe
jle
loope
jnp
addr16
add
cmp
and
xchg
aas
xchg
sar
pop
test
gs
retf
ja
(bad)
sub
push
popf
pop
mov
push
adc
push
sub
out
movs
inc
jg
iret
in
pop
je
ret
dec
push
pop
xchg
repz
stc
retf
mov
or
js
scas
push
addr16
dec
inc
in
hlt
(bad)
or
ja
lock
loop
mov
sub
pushf
inc
out
adc
push
jno
push
retf
xchg
cli
fisubr
push
rcr
push
popa
enter
movs
mov
mov
xchg
out
fdivp
pop
test
movs
dec
(bad)
xor
retf
in
jle
lods
jmp
cmp
push
stc
cmovl
jmp
aam
sbb
dec
push
xchg
loope
push
sub
cmp
cmp
mov
jle
adc
pop
cli
mov
into
out
addr16
mov
iret
mov
or
jp
jmp
pop
ds
and
pop
jge
sub
add
mov
mov
stc
jnp
int
jmp
jbe
adc
and
pop
mov
popa
mov
rep
(bad)
loop
neg
mov
data16
cmp
xchg
dec
add
jno
in
cdq
push
fistp
in
ins
adc
mov
bound
push
cmp
or
mov
push
cmp
pushf
sub
or
sub
pop
and
xor
sbb
iret
mov
ret
xchg
sub
cmp
mov
add
in
aaa
inc
je
fadd
mov
call
dec
ds
mov
(bad)
retf
leave
iret
aad
iret
sub
sub
lahf
out
sub
ret
jb
xchg
xor
cmp
dec
daa
pop
aam
inc
sub
imul
ret
fcmove
jns
mov
(bad)
mov
jbe
scas
outs
pop
dec
xchg
cwde
in
shr
adc
lds
(bad)
jnp
outs
stos
jmp
jg
loop
in
sbb
cmc
and
jl
cmp
in
lahf
pop
inc
sub
(bad)
cmp
clc
cmps
enter
cld
cmp
in
idiv
fucom
js
or
push
scas
test
idiv
hlt
mov
cmp
lea
jbe
retf
fnstenv
(bad)
mov
imul
mov
mov
std
out
cmp
pop
pop
inc
std
ins
push
add
idiv
cmp
cli
std
in
icebp
ins
(bad)
jmp
(bad)
xchg
stos
loop
into
dec
addr16
les
pop
je
push
test
add
pop
fsubr
std
jp
push
rol
mov
fbld
fwait
mov
dec
xchg
lods
idiv
jmp
popf
mov
cmp
inc
sub
leave
inc
es
enter
(bad)
pandn
cmp
or
mov
adc
or
rol
add
scas
leave
push
mov
mov
mov
ins
mov
pushf
lea
gs
hlt
mov
mov
aas
mov
mov
push
pop
addr16
inc
dec
jp
cmps
test
leave
dec
mov
jbe
loopne
pop
mov
(bad)
mov
or
inc
pop
mov
iret
sbb
jb
retf
shl
mov
cdq
(bad)
int
retf
inc
cmp
sub
outs
and
arpl
repz
mov
sub
push
aad
fnsave
(bad)
pushf
or
retf
sbb
adc
pop
stos
ror
mov
pop
gs
mov
inc
stc
(bad)
sub
dec
or
inc
pop
daa
in
dec
inc
cmp
sti
pop
(bad)
mov
push
ja
sbb
int3
shl
icebp
adc
fcmovbe
adc
imul
jb
push
shr
push
mov
div
fidivr
sub
and
jae
imul
xor
lahf
sbb
inc
sbb
pop
push
repnz
push
xor
pusha
popa
mov
jg
xchg
shl
dec
push
mov
lods
stc
mov
adc
add
adc
add
mov
cmps
pop
enter
scas
std
loope
jl
sbb
les
mov
mov
mov
mov
aaa
and
loop
popa
in
test
(bad)
cli
inc
jne
(bad)
push
sbb
or
paddq
aas
mov
sub
sbb
mov
push
xchg
mov
sti
(bad)
push
mov
int3
mov
or
sub
out
inc
(bad)
push
sbb
outs
xchg
ss
jl
xor
lahf
addr16
pop
jp
lahf
pop
cmp
xchg
scas
imul
or
cmp
inc
push
icebp
cwde
std
xor
adc
test
jae
rcl
jbe
les
mov
jp
cmp
jl
adc
not
nop
cmps
or
mov
mov
push
jb
ja
mov
jmp
xor
addr16
cwde
dec
cmps
loop
push
mov
je
(bad)
(bad)
pushf
stos
imul
bound
daa
cmp
std
mov
test
mov
or
xor
push
xchg
fmul
dec
imul
repnz
dec
shl
sbb
(bad)
aam
ja
add
adc
push
cdq
jmp
(bad)
movs
je
xor
mov
ret
xor
adc
arpl
rcl
mov
es
jns
push
call
jp
inc
inc
jbe
sti
sbb
out
scas
mov
shr
inc
stos
fs
cs
jmp
push
jmp
jmp
dec
test
shl
push
mov
stos
out
xor
or
imul
sbb
aam
mov
test
xor
stc
aad
repz
bound
dec
pop
mov
push
outs
push
cmps
pop
mov
xchg
fwait
inc
mov
int3
into
repnz
fbld
pop
fidiv
mov
sti
xchg
mov
pop
mov
aad
popf
out
dec
test
add
shl
mov
(bad)
jmp
pop
mov
jp
pcmpeqw
(bad)
push
cdq
xor
fidiv
pop
xor
mov
mov
(bad)
call
pop
outs
add
out
dec
test
mov
std
add
jge
fstp
pop
movs
cld
mov
inc
xor
mov
inc
add
inc
xor
jmp
sar
jle
xor
aam
dec
div
jnp
repnz
sbb
mov
jmp
jne
out
jo
mov
(bad)
out
inc
push
sub
xor
mov
cs
call
sbb
cmp
leave
aaa
cmc
(bad)
push
xchg
in
fiadd
iret
arpl
in
cwde
sbb
enter
pop
add
ror
pop
mov
xor
call
push
aad
adc
adc
dec
xchg
or
sbb
push
fnstenv
cld
xchg
popa
movs
mov
and
dec
xor
repz
or
fisttp
ja
arpl
ret
or
pop
push
xlat
dec
fdiv
data16
pop
mov
mov
repnz
push
dec
sar
cdq
movs
cmps
fs
cwde
adc
ret
fidivr
ret
out
and
push
push
add
(bad)
mov
ror
fcom
shl
aam
pop
in
pop
pop
cmp
sbb
and
fwait
mov
cdq
pop
push
stos
lea
inc
mov
fst
adc
nop
adc
cmp
cmp
or
dec
out
or
fisub
xor
test
outs
jle
fs
adc
dec
(bad)
cmp
and
fucom
fstp
jl
push
out
sbb
jecxz
loopne
push
es
pop
test
scas
movs
dec
clc
lea
repz
mov
mov
inc
pop
add
in
cmc
stos
retf
cmp
jno
div
xchg
or
call
mov
ss
jmp
and
cld
jge
jl
stos
mov
test
loopne
fsub
movs
push
stos
jbe
inc
mov
sbb
jle
loope
cmp
xchg
sub
add
fsub
jmp
xchg
bts
sbb
popa
xchg
outs
jno
mov
stc
ret
xchg
(bad)
adc
lods
call
stos
xchg
sub
and
int
test
xor
ss
adc
pop
les
xor
in
cmp
dec
jg
retf
cs
inc
adc
ror
mov
out
cvtdq2ps
jnp
adc
adc
mov
js
sub
imul
call
mov
fist
mov
je
xchg
mov
not
icebp
ins
leave
inc
pop
mov
loop
rcr
pop
push
push
out
jb
sbb
or
push
repnz
sbb
sbb
jge
inc
es
mov
push
push
call
in
loop
add
sti
aaa
stos
xor
adc
and
repz
and
mov
(bad)
shl
aas
push
imul
add
xor
xchg
push
aas
pop
fcom
stos
and
jge
ins
cmp
or
add
aam
push
jnp
rcl
adc
push
fist
xchg
xchg
iret
inc
lahf
mov
test
jge
mov
(bad)
loopne
fsub
mov
lea
xchg
mov
sub
push
mul
adc
in
push
or
test
dec
cmp
sbb
scas
jmp
inc
xor
inc
or
out
sub
lods
int3
push
inc
call
dec
imul
lock
fmul
imul
sub
add
ins
xchg
inc
sub
jge
pop
cmp
xor
jno
(bad)
push
mov
jg
mov
loopne
call
cmp
out
mov
jmp
popa
(bad)
jns
cmp
push
lods
outs
sub
arpl
push
sub
push
aas
pop
loopne
mov
into
or
fcmovb
push
inc
repz
inc
mov
sub
mov
jno
jmp
lds
push
inc
scas
(bad)
in
(bad)
repz
aam
sbb
cmc
test
aad
std
jno
mov
mov
in
pop
cmp
leave
adc
cmp
sti
pop
mov
jae
loop
ins
call
fscale
xchg
imul
imul
inc
sbb
cmp
xchg
or
mov
imul
cmps
aad
mov
sbb
aas
sbb
clc
lock
or
mov
iret
das
add
mov
repz
push
pop
ins
xchg
add
pop
out
icebp
push
out
mov
jae
int
sbb
outs
test
mov
das
out
cdq
mov
sahf
repnz
sbb
stos
xchg
daa
jmp
mov
sti
and
ins
scas
pop
push
adc
mov
mov
mov
neg
mov
loop
jno
mov
adc
jg
loopne
lods
out
fisubr
aam
scas
lea
lock
retf
mov
mov
cld
jle
popa
xchg
dec
aas
lahf
sar
xor
mov
sub
sahf
jge
push
and
pop
mov
leave
and
lds
test
sbb
mov
sbb
fidiv
pop
inc
jne
inc
div
stos
sbb
ins
cmp
mov
loop
pusha
sub
lock
cmp
ret
mov
sbb
das
mov
(bad)
jnp
call
into
push
out
jle
ret
in
pop
es
scas
jnp
(bad)
jl
std
scas
jg
pop
pop
cmp
xchg
je
mov
dec
ja
pop
cmp
pushf
aas
icebp
fcomp
mov
rcr
push
cmp
pop
xor
push
cld
xchg
stos
jmp
das
pop
xor
js
jae
push
jl
mov
mov
sti
add
dec
repz
sbb
popa
sub
xchg
loope
jmp
xchg
push
mov
aad
cmp
test
sbb
call
sbb
fidiv
dec
(bad)
sbb
(bad)
push
nop
outs
popa
or
sbb
aaa
stos
dec
loopne
ja
push
dec
sti
pop
sbb
inc
sti
push
mov
test
aas
call
nop
les
add
add
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
mov
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
mov
(bad)
fcmovne
inc
stos
mov
inc
stos
mov
inc
stos
mov
mov
inc
stos
mov
inc
stos
mov
cmps
mov
inc
stos
mov
arpl
inc
stos
mov
add
add
add
add
add
dec
add
add
jae
dec
loopne
sidtd
add
add
mov
add
add
add
fcom
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
pop
add
cs
js
add
add
mov
add
adc
add
add
add
add
push
inc
inc
xor
add
add
add
pusha
add
loopne
jb
jb
add
add
adc
add
rol
add
add
add
add
and
add
push
xchg
add
add
add
add
add
sti
sub
adc
pop
ss
(bad)
ins
dec
test
ja
shr
xchg
pop
mov
dec
ss
add
out
fimul
xchg
ss
add
adc
lock
sti
push
push
mov
fdiv
add
dec
cmc
(bad)
call
fsubr
dec
or
jns
aaa
inc
loope
cmps
sub
sub
inc
or
ss
mov
jae
mov
mov
cmc
ret
mov
mov
xor
jmp
rcr
scas
inc
into
jecxz
mov
or
push
(bad)
pop
push
add
pusha
add
or
pop
leave
neg
push
test
dec
sbb
into
cld
pop
fwait
shl
imul
sbb
xor
in
mov
push
adc
shld
mov
rcr
and
and
test
aaa
sub
pop
int
add
mov
cmp
push
movs
sub
sub
cdq
jo
stos
push
xor
and
xchg
sub
push
xchg
popa
retf
les
jno
jg
mov
pusha
sub
push
push
mov
(bad)
push
xchg
cmp
adc
xchg
mov
test
enter
(bad)
in
sub
dec
push
jmp
dec
out
sbb
popa
push
mov
movs
nop
(bad)
in
pop
add
fistp
add
mov
bound
in
jo
not
cmp
ror
jnp
sbb
mov
xchg
div
mov
rcr
test
in
push
(bad)
mov
sbb
enter
xchg
out
mov
sbb
dec
stos
aaa
idiv
cmps
out
xor
test
mov
movs
popa
xchg
cs
addr16
pop
shl
lea
add
cmp
inc
cmp
xchg
lea
test
inc
mov
sbb
sub
(bad)
mov
cmp
cmp
sub
dec
sbb
dec
pop
fisubr
pop
mov
or
lods
adc
pushf
idiv
jns
pop
out
xor
xor
aam
and
cmp
out
xchg
and
inc
outs
mov
aas
addr16
or
xor
xor
jne
repnz
test
data16
shl
lahf
add
mov
xlat
inc
cmp
or
mov
outs
test
inc
stos
aad
test
ss
div
cmps
pop
xchg
sbb
ret
int
push
ja
xor
cmp
das
popa
push
xchg
test
jbe
pop
push
push
rol
out
jnp
adc
retf
fndisi(8087
sbb
neg
cmp
fwait
and
out
sub
mov
cmp
repnz
ja
loope
mov
mov
mov
jbe
dec
sbb
outs
out
std
cmp
out
movs
stos
xchg
xor
loopne
(bad)
neg
xchg
int3
dec
int3
jp
aad
fdiv
cmp
pop
jg
or
or
cmp
mov
adc
xchg
cmp
cdq
jecxz
sbb
mov
xchg
ds
ins
das
jbe
jecxz
and
lods
(bad)
fdivr
inc
int
dec
lods
jns
shl
mov
xchg
call
dec
adc
stc
daa
ja
sub
je
cmp
mov
int3
fcmovnu
loop
xchg
push
xor
xchg
cli
or
je
popf
and
sbb
xor
jns
mov
mov
ss
and
ss
pop
inc
ret
inc
popf
mov
sbb
aam
inc
outs
test
comiss
cmp
mov
mov
mov
mov
mov
push
daa
jmp
mov
lods
inc
in
fwait
iret
pop
pop
add
into
jmp
mov
push
sub
xor
jle
push
mov
mov
adc
adc
fild
jg
mov
retf
xor
pushf
sub
cld
sub
and
mov
in
loop
xor
cwde
or
and
fnstcw
and
iret
das
cmp
daa
ins
arpl
add
cld
sar
cmp
mov
stos
cli
stos
mov
adc
fst
sbb
and
pusha
aaa
add
data16
call
xor
call
mov
cli
outs
(bad)
outs
mov
xchg
cmp
sar
fmul
mov
movs
int
in
mov
fsubrp
push
push
cmc
bound
xor
cmp
jo
sbb
clc
into
sbb
ficom
pop
ja
les
ds
pop
jbe
ins
cmp
inc
lea
inc
leave
push
shl
cmp
sub
pop
jl
stc
jmp
lds
int
and
stos
shl
fisttp
add
not
pusha
inc
shl
scas
inc
ror
adc
fadd
cmp
mov
mov
sub
push
lods
ja
xchg
icebp
lahf
cmp
jbe
sahf
mov
jbe
fdivr
cmp
cmp
stos
nop
int
cmps
mov
xor
iret
add
push
pop
mov
jae
or
test
and
adc
or
cdq
pop
mov
xchg
or
daa
rcr
mov
or
and
xchg
pop
fadd
xor
mov
mov
xchg
push
and
jno
inc
sbb
sbb
outs
push
(bad)
(bad)
xor
test
clc
rcl
xchg
aaa
jmp
js
jo
mov
adc
xchg
je
pop
cmp
dec
int3
push
aas
fwait
ins
inc
(bad)
dec
mov
push
ins
scas
ins
ror
cwde
mov
movs
dec
adc
out
xchg
nop
xchg
in
jns
scas
mov
or
add
retf
cmc
mov
mov
fmulp
leave
adc
xor
and
sub
dec
loope
scas
push
int3
les
inc
int
or
dec
sub
inc
xor
mov
pop
inc
loope
aam
fcom
jle
out
cmp
and
pop
push
loopne
inc
cwde
mov
ds
out
cmp
xor
dec
es
sbb
cs
mov
and
div
gs
sub
inc
xchg
xor
mov
dec
clc
dec
sub
mov
cmp
(bad)
push
push
add
cmc
les
imul
xchg
and
sub
out
call
adc
xchg
aaa
fcomp
loope
fidivr
inc
mov
ss
xor
ss
into
ss
pushf
sub
sbb
xchg
mov
push
fcomp
js
loop
mov
lods
loope
gs
mov
dec
mov
adc
iret
lods
(bad)
fisubr
not
mov
leave
mov
in
test
inc
pop
adc
push
add
xlat
inc
and
or
les
pop
cmp
lods
mov
repnz
jecxz
cdq
and
xor
fistp
sbb
shl
dec
int
add
(bad)
call
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
stc
fsub
cwde
(bad)
pop
mov
dec
int3
pushf
and
ss
pushf
jge
movs
push
mul
or
mov
(bad)
fldcw
dec
jno
cld
in
ins
mov
fldenv
data16
sub
(bad)
lock
sti
add
retf
jns
in
lods
sub
jno
into
cmps
jae
into
mov
mov
sub
stos
clc
or
adc
cwde
aam
out
in
add
rcl
xor
jg
sub
cmps
loop
lds
stc
repz
test
mov
sbb
pop
push
xor
outs
pop
cld
aad
ins
adc
jne
dec
jmp
jge
xor
add
xchg
dec
std
lahf
push
fcompp
enter
xchg
fbstp
and
mov
imul
add
sub
adc
pop
sub
sub
lods
sar
xlat
xor
add
in
or
in
movs
(bad)
xchg
ret
sbb
bound
vmovaps
dec
retf
pop
inc
inc
push
gs
xor
retf
jp
repz
rcl
pushf
imul
mov
xor
cs
cmps
sbb
and
mov
push
pop
xor
jmp
or
ror
jo
add
xchg
mov
nop
ror
outs
sub
lea
lods
dec
aas
sbb
fidiv
movs
xchg
jmp
add
cdq
pop
sahf
pop
ret
loope
push
mov
mov
in
sbb
ss
cmc
jo
push
mov
cld
xchg
adc
out
push
std
mov
push
or
sub
popw
jge
adc
enter
movs
je
add
mov
dec
cmp
jae
sub
or
dec
fld
mov
push
push
ret
(bad)
out
in
fld
jmp
adc
dec
repz
sbb
(bad)
cli
repnz
xchg
ficom
sub
aas
mov
repz
inc
xchg
sbb
fisub
and
mov
retf
mov
nop
aam
bound
pop
xchg
movs
inc
movs
cli
adc
shl
sbb
std
pop
leave
add
mov
jge
hlt
cmp
imul
sbb
mov
pop
xchg
fdivr
xchg
inc
or
cmp
cmps
pop
paddsb
das
jl
xor
fwait
std
and
sub
test
xchg
xchg
or
mov
out
dec
imul
and
sbb
mov
std
ficomp
lods
lods
mov
inc
test
ret
mov
xchg
aaa
and
sbb
pop
push
mov
pop
xchg
dec
lock
dec
xchg
push
out
xchg
aad
inc
mov
fadd
ja
adc
pop
ins
sahf
gs
pushf
mov
gs
cs
ret
fadd
add
pusha
in
fs
leave
out
rcr
in
mov
cmp
ret
cmp
push
cmps
cli
pop
cdq
fbstp
mov
scas
repnz
icebp
or
stos
pushf
xchg
shr
jl
xchg
or
in
call
push
mov
dec
ja
sub
sub
aaa
sbb
jge
cmps
dec
or
(bad)
aas
xlat
nop
cmps
cli
jg
push
inc
mov
push
or
in
(bad)
push
sbb
outs
aam
retf
fwait
jecxz
cmps
outs
push
in
cmp
cmp
pop
fs
fwait
pop
or
mov
cmps
jbe
cmp
adc
scas
jnp
fstp
std
fs
jae
inc
sub
dec
sbb
aas
pop
push
or
or
es
jae
dec
adc
(bad)
pop
xor
mov
nop
scas
loope
and
add
mov
call
inc
cmp
pop
cmp
fs
dec
sbb
jae
dec
jl
les
imul
dec
or
add
call
mov
lock
add
hlt
inc
test
popa
mov
arpl
scas
ret
jle
in
inc
clts
jno
mov
mov
retf
test
push
and
and
or
out
bound
bound
out
setl
pop
push
mov
xor
repz
vunpcklpd
push
jae
in
daa
inc
es
aas
pop
lds
jge
jnp
push
aas
xchg
dec
outs
test
and
sub
add
stc
sub
das
jmp
fdivr
mov
stos
cmp
aad
mov
jns
sub
jne
cdq
in
(bad)
ins
cmp
pushf
dec
push
dec
jno
movs
push
or
xor
push
into
adc
cli
xor
push
and
push
mov
test
mov
pop
jnp
xchg
fdivr
mov
mov
mov
repz
call
cmp
push
jmp
repz
sahf
(bad)
pop
retf
mov
addr16
jp
std
mul
bound
sbb
sbb
push
sar
shl
ins
loop
jl
add
sbb
pop
xor
mov
xor
push
pusha
xor
ss
sub
jbe
mov
stc
xchg
mov
popa
or
mov
ffree
jle
adc
loop
xor
inc
dec
mov
sbb
jae
xlat
push
xor
scas
xchg
dec
mov
aad
inc
fistp
adc
jg
mov
and
inc
clc
mov
into
ds
sub
mov
popa
shr
sbb
cmp
mov
cmp
inc
popf
test
daa
inc
mov
pop
adc
(bad)
clc
mov
push
ja
cmps
cmp
dec
int3
in
push
jno
repz
popa
or
icebp
mov
mov
data16
xor
add
adc
xor
and
popa
repz
sbb
ret
lods
aaa
adc
inc
pop
sbb
mov
out
jo
(bad)
into
aaa
aaa
into
adc
jp
push
mov
seto
xchg
inc
mov
aas
jecxz
int3
das
or
cdq
push
dec
lds
jmp
mov
pop
in
scas
fcomp
jnp
jne
xchg
retf
mov
fisub
push
into
sti
push
jbe
outs
xor
cwde
fcmovu
cld
cli
leave
cmps
test
mov
(bad)
movs
add
nop
inc
leave
mov
ret
adc
lahf
shl
outs
jecxz
(bad)
and
jecxz
cmp
sahf
or
ret
leave
mov
stc
cmp
pop
ss
pop
push
inc
and
and
lods
loopne
fnsave
jmp
outs
je
jno
pop
inc
sbb
pop
call
loopne
push
ror
pop
cmp
adc
xlat
cmp
retf
ins
sbb
add
scas
push
sub
in
jns
and
pandn
mov
shl
repz
jmp
add
test
inc
xlat
push
ret
je
jg
sub
sub
nop
inc
add
loopne
dec
outs
push
imul
aas
lock
push
jl
pusha
sub
push
adc
aad
shr
sar
aaa
or
fcom
call
inc
pop
mov
test
shl
lock
out
fstp
jmp
jmp
sub
fst
call
sub
mov
inc
xor
xchg
sbb
cmp
test
out
push
mov
jge
push
inc
cmc
ja
dec
sbb
aas
adc
or
jmp
jge
ja
mov
test
and
rcl
out
cdq
dec
add
hlt
lock
sbb
cmp
shl
loop
mov
ja
or
mov
es
imul
push
ss
dec
xlat
dec
jae
pop
jb
adc
or
outs
outs
mov
fwait
xchg
sbb
xor
push
aad
and
cmps
daa
repz
dec
lock
or
imul
xchg
xchg
and
(bad)
movs
rol
sbb
mov
iret
xor
addr16
or
(bad)
xor
loop
push
xchg
stos
sbb
(bad)
fstp
jl
fwait
push
fstp
add
mov
and
pop
iret
clc
cmp
mov
sub
pop
aas
jne
je
jae
cmp
or
cld
mov
in
jb
cmp
mul
cmc
outs
ret
stos
fmul
mov
xor
dec
dec
mov
rcl
and
gs
and
or
sub
loope
mov
push
mov
fsub
xor
xor
rcr
pop
aaa
dec
jl
addr16
cmp
ins
jbe
jmp
push
jp
popa
dec
or
xchg
mov
xor
scas
mov
pop
div
push
adc
inc
leave
mov
xchg
push
pop
fsub
push
mov
sar
movs
jo
lock
nop
jbe
lods
cmp
hlt
sbb
add
sbb
jo
aam
(bad)
inc
inc
and
adc
inc
or
iret
or
jl
mov
pop
out
repnz
mov
push
push
fwait
pop
(bad)
retf
pushf
or
sub
pop
xor
sar
(bad)
pop
xchg
add
sar
outs
icebp
fdivr
lods
rcr
in
xlat
inc
adc
jns
jb
xor
fld
leave
std
jne
jge
ja
in
popf
cmc
ret
mov
arpl
movs
xor
xor
and
fcomp
push
repz
or
scas
das
cmp
jno
xor
add
mov
loopne
sub
iret
and
push
sub
sar
fwait
mov
xor
cmps
pop
fsubr
fbld
push
or
pop
and
xor
ret
inc
push
test
add
out
or
jl
dec
sbb
das
cmp
xchg
clc
push
mov
rcr
lea
fnsave
sub
lods
jp
push
ror
fld
sbb
push
xor
dec
fsubr
test
xchg
pop
sub
sub
pop
jp
dec
test
xchg
xchg
push
dec
and
test
loop
fnstenv
addr16
mov
xchg
jae
cmps
js
mov
adc
ins
add
sbb
cdq
add
add
int3
sahf
adc
loop
int3
pop
sbb
pop
rcl
cli
mov
outs
mov
mov
push
call
stos
ret
xor
inc
test
and
test
test
loopne
pop
popa
adc
mov
out
test
pop
inc
loopne
(bad)
push
pop
sub
fbstp
mov
mov
mov
scas
mov
add
jns
jns
popa
jae
pop
ds
adc
movs
es
mov
jmp
enter
mov
nop
xlat
das
push
(bad)
mov
repnz
stc
jecxz
push
pushf
mov
scas
je
inc
add
cs
cmp
jo
es
mov
mov
div
xor
in
sub
xor
xchg
arpl
pusha
mov
push
or
pop
iret
rcr
or
mov
xlat
stc
jb
xor
icebp
inc
gs
sbb
scas
test
pop
dec
lahf
pushf
pop
cwde
inc
cmps
mov
out
lods
jmp
imul
dec
shl
cmp
(bad)
inc
sbb
pop
and
mov
sbb
ins
sub
dec
add
repnz
xchg
int3
icebp
dec
fmul
loope
mov
sub
sbb
cld
repnz
inc
aaa
mov
mov
adc
(bad)
push
pop
bound
jecxz
push
ror
out
mov
xchg
idiv
outs
movs
in
test
inc
mov
dec
aaa
add
ror
test
mov
add
cmovbe
sub
cmps
in
stos
jnp
pop
movs
xor
mov
das
add
popf
push
mov
retf
sar
sub
shl
dec
xchg
test
sar
call
out
add
and
sbb
cmp
add
outs
or
iret
hlt
dec
pushf
mov
fcom
dec
sub
es
push
out
pop
retf
xchg
js
add
sub
icebp
sub
stc
dec
fst
cmp
mov
push
clc
in
sub
mov
xchg
jb
mov
dec
aad
cmps
xchg
(bad)
std
pop
mov
(bad)
arpl
mov
inc
lods
test
retf
sbb
sahf
cmc
jnp
cmp
leave
out
mov
enter
enter
ffreep
cmp
imul
les
jmp
inc
dec
mov
adc
ja
dec
dec
shl
sti
fimul
mov
inc
pop
xchg
pop
mov
xchg
stos
jp
je
fadd
xor
aaa
stos
dec
imul
repnz
lock
fnstcw
out
sub
bound
or
sbb
mov
ret
std
xchg
xor
sti
sti
mov
cld
nop
call
lahf
sub
xchg
or
adc
outs
mov
adc
hlt
(bad)
or
ret
push
cmp
add
lock
jge
sar
cmp
rcl
cs
mov
jns
mov
ins
dec
mov
das
out
jno
sub
cmp
in
ror
mov
retf
cmp
outs
ror
sbb
jge
cmp
dec
inc
gs
stc
cmc
push
mov
sub
pop
dec
sbb
cmp
cwde
mov
mov
fucomi
ss
cmps
or
sbb
dec
mov
push
cwde
pop
dec
(bad)
scas
xor
cmps
jns
leave
xor
xchg
scas
loope
jnp
cmp
push
dec
sub
sbb
jne
cs
pusha
in
aaa
int
cmp
sub
inc
test
or
test
add
mov
stos
dec
retf
sbb
inc
loopne
call
jmp
sub
ret
lds
xorps
bnd
in
mov
dec
fwait
dec
add
push
push
and
cmp
adc
jecxz
in
test
imul
das
pop
scas
iret
sbb
mov
or
in
inc
pop
test
or
xor
ja
imul
mov
inc
aaa
mov
les
arpl
imul
jl
mov
inc
cmps
sahf
int3
call
das
mov
cdq
ror
shl
movs
push
dec
dec
sbb
mov
arpl
aad
loope
out
push
mov
mov
fbstp
dec
pop
pop
mov
ins
mov
les
rcr
cmps
xchg
retf
cmc
dec
int3
fs
adc
call
mov
adc
stc
in
test
cmps
mov
push
scas
push
cmp
lock
push
jle
xchg
pop
ret
(bad)
shl
js
movs
xor
les
shl
mov
or
cld
or
cmps
icebp
scas
call
fwait
xchg
or
jmp
mov
aad
pop
dec
mov
xor
inc
cs
and
inc
push
mov
retf
mov
dec
std
mov
jns
cld
outs
lods
ins
dec
mov
cmps
xor
xchg
add
xchg
test
add
(bad)
dec
pop
retf
inc
sahf
cmp
dec
dec
add
sbb
mov
jp
dec
stc
sub
mov
mov
cli
fadd
aad
stos
clc
xchg
cmp
mov
mov
ins
and
cmp
jecxz
jl
add
rol
jmp
adc
cwde
sbb
daa
xor
stos
aam
dec
into
test
cld
inc
mov
pop
into
sbb
sub
push
add
es
pop
cs
mov
pop
nop
add
sbb
in
mov
pushf
pop
rcr
sbb
cdq
mov
xchg
icebp
cs
out
pop
imul
inc
ja
pop
int
leave
fs
mov
jle
jge
stos
lds
mov
push
pop
rol
mov
dec
mov
pop
mov
xlat
mov
inc
cdq
pop
add
push
movs
in
cmp
std
mov
test
xchg
aaa
jo
xor
jne
shl
bound
js
inc
sar
out
outs
aaa
xchg
pushf
mov
fimul
xchg
jns
fistp
lahf
cdq
mov
jno
imul
xchg
out
xchg
mov
enter
jecxz
in
data16
add
and
repnz
and
rol
or
cmp
dec
jb
ins
mov
aas
dec
ret
inc
fcmovne
sub
loop
in
int
(bad)
and
pop
inc
dec
fs
mov
mov
retf
ficomp
add
jecxz
lea
add
retf
mov
mov
mov
test
push
sub
mov
mov
push
popa
js
std
fimul
adc
pop
gs
pop
xchg
test
ret
sub
cmps
jg
repnz
rcl
mov
sar
repz
enter
jae
cmp
or
lahf
(bad)
loopne
and
push
fnsave
sbb
loope
sub
jno
pop
out
push
dec
lods
popf
es
addr16
int
mov
xor
inc
mov
ds
lds
xchg
movs
adc
aam
jnp
fist
and
inc
cmps
mov
popf
push
xor
jge
mov
mov
mov
in
scas
gs
mov
popa
repnz
cmp
add
fmul
in
enter
ss
xchg
and
mov
add
js
inc
push
outs
inc
mov
cmp
ins
mov
cwde
xchg
xor
add
retf
outs
out
pop
mov
or
inc
ins
jle
leave
div
iret
push
xor
hlt
jne
iret
dec
xchg
pop
jne
std
jb
retf
push
inc
mov
dec
retf
xchg
data16
mov
add
imul
mov
nop
mov
push
push
repnz
jne
xlat
cmps
mov
ss
add
movs
ins
mov
iret
xchg
xchg
pop
aam
lods
and
shl
and
mov
adc
sub
div
jecxz
test
leave
pusha
(bad)
jns
xchg
out
sub
add
lock
sbb
sbb
or
pop
aam
xchg
outs
push
cmp
xor
stos
or
jg
xchg
loope
(bad)
les
mov
imul
jo
pusha
pusha
clc
or
ins
and
cmp
ror
jecxz
scas
es
jne
out
(bad)
shr
stos
inc
inc
arpl
and
and
out
lea
xor
cmps
adc
std
cli
cmp
sysenter
mov
jl
and
fwait
jg
mov
je
and
lock
sbb
inc
int
imul
sar
pop
ret
xchg
adc
sub
fsubr
fild
aad
sub
test
mov
mov
es
shr
pop
cmp
fsubr
stos
fild
aas
lods
aam
in
ror
inc
jecxz
cmp
cmp
cmps
add
popa
stos
daa
jmpw
(bad)
xor
shl
cs
dec
out
fwait
dec
test
movs
aam
mov
(bad)
in
mov
pop
and
ja
movs
nop
arpl
mov
jmp
add
mov
wrmsr
repz
inc
cmp
fcomp
push
or
sub
dec
sbb
cdq
pushf
push
cmp
iret
ret
stos
repz
mov
pop
mov
xor
test
xchg
or
mov
cmp
jbe
add
sub
call
or
addr16
pop
jle
je
lahf
cmps
lock
mov
push
and
pop
lods
aaa
rcr
cmp
cmp
xchg
cmp
or
popa
divps
lock
adc
mov
push
mov
cmp
das
out
rol
mul
test
jecxz
ret
push
xor
fld
cmps
ja
aad
int3
jecxz
pop
ja
push
in
push
cmps
add
icebp
std
xor
pop
cmp
sbb
adc
hlt
retf
xchg
outs
jge
inc
sub
ja
jp
or
adc
or
jno
imul
pop
push
pop
nop
mov
inc
js
repz
std
in
pop
sbb
jle
sar
iret
out
add
add
sub
inc
and
push
arpl
adc
bnd
inc
cwde
popf
test
sbb
xchg
mov
mov
sbb
xor
movs
loop
adc
(bad)
pop
pop
pop
mov
aam
or
and
mov
movs
sar
scas
push
enter
test
ficom
repz
push
dec
test
jnp
xor
sbb
cmp
loope
add
ret
xor
loop
imul
stos
nop
pop
pop
jecxz
push
push
adc
cmp
dec
push
sub
mov
lds
pop
cmp
xor
test
ja
adc
out
(bad)
xchg
sub
retf
(bad)
cmp
pushf
lock
sub
aas
lds
jo
ret
adc
aad
mov
sub
sahf
jle
ins
pop
push
pop
mov
mov
sub
inc
outs
frstor
mov
push
xor
mov
push
aaa
lahf
arpl
xchg
sub
fcomp
aaa
out
jbe
sub
rol
mov
inc
push
or
cmp
xor
js
mov
mov
pop
bnd
xchg
lods
loop
pop
mov
popa
out
fsubr
cli
xchg
rol
mov
sub
cmps
fmul
mov
xchg
xor
clc
mov
push
pop
sahf
mov
pop
ins
xchg
inc
enter
ins
add
pop
lock
push
stc
test
cmps
sub
pop
sub
mov
mov
scas
and
fsubp
mov
ffree
shl
or
mov
xchg
adc
xchg
repnz
fcmovnu
inc
mov
sub
test
mov
ja
adc
xchg
jno
pop
out
mov
push
daa
call
add
adc
mov
sbb
mov
add
jnp
pop
retf
ins
fwait
and
dec
pop
shl
sub
fild
mov
pushf
cmp
adc
adc
mov
repnz
cmp
jno
test
retf
sub
data16
call
xor
mov
retf
out
cmps
mov
sub
lods
movs
xor
(bad)
dec
les
movs
sahf
jb
jge
ds
data16
not
sub
push
ins
dec
or
xchg
sub
xchg
inc
adc
dec
div
in
loope
dec
aad
cmp
inc
fwait
mov
sbb
lahf
loop
or
(bad)
cmp
or
inc
dec
push
mov
fucomi
jno
push
mov
mov
xchg
mov
iret
and
out
out
dec
push
xor
ins
push
leave
mov
(bad)
add
sub
loop
imul
or
xor
iret
xchg
retf
test
fwait
pop
and
popf
mov
mov
out
mov
xor
(bad)
fld
bound
sbb
mov
adc
retf
stc
mov
mov
mov
stos
sub
mov
(bad)
fcmovb
stc
hlt
jl
mov
iret
push
rol
(bad)
dec
jmp
mov
(bad)
lods
jo
xor
push
cmc
add
je
cwde
mov
xchg
sub
or
add
mov
js
pushf
inc
loop
xchg
pop
sbb
ss
fdivp
dec
sub
loopne
push
jg
adc
add
cmps
jmp
sbb
xlat
call
outs
xchg
scas
push
leave
and
dec
std
xor
add
rcr
dec
(bad)
iret
xchg
lods
je
rcl
dec
and
std
jb
mov
jp
mov
lods
xchg
add
push
pop
stc
mov
bound
xchg
faddp
mov
nop
ja
js
pop
mov
out
sub
and
and
enter
cld
lea
out
adc
pop
add
pcmpgtb
imul
jle
cmp
test
or
retf
mov
lds
cmp
loop
dec
jp
dec
daa
sub
ud0
inc
adc
enter
and
xchg
jmp
and
ss
(bad)
inc
jbe
mov
jge
js
and
into
ret
jecxz
add
cmps
xchg
sar
push
stos
das
push
xchg
test
fyl2x
or
sbb
jb
ucomiss
frstor
call
cmp
leave
xchg
fwait
cld
js
sub
rol
retf
dec
fnstsw
mov
stos
mov
sub
(bad)
stos
imul
xchg
test
pop
pop
jb
pop
sub
hlt
fldz
sbb
push
and
and
sub
cs
push
xchg
pop
push
mov
stc
hlt
aad
add
das
push
test
mov
mov
cmp
sti
mov
in
movs
add
inc
enter
xor
mov
setg
retf
lock
xchg
cmp
jp
popf
add
jl
cmp
add
ja
and
hlt
out
rol
mov
popw
jno
sub
or
rcr
(bad)
adc
dec
inc
sbb
mov
push
dec
call
sar
(bad)
icebp
add
push
icebp
(bad)
aas
es
scas
aad
shr
fidivr
dec
push
shl
xlat
push
test
scas
jnp
aas
ja
test
adc
not
adc
ror
add
add
sub
inc
jno
shl
jecxz
scas
imul
nop
clc
add
in
mov
push
scas
push
mov
mov
add
cwde
mov
imul
xlat
out
aad
jb
btr
mov
xlat
jecxz
xchg
xchg
or
retf
xchg
aas
lods
(bad)
xlat
adc
sbb
adc
lods
adc
adc
mov
test
xchg
dec
fstp
stos
cmps
je
fwait
hlt
xor
ret
and
ja
cmp
xor
test
leave
add
out
cmp
ror
icebp
pop
mov
imul
mov
pop
jns
inc
or
in
push
stos
daa
test
mov
clc
mov
stos
add
xor
ret
sub
popa
jmp
cmp
imul
jle
mov
mov
frstor
(bad)
mov
jmp
mov
adc
push
call
int
ror
leave
addr16
mov
mov
add
cwde
xchg
in
mov
push
pop
stos
mov
push
xor
test
repnz
lds
popa
jns
xchg
add
loope
or
ins
pushf
jge
icebp
test
out
cmc
das
jmp
xchg
(bad)
call
mov
jnp
test
rol
fs
jno
sbb
sbb
mov
xchg
pushf
retf
add
fwait
movs
pop
fwait
mov
inc
mov
inc
jb
or
sbb
aaa
and
ret
mov
lds
jbe
jge
stos
sub
rol
mov
cmp
or
pop
sbb
sub
xor
inc
jo
mov
loopne
or
or
jmp
inc
sub
jmp
cmp
mov
cmp
aam
adc
push
sahf
mov
sub
fstp
inc
ret
jle
sbb
test
jmp
repnz
scas
jecxz
push
icebp
icebp
add
pslld
cmp
mov
fcmovu
add
xchg
mov
add
(bad)
scas
adc
mov
mov
adc
sub
dec
inc
out
push
mul
sub
xchg
mov
adc
repz
adc
sbb
sbb
cmps
dec
sahf
pusha
daa
pop
stos
fstp
cmp
adc
jno
pop
sbb
jge
loop
mov
fist
mov
mov
pop
cdq
ss
cmp
sub
out
shl
mov
adc
movs
sar
jecxz
ja
sub
mov
inc
pop
adc
imul
imul
jmp
movs
loop
jae
outs
int
add
sub
aad
dec
push
pusha
call
out
adc
xchg
fistp
int
fldcw
xchg
addr16
mov
cs
(bad)
sbb
pop
fldcw
out
jmp
aas
adc
push
call
loopne
pop
lods
mov
and
jmp
outs
push
xchg
into
jmp
sbb
pop
jnp
mov
xor
jp
and
loopne
aam
gs
mov
rol
push
sub
lods
push
mov
sub
fcmovnbe
das
push
sub
inc
inc
adc
adc
cmc
mov
jbe
mov
inc
xchg
pop
sub
mov
ret
push
jo
mov
in
inc
sbb
push
jmp
or
aaa
enter
xchg
in
push
jne
(bad)
pop
pusha
adc
push
sbb
outs
inc
and
mov
dec
cmp
xchg
dec
sar
xor
sub
pusha
push
push
pusha
and
stos
and
sub
mov
and
stos
jbe
cmp
cmc
retf
(bad)
mov
imul
mov
sti
stc
mov
out
push
sub
inc
push
fcomp
or
or
fwait
jo
mov
ss
or
(bad)
popf
adc
mov
mov
dec
pop
mov
arpl
pop
xor
sbb
xor
test
outs
lahf
and
dec
pop
mov
jecxz
add
push
xchg
stos
xor
sub
xchg
int3
dec
push
jg
add
push
sbb
push
pop
das
clc
pop
jmp
and
mov
in
test
into
and
jb
in
adc
push
stos
loop
xchg
fs
and
push
hlt
nop
hlt
out
jo
jmp
xor
xchg
inc
sub
or
fdivr
aas
fsub
xchg
movs
xchg
rcr
sub
(bad)
int
call
dec
pop
retf
inc
lahf
(bad)
pop
(bad)
idiv
jae
adc
(bad)
mov
push
jbe
pushf
aaa
xchg
inc
pop
daa
lods
and
cmp
mov
out
call
xchg
xchg
mov
aas
jno
int3
and
stos
inc
mov
jp
add
call
gs
popa
int3
ficom
cmp
inc
xor
jb
mov
jp
aad
(bad)
daa
cmps
cdq
pushf
(bad)
sub
je
or
dec
mov
and
cmp
adc
int
mov
rcr
cmps
sbb
mov
sar
xor
ins
dec
stos
jg
sbb
xor
inc
jecxz
xor
jp
pop
cmps
dec
mov
inc
test
test
adc
sbb
shl
mov
or
scas
movs
mov
xlat
xlat
outs
xor
test
pop
shl
dec
or
stos
ror
or
lea
sahf
clc
lods
test
or
(bad)
mov
mov
sahf
enter
imul
sub
inc
xchg
(bad)
callw
sub
imul
test
je
scas
mov
mov
stc
into
mov
loopne
outs
or
push
push
je
fistp
les
pusha
mov
dec
or
mov
(bad)
xchg
sbb
mov
xor
out
loope
xchg
loopne
cmp
jmp
out
add
mov
ret
cmps
lds
mov
mov
stc
dec
ja
rcl
sbb
push
outs
adc
ins
imul
fisub
xor
(bad)
fld
xchg
ret
push
pop
(bad)
push
pop
fld
add
stos
dec
dec
(bad)
clc
outs
leave
push
jp
mov
and
(bad)
loop
sub
xchg
movs
in
pop
movs
jne
iret
rcr
int
xchg
(bad)
in
neg
call
int3
push
fcom
aad
jge
mov
mov
push
(bad)
and
aam
xor
adc
mov
ins
adc
lods
lahf
dec
jge
popa
push
loopne
(bad)
mov
adc
sbb
mov
fld
movs
push
jmp
inc
mov
pop
jecxz
or
add
xor
push
fisub
pop
not
dec
hlt
shr
push
and
push
dec
adc
push
out
xor
push
iret
fld
out
xchg
push
(bad)
imul
test
das
inc
nop
out
sub
lock
aas
std
int3
cmp
mov
mov
mov
pop
pop
mov
in
lods
das
mov
mov
std
fst
mov
dec
or
sbb
push
add
jno
scas
inc
fstp
fsubr
(bad)
dec
rol
not
scas
das
push
xchg
addr16
movs
pop
inc
push
mov
jecxz
pop
inc
out
mov
push
push
push
ds
call
pushf
dec
repnz
sub
(bad)
nop
ret
cmc
imul
sub
pop
ret
xlat
cmps
mov
xor
imul
xchg
dec
enter
ror
(bad)
icebp
out
scas
dec
rcr
jno
daa
fldcw
dec
push
pop
xor
dec
adc
mov
push
sti
push
push
setne
sbb
addr16
bound
rcl
sub
xchg
and
imul
dec
xor
sar
cld
psubusb
pusha
mov
mov
jmp
add
dec
leave
test
sti
out
jb
add
dec
rol
pop
rol
jo
add
add
add
add
add
rol
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
imul
gs
xor
cs
ins
add
add
add
dec
outs
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
ins
ins
outs
arpl
add
add
jb
jne
ins
inc
jb
add
xor
stos
mov
or
jmp
adc
bound
pop
jmp
add
call
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rol
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
(bad)
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
push
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adc
loope
add
or
xchg
jae
and
or
xor
or
loopne
xchg
ds
out
or
or
cmp
(bad)
jo
test
sub
(bad)
xor
sub
cdq
sub
dec
aam
jmp
inc
fmul
add
inc
add
imul
add
pop
lea
lods
or
ins
lahf
in
inc
lock
push
call
or
sub
hlt
shl
nop
push
push
jne
and
addr16
mov
and
xchg
cmps
inc
pop
jne
sbb
inc
out
mov
or
repz
fadd
dec
int
xchg
adc
(bad)
mov
fmul
adc
ds
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
(bad)
lock
pushf
outs
sub
xor
lock
adc
in
and
add
mov
(bad)
cmp
cmps
or
inc
jmp
xor
pop
ins
sti
add
mov
cmp
push
mov
rol
jmp
push
cmps
iret
lea
xchg
mov
lods
inc
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
sub
mov
clc
xor
call
(bad)
cmps
push
ret
mov
movs
mov
mov
push
inc
push
(bad)
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movs
hlt
add
popf
ror
mov
pop
or
mov
lea
or
jmp
cwde
sub
popf
jno
sub
jo
lods
adc
repnz
adc
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
(bad)
push
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outs
and
repnz
pop
jecxz
and
ins
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
(bad)
in
test
leave
or
es
shl
int
push
sti
fcom
and
add
idiv
and
sbb
xor
xchg
jmp
repz
mov
ins
movs
cs
mov
sbb
add
cli
xchg
jmp
out
inc
mov
and
outs
addr16
sbb
out
ins
add
jb
js
std
sub
cmp
push
adc
outs
dec
xchg
mov
mov
and
shl
mov
jne
sub
out
nop
jo
fimul
mov
shl
retf
stc
es
adc
add
ret
jge
pop
(bad)
sti
popa
add
(bad)
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adc
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
(bad)
push
push
jno
hlt
add
fidiv
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
sub
xor
inc
ret
call
out
jne
mov
inc
add
cdq
push
pop
div
cmp
pop
jl
push
mov
push
xchg
cdq
mul
jge
mov
in
movs
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xor
or
call
add
or
pop
mov
cmp
push
dec
rcl
jo
inc
add
addr16
or
or
pop
rcr
push
mov
adc
cdq
adc
pop
retf
inc
pop
sub
test
dec
xchg
xchg
lgdtd
lods
mov
mov
mov
cmp
or
push
mov
sbb
lea
inc
cld
or
add
lock
aam
call
jbe
add
lea
lods
stos
add
nop
cmp
je
out
push
jae
test
loop
mov
outs
jnp
jmp
pop
sbb
add
arpl
stc
jmp
test
call
cwde
add
lea
dec
pop
(bad)
push
xchg
inc
xor
daa
ret
call
jb
sub
ins
xchg
rcl
rcl
sahf
add
call
dec
test
or
inc
inc
push
sbb
jnp
mov
mov
push
mov
daa
jmp
test
push
push
and
push
lea
push
aas
das
adc
mov
adc
enter
aas
and
sub
push
adc
int
xor
or
sub
aaa
dec
fisub
add
(bad)
add
(bad)
or
jmp
imul
and
sub
jl
pop
and
cmovl
or
add
pop
pop
pop
pop
ret
frstor
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
xchg
mov
mov
sbb
xchg
sti
sbb
push
push
neg
ret
push
enter
xor
pop
add
add
in
iret
lods
push
jne
lds
cmp
int
rcr
adc
lods
inc
mov
mov
jmp
hlt
cdq
cmp
repz
xor
fisttp
add
cmp
or
test
dec
adc
ror
inc
adc
sbb
push
push
mov
cld
(bad)
sbb
push
or
add
sti
xor
pusha
sbb
sti
(bad)
dec
xor
arpl
push
and
mov
clc
rol
jne
ficomp
xchg
xchg
sub
ins
or
cld
inc
pop
jl
add
add
cmp
jge
repnz
pop
inc
js
rol
push
cld
sub
in
shl
push
enter
sbb
cmp
ret
shr
cwde
rcl
dec
les
pop
push
add
dec
mov
xor
enter
mov
xor
xor
int3
pop
jmp
and
push
push
mov
clc
nop
xor
cmc
sub
data16
adc
or
aas
adc
out
test
inc
pop
imul
test
inc
int
xchg
add
je
loopne
popa
pop
jge
sub
daa
clc
rcl
add
movs
mov
ds
call
add
xor
movs
push
fcmovbe
xchg
stos
(bad)
retf
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
in
and
(bad)
push
mov
in
es
enter
mov
pop
cmps
pop
xor
sub
push
mov
hlt
push
mov
jge
pop
cmp
xchg
push
fld
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outs
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
dec
movs
stos
adc
fsub
fild
jne
cs
cmp
xchg
ficom
in
sub
retf
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
adc
call
sbb
mov
and
aad
and
mov
adc
mov
sbb
(bad)
shl
je
enter
mov
jmp
push
inc
adc
into
jge
mov
sar
jbe
(bad)
test
dec
lahf
mov
je
push
movs
jg
test
cmp
push
jmp
sub
inc
jecxz
cmp
pop
call
dec
stos
cmp
lods
jmp
mov
scas
fsubr
mov
xor
icebp
mov
call
and
or
add
xor
pop
movs
adc
scas
add
cmp
mov
jl
sbb
rcr
cmp
movs
push
test
pop
popa
mov
test
test
mov
pop
sub
call
gs
jbe
aam
mov
inc
and
cwde
sbb
and
xchg
mov
push
fsubr
cmp
jne
inc
jno
pop
ins
imul
and
jb
into
sahf
adc
mov
jo
pop
push
push
arpl
(bad)
fcom
ins
cmp
outs
ds
(bad)
cmc
imul
ss
imul
inc
es
popa
ins
ja
movs
xor
shl
xchg
xor
popa
addr16
outs
js
loopne
div
fwait
adc
cmp
ss
aas
add
push
es
dec
loopne
fcomp
outs
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmp
je
sbb
call
dec
mov
and
mov
pop
cmp
and
jmp
cmp
mov
dec
xor
xchg
sbb
add
je
and
jl
sub
mov
xor
movs
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
sub
add
sub
add
xchg
add
or
add
or
add
add
inc
add
rol
add
add
mov
lea
mov
mov
mov
mov
add
sub
mov
xor
ret
mov
pop
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
push
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
mov
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
mov
(bad)
fcmovne
inc
stos
mov
inc
stos
mov
inc
stos
mov
mov
inc
stos
mov
inc
stos
mov
cmps
mov
inc
stos
mov
arpl
inc
stos
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
adc
add
pop
add
cs
js
add
add
inc
add
add
add
add
add
add
add
push
inc
inc
xor
add
add
add
pusha
add
loopne
jb
jb
add
add
adc
add
push
add
add
add
add
add
add
loopne
sub
add
add
aas
mov
add
push
sub
jecxz
mov
pop
sbb
or
sbb
mov
lahf
es
daa
sub
(bad)
and
dec
imul
add
or
fcomi
clc
lock
jo
cmp
(bad)
push
sub
sub
sub
xchg
loope
sub
sub
sub
sbb
sbb
inc
sub
out
cmp
int3
stc
es
cmp
popf
mov
clc
sahf
lahf
(bad)
icebp
push
cs
out
adc
je
push
add
imul
push
ret
ss
into
bound
jmp
pushf
into
into
into
into
dec
cmp
and
into
into
into
mov
into
into
into
nop
ins
mov
into
into
into
or
or
into
into
into
into
movs
pop
jl
into
into
into
into
in
dec
add
into
into
into
enter
into
into
into
into
mov
loopne
into
into
into
into
xor
adc
into
into
into
into
inc
hlt
test
into
into
into
into
inc
xor
lock
into
into
into
sub
mov
add
ror
sbb
sbb
pusha
je
push
inc
adc
add
push
mov
cmp
pop
ret
push
push
mov
das
xor
add
xor
xor
leave
addr16
xor
add
pop
ins
stos
ins
xchg
inc
mov
adc
add
add
inc
jge
pop
xchg
adc
inc
stos
inc
cmp
and
cdq
iretw
adc
pusha
push
pop
cld
xor
xchg
xor
inc
outs
jb
or
pop
shl
scas
and
daa
ret
mov
add
fstp
mov
inc
add
call
imul
or
add
mov
call
dec
sub
jle
inc
mov
cmp
jle
int3
adc
jo
pop
sbb
sbb
mov
or
rcr
or
adc
shl
mov
adc
push
cwde
xlat
add
ins
push
jne
pushf
js
dec
cmp
ss
ret
cmp
add
cwde
outs
mov
dec
and
push
inc
inc
inc
sub
lahf
lahf
pop
pop
in
cwde
push
add
iret
(bad)
(bad)
adc
push
icebp
jecxz
(bad)
je
sbb
loopne
icebp
pushf
dec
push
inc
xor
bound
arpl
outs
inc
(bad)
or
fs
ins
sub
inc
mov
stc
int3
jo
sbb
mov
xor
or
pop
inc
mov
push
(bad)
nop
adc
mov
xchg
lea
je
arpl
imul
pop
data16
cmp
jmp
sahf
lods
or
int3
push
inc
call
push
sbb
ds
mov
xchg
jecxz
add
add
inc
in
cmp
inc
and
(bad)
and
xchg
jmp
push
jmp
jl
fs
cmp
xor
dec
out
add
sbb
inc
sbb
xchg
ret
sub
xlat
pop
outs
xor
push
sbb
push
mov
cld
aas
jno
stc
or
sbb
mov
repnz
ins
adc
push
xor
pop
fst
outs
or
pop
add
cmc
pop
dec
sub
in
adc
icebp
sbb
xor
add
and
pop
aaa
ja
ins
sbb
adc
sub
push
call
cld
cmps
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
clc
dec
loop
or
popa
fdiv
pop
xchg
mov
arpl
retf
mov
add
pusha
and
in
sbb
mov
add
add
ins
xor
and
add
xchg
dec
ror
repnz
sbb
add
ret
xchg
add
dec
mov
mov
loopne
mov
cs
and
mov
mov
add
sub
jno
cmp
outs
addr16
ins
and
jae
loopne
cmc
push
dec
jae
data16
add
je
push
imul
je
imul
cmp
ss
dec
inc
pop
inc
dec
sub
pushf
ret
mov
mov
xchg
lods
in
inc
or
xchg
sbb
ja
mov
sbb
xchg
jne
gs
pop
xor
push
sbb
add
outs
fs
outs
xlat
pusha
or
js
sub
pop
sbb
mov
mov
enter
add
loopne
xor
clc
and
(bad)
hlt
scas
inc
fs
jno
add
push
gs
adc
dec
jae
addr16
sub
sbb
sbb
jp
inc
jecxz
ds
aam
pop
loopne
ins
add
fs
gs
cli
clc
fdiv
sbb
cmp
or
push
jmp
jne
mov
rcr
pop
sbb
adc
jo
mov
rol
jae
(bad)
cmp
and
sbb
sar
push
add
or
sbb
mov
push
or
sub
xchg
sar
add
add
jo
push
or
addr16
dec
jno
es
test
cmps
adc
xchg
in
push
add
outs
repnz
dec
xchg
push
pusha
push
out
call
ror
pop
je
sbb
jbe
lods
and
sub
adc
jb
popa
bound
iret
(bad)
lods
or
adc
gs
fild
push
cld
mov
pop
inc
jne
jb
(bad)
adc
arpl
icebp
icebp
gs
pop
cwde
fsub
pop
ja
pop
adc
cdq
inc
mov
fs
fs
(bad)
cmp
cld
movs
lods
test
dec
into
repz
test
dec
je
inc
ins
popa
mov
xor
out
outs
loopne
(bad)
out
mov
jno
push
pop
xchg
or
cmp
mov
jns
or
and
iret
(bad)
in
xor
mov
retf
jp
aam
pop
ja
fsub
setg
add
mov
xor
sub
cmp
aam
jl
rcl
(bad)
dec
mov
popa
sti
sahf
mov
xchg
mov
stos
outs
add
pop
outs
xor
call
js
pop
arpl
addr16
stc
stc
stc
cs
call
clc
mov
mov
jg
push
xchg
xchg
(bad)
das
data16
adc
loopne
inc
inc
dec
dec
add
clc
pop
pop
jbe
popa
dec
bound
fs
inc
test
mov
test
inc
je
mov
out
loop
gs
jmp
arpl
cwde
dec
fild
jb
je
in
imul
pop
dec
fimul
pop
adc
jae
push
mov
test
shl
pop
ret
ins
idiv
add
arpl
cmp
mov
dec
xor
bound
mov
dec
lahf
lods
imul
gs
outs
jae
rcr
sbb
inc
add
dec
push
sti
inc
xor
jo
ss
jno
fs
and
or
fcmovnb
sbb
inc
call
enter
cmps
iret
repz
push
dec
and
imul
inc
std
fwait
xchg
push
jne
ins
fdiv
ins
xor
sti
jae
arpl
jno
bound
lea
loope
rcl
sbb
call
xchg
call
cwde
lock
xchg
repz
jmp
mov
jns
cwde
sbb
jl
mov
jmp
mov
call
int3
jmp
hlt
push
push
in
sub
push
imul
mov
add
or
push
mov
pop
pop
nop
add
or
lock
pop
adc
loope
mov
inc
hlt
rol
or
add
cmps
jno
cld
add
push
mov
mov
je
nop
mov
fnclex
les
adc
jge
push
in
push
les
sar
mov
es
mov
xchg
mov
mov
dec
lods
imul
pushf
add
mov
mov
lea
push
xor
xchg
les
add
xchg
cmp
adc
leave
out
add
int
out
rcl
nop
dec
inc
cwde
fdivr
mov
xchg
push
mov
push
lock
push
je
lea
hlt
cmc
mov
add
aaa
push
push
lea
inc
or
loopne
or
fisub
out
les
nop
push
or
(bad)
xor
enter
enter
jp
inc
adc
imul
pop
in
adc
or
xchg
aam
data16
push
iret
mov
fs
jne
mov
(bad)
fstp
mov
adc
ror
outs
xor
pushf
sub
push
mov
mov
pop
push
or
clc
popf
aad
lock
sub
(bad)
loop
adc
ret
push
push
inc
int3
and
dec
imul
pop
pop
mov
pop
ret
jbe
or
push
fucomp
or
daa
ret
hlt
clc
push
and
test
data16
cld
and
push
mov
ret
lea
fistp
es
pushf
ror
cld
jmp
xchg
dec
in
pop
mov
es
stc
in
pop
jno
in
jmp
push
jno
xor
cmp
retf
push
fcom
push
fs
or
add
mov
inc
xor
sub
les
dec
pop
cmps
jl
jnp
jns
add
test
js
jb
nop
and
pop
std
shl
mov
push
clc
into
jmp
sub
and
js
(bad)
sbb
push
cmp
hlt
add
addr16
in
rol
mov
je
data16
shl
fs
test
pop
mov
or
bound
or
push
adc
add
cmp
fadd
pop
or
mov
and
cmp
lock
or
and
mov
or
jl
push
aam
movsx
cmp
int3
and
sub
mov
ret
push
jnp
mov
repz
and
(bad)
bound
cld
fsub
and
or
ds
loopne
enter
popf
aam
jecxz
mov
popa
cmp
aam
fisub
aam
or
cmp
mov
cmp
add
sbb
out
call
lods
clc
into
pop
sbb
jbe
lods
pop
sub
in
into
repz
cwde
cmp
clc
into
out
cmp
sar
mov
cmp
push
pop
fwait
add
inc
movs
daa
ins
enter
and
adc
sbb
add
inc
mov
mov
push
jecxz
aam
add
mov
adc
into
pushf
pushf
push
adc
cwde
sbb
cmp
pushf
cwde
test
push
jg
icebp
mov
retf
test
mov
xchg
fmul
inc
sub
ret
jmp
or
fwait
sub
cld
clc
sbb
loopne
leave
xor
shl
(bad)
aam
fdivr
lea
xor
rep
out
cmp
js
xchg
(bad)
stos
shl
fwait
test
test
push
cld
or
inc
xor
test
sub
add
call
xor
popf
je
jo
jbe
jbe
push
jbe
inc
xor
adc
cmp
lock
in
pop
(bad)
cli
(bad)
jbe
(bad)
std
cdq
test
jo
inc
mov
and
cmp
(bad)
fdiv
popf
movs
push
fnstcw
jle
mov
lea
dec
jbe
call
push
push
(bad)
rcl
lea
push
push
test
popf
popf
(bad)
in
lea
sbb
shl
jmp
push
lds
inc
xchg
cs
mov
xchg
xor
mov
arpl
mov
jnp
pop
(bad)
shl
mov
xlat
stc
dec
sahf
jmp
inc
lods
je
das
fwait
out
inc
add
jp
add
lea
outs
or
pusha
and
retf
mov
mov
clc
dec
xor
ficom
cmp
in
leave
(bad)
ror
ret
add
add
shl
and
call
leave
cmp
shl
and
mov
fcmovbe
pop
fdiv
inc
xchg
dec
push
add
push
jo
mov
cmp
pop
add
push
push
mov
sbb
test
jl
cwde
loop
cmp
lea
push
cmp
bound
mov
popf
or
dec
mov
in
xchg
or
inc
dec
mov
shl
sahf
xor
pushf
popa
pushf
xchg
les
outs
in
lods
and
pop
scas
iret
rcl
and
and
addr16
xchg
retf
push
push
stos
xchg
fldcw
ins
xchg
xchg
in
shl
dec
pop
cmps
aaa
xor
xchg
mov
addr16
(bad)
sar
lea
into
dec
ins
xchg
cmp
push
push
call
je
mov
loope
push
mov
sbb
in
ins
push
scas
pop
fdiv
cdq
jmp
sbb
adc
push
repz
ins
sbb
xchg
mov
adc
rol
and
push
shl
push
mov
hlt
call
xchg
stc
gs
cmp
inc
jecxz
add
loop
push
fmul
xchg
jo
mov
sbb
fs
ins
pop
mov
sub
dec
mov
aam
jp
mov
lock
outs
(bad)
mov
sar
mov
or
xchg
sub
adc
in
les
adc
js
xchg
push
mov
push
icebp
cmps
nop
cdq
push
fs
or
jmp
jbe
jo
fs
xchg
(bad)
icebp
xor
xor
xlat
jl
add
sbb
xchg
sub
inc
jp
mov
fstp
xchg
sbb
jnp
(bad)
sbb
mov
fild
nop
mov
les
jno
dec
cmp
repnz
push
jo
sbb
cmp
cmp
(bad)
loope
cmp
push
xchg
add
adc
cmp
iret
jecxz
cmp
cmp
xchg
sub
mov
mov
(bad)
shl
idiv
(bad)
icebp
or
push
sub
out
sahf
out
je
sahf
lods
in
cld
xchg
pop
pusha
mov
shl
in
iret
repz
xor
inc
cmp
adc
sbb
pop
ins
imul
xchg
cmp
repz
popa
retf
out
mov
cmps
mov
xor
dec
dec
lods
sbb
inc
push
sbb
popa
fs
data16
popa
outs
add
stos
hlt
xchg
in
mov
dec
or
imul
cmp
fsubp
mov
clc
ins
add
cmps
jne
jnp
add
add
push
xor
xor
imul
add
imul
lds
dec
push
pop
push
mov
dec
dec
dec
pop
push
ss
cmp
inc
jne
sub
push
shr
add
push
mov
add
jl
xor
sub
fild
jb
or
gs
dec
outs
je
popa
arpl
jp
js
out
add
dec
add
sub
scas
jl
ss
mov
cdq
cld
pop
mov
jns
shl
stos
jbe
test
pop
or
cs
sbb
repz
xor
xchg
pop
xchg
in
push
inc
dec
daa
sub
mov
jmp
push
xor
gs
inc
cmp
dec
push
add
pop
push
add
jo
add
adc
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
jb
gs
xor
cs
ins
add
add
add
dec
outs
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
ins
ins
outs
arpl
add
add
jb
jne
ins
inc
jb
add
cmp
pushf
add
xchg
arpl
cmp
inc
xchg
aad
cwde
jge
mov
arpl
(bad)
add
or
add
pop
add
je
and
jl
sub
lods
xor
test
je
loopne
sbb
xor
lea
movs
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmps
sub
inc
mov
sub
add
fcos
cmp
sub
add
movs
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
fld
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
mov
mov
inc
test
mov
add
ret
add
cld
cmp
sub
add
push
int
(bad)
push
adc
xor
sbb
cld
sub
sub
clc
(bad)
or
pushf
mov
das
mov
adc
(bad)
sbb
movs
push
push
push
push
call
pop
sub
or
mov
mov
add
add
fimul
sbb
repnz
add
jo
nop
cmp
je
mov
test
je
mov
jp
mov
add
sub
pop
pop
mov
sbb
das
add
xor
and
lea
inc
add
mov
mov
leave
push
push
or
xchg
aaa
mov
sub
call
pop
mov
mov
mov
xor
add
test
je
out
cwde
cmp
cmp
pushf
mov
and
jne
jmp
test
add
loope
push
lea
xlat
push
aas
das
sbb
mov
mov
add
push
xchg
movs
cmp
sub
push
stos
mov
xchg
mov
cs
call
fsub
ficomp
add
jne
or
dec
inc
mov
add
mov
add
in
xor
ror
and
jno
call
sub
mov
loop
pop
cmp
inc
or
inc
add
pop
pop
pop
pop
ret
push
mov
add
adc
xchg
scas
pop
sub
xchg
mov
push
call
mov
add
jle
aaa
add
rol
je
push
mov
add
jne
shl
cld
xor
jmp
add
lods
or
nop
neg
jbe
and
mov
cmp
push
or
pop
add
mov
jmp
outs
movs
popa
ret
mov
addr16
push
inc
out
cmp
or
adc
pop
movzx
test
je
mov
add
push
push
lea
push
cli
lea
or
sti
cs
pop
lock
popf
mov
call
or
mov
add
sub
pop
add
sbb
aaa
mov
pop
add
add
adc
cmp
jge
mov
inc
movzx
add
sub
mov
je
dec
mov
jne
cmps
add
push
ret
shr
rol
xchg
out
outs
in
push
add
jmp
add
pop
pop
inc
adc
xor
inc
je
not
xor
shr
js
(bad)
sbb
or
pop
push
inc
pusha
sahf
cmp
outs
scas
add
call
add
inc
dec
outs
retf
inc
pop
repnz
mov
add
inc
cmp
int
dec
cmps
inc
mov
jae
popa
sar
or
sar
rep
mov
loope
jnp
sub
inc
aad
sbb
stos
add
lds
or
ja
fdiv
xchg
ret
jne
dec
stos
mov
jecxz
test
add
push
aad
fs
repz
nop
mov
lahf
jb
movs
sbb
sub
mov
xchg
outs
inc
jg
into
inc
pop
and
mov
push
(bad)
mov
cmp
ret
adc
call
in
call
mov
inc
je
mov
adc
popa
xor
retf
(bad)
stos
dec
cli
cmp
jne
ins
add
jmp
mov
lock
add
loopne
or
loopne
sub
pop
ret
test
pop
pop
out
xchg
or
sbb
retf
mov
jne
imul
xchg
mov
and
cmp
test
mov
push
je
add
rcl
or
add
int3
or
movs
iret
mov
add
push
push
push
call
inc
dec
rcl
xor
mov
add
add
test
xchg
out
add
call
xchg
movs
push
xor
dec
jne
dec
out
mov
adc
and
adc
add
pop
cmp
lea
inc
push
test
or
jmp
push
ret
inc
lds
jno
adc
and
es
mov
pop
xchg
and
ins
ret
xchg
xchg
int
shr
pushf
xor
sub
mov
push
or
push
bound
call
outs
push
stos
adc
add
dec
adc
jl
sbb
shr
adc
push
ss
cmp
mov
test
sub
mov
pop
(bad)
xlat
les
push
sub
inc
jbe
sahf
aad
into
enter
or
ja
dec
mov
xchg
add
jae
bound
add
jo
imul
and
jb
jb
iret
mov
arpl
jo
cs
add
and
gs
jo
or
and
je
bound
shr
mov
call
dec
push
shl
fs
test
ins
add
pop
sub
jne
xor
add
jns
or
jae
popa
addr16
outs
js
add
fcom
leave
ret
imul
call
js
je
iret
xor
sub
outs
fs
add
outs
mov
mov
dec
outs
ins
sub
rcr
push
imul
out
arpl
cmc
cmp
retf
push
adc
dec
cs
iret
jae
xchg
jle
inc
cmp
pop
pop
shr
retf
jns
mov
clc
cmps
lea
xchg
add
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movs
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
add
push
add
add
add
or
add
add
add
inc
add
push
add
add
add
mov
lea
mov
mov
mov
mov
add
sub
mov
xor
ret
mov
pop
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
push
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
inc
arpl
and
or
gs
and
jb
imul
or
and
js
je
push
imul
push
imul
imul
jae
outs
outs
and
or
dec
inc
pop
pop
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
pop
push
outs
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outs
je
gs
imul
ins
outs
outs
outs
pop
or
gs
ins
and
ins
outs
jb
jb
gs
and
pop
push
inc
inc
pop
inc
dec
inc
push
and
inc
pop
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
pop
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
or
push
push
jne
and
pop
dec
dec
inc
pop
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
pop
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
or
inc
pop
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
pop
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
outs
jo
outs
sub
dec
sub
or
dec
inc
pop
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
pop
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
outs
jo
outs
sub
dec
sub
ins
ins
popa
outs
fs
or
inc
cmp
jb
addr16
ins
and
ins
gs
pop
inc
outs
ins
push
ins
jne
and
jo
imul
jae
pop
xor
xor
data16
and
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
pop
push
dec
inc
push
push
inc
push
inc
pop
inc
ins
popa
jae
gs
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
or
push
push
jne
and
pop
dec
dec
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
pop
push
dec
inc
push
push
inc
push
inc
pop
inc
ins
popa
jae
gs
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
or
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
pop
push
dec
inc
push
push
inc
push
inc
pop
inc
ins
popa
jae
gs
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
outs
jo
outs
sub
dec
sub
or
dec
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
pop
push
dec
inc
push
push
inc
push
inc
pop
inc
ins
popa
jae
gs
inc
dec
push
dec
inc
pop
jnp
inc
cmp
inc
inc
xor
cmp
sub
sub
inc
cmp
cmp
cmp
jae
gs
ins
pop
outs
jo
outs
sub
dec
sub
ins
ins
popa
outs
fs
or
inc
cmp
jb
addr16
ins
and
ins
gs
pop
inc
outs
ins
push
ins
jne
and
jo
imul
jae
pop
xor
xor
data16
and
inc
pop
pop
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
pop
push
outs
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
ins
outs
jb
jb
inc
fs
outs
arpl
pop
or
fs
imul
fs
jb
cmp
xor
xor
xor
xor
fs
and
jb
cmp
xor
xor
xor
xor
dec
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
pop
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
ins
outs
jb
jb
inc
fs
outs
arpl
pop
inc
outs
ins
fs
dec
imul
pop
sub
pop
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
pop
push
outs
data16
popa
jb
pop
dec
imul
je
push
imul
inc
jne
jb
outs
je
gs
imul
ins
outs
jb
jb
push
jne
dec
push
push
pop
add
add
mov
inc
or
add
or
add
add
add
or
add
pop
mov
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
fisttp
inc
push
js
in
cwde
iret
imul
adc
out
outs
jbe
mov
dec
cmc
mov
push
hlt
bound
outs
dec
mov
xchg
and
adc
inc
mov
mov
inc
sub
sub
mov
sbb
idiv
data16
fwait
std
xchg
inc
push
inc
jo
sbb
cmp
mov
cmp
std
cmc
bnd
pop
sub
scas
imul
cmp
das
push
dec
dec
push
dec
mov
cmp
push
push
pushf
arpl
cmp
push
mov
xor
xor
fisttp
movs
fxch
or
mov
cmp
mov
rol
jge
mov
mov
fadd
and
pextrw
cdq
inc
mov
fnsave
je
pop
sbb
loopne
sub
mov
aam
out
jge
dec
lds
and
int3
or
push
pop
psubw
ret
lea
pop
sahf
dec
sbb
dec
outs
jecxz
or
imul
out
mov
add
stos
fwait
mov
fild
cli
repz
add
shl
jmp
movs
xchg
add
jnp
leave
mov
ss
sub
sbb
addr16
repz
or
jnp
out
pop
cmp
into
inc
cs
fcmovnu
test
push
ins
push
out
in
cdq
popa
xchg
test
add
push
sbb
push
loope
xor
dec
loope
push
and
pop
sbb
jp
push
loopne
in
sub
movs
ret
rcl
push
repz
out
mov
mov
cwde
adc
call
push
or
cmps
ret
inc
jp
adc
mov
loop
(bad)
dec
add
xchg
xchg
scas
pop
outs
add
and
inc
mov
push
das
push
stc
(bad)
mov
xor
mov
add
cmp
inc
jo
push
adc
inc
mov
cwde
cwde
fwait
dec
inc
ret
lods
jnp
sbb
icebp
sub
inc
mov
loop
fild
bound
out
out
or
jnp
or
(bad)
and
ret
cwde
dec
aam
pop
add
test
fcomp
data16
add
leave
jno
fstp
shl
retw
(bad)
in
xchg
rcl
retw
mov
inc
mov
push
xchg
fld
xor
dec
retf
push
ins
fsub
cwde
inc
loop
adc
mov
ror
and
retf
cld
and
push
sub
sub
xchg
or
cli
push
(bad)
in
jge
mov
adc
xor
inc
in
add
out
mov
mov
inc
clc
sar
fadd
ins
push
mov
push
push
int3
jb
and
xchg
ins
mov
pop
xor
sbb
outs
fdiv
push
ret
adc
or
adc
and
loopne
jge
outs
pop
sbb
push
loop
jecxz
or
jbe
loope
mov
add
retf
adc
loope
out
pop
sub
xlat
fisttp
inc
jo
dec
shl
fdivr
mov
movs
shl
jb
es
fidiv
mov
mov
or
mov
jo
pushf
sbb
pop
mov
mov
sbb
outs
lods
shl
rol
mov
and
push
pop
jne
aad
xor
loopne
lea
mov
and
in
xchg
fldenv
ss
lock
dec
pop
stos
in
mov
add
test
push
jge
mov
fild
add
add
dec
inc
scas
inc
pusha
add
add
add
or
or
add
or
add
add
or
add
add
jg
rol
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
push
dec
inc
inc
push
js
bound
packsswb
pusha
test
loop
and
add
add
outs
jp
arpl
das
push
and
lock
cmp
inc
mov
xor
or
jge
push
add
add
dec
jae
push
sub
inc
xor
push
push
std
repz
mov
data16
sub
mov
arpl
add
push
out
aaa
mov
(bad)
inc
mov
add
aam
mov
bswap
pop
inc
cld
mov
(bad)
fwait
iret
les
dec
mov
fidivr
mov
ror
sbb
jl
leave
lock
aas
pushf
mov
inc
mov
mov
(bad)
outs
mov
ss
mov
add
in
dec
push
push
push
loop
pushf
test
pop
pop
(bad)
dec
fisttp
std
imul
push
inc
add
or
sub
dec
adc
or
add
jae
out
push
add
add
add
dec
inc
scas
inc
pusha
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
sub
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
fmul
inc
push
js
in
pushf
inc
imul
adc
(bad)
inc
push
call
rcr
jnp
jb
cmp
sub
gs
std
or
push
add
and
adc
adc
sbb
leave
pop
mov
call
jle
(bad)
out
jmp
int
fs
ja
adc
fnsave
ret
ret
mov
mov
in
sbb
or
jnp
loopne
scas
scas
(bad)
stos
addr16
enter
fcmove
daa
mov
gs
adc
xor
push
push
fild
movs
sub
div
repnz
mul
pop
jbe
in
cmp
lea
iret
jae
into
std
neg
pop
imul
adc
mov
shr
sbb
dec
cmp
cmp
xchg
mov
adc
mov
pop
mul
out
inc
cs
fcomp
sub
xchg
adc
test
push
add
xor
cwde
xor
(bad)
cli
mov
adc
loop
sti
cmp
cmp
test
sbb
mov
mov
xlat
inc
mov
jno
inc
dec
pop
scas
xchg
ret
iret
sbb
lds
push
out
add
adc
push
das
imul
sub
call
sub
sub
push
loop
sbb
push
icebp
push
mov
sub
push
sub
lock
and
adc
xor
mov
hlt
or
rcr
push
call
pop
(bad)
mov
and
pop
mov
aam
xchg
ficom
das
mov
push
iret
add
inc
jecxz
into
and
int
cmp
jnp
adc
pop
mov
bound
js
mov
sub
(bad)
adc
aaa
adc
push
cmp
pusha
jmp
xchg
aad
scas
ret
add
shr
cmp
fs
push
mov
cmp
jmp
jmp
call
xchg
shl
cmps
popf
push
cmp
shl
cmc
shr
xor
jmp
imul
adc
xor
mov
xchg
sub
dec
add
xchg
sbb
sbb
(bad)
push
pop
cmp
xchg
jle
in
sub
ror
xor
cmc
push
stc
cld
pusha
sbb
mov
imul
pushf
std
cld
add
pop
push
push
leave
fstp
mov
bound
cld
(bad)
std
cmps
pop
stc
inc
or
mov
fidivr
retf
ds
push
xchg
jge
popf
inc
mov
adc
and
aaa
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
mov
inc
or
add
or
add
add
or
add
add
add
push
bound
inc
add
add
add
mov
add
or
pop
jae
add
adc
add
adc
add
add
inc
inc
push
pop
test
cdq
mov
(bad)
call
mov
inc
and
add
outs
outs
call
ret
inc
push
lahf
sbb
pushf
dec
or
ret
sub
push
pop
sub
stos
xchg
out
fsub
div
xchg
jae
out
in
dec
fwait
and
add
xchg
into
sbb
int3
push
add
push
int
mov
mov
lods
cmp
sub
mov
fstp
push
ds
adc
cli
cmp
xchg
jbe
xlat
dec
mov
add
push
sbb
and
jge
call
sbb
in
jge
add
clc
and
ins
icebp
sbb
adc
fxch
cmc
repz
je
jle
or
inc
xor
add
cli
mov
push
jg
mov
xchg
aas
stos
das
test
and
jp
enter
aad
(bad)
cli
xor
aam
jmp
dec
mov
and
xchg
stos
outs
fcmovu
pop
cmp
out
rcl
out
ins
jge
sbb
int3
xor
sbb
int3
xor
sbb
int3
xor
pop
jmp
mov
jge
scas
cmp
or
pop
call
sbb
out
mov
mov
(bad)
xlat
aaa
push
fiadd
jl
call
imul
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
adc
js
push
push
dec
dec
push
inc
sbb
(bad)
inc
dec
mov
and
inc
mov
mov
mov
mov
daa
test
rol
push
inc
cmp
pop
adc
dec
jno
sub
xchg
and
test
leave
aaa
xor
stc
mov
jno
adc
ret
push
pop
xor
cwde
mov
adc
push
mov
adc
inc
and
pop
in
test
(bad)
mov
into
stc
sti
fild
jl
xlat
iret
out
sub
sub
and
loop
(bad)
out
jg
push
inc
js
mul
push
lods
ins
popf
addr16
pop
int
mov
push
sub
int
leave
pusha
cmps
test
movs
sbb
mov
push
pop
or
inc
jne
and
pop
into
mov
mov
add
clc
jb
popa
int
test
inc
cld
mov
pop
mov
into
ret
inc
rol
leave
fild
cmp
imul
fs
mov
adc
mov
cmp
loope
das
xchg
pushf
dec
push
sub
push
mov
cli
cmp
leave
and
in
xlat
out
fdiv
and
iret
loopne
in
jp
push
mov
cmc
bound
test
or
out
or
sahf
clc
out
and
clc
xor
mov
not
mov
stc
adc
dec
dec
mov
or
or
jmp
enter
inc
adc
adc
mov
loop
shr
mov
cmps
mov
and
add
js
inc
pushf
and
sbb
mov
pop
cmp
test
lods
mov
sub
push
and
shl
loopne
jo
inc
test
das
inc
sub
mov
retf
add
dec
inc
mov
cmp
adc
sbb
lods
sahf
retf
or
sbb
test
fnsave
sbb
mov
sub
inc
push
push
dec
aam
dec
mov
outs
jbe
xor
mov
mov
sbb
scas
fsub
mov
(bad)
pusha
mov
and
ror
or
call
jo
jmp
mov
(bad)
movaps
mov
arpl
inc
push
out
hlt
std
jb
dec
dec
pop
mov
inc
enter
int
loopne
jp
fistp
shl
sbb
pushf
loopne
cmp
stos
and
mov
(bad)
out
arpl
jno
shl
push
xor
xchg
scas
(bad)
xchg
and
push
cli
pop
mov
(bad)
xchg
mov
dec
sub
mov
xchg
cmp
mov
or
mov
call
jmp
pop
adc
cld
out
cld
push
pusha
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
or
or
add
or
add
add
add
add
or
add
add
repnz
inc
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
pop
dec
inc
inc
push
js
lods
push
pop
ins
sbb
adc
sahf
icebp
mov
sbb
dec
in
inc
fwait
inc
xor
mov
adc
icebp
lds
pop
test
add
jle
inc
and
mov
push
sub
les
inc
jo
lods
cmp
aas
loop
xchg
mov
jecxz
cmc
je
ja
outs
jne
xor
inc
add
scas
stos
scas
jae
mov
xor
add
or
js
dec
dec
rcl
lock
jnp
inc
pop
dec
ret
mov
jno
pop
stos
out
cli
dec
imul
fst
shr
cmp
(bad)
xchg
jmp
pusha
pop
sub
pop
sub
add
cli
js
push
xor
and
out
aam
out
outs
jg
scas
in
ficom
and
and
inc
dec
mov
sti
aas
aad
xor
(bad)
adc
clc
fwait
cmp
aaa
std
and
fsubrp
jg
(bad)
mov
scas
lahf
(bad)
out
clc
mov
stc
mov
pop
sbb
cmp
pop
mov
jg
dec
sub
popa
popa
sub
fnsave
in
jle
pushf
out
arpl
xor
ret
xchg
xor
mov
jno
or
aad
jg
fs
std
xchg
xchg
push
out
dec
jle
ja
push
jae
outs
imul
stc
int3
mov
add
int
nop
sub
xor
ret
or
fucomip
ror
adc
xor
jnp
dec
frstor
jecxz
xor
jae
xor
adc
int
adc
and
jmp
dec
mov
xchg
cmp
dec
push
mov
lods
push
pop
or
(bad)
fsubrp
out
test
das
int
xchg
dec
popf
mov
jecxz
push
lds
xchg
out
mov
mov
add
ja
data16
jle
icebp
enter
addr16
cli
leave
jae
adc
cwde
dec
shl
arpl
mov
push
jle
ret
inc
fldcw
pop
test
test
pop
sub
adc
out
fdivr
lock
div
mov
neg
adc
add
jmp
out
mov
iret
push
(bad)
fidiv
dec
fdivp
dec
xchg
xchg
mov
mov
arpl
leave
mov
jp
leave
cmps
popf
aas
ss
jge
(bad)
aaa
rol
xor
lock
jo
jg
push
out
xlat
push
loopne
mov
xlat
movs
icebp
shl
and
xchg
mov
fistp
cmps
or
cmp
stos
outs
mov
or
jge
cmp
mov
rcl
in
out
sbb
rcl
aaa
push
push
mov
xchg
dec
add
lods
adc
push
and
and
loop
mov
js
lods
push
xchg
jg
in
push
pop
jmp
jmp
loopne
lea
jae
mov
push
cmc
pop
push
mov
lock
xchg
jnp
jmp
jne
jno
fst
jo
fisttp
mov
jp
popf
dec
ret
and
adc
cmp
add
dec
jge
ror
neg
int3
cmps
int3
into
ret
mov
sub
cs
shl
mov
mov
outs
frstor
push
dec
rol
adc
sbb
cmp
ror
(bad)
imul
pop
stos
push
sub
dec
repz
push
mov
mov
mov
outs
imul
jmp
bound
imul
rcr
add
daa
pop
mov
mov
cli
es
aaa
stos
outs
and
fsubr
test
test
int
push
xlat
(bad)
and
or
push
mov
jle
push
sahf
stos
stos
rcl
out
call
lahf
inc
cmps
fdivrp
push
call
xadd
adc
movs
sbb
into
pop
scas
mov
adc
add
sar
ret
mov
mov
xchg
pop
pop
inc
xlat
jne
adc
cmp
xchg
in
enter
push
lods
push
mov
mov
ret
retf
xchg
jp
imul
(bad)
xor
mov
pop
(bad)
cdq
stos
xor
cmp
(bad)
and
enter
add
inc
(bad)
ror
sub
push
or
dec
daa
push
sub
std
jnp
and
sub
ret
xchg
test
mov
lds
jle
rol
in
stc
int
shr
push
dec
and
fcmovnbe
xlat
daa
fcom
push
out
inc
popf
dec
es
mov
sub
in
fimul
adc
xor
pop
add
lds
sbb
leave
ja
adc
stos
xor
repnz
je
std
jb
xchg
and
pop
jb
(bad)
xchg
inc
(bad)
sahf
push
imul
in
or
push
ins
cwde
lds
pusha
cmc
xchg
das
mov
dec
lods
dec
cmps
ins
(bad)
and
fcom
jnp
push
and
retf
xor
pop
imul
data16
sbb
sbb
es
es
cmp
outs
bound
add
pop
xor
pop
cld
loopne
sbb
test
push
cwde
ins
pop
leave
adc
add
pop
xchg
sbb
stos
inc
jmp
cld
pop
call
mov
inc
and
xchg
mov
dec
or
xchg
add
xor
lock
movs
cmp
sub
daa
rcl
jne
push
enter
in
cmc
jmp
fcom
inc
push
pusha
pop
pop
fs
and
test
mov
sbb
mov
mov
std
push
fidiv
xchg
xchg
mov
mov
sbb
je
push
test
mov
and
jo
inc
push
loopne
add
xchg
mov
mov
movs
sar
mov
ins
stc
xor
imul
mov
fdiv
xchg
div
aam
xchg
ins
sbb
ins
aaa
lahf
push
sub
inc
sti
sbb
retf
jecxz
push
jb
pushf
jnp
fidiv
test
adc
ins
mov
mov
xlat
sahf
jge
fs
push
inc
cs
(bad)
and
cmp
jo
jo
cmp
pop
adc
sub
dec
dec
fisub
push
adc
clc
clc
clc
call
ja
fdiv
jmp
outs
cmp
imul
retf
cmp
sbb
cwde
mov
in
mov
mov
lock
mov
bnd
test
outs
jne
push
mov
lock
cmps
mov
add
stos
lahf
aas
jg
pop
inc
(bad)
push
mov
adc
mov
and
mov
sub
(bad)
out
cld
(bad)
idiv
pop
mov
(bad)
stos
inc
fs
and
inc
xchg
inc
cld
mov
(bad)
xchg
xchg
adc
(bad)
dec
std
adc
fist
in
jae
in
fst
scas
pop
cmp
dec
imul
shl
rol
mov
mov
jo
lea
shr
fdivr
loope
mov
and
out
mov
mov
push
xchg
test
loopne
sbb
arpl
pop
paddsw
mov
jecxz
ret
mov
fidivr
jge
hlt
pop
inc
iret
xchg
jae
push
or
ds
cld
adc
int
adc
inc
inc
jge
call
add
jle
lock
sbb
xor
dec
lahf
sub
imul
mov
imul
stc
jl
mov
shl
dec
add
add
mov
add
dec
inc
dec
inc
scas
inc
pusha
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
jp
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jno
inc
inc
push
js
mov
imul
xor
mov
or
add
test
push
dec
mov
rol
inc
mov
mov
adc
in
psubd
sbb
ins
mov
xchg
ss
dec
pop
call
sbb
push
adc
add
popa
ja
fnstcw
and
mov
in
addr16
jecxz
out
pushf
sti
popf
jae
jb
(bad)
loope
outs
pop
mov
outs
loope
icebp
mov
or
jns
mov
inc
push
cmp
stos
xor
ret
mov
or
outs
mov
push
mov
nop
in
jg
aaa
or
jo
retf
inc
cwde
jns
ins
add
aaa
jae
xchg
leave
pop
add
pop
(bad)
inc
xor
nop
out
mov
ret
xor
repnz
loop
in
cmp
jecxz
dec
hlt
aaa
add
daa
test
xor
adc
mov
hlt
push
test
cmp
test
movs
ret
sub
xor
push
je
mov
rcl
dec
iret
gs
sbb
jle
xchg
adc
and
icebp
mov
test
dec
addr16
pop
in
jb
inc
push
jp
lock
jno
ficomp
or
fbstp
push
add
cld
les
or
and
stos
jmp
adc
and
push
sub
aam
out
cmp
call
jecxz
ficomp
movs
fs
sti
and
xchg
aam
out
pop
fild
sub
shr
pop
and
lods
cli
fcomp
(bad)
dec
(bad)
push
add
imul
fadd
(bad)
pop
jnp
fistp
repz
xchg
xor
push
and
or
adc
dec
dec
push
jge
loopne
shl
icebp
cld
mov
jle
clc
mov
cwde
adc
sbb
mov
add
adc
bound
cli
lea
ret
adc
sbb
xor
inc
or
ret
add
out
mov
dec
retf
push
stos
mov
add
or
aas
js
or
mov
add
addr16
test
in
add
inc
sahf
ja
mov
cdq
adc
fld
fsubr
fild
cmc
idiv
jns
sub
xchg
push
cwde
push
mov
addr16
fild
mov
inc
(bad)
cmp
retf
sahf
loop
aad
ins
cmc
lods
jge
cld
not
dec
add
mov
daa
cmps
inc
(bad)
mov
sub
es
push
inc
mov
mov
push
mov
inc
mov
into
stos
iret
stos
sbb
imul
mov
inc
sub
scas
fnstenv
xchg
add
or
or
xor
and
fistp
(bad)
jbe
mov
(bad)
mov
add
push
or
repz
rcr
cmp
in
add
fadd
or
sub
iret
jno
int
xchg
mov
xor
cmps
mov
or
cmps
or
fcomp
popa
dec
push
adc
pop
setle
inc
adc
pop
inc
into
scas
cmps
push
dec
repz
mov
push
dec
hlt
cmps
in
sahf
xchg
fcmove
sbb
mov
test
(bad)
leave
pop
sub
push
or
test
jns
inc
add
adc
or
les
pop
inc
fidivr
pop
sbb
ficom
jecxz
leave
scas
xlat
out
sahf
dec
mov
es
lods
dec
enter
je
inc
pusha
and
icebp
jecxz
push
rcl
out
jg
cld
les
push
les
fild
call
xor
js
or
das
push
shl
jecxz
cdq
nop
pop
mov
aaa
xlat
mov
fadd
lods
or
sbb
push
mov
shl
clc
(bad)
xor
mov
mov
and
dec
int3
fwait
or
mov
push
sbb
cmp
loope
call
xchg
xchg
or
sub
mov
push
mov
outs
dec
enter
pop
test
mov
je
push
and
add
retf
inc
or
lods
call
xor
rol
sahf
sti
arpl
inc
dec
push
cmc
aas
stc
je
sub
stos
je
push
push
sar
push
jecxz
shr
jmp
bound
xchg
popf
jo
rcr
shl
stos
cmps
xor
dec
mov
addr16
mov
out
xchg
cwde
xchg
jmp
pop
std
mov
xchg
inc
add
xchg
adc
sbb
jl
or
std
idiv
pop
jmp
hlt
cli
inc
xlat
cld
ins
xchg
pop
xchg
mov
adc
or
add
(bad)
jp
out
or
add
mov
dec
lds
mov
mov
dec
sbb
dec
pop
jmp
shl
aam
inc
outs
dec
mov
mov
push
mov
fidiv
or
dec
arpl
mov
jns
pop
lods
push
jp
inc
and
sbb
retf
mov
inc
repz
ror
xchg
push
mov
shr
dec
inc
mov
ins
(bad)
fstp
dec
icebp
setae
outs
sahf
mov
xor
adc
gs
cld
mov
pop
xor
lea
xor
xchg
(bad)
mov
mov
and
mov
cmp
or
jae
cmps
stos
jecxz
nop
popa
adc
mov
or
iret
pop
das
js
pushf
cmps
movs
jne
sub
cmp
adc
inc
fadd
push
lea
or
xor
adc
mov
or
ret
leave
mov
dec
lock
mov
mov
pop
inc
aam
(bad)
sbb
or
inc
das
xchg
cmc
movs
daa
lods
pop
bound
aas
jmp
push
add
pusha
scas
(bad)
mov
add
dec
inc
dec
inc
scas
inc
pusha
add
push
dec
inc
or
add
or
add
add
add
add
add
add
in
out
jge
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
inc
dec
inc
inc
push
js
ins
mov
add
or
pop
(bad)
call
jp
mov
mov
leave
mov
adc
inc
jl
jo
mov
adc
aaa
mov
push
movs
fwait
mov
push
leave
psubq
add
pusha
out
pop
fiadd
add
add
dec
inc
scas
inc
pusha
add
push
dec
inc
or
add
or
add
add
add
add
or
add
add
in
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
dec
inc
inc
push
js
bound
push
push
arpl
(bad)
(bad)
aas
sar
and
sar
inc
(bad)
inc
jmp
loop
(bad)
std
ret
mov
mov
or
pushw
int3
push
mov
add
and
cmp
fistp
add
add
dec
inc
scas
inc
pusha
or
sbb
add
add
add
add
add
add
sub
mov
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
in
jge
sbb
cmp
xchg
imul
fwait
inc
dec
dec
pop
and
push
and
push
inc
test
jl
jmp
jl
mov
or
inc
mov
rol
mov
mov
dec
or
leave
imul
fidiv
fcomip
popf
jae
imul
jnp
xchg
gs
popf
fstp
data16
into
ror
push
adc
push
ret
out
inc
push
and
ror
adc
lea
jecxz
aam
call
shr
add
mov
jmp
aam
mov
inc
and
shr
movs
ds
pop
and
ror
lea
and
popf
cwde
ret
or
ds
cld
pop
hlt
rol
pop
cmps
loope
adc
in
dec
cmp
hlt
mov
jge
xor
add
fstp
std
fstp
outs
cld
cmc
loop
ja
int
cdq
test
jl
mov
div
shl
cli
dec
mov
mov
ds
leave
sbb
aad
mov
call
gs
or
(bad)
scas
out
jb
fcom
out
jnp
add
inc
fsubp
call
and
pop
test
fdiv
pop
addr16
aad
out
mov
in
hlt
mov
sbb
dec
push
std
clc
rcr
pop
xor
cmc
push
mov
in
jae
fsubp
jns
in
xchg
das
loopne
ins
out
sti
lahf
jnp
(bad)
idiv
or
push
pop
imul
test
dec
lock
or
dec
out
out
aad
jne
ds
(bad)
cmc
cmp
fild
pop
mov
mov
repnz
rol
xor
hlt
retf
out
ins
jmp
outs
lahf
jg
ret
cli
dec
jl
mov
pop
mov
aaa
mov
mov
icebp
mov
inc
jle
loopne
iret
pop
jl
std
cmp
int3
cld
and
and
cmp
add
sbb
jmp
mov
cmp
mov
xor
dec
sahf
sub
jns
jnp
dec
dec
ror
xchg
push
dec
pop
clc
nop
loope
mov
pop
jbe
fcomp
repz
ja
lea
rcr
mov
repnz
mov
(bad)
shl
leave
test
jg
hlt
lds
(bad)
xor
mov
in
xchg
pop
xchg
out
adc
jno
cwde
imul
and
jle
(bad)
mov
mov
jno
push
inc
scas
jo
ror
shl
imul
push
cmp
push
pop
rcr
cs
cmp
jge
daa
mov
sub
mov
imul
mov
cmc
inc
mov
(bad)
rcr
mov
inc
mov
rcr
rcr
ret
retf
mov
xchg
mov
jmp
jo
in
sub
sub
mov
in
jns
sbb
dec
dec
mov
outs
popa
inc
adc
dec
add
leave
adc
jg
pop
xchg
lock
(bad)
lods
retf
loop
das
mov
popa
std
xchg
xchg
mov
rcr
mov
std
add
sbb
lock
pop
cmp
jmp
xor
pushf
pop
cmc
inc
sub
cmp
xor
dec
push
xor
popa
in
xor
jmp
push
pop
sbb
dec
(bad)
(bad)
pushf
adc
jg
or
mov
sbb
dec
sbb
pop
(bad)
xor
and
call
cmp
push
fxtract
in
xlat
jl
popa
repnz
outs
cld
in
jmp
ret
cmp
ret
call
out
pop
xor
mov
ret
jmp
mov
jno
ins
jg
jmp
loope
pop
clc
stc
cmps
lods
jnp
lods
fisubr
xchg
int
dec
fcomip
test
aas
and
or
cmp
ds
pop
cdq
cmp
pushf
cdq
jecxz
push
cmp
fbstp
mov
loope
addr16
stos
loope
pop
out
dec
leave
add
or
xor
sub
xchg
adc
mov
push
pop
into
aas
jno
arpl
gs
das
mov
std
not
out
fdiv
outs
enter
add
cld
fadd
mov
xchg
or
imul
lahf
add
mov
jl
jns
pop
xor
or
imul
test
outs
outs
jmp
mov
xor
add
lods
addr16
cld
rol
popf
jae
call
sar
cmp
and
pop
jle
dec
cmp
inc
dec
ins
cwde
xor
jmp
jecxz
mov
imul
cli
(bad)
cmp
(bad)
push
fcmovbe
cwde
sbb
dec
xor
xor
mov
push
mov
jmp
pushf
push
mov
out
cdq
aas
idiv
dec
cli
xchg
jnp
dec
repz
call
fnstsw
jne
movs
cmps
out
jnp
ret
push
jne
int
jo
pop
push
pop
icebp
test
rcl
push
jbe
test
setg
xchg
jp
jo
outs
mov
scas
stos
dec
pop
stc
lds
sbb
push
dec
mov
push
cmp
xor
pop
add
(bad)
scas
lock
mov
inc
pop
mov
repnz
imul
jge
jo
add
rcl
stos
sbb
pop
sbb
dec
in
mov
(bad)
mov
scas
ret
aas
xchg
add
xor
in
mov
retf
bound
adc
(bad)
(bad)
or
sub
mov
retf
lock
cmp
xlat
aam
fnstcw
(bad)
(bad)
ins
pop
mov
imul
mov
popa
nop
out
aas
imul
mov
jmp
cmp
test
out
mov
rcl
stos
loope
ds
mov
dec
loopne
repnz
dec
mov
mov
call
mov
mov
jg
jp
stos
mov
(bad)
cmp
xor
push
add
or
std
iret
popa
push
cld
xchg
pop
cmp
xchg
int
stos
and
das
std
je
cmps
sbb
cmc
repz
cwde
add
fdivr
iret
outs
push
aad
mov
lock
mov
mov
fcomip
xchg
mov
out
sar
xlat
bound
retf
or
adc
dec
cmc
and
call
jl
ret
sub
hlt
mov
ret
sar
mov
jle
cmc
dec
fsubrp
(bad)
inc
mov
test
iret
pushf
ja
je
in
cwde
xchg
sub
pop
cld
mov
mov
clc
mov
out
sti
(bad)
cdq
cli
sar
pop
mov
sbb
shl
imul
aam
sahf
pop
pop
jp
xchg
lahf
jns
(bad)
adc
adc
jb
ror
dec
pushf
push
pop
out
cli
or
jle
(bad)
loope
mov
xor
cmc
ret
stos
hlt
(bad)
add
and
mov
or
push
sub
pusha
in
imul
pop
xor
out
inc
or
scas
cdq
and
add
nop
xor
in
inc
add
add
dec
xchg
ret
cmp
lds
imul
mov
cmp
addr16
in
or
sub
data16
adc
daa
ja
fiadd
mov
fwait
std
enter
std
dec
mov
dec
test
mov
mov
lahf
(bad)
clc
or
shr
outs
mov
aaa
pop
repz
mov
push
in
cmc
jne
(bad)
mov
and
push
jg
repz
mov
in
std
cmps
pop
aas
push
aam
or
(bad)
dec
and
inc
push
icebp
push
cmp
sbb
aad
jno
dec
(bad)
div
stc
stos
inc
stos
push
mov
push
das
pop
cmp
mov
std
push
(bad)
nop
dec
cmps
out
outs
rcr
test
mov
lods
sti
loopne
(bad)
xchg
imul
xchg
sub
adc
imul
and
jmp
sti
stos
out
sar
cli
imul
aam
repz
lds
stos
stos
sub
fiadd
mov
jmp
mov
lahf
fidiv
xchg
xchg
pop
mov
mov
sbb
icebp
icebp
pop
jp
dec
int
push
jge
div
(bad)
loopne
push
push
scas
aaa
jb
lahf
xchg
fistp
xchg
aas
popf
jg
mov
dec
pop
test
loope
retf
sbb
clc
(bad)
fild
xchg
mov
loopne
dec
shl
inc
loope
scas
clc
clc
jno
cmp
cld
int
fadd
mov
mov
cmps
cmps
test
and
inc
add
jle
jl
push
lods
xor
sub
lods
and
retf
in
pushf
xlat
pushf
icebp
fcmovu
repz
sbb
sub
cld
or
pop
sub
adc
add
push
mov
loopne
int
sti
xchg
xchg
aad
sahf
pop
xchg
ins
jae
pop
mov
ds
loop
xlat
div
jl
hlt
scas
(bad)
push
cmps
mov
jle
ret
mov
xlat
jbe
(bad)
in
or
les
push
push
sub
ja
jbe
ret
push
mov
pop
shr
scas
cli
(bad)
std
dec
cmp
jbe
(bad)
jge
mov
lahf
jg
dec
aaa
pop
mul
cli
cdq
pop
repnz
idiv
mov
mov
jmp
jo
cmp
das
pop
sti
(bad)
fist
sbb
pop
(bad)
jmp
movs
dec
xor
mov
pop
and
lock
xchg
jns
sti
into
(bad)
in
loop
mov
jp
add
mov
movsx
in
cmp
or
jge
sub
or
jne
fimul
mov
addr16
loope
data16
ret
js
inc
ds
pushf
inc
iret
lods
sub
int3
cdq
push
cmps
outs
rcl
fcomp
out
jo
xchg
dec
stos
pop
pop
cmc
enter
mov
pop
jge
mov
jg
imul
retf
sub
sbb
out
pop
or
push
dec
push
ins
fdivr
adc
outs
mov
dec
jp
addr16
mov
in
aam
pop
cmc
mov
inc
addr16
stos
pop
pop
push
fs
in
pop
popf
xor
lods
repz
sti
ret
sbb
(bad)
shl
fcomi
adc
push
cmp
add
fcom
ins
test
lahf
cmp
xchg
sbb
gs
cmp
cdq
retf
js
pop
fcomi
out
dec
(bad)
mov
shl
loopne
loopne
inc
pop
call
mov
fcomp
xchg
stc
or
push
jl
gs
dec
inc
xchg
aaa
int3
call
pop
jl
iret
jmp
scas
(bad)
scas
pop
xchg
in
add
and
mov
pop
mov
stc
cli
ins
or
hlt
imul
push
std
rcl
in
lea
mov
lds
fwait
test
pop
dec
imul
rol
xchg
dec
jmp
mov
push
or
sbb
(bad)
(bad)
inc
(bad)
cmp
pusha
or
daa
daa
lahf
jbe
popa
push
mov
imul
popf
xor
fcom
(bad)
mov
add
pop
lock
shl
add
in
scas
xchg
cmp
xor
and
or
pop
popa
dec
jl
pop
pop
aad
leave
ds
addr16
mov
aaa
ficomp
and
iret
clc
fiadd
mov
test
push
mov
adc
loope
or
shr
pop
dec
movs
jo
aad
add
repnz
lods
retf
leave
jmp
or
int3
call
fldenv
addr16
out
push
cmp
(bad)
fistp
jecxz
push
div
clc
ret
mov
xor
rcr
test
jmp
inc
mov
fnstsw
pop
jge
or
jle
xchg
pop
ret
imul
lock
push
cld
imul
inc
jecxz
ds
outs
dec
sbb
jo
aad
aas
sti
or
sbb
pop
jl
inc
(bad)
(bad)
sub
push
add
stc
lea
or
inc
fcomp
inc
sbb
fidivr
add
scas
pusha
jmp
jbe
lods
xchg
arpl
jg
das
test
adc
cdq
lds
xor
(bad)
dec
add
dec
test
sub
add
fs
sub
pop
jle
sar
jbe
arpl
out
imul
test
in
into
push
push
xchg
sbb
ret
sub
lea
outs
dec
sbb
pop
call
rol
mov
pop
pop
add
std
mov
cmps
xchg
hlt
in
xlat
jge
(bad)
adc
in
jns
push
and
or
std
push
adc
push
das
dec
ret
mov
cmp
movs
xchg
xor
inc
push
movs
pushf
cmp
xchg
add
outs
outs
in
or
sub
push
cmc
cmp
cmp
lods
(bad)
stc
jmp
mov
pop
mov
fwait
(bad)
mov
cmp
pop
mov
mov
pop
cmp
push
(bad)
adc
xor
or
pop
jo
sti
mov
jmp
cmp
push
ret
fsub
mov
add
adc
push
ins
ins
pop
mov
dec
mov
sar
sbb
ja
pop
mov
out
pop
mov
hlt
inc
fs
mov
pop
mov
pop
push
pop
scas
jno
imul
ins
imul
jmp
add
jl
mov
dec
cli
std
cmp
jno
mov
pop
shl
fist
jb
cld
(bad)
mov
repnz
xor
cmovns
std
jno
jge
icebp
mov
inc
sub
add
mov
pavgb
push
and
in
int3
cmps
aas
sbb
aad
mov
pop
(bad)
je
or
push
or
mov
add
xor
add
push
add
add
add
and
iret
add
and
retf
jl
fwait
outs
jmp
popa
pop
mov
popf
jg
jns
(bad)
std
out
(bad)
std
cmc
mov
add
push
pop
mov
or
pop
fxtract
xor
mov
ficomp
mov
leave
aad
sahf
pop
mov
sub
mov
repz
xchg
aaa
pop
jno
ret
in
or
out
stc
test
imul
sbb
push
fmul
test
inc
adc
sahf
xor
int3
stos
push
pop
mov
(bad)
cli
sti
cli
in
cmp
cmp
outs
popa
or
aaa
cli
out
clc
std
mov
(bad)
jecxz
ds
pop
hlt
sar
pop
fisubr
outs
dec
movs
cs
cmp
ror
mov
jb
stos
mov
mov
mov
jmp
push
(bad)
mov
mov
aas
mov
pushf
xor
fdivr
cmps
adc
sub
inc
sub
in
inc
jecxz
add
jne
pop
loop
xor
(bad)
clc
xchg
push
movs
lock
(bad)
aad
sbb
fcomip
imul
repz
stos
scas
lods
call
pop
mov
add
sub
mov
mov
xor
mov
jge
cmp
xchg
stos
mov
icebp
(bad)
(bad)
fwait
cli
ror
fs
dec
jae
jmp
push
pop
cdq
dec
outs
jl
shl
(bad)
out
jae
jge
xchg
fild
imul
stc
jo
stos
retf
jl
dec
jmp
dec
lock
sahf
jnp
push
push
cmps
iret
pop
(bad)
rcr
cli
scas
pop
adc
push
and
mov
mov
adc
shr
out
xchg
xor
mov
lds
sbb
pop
and
add
jnp
pop
pusha
add
dec
cmp
dec
mov
sbb
lea
xlat
mov
gs
(bad)
jp
mov
test
pop
jle
xchg
push
ds
std
xchg
pushf
mov
retf
xor
jbe
popa
outs
jl
(bad)
or
jg
mov
xchg
add
lahf
dec
int3
xchg
dec
cwde
or
dec
jmp
scas
inc
xchg
repnz
das
mov
xchg
fdiv
xor
jo
fidivr
fisub
(bad)
std
shl
sbb
stos
popa
test
repz
int
cdq
lds
out
out
xor
ins
daa
int
in
retf
jns
leave
sub
scas
jmp
mov
mov
mov
mov
mov
call
lds
sub
mov
inc
(bad)
pop
jle
xchg
repz
popf
je
das
jmp
push
in
or
xor
popa
ja
xlat
in
push
cmp
ds
sahf
xlat
into
mov
mov
mov
scas
adc
mul
jecxz
outs
ins
(bad)
mov
mov
das
(bad)
test
mov
repz
jge
clc
jmp
loope
add
mov
sub
sahf
jge
push
add
(bad)
mov
sahf
int3
sub
repnz
xchg
sti
xchg
ins
add
scas
sub
into
xor
mov
cmps
pushf
cmc
ds
repz
aas
movs
mov
repz
mov
pop
test
dec
sub
pusha
(bad)
cwde
mov
dec
movs
or
inc
cmps
dec
rol
cmp
jae
mov
aaa
rcl
push
shl
add
js
mov
clc
stos
in
pop
mov
inc
ret
xor
in
or
adc
add
add
inc
add
rcl
sub
nop
cmp
sahf
or
enter
enter
and
and
sub
popa
dec
fwait
sub
mov
pop
jl
cmp
jle
pusha
jnp
lock
jg
fld
sysenter
jbe
adc
ss
or
repz
jg
ss
out
js
pop
mov
cmc
int
(bad)
into
daa
arpl
or
out
inc
push
(bad)
das
cld
in
imul
cmps
paddw
cmps
int
push
mov
or
ret
cmp
jmp
das
mov
fild
imul
xor
cdq
out
pop
iret
push
add
jecxz
xlat
cmc
pop
or
aas
aad
not
fidivr
pop
jle
inc
mov
hlt
enter
add
jl
xchg
aad
into
sahf
movs
dec
pop
add
pop
retf
cmp
js
mov
in
push
jmp
cmc
mov
push
js
pop
jg
dec
ja
out
and
les
jle
arpl
cs
ja
jge
(bad)
mov
rol
retf
pop
fidiv
cmc
mov
popf
xor
xor
out
pop
mov
cld
add
push
out
std
fbld
fcmovbe
pop
pop
jg
leave
enter
push
jecxz
es
lods
jp
repz
data16
loope
ror
mov
rol
lahf
fdivrp
popf
iret
dec
mov
aaa
sbb
or
(bad)
jnp
pop
(bad)
adc
int
jle
inc
outs
in
pop
arpl
popf
pop
icebp
cli
shl
add
out
pop
xchg
lods
lods
pop
mov
pop
cmp
dec
je
pusha
add
mov
and
jae
push
call
inc
add
daa
cmp
pushf
and
add
nop
jp
adc
sbb
add
mov
xor
movs
adc
cld
es
(bad)
jbe
mov
loopne
cmp
cmps
ja
ins
dec
(bad)
idiv
mov
enter
(bad)
icebp
movs
or
ror
out
test
out
stc
(bad)
jmp
mov
aad
std
add
pop
pop
idiv
out
das
jp
xchg
pop
push
seta
div
mov
outs
pop
lock
mov
pusha
inc
jge
cmc
mov
xlat
test
ins
js
popf
or
loopne
int3
sbb
push
scas
scas
mov
or
daa
sbb
out
add
jge
(bad)
push
(bad)
pushf
not
mov
push
add
mov
out
aaa
das
jp
jno
cld
jns
pop
add
jne
into
or
(bad)
rcl
sahf
pop
mov
fld
in
jo
loope
fcmovu
fcomi
sbb
fdivr
jne
cmps
and
lock
fbld
cmc
test
jnp
mov
push
lds
push
jge
mov
cwde
mov
nop
loope
movs
sbb
adc
xchg
fistp
xor
adc
out
stc
retf
jmp
dec
adc
or
sahf
cmp
inc
dec
in
jge
cmc
mov
retf
mov
call
into
or
or
loope
loop
repnz
xchg
dec
pop
push
cwde
fwait
mov
ja
movhps
scas
nop
jg
(bad)
fsubr
daa
xlat
xor
les
adc
cwde
xor
push
call
or
jge
jb
pushf
cld
jno
out
mov
pop
cmc
stc
dec
int
adc
mov
dec
mov
pop
push
jmp
gs
je
dec
scas
out
int3
retf
ja
dec
lea
dec
cmp
or
or
adc
inc
(bad)
mov
adc
inc
ror
sbb
jno
sahf
aam
and
push
push
dec
cs
adc
sub
sbb
push
xchg
lods
adc
jno
mov
imul
push
aaa
jb
sbb
jmp
sub
cwde
mov
and
leave
jle
and
fdiv
jae
mov
popf
int
pop
stos
retf
lods
outs
jg
adc
addr16
jg
lock
iret
outs
mov
outs
je
sub
ja
hlt
mov
test
add
clc
xchg
dec
(bad)
cmp
test
dec
retf
or
imul
shl
fwait
push
mov
mov
gs
outs
ftst
stc
sub
ds
mov
in
mov
cmps
retf
(bad)
jge
or
test
shl
dec
jmp
cmp
loope
(bad)
sti
adc
add
icebp
mov
cs
push
or
jg
sub
shr
shr
cs
je
mov
pop
jl
jmp
inc
into
sbb
pusha
xor
push
push
xchg
push
and
out
pop
inc
mov
or
out
jle
icebp
fistp
mov
jne
pop
jae
sub
scas
mov
rcl
mov
sbb
addr16
pop
sbb
jb
jae
cmps
mov
adc
add
lods
add
pop
pop
inc
inc
repnz
ja
out
out
ror
icebp
test
mov
mov
or
test
idiv
mov
int
test
push
push
jmp
jmp
fnstsw
jmp
and
out
push
xlat
div
ins
imul
(bad)
push
loopne
mov
test
out
rcl
xchg
loopne
inc
adc
and
bound
add
inc
or
inc
mov
enter
rol
fidiv
mov
dec
cwde
or
or
inc
ins
test
xor
mov
addr16
mov
(bad)
push
stos
imul
fucomip
enter
pop
les
or
mov
jno
data16
or
cwde
xor
inc
xchg
cmp
jmp
out
or
dec
test
adc
mul
xor
int
shl
ret
movs
jge
movs
cmp
lahf
xor
xor
cli
jge
lods
enter
sbb
dec
cmp
dec
pop
loope
mov
push
mul
bound
mov
cs
repz
jnp
fldenv
cmp
pop
mov
out
(bad)
fmul
pop
pop
cmp
inc
outs
outs
mov
xchg
out
xor
cmps
fistp
pop
push
in
jae
aam
jbe
sbb
adc
mov
dec
nop
fild
in
sub
cmp
mov
call
lahf
add
mov
pop
xchg
aam
out
aad
fnstsw
push
push
aad
dec
sahf
repz
arpl
mov
mov
add
xchg
pop
jl
idiv
fist
(bad)
adc
scas
scas
mov
into
stos
mov
test
jmp
dec
call
in
stos
mov
mov
push
jge
dec
mov
sbb
bound
xchg
(bad)
adc
cld
iret
dec
jg
sbb
xchg
xchg
add
push
mov
pop
mov
jno
pop
out
jle
jmp
icebp
add
inc
add
xchg
sti
int
mov
lock
mov
cmps
cdq
imul
mov
push
add
jno
arpl
call
es
ds
mov
nop
mov
pop
sbb
sub
mov
adc
je
nop
(bad)
jae
cmp
arpl
pop
adc
test
mov
xlat
push
push
ins
in
fnstsw
test
or
sbb
in
lea
rcr
int
jns
inc
shl
pop
ss
loopne
int
cmp
ins
scas
outs
cwde
cmp
sub
das
mov
lahf
push
mov
cmp
inc
imul
fbld
inc
pop
scas
xchg
adc
mov
dec
scas
fadd
ja
sti
cld
out
sub
into
jno
nop
(bad)
in
sub
cmp
mov
frstor
jnp
or
ss
xchg
or
(bad)
aam
pop
jbe
call
xor
in
xlat
cld
lock
sbb
xor
jge
stc
das
mov
add
scas
icebp
(bad)
mov
data16
mov
lahf
fst
sahf
sbb
mov
push
movq
xchg
dec
pop
add
mov
leave
sub
sti
gs
aaa
stc
jnp
adc
pop
in
jecxz
(bad)
pop
inc
mov
clc
stc
sti
xchg
scas
aas
pusha
nop
sub
xor
jg
mov
push
adc
jge
es
cmp
jmp
pop
sbb
repz
cmp
mov
jg
idiv
dec
push
or
mov
mov
xlat
xchg
mov
mov
dec
sub
scas
push
aas
out
popa
addr16
push
cld
jno
in
leave
loope
adc
adc
adc
test
fistp
popa
push
adc
sbb
ins
ret
jbe
repz
ins
push
or
nop
cmps
outs
adc
push
sub
cwde
aad
sub
mov
shl
inc
add
add
mov
push
sti
and
inc
jmp
int
fsub
popf
cmp
cmps
inc
pop
cmps
inc
and
dec
adc
dec
call
or
inc
mov
xchg
ds
push
rol
pop
(bad)
fst
jmp
addr16
cmp
jmp
jno
mov
or
push
clc
ret
adc
repz
inc
push
cmp
into
cli
xor
pusha
push
mov
jg
loop
lods
test
cld
mov
fadd
aad
adc
popa
cmp
sahf
lods
push
sar
outs
into
cmp
inc
ins
mov
sub
push
leave
cli
mov
loopne
sahf
pop
mov
pop
das
or
test
nop
clc
movs
addr16
cmp
clc
inc
push
sub
lds
setae
lods
jmp
push
sbb
push
shr
and
gs
test
pop
in
clc
ret
ret
jae
pop
xor
xor
stc
and
sbb
xchg
into
or
(bad)
mov
mov
and
xchg
sub
stos
out
mov
jecxz
mov
sub
in
jmp
sti
scas
(bad)
rcl
mov
ss
sbb
movs
cwde
pop
lock
(bad)
pop
int3
jmp
adc
rol
scas
fisttp
mov
call
sti
(bad)
mov
rcr
pop
pusha
icebp
in
sbb
stos
fdivr
pop
clc
fs
xchg
pop
push
mov
out
int
jle
adc
mov
mov
jge
out
pop
rcl
mov
hlt
mov
jo
push
pushf
ins
xchg
inc
pop
xor
mov
pop
pmulhuw
sub
mov
stos
adc
push
add
adc
xchg
sub
inc
push
nop
rol
fld
jns
rcl
pop
call
cmp
xchg
out
push
int3
cli
(bad)
mov
outs
dec
cmp
test
mov
xor
retf
pop
mov
scas
jns
mov
cmc
(bad)
lahf
pop
jae
fcom
jbe
out
fistp
ret
test
stos
test
mov
dec
and
test
sub
cmp
jmp
adc
ins
jns
jno
mov
mov
in
stc
or
xchg
out
sahf
mov
cmc
leave
push
rol
xchg
cdq
push
or
mov
stos
popa
sti
daa
dec
lods
cli
fld
pop
inc
aad
or
dec
int3
mov
mov
sub
inc
fwait
ret
xlat
jmp
cmc
or
adc
inc
jae
out
(bad)
lea
sub
mov
add
scas
leave
mov
sbb
imul
pop
ss
(bad)
neg
cmp
xlat
sbb
xchg
push
mov
xchg
and
mov
test
jg
xchg
mov
stos
dec
mov
add
mov
pushf
mov
test
enter
add
je
inc
jge
addr16
jle
xchg
mov
xor
(bad)
lahf
xlat
call
cmc
aas
in
outs
xchg
or
jmp
scas
fidivr
popa
cli
mov
mov
and
or
test
xor
fwait
adc
sbb
inc
add
push
adc
idiv
or
mov
add
cs
xor
sub
fisttp
test
adc
inc
scas
adc
cmp
push
ret
shr
nop
adc
inc
pusha
test
das
mov
rol
jbe
enter
sub
lock
test
arpl
add
iret
std
out
lock
mov
mov
cmp
lock
pop
ja
(bad)
mov
mov
daa
test
test
lods
sub
scas
lahf
nop
mov
out
mov
sub
not
arpl
pop
sbb
das
ins
mov
addr16
lods
mov
add
loop
push
in
pop
push
shl
or
or
(bad)
mov
hlt
repz
scas
stos
pop
xchg
mov
dec
sbb
sti
into
mov
sbb
lds
sbb
or
in
ficomp
sahf
outs
pop
mov
std
repnz
push
js
lahf
inc
jae
jmp
sar
sbb
mov
sbb
aas
out
and
(bad)
call
jmp
jge
popa
add
ror
push
mov
(bad)
pop
or
lahf
cmc
jb
call
jmp
fidiv
inc
icebp
pop
adc
inc
aam
add
fcomp
dec
xchg
fmul
or
lock
push
retf
pushf
dec
std
lock
pop
xor
enter
shr
jg
fidiv
pop
cs
js
xchg
xchg
dec
outs
cmp
aas
out
(bad)
mov
in
lds
test
outs
div
xor
jb
mov
pop
xchg
sbb
imul
pop
aaa
out
inc
add
in
push
sub
sbb
pop
pusha
cmp
or
pop
mov
mov
mov
repnz
sub
shr
mov
jp
adc
fdivr
add
or
add
add
pop
inc
pop
jl
or
cmp
data16
(bad)
test
retf
nop
fucomi
fucomp
daa
sub
xchg
add
mov
out
outs
sbb
sbb
iret
fnsave
cmp
xor
das
outs
dec
das
pop
sar
fst
add
leave
mov
xor
(bad)
ins
pop
cdq
enter
aam
jl
mov
ror
idiv
in
out
mov
faddp
jmp
push
jb
adc
(bad)
popf
dec
hlt
inc
scas
push
call
mov
mov
mov
mov
test
dec
cdq
repz
cmps
cmc
js
lea
cli
add
xchg
fistp
call
jns
pop
inc
iret
fcmovb
inc
pop
sbb
mov
jae
out
(bad)
mov
(bad)
push
out
in
cmc
ret
retf
cmp
jne
mov
inc
xchg
jns
clc
out
xor
mov
mov
imul
push
aam
adc
mov
push
dec
and
lods
jo
(bad)
cmc
push
cmp
mov
in
mov
repz
sbb
xor
pop
ja
push
cld
jmp
cs
push
aad
cmp
cs
js
mov
jmp
cmp
out
aas
sub
or
dec
mov
fs
ret
(bad)
xlat
(bad)
pop
mov
mov
jg
test
mov
push
rcr
call
sub
sbb
dec
hlt
add
sub
xor
in
push
stos
adc
(bad)
daa
ret
rcr
gs
sbb
pop
pop
pop
push
std
inc
rol
test
push
mov
mov
(bad)
xchg
aam
or
stc
mov
fldcw
ds
nop
cmp
ins
jbe
fidivr
rcl
mov
adc
jbe
sahf
jo
cwde
in
fcmovne
push
cld
imul
push
push
xchg
neg
or
jg
loope
jg
push
push
push
xabort
das
pop
idiv
repnz
pop
pusha
sahf
stc
sti
push
jnp
lods
pop
aas
std
popf
xchg
shr
ins
push
cmp
(bad)
sbb
daa
push
push
push
fldcw
div
imul
fst
stos
add
jecxz
sbb
stos
push
ins
out
jp
add
fistp
jne
add
outs
mov
mov
call
mov
jmp
and
mov
mov
mov
ins
fnstcw
push
pop
and
imul
(bad)
idiv
mov
fimul
push
xor
out
fnsave
push
out
sahf
sahf
cmp
call
pushf
rol
cs
adc
dec
(bad)
xor
jl
daa
mov
adc
cmp
popa
imul
pushf
ss
jg
(bad)
push
push
shr
cmp
xchg
mov
inc
cmc
xchg
jl
loope
imul
in
mov
mov
call
dec
in
mov
outs
xor
(bad)
ins
test
int3
mov
jnp
mov
add
pop
repz
aaa
std
jl
out
ja
cmps
std
pop
imul
cs
call
test
imul
cmc
test
int3
adc
mov
pop
xor
div
mov
addr16
into
or
xor
dec
sub
pop
cmp
and
mov
pop
fadd
and
fcomi
cwde
arpl
sbb
jmp
cs
add
repz
nop
sbb
jl
add
xchg
leave
xchg
push
add
cmp
dec
adc
bound
pop
fadd
popa
fcmovnb
dec
addr16
imul
les
ficomp
or
rol
mov
cmps
cmp
ins
iret
gs
inc
jmp
int
hlt
inc
jnp
adc
in
fmul
adc
daa
ja
mov
mov
fstp
xchg
jno
icebp
inc
push
fist
scas
dec
pop
mov
nop
jge
es
in
jb
inc
into
xchg
add
lods
fadd
pop
shl
shl
cmps
push
mov
icebp
nop
xchg
int3
sub
mov
call
push
(bad)
cwde
adc
inc
ffreep
or
movs
fld
push
fild
lods
rcl
add
xor
js
(bad)
fwait
ss
cmc
mov
lods
add
test
idiv
pop
lds
rcr
rcl
fdivr
adc
jb
push
sub
push
mov
arpl
inc
test
mov
dec
sub
test
push
push
or
icebp
loopne
lea
dec
mov
pop
inc
xchg
bound
adc
or
or
sbb
xor
and
xchg
mov
in
les
(bad)
jp
daa
adc
nop
sub
pop
cmp
cmp
mov
out
out
int3
ror
repz
test
pop
mov
xchg
jo
aaa
fs
aad
lahf
int
(bad)
xor
mov
cdq
add
inc
dec
mov
(bad)
and
stc
daa
sbb
jmp
mov
call
ins
fidivr
dec
les
inc
add
mov
xchg
jo
adc
adc
push
mov
repz
mov
mov
fwait
(bad)
push
adc
stc
add
push
xor
sbb
ret
and
push
cmp
push
mov
cmps
sub
mov
gs
pop
jno
cli
mov
shl
xchg
xchg
cld
fwait
xchg
cmp
iret
add
and
js
dec
adc
mov
in
hlt
les
arpl
sub
(bad)
jecxz
sub
ins
sti
lock
mov
and
retf
or
cld
rep
out
mov
call
std
rcl
daa
mov
mov
or
hlt
stos
xor
es
sub
adc
pop
fild
add
push
pop
fadd
inc
mov
enter
dec
push
test
cmp
pop
xor
push
cdq
push
add
pop
popa
cmc
adc
mov
enter
xchg
adc
adc
test
and
ins
fst
jo
jmp
mov
(bad)
imul
into
fist
xor
sar
pop
cmp
dec
xor
std
jo
sar
rcl
pop
(bad)
retf
xor
pop
sbb
cmp
cmp
cmp
cwde
fisub
aam
push
test
lods
je
xchg
inc
or
dec
mov
xchg
ss
adc
jle
inc
jmp
inc
sahf
dec
push
and
dec
xchg
test
xor
xor
sub
arpl
adc
push
ins
mov
retf
cmp
leave
xor
lods
cmp
push
pop
mov
xor
popa
xchg
pop
mov
inc
mov
jbe
jecxz
(bad)
mov
in
ja
inc
pop
push
cmps
jl
push
xor
push
in
pop
and
mov
pop
(bad)
jno
repnz
or
xchg
or
inc
ficom
sbb
pop
cmp
dec
retf
mov
daa
xchg
or
cli
(bad)
adc
rol
je
jmp
or
(bad)
lods
mov
cwde
sbb
mov
mul
dec
jns
lds
ja
cmp
dec
dec
in
sub
adc
inc
inc
mov
(bad)
push
imul
movs
pop
cmp
add
xbegin
pop
fcom
sub
add
push
aam
pop
jno
xchg
pushf
mov
xchg
nop
adc
shr
bound
sahf
cld
lea
stos
sub
and
and
pop
pop
imul
push
adc
test
out
je
adc
test
add
adc
xlat
(bad)
mov
push
jg
(bad)
push
xchg
retf
inc
and
test
aas
ffree
icebp
fidivr
jl
jnp
xlat
(bad)
(bad)
inc
push
or
sbb
sbb
adc
mov
push
call
ja
int
add
and
xor
aas
push
mov
lods
test
xor
out
imul
mov
push
or
mov
push
push
inc
jbe
out
ret
inc
pop
fnstcw
call
ins
mov
jnp
adc
inc
jmp
call
in
fcmovu
lods
lods
jmp
icebp
add
scas
test
fwait
jne
inc
cmps
sub
movs
mov
xor
stos
or
inc
loop
xor
or
retf
adc
sub
pusha
adc
xchg
mov
xchg
xor
jo
add
dec
mov
cmc
mov
test
push
dec
popf
push
or
aaa
out
aas
(bad)
(bad)
push
inc
(bad)
and
or
stos
adc
in
out
(bad)
mov
ret
xchg
dec
xchg
in
je
adc
je
cmp
xchg
call
cmp
xchg
cdq
int
clc
mov
sub
jle
jbe
popf
xor
jns
or
pop
dec
push
ror
loopne
stos
mov
pop
pusha
or
or
psraw
sub
repnz
(bad)
hlt
mov
scas
pop
push
push
jae
mov
xor
add
pop
retf
(bad)
jle
dec
ss
shl
sbb
daa
jo
xor
jne
dec
cs
jmp
adc
dec
inc
push
inc
or
(bad)
in
mov
add
or
shl
inc
and
add
xchg
shl
add
xor
sub
or
imul
into
aaa
fist
repnz
sti
in
and
mov
and
and
xchg
addr16
inc
mov
inc
xchg
or
push
mov
cmp
push
cmc
inc
(bad)
push
int
pop
repnz
ss
xchg
sub
mov
movs
leave
jns
ja
inc
push
push
cwde
and
mov
movs
or
mov
rol
bound
popa
sub
fistp
and
mov
rcr
mov
mov
xchg
sub
xlat
push
int3
inc
fs
daa
and
push
(bad)
jno
enter
stc
and
pop
fwait
xchg
pop
adc
and
mov
ret
cwde
jns
xor
sub
pusha
test
push
mov
sbb
stos
les
dec
push
add
xor
add
sbb
in
and
ret
lods
inc
sub
adc
push
inc
push
cmps
and
and
mov
imul
or
lds
aam
add
iret
pminub
sahf
jle
sub
push
pop
jmp
(bad)
add
adc
add
or
fptan
cli
push
inc
std
fimul
inc
imul
pop
fwait
fs
fwait
mov
inc
dec
dec
data16
inc
xor
sbb
cmps
mov
jb
pop
and
dec
add
or
inc
push
aad
add
jg
mov
lea
jg
xchg
movs
neg
inc
leave
rcl
inc
test
test
sub
and
ds
ficomp
jbe
(bad)
sbb
retf
sub
mov
mov
rcl
ficom
sub
jp
mov
push
imul
jp
scas
jp
cli
test
mov
dec
retf
movs
es
dec
push
or
mov
ss
push
add
or
cmp
push
data16
sub
cmp
jb
arpl
les
retf
jnp
and
inc
mov
or
inc
int
push
test
mov
mov
jp
mov
sbb
stos
and
ficomp
hlt
xchg
scas
mov
xchg
out
and
retf
adc
sub
add
inc
scas
scas
or
rcr
sub
js
sub
std
inc
sbb
je
stos
mov
cdq
(bad)
push
fidivr
fiadd
push
mov
loopne
xchg
sub
not
enter
dec
in
aas
fadd
or
jge
rcr
loope
add
sub
dec
xchg
test
and
in
cld
shl
and
push
ins
aaa
gs
mov
in
push
fidivr
jbe
popf
adc
and
cdq
sti
dec
sbb
jge
gs
call
pop
mov
push
jo
rcl
xchg
fnstcw
cdq
repnz
jb
inc
stos
stos
xor
push
sbb
mov
cwde
inc
in
enter
sar
adc
or
or
nop
pop
push
inc
xchg
add
sar
jno
test
nop
std
add
mov
inc
inc
and
mov
xor
mov
mov
test
push
addr16
cmp
fsubr
out
adc
popa
mov
test
adc
rol
cwde
add
jl
push
std
pop
xchg
jbe
cmc
add
push
and
push
popf
stos
push
push
pop
inc
sbb
xor
mov
pop
je
adc
sbb
hlt
jmp
add
cld
shl
and
inc
push
xor
or
and
add
pop
pusha
iret
push
(bad)
es
lods
add
(bad)
in
movs
ror
fwait
dec
out
cmp
cwde
hlt
movs
xchg
add
and
ficom
inc
adc
mov
mov
adc
jmp
les
adc
mov
xor
sbb
jnp
movs
adc
pop
push
add
inc
int
cmp
jmp
ins
enter
sub
mov
xchg
sub
scas
(bad)
fstp
add
adc
push
inc
pop
adc
adc
xor
pop
nop
add
add
sub
sbb
cld
adc
jmp
add
mov
add
mov
add
mov
call
xor
push
test
in
add
call
ror
push
add
icebp
dec
jnp
imul
popa
push
mov
imul
inc
push
mov
jne
mov
test
imul
cli
cmp
and
mov
div
xchg
add
vaddss
jns
push
retw
cmps
xor
cmp
js
push
add
sbb
add
add
sub
pop
mov
sub
je
inc
push
ficomp
cmp
mov
mov
mov
inc
mov
mov
call
add
pop
and
add
in
mov
cmps
fsub
pop
sbb
pop
sub
nop
push
add
stc
mov
add
or
retf
jb
pop
rcr
push
push
leave
test
add
push
adc
add
das
adc
sbb
xor
cmps
dec
add
test
or
enter
rcl
push
mov
xor
pop
enter
or
aaa
rcl
cmp
mov
mov
jg
gs
in
jmp
pop
pop
sbb
ja
ret
xor
(bad)
adc
inc
aas
mov
es
xor
ret
jne
mov
addr16
test
mov
xchg
dec
push
xor
sbb
dec
ror
add
add
repnz
jnp
or
and
mov
pop
adc
sub
sub
xor
adc
movs
mov
inc
mov
jl
dec
push
sahf
inc
add
inc
inc
sbb
sar
jne
in
mov
(bad)
push
test
sbb
jmp
repnz
pusha
push
adc
dec
push
or
and
hlt
(bad)
or
xchg
enter
arpl
bound
mov
cmp
push
lock
or
xor
das
mov
arpl
fst
jnp
loop
adc
scas
mov
xchg
inc
fld
and
gs
mov
sar
adc
sbb
cmp
sbb
jns
dec
push
movs
inc
inc
add
push
mov
cmp
lock
adc
pop
inc
push
das
push
clc
lea
scas
shl
inc
adc
mov
js
pop
sub
xor
push
call
dec
xor
rcl
jbe
and
sbb
out
and
mov
lods
and
or
clc
xchg
or
jl
xchg
sbb
rol
pop
adc
call
inc
sub
sbb
outs
and
scas
dec
sub
xchg
lods
rcl
int
iret
dec
fild
mov
mov
and
inc
std
pop
and
push
add
mov
and
psraw
pop
inc
iret
idiv
mov
add
fwait
adc
inc
cmp
or
nop
mov
mov
call
xchg
mov
out
addr16
ins
ret
movs
or
sub
adc
push
and
sbb
nop
fs
test
dec
mov
mov
adc
jne
mov
shl
dec
dec
mov
pop
inc
or
ror
stc
sub
mov
inc
add
inc
pop
mov
or
inc
jo
cli
inc
cdq
and
cmps
pushf
mov
icebp
sbb
es
adc
adc
xor
add
mov
or
or
sahf
add
popa
shl
inc
mov
lods
jb
nop
leave
pop
leave
test
loop
stc
jmp
cmc
and
std
inc
jge
movs
push
add
and
xchg
push
hlt
and
test
sbb
sub
in
adc
xlat
mov
(bad)
je
fadd
and
shl
add
popa
or
adc
jl
or
je
add
dec
inc
fwait
add
mov
mov
or
push
push
jns
dec
xor
adc
lea
sbb
inc
mov
push
add
cmp
enter
sbb
repnz
mov
inc
add
sbb
and
sub
ins
add
mov
mov
into
out
cmp
mov
push
fisttp
ins
(bad)
mov
retf
icebp
test
sbb
mov
and
cld
je
add
xor
pop
pop
sub
dec
adc
push
hlt
ins
pop
cmp
sbb
scas
imul
dec
rol
mov
sti
stc
shr
inc
pop
xchg
ror
sahf
pop
adc
mov
loop
mov
add
add
mov
adc
in
inc
cmc
or
adc
inc
jecxz
(bad)
test
imul
push
repnz
or
jmp
pop
nop
ss
inc
es
mov
loopne
adc
retf
jb
or
inc
inc
mov
sub
xor
jle
test
xchg
sbb
cmps
test
pop
cmps
sbb
aad
xor
enter
das
ja
test
fild
hlt
xchg
cmp
cli
or
xchg
mov
fwait
mov
stos
imul
cwde
mov
dec
sbb
rcr
out
jge
loopne
xlat
xchg
lds
cmp
add
sbb
push
dec
inc
ror
iret
or
sahf
(bad)
out
cmp
inc
pop
mov
sub
sub
cmp
mov
jmp
jecxz
xchg
jg
mov
mov
ret
retf
adc
ins
in
seta
test
push
sub
xor
dec
pop
clc
lock
shl
mov
xlat
pop
add
and
and
mov
je
push
or
inc
push
sahf
dec
cmp
jns
dec
bound
jne
and
inc
je
dec
dec
and
push
enter
cmps
cmp
fiadd
and
mov
cmps
fbld
add
pop
sahf
add
retf
pop
and
dec
mov
ds
push
mov
pop
dec
addr16
push
stos
add
std
mov
inc
add
cmp
mov
sti
ret
inc
loope
jb
xchg
pop
dec
add
and
adc
and
loope
push
add
mov
push
or
dec
cdq
(bad)
push
adc
test
sbb
sbb
shl
ins
shl
jmp
dec
test
cli
sbb
sub
mov
fdivr
std
cdq
inc
pop
call
cs
out
pop
push
test
xchg
inc
aas
xchg
mov
mov
je
xchg
push
or
push
xchg
add
rol
push
pop
adc
fcomp
das
sub
or
cmp
ds
pop
aad
mov
lods
sbb
dec
cmp
add
sbb
mov
add
sub
jmp
lods
inc
ds
add
dec
out
ret
sti
test
clc
in
shl
sub
(bad)
sbb
dec
jns
outs
iret
cmp
mov
mov
aam
pop
test
and
not
sub
ror
(bad)
mov
jbe
cmp
jmp
or
xchg
(bad)
pop
retf
sbb
inc
push
cwde
mov
arpl
mov
cwde
xor
sar
fs
gs
xor
mov
pop
push
cwde
cs
or
pop
xchg
push
dec
inc
push
or
int3
mov
popf
in
xlat
mov
pop
mov
xor
cmps
xchg
retf
sub
stc
les
xor
enter
and
cmp
in
and
inc
push
inc
enter
mov
lods
add
mov
repnz
imul
retf
adc
jg
add
cmc
inc
ds
iret
aaa
mov
sub
push
push
adc
mov
push
push
sbb
push
inc
and
pushw
xor
movs
pop
(bad)
xor
add
mov
push
imul
pop
add
test
hlt
add
mov
cmp
ins
dec
mov
or
xchg
mov
cmps
mov
es
push
dec
push
sbb
sbb
sbb
add
or
movs
adc
mov
sub
xchg
or
addr16
cmps
cwde
inc
pop
pushf
dec
xor
out
pusha
cmp
bound
adc
nop
xor
lods
cmp
sti
popa
xchg
xchg
inc
pop
pop
sub
retf
adc
mov
dec
dec
cdq
dec
icebp
test
cmp
fdivr
mov
fcomp
pusha
cmp
sbb
pushf
in
hlt
or
or
jecxz
enter
sub
or
push
test
fs
sub
inc
repz
adc
jb
dec
scas
sbb
outs
or
imul
or
and
cdq
int3
aam
(bad)
jecxz
(bad)
push
or
sbb
push
pop
mov
mov
adc
les
push
retf
inc
outs
xchg
lds
sub
inc
lds
mov
cwde
stos
adc
imul
movs
or
icebp
adc
shl
add
cmp
xor
sbb
or
push
cwde
push
sbb
shl
imul
and
mov
mov
push
call
sbb
jbe
fcmovnbe
rcr
nop
xchg
sti
in
inc
inc
pusha
mov
stos
sbb
jne
xchg
inc
or
movs
and
mov
jp
or
jp
test
mov
mov
jecxz
out
dec
xchg
(bad)
aam
int3
push
pop
or
stos
inc
mov
push
fsubr
jl
sbb
gs
pushf
sbb
(bad)
rcr
push
rcr
xor
mov
xor
and
dec
arpl
loop
inc
push
inc
or
sbb
push
mov
rcl
or
add
ins
push
push
pop
xchg
cmps
int3
jnp
retf
pop
bound
cs
sub
xchg
jno
hlt
sub
push
out
inc
xor
test
shl
pushf
xchg
cmp
pop
dec
jecxz
push
sub
pushf
(bad)
sub
ja
pop
mov
add
push
out
xchg
jmp
ins
inc
pop
call
shl
or
movntps
popf
or
outs
(bad)
mov
and
aam
xor
pop
and
enter
push
jb
push
inc
imul
loopne
(bad)
xor
or
pop
push
ret
xchg
ins
lds
scas
fcom
sub
mov
lods
cwde
mov
movs
addr16
inc
les
rcr
or
jbe
push
adc
jecxz
xchg
leave
in
and
ror
push
sub
mov
rcl
addr16
pop
rcl
push
jb
mov
and
push
(bad)
and
leave
das
or
xchg
push
pop
mov
inc
add
pop
sub
mov
popf
adc
mov
and
ror
pop
mov
jmp
aaa
int
movs
fimul
adc
xchg
(bad)
adc
lahf
es
mov
adc
cmp
mov
mov
add
xchg
cdq
xchg
cmp
pop
pop
xor
inc
inc
jmp
mov
xchg
or
push
pop
xor
inc
and
aad
not
or
cmc
(bad)
jbe
arpl
mov
(bad)
ficom
cmp
mov
test
sbb
test
fnstenv
jne
jns
push
fs
daa
sbb
xchg
add
jecxz
fcom
movs
pop
enter
jnp
daa
adc
(bad)
fsubr
jp
pop
xchg
mul
sbb
test
jo
pop
jbe
mov
arpl
loopne
sti
fcmovu
add
arpl
retf
xor
ror
inc
cmc
call
jecxz
fcom
(bad)
in
int3
test
pop
or
xor
ret
inc
test
cli
sub
jle
xor
fst
push
stos
jle
repnz
pusha
lock
sub
in
xchg
mov
test
inc
pop
ret
sub
cmps
adc
movs
aaa
add
jbe
mov
fist
and
sbb
xchg
adc
inc
aaa
xchg
ins
lods
into
aaa
(bad)
cmp
mov
sub
add
daa
pusha
nop
fdiv
jnp
push
push
mov
fld
jne
cwde
icebp
xor
pop
fst
push
pop
fst
add
push
cwde
pop
dec
or
inc
sub
or
js
pop
ret
xchg
sub
or
and
cmps
inc
pushf
sub
sub
push
aas
inc
mov
les
sahf
outs
adc
stos
pushf
retf
cmps
pop
adc
adc
and
shl
push
push
cdq
cdq
into
mov
mov
dec
mov
add
cmp
call
mov
fcmovnu
enter
retf
add
scas
jmp
mov
xchg
data16
sub
repz
das
dec
jns
lods
sbb
push
in
mov
add
mov
adc
mov
jp
popa
inc
jp
movs
sbb
sbb
(bad)
fstp
inc
and
jmp
fsubr
sbb
popa
mov
cdq
jmp
loopne
pushf
mov
sub
pushf
mov
xor
mov
cmp
stos
jmp
stos
sbb
or
pop
push
cmp
push
test
int3
mov
mov
mov
ret
adc
xchg
pop
and
xchg
into
ins
or
or
adc
pop
popf
fldenv
inc
pop
cmp
das
mov
mov
rcl
xlat
jmp
dec
stos
int3
mov
mov
mov
inc
mov
retf
xchg
jns
mov
popf
xlat
(bad)
movs
pop
retf
shl
rcl
xor
mov
sbb
stos
sahf
(bad)
mov
nop
fidiv
jl
push
pop
sbb
jo
mov
cmps
sbb
addr16
fnsave
adc
push
mov
mov
adc
cmps
int
gs
push
ret
sub
lods
xchg
or
iret
(bad)
(bad)
imul
xchg
imul
js
mov
leave
fadd
push
les
les
xchg
adc
(bad)
test
inc
aas
loope
mov
jae
aad
xlat
push
push
aas
mov
and
arpl
add
adc
sub
loopne
je
push
punpckhwd
cmp
aas
jmp
jmp
js
inc
cmp
sahf
iret
dec
shl
cdq
out
movs
stos
mov
dec
ins
mov
jne
shr
adc
leave
mov
test
xchg
test
add
lock
mov
mov
nop
adc
(bad)
bound
movs
pusha
add
pusha
fisub
div
and
mov
js
sbb
or
dec
xor
sbb
movs
xor
inc
sbb
test
mov
mov
xor
leave
add
mov
test
add
pop
in
xlat
mov
repz
xor
imul
in
xor
pop
out
jo
(bad)
(bad)
fcom
inc
dec
sub
retf
dec
push
mov
ins
or
das
mov
inc
cwde
inc
adc
(bad)
xor
push
retf
into
fs
nop
clc
cmp
xor
psrlw
push
test
sbb
jnp
ss
test
int3
fst
pop
daa
mov
mov
sar
add
hlt
adc
add
pop
sub
xor
or
jae
repz
push
pop
clc
les
test
movs
fst
dec
xchg
(bad)
sbb
and
movs
mov
into
shld
inc
pop
inc
xchg
rol
movs
add
and
xchg
xor
cmps
push
pop
cmc
xor
imul
shl
test
cmps
mov
movs
dec
jge
inc
call
and
outs
xor
jbe
inc
jmp
std
mov
sub
pop
data16
shl
adc
adc
mov
fmul
loope
outs
in
enter
cmps
dec
dec
lods
jp
cmp
hlt
cmps
sar
sub
mov
(bad)
icebp
in
es
pop
fist
xor
in
dec
adc
push
inc
mov
xor
jp
pushf
or
(bad)
mov
popf
in
sti
xchg
push
xchg
jmp
cmc
sub
cli
mov
sbb
lea
jo
fdiv
out
add
cmp
cld
ror
fcomi
mov
imul
cmp
movs
addr16
sub
and
and
mov
xor
push
inc
mov
call
mov
fs
mov
jecxz
jmp
sub
ret
jge
dec
pop
js
pop
pop
jae
lods
bound
and
mov
inc
mov
push
or
outs
jle
(bad)
sub
pushf
inc
pop
adc
inc
movs
ds
mov
cs
cwde
adc
rol
xchg
pop
jge
lock
imul
jb
adc
and
pop
cmps
(bad)
aam
ret
mov
add
or
loopne
xlat
in
adc
adc
cmp
xor
cmp
inc
fidiv
cld
adc
cs
rcl
xor
xchg
cli
inc
retf
xchg
jl
adc
scas
dec
or
xor
xchg
paddb
ds
adc
cdq
sub
fistp
in
mov
mov
add
mov
mov
inc
mov
std
scas
(bad)
scas
sbb
out
ja
rol
mov
ret
ror
aad
xor
call
es
xchg
pop
int
adc
push
sbb
cmps
dec
dec
scas
pop
xchg
imul
adc
inc
mov
test
fidiv
jns
pop
iret
dec
call
cmp
mov
add
cwde
sub
inc
pop
out
pop
(bad)
(bad)
mov
dec
cmp
inc
imul
jmp
mov
inc
leave
pop
adc
fcom
sti
and
(bad)
mov
cdq
ror
ficomp
stc
push
sbb
mov
into
cli
icebp
xchg
jne
aam
call
imul
aas
push
xor
cmp
pop
popf
fst
mov
adc
sbb
sbb
test
sub
or
push
sub
fisubr
mov
mov
mov
or
push
jbe
mov
pop
leave
not
and
and
std
shl
mov
push
pop
cmps
test
loope
in
shl
pop
jge
fs
fidiv
cs
gs
mov
fld
adc
mov
cmp
call
push
in
dec
add
sahf
sbb
cmp
xchg
dec
mov
daa
lds
xlat
pop
ins
imul
mov
es
sbb
inc
and
jmp
sbb
inc
or
xchg
mov
fild
ror
es
jmp
fld
adc
js
jne
mov
leave
or
adc
dec
sahf
xchg
xor
pop
push
sbb
test
sbb
sub
pop
je
bound
es
jmp
and
jmp
out
and
lods
ret
or
push
data16
sub
inc
lds
xor
and
mov
sbb
out
pop
pop
shl
(bad)
mov
ins
aaa
es
out
add
mov
mov
push
add
xlat
sub
adc
in
xchg
jmp
mov
retf
cmps
mov
xchg
out
mov
cmp
fsub
xchg
sbb
add
inc
inc
cmp
pushf
shl
ficom
pushf
stos
add
cmp
test
lods
push
mov
jne
shr
dec
aaa
sub
jbe
out
jl
inc
mov
pop
mov
pushf
out
retf
aam
push
stos
stos
push
rol
add
outs
jnp
aaa
cli
(bad)
cmc
outs
inc
cmp
sbb
jp
jo
fnstcw
neg
(bad)
shl
xchg
and
mov
lds
sbb
push
inc
adc
cmp
push
lds
ret
add
sbb
and
ror
(bad)
in
mov
jo
dec
push
sbb
out
or
push
imul
lahf
repz
cmp
imul
mov
xchg
or
inc
cmp
push
xchg
push
push
popa
mov
or
cmps
xor
call
ds
adc
sbb
cmps
fbld
xor
push
stos
pop
xchg
inc
(bad)
xlat
jp
ret
push
dec
xor
adc
ficom
ffree
aaa
and
inc
mov
imul
nop
ins
sbb
imul
xor
movs
sub
ror
cmp
jmp
arpl
out
or
(bad)
push
pop
sar
push
pop
sbb
mov
xabort
or
inc
mov
out
mov
sbb
xor
inc
cwde
std
push
push
and
sbb
cmps
and
sbb
and
mov
mov
jb
icebp
(bad)
adc
adc
and
aaa
das
mov
fdivp
mov
rcr
add
push
mov
rol
sbb
je
push
scas
sub
push
das
je
and
outs
cwde
adc
das
xor
sub
cmp
xchg
inc
add
mov
pop
push
push
rol
outs
jge
lods
fadd
inc
jo
popa
mov
xchg
cmp
jmp
mov
call
stc
cmp
jno
xchg
xchg
repnz
(bad)
out
dec
mov
in
push
xchg
cs
mov
ret
pop
push
enter
sbb
or
xchg
loope
add
sub
jb
jbe
in
jp
or
and
loope
adc
outs
mov
cld
jl
test
dec
pop
ins
fwait
dec
add
test
aad
call
add
movs
add
aaa
nop
push
adc
test
or
outs
sub
pop
or
cmp
pop
test
imul
jl
sbb
dec
xchg
adc
push
cmp
pop
cdq
in
and
jno
jno
movs
xor
out
int
xor
aaa
or
mov
pop
jmp
call
add
fs
sub
pop
mov
loope
int3
scas
in
mov
in
pop
mov
dec
add
stos
push
ja
mov
cdq
jge
loop
add
inc
rcr
adc
pop
xchg
cmps
adc
fadd
(bad)
xchg
xchg
cs
call
lock
gs
rcl
out
and
sub
popf
bound
adc
or
(bad)
xlat
adc
fs
xor
or
aaa
push
in
jnp
xor
mov
js
mov
sbb
pop
jl
adc
inc
aaa
mov
ins
shr
cmps
arpl
push
mov
outs
sbb
aam
pop
gs
out
push
push
mov
sub
jmp
inc
adc
mov
and
push
mov
xor
repz
push
mov
jge
push
test
jbe
sub
stc
(bad)
mov
adc
jbe
or
pop
or
jnp
jb
fbstp
mov
xor
inc
sub
jae
or
lock
push
test
pop
mov
mov
jmp
adc
add
gs
into
fdivrp
repnz
and
adc
or
mov
aad
mov
jp
add
mov
stos
cwde
pop
mov
gs
lods
fwait
push
mov
stos
sbb
stos
mov
mov
and
(bad)
gs
mov
popf
inc
cwde
mov
out
adc
js
xchg
arpl
stc
mov
mov
inc
dec
jecxz
push
or
xchg
push
cmp
and
xchg
in
mov
lock
jmp
add
cmp
push
fild
icebp
mov
pop
mov
xor
mov
xor
dec
aas
(bad)
je
addr16
and
scas
int
add
or
sbb
sub
mov
dec
clc
(bad)
retf
call
stc
mov
movs
pushf
adc
test
movs
js
iret
cmp
mov
add
(bad)
jbe
nop
dec
aaa
cdq
repnz
sar
xchg
in
dec
aad
push
mov
jns
inc
xlat
adc
ret
push
test
les
pop
lods
movs
xchg
or
cmp
popf
jge
sub
not
push
pop
outs
dec
mov
cmps
cmp
mov
fisubr
and
sbb
cmp
pusha
sbb
xor
sub
push
in
push
xlat
mov
lods
outs
mov
sub
ret
pop
lods
pop
xchg
pop
dec
mov
mov
fsub
jns
das
add
inc
fisttp
jle
cmp
dec
mov
add
cmc
and
jp
cmc
test
test
adc
push
cs
test
dec
cwde
mov
jno
lahf
or
mov
sbb
xor
addr16
adc
jmp
xor
or
test
ss
mov
out
fst
dec
push
dec
aas
imul
jecxz
add
mov
lock
sti
mov
inc
and
outs
adc
test
sub
jbe
jmp
fisttp
xchg
gs
jl
or
jns
shl
rcl
sbb
xor
jmp
and
adc
(bad)
cwde
mov
pop
sbb
js
adc
dec
add
or
mov
sub
jmp
or
and
retf
or
data16
les
sub
fst
push
inc
and
out
scas
lods
fcomp
push
adc
cs
das
loope
cld
ss
push
push
mov
add
add
imul
out
ficomp
fld
(bad)
outs
ins
xor
icebp
(bad)
icebp
rcr
jne
daa
sub
imul
sti
mov
dec
pop
clc
bound
je
jne
push
mov
adc
lods
int
movs
dec
mov
adc
arpl
sbb
sbb
cmp
jmp
movs
mov
and
and
mov
or
or
add
test
sbb
sbb
js
js
push
aam
add
cmps
out
rcr
sar
xlat
xchg
dec
int3
push
adc
sbb
pop
push
add
and
mov
xlat
(bad)
out
or
and
test
jecxz
nop
adc
stc
fdiv
test
fmul
or
addr16
jne
or
cmps
pop
fistp
mov
adc
sti
sbb
fdiv
pop
inc
cli
inc
xor
jno
fild
add
adc
sub
ins
dec
sbb
fiadd
cmp
call
fwait
cmp
jle
out
shl
test
sub
pusha
fist
out
xchg
sti
adc
test
and
mov
add
mov
jne
xchg
mov
sub
movs
jo
movs
lods
movs
setl
enter
loope
sub
ror
aad
outs
test
xor
and
mov
push
out
mov
pushf
sbb
fmul
xchg
int3
clc
mov
or
pop
jne
ret
ret
add
or
(bad)
sahf
int3
mov
inc
test
push
std
ss
sbb
call
and
test
and
cli
or
add
sbb
sub
popa
outs
jmp
(bad)
sbb
pop
add
push
jp
jnp
cmp
xor
and
pop
and
mov
dec
in
and
mov
retf
xchg
jp
ret
retf
inc
pop
add
pushf
fs
and
jecxz
mov
js
push
or
mov
inc
and
popf
inc
and
add
push
(bad)
dec
in
pop
mov
es
es
nop
inc
fld
test
mov
or
das
inc
jne
adc
mov
adc
and
cli
sahf
mov
cwde
scas
je
xor
sub
push
xchg
cmp
xchg
pop
xchg
mov
push
add
aad
push
jbe
sbb
pop
pop
xchg
inc
into
dec
sar
mov
and
xor
push
mov
push
adc
inc
push
data16
jnp
call
push
and
idiv
adc
dec
or
adc
xchg
fwait
out
cli
cdq
mov
cmp
mov
jns
dec
and
push
movs
xor
and
pushf
popf
retf
add
daa
and
mov
dec
xor
mov
and
pop
jge
pop
push
push
test
popa
in
outs
sti
push
xor
cmps
loope
bound
push
nop
retf
repnz
add
and
mov
add
test
sahf
ficom
or
sti
mov
(bad)
mov
inc
syscall
pop
mov
push
jmp
mov
add
push
leave
jle
jmp
add
test
cmp
retf
lods
push
inc
mov
je
fcmovbe
jmp
push
jo
stos
(bad)
adc
out
lds
shr
add
rol
push
jno
or
ja
cmps
shr
and
stos
or
jbe
and
mov
lods
cmp
je
add
ja
push
in
in
xchg
cmp
pusha
jo
jge
add
iret
fimul
dec
(bad)
loopne
(bad)
lock
aam
iret
xchg
mov
mov
sbb
sbb
gs
jae
or
fiadd
dec
cmc
fsub
sub
dec
test
stos
hlt
xchg
xchg
or
push
xchg
adc
or
fdiv
jb
mov
stos
inc
inc
dec
and
std
sbb
je
and
xor
xchg
sub
sbb
sbb
xor
adc
enter
mov
mov
movs
push
movs
imul
or
lahf
xor
dec
push
aam
test
add
add
sbb
lea
fs
mov
inc
add
and
cmc
mov
mov
lea
and
mov
cmps
emms
add
or
mov
test
xor
movs
push
cs
mov
mov
sbb
xor
add
data16
inc
mov
jns
mov
cmps
sbb
(bad)
dec
in
push
stos
daa
adc
add
dec
cmps
clc
jo
push
add
adc
cmp
or
xchg
leave
add
and
inc
mov
mov
or
jmp
jbe
lahf
outs
adc
add
jbe
mov
push
cwde
jae
cli
scas
loop
mov
daa
xchg
ret
dec
dec
fst
add
mov
scas
jp
clc
mov
mov
mov
sbb
push
les
adc
dec
ficomp
test
loope
dec
in
or
cmp
mov
xor
jo
or
nop
es
jle
push
sub
mov
inc
sub
scas
int
mov
sbb
mov
ja
and
leave
cmp
add
adc
sbb
sbb
push
xchg
das
jge
sbb
pop
cs
pop
push
sub
(bad)
inc
adc
pop
inc
jae
into
mov
mov
xor
xchg
add
int3
pop
loop
inc
inc
adc
inc
adc
lods
jne
push
les
or
clc
push
push
push
xchg
pop
dec
mov
push
xchg
or
adc
test
add
and
cmp
movs
or
xor
out
sub
or
adc
gs
inc
mov
rcl
out
jl
push
push
stc
add
fs
js
xchg
test
mov
daa
or
mov
xor
sub
or
call
and
pop
add
out
pop
cmc
push
mov
mov
fcomp
lea
and
(bad)
xor
sub
cs
push
sub
sbb
or
pop
mov
cmp
das
int
mov
enter
sub
jge
cmps
adc
sub
mov
js
and
jne
and
adc
inc
and
and
cwde
ret
xor
mov
out
xchg
repz
push
jle
into
rcl
and
pop
push
mov
adc
pop
fadd
jns
xchg
in
mov
(bad)
test
jle
or
addr16
sbb
add
sub
push
test
sub
sbb
into
mov
adc
dec
pop
dec
ja
leave
rcl
pslld
(bad)
pop
movs
push
hlt
inc
push
mov
retf
hlt
test
lahf
xchg
sub
sub
add
pop
jge
test
adc
ror
push
push
cmps
ds
and
hlt
into
adc
imul
inc
push
je
icebp
inc
int3
repz
leave
push
lods
push
ins
das
aam
in
les
pop
shl
paddsw
mov
lods
push
lea
imul
je
nop
cwde
jmp
(bad)
and
cmps
adc
test
in
or
rol
mov
cmps
shl
and
push
sub
pushf
add
jmp
mov
sub
rol
(bad)
mov
mov
xor
mov
push
mov
inc
jmp
jmp
sti
scas
or
dec
stos
dec
mov
jno
dec
in
ja
stos
pop
mov
lods
int3
out
push
or
mov
test
cwde
dec
fsub
fmul
push
and
xchg
mov
jmp
popf
xchg
sahf
retf
mov
push
mov
and
std
add
dec
pop
mov
sahf
in
cli
cmp
mov
arpl
xor
xor
rol
adc
or
fst
xchg
mov
pop
cwde
not
lods
test
je
sbb
and
mov
adc
aad
sti
inc
fnstcw
inc
les
rcr
cs
adc
fmul
(bad)
enter
aaa
or
das
inc
es
xor
jno
cmp
inc
cmps
jmp
sbb
jl
jbe
xchg
mov
inc
xor
mov
scas
sahf
test
int3
add
add
addr16
xchg
push
push
push
in
cmps
ds
and
std
sub
jp
xor
xlat
jecxz
fidivr
mov
int3
in
leave
sub
ss
jnp
(bad)
mov
and
mov
retf
je
pop
cmp
sub
xchg
lahf
mov
aaa
pop
sub
movs
cs
mov
jmp
and
push
push
xor
mov
movs
push
fnsave
dec
popa
ret
in
lods
popf
push
cmp
ret
adc
mov
push
adc
add
mov
rcl
arpl
mov
jle
add
ret
nop
fisttp
aaa
aad
pop
shr
test
pop
cwde
and
js
push
jae
(bad)
mov
dec
sub
push
mov
enter
cmp
inc
(bad)
cmc
mov
ret
inc
push
mov
mov
sbb
dec
fninit
mov
pop
test
push
movs
sub
xchg
mov
pop
sub
inc
jne
pop
arpl
test
or
inc
add
mov
dec
pop
inc
cmp
rol
idiv
xor
mov
fiadd
outs
mov
xor
or
push
call
dec
mov
mov
adc
in
pop
movs
cwde
or
dec
daa
pop
and
add
scas
imul
push
bound
(bad)
fstp
add
es
add
dec
fwait
mov
mov
mov
mov
inc
xor
push
nop
mov
scas
inc
jmp
es
xor
test
jmp
out
rcr
fdiv
cmp
cmps
jp
aas
nop
xchg
and
jne
aad
in
pop
loopne
in
sub
mov
pop
cmps
fstp
add
loopne
retf
call
mov
(bad)
pushf
ds
scas
fisub
rcl
jl
cmp
lahf
and
pop
mov
mov
retf
lods
mov
pop
pop
scas
outs
(bad)
cmp
dec
adc
mov
stos
mov
sub
xor
pop
push
sub
add
add
cmp
movs
mov
test
jge
pop
rcl
and
jo
stos
mov
xchg
in
xor
inc
repnz
fs
pusha
stc
lea
pop
and
cmp
mov
cmp
fnsave
shl
inc
sub
lahf
xchg
pop
mov
mov
push
push
cld
and
fadd
les
add
imul
adc
repnz
iret
clc
shr
in
movs
mov
and
retf
hlt
nop
mov
inc
or
add
cmps
mov
mov
add
mov
xchg
inc
or
or
push
push
and
(bad)
xchg
mov
cdq
adc
out
fs
mov
or
repnz
or
add
loopne
xor
pop
lahf
jae
dec
add
add
adc
inc
cdq
dec
dec
push
mov
repz
cs
jb
inc
adc
sub
inc
mov
(bad)
adc
add
add
sahf
dec
mov
ror
mov
aam
inc
and
cmps
pop
lds
sub
add
mov
and
inc
inc
mov
mov
(bad)
xchg
cwde
or
push
shl
test
pop
sub
fcomp
into
int3
sub
jl
adc
jp
jnp
xor
sub
xchg
lock
dec
or
adc
in
ins
jmp
xchg
rcr
mov
out
inc
jbe
lock
aaa
and
scas
popa
sbb
aam
imul
push
add
pop
sub
and
push
xor
pop
loope
hlt
imul
rcl
ror
shr
mov
jl
mov
sub
shr
xchg
cmp
mov
cmp
mov
imul
add
jnp
icebp
xor
mov
lock
stc
push
sti
cmps
imul
(bad)
(bad)
sti
in
push
std
xlat
repz
pop
xlat
fwait
cmp
out
jg
in
and
xchg
dec
or
sub
cmps
(bad)
sahf
into
and
mov
inc
mov
mov
retf
out
outs
xchg
pop
jmp
xchg
or
clc
lds
jnp
xor
loopne
pusha
mov
mov
pushf
pushf
cmps
arpl
inc
sbb
cdq
add
pop
imul
jb
mov
push
dec
lods
nop
xor
pop
and
and
pop
cld
iret
das
xor
dec
out
jl
outs
ins
(bad)
or
add
sbb
sahf
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
sub
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
ret
dec
inc
inc
push
js
in
pushf
shr
adc
dec
mov
psrad
fwait
and
ret
and
jl
mov
pop
es
loopne
push
adc
and
or
or
rcr
cdq
cwde
or
mov
sbb
out
gs
bound
int3
cld
std
push
xlat
aam
(bad)
fidivr
push
adc
fmul
fisttp
xchg
jge
inc
mov
mov
add
(bad)
stc
jmp
cmps
jle
pop
dec
cmps
clc
(bad)
popf
sub
scas
ret
mov
fist
mov
pop
stos
aad
adc
(bad)
dec
movaps
push
xchg
adc
int3
(bad)
cmp
xchg
dec
xor
lahf
les
cmp
or
mov
aaa
iret
loop
hlt
pop
and
xor
xchg
(bad)
sahf
pop
(bad)
out
mov
xchg
mov
std
sbb
(bad)
cmp
nop
fcomp
call
(bad)
dec
out
and
sbb
mov
pusha
xor
xor
fild
call
add
jl
jg
bound
(bad)
icebp
mov
push
mov
sbb
sub
sub
mov
sbb
jmp
js
lock
mov
(bad)
mov
dec
in
popa
adc
frstor
jne
push
jae
pop
cmps
jb
repnz
lds
scas
loope
adc
mov
adc
pop
mov
push
pop
xor
call
adc
mov
cli
push
mov
mov
out
loope
pop
retf
inc
outs
and
mov
dec
out
cmp
ret
dec
ror
jge
mov
lahf
xlat
lock
int3
je
or
in
mov
pcmpgtb
(bad)
lds
pop
mov
int
mov
push
setl
xor
outs
aaa
sbb
jnp
mov
jmp
cmp
mov
fs
rol
cmc
(bad)
sbb
pop
rol
mov
mov
xor
sbb
or
cmp
xchg
loop
(bad)
push
test
cld
pop
lock
(bad)
push
or
sbb
lock
sub
xchg
mov
ja
scas
(bad)
test
push
lahf
xchg
and
aas
push
sbb
sub
mov
repz
ins
lahf
push
add
fstp
mov
jmp
mov
ror
lods
scas
neg
retf
or
jecxz
mov
jecxz
sbb
add
cmps
sub
movs
and
add
dec
inc
scas
inc
pusha
add
add
add
add
or
or
add
or
add
add
add
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
xchg
dec
inc
inc
push
js
in
into
dec
push
ret
and
arpl
cmp
data16
xchg
dec
push
shl
jl
inc
adc
jp
aas
push
jecxz
jnp
jne
push
rcl
nop
sbb
add
jmp
js
cmps
enter
js
cmp
or
rcl
lock
cmp
adc
add
adc
and
enter
xor
(bad)
fsubr
icebp
sbb
lods
(bad)
xchg
outs
sub
into
clc
mov
in
int3
xchg
adc
adc
popa
fist
add
and
out
out
jbe
int
add
add
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
les
add
les
xchg
sub
sbb
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
mov
inc
inc
push
dec
dec
mov
or
xchg
mov
add
fs
(bad)
jmp
test
sbb
push
and
sub
jge
push
push
xchg
jns
sbb
sti
push
jne
jmp
inc
call
push
mov
into
inc
sub
pusha
jo
xchg
mov
xchg
inc
mov
(bad)
fimul
mov
call
loopne
cmp
mov
jno
repnz
jo
push
pusha
enter
or
repnz
dec
pusha
arpl
and
jno
nop
inc
push
js
push
lahf
mov
mov
stc
cmp
push
pop
(bad)
jo
sbb
pusha
(bad)
dec
add
iret
mov
sub
mov
int3
dec
mov
jp
out
mov
test
add
out
mov
scas
jmp
xchg
fnstcw
clc
mov
xor
ja
ud0
xor
into
lods
mov
hlt
ins
sub
loop
daa
shr
add
or
jmp
rcr
mov
(bad)
(bad)
lods
mov
xchg
mov
pop
xor
or
jne
jl
adc
ins
or
and
std
add
fwait
and
push
(bad)
mov
sbb
sti
ins
mov
mov
push
xor
pop
xor
je
sub
std
jnp
fstp
lea
repnz
mov
out
inc
aas
mov
push
js
sub
in
xchg
xor
add
mov
add
test
add
add
dec
inc
scas
inc
pusha
add
add
add
mov
inc
or
add
or
add
add
or
add
add
lods
popa
xchg
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
mov
js
(bad)
fdivr
mov
xchg
add
out
or
adc
clc
dec
sub
jmp
xchg
adc
jns
loopne
dec
ss
add
cmc
xor
lock
fs
xor
push
das
adc
call
inc
mov
xor
imul
ins
les
or
cmp
cmps
sbb
and
(bad)
mov
call
pop
sub
lahf
mov
hlt
in
pop
movhps
int
hlt
inc
mov
std
out
sub
or
int
add
pusha
add
out
out
mov
xchg
jb
add
add
dec
inc
scas
inc
pusha
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
push
inc
inc
push
js
dec
push
ins
push
fdivp
fidivr
dec
fisub
je
push
cmps
fwait
fwait
in
and
mov
xchg
inc
icebp
xchg
cmp
push
push
xchg
imul
sbb
sub
je
mov
pop
into
movs
dec
outs
jp
push
xchg
fsubr
sti
cli
cs
add
cmp
pushf
idiv
pop
inc
sar
mul
sti
jae
outs
push
daa
rcl
test
lods
pop
jno
data16
cmp
lods
mov
shl
jnp
jnp
pop
mov
or
test
mov
test
pop
std
and
test
mov
mov
dec
subps
fimul
push
icebp
es
and
adc
dec
jl
(bad)
cdq
test
sub
mov
ins
and
in
call
bound
mov
mov
jnp
or
sar
fcomip
push
mov
retf
inc
adc
aaa
inc
aaa
or
mov
mov
inc
and
cmp
jle
(bad)
arpl
lock
mov
xor
lock
xor
(bad)
pop
and
pop
pop
jne
dec
pop
(bad)
lds
mov
mov
xchg
into
adc
mov
fstp
dec
into
mov
xchg
ret
jbe
aaa
mov
stc
cmp
leave
ret
je
jnp
dec
mov
sub
sbb
in
bound
sbb
cmps
jg
jmp
push
or
movs
leave
rcl
adc
adc
jle
xchg
mov
movs
retf
std
sti
icebp
jmp
hlt
aad
xor
enter
add
xor
xchg
dec
mov
sub
fisttp
int
fnstsw
xor
shl
pop
js
jmp
mov
adc
mov
mov
mov
cmp
lods
ins
int
loope
add
push
cli
sbb
cmp
add
push
xchg
hlt
sub
jmp
pop
pusha
inc
mov
xor
push
xchg
cwde
cmp
mov
xchg
dec
cmp
fs
out
dec
and
adc
push
test
push
xlat
push
xor
xchg
fiadd
aas
das
push
jecxz
aam
push
mov
test
imul
jp
imul
retf
or
mov
jmp
sbb
jl
(bad)
jae
js
(bad)
push
add
or
or
push
xchg
ins
add
mov
xchg
sbb
cmps
lea
dec
fmul
pop
push
inc
stc
xchg
stos
mov
mov
(bad)
jnp
fidiv
loopne
(bad)
clc
icebp
mov
(bad)
cmps
xchg
sub
lock
imul
sbb
dec
cwde
cmp
popa
iret
pop
jge
in
jns
outs
sub
cmp
inc
loopne
lods
jne
push
cwde
sbb
sbb
pop
jnp
pop
out
leave
shl
fiadd
add
ret
sbb
fisubr
std
mov
retf
(bad)
inc
add
cwde
sub
hlt
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
sbb
add
add
add
add
add
add
or
add
add
jae
das
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
xchg
dec
inc
inc
push
js
ins
push
dec
dec
push
push
sbb
into
mov
sahf
and
adc
sub
and
adc
inc
inc
mov
movs
test
shl
pop
mov
mov
add
or
sbb
xor
cmp
sahf
repz
jno
int3
cmp
ret
mov
idiv
inc
adc
push
push
dec
int
cmps
mov
pushw
cmp
mov
fwait
ror
data16
and
sub
clc
add
xchg
jg
dec
jb
and
mov
mov
jecxz
adc
es
lods
xor
xor
mov
popa
ror
lods
sbb
mov
inc
imul
sbb
or
jge
adc
div
enter
or
push
xchg
push
outs
and
inc
dec
out
or
scas
popf
lock
sbb
mov
or
shl
shr
retf
hlt
cld
inc
sbb
sub
adc
arpl
jp
cmp
test
jge
jb
hlt
out
and
or
push
stos
popa
and
adc
adc
inc
mov
data16
or
jbe
lds
ins
jbe
stos
in
mov
fidiv
pop
out
js
pop
jae
adc
mov
(bad)
in
jns
test
stos
mov
sub
ss
jmp
and
inc
mov
icebp
and
xchg
js
cli
jp
pop
mov
jmp
and
or
(bad)
shl
jge
into
xor
mov
fisubr
(bad)
sbb
add
idiv
cmps
jb
push
jae
push
and
jp
xchg
add
add
push
nop
in
fild
mov
pop
cmp
jo
mov
sbb
xor
ss
outs
outs
push
aad
or
into
out
mov
adc
add
imul
xchg
mov
call
xchg
cmp
loopne
fist
cmp
sar
jle
xor
ins
dec
mov
inc
ins
inc
(bad)
sbb
cmp
inc
fimul
mov
popa
mov
stc
inc
adc
jg
sbb
sahf
out
cmc
push
dec
rcl
pop
out
and
mov
pop
push
xlat
(bad)
xchg
lds
lahf
mul
(bad)
mov
add
pop
add
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
xchg
enter
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
outs
dec
inc
inc
push
js
in
popf
pop
pop
adc
inc
fbld
add
arpl
xchg
sbb
push
xchg
cwde
push
push
sub
inc
adc
xor
popf
mov
sbb
mov
repnz
ret
fucomp
into
in
in
out
addr16
into
in
in
sahf
add
(bad)
sub
retf
test
jmp
jno
sub
xchg
aas
stos
(bad)
retf
mov
ret
add
stos
(bad)
xchg
dec
bound
sub
movs
or
in
mov
inc
aad
clc
push
or
xor
je
dec
out
xor
enter
mov
pusha
mov
rcr
xchg
sub
iret
mov
dec
clc
fmul
adc
mov
sbb
mov
(bad)
sub
dec
add
dec
mov
jg
push
(bad)
mov
pop
popa
xlat
imul
pop
(bad)
data16
xor
fmulp
iret
sub
pop
ss
(bad)
and
mov
rcr
xor
ror
stc
mov
sar
dec
mov
pop
neg
int
jl
pop
xchg
stos
(bad)
cld
gs
and
and
shl
out
jl
test
push
sbb
fmul
aas
shl
sub
movs
inc
(bad)
push
aad
push
jno
cmp
addr16
push
test
jmp
data16
mov
sbb
rol
push
push
sbb
popf
aaa
aas
fdivr
adc
jmp
iret
test
(bad)
add
cmp
rol
cmp
mov
xor
mov
xchg
pop
mov
stc
jmp
xor
rcr
imul
push
das
push
sub
mov
mov
repnz
movs
xor
mov
pop
ss
imul
and
test
ret
xchg
mov
push
pop
test
pop
add
call
retf
mov
inc
cmc
dec
aam
cmps
sbb
xor
aas
sbb
pop
and
adc
stos
xchg
das
cmp
pusha
pop
adc
jne
or
mov
jg
scas
inc
cli
push
ficom
(bad)
add
xchg
mov
xchg
dec
pop
push
(bad)
ja
iret
lahf
cwde
push
sbb
mov
gs
cwde
xor
inc
stos
push
cs
das
cmp
clc
adc
test
jg
lea
imul
(bad)
jmp
repnz
inc
stc
mov
push
pusha
and
in
and
iret
(bad)
fiadd
push
cld
jmp
dec
add
add
stc
mov
shl
xor
jmp
test
push
xor
and
jmp
cwde
push
and
add
push
mov
test
jg
lea
aad
adc
test
stc
mov
jp
cwde
jmp
cld
push
xor
pop
cld
push
adc
out
add
ret
stos
mov
push
push
xchg
test
dec
pop
or
fistp
push
int3
addr16
aaa
in
push
or
out
gs
cmp
xlat
in
ret
popa
outs
fld
cld
fidivr
clc
cmp
arpl
xchg
popf
rcl
and
push
mov
repz
xchg
aas
sub
test
cmp
retf
inc
pop
fcom
mov
dec
pusha
fdiv
sub
sbb
ins
jne
mov
test
mov
aaa
sahf
cmp
sbb
sub
ins
in
pop
imul
loop
or
je
repnz
std
mov
cwde
loope
mov
outs
inc
mov
sbb
fldenv
ret
pop
cmp
scas
popa
mov
sbb
jg
scas
cmps
loopne
fimul
cwde
mov
or
or
mov
jo
adc
loop
jbe
fimul
cmp
jno
dec
clc
(bad)
xlat
mov
xor
add
adc
(bad)
cmp
lahf
xor
mov
in
sub
dec
pop
cmp
cld
xor
outs
lahf
inc
sub
in
mov
jge
jo
mov
and
test
idiv
mov
popf
pop
pop
(bad)
xor
lods
add
inc
js
std
out
in
mov
ret
push
repnz
and
ret
adc
inc
gs
add
push
jge
sbb
(bad)
jp
ja
mov
add
sbb
cmps
adc
and
(bad)
shl
repz
fs
mov
iret
sbb
in
in
aad
add
stc
das
mov
push
pushf
mov
cmp
push
call
(bad)
cli
in
out
cmps
jl
add
jg
fld
scas
dec
jbe
sahf
loope
js
pop
sub
mov
ja
cmp
xchg
mov
mov
dec
retf
arpl
pusha
cmp
cmp
mov
fdivr
fbstp
out
push
add
lahf
out
mov
xchg
(bad)
push
mov
arpl
push
cmp
out
jno
push
(bad)
mov
lods
jmp
lock
bound
xlat
out
jge
pop
or
sub
xor
sbb
mov
repnz
dec
push
repnz
loopne
in
sti
cmp
lahf
dec
mov
pop
ror
scas
mov
cmp
and
call
jl
sti
in
stc
ja
in
xchg
sbb
lahf
fistp
out
jmp
retf
hlt
ss
ins
add
cmp
sub
mov
adc
cmp
cmps
loop
retf
outs
jmp
or
jae
ins
mov
loopne
ins
cmp
arpl
in
(bad)
dec
jle
or
xor
and
dec
xor
cmp
rol
imul
inc
xchg
adc
cmp
pop
jl
push
mov
cmp
retf
out
mov
mov
cld
mov
or
mov
fdivr
push
ds
jns
xchg
mov
repz
lock
aad
xchg
imul
or
cmps
pop
pusha
call
xchg
jecxz
sbb
scas
loop
ins
push
add
jmp
lea
xor
xchg
pop
fistp
sub
inc
xor
jbe
gs
cwde
rcr
pop
mov
cmp
repz
retf
fidivr
push
cld
push
jns
xlat
jp
rcr
cmp
js
and
cmp
add
dec
dec
loopne
sub
pop
nop
push
ds
repnz
and
jb
pop
ret
inc
inc
cmps
call
pop
(bad)
frstor
add
pop
xor
js
fild
pop
inc
xchg
mov
pop
mov
fstp
jno
inc
ins
push
inc
cli
retf
scas
bound
xchg
icebp
and
jns
or
jge
imul
mov
stos
push
loop
push
mov
(bad)
icebp
cmp
jge
icebp
jecxz
and
cdq
shl
xchg
push
mov
movs
test
call
mov
add
(bad)
mov
test
int3
stc
dec
mov
nop
jg
pop
ficom
mov
fiadd
inc
mov
test
test
xchg
iret
iret
aaa
mov
mov
je
mov
jge
cmps
cmc
mov
aas
scas
ins
inc
and
sub
lods
lahf
mov
clc
fnstsw
push
pop
ror
push
cmp
mov
and
popa
mov
outs
pop
(bad)
outs
jns
ss
sbb
fdivr
dec
popf
stc
repz
mov
sub
leave
add
rol
cmc
call
lods
mov
dec
in
push
aad
sti
pop
dec
ret
mov
cmp
adc
aam
inc
(bad)
jne
mov
adc
adc
xor
sub
sbb
cmp
jo
and
inc
imul
push
jo
xor
jno
jg
inc
fsubr
fcomp
mov
mov
xor
pop
in
outs
xchg
xor
and
or
movs
cmc
cmp
sub
in
in
icebp
in
movs
adc
cdq
in
inc
ds
clc
in
and
pop
pop
xrelease
imul
inc
cld
not
jno
repnz
pop
xor
mov
int3
(bad)
in
ss
lock
enter
xlat
sti
push
sub
dec
fstp
ja
cmp
xlat
push
std
pop
dec
inc
xchg
(bad)
or
loope
mov
or
mov
sbb
jle
mov
cmp
mov
adc
loope
stos
mov
and
loope
shr
mov
mov
and
jecxz
sbb
cmps
xchg
loope
pop
(bad)
push
(bad)
mov
add
(bad)
sahf
xchg
iret
ins
hlt
mov
je
js
dec
(bad)
leave
dec
addr16
inc
data16
inc
repz
mov
sti
ins
out
je
(bad)
pop
loope
mov
out
hlt
or
cmp
mov
xchg
aas
dec
aad
jg
jnp
int
mov
pusha
retf
cdq
call
mov
or
xchg
inc
(bad)
xor
xchg
mov
add
loope
outs
pop
mov
inc
loop
sbb
xchg
cmp
cld
xchg
mov
imul
dec
outs
sub
add
loope
out
add
mov
es
xor
stc
push
sti
xlat
mov
add
test
mov
shr
mov
pop
jle
push
out
cmp
xor
mov
aaa
ret
test
cwde
fdivr
xor
shr
xor
pop
test
inc
add
mov
mov
mov
push
mov
mov
jbe
mov
adc
push
ins
fwait
iret
daa
loopne
push
out
daa
(bad)
xchg
in
cmps
jge
fdiv
loope
ftst
sahf
sub
or
xor
loop
shl
sahf
and
loop
inc
shr
out
pop
stc
xchg
cmc
lods
mov
scas
scas
je
mov
xchg
add
mul
(bad)
arpl
jne
inc
xchg
xchg
and
inc
mov
and
xchg
add
aam
sub
mov
xor
loope
dec
gs
xchg
push
pop
(bad)
and
dec
cmp
idiv
ins
mov
lock
shl
cmp
sub
(bad)
lods
popf
ds
ins
cmp
pushw
pop
(bad)
loopne
shl
xchg
dec
test
and
or
push
adc
iret
scas
or
pop
push
pop
mov
xchg
add
cmp
and
and
stc
lods
xchg
cs
mov
inc
or
mov
neg
mov
mov
arpl
(bad)
xchg
(bad)
ja
(bad)
and
sti
inc
cmp
mov
dec
pushf
clc
xor
adc
xor
clc
icebp
pop
jge
in
inc
or
out
cmp
xchg
pop
fidiv
dec
xchg
jns
test
pop
push
shr
popa
add
sbb
(bad)
shr
es
aad
je
dec
pusha
mov
add
movs
xchg
cmp
(bad)
xchg
or
cmp
mov
ja
adc
sub
pop
test
test
pmullw
es
sbb
jns
pop
out
and
fild
push
int
imul
out
adc
mov
jo
add
cmp
and
rcr
shl
aaa
sar
mov
mov
cs
adc
sbb
jmp
ja
dec
push
add
aaa
ins
lods
xchg
jge
inc
and
repz
in
arpl
xor
es
dec
leave
jle
fstp
test
xchg
loope
or
and
cmp
arpl
add
sbb
and
sub
inc
jns
test
scas
inc
sbb
cmp
out
mov
int
into
jo
mov
sbb
out
push
shl
aaa
jl
cmps
mov
sbb
retf
cmp
sbb
sub
jmp
call
mov
stos
mov
jmp
lea
fild
(bad)
stos
sub
sub
jno
es
mov
xchg
or
or
scas
cmc
js
(bad)
jb
dec
enter
and
or
lea
pop
mov
pop
jae
and
dec
sbb
shr
inc
adc
mov
pop
outs
add
push
dec
xchg
jl
lods
hlt
in
jo
sub
sbb
xor
mov
adc
xchg
jns
(bad)
repz
push
adc
cmc
stc
xor
loope
jns
xchg
mov
rcr
nop
int3
js
sub
fucom
pop
or
enter
loopne
push
ret
fwait
(bad)
pop
gs
xor
pop
out
mov
or
inc
js
and
push
dec
ret
sub
sub
or
aaa
sbb
pop
aas
repnz
test
or
ss
mov
mov
and
add
jno
or
xchg
test
ins
pop
dec
dec
loopne
and
stos
cs
sub
push
rcr
mov
xchg
test
sahf
or
dec
int3
sub
jecxz
arpl
(bad)
test
push
jbe
ds
test
push
add
loopne
retf
xor
mov
pop
scas
xor
shr
jle
xor
or
shl
xchg
add
repnz
(bad)
xchg
jb
loop
repnz
sub
mov
retf
scas
clc
loop
je
fidiv
and
cmp
mov
fdiv
and
jae
jl
push
cmp
push
daa
push
nop
scas
mov
cli
xchg
adc
adc
clc
sub
sti
sar
mov
arpl
in
enter
mov
scas
adc
fcomp
inc
stc
shl
push
sub
sub
add
and
fsubr
or
cwde
sub
icebp
dec
push
iret
xor
lock
pop
mov
lods
lock
aaa
pop
icebp
dec
pusha
mov
inc
push
adc
inc
xor
frstor
and
out
gs
or
shl
ins
lds
jnp
adc
mov
test
adc
scas
mov
xchg
or
add
in
loopne
in
jns
scas
mov
movs
dec
dec
add
jne
cli
sahf
pop
cmp
call
jae
cmc
push
dec
jle
mov
lock
dec
repz
xor
inc
fistp
jl
das
frstor
enter
jo
mov
and
scas
and
repnz
ss
dec
rcr
retf
jp
cmp
in
test
stos
mov
jl
idiv
dec
dec
cmc
cmp
push
mov
mov
push
outs
fdivr
push
shr
or
xor
inc
dec
scas
aaa
scas
inc
out
inc
dec
imul
ficomp
fsub
paddusw
mov
or
mov
inc
add
retf
fbld
mov
pusha
mov
push
call
ret
lock
pop
ds
or
out
fdivr
xor
pop
(bad)
sub
lods
xchg
aas
psraw
xchg
and
iret
sar
outs
mov
xchg
jg
mov
mov
test
jg
aad
out
push
xchg
jae
out
js
lock
retf
ret
loopne
cld
add
add
leave
lock
retf
cdq
add
and
(bad)
pop
pop
inc
jo
in
das
std
jmp
lds
adc
jl
retf
add
imul
sub
mov
push
arpl
push
pop
call
jno
mov
mov
mov
lds
shr
leave
dec
adc
test
mov
xchg
(bad)
(bad)
(bad)
je
add
jecxz
pusha
sbb
std
(bad)
sar
packuswb
cdq
sub
lods
fadd
sub
fstp
dec
arpl
dec
shl
shl
setbe
out
ds
pop
add
or
pop
lahf
cmp
out
dec
dec
xor
aam
ins
cs
mov
xchg
mov
stos
dec
xor
mov
xor
addr16
jg
retf
push
fwait
ror
ins
xor
pop
scas
mov
pmovmskb
or
sbb
pop
cmps
cmp
imul
dec
popa
cmp
movs
dec
aas
xchg
mov
outs
iret
int
mov
test
dec
mov
leave
adc
test
lahf
cmp
xor
or
push
outs
movs
aad
inc
mov
lds
mov
cld
sbb
inc
jmp
mov
lahf
xchg
iret
dec
sar
stos
das
rcr
mov
jns
mov
int3
cwde
mov
add
inc
enter
es
mov
repnz
(bad)
das
movs
es
imul
retf
addr16
mov
out
mov
jge
xchg
aam
add
inc
dec
pusha
imul
cmp
fsubr
and
add
outs
jge
fiadd
pop
aaa
adc
push
in
repz
and
adc
or
mov
ja
dec
out
mov
jmp
cwde
rcl
jmp
test
xor
ret
ins
es
das
xchg
sbb
xchg
pop
push
dec
xor
loopne
adc
(bad)
lock
xchg
sbb
ss
cmp
mov
pop
mov
shl
clc
pop
retf
lods
mov
cs
mov
jnp
inc
xor
jecxz
gs
pop
loopne
pop
fwait
leave
out
sbb
cld
jae
xchg
shr
daa
test
and
xchg
iret
mov
pslld
aad
imul
stos
movs
repnz
test
push
xor
xchg
sbb
xchg
jmp
leave
retf
sbb
jg
shl
inc
dec
cli
cmp
xchg
inc
or
xor
mov
jno
int
inc
sub
call
paddb
mov
mov
out
jnp
(bad)
adc
jno
sbb
ror
mov
cmp
ss
out
add
mov
movs
loopne
lods
mov
push
cmp
push
loop
fisub
hlt
cmps
sbb
lock
sub
mov
fdivr
ror
stos
and
jne
loope
call
push
cmp
xor
xchg
rol
outs
cmps
aad
xchg
(bad)
cwde
shl
xor
cwde
adc
pushf
ret
call
sar
lea
aad
fst
dec
shl
adc
in
call
rcr
cmp
mov
pop
inc
fistp
cmc
xchg
fwait
shl
push
dec
add
mov
ja
enter
fmul
push
ffreep
lods
mov
dec
retf
mov
inc
iret
sar
xor
and
ficom
stc
aam
aas
pop
imul
repz
cmp
adc
lahf
out
sar
mov
cs
xor
daa
das
and
pop
inc
dec
stc
das
(bad)
or
and
outs
mov
mov
arpl
inc
cli
dec
fmul
jg
mov
jb
xor
lea
jmp
repz
add
and
ds
(bad)
fst
jo
loope
and
or
xchg
ja
sbb
(bad)
jl
fwait
and
shl
pop
inc
ds
fnstcw
sub
mov
(bad)
mov
js
or
gs
mov
pop
jae
push
cld
cmc
je
cld
repnz
repnz
jbe
test
cld
jle
movs
cld
cmp
cld
pop
push
(bad)
jmp
(bad)
repz
adc
lds
adc
div
movs
xor
cmp
cli
cmp
pop
xchg
enter
and
mov
cdq
inc
outs
mov
les
int3
js
jecxz
sbb
jae
test
jb
fnstcw
lds
add
dec
in
xor
lods
or
sub
mov
pop
push
cmp
and
aas
fisub
jg
(bad)
mov
mov
rcl
mov
or
aad
call
add
push
adc
mov
push
outs
push
outs
add
cmps
xchg
sbb
lahf
mov
or
lea
jp
scas
mov
push
add
xchg
push
jns
push
xchg
fs
out
mov
cmp
inc
push
pop
nop
mov
add
lds
repnz
lds
dec
imul
pushf
retf
arpl
loopne
lock
nop
pop
cmps
mov
je
inc
lods
cmp
fisubr
mov
sbb
xchg
push
mov
cwde
ss
jge
pop
rol
fwait
cmps
mov
cmp
mov
shl
(bad)
inc
out
dec
push
es
ficom
cld
adc
lods
retf
jne
adc
jge
push
cmp
jo
cmp
push
and
fadd
sbb
bound
cmp
out
dec
sbb
sbb
xchg
fld1
ds
out
jp
lock
in
sub
cld
cmp
jo
pop
(bad)
jmp
cwde
xor
mov
inc
jbe
cmp
cdq
or
dec
or
xchg
mov
or
add
cmps
or
shl
popa
out
dec
add
cli
xor
retf
std
jp
or
xchg
sbb
out
push
mov
adc
sbb
or
in
lahf
idiv
push
test
int3
out
inc
out
(bad)
pop
es
xchg
add
push
push
xor
push
or
sahf
mov
jb
fdivr
cmp
jg
xchg
lds
ror
mov
mov
xchg
push
pusha
movs
cld
mov
xchg
add
js
loopne
push
in
push
adc
in
add
jnp
cmp
cmp
add
mov
and
push
and
dec
xchg
gs
imul
loopne
stc
(bad)
sub
aaa
out
sbb
jb
mov
ja
(bad)
pop
xchg
adc
mov
dec
mov
or
push
mov
icebp
daa
imul
jmp
fnstsw
ss
mov
mov
test
xchg
dec
jmp
add
cmc
loopne
in
jno
fist
iret
xchg
cli
jecxz
int
repz
je
xchg
rol
sbb
das
dec
scas
test
pop
fstp
call
jmp
das
repnz
sub
retf
(bad)
int3
and
js
or
xchg
mov
push
xchg
mov
push
repz
aad
shl
pusha
add
push
in
stos
fs
xor
xor
cmp
or
cmp
adc
push
imul
push
test
push
push
iret
stos
push
add
adc
inc
retf
or
ror
call
js
jae
add
(bad)
out
jecxz
iret
mov
jecxz
pusha
push
(bad)
jg
(bad)
and
add
and
jo
bound
inc
mov
vphadddq
inc
cs
xor
test
retf
add
cmp
pop
pop
call
mov
add
lea
and
(bad)
jl
jae
shr
es
ins
adc
xor
(bad)
xchg
repnz
pop
and
jno
add
das
xor
push
or
xlat
sub
jns
sub
jmp
lea
push
in
xchg
adc
rcr
cdq
and
movs
(bad)
loope
rcl
test
js
jecxz
shr
dec
xor
jnp
lods
sahf
sbb
dec
sub
or
clc
mov
ss
sub
push
test
xor
sar
add
dec
ret
(bad)
push
lods
or
add
pop
xchg
lahf
test
add
cmc
jo
xor
jno
xor
pop
push
xchg
icebp
jp
mov
hlt
ds
test
aad
rcl
pushf
or
call
or
lea
mov
jns
out
adc
rol
loopne
ret
(bad)
fdivr
dec
js
popa
popa
push
test
out
jg
sbb
push
iret
push
adc
xchg
mov
scas
ins
jns
test
idiv
pusha
loope
dec
or
sub
push
out
pop
rol
pop
mov
lahf
xlat
dec
ins
sbb
das
in
retf
push
pop
arpl
xchg
sbb
jmp
cs
cmp
pop
lock
or
push
push
jecxz
xor
inc
arpl
addr16
rcl
mov
out
jo
pop
das
jno
into
loope
out
fdivr
mov
push
push
neg
xchg
aas
mov
test
das
xchg
repnz
jns
ret
xchg
stc
sti
jmp
(bad)
fdivr
adc
(bad)
cdq
mov
gs
into
lds
inc
adc
(bad)
std
pop
outs
pusha
int3
cs
mov
ret
jg
int3
mov
icebp
lds
(bad)
out
imul
ins
push
xor
mov
scas
jp
dec
dec
loopne
mov
jecxz
inc
outs
fild
adc
xchg
mov
mov
sar
and
adc
shl
outs
xchg
lds
dec
xor
loopne
add
sbb
rcl
add
js
iret
pop
pop
adc
push
je
imul
pop
adc
(bad)
ds
aas
mov
xchg
jle
push
cmp
adc
xchg
mov
mov
ffreep
push
xlat
add
mov
xchg
loopne
test
out
mov
out
ja
or
ins
(bad)
aaa
adc
enter
jnp
popa
sbb
in
arpl
lock
pushf
jge
aas
mov
jle
xor
scas
or
aaa
sub
or
scas
cmp
mov
pop
mov
iret
xchg
inc
cmp
pop
push
add
and
imul
(bad)
fst
jg
and
aad
pushf
stos
(bad)
mov
jge
out
setg
mov
jg
into
fld
mov
pop
ins
(bad)
mov
or
ss
out
daa
push
icebp
ret
mov
mov
cmp
imul
fxch
add
xor
xchg
push
push
push
or
in
dec
push
dec
das
push
inc
jb
ret
nop
sbb
xlat
rol
mov
outs
ficomp
aad
icebp
mul
mov
xor
mov
ins
js
push
xor
rol
adc
jns
sub
push
imul
jge
int
jge
rcr
cmps
aad
fdivr
push
js
xor
into
pop
into
sahf
stos
xor
mov
fstp
jbe
jo
xor
dec
mov
out
adc
add
ja
adc
mov
out
xchg
pop
cmps
adc
sbb
xchg
push
inc
ret
sbb
cdq
mov
mov
bnd
jb
push
mov
mov
hlt
sbb
pop
(bad)
cmp
inc
xchg
mov
gs
push
retf
outs
push
push
movs
in
retf
adc
pop
scas
aad
fisub
inc
fwait
dec
repnz
retf
xor
cmps
cmp
clc
mov
repz
mov
dec
mov
ret
mov
fs
(bad)
mov
jo
push
scas
jns
fdiv
cmp
lock
movs
retf
xchg
mov
cmp
in
cmp
loop
les
pop
popf
sub
loop
fwait
sbb
in
shr
daa
mov
cld
movs
add
mov
stos
or
sbb
pushf
push
les
and
mov
ja
jle
adc
pop
stos
clc
dec
das
dec
sar
inc
pop
jg
lea
mov
out
lea
int
push
jg
push
dec
clc
or
mov
xor
out
call
(bad)
(bad)
ss
xchg
lea
lahf
shl
or
fisub
lock
fstp
xor
ret
fbstp
jg
repz
rcl
inc
xchg
in
cmp
aaa
sbb
fs
sub
in
or
ret
aam
cmc
popa
nop
push
and
shl
sub
sbb
push
icebp
dec
pusha
xor
sbb
jg
xor
scas
cdq
ret
mov
ss
jnp
dec
and
jp
or
xor
dec
jbe
mov
das
das
jg
nop
fadd
js
inc
ja
es
fwait
cwde
inc
inc
je
stos
imul
and
xor
push
push
outs
jno
mov
out
jmp
je
sub
mov
sahf
jo
fld
jg
nop
cmp
ja
ins
pop
jbe
icebp
xchg
pop
sar
pop
mov
clc
ins
and
sub
mov
jns
retf
adc
dec
cwde
cmp
pop
add
aas
inc
jl
repnz
cmp
xor
stc
pop
sbb
jg
adc
fidivr
loop
and
push
push
sbb
jno
inc
pop
into
in
loopne
add
out
cmp
xchg
sub
xchg
das
in
ss
lods
add
xchg
movs
dec
in
xor
pop
xchg
outs
test
xor
push
xor
pushf
xchg
lock
lods
out
cmps
add
ins
ret
cmp
adc
pop
cmps
jbe
add
cli
jl
popf
xor
sti
or
xlat
test
mov
aad
pop
outs
outs
xor
and
adc
fcmovb
mov
pop
sub
sbb
adc
cmp
jg
sbb
pop
mov
out
jp
cmp
fmul
aas
(bad)
mov
inc
dec
mov
cmp
stc
in
pop
mov
and
xchg
retf
retf
aaa
ucomiss
pop
jae
jno
and
mov
mov
nop
sub
xor
mov
cld
adc
scas
mov
jne
xor
push
jnp
pop
jge
(bad)
sub
out
and
scas
test
xchg
mov
adc
stos
xchg
pop
add
stc
lahf
mov
test
or
cmp
sbb
das
out
pop
fistp
cmp
cwde
rcl
(bad)
outs
(bad)
mov
mov
pop
cwde
xlat
outs
sbb
adc
imul
(bad)
and
out
in
leave
dec
and
cdq
xor
enter
out
std
sahf
mov
or
xchg
es
mov
jne
sahf
mov
inc
jle
retf
stc
cmps
fst
mov
rol
or
mov
popf
dec
dec
je
sbb
js
pop
dec
cdq
fsubr
out
popa
dec
sahf
ins
jns
aam
or
repz
xchg
out
push
js
pop
fcom
push
(bad)
loope
push
push
(bad)
adc
or
aad
cmp
fisub
or
(bad)
cmps
sub
ds
iret
rcr
aas
push
fimul
outs
jnp
lea
jp
pushw
popa
inc
xor
inc
jmp
push
cmp
jne
cmps
dec
in
mov
xchg
out
xor
les
ret
sbb
out
xchg
lock
push
packsswb
adc
sub
add
jg
jno
jmp
push
jle
dec
stc
jle
idiv
mov
aam
bound
paddusw
or
add
mov
(bad)
loop
push
cmps
mov
cmp
xor
jnp
mov
mov
fist
cld
cld
call
cwde
sub
xchg
(bad)
out
pop
retf
pop
add
mov
into
inc
fidiv
sub
fstp
adc
fsubp
sbb
sub
sahf
dec
(bad)
out
out
cmps
mov
mov
cmp
xor
ins
cmps
sub
fimul
push
loopne
or
sbb
inc
add
test
mov
iret
xchg
(bad)
sbb
lods
es
cmc
xor
test
xor
jnp
xor
mov
in
jno
xor
fs
pusha
lea
sbb
add
retf
leave
aaa
xor
mov
aaa
and
in
inc
mov
pop
push
dec
xor
sbb
push
pop
leave
into
(bad)
loop
push
push
(bad)
jecxz
outs
adc
inc
adc
out
jns
fnstsw
mov
xchg
cmps
push
lahf
(bad)
xchg
sub
add
das
enter
pop
pop
pop
and
mov
mov
ss
pop
les
and
test
push
call
mov
add
retf
xchg
fsub
cs
mov
dec
movs
pop
adc
repnz
aad
movs
adc
jne
imul
dec
stc
mov
(bad)
add
pop
dec
cmc
cmp
inc
sub
pop
push
and
xchg
jne
jg
adc
adc
push
pusha
sub
pop
fwait
test
movs
mov
add
test
stc
mov
(bad)
add
sar
push
scas
dec
add
(bad)
test
test
push
xchg
aas
stos
inc
sbb
scas
push
xchg
aas
sub
pop
push
arpl
shl
imul
lods
inc
mov
push
lea
test
inc
mov
les
sub
pop
adc
icebp
cmps
and
inc
add
test
mov
push
and
add
cwde
xchg
sub
test
xor
lahf
push
in
jmp
imul
scas
mov
pop
in
xchg
xchg
xor
hlt
push
gs
xchg
in
push
adc
pop
jns
enter
ja
stos
(bad)
push
hlt
pusha
push
mov
and
inc
movs
xor
leave
mov
cmp
and
(bad)
mov
aad
jp
push
hlt
mov
xor
push
xchg
and
arpl
push
out
enter
test
cwde
data16
inc
dec
dec
lahf
push
xor
xchg
(bad)
pop
jns
sbb
mov
aaa
cmp
xchg
pop
ficomp
or
sbb
add
test
inc
daa
cmp
imul
das
inc
pop
inc
or
repnz
(bad)
mov
mov
inc
(bad)
pop
jbe
push
dec
push
adc
xchg
sub
fiadd
rcl
sub
jmp
aam
clc
cmp
and
mov
iret
mov
test
xor
mov
lods
enter
mov
xchg
dec
mov
lods
(bad)
aaa
mov
pop
mov
pop
push
pusha
dec
std
or
and
pop
push
push
gs
movs
mov
hlt
popf
das
add
mov
pop
mov
imul
xlat
push
mov
in
stos
(bad)
cld
push
mov
mov
mov
inc
cdq
xchg
aas
sub
mov
adc
adc
sub
jmp
xchg
mov
mov
hlt
rcl
sub
lea
adc
dec
inc
cmp
add
or
add
test
add
stc
mov
cmp
adc
xor
rcl
mov
retf
add
aad
(bad)
les
ror
nop
repnz
inc
stc
mov
pop
dec
xor
push
xchg
and
push
(bad)
test
jg
lea
add
inc
push
scas
imul
dec
inc
dec
inc
scas
inc
pusha
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
mov
add
push
bound
inc
add
add
add
mov
add
or
pop
jae
add
adc
add
adc
add
add
dec
mov
xchg
mov
sbb
adc
jg
outs
xor
js
(bad)
test
lods
add
inc
xor
(bad)
and
inc
adc
inc
adc
pop
nop
mov
add
fdivrp
lds
push
xchg
in
into
cmps
daa
iret
jno
xchg
push
out
sub
in
fcom
pop
je
push
ret
lea
jns
push
arpl
retf
mov
test
jmp
adc
add
loop
jb
xchg
popa
jb
and
jne
mov
test
in
or
inc
mov
stos
and
mov
push
xor
jb
xor
push
(bad)
and
fiadd
push
stos
mov
mov
rcl
imul
ret
push
pop
or
mov
or
jbe
mov
inc
jp
cmp
ins
adc
aaa
fcomi
clc
aaa
xchg
fld
mov
mov
jne
sub
fs
(bad)
adc
pusha
sub
push
sub
lods
mul
popa
add
push
dec
mov
adc
cwde
cs
(bad)
push
sub
test
dec
mov
mov
gs
push
mov
dec
repnz
inc
iret
sub
mov
aaa
pop
push
adc
jno
push
ds
xchg
mov
jno
into
sub
dec
clc
adc
out
lock
mov
push
jo
in
movs
and
cmp
ret
imul
push
loope
and
adc
leave
in
push
sub
add
movs
in
(bad)
xor
arpl
inc
pop
retf
inc
pop
xor
push
xlat
or
shr
shl
lods
(bad)
inc
btr
mov
mov
(bad)
jno
lea
dec
or
into
mov
mov
xor
xchg
ja
out
jnp
xlat
add
push
sar
pop
or
pop
mov
add
sub
or
clc
ds
mov
int
repz
leave
and
jg
jmp
jmp
dec
inc
sahf
and
jb
out
and
leave
xchg
shr
sar
xlat
fcomp
in
outs
or
cmp
ficom
out
cmp
(bad)
add
and
mov
outs
adc
jge
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
or
or
add
or
add
add
add
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
xchg
dec
inc
inc
push
js
in
push
mov
shl
std
cld
or
xlat
mov
adc
jbe
mov
mov
je
je
gs
xor
and
add
mov
dec
in
retf
fwait
retf
stos
pop
and
xor
loop
(bad)
jmp
bound
jg
mov
leave
retf
(bad)
in
xchg
xor
outs
dec
ficomp
iret
enter
fidivr
repnz
pop
neg
adc
in
jge
icebp
jns
cmp
cmp
out
(bad)
push
add
cmc
add
dec
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
or
or
add
or
add
add
or
add
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
xchg
dec
inc
inc
push
js
bound
out
aas
je
xor
pop
pusha
cmps
and
ror
mov
retf
mov
sbb
jl
in
stc
mov
or
outs
sub
jmp
das
pop
mov
push
jmp
ret
clc
jecxz
xchg
(bad)
and
mov
push
(bad)
(bad)
les
pop
adc
push
mov
push
scas
hlt
stc
mov
out
cmp
aam
nop
xchg
inc
sub
pop
push
cli
cmc
(bad)
jae
jae
jno
adc
add
loopne
bound
push
cmp
add
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
or
add
add
jg
rol
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
or
inc
push
js
bound
packsswb
pusha
test
loop
and
add
add
outs
jp
arpl
das
push
and
lock
cmp
inc
mov
xor
or
jge
push
add
add
dec
jae
push
sub
inc
cmp
das
rol
lock
(bad)
nop
aas
jg
mov
int3
ret
inc
pop
dec
pusha
retf
xchg
pop
(bad)
(bad)
(bad)
inc
or
stc
mov
inc
fiadd
loop
sub
fmulp
and
enter
test
out
adc
clc
icebp
not
dec
sbb
repnz
int3
sub
mov
in
cmp
daa
mov
inc
jp
int3
repnz
das
cmp
loope
cmc
das
sbb
mov
xchg
in
aas
(bad)
call
mov
xchg
mov
scas
inc
adc
aam
add
gs
and
add
add
jbe
mov
push
dec
inc
dec
inc
scas
inc
pusha
add
add
add
add
or
or
add
or
add
add
add
lahf
or
add
add
scas
pop
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
les
inc
push
js
in
fmul
push
xor
add
outs
dec
add
movs
pop
in
das
pop
inc
mov
inc
inc
pop
pusha
and
mov
loope
mov
push
push
adc
idiv
loope
lods
test
push
aad
mov
shr
adc
js
iret
pusha
mov
or
dec
push
add
gs
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jnp
imul
mov
mov
lahf
push
cs
add
jae
call
inc
fs
out
and
(bad)
mov
adc
clc
test
(bad)
sbb
aas
sub
std
imul
in
dec
add
jmp
popf
call
add
dec
inc
scas
inc
pusha
add
add
add
mov
inc
or
add
or
add
add
add
add
add
add
loop
add
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
outs
dec
inc
inc
push
js
dec
dec
xor
test
mov
jge
bound
mov
test
adc
pop
push
or
imul
mov
cli
mov
je
dec
jno
lahf
movs
repz
jmp
jnp
xor
sahf
cdq
adc
out
jmp
into
lods
mov
repnz
xchg
aas
mov
adc
pop
out
mov
add
js
push
cmc
in
std
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
pop
jno
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jae
inc
inc
push
js
mov
imul
(bad)
push
mov
out
ret
pop
mov
mov
sub
add
push
dec
stos
push
lock
test
push
movs
push
stos
or
add
add
push
push
fwait
xchg
inc
push
dec
jmp
jbe
mov
jmp
iret
out
int3
pop
into
cdq
popf
fstp
pop
jmp
out
mov
cmp
sbb
xchg
iret
jmp
aad
mov
push
enter
lods
mov
cmc
sub
xchg
cli
cld
push
add
or
icebp
int3
sub
ret
rcl
jmp
push
retf
xchg
inc
pop
cmps
out
or
pop
aaa
pusha
ins
lods
sbb
outs
enter
(bad)
fs
loope
push
adc
add
popa
cmp
int
pusha
cmp
jnp
dec
clc
cmp
jecxz
loope
sbb
push
repz
idiv
sub
xor
add
neg
mov
sub
sub
sub
inc
xor
(bad)
pop
xor
gs
cwde
mov
adc
mov
xchg
dec
cmc
mov
(bad)
scas
(bad)
mov
in
repz
cmp
fimul
lds
movs
mov
dec
push
xchg
sub
fist
repz
inc
inc
pusha
add
test
fwait
jmp
pop
sahf
sbb
dec
jge
mov
mov
mov
sahf
jge
stc
mov
push
inc
mov
lea
pop
sar
push
test
add
mov
mov
and
rcl
cmc
pop
div
push
or
mov
aaa
mov
and
pusha
ret
or
cwde
jle
adc
xchg
ss
arpl
sub
lock
aam
fidivr
cmp
shl
aam
jl
ret
sahf
out
in
pop
mov
cmc
ret
push
add
mov
inc
xchg
in
xchg
lds
aas
mov
aas
lds
ja
or
or
and
sbb
fstp
mov
int
fmul
pushf
lods
shl
push
cli
adc
adc
gs
mov
hlt
cmp
bound
xlat
xor
dec
fcmovu
inc
rcl
xchg
cmp
mov
xchg
out
fimul
punpckhdq
mov
mov
popf
ret
dec
cld
lods
mov
push
enter
popa
jmp
into
and
jmp
inc
cmc
pop
jecxz
xchg
xchg
cmc
pop
add
inc
stc
sbb
aad
mov
mov
arpl
loopne
mov
sahf
mov
mov
int
mov
xor
call
std
loopne
inc
jne
ds
fild
stc
jp
scas
imul
sbb
ss
addr16
dec
lea
cld
push
xlat
(bad)
sub
ins
jp
inc
adc
fisttp
pop
test
pop
scas
movs
dec
(bad)
test
ror
aam
mov
mov
ins
ins
outs
fistp
movs
fstp
pusha
sti
cmp
pop
pop
lahf
bound
mov
xchg
add
mov
cwde
(bad)
inc
cmp
and
das
rcl
push
ja
jmp
sub
scas
dec
lahf
adc
cmp
mov
shl
fst
xchg
adc
sbb
std
idiv
lods
or
test
and
fsub
mov
xchg
fild
sti
mov
pushf
mov
sub
int
push
mov
and
popa
mov
outs
call
mov
jecxz
pop
jbe
(bad)
mov
push
or
adc
int3
cmp
jbe
and
or
mov
cli
mov
mov
cs
adc
iret
inc
push
mov
xor
push
aad
pushf
pusha
inc
add
adc
rol
mov
mov
sub
pop
jmp
pop
into
fnsave
fcmovb
push
push
neg
add
push
sub
and
jo
cmp
inc
popa
inc
push
mov
adc
mov
cmp
lods
and
jmp
scas
scas
scas
add
lock
jg
jae
ret
mov
sub
popa
cmp
xchg
xor
leave
or
push
pop
int3
rcr
out
cmp
and
jmp
xor
(bad)
or
(bad)
icebp
loop
out
mov
cmp
adc
add
pop
push
cmps
movs
pop
pop
movups
retf
retf
sub
push
mov
retf
sahf
jg
sbb
aad
push
push
into
cmp
hlt
dec
or
jne
inc
pop
aad
sub
sbb
sbb
xchg
js
mov
and
jle
call
addr16
sti
and
pop
xor
pop
jmp
outs
ins
push
xchg
loop
xor
rcr
mov
fnsave
loop
adc
adc
dec
pop
hlt
jne
mov
jp
xor
popa
rol
cmps
(bad)
mov
out
jns
or
je
addr16
aas
sbb
es
icebp
clc
push
xchg
lahf
out
nop
imul
mov
pop
stos
out
fldcw
cmps
cmps
xchg
jp
xor
or
jmp
mov
xchg
imul
push
mov
leave
loopne
pop
cwde
ret
dec
inc
mov
stc
ret
mov
sti
jle
pop
push
test
push
and
repz
scas
test
and
(bad)
hlt
iret
jp
movs
or
jo
call
in
mov
lea
mov
add
sti
and
jae
sar
pop
mov
jns
mov
shl
xor
das
push
add
in
inc
xchg
jbe
ja
mov
or
mov
and
sar
popf
dec
mov
xchg
cld
jecxz
xor
push
pop
mov
jae
stos
ret
add
xchg
cmp
jns
popa
addr16
jne
xor
aaa
adc
hlt
pop
adc
loopne
xchg
cmp
xchg
mov
push
std
loop
mov
add
xchg
(bad)
jmp
xchg
dec
int3
cmp
daa
xchg
(bad)
xchg
xor
stc
aas
cmp
xlat
das
cdq
shl
jb
jge
frstor
sbb
es
push
jno
adc
sti
mov
sub
mov
or
int3
jns
jge
or
(bad)
push
std
mov
adc
dec
ss
add
shl
pop
and
dec
iret
mov
mov
mov
add
sub
hlt
or
jge
xor
aaa
jg
adc
(bad)
out
outs
gs
dec
shr
pusha
dec
jl
jno
mov
pop
mov
mov
or
mov
movs
push
cmp
cdq
dec
ficomp
or
push
xchg
sbb
or
stos
or
aad
in
scas
inc
dec
inc
aas
rcr
cmp
dec
pop
neg
xchg
cmp
hlt
rcl
in
in
loope
adc
jmp
(bad)
cdq
pop
mov
mov
outs
dec
repnz
outs
adc
fld
pop
inc
mov
ret
data16
xchg
cmp
js
gs
gs
repnz
jecxz
pop
fs
lds
mov
jle
cmp
mov
mov
shl
(bad)
inc
cmps
cdq
add
stos
mov
nop
xor
fist
mov
inc
mov
sub
and
fsub
inc
mov
push
(bad)
sub
sub
popf
aam
shr
imul
adc
xor
mov
jmp
xchg
mov
or
mov
icebp
movs
movs
daa
pop
dec
and
cmp
lods
aad
and
push
pop
call
sub
iret
xchg
or
cmp
mov
jno
retf
sub
sub
dec
cdq
out
dec
aas
and
stc
cmp
mov
mov
jecxz
push
pop
or
push
popf
adc
lahf
fldenv
jns
inc
dec
int3
sar
mov
(bad)
inc
sti
in
hlt
mov
inc
pop
in
sbb
test
sub
es
jbe
push
int
daa
dec
(bad)
sub
pop
fsubr
aam
fs
in
(bad)
nop
push
adc
iret
popf
lods
test
jmp
jg
push
add
fmul
rcl
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
push
inc
inc
push
js
movs
push
dec
push
fidiv
xchg
int
dec
inc
dec
test
pop
or
or
inc
or
push
lock
inc
shl
imul
push
adc
mov
mov
push
rcr
pop
sub
aam
cld
ss
in
lahf
repz
dec
mov
sbb
jge
mov
popf
cdq
(bad)
or
sar
enter
sti
loop
cmp
or
dec
int
add
or
mov
pop
addr16
dec
jo
push
out
add
mov
test
mov
cmp
push
xchg
pop
jns
fdiv
adc
xor
(bad)
fstp
add
rcr
(bad)
jno
out
stc
imul
adc
popf
stos
mov
adc
inc
enter
sub
mov
push
and
cs
jecxz
cmps
popa
in
jmp
ins
push
pop
imul
mov
xchg
xchg
idiv
mov
jno
lock
jg
inc
mov
aam
(bad)
bound
sub
inc
(bad)
or
push
push
push
in
add
xor
sub
pusha
sti
add
pop
cwde
mov
in
add
mov
or
std
(bad)
mov
adc
neg
loopne
stos
push
(bad)
and
sbb
pop
rcl
test
mov
popa
dec
add
jmp
repnz
lods
and
or
push
in
test
sahf
js
and
add
in
sbb
mov
pop
ins
and
push
neg
add
inc
rcr
sbb
mov
movs
mov
push
repnz
(bad)
mov
adc
fsub
add
add
dec
adc
pop
xor
fst
lds
xchg
dec
push
mov
shr
imul
add
(bad)
xor
ror
mov
dec
push
jo
xor
pop
ja
cdq
push
mov
imul
mov
outs
(bad)
sub
mov
push
cmp
or
leave
fiadd
pop
test
int3
shl
adc
sub
pop
pop
adc
call
push
sbb
out
jno
cs
out
stos
sbb
inc
daa
mov
es
and
(bad)
sbb
xor
adc
add
add
dec
inc
scas
inc
pusha
or
sbb
add
add
add
add
add
add
or
add
add
repz
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jns
inc
inc
push
js
je
dec
dec
push
push
adc
mov
out
xor
push
push
inc
add
mov
es
mov
jo
push
dec
in
mov
and
inc
cmp
aaa
xchg
mov
sub
or
sbb
data16
mov
(bad)
mov
shl
jnp
stc
jle
fdiv
adc
mov
test
cmp
(bad)
smsw
add
aas
jle
mov
adc
scas
shl
pop
cmp
mov
jno
adc
jbe
adc
cmps
es
push
in
push
jmp
lahf
and
in
add
bound
in
das
sub
lahf
test
add
sub
retf
mov
cmp
or
sbb
rol
movs
cwde
mov
pop
xchg
neg
sbb
jne
xor
inc
mov
ret
push
das
shl
clc
out
mov
cmp
ror
aas
jns
push
inc
outs
mov
fld
loop
std
cli
jmp
out
jae
(bad)
mov
xor
jns
or
mov
xor
aas
inc
sub
stos
mov
mov
je
add
xchg
mov
cmp
jp
dec
inc
jge
mov
cmps
(bad)
pushf
std
sub
jno
int3
inc
scas
pop
pop
or
or
add
mov
lahf
test
pop
mov
pusha
sbb
dec
scas
pop
pusha
or
inc
adc
int
in
inc
push
ja
mov
repz
jl
push
in
pop
into
push
loope
or
xchg
jns
les
push
dec
(bad)
std
cmp
jns
shl
retf
inc
rcl
dec
inc
xor
je
push
enter
sahf
sbb
lods
mov
mov
add
cmp
mov
test
jp
cmps
mov
sbb
je
ss
inc
inc
mov
or
outs
fcomp
ins
popa
mov
out
jecxz
(bad)
xor
(bad)
pop
cli
push
aaa
aam
out
mov
call
push
scas
xchg
jns
cdq
xchg
retf
adc
es
mov
(bad)
in
loop
add
out
push
add
push
cmc
sbb
lds
cmps
fistp
fucomip
cmps
mov
imul
mov
repnz
rol
repz
fist
cmp
pop
clc
sub
sbb
pop
xor
add
add
dec
inc
scas
inc
pusha
add
push
dec
inc
or
add
or
add
add
add
add
or
add
add
das
pushf
mov
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
xchg
dec
inc
inc
push
js
xchg
push
dec
das
add
cmp
pop
aad
movs
lea
xchg
and
sub
jbe
daa
mov
push
add
adc
inc
ins
cmp
adc
inc
inc
mov
addr16
fstp
jno
xchg
stc
mov
int3
std
out
in
out
push
add
mov
jl
mov
pop
cmp
addr16
sub
xchg
sub
fcmovb
int3
jmp
sub
sub
test
scas
mov
out
jb
pop
out
mov
das
loopne
add
and
xor
jb
cwde
ss
xlat
shr
mov
cmp
adc
pop
push
dec
push
outs
loopne
xor
sahf
sbb
gs
aad
imul
call
aas
fadd
rcr
outs
add
cmps
test
push
dec
hlt
cld
cmp
jbe
shl
adc
or
(bad)
mov
mov
xor
das
inc
imul
push
jg
fstp
pop
loop
movs
not
addr16
pop
test
sbb
or
push
js
fstp
popa
jb
inc
or
push
adc
jb
cmp
xor
jb
inc
in
aam
mov
jp
mov
imul
dec
xchg
inc
cmp
das
pop
retf
cmp
jo
dec
xchg
dec
in
pop
mov
bswap
cmovs
ins
(bad)
xor
mov
loop
lock
fild
mov
add
add
aas
lea
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
mov
inc
or
add
or
add
add
or
add
add
outs
cmp
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
dec
inc
inc
push
js
(bad)
cld
iret
lock
add
xor
shl
and
into
pushf
jp
fmul
jmp
xchg
pusha
sub
sti
out
fistp
add
add
jecxz
lahf
scas
aas
jg
and
shr
inc
mov
(bad)
(bad)
xor
inc
jno
sub
rol
and
inc
xchg
dec
es
loop
mov
pop
mov
enter
mov
std
xor
jmp
xchg
aam
mov
(bad)
mov
xor
push
(bad)
cmp
xchg
add
xor
xor
aas
xor
add
xchg
icebp
inc
dec
in
mov
shr
and
dec
div
xchg
sbb
xor
and
in
sar
xor
iret
mov
stos
sbb
stos
outs
push
(bad)
jmp
leave
mov
stos
and
sbb
jmp
aaa
stos
outs
push
sbb
(bad)
popa
lds
or
sbb
mov
ins
dec
addr16
imul
inc
iret
out
aas
imul
in
xor
xchg
repz
add
push
add
mov
out
push
add
add
dec
inc
scas
inc
pusha
or
sbb
add
add
add
add
or
add
add
fs
daa
add
add
bound
inc
add
add
add
mov
add
or
pop
jae
add
adc
add
adc
add
add
inc
inc
push
pop
test
cdq
mov
(bad)
call
sbb
mov
and
adc
call
test
add
and
arpl
fdiv
adc
out
pop
rcl
and
mov
xchg
sub
cld
ja
mov
fsub
or
shr
in
lds
addr16
rcr
add
dec
cmp
and
mov
push
stos
sahf
jle
sub
sti
pop
pop
xchg
push
push
sbb
and
clc
sub
rcl
xchg
nop
repz
add
out
jecxz
hlt
gs
mov
jge
jmp
pushf
pop
int
cli
idiv
jmp
repz
mov
out
stos
push
repnz
xchg
mov
and
call
fld
aam
or
jmp
lods
pop
retf
sub
cli
dec
cmc
mov
iret
stos
mov
sti
ds
cmp
push
jge
cmc
sub
lods
scas
cwde
arpl
mov
out
arpl
sbb
loop
inc
popf
loope
mov
(bad)
mov
out
pop
cmp
sbb
push
xor
jae
push
sbb
cmp
fidiv
fstp
sbb
inc
shl
imul
cld
(bad)
out
mov
ffreep
jae
out
in
aas
es
dec
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
or
sbb
add
add
add
add
or
add
add
stos
cwde
add
add
jo
pop
jae
add
adc
add
adc
add
or
inc
inc
push
push
push
push
inc
inc
and
outs
imul
ficomp
not
ds
orps
lock
ins
add
enter
adc
adc
test
adc
or
mov
mov
mov
cmp
pop
fsub
in
in
sti
xlat
sti
mov
into
jns
jo
out
push
cmp
cmp
fcomp
(bad)
dec
dec
(bad)
leave
mov
loopne
and
out
ret
lds
add
add
jle
mov
cld
add
jo
cs
(bad)
loope
cmp
xchg
add
and
out
add
push
enter
sbb
mov
mov
or
xchg
add
ins
jns
inc
and
stos
or
ds
fcom
add
mov
lea
add
inc
mov
push
sub
rol
mov
add
scas
add
add
mov
cmovo
sbb
cmp
add
adc
add
dec
add
test
dec
add
ror
int
dec
shl
adc
xchg
rcr
ja
lock
and
ret
inc
popa
pop
sub
or
and
out
dec
into
or
add
stc
rol
(bad)
cmp
nop
out
in
out
out
out
hlt
lds
and
and
(bad)
mov
adc
out
ficomp
in
add
add
pop
add
push
add
stc
pop
xor
or
stc
mov
cld
inc
push
sahf
mov
sbb
or
in
and
jecxz
push
loope
loopne
jle
cld
inc
push
(bad)
fstp
add
inc
cdq
lods
shl
jbe
push
mov
retf
add
xor
out
inc
test
mov
shl
xor
pop
sub
mov
pop
mov
jns
push
xchg
inc
and
xchg
loop
jmp
xchg
std
or
xchg
dec
mov
mov
ins
sar
add
add
repz
add
addr16
jns
add
xchg
mov
add
int
movs
jecxz
add
pop
dec
(bad)
or
add
sub
adc
ror
rcr
push
inc
inc
or
sar
push
in
sbb
mov
push
sar
add
mov
sbb
mov
xor
or
sub
sbb
or
enter
and
mov
bound
pop
cdq
mov
popa
dec
xor
and
(bad)
movs
add
dec
and
sub
pop
inc
cli
nop
fcmovne
and
mov
mov
push
add
add
mov
(bad)
mov
minps
sbb
cmps
ror
jne
add
mov
shl
push
mov
popa
pop
mov
sbb
(bad)
push
arpl
pop
xor
sbb
sbb
sahf
popa
out
or
mov
test
ret
nop
nop
inc
pop
dec
pop
inc
test
in
and
add
dec
mov
jp
stc
les
cmp
es
and
and
adc
dec
and
leave
xchg
in
or
and
dec
imul
sub
rcl
imul
mov
lods
and
nop
dec
xchg
sti
leave
ret
in
adc
lds
and
movs
xchg
adc
gs
in
movs
lahf
xor
mov
sahf
aam
stos
mov
lahf
pop
dec
ins
mov
xchg
and
retf
movs
sub
imul
je
or
sbb
xchg
rcl
jmp
ja
or
dec
bound
sbb
jnp
cmps
sbb
cmps
add
push
xor
xor
cdq
addr16
sets
pop
sub
sub
retf
cmp
out
push
push
jae
aas
aad
stos
or
bts
jge
inc
push
mov
jecxz
or
push
stos
aad
sbb
scas
into
push
ja
(bad)
push
iret
push
pop
mov
cli
arpl
mov
arpl
push
(bad)
xor
pop
inc
(bad)
jb
add
sub
cwde
dec
bound
stc
in
dec
jbe
sti
sbb
jnp
push
inc
jae
data16
xchg
popfw
out
int
push
(bad)
mov
lock
pushf
dec
into
and
or
sub
push
lods
jle
aaa
fidivr
mov
in
push
in
jmp
out
jne
popf
inc
popf
sub
cmc
cmp
div
mov
test
shl
jns
or
retf
jmp
ins
hlt
mov
(bad)
out
rcr
aaa
xor
ss
sbb
arpl
int3
nop
arpl
imul
loope
adc
push
mov
mov
jecxz
js
data16
outs
sbb
lods
xor
fsubr
popa
bound
(bad)
sub
xchg
imul
je
int3
enter
fsubr
pushf
imul
cld
lea
dec
mov
mov
xchg
ficom
dec
xchg
imul
push
cmc
push
xlat
lods
dec
(bad)
pop
jmp
jmp
(bad)
push
ins
push
sbb
or
cmp
fwait
lods
les
ins
fist
adc
sub
sub
push
outs
fidiv
in
cld
in
or
call
mul
sbb
(bad)
cmp
jb
jne
jbe
jo
jmp
loope
ret
test
push
sbb
jae
repz
retf
adc
ins
cmps
mov
xchg
in
out
mov
mov
lods
fldcw
(bad)
cmp
dec
cs
sbb
pop
ret
cmp
neg
jno
jecxz
cmps
fwait
cmps
ret
out
pop
jbe
pop
pop
sti
mov
es
(bad)
xor
fcmovnb
pop
loopne
retf
jnp
cmp
cmp
add
(bad)
add
cmps
mov
and
jle
jle
cld
sahf
sti
cmp
retf
std
(bad)
clc
mov
icebp
dec
add
in
mov
add
pop
add
add
pop
xor
push
das
or
adc
pop
pop
jb
outs
rcl
sbb
arpl
fsub
call
pop
sbb
xor
es
push
(bad)
adc
adc
cmps
stc
dec
jmp
loopne
ins
mov
pop
stc
jge
sub
xor
push
je
je
sub
lods
in
sti
addr16
mov
jb
lods
push
push
ins
arpl
fwait
mov
cmp
adc
or
mov
(bad)
fadd
cmp
out
call
je
scas
in
mov
into
retf
sahf
ja
pop
xor
test
in
and
das
sbb
cmps
outs
dec
sbb
test
mov
mov
mov
popf
push
xchg
idiv
fnstsw
jge
cli
push
(bad)
xor
dec
push
sub
sbb
push
inc
(bad)
fisubr
cmp
or
xlat
xor
sub
xchg
or
retf
xchg
mul
and
jae
fist
mov
push
push
dec
das
test
js
sbb
mov
aam
fbld
jmp
mov
mov
fdivr
and
mov
ja
xor
mov
sar
push
push
loop
push
push
repnz
fdiv
mov
shl
push
xor
test
scas
hlt
pop
mov
fs
out
push
aad
push
jg
pop
xchg
pop
lods
jo
test
clc
mov
mov
pop
aad
cmc
jns
fcmovu
fimul
retf
dec
jmp
jmp
lods
neg
scas
dec
mov
xchg
or
in
pop
ins
dec
fidiv
push
mov
mov
retf
xor
int3
mov
fcomi
mov
popf
jg
retf
push
std
lods
stos
mov
fldenv
fcmovbe
mov
push
sbb
in
mov
imul
out
sbb
sbb
mov
mov
sahf
(bad)
jnp
jnp
test
push
outs
ins
fsubr
ins
push
lea
dec
cmp
fwait
sub
in
call
ret
shl
cmps
jl
jecxz
call
ret
int
cdq
jg
cmc
or
dec
jns
sar
mov
ins
mov
call
pop
sbb
jle
xor
arpl
xor
popf
sub
xchg
jecxz
cmps
sahf
popf
dec
aas
cmp
test
mov
aas
pop
je
dec
mov
test
pop
lock
(bad)
(bad)
scas
cmp
loope
scas
pop
outs
jmp
test
je
dec
jmp
shr
sar
push
aad
xlat
clc
xlat
cs
lahf
jns
out
(bad)
in
sbb
mov
jbe
in
pop
ja
out
dec
fcomp
(bad)
js
cld
mov
cli
pminsw
(bad)
mov
shr
pusha
shl
pop
pxor
or
rol
inc
aad
inc
and
sbb
into
xchg
loope
mov
adc
retf
(bad)
jns
jae
out
std
loop
dec
iret
pop
cld
fdiv
or
mov
mov
jb
stos
test
(bad)
pop
mov
cmps
cld
lods
into
fstp
mov
mov
inc
(bad)
push
repz
arpl
cmps
ror
ds
(bad)
cld
das
test
and
push
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
fisttp
inc
push
js
in
mov
fucomp
std
cmp
dec
aaa
and
test
push
adc
pop
and
pop
jl
and
push
inc
in
cwde
stos
(bad)
and
push
sub
adc
cmp
xor
hlt
pop
cmp
out
pop
push
fstp
pop
int
jl
jne
jnp
mov
ds
mov
cmp
in
std
sti
(bad)
cmps
mov
js
lahf
pop
imul
xchg
lahf
mov
int3
adc
push
dec
dec
mov
in
dec
bound
hlt
(bad)
cld
aaa
cmps
sub
pop
(bad)
sti
pop
movs
sahf
jmp
movs
out
push
popf
adc
addr16
(bad)
fdiv
xchg
jb
pop
sar
cmp
mov
stc
pop
mov
dec
mov
cmp
out
add
pop
add
popf
lahf
out
mov
retf
(bad)
stos
jg
in
dec
and
jle
jno
call
pop
cmp
iret
popf
hlt
mov
arpl
xchg
pop
xor
shl
out
pop
xlat
fstp
push
push
sub
push
cmp
(bad)
lea
jmp
push
adc
jg
cmp
pop
andps
sbb
mov
div
mov
(bad)
push
jmp
bnd
ror
mov
je
rcr
es
pop
(bad)
daa
fcmovnu
stc
(bad)
pop
mov
jp
cld
out
push
dec
leave
jns
pop
add
or
inc
in
in
ficom
jecxz
inc
xchg
outs
mov
mov
push
xlat
lds
xchg
mov
add
arpl
push
xlat
ins
mov
(bad)
stc
test
xorps
push
mov
jbe
cld
pop
call
pop
(bad)
mov
retf
dec
and
add
cmc
dec
mov
aas
in
lods
lahf
repz
push
test
mov
inc
pop
adc
sahf
inc
outs
scas
fstp
fadd
retf
cli
sub
neg
lods
ja
pop
fidiv
mov
pop
ss
xor
popf
imul
arpl
cmps
out
aaa
ret
aaa
mov
sub
lahf
cmp
jge
ret
mov
cmp
cmp
sti
stos
test
adc
pop
jle
les
sub
(bad)
mov
cmp
js
dec
push
add
lds
call
xchg
shl
aad
cmp
inc
sti
(bad)
cmc
sahf
mov
leave
in
outs
ja
sub
jmp
call
add
scas
xor
xchg
out
and
(bad)
mov
add
push
add
push
out
xchg
and
dec
mov
scas
mov
out
jnp
sbb
imul
mov
psadbw
mov
out
fs
mov
xor
stc
mov
popa
sbb
jne
out
push
mov
in
xlat
sbb
out
iret
ss
stc
mov
retf
mov
div
daa
sub
in
(bad)
shr
or
mov
mov
push
sbb
(bad)
sub
(bad)
outs
cmp
mov
cmc
sbb
les
sahf
inc
pusha
scas
nop
test
mov
cli
adc
xor
(bad)
nop
je
mov
mov
mov
fiadd
test
retf
popa
mov
test
mov
leave
dec
int3
ja
sub
add
sub
stc
or
jl
pop
ins
inc
or
outs
loopne
push
int3
jb
pop
ins
mov
pop
mov
ja
pop
(bad)
sbb
jmp
int
or
lock
pop
ror
std
or
mov
jo
sar
push
test
xor
jmp
sub
mov
dec
dec
inc
mov
jns
aad
jp
out
test
call
and
(bad)
mov
out
bound
jl
cmps
push
loop
mov
test
mov
xchg
pop
jp
leave
mov
sbb
in
pusha
jle
retf
jb
pop
xor
mov
cs
retf
add
lods
sbb
fisubr
js
pushf
xor
js
shl
daa
inc
inc
push
test
aam
inc
enter
clc
test
push
add
add
xor
shr
mov
lods
scas
xchg
xlat
mov
jb
(bad)
pop
mov
jmp
sbb
sbb
fnstsw
sbb
dec
add
xor
mov
repnz
mov
ins
xchg
jg
ins
outs
adc
mov
and
pop
and
fwait
jae
jp
fst
inc
ret
daa
lahf
loope
jb
(bad)
inc
pop
ret
mov
pop
sub
sbb
jo
fisttp
repnz
cmps
push
pop
cmp
div
xor
shr
and
push
cmp
pop
xchg
push
mov
bsf
test
add
push
lea
cmp
pop
daa
popf
pop
mov
mov
retf
sbb
outs
ja
(bad)
dec
test
ret
pusha
(bad)
(bad)
add
add
mov
(bad)
scas
sub
(bad)
lahf
aaa
mov
mov
in
(bad)
xchg
inc
in
xchg
mov
cmp
scas
dec
xor
xchg
jecxz
mov
ss
mov
retf
popa
outs
adc
out
adc
push
adc
xchg
jge
in
test
inc
jle
jns
xchg
push
cmp
sbb
push
daa
dec
add
call
xchg
pop
repnz
ret
retf
jmp
mov
into
movs
cmp
nop
xlat
fst
jmp
(bad)
add
dec
sbb
sub
or
in
ret
dec
sbb
mov
outs
std
jae
jmp
sub
ret
add
inc
push
jmp
push
or
xchg
adc
ret
nop
cmp
ins
add
jns
jae
mov
(bad)
mov
cmc
sbb
push
call
retf
icebp
pop
pop
push
loop
iret
stos
repz
retf
dec
jae
add
cmps
dec
xchg
push
test
ins
(bad)
repz
and
out
mov
es
shl
or
out
jle
pop
cwde
xchg
xchg
pop
pop
push
fs
jg
stos
adc
mov
pop
mov
je
jne
pushf
xchg
(bad)
push
adc
retf
(bad)
hlt
shr
add
xchg
leave
cs
lods
and
ins
jl
and
outs
loope
pop
js
push
jl
adc
shl
cmps
int
repz
xor
sbb
dec
js
mov
hlt
(bad)
jecxz
push
adc
mov
lock
pop
fistp
cmc
(bad)
rcl
pop
pushf
pop
nop
mov
popa
sub
jmp
add
pop
xor
inc
add
mov
mov
push
xor
mov
jnp
les
mov
rcl
inc
call
(bad)
push
jmp
(bad)
mov
in
jns
mov
jmp
int3
mov
jae
and
hlt
xchg
pop
out
psubusb
enter
pop
sbb
push
sbb
inc
sbb
mov
inc
ret
xchg
fwait
pop
add
add
xor
dec
out
cmp
mov
mov
clc
push
sar
imul
neg
inc
out
sub
cmp
lahf
mov
push
sub
fmul
or
jmp
sbb
int
inc
pop
mov
movs
and
adc
mov
rcl
add
js
sub
lock
pop
pop
ins
iret
cli
or
pop
sbb
(bad)
(bad)
aam
stc
into
push
adc
mov
and
inc
pop
xlat
aaa
mov
pop
xor
shr
jmp
lods
mov
addr16
test
iret
dec
xor
push
jae
pushf
fwait
aam
xor
mov
lea
loope
lea
dec
das
jle
cmp
js
adc
hlt
mov
push
jge
push
xchg
inc
loopne
scas
jecxz
mov
add
mov
dec
cwde
add
and
and
jecxz
sar
aaa
push
mov
xor
ror
frstor
test
test
lds
pusha
retf
unpckhps
ror
in
add
ins
sahf
mov
(bad)
out
(bad)
xchg
pop
fwait
jge
fld
psubb
mov
stc
mov
stc
test
add
xchg
cli
aaa
push
loope
and
call
add
(bad)
rcl
mov
sub
push
jno
cmps
leave
or
add
sbb
cld
jae
push
pop
push
xchg
popf
inc
and
stos
and
mov
inc
sub
fistp
or
push
in
in
dec
and
mov
inc
das
add
pop
jg
push
mov
in
sbb
sti
scas
(bad)
cmp
and
scas
mov
xchg
mov
pop
sub
jp
xchg
pop
ins
inc
sbb
jns
lds
xor
retf
inc
dec
xchg
or
jl
xor
jae
div
sub
cdq
call
icebp
xor
lock
sahf
cld
mov
pop
cmp
out
dec
or
mov
push
xchg
into
mov
mov
xchg
xchg
fcomp
aad
in
pop
xchg
add
push
mov
add
mov
sahf
xor
xor
ficom
enter
shl
mov
sbb
mov
or
(bad)
nop
push
dec
out
mov
out
push
or
cs
(bad)
loope
in
jg
mov
in
cmp
outs
push
inc
cmp
add
mov
add
xchg
repz
adc
mov
imul
or
dec
mov
cmp
nop
lods
and
ja
dec
jl
loope
add
xchg
xchg
xchg
xchg
pop
or
jle
int
adc
add
in
push
(bad)
iret
push
jecxz
mov
int3
sub
movs
jae
scas
retf
mov
icebp
jl
scas
add
out
jns
jecxz
(bad)
cmp
repnz
xchg
adc
jbe
xor
and
cmp
jae
pop
add
out
scas
mov
in
idiv
push
sub
xchg
mov
stos
es
fiadd
push
mov
add
xchg
xchg
shr
aas
lods
lods
or
fwait
arpl
xlat
inc
rol
dec
sbb
mov
jecxz
mov
addr16
jne
ss
(bad)
fwait
out
addr16
clc
dec
mov
mov
push
push
fist
loopne
pop
into
jecxz
pop
in
inc
push
xor
jb
(bad)
retf
mov
hlt
(bad)
cmp
ds
push
pop
sub
jbe
mov
pusha
cli
inc
movs
cli
push
dec
call
imul
mov
imul
(bad)
hlt
ss
shr
and
mov
das
or
ret
push
ret
jb
pop
ficom
sub
dec
test
rcr
xlat
push
adc
in
add
std
dec
es
leave
adc
mov
push
adc
ja
aas
jle
scas
mov
jno
scas
pop
pop
std
in
stos
lds
or
or
pop
shl
mov
adc
sar
mov
push
cmp
fadd
xchg
cwde
inc
sbb
dec
add
mov
repnz
sbb
cmp
mov
bound
inc
inc
inc
cmps
(bad)
rol
jbe
outs
xchg
ror
daa
ficomp
cmps
add
dec
inc
push
sti
pop
and
xor
dec
mov
push
outs
sbb
mov
lods
pop
out
iret
retf
js
xchg
add
mov
retf
xor
stos
outs
sub
daa
sbb
sub
fdivr
adc
std
sub
sbb
data16
clc
shl
mov
inc
cmc
pop
imul
pop
(bad)
je
arpl
xor
out
repz
push
sub
(bad)
test
pop
mov
pop
out
jnp
icebp
or
shr
mov
push
mov
xor
fistp
pop
cwde
and
push
push
fistp
retf
in
mov
pusha
cmp
ret
sub
adc
mov
mov
jae
scas
inc
int
arpl
ds
mov
ret
clc
int3
in
rcr
push
mov
dec
rol
and
aaa
sahf
sub
pushf
cmp
jne
in
and
(bad)
stos
push
inc
out
or
and
call
repnz
xor
jns
xchg
xchg
mov
cmp
paddusb
jmp
cmc
outs
add
inc
popa
add
dec
push
inc
mov
stos
int3
mov
pop
push
jbe
inc
cmc
mov
push
test
sbb
pop
or
sub
out
in
add
sti
sti
ja
push
aam
movs
mov
pop
sbb
jns
jns
mov
mov
and
xchg
out
scas
mov
in
es
in
mov
xor
fs
mov
mov
pop
jo
cmp
mov
stc
sbb
pusha
dec
rol
pusha
xor
push
pushf
fdivr
stc
fisubr
push
adc
cmp
add
mov
imul
adc
cwde
jmp
arpl
ins
mov
outs
jb
int
daa
lea
les
mov
(bad)
ins
jecxz
leave
mov
push
dec
fnsave
sbb
push
iret
test
movs
lock
jmp
pushf
(bad)
pop
out
in
sub
gs
jne
in
add
jp
in
jns
call
dec
inc
xchg
sti
xor
push
in
or
cdq
ins
and
add
inc
xchg
xor
inc
sbb
mov
aas
add
lock
or
pop
mov
outs
xor
lods
sbb
fdiv
dec
sbb
out
test
mov
cmp
push
popf
ret
or
push
mov
mov
mov
xor
ja
xchg
push
xor
fadd
inc
clc
pop
ins
or
fadd
mov
dec
rcl
xor
xchg
jp
nop
or
mov
out
lock
inc
inc
stos
adc
(bad)
call
in
mov
popf
lahf
popf
cdq
xchg
inc
bound
bound
adc
mov
ja
cmps
jbe
call
push
push
lea
and
inc
sbb
add
bound
xor
scas
mov
outs
ds
ja
or
outs
add
test
inc
(bad)
fist
sbb
inc
jmp
mov
adc
repz
mov
fdiv
xchg
fwait
xchg
jnp
(bad)
out
neg
jns
jo
in
mov
arpl
xor
or
aad
add
call
sahf
jbe
mov
std
jle
mov
dec
cwde
xchg
mov
add
and
(bad)
add
cmp
aad
add
pop
(bad)
neg
mov
inc
mov
pop
call
push
sub
jmp
(bad)
jns
test
sti
mov
dec
iret
adc
pop
cmp
dec
sbb
pop
(bad)
mov
push
push
pop
ins
das
or
fisub
stos
adc
mov
mov
cmp
jmp
sub
daa
mov
cmp
pop
add
popf
nop
xchg
mov
mov
or
inc
lods
lods
or
movs
jmp
hlt
pusha
adc
push
sbb
lahf
jg
cmp
mov
mov
pop
or
call
jne
jg
jnp
pop
loopne
(bad)
cmc
fild
sbb
sub
outs
mov
sbb
gs
popf
imul
push
sbb
or
jo
xchg
clc
fimul
lock
mov
and
jbe
mov
xchg
ret
mov
sub
lock
sbb
xchg
retf
inc
test
xchg
inc
adc
pop
test
adc
retf
xor
mov
cmp
shl
cmp
dec
or
pop
pop
daa
dec
pushf
mov
sub
stos
and
xchg
daa
cmp
jmp
lds
popa
or
icebp
inc
add
jmp
fwait
(bad)
mov
ja
xchg
fs
pop
cli
pusha
adc
inc
lahf
ja
sti
inc
push
and
out
in
shr
mov
push
sbb
rcl
cmp
(bad)
fst
inc
mov
add
inc
mov
fs
xchg
lods
pop
add
sbb
sbb
sub
ret
not
inc
mov
push
aaa
enter
repnz
test
fisub
inc
jl
pop
pop
sbb
daa
jno
outs
add
add
push
addr16
inc
jnp
dec
xor
pop
add
mov
cdq
aam
sahf
push
dec
pop
lea
fcom
pop
push
loop
push
jne
ds
ins
adc
sti
stos
jmp
ds
xchg
add
sbb
jns
add
xor
call
dec
out
fst
jle
fisttp
pop
add
push
push
xchg
fs
push
outs
inc
xchg
rcl
imul
push
retf
imul
rcl
jno
jg
pop
sub
aam
lods
fs
test
sbb
cmp
out
jg
or
nop
mov
and
(bad)
cld
shl
mov
stc
cmp
hlt
sub
push
rol
ret
fnsave
xor
lods
fisubr
push
call
int3
icebp
call
out
mov
pop
fsub
adc
outs
inc
fsin
cmp
mov
test
lahf
or
dec
repnz
jns
add
movs
adc
or
in
imul
cmp
in
jne
(bad)
mov
ds
stos
fnstenv
imul
loopne
pop
ds
jmp
sahf
jge
jmp
and
imul
in
push
pushf
clc
add
loopne
push
loope
int
mov
push
imul
std
or
jp
sahf
ret
ficomp
aaa
add
(bad)
iret
add
inc
cmc
or
rcl
stos
loope
mov
out
ret
in
stos
xor
pop
xor
aas
mov
cmps
scas
popa
aaa
add
jle
lods
mov
ja
xor
xor
lods
sub
fisttp
inc
call
xor
pop
nop
ins
ds
jecxz
mov
sbb
inc
(bad)
fadd
mov
call
cmp
and
outs
test
sar
sub
jecxz
jb
inc
dec
in
mov
sub
lahf
xchg
push
cmps
or
ins
fcomp
shl
mov
adc
or
push
mov
imul
cmps
inc
add
ja
or
dec
jle
cmc
mov
test
repz
ret
add
retf
or
push
mov
test
aaa
jns
in
xchg
inc
test
xor
scas
mov
ins
daa
adc
(bad)
out
scas
ret
and
sbb
mov
in
mov
call
mov
out
mov
jmp
sub
loop
test
shr
stc
int
inc
push
add
rcl
rcl
pop
lods
dec
(bad)
ja
adc
test
bound
sub
out
test
cdq
lods
pop
xor
xor
(bad)
cmps
jns
jmp
rol
lahf
out
clc
xchg
iret
stc
xor
jns
add
ins
cwde
pop
nop
jno
in
(bad)
fild
clc
out
pop
xchg
rcl
stos
lods
mov
mov
into
mov
fldenv
add
mov
mov
adc
jbe
cdq
push
mov
inc
push
inc
pusha
out
stc
or
sbb
(bad)
icebp
jbe
test
dec
sub
shr
or
and
and
rcl
cmp
cmp
outs
ret
mov
sbb
std
sub
out
rcr
jle
add
lods
(bad)
or
cmc
and
push
add
sub
sub
pop
xor
repz
clc
jle
rcr
mov
xchg
fwait
arpl
(bad)
jnp
mov
mov
stos
cmp
icebp
sbb
cli
movs
add
xor
xchg
adc
cld
(bad)
xlat
push
leave
sbb
int3
pop
cmc
push
inc
fnstenv
pop
jae
sar
xor
les
(bad)
jecxz
test
add
out
sti
xchg
mov
xchg
cli
ins
(bad)
sbb
cld
je
fdivr
lahf
loope
xor
push
test
cmc
add
mov
adc
sub
retf
retf
call
jmp
aas
mov
int3
loop
add
ret
push
sbb
shl
stos
int
mov
sbb
cwde
dec
rcl
push
out
movd
cmp
(bad)
pop
jmp
sahf
js
mov
pop
jbe
call
inc
jg
mov
push
in
fs
push
iret
cld
cli
cli
jae
enter
enter
cdq
xchg
scas
mov
fs
mov
fsubr
push
sbb
push
mov
not
popf
pop
jge
push
and
or
mov
cmps
jp
pop
xchg
mov
loopne
inc
mov
loope
in
xor
jg
mov
arpl
sbb
jae
mov
pop
aad
aaa
aaa
push
add
xor
dec
mov
loope
fisttp
mov
jnp
rol
fs
cmps
mov
iret
mov
fst
xchg
pop
cwde
imul
add
and
int
dec
jge
sar
cdq
clc
cmps
sbb
push
xlat
sbb
arpl
pop
imul
pop
test
ficomp
fwait
pop
dec
je
rcl
imul
fwait
or
cmp
jnp
dec
xchg
or
jnp
mov
aad
and
lds
scas
inc
hlt
or
mov
mov
dec
in
into
cmp
daa
adc
outs
in
xchg
pop
dec
sbb
sub
pushf
pop
mov
scas
out
sti
pop
out
js
(bad)
sub
mov
push
call
jmp
or
pop
mov
xchg
jae
push
call
in
sbb
ds
bound
xchg
aad
repnz
ret
dec
push
push
adc
bound
jecxz
cld
xor
cmp
out
xchg
data16
(bad)
outs
stos
push
add
fidivr
ficomp
mov
jnp
je
xchg
fimul
jbe
lods
cmp
pop
jge
test
cs
sub
adc
or
pop
mov
dec
pop
mov
jno
(bad)
push
xor
cmp
aas
cmp
mov
movs
mov
and
jne
cmp
mov
and
hlt
dec
mov
xor
clc
cli
cmp
inc
jb
mov
je
ror
and
js
rcl
push
adc
mov
retf
xor
arpl
push
out
sar
in
mov
repz
daa
xlat
adc
push
add
and
cdq
in
dec
ds
sub
mov
pop
jge
out
stos
or
test
push
icebp
dec
mov
mov
scas
add
or
mov
inc
aad
cmps
(bad)
bound
mov
push
retf
pop
inc
push
sub
jg
shl
inc
sti
or
dec
in
fbstp
push
ror
sub
pusha
(bad)
pusha
push
xor
dec
mov
mov
cld
out
cmp
nop
stos
and
(bad)
sub
hlt
lds
xchg
sbb
xor
fs
lock
retf
fild
ja
push
inc
add
jp
lds
adc
push
cmc
fstp
push
mov
inc
mov
cmp
cmp
lahf
mov
and
mov
jge
mov
inc
icebp
ins
repz
dec
sub
jnp
push
cmc
jb
jb
and
and
jg
pop
sbb
xchg
jmp
jle
add
cld
and
mov
(bad)
pop
adc
(bad)
push
push
rep
test
xchg
adc
(bad)
fstp
xchg
add
add
mov
in
(bad)
inc
(bad)
iret
fmul
pop
movs
repnz
shl
pusha
outs
pusha
push
std
es
pushf
and
or
call
jge
fmul
(bad)
fisttp
push
push
scas
fist
hlt
test
mov
pop
shr
retf
xchg
jno
enter
mov
cmp
icebp
mov
mov
push
stos
add
dec
add
stos
mov
hlt
cs
fcmove
add
pop
xchg
(bad)
and
in
mov
adc
pop
sbb
repz
scas
jmp
fwait
cmp
and
pushf
adc
sbb
lods
inc
push
xlat
js
sbb
push
push
pop
mov
stos
sub
fidivr
inc
mov
push
lods
stos
jmp
push
sub
aam
stos
shl
sub
dec
or
imul
mov
cmp
sub
aam
scas
inc
xchg
movs
jle
popf
retf
jb
adc
fiadd
in
mov
hlt
cmps
sar
data16
mov
push
cmp
pusha
xor
fld
sbb
add
push
cs
in
fdivr
fwait
test
push
cmp
pushf
jp
mov
add
imul
in
std
and
mov
ins
aas
call
inc
out
or
into
into
sbb
imul
adc
icebp
sahf
aam
pop
(bad)
xor
dec
scas
inc
imul
pop
push
out
dec
push
mov
sub
fcom
icebp
pop
sti
push
pop
push
mov
imul
dec
dec
dec
cmps
lds
pop
fucom
scas
dec
push
and
and
scas
popf
fist
jb
add
push
pop
lahf
out
fisubr
dec
dec
(bad)
in
fwait
pop
xchg
popf
jbe
push
inc
xlat
sub
adc
popa
(bad)
jnp
lock
lahf
repnz
mov
in
cmps
call
push
mov
mov
stos
cli
pop
xchg
das
out
pusha
in
mov
aad
cmp
pop
lea
jg
xchg
test
inc
(bad)
bnd
fdiv
pop
adc
pop
aam
mov
gs
cwde
nop
pop
jb
dec
mov
sbb
cmp
add
push
ja
pop
xchg
mov
add
cmp
push
mov
xor
mov
in
push
es
pop
ficom
(bad)
mov
fiadd
cmc
stos
dec
jmp
inc
lahf
and
nop
push
enter
int
ds
repz
retf
xchg
or
hlt
into
mov
sub
bnd
jge
in
aas
arpl
jae
out
stc
fdivr
adc
add
loop
mov
gs
lea
xor
jecxz
mov
and
add
and
jne
and
push
dec
adc
dec
mov
push
movs
or
lock
xchg
pushf
mov
jl
popa
xchg
push
sti
mov
adc
stc
cmp
or
mov
cmp
hlt
retf
movs
cmps
popa
dec
xor
es
ja
adc
fistp
xor
push
call
sbb
mov
mov
call
or
(bad)
call
leave
int
std
inc
jbe
and
shl
call
xchg
jo
xchg
loope
jnp
movs
shl
punpckldq
aaa
pop
jle
pop
dec
ins
pop
jp
(bad)
xor
out
push
out
(bad)
test
adc
div
retf
xor
pop
adc
in
in
aad
mov
scas
push
inc
lods
sar
dec
sub
sub
repnz
cli
mov
call
inc
mov
push
cmc
leave
call
fsubrp
test
aad
dec
mov
inc
bound
inc
or
or
mov
mov
fdiv
(bad)
jge
push
sub
shl
adc
cmp
pop
mov
(bad)
pop
adc
jmp
and
or
inc
mov
push
aad
push
jp
shl
nop
ss
sub
(bad)
movs
mov
jae
push
cmp
loopne
in
repnz
ja
call
pop
cmps
fisubr
dec
cmps
loop
and
adc
push
mov
in
jl
jae
pop
ror
inc
push
xor
push
xor
arpl
add
adc
sbb
sbb
lds
(bad)
in
loope
mov
add
mov
shl
jbe
icebp
(bad)
call
call
ds
push
xor
cmps
fs
fs
push
test
mov
data16
in
jbe
xchg
inc
xchg
xor
mov
sub
cmp
sub
shl
jle
neg
clc
(bad)
movs
mov
scas
and
xchg
push
ins
add
mov
jnp
cli
aad
mov
mov
cmp
outs
mov
sar
daa
and
std
outs
jecxz
mov
cmp
(bad)
js
jo
fisttp
xlat
sub
cmps
pop
cmp
lahf
int3
cs
call
dec
xchg
test
jecxz
addr16
sti
push
add
mov
popf
jb
pop
ror
jo
push
inc
pusha
fld
(bad)
jae
addr16
fidivr
push
ror
mov
hlt
inc
cli
inc
jae
je
pop
retf
mov
lea
jb
repz
fldenv
aas
pop
adc
movs
ja
cs
das
adc
dec
mov
cld
loop
lahf
iret
jnp
std
xchg
adc
or
out
bnd
out
and
inc
ss
cli
(bad)
xchg
dec
out
rcl
pop
cwde
aaa
call
fcomp
int3
ret
or
and
adc
push
shl
cli
aas
add
xor
in
std
(bad)
cmp
xchg
enter
dec
aas
sbb
sbb
jecxz
mov
push
inc
aad
not
xchg
clc
ficom
sbb
ins
jp
repz
mov
test
pop
data16
mov
sbb
xchg
(bad)
pop
(bad)
div
mov
xor
(bad)
sbb
fsub
test
int3
(bad)
jge
sti
(bad)
cmp
mov
and
add
ins
jl
mov
lods
fxch
jmp
js
cmp
jnp
jne
lods
fcmovb
clc
mov
jo
sbb
ja
mov
xchg
jmp
xlat
repz
out
mov
or
and
js
lds
test
add
mov
fwait
scas
stos
call
es
or
cwde
xchg
sub
push
leave
push
jmp
mov
test
xchg
movs
mov
push
(bad)
shl
pop
jno
jno
ret
pop
and
cmp
shl
dec
jmp
ds
and
adc
out
or
pop
push
xchg
shl
clc
loope
mov
or
add
or
das
stos
dec
clc
cmps
shl
sahf
dec
xchg
mov
and
jbe
jo
adc
and
fnstsw
rcl
cmp
stos
fist
std
jne
popa
movs
repz
imul
mov
jmp
push
pop
jb
cdq
test
pop
xchg
pushf
pop
(bad)
rcr
hlt
loope
mov
aas
inc
scas
adc
out
xchg
jne
(bad)
mov
repz
rep
shl
pusha
arpl
pusha
mov
dec
enter
adc
ds
mov
cmc
mov
ds
ficom
iret
(bad)
mov
mov
xchg
pop
xor
and
sbb
cmp
rcr
jl
and
push
(bad)
adc
int
lahf
imul
imul
pop
mov
mov
push
mul
div
sbb
std
std
cmp
cmp
loopne
test
outs
xor
pop
mov
pop
jg
ins
jg
add
adc
(bad)
and
mov
mov
mov
in
xchg
cld
fs
cmps
in
cmp
or
pop
mov
mov
add
aam
push
mov
mov
jle
enter
mov
and
xchg
cmp
mov
sub
mov
pop
mov
push
or
mov
scas
dec
adc
mov
out
out
es
aas
mov
or
(bad)
adc
mov
std
inc
xchg
sub
xor
lds
jnp
mov
std
ss
fstp
sub
js
cmp
cmp
xchg
cs
sub
xor
mov
push
pop
idiv
push
scas
(bad)
out
lock
inc
jbe
pop
ins
stos
in
stos
cvtps2pi
cmp
push
mov
enter
stos
jmp
xor
adc
sbb
cwde
hlt
xchg
and
jmp
outs
mov
test
daa
shl
pop
mov
pop
daa
rol
lea
cwde
cmp
(bad)
fsub
loop
icebp
adc
imul
movs
gs
lods
sbb
aam
stos
cmp
out
pop
push
ins
fsubr
pop
cli
shr
jge
xor
sbb
pop
cmp
fld
test
lods
adc
fld
push
arpl
xchg
cli
pop
aas
adc
and
pop
push
adc
repnz
pop
(bad)
push
mov
(bad)
call
push
nop
in
daa
xor
dec
pop
mov
dec
stos
cmp
add
dec
lahf
cld
into
daa
push
mov
xchg
or
sbb
ds
retf
mov
stos
shr
cmps
jne
test
das
(bad)
nop
jbe
in
add
outs
inc
ds
(bad)
push
or
adc
jb
and
adc
mov
iret
iret
sbb
hlt
int3
outs
inc
push
(bad)
out
repz
pop
frstor
icebp
aaa
pop
mul
jmp
icebp
enter
inc
mov
and
rol
loop
mov
sar
xlat
aad
pop
jbe
fsubr
gs
jg
cmps
scas
mov
xchg
pop
arpl
scas
cmps
arpl
sbb
out
cmp
fistp
jp
push
arpl
ret
jge
jne
push
add
jg
jb
cs
sbb
push
in
mov
mov
adc
pop
(bad)
adc
imul
out
mov
call
imul
in
mov
cmp
jbe
pop
movs
and
mov
in
outs
or
adc
mov
loop
mov
iret
sti
out
enter
out
stc
push
sti
lahf
adc
sbb
xor
mov
stc
call
cmp
lods
fcom
cmc
(bad)
les
clc
out
mov
rcr
adc
adc
and
sti
lea
lock
sahf
idiv
jecxz
adc
(bad)
test
adc
inc
sbb
push
dec
jns
lods
lock
mov
fld
dec
into
lds
pop
push
icebp
shl
repz
push
pop
(bad)
outs
in
in
push
add
test
dec
rcr
cmp
mov
js
loope
fisttp
cld
aad
sbb
sahf
jnp
stc
mov
lods
jp
scas
fldcw
ret
in
mov
ds
inc
mov
cmp
push
bswap
dec
mov
add
pop
add
out
ins
lock
push
in
or
lods
add
cmps
adc
pop
xor
ins
xor
sahf
mov
(bad)
or
(bad)
dec
push
loope
dec
mov
repnz
cmp
imul
and
sub
nop
bound
or
mov
inc
dec
pop
aas
sti
aas
data16
jecxz
rcr
hlt
ret
pop
das
push
and
adc
or
dec
mov
js
cmps
push
hlt
xor
sbb
cmp
idiv
mov
jle
fwait
push
jmp
clc
es
jg
pop
xlat
jle
add
out
int
mov
sbb
mov
jle
(bad)
sti
movs
push
cli
into
cmp
in
test
mov
push
adc
push
cmp
inc
neg
mov
mov
jns
sti
mov
ja
push
cwde
sbb
test
fld
stos
in
mov
xchg
mov
call
(bad)
sahf
addr16
pop
aaa
pop
fidivr
mov
loopne
sub
in
pop
adc
dec
ins
mov
lea
xlat
add
jg
inc
push
add
shl
pop
push
add
inc
cmp
sahf
lahf
lds
adc
stos
(bad)
cli
out
mov
inc
imul
sub
pop
addr16
cli
nop
std
test
mov
mov
jmp
jnp
pop
push
add
pop
xor
into
out
lds
sbb
popa
std
or
outs
repz
mul
mov
or
jle
adc
ds
(bad)
fwait
div
sbb
outs
jge
mov
mov
inc
push
cs
lock
sub
sub
fsubr
cs
push
fwait
leave
xor
dec
jae
xchg
jecxz
stos
push
mov
inc
adc
jno
mov
lahf
inc
pop
fdiv
call
pop
cmp
shl
sahf
mov
sar
jle
sub
xchg
les
shl
add
fsubr
outs
add
mov
cmp
or
mov
mov
mov
sub
fisubr
lock
test
jge
icebp
or
and
das
rcl
pop
pop
icebp
inc
push
shl
add
dec
imul
xor
scas
ds
cmp
fnstenv
jmp
xor
stos
mov
mov
icebp
(bad)
push
addr16
cmp
(bad)
pop
das
outs
sub
stc
mul
and
fnsave
test
into
stos
jge
or
into
mov
add
jbe
out
cli
jmp
icebp
shl
aad
fwait
and
pop
sbb
and
test
addr16
mov
or
(bad)
sub
or
push
daa
stc
cmp
push
jmp
mov
cmp
jae
(bad)
xor
enter
mov
std
(bad)
xchg
push
push
mov
std
lds
jg
cld
adc
or
outs
ds
mov
iret
sbb
arpl
dec
js
in
pop
mov
aad
aaa
lahf
adc
ret
call
add
das
jns
and
fiadd
add
add
dec
inc
scas
inc
pusha
add
mov
inc
or
add
or
add
add
add
add
or
add
add
jae
das
add
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
cld
dec
inc
inc
push
js
push
push
dec
mov
inc
adc
adc
popa
inc
and
add
push
dec
xchg
or
ins
daa
pop
jbe
pusha
into
ror
cmp
fs
xchg
sbb
mov
leave
sub
fsubr
pop
mov
ins
shr
mov
cli
stc
(bad)
retf
and
adc
or
xlat
fsub
cwde
bound
loopne
pop
or
xor
jecxz
or
pop
lods
mov
mov
cmp
adc
inc
xchg
loopne
mov
mov
mov
dec
push
aam
xor
mov
pusha
jne
scas
loopne
fs
sbb
cmp
(bad)
ficomp
das
fucomip
ja
dec
jo
shl
xlat
jg
sahf
push
gs
xchg
pop
shr
pop
add
clc
or
(bad)
mov
int3
repnz
js
inc
stos
adc
sub
jle
in
adc
dec
mov
inc
fucomi
repnz
mul
(bad)
and
mov
sahf
sub
xor
jmp
sbb
jnp
fisttp
mov
mov
pop
add
push
les
in
xchg
pusha
cmp
in
dec
aas
hlt
and
mov
sahf
xchg
jmp
je
xlat
pop
call
movlps
add
jae
repz
jns
dec
cdq
daa
mov
xor
js
fs
sub
or
jg
scas
xor
mov
xchg
movs
inc
popa
les
test
lock
and
pop
outs
dec
ins
xchg
pop
cmc
cli
lea
test
in
mov
scas
aas
pop
jno
or
fcomi
add
adc
(bad)
jle
pop
int
push
dec
push
loopne
addr16
mov
mov
and
jae
cli
push
aam
pop
shr
or
sti
sbb
stos
ja
aas
add
add
cmp
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
add
mov
inc
or
add
or
add
add
add
or
add
sub
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
int3
dec
inc
inc
push
js
les
push
(bad)
jg
out
dec
outs
ret
adc
pop
adc
pop
pop
sti
push
pop
cmps
mov
fiadd
fstp
fldcw
jne
ins
fld
ins
in
mov
lods
(bad)
lods
mov
(bad)
or
pop
sbb
push
sub
xor
and
jne
pushf
xchg
xchg
hlt
into
pushf
mov
sahf
repz
fisttp
mov
cmc
loop
or
mov
retf
mov
test
lods
ins
or
or
jge
aaa
shl
xlat
ficomp
imul
cmps
dec
xchg
jmp
cmps
arpl
call
in
mov
mov
cdq
cs
xor
push
sub
(bad)
enter
aas
sbb
aaa
dec
in
shl
adc
xchg
mov
fwait
sub
push
xor
jne
jns
and
push
and
ss
loope
fnstsw
loope
pop
jle
pop
mov
repz
xor
jg
mov
cmps
mov
daa
mul
shr
enter
mov
in
je
vcomisd
and
add
repz
push
jl
push
jae
pop
outs
lds
cmps
jb
adc
and
mov
sbb
jmp
int3
and
and
pop
cwde
fidiv
fnstsw
xor
fldcw
mov
xor
test
xor
out
inc
scas
int
mov
call
aaa
or
ret
jno
les
ret
bound
and
inc
dec
dec
dec
push
out
out
push
ins
pushf
xchg
mov
shl
xor
sbb
repz
movs
mov
sub
icebp
je
sahf
jmp
enter
ins
mov
cwde
daa
test
cmc
and
fwait
cmp
js
stos
push
and
jno
mov
fidivr
mov
mov
dec
or
sbb
clc
jl
xor
test
loopne
test
ret
jg
popa
xlat
cmps
fist
scas
sub
fldcw
rol
push
pop
jae
add
dec
or
(bad)
shrd
mov
jmp
sbb
and
push
or
into
addr16
shr
jle
in
ja
inc
xor
sahf
or
dec
movs
push
add
cwde
xchg
or
or
adc
mov
cmp
stc
out
retf
inc
jmp
or
mov
cmps
mov
mov
cmps
or
mov
out
xor
mov
jge
out
fwait
loopne
out
imul
cmp
leave
mov
push
add
xchg
ret
inc
cdq
sub
fisubr
movs
out
ror
(bad)
scas
scas
mov
sub
push
(bad)
fisub
add
or
shr
pop
lahf
and
clc
mov
add
xor
stc
mov
dec
push
outs
sub
and
retf
mov
ret
pop
shl
jae
or
ror
inc
jle
pop
in
lods
xlat
jmp
and
mov
sbb
div
cmp
push
out
repnz
pop
jge
mov
int
addr16
mov
stc
and
xchg
test
mov
les
mov
dec
xchg
lea
imul
mov
inc
test
inc
test
retf
sub
adc
dec
imul
sahf
ja
jae
push
cmps
inc
add
(bad)
lds
mul
pushf
(bad)
sahf
pop
sub
xor
in
xor
mov
ror
jl
mov
iret
jno
xor
xchg
cmp
inc
push
xchg
and
jl
ja
retf
clc
add
sbb
mov
or
sbb
adc
test
mov
and
adc
and
fild
rcr
ret
ja
and
not
test
xor
add
jecxz
inc
data16
(bad)
mov
or
test
push
loope
sub
fdiv
rcr
rcl
shl
ret
or
adc
test
aas
pop
push
or
lahf
push
jge
cmp
adc
inc
bound
inc
les
dec
call
out
or
inc
out
inc
or
mov
(bad)
pop
icebp
lock
fldenv
loope
daa
and
inc
jae
adc
lahf
xlat
mov
popf
std
push
add
rol
mov
and
push
aaa
pop
shr
fisubr
or
or
mov
or
inc
imul
push
pop
and
ret
sub
mov
out
pop
jae
fist
xor
int
js
ret
in
add
cmp
push
popa
shl
ds
sbb
daa
pushf
jo
out
mov
dec
inc
test
push
fs
xchg
js
cmp
(bad)
mov
cmp
or
test
(bad)
lock
jae
rol
lahf
or
scas
add
and
leave
mov
data16
ja
lods
ret
and
add
stos
adc
dec
sbb
aad
xor
(bad)
xchg
or
dec
imul
lds
cmp
dec
and
fwait
jno
cwde
in
or
ret
popa
sar
fwait
stos
xchg
dec
imul
pop
das
retf
sbb
icebp
push
fwait
add
mov
inc
mov
test
push
xchg
sti
pusha
fsub
xor
js
aam
test
cdq
pop
sub
jg
aas
(bad)
sar
mov
mov
out
popf
xchg
inc
sub
test
push
mov
or
mov
fmul
mul
lods
pop
repz
movs
and
lea
popa
enter
push
adc
pop
fstp
xchg
shr
loop
mov
std
rcr
add
jno
sbb
xor
dec
sub
jae
out
push
pop
push
shr
sub
out
mov
iret
adc
jns
(bad)
cdq
in
jp
ret
pop
sbb
mov
mov
push
xchg
(bad)
stos
jnp
shl
mov
sub
repz
ficom
mov
xor
stos
jnp
mov
push
or
aas
mov
cmp
int
jb
xchg
cmp
or
fs
mov
cmp
mov
loope
loop
cmp
cli
into
test
pop
jae
sti
cmps
icebp
sbb
push
pushf
push
xchg
cli
leave
mov
sbb
loop
lock
add
and
rol
pop
mov
in
xchg
mov
mov
fwait
mov
addr16
arpl
cmp
adc
sar
or
sbb
pop
mov
call
push
fiadd
imul
test
or
je
stos
and
mov
jne
cmp
stc
cmp
adc
sub
out
mov
mov
jns
gs
sar
loopne
add
out
pop
test
xor
ins
ins
xor
or
pushf
push
push
aad
push
cmps
nop
jns
jae
mov
mov
jo
mov
jge
mov
movs
sbb
xor
jmp
lahf
in
rcl
push
aaa
mov
sbb
retf
jl
popa
adc
inc
imul
inc
in
and
inc
jmp
cmp
movs
out
out
mov
test
pop
and
test
push
push
pop
and
mov
dec
sbb
jle
push
stc
outs
lods
cmp
xchg
sar
xor
sbb
aaa
sahf
test
pusha
mov
daa
pop
mov
mov
jns
mov
add
xchg
sbb
scas
xlat
jecxz
ret
push
es
push
pcmpgtb
push
dec
fidivr
(bad)
mov
jno
dec
and
jae
jo
adc
xchg
dec
sbb
retf
mov
(bad)
ins
nop
retf
pushf
and
jle
lahf
mul
jmp
xor
shr
xor
sub
xchg
push
xor
push
aaa
ret
(bad)
fnsave
es
pushf
mov
outs
sub
push
fucom
or
rol
in
adc
lock
cli
cmp
call
movs
mov
mov
ror
pop
bound
push
jl
rcl
popa
inc
adc
mov
in
shr
xchg
fldenv
bound
cli
cmp
cld
imul
loop
and
pop
fs
mov
pop
repz
add
stos
arpl
repz
int
call
push
jno
in
test
mov
inc
cmp
in
sbb
and
lahf
fyl2xp1
push
or
movs
imul
pushf
retf
loopne
dec
push
iret
scas
pop
mov
adc
push
call
aad
dec
jge
pop
or
push
aaa
test
fild
cmp
add
js
std
mov
out
push
mov
inc
dec
jmp
frstor
test
movs
jno
mov
jle
push
cmp
cli
repnz
loopne
xchg
imul
rol
hlt
movs
leave
mov
jns
jmp
add
in
nop
dec
adc
push
rol
pop
and
out
jle
and
mov
imul
lea
iret
xor
inc
cmp
dec
sub
push
or
push
and
clc
xor
lds
adc
inc
and
push
jno
lds
stc
cmps
mov
fwait
(bad)
popf
das
inc
aad
jp
scas
fiadd
xor
dec
lods
cmp
stc
call
jl
imul
je
mov
das
add
cwde
dec
out
fmul
jecxz
pop
repz
pop
mov
push
mov
push
test
rcr
jbe
jl
mov
arpl
leave
or
xor
mov
or
lock
lods
ins
sbb
repz
push
add
or
push
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
add
