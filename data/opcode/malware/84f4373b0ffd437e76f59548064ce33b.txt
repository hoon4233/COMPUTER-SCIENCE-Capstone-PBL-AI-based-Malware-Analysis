fwait
sbb
loope
dec
movs
test
fwait
or
aas
sbb
lds
ret
and
sbb
test
std
mov
aas
fstp
pop
dec
(bad)
out
or
xchg
dec
and
sahf
mov
pop
xor
lock
sahf
aaa
inc
mov
jmp
popf
repnz
test
or
push
repz
test
push
xchg
ins
(bad)
das
mov
dec
xchg
xor
sub
push
out
hlt
mov
rcr
aad
jp
addr16
fdiv
adc
sbb
fisubr
cmp
sub
fstp
movs
xor
into
inc
in
mov
inc
js
sbb
(bad)
push
fld
jp
pop
cs
or
in
mov
xchg
pop
sub
lock
adc
dec
mov
and
ret
jno
data16
pop
pop
inc
or
adc
outs
es
or
add
dec
or
mov
jae
mov
adc
xchg
lock
mov
outs
(bad)
pop
sbb
(bad)
icebp
out
aad
loope
sub
mov
pop
push
dec
add
fnstcw
mov
aam
sbb
pop
dec
jge
retf
mov
mov
cli
jbe
push
xor
sub
mov
aaa
inc
shl
xor
dec
sbb
sub
test
and
arpl
xchg
enter
mov
jbe
jp
mov
jg
xor
mov
mov
add
inc
clc
out
call
cmp
outs
and
pop
shl
pop
pop
and
inc
or
aas
ins
daa
dec
add
sub
xor
push
sbb
push
arpl
cmps
cdq
mov
(bad)
mov
ss
stos
add
hlt
mov
pop
jo
fst
mov
pop
pop
push
into
repz
ins
mov
je
xchg
push
or
rcr
cmp
aam
retf
ret
or
aam
or
jmp
jb
dec
loop
call
sub
mov
repz
pop
je
lods
dec
add
cmp
(bad)
mov
fcomp
aaa
xor
pop
inc
rol
sbb
sub
adc
push
call
pushf
mov
pop
push
pushf
bswap
sete
setge
lea
mov
pushf
pusha
mov
xchg
pushf
pop
movzx
jmp
inc
call
mov
cmp
xor
sbb
pop
or
bound
push
sbb
jno
jne
dec
push
aas
ja
add
das
lods
out
jle
push
js
sub
loopne
test
jle
in
mov
ins
cwde
mov
rol
shl
imul
ins
mov
outs
xchg
stos
dec
pop
ja
(bad)
and
add
clc
xlat
add
jb
in
das
psadbw
xchg
jge
ss
sub
or
sub
sbb
outs
call
sub
jmp
dec
xchg
jecxz
ficom
aaa
sbb
leave
ret
imul
in
test
xor
jl
adc
sahf
movs
xor
or
lock
test
pushf
imul
pusha
lea
jne
movzx
pushf
movzx
mov
pusha
pushf
push
lea
jmp
scas
in
pop
mov
mov
push
std
std
out
fiadd
inc
lods
enter
mov
or
test
sub
movs
cld
aam
cmp
jg
pusha
test
outs
jge
cs
ja
scas
ins
jo
xor
and
ficom
pop
mov
add
or
sbb
xor
(bad)
mov
scas
mov
cmps
inc
ja
push
and
cmps
fstp
ins
inc
int3
stc
test
or
mov
fcom
shr
mov
enter
sub
pop
xchg
push
addr16
add
aas
sahf
mov
inc
sub
addr16
sbb
cmp
and
cmp
js
aad
icebp
icebp
cmps
out
(bad)
fidivr
(bad)
ins
push
mov
pusha
push
mov
pushf
pushf
push
lea
jmp
mov
bt
bt
lea
jno
test
pusha
push
push
call
inc
jmp
xchg
push
pusha
pusha
mov
jmp
call
cmp
adc
fwait
(bad)
add
movs
cmc
mov
out
test
inc
mov
xor
inc
jg
cdq
addr16
je
push
inc
pop
jnp
fst
cmp
lods
ret
out
gs
mov
jge
pop
push
mov
bnd
or
adc
sub
and
add
fdiv
push
mov
cdq
icebp
mov
sbb
mov
push
out
dec
lods
dec
data16
fild
fdivp
or
dec
cli
sub
push
pop
div
jl
aad
pop
(bad)
out
ror
cmps
and
dec
or
cmp
outs
ins
in
enter
psrld
arpl
add
adc
sub
bsr
and
bswap
add
bt
neg
mov
rcr
add
adc
inc
mov
pusha
jmp
enter
mov
ins
or
inc
movs
push
adc
dec
add
push
sbb
imul
mov
sbb
cmp
cs
xor
pop
loop
addr16
cmp
ds
inc
imul
mov
mov
test
cmp
cmps
xlat
aaa
enter
adc
and
aas
bnd
fsubr
pop
xor
popf
mov
mov
in
jp
in
test
loopne
cmp
inc
pop
adc
xor
cmp
inc
pop
test
dec
dec
(bad)
in
stos
xchg
iret
dec
dec
gs
push
push
pop
adc
(bad)
mov
fcmovnbe
cdq
fxch
jle
add
ret
mov
pusha
jmp
jmp
add
dec
outs
popa
fs
imul
add
push
clc
mov
test
cmp
mov
lea
jne
cmc
test
clc
pushf
sub
push
push
push
lea
jmp
xchg
dec
cmp
pop
adc
push
imul
adc
or
(bad)
pusha
sub
mov
pusha
xchg
das
and
lods
pusha
push
mov
xor
(bad)
mov
test
inc
not
cmps
push
inc
inc
sub
movs
push
inc
xlat
std
loope
loop
push
jmp
jmp
add
mov
popf
shl
icebp
xchg
jmp
inc
imul
push
mov
adc
xchg
cdq
or
ins
adc
or
gs
ficom
push
(bad)
ror
pop
lahf
loopne
pop
pop
jns
cli
push
mov
movzx
cwde
pusha
mov
movsx
pushf
movzx
lea
push
push
push
pushf
mov
call
pushf
mov
mov
pusha
mov
push
pushf
lea
jmp
lea
je
call
pusha
cmp
repnz
mov
lea
jne
jmp
pushf
mov
jmp
lea
mov
push
mov
mov
mov
lea
jmp
cmp
fnsave
mov
mov
mov
sub
push
adc
es
add
and
andnps
pop
aam
pusha
cmp
push
lods
mov
in
mov
movs
pop
rcl
sbb
imul
iret
mov
cwde
xor
idiv
mov
test
rcl
test
loopne
dec
mov
xchg
and
xlat
push
add
loopne
dec
leave
mov
jmp
push
sti
fdivr
fdiv
loop
mov
call
jb
jnp
daa
and
sbb
xor
sbb
cs
test
pop
je
scas
out
lods
cld
mov
scas
ins
mul
or
jno
cmc
push
mov
nop
cdq
neg
push
jmp
loopne
mul
mov
div
outs
jnp
shl
clc
push
mov
out
mul
mov
frstor
push
pop
aaa
fist
push
push
loop
xchg
xor
jno
scas
shr
cmps
popf
sbb
push
mov
adc
fadd
pop
(bad)
in
mov
shl
ror
add
push
not
push
(bad)
pop
div
push
mov
cdq
out
push
inc
mov
test
js
pop
mul
mov
mov
test
push
pushf
in
loope
neg
push
ja
daa
sub
add
add
test
pop
test
ret
not
push
jg
lods
mov
push
sbb
push
xchg
imul
push
sar
cmp
or
(bad)
mov
test
lods
rcr
adc
push
idiv
cmp
sbb
pop
pop
push
adc
sbb
in
push
bound
fsub
sub
cdq
xchg
cs
or
and
(bad)
ins
fcom
and
xchg
les
(bad)
push
push
loope
mul
push
jne
mov
mov
mov
push
cs
jle
sub
hlt
xchg
push
pop
out
neg
push
add
sub
add
mov
out
loop
mov
adc
lds
mov
inc
imul
mov
dec
hlt
hlt
call
test
push
xor
(bad)
addr16
mov
cmp
mov
fadd
leave
pop
in
imul
ins
mov
sahf
xchg
popa
xor
mov
inc
or
jp
mov
fcom
call
xchg
fdivr
push
inc
sbb
push
dec
jno
and
(bad)
ins
and
fldenv
mov
(bad)
adc
mov
ins
sub
and
loopne
lock
int
in
cmc
call
mul
push
dec
mov
push
pop
add
sub
ss
loope
rol
(bad)
pop
test
cmps
push
mul
push
mov
jno
fldl2t
jae
mov
mov
neg
sbb
or
mov
mov
push
das
cmp
push
push
retf
idiv
push
lahf
xor
div
jns
data16
out
mov
xchg
(bad)
xchg
fld
mov
mov
mov
mov
pop
adc
popf
mov
mov
jg
cmp
pop
rcl
push
cdq
lods
xchg
ffree
xchg
and
mov
stc
leave
test
icebp
idiv
or
sti
jns
test
adc
inc
xchg
movs
xchg
neg
mov
div
pop
movs
jns
sub
xchg
mov
int3
or
jns
test
scas
pop
mov
shl
aas
mov
mov
or
add
pushf
bt
add
mov
push
pusha
pushf
lea
jmp
lea
jne
lea
mov
lahf
mov
call
jmp
mov
pushf
push
ret
cmp
push
lea
ja
inc
pushf
pushf
inc
inc
mov
call
push
clc
test
sub
pusha
push
lea
jmp
stc
cmp
cmp
pusha
pushf
call
pusha
push
pushf
call
lea
jne
stc
bsf
neg
bsf
xor
inc
adc
pushf
mov
rcr
dec
adc
clc
add
rol
rcl
shl
rcl
mov
bt
test
call
push
dec
dec
dec
dec
inc
push
cs
ins
add
or
loopne
add
add
mov
mov
push
pop
mov
push
ret
push
jmp
pusha
cmp
jmp
cmp
fimul
nop
pop
scas
mov
mov
aad
mov
cmp
lock
push
das
je
(bad)
pop
mov
inc
popf
ja
pop
or
and
sbb
xor
jmp
push
sub
sub
and
cmp
adc
aaa
push
dec
pop
adc
imul
out
cmps
in
jns
icebp
ret
cwde
sbb
adc
mov
icebp
sti
mov
mov
aaa
and
adc
lea
call
pop
movs
push
daa
mov
jno
push
dec
push
dec
sbb
push
mov
or
test
iret
test
mov
and
push
shr
xchg
shr
iret
mov
xor
sti
lds
and
arpl
dec
xchg
sub
add
mov
pushf
mov
cmc
and
mov
sbb
mov
cs
jne
mov
cmp
mov
ficomp
mov
test
test
stc
push
je
in
outs
vcmpss
sbb
hlt
adc
xor
cmp
adc
cli
js
jo
loop
jmp
shl
and
lea
jae
push
push
jmp
jmp
jmp
pop
idiv
dec
mov
jno
call
sti
test
rcr
(bad)
xor
out
cmp
xchg
pop
sbb
jae
ja
ins
pop
push
popa
cmp
push
xor
ins
test
pop
aaa
js
inc
mov
or
pop
xchg
dec
dec
jb
jo
movs
jg
sub
xor
xchg
fsub
push
adc
aas
and
pop
cmp
xor
jmp
js
add
push
mov
jb
inc
cmp
test
push
(bad)
jge
pop
(bad)
rcl
enter
daa
aas
jp
sbb
mov
imul
and
push
dec
jle
rcr
in
add
jl
clc
neg
bt
bt
xor
push
jmp
jne
gs
xor
fs
ins
add
sub
sub
xchg
xchg
add
retf
inc
not
inc
rcr
jmp
(bad)
(bad)
mov
jno
outs
xchg
fcom
mov
xchg
rcl
fwait
lock
cmps
inc
mov
idiv
mov
push
ror
fwait
lahf
mov
scas
and
push
cwde
test
push
je
inc
(bad)
mov
jno
(bad)
pop
push
adc
ret
loop
int3
loope
bound
pop
and
(bad)
jecxz
push
cwde
or
imul
cdq
cwde
fs
je
inc
(bad)
shl
dec
mov
mov
xchg
lods
jecxz
sti
ins
call
adc
mov
iret
lahf
mov
jb
lea
aad
push
pop
inc
iret
push
dec
push
xchg
inc
jne
and
fiadd
inc
bound
jno
movs
ss
and
and
je
cmp
add
stc
push
cmp
pushf
push
lea
jb
bt
pusha
pusha
cmp
lea
jp
jae
jmp
pushf
lea
call
call
clc
test
cmp
push
or
pusha
pushf
call
loop
jb
lea
jno
sub
sbb
push
shl
pop
pop
pop
adc
dec
add
sub
icebp
sti
mov
test
xchg
add
in
sub
inc
rcr
mov
xor
int
mov
xchg
adc
(bad)
iret
shl
mov
sbb
mov
shl
in
pop
cmp
or
mov
push
loop
mov
in
loop
mov
mov
pop
inc
push
dec
out
icebp
(bad)
mov
pop
dec
jne
jmp
cs
call
xor
inc
(bad)
out
jg
or
mov
add
scas
fsub
cmp
add
sbb
jge
jne
jne
imul
xor
and
(bad)
mov
mov
je
inc
mov
pop
adc
dec
jle
xchg
fldcw
dec
push
pop
mov
std
mov
xchg
retf
call
mov
pop
shr
(bad)
jge
xchg
inc
pusha
jg
lahf
ins
ja
pop
pop
rol
lea
mov
push
mov
jecxz
jno
add
xlat
adc
cld
mov
mov
aad
and
pop
pop
dec
sub
lock
mov
retf
cli
jle
out
in
mov
rcr
and
ins
cmp
movs
in
xchg
inc
dec
add
sbb
pushf
mov
push
push
push
lea
jmp
mov
pushf
push
push
ret
xchg
fld
popa
pop
inc
mov
pop
sbb
inc
das
push
dec
pop
push
push
jne
push
push
(bad)
mov
cld
in
fistp
pop
iret
enter
pop
sbb
imul
push
inc
push
xor
movs
push
jbe
mov
xlat
lahf
fcmovne
or
out
stc
mov
sbb
jecxz
icebp
inc
mov
inc
mov
ret
inc
cmps
cmc
ret
test
mov
dec
dec
(bad)
adc
mov
cdq
test
fimul
push
push
addr16
adc
mov
ror
jge
(bad)
pushf
shl
and
test
jno
jb
jo
(bad)
xchg
mov
rcl
fstp
sub
xchg
faddp
mov
xchg
loop
lahf
mov
fimul
int
nop
imul
xor
es
xor
pop
pcmpeqb
or
(bad)
mov
or
cmp
add
adc
inc
xor
retf
ror
mov
nop
pushf
aaa
dec
aad
imul
pusha
mov
ret
ins
loope
in
mov
or
jge
xor
mov
scas
jmp
into
push
ins
cmp
jae
shr
add
addr16
adc
add
inc
retf
push
mov
xor
cmp
lock
cmp
call
movs
in
bound
and
jge
int3
(bad)
mov
and
jbe
or
and
jae
enter
call
mov
or
mov
lea
je
jmp
cmc
cmp
mov
or
call
pusha
call
pusha
sub
jmp
fsubr
xacquire
push
dec
daa
outs
adc
push
movups
imul
and
push
sbb
outs
sub
shl
jo
cdq
fwait
pop
ror
lods
inc
and
enter
xchg
pop
rol
fadd
dec
mov
mov
inc
mov
sbb
push
mov
xlat
(bad)
idiv
adc
dec
pushf
ins
pop
test
jle
je
stos
sahf
cld
in
loopne
in
push
and
mov
sbb
xor
jmp
out
imul
push
sbb
(bad)
loop
imul
cmp
cmp
or
or
add
xor
call
sub
adc
sahf
je
jmp
jle
mov
rol
int3
dec
push
push
das
pop
dec
or
cdq
mov
out
popa
and
jp
movs
sti
adc
out
shl
or
loop
stos
mov
aad
jno
(bad)
cmp
cmp
fiadd
xchg
sub
and
inc
pop
cmp
lock
and
loopne
pop
push
loop
in
test
cmp
adc
jmp
mov
and
out
lods
push
sub
push
nop
rcl
xor
loope
mov
inc
fdivrp
lods
jmp
jmp
jg
das
cmps
push
inc
dec
adc
leave
inc
mov
cmp
rcl
jo
adc
push
push
pop
out
rcl
mov
repnz
data16
sbb
scas
add
push
sub
jmp
lea
je
call
add
jno
lahf
(bad)
(bad)
add
mov
(bad)
popf
cmps
ins
pushf
idiv
cdq
fnsave
ficom
stos
xchg
test
scas
sahf
ficom
stc
outs
and
icebp
idiv
cmc
adc
sbb
hlt
pop
cli
xor
cmp
jbe
sub
sbb
push
int
fcmovnu
shr
cdq
rol
lea
mov
out
(bad)
test
sbb
out
std
in
loopne
mov
mov
lock
imul
movs
dec
stos
push
inc
(bad)
mov
in
jp
(bad)
jp
pop
jb
test
mov
loop
xchg
inc
inc
jbe
dec
inc
pop
adc
or
mov
loope
movs
cld
(bad)
xchg
movs
(bad)
lods
add
sahf
mov
jno
ror
outs
mov
and
(bad)
xor
pop
adc
inc
mov
mov
jg
bound
ficom
sbb
cmp
pusha
nop
(bad)
mov
pop
adc
jge
mov
movs
dec
data16
js
sbb
push
sbb
outs
push
mov
mov
push
fist
dec
add
pushf
out
mov
mov
fisubr
out
fist
adc
push
retf
pop
data16
mov
pop
adc
xchg
stos
inc
and
inc
shr
loopne
int3
inc
test
pop
sub
sub
or
arpl
mov
adc
inc
sti
cli
aam
jnp
aas
js
add
jno
adc
and
or
cwde
stos
icebp
sub
xor
call
push
jp
push
push
push
ret
mov
loopne
test
jno
add
pop
adc
xor
inc
add
or
and
adc
loope
dec
cmp
mov
xchg
jmp
xchg
ror
push
sub
or
adc
xchg
test
cmp
repz
mov
or
jbe
mov
rol
mov
popa
out
retf
loopne
fwait
xchg
jns
je
cmp
or
inc
movs
out
rol
inc
(bad)
loope
imul
clc
mov
dec
ins
mov
lds
add
push
inc
add
and
cmp
dec
ror
dec
lock
mov
cmp
cmp
loop
sub
repnz
or
cs
push
cmp
dec
cs
cs
adc
adc
and
inc
pop
pop
add
daa
push
mov
and
xor
fldcw
and
or
jnp
sub
(bad)
jmp
retf
inc
cmp
(bad)
push
movs
xor
push
mov
das
sub
fs
repz
cld
lods
in
add
out
rcl
mov
je
push
movs
cmovl
ins
and
pop
(bad)
aam
xor
scas
cmps
stos
in
mov
sar
ins
in
jge
int
rol
mul
test
clc
pusha
add
pushf
lea
je
jmp
lea
je
cmc
sub
pusha
mov
push
cmp
push
pushf
push
lea
ja
push
push
push
pushf
imul
jmp
rcr
jno
sbb
inc
push
xor
sub
xor
adc
je
inc
or
lods
nop
(bad)
aaa
add
add
inc
push
lods
jns
imul
mov
sub
and
dec
ins
test
lods
int3
loope
daa
icebp
mov
fcomp
push
sbb
jge
arpl
(bad)
mov
push
push
pop
mov
scas
call
push
lea
or
cmp
mov
add
(bad)
fwait
and
xor
inc
retf
cmc
scas
popf
ficom
arpl
and
stc
aaa
mov
mov
std
mov
add
add
setns
not
lea
pusha
push
jmp
sub
push
lea
jmp
jmp
pushf
mov
mov
pushf
push
ret
bt
mov
pushf
clc
stc
pusha
add
mov
mov
stc
clc
movzx
stc
cmc
shld
or
mov
cmp
test
test
add
mov
bt
mov
mov
bt
mov
test
mov
push
lea
je
clc
clc
bt
cmp
add
jmp
call
lock
jno
jp
dec
add
mov
mov
lods
push
neg
jmp
aam
lea
xor
mov
xor
adc
pop
jmp
xchg
xchg
sub
retf
adc
clc
and
xchg
inc
mov
jge
dec
push
loope
mov
mov
and
or
in
icebp
movs
xchg
jl
adc
mov
adc
xchg
lea
test
dec
ret
imul
pop
push
mov
xor
mov
enter
(bad)
rcl
fcomp
pop
inc
int3
or
push
in
pop
sbb
push
rcr
rcr
add
mov
lahf
aaa
sub
clc
shl
push
aad
push
aaa
seta
push
ror
sub
shld
aas
push
bsr
bswap
mov
cmp
bt
stc
test
jmp
lahf
data16
jmp
lahf
mov
sub
enter
es
push
add
and
repz
jge
sub
add
xchg
in
and
aad
cld
std
cvtdq2ps
sub
in
cmp
cmp
(bad)
cmc
and
into
xchg
push
mov
sub
fwait
repz
push
push
adc
inc
jl
clc
adc
fldcw
pop
xchg
sub
xor
movs
sub
(bad)
pop
loopne
dec
xchg
aad
or
sbb
iret
loope
xchg
ins
or
dec
mov
lock
mov
imul
stos
or
movs
movs
or
pop
push
sbb
lods
das
cld
in
adc
call
mov
cmp
aaa
js
dec
and
js
jge
arpl
imul
rcr
mov
(bad)
iret
sub
js
inc
or
pop
or
jnp
pop
dec
pop
and
push
(bad)
repnz
scas
fcom
mov
fisubr
xor
loopne
cli
ficomp
call
ret
clc
jmp
pop
pusha
mov
les
pop
rcr
fcomp
div
js
lods
sbb
inc
push
push
dec
iret
xchg
sbb
cmp
fist
mov
(bad)
add
or
cmps
in
xlat
pop
add
add
clc
jmp
clc
(bad)
mov
sub
in
cmc
mov
sbb
cmps
cmp
add
ins
push
jns
sub
jge
mov
aam
cli
int
rcl
adc
sar
jae
into
outs
pushf
outs
stos
pop
retf
rcr
xchg
adc
sub
adc
aam
sub
rcr
idiv
repz
inc
arpl
imul
jne
xor
or
sbb
cmp
dec
into
sar
sbb
ins
jge
xor
jo
mov
pop
scas
push
inc
leave
rcl
movs
stc
les
xor
js
pmaxub
add
aam
(bad)
iret
or
shr
test
push
cld
imul
push
sub
ret
push
adc
jo
push
inc
and
pop
(bad)
push
fadd
adc
aaa
je
fsubr
pop
js
add
ja
out
pop
cmp
pop
adc
mov
xchg
es
push
mov
in
mov
daa
inc
lahf
xchg
lods
add
or
pop
pop
sub
stc
mov
mov
repz
mov
adc
push
pop
stos
xchg
cwde
sti
int3
out
je
dec
inc
push
shl
addr16
in
in
cmps
in
ret
iret
dec
pop
fnsave
fild
ins
popf
clc
test
pop
sbb
icebp
jmp
pop
pop
(bad)
fst
xor
jge
or
inc
(bad)
fisttp
lea
mov
mov
not
lahf
lea
mov
push
pushf
xchg
lea
pop
pushf
mov
mov
pop
pushf
lea
mov
call
pushf
mov
pushf
mov
pushf
lea
jmp
cmps
loope
data16
push
data16
xor
aaa
arpl
or
lods
push
sbb
jne
push
iret
outs
or
std
or
sbb
push
push
inc
scas
jl
int
sbb
fmulp
aam
(bad)
xor
cli
push
int
pop
xchg
mov
jl
or
jge
jbe
maxps
push
mov
pop
inc
xor
jno
fdiv
jb
sbb
ds
dec
cmp
stos
cmps
inc
push
scas
lods
into
or
or
ins
pop
sbb
jmp
xor
jle
clc
out
scas
xchg
adc
or
jg
test
fmul
inc
jmp
or
xor
cmps
popf
cmp
mov
jg
rcl
add
add
mov
neg
add
cmovl
das
fnstcw
or
stc
in
sbb
and
cmc
sub
int3
out
jp
pop
and
add
sbb
in
dec
ja
mov
lds
cvttps2pi
jae
xchg
lods
enter
out
xchg
adc
mov
mov
adc
cmc
stc
mov
inc
add
jbe
das
mov
inc
pop
xlat
and
add
bound
add
cmp
cwde
sar
nop
sar
in
xchg
sbb
add
int3
cwde
fcom
pop
cmp
bound
movs
cwde
push
push
daa
or
push
cs
popa
sbb
sub
sub
adc
stc
mov
aad
jecxz
mov
call
jne
lds
push
test
or
xor
fcmovne
int3
mov
inc
jecxz
cdq
sbb
jmp
and
lods
xchg
ffree
cli
mov
movs
mov
cmp
jp
cmp
jae
repz
mov
and
imul
stos
pop
jg
and
call
lea
jne
pushf
push
inc
pushf
lea
jnp
pushf
inc
pushf
lea
jmp
call
call
call
setns
call
fst
inc
hlt
test
pop
mov
mov
add
mov
movs
cmp
retf
mov
(bad)
test
pop
pop
ror
mov
xchg
sbb
ror
add
pop
and
stos
call
retf
mov
pop
out
and
or
mov
or
xor
mov
mov
mov
dec
iret
mov
test
fisttp
shl
mov
loope
lea
ror
xchg
fisttp
rcr
pushf
nop
push
frstor
sub
fisttp
inc
xor
mov
pop
fisttp
and
xchg
sbb
ror
test
(bad)
mov
mov
(bad)
repz
inc
dec
jg
aam
fst
inc
sub
dec
adc
fisttp
inc
xor
repz
fisttp
shl
push
fmul
mov
stc
push
mov
pop
fisttp
mov
fst
inc
and
fisttp
inc
xor
lea
ror
add
leave
mov
call
add
pushf
lea
ja
pushf
add
test
cmc
bt
or
pusha
call
ret
ds
mov
and
leave
test
(bad)
and
jge
inc
cs
inc
inc
into
or
das
shl
loope
mov
repz
fadd
sbb
sbb
addr16
mov
dec
xor
hlt
shl
mov
in
mov
inc
push
adc
inc
ss
les
mov
into
mov
mov
jmp
inc
fisttp
call
mov
dec
dec
test
rcr
test
test
retf
loope
mov
mov
pop
and
adc
add
add
jnp
ret
ins
sub
cmc
push
pop
push
jmp
mov
pusha
call
ficomp
jle
fisttp
inc
sbb
inc
push
add
xor
pop
das
sub
xchg
add
and
jmp
shl
xlat
hlt
ss
inc
xchg
and
inc
(bad)
std
lds
add
(bad)
jb
imul
add
adc
cmp
and
aas
push
mov
movs
push
pop
cld
hlt
and
clc
adc
neg
mov
mov
clc
push
test
call
(bad)
xchg
jge
cdq
cmp
dec
push
dec
push
int3
cmp
adc
lock
adc
shl
push
adc
xchg
cmp
icebp
lahf
aad
push
popf
pop
push
push
fisubr
retf
mov
dec
xchg
xchg
dec
(bad)
cwde
dec
sub
pop
(bad)
(bad)
xchg
or
mov
sbb
pop
ret
into
movs
test
jae
(bad)
fsubr
(bad)
stos
mov
int3
mov
popa
and
jge
jno
fmulp
test
das
adc
ja
sub
jl
leave
push
xchg
jge
scas
jmp
aam
push
call
add
pushf
lea
jmp
mov
mov
lea
call
pushf
lea
jmp
mov
cmp
repnz
in
sbb
xchg
imul
icebp
mov
sub
pop
mov
push
cli
or
lds
daa
outs
aas
jp
mov
cli
xchg
adc
retf
sub
loopne
cmp
adc
pop
jb
mov
ret
mov
mov
mov
add
out
jmp
out
stos
mov
(bad)
popf
sahf
sbb
lods
sub
cmp
cmp
push
(bad)
test
dec
imul
pop
sbb
dec
cmps
cwde
adc
in
aam
lea
push
cmp
mov
cld
movs
lahf
sbb
mov
in
(bad)
mov
sbb
lds
aaa
pop
pushf
test
test
jmp
clc
cmc
call
lea
jae
xchg
rol
rcl
not
mov
add
dec
mov
shrd
adc
mov
cmp
xor
jmp
call
add
pusha
pushf
pushf
lea
jmp
cli
in
pop
fwait
cmp
ret
aas
frstor
(bad)
sub
(bad)
popf
int
(bad)
in
test
adc
mov
call
mov
lods
xchg
leave
div
add
cmps
pop
cs
movs
and
push
inc
icebp
das
jl
pusha
imul
mov
aad
adc
int
icebp
xlat
es
push
imul
mov
fwait
xor
clc
pop
add
jp
add
je
fsub
jl
mov
sahf
(bad)
cld
jnp
xor
xchg
sahf
(bad)
mov
push
outs
js
add
jb
pushf
mov
push
inc
pusha
push
lea
jmp
mov
dec
lea
jno
push
mov
lea
call
pushf
bt
pusha
cmp
call
call
mov
cmp
add
ds
imul
aaa
(bad)
sub
int3
xor
and
in
imul
in
xor
jb
stos
xchg
retf
stos
sub
ss
pop
cwde
cld
mov
data16
cli
sti
aad
in
shl
int
inc
int
add
lea
outs
cmc
dec
enter
imul
add
cmp
or
popf
xchg
int3
dec
inc
jmp
xchg
fisub
jmp
sbb
mov
cmp
mov
ret
adc
pop
fstp
xlat
vmulpd
lods
gs
iret
pushf
std
lods
loopne
popf
mov
lock
rcr
sub
add
cmp
adc
xor
mov
jmp
mov
push
pushf
lea
jmp
ror
mov
xchg
cmp
mov
mov
xchg
jl
adc
pop
fs
jecxz
mov
mov
adc
push
inc
or
(bad)
xchg
les
icebp
das
shl
loopne
rol
fs
pop
pop
xchg
mov
adc
jno
sub
mov
jns
outs
lea
aas
sbb
es
popa
or
(bad)
mov
lds
enter
xchg
fdivr
jg
ret
leave
sar
push
sub
mov
not
pop
mov
adc
push
in
retf
rol
mov
(bad)
in
pop
adc
cmps
shl
std
rcl
cmp
mov
repz
mov
push
add
jge
in
or
inc
push
cmc
nop
rol
and
mov
mov
pop
stc
icebp
js
shl
push
push
dec
mov
retf
call
cld
rcl
sbb
pop
rol
push
adc
inc
mov
mov
sub
mov
xchg
inc
ror
push
add
jo
rol
xor
mov
stc
test
add
xchg
outs
cs
(bad)
push
out
scas
inc
pop
push
ds
out
pop
shl
push
popf
xchg
cmps
ja
lds
stos
shl
push
inc
retf
and
shl
les
or
jmp
rcr
push
sbb
sti
jne
call
cmp
push
push
lods
stos
adc
aam
mov
push
pop
dec
movs
and
(bad)
mov
fcom
or
push
pop
ror
adc
scas
push
mov
pop
test
shl
jecxz
xchg
push
test
inc
stos
mov
adc
int
imul
std
xor
outs
and
pop
mov
loope
pop
and
adc
sub
jge
mov
hlt
std
cld
or
repz
and
push
adc
add
pop
inc
ja
jge
ins
xchg
lods
clc
ja
xchg
sub
shl
dec
adc
ins
mov
fwait
mov
call
clc
jg
sub
inc
ja
pop
dec
mov
dec
je
pop
adc
mov
call
sub
in
xchg
cmp
les
call
mov
xchg
dec
mov
je
enter
rcl
mov
dec
int
push
lahf
jge
in
es
cmp
sub
retf
shr
push
data16
jecxz
jecxz
mov
pop
mov
ds
mov
lods
mov
scas
jmp
pusha
repnz
ins
push
mov
in
mov
rcl
xor
test
jg
mov
lds
push
mov
xchg
les
pop
pop
dec
jp
ret
jo
cmp
enter
es
repz
mov
pusha
call
xchg
neg
btr
adc
push
mov
push
test
bt
test
sub
push
lea
ja
pushf
pushf
rep
movsx
mov
pushf
mov
lea
jmp
inc
pop
enter
jno
stc
mov
idiv
icebp
mov
dec
into
fmul
push
pop
iret
or
dec
jns
out
ins
rcl
jp
add
cmp
mul
cmc
sahf
aam
mov
aam
pusha
add
push
stos
dec
add
xor
push
cmp
push
xchg
jmp
int
stc
mov
or
sar
mov
cmp
adc
fdivr
cwde
out
cmp
xchg
std
xchg
jbe
adc
mov
fwait
sti
mov
pop
adc
mov
pop
scas
push
pushf
dec
push
mov
ficom
(bad)
dec
ins
in
and
push
xor
inc
pop
or
dec
add
push
popa
sub
jae
sbb
jne
push
pop
mov
and
je
call
cmc
push
pop
pusha
stc
cmp
call
mov
lea
lea
mov
pusha
push
mov
mov
push
ret
push
pushf
pushf
push
lea
call
push
pushf
jmp
add
add
cmp
pushf
call
pushf
cmc
cmp
push
push
mov
lea
ja
stc
cmp
pusha
bt
sub
call
ffreep
xor
cmp
daa
outs
sub
pop
pop
(bad)
xor
xor
test
push
jecxz
shl
js
in
in
mov
jecxz
mov
jne
xor
dec
inc
push
inc
cdq
outs
scas
cmp
ins
or
imul
and
cmps
add
jmp
jo
mov
inc
ret
xor
xchg
jbe
add
fdivr
adc
lahf
out
mov
cmp
scas
push
data16
dec
mov
xchg
(bad)
std
lods
mov
pop
ins
and
in
scas
out
mov
mov
xor
mov
scas
push
ret
ret
xchg
aam
or
push
out
mov
sub
stos
mov
jge
xlat
xlat
inc
dec
jmp
les
shl
imul
pop
stos
mov
fs
jae
pusha
pushf
pusha
add
push
mov
pushf
jmp
pop
pushf
jmp
mov
lea
jae
lea
pusha
movzx
pop
movzx
lea
bswap
mov
mov
jmp
push
pusha
push
lea
jmp
call
stc
jmp
push
pushf
call
xor
dec
cmc
sete
mov
clc
cmc
jmp
push
dec
inc
dec
dec
xor
cs
ins
add
clc
bt
repnz
push
push
jmp
mov
mov
seto
inc
mov
mov
mov
jmp
ror
jmp
loop
aam
xchg
cmp
mov
sub
jle
je
jne
(bad)
stc
jmp
faddp
cmp
sub
lahf
ret
xchg
sub
jb
cmp
mov
ror
mov
mov
jle
mul
aaa
iret
adc
pop
ins
lea
div
sbb
push
scas
jmp
test
cmps
pop
or
cmp
sti
jp
xchg
neg
xlat
xchg
(bad)
outs
adc
mov
dec
sub
sub
mov
aas
add
lods
mov
push
sbb
mov
hlt
push
add
pop
pop
aam
mov
ins
cmp
or
mul
xor
mov
shl
jb
xor
dec
add
jecxz
mov
adc
stos
inc
movs
cmps
xchg
js
sub
into
mov
mov
push
pop
xchg
int
test
xor
or
test
pop
mov
push
jae
or
out
(bad)
stc
aam
jmp
test
jmp
fbld
rcl
pop
push
dec
shl
dec
idiv
lock
sbb
push
mov
mov
repnz
xor
pop
loopne
xchg
mul
scas
icebp
mov
stc
sub
iret
add
mov
bt
cmp
lea
jo
push
pushf
lea
jae
cmp
stc
test
add
pusha
jmp
mov
call
cld
lods
inc
jb
cmp
pop
sbb
arpl
ins
dec
push
outs
jg
pop
cmps
pop
lods
pop
imul
pop
sbb
outs
scas
pop
and
leave
cs
dec
test
pop
xchg
xor
xor
xor
sbb
dec
add
inc
or
xor
jmp
push
sbb
sub
sbb
mov
jne
test
int3
das
mov
sub
cli
xchg
loope
sbb
dec
pop
ss
popf
push
inc
sbb
jns
inc
mov
ret
mov
ins
add
pop
mov
sbb
xchg
mov
push
lock
mov
sbb
hlt
cli
xchg
loope
clc
mov
and
dec
pop
js
pop
push
ins
and
sub
(bad)
jne
jmp
bnd
mov
in
idiv
mov
sub
daa
and
sbb
imul
dec
lahf
inc
pushf
das
imul
cmp
daa
cmps
in
mov
xor
and
xchg
push
popf
push
repnz
(bad)
inc
push
mov
jmp
adc
jg
add
xchg
dec
add
fwait
sbb
lock
xor
out
adc
mov
push
jecxz
outs
cmp
xor
sub
sub
or
jns
leave
xor
popa
add
cld
sub
stc
xchg
loope
jae
or
inc
ins
jae
dec
sub
shr
jl
xor
push
sbb
and
or
mov
add
leave
inc
sbb
dec
dec
inc
mov
push
jbe
inc
or
mov
cmp
push
xor
adc
adc
scas
dec
jecxz
stc
mov
mov
mov
pushf
aad
mov
fsub
aam
jbe
add
sbb
sub
mov
lods
imul
inc
scas
in
stos
test
jmp
adc
jge
pop
push
sbb
mov
push
cmp
outs
jns
dec
dec
fcmovnu
fcom
call
adc
and
or
push
and
jmp
jmp
jmp
icebp
add
xchg
jno
and
dec
pop
inc
outs
jg
push
sub
cmp
popa
xor
dec
sbb
(bad)
jo
js
pop
cmp
sub
inc
xchg
data16
ficomp
mov
push
arpl
xchg
fnstsw
xchg
outs
pop
test
cdq
push
inc
mov
(bad)
cli
mov
xchg
rcl
mov
xchg
mov
xchg
std
mov
retf
mov
in
hlt
mov
pop
cmp
and
addr16
ins
dec
fs
and
push
imul
mov
(bad)
mov
or
inc
addr16
adc
jecxz
adc
mov
aad
cmps
mov
lea
call
pushf
mov
mov
adc
pusha
lea
call
pusha
lea
jb
push
push
ret
inc
cmc
call
lea
je
stc
cmp
push
call
dec
push
cld
mov
jno
adc
push
mov
(bad)
mov
jno
jg
mov
mov
jno
push
fisubr
dec
cmp
and
xchg
int
pusha
bound
cmp
dec
cdq
outs
cmove
(bad)
jmp
js
mov
xchg
call
imul
(bad)
jb
mov
xchg
stc
mov
push
mov
cmp
cmp
imul
add
adc
sbb
cdq
push
jbe
xor
or
cli
es
jno
stos
je
das
fwait
push
fisubr
push
mov
sbb
jnp
push
push
jg
mov
rcl
das
test
sbb
pop
cs
push
lds
das
push
lods
xchg
xor
push
fistp
enter
and
cmp
out
mov
dec
retf
cmp
enter
scas
pop
push
jg
jns
sub
addr16
jg
fsubr
sub
sbb
and
data16
push
in
int3
fild
push
rcl
mov
das
cmps
push
ror
pop
shl
jae
mov
repnz
mov
xchg
aad
fcom
ss
das
lds
cmp
cs
push
pop
cwde
fwait
ja
cvtps2pi
push
xor
cld
push
int
data16
mov
(bad)
das
mov
sub
adc
cmp
push
loope
test
push
pop
xlat
aad
jg
fsubr
sar
add
add
push
lock
mov
mov
mov
imul
sbb
mul
in
and
push
xor
dec
add
pop
outs
loope
imul
dec
push
dec
mov
inc
push
push
call
and
add
mov
cmp
xchg
sub
push
adc
jmp
xor
push
cs
mov
mov
mov
movs
pop
stc
or
pop
inc
mov
or
mov
xor
and
movs
movs
and
into
enter
shl
in
add
sub
loope
pop
or
retf
push
mov
pop
aas
sbb
mov
xchg
mov
pop
pop
out
xchg
jge
or
dec
add
es
shl
iret
sub
xchg
(bad)
sub
pop
popf
push
sbb
add
pop
mov
bound
xor
mov
movs
loop
in
sub
inc
inc
mov
movs
out
or
ret
out
xchg
mov
sbb
xchg
jbe
out
xchg
gs
ror
push
int3
loop
cmp
jnp
mov
bound
jmp
iret
mov
mov
and
stos
in
push
cld
sub
mov
push
inc
jne
dec
jb
inc
pop
jbe
sub
mov
inc
les
les
sbb
pop
mov
xchg
(bad)
shr
retf
jmp
and
push
fsubrp
test
sbb
xchg
pop
aam
or
push
mov
and
retf
push
jno
jl
fcom
fistp
cdq
ins
cmps
push
xor
inc
push
pop
xchg
outs
sub
(bad)
cld
adc
push
bound
push
(bad)
mov
push
cmc
or
js
(bad)
mov
inc
push
loop
aad
mov
or
rcl
pop
pop
stos
xchg
fcomp
dec
push
mov
cmps
mov
sbb
push
ins
and
call
pushf
enter
push
push
loop
pop
add
pop
rcr
push
push
(bad)
repz
lock
mov
(bad)
xor
xor
and
jmp
int3
push
mov
inc
jle
pop
jns
xchg
push
adc
sbb
jns
repnz
or
jnp
sub
scas
sub
in
push
test
adc
pop
dec
sysenter
jo
push
pusha
lea
jbe
movsx
shl
jmp
push
push
rep
call
mov
pusha
mov
push
ret
xchg
call
lea
jne
btr
sub
shr
and
mov
stc
clc
or
call
lea
jae
push
jmp
sub
bt
cmp
call
add
inc
gs
outs
fs
gs
imul
add
rol
bt
sub
xchg
or
shld
cwde
mov
and
mov
bt
cmp
xchg
not
neg
mov
clc
bt
mov
pusha
sub
mov
rep
push
call
pushf
lea
jne
jmp
stc
mov
pushf
pushf
bt
rol
push
call
push
push
pop
add
jg
test
bt
pusha
cmp
call
test
clc
test
stc
shl
call
not
pushf
setp
lods
pushf
dec
clc
cmc
pushf
ror
push
push
dec
jmp
mov
rol
and
btr
mov
neg
adc
mov
cmc
sub
cmc
bt
repnz
pushf
pusha
pushf
lea
jne
and
mov
or
inc
cmc
sub
sub
call
inc
lods
inc
ja
cmp
out
adc
adc
jmp
cmp
add
sub
cs
sub
and
or
fist
sbb
sti
stos
in
rcl
pop
lods
bound
push
(bad)
pushf
or
xor
fimul
push
sbb
call
dec
jecxz
jns
cmovno
jecxz
cmp
mov
and
aam
cli
dec
scas
(bad)
jmp
jns
and
rcl
fidivr
cmp
add
inc
std
dec
jo
fs
mov
stc
ror
xlat
push
dec
add
push
rcr
nop
(bad)
leave
in
scas
mov
sbb
aaa
mov
xchg
ror
pop
push
mov
ror
cmp
mov
lahf
(bad)
rcl
(bad)
cld
in
add
retf
cmps
jmp
ret
pop
pop
cmc
cmps
lods
addr16
outs
outs
push
inc
sti
repz
xchg
inc
icebp
ins
out
sub
arpl
mov
call
sub
ret
test
sub
movs
loop
sahf
jae
into
pushf
and
jns
cmp
repz
cmps
daa
sub
mov
dec
dec
ret
data16
arpl
adc
dec
fisttp
push
pop
pop
xchg
mov
aam
mov
cld
xor
fimul
scas
cld
mov
fbstp
daa
and
sub
dec
jno
cmp
jmp
mov
(bad)
push
mov
call
movs
or
mov
jecxz
fist
in
popf
rcr
in
cli
out
test
into
dec
and
add
call
call
sar
pop
dec
icebp
aas
jb
jmp
push
ja
in
shr
xor
xor
stos
jmp
xchg
fistp
xor
sar
stos
test
test
mov
add
outs
das
cld
in
aad
jno
mov
outs
push
sbb
lds
push
add
mov
jmp
or
pop
inc
imul
sbb
jge
xor
daa
mov
retf
inc
dec
or
mov
cmc
push
inc
mov
cmp
pushf
pusha
call
mov
mov
push
pushf
lea
call
push
push
pusha
lea
jae
clc
xor
push
lea
call
pushf
call
stos
push
pushf
lea
jmp
rol
fbld
jno
jnp
cmp
and
dec
jnp
fs
push
push
add
cs
push
out
fnstenv
pop
or
lock
sbb
jecxz
xchg
ja
pop
xor
pop
xchg
mov
popf
add
loopne
out
ja
(bad)
retf
sbb
das
fidivr
dec
in
fcomp
mov
ins
cwde
jae
repnz
sub
fldcw
sbb
cmps
sar
in
test
sub
xor
or
out
rcl
push
mov
xchg
or
mov
dec
or
or
push
adc
(bad)
jp
(bad)
popa
cwde
imul
rcr
xchg
xchg
sbb
jno
daa
mov
xchg
pop
lea
sbb
scas
and
dec
jnp
and
setbe
call
xchg
ret
sub
pusha
cmp
sbb
jnp
push
jo
jo
push
rcr
fstp
push
pop
xchg
pop
push
push
cmps
daa
loop
sub
sbb
cmc
mov
mov
call
pushf
aam
enter
pop
stos
sbb
test
or
test
mov
shl
inc
mov
inc
(bad)
out
fdivr
mov
stos
aas
sbb
les
xor
mov
icebp
xchg
rol
ror
xchg
stos
in
pop
pop
cmp
mov
rcr
mov
cmp
push
mov
pop
mov
dec
pop
push
sbb
push
inc
loop
in
fcmove
sbb
and
xchg
add
dec
inc
or
and
jge
arpl
sbb
enter
sbb
add
out
add
cmc
cmp
jmp
stos
xchg
pop
sub
jno
mov
in
stos
call
leave
dec
test
iret
mov
test
jmp
jecxz
cli
xchg
fisttp
in
vpxor
sti
retf
mov
mov
es
push
push
push
inc
mov
mov
fstp
hlt
into
inc
inc
fst
sub
sbb
stos
call
retf
aad
pop
pusha
jmp
mov
fisubr
adc
inc
dec
adc
sub
movaps
loopne
sub
sbb
lahf
icebp
mov
dec
inc
jmp
(bad)
xchg
call
xchg
shr
scas
sub
push
test
in
cmp
retf
shl
retf
sub
mov
addr16
push
sbb
ret
fs
in
movs
inc
mov
fwait
add
mov
data16
mov
into
cmps
hlt
jne
and
add
shr
ja
inc
aad
add
jle
jmp
jle
pop
sub
cmp
xchg
mov
push
dec
push
neg
pusha
and
jl
hlt
in
in
push
leave
int
pusha
mov
aad
push
adc
cmps
mov
bnd
int
js
loope
dec
pop
adc
les
cld
mov
mov
jae
bound
jno
inc
mov
xchg
rcr
int
lds
mov
mov
and
dec
cs
xor
shl
mov
std
cmps
xchg
lods
loopne
jp
sub
ja
adc
stc
shl
jae
leave
repnz
dec
fwait
rol
or
sbb
mov
sbb
in
dec
sub
js
xor
push
push
fcmove
xlat
out
test
mov
or
adc
sahf
pushf
cmps
cld
rol
popf
xchg
aaa
aaa
movs
mov
ret
outs
arpl
daa
sub
shr
mov
lea
ja
cmp
dec
add
jmp
cmps
out
pop
push
cmp
inc
add
add
sub
inc
add
inc
pop
mov
ins
sahf
push
daa
dec
push
jns
push
or
movs
popf
aad
push
dec
sbb
xor
inc
or
leave
int3
aas
mov
jle
and
int3
dec
(bad)
fnsave
(bad)
in
cli
(bad)
rcl
sub
retf
and
aad
ds
inc
pushf
pop
mov
xchg
sbb
sbb
and
call
pushf
mov
mov
pushf
push
call
clc
pushf
push
xor
jmp
xor
jmp
jb
ja
jae
popa
xor
dec
add
and
adc
ja
push
fcmovnu
mov
and
push
xchg
fisttp
xchg
outs
sbb
mov
inc
je
arpl
sti
es
sub
dec
rol
pusha
or
pushf
cli
aam
and
mov
xor
xor
xchg
mul
sbb
retf
cld
push
out
cwde
mov
icebp
mov
lahf
lods
push
mov
clc
and
mov
inc
pop
pushf
retf
sub
out
(bad)
push
imul
mov
jns
or
lds
and
pop
into
(bad)
retf
test
outs
or
test
lock
test
pop
inc
sub
pushf
cmc
cmp
pusha
pushf
lea
ja
jmp
clc
cmp
pusha
jmp
inc
or
jno
mov
sub
or
ja
bts
stos
cmp
(bad)
pop
xor
ins
and
jmp
test
jae
and
ja
inc
or
sub
xor
js
sbb
sbb
(bad)
ror
jp
mov
xor
sbb
mov
mov
lock
inc
and
mov
xchg
(bad)
int
sbb
push
jle
arpl
add
xor
sub
push
cmp
imul
jge
add
mov
cmp
pop
xor
fs
sbb
push
inc
add
jl
int3
aad
int
loopne
(bad)
jmp
jmp
arpl
js
mov
loopne
pusha
pushf
not
lods
mov
jmp
sbb
lahf
jle
jno
mul
test
or
push
cli
rcr
mov
lahf
fst
jae
add
and
jg
retf
mov
sub
mov
push
push
push
push
dec
xchg
push
ret
and
test
sub
push
dec
or
popa
ins
and
in
mov
xlat
in
mov
not
ffreep
inc
mov
pop
jl
lock
jno
lods
loop
fld
lock
jmp
scas
stos
mov
sub
pop
fsubr
or
fst
dec
mov
hlt
aad
mov
add
push
xchg
sbb
inc
lods
fxch
ror
and
jge
and
mov
and
sub
dec
fisub
ins
xchg
mov
xor
cdq
scas
lahf
int
jo
push
or
test
fsubr
xor
lods
push
dec
movs
out
leave
ret
add
ud0
jns
fcmovnu
(bad)
jnp
xor
aam
sub
pop
lods
cmp
test
pop
call
xor
push
push
xchg
cli
stos
in
add
sahf
fcomp
test
xchg
sbb
pop
scas
xor
ret
ret
in
and
sar
xchg
or
or
ret
pop
scas
imul
inc
lods
je
lods
and
adc
sub
rol
lahf
lods
stos
retf
mov
add
mov
aas
jl
mov
sub
push
cdq
push
adc
adc
jb
stc
enter
fisttp
dec
clc
jo
push
dec
jne
icebp
and
call
lods
fsub
push
mov
test
jg
jo
ret
sbb
repz
xor
or
sub
call
movs
sub
aaa
shr
dec
mov
mov
lods
bound
sub
sub
xchg
ret
mov
rol
cs
ret
inc
pop
sbb
retf
ret
pop
jl
clc
ret
shr
pop
scas
test
xor
(bad)
daa
fistp
xlat
xchg
sub
aaa
popa
xor
sar
cwde
nop
xchg
aad
ficomp
adc
lock
and
push
scas
loopne
jno
cmc
vcmpsd
sbb
add
lods
adc
repnz
and
mov
dec
xchg
repnz
(bad)
push
ds
pop
add
mov
ds
cdq
scas
lods
pop
adc
test
rep
stos
pop
repnz
ret
push
push
aaa
iret
bnd
mov
pop
scas
cld
gs
sti
sbb
or
pop
ffreep
cld
scas
leave
pop
repnz
loope
xchg
inc
cmp
ret
or
fs
fst
mov
mov
ins
push
pop
repnz
(bad)
mov
mov
add
mov
repnz
sahf
xor
lods
mov
xor
test
test
adc
hlt
outs
(bad)
mul
fisttp
outs
aas
neg
pop
jb
mov
outs
in
push
cmps
and
jmp
stos
stos
cmp
sbb
push
retf
aaa
js
sbb
sti
pop
or
aam
das
daa
rcr
cwde
(bad)
xchg
outs
gs
sar
jg
jge
enter
or
or
xchg
mov
or
ja
ja
push
fcomip
ret
test
lea
ja
shl
cmp
mov
sub
adc
not
not
add
neg
bswap
mov
clc
mov
cmc
call
cmc
jmp
and
jno
and
jg
pop
xchg
popa
mov
add
daa
and
inc
push
xor
out
mov
cld
lods
call
mov
cmp
pop
pop
stc
mov
pop
popa
ss
iret
mov
sahf
xlat
fdivr
add
sub
inc
lds
rcr
jbe
pusha
jecxz
push
cmp
(bad)
mov
add
(bad)
jg
inc
pop
ret
push
pusha
inc
xor
adc
movs
mov
cmc
les
lods
cmp
inc
dec
pop
and
data16
and
adc
call
clc
leave
xor
fimul
jle
jl
add
dec
jp
jno
dec
fs
pop
jl
push
add
cmp
out
push
sbb
or
push
(bad)
mov
pop
pop
ja
push
shr
shr
stos
dec
sbb
movs
sahf
jno
(bad)
fstp
movs
xchg
shr
inc
add
mov
ret
(bad)
fadd
and
or
jge
push
(bad)
(bad)
out
out
cmps
and
sub
push
pop
test
jle
test
add
pop
adc
push
add
add
addr16
neg
out
retf
(bad)
mov
inc
push
(bad)
aam
nop
adc
adc
inc
imul
stos
in
mov
cmps
leave
cdq
fisubr
fbld
call
outs
jg
test
sub
loopne
repnz
sub
inc
and
add
mov
cmps
xor
mov
xlat
sbb
aad
inc
popa
mov
fwait
arpl
jns
shl
call
data16
cdq
addr16
(bad)
retf
mov
jns
mov
hlt
sti
mov
fs
shl
adc
dec
add
push
outs
and
icebp
pop
pop
push
sbb
mov
addr16
lahf
hlt
xchg
jne
stos
(bad)
fsubr
xor
sbb
pop
push
pop
daa
jge
int
jp
and
push
pushf
sbb
mov
aaa
aaa
addr16
sbb
sbb
(bad)
call
lea
jne
add
pusha
mov
pop
sub
call
push
adc
mov
push
lea
jae
push
jmp
in
cli
(bad)
je
jno
cmps
jmp
sbb
inc
dec
imul
sub
or
data16
inc
mov
mov
nop
(bad)
mov
enter
lahf
mov
cdq
rcr
add
lods
std
mov
mov
jb
and
pop
iret
pop
int
aam
add
jb
pop
repz
xor
or
lahf
dec
imul
cmp
cmp
dec
repnz
sar
and
add
call
sahf
cs
stc
adc
scas
jecxz
leave
hlt
retf
jp
push
not
inc
je
bnd
dec
jbe
(bad)
aas
jl
movs
test
mov
sti
repnz
fwait
lea
sti
mov
nop
push
aad
adc
inc
pop
mov
sbb
pop
dec
sbb
cs
push
mov
aaa
push
ret
xchg
inc
mov
ins
mov
mov
cmps
pop
es
nop
mov
jmp
lds
jl
inc
or
out
cdq
pop
imul
pushf
scas
hlt
xlat
out
stos
jae
dec
inc
push
sbb
jb
inc
in
mov
adc
adc
call
ret
jns
dec
cmp
jmp
push
sbb
cmp
bound
in
xchg
and
pop
daa
xor
jl
sub
ret
mov
or
popa
(bad)
mov
std
mov
sub
mov
pushf
mov
xchg
inc
in
jbe
jmp
mov
pop
or
mov
test
mov
lods
mov
pop
adc
shl
lahf
add
push
in
sbb
push
repnz
fsub
test
test
pop
sub
pop
adc
push
stc
cld
(bad)
push
out
cmp
adc
mov
dec
clc
pushf
lea
jmp
pop
sbb
jecxz
cmp
inc
push
push
add
adc
or
push
inc
pop
push
push
inc
push
pusha
sub
sbb
ds
add
in
movs
pop
xchg
jle
add
push
fild
xor
inc
xchg
iret
or
cli
jecxz
jae
add
(bad)
or
es
stos
out
out
jecxz
jp
mov
jmp
or
inc
push
xchg
test
sub
push
cmp
dec
pushf
push
sbb
ret
enter
leave
hlt
jbe
fdivr
mov
cmc
in
mov
xor
inc
mov
fstp
fild
and
pop
(bad)
std
sub
lea
call
call
pop
dec
xchg
jno
jno
pop
push
adc
jne
jmp
pop
imul
and
nop
lahf
into
mov
fcom
or
sub
enter
out
and
jo
xlat
in
enter
fs
jne
loopne
retf
mov
cmc
push
aas
and
adc
sbb
push
outs
sub
daa
add
mov
rol
jmp
fwait
cmps
jno
fcomp
add
adc
lods
jl
rcl
sub
mov
nop
mov
sub
sbb
or
sbb
push
jl
cli
stc
jle
cli
in
bound
mov
mov
(bad)
xchg
loope
adc
retf
cdq
ret
xor
jno
stos
push
adc
ds
jb
outs
adc
movs
and
push
shl
psubb
or
in
stos
pop
adc
xlat
jp
xor
pop
jle
por
inc
add
adc
ficom
stc
repz
mov
call
push
push
aad
add
sbb
aas
mov
lea
jne
pushf
lea
jle
pusha
mov
pushf
pusha
push
mov
mov
push
jmp
stc
cmp
call
shl
mov
bts
sub
btr
cmc
push
add
mov
aam
push
aas
lea
cmp
push
cmp
cmp
rcr
sub
pushf
lea
pushf
pushf
lea
jnp
pushf
mov
jmp
lahf
mov
jno
nop
fsub
cli
pop
dec
std
xchg
mov
cmps
jmp
mov
popf
mov
scas
mov
sub
into
push
push
in
push
xchg
sbb
rcr
pop
sbb
mov
test
mov
fimul
aaa
pop
push
sub
add
mov
test
cwde
in
xlat
sahf
pop
mov
mul
xchg
hlt
sar
push
out
(bad)
push
add
fist
outs
cmp
cmp
jnp
push
push
inc
dec
add
mov
jmp
jg
int3
sub
xchg
neg
push
dec
cmp
je
or
mov
add
inc
mov
stc
pushf
cmc
cmp
pushf
lea
jne
setge
rcl
xor
add
shr
call
pushf
pusha
pusha
push
lods
call
lea
mov
call
mov
push
jae
cmp
pop
adc
and
xor
ja
outs
and
cmps
xchg
shl
jg
pop
push
sub
dec
xor
inc
adc
jmp
jl
jo
pop
sbb
jl
enter
push
loope
mov
add
pop
cmp
daa
mov
cmp
inc
je
ja
movs
call
mov
ret
mul
jns
leave
xor
fld
jge
popf
xchg
int3
icebp
js
jb
shl
and
gs
cmps
or
leave
sbb
inc
push
js
push
sti
ffreep
xor
mov
cmps
pop
ret
sahf
aas
and
or
sbb
(bad)
sahf
adc
mov
jnp
push
add
cmps
stc
add
pop
inc
jns
add
aaa
inc
pop
inc
push
mov
adc
movs
sub
mov
rcr
push
sub
call
mov
adc
js
xor
and
jp
or
adc
sbb
scas
mov
mov
pushf
push
mov
lea
jmp
sub
inc
add
sar
mov
sar
sbb
add
mov
pushf
stc
stc
repnz
mov
jmp
clc
push
add
call
call
bt
cmp
test
cmp
push
lea
jae
stc
stc
cmp
cmp
push
jmp
shl
neg
mov
call
mov
pushf
mov
jmp
mov
jmp
add
add
add
cmp
add
adc
add
add
add
mov
verr
add
add
xor
add
verw
add
add
dec
add
add
add
fmul
add
add
add
mov
sldt
add
add
mov
str
add
add
mov
sldt
add
test
push
mov
loope
dec
cmp
dec
mov
stos
dec
mov
in
mov
nop
jno
repz
mov
mov
imul
push
add
cmp
adc
shl
fs
popa
loope
les
fwait
inc
rol
push
cmps
cmp
push
ret
mov
fmul
cmc
jp
rcl
enter
mov
mov
xchg
je
sahf
pop
xchg
push
xchg
in
push
jmp
(bad)
jns
jb
pop
add
xchg
mov
cmp
mov
(bad)
scas
mov
xor
adc
push
pop
in
into
inc
imul
or
pop
mov
aam
sub
xor
stc
loope
or
or
into
pop
(bad)
mov
jle
sbb
movs
xchg
pop
inc
gs
ror
mov
fcmove
lods
call
xchg
pop
xchg
popa
xor
pop
sbb
(bad)
xor
cmps
pop
mov
add
and
lods
arpl
aam
in
stos
js
xchg
movs
call
xchg
mov
adc
sub
scas
(bad)
mov
pop
(bad)
push
sub
mov
mov
popf
rol
xchg
lds
fst
inc
pop
fs
cmp
push
add
mul
xor
sbb
mov
push
adc
pop
push
push
xor
sub
dec
stc
sub
and
fwait
imul
push
mov
add
test
(bad)
inc
and
js
jmp
ins
xchg
push
gs
cmp
cld
or
xor
jo
push
push
hlt
or
test
and
cs
sbb
add
idiv
xor
adc
mov
fcom
cmps
test
gs
ins
out
sub
fbstp
adc
aad
and
call
test
and
cmp
fimul
push
sbb
and
inc
cmc
push
or
inc
test
push
push
push
cwde
inc
inc
mov
cmp
imul
mov
pop
data16
jnp
sub
push
ret
enter
jg
rcr
jns
sub
push
inc
(bad)
int
pop
js
int3
rol
sub
mov
adc
sub
mov
mov
jno
call
pop
push
xchg
addr16
cmp
bound
mov
bound
inc
xlat
jo
popf
adc
bound
popf
leave
test
add
ja
nop
movs
mov
and
sbb
mov
int
mov
push
add
int3
inc
cdq
inc
(bad)
jno
cmp
xor
mov
inc
mov
sub
scas
out
add
mov
into
cmp
cmp
xchg
outs
and
lods
imul
test
xor
jmp
pushf
push
fld
inc
sbb
cmp
sub
lea
je
push
push
pushf
push
ret
lea
call
pusha
pusha
jmp
and
cmp
adc
outs
daa
push
dec
xor
adc
cmp
popa
and
dec
push
push
(bad)
sti
mov
or
cmp
pop
xchg
popa
jmp
dec
scas
daa
fmul
mov
jne
push
lods
xchg
aam
sub
out
test
clc
in
fs
test
pop
dec
jno
xchg
sahf
mov
daa
call
rol
fiadd
mov
cmp
or
call
and
pop
mov
push
daa
(bad)
aas
daa
jge
add
cmc
mov
cmc
push
test
test
cmp
mov
lea
jne
push
shld
sbb
or
sub
or
movsx
bsr
mov
stc
add
add
call
ja
shl
imul
adc
jbe
inc
or
ds
jne
inc
sub
(bad)
pop
lea
jne
add
push
sbb
dec
das
or
mov
sahf
cdq
adc
push
movs
test
add
or
cmp
not
neg
shl
(bad)
daa
mov
jmp
dec
ds
xchg
aad
pop
xchg
mov
xchg
scas
(bad)
jecxz
dec
ins
mov
mov
xchg
(bad)
push
cmp
js
cmp
mov
or
test
movs
in
pushf
xchg
into
stc
mov
xchg
sbb
sbb
je
out
mov
sub
push
popf
add
mov
sti
dec
cmp
mov
loop
int3
mov
scas
in
pop
cmc
lock
mov
leave
pop
mov
sar
in
(bad)
cmp
pop
sub
(bad)
mov
lods
jl
das
xchg
dec
in
in
sahf
inc
jne
in
jnp
and
sub
mov
mov
pavgb
xchg
outs
popa
jge
pusha
jb
and
pop
(bad)
cld
jmp
addr16
push
pop
dec
(bad)
(bad)
js
popa
pusha
mov
add
adc
and
adc
xor
cmp
out
push
sbb
(bad)
(bad)
jmp
add
jnp
mov
cmp
pusha
adc
adc
bound
fs
jg
inc
movs
pop
pop
dec
and
pop
jle
mov
xchg
fs
ror
adc
lods
inc
cmp
dec
aam
sub
cwde
pop
jne
jl
pop
jg
mov
push
icebp
mov
push
ss
xlat
sub
inc
add
stos
jns
hlt
stos
sti
mov
div
sub
cmp
lahf
cmps
mov
xor
jmp
push
call
ds
cmp
adc
xor
popf
mov
adc
lea
xlat
and
xor
push
push
(bad)
or
add
imul
jae
pop
lea
call
jmp
sar
bswap
xchg
push
movsx
cmc
shld
push
call
mov
mov
lea
jne
pushf
lahf
call
pushf
lea
jae
mov
and
jmp
mov
jmp
lea
ja
push
not
call
pushf
lea
push
jmp
xor
pusha
pushf
mov
call
call
jmp
lea
ja
and
neg
sub
ror
movzx
xor
add
dec
bts
adc
mov
dec
bt
cmp
mov
call
dec
mov
neg
jmp
pushf
jmp
mov
pushf
push
mov
push
pusha
mov
mov
push
ret
lea
jae
cmp
stc
test
cmc
cmp
jmp
pushf
lea
pushf
mov
call
dec
mov
jno
lods
in
repz
mov
add
call
(bad)
and
add
jnp
pop
and
or
xor
mov
daa
push
test
jle
jl
mov
cmp
or
das
popa
test
push
(bad)
and
pop
xchg
pop
sbb
pop
push
nop
ficomp
lods
ret
fs
or
lods
jmp
xchg
lods
cmps
push
fdivrp
retf
mov
ja
push
iret
fst
jo
mov
jns
and
dec
cs
cmp
xchg
mov
or
clc
push
dec
repz
jnp
dec
push
push
pop
sbb
aaa
and
sub
add
std
mov
add
cdq
mov
or
aam
xchg
and
dec
ret
fnstcw
in
add
jno
dec
sbb
ss
pop
push
fwait
or
dec
push
mov
adc
xchg
push
xlat
les
cmps
cmp
in
lea
out
ror
(bad)
mov
stos
jmp
mov
mov
pop
retf
enter
add
or
push
and
sub
or
data16
out
shl
add
jmp
sbb
in
test
or
mov
loope
popf
jmp
mov
nop
aam
cmp
mov
xchg
rol
cmp
stos
and
inc
sbb
mov
icebp
or
cs
sub
push
or
jb
daa
jmp
stos
and
shl
push
out
sbb
fbstp
inc
add
in
xor
retf
mov
or
mov
inc
xor
fadd
dec
mov
aaa
mov
arpl
fcomp
data16
push
adc
push
xor
mov
int
ret
xlat
in
movs
out
stc
lock
push
pop
bt
pushf
cmc
jmp
pop
pop
(bad)
inc
cmp
add
add
dec
mov
pusha
int
pop
out
in
mov
cdq
and
or
or
daa
imul
fsubr
movs
hlt
mov
cmps
mov
and
mov
icebp
outs
pushf
loop
push
xor
in
retf
(bad)
xchg
stos
call
xchg
mov
enter
ins
ret
cld
xchg
jae
dec
daa
cmp
pop
(bad)
mov
xchg
sub
ins
in
fmul
popf
movs
jecxz
push
pop
jl
cmp
cmp
push
hlt
clc
mov
mov
pop
push
pop
sbb
mov
xor
inc
pop
sbb
xchg
stc
pusha
jmp
push
cmp
out
mov
adc
test
mov
xchg
out
lods
cwde
jae
aaa
(bad)
or
rcr
fistp
es
cmp
adc
fdivr
jno
push
mov
jbe
mov
jp
fwait
adc
(bad)
mov
int3
mov
dec
fs
xchg
and
ds
cli
mov
mov
mov
ja
pushf
imul
mov
pushf
lods
call
and
mov
call
push
inc
stc
sub
jl
add
push
pop
pushf
cmp
push
pusha
call
jmp
xor
cmp
jne
std
or
inc
pop
dec
push
sub
pop
jnp
inc
sahf
popa
sub
cmp
loope
test
aaa
xchg
push
out
push
xchg
mov
xchg
int
popf
xlat
jge
jne
pop
stos
pop
or
sub
push
push
or
add
out
(bad)
out
mov
jl
pop
add
jbe
cmp
or
xchg
xchg
cmps
sub
or
jno
(bad)
mov
scas
clc
mov
sbb
pop
icebp
mov
out
rcr
test
inc
jnp
cmp
xchg
and
xchg
sar
cmp
pop
inc
nop
sbb
dec
inc
push
xor
(bad)
in
push
rcr
jbe
jae
in
ins
sbb
idiv
cmps
fadd
inc
inc
popa
and
lea
je
lea
call
sub
inc
cmp
mov
mov
movs
inc
mov
fcom
lock
hlt
push
in
push
mov
ret
sub
jo
std
sub
dec
pop
sbb
xor
or
(bad)
mov
or
or
add
push
mov
ins
ins
pop
pop
sub
imul
mov
pop
loop
ret
cmp
push
sbb
clc
dec
mov
jae
sub
sub
aad
mov
and
jns
test
fidiv
mov
popf
lea
cwde
aam
fcomp
push
cmp
idiv
pop
shr
mov
mov
ins
pop
pop
jmp
enter
call
add
xchg
out
cmp
jle
pusha
xchg
div
cmc
mov
test
cdq
inc
mov
mov
sti
mov
aas
in
ins
and
lds
out
mov
cld
jecxz
mov
jcxz
mov
xchg
fild
cmc
sbb
inc
jmp
push
add
ins
(bad)
dec
ins
push
add
push
pop
mov
add
es
xor
into
xchg
pop
jnp
imul
mov
mov
daa
test
es
pop
dec
cld
pop
add
fsub
cmp
jle
retf
push
in
push
cmp
mov
jecxz
cli
mov
push
pop
stos
cmps
mov
faddp
adc
or
and
pop
cwde
or
xor
inc
inc
int3
mov
jae
xor
call
call
push
or
jmp
scas
pop
push
scas
inc
cmp
scas
loope
add
jge
div
jge
sbb
scas
(bad)
scas
cwde
xlat
cmp
mov
xchg
dec
inc
fwait
jno
sbb
cmp
sub
stc
stc
in
pop
push
fld
jb
les
dec
outs
dec
fwait
cmc
push
ins
sub
out
and
sbb
jmp
imul
jmp
lahf
scas
jb
jns
loope
jno
(bad)
or
or
cld
mov
push
mov
arpl
or
fs
dec
jle
push
pop
pop
fbstp
and
mov
cmp
push
jb
and
dec
or
out
jecxz
mov
sbb
add
add
popf
rcr
pop
bswap
call
mov
lea
je
sub
btr
pushf
bt
mov
sub
cmc
test
sub
add
shl
bts
mov
stc
test
jmp
push
cmc
repnz
jmp
lea
jne
jmp
lea
jae
push
test
cmp
jmp
pusha
pushf
lea
ja
sar
mov
sub
add
rcr
cmp
add
cmc
or
adc
mov
and
setae
ror
shl
mov
bt
stc
cmp
test
repnz
pushf
jmp
pusha
lea
jae
bts
cmc
movzx
shr
mov
xchg
pusha
mov
lea
sar
rcr
mov
jmp
call
inc
mov
aaa
pop
cmp
xor
add
imul
mov
jle
dec
sbb
inc
loope
and
mov
cmps
out
scas
jmp
stc
pop
sbb
ja
imul
push
lock
add
js
loopne
mov
dec
sub
push
je
into
mov
lea
jp
ret
std
dec
rol
out
shl
es
pusha
mov
add
cmp
mov
pop
adc
shl
or
daa
sub
fdiv
mov
out
test
ficomp
cmp
jecxz
push
div
ret
aam
jnp
lods
xchg
or
add
jmp
add
xor
inc
sub
mul
or
repz
mov
jp
push
clc
stos
adc
or
or
inc
rol
dec
enter
sbb
or
push
pop
mov
js
fnstenv
es
ins
and
imul
rcr
out
lods
out
mov
mov
outs
in
xchg
aas
mov
aas
add
fild
(bad)
pop
adc
inc
or
push
ins
jl
pop
adc
and
mov
outs
ins
loope
push
dec
je
out
lods
pop
aad
movs
mov
inc
pop
ds
xchg
mov
mov
pusha
push
pushf
push
ret
lahf
push
push
mov
mov
pop
movzx
mov
bswap
cwde
lea
jl
lea
call
push
pusha
mov
rep
lea
pop
bswap
mov
mov
pusha
pushf
lea
jmp
mov
ds
jnp
push
push
inc
or
push
pop
dec
and
jge
inc
inc
push
sub
pop
xchg
sahf
pushf
iret
jp
push
cmp
push
data16
loope
inc
test
xor
adc
cmp
and
jne
push
mov
mov
div
arpl
popf
(bad)
xor
mov
dec
xchg
or
sub
sti
add
sbb
fistp
mov
mov
fucomp
popa
xchg
imul
cmp
clc
out
xchg
sub
das
ins
addr16
jecxz
ins
aaa
popa
add
sub
cmps
or
mov
xlat
mov
cmc
call
lea
je
call
xchg
fdiv
add
jno
movs
hlt
sub
out
retf
(bad)
ror
sbb
mov
(bad)
lods
in
in
(bad)
retf
imul
retf
dec
lahf
mov
push
push
and
sub
add
je
lock
adc
fyl2x
fyl2xp1
or
pop
sub
shr
sti
mov
mov
xchg
adc
stos
sti
mov
sub
int
mov
push
cmp
inc
push
leave
cmp
xor
mov
dec
jmp
jl
out
xlat
xchg
and
or
jbe
aam
xchg
xchg
adc
dec
jae
rcr
repz
push
pop
rcr
imul
cmp
push
add
aam
sbb
cwde
call
jmp
dec
jns
sti
pop
cmp
out
pop
push
sbb
frstor
sbb
jl
mov
pop
dec
lods
push
sbb
jmp
adc
inc
jb
(bad)
mov
cdq
adc
repz
cdq
fimul
xchg
sti
pop
ja
movs
xor
dec
fs
sbb
fs
(bad)
iret
jp
dec
ins
pop
std
in
jmp
ins
mov
sbb
xchg
cmps
int
mov
inc
mov
cmps
mul
push
pop
cmc
(bad)
lea
inc
lods
inc
or
ret
bound
mov
adc
pop
sbb
mov
arpl
movs
daa
and
cmc
ja
call
add
xchg
fmul
mov
mov
scas
(bad)
sub
inc
adc
xchg
fisttp
jp
pop
pop
push
push
mov
sbb
add
scas
mov
and
jb
call
bt
movzx
movsx
pushf
bswap
clc
mov
cmc
clc
push
add
pusha
mov
push
bt
pushf
test
call
push
push
lea
ja
inc
inc
setle
inc
jne
pushf
not
mov
inc
shr
pushf
pusha
xchg
xor
bt
aam
adc
mov
test
adc
or
mov
pushf
push
bt
push
mov
shl
rol
bsr
ror
mov
push
mov
sub
push
push
jmp
lea
ja
stc
call
add
cmp
push
xor
dec
aaa
cs
pop
pop
psrlw
pop
(bad)
daa
ja
push
jmp
xor
jnp
leave
sub
movs
pushf
fldenv
(bad)
mov
adc
xchg
aad
call
jge
je
pop
in
mov
xor
dec
or
out
add
cmps
fcomp
bound
dec
hlt
das
leave
cmp
div
mov
addr16
jne
push
xchg
pop
js
or
test
mov
push
ror
mov
push
fwait
fs
adc
dec
inc
or
aaa
xor
adc
test
sbb
loope
test
inc
cmp
sub
repz
or
sar
sbb
pop
(bad)
data16
in
popf
fsubr
dec
inc
add
scas
pusha
pushf
pushf
lea
jne
push
shl
setae
mov
test
bsf
inc
sub
movzx
btr
bswap
adc
lea
jmp
call
xor
mov
lea
call
jle
jae
inc
not
mov
pushf
mov
pusha
inc
inc
not
pushf
mov
mov
lea
call
pusha
adc
pushf
jmp
stos
push
pushf
lea
jmp
leave
aas
mov
mov
mov
xlat
xchg
rcl
stos
shl
sub
mov
nop
push
jns
or
mov
mov
add
fnstenv
sahf
(bad)
mov
jle
enter
xor
ins
lahf
and
push
aaa
xlat
and
push
pusha
pop
sbb
adc
pop
ss
push
mov
rol
fs
dec
(bad)
and
push
inc
add
dec
inc
aaa
cmps
push
xchg
(bad)
dec
sti
sbb
dec
mov
ret
test
and
ja
mov
add
retf
addr16
jle
xchg
adc
mov
sub
ja
in
pop
and
addr16
adc
int3
inc
adc
pop
add
fst
dec
(bad)
icebp
jns
addr16
movs
loopne
jne
xchg
sbb
scas
dec
mov
mov
mov
sbb
lods
sub
or
pop
pop
sub
and
enter
test
xchg
xchg
cmovp
vpmaxub
adc
inc
ror
imul
jl
ss
lods
dec
push
pop
sti
clc
mov
shl
mov
mov
movsx
sets
lea
pushf
call
sub
jmp
clc
cmp
jmp
pushf
push
dec
push
call
lods
scas
jno
das
out
scas
dec
lock
add
pusha
jmp
jmp
mov
cmp
mov
mov
mov
hlt
mov
pushf
mov
mov
sbb
(bad)
pop
sbb
fs
inc
ja
mov
cmp
pop
sbb
cmps
and
shl
fild
mov
test
dec
push
mov
int
out
mov
fldcw
add
push
mov
out
jo
lahf
adc
dec
lods
or
pop
aaa
mov
ret
push
push
push
test
mov
or
sbb
out
arpl
fs
mov
sub
mov
push
fstp
pop
add
cmovbe
ss
jbe
or
inc
push
dec
cs
dec
dec
add
bswap
call
lea
ja
clc
dec
sub
or
cmp
call
pusha
jmp
jmp
push
push
lea
je
clc
cmp
cmc
clc
add
cmp
bt
cmp
push
push
lea
jb
test
stc
push
pushf
cmp
pusha
push
call
hlt
add
stos
push
cmp
xor
mov
(bad)
int3
mov
lahf
mov
arpl
call
xor
test
rcl
pop
xchg
(bad)
dec
popf
imul
rol
xchg
aad
es
push
mov
mov
push
add
mov
push
xor
cmp
adc
test
add
dec
and
movs
call
xor
cmp
sub
push
retf
xchg
jmp
pop
arpl
dec
inc
rcr
cmc
ins
or
arpl
jp
dec
leave
cmp
sbb
in
mov
jne
fidivr
int
out
add
sub
jp
push
popf
xchg
xchg
pop
retf
inc
lahf
cli
push
popa
jmp
jne
lods
push
mov
push
cmp
jmp
dec
mov
cdq
xchg
pcmpeqw
xor
retf
mov
mov
ror
stos
dec
sbb
mov
rcr
popa
or
call
mov
ret
out
xchg
mov
xor
fwait
stc
test
pop
nop
pop
enter
or
pop
push
dec
mov
jg
push
inc
pop
xor
dec
push
and
mov
add
ficom
and
(bad)
rol
data16
ret
aad
lahf
sbb
pop
xchg
mov
aaa
and
ss
lahf
dec
icebp
add
inc
inc
cwde
mov
jno
and
fistp
mov
cld
cmp
sbb
fisub
mov
push
sbb
in
clc
adc
test
enter
push
clc
jbe
repz
mov
push
xchg
sub
(bad)
cmps
(bad)
call
fistp
call
push
lea
jae
pushf
shld
mov
pop
shr
bsr
mov
sets
shl
shr
btr
mov
bt
pushf
test
sub
push
repnz
jmp
push
call
cmp
pusha
call
sbb
jno
push
dec
mov
push
jne
and
sbb
or
sub
jo
dec
add
mov
lock
hlt
adc
add
nop
rcl
ror
dec
add
rcl
or
push
mov
jns
ror
sub
xor
icebp
jmp
ss
aas
jbe
sbb
lahf
fcmovb
jbe
cs
mov
or
xor
dec
xor
stc
jmp
cli
out
xchg
mov
sti
jge
repz
imul
inc
inc
(bad)
imul
repnz
cwde
xchg
test
mov
add
or
cmp
(bad)
push
cmp
xchg
stos
mov
out
adc
in
aad
gs
mov
(bad)
std
mov
pop
xchg
lods
jmp
mov
loope
fst
(bad)
nop
stos
mov
jmp
lea
cwde
popf
rcl
or
mov
mov
ret
shr
cs
call
pop
add
fistp
test
dec
outs
sahf
push
inc
cmp
jne
movs
dec
sub
xchg
in
pusha
mov
test
sub
push
jo
push
inc
push
jno
xor
xor
movs
imul
mov
add
outs
push
mov
add
add
or
push
adc
dec
ret
ret
inc
push
sbb
inc
jbe
mov
jl
and
rol
ins
push
push
lea
jmp
call
xor
mov
jno
int3
cmp
inc
jg
pop
nop
outs
xchg
imul
mov
popf
cmp
jg
mov
adc
xlat
jp
pop
dec
inc
fst
jb
pop
adc
aaa
cmp
nop
xchg
mov
inc
add
mov
dec
js
in
popf
leave
add
jo
ret
fwait
mov
mov
inc
cld
sti
loopne
nop
inc
fwait
rol
mov
dec
sar
pop
imul
jle
inc
sbb
add
in
mov
lds
or
sub
push
mov
and
pop
dec
push
ror
mov
adc
out
cmp
(bad)
sub
and
xor
ret
call
lea
push
jmp
adc
rcl
jno
and
lods
push
push
dec
adc
call
ins
stos
mov
imul
xchg
adc
out
test
add
mov
mov
cmps
out
mov
out
mov
test
jge
lods
pop
adc
cs
push
(bad)
sti
and
inc
or
into
(bad)
mov
test
pop
gs
jle
cdq
(bad)
xor
rcl
pop
sub
ficomp
cwde
and
inc
add
sbb
add
pop
ffree
(bad)
(bad)
ins
inc
push
cmp
pop
dec
hlt
aad
add
(bad)
movs
out
sbb
cmp
ins
inc
pop
mov
and
inc
std
mov
sub
mov
jo
movntps
icebp
sbb
dec
or
jne
xor
sub
icebp
das
sub
fimul
push
xor
fwait
sbb
add
call
movs
jecxz
imul
lds
cs
mov
popf
outs
fcmovu
enter
jecxz
mov
mov
add
gs
retf
into
or
stos
addr16
popa
jns
fbstp
(bad)
mov
int3
mov
test
movs
mov
dec
mov
out
xchg
repnz
xchg
rol
call
inc
or
daa
lahf
sub
scas
jmp
and
push
cmp
dec
jbe
jbe
retf
adc
jno
div
shr
mov
or
xor
cmp
mov
bound
ret
(bad)
das
xor
or
or
mov
jecxz
xchg
xlat
fist
cld
push
inc
loope
imul
ret
mov
or
push
sbb
xchg
mov
push
mov
push
data16
mov
push
ficom
add
inc
dec
adc
cmp
adc
mov
cld
jecxz
in
clc
mov
or
cmp
ins
call
sub
mov
and
shl
mov
adc
pop
xchg
call
repz
leave
sbb
cdq
imul
xor
(bad)
pusha
call
or
(bad)
repnz
inc
mov
cmps
mov
sbb
or
pop
test
mov
sbb
mov
in
lds
stos
or
ds
add
fwait
rcr
add
or
adc
hlt
mov
lea
sub
sub
xchg
cmc
mov
adc
or
js
xor
push
sbb
fwait
xchg
inc
stc
jb
mov
xchg
mov
retf
and
(bad)
popa
sub
sbb
cwde
mov
repnz
mov
xor
stc
fnsave
sbb
out
pop
jbe
js
xor
out
push
mov
addr16
fcmovbe
xchg
add
inc
mov
mov
push
or
jmp
push
dec
push
add
sbb
ja
xchg
jmp
mov
add
cmp
retf
or
jb
inc
add
xor
mov
imul
cmp
mov
leave
aad
mov
sbb
cmp
push
inc
dec
pop
imul
and
ja
push
mov
imul
jmp
lea
jne
movsx
cwde
pushf
mov
pushf
mov
mov
movsx
lahf
pusha
lea
call
push
sub
das
cmp
mov
adc
xor
xor
add
sbb
aas
call
gs
pop
(bad)
nop
xchg
mov
inc
pop
ss
jne
cmp
adc
or
add
sbb
jmp
stos
pop
sbb
ins
jmp
jae
mov
mov
test
push
push
inc
js
inc
scas
fmul
ret
jg
mov
mov
mov
pop
or
std
cdq
scas
add
and
cli
or
repnz
sub
dec
pop
rcl
cmp
adc
iret
ret
ficomp
jns
out
mov
and
push
ja
ret
bnd
and
pop
jae
cmp
jne
sub
or
add
xor
sbb
cli
or
ins
and
inc
leave
fiadd
dec
mov
mov
pop
arpl
add
retf
mov
int3
pushf
test
mov
or
ja
or
push
mov
or
sub
dec
cmp
jmp
mov
cmp
and
push
das
pusha
inc
pop
dec
ins
push
rcr
xchg
sbb
xor
adc
call
jecxz
ret
iret
lahf
mov
stos
mov
idiv
push
adc
inc
(bad)
lahf
mov
mov
leave
mov
in
sbb
mov
seto
lea
pusha
mov
jmp
sub
jmp
je
in
cdq
sub
jno
lock
(bad)
mov
(bad)
outs
test
std
xor
movs
loopne
in
retf
movs
loopne
mov
int
scas
xor
adc
push
aam
and
push
xchg
push
mov
into
jmp
or
ret
xor
call
jb
stos
jle
mov
add
xor
and
sahf
icebp
ret
scas
out
xor
jl
sar
ins
jge
retf
push
jecxz
in
out
sbb
jecxz
xchg
gs
test
clc
cmc
bound
dec
pop
daa
jmp
test
out
and
icebp
std
mov
push
sbb
pop
(bad)
fist
aam
dec
mov
stc
rol
(bad)
or
pop
and
add
scas
push
add
dec
rcl
bt
neg
ror
shl
test
sbb
xor
setns
dec
jmp
jmp
pushf
push
pop
pushf
pushf
push
ret
jmp
(bad)
ss
sub
jno
xor
cmp
adc
cmp
push
outs
jno
jg
retf
sbb
push
adc
adc
cmc
lds
inc
mov
shr
jp
jns
xchg
push
cld
test
fs
mov
inc
or
pop
imul
sahf
mov
and
sbb
adc
inc
pop
shl
imul
std
fst
cs
cmps
outs
out
mov
sbb
add
in
cs
xor
xchg
shr
aad
shl
dec
loop
test
imul
inc
or
pop
push
aam
xchg
or
xchg
mov
mov
mov
xchg
lahf
or
frstor
pop
push
mov
mov
pushf
es
aas
jae
push
dec
add
push
xchg
push
add
jle
pop
mov
jp
sub
or
xchg
push
sub
jb
out
sbb
mov
dec
iret
jl
fmul
mov
or
scas
outs
inc
ror
adc
cmovl
jmp
push
sbb
cmp
jl
pop
mov
loopne
mov
pop
fwait
jbe
jb
sti
ret
sbb
pop
inc
jge
inc
or
jns
ror
test
out
mov
ins
out
pop
push
adc
cs
dec
mov
or
cmp
arpl
push
sbb
outs
ds
push
push
inc
sub
mov
push
push
jo
or
call
cwde
aam
mov
xchg
retf
mov
mov
inc
inc
ins
sbb
call
jbe
and
mov
aam
daa
or
mov
pushf
sbb
js
mov
or
shr
adc
mov
push
push
stos
out
adc
sub
leave
xor
into
pop
adc
mov
inc
mov
push
dec
add
push
fild
xor
out
push
xor
jmp
call
mov
ffree
sahf
mov
cmp
sub
dec
inc
push
rcr
cmc
cwde
jb
jle
cmp
mov
fs
jne
bsr
bsf
stc
sar
mov
shld
btr
jmp
setb
xchg
mov
setnp
not
call
setno
shl
mov
cmp
cmp
test
mov
pusha
pushf
mov
lea
je
pushf
sub
push
pusha
test
call
cmp
fincstp
and
xchg
inc
mov
stos
jo
jp
in
test
mov
int3
xchg
inc
test
sbb
ss
inc
lods
sahf
les
in
dec
jmp
mov
leave
add
adc
xchg
or
push
adc
mov
sbb
dec
dec
ins
sub
dec
push
cmps
dec
cmp
(bad)
sbb
or
cmp
ins
jmp
mov
push
shr
sub
pop
pushf
loope
daa
push
xchg
je
pop
call
or
push
or
xchg
dec
dec
xchg
dec
ins
sub
push
imul
pop
imul
stos
mov
test
retf
nop
cmps
cmps
dec
jno
rcl
add
inc
gs
gs
push
jb
inc
popa
arpl
inc
outs
je
jns
or
mov
mov
sbb
dec
sbb
dec
and
pop
lods
push
pop
dec
dec
pop
dec
pop
aas
ja
outs
pop
aam
nop
cmp
add
dec
or
xchg
nop
dec
ret
fld
es
retf
in
popf
sbb
ins
dec
dec
hlt
test
xor
and
jb
adc
inc
mov
(bad)
lea
stos
fidivr
outs
jmp
cwde
lods
daa
leave
jmp
dec
dec
cld
(bad)
cmp
fld
je
sub
sub
loop
mov
and
sub
dec
ret
adc
push
loope
es
lahf
xchg
nop
sbb
test
inc
and
mov
mov
push
ret
lea
jne
pushf
jmp
sub
cmp
sub
add
cmp
seto
bsf
bsr
mov
or
cmp
dec
push
mov
pusha
repnz
jmp
mov
cmp
sub
imul
inc
push
mov
fs
push
dec
push
ds
inc
mov
dec
lods
sub
in
retf
lock
mov
rcl
sbb
jp
pop
push
push
add
jnp
push
push
jmp
add
pop
bound
stos
stos
and
or
pop
push
jno
pop
dec
loope
fiadd
mov
stos
mov
(bad)
jle
or
cmps
mov
ror
(bad)
sbb
xchg
int
mov
out
push
jbe
xor
sub
dec
dec
in
and
(bad)
cld
pop
fisubr
stos
mov
test
out
add
jb
xor
imul
movs
push
pop
iret
cmps
mov
mov
push
jne
test
js
jae
push
(bad)
(bad)
loopne
popa
sbb
adc
sbb
or
fwait
nop
inc
mov
xchg
xchg
rcl
xchg
les
out
push
cs
sub
and
pop
dec
fiadd
jle
lods
mul
es
lods
cmps
cmp
inc
jo
xor
mov
add
jae
int3
(bad)
mov
cmc
neg
test
cmp
jmp
lods
pushf
mov
push
push
dec
stc
cmp
bt
neg
bt
stc
xor
mov
push
mov
dec
call
xchg
setl
call
lea
jne
bts
aaa
cmc
rcr
sub
sbb
not
not
mov
rcl
ror
setno
cmc
add
jmp
pusha
lea
jne
pushf
lea
mov
mov
mov
push
lea
jmp
jmp
push
sub
cmp
add
push
pop
push
inc
pop
sbb
dec
push
push
xor
adc
mov
(bad)
mov
(bad)
lea
mov
xchg
adc
add
es
js
sub
jb
scas
out
jl
jno
inc
leave
cmp
or
adc
pop
inc
jle
pop
cmp
inc
xor
push
stos
aaa
xor
popf
out
(bad)
rcr
fs
mov
hlt
in
out
aaa
mov
push
out
nop
rol
inc
clc
lock
leave
repnz
into
jmp
ror
sub
push
ror
cmc
jnp
movzx
pushf
mov
push
pusha
lea
jmp
xchg
jno
lds
fs
push
adc
aas
jb
push
ins
cmp
xchg
jbe
daa
sar
stos
or
jne
adc
add
dec
pop
inc
or
imul
inc
dec
pop
mov
mov
fsubr
add
lds
push
sbb
pop
jae
push
dec
mov
mov
rol
pop
adc
jae
cmp
sbb
push
and
sub
neg
rol
pop
iret
cli
sar
push
mov
lock
push
cmps
xor
pop
popa
mov
dec
xor
push
sub
push
inc
mov
popa
mov
ins
dec
ja
push
add
jl
icebp
rcl
jmp
fimul
cli
les
outs
cmps
and
mov
lock
adc
rcl
in
mov
test
bt
mov
push
add
dec
or
mov
pushf
push
jmp
lea
jae
jb
stc
pushf
cmp
pusha
lea
ja
rcr
add
shl
jmp
addr16
adc
and
jno
adc
je
jae
jae
imul
sub
dec
sbb
jl
popa
fs
and
cmp
jg
stc
adc
aas
cmovg
xchg
ins
nop
inc
loope
jbe
xlat
inc
sbb
jbe
retf
pop
dec
mov
mov
cmps
mov
xchg
cmps
test
or
push
lea
sub
adc
mov
shl
call
aad
sti
cmp
jnp
or
pop
push
mov
cmp
pop
mov
div
jnp
out
mov
ret
pop
fisub
jmp
cdq
outs
push
add
ins
in
mov
lea
je
stc
push
call
call
pusha
lea
jae
pusha
stc
cmp
push
pusha
push
push
lea
jae
jmp
(bad)
popf
push
and
cmp
arpl
sub
jo
push
bound
fwait
xchg
dec
sar
into
sub
jge
into
test
pop
stc
mov
sub
push
xor
arpl
and
bound
pop
sub
push
dec
or
jne
xchg
js
call
pop
push
pop
sbb
and
jae
pop
inc
mov
push
jns
sbb
cmp
inc
pop
sbb
rcl
fisubr
and
inc
add
les
into
adc
xchg
mov
sbb
pop
test
pop
mov
movs
mov
cmp
mov
sti
push
mov
xchg
sub
ja
int
test
into
mov
xor
(bad)
outs
mov
arpl
das
or
cmp
and
or
push
inc
shr
mov
shl
mov
fst
out
pop
outs
push
ins
and
inc
push
jno
pop
test
les
pop
das
push
sbb
ss
or
je
dec
aas
add
xchg
mov
push
push
push
imul
aam
jge
inc
mov
mov
cmp
inc
or
push
jbe
sbb
dec
loope
mov
(bad)
dec
adc
ficom
mov
mov
adc
in
push
pop
inc
jg
(bad)
cld
test
push
adc
outs
push
push
out
push
call
pusha
push
or
cmp
lock
fld
daa
jl
in
and
add
xchg
adc
push
inc
sub
ret
out
cdq
ja
sahf
fmul
mov
out
mov
mov
movs
adc
frstor
push
or
pop
cdq
in
mov
fisttp
pop
dec
mov
xchg
int3
jb
dec
or
fst
lock
mov
adc
gs
and
jle
add
lods
dec
ror
pop
inc
lods
dec
dec
mov
push
dec
xchg
fild
mov
dec
imul
(bad)
mov
js
or
pop
int
(bad)
out
push
hlt
jge
rcl
and
adc
xchg
xchg
xchg
adc
mov
or
and
dec
or
sbb
shl
call
pushf
lea
jb
stc
cmp
call
push
not
mov
call
bt
xchg
not
shrd
mov
cmc
sub
mov
jmp
adc
call
rol
and
bsf
mov
push
mov
cmp
cmp
cmp
mov
lea
jbe
not
mov
bt
cmc
mov
bt
bswap
adc
test
add
btr
mov
movsx
add
movsx
or
neg
mov
rcr
setns
neg
movzx
mov
test
cmp
call
rcr
sub
shrd
mov
rcr
neg
sbb
not
mov
bt
add
push
btr
shr
mov
neg
mov
movzx
shl
add
pop
movsx
push
mov
lea
push
lea
jl
push
pusha
pushf
pushf
setp
lods
call
mov
mov
call
add
add
ror
bt
push
jmp
mov
cmp
fs
movs
pop
scas
inc
cwde
fs
push
cmp
push
add
jle
pop
daa
imul
in
lods
fs
xchg
push
push
adc
fdivr
dec
jne
lods
cmps
pop
xlat
dec
outs
jl
nop
fisub
outs
mov
mov
dec
mov
inc
imul
jl
mov
shl
inc
or
(bad)
jns
outs
mov
mov
inc
jo
les
jl
and
outs
pop
retf
fldenv
xchg
adc
shl
cmp
xchg
lds
int3
icebp
je
cmp
mov
ret
out
cmp
lock
pop
faddp
repnz
dec
repz
sub
jl
or
or
and
in
sbb
or
push
add
dec
(bad)
jo
or
outs
lahf
jae
jl
jp
ja
ret
(bad)
out
mov
je
inc
xadd
sub
loopne
dec
dec
ins
pop
sbb
test
adc
movs
jb
xchg
push
dec
mov
repz
sahf
sbb
jmp
rcr
mov
jb
adc
cmps
pushf
enter
mov
mov
adc
cld
leave
and
scas
push
popf
inc
push
adc
pusha
or
xchg
nop
or
aas
xor
out
in
mov
pop
sbb
cwde
cmp
ja
xchg
sub
dec
add
adc
imul
dec
inc
pop
adc
in
cmps
sub
in
mov
call
movzx
mov
bswap
mov
movzx
mov
mov
mov
call
cmp
sub
clc
stc
cmp
push
pop
jmp
push
clc
sub
clc
cmp
pusha
lea
ja
call
mov
xor
jno
add
aaa
sub
adc
adc
inc
popa
or
push
sub
pop
push
(bad)
jns
or
xchg
ret
test
shl
data16
cmp
out
push
adc
loope
mov
xchg
add
pop
jmp
lahf
sub
cmc
jg
les
adc
pushf
mov
mov
mov
lods
loope
xor
nop
sbb
scas
mov
mov
mov
or
jns
outs
mov
cmp
out
shr
push
jno
es
mov
test
out
fadd
bnd
pop
sbb
sub
mov
pop
sbb
push
adc
inc
mov
repz
sub
ficomp
fs
jb
pusha
push
pushf
pushf
push
ret
jns
shl
cmp
jno
retf
test
hlt
mov
int3
mov
add
adc
jne
leave
or
idiv
mov
jp
pop
mov
push
push
dec
out
jmp
daa
jb
or
inc
inc
dec
or
hlt
enter
xor
(bad)
int3
cmp
or
jnp
sbb
call
(bad)
cld
jp
movs
test
cmc
iret
dec
push
sbb
ins
and
idiv
cld
js
sbb
(bad)
inc
or
in
imul
cmc
call
sub
inc
shl
lea
clc
cmp
cmc
bt
sub
push
call
jmp
rcl
push
jns
cmp
leave
cmp
cs
or
in
adc
mov
les
xchg
mov
jle
push
push
lods
loop
push
xor
cli
(bad)
adc
mov
xor
fmul
stos
ins
shl
in
push
les
mov
jmp
cli
push
cmp
enter
mov
gs
lock
fistp
loop
call
xor
ror
std
jl
(bad)
loopne
xchg
lahf
(bad)
mov
mov
and
pop
leave
int
in
leave
shr
imul
or
xchg
add
push
stos
call
call
jmp
dec
pushf
test
cmp
sub
jb
shl
je
lods
pusha
dec
push
clc
neg
bt
xor
pusha
push
jmp
pusha
inc
call
cmp
retf
jno
jecxz
ret
mov
nop
out
mov
pop
mov
jns
adc
inc
adc
push
aam
push
pop
aam
lods
les
imul
dec
gs
dec
pop
dec
lahf
je
push
movntq
loope
push
jns
ja
push
lods
dec
shr
adc
outs
lods
ins
imul
mul
or
dec
mov
sahf
pop
loopne
dec
call
xchg
add
mov
jo
iret
mov
rcr
cmp
daa
test
jecxz
sbb
cmps
iret
or
sbb
xchg
or
sbb
in
xchg
out
inc
lods
inc
add
and
xor
ds
fadd
mov
(bad)
popf
test
in
mov
ficom
in
sub
or
lock
cmp
fadd
add
pushf
push
cmp
call
call
ss
shl
mov
rol
stos
ror
fnstsw
aad
(bad)
sbb
inc
imul
jge
add
es
xchg
icebp
mov
mov
push
ja
test
pop
shr
retf
or
jb
xchg
arpl
ret
or
xor
dec
dec
mov
repnz
call
stos
add
stos
scas
adc
xchg
or
jo
cmp
push
cs
popa
outs
add
jae
or
jmp
pop
daa
scas
xchg
pushf
jo
sbb
xchg
popf
(bad)
into
and
movs
or
and
(bad)
sti
jnp
mov
call
clc
mov
aaa
xor
xor
push
dec
jae
(bad)
in
fadd
inc
sub
add
popa
inc
pop
sti
jbe
xchg
fmul
push
sbb
xlat
cmp
dec
sbb
add
pop
jnp
jecxz
loope
mov
adc
push
push
mov
mov
xchg
sbb
mov
jge
cmp
inc
mov
enter
hlt
sbb
push
cmp
mov
stos
jge
cs
xor
xor
popa
jbe
cmovne
add
cmp
ss
push
sbb
xchg
or
ins
out
imul
inc
xchg
lock
xor
push
(bad)
jge
pop
cmc
add
jno
or
xor
mov
imul
and
bound
jb
hlt
arpl
xor
mov
mov
or
sbb
mov
repz
pop
mov
mov
cmp
or
stc
and
adc
ds
scas
sub
fistp
xor
arpl
fldcw
lds
add
xor
ins
lods
mov
inc
mov
push
sbb
inc
imul
or
xor
mov
stc
add
in
imul
push
dec
sub
xchg
hlt
sbb
mov
shl
xlat
rcl
das
and
adc
push
xchg
bound
fs
je
clc
cmp
pushf
push
push
ret
mov
sub
cmp
je
and
and
jg
dec
pop
xor
cmp
add
lahf
arpl
jg
shr
xchg
sub
and
or
pop
cmp
jno
and
leave
adc
ficomp
mov
lods
cmps
dec
in
mov
into
sbb
dec
push
ins
jmp
outs
ret
icebp
ja
push
ror
retf
xor
out
jecxz
jno
add
(bad)
pushf
addr16
pop
retf
fistp
xor
mov
div
(bad)
mov
push
sbb
inc
ins
loopne
test
int3
dec
pop
push
or
ret
fs
jmp
dec
pop
test
(bad)
push
jmp
jno
fist
(bad)
idiv
shr
rcr
pop
fldcw
inc
std
(bad)
fstp
fist
gs
mov
or
lock
fimul
adc
or
push
cs
mov
sti
cmps
jp
stc
aaa
sbb
jmp
mov
ins
bound
(bad)
xlat
mov
out
shl
dec
fwait
stc
fdivp
xor
je
adc
jecxz
add
dec
dec
mov
in
fsubr
mov
jns
stos
cmps
mov
cmp
push
aad
mov
dec
outs
xchg
out
jne
mov
fisttp
je
add
fs
je
not
mov
lahf
push
movzx
movzx
not
lahf
lea
pusha
mov
mov
pusha
jmp
call
lea
jne
jmp
lea
call
jmp
mov
mov
call
mov
mov
mov
pusha
push
ret
mov
cmp
inc
push
add
push
adc
fs
adc
or
lea
jmp
xchg
adc
pusha
sahf
scas
(bad)
xchg
fcmovu
push
push
(bad)
xor
jmp
pop
aad
or
mov
mov
or
jno
inc
fwait
jns
adc
retf
cmc
mov
movs
call
fmulp
inc
mov
jb
pop
call
add
fwait
in
mov
addr16
test
push
(bad)
xlat
fldcw
clc
fsub
cmp
mov
inc
or
sbb
inc
clc
bnd
inc
add
je
hlt
push
dec
iret
into
pop
pop
push
adc
xor
cmps
cmps
pop
push
pop
add
pusha
call
ds
sbb
push
xor
es
xor
jno
jl
bound
dec
inc
pop
sbb
and
mov
pop
pop
dec
xlat
loopne
xor
sub
dec
dec
xor
pusha
push
pop
test
cmps
push
mov
inc
inc
pop
inc
js
imul
pop
pop
pop
dec
add
push
add
jmp
sub
pusha
fimul
fisub
int3
sub
data16
or
add
jb
push
sub
imul
pop
pusha
dec
inc
inc
pop
push
push
sbb
xor
sbb
fs
pop
sbb
push
pop
add
push
push
pop
shl
add
push
aas
lahf
pop
push
adc
push
push
pusha
das
push
push
bound
shl
jp
mov
ins
sbb
jl
push
inc
adc
lea
pop
pop
pop
dec
push
dec
movs
dec
pop
cmps
std
xor
sub
cmp
ficom
dec
mov
pop
sub
pop
inc
push
cmp
sub
cmp
add
xor
push
sub
or
data16
shl
shr
sub
dec
and
cmp
adc
mov
push
inc
mov
mov
adc
sbb
or
jle
call
and
ja
dec
jns
push
inc
mov
push
push
test
pusha
pusha
sub
scas
jb
mov
es
push
or
rol
or
mov
xchg
cdq
mov
bound
mul
sbb
mov
push
lods
es
xor
jmp
fsub
mov
fcom
das
push
scas
sub
ds
scas
int
outs
xor
ins
push
xchg
es
not
cs
dec
dec
dec
inc
inc
dec
dec
cs
inc
inc
inc
pop
pop
popa
pusha
cs
pop
pop
pop
push
push
pop
pop
shl
jno
jo
push
ins
imul
fs
sub
jl
jbe
pop
js
pop
mov
jge
mov
pop
jbe
sub
sub
mov
sub
pop
rcl
ss
mov
or
into
sar
outs
push
imul
clc
int
in
mov
outs
mov
sbb
pushf
call
nop
retf
adc
adc
or
sub
sub
dec
stos
and
sti
div
into
fnstenv
and
adc
fs
out
xor
ds
mov
adc
adc
xor
xor
push
xchg
cs
es
cmp
xor
ds
mov
adc
push
cmps
push
out
scas
adc
das
add
test
pop
adc
xchg
inc
or
not
xchg
push
dec
outs
inc
push
cmp
xor
out
cmp
mov
cmp
ror
sub
jmp
push
push
test
popa
adc
out
adc
inc
data16
push
rcr
push
ss
das
data16
sub
or
push
sbb
jle
sub
push
test
mov
inc
ret
retfw
adc
push
out
xchg
inc
sahf
or
adc
cmps
inc
stos
or
adc
pop
inc
test
jle
pushw
dec
outs
pushw
rcr
or
ds
ror
cmp
sub
inc
(bad)
adc
sub
or
ins
add
push
jb
mov
xor
add
push
out
retf
jno
sub
xor
xor
xor
sub
xchg
retf
sub
sub
loope
inc
push
jle
jp
xchg
xchg
cmps
scas
sbb
arpl
mov
inc
aam
mov
adc
popf
sub
fld
adc
fs
inc
sbb
test
mov
adc
push
pop
test
ror
or
dec
dec
mov
popa
push
data16
push
add
pop
xchg
adc
cmp
fs
movs
loop
adc
push
push
dec
sub
dec
pop
repz
push
sti
fs
mov
pop
dec
mov
inc
lods
cmp
rcr
xor
dec
test
mov
out
dec
leave
addr16
pop
dec
adc
cmps
call
adc
pushf
ja
push
pop
es
pop
push
mov
bound
leave
cmp
pusha
pop
inc
pop
cmp
dec
int3
icebp
mov
fidiv
(bad)
outs
mov
jb
mov
ret
ins
pop
mov
xchg
imul
fsubr
and
dec
cmp
xchg
rol
scas
iret
adc
or
add
in
dec
adc
cmova
or
pusha
pop
test
xchg
pop
mov
ret
and
pop
add
mov
test
jne
and
fisubr
shr
ins
test
inc
dec
jae
into
jae
sbb
into
mov
mov
sub
popa
call
and
or
lahf
add
jecxz
cmp
pop
mov
out
fadd
mov
int
pop
mov
pop
arpl
push
or
and
jge
dec
ja
gs
popa
out
ins
push
sbb
xchg
stos
jecxz
mov
enter
lahf
adc
inc
push
retf
aam
fmul
or
cs
adc
es
xor
adc
sub
mov
pop
mov
and
mov
add
ror
arpl
inc
hlt
out
xchg
xchg
pusha
mov
dec
pop
std
push
sbb
mov
bound
lea
stc
xchg
or
push
cmp
add
xor
xchg
push
fnstenv
jmp
jbe
push
cmp
xlat
xchg
xlat
xchg
imul
lock
idiv
jecxz
jecxz
pushf
dec
stos
daa
test
out
add
leave
dec
inc
inc
les
data16
(bad)
cmp
pop
clc
enter
pop
(bad)
in
jmp
stc
cmc
sbb
cwde
mov
jns
cmp
repz
add
push
dec
dec
mov
aaa
mov
cmc
loop
popa
cmp
xchg
movs
in
(bad)
jp
cs
arpl
cdq
or
test
inc
jmp
inc
sbb
les
pop
and
out
shrd
mov
and
xchg
fcmove
adc
inc
pop
cmp
xchg
imul
mov
or
pushf
jmp
jmp
pushf
mov
jmp
mov
mov
movsx
not
movzx
pop
movsx
pop
movsx
push
mov
push
mov
pushf
mov
pushf
mov
push
ret
mov
lea
je
pusha
push
sub
jl
pusha
add
test
cmp
push
pusha
jmp
call
jmp
scas
loopne
sub
cmp
ins
jno
popa
add
and
mov
je
push
add
push
push
cdq
and
sub
xlat
test
test
cs
hlt
sub
addr16
neg
ret
inc
retf
inc
adc
scas
outs
bound
add
mov
xchg
add
test
inc
(bad)
stc
sub
addr16
int
mov
xor
sub
shr
inc
add
mov
cmp
fbstp
or
je
loop
cmp
push
mov
call
mov
aam
movs
mov
xchg
sar
cmps
test
jnp
add
out
sub
cmps
lahf
into
call
sbb
sahf
jae
or
je
outs
aam
test
mov
cdq
ficomp
sub
int3
dec
ds
add
cmp
addr16
jo
imul
test
xor
nop
pushf
jb
(bad)
ret
retf
jns
pop
sbb
imul
and
and
xchg
jl
jno
mov
ds
clc
rol
mov
mov
push
(bad)
gs
shl
imul
mov
aam
rcl
mov
and
dec
pop
adc
push
pop
adc
les
cmp
and
xor
je
js
lock
cs
cmp
iret
ds
outs
and
inc
add
movs
cmp
or
dec
dec
pop
fs
hlt
rcl
icebp
or
or
push
ret
and
jo
sbb
int
cmp
inc
dec
leave
mov
add
stos
adc
rcr
sub
xchg
in
test
jle
sub
sbb
ja
xor
add
jl
cmp
push
xor
stc
in
test
sub
add
nop
push
fcomp
add
lods
and
adc
in
fcom
ror
xchg
ret
sbb
jge
pusha
sub
pushf
call
mov
push
and
cmp
pusha
jbe
inc
sub
xor
sbb
or
cwde
ins
mov
push
push
cmps
jl
xchg
lods
retf
mov
lahf
movs
lods
mov
add
mov
and
push
push
je
pop
xor
es
jmp
jmp
sbb
jbe
xchg
fcom
bnd
stos
inc
pop
lods
mov
pusha
mov
fnstenv
in
call
sbb
mov
imul
aad
inc
ror
call
int
push
sbb
pop
movs
push
fbld
sbb
and
ja
push
lea
jne
adc
jns
bts
sbb
mov
clc
pushf
mov
add
push
pusha
cmp
mov
movzx
xor
pop
mov
cmp
clc
pushf
add
call
rcr
jno
(bad)
cmp
add
push
bound
pop
pop
or
js
aaa
push
inc
mov
adc
in
test
in
movs
mov
pop
pop
adc
xor
es
xor
push
outs
popf
movs
inc
xchg
mov
mov
mov
xor
lds
test
sbb
inc
std
clc
ret
cmc
sahf
xlat
fcomp
sbb
test
dec
or
mov
test
hlt
or
jge
fwait
or
push
sbb
sbb
out
fistp
ret
cmp
sub
jne
movs
scas
into
mov
xlat
lahf
sbb
sahf
les
arpl
add
shl
aas
jne
test
xor
pusha
xchg
lea
rcl
hlt
sub
nop
sar
loope
movs
inc
cwde
std
ret
adc
nop
test
pop
scas
movs
loope
inc
dec
rdtsc
jb
(bad)
iret
adc
add
inc
gs
outs
fs
gs
imul
add
and
mov
mov
mov
lea
je
call
or
movs
rol
jno
rcr
rcr
xchg
mov
xchg
jmp
hlt
call
sub
(bad)
jo
dec
test
push
xor
lea
daa
push
fbstp
fcomp
xor
and
fidiv
fiadd
cli
ret
xchg
cld
ins
test
test
stos
mov
mov
jmp
dec
add
mov
ds
cmps
cs
mov
jp
jp
mov
loope
pcmpeqw
js
mov
out
cmp
pop
adc
xor
sub
rol
sbb
push
dec
int
popa
sbb
xor
add
jno
pop
dec
sbb
cmp
mov
jg
cmp
lock
les
cld
jo
jge
inc
xor
clc
rcr
rol
add
jle
into
pop
jp
fisttp
jae
fistp
jbe
scas
repnz
pusha
push
ss
mov
inc
icebp
mov
xchg
inc
prefetcht1
ins
and
(bad)
aaa
sar
movs
das
sbb
std
idiv
inc
sbb
bound
mov
inc
test
leave
pushf
scas
js
mov
xor
sti
jge
dec
js
xchg
test
mov
jb
ins
jmp
mov
xchg
pushf
fsubr
stos
jg
xor
test
add
rcl
(bad)
fidiv
gs
lds
pop
ss
sbb
(bad)
pop
jg
dec
loopne
mov
fstp
lock
mov
test
mov
pop
push
fstp
or
pop
dec
out
sbb
adc
arpl
add
jecxz
mov
dec
add
add
and
and
add
inc
mov
mov
ror
xchg
mov
ss
loope
mov
sub
push
mov
sub
fild
push
je
outs
neg
push
cmp
jge
cmc
pop
push
sbb
minss
pop
or
sub
sti
jecxz
xchg
or
mov
lahf
jecxz
xchg
xchg
inc
mov
pop
push
pop
cmp
dec
jbe
je
xor
dec
dec
lods
pop
cmovbe
(bad)
push
iret
adc
iret
mov
lods
pop
mov
mov
in
xor
mov
fiadd
add
xor
fwait
or
push
pop
sub
jnp
test
jns
call
in
sahf
lods
neg
pop
(bad)
adc
push
loope
adc
(bad)
ret
repz
ins
or
sbb
cmp
sbb
arpl
out
push
inc
int
ficom
cmp
ins
aaa
mov
mov
pop
adc
dec
dec
jle
fld
and
push
push
aas
jno
loop
mov
jmp
shl
pushf
stc
not
mov
clc
bt
test
stc
cmp
mov
lea
jne
sbb
bsr
ror
xor
shl
call
push
shr
mov
mov
repnz
pusha
mov
call
gs
imul
xor
jbe
push
and
out
sbb
cmp
mov
add
mov
hlt
inc
unpcklps
imul
push
cmp
ins
adc
add
sbb
mov
adc
aam
ja
pop
pusha
adc
lods
pop
daa
retf
loopne
ror
cld
mov
rol
dec
(bad)
gs
shl
cmp
je
push
sbb
pushf
lods
inc
xchg
xor
js
xchg
dec
jmp
push
mov
sbb
fcomp
imul
or
inc
push
test
aaa
pop
inc
ja
push
das
imul
xchg
xchg
cmp
xor
cdq
cs
pop
pop
stos
mov
cmp
scas
cmp
js
pusha
jmp
jo
inc
or
addr16
and
adc
jmp
fs
jns
stc
cmp
push
jmp
aam
fisubr
ss
test
mov
in
out
cmp
lock
lea
xchg
(bad)
and
push
jmp
fist
out
ss
lods
call
ret
les
aas
in
imul
std
mov
xchg
xchg
rol
outs
jge
pop
sub
sub
test
loop
mov
push
add
xor
fld
cmp
(bad)
and
nop
(bad)
iret
lds
movs
jecxz
cdq
push
or
cli
and
inc
push
sbb
outs
mov
pop
and
pushw
mov
pop
(bad)
mul
xchg
cmp
outs
mov
pop
(bad)
jecxz
add
jge
pusha
push
nop
add
jno
or
lahf
aad
cld
stos
out
ret
mov
xchg
fst
out
rcl
dec
xchg
ins
adc
push
sbb
or
pusha
sub
hlt
cmp
mov
repnz
pop
(bad)
int
outs
mov
loope
inc
sbb
loopne
(bad)
adc
xchg
cmp
jo
adc
xchg
popf
movs
out
out
call
sbb
retf
ja
hlt
mov
leave
add
jnp
(bad)
jg
pushf
and
push
mov
mov
adc
add
pop
std
dec
(bad)
jge
retf
mov
mov
push
in
inc
daa
ja
ret
pop
or
cdq
push
adc
aas
dec
mov
pop
cmp
es
mov
(bad)
das
pushf
mov
mov
rep
bswap
mov
pushf
push
push
lea
jmp
pushf
lea
je
pushf
cmp
cmc
mov
sub
jmp
push
adc
pushf
pushf
lea
jmp
stc
adc
stos
add
jno
add
jo
jp
outs
in
cmc
sbb
mov
jge
in
imul
js
sahf
outs
pop
jno
add
hlt
leave
cwde
aam
clc
test
je
inc
mov
(bad)
retf
xchg
inc
inc
xlat
inc
fmul
mov
ins
inc
cmp
div
(bad)
mov
pop
ins
mov
outs
fisubr
pop
adc
popf
mov
and
push
ret
ins
mul
fprem1
das
push
loopne
jnp
cdq
dec
mov
add
fs
cmp
inc
retf
cmc
sbb
gs
test
sub
iret
xor
xor
or
sub
jge
ret
xchg
pop
xor
pop
mov
mov
lock
or
add
mov
mov
lea
pushf
mov
mov
mov
sub
call
push
sbb
mov
jno
clc
and
push
out
test
mov
add
in
ret
aaa
and
bound
retf
jmp
mov
enter
mov
cmp
iret
mov
mov
shl
outs
call
mov
inc
pop
inc
enter
mov
out
aad
jmp
adc
imul
push
push
inc
popf
or
push
sbb
pushf
jmp
add
push
outs
fs
gs
popa
addr16
add
test
jno
push
inc
adc
inc
push
inc
call
data16
dec
push
inc
and
xchg
(bad)
popa
repnz
xchg
cmps
fstp
div
scas
(bad)
scas
(bad)
mov
pop
sub
jnp
leave
ret
dec
out
mov
sub
call
and
push
test
out
fimul
mul
inc
push
cwde
nop
aaa
mov
(bad)
rep
out
icebp
inc
(bad)
ds
mov
int
xchg
mov
jecxz
iret
cmp
cmps
out
xchg
mov
mov
inc
or
imul
hlt
mov
fucomip
scas
and
push
push
pop
adc
or
lds
fst
push
rol
push
rcl
out
xlat
sar
in
fst
xor
mov
lea
call
push
lea
jne
jmp
cmc
jmp
clc
test
pusha
sub
pushf
test
jmp
cmc
cmp
mov
lea
ja
stc
pusha
imul
stc
mov
add
pusha
mov
lea
jmp
pusha
pushf
jmp
mov
push
pushf
push
pop
push
push
ret
push
stos
ficomp
cmp
ficom
test
sti
jl
mov
bound
imul
sbb
ja
sahf
retf
or
test
jmp
cli
mov
retf
out
cmp
xor
push
int3
cld
and
push
aam
arpl
scas
xlat
pop
js
mov
ror
nop
add
mov
sub
cli
aas
pushw
ins
mov
xor
sub
jecxz
(bad)
mov
test
rcl
lods
xlat
pushf
lock
pop
cmp
enter
push
sub
shl
gs
push
sbb
pop
ins
or
jne
into
adc
xor
and
cli
popf
(bad)
fwait
repnz
outs
xchg
fmul
add
(bad)
cld
sub
adc
fcmovb
cwde
pop
ret
sbb
and
xchg
jns
(bad)
dec
dec
cli
mov
adc
lahf
mov
std
inc
loopne
inc
xchg
mov
and
test
in
test
leave
ss
add
and
sub
or
or
mov
inc
or
and
fistp
sub
dec
mov
adc
pop
sbb
or
jg
in
mov
test
arpl
pop
icebp
push
in
pop
arpl
ja
mov
(bad)
pop
xor
rcr
icebp
jne
jmp
(bad)
jb
inc
inc
sub
loope
inc
dec
mov
das
jne
outs
es
mov
aaa
push
shl
xor
jno
sbb
rcr
add
mov
fst
jnp
dec
outs
sub
idiv
cs
aaa
mov
retf
mov
test
into
clc
jno
mov
mov
push
dec
les
push
sbb
adc
lods
stos
cs
inc
imul
repnz
add
dec
jns
inc
mov
jmp
push
pop
out
sbb
jno
dec
mov
push
adc
loopne
shr
push
or
mov
or
sbb
int3
cmp
push
adc
pop
int3
mov
sub
xchg
push
sbb
sbb
gs
scas
mov
cmc
adc
idiv
cdq
add
xchg
leave
lea
popa
and
dec
or
or
inc
add
jae
and
mov
hlt
jo
dec
add
jae
mov
jecxz
outs
popf
div
push
inc
add
nop
daa
in
push
add
xor
jne
ss
mov
int
jl
inc
sar
sbb
jno
aad
in
loop
mov
pop
test
lods
jl
push
outs
out
fmul
cmp
adc
es
pop
push
jbe
inc
or
sub
adc
or
sar
push
sbb
or
sub
(bad)
mov
(bad)
fist
(bad)
rcl
cmp
aas
stc
or
jns
sbb
mov
test
sub
adc
scas
jmp
mov
ins
sub
sub
sub
(bad)
shl
or
cld
loope
push
jmp
mov
cmp
dec
sbb
push
sub
push
cmp
bound
pop
cmp
cmc
sbb
xchg
ret
(bad)
xchg
adc
adc
push
inc
and
cmc
mov
pop
es
icebp
rcl
out
fdivr
or
cmp
mov
xor
sub
fld
jbe
hlt
out
push
sub
pop
sbb
push
mov
inc
inc
(bad)
fld
movs
out
cmp
pop
dec
push
lods
test
pop
adc
cwde
(bad)
mov
dec
shr
rol
stc
sbb
sahf
into
sahf
les
scas
es
push
popf
rcl
push
cmps
lea
je
jmp
clc
pushf
or
pusha
lea
je
movzx
mov
mov
not
bswap
lea
jmp
pusha
jmp
jmp
sbb
arpl
cmp
arpl
inc
xchg
lods
inc
fwait
jo
pop
js
mov
lods
pushf
aam
jmp
in
cmp
movs
cmc
in
hlt
into
cmp
(bad)
lahf
and
fadd
movs
out
inc
push
dec
sub
dec
xchg
lea
shl
retf
mov
or
push
fs
cmp
(bad)
mov
mov
mov
and
jg
inc
add
fstp
loope
mov
les
repz
sub
stc
mov
push
hlt
movs
mov
xchg
stc
stos
and
inc
jmp
pop
sbb
cld
mov
mov
push
mov
call
mov
mov
or
cdq
mov
and
mov
jo
jns
adc
sub
jp
mov
sub
repnz
xchg
mov
out
in
ret
aad
fcmovnu
cld
jecxz
push
in
pop
loop
and
cdq
adc
sub
push
inc
(bad)
push
xchg
stos
sub
dec
adc
sbb
ins
cmp
in
mov
cmp
gs
pop
scas
test
push
loopne
hlt
movs
enter
mov
push
stos
pop
fs
inc
add
out
pop
push
enter
jecxz
mov
fst
retf
mov
repz
div
jae
sbb
test
ds
cld
in
mov
or
aam
jmp
mov
retf
push
aaa
pop
and
add
fnsave
or
pop
push
lods
mov
jle
jno
sub
adc
mov
mov
addr16
mov
push
sub
ins
mov
sub
je
je
pop
fsub
push
dec
stos
test
add
sbb
ret
out
push
retf
enter
cmp
icebp
add
ins
jne
push
mov
(bad)
not
inc
mov
jb
or
jbe
sar
test
adc
fsubr
imul
int
mov
ss
xchg
adc
pcmpgtw
mov
adc
jbe
add
adc
stos
xchg
jbe
or
(bad)
cmp
jae
sbb
gs
or
js
push
mov
xor
jne
jmp
lods
xchg
adc
jae
pop
inc
out
cs
push
fcmovnu
(bad)
mov
push
lea
ja
clc
clc
pushf
imul
cmc
cmc
cmc
push
add
pusha
lea
jmp
mov
push
pop
pushf
push
mov
push
ret
jmp
cmp
xor
mov
loope
ret
ficom
(bad)
xchg
pop
(bad)
sub
or
push
push
cwde
push
xlat
jp
pop
fisubr
cmps
pop
or
call
mov
call
sar
dec
xor
ins
and
inc
push
rcr
cwde
mov
fcomp
dec
jp
fcomp
mov
and
jne
jmp
pusha
mov
pushf
pushf
lea
pusha
mov
mov
jmp
dec
mov
jno
jo
sahf
pusha
cwde
ins
adc
jno
or
add
jbe
pop
pop
cmp
cwde
xchg
hlt
jae
jmp
ins
add
inc
and
enter
cmps
pop
scas
sub
mul
or
outs
sub
pop
mov
movs
or
jmp
scas
mov
xchg
(bad)
and
jbe
lods
stos
sub
hlt
cmp
jge
cmc
xchg
rol
js
inc
pop
scas
call
mov
imul
dec
or
and
dec
jo
das
pop
push
mov
popa
adc
mov
jbe
test
popf
in
lock
sahf
push
and
fs
and
add
and
std
cmp
mov
nop
mov
int3
test
jbe
or
dec
into
into
in
pop
fidiv
ret
call
les
fucom
xor
xor
add
mov
jno
shl
adc
mov
xchg
ficom
sub
bound
cmp
pop
adc
xor
add
xchg
lods
pop
cmps
mov
mov
(bad)
ins
add
ja
test
cmp
jg
dec
mov
sbb
add
jbe
cwde
mov
jge
ins
in
sub
xchg
jmp
mov
jnp
cmp
mov
cmps
idiv
xchg
jno
movups
and
mov
frstor
outs
and
mov
aad
push
lock
nop
fcomip
jg
iret
lahf
mov
cmp
pop
or
sbb
xor
jb
jbe
data16
adc
mov
push
inc
mov
dec
or
lahf
xlat
xlat
pop
jecxz
push
xlat
jp
sbb
outs
enter
jo
ss
pop
or
dec
mov
out
sub
imul
mov
add
dec
inc
pop
stos
mov
in
bnd
and
pusha
jl
mov
cmp
or
sub
icebp
mov
lods
bound
rol
xchg
arpl
mov
outs
mov
pop
sbb
sub
pop
sbb
cmc
movs
imul
ss
mov
fwait
mov
bound
fmul
pop
sbb
push
outs
das
sbb
adc
or
mov
into
out
aam
mov
add
dec
adc
lea
jae
pushf
push
pushf
pusha
lea
jmp
shrd
inc
call
mov
cmp
dec
or
or
hlt
stos
push
outs
push
or
cmp
in
outs
popa
fild
(bad)
les
pop
ss
pop
and
ins
sahf
imul
pop
xor
mov
aas
add
pop
or
and
sub
fst
mov
xchg
mov
xor
xor
cld
imul
ins
lahf
ins
and
fdiv
loop
inc
mov
jp
mov
adc
jle
fcom
(bad)
div
mov
jp
push
fcom
xchg
call
jbe
cwde
inc
cs
mov
call
jns
dec
jne
and
test
cmp
mov
fisubr
sbb
sbb
stos
out
fbstp
fistp
xor
aas
cs
mov
shr
jle
mov
mov
lods
std
mov
fidivr
cmc
sub
fidivr
les
test
ret
xchg
xor
jno
jmp
push
fadd
xchg
aad
jno
(bad)
or
jg
cdq
sbb
pushf
test
les
gs
fchs
test
imul
adc
lahf
bound
cmc
idiv
in
call
mov
daa
dec
cmp
sbb
jge
pop
rcr
js
mov
mov
adc
out
xchg
xchg
cmp
mov
ds
in
rol
mov
adc
jno
mov
fisttp
stos
loop
mov
adc
into
add
js
pop
sub
sub
jns
test
or
pop
or
inc
fisub
cmc
mov
ficomp
cmp
dec
dec
mov
add
cli
mov
xor
add
retf
in
loop
or
xor
xchg
(bad)
mov
clc
sahf
cmps
in
lea
lds
cmp
sbb
xlat
nop
mov
add
dec
dec
mov
mov
retf
pop
pushf
push
ja
sub
jb
nop
inc
push
enter
jl
xor
jo
sbb
inc
sar
cmova
mov
stc
test
or
inc
jg
repz
pop
pushf
push
jle
adc
pop
leave
out
mov
in
sbb
add
scas
mov
mov
cld
ret
clc
pop
arpl
loopne
cmp
(bad)
fld
lahf
xchg
(bad)
in
sti
out
fstp
mov
add
cmp
cmc
pop
aas
out
xchg
mov
call
inc
inc
repnz
fcmovnu
and
iret
shl
cmp
lock
add
les
dec
ins
sub
lea
imul
pusha
cmp
les
push
enter
mov
rcl
cmps
jmp
aaa
jle
cs
outs
jge
dec
sahf
xchg
in
scas
lahf
iret
std
mov
mov
jno
ss
jp
push
sub
add
cmp
aad
retf
mov
cmp
dec
retf
mov
jno
jmp
imul
movs
out
add
mov
sub
in
mov
sti
retf
mov
rcl
ds
pop
inc
push
mov
xchg
xchg
sbb
jmp
fucom
int
in
out
push
xor
cmp
arpl
and
out
rcl
pop
sar
inc
push
dec
repz
aad
pop
dec
sbb
push
inc
pop
fs
dec
arpl
fucom
cmps
xor
push
rcl
pop
dec
dec
xchg
jnp
stc
pop
xor
dec
dec
lds
test
hlt
mov
mov
aaa
cmps
call
lahf
bound
sbb
jecxz
xchg
(bad)
pop
sub
cmp
mov
rcl
and
mov
xchg
ret
stos
jecxz
not
vhaddpd
scas
in
mov
jg
push
out
scas
xlat
jp
dec
or
mov
push
push
aas
outs
push
aaa
xor
adc
ret
popf
data16
daa
repz
sbb
sub
pop
mov
(bad)
xchg
cwde
fistp
into
mov
outs
inc
js
add
dec
outs
cli
arpl
mov
dec
add
pop
adc
shl
add
lea
test
pop
add
push
sbb
push
inc
jae
jns
rcl
or
jae
or
cmc
sbb
jbe
test
scas
mov
pop
xor
imul
jb
pop
ss
call
sub
inc
pop
out
fcomp
(bad)
fistp
lock
std
std
mov
imul
pusha
jnp
fisttp
enter
popaw
pushf
mov
pop
mov
xor
sbb
std
jge
test
inc
ret
aam
push
retf
jmp
nop
xchg
pop
test
sub
enter
hlt
inc
(bad)
lea
cmps
les
mov
dec
add
dec
clc
jmp
call
imul
ficomp
jp
(bad)
adc
int
repz
fs
sub
imul
jno
add
sbb
or
and
dec
push
aas
outs
add
xchg
retf
mov
and
test
xor
shl
sti
mov
(bad)
hlt
cs
adc
pop
pop
xor
jb
sbb
adc
fsub
jne
outs
and
jb
and
pop
xchg
fld
dec
scas
mov
mov
int
or
push
inc
and
in
repz
pop
push
mov
jp
pop
fs
inc
add
mov
jno
inc
add
or
jle
inc
pop
jo
mov
jo
out
in
popf
outs
push
pop
xor
jl
pop
or
(bad)
and
inc
in
sub
adc
fistp
sti
cs
jl
in
push
or
jns
je
and
mov
aad
cmps
jle
inc
cmp
loopne
sub
loop
xor
push
cmp
cmc
mov
retf
adc
mov
into
push
shl
and
jmp
and
inc
rcl
inc
int
fmulp
adc
call
xchg
pop
mov
ror
xchg
shl
mov
pop
adc
ins
sub
and
cmp
pop
outs
ds
(bad)
into
(bad)
out
shl
ror
lea
jb
cmc
cmp
pushf
lea
jae
bswap
mov
call
cmp
call
in
xor
and
and
add
mov
js
div
mov
mov
mov
cld
ins
mov
mov
(bad)
out
cmp
inc
pop
scas
add
(bad)
jp
dec
int
jecxz
(bad)
sub
xor
cmp
jno
push
or
dec
jecxz
arpl
arpl
loop
push
ficom
cmps
lods
mov
fldln2
addr16
sbb
xor
sti
retf
jecxz
push
cmp
sbb
(bad)
mov
mov
in
xor
test
pop
outs
sbb
xchg
das
cdq
fst
jbe
sbb
gs
xor
adc
adc
outs
xchg
jmp
outs
xchg
pop
xlat
ja
addr16
jo
push
lods
mov
mov
mov
push
push
ret
lods
mov
jno
pop
jecxz
std
sub
repnz
mov
inc
xor
or
and
(bad)
repz
stos
xlat
jp
hlt
or
cmp
stos
pop
mov
out
inc
dec
or
push
dec
add
mov
sbb
jns
sbb
push
pop
jns
arpl
out
lods
dec
iret
int
push
call
sbb
jle
std
ret
cdq
je
das
jg
shl
in
sbb
xor
pushf
and
inc
mov
(bad)
and
div
adc
in
or
push
push
fstp
cld
retf
fisub
int3
and
jecxz
retf
pushf
lds
dec
mov
imul
loopne
add
out
ret
pop
pop
das
sbb
leave
or
pop
ret
dec
cmp
cs
(bad)
or
lea
inc
cmp
out
jbe
cld
(bad)
out
cmps
jo
sub
inc
xchg
scas
lds
mov
sbb
sbb
adc
ins
mov
in
jge
sti
sti
jb
not
pop
fstp
mov
outs
jecxz
mov
xlat
cdq
(bad)
int3
sub
inc
out
shr
jno
aam
js
mov
pop
mov
pop
xor
jle
sti
xchg
rcr
sub
cdq
test
mov
leave
mov
dec
mov
adc
mov
mov
cmc
adc
fwait
mov
std
das
mov
cmp
gs
xchg
mov
js
int
push
aaa
dec
jno
fdiv
clc
dec
jo
sti
mov
inc
leave
jp
(bad)
aad
mov
jns
mov
xor
loope
adc
jg
cs
retf
(bad)
xchg
and
pop
pop
shl
addr16
add
or
ror
imul
mov
sbb
and
mov
cld
xchg
repnz
pop
rcr
mov
xchg
out
(bad)
loopne
jo
jmp
jno
mov
xlat
das
xlat
and
test
mov
cli
sbb
popa
repz
fcom
(bad)
xlat
sar
xor
sub
lods
mov
lods
push
xor
add
cmp
scas
stos
xor
xchg
sbb
imul
cmp
jecxz
xchg
push
sbb
inc
loope
rol
out
fs
shl
mov
cli
push
ja
sti
ror
imul
js
hlt
fadd
arpl
pusha
lea
jne
aas
stc
stc
xor
daa
cmp
btr
cmp
mov
cmc
shl
sar
add
sbb
push
bt
mov
cmp
test
pusha
jmp
mov
push
pusha
lea
jae
sbb
bsr
mov
xadd
mov
rcr
bswap
sub
ror
mov
cmp
sub
stc
test
bt
repnz
pusha
push
lea
jne
xor
bt
clc
shld
mov
add
sub
push
lea
pusha
pusha
call
dec
pop
out
shl
jno
(bad)
fisttp
lods
into
hlt
mov
nop
mov
retf
inc
retf
pushf
int
mov
jo
mov
mov
mov
and
ficom
jo
jg
add
mov
mov
adc
sbb
sub
mov
push
adc
addr16
icebp
out
int3
(bad)
int3
jno
iret
mov
xchg
fistp
inc
push
jo
je
adc
or
mov
popf
aad
nop
fcmovbe
xor
sbb
enter
call
add
cmps
(bad)
jmp
add
div
mov
sbb
lods
xchg
ficomp
jmp
je
data16
inc
inc
stos
jae
out
stos
cmp
mov
push
or
fnsave
push
dec
mov
cmp
sahf
fidiv
add
push
cld
daa
mov
dec
ror
aad
adc
jns
mov
inc
(bad)
mov
in
and
outs
sub
xlat
pop
push
sbb
mov
popf
adc
addr16
adc
mov
cmc
mov
mov
mov
(bad)
or
adc
pop
mov
fnsetpm(287
ja
jnp
sub
mov
(bad)
fstp
cli
mov
call
cdq
mov
sub
sub
inc
jns
cmps
loope
out
pop
pop
or
push
(bad)
(bad)
mov
es
repz
lock
in
jp
lea
adc
add
pushf
pusha
push
jmp
jecxz
dec
jns
cmp
adc
test
or
call
sub
add
sbb
imul
fsubr
push
or
add
and
push
sbb
sbb
out
(bad)
fisttp
test
ds
and
repz
mov
mov
fwait
mov
ins
int3
aad
shl
cdq
adc
sbb
popf
and
sbb
push
add
scas
imul
mov
adc
ret
in
(bad)
data16
pop
cwde
or
inc
retf
ds
push
cmp
pusha
sub
arpl
jb
or
xchg
mov
loope
xchg
shr
sub
push
push
inc
add
mov
jmp
or
sub
cmp
ja
ret
cmp
dec
outs
add
imul
inc
pop
mov
cld
mov
dec
dec
into
sahf
ret
icebp
mov
in
hlt
add
cmp
or
sar
popa
or
pop
push
pop
sar
pop
repz
xchg
cmp
mov
in
add
adc
gs
retf
push
jg
push
push
adc
cmp
jne
jne
retf
out
mov
mov
int3
dec
pop
push
sbb
xor
mov
xchg
add
push
push
rcr
das
dec
cmp
int3
rcr
fwait
adc
xchg
fist
ja
or
mov
ror
mov
rcl
mov
cmp
cmp
pushf
xor
push
repnz
pusha
push
lea
jne
shld
pushf
bt
xchg
mov
shld
dec
lea
call
push
pushf
lea
ja
jmp
pushf
pusha
lea
jne
shl
bt
mov
cmp
pusha
pushf
add
pushf
movzx
movzx
mov
pushf
push
add
clc
mov
jmp
cmp
stc
repnz
call
sub
loope
jno
or
ret
(bad)
div
mov
mov
stos
pushf
frstor
ret
pop
arpl
in
jge
pop
mov
cmc
push
jno
(bad)
mov
cmps
jmp
fidiv
pop
jbe
fadd
test
add
(bad)
jmp
je
fwait
mov
ins
xchg
cld
pop
les
cmp
pop
jnp
fst
arpl
mov
inc
stos
sub
iret
inc
mov
mov
push
push
adc
call
fcomp
jmp
(bad)
in
jle
sbb
sub
and
je
push
pushf
push
pop
pushf
push
push
ret
sti
mov
jno
je
aam
sub
dec
push
pop
inc
or
jno
push
add
push
push
jo
and
shl
std
aas
or
pop
out
jmp
fimul
push
in
leave
(bad)
adc
arpl
js
jb
hlt
add
or
xchg
call
or
xor
test
icebp
mov
in
sbb
add
or
adc
imul
inc
popf
add
mov
mov
mov
lahf
sub
movs
in
hlt
mov
sub
ins
jp
mov
mov
test
push
icebp
pop
push
aas
push
call
add
outs
inc
loopne
jno
imul
inc
pop
inc
add
cmove
outs
adc
pop
push
bound
scas
push
hlt
out
xchg
xlat
mov
mov
mov
sbb
ror
loopne
cmc
(bad)
push
cs
rol
mov
mov
mov
adc
loope
sub
adc
mov
icebp
lahf
lods
enter
sub
nop
mov
gs
adc
inc
sub
adc
cmp
aas
jge
aas
jne
ins
daa
stc
or
dec
push
adc
push
pushf
fstp
aad
fimul
cmp
xchg
in
xor
fcom
(bad)
call
and
call
mov
jmp
iret
sub
mov
test
add
mov
cmp
sbb
xor
jmp
mov
cmp
mov
cmp
jne
cmps
xchg
jl
in
sub
dec
add
stos
add
xchg
int3
push
or
inc
rol
not
add
cmps
scas
repz
sub
scas
das
sub
movs
fwait
shl
(bad)
iret
push
sub
xchg
xchg
mov
xor
js
and
cdq
xor
add
xor
xchg
ret
xchg
lds
int
in
xchg
xchg
adc
or
(bad)
xchg
fisttp
shl
mov
or
adc
mov
(bad)
xchg
shr
xor
cmp
xor
icebp
sbb
mov
cmp
or
enter
bound
add
retf
sub
mov
mov
rcl
jle
add
(bad)
dec
movs
xchg
stc
lock
rcr
scas
sub
gs
enter
imul
mov
idiv
shl
cmp
push
imul
push
cmps
inc
pop
jbe
retf
push
cmp
cmp
stc
add
(bad)
adc
jo
cs
push
arpl
pushf
lea
jmp
lea
je
clc
sub
clc
pushf
cmp
pushf
call
gs
cmp
jge
cmovl
sub
imul
dec
add
packsswb
repz
push
ins
(bad)
stc
or
xlat
add
je
add
jno
xchg
call
lahf
push
ins
pop
xor
fcomp
stos
mov
adc
push
ror
(bad)
fcmovnb
dec
loop
mov
mov
or
je
push
jle
pop
xchg
mov
jmp
cwde
retf
push
xor
ja
jmp
pop
add
pusha
mov
dec
sar
in
push
cmp
sar
ss
lods
lods
mov
jmp
jno
xchg
mov
or
mov
inc
pop
sbb
enter
rol
loope
aam
je
std
cmp
add
xor
test
lds
neg
out
adc
sbb
push
in
std
jnp
pop
adc
add
aaa
jno
arpl
sub
mov
adc
adc
and
outs
jae
add
pop
xor
aad
icebp
inc
loope
jge
mov
daa
addr16
pop
jl
shr
fs
inc
push
pop
mov
call
dec
xchg
lods
leave
int3
lods
cld
mov
out
mov
imul
cmp
xchg
mov
mov
sbb
out
xchg
aam
pusha
js
cmp
pusha
cmp
or
data16
add
lea
lea
pushf
cmc
pushf
sub
test
call
cmps
in
mov
pop
push
pop
ss
jae
jb
gs
dec
sbb
inc
and
adc
dec
or
push
sbb
sahf
mov
or
pop
push
adc
add
adc
scas
add
test
test
add
add
push
and
and
inc
sti
mov
cmps
je
xchg
jns
sbb
and
push
pop
(bad)
add
test
dec
pop
sti
sti
mov
inc
mov
(bad)
sti
stos
mov
pop
pop
adc
ror
mov
out
pop
retf
sbb
sti
in
ja
iret
cmps
push
push
mov
(bad)
cmp
adc
pop
inc
and
push
ds
push
xlat
fimul
mov
mov
cmps
and
paddsb
ss
sbb
pop
sbb
sbb
int
cmp
fbld
jns
das
popa
out
neg
fist
retf
test
mov
lock
aam
sub
test
pop
icebp
sub
scas
ds
jne
or
pop
test
pushf
sbb
pop
sbb
xchg
pop
les
push
daa
or
adc
cmp
ss
jp
ror
jns
(bad)
out
jecxz
xchg
pop
imul
push
xor
mov
or
sbb
test
push
ds
xchg
add
sti
aad
pop
push
and
stc
xchg
or
push
push
rol
adc
mov
mov
pushf
ja
dec
xor
xor
aas
and
xchg
aas
xor
push
inc
jle
xor
add
cmp
aam
add
cmp
pop
pop
xor
cmp
and
push
fidiv
call
or
xchg
movs
add
pushf
lea
je
push
sub
bt
jmp
jp
jl
(bad)
cmp
lods
out
enter
mov
push
inc
pop
adc
jg
int3
jns
mov
sbb
mov
gs
sti
mov
sahf
xchg
sbb
arpl
push
adc
scas
jnp
rcl
popa
mov
clc
test
or
sahf
mov
adc
mov
das
lds
(bad)
leave
adc
(bad)
mov
mov
xchg
idiv
jo
mov
sub
repz
push
mov
push
or
scas
xchg
shl
ja
mov
sub
adc
sub
xchg
scas
imul
cmp
jae
out
xor
push
and
fimul
xchg
mov
mov
xor
mov
mov
mov
cli
aad
(bad)
xchg
imul
daa
cmc
in
aam
add
push
dec
nop
inc
enter
pusha
(bad)
or
inc
inc
jmp
cvtdq2ps
std
mov
mov
sbb
cwde
fistp
mov
(bad)
(bad)
mov
(bad)
call
fwait
movs
xor
jne
pop
xchg
out
in
idiv
inc
jmp
call
pop
pop
out
dec
clc
cmp
arpl
jmp
dec
add
inc
add
or
es
sbb
cmp
inc
push
push
dec
fs
mov
loope
aad
inc
and
or
and
cmp
mov
in
adc
mov
fcom
shr
mov
cdq
add
lods
in
xor
jmp
daa
arpl
loop
sbb
xor
add
push
pusha
and
nop
scas
daa
(bad)
pop
xchg
or
rol
or
jp
lods
dec
jg
out
jge
clc
retf
mov
cdq
adc
arpl
jl
bound
mul
fs
das
sub
mov
and
jne
cmc
cmc
stc
sub
pusha
pushf
lea
jmp
hlt
mov
xor
cmp
xchg
xlat
mov
mov
mov
retf
dec
in
xor
push
je
frstor
outs
pop
les
(bad)
(bad)
test
ins
cwde
push
mov
rol
dec
jle
stc
mov
ss
xor
mov
mov
les
sbb
sbb
mov
mov
mov
and
aad
addr16
xor
lock
mov
inc
lods
nop
inc
sbb
or
cmp
dec
int3
rol
in
mul
ss
push
jns
add
mov
fdiv
xchg
mov
push
mov
push
popf
ins
xlat
mov
jae
sti
or
push
add
mov
jo
or
xchg
xchg
stc
inc
sar
adc
dec
icebp
pop
mov
mov
fild
(bad)
push
ins
inc
sahf
push
imul
xchg
pop
inc
pop
or
into
push
imul
(bad)
fidivr
mov
push
clc
push
dec
add
ja
out
and
dec
sbb
ret
icebp
mov
cli
in
lds
inc
dec
mov
mov
mov
mov
push
dec
div
fst
cdq
xchg
mov
mov
mov
mov
mov
inc
cmps
pop
popf
push
or
loope
loopne
or
cdq
pop
sub
pop
test
out
cld
dec
out
sahf
xchg
lahf
icebp
mov
pop
dec
cli
jmp
xchg
stos
mov
xchg
movs
outs
mov
mov
pop
push
popa
xchg
and
xchg
pop
aam
(bad)
push
mov
push
or
mov
xor
add
fld
xor
pop
pushf
mov
push
jl
out
mov
xor
adc
mov
call
clc
test
sub
mov
mov
mov
mov
adc
stc
sub
mov
dec
fwait
mov
mov
push
jp
mov
mov
xlat
jne
(bad)
sbb
test
xchg
xchg
jge
int
cmps
lods
je
jbe
popa
mov
inc
jno
mov
sahf
scas
hlt
dec
retf
push
movs
push
call
sub
fnclex
scas
int
mov
movs
mov
adc
sub
(bad)
std
mov
test
or
movs
mov
push
push
dec
dec
enter
push
xchg
ss
in
jbe
rol
out
dec
jbe
push
jnp
xor
pop
and
xor
sbb
jo
and
or
push
pop
sub
add
aas
jno
stc
retf
and
je
mov
mov
jg
cmp
add
iret
data16
sub
rcr
scas
or
push
sbb
adc
inc
add
in
jno
hlt
loop
mov
cmp
push
pop
repz
mov
(bad)
xor
sbb
xchg
int
outs
ja
out
in
aaa
pop
loopne
and
int3
inc
push
dec
pop
mov
call
ins
imul
rol
cmp
out
fild
xor
push
aas
mov
add
dec
inc
outs
ja
ins
outs
popa
fs
outs
inc
imul
push
hlt
cmp
into
cmp
push
push
dec
push
int3
cmp
and
stc
stc
inc
add
and
aam
push
mov
jp
imul
xchg
xor
and
je
inc
fcmovbe
(bad)
enter
rcl
xchg
cmp
imul
xor
dec
cmps
push
and
jbe
inc
pop
jb
sbb
loopne
gs
inc
mov
push
xchg
mov
jmp
inc
daa
xchg
push
(bad)
out
cdq
jb
in
push
je
add
aas
cs
cmp
int3
sub
jbe
dec
pop
push
xchg
lock
jecxz
mov
inc
mov
xlat
rcr
test
or
and
xchg
stos
out
hlt
mov
add
xchg
fidiv
inc
add
xchg
inc
(bad)
jmp
imul
sbb
push
or
lea
jne
push
pusha
mov
pushf
pushf
pushf
lea
jmp
mov
movsx
setge
lea
jmp
lea
jae
pushf
cmp
cmp
jmp
jmp
push
pushf
mov
lea
jne
push
call
pushf
mov
pusha
mov
mov
mov
pusha
pushf
push
mov
lea
jmp
jne
rol
mov
and
bsf
shl
not
sub
lea
dec
xor
mov
pushf
test
sub
bt
jmp
ja
mov
out
xchg
mov
inc
add
jnp
pop
push
mov
mov
test
jg
add
and
jp
xlat
jmp
push
mov
adc
jl
jbe
cwde
jnp
jns
mov
idiv
push
sub
adc
add
or
or
(bad)
cmp
mov
sub
jge
call
lock
sub
or
bt
clc
sub
pushf
call
call
not
pusha
mov
movzx
pushf
setne
not
lea
pushf
call
data16
push
icebp
cmp
das
ins
add
or
into
cmp
sbb
(bad)
jmp
icebp
mov
push
cmp
sub
jecxz
out
cld
mov
loopne
dec
sub
nop
sar
movs
std
daa
or
lods
or
jmp
fld
in
or
imul
sahf
add
test
xor
pop
sbb
ret
aas
in
and
stc
jno
addr16
jle
xor
inc
add
outs
pop
mov
out
mov
pushf
xor
xchg
aas
neg
repz
push
cmp
fwait
xchg
repnz
xchg
jns
inc
jbe
push
inc
aad
int3
mov
sub
(bad)
xor
and
or
xchg
pop
sbb
call
pushf
adc
jmp
(bad)
xchg
jp
icebp
cmp
es
pop
cmps
pop
push
pop
shl
ss
xchg
ins
lds
jp
stc
sub
pop
test
xchg
mov
pop
mov
nop
out
lods
out
mov
call
cmps
int3
xchg
cmp
xchg
xchg
fs
das
push
je
or
sbb
inc
test
xlat
pushf
das
jno
mov
jl
cwde
sub
push
dec
or
call
and
pusha
call
fldl2t
mov
add
idiv
test
ins
lds
xor
hlt
rcl
xor
push
std
or
ror
iret
sbb
or
and
jmp
push
outs
sub
test
fnop
fcomp
and
test
add
mov
std
xor
cmp
int
(bad)
stos
jecxz
stc
xor
or
mov
sbb
mov
jmp
ja
push
inc
sbb
mov
test
mov
sub
out
mov
xchg
daa
test
dec
test
mov
loop
mov
push
arpl
addr16
mov
adc
iret
jo
sahf
mov
sbb
in
mov
cli
(bad)
push
cmp
inc
xchg
sub
int
loope
pop
fcmovnbe
fiadd
mov
sar
movs
sub
xchg
cmp
cli
push
jg
pop
inc
out
fst
xlat
cs
xchg
push
push
dec
mov
cmp
inc
aas
jb
and
test
stos
lds
sub
pop
daa
sti
cmps
lods
sahf
and
(bad)
mov
cmc
ffreep
inc
int
into
jmp
cmp
cmc
pusha
push
daa
out
aaa
cli
(bad)
movs
xchg
(bad)
pop
ja
je
pushf
rcl
shl
xchg
fmul
aaa
(bad)
add
inc
(bad)
adc
mov
call
jl
lock
lahf
adc
mov
enter
scas
(bad)
scas
das
and
jle
mov
push
push
pop
push
mov
push
ret
pushf
dec
cmp
pusha
clc
jmp
jmp
(bad)
sbb
cmp
inc
adc
push
cmps
cmps
cdq
pop
nop
cld
mov
nop
fcomp
fist
push
xchg
cmps
xchg
lods
jmp
push
pop
cmp
shl
xchg
jno
pop
mov
sahf
or
cmp
push
das
ins
das
data16
push
xchg
cli
adc
pop
or
xchg
iret
jno
push
jecxz
loope
sti
call
jbe
fsub
test
sbb
push
mov
sbb
scas
pop
imul
push
fstp
dec
jle
push
inc
stc
cld
int3
test
jecxz
outs
pop
adc
jge
sub
cmp
jb
or
retf
call
lock
mov
test
push
mov
cmp
call
pusha
adc
call
mov
pushf
lahf
push
movzx
lea
call
dec
inc
push
dec
inc
dec
xor
cs
ins
add
and
mov
dec
cmc
push
popfw
mov
call
add
dec
add
dec
add
ror
mov
add
add
add
inc
inc
dec
clc
ror
mov
bt
jmp
pushf
push
clc
cmp
pushf
mov
push
mov
lea
ja
and
rcl
sub
rcr
clc
bt
add
setle
not
adc
mov
inc
xor
mov
cmc
pushf
stc
repnz
pusha
pushf
mov
lea
jne
call
ficomp
jno
add
jnp
arpl
pop
sub
push
gs
mov
call
mov
rcr
xor
out
and
out
repz
stos
sti
xchg
aad
jmp
mov
sub
and
rcr
popf
fisub
inc
push
xor
mov
mov
inc
mov
jp
jmp
mov
fwait
dec
leave
dec
jae
cmp
push
addr16
jne
sbb
pop
adc
push
outs
and
cs
aad
jmp
stos
out
push
int
aad
jp
jno
pop
scas
xchg
fwait
dec
leave
xchg
cdq
cmp
cmp
xor
addr16
push
push
cmp
push
pop
mov
inc
jo
jne
push
push
pop
sbb
or
add
fistp
inc
push
or
fsubp
jo
retf
xchg
push
pop
dec
add
stos
out
lods
imul
pusha
pop
pop
cmp
in
sbb
mov
test
sub
sub
xchg
or
pop
or
dec
test
jp
mov
cmp
mov
stos
rcr
pop
pop
mov
ror
jns
push
sub
stc
retf
movs
jmp
sub
dec
push
gs
jae
pop
(bad)
xchg
push
pop
push
adc
fwait
mov
in
push
imul
push
outs
ret
dec
les
stos
sbb
adc
in
icebp
test
in
ret
jns
shl
push
push
push
clc
inc
mov
scas
push
adc
xchg
sub
push
pop
xlat
das
imul
dec
dec
lock
in
lods
xchg
add
mov
cmp
mov
mov
dec
lods
push
pop
sbb
mov
add
fs
jne
rcr
adc
shrd
mov
or
shl
push
sub
clc
stc
shl
dec
lea
clc
clc
bt
sub
cmc
clc
stc
cmp
push
pop
jmp
not
sub
add
or
bts
mov
neg
mov
cmc
bt
cmp
repnz
pusha
lea
jne
push
mov
not
jmp
push
adc
jno
daa
shl
rol
fstp
jecxz
rcl
push
(bad)
inc
je
ins
and
pushf
jle
mov
ja
ds
sbb
adc
gs
sub
dec
sbb
jne
dec
leave
jecxz
jmp
xor
call
lods
loop
or
pop
sahf
ins
mov
cmp
mov
ja
stos
mov
out
stos
or
ins
addr16
(bad)
ins
add
loopne
xchg
mov
popa
cmps
fwait
sbb
push
je
icebp
and
cmp
jns
sub
(bad)
pop
das
imul
dec
lods
fxch
cmp
sub
adc
mov
sbb
jb
imul
jl
xor
inc
pop
fwait
xor
and
push
and
fnstenv
cmp
push
cld
nop
fbld
clc
ror
sub
bswap
jge
xor
jno
aas
arpl
cmp
imul
push
je
sbb
xchg
scas
jmp
pop
dec
sub
push
std
add
punpcklwd
(bad)
cld
mov
jmp
hlt
cmp
mov
sub
mov
shr
adc
pop
pop
fcomp
stc
mov
jecxz
mov
sbb
jbe
lds
and
mov
jo
and
or
test
mov
lea
jne
call
imul
jmp
cmc
or
pusha
call
out
mov
jno
or
pop
push
and
sub
imul
mov
fadd
xor
cmp
and
sti
jbe
adc
xor
outs
mov
std
sbb
cmp
sahf
iret
or
and
dec
cli
data16
cmps
dec
cmps
loopne
popa
jl
or
inc
repnz
jmp
mov
inc
push
jle
les
sbb
jb
out
mov
ja
cwde
xchg
xor
inc
loopne
inc
stos
cmp
mov
or
sub
loope
(bad)
sti
(bad)
jno
rcr
mul
or
enter
adc
jae
out
xchg
cli
bound
mov
scas
pop
ds
sahf
xchg
jge
sub
shl
cld
push
mov
add
xchg
shr
rcl
jg
pop
push
clc
out
pop
pop
(bad)
rcl
push
pop
inc
enter
inc
inc
xchg
pop
jbe
or
and
loopne
jg
pop
sbb
mov
jae
pop
jl
mov
or
or
popf
ins
or
jae
push
push
adc
sbb
pop
ds
(bad)
test
test
jbe
sbb
rcl
push
dec
call
push
rcr
test
mov
leave
imul
xor
in
mov
xchg
popa
xchg
add
lea
xchg
loop
xlat
dec
add
dec
inc
pop
sbb
lahf
push
pop
test
or
mov
or
mov
stos
xchg
sbb
jmp
jno
(bad)
mov
fwait
lock
es
cmp
push
bound
fistp
fmul
inc
dec
je
pop
dec
inc
int3
ficomp
(bad)
sahf
iret
push
jmp
cwde
fisttp
adc
jmp
xchg
rcr
fstp
outs
das
arpl
fidiv
mov
push
add
ins
scas
aam
imul
imul
sub
pop
mov
jg
sub
(bad)
cwde
inc
lods
inc
mov
aam
fcomp
sahf
fsub
mov
stos
in
mov
lock
fisttp
es
mov
std
in
fdivr
int3
ror
imul
push
cmp
js
push
and
lahf
aad
or
scas
sub
or
mov
push
mov
xor
push
cmp
sbb
xchg
pop
sbb
je
xlat
and
push
push
fnstsw
gs
and
xchg
mov
in
cmp
jg
push
call
mov
cmp
inc
inc
cwde
imul
les
push
mov
mov
add
mov
push
xor
cmp
mov
inc
retf
or
mov
dec
pop
lods
(bad)
xchg
and
adc
or
loope
imul
push
push
fdiv
ja
rcr
mov
dec
jo
adc
lods
stos
imul
sub
push
push
cmp
jg
out
xor
cmp
sti
sar
add
add
dec
sbb
add
cmp
sbb
arpl
push
out
in
gs
pop
cmp
mov
enter
adc
push
in
test
lods
xchg
add
jg
ret
mov
cmp
das
shl
(bad)
cwde
(bad)
test
mov
mov
xor
mov
scas
jmp
sub
push
jbe
das
xor
adc
and
call
xchg
retf
mov
(bad)
push
xor
cmp
cmp
lods
out
jne
xor
int
retf
push
push
push
sahf
pushf
hlt
xor
and
jg
add
ret
xchg
cmp
mov
jbe
lods
aaa
push
inc
mov
retf
mov
jg
es
inc
lods
fist
lods
and
scas
mov
test
mov
and
daa
movs
mov
or
popa
inc
or
xor
sar
cmc
out
and
hlt
mov
call
adc
jno
mov
or
imul
push
cmp
xor
push
push
gs
into
add
loope
ds
sbb
inc
sbb
imul
push
shl
fsubr
xor
retf
aam
cmp
jge
xlat
les
push
icebp
out
inc
fsubp
test
xor
int
pop
lds
inc
inc
jnp
neg
jmp
ret
sar
dec
popf
sbb
push
jecxz
leave
cmc
xor
mov
push
hlt
leave
pop
pop
and
cmps
gs
pop
sbb
push
cdq
in
or
adc
ins
push
adc
xor
jne
sbb
ror
push
pushf
lea
jae
pusha
push
cmp
call
cmp
pusha
lea
ja
setle
mov
inc
pusha
jmp
pop
adc
mov
push
sbb
loope
dec
add
dec
jbe
pop
mov
dec
sbb
cmp
div
repz
mov
add
sub
cwde
or
(bad)
stos
dec
mov
jno
dec
adc
inc
sbb
nop
mov
loopne
dec
push
sbb
mov
xchg
jb
ins
ins
(bad)
pop
or
jp
jbe
add
or
sub
and
fld
lock
test
jnp
in
movs
lods
call
push
and
out
push
fdivr
pop
xchg
cdq
jb
jns
and
repz
mov
or
loop
cmp
bound
and
cdq
test
hlt
mov
call
rol
ror
add
sbb
ror
shl
mov
bt
test
mov
call
inc
pusha
mov
lea
pushf
mov
lea
call
jmp
jno
popf
call
jno
mov
jnp
repz
mov
mov
out
outs
push
cmps
xchg
push
cli
mov
jbe
pop
adc
ficomp
shr
mov
cmp
sar
dec
adc
fidiv
cwde
add
xlat
lea
fnstenv
pop
dec
jge
inc
pop
ins
cs
and
inc
jo
or
dec
push
xchg
popf
mov
gs
sub
or
fcomip
lock
push
pop
or
add
leave
jle
ds
gs
sub
mov
xchg
xchg
xor
arpl
cld
or
mov
add
jno
and
dec
pop
dec
popf
ins
mov
ins
jnp
push
adc
(bad)
in
mov
iret
mov
mov
xchg
imul
dec
sub
xchg
fisttp
nop
pop
lods
dec
mov
mov
inc
lahf
push
call
aad
into
aas
sar
mov
jle
sub
out
out
pop
retf
into
mov
jmp
dec
cwde
shl
or
adc
jne
dec
push
test
xor
jmp
inc
pop
inc
fwait
bound
pop
fnsave
bound
sub
push
enter
mov
push
push
sar
adc
push
sbb
lahf
pushf
sbb
push
gs
add
repz
popf
fsub
pusha
retf
retf
out
out
test
mov
inc
and
inc
fwait
mov
mov
lea
jne
cwde
mov
sete
setp
mov
pushf
call
cmp
call
lea
ja
xor
not
add
add
mov
cmp
cmc
cmp
push
lea
jb
pusha
push
cmp
pushf
call
pop
push
int3
mov
nop
fnstsw
loope
clc
mov
scas
nop
(bad)
mov
pushf
stc
mov
fisttp
mov
sbb
push
cmps
mov
iret
cmps
mov
mov
pop
mov
outs
pop
shl
repz
mov
push
stc
or
sti
ret
xor
jnp
adc
cwde
xchg
aad
mov
fcmovnu
cli
mov
adc
dec
push
into
inc
inc
or
mov
pushf
pusha
popf
cmc
imul
jno
add
xor
adc
(bad)
adc
cmp
dec
into
and
aaa
call
hlt
fwait
test
test
xchg
das
and
pop
test
pop
xchg
popa
push
dec
bound
inc
int3
repnz
ffree
pushf
inc
outs
(bad)
jno
jno
cmp
mov
cdq
rol
or
ror
sub
cmps
dec
jp
xchg
sbb
bound
out
adc
movs
xchg
js
jmp
or
stc
jns
pop
iret
xchg
xchg
xchg
inc
jae
xchg
stos
push
sbb
inc
sbb
mov
retf
push
mov
(bad)
xor
dec
mov
xchg
push
jmp
inc
push
in
in
push
mov
test
push
retf
mov
xchg
push
mov
mov
test
push
lahf
xchg
cmp
push
jmp
sbb
sbb
add
sbb
pop
mov
xchg
cmc
cmp
xchg
outs
test
pushf
push
or
mov
test
cmp
push
data16
cli
test
test
jle
mov
mov
xchg
push
xor
test
push
bound
or
int3
test
iret
xchg
push
fimul
cld
sbb
sub
inc
sbb
pop
xchg
jmp
ror
rcl
fld
sbb
daa
mov
data16
push
and
cmp
xor
mov
scas
push
sbb
jge
fistp
ds
xor
ins
mov
ss
or
sbb
lods
mov
and
xchg
(bad)
nop
jmp
les
adc
xchg
repz
ffree
lods
xchg
daa
(bad)
aas
cmp
gs
js
jno
pop
inc
enter
add
cmp
retf
sub
je
or
or
cmp
ret
and
retf
cmp
adc
push
lods
stos
xchg
(bad)
fadd
test
add
mov
pop
xchg
xchg
test
or
icebp
(bad)
mov
je
dec
and
or
sbb
sub
pusha
call
push
adc
mov
clc
pushf
jmp
push
pop
(bad)
out
cmp
loope
mov
mov
in
idiv
cld
divps
out
cmp
mov
pop
stos
xchg
pop
sub
(bad)
sub
cmp
call
inc
push
adc
cmps
xchg
into
dec
inc
in
hlt
mov
add
push
popa
and
push
fcompp
loope
repz
or
inc
add
fsub
(bad)
mov
mov
stc
mov
add
call
push
cmp
mov
lea
ja
not
jmp
mov
pushf
lea
jae
call
lahf
lahf
movsx
mov
movsx
js
mov
pop
pushf
mov
push
mov
push
push
push
mov
mov
not
pushf
pushf
mov
pusha
mov
pushf
mov
push
ret
lea
jne
lahf
mov
movzx
lahf
push
pusha
bswap
movsx
lea
lea
pushf
mov
pusha
pushf
mov
call
sub
and
cmp
push
adc
jbe
aas
mov
mov
sti
stos
mov
lods
(bad)
mov
mov
mov
out
std
mov
in
adc
xlat
daa
dec
add
and
push
sahf
ja
rol
jmp
sahf
dec
mov
adc
sbb
sbb
movs
bnd
push
idiv
aad
stos
sar
sbb
jno
pop
fs
sub
jle
or
dec
pop
push
cmps
cmps
mov
cmp
stos
jmp
adc
or
pop
xchg
cmc
popf
and
mov
test
lds
and
(bad)
mov
mov
mov
sbb
jecxz
int
lahf
ror
outs
sub
or
(bad)
mov
(bad)
mov
fidivr
fnsave
mov
adc
test
hlt
and
xchg
std
sbb
push
test
hlt
cwde
fistp
lods
mov
ins
mov
fimul
cmp
push
adc
aaa
or
push
jmp
push
(bad)
les
pop
nop
fstp
and
and
add
push
mov
jae
into
lahf
adc
aam
mov
mov
sbb
pop
adc
ds
inc
retf
enter
hlt
dec
ret
cdq
xor
mov
movs
sub
push
fs
outs
push
fsub
scas
mov
rol
sub
in
fisttp
adc
push
call
push
pop
pusha
push
ret
push
lock
std
std
mov
imul
inc
jns
mov
mov
mov
pop
pop
ss
adc
sub
jge
or
xchg
mov
jnp
xlat
aam
pop
lds
call
xchg
xchg
test
and
add
xor
push
add
test
hlt
adc
cld
ror
jmp
adc
inc
imul
jno
iret
test
inc
mov
stos
aam
jl
pop
cmps
in
dec
mov
mov
push
out
xchg
adc
cmp
inc
push
jmp
jnp
push
cmp
xor
int
sub
aas
(bad)
fcmove
lock
movs
inc
pushf
mov
add
sbb
mov
xlat
cmp
test
sti
mov
mov
fmulp
pop
popa
loop
mov
fcomp
sbb
pusha
mov
or
cld
fmulp
sbb
sbb
mov
js
mov
inc
push
adc
div
add
int
cmp
imul
adc
sub
ja
dec
push
sbb
mov
or
sub
lock
cmp
fscale
je
jmp
cli
or
ds
push
scas
mov
ja
push
test
jmp
loopne
and
xchg
cmps
jmp
jp
sar
push
inc
add
adc
pop
jmp
cmp
mov
jecxz
in
and
xor
mov
leave
xchg
int3
dec
mov
pop
mov
cs
out
test
lods
addr16
pop
cld
mov
jmp
sti
inc
dec
push
sbb
sbb
(bad)
fist
ins
sub
mov
jle
and
inc
lods
(bad)
mov
xor
call
call
call
sub
std
fdivr
jno
popa
jae
imul
cmp
sub
jb
pop
dec
sbb
push
adc
and
fisttp
sbb
js
inc
or
sub
jnp
push
push
jns
cmp
pop
mov
dec
jnp
leave
xchg
mov
xchg
(bad)
cmp
mov
or
push
rcr
rcl
or
dec
nop
xchg
std
mov
pop
mov
lods
scas
inc
sub
adc
(bad)
pushf
(bad)
jge
and
mov
loop
xor
mov
adc
add
mov
pusha
pusha
push
call
rol
add
test
xor
xchg
pusha
mov
pop
setno
mov
pop
mov
pushf
pushf
movzx
not
mov
jmp
dec
call
stos
mov
mov
pushf
mov
lea
jmp
xor
(bad)
cmp
inc
mov
ficom
outs
lahf
hlt
mov
loope
sbb
add
sub
push
(bad)
jl
push
fiadd
loop
lods
out
and
enter
jle
data16
inc
fwait
jne
mov
push
jmp
sbb
dec
mov
retf
das
push
cmp
add
or
push
pop
dec
addr16
in
mov
es
sbb
imul
and
xchg
test
jmp
mov
shl
movs
lahf
je
or
xchg
mov
fstp
xchg
fnstenv
leave
xchg
xchg
(bad)
dec
clc
popa
xchg
fld
inc
inc
jle
call
loop
std
fstp
mov
mov
lahf
cs
call
jmp
into
movs
cmps
cmp
sub
jge
icebp
add
pop
sti
push
sbb
inc
inc
iret
xor
push
pop
js
aaa
push
inc
adc
sbb
nop
xor
inc
mov
(bad)
mov
adc
cmp
adc
jb
pop
movs
pop
stos
inc
dec
in
adc
retf
lahf
mov
xor
and
out
clc
mov
cli
lds
ds
mov
pop
pusha
mov
aas
push
sub
or
es
shl
inc
dec
push
ins
and
inc
xor
imul
mov
(bad)
jmp
cmp
dec
mov
int
cmp
ins
jl
jge
(bad)
les
mov
adc
(bad)
shl
sub
and
ret
retf
out
cmp
das
sub
call
add
mov
sahf
sbb
dec
push
fsub
push
and
(bad)
fcomp
mov
test
sub
gs
les
(bad)
dec
push
cmps
add
pushf
lea
jae
test
cmc
xor
jge
call
jmp
dec
clc
neg
jmp
push
mov
push
push
pop
pushf
push
ret
ja
fld
xor
pop
push
xor
dec
pop
pop
push
jb
pop
adc
or
xchg
das
ins
stc
mov
pop
daa
inc
js
arpl
mov
loop
mov
and
emms
jb
xchg
fnstenv
in
ret
jmp
mov
out
or
xchg
mov
into
enter
mov
mov
hlt
or
fcom
nop
pop
aam
sbb
mov
push
lea
jmp
repz
push
push
mov
jmp
mov
mov
sete
push
pop
movsx
mov
seta
mov
bswap
pushf
lea
mov
push
mov
mov
jmp
or
test
test
lds
adc
mov
mov
inc
addr16
push
push
ficomp
aas
cmove
push
cdq
call
cmp
jp
and
cmps
cmp
imul
into
mov
pusha
cld
out
test
mov
and
push
jbe
nop
mov
pop
and
sub
mov
icebp
mov
push
pop
in
fwait
push
out
ror
or
daa
sub
cmc
ror
sbb
hlt
ja
jle
or
add
mov
pop
gs
loop
stc
inc
dec
push
adc
cmps
mov
cmp
leave
fisttp
into
cmps
jecxz
loop
loop
cld
or
(bad)
sbb
cmp
pushf
(bad)
out
fld
aaa
arpl
scas
stos
popa
lahf
leave
xlat
push
pop
sub
mov
sub
inc
sti
xor
scas
div
xchg
mov
mov
xchg
(bad)
sub
or
adc
add
mov
aaa
or
(bad)
mov
hlt
ret
sub
jns
adc
imul
adc
pop
mov
jo
sub
lahf
iret
xchg
fisub
pop
sbb
popa
jge
(bad)
xchg
sub
shr
popa
in
in
inc
xchg
icebp
pop
push
mov
xor
push
arpl
xchg
mov
fs
call
clc
clc
pusha
cmp
mov
pusha
call
jne
ins
ins
outs
outs
cs
ins
add
cmp
inc
mov
js
ficomp
xchg
add
or
push
adc
das
cmp
iret
adc
sbb
mov
xchg
aad
je
dec
ds
or
push
pop
fmul
sub
rcr
aam
dec
je
and
clc
jbe
gs
push
cmp
les
jns
aam
shr
add
lods
(bad)
mov
sub
pop
push
cmps
or
xor
(bad)
jge
daa
sub
dec
jns
cmp
in
out
cmps
loope
mov
ss
(bad)
xor
les
sbb
psubb
in
int3
test
sub
scas
loope
dec
(bad)
cmp
daa
ds
inc
adc
push
adc
pop
jg
imul
jno
jne
push
adc
jo
ret
lods
jmp
push
lds
push
or
imul
cs
cmps
test
lea
js
sub
xchg
adc
jecxz
push
out
fxch
lock
push
push
jno
sahf
call
int
das
and
cmp
es
and
pop
pop
fbld
icebp
add
inc
sbb
popf
shr
jb
mov
dec
enter
and
pop
dec
or
dec
pop
(bad)
dec
or
and
out
dec
sbb
ja
(bad)
jno
jmp
paddd
fs
pop
push
pop
sbb
fs
ja
icebp
mov
addr16
addr16
sbb
pop
mov
add
aad
add
dec
xor
test
mov
gs
xchg
or
mov
fs
pop
add
das
cmp
cmc
call
cmp
adc
jo
pop
cmp
mov
mov
aaa
das
imul
rcr
xchg
xor
imul
icebp
shl
cmp
mov
xor
adc
repnz
xchg
add
add
fwait
(bad)
retf
jnp
push
js
fisttp
jmp
jecxz
bt
add
push
pushf
bt
cmp
call
cmp
mov
sar
jno
repz
in
ss
int
out
ficomp
jecxz
adc
push
xlat
pushf
dec
sbb
mov
pop
jno
xor
push
push
inc
sub
dec
xchg
lods
mov
sub
or
jge
and
pop
and
jg
xor
pop
cmp
out
retf
and
rcr
pop
repnz
int
aas
adc
push
cmp
ror
push
nop
fist
add
std
aad
ror
sub
ins
cmp
rcl
cwde
xchg
shl
imul
dec
pop
pop
xchg
cdq
(bad)
jmp
call
pop
inc
pop
adc
push
add
fs
jae
lea
mov
shrd
add
shl
mov
movsx
pushf
setbe
mov
clc
sub
clc
mov
cmp
cmc
repnz
mov
jmp
pushf
mov
lea
jb
jmp
mov
pushf
mov
lea
jmp
js
shl
rcr
loope
fnstsw
(bad)
mov
fistp
enter
je
imul
jnp
fsubr
mov
ficomp
mov
push
push
and
fsubr
sub
mov
push
add
mov
rcl
xor
into
ud2
or
xchg
push
dec
popf
xor
push
sbb
arpl
jecxz
dec
inc
rol
inc
dec
or
inc
jl
iret
sbb
mov
pop
or
rcl
outs
popa
shl
and
jecxz
ds
fidivr
xor
adc
js
mov
fisubr
push
add
fiadd
inc
les
ins
jl
adc
mov
rcl
(bad)
xchg
sbb
adc
mov
ja
add
mov
arpl
das
and
ja
or
cmps
xchg
shl
scas
(bad)
jmp
and
test
jmp
add
pop
sar
jno
xchg
xchg
mov
test
mov
int3
cmps
out
(bad)
rcl
rcl
rol
gs
sbb
(bad)
sahf
shl
mov
je
sar
sbb
cmp
sti
and
mov
test
sahf
into
or
mov
sbb
pop
jmp
stc
ss
sub
out
daa
cmp
adc
mov
pop
push
fimul
int3
adc
pop
les
invd
adc
add
out
fwait
adc
mov
pop
shl
jo
mov
repnz
loop
push
ss
nop
call
cdq
adc
sub
shl
sub
ins
loope
in
mov
mov
in
mov
add
jns
ss
movs
fs
cli
adc
mov
pop
or
mov
sub
pusha
movs
fldenv
sar
int
div
cld
into
xchg
lsl
sbb
call
adc
mov
iret
mov
mov
sbb
cmp
dec
je
push
sbb
ja
pop
sbb
dec
dec
ror
inc
loope
(bad)
fdivr
(bad)
xchg
and
pop
mov
pusha
and
mov
sub
hlt
mov
jecxz
jmp
mov
call
cmc
ss
xchg
mov
mov
xchg
and
int3
mov
or
mov
js
je
and
ror
mov
add
add
rcl
lahf
push
xchg
fnsave
lods
loopne
addr16
mov
mov
lea
je
call
or
call
jmp
add
mov
clc
clc
bt
cmp
call
mov
lea
call
xor
and
lods
cmp
adc
ja
iret
cmp
push
sbb
pusha
and
arpl
cmp
and
out
inc
movs
popf
aam
pop
mov
or
sub
mov
mov
aam
cmp
pop
or
(bad)
div
mov
adc
cmc
ret
cmps
xchg
ror
and
in
inc
fucom
cmps
out
cmp
sbb
cmps
div
jnp
test
test
int
test
sbb
push
sbb
bound
or
pop
jecxz
scas
cmp
jecxz
out
sahf
cmps
mov
mov
xor
jae
or
repz
xchg
aam
inc
in
inc
pop
dec
add
xor
mov
imul
mov
push
in
das
xor
dec
or
inc
cdq
popa
jns
and
outs
push
sbb
int3
test
mov
cmc
sbb
inc
retf
mov
outs
pop
sbb
cld
mov
fnstenv
add
dec
aam
push
dec
xor
push
push
inc
pop
mov
(bad)
call
cmp
mov
leave
stc
mov
out
movs
into
(bad)
into
xchg
or
cmp
ror
enter
mov
dec
mov
ja
and
xchg
sbb
test
cld
in
xchg
fcomp
inc
out
adc
pop
mov
addr16
add
retf
scas
cmp
int
nop
aad
(bad)
add
nop
fwait
sbb
shl
stc
add
lahf
loop
sub
push
inc
push
sbb
fcomp
or
leave
ret
xor
retf
push
outs
sbb
or
(bad)
fst
out
pop
outs
loopne
jne
imul
cmps
mov
adc
out
scas
inc
(bad)
sub
stos
aam
jmp
mov
and
jae
cmp
jmp
movzx
pushf
lea
push
pop
lahf
bswap
mov
mov
lahf
pushf
mov
lahf
mov
bswap
push
movzx
lea
lea
call
mov
clc
btc
bswap
rol
mov
cmc
add
cmp
ror
mov
jmp
pushf
rep
push
mov
not
pop
mov
push
pushf
mov
lea
jmp
lods
call
jmp
not
shl
cmc
mov
cmp
cmp
jmp
pushf
lea
jae
test
cmp
push
call
mov
push
pusha
mov
pushf
lea
jmp
outs
and
lea
mov
cmc
mov
sbb
loope
push
or
scas
dec
pop
or
dec
or
cmp
or
outs
and
add
fild
add
cmp
cmp
outs
sbb
pop
imul
lods
ss
ds
xchg
push
out
mov
sbb
cmp
int
jnp
mov
mov
jns
sti
cmps
gs
(bad)
out
jmp
inc
dec
or
mov
adc
lods
mov
sbb
loope
mov
xchg
sub
and
xor
out
out
mov
and
lea
add
retf
lock
adc
push
adc
xchg
pop
pop
(bad)
mov
out
dec
mov
cld
out
xlat
enter
xor
cmp
(bad)
mov
or
mov
pop
(bad)
sub
(bad)
ror
cmp
test
jmp
mov
cmp
cmp
and
pop
cmp
xchg
xchg
mov
rcl
mov
mov
mul
scas
adc
pop
imul
and
push
dec
aaa
add
daa
add
jae
cdq
dec
sar
sub
inc
mov
sbb
fisttp
xlat
test
jne
cld
bound
push
and
fst
hlt
sti
mov
daa
jg
(bad)
mov
rol
xchg
scas
jmp
xchg
call
mov
loop
fwait
mov
js
sub
jnp
adc
cmp
lock
pushf
inc
call
or
lahf
loope
ss
add
jne
ins
pop
adc
mov
xor
mov
sub
fsub
cmps
and
scas
jge
call
pusha
jl
xor
xor
addr16
jp
into
mov
xchg
aad
retf
fdiv
lock
rcr
int
lahf
rcr
ret
inc
add
dec
push
loope
data16
cdq
jecxz
or
inc
inc
push
and
mov
and
sar
adc
(bad)
nop
jmp
mov
fidiv
jbe
ins
xor
xchg
xchg
sbb
jecxz
(bad)
xor
cmp
loope
das
int
push
sub
cs
adc
sub
cmp
test
jae
sbb
xor
loope
cdq
leave
sub
pop
dec
sar
std
mov
pop
adc
inc
push
or
jge
shl
pushf
aad
(bad)
mov
in
cmps
mov
ds
mov
dec
pop
imul
ins
ins
inc
js
arpl
gs
js
add
mov
sbb
movzx
mov
pushf
pusha
pushf
lea
call
call
mov
pushf
push
pushf
pushf
push
ret
mov
call
jmp
pusha
lea
jne
clc
push
sub
pusha
mov
mov
lea
jmp
mov
jge
stos
cmp
push
inc
or
dec
and
dec
sub
adc
(bad)
sub
or
push
pop
(bad)
mov
test
adc
adc
mov
mov
push
pop
adc
or
das
out
enter
adc
retf
push
mov
xor
pop
arpl
pop
push
dec
xor
mov
add
push
push
add
or
jo
jle
(bad)
cld
out
enter
mov
ret
mov
lds
jle
cmp
cmp
fisub
cmp
inc
rcl
pop
dec
je
add
mov
fst
pop
clc
mov
mov
inc
dec
push
adc
mov
push
push
stos
cmps
mov
retf
cmps
lds
in
mov
cmp
lock
call
push
pushf
push
pop
push
mov
push
ret
scas
inc
movs
cmp
inc
or
outs
pop
sub
xchg
(bad)
jbe
adc
lods
sub
or
xchg
das
or
push
lahf
bnd
inc
push
push
adc
inc
adc
mov
sahf
mov
jne
retf
movs
loop
dec
int
loope
call
enter
outs
cmp
or
fld
push
dec
dec
push
xchg
inc
cmp
pop
dec
aam
or
dec
fdiv
in
xor
fld
repz
mov
pusha
rcl
imul
arpl
test
sti
(bad)
test
sbb
xchg
rcl
pop
into
(bad)
mov
dec
jl
jecxz
repz
or
pop
dec
pop
pop
fs
xlat
ror
rol
jae
sub
ror
test
add
push
cmc
lock
adc
leave
pop
push
mov
outs
ret
dec
ret
retf
lahf
stc
aam
call
dec
or
leave
dec
popa
jns
mov
inc
dec
ficomp
sar
push
rol
dec
or
cs
add
inc
cmp
lahf
xchg
repz
inc
outs
jno
push
sbb
clc
pop
pusha
sub
mov
test
add
mov
pop
inc
jnp
sub
sub
ja
jge
movs
jae
stos
jg
sub
ja
inc
repnz
mov
mov
jp
mov
in
in
ret
pop
xchg
pusha
xchg
sbb
aaa
cmp
mov
fs
sbb
sbb
dec
and
stc
xlat
xchg
mov
bound
rol
(bad)
retf
in
jnp
arpl
xchg
mov
adc
jl
dec
nop
xlat
and
inc
pop
pop
jb
adc
xor
loop
dec
pop
dec
repz
inc
iret
ss
xchg
jnp
cmp
inc
add
inc
push
rcl
push
cli
dec
or
pop
pop
je
dec
dec
dec
(bad)
jmp
movsx
call
mov
push
and
cmp
fs
inc
mov
pop
xor
test
ja
pop
cmp
mov
cmc
cmp
div
test
mov
fwait
or
dec
popa
xor
fcomp
lods
mov
sbb
mov
push
fsubr
(bad)
and
cmp
pushf
sub
aaa
pop
dec
scas
push
push
fucomi
cmps
mul
test
inc
ret
and
in
add
retf
neg
call
gs
mov
or
(bad)
ja
movs
pop
call
dec
enter
fstp
and
inc
jne
jmp
dec
add
sub
jbe
(bad)
stos
pushf
push
mov
repnz
call
lea
call
clc
jmp
bt
cmc
push
neg
mov
test
sub
jmp
rol
stc
not
loopne
jmp
popa
pushf
retf
test
pop
mov
ja
dec
dec
xchg
cli
jo
push
cmp
mov
push
push
cmp
outs
and
mov
je
sbb
mov
xchg
out
cld
loop
jnp
add
fld
out
fstp
ins
imul
aam
sbb
rcr
mov
cdq
sub
rol
inc
dec
sti
mov
push
sbb
inc
dec
push
mov
push
or
inc
outs
sub
mov
call
jb
fwait
mov
cmp
mov
or
xchg
mov
mov
mov
mov
loop
inc
mov
test
jmp
(bad)
mov
cmps
push
bound
movs
mov
pop
lea
xor
imul
or
dec
jp
jmp
call
pop
mov
scas
inc
push
imul
ret
and
xchg
and
jmp
xchg
or
and
push
adc
pop
fwait
adc
cmp
adc
sbb
sahf
adc
imul
mov
mov
xlat
adc
xor
pop
pop
imul
and
jmp
cmp
ret
sbb
add
bound
ds
jge
push
adc
jge
icebp
sbb
mov
mov
mov
sahf
mov
ss
cmps
jno
and
aaa
xor
push
adc
mov
add
xchg
dec
mov
xchg
dec
lahf
adc
imul
and
repz
jle
mov
sub
idiv
push
cdq
pusha
jle
ins
and
arpl
ins
test
jmp
mov
ja
push
sbb
push
add
jle
xor
dec
fs
inc
cli
imul
test
push
in
fs
pop
xor
aam
push
fs
pushf
rcl
mov
lea
rcl
mov
call
in
mov
jno
mov
dec
push
stos
push
lods
push
add
pop
sbb
or
push
sub
inc
or
sbb
pop
enter
jl
enter
add
mov
jbe
pop
mov
imul
in
xor
shl
push
mov
mov
xor
sub
xchg
jmp
test
pop
push
push
fcomp
adc
sahf
int3
cld
movs
lds
mov
mov
mov
add
repz
nop
xor
jbe
add
jae
xchg
test
in
cli
mov
push
and
or
cmp
mov
bound
daa
adc
mul
mov
mov
mov
mov
jmp
ror
jmp
leave
or
cmp
adc
inc
cmp
arpl
push
dec
xor
inc
pop
mov
lock
shr
outs
push
inc
fwait
imul
inc
aas
jl
outs
pop
dec
pop
pop
pop
push
mov
mov
and
sub
xchg
ror
ror
xor
add
cmp
lds
dec
leave
retf
in
mov
rcr
popf
and
mov
mov
loopne
jae
inc
push
addr16
call
add
shl
mov
cmc
shl
push
lea
je
call
push
lea
call
call
inc
pushf
adc
call
mov
push
lea
jmp
lea
jb
pushf
pushf
pusha
pushf
push
ret
mov
xchg
or
sbb
adc
out
push
pop
(bad)
xor
dec
shr
(bad)
idiv
jae
stc
mov
add
xchg
inc
(bad)
cmc
lods
cli
dec
cmp
test
retf
test
push
mov
or
jp
pop
mov
ss
sub
rcr
push
cmps
pushf
pop
daa
sub
rol
imul
mov
cmp
push
jmp
or
adc
cli
fild
xor
inc
les
sub
mov
push
xchg
mov
mov
jle
pop
sbb
xchg
mov
sub
jnp
add
pop
pop
or
push
fidiv
test
(bad)
(bad)
jmp
jmp
xchg
xor
jnp
jle
pop
or
inc
mov
adc
cmp
sbb
xor
mov
test
scas
xchg
inc
cld
clc
int
and
add
sbb
inc
or
stos
and
in
ret
(bad)
scas
int3
pushf
rol
inc
or
add
(bad)
jmp
adc
xchg
or
pop
jle
xlat
jp
xchg
outs
arpl
and
add
mov
mov
fnstcw
sub
mov
(bad)
add
icebp
mov
push
arpl
pop
stos
fidivr
push
add
xor
xor
xor
and
sbb
loop
inc
or
add
mov
(bad)
xor
aad
retf
dec
mov
lahf
test
shl
sub
sbb
repz
jg
dec
cmps
jno
jmp
xor
xchg
cmps
jg
imul
push
fisub
mov
test
add
std
mov
xchg
ds
shr
div
adc
stos
mov
sbb
push
jl
jnp
shl
loopne
or
jno
mov
in
push
mov
ret
mov
aas
mov
addr16
adc
jmp
inc
inc
jbe
adc
adc
movs
add
and
into
cld
fcomip
push
push
or
adc
inc
sti
(bad)
and
jns
(bad)
jmp
sub
or
add
mov
xchg
jne
fist
push
movs
jne
(bad)
(bad)
imul
xchg
mov
cmp
xlat
mov
push
mov
fwait
vbroadcastsd
data16
sub
xor
push
je
dec
mov
hlt
stos
xchg
fld
icebp
pop
out
cmp
test
mov
popf
bound
cmp
push
out
mov
hlt
les
pusha
xor
rcr
in
xchg
pop
and
(bad)
(bad)
ins
pusha
ja
fcomp
inc
add
js
jo
push
sbb
pop
xor
loop
popa
sub
jge
sub
ss
mov
or
push
add
add
add
add
add
add
add
ror
add
ror
add
ror
add
add
add
add
ror
add
adc
push
mov
xor
test
xchg
fidiv
xchg
and
dec
sub
cmp
adc
jb
xchg
mov
icebp
and
jnp
into
(bad)
adc
inc
out
jg
mov
daa
mov
or
repnz
mov
sub
mov
js
pop
loope
push
pop
and
dec
xor
add
pop
ret
mov
in
dec
repnz
add
mov
xor
push
imul
mov
test
cli
and
xchg
js
mov
test
and
stc
inc
dec
into
test
out
adc
jg
int3
mov
pop
lahf
push
mov
xchg
popa
push
inc
mov
fld
fldcw
mov
jecxz
xchg
push
retf
movs
test
and
fdiv
repz
(bad)
sbb
inc
adc
aas
es
and
mov
es
jo
push
xlat
retf
cs
repz
(bad)
xor
wrmsr
push
adc
imul
fldenv
call
xchg
rcl
mov
imul
jl
jb
inc
jns
xchg
dec
dec
daa
ret
mov
mov
out
mov
jmp
fmul
mov
scas
stos
arpl
dec
jle
imul
sub
or
pop
pop
fwait
movs
loop
mov
xor
(bad)
xor
int
fs
popa
fcmovnu
mov
xlat
retf
mov
addr16
inc
add
jo
test
jno
clc
ds
jge
push
xchg
sbb
mov
fwait
xchg
adc
fs
xor
(bad)
or
nop
ss
pop
pop
adc
sub
pop
push
test
pop
out
mov
sbb
adc
jmp
hlt
adc
or
add
and
cmp
test
retf
js
jo
dec
stos
mov
shl
dec
sar
jae
adc
xchg
sti
(bad)
jno
jle
js
retf
enter
sar
jo
mov
pop
or
cmp
retf
or
(bad)
cli
cwde
cmp
test
icebp
outs
adc
mov
movs
pop
push
dec
cdq
jae
xlat
cmp
stos
in
stos
adc
cmps
sbb
xor
sub
cs
cmp
dec
lock
sbb
adc
adc
jno
or
mov
push
jl
loope
hlt
arpl
fcomp
add
sahf
cwde
cs
or
loopne
cwde
pop
or
inc
sub
stc
in
fs
push
data16
sbb
jno
push
mov
cmp
push
mov
jne
pop
push
imul
cdq
and
xchg
xchg
mov
mov
adc
(bad)
mov
dec
fwait
jmp
mov
(bad)
mov
adc
int
jbe
fcom
pop
sub
add
popa
dec
mov
push
test
mov
mov
fimul
inc
data16
cmp
jb
add
call
arpl
imul
inc
sub
push
jg
mov
int
stc
int
arpl
jg
inc
popa
rol
pop
push
or
inc
pop
xchg
in
inc
sub
mov
test
rcl
int
push
jecxz
(bad)
daa
mov
stos
jecxz
repz
shr
push
jecxz
stos
jne
or
int3
loopne
retf
into
aad
inc
imul
std
and
push
mov
add
dec
retf
mov
hlt
jmp
add
adc
add
aam
aam
repnz
xor
repnz
aad
pop
adc
les
retf
inc
inc
nop
fisttp
mov
and
ja
jne
or
out
mov
adc
dec
fnsave
fwait
mov
ds
inc
xor
cs
sub
xchg
fcom
adc
movs
mov
sbb
fdiv
loopne
outs
das
pop
dec
test
jae
jle
fldcw
cld
lods
int
inc
pop
xchg
ret
icebp
pop
xor
mov
leave
jb
jo
dec
popa
ins
and
mov
retf
cmp
repnz
mov
cmp
cld
movs
aad
sbb
movs
cld
push
pop
cdq
mov
push
ret
lods
jmp
mov
dec
push
pop
or
mov
jnp
jl
out
push
repnz
sub
addr16
or
dec
enter
ficomp
out
ins
jno
xchg
sti
into
xchg
dec
sbb
pop
pop
cmp
lock
fs
xchg
xchg
xchg
mov
rcr
call
push
ret
jp
mov
lock
fisttp
pop
push
sub
jecxz
enter
outs
inc
int
inc
sbb
mov
sub
pusha
mov
jl
mov
sbb
in
jg
imul
cmps
lahf
fidivr
push
inc
stc
enter
ins
cld
or
pusha
or
push
pop
dec
out
fist
push
in
in
mov
movs
mov
xor
xor
mov
pushf
fdiv
in
sub
(bad)
inc
out
cmps
add
inc
mov
push
mov
ret
mov
cld
adc
mov
xor
sbb
xor
pushf
inc
mov
(bad)
push
aam
xchg
xor
mov
aam
mov
stos
push
aaa
mov
std
add
daa
(bad)
xchg
lock
mov
and
cmp
jae
inc
and
aaa
and
jge
mov
dec
jecxz
fwait
addr16
cmp
inc
inc
ss
retf
sbb
popf
outs
repnz
outs
shl
lds
cmc
sbb
rol
mov
pop
shl
pop
pop
in
jno
or
ds
xchg
mov
sub
mov
or
jecxz
and
jmp
adc
gs
sub
pop
adc
and
bnd
mov
jge
fld
cmp
adc
xor
jge
inc
ss
xchg
mov
mov
jns
sar
leave
xor
mov
xchg
out
xchg
js
pop
(bad)
adc
inc
xchg
imul
cmps
jecxz
stos
mov
cmp
sub
and
shr
xchg
mov
call
hlt
jmp
imul
and
nop/reserved
jle
adc
cmps
xchg
test
pop
add
out
cmps
jp
test
cli
lahf
mov
lds
in
movs
push
or
ins
aam
mov
sbb
jbe
mov
dec
in
outs
test
(bad)
loopne
xor
push
pop
jns
mov
pop
icebp
pop
dec
aaa
pop
mov
in
xchg
adc
mov
sbb
jle
movs
(bad)
div
jmp
jb
push
in
push
test
repz
jbe
cli
in
dec
test
dec
push
imul
movs
data16
das
leave
mov
in
jne
ja
adc
stos
sbb
je
rol
aas
sub
ss
pop
sahf
(bad)
push
in
xchg
enter
xchg
dec
mov
mov
or
add
jp
cmp
mov
into
mov
fs
mov
mov
(bad)
xor
retw
fwait
and
sub
mov
sahf
dec
xchg
add
adc
repnz
ds
inc
aad
jl
sbb
push
repnz
push
inc
(bad)
adc
mov
arpl
fs
mov
mov
pusha
int3
call
data16
adc
sub
into
jmp
les
jmp
cmp
sbb
daa
cmps
sub
mov
lock
mov
mov
fnsave
cwde
out
(bad)
fnstenv
and
cmps
adc
ss
mov
int3
mov
fwait
add
stos
sub
adc
jbe
jne
or
test
je
test
mov
mov
cmp
xor
lods
mov
or
cmc
mov
or
test
pop
mov
sbb
sbb
jl
outs
sahf
nop
sub
mov
call
mov
jge
shl
push
outs
dec
push
add
inc
pop
repz
scas
push
jl
jmp
push
imul
jne
movs
sti
cmp
cmp
and
push
ja
jae
je
out
pop
ins
jg
int
outs
rcl
or
mov
pop
iret
mov
inc
nop
mov
pop
cmp
or
dec
dec
or
outs
loope
jmp
xchg
(bad)
pop
and
fld
jge
push
es
push
adc
jbe
or
cli
sbb
retf
in
out
pop
xchg
cmp
xchg
mov
loope
retf
pop
int
test
outs
sub
jle
and
icebp
mov
xchg
fidiv
cmp
push
inc
aas
mov
int3
icebp
mov
jae
ins
out
jmp
mul
leavew
mov
mov
jne
fcomi
shr
rol
fdivr
mov
loop
sbb
mov
dec
lock
arpl
pop
pusha
inc
xchg
sbb
mov
aam
int3
in
push
jbe
mov
pushf
std
adc
pop
inc
cdq
mul
inc
pop
jbe
xchg
jo
xor
cmp
pop
xor
lahf
dec
lds
adc
sub
sub
(bad)
out
inc
outs
adc
jo
cmp
iret
mov
outs
push
jns
push
ror
stos
test
outs
jnp
add
(bad)
in
xor
mov
outs
xchg
mov
fcmovnb
lahf
aaa
cmps
mov
mov
add
inc
js
dec
bound
xchg
mov
retf
xor
stos
mov
mov
lods
or
cmp
jo
mov
lea
jmp
frstor
push
sbb
cli
in
sub
mov
dec
fwait
sbb
xor
jbe
pop
popa
dec
inc
jle
popf
icebp
xchg
in
scas
arpl
(bad)
mov
shr
push
jmp
jnp
sub
lock
add
jmp
xor
loopne
fdiv
mov
arpl
pop
scas
leave
cmp
dec
ins
mov
aas
or
sub
mov
adc
fwait
pop
adc
int3
add
(bad)
outs
pop
fnsave
in
shl
test
mov
and
out
icebp
pop
or
sub
mov
sbb
mov
push
out
popf
lods
(bad)
out
mov
jne
push
jbe
jno
rcl
bound
mov
push
and
shl
sub
inc
sbb
movs
mov
lods
or
cmp
ror
push
leave
mov
in
inc
aas
cmp
adc
iret
rcr
cmp
xchg
mov
push
xor
sub
cwde
cmp
xchg
sahf
fmul
data16
or
xchg
data16
jb
mov
in
push
jge
dec
test
xchg
rcl
jge
add
add
int3
mov
cmp
jmp
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
cmp
fcmovb
xor
ds
int3
mov
(bad)
and
mov
mov
nop
bound
pop
shl
push
or
mov
cmp
and
mov
(bad)
nop
daa
scas
lahf
mov
lock
lea
push
bound
sub
cmp
jge
xchg
fdiv
adc
mov
into
mul
fstp
xchg
rol
jp
aaa
xlat
and
fucomp
mov
inc
add
push
xor
fldcw
mov
fidivr
cmps
push
lods
mov
adc
push
(bad)
pusha
dec
mov
loope
pop
scas
mov
ret
out
mov
jne
pop
xchg
movs
cmps
xchg
push
add
mov
(bad)
mov
or
test
mov
cmc
stc
mov
jmp
lea
call
jmp
push
mov
inc
test
setno
ror
xchg
lahf
xadd
clc
cmp
mov
ror
shl
bt
cmc
mov
bt
push
xchg
bt
mov
call
btc
add
pushf
mov
shrd
shr
clc
bsr
mov
rcl
rcr
pushf
mov
or
sbb
inc
cmp
xor
lea
jmp
mov
jnp
lea
jno
int3
xor
dec
or
imul
push
add
sub
sbb
sbb
or
movs
cmc
(bad)
popf
jo
outs
daa
lea
fucomi
cmp
xor
pop
mov
mov
imul
mov
inc
inc
cld
mov
pop
popf
jl
aad
or
lock
in
mov
or
(bad)
stc
in
in
pop
retf
push
ins
jae
sahf
popa
jb
inc
shl
(bad)
ret
call
(bad)
cdq
sub
adc
addr16
sub
dec
xchg
fs
or
popf
cmp
sbb
or
mov
sahf
call
fsub
push
jmp
cmp
bsf
ror
mov
clc
cmp
jmp
cwde
bswap
call
jno
test
mov
jno
out
sti
xor
(bad)
retf
lods
xchg
cmc
mov
leave
aam
rcl
(bad)
xchg
fcomp
movs
push
aam
mov
je
mov
ja
cmp
enter
stos
push
nop
dec
and
jmp
mov
add
fbld
movs
adc
mov
adc
adc
add
pop
inc
jmp
stc
nop
(bad)
rcr
out
ficomp
mov
mov
imul
outs
ss
sub
les
sbb
imul
push
or
sub
dec
gs
jae
inc
outs
push
in
sub
retf
or
jno
fmul
(bad)
cmp
xchg
lods
leave
mov
div
call
call
retf
fwait
xchg
inc
popa
sbb
sbb
loop
inc
xchg
fistp
in
aas
paddq
pop
jne
xlat
mov
pop
adc
adc
cwde
cs
jae
mov
inc
les
jno
dec
or
pop
imul
jae
cmp
enter
sbb
mov
or
mov
pop
ins
dec
sahf
inc
push
and
mov
pushf
jp
rol
pushf
int3
and
inc
pop
imul
or
fs
jle
cmc
push
cmp
cmp
push
lea
jb
pusha
clc
cmp
jmp
jmp
and
jno
dec
mov
gs
mov
sub
jecxz
pop
addr16
scas
inc
(bad)
les
test
retf
mov
and
lds
jecxz
dec
mov
push
xor
sub
fs
and
push
pop
mov
sbb
nop
(bad)
popa
sar
and
cmps
int3
cmps
sub
xor
iret
out
(bad)
or
sbb
ds
js
pop
neg
push
sbb
sub
push
rcl
enter
ss
loop
scas
adc
xchg
xchg
aad
cmp
jmp
pop
je
add
cwde
sahf
xchg
shr
push
outs
loopne
cmp
xor
push
popf
adc
mov
and
stos
dec
call
aad
jne
mov
jno
sub
inc
add
pop
push
das
imul
js
imul
inc
sub
jb
test
fisub
punpcklbw
dec
mov
cmp
or
(bad)
fnstenv
leave
loope
mov
dec
cmp
or
pop
push
adc
or
cli
out
pop
push
jae
cli
pop
jg
not
mov
enter
xchg
xchg
js
sub
sub
inc
dec
int3
xchg
popa
leave
cmp
mov
sub
sbb
out
idiv
cli
cld
jp
clc
ret
in
or
push
ins
inc
dec
(bad)
xchg
fstp
aam
fimul
ret
and
dec
aas
mov
jno
push
inc
xchg
pop
push
dec
push
dec
es
je
fmul
push
lods
xlat
or
fsub
fwait
add
xor
mov
mov
in
out
cli
or
add
ret
inc
pop
and
lods
push
ss
mov
jp
icebp
xor
adc
xchg
daa
push
ror
cmp
mov
imul
xchg
lahf
pop
in
or
xchg
mov
mov
and
xor
adc
cmp
sbb
int3
and
jp
adc
dec
test
or
xchg
rcr
push
cmp
jmp
je
and
push
scas
sub
push
shl
scas
and
pop
scas
pushf
jmp
shrd
and
bsr
mov
cmp
stc
cmp
push
lea
jne
cmp
xor
push
lea
jmp
mov
push
pusha
push
mov
pop
call
mov
jmp
pushf
call
mov
push
lea
je
cmp
cmp
call
push
pushf
mov
pusha
lea
jae
dec
setns
not
mov
pusha
inc
not
setp
jmp
call
jmp
or
les
test
leave
(bad)
mov
or
les
hlt
mov
mov
or
or
leave
xlat
jp
jbe
xor
adc
ins
ins
jo
imul
daa
dec
retf
add
xchg
jg
inc
dec
mov
movs
pop
and
sub
call
mov
addr16
jge
sub
aad
cmps
call
imul
push
adc
dec
dec
ja
jecxz
add
add
sub
mov
sub
out
adc
sbb
std
jnp
sub
inc
jbe
and
or
daa
mov
jp
lea
out
es
or
mov
lahf
and
cmp
mov
out
repnz
call
mov
rol
xlat
outs
jo
in
cmps
pop
dec
push
(bad)
xor
xchg
inc
jo
lds
imul
repnz
into
sbb
inc
pop
div
jecxz
into
mov
cli
out
push
and
cmp
dec
or
in
retf
pop
test
xchg
xor
mov
mov
movs
push
mov
adc
push
js
dec
inc
push
adc
test
movlps
ficomp
pop
sub
pop
pusha
add
sub
outs
ja
mov
add
je
or
dec
mov
jno
cs
ss
adc
bound
adc
daa
dec
add
jns
push
adc
pop
inc
dec
into
or
xchg
popa
addr16
mov
stc
test
retf
dec
inc
in
out
and
and
inc
adc
std
push
out
in
jl
xchg
cdq
push
lods
and
les
in
movs
xchg
mov
xchg
dec
adc
outs
or
pop
mov
bound
xchg
dec
adc
(bad)
test
add
fwait
mov
xor
int3
hlt
jns
add
sahf
push
jmp
cmp
xor
dec
outs
arpl
inc
jb
gs
bound
(bad)
push
rol
retf
setae
pushf
xchg
shr
mov
shl
bt
mov
call
pop
sbb
test
jno
pop
lods
mov
mov
test
aad
dec
jg
adc
dec
xchg
outs
dec
pop
cmp
pop
test
jl
scas
push
inc
cmc
lods
dec
ror
ror
cwde
mov
cmps
adc
sbb
xlat
imul
xchg
jb
repnz
jg
std
or
and
xlat
xchg
pop
in
pop
sbb
xchg
scas
out
ficom
test
enter
jmp
pop
pop
(bad)
out
retf
movs
jmp
jmp
addr16
adc
movs
mov
cmp
jmp
sub
test
push
jg
pop
push
inc
push
pop
mov
cmps
loop
in
dec
inc
add
fidiv
cld
and
fcomp
sbb
cld
addr16
and
push
inc
mov
ret
call
leave
loope
sub
loope
imul
or
scas
jnp
test
sbb
xor
inc
inc
adc
adc
adc
dec
adc
sbb
pop
lods
mov
cli
stos
pop
cli
adc
jp
loope
scas
cmp
or
and
push
inc
add
stos
jp
out
shl
fsub
outs
dec
add
call
call
cmp
push
mov
call
or
push
jmp
ficomp
jno
cs
push
push
sahf
ins
push
dec
sub
jns
ins
es
add
gs
or
inc
push
dec
xchg
dec
jl
lods
sub
xchg
fcom
adc
or
xchg
fdivr
imul
aam
inc
outs
jl
call
mul
ins
loopne
xor
sbb
ds
and
jecxz
bound
xchg
ds
sbb
push
jl
xor
jbe
pop
mov
inc
cmp
out
add
and
shl
or
xchg
test
andnps
cwde
xchg
popf
rcr
xchg
mov
fstp
mov
int
xchg
adc
inc
xchg
mov
sub
cmp
jno
sub
inc
jge
pop
dec
das
test
or
ins
xor
mov
ins
dec
imul
outs
adc
mov
leave
mov
fs
sub
pop
push
push
ds
push
push
push
push
push
jmp
pop
mov
sub
(bad)
mov
and
jecxz
les
shl
jl
xlat
xchg
or
push
mov
outs
les
dec
fwait
mov
and
jmp
je
sub
cmps
cs
ss
add
or
jo
sub
iret
mov
cli
jmp
xchg
inc
inc
jmp
sub
iret
inc
(bad)
jmp
mov
fdiv
jmp
out
repnz
ret
call
rcl
int
jmp
mov
loopne
out
and
icebp
int3
add
jae
inc
imul
xor
mov
out
fdiv
jo
int3
ins
popf
inc
mov
ror
mov
repnz
xchg
fnstcw
inc
sbb
pusha
retf
(bad)
and
sub
out
mov
jo
into
adc
lea
jne
rcr
movzx
shld
mov
cmp
pushf
bswap
jmp
jmp
lea
jne
bswap
mov
not
bswap
mov
pusha
pushf
lea
jmp
pop
mov
pushf
push
pushf
lea
jmp
jmp
stc
cmp
jmp
lea
jne
push
mov
push
pushf
lea
jmp
adc
shl
test
shr
push
in
xor
mov
cli
stos
in
lahf
daa
jg
and
ja
dec
jae
adc
(bad)
mov
outs
jb
push
out
ds
das
retf
call
or
mov
jne
push
sbb
mov
int3
sbb
jecxz
dec
or
push
cmp
enter
add
jmp
(bad)
icebp
int3
dec
sbb
xor
and
bound
and
or
ins
pop
push
xchg
xchg
stos
jmp
sahf
mov
sub
movs
ins
leave
cmps
call
mov
add
cmp
outs
gs
sbb
outs
es
inc
pop
push
imul
add
inc
pop
mov
(bad)
pop
cdq
xchg
xchg
mov
dec
in
pop
cmp
cmp
mov
cmp
sub
cmp
and
xor
nop
xor
mov
(bad)
cmc
mov
test
push
xchg
mov
ja
js
cmp
pop
ret
jmp
push
pop
pop
dec
add
mov
inc
leave
movs
xchg
adc
sbb
xchg
nop
sub
daa
lods
pushf
rol
cmp
push
dec
dec
lds
xchg
aad
inc
jb
inc
sub
call
movs
out
and
cmp
jl
fsubr
pop
sbb
add
(bad)
xor
je
jo
js
clc
cmovne
add
jg
imul
fcmovbe
fild
mov
pop
je
lds
scas
ss
push
cdq
dec
pop
adc
out
mov
std
mov
scas
mov
push
xchg
(bad)
ins
movs
movs
jmp
clc
popf
shr
cmps
scas
loopne
pop
shl
or
cmp
sbb
jp
aaa
mov
imul
data16
inc
sbb
push
push
sub
jbe
cmp
inc
or
aas
jge
sub
adc
sub
daa
addr16
adc
sbb
xor
xor
or
addr16
inc
add
ins
adc
fs
push
xor
jno
nop
xchg
lods
pop
cmp
dec
push
aaa
sub
jbe
mov
aam
rcl
inc
cmp
ror
adc
mov
icebp
jge
icebp
les
mov
enter
clc
mov
mov
iret
inc
add
test
outs
and
lahf
xchg
outs
pusha
pushf
lea
ja
sbb
cmc
rcr
sub
lea
mov
not
shl
add
bsr
mov
adc
test
pusha
mov
call
mov
mov
not
lea
movsx
lea
call
das
addr16
push
cmp
repz
inc
or
aas
push
sbb
and
aas
mov
lods
mov
pop
test
arpl
call
adc
ds
jae
dec
lds
mov
pop
repnz
stc
jg
add
fist
dec
push
jp
xchg
ins
xchg
push
out
pop
das
std
jb
xchg
stos
cmp
loopne
sbb
out
inc
add
and
outs
mov
adc
jmp
push
adc
add
movs
cdq
sbb
push
arpl
push
adc
xchg
out
cmps
lods
(bad)
pusha
cmp
jne
and
div
popf
loop
sub
loope
out
fistp
rcr
out
mov
xchg
dec
aad
sub
fisub
or
pop
push
sbb
jnp
pop
inc
shl
test
adc
rol
retf
pop
inc
dec
inc
popa
or
or
mov
fs
fwait
shl
loope
xchg
bound
xor
push
push
dec
add
leave
dec
push
xlat
lds
retf
popa
and
xchg
sbb
ret
vmread
out
icebp
ret
cwde
inc
xlat
sub
popf
cmp
stos
mov
test
mov
test
push
push
pop
push
cmp
pop
scas
pop
push
pop
ss
aam
scas
sub
jge
jge
movs
movs
add
mov
sub
cmp
mov
adc
popf
dec
inc
sahf
jae
loopne
fcom
adc
push
sub
sub
test
lods
xchg
sahf
ja
xor
mov
ret
in
fsubrp
sub
mov
cmc
int3
push
add
xchg
jp
xor
jmp
je
push
ja
mov
jl
arpl
adc
push
stc
clc
(bad)
pop
push
sbb
in
scas
mov
push
lea
xor
sti
mov
cmp
mov
sub
nop
in
cmp
movs
mov
int3
(bad)
jl
xchg
les
mov
jns
ret
adc
cmps
(bad)
jp
push
inc
inc
js
pop
outs
and
dec
add
jns
pop
lea
ja
cmp
scas
call
jge
and
pop
js
inc
dec
inc
or
xor
xchg
aad
fdiv
scas
out
mov
jl
lds
push
neg
dec
cmps
and
pop
or
xchg
rcl
pop
and
sbb
stos
enter
jb
cmc
sub
xchg
xchg
sub
dec
sub
xor
pop
or
in
test
or
test
add
adc
and
pop
popa
and
mov
stc
mov
jno
das
push
mov
test
adc
test
mov
mov
inc
outs
dec
(bad)
fwait
(bad)
mov
push
push
adc
jecxz
inc
adc
xchg
cld
dec
in
cmovo
shl
mov
dec
add
sub
shl
cmps
mov
cmps
mov
movs
mov
adc
movs
and
xor
mov
retf
enter
fbld
fnsave
adc
mov
mov
cmps
mov
test
ficom
outs
and
mov
ret
push
pop
repnz
xchg
fldcw
xchg
or
ror
inc
adc
mov
cmp
sub
xor
es
push
or
sbb
test
mov
mov
test
jne
sub
sbb
jae
mov
push
fdivr
ds
mov
cmovp
dec
cli
mov
sub
xor
fst
(bad)
xor
(bad)
add
(bad)
mov
adc
xchg
pop
inc
sahf
adc
rol
pop
mov
or
xchg
mov
outs
and
push
adc
in
ret
xchg
mov
icebp
stos
cdq
xlat
rol
adc
data16
sbb
das
pop
push
push
inc
fsub
in
push
cmp
add
mov
mov
loope
icebp
sub
cwde
shr
sti
fwait
(bad)
add
test
test
pop
mov
popf
int
inc
mov
rol
scas
jmp
in
mov
in
in
pop
sti
mov
sub
inc
lea
add
xor
pop
rcl
call
xchg
std
ins
dec
ret
sahf
imul
cmc
rcr
mov
jbe
jnp
mov
jl
mov
xchg
mov
jbe
(bad)
sbb
dec
ins
scas
loop
mov
ds
mov
fist
in
fcomp
mov
imul
outs
sub
mov
mov
push
aam
mov
ds
repz
cmp
fimul
lock
add
mov
fnstenv
(bad)
mov
xchg
in
sbb
mov
sub
nop
mov
sbb
es
dec
add
ret
cmp
fstp
xor
fsub
lahf
lods
test
pop
jbe
jp
dec
cmps
xchg
push
push
inc
fist
xchg
mov
ret
in
aad
mov
pop
or
push
(bad)
scas
movs
call
push
pop
inc
or
mov
mov
xor
push
ins
mov
xchg
gs
test
loop
out
xor
imul
mov
ss
lahf
cdq
lea
int3
popf
jmp
lea
call
jmp
push
mov
fadd
mov
jne
dec
sbb
ins
add
pop
push
dec
or
ins
jmp
sbb
adc
add
ins
int3
sar
or
pop
push
inc
mov
jmp
fnstenv
dec
retf
frstor
push
push
repz
(bad)
(bad)
xor
xor
test
push
call
sub
push
or
scas
stc
cmp
jmp
add
mov
xor
in
in
imul
dec
jle
push
dec
jle
popf
popf
xor
adc
leave
enter
shl
mov
and
cwde
cmp
xor
push
add
xor
sbb
pop
sbb
sub
movs
pop
push
push
xor
shl
test
das
xchg
xchg
hlt
les
test
push
shl
stos
cwde
in
icebp
mov
ds
mov
addr16
ret
jb
lea
in
(bad)
dec
fucomip
test
ins
push
xchg
mov
dec
mov
add
jb
lods
pop
mov
jns
int
push
cmp
mov
stos
inc
shl
xchg
ror
test
fcom
jmp
sub
lock
lods
sub
repz
(bad)
popf
xchg
retf
stc
mov
fdivr
popa
inc
(bad)
add
pop
sbb
xchg
dec
mov
xchg
je
push
test
mov
pop
stos
retf
stos
call
inc
or
push
adc
sbb
jns
dec
pop
cmc
lods
ficomp
ret
push
loop
loope
popa
xor
jp
mov
mov
add
pmulhuw
dec
push
mov
fisub
push
pop
add
pop
jecxz
mov
pop
inc
pop
add
fcomp
sbb
fnstenv
cmps
bnd
push
dec
inc
cmps
pop
dec
push
dec
add
xor
cli
ror
or
jp
jbe
sbb
pop
adc
mov
push
mov
lods
cld
mov
ins
fwait
(bad)
mov
lahf
enter
ret
sub
cmp
xchg
ret
stos
xchg
push
xor
call
sub
rol
push
popa
inc
mov
repz
xor
push
dec
dec
add
push
sbb
mov
ss
loop
dec
mov
daa
repnz
mov
dec
xchg
(bad)
dec
push
repnz
mov
inc
sub
xor
jge
pop
sti
retf
sbb
or
sub
push
pop
dec
cmps
idiv
ins
movs
fcomp
das
aas
jbe
push
dec
pop
out
call
jge
aad
outs
ins
sahf
jg
mov
ret
xor
outs
jbe
and
call
fs
cmp
lahf
fld
nop
xchg
inc
mov
push
pushf
lea
ja
clc
sar
cmc
jmp
bsf
xor
shr
sub
add
bts
cmc
shrd
mov
call
aam
xchg
setne
jno
xchg
pusha
add
ss
dec
or
je
xor
and
pop
sbb
cmp
mov
push
dec
leave
inc
fdivp
adc
inc
jno
out
sbb
test
add
jo
dec
jmp
adc
or
retf
mov
sahf
or
jg
xchg
xlat
rcr
add
in
pop
xlat
(bad)
clc
ja
(bad)
mov
cli
loope
xchg
mov
sub
jne
and
out
daa
bound
cmc
jmp
imul
mov
stos
out
test
in
cdq
loop
or
adc
outs
cld
jecxz
pop
and
bswap
pusha
mov
push
lea
jmp
sahf
mov
xchg
cmp
imul
or
pop
adc
outs
ds
imul
adc
ins
xchg
xor
cmp
les
mov
push
inc
adc
ins
or
adc
in
icebp
int3
(bad)
lds
loope
mov
jp
loop
cmp
retf
jmp
gs
fiadd
(bad)
cld
ret
sub
ja
movzx
rcr
neg
shr
mov
clc
stc
pusha
bt
add
mov
stc
clc
jmp
cmp
pushf
call
imul
retf
lea
call
clc
clc
pushf
cmp
push
push
mov
lea
jae
jmp
push
bswap
mov
bswap
pushf
push
pop
not
pusha
pusha
mov
jmp
call
lea
ja
sbb
sub
dec
cmc
bswap
add
call
add
rcl
(bad)
xchg
fimul
ret
mov
mov
xchg
mov
cmps
jecxz
dec
xchg
cmp
pop
push
inc
push
pop
in
sub
inc
sbb
sub
mov
and
adc
scas
pop
jmp
sub
in
popf
dec
dec
mov
int
mov
xchg
int
data16
or
jg
push
mov
pop
je
xor
jae
rol
xchg
pop
xchg
xchg
push
push
imul
cmovl
outs
and
mov
pop
or
jl
into
(bad)
(bad)
popf
adc
push
inc
or
mov
cmp
cmp
adc
dec
sub
jl
pop
push
and
(bad)
push
inc
jge
ret
mov
mov
leave
or
shr
retf
mov
aad
jp
push
adc
cmp
retf
push
dec
jae
fisub
add
hlt
fsubr
mov
adc
je
xor
scas
jo
pop
ret
and
je
push
pop
out
add
retf
rcl
fldcw
out
push
call
daa
fidiv
or
mov
mov
hlt
into
stos
pop
lods
(bad)
ret
pop
repnz
jmp
clc
mov
sub
jns
add
push
arpl
cwde
popf
push
sbb
push
add
push
movs
sub
cmps
lahf
movs
jmp
jge
loop
gs
xchg
cmp
scas
lods
loopne
push
movs
cmps
mov
xchg
repz
or
in
aaa
pusha
fwait
cmp
out
pop
test
adc
xchg
stos
call
dec
sbb
jg
pop
mov
sbb
loop
stos
out
inc
jne
add
aas
xor
bound
mov
or
or
cmp
xchg
fs
inc
mov
pop
xor
push
or
push
sbb
and
jp
js
(bad)
nop
das
es
mov
adc
jle
stos
jnp
iret
aad
or
dec
mov
inc
std
xor
sub
popa
cmp
inc
mov
jns
(bad)
sbb
stc
xchg
ret
ds
adc
popf
adc
xchg
dec
push
inc
or
and
cmp
add
call
fldenv
test
jne
xor
jnp
jbe
cmp
cmp
call
call
repz
push
mov
mov
and
pop
bound
mov
xchg
pop
scas
jp
in
movs
hlt
mov
aad
movs
hlt
icebp
call
inc
sbb
minss
add
xchg
call
sahf
(bad)
lock
ficomp
jae
push
in
dec
push
adc
push
cld
xchg
jns
test
push
(bad)
aaa
mov
add
popf
gs
jae
sub
fs
test
in
fucom
cmp
xor
ins
adc
fldcw
or
pusha
add
sbb
jmp
jmp
pushw
xor
popa
push
push
pop
push
imul
mov
in
push
dec
jno
push
sub
repz
jecxz
pusha
mov
cmp
jmp
call
pushf
mov
pushf
mov
call
call
cmp
out
movs
retf
adc
mov
pusha
xchg
jmp
repz
jecxz
fidivr
dec
int3
int
leave
and
out
imul
shl
jo
dec
or
cs
cmp
adc
(bad)
idiv
mov
fcomi
punpckhbw
sahf
fsub
cwde
mov
mov
xchg
inc
sbb
cli
mov
jg
scas
ins
retf
stc
(bad)
push
push
push
ret
adc
hlt
repz
test
cdq
fwait
test
addr16
arpl
cld
or
adc
mov
mov
cmp
push
movntps
xor
lea
pushf
push
adc
dec
jns
mov
shr
out
(bad)
inc
out
call
cmp
mov
daa
rol
fisubr
les
retf
sti
mov
mov
je
(bad)
fst
sub
xchg
fmul
sar
mov
mov
clc
jno
cmps
int
or
mov
or
cmc
adc
mov
in
mov
outs
push
sbb
dec
pop
mov
jno
add
mov
push
repnz
jge
rol
xlat
add
add
add
xor
jp
loopne
cwde
iret
dec
fwait
mov
aas
rcl
sbb
leave
out
cdq
(bad)
jne
shl
cwde
test
ja
int
addr16
in
sub
jg
pop
dec
les
mov
or
loopne
(bad)
mov
jl
sub
inc
frstor
xchg
cmp
dec
or
cmc
or
add
imul
pop
mov
ror
adc
lods
mov
inc
inc
sar
jmp
mov
mov
xlat
fadd
pushf
jb
aad
scas
fstp
lahf
adc
addr16
adc
dec
inc
push
(bad)
sub
jne
mov
mov
sub
adc
inc
sub
aad
or
sbb
pop
bound
rcr
jno
xchg
cmp
stos
cli
es
mov
push
xor
cld
mov
sub
(bad)
sub
cmp
jbe
push
sub
sub
sahf
fnstcw
aam
cli
mov
(bad)
jmp
std
xchg
(bad)
inc
(bad)
pusha
xchg
aam
xchg
gs
shr
xor
pop
xor
adc
movs
mov
sub
jmp
stos
jne
fucom
imul
dec
mov
retf
xor
xor
cli
cld
ins
rol
inc
sbb
sub
cli
or
jnp
jbe
mov
jno
adc
add
sar
enter
mov
dec
jae
mul
jmp
stos
ret
xchg
test
mov
ret
(bad)
loop
adc
push
sbb
jae
imul
and
jp
push
aad
sbb
je
rcr
ficomp
cmp
add
jo
adc
popf
sar
test
and
rcr
pop
stos
push
cmps
dec
fs
sbb
jp
cmp
dec
aad
mov
adc
out
pop
adc
scas
das
xor
sub
fimul
out
sbb
jae
pop
dec
pop
pushf
pusha
sub
imul
enter
inc
jp
adc
sar
push
cld
mov
or
cmp
adc
mov
mov
or
xchg
sbb
js
sub
pop
arpl
or
js
cmp
and
retf
(bad)
popf
add
mov
mov
xor
in
sub
cmp
(bad)
pop
outs
jl
mov
adc
sbb
ds
ins
mov
xor
sub
pop
push
(bad)
jle
out
nop
dec
xchg
(bad)
imul
pop
lods
adc
mov
cmps
out
xor
pop
add
adc
xchg
dec
inc
cmp
add
dec
or
pop
adc
dec
imul
mov
mov
pop
dec
jge
xchg
aam
push
lahf
rep
pop
mov
jl
neg
movs
(bad)
mov
jmp
mov
and
dec
ins
ss
pop
adc
pop
push
(bad)
adc
test
stos
mov
ret
jno
syscall
imul
lds
shr
adc
cmp
and
sub
cli
or
adc
or
sti
loop
xchg
test
inc
dec
push
sbb
dec
inc
jb
mov
sahf
das
imul
mov
cli
xchg
push
pop
push
sbb
dec
add
sub
adc
mov
(bad)
xchg
mov
retf
jo
outs
loop
js
cli
(bad)
js
jg
dec
mov
out
jmp
mov
add
mov
ds
push
add
sar
push
sbb
pop
dec
into
(bad)
call
or
inc
retf
sbb
call
rcr
adc
shl
jmp
lods
data16
add
add
inc
sldt
push
sldt
add
add
jo
add
add
add
push
add
add
add
dec
push
add
add
add
add
add
push
add
sbb
push
add
mov
push
add
or
add
add
add
mov
call
jmp
mov
pusha
clc
bt
clc
xchg
not
movsx
shl
or
mov
push
mov
push
sub
mov
pushf
rep
movsx
movsx
mov
push
pushf
pushf
lea
jmp
nop
shl
inc
outs
cmp
inc
punpcklwd
lds
jecxz
popa
and
sbb
out
clc
mov
shr
fcompp
retf
sbb
lock
in
ins
imul
pop
mov
bound
int3
(bad)
call
jmp
add
jbe
mov
(bad)
(bad)
mov
clc
jle
movs
sahf
pushf
cmp
jmp
push
push
xor
add
pop
inc
fs
adc
mov
retf
rcl
mov
adc
or
dec
fwait
xor
mov
pop
int
call
ss
mov
lahf
rol
xor
pop
in
popf
shl
icebp
mov
(bad)
(bad)
jmp
mov
jno
js
sbb
inc
add
jne
dec
xchg
imul
add
or
adc
je
xlat
xchg
sar
push
loop
call
push
dec
rcr
pushf
ret
shl
and
dec
mov
jbe
mov
pop
xor
imul
xlat
outs
rcr
sub
adc
repz
repz
test
sbb
ins
sar
inc
dec
add
lds
mov
fstp
js
mov
in
fisttp
pop
mov
pushf
xor
sub
jb
loopne
adc
dec
jg
add
dec
(bad)
gs
sbb
pop
arpl
xor
retf
gs
sbb
dec
fdivr
imul
jmp
push
adc
fs
jb
test
cmp
pusha
call
inc
or
stos
fwait
aad
cmc
cdq
enter
out
xchg
(bad)
xor
mov
(bad)
shl
or
stos
xchg
pop
adc
(bad)
jp
push
add
sub
jp
cmp
inc
or
retf
pusha
iret
call
in
xlat
repnz
in
push
dec
(bad)
aas
ds
inc
or
or
add
jno
push
outs
test
fadd
cmc
(bad)
int
sbb
add
or
shl
xlat
shl
adc
nop
dec
adc
in
sbb
and
enter
jno
jl
stc
jmp
loope
sub
sub
scas
xchg
adc
retf
fwait
(bad)
and
ds
adc
fwait
shl
imul
out
jmp
lods
push
adc
sbb
mov
inc
retf
cli
jns
fxch
add
sub
adc
push
xor
mov
loope
call
(bad)
(bad)
dec
pusha
cmp
shr
push
lea
je
pusha
pushf
adc
pushf
lea
jmp
pusha
push
pop
jmp
push
jmp
push
lea
call
call
cdq
xlat
or
add
dec
add
sub
jl
jo
pop
or
and
sbb
scas
mov
or
adc
mov
div
sbb
int
sub
data16
in
fadd
pop
cwde
mov
and
jmp
xchg
xor
cmp
loopne
xchg
(bad)
lds
gs
outs
cmps
pop
push
rcl
jnp
pushf
(bad)
or
cli
add
xchg
popf
push
adc
lock
addr16
mov
xor
mov
fsub
inc
pop
xchg
xchg
pushf
fistp
xchg
push
ss
cld
cmps
mul
aaa
cmp
not
pop
movzx
lea
movzx
mov
pushf
lea
ja
push
lea
jb
call
jnp
mov
jmp
retf
cli
fcmovne
add
test
pushf
movs
mov
ins
dec
push
outs
sahf
mov
(bad)
mov
lods
shl
mov
fld
cmp
sbb
fs
push
sbb
xor
pop
xchg
scas
mov
xor
dec
mov
mov
ja
imul
mov
push
stos
inc
cld
sbb
out
xchg
mov
adc
stc
mov
out
push
scas
mov
icebp
ret
lea
and
test
pop
and
hlt
icebp
jle
in
es
fsub
and
ror
mov
fs
jne
bswap
mov
movsx
jmp
mov
dec
jmp
bound
shl
pop
test
dec
and
ins
pop
dec
dec
(bad)
movs
and
mov
je
mov
add
pop
es
jl
jg
inc
inc
pop
or
or
sbb
aad
retf
(bad)
mov
inc
loope
push
into
xchg
std
scas
jae
int
(bad)
xchg
(bad)
fcom
std
jecxz
cdq
and
push
sbb
jmp
or
das
pusha
inc
or
dec
or
or
jl
jno
jecxz
push
mov
leave
inc
mov
aad
jge
sub
jb
(bad)
retf
mov
idiv
dec
push
lods
cmps
mov
out
adc
or
inc
pushf
mov
pushf
mov
pushf
test
add
cmc
cmc
cmp
bt
test
mov
jmp
lea
call
cmc
cmp
pusha
mov
cmp
pusha
pushf
call
push
mov
pushf
mov
mov
mov
lea
jmp
push
pusha
mov
mov
mov
mov
push
mov
push
ret
pushf
pusha
lea
jne
push
pushf
jmp
mov
lea
jne
call
mov
and
ja
inc
cdq
pusha
adc
stos
out
aaa
xchg
pop
cmc
cmp
fmul
jno
popf
mov
pop
cmp
xchg
(bad)
(bad)
arpl
outs
jnp
test
mov
lods
out
test
adc
lds
xchg
aam
popa
push
or
push
lods
std
xor
inc
fwait
in
clc
mov
enter
(bad)
pop
jmp
or
hlt
imul
in
mov
sub
mov
out
jmp
rcr
sti
pusha
jns
scas
dec
movs
xchg
fcmovnbe
fwait
imul
shl
mov
jl
jns
sbb
daa
inc
add
sbb
push
in
mov
pop
inc
clc
test
xor
shr
sub
push
out
rcl
xor
pop
jb
sbb
or
cmps
out
mov
mov
loop
pushf
mov
repz
mov
je
enter
out
xor
inc
lahf
jb
jmp
adc
and
dec
sub
mov
pop
pop
push
in
dec
add
loopne
mov
mov
pusha
call
(bad)
out
sbb
(bad)
stos
cmps
mov
mov
movs
jecxz
xchg
test
sti
jge
add
das
imul
sbb
push
add
and
mov
push
cmp
sub
jbe
push
cwde
push
sub
xor
add
pop
mov
pop
cld
or
jle
sbb
mov
lahf
fmul
xlat
call
and
scas
cld
jno
or
sbb
retf
push
popf
cmc
jl
mov
enter
imul
shr
or
xor
(bad)
xchg
add
sbb
pusha
out
aaa
je
les
cmp
loope
out
add
sub
add
push
pop
adc
ss
shr
xlat
ficom
pushf
cmc
jl
mov
cli
push
les
mov
loopne
int
fsubr
xor
lods
data16
and
xchg
(bad)
ja
mov
dec
sbb
in
mov
sub
mov
xor
sar
mov
int
cmp
mov
aaa
jg
shl
rol
out
clc
ret
and
cld
jle
mov
add
ds
ins
jp
pop
cmp
std
jmp
lock
pusha
sar
inc
pop
mov
and
es
xchg
jle
xor
push
xchg
scas
out
ds
or
dec
in
out
mov
pop
xlat
rol
xor
int
bound
lock
out
dec
jns
or
rol
rol
or
push
mov
push
push
test
jmp
lds
jno
mov
aaa
push
or
imul
adc
pop
mov
push
add
sbb
mov
icebp
inc
jmp
mov
sub
imul
adc
lods
xchg
clc
shr
mov
gs
mov
add
jl
and
jae
aaa
xor
ins
and
or
ja
not
retf
jle
imul
cmp
scas
enter
scas
sbb
cmc
jne
jnp
cli
mov
mov
dec
aad
inc
mov
data16
push
bnd
icebp
add
pop
push
adc
je
add
mov
sbb
sub
test
in
js
jbe
stc
or
out
je
add
or
inc
add
add
add
aad
sldt
push
sldt
add
add
jo
add
add
add
push
add
add
add
dec
push
add
add
add
add
add
push
add
sbb
push
add
mov
push
add
or
add
add
add
dec
sbb
das
cdq
movs
xchg
shl
push
std
popf
xchg
inc
sti
fcom
cmp
xor
std
mov
ins
test
pop
je
ret
fcomip
or
sbb
jno
push
clc
ficom
dec
(bad)
mul
outs
ss
enter
aas
sbb
aam
mov
sub
imul
nop
fistp
in
ja
push
dec
test
movs
enter
and
out
imul
cmp
leave
dec
mov
pop
stos
inc
xor
lea
lock
test
sbb
stos
fst
mov
jne
std
lgs
daa
push
or
sar
jl
mov
adc
cmps
jmp
outs
les
cmp
sar
out
into
and
rol
push
stc
jno
sbb
push
rol
sar
lahf
xchg
dec
and
jae
xchg
mov
movs
iret
mov
gs
popa
in
and
test
xchg
dec
stc
jns
imul
cld
cmps
push
fs
imul
test
fist
loopne
pop
adc
add
jg
sub
loop
dec
into
add
popf
test
mov
ret
std
js
mov
retf
xchg
aaa
sbb
jo
push
lahf
mov
es
push
push
mov
dec
call
clc
frstor
jo
cwde
(bad)
test
pop
hlt
xchg
or
sub
push
out
out
fsub
mov
cdq
int3
or
(bad)
out
gs
retf
sub
sbb
push
jbe
add
jge
inc
xchg
xchg
xchg
repz
js
mov
cs
jl
adc
mov
and
in
and
call
xor
call
sub
and
imul
jae
bound
cli
in
retf
pop
enter
inc
jl
imul
pop
test
mov
mov
mov
ret
and
dec
dec
es
adc
retf
retf
popa
lea
jmp
dec
xchg
idiv
test
inc
mov
loope
aaa
pop
or
es
mov
gs
jmp
fisttp
bound
dec
xor
stos
lds
sub
in
xchg
enter
rol
jecxz
bound
sbb
xchg
and
xchg
retf
jno
popf
sbb
cmp
arpl
fadd
adc
nop
xor
aad
shl
leave
sbb
jo
pusha
or
jg
hlt
mov
movs
sbb
pop
and
jne
clc
lahf
mov
test
(bad)
fcomp
mov
enter
jl
mov
mov
pop
pushf
push
cmp
xor
scas
and
ds
or
xchg
xchg
xor
pop
daa
lods
push
call
mov
pop
push
inc
add
sub
fsubr
sbb
loope
popa
xor
sbb
pushf
fcmovnb
adc
pop
call
mov
(bad)
clc
lock
inc
daa
repz
push
cs
pop
inc
shl
xchg
or
clc
dec
rol
rcr
stc
std
fwait
add
xor
mov
ds
adc
xchg
es
push
aas
adc
(bad)
fmul
mov
jb
inc
lods
mov
es
retf
shr
repz
pop
rcr
pop
out
sbb
(bad)
mov
mov
sub
test
jmp
dec
into
cmp
icebp
int3
xchg
arpl
js
mov
add
cmps
xlat
mov
(bad)
xchg
mov
or
mov
lahf
mov
out
hlt
sub
xchg
cmp
mov
fld
dec
jmp
inc
add
sub
push
stos
jmp
push
loopne
and
test
ret
push
sbb
popf
pusha
xchg
ss
or
mov
shr
(bad)
rcl
mov
push
jle
jae
enter
adc
loope
xor
clc
push
xor
xchg
not
and
mov
lods
adc
inc
out
add
imul
xlat
je
and
adc
daa
cld
test
stc
xchg
pop
sub
fbld
cli
out
push
jns
xchg
jbe
jo
sar
xchg
push
xor
clc
xchg
ins
and
mov
jb
pushf
add
pop
ds
jecxz
mov
cs
stos
add
rol
sbb
fwait
push
popa
cld
inc
loop
mov
sub
dec
sbb
add
xchg
sub
pop
mov
mov
imul
jmp
or
mov
mov
sub
shl
pop
lahf
xchg
xor
repz
adc
add
fdivr
mov
add
mov
xor
sub
xor
lea
fwait
sub
add
cs
jo
sti
xchg
xor
mov
(bad)
cmp
mov
mov
push
mov
push
and
push
sbb
or
adc
jns
sahf
pop
mov
bound
aaa
adc
xchg
mov
mov
push
movs
xchg
add
dec
daa
pop
dec
push
pushf
outs
fnstcw
gs
repnz
cld
in
repnz
inc
mov
push
sbb
add
adc
addr16
sub
repz
cmps
call
pop
arpl
dec
dec
test
fcomi
test
bound
popa
jbe
pop
int
inc
std
cmp
sbb
xor
fnstcw
mov
sub
ret
push
iret
xchg
lock
pop
loop
pop
stc
data16
push
pop
adc
ss
jle
and
add
lds
mov
call
cli
cmps
or
jo
cwde
out
xchg
popf
mov
loope
adc
mov
jnp
(bad)
dec
aam
fcmovnu
or
inc
cmp
out
retf
jp
mov
sbb
pop
test
and
xor
pushf
pop
mov
jecxz
orps
fs
and
inc
mov
fidiv
outs
xchg
mov
(bad)
cmp
mov
shr
cmc
push
inc
jle
sbb
xchg
retf
clc
je
adc
ja
xchg
cmp
ds
ret
test
mov
test
add
jne
ins
push
jle
push
out
mov
mov
into
pop
mov
leave
repz
imul
aad
mov
sub
leave
enter
sbb
cmc
xor
xchg
adc
ins
rcl
jae
retf
cmps
fiadd
push
cmp
sbb
frndint
mov
icebp
sbb
or
dec
ror
test
test
add
(bad)
adc
adc
cmps
stos
sbb
(bad)
push
sbb
int3
add
mov
dec
inc
add
pop
inc
ja
push
xchg
fnstcw
clc
fwait
xor
pop
call
test
mov
cwde
loope
mov
xchg
sub
sub
jmp
mov
test
shl
add
ins
inc
ins
stos
mov
jb
add
push
das
push
ret
xchg
mov
mov
sar
mov
jae
inc
cmp
push
mov
inc
dec
xchg
lock
retf
pop
outs
and
call
stos
retf
loop
movs
rol
dec
sbb
pop
mov
retf
pushf
pop
popf
cmp
and
fnstsw
jnp
cdq
dec
xchg
or
std
lock
or
bound
stc
jns
cdq
or
je
daa
ret
pop
xchg
mov
std
sub
sar
xchg
jo
jmp
lods
cwde
or
mov
lahf
fld
and
jle
fcmove
rol
call
cli
pop
inc
jecxz
add
cmp
jns
and
add
cdq
ret
shr
adc
stos
mov
bound
dec
xor
mov
pop
jnp
and
addr16
ret
test
jne
outs
(bad)
xchg
repnz
scas
pop
cmc
jae
add
jno
gs
sti
sub
xchg
mov
push
or
ds
jecxz
jne
pop
das
jae
jl
or
test
std
out
mov
mov
dec
push
cmp
dec
test
(bad)
push
(bad)
xchg
cld
cmp
movs
jae
fcmovnb
push
sbb
(bad)
xor
cmp
sbb
add
mov
mov
(bad)
js
inc
ds
repz
pop
loop
inc
cli
in
div
push
jnp
bound
test
(bad)
xchg
jo
jb
mov
sbb
push
in
in
jo
cmp
hlt
inc
mov
xor
jg
ds
mov
ja
add
dec
aad
xlat
int3
std
jns
test
push
out
enter
inc
push
mov
sub
jl
sbb
sub
stos
rcr
pop
sahf
adc
dec
fistp
inc
jge
jne
retf
push
inc
pop
push
in
jge
adc
int3
jecxz
push
jmp
loop
shr
jmp
(bad)
pop
out
ins
repnz
cmp
(bad)
fstp
jns
add
dec
inc
sbb
sub
arpl
cmp
xlat
adc
jne
inc
jno
dec
outs
lods
push
lahf
and
aaa
cmp
mov
ja
mov
mov
and
arpl
movs
mov
mov
or
ja
cmp
das
mov
mov
jne
imul
nop
fisttp
mov
push
fs
pushf
and
out
fcomp
sub
icebp
and
ja
xchg
jecxz
arpl
adc
and
or
jmp
adc
or
or
daa
dec
mov
jle
sub
xchg
sub
add
sbb
cld
jmp
(bad)
jecxz
fucomip
add
mov
pop
fneni(8087
sub
lods
sahf
sbb
test
in
fincstp
cmp
inc
mov
and
add
push
xor
out
dec
sub
mov
test
mov
cmp
lds
stc
es
mov
push
push
inc
lock
gs
push
dec
cmc
lds
int
adc
xchg
cmp
push
and
inc
stos
mov
mov
shr
repz
xor
retf
and
outs
mov
mov
and
fwait
rcl
cmp
aad
or
retf
jg
push
push
fsub
or
dec
out
mov
add
sbb
mov
lea
lods
jae
push
xor
sbb
lahf
xlat
sub
jno
cdq
popa
xchg
xchg
lods
adc
cmc
pop
sbb
pop
test
es
dec
pushf
lock
hlt
adc
or
mov
fwait
into
add
clc
pop
popa
sub
cmc
or
ds
push
adc
sar
xor
cmpxchg
add
cmp
in
or
pop
xchg
xor
push
inc
sbb
js
int
xor
fsubr
xchg
jge
mov
shr
inc
retf
pop
repz
jp
adc
dec
xor
mov
push
ins
inc
bound
in
ds
ret
stc
sbb
jl
movs
test
or
push
fidivr
or
mov
mov
and
pop
xlat
jl
into
mov
xchg
addr16
jae
retf
nop
mov
sbb
test
adc
lods
cs
scas
push
and
dec
movs
jmp
(bad)
scas
jmp
mov
add
fisubr
mov
ror
mov
or
push
imul
and
dec
cwde
cdq
std
fsubrp
push
inc
mov
xor
cmp
ficom
je
push
pop
stc
jno
popf
fisttp
sar
mov
in
lods
mov
retf
sub
mov
(bad)
mov
fs
mov
cmp
cli
pop
repz
shr
push
lods
mov
cmp
xchg
add
mov
fldenv
adc
retf
inc
add
fistp
das
lock
dec
fsub
cmp
stc
jmp
and
jne
retf
call
xchg
out
lahf
push
mov
mov
test
or
push
push
std
shr
rcl
inc
sbb
outs
jae
mov
sub
push
arpl
hlt
push
test
xchg
pop
push
scas
stos
or
pusha
aam
pop
xor
push
cmc
push
pop
jnp
dec
pop
cdq
cmp
addr16
adc
(bad)
push
and
dec
pushf
test
adc
movs
into
push
xchg
pop
push
or
test
(bad)
out
(bad)
ror
jmp
int3
repz
movs
inc
sub
pushf
mov
cmp
rol
push
mov
add
addr16
fs
call
push
out
je
pop
dec
sub
sub
es
dec
jmp
icebp
pop
jmp
push
cs
loope
xchg
push
iret
test
std
call
not
mov
mov
jnp
js
add
popa
int3
mov
xchg
jmp
and
add
inc
and
push
lods
test
dec
loope
ret
popa
popa
adc
or
movs
lahf
lods
cli
cmp
pop
mov
loop
loopne
out
inc
les
push
jo
push
mov
sbb
dec
xchg
sbb
js
gs
sti
mov
(bad)
das
leave
ss
shl
pusha
add
ja
or
mov
popa
(bad)
call
push
mov
adc
je
fstp
xchg
dec
in
pop
add
mov
pop
dec
dec
stc
adc
or
jno
push
jno
jl
mov
mov
adc
xchg
(bad)
ret
mov
or
(bad)
imul
sub
sbb
hlt
sub
out
lods
jmp
int
test
leave
push
(bad)
inc
xchg
arpl
pop
jb
in
inc
rcl
xor
ret
push
cmps
adc
xchg
jecxz
mov
add
es
dec
add
outs
jge
xchg
adc
bound
out
add
cpuid
rcl
cmp
test
xlat
enter
push
repz
pop
les
(bad)
and
xor
mov
add
(bad)
push
mov
push
cmp
js
pop
lods
pop
daa
ins
add
add
jge
lods
mov
dec
mov
or
jmp
ret
test
rol
imul
sbb
aam
dec
js
mov
xor
loopne
inc
pop
push
pop
es
and
les
(bad)
xor
or
dec
pop
bound
jle
hlt
lock
clc
jno
pop
adc
push
adc
pop
pop
fcom
sahf
(bad)
xlat
out
gs
push
fwait
xchg
cmp
dec
repz
out
scas
call
and
in
test
or
pop
mov
jne
btr
mov
bt
add
push
call
mov
call
cmp
pusha
push
push
pop
clc
cmp
lea
jle
push
lea
ja
test
shl
shl
adc
sub
stc
add
cmp
movzx
btc
mov
and
cmp
mov
jmp
mov
mov
pushf
push
lea
jmp
(bad)
xchg
pop
sub
jno
mov
xor
pop
or
outs
jno
(bad)
xchg
ret
push
movs
test
sub
and
fs
ins
pop
(bad)
lods
loope
int3
rcr
fstp
jmp
jmp
cli
imul
jnp
push
jno
jmp
pop
cmps
mov
jns
pop
hlt
aad
or
add
addr16
jmp
imul
fstp
mov
lods
ret
push
scas
xor
and
in
pop
int3
pusha
sbb
icebp
mov
stos
jb
jbe
aas
xor
xor
das
les
mov
mov
xchg
cmp
cld
mov
jbe
xchg
bound
je
lods
das
add
pop
dec
push
xor
or
push
or
mov
jmp
aad
fld
mov
cmp
je
mov
pop
dec
jmp
inc
jle
sub
adc
fcomp
cs
(bad)
retf
mov
fs
inc
loopne
add
fcmovnbe
or
pop
jge
add
ret
mov
sbb
ja
hlt
mov
sub
popa
push
fbld
out
mov
mov
push
cmp
and
call
push
push
inc
push
xor
cs
ins
add
cmp
push
aad
sti
(bad)
(bad)
out
imul
shl
in
jno
cmp
out
push
fist
xor
sbb
dec
arpl
dec
and
add
dec
cld
enter
mov
xor
aam
jno
mov
call
mov
mov
fs
push
imul
adc
stos
or
jp
adc
jp
mov
push
xchg
sbb
out
xchg
ror
adc
mov
xadd
dec
(bad)
xor
inc
enter
xor
idiv
pop
sbb
loope
jmp
or
cmp
idiv
les
mov
dec
ds
dec
push
vmovaps
cmp
ror
mov
jmp
inc
leave
repz
adc
push
inc
or
ins
sub
dec
iret
rcr
nop
mov
mov
fwait
xchg
enter
sub
loop
cmp
pop
pop
(bad)
cwde
sar
iret
xor
or
les
cmp
je
mov
movs
pop
out
and
push
(bad)
js
add
push
pop
dec
add
sub
sub
mov
loopne
xchg
sbb
das
ins
mov
dec
lock
dec
push
or
or
retf
(bad)
lods
arpl
adc
adc
jg
fs
in
(bad)
(bad)
mov
lock
xor
hlt
test
jg
ds
and
sub
xchg
das
or
lock
jecxz
jl
dec
add
mov
add
inc
pop
daa
mov
ret
cli
mov
cmps
push
gs
fist
sbb
bound
loop
mov
dec
xchg
gs
retf
repz
ja
lea
loopne
add
bnd
in
xchg
scas
mov
out
mov
dec
inc
jns
fcomip
stos
aas
mov
dec
pop
pop
outs
iret
mov
shr
retf
cld
add
into
adc
rcr
and
mov
int
nop
adc
push
stos
out
retf
inc
dec
dec
retf
(bad)
lea
iret
lock
pop
(bad)
test
test
(bad)
and
daa
popa
cmp
jno
ins
and
aas
sub
and
aaa
jl
cmp
je
xor
adc
dec
imul
sbb
imul
xor
int
scas
xchg
sbb
sub
enter
js
inc
or
jnp
nop
int3
or
mov
add
or
iret
dec
jmp
jmp
mov
punpckhdq
push
retf
setg
mov
xor
mov
push
xor
aas
mov
rcl
(bad)
push
pop
push
mov
(bad)
sbb
fst
inc
dec
dec
adc
mov
sub
or
cmps
out
gs
push
cmp
sub
mov
push
xchg
inc
jae
scas
out
push
dec
push
jno
ret
and
loop
fadd
pusha
push
lea
jmp
sar
sub
shld
clc
push
lea
test
call
cmp
cwde
lea
jmp
xchg
jno
jb
aam
aam
jo
jb
pop
movs
repnz
int3
adc
cwde
(bad)
push
sbb
xor
(bad)
rep
mov
pop
addr16
add
je
dec
stos
dec
cmp
inc
test
xor
dec
sbb
test
rcl
xchg
imul
push
das
pop
pop
fsub
xchg
pop
push
dec
jl
mov
jnp
or
sar
fidivr
mov
jmp
mov
xchg
retf
int3
iret
icebp
mov
int
jp
cmp
add
loopne
not
call
stos
push
sub
neg
cmc
ror
push
jmp
lods
dec
inc
call
jmp
pushf
mov
mov
pusha
call
pushf
lea
jbe
pushf
lea
call
jmp
mov
push
lea
je
cmp
clc
add
bt
cmp
cmp
push
lea
jb
pushf
cmp
pusha
lea
jb
pusha
pusha
lea
jae
xadd
jmp
shr
inc
ins
pop
cmp
imul
xor
add
das
bound
or
mov
cmps
int3
test
jle
or
int
bound
cmp
(bad)
loope
in
mov
test
fldcw
dec
jmp
xchg
test
cmp
(bad)
in
popf
jge
addr16
cmp
inc
xor
movs
push
outs
xchg
mov
or
(bad)
fsub
sti
fucomp
xchg
imul
mov
mov
ins
sub
push
xchg
rcl
pop
xlat
repnz
scas
lahf
push
inc
mov
adc
dec
jl
sub
inc
push
cmp
daa
fwait
pushf
xchg
rcl
xchg
pop
jo
cmp
and
rcl
xor
mov
bound
jno
jl
inc
adc
sbb
ins
or
mov
and
jo
pusha
sub
jecxz
or
inc
or
ret
(bad)
fcmovnbe
fwait
dec
jns
or
cs
sub
add
imul
pop
pop
aad
imul
or
inc
cmc
mov
in
add
mov
push
jge
fwait
gs
and
addr16
sbb
mov
lea
lock
nop
es
push
sbb
jno
adc
fdivr
cmp
mov
pop
inc
aas
sbb
fwait
adc
in
movs
hlt
mov
jmp
dec
imul
xchg
push
pop
sub
test
(bad)
push
jmp
mov
lea
jne
bts
mov
pushf
sub
bts
btr
sub
adc
lea
clc
cmp
mov
test
sub
pushf
jmp
rol
mov
call
std
lods
popa
adc
cmp
cmp
inc
adc
ss
inc
or
scas
mov
dec
neg
frstor
sbb
mov
repz
fmul
fwait
xchg
cdq
lock
int3
popf
(bad)
mov
data16
cmp
mov
mov
call
jl
bound
in
cmps
xchg
frstor
pop
push
aam
fwait
retf
mov
fs
pop
dec
cwde
adc
sti
mov
pop
pop
jbe
mov
jg
pop
jmp
xchg
aam
imul
sbb
clc
mov
sbb
add
(bad)
ss
pop
push
adc
sahf
mov
cmp
bound
leave
mov
sub
and
in
repz
ds
pushf
push
lea
ja
clc
push
pushf
imul
stc
cmp
pusha
jmp
std
mov
xchg
pop
cmp
xchg
vpsrlq
test
adc
loop
cld
sub
inc
cmp
or
jnp
mov
xchg
dec
mov
ret
icebp
call
sbb
mov
pop
adc
mov
popa
fwait
gs
lahf
iret
pushf
mov
ret
or
inc
jb
icebp
mov
(bad)
sti
jl
jmp
pop
push
repz
push
mov
mov
pop
cmp
(bad)
aam
jnp
pop
pushf
mov
call
mov
cmp
or
imul
mov
call
inc
retf
stc
or
cmps
and
xchg
cmp
js
in
hlt
xor
jbe
xchg
shr
xchg
repnz
outs
out
jge
sbb
xor
shl
pop
adc
mov
jae
jns
dec
or
and
xchg
adc
icebp
mov
push
add
push
mov
sub
push
es
call
jmp
fild
add
mov
push
imul
rep
cmp
lahf
inc
pushf
pushf
mov
mov
pushf
mov
push
pop
push
mov
pushf
push
ret
call
jle
cli
(bad)
push
cmp
(bad)
int
(bad)
cmps
jmp
cmps
loopne
dec
test
lock
fcom
mov
lods
jecxz
xchg
idiv
outs
outs
xchg
mov
loope
out
dec
dec
mov
or
push
nop/reserved
sbb
nop
popf
(bad)
pop
js
or
inc
push
add
bound
and
mov
rcr
jbe
pop
dec
inc
dec
popa
add
imul
je
fsubr
xor
lahf
sbb
lods
lods
and
imul
cmp
test
clc
add
pushf
push
lea
jmp
pusha
lahf
mov
mov
push
mov
movzx
lea
mov
pusha
pushf
mov
call
call
xchg
xchg
push
push
cmp
es
add
fucomi
xlat
cwde
fadd
and
sar
jne
mov
je
dec
dec
push
adc
dec
sbb
inc
data16
addr16
popa
icebp
mov
jmp
repz
imul
retf
ins
push
adc
fpatan
mov
cmp
mov
sahf
sbb
dec
add
pusha
in
adc
jg
xor
imul
add
mov
push
inc
(bad)
(bad)
mov
daa
or
mov
fstp
mov
(bad)
mov
adc
xor
and
and
dec
pop
imul
sub
xor
adc
in
cld
pop
pusha
lea
ja
stc
add
call
push
push
out
call
mov
popf
dec
mov
cmps
out
lods
fcomp
int3
shr
push
hlt
add
pop
mov
sbb
shr
jbe
ins
and
add
inc
punpckhdq
(bad)
sub
dec
sub
scas
movs
mov
retf
lock
ins
pop
sbb
pushf
and
add
popa
pop
sbb
test
pop
(bad)
ror
test
inc
pop
es
mov
mov
mov
jl
dec
outs
mov
fwait
mov
pop
stos
rcr
rcr
fistp
inc
mov
clc
daa
popf
movs
jo
shr
dec
or
rol
idiv
push
sbb
mov
cmp
push
add
xlat
out
mov
xor
xchg
xor
shr
mov
(bad)
cmp
or
or
call
hlt
cmps
in
xchg
sbb
sub
mov
and
loope
xchg
shl
mov
cmps
clc
sbb
mov
fcom
les
sub
scas
loope
sbb
inc
cmc
mov
push
sub
sbb
fistp
inc
movs
xchg
push
or
pusha
inc
icebp
popa
lea
xchg
pop
shr
dec
fnstenv
fst
mov
or
je
push
test
mov
and
fwait
or
dec
inc
or
lahf
mov
ret
dec
dec
les
imul
jmp
icebp
cmp
inc
or
jns
sub
lea
jp
dec
jmp
mov
push
cmp
call
push
dec
retf
in
cmp
int3
xchg
xchg
in
outs
and
inc
mov
aad
sub
in
jle
inc
daa
and
stos
mov
int3
cwde
enter
loope
neg
in
les
retf
fld
fld
test
and
retf
add
sub
or
or
popf
fidivr
jo
nop
jae
jle
inc
add
dec
jo
sti
in
pusha
imul
jge
fisttp
dec
cmp
call
push
sub
lea
(bad)
shr
cmp
mov
lahf
aad
jne
rol
inc
add
push
push
retf
sti
ret
nop
jb
(bad)
repnz
xlat
xchg
sub
test
sub
(bad)
push
(bad)
jmp
in
nop
push
(bad)
push
push
adc
push
int3
cmp
mov
lock
sub
jo
call
fs
dec
or
push
cmp
pop
dec
add
sbb
(bad)
icebp
pop
fistp
mov
loope
inc
and
and
mov
into
mov
push
push
lock
pop
pop
shl
(bad)
shl
push
mov
inc
pop
jmp
jl
inc
or
xchg
sbb
push
hlt
lds
or
movs
push
fimul
xchg
adc
jmp
xchg
aam
rcl
aam
add
mov
stc
je
shl
jmp
pushf
push
lea
jae
call
movsx
mov
lahf
pop
push
movzx
not
lea
jmp
movzx
mov
mov
pushf
mov
jmp
xchg
jnp
push
cmp
fs
or
stc
repnz
shl
sub
xor
js
xchg
and
ficom
jg
xchg
not
ds
into
jp
sub
jns
adc
into
cmp
daa
sub
sub
(bad)
mov
pop
rcl
repnz
jae
push
cmp
dec
mov
xchg
push
mov
pop
inc
add
data16
mov
pop
(bad)
mov
lahf
push
das
rcr
(bad)
mov
outs
jecxz
dec
push
mov
push
xchg
push
dec
push
cmp
and
jge
mov
dec
dec
pop
and
(bad)
push
lock
cmp
lds
std
fistp
aas
pop
push
test
aad
xor
cs
nop
mov
stos
nop
xchg
les
push
push
cmp
xor
push
push
dec
add
or
pop
cwde
lods
fs
inc
fisttp
dec
jae
sbb
data16
dec
add
call
push
jo
xor
es
hlt
ror
loope
loopne
jbe
mov
jge
cmp
cmp
pop
mov
(bad)
cmc
jae
sti
js
pop
(bad)
call
inc
in
out
dec
cmc
idiv
cmps
imul
and
sub
sahf
call
pushf
pushf
pushf
lea
je
cmc
clc
bt
add
clc
cmp
clc
cmp
call
jle
mov
fild
sbb
sub
jns
or
push
jecxz
(bad)
mov
out
out
mov
cmp
sub
pop
pop
inc
jne
in
test
js
push
and
mov
aam
ret
lods
jo
xor
sti
int3
xchg
cmp
repnz
mov
xchg
add
pop
cwde
adc
mov
je
pop
popa
jecxz
push
mov
mov
sbb
mov
les
call
stos
inc
sbb
call
mov
sub
stc
fsubrp
lods
xor
pop
and
xchg
mov
nop
xchg
adc
movs
scas
push
add
lahf
jl
cmp
lahf
mov
dec
inc
rcl
mov
sub
jno
xchg
stos
loopne
mov
popf
fdivr
loop
sti
sti
loop
out
xchg
shr
std
(bad)
pop
xchg
shl
ins
daa
dec
add
adc
jmp
mov
fmul
inc
push
out
into
jbe
(bad)
ins
xor
callw
xchg
(bad)
mov
gs
sbb
mov
jb
mov
and
pmaxub
scas
jg
add
jl
xchg
fnsave
jmp
ror
xlat
ja
and
or
ins
and
outs
in
out
aam
mov
adc
xchg
scas
sub
ins
mov
out
loop
rcl
push
add
inc
gs
gs
imul
push
mov
jno
imul
nop
sub
dec
clc
mov
out
dec
add
pop
or
je
push
mov
ret
sbb
jmp
mov
xor
jbe
fimul
dec
add
mov
jbe
das
inc
or
jnp
arpl
std
and
iret
cmp
loop
mov
sub
cmp
lock
out
mov
xor
js
mov
sub
add
imul
arpl
(bad)
in
mov
bound
sbb
into
adc
mov
xor
repz
push
(bad)
(bad)
fwait
popf
aam
jno
aam
inc
cmps
push
adc
lock
mov
ins
fs
inc
and
jl
dec
add
adc
jmp
inc
neg
sar
xchg
aad
movsx
bsf
mov
push
and
rcr
test
mov
cmp
cmp
call
cmp
push
mov
cmp
pusha
pusha
mov
lea
jne
push
bt
mov
bt
add
bt
jmp
movsx
mov
pop
push
bswap
lea
pushf
push
pushf
pusha
mov
call
jmp
inc
or
jno
test
and
sub
add
or
push
ret
test
xchg
test
xlat
and
and
pop
xchg
fs
fnstsw
dec
ja
int
out
pop
pop
jb
rcr
mov
sbb
pop
or
dec
shr
xchg
dec
cmp
and
shl
or
ins
jmp
xor
lea
push
push
inc
mov
mov
adc
test
add
push
add
jmp
dec
sbb
jae
or
pop
push
inc
cmp
push
les
call
push
and
ss
cs
inc
or
int
adc
pop
nop
addr16
fsubr
jne
(bad)
fst
test
mov
add
call
jne
mov
loopne
mov
pop
neg
iret
sbb
in
imul
mov
inc
into
ret
cli
hlt
out
das
inc
add
cld
mov
sub
inc
adc
add
es
lds
dec
add
aas
cmp
xchg
jo
lahf
inc
into
push
das
jge
dec
movs
cmps
inc
nop
adc
es
int3
(bad)
push
lods
pop
xor
mov
sbb
in
pusha
xchg
add
adc
(bad)
push
adc
mov
or
and
push
cdq
pusha
and
mov
xlat
sbb
cmp
or
sub
(bad)
out
loope
mov
push
cmovp
xor
outs
and
xchg
rcl
sbb
jns
cmps
cmp
dec
int
cmp
mov
stc
shl
mov
push
bt
cmp
call
mov
push
pusha
lea
je
setne
stc
and
shl
add
rcr
pusha
shl
setnp
mov
jmp
inc
jmp
inc
or
mov
xchg
(bad)
mov
xchg
mov
ret
out
jbe
ins
loop
scas
pop
cmp
bound
test
xor
mov
test
inc
(bad)
inc
lahf
dec
aam
sub
ret
adc
sub
jae
int3
fwait
pushf
sub
mov
jmp
cmp
cmp
inc
and
or
and
and
adc
sbb
push
pop
sbb
in
imul
pop
pop
aam
addr16
leave
call
mov
pop
push
out
adc
cs
push
shr
hlt
mov
jno
push
push
popf
jbe
div
sti
(bad)
call
(bad)
in
cmp
xor
dec
add
sub
cwde
pusha
js
mov
in
xchg
lods
pop
ins
mov
sub
lods
inc
add
ss
loopne
lods
xor
das
addr16
icebp
mov
dec
push
ss
aad
push
mov
into
pop
ds
(bad)
mov
mov
ret
cmc
cs
jb
mov
and
and
test
dec
sbb
addr16
adc
in
jne
mov
mov
mov
hlt
(bad)
mov
jecxz
sub
aad
ret
mov
jnp
mov
mov
jmp
call
lds
jno
mov
lds
iret
mov
leave
out
mov
sti
repnz
ror
push
xchg
push
popa
das
mov
stos
sti
int
in
sbb
xor
mov
pop
mov
fs
test
jne
repz
pusha
xor
and
js
xor
lods
mov
clc
(bad)
popa
cmpps
stos
loop
dec
mov
lods
in
cmc
inc
(bad)
daa
mov
inc
adc
sub
sub
sbb
pop
sbb
fild
dec
fnsave
add
stc
sti
in
xlat
test
hlt
jge
aaa
or
mov
add
jmp
adc
test
xchg
shl
imul
cmp
push
jmp
(bad)
in
mov
cmp
sub
(bad)
inc
(bad)
push
test
mov
mov
call
ret
(bad)
dec
cmp
cmp
sahf
ficom
out
out
cli
xchg
fisttp
stc
mov
add
loopne
(bad)
sub
push
add
test
or
pop
lds
mov
sbb
push
push
add
xchg
mov
in
pop
and
aas
xlat
pop
scas
fs
push
mov
pop
xchg
(bad)
in
or
mov
sub
jp
aas
xor
adc
dec
jnp
fmul
inc
dec
std
mov
sub
xchg
pushf
and
cdq
call
stos
outs
pusha
add
push
lea
jmp
lea
push
lea
mov
movzx
pop
pusha
lea
jne
pushf
lea
not
call
mov
cmp
sar
or
add
sahf
jne
in
shl
push
sub
test
ficomp
add
cmp
loopne
lods
cli
retf
push
daa
xor
repz
mov
(bad)
lds
popa
sub
push
jp
or
inc
xchg
scas
push
dec
pop
ins
fs
lods
addr16
scas
es
fld
xchg
push
sbb
lds
mov
stos
into
dec
in
sbb
imul
inc
fs
in
push
int3
retf
test
fistp
cmp
(bad)
push
inc
adc
out
rcr
dec
xchg
(bad)
(bad)
stc
jmp
jmp
mov
adc
cmp
jmp
leave
cmp
and
lds
inc
clts
sbb
adc
and
loope
inc
xchg
pop
pop
jp
pshufw
addr16
retf
mov
inc
inc
imul
or
adc
scas
sahf
mov
push
xchg
inc
dec
aad
in
push
xchg
sbb
in
cmp
stos
stos
dec
pop
sbb
test
cs
xor
mov
and
mov
adc
cdq
addr16
xor
outs
ds
stos
mov
sub
mov
add
mov
jns
cld
in
pop
sbb
jo
add
jl
rol
adc
pop
mov
daa
cmp
dec
jge
imul
pop
pop
rcl
pop
add
popf
push
loop
xchg
adc
mov
add
sbb
add
push
xor
dec
add
clc
or
jb
repz
fisub
shl
mov
or
jbe
push
cli
retf
push
adc
sbb
hlt
(bad)
ja
jo
jge
aas
aam
sbb
int
mov
sub
add
ins
sahf
ins
xor
push
gs
and
mov
mov
mov
xchg
jp
jecxz
lea
sub
xchg
pop
jmp
push
(bad)
out
retf
fucom
stos
fidiv
push
(bad)
ficomp
xor
lods
icebp
cmp
or
lds
clc
mov
retf
pop
pop
or
jecxz
jecxz
sahf
lea
js
call
jge
(bad)
(bad)
sahf
sahf
sbb
jg
push
xchg
pop
test
hlt
dec
dec
ja
(bad)
pop
(bad)
in
imul
stos
xchg
sbb
int3
mov
enter
jg
daa
xor
mov
push
mov
pushf
lea
jmp
gs
fsub
cmp
cmc
movs
int
in
mov
mov
push
mov
int3
or
xchg
jne
out
or
test
leave
xchg
jmp
xchg
scas
daa
push
leave
adc
pop
sbb
and
jb
xchg
enter
sub
lods
std
mov
gs
mov
mov
adc
cmc
jns
add
enter
outs
cmp
and
pop
jo
xchg
dec
xor
arpl
mov
lds
jle
jo
xor
inc
jp
out
jle
add
sahf
(bad)
into
jb
jge
dec
dec
or
inc
jecxz
or
movs
mov
inc
jmp
cmp
push
lea
jae
bt
cmp
cmp
call
inc
or
out
(bad)
or
fdiv
cmps
inc
mov
xchg
(bad)
leave
movs
xchg
mov
push
movs
mov
test
rcl
fisub
sbb
iret
pop
mov
movs
mov
lods
lods
lods
jmp
(bad)
pop
inc
sti
cld
sbb
jbe
mov
jle
sub
int3
maskmovq
div
lds
lahf
sub
test
repnz
scas
push
pop
mov
jle
inc
rcr
cs
int3
sbb
jmp
out
or
sbb
xchg
test
sbb
das
(bad)
mov
mov
xor
sbb
pop
jge
xor
inc
lea
cmp
sahf
adc
imul
pop
pop
cdq
and
jno
cdq
enter
neg
fild
aam
mov
xchg
cwde
test
aaa
ret
push
fisub
xchg
mov
xchg
sub
xor
mov
pushf
aam
retf
and
inc
push
push
cld
push
sub
call
test
(bad)
std
test
push
imul
or
dec
xchg
jecxz
push
je
in
jns
mov
aas
sti
push
test
outs
push
mov
gs
sbb
xor
add
inc
ins
jae
cmps
pop
dec
ja
pop
dec
lock
sub
data16
leave
sub
pop
test
ds
sar
pusha
pusha
pushf
stos
push
pushf
mov
lea
jmp
lea
jne
jmp
shl
rcr
mov
call
push
push
mov
mov
pushf
pushf
pushf
push
ret
cmp
call
push
mov
call
call
pusha
pusha
lea
jne
shr
cmc
mov
test
movzx
movsx
sub
xor
sbb
movzx
shr
mov
clc
sub
jmp
jmp
pusha
lea
ja
cmc
imul
cmc
cmp
cmc
bt
add
push
pusha
lea
jmp
repnz
jmp
pusha
test
clc
test
call
lahf
mov
mov
push
lea
mov
jmp
lea
jae
xadd
mov
shld
sbb
shl
shrd
mov
shrd
xor
shld
bsr
mov
bt
clc
bt
xor
pusha
test
test
mov
repnz
jmp
dec
rcr
imul
jno
inc
or
pop
and
dec
add
adc
push
adc
inc
or
imul
js
loop
lods
retf
mov
enter
sub
gs
mov
xchg
cwde
pusha
dec
sar
push
aas
jo
stos
xlat
fdivr
jns
sub
push
(bad)
adc
jge
cld
xor
scas
lahf
mov
mov
add
dec
gs
bound
das
pushf
mov
or
outs
pop
sbb
out
cmp
jp
or
fimul
lds
mov
adc
cmp
cmps
cmps
jns
jmp
(bad)
sbb
std
mov
xchg
push
sub
dec
or
dec
inc
add
jne
and
in
or
sub
mov
mov
dec
call
xor
jno
mov
cmc
mov
fscale
clc
out
jmp
popa
daa
gs
fisubr
xchg
arpl
jg
jl
push
sbb
(bad)
jp
sar
les
xor
lods
and
dec
push
cmp
xchg
js
adc
and
in
faddp
sahf
or
fst
xchg
(bad)
mov
pop
mov
outs
and
addr16
jle
inc
pop
sti
ret
popf
fneni(8087
clc
push
and
retf
jge
or
lock
mov
dec
int3
sbb
retf
xchg
je
sbb
adc
fisubr
sbb
idiv
and
adc
adc
ret
or
cmps
push
xor
push
rol
dec
jo
fstp
push
lods
lods
xchg
push
imul
fistp
repnz
pop
ror
fistp
push
inc
bound
dec
stos
push
sbb
xor
test
imul
call
popa
mov
or
jmp
mov
leave
push
in
in
sar
ret
or
call
bound
mov
inc
jl
cdq
adc
mov
add
sbb
jl
mov
push
xchg
sbb
movs
lahf
fnstcw
pop
(bad)
mov
dec
aad
pop
das
jne
test
out
mov
and
jnp
icebp
in
test
retf
lods
out
in
daa
sub
xor
mov
mov
call
mov
call
push
bt
jmp
add
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
xchg
pop
sub
jno
(bad)
rcl
cmps
jmp
(bad)
push
inc
ror
mov
jg
cmp
aad
jg
jle
jp
xchg
xlat
fsubp
test
retf
mov
scas
sub
push
push
sbb
pop
lahf
cmp
aam
movs
popf
imul
adc
add
push
push
sub
mov
cmp
maxps
mov
addr16
jg
aaa
test
ins
xchg
arpl
and
adc
and
mov
ss
xchg
pop
(bad)
mov
and
ret
cwde
wbinvd
or
cmps
jmp
imul
loop
ins
and
test
and
jnp
cdq
shr
pop
pop
out
bt
push
shl
push
lods
mov
dec
bt
push
neg
push
jmp
clc
call
ficom
jno
mov
jmp
xchg
shr
and
popa
or
and
cmp
jl
sub
sub
pusha
or
shl
sub
add
out
loope
jp
aad
push
jl
jge
sub
push
jmp
sub
cwde
(bad)
imul
cmp
(bad)
pushw
and
shl
scas
inc
loope
test
cmps
and
pop
add
jb
dec
int3
ins
push
sbb
dec
mov
clc
or
xor
xchg
cmp
xchg
dec
add
dec
imul
sub
mov
mov
pop
push
les
movs
xchg
pushf
(bad)
imul
mov
push
xchg
shr
addr16
(bad)
lock
add
sahf
xchg
enter
inc
push
push
and
(bad)
mov
or
sbb
sbb
lods
and
call
test
sbb
cld
lods
jmp
mov
cmp
sbb
dec
stc
cld
mov
jae
outs
xlat
ret
xchg
or
pop
sbb
das
mov
int
mov
leave
shl
or
mov
jne
push
inc
movs
push
sub
leave
inc
leave
xor
cwde
and
cmp
out
push
jg
mov
ins
add
dec
enter
ror
lods
jg
mov
les
jecxz
sbb
dec
mov
mov
sbb
or
push
pop
add
sbb
xor
(bad)
mov
xchg
outs
aam
cld
lahf
mov
jmp
call
push
dec
jbe
shl
add
cwde
push
mov
dec
push
adc
sbb
popf
shl
ret
push
sub
loopne
(bad)
dec
sbb
or
pop
dec
retf
add
sub
push
sbb
jae
(bad)
jo
pop
dec
test
push
fld
test
pop
std
jmp
pop
push
pop
dec
inc
nop
retf
inc
inc
ror
pusha
jl
idiv
dec
add
outs
jmp
hlt
cld
movs
fninit
fld
scas
fstp
cmp
fist
movs
out
xchg
and
pushf
test
dec
mov
dec
jb
mov
mov
in
inc
mov
or
pop
clc
aam
cs
xchg
aaa
ins
retf
push
es
std
popa
add
xor
cmp
xor
jmp
and
or
sub
int3
(bad)
(bad)
xchg
mov
cdq
pop
inc
push
mov
dec
stos
sbb
jno
cmps
leave
sub
ins
jl
adc
mov
and
retf
fwait
cmps
lods
in
push
rcl
cmc
mov
add
movs
loopne
cmp
movups
movs
mov
mov
push
cmp
jno
sbb
imul
sbb
dec
inc
adc
bound
ins
rcr
cmp
scas
xchg
loope
or
out
fisttp
cmc
aas
aad
sti
scas
(bad)
xchg
rcr
or
inc
loope
cli
rol
inc
div
mov
cs
mov
aam
xchg
lock
jnp
fcmove
xchg
mov
jnp
movs
jp
fst
in
mov
xchg
fcomp
sub
mov
sub
mov
inc
das
mov
mov
cmp
mov
jmp
dec
add
test
or
frstor
(bad)
pop
ret
shl
xor
scas
mov
popa
xor
inc
jge
cmovno
jle
jge
sbb
pop
sbb
mov
push
mov
gs
adc
or
stc
jnp
cmp
push
push
rol
dec
push
ins
sub
jbe
xor
or
cmp
imul
push
rcr
adc
iret
push
sub
test
mov
lods
in
lds
add
cmc
ror
movs
xor
test
or
(bad)
lock
and
push
mov
call
ficomp
add
aad
stos
popa
cmc
sub
(bad)
shl
adc
jae
mov
cli
pop
sbb
mov
xchg
stc
jo
repz
xor
aas
mov
or
jge
cmp
push
stos
setge
pushf
pushf
call
jae
clc
cmp
jmp
mov
cmp
push
adc
das
xor
push
adc
or
in
mov
xchg
fsubp
cmps
or
rcl
xchg
aam
or
aam
mov
push
stos
fsubr
pop
mov
pop
lahf
popf
mov
retf
rcr
add
(bad)
add
jl
shl
cmp
dec
or
jae
cmc
mov
fwait
rol
dec
jp
mov
retf
jmp
sbb
cmc
cmp
ss
aad
in
pop
push
add
rcl
pushf
sub
retf
out
sbb
and
ins
and
push
inc
pop
push
ror
fwait
pop
aam
stos
fstp
call
pusha
pushf
mov
call
push
dec
jle
ret
adc
and
dec
pop
sbb
imul
jl
push
dec
leave
xchg
mov
cmps
cmp
mov
mov
xchg
lods
lods
(bad)
imul
hlt
retf
xlat
(bad)
ficomp
push
movs
dec
out
push
imul
test
xor
into
test
div
mov
icebp
jmp
xchg
or
cmp
xchg
bound
and
sbb
xchg
dec
retf
popf
ficomp
mov
jmp
and
jno
ds
test
add
scas
stos
sub
mov
push
fist
mov
xchg
xor
jno
fs
cmp
sbb
and
push
pop
dec
mov
push
and
das
xor
aas
repz
in
adc
das
imul
jo
jb
leave
add
cmp
rcl
lods
scas
cmps
mov
jmp
das
mov
jle
movs
test
push
cmp
or
push
pushf
enterw
cmp
bound
cmp
ins
das
push
push
cmp
push
push
stos
gs
push
sbb
(bad)
mov
add
and
cdq
aaa
xor
xchg
cwde
ret
pop
sbb
sahf
xchg
mov
mov
iret
push
add
xor
jno
xor
jp
pusha
pop
es
ja
inc
add
(bad)
ss
adc
jge
hlt
int3
dec
mov
mov
mov
leave
(bad)
or
aam
ss
in
shl
test
ja
hlt
imul
sub
xor
adc
stc
xlat
push
adc
push
inc
xor
call
arpl
ret
or
rcl
in
add
mov
and
mov
dec
mov
clc
push
les
mov
xor
sub
imul
adc
sbb
sbb
cmps
or
xor
and
mov
aad
sub
push
mov
test
in
int
popa
test
pop
sete
not
mov
pop
call
leave
mov
aaa
cmp
or
jae
es
js
dec
add
cs
pop
pop
icebp
or
adc
retf
jg
cmp
lods
test
ja
ret
xor
jmp
xchg
or
and
pop
out
cs
jmp
lds
and
cmps
mov
inc
mov
adc
sbb
cmc
jl
in
push
out
ror
push
jmp
sahf
popf
jno
inc
xchg
iret
and
pushf
iret
sar
cmps
div
xor
pusha
jecxz
mov
or
add
ret
out
and
(bad)
bnd
xor
push
adc
xchg
cmp
xchg
mov
mov
mov
mov
pushf
sub
sbb
imul
push
stc
cmc
mov
out
mov
adc
xchg
push
add
in
xchg
repnz
gs
xchg
lock
inc
loopne
pop
jmp
lods
jecxz
push
push
cmp
mov
(bad)
xlat
xchg
scas
xchg
shl
stos
sub
xor
hlt
(bad)
out
push
call
or
popf
mov
adc
pusha
push
mov
es
rol
dec
xor
jno
out
adc
mov
cmps
xor
cmp
mov
ss
jle
test
cmp
pop
sbb
aaa
push
push
cmp
xchg
out
mov
adc
xor
sbb
dec
pop
fstp
ret
das
out
ret
call
popf
xchg
inc
dec
xor
push
add
pop
cmps
out
call
adc
dec
mov
cld
pop
aam
out
cmp
jbe
fld
xor
cmp
push
fisub
and
mov
jae
stos
jnp
mov
push
add
ins
das
inc
mov
inc
test
neg
dec
or
jb
in
dec
push
adc
mov
sti
ror
jl
cmc
push
pop
xor
mov
mov
fwait
bsf
rcr
bswap
lea
jmp
add
retf
xor
jno
retf
fwait
inc
mov
int
(bad)
and
stos
call
loop
cmp
cmps
jecxz
out
or
mov
aaa
mov
mov
pop
dec
and
pop
pop
mov
dec
shl
cwde
enter
(bad)
das
(bad)
jmp
lahf
mov
rol
fdiv
jno
push
add
jae
jbe
mov
xor
jmp
dec
push
repnz
cwde
push
push
int
xchg
bound
sbb
stos
div
cwde
or
jg
lods
and
cmp
sbb
lods
pop
(bad)
xchg
ret
jge
jp
jbe
adc
cdq
adc
cdq
mov
in
hlt
mov
aad
fcomp
lock
into
les
xor
cmp
jg
sub
mov
std
mov
(bad)
mov
and
sub
out
or
jp
loopne
daa
adc
mov
or
sbb
xor
cmp
bound
and
lods
push
pop
mov
adc
int3
or
shl
gs
jno
cmp
xor
xchg
sahf
movs
icebp
jle
mov
movs
dec
sbb
mov
int
add
fld
add
pop
jae
adc
(bad)
cmp
cmps
xor
push
ds
retf
imul
pop
pop
mov
ret
mov
sbb
inc
push
mov
pusha
jecxz
ds
adc
add
jmp
lea
jne
push
setle
pushfw
pop
call
cmps
out
pop
push
cmp
inc
or
cmp
jge
add
xchg
or
arpl
cmp
pop
push
add
and
cmps
push
cmp
jl
sub
sub
ret
sub
or
pop
fsub
jne
xor
ror
in
sahf
push
lock
or
jnp
jge
sti
stos
mov
lds
jl
leave
lock
pmuludq
push
xchg
mov
pusha
rol
add
retf
adc
add
retf
jns
cmps
jmp
or
jle
leave
cdq
ror
xchg
inc
aam
test
das
addr16
push
sbb
lods
xor
jno
xor
stos
out
cmps
lods
out
lock
mov
(bad)
add
ftst
addr16
push
push
clc
call
adc
lea
out
jge
cs
add
fcomp
lock
mov
(bad)
jg
push
pop
and
mov
sbb
es
aad
pusha
cmp
(bad)
jnp
or
adc
scas
adc
daa
xor
adc
mov
mov
pop
cmp
or
mov
rol
dec
jb
add
and
or
into
out
mov
push
adc
fwait
data16
xchg
std
lea
mov
(bad)
jge
lea
je
not
bswap
pusha
pushf
mov
push
call
mov
mov
lea
ja
pusha
pushf
lea
jb
clc
cmp
cmp
call
and
pusha
not
mov
bt
test
call
pop
pop
in
cwde
or
pop
test
test
rol
stc
mov
lods
int
or
lahf
mov
cmps
inc
jmp
outs
ficomp
jle
mov
cmp
jg
out
fdivrp
test
inc
add
call
mov
imul
xor
dec
lods
imul
pop
and
(bad)
cmps
add
call
mov
fild
fistp
loop
xchg
iret
bnd
das
jecxz
jne
and
inc
ins
lahf
mov
pop
or
cmp
sbb
imul
or
scas
out
cld
cmps
nop
shr
pusha
inc
or
mov
pop
sbb
add
stc
mov
mov
stos
lods
and
mov
lea
jae
call
dec
test
neg
stc
xor
call
inc
or
mov
mov
xchg
mov
ficom
leave
jnp
test
jge
inc
stos
mov
mov
or
xchg
mov
pop
xor
in
sbb
das
inc
jnp
(bad)
call
lds
xchg
mov
push
mov
loopne
int
jmp
push
pop
xchg
fbstp
pop
dec
push
imul
sub
lods
mov
popf
xchg
xor
push
dec
jb
xor
cmp
cmp
xchg
call
add
hlt
and
dec
push
dec
movs
imul
pop
data16
jno
add
jne
and
dec
aaa
test
cmp
call
mov
xor
not
call
cmp
mov
jmp
stos
pop
lods
fmul
cmp
jl
fsubr
ins
pop
or
fs
push
add
pop
ss
nop
dec
maskmovq
neg
out
lods
scas
and
imul
sar
pop
out
in
adc
sbb
les
ins
sahf
xchg
rcr
sahf
adc
xor
add
sbb
push
mov
shr
pop
adc
add
mov
add
dec
mov
push
movs
test
in
mov
enter
mov
or
inc
jge
sbb
movs
xchg
fcmovnb
inc
push
adc
push
sbb
repz
div
cdq
adc
(bad)
nop
cmp
jo
mov
pusha
lea
call
jmp
not
lea
lea
pusha
xchg
xchg
movzx
lea
je
bswap
movsx
lea
lea
jmp
pusha
mov
push
mov
call
btr
add
clc
mov
bt
test
pusha
test
cmp
mov
pushf
mov
jmp
pusha
push
mov
mov
pusha
call
jmp
cmp
mov
mov
sub
pushw
dec
push
pop
and
jle
push
pop
xchg
js
or
bound
xor
fstp
sbb
imul
cmovp
js
dec
or
add
pop
retf
dec
imul
(bad)
out
iret
lods
dec
fwait
push
(bad)
stos
mov
sub
fucomi
clc
xlat
out
mov
aas
retf
icebp
js
movs
loopne
in
sar
sub
jbe
mov
ins
(bad)
pop
or
ficomp
xchg
mov
pop
mov
mov
jnp
jg
add
sbb
mov
(bad)
push
push
fld
lock
adc
ins
jo
pop
push
out
out
iret
or
sub
mov
fstp
or
jno
clc
test
lahf
div
jmp
mov
jnp
lds
les
ret
mov
fistp
pop
inc
sbb
loope
sbb
pusha
sahf
rol
shl
mov
mov
setnp
jo
and
pop
aas
push
sbb
push
inc
mov
out
rcl
cmc
push
mov
(bad)
pop
in
rcr
imul
inc
and
sub
push
mov
and
out
fisub
fistp
dec
cs
dec
ret
xor
add
int3
call
jbe
movlps
cld
fadd
rcr
(bad)
pushf
and
in
cmps
xchg
repz
ficomp
pop
inc
les
dec
mov
pusha
mov
mov
pusha
push
ret
clc
push
mov
ror
stc
mov
cmp
clc
repnz
pushf
jmp
call
jmp
cmp
cmp
jmp
clc
out
call
mov
dec
inc
dec
pop
xor
inc
adc
js
dec
jo
push
fmul
inc
repz
cmps
mov
pop
pop
mov
fistp
dec
or
sub
movs
fdiv
push
dec
retf
rol
(bad)
cmp
outs
adc
or
or
retf
mov
inc
mov
sahf
add
shl
xchg
lods
jnp
fs
imul
mov
adc
aad
push
sbb
push
imul
push
push
js
test
mov
inc
xor
cmp
stc
out
fisub
nop
lock
jmp
cmps
int3
test
cmp
aas
pop
mov
gs
into
add
fisubr
pop
dec
sub
pop
pop
mov
and
mov
mov
out
xor
push
pusha
mov
bound
js
mov
ss
cmp
arpl
into
(bad)
ret
sbb
ja
(bad)
rcl
inc
push
sbb
lods
mov
scas
movs
mov
jmp
push
pop
adc
xchg
nop
sbb
mov
nop
pop
or
push
test
fs
jae
bt
stc
jmp
jmp
add
inc
gs
outs
fs
gs
imul
js
add
and
and
(bad)
jbe
aaa
pop
bt
push
cmc
push
cmp
pusha
call
out
shl
cmp
pop
adc
push
repz
adc
pusha
pop
cmp
mov
push
dec
and
jle
inc
add
(bad)
sbb
sbb
dec
inc
add
es
push
xchg
cmps
mov
rol
inc
add
ins
push
and
fst
jl
adc
jnp
(bad)
ds
arpl
loope
xchg
lea
pushf
adc
fwait
or
mov
pop
adc
in
cmp
mov
xor
(bad)
adc
sbb
call
cmps
lods
in
mov
outs
sub
dec
idiv
adc
fadd
imul
in
(bad)
mov
inc
cmp
bt
xchg
ror
mov
jmp
mov
pop
je
cmp
jb
pop
inc
push
mov
push
pop
mov
pusha
jae
xor
out
cmc
push
push
sahf
call
push
pop
inc
(bad)
pop
retf
push
cmp
repz
in
xor
fcomp
mov
cmp
jl
icebp
stos
shr
cdq
imul
xchg
das
paddw
pusha
loope
cmp
adc
add
mov
sbb
push
adc
inc
pop
iret
outs
xchg
jne
mov
jb
jnp
ror
(bad)
(bad)
mov
cmp
jo
mov
xchg
test
fcmovnbe
cwde
or
sbb
xor
dec
pop
adc
je
mov
out
loop
rcr
jge
shl
mov
and
jmp
jmp
sti
out
adc
pshufw
paddq
jbe
push
inc
add
push
js
enter
nop
jnp
pop
jl
(bad)
sbb
cld
pop
xchg
imul
cmps
mov
ds
jnp
div
lods
cmps
add
in
mov
pop
iret
dec
cmp
stos
xchg
sbb
dec
jcxz
cld
rcr
xchg
arpl
jle
arpl
push
ret
lea
cmp
stos
mov
icebp
ror
das
fchs
scas
lahf
cmps
jmp
test
into
pop
arpl
loopne
mov
in
lods
sub
push
push
in
out
mov
add
or
inc
inc
sar
repnz
xchg
add
jno
sbb
jmp
pop
dec
scas
push
sbb
pop
jae
inc
sar
jl
cmps
xchg
fcomp
scas
xchg
aad
rcl
adc
repz
inc
inc
push
add
arpl
inc
cmp
jge
cld
and
sub
xchg
stos
in
dec
mov
nop
xor
ror
mov
cmc
int3
cmp
add
xchg
imul
cs
or
sub
mov
xchg
loop
mov
in
test
jg
push
dec
add
push
adc
jno
js
es
dec
out
cdq
(bad)
sbb
aaa
fld
repz
jmp
fmul
sahf
fldenv
int
or
push
xor
(bad)
retf
les
cmp
in
mov
push
popa
jl
outs
nop
sub
xor
movq
ins
hlt
mov
adc
add
js
add
data16
xor
and
hlt
mov
lahf
jg
jno
jae
cmc
xchg
jg
div
jne
mov
push
sbb
(bad)
int3
sbb
rol
add
mov
cmp
sbb
scas
push
cld
cld
mov
xchg
test
out
lock
xlat
add
not
xchg
adc
repz
pop
cmp
xor
push
stos
mov
cmp
push
push
fistp
in
aaa
outs
jg
pop
sub
sbb
das
jmp
jmp
cmc
mov
or
pop
adc
les
xchg
sbb
cmp
xchg
or
pop
jl
lahf
cmps
mov
cmpxchg
ror
push
xchg
cwde
mov
cwde
movzx
lea
jmp
and
mov
and
retf
fadd
movs
xchg
inc
iret
lds
in
sti
xor
and
sbb
xor
jmp
scas
push
pop
movs
addr16
pop
popa
or
inc
push
je
add
pushf
or
sbb
pop
cmc
daa
aaa
pop
push
and
out
(bad)
jmp
loop
adc
imul
test
out
mov
or
pop
dec
clc
dec
pop
(bad)
fst
mov
mov
std
repnz
sbb
dec
hlt
(bad)
in
scas
adc
add
ret
add
fdivr
fisub
sub
push
inc
pusha
pusha
mov
push
lea
jmp
cmc
mov
jno
std
add
and
cmp
lock
sbb
xchg
imul
lock
mov
jne
ret
sub
jbe
fsubr
mov
adc
test
ror
sbb
inc
aas
push
mov
sbb
add
std
mov
adc
cmps
cwde
adc
sbb
mov
test
test
add
jno
push
dec
or
dec
das
bound
inc
mov
push
cmp
jle
ins
xchg
popa
stos
pop
jno
adc
into
add
rcr
lock
out
test
bound
clc
mov
sti
mov
pop
xchg
mov
pop
movs
addr16
outs
or
les
sahf
fwait
and
lods
clc
cmp
and
fwait
xchg
mov
icebp
sub
rcl
ret
adc
or
sbb
pop
adc
sub
mov
mov
push
sbb
dec
push
pusha
sub
scas
mov
scas
push
test
mov
(bad)
or
jns
mov
cmp
mov
out
mov
push
push
push
push
jne
cmc
or
repz
pop
sbb
mov
icebp
xor
xor
test
mov
sbb
ins
in
xor
or
pop
adc
neg
dec
arpl
dec
or
jo
ror
push
cmp
out
pop
cmps
add
sahf
shr
test
ins
retf
adc
(bad)
adc
aaa
fldenv
scas
(bad)
jnp
mov
mov
adc
ret
aaa
and
xchg
jmp
mov
daa
sub
mov
mov
mov
ss
es
sbb
call
mov
mov
pop
pushf
push
push
ret
lea
jae
pushf
mov
clc
cmp
jmp
push
call
call
mov
lea
jne
call
mov
mov
scas
push
push
push
test
ja
jne
dec
and
inc
cmp
sub
adc
inc
xchg
jne
dec
sbb
dec
sar
dec
push
jo
pop
daa
ins
(bad)
add
jg
mov
jge
(bad)
aam
sbb
adc
test
mov
or
ins
cmp
inc
loop
ins
sub
outs
sub
jge
(bad)
mov
xor
cmp
add
xchg
or
mov
pop
sbb
bound
mov
adc
add
sar
push
aad
lea
push
call
mov
movsx
pop
pushf
push
ret
pusha
bsr
movsx
mov
mov
stc
pusha
cmp
mov
mov
lea
jg
pusha
lea
jne
push
xor
neg
test
movsx
pop
mov
xor
add
shl
mov
clc
test
pusha
pusha
call
bt
cmp
pusha
cmc
xor
lea
pushf
push
lea
jp
inc
jmp
out
cld
or
add
adc
or
push
jmp
dec
stos
pop
or
ins
jcxz
ins
jl
(bad)
jp
mov
sbb
ss
(bad)
sbb
daa
xlat
mov
xchg
jne
push
mov
lods
cmps
mov
jecxz
test
sbb
mov
inc
and
adc
dec
add
addr16
(bad)
inc
adc
add
pop
sub
cmp
mov
or
xor
aas
cmp
pop
adc
nop
jne
ins
das
imul
js
jl
sub
cmc
or
(bad)
jns
sub
push
jns
and
xor
add
sti
fnstenv
div
retf
pop
adc
movs
inc
scas
and
xor
cmps
data16
sti
push
call
and
push
xor
add
sti
mov
jb
ss
push
fdivrp
mov
pushf
adc
cmp
mov
test
push
add
in
in
mov
mov
inc
sahf
mov
sub
dec
xchg
(bad)
or
sbb
out
push
cs
pop
and
mov
jnp
sbb
popa
mov
mov
dec
ja
adc
neg
out
out
sahf
scas
in
jmp
scas
adc
lahf
cdq
sar
es
ins
sahf
sbb
xor
out
test
xor
xor
ror
movs
mov
das
cmps
push
mov
in
movs
daa
fs
xor
mov
mov
add
jmp
ins
fwait
movs
in
popf
pop
push
push
test
aad
xchg
fcom
xchg
ret
lea
xchg
aam
inc
outs
aas
mov
or
sub
sti
xchg
sub
mov
pop
(bad)
mov
sbb
cmps
sub
in
xor
fild
jge
outs
jae
or
scas
or
jno
and
gs
jnp
jg
pop
pop
dec
pop
mov
adc
inc
jl
in
push
outs
aas
mov
(bad)
shr
gs
sub
aam
sub
ss
pop
(bad)
mov
mov
dec
sub
dec
cmc
aaa
dec
and
shl
imul
ins
jle
movs
sub
push
jmp
jge
enter
les
out
fist
inc
lods
das
push
(bad)
push
test
add
fisttp
sub
imul
jbe
icebp
icebp
ficom
adc
pop
mov
dec
in
out
cmp
aam
sbb
xor
mov
(bad)
int
js
and
ja
pop
pop
in
cwde
sti
xlat
out
ror
data16
mov
fs
jne
neg
rcl
mov
pusha
pushf
or
pushf
pushf
mov
lea
je
movsx
lea
mov
bswap
movzx
pusha
pop
lea
not
movsx
mov
pushf
pusha
lea
jnp
call
pushf
lea
jne
seta
pusha
call
inc
pusha
push
mov
lea
jmp
call
call
cmp
push
dec
xchg
push
outs
mov
push
and
fldcw
inc
push
iret
cmp
pop
push
jg
cmp
push
lods
push
arpl
adc
pop
adc
not
fimul
pop
mov
push
arpl
mov
(bad)
les
aaa
jns
popa
movs
or
stos
jmp
inc
or
dec
jge
shl
enter
inc
(bad)
push
int3
les
dec
mov
and
push
pop
sbb
fbstp
jno
jns
add
out
(bad)
push
retf
retf
mov
xor
mov
push
or
sub
cmps
xchg
sbb
xchg
test
ss
cmp
pop
jbe
call
or
rcr
outs
push
cmp
jp
ror
xchg
xlat
fwait
dec
mov
mov
mov
sbb
add
test
sub
xlat
pop
(bad)
lods
stos
push
nop
arpl
lods
(bad)
fnsave
dec
aam
mov
sbb
out
rol
add
loop
stos
je
ss
sub
(bad)
xchg
rcr
lahf
scas
out
fistp
mov
ins
popa
retf
jb
cmp
inc
dec
or
inc
cmc
inc
mov
inc
xor
jb
pushf
inc
rcl
in
retf
xor
cmps
ins
dec
xchg
inc
adc
bound
leave
neg
cdq
mov
clc
mov
aaa
ins
pop
pop
jle
ja
out
sbb
jno
jmp
movs
push
mov
iret
retf
mov
ret
mov
mov
pop
outs
scas
lahf
push
aad
mov
sahf
shr
scas
dec
js
sbb
pop
test
in
frstor
popf
mov
mov
and
test
cmp
jl
div
pop
retf
inc
inc
gs
dec
loope
mov
xor
jo
jo
jns
ret
loopne
mov
or
add
pop
mov
xchg
add
cwde
test
mov
ss
xor
sbb
xchg
(bad)
mov
xchg
aam
scas
xchg
push
mov
inc
aam
dec
push
lods
jb
mov
fmul
icebp
mov
sub
cmp
(bad)
ret
(bad)
out
mov
sub
daa
shl
fimul
lahf
lods
stos
dec
lds
pop
push
stos
jmp
loope
adc
cli
or
add
jge
xchg
jmp
add
movs
int
xchg
cmp
hlt
add
out
in
pop
ins
sub
cmps
stos
jecxz
jnp
in
leave
sub
and
xchg
adc
out
lahf
dec
clc
repnz
ftst
xor
pop
mov
(bad)
pop
mov
call
and
pop
push
xchg
mov
mov
shl
rcl
mov
jmp
jge
mov
push
pop
xor
lods
rcl
popa
das
pop
inc
icebp
adc
adc
daa
stos
jmp
movs
jle
test
outs
aas
stos
jmp
rol
lock
and
fnstsw
sub
es
push
jp
je
int
jmp
xor
sub
adc
jle
ja
das
and
xchg
dec
in
icebp
inc
mov
adc
idiv
lods
out
adc
mov
ins
addr16
pop
stc
dec
sahf
xor
and
(bad)
sub
or
xor
inc
xchg
es
(bad)
(bad)
(bad)
mov
scas
outs
sub
das
(bad)
xor
lods
es
aam
outs
(bad)
jle
add
rcr
ds
xchg
outs
lock
(bad)
(bad)
lods
xchg
and
and
iret
in
data16
test
aad
in
ds
stos
sub
aaa
outs
repz
inc
inc
call
jp
out
ret
jp
pop
jo
and
pop
aam
loop
add
and
punpckldq
retf
mov
adc
xor
lods
inc
movs
mov
cmp
pop
sub
or
jp
retf
adc
mov
shl
(bad)
ins
mov
sub
rol
push
in
mov
outs
in
mov
shl
out
pop
cmp
jg
mov
dec
push
jae
jle
mov
mov
cmp
into
out
pop
jmp
mov
cmps
out
leave
daa
call
or
cmp
es
xchg
aas
in
ins
out
xor
fmul
cs
loopne
scas
inc
sti
push
lock
sbb
(bad)
ds
push
gs
(bad)
aas
pushf
xor
cmps
sahf
fild
pop
lahf
das
add
sbb
test
stos
shr
push
out
jmp
scas
gs
inc
retf
mov
test
fs
mov
push
xor
scas
stos
imul
ret
inc
adc
sbb
in
pusha
jo
mov
xor
or
bound
imul
scas
fs
cli
cs
and
(bad)
pop
stos
test
in
xor
sub
jp
sahf
icebp
xor
jmp
and
gs
test
test
mov
xor
test
test
movs
bound
and
test
pop
jp
test
jl
in
dec
dec
push
dec
xchg
fsubr
xor
adc
sub
mov
je
pop
js
push
xchg
mov
sub
add
fiadd
adc
jl
(bad)
jecxz
out
es
sbb
pop
xor
pop
shl
mov
cmp
or
mov
jmp
lds
mov
pop
fmul
data16
cld
test
outs
iret
sbb
adc
mov
and
fs
cmp
test
adc
retf
scas
push
sub
movs
iret
ror
and
stos
mov
push
mov
pushf
dec
ins
dec
std
fs
jle
xchg
sub
(bad)
push
xchg
add
mov
retf
add
mov
(bad)
(bad)
mov
dec
mov
ins
cwde
mov
sub
sbb
adc
dec
or
das
and
es
sub
pop
mov
aam
xchg
test
out
mov
xchg
lods
jecxz
jmp
mov
sbb
pusha
cmp
jle
rcr
out
test
ret
jl
adc
aaa
sbb
push
pop
mov
and
or
enter
push
xor
sub
sub
jecxz
push
lahf
sbb
mov
(bad)
aad
fisub
jbe
inc
fsub
outs
add
pop
and
shl
inc
xor
jl
push
xor
scas
mov
cdq
fiadd
stos
mov
or
dec
icebp
cmp
mov
adc
repnz
dec
ret
nop
and
neg
pop
jge
mov
lods
aaa
repz
and
or
xor
(bad)
mov
cmp
(bad)
sub
test
fimul
mov
push
into
movs
push
inc
pop
xor
es
sub
sub
repnz
push
xor
jo
or
stos
mov
sub
cli
rcr
dec
stos
push
fidivr
scas
or
push
into
out
cmp
dec
adc
(bad)
adc
xor
mov
cmp
dec
mov
leave
repnz
jge
jp
and
icebp
adc
push
lods
mov
sbb
outs
inc
punpckldq
xchg
scas
and
sub
mov
adc
mov
retf
cld
in
add
call
out
adc
pop
and
jmp
mov
out
es
mov
xor
nop
adc
sahf
inc
dec
or
xor
rcl
jnp
dec
mov
or
xchg
mul
sbb
test
jns
add
shr
ret
mov
(bad)
pop
pop
sbb
sub
adc
and
movs
jp
sbb
nop
sub
(bad)
cli
mov
(bad)
lock
cmp
ins
sub
leave
stos
sahf
ins
aaa
jle
stos
add
pop
inc
mov
sub
(bad)
into
xchg
mov
test
das
ds
dec
mov
and
xor
icebp
dec
sub
shl
mov
stos
(bad)
xor
mov
and
lock
scas
xor
add
inc
mov
jbe
mov
sub
scas
xchg
das
pop
and
sbb
cmp
mov
jbe
push
jle
gs
jnp
xchg
mov
sbb
test
jecxz
bound
pop
out
dec
inc
and
sbb
rcr
inc
or
outs
sbb
xor
cmp
jle
fadd
out
xor
icebp
mov
push
daa
xchg
xor
jmp
and
movs
mov
nop
jl
adc
xor
(bad)
pop
dec
sub
cmp
sub
dec
sub
cbw
shr
xchg
icebp
push
pop
xor
pop
add
sub
pop
xor
adc
lock
pop
inc
ret
aam
imul
mov
inc
sub
(bad)
call
jmp
or
jp
cli
push
mov
mov
mov
jmp
je
mov
sbb
mov
popa
push
cs
push
xor
outs
scas
adc
sbb
loopne
adc
test
(bad)
fadd
mov
sub
outs
sub
bound
pop
and
push
jl
adc
sub
inc
jo
ins
pushf
fidivr
movs
xor
leave
loopne
push
sub
movs
aad
leave
(bad)
xchg
shl
xchg
movs
or
daa
push
cmc
cld
xchg
jle
scas
push
call
enter
mov
les
add
das
inc
(bad)
push
push
in
sub
fdivr
leave
loopne
jnp
xchg
mov
cdq
fisttp
fcom
sub
inc
movs
xchg
inc
sub
cdq
hlt
sub
jne
cmc
fucomp
jae
push
pusha
out
out
popa
sub
repnz
dec
es
sub
aaa
popa
sub
sub
sub
jne
retf
sub
mov
shl
mov
xor
sub
mov
daa
xor
and
aas
hlt
sbb
dec
sahf
adc
and
inc
aaa
cmp
cmp
pop
es
in
xor
clc
sbb
in
push
inc
mov
data16
leave
dec
out
mov
out
ins
and
stos
(bad)
ss
xor
xor
sar
icebp
(bad)
jle
(bad)
retf
push
cli
mov
int
lock
(bad)
sbb
movs
out
and
xor
mov
out
sbb
push
adc
mov
mov
ret
add
outs
dec
dec
(bad)
or
sub
ja
outs
cmc
or
pop
push
mov
leave
cld
pop
sub
data16
(bad)
shr
pop
call
call
xor
fidivr
or
sar
push
cli
xor
ins
ror
add
jno
mov
inc
dec
lahf
mov
icebp
mov
daa
mov
sub
dec
mov
(bad)
push
sub
fiadd
pop
jmp
cmp
arpl
add
imul
leave
or
dec
rol
les
into
lea
leave
jns
adc
lock
pop
repz
mov
leave
pop
arpl
mov
cmps
neg
icebp
dec
pusha
sub
add
aad
push
out
sub
adc
in
dec
dec
sbb
xor
xchg
mov
test
add
idiv
repnz
iret
aam
xor
pop
ret
sub
jne
lods
and
and
cmc
cmp
xor
xor
sub
gs
clc
std
lea
pop
xor
sub
daa
loope
loope
loop
sub
push
daa
sub
aad
xor
test
arpl
rol
and
sub
iret
push
and
mov
das
psrlq
jle
add
mov
(bad)
ds
(bad)
leave
add
cld
xchg
sbb
or
sub
les
mov
pop
sub
retf
ds
loopne
lahf
fidivr
pop
enter
out
lock
lds
ja
jge
ret
cli
outs
xor
not
jmp
and
or
mov
xchg
shr
xor
jne
dec
stos
adc
pop
add
dec
sub
fidiv
jnp
mov
(bad)
aaa
icebp
enter
rol
sub
sbb
movs
jle
dec
mov
and
lock
(bad)
push
sahf
retf
sbb
cwde
xor
xlat
sar
mov
out
xor
retf
jnp
pop
mov
ja
fcom
xchg
dec
jge
mov
jle
cmp
sub
jbe
sahf
jecxz
mov
xlat
out
test
xchg
ret
sub
dec
jmp
outs
jo
pop
ds
(bad)
xchg
je
out
jnp
mov
jmp
jbe
(bad)
test
mov
ja
daa
sahf
cmp
jb
mov
pop
sub
mov
mov
and
stos
sbb
jle
(bad)
nop
fs
xchg
jnp
ja
jne
lahf
js
dec
das
aam
xchg
jl
fist
out
popf
xlat
scas
mov
daa
outs
cld
xor
(bad)
std
push
fcom
leave
aaa
add
lods
pop
mov
pop
or
xor
sub
(bad)
out
cwde
push
leave
or
pop
ds
lock
jne
(bad)
aad
leave
lea
out
loope
scas
inc
cmc
hlt
sub
push
int
aam
das
push
mov
rol
sub
push
(bad)
sub
addr16
mov
jl
stc
dec
inc
mov
mov
leave
sub
sar
fld
loopne
and
test
leave
xchg
pop
sub
iret
push
leave
pop
arpl
das
adc
stc
cmp
push
jae
fstp
lahf
dec
stos
and
out
test
enter
retf
icebp
into
(bad)
lods
cmp
lock
sub
retf
push
jmp
pop
ret
and
ja
jmp
icebp
retf
ds
into
sub
push
das
aam
push
aam
xlat
and
jecxz
fidiv
stos
loope
(bad)
out
outs
mov
sub
mov
push
xor
cmp
or
(bad)
das
adc
scas
out
jmp
mov
xor
sbb
cwde
adc
adc
adc
adc
sub
icebp
(bad)
ds
push
repnz
mov
js
pop
sub
aad
rol
iret
xchg
jl
loope
in
ins
and
lods
out
pop
dec
(bad)
push
clc
in
inc
loop
sub
fs
sub
adc
push
pop
push
pop
inc
fisubr
pop
mul
(bad)
push
int
sub
sub
cmp
or
ret
ins
cmp
outs
pop
xor
stos
adc
xor
sub
sub
xchg
dec
jnp
cmps
stos
mov
not
movs
gs
je
push
xor
xor
adc
pop
jp
sub
stos
cdq
adc
xor
mov
fidivr
in
inc
pop
xor
sub
and
and
adc
xchg
sub
into
xor
pop
cld
adc
sub
cmp
daa
leave
xor
stos
dec
pop
aad
stos
leave
mov
or
or
jp
and
leave
ins
jae
and
das
add
jmp
popa
mov
test
push
dec
xor
aad
(bad)
or
cmp
sbb
or
jmp
aad
jno
cs
adc
sub
add
das
mov
jp
push
or
cmc
stc
(bad)
xor
ins
test
adc
outs
push
scas
je
imul
push
mov
dec
adc
jle
movs
out
aam
xor
out
push
jne
push
lock
dec
(bad)
sub
xor
adc
mov
call
ss
jecxz
push
and
shr
push
xor
xlat
movs
scas
dec
cmp
test
fld
data16
mov
dec
cli
adc
mov
cmps
cmp
clc
aam
adc
ins
mov
repz
sbb
add
xchg
adc
adc
xor
loope
icebp
push
lods
dec
xchg
mov
ins
inc
shr
mov
adc
cmp
jo
in
(bad)
adc
les
leave
jecxz
ss
data16
or
stos
outs
cmp
or
das
dec
mov
or
xor
and
bound
out
rcl
jae
or
test
pop
loope
retf
or
xor
shr
movs
jns
lods
test
xor
jmp
sub
stc
xor
jmp
shr
leave
sub
or
addr16
gs
out
dec
sub
or
add
imul
jl
loop
aas
and
int3
xor
fsubr
xor
stos
and
(bad)
jp
out
inc
inc
or
jns
aas
pop
fidiv
cmp
jle
mov
jns
jmp
test
movs
ja
ret
imul
inc
pop
and
(bad)
clc
push
test
repnz
or
cmp
dec
dec
ficom
out
jge
test
ret
dec
scas
sub
push
outs
aaa
jo
into
adc
pop
or
sub
ret
adc
sti
jecxz
mov
das
gs
jbe
inc
pop
ret
lods
pop
pushf
(bad)
mov
imul
jle
xor
aam
leave
je
in
(bad)
or
or
jns
popa
xor
stc
mov
jge
sti
sub
(bad)
mov
and
xor
push
cli
push
call
jno
lods
xchg
push
loopne
xchg
mov
xor
xor
dec
xchg
inc
sbb
in
jae
add
inc
mov
lea
push
inc
les
jne
in
icebp
(bad)
mov
ds
(bad)
xor
pop
push
out
leave
in
std
adc
and
inc
sub
sbb
pop
mov
mov
push
jo
test
into
mov
cdq
mov
retf
scas
ret
sub
sub
test
mov
into
and
in
sub
jle
mov
add
scas
push
jo
push
retf
sub
sub
inc
mov
pop
mov
das
pop
adc
xor
push
cmp
cmp
lods
push
aam
mov
data16
mov
sbb
(bad)
call
pop
lods
test
je
xchg
inc
aam
jp
es
and
sub
sbb
xor
inc
ret
mov
test
pusha
adc
push
ds
aas
sub
jge
sbb
(bad)
out
dec
out
add
mov
sbb
xchg
data16
mov
shl
loopne
xchg
icebp
xor
stc
leave
(bad)
test
sbb
aad
icebp
call
daa
adc
out
ret
adc
dec
retf
bound
int
bnd
cmc
xor
int
in
inc
mov
dec
add
int
push
push
or
and
or
fnsave
xor
ret
cmp
repz
xor
xchg
adc
shl
cmp
imul
sub
mov
push
add
mov
sub
inc
in
fsubr
in
push
inc
mov
and
push
mov
xor
imul
mov
jmp
icebp
std
test
stos
pop
or
jmp
scas
ja
test
inc
ins
ds
aaa
sub
add
test
(bad)
out
btr
push
jne
fimul
jne
push
leave
mov
lods
push
pop
jp
out
xor
push
call
jbe
dec
sub
test
jmp
sub
adc
outs
clc
push
sbb
hlt
dec
and
add
lds
pop
mov
je
inc
dec
mov
cmp
cmp
ret
ins
adc
cmps
fs
push
pop
mov
es
cmp
call
or
ds
aam
call
scas
cmp
div
sbb
outs
sub
dec
jno
xchg
and
in
push
mov
movs
ins
(bad)
outs
pop
cmp
sbb
sub
jmp
cmp
pusha
or
pop
adc
mov
cmps
aam
mov
xchg
adc
jge
dec
shr
jnp
mov
test
mov
xchg
int
xchg
cmps
xor
outs
adc
std
mov
(bad)
jl
xor
push
dec
icebp
jbe
adc
xor
inc
xor
pop
and
xor
mov
and
rcl
cmp
xlat
nop
mov
sub
dec
fimul
mov
inc
pop
jno
ret
lods
(bad)
(bad)
iret
aad
jns
pop
xchg
xchg
leave
pop
inc
sar
ds
xor
cmp
ret
ins
fst
aam
repz
push
fwait
add
or
cmps
mov
inc
les
(bad)
jmp
es
lods
ds
jnp
xor
mov
call
aas
pushf
jmp
mov
sub
cld
imul
ds
es
sub
out
ror
cmp
fwait
add
cmp
leave
adc
sub
or
mov
jmp
sub
test
adc
jmp
sub
cmp
and
or
daa
aam
addr16
cmp
and
out
sub
fdiv
sub
stos
daa
leave
push
ret
xor
cld
sub
cvtps2pd
test
scas
repnz
in
cmp
or
es
ins
ss
mov
call
jns
sub
mov
inc
loope
mov
jo
or
sahf
jne
test
jl
icebp
mov
jmp
or
ret
mov
dec
cld
shr
xor
mov
shl
test
dec
repnz
dec
call
test
and
aad
mov
mov
pop
js
imul
inc
icebp
aad
outs
iret
adc
pop
(bad)
(bad)
aas
push
(bad)
cli
pusha
push
paddq
push
jb
(bad)
aas
sbb
shr
dec
mov
mov
push
xlat
out
and
icebp
fidiv
stos
rcl
loop
es
or
lea
or
add
xor
jmp
push
into
xchg
jno
and
movs
cmp
dec
inc
and
xchg
in
daa
and
xor
mov
out
je
and
movs
imul
lds
mov
mov
mov
or
(bad)
adc
dec
push
sub
sar
rol
mov
pop
test
(bad)
cwde
push
mov
push
mov
push
test
mov
jecxz
sub
inc
ds
frstor
push
cmp
in
imul
jae
jge
add
push
sbb
lods
or
and
loope
mov
dec
mov
mov
stos
retf
retf
fidivr
ss
outs
sub
repnz
outs
into
or
and
or
or
push
jge
sar
or
call
jno
jl
mov
jb
mov
mov
call
jge
adc
leave
rol
test
ds
test
es
test
mov
or
out
and
sub
jp
call
ds
mov
pop
mov
outs
je
push
mov
sub
push
mov
mov
push
sbb
test
sbb
add
dec
adc
cmp
outs
push
popf
push
inc
sar
push
fs
stos
arpl
aaa
nop
and
sbb
and
add
push
jmp
and
adc
jp
es
xor
(bad)
in
sbb
pop
ds
dec
push
jae
jnp
fimul
popf
aam
vmwrite
and
inc
cmp
pusha
lods
push
push
sbb
mov
sub
aas
stos
sbb
fwait
xchg
and
bound
(bad)
or
mov
(bad)
cwde
das
jb
and
popa
jp
int3
sbb
fs
cmps
add
xor
(bad)
sub
jmp
outs
icebp
sbb
mov
dec
in
inc
xchg
sbb
sti
fld
loopne
dec
sbb
jb
lahf
cmp
cmp
mov
xchg
cmc
(bad)
mov
in
lahf
fild
jnp
scas
xor
push
loopne
mov
pusha
cmc
imul
mov
dec
push
mov
push
ja
dec
mov
sbb
ins
push
jnp
sub
test
sub
jno
inc
adc
cmp
scas
and
sar
imul
push
inc
sub
clc
xor
xor
dec
mov
mov
mov
outs
inc
repz
xor
mov
test
mov
jge
and
jg
cmp
inc
aad
inc
adc
cwde
lods
stos
adc
mov
(bad)
call
imul
pop
sub
mov
and
pop
jmp
cli
jno
dec
mov
in
adc
or
cmp
pop
cmp
jbe
add
mov
jo
icebp
xchg
mov
add
outs
adc
sub
sub
les
inc
dec
sub
es
ss
sar
xor
sbb
cmp
xor
push
sub
aas
sar
and
movs
cmc
jbe
xor
add
add
in
sbb
test
jb
outs
jg
xlat
movs
sbb
cmp
mov
push
mov
xor
pop
pop
sbb
push
mov
lods
(bad)
fsubr
sub
pop
enter
lea
sub
push
mov
cmps
inc
sub
push
pusha
fidivr
test
les
clc
stos
inc
push
ror
fisttp
ss
pushf
out
sub
enter
add
outs
jle
mov
push
data16
bound
sub
jb
test
pop
movs
sahf
push
fwait
inc
cmc
jle
fisubr
pop
ret
imul
and
add
pop
add
sub
inc
and
or
sbb
mov
icebp
xor
scas
bound
sub
ds
sub
es
pop
cmp
push
cmps
fst
pop
sub
jb
or
sete
jl
ins
fwait
lods
retf
(bad)
mov
and
stos
and
(bad)
dec
js
sub
sar
push
and
lock
aas
stos
fmul
adc
push
mov
push
sub
jbe
adc
pop
pusha
lock
add
sbb
jae
mov
test
jle
imul
ins
mov
push
addr16
daa
pop
xor
icebp
aaa
mov
es
pop
sbb
xor
add
and
addr16
sbb
imul
arpl
push
or
jmp
repz
or
mov
sahf
pop
xor
sub
sub
adc
cmp
stos
or
jnp
test
mov
sub
pop
cmp
sub
inc
(bad)
std
mov
sub
ins
and
(bad)
sub
ret
adc
inc
xor
neg
xchg
repz
and
jmp
outs
adc
adc
(bad)
inc
add
or
sahf
pop
fiadd
dec
(bad)
sbb
test
and
jmp
xchg
jb
and
sub
sbb
shr
push
adc
jle
(bad)
aad
sbb
pop
jge
imul
dec
mov
and
sub
or
sub
cmp
sbb
nop
sbb
sbb
test
pop
xor
jge
aas
lods
(bad)
inc
or
cmp
test
and
cmp
or
sti
leave
mov
lods
and
mov
sahf
add
or
or
mov
adc
loope
sbb
test
scas
mov
xor
rcl
pop
enter
(bad)
cmc
imul
imul
stos
in
es
lock
stos
pusha
leave
mov
imul
repz
cmp
shl
sub
int3
and
pop
les
mov
push
add
push
(bad)
push
mul
xchg
dec
and
sub
int
and
sbb
push
aad
xchg
lods
sbb
aam
movs
es
outs
imul
inc
repz
xchg
sub
fwait
loop
jo
sub
xchg
sbb
jbe
jl
or
ins
je
sub
cmp
jl
(bad)
sbb
stos
gs
xor
xchg
div
ret
mov
inc
arpl
iret
sbb
jmp
ret
dec
retf
ja
and
adc
(bad)
mov
push
cmp
imul
cdq
cmps
shl
fild
stos
or
mov
push
jns
fistp
into
outs
mov
mov
pop
repnz
add
push
cmp
push
sub
adc
ins
fcom
push
xchg
fnstenv
je
push
jnp
xchg
sub
enter
pop
xor
inc
enter
mov
cmp
xor
adc
mov
into
inc
ds
sbb
lock
sub
push
ds
sub
and
out
pop
outs
ret
jp
cmp
and
popa
cmps
push
scas
pusha
cmp
stos
mov
mov
rcr
das
mov
inc
lods
xor
push
cmp
call
(bad)
ins
xor
mul
xor
adc
jo
push
mov
mov
out
pop
lahf
and
add
into
mov
(bad)
rcr
adc
or
(bad)
jl
jns
test
pop
inc
pop
add
sbb
pop
adc
inc
push
sahf
add
je
sbb
pop
js
xchg
mov
fcomi
fstp
sahf
push
movs
mov
adc
sahf
cmp
nop
and
inc
push
outs
xor
adc
enter
fdiv
out
scas
and
dec
out
mul
(bad)
mov
jo
sbb
push
cli
xor
jle
push
mov
mov
push
pop
push
mov
movs
or
and
sub
mov
scas
(bad)
cmps
pop
jge
add
and
mov
sub
aaa
xor
pcmpgtw
shr
xchg
xchg
mov
xor
mov
xor
fistp
jo
xchg
sbb
adc
movs
dec
mov
sub
push
sar
ds
cmps
inc
stos
cli
test
cmps
mov
inc
mov
ds
addr16
jno
dec
out
nop
mov
or
sbb
imul
push
ja
cmp
(bad)
icebp
or
inc
sbb
lea
xchg
mov
lahf
add
inc
cmc
sbb
sub
fidivr
ins
adc
cmp
push
popa
jle
fidiv
adc
inc
lea
out
movs
ins
inc
mov
mov
gs
fwait
gs
fwait
icebp
inc
ja
pop
jb
js
pop
pop
xor
jne
dec
fisub
jmp
mov
jle
xor
mov
scas
(bad)
pop
movs
aaa
pop
xchg
mov
cmp
repz
fbld
mov
rol
sbb
inc
mov
sub
sub
icebp
or
jp
mov
je
jnp
jp
mov
sar
aas
add
jle
cmp
das
and
outs
pop
daa
xor
lock
jae
cmp
push
xor
data16
(bad)
dec
mov
adc
pop
push
mov
in
or
or
push
stos
and
push
push
push
and
cmp
imul
sbb
ins
jl
sbb
dec
out
icebp
or
sub
daa
ja
or
loope
and
jb
push
sbb
das
addr16
or
gs
xchg
xor
sti
test
int3
mov
retf
rol
jl
pop
in
(bad)
or
imul
xor
mov
jns
sbb
cmp
add
ins
adc
sub
adc
or
pop
push
es
jmp
loopne
xor
mov
cli
stos
and
sub
ins
sbb
sub
sbb
mov
inc
push
shl
in
mov
mov
pop
aad
mov
ss
jle
inc
in
push
fs
xor
mov
sub
mov
(bad)
cli
xchg
(bad)
sub
dec
mov
fcmovnu
scas
nop
sti
inc
mov
ficomp
or
(bad)
jmp
and
mov
jecxz
mov
add
and
imul
jmp
inc
mov
or
inc
pop
adc
or
cwde
add
cmp
xchg
mov
cmp
cld
sti
loope
pop
iret
retf
call
repz
push
inc
bound
sbb
fcom
mov
scas
mov
outs
push
iret
mov
or
cmp
push
push
jmp
jbe
cli
out
jmp
movs
loopne
fs
adc
arpl
push
es
in
mov
cmp
add
dec
lock
xor
push
aam
dec
ud1
jle
dec
jl
jne
dec
fwait
aas
or
inc
aas
adc
mov
je
inc
or
(bad)
cmp
jg
shl
retf
mov
mov
pop
jge
and
out
inc
jmp
adc
test
push
data16
and
in
ror
xchg
or
je
sbb
mov
sub
out
adc
mov
mov
jno
add
jle
fld
or
imul
adc
data16
lods
dec
jle
bound
cmp
arpl
push
mov
inc
fadd
lea
inc
(bad)
jp
mov
bound
mov
mov
fsubr
adc
sub
cmp
rcr
ret
cmp
(bad)
or
rcl
ins
stos
push
dec
inc
stos
mov
add
out
jo
test
inc
arpl
mov
mov
jp
pop
push
das
movs
(bad)
ss
rol
cmps
ret
dec
lods
scas
xor
cmps
test
sub
loop
xor
pop
retf
cmp
push
adc
mov
imul
adc
pop
fdivr
cmp
icebp
data16
xor
push
xchg
push
jmp
adc
hlt
f2xm1
lods
loop
test
push
sub
sub
fnsave
push
jnp
dec
cmp
icebp
and
movs
sub
add
cmp
push
inc
daa
(bad)
and
mov
into
sbb
add
pop
icebp
pusha
pop
movs
and
es
cmp
add
dec
jmp
xchg
ret
inc
mov
pop
pop
jno
data16
dec
fisub
jne
clc
in
nop
ins
adc
pcmpgtb
stos
(bad)
ror
movs
push
mov
adc
ds
or
xlat
les
test
xor
lea
inc
mov
sub
sbb
leave
mov
ins
out
jmp
cmp
cmp
dec
or
sub
pop
mov
ret
cmp
pop
pop
cmp
and
mov
and
adc
adc
ins
rcr
add
sub
push
or
sub
aaa
ins
sub
cmp
sub
in
in
pop
js
cmp
outs
leave
data16
fisubr
jmp
cmp
mov
lock
dec
push
sub
ret
aad
adc
dec
adc
inc
repz
(bad)
movs
lock
(bad)
cmps
add
loop
pop
cmp
cli
fldcw
pop
sbb
jle
aaa
data16
fmul
xchg
push
push
adc
push
test
cmp
aad
test
cmc
out
sar
ds
sub
jnp
lds
movs
push
jecxz
push
inc
pusha
sub
sbb
cmp
imul
imul
test
xlat
hlt
xor
push
or
clc
ret
xor
lock
or
bound
lods
out
lock
jge
movs
mov
ss
sbb
cmp
(bad)
setno
add
sar
jno
sar
and
and
scas
fidivr
test
cmp
jmp
adc
or
cmp
fldcw
add
lds
ds
push
and
and
push
stos
inc
inc
sub
and
xor
xor
or
arpl
or
loopne
adc
ins
das
dec
or
push
ret
and
(bad)
rcr
test
push
hlt
xor
jne
(bad)
mov
sub
cdq
xchg
or
jmp
xchg
test
cdq
pop
adc
test
push
dec
test
push
(bad)
xor
(bad)
mov
pop
les
test
inc
(bad)
(bad)
push
(bad)
outs
(bad)
test
(bad)
outs
lock
test
ds
inc
cmp
mov
mov
ds
retf
ret
cmp
jbe
stos
aam
inc
mov
movs
lock
movs
out
out
sub
(bad)
idiv
xor
dec
bound
or
xor
ss
ss
push
out
and
xor
mov
repnz
adc
jo
(bad)
ds
loop
dec
mov
adc
push
lods
jmp
xchg
and
(bad)
loope
sbb
add
lods
push
mov
retf
and
enter
rcr
retf
popf
and
mov
scas
lods
and
pop
or
xor
lock
mov
inc
mov
mov
fnstenv
push
jae
cmp
sbb
rcr
cmps
push
jmp
jne
into
scas
or
stc
leave
mov
sahf
fsubr
xor
sub
push
inc
mov
stos
adc
jl
adc
or
jge
xchg
fs
pop
mov
fs
imul
xor
or
mov
or
pusha
jae
out
outs
scas
imul
loope
sub
mov
mov
sub
fs
in
mov
shl
add
out
cmp
test
mov
jl
ins
jno
ja
fadd
cmp
aad
adc
popf
shl
sub
pusha
les
pop
aas
adc
sar
inc
adc
or
mov
push
ins
rcr
pop
jg
mov
inc
push
xchg
cmp
jnp
dec
dec
addr16
sub
mov
(bad)
fist
inc
sub
pop
xor
in
sub
inc
add
pop
or
inc
mov
loopne
ja
jo
mov
mov
adc
adc
cmp
fadd
cmp
sub
and
pop
stos
mov
jmp
add
cmp
cmps
inc
push
push
cmps
inc
and
sbb
or
or
adc
in
or
jo
nop
xor
inc
or
mov
pop
mov
and
sar
jmp
and
stos
shr
mov
lds
jae
sbb
mov
das
sbb
xchg
xor
mov
jnp
xchg
push
or
cld
sub
xchg
jo
push
pop
cmp
aaa
ror
push
sar
pop
add
or
xchg
pop
xchg
sub
cmp
in
ds
stos
ror
or
and
pop
dec
push
pop
loop
jmp
jmp
movs
jnp
scas
and
xchg
inc
ja
xchg
add
(bad)
push
sbb
inc
retf
in
jle
sub
test
sub
add
in
jmp
lea
bound
pop
adc
xor
jno
add
mov
or
push
inc
or
dec
add
add
sub
cmp
icebp
sub
add
mov
stos
aas
xor
cmps
mov
ss
ror
mov
pop
dec
mov
add
or
bound
ret
cmps
inc
cmp
out
mov
sub
and
fst
or
sahf
jg
jmp
sub
sub
and
mov
mul
pop
rcr
ins
adc
ss
pop
dec
push
add
aas
ret
sub
mov
sub
jp
mov
stos
pop
lock
nop
jge
cmp
test
jle
jno
push
pop
sub
loope
pop
(bad)
loope
jmp
or
call
ins
(bad)
pop
les
stos
cld
aaa
mov
rcr
xor
loopne
add
iret
movs
xchg
mov
push
sahf
aaa
xor
adc
pop
dec
xchg
mov
stc
cmp
cli
sub
test
aas
ss
stos
outs
cmp
jp
movs
addr16
xchg
sub
push
lods
or
mov
jmp
in
sub
sbb
mov
sub
sub
fisttp
mov
sub
movs
or
jo
add
xlat
sub
je
stos
or
ficom
test
xchg
stos
mov
or
pop
xor
dec
repnz
cmp
out
cld
(bad)
inc
cmp
pusha
cmp
add
push
and
jns
dec
cs
lods
jle
fs
sub
sbb
push
adc
sub
adc
push
ja
or
mov
out
test
aam
aas
cmps
inc
xchg
imul
loope
and
int3
ss
jno
repz
in
fsub
popa
push
sbb
mov
lock
jo
(bad)
jecxz
jle
xor
rcl
and
ret
gs
cmp
jge
cmovg
cwde
push
je
sub
cmp
popf
inc
cmp
ror
mov
enter
cmps
sub
jae
mov
push
nop
pop
jmp
bound
cs
jns
push
jmp
cmp
loop
aas
push
test
add
adc
ror
lds
xchg
retf
movs
push
into
(bad)
or
dec
in
and
je
loopne
mov
mov
out
outs
mov
mov
test
aaa
(bad)
stos
and
jmp
lea
mov
bound
fndisi(8087
ins
fidivr
xor
ffree
test
ds
and
mov
pop
outs
xor
(bad)
jge
xor
mov
jbe
and
cmp
je
pop
ds
stos
cmps
cld
or
cld
mov
into
aam
and
ins
cmp
fbstp
ins
mov
pop
ss
aam
mov
fiadd
outs
xor
loopne
scas
scas
mov
pop
mov
add
xlat
je
mov
scas
outs
push
int3
adc
movs
xor
xor
ss
imul
push
xor
pcmpgtd
jmp
ret
gs
push
mov
rcl
ficomp
xor
aam
mov
cmps
mov
xor
sub
sub
pop
and
outs
push
fsubr
cmp
jnp
add
or
or
or
xchg
cmps
mov
cmp
add
xchg
sbb
jb
ret
jae
popa
(bad)
dec
jae
cmc
rol
call
and
in
push
push
sbb
ins
push
jg
adc
sub
and
sub
push
into
fidiv
cld
push
aaa
and
inc
inc
lods
push
les
scas
int3
call
cmp
stos
stc
pop
pop
stos
scas
ss
pop
and
xor
ret
push
aas
xchg
sub
mov
dec
(bad)
push
in
imul
minps
bound
or
dec
fs
sub
int
cmp
mov
cmp
jo
ja
add
shl
cmp
(bad)
lods
sub
out
dec
sahf
and
or
cmp
sub
sbb
(bad)
mov
mov
lods
imul
scas
xchg
out
jnp
ins
adc
mov
jmp
or
cmp
stc
loope
dec
mov
in
ret
mov
cmp
loop
rol
stos
dec
in
adc
lods
stc
js
sub
sbb
stos
xchg
mov
mov
jno
aam
(bad)
push
fwait
mov
out
jne
or
or
sub
push
into
mov
pop
xor
(bad)
sub
aaa
and
in
sbb
retf
daa
cmps
ds
sub
inc
jno
stos
inc
stos
movs
fiadd
pop
cli
or
out
jbe
sahf
clc
pop
loope
sub
sub
or
aas
pop
lods
lods
adc
leave
cmps
aaa
(bad)
mov
or
(bad)
xor
adc
dec
and
mov
data16
and
mov
push
test
test
movs
sbb
jo
mov
cmp
mov
outs
mov
es
push
sub
sub
in
aad
bound
movs
rcr
hlt
es
(bad)
fwait
inc
add
and
ficom
jns
push
lock
inc
sub
inc
ss
cmps
cmp
aas
sbb
pop
inc
xchg
adc
sar
pop
es
xchg
test
and
push
in
je
jns
bound
sbb
cmp
scas
xor
out
lock
mov
lahf
or
push
lea
mov
mov
dec
sub
dec
sub
push
pop
xor
daa
cmp
frstor
push
xor
and
ror
push
ds
(bad)
adc
or
movs
pop
inc
jmp
ret
jmp
leave
add
mov
stos
xchg
and
nop
call
push
cs
sbb
jns
sub
push
cmp
ret
icebp
push
sar
xlat
sub
rcr
sti
mov
lods
cmp
popa
jmp
fsub
xlat
dec
cmps
pushw
pop
mov
jmp
lock
or
ss
sub
test
inc
or
push
sahf
xor
pop
push
jecxz
sub
and
enter
ds
cld
mov
test
stos
out
ror
ja
aaa
and
pop
push
add
ins
out
and
sbb
leave
sahf
push
mov
fimul
mov
movs
fs
lods
in
iret
ins
mov
push
ins
mov
test
ds
jo
fsubp
inc
cli
push
cmp
in
sub
mov
sahf
add
jl
mov
ins
add
(bad)
rcl
push
pop
inc
sahf
test
fisttp
xchg
adc
int
mov
leave
jo
stos
mov
test
pop
enter
or
jle
out
shr
sbb
cmp
lea
dec
dec
sbb
xor
adc
mov
(bad)
pop
push
or
cmp
hlt
cli
aas
add
in
call
or
pop
inc
in
inc
mov
mov
sbb
cmps
scas
inc
retf
push
pusha
inc
xor
ret
jge
sbb
ins
or
jl
cmp
es
lahf
add
pushf
ds
xchg
icebp
sub
outs
movs
outs
add
dec
sub
mov
mov
hlt
mov
cmp
leave
(bad)
xor
jmp
sbb
or
and
sub
jmp
test
push
ss
jne
ja
add
ins
das
jmp
ds
stos
adc
mov
dec
es
jle
and
inc
mov
fcom
rcr
inc
fidivr
mov
sub
jl
or
stos
rcl
or
scas
and
mov
mov
push
pop
pop
mov
sub
jp
push
push
mov
sahf
cmp
add
scas
adc
add
int
fwait
out
sub
fdivr
mov
out
dec
dec
daa
ret
ret
mov
(bad)
pop
push
jp
(bad)
(bad)
cmp
jmp
cmp
ds
push
jbe
xchg
(bad)
mov
pop
and
add
mov
arpl
cmp
vcvtpd2ps
sub
add
sub
push
jp
ret
sub
and
mov
sub
xor
sbb
or
aaa
dec
pop
xor
(bad)
scas
aaa
push
jle
daa
pop
inc
xlat
imul
loopne
and
sub
push
imul
dec
inc
cmp
retf
mov
fisub
pop
cmp
cmps
dec
movs
pop
popf
mov
cmp
mov
scas
sub
adc
dec
ss
mov
imul
lods
test
mov
mov
movs
or
and
ret
xchg
lahf
outs
imul
popf
(bad)
jbe
pop
cdq
xchg
daa
mov
fsub
add
sub
xor
push
outs
ret
sbb
sub
call
push
xor
shl
lods
das
pop
fild
xchg
add
mov
aam
sub
dec
or
push
pushf
push
sub
mov
add
ret
and
inc
aas
sub
xor
push
adc
mov
mov
fs
and
add
jecxz
repnz
test
and
mov
push
jnp
push
cmp
out
and
add
bound
xor
mov
fst
out
ins
sub
push
push
sub
jo
xchg
mul
popa
test
ss
retf
call
or
movs
test
mov
movs
ds
rcl
sub
adc
mov
movs
mov
push
jl
mov
jle
es
ja
popf
or
jbe
fiadd
xchg
sti
pop
lea
and
(bad)
in
stos
je
and
in
das
sub
leave
xchg
sar
mov
jle
nop
add
in
sbb
add
mov
(bad)
jmp
adc
shl
adc
push
and
cmps
je
mov
mov
dec
stos
ror
dec
push
add
and
xor
fsub
xchg
shr
xor
in
xor
add
repnz
mov
pop
stos
lods
sub
neg
add
call
pop
and
rcr
jae
jmp
imul
hlt
dec
adc
push
mov
cmp
mov
adc
add
push
jo
out
pop
imul
loopne
mov
and
inc
stos
jle
add
aam
(bad)
xor
cmc
cmp
cmp
jne
or
mov
shr
cdq
outs
ds
jmp
jl
adc
ins
mov
cmp
ret
sub
dec
pop
fcomp
xchg
leave
and
sub
retf
and
push
sti
mov
inc
pop
cmp
int3
or
pop
or
and
jno
loope
jp
mov
pop
outs
push
es
xchg
mov
pop
ins
outs
test
jecxz
ret
adc
xor
pushf
popf
dec
shl
and
icebp
mov
mov
jae
adc
std
jecxz
(bad)
cli
push
xchg
clc
retf
add
daa
dec
or
aas
pop
ret
sub
jl
cmps
je
scas
scas
daa
in
jg
int
aaa
retf
pop
sub
push
pop
push
push
dec
pop
sbb
ret
les
push
out
sar
pop
movs
pushf
mov
dec
out
xor
pop
mov
int
mov
or
aad
mov
jmp
lock
fdiv
call
aas
mov
fcom
call
push
dec
and
neg
lods
ds
out
outs
scas
test
loope
sbb
pop
jl
fild
pop
das
iret
inc
push
daa
in
jno
push
test
sti
add
test
pop
stc
out
ficomp
fcomp
ret
jnp
sub
pop
sbb
or
aad
sub
and
add
jle
add
ret
cmp
js
dec
sub
xor
(bad)
lds
sub
(bad)
sar
xor
shl
or
js
icebp
out
mov
aaa
or
xchg
jp
adc
xchg
add
mov
addr16
js
into
and
sbb
ins
jnp
cmp
fisubr
(bad)
add
and
push
daa
jle
popf
js
les
sub
xor
jne
shr
pusha
push
pop
jmp
(bad)
jae
dec
pop
cvtpi2ps
(bad)
dec
jb
sti
push
es
xor
out
gs
mov
cmp
add
pusha
jmp
pop
in
mov
sbb
jmp
icebp
cmp
bswap
mov
repnz
mov
fidivr
mov
les
ins
dec
ror
mov
cmc
js
mov
faddp
pop
loopne
mov
jmp
push
jns
mov
sbb
daa
push
xchg
cld
imul
ja
xor
push
in
and
int3
daa
xor
push
cmp
and
ins
lods
hlt
dec
push
push
(bad)
jmp
push
cmp
sub
jmp
stos
in
(bad)
jge
fdiv
inc
cmp
sbb
(bad)
xor
in
xor
mov
shr
arpl
out
sub
sub
fnsave
jle
out
jns
cmp
iret
rcr
pop
mov
mov
sbb
push
mov
fisub
ret
push
and
sub
pusha
ret
stos
adc
cmp
es
push
outs
push
repz
sub
mov
(bad)
pushf
ror
and
std
jmp
cs
jo
adc
imul
fmul
sub
call
adc
dec
test
nop
sub
and
cmp
mov
ss
jmp
sub
and
mov
imul
out
stos
enter
retf
xchg
add
test
and
jle
cld
sbb
stos
cmc
cld
and
mov
test
ins
(bad)
cmp
push
push
retf
stos
les
cmp
xlat
pusha
ja
(bad)
mov
sbb
dec
lds
push
rsqrtps
movs
out
test
jge
cmp
rcl
sbb
mov
into
lock
cmp
imul
(bad)
jg
xchg
mov
call
inc
fidivr
ds
arpl
ror
mov
retf
add
inc
adc
stc
cmp
aas
cvtps2pd
sbb
sub
lods
sbb
les
cwde
inc
ins
jne
xor
or
fwait
sbb
es
add
stos
aaa
and
retf
jle
and
int
jno
inc
jbe
mov
es
push
xor
inc
mov
out
ds
or
xor
adc
ja
pop
sub
ds
movs
ins
gs
aaa
lods
mov
shl
adc
or
cmp
adc
stos
lahf
out
arpl
or
sbb
shr
outs
or
stos
jp
and
sub
fsub
or
push
xor
cld
and
sub
stos
pusha
loop
stos
pop
ret
sub
and
test
push
movs
jbe
sub
aam
sbb
aam
xor
cmps
ins
jae
mov
fsub
daa
gs
movs
and
mov
ror
mov
test
push
push
sub
cld
sub
add
lock
sbb
ret
sub
jl
test
pop
inc
push
inc
cmps
mov
adc
test
into
mov
jle
push
and
mov
shl
mov
icebp
(bad)
jmp
int3
seta
sub
sbb
aas
mov
push
cmps
ins
cmp
inc
mov
movs
sub
xor
adc
inc
jmp
xlat
adc
jl
xor
sub
mov
mov
je
add
sub
xchg
scas
fs
ret
pusha
dec
in
mov
inc
dec
fdiv
sub
mov
out
(bad)
pop
test
pop
imul
sub
push
sbb
fistp
ins
and
sub
xor
mov
pop
add
pushf
push
out
sub
mov
aas
mov
loope
jge
or
aaa
cdq
sub
out
mov
push
xchg
bound
cmps
mov
sahf
push
shl
and
repnz
out
mov
sbb
sar
(bad)
fldenv
jmp
add
scas
mov
je
mov
cmp
nop
repnz
ja
cld
pop
mov
(bad)
leave
mov
adc
mov
dec
xor
shl
pop
enter
into
jns
fnstcw
mov
test
mov
ret
jo
push
and
(bad)
imul
adc
stos
jmp
outs
dec
jne
daa
shl
pop
dec
or
jle
cmc
lods
(bad)
xor
iret
pop
out
fdivr
(bad)
or
xchg
(bad)
sbb
inc
test
cmp
bound
or
rol
sbb
jle
(bad)
loopne
lods
cmp
xor
js
push
adc
push
sbb
pop
aam
clc
adc
pop
bound
jg
pop
aas
mov
ret
adc
add
or
pop
fidiv
ins
mov
movs
sbb
into
xchg
push
aas
fldcw
cmps
xor
iret
stos
repz
and
sbb
out
sub
xor
(bad)
mov
das
rcr
jns
adc
scas
ins
ret
(bad)
mov
(bad)
pop
sar
xor
jne
cld
pop
sub
ret
xor
cmp
fld
xchg
inc
je
loope
ret
jmp
and
out
in
jmp
imul
loope
loop
jmp
stos
arpl
jmp
adc
or
mov
adc
movs
and
cmc
push
cmps
enter
sub
sub
sbb
push
mov
push
das
pop
test
push
and
leave
and
pop
es
je
add
stos
push
scas
xor
ds
sbb
cmps
mov
cmps
out
lods
jnp
xor
dec
dec
fnsave
imul
push
adc
fcmovnu
xchg
loopne
fnstsw
fidiv
aam
inc
leave
and
lods
lds
push
jb
jo
mov
(bad)
xor
aas
mov
popa
fsubr
jg
jns
sub
aam
jl
jno
aad
xor
mov
jnp
mov
pop
cmp
out
sbb
sub
sbb
jmp
add
movs
ret
push
mov
(bad)
lods
ss
mov
daa
lds
mov
ret
sub
jnp
inc
arpl
adc
mov
out
dec
sbb
pop
and
movs
and
leave
fldenv
loopne
je
test
pop
mov
add
(bad)
outs
lds
mov
pop
jle
movs
mov
frstor
adc
mov
fisub
mov
cmp
hlt
jmp
je
adc
nop
xchg
out
leave
ret
jb
out
mov
stos
or
push
xor
fisubr
xor
test
shr
push
shr
inc
jle
sub
(bad)
stc
cmp
push
fstp
fldcw
and
xor
ins
clc
jae
std
mov
jmp
sbb
(bad)
xor
xchg
dec
push
rcl
in
pop
aas
ret
push
jmp
jle
bound
or
sti
in
dec
stos
add
inc
push
pop
lahf
pop
lahf
push
cmp
cli
lods
sar
fcomp
jge
out
cmp
pop
mov
jae
scas
add
(bad)
jmp
stos
in
ds
mov
shr
push
adc
imul
push
outs
div
sub
cmps
(bad)
fstp
(bad)
or
out
popa
xchg
jl
add
inc
in
pop
in
(bad)
jl
cmp
scas
loopne
jnp
retf
adc
(bad)
test
and
adc
pusha
push
les
inc
lock
mov
mov
std
push
rcr
rcr
stos
xchg
sub
(bad)
test
enter
in
hlt
lock
sub
test
or
xchg
ss
fdivr
scas
sub
sub
adc
jmp
aam
sbb
sbb
mov
iret
mov
adc
push
sar
cmp
movs
mov
ja
out
leave
stos
mov
ret
je
mov
adc
adc
mov
add
movs
cmp
es
mov
adc
test
lods
cdq
dec
es
sti
and
int
cmp
ins
(bad)
add
push
out
xchg
dec
pop
inc
into
mov
aam
daa
mov
cmps
lahf
dec
outs
lahf
mov
inc
jg
into
ds
mov
sub
ds
or
out
shl
in
add
dec
(bad)
jae
out
retf
imul
dec
mov
sbb
gs
cmp
dec
pop
dec
fadd
sub
ins
pop
stc
mov
sbb
in
push
inc
adc
add
sub
aam
adc
mov
and
push
(bad)
cmc
lea
ja
ret
ds
sub
jl
inc
dec
sub
mov
jge
test
add
shl
mov
sub
push
dec
jmp
cmp
test
ret
les
imul
pop
in
push
(bad)
sub
stos
sar
jl
sbb
(bad)
push
jmp
xchg
push
arpl
mov
mov
adc
pop
or
ins
dec
mov
es
sbb
ja
pushf
jmp
test
cmp
pop
sub
or
adc
jbe
pop
inc
inc
mov
(bad)
or
aaa
jmp
(bad)
test
inc
out
rcl
es
xor
jnp
rol
inc
cmp
jecxz
add
sbb
test
repz
sub
rol
jnp
out
fs
outs
xchg
retf
sbb
and
xlat
dec
push
(bad)
out
sub
cli
pop
movs
and
sub
int
test
bound
ss
and
out
js
shl
mov
xor
cmp
leave
sub
ret
and
mov
pop
ds
test
pop
cmps
je
xchg
fmul
mov
or
mov
cmp
aaa
das
push
xor
ss
sub
inc
or
aam
push
add
adc
push
loope
jnp
(bad)
xor
xchg
push
in
dec
sub
cmp
neg
xchg
pusha
int3
xor
or
jns
cmp
or
pop
sub
push
jo
je
ins
sbb
pop
add
add
fs
cmps
inc
jbe
cmp
pop
push
retf
jge
out
mov
mul
je
cld
lods
scas
(bad)
or
sbb
scas
and
ret
inc
dec
jecxz
xor
(bad)
mov
ja
dec
cmp
pop
ret
xor
jecxz
inc
dec
pop
add
and
enter
xor
pop
xchg
pop
mov
jp
popa
sbb
inc
dec
adc
jp
test
jecxz
push
repnz
clc
(bad)
or
cmp
in
jp
sub
push
xchg
jmp
pop
pop
mov
into
cmp
mov
dec
inc
and
leave
or
sub
inc
mov
add
mov
fsub
stos
or
imul
ret
fnstenv
ds
xchg
jno
cmc
ss
mov
fbstp
xor
dec
jmp
movs
mov
js
fs
imul
enter
jnp
xor
mov
fisubr
in
inc
inc
and
lock
fsubr
push
pop
sub
js
arpl
adc
or
scas
or
push
pop
cmp
and
xor
xlat
into
adc
push
cmp
push
xor
ret
xor
mov
inc
jmp
sub
cmp
imul
(bad)
mov
js
and
push
mov
jnp
pop
out
(bad)
mov
fisub
cmp
or
sbb
int3
xor
adc
pop
xor
sbb
scas
adc
cwde
or
je
sub
call
xor
out
cmp
sahf
xor
adc
aas
bound
sub
mov
movs
arpl
ss
popa
push
ins
mov
imul
(bad)
(bad)
sbb
aam
ret
sub
out
jp
adc
(bad)
mov
add
jns
mov
je
pop
jne
and
pop
dec
test
cmp
aam
cwde
cmp
push
jmp
ja
sbb
ret
sub
jge
and
xchg
ss
ds
or
out
adc
and
xor
imul
das
icebp
pop
fstp
xchg
push
cmps
mov
mov
jb
xor
sahf
add
sub
xchg
pop
pop
sub
das
cld
push
sbb
es
mov
stos
mov
clc
jbe
add
and
push
adc
adc
or
aam
inc
out
aas
sbb
retf
fiadd
cmp
xchg
mov
mov
(bad)
out
or
fidiv
out
adc
or
pop
aam
inc
xchg
fcmove
nop
add
adc
and
cmp
xor
jp
cmp
test
mov
xchg
jbe
fidiv
test
inc
je
pop
jbe
sbb
inc
and
jle
outs
js
dec
sbb
xor
(bad)
and
stos
sub
mov
push
inc
pop
jmp
xchg
test
pop
mov
and
xor
(bad)
mov
and
ds
mov
mov
inc
fs
sub
pop
and
call
stos
jb
adc
in
in
in
mov
inc
mov
lds
dec
imul
fcos
jmp
sbb
in
stos
push
sub
cs
sbb
js
outs
es
sub
push
push
mov
icebp
(bad)
stos
add
rcl
jg
adc
es
shl
arpl
push
imul
add
push
leave
and
out
xor
data16
das
(bad)
cmps
ret
out
mov
sar
test
mov
daa
aas
jle
mov
sub
dec
jecxz
cwde
into
aad
xor
cmp
add
jno
mov
mov
mov
push
and
ins
imul
fldcw
fs
pop
sub
sub
mov
xlat
or
adc
retf
xchg
hlt
js
stc
fwait
in
sub
loope
lods
xor
add
enter
jbe
cmp
(bad)
(bad)
sub
loope
lahf
dec
or
ds
jge
add
jmp
mov
cmp
stc
xchg
xor
sub
sub
xlat
es
sub
jns
mov
xor
into
outs
fnstcw
mov
test
mov
mov
jo
lods
mov
iret
retf
dec
mov
cmp
sub
fucomi
pop
hlt
jns
add
xor
mov
lea
sbb
sub
test
push
mov
fcmovu
xor
sub
call
fwait
and
repz
push
adc
inc
cmp
loop
das
xor
(bad)
mov
or
jne
adc
jbe
push
stos
adc
inc
and
pop
cwde
into
add
mov
adc
(bad)
leave
adc
sbb
push
push
push
aas
aas
movs
pop
test
fs
arpl
leave
or
jecxz
adc
stos
enter
fcom
shl
cpuid
cmp
sub
sub
pop
inc
and
adc
inc
dec
repnz
push
nop
inc
pop
fild
sub
sbb
xor
mov
loope
pop
pop
arpl
push
movs
dec
(bad)
retf
clc
xor
mov
icebp
inc
shl
mov
in
dec
fist
sbb
in
aas
push
mov
add
cmps
shr
sub
jno
sar
gs
xor
jns
mov
sub
icebp
aaa
jmp
data16
imul
das
sti
(bad)
loopne
inc
mov
fld1
(bad)
sbb
add
(bad)
stc
adc
push
jnp
pop
adc
or
sub
in
mul
out
sub
or
stc
aaa
jg
jae
stos
ja
fild
sbb
inc
and
sub
adc
lock
cmp
push
test
push
(bad)
sbb
cmps
lea
fbstp
std
imul
fcomp
int
xor
or
add
mov
push
or
and
pop
or
push
jne
mov
adc
shr
fsubr
ret
(bad)
pop
inc
and
(bad)
mov
pop
inc
sbb
add
dec
scas
push
jmp
addr16
push
pop
sub
stos
(bad)
loope
aas
sbb
push
mov
xchg
mov
xor
bound
push
leave
add
or
cld
push
push
dec
pop
cs
jb
push
push
sub
aas
pop
sbb
push
in
fst
and
add
es
mov
add
mov
and
je
or
add
pop
mov
mov
retf
scas
pop
movs
test
mov
or
mov
and
data16
push
or
mov
inc
sbb
sub
(bad)
fcmovnbe
loopne
mov
ret
or
or
fist
add
add
and
add
pop
jmp
test
stos
sti
xor
outs
faddp
add
test
and
xchg
and
pop
xor
fdivr
pop
adc
mov
retf
icebp
inc
or
scas
sbb
test
dec
imul
(bad)
repnz
ficom
push
fs
pushf
icebp
sub
and
mov
pusha
and
sub
and
add
pop
leave
sub
mov
sub
call
leave
xor
and
sbb
dec
jmp
jmp
and
mov
mov
mov
inc
sbb
jl
nop
out
(bad)
(bad)
fimul
sbb
and
lahf
inc
daa
cmp
push
stos
add
xchg
push
ds
cmp
out
out
dec
imul
test
jo
adc
mov
pop
and
sub
mov
sbb
popa
mov
in
das
adc
popf
lock
mov
aaa
pop
lods
dec
jle
ja
test
dec
xor
cmc
dec
inc
fst
mov
sub
dec
out
fcomi
or
hlt
aaa
(bad)
fldcw
cmp
jae
dec
inc
xor
loop
pop
and
or
scas
add
loop
imul
out
call
repnz
(bad)
rcl
mov
pop
ins
loope
adc
add
lahf
and
movs
dec
ret
repz
push
xchg
mov
enter
cmp
pop
xor
(bad)
pop
int
pop
dec
sub
cmp
das
mov
es
mov
lock
and
es
or
aas
push
enter
or
pop
es
stos
and
add
sub
push
into
aam
stos
push
sbb
outs
fcmovnb
mov
push
ror
and
fdivp
test
mov
sti
jnp
push
jecxz
es
jmp
(bad)
lock
cmp
jp
add
mov
jb
mov
dec
sar
test
and
push
lods
push
pop
imul
adc
push
ds
call
jae
leave
je
push
stos
xchg
and
cmps
stos
imul
mov
push
and
stos
imul
mov
imul
fld
cmp
(bad)
add
ret
pop
repz
adc
push
xchg
test
es
inc
dec
mov
mov
adc
push
push
inc
and
adc
mov
cmp
outs
ss
movs
ins
outs
push
xor
or
push
or
mov
movs
or
shr
les
jle
xor
inc
xor
fcmovbe
lock
or
loope
test
icebp
fsub
adc
outs
in
mov
icebp
xor
push
in
out
mov
pop
jg
cs
push
repnz
push
cs
lds
mov
cmps
lds
(bad)
mov
in
loopne
rcl
retw
lds
inc
xchg
ins
fcomp
rol
lds
les
jge
(bad)
jl
les
repnz
rcr
aaa
out
ins
loopne
mov
add
fbstp
data16
out
xchg
adc
push
pop
pop
add
mov
pop
or
sub
adc
push
mov
push
sub
lds
lock
sub
scas
cmp
pop
and
retf
or
fmul
xor
ret
in
jno
dec
cmp
icebp
xchg
aam
adc
dec
rcr
movs
sbb
ss
out
jle
movs
push
je
add
inc
sub
les
xchg
cmp
(bad)
or
mov
mov
sub
sysret
(bad)
fsubr
pop
jns
mov
sbb
and
cwde
sti
repz
inc
test
daa
(bad)
fild
and
jnp
out
(bad)
rcl
test
fsubr
stos
dec
push
mov
sub
adc
cmp
ds
sub
xor
xchg
cdq
retf
push
jg
adc
daa
cld
repnz
cli
pop
mov
jg
push
jno
(bad)
dec
fisttp
cmps
pop
ins
daa
adc
push
jae
jecxz
or
sbb
es
(bad)
xor
pop
push
xor
repnz
add
pop
pop
cmp
popf
sbb
sub
leave
add
mov
nop
retf
jl
sub
pop
imul
fcmovb
push
popf
ins
pop
inc
jl
jg
push
test
jbe
jle
dec
xor
and
cli
movs
jne
mov
test
jae
(bad)
dec
bound
icebp
xchg
pop
cmp
sub
mov
mov
(bad)
mov
xchg
dec
xor
add
lea
fcmove
(bad)
sbb
jge
and
sub
xor
sbb
call
mov
gs
adc
push
mov
sub
xor
and
leave
clc
pop
inc
lahf
cmp
daa
sub
ficom
add
push
sbb
adc
hlt
aaa
and
sbb
mov
and
push
imul
not
in
pop
pusha
ret
enter
div
pop
sub
in
das
sbb
sahf
retf
cmp
inc
push
retf
jo
arpl
movs
dec
outs
pop
shl
scas
bound
cmp
cmps
xor
scas
pop
push
(bad)
test
or
xchg
cmps
cmc
push
outs
xor
ret
xor
push
jb
sti
cmc
dec
xchg
call
ret
js
retf
mov
jl
data16
and
in
(bad)
out
xchg
lods
cmp
test
adc
sbb
nop
sub
fsubr
sub
inc
add
cmps
movs
test
xor
pop
daa
mov
clc
push
ss
je
add
imul
cmc
popf
inc
sub
cmc
mov
cli
pop
addr16
and
outs
mov
out
js
inc
inc
or
or
adc
aam
mov
sub
dec
sbb
push
cmp
sub
mov
ja
test
bound
ret
repz
mov
pop
addr16
push
ins
data16
inc
dec
jnp
or
pop
outs
shr
push
movs
int3
stos
data16
cld
push
mov
cmp
and
add
pushf
push
sub
(bad)
or
scas
sub
outs
mov
lock
inc
outs
imul
bound
pop
shl
add
or
imul
cmps
cmp
add
shl
lods
mov
sbb
or
ds
retf
fidiv
aam
push
cmp
jbe
loop
cmp
dec
push
and
xchg
aaa
sub
xor
adc
pop
mov
bswap
dec
movs
or
add
jmp
xor
and
ret
lods
mov
fsubr
scas
movs
sub
mov
bound
push
mov
jl
mov
cmp
xchg
cmp
cmp
je
(bad)
push
mov
loope
ss
add
sbb
pop
mov
(bad)
ss
push
xor
fnstenv
sbb
out
js
xchg
shl
movs
or
daa
or
(bad)
scas
jl
fcom
sbb
iret
ins
sbb
lea
jbe
(bad)
cmp
jle
jmp
mov
jecxz
test
stos
or
test
enter
mov
inc
pop
(bad)
cmp
adc
sub
loopne
add
movs
leave
loop
fwait
jmp
and
sub
pop
loop
(bad)
ins
scas
imul
lock
ds
ss
pop
dec
mov
adc
fs
jb
mov
push
or
sbb
clc
pop
data16
sub
push
inc
ss
add
ds
(bad)
adc
cmp
out
xor
jge
adc
or
popa
xor
mov
and
and
lock
movs
jge
loopne
mov
nop
add
sub
enter
icebp
mov
push
jmp
adc
fistp
imul
imul
cs
out
or
sbb
loop
adc
aam
push
lock
mov
cdq
adc
into
jns
jns
mov
add
aaa
xor
je
ja
(bad)
or
mov
inc
sub
(bad)
aaa
inc
int3
retf
cmps
call
jb
jne
mov
mov
sub
ret
cld
in
inc
rcl
push
add
xchg
cwde
fwait
jo
ja
cmp
jmp
mov
iret
not
call
arpl
test
cmp
ja
mov
cmp
test
xor
mov
push
adc
sub
mov
pop
jnp
jl
pop
rcl
inc
sbb
push
sbb
inc
and
xchg
add
pop
cmp
push
aad
clc
jge
fisubr
xchg
ja
fxtract
pop
sub
imul
callw
mov
daa
clc
call
add
leave
(bad)
cmp
out
es
push
lds
(bad)
dec
sahf
ins
(bad)
inc
js
xchg
and
out
xor
sub
mov
outs
mov
xchg
punpckldq
sub
cdq
or
dec
jno
jge
out
pushf
jg
and
or
lods
sub
arpl
xor
loop
sbb
xchg
cmp
ja
fs
repnz
jo
into
retf
and
and
repnz
jb
adc
jmp
ins
push
cmp
fldenv
xchg
retf
cmp
lods
sbb
mov
push
dec
shr
adc
fadd
cmp
mov
pop
push
cmc
stos
hlt
call
fcomp
ja
push
shr
mov
push
mov
call
jbe
xor
(bad)
rcl
xchg
push
cmp
fnstenv
adc
push
sub
push
jbe
pop
xlat
add
xchg
adc
nop
in
shl
fldenv
add
mov
sub
push
int3
push
data16
(bad)
and
dec
daa
xchg
xchg
mov
stos
mov
jmp
das
jns
mov
out
mov
bound
outs
inc
sub
lods
xor
aas
mov
sbb
test
(bad)
ins
std
mul
push
adc
cmp
pop
es
jle
(bad)
pop
mov
push
jno
dec
ficom
jmp
aas
lods
jo
push
shl
test
into
pop
stos
rcl
xor
cld
ds
fdiv
js
fld
int3
inc
sub
fimul
push
test
sbb
(bad)
push
std
add
ret
arpl
fs
mov
sbb
jecxz
mov
adc
ds
lea
inc
jns
repnz
jp
and
or
outs
sub
bound
stos
sub
movs
or
movs
dec
push
mov
fidiv
inc
or
popf
not
adc
mov
pop
loop
jb
dec
inc
or
mov
call
outs
mov
mov
dec
or
jle
fwait
adc
sub
icebp
sbb
cmps
aas
mov
xchg
push
aaa
and
shl
jno
and
sbb
ss
xchg
enter
(bad)
sub
and
xor
jno
aam
jbe
stos
pop
mov
xor
test
sbb
inc
push
icebp
imul
movs
bound
push
adc
(bad)
lods
or
dec
mov
adc
inc
test
pop
or
push
cmp
sbb
add
mov
mov
mov
mov
or
xor
inc
sbb
lea
mov
out
aad
lods
push
movs
jae
pusha
aad
fcmovnbe
data16
gs
inc
ret
sub
push
stos
lea
xor
xor
sbb
cs
inc
jno
add
sub
mov
in
sub
mov
push
mov
sub
cmp
cwde
cwde
sub
inc
mov
inc
mov
daa
(bad)
xor
imul
xor
xor
mov
jnp
call
mov
cdq
leave
add
xor
or
stc
add
cmc
adc
cmps
push
adc
push
ins
test
mov
push
out
push
cmp
and
jae
test
scas
scas
mov
out
ds
into
mov
aam
into
popf
lods
or
cmps
bound
inc
in
push
xor
adc
adc
outs
stos
add
add
mov
je
loop
and
in
xor
mov
fldlg2
rol
jo
ins
lock
lock
out
mov
inc
jge
bound
inc
faddp
inc
and
sub
icebp
ja
xor
(bad)
mov
leave
aad
(bad)
nop
es
pop
fucomi
outs
jecxz
mov
mov
lock
sbb
ds
and
popf
ins
or
scas
jecxz
aas
add
dec
outs
adc
call
sub
ret
outs
jmp
lock
ja
cmp
outs
mov
jno
sub
adc
nop
inc
or
add
cmp
test
push
into
mov
mov
and
ins
jb
mov
pop
aas
loop
cmp
push
cmp
sbb
and
xor
add
sub
mov
ins
dec
mov
pusha
sbb
pop
mul
test
rdpmc
data16
out
cmps
xor
pop
jo
inc
cmp
hlt
adc
test
out
push
loop
inc
pushf
xor
add
add
(bad)
push
scas
retf
cmp
loope
cmp
les
mov
(bad)
jae
rol
jnp
jae
sub
loopne
sub
jl
add
push
push
pusha
(bad)
aas
and
out
xor
ret
inc
xor
push
movs
inc
cmp
cmp
adc
stos
xor
xor
(bad)
dec
lea
gs
cmp
or
and
(bad)
or
fisub
lods
fstp
sub
sub
xor
lods
outs
into
addr16
js
out
inc
xchg
xchg
sbb
cmp
call
hlt
mov
mov
pop
dec
jb
es
out
das
add
ss
jl
jle
xor
jnp
cmp
sub
out
add
jae
aaa
test
push
mov
addr16
enter
ins
push
ja
mov
fdiv
call
aam
int
sbb
pop
push
in
dec
mov
and
aad
(bad)
lds
adc
push
push
in
ds
das
sbb
mov
mov
pusha
adc
push
outs
and
add
icebp
push
and
xor
or
int
stos
in
push
popf
dec
dec
inc
aaa
pop
imul
retf
inc
sbb
sub
cmp
mov
push
mov
dec
cmp
push
sub
jnp
mov
fadd
sub
popa
ss
push
ja
pusha
ins
ins
leave
inc
imul
adc
imul
repnz
test
mov
arpl
sub
xor
ins
sub
mov
mov
cmp
xchg
ins
call
out
leave
das
mov
ins
sub
ja
lods
sbb
out
stos
add
xchg
out
das
cmp
mov
ss
movs
adc
add
mov
ja
jns
sub
mov
xor
shr
scas
adc
ins
(bad)
mov
imul
push
cmps
retf
(bad)
pop
ds
xor
xlat
mov
mov
fsub
ins
fcmovu
cmp
pop
sub
test
pop
sahf
imul
add
adc
ficom
sub
xchg
shr
test
adc
and
pushf
xor
ret
ds
add
aaa
add
push
out
adc
das
add
ins
sub
push
and
retf
mov
ror
popf
or
push
jge
dec
inc
adc
push
adc
xchg
retf
idiv
dec
mov
adc
and
sub
mov
jmp
loop
out
xor
jno
(bad)
mov
xchg
cli
call
cmp
rcl
aad
(bad)
(bad)
(bad)
das
in
push
mov
retf
faddp
push
mov
(bad)
pop
jp
cld
inc
and
push
xor
out
jmp
dec
sbb
sub
dec
xchg
pop
add
cmp
push
or
push
fwait
mov
es
mov
inc
mov
sub
rol
cmp
scas
int
in
jle
pusha
push
push
xor
xor
push
cmp
jns
aaa
(bad)
mov
shl
cmp
outs
inc
mov
test
dec
xor
mov
scas
ins
pop
add
sar
aam
jge
pop
fnstcw
add
cmps
imul
mov
loope
idiv
outs
jmp
dec
and
rol
cs
ret
addr16
jb
jp
jp
xor
leave
mov
xor
jmp
fisttp
cmp
ins
push
push
int3
jb
and
out
push
cmps
aas
mov
add
xor
or
cmp
xlat
clc
mov
inc
leave
pop
iret
call
outs
inc
je
rcr
mov
out
and
pop
sub
sub
shl
imul
sub
mov
pop
mov
push
pop
fsubr
xchg
in
rol
pop
dec
or
push
fimul
add
push
mov
loope
pop
mov
into
jbe
cmp
cmp
mov
push
inc
xchg
ss
std
or
lahf
(bad)
out
adc
sahf
scas
sub
mov
into
push
dec
sbb
arpl
xchg
jmp
dec
scas
inc
add
fdivrp
xchg
add
fs
lds
mov
jmp
inc
dec
outs
(bad)
mov
adc
push
jg
mov
bound
adc
(bad)
shr
leave
jns
xor
sar
jle
jmp
xchg
or
jbe
movs
inc
mov
add
jmp
scas
and
or
sub
(bad)
push
pop
lods
pop
adc
push
mov
cmp
div
mov
and
loop
lods
popf
xor
mov
movs
cmp
mov
pop
and
cmps
test
xor
xor
loope
mov
pushf
lods
pop
imul
sub
cli
sub
mov
xchg
mov
repnz
sbb
(bad)
(bad)
pushf
rcl
adc
out
ds
ficomp
jo
sub
push
mov
leave
add
jp
or
push
add
cmp
inc
add
jmp
mov
in
cmp
add
push
mov
frstor
push
mov
out
lods
jb
add
add
in
mov
ds
mov
popf
lods
gs
pop
xchg
aaa
push
ret
dec
adc
mov
push
add
gs
mov
imul
push
pop
jl
ret
sbb
xadd
mov
xor
pop
loop
fld
or
outs
scas
cmp
fcom
mov
sub
mov
add
mov
idiv
dec
sbb
outs
jno
sub
and
jl
iret
sub
xor
mov
xchg
in
into
arpl
dec
dec
out
xchg
jno
and
inc
ja
mov
ss
pop
xor
fstp
pusha
sub
xor
jno
jo
out
push
sar
rol
or
fimul
or
push
popf
test
mov
syscall
fnstcw
mov
test
sub
sahf
jo
std
or
pop
call
cmp
jle
adc
adc
adc
(bad)
scas
dec
xor
ret
push
out
cmc
mov
xor
outs
ja
xchg
dec
popa
sub
mov
cmps
inc
mov
cli
loopne
in
sub
jg
sbb
inc
daa
das
pushf
call
jns
jmp
cmc
and
outs
mov
cmps
fild
aaa
xchg
gs
adc
adc
pop
ret
lea
sbb
dec
ret
int3
les
sub
jmp
aad
mov
push
and
jnp
cmp
retf
add
jmp
outs
mov
test
cmp
pop
xor
out
inc
popf
pop
aam
or
scas
ret
push
movs
sub
cmp
shr
rcr
xchg
lea
stos
and
leave
into
stc
fist
ret
test
cwde
mov
stos
ret
sub
add
outs
stos
jo
adc
pop
enter
jne
fistp
add
cld
sti
imul
stos
shl
mov
in
add
in
jmp
popf
shr
outs
inc
lock
xchg
sbb
add
xlat
iret
stos
out
fdivrp
add
hlt
push
aaa
rcr
in
inc
jbe
xor
add
xor
add
ins
mov
mov
call
out
sub
xchg
adc
mov
and
and
mov
add
sub
test
out
movs
mov
lods
add
shl
sub
sub
cmps
sbb
sahf
add
xchg
and
int
mov
xchg
(bad)
and
lods
mov
(bad)
sbb
inc
pop
pop
xchg
jae
mov
leave
movs
(bad)
push
adc
(bad)
push
xchg
stos
adc
inc
imul
sub
pop
jp
push
and
fidivr
sub
out
and
or
mov
daa
adc
test
mov
or
lods
scas
mov
loop
mov
popf
xchg
das
stos
push
aam
nop
cmp
lea
cmp
shl
sub
push
and
or
pop
cmp
je
test
mov
scas
pop
add
jle
mov
into
xchg
sbb
sahf
inc
jecxz
sub
lock
push
xor
push
test
sub
fnsave
pop
add
and
mov
push
or
punpckhdq
call
ret
adc
pop
bound
mov
sub
push
adc
int3
sbb
fsubr
not
ret
and
sub
imul
mov
daa
jbe
jne
jae
push
jbe
or
push
adc
hlt
adc
or
jnp
mov
fmul
push
in
into
jb
pop
js
mov
push
popf
jae
cmps
xor
imul
ret
mov
fld
jl
mov
and
mov
pop
push
jge
xlat
cmp
pushf
loope
ss
cmps
mov
sbb
inc
jmp
pop
add
hlt
outs
sub
(bad)
and
movs
(bad)
loopne
xor
mov
mov
xor
jbe
push
xchg
adc
stos
xlat
lahf
mov
je
test
je
into
and
ins
out
jmp
mov
mov
retf
jne
loop
push
sbb
or
xor
ins
jae
add
mul
mov
gs
ins
jmp
out
adc
push
xor
ret
pop
mov
mov
inc
sbb
jg
lea
scas
sub
outs
dec
rcl
test
and
js
xchg
repnz
ja
pop
inc
dec
mov
xor
clc
mov
sub
cmp
push
xor
shr
and
nop
icebp
test
cmp
jmp
gs
pop
and
out
jg
push
mov
xchg
mov
test
inc
inc
mov
add
adc
mov
xlat
(bad)
cmp
nop
dec
data16
and
ss
ret
mov
fidivr
mov
sti
(bad)
sub
pusha
mov
push
pop
xchg
pop
sub
adc
jb
sub
sbb
adc
test
mov
cmc
sar
push
lods
movs
add
adc
mov
(bad)
enter
cmp
xor
add
sub
lods
push
pop
add
ss
fild
pop
and
pop
push
aas
popa
stos
out
pop
hlt
outs
call
ret
daa
das
cmps
test
mov
cld
pop
test
test
test
sub
sub
movs
push
dec
jns
pop
in
inc
push
das
mov
arpl
cld
xor
xlat
stos
stos
outs
and
cmp
leave
les
sbb
mov
xor
sbb
cmps
cmp
jo
lock
mov
stos
jecxz
rcr
and
adc
dec
inc
mov
(bad)
sub
je
cmp
fistp
xchg
fnsave
add
icebp
and
sbb
xor
arpl
xchg
pop
and
cmp
push
add
jmp
pop
xor
or
mov
ins
pop
ret
stos
mov
out
xlat
dec
jmp
mov
inc
dec
stos
mov
jmp
in
icebp
test
xchg
jmp
inc
jge
adc
test
(bad)
or
mov
ss
popf
jae
cmps
cmp
into
adc
shr
cdq
lahf
sbb
xor
fistp
jae
jmp
std
imul
ret
imul
mov
adc
dec
mov
push
enter
stos
jmp
sar
popa
push
leave
(bad)
pusha
and
cdq
fild
cmp
pop
imul
xchg
add
and
and
rcr
jge
cmp
leave
(bad)
dec
jne
dec
mov
rcl
sub
popf
and
xchg
fist
fdivrp
rcr
sbb
cld
mov
sub
mov
sbb
xor
jae
xor
ins
xor
mov
mov
mov
in
ret
adc
ss
adc
leave
aad
cmps
test
das
nop
sub
jno
sbb
cli
jge
std
and
rol
popa
in
lahf
mov
mov
adc
mov
push
inc
and
push
mov
xor
push
adc
shr
out
pop
stos
mov
mov
cmps
sub
xchg
jl
cmp
xchg
or
sahf
xor
cmp
cmp
add
aaa
retf
pop
cmp
mov
jmp
je
test
pop
cs
test
lock
mov
sbb
lahf
sar
mov
cmp
in
sbb
jg
xchg
int3
mov
jns
into
adc
pop
daa
jecxz
loop
xlat
(bad)
lods
jl
retf
and
pop
xchg
push
adc
sub
js
push
fsubr
or
retf
pop
pop
(bad)
jno
or
aam
mov
(bad)
pusha
sub
retf
push
popa
xor
rol
cmp
into
pop
and
add
jmp
cdq
push
cwde
pusha
xor
(bad)
stc
pusha
pop
jae
jb
shl
shl
fs
sub
not
or
in
lods
push
sub
add
mov
inc
or
push
xchg
sub
pop
mov
sahf
cmp
mov
ret
jo
out
pop
pop
jmp
adc
add
enter
fnstcw
cmp
ret
inc
test
and
pop
sub
adc
scas
dec
sub
ret
jmp
inc
arpl
fiadd
add
or
xlat
repz
mov
push
fild
outs
adc
xchg
test
mov
mov
or
mov
out
movs
ret
std
out
mov
mov
push
sub
aad
cmp
cmps
rcr
mov
test
sub
(bad)
dec
adc
ss
(bad)
stc
je
mov
adc
in
sub
xlat
pop
sahf
mov
fadd
and
push
fldcw
aaa
inc
les
test
xor
and
push
cmp
jae
jb
sar
xchg
rol
outs
cmps
mov
fcom
jle
imul
pop
and
xor
jo
icebp
sub
mov
call
in
(bad)
sbb
cmp
add
add
cs
xchg
mov
push
icebp
shr
enter
ins
push
call
ret
lds
or
xchg
sub
scas
addr16
cld
mov
outs
jns
pop
xchg
out
es
add
clc
xchg
push
imul
in
cmps
and
pop
jae
test
cmps
ret
aas
mov
jo
cwde
adc
fstp
lea
and
xor
pop
add
push
sub
fucomip
xor
mov
sub
jle
loop
in
add
cmp
add
cmps
nop
mov
fs
scas
fldcw
inc
cmp
push
jle
aas
test
and
fsub
lock
cli
stmxcsr
(bad)
xlat
popf
cmp
cmps
inc
jl
imul
jbe
fdivr
xor
pop
fucomip
push
jno
xlat
outs
or
arpl
push
pop
mov
push
test
and
jmp
dec
movs
and
and
mov
jl
leave
inc
ds
std
sbb
div
sbb
xchg
pop
jmp
add
loop
jl
je
dec
es
gs
jp
or
in
mov
aas
adc
pop
daa
pop
push
sbb
xchg
mov
xlat
or
data16
data16
dec
(bad)
lods
dec
or
pop
mov
push
cmp
jle
ss
cmc
retf
and
aaa
lock
add
ret
push
push
lds
jecxz
js
mov
int3
pop
jb
sti
ret
call
xor
inc
mov
jae
ins
adc
xchg
sub
pop
cmps
ds
sub
push
loopne
(bad)
dec
add
jne
stos
adc
cld
arpl
mov
pop
add
mov
shr
loope
lods
or
js
mov
cmps
sahf
movs
add
inc
fist
out
cli
scas
cmp
jns
cmps
push
repnz
jl
scas
jge
fdiv
sub
(bad)
aaa
or
push
push
add
and
sub
sahf
sti
stos
imul
mov
arpl
mov
adc
xchg
pop
(bad)
sub
outs
fisubr
fild
jge
ja
mov
add
(bad)
cli
arpl
fsub
icebp
push
xor
sahf
push
xorps
sbb
adc
outs
dec
sbb
jns
mov
(bad)
sbb
aaa
out
(bad)
cmc
adc
push
sub
mov
rcr
gs
iret
cld
fsubr
sub
xor
std
push
cmps
repnz
retf
cmp
sbb
lods
in
pop
adc
mov
popa
test
push
adc
pop
loopne
and
adc
inc
jno
ds
daa
jno
test
jp
push
cmp
mov
mov
cmp
es
adc
outs
adc
push
cmp
leave
jg
mov
or
inc
lea
aad
xor
in
xchg
xchg
dec
popa
rcr
out
jle
and
fs
int
adc
sbb
inc
cmp
out
sbb
ins
leave
mov
jmp
mov
fsubr
loop
or
and
sbb
aad
mov
scas
mov
pop
adc
ds
shl
dec
aad
adc
xor
cwde
ror
lock
add
scas
rcl
mov
sahf
inc
jp
and
into
pop
es
leave
in
pop
scas
loope
or
ins
inc
or
xor
fsubrp
adc
movs
je
xor
sub
ja
inc
aas
mov
stos
out
neg
ret
xor
mov
pop
cmps
sub
addr16
push
jmp
lods
lock
xor
jle
cdq
cmp
sti
out
or
sub
add
mov
in
cmp
xor
popa
fdivr
lock
and
(bad)
xchg
into
aas
or
ret
rol
xor
xor
clc
mov
and
pop
ret
sub
mov
sub
jo
inc
sar
out
ror
loop
mov
out
add
ss
inc
or
movs
xor
sahf
inc
jmp
test
adc
les
and
test
sbb
inc
bound
sub
lods
test
call
cmp
ss
loop
inc
sub
loopne
pop
pop
fimul
xor
push
cmp
inc
ins
loopne
pop
(bad)
jne
mov
mov
and
push
xor
out
jnp
or
xchg
aad
dec
add
aas
jmp
(bad)
imul
call
jle
cmp
cmp
imul
jbe
inc
push
not
mov
ja
sti
out
sub
and
cs
inc
cmp
cs
cmp
xor
xor
adc
or
or
or
add
add
and
sbb
sbb
sbb
adc
adc
jo
push
ins
ins
imul
gs
add
js
jb
je
dec
push
cs
dec
dec
dec
dec
inc
inc
dec
cs
inc
inc
inc
inc
pop
pop
popa
cs
pop
pop
pop
pop
push
push
pop
sub
push
push
push
scas
mov
mov
in
jle
dec
and
loop
adc
or
cmp
and
and
add
push
cmp
dec
add
mov
jnp
pop
jl
std
pop
and
addr16
jno
or
test
ss
pop
pusha
dec
inc
pop
dec
push
pop
xchg
test
sub
es
jg
in
rol
punpckhdq
addr16
jno
cmps
inc
push
xor
out
cmp
push
push
pop
rol
dec
dec
dec
sbb
inc
pop
pop
push
inc
mov
seto
pop
mov
add
imul
push
ret
pop
out
rcr
inc
icebp
add
jle
in
repz
or
add
and
in
xchg
jmp
sbb
dec
icebp
xchg
pop
es
test
add
mov
add
mov
cmc
bound
in
in
dec
adc
mov
dec
pop
pusha
mov
inc
(bad)
test
pop
dec
or
push
fild
or
or
dec
pop
icebp
push
pop
inc
xchg
adc
adc
imul
ffree
cmp
xchg
cmp
es
outs
retf
or
pop
xchg
mov
inc
push
leave
bound
dec
lods
cs
push
push
pop
xchg
int
or
vphaddbw
xchg
mov
mov
push
push
gs
dec
adc
(bad)
jo
inc
dec
in
sub
pop
mov
imul
call
dec
bound
in
cmp
pop
jmp
out
jnp
or
lods
mov
jmp
pop
xchg
(bad)
mov
mov
xor
fist
rcl
cld
xchg
ja
js
out
jo
pop
nop
aam
dec
dec
mov
push
xchg
or
sbb
dec
mov
jl
push
sbb
cmc
jo
addr16
cmp
lods
or
adc
jns
cmp
ror
clc
mov
or
mov
ret
out
push
retf
inc
lahf
push
add
pusha
xor
dec
sbb
fisttp
bound
inc
fild
popf
mov
sbb
fcmovnu
fisttp
push
add
fistp
mov
mov
push
mov
rcr
movs
inc
adc
stos
mov
rcl
retf
(bad)
fstp
or
retf
dec
leave
in
pop
push
mov
mov
and
dec
mov
and
movs
cwde
add
dec
adc
xor
dec
ds
pop
(bad)
sub
jne
xor
adc
je
pop
repz
jle
call
add
inc
ins
or
pop
and
push
pop
pop
push
sub
call
out
jo
pop
push
div
or
mov
sub
sub
imul
jbe
rol
inc
and
and
pminub
inc
sub
and
dec
xor
adc
cmps
mov
imul
rcr
xor
test
xor
push
and
data16
ds
stos
je
adc
mov
mov
popa
mov
xor
xor
bound
xor
xor
mov
xchg
fdiv
xor
addr16
jp
scas
xor
cmp
xor
push
mov
in
xor
clc
scas
adc
push
jmp
scas
mov
stos
stos
lods
lods
cmps
cmps
test
movs
movs
mov
mov
mov
mov
mov
mov
lea
sub
test
call
cwde
xchg
xchg
cs
xchg
out
out
icebp
lock
cs
in
out
jmp
in
(bad)
inc
add
cli
cs
cld
div
stc
clc
repz
hlt
iret
into
rcl
retf
retf
int3
mov
cs
fsubp
loopne
fisubr
fstp
xlat
(bad)
(bad)
rcl
inc
aad
das
nop
adc
add
mov
scas
test
scas
xchg
ins
push
lea
scas
ret
sbb
(bad)
adc
jo
push
gs
sub
pop
sub
ss
stos
(bad)
xchg
push
push
jle
jno
sub
(bad)
(bad)
mov
pop
pop
test
push
and
or
cmp
mov
(bad)
ds
ds
dec
es
pop
pusha
dec
inc
mov
inc
imul
pop
sti
xchg
xor
cmp
dec
push
jbe
jp
bound
push
popa
pop
push
outs
mov
and
clc
fisttp
gs
xchg
inc
sub
mov
ja
mov
and
sub
inc
inc
test
pop
es
cmps
sub
ds
push
jno
sub
xor
xor
lds
cli
ja
xor
jg
jnp
test
pop
outs
les
dec
xchg
and
imul
imul
and
scas
pop
mov
addr16
jge
not
jge
xor
sbb
add
(bad)
out
jle
imul
add
inc
(bad)
fsub
xor
adc
data16
fisubr
test
xchg
jnp
cmovge
rcl
and
pop
pop
call
add
loopne
pop
fisttp
ins
or
push
pop
(bad)
adc
pusha
xchg
mov
adc
retf
inc
sbb
add
inc
pop
int3
adc
sbb
push
jp
pop
or
jle
and
(bad)
inc
mov
test
push
call
xor
fadd
fs
lahf
cmp
(bad)
pop
into
aad
push
(bad)
jle
fst
push
sub
cli
jbe
or
mov
dec
mov
mov
jl
addr16
pop
inc
adc
cmp
mov
jmp
or
and
imul
dec
dec
fisubr
popa
cld
jecxz
jecxz
xor
cmps
mov
neg
jno
jge
cwd
outs
dec
pop
xor
ret
(bad)
retf
cli
faddp
push
test
retf
cmp
dec
dec
fs
in
mov
imul
aas
cmp
dec
cmp
lods
call
(bad)
ret
pop
dec
push
addr16
rol
pop
clc
outs
cmp
js
stos
sbb
popa
adc
sub
es
add
fs
adc
inc
stos
sbb
sub
or
inc
inc
mov
shl
sub
adc
inc
cmps
and
sub
and
xor
test
adc
lock
adc
bound
mov
loop
push
dec
in
pop
stc
or
cmp
dec
sar
pop
xor
push
ss
pop
cmp
fs
jmp
jo
cmp
dec
and
ja
or
pop
repnz
xchg
push
adc
mul
push
(bad)
sub
xchg
rol
test
shl
jno
dec
mov
cmps
inc
shl
sbb
sub
jb
jbe
jp
jle
bound
outs
push
push
test
add
ror
push
push
ss
and
shr
cmps
shl
(bad)
inc
fimul
fisub
rol
retf
repnz
(bad)
data16
out
jmp
mov
scas
pop
ror
ins
push
lock
ins
sub
data16
scas
adc
adc
cmps
(bad)
ins
cmc
rcl
out
repnz
xchg
mov
or
push
(bad)
(bad)
into
push
mov
outs
data16
bound
test
adc
cmp
das
xlat
iret
stc
aaa
sub
sub
iret
ds
loop
ins
xor
jbe
or
push
push
and
daa
es
pop
push
aaa
ja
ds
retf
loopne
aaa
xchg
add
pop
jae
aam
rcl
pop
sub
sub
add
inc
mov
jmp
xchg
outs
mov
cmp
xor
mov
dec
cmps
jne
pop
and
ja
daa
mov
pop
push
push
repnz
dec
xor
sub
fst
ja
(bad)
cmp
pop
rcr
mov
cmp
adc
sti
stos
ret
shl
push
(bad)
pop
xchg
daa
mov
loope
adc
jg
or
and
push
imul
jge
pop
or
dec
stos
mov
enter
cmp
int
pop
jle
cmp
outs
xor
out
fcom
dec
(bad)
out
out
cmp
push
cmp
stos
cmp
or
call
pop
cdq
je
rcr
add
repnz
cmps
data16
fdivr
and
push
fs
sbb
jmp
and
aaa
jg
xchg
cmp
(bad)
wbinvd
jge
pop
pop
pop
ja
fisubr
cs
jmp
sahf
ret
movs
sub
cmp
fisubr
mov
sub
and
push
cld
mov
imul
dec
inc
js
in
xchg
xchg
jecxz
cmc
xchg
adc
pushaw
jae
out
dec
fist
push
pop
imul
pop
jl
sar
jns
stc
inc
dec
cmp
add
jl
js
gs
pop
in
xchg
into
pusha
iret
sub
outs
add
mov
and
dec
pop
and
and
loop
(bad)
test
push
fstp
icebp
pop
jp
rcr
ss
mov
push
and
sub
outs
sub
in
jge
repnz
aam
jge
push
push
arpl
inc
in
add
sar
jbe
ins
cld
es
aad
or
bound
inc
mov
jno
cli
imul
and
pop
fs
sub
dec
cmp
or
pop
xor
sbb
push
push
(bad)
xor
mov
cmp
sub
push
adc
dec
push
retf
outs
fisubr
inc
(bad)
push
fisttp
scas
fadd
shl
out
fldenv
dec
fdiv
mov
and
pop
ret
cli
mov
fidiv
sub
bound
ins
jle
jbe
xor
jmp
aas
cmp
popf
(bad)
cmp
or
dec
xchg
and
imul
pop
sub
pusha
sub
retf
out
jno
jns
js
add
ja
clc
ret
ds
pop
mov
in
sub
not
clc
cmp
cli
push
movs
push
mov
pop
outs
es
sbb
sub
sbb
adc
push
sub
movs
or
push
adc
add
mov
inc
add
outs
jbe
mov
lahf
mov
sar
(bad)
mov
(bad)
jb
retf
fiadd
data16
stos
pop
or
retf
add
mov
sub
sbb
xor
scas
pop
lea
mov
gs
adc
addr16
shl
mov
(bad)
push
jl
(bad)
jmp
mov
sub
add
or
retf
mov
data16
aaa
es
push
jmp
mov
dec
aas
out
fldenv
xor
test
rcr
cli
scas
loope
jge
sbb
call
mov
cmps
jns
mov
inc
pop
add
xor
and
sti
dec
add
dec
call
mov
push
lea
outs
es
lahf
push
push
push
mov
pop
outs
cmp
jg
lea
and
test
inc
xchg
xor
sbb
pop
push
or
push
mov
pushf
outs
or
imul
stos
lods
repz
out
test
cmps
cmp
loope
cmovo
xlat
push
sahf
cmp
lea
xor
imul
jl
outs
loope
sub
test
and
push
out
jl
nop
aad
xor
sbb
out
mov
loopne
ror
mov
call
cmp
pop
idiv
in
cmp
xor
(bad)
ds
loop
sub
cdq
ins
cmps
push
xor
ins
and
pop
mov
push
sahf
arpl
test
cmps
mov
sub
hlt
lods
xor
adc
retf
sub
ins
clc
adc
fidivr
out
add
jo
jl
(bad)
fidivr
(bad)
shr
adc
push
cmp
push
sbb
push
data16
adc
(bad)
or
adc
fcmovu
jo
sub
(bad)
mov
in
or
data16
shl
mov
fimul
sub
pop
shl
test
xor
ror
push
push
dec
test
sahf
callw
adc
push
sub
sbb
or
adc
add
or
imul
jbe
adc
adc
psubsb
cli
popf
pushf
adc
cmp
dec
xchg
ins
cld
fnstenv
outs
shl
(bad)
and
push
jge
adc
jb
lea
pop
push
push
rcl
dec
lahf
pop
test
pop
cmp
pop
xchg
lock
rcr
mov
mov
ja
sub
bound
lahf
retf
xchg
xchg
mov
inc
add
call
cmps
sahf
sti
scas
test
jae
jnp
sub
xor
pushf
popa
cs
ficomp
xor
mov
mov
mov
xlat
add
mov
jo
imul
clc
cs
(bad)
xchg
mov
xor
arpl
in
xchg
ja
adc
xlat
cmp
jmp
repnz
int
mov
cs
ficom
dec
call
inc
dec
lahf
ss
mov
and
cs
mul
cwde
(bad)
in
adc
push
lods
scas
mov
adc
ror
data16
and
pushf
test
cmp
and
scas
daa
std
jmp
imul
fld
fcomp
pop
sbb
cs
jmp
and
dec
scas
adc
cmps
pop
push
mov
xchg
clc
popa
mov
in
inc
sbb
cs
jecxz
dec
add
add
in
dec
push
inc
inc
dec
and
fist
imul
stc
lods
cmp
sbb
mov
mov
push
cs
cmp
and
retf
dec
nop
push
fsubr
jle
popa
xchg
scas
bound
mov
ucomiss
inc
mov
adc
call
or
dec
in
shl
mov
or
leave
inc
cli
ins
mov
das
in
adc
sub
out
fisubr
push
sub
push
outs
imul
test
push
add
xchg
(bad)
xchg
and
cwde
dec
jg
icebp
loop
jmp
fidiv
sbb
pop
push
jno
jle
mov
shr
adc
cs
sub
mov
sbb
cs
jnp
stos
repz
pusha
adc
cmp
lods
push
mov
and
ror
xchg
cdq
and
loope
aas
mov
les
test
xchg
(bad)
cs
dec
mov
imul
cs
xchg
fs
pusha
call
mov
pop
and
mov
sub
add
loop
push
pop
inc
cs
and
push
xlat
aam
xchg
out
(bad)
fsub
cs
or
and
stos
mov
adc
inc
outs
jle
cs
test
mov
out
mov
mov
bound
cs
pop
repnz
jmp
aaa
cs
inc
cmp
scas
ror
cs
movs
xlat
sbb
cli
jne
and
movs
jl
mov
test
lock
mov
sub
icebp
es
aaa
lea
cs
dec
sbb
out
bnd
stos
and
cld
ror
cdq
cs
sub
ret
das
imul
mov
into
adc
iret
scas
stos
or
icebp
cs
mov
ins
mov
outs
adc
and
jns
jo
lea
aaa
mov
xchg
xchg
daa
sbb
scas
in
int3
int3
aas
fstp
fbld
jns
pop
aas
cs
push
popa
or
data16
fist
xchg
mov
lock
cs
test
(bad)
sahf
cs
mov
cs
rol
push
pop
cs
dec
jmp
enter
mov
adc
ficomp
sti
js
outs
xchg
shr
cmps
pop
mov
imul
mov
arpl
cmp
cs
test
sti
jmp
fidiv
ret
pop
cmps
xor
and
xor
mov
imul
sub
add
inc
cs
gs
xchg
enter
dec
sbb
mov
xchg
mov
fs
enter
in
xor
and
in
aaa
loop
xchg
xor
and
jmp
adc
pop
daa
pop
in
int3
dec
dec
xor
push
xor
xor
out
jmp
out
add
jno
mov
xor
sti
outs
movs
push
xor
lock
outs
adc
jns
data16
imul
inc
pop
lods
ins
push
xchg
es
clc
ja
adc
js
lock
or
jge
mov
xchg
outs
inc
xor
mov
out
mov
or
iret
es
ins
lea
mov
into
ror
outs
push
scas
lods
push
xchg
mov
call
aam
outs
bound
popf
lea
stc
jno
pushf
cmps
call
pop
int
(bad)
ins
jae
sub
sub
in
dec
dec
and
sti
div
into
fldcw
adc
sbb
addr16
push
cmp
call
ds
or
sbb
ss
outs
es
outs
scas
jle
scas
mov
cmp
ret
xor
cmp
xor
sub
sub
sub
daa
adc
or
mov
pop
cmp
adc
es
mov
inc
test
adc
sbb
imul
sbb
es
ja
dec
jns
push
inc
bound
inc
test
xor
or
and
scas
cdq
call
stos
or
or
add
out
int
pusha
mov
mov
sar
mov
push
sub
ds
xor
pop
or
push
cmp
jmp
rol
mov
cmp
or
push
sbb
adc
push
xor
push
inc
(bad)
ss
cmps
into
sbb
ds
sbb
adc
push
test
or
sar
shr
das
mov
shr
mov
test
pusha
cdq
xor
cmp
mov
mov
lods
ss
push
adc
shl
pop
or
ins
xor
mov
fimul
jo
out
inc
loop
out
jmp
xchg
sar
test
inc
inc
ror
push
jbe
jp
jle
bound
push
push
test
test
sub
jno
fisubr
retf
inc
repnz
xchg
rcr
push
mov
add
and
mov
xor
add
mov
adc
xor
xor
loop
cmc
cmp
xor
rcl
dec
and
sub
loope
int3
push
cmp
sar
cmp
push
js
sub
movs
aad
xor
pop
dec
or
push
push
adc
mov
popf
adc
push
inc
mov
push
shr
adc
sbb
xchg
push
or
loopne
sbb
fwait
mov
shl
mov
std
shr
inc
or
jge
pusha
div
dec
cmp
out
mov
pusha
pop
or
mov
jnp
das
(bad)
lea
data16
xor
xor
ss
mov
push
cld
or
xor
ror
int3
pusha
outs
jl
add
dec
inc
pop
imul
cmps
pop
cmp
mov
xor
push
lahf
ds
ins
inc
dec
imul
out
jno
push
mov
fimul
push
or
xor
test
dec
movs
dec
enter
mov
fidiv
sub
daa
cmp
dec
test
sub
lahf
mov
dec
test
fs
pop
dec
aas
mov
sub
(bad)
leave
les
mov
mov
aaa
dec
(bad)
push
enter
adc
adc
add
jmp
and
dec
xlat
xor
xchg
leave
outs
cmp
in
sub
mov
push
es
pop
add
cmps
xor
movs
mov
and
or
retf
pop
jp
fsubr
mov
adc
or
test
push
mov
adc
cmps
xchg
push
inc
xor
cwde
into
sub
mov
movs
sbb
adc
test
jp
xchg
dec
mov
pop
sub
push
(bad)
ds
cmp
ins
fld
ret
int3
lods
mov
cmp
out
ret
cli
mov
adc
dec
outs
push
std
jae
inc
adc
and
cld
or
(bad)
pop
lods
addr16
dec
mov
adc
fnstenv
push
mov
jnp
bound
sbb
leave
mov
xchg
jmp
scas
sar
adc
xor
(bad)
stc
jae
rol
lods
imul
ins
stos
jno
test
and
mov
mov
add
inc
inc
aas
scas
xor
or
out
icebp
loop
inc
sub
xor
xor
jmp
pop
pop
popa
cmp
or
mov
ror
ss
gs
sub
leave
push
jge
push
push
and
jle
loopne
fiadd
nop
and
test
lock
xor
sub
fnstenv
pop
(bad)
in
jg
jnp
jecxz
out
xor
rcr
jmp
push
add
or
xchg
pop
outs
mov
jle
inc
in
dec
cmp
xor
xchg
push
and
xor
(bad)
mov
mov
dec
in
outs
test
enter
dec
fidivr
sbb
das
xor
jne
xor
ins
nop
dec
dec
rol
dec
and
lock
out
fsubr
test
or
jmp
push
ds
imul
es
lods
frstor
cmps
ret
imul
repnz
and
and
leave
leave
sub
js
dec
ins
jo
fcmovnbe
sti
ror
scas
add
adc
shr
shr
xchg
test
sbb
add
into
sub
sar
sti
mov
loope
or
stos
xor
push
pop
or
es
mov
xchg
stc
mov
cmp
fdivr
ss
pusha
inc
dec
xor
div
jge
(bad)
xlat
xor
mov
mov
lds
inc
(bad)
ficom
ss
out
shl
ins
leave
sar
xor
xlat
push
push
fldl2t
sahf
dec
ds
xor
jge
sti
fild
outs
inc
inc
pushf
cwde
cli
pop
fimul
lock
or
mov
(bad)
test
stos
sbb
xor
xor
outs
aaa
jmp
dec
mov
aad
leave
jns
pop
sub
push
add
(bad)
loopne
shl
(bad)
mov
sbb
xlat
add
not
call
pop
sub
sub
sub
movs
enter
jp
xor
scas
(bad)
dec
inc
or
loope
lods
stc
adc
cdq
es
leave
pushf
cmp
mov
(bad)
mov
pop
mov
add
push
out
rcr
mov
dec
pop
dec
jnp
cmps
sbb
sub
sti
outs
jb
pop
add
push
adc
dec
cdq
xchg
ja
sub
dec
inc
sbb
cwde
add
push
mov
sbb
in
out
inc
xor
movs
idiv
add
movs
add
imul
sar
cdq
bound
aas
test
shr
xchg
pop
push
push
jg
xchg
mov
adc
jo
shl
push
pop
retf
(bad)
(bad)
cmp
ins
sub
lahf
ja
pusha
xchg
adc
cmp
dec
mov
jnp
push
stos
(bad)
icebp
call
ins
sbb
in
mov
test
add
add
in
xor
and
aas
clc
mov
push
cld
scas
enter
stos
push
les
push
mov
pop
sub
inc
ror
inc
rcl
cs
aam
ss
test
sahf
das
and
cdq
les
(bad)
pop
imul
mov
push
test
adc
movs
data16
add
jno
leave
jmp
int3
dec
mov
shl
add
sub
test
pop
outs
xor
(bad)
not
jmp
push
(bad)
push
xchg
in
bound
cmp
push
cmp
and
cmps
arpl
cmp
out
es
fidivr
icebp
fdivr
test
outs
outs
ins
fisttp
pop
add
das
out
cs
call
adc
nop
daa
iret
or
aas
scas
retf
fimul
out
cmp
mov
inc
aad
add
xchg
mov
leave
fabs
xor
jno
imul
and
sub
mov
mov
mov
mov
ja
into
cmp
xchg
(bad)
cmp
(bad)
gs
cmp
call
pop
adc
sbb
imul
jg
jnp
ficomp
sti
sub
add
mov
shr
jno
cmp
shr
push
jl
mov
jo
shr
movs
outs
mov
stc
rcr
push
popa
mov
retf
push
xor
xchg
mov
push
movs
ficomp
cs
les
gs
pop
and
push
(bad)
inc
int3
dec
in
imul
cmps
mov
jo
inc
ins
inc
push
push
sub
int3
or
into
and
sbb
test
push
mul
dec
fisttp
pop
scas
inc
sub
pop
data16
sbb
push
test
sub
push
fs
into
dec
retf
push
sbb
aas
shr
mov
or
adc
(bad)
in
and
mov
fsubr
sub
fldcw
cmp
and
(bad)
leave
push
jnp
daa
or
dec
sub
or
mov
dec
aas
ds
pop
jp
add
les
xor
mov
mov
xchg
fwait
inc
sahf
lods
sahf
xlat
or
es
bound
and
mov
jb
pop
stos
scas
jmp
jg
fsubr
test
xor
(bad)
ins
jge
mov
pushf
sub
add
cmp
push
rol
mov
aam
outs
shr
dec
cld
mov
shl
xchg
loope
outs
cmc
data16
outs
jne
and
xor
push
leave
and
fisttp
or
adc
sub
xchg
stc
cli
jp
out
dec
test
mov
mov
xchg
nop
sub
push
fist
fbstp
das
or
(bad)
ja
(bad)
pop
movs
lds
sub
cmps
stos
cmp
or
pop
shr
cmp
popa
xchg
ss
add
sbb
test
mov
shr
int
jl
mov
xchg
push
stos
mov
push
sub
in
push
sbb
ins
and
pop
and
cdq
push
inc
arpl
and
and
ds
jmp
popa
inc
pop
xor
and
cdq
ds
jae
aam
and
aad
sbb
sub
jae
out
sub
cld
xchg
sub
js
(bad)
fnstcw
add
shl
sbb
pop
add
pop
mov
mov
call
imul
jp
adc
or
xor
sbb
pop
or
cwde
mov
cmp
or
cmc
dec
dec
or
nop
bound
aam
rcr
mov
repz
test
test
or
dec
jbe
popf
(bad)
dec
or
leave
gs
sub
dec
dec
dec
aaa
sbb
pusha
(bad)
xor
mov
or
repnz
inc
lahf
add
lds
cmp
ss
inc
popa
shl
cdq
fsubr
fwait
sub
call
mov
lock
cmps
mov
cmp
(bad)
outs
mov
in
xchg
or
(bad)
call
xchg
add
fisttp
push
(bad)
call
jns
jnp
ins
dec
fistp
mov
or
mov
dec
xchg
jo
dec
or
test
cld
lock
inc
js
jl
jl
fld
xor
out
and
test
or
nop
and
mov
(bad)
cld
out
in
sub
(bad)
jmp
loopne
dec
leave
push
aad
retf
mov
pushf
pop
arpl
jecxz
stos
or
lods
int3
leave
shl
mov
cmp
call
and
pop
aaa
jb
push
adc
aaa
pop
cmp
bnd
icebp
loop
mov
sub
push
cmp
xlat
fimul
fcmovnb
sahf
xchg
mov
out
cli
dec
out
xchg
xchg
sub
shr
sub
add
mov
cmp
and
dec
sub
xchg
iret
and
or
pop
mov
(bad)
push
ss
retf
fadd
fstp
cmp
fstp
add
out
mov
and
nop
mov
dec
(bad)
ds
mov
xlat
scas
xchg
mov
mov
push
adc
cs
and
fadd
lea
daa
fscale
movs
sub
sub
scas
das
and
outs
scas
int3
sub
xlat
enter
cmp
xchg
lahf
jbe
sbb
mov
pop
sar
cmp
outs
data16
pop
test
leave
mov
cld
std
dec
push
lea
stos
push
loop
(bad)
dec
fldcw
int3
lea
leave
mov
popa
sbb
stos
mov
(bad)
add
or
(bad)
cwde
sahf
dec
and
cmp
cmp
sub
imul
jo
ret
repz
inc
adc
jne
mov
jb
xchg
cmps
outs
(bad)
movs
shl
loopne
mov
xor
sub
or
shr
push
jmp
mov
push
adc
aas
jle
pop
push
(bad)
push
sbb
fnstsw
push
pop
fstp
outs
mov
callw
mov
test
loopne
in
aaa
and
dec
adc
sub
ficomp
inc
(bad)
pushf
stos
daa
out
stos
ret
mov
leave
lock
fadd
fcom
mov
fnstsw
cmps
xlat
daa
aad
out
in
cld
cs
push
xor
leave
push
repnz
add
cmps
retf
(bad)
in
xlat
mov
stos
ret
xor
leave
or
jbe
add
ins
sub
inc
fsubr
inc
pop
adc
jecxz
test
and
retf
mov
jns
xor
mov
or
sub
data16
lock
data16
scas
shr
or
xchg
add
lea
ret
lods
gs
in
sub
inc
mov
jae
push
ds
fst
rcr
enter
jae
leave
and
add
aam
aas
rcr
dec
add
punpckldq
(bad)
jo
les
mov
add
jmp
lds
or
and
ja
pop
nop
xor
cmps
or
mov
xor
push
cmp
(bad)
dec
dec
inc
test
(bad)
jle
xchg
mov
aad
nop
out
lods
out
dec
call
jo
and
jle
mov
nop
(bad)
sbb
jo
inc
cwde
pop
inc
sub
scas
stc
lea
jge
push
cmp
xor
shr
push
test
popa
inc
dec
jge
leavew
cld
pop
cli
inc
sub
loopne
cmp
(bad)
mov
loope
mov
push
clc
cmps
mov
push
push
cli
xor
inc
inc
aam
ss
popf
push
je
leave
xchg
dec
ja
cmp
iret
xor
ds
add
dec
mov
fdiv
mov
add
sbb
out
(bad)
sub
outs
test
jle
lds
and
leave
pop
and
div
das
and
mov
fimul
mov
icebp
movs
cmp
cs
int3
ins
pop
ret
rol
lods
ins
fbld
lods
cmc
jp
xchg
xor
cmps
fbld
add
pop
jle
js
sub
imul
mov
imul
or
into
jg
sub
mov
lods
femms
adc
fcomip
outs
sub
iret
cmps
mov
retf
add
mov
je
lods
cwde
add
jmp
adc
mov
pop
mov
xor
lea
lods
(bad)
leave
ja
scas
rcr
rcr
ret
das
shl
int3
adc
jne
mov
jmp
inc
jp
xchg
push
lods
push
fdivr
rcl
or
pusha
push
in
fidiv
loope
or
cwde
jmp
out
ret
mov
test
cmp
adc
in
xor
or
dec
stos
das
mov
fadd
xor
sbb
or
bound
adc
jle
sub
test
cmps
icebp
cs
and
add
movs
addr16
jle
push
sbb
in
pusha
shl
fisubr
and
mov
ss
dec
fcom
(bad)
dec
stos
fmulp
mov
adc
in
xchg
nop
shl
in
inc
push
dec
xor
scas
rol
adc
add
push
cmps
in
and
pop
imul
stc
jns
lods
inc
jp
push
or
inc
ins
xchg
jo
sar
push
jl
dec
mov
gs
leave
fs
and
xchg
std
(bad)
test
out
jp
push
daa
not
shr
enter
lock
jns
add
sti
aaa
push
test
xchg
sub
adc
cdq
sub
aaa
add
jmp
cmps
sti
adc
shl
mov
pop
dec
imul
clc
jle
js
cmp
xlat
sub
fwait
and
pop
test
fistp
sar
vfrczpd
adc
leave
push
sub
push
dec
(bad)
div
icebp
fsubp
loope
mov
enter
inc
in
mov
inc
jmp
jbe
or
outs
xlat
stos
jmp
pop
mov
movs
and
ss
in
xchg
cmp
aad
push
gs
loop
out
inc
in
sti
stos
arpl
test
mov
(bad)
mov
pop
sub
pop
loop
or
inc
xchg
or
repnz
ret
sub
sti
mov
and
loope
loopne
mov
leave
and
out
(bad)
outs
movs
push
ins
pop
mov
mov
test
sbb
cmp
sub
sub
(bad)
sbb
arpl
xchg
and
jg
mov
jmp
inc
jmp
(bad)
aaa
mov
and
sbb
mov
mov
pop
shl
jp
or
add
retf
call
cwde
xor
stos
xchg
mov
nop
adc
ja
pusha
xor
jg
cli
cmp
ficom
test
jmp
std
sbb
and
jbe
mov
dec
enter
sub
pop
mov
jmp
movs
std
or
(bad)
xor
inc
cmp
iret
ins
aas
lods
ins
imul
sub
add
ror
mov
in
loop
sbb
or
sbb
and
push
jg
leave
outs
jmp
ds
(bad)
dec
(bad)
dec
test
mov
and
arpl
mov
mov
in
icebp
cmp
(bad)
mov
pushf
sbb
jae
inc
push
cmp
dec
sti
or
(bad)
ds
jmp
mov
pop
pop
add
add
scas
push
jle
adc
and
mov
popa
xor
add
mov
leave
or
pop
add
xor
jl
out
add
std
cmp
push
in
jecxz
fld
enter
jnp
mov
aas
aaa
enter
cwde
pop
sub
lods
pop
lock
jnp
and
push
xchg
mov
xlat
pop
es
and
mov
mov
ja
mov
inc
jnp
test
cmp
nop
loopne
xor
(bad)
pop
pusha
js
adc
jle
or
inc
mov
add
cmp
jl
jp
dec
xor
push
xor
fldenv
sar
dec
sbb
fadd
cmp
fwait
shr
mov
sub
jp
ss
xor
pusha
inc
data16
icebp
jmp
jle
int3
inc
(bad)
out
jns
(bad)
scas
and
push
(bad)
repz
ja
push
pop
and
in
cmp
inc
jmp
std
dec
pop
out
fadd
sub
lea
jo
push
lock
test
leave
cli
cs
adc
mov
and
mov
dec
jne
mov
loope
lea
pop
shl
lods
leave
push
pop
int3
jbe
inc
jge
lds
dec
std
in
adc
push
movs
cmp
hlt
adc
adc
adc
sub
rol
lds
fwait
cmc
je
push
in
and
stos
out
stc
daa
fld
jg
cmp
cdq
and
or
fld
icebp
cmp
sub
fstp
xlat
adc
dec
scas
adc
xor
std
xor
mov
ss
cmp
out
mov
aas
push
mov
(bad)
in
retf
mov
sub
add
in
(bad)
cli
xchg
ret
mov
dec
push
or
push
fsubr
hlt
fdivr
fs
and
dec
loop
stc
(bad)
adc
push
mov
adc
and
out
scas
fcmovb
mov
mov
(bad)
(bad)
repz
jbe
or
pop
fimul
out
xor
(bad)
push
cwde
jno
loop
adc
(bad)
jbe
pop
mov
outs
fst
mov
fidiv
(bad)
mov
mov
stc
mov
and
xor
(bad)
mov
out
cmp
int
and
adc
ret
cmp
dec
pop
call
mov
fidiv
leave
xchg
xchg
popf
cmp
add
dec
int
or
mov
(bad)
cmps
gs
add
dec
xor
div
cwde
mov
loopne
jl
out
ds
loop
or
arpl
cmp
dec
adc
push
mov
aad
ss
neg
add
loope
mov
sub
(bad)
push
in
adc
add
fbld
inc
cmp
push
dec
push
pop
(bad)
jnp
mov
cdq
je
icebp
aad
and
or
mov
sbb
jle
stos
and
cld
imul
mov
xlat
mov
and
leave
std
ret
xchg
add
push
inc
aaa
scas
or
dec
push
sbb
stc
outs
retf
fdivr
push
add
daa
dec
mov
loopne
bound
push
sub
dec
push
or
int
daa
clc
mov
xchg
mov
jmp
scas
dec
jnp
dec
out
loopne
dec
repz
idiv
jle
and
push
lds
ins
mov
jno
sbb
arpl
jmp
cmps
repnz
cmp
iret
fadd
repnz
mov
jo
jns
mov
shr
add
aas
mov
mov
xor
xchg
add
shr
fdivr
inc
scas
cmp
or
ss
push
add
loope
sbb
dec
add
mov
out
out
fsubr
repz
in
pop
ret
aam
jo
loope
inc
cmp
push
jge
sub
push
(bad)
mov
pop
shl
lock
call
clc
jp
daa
inc
mov
loopne
push
sub
add
stos
int3
mov
push
call
test
into
and
push
lds
pop
push
push
jmp
push
fiadd
and
(bad)
test
daa
enter
push
cmp
add
cli
lods
lahf
inc
sbb
out
aaa
fidiv
xor
mov
sub
loope
jmp
xchg
(bad)
push
int
mov
pop
sub
inc
pop
dec
and
lods
jle
cmps
lods
stos
sahf
movs
mov
jmp
jp
dec
mov
mov
stc
jmp
outs
or
and
std
xor
dec
mov
not
push
adc
arpl
dec
nop
popf
lods
mov
push
loopne
je
enter
jns
push
push
stos
cs
xor
jmp
call
pop
sbb
and
mov
out
cwde
or
sub
dec
jmp
ror
sbb
mov
push
enter
jg
dec
retf
cwde
fadd
xchg
loop
push
int
icebp
out
mov
jle
xchg
and
push
and
jbe
pop
out
and
mov
pop
mov
(bad)
and
push
pop
mov
stos
and
and
fnstenv
out
dec
lds
lods
add
sti
sub
mov
les
popf
loopne
outs
xor
xor
cli
in
out
in
ss
leave
ror
sub
es
sti
jle
out
fnsave
in
and
xchg
aaa
mov
int
sub
sbb
leave
addr16
ret
iret
add
jp
or
mov
push
inc
movs
and
iret
push
xlat
aas
inc
mov
fs
or
lock
mov
lock
add
dec
mov
mov
or
iret
mov
dec
stos
jmp
add
xchg
mov
sahf
or
repz
popf
mov
mov
(bad)
mov
js
mov
js
jno
jno
leave
icebp
or
mov
les
mov
pop
loopne
push
cmp
pop
jp
mov
test
jecxz
repz
inc
push
loopne
imul
jb
adc
dec
mov
out
sub
stos
call
es
shr
push
rcr
and
add
fimul
stos
and
daa
shl
push
mov
(bad)
jnp
and
movs
ds
pop
jl
sbb
out
and
xor
loop
push
and
dec
jns
jecxz
and
stos
push
out
pop
jne
and
push
mov
outs
push
xor
stos
xchg
sbb
movs
stc
ret
cmp
push
jl
jp
scas
cmp
xchg
jae
in
retf
mov
dec
push
jp
cmps
xchg
in
imul
and
fwait
mov
dec
jbe
inc
or
sbb
xchg
push
cli
pop
gs
sub
(bad)
dec
sub
jns
rol
fld
lods
mov
cmp
imul
push
xor
(bad)
sbb
ins
into
ret
jbe
ror
fiadd
ss
sbb
pusha
sub
mov
sub
into
adc
push
std
es
xchg
push
into
loop
mov
data16
push
and
xor
sub
fiadd
add
test
jle
xchg
add
je
mov
mov
fisub
add
sbb
in
sbb
mov
ds
or
inc
or
xor
inc
sub
mov
mov
jmp
xchg
sub
xchg
movs
inc
mov
adc
fidiv
jb
add
dec
or
ss
ret
scas
in
jle
or
call
cmp
adc
sbb
into
and
xchg
inc
stos
dec
jp
loop
jbe
push
or
sar
cli
retf
stos
cli
or
imul
stc
into
and
inc
jbe
dec
inc
call
bound
jl
inc
pop
jb
add
cmp
popa
shl
ja
out
or
mov
fsub
dec
fsubr
rol
sub
cs
mov
in
outs
and
stos
jae
arpl
dec
mov
adc
cwde
(bad)
push
outs
add
pop
sbb
icebp
dec
bound
call
push
in
imul
mov
icebp
mov
jmp
pop
cmps
stos
fcmovnb
push
(bad)
cdq
shl
pop
and
repz
dec
dec
mov
or
and
jecxz
leave
mov
jg
cmps
js
(bad)
mov
retf
enter
jmp
jle
or
movs
cmps
xor
jmp
imul
jl
(bad)
repz
cs
push
aad
call
sub
push
mov
sbb
pop
sub
sbb
xchg
cmp
pop
push
jmp
xor
xchg
movs
jg
xlat
adc
push
pusha
pop
xor
push
aam
aas
xor
push
leave
mov
pop
adc
inc
arpl
mov
xor
or
(bad)
stos
popf
loopne
aas
jp
cmc
push
or
add
loope
test
mov
ss
mov
and
adc
lds
(bad)
popa
mov
sbb
pusha
sub
loopne
dec
push
mov
loopne
dec
dec
inc
inc
fmul
sar
and
in
loope
imul
pop
rcl
mov
lods
fdiv
jno
adc
mov
add
xlat
push
xor
aaa
stos
bound
ret
je
mov
movs
xor
data16
nop
daa
sub
adc
jo
jb
or
mov
and
inc
das
daa
mov
mov
sub
or
stos
or
fucomp
dec
iret
mov
call
xlat
lds
cdq
stos
data16
cld
icebp
push
jmp
inc
jns
and
inc
mov
fisttp
inc
mov
xor
adc
lock
lods
enter
sub
lock
dec
sub
jg
mov
arpl
fisubr
cmps
sub
push
es
inc
lods
int
or
cmc
(bad)
jmp
push
xor
xor
movs
pushf
xor
xchg
aam
test
out
mov
push
loopne
and
rcr
jl
out
cmovbe
stc
mov
les
xor
test
cmp
rol
daa
aas
pushf
(bad)
mov
xchg
push
lods
push
or
jp
cmps
mov
mov
push
mov
cmp
xchg
fsubrp
dec
mov
es
xchg
push
xor
jns
cmps
and
loope
and
and
lock
add
mov
mov
cmp
scas
cmp
loopne
jl
iret
dec
lock
mov
mov
mov
in
push
loopne
stos
mov
sub
xor
lods
inc
(bad)
shr
ins
and
das
(bad)
jmp
ret
mov
and
xor
mov
mov
pop
xor
aaa
jge
jbe
sbb
outs
and
sub
in
pop
jmp
stos
cmp
sub
mov
sbb
fcmovu
cmp
push
test
aam
xlat
sbb
adc
jecxz
cmp
jmp
and
lea
push
mov
fcomp
outs
sub
cs
shl
(bad)
test
add
or
mov
add
add
pop
scas
ret
jo
ja
int3
sub
mov
pop
ins
mov
mov
and
push
leave
fild
cs
mov
sbb
lea
retf
mov
lods
out
psllq
scas
in
clc
pushf
xchg
and
out
scas
out
out
inc
mov
cs
mov
call
mov
xor
jb
aad
sbb
ins
mov
stos
mov
ins
xor
inc
sub
add
mov
test
inc
pop
or
lds
jg
int3
cmp
movs
call
in
je
or
lds
addr16
scas
fsub
sub
into
in
cmps
mov
cld
pop
push
dec
or
cs
or
xchg
cmps
inc
iret
jbe
pop
scas
inc
jl
outs
sub
mov
lea
xor
mov
xor
repnz
jmp
mov
xchg
dec
xchg
mov
das
jmp
cdq
adc
in
pminub
mov
xchg
je
push
mov
loopne
add
ror
xor
mov
or
add
cs
fmul
lods
pusha
inc
inc
adc
(bad)
pushf
push
xor
xchg
pop
sub
xchg
sbb
ins
xchg
(bad)
dec
xor
aam
dec
dec
sub
stos
push
cli
sbb
aaa
into
xor
scas
mov
inc
and
cs
cmp
mov
cs
scas
aaa
icebp
xor
inc
push
push
jp
cs
jno
adc
ret
daa
or
xchg
push
xor
lods
stos
(bad)
sbb
push
pop
stos
sbb
call
ins
dec
mov
or
data16
mov
(bad)
push
pushf
movs
dec
shl
loopne
mov
outs
loope
retf
fimul
mov
scas
cmc
inc
mov
call
pop
imul
dec
repz
inc
sti
add
enter
std
ins
shl
leave
add
mov
loop
ins
nop
sub
mov
into
fisubr
jecxz
xor
jbe
adc
cmp
fnstcw
mov
pop
cmp
mov
int
aas
xchg
sub
adc
and
mov
push
cmp
mov
cs
inc
sbb
popf
cs
jl
add
mov
jno
or
jbe
cs
icebp
scas
sbb
inc
(bad)
outs
(bad)
pop
scas
fdivr
(bad)
xlat
jmp
test
mov
push
cmp
outs
cdq
clc
xchg
cmp
cmp
movs
sub
adc
and
daa
ror
mov
ja
cmps
in
cs
mov
add
add
dec
js
pop
imul
adc
cmp
xor
scas
fwait
daa
mov
cmp
idiv
dec
fidiv
dec
aas
and
imul
call
add
enter
test
cwde
and
ss
jmp
pop
sbb
mov
or
(bad)
mov
mov
adc
inc
ins
sbb
(bad)
into
sbb
mov
daa
ja
push
scas
imul
cs
test
arpl
retf
daa
jb
cmp
or
out
push
or
cs
push
icebp
mov
jae
xor
bnd
je
iret
popa
pop
jbe
add
dec
and
jno
adc
cdq
shl
ja
jae
(bad)
cmps
stos
inc
pop
daa
mov
and
cmp
adc
mov
dec
cmc
fisttp
jg
jnp
outs
or
jbe
dec
push
mov
fstp
xor
imul
lods
and
or
enter
xchg
xchg
jnp
loopne
cs
mov
pop
xor
jne
shl
jmp
scas
push
shr
addr16
cmp
rcr
leave
and
scas
daa
movs
xchg
scas
cmp
out
imul
adc
add
stos
int
ds
xor
ret
mov
repz
(bad)
mov
mov
mov
repnz
shl
dec
ret
test
ins
pop
pop
mov
add
pushf
mov
in
idiv
iret
loop
jbe
in
cs
dec
add
int3
xor
xchg
pop
out
lahf
addr16
pusha
adc
dec
cmp
lods
mov
and
sbb
fimul
ret
xchg
loope
lahf
adc
push
inc
and
mov
sub
jl
sar
xor
sbb
sti
pop
scas
sbb
arpl
lods
lock
rcl
sbb
out
cs
and
inc
mov
aas
jle
scas
ret
xchg
cmps
mov
cs
gs
mov
fistp
xchg
or
pop
xor
and
cs
int
jmp
cs
repnz
call
cs
adc
aas
rol
xchg
adc
inc
pop
pop
cs
test
cmp
push
and
and
sbb
jmp
pop
push
mov
enter
adc
inc
lds
push
adc
sbb
mov
das
pop
xor
test
sbb
mov
mov
dec
jbe
test
(bad)
mov
ins
and
daa
(bad)
in
sub
push
into
mov
adc
jmp
mov
mov
sub
enter
(bad)
mov
dec
sub
mov
sub
enter
dec
pop
adc
sbb
xor
daa
icebp
out
jle
mov
into
fs
cs
mov
and
mov
dec
xlat
mov
sub
xchg
repz
mov
ja
xor
cs
mov
ins
sub
and
sub
push
xor
jmp
adc
mov
aas
sub
loop
mov
cs
ret
and
bound
lods
movs
mov
jmp
cmp
adc
scas
call
psllq
aas
outs
into
mov
adc
cmp
xor
jae
jb
lock
int
aaa
rcr
popa
bound
pop
cs
scas
mov
mov
jb
cmp
test
out
ficomp
mov
pop
cdq
xor
adc
fucomi
mov
push
addr16
xchg
fcomp
aaa
mov
xor
xchg
or
or
add
mov
(bad)
mov
fcomp
push
xchg
sub
xchg
xor
not
fimul
cmp
ss
push
push
pop
or
add
mov
xor
loope
sub
mov
pop
or
or
jecxz
cld
mov
sahf
imul
mov
mov
out
mov
cmp
imul
dec
add
inc
pop
sub
or
adc
jg
shl
cs
iret
jmp
mov
jmp
xchg
or
cs
pop
aad
xchg
cmps
cmc
int
dec
cs
cli
rcr
add
sbb
fs
dec
cs
xor
mov
push
(bad)
leave
inc
inc
jmp
push
sar
adc
push
add
xor
(bad)
ja
sub
lods
retf
fwait
adc
sbb
push
outs
jmp
xchg
aam
enter
outs
jp
into
sub
fdiv
or
or
mov
jbe
xor
dec
leave
repnz
(bad)
mov
lock
(bad)
sub
cdq
mov
dec
aaa
adc
jo
jg
pop
xchg
ins
jmp
dec
sub
test
sub
cmp
icebp
hlt
ror
push
mov
sub
and
movs
shl
in
sub
dec
(bad)
cmp
and
add
sub
gs
mov
or
getsec
mov
into
fs
imul
xor
ss
daa
cmp
(bad)
xor
dec
jle
lahf
ret
jle
outs
mov
retf
jmp
imul
mov
jecxz
jbe
ret
outs
cmps
(bad)
sub
mov
mov
out
jmp
mov
sbb
aas
stos
xor
mov
xchg
repnz
xchg
mov
leave
or
mov
add
stc
cmp
jnp
lock
outs
js
cmps
xor
aad
sub
mov
xchg
cmp
in
adc
mov
xchg
mov
xor
push
mov
cld
aas
lea
sub
mov
movs
pushf
cmp
jmp
mov
mov
(bad)
xor
xor
test
mov
mov
sbb
jo
cmps
fidiv
sbb
mov
popa
cmp
sti
daa
rcl
jle
(bad)
aas
add
cs
aaa
sub
dec
sbb
mov
sti
cmp
and
outs
push
sbb
push
dec
add
push
push
xchg
push
mov
aad
or
push
mov
sar
add
cmp
mov
out
push
pop
pop
dec
xor
mov
ret
test
shr
dec
jge
jmp
mov
mov
out
out
fsub
jle
pop
mov
sub
jae
cmp
popf
ror
maxps
outs
neg
sub
test
pop
sbb
add
bound
xor
mov
pop
inc
pop
mov
popf
mov
fstp
dec
dec
shr
lds
mov
daa
jb
inc
or
pop
arpl
pushf
cs
(bad)
cmp
pop
fnsave
jecxz
(bad)
xor
dec
pop
sub
es
mov
ds
mov
es
xlat
inc
sti
daa
aas
out
jmp
iret
dec
js
out
inc
sub
push
mov
mov
inc
movs
lods
cmp
jb
loopne
call
(bad)
mov
xchg
mov
cdq
popf
sub
push
daa
pop
or
ds
jno
jl
add
movs
cdq
mov
out
test
jno
(bad)
imul
mov
leave
gs
jns
cld
lahf
push
or
push
outs
pop
cmps
adc
jg
and
sbb
ds
psubsw
aam
mov
xor
mov
inc
pop
enter
lods
jge
mov
fdivr
scas
mov
test
nop
mov
jbe
mov
out
loope
es
outs
mov
addr16
adc
xlat
sub
movs
mov
adc
and
push
add
and
inc
in
xor
push
mov
pop
retf
dec
push
xor
test
test
add
mov
cmp
sbb
(bad)
bound
dec
sti
xor
sub
push
leave
cmp
cmp
xchg
jg
push
loop
mov
ins
scas
fst
rol
xor
mov
sub
mov
inc
shl
pop
jg
dec
mov
inc
clc
sbb
jae
sub
(bad)
gs
call
xor
out
rcl
ffreep
xchg
adc
retf
leave
or
sbb
imul
movs
adc
clc
pop
cwde
es
(bad)
jns
xchg
cli
dec
icebp
sbb
push
mov
mov
es
lock
cdq
jne
mov
bound
lock
enter
pusha
shl
fwait
popf
mov
push
mov
iret
jbe
xchg
sbb
fwait
loope
aaa
ror
into
mov
push
mov
into
pop
movs
cs
push
fnstenv
jg
xchg
push
outs
mov
leave
out
jle
iret
(bad)
or
and
loopne
inc
loopne
outs
xchg
ret
push
ja
ss
xlat
or
cmps
movs
adc
sub
jle
(bad)
sub
outs
call
out
adc
pushf
push
jecxz
gs
(bad)
hlt
out
jmp
aam
pusha
mov
mov
or
or
adc
xor
das
out
test
or
mov
shr
test
xchg
mov
mov
(bad)
sbb
inc
outs
leave
jmp
jb
sbb
int3
sahf
popa
adc
hlt
cmp
fdivr
and
ins
adc
iret
cs
out
gs
jb
sbb
xchg
dec
scas
dec
aas
push
push
xor
jl
dec
jp
sbb
add
clc
movs
loop
(bad)
jnp
cs
mov
aas
xchg
jns
iret
mov
inc
out
push
jmp
mov
imul
sbb
daa
jno
inc
mov
sti
outs
cs
bound
int3
into
mov
xor
cli
push
cs
cmp
inc
(bad)
enter
push
xor
fsubr
mov
sub
cmps
ror
push
ins
inc
stos
cmc
js
cs
mov
xchg
dec
adc
sar
xchg
outs
out
scas
cmp
mov
adc
xor
sar
and
aas
xor
(bad)
lea
fimul
aam
iret
shr
xchg
sbb
jne
xor
fcomp
fyl2x
popf
pop
adc
vrcpps
cmova
inc
fs
out
jmp
ins
daa
sub
out
jg
test
enter
xor
mov
cs
je
and
lea
(bad)
popa
mov
out
mov
out
les
lea
scas
(bad)
(bad)
jns
xor
pop
sar
inc
ss
add
fstp
cs
mov
mov
adc
cs
ret
jns
imul
fldlg2
mov
sahf
out
out
cs
imul
inc
sti
xchg
xchg
and
lea
shl
dec
xchg
mov
les
dec
add
cs
stc
repnz
daa
sub
mov
ja
pop
dec
enter
cs
or
mov
cmps
lock
repz
retf
gs
xlat
ror
inc
call
jmp
dec
loope
(bad)
cs
push
int
fdiv
fldcw
push
sbb
xchg
std
(bad)
gs
add
mov
sahf
pushf
rcr
daa
das
mov
xor
sub
cs
popa
pusha
pop
push
xchg
mov
pop
push
cs
(bad)
ss
arpl
ja
or
dec
std
xor
cs
jl
(bad)
push
cs
inc
int3
movs
inc
mov
xor
pop
(bad)
iret
jg
pusha
fidiv
stos
xchg
and
mov
scas
cmp
jg
cmp
cmps
ret
inc
jns
div
cmps
lds
cmc
mov
jne
cmp
fs
adc
bound
or
jae
mov
xor
leave
xlat
lds
xor
jmp
popa
and
cwde
dec
js
(bad)
dec
push
es
and
inc
jle
mov
mov
(bad)
add
mov
push
scas
or
test
mov
and
sbb
add
push
mov
shl
dec
push
inc
sub
cmps
out
(bad)
sar
sbb
mov
xor
es
cmovne
xabort
push
mov
sub
dec
cmp
arpl
mov
mov
xchg
or
(bad)
mov
xor
mov
xor
mov
ret
sub
xchg
jmp
sbb
dec
jno
mov
aad
cmc
push
lods
mov
test
es
cmp
ss
imul
(bad)
jae
dec
sub
jl
pop
and
push
sub
cmp
adc
sub
xor
mov
cwde
and
xchg
xchg
data16
bound
and
loop
and
jg
daa
call
xor
bsf
fdivr
cmp
mov
mov
sub
xchg
mov
sbb
cld
xor
icebp
out
inc
mov
pop
mov
xchg
cld
and
js
test
fisttp
icebp
(bad)
es
fsubr
jne
xor
cmps
stos
fnsetpm(287
aam
jge
fmul
mov
xor
daa
xchg
jmp
cs
test
jle
fdiv
jb
push
adc
or
ds
adc
pop
cs
mov
dec
or
jb
scas
daa
push
push
adc
jle
push
push
push
sub
cmp
xor
cs
rol
and
adc
mov
jnp
or
mov
push
jge
push
and
stos
shl
stos
jne
mov
mov
scas
icebp
mul
add
cs
or
xor
loopne
cs
fs
mov
nop
fcomp
and
das
cs
and
loop
call
add
pusha
pop
sbb
jbe
push
rol
cdq
inc
popa
xor
cmps
jae
outs
lock
out
sbb
jbe
or
mov
(bad)
stos
arpl
mov
jbe
cs
loopne
push
call
lock
pop
fild
jecxz
mov
daa
pop
push
aaa
mov
push
ins
and
xor
test
xor
xor
cs
call
push
sbb
add
cmp
pop
mov
inc
xchg
shl
cs
pop
movs
xor
sbb
(bad)
jl
xchg
rcr
add
int3
aam
test
pop
ss
popa
ret
and
mov
daa
ret
push
sbb
xchg
(bad)
repz
cmps
xchg
jbe
push
adc
cs
loop
adc
retf
push
outs
pop
or
ss
iret
cs
test
(bad)
aad
call
fwait
cmc
scas
inc
cs
(bad)
jmp
les
sahf
ficomp
cs
arpl
imul
aaa
jecxz
dec
sbb
cmp
sahf
out
xchg
mov
daa
xor
ins
ds
scas
dec
or
cdq
cs
in
retf
sar
shr
mov
mov
and
xor
ret
in
pop
scas
loope
bound
cs
and
push
out
inc
push
add
inc
imul
cs
jmp
inc
outs
shl
mov
adc
dec
push
(bad)
adc
fcom
(bad)
sar
fnsave
push
add
sbb
test
lods
jmp
push
lock
push
pop
cmp
ins
test
cmps
bound
and
popf
fnsave
(bad)
jno
jno
and
adc
je
fld
inc
es
popa
cmc
jnp
mov
loopne
ss
adc
add
cmp
dec
mov
xor
dec
xchg
test
movs
out
xor
aaa
data16
push
outs
and
out
jl
xor
daa
jge
push
or
xchg
cs
mov
outs
add
imul
adc
arpl
adc
lds
mov
mov
jb
mov
outs
sub
je
imul
bound
cmps
adc
mov
mov
mov
inc
loop
arpl
ret
mov
sub
pop
lods
or
push
mov
in
sub
inc
jns
jmp
inc
mov
xor
ficom
sub
or
mov
outs
shl
lahf
leave
in
aam
sub
pop
inc
push
push
shl
into
fsub
cdq
sub
mov
test
jg
imul
push
(bad)
lahf
or
cs
and
shl
jno
mov
dec
es
mov
sub
outs
and
inc
pop
pop
(bad)
dec
push
xchg
xchg
xor
out
aas
stos
cmp
mov
cmps
(bad)
dec
retf
rcl
outs
jmp
cdq
(bad)
xor
fcmovnu
mov
sbb
push
push
mov
pop
(bad)
cwde
(bad)
jnp
pop
movd
outs
lea
xor
push
mov
sahf
scas
pop
push
inc
cs
mov
mov
retf
xor
loope
inc
cs
jae
add
out
mov
and
icebp
out
mov
pop
jae
stos
xchg
fbld
sbb
(bad)
sbb
lea
cmp
or
or
mov
sub
mov
inc
aas
pushf
leave
call
dec
jmp
inc
ins
sub
fmul
pop
arpl
push
push
cmp
inc
cmp
fsubr
sti
jl
mov
push
xchg
mov
jmp
jbe
daa
popf
dec
mov
loope
movs
bound
jmp
test
mov
outs
data16
daa
test
adc
lock
inc
cs
rcr
xor
fwait
mov
nop
cmp
jnp
gs
(bad)
cs
shl
into
sahf
loopne
test
fwait
sbb
add
scas
mov
jns
ds
dec
mov
cs
push
(bad)
sub
or
cs
imul
aaa
sbb
fadd
in
jb
mov
or
xor
cmc
outs
popf
xchg
or
loop
xor
std
stos
aaa
dec
xor
cs
adc
cmp
pop
(bad)
and
stos
adc
inc
and
fistp
imul
movs
repz
mov
adc
sub
scas
dec
cld
inc
add
sub
fnstcw
xor
or
das
(bad)
outs
ret
cs
sbb
or
mov
dec
and
ficomp
loop
jae
pop
sbb
xchg
data16
and
lahf
outs
pop
adc
mov
sti
pop
sub
or
out
ret
and
and
jg
cs
loopne
leave
cdq
mov
mov
push
xchg
sahf
fwait
cmps
das
add
cs
js
or
rol
iret
mov
lahf
pop
test
cld
dec
addr16
loop
mov
push
lds
fcom
inc
add
or
mov
stos
pop
add
iret
or
scas
inc
pop
adc
mov
test
pop
fisubr
mov
or
outs
rcr
sub
sub
fiadd
adc
mov
cs
xlat
push
test
or
(bad)
xchg
popf
xor
fisub
cld
imul
sub
jp
pop
sbb
out
ss
cs
push
push
inc
int3
dec
retf
icebp
cmp
or
jmp
sub
cmp
and
mov
sub
(bad)
inc
pop
inc
aas
leave
mov
stos
mov
movs
pop
lock
cs
ss
popa
sar
xchg
cld
mov
xor
pop
pop
xlat
retf
daa
and
test
cmp
rol
lea
xchg
mov
shl
jo
add
stos
pop
pop
xchg
(bad)
std
or
adc
shl
(bad)
js
adc
pushf
sub
mov
lods
call
jne
jae
add
and
pop
adc
xchg
adc
or
xor
aad
pop
mov
out
mov
adc
test
test
jbe
xchg
pop
pop
ins
and
mov
in
repnz
(bad)
push
fdivrp
daa
add
fsubr
adc
mov
lods
int
movs
icebp
adc
aas
mov
xor
sbb
jmp
loope
pop
loop
mov
xchg
scas
dec
sbb
sti
hlt
xchg
xchg
push
lock
ds
rcl
sub
je
adc
dec
hlt
adc
jns
xchg
cmp
cdq
imul
dec
popa
sub
push
add
mov
jge
clc
adc
mov
dec
push
dec
(bad)
scas
aam
pop
lods
out
out
dec
sahf
aas
or
sub
cmp
and
outs
cmp
xchg
cmp
loope
sub
add
mov
pop
mov
jo
inc
cs
jg
dec
dec
pop
xchg
jl
ins
dec
push
push
push
inc
or
sbb
sub
fisubr
arpl
shl
daa
xor
mov
ror
mov
out
leave
xchg
and
js
ja
ror
inc
dec
add
ror
sub
adc
push
inc
or
lods
mov
cs
pop
pop
sbb
cs
jmp
repnz
mov
mov
dec
aas
fild
xor
fldenv
dec
or
jge
call
mov
mov
stos
mov
adc
dec
jl
adc
das
pusha
mov
dec
jne
shl
lahf
and
cwde
fidiv
cmp
add
sar
and
xor
pop
pusha
outs
sub
lods
mov
(bad)
cmp
leave
push
daa
dec
aas
(bad)
jmp
xchg
nop
je
out
mov
push
div
inc
popa
jns
icebp
leave
xor
scas
push
push
jl
aam
data16
inc
aad
adc
ins
jmp
mov
retf
ins
(bad)
jmp
in
ss
sub
cmp
sbb
cvtdq2ps
sbb
add
xor
push
cmps
mov
ror
lods
data16
push
(bad)
inc
dec
pop
sub
sbb
mov
and
xlat
dec
mov
pop
xchg
mov
inc
and
movs
fldcw
jge
int3
out
leave
mov
mov
cdq
icebp
cwde
scas
and
sub
pop
push
fsubr
xor
jg
pop
sbb
sub
sti
mov
cli
cs
inc
dec
sub
jg
push
xor
dec
adc
inc
je
push
into
cmp
sbb
cmp
add
cmc
cs
cwde
out
int3
cmp
jle
ror
xchg
lds
xor
int3
lahf
out
daa
and
dec
sbb
push
mov
or
daa
jae
xchg
out
outs
add
inc
or
stos
push
cs
add
and
mov
scas
xlat
jnp
mov
jns
push
or
retf
cdq
dec
mov
ins
push
bound
pop
cs
mov
js
adc
popa
sbb
scas
jle
add
cmp
jl
inc
pop
fistp
mov
loopne
cli
mov
rol
addr16
xchg
inc
cs
dec
add
pop
cmp
repnz
inc
movs
and
dec
fisub
ret
cs
imul
cs
lds
lock
aaa
jne
retf
lods
push
add
xor
cs
int
add
rcl
ret
mov
scas
loope
fstp
popf
inc
retf
add
daa
(bad)
(bad)
lock
sbb
arpl
adc
fisub
inc
jge
hlt
push
test
or
add
jg
mov
pop
xchg
sub
inc
nop
pop
ds
arpl
(bad)
adc
loope
iret
mov
adc
(bad)
rdmsr
and
test
out
jne
das
outs
and
adc
out
inc
repz
in
mov
inc
ret
adc
data16
push
(bad)
pop
scas
arpl
cs
push
cdq
fstp
sbb
or
cmp
adc
mov
popf
out
(bad)
cdq
les
inc
aaa
cs
mov
ret
nop
cdq
fsubr
hlt
stos
and
imul
cmp
inc
mov
test
mov
(bad)
cli
cs
idiv
push
sahf
(bad)
mov
xlat
push
add
push
dec
arpl
push
cs
xchg
lods
gs
jmp
cs
sub
fcomip
inc
inc
pop
ins
cmps
mov
jle
rol
test
rol
inc
mov
pop
in
std
jae
popa
push
cs
push
or
mov
xchg
sti
jmp
fwait
xor
mov
push
sub
mov
pushf
das
or
cmps
out
jne
ror
or
cmp
push
mov
sar
adc
push
(bad)
retf
cmps
sbb
(bad)
mov
pusha
jp
push
sub
sub
pop
xchg
jmp
cs
jge
mov
or
push
adc
int3
sbb
sub
bnd
aaa
cs
test
imul
add
dec
dec
add
mov
adc
sub
jae
out
push
xor
dec
or
scas
out
mov
daa
push
fisubr
test
mov
and
mov
dec
xor
inc
pusha
mov
iret
dec
sbb
pop
dec
adc
cld
mov
mov
xor
fbstp
and
push
push
lods
aad
pop
dec
je
lock
into
cmp
mov
mov
imul
fstp
aam
aas
test
sub
pop
call
or
jns
dec
rcr
jmp
aad
pop
xchg
and
mov
fiadd
in
movs
retf
neg
fsub
ret
sub
sar
cmps
div
lahf
sub
test
push
ret
mov
ins
cs
sbb
cmp
inc
cs
pop
mov
repnz
fimul
mov
xchg
push
imul
lds
add
xchg
retf
xchg
mov
add
repnz
out
ins
fist
cmp
and
je
jb
mov
out
loope
pop
in
in
(bad)
mov
je
xor
pop
js
ret
pop
test
dec
in
scas
pop
sub
retf
pop
shl
loopne
out
cmp
ins
pop
sub
jmp
lea
loop
imul
or
scas
test
daa
dec
mov
(bad)
ds
cwde
pop
(bad)
scas
jmp
out
jmp
sub
cmp
ss
xor
and
aam
sub
in
jne
lods
jle
dec
sub
cwde
cmp
out
jno
mov
leave
test
xlat
and
test
sbb
inc
add
stos
push
fld
imul
sub
jp
sub
sub
jge
loop
arpl
(bad)
sbb
retf
inc
or
out
aam
daa
(bad)
lods
stos
(bad)
out
and
bound
push
and
add
dec
push
sbb
inc
lock
pusha
ds
push
sub
pushf
(bad)
sub
push
dec
fs
fisub
movs
cs
mov
push
shl
rol
push
cwde
icebp
(bad)
jne
sub
leave
dec
xchg
loope
push
lods
out
into
fs
in
bndstx
xor
aad
divps
pop
test
mov
adc
sub
inc
jnp
cmp
nop
push
shl
add
pushf
sub
add
xor
xchg
aaa
cmc
(bad)
cs
add
sub
outs
sub
leave
adc
adc
dec
cmp
stos
loop
(bad)
popa
mov
or
jmp
xor
call
jecxz
jnp
xchg
jmp
cli
pop
out
jl
jmp
mov
ror
add
cmps
xlat
out
and
es
xor
clc
shr
out
jle
cmc
inc
or
shl
in
dec
sbb
and
pop
sub
and
(bad)
out
sbb
mov
lods
jae
and
inc
mov
mov
cwde
and
(bad)
daa
aas
bound
stos
jns
ins
xchg
cmc
pop
mov
and
jmp
inc
(bad)
fiadd
lds
pop
mov
outs
jne
jge
ret
or
stos
ds
scas
mov
add
cmp
xor
sub
push
icebp
xchg
sbb
mov
cdq
and
scas
mov
(bad)
jmp
sbb
and
ds
out
xlat
mov
xchg
pop
cld
push
xor
leave
xchg
add
popf
sub
jnp
mov
mov
mov
xlat
jge
mov
dec
mul
je
or
sbb
sub
jle
call
mov
jo
leave
dec
cmps
xchg
xor
adc
add
xchg
arpl
cmc
loop
rol
push
lahf
pop
dec
inc
cmp
and
dec
call
xor
es
ins
pop
xor
cdq
adc
fs
push
add
scas
inc
pop
adc
push
sbb
bound
pop
adc
or
addr16
pop
pop
adc
cmp
sub
movaps
cdq
push
mov
add
sub
inc
push
lock
jmp
ret
mov
xor
xchg
sbb
dec
mov
mov
ret
jmp
add
call
mov
or
cmps
retf
dec
and
sub
scas
or
cdq
test
pop
mov
sub
loopne
mov
into
in
cmps
fistp
fcom
lds
push
stos
mov
lods
mov
sub
adc
lds
(bad)
rcl
dec
aas
sub
mov
outs
inc
ins
repnz
xchg
cmp
jmp
push
fisub
mov
push
adc
xchg
push
outs
daa
mov
mov
popa
adc
stc
sbb
push
imul
xor
push
mov
sti
outs
scas
int3
test
dec
cs
or
xchg
sub
(bad)
xor
ret
adc
std
pop
ret
sbb
xor
or
cs
fsubr
repz
fldenv
push
dec
xlat
imul
xchg
jl
mov
sub
(bad)
lods
push
test
in
retf
data16
push
jmp
cmc
push
movs
lock
add
call
jmp
sar
sbb
xchg
cs
enter
pop
jmp
sub
push
div
ucomiss
xchg
cs
fwait
das
and
in
sar
out
sbb
out
(bad)
cs
popf
imul
cs
fstp
adc
and
and
retf
jmp
out
stc
sub
and
jae
ins
sub
ds
and
pop
xchg
je
daa
call
pushf
int3
or
xchg
jp
scas
jmp
pop
pop
sub
(bad)
(bad)
enter
ret
xchg
out
pushf
sbb
(bad)
cs
in
mov
sub
jns
sbb
scas
cmp
and
jno
int3
xchg
pushf
mov
sti
jbe
clc
xor
adc
arpl
es
fld
push
dec
ins
sahf
xor
sbb
inc
(bad)
sbb
jmp
lods
clc
cmp
jmp
jbe
pop
(bad)
pop
dec
and
xor
pop
and
leave
mov
(bad)
push
scas
jnp
ins
mov
inc
sub
sbb
(bad)
or
fcmovnb
mov
cs
(bad)
cld
mov
nop
enter
in
push
dec
mov
test
cmp
pop
mov
mov
mov
test
cs
stos
pop
imul
lahf
jnp
ret
arpl
mov
push
add
in
repnz
in
and
lea
pop
es
push
lods
shl
mov
jle
xchg
das
pop
jno
fs
or
not
cmps
dec
arpl
scas
jl
mov
movs
loop
xchg
jns
push
lock
lods
and
and
pop
aad
into
repnz
xchg
or
sub
pop
in
inc
cmp
push
xor
dec
jnp
push
out
test
pop
dec
in
pop
sub
daa
jbe
(bad)
movs
outs
sub
cmp
enter
(bad)
cmp
adc
xor
leave
cli
lea
and
add
jle
adc
js
cmp
push
call
cld
into
inc
adc
cmc
cmp
int
push
and
mov
xor
lods
fcomp
mov
or
and
jnp
jae
iret
fnsave
mov
nop
xchg
xor
rcl
icebp
mov
js
pop
cmp
pop
mov
ins
iret
pop
push
jbe
pusha
cmp
sbb
out
cmp
xchg
sub
ds
mov
and
cmps
mov
inc
mov
mov
xor
repz
cwde
cs
(bad)
and
ror
cs
jbe
cmps
(bad)
movs
dec
cs
ror
cs
mov
mov
out
mov
cs
das
cmp
push
inc
inc
les
dec
shl
mov
out
das
pop
xchg
xor
sub
jle
in
out
clc
mov
xchg
movs
cs
jns
pop
aas
pop
push
mov
mov
ja
jmp
xchg
(bad)
push
push
ror
sub
cmp
add
dec
outs
fcmovbe
xchg
mov
cs
in
inc
pop
and
push
sti
pcmpeqb
scas
imul
jbe
xchg
outs
mov
test
scas
jb
sub
aam
icebp
xor
push
adc
add
xor
scas
push
or
(bad)
adc
cs
inc
imul
adc
mov
js
fist
cmps
fiadd
lods
aam
cs
test
sar
xchg
mov
adc
jne
test
pop
inc
add
aas
push
ss
push
pusha
adc
or
adc
das
sbb
jp
loop
inc
mov
jbe
inc
sbb
(bad)
data16
dec
xor
add
or
push
xchg
push
test
mov
xor
push
or
cmc
sub
jg
jns
fst
push
retf
sbb
cli
fsub
xor
fdivr
(bad)
push
xor
or
mov
movs
aam
push
adc
cmp
leave
je
add
inc
sub
data16
adc
push
add
jp
fs
inc
mov
add
mov
jecxz
xchg
repz
scas
adc
leave
lahf
scas
cs
and
rcr
add
jge
xchg
addr16
scas
push
(bad)
xor
inc
add
cmp
push
inc
or
dec
xor
stc
xchg
cmps
push
mov
sub
(bad)
adc
mov
adc
mov
lods
sbb
rol
mov
mov
retf
clc
mov
ds
call
xor
sbb
inc
iret
daa
cmps
xor
jmp
jle
xor
xor
pop
sbb
inc
pop
aaa
dec
aam
and
inc
test
ins
shl
lea
adc
out
aam
cmc
jp
aas
jge
xchg
loope
hlt
mov
fwait
xchg
sar
pop
jecxz
push
mov
cld
xrelease
cs
mov
daa
(bad)
xor
cmps
cs
pop
sbb
lods
cmps
adc
loope
xchg
movs
icebp
fadd
jns
jne
cli
lea
retf
in
in
mov
mov
lea
push
retf
sub
out
xor
add
rcr
je
dec
mov
ss
or
adc
cmps
jecxz
jb
shl
int
adc
mov
fst
sbb
sub
dec
(bad)
(bad)
std
push
add
popa
fadd
lods
sub
ficom
push
call
inc
xchg
sub
inc
or
pushf
push
(bad)
mov
cld
mov
xchg
sub
cs
ret
pop
lock
cs
adc
(bad)
pop
adc
pop
scas
mov
mov
inc
shr
dec
test
retf
iret
aaa
fucomip
rcl
push
adc
aam
rol
loopne
xor
inc
ja
sbb
cs
sub
sub
mov
loop
(bad)
and
adc
fstp
enter
mov
daa
or
or
push
outs
lahf
xchg
sti
cs
cmp
shufps
shr
test
aas
es
lock
mov
scas
ret
pop
outs
xor
pop
dec
pop
scas
mov
jmp
mov
mov
adc
cli
xchg
jo
jmp
fmul
inc
cs
inc
js
push
adc
mov
icebp
mov
daa
mov
mov
jo
dec
add
outs
add
push
pop
cmp
cs
stos
cmp
pop
cwde
movs
cs
jno
sub
sbb
jge
fwait
cs
ret
xchg
mov
pop
and
out
aaa
mov
mov
xchg
xchg
or
xchg
into
adc
cld
ss
jbe
and
cmp
jne
(bad)
push
mov
push
(bad)
mov
xor
mov
inc
bound
cmps
mov
repz
mov
in
test
sti
pop
jmp
jl
(bad)
mov
sub
out
xor
add
push
xchg
cs
(bad)
fs
popf
mov
ficom
test
mov
movs
out
popa
adc
or
mov
enter
rcl
(bad)
pop
movs
out
xor
jl
and
lea
(bad)
jg
sbb
leave
test
pop
pop
lods
adc
test
sub
sub
jns
mov
and
push
gs
add
pminsw
sub
pop
xor
addr16
sbb
cs
mov
lods
jg
xchg
xchg
(bad)
cs
aad
pop
adc
out
adc
mov
jl
sub
and
outs
nop
fisubr
xor
loopne
int
into
cdq
xchg
mov
outs
push
sbb
xor
cs
mov
mov
adc
lods
outs
sahf
cs
cmp
cs
bound
pop
clc
or
adc
aas
ins
fdivr
lods
leave
sub
out
mov
cmc
cs
test
mov
sbb
mov
repnz
scas
daa
jne
xchg
xor
dec
add
fdivr
xor
adc
xor
cwde
ins
inc
js
dec
pop
sub
mov
jecxz
icebp
push
cmc
sub
jle
push
or
das
xor
jnp
jmp
sbb
or
pop
cs
xlat
and
push
cmp
and
and
iret
mov
stos
cdq
popf
jae
rcl
pop
xor
stos
hlt
jmp
mov
mov
and
pop
adc
pusha
(bad)
pusha
mov
xchg
(bad)
shl
mov
fild
neg
add
cwde
push
push
and
jb
xchg
or
sub
xor
scas
mov
stc
fcmovne
xor
xchg
inc
fcom
jmp
lahf
shr
pop
pop
add
xchg
xchg
inc
inc
add
cld
jnp
imul
std
bndstx
xor
xor
inc
inc
loope
sub
dec
sub
pop
pushf
or
push
xchg
sahf
push
pop
mov
xor
sbb
mov
push
dec
sbb
out
in
addr16
lods
repnz
pop
leave
or
push
jmp
jge
sti
fdiv
and
sbb
add
fdiv
fidivr
jle
jbe
dec
sub
rcr
mov
push
cmp
pop
leave
cmp
into
out
cmp
test
mov
mov
pop
clc
movs
xor
sbb
mov
add
out
std
daa
add
inc
int3
mov
out
mov
ror
imul
xor
or
outs
lea
(bad)
mov
cs
loope
lahf
enter
cs
cmp
lock
fst
cs
sub
cs
jae
mov
jg
mov
and
mov
daa
xchg
xchg
movs
ficomp
and
xchg
or
xor
xor
ds
mov
daa
sbb
sub
jno
dec
push
ss
jbe
add
jnp
fwait
jns
jo
pop
xor
icebp
dec
cs
sbb
jno
pop
shl
movs
mov
and
cs
lea
aas
fcmovbe
cld
or
shr
dec
cmps
cdq
aam
repnz
cmp
lahf
cmps
xor
scas
test
cs
rol
shl
xor
fist
mov
(bad)
sar
ins
add
aaa
adc
jl
in
push
out
enter
ss
aas
adc
cs
or
adc
or
xor
ret
add
fisttp
jo
cs
mov
shr
sti
cs
sub
cmp
sbb
retf
daa
nop
mov
dec
test
lods
cmps
cs
addr16
stc
mov
cs
or
sahf
sar
and
lahf
(bad)
mov
mov
push
aas
clc
cs
push
pop
test
pop
dec
ficom
iretw
mov
mov
sbb
xchg
xchg
jmp
inc
(bad)
sahf
cli
xchg
cs
not
iret
ret
adc
(bad)
cmc
and
out
sub
mov
imul
xor
in
sahf
out
cs
lock
out
sbb
out
test
push
fst
inc
inc
cs
add
repz
xor
mov
mov
adc
test
push
loop
das
loope
mov
mov
test
cs
jecxz
jae
or
jmp
repz
fs
es
movs
mov
cvtps2pi
pop
sahf
popa
pslld
mov
inc
scas
out
mov
sbb
cs
jg
pop
or
pop
pop
ins
sub
and
imul
cs
int3
leave
(bad)
out
addr16
sbb
jb
cs
iret
icebp
add
popa
pushw
add
jbe
cmp
stos
jae
adc
add
out
cld
cs
addr16
mov
mov
shl
xor
out
mov
inc
xor
stc
cs
imul
or
dec
inc
or
and
xor
and
inc
call
test
sub
sbb
jbe
ds
cli
push
lods
dec
mov
dec
pop
sub
sub
sahf
ret
push
inc
int
push
mov
cs
(bad)
jmp
xor
xchg
mov
jecxz
pop
and
shr
cld
loopne
mov
out
icebp
pop
movs
xchg
(bad)
sub
jle
inc
into
mov
xor
sub
aaa
adc
retf
cmps
cs
ret
ja
(bad)
and
outs
stos
mov
inc
jp
jae
lds
inc
and
cmp
fst
out
mov
repz
cmp
xchg
test
gs
mov
cs
addr16
xor
jmp
out
test
aas
scas
adc
jmp
sahf
xor
sbb
(bad)
out
xor
aam
pop
sub
mov
push
push
loop
mov
shl
xchg
call
sub
stos
ds
fldl2t
test
test
mov
stos
aam
xchg
mov
in
adc
add
stos
cs
mov
jp
sbb
adc
rol
inc
add
dec
and
mov
dec
sub
femms
lahf
(bad)
dec
sahf
mov
cs
sbb
inc
and
pop
daa
(bad)
call
xchg
mov
aaa
xchg
arpl
fidivr
cs
add
in
or
adc
xlat
cdq
jmp
outs
xor
test
add
cmp
ret
int
mov
test
(bad)
movs
rcr
les
mov
adc
cmp
mov
inc
sub
dec
mov
pop
out
xchg
gs
jle
fwait
mov
push
jne
ret
mov
bound
pop
sbb
daa
lds
jnp
aas
fstp
int3
pop
push
ss
add
pop
stos
in
pop
shr
ror
nop
cs
jle
outs
loope
(bad)
cs
(bad)
push
dec
ret
inc
(bad)
bound
cs
push
popf
mov
in
mov
shl
jne
mov
pushf
push
add
inc
cmp
or
adc
cs
aad
out
in
(bad)
jle
jmp
in
fcomip
stos
sub
outs
shl
cs
sar
pop
add
in
cs
xor
cmp
mov
shl
adc
mov
lock
adc
call
aas
rcl
dec
clc
daa
in
lds
cs
enter
inc
in
out
inc
movs
pop
call
imul
and
int3
xchg
scas
push
mov
enter
repnz
and
(bad)
pop
push
div
mov
mov
retf
out
icebp
push
push
inc
mov
adc
popf
ret
ror
dec
mov
leave
push
pop
sbb
out
cmp
shl
xor
mov
out
fimul
ins
cwde
pop
and
xor
xor
retf
mov
pop
jne
loopne
das
sbb
popf
adc
ret
adc
adc
(bad)
push
add
fisubr
movs
icebp
add
jp
sahf
mov
push
scas
call
add
inc
push
xor
ror
mov
outs
mov
jecxz
jle
dec
jp
stc
jbe
push
arpl
xchg
es
jb
mov
jmp
pop
rcr
jle
out
dec
cmps
and
out
ss
stos
(bad)
ins
aam
jle
sub
or
dec
in
into
xor
leave
push
add
in
(bad)
in
mov
sub
add
scas
xlat
ret
fistp
add
in
nop
jae
aam
mov
ins
shl
cwde
and
cli
cpuid
jmp
cmp
dec
jmp
leave
cmp
sbb
jge
xor
fidiv
mov
lea
call
in
test
gs
in
lock
scas
(bad)
movs
ret
adc
pop
stos
xor
test
sbb
outs
push
mov
cmp
push
jae
jecxz
test
leave
outs
xchg
xchg
push
xor
test
mov
push
dec
sahf
lods
es
enter
aad
cmp
xor
lock
sti
out
dec
lods
jmp
inc
push
and
jle
fadd
int3
shl
cmps
adc
ret
jl
es
pop
stos
cs
or
mov
xor
arpl
inc
pop
outs
hlt
pop
(bad)
xor
dec
or
loope
pusha
daa
xor
in
jno
mov
sbb
icebp
adc
stos
pop
and
call
iret
jg
cs
gs
ds
retf
imul
out
cs
fild
inc
mov
popf
nop
xor
and
cli
cwde
jg
adc
push
in
mov
ins
xor
pusha
stc
imul
jg
push
in
outs
jb
sub
fmul
stos
sbb
or
pop
shl
inc
push
adc
pop
cs
jne
jg
lds
cmp
inc
jnp
cs
outs
xchg
iret
lock
push
shl
je
inc
lds
dec
pop
add
and
in
aad
clc
movs
sub
xchg
cmc
into
pop
and
mov
mov
fcomp
jle
xchg
xchg
push
into
pop
ins
repnz
cmp
je
outs
pop
stos
in
movs
xchg
xchg
shr
dec
jmp
and
out
sbb
repz
pop
pop
xor
mov
mov
push
mov
jo
jnp
jg
mov
pop
cmp
out
cs
pop
mov
repz
out
scas
push
imul
cs
rcl
and
inc
movs
out
inc
add
push
fisubr
mov
psubsw
jb
lods
lahf
(bad)
mov
add
(bad)
mov
icebp
cs
imul
cs
jl
push
push
jno
aas
icebp
or
and
xor
div
(bad)
shr
iret
xchg
sbb
cli
pop
sbb
stos
inc
mov
daa
mov
sar
dec
jns
fwait
jnp
lahf
sbb
adc
retf
add
jbe
inc
cs
cwde
mov
mov
sub
retf
das
sub
cmps
inc
sbb
hlt
(bad)
xchg
pop
pop
adc
cs
in
push
sar
sbb
loope
mov
lods
inc
int3
shl
test
push
jmp
jne
inc
cmp
and
fs
leave
pop
jae
mov
leave
ret
jb
push
jmp
cmp
push
mov
cmps
jp
ss
je
(bad)
or
std
cmp
bswap
fidiv
bound
push
mov
jne
call
and
in
je
adc
jno
dec
outs
xchg
mov
leave
pop
jno
sub
fist
inc
sub
cmp
and
cs
rol
nop
adc
jmp
mov
rcl
xchg
xchg
sbb
daa
pop
lods
push
sbb
push
xchg
ins
inc
sub
inc
pop
xor
jl
wrmsr
int
cmp
and
lea
push
cdq
cmp
jno
push
or
sahf
fistp
and
push
xor
add
adc
xor
retf
cmp
js
pop
inc
sub
cmp
repz
or
loopne
add
sti
stos
mov
pop
dec
and
adc
scas
push
shl
xchg
mov
inc
dec
sbb
push
cs
iret
ret
adc
mov
inc
outs
lahf
dec
stos
in
(bad)
pop
in
xor
sbb
fld
adc
mov
cmc
in
xor
retf
sbb
out
hlt
xchg
loopne
mov
gs
xchg
inc
mov
xor
outs
cmps
and
dec
retf
iret
cs
jns
arpl
(bad)
xchg
fcmovu
add
sbb
mov
jmp
push
cs
aam
add
ds
dec
mov
fcom
les
pop
cli
imul
cmp
jge
loope
push
test
pop
cs
mov
cs
test
test
in
(bad)
mov
jno
(bad)
mov
mov
jae
xlat
mov
sti
test
call
outs
mov
add
retf
push
fdivr
icebp
repz
inc
cs
mov
jmp
cs
xor
les
dec
shr
xor
cmp
daa
or
add
cs
or
(bad)
xlat
sahf
xor
adc
stos
add
stos
mov
shr
and
pop
mov
iret
outs
push
fsubr
mov
enter
iret
inc
pop
inc
cli
xor
ror
cmp
cmp
xchg
in
scas
test
jmp
cs
daa
sub
push
pop
adc
sub
ins
stos
outs
fiadd
push
lock
add
cmp
sbb
popf
dec
iret
adc
sar
ins
and
adc
add
jle
rcr
imul
adc
stc
pcmpeqb
nop
sbb
sub
loopne
scas
pop
(bad)
fcom
dec
xor
mov
sbb
cli
leave
cs
xchg
inc
pop
or
fild
rol
push
cs
test
jge
addr16
xchg
push
enter
in
cs
into
pushf
mov
add
or
xor
pop
jmp
fxch
push
pop
aam
cs
add
or
les
mov
ret
daa
outs
fs
and
mov
repnz
es
inc
pop
mov
or
test
movs
inc
and
sub
stos
lds
fisub
ss
cmp
jl
out
mov
test
and
sub
adc
hlt
mov
daa
mov
jle
sbb
mov
outs
fdivp
iret
data16
cs
mov
aam
cs
jne
outs
sub
sti
xor
daa
sahf
or
cdq
imul
mov
and
rcl
cs
cmp
xchg
pushf
pop
arpl
or
xor
aas
fsubr
neg
call
pop
mov
cwde
pop
xor
arpl
(bad)
rcl
mov
add
dec
stos
cs
or
adc
push
loop
mov
fdiv
pop
pop
fisub
jmp
scas
adc
push
outs
xchg
xchg
fisubr
out
sub
mov
stos
mov
push
aam
repnz
outs
push
lock
movs
and
ja
mov
cld
fsub
sahf
mov
dec
xchg
sub
cmp
test
mov
xor
(bad)
cmp
loopne
clc
xor
xchg
fwait
loope
jnp
addr16
sbb
inc
pop
nop
je
and
outs
sub
(bad)
dec
xchg
xchg
push
and
pop
pop
fs
mov
dec
out
pop
daa
xchg
xor
xchg
xor
jnp
pop
push
cs
(bad)
lahf
xchg
inc
push
outs
and
mov
adc
sbb
data16
fisttp
xchg
(bad)
mov
(bad)
loopne
mov
jnp
rcr
push
movs
push
js
mov
std
(bad)
out
cmps
aad
mov
scas
add
clc
dec
mov
or
pop
loopne
shl
fimul
aam
fisttp
(bad)
cwde
loope
(bad)
test
test
inc
(bad)
add
or
inc
or
and
mov
into
mov
sti
dec
stc
inc
jmp
mov
mov
and
jmp
in
sub
out
out
adc
adc
leave
mov
inc
fild
add
cli
mov
pop
mov
into
ret
fstp
xor
jb
sbb
or
arpl
xor
retf
mov
scas
(bad)
dec
jne
and
icebp
and
ss
inc
daa
scas
sub
les
adc
xchg
js
jle
iret
inc
or
adc
inc
sar
and
cmp
mov
mov
mov
test
imul
xchg
cs
ins
mov
push
jp
neg
cs
pop
clc
inc
sub
jns
mov
and
aas
and
add
cld
adc
push
push
sbb
xor
sub
cs
(bad)
rcr
cs
jae
mov
dec
xor
sahf
or
ss
sub
addr16
dec
add
sub
data16
jmp
mov
fnstcw
dec
sub
scas
dec
out
mov
jmp
dec
dec
pop
and
cs
sahf
xor
push
jp
add
and
retf
dec
mov
xor
mov
dec
adc
jne
push
cmp
sub
movs
mov
push
adc
cs
sub
sub
cs
xchg
gs
dec
cmp
push
fadd
jne
lods
mov
dec
inc
adc
data16
add
fisttp
inc
mov
adc
push
mov
cmps
xor
sbb
cmp
cmp
loop
inc
push
gs
cs
iret
sbb
mov
push
stos
cs
fwait
add
sub
xchg
lods
cmc
pushaw
fisub
out
pushf
cs
enter
imul
lods
leave
out
les
bound
ss
cs
xor
test
aam
fimul
frstor
cs
pop
stos
jp
sub
outs
shl
call
sahf
call
pop
in
out
push
adc
cs
mov
add
sbb
outs
inc
in
xchg
arpl
addr16
dec
jne
xor
call
out
dec
cs
adc
pop
inc
ret
xor
cs
mov
popa
cmp
mov
push
loope
sbb
cs
imul
es
fdiv
enter
dec
inc
inc
ja
cs
sub
shl
popf
loopne
mov
inc
mov
and
and
jle
(bad)
xor
ins
retf
(bad)
dec
out
rcl
mov
pop
sub
daa
xor
jbe
or
sbb
scas
into
test
add
outs
sbb
les
scas
pop
mov
bound
sbb
scas
xchg
pop
lods
add
test
rcr
out
cmp
rcl
push
scas
jecxz
push
push
sub
cs
jno
push
lods
add
mov
mov
loope
cs
fwait
arpl
(bad)
mov
cmp
aam
mov
xor
mov
mov
push
mov
sub
popfw
push
aad
xchg
push
adc
ja
imul
in
movs
sub
stos
fwait
cs
jns
int
cmp
mov
repz
fs
pushf
inc
xor
cmp
dec
repz
cld
das
cmp
mov
xchg
mov
repnz
mov
cmp
sbb
mov
shr
push
push
xchg
aas
xlat
(bad)
in
adc
stc
cmp
retf
sahf
shr
adc
mov
fs
push
sub
ret
xor
out
sar
or
test
aas
icebp
int
lahf
mov
pop
jo
cmps
xchg
xchg
push
push
fs
imul
jae
push
add
stos
jmp
adc
mov
mov
mov
in
push
cmp
test
outs
mov
and
pushf
mov
sub
cmps
push
cmps
push
lods
mov
test
push
in
test
mov
scas
in
push
pusha
inc
rcr
xor
adc
test
in
shl
mov
add
dec
outs
cmps
adc
subps
adc
scas
xor
scas
pop
fld
inc
adc
sahf
fcom
mov
test
cs
add
sbb
jno
sar
xchg
jmp
mov
lods
add
out
jae
js
pop
cs
push
pop
ins
nop
out
and
mov
(bad)
mov
idiv
mov
push
xchg
data16
cmps
push
jo
imul
mov
push
ins
or
pop
mov
gs
sbb
xchg
(bad)
enter
xchg
fsub
adc
neg
adc
stos
cs
test
cli
jnp
pushf
cs
movs
iret
rol
or
cs
add
xchg
les
cmp
adc
cs
and
iret
ret
cs
sub
int3
pop
jmp
iret
les
jge
outs
aas
data16
xor
cmp
imul
xor
sub
leave
jecxz
push
fcomp
setg
retf
jae
cmp
or
cmp
scas
scas
sbb
popf
fstp
inc
add
dec
cs
push
inc
cs
dec
jns
js
mov
lock
adc
mov
repnz
push
fxch
sbb
cmc
cs
jecxz
xor
bound
adc
or
push
fdivrp
mov
sub
jg
popa
ja
or
out
sahf
outs
retf
push
or
cs
movs
jmp
test
mov
int
popa
cs
test
retf
xor
xchg
fld
sub
bound
(bad)
adc
dec
fadd
hlt
les
inc
cs
xor
cs
sar
ret
push
add
dec
push
cmc
retf
pop
cs
movs
popa
stos
xor
movs
mov
pushf
pop
div
pop
xchg
pop
sbb
(bad)
add
lods
mov
sbb
out
cwde
add
int
and
stos
dec
sbb
xlat
xchg
mov
cs
mov
mov
mov
call
jge
jns
aad
cmps
sub
in
xlat
test
ret
jg
xor
cs
out
int3
dec
or
lods
shl
repz
push
adc
popa
and
shl
ins
sbb
in
test
add
daa
adc
jl
add
mov
(bad)
adc
cmp
push
push
and
push
cmp
mov
mov
pop
jmp
cmc
(bad)
(bad)
xchg
mov
cmps
ret
pop
cs
loop
mov
dec
sahf
arpl
xchg
fmul
ficomp
cmps
dec
(bad)
daa
jnp
pop
les
xor
cs
cmp
lds
jne
push
es
inc
or
adc
cli
jl
cs
out
fisttp
cs
fisttp
adc
pop
adc
movs
fisubr
cmp
xchg
jne
js
(bad)
sahf
push
xlat
sub
frstor
cmp
cs
popf
dec
pop
and
sbb
xor
clc
or
xchg
ins
mov
aas
push
cmp
add
int3
mov
repz
adc
fwait
cs
xchg
(bad)
iret
jbe
jp
test
push
pop
(bad)
std
cs
pushf
ret
cli
push
dec
sub
(bad)
mov
call
xor
xchg
sbb
aam
sbb
and
pop
(bad)
aaa
sub
(bad)
mov
call
out
mov
mov
cs
mov
mov
pop
stos
dec
cs
sbb
mov
sub
mov
(bad)
mov
scas
jmp
jns
dec
add
bound
std
cs
jl
in
sub
outs
out
jb
(bad)
xor
(bad)
ja
movs
out
xor
xchg
(bad)
xor
sbb
push
push
dec
mov
jmp
hlt
mov
out
xchg
add
fxam
sub
dec
dec
and
cmp
das
ja
in
sub
call
add
ret
sar
in
into
mov
cs
test
sub
out
xor
push
retf
aas
dec
adc
out
sub
sub
dec
(bad)
xlat
sbb
arpl
stc
push
fs
add
in
cmp
push
cdq
out
lock
push
dec
les
jle
fild
repnz
lods
push
or
inc
shl
sbb
or
sub
mov
fidiv
daa
xor
pop
sub
push
push
push
fsubrp
and
xor
push
or
or
aam
cld
repnz
adc
jge
add
cmp
mov
outs
popf
sbb
in
bound
mov
aam
xor
xchg
mov
adc
repnz
fldcw
sub
and
push
in
mov
push
test
pop
dec
mov
iret
loop
js
dec
cmp
jae
into
xor
sub
inc
xchg
test
mov
jb
push
cs
mov
xor
sbb
cmp
push
cwde
scas
fwait
bound
cs
inc
pop
popa
adc
test
sub
jnp
arpl
cmp
xchg
xor
scas
cmovg
fbstp
or
pop
addr16
sub
cs
mov
pop
mov
jo
pop
dec
push
popa
xor
mov
stos
jmp
loop
xchg
jle
pop
and
imul
xchg
fstp
out
fs
nop
cs
out
jns
inc
pop
mov
cwde
xchg
cmp
scas
or
mov
das
(bad)
punpckldq
or
call
add
scas
xor
into
out
stos
pop
and
cld
pop
cs
fcmovbe
test
sub
xor
xchg
test
pop
add
iret
sub
jmp
fwait
push
cs
sti
or
push
dec
or
lahf
pop
sbb
cmp
jo
js
sub
test
das
push
out
lea
cmps
out
aam
cs
dec
adc
jg
rcr
ret
xor
add
mov
scas
xchg
fild
inc
pop
mov
rcl
cmp
inc
and
ins
inc
shl
jnp
mov
xor
adc
jne
pop
mov
(bad)
shr
es
cmp
add
or
les
ret
sahf
aam
sbb
mov
int3
mov
pop
shr
add
adc
mov
and
xor
ret
inc
push
pop
out
ror
xchg
dec
jne
(bad)
aas
pop
ins
scas
sbb
cld
mov
xchg
pop
mov
scas
add
jnp
xor
pop
mov
lea
loopne
push
cs
xor
push
cs
fimul
clc
lock
jne
aas
jbe
jmp
sbb
xor
les
es
inc
(bad)
and
repnz
pop
pop
outs
int
sbb
lea
cdq
(bad)
mov
ins
and
sbb
or
fwait
xchg
xchg
cli
mov
lods
pop
test
mov
div
loop
jns
dec
pop
adc
loope
nop
mov
aas
enter
das
mov
lahf
push
icebp
push
ret
and
sub
push
je
addr16
test
adc
mov
mov
sub
sub
ins
out
mov
dec
dec
std
out
sub
into
fwait
jge
mov
cs
cmps
sub
movs
std
dec
mov
pop
cmps
je
mov
and
(bad)
sbb
and
inc
and
es
test
jnp
shl
lds
scas
mov
xor
add
cld
pushf
sub
xor
fwait
push
out
out
sar
push
leave
shl
mov
mov
popf
rol
scas
or
sti
mov
mov
jnp
(bad)
(bad)
xlat
mul
sti
hlt
(bad)
push
jmp
cmc
and
cs
pop
in
dec
scas
fcom
iret
jg
call
pop
call
leave
mov
xchg
xchg
js
cs
es
lods
mov
dec
add
es
inc
enter
push
cmp
loopne
stos
fdivr
cmps
icebp
cs
(bad)
fistp
xor
push
and
inc
push
xchg
push
out
xor
jno
jno
push
pop
icebp
sti
scas
jmp
sub
jmp
jle
sbb
mov
pop
js
pop
push
scas
fiadd
jae
repz
and
sub
stos
(bad)
mov
pushf
mov
imul
add
cmp
ins
iret
cdq
xchg
outs
fdivr
sub
ret
in
push
jo
or
mov
adc
cs
and
pop
scas
add
bound
adc
push
out
aaa
jns
inc
scas
add
adc
add
mov
fucomi
scas
add
cs
retf
xor
fs
dec
dec
jg
or
jo
dec
sbb
inc
push
es
jns
cs
ja
mov
(bad)
lods
lds
loopne
stos
pop
jmp
adc
and
push
dec
mov
cs
xor
sub
jnp
sar
jecxz
xor
xchg
loop
in
sahf
rol
push
test
cmps
sar
cs
jecxz
dec
iret
dec
mov
daa
repnz
xor
out
mov
sub
cs
enter
or
push
scas
or
sbb
fisubr
inc
lahf
and
mov
push
push
xor
cmp
or
mov
or
ret
bound
fldz
cmp
enter
xchg
lods
call
cs
or
imul
push
jb
das
pop
add
and
mov
fimul
jne
call
cwde
mov
sub
cs
cmovo
sub
push
cmp
movs
hlt
mov
repnz
aad
sub
icebp
inc
sbb
cs
xchg
ja
sbb
and
dec
scas
mov
retf
sub
ret
inc
cs
inc
xor
loop
mov
gs
cmp
cs
and
ja
xor
arpl
or
push
shr
inc
cmp
aad
ins
xor
cmp
and
pop
mov
inc
add
je
inc
cs
pop
inc
inc
repnz
lea
sub
daa
retf
(bad)
xor
or
cmp
cmps
cdq
stc
cmp
xor
popf
sub
or
or
stos
ja
fwait
sar
mov
push
mov
aam
push
push
push
pop
daa
adc
push
jbe
retf
mov
bnd
mov
clc
cld
pushf
out
fisubr
mov
lods
cmps
adc
ins
xor
sbb
xor
cs
mov
in
mov
pop
adc
movs
jmp
addr16
leave
mov
test
cs
sbb
outs
cs
stos
pop
mov
loopne
cmp
sub
ins
jle
cs
mov
outs
adc
pop
xor
mov
mov
stos
and
daa
adc
out
mov
rcr
jbe
jmp
cmp
mov
mov
gs
dec
popf
mov
sti
cmp
in
mov
(bad)
cmp
add
ror
int3
inc
mov
shl
scas
sbb
movs
aam
jbe
test
push
fstp
dec
and
fbstp
xchg
mov
(bad)
outs
lods
sub
sub
mov
out
jecxz
and
test
ficom
out
daa
popf
sahf
(bad)
(bad)
jecxz
dec
xor
lea
jne
sub
sbb
mov
test
mov
imul
movs
jl
pusha
dec
jne
push
sub
push
scas
push
dec
jo
sub
cs
bound
lods
fstp
sub
xor
cmp
mov
sub
aad
nop
mov
je
dec
jnp
daa
xchg
push
movs
mov
rol
mov
cwde
pusha
fnstenv
dec
pop
sbb
inc
xor
idiv
iret
fcomp
adc
jbe
mov
sbb
cmp
xor
push
retf
xchg
mov
jmp
cmp
sub
pop
or
pop
mov
sti
mov
cdq
ficom
jecxz
cs
retf
push
xchg
es
(bad)
fadd
pop
das
xor
push
in
add
mov
cs
cmp
push
push
sbb
js
push
ss
fisttp
cs
adc
mov
sbb
jnp
xor
jl
inc
sbb
adc
shl
pop
ror
xor
movs
push
scas
mov
iret
jne
in
mov
sar
outs
inc
int
fdiv
bound
push
sbb
cs
pop
adc
in
ins
xchg
jg
cli
and
call
and
inc
ins
pushf
and
ret
cs
out
cmp
cmps
jb
mov
xchg
mov
fimul
retf
push
hlt
add
inc
ins
cs
jmpw
std
mov
jb
lds
push
dec
outs
jno
scas
lods
sub
icebp
call
pop
addr16
rcl
xor
jmp
or
into
lea
je
rcl
lods
sub
push
repnz
movs
iret
add
mov
pusha
jle
das
dec
pop
cmc
add
aaa
lea
sbb
pop
or
in
push
xor
dec
and
jmp
xchg
jecxz
mov
push
sti
adc
mov
cs
adc
fisubr
jnp
inc
xchg
cmovno
out
test
xor
xchg
daa
sub
dec
out
stos
out
rcl
popf
pushf
cmp
cmp
mov
inc
scas
sbb
mov
xor
mov
adc
in
add
adc
xchg
scas
and
xlat
mov
mov
xor
adc
sub
into
jge
cmc
ret
mov
sub
or
aaa
jne
push
push
scas
xor
popf
jae
cmp
repnz
jg
mov
adc
mov
dec
or
sbb
sbb
sub
bsf
daa
pop
adc
xchg
fcomp
jae
add
xor
adc
mov
sar
mov
adc
rcr
mov
push
xor
jo
jl
nop
popa
mov
icebp
lahf
or
jg
mov
out
xchg
mov
pop
mov
nop
sub
sub
adc
or
inc
mov
pop
or
shr
retf
cmps
adc
sub
cs
int3
xor
loope
ins
lea
cmp
xor
mov
add
adc
sub
ret
mov
xchg
adc
fmul
scas
ficom
jne
sbb
gs
popf
and
add
xor
inc
inc
sbb
mov
mov
fisub
lods
pop
sub
aam
xlat
mov
xchg
mov
jecxz
bound
and
or
out
and
scas
sub
mov
clc
add
push
dec
xchg
fist
shl
inc
lods
pop
adc
cli
jg
sub
(bad)
jmp
xlat
jmp
fmul
repz
rol
dec
or
adc
inc
inc
mov
or
mov
mov
div
test
in
push
jg
mov
mov
out
jmp
imul
leave
sbb
sub
aad
pop
es
jmp
or
add
sub
in
ds
(bad)
outs
inc
add
les
jmp
cld
sub
scas
cmp
js
dec
stos
dec
mov
movs
(bad)
adc
xor
push
mov
inc
out
push
mov
dec
cmp
cs
das
aas
jl
dec
nop
je
pop
js
test
pushf
cmc
adc
cs
jno
xor
pop
push
inc
cwde
mov
cmp
cs
add
mov
and
sub
(bad)
fs
ror
mov
int
lods
movs
into
mov
rcl
mov
je
jo
movs
call
jle
stos
or
cmps
inc
jne
enter
test
(bad)
pop
scas
mov
sub
push
imul
mov
(bad)
push
dec
add
adc
cs
push
cs
movs
xchg
movs
lock
mov
jne
sub
hlt
jl
clc
(bad)
mov
pop
lock
pop
and
cmc
and
xor
fs
int3
aam
xlat
leave
arpl
cs
icebp
out
sub
sar
xor
std
sub
(bad)
push
aas
js
cmps
dec
fld
mov
inc
dec
cmp
aas
jbe
leave
cs
add
cs
loop
or
adc
jne
mov
pop
pop
cs
stos
in
sub
mov
fcompp
out
xchg
inc
lods
enter
mov
sub
sbb
cli
hlt
push
aam
sub
or
cs
adc
and
push
mov
out
push
call
cmps
sbb
fs
inc
inc
xor
inc
fbstp
loop
clc
leave
cmp
and
daa
jmp
fwait
mov
inc
ficomp
pop
rol
jmp
daa
out
fst
push
sub
daa
mov
scas
cmp
and
xor
in
jae
iret
cmps
leave
xchg
xor
pop
pop
outs
xchg
sub
es
outs
clc
push
pusha
or
push
shl
aaa
push
push
mov
mov
xchg
xchg
xor
dec
outs
out
adc
xor
inc
or
mov
mov
lock
in
cld
pop
fld
scas
ret
movs
outs
cmp
inc
enter
add
and
jl
jbe
fcomp
pop
test
mov
nop
test
mov
cs
push
jmp
daa
test
and
xlat
adc
dec
mov
or
add
jo
fidiv
out
sub
sub
inc
pushf
mov
ucomiss
jmp
rol
test
add
xor
inc
das
and
xor
fisubr
cmp
and
adc
cs
add
xchg
test
(bad)
inc
mov
lods
cli
popa
retf
iret
out
outs
and
into
fs
(bad)
fdivr
sub
call
cwde
cdq
inc
in
int3
bound
cmp
scas
and
sub
ret
shr
push
mov
or
lods
shr
add
ja
cmp
mov
sbb
leave
loop
push
add
mov
retf
pop
or
aaa
push
and
out
mov
pop
ds
js
data16
addr16
xchg
pop
push
aaa
or
cmp
loope
test
xchg
hlt
cs
pop
pop
push
ins
jle
push
xor
js
jne
gs
aas
into
cmc
add
dec
daa
cs
push
inc
pop
and
xchg
pop
shr
lea
subps
inc
mov
cs
mov
add
and
jle
fwait
lods
out
ucomiss
push
cmp
cmps
xor
mov
cmc
into
call
push
push
push
loope
(bad)
(bad)
cmp
cs
mov
xor
cwde
jl
xchg
ret
xchg
outs
out
faddp
out
les
dec
jnp
mov
inc
std
sbb
enter
sub
add
cs
and
(bad)
cs
and
jl
sub
xor
iret
pop
add
xchg
sbb
sti
(bad)
adc
popa
outs
repz
mov
fisttp
adc
jl
dec
cmp
(bad)
ins
push
adc
push
stos
aam
aas
lock
pop
push
cs
inc
inc
sbb
enter
dec
mov
jno
dec
scas
xor
jne
and
cs
or
lods
cs
mov
test
xor
inc
jo
ins
rcl
or
cmp
jmp
pop
xchg
sbb
fimul
stc
enter
xchg
cmp
cmp
and
js
inc
adc
lahf
mov
jle
cld
sbb
sbb
cs
cmp
ss
mov
nop
fs
inc
daa
or
jp
les
adc
sub
cs
hlt
(bad)
adc
dec
dec
sbb
xchg
jae
xor
out
push
pop
jnp
bound
adc
pop
data16
and
dec
jp
outs
push
cmp
dec
or
pop
and
sub
fisttp
dec
call
std
ret
cs
repz
out
mov
cs
clc
inc
call
jo
out
mov
push
fidiv
cs
outs
pop
ins
xor
mov
mov
aas
jecxz
popf
mov
fwait
ja
addr16
or
mov
or
xchg
retf
outs
push
iret
mov
(bad)
int
sub
lods
out
inc
mov
rcl
pop
fs
mov
add
xor
stc
mov
mov
mov
shl
fldenv
jmp
inc
push
out
jg
sub
push
mul
inc
or
stos
imul
mov
fcmovnbe
or
push
rol
and
into
and
gs
or
lods
mov
or
dec
inc
mov
into
inc
xor
out
sbb
mov
xchg
xor
cs
push
add
dec
add
sub
pop
mov
xchg
sub
pop
cs
pop
adc
pcmpgtb
fdiv
ds
jmp
or
retf
daa
ja
cmp
xchg
sub
ret
dec
(bad)
addr16
mov
and
ucomiss
inc
into
xor
bound
test
xor
mov
cs
fcmovb
xchg
sahf
mov
sbb
xor
mov
dec
std
or
mov
add
icebp
cs
test
pop
xchg
and
cs
adc
xor
push
push
xor
stos
xor
push
ds
push
pusha
arpl
cs
mov
in
ficomp
movs
mov
je
push
cs
and
mov
(bad)
cs
dec
lods
mov
test
cs
push
in
scas
(bad)
mov
add
enter
xor
arpl
push
mov
das
sub
fiadd
sti
jg
out
inc
mov
cs
stos
rcr
xchg
(bad)
std
mov
sbb
dec
xor
or
and
dec
jno
cs
xchg
pop
sub
and
add
ficom
std
or
shr
(bad)
rcl
sbb
(bad)
popa
bound
xor
dec
jl
jl
adc
xlat
xlat
cld
leave
les
fstp
dec
jl
sub
arpl
xor
push
sub
jnp
mov
sub
add
jmp
pop
xchg
inc
add
add
sub
dec
leave
and
push
sar
push
bound
dec
adc
nop
imul
and
inc
cmps
bound
or
ret
cmc
fwait
jg
mov
adc
std
or
and
neg
dec
je
jecxz
cmc
es
ret
out
cli
and
add
outs
stos
fcomi
sub
pop
cmp
mov
mov
add
leave
fcom
push
out
mov
and
push
pop
lock
jne
ficom
test
loop
pop
outs
pop
leave
cmps
mov
dec
rcl
push
ret
xor
pop
out
in
jbe
add
xor
xor
push
pop
ja
scas
arpl
es
fmul
mov
lds
xchg
pop
out
(bad)
push
test
fsub
arpl
cmp
inc
stc
test
cmp
sbb
div
push
scas
push
jmp
fmul
push
xchg
jmp
mov
dec
push
add
ror
std
mov
sbb
int
in
rcr
jae
xor
push
outs
push
inc
mov
outs
dec
mov
rcl
or
adc
or
push
jp
pop
pop
pop
mov
mov
push
mul
jo
sub
shr
inc
pop
push
bound
mov
add
shr
leave
div
cmp
enter
arpl
out
leave
add
loope
dec
adc
cmp
mov
inc
fs
dec
enter
xlat
adc
ds
push
mov
jle
inc
jmp
dec
popa
aad
test
cmp
sbb
mov
retf
out
(bad)
sub
jmp
or
mov
xchg
cs
icebp
fbstp
sbb
and
or
fwait
lods
popf
mov
fadd
sub
jb
pop
add
dec
jle
daa
ins
out
jns
push
lahf
rcl
nop
cs
add
cmp
sub
cs
fdivr
shl
cs
mov
imul
out
inc
pop
stos
inc
jae
jecxz
mov
sbb
jne
int3
ins
cs
xchg
jmp
or
rcl
sbb
dec
jno
xor
(bad)
sti
fmul
mov
push
push
ucomiss
arpl
daa
scas
jge
(bad)
mov
pop
inc
add
add
lea
std
jmp
mov
dec
cmp
xchg
push
in
imul
shl
imul
push
lods
pop
stos
rol
mov
jae
mov
lods
xchg
fdiv
das
es
push
xlat
scas
into
xor
sahf
paddusb
leave
scas
fild
cmc
mov
mov
jnp
shl
gs
cli
jle
pminub
cld
dec
outs
outs
lods
jge
add
or
test
mov
movs
add
pop
jg
pop
pop
cli
cs
pop
jp
xor
inc
inc
cs
pop
mov
cmp
test
xlat
mov
cmp
shl
adc
push
popw
cs
xchg
mov
adc
cmp
scas
repnz
outs
bound
(bad)
ja
mov
dec
xor
lods
push
loope
mov
and
outs
mov
(bad)
cs
call
mov
iret
or
cs
xchg
rol
stc
jmp
cmp
pop
dec
adc
push
adc
cs
std
add
pop
call
mov
push
xchg
mov
lods
test
jge
je
mov
pushf
(bad)
les
sub
gs
jo
fiadd
rcl
cmp
dec
fcom
(bad)
sahf
in
sahf
mov
mov
add
mov
lock
dec
inc
shl
aad
add
xchg
and
hlt
dec
mov
je
arpl
xor
sbb
and
in
int
test
adc
fnstcw
adc
pop
mov
outs
data16
push
(bad)
and
cdq
int3
arpl
mov
out
bound
xchg
popa
and
mov
and
sbb
cli
aas
ror
fwait
ret
jg
nop
cwde
sub
leave
inc
addr16
or
movs
shl
cmp
mov
xor
mov
push
and
(bad)
and
ror
leave
sbb
movs
fidivr
jg
cmc
daa
sub
movsx
lods
ss
popf
mov
mov
dec
jle
leave
fsubr
push
cmc
mov
sub
xor
dec
(bad)
push
mov
cmp
ins
pop
retf
out
popf
js
scas
push
xor
xor
loop
in
stos
cmps
sti
scas
xchg
(bad)
jmp
sub
or
add
imul
rol
xchg
cmc
js
ret
into
add
bound
mov
mov
jge
mov
jno
out
pushf
cs
mov
(bad)
xchg
call
jae
mul
lock
lds
mov
rol
pop
sub
push
(bad)
cmp
ins
sub
aas
ss
aas
sbb
jmp
mov
stos
mov
pop
(bad)
retf
mov
xor
jmp
sub
test
(bad)
dec
inc
cwde
sbb
mov
cmc
add
adc
fldlg2
das
xchg
retf
out
iret
mov
popf
mov
sbb
adc
icebp
dec
dec
jne
outs
cmp
add
into
jo
mov
pushf
icebp
fwait
add
adc
call
push
dec
ins
mov
imul
sub
fld
aaa
xor
adc
sbb
cmp
sub
and
jo
pop
bswap
(bad)
sub
aas
stos
clc
adc
jl
mov
fst
sti
je
add
xor
mov
aam
lock
out
jle
lods
je
cmc
jmp
ficomp
ins
dec
jmp
idiv
cs
xor
out
push
pop
rol
and
sub
nop
(bad)
mov
stos
sbb
mov
repnz
sub
push
fild
(bad)
and
sub
not
shr
mov
dec
push
arpl
jne
sar
xor
or
mov
in
stos
aam
loope
xor
mov
push
xchg
shl
pop
loop
lock
(bad)
jmp
or
jo
out
fidiv
pop
xchg
aad
outs
xchg
add
jmp
leave
or
jmp
and
outs
cs
iret
adc
aaa
das
adc
xor
scas
int
(bad)
stos
call
pop
inc
push
retf
daa
add
aas
dec
cmp
daa
frstor
sub
int3
fldcw
cwde
enter
xchg
cld
cs
bound
xchg
sub
outs
push
xor
push
mov
dec
inc
iret
mov
not
rcl
mov
icebp
lds
hlt
push
pop
push
cmps
push
adc
sbb
int3
leave
jge
jno
sbb
sub
jbe
add
(bad)
(bad)
repnz
or
or
out
adc
enter
dec
cs
and
shl
scas
aas
add
cld
out
xor
mov
scas
std
mov
pop
sbb
sbb
test
int3
test
sub
scas
inc
gs
movs
adc
cmps
shl
mov
push
test
into
mov
inc
add
cmps
pop
push
icebp
nop
mov
pop
cwde
cs
lahf
jno
pop
adc
in
adc
loop
sbb
cmp
callw
mov
sub
ret
pop
jmp
or
inc
ror
enter
adc
fstp
cmp
xor
lock
push
dec
and
inc
xor
mov
loopne
mov
dec
out
int3
sub
aam
in
jle
es
stos
(bad)
das
test
jmp
data16
push
sahf
pop
cmp
push
pop
aad
scas
adc
movs
fsubrp
shr
push
or
jl
jmp
ret
xchg
push
test
push
mov
loop
leave
sub
lea
push
or
jl
ficomp
rol
(bad)
jne
out
cs
call
cmps
fsubrp
call
cmp
jmp
je
aas
mov
call
cmp
aas
dec
dec
cmp
mov
cs
fisubr
jnp
cmps
add
dec
icebp
fist
add
clc
lahf
inc
mov
rol
sub
adc
ds
mov
sub
inc
sub
mov
scas
cs
int
sub
fdivr
mov
sahf
outs
dec
xchg
mov
outs
dec
pop
jae
inc
jmp
push
outs
out
and
cmp
push
xchg
outs
mov
mov
xchg
cs
fldenv
retf
sbb
clc
adc
push
jg
sub
mov
sub
xor
cmp
push
jp
fucomp
cld
out
adc
mov
loopne
bound
jb
inc
mov
fwait
xlat
aas
(bad)
fscale
dec
push
das
test
or
cs
pushf
fcmovbe
sbb
cmc
jae
mov
mov
pop
ret
cs
in
movs
cmps
out
add
dec
icebp
and
push
jle
into
xchg
adc
or
imul
jno
data16
(bad)
cmps
sub
pop
push
call
cmp
xchg
je
xchg
and
pop
add
inc
sub
fmul
stc
out
dec
dec
aam
aas
pop
addr16
adc
test
in
mov
stos
cmp
aas
xor
cmc
mov
scas
mov
stos
mov
xor
adc
push
xor
jle
mov
push
iret
adc
xchg
daa
pop
mov
mov
cmps
loope
aas
sub
add
stos
or
cmps
jne
pop
cs
pushf
sahf
jmp
pop
push
inc
or
add
pop
cdq
push
and
clc
or
and
movs
cs
stos
mov
mov
dec
bound
and
jae
adc
xor
push
out
push
xor
or
pop
push
shl
call
mov
jno
cmp
or
jns
or
clc
(bad)
ficomp
jbe
fnstsw
push
and
sub
outs
movs
inc
ret
xor
in
test
push
xor
push
mov
imul
shl
mov
es
cmp
sbb
xor
and
jmp
push
jne
mov
aaa
and
or
test
cmp
cs
call
or
cmp
push
iret
stos
adc
and
and
dec
or
cs
popa
cmp
xlat
push
xor
sbb
out
xor
dec
outs
aas
pop
cs
(bad)
lods
pop
jnp
push
cs
mov
icebp
mov
popa
xchg
retf
(bad)
jmp
mov
ja
inc
shl
(bad)
lock
mov
xchg
ja
add
cs
inc
mov
inc
cs
mov
repz
jns
xchg
push
xchg
and
and
icebp
in
out
shl
cs
mov
mov
mov
popa
xchg
add
cs
jl
inc
nop
pop
cld
aam
mov
fs
test
or
sub
pop
imul
cs
retf
xor
cs
or
frstor
cmp
pusha
add
xchg
in
cld
stos
shr
ficom
cs
pusha
stos
mov
or
push
and
and
jbe
test
cs
(bad)
pusha
mov
in
sub
push
dec
icebp
jbe
mov
push
and
imul
hlt
pop
enter
inc
aas
pop
mov
daa
loopne
jmp
(bad)
cs
jb
mov
mov
or
cmp
cs
mov
scas
mov
mov
push
push
adc
add
cli
jns
xchg
pop
inc
sub
dec
fidiv
adc
jb
ins
mov
movs
shl
push
mov
cld
xor
int3
movs
ja
cs
mov
adc
outs
add
xchg
mov
ss
and
out
test
dec
mov
mov
adc
cmp
faddp
std
js
pushf
aas
mov
mov
outs
xchg
mov
scas
fisubr
call
sub
popa
pop
nop
jb
lock
in
pop
inc
dec
lock
loopne
xor
mov
inc
or
aas
mov
aaa
sub
mov
pop
sbb
mov
xor
sub
shl
jbe
or
jbe
arpl
fsubr
fisubr
mov
out
es
push
sbb
dec
stos
jle
(bad)
imul
jo
pusha
sbb
sub
outs
inc
push
scas
hlt
and
sub
fs
cmp
inc
mov
add
pop
and
fucomi
into
cs
sub
mov
cs
movs
pop
rol
mov
lods
daa
fst
cmc
sahf
jno
cli
mov
pop
xor
fs
push
sbb
imul
test
mov
in
jl
mov
dec
outs
es
adc
sbb
cmp
adc
sbb
push
fsub
movs
cs
or
scas
leave
mov
popf
jp
and
xor
enter
xor
mov
sub
icebp
sub
adc
cs
lahf
jns
cs
xchg
push
inc
xor
fadd
inc
test
shl
adc
dec
outs
in
stos
xchg
xor
xor
(bad)
sub
int3
cmp
xor
xchg
cs
or
jle
imul
loop
out
out
cs
xchg
rcl
ror
jnp
push
jne
test
aas
push
add
pop
pop
push
xor
mul
data16
mov
pop
jl
cmp
repz
les
sub
and
cs
sub
(bad)
pop
lahf
daa
xchg
js
clc
shl
and
shl
retf
cwde
bound
lock
xlat
pop
push
push
mov
int
fwait
dec
cmp
retf
mov
mov
(bad)
iret
xor
xor
clc
outs
xchg
xor
xchg
mov
pop
cmp
cmp
sbb
jle
push
shld
enter
and
push
hlt
cs
ret
xor
mov
dec
cmp
cld
jne
and
lods
adc
cmp
popa
movs
out
dec
mov
dec
push
mov
clc
push
jo
mov
push
pop
into
and
cmp
rcl
and
fs
es
dec
fbld
pop
retf
push
shr
dec
jnp
ins
fcom
scas
repz
fistp
aas
pop
and
pop
dec
mov
pop
imul
je
ins
out
js
push
loopne
mov
test
ja
enter
pop
(bad)
ret
dec
dec
out
cmp
call
sbb
ins
mov
pop
adc
xchg
mov
pop
test
icebp
(bad)
ja
cmp
dec
inc
adc
mov
shr
leave
dec
stc
call
(bad)
scas
(bad)
aam
scas
fldcw
dec
pop
cli
pminub
leave
cdq
dec
sub
sub
xor
dec
(bad)
int3
inc
sub
aam
pop
dec
sbb
sub
add
mov
aas
in
fadd
fsubp
push
pop
jl
inc
jmp
pop
nop
imul
push
mov
push
xchg
repnz
mov
(bad)
sub
pop
pop
ficom
sub
jecxz
dec
jp
aas
cwde
fdiv
jne
hlt
and
inc
dec
icebp
hlt
sub
loope
scas
and
sub
mov
xchg
push
jmp
mov
cs
fdiv
aaa
in
js
cmp
sbb
leave
jl
mov
shl
movs
adc
cmp
leave
fidiv
les
jno
arpl
mov
add
leave
or
sub
push
xchg
pushf
jb
add
push
daa
sub
aam
je
rcr
pop
mov
iret
outs
repz
sar
call
ret
xlat
(bad)
ret
mov
scas
ss
sub
adc
sbb
cmp
push
call
cs
push
cwde
adc
(bad)
bound
mov
or
test
cdq
lock
fadd
and
add
loop
cwde
pop
cs
icebp
mov
sub
mov
inc
stos
scas
imul
movs
(bad)
jo
je
sbb
cs
xchg
fisttp
mov
sbb
push
in
xor
sub
cs
sbb
push
xchg
sub
cmps
imul
mov
xor
sbb
nop
sar
daa
fcos
mov
imul
jmp
hlt
out
(bad)
dec
fisubr
(bad)
shl
out
fucomip
in
inc
clc
stos
ficomp
retw
ficom
push
aas
cmc
xchg
lods
adc
ror
not
mov
mov
arpl
test
xor
pop
lods
daa
cld
mov
(bad)
fld
fmul
sbb
add
ror
pop
cs
adc
jge
pusha
jmp
push
into
and
int
call
jbe
mov
cdq
leave
daa
pop
adc
and
mov
int3
jbe
pop
arpl
cs
mov
xchg
jmp
sbb
mov
fcomp
adc
xor
and
icebp
cs
push
data16
push
loope
aad
adc
xchg
adc
leave
xchg
(bad)
out
lods
test
pop
push
dec
fistp
ins
test
lds
sahf
cmp
or
(bad)
sti
repnz
shl
imul
popa
pop
push
xor
hlt
shr
cmps
mov
mov
stos
sub
cs
cs
addr16
xor
ja
sub
lds
jmp
xchg
test
sub
jnp
mov
mov
add
(bad)
and
push
adc
(bad)
mov
stos
out
in
sbb
sub
shl
test
mov
xor
mov
sub
sub
add
cmp
lock
push
outs
and
je
dec
sti
loopne
mov
mov
adc
leave
sub
fcmovne
pop
pop
fcmovnbe
stos
stc
popa
and
and
jmp
mov
movs
inc
adc
mov
repnz
test
sbb
dec
stos
jle
mov
out
faddp
cmp
je
xor
push
push
loop
adc
mov
(bad)
and
sub
or
jmp
or
mov
aam
sbb
push
mov
mov
leave
ret
fisub
add
cmp
push
scas
sti
push
sbb
cs
dec
cwde
and
or
mov
inc
mov
out
div
ss
je
mov
or
sub
and
imul
movd
jae
data16
push
daa
mov
jo
out
outs
push
jbe
cli
cs
adc
dec
xor
lea
push
push
test
aaa
pop
pop
scas
jmp
rcr
outs
loope
cs
leave
test
xchg
rcr
xchg
cs
fcomp
cs
outs
inc
and
sub
cmp
inc
cmp
aas
adc
ret
mov
lods
aas
dec
mov
dec
fsubr
mov
push
imul
pop
(bad)
aad
call
stc
xor
sbb
cmp
(bad)
fisubr
lods
movs
daa
retf
cmps
in
ror
mov
xchg
xor
mov
clc
stos
sti
mov
out
jp
cs
adc
leave
jno
sub
test
xor
js
out
scas
int
shl
mov
push
pop
sbb
jg
xchg
shr
sbb
lock
adc
jae
mov
cmp
cs
and
test
jp
mov
adc
xchg
loope
adc
not
jecxz
jo
xchg
stc
adc
icebp
and
imul
js
ret
mov
xchg
ficomp
sahf
mov
pop
sub
jmp
push
mov
sub
xor
sbb
inc
pop
cwde
fistp
popf
(bad)
scas
loop
int3
sbb
imul
fdiv
outs
push
bndstx
adc
cmp
add
pop
lea
xor
pop
nop
pop
push
xor
test
dec
cmp
loop
sbb
jp
pop
dec
out
dec
loopne
imul
adc
jne
push
pushf
cs
sbb
pop
pop
cmps
sti
sub
popa
fisubr
fsub
mov
pop
into
test
aaa
ret
xchg
ror
sub
mov
pop
mov
jge
sar
aad
sbb
dec
add
outs
inc
aam
mov
lods
cs
sbb
sub
and
pop
int3
dec
cwde
cs
mov
cs
or
cs
ja
mov
repz
pop
shl
sbb
push
sub
sbb
stos
sub
adc
jmp
ror
xchg
dec
mov
dec
loope
sbb
stos
nop
loopne
sbb
cmps
inc
mov
les
movs
int3
ins
adc
xchg
shl
in
jmp
jns
or
xor
dec
sub
out
cwde
add
mov
aam
mov
push
loop
inc
and
mov
and
add
pop
and
test
mov
push
clc
cmps
and
cs
mov
add
in
inc
or
sub
jbe
xor
jmp
outs
jle
cmp
inc
jno
mov
sbb
adc
or
repnz
arpl
push
es
retf
sub
mov
push
scas
into
jae
sub
shl
scas
jae
in
sub
push
mov
push
(bad)
xchg
or
mov
pop
inc
inc
add
mov
cmp
mov
fldcw
mov
ins
mov
das
sub
jp
sbb
adc
ficom
enter
retf
dec
test
cs
ret
data16
xor
inc
push
outs
aam
dec
and
cs
hlt
aad
mov
dec
push
and
inc
pop
cs
retf
mov
mov
inc
dec
jae
pop
sbb
std
mov
cmp
push
fld
jno
sub
xchg
imul
lods
inc
inc
xchg
enter
cmp
pop
xchg
outs
ins
in
test
jmp
into
adc
inc
ds
jno
cmp
data16
call
xor
(bad)
cli
jns
cs
icebp
adc
mov
adc
inc
out
cmp
(bad)
jne
inc
addr16
into
pop
cs
pop
or
push
cmp
scas
sbb
inc
cs
push
iret
xor
fs
mov
dec
repnz
mov
xor
mov
pop
stos
rol
das
lds
xchg
addr16
enter
jnp
pop
sbb
shr
stc
xor
cmp
sbb
pop
pop
faddp
call
mov
hlt
sbb
jnp
cmp
loope
xor
das
push
jo
scas
stos
es
xor
sbb
cmc
(bad)
jmp
push
sub
mov
cs
cmp
pop
into
cs
jno
mov
(bad)
xchg
loope
xchg
and
xlat
shl
jl
jbe
xchg
xor
out
xchg
stos
jmp
nop
cmps
ret
jge
pop
cmp
mov
ins
jae
cli
add
mov
mov
fcmovnbe
add
call
dec
enter
cs
jno
adc
push
stc
jl
out
dec
sbb
scas
xor
pop
mov
sub
xchg
mov
xchg
test
icebp
lahf
scas
retfw
and
ss
mov
and
sub
in
es
adc
pop
daa
arpl
xor
pop
stos
mov
out
rcl
fidiv
stc
outs
adc
outs
out
xor
mov
push
sub
jnp
iret
std
mov
cmps
mov
lock
out
push
(bad)
loop
xor
and
mov
sar
aas
jle
push
sbb
stc
adc
ret
mov
jecxz
and
popa
stos
xor
in
sub
test
imul
or
mov
lds
ins
add
data16
cmp
ret
pop
adc
and
dec
retf
jg
out
cmps
add
push
inc
dec
aaa
(bad)
sti
call
(bad)
out
addr16
cmp
sbb
xor
aad
fild
loopne
sub
(bad)
data16
pop
jp
dec
out
retf
cmp
leave
ret
mov
out
or
outs
stos
xchg
xchg
mov
xor
pop
scas
dec
sub
cwde
xor
mov
pop
mov
and
(bad)
pop
push
adc
add
scas
adc
aas
mov
dec
aad
cmp
cmp
popa
mov
or
sub
stos
sbb
cli
xchg
sar
mov
inc
push
nop
push
push
loopne
xchg
and
or
dec
movs
and
fnsave
mov
test
mov
pop
mov
arpl
retfw
sti
mov
push
fsubr
(bad)
or
mov
sti
xchg
and
push
jns
cmc
mov
scas
mov
xor
cmp
je
cmp
lods
push
jg
hlt
push
pop
jnp
xchg
push
or
or
mov
ret
mov
xchg
mov
test
js
jecxz
sbb
scas
in
lds
call
inc
xor
push
or
leave
mov
loopne
movs
jle
out
cmc
daa
test
or
loope
aad
cmp
int
shr
xchg
mov
inc
push
add
and
xor
dec
jge
xor
stos
clc
fdiv
fldcw
xchg
mov
jmp
test
inc
pop
push
sub
jbe
adc
and
inc
xchg
into
daa
arpl
lods
sti
pop
xchg
out
(bad)
rol
sub
lock
jbe
cld
mov
int3
xlat
or
(bad)
fst
call
dec
add
outs
sbb
bound
jbe
sbb
fisubr
stos
cmps
fcmovb
rcl
jecxz
sbb
mov
or
sbb
xchg
scas
sbb
pop
out
daa
inc
pop
push
ins
mov
push
pop
mov
aas
mov
adc
and
cwde
xchg
cs
xchg
outs
retf
cli
div
ds
mov
mov
out
(bad)
xor
sub
retf
jno
das
outs
imul
cli
out
push
leave
pop
jmp
xor
cmc
cld
xor
out
repnz
int
repnz
adc
pop
push
dec
dec
daa
push
and
dec
or
or
cs
aaa
jae
bound
(bad)
and
ins
cs
or
rcl
movs
or
mov
sar
int3
or
lea
nop
xor
jno
mov
adc
inc
int
int3
dec
push
push
(bad)
xor
and
fcmovu
scas
outs
mov
test
shl
xchg
or
loop
mov
adc
call
sub
shl
xchg
fisubr
inc
pop
dec
dec
das
push
inc
fidiv
xor
mov
test
bound
aaa
pop
sahf
push
cmp
movs
stos
mov
jp
xchg
mov
arpl
add
sub
scas
push
xor
aas
cmps
jbe
xchg
mov
lods
jle
rol
xor
xor
xor
mov
jno
xchg
pop
add
addr16
cmps
add
lods
call
shl
jmp
test
jbe
fdiv
inc
ficomp
je
cmp
lods
mov
dec
push
xor
jb
and
loopne
mov
push
shl
xchg
(bad)
sbb
cli
add
xchg
inc
cdq
adc
push
cmp
test
loopne
das
imul
mov
mov
and
sbb
out
mov
dec
je
jns
or
mov
rcr
int
rol
gs
inc
nop
cmp
cmps
icebp
test
push
cmp
sub
imul
xor
shr
fnstcw
cmp
push
push
aam
aad
xor
sub
mov
into
es
mov
ja
fstp
neg
adc
sub
add
mov
adc
inc
ss
cwde
push
jne
sbb
test
inc
dec
sub
sub
adc
fsubr
or
mov
pop
ja
pop
ds
inc
fwait
aaa
leave
mov
aas
(bad)
dec
sbb
inc
leave
jo
loopne
inc
ds
inc
scas
lea
test
stos
jg
hlt
in
out
jle
leave
pop
xchg
dec
inc
dec
inc
ds
jb
cmp
mov
push
stos
xlat
push
pop
add
inc
push
mov
dec
xchg
addr16
(bad)
xchg
mov
push
mov
add
cwde
or
fldpi
and
push
xor
jg
leave
cmps
cmp
push
int3
dec
mov
(bad)
(bad)
ja
(bad)
neg
push
xor
lea
dec
iret
cmp
push
jl
add
push
or
cli
ss
shr
sub
mov
cmps
jmp
dec
jp
pop
inc
push
or
aaa
add
xchg
leave
ins
push
sub
jb
jno
sub
xor
dec
rol
sbb
and
sbb
dec
add
or
xor
nop
es
ret
loope
cld
mov
mov
ds
mov
push
mov
and
add
aas
mov
fwait
cmp
inc
cmp
sbb
push
popa
inc
push
or
pop
lods
shl
fdivr
mov
push
add
pop
and
push
stc
stos
(bad)
aam
mov
cmp
mov
icebp
adc
sub
leave
push
and
out
scas
sbb
add
xor
out
scas
cmp
retf
xor
arpl
inc
rcl
xor
jg
push
cmp
into
mov
adc
cs
fsubrp
out
stos
or
sub
cmps
imul
cs
jg
cmp
mov
mov
neg
int3
test
mov
scas
sbb
xchg
mov
and
mov
adc
(bad)
and
inc
in
xchg
imul
mov
fsubr
daa
adc
scas
pop
sbb
in
cmp
xchg
mov
cs
dec
(bad)
adc
addr16
stos
test
hlt
mov
sub
dec
daa
adc
xchg
jb
fild
das
jg
sbb
test
xor
xchg
mov
scas
xor
pop
ins
cs
rol
cs
cdq
out
ror
mov
retf
movs
cmp
xor
scas
adc
out
xor
outs
mov
push
xor
sti
pushf
mov
xchg
movs
jecxz
mov
repnz
xchg
nop
xor
mov
out
push
mov
mov
cs
or
mov
adc
xchg
outs
sub
adc
(bad)
sbb
sahf
sub
mov
mov
mov
jg
adc
xor
daa
cs
sbb
sub
cmc
bound
and
or
cs
movs
push
data16
ret
adc
inc
ret
xchg
pop
xchg
lods
in
mov
or
mov
fcom
cs
ror
inc
adc
out
call
and
fcomp
out
mov
stos
popa
add
test
out
test
xchg
jl
adc
ja
push
xchg
arpl
pusha
cs
loopne
jle
shl
cs
lea
sbb
cs
xor
dec
dec
bound
sub
fidiv
mov
add
cs
wrmsr
pop
aas
scas
sub
popa
test
push
pop
inc
mov
mul
scas
inc
cs
fldcw
dec
fwait
shl
lods
clc
cmp
xchg
pop
xor
movs
bound
fdiv
and
outs
mov
mov
fwait
shl
xchg
cs
sub
sub
push
inc
push
aad
push
scas
lods
cs
mov
int
xor
jnp
pop
xchg
mov
pop
cs
cmp
jmp
push
jb
add
imul
mov
popa
in
add
aam
popa
and
ja
sub
dec
add
mov
popa
add
xor
mov
pop
xchg
add
fs
in
aas
sbb
mov
pop
jae
sub
cmp
out
pop
xchg
cwde
pop
mov
cs
sti
pop
push
test
cs
mov
icebp
lods
aas
xchg
and
(bad)
sar
mov
(bad)
mov
ficom
jno
sub
fwait
aaa
jbe
and
mov
js
push
xchg
jns
push
scas
pop
push
inc
repz
dec
sbb
frstor
jmp
and
sub
popf
test
ret
fst
and
enter
clc
daa
adc
push
fldenv
shl
jmp
xchg
sti
sub
ret
std
ret
cs
and
xchg
push
pop
outs
add
mov
push
cmps
arpl
lock
idiv
push
mov
ret
xor
cmps
lods
xchg
xlat
div
cld
jmp
loope
scas
nop
adc
js
cs
inc
test
test
es
fcom
out
fdivr
cs
(bad)
enter
mov
xchg
loopne
pop
addr16
lock
nop
in
scas
jns
pop
dec
jl
movs
and
stos
cmp
mov
out
cs
xor
clc
idiv
sub
push
sub
add
jo
leave
ins
fldenv
sbb
je
mov
adc
push
data16
in
jmp
cs
sahf
call
in
frstor
pop
pop
cmc
nop
repnz
fst
sahf
dec
pop
dec
shr
mov
sub
jb
push
xor
mov
push
xchg
rol
mov
repz
leave
add
sub
imul
or
ins
gs
sub
call
aad
xlat
mov
or
and
lods
adc
cld
cs
mov
in
aaa
mov
cs
mov
inc
or
das
inc
inc
sub
iret
lea
fstp
out
cs
idiv
jno
mov
cs
ror
jg
mov
addr16
cmp
mov
cs
arpl
outs
and
cmp
push
push
inc
ret
cmp
jp
sub
cmp
ret
cs
push
mov
sbb
inc
je
inc
movs
lea
mov
mov
and
add
pop
xchg
fcom
(bad)
hlt
jbe
inc
adc
mov
scas
mov
jp
dec
into
push
lea
jge
push
std
or
jge
leave
or
and
lahf
cmp
mov
leave
arpl
jle
ret
js
mov
int
add
int3
cmc
push
cmp
(bad)
push
mov
cdq
mov
xor
sbb
jno
inc
mov
add
xchg
movs
lahf
mov
imul
sbb
leave
mov
dec
loopne
fs
pop
out
and
mov
dec
or
mov
dec
mov
xlat
sub
aaa
lods
jmp
les
push
jns
lods
inc
mov
inc
xor
lock
imul
sub
lods
(bad)
aas
jl
aam
into
dec
icebp
iret
xor
mov
fdivr
test
sub
or
cli
out
or
jbe
(bad)
(bad)
push
shr
call
mov
out
jns
add
pop
in
or
push
or
test
aad
cmp
mov
mov
inc
div
jbe
shr
jle
jmp
sub
std
cmc
lahf
(bad)
pop
mov
sub
sub
cdq
jo
jecxz
dec
inc
xchg
hlt
icebp
mov
add
dec
repnz
iret
pushf
repz
in
sbb
jae
push
stc
sub
push
mov
sub
mov
dec
(bad)
fmul
xor
cmp
in
loopne
sbb
push
push
add
hlt
jbe
loop
ss
fcom
sbb
sbb
xchg
hlt
push
cs
ret
pop
push
cs
fs
push
inc
and
inc
jnp
in
xchg
cs
xor
cmp
jno
pop
sub
cwde
cs
push
cs
mov
add
dec
es
push
and
dec
cmp
inc
adc
adc
pop
push
mov
(bad)
cs
or
leave
cs
jne
adc
cs
sbb
add
femms
inc
(bad)
movs
cs
jl
push
popa
daa
add
repz
lods
xor
pushf
aas
cmp
into
sub
loopne
cs
mov
popf
mov
lock
loopne
lods
les
cs
jno
mov
xor
pop
es
out
arpl
fldenv
out
sahf
cs
aam
shl
add
aas
jg
sub
into
repz
out
add
sub
sahf
fiadd
(bad)
pop
xchg
xchg
or
es
xor
cmp
jae
out
mov
mov
add
add
sti
mov
and
(bad)
lods
inc
adc
xchg
sub
sub
and
jno
xlat
lock
daa
or
inc
je
fld
mov
sub
or
or
pop
adc
adc
cli
cmp
ret
mov
jb
movs
cs
inc
pop
jmp
test
dec
cld
cmp
jmp
and
test
into
xor
add
jne
sub
xor
jmp
pop
outs
sahf
cmp
xchg
jmp
pop
rcl
cmp
push
xchg
mov
push
es
cmps
out
inc
push
jl
sti
jmp
scas
movs
loopne
stos
icebp
xor
mov
xchg
out
or
add
and
mov
gs
xor
and
mov
popa
cs
addr16
jb
int3
and
daa
stos
pop
scas
mov
shl
sub
and
stc
test
lea
les
scas
pusha
xor
das
and
scas
stos
and
add
jbe
mov
test
rcr
push
sub
dec
fst
ins
callw
adc
sub
test
inc
out
das
mov
(bad)
call
sub
inc
dec
out
aas
sub
repz
and
pop
sub
ss
cmp
sbb
fild
aad
sub
mov
jp
sub
test
les
and
addr16
push
cmp
sbb
movs
cmp
stos
push
xchg
or
fs
xchg
jbe
dec
mov
outs
xor
mov
and
mov
jo
xlat
ror
sbb
neg
fdivr
add
mov
cli
jne
or
sar
cmp
gs
leave
mov
test
cmp
nop
or
fs
inc
fimul
pop
jne
pop
push
push
aad
sbb
(bad)
and
idiv
jg
ficom
xchg
xor
and
push
cmp
mov
inc
data16
lods
pop
(bad)
div
push
lods
imul
leave
cdq
cld
sbb
out
fcomp
mov
je
add
jg
loope
cs
fdivr
push
add
in
adc
scas
test
sub
(bad)
jo
scas
xor
imul
ss
mov
addr16
add
mov
(bad)
pop
and
sub
call
cmp
push
das
stos
xor
jmp
int3
lahf
push
xchg
sub
adc
fisttp
push
xor
pushf
not
xor
je
push
add
push
lea
test
add
jns
ins
stos
ins
mov
or
cmp
cmp
adc
lds
pusha
ret
jno
sub
jns
push
jp
enter
(bad)
mov
sub
(bad)
shl
pop
mov
mov
jnp
mov
or
imul
popa
into
sub
mov
mov
mov
jmp
fld
xor
jge
(bad)
call
mov
cld
(bad)
mov
je
rcl
out
add
scas
dec
pop
and
mov
push
test
pop
push
mov
data16
ins
(bad)
iret
sub
imul
xor
jae
sahf
sub
push
out
(bad)
mov
jmp
mov
cld
hlt
test
icebp
sub
inc
int
je
dec
scas
sub
mov
ror
inc
pushf
loopne
sub
xor
xchg
xchg
cmp
jne
lahf
adc
popf
sub
ds
jbe
das
(bad)
popa
xor
dec
(bad)
and
lea
inc
mov
pop
dec
jp
xor
or
out
dec
test
mov
mov
cmps
dec
xchg
loopne
xor
call
cmps
inc
jge
xor
js
sub
mov
xor
inc
rcl
xchg
push
or
or
fstp
xor
cs
popa
jns
ins
mov
pop
(bad)
lock
int3
es
sti
cs
adc
xlat
fidiv
push
add
outs
push
mov
loopne
call
loope
inc
cld
enter
adc
mov
sbb
inc
mov
fidivr
jb
jmp
and
fs
sti
ins
repnz
pop
fcomp
mov
pushf
fs
and
out
scas
lods
xor
dec
dec
bswap
inc
sub
call
add
popa
cs
not
loop
jne
retf
xor
daa
push
and
(bad)
dec
imul
enter
data16
add
test
dec
inc
xor
push
adc
xchg
cwde
outs
ret
iret
in
into
xor
pop
jno
cmp
cdq
adc
out
push
hlt
pop
or
jmp
div
(bad)
pop
test
mov
jnp
cmp
mov
mov
out
aam
pop
mov
jge
loope
fld
stc
xor
lods
xchg
hlt
mov
mov
fisubr
es
(bad)
and
jbe
add
repnz
jno
ret
aas
test
jmp
add
shl
mov
inc
cs
xchg
and
xor
add
mov
bnd
add
and
xchg
bound
loop
pop
push
retf
stos
loopne
daa
jmp
test
inc
xor
xchg
jmp
inc
jnp
xor
loop
stos
cs
adc
push
pop
and
mov
adc
test
sub
pop
mov
pop
aad
mov
(bad)
inc
mov
add
cmp
cwde
cs
(bad)
hlt
out
mov
aad
pop
idiv
nop
add
mov
inc
add
cs
cwde
in
movs
sub
fldcw
push
cs
in
mov
add
fbstp
push
sbb
jmp
add
push
test
sbb
into
push
mov
cs
jmp
xchg
sub
xlat
mov
and
lahf
sbb
in
xchg
retf
xor
cs
or
cld
sbb
push
cs
call
cmp
aam
hlt
popa
cs
rol
in
and
arpl
sub
cs
pop
adc
dec
cs
push
or
cmp
repnz
mov
inc
cmps
scas
in
(bad)
rol
fwait
push
cdq
push
jmp
sar
fild
xor
adc
aam
inc
pop
ss
xchg
sti
addr16
or
jo
outs
cld
mov
arpl
sahf
mov
ror
lea
out
xor
mul
mov
jle
in
push
jmp
jl
adc
mov
ins
jmp
stos
rcl
sub
mov
nop
dec
pop
cmp
sub
scas
cmp
fsubr
aaa
sahf
and
lods
stos
mov
das
lock
lods
je
fcmove
cwde
cmp
inc
sti
data16
mov
cmps
inc
inc
iret
mov
fsin
push
(bad)
and
enter
cmp
add
inc
outs
(bad)
icebp
das
dec
and
push
or
adc
mov
repz
out
aaa
test
or
mov
hlt
xor
leave
or
mov
push
cmp
mov
mov
std
xor
(bad)
scas
(bad)
loope
cmp
add
dec
loop
sbb
mov
xchg
mov
mov
movs
mov
je
xchg
xlat
outs
sub
es
or
xchg
out
nop
movs
popf
aas
push
adc
pop
jnp
mov
leave
(bad)
pusha
or
out
mov
mov
into
xor
jle
inc
scas
repnz
jno
sbb
sub
sub
cmp
jbe
sub
into
jmp
ret
ds
sub
xor
pop
fsubr
pop
sbb
xchg
add
shl
jne
pusha
cwde
xor
inc
pop
test
hlt
ins
adc
test
mov
sbb
in
push
pop
xor
lock
mov
dec
push
jmp
enter
cmp
aaa
add
out
pop
or
sbb
sub
sar
jae
sub
in
jmp
adc
sub
mov
and
adc
jle
aas
test
cmps
ret
inc
and
adc
xor
iret
into
push
dec
(bad)
shl
nop
sti
pop
inc
fiadd
inc
es
cmp
outs
pop
pop
jno
cmp
add
bound
rcr
sub
fadd
mov
mov
pop
popf
(bad)
out
nop
xchg
add
test
mov
sbb
in
fidiv
inc
fsub
test
and
cmp
push
aaa
sub
(bad)
sbb
pop
jae
mov
sbb
xchg
sub
aaa
push
in
fcomp
mov
je
xchg
fs
push
inc
push
cmp
scas
fucom
retf
fadd
test
dec
sub
cld
in
xor
xor
sub
inc
add
adc
xor
icebp
mov
ja
push
xchg
xchg
xchg
and
xchg
dec
push
push
sti
fist
jle
push
sbb
pop
push
xchg
sub
leave
aad
into
jne
frstor
xor
fnstcw
cli
sub
inc
sub
aas
push
aam
jo
push
mov
or
pop
xchg
add
js
not
fnstenv
es
push
repnz
in
inc
es
sbb
scas
fwait
popa
ss
test
sti
push
add
mov
(bad)
into
aas
xlat
mov
int
sub
aas
xor
jo
sbb
(bad)
jg
ret
jecxz
pop
rcl
jno
je
mov
iret
cs
popa
das
lahf
sar
lds
rcl
adc
mov
inc
push
add
shl
jmp
fadd
mov
push
icebp
sub
cs
push
xor
imul
mov
sbb
jge
cmp
daa
jp
mov
ss
cs
test
jnp
push
xor
sub
xor
gs
mov
lods
out
pop
scas
or
xchg
xchg
and
cmp
dec
int
pop
sahf
shl
mov
(bad)
mov
bound
jge
jnp
sbb
cmc
inc
and
lahf
jb
inc
retf
cmp
stc
push
xor
cld
add
pop
shr
dec
(bad)
mov
sub
nop
jmp
aaa
outs
ss
in
cli
mov
xchg
push
cmc
icebp
pop
rcl
mov
cs
sub
sub
data16
cmps
popa
inc
sbb
sub
xchg
jle
mov
push
fsubr
dec
iret
pushf
cmp
ret
push
daa
mov
cmps
(bad)
(bad)
cs
inc
out
and
div
daa
pop
faddp
mov
xor
sbb
ret
jb
cs
in
sbb
outs
ds
add
xor
jl
shr
inc
fiadd
fstp
hlt
adc
pop
fidivr
aas
jbe
cs
push
neg
lods
out
ret
dec
les
add
and
xchg
push
cs
cmp
cs
inc
push
inc
lods
jl
sub
mov
adc
(bad)
sti
jecxz
push
hlt
inc
or
push
in
xor
fs
div
clc
and
test
rcr
dec
jg
push
pop
ret
jns
stos
mov
loopne
sub
push
xchg
inc
dec
dec
xchg
nop
adc
cmp
push
retf
dec
push
adc
dec
fdivr
and
fiadd
adc
or
sbb
jns
xor
rol
jmp
add
jl
retf
fstp
sub
jb
ds
cs
(bad)
test
dec
pop
mov
push
loopne
sub
les
movs
jo
scas
aam
dec
or
ins
sbb
push
int3
add
loopne
popa
das
call
cmp
jae
push
dec
mov
adc
and
mov
jo
aad
push
mov
xlat
call
leave
aam
sub
cmps
(bad)
sbb
inc
clc
xchg
push
pop
push
jne
ins
inc
jmp
nop
xor
aas
pushf
ror
pop
mul
cmp
or
jno
push
mov
jnp
stc
sub
or
loope
sub
pop
ret
les
cmp
sub
lods
(bad)
add
jmp
mov
icebp
mov
scas
xlat
pop
enter
je
cmps
sub
jnp
ss
cmp
(bad)
lock
adc
mov
loope
retf
xchg
xor
mov
jo
jne
hlt
cli
pop
dec
jb
fadd
mov
adc
rcr
xor
sbb
icebp
js
pop
or
leave
dec
pop
cmp
push
mov
push
fadd
pop
mov
push
(bad)
push
xchg
lods
mov
jmp
pop
(bad)
leave
dec
fnsave
xchg
pushw
cld
lea
add
xor
sub
pop
int3
inc
mov
sub
mov
in
(bad)
std
test
popf
push
xor
add
cmp
lds
cdq
pop
out
sahf
cs
mov
mov
push
movs
les
test
add
jg
jnp
clc
sub
xchg
sbb
rcr
sub
data16
shr
loopne
pop
push
ret
gs
ja
jl
hlt
ret
lds
in
mov
push
gs
loopne
(bad)
pop
das
frstor
push
jl
shl
mov
jno
and
mov
mov
dec
mov
inc
push
cs
mov
xchg
fdiv
clc
(bad)
nop
push
fstp
fdivr
sub
mov
xor
xchg
leave
scas
fimul
mul
cdq
xor
ins
ss
mov
repz
pop
add
add
or
pushf
mov
pop
rcr
lds
push
fsubr
mov
mov
jge
mul
(bad)
jl
out
in
mov
movs
and
loope
mov
push
cs
das
pop
cmp
mov
xor
lds
jl
(bad)
hlt
jle
mov
pop
out
xor
jmp
and
out
cs
pmulhw
ss
xor
cs
and
sbb
dec
dec
sbb
into
scas
stc
add
jge
and
cmps
arpl
bound
xchg
fstp
lds
and
add
dec
dec
outs
jae
pop
adc
push
(bad)
push
xchg
xor
xchg
and
scas
cs
je
aas
lods
out
push
fdiv
cmp
or
mov
test
ds
adc
(bad)
cs
out
sbb
pop
or
cmp
in
fild
push
xchg
fidivr
out
xlat
cwde
add
jmp
push
and
neg
mov
xchg
cld
lods
icebp
out
mov
push
pop
mov
lahf
adc
clc
cmp
adc
adc
ficom
retf
les
inc
cs
(bad)
dec
dec
dec
rcl
pop
cs
or
jns
iret
(bad)
in
scas
lock
cmp
add
es
test
mov
mov
lods
xor
js
jg
out
mov
bound
push
push
js
fdivr
bound
stos
xchg
mov
lds
stos
ins
sahf
inc
dec
pusha
fnstenv
stos
jmp
lods
repz
sub
add
or
inc
jg
mov
ficomp
scas
push
mov
add
outs
cs
sub
jecxz
pop
push
push
(bad)
dec
out
push
pop
xor
shl
dec
and
mov
cmps
dec
scas
out
and
mov
ss
mov
inc
cmp
jge
add
jo
dec
mov
aad
aas
jae
mov
cmps
xlat
mov
je
arpl
inc
in
push
stos
dec
dec
xchg
mov
inc
cmp
push
mov
sbb
cs
je
out
dec
jmp
ret
scas
loop
xor
popf
mov
les
lods
mov
pop
out
jmp
jae
and
sti
cmp
aad
scas
hlt
and
std
push
data16
mov
rol
jbe
cs
ds
xor
push
mov
dec
outs
mov
cs
push
sar
outs
jl
xor
or
out
jmp
jb
xor
dec
sub
fld
pushf
or
mov
jmp
mov
sbb
cs
mov
dec
or
pop
arpl
jl
cmp
mov
mov
into
test
xor
inc
loop
pop
out
mov
xor
iret
std
(bad)
and
cs
sti
push
adc
add
or
mov
lock
pop
mov
mov
scas
test
xchg
fwait
cmp
cs
fs
cmp
mov
push
rcr
jmp
fist
out
pop
and
mov
cmp
sub
cs
mov
push
cmp
push
scas
mov
pop
sub
mov
xchg
jne
sbb
fldcw
fild
lods
ja
add
push
jbe
outs
cmps
adc
sub
ss
cmc
inc
jbe
sbb
sub
xchg
inc
push
xchg
push
cs
pushf
adc
ja
add
rcl
xchg
or
jno
imul
cs
add
pusha
arpl
add
xlat
push
xor
aas
adc
cdq
enter
pop
cs
pop
stos
push
fs
or
sub
add
add
into
dec
sub
cmc
mov
(bad)
mov
ret
loopne
cs
and
inc
cmp
sub
push
cs
xchg
arpl
ss
daa
adc
mov
mov
hlt
mov
xchg
push
ret
aas
add
xchg
or
pusha
movs
hlt
sub
cli
mov
sub
mov
cs
adc
xor
fisubr
sahf
inc
mov
push
jbe
cmc
loopne
xlat
pop
lds
das
pop
xchg
dec
aaa
sub
and
xor
lea
jo
cli
xchg
aas
mov
mov
sahf
sub
xchg
jnp
cmovo
dec
shl
iret
rcl
jle
fsubr
push
cmps
call
cwde
jne
test
mov
(bad)
push
push
xor
rcr
jmp
dec
and
xlat
adc
shr
loopne
sub
retf
mov
and
aaa
dec
sbb
pop
test
jnp
and
(bad)
fdiv
push
int3
pop
xor
cmps
xor
retf
cdq
xchg
mov
outs
cmp
adc
(bad)
jge
sub
pusha
test
mov
loop
fs
test
popw
outs
(bad)
dec
hlt
aad
add
jmp
push
loope
push
xor
mov
push
sub
push
retf
leave
mul
fistp
or
(bad)
popf
je
stc
cmps
cwde
fisubr
cmp
repz
enter
mov
mov
or
das
ss
mov
sbb
aas
cwde
xlat
fnstenv
test
ds
scas
scas
rcr
mov
xchg
mov
mov
rcl
sub
jnp
mov
ss
mov
mov
and
sti
and
lods
out
jns
sub
test
aam
sub
add
inc
pushf
repz
enter
mov
es
dec
popf
and
icebp
pop
fld
jae
sub
mov
loope
add
sti
(bad)
div
fsub
popf
in
xchg
cs
add
fisttp
push
gs
(bad)
daa
jo
xor
and
ror
inc
mov
xor
add
cmp
adc
xor
fdivr
lods
in
fst
ficom
xor
jmp
ror
sbb
stos
add
sub
lock
xor
in
push
inc
jnp
and
inc
and
sbb
xchg
mov
pop
cmps
ficom
push
data16
mov
push
add
cld
jl
dec
jle
push
dec
mov
test
fyl2xp1
mov
dec
lods
add
outs
(bad)
ds
test
mov
jge
jmp
outs
outs
push
inc
pop
adc
inc
leave
pop
and
stos
mov
jae
movs
jg
pop
icebp
sahf
cmp
push
fsub
jmp
stos
std
shr
pop
loope
or
sbb
mov
leave
rol
sub
cmp
jns
add
cdq
sbb
mov
jne
sub
xchg
inc
push
sbb
mov
xchg
or
jno
ret
lahf
outs
jl
xchg
dec
or
fcmovnu
jmp
sbb
mov
jl
pop
add
push
sahf
sbb
pop
aad
jp
cli
dec
loopne
cmp
fiadd
fyl2x
ret
jle
push
(bad)
cmp
and
fs
xlat
sub
popa
movs
inc
cs
fwait
pushf
push
cmp
and
xlat
into
dec
pusha
or
sbb
(bad)
push
cs
xor
inc
cs
retf
xor
mov
(bad)
hlt
pop
cs
sbb
cmps
push
sbb
outs
mov
out
mov
and
cs
cmp
mov
movs
adc
hlt
ins
cs
(bad)
mov
imul
sub
cmps
cwde
sub
mov
jp
movs
jne
cs
fisubr
sub
jbe
retf
cs
jl
movs
cmp
das
sub
add
jle
sub
xor
into
or
scas
cmp
jge
sub
outs
sti
push
jl
out
cs
ins
fbstp
mov
xchg
or
movs
es
in
neg
push
fsubp
fisttp
retf
jecxz
into
pop
lock
mov
ds
and
repnz
mov
sar
jmp
cs
pushf
loopne
pop
push
adc
dec
ins
jmp
cmc
mov
sar
aaa
adc
sbb
xor
sar
inc
inc
add
cmp
daa
xor
mov
nop
sar
stos
sub
sbb
sbb
adc
add
jbe
lahf
popa
popa
fsubp
ret
pop
pusha
push
mov
pop
(bad)
mov
in
lahf
enter
adc
cs
gs
add
cs
push
and
icebp
scas
pop
push
cs
jecxz
test
mov
push
jle
fmul
stc
jecxz
enter
repnz
or
dec
adc
pop
outs
(bad)
dec
cs
out
fld
jbe
push
imul
scas
mov
mov
cs
test
sub
jmp
and
(bad)
jmp
das
ror
sti
cs
mov
fmulp
sub
adc
add
jb
fadd
jmp
in
sti
mov
add
and
and
pop
push
pop
data16
mov
sub
retf
xchg
aam
cmp
sbb
sbb
and
cwde
test
icebp
jmp
fwait
xchg
dec
scas
cs
repnz
sbb
sahf
(bad)
push
adc
ss
idiv
sub
ror
ffreep
imul
xor
outs
mov
aaa
pop
(bad)
repnz
lods
jg
sahf
jb
xor
scas
add
and
shl
sahf
repz
push
(bad)
push
rcl
call
xchg
mov
leave
dec
add
inc
xor
pop
fdivr
mov
and
lds
cmp
mov
iret
cmp
cs
stos
mov
cmp
aad
adc
adc
sbb
mov
loope
sbb
stc
test
cs
(bad)
jl
inc
mov
and
inc
or
rcl
ret
and
cdq
jno
inc
fsub
cs
jg
mov
jmp
adc
scas
inc
loop
cmp
shr
and
jl
in
div
jae
inc
adc
and
jne
sbb
es
adc
ins
cmp
outs
jnp
xlat
into
icebp
adc
hlt
xchg
outs
lea
pop
in
sub
in
mov
and
mov
push
cli
adc
or
scas
cs
rol
jg
mov
mov
add
push
fist
adc
imul
cs
iret
ja
aaa
or
hlt
cs
inc
fdivr
sbb
lods
(bad)
pop
xchg
xchg
ret
and
mov
scas
sar
sbb
shr
jae
fxam
ret
push
pinsrw
cs
and
call
cs
mov
in
cs
ins
mov
std
les
popa
sub
adc
mov
and
outs
in
cld
aam
add
cmps
mov
(bad)
cmp
cs
popa
retf
ror
fiadd
cdq
sbb
mov
das
mov
or
mul
cmps
push
pop
jg
dec
ja
add
jp
xor
nop
les
jno
jmp
jmp
adc
push
inc
jb
in
push
xor
ret
fcmovbe
cs
xchg
jg
and
std
inc
pop
ror
bound
mov
xchg
xchg
cs
cmp
cs
dec
stos
or
aas
push
ficom
cs
jbe
mov
dec
ret
mov
mov
pop
cs
out
push
popf
add
vminss
adc
inc
xchg
shr
mov
inc
dec
sub
push
das
retf
xor
scas
inc
and
xor
mov
sahf
fld
repnz
out
adc
fdiv
jle
popf
loopne
(bad)
push
pop
push
xor
retf
xchg
lea
xor
popa
cmc
into
in
aaa
cs
mov
cld
int3
jbe
mov
pushf
xlat
out
xchg
add
aaa
lea
ds
in
cs
inc
pop
push
outs
push
fidivr
cs
jne
sti
scas
in
in
shl
aad
int3
test
add
push
(bad)
mov
or
inc
mov
fbld
pop
(bad)
pop
inc
add
adc
imul
lock
outs
xor
arpl
xor
int
cs
inc
jp
pop
push
push
std
cmp
jmp
fwait
add
add
leave
call
dec
sbb
test
fidiv
popa
mov
(bad)
mov
jno
nop
daa
xchg
cmp
out
mov
jbe
mov
out
mov
mov
test
push
mov
jnp
and
cmpxchg
push
cmps
xchg
mov
push
sbb
frstor
into
cld
mov
sub
(bad)
fldenv
mov
fs
(bad)
mov
xlat
cs
sub
mov
push
mov
jmp
aaa
cmp
inc
push
xchg
(bad)
mov
ins
arpl
add
lahf
sar
rcl
mov
sub
pop
popf
mov
int3
adc
das
add
jae
add
out
ret
out
pop
in
cs
jae
test
sti
test
xor
mov
and
mov
adc
out
adc
js
push
retf
push
test
daa
nop
dec
(bad)
pop
push
scas
jp
or
outs
idiv
push
test
or
mov
sub
aad
dec
retf
mov
push
adc
cmp
dec
and
rcl
xchg
mov
idiv
xor
aaa
cs
lods
mov
push
dec
adc
sbb
popf
arpl
and
sbb
aam
test
jp
sub
cmps
cmps
mov
cwde
xchg
dec
fs
xor
packsswb
add
dec
push
push
lea
pop
int
repz
lds
fstp
dec
and
sub
sbb
rcl
fiadd
bound
in
xlat
aaa
(bad)
push
out
sub
pop
mov
call
mov
popf
les
gs
push
pop
es
sub
mov
or
adc
mov
loop
cmp
and
mov
bound
imul
xchg
stos
daa
sahf
adc
sbb
add
shl
pop
shl
fisub
cs
shr
enterw
popa
and
mov
fmulp
dec
mov
cs
in
(bad)
mov
daa
and
push
mov
mov
push
push
loopne
rcr
ficom
adc
inc
idiv
aaa
cmp
jle
inc
add
cmp
cdq
mov
mov
xor
jne
arpl
pop
dec
dec
xor
xor
cwde
fldenv
cmc
cs
pop
mov
jecxz
das
push
into
dec
(bad)
xor
js
push
or
(bad)
in
cmp
sub
xchg
out
cs
into
test
and
call
mov
adc
push
ds
sbb
test
mov
jo
adc
and
in
jmp
xlat
loope
(bad)
cs
inc
mov
sub
into
push
fwait
mov
sbb
xchg
add
fiadd
cmc
cld
out
stos
cmp
mov
and
scas
push
adc
pusha
sbb
pop
push
pop
das
mov
pop
mov
mov
sti
or
lock
xchg
js
scas
jno
xchg
cli
mov
add
out
pop
jge
dec
je
dec
pop
sub
or
fist
test
in
push
sub
test
inc
fcmove
mov
xor
ficomp
push
gs
out
and
dec
cmps
popf
jl
pushf
(bad)
out
enter
sub
mov
shl
push
fwait
mov
xor
sub
in
sub
fidiv
mov
cmp
je
fwait
xor
pop
fwait
enter
and
dec
leave
xchg
std
out
xor
out
xchg
dec
jns
inc
dec
push
jp
mov
leave
push
lock
aaa
dec
nop
add
push
repnz
push
leave
ins
sub
cmp
jmp
pop
xor
test
and
mov
xor
cmc
gs
cmps
push
pop
imul
jmp
pop
jb
scas
xor
sbb
add
stc
push
into
bound
push
ficom
dec
xchg
fisubr
sahf
push
jbe
push
cs
out
xchg
nop
fisttp
repz
retf
out
retf
(bad)
mov
cmp
fdiv
cs
or
pusha
out
hlt
mov
jle
shl
cs
clts
dec
std
mov
data16
ret
cs
add
imul
pop
mov
sub
ror
adc
out
div
pop
cs
dec
add
xchg
mov
pusha
movs
and
movs
push
pop
mov
shl
cs
lahf
mov
xchg
jb
push
xor
lea
xor
icebp
mov
add
cs
mov
(bad)
mov
cs
inc
xor
inc
mov
xchg
jo
jbe
js
xchg
cs
jg
pop
or
movs
xor
shl
or
les
aas
pop
sub
add
(bad)
xchg
(bad)
ror
cs
sbb
call
pop
cmp
xlat
out
cs
pop
out
jbe
or
aam
pop
mov
xchg
out
cmp
mov
icebp
mov
add
inc
sub
gs
lahf
aad
mov
jmp
aam
call
sbb
sub
dec
jne
pause
outs
mov
pop
or
dec
sub
and
or
hlt
cs
xchg
sbb
add
and
mov
adc
xor
push
ret
push
cs
jb
sub
xchg
mov
ret
call
inc
add
arpl
xchg
(bad)
outs
cmp
cmp
xchg
repz
mov
sub
and
mov
popa
add
mov
cs
dec
or
mov
inc
xor
adc
dec
ins
out
mov
sbb
push
adc
pop
and
pusha
div
outs
dec
mov
xlat
xor
push
cld
fcom
daa
aad
mov
stos
stos
mov
stc
pop
test
sub
mov
mov
aad
into
pop
outs
ja
sub
test
push
xchg
pop
dec
adc
fsubr
inc
outs
addr16
xor
pxor
out
push
cs
and
hlt
loop
pop
ret
int
cmp
sub
xor
ss
jmp
add
enter
hlt
cs
and
jp
mov
(bad)
xor
cs
repz
test
xchg
pop
lds
cs
cli
jp
xor
cmp
mov
cdq
leave
push
cs
ret
xor
jne
xchg
jmp
stos
pop
sbb
sub
stc
int
mov
cmp
out
pop
aad
mov
adc
shl
cmps
cwde
outs
adc
xchg
inc
pop
or
sbb
aam
pop
and
cmp
cs
(bad)
cdq
loop
sbb
sub
lods
pop
shr
(bad)
sbb
xchg
retf
jmp
mov
cs
push
pusha
pop
pop
dec
mov
std
test
stos
out
jg
sbb
cs
sub
les
cs
push
mov
(bad)
cs
cmc
int3
mov
cs
es
sub
adc
sub
jp
in
(bad)
add
jmp
outs
je
xchg
pop
inc
sti
(bad)
dec
mov
fcom
mov
add
xor
xor
data16
sub
inc
or
stc
xchg
out
fsubr
scas
and
(bad)
outs
dec
add
mov
ja
and
xor
jp
cs
mov
mov
int
mov
add
and
or
scas
xchg
outs
mov
daa
in
fsub
cs
sbb
fs
push
(bad)
inc
idiv
push
or
pop
dec
sub
push
add
ret
sbb
push
sub
jmp
xor
adc
and
movs
fsub
imul
ja
cmovb
scas
mov
mov
mov
ja
adc
push
adc
add
(bad)
leave
pop
rcl
es
mov
out
push
cs
xchg
(bad)
into
ins
cmp
jmp
xor
outs
xor
dec
mov
mov
mov
fsub
dec
push
sahf
iret
inc
cmp
cs
std
pop
mov
daa
test
lds
pop
sub
xchg
cmps
or
sbb
adc
sub
xor
mov
scas
adc
gs
cs
mov
xor
out
daa
sbb
mov
xor
mov
xchg
inc
out
push
cs
(bad)
mov
cs
jecxz
dec
cmp
sub
mov
retf
mov
imul
cs
stc
dec
nop
or
add
cmp
sub
shl
cs
ficom
fcomp
xor
addr16
les
mov
fmul
mov
imul
adc
unpckhps
clc
inc
or
cld
mov
and
jg
in
xchg
leave
and
jl
pop
scas
sbb
jne
sqrtps
enter
cmp
xchg
jle
push
jmp
push
sub
sbb
dec
rcl
cld
dec
jge
or
xchg
xchg
xchg
adc
push
dec
fcomp
inc
mov
pop
div
leave
adc
shr
or
int
in
jg
mov
mov
test
cmps
push
push
sub
jno
sbb
cs
mov
movs
out
fnsave
hlt
or
pop
lea
mov
pushf
loopne
pop
mov
hlt
jge
dec
jge
mov
cmc
mov
sub
mov
inc
push
retf
cmp
dec
leave
imul
div
int
ss
sub
fldcw
dec
and
jb
push
cmps
mov
add
leave
push
test
leave
jecxz
(bad)
iret
je
sbb
in
inc
mov
movs
mov
loopne
lock
jmp
fisub
movs
add
mov
push
xchg
and
aam
push
popa
cmps
inc
mov
movs
in
out
mov
fld
mov
xor
xor
sti
sbb
sub
cmps
(bad)
out
scas
and
mov
xor
fbstp
xchg
shl
outs
adc
adc
dec
push
fldcw
movs
test
cs
ds
sub
xlat
mov
cld
adc
mov
mul
mov
xchg
mov
xchg
lods
jmp
push
xor
and
lods
lock
cs
xor
xchg
mov
fcom
inc
cs
scas
inc
(bad)
retf
cs
test
aas
ss
jmp
jnp
mov
sub
les
mov
inc
dec
imul
xchg
ja
cmp
push
cmps
mov
lods
jb
ficom
test
inc
das
push
dec
repz
xchg
jl
jle
add
mov
sub
sbb
sbb
inc
push
add
cs
dec
push
adc
mov
mov
aam
loope
xchg
(bad)
fstp
pop
push
xor
xor
mov
add
sub
jg
ret
lods
xchg
sahf
(bad)
aas
xor
mov
call
inc
call
leave
mov
mov
dec
scas
movs
mov
or
and
leave
mov
push
mov
adc
imul
push
mov
cmp
sub
xor
aam
rsqrtps
push
xor
pop
data16
ror
retf
mov
call
(bad)
dec
adc
jne
pop
sub
cmp
retf
jbe
call
adc
jmp
jae
outs
sub
push
add
(bad)
pushf
aas
ja
ins
mov
push
cmps
xor
scas
pushf
icebp
xchg
mov
sbb
aam
daa
in
int3
push
imul
shl
call
jecxz
int3
xstore-rng
cmps
add
pop
mov
xchg
mov
in
ret
loop
xor
daa
jmp
aas
idiv
ins
dec
test
adc
jg
xchg
cld
pop
xchg
push
(bad)
or
mov
and
into
cmps
aam
je
arpl
push
jmp
aad
dec
sub
das
pop
xor
ja
mov
ins
cmp
add
inc
aad
hlt
and
pop
call
jbe
cmps
adc
jle
das
fld
mov
mov
sahf
push
add
add
daa
jmp
out
jg
xlat
add
xchg
out
dec
lea
jge
(bad)
fsubr
in
xchg
jmp
mov
sub
stos
scas
es
cmc
test
clc
pop
sub
mov
jnp
aas
(bad)
or
sbb
cmp
xor
or
sti
inc
hlt
in
scas
loop
retf
xor
mul
scas
mov
mov
(bad)
in
outs
mov
add
mov
cs
gs
adc
xor
pop
jge
enter
(bad)
in
jp
std
(bad)
mov
cmp
pushf
jno
daa
mov
outs
pop
cmp
add
push
inc
pop
in
sbb
mov
push
cs
mov
(bad)
sub
cs
int
inc
div
out
pop
jle
retf
lock
xor
sub
mov
test
mov
test
jp
inc
add
mov
lahf
imul
pop
or
test
and
or
out
mov
popf
xchg
push
retf
push
lds
cs
js
cmp
jnp
mov
mov
mov
ret
sar
xor
push
mov
push
scas
pop
pop
xchg
loop
dec
cwde
in
enter
repnz
xor
push
xchg
dec
cs
mov
nop
iret
cs
mov
cmp
jle
mov
dec
imul
cwde
pop
mov
or
pushf
es
into
ds
sub
inc
and
pop
fsubr
push
arpl
mov
std
jl
out
sub
gs
dec
mov
(bad)
cs
xchg
dec
mov
mov
push
outs
and
jns
fs
jl
mov
xchg
jge
xchg
pop
ja
sub
mov
sub
sbb
int
leave
xchg
mov
inc
in
mov
pop
ds
lods
push
pop
cs
push
or
push
div
js
or
(bad)
push
jo
ror
mov
jno
jl
sub
push
ficom
jno
sar
les
bound
jle
imul
add
inc
dec
or
scas
iret
cmp
lods
jmp
ror
push
jle
inc
leave
add
movs
aas
pop
pop
adc
mov
or
dec
ins
push
inc
sub
stos
mov
rcl
mov
pop
xor
push
std
mov
cdq
enter
pop
push
popa
dec
mov
daa
xor
lods
arpl
mov
cmp
call
lods
mov
inc
and
mov
adc
stos
mov
pop
jb
xchg
leave
mov
inc
test
or
cmps
mov
clc
jne
es
lods
mul
pop
sub
xchg
jmp
outs
call
add
ret
mov
not
imul
mov
or
ret
mov
and
and
or
jge
add
cmps
leave
mov
or
ss
adc
std
mov
pop
mov
data16
xchg
aad
mov
push
div
sub
aam
add
mov
(bad)
jns
js
sbb
test
aas
adc
hlt
fbld
pop
xor
popfw
inc
and
mov
sbb
dec
loop
cmp
sub
lea
cmp
hlt
mov
jne
pop
and
and
or
rcl
xchg
in
ret
das
inc
push
scas
inc
mov
outs
jae
cmps
lock
jno
add
outs
push
jns
and
cmp
inc
add
neg
jl
ins
je
lds
(bad)
mov
mov
hlt
adc
arpl
push
jp
int
or
push
aas
adc
and
ss
mov
jmp
hlt
in
xchg
mov
imul
cmp
imul
xor
sub
mov
and
mov
mov
(bad)
leave
out
sbb
mov
mov
push
xor
dec
push
xchg
ds
lods
clc
(bad)
(bad)
stos
(bad)
mov
fsub
stc
adc
out
xlat
(bad)
popf
inc
pop
cdq
inc
or
mov
push
push
mov
aaa
leave
lds
xchg
out
lods
es
and
dec
scas
scas
es
(bad)
mov
mov
and
mov
or
shr
pop
fsubr
aaa
xchg
mov
push
sbb
xchg
or
adc
mov
cmp
pushf
dec
jle
cmps
sub
(bad)
gs
movs
int
cli
(bad)
fisttp
add
mov
repnz
add
shl
bound
pop
sub
leave
mov
mov
jbe
or
xor
(bad)
xchg
data16
cmc
mov
(bad)
xor
hlt
jne
sub
jecxz
mov
stc
jbe
jmp
shl
clc
or
scas
movs
(bad)
mov
in
es
mov
pop
adc
jb
mov
popf
outs
cmp
lods
test
repnz
sub
dec
loopne
adc
je
mov
sub
cs
movs
push
push
inc
push
add
pop
pop
(bad)
leave
add
mov
sbb
and
push
outs
call
sti
mul
push
sbb
out
test
sub
xchg
add
out
aam
stos
jmp
test
and
test
ficomp
cmp
loopne
mov
push
adc
nop
and
cmp
test
inc
and
js
fst
scas
mov
test
inc
icebp
xor
push
lods
(bad)
dec
mov
mov
xchg
aaa
ds
xor
jl
sar
imul
ror
ja
pop
cdq
retf
xor
(bad)
fisub
sub
sbb
and
inc
xor
ja
je
push
leave
jmp
xchg
es
stos
fwait
mov
out
inc
fsub
inc
or
jo
outs
xchg
rcl
into
call
aas
xlat
mov
jnp
add
and
sub
adc
and
stos
stc
inc
lds
dec
aaa
add
jnp
js
fild
ror
(bad)
fcom
aas
(bad)
dec
cmp
ror
add
cdq
mov
adc
sbb
sub
xor
mov
cs
das
lahf
jmp
retf
adc
stc
les
fwait
movs
rcl
xor
add
xor
cli
pop
movs
cs
daa
gs
js
aaa
mov
cmp
push
fisubr
jne
mov
arpl
(bad)
daa
lods
mov
adc
xchg
xor
fild
sub
cmp
mov
cs
mov
sub
pop
outs
cs
xchg
mov
lock
xlat
ja
je
pop
xchg
xor
addr16
(bad)
cs
lds
cs
test
mov
popf
imul
push
mov
aam
sub
add
mov
inc
fisubr
mov
add
enter
pop
cs
fimul
fcom
fnstcw
jl
mov
lds
ss
xor
je
sbb
jb
imul
or
xor
mov
es
ins
movs
in
jmp
xor
daa
or
aaa
xor
push
xchg
push
adc
into
xchg
(bad)
cld
cs
jb
push
arpl
or
cmp
jmp
cli
in
xor
aam
imul
mov
test
xchg
cli
popf
dec
xchg
push
xor
(bad)
leave
fld
inc
mov
xchg
pop
push
shl
jle
jb
sub
fdivr
cmc
jno
mov
lods
out
mov
cmp
ss
mov
clc
sub
jl
mov
cld
loope
leave
mov
(bad)
jecxz
stos
ret
sbb
jmp
lods
outs
sub
out
cmp
popa
ja
aas
movs
jmp
(bad)
mov
arpl
add
xchg
mov
xor
test
setnp
sub
mov
push
in
ins
(bad)
popf
sbb
call
xor
lods
das
mov
es
test
inc
cwde
ret
std
sub
aam
test
sub
or
movs
mov
fldcw
hlt
pop
data16
idiv
ret
mov
test
jmp
add
cld
jmp
jbe
lahf
pop
pop
xor
jp
mov
rcr
in
push
movs
inc
push
popf
sbb
cmps
adc
popf
inc
pop
(bad)
jbe
xchg
adc
jno
and
pop
and
(bad)
fistp
fisubr
mov
or
ret
cmp
dec
into
dec
jge
mov
jns
into
fs
sar
xor
call
cmp
mov
xor
inc
aaa
jnp
push
mov
mov
xchg
jnp
add
pop
add
ret
lods
cs
push
aaa
dec
and
dec
xor
jnp
pop
aas
ins
in
ret
(bad)
test
jmp
add
lock
dec
adc
pop
lods
les
add
xchg
xor
jge
outs
xor
jo
(bad)
adc
and
dec
xchg
add
cwde
cmp
scas
outs
lods
jne
push
xor
sbb
mov
add
xchg
and
jmp
mov
(bad)
ins
push
dec
out
fbstp
push
in
adc
mov
and
inc
sub
lea
pop
sti
cs
jmp
xor
pop
retf
cs
inc
cmp
lock
sahf
cs
add
test
dec
mov
push
and
loopne
icebp
mov
fadd
(bad)
mov
retf
stc
into
pop
lods
shr
sti
push
clc
hlt
inc
push
in
dec
adc
dec
cs
xor
jmp
sbb
mov
mov
cmc
aas
mov
loope
jg
cmps
int3
sti
scas
in
in
adc
xor
inc
dec
push
cli
int
xor
test
and
cmc
cs
xchg
cmp
cwde
shr
lock
xabort
mov
cs
iretw
cmp
mov
cwde
(bad)
push
xchg
mov
jg
fisub
out
or
pop
mov
(bad)
outs
adc
add
jne
out
pop
aaa
mov
leave
pop
mov
fstp
xor
(bad)
aas
out
call
sub
xchg
imul
retf
add
in
xor
ror
xor
push
imul
leave
test
mov
push
inc
int
push
add
mov
dec
inc
inc
sar
and
ror
xchg
mov
fcom
dec
repnz
mov
push
cmp
ins
pushf
int3
sub
aad
lock
cs
adc
dec
and
xor
dec
pop
push
push
out
adc
jecxz
cmps
loop
xchg
icebp
xchg
mov
inc
into
repz
jge
cmp
and
or
cmps
outs
loop
cs
(bad)
xor
shl
clc
loop
mov
xor
and
or
stos
test
in
mov
retf
cmp
pop
mov
pop
jnp
or
loope
sbb
pop
push
sbb
cs
movs
in
jg
and
iret
dec
jmp
test
sub
movs
leave
sar
aam
adc
jb
sbb
rcr
test
leave
jb
push
addr16
lahf
pop
fwait
xlat
inc
xor
ret
cmps
pop
add
cdq
cmp
inc
pop
adc
fisub
fxch
xchg
scas
sbb
fmul
and
and
scas
outs
pop
int3
ja
xor
int
cli
sub
aas
and
pop
test
dec
add
push
popa
mov
inc
in
fucomip
das
cs
mov
dec
cs
or
pop
pop
jbe
jb
mov
ja
in
(bad)
es
jmp
jnp
or
pop
fisubr
xor
loopne
sbb
std
and
xor
push
imul
ins
cs
ret
inc
sub
xchg
sub
div
scas
adc
push
dec
inc
or
ja
cs
mov
inc
popa
adc
xchg
xor
aas
and
outs
sub
jle
pop
pop
adc
movs
fsub
push
mov
and
pusha
jl
or
lock
sub
daa
inc
jbe
addr16
jle
xor
jmp
xor
jnp
into
imul
sbb
xchg
adc
call
xchg
pop
cmp
push
outs
pop
dec
mov
mov
xor
out
push
fadd
call
cdq
fimul
outs
icebp
xor
jmp
adc
and
cmp
scas
data16
js
cmp
xlat
(bad)
enter
add
mov
sbb
jns
xor
cmp
pusha
dec
jmp
aas
push
push
mov
leave
cli
cmp
(bad)
ficom
xchg
aas
xor
push
icebp
mov
xor
sub
mov
aas
cli
mov
push
iret
mov
jne
es
das
sub
std
out
xchg
lock
(bad)
fild
mov
inc
loope
sti
repz
or
mov
inc
outs
leave
xchg
lods
outs
ds
stos
stos
jle
cdq
jle
jnp
bound
xchg
out
pop
pop
leave
sbb
jae
dec
fisubr
lahf
fwait
shr
xchg
retf
and
inc
test
data16
and
sub
test
pop
inc
(bad)
cmp
call
je
ret
test
shl
jne
push
imul
aas
fwait
int3
push
sbb
lods
push
out
inc
mov
and
jge
out
push
call
outs
leave
mov
adc
in
enter
jmp
(bad)
enter
cs
xchg
leave
mov
outs
sbb
mov
xchg
sub
pushf
outs
iret
sahf
push
cs
xchg
or
lods
out
fcom
xchg
out
arpl
rcr
and
mov
(bad)
into
test
sahf
ror
adc
adc
xor
inc
mov
jns
outs
in
std
int
test
pop
sbb
jo
jmp
fsub
cmp
xor
cwde
cdq
out
leave
test
out
in
lea
dec
dec
mov
scas
clc
sbb
cmp
in
xor
addr16
pop
(bad)
jmp
lock
cmp
(bad)
cs
cwde
js
retf
dec
cmp
cs
cmp
fwait
sbb
pop
pop
dec
mov
push
mov
mov
fdiv
popf
cmp
dec
pop
jle
cs
ror
mov
adc
pop
out
push
retf
(bad)
in
cs
shl
pop
sbb
ins
jl
push
mov
pop
sahf
sbb
mov
arpl
fild
mov
or
scas
push
push
cs
xchg
pusha
jge
dec
push
fst
int3
(bad)
cmp
loope
mov
enter
stos
call
lahf
fwait
rcl
sbb
sub
dec
pop
push
add
mov
push
mov
dec
mov
xchg
retf
and
(bad)
mov
sub
lahf
pop
mov
push
sahf
bound
jle
adc
shr
cmps
leave
sub
push
movs
push
aaa
dec
jp
fcom
mov
pop
mov
out
sbb
pop
pop
(bad)
pop
push
icebp
xor
fmul
mov
mov
enter
or
cs
push
adc
pop
dec
enter
stos
and
pop
or
scas
add
push
inc
or
bound
jmp
pop
mov
jne
push
aas
inc
sub
add
xchg
cmc
ret
inc
jo
xchg
pop
scas
sub
push
test
jmp
cmp
lds
and
dec
fdiv
retf
xor
pop
or
push
scas
xor
outs
int
pop
inc
fucomp
imul
sub
mov
in
jmp
call
mov
mov
cdq
ret
cwde
push
mov
retf
add
xrelease
lods
mov
and
aam
add
test
mov
cs
adc
push
mov
mov
dec
mov
jnp
rol
mov
movs
and
adc
xor
pop
mov
push
pusha
(bad)
les
cmp
sub
fdivr
jmp
dec
ja
mov
and
nop
aas
lahf
(bad)
pop
movs
lods
int
out
out
lea
clts
push
clc
mov
in
in
cs
dec
dec
or
mov
lock
jp
mov
sahf
push
cs
cld
rcl
scas
fisub
ss
mov
mov
jmp
outs
aad
retf
lods
jl
les
cdq
sub
add
jns
call
imul
mov
mov
movs
scas
inc
xchg
cmp
push
mov
inc
and
dec
test
pop
(bad)
sahf
sbb
shl
or
sub
xor
(bad)
jecxz
cmp
imul
into
adc
inc
or
outs
xchg
sub
mov
cmp
sahf
call
call
cs
movs
jmp
bound
cmp
int
(bad)
das
movs
push
push
cs
loopne
add
adc
cs
fdivr
jmp
push
hlt
idiv
ret
xchg
stos
cs
mov
or
cmp
inc
out
pushf
sahf
sbb
xchg
dec
neg
popa
cs
cmp
outs
shl
js
fdivr
into
test
fwait
xchg
cld
fistp
inc
xchg
test
pop
inc
sti
shl
dec
rol
and
rcl
xchg
mov
push
adc
dec
(bad)
in
adc
add
mov
xor
sbb
add
cmc
out
repnz
test
pop
nop
push
xor
inc
and
test
dec
cmp
mov
cmp
pop
mov
ins
inc
jp
mov
cmps
das
aaa
mov
pop
(bad)
sbb
enter
cmp
in
faddp
pop
test
push
xor
and
jg
bnd
adc
arpl
dec
les
or
sub
inc
sar
or
mov
and
pop
or
push
xor
push
pop
imul
pop
call
mov
(bad)
lock
(bad)
fimul
cs
cmp
out
jno
aas
push
imul
mov
push
test
push
fsubr
cdq
xchg
sbb
cs
loopne
sub
cs
adc
stos
mov
ds
pusha
lods
jmp
data16
outs
push
aaa
jg
adc
cs
jae
pop
repnz
ucomiss
iret
or
mov
push
out
outs
clc
test
xchg
aaa
push
xor
add
(bad)
mov
cmp
pop
adc
adc
xchg
cs
jle
ficom
call
xor
inc
jns
sub
push
into
push
pop
std
cs
fistp
call
aam
and
xor
sbb
mov
ds
jecxz
xchg
mov
stos
or
je
fstp
out
aas
mov
shr
sbb
adc
pop
(bad)
cld
pop
lods
and
mov
mov
adc
test
xchg
les
sbb
ins
jge
outs
xchg
in
(bad)
fstp
(bad)
scas
or
and
ds
js
jmp
mov
mov
aas
mov
pop
cmps
add
mov
jge
shl
(bad)
fsubp
xchg
sub
mov
dec
out
sub
setno
neg
inc
push
shl
push
pop
test
sbb
sub
je
lods
leave
arpl
ret
cs
loop
fdivr
xor
retf
scas
xchg
sub
test
xchg
lahf
ret
data16
(bad)
jmp
movs
daa
fistp
pop
sbb
mov
cmp
mov
adc
lds
fs
cmp
and
test
aaa
xor
sub
scas
mov
jle
mov
xchg
cs
leave
(bad)
adc
mov
dec
dec
fstp
sub
dec
sub
test
fwait
mov
hlt
xor
bnd
sub
cs
mov
push
repz
loope
jmp
fs
rol
mov
into
out
xor
mov
cmp
cs
dec
mov
sub
push
dec
add
mov
(bad)
cmp
(bad)
push
shl
adc
pop
fxch
mov
or
out
pop
cwde
pop
push
shr
cli
xchg
xor
jne
fcomip
cs
or
pusha
bound
xchg
xor
pop
sbb
int
movs
out
pop
cmp
outs
imul
mov
xor
bsr
sti
out
sub
cs
mov
mov
mov
pop
dec
push
jle
push
cs
add
sub
mov
ds
popf
(bad)
(bad)
cdq
xor
sbb
out
loope
mov
adc
push
cs
xor
push
sahf
push
shr
pop
mov
lock
sbb
mov
shl
jl
fcomp
scas
leave
xchg
mov
sahf
jo
adc
adc
cld
imul
jl
pop
ret
push
arpl
mov
data16
in
pusha
cdq
push
fistp
jmp
mov
nop
fnstenv
outs
lahf
xor
inc
aam
cs
les
out
pop
jmp
mov
dec
push
pop
aas
cwde
adc
mov
sbb
ins
loop
movs
shl
pop
or
inc
dec
dec
mov
mov
sbb
inc
cs
enter
and
sbb
lods
in
aaa
and
xchg
shl
test
sub
test
and
outs
jno
mov
outs
jge
cwde
pop
pop
popa
sub
fst
cs
xchg
pusha
pop
push
pop
ror
xor
mov
pop
mov
sub
add
cmc
mov
push
cmps
out
cs
test
cs
cmp
xor
neg
and
push
cmp
pop
adc
adc
mov
mov
ret
shl
cdq
das
icebp
xsha1
cmps
(bad)
xor
stos
into
cld
into
sbb
outs
out
(bad)
out
(bad)
cmc
jnp
stos
cdq
scas
dec
hlt
dec
xchg
push
and
and
push
dec
dec
mov
(bad)
aad
ja
das
xchg
mov
int
jne
xchg
sub
icebp
mov
push
xor
jmp
in
mov
or
movs
loopne
jmp
pop
and
mov
adc
fwait
jmp
adc
(bad)
out
outs
inc
xor
cli
xchg
aad
ret
rol
xlat
mov
sub
add
sub
shl
xor
cs
jne
sub
js
loopne
fsubr
std
hlt
xchg
(bad)
(bad)
shr
xchg
adc
scas
ret
push
sbb
pop
bound
sahf
int
or
xor
loop
loopne
mov
xor
popf
sbb
adc
jle
dec
and
(bad)
fsubr
pop
icebp
mov
enter
push
xor
add
ins
sbb
cs
call
inc
or
jmp
cld
sbb
mov
xor
in
pop
or
imul
xor
mov
push
ret
add
sbb
icebp
(bad)
xchg
push
fidivr
(bad)
popf
(bad)
(bad)
adc
mov
frstor
mov
data16
ret
fld
push
fistp
call
dec
cld
cs
in
out
mov
xlat
mov
movs
hlt
ret
jmp
xor
sub
stos
xor
mov
into
rcr
and
pop
inc
cli
and
pusha
pop
fimul
add
cdq
add
cs
xor
sbb
cs
fst
(bad)
and
xlat
in
retf
enter
in
lods
jmp
movs
inc
scas
ret
mov
ja
dec
fcom
jae
adc
xchg
repz
xor
(bad)
frstor
mov
mov
pop
hlt
mov
or
xor
adc
adc
shl
dec
cs
lods
xchg
inc
bound
jecxz
jle
dec
cmc
mov
xchg
lods
cmp
mov
imul
and
cs
lock
cmp
lds
cwde
and
mov
jecxz
inc
or
btr
cli
inc
cs
xchg
jg
inc
loopne
mov
mov
adc
jecxz
xor
(bad)
in
sub
das
sahf
jns
fisub
aad
dec
fldenv
or
jge
xor
icebp
sahf
aad
sub
jbe
stos
stos
mov
(bad)
xor
mov
mov
je
sbb
sar
push
add
adc
xchg
sub
xor
outs
pusha
out
ror
push
aaa
sar
and
xchg
test
popf
ds
out
fst
sti
arpl
test
pop
add
scas
dec
inc
or
sti
sub
test
retf
(bad)
lea
mov
add
inc
leave
cli
dec
adc
dec
mov
xchg
push
adc
push
sub
lock
inc
data16
push
scas
push
push
cmp
movs
aam
aad
mov
xlat
xchg
cmps
jmp
iret
mov
cs
test
jecxz
cs
ret
(bad)
cwde
fs
aam
sub
add
push
push
stc
nop
sahf
push
cs
sbb
(bad)
push
in
push
pusha
jbe
stos
inc
and
xor
dec
mov
push
mov
cs
xchg
jg
or
mov
ins
jb
(bad)
bound
push
mov
test
and
ret
cmp
sbb
imul
mov
mov
scas
shr
jmp
nop
int
pop
jae
sub
icebp
and
popa
cmp
add
iret
stos
adc
xchg
cmp
in
xchg
out
pop
mov
sti
push
and
fild
dec
pop
adc
dec
or
cmp
iret
xchg
cs
int
cmps
cmp
stc
ins
add
outs
aas
pop
scas
mov
add
add
ins
mov
jmp
jbe
outs
cs
out
cs
test
adc
mov
addr16
je
dec
cs
cmp
jo
scas
mov
ins
push
and
mov
mov
out
lahf
imul
mov
enter
and
push
aad
mov
mov
add
mov
or
popa
cs
xor
jae
loope
pop
cs
lea
jo
hlt
movs
pusha
in
lock
add
(bad)
icebp
test
xor
imul
jmp
outs
sbb
sahf
call
mov
imul
les
sub
mov
mov
mov
mov
jmp
into
adc
sahf
pop
cmp
cmps
or
es
jge
sar
int
lods
aas
dec
test
push
xor
fldcw
dec
fild
scas
push
adc
push
and
dec
pop
or
movs
cld
and
inc
sti
cli
push
jle
fild
jae
add
(bad)
jge
pop
sub
or
bound
movs
sahf
mov
mov
test
fmul
out
xchg
lods
fist
dec
xlat
or
stos
sahf
xor
xlat
jnp
leave
je
icebp
and
cmp
xchg
and
cld
jmp
xchg
and
inc
cwde
ins
jbe
bound
mov
inc
cmp
mov
test
neg
mov
add
mov
out
cmp
xchg
lods
int
cs
(bad)
push
xor
mov
aad
sub
cmp
ja
or
mov
cs
stos
cs
test
push
sbb
and
pop
sbb
jne
cmp
test
cwde
cmps
xchg
mov
cmc
rcr
mov
cs
cmp
mov
jae
nop
out
aam
push
jns
pop
mov
cmps
mov
aas
retf
mov
out
stos
cs
push
sbb
push
mov
pop
jmp
lock
mov
and
cmp
jne
dec
mov
mov
sbb
sub
jb
mov
aad
neg
out
daa
(bad)
xchg
loopne
fstp
pop
cmp
stc
icebp
pop
mov
adc
push
sbb
pop
add
sub
add
les
jle
mov
repnz
mov
cmc
mov
cld
fwait
xchg
mov
xlat
mov
jge
movs
cmps
ja
mov
pop
fcomp
retf
rdtsc
jg
outs
lds
push
icebp
sbb
shr
mov
fwait
(bad)
jg
push
(bad)
out
sbb
push
stos
sti
cs
pop
mov
cs
or
out
fs
ret
loope
mov
outs
nop
adc
sub
push
xor
or
xchg
dec
daa
pop
push
push
add
(bad)
cs
cdq
mov
xchg
pushf
mov
dec
jmp
bsr
jg
retf
call
scas
cmp
sbb
pop
mov
add
cmps
daa
movs
xor
out
push
repz
daa
dec
or
data16
adc
lock
and
sub
pop
out
add
in
lods
sbb
stos
pop
dec
or
adc
inc
lods
fmul
cli
in
cmps
or
mov
jge
sahf
scas
lahf
or
pop
sub
fs
mov
nop
scas
adc
xchg
cdq
scas
sub
jne
push
xchg
outs
cs
adc
or
cs
fisub
lock
addr16
daa
mov
(bad)
sbb
ins
push
shl
jb
sbb
jns
stc
jmp
xor
daa
mov
sar
push
pop
sbb
or
ja
pop
sbb
cmps
pop
out
add
sub
in
leave
inc
cmp
std
inc
ins
(bad)
cmc
fwait
sbb
or
or
sbb
add
and
repnz
and
(bad)
into
xor
fild
push
jne
int
cs
and
pop
adc
adc
outs
aas
ins
es
fdiv
inc
pop
xchg
pop
or
push
sub
mov
fcomp
or
xchg
sahf
mov
inc
mov
and
fidiv
test
iret
cmp
mov
mov
xor
arpl
pop
mov
test
fidivr
jecxz
add
add
push
sub
xor
lods
in
outs
out
inc
and
lahf
dec
popf
test
ja
cs
lock
push
mov
mov
push
jmp
jecxz
xchg
dec
mov
enter
sbb
sbb
sar
(bad)
fisttp
mov
mov
adc
inc
mov
cs
stos
pop
add
sbb
push
pop
push
aas
retf
shr
icebp
xor
xchg
mov
inc
sbb
clc
mov
nop
leave
les
mov
dec
inc
jmp
and
fild
jno
into
les
fs
adc
push
jns
in
daa
jno
scas
inc
(bad)
jbe
xor
mov
into
sbb
mov
ins
out
fwait
add
in
cs
add
dec
sbb
sub
sub
mov
mov
cmc
aad
and
cld
data16
inc
fnstenv
cs
enter
mul
xlat
aam
inc
xchg
fstp
sbb
or
and
jp
mov
cs
sub
xor
pop
adc
adc
adc
mov
mov
leave
fwait
add
and
xchg
jl
lahf
loop
mov
les
cli
rcr
frstor
lahf
ins
cmp
cmp
push
inc
jbe
cwde
out
sbb
inc
xchg
mov
cwde
cs
shl
mov
jno
dec
shl
cmps
sub
add
out
jmp
cmc
add
mov
jbe
or
out
sbb
pop
mov
push
lock
xchg
xor
out
aaa
push
pop
jnp
mov
mov
inc
je
add
cmps
pop
imul
not
xor
lea
xchg
(bad)
and
repnz
mov
xor
sub
mov
xlat
xor
test
pop
dec
sub
adc
inc
cdq
aam
mov
stos
aas
mov
mov
pop
jge
data16
dec
inc
int
mov
inc
gs
(bad)
jmp
out
stos
pop
aam
xchg
pop
in
cmps
jae
ret
mov
jne
std
(bad)
sahf
jnp
leave
sahf
popf
dec
dec
ja
add
xor
adc
pop
in
dec
in
mov
into
stos
stos
outs
lods
pusha
cwde
(bad)
and
(bad)
ds
mov
jbe
scas
sub
push
and
pop
das
sbb
cmp
lahf
retf
mov
nop
cmc
movs
lock
mov
leave
and
je
stos
jns
sub
jl
adc
inc
loopne
xor
mov
xchg
sti
sar
cwde
dec
mov
fdiv
scas
sbb
cld
into
xor
mov
ret
daa
and
lods
out
sub
lods
in
fdivr
sbb
sub
push
push
push
into
add
cmp
jnp
xchg
aaa
or
mov
cmps
push
call
mov
add
(bad)
mov
jge
xchg
movs
mov
xchg
(bad)
sub
jp
leave
test
test
lods
add
xchg
jle
xchg
jmp
sub
xchg
test
or
(bad)
(bad)
sub
lods
fldcw
shl
xchg
retf
jg
cmp
xor
adc
or
mov
cmps
retf
(bad)
aam
jle
leave
dec
xor
into
jge
(bad)
imul
mov
mov
mov
sbb
add
cmp
ins
(bad)
es
pop
stc
stc
cmp
fist
inc
mov
jmp
push
and
iret
leave
jbe
sub
cs
imul
retf
(bad)
xor
lock
inc
jmp
out
jmp
mov
loope
cwde
in
mov
das
mov
or
js
fst
inc
mov
push
adc
cwde
movs
cmps
and
mov
rcl
jbe
imul
cdq
retf
fcom
jae
scas
xchg
in
dec
bound
sub
rcl
out
dec
inc
pop
jmp
push
sbb
cmps
sub
lds
test
adc
mov
cs
into
and
pop
pushf
add
lods
mov
icebp
adc
test
scas
scas
jecxz
fnsave
scas
fcmove
pusha
cmp
iret
jnp
in
xor
jo
int3
sub
xor
mov
mov
or
sti
fwait
sub
rol
sub
dec
cmp
xlat
xchg
or
sbb
sar
out
push
cdq
lods
adc
loop
jmp
int
cwde
jle
lods
jmp
xchg
cmps
mov
xchg
mov
push
mov
daa
jmp
pop
mov
movs
add
mov
xchg
adc
fdiv
nop
adc
sbb
into
and
fstp
mov
push
cmp
pop
or
pop
push
sub
sub
push
clc
xor
adc
movs
dec
ret
pushf
cli
pushw
test
sub
popf
enter
in
pop
push
ret
(bad)
jmp
test
ins
xchg
imul
mov
stos
movs
cs
cdq
push
jmp
stos
inc
xor
pop
xchg
rcl
cs
and
cs
adc
xchg
xchg
fsub
popa
push
sbb
scas
iret
mov
xor
ror
cmp
fisub
mov
sub
jb
bswap
cmp
fistp
pop
mov
fisubr
and
add
lods
arpl
jbe
xchg
(bad)
jecxz
xor
test
jmp
pop
xor
outs
jle
add
ins
add
sti
or
and
rcr
ror
outs
dec
ja
int3
aas
push
xor
jbe
inc
imul
repnz
popa
jmp
sub
(bad)
mov
pusha
leave
inc
aad
lea
and
inc
test
scas
push
sub
pop
shl
fcomp
(bad)
and
movs
sub
fxam
daa
imul
in
mul
ret
fwait
rcl
popf
pop
cld
test
mov
cs
push
mov
int
inc
lea
sar
xor
enter
cmp
mov
pop
(bad)
repz
outs
inc
mov
xchg
add
out
add
pushf
ins
xchg
test
enter
sar
call
lods
mov
hlt
mov
sahf
adc
xor
test
cs
mov
and
jmp
leave
shl
xor
add
lods
mov
into
sub
lods
xor
jb
arpl
ins
iret
push
or
aad
es
dec
lds
mov
cmp
aas
scas
dec
repnz
clc
inc
jecxz
mov
sahf
or
push
lahf
dec
pop
scas
xor
sbb
jmp
into
push
lods
mov
int3
cli
add
pop
sub
movs
mov
pushf
ret
jne
(bad)
jnp
je
test
out
mov
fcomp
leave
cmp
pop
in
out
mov
pop
and
daa
cs
cmp
and
jno
pop
mov
dec
scas
jnp
sub
imul
mov
mov
ss
movs
int
imul
xchg
sar
movs
xchg
shl
mov
pop
ret
push
jbe
sub
jg
mov
or
leave
push
fs
aam
ds
(bad)
mov
or
stos
xchg
xchg
jp
out
(bad)
fldenv
cdq
(bad)
adc
xor
cwde
inc
xor
in
test
fld
mov
ins
or
adc
test
into
or
adc
out
mov
add
lea
loop
jb
imul
mov
xor
xchg
mov
jl
inc
xor
sub
fld
sbb
jnp
inc
pop
push
pushf
xchg
adc
xor
inc
push
add
pop
sbb
jp
out
inc
repnz
jae
pop
pop
cmps
pop
sahf
lahf
lock
cmp
stos
in
js
out
push
inc
lods
movs
pop
daa
push
inc
or
push
(bad)
in
shl
fstp
add
dec
ins
leave
push
pusha
cwde
cmc
adc
mov
dec
test
add
mov
adc
stos
jbe
out
pop
mov
fild
mov
xrelease
push
(bad)
and
(bad)
sti
push
(bad)
xor
and
mov
cs
into
fstp
or
mov
retf
xor
xchg
ret
mov
mov
cs
mov
push
fcmovne
xchg
jbe
mov
push
push
mov
mov
inc
or
loope
test
pop
jae
xlat
xchg
retf
cmp
push
mov
ss
cs
fwait
cwde
and
bound
mov
jmp
and
add
inc
icebp
mov
test
(bad)
xor
xor
mov
es
std
mov
mov
out
mov
leave
cs
push
xor
jmp
mov
sub
test
push
lds
loopne
or
push
adc
ret
pop
add
sbb
push
movs
jmp
sti
mov
movs
add
mov
push
pop
imul
pop
cmp
jnp
inc
les
imul
xor
pop
test
fcmove
fmul
mov
pop
fldenv
sub
or
sbb
out
out
(bad)
and
icebp
shr
mov
sahf
mov
fnstsw
fsub
ds
sahf
jp
dec
jl
and
jae
and
push
mov
sub
cmps
outs
and
hlt
xchg
mov
je
add
lods
stos
dec
icebp
push
ss
sub
jae
xchg
scas
or
rcr
dec
and
jnp
jmp
shr
jne
outs
sub
sbb
lods
cwde
(bad)
xchg
jle
call
mov
xchg
fnstenv
es
clc
inc
xchg
inc
sbb
das
xchg
pushf
jbe
ins
sbb
nop
cmp
cmp
mov
sub
adc
mov
addr16
leave
dec
pop
sahf
outs
in
outs
retf
adc
in
xchg
pop
test
in
shr
ins
push
arpl
bound
mov
outs
dec
dec
dec
dec
out
dec
jle
movs
push
arpl
mov
cmp
les
mov
scas
out
sti
shl
mov
fsubr
inc
fs
(bad)
sub
mov
div
retf
cmps
loope
movs
xor
popf
adc
xlat
ins
mov
mov
xchg
(bad)
rol
pop
out
mov
sub
test
push
cs
mov
mov
outs
dec
push
scas
xchg
outs
fsub
shr
fsubr
int3
cwde
sub
sub
sub
xor
xchg
scas
push
aam
daa
sbb
sub
sbb
cmp
cdq
cmps
sub
fwait
addr16
mov
lahf
aam
mov
bound
jmp
sub
xchg
scas
xor
sti
mov
call
cwde
sbb
mov
cs
or
cs
or
movs
std
jge
fdivr
and
jle
mov
xor
jl
clc
sbb
push
and
mov
mov
pop
out
sub
mov
mov
mov
ins
mov
push
cs
ja
cmp
and
xor
adc
test
mov
lahf
mov
cs
scas
fucomp
gs
ficomp
xchg
xchg
scas
loopne
inc
leave
out
mov
(bad)
push
neg
fld
fld
movs
cmc
mov
mov
leave
mov
test
inc
dec
adc
iret
jbe
push
out
mov
cdq
sub
hlt
mov
daa
scas
ins
fild
add
ret
pop
sub
gs
out
leave
call
pop
sub
es
out
scas
mov
sub
pushf
mov
mov
mov
arpl
or
mov
inc
outs
inc
and
gs
scas
aam
test
lods
add
and
sub
xor
mov
in
adc
dec
lods
xor
pop
das
in
ja
push
ret
mov
fldenv
aaa
aaa
out
cmps
mov
jae
(bad)
fcom
or
dec
ins
push
in
test
and
inc
cmp
out
dec
sbb
inc
sar
es
xor
xor
sub
cmps
mov
adc
icebp
imul
es
add
(bad)
mov
popf
aam
jmp
xchg
ds
into
xor
mov
das
add
xor
imul
retf
mov
fcom
sub
xor
ins
cmp
push
(bad)
std
(bad)
call
pop
cs
mov
sbb
sub
push
ret
adc
scas
inc
jbe
cs
imul
and
mov
mov
jg
sbb
imul
add
fstp
or
jo
rol
pop
adc
jl
xor
sti
outs
ins
test
inc
retf
mov
icebp
ins
jp
push
imul
std
cs
inc
and
mov
jmp
xchg
and
or
xchg
push
or
sub
mov
inc
cmp
outs
pop
retf
pminsw
add
fidivr
add
xchg
cs
xchg
fdivr
(bad)
shl
xor
cmp
call
fld
daa
loopne
or
and
xchg
fs
loopne
cs
je
jo
mov
fcomp
(bad)
pop
jne
add
sub
or
push
adc
in
popf
outs
int3
ficomp
and
cmp
dec
fs
fist
arpl
stos
pushf
rcr
inc
mov
cwde
cs
arpl
pop
push
inc
or
and
push
add
not
jge
cli
pop
add
push
data16
popf
nop
call
pop
imul
add
(bad)
xor
xor
stc
pushf
add
inc
(bad)
dec
dec
sub
mov
inc
(bad)
ins
(bad)
adc
in
test
sahf
jno
es
(bad)
pop
imul
add
mov
mov
imul
retf
dec
lock
and
ds
rol
je
pop
loope
ror
fmul
imul
and
bound
sub
test
dec
cmps
out
sahf
cld
cmp
pop
sub
scas
(bad)
dec
int
xchg
jmp
outs
cmps
xor
repnz
mov
out
sbb
mov
jge
xor
inc
fdiv
mov
out
cmp
pop
jo
add
retf
mov
inc
sbb
repnz
sbb
push
jns
les
dec
enter
leave
cmp
imul
sub
outs
adc
push
je
test
in
push
xlat
mov
xor
out
cmp
shl
lods
jae
push
mov
movs
mov
mov
jecxz
mov
mov
lods
bnd
popf
rol
gs
fdiv
push
sub
ret
sbb
cmc
sub
mov
cmp
push
and
cmps
and
mov
fisub
stos
hlt
or
pop
in
and
push
mov
sub
mov
push
rcl
fdiv
xor
into
outs
jmp
arpl
imul
int
adc
xchg
sub
aaa
cmps
js
mov
mov
xchg
dec
push
pop
outs
out
ror
sti
pop
mov
addr16
stos
sbb
pop
call
repnz
push
pop
xlat
dec
mov
pop
leave
jnp
adc
xchg
xor
or
lods
fdivp
cmps
cld
xlat
stc
out
jge
mov
daa
jbe
pop
or
sub
mov
movs
iret
(bad)
fmul
push
jle
out
pop
sub
(bad)
and
mov
xchg
aam
fisub
add
mov
stc
test
movs
lock
pop
jl
mov
es
stos
out
and
jns
retf
mov
jecxz
inc
shr
loope
cs
ror
or
rcr
jmp
ret
adc
stos
and
or
xchg
jnp
cmp
lock
aas
jle
cmova
mov
mov
ret
xchg
js
lods
cs
fwait
das
stos
mov
jle
jns
mov
pushf
(bad)
popa
cs
pop
or
push
sbb
mov
xchg
aad
adc
cs
in
ins
push
dec
out
test
cs
fwait
mov
mov
outs
fucomi
imul
retf
mov
sbb
ds
daa
idiv
sub
pop
jae
dec
lods
and
add
jecxz
out
fiadd
push
inc
jl
push
mov
out
pop
in
sub
sub
mov
jmp
or
cmp
jo
sub
pop
shr
jge
jae
cmc
sbb
adc
sub
out
or
xor
in
sahf
repnz
push
aas
and
stc
outs
inc
fdiv
inc
retf
imul
lods
ds
leave
clc
mov
cs
test
mov
dec
mov
lahf
lds
mov
mov
data16
retf
adc
mov
or
jmp
cs
test
pop
ss
inc
jmp
into
and
lods
pop
(bad)
jl
cs
jns
ja
and
add
ds
in
aas
adc
cs
dec
or
sub
push
into
push
ins
pop
stos
sub
js
stc
pop
and
bound
mov
arpl
test
mov
and
pop
inc
inc
shl
fnstcw
mov
(bad)
cli
pop
and
enter
popa
movd
mov
and
je
arpl
jbe
dec
sti
pop
mov
fldenv
fistp
jmp
ret
or
sbb
inc
xor
jle
cs
sbb
push
cs
pop
xlat
aad
repz
mov
dec
in
xor
(bad)
rcr
mov
xchg
(bad)
clc
test
add
jmp
xor
movs
jno
test
pop
cs
cmp
xchg
(bad)
scas
mov
cs
cmp
adc
pop
mov
cs
push
jle
jno
xor
in
shl
and
ucomiss
into
or
fs
xchg
mov
(bad)
jo
fisub
sub
cmp
ret
jg
sti
sub
ss
cs
loop
mov
out
push
cmp
in
and
sbb
dec
int
pop
pop
adc
pop
popf
adc
cmp
outs
push
inc
loope
dec
dec
test
jb
imul
xchg
test
das
adc
fstp
icebp
adc
int
pop
adc
mov
mov
jp
fidivr
adc
mov
dec
mul
sahf
jne
iret
xchg
outs
in
cmp
mov
mul
or
cmp
fidiv
data16
sub
test
dec
retf
jne
sbb
xlat
xor
fiadd
das
mov
or
aad
inc
sbb
(bad)
mov
jbe
jmp
cld
hlt
and
in
movs
jmp
pop
icebp
cmp
clc
inc
mov
jecxz
mov
(bad)
bound
sbb
out
sti
cld
outs
adc
leave
and
or
xchg
retf
dec
mov
lods
jle
leave
adc
adc
mov
test
xchg
scas
sbb
ds
sub
das
in
scas
pusha
adc
aas
cmp
dec
dec
jnp
in
repz
push
test
fsubr
xor
cs
jl
push
push
and
hlt
mov
ds
mov
nop
push
retf
cs
pop
dec
or
cli
lds
mov
(bad)
int3
popf
and
push
cmps
pop
aas
ss
(bad)
ficomp
cmp
pop
mov
jmp
xor
mov
jmp
cs
fneni(8087
dec
inc
push
sbb
aam
cmp
mov
fadd
pop
or
mov
inc
or
data16
ins
mov
push
jo
sub
dec
jmp
(bad)
int3
mov
mov
test
pop
in
loope
sbb
jp
push
ss
fdivr
cwde
sbb
inc
mov
cmps
dec
loop
popf
sub
scas
sub
aad
pop
mov
out
repz
rol
stos
out
popf
xlat
mov
sub
(bad)
lods
cli
inc
sub
adc
sub
jle
lea
pop
xchg
fidivr
jno
fcomp
movs
outs
add
inc
cmp
xchg
mov
idiv
clc
(bad)
push
push
sbb
mov
xchg
arpl
inc
dec
cs
mov
or
fstp
cs
or
cs
and
leave
cs
pop
push
xchg
cdq
outs
pop
movs
jb
xchg
rol
sbb
cs
mov
je
stos
scas
xchg
aad
add
cmps
sub
jne
movs
in
leave
xor
ss
and
dec
leave
or
adc
sbb
cmp
dec
cmp
cmp
adc
repz
cs
adc
pop
adc
push
pop
push
push
adc
pop
inc
cs
std
cmps
xchg
rcl
mov
ficom
test
out
jbe
cmp
xor
sbb
movs
jmp
loop
add
mov
or
into
fmul
repnz
scas
sbb
jbe
inc
xor
xor
jae
out
xor
cmp
xor
sbb
mov
mov
sub
push
pop
add
cmp
out
jnp
outs
cs
or
xchg
fild
sbb
jl
mov
(bad)
stos
adc
mov
outs
xor
ret
mov
adc
pop
imul
cwde
cs
adc
popa
jg
pcmpeqb
xchg
ret
dec
sub
lea
sbb
pcmpeqw
sub
add
je
loope
aam
imul
jp
mov
jg
(bad)
out
cwde
call
add
fmul
stc
das
cli
(bad)
in
push
adc
loope
xor
mov
(bad)
fiadd
pop
leave
daa
fucomp
mov
jo
movs
mov
jb
stos
sti
jnp
js
call
daa
xor
and
sbb
leave
sti
lds
aad
cmc
ret
pushf
cmp
adc
aaa
mov
push
lds
aaa
lahf
cmp
jnp
pop
fadd
adc
scas
xchg
inc
sbb
and
mov
mov
and
enter
xor
dec
xor
and
repnz
xchg
out
leave
popa
fimul
mov
add
dec
inc
ret
nop
fs
push
xchg
call
mov
push
jno
dec
xor
aam
(bad)
cmp
std
int3
out
inc
or
ror
mov
inc
cld
(bad)
or
and
(bad)
sub
shr
push
add
and
std
adc
scas
push
fisub
add
and
leave
inc
(bad)
cld
xchg
fstp
jnp
retf
inc
ret
icebp
fs
cli
in
sbb
pop
lods
call
xchg
cmp
push
fst
push
stos
cs
mov
adc
xchg
xchg
xor
es
inc
mov
sbb
or
retf
xor
inc
mov
aam
dec
sub
lods
dec
xor
add
mov
into
and
rol
adc
ss
retf
pop
mov
jb
jle
outs
and
sbb
sub
sub
mov
jbe
mov
dec
push
(bad)
dec
cmp
or
adc
dec
bound
rol
or
jb
ss
cwde
inc
daa
push
sub
rol
lods
xchg
mov
es
sub
adc
push
dec
out
or
push
sub
inc
mov
and
dec
or
imul
jl
mov
dec
jge
lock
xchg
sahf
test
cmps
lods
and
and
(bad)
mov
es
xor
leave
repz
mov
push
add
(bad)
dec
cwde
mul
outs
test
pop
pop
jae
cmps
les
jg
mov
and
repz
xchg
outs
or
xor
ins
jb
cmps
out
or
push
and
sbb
cmp
and
push
jmp
mov
(bad)
sub
xchg
xchg
cs
out
(bad)
sub
inc
js
aas
nop
call
mov
retf
fxch
adc
ret
cmps
xor
sbb
xor
adc
sub
and
dec
xlat
sub
jecxz
sub
call
jb
cld
fsubr
lods
cmp
nop
mov
push
cmp
push
xchg
mov
fs
data16
push
pop
sub
adc
repnz
aas
mov
aam
cmp
xchg
bound
into
scas
push
ins
push
aas
cs
xchg
fadd
push
int
pop
and
(bad)
je
push
shr
mov
test
and
std
retf
cmp
inc
dec
jnp
push
int
fist
adc
ret
jmp
and
aam
mov
xor
cmp
inc
sahf
shr
cmp
stc
add
fs
cs
add
lahf
sub
xor
adc
scas
int3
mov
cmp
jns
jae
aad
ds
out
test
dec
xor
push
or
jecxz
imul
pop
cwde
jg
sub
int
dec
je
ds
xchg
jo
or
jmp
xor
ja
in
and
mov
aas
cs
push
fist
cs
bound
into
mov
pop
cmc
mov
clc
and
sbb
mov
in
ja
repz
daa
dec
data16
inc
push
xchg
(bad)
in
jmp
movs
push
sti
adc
cs
pop
inc
dec
rcr
inc
cs
mov
jae
retf
das
pop
rcl
xor
jmp
mov
xor
hlt
push
fs
or
cs
bound
sub
lar
(bad)
xchg
scas
ins
rol
push
stc
inc
jb
cmp
push
pushf
add
adc
cs
pop
push
jbe
js
test
aad
inc
pop
pusha
ds
inc
xchg
jp
rcl
inc
pop
fdivr
daa
cld
inc
in
lds
mul
imul
stos
jmp
push
pop
jecxz
push
xor
pop
and
jl
push
mov
repnz
dec
push
popf
bound
dec
mov
mov
aaa
mov
inc
outs
icebp
xchg
fistp
sar
jmp
out
sti
cld
cld
ins
not
jo
leave
cmp
cmc
pop
mov
mov
push
pusha
in
leave
aam
cmp
jno
test
bnd
inc
inc
icebp
inc
shl
xchg
lock
out
xor
dec
cmp
mov
add
dec
ficom
int3
mov
out
jne
pop
and
jnp
push
outs
cmp
mov
scas
sar
movs
sub
and
(bad)
inc
inc
mov
push
movs
pop
pop
xor
rcr
xchg
push
cmp
fisub
sub
inc
pop
xlat
mov
(bad)
xchg
int3
push
add
push
aaa
jp
cwde
mov
fistp
jns
scas
xor
sahf
clc
jge
ja
test
cmps
jno
inc
fdiv
out
mov
in
dec
sahf
retf
pop
repz
xchg
out
scas
fs
mov
repnz
mov
cmp
pop
jmp
aaa
and
fs
cdq
adc
mov
jnp
repnz
xchg
cmp
lods
push
inc
mov
add
stc
out
fsubrp
xchg
add
sub
sbb
cmc
dec
mov
sub
aas
mov
xchg
ss
ret
mov
xchg
jg
sub
(bad)
adc
cmp
mov
xchg
faddp
clc
inc
rol
push
jle
scas
or
popf
loopne
ds
push
jne
xchg
mov
ror
aas
push
xchg
mov
or
loope
sub
fadd
(bad)
pop
aam
jle
lods
xchg
pop
imul
cmp
leave
mov
lods
mov
jns
call
mov
sub
sahf
xlat
into
daa
adc
jno
inc
adc
inc
aaa
jo
enter
xchg
je
and
popa
loop
retf
mov
cmp
scas
aad
fnstsw
sbb
mov
mov
das
ud0
ins
movs
inc
lock
fucomp
adc
jmp
mov
popf
loope
mov
fidiv
sub
leave
pop
mov
cs
jnp
cmp
xchg
or
mov
mov
adc
mov
icebp
push
mov
pop
lock
push
fdivr
(bad)
test
mov
adc
xor
sub
pop
xor
sbb
ret
inc
pop
test
push
pop
push
gs
call
enter
dec
and
xor
in
xchg
xor
dec
pop
lock
mov
cs
jno
fist
push
cs
jmp
scas
pop
push
dec
xor
daa
out
ins
sub
dec
adc
cmp
push
jb
push
inc
pop
pusha
fcmovne
mov
pop
pop
cs
xchg
(bad)
icebp
lods
lods
xor
ds
stos
das
loop
aaa
or
add
jno
and
xchg
out
xchg
cs
cmp
sub
dec
mov
inc
xor
xchg
push
cs
loop
pop
in
sbb
cmp
aam
imul
cmp
pop
out
pop
push
and
add
sub
add
mov
pop
fwait
xor
push
pop
xlat
stos
xchg
mov
aas
in
out
push
repz
xor
popf
xor
push
jg
push
inc
mov
or
sbb
aas
pop
int3
cs
fcomp
mov
out
bound
scas
mov
jle
daa
push
inc
je
les
push
jne
ins
pop
adc
jae
icebp
test
fucomip
fdivp
push
jecxz
pop
mov
mov
repz
out
lds
cs
out
mov
mov
call
dec
aad
mov
jl
or
cs
test
cli
and
mov
sbb
scas
test
rcr
test
xchg
push
pop
stos
dec
or
sbb
push
cs
xchg
adc
push
fidivr
xchg
packuswb
inc
out
out
sbb
xor
pop
push
icebp
adc
ins
jnp
and
and
test
out
jns
sbb
add
adc
jg
dec
and
mov
iret
or
cmp
fwait
bnd
adc
sub
clc
mov
mov
les
lea
xchg
loopne
icebp
mov
sub
sbb
dec
into
(bad)
jae
and
pop
xor
and
aas
loop
shl
sub
cs
sbb
xor
(bad)
cmp
imul
or
mov
sti
stc
cmp
cs
xor
jnp
sbb
push
dec
add
out
mov
xchg
adc
je
dec
arpl
and
xor
push
push
pop
xor
cs
(bad)
sbb
sbb
push
xor
jp
mov
mov
test
fidivr
cdq
cs
fcom
mov
into
inc
push
int3
jle
adc
or
add
jmp
mov
out
jmp
es
scas
xor
pop
mov
not
pop
gs
cs
lea
dec
lods
adc
cs
mov
stos
fsubr
xchg
add
out
enter
pushf
cs
xchg
mov
nop
push
in
cmps
xor
jecxz
pushf
fucom
fidivr
imul
aaa
cmp
pop
es
fwait
lahf
cs
ins
pop
mov
xchg
cmp
pop
pop
cs
sbb
cs
ja
push
loope
imul
mov
jmp
mov
out
pop
push
clc
mov
or
stos
or
sbb
jle
push
push
inc
in
adc
push
mov
pop
aaa
xor
mov
xchg
sbb
stc
aaa
cmp
and
push
int3
jmp
inc
sub
das
add
shr
lahf
dec
rcl
(bad)
xchg
(bad)
pushf
rcl
into
aad
sub
cdq
xchg
scas
sti
push
adc
scas
xchg
mov
dec
mov
xor
mov
imul
(bad)
cs
outs
xchg
loopne
daa
mov
add
add
xor
mov
fucomi
stos
push
call
push
cld
repz
xchg
int
xchg
cs
outs
pop
ds
cs
mov
mov
mov
xchg
(bad)
js
sub
sub
iret
sub
push
lock
movs
xchg
mov
sti
retf
mov
fptan
and
inc
sub
pop
dec
adc
adc
add
es
stos
jmp
sahf
pop
jne
push
xor
ret
imul
dec
or
inc
js
rol
(bad)
mov
movs
test
ror
fst
int3
add
xor
repz
je
push
add
int3
xchg
pop
pop
inc
jbe
push
or
test
mov
dec
push
mov
xor
mov
leave
xor
push
das
inc
jbe
(bad)
(bad)
arpl
stos
sub
and
jp
push
gs
cmps
xchg
pop
pop
sub
adc
rol
xor
add
xor
mov
enter
paddq
cmp
or
scas
fistp
out
mov
jg
lock
leave
cmc
add
cmps
retf
mov
shl
adc
shl
sub
mov
dec
cmp
mov
cmc
or
(bad)
pop
mov
cmp
jecxz
jb
(bad)
retf
rcl
mov
mov
js
cmps
pop
lds
packsswb
std
cwde
fnsave
cdq
leave
cmp
and
imul
xor
jmp
mov
or
lods
cs
and
cs
aam
out
repz
int3
dec
jbe
pushf
outs
sub
sahf
ins
inc
sar
imul
inc
pop
inc
ret
mov
and
mov
cmc
mov
mov
aam
imul
mov
idiv
mov
stc
test
cmp
loop
adc
mov
xor
in
jne
cmp
or
lods
mov
inc
add
xchg
sub
rcl
sahf
aas
ficomp
dec
sbb
inc
stos
pop
adc
lods
call
mov
iret
cld
mov
xor
jo
fstp
cmp
or
pop
adc
add
inc
jbe
divps
add
mov
aas
sub
movs
into
fstp
sbb
sbb
(bad)
adc
fisubr
and
and
or
daa
push
cs
les
jp
xor
push
lock
inc
push
pop
sbb
pop
stos
or
sub
mov
xor
je
push
dec
mov
add
bound
cmps
out
cs
pop
std
test
push
aam
lock
jnp
fild
loopne
test
jmp
xor
pop
mov
lods
mov
cli
test
jns
imul
xor
stc
mov
scas
pop
mov
shr
lds
stos
push
push
sbb
ud1
mov
cs
pop
sbb
mov
lods
sbb
pushf
imul
jmp
pop
mov
xchg
popf
leave
xor
aam
and
mov
pop
adc
outs
stos
popw
stos
out
mov
inc
pop
xor
nop
xchg
retf
scas
mov
jb
jne
std
(bad)
hlt
addr16
in
lods
into
xlat
jae
loopne
iret
mov
xor
xchg
xchg
pop
fisubr
int3
cs
rcl
sub
je
jb
js
push
xchg
lea
mov
aas
xor
(bad)
bound
add
add
retf
stc
jae
dec
inc
(bad)
cdq
(bad)
mov
xchg
xor
scas
lahf
or
int
out
mov
push
push
stc
adc
sub
rol
aad
scas
jl
stos
cmp
(bad)
dec
bound
inc
cmp
in
sti
movs
adc
mov
scas
fld1
cmps
dec
jge
leave
or
in
mov
push
sub
xor
sub
or
mov
test
test
cmc
ins
mov
fwait
pushf
sbb
stos
clc
scas
pop
ds
pop
scas
or
inc
jo
mov
das
push
shr
cmp
and
push
xor
xchg
lock
inc
mov
mov
aas
loop
xor
xor
ins
and
clc
add
adc
sbb
cmp
sbb
sbb
je
inc
sub
cs
xor
cs
dec
into
(bad)
cld
xchg
pop
ja
cmp
je
dec
or
pop
aas
in
adc
push
pop
xor
xchg
cs
out
cmps
adc
adc
sahf
push
sub
push
sub
jb
mov
pop
sbb
dec
idiv
xor
(bad)
(bad)
mov
call
jmp
dec
retf
cs
shr
cmps
lods
rcr
cmp
xor
sahf
fmul
xchg
cs
cwde
(bad)
xchg
cli
mov
in
xor
mov
imul
mov
push
(bad)
outs
inc
add
or
xchg
rcr
xor
gs
ror
push
or
dec
push
sbb
popa
fcmove
ds
lahf
jb
push
pop
cmp
std
out
lds
cmp
ja
mov
push
fs
jecxz
les
dec
jne
cs
out
jmp
xor
daa
sub
aam
pop
es
sub
pop
dec
retf
retf
cmp
aam
lds
jmp
scas
cmps
retf
pop
lods
dec
mov
pop
xor
dec
enter
shr
dec
pop
movzx
or
xor
add
and
jg
out
scas
rol
cs
cmp
sti
adc
sbb
movs
clc
mov
shl
jbe
add
daa
jmp
mov
arpl
mov
arpl
mov
(bad)
cs
mov
sub
into
es
and
hlt
retf
dec
je
xor
xchg
pushf
jle
and
or
and
es
sub
add
mov
imul
ins
dec
rcr
inc
xor
pop
int
and
jecxz
(bad)
mov
or
mov
daa
xor
movs
aaa
or
mov
pop
cmp
call
or
or
push
(bad)
mov
jno
icebp
jae
mov
sub
(bad)
push
cmp
into
jmp
add
dec
and
and
inc
aad
mov
and
cli
add
mov
or
pop
adc
je
ins
(bad)
and
jne
jnp
fcomp
mov
and
loop
xor
cwde
jmp
sahf
jl
arpl
xchg
out
or
or
push
leave
dec
add
call
fldenv
cmp
push
push
mov
(bad)
dec
dec
sub
push
dec
dec
push
fdivr
test
push
stos
lock
add
and
push
lods
xor
push
push
ds
jge
cwde
fs
xor
scas
dec
push
push
cwde
mov
add
mov
sub
loop
cwde
push
fisubr
mov
jnp
cmp
dec
sahf
inc
sbb
cmp
adc
sub
push
mov
cwde
movs
pushf
mov
mov
aad
inc
sbb
adc
loopne
mov
test
repz
cld
imul
(bad)
fisub
shl
cmps
cmps
mov
imul
sub
adc
or
mov
push
and
es
jp
outs
cmp
cli
div
ret
enter
mov
push
in
test
loope
das
mov
mov
or
xor
rcl
dec
or
cdq
xor
push
dec
mov
das
cmp
ds
jg
dec
sbb
(bad)
std
sub
in
sub
mov
inc
jae
mov
(bad)
xor
aas
mov
mov
scas
xor
cld
sub
inc
sub
fstp
xor
sahf
jmp
pop
dec
jmp
and
adc
mov
add
sbb
cmp
sbb
and
mov
cwde
jbe
adc
push
and
sub
sub
daa
popa
loope
sub
push
xor
xor
iret
and
fld
and
adc
fiadd
sub
sub
sbb
mov
mov
lods
inc
cs
or
add
adc
mov
out
push
mov
cs
push
cmp
and
inc
fwait
aas
push
aaa
mov
xchg
dec
cs
(bad)
hlt
jge
cs
add
mov
adc
mov
rcl
bound
cmp
xor
imul
sub
inc
shr
in
ss
fisubr
add
cs
sub
in
add
sub
push
or
imul
push
mov
inc
sbb
dec
or
cmc
or
out
adc
jno
in
shl
xchg
adc
neg
leave
lahf
xchg
pop
cs
fcomip
scas
xor
out
push
cld
fs
or
popa
js
mov
jb
push
movs
dec
cs
mov
outs
retf
pop
xlat
(bad)
fistp
test
fwait
lods
sub
add
mov
mov
rcr
xor
push
ret
cmp
clc
into
aad
mov
mov
ret
xchg
popf
sbb
jnp
pop
mov
and
adc
sub
push
mov
in
mov
test
jl
repnz
mov
cmc
inc
fimul
push
repnz
push
push
arpl
add
ja
jmp
cs
retf
mov
xchg
adc
mov
loopne
aad
daa
jmp
data16
inc
add
or
cs
dec
fdivr
push
shr
mov
cmps
daa
push
jo
repz
inc
xor
in
cdq
jns
cmp
and
xchg
outs
icebp
rol
mov
loop
cmp
fsubr
adc
inc
ret
cmp
test
js
dec
or
pop
adc
mov
rcr
xor
(bad)
scas
jecxz
mov
call
mov
fcom
mov
daa
and
scas
lds
or
jns
inc
ficom
je
xor
xchg
add
mov
adc
movs
and
dec
mov
cmps
jb
test
retf
sub
test
je
sub
pop
inc
lds
sub
pop
pushf
retf
cdq
jecxz
adc
aas
dec
aad
les
fsub
ror
xor
push
pop
fsub
jg
mov
test
sub
xor
movs
pop
and
xchg
jne
mov
pop
sti
cdq
mov
neg
loop
jo
jle
mov
sub
and
inc
mov
adc
sbb
mov
fst
cs
ins
outs
inc
jo
aaa
inc
punpckhbw
fisttp
adc
xor
adc
lea
(bad)
mov
aam
jbe
or
stos
cwde
adc
fisub
pop
inc
ffreep
dec
xor
rep
push
stos
into
mov
int3
scas
fwait
mov
call
mov
sub
shl
pop
sub
dec
push
scas
push
pop
add
push
fs
into
pop
pop
adc
sub
xor
sub
push
mov
cs
fcmovbe
ret
cmp
xchg
nop
dec
push
clc
adc
imul
dec
bound
ret
popa
xlat
fcmovnb
cwde
push
ss
jmp
mov
stos
and
ret
push
imul
cs
shr
pop
cmp
js
inc
adc
mov
mov
xchg
sub
bound
or
mov
add
pop
push
jl
rol
(bad)
das
rol
xchg
mov
movaps
cs
mov
mov
and
adc
sbb
dec
sub
arpl
cmp
stos
in
pop
pusha
push
adc
aas
loop
fistp
dec
push
cs
dec
jmp
js
pop
jmp
jb
mov
call
outs
and
and
aaa
mov
imul
dec
ss
push
mov
into
xor
push
sbb
xor
into
sbb
sub
and
sbb
out
test
fdiv
jle
loop
out
mov
and
cmp
cs
int3
ret
sti
inc
cmps
imul
cdq
jnp
div
push
mov
(bad)
ror
or
or
push
push
loope
out
mov
jp
mov
ret
aad
mov
test
mov
cs
sub
xor
add
mov
pushf
push
mov
dec
pusha
sahf
mov
popa
hlt
out
xor
push
dec
daa
stos
add
mov
call
xchg
addr16
inc
aaa
stos
aad
in
mov
shr
pop
into
(bad)
je
test
push
outs
iret
or
jne
push
push
fisubr
sub
js
add
xor
push
outs
aas
sub
xor
call
jge
shl
pop
ins
xor
add
enter
mov
bound
mov
mov
jb
or
jmp
mov
xchg
imul
or
and
mov
mov
loope
leave
bnd
sahf
cli
cs
aad
jbe
inc
loop
xsavec
ds
iret
and
mov
and
cs
in
dec
adc
pop
pop
adc
and
pop
out
outs
lock
jns
mov
or
xchg
pop
push
outs
jp
and
aaa
sub
scas
and
xor
adc
inc
fwait
adc
push
shl
cmp
mov
adc
xchg
sbb
hlt
cs
movs
ret
xor
dec
or
sub
xchg
cs
mov
jbe
pusha
jecxz
add
inc
push
loope
cmovae
aam
fnsave
mov
xchg
arpl
and
xor
sub
int
mov
mov
imul
cld
push
je
lock
inc
out
pop
loopne
inc
in
xchg
adc
cld
cs
inc
imul
jmp
ror
or
adc
push
cmps
sub
clc
(bad)
xor
out
inc
scas
mov
sahf
sub
dec
pop
addr16
mov
cs
or
mov
scas
out
adc
cs
movs
js
jno
xor
xor
(bad)
sbb
cli
aaa
mov
rcr
movs
cs
ins
jl
xor
pop
mov
bound
fcomp
xor
imul
sahf
xor
scas
push
out
scas
daa
cmp
or
inc
sbb
movs
mov
addr16
cs
xchg
xlat
in
js
and
pop
dec
push
mov
and
int
gs
lods
scas
into
sti
xor
inc
rcr
mov
cdq
(bad)
push
inc
add
ret
mov
repz
(bad)
test
jnp
(bad)
ror
xchg
mov
mov
(bad)
(bad)
sbb
shl
mov
sub
sub
add
fbld
cwde
ret
and
scas
aad
leave
push
pop
scas
mov
cmp
adc
loopne
mov
or
mov
(bad)
sub
push
xor
scas
add
push
dec
(bad)
sub
xor
out
sub
cli
fld
xchg
ins
xor
in
xor
fdivr
(bad)
leave
fld
pop
nop
cmc
sbb
scas
sub
sub
adc
adc
call
hlt
cs
aam
xor
mov
mov
add
leave
sbb
aam
icebp
pop
ret
and
pop
loope
lods
(bad)
adc
popf
shr
inc
mov
jbe
inc
cdq
retf
sbb
or
call
jp
mov
mov
add
(bad)
pop
sub
popf
ret
add
pop
rol
leave
mov
cmps
jmp
sub
xlat
add
add
and
pop
int3
push
loopne
xchg
pop
outs
arpl
xor
fstp
lea
inc
loope
push
lock
ss
ja
mov
dec
mov
imul
inc
xchg
das
ss
mov
jle
adc
aas
out
xchg
mov
cs
sub
clc
popa
mov
dec
je
popa
mov
js
mov
or
dec
leavew
adc
les
inc
clc
xor
add
ficomp
sti
hlt
sub
fisttp
out
movs
popf
aas
fmul
add
sbb
inc
or
pop
fsubrp
cbw
sbb
mov
jb
jl
cmps
arpl
stc
int
outs
xor
dec
std
shl
dec
cmp
xchg
cmc
mov
loopne
or
adc
cmps
in
inc
cmps
lahf
ror
xor
js
xor
ds
sub
pop
dec
cmc
ins
or
loope
stos
xchg
icebp
out
inc
push
pop
popf
cwde
sbb
call
add
popf
push
xlat
mov
fs
and
jmp
jae
(bad)
fidiv
leave
cld
jl
aad
fcmovb
pushf
sub
adc
out
jnp
in
adc
(bad)
fisub
cwde
fcomip
mov
fcomp
mov
ror
sbb
js
cmp
fadd
daa
adc
stos
or
and
data16
push
sbb
mov
stos
out
xchg
xchg
xlat
aam
into
movs
out
scas
fidivr
into
shl
imul
aaa
mov
mov
adc
dec
or
out
ja
sbb
mov
mov
fs
pusha
inc
adc
inc
inc
(bad)
scas
push
shl
leave
xchg
int
mov
(bad)
cs
int3
cmps
jmp
retf
in
fistp
push
test
cmp
xchg
test
and
cmps
add
cmp
div
mov
int3
icebp
jmp
lock
sbb
into
mov
mov
lods
mov
jmp
iret
xchg
mov
xlat
les
mov
cs
test
push
cs
call
aad
lock
cs
push
cmp
das
sub
in
outs
pop
push
ja
add
mov
mov
cs
adc
rcr
lds
cs
xchg
(bad)
popa
cdq
sbb
inc
mov
hlt
dec
or
xor
jl
ret
xchg
sbb
mov
mov
popf
arpl
xor
out
imul
sub
and
dec
inc
jp
pop
cs
push
pop
ds
or
cs
adc
hlt
sub
leave
ss
or
jmp
or
cs
pop
adc
icebp
movs
das
lahf
into
jl
fidivr
mov
fsubr
imul
daa
jg
stos
push
daa
enter
aam
mov
add
and
rcl
mov
cs
sahf
mov
push
jno
gs
adc
cmps
push
xchg
outs
das
into
jg
js
cs
xor
sahf
mov
(bad)
mov
ret
div
loopne
dec
mov
arpl
outs
(bad)
push
xor
fld
adc
pop
sbb
sti
mov
xor
fadd
push
cs
les
into
enter
and
fnsave
leave
xor
pop
ror
mov
cmc
cmps
add
dec
cmp
(bad)
movs
adc
in
push
(bad)
mov
mov
sbb
and
mov
jno
cdq
ja
repz
(bad)
xchg
fadd
xchg
sbb
push
call
daa
mov
test
test
adc
xchg
(bad)
lock
rcr
scas
rol
jae
push
xor
mov
iret
push
xor
outs
stos
jne
push
fstp
(bad)
int3
xchg
movs
mov
mov
ins
ficomp
xor
jmp
jmp
mov
and
sub
dec
mov
bound
addr16
fistp
sub
adc
sub
push
div
mov
push
inc
into
add
int
scas
addr16
fldcw
fmulp
dec
mov
cs
or
cmp
fstp
cs
xor
gs
push
call
nop
je
retf
imul
mov
(bad)
adc
fistp
sahf
jge
inc
jb
ret
(bad)
mov
rcl
cs
push
xor
cmp
shr
jno
inc
sti
jg
popf
(bad)
outs
in
lea
or
out
ficomp
ficom
xor
add
setns
jl
mov
dec
lds
sub
mov
enter
and
jbe
dec
movq
icebp
sbb
fist
adc
inc
pop
mov
push
cs
push
retf
xor
into
jbe
xor
or
cmps
das
fmul
out
ja
ret
jnp
mov
bound
and
jg
ficom
cmps
mov
and
lods
inc
mov
and
ja
fsubr
cs
mov
pop
dec
int3
or
inc
dec
pop
jne
or
fbstp
push
push
push
idiv
mov
push
pusha
xor
nop
ret
outs
add
push
cs
and
sbb
mov
cs
jp
push
adc
lds
push
cs
add
mov
add
pop
xor
jl
jmp
rol
repz
push
or
daa
aad
xchg
push
(bad)
push
sub
shr
xchg
pop
jmp
loope
xor
fs
(bad)
addr16
in
(bad)
mov
shl
movs
fwait
scas
xlat
xor
clc
mov
jmp
jecxz
in
add
add
push
movs
and
cs
mov
mov
cs
xchg
sub
and
pushf
(bad)
jl
mov
pusha
(bad)
and
test
sbb
mov
cs
(bad)
aam
add
pusha
sub
cld
(bad)
idiv
cmc
js
fdivr
enter
movs
cs
aaa
sbb
aaa
push
xor
push
stos
lods
sub
mov
std
data16
pmullw
mov
scas
adc
mov
ds
in
and
mov
jge
push
add
cs
sar
adc
xor
nop
xchg
push
cwde
into
icebp
mov
(bad)
retf
scas
cli
(bad)
add
sub
mov
aad
cs
rcr
xchg
(bad)
xor
imul
out
sub
popa
lods
and
(bad)
add
xor
xchg
lods
jmp
jge
inc
push
mov
push
xor
call
jo
xchg
jmp
fisubr
sbb
sbb
popa
push
mov
pusha
shr
xor
jns
xlat
or
pop
into
loope
cs
scas
jle
mov
mov
adc
fbstp
push
xor
inc
pop
push
pop
dec
jmp
push
adc
mov
data16
push
cs
dec
jl
idiv
push
jne
add
or
mov
cs
cmp
pop
call
cmc
sub
cmps
in
xor
mov
in
fs
inc
je
pop
lds
cs
hlt
add
dec
jnp
and
out
sub
into
mov
mov
cmp
leave
jns
or
pop
xor
sahf
adc
(bad)
les
nop
out
and
inc
jns
cs
add
inc
push
daa
adc
mov
cs
popf
jae
cs
dec
pop
aam
jmp
sub
add
int3
sbb
and
fidivr
sub
rcl
ds
push
mov
dec
lods
cmp
inc
cs
(bad)
gs
push
pop
mov
stc
lahf
xor
ss
test
scas
test
ucomiss
(bad)
in
jne
inc
cs
call
or
daa
mov
scas
adc
ins
inc
cs
or
xor
dec
retf
mov
cs
pop
fst
pop
sbb
and
or
cmp
adc
ins
sub
push
rcl
punpckldq
cmp
leave
adc
add
loope
xor
in
mov
mov
push
or
scas
xchg
sbb
int3
iret
xor
mov
es
mov
loope
outs
(bad)
and
aaa
mov
jnp
movs
retf
not
xor
jecxz
and
scas
stos
in
ja
(bad)
cs
push
test
clc
loopne
pop
out
sti
fld
sub
movs
xor
aad
mov
stc
mov
in
ja
push
les
mov
bnd
fsubr
xor
in
sub
loope
cld
xchg
xor
mov
leave
(bad)
cld
aam
das
adc
into
retf
cs
cmp
inc
jnp
adc
lea
xor
add
sbb
dec
cs
and
inc
push
ins
jno
add
mov
aas
sbb
arpl
pop
cs
sub
jge
cdq
rep
mov
adc
popf
(bad)
dec
out
std
mov
ja
stc
sub
sahf
cmc
xor
sbb
dec
stos
push
into
sub
xchg
pop
mov
mov
enter
mov
jle
aas
mov
mov
leave
into
inc
sbb
pop
mov
sub
mov
clc
cdq
pushf
shl
xor
xchg
sar
cld
add
movs
es
sub
xor
xchg
inc
cmp
xor
fstp
pop
fild
enter
cmp
div
rcr
and
pop
inc
pop
fsubp
enter
push
iret
jge
and
mov
sub
mov
ret
or
sahf
and
adc
push
idiv
jb
nop
cs
pop
ins
mov
cmps
pop
adc
push
ret
shl
aam
push
and
imul
mov
fisttp
aad
sub
or
push
outs
ins
call
outs
push
inc
cmp
or
aas
push
pop
inc
add
es
sbb
mov
sub
shl
lds
pop
leave
ror
(bad)
in
pop
aam
das
xor
loopne
addr16
or
cmp
mov
xchg
(bad)
xor
movs
iret
cmp
repnz
div
sbb
mov
gs
mov
push
outs
in
leave
pop
cdq
cs
mov
sub
ret
xchg
int3
cmp
(bad)
xor
(bad)
int
mov
test
lea
vmovq
rcr
add
dec
inc
scas
call
in
xor
scas
jmp
mov
cs
ret
retf
cs
hlt
into
and
nop
jl
cs
jns
add
call
mov
jg
movs
pop
popf
and
pop
mov
mov
pop
mov
and
(bad)
fild
stc
pop
call
sub
cs
out
call
aas
adc
cmps
sub
xchg
and
test
cmps
xadd
push
xchg
rol
(bad)
or
js
cmp
inc
mov
cs
in
jnp
int3
cld
mov
out
sub
pop
ins
jle
rcl
out
cs
pop
or
push
fidiv
xor
add
sbb
les
pop
sbb
cmp
ins
icebp
data16
lds
sub
cmp
hlt
pop
or
xor
pusha
dec
retf
pop
cs
call
cmps
(bad)
cld
out
(bad)
aam
cs
push
addr16
test
test
jns
pop
daa
push
or
scas
dec
popf
inc
lods
pop
cs
pop
xor
test
stc
sub
adc
cmp
and
add
push
or
add
push
push
pop
xor
dec
ss
fbstp
sub
pop
pop
inc
or
cmp
push
pop
loopne
jno
out
rol
mov
in
cs
add
sub
push
icebp
cs
(bad)
test
pop
sar
cmps
jmp
add
cs
push
pop
adc
push
imul
dec
(bad)
int
(bad)
cmp
sub
jmp
sub
cmp
or
daa
dec
adc
sbb
sbb
adc
cs
pop
inc
ja
and
and
stos
int3
mov
mov
sti
push
jae
sub
ja
stos
shl
(bad)
inc
push
xor
std
sbb
fistp
lods
mov
mov
mov
cmp
aaa
shr
cmps
sbb
leave
imul
loop
sub
je
call
leave
cmc
inc
iret
mov
into
data16
mov
push
nop
mov
adc
sub
mov
push
mov
sbb
(bad)
aam
cwde
in
outs
xchg
xchg
sub
sti
aas
jge
not
(bad)
fidiv
cmp
mov
aad
dec
xlat
pop
xor
fstp
fst
xchg
pop
mov
sub
sbb
add
movs
mov
ins
cmp
add
sahf
xor
loopne
or
sbb
aaa
leave
push
dec
sbb
(bad)
pop
out
stc
cwde
sub
cmp
adc
scas
lods
adc
inc
test
adc
xchg
mov
mov
ror
dec
mov
leave
push
jne
and
pop
add
mov
inc
sub
fisubr
pop
cmp
jl
shl
call
jnp
mov
fistp
cs
repz
mov
xchg
xchg
fstp
mov
cs
cld
pop
lock
or
mov
or
jae
xchg
es
and
and
shl
or
sub
xor
dec
shr
fstp
and
xchg
inc
cmp
jb
pop
pop
fist
or
cmp
sub
mov
add
inc
mov
adc
daa
cli
sbb
push
inc
out
scas
pop
(bad)
mov
bound
fdivr
test
aad
loope
in
mov
es
add
cs
fld
adc
stos
inc
movs
push
sub
and
cmp
push
aad
cdq
enter
lock
sbb
ja
pusha
add
rcl
and
ret
adc
mov
scas
adc
pusha
sbb
call
sub
push
pop
push
inc
and
movs
jbe
push
cmp
cld
fild
call
aam
mov
pop
std
inc
(bad)
push
cdq
(bad)
fwait
out
fild
outs
fld
mov
xlat
call
adc
movs
repnz
pop
fldpi
in
call
(bad)
sub
enter
dec
adc
dec
in
bound
scas
cmp
lea
cpuid
add
outs
or
cmp
out
scas
ins
jbe
push
add
jnp
xor
neg
add
es
add
mov
(bad)
ja
outs
retf
ins
mov
mov
jno
into
cmp
jecxz
sti
scas
scas
rol
cmp
and
ss
hlt
ja
in
pop
mov
dec
pop
gs
push
xchg
fstp
jle
sub
sbb
ins
push
cmp
sub
fadd
push
clc
int3
out
mov
cmc
pop
mov
ret
sub
les
push
cmp
aad
xchg
adc
jecxz
cmc
ror
add
mov
lea
xchg
sbb
cmp
aas
xchg
imul
hlt
ficom
jnp
mov
(bad)
aas
push
pop
das
fsub
fcomp
sub
enter
sub
outs
xchg
(bad)
nop
test
jecxz
mov
add
xor
leave
lahf
hlt
xor
jnp
out
dec
mov
inc
inc
cmps
call
mov
fisubr
(bad)
scas
outs
and
and
push
jg
push
aas
mov
or
dec
lods
xor
jns
push
or
mov
xor
adc
out
xor
dec
sahf
stos
bound
sub
cmps
mov
inc
pop
sbb
fild
(bad)
loope
into
(bad)
sbb
mov
xchg
inc
int
retf
sub
(bad)
push
test
push
and
pop
adc
test
xor
xchg
xchg
cs
sahf
push
jp
popf
scas
cmp
out
sub
lds
jne
inc
popa
fiadd
pop
imul
sbb
sbb
inc
inc
popf
fisub
arpl
retf
nop
scas
dec
hlt
fimul
mov
daa
inc
ss
mov
sahf
das
sbb
lock
retf
push
mov
cmps
push
or
pop
adc
cmp
ret
inc
mov
dec
pop
ins
into
outs
xor
mov
sub
add
and
(bad)
lods
mov
xchg
xlat
fistp
push
inc
mov
adc
sub
repz
sbb
dec
scas
(bad)
inc
push
dec
ins
jae
or
ja
mov
add
mov
xor
xor
out
ret
cld
aaa
jp
jmp
fadd
mul
mov
sub
pop
aad
sbb
jecxz
sub
mov
cs
xchg
daa
rcr
cs
cmps
movs
pop
push
pop
sbb
inc
imul
sub
out
int
jne
sub
jl
mov
push
xor
jle
cs
cmp
sar
cs
jns
cmp
cs
inc
and
pop
ret
(bad)
hlt
pop
mov
(bad)
retf
outs
inc
pop
mov
sub
xchg
shl
xchg
mov
push
push
outs
mov
retf
leave
fidiv
jns
call
ret
pop
inc
aaa
add
xor
mov
inc
mov
leave
sbb
call
fwait
outs
(bad)
sti
aas
jne
push
dec
mov
cs
cwde
(bad)
push
scas
aas
pop
ins
std
inc
cmc
out
or
sub
and
dec
adc
sub
mov
addr16
pop
push
inc
xor
adc
add
cld
div
adc
aam
cmc
cs
(bad)
cmp
pop
and
mov
cld
sbb
inc
cs
dec
dec
or
icebp
dec
mov
dec
push
add
lods
clc
popf
mov
cmp
outs
test
xchg
scas
xlat
(bad)
retf
das
xor
shr
add
call
(bad)
sti
lods
cmps
inc
adc
shl
sub
jmp
xor
jg
aad
lods
iret
fst
cs
movs
inc
test
clc
(bad)
cmps
js
gs
lods
daa
adc
retf
dec
mov
lods
(bad)
movs
cs
pop
nop
fld
(bad)
cs
xchg
loope
movs
xchg
xchg
cs
into
inc
lods
int3
cmp
(bad)
retf
out
and
xchg
fistp
(bad)
mov
jae
out
fs
shl
std
lods
jno
jmp
and
push
enter
stos
popf
jnp
cs
test
jmp
fist
lods
repnz
sbb
out
cmc
aas
outs
aad
imul
fucomi
shl
adc
in
je
repnz
inc
pop
fcmovb
push
aad
jl
in
shl
sbb
cmp
out
lahf
or
scas
fs
sub
in
adc
mov
dec
test
sub
mov
icebp
scas
lods
fistp
cs
fistp
add
jp
fimul
leave
pop
bnd
or
ficomp
jnp
sub
out
(bad)
fnsave
cs
mov
mov
sub
fisub
mov
adc
xchg
outs
loop
mov
xor
push
loopne
fnstsw
inc
mov
sbb
cmc
or
mov
push
sbb
sbb
mov
(bad)
imul
cs
inc
cli
xchg
and
push
xor
es
cmp
mov
jae
hlt
jmp
mov
sub
loop
ret
sti
iret
arpl
cmps
jae
inc
test
pop
mov
adc
inc
js
loopne
fisttp
xor
push
mov
pusha
clc
outs
and
or
jbe
jge
(bad)
pop
xchg
jp
mov
scas
inc
imul
cmps
dec
push
movs
pop
add
jb
(bad)
pop
cs
fsubr
jmp
cli
mov
int3
popa
mov
inc
lea
mov
cli
add
sub
leave
and
(bad)
cmp
dec
out
int
inc
sub
and
jb
mov
cwde
arpl
sbb
mov
mov
aam
jp
jno
aaa
leave
push
cs
pop
cli
fsubr
xor
xchg
jae
in
stc
push
cmp
pop
stos
enter
xor
(bad)
and
and
pop
mov
cmovg
xchg
retf
inc
mov
fwait
push
ds
sbb
ss
sub
gs
cmp
pop
xchg
or
in
push
xor
outs
cs
add
mov
mov
xchg
xor
sub
sbb
cmc
sahf
cmp
jae
std
fistp
pusha
int3
adc
add
ret
scas
cs
cmps
call
lock
push
pop
das
imul
popa
pusha
ins
loop
pop
jne
cs
push
jno
imul
or
daa
adc
sub
push
(bad)
andps
arpl
bound
(bad)
fnstenv
add
out
mov
and
mov
cmp
mov
add
jne
int
scas
pop
mov
movs
ret
rcr
jecxz
out
fnstcw
xor
pushf
ror
push
dec
mov
xchg
aad
movs
and
cs
repz
jp
fistp
or
sbb
jb
mov
cmp
sub
outs
scas
jbe
shl
out
dec
add
sbb
cmp
imul
cmps
adc
sbb
test
cmp
add
dec
stc
add
div
popf
sbb
std
sub
add
push
scas
mov
rcr
cmp
ds
push
xchg
and
(bad)
jae
xor
leave
outs
mov
cmp
mov
dec
call
(bad)
fldenv
scas
cmp
or
xchg
clc
rol
sub
adc
pop
(bad)
lods
repz
arpl
loop
mov
jno
xchg
fadd
mov
sbb
adc
pop
xchg
jnp
outs
arpl
sahf
inc
sti
xchg
js
xor
cld
mov
mov
xor
jo
mov
stos
daa
sbb
sub
outs
pop
cs
les
dec
jnp
imul
repnz
lods
in
fadd
xchg
cs
xor
stos
cmp
test
bound
cs
or
mov
push
shl
xor
adc
in
clc
pop
ja
add
loope
jmp
lea
push
rcl
daa
inc
or
and
sahf
pop
fs
lahf
add
mov
and
xor
mov
movs
hlt
aad
push
sbb
pop
ss
fimul
xor
mov
cdq
das
jecxz
push
and
push
rcl
fldl2e
cmps
inc
xor
lods
and
outs
ds
retf
mov
je
push
rcr
outs
leave
jge
mov
sahf
fnstenv
js
cwde
or
mov
mov
(bad)
(bad)
jbe
int
mov
scas
(bad)
dec
sbb
arpl
sub
sahf
les
jecxz
sub
(bad)
cmps
cld
cmps
repnz
loopne
lock
mov
iret
mov
ja
nop
aaa
ficom
add
sbb
jmp
jnp
jmp
push
push
push
inc
inc
mov
and
seta
dec
scas
pop
push
cs
mov
fs
or
sub
jbe
cmp
sub
add
xor
test
push
xor
pop
enter
add
test
adc
cs
cmp
cmp
cmps
jg
push
adc
cmp
jmp
(bad)
add
push
cs
add
bound
jge
cs
adc
mov
(bad)
xor
cs
pop
mov
fmul
cs
(bad)
sti
mov
mov
xor
push
arpl
xchg
aad
je
adc
(bad)
rol
adc
xchg
(bad)
pop
push
(bad)
out
mov
mov
cs
pop
cmps
shr
dec
pop
ret
int
ucomiss
mov
loop
retf
jns
pop
and
repnz
push
mov
xor
mov
inc
iret
xchg
fwait
jg
fcomp
jbe
pop
cld
(bad)
mul
mov
jmp
xor
(bad)
aas
inc
je
dec
nop
cmps
jns
xlat
sahf
or
mov
cs
adc
lds
mov
das
(bad)
sti
and
sub
or
ror
sub
jbe
sub
mov
and
test
daa
xchg
sbb
ss
push
test
cli
xchg
sub
popa
fdiv
mov
lods
add
inc
(bad)
mov
jb
int3
xchg
(bad)
scas
add
or
add
test
jp
or
popa
cmps
push
mov
xchg
cs
sbb
jge
fucomip
or
or
in
outs
or
scas
loopne
das
lds
and
jnp
sub
daa
mov
push
lods
test
xchg
xchg
jg
test
leave
jae
retf
mov
shl
jne
pop
pop
dec
jle
or
add
aas
pop
imul
push
repnz
outs
aas
cmps
or
dec
inc
jge
arpl
test
push
ins
cwde
push
mov
push
mov
cmp
fs
jg
add
(bad)
fdivr
mov
stc
jae
xor
cwde
push
inc
outs
sub
mov
pop
leave
shr
fidivr
inc
mov
xor
xchg
outs
sbb
leave
mov
adc
movs
test
push
mov
sbb
test
in
sbb
(bad)
shr
push
pushf
les
inc
jno
xchg
or
dec
xchg
pop
aam
jo
stos
(bad)
xor
or
mov
pop
xor
jnp
dec
push
cmp
or
push
scas
outs
int
jns
jne
sbb
cmps
in
xchg
(bad)
into
push
popa
lds
mov
cmps
(bad)
ret
adc
adc
test
cs
popf
js
imul
add
jnp
and
mov
pop
lods
pop
pop
dec
jle
sub
out
adc
inc
es
(bad)
fild
stc
dec
xlat
pop
push
mov
arpl
xor
and
mov
scas
sbb
scas
(bad)
scas
push
loope
jae
sub
or
cs
ja
shl
call
inc
fs
push
sbb
cdq
cs
into
std
sar
loope
cs
mov
inc
cs
test
shr
push
mov
cmp
cs
arpl
(bad)
dec
inc
cs
icebp
mov
xlat
jmp
(bad)
push
cmp
ficom
sbb
xor
in
sub
ins
mov
imul
cmc
add
sub
xchg
mov
add
outs
div
fld
mov
push
mov
les
retf
xchg
in
lods
cmp
dec
adc
push
scas
sbb
mov
retf
or
add
add
jg
sub
(bad)
js
dec
dec
mov
dec
pop
test
adc
ins
ja
cmp
mov
xchg
inc
xchg
xchg
daa
in
push
push
mov
repz
int3
cli
aas
into
dec
cmp
and
nop
jge
jb
ja
mov
mov
mov
inc
ror
fnstsw
repz
lahf
ja
jno
jmp
add
mov
adc
add
in
cmps
cmps
cmp
fst
int
mov
jns
cs
outs
or
and
out
addr16
cs
movs
in
ficomp
sub
outs
fisttp
jle
shl
mov
xor
lahf
mov
out
or
bswap
clc
jecxz
pop
fcom
cs
in
sub
jno
add
inc
xchg
cs
mov
out
xor
out
cdq
mov
scas
cs
ss
nop
and
jmp
aas
(bad)
call
dec
das
fst
nop
test
inc
hlt
push
fucomip
icebp
cmc
mov
iret
mov
(bad)
push
adc
jo
mov
xchg
jmp
and
xchg
aaa
mov
sbb
and
neg
mov
into
popa
dec
scas
cs
psubd
pop
test
fsubr
mov
inc
(bad)
sub
inc
cmp
sub
xchg
mov
cwde
int
push
mov
movs
and
adc
(bad)
sar
(bad)
scas
push
add
movs
pop
js
pusha
mov
rcl
lahf
out
arpl
xor
mov
mov
cwde
cs
popf
test
push
sahf
mov
sbb
xlat
push
push
and
nop
cs
sbb
mov
pop
sbb
test
sub
cwde
push
fst
push
pop
mov
push
ffreep
xor
inc
dec
sub
(bad)
and
dec
sbb
mov
imul
and
out
push
and
push
lock
sbb
mov
out
ds
and
mov
cmovne
fisttp
fimul
xor
cmps
stc
add
push
jmp
dec
stos
add
mov
lods
(bad)
std
mov
test
call
pop
cs
mov
or
ja
popf
adc
xchg
test
outs
xor
adc
jns
and
inc
scas
pop
inc
pusha
cs
loope
xchg
sub
cs
mov
cdq
xor
sbb
outs
sti
pusha
and
xchg
div
cs
ds
sbb
pusha
jno
jbe
arpl
push
cmp
lds
jns
or
imul
add
cmp
xor
rcl
sbb
push
mov
sub
lahf
and
xchg
fsub
or
mov
sub
ds
in
dec
sub
cwde
or
(bad)
push
lods
int3
ret
daa
mov
(bad)
jnp
and
mov
mov
movs
jg
(bad)
push
jg
mov
into
inc
sbb
add
and
jle
fwait
dec
jns
jns
out
inc
out
ror
leave
fadd
movs
mov
dec
aas
xchg
pop
sbb
leave
cmp
xor
mov
push
xchg
adc
fcomip
or
pop
and
sbb
xchg
outs
jg
sub
jb
test
sti
dec
mov
xchg
sbb
fsubr
bound
cmp
leave
xchg
das
cs
inc
retf
adc
fmul
rcl
mov
leave
ret
mov
rcr
push
jno
cmps
pop
xor
xor
add
pop
or
(bad)
jae
(bad)
xchg
mov
jb
adc
sti
inc
repz
stos
in
pop
xchg
mov
sbb
daa
mov
push
shl
add
cmp
push
cmp
cs
jge
sti
dec
dec
out
pop
adc
sub
leave
pop
jo
ficomp
retf
add
jge
sub
push
outs
and
out
inc
and
pop
dec
push
xchg
hlt
cmp
xchg
aas
icebp
jmp
stos
ucomiss
ss
(bad)
jnp
mov
cmps
add
xchg
ja
inc
push
loopne
ins
daa
push
mov
dec
fst
xor
imul
mov
mov
fxch
inc
add
inc
pushf
(bad)
jne
mov
ret
dec
or
xor
pop
xor
dec
fldcw
lea
inc
or
aas
cmps
test
stos
in
add
mov
mov
test
sub
jb
jne
addr16
(bad)
mov
dec
sub
cs
cld
sub
adc
in
lods
jecxz
fidiv
jmp
into
xor
xchg
xchg
shr
add
mov
cs
lods
jae
stc
pop
jns
cs
xor
mov
inc
dec
cs
addr16
push
push
das
repnz
out
call
cs
fmul
mov
popf
loopne
out
sub
ins
pop
movs
cs
jp
rcr
std
push
pop
add
push
mov
push
clc
sbb
add
sbb
push
push
pop
pop
mov
into
movs
jecxz
in
call
and
aas
sbb
mov
retf
sub
cs
test
sar
sbb
shl
xor
xor
adc
sbb
movs
add
jle
cmp
lods
adc
lds
in
push
mov
add
sub
adc
clc
sbb
pop
out
fld
mov
xchg
sbb
daa
fdiv
pop
stos
sub
bound
sub
popf
shl
xchg
into
test
sbb
sub
mov
and
pop
(bad)
out
xchg
jo
cs
push
fsubr
sub
xor
adc
inc
pop
cld
aam
jbe
jmp
add
mov
adc
mov
pop
retf
push
inc
xlat
out
outs
jb
push
mov
cmps
test
mov
dec
mov
(bad)
cs
repz
sbb
xchg
cs
and
mov
pop
in
push
jecxz
out
sub
loopne
std
movs
ja
call
fcom
and
mov
mov
cmp
outs
or
or
mov
pop
push
cmp
adc
sub
and
mov
xlat
out
xchg
add
adc
aas
mov
pop
mov
sbb
inc
xor
cs
sbb
das
lahf
pop
shr
mov
sbb
and
or
xor
push
inc
sub
scas
pop
jmp
jle
inc
arpl
pop
ficom
xor
idiv
push
mov
jle
xlat
fsubr
cli
sub
aas
mov
dec
mov
cmc
xlat
imul
pop
jg
outs
xor
out
ins
pop
enter
adc
sub
ss
shl
loopne
pusha
std
mov
sbb
scas
repnz
xchg
xor
push
or
xor
inc
jge
lods
cmps
mov
mov
add
pop
mov
in
xor
push
cmp
xchg
pop
cdq
test
jne
fidivr
inc
mov
push
mov
cwde
mov
jge
push
jp
call
push
sub
push
movs
mov
sub
jbe
(bad)
push
xchg
loopne
add
inc
jb
jno
dec
jnp
and
hlt
and
jmp
xchg
push
fwait
jb
fwait
mov
loopne
add
push
sub
and
jl
jne
out
movs
mov
jmp
xor
adc
sub
jbe
bound
in
int3
adc
(bad)
int3
mov
nop
xchg
fimul
rcr
lods
dec
mov
les
cld
and
pop
jnp
iret
ffree
pusha
data16
or
cs
jae
pop
mov
push
out
outs
push
adc
dec
(bad)
cs
cmp
retf
xchg
pop
push
loopne
sar
adc
mov
sub
(bad)
ins
sbb
popa
daa
imul
mov
inc
or
push
or
xor
dec
mov
sbb
mov
sub
mov
mov
xor
lds
ins
sub
setns
ucomiss
xchg
xor
xor
push
push
xchg
cmc
mov
xor
jl
cmp
jecxz
sbb
ja
add
dec
sub
movzx
enter
xchg
lea
sub
out
cwde
sub
out
cmps
(bad)
mov
inc
retf
xor
cs
lds
js
mov
out
xchg
cmp
ret
(bad)
mov
imul
mov
lods
sub
dec
jne
pop
pop
mov
jmp
xor
mov
adc
mov
ret
sub
fistp
and
scas
mov
in
rcl
xchg
xor
(bad)
arpl
ret
test
loope
and
cs
rcl
out
fwait
(bad)
out
imul
js
(bad)
cdq
or
mul
inc
bound
cmps
adc
jae
jle
cmp
cmp
adc
data16
mov
inc
aas
push
jecxz
mov
mov
lock
shl
imul
sti
mov
sbb
fisubr
mov
pop
lods
add
jae
push
rcl
addr16
test
inc
dec
mov
outs
xor
mov
lds
fidiv
das
(bad)
lahf
movs
fiadd
rol
mov
mov
(bad)
xor
ins
jge
std
or
xchg
scas
imul
aaa
or
imul
rcr
adc
daa
pushf
mov
aad
scas
jns
shl
or
push
push
sub
push
stos
out
cld
add
mov
fmul
fistp
leave
xor
adc
dec
test
inc
(bad)
cmp
pop
cld
cmp
jp
push
adc
cli
adc
cs
(bad)
xor
or
lods
lds
xchg
les
aam
fisttp
dec
jmp
dec
mov
div
xor
and
jno
sbb
or
or
sub
cmp
lea
out
xor
xchg
loope
nop
imul
xchg
call
daa
mov
sbb
nop
test
pop
push
mov
sub
outs
data16
ror
dec
(bad)
dec
add
cmp
and
daa
sub
mov
movs
cmp
pop
and
loope
adc
ins
div
sti
test
cmps
cmp
sar
adc
dec
and
repz
sbb
je
cmp
push
div
mov
xor
or
lods
mov
mov
xlat
push
call
xchg
fadd
pop
dec
test
call
mov
adc
popf
les
add
retf
pop
jo
or
stc
ss
scas
and
lock
js
(bad)
fistp
sub
push
jmp
xchg
mov
rcl
sbb
dec
xchg
fidiv
loopne
xchg
ret
sub
pop
mov
push
out
test
call
stos
push
(bad)
iret
movs
lock
pop
retf
(bad)
push
sub
jno
(bad)
jge
into
scas
push
(bad)
adc
mov
sbb
push
jns
add
lods
cdq
cmp
(bad)
scas
add
inc
(bad)
mov
shr
clc
jnp
mov
call
fild
fisttp
mov
and
sub
cmps
sti
inc
jbe
dec
pop
mov
xor
retf
jo
in
aad
jnp
sub
fscale
dec
nop
add
adc
rdpmc
or
mov
cmps
push
lahf
cmps
pop
mov
leave
xor
fdivr
pop
(bad)
outs
push
jecxz
mov
mov
mov
shl
bound
jo
mov
out
pop
mov
dec
xchg
cmps
inc
push
popf
into
ja
pusha
cmp
fadd
xor
in
ins
xchg
popf
pop
pop
jmp
les
mov
je
fistp
cs
lds
inc
sti
inc
popa
test
stos
sub
add
adc
inc
sub
mov
pusha
jb
and
push
mov
or
xchg
bound
jne
cmp
cwde
cs
jnp
popa
dec
mov
aam
and
sub
outs
in
(bad)
jecxz
pop
sbb
push
into
(bad)
loop
cs
(bad)
and
xor
sbb
vphadddq
test
or
cs
pop
adc
or
or
sub
cmp
and
pop
(bad)
fwait
leave
loopne
push
lods
ror
lock
add
mov
inc
mov
xchg
push
cdq
sbb
cs
add
sub
cs
mov
mov
test
clc
jecxz
(bad)
in
out
pusha
fisubr
cli
stos
das
in
popa
sub
rcl
inc
(bad)
test
xchg
in
inc
mov
je
nop
imul
xchg
ins
xor
xor
mov
jmp
and
xchg
stos
inc
shl
sahf
dec
ins
clc
imul
add
cs
jo
outs
dec
sar
imul
sbb
in
and
ins
jmp
jle
outs
into
cs
out
push
adc
mov
add
popf
dec
jecxz
ins
cmps
xor
xchg
imul
(bad)
cs
lea
jne
mov
pop
test
shl
stc
xchg
pop
out
popf
ret
jmp
inc
fcomp
(bad)
fcomp
xor
cwde
retf
fstp
push
sub
shr
dec
popf
lods
aam
push
psubb
mov
fisub
lods
repz
int
cs
rcr
pop
not
mov
cs
pop
cmc
jle
rcl
adc
inc
repnz
cs
(bad)
xchg
aam
mov
dec
arpl
popa
cmp
xchg
xlat
add
mov
pop
fdiv
push
adc
cmp
mov
leave
sub
sub
pushf
inc
sbb
add
adc
or
or
add
dec
mov
test
rcl
lahf
dec
push
cmp
mov
imul
stos
mov
pop
dec
mov
inc
adc
dec
mov
cwde
add
movs
(bad)
pop
sahf
or
mov
push
ss
scas
dec
pop
into
jne
cmps
dec
jl
mov
lock
stos
adc
and
test
xchg
icebp
mov
mov
adc
mov
into
fild
cs
mov
push
pop
and
cdq
cs
mov
dec
push
push
fimul
adc
push
pop
inc
adc
add
aam
mov
jl
xor
pop
jge
daa
jmp
into
sub
outs
add
xchg
jmp
cli
and
jo
outs
out
push
pop
mov
jb
adc
xchg
(bad)
retf
stc
xchg
into
jge
xor
cld
mov
mov
mov
jae
mov
jmp
in
shr
fiadd
push
outs
ds
aaa
shl
lahf
ret
cmp
sbb
cs
sahf
call
(bad)
test
cmps
call
movq
xor
and
test
leave
aam
cs
or
and
mov
xor
dec
sahf
xor
push
fadd
rcr
dec
cs
mov
xor
aas
push
icebp
mov
outs
sub
mov
add
sti
sbb
retf
mov
fadd
xor
or
xchg
xlat
scas
les
adc
jbe
arpl
rcr
jo
rol
xor
cwde
xlat
outs
mov
xor
jae
and
sbb
scas
lahf
int3
scas
stos
aad
add
fsubr
cmp
jb
jmp
scas
and
mov
sti
and
mov
lea
retf
into
xchg
bound
mov
xlat
out
fisttp
movlps
sbb
xor
cmp
xor
stos
(bad)
xor
pushf
pcmpeqw
add
lea
jmp
fild
enter
out
hlt
js
cs
mov
mov
lods
shl
xor
jbe
repnz
lods
fadd
dec
arpl
cdq
mov
(bad)
mov
iret
xor
add
stos
dec
enter
out
cmc
jg
xchg
dec
mov
std
enter
rcl
push
(bad)
adc
call
jmp
adc
push
or
fld
sub
ins
xor
outs
stc
mov
mul
sub
ret
fdiv
arpl
lahf
inc
stos
pushf
in
mov
js
or
(bad)
shr
xchg
scas
sub
les
adc
(bad)
cmp
dec
adc
jnp
cmp
jmp
ret
cs
and
dec
fnstsw
mov
ja
nop
div
add
je
sbb
and
retf
push
adc
ret
repnz
(bad)
push
loope
pop
icebp
cs
or
mov
xchg
cs
popa
mov
clc
jg
and
lahf
(bad)
mov
addr16
sahf
fcomp
cs
xor
iret
push
ret
and
cs
into
shl
(bad)
pop
xor
add
repnz
cmc
nop
iret
jecxz
push
dec
(bad)
cs
test
mov
dec
mov
mov
cs
ja
xor
daa
ds
push
jmp
cs
inc
jge
xlat
imul
xchg
rcr
and
sub
mov
retf
xor
vmread
mov
aaa
cs
mov
rcr
sub
xchg
cs
out
xor
adc
in
jno
adc
mov
push
cmp
sub
gs
in
outs
sbb
xor
pop
popf
jno
mov
push
xor
cs
sbb
adc
scas
inc
mov
and
rol
out
pop
push
cs
(bad)
xlat
cli
loope
cs
xor
mov
xchg
daa
add
cs
loopne
inc
mov
bound
int
hlt
outs
aam
push
sub
(bad)
out
mov
mov
movs
mov
scas
and
jecxz
xor
(bad)
sbb
aam
xor
mov
jecxz
arpl
adc
sbb
ins
adc
mov
push
adc
cs
sub
inc
dec
jge
xlat
mov
popa
ds
jl
loopne
adc
rdpmc
into
cmp
cs
pop
adc
shr
std
addr16
add
sub
inc
inc
outs
xor
fild
pop
pop
xchg
cmp
mov
or
cs
popf
jg
iret
xchg
or
push
push
push
dec
int3
aas
jmp
cs
add
pushf
pusha
jo
cmovae
and
out
adc
pop
ss
mov
xchg
loope
cld
and
inc
xor
and
push
dec
xor
xchg
(bad)
mov
mov
call
xor
cmp
mov
and
int
cmps
sub
leave
jo
xlat
jmp
pop
scas
mov
(bad)
daa
jmp
aam
cmc
cwde
sahf
xlat
add
retf
mov
mov
cwde
sub
leave
stos
mov
pop
sub
ins
mov
mov
dec
xlat
add
jnp
jno
scas
sar
rol
lods
cmp
(bad)
xchg
cmp
aam
adc
in
pop
movs
cmps
xor
add
jl
mov
(bad)
stos
stc
xor
iret
call
es
leave
pop
cmc
sub
loope
sbb
push
in
add
scas
lods
sub
mov
aam
dec
dec
sub
jnp
push
or
mov
mov
clc
stos
movs
and
mov
jbe
mov
jp
sbb
mov
dec
icebp
inc
xchg
mov
add
mov
or
xor
pop
sti
jge
je
imul
or
leave
xor
outs
jo
test
fnstenv
sbb
leave
stos
mov
or
cdq
scas
adc
sub
aam
jecxz
push
out
xor
adc
sbb
dec
add
cmp
and
in
jno
mov
ja
add
push
pop
(bad)
or
inc
fidiv
mov
stos
xchg
movs
add
fadd
inc
pop
mov
dec
fiadd
out
cmps
jg
daa
sbb
inc
aad
(bad)
cld
xchg
ret
and
mov
xchg
mov
cs
mov
inc
sbb
cs
and
jns
jae
sbb
xor
cmp
jg
lock
pop
aad
or
addr16
dec
jecxz
ss
xor
rcl
mov
scas
lds
add
loope
mov
jns
retf
mov
outs
or
push
fnstenv
push
or
xlat
dec
push
in
ins
sub
push
cs
xchg
lods
pop
pop
mov
(bad)
(bad)
daa
xchg
inc
mov
xor
std
dec
(bad)
jmp
pop
or
jg
dec
jmp
cli
jl
and
imul
ror
icebp
pop
dec
jl
sbb
xor
fstp
jo
bound
jp
cs
xchg
icebp
adc
push
cmp
pop
mov
imul
xor
mov
call
cs
into
sbb
jb
inc
push
rol
cs
ins
js
pop
xlat
test
outs
fs
push
cmps
or
cs
pop
push
lds
push
sub
repz
adc
call
enter
aad
pop
loopne
xor
sub
(bad)
jno
xor
test
add
jmp
adc
mov
pop
push
add
sbb
push
pusha
push
js
mov
mov
mov
sub
pop
xor
inc
or
and
push
aam
cs
mov
mov
mov
call
jg
stos
sub
cs
cmp
loope
add
aam
jne
movs
movs
cs
imul
pusha
in
cs
xchg
jo
je
stc
(bad)
loopne
daa
push
popa
(bad)
movs
aas
fs
scas
push
dec
ins
pop
sbb
inc
ja
fisubr
std
test
in
bound
and
daa
leave
mov
out
pop
hlt
jle
push
fldcw
pop
cs
push
xchg
jno
dec
imul
or
into
cmp
jmp
cs
cmp
xor
adc
nop
outs
ins
and
ja
ins
es
cs
or
into
sub
push
mov
cwde
adc
push
xchg
cmp
jne
xor
cld
mov
add
fs
xchg
ret
fwait
mov
jmp
test
in
push
ret
out
int
les
mov
sub
mov
shr
mov
repnz
(bad)
or
add
push
inc
or
cs
add
clc
mov
mov
adc
jo
cs
jns
mov
adc
cs
mov
popf
sub
xor
test
and
in
sti
pop
push
js
scas
je
mov
(bad)
lea
sub
pop
adc
sub
push
xchg
xlat
out
repnz
cs
cmp
add
loope
in
test
mov
mov
sbb
mov
xchg
je
mov
pop
sub
aas
test
int
mov
mov
inc
cmp
mov
sub
jmp
cmps
cmp
bound
pop
xchg
xor
or
push
pop
sti
cs
imul
cs
call
scas
pop
cmp
mov
cs
adc
jae
inc
cs
in
push
xor
pop
xchg
loope
dec
and
cs
or
std
mov
dec
sbb
mov
movs
push
in
aaa
push
aas
jbe
scas
out
fld
mov
cmp
test
not
les
rol
mov
out
xor
sbb
mov
enter
dec
ja
push
ficomp
pop
add
cmp
and
fwait
shr
pop
sub
out
iret
sbb
call
fist
add
adc
mov
cmp
mov
(bad)
or
gs
push
adc
xor
scas
imul
cli
int3
arpl
(bad)
mov
jp
(bad)
aaa
imul
outs
repz
mov
lea
sub
push
jge
xchg
cs
movs
outs
pop
sbb
push
mov
add
jle
fwait
jge
out
dec
cmp
xchg
fsubp
enter
cld
in
stos
xor
shl
(bad)
jae
outs
add
pop
jns
cmc
xor
movs
and
cmp
aas
(bad)
in
dec
or
lock
xor
vcvtpd2ps
call
fnstcw
inc
out
xchg
mov
leave
mul
scas
xlat
jge
cwde
sbb
not
daa
aas
test
arpl
aam
lea
call
push
mov
mov
push
movs
mov
sbb
jae
and
fucomp
pop
mov
and
into
lock
or
mov
fdivr
xor
loopne
jo
mul
xor
cmp
and
popf
jge
cmc
push
push
outs
idiv
cmps
mov
sahf
jge
(bad)
retf
add
aam
and
nop
cmp
fidivr
lock
loopne
out
scas
into
jmp
push
div
cmp
scas
and
leave
or
pop
aaa
xor
dec
jnp
xor
add
push
gs
sub
pop
push
fucom
cs
cmp
push
sar
ss
and
pusha
adc
sbb
jne
outs
jb
ss
(bad)
out
cs
(bad)
aas
push
xor
mov
dec
rol
sbb
push
cli
daa
retf
push
(bad)
fistp
addr16
xchg
mov
jmp
sbb
push
mov
enter
adc
xor
fmul
(bad)
sahf
cs
fs
jnp
push
jmp
xor
out
out
(bad)
push
mov
xor
sub
imul
cwde
push
dec
cmp
xchg
scas
out
jmp
inc
scas
out
sar
shl
not
shl
jmp
retf
mov
repz
das
xlat
sub
or
inc
jle
lods
xchg
jmp
aas
repnz
out
popa
clc
push
jne
jmp
cmp
sar
mov
xlat
in
(bad)
pop
sbb
scas
pop
ret
and
lock
in
cs
arpl
or
int3
pop
push
push
(bad)
aad
adc
outs
add
xor
imul
out
scas
aas
mov
xchg
xor
jae
inc
sub
data16
jbe
cmp
ja
out
xchg
popa
dec
add
mov
adc
out
in
repz
cmc
cs
or
js
adc
cmp
add
call
xor
mov
adc
or
xor
aaa
test
in
cld
mov
scas
popa
cmp
fidiv
push
out
stos
int3
mov
test
call
cli
out
addr16
sub
in
xchg
test
xchg
(bad)
mov
cs
inc
ret
and
js
pop
or
xchg
fsubr
retf
jmp
das
popf
push
aaa
sub
push
xor
adc
pop
adc
push
dec
iret
pop
jns
ins
scas
xor
and
and
out
add
sub
in
fcomp
daa
mov
mov
or
or
(bad)
jmp
dec
retf
sub
sub
call
into
es
(bad)
mov
sub
and
dec
sbb
mov
and
shr
mov
jo
gs
dec
jne
inc
ret
mov
leave
inc
xor
mov
lods
dec
or
movs
lahf
adc
jmp
std
call
xlat
add
add
mov
leave
push
mov
inc
outs
xchg
bound
cs
jmp
imul
xchg
aas
aad
lds
or
ins
addr16
pop
cmp
scas
sbb
mov
mov
or
mov
cwde
mov
xchg
xor
ins
push
ds
aas
mov
jp
ins
cmp
mov
cmps
icebp
out
cmp
outs
inc
mov
mov
xor
fld
xchg
dec
cwde
ins
(bad)
and
push
cmp
cmp
cs
pop
cld
and
xor
adc
inc
pusha
fadd
xor
out
cs
and
and
les
bswap
lds
sbb
xor
dec
push
mov
outs
ror
sub
clc
push
xor
fwait
dec
pop
(bad)
iret
mov
xor
(bad)
stc
sub
push
add
and
in
icebp
pop
xchg
pop
mov
lahf
adc
arpl
push
mov
cmp
mov
add
test
imul
test
pop
cmc
fistp
aas
ins
in
mov
push
scas
xor
enter
dec
fsubp
sahf
pop
mov
cmp
int
scas
das
repz
cs
inc
pusha
(bad)
adc
cmps
push
int
cs
ja
aas
mov
xor
shr
les
lods
push
xor
push
ret
aas
cmp
shr
cmp
cmps
cs
add
lods
adc
fimul
inc
scas
out
loop
push
sbb
xor
lds
push
mov
mov
push
xor
ret
mov
xor
dec
pop
add
xor
sbb
jbe
inc
xor
lds
sub
mov
jmp
fld
lods
sbb
loope
jg
pop
push
into
inc
xchg
adc
push
fld
cs
cmps
inc
popa
cs
push
out
cs
jae
imul
dec
cs
call
sub
scas
into
es
test
loop
xor
das
xor
call
pop
test
imul
push
mov
test
cs
movs
sub
push
push
icebp
data16
add
imul
dec
xchg
cmp
pop
lea
jmp
jb
shl
mov
(bad)
cld
scas
nop
and
outs
cs
mov
xor
mov
inc
jbe
rcl
mov
js
pop
dec
jl
sbb
pop
sbb
push
dec
(bad)
retf
fst
cs
shl
cmp
or
test
pop
push
frstor
and
lods
repz
mov
mov
xor
xlat
std
je
lahf
jnp
test
xchg
pop
or
push
ret
and
pusha
out
inc
cmps
and
mov
jb
pop
jne
push
pop
pop
loope
repnz
pusha
outs
cs
add
jbe
sub
cs
xchg
shl
push
popa
pop
dec
retf
stos
mov
push
pop
ds
jl
jae
(bad)
aam
cs
fldenv
dec
xchg
push
shr
sub
pushf
out
fimul
pop
adc
scas
daa
mov
into
ror
dec
xchg
jl
dec
enter
cmp
or
sub
inc
jmp
into
in
xor
sub
add
fsub
(bad)
and
jmp
js
dec
sub
lock
out
or
call
in
cs
stos
repz
ja
cmp
and
jmp
and
enter
fimul
xor
jmp
ror
or
mov
test
scas
scas
sub
sub
cmps
mov
lds
fidiv
sar
xlat
repz
pusha
xor
rcl
add
push
bnd
fnop
cs
pop
cmp
inc
into
xor
test
cmc
jp
add
lods
cs
xor
sub
mov
pusha
sbb
sub
cs
in
mov
ins
jae
pop
outs
mov
mov
cmp
adc
out
imul
stc
stos
cs
mov
imul
mov
data16
idiv
mov
push
imul
pop
rcl
or
cmp
cmp
cs
push
cs
jae
cmp
adc
push
fwait
mov
or
adc
cs
mov
bound
mov
jmp
mov
scas
imul
movs
out
push
mov
std
sbb
xchg
pop
push
in
idiv
test
iret
cs
lods
adc
cld
push
or
inc
ss
sub
and
mov
cmc
push
sub
lds
stos
icebp
add
xor
sbb
push
mov
fimul
aas
aaa
pop
pop
push
(bad)
adc
push
cli
mov
je
adc
mov
cmc
sub
xor
jbe
fadd
lds
push
pop
shl
or
sub
add
add
push
aas
jno
test
or
inc
add
or
outs
dec
(bad)
loop
mov
mov
push
mov
fiadd
pop
(bad)
outs
push
arpl
movs
cwde
data16
sbb
test
xor
jmp
push
int
fadd
das
pop
pop
mov
sar
nop
call
push
lds
xor
imul
movs
push
sbb
rcr
mov
or
pop
mov
mov
mov
aas
mov
jae
scas
mov
mov
lea
sub
mov
sub
mul
xchg
cmp
xchg
ret
jmp
pop
adc
fsub
loop
xchg
jbe
pop
daa
(bad)
fdivr
jnp
fsub
push
xor
(bad)
push
xchg
cld
mov
in
push
sbb
xor
movs
dec
add
or
jnp
retf
sbb
mov
(bad)
xchg
shr
cmps
push
xlat
imul
sub
and
aam
(bad)
fnsave
(bad)
xor
dec
dec
cmp
icebp
jns
ins
push
fisttp
jge
(bad)
xlat
fs
xchg
sbb
adc
jns
rol
pushf
cs
inc
das
fisttp
or
(bad)
xchg
xlat
push
or
xchg
(bad)
adc
leave
sahf
mov
shr
mov
sbb
pop
cdq
inc
xchg
mov
push
fstp
xchg
mov
das
test
xchg
cmp
mov
jmp
jb
lahf
xchg
xor
pop
sbb
sub
sub
mov
ret
nop
add
popw
adc
fnsave
pop
fbld
sub
out
jnp
pop
push
fdivr
rdmsr
xchg
sti
cdq
jle
popa
dec
add
pushf
jmp
icebp
clc
std
in
dec
scas
jb
idiv
jp
stc
mov
(bad)
int3
pop
sub
dec
push
lea
push
xchg
dec
call
add
or
mov
jmp
adc
or
and
in
xor
pop
and
pop
jmp
or
bound
dec
and
push
mov
das
leave
sbb
iret
sub
test
xchg
sub
mov
jge
cmp
arpl
div
js
fist
dec
popa
adc
sub
pop
shl
push
sub
lods
dec
test
mov
sbb
push
jecxz
mov
das
mov
test
jge
(bad)
faddp
sub
xchg
xchg
imul
mov
loopne
shr
sub
add
jle
mov
or
popa
sbb
(bad)
outs
retf
and
fmul
pop
jmp
cmp
dec
push
in
fstp
sbb
mov
scas
mov
pop
and
cdq
jb
test
fsub
(bad)
(bad)
mov
ror
jl
sbb
jb
cmps
fidiv
xor
int
cmps
psubsw
mov
cs
mov
xor
jbe
push
jg
cmps
mov
iret
fstp
rol
cs
stos
mov
or
mov
and
out
adc
add
(bad)
mov
mov
mov
es
push
jle
pop
or
and
cmp
sub
xchg
pop
sub
lock
mov
popf
mov
sahf
xchg
sbb
mov
out
xor
mov
inc
int
add
pop
shl
add
and
dec
push
xor
pop
xchg
pop
test
shl
aam
mov
retf
das
sbb
sub
cs
mov
inc
xor
or
push
pop
or
or
shl
and
outs
je
adc
aas
sub
mov
push
scas
mov
dec
shl
int3
movs
push
pop
cmps
sar
jge
imul
add
sub
das
fdivr
fadd
lods
nop
ret
and
and
sub
push
pop
imul
push
adc
bound
or
jo
retf
mov
or
repz
push
and
cs
push
xchg
ins
arpl
inc
mov
js
pop
mov
push
es
call
pop
retf
cmp
push
push
mul
mov
iret
dec
js
pxor
icebp
ret
mov
mov
arpl
jb
movs
loope
push
(bad)
adc
and
dec
jns
pop
adc
adc
cmp
mov
das
xor
push
into
lods
pusha
sbb
jmp
into
mov
cs
pop
jle
dec
int3
pop
xor
jg
mov
mov
sbb
scas
fcom
mov
outs
sti
(bad)
dec
movs
pop
pop
lods
xchg
pop
das
call
pushf
sub
in
sahf
xlat
mov
movs
int3
test
sub
or
call
inc
nop
retf
xchg
js
mov
ja
cdq
mov
inc
pop
dec
repz
test
pusha
cs
push
xchg
ss
fwait
add
sub
cs
aas
jae
cmp
or
pop
xor
or
mov
movs
iret
push
outs
scas
sbb
cs
in
fimul
jmp
ret
iret
(bad)
lea
lods
cmp
adc
push
int3
mov
hlt
lods
repnz
mov
mov
mov
xlat
push
cmps
mov
mov
xchg
ds
or
stc
cs
stos
push
scas
dec
movs
ret
loope
and
loop
cmp
shr
add
enter
es
pop
or
cs
in
xchg
pusha
xchg
scas
mov
fsubrp
pop
and
shl
int3
iret
jle
fld
data16
cs
popa
sbb
scas
sbb
nop
pop
aas
repz
jmp
fiadd
sbb
add
mov
jno
dec
rcr
call
mov
dec
test
mov
rcl
and
sub
jmp
(bad)
sahf
fmul
in
push
cs
dec
jae
lea
pop
jge
leave
arpl
adc
scas
mov
dec
pop
cs
ror
push
adc
fist
jnp
jns
cmp
mov
sbb
xchg
loopne
push
push
push
push
cli
aam
add
repz
pop
cmp
scas
fsubr
pop
(bad)
std
mov
js
out
cmps
mov
pop
out
fisubr
xchg
cld
add
pop
sub
out
mov
mov
adc
loop
sti
test
mov
into
jmp
jnp
mov
rol
or
in
cmp
xchg
mov
xor
push
idiv
scas
pusha
sub
push
push
xchg
jb
sub
jg
ret
cmp
(bad)
xor
(bad)
xchg
and
jge
pop
sub
ins
cs
outs
mov
add
cmps
mov
xchg
adc
scas
out
in
sahf
or
gs
dec
add
and
add
push
rcr
sbb
mov
mov
cs
das
leave
fwait
mov
pop
loope
out
pop
sbb
out
push
xlat
push
sub
adc
cmp
test
or
mov
fcmovne
popf
xor
(bad)
xchg
leave
lods
out
jge
pop
sub
movs
sbb
jmp
dec
inc
int3
cs
lahf
mov
ret
shl
out
jno
clc
adc
int3
cmp
fs
mul
adc
mov
out
mov
mov
adc
dec
and
inc
test
jmp
xchg
mov
cs
inc
add
sbb
ds
jmp
adc
mov
ins
outs
je
mov
out
fs
mov
and
sbb
lods
in
dec
push
add
xor
cmp
mov
cld
retf
mov
mov
cwde
mov
mov
out
cli
(bad)
sahf
pop
fadd
leave
add
mov
mov
cwde
mov
xchg
jg
scas
(bad)
(bad)
adc
jl
sub
imul
push
mov
jo
xchg
pop
and
jno
fadd
outs
lds
es
xchg
aaa
outs
mov
mov
hlt
scas
sub
fdivr
(bad)
cmps
daa
repnz
jmp
aas
stos
push
xchg
es
(bad)
icebp
lea
int
mov
adc
and
xchg
cmp
adc
mov
jl
add
(bad)
jge
xchg
mov
mov
js
aad
pop
sbb
mov
sahf
popf
cmps
jg
aam
fs
jae
sahf
sub
out
sub
lahf
jg
ja
push
push
lods
cmp
fnstenv
lock
mov
mov
int
adc
jl
dec
das
or
stos
into
leave
sub
rcr
mov
dec
sub
test
push
mov
or
cmp
es
add
mov
mov
popf
or
xor
jle
sbb
leave
sub
xchg
iret
push
push
leave
mov
movs
out
aam
sub
pop
scas
mov
pop
imul
rcr
cmp
fild
popf
pop
xchg
push
sar
sub
arpl
rol
mov
push
js
pop
cli
pusha
adc
fdiv
out
add
xchg
fisubr
mov
aad
push
pop
sbb
cld
scas
je
into
(bad)
lods
jmp
dec
cmp
sub
cs
ins
push
mov
cs
pop
or
cmp
sub
push
popa
fsub
jmp
jle
and
cld
mov
test
or
pop
adc
cs
dec
ins
xlat
xchg
sbb
lea
stos
sub
shr
mov
test
sub
ret
xchg
(bad)
mov
mov
cs
popf
inc
or
push
movs
inc
cmps
pop
jmp
push
sub
popa
push
imul
iret
push
sbb
fadd
enter
cs
jge
and
and
seto
xor
lahf
retf
mov
push
movs
scas
ror
mov
in
outs
adc
stc
push
sbb
bound
std
xchg
inc
rol
fdiv
(bad)
div
push
pop
jmp
cs
jl
mov
xlat
pop
mov
jne
std
cs
icebp
in
cs
pop
int3
mov
inc
loope
mov
push
pop
push
pop
call
mov
push
ret
rol
cmp
retf
shl
out
sub
push
add
xchg
cmovnp
(bad)
nop
rcr
push
adc
cmp
ss
push
sbb
scas
and
mov
daa
xor
outs
inc
xor
movs
cs
sbb
cli
mov
dec
inc
sbb
push
add
adc
push
dec
sbb
push
enter
cwde
mov
arpl
jno
inc
sbb
stos
inc
int3
or
push
xor
pop
cs
dec
mov
fmul
adc
ss
sub
mov
imul
sbb
pop
in
cs
popf
sub
sub
icebp
lods
out
repnz
xor
dec
stos
push
or
adc
retf
xchg
cdq
fdivr
(bad)
cmc
jb
sahf
cmp
stc
sub
cli
push
out
cmp
scas
mov
retf
(bad)
gs
sub
imul
xor
es
or
lea
in
add
push
pop
inc
xor
pop
cs
push
cmp
dec
outs
sub
in
adc
nop
daa
sub
sar
inc
out
lods
cs
jmp
xor
jl
daa
dec
push
push
stc
jb
lods
lods
stos
sub
or
leave
in
cli
cwde
adc
xchg
pop
lock
fsubr
pop
xor
icebp
cli
cs
sbb
pusha
loopne
dec
pusha
imul
jo
lods
sub
loope
mov
jo
jmp
sbb
in
imul
ins
and
sub
aaa
and
sub
call
jbe
jle
xchg
push
out
sub
inc
cs
add
mov
popa
pop
cs
sub
enter
(bad)
cs
jle
jecxz
test
lahf
xchg
sbb
imul
pop
(bad)
cmp
cwde
cs
and
fst
fsubr
je
addr16
or
ror
add
or
jmp
fimul
loopne
cmp
shl
and
dec
pop
jecxz
push
call
jg
(bad)
stos
push
fild
addr16
push
mov
inc
inc
scas
das
(bad)
(bad)
lods
mov
iret
sub
cmp
mov
shl
js
adc
mov
out
mov
(bad)
dec
(bad)
leave
sbb
cld
ret
fisttp
dec
outs
sub
(bad)
dec
adc
cs
xor
cs
ror
(bad)
cmp
sbb
aad
adc
mov
xor
inc
or
dec
and
add
mov
enter
mov
pop
jo
mov
xlat
xchg
fstp
cmp
mov
sub
mov
stc
add
not
outs
fcmovb
out
sbb
cs
je
stc
sub
sbb
xchg
mov
js
or
push
out
fsub
or
add
xor
inc
dec
aas
shr
les
xor
rol
in
dec
xor
push
sbb
out
xlat
jne
add
(bad)
cs
movs
mov
adc
(bad)
out
and
movs
push
sub
jno
leave
imul
mov
or
cwde
inc
cdq
out
fcomp
cli
xchg
sub
cmp
shr
xchg
push
test
test
das
xchg
dec
out
or
dec
movaps
outs
dec
xor
dec
out
ja
dec
mov
sub
mov
push
scas
(bad)
mov
push
adc
ins
lds
lock
cs
mov
movs
into
xor
mov
jb
pop
cs
push
dec
jmp
or
(bad)
cmp
sbb
lods
scas
cmp
int3
cs
push
mov
stc
sub
push
imul
xor
cs
stos
mov
cs
ret
mov
fldcw
cli
mov
outs
cmp
and
cs
imul
retf
xor
stc
sbb
push
(bad)
push
cmp
mov
mov
adc
cs
dec
data16
push
jge
xor
ds
pusha
rol
cs
xor
loop
adc
fcom
or
sub
pop
outs
outs
in
pushf
sub
and
(bad)
cmp
pop
stos
outs
mov
fild
test
mov
and
gs
mov
shr
xchg
push
aad
stos
xor
push
fwait
retf
or
xor
popa
das
popf
inc
ins
jbe
xor
or
or
cwde
or
fdivr
jae
push
sbb
(bad)
popf
jmp
nop
pop
xor
and
inc
(bad)
cdq
dec
mov
leave
xchg
mov
sti
xchg
inc
cdq
push
rol
cmp
lss
pop
es
ja
mov
xor
lock
cmps
xchg
jnp
lds
mov
dec
or
daa
movs
sub
jle
pop
or
sbb
mov
or
(bad)
cmps
jle
sbb
and
cwde
push
pop
std
mov
push
dec
xor
push
jno
xchg
ds
mov
enter
cmp
jp
test
or
jle
xor
inc
iret
cmp
xor
lock
xor
cld
ins
mov
fldcw
mov
(bad)
aad
mov
int
(bad)
mov
pop
dec
scas
and
sub
std
lea
mov
xor
add
inc
test
push
add
xchg
fsubrp
or
sub
bound
mov
popf
movs
leave
xlat
mov
pop
cmc
pcmpgtd
aas
jge
pop
fsub
clc
sbb
daa
shl
daa
aad
or
mov
mov
mov
not
aas
push
(bad)
pusha
in
das
loopne
mov
inc
scas
pop
inc
retf
sub
mov
push
in
dec
xchg
movs
xchg
fldcw
leave
inc
pop
mov
int3
sbb
(bad)
sti
aas
cmc
add
mov
cwde
shr
sub
lods
add
mov
ss
popa
sub
cwde
scas
dec
(bad)
push
dec
jb
sbb
push
xor
push
popf
ror
push
mov
pop
or
nop
lods
in
jno
gs
add
or
inc
sub
inc
mov
sub
repz
pop
mov
dec
fsubr
adc
jae
cld
bswap
push
cs
lea
sahf
pusha
into
pop
cmp
mov
test
ins
or
adc
xor
mov
lock
sbb
adc
xchg
sbb
rcl
scas
fst
adc
fwait
cs
and
pop
jle
inc
cs
imul
ret
repnz
popf
dec
dec
xchg
jp
cs
inc
popa
push
fsub
imul
test
(bad)
frstor
cs
imul
pop
adc
les
fisub
cwde
imul
stos
sub
(bad)
jp
cli
lahf
mov
outs
jns
fld
imul
mov
in
test
(bad)
mov
push
mov
jg
xor
stc
shr
pop
mul
shl
sub
push
mov
(bad)
inc
mov
pop
bound
jl
cs
or
pop
xor
enter
xchg
cs
rcr
cs
mov
mov
shr
xor
ds
pop
das
push
pop
imul
and
mov
adc
bound
pop
fisub
popf
mov
push
cwde
mov
xchg
adc
ja
cwde
jp
out
lds
test
sub
out
out
imul
lea
push
movs
sub
and
mov
ret
out
add
arpl
sub
push
inc
or
pop
lea
movs
xchg
ins
mov
mov
sbb
(bad)
pop
pop
aas
push
ret
xchg
outs
jmp
cs
pop
xor
mov
movs
pop
pushw
loop
leave
cmps
cs
cmp
stc
push
xor
lock
add
or
cs
and
shl
pushf
out
in
inc
shl
push
sbb
movs
sub
push
outs
ja
aaa
bound
xchg
xor
jmp
cmp
cs
xchg
dec
cmp
xor
ja
adc
fdivr
(bad)
into
xor
jge
cs
cmp
sub
mul
jmp
cs
fld
lods
jecxz
or
sar
xor
icebp
pop
in
scas
loop
xchg
or
push
xor
cmps
pop
lods
xor
(bad)
movs
mov
sbb
add
sub
jp
clc
mov
dec
lds
push
icebp
mul
sahf
cld
out
ret
scas
xor
mov
add
inc
repz
fisubr
out
jne
not
ret
sbb
ficom
ins
jno
xchg
loope
nop
sbb
add
push
fs
mov
outs
push
sub
push
xor
lods
xor
(bad)
mov
xchg
mov
mov
shr
pusha
retf
pop
pop
pop
push
cs
call
int3
outs
inc
inc
push
adc
sub
push
lock
sbb
int
sub
push
ins
sub
mov
fadd
pusha
mov
repz
rcl
jmp
fst
xor
sbb
not
mov
jge
and
jle
sub
daa
ins
inc
cdq
icebp
dec
and
std
mov
jmp
sti
pop
dec
pop
push
ficomp
outs
sub
lds
out
xor
scas
popa
fdiv
outs
add
mov
rcr
mov
sub
out
push
push
mov
xchg
xor
into
(bad)
rcr
retf
imul
mov
xchg
scas
sbb
mov
mov
sub
mov
mov
cs
jns
cmp
sub
push
out
push
sahf
out
paddsb
add
aam
push
out
(bad)
in
push
sub
pop
into
ins
sub
mov
sub
les
xchg
pusha
fsubp
bound
push
jge
cs
int
mov
repz
mov
xor
sbb
push
xchg
cmp
sbb
cmp
xor
jnp
js
dec
and
jb
data16
adc
mov
xor
(bad)
xchg
xor
push
add
or
xchg
div
lods
ds
in
imul
jmp
xchg
push
scas
mov
enter
hlt
pop
push
push
pushf
sbb
cs
sub
mov
daa
cmp
push
mov
lahf
sub
cmc
ffreep
cs
ret
sti
js
(bad)
gs
sub
cmps
stos
sahf
sbb
pop
ja
and
jmp
fwait
adc
rcl
mov
leave
or
cmp
cmp
mov
mov
mov
fldcw
cwde
es
mov
xor
add
lods
(bad)
or
jne
xchg
loopne
cwde
stos
leave
mov
cmps
lock
pop
inc
cmp
push
xor
mov
sbb
jno
cs
and
ins
jne
cmp
data16
jmp
ds
inc
sub
bound
rcr
jmp
data16
push
(bad)
jnp
xor
jge
and
icebp
mov
cmp
mov
cs
pop
dec
mov
cs
enter
xchg
das
daa
fcomp
or
xchg
and
cmps
int
push
and
cwde
imul
mov
sbb
cs
mov
das
cs
cmp
sub
fsubr
sti
pop
add
jge
xlat
in
xchg
ds
dec
jmp
fwait
pop
cs
sub
lock
and
icebp
xor
outs
mov
fdiv
cs
mov
sub
jmp
fisttp
fiadd
lods
cmps
cmp
sbb
mov
cld
mov
cs
lods
and
sub
xor
push
xor
add
(bad)
dec
sbb
lds
mov
cs
in
pshufw
fwait
xor
icebp
out
ja
retf
push
hlt
inc
sbb
cs
adc
pop
sbb
and
movs
jb
std
outs
idiv
inc
sahf
rol
cs
fist
scas
fiadd
mov
and
lods
jl
cdq
sbb
fst
sbb
aad
scas
(bad)
cmp
call
fdiv
sbb
xor
mov
pusha
or
shl
popa
shr
mov
push
mov
fdivr
mov
cwde
cs
mov
fsubrp
push
push
cs
dec
xchg
cmps
cs
aaa
mov
jnp
mov
in
cs
dec
sub
inc
outs
or
stos
jle
push
popa
inc
out
adc
cs
xor
lea
addr16
mov
jg
dec
ss
dec
sub
aad
js
(bad)
dec
jbe
xor
cmps
leave
push
fmul
adc
mov
dec
adc
mov
fisttp
(bad)
and
je
mov
sub
aam
das
cmp
add
cmps
movs
xchg
dec
xor
imul
js
add
dec
jno
aaa
xchg
adc
mov
je
das
movs
and
ds
rol
cmp
adc
int3
out
push
add
icebp
out
(bad)
popf
shl
pop
cld
stc
sub
xchg
and
mov
add
xor
outs
jmp
outs
sub
lock
jno
cmps
mov
ficomp
test
arpl
dec
stc
xchg
xchg
test
ret
cdq
stc
push
call
in
jp
mov
stc
jmp
neg
jae
inc
inc
sub
daa
das
aaa
xor
mov
jae
mov
sub
(bad)
jmp
fwait
(bad)
stos
sti
xlat
mov
mov
daa
push
in
inc
adc
out
sub
(bad)
scas
fucomi
xchg
cmp
cdq
sbb
xchg
out
int
push
cmps
push
push
movs
rcl
scas
sub
push
cmps
call
test
movs
arpl
sub
jge
mov
(bad)
pop
inc
sub
xchg
dec
dec
add
test
jle
xchg
jge
(bad)
or
dec
loop
rcl
or
xchg
mov
pushf
fisubr
shr
test
sbb
adc
(bad)
in
in
or
pop
sbb
push
mov
leave
test
mov
hlt
mov
inc
retf
jae
jmp
in
and
into
xor
push
xchg
pop
fidiv
bound
mov
xchg
scas
int3
push
std
mov
out
jl
hlt
mov
add
(bad)
scas
(bad)
sub
loopne
fcmovu
sbb
or
fnsave
fisttp
add
stos
ja
leave
lock
push
jecxz
(bad)
gs
pop
add
adc
test
xor
out
pop
mov
ins
int
repnz
out
xor
push
iret
mov
popa
and
es
xchg
adc
addr16
adc
std
dec
rcr
(bad)
pop
iret
mov
and
adc
adc
mov
mov
jo
cs
cwde
mov
sbb
xchg
xchg
js
jl
retf
in
or
jge
(bad)
sbb
ss
fisub
popa
adc
in
enter
dec
movs
pop
sub
nop
imul
mov
mov
xor
push
enter
xor
xor
scas
lods
push
or
xchg
pop
add
popf
loopne
adc
xchg
mov
push
or
mov
cmp
lds
bswap
jmp
cmc
enter
or
push
mov
retf
jne
adc
cmps
inc
mov
push
jb
pop
cs
shl
not
inc
pop
loope
icebp
aad
ins
push
mov
out
call
daa
and
inc
das
stos
retf
dec
dec
sbb
cs
mov
out
xor
rcr
addr16
cs
data16
mov
push
retf
xchg
adc
sar
push
inc
cs
push
in
aam
pop
fwait
pop
cs
rcl
add
mov
sbb
cs
pusha
frstor
sub
(bad)
pop
jmp
mov
fwait
xor
pop
jnp
mov
push
inc
cs
sub
fstp
sbb
xor
dec
outs
and
mov
add
dec
pop
out
ret
adc
push
cmps
dec
mov
dec
aaa
pop
jno
pcmpgtb
in
ins
shr
cmps
cld
sbb
pop
mov
sub
fsub
icebp
jecxz
sbb
ins
inc
into
cs
add
cs
retf
push
fld
xchg
fild
cs
mov
ret
sub
adc
ret
push
sub
cmps
in
jo
test
or
out
cs
inc
cs
and
test
arpl
enter
push
mov
cs
movs
icebp
inc
shl
popf
cs
mov
and
mov
or
adc
aad
push
adc
and
cs
xchg
jno
outs
lds
cmp
ja
sbb
xchg
test
pusha
push
rol
shr
sub
leave
dec
loope
ficom
scas
(bad)
mov
lea
(bad)
inc
xor
inc
retf
xchg
fadd
retf
push
xor
cmp
leave
dec
mov
in
retf
pop
add
jbe
jb
push
cmp
scas
call
(bad)
(bad)
sbb
push
(bad)
dec
test
fs
pop
sbb
jge
lods
mov
movs
mov
inc
or
and
inc
xlat
ds
leave
enter
and
adc
xor
dec
ins
xor
xor
jp
dec
fs
add
test
mov
push
jb
xchg
outs
xchg
mov
mov
stos
sti
(bad)
aas
das
xchg
retf
xchg
out
cs
mov
retf
mov
cmp
cld
mov
add
and
push
or
add
sub
daa
mov
call
jp
push
cs
sbb
jecxz
xor
mov
rol
jmp
out
sbb
and
pusha
int3
add
and
inc
push
retf
xor
mov
mov
push
cli
imul
add
push
cli
push
cs
les
mov
pop
xor
mov
xchg
add
xor
cmp
test
dec
test
mov
loopne
aam
mov
xor
addr16
jg
cmp
(bad)
jmp
pusha
push
int3
(bad)
dec
scas
icebp
and
adc
jnp
pop
sbb
sbb
mov
fs
and
adc
(bad)
scas
out
mov
repz
xor
rcr
fsubrp
daa
shr
or
mov
outs
out
sub
lds
or
into
xchg
and
out
loopne
xchg
in
mov
push
xchg
pop
cs
sti
xor
adc
jno
inc
or
js
test
xchg
sahf
(bad)
mov
in
cs
scas
popf
aaa
pop
stos
cs
xor
maxps
add
jnp
inc
or
sub
imul
retf
push
push
arpl
call
scas
inc
cli
in
movs
sbb
mov
test
and
push
fdecstp
imul
add
mov
outs
cs
push
gs
or
adc
sub
movs
adc
daa
test
adc
cs
mov
jbe
mov
cmp
mov
xchg
push
call
test
mov
jbe
call
je
and
pop
xor
gs
mov
call
movs
and
shr
sahf
mov
mov
dec
mov
movs
sub
repnz
enter
cs
push
add
jge
xchg
(bad)
add
mov
mov
(bad)
aas
sbb
test
call
aaa
(bad)
fldenv
jle
dec
call
mov
pop
mov
jecxz
push
jmp
cs
push
fidiv
push
sub
test
retf
dec
push
ret
mov
inc
lds
aad
clc
lock
pop
push
les
add
fsub
push
(bad)
push
fisubr
jbe
gs
clc
inc
or
test
jmp
lock
adc
or
add
pop
loopne
xchg
cli
sub
sahf
bound
dec
test
fistp
jno
mul
cs
hlt
test
adc
rcl
rcl
nop
int3
cdq
pop
dec
cs
call
inc
hlt
push
and
mov
adc
(bad)
cwde
and
arpl
adc
cmp
pop
mov
mov
cwde
xchg
cs
mov
xor
adc
retf
adc
inc
jp
sbb
iret
fist
(bad)
nop
stos
cwde
das
cs
push
mov
cs
out
ins
ds
popf
clc
in
cs
cwde
mov
shl
repnz
mov
lahf
cs
fnstcw
sub
pop
adc
xor
popa
outs
xchg
dec
fldl2t
cs
xchg
pop
xchg
xchg
push
ins
sub
retf
test
bswap
push
es
pop
repz
jmp
and
sti
or
into
dec
out
pop
push
push
fbstp
scas
inc
inc
icebp
fsubr
gs
or
cs
push
inc
mov
pop
lods
cs
jo
jno
stc
leave
test
(bad)
xor
mov
sub
mov
(bad)
sub
and
mov
cmp
je
push
cs
(bad)
mov
enter
repz
mov
outs
jbe
push
jp
inc
(bad)
mov
or
out
fstp
adc
mov
stos
cmps
not
mov
pop
int
shl
ds
jo
call
out
movs
cmp
outs
mov
aad
jl
jmp
mov
sub
imul
push
push
jmp
push
mov
retf
push
retf
ss
xchg
sub
popa
jmp
scas
or
fmulp
pop
xor
add
outs
xchg
jne
xor
aam
sub
inc
fnstenv
cmp
scas
pop
push
sahf
cmp
cwde
xchg
lea
jb
mov
xor
cmp
mov
(bad)
jbe
inc
sti
mov
das
jecxz
jae
and
sti
fmul
call
adc
icebp
xor
fadd
add
dec
dec
(bad)
test
ja
push
and
and
sub
(bad)
stos
mov
int3
das
xor
or
cs
ins
sahf
jg
retf
rcr
mov
mov
dec
das
xor
aas
and
jmp
push
out
lahf
dec
xlat
cmp
test
ins
sub
(bad)
xchg
mov
cmp
fsub
sub
mov
(bad)
out
movs
mov
jge
adc
cmps
test
ja
mov
mov
sub
add
jecxz
xor
ffree
fdivr
mov
mov
xlat
stc
imul
and
cmp
cmc
outs
push
mov
lahf
aad
add
sub
mov
pop
dec
das
ret
(bad)
and
or
outs
xchg
sahf
xchg
inc
sub
dec
push
dec
mov
jns
and
or
aas
mov
push
mov
call
ins
outs
xlat
lahf
fsub
lds
inc
or
cld
or
push
fsubr
aas
lods
add
test
jmp
rol
cs
jae
(bad)
jge
popa
cs
push
sbb
pushf
jne
jae
lahf
inc
sub
lea
in
sub
adc
stos
and
push
lock
pop
cs
aam
retf
sbb
cs
(bad)
in
mov
mov
call
add
(bad)
mov
jne
add
outs
cs
loopne
xchg
mov
pop
arpl
iret
and
in
out
cmp
add
repnz
cs
shl
inc
mov
xchg
push
dec
(bad)
ss
or
sbb
sbb
aad
daa
push
aam
scas
call
or
bound
mov
ret
xor
js
or
int3
cld
shr
fbstp
or
inc
int
mov
fcom
xor
iret
retf
dec
pop
jae
cs
jo
dec
jecxz
sahf
sub
out
mov
xor
and
popa
and
(bad)
cmp
in
lea
dec
adc
cmc
mov
sbb
cdq
ficomp
xor
test
aam
cs
arpl
(bad)
in
cmp
dec
and
mov
jb
aad
lods
aaa
jmp
ficom
jae
inc
inc
or
nop
enter
pop
mov
sub
lock
and
jmp
push
outs
jno
adc
rol
mov
neg
cs
data16
popf
movntps
push
sahf
push
enter
aaa
jmp
mov
sbb
call
jno
mov
into
xor
and
stc
add
sbb
sub
out
imul
fstp
(bad)
fwait
adc
dec
push
cs
xchg
imul
inc
cmp
aaa
loop
push
pop
cs
mov
mov
push
arpl
cmp
cs
sti
mov
cs
jle
jge
fnstenv
dec
jns
dec
xchg
sub
(bad)
cli
neg
xor
sti
jmp
and
popa
sahf
(bad)
movs
imul
js
push
ins
aas
pop
inc
fild
add
mov
idiv
fist
adc
ja
imul
dec
je
scas
jmp
jp
cdq
stc
jns
xlat
mov
xchg
cmp
jo
mov
leave
lods
call
push
sbb
shl
dec
cs
in
fistp
mov
outs
ror
sub
iret
dec
and
hlt
scas
imul
push
shl
addr16
sar
and
push
sbb
cs
sub
imul
enter
cmps
jg
loop
xchg
ja
xor
xchg
jmp
call
jl
sbb
xchg
(bad)
(bad)
(bad)
sub
and
stos
mov
daa
ins
xchg
bound
sbb
xor
shl
jle
into
and
daa
cmp
jg
mov
cs
add
or
cs
adc
sub
data16
add
into
add
cs
lods
inc
mov
dec
mov
cs
imul
aas
or
cs
scas
xor
jg
dec
lds
outs
(bad)
and
xchg
loope
into
addr16
push
jo
ins
adc
mov
jns
xchg
sub
push
dec
aad
mov
sub
jmp
popa
pop
adc
mov
scas
sbb
call
mov
adc
push
mov
outs
xchg
fisubr
pop
inc
dec
sub
test
sub
scas
mov
pop
sub
and
jo
(bad)
aaa
and
daa
mov
cli
sub
cmp
xchg
fsubr
retf
rol
fidiv
mov
in
mov
imul
lods
push
cs
or
aad
outs
loope
icebp
mov
inc
mov
add
xchg
dec
pop
sub
loopne
pop
loope
ret
fdivr
daa
pusha
push
and
jle
or
in
imul
cli
mov
cmp
movs
sub
and
fimul
fcomp
mov
and
push
cs
mov
call
fyl2xp1
pop
sbb
arpl
xor
call
and
mov
(bad)
pop
out
xor
das
fild
inc
add
dec
ss
cmp
call
pop
dec
and
cmp
dec
fs
xlat
add
pop
js
pushf
(bad)
clc
pusha
jne
mov
and
dec
repnz
std
mov
lock
out
fld
fcom
push
lds
cmps
iret
sub
mov
mov
lds
cs
int
mov
movs
jmp
not
shr
rcl
pusha
outs
fwait
popa
sbb
pop
adc
mov
and
fmul
adc
(bad)
jmp
cmp
xchg
aad
imul
mov
clc
mov
call
pusha
jp
jg
jmp
neg
sub
xchg
cs
sbb
ins
fst
and
inc
mov
jbe
push
xor
in
movs
mov
test
jns
(bad)
popa
out
inc
lds
movs
rol
xchg
mov
call
js
ret
sub
fbld
pop
add
out
xor
adc
and
out
and
or
imul
aam
data16
leave
mov
lea
fcom
push
mov
std
imul
aam
xor
movs
sub
jmp
lea
stos
and
xchg
dec
mov
not
in
leave
and
xor
sub
repz
sar
leave
fwait
and
es
aas
cmps
rcl
xor
dec
aam
push
fdiv
pushf
fisttp
es
inc
mov
in
xor
jecxz
dec
(bad)
(bad)
jl
sub
xor
mov
adc
push
cld
pushf
jo
mov
lods
out
and
push
xchg
and
adc
scas
push
dec
sub
scas
add
push
sti
ror
daa
shr
stc
aas
xchg
add
xchg
(bad)
mov
hlt
mov
(bad)
stos
shl
pop
add
fisubr
sub
loope
jp
mov
test
mov
outs
test
inc
stos
ds
sub
scas
retf
or
stc
dec
or
jmp
xchg
stc
lods
cs
inc
adc
dec
pop
leave
rcl
push
mov
cmp
out
sbb
(bad)
xchg
mov
das
sub
enter
aas
and
add
scas
leave
fldenv
or
outs
gs
or
mov
shl
dec
push
cmp
pop
arpl
dec
pop
push
sub
mov
or
mov
fiadd
imul
in
bound
dec
(bad)
(bad)
daa
cmp
and
aad
and
inc
mov
in
in
dec
xor
retf
push
outs
or
out
mov
lahf
fidivr
xor
fild
imul
jmp
cmp
pusha
jo
push
sub
imul
scas
ds
lahf
das
cdq
popf
aad
add
adc
scas
pop
push
and
xor
daa
add
aaa
aas
aam
out
(bad)
(bad)
mov
je
mov
xchg
adc
fidivr
cs
mov
(bad)
mov
sub
scas
jle
push
dec
and
or
cmps
xchg
push
sub
or
mov
fucomp
jecxz
mov
inc
cwde
add
or
cs
xlat
xchg
fist
pop
scas
into
icebp
cmps
fwait
push
xchg
mov
sti
hlt
cs
sbb
pop
push
lds
clc
shr
mov
fcomp
test
jbe
add
adc
aas
out
mov
(bad)
out
rep
out
cmc
sbb
addr16
mov
outs
mov
mov
test
(bad)
fadd
xchg
or
push
dec
adc
loopne
test
add
mov
fst
mov
mov
stos
imul
(bad)
mov
mov
add
inc
jecxz
out
xchg
dec
mov
xchg
js
ror
sub
xchg
dec
arpl
aam
cmps
push
jne
aad
das
icebp
jmp
dec
imul
sub
shl
xchg
das
xor
sub
out
test
add
leave
sbb
jns
sbb
sub
imul
outs
dec
add
ja
and
(bad)
sti
mov
cmp
and
sbb
jg
stos
into
ret
cdq
xchg
xchg
mov
mov
sbb
mov
std
xchg
scas
shr
jl
cmc
lods
outs
cmp
sub
or
leave
(bad)
not
inc
mov
and
fdivp
and
or
cwde
push
pop
mov
mov
pop
fisub
je
xchg
cmp
cmp
and
push
jl
test
cmp
nop
pop
cmp
mov
push
leave
pop
xchg
sub
sbb
fcomp
cmps
test
dec
mov
mov
jl
addr16
sub
retf
pop
ret
mov
lods
xchg
lahf
scas
sub
lahf
mov
push
stos
inc
lock
sub
add
loop
aas
and
out
leave
add
adc
pop
leave
and
xchg
rcl
fsubr
xlat
sbb
sub
inc
cs
addr16
int3
sbb
inc
stos
ror
push
sbb
imul
jmp
fisubr
push
push
es
sbb
cmc
pushf
adc
pop
pop
test
adc
adc
aad
jb
add
sub
scas
xor
xor
dec
data16
call
aas
pop
push
sbb
jnp
pminub
ffreep
loope
dec
repnz
dec
mov
bound
ja
shl
daa
(bad)
xor
cmp
pop
mov
sbb
sub
add
dec
not
not
sbb
out
les
pusha
xchg
test
cwde
(bad)
jb
mov
mov
int
and
sub
pop
lock
hlt
xor
ficom
and
mov
loope
ss
stos
sub
cmp
push
jnp
pop
dec
mov
sti
fild
popa
jge
inc
xchg
call
leave
push
fist
popf
lods
sub
xlat
ins
vmread
in
pushf
adc
inc
addr16
cmc
das
out
dec
adc
mov
push
and
push
jae
ja
mov
neg
fdiv
js
(bad)
push
mov
test
sub
mov
bound
or
gs
cs
outs
ret
mov
inc
mov
adc
adc
outs
aad
retf
outs
mov
scas
in
xor
scas
in
cli
mov
dec
mov
xor
test
mov
(bad)
mov
arpl
and
mov
pop
sub
push
aad
add
loopne
mov
dec
jne
arpl
or
fwait
cmp
loopne
ret
mov
sbb
daa
inc
pop
aaa
add
push
inc
push
std
or
imul
xor
cmp
call
sbb
sub
fiadd
out
retf
ja
add
stc
ins
push
xchg
aad
imul
sub
clc
stos
xchg
mov
(bad)
fisttp
jg
sbb
jp
mov
dec
imul
lahf
xlat
jo
mov
and
mov
adc
mov
cmp
adc
jb
sub
xchg
add
jg
or
sbb
sub
mov
push
sbb
and
pop
cmps
cs
fcomp
fst
sub
aam
add
push
into
inc
daa
dec
int
movs
and
retf
or
mov
jnp
xor
aaa
js
mov
push
sbb
cs
leave
and
retf
adc
lock
fcmove
daa
add
(bad)
pop
test
cmp
dec
adc
or
mov
jl
test
push
lds
popa
retf
stos
sbb
sub
sti
idiv
cs
or
mov
stc
jmp
test
pop
sbb
adc
ss
xor
push
cmp
ds
and
mov
(bad)
xchg
iret
(bad)
sub
not
sub
sbb
sub
mov
pop
loope
and
loope
add
pop
adc
popf
xchg
loop
lods
mov
mov
sahf
js
imul
xchg
retf
cs
mov
sub
inc
pop
scas
add
mov
mov
cs
pop
add
sbb
call
push
mov
dec
scas
fstp
pop
sahf
cs
test
(bad)
fdivr
pop
jge
add
pop
jecxz
pop
jb
jns
pop
cs
push
and
ins
add
scas
mov
shr
cs
inc
push
xor
leave
les
pop
jl
outs
aad
test
ds
ror
clc
call
push
adc
retf
aas
jb
pusha
test
pop
adc
jmp
jl
push
jne
cs
xchg
fstp
cs
inc
or
cs
fcomp
cs
push
addr16
pushf
lahf
ret
test
int3
scas
mov
retf
sahf
mov
sub
je
jae
add
retf
jmp
push
xor
dec
cs
daa
gs
push
or
mov
cs
in
push
hlt
xor
cs
jmp
lea
mov
pusha
jp
mov
pop
addr16
arpl
sbb
rcr
test
and
pop
or
cmp
and
popa
loope
inc
jb
and
jae
popf
js
cli
jmp
test
into
sub
and
leave
jecxz
push
jae
int
retf
icebp
inc
mov
enter
adc
xchg
pop
ficomp
jnp
cmp
cld
test
aad
add
rcr
out
cs
and
mov
xor
jno
lock
push
sub
test
(bad)
sub
fidivr
iret
int3
(bad)
cmc
fisubr
xchg
cli
les
int3
enter
mov
xchg
add
imul
mov
xor
dec
push
mov
dec
mov
stc
xchg
fdiv
dec
popf
leave
push
ja
sahf
sub
sbb
xchg
or
cld
mov
mov
scas
dec
popf
sar
(bad)
and
xor
adc
mov
ror
rcr
imul
lds
sbb
pop
pop
cmp
outs
es
xor
push
arpl
loopne
and
mov
inc
cmp
jmp
mov
std
stc
cs
mov
pop
mov
adc
push
retf
cs
adc
jle
mov
sbb
scas
and
or
inc
cdq
daa
outs
fmul
movd
and
jp
dec
add
aas
mov
stos
into
mov
fiadd
xor
pop
por
cld
add
loop
push
out
push
scas
jle
mov
adc
and
push
ss
xor
adc
cdq
daa
dec
lods
data16
fidiv
xor
daa
cmp
mov
and
add
cs
rcl
aas
cli
adc
jge
sbb
sub
add
nop
outs
ds
and
inc
rol
fild
scas
(bad)
mov
dec
cs
fsubr
xor
popa
xor
push
xchg
jns
into
jl
cs
jge
je
xlat
scas
js
ins
leave
dec
daa
add
stc
sub
shr
xor
adc
sub
dec
push
pop
adc
mov
xor
js
lock
cs
psllw
cs
push
loop
dec
stos
jb
lods
imul
mov
mov
aad
push
push
(bad)
jecxz
xor
mov
call
pop
aad
call
bts
(bad)
(bad)
dec
sbb
inc
mov
jnp
mov
cmp
adc
sub
inc
adc
movs
mov
ins
loop
xchg
cmp
sub
push
std
cs
inc
mov
aad
aaa
jmp
iret
out
fisttp
mov
cs
jl
retf
push
add
mov
into
push
dec
pop
mov
ror
adc
xor
cmp
cmp
cs
popa
xor
fldcw
pop
(bad)
jmp
aam
fs
dec
inc
sbb
sub
push
pushf
rcr
push
sub
cmp
mov
call
add
mov
mov
(bad)
jo
pop
pop
popa
lahf
xor
ins
(bad)
pop
push
lods
mov
in
mov
push
xor
lods
aad
jp
es
imul
xchg
lods
or
sub
jg
paddq
cld
movs
test
mov
xor
mov
push
cld
retf
outs
call
test
pop
pop
inc
arpl
scas
dec
jmp
jmp
loopne
mov
(bad)
jae
shr
lods
add
mov
mov
jecxz
aam
sub
xor
and
pop
jge
lahf
xchg
sub
les
les
aas
mov
add
mov
mov
ds
ja
xor
gs
ror
fcom
fild
lahf
dec
std
int
push
lock
cmps
enter
cmp
xchg
(bad)
sub
add
(bad)
repnz
inc
dec
sti
pop
out
(bad)
cmps
mov
leave
out
and
cmc
(bad)
popa
sub
cmp
push
call
cmps
jbe
push
cwde
daa
fbstp
int
dec
or
sub
adc
jmp
shl
mov
or
mul
sbb
and
enter
or
(bad)
fimul
mov
loopne
push
outs
mov
pop
mov
xchg
fsubr
shr
les
adc
push
(bad)
fstp
mov
sub
add
inc
and
mov
xor
dec
in
jmp
test
pop
adc
cwde
push
scas
cs
and
cs
js
xor
xchg
xor
sbb
push
jmp
or
(bad)
dec
sub
(bad)
dec
movs
stos
adc
xor
mov
inc
push
rsm
cs
mov
ficomp
sub
cs
jne
(bad)
sub
jbe
add
mov
add
xor
pop
mov
movs
dec
sub
and
pop
in
ja
cmp
pop
cmp
lahf
cs
add
and
hlt
mov
or
adc
dec
popa
mov
sub
lahf
scas
(bad)
stos
sub
cli
stos
lock
shl
pop
dec
push
jno
or
dec
je
stc
maxps
jecxz
jmp
mov
or
cs
push
aas
test
out
jo
out
sub
cs
popf
fdivrp
arpl
xor
stos
(bad)
push
fcmovbe
fsubr
mov
xor
push
jg
into
popa
jnp
cmp
leave
stc
or
and
adc
mov
pop
dec
jge
jb
cs
outs
adc
cmp
mov
into
cdq
test
push
movs
sub
cmps
lods
retf
scas
in
sub
cs
(bad)
jbe
nop
xchg
daa
mov
outs
xchg
js
jnp
sbb
mov
retf
movs
in
mov
shr
call
bound
push
retf
sbb
sbb
dec
pop
fsubr
in
jg
xor
test
jnp
push
mov
inc
mov
(bad)
fstp
shl
pusha
push
jg
fwait
adc
mov
jmp
in
leave
sub
(bad)
jmp
xchg
sbb
xchg
cmp
cmp
jg
sbb
ins
js
mov
loopne
fimul
mov
lahf
push
xchg
jb
inc
fild
ss
test
and
sub
fwait
(bad)
jl
cmp
jmp
jmp
inc
aas
mov
push
mov
(bad)
lahf
add
jo
sbb
pop
test
jg
les
push
xchg
jp
push
imul
inc
lods
pop
push
jb
jmp
popf
(bad)
adc
ror
mov
aas
xchg
jns
test
push
adc
jae
inc
mov
fs
push
push
dec
(bad)
sbb
pop
jnp
popa
daa
adc
cmp
nop
cwde
adc
jbe
mov
aas
test
jmp
sub
cs
or
(bad)
(bad)
xchg
xor
dec
inc
jb
or
add
mov
retf
sar
imul
movs
pushf
pop
popa
mov
and
mov
sbb
aad
add
and
jmp
imul
sbb
shr
movs
xor
(bad)
pop
mov
(bad)
loope
mov
pop
fcompp
pop
mov
cmp
lds
arpl
jle
inc
sub
pushf
adc
and
jp
xchg
mov
sub
dec
scas
and
mov
push
repz
ss
inc
sub
mov
bound
fdivr
test
ss
enter
(bad)
and
push
cmp
(bad)
adc
xchg
mov
pop
adc
push
jmp
imul
sbb
pop
xor
xor
out
fld
cs
test
and
sub
inc
leave
mov
jnp
in
mov
push
in
aad
out
push
xchg
not
out
aad
jno
mov
scas
sub
loop
out
jle
pop
adc
pop
inc
push
scas
jmp
stos
out
cs
in
mov
bound
imul
push
add
mov
dec
into
jbe
dec
clc
lock
loopne
shl
push
inc
or
fimul
sbb
aas
hlt
sub
push
imul
sub
cmc
pop
cmps
sbb
jns
cs
cmp
nop
jmp
dec
mov
xor
pusha
xchg
fldenv
dec
inc
mov
push
or
sub
stos
repz
mov
mov
cmp
cs
sub
loope
mov
cs
ret
mov
lock
rol
jl
xor
push
push
in
inc
shl
or
jmp
sbb
(bad)
cld
jbe
adc
lods
pusha
cs
cmp
and
ret
fwait
je
inc
aam
pop
and
push
inc
jmp
cmp
xchg
sbb
lock
jo
fwait
jns
inc
jl
repz
mov
ds
add
aam
cs
ret
cmps
xchg
cdq
cs
popa
nop
mov
cs
cmps
movs
sub
dec
cli
adc
loop
add
in
and
fwait
lock
sub
aad
xor
pop
or
lods
int
adc
dec
add
sub
sbb
add
cs
std
stc
mov
fiadd
pusha
push
stos
sub
stos
out
mov
add
test
jnp
mov
aaa
mov
lods
into
or
shr
mov
sub
sbb
xlat
mov
in
mov
jmp
enter
mov
outs
pushf
cld
mov
jmp
cmps
add
ins
ret
cs
mov
shl
fst
arpl
xchg
jae
xor
and
or
shl
sub
stos
and
dec
f2xm1
sbb
mov
jnp
lods
in
stos
cmc
js
cmps
cs
movs
test
sbb
les
mov
push
cs
xchg
loopne
sub
adc
pop
or
sbb
scas
shl
outs
add
enter
xor
and
jae
mov
mov
cs
idiv
cs
jecxz
mov
dec
cs
js
loop
mov
fisubr
pop
test
push
sbb
or
sub
and
das
sub
fdiv
xchg
cli
xor
retf
addr16
sub
sub
(bad)
enter
mov
sar
cmp
dec
cdq
call
sub
ja
lahf
retf
cmp
xor
cmp
shl
jecxz
std
cmps
add
add
jmp
inc
add
sub
leave
stos
es
mov
popf
mov
push
retf
adc
stos
outs
jl
dec
mov
dec
cmp
rol
test
test
cdq
sbb
sub
test
push
cs
std
int3
inc
cmp
dec
jg
fild
(bad)
or
les
xchg
sub
jbe
and
sbb
(bad)
cmp
pop
sar
mov
pop
es
jge
ja
xor
mov
xor
cmp
xchg
mov
jno
adc
lock
mov
das
dec
out
pop
cmc
xor
or
jnp
(bad)
pop
es
mov
push
in
jmp
add
cmp
ins
addr16
enter
stos
adc
js
(bad)
cld
xchg
ret
retf
xchg
and
fadd
sbb
and
or
mov
inc
movs
(bad)
sub
or
out
push
lds
dec
push
rcr
mov
inc
les
arpl
mov
fsubr
jg
fs
xchg
(bad)
movs
addr16
or
xchg
sub
nop
jne
xor
mov
dec
rcl
inc
retf
ret
sbb
sbb
ret
stos
shl
cmp
gs
mov
fdiv
push
mov
test
les
adc
mov
std
mov
or
sbb
add
lea
arpl
inc
adc
lds
xchg
cs
inc
sub
mov
mov
in
cmp
adc
mov
dec
js
stc
jnp
rcl
aaa
aaa
jmp
or
dec
stos
push
xchg
enter
xor
mov
(bad)
push
add
xor
rcl
mov
stc
in
shr
xchg
cmc
daa
cld
ror
push
push
daa
add
sbb
popa
clc
cld
jecxz
lahf
xor
iret
lods
imul
dec
cs
lahf
ret
ins
push
fs
pop
daa
add
popf
sbb
ss
push
sbb
and
cmp
adc
test
in
sbb
retf
mov
push
out
ins
fist
pop
(bad)
xor
dec
mov
out
dec
ins
icebp
int3
lods
shr
(bad)
cmp
xor
cs
repnz
outs
sbb
imul
and
iret
mov
(bad)
sub
mov
sbb
test
push
fild
pushf
push
xor
pop
sbb
outs
sub
mov
pop
xchg
nop
push
data16
pop
cmps
test
mov
sbb
mov
mov
icebp
pop
push
or
dec
xor
xor
fsubr
pop
adc
jl
rcr
mov
add
xchg
addr16
jne
push
jo
loopne
sbb
dec
imul
jecxz
ficomp
mov
(bad)
rol
in
(bad)
repnz
push
pop
sbb
xor
popa
dec
outs
adc
jb
xchg
cs
jg
iret
push
inc
das
div
fmul
sbb
nop
les
(bad)
mov
stc
outs
push
pop
pop
cs
in
repz
cmp
add
xchg
pushf
aaa
jp
cmp
xor
repnz
lock
xchg
xor
retf
stos
sub
xor
and
push
dec
rcl
dec
push
in
mov
mov
stos
mov
mov
sbb
xor
sti
cmps
sub
lods
neg
ret
out
mov
add
mov
clc
movs
xor
fdiv
jno
jmp
into
cs
xchg
xchg
fs
xchg
les
jmp
test
int3
rcl
imul
ss
jbe
hlt
shr
(bad)
mov
lea
inc
scas
pop
xor
mov
add
les
dec
shl
mov
test
fisub
cmp
pop
test
out
cs
push
xlat
sub
repnz
add
arpl
push
psubsb
imul
fld
pop
sti
jns
fistp
add
mov
fnstsw
movd
idiv
data16
and
push
or
cmps
and
add
lods
iret
movs
pop
ins
mov
cwde
fcomp
cs
push
cs
leave
mov
add
add
inc
jno
lahf
loop
jle
dec
sub
xor
inc
cmp
jae
mov
sbb
and
fldcw
mov
int
dec
nop
and
test
adc
stc
in
loopne
ja
jns
mov
stos
push
pushf
dec
mov
hlt
mov
sbb
push
sbb
mov
sti
jmp
cs
adc
xchg
(bad)
gs
(bad)
repz
mov
or
cmp
push
je
imul
adc
cs
cmp
dec
pop
add
icebp
into
sub
pop
retf
pusha
cld
adc
dec
pop
cmps
ror
(bad)
xchg
arpl
push
dec
mov
xchg
das
cs
stc
(bad)
daa
jbe
and
test
cmps
outs
push
arpl
cs
rcl
jne
xchg
mov
mov
hlt
sub
jg
ins
cs
fisttp
sub
cs
jmp
out
mov
mov
ret
xor
retf
addr16
stos
xor
pop
fwait
cmovno
scas
xchg
and
cs
xor
popf
pop
retf
sahf
ss
mov
mov
imul
fcmovnu
xor
pop
test
cmps
mov
pusha
mov
pop
cdq
retf
sbb
or
mov
jg
xor
pop
into
retf
jne
cs
mov
shl
repz
sbb
stc
scas
stos
jbe
icebp
jle
mov
scas
jmp
and
jnp
sub
fstp
cmp
into
push
push
rcl
iret
pop
push
jb
aad
dec
pop
shl
(bad)
xchg
sub
sbb
shr
jle
pop
and
aas
xor
ds
push
xchg
dec
xor
jo
sub
rol
push
std
jbe
mov
aaa
mov
xchg
das
(bad)
jmp
and
inc
sbb
out
ja
sahf
jle
pop
into
cs
js
mov
dec
rcr
mov
(bad)
xchg
loope
or
std
test
push
scas
(bad)
shl
sub
sub
cs
mov
ror
daa
add
sub
xchg
shr
into
enter
cs
push
adc
and
mov
xor
retf
ss
imul
shr
out
and
into
sbb
xchg
jmp
sub
pop
daa
sbb
fiadd
sbb
ins
mov
pop
dec
or
jl
aas
leave
fmul
aas
cmp
cmp
push
lock
(bad)
sub
dec
dec
inc
ja
add
sub
add
dec
test
mov
divps
sub
pop
ds
sbb
pushf
mov
cs
inc
push
push
xchg
push
or
and
sahf
fldenv
aam
stc
dec
or
sub
shr
popf
leave
pop
mov
xor
sbb
push
out
xchg
pop
push
and
push
jmp
outs
pop
xchg
mov
adc
push
lock
fmul
gs
cs
mov
sbb
ficomp
data16
sahf
and
rol
iret
dec
and
cs
mov
xchg
mov
cmps
sbb
push
mov
xor
pop
inc
ss
(bad)
push
cmp
mov
dec
imul
adc
loopne
mov
push
mov
push
imul
fst
sub
cs
dec
mov
out
out
in
sub
aas
(bad)
fsub
in
xor
inc
cs
cmp
stos
(bad)
mov
fstp
stc
pop
jb
pusha
push
jmp
scas
push
mov
data16
push
mov
cs
push
sub
pop
inc
xor
xchg
xor
int3
mov
fisub
xchg
mov
stos
jb
ret
ins
xchg
and
scas
mov
fldcw
and
sbb
scas
cld
cdq
xor
sub
add
(bad)
and
lock
mov
mov
dec
cs
pop
push
inc
mov
xchg
push
jmp
mov
cmp
xchg
push
mov
scas
cs
loopne
leave
fst
shr
sbb
adc
xchg
sub
mov
jo
(bad)
xor
das
retf
or
retf
shr
clc
push
xchg
data16
arpl
shl
or
mov
loop
mov
xchg
xchg
movs
or
and
pop
cs
lods
xchg
loope
bound
push
xor
loop
shl
lods
pop
fisubr
pop
in
mov
(bad)
cs
in
test
mov
cmp
movs
scas
adc
cs
jmp
scas
sbb
iret
fsubr
adc
lahf
test
cmp
outs
in
pop
ret
pushf
mov
ins
sahf
sub
cmps
clc
jnp
push
push
cld
push
mov
inc
loopne
adc
aam
cs
in
shl
xor
retf
sub
pop
daa
xchg
xlat
push
repz
imul
movs
into
(bad)
fmul
xchg
add
push
test
fucomi
cs
lods
fwait
or
repnz
scas
pusha
inc
sub
jmp
and
mul
fcmove
inc
fmul
sti
push
mov
cs
ror
push
sub
inc
cs
fwait
aad
mov
add
test
fs
adc
mov
mov
or
jmp
hlt
xchg
cmps
jnp
or
lods
adc
cs
xor
and
mov
jo
call
aas
icebp
push
out
int
add
xchg
pop
push
push
ja
sbb
(bad)
shl
sub
pusha
mov
lods
lahf
jg
cmp
or
dec
xchg
rcr
inc
xlat
mov
sbb
pop
lods
push
das
or
pop
je
test
ds
cmp
mov
jmp
sahf
mov
or
sbb
nop
xor
dec
or
xchg
je
movs
sar
push
clc
out
adc
pop
nop
lea
jns
(bad)
pop
lods
ja
test
cmp
call
daa
sahf
fdiv
adc
cmp
cmp
or
lock
test
jmp
cmps
push
jmp
test
leave
push
push
xor
dec
push
jnp
xchg
cmp
fnstcw
add
loopne
mov
sub
(bad)
mov
jmp
mov
jnp
dec
sbb
xchg
sub
push
xchg
not
in
fs
pop
mov
xor
sti
(bad)
std
adc
add
bound
jbe
jecxz
cmp
pop
and
jmp
leave
and
inc
in
cmp
add
out
pop
add
pop
(bad)
add
aaa
sub
mov
inc
xlat
and
cmc
mov
movs
and
push
ret
shr
xor
movs
cs
ficomp
and
sbb
paddusw
retf
add
daa
sbb
mov
cs
jne
mov
push
cs
mov
push
inc
cs
popa
iret
test
out
push
in
in
and
jnp
pop
cs
push
or
retf
sub
sub
mov
cs
jo
adc
call
test
cs
push
daa
scas
mov
xor
(bad)
adc
out
lea
cs
rol
pop
adc
inc
dec
mov
mov
cs
or
jmp
cmps
in
fist
fwait
and
out
mov
cs
icebp
loope
sbb
dec
adc
out
and
jb
mov
jbe
push
and
adc
sbb
jb
aad
aas
retf
dec
push
fcmove
fisttp
inc
fnstenv
leave
pop
push
pop
sbb
add
dec
push
push
stos
pop
adc
cs
dec
cmp
out
push
or
fcomp
push
and
(bad)
cld
ds
(bad)
push
adc
cmp
cs
xchg
popf
cs
mov
pop
dec
sbb
xor
cs
repz
xor
mov
add
push
popa
push
mov
jne
cmp
dec
(bad)
xor
sub
ins
ja
fwait
cmp
(bad)
clc
repnz
mov
xchg
cs
pop
ss
out
data16
xchg
inc
cmps
dec
fstp
stos
mov
ficom
push
inc
add
mov
push
mov
push
test
sub
fbld
cmp
xor
sub
sahf
lds
mov
and
(bad)
ins
mov
outs
cwde
inc
jnp
xor
jp
fsub
xor
lahf
and
cld
lods
adc
out
retf
lock
mov
mov
mov
mov
outs
loop
cs
push
dec
mov
fcomp
mov
jl
xchg
movs
sub
and
ds
repz
test
or
cmp
push
add
fadd
outs
xchg
xor
test
jle
arpl
into
les
xor
sbb
das
inc
push
clc
push
lods
(bad)
hlt
mov
xchg
xor
pushf
loopne
outs
dec
sub
push
pop
sbb
sub
mov
adc
dec
add
xor
je
into
aas
outs
mov
sti
jecxz
outs
retf
arpl
inc
jns
pop
adc
cmp
aad
cmc
scas
lea
push
dec
ficom
stos
out
xchg
push
push
cmp
cmp
iret
fisub
dec
ror
imul
pop
in
ins
pushf
movs
fsubrp
test
call
out
mov
and
js
test
scas
ds
push
push
std
aas
repnz
dec
inc
cs
mov
cs
push
jp
pusha
shl
ffree
js
jmp
or
ins
in
into
cwde
cs
fidivr
repnz
loope
ficomp
leave
jg
mov
(bad)
lods
cs
pop
popf
xlat
daa
sub
or
pop
enter
cs
outs
pop
sbb
cmps
rol
(bad)
les
sub
enter
sub
sbb
aas
pop
push
cdq
dec
push
mov
ret
push
dec
aas
sub
dec
sub
aaa
pusha
fnsave
add
scas
aad
stos
xchg
or
das
leave
fistp
add
iret
pop
jmp
push
shr
and
push
and
(bad)
pop
or
mov
je
(bad)
sbb
pop
sbb
mov
retf
hlt
dec
call
or
jns
cs
enter
js
ds
xchg
fidiv
cdq
sub
scas
push
push
dec
loopne
inc
sub
pop
cmc
jo
scas
mov
inc
xchg
mov
mov
out
cs
mov
adc
call
cs
fisub
cs
xor
pop
dec
or
mov
cs
call
jne
dec
popf
retf
mov
cmp
aad
pop
leave
mov
push
sti
or
jae
jle
aad
cs
push
cs
xchg
ins
icebp
dec
xchg
pop
out
aam
pop
add
shl
call
cwde
cli
mov
push
sbb
or
add
add
mov
popf
mov
imul
mov
cs
shl
iret
sbb
mov
xor
mov
cs
or
adc
repz
stos
cmps
and
loop
adc
mov
cli
ins
(bad)
push
xlat
aad
je
mov
mov
sub
movq
push
dec
pop
pop
dec
popa
iret
xor
fdivp
fidivr
daa
daa
out
fisub
ds
cmp
fcmovnu
mov
outs
stos
rcl
in
ds
pop
stc
cs
shl
scas
cdq
mov
(bad)
ret
test
stos
mov
cld
in
jmp
lock
cs
sbb
push
xor
cs
push
mov
add
aad
rol
cmp
push
fnstsw
adc
das
lock
and
sbb
das
xor
cmp
cmp
pop
xchg
cs
xor
leave
fcom
out
xchg
jne
arpl
lods
inc
jnp
xchg
mov
idiv
nop
dec
jbe
cmps
ficomp
das
ds
mov
add
dec
pop
mov
xlat
std
fcom
mov
sub
int3
enter
scas
das
nop
adc
push
daa
aam
mov
lock
(bad)
cmps
mov
dec
xchg
push
out
cmps
inc
(bad)
sbb
push
ja
jl
in
repnz
cmp
push
sub
and
dec
fadd
push
dec
push
xchg
fdiv
fnsetpm(287
push
mov
movntps
(bad)
gs
fs
sbb
jle
cmp
sbb
pushf
inc
mov
lock
mov
js
push
jmp
add
sti
mov
fsub
(bad)
leave
inc
test
test
mov
xchg
(bad)
fadd
cdq
xchg
inc
cwde
shl
fnstsw
das
movs
xor
pop
in
pusha
sub
push
es
popf
test
jb
push
mov
leave
cld
scas
add
sub
cdq
into
mov
mov
leave
pop
(bad)
jp
scas
cmps
add
iret
dec
arpl
enter
mov
mov
in
scas
in
ja
out
xlat
jle
loope
jno
sbb
daa
pop
mov
add
leave
mov
mov
mov
sbb
mov
push
adc
jbe
sbb
push
push
add
js
pop
sub
and
xchg
(bad)
outs
adc
xor
cmp
pop
stos
and
sahf
std
dec
cs
sbb
push
fs
cs
and
ins
xor
fidiv
cmp
mov
sahf
rcl
or
in
jle
mov
jge
out
cmps
push
xlat
xchg
pop
xor
iret
mov
out
(bad)
movs
mov
fimul
xor
push
xchg
fcomp
into
jp
mov
dec
mov
aas
sub
pop
fisttp
into
cld
push
push
dec
aas
ret
(bad)
xor
mov
imul
or
pop
sbb
cmps
adc
or
test
dec
dec
cmp
adc
enter
retf
sbb
gs
sub
and
test
sub
mov
pop
jl
dec
pop
pop
je
cmps
ret
(bad)
xchg
cmps
icebp
cs
and
enter
mov
and
ret
aaa
mov
pop
add
push
(bad)
add
dec
cs
lods
cs
imul
shl
adc
ins
scas
int
fs
aam
pop
cs
rcl
or
scas
into
mov
pop
mov
stos
mov
cs
xchg
mov
or
sbb
mov
inc
popf
fcom
cmps
stos
lds
mov
sbb
xor
ret
cmp
aas
das
in
sub
or
cs
mov
mov
clc
dec
and
aas
cli
or
sub
imul
out
mov
fcmove
lea
int3
loop
hlt
pop
or
gs
dec
sub
pop
pop
in
cs
sbb
inc
push
mov
or
push
mov
rcr
cs
and
shr
imul
les
rcr
xor
(bad)
xchg
mov
xchg
scas
cs
xor
sbb
jbe
std
bound
call
or
lock
sub
dec
push
sbb
dec
adc
movs
or
cmp
cmps
pusha
(bad)
xor
leave
sbb
dec
lods
mov
xchg
mul
(bad)
imul
sbb
cmps
retf
sti
shl
inc
popa
js
pop
out
stos
xor
push
xor
push
mov
push
add
outs
inc
and
jnp
xor
dec
adc
pusha
xchg
mov
inc
mov
and
add
jmp
cs
out
mov
lock
mov
(bad)
push
and
push
lds
call
call
mov
cwde
fwait
(bad)
cmp
xchg
inc
dec
dec
div
dec
fisub
ds
addr16
int3
jge
imul
rcr
push
stos
add
or
dec
pushf
push
sub
add
icebp
add
scas
fild
adc
xchg
and
daa
jnp
(bad)
xor
repz
push
add
xor
aas
imul
sbb
scas
les
call
(bad)
and
pusha
xchg
mov
xchg
inc
leave
jb
mov
sbb
addr16
rol
lock
jecxz
lods
sub
mov
jg
or
call
leave
pop
retf
fsub
shr
stos
addr16
dec
or
shr
xchg
mov
iret
sti
inc
sbb
fidiv
sbb
add
jl
mov
xor
aas
cmp
push
(bad)
stc
xor
pop
push
out
cmp
mov
ficomp
jmp
(bad)
mov
sbb
jmp
adc
sub
dec
inc
jns
xor
sub
xor
xlat
xabort
sub
cmps
loopne
adc
adc
add
pop
pop
sub
and
mov
(bad)
mov
inc
adc
cld
ret
lods
jne
mov
jmp
jnp
je
cmp
ds
jbe
or
and
mov
jb
push
and
in
mov
leave
xor
push
cmc
dec
xor
and
adc
push
mov
imul
xchg
stos
xor
jns
aaa
xlat
out
adc
push
cwde
cmps
inc
mov
add
ror
and
out
div
in
leave
pop
mov
fsubp
call
aaa
or
mov
mov
shr
sub
into
xlat
(bad)
lahf
and
das
js
add
inc
push
ret
sti
xchg
lock
data16
push
ds
cmc
mov
imul
inc
movs
xchg
push
outs
sub
inc
cmp
cmp
pop
xor
sar
pop
xchg
scas
sub
sbb
imul
push
cwde
mov
and
ins
xor
inc
dec
xchg
sub
sub
mov
mov
das
sbb
and
aaa
lea
push
inc
xchg
push
lods
pop
in
shr
(bad)
cmps
js
call
cmp
mov
cmp
lahf
ficom
imul
mov
fdivr
test
push
sar
mov
mov
fdiv
test
inc
cmp
ja
fisttp
mov
jp
jbe
sbb
imul
inc
sub
sub
and
mov
and
scas
gs
pop
adc
xchg
(bad)
jmp
mov
(bad)
cli
pop
loope
movs
cs
mov
mov
add
mov
cs
inc
jne
jae
cmp
mov
into
jno
out
cs
inc
rcr
add
dec
mov
pop
jle
mov
jae
int3
rol
imul
mov
cli
or
xchg
sub
cmps
std
mov
cs
(bad)
mov
cmc
gs
xor
mov
jmp
jmp
xchg
or
mov
sahf
mov
sub
cmps
int3
and
sahf
scas
dec
sahf
cs
fwait
sub
(bad)
(bad)
cs
mov
mov
scas
stos
xchg
xchg
test
pavgw
sub
shr
test
call
cdq
jnp
xor
sbb
mov
rcr
xchg
movs
test
add
or
neg
cmc
cs
mov
test
test
cs
jb
aaa
sub
or
mov
xchg
fild
mov
retf
push
push
mov
jno
pushf
out
xor
dec
into
sbb
cmp
cs
loopne
ins
cs
push
and
jnp
lahf
cli
ficom
mov
or
retf
jp
shl
call
js
add
or
pop
out
mov
add
or
mov
je
sahf
and
imul
xchg
int
pop
stc
aad
scas
fdiv
rol
popf
cs
fidiv
out
adc
lds
dec
pop
mov
inc
(bad)
lahf
mov
outs
out
sahf
pop
jb
outs
daa
in
mov
in
cs
sub
jecxz
les
std
das
mov
add
sub
adc
or
outs
inc
xchg
sti
scas
outs
mov
jns
popa
mov
push
xor
pop
in
and
mov
cs
inc
mov
sub
retf
cmc
xor
int3
js
mov
aas
mov
retf
loopne
jmp
adc
scas
pop
pushf
pop
mov
xor
icebp
cmp
cwde
(bad)
fld
mov
shr
stos
inc
adc
cdq
loopne
cs
mov
adc
test
or
xor
aas
repz
mov
fstp
scas
sbb
mov
(bad)
outs
cmps
sahf
cmp
or
add
xor
nop
xchg
ficomp
jmp
cmp
ds
stos
and
jbe
xor
mov
add
sub
je
push
sub
and
cmps
xor
sub
retf
mov
loop
and
test
dec
inc
ins
push
mov
mov
add
and
shr
pop
(bad)
sub
mov
leave
mov
pop
aam
push
popa
cmps
fild
test
addr16
test
nop
jno
sub
jne
inc
jne
test
test
add
push
movs
cmps
in
call
and
dec
aam
dec
ja
out
pop
push
sub
mov
push
paddd
pop
fsubr
and
mov
scas
(bad)
jl
push
inc
iret
lea
aas
mov
mov
outs
fnsetpm(287
sub
fwait
cmp
cli
pop
push
inc
mov
(bad)
mov
sub
cmps
popa
leave
or
bound
cmp
pop
shl
sub
jo
loope
aam
ss
cmp
popf
loopne
mov
push
dec
xchg
push
bnd
test
hlt
mov
mov
and
shl
inc
mul
jne
in
movs
out
xor
ret
test
and
scas
adc
aaa
mov
aas
movs
add
lods
icebp
out
cmp
xchg
xchg
mov
xor
retf
gs
sub
fsubr
mov
cmp
cwde
xchg
aaa
leave
arpl
clc
popf
and
cmp
xchg
sahf
and
sub
xor
mov
sub
jmp
mov
sub
dec
mov
cmp
xchg
outs
fwait
not
in
pop
adc
push
in
add
outs
mov
push
push
ja
(bad)
test
mov
adc
aad
inc
in
lahf
and
fdiv
sbb
js
jo
imul
dec
cli
retf
push
xor
and
sub
test
mov
push
outs
retf
jecxz
jo
sbb
ret
movs
stc
into
cmp
shr
imul
psrlq
cmp
xor
and
xor
pop
jb
add
push
xor
pop
or
test
dec
dec
cli
sar
in
(bad)
popf
xchg
daa
loope
pop
(bad)
test
push
pop
push
dec
shl
rcl
push
clc
xor
add
pop
shr
scas
gs
sub
xor
retf
dec
inc
sbb
jne
das
cmp
cs
(bad)
dec
mov
jg
cwde
xor
rol
das
xchg
push
out
cs
sub
and
mov
xor
popf
pop
inc
popa
movs
out
dec
sub
and
cmc
int
xchg
(bad)
and
add
mov
fdivr
into
imul
cs
sbb
js
inc
daa
sbb
xchg
xchg
mov
mov
xchg
into
cs
int
in
scas
in
cs
mov
(bad)
cs
inc
pop
ret
push
push
lea
jg
or
add
daa
push
(bad)
gs
scas
ins
jnp
pusha
cs
mov
pop
and
fdiv
pop
cs
lds
xchg
mov
jmp
cmp
bound
mov
lahf
cmp
cs
pop
dec
(bad)
aaa
mov
iret
in
mov
mov
repnz
sub
imul
adc
mov
and
mov
sub
daa
push
pop
sub
dec
adc
stos
push
pop
lods
scas
adc
mov
stos
xchg
xlat
adc
and
test
arpl
add
xchg
mov
stos
cs
jnp
cmp
jmp
int
cs
stos
clc
jecxz
test
lahf
mov
ficomp
mov
cs
jl
pop
cmp
jmp
add
mov
or
cli
dec
xor
push
and
and
stc
mov
out
clc
mov
xchg
ins
xchg
inc
mov
xchg
cli
cs
mov
xor
mov
push
dec
jns
(bad)
xchg
xchg
(bad)
jbe
jle
inc
clc
call
bound
adc
or
faddp
cld
ror
sub
inc
fst
aam
cs
add
xchg
ins
(bad)
jl
nop
mov
jmp
cmp
sbb
xor
cmps
mov
pop
and
xor
(bad)
scas
stos
jl
mov
int3
(bad)
cs
popf
clc
aaa
cs
pop
scas
inc
pop
test
inc
jbe
xor
retf
jb
xchg
xor
push
adc
test
int
cmc
jge
div
pop
shl
add
jg
sub
out
mov
mov
sar
outs
mov
cs
xlat
rcl
aas
mov
(bad)
push
push
inc
cmp
mov
loopne
adc
cmps
ret
mov
movs
fldcw
and
mov
mul
rol
(bad)
jmp
mov
(bad)
fimul
enter
dec
call
fnsave
add
push
std
mov
cs
mov
mul
mov
xor
push
push
sar
push
out
and
(bad)
push
fidivr
jmp
std
pop
imul
jecxz
mov
(bad)
jae
xchg
lahf
or
jle
lock
test
dec
and
(bad)
cs
popa
cmps
scas
ins
call
das
dec
xchg
xor
pop
or
pop
(bad)
mov
jnp
dec
mov
dec
mov
push
cs
aad
adc
cs
cdq
inc
mov
xor
jmp
loop
dec
cs
sbb
pop
sbb
(bad)
jno
add
jg
xchg
pop
mov
(bad)
comiss
outs
xor
jmp
fcomp
movq
xchg
pop
aas
fdivr
xchg
(bad)
mov
into
daa
jge
movd
pop
aam
movs
cs
jmp
scas
jno
cmp
jne
sbb
inc
jge
popa
sbb
inc
or
xor
(bad)
nop
fld
jne
mov
add
and
push
lahf
jmp
and
push
dec
std
mov
repnz
pop
mov
add
jle
push
sbb
cmp
mov
es
mov
sbb
xor
fisubr
cmc
sar
daa
jb
es
leave
push
dec
fimul
mov
inc
mov
or
mov
ins
mov
xor
fistp
stos
sti
push
pop
sub
bound
xor
daa
hlt
xchg
dec
lods
rol
cmp
sub
imul
leave
scas
cmp
pop
xor
call
xchg
mov
mov
cs
femms
xor
repnz
lods
(bad)
imul
ins
sub
das
sar
hlt
rcr
jae
and
xchg
stos
cwde
outs
les
jg
jg
mov
jno
iret
xor
xchg
sub
jle
or
dec
imul
fld
inc
aam
sub
add
fcmovb
and
sar
sahf
push
lahf
retf
and
std
(bad)
jp
xchg
cld
ja
sub
mov
mov
cwde
jecxz
ins
inc
pop
test
dec
inc
and
mov
out
sub
call
xchg
push
jmp
jge
lods
sub
leave
mov
xchg
cdq
push
cs
(bad)
lahf
rcr
mov
leave
hlt
lgs
mov
push
cmps
mov
jne
pop
jmp
(bad)
test
pop
and
push
or
or
mov
xchg
shr
cmp
bound
pop
(bad)
sub
jo
js
cli
mov
sub
xor
out
fldenv
sub
sbb
push
jbe
sub
aam
pop
cs
cmp
sub
(bad)
cs
arpl
xchg
mov
mov
addr16
push
and
pop
cmp
mov
es
daa
push
(bad)
lahf
fwait
dec
out
out
ds
adc
sub
repnz
pusha
mov
loope
push
scas
mov
lock
daa
sub
sbb
into
(bad)
lds
cs
push
xchg
stos
lods
mov
mov
(bad)
add
mov
fs
bound
jne
mov
xor
jmp
nop
mov
loopne
arpl
jmp
mov
loop
shr
cwde
sub
cs
into
cmp
outs
jp
scas
push
in
add
imul
xchg
movs
fiadd
xor
mov
loop
into
cwde
fisub
xchg
js
stc
pop
xor
cmp
das
and
push
outs
adc
xchg
sbb
xor
inc
into
fsubr
mov
(bad)
out
fimul
out
jbe
add
and
js
cmp
imul
cmp
fmulp
mov
add
rcr
lahf
dec
mov
mov
(bad)
adc
sbb
pusha
add
inc
adc
fstp
das
pshufw
pop
sti
sar
outs
stos
xchg
test
arpl
ud2
sti
sbb
inc
adc
pusha
lds
xor
ret
xchg
(bad)
jo
std
cs
cli
enter
or
dec
int3
mov
cwde
icebp
movs
cmps
ficomp
xor
nop
mov
js
enter
mov
call
xor
into
sar
push
daa
sub
push
in
mov
push
mov
scas
out
sbb
dec
push
arpl
jne
fcmove
sti
push
gs
out
mov
xchg
and
xor
ret
ret
lods
js
popf
cmps
push
dec
ins
ds
(bad)
in
ficomp
das
push
mov
sub
pop
lahf
mov
imul
jnp
and
adc
xor
fmul
bound
cmp
add
mov
movs
cmc
adc
(bad)
dec
push
ret
movs
sbb
je
fdivr
or
aam
xor
aaa
not
movs
sub
(bad)
outs
js
jnp
retf
pop
pop
push
repnz
(bad)
fcmovnb
nop
jmp
dec
lods
dec
mov
dec
scas
imul
mov
pop
jo
mov
xchg
mov
outs
rol
bound
aam
cmc
cmps
xchg
xchg
push
pop
stc
enter
aaa
adc
mov
mov
push
popa
cmp
mov
mov
sbb
push
aas
jl
and
jno
add
out
pop
jns
sar
cwde
fwait
lea
xchg
fucomi
sbb
retf
cs
ror
or
bnd
(bad)
sbb
push
movs
inc
and
mov
cmp
jbe
pop
xor
gs
cmc
das
sub
dec
add
out
cs
push
sbb
xchg
(bad)
pop
push
fndisi(8087
xor
imul
xor
sbb
add
mov
adc
les
mov
in
ins
jno
cmps
pop
in
das
mov
push
ja
and
scas
vucomisd
ins
xchg
jg
pushf
fdivr
idiv
mov
test
cmovns
test
xor
neg
cs
push
cmps
or
mov
lods
jmp
daa
outs
sub
cmp
mov
cmp
cs
mov
retf
xchg
and
xchg
(bad)
xlat
into
adc
ds
jb
adc
arpl
adc
aam
iret
inc
or
test
cmp
and
cmp
push
loopne
mov
adc
pushf
das
rol
mov
push
add
jae
sti
cld
cs
ficomp
jno
sub
cs
adc
ror
fisttp
or
xlat
(bad)
enter
out
adc
sbb
cs
sbb
int3
lahf
mov
cli
or
popa
push
mov
lods
jle
sub
loopne
popf
aam
push
(bad)
lock
jl
push
lock
out
adc
popa
xchg
push
add
dec
sti
es
xor
jno
stos
and
leave
cmpps
and
pop
mov
repnz
xor
in
lods
xchg
push
mov
mov
out
(bad)
test
push
dec
add
push
cld
mov
pop
addr16
scas
js
or
mov
aaa
outs
mov
sub
cmp
cmp
dec
jo
test
jnp
dec
xchg
mov
sub
outs
(bad)
stc
rol
dec
cmc
cmp
(bad)
fdiv
xchg
imul
fadd
adc
shl
(bad)
and
outs
and
and
mov
mov
sbb
jne
(bad)
sti
jl
adc
mov
aas
mov
pop
push
adc
test
add
inc
xchg
push
mov
jae
cmps
jp
add
mov
outs
ja
nop
mov
pop
and
aam
dec
(bad)
dec
stos
xor
lods
ds
lea
dec
and
das
or
out
push
jge
mov
pop
das
retf
retf
and
mov
jns
sbb
aad
dec
jmp
or
adc
add
shl
dec
xor
fwait
sub
imul
(bad)
je
movs
jae
loopne
mov
rol
imul
sbb
retf
cld
in
sbb
mov
out
ja
mov
jg
cli
jle
mov
sti
xchg
fidivr
repnz
jmp
and
mov
cld
mov
js
sbb
xchg
add
rcr
adc
fild
sbb
dec
icebp
in
xchg
xchg
ja
sahf
mul
jae
frstor
sub
ficom
int
mov
fisttp
div
dec
sub
mov
call
jno
int
mov
les
cmp
cmp
mov
xchg
mov
sub
scas
ror
push
mov
je
in
(bad)
lods
js
popa
bound
inc
sub
mov
fist
sbb
mov
les
or
arpl
cld
js
fcmovnb
out
iret
push
nop
pop
lea
icebp
add
mov
sub
mov
inc
mov
pop
and
ss
scas
xchg
in
cmps
mov
out
pop
inc
add
cmp
cmp
or
sar
and
mov
in
cs
leave
lea
sub
loopne
aas
test
aaa
mov
enter
test
(bad)
out
add
call
stos
mov
push
mov
push
sar
jmp
out
push
stc
xor
inc
ins
daa
in
ins
clc
jecxz
pop
add
inc
sub
sub
jne
push
(bad)
ffree
mov
cmp
ds
stc
xchg
fidivr
int
inc
mov
xlat
jmp
add
scas
je
mov
jecxz
pop
hlt
dec
test
int
push
psubusw
sbb
mov
cwde
push
cmc
and
popf
shl
or
sar
sub
adc
call
dec
and
adc
ins
jl
dec
adc
push
cmps
hlt
cmc
push
pop
sti
sub
es
jl
daa
mov
mov
retf
add
push
outs
push
jmp
mov
mov
pop
pop
inc
fiadd
push
scas
rcr
and
sub
int3
inc
xchg
dec
movs
out
lds
cld
mov
push
or
fwait
clc
out
cli
loop
and
sbb
inc
(bad)
pusha
pop
fstp
loope
and
mov
inc
stc
or
jo
out
cs
ret
and
mov
test
iret
outs
and
std
mov
lahf
pop
pop
add
in
pop
sbb
aaa
push
cs
das
fidiv
push
pop
imul
popa
test
xchg
nop
mov
hlt
fld
jnp
imul
xchg
ss
adc
and
xor
fbld
pop
xchg
mov
mov
mov
(bad)
out
sar
and
outs
xor
retf
arpl
jne
pop
jnp
jno
add
pop
scas
sub
in
jns
adc
add
aaa
pushf
out
mov
mov
cs
mov
(bad)
aas
jp
jnp
jns
mov
push
cs
jbe
mov
jns
cs
inc
int3
scas
dec
ds
inc
scas
sbb
add
dec
into
mov
fcmovne
(bad)
clc
sar
scas
mov
mov
add
push
lds
test
sub
shl
lock
(bad)
icebp
add
popf
cmps
fldenv
mov
and
and
mov
scas
lea
xor
mul
int3
into
cs
dec
shl
shl
xchg
add
lea
inc
dec
mov
dec
das
xor
scas
sub
scas
call
(bad)
in
neg
inc
push
xchg
sub
xchg
xchg
sub
pop
cmc
lock
adc
add
call
mov
cli
lods
xor
adc
cs
int3
iret
in
shl
(bad)
mov
leave
xchg
mov
inc
xor
mov
dec
add
and
add
xchg
popf
ja
shl
and
(bad)
fcomp
fwait
cs
xchg
scas
clc
cmp
sti
sbb
pop
pusha
xor
jnp
aas
outs
sbb
ins
cs
test
cs
rol
xor
ins
mov
or
iret
mov
rcl
add
add
fimul
dec
shl
stc
es
pop
jb
adc
leave
sbb
pop
fs
or
ret
ror
aas
(bad)
in
cwde
ds
jno
mov
sub
jge
loop
scas
dec
sbb
movs
bound
nop
or
mov
loop
lods
js
fisttp
ins
jns
sub
pop
sub
icebp
jmp
mov
mov
and
call
or
and
xlat
dec
xor
sub
fdivr
push
pop
mov
es
xchg
mov
or
popa
mov
in
mov
leave
pop
and
pushf
adc
inc
dec
retf
ret
xor
sub
xchg
or
fcom
test
das
mov
or
outs
cmp
in
jl
enter
pop
mov
pop
enter
and
leave
mov
adc
mov
jno
cmps
xchg
aam
stc
test
xchg
mov
sbb
inc
push
jge
aaa
inc
sub
lahf
dec
push
mov
aas
xor
es
sbb
daa
inc
jge
pop
cmp
mov
xor
adc
icebp
mov
loope
mov
je
push
test
xor
movs
dec
push
daa
jmp
mov
dec
sahf
mov
xchg
push
push
push
mov
xchg
pop
cmps
cwde
mov
nop
inc
mov
mov
shl
dec
mov
push
or
mov
pop
(bad)
jno
push
cs
pop
and
push
xchg
movs
mov
enter
bound
mov
aam
daa
jmp
outs
xchg
xchg
retf
repz
inc
jb
js
cs
dec
sub
test
sub
repnz
sub
mov
sub
xor
(bad)
out
test
gs
test
mov
shl
repz
std
dec
sbb
pop
push
mov
(bad)
jmp
stc
jno
inc
test
fst
mov
jle
cs
jp
sbb
nop
cs
push
mov
inc
cs
inc
stos
fwait
sbb
cmps
std
lods
add
cs
push
pop
sbb
aad
mov
mov
inc
movs
sub
sub
cs
jno
out
shr
xchg
jbe
pop
and
jl
jo
mov
aam
cs
mov
fsubr
mov
dec
xor
daa
or
or
lods
jle
mov
enter
sub
fiadd
pop
les
mov
daa
xchg
dec
sub
inc
mov
jbe
nop
jmp
popf
scas
popa
adc
push
inc
and
scas
pop
jle
push
in
jne
sbb
sahf
xchg
test
mov
daa
mov
sahf
lahf
mov
aas
lods
sahf
shr
cmp
cs
retf
stc
imul
cs
lods
xor
sbb
mov
push
fucomip
inc
add
jmp
stc
mov
je
out
sbb
cmp
das
fs
inc
stos
jl
daa
add
mov
in
add
push
(bad)
dec
cmp
fadd
cmp
sub
adc
add
outs
lea
mov
xchg
rol
jbe
mov
mov
cmp
dec
pusha
ins
and
adc
aam
sbb
xchg
xchg
retf
out
icebp
sbb
(bad)
sbb
inc
js
out
leave
mov
movs
ins
test
bound
jle
jp
xchg
in
cs
xchg
xor
push
and
adc
and
pop
push
out
pushf
cs
dec
fcmovu
sub
cmp
sbb
xlat
retf
aad
(bad)
cmps
std
das
scas
mov
mov
mov
xchg
fmul
add
push
icebp
je
cs
cmps
outs
jmp
mov
ja
hlt
not
in
cs
cmp
sbb
and
and
fwait
cs
(bad)
and
fdiv
cmp
int
aad
or
inc
sub
jmp
or
in
pop
push
sbb
xchg
movzx
jmp
or
pop
clc
mov
mul
and
mov
lahf
pushf
cs
sar
add
(bad)
bound
retf
sub
pop
push
scas
cmp
mov
sub
loop
cmp
jl
lahf
jbe
push
sar
call
jg
push
xchg
mov
pop
push
jl
sub
imul
sbb
and
mov
hlt
sahf
into
mov
mov
ds
iret
movs
shr
loopne
xor
rcr
in
cs
add
pop
call
adc
test
push
jo
daa
sbb
in
mov
mov
mov
loop
icebp
ins
ss
scas
out
xor
jns
push
cmps
mov
les
dec
sub
(bad)
(bad)
cs
loope
adc
add
or
dec
push
outs
pop
dec
repnz
fst
push
push
sbb
dec
ror
bound
sbb
leave
stc
xor
push
add
push
shl
retf
mov
jbe
xor
faddp
and
addr16
(bad)
(bad)
stos
dec
push
add
in
leave
hlt
gs
gs
add
lock
jns
cs
stos
in
adc
push
sbb
pusha
dec
mov
push
pop
data16
gs
stos
popf
xchg
in
xchg
scas
cdq
push
inc
xor
ret
add
push
(bad)
sub
push
sub
gs
ss
lea
je
adc
inc
xchg
and
pop
stc
retf
or
cli
sahf
xchg
repz
xor
inc
les
jnp
(bad)
call
jae
mov
xchg
mov
sub
jge
int
cmp
mov
ror
jp
mov
add
cwde
aaa
dec
jl
or
xor
cs
jmp
mov
mov
jmp
imul
ins
je
sub
jg
xor
hlt
(bad)
push
fwait
les
pop
test
cs
or
aaa
sub
scas
in
fist
test
cmp
sub
mov
outs
nop
dec
out
jge
adc
cs
iret
cwde
jl
fidivr
cs
or
cmc
movs
rol
jb
(bad)
iret
imul
xor
pop
repz
loop
scas
jmp
xchg
mov
rcl
pop
pop
daa
inc
push
ret
aas
test
add
push
cmp
cmp
into
call
in
movs
or
std
lods
dec
push
(bad)
mov
dec
out
xchg
push
cs
adc
sbb
pop
bsr
imul
movs
jmp
daa
push
mov
or
shr
jnp
or
xor
aaa
sahf
dec
push
or
std
cmp
nop
outs
(bad)
in
adc
loopne
and
xor
daa
je
daa
dec
js
and
stos
movs
pop
mov
xor
xor
jae
fsubr
arpl
repnz
lock
test
out
(bad)
mov
mov
outs
pop
cs
pushf
ins
lahf
dec
cs
and
rcl
int
leave
xchg
cs
cmp
rcl
cs
xchg
popfw
push
das
(bad)
xor
in
adc
sbb
xchg
daa
mov
inc
daa
and
push
and
dec
popw
into
sub
mov
or
sub
inc
xor
pop
xor
(bad)
jno
mov
ins
leave
inc
sbb
sar
stos
ret
add
jle
push
lods
int3
icebp
push
cmp
mov
cmp
mov
aad
or
imul
aam
jnp
(bad)
sub
rcl
aam
daa
dec
pop
icebp
jmp
retf
test
xor
test
or
xor
jle
shr
aaa
shl
push
jb
xor
lods
jp
imul
and
test
mov
addr16
add
jl
cwde
int3
push
fdiv
push
xor
adc
dec
cmp
lea
mov
adc
cmc
jae
test
mov
fnstcw
arpl
sbb
xchg
adc
lahf
into
repnz
lock
or
push
xlat
cld
repz
das
jne
jecxz
(bad)
stos
cld
inc
jno
adc
inc
in
mov
ins
push
jecxz
mov
fsubp
je
mov
retf
pop
sbb
retf
mov
adc
mov
add
add
rol
daa
and
test
cs
add
adc
mov
in
jns
inc
enter
xchg
adc
or
mov
mov
push
pop
outs
ret
mov
addr16
cs
in
shl
cs
retf
test
cmp
cs
cwde
enter
call
pop
xor
shr
jecxz
lahf
icebp
mov
daa
imul
xor
cdq
in
out
fisttp
ins
and
loopne
sub
adc
lds
adc
mov
das
cs
and
mov
fwait
repnz
and
(bad)
(bad)
fwait
cs
loopne
mov
push
dec
and
imul
xchg
cmp
dec
pmuludq
inc
mov
jo
ror
xor
fs
sub
jg
and
adc
and
xor
bound
cs
call
inc
cmp
popf
cs
adc
sbb
cs
xor
inc
adc
jns
xchg
out
jb
cs
cdq
ja
pushf
ret
arpl
and
xchg
sbb
jp
punpcklbw
or
jne
repz
popa
pop
cs
pop
loop
fstp
popf
xor
jno
call
inc
xor
sbb
addr16
adc
xor
push
pushf
test
dec
mov
popa
sub
sbb
push
push
or
inc
rcl
leave
jne
push
sti
or
fst
fcmove
adc
leave
or
imul
mov
leave
xor
mov
jmp
aam
push
push
and
ret
add
aad
xor
inc
call
sub
jns
fwait
push
mov
sub
and
pop
leave
adc
push
inc
(bad)
pop
jg
data16
inc
mov
sub
pop
and
mov
mov
mov
xor
test
jo
sub
mov
popa
or
inc
pusha
lods
sub
jb
mov
es
cs
js
cmc
fwait
xlat
cs
dec
pop
ins
cmp
push
jl
mov
movs
xchg
cmp
pop
push
scas
bound
pop
icebp
cs
jbe
adc
dec
sahf
rcl
and
xor
aas
and
cwde
inc
and
or
retf
push
or
(bad)
repnz
cs
pop
scas
je
test
cs
outs
dec
push
push
ret
cmp
cs
pop
jl
sub
test
xchg
in
push
das
aas
add
out
out
sti
jb
mov
push
js
jg
xchg
xor
test
jb
mov
cs
hlt
lahf
adc
mov
adc
cmc
mov
retf
scas
lock
pop
sub
sbb
inc
lods
inc
arpl
cs
mov
jmp
sub
sub
fist
in
fwait
mov
inc
jbe
out
and
sbb
aas
xchg
inc
push
cs
repz
sub
clc
xchg
inc
push
popf
cs
mov
or
rcr
out
test
push
push
mov
jmp
inc
test
cs
cmp
cs
lods
shl
cs
sub
adc
in
out
clc
fwait
bound
inc
movs
out
mov
es
(bad)
outs
mov
shr
daa
inc
and
stc
scas
push
dec
ss
add
out
std
outs
mov
scas
ja
loopne
adc
cs
not
sti
adc
xchg
ret
mov
and
and
loop
jo
in
mov
arpl
xchg
cs
imul
sbb
mov
sub
out
cmp
and
xor
cmp
int3
cmp
pop
dec
call
pop
cs
jne
out
fist
cmp
bound
ds
push
sbb
xor
pop
inc
inc
(bad)
shr
cmp
jne
inc
push
rol
sub
inc
out
inc
dec
repnz
sub
psraw
aad
mov
dec
mov
shl
mov
adc
not
shl
inc
push
mul
aaa
out
stos
enter
int3
sub
and
cmp
jmp
shl
stos
ss
fs
mov
inc
pop
ret
or
(bad)
leave
or
jne
in
xor
add
es
pop
nop
sub
cld
icebp
lahf
push
das
ja
and
sbb
add
jle
fmul
push
repnz
leave
ss
and
push
dec
lods
imul
fimul
sub
popf
or
jmp
into
dec
cmp
stos
in
mov
mov
in
fcom
sbb
lea
jae
pop
shl
inc
retf
xchg
jle
imul
xchg
mov
call
adc
or
fwait
xor
jmp
sub
lahf
div
es
shr
movs
scas
pop
imul
jo
mov
shl
sub
push
mov
hlt
add
xlat
cld
adc
aad
(bad)
sti
stos
jo
and
fild
cmp
daa
sub
xor
bound
mov
mov
xlat
scas
mov
enter
dec
jne
jle
xchg
and
cs
and
pop
xchg
cs
mov
add
jge
daa
(bad)
inc
int3
stos
dec
mov
hlt
jecxz
enter
cld
inc
add
aas
shr
mov
enter
sub
fiadd
out
idiv
loopne
cmps
jne
push
adc
out
stos
sub
push
in
jo
xor
cmp
xchg
sbb
dec
cs
adc
gs
ds
cld
std
loopne
xchg
xor
pop
mov
daa
pop
pop
push
sbb
repz
push
inc
jge
pop
fcomp
(bad)
mov
stos
pusha
push
icebp
lea
pop
outs
in
ret
mov
mov
test
movs
or
sub
je
int
jnp
cs
out
xor
les
repnz
adc
xor
jo
cs
jb
pop
mov
mov
pop
inc
cs
mov
ins
mov
xor
repz
pop
dec
sub
outs
aas
ret
fwait
mov
sub
cmp
mov
mov
pop
fisub
les
repz
sub
aas
leave
popf
imul
jb
imul
inc
push
std
or
push
cmps
or
mov
imul
mov
(bad)
xchg
mov
mov
or
push
inc
xor
stos
bound
mov
ret
push
shl
mov
sbb
mov
fmul
mov
adc
out
loop
mov
frstor
add
cmp
daa
in
dec
add
mov
cmp
sub
pop
push
mov
scas
lahf
movsx
jecxz
mov
pop
dec
mov
cmps
cs
std
mov
test
(bad)
mov
dec
movs
pop
hlt
js
cmp
iret
dec
ret
into
das
cmp
(bad)
xchg
(bad)
imul
stos
sub
mov
clc
(bad)
xor
fwait
shl
test
aaa
stos
(bad)
push
sub
and
out
adc
cdq
sub
mov
or
pop
(bad)
js
cs
neg
jg
cld
shr
dec
push
ja
cmps
jge
add
xchg
jle
xor
stc
outs
jnp
pop
mov
cmc
cmp
inc
nop
pop
xchg
stos
sbb
sbb
mov
cli
fimul
jmp
cs
push
cmp
sbb
out
test
jg
into
sub
repnz
dec
push
xlat
ins
add
mov
mov
(bad)
jb
inc
or
xchg
or
xchg
mov
pop
loop
add
push
cs
inc
add
aam
outs
outs
fisttp
jno
lock
sub
and
hlt
jo
outs
pop
ror
xor
outs
push
jp
sub
push
rcr
repnz
xor
test
int3
jp
into
stos
xchg
loop
mov
fld
sub
sahf
sbb
sar
push
int
pop
out
cs
xchg
das
xchg
in
push
shr
cmp
push
scas
cs
mov
sbb
cs
loop
outs
mov
lds
(bad)
popa
hlt
shr
int
cs
and
or
out
scas
fistp
(bad)
pop
xlat
shr
jmp
add
mov
xor
cli
ja
or
mov
cs
xor
cmp
mov
test
and
retf
(bad)
faddp
psubsb
mov
shl
cs
test
loope
jmp
rep
jbe
jge
imul
rol
pop
mov
call
iret
mov
int
loope
push
add
dec
pop
popa
cmp
movs
arpl
inc
and
cmp
loop
cmp
inc
(bad)
pop
sahf
(bad)
pushf
imul
cmp
sub
cmc
stc
jecxz
clc
push
std
mov
aaa
ins
in
fadd
dec
adc
jns
ds
dec
add
push
push
gs
aas
fldenv
sti
dec
dec
(bad)
cmp
lock
cmc
xchg
mov
jno
cs
add
data16
pop
mov
mov
(bad)
dec
inc
int3
pop
(bad)
cmp
test
repnz
fcomp
cs
xor
out
dec
imul
shl
xchg
fadd
repz
xchg
(bad)
adc
cs
xlat
es
adc
retf
sub
fmul
inc
push
aam
jo
cs
mov
xlat
cs
addr16
movs
sub
js
cmp
pop
daa
scas
mov
mov
xor
xor
outs
lods
xor
sub
in
pusha
neg
cs
mov
dec
cs
xchg
outs
jmp
(bad)
inc
movs
cmp
ins
scas
aas
push
jnp
adc
mov
inc
lods
ja
xor
in
jo
into
push
aaa
sub
lock
outs
sub
ret
cs
sbb
rol
sub
out
mov
outs
stos
mov
cs
sar
ret
add
(bad)
call
lock
jb
jns
add
sub
retf
mov
(bad)
sub
adc
push
mov
stos
hlt
daa
int3
dec
dec
ret
ja
(bad)
jnp
cs
xor
shr
ret
mov
or
outs
mov
adc
in
stos
icebp
mov
dec
xor
jg
xchg
or
xchg
aam
push
sub
jmp
push
xor
mov
cmp
imul
mov
les
xchg
ret
leave
or
into
(bad)
ret
fcmovnu
adc
mov
int3
or
and
mov
dec
mov
pop
mov
xor
lods
retf
jge
jmp
dec
xchg
mov
rcr
movs
lahf
jne
sbb
push
jne
cmp
jae
add
jae
jbe
ss
lock
add
not
fmulp
pop
sbb
jle
ja
mov
push
xchg
cli
xor
in
dec
leave
(bad)
pop
fild
mov
cli
adc
sub
int
jmp
outs
inc
cmp
xchg
dec
add
sub
mov
xchg
xchg
inc
nop
mov
mov
push
out
clc
add
movsx
cs
mov
hlt
jg
sbb
pop
mov
mov
mov
js
mov
xchg
(bad)
dec
mov
loop
mov
jb
cmp
cmp
nop
inc
sub
mov
or
mov
bound
push
(bad)
(bad)
and
in
fiadd
xor
out
sub
pop
leave
outs
lea
les
xchg
sub
pop
mov
dec
xor
and
xchg
adc
mov
dec
mov
pop
int
dec
fiadd
test
pop
cmps
and
push
into
(bad)
sahf
arpl
dec
js
test
test
leave
cmps
pop
add
and
popf
mov
movs
test
mov
dec
jle
lods
scas
sbb
(bad)
enter
push
jb
int
int3
xor
push
dec
add
fs
movd
lods
mov
adc
xchg
test
sbb
sti
or
sub
sub
pop
dec
push
mov
sbb
cmp
aas
icebp
pop
sbb
sub
(bad)
call
into
mov
mov
sub
sub
or
mov
cmp
data16
xchg
push
mov
xor
ss
inc
cmps
pop
add
mov
bound
mov
push
out
cmps
inc
dec
mov
(bad)
push
into
jmp
xchg
test
mov
pushf
mov
cmp
in
pusha
push
aas
cmps
sysenter
(bad)
icebp
sbb
(bad)
dec
mov
daa
sub
jae
lock
xor
adc
push
jmp
scas
scas
pcmpeqw
or
adc
cmp
mov
mov
daa
push
sbb
mov
adc
adc
add
push
jmp
ret
cs
out
cdq
fsubr
push
cs
mov
xor
push
xor
mov
sub
aam
fstp
and
jbe
pusha
inc
(bad)
pop
xchg
cs
out
ja
lods
mov
iret
(bad)
mov
je
popa
retf
repz
ret
mov
inc
rol
fidiv
cmps
dec
mov
sbb
sub
test
pusha
sbb
dec
dec
(bad)
ficomp
mov
inc
xchg
or
dec
fidiv
frstor
inc
sub
cs
fst
add
das
pop
sbb
dec
dec
hlt
inc
xchg
mov
pop
cs
and
xor
xor
mov
add
cld
in
loop
cli
retf
imul
pop
push
xor
sub
bound
or
jne
outs
and
mov
test
jbe
xor
adc
in
xchg
enter
or
retf
lds
dec
mov
mov
mov
out
loope
dec
push
sbb
movs
mov
(bad)
mov
in
jg
adc
xor
mov
test
sub
inc
dec
dec
adc
test
(bad)
pop
cmp
sub
arpl
call
stos
sbb
pop
push
shr
xchg
dec
or
xchg
lods
dec
sub
mov
push
int3
imul
(bad)
je
es
jge
pop
push
leave
or
loope
(bad)
pop
cli
push
pop
fisttp
sahf
bound
and
dec
jne
outs
lods
mov
fcmovb
adc
mov
aas
adc
into
push
inc
outs
sub
(bad)
add
fs
sub
xchg
sub
adc
faddp
popf
xor
gs
jmp
push
aas
mov
popf
push
ja
int3
test
and
mov
xchg
inc
xchg
das
lahf
push
adc
push
ret
aad
xor
cld
xlat
jmp
fwait
cli
push
push
cs
xchg
movs
les
mov
(bad)
xchg
and
fst
mov
fdivr
cs
sub
mov
stos
rol
loop
cs
cmp
aam
aas
aad
mov
data16
jno
mov
loopne
dec
cwde
sub
cs
jb
pop
data16
ja
cmc
int3
xchg
jbe
sub
sbb
imul
mov
aas
ret
mov
mov
das
and
fist
call
xor
jl
out
test
inc
les
xor
fimul
mov
scas
ds
dec
and
xchg
add
(bad)
js
pop
xor
ins
test
inc
pop
cmps
imul
cs
sahf
retf
aad
sbb
sub
dec
push
sbb
cs
pop
clc
rcl
adc
add
sub
cwde
enter
cs
mov
cmps
fdivr
sbb
lock
out
sub
xchg
inc
cs
or
sub
shr
fcom
mov
enter
fst
lods
cs
loop
push
outs
add
ja
adc
js
sbb
outs
inc
popa
pop
sub
push
out
xor
in
repnz
jo
repnz
mov
out
ds
pop
loop
jo
std
mov
daa
in
repz
jno
or
dec
popf
jle
mov
jae
jne
cmc
inc
test
(bad)
jb
sbb
popf
pusha
sub
fst
add
shr
into
jg
stos
aaa
and
ja
pusha
imul
dec
cs
inc
push
sbb
jb
push
jae
cmp
mov
xor
out
pop
aaa
jns
push
sbb
div
mov
and
sub
movs
jmp
in
jno
dec
push
sub
jo
cwde
js
mov
jle
add
adc
fld
adc
xchg
sub
jge
shl
loop
push
es
out
(bad)
imul
push
cmps
adc
inc
shr
xchg
xchg
and
(bad)
sbb
sahf
xor
mov
loopne
push
push
mov
xor
aas
sbb
mov
outs
outs
cmp
ds
shl
dec
or
jmp
sub
inc
push
lock
push
mov
push
(bad)
pop
sub
or
cs
mov
or
push
aam
push
adc
push
dec
sub
jecxz
pop
mov
sbb
inc
xchg
and
or
ins
in
fisub
pop
dec
xor
add
test
daa
adc
cdq
cmp
pop
call
mov
jg
mov
jb
push
loop
cs
leave
fst
jno
fisubr
clc
pop
popa
rcl
jmp
jbe
stos
sub
inc
enter
jecxz
test
int
aas
icebp
stos
push
inc
cdq
add
enter
ror
cs
std
push
out
stos
inc
push
cs
scas
fild
add
(bad)
and
(bad)
pop
pop
arpl
mov
cs
mov
cs
fist
cdq
mov
psubd
pop
pusha
pop
cs
mov
dec
cs
inc
and
push
sbb
imul
cmp
dec
pop
push
or
pop
mov
cs
into
loopne
push
mov
fist
cmp
jns
pop
(bad)
push
aad
js
mov
pop
std
mov
sbb
repz
not
aas
cs
fbld
int3
mov
daa
mov
push
in
sbb
xor
pop
adc
mov
mov
xchg
int3
inc
dec
pop
or
into
and
fild
inc
and
fidivr
pop
mov
dec
or
outs
shufps
mov
into
cmp
loopne
jecxz
icebp
or
pusha
mov
adc
stos
pop
jmp
psrad
or
sub
mov
aaa
xor
cmps
xchg
cmp
jge
cwde
imul
out
and
or
fsubrp
push
or
rcl
stos
push
xor
xchg
sub
loop
mov
push
mov
in
ja
inc
out
je
cmc
mov
inc
push
mov
pop
xchg
and
repz
cmps
cmp
mov
jp
xor
leave
dec
push
retf
mov
or
movs
pop
das
or
out
(bad)
and
sub
jecxz
fs
aad
push
dec
mov
rol
push
(bad)
pusha
fidivr
out
pop
shr
cmc
mov
push
dec
cmc
pop
ds
adc
das
jg
js
jmp
inc
es
pusha
inc
dec
(bad)
in
adc
(bad)
push
and
jnp
imul
mov
jb
adc
mov
xor
cmps
sub
mov
push
add
movs
test
stos
(bad)
js
cwde
mov
test
in
fwait
jb
mov
cmp
loope
stos
leave
pop
lods
sub
jo
les
ins
or
add
and
and
push
cmp
es
dec
sub
bound
push
in
pop
mov
inc
es
aad
sub
mov
sub
cwde
xchg
cmp
sub
(bad)
push
outs
push
into
aas
mov
xchg
scas
daa
jecxz
jge
jb
pop
test
pop
gs
fisttp
jmp
mov
push
cmp
lods
bound
or
push
mov
in
imul
cmp
dec
outs
and
loope
stos
mov
xchg
in
es
jnp
outs
push
retf
in
or
dec
mov
stos
mov
push
sub
imul
cmp
loop
aas
shr
xchg
cs
(bad)
fdivr
(bad)
or
mov
pop
sbb
add
dec
adc
test
push
out
xor
xor
jl
shl
es
xor
mov
inc
stc
or
retf
enter
scas
cs
in
push
jno
add
or
xor
dec
ret
lock
mov
les
and
inc
call
xor
fsubr
xchg
stos
fild
cmp
xlat
mov
fndisi(8087
adc
pop
xor
sbb
mov
inc
fwait
sub
leave
sar
mov
aas
stos
enter
adc
shl
inc
lods
sub
push
dec
shr
pop
push
xor
out
arpl
pushf
leave
scas
push
cmps
call
mov
out
dec
jge
inc
xor
xor
xchg
xchg
push
pop
inc
(bad)
mov
sbb
out
push
test
into
cmc
jmp
cmp
cli
mov
and
repz
sub
push
fldcw
cwde
sbb
pop
stc
push
dec
mov
aas
in
jnp
outs
aas
movs
pop
push
leave
add
lods
jb
add
popa
iret
jle
xchg
sub
or
sbb
cmps
adc
out
sahf
sub
pop
shl
and
xor
sub
jg
sbb
jl
addr16
aaa
xor
data16
or
outs
hlt
xor
aas
mov
aam
jns
jae
(bad)
xor
mov
cmps
add
aas
test
pop
call
cs
pop
push
sahf
out
daa
push
ss
sub
add
popf
cs
dec
adc
adc
les
mov
sti
xlat
push
stos
pop
enter
sub
stc
cs
pop
mov
jmp
sahf
shr
(bad)
or
rcr
sbb
xor
push
enter
test
jge
mov
xor
int3
sahf
xor
push
push
or
addr16
ins
sub
jle
inc
pop
sbb
dec
inc
lea
fsub
push
rcr
inc
daa
sub
daa
enter
(bad)
and
or
push
pop
dec
sbb
cmp
or
push
inc
pop
adc
inc
test
ret
inc
cld
sub
xchg
add
in
hlt
in
and
mov
cmp
push
pop
adc
aas
push
or
and
adc
xchg
or
bound
ja
dec
cs
xor
or
jo
pop
push
add
iret
pop
div
(bad)
fld
fnsave
mov
mov
xor
and
jns
sbb
scas
xor
addr16
jne
gs
mov
dec
mov
pop
inc
xor
mov
jle
cdq
cs
pop
pop
adc
push
adc
jb
dec
int3
cmp
xor
sahf
icebp
dec
sub
xchg
push
add
sub
adc
sbb
cs
pop
aaa
pusha
loop
mov
cs
mov
xor
cs
adc
fidiv
jnp
out
ins
js
jo
sub
jns
mov
adc
ja
and
outs
mov
daa
mov
test
fcom
clc
loopne
outs
xor
jge
aaa
stc
push
jbe
jo
adc
enter
setge
jno
mov
dec
inc
mov
es
popf
ja
faddp
fs
(bad)
fiadd
pop
aad
out
outs
cdq
ins
lea
pop
imul
jge
sub
cs
push
push
popf
(bad)
aaa
xor
xchg
or
cs
push
in
sahf
jg
dec
mov
adc
sbb
push
xor
or
pop
fxch
adc
xor
adc
repnz
mov
pop
push
or
out
out
jmp
push
sub
stos
cmp
jb
jmp
and
cdq
xchg
daa
xchg
stos
das
lahf
pop
outs
and
push
hlt
and
push
outs
mov
cmp
xor
jecxz
out
out
or
mov
mov
gs
adc
xchg
xchg
loopne
sti
aas
mov
cmp
imul
repnz
(bad)
jmp
add
sub
out
icebp
lods
lods
cs
loope
jmp
jle
jecxz
test
or
adc
sbb
cmps
mov
xor
lock
dec
lds
sbb
and
mov
mov
push
xchg
fdiv
sar
mov
xor
ja
xor
and
push
cmps
arpl
loopne
pop
mov
jne
or
sbb
das
jl
xor
push
jmp
scas
aad
jge
jns
mov
inc
adc
iret
jno
pop
outs
pop
popf
test
pop
jne
pop
mov
inc
sub
outs
ss
add
push
adc
or
sahf
push
inc
mov
cs
adc
dec
cs
sahf
jae
push
pop
pop
sub
pusha
mov
aam
(bad)
cmp
cmp
xor
nop
xchg
dec
inc
push
into
mov
stos
mov
add
scas
cwde
loope
sub
xchg
test
mov
bound
mov
pop
push
and
dec
sub
daa
aas
(bad)
rcl
dec
nop
push
sar
out
push
out
ucomiss
inc
cdq
mov
add
les
mov
sbb
or
out
mov
in
scas
and
les
jb
push
and
mov
fistp
mov
sbb
cmp
dec
popf
and
inc
and
cs
imul
sub
movs
ret
inc
cmp
xor
add
bnd
test
push
jae
or
imul
loop
mov
retf
jne
cmp
fwait
xor
cs
xchg
jg
sar
cs
or
fsubr
cmp
xor
push
rcr
out
cs
fst
or
and
pop
and
lea
scas
or
sub
mov
ror
mov
bound
mov
in
pop
fist
push
dec
test
loope
mov
xchg
aas
(bad)
inc
sbb
ins
pop
(bad)
cs
movs
jnp
imul
ins
xor
scas
scas
mov
cmps
jmp
dec
ins
mov
loopne
xor
mov
sub
jb
mov
inc
cmp
popa
loope
xor
add
mov
inc
pop
push
adc
jne
mov
push
nop
add
xchg
adc
sti
retf
mov
outs
cs
dec
call
addr16
dec
ja
stos
in
push
or
xchg
adc
inc
adc
pop
jbe
ficomp
push
mul
cs
inc
arpl
out
mov
cs
and
lahf
popa
lds
dec
pop
adc
pop
ins
or
and
lock
mov
test
mov
fstp
(bad)
cmp
pop
push
nop
sub
(bad)
jno
cmp
rcl
cmp
(bad)
das
pop
xor
dec
pop
sub
pushf
ror
xor
sub
mov
arpl
sub
jmp
add
(bad)
dec
and
mov
pop
cmp
cmp
dec
(bad)
mov
data16
out
pop
push
jo
loopne
mov
popa
(bad)
(bad)
adc
lods
add
ins
pop
push
shl
es
stc
cmp
pop
mov
dec
push
mov
ins
out
pop
xlat
inc
xchg
add
and
into
fdiv
icebp
std
sbb
and
push
jne
ss
jge
test
push
jge
sbb
lods
pop
sbb
pop
push
outs
pushf
loope
mov
je
int3
dec
cmp
dec
ret
scas
ins
test
leave
inc
sar
push
mov
xor
aam
jns
push
mov
xchg
and
loopne
sub
bound
scas
jb
outs
ss
loope
inc
shr
mov
xor
div
pop
aam
xor
loopne
(bad)
ficomp
jecxz
xor
fdivr
sub
ss
sub
bound
cmp
and
pop
fnstsw
out
shl
in
cwde
fdivr
dec
adc
push
cs
stc
repz
xor
xor
sub
jae
leave
retf
into
push
add
ret
push
or
nop
push
test
cs
imul
pop
daa
pop
jno
(bad)
fimul
push
push
push
sbb
sub
out
shl
inc
push
lds
iret
comiss
dec
dec
das
pop
or
xor
dec
sbb
imul
xchg
cmps
jecxz
fdivr
xchg
rcl
xor
sbb
cs
outs
mov
shl
or
jb
ds
sub
cs
push
pusha
movs
in
sbb
cmp
jg
fcmove
lahf
shr
xor
push
adc
inc
pop
in
fld
pop
cmp
aaa
in
jnp
out
pop
stos
mov
out
xchg
xchg
mov
je
addr16
ss
jge
jnp
mov
jecxz
in
ret
cmp
(bad)
xor
nop
cs
das
or
sbb
push
ficom
lahf
int3
push
and
(bad)
sar
xor
in
add
push
or
or
arpl
sub
push
scas
push
inc
add
jns
sahf
lds
cld
inc
and
mov
mov
(bad)
cs
loopne
add
adc
in
and
aas
sub
nop
cli
in
mov
cs
(bad)
cmp
pop
adc
sar
jmp
push
int
mov
addr16
shl
push
jno
sahf
out
ss
add
es
mov
push
movs
add
or
dec
cs
mov
push
push
push
pop
cs
ror
test
adc
(bad)
lds
adc
pop
scas
jmp
jp
push
push
sti
into
cmps
sub
bound
movs
sbb
out
xor
cmp
and
(bad)
call
cmp
mov
cli
nop
dec
pop
and
jb
dec
pop
shl
out
inc
mov
dec
adc
mov
mov
xchg
ds
mov
mov
push
jg
call
call
and
rcr
cli
pop
(bad)
adc
inc
sbb
mov
cdq
push
loop
mov
jge
lahf
mov
pop
sahf
je
and
js
ret
dec
jge
jmp
xor
lods
sub
cmp
jbe
dec
mov
mov
data16
fmul
aas
dec
fucom
dec
cmps
(bad)
jnp
mov
pop
bound
sub
sti
movs
xor
js
pop
inc
xor
test
repz
sub
ret
xor
leave
or
lods
arpl
aam
push
scas
push
inc
out
xor
adc
and
rol
xchg
jnp
cmps
out
test
mov
leave
(bad)
je
jne
inc
(bad)
jmp
add
ss
leave
fnstenv
imul
(bad)
jg
cmc
sub
dec
add
ins
cs
rcl
and
sub
ret
rcr
cs
push
adc
sub
js
mov
jne
xchg
xor
sbb
icebp
retw
test
mov
push
cs
pop
ja
or
push
ret
adc
sbb
push
mov
pop
(bad)
std
cs
cmp
jp
jb
clc
xor
and
into
push
xor
push
mov
sub
jle
pop
push
mov
clc
cs
ds
pusha
xchg
stc
pop
lods
stos
xor
dec
and
pop
pop
and
into
cwde
and
retf
adc
iret
xor
add
pushf
adc
std
daa
add
pop
enter
sub
aam
(bad)
popf
leave
add
stos
fcmovu
cmps
psrld
out
or
shr
arpl
jecxz
mov
(bad)
ss
leave
inc
aad
sub
push
xchg
fst
rcl
push
movs
pushf
(bad)
sbb
adc
inc
push
and
rcr
or
jp
fsub
mov
bound
pop
sub
cmp
or
ror
pop
jbe
stos
mov
shl
xor
jmp
fld
test
into
inc
repnz
nop
mov
lods
jge
mov
pop
sub
mov
rcr
mov
adc
cld
loop
mov
int3
dec
mov
mov
scas
fisttp
out
pop
scas
lods
jl
loop
fbstp
add
mov
jle
fdiv
fwait
sub
cmps
(bad)
jl
xor
inc
pop
adc
aam
shr
fstp
sahf
adc
or
cwde
fadd
push
test
adc
xchg
jbe
pop
fisub
lods
push
sub
(bad)
sbb
into
xor
sub
test
pop
add
pop
je
outs
movs
xchg
dec
sub
cwde
jmp
mov
pop
pop
mov
push
(bad)
out
or
inc
test
sbb
jns
sar
mov
mov
push
mov
cmp
iret
mov
loope
fucomp
inc
popf
in
fistp
jl
retf
and
and
scas
push
imul
or
add
js
cmp
adc
out
mov
pop
inc
adc
xchg
popf
data16
or
jne
fsubrp
xchg
rcr
ror
jns
cs
gs
or
test
jb
dec
aad
aaa
movs
pop
jl
push
and
and
cs
pop
stc
and
sub
pop
enter
into
jne
mov
push
or
cwde
aas
xor
test
mov
jns
inc
mov
cs
jbe
cmp
mov
jge
sbb
push
dec
cs
or
je
xor
and
out
or
fnsave
mov
outs
pop
cmps
cs
stc
int
scas
dec
retf
sbb
test
jmp
xor
bound
adc
xchg
mov
pop
push
sub
push
out
mov
sub
test
ficomp
cmp
mov
icebp
sub
leave
xchg
cmp
sub
cmps
dec
mov
push
stc
push
inc
push
sub
call
sbb
jne
cs
mov
add
call
and
mov
sub
ror
mov
ins
pushf
jg
scas
xor
lahf
into
outs
sub
sub
nop
jo
(bad)
out
adc
(bad)
sub
mov
outs
cs
aam
xor
sahf
out
or
lock
or
addr16
push
ret
mov
sar
outs
call
add
pop
mov
pusha
arpl
pusha
sub
lds
cs
xor
push
(bad)
xor
lock
cs
pop
loope
xchg
daa
retf
ins
(bad)
ds
stos
loopne
xor
int3
cs
out
cmps
pop
mov
jne
cmp
jl
xchg
jecxz
int3
fstp
mov
pop
ret
xchg
adc
stos
icebp
adc
adc
xor
inc
daa
test
cs
jge
sub
sbb
mov
ins
cld
addr16
xor
popa
(bad)
daa
ss
push
add
(bad)
fsubr
and
xchg
and
test
int3
sar
test
(bad)
push
jnp
cs
dec
push
mov
add
or
js
fnstcw
aas
in
hlt
sbb
es
jae
shl
inc
inc
sbb
jno
fwait
xchg
pop
es
loopne
xor
(bad)
repz
(bad)
mov
jmp
nop
mov
aaa
rcl
jne
or
xor
and
xchg
add
out
inc
test
fdivr
retf
dec
push
xchg
push
aam
add
dec
mov
rol
pop
pop
inc
ja
in
leave
pop
ins
popf
adc
(bad)
out
mul
je
mov
pop
aas
fwait
clc
icebp
out
dec
inc
repnz
add
xlat
push
(bad)
xor
call
push
mov
mov
fsub
adc
std
sub
push
cmc
mov
mov
mov
push
shl
test
leave
aam
xchg
mov
add
push
fld1
sub
xchg
repnz
test
sub
mov
scas
std
or
sub
(bad)
clc
out
inc
lds
sub
inc
pop
inc
sub
adc
pop
and
pmaxub
es
outs
rcl
retf
mov
sahf
mov
xor
out
repnz
xchg
rol
cmc
xor
shl
cs
push
ins
jnp
retf
leave
dec
xor
hlt
jmp
add
mov
into
and
shr
adc
xchg
sub
iret
inc
rcr
jmp
mov
mov
sar
rol
bound
push
xor
call
cs
add
mov
and
pop
vmwrite
xor
out
pop
fist
int
mov
or
push
jb
xor
jmp
cs
mov
mov
adc
cs
(bad)
jbe
jns
(bad)
fcomp
mov
cs
mov
sub
push
jecxz
sti
adc
sub
xchg
sbb
scas
mov
mov
pop
call
aaa
cs
stc
adc
mov
inc
xor
or
(bad)
and
repz
jle
cmps
xchg
sahf
xchg
inc
mov
js
outs
pop
or
cs
movs
call
push
cs
(bad)
mov
xor
fwait
and
adc
pop
cmp
dec
in
clc
in
and
or
outs
push
pop
push
mov
xchg
sub
or
cs
cmp
into
out
sbb
rol
pop
sbb
iret
jbe
sbb
xlat
and
cmp
xlat
fadd
mov
jae
adc
call
jecxz
push
xor
jnp
jmp
aam
outs
hlt
xchg
mov
mov
sub
sub
jp
dec
mov
dec
inc
std
outs
inc
ss
ins
and
and
mov
and
xor
pop
jecxz
sub
sbb
xchg
pop
xor
mov
push
dec
loope
retf
jbe
pop
mov
sub
repz
pop
add
mov
sub
ror
sub
int
scas
sub
mov
push
loopne
daa
repz
dec
or
(bad)
fcmovnb
push
xor
pop
dec
je
mov
fidivr
loope
pushf
popf
scas
clc
add
test
cvtps2pi
scas
push
cmp
xor
xchg
jge
mov
cs
out
mov
cs
ja
adc
jbe
scas
ficomp
callw
popa
xor
pop
call
sti
out
jle
(bad)
in
sub
cli
daa
xchg
mov
fiadd
out
cmps
xchg
cs
xchg
arpl
cs
sub
xor
inc
pop
pop
sub
xor
in
fsub
gs
hlt
pop
jno
fwait
das
(bad)
push
into
jns
cs
xchg
xchg
mov
dec
push
out
sar
rcr
cs
sbb
loop
mov
mov
aaa
(bad)
push
sbb
(bad)
(bad)
out
sub
rol
jge
mov
scas
shr
xor
out
outs
mov
push
(bad)
cmps
(bad)
and
imul
out
cs
sub
dec
cs
jno
cmp
mov
xor
lds
out
(bad)
sbb
or
in
movs
in
push
fxch
or
push
xor
stos
push
or
dec
cs
push
jg
jmp
sbb
add
pop
cmps
pusha
cmp
movs
bound
lods
pop
call
xor
arpl
push
mov
scas
test
sar
and
retf
mov
jo
adc
jle
fst
sbb
and
xor
cs
fsubr
fsub
xor
sub
jmp
cli
or
dec
dec
jge
imul
adc
or
ja
(bad)
loope
xchg
mov
lods
ret
mov
mov
stc
xchg
jne
inc
jp
cwde
sbb
pop
jo
sub
jns
push
mov
daa
and
test
dec
cs
out
inc
aaa
ss
pop
int
js
scas
adc
jno
jns
sahf
xchg
jae
in
cs
jbe
aas
add
dec
sub
mov
test
jmp
adc
sub
ffreep
dec
cmp
pop
pop
outs
sub
arpl
cs
inc
mov
es
pushf
dec
cs
cdq
mov
push
jl
xor
test
push
ja
jmp
ins
pop
add
xchg
cs
cmc
sbb
and
pop
fild
mov
jb
stos
and
movs
retf
cmp
xor
inc
pop
push
push
dec
and
mov
movs
cs
out
xor
xor
xor
or
mov
inc
or
mov
dec
mov
ror
dec
aam
xchg
fucomip
outs
lods
rcr
jae
xchg
cmp
sub
retf
loope
sub
ds
inc
test
or
aad
leave
pop
jmp
pop
(bad)
xor
push
push
out
sub
jecxz
stos
jns
mov
push
repnz
push
inc
loopne
mov
or
pop
es
xor
sub
push
mov
pop
popa
pop
scas
fldcw
sbb
mov
std
leave
out
stos
pusha
(bad)
js
shl
inc
pushf
nop
mov
mov
add
add
dec
add
jl
in
test
mov
int
fldcw
inc
stc
add
mov
mov
push
cmp
fs
outs
pushf
maxps
(bad)
dec
inc
stos
push
push
inc
(bad)
or
mov
loop
in
movs
cmps
inc
cmp
js
arpl
int3
call
imul
mov
sbb
call
xor
sahf
jns
mov
scas
push
pop
xor
inc
sub
add
dec
xor
inc
call
dec
pop
sub
stos
and
sub
lock
ds
push
xor
ja
test
mov
or
cld
xor
xchg
cmps
fbstp
sub
mov
ja
pop
ret
std
xchg
jae
test
cmps
push
jmp
lods
stos
sub
lock
push
imul
push
xor
push
inc
(bad)
(bad)
cmp
add
iret
imul
adc
rol
cmp
mov
mov
inc
pop
lods
xor
imul
das
sbb
push
or
cmp
(bad)
sti
sub
mov
bound
pop
ror
xchg
ror
jne
mov
inc
and
(bad)
es
cmps
outs
jb
and
fdiv
jno
mov
push
in
leave
mov
and
jb
mov
arpl
xor
adc
dec
icebp
scas
jmp
icebp
fmul
jmp
push
daa
cmps
mov
jl
mov
lods
retf
push
enter
ins
pusha
sbb
cwde
(bad)
xor
clc
mov
mov
je
jns
and
add
movs
adc
add
sbb
repz
cmp
sub
jle
mov
movs
das
dec
std
outs
push
mov
dec
aam
(bad)
shl
push
aas
pop
xchg
mov
pop
nop
in
cld
add
(bad)
mov
out
(bad)
int
scas
mov
les
cs
push
jl
cmp
aas
bound
js
push
daa
fs
fisubr
ja
inc
adc
je
(bad)
mov
icebp
(bad)
and
inc
push
jle
int
push
daa
rcr
sub
cmc
out
add
sbb
push
or
or
pop
fcmove
nop
inc
cs
and
fwait
add
stos
jnp
adc
das
mov
push
(bad)
iret
rol
hlt
sbb
add
outs
mov
fisub
inc
push
aaa
ror
retf
add
sbb
ja
sbb
xor
aad
mov
push
cs
xchg
retf
call
out
dec
out
aaa
or
lock
sbb
jmp
pop
(bad)
push
mov
lock
cmc
outs
jb
push
fisub
retf
sub
mov
(bad)
sbb
cs
int
or
aad
push
(bad)
xchg
test
call
(bad)
jg
outs
mov
lods
xchg
pop
pop
ds
not
sbb
(bad)
mov
pop
(bad)
push
pop
push
mov
enter
sub
cmp
and
movs
fild
(bad)
out
imul
mov
pop
pop
cmp
fs
and
push
sub
xchg
fidivr
(bad)
xchg
pop
ins
arpl
cs
adc
adc
cs
jmp
pop
addr16
mov
mov
ds
fsub
adc
loopne
call
(bad)
cmp
ret
jns
fst
leave
aas
and
add
add
scas
aam
jge
aaa
lods
jmp
stos
enter
mov
pop
(bad)
sbb
adc
sub
pop
loopne
push
out
xor
mov
ror
stos
imul
adc
add
push
ret
movs
sbb
mov
cmp
cdq
dec
and
data16
lahf
inc
ret
mov
sbb
das
jle
and
cmp
or
stos
fsub
mov
icebp
loopne
addr16
xchg
les
xor
push
dec
and
and
dec
add
jp
lods
sbb
cmp
jmp
xlat
(bad)
enter
es
rol
(bad)
mov
jns
test
xor
jmp
mov
sub
outs
outs
sub
pop
push
sub
gs
xchg
ss
sub
loop
imul
pop
and
dec
stos
dec
(bad)
cs
(bad)
in
or
inc
ret
pop
outs
jmp
imul
popa
rcl
hlt
adc
gs
xor
pop
fimul
dec
aas
lock
fimul
add
cs
cmp
dec
gs
daa
jle
out
imul
cs
xor
cmp
pop
cs
pop
jo
ss
aad
les
jp
ss
push
cmc
add
sbb
xor
sti
stc
mov
int
into
jecxz
test
fneni(8087
mov
mov
cmp
sub
pop
imul
sahf
or
cdq
fs
jmp
js
cmc
and
(bad)
lock
hlt
jmp
dec
dec
arpl
das
xlat
les
add
fstp
mov
mov
mov
xchg
jmp
cmps
pop
cmp
ret
daa
jmp
ret
stos
xchg
repz
and
(bad)
(bad)
(bad)
sbb
loopne
and
out
dec
arpl
dec
jle
mov
outs
lock
(bad)
aam
jmp
out
repnz
fdiv
clc
dec
and
sub
mov
cmp
push
sti
xor
movs
stos
or
adc
sub
in
int
or
loope
js
sbb
sub
sub
leave
pop
inc
cwde
cs
(bad)
mov
js
sub
jno
stos
jmp
mov
(bad)
retf
xchg
movs
and
adc
pop
mov
xlat
idiv
dec
sub
bound
leave
jae
out
mov
add
push
(bad)
mov
shl
sub
xor
mov
mov
pop
sub
push
faddp
push
popf
gs
ins
or
leave
cli
add
push
repnz
int
cs
push
and
cs
push
addr16
or
mov
or
repz
aas
sbb
jmp
jnp
das
sub
test
mov
mov
(bad)
sub
inc
fidiv
popf
clc
cmps
mov
or
jge
arpl
out
mov
xor
int
add
cs
xchg
cmc
mov
lock
retf
jge
pop
sbb
arpl
xchg
sar
loopne
jecxz
lods
hlt
scas
xor
inc
pop
fidiv
leave
add
mov
mov
call
fiadd
mov
popa
push
arpl
lods
mov
or
cs
pop
cld
rcl
call
cs
adc
(bad)
rol
cs
ins
lods
mov
arpl
mov
repnz
cs
jmp
cs
arpl
add
cs
jo
inc
mov
xor
ror
loop
das
xchg
push
cs
outs
add
push
sbb
mov
fs
adc
je
leave
shl
dec
ins
adc
int
jl
mov
ret
push
dec
xchg
add
call
out
push
cdq
movs
(bad)
(bad)
cs
mov
lods
es
cs
dec
lahf
nop
fs
stos
cdq
adc
jg
pop
(bad)
in
push
pop
lods
cs
and
mov
loope
xchg
and
mov
inc
sbb
xor
repz
sti
enter
cmp
daa
inc
sub
cmc
aaa
cld
into
shl
jmp
sbb
stos
jecxz
retf
aaa
into
lods
cs
fisubr
push
(bad)
jo
jnp
mov
push
fsub
movs
add
idiv
es
das
ret
out
xor
jmp
sti
add
xor
push
adc
jno
mov
xchg
pusha
loope
mov
xor
clc
mov
dec
popa
sub
pop
aas
dec
icebp
iret
mov
enter
shl
pop
xchg
mov
inc
aas
dec
mov
xor
fisttp
jno
and
adc
inc
gs
jg
xchg
lods
in
sub
inc
mov
adc
in
call
in
movs
and
cs
stos
mov
movs
scas
push
inc
and
imul
xor
cs
ss
adc
nop
imul
fst
pushf
fistp
and
lock
je
outs
pop
cs
or
and
and
push
out
test
dec
push
cli
mov
mov
dec
mov
push
jge
push
add
dec
cs
push
call
xor
pop
mov
loope
ror
popa
cmp
je
mov
mov
es
jg
adc
mov
int
push
cmps
inc
mov
cs
xchg
xchg
das
cs
sub
adc
movs
pop
and
sbb
dec
fisttp
and
or
dec
out
jecxz
repz
dec
cs
cmps
jmp
cmc
pop
ror
jle
shld
cmps
dec
push
cs
icebp
or
aas
mov
call
sub
dec
sbb
std
aas
sahf
mov
adc
call
js
(bad)
daa
outs
loopne
cmp
fistp
outs
dec
int
sub
in
shr
cmp
js
ret
sar
stos
xchg
sbb
cs
inc
dec
inc
loopne
fisub
push
dec
sbb
scas
(bad)
stc
mov
scas
push
cs
out
mov
inc
adc
cs
jmp
out
cs
pop
pusha
imul
xchg
pop
out
add
sbb
pop
lds
les
call
out
clc
push
inc
inc
cs
xor
mov
aas
xchg
xor
jge
imul
scas
not
adc
xor
dec
dec
daa
pop
jb
xor
and
xor
lock
mov
xchg
pop
or
(bad)
jae
mov
xlat
push
pop
cs
pop
data16
inc
daa
push
mov
and
jno
fiadd
inc
mov
iret
enter
dec
or
(bad)
adc
push
daa
ins
xchg
jnp
sti
or
xor
cmps
dec
mov
(bad)
int3
adc
push
hlt
je
sbb
bound
push
pusha
loop
mov
add
fstp
pop
lods
aad
lds
jp
push
mov
push
pop
inc
jb
pop
pcmpeqd
movs
add
int
icebp
ds
outs
mov
(bad)
mul
jp
sub
xchg
(bad)
push
mov
or
cs
xchg
(bad)
rcl
jns
iret
cs
shl
adc
mov
or
sub
(bad)
rcr
std
cwde
xor
div
sbb
neg
cmp
outs
pop
sahf
scas
and
pop
push
inc
arpl
fwait
rcl
popa
adc
(bad)
push
xlat
add
dec
pop
clc
stos
test
mov
xlat
sti
push
shr
bound
fldenv
dec
call
int3
ins
daa
push
jbe
(bad)
jle
mov
cmp
add
add
xchg
push
mov
inc
xor
or
sahf
retf
pop
pop
cs
jle
sbb
popa
aas
sub
sub
in
jmp
xor
cmp
shr
bnd
cs
xlat
push
xor
xor
gs
xor
sbb
mov
mov
mov
mov
push
ss
out
imul
or
out
stc
dec
adc
loope
sbb
xor
and
sub
bound
outs
push
or
pop
xor
mov
cmp
mov
cs
pop
and
or
jo
inc
pop
jl
mov
adc
popa
aas
(bad)
pmovmskb
inc
cs
test
rol
ins
jo
add
xor
mov
jns
cs
push
and
into
addr16
cs
cmp
cli
cs
icebp
inc
lahf
mov
adc
cs
mov
out
jno
sub
test
dec
repnz
dec
xor
stc
and
mov
out
push
dec
sub
cdq
push
cs
rcr
or
and
icebp
sub
movs
fild
mov
cmps
div
je
fnsave
shr
xor
std
mov
pop
cs
pop
push
leave
dec
addr16
xchg
scas
arpl
jae
(bad)
out
push
in
sub
adc
xor
sub
cdq
loopne
loopne
les
xchg
enter
(bad)
jns
retf
test
mov
aas
dec
push
and
jmp
push
push
icebp
xor
add
jmp
add
and
retf
pop
xor
ins
mov
test
stos
cs
jecxz
cmps
ror
mov
pop
mov
out
and
adc
xlat
pop
jl
mov
ins
xchg
ja
xor
and
or
cmp
leave
or
imul
xor
sub
nop
add
jmp
xor
fnsave
and
sbb
cs
stos
rol
bound
popf
fs
into
repz
pop
xor
mov
pop
and
sub
sti
cwde
aam
push
mov
xchg
cmp
scas
pop
dec
sbb
mov
pop
sub
out
push
mov
and
jns
(bad)
add
mov
jno
bound
popa
aaa
mov
cs
pushf
fsub
lock
push
sti
repnz
inc
test
cs
ficomp
(bad)
push
arpl
(bad)
(bad)
xor
test
bound
sbb
cs
sub
xor
jge
cmc
cs
iret
std
xlat
mov
out
sbb
and
and
mov
out
pop
or
in
push
into
pop
mov
inc
enter
dec
dec
adc
mov
cs
popa
lods
repnz
(bad)
cs
jmp
xchg
jnp
add
jge
push
test
adc
cs
pushf
dec
out
loopne
test
xchg
pop
in
mov
sub
jp
sub
arpl
jmp
das
mov
lea
es
xchg
cmp
cs
popa
sbb
mov
sub
(bad)
push
and
cmps
mov
jno
repnz
shl
clc
cmp
(bad)
cli
xor
fldenv
jae
sub
call
sub
or
inc
ja
into
sti
repnz
dec
add
inc
fistp
daa
dec
js
dec
sbb
out
das
imul
fsubr
(bad)
(bad)
stc
jge
or
xor
cli
or
xchg
stos
sahf
mov
and
sub
adc
inc
pop
cs
cmc
fdiv
mov
push
dec
add
xor
mov
scas
call
jmp
jo
push
push
jns
or
cs
sbb
inc
inc
data16
outs
jp
push
sbb
cdq
xor
jle
pop
inc
ins
cs
loope
into
xchg
out
or
(bad)
stc
out
xchg
ret
cwde
retf
fsubr
mov
push
ins
ja
popa
mov
(bad)
xchg
mov
lock
sub
(bad)
sub
sub
jo
adc
push
stos
and
out
and
pop
dec
ret
inc
sub
sub
jb
cs
mov
sbb
lea
scas
xor
sti
ret
inc
mov
cs
movs
dec
cmps
ja
push
pop
xor
ss
adc
loope
and
fdiv
rol
int3
fcomp
push
outs
dec
add
cs
lds
mov
cs
(bad)
xchg
fcom
xchg
(bad)
adc
mov
sbb
xor
or
out
add
cmp
mov
inc
sub
test
xchg
adc
xchg
cs
(bad)
sbb
mov
jbe
pop
jno
(bad)
sbb
repz
push
xor
or
ja
pusha
xchg
in
adc
loopne
pop
cs
aas
or
jecxz
and
mov
mov
mov
or
dec
cmp
mov
pop
cs
arpl
add
jle
dec
cs
sbb
pop
inc
xchg
mov
dec
xor
out
mov
stc
clc
sub
out
mov
and
push
dec
or
xchg
jp
jmp
aaa
sbb
cs
out
add
es
dec
movs
jnp
dec
in
fcom
lods
add
add
daa
iret
jb
and
aaa
jne
inc
and
lahf
ins
mov
lods
adc
xor
jmp
pop
movs
push
lods
mov
and
shr
xor
push
pop
pop
xor
sub
dec
aam
dec
and
clc
out
and
ja
in
mov
jge
out
xor
aam
xor
mov
lods
ja
push
cdq
mov
sbb
repnz
adc
aas
scas
and
out
repnz
jg
cdq
jnp
gs
stc
aam
mov
mov
ins
pushf
(bad)
imul
jae
mov
jge
mov
out
mov
push
adc
cld
adc
mov
test
xor
or
enter
shl
ins
xchg
mov
add
xchg
out
sub
adc
aas
adc
pop
fst
sbb
loopne
mov
pop
out
push
sub
fs
xor
or
repnz
xchg
frstor
enter
cs
cmp
dec
cs
ret
lahf
xchg
std
mov
aam
fld
or
pop
xor
xor
daa
call
jg
aam
out
mov
xor
sub
sub
cs
leave
int
mov
and
and
into
xchg
dec
push
xor
inc
pop
push
pop
jmp
int
adc
push
outs
scas
(bad)
dec
jns
pop
cmp
jno
pop
mov
psubq
fldcw
mov
lods
in
xor
and
popf
call
mov
xor
xchg
or
cmp
stos
sub
test
out
arpl
add
scas
push
adc
mov
cs
pop
add
cs
xor
mov
pushf
add
push
in
ja
cmp
mov
mov
adc
cs
xrstor
adc
cmp
pop
les
nop
scas
push
cmp
out
rol
adc
mov
and
jns
mov
jmp
cmp
cmp
rcl
call
mov
sub
xor
das
cs
je
dec
test
dec
les
adc
icebp
test
cs
adc
cdq
xor
cmp
addr16
inc
xchg
lea
xlat
scas
push
jl
cmp
dec
adc
and
push
ret
push
push
jmp
shl
jecxz
dec
mov
and
xor
enter
ja
test
xchg
sbb
dec
xchg
push
and
pop
lds
pop
mov
repz
adc
cld
inc
push
cs
mov
jmp
cs
and
sti
les
jle
mov
cs
push
dec
and
inc
mov
ins
mov
cmp
cs
sbb
add
and
cs
(bad)
xor
aam
mov
xlat
and
or
mov
mov
popa
jb
mov
data16
loope
dec
cld
aas
xor
mov
pop
out
ins
cs
inc
push
call
mov
rcl
inc
jns
adc
mov
shl
xchg
add
and
xor
and
pop
sti
pop
test
mov
xchg
jg
mov
bound
(bad)
and
sub
outs
out
inc
jmp
nop
fsubr
test
and
dec
call
ja
jecxz
add
and
test
in
xor
mov
push
inc
pop
clc
aaa
into
push
movs
xor
push
jbe
sub
sub
fst
and
test
je
aaa
and
das
sbb
and
outs
mov
add
daa
sar
loope
ins
push
xchg
jnp
xor
in
movs
scas
xchg
sbb
inc
mov
dec
push
cs
and
pushf
sahf
sbb
enter
pop
cs
ret
aaa
xlat
xor
int
xchg
jle
test
pop
pusha
cs
in
mov
cs
mov
pop
sbb
scas
adc
adc
jb
hlt
add
inc
or
push
xchg
xchg
mov
jae
js
adc
xor
jl
loope
push
sub
pop
aam
std
repnz
cmp
loop
(bad)
arpl
gs
jl
retf
sti
(bad)
(bad)
ds
fwait
(bad)
mov
frstor
push
pop
es
in
outs
inc
add
cs
rol
repnz
sub
sahf
repnz
jb
inc
mov
adc
dec
cs
sub
cs
dec
push
and
mov
scas
jp
xchg
aas
pop
push
ret
jno
scas
cmp
cdq
cs
out
inc
icebp
scas
ins
sbb
les
in
fxch
xor
lods
adc
clc
jecxz
pop
das
cs
shl
leave
daa
call
out
mov
pop
push
mov
sub
clc
push
daa
and
pop
fcomp
push
add
xor
xchg
es
push
popa
or
cli
pop
lds
sti
mov
cs
daa
add
push
es
pop
xor
fwait
or
xor
xor
jno
cmp
in
jmp
mov
mov
loop
je
outs
jnp
dec
lea
jp
or
jae
cmps
(bad)
int3
imul
adc
scas
inc
rcl
enter
gs
aam
or
ret
cmp
(bad)
in
pop
ins
jns
cs
xchg
adc
or
or
icebp
mov
mov
and
adc
loopne
sub
scas
out
dec
or
dec
cmp
cwde
(bad)
adc
dec
mov
push
sbb
sub
mov
call
push
pop
pop
cs
mov
sbb
and
and
or
test
jmp
fmul
xor
ss
outs
sub
lahf
mov
jmp
push
mov
push
jae
push
pop
retf
cs
fs
jnp
jbe
xor
xchg
mov
xor
popa
cmp
xchg
retf
sbb
sbb
retf
add
adc
xor
into
push
add
out
movs
dec
enter
dec
pop
fldcw
daa
pop
jmp
iret
mov
movs
mov
pushf
pop
cdq
sbb
pop
dec
stc
in
nop
jmp
cmp
int3
inc
imul
sbb
arpl
mov
(bad)
mov
push
es
push
mov
add
js
dec
dec
mov
or
clc
ror
int3
int3
xor
rol
push
ins
jg
iret
or
bnd
jae
adc
cs
(bad)
call
call
adc
sbb
lods
enter
hlt
pop
rcl
outs
sub
call
and
push
popa
pop
mov
sub
cmp
sbb
mov
mov
in
cs
pop
mov
sub
ds
or
fsubr
mov
or
xchg
xchg
xor
mov
cmp
add
jnp
xor
mov
mov
fcmovu
and
or
leave
add
es
mov
push
pop
out
jne
pop
sbb
xor
leave
push
sti
inc
jnp
xchg
push
je
push
sub
call
out
xchg
ret
mov
sbb
mov
arpl
gs
xor
jmp
lahf
pop
push
(bad)
out
ja
or
or
xchg
adc
(bad)
mov
cdq
(bad)
shr
dec
fisttp
xor
pusha
xor
in
mov
imul
xchg
data16
arpl
adc
test
aas
jno
pusha
mov
cs
inc
xor
push
or
mov
push
out
out
cmp
outs
xor
dec
pop
sub
push
mov
cs
test
movs
xchg
in
repz
popf
fnstcw
shl
clc
int
cs
xor
outs
sahf
aas
fisubr
sbb
push
or
and
in
mov
sbb
scas
mov
sub
shl
test
cmp
int
adc
and
addr16
or
pop
or
mov
inc
add
les
jp
repnz
xor
push
mov
stos
or
inc
pop
outs
add
fsub
pop
scas
xchg
dec
in
(bad)
jge
ret
xlat
cs
mov
je
add
pop
ds
punpckhdq
xchg
loope
or
daa
daa
mov
pop
rol
icebp
or
adc
scas
push
and
jle
gs
aas
retf
mov
test
mov
sub
(bad)
mov
out
test
sbb
inc
test
jmp
int3
daa
pop
inc
shl
mov
popf
pop
pop
cs
xchg
dec
push
xor
add
mov
loop
out
lods
das
sbb
mov
sub
mov
dec
lock
sbb
into
or
in
xchg
xchg
mov
inc
iret
pop
cs
inc
mov
add
jmp
pushf
out
or
sahf
or
xor
cdq
and
adc
ins
and
jae
jl
or
and
mov
mov
xchg
xchg
sbb
ficomp
inc
loop
inc
cdq
xor
jg
jmp
and
xor
popf
imul
add
dec
sahf
int3
inc
scas
jg
mov
leave
xor
repz
add
mov
xchg
or
(bad)
cs
add
adc
or
mov
stc
xchg
aaa
daa
(bad)
mov
jns
inc
into
add
xchg
xchg
sub
imul
sar
push
mov
cs
lock
mov
stos
ror
outs
sti
sahf
scas
call
outs
and
movs
ins
out
jp
dec
in
fsubr
adc
rcr
ins
es
or
loop
(bad)
popa
fcom
in
adc
xchg
cs
jae
rcr
aaa
mov
(bad)
jecxz
mov
dec
hlt
cmc
jle
imul
inc
mov
xor
sahf
bound
sub
and
mov
mov
push
(bad)
cmps
cs
shr
mov
xchg
mov
clc
mov
stos
push
add
mov
stos
js
jmp
std
mov
push
aas
je
pop
popf
dec
cs
xchg
scas
movs
and
jb
add
adc
push
mov
pop
mov
fwait
outs
shl
into
(bad)
call
sbb
xor
jl
push
xchg
pop
cmp
mov
outs
or
(bad)
fild
dec
push
rcl
mov
not
and
aas
mov
into
int
mov
dec
xor
sub
(bad)
les
aam
pusha
mov
mov
fsub
imul
cwde
(bad)
xchg
xlat
loopne
scas
dec
cmps
or
adc
sub
in
sbb
xor
rcl
fldcw
je
aaa
in
jp
mov
adc
in
xchg
loopne
xlat
cs
pop
imul
mov
xchg
div
call
(bad)
pop
cs
sbb
es
add
(bad)
fist
cmp
popf
xlat
das
out
in
push
in
shl
jmp
leave
inc
push
xor
out
fwait
cmp
cmp
neg
fucomi
jl
ja
dec
int3
loop
pushf
xchg
mov
sti
pop
xor
fbld
outs
rcl
out
mov
xor
sub
adc
mov
xor
inc
iret
arpl
xor
fmul
and
test
pushf
lds
pop
loop
fs
sub
push
pop
loopne
sti
xor
js
pop
pop
fidiv
jl
mov
jp
sbb
cli
jle
cs
mov
and
das
mov
iret
adc
cmp
pop
or
mov
test
ror
jecxz
jnp
mov
imul
pop
inc
xor
imul
cmps
jmp
les
mov
ins
sub
xor
adc
neg
imul
and
int
in
test
jle
cmps
pop
pop
xor
jno
scas
or
inc
ss
push
cmps
mov
dec
ins
scas
sbb
cmp
cs
ja
cmovae
push
pop
xor
push
jmp
jp
repnz
xchg
int3
inc
(bad)
cmp
push
mov
jne
cs
adc
jecxz
imul
leave
adc
dec
dec
dec
pushf
retf
cmp
fist
pusha
mov
cmps
mov
daa
mov
shl
sbb
or
jp
mov
ins
cs
mov
cs
xor
cs
fild
xor
mov
in
fidiv
cs
fmul
mov
add
fwait
dec
(bad)
jmp
ja
mov
les
add
retf
ret
mov
fbstp
fild
ds
mov
cmp
scas
sub
jbe
add
jne
out
cmp
add
mov
push
inc
push
mov
push
jo
push
inc
dec
pop
sbb
addr16
daa
push
shr
jecxz
mov
stos
pop
add
ret
add
dec
sbb
cmp
ds
outs
lds
ficom
aam
xor
and
icebp
cld
push
pop
aas
repz
(bad)
fldcw
xchg
fisub
shl
jns
test
test
mov
ins
pop
in
cs
fwait
(bad)
cmp
jge
cs
push
sahf
xchg
mov
mov
imul
and
xchg
fcom
xchg
stc
aad
mov
out
mov
scas
mov
nop
ret
push
xchg
sub
add
cmps
into
jmp
add
std
cmp
xchg
mov
sbb
ret
shl
call
cwde
xlat
push
ds
stos
xorps
scas
pop
pop
aam
repz
(bad)
or
cmp
cs
cmps
push
dec
jns
mov
and
cdq
cmp
imul
clc
call
cmc
jmp
out
in
das
pusha
bound
xor
addr16
sbb
jne
adc
inc
cmps
cmp
pop
push
loopne
dec
xchg
rcl
xor
mov
jno
push
test
aam
push
xchg
mov
dec
push
arpl
adc
push
sar
(bad)
push
mov
adc
scas
hlt
cmps
mov
scas
cs
fs
mov
mov
js
mov
add
dec
add
inc
jno
push
and
xlat
jecxz
jge
xlat
mov
data16
fdiv
cwde
mov
scas
mov
add
in
inc
std
push
cmp
(bad)
dec
out
dec
add
icebp
dec
in
push
mov
dec
dec
dec
xchg
pop
pop
xchg
pushf
xchg
add
jmp
iret
pusha
adc
cs
ins
jp
push
adc
and
mov
jge
cmp
cmp
aam
xchg
into
pop
repnz
sub
aas
out
or
push
pop
sbb
sbb
packsswb
sbb
aas
into
test
in
mov
inc
aas
push
out
inc
outs
retf
fwait
xlat
ror
jne
mov
xor
(bad)
daa
adc
push
add
rcr
das
ins
jbe
or
je
in
lods
nop
mov
mov
cs
cmp
push
cvttps2pi
retf
and
pop
test
sub
cli
movs
sbb
sub
loope
stos
xchg
inc
cs
mov
iret
mov
shr
fwait
nop
pop
call
and
ss
dec
inc
mov
out
dec
cld
mov
xor
dec
lods
out
aam
sbb
inc
and
gs
add
mov
sbb
mov
cs
mov
xor
dec
into
sub
pop
retf
fisttp
fidivr
daa
stos
mov
ds
inc
fs
mov
inc
cli
(bad)
sub
out
xor
push
in
repnz
mov
and
cs
adc
mov
jmp
xor
leave
jns
push
xor
xor
add
jnp
mov
out
fisubr
shr
(bad)
cmp
cs
out
or
movs
fmul
mov
in
jle
lahf
fisubr
leave
xchg
mov
adc
int
enter
ins
and
push
pop
xor
icebp
imul
ja
jge
movs
sub
jl
adc
or
push
adc
cmp
xchg
mov
imul
shl
mov
add
push
and
scas
jmp
inc
pushf
(bad)
pusha
das
out
jmp
xlat
adc
xor
fcom
pop
cmps
mov
and
(bad)
(bad)
mov
iret
pop
mov
and
cwde
not
pop
jmp
enter
xor
loopne
jns
xor
(bad)
inc
dec
xchg
mov
iret
xor
xchg
jns
sahf
sub
out
and
out
dec
(bad)
call
xchg
(bad)
stos
in
xlat
or
(bad)
jo
arpl
lods
addr16
out
mov
fist
(bad)
xor
sub
mov
ret
(bad)
pop
icebp
inc
jg
push
leave
mov
inc
sbb
stos
je
inc
inc
jge
mov
mov
movs
xor
add
aam
adc
dec
add
mov
mov
(bad)
(bad)
push
inc
cld
outs
ret
mov
in
enter
xchg
fimul
(bad)
es
sub
mov
ss
mov
and
out
mov
sub
or
mov
jmp
mov
add
and
ror
sub
(bad)
sahf
adc
int3
jbe
jnp
sar
push
or
pop
cs
fwait
push
and
and
lea
call
push
addr16
movs
push
add
mov
daa
aas
(bad)
mov
stos
ss
push
cmps
or
sub
sbb
push
xor
cs
adc
and
xchg
cs
outs
loop
(bad)
scas
pop
mov
push
mov
cmps
cs
mov
in
(bad)
not
xor
push
cmp
sub
in
in
xor
das
cmps
imul
jno
and
and
ror
push
ficomp
add
test
mov
jmp
and
sti
xor
pop
out
out
inc
mov
mov
sub
imul
sbb
addr16
clc
dec
pop
mov
sbb
push
js
daa
jl
out
mov
cwde
daa
dec
sub
fcom
lds
(bad)
fimul
mov
xchg
jae
ficomp
jle
xchg
popa
or
pop
mov
xor
xchg
cmps
gs
iret
dec
mov
stos
shr
sahf
xlat
mov
shl
xchg
or
or
outs
out
mov
dec
xor
xchg
repz
(bad)
sti
cmps
pop
std
fadd
dec
repnz
cs
in
arpl
inc
repz
out
(bad)
enter
xchg
adc
mov
push
imul
mov
sub
pop
mov
jb
out
in
clc
outs
popa
neg
mov
arpl
(bad)
mov
mov
dec
lock
cli
mul
mov
scas
das
daa
out
and
mov
out
ins
cs
shl
ficom
push
and
inc
int3
and
in
push
mov
and
mov
sbb
fiadd
ret
ds
ror
cld
cs
mov
(bad)
sub
cmp
inc
je
(bad)
popa
push
adc
cmp
jmp
xchg
mov
push
(bad)
inc
push
adc
cmps
or
(bad)
mov
pop
data16
(bad)
daa
xor
in
inc
mov
jmp
outs
jmp
scas
inc
ja
mov
xor
bound
test
loop
mov
fstp
loopne
dec
popf
stos
enter
stos
je
ret
cld
ficomp
add
leave
xor
sub
les
jecxz
adc
mov
jmp
rcl
jae
out
mov
(bad)
loopne
and
mov
movs
loopne
fdivr
fadd
ret
addr16
push
xlat
xchg
mov
in
jge
clc
jge
lock
cmp
mov
add
(bad)
xor
test
mov
mov
mov
aas
mov
xor
mov
xchg
scas
push
data16
push
mov
mov
jbe
popa
movs
fdivr
adc
arpl
jns
sub
leave
push
out
xor
and
cmp
dec
adc
jmp
push
or
scas
(bad)
and
(bad)
mov
js
xor
lods
pushf
cdq
lock
aad
sub
mov
adc
stos
mov
ficomp
inc
pop
repz
in
(bad)
add
fs
jne
addr16
adc
outs
add
into
dec
xor
retf
dec
jmp
hlt
xchg
(bad)
fmul
sar
fisubr
mov
movs
mov
enter
mov
sahf
into
mov
inc
cs
daa
aaa
mov
daa
ss
test
pop
dec
and
imul
outs
xchg
int
ror
popf
ret
mov
sbb
cmps
dec
mov
pop
dec
mov
pop
stos
xor
mov
mov
movs
mov
ror
sub
inc
aam
cs
dec
rol
sti
call
into
ret
inc
mov
ficom
dec
cdq
(bad)
js
and
sub
or
ja
sub
into
out
xor
out
mov
sbb
std
fisubr
dec
leave
jg
push
out
xor
inc
dec
jbe
fistp
push
int
retf
adc
mov
mov
adc
xchg
adc
mov
sub
aas
test
jnp
or
adc
dec
or
inc
xor
lds
(bad)
push
inc
out
mov
xor
shl
jl
test
xor
je
cmp
sbb
sbb
aad
sub
test
mov
std
aad
cmps
sub
sbb
pop
ret
dec
pop
fstp
popa
mov
inc
les
or
aas
mov
xchg
jb
mov
cmp
imul
or
test
jno
mov
xor
sbb
and
fistp
cs
jmp
movs
add
cmp
push
outs
cmps
and
inc
sub
nop
stos
xchg
scas
pop
je
cmp
icebp
test
ret
lea
mov
inc
pop
sbb
or
jmp
xor
jbe
stos
cmp
inc
test
retf
xchg
out
gs
dec
and
scas
dec
inc
pop
leave
outs
pop
mov
pop
dec
popa
es
mov
push
enter
pop
mov
adc
and
les
scas
mov
in
movs
cmc
js
stc
pushf
ja
in
or
mov
mov
out
mov
or
mov
push
mul
mov
xchg
sub
mov
je
out
outs
xchg
pop
ret
dec
icebp
fild
(bad)
retf
pop
fcomp
js
sub
mov
and
dec
test
aam
std
ss
lds
and
leave
pop
(bad)
and
or
or
fmul
jg
mov
inc
jno
loopne
jno
push
outs
lock
xor
retf
cs
cmp
or
mov
xor
mov
enter
sub
(bad)
shl
std
mul
cmp
jae
dec
jge
sub
in
shl
xchg
ss
and
(bad)
sti
imul
dec
xchg
or
add
add
mov
xchg
mov
fldcw
jge
cmc
push
pop
mov
sbb
scas
aam
enter
out
add
pop
or
jecxz
mov
fsub
int3
jne
fild
jnp
lea
mov
scas
(bad)
or
mov
ss
and
xor
dec
sub
mov
cwde
mov
mov
iret
add
scas
fcmove
lahf
ins
sub
jle
div
fst
ins
and
lods
xor
imul
xor
xor
jmp
sti
mov
cmp
retf
rcr
sub
and
call
les
movs
in
pusha
xchg
ins
fwait
and
fdiv
lods
or
test
aam
add
mov
movs
push
cs
shl
mov
ins
inc
sub
movs
jno
fisub
pop
(bad)
mov
aaa
popf
fmul
xor
cmp
sub
cs
jge
fucomi
dec
sbb
pop
adc
and
sub
push
or
cmp
cs
mov
rcr
mov
cmp
push
sub
outs
daa
mov
cmps
mov
ficom
mov
mov
xor
mov
mov
inc
jg
ins
scas
ins
inc
clc
sbb
lea
cs
cmp
pop
fcomp
sub
jns
mov
cs
out
mov
aas
sar
in
sbb
sub
movs
out
push
rcr
cwde
aam
(bad)
mov
cmps
cdq
xor
outs
out
jge
sub
adc
outs
fnstcw
imul
sub
add
push
cli
xor
retf
addr16
and
repz
aad
mov
pop
aaa
dec
sub
cmp
and
sub
pop
add
cld
jmp
cs
push
sub
fcomp
push
mov
push
cmc
out
push
jmp
dec
test
test
js
sahf
sub
cmps
stos
mov
sti
sub
jecxz
sbb
push
push
dec
cmps
into
leave
jmp
inc
jg
jp
cmps
mov
pop
lahf
cs
cmp
nop
push
cs
loopne
xor
dec
push
cmp
push
jnp
jne
cmp
cs
outs
adc
ins
das
cs
pop
pop
sar
neg
cli
into
dec
scas
push
lods
test
adc
push
cmp
les
cmps
push
xchg
push
sbb
mov
xchg
scas
xchg
and
mov
sbb
adc
arpl
dec
xchg
outs
push
movaps
lahf
mov
jmp
arpl
int3
mov
and
jbe
inc
(bad)
cmp
xchg
sub
push
dec
adc
mov
push
sub
cmps
jp
xchg
pop
stos
(bad)
fnsave
and
ds
adc
bound
pop
repnz
(bad)
jmp
push
ds
fiadd
xchg
aam
mov
ins
and
jnp
jp
sub
mov
movs
(bad)
dec
imul
mov
scas
cmp
fisub
retf
cmp
mov
jbe
xchg
and
mov
mov
ss
adc
mov
cmp
pop
in
pop
xchg
inc
xchg
adc
sub
mov
(bad)
sub
js
push
mov
mov
add
sbb
pop
icebp
neg
mov
aad
add
mov
inc
ss
xchg
fisttp
mov
loop
lahf
pop
test
sub
les
mov
std
sbb
push
sbb
push
pop
push
mov
ins
cwde
sub
adc
xor
or
ret
mov
xchg
jns
gs
scas
stos
jmp
stos
push
push
cmp
hlt
jecxz
cdq
dec
lahf
jno
and
lods
inc
cs
mov
fst
sbb
pop
es
popa
mov
mov
xor
fst
mov
sti
hlt
mov
sub
xchg
add
sub
shl
cs
lea
mov
(bad)
dec
outs
retf
popf
je
inc
and
aam
retf
and
and
test
les
in
sbb
adc
repz
and
or
cmps
sahf
push
inc
adc
cmp
inc
push
add
sub
push
cdq
fistp
std
out
inc
retf
adc
daa
xor
sub
test
aas
cdq
out
imul
sahf
stc
add
mov
mov
mov
mov
inc
retf
pop
xor
jp
xor
sub
bound
inc
xor
xchg
bswap
(bad)
pop
movs
cs
movs
lock
es
int3
xor
fisttp
sbb
std
mov
movs
jecxz
add
jg
add
sub
push
loope
and
out
jge
mov
pop
adc
or
mov
jne
jae
xchg
cmps
pminsw
stos
test
stc
mov
test
push
jmp
fwait
sets
ins
imul
aaa
jle
retf
test
(bad)
std
or
pop
add
xor
fcomp
call
pop
cmp
inc
push
imul
aam
cmp
retf
icebp
mov
pop
out
cmp
push
jnp
and
loop
mov
mul
jmp
dec
cs
ss
push
ja
movaps
xor
inc
xor
mov
mov
cs
scas
and
leave
sub
jb
adc
or
js
sub
(bad)
dec
ret
jns
pop
inc
pop
push
ret
stos
cmp
sbb
cs
adc
(bad)
pop
mov
int3
cs
fwait
lds
js
stos
das
scas
push
dec
into
cs
jmp
xchg
and
jmp
jp
cs
adc
daa
and
pop
cs
repnz
xchg
fst
loope
sahf
cld
rcr
adc
jg
mov
inc
fcomp
xchg
xor
and
ret
adc
and
cdq
(bad)
cmp
ins
shl
loop
xchg
stos
adc
(bad)
add
out
(bad)
push
nop
dec
int
sub
add
test
fsubr
cmp
dec
add
xchg
(bad)
push
dec
rcr
div
scas
sbb
scas
cld
ss
xor
dec
aaa
xchg
add
ficom
xor
pushf
or
add
int
out
xchg
ja
push
mov
jmp
shr
and
adc
aad
jne
xor
dec
add
(bad)
fcmovnbe
fidiv
daa
retf
in
js
pop
push
dec
sar
push
ficom
mov
aas
cs
adc
sbb
jecxz
xchg
push
je
inc
(bad)
push
aam
xchg
lock
xor
shr
mov
pop
cmp
movs
mov
lods
sar
iret
add
xchg
jno
push
std
scas
ds
cmp
(bad)
(bad)
xchg
sub
fs
jge
aaa
mov
mov
repnz
or
sub
cmc
shl
adc
lds
ja
pop
and
and
out
lea
icebp
cmp
sahf
xor
jg
out
mov
xchg
test
or
mov
imul
pop
data16
pop
cmps
cs
adc
jmp
push
bnd
pusha
adc
loopne
retf
das
mov
push
xchg
cs
dec
movs
sbb
xor
inc
sub
(bad)
imul
xchg
je
adc
lock
push
xor
stos
sbb
popf
scas
fwait
jbe
dec
add
lock
into
pop
cwde
xchg
mov
(bad)
call
call
xor
mov
jo
aaa
ficom
div
dec
cs
movs
test
inc
out
cs
cmps
es
add
sub
mov
pop
cs
pushf
int3
jp
sti
imul
int
dec
jle
mov
jno
in
xor
and
mov
mov
nop
cmps
mov
fld
loopne
add
ins
sbb
xor
(bad)
fisttp
sub
push
dec
xor
pop
xor
imul
and
dec
push
xchg
xor
jecxz
data16
sbb
int
xor
test
jle
mov
dec
xchg
imul
repnz
out
push
arpl
push
mov
into
test
mov
jno
xor
inc
les
imul
sti
ins
cwde
js
cs
(bad)
int
jle
pop
cs
arpl
or
retf
inc
loopne
js
test
pop
push
pop
mov
mov
ret
xor
scas
in
push
and
shl
pop
pop
retf
cs
cmp
sub
ss
sbb
sbb
cs
cld
loopne
and
cs
jb
stos
add
cs
adc
scas
xchg
mov
movs
sub
and
stc
sar
add
mov
cmp
sbb
sub
dec
mov
sbb
xor
sbb
mov
fs
cdq
stc
push
icebp
cs
das
aam
cmp
dec
inc
jae
mov
push
lds
cs
cmc
add
jp
sub
clc
rcl
push
icebp
mov
sub
test
fdivr
test
dec
cs
cdq
push
pushf
dec
rol
int3
cs
mov
neg
movs
repz
push
(bad)
sub
or
dec
scas
scas
cmp
mov
cmp
scas
push
dec
inc
jl
out
mov
adc
mov
cs
pop
ja
pop
dec
(bad)
xor
fdivr
jp
out
sbb
cmps
add
pop
in
stos
div
stos
mov
pusha
mov
leave
mov
mov
mov
lds
les
lahf
sbb
shr
icebp
add
push
add
daa
loopne
int
jg
pop
stos
cs
scas
(bad)
push
rol
pop
not
adc
sub
ret
out
pop
fidiv
(bad)
sub
xor
adc
(bad)
sahf
sub
fild
inc
cmps
(bad)
pushf
mov
xchg
loop
sub
jns
es
sahf
mov
int
ss
or
sub
test
(bad)
fisub
push
xlat
mov
fisttp
pop
aas
arpl
dec
push
jmp
jl
jle
sbb
jmp
out
nop
xor
xchg
sahf
ficom
mov
sbb
and
xchg
je
jnp
jb
out
mov
mov
dec
ja
jg
data16
dec
mov
push
adc
test
sti
cmps
jge
cmp
das
adc
push
inc
and
sub
cmp
imul
test
fs
(bad)
dec
cmp
mov
cs
rol
push
pop
cmp
mov
data16
(bad)
gs
jmp
icebp
fldenv
scas
sbb
cs
push
jmp
sub
push
in
cs
clc
mov
(bad)
jecxz
loopne
add
mov
cmp
stc
popa
jmp
mov
cs
cmp
cmp
xchg
xchg
or
jnp
cmc
fsub
test
and
mov
(bad)
loope
or
add
aas
mov
sub
mov
test
sub
repz
jmp
push
and
ret
jb
push
sub
mov
aad
push
cli
test
enter
mov
out
mov
jl
test
(bad)
cmp
cmps
cs
test
xor
jnp
sbb
fcmovbe
dec
(bad)
in
dec
mov
pop
loope
dec
js
mov
into
inc
cwde
adc
int3
ss
jecxz
or
or
jns
mov
enter
add
test
push
ja
inc
popa
nop
mov
loop
xchg
(bad)
iret
cmps
leave
fadd
out
repz
mov
dec
xchg
ja
xlat
jle
movs
aas
add
test
cli
and
(bad)
pop
(bad)
cld
mov
lods
jmp
or
ss
sub
fstp
ds
adc
cs
and
leave
push
dec
scas
push
jne
mov
bound
outs
push
pusha
sub
sub
xor
sbb
adc
xchg
sar
repnz
shl
das
cs
ins
(bad)
scas
test
les
cld
or
imul
inc
push
jbe
cmp
ins
aaa
cs
test
pop
movs
pop
cs
cwde
push
push
fisub
xor
xchg
fwait
ds
popa
(bad)
call
jae
push
dec
cmp
jmp
mov
retf
inc
fldcw
test
scas
dec
mov
pop
cmp
dec
iret
cwde
stos
jecxz
inc
inc
lods
pop
bound
dec
out
std
cmp
inc
or
mov
xor
dec
popf
outs
ds
mov
xchg
jmp
das
(bad)
jo
dec
out
addr16
dec
push
push
and
cmp
pusha
outs
cs
mov
sub
stc
mov
mov
mov
(bad)
retf
cs
mov
mov
xor
pushf
pop
and
and
jmp
mov
mov
inc
xor
leave
pop
arpl
pop
jle
(bad)
mov
imul
scas
xor
stc
inc
les
push
push
pusha
cmp
adc
and
add
out
or
call
jb
aas
jg
std
or
cmp
hlt
outs
shl
cs
iret
(bad)
xor
dec
outs
and
daa
call
mov
or
cmp
push
repz
stos
ret
xor
xor
inc
sbb
hlt
scas
fsubr
and
and
cmp
lods
fdivr
pop
and
sti
xchg
das
xchg
ja
gs
xor
iret
mov
inc
adc
inc
stc
cs
cwde
xor
add
into
ret
cs
mov
cmp
in
dec
add
pop
aas
xchg
sbb
imul
pop
xor
out
push
push
dec
mov
cmp
cdq
int
xor
xchg
ret
jmp
adc
add
mov
cmp
arpl
retf
loope
dec
popa
lds
dec
jo
xchg
pusha
mov
xchg
xor
js
stos
mov
adc
call
pushf
xchg
fwait
dec
test
sbb
or
push
shl
sub
cmc
push
mov
call
out
mov
shr
adc
(bad)
or
push
mov
sbb
inc
fadd
cmp
mov
push
or
leave
shl
sti
sub
mul
push
add
iret
adc
cmp
jne
ret
enter
call
inc
stos
mov
mov
sub
ficomp
outs
popa
push
push
cmps
dec
fisubr
push
jae
push
call
or
js
cmp
mov
test
pop
dec
lock
mov
mov
xchg
xor
pop
dec
popa
pop
lock
repnz
aad
xlat
cmc
(bad)
fdiv
push
lods
sub
mov
push
dec
imul
adc
pop
gs
in
cmp
xchg
sub
add
call
xor
sbb
pusha
test
leave
add
nop
fldcw
in
or
xchg
out
cmps
push
inc
push
push
ins
pop
lahf
sub
push
and
dec
(bad)
jno
outs
xor
ret
test
and
add
fsubr
xchg
enter
lahf
cs
lds
cmp
mov
sub
cs
stos
pop
xchg
je
jne
cmp
call
mul
aas
arpl
jo
push
jmp
mov
outs
in
scas
mov
xor
cs
xchg
sbb
mov
nop
rol
test
xor
jbe
adc
cs
int
xchg
xchg
pushf
ss
sbb
pop
push
dec
ds
into
xor
sub
push
sub
iret
mov
adc
cmp
dec
mov
cmp
xchg
adc
push
xchg
jo
nop
jb
ret
daa
std
sar
adc
jp
xor
ins
cmp
in
test
cmps
mov
fimul
push
push
dec
push
aaa
cs
push
dec
ret
push
inc
mov
xor
push
push
pop
and
push
pop
lods
scas
sub
aaa
js
hlt
clc
enter
in
stc
mov
stos
mov
rep
mov
push
xor
xor
ins
cmps
mov
cmps
dec
ds
inc
push
or
popa
adc
sbb
popf
cs
cmp
xlat
fild
xor
js
cs
movs
jmp
adc
ins
(bad)
inc
fdivr
dec
xor
outs
inc
adc
daa
or
jo
cmp
shr
daa
add
loope
aad
mov
repnz
jb
mov
mov
std
mov
sbb
(bad)
scas
jle
nop
cwde
fidiv
mov
outs
popa
rcr
pop
out
sub
cld
fcomp
cs
les
push
xchg
mov
fidivr
cwde
out
daa
sar
repnz
inc
(bad)
mov
mov
(bad)
shr
movs
je
sbb
mov
out
nop
jne
adc
inc
cs
int3
or
push
cs
xchg
test
outs
es
dec
jmp
and
inc
mov
fsubr
in
imul
imul
inc
inc
idiv
icebp
lock
cs
push
lahf
aam
cmp
or
sbb
jns
push
add
cs
mov
idiv
add
test
test
int3
aaa
fld
cmps
pop
mov
fsubr
mov
pushf
jg
jb
int3
cs
sub
jnp
xor
mov
outs
and
jmp
in
sub
xchg
lods
xor
add
pop
fdiv
call
repz
and
fisttp
add
aas
xchg
xchg
jmp
jmp
xor
mov
leave
cmp
fild
call
and
into
cs
iret
gs
xchg
add
out
mov
outs
and
gs
and
or
sub
les
jmp
mov
inc
xor
xchg
cwde
mov
cmp
daa
cs
mov
in
add
gs
xor
xchg
inc
ror
mov
push
push
lock
fstp
test
scas
add
xor
mov
or
jg
leave
cdq
shl
cld
scas
inc
sbb
xor
cs
int3
rcl
push
lods
mov
pop
fadd
cli
adc
xor
or
fcomi
ins
sbb
movs
cmc
pop
xchg
inc
dec
aad
cs
shr
sti
push
jecxz
pop
mov
imul
mov
mov
cwde
das
xor
sub
mov
cli
mov
jno
xor
loope
cs
js
fld
mov
pop
aad
dec
addr16
inc
je
pop
mov
add
fisttp
jle
(bad)
sti
ror
pop
cs
int3
int
sub
or
cmps
movs
xor
(bad)
rol
push
inc
retf
iret
into
out
leave
arpl
out
dec
mov
inc
(bad)
jbe
lock
leave
sbb
mov
xor
ja
in
daa
cli
out
div
add
(bad)
push
data16
aaa
aaa
into
das
cwde
or
mov
pop
cmp
ret
and
lods
repz
fmul
mov
(bad)
leave
daa
das
mov
cmps
shl
jbe
lds
fcomp
(bad)
out
dec
jmp
sub
frstor
jmp
xor
mov
repnz
scas
in
imul
in
inc
push
inc
push
sbb
leave
mov
fimul
mov
jo
aad
fisttp
mov
cmp
es
test
lods
mov
push
cmps
jp
pop
and
adc
div
iret
inc
cmp
mov
(bad)
leave
jge
cmp
sub
out
inc
mov
fcom
mov
push
test
cli
lods
(bad)
jnp
or
cmps
mov
clc
scas
mov
call
inc
div
mov
add
frstor
data16
pop
cmp
mul
add
pop
jno
jns
(bad)
stos
mov
in
fnstcw
sbb
fdivr
xlat
(bad)
pop
xor
mov
mov
sahf
sub
stos
in
jo
es
sub
shl
mov
push
fdivr
std
push
xor
popa
lock
sub
sbb
mov
cmps
cdq
stc
stos
add
pop
fcmovu
fmul
vandnps
add
add
(bad)
int3
add
add
mov
pop
ins
and
pop
xor
dec
push
jb
jmp
xchg
mov
hlt
mov
lods
test
cmps
jecxz
adc
imul
sub
fdivrp
jmp
(bad)
stc
in
mov
and
xchg
mov
lds
popf
std
mov
add
mov
xchg
cmp
pop
push
cmp
xchg
cs
call
repz
ss
xor
mov
ret
xor
aas
and
or
mul
dec
daa
fs
sti
mov
out
mov
push
sahf
cs
adc
(bad)
sub
dec
mov
lock
jns
in
aas
fwait
or
xchg
in
sbb
dec
jns
cmp
adc
jbe
push
xor
mov
cvtps2pi
cwde
push
sub
xlat
nop
dec
push
cmps
sbb
cs
pusha
outs
shl
or
call
mov
sbb
add
in
lods
fisubr
ror
mov
mov
cdq
in
xor
push
dec
xchg
aas
arpl
mov
pop
mov
sahf
bound
sbb
mov
adc
in
sbb
aaa
out
out
cmp
and
inc
cmp
mov
aas
and
mov
sub
or
fstp
or
cs
sub
nop
je
xchg
ror
push
inc
sub
fldcw
adc
jbe
das
ret
lea
lds
mov
cs
jmp
jge
in
cmp
lods
mov
cs
add
gs
fcom
popf
clc
push
cs
cli
lds
jb
dec
push
sub
aaa
add
mov
xchg
ret
xchg
enter
scas
lahf
and
ins
mov
push
or
lods
dec
mov
nop
imul
fdiv
outs
xchg
jb
popf
ret
pop
(bad)
mov
dec
sar
cmps
mov
adc
test
(bad)
call
dec
sub
mov
ret
cmp
ret
dec
sub
push
ins
pop
icebp
inc
scas
jl
leave
ss
cld
fnstenv
push
cmp
add
sbb
adc
jae
mov
cli
and
or
mov
ret
fidiv
sub
fs
leave
aas
sub
test
test
js
sub
das
mov
nop
call
mov
scas
aas
movs
xor
mov
xor
jmp
popf
or
push
mov
loopne
sub
test
sbb
xor
dec
inc
xor
mov
xchg
push
add
pop
dec
mov
or
mov
jmp
jmp
xor
and
push
add
ins
cmps
sub
xor
jbe
jecxz
sub
lock
xchg
ja
out
xor
(bad)
xchg
(bad)
leave
cdq
sub
cmp
sbb
lahf
mov
xchg
ret
lahf
cvtps2pd
mov
(bad)
fadd
mov
sub
movs
sub
aad
loopne
sub
sbb
jmp
and
lods
outs
mov
push
outs
fmul
mov
sbb
lock
xor
in
adc
inc
jge
scas
in
mov
stos
jmp
push
or
das
js
pop
in
out
ror
push
nop
mov
gs
adc
mov
add
(bad)
mov
fadd
and
or
fwait
movs
cmps
pop
(bad)
jmp
lock
mov
iret
xor
stos
aaa
dec
inc
jge
das
les
(bad)
jle
std
shl
fucom
fimul
outs
mov
and
fadd
sahf
sub
lods
test
pop
mov
sub
aam
enter
lods
mov
push
push
xor
jp
dec
xchg
mov
pop
aad
xor
call
pop
and
aam
mov
ss
je
mov
push
mov
pop
cwde
pop
jle
aaa
retf
xor
jg
or
dec
cmp
mov
outs
fisub
cmp
push
xchg
out
mov
leave
cmc
fld
cmp
xchg
inc
jl
cs
adc
leave
call
mov
test
cmovbe
mov
xor
xchg
les
inc
cs
out
test
lods
lds
jg
out
cld
sub
sbb
loopne
dec
inc
inc
jle
dec
mov
stos
sbb
lock
aaa
loopne
dec
sar
cmp
sub
sbb
mov
jb
(bad)
jge
mov
or
xchg
ss
popf
mov
ss
sub
ins
loop
cmps
sbb
or
scas
ja
ins
cmp
icebp
or
and
fdivr
aam
(bad)
sub
in
das
out
add
dec
ins
sub
nop
aam
dec
cmps
hlt
sti
mov
test
ja
dec
call
(bad)
push
pop
fbld
mov
mov
mov
sub
cmp
movs
retf
adc
movs
or
cs
mov
cmp
add
adc
or
(bad)
into
and
daa
in
sub
or
popa
sub
xchg
mov
xchg
mov
(bad)
or
or
dec
scas
hlt
cwde
aad
xor
dec
and
or
int3
repz
sub
lods
cs
stos
jb
cwde
pop
call
mov
push
jle
and
push
scas
jg
ss
cmp
(bad)
xor
popa
adc
ds
sbb
inc
cs
jo
pop
mov
outs
add
in
(bad)
cmp
push
and
not
adc
push
movs
into
test
jbe
stos
outs
lahf
out
push
cmp
cs
mov
lock
ss
cmps
pop
nop
retf
inc
mov
icebp
mov
aas
pop
adc
adc
scas
fmulp
ficomp
inc
sub
push
cli
cs
adc
frstor
sub
mov
sub
xor
add
mov
pop
or
adc
adc
pop
and
push
mov
push
inc
fst
mov
mov
dec
call
inc
adc
xor
add
dec
cs
sbb
inc
retf
frstor
in
xchg
pop
dec
push
pop
pushf
mov
gs
into
jp
jl
mov
aam
(bad)
lea
jcxz
les
cmps
pop
jg
xor
jbe
add
cs
mov
ret
xor
push
test
xor
out
sub
mov
dec
jl
pushf
div
mov
aam
xor
stc
mov
mov
adc
or
imul
pop
fist
lock
push
nop
adc
mov
xor
daa
fimul
inc
cs
inc
sub
shr
and
aas
pop
dec
imul
cwde
jp
out
pusha
sbb
mov
fstp
adc
lods
adc
movs
inc
ret
cs
jg
cmp
xchg
in
xchg
popa
bnd
lds
xor
push
scas
pcmpeqd
mov
xor
jmp
jl
xlat
dec
shr
cs
or
bnd
cs
popa
(bad)
aad
mov
nop
ret
fcom
stos
and
test
ss
das
fwait
je
xchg
or
sub
stos
inc
dec
test
sbb
sub
or
popf
dec
jmp
lods
mov
mov
(bad)
pushf
or
ins
sahf
dec
mov
mov
xlat
mov
out
and
push
cs
(bad)
movs
and
inc
and
inc
cs
cmps
icebp
fmul
fisubr
test
sbb
int3
cmp
bound
cs
dec
idiv
adc
mov
push
add
push
jmp
mov
sub
add
stos
push
add
mov
cmp
or
mov
fist
lea
add
jmp
js
daa
push
push
pop
push
jne
(bad)
and
dec
ret
or
sub
xchg
das
and
fs
sub
jp
sub
mov
mov
pop
sub
push
icebp
sub
fild
xchg
dec
pop
adc
jp
adc
outs
fwait
ins
sbb
int3
push
jo
cmp
add
dec
adc
cs
dec
movs
xchg
test
call
pop
enter
adc
lods
scas
push
mov
arpl
push
dec
or
jae
cmp
fnstenv
jmp
push
stos
jmp
jo
or
xor
sub
cld
jmp
mov
out
push
retf
xlat
xchg
stc
cs
aad
cmp
les
mov
das
mov
test
mov
jg
cmp
aam
out
push
push
or
mov
sbb
or
and
jg
(bad)
cs
cmp
mov
inc
inc
into
(bad)
mov
cmc
data16
xchg
sar
(bad)
cmp
cmp
mov
dec
or
pop
add
xor
or
aad
mov
mov
and
fdivrp
push
js
gs
add
jecxz
fidivr
ficom
imul
jae
mov
dec
sub
scas
rcr
push
jmp
xchg
mov
shl
jge
ins
or
pop
sbb
push
sbb
daa
mov
inc
xchg
(bad)
repz
jb
adc
outs
sbb
fwait
inc
mov
xchg
inc
xor
cs
mov
fistp
imul
jge
xor
cs
push
pop
push
sub
mov
cs
add
or
mov
jg
daa
test
imul
ret
fisubr
push
dec
dec
adc
jne
sbb
repnz
das
jns
and
jmp
sbb
pushf
mov
clc
jbe
mov
push
or
jg
or
xor
or
retf
jle
loop
sti
sub
in
push
and
inc
daa
fs
dec
adc
icebp
cmps
bound
xor
lahf
(bad)
test
mov
hlt
xor
test
scas
sahf
jmp
pop
push
xchg
sub
and
dec
pop
lds
imul
inc
inc
mov
je
jbe
sub
nop
(bad)
push
leave
rcl
adc
jle
stos
mov
and
sub
lock
ror
mov
inc
movs
sub
sar
push
ss
jmp
push
pop
pop
or
fsub
pop
mov
and
not
xchg
add
fldcw
fs
icebp
nop
ds
mov
sub
cdq
test
mov
xor
sub
pop
icebp
sbb
loopne
in
out
fsubr
mov
call
mov
lock
jbe
ja
fxch
aaa
sti
dec
sub
sbb
test
xchg
repz
inc
clc
movs
mov
and
ret
xlat
jne
dec
outs
(bad)
adc
and
jp
push
loopne
adc
pop
repnz
sub
xor
jmp
dec
mov
ret
mov
mov
pop
push
add
inc
mov
sub
push
ins
js
(bad)
pop
xor
leave
jg
xor
test
outs
push
add
cs
pop
xchg
js
fisub
or
dec
xchg
ror
mov
cs
or
hlt
test
jmp
jle
xor
and
enter
into
dec
repnz
test
cmp
jb
loope
lea
hlt
cli
push
sub
mov
cs
push
xchg
(bad)
jo
pop
mov
aam
shr
mov
fs
je
enter
fadd
push
iret
sahf
mov
cmp
jns
and
pop
cs
sbb
rcl
nop
imul
cmps
jae
xor
push
ret
sbb
mov
pop
pop
xchg
sub
cmp
shl
call
cmc
shr
xor
jbe
jb
imul
hlt
movs
inc
jo
pop
xchg
cs
cmps
jne
outs
cs
test
xchg
test
nop
mov
cs
jb
sub
xor
push
mov
xchg
shl
sti
shl
(bad)
pop
jbe
push
sub
inc
fstp
sbb
mov
aad
(bad)
ss
mov
(bad)
jo
mov
sub
xor
jp
outs
mov
aaa
mov
shr
mov
imul
sbb
mov
push
ds
jl
add
std
dec
dec
cwde
sti
pop
sbb
inc
dec
outs
loopne
mov
jmp
push
inc
ret
push
xor
xor
lods
add
inc
cmp
sub
shl
lock
dec
(bad)
call
add
in
fcmovb
popf
les
dec
pop
je
jno
shl
push
std
mov
dec
mov
mov
and
adc
dec
adc
xchg
mov
fwait
sti
sahf
mov
xchg
push
mov
clc
or
xor
inc
xchg
sbb
sbb
pop
(bad)
test
icebp
out
cmc
sub
fist
(bad)
inc
push
jae
xor
adc
(bad)
stos
test
sbb
pushf
pop
cmp
mov
xchg
(bad)
adc
add
mov
mov
out
icebp
inc
arpl
retf
add
inc
ja
imul
mov
bound
push
outs
js
mov
cwde
and
and
inc
(bad)
jmp
sti
add
in
icebp
test
fisttp
push
test
pop
pop
add
leave
out
mov
icebp
sahf
sub
and
hlt
popf
pop
shr
and
or
mov
in
inc
lds
rcl
jge
and
out
aaa
aas
mov
jmp
or
sub
idiv
sub
add
mov
bound
int
xchg
fcmove
sub
sahf
cmp
mov
cmp
jl
test
mov
test
sbb
loopne
lahf
mov
mov
xchg
pop
out
jns
cwde
inc
dec
mov
mov
clc
xchg
xor
sti
test
sub
fidivr
sbb
mov
das
mov
data16
test
sbb
cmps
inc
xchg
pop
in
dec
outs
nop
dec
mov
(bad)
mov
mov
and
call
adc
adc
ss
scas
ror
inc
inc
adc
in
aaa
inc
outs
push
xor
repz
mov
int
push
sbb
pop
and
scas
pop
into
sub
fsubp
cs
or
popa
cs
movs
icebp
pop
adc
mov
or
fist
pop
push
cmps
xor
pushf
fisubr
les
sub
and
call
(bad)
retf
cs
outs
push
pop
test
mul
xor
jnp
xchg
push
adc
sbb
dec
(bad)
out
adc
out
(bad)
xor
pop
xor
mov
xchg
push
rcr
enter
cs
imul
mov
call
repnz
or
inc
dec
loope
inc
sub
xchg
std
out
and
retf
ret
scas
je
cs
xor
mov
pop
xchg
pop
xlat
xor
push
retf
lods
dec
push
inc
hlt
shl
xor
jmp
mov
cs
add
xchg
or
leave
div
xor
lock
and
ds
jne
(bad)
fsubr
mov
lds
js
pop
xchg
popa
sbb
cmp
mov
cmp
sub
jp
adc
push
mov
sub
pop
jns
xor
add
arpl
or
shr
into
cs
test
push
dec
leave
in
and
mov
inc
mov
cmps
mov
movs
pop
xor
jne
ret
push
xor
std
or
pop
cmps
je
in
cs
mov
sbb
sti
jb
ret
xor
push
mov
(bad)
cmp
daa
int3
pop
mov
jae
inc
retf
cmp
push
loopne
cs
sub
cmp
xor
lods
inc
add
dec
lds
push
fwait
js
adc
outs
sahf
push
sub
dec
push
xchg
int
out
or
loope
int3
cs
pusha
(bad)
jp
cs
in
pop
imul
shl
adc
mov
xor
sar
leave
mov
xor
adc
ret
les
shr
jae
push
test
lods
cmp
ja
inc
xor
inc
mov
sti
dec
sbb
int
lds
and
mov
and
scas
inc
xlat
and
out
dec
loop
stc
dec
mov
test
(bad)
std
call
leave
es
push
(bad)
shl
test
es
xor
popa
arpl
mov
inc
xor
sub
cwde
pop
out
mov
xchg
rcl
leave
in
inc
clc
xchg
sub
xor
loope
sub
rol
scas
pusha
sbb
adc
dec
mov
bound
sbb
fdivr
mov
test
inc
or
jecxz
fld
adc
mov
in
jmp
out
in
mov
xor
cdq
cmp
sub
test
xor
es
retf
mov
add
cmp
xor
ror
outs
adc
cmovbe
leave
mov
sahf
nop
mov
add
ins
scas
or
sub
cli
leave
pop
push
jge
xchg
add
mov
mov
fild
jmp
push
ss
jg
lds
aad
sub
sub
or
movs
(bad)
jmp
mov
test
jle
and
stos
push
mov
vpcmpgtb
dec
xchg
repnz
fstp
icebp
pop
push
jnp
mov
cmp
xchg
or
retf
dec
adc
mov
cmc
sahf
cdq
leave
or
dec
(bad)
mov
clc
dec
cwde
es
mov
jo
and
fisttp
xchg
retf
rol
ror
mov
mov
mov
retf
cmps
push
sub
div
mov
outs
jp
sub
cli
jl
xor
jge
movs
imul
sahf
dec
rol
add
add
aas
mov
dec
dec
mov
in
or
jle
imul
ja
shr
out
pop
fcomp
mov
or
(bad)
push
mov
into
adc
cmps
mov
cmps
leave
mov
out
push
movs
out
inc
cmp
push
adc
in
scas
pushf
inc
enter
jle
aam
lea
arpl
jmp
mov
movs
jnp
sub
push
sub
cmc
int3
ins
ds
inc
or
jg
pop
adc
shr
sub
mov
xchg
ret
or
xchg
inc
or
cmp
mov
pop
push
jp
shl
fsubr
fs
or
test
lds
and
and
mov
fucomip
cdq
leave
jmp
loopne
cmp
(bad)
fimul
jg
in
test
in
mov
sbb
mov
push
xor
xor
stos
xor
test
sub
fistp
adc
mov
out
aas
scas
cld
and
xchg
fs
outs
aad
push
ret
jb
mov
andnps
arpl
mov
and
imul
cmp
lock
or
push
mov
js
movs
or
imul
shr
jae
or
inc
mov
daa
cdq
and
sub
cmp
push
(bad)
fsubp
sbb
sti
out
sub
or
push
or
dec
and
in
call
jno
lahf
clc
push
and
ret
cs
pop
xor
jb
jg
mov
punpckldq
scas
sbb
scas
xor
es
(bad)
(bad)
aad
out
cmp
fwait
daa
fsub
das
lods
in
push
loop
add
pusha
sbb
push
push
scas
lods
das
mov
ss
pushf
out
(bad)
sbb
lar
jo
cmp
gs
lds
stos
or
pop
sbb
xchg
cs
movs
cmp
sub
cli
ins
inc
cs
mov
cs
clc
push
adc
or
or
mov
in
outs
rcl
jl
iret
jbe
add
shr
mov
jmp
repnz
out
mov
add
rol
xchg
stos
in
(bad)
fistp
mov
adc
ror
and
dec
pop
js
add
daa
inc
sbb
fild
xor
or
pop
pop
sub
ret
jbe
es
cs
scas
push
pop
or
(bad)
push
sbb
xchg
movs
in
adc
div
out
movs
in
mov
fdivrp
mov
adc
xchg
xor
shl
pop
emms
mov
and
in
xor
test
xor
nop
sti
mov
aad
lds
enter
lock
or
into
(bad)
xchg
push
ss
ret
jg
cli
push
jl
pop
and
nop
push
cmps
mov
xor
repz
aaa
mov
pop
xlat
cmp
jne
addr16
inc
add
cld
add
or
cmp
or
dec
lods
pop
inc
xor
gs
scas
aas
arpl
into
cmps
in
pop
repnz
mov
inc
mov
ins
and
cs
push
push
pop
mov
ror
add
cmp
cs
ss
inc
jge
rol
rol
or
pop
sbb
in
push
fst
push
adc
(bad)
in
jmp
(bad)
cmps
xor
push
pop
icebp
push
adc
jno
daa
mov
shr
test
ret
xchg
call
cs
int3
cs
xor
ss
or
pop
mov
test
in
mov
pop
popa
cs
push
adc
repz
push
jmp
daa
out
xor
(bad)
movs
pop
repnz
push
and
popf
aad
fs
scas
cmp
call
sub
and
xor
pushf
push
cmc
dec
cs
adc
in
repz
sub
cwde
pushf
or
cdq
lea
xor
jle
ds
adc
ins
jp
dec
pop
mov
sub
xlat
add
cmc
sbb
mov
ss
inc
mov
push
add
adc
push
loope
dec
leave
(bad)
hlt
popf
sub
div
cmp
out
xchg
lods
neg
sub
in
test
cmp
mul
xor
lds
enter
cmovl
scas
je
imul
push
or
add
jo
cmp
sub
aaa
js
fs
mov
push
dec
mov
call
mov
xor
xchg
fwait
das
outs
inc
fcmovbe
stos
daa
fdivr
and
push
into
(bad)
fcomp
cs
pop
movs
mov
cli
cmps
mov
mov
nop
hlt
(bad)
or
test
pushf
sbb
aad
not
jb
scas
inc
shl
fmul
dec
mov
in
mov
add
mov
adc
rcr
or
sub
nop
add
add
(bad)
mov
jns
fimul
inc
xor
fild
unpcklps
daa
xchg
jne
scas
clc
pop
lods
loopne
xor
push
mov
int
lea
popf
cs
xchg
push
adc
mov
sbb
xchg
push
sbb
ins
mov
push
push
cs
mov
jl
xor
lods
nop
popf
test
(bad)
in
daa
ins
add
lods
sub
imul
add
cs
mov
mov
push
adc
dec
(bad)
mov
mov
icebp
popf
outs
cmc
pop
dec
inc
pop
add
ds
and
jne
lea
cmc
daa
cmp
pop
adc
push
and
cs
sbb
(bad)
xchg
push
adc
sbb
nop
into
loopne
cs
in
mov
and
lods
lds
into
mov
fild
gs
jae
xchg
movs
jno
cmc
lods
pop
mov
test
adc
test
fwait
xor
sub
sti
mov
add
mov
pop
test
daa
jns
aam
and
jecxz
dec
sub
inc
or
or
mov
mov
sub
out
push
test
or
daa
push
adc
mov
jle
dec
aas
sbb
push
xor
movs
shl
scas
xchg
fld
or
sub
in
les
pop
lea
xor
loopne
ffree
fld
cmps
xchg
mov
ret
pop
imul
fs
xor
push
enter
sbb
sub
push
pop
inc
jb
ins
jmp
rcr
mov
popa
adc
pop
pop
cs
or
sbb
sub
xor
pop
mov
or
fisub
lods
add
dec
sub
ds
pusha
add
aas
cwde
das
int3
pop
out
rcr
daa
mul
scas
pushf
mov
cli
or
ins
cs
sbb
das
xchg
mov
repnz
test
daa
jmp
jecxz
fidivr
pop
adc
les
(bad)
call
or
in
aas
jecxz
(bad)
pop
cmp
jg
out
std
dec
(bad)
cs
push
inc
dec
sub
inc
xor
and
scas
sbb
xchg
lea
iret
mov
in
loop
xchg
cmp
sub
xchg
ret
xchg
stos
mov
scas
test
cs
clc
xor
and
stos
mov
inc
jno
push
outs
xor
mov
cs
push
bound
sub
imul
pop
cs
hlt
adc
cs
(bad)
mov
out
movs
mov
loopne
retf
xor
xor
pop
and
test
lahf
out
(bad)
lods
in
(bad)
nop
fldl2e
dec
fcmovb
sbb
dec
sbb
ins
and
scas
cmps
push
dec
sbb
adc
adc
jmp
mov
out
cs
retf
loope
and
dec
sbb
dec
push
(bad)
das
scas
mov
movlps
cs
fwait
jl
pop
inc
add
jle
mov
fstp
pop
cmp
cs
(bad)
retf
xor
mov
iret
mov
lea
push
mov
mov
jmp
mov
add
cs
jg
out
frstor
movs
sub
or
xor
std
ins
mov
xchg
jno
adc
add
je
ins
sbb
cli
lahf
popf
mov
mov
xchg
daa
xchg
cmps
xor
js
pop
jmp
mov
dec
jns
sbb
popa
cmps
cs
inc
pusha
push
loopne
and
adc
movs
and
xor
jl
outs
cmps
add
cmp
bswap
(bad)
adc
inc
cs
xor
leave
or
mov
test
into
add
test
sbb
out
or
pop
gs
icebp
fdiv
sub
call
sbb
or
dec
das
scas
aas
mov
jae
in
xchg
jle
pop
leave
je
repnz
(bad)
in
shr
ret
pop
shl
and
xchg
push
push
inc
outs
cs
mov
vshufpd
xor
add
sbb
jne
mov
add
loop
call
fadd
addr16
jmp
inc
adc
dec
aas
or
inc
mov
ret
out
lods
jne
shl
mov
pop
loopne
pop
pop
je
xchg
cmps
gs
jbe
mov
shl
pop
out
push
pop
push
cs
adc
inc
cmps
or
push
mov
scas
test
adc
cs
add
adc
xor
adc
pop
xor
sub
mov
adc
cmp
ds
out
fild
aaa
push
or
sahf
sbb
icebp
pop
pop
sub
mov
mov
push
cs
nop
or
gs
out
push
scas
jno
lds
mov
sti
jbe
test
pop
fs
xchg
cs
sbb
mov
sub
neg
inc
int3
xlat
rcl
mov
(bad)
test
ret
(bad)
push
mov
retf
pop
and
(bad)
cld
mov
push
cs
test
xchg
fsubr
xchg
mov
sahf
in
mov
dec
imul
ins
pop
pop
mov
push
es
pusha
jl
dec
jbe
xor
sub
push
adc
push
ins
xchg
adc
aad
sahf
and
inc
xor
jge
add
mov
mov
pop
ins
cmp
jns
daa
ret
mov
fistp
out
int3
gs
pop
push
jne
sbb
mov
mov
cmps
mov
fsub
daa
(bad)
ins
mov
jg
ja
push
xor
les
into
xchg
jno
sub
rcr
mov
cs
sub
cmp
rol
pop
mov
mov
cwde
and
xor
in
inc
cs
aad
nop
add
cs
and
daa
pop
inc
mov
mov
xor
jle
bound
sub
shl
lods
jne
scas
fisub
xchg
xor
arpl
push
sbb
dec
fwait
jno
jnp
cmp
and
inc
mov
mov
std
jl
test
mov
(bad)
out
jno
sar
mov
lea
rol
push
mov
stos
pop
push
retf
xlat
icebp
xchg
aad
jmp
fxch
scas
mov
out
jp
jle
and
sub
leave
bound
shl
data16
(bad)
shr
loope
ins
test
imul
mov
mov
call
sbb
pop
add
jns
mov
ror
xchg
xchg
pusha
lods
hlt
fcomp
adc
test
ja
push
push
mov
pop
cs
ds
imul
dec
int3
loopne
xchg
sub
and
xchg
fld
sti
mov
add
mov
add
out
enter
adc
aam
push
shr
add
sbb
mov
jle
dec
and
cs
pop
pop
push
or
mov
ds
mov
(bad)
xlat
call
adc
cmp
outs
xor
cs
loopne
mov
or
jne
inc
adc
and
ret
and
daa
mov
sub
repz
out
add
mov
push
push
daa
xchg
push
shr
mov
mov
das
je
sub
test
test
dec
(bad)
pop
pop
pusha
dec
cs
push
ins
call
xor
retf
xchg
dec
pop
sub
jne
cmp
out
jae
push
in
cs
push
sbb
adc
cmp
pop
or
dec
test
mov
popa
cs
push
dec
sub
pop
push
cs
das
inc
xor
jmp
and
cmp
(bad)
dec
sub
or
jbe
xsaves
stos
clc
cs
mov
lods
xor
sbb
and
dec
cs
sti
not
jmp
les
nop
test
jmp
and
ret
inc
scas
mov
jne
scas
sub
fidiv
xchg
fnstenv
jecxz
je
pop
imul
mov
(bad)
stos
addr16
cmp
cmp
fisttp
jbe
aas
mov
daa
inc
into
sub
xchg
aad
loop
pushf
cdq
pop
adc
mov
jecxz
jb
cmp
ror
xchg
dec
into
lahf
jb
inc
ror
retf
nop
popa
push
dec
push
push
xchg
push
pop
or
or
jg
cs
mov
mov
cs
mov
lock
jb
bound
shr
xchg
push
leave
out
les
and
xor
into
mov
or
push
fs
outs
jnp
cs
aad
xchg
in
test
mov
out
mov
jbe
mov
in
stos
add
xchg
(bad)
cs
dec
sar
mov
aas
sub
fdivr
adc
xor
fistp
xchg
cs
dec
std
cli
ficom
in
mov
sbb
push
mov
lods
scas
fisub
adc
push
ror
push
pop
(bad)
(bad)
jecxz
out
clc
test
ret
mov
cmp
cs
jb
call
xor
jne
pop
mov
(bad)
test
jmp
das
scas
in
sub
push
xchg
add
push
add
(bad)
cmps
cdq
inc
inc
sahf
cmp
adc
push
int
cmp
out
fadd
adc
scas
add
imul
xor
popf
xor
es
sbb
cwde
fsub
sub
adc
pop
repnz
scas
push
pusha
and
sahf
mov
dec
xchg
aam
cdq
outs
imul
lds
mov
loopne
cs
sti
in
xor
sbb
xor
or
mov
repnz
ins
dec
nop
cs
add
push
and
mov
push
mov
test
push
dec
inc
push
inc
ret
dec
mov
mov
mov
xlat
icebp
aam
ror
loope
out
mov
xor
clc
cmp
in
adc
outs
cs
sti
xlat
lods
dec
(bad)
popf
xor
inc
movs
mov
fimul
fnstcw
repz
adc
fwait
and
mov
lds
and
push
or
outs
pop
adc
xor
stos
xor
or
adc
pop
cwde
ins
jl
sbb
leave
cs
sbb
push
ins
adc
iret
jg
and
push
jp
pop
leave
adc
jge
cmp
sub
jbe
adc
sub
repnz
cs
cmp
imul
dec
shl
mov
test
cs
jmp
push
int
jp
xor
outs
xchg
fstp
jmp
sub
pop
inc
outs
(bad)
fsubr
mov
pop
(bad)
mov
cmp
cmc
mov
mov
cs
adc
rcl
and
cs
iret
enter
push
cs
pop
int3
repz
into
inc
cs
push
sbb
and
and
add
xor
call
push
into
cmp
outs
xchg
or
mov
loop
add
xor
sbb
shl
jno
push
xchg
and
(bad)
iret
loop
push
cmp
inc
inc
hlt
mov
xchg
and
outs
mov
fbld
and
sub
ficom
add
iret
ins
push
sti
fucom
cld
push
ds
jb
data16
push
pushf
jle
mov
out
(bad)
test
pushf
addr16
push
inc
int3
and
sub
stos
icebp
mov
frstor
stos
lds
jmp
mov
inc
(bad)
jmp
idiv
cmps
jle
cwde
pop
jp
aas
mov
lds
xor
or
add
in
lods
clc
leave
mov
vfnmadd132ss
ds
fs
call
dec
retf
jmp
arpl
sub
ds
xchg
sub
sbb
test
cs
aas
dec
xchg
dec
leave
outs
call
mov
ins
mov
je
imul
cs
push
cs
dec
mov
mov
xchg
in
lods
(bad)
repz
cmp
inc
push
cmp
pop
sub
gs
out
adc
div
es
ins
mov
test
cmp
jle
xchg
lea
sbb
cli
outs
pop
aaa
sub
push
xor
dec
adc
ins
xor
in
cmp
cs
scas
ret
pop
mov
xchg
xchg
clc
hlt
cs
sub
jecxz
mov
sub
or
lea
pushf
(bad)
push
push
sub
xchg
cmps
push
cs
outs
out
and
imul
cs
xor
test
lods
out
cs
and
movs
sbb
cs
popf
sub
adc
cld
fidiv
fistp
sti
or
xor
out
stos
jae
shl
out
push
sbb
dec
inc
daa
jbe
and
sbb
pop
daa
ins
mov
mov
pusha
dec
aam
adc
loopne
call
jge
pop
movs
lahf
adc
daa
out
aad
das
jns
sub
or
jge
sub
popa
mov
mov
adc
cs
test
mov
hlt
and
xor
popa
jmp
fwait
pop
push
cs
stc
daa
(bad)
jne
mov
repnz
(bad)
inc
adc
add
cs
jns
test
pop
dec
push
mov
aas
js
push
mov
out
or
pop
aas
nop
jne
add
jae
cmp
push
aaa
imul
ins
or
test
cs
jae
icebp
dec
xor
dec
sub
cmp
cs
mov
or
fbstp
inc
pop
in
test
cmp
mov
test
inc
cdq
stos
sub
iret
sbb
add
jp
(bad)
scas
repz
mov
cld
xor
aad
push
stos
mov
dec
(bad)
call
ror
les
movs
fcom
dec
sub
push
inc
and
repz
or
je
sub
push
cs
add
jle
arpl
mov
int
movs
dec
les
ds
imul
arpl
adc
stc
movs
xor
aad
ja
xchg
ja
lock
stos
hlt
xchg
xchg
scas
jbe
xor
dec
cmps
jne
mov
lods
mov
cmp
dec
lock
mov
cld
test
fadd
cs
outs
ins
(bad)
es
push
aam
sub
or
inc
or
out
aas
lods
add
imul
dec
out
sub
(bad)
ret
bound
dec
scas
(bad)
fst
(bad)
cs
stc
mov
in
mov
imul
jmp
inc
cdq
enter
movs
mov
cmps
jle
mov
sbb
call
push
das
in
aas
push
ret
inc
call
ret
sub
push
dec
mov
add
aas
sub
add
(bad)
mov
fs
scas
mov
mov
dec
or
pop
mov
mov
cmp
xor
cli
mov
mov
test
ret
xor
jae
ret
push
popa
in
dec
adc
stos
jno
sahf
icebp
ds
daa
inc
xchg
call
out
sub
pop
xor
adc
shr
push
stos
repnz
call
ja
(bad)
adc
jle
je
xchg
nop
imul
das
scas
cmp
cs
adc
push
cli
leave
mov
jmp
std
(bad)
ds
dec
sub
hlt
nop
mov
fisttp
jge
je
shl
ins
push
fprem
stos
push
neg
icebp
sbb
(bad)
out
push
cwde
mov
or
(bad)
sti
xchg
push
inc
xor
test
test
out
pop
and
hlt
or
mov
outs
xlat
jmp
xor
aaa
fsubr
into
xor
push
(bad)
sahf
mov
call
pop
xor
pop
inc
dec
je
je
jb
test
out
aas
fwait
call
test
add
and
leave
bound
scas
jle
test
mov
cdq
push
xlat
or
pop
(bad)
sbb
pushf
xor
and
fwait
pmaddwd
cmps
and
sub
shr
fnsave
inc
and
or
dec
test
xor
or
mov
hlt
mov
jmp
fidiv
sub
push
pop
in
int
mov
sbb
add
pop
push
or
(bad)
lahf
push
adc
enter
aam
fldenv
xor
inc
sahf
test
mov
leave
mov
repnz
and
xor
scas
cmp
int
aaa
mov
inc
repnz
jb
lods
push
push
ss
mov
lock
mov
jge
std
loopne
push
ss
push
push
jbe
std
out
adc
shr
cmp
test
pop
jb
bound
test
imul
pop
int3
or
out
jmp
jecxz
es
adc
inc
mov
leave
jbe
cs
outs
int
outs
or
jg
pop
in
cs
dec
in
jno
popa
and
out
test
mov
test
aas
int
repnz
(bad)
sub
sub
jae
lds
shl
and
xchg
test
xor
cs
stos
scas
pop
pop
stos
jmp
cs
rcl
xchg
(bad)
cld
and
leave
sub
jmp
movs
imul
mov
xchg
inc
cs
mov
imul
lock
pop
les
outs
xchg
mov
cmp
cmp
(bad)
jo
(bad)
push
pop
shl
xor
add
or
and
cmps
and
arpl
je
leave
aam
fmulp
push
xchg
jno
inc
cmp
outs
jmp
jo
add
adc
cmp
jp
xor
or
add
in
(bad)
fadd
cs
out
ror
ja
inc
dec
pop
sbb
and
mov
cmps
mov
rcr
cmc
je
pop
xlat
je
scas
inc
and
xor
loope
inc
mov
out
ins
pop
sahf
mov
retf
loopne
loopne
sub
xor
add
adc
add
mov
in
xor
icebp
fwait
pop
loope
(bad)
movs
mov
inc
mov
cmp
push
or
sub
cmps
in
in
loop
scas
xor
int
mov
int3
sub
aas
mov
fisub
sbb
test
bound
aam
int3
scas
sub
jl
(bad)
out
mov
push
pop
jne
dec
sub
or
pop
adc
sub
jae
xor
mov
std
mov
lods
js
sbb
fiadd
mov
data16
xlat
icebp
mov
(bad)
and
mov
and
add
(bad)
cs
les
dec
cmp
jg
mov
add
popf
push
(bad)
cld
push
jecxz
in
ror
gs
cwde
bound
ins
dec
inc
sar
repz
mov
icebp
pop
rol
(bad)
stos
jge
dec
fs
in
repz
sub
or
lods
adc
mov
push
rcl
loop
xlat
push
and
test
mov
add
retf
dec
dec
es
mov
push
aaa
arpl
ja
scas
push
dec
loop
sub
xor
lea
std
jns
and
mov
mov
cmps
mov
or
test
sbb
push
push
add
mov
movs
pop
push
inc
cmp
test
into
(bad)
jo
mov
cmps
sbb
das
loopne
inc
jl
mov
sub
pushf
xchg
push
arpl
aas
mov
xchg
mov
leave
sbb
jnp
popf
cmps
cwde
test
jp
xchg
dec
cs
jmp
aam
and
out
inc
dec
sbb
pusha
into
cwde
pop
jecxz
jbe
adc
stos
dec
sar
lods
retf
mov
xor
mov
repnz
dec
cs
mov
xchg
fisttp
into
pop
jmp
mov
cs
jecxz
adc
shr
lods
xor
xor
push
enter
pextrw
xchg
data16
popa
out
ja
pmaxub
push
imul
shl
jbe
lods
mov
adc
out
scas
lods
xchg
xchg
jns
mov
jecxz
mov
mov
pop
cs
mov
adc
mov
dec
mov
sub
data16
out
ret
sub
sbb
repz
and
mov
(bad)
shr
xor
mov
inc
rol
mov
cwde
cs
add
push
xchg
push
aas
add
mov
cmp
aas
push
mov
xchg
call
outs
repz
inc
sub
aas
movs
out
push
or
and
xor
outs
fabs
dec
mov
adc
mov
sub
aaa
outs
daa
xor
mov
inc
(bad)
popf
push
out
inc
cs
mov
pop
push
cs
aam
cmps
stos
clc
(bad)
cs
lods
out
lods
inc
(bad)
(bad)
cmovbe
sub
or
adc
mov
dec
or
ss
shr
push
cs
dec
mov
mov
xlat
sbb
outs
movs
pop
mov
cs
test
aas
scas
popa
push
sbb
cmp
(bad)
movs
loopne
sub
clc
fwait
loope
cmps
out
pop
xchg
mov
or
add
fwait
mov
loop
and
cdq
leave
sbb
push
ret
fcomp
inc
add
div
jmp
cs
iret
pop
in
cs
inc
jle
and
xor
dec
retf
jno
or
or
cs
punpckhdq
aad
pop
cs
aam
cwde
das
inc
cs
js
cmc
mov
mov
rcl
xor
pop
(bad)
or
mov
int
iret
cmp
(bad)
outs
jno
fld
stc
mov
lods
scas
ret
cmps
pop
push
push
push
repnz
add
clc
add
out
add
inc
xchg
push
outs
outs
push
leave
out
not
cdq
lock
sub
jmp
sbb
outs
fisubr
ja
cmps
and
xchg
clc
gs
dec
jle
out
cmp
mov
and
sbb
es
mov
je
jmp
jle
and
fbld
and
sub
push
mov
js
into
adc
cs
inc
jbe
js
icebp
xchg
aaa
out
mov
ss
rcr
cmc
fs
jno
mov
out
or
(bad)
mov
mov
outs
mov
or
sbb
mov
(bad)
ins
push
cdq
sbb
sub
ds
cmps
mov
leave
and
sbb
inc
push
aas
or
out
cmp
mov
lahf
xchg
xor
ror
xor
in
xchg
jns
mov
in
mov
adc
mov
out
mov
mov
xchg
test
or
test
cwde
je
xor
cs
call
iret
cmp
xlat
aas
fidivr
scas
in
push
mov
in
xchg
out
pushf
outs
(bad)
push
fs
add
pop
adc
add
xor
mov
sbb
mov
popa
test
push
xor
outs
imul
into
bound
movs
ss
push
add
push
xor
leave
(bad)
in
push
jno
jmp
inc
daa
pop
call
sbb
sub
and
outs
jnp
mov
int
shl
xor
popf
cmp
sbb
call
jmp
call
sub
sti
xor
sbb
xlat
std
out
adc
inc
imul
mov
pop
xchg
movs
call
jl
sub
xor
outs
or
cmp
test
retf
push
(bad)
sbb
nop
je
ins
or
mov
pop
jg
not
scas
or
shl
mov
jle
mov
cmp
aas
scas
pop
fcmovnbe
lds
imul
and
shr
stos
sbb
mov
xor
or
cmp
fdivr
xor
jne
xor
sbb
movs
aad
mov
pop
cs
pmulhw
or
imul
or
cs
or
inc
cwde
mov
sahf
leave
shr
lods
std
mov
or
aaa
adc
lods
pop
sbb
adc
xor
cs
scas
inc
lods
mov
repnz
cs
cmps
imul
cs
jnp
int
cs
and
stos
jl
jne
aaa
sbb
loope
sbb
mov
cdq
cmps
dec
sub
loop
mov
cmps
rol
mov
test
jg
cdq
iret
movs
sub
jl
push
mov
xor
(bad)
adc
out
sub
inc
mov
push
push
mov
(bad)
mov
sbb
sbb
xor
mov
and
pushf
inc
shl
mov
xor
pop
inc
lds
jo
mov
jp
add
dec
add
test
cmp
sbb
dec
ficom
dec
shl
add
lods
scas
lock
jo
cmp
jmp
xchg
lods
sub
into
sub
xchg
cmp
imul
test
sbb
leave
mov
jae
inc
and
xchg
repz
loope
inc
dec
test
fcmove
cmp
int3
sub
cmp
mov
sub
jg
jo
xchg
mov
mov
dec
push
popf
mov
fs
sbb
jno
fild
or
pop
out
mov
mov
or
test
dec
mov
test
pop
into
jns
mov
jge
fcomip
and
cmps
and
dec
mov
inc
sub
(bad)
mov
mov
mov
sbb
out
lods
or
popf
lods
mov
arpl
mov
mov
repnz
leave
add
mov
push
xor
mov
sbb
leave
fist
out
push
push
das
sub
mov
je
push
scas
mov
and
pushf
xor
inc
jg
pop
xchg
fist
dec
xchg
pop
pop
test
sub
fnsave
mov
ins
sub
adc
int3
into
and
or
dec
cmp
inc
shl
movs
dec
mov
add
xor
xor
xor
out
mov
in
jecxz
cmp
mov
test
and
ret
leave
into
mov
xlat
cli
xor
aam
(bad)
loope
mov
dec
xchg
sbb
lods
js
push
ds
out
xchg
stos
push
pop
xchg
les
clc
inc
jns
pop
out
and
out
mov
daa
add
out
cmps
cmps
stos
jbe
outs
jae
sbb
mov
adc
(bad)
mov
(bad)
jbe
pusha
ja
aam
outs
inc
sti
loop
jp
mov
imul
xchg
loope
fsubr
xchg
ja
push
(bad)
or
mov
inc
mov
arpl
lods
imul
(bad)
leave
add
test
mov
stos
mov
xchg
(bad)
test
out
aas
xor
sub
or
xor
sbb
mov
aad
xor
aas
fwait
xor
dec
or
mov
cwde
fbstp
movs
xchg
jl
int3
addr16
mov
and
mov
and
retf
xor
(bad)
gs
cli
ror
lods
call
loope
dec
mov
cmp
fadd
lea
fnstsw
mov
sub
and
jp
pop
sbb
sub
or
popa
shr
jb
or
jmp
hlt
les
das
jne
mov
cs
dec
cdq
retw
out
test
sbb
into
xor
and
or
and
rcl
fistp
push
or
mov
mov
push
mov
in
inc
cs
inc
(bad)
into
fild
add
sahf
pop
xchg
pop
xor
leave
sahf
sbb
dec
out
clc
rcr
mov
iret
push
push
neg
lods
adc
outs
mov
adc
lea
fstp
adc
lods
stc
outs
adc
out
mov
cld
iret
jl
daa
fwait
sbb
mov
enter
jecxz
cs
cld
movs
mov
jae
scas
sbb
stc
mov
(bad)
mov
retf
xchg
cmp
push
pop
jns
xor
je
pop
daa
data16
cli
cmps
dec
adc
jno
into
ret
mov
out
add
fwait
daa
int
sbb
push
push
adc
sbb
cli
push
addr16
push
mul
cmp
or
and
outs
sub
stos
mov
xchg
aas
sub
mul
cs
xor
pusha
out
sbb
popa
add
adc
jmp
ficomp
pop
mov
(bad)
mov
mov
inc
call
xchg
adc
(bad)
mov
or
cld
pop
mov
lods
pop
or
inc
push
push
push
inc
cmp
adc
xchg
mov
mov
sub
push
ss
add
fisttp
jp
rcl
sub
jmp
cs
lea
mov
arpl
adc
or
push
loope
les
lods
fst
cs
or
sub
xchg
cs
jmp
sbb
add
mov
push
(bad)
cs
sbb
shl
mov
dec
jp
push
stos
and
mov
jmp
mov
in
loope
ja
popf
fnstcw
sbb
daa
xor
cwde
dec
in
loopne
dec
scas
std
xor
out
cli
test
mov
repnz
sti
ds
scas
shl
jmp
cmps
inc
jp
sub
rol
call
nop
scas
xchg
cs
mov
retf
mov
fist
pop
mov
xor
pop
into
or
scas
in
inc
(bad)
sbb
xchg
add
cvtps2pd
or
mov
or
popa
mov
fcmovnbe
push
jno
or
mov
add
aaa
sti
cmp
sub
out
sbb
or
jb
push
pop
ins
sti
jbe
cs
(bad)
loop
lahf
jp
daa
fmulp
pushf
stos
lock
pop
push
dec
popa
cs
mov
cs
fdivr
pushf
sbb
pusha
xor
popa
sub
imul
cs
mov
sbb
rol
outs
call
jmp
adc
pop
and
and
scas
add
jae
xor
jbe
push
in
jge
aas
pop
cmp
into
sub
mov
xchg
push
test
jae
test
cs
test
mov
xchg
outs
mov
jmp
sbb
retf
daa
movs
lock
jecxz
lods
xchg
jmp
jp
test
pop
movs
fcmovbe
jl
cmp
es
mov
rol
pop
dec
popf
cmps
push
sub
jle
sbb
xor
sub
cld
jbe
std
pop
neg
arpl
test
inc
shr
(bad)
xchg
pop
mov
fsubr
or
mov
xchg
out
cmp
fs
loope
add
xor
push
dec
scas
int3
(bad)
dec
retf
mov
push
jp
jl
add
imul
or
rol
pop
and
jle
mov
icebp
in
xchg
add
add
dec
or
mov
scas
in
imul
nop
les
pop
sbb
cmp
fadd
fldcw
in
jne
mov
push
stos
push
adc
cli
push
push
shl
out
cmc
inc
and
jmp
and
inc
inc
sub
pusha
je
jnp
or
(bad)
out
into
je
(bad)
je
push
dec
inc
inc
jge
adc
out
loope
cdq
into
cs
push
int
and
hlt
scas
pop
das
mov
dec
(bad)
jmp
nop
out
jbe
dec
dec
icebp
cld
xor
sti
aad
das
into
(bad)
mov
cmp
mov
and
ret
cmc
cs
add
mov
mov
lahf
sar
push
adc
add
shl
cli
std
in
retf
in
lds
leave
inc
shl
inc
out
call
push
into
sbb
cmp
mov
xor
and
dec
adc
sbb
mov
popf
ror
jecxz
dec
mov
mov
cmp
inc
jmp
push
outs
jno
jmp
repnz
leave
aaa
inc
daa
loopne
js
mov
iret
mov
lods
cmp
cld
repnz
pop
daa
fild
sahf
push
inc
enter
jg
leave
aam
nop
(bad)
hlt
add
and
add
in
in
cs
push
popa
sbb
xchg
pusha
leave
xor
or
push
cld
stos
ror
loop
int
cs
xchg
fisttp
js
inc
pop
std
or
aas
xor
out
add
out
mov
cs
and
pop
imul
ins
sbb
adc
push
loope
mov
fisttp
push
adc
std
sbb
seta
cmps
cmp
cdq
mov
sub
icebp
mov
cs
js
dec
sahf
sahf
adc
enter
(bad)
lea
(bad)
iret
jl
and
adc
nop
cli
ucomiss
(bad)
adc
in
iret
mov
fsubr
(bad)
cmp
add
(bad)
xor
shr
repnz
mov
jo
loope
xor
fs
pop
shr
add
test
mov
out
sbb
push
lods
add
push
dec
jnp
cs
mov
call
add
jnp
repnz
jp
loopne
mov
pop
les
sbb
mov
movs
sub
fldenv
aaa
cs
fidivr
stc
adc
sbb
or
imul
rcl
das
xchg
daa
aaa
xor
jge
in
in
je
movs
jmp
xchg
test
daa
enter
or
xchg
mov
xchg
(bad)
dec
inc
shl
fcmovbe
xchg
adc
cmp
mov
sti
cs
jo
dec
push
fimul
add
sub
push
or
add
sti
mov
add
push
fs
push
mov
shl
es
jecxz
outs
xor
ror
cmps
cmp
fdiv
std
retf
inc
imul
out
push
and
leave
imul
lock
and
dec
mov
jp
ins
sbb
fld1
lods
leave
dec
dec
scas
or
lahf
push
(bad)
and
mov
sub
cmp
dec
mov
stc
xor
jo
cs
cmps
xor
out
push
push
cmp
aam
out
push
inc
sbb
cli
pop
sbb
mov
in
fwait
add
and
or
sub
lods
mov
push
pop
daa
or
pop
movs
outs
jne
rcr
icebp
cs
(bad)
xchg
(bad)
cs
jmp
cs
test
mov
pop
mov
in
or
mov
out
sbb
sub
out
scas
iret
xor
xor
nop
mov
sbb
mov
shl
xor
mov
jno
sbb
push
pushf
mov
and
xor
sub
in
mov
inc
retf
sahf
ficom
inc
sbb
push
fisub
aam
movs
xor
sbb
movs
outs
cs
rcl
sbb
cmp
stos
xchg
into
in
or
xor
aaa
in
shl
repnz
out
xlat
cmp
xor
push
out
mov
inc
pop
xor
add
push
test
push
movs
in
adc
fcom
mov
ret
mov
scas
mov
test
fcom
shl
pop
cs
xchg
jne
inc
lods
fisubr
jge
sbb
sbb
mov
je
ret
ret
inc
into
cmc
mov
rol
(bad)
sub
stos
pusha
enter
push
add
es
leave
ret
imul
(bad)
data16
sub
in
out
jno
xor
pop
sub
int
xor
mov
push
sub
lds
adc
adc
add
add
push
mov
xor
xor
out
adc
mov
ret
mov
pushf
rol
mov
imul
jge
mov
xchg
sbb
stos
xor
(bad)
cwde
pop
sub
pop
lods
xchg
xchg
push
inc
lea
jnp
push
addr16
cmp
and
jg
inc
fimul
mov
inc
imul
lods
sbb
push
xchg
ins
into
into
cs
cdq
add
std
xchg
sub
adc
pop
das
and
jmp
xchg
nop
fwait
inc
sahf
out
int3
les
xchg
pop
mov
stos
push
pop
movs
scas
xor
movs
mov
pop
add
mov
push
fld
daa
xchg
fisubr
cld
pushf
fst
cs
lea
dec
pop
mov
sub
shl
mov
mov
push
into
mov
adc
add
mov
cmp
and
xor
out
inc
and
push
fiadd
and
add
push
test
hlt
mov
dec
loopne
loope
push
fldcw
jp
sub
enter
fst
ja
and
cmp
jecxz
sub
idiv
inc
and
and
arpl
fisub
jns
enter
mov
adc
outs
push
rol
and
cs
or
ss
adc
or
fs
jg
pop
pop
jmp
fld
mov
sbb
inc
mov
push
fcomp
cs
arpl
pop
cs
dec
aad
cs
fyl2xp1
movs
lds
and
(bad)
out
push
push
cs
inc
adc
imul
ja
scas
les
clc
mov
pusha
mov
fadd
mov
sub
test
cmp
sbb
or
fdivr
dec
jmp
xchg
vmovups
sbb
xchg
fsub
pusha
inc
jae
aas
mov
sbb
push
pop
cs
fcomp
cs
sbb
push
xor
mov
dec
inc
fdivr
inc
ins
mov
sub
push
dec
(bad)
xor
mov
dec
mov
cmp
and
and
mov
scas
retf
dec
push
(bad)
stos
add
sbb
leave
pop
sbb
sbb
xchg
sbb
or
adc
movs
lods
jle
call
push
sbb
inc
fidiv
push
jmp
lock
test
xor
(bad)
jecxz
push
mov
mov
jg
in
test
into
retf
xchg
cs
mov
ss
addr16
sbb
cmp
adc
cs
mov
pop
sbb
in
jno
out
mov
mov
cmp
outs
sbb
cs
pop
fdiv
xor
daa
add
out
into
adc
sub
in
ficom
(bad)
(bad)
iret
daa
ret
mov
jle
fcom
bt
or
into
dec
or
sti
in
mov
cmp
imul
mov
inc
pop
sar
mov
addr16
xor
jo
shl
aad
jp
into
xor
push
adc
(bad)
xlat
ret
cs
das
jg
cmps
psubsw
mov
mov
test
mov
retf
aaa
cmp
daa
pop
fisub
test
push
pop
sub
lods
mov
call
jo
xor
scas
jb
popa
mov
imul
sub
push
push
outs
imul
test
bound
repz
xchg
js
sub
retf
call
xchg
mov
pop
pop
inc
in
fimul
cs
push
mov
repz
xchg
pop
push
and
lea
xchg
jmp
enter
pop
jg
cs
inc
or
or
cs
sahf
repnz
fwait
gs
adc
cmp
sbb
in
xor
xacquire
adc
ret
xor
mov
inc
cmp
cmp
cld
out
mul
outs
scas
test
out
adc
inc
cs
dec
sbb
aam
dec
iret
add
ret
fsubr
ds
test
jg
frstor
pop
dec
cs
or
ja
(bad)
mov
movs
dec
cs
push
pop
out
rcl
inc
call
sbb
not
pop
push
add
aam
jns
cld
mov
sbb
cmps
fisttp
(bad)
out
in
movs
mul
inc
sbb
xchg
int3
xchg
and
xchg
jne
nop
pop
scas
outs
fstp
add
test
ss
mov
movs
leave
(bad)
jo
scas
mov
xchg
rcr
cmp
adc
dec
pop
sub
movs
pop
aam
xchg
xchg
jno
scas
mov
sub
(bad)
xlat
cmp
jnp
cs
sub
xlat
mov
leave
mov
xor
jmp
and
lahf
jecxz
inc
adc
sti
and
(bad)
aam
push
cmp
outs
mov
add
cmp
push
add
and
(bad)
shl
aam
mov
cmp
(bad)
mov
xor
xor
sahf
adc
cs
xor
xchg
out
lods
outs
scas
test
rcr
(bad)
sti
sub
(bad)
push
fmul
aam
pop
test
mov
daa
jecxz
mov
lahf
inc
cld
xor
jl
and
dec
xchg
mov
cli
test
outs
cmp
add
test
pop
and
mov
arpl
push
rcr
imul
xor
mov
xor
scas
cdq
mov
sub
push
sahf
cld
sar
or
test
(bad)
lock
jge
in
and
outs
sub
pop
mov
stc
xor
jl
shl
into
add
and
out
xchg
dec
xor
dec
inc
(bad)
pop
fmul
out
push
or
int
mov
(bad)
js
and
popa
add
js
fisub
popf
(bad)
data16
jmp
aam
sbb
sar
stos
ret
dec
dec
je
cmp
repz
in
and
lock
(bad)
cli
scas
outs
mov
adc
call
or
loop
xchg
dec
gs
cmps
fisubr
xchg
adc
leave
adc
es
jnp
pop
ins
pop
cs
aas
push
cli
ds
pop
fld
cmp
push
call
push
leave
and
imul
fs
(bad)
(bad)
cmps
imul
stos
arpl
mov
xor
movs
pushf
scas
lahf
dec
pop
leave
mov
cld
and
push
imul
add
loope
mov
sti
or
cs
mov
repz
and
ret
pop
mov
jnp
in
movs
stc
mov
dec
shl
push
mov
cmp
cmp
bound
sbb
cmp
and
and
hlt
mov
scas
sti
xor
imul
pop
pop
cs
addr16
xor
mov
inc
sbb
mov
inc
add
jg
cmp
pop
dec
or
cs
cmp
lds
mov
jmp
jbe
sahf
fnstcw
std
sub
mov
pandn
inc
cmp
mov
jbe
cs
push
xchg
pop
xchg
call
cmp
adc
and
pushf
mov
lods
push
fwait
mov
jmp
add
dec
mov
and
cs
or
int
cld
xor
call
stos
pop
and
cs
lea
jbe
cld
dec
aas
outs
cmp
jle
push
pop
daa
mov
mov
cs
jo
cmp
shr
xlat
lods
arpl
sub
mov
popa
adc
xor
dec
cs
aad
mov
pop
inc
cmp
out
(bad)
inc
push
cs
mov
mov
scas
rol
adc
dec
xor
shl
fdivrp
ret
cs
sar
mov
mov
cs
adc
pop
adc
aaa
sbb
outs
scas
leave
stc
(bad)
lahf
xor
mov
pop
mov
mov
repnz
pusha
mov
sub
pop
fdiv
cwde
mov
cld
inc
sbb
cmps
test
stc
cmp
or
(bad)
into
push
cs
std
test
outs
fistp
leave
add
in
fwait
stos
call
retf
add
lahf
addr16
pusha
in
cld
mov
loope
fsubrp
pushf
mov
and
inc
imul
jae
add
xor
xchg
ins
scas
je
mov
add
rcr
fistp
lock
out
or
jbe
cmp
cs
inc
add
or
xor
mov
ficom
xor
bound
ds
(bad)
xchg
push
xchg
imul
mov
xchg
out
out
(bad)
popa
cs
outs
pop
mov
mul
add
and
(bad)
lods
cmp
mov
ja
jnp
pusha
sbb
cmp
jecxz
imul
pop
pusha
jne
je
cmp
xor
jp
cs
and
mov
shr
or
adc
cmp
nop
scas
mov
loope
dec
dec
pop
or
sub
fwait
cs
jmp
in
shl
adc
mov
sbb
not
popa
push
push
outs
jne
(bad)
out
push
and
push
pop
pop
test
sub
imul
xchg
movs
in
lea
mov
inc
jecxz
rol
adc
js
adc
std
xchg
sahf
sbb
mov
dec
cmp
mov
imul
mov
xor
add
and
push
cs
aam
add
les
and
retf
xchg
pusha
mov
fdiv
pop
dec
xlat
adc
lods
in
fdiv
push
xchg
sub
xchg
aad
stos
mov
aam
cs
mov
enter
adc
sbb
ret
scas
lds
dec
popf
xchg
adc
xor
sbb
xchg
jge
imul
dec
aaa
stos
lds
lods
neg
mov
in
leave
stos
xchg
xchg
cs
and
lods
xor
test
inc
mov
inc
sbb
enter
xchg
xchg
punpcklwd
mov
cs
ret
mov
jmp
sub
js
cmp
cwde
into
push
sbb
fwait
in
mov
push
cdq
cs
mov
xchg
push
leave
sub
int
das
cmps
xchg
fild
or
mov
xor
cs
std
sbb
cmp
pusha
pop
lods
inc
pop
sub
xchg
ds
aad
pusha
daa
mov
mov
cs
scas
mov
sbb
addr16
out
and
jae
lods
push
inc
imul
ss
push
push
pop
dec
ret
mov
das
sub
and
out
sahf
jne
and
push
mov
inc
or
bound
cs
dec
inc
add
(bad)
push
retf
int
xchg
imul
mov
cs
mov
pop
xor
add
push
xor
sub
cmp
adc
adc
daa
pop
or
or
mov
in
xor
or
push
mov
aam
cmp
jge
pop
mov
mov
mov
iret
cmps
pop
stc
cs
cld
pop
push
pop
mov
leave
fcomp
popa
xor
lahf
push
out
(bad)
jmp
push
fcmovne
sbb
nop
pop
mov
lods
mov
adc
adc
sub
das
push
jmp
pop
pop
pop
loopne
in
neg
mov
xchg
inc
arpl
sar
adc
(bad)
cmp
push
mov
jl
daa
dec
test
retf
(bad)
mov
mov
adc
or
scas
xor
mov
push
fisubr
aaa
int3
mov
inc
cdq
or
fisttp
push
inc
cs
rcr
test
daa
or
jmp
sbb
cmp
sub
fldcw
mov
and
imul
outs
xor
xor
cmp
dec
pop
sub
rol
out
inc
push
cli
inc
mov
jae
jg
mov
leave
sub
aas
nop
aas
shl
call
add
inc
adc
mov
xor
data16
xor
mov
sbb
cs
stos
xchg
sbb
retf
in
pop
jmp
(bad)
cs
inc
or
push
push
sahf
cs
inc
inc
push
xor
mov
mov
fst
lock
out
xchg
js
cmp
sub
dec
mov
jbe
jb
rcl
inc
cmc
cli
sub
fdiv
scas
clc
mov
aaa
shl
xchg
xchg
pop
jb
scas
adc
mov
das
mov
jmp
jne
or
popa
loop
jecxz
xchg
sub
mov
idiv
cmps
xchg
test
popa
(bad)
xlat
jmp
int
and
or
mov
ss
add
ror
jne
xchg
pop
add
dec
pop
sbb
inc
xchg
inc
inc
imul
jno
cmp
adc
sbb
jbe
jo
movs
pop
push
add
ds
xchg
adc
jl
arpl
neg
popf
daa
fwait
sbb
pop
idiv
sbb
mov
or
and
or
xor
xor
gs
xchg
shl
push
arpl
nop
jno
cs
xchg
lahf
fist
and
pop
xor
and
and
inc
idiv
mov
push
mov
ja
scas
rcr
(bad)
rcl
out
jns
sub
xchg
mov
cmp
cmp
bound
jo
sub
scas
sbb
jmp
pop
cs
cmc
mov
das
inc
sub
cs
bound
jg
jns
sub
push
pop
mov
lds
push
ret
xor
out
or
test
cs
xchg
xor
(bad)
xchg
cs
mov
mov
and
rol
dec
jmp
mov
cs
(bad)
cs
add
cwde
mov
cs
or
pushf
cmps
push
cs
hlt
lea
out
mov
and
xor
mov
push
push
xor
or
mov
(bad)
in
and
not
mov
in
lea
sub
mov
mov
sub
mov
cli
sbb
jbe
xchg
outs
aas
mov
popa
leave
cs
jo
rol
xchg
loope
idiv
xor
push
les
mov
(bad)
in
inc
cs
jo
sbb
test
cs
adc
bound
(bad)
retf
xor
mov
fist
sub
(bad)
daa
rol
and
outs
int
cs
dec
rol
ja
cs
adc
xor
pop
es
aam
cld
push
dec
add
cs
cmp
xor
or
arpl
pop
lods
cs
pop
and
push
push
(bad)
retf
dec
dec
outs
out
shl
aad
into
mov
ficom
dec
in
cmp
cmps
mov
sub
cs
or
jge
mov
out
inc
pop
add
inc
lds
movs
lea
xlat
fsub
mov
dec
out
adc
pop
push
cs
pop
adc
xor
ins
jnp
adc
or
test
or
cmp
jmp
push
cld
sub
push
adc
addr16
adc
lock
jne
outs
pusha
jo
push
inc
adc
dec
push
push
jl
pop
out
popf
sbb
(bad)
enter
ret
jbe
xor
icebp
or
mov
xor
sbb
push
daa
cmps
pop
ret
cs
shl
inc
dec
ret
addr16
push
fwait
xchg
push
xchg
outs
mov
cld
xchg
push
icebp
test
stos
retf
mov
xor
xchg
call
jo
stc
and
ret
cmp
jp
mov
cli
cs
xor
jecxz
(bad)
in
sub
xor
mov
xlat
mov
inc
(bad)
out
sahf
sub
and
mov
and
mov
cs
sub
pusha
das
xchg
sub
test
pop
ja
dec
jp
xchg
mov
scas
sahf
outs
popf
jle
cs
push
mov
aaa
xchg
ror
out
jp
dec
daa
or
push
mov
mov
inc
cs
fist
aas
or
cs
pop
inc
(bad)
cmp
sub
cwde
movs
sub
inc
cs
lea
xor
jmp
repz
(bad)
fsubr
out
fnstcw
cmp
aaa
sar
cs
iret
jmp
jmp
push
adc
xchg
stc
je
(bad)
psubq
clc
out
mov
inc
movs
adc
retf
cmp
jne
dec
or
mov
pusha
or
cs
rol
adc
sub
pop
sbb
fchs
(bad)
jns
into
mov
or
imul
adc
cmp
rol
or
rol
adc
xor
jge
mov
xor
aas
movs
jecxz
lahf
aas
lock
rol
mov
(bad)
in
stos
cmps
lahf
add
out
adc
movs
inc
retf
mov
call
cmps
and
sub
push
and
push
xor
out
push
jge
mov
cli
les
loope
out
mov
pop
dec
and
adc
scas
icebp
dec
loope
cs
ja
neg
data16
inc
cld
and
mov
mov
das
shr
sub
inc
ret
mov
inc
cs
fwait
cld
sub
mov
mov
xor
int3
adc
daa
inc
and
bound
out
push
inc
into
shr
jmp
cmp
cs
and
ins
pause
pushf
jecxz
add
and
mov
jae
add
and
mov
ja
sub
mov
dec
daa
jp
xor
jno
cs
lahf
mov
jmp
xorps
xor
pop
ficom
cs
(bad)
cmp
movs
loope
cvtpi2ps
jmp
mov
and
out
call
scas
addr16
add
sub
ja
cpuid
adc
pop
push
xchg
xchg
scas
and
cdq
ret
xor
gs
iret
jae
or
xchg
mov
aas
xchg
jecxz
popf
pop
outs
icebp
add
pushf
fs
sbb
and
xor
mov
sub
test
or
jbe
inc
jmp
into
adc
or
test
(bad)
out
xchg
(bad)
xor
jbe
cli
bound
adc
jl
rcr
mov
or
rcl
ret
cwde
shl
jb
test
pop
fild
dec
cmovbe
mov
js
sub
shr
xor
jmp
xor
cmc
mov
adc
call
mov
das
cmp
cwde
(bad)
mov
imul
(bad)
sbb
popa
mov
mov
jecxz
shl
lock
push
or
add
mov
xchg
jle
sbb
loop
repnz
popa
ficomp
lds
scas
sbb
mov
or
nop
pop
aas
out
sub
retf
push
fwait
loope
cs
fsub
xor
mov
fs
dec
addr16
(bad)
mov
jge
xor
lahf
test
pop
ds
push
aad
or
rcr
scas
xor
pop
int
ss
out
xlat
outs
xchg
jno
push
rcl
fsubr
dec
arpl
outs
cs
rol
ss
sbb
jp
rol
jno
lea
rsm
jnp
sub
ficomp
sbb
stos
mov
ss
aaa
inc
iret
sub
test
jo
adc
xor
add
ja
sub
add
sahf
sbb
imul
cs
lods
xchg
ficomp
add
sub
xchg
fsub
shr
in
mov
xchg
push
mov
loopne
adc
add
xor
lea
cmp
pop
xchg
fld
mov
jbe
cmp
fld
dec
cs
fadd
hlt
sub
fidivr
daa
inc
mov
jo
adc
pop
mov
movs
adc
test
mov
mov
cmp
(bad)
push
mov
mov
into
jle
sub
jb
cwde
ins
cmp
push
adc
call
pop
into
and
sub
(bad)
out
es
adc
dec
cs
lods
push
int
fld
cs
pop
dec
or
in
pop
movlps
ins
mov
data16
aaa
cli
call
jns
loop
push
jo
sbb
out
cld
lahf
cs
adc
or
mov
std
push
mov
test
les
in
cmps
xor
cmp
cs
ror
(bad)
jno
scas
stos
cs
shr
cs
mov
mov
and
mov
cmp
sbb
loopne
xor
mov
and
fs
adc
mov
adc
ret
cdq
cs
and
popf
cs
push
mov
xchg
scas
leave
jno
sbb
jnp
inc
pop
mov
les
sti
sbb
push
add
mov
es
cs
je
adc
loop
mov
int3
mov
pop
ja
ficomp
mov
adc
push
add
ins
jne
xor
loopne
and
ss
dec
(bad)
pop
cmps
cs
push
mov
call
js
scas
fstp
(bad)
jle
dec
loopne
vpsubw
cmovae
xchg
xchg
ror
add
adc
add
repnz
icebp
dec
mov
enter
popf
dec
loop
(bad)
sbb
xchg
mov
cs
xor
popf
sbb
dec
pop
ds
inc
mov
adc
arpl
mov
fsubr
repz
mov
xchg
arpl
mov
div
aam
cs
xchg
adc
xlat
push
int
outs
xor
mov
call
es
test
add
xor
jge
test
dec
es
sti
xor
fild
push
daa
(bad)
jecxz
push
iret
cs
repz
scas
(bad)
retf
test
cmp
sub
es
movs
mov
scas
idiv
push
cmp
xchg
and
and
mov
cmp
pop
cmp
or
(bad)
stos
and
leave
fmul
iret
ret
mov
inc
or
mov
icebp
out
sub
dec
or
ds
mov
sub
call
dec
clc
and
lock
and
in
sbb
and
test
popa
push
mov
leave
scas
jmp
sar
iret
mov
fadd
inc
xchg
std
mov
movs
push
or
cmps
mov
inc
xor
mov
(bad)
ret
adc
sub
ins
xchg
ds
xchg
or
xor
pop
ja
cmps
aas
(bad)
ror
fimul
(bad)
add
popf
jl
dec
aas
pop
(bad)
jmp
loope
mov
adc
sub
outs
test
jae
lea
jl
aad
stos
movs
out
(bad)
arpl
das
sbb
dec
sub
dec
push
cmp
movs
add
daa
xor
xchg
mov
iret
cli
and
xchg
push
ins
fcomp
js
test
lds
ret
push
sub
or
leave
cmp
sub
lods
aas
stos
push
in
in
mov
out
and
movs
cmps
push
sub
scas
leave
push
xor
cmp
mov
test
aam
fs
xlat
and
cmps
mov
idiv
pushf
icebp
in
int
(bad)
mov
daa
xchg
ja
sub
mov
push
ficomp
(bad)
test
retf
pushf
push
mov
mov
clc
arpl
fdivrp
packsswb
cmp
es
xor
sub
int3
jecxz
jno
arpl
cmps
outs
sub
data16
dec
jae
ret
loop
jg
fs
ins
test
stos
push
xchg
cmp
jbe
xor
jne
call
xchg
sub
mov
add
mov
and
mov
mov
repz
out
das
(bad)
pop
(bad)
dec
pop
jbe
mov
(bad)
repz
retf
sub
leave
mov
add
fisttp
cs
mov
into
push
pop
adc
sbb
cli
ins
cmp
rcl
cmp
(bad)
imul
and
daa
ja
sub
push
imul
jae
mov
enter
or
sbb
mov
mov
dec
fidivr
jbe
lods
repz
aas
jne
aas
sbb
sbb
sub
pop
inc
xor
add
dec
inc
scas
test
jae
pop
test
dec
mov
and
fst
mov
or
cmps
and
ficomp
cs
dec
inc
pop
fdiv
cs
xchg
das
fadd
push
inc
jp
into
pop
cwde
push
push
imul
pop
jge
jmp
or
adc
retf
xchg
cs
pop
push
jmp
icebp
stos
daa
xchg
(bad)
mov
mov
push
neg
imul
fild
(bad)
adc
xchg
iret
test
xor
fwait
push
jge
push
sahf
lea
inc
ud0
sbb
mov
pop
sar
mov
mov
xchg
repz
jmp
mov
retf
mov
mov
cmps
xor
pop
stc
cs
(bad)
ret
in
(bad)
cs
fiadd
push
gs
jmp
mov
or
sub
sbb
loope
repnz
movs
xchg
or
ins
mov
jae
cmp
scas
sbb
imul
sbb
push
sahf
mov
jmp
cmp
loop
mov
jbe
inc
inc
sbb
fidiv
leave
retf
xor
adc
inc
and
js
sbb
add
mov
das
mov
leave
inc
outs
fisubr
sbb
sbb
dec
sbb
xor
imul
outs
xor
inc
xor
enter
or
cs
ins
fisttp
retf
fst
out
(bad)
les
hlt
(bad)
fcomp
dec
loopne
mov
xor
shl
mov
cwde
sub
push
dec
nop
scas
loope
or
or
add
imul
addr16
adc
test
loop
es
(bad)
mov
jmp
push
xor
xchg
fwait
mov
sub
cmp
push
and
xor
push
jns
or
test
adc
add
jmp
xor
pop
jl
jo
loope
(bad)
sub
test
lds
cmp
scas
imul
add
lea
pop
adc
xlat
xchg
inc
or
stc
sub
xor
or
xor
dec
into
js
sub
xchg
mov
sub
mov
sahf
daa
icebp
and
(bad)
mov
push
xor
sbb
aad
push
cwde
rol
or
xchg
daa
sbb
mov
mov
out
shr
inc
adc
je
lahf
(bad)
cmc
fucomi
push
cld
sahf
adc
(bad)
xor
pop
mov
stos
pop
push
je
or
xor
push
pop
xor
cmp
pop
mov
clc
outs
and
fisttp
cs
aas
cmp
popa
xor
pop
mov
cld
jns
imul
sti
sar
test
mov
in
xlat
mov
cwde
out
(bad)
jg
addr16
dec
mov
shld
ss
xchg
sahf
(bad)
xor
mov
push
mov
push
cmp
or
in
sbb
movs
dec
loopne
adc
jl
ins
xor
sub
inc
js
scas
mov
push
mov
cmp
mov
pop
imul
ret
js
pushf
in
cli
jg
cs
or
push
cs
pop
mov
fisubr
ins
(bad)
test
jecxz
les
mov
jo
aas
push
(bad)
sub
mov
cs
addr16
pop
aas
sbb
sub
sbb
hlt
jbe
jg
push
inc
aas
outs
in
imul
cs
push
or
push
mov
dec
mov
mov
je
daa
xchg
sbb
jnp
cmp
mov
outs
mov
push
lea
mov
pop
adc
dec
xchg
jb
js
outs
stos
sti
cs
xchg
ja
mov
pop
xchg
mov
ret
cs
loop
dec
enter
(bad)
mov
jnp
mov
lea
pop
stos
in
mov
jle
xor
imul
jne
sbb
mov
outs
dec
gs
je
add
sub
adc
cmp
daa
(bad)
pop
test
aaa
jge
bound
cmps
push
rcl
imul
js
and
mov
cmp
adc
add
movs
and
push
cmp
mov
pop
scas
fbld
cmp
cdq
cs
fwait
je
(bad)
movs
jne
(bad)
pop
adc
scas
(bad)
mov
inc
jbe
ins
mov
das
sti
xchg
cs
jge
shr
add
xor
or
mov
dec
mov
adc
adc
xor
mov
out
cmps
xchg
mov
pop
icebp
pusha
rol
in
out
adc
ss
in
test
cwde
mov
enter
cdq
cs
pop
or
mov
retf
cs
and
into
ins
pop
cs
cmp
sbb
scas
sbb
mov
cs
pop
sahf
jl
movups
push
jmp
scas
mov
mov
cs
sbb
shr
cli
cmovnp
and
cs
pusha
or
jo
fld
mov
mov
ror
pop
out
cmps
dec
ins
xor
mov
mov
inc
xor
or
enter
xchg
xchg
scas
and
imul
or
fild
xor
mov
dec
sahf
sbb
je
mov
or
xchg
out
xchg
outs
cmp
jo
adc
or
retf
enter
jge
sbb
cmp
and
mov
xchg
cmp
cs
fistp
mov
dec
imul
push
movs
shr
stos
mov
cmp
sub
mov
scas
fnstsw
ds
push
pusha
fucomp
je
and
or
sti
in
jp
push
popf
add
jne
loopne
jmp
push
hlt
aas
repz
cs
ret
or
das
cs
adc
(bad)
test
scas
add
aad
add
daa
aaa
addr16
sahf
mov
dec
or
mov
push
mov
cmps
xor
fs
mov
dec
and
and
sub
ret
jo
dec
test
xlat
pop
ds
pop
add
aas
xor
les
aad
pop
jecxz
xor
leave
xchg
adc
mov
fdivr
movs
cmps
sbb
fsub
xor
and
xchg
nop
inc
and
loop
das
test
jno
mov
mov
cs
leave
dec
jge
das
push
mov
push
fisttp
or
sub
add
dec
js
(bad)
shl
xor
mov
inc
inc
movs
dec
cmp
mov
push
sbb
rcl
out
mov
xchg
mov
(bad)
jp
imul
sbb
imul
mov
mov
(bad)
xor
(bad)
fwait
push
add
out
in
cs
sub
popa
and
cmp
cs
rcl
adc
push
jmp
popf
out
aas
mov
scas
and
mov
movs
lods
shl
sub
push
ss
inc
adc
and
(bad)
cwde
imul
jo
push
into
sbb
addr16
adc
popa
push
ja
xchg
and
icebp
sbb
cmp
mov
loop
push
(bad)
dec
lds
daa
scas
repz
lods
push
imul
les
cmp
inc
jmp
adc
cs
mov
xchg
sub
mov
jl
cs
push
jecxz
sub
daa
push
rol
inc
test
cs
sub
mov
cs
(bad)
pusha
jge
sti
push
inc
cs
les
cs
add
jae
mov
ins
jge
inc
cmp
cs
sub
or
inc
cs
pop
inc
jge
sub
movs
jmp
call
push
cs
or
sbb
cmps
aam
cs
xor
minps
xor
dec
xor
fst
cmp
gs
dec
or
les
bound
cs
and
loop
xor
test
mov
mov
ds
mov
or
jecxz
xor
jl
iret
in
lock
rcr
dec
inc
loopne
mov
cmc
dec
dec
and
loop
cmp
dec
lahf
inc
or
outs
mov
sub
xchg
addr16
lods
and
add
and
adc
jp
cmp
addr16
adc
icebp
test
jo
xor
mov
pop
loope
aas
push
bsf
pop
and
and
mov
cmps
xor
mov
adc
push
aas
in
adc
not
fbld
scas
xchg
xchg
rcr
imul
jg
dec
fcmovnbe
mov
pop
xor
push
into
mov
sub
xchg
adc
(bad)
mov
mov
popa
fldenv
add
mov
push
cs
push
test
cmp
test
hlt
mov
jmp
cs
push
adc
(bad)
data16
mov
lahf
out
mov
daa
jae
imul
xchg
fcmovb
outs
dec
jae
cli
mov
sbb
jg
arpl
retf
into
dec
into
(bad)
sub
dec
cld
(bad)
jmp
mov
rcr
lods
leave
mov
sub
(bad)
mov
je
sbb
iret
push
jp
hlt
dec
aas
mov
nop
call
test
es
and
std
(bad)
jno
cmp
mov
jns
mov
popf
lahf
out
jmp
pop
jne
add
push
lock
(bad)
fadd
icebp
jl
popf
jmp
xlat
popfw
xchg
icebp
cs
lea
xchg
fdiv
mov
fiadd
(bad)
shl
xchg
out
push
cmp
push
xor
mov
inc
adc
add
fidiv
cmps
(bad)
mov
(bad)
cmp
sub
psrld
rcl
leave
stos
lea
xlat
xor
jno
test
xor
push
iret
jns
cmp
adc
push
push
jmp
pop
fisubr
(bad)
push
out
(bad)
hlt
mov
pop
sbb
sub
out
les
xor
sub
mov
in
(bad)
test
sbb
ficomp
adc
pop
dec
leave
add
push
sub
std
adc
scas
add
and
fdivr
aaa
leave
pop
push
or
(bad)
sbb
sbb
xor
ds
ins
cwde
nop
rcl
mov
stos
shr
and
mov
stos
test
jmp
stos
cmp
popa
imul
test
out
je
retf
sub
cmc
mov
in
push
jmp
jle
call
inc
data16
dec
leave
xchg
stos
inc
xchg
add
lahf
ret
push
test
into
jle
sbb
leave
inc
xchg
mov
shl
pop
daa
mov
pop
test
add
arpl
sub
cmp
out
push
mov
test
daa
sub
imul
(bad)
mov
int3
nop
push
jne
inc
mov
inc
jmp
mov
idiv
fwait
aam
retf
psubusb
cmc
out
in
pusha
jg
and
dec
sub
fist
dec
adc
ds
xor
xchg
scas
mov
cs
xchg
fld
idiv
iret
retf
xchg
scas
and
rol
loop
ret
push
(bad)
cs
or
sub
push
mov
icebp
fidivr
adc
inc
adc
sbb
cwde
stos
mov
mov
rcl
cs
add
scas
int3
sbb
cs
dec
cpuid
sbb
mov
ret
or
aad
xor
jbe
std
iret
(bad)
call
aam
dec
aaa
mov
xchg
sub
scas
cmc
neg
adc
sbb
pop
mov
hlt
mov
sub
fs
fcompp
push
cs
dec
fsub
mov
adc
or
pop
repnz
cmp
fs
jmp
mov
xor
aam
xor
sbb
xor
fisub
scas
dec
hlt
lahf
cmp
call
mov
xchg
fistp
call
mov
leave
mov
adc
dec
stos
cs
and
push
data16
ficom
mov
retf
mov
lahf
xor
push
push
add
out
mov
out
fild
and
imul
adc
mov
repz
mov
lea
shl
jns
shr
jno
adc
cs
pop
faddp
or
cdq
mov
xor
std
jbe
int3
cmps
icebp
ins
adc
mov
scas
dec
inc
rsm
mov
jg
sbb
xor
pop
iret
sti
fs
mov
call
in
xlat
(bad)
(bad)
pop
test
xor
pop
jno
or
dec
push
pop
(bad)
adc
xor
inc
push
fisttp
xchg
sub
imul
jbe
xlat
fnstcw
adc
lods
fldcw
int
mov
adc
popa
int
out
movs
rcr
scas
xchg
push
(bad)
push
retf
push
add
cs
bswap
out
nop
xor
movs
dec
push
mov
jg
or
inc
mov
cmp
shr
pop
mov
les
inc
ret
arpl
sub
jb
sub
test
(bad)
sbb
mov
hlt
test
and
scas
pop
xchg
cs
mov
xor
mov
psrlw
fisub
jbe
jp
es
mov
mov
sbb
out
pop
(bad)
pop
xchg
cmp
xchg
stc
jmp
sahf
sub
pop
sbb
lahf
push
jb
fbstp
in
pop
xchg
ret
clc
and
addr16
es
mov
shr
dec
ja
mov
jmp
addr16
rcl
out
cs
sub
cs
mov
xchg
sbb
stos
fiadd
push
and
pop
call
test
mov
int
ss
dec
xor
push
data16
or
outs
dec
push
scas
pop
ins
int
add
sbb
pop
inc
jns
addr16
pop
add
jle
add
cs
pop
cmc
scas
cmps
mov
nop
sbb
imul
aam
daa
gs
repnz
stos
inc
push
sbb
aas
outs
rcl
sub
cld
mov
(bad)
xchg
cwde
sbb
push
call
fdivp
les
jno
adc
pop
inc
ror
dec
jecxz
fs
mov
cs
mov
loope
sbb
mov
sbb
inc
push
pop
push
popf
sub
shl
mov
cwde
pop
push
test
push
push
sahf
mov
hlt
mov
shr
cmp
sbb
pop
jmp
int3
dec
and
mov
inc
cs
ret
xchg
fisubr
std
mov
outs
ret
mov
jecxz
scas
test
dec
cs
inc
mov
xor
push
outs
test
xor
pop
fcom
fist
or
mov
xchg
les
test
xchg
(bad)
push
pop
adc
popa
ins
xor
cs
outs
fld
jb
adc
aas
popa
adc
js
xor
repz
push
add
push
adc
dec
or
or
adc
out
and
push
xor
xchg
sub
xchg
add
cs
xor
test
pop
or
push
mov
mov
daa
repnz
jl
fiadd
aaa
ror
in
sub
fcomp
adc
fisttp
not
clc
or
inc
scas
adc
jae
cs
jns
xor
or
lock
mov
dec
cmp
fucomp
cs
iret
jp
dec
push
jl
rcl
sahf
icebp
cs
sbb
out
xor
mov
in
push
rol
xchg
dec
out
xchg
in
mov
data16
inc
cs
pop
es
inc
push
inc
sub
fucom
movs
out
cs
cmps
shl
shr
stos
mov
add
cs
(bad)
adc
jp
pushf
ror
pop
mov
pop
add
ret
addr16
inc
cs
cmp
popa
lock
(bad)
daa
add
sahf
aas
lods
out
enter
jmp
cmp
bnd
pop
xchg
xchg
push
adc
or
pop
xor
pop
push
out
jno
sub
push
scas
xor
lock
jmp
mov
sub
cmp
inc
aad
xchg
mov
loopne
xor
cs
ins
(bad)
rcl
popa
or
mov
in
out
aas
xor
je
pop
scas
and
xchg
ret
cmp
fisttp
cmps
sub
add
pusha
cmp
sub
cmp
fsub
pop
dec
retf
or
scas
jg
and
pop
mov
cs
jbe
cs
and
rcl
pop
pop
setnp
cmps
cld
jnp
cs
fcmovu
dec
xchg
arpl
test
add
inc
pop
in
cs
ins
inc
les
sub
sub
lds
out
push
rcr
ja
repz
inc
mov
jl
jmp
dec
inc
pop
outs
pop
aam
add
es
sub
lock
test
fisubr
jg
and
jne
inc
ja
(bad)
fs
sub
hlt
fdivrp
sahf
sub
mov
cmp
and
jecxz
test
fadd
and
jle
scas
out
leave
xchg
call
cmp
inc
data16
pop
xlat
dec
je
das
mov
adc
aas
test
test
add
add
and
lds
stc
xchg
mov
(bad)
jmp
xchg
jg
push
and
xchg
scas
aas
leave
retf
mov
and
scas
xchg
mov
and
and
push
pop
aas
adc
stos
jmp
xchg
add
leave
ja
lock
loop
enter
sub
jnp
nop
test
lock
stos
nop
inc
xchg
hlt
int3
xchg
pop
popf
xor
mov
adc
(bad)
sub
std
mov
inc
sub
scas
loope
out
cmp
repz
cmp
cdq
mov
xlat
adc
stc
es
icebp
lock
imul
shl
(bad)
in
push
sub
aaa
sti
push
sub
xor
or
and
and
enter
retf
outs
in
cs
cmc
int3
lahf
mov
sub
mov
push
inc
cs
sub
cmp
mov
mov
ror
out
push
jle
add
sub
cmps
xchg
std
fsubr
les
icebp
xor
sbb
and
cs
xchg
rcr
daa
shl
clc
xchg
jge
aaa
int3
dec
xchg
mov
sub
addr16
pop
or
xchg
mov
xor
cli
xor
daa
es
cmp
call
dec
data16
xchg
pop
imul
cmp
pusha
(bad)
xchg
(bad)
ja
es
dec
nop
or
dec
mov
sub
add
fistp
mov
mov
cs
dec
retf
adc
lahf
pop
cmp
or
call
jo
fsubr
ror
paddusw
xor
jns
jb
addr16
out
lea
rcr
xor
sub
in
mov
cs
pop
jl
pusha
cmp
pop
loope
push
mov
jp
push
inc
loopne
jo
inc
mov
jae
xor
stc
cs
xchg
sub
ret
scas
pop
xlat
cwde
mov
mov
mov
pop
popf
inc
xor
(bad)
rcr
xor
cmp
idiv
sti
imul
popa
push
cs
cs
dec
dec
aam
push
mov
cdq
scas
add
inc
cs
loop
movs
imul
enter
arpl
and
pop
lods
scas
cmps
ret
mov
shl
sbb
test
sbb
ror
out
(bad)
faddp
mov
cld
cs
add
sub
sbb
xor
push
xchg
shr
push
inc
enter
push
in
pop
(bad)
jle
shl
jbe
sub
push
inc
mov
pmulhw
out
push
std
sti
cmp
and
jecxz
mov
in
add
aaa
shl
ins
out
dec
lds
inc
lahf
jnp
daa
sub
mov
ins
mov
jae
dec
add
xlat
outs
sbb
stc
aaa
xor
in
xchg
push
inc
scas
sub
pop
mov
push
pop
cmp
mov
cld
push
sar
jmp
cli
cs
jns
adc
xor
pop
sub
cdq
or
or
cmc
rcl
sbb
cmps
lds
retf
dec
mov
cs
and
mov
repnz
sub
push
inc
push
imul
outs
pop
push
sahf
xor
and
lods
pop
push
dec
pop
inc
jge
sub
fs
sbb
mov
cs
xchg
mov
sub
mov
mov
xor
inc
push
push
pop
jmp
addr16
popa
test
scas
pop
mov
mov
in
mov
and
mov
ja
cs
sbb
mul
xchg
aaa
cmp
and
shr
shl
test
jnp
imul
sahf
test
lock
das
xlat
shl
aad
sub
fist
push
pop
mov
cs
xchg
aad
out
mov
and
pushf
dec
outs
jb
scas
or
repnz
repz
xor
dec
(bad)
mov
or
push
mov
mov
mov
popa
jl
scas
(bad)
xor
xchg
(bad)
or
call
fdiv
cmp
mov
mov
push
adc
jmp
cmps
aaa
push
and
ds
cmp
sbb
jb
mov
loop
adc
pop
pop
fwait
outs
into
jno
loopne
add
loop
stc
call
js
loope
and
pop
faddp
xor
neg
dec
or
mov
pop
sbb
xor
repz
sub
out
mov
add
mul
daa
lahf
ins
sub
mov
add
jno
inc
daa
cmp
adc
rol
mov
cs
jg
inc
xchg
addr16
pusha
cmp
cmp
in
push
sbb
cmps
popf
cs
and
(bad)
aas
xchg
jg
lods
dec
int3
ja
cs
xchg
pop
dec
jbe
shr
xlat
push
arpl
pop
xor
jb
test
movs
out
scas
add
cld
mov
daa
pop
fld
lock
stos
and
pop
xchg
loop
into
je
mov
gs
or
xor
xchg
cmps
and
call
std
fsubr
mov
outs
test
mov
dec
sbb
outs
mov
push
cs
xchg
stos
retf
xchg
ja
xor
xor
test
jmp
je
and
dec
fist
test
jge
shl
fimul
test
fwait
das
fs
mov
sbb
sbb
and
cmp
xchg
cs
pop
inc
ins
cli
inc
fbld
adc
out
cs
into
cmc
lea
push
push
or
shr
retf
test
cdq
fcmovnu
mov
fsubr
xchg
stos
sbb
dec
jp
lds
dec
jg
adc
out
push
mov
push
outs
dec
pop
cmps
jmp
(bad)
cwde
xlat
sbb
push
mov
cmps
(bad)
inc
movs
push
mov
cmp
jmp
mov
or
push
jns
shl
cs
or
popa
(bad)
cvtpi2ps
dec
hlt
mov
dec
xchg
(bad)
cs
(bad)
cdq
cs
mov
jb
jno
es
iret
mov
out
xor
in
cs
mov
fistp
cs
and
jae
sbb
out
xor
fisubr
sub
into
xchg
mov
lock
adc
daa
test
ficom
xor
cs
fisubr
jle
and
push
mov
imul
dec
dec
xchg
ja
push
cld
stc
ss
pushf
sahf
dec
cs
shr
xlat
in
jg
ret
ins
mov
xor
cwde
aas
xchg
push
xor
int3
mov
cs
mov
arpl
(bad)
cwde
sahf
(bad)
cs
xor
push
mov
dec
cs
pop
jge
lods
xchg
jo
packsswb
dec
scas
cld
and
inc
outs
xor
push
mul
pushf
cs
int
mov
in
je
lods
jle
mov
movs
aas
retf
clc
jmp
ucomiss
xchg
push
sbb
adc
cmc
outs
into
jl
pusha
(bad)
(bad)
dec
js
inc
pop
or
mov
sub
imul
popf
into
shl
xlat
jmp
outs
jbe
mov
sahf
sub
mov
mov
(bad)
xchg
stc
and
xlat
pop
sub
bnd
mov
lods
das
mov
sbb
jbe
not
and
mov
ret
loopne
xor
movs
out
sti
xchg
inc
leave
push
dec
lock
mov
dec
(bad)
adc
pop
dec
retf
adc
sbb
add
pop
and
or
int3
push
sub
and
cmc
sbb
je
sub
inc
test
mov
add
pop
xor
rcr
add
out
test
inc
jge
lock
cwde
adc
cmps
dec
jl
mov
enter
call
adc
mov
push
jge
arpl
xor
leave
jge
mov
sbb
jmp
mov
cwde
mov
sub
adc
mov
mov
xchg
sub
sbb
lds
pop
cmps
xor
dec
or
je
sub
mov
stc
movs
hlt
xor
shl
in
into
pusha
sbb
cs
imul
jp
push
push
cs
or
cmps
inc
cmp
popa
mov
and
(bad)
lahf
ror
dec
cs
popf
jge
or
mov
pop
scas
sbb
dec
xchg
xchg
inc
mov
inc
movs
cs
jo
dec
sbb
bound
mov
jg
sbb
cmc
cs
mov
xchg
add
and
jo
xor
mov
data16
pop
pop
inc
pop
icebp
and
cmc
movs
xor
jmp
(bad)
mov
out
mov
out
fimul
jl
test
call
pop
int
pop
sub
aad
sar
data16
cs
pushf
fwait
cdq
dec
mov
pop
push
jmp
or
jne
jle
pmaddwd
mov
(bad)
dec
outs
sub
cs
xor
sbb
add
xchg
(bad)
stc
cs
push
hlt
out
popf
cdq
adc
or
and
and
icebp
test
sub
jno
loope
pop
mov
mov
push
hlt
fadd
jmp
sbb
test
scas
inc
add
and
jno
pop
inc
cs
movs
inc
cwde
test
adc
out
sub
out
mov
xchg
and
xor
sub
mov
pop
(bad)
xor
and
icebp
adc
mov
cmps
scas
jmp
lds
mov
daa
xchg
jmp
or
jle
test
out
retf
in
pop
gs
xrelease
xchg
cmp
pop
push
pop
test
dec
lea
das
xchg
jle
aam
or
sub
iret
push
cmps
ss
pop
adc
and
mov
sbb
loopne
outs
push
add
or
addr16
and
out
or
mov
sbb
push
xchg
jmp
les
cs
dec
cld
adc
aas
mov
jbe
add
rcr
retf
cs
shl
and
jno
xor
dec
pushw
xlat
mov
mul
xchg
adc
sbb
inc
dec
push
popa
retf
(bad)
xchg
(bad)
dec
jmp
dec
shl
jmp
mov
ret
ror
sub
sub
repz
aas
mov
pushf
jge
xchg
sbb
addr16
mov
popf
jbe
or
jecxz
jle
lea
and
pop
cwde
ror
and
(bad)
(bad)
fwait
shl
ss
test
mov
cmp
jnp
jae
fadd
addr16
push
jne
push
aam
repz
mov
jg
and
aas
fldcw
jnp
ffreep
sar
xor
std
sahf
clc
ins
repz
pop
adc
cs
dec
cwde
ins
cmc
js
mov
(bad)
shr
scas
jle
jl
push
cs
pop
cmp
inc
adc
mov
xor
dec
dec
push
cs
iret
push
cmp
mov
inc
cmp
xchg
jbe
in
mov
aas
arpl
adc
adc
push
push
inc
sub
loope
call
nop
(bad)
retf
add
push
dec
aas
dec
in
inc
push
popa
std
lods
fmul
xor
xchg
aas
xchg
xor
sbb
mov
mov
jb
mov
ins
inc
(bad)
xlat
pop
mov
nop
cs
shl
xchg
rcr
jns
jmp
inc
retf
xchg
mov
push
adc
mov
outs
sub
or
out
push
sti
in
xchg
pop
adc
into
sub
pop
imul
cmp
aas
lock
sbb
cs
pop
xchg
cs
sub
pop
xor
adc
in
gs
mov
inc
scas
clc
daa
or
pop
cli
outs
test
jno
gs
scas
(bad)
call
add
xchg
sub
int
cbw
adc
aas
nop
xor
into
out
sar
push
inc
test
dec
out
mov
icebp
add
adc
iret
mov
fldcw
adc
dec
scas
addr16
js
inc
sti
add
jb
idiv
retf
cwde
clc
js
adc
sub
inc
ds
sub
push
js
aas
addr16
dec
sti
sub
cdq
mov
mov
sbb
jbe
or
ficom
dec
retf
cmp
mov
xor
scas
outs
inc
fcom
push
aaa
sub
das
daa
daa
inc
or
push
pushf
cs
js
push
mov
std
daa
scas
inc
ins
out
jp
imul
xor
stos
enter
scas
mov
ins
mov
adc
pusha
daa
popf
daa
test
jge
mov
dec
stos
test
adc
sti
loopne
stc
mov
add
sub
cs
mov
clc
push
adc
dec
inc
movs
mov
or
into
mov
and
clc
mov
or
dec
cs
mov
mov
shl
neg
xor
sub
adc
mov
jle
and
push
enter
cld
jp
inc
jecxz
pop
ja
outs
pop
test
pop
pop
int3
mov
mov
jb
test
scas
push
inc
mov
ja
pop
mov
addr16
pop
mov
inc
pop
dec
into
call
push
mov
xchg
je
and
jns
es
add
and
stos
cld
(bad)
std
add
inc
push
jecxz
push
neg
retf
sub
into
test
and
lods
aaa
(bad)
mov
mov
xor
fdiv
jmp
(bad)
mov
leave
and
scas
(bad)
je
inc
mov
sbb
mov
call
arpl
sub
or
push
daa
pop
adc
pop
lods
add
and
fucomip
sti
shr
iret
or
push
cs
fcmovnu
inc
dec
push
sub
jno
inc
icebp
and
xchg
add
fldenv
imul
mov
xchg
pop
xchg
fistp
adc
in
pop
xor
push
inc
xchg
and
imul
xchg
call
cs
leave
enter
movs
and
mov
push
aam
mov
(bad)
out
jae
lods
inc
mov
xchg
outs
in
mov
mov
out
popf
(bad)
sti
dec
fadd
fidivr
rcl
or
mov
cmp
pop
mov
sbb
ja
aaa
test
mov
(bad)
inc
rol
pop
cmps
and
imul
retf
push
int3
daa
ss
stos
leave
nop
data16
fisub
scas
mov
jle
icebp
pusha
(bad)
leave
(bad)
adc
jmp
inc
mov
dec
or
sbb
lds
dec
cmp
pop
sbb
jg
pop
or
sbb
(bad)
cs
sub
mov
sbb
sbb
out
xor
push
cs
inc
repnz
cmp
out
lds
mov
add
xor
ds
scas
pop
adc
cs
cmp
pop
fidiv
sub
(bad)
jmp
mov
push
dec
adc
cmp
test
daa
in
stos
mov
fcomip
mov
push
cmc
and
arpl
shl
daa
call
out
cld
inc
dec
lahf
mov
mov
mov
or
pop
lds
das
fwait
adc
cs
pop
arpl
sbb
cmp
fld
add
sbb
leave
xchg
enter
adc
les
add
cs
ret
fsubrp
movs
xor
sub
ror
jg
sbb
das
sub
xchg
and
cs
xor
sbb
in
(bad)
scas
mov
lea
mov
cmp
hlt
dec
add
mov
push
or
xor
add
mov
test
cmp
loop
pop
(bad)
push
xchg
jb
inc
or
mov
adc
push
push
fwait
call
stos
retf
fcom
dec
pop
adc
popa
sub
add
push
imul
and
sub
cli
mov
out
fs
pop
repz
movntq
pop
jle
rcr
jae
cs
iret
jl
push
stc
bound
inc
mov
(bad)
cwde
mov
inc
and
or
(bad)
jmp
call
sti
xlat
cs
enter
dec
daa
arpl
pop
adc
add
movs
popf
mov
inc
pop
jg
aas
mov
ja
aaa
and
sahf
or
rcr
push
adc
jg
icebp
sti
loope
retf
les
sar
loopne
and
std
cs
adc
xor
jb
movs
mov
(bad)
cs
xor
cmp
mov
les
jns
sahf
xor
retf
adc
jnp
cmp
jl
out
mov
repnz
hlt
xor
add
cld
mov
out
fadd
dec
pop
pop
sbb
movs
inc
mov
xor
(bad)
popa
ret
cs
(bad)
mov
outs
stos
scas
cli
cmp
pop
loopne
cs
mov
test
add
add
aas
scas
jbe
shr
jne
adc
arpl
mov
and
out
aam
cmp
lock
std
ret
xor
int3
mov
repnz
add
call
outs
cmps
xchg
(bad)
fild
je
jmp
adc
jo
and
push
push
sbb
add
add
xlat
pop
jbe
cs
pop
jb
or
add
pop
loop
inc
mov
push
aas
adc
jle
out
xlat
sbb
and
popa
test
test
and
outs
je
or
int
retf
repnz
dec
mov
adc
cmp
mov
jecxz
jg
add
add
or
xor
cs
(bad)
in
rcl
aad
dec
inc
xor
mov
out
inc
cmc
std
mov
xor
mul
sub
cmp
push
and
pop
sub
bound
lds
into
lock
cmc
jl
dec
cdq
fcom
test
mov
adc
test
add
cs
pop
in
neg
scas
mov
leave
daa
push
mov
cmp
movs
pop
mov
lahf
mov
daa
ins
pop
add
sbb
and
outs
cli
sahf
push
cmp
mov
xor
ret
jns
push
inc
push
or
sub
mov
and
mov
dec
cmc
xchg
inc
xor
add
cs
and
cs
add
test
or
popa
mov
add
es
push
jae
push
add
pop
popa
adc
wrmsr
mov
sub
dec
cmps
lods
(bad)
mov
fldz
icebp
push
and
les
cmp
xor
add
push
sub
retf
ret
push
xchg
or
int
cdq
mov
mov
add
adc
(bad)
ja
data16
xor
popa
mov
mov
jl
xor
outs
sub
lds
outs
scas
mov
fist
ja
imul
and
test
cs
cmp
sti
inc
dec
sub
xor
cmp
or
fisubr
clc
or
arpl
inc
push
inc
push
push
and
cmp
mov
xlat
call
and
cmp
ret
popf
(bad)
cmp
adc
ins
call
repz
jg
add
pop
retf
xchg
icebp
add
test
mov
repnz
cmp
jecxz
xor
cmc
mov
jp
mov
pusha
aam
jmp
jle
mov
loop
cmp
cs
mov
stos
xor
add
retf
mov
rol
sub
iret
loop
add
addr16
push
enter
dec
add
pop
sbb
pusha
jmp
sbb
aam
pop
nop
out
scas
jle
idiv
shr
or
jb
cld
or
jbe
sbb
mov
div
push
mov
mov
cmp
adc
mov
inc
test
and
jle
cmp
adc
popa
stc
aam
push
or
fstp
lods
out
jg
mov
mov
and
scas
add
mov
leave
stos
mov
movs
bound
sub
xlat
or
xor
test
pop
cmp
mov
popf
xchg
out
adc
imul
lock
ins
test
nop
jle
dec
mov
out
out
mov
mov
push
in
les
mov
and
sbb
(bad)
ss
outs
outs
das
push
jns
and
test
fisubr
mov
mov
push
jno
mov
shr
mov
dec
cmps
sbb
dec
sub
xchg
and
leave
icebp
pop
jge
pop
es
push
pop
cwde
call
xlat
lock
xlat
aas
ins
es
or
icebp
mov
in
sub
jnp
and
enter
sub
sbb
jne
push
jns
scas
pop
add
pushf
enter
sahf
and
dec
mov
mov
xor
xor
xchg
scas
push
in
mov
retf
outs
fs
rcl
sbb
mov
mov
stos
out
xor
fnstsw
fidiv
mov
in
mov
add
xchg
imul
cs
sub
scas
(bad)
jns
add
bound
dec
les
retf
int3
xchg
movs
sub
and
loopne
js
out
enter
out
xor
jb
mov
test
pop
pop
cs
pop
retf
jno
and
mov
mov
xchg
mov
hlt
ss
push
movs
daa
and
push
xor
stos
shr
mov
adc
xchg
int3
cli
sub
xor
sub
pop
dec
inc
mov
fldcw
addr16
xor
(bad)
popf
cs
push
adc
fisttp
mov
(bad)
mov
xor
xor
or
daa
ss
aas
and
and
fldlg2
(bad)
popf
out
sub
pop
pop
sub
push
into
fild
aaa
or
stos
pop
shl
xchg
mov
dec
shl
lods
push
js
ror
ja
out
xchg
outs
push
mov
lock
scas
pusha
(bad)
mov
cmp
inc
adc
retf
pusha
dec
cs
add
lods
xor
repz
(bad)
add
ret
or
test
jae
or
xor
and
mov
scas
mov
(bad)
sub
cwde
jl
das
fmul
mov
dec
dec
mov
sub
dec
jb
xor
cs
mov
fistp
mov
(bad)
cs
stos
out
push
lds
scas
pusha
mov
inc
adc
xor
mov
or
into
cmps
push
cs
xor
lock
das
mov
daa
dec
push
cmps
(bad)
sahf
jbe
adc
pop
adc
lahf
scas
std
pop
or
sub
popa
and
mov
nop
cs
iret
mov
cs
xlat
mov
rcl
repz
shr
inc
mov
ds
movs
lock
daa
dec
out
pusha
xchg
aad
lahf
jb
pop
adc
push
mov
mov
inc
mov
push
and
mov
loopne
xchg
cs
test
ins
and
adc
dec
daa
and
and
out
cs
outs
inc
xor
sbb
out
packuswb
fcomp
cmp
and
lea
outs
dec
or
jp
int3
xchg
sbb
dec
xor
adc
mov
xor
cmc
xchg
in
cs
sub
add
clc
adc
and
and
inc
mov
fidiv
or
jmp
imul
push
cs
add
bnd
mov
add
mov
add
into
and
inc
pop
out
outs
add
bound
cs
lock
mov
cmps
lds
mov
cmc
mov
bound
dec
inc
mov
cmp
scas
adc
pop
and
lea
loopne
cs
cmp
imul
or
push
or
and
cmp
outs
mov
xchg
sahf
jp
adc
popf
xor
(bad)
mov
loopne
js
adc
outs
daa
scas
aam
mov
das
push
scas
in
cmp
int
stos
sbb
sub
sar
and
or
inc
push
sbb
scas
dec
jns
jmp
push
mov
sbb
into
sub
cdq
call
add
jbe
push
mov
iret
pop
call
daa
jno
into
and
or
pop
mov
cs
inc
cs
int
mov
dec
ret
sub
push
fild
ret
movs
hlt
mov
xor
in
call
mov
cmp
cs
mov
inc
fisub
cmps
xor
cmp
mov
mov
jne
out
loope
addr16
nop
cmps
adc
inc
loopne
pop
aam
out
inc
retf
jge
push
inc
adc
xor
adc
mov
sub
mov
dec
aas
nop
dec
data16
inc
test
test
jno
pop
push
push
fsubr
pusha
xor
sub
into
cmp
mov
inc
retf
iret
and
in
or
outs
js
aaa
add
cmp
sbb
or
jae
or
scas
sub
cdq
cs
int3
shl
jp
invd
cs
push
(bad)
cs
ds
fadd
xchg
pop
sbb
pusha
ja
arpl
adc
inc
or
xor
sub
push
sbb
imul
cmps
scas
jo
sbb
dec
cwde
shl
push
jge
or
xlat
fistp
movs
sbb
int3
add
(bad)
add
in
js
push
in
sub
mov
jp
jb
rol
sub
leave
stos
jne
test
dec
outs
add
jg
pop
jno
leave
scas
sbb
sbb
jecxz
push
ret
test
daa
xchg
dec
inc
xor
pop
imul
test
or
in
sar
rcr
leave
inc
mov
aaa
out
sahf
jo
sbb
(bad)
add
lods
(bad)
push
sar
cmp
dec
(bad)
or
lahf
icebp
pop
mov
ficom
jo
push
add
add
jp
loope
fdivp
call
jbe
push
jne
mov
mov
xchg
adc
push
sub
push
in
push
hlt
dec
sub
ret
pop
sub
inc
pop
mov
adc
mov
sub
sbb
icebp
cmps
bound
push
js
add
adc
jne
test
cmp
and
or
pop
dec
xor
pusha
xor
mov
and
call
xor
outs
fs
jmp
or
in
xchg
ret
cs
mov
call
movs
repnz
mov
clc
hlt
and
retf
outs
add
inc
cmps
cmp
sub
lahf
ins
cmp
or
inc
sub
mov
leave
dec
mov
hlt
sbb
ret
sbb
inc
xchg
or
fist
hlt
outs
cs
(bad)
push
push
mov
repz
or
mov
out
xor
jnp
fs
sbb
fucom
inc
adc
lods
pop
loop
cli
cs
test
inc
jle
cmp
or
fstp
sub
(bad)
jo
add
xor
stc
js
movs
sub
pop
test
popa
enter
mov
cld
sbb
scas
and
test
mov
test
pop
js
cdq
ja
es
in
sbb
aam
pop
call
cmps
mov
lods
adc
sub
scas
fiadd
ror
jb
push
push
outs
or
scas
leave
mov
xor
cmps
fimul
inc
ret
pop
lds
fcmovnb
or
sar
cwde
stc
cmp
mov
inc
cmc
jmp
fsubr
mov
test
es
mov
jb
lea
mov
mov
mov
push
push
out
xchg
xchg
jae
xchg
and
inc
mov
pusha
xor
inc
cmp
aad
xchg
or
inc
test
in
jmp
sub
leave
add
rol
jbe
add
es
movs
mov
outs
inc
pop
mov
adc
pop
and
inc
aaa
out
outs
push
lods
cwde
mov
clc
mov
mov
add
cmps
xor
or
ins
pusha
mov
and
pop
cli
sub
out
ds
(bad)
out
ja
shr
(bad)
test
add
sub
or
lea
jmp
mov
(bad)
inc
call
cmp
add
ret
leave
mov
test
test
(bad)
adc
mov
inc
pop
daa
xor
je
xchg
mov
inc
fdivr
add
sar
leave
sbb
daa
movs
xchg
pop
jmp
shl
ret
sub
mov
ss
mov
and
add
cwde
rol
sub
cmp
dec
xor
(bad)
ret
lds
mov
lods
repnz
xor
add
jno
jecxz
(bad)
sbb
mov
xchg
jl
std
push
lods
xor
out
jae
mov
jp
fnstenv
push
or
retf
sub
test
pop
loop
pop
sbb
and
stos
in
sar
mov
mov
nop
fsub
icebp
sub
xor
push
ss
aad
sbb
sub
cld
es
(bad)
cmps
xchg
outs
loope
loope
sub
pop
jno
int
cs
xchg
cs
sbb
int3
in
and
imul
leave
bound
push
dec
pushw
xor
inc
sub
jo
popa
xchg
xor
inc
add
and
pop
cmps
cdq
leave
add
xchg
out
int
add
out
fisubr
sbb
repz
je
xor
push
sar
(bad)
jmp
mov
or
xchg
lea
rcr
or
push
outs
cmp
test
cwde
fisub
dec
push
mov
stc
daa
mov
call
movs
sub
test
cmp
dec
sub
imul
aad
dec
sar
mov
or
sub
xchg
stos
test
and
ret
pushf
pop
push
out
pop
inc
mov
mov
jl
pop
pop
pop
xchg
push
sbb
(bad)
sub
sub
mov
repnz
in
fimul
jge
jo
test
scas
jmp
leave
sub
mov
icebp
xor
pop
rol
and
cmp
pop
shl
pop
xor
sub
sbb
pop
or
xchg
mov
sub
(bad)
pop
cld
sbb
sbb
jg
mov
adc
add
pop
cli
push
rcr
and
clc
mov
xor
(bad)
pop
jmp
sub
cs
mov
call
and
and
mov
sub
inc
inc
jle
ucomiss
mov
xor
pop
out
xor
pop
dec
out
jge
sbb
mov
add
in
push
and
shl
or
push
in
aas
fcom
clc
cs
out
dec
dec
jecxz
iret
ja
pushf
jnp
inc
push
hlt
mov
push
and
in
icebp
fmul
test
push
hlt
(bad)
jg
sub
sub
mov
daa
push
cli
mov
push
xor
xor
out
sub
lods
jmp
cs
cld
mov
cdq
xor
xchg
fsubr
inc
push
push
mov
pop
dec
cmps
rcl
mov
loopne
adc
fimul
out
int
mov
addr16
add
jae
cs
or
retf
rol
pop
in
clc
test
cs
bound
jo
test
sub
in
or
cld
cmc
jmp
and
cs
push
out
pop
mov
pop
mov
test
repz
fcom
sbb
daa
dec
or
js
dec
adc
fidiv
ret
leave
ror
sub
sub
mov
xchg
sahf
nop
pop
scas
sub
add
cmc
retf
pop
inc
push
adc
cmp
pusha
mov
out
dec
adc
push
sbb
aad
retf
cs
mov
(bad)
jp
es
rcr
call
adc
mov
xor
xchg
cs
push
xor
xor
adc
loopne
xchg
dec
icebp
(bad)
sar
fnstsw
pop
ucomiss
and
test
imul
cmp
scas
and
or
push
cs
gs
sub
in
cmc
dec
(bad)
out
(bad)
mov
rol
mov
jmp
lock
out
dec
mov
dec
jmp
jle
mov
rol
jnp
ss
out
scas
ret
mov
mov
mov
std
inc
and
xor
popa
loopne
push
xor
dec
xchg
mov
sbb
aam
es
and
lock
mov
inc
into
cmp
adc
fldcw
lahf
cs
(bad)
push
ret
adc
cmps
jge
and
pop
xchg
or
dec
or
outs
clc
daa
jb
inc
mov
xor
adc
hlt
mov
push
jmp
js
inc
cs
retf
add
imul
pusha
or
xor
je
hlt
push
xchg
(bad)
mov
pop
lea
sub
or
(bad)
sbb
and
jno
xsaveopt
xchg
loope
xchg
inc
mov
xchg
out
mov
mov
stos
push
out
inc
fcom
mov
mov
sbb
iret
jb
(bad)
outs
ds
arpl
out
loopne
xor
icebp
rol
add
inc
or
mov
cs
add
push
ins
imul
dec
push
xor
fcom
xchg
stos
inc
fbstp
call
sub
add
push
push
push
jo
lock
and
xor
inc
sbb
ins
fisubr
out
fsub
pop
(bad)
jg
shr
jp
xchg
jno
call
mov
jle
mul
scas
sub
cs
xor
cs
cmp
shr
cmps
push
loopne
(bad)
pop
cdq
lods
push
stos
ficom
push
and
movs
in
outs
hlt
jg
dec
sub
pusha
pop
clc
rcl
xlat
and
sub
scas
push
sbb
daa
xchg
mov
xor
(bad)
lea
lahf
fcmovbe
cs
ds
cmp
test
and
ret
xor
sar
fdivr
pop
xchg
xor
rol
popa
dec
popa
and
mov
push
lock
es
popa
jl
int
push
cmps
pop
jmp
scas
mov
mov
fsubr
sahf
sub
lods
mov
iret
shl
out
sti
mov
pop
sbb
pusha
sub
fldenv
pop
cs
imul
xchg
loopne
inc
into
sub
push
mov
and
stc
shl
scas
out
jo
sti
jmp
movs
mov
mov
call
loop
icebp
cs
call
cs
cmc
mov
mov
cld
movs
cwde
fsubr
dec
mov
inc
rcr
sbb
test
ret
push
mov
in
add
sub
pop
pop
jmp
lahf
sahf
mov
mov
push
cs
pop
jmp
cmp
shl
jns
inc
pop
imul
movs
out
xchg
xor
or
scas
mov
test
and
xor
xchg
rcr
repz
add
in
in
mov
std
movs
in
mov
push
mov
push
mov
loopne
cmp
xchg
stos
pushf
ror
jecxz
ret
cdq
mov
cmps
jp
push
sbb
mov
or
les
aad
cdq
(bad)
cs
sub
cmp
in
pop
cmp
iret
aam
mov
xchg
pop
mov
mov
mov
arpl
pushf
pop
cs
xchg
add
call
or
dec
aas
das
jb
and
pusha
jne
jb
push
(bad)
test
pushf
loopne
(bad)
movs
inc
cs
ret
xchg
cmp
imul
xor
int
arpl
push
fisub
aas
fnstenv
xlat
and
cmp
loopne
cs
jae
xchg
lds
sub
jle
inc
aaa
sub
jb
pop
daa
in
inc
pop
out
repz
dec
mov
mov
outs
aas
imul
gs
es
out
outs
loop
stos
(bad)
rcl
jg
or
retf
cli
jmp
push
nop
icebp
or
pushf
pop
pop
push
(bad)
out
cs
inc
cmp
fwait
sbb
mov
cs
cdq
lahf
hlt
les
call
jae
loop
ret
and
sti
test
mov
xor
ror
xchg
aaa
inc
or
es
stos
or
push
(bad)
repz
mov
ss
or
aas
test
jnp
hlt
xchg
nop
xor
and
cs
jns
xchg
mov
scas
mov
aaa
jp
cmp
or
jle
cs
push
sbb
cs
loopne
pop
test
(bad)
and
sub
sahf
dec
and
lock
add
sbb
imul
stos
jecxz
scas
imul
ret
mov
adc
xchg
cs
daa
cmp
jnp
cwde
push
outs
call
sbb
(bad)
jno
sti
add
js
hlt
add
cmp
bound
xchg
push
xor
push
fimul
in
mov
cmp
leave
lock
aas
mov
mov
lods
into
div
loopne
jbe
cwde
ret
add
outs
and
mov
shufps
sar
push
dec
fs
sbb
add
mov
je
mov
ins
mov
push
sbb
xor
iret
inc
jecxz
lds
pop
out
dec
sti
push
pusha
jl
and
dec
sub
cmp
dec
xor
lods
cmp
retf
or
add
cmp
xchg
gs
sub
xchg
xor
lea
push
(bad)
jg
sub
xchg
imul
jp
retf
jp
shl
and
dec
push
fwait
add
es
xchg
jecxz
or
xor
repz
add
out
inc
test
ins
adc
hlt
out
loopne
add
or
pop
int
(bad)
gs
jbe
add
ret
and
push
test
sbb
aad
dec
cmp
add
dec
adc
jno
mov
sub
shl
and
jmp
stos
dec
xlat
sti
xor
mov
xchg
int3
movs
fbld
sub
fsubr
cs
dec
and
push
jno
dec
jne
mov
push
nop
mov
pushf
ss
dec
rcl
pop
jge
das
cmp
mov
dec
(bad)
(bad)
cs
cmp
add
mov
clc
pop
or
add
test
scas
fbld
xor
add
or
cs
add
add
jno
push
mov
outs
(bad)
hlt
adc
ins
pop
je
or
aaa
jmp
in
gs
shr
sub
sbb
bound
fimul
cmc
push
pop
mov
xor
add
sbb
popf
cs
clc
scas
out
in
loope
mov
xchg
add
(bad)
daa
jno
jae
iret
out
ins
fwait
or
push
aaa
cs
sub
xor
out
jmp
push
(bad)
cli
aas
dec
and
cs
cs
mov
xchg
popf
mov
lds
xor
push
cwde
sbb
mov
sub
mov
sbb
or
sbb
pop
scas
fld
mov
sbb
pusha
loope
out
sti
sub
cs
xchg
shr
cld
sub
xlat
sbb
(bad)
pop
inc
je
in
jmp
fnstenv
retf
and
inc
dec
dec
shr
ja
push
pop
push
fisubr
jge
jbe
pop
test
outs
mov
sbb
lods
sti
data16
jmp
xor
adc
push
or
or
and
daa
arpl
xchg
scas
mov
mov
scas
inc
jl
mul
je
push
pop
cmc
js
cs
dec
inc
or
fcmovbe
(bad)
test
cs
fmul
daa
cmp
pop
mov
xlat
movs
mov
outs
jne
inc
xor
pop
dec
add
and
dec
std
xor
ins
mov
mov
jns
xchg
out
popf
shl
leave
out
imul
and
inc
inc
dec
cmps
rcr
and
neg
dec
mov
outs
pushf
in
aaa
jmp
retf
(bad)
fwait
ja
inc
bound
push
or
lods
pop
cmc
pop
movs
push
add
and
dec
jmp
lods
imul
mov
ins
add
loopne
and
xchg
sub
sub
sub
(bad)
fidiv
inc
xchg
jmp
sub
and
leave
push
add
cmp
imul
pop
mov
cmps
fistp
popa
js
aas
mov
jb
sub
nop
push
push
enter
test
cli
inc
ins
(bad)
fild
sbb
es
add
dec
xor
or
mov
aaa
in
inc
push
pusha
pop
push
enter
cmp
xchg
cs
pop
add
and
push
adc
cs
pop
sbb
push
sub
pop
outs
push
sub
jno
div
mov
hlt
push
retf
cs
das
fldenv
test
test
mov
jnp
cs
or
sub
inc
mov
gs
(bad)
push
lds
mov
sbb
pop
pop
in
jno
sub
cmp
loope
mov
test
push
adc
jnp
ja
or
adc
mov
cs
jmp
adc
arpl
in
fst
into
sub
mov
pop
or
push
lods
cs
jns
jo
push
push
adc
dec
not
cwde
cs
mov
stc
pushf
xlat
xor
mov
xchg
sbb
into
adc
push
jne
stos
scas
sub
ins
call
iret
push
popa
and
sub
jle
and
xor
sbb
dec
test
fwait
ins
fld
cmp
mov
fnstsw
or
inc
scas
into
pop
das
cs
inc
mov
daa
cld
sub
cmp
adc
mov
ins
(bad)
pop
or
test
sbb
ficomp
daa
jl
adc
adc
jecxz
mov
test
jl
test
sbb
push
cmps
pop
aaa
mov
outs
jmp
jle
xor
push
xor
ja
sub
cs
jmp
cs
rol
pushf
outs
push
psllq
sbb
imul
jns
dec
imul
fistp
jge
(bad)
add
pop
dec
daa
pushf
lods
shl
outs
jne
loop
sahf
fsubr
xchg
pop
test
mov
add
cs
aam
cld
test
mov
test
inc
inc
dec
inc
(bad)
cs
dec
or
lods
repz
cs
pop
jle
lds
jge
cs
(bad)
aad
int3
cwde
js
and
sahf
scas
lods
sbb
xor
inc
into
outs
icebp
movs
mov
xchg
xchg
ret
cmc
xor
add
cs
repz
pop
inc
ins
into
pop
gs
aam
xor
pop
sar
shl
js
jnp
xchg
add
push
stc
sbb
sub
add
mov
push
jbe
fdivr
xor
xor
jmp
mov
jge
pop
mov
test
out
push
add
and
cmp
mov
cmp
mov
movs
test
mul
mov
ret
daa
nop
lea
pop
push
aas
mov
test
jecxz
ds
push
sbb
out
leave
or
and
xor
jl
sbb
lods
lahf
pusha
cmps
cmp
xor
or
mov
call
rcl
jns
pop
xchg
jg
push
mov
outs
dec
mov
jmp
and
test
jnp
outs
cmp
cmp
test
jl
push
cs
repnz
out
leave
or
xor
push
fbld
mov
aad
and
xchg
js
inc
push
shl
sti
(bad)
popf
(bad)
data16
sub
lahf
clc
xchg
xor
cmp
xor
fcomi
sbb
leave
data16
scas
fist
push
xchg
mov
(bad)
push
shl
lea
push
mov
dec
add
xchg
sbb
rcr
push
ss
fmul
jne
mov
loopne
inc
pop
mov
mov
lods
outs
fcom
xchg
mov
adc
test
cli
adc
lar
ds
mov
jns
loope
hlt
cmps
mov
and
(bad)
mov
push
outs
sub
adc
data16
xchg
rol
test
dec
ss
add
imul
sub
in
dec
sub
or
adc
xor
mov
inc
mov
ss
(bad)
pop
inc
mov
mov
test
mov
stc
cmp
stos
jmp
cmps
adc
jae
mov
imul
cs
xor
movs
mov
aad
icebp
shr
into
sub
pop
cs
mov
movs
(bad)
cs
push
xor
sub
fwait
xchg
cs
inc
int
test
addr16
fisubr
hlt
outs
dec
arpl
jbe
sbb
add
mov
lods
pop
scas
leave
mov
(bad)
in
std
cdq
out
adc
xchg
cmps
push
scas
fs
loopne
cs
mov
scas
cs
pop
test
push
dec
iret
imul
push
lock
es
(bad)
fld
push
rcl
cs
push
add
aad
mov
mov
lds
pop
cmp
(bad)
sub
cmp
jae
mov
pop
adc
push
mov
dec
(bad)
shr
dec
sbb
test
xor
jbe
les
pop
adc
test
shl
into
add
mov
push
and
call
loope
xor
(bad)
popa
cs
in
cs
fistp
cwde
cmp
sub
call
lds
mov
ret
mov
jl
xor
push
add
lahf
cld
adc
jmp
xchg
xor
outs
push
sbb
cs
and
rcl
push
cs
mov
pop
cs
das
int
(bad)
(bad)
loop
mov
inc
push
popa
add
lods
mov
jb
xor
sbb
lahf
mov
(bad)
xor
retf
das
cs
push
pushf
lods
loop
cs
inc
cwde
fld
pop
mov
or
xor
xor
and
mov
cmp
shl
pop
xchg
sub
ja
cs
cwde
fstp
sub
scas
add
(bad)
test
mov
cld
jg
cs
add
mov
shr
clc
mov
ret
cs
shl
add
cvtps2pi
xor
ja
call
shr
in
push
add
ret
enter
sbb
xlat
or
lock
adc
xchg
fwait
outs
xor
cs
data16
jl
sub
xchg
cwde
xor
fdiv
sub
and
lea
inc
inc
cs
xor
or
pop
add
fadd
jge
cmps
cmp
or
stos
dec
jp
pop
retw
mov
add
mov
cs
push
add
lods
movd
shl
dec
pop
in
and
pop
xchg
cs
ficomp
jle
mov
mov
dec
into
lods
pop
aas
mov
xor
mov
cmps
aad
cs
outs
sub
cs
cmps
repz
das
cmps
add
stos
or
mov
or
push
cs
test
add
cmp
cs
out
ror
mov
mov
ins
dec
sub
sub
fld
and
mov
in
outs
cli
out
movs
retf
cs
mov
push
cmp
cld
arpl
int
call
add
lock
sub
cs
mov
cs
cmp
jl
gs
fidiv
dec
inc
sub
(bad)
jno
enter
mov
adc
shl
mov
test
xchg
lods
inc
xor
cmc
fisub
jno
cmp
and
xchg
test
out
or
lock
int
je
jg
sub
out
sbb
cs
fwait
leave
jp
inc
xchg
in
sub
(bad)
push
dec
es
mov
pusha
(bad)
add
imul
dec
xor
and
and
rcl
adc
sti
iret
inc
cs
or
cs
xchg
aam
int
push
inc
pop
mov
lahf
call
sbb
mov
lods
mov
sti
jmp
pop
jmp
hlt
adc
mov
bound
sub
iret
int3
mov
and
cmp
pop
repz
lods
dec
outs
js
adc
cs
scas
mov
outs
cs
mov
mov
cmp
lock
cs
fnstsw
ins
and
xlat
cs
sbb
mov
mov
out
in
retf
ret
xor
out
or
push
movs
loope
into
add
fwait
dec
aas
or
mov
xor
loopne
fild
cwde
mov
mov
mov
jno
xchg
jb
daa
pop
sub
dec
out
cwde
addr16
movs
adc
mov
jg
paddb
xchg
xor
lock
dec
ja
std
mov
stc
popa
or
jle
lds
popf
dec
outs
adc
sbb
xchg
push
cs
push
ins
sub
cdq
loope
fs
retf
push
fdivr
pusha
mov
jns
scas
dec
cmp
scas
sbb
jb
mov
and
jne
cmps
outs
xor
int3
cs
dec
ins
stc
les
and
and
jmp
stc
repnz
lahf
shl
push
jl
add
scas
mov
icebp
lods
and
xor
outs
jmp
out
ss
leave
add
test
mov
ss
sti
les
stos
pop
js
enter
loop
repz
push
dec
and
ss
scas
sti
or
test
mov
mov
or
jmp
or
out
xor
leave
daa
sbb
dec
inc
in
movs
xor
aas
xchg
sbb
xchg
ds
lds
push
adc
xchg
adc
cmps
lods
mov
and
aam
cmp
push
movs
out
je
test
data16
cmps
jb
mov
xchg
mov
cmp
pop
mov
aad
mov
mov
xchg
mov
sbb
xchg
std
mov
mov
hlt
gs
mov
sub
fs
mov
aad
cmps
jp
fucomi
or
or
shr
into
fist
jecxz
fisttp
adc
sti
scas
sbb
sar
(bad)
cdq
lahf
xchg
dec
int
cs
fld
sahf
cs
or
mov
data16
jg
and
push
mov
dec
mov
push
imul
hlt
into
pop
repnz
adc
cwde
cs
in
add
xchg
daa
shr
fsub
and
jns
repnz
in
sqrtps
cs
pop
adc
jmp
(bad)
rol
cmp
and
push
inc
sub
and
xor
push
cmp
loop
call
sub
in
jl
(bad)
mov
jp
and
cmp
fdiv
(bad)
and
cmp
ror
xor
mov
cs
add
(bad)
jle
jmp
fcomp
fs
cmp
inc
lock
xlat
cmp
test
bound
push
ins
jmp
arpl
adc
sbb
push
outs
pop
push
cs
push
mov
xchg
fisubr
cs
jmp
xchg
out
mov
xchg
shr
call
stos
xchg
ret
das
inc
jns
add
cmps
cs
gs
and
fsub
aam
mov
out
xor
xor
dec
daa
popa
into
in
outs
lds
or
mov
adc
push
pop
cs
test
js
push
sbb
mov
dec
ss
shl
jl
jns
loop
push
in
mov
hlt
cs
mov
inc
inc
cmps
(bad)
std
into
test
xchg
cmps
scas
push
mov
cmc
push
ja
ins
shl
leave
or
adc
cmp
cmp
loope
xchg
jmp
mov
cmps
sbb
es
mov
dec
aam
icebp
jl
lds
pop
lock
mov
and
sub
jp
fimul
pop
enter
in
push
add
movs
sub
out
cmp
push
mov
push
lods
retf
scas
cmp
hlt
push
sbb
cmp
es
lods
movs
sbb
mov
es
loopne
(bad)
xchg
mul
aam
stos
icebp
es
lods
int
push
(bad)
loopne
cli
out
jbe
movs
sbb
leave
mov
stos
xchg
fwait
ja
icebp
mov
pop
and
leave
or
aaa
(bad)
sbb
push
pop
cmp
add
call
out
mov
loopne
push
es
xor
aas
inc
mov
add
cli
mov
add
cmc
ins
cdq
mov
data16
and
popf
jl
popa
inc
pop
popaw
das
test
test
and
pusha
lds
sahf
popf
or
daa
nop
xchg
pop
pop
es
sub
leave
xchg
outs
out
loop
jae
xor
(bad)
xor
js
jae
sti
xchg
or
mov
nop
dec
(bad)
es
call
leave
push
fs
cmp
mov
dec
fcomp
cmp
js
fcmovne
movs
sar
outs
xchg
lock
inc
mov
mov
mov
jge
jb
cmp
push
mov
ja
(bad)
dec
je
jmp
bound
mov
(bad)
mov
cmc
sub
retf
sub
push
and
cmps
sbb
das
pop
pop
fidiv
bound
cs
cmp
xor
mov
(bad)
aaa
call
jmp
dec
shr
inc
loope
fisubr
mov
(bad)
dec
ficomp
test
pop
cs
test
push
jle
cmps
inc
push
or
xchg
inc
leave
adc
(bad)
xor
jno
movs
rcr
sbb
add
in
aas
fimul
mov
mov
cmps
push
fcomp
fwait
or
xchg
stc
mov
pop
popf
fcmovnb
or
mov
add
cmp
in
cmps
(bad)
enter
pop
(bad)
cwde
call
mov
jle
jmp
sub
push
iret
test
test
mov
xor
adc
mov
add
mov
lahf
jne
arpl
dec
sbb
fadd
or
mov
add
arpl
nop
jge
iret
ret
ret
sbb
xchg
pusha
scas
ds
popf
sbb
cdq
fld
cmp
xor
dec
call
popf
shl
and
into
mov
out
loopne
cs
sub
jno
and
ins
rol
xor
and
dec
stos
cmp
addr16
cmp
mov
mov
adc
push
lods
test
call
sahf
mov
fs
cli
sub
and
shr
(bad)
xlat
pop
js
dec
shl
out
mov
scas
scas
xchg
push
add
sub
jmp
add
cmc
mov
jbe
je
push
js
cs
data16
inc
pusha
movs
loope
(bad)
cld
(bad)
and
mov
jg
mov
call
cs
jl
pusha
sbb
xor
in
dec
xor
add
or
dec
jge
inc
daa
cs
or
sbb
xor
and
adc
dec
pop
sbb
imul
in
not
pop
sub
mov
js
xor
scas
mov
push
sbb
arpl
sub
fs
popa
lds
adc
out
mov
cs
mov
bound
mov
outs
sub
sub
xchg
(bad)
xchg
fimul
cs
jle
sub
adc
jno
push
frstor
sbb
ja
fcmovu
into
es
dec
adc
mov
dec
cdq
stos
pusha
daa
enter
cld
push
sti
mov
xchg
aam
fidiv
les
sub
mov
push
call
or
jae
and
jne
ror
pop
jno
adc
or
clc
cs
mov
fiadd
lds
cs
pop
jecxz
mov
sbb
sahf
sub
xor
adc
adc
retf
iret
mov
pop
dec
js
pop
icebp
inc
ror
cs
push
test
pop
outs
test
(bad)
mov
mov
es
retf
loop
repnz
imul
jae
pop
or
mov
or
cs
xchg
fstp
imul
mov
(bad)
(bad)
in
dec
inc
sar
test
sbb
dec
push
sub
jge
fdiv
xchg
sub
or
xor
dec
mov
sbb
add
aam
fwait
sbb
push
retf
es
mov
cmp
push
movs
inc
sub
cmp
or
test
ins
adc
push
cs
xor
push
mov
mov
test
(bad)
adc
enter
js
xor
mov
push
cmc
push
outs
cmp
cs
sbb
adc
fwait
cdq
and
cs
add
jae
xlat
adc
xor
pop
stos
cs
daa
(bad)
inc
rcl
fs
xor
ja
daa
iret
push
in
mov
inc
cs
rcl
sub
mov
cs
or
push
jg
sbb
jl
rcl
cs
scas
pop
into
mov
or
aam
outs
or
loopne
and
cs
out
ss
mov
mov
rcr
pop
in
ins
sahf
(bad)
cmp
or
icebp
pop
xchg
daa
jns
ret
add
mov
fst
popa
xor
inc
pop
repz
ret
or
cdq
sar
popf
icebp
cs
gs
jecxz
mov
cmp
les
jmp
fmul
fwait
clc
daa
mov
imul
add
and
xor
mov
cli
retf
pop
jae
or
dec
icebp
and
push
or
shl
xor
fnstsw
das
cs
out
mov
outs
aaa
mov
mov
pusha
popa
in
cs
cmp
pop
jle
adc
xchg
cld
out
xchg
dec
pop
adc
cs
sbb
fdiv
aas
outs
xchg
sahf
les
inc
cs
inc
mov
adc
sbb
ret
out
pop
cmps
xchg
je
push
sub
sbb
inc
mov
jl
sar
lahf
xor
xor
pop
(bad)
jmp
cs
cmp
in
cs
jp
repz
es
push
pop
mov
ja
dec
pop
push
xlat
in
popf
mov
cmp
or
add
cdq
(bad)
dec
push
out
and
jmp
and
jae
shl
daa
sbb
cmp
jle
xchg
jo
aas
gs
mov
push
or
cli
sub
cmps
(bad)
sti
xchg
mov
cs
mov
inc
sub
bound
fsub
pop
dec
fst
loopne
mov
mov
add
sub
clc
cmp
cs
push
inc
adc
daa
mov
ja
push
push
mov
pop
pop
int
or
jmp
movs
inc
in
clc
cs
cmp
push
and
call
(bad)
clc
adc
fnstsw
jo
jmp
jmp
inc
(bad)
(bad)
cs
sbb
xor
fisubr
out
test
std
mov
push
sbb
aad
sub
or
add
je
push
pop
fiadd
ss
sbb
cmp
add
or
cs
pop
aad
std
adc
xchg
inc
lea
cs
ret
jl
jmp
or
xor
movs
sub
out
jns
cs
xlat
retf
dec
push
xor
push
push
mov
inc
and
xor
xchg
scas
cmp
sub
out
cs
xlat
sar
cs
int
shl
cmp
or
and
je
add
cli
or
dec
inc
add
jge
xor
sbb
xor
aaa
stc
daa
add
cmp
sub
test
jg
xchg
ss
and
rol
push
out
lea
dec
daa
or
enter
cmc
mov
and
adc
xor
das
xor
adc
in
add
cmps
into
sahf
shl
mov
cmp
loop
and
xor
(bad)
scas
mov
xor
repnz
push
movs
xchg
lds
and
call
iret
scas
sub
(bad)
sbb
cmp
stos
sub
cs
ins
xor
pop
test
or
fst
push
scas
imul
imul
repnz
xchg
mov
pop
adc
jns
fndisi(8087
test
iret
sub
xchg
daa
mov
add
aaa
inc
cs
add
hlt
cs
mov
cmp
xchg
sti
cmp
enter
mov
sub
mov
and
mov
sub
sbb
and
(bad)
out
gs
mov
cmp
jne
outs
dec
push
inc
lds
xor
xor
imul
and
mov
int
add
xlat
mov
cs
sti
stos
out
xchg
mov
xchg
and
xlat
jbe
jecxz
vandnps
movs
cs
xor
xchg
lods
pop
sub
imul
cmp
mov
mov
adc
aas
movs
das
ds
or
(bad)
xor
shl
and
add
and
rcl
cs
std
mov
rol
jle
push
jmp
daa
iret
ret
pop
sahf
sbb
es
enter
fdivp
cs
adc
pop
push
test
outs
in
mov
cs
test
ins
dec
into
sub
jnp
into
ret
mov
cmp
cs
add
ins
lahf
das
jb
gs
(bad)
mov
push
rcr
pop
and
jecxz
sub
out
add
sub
mov
(bad)
test
fsub
pop
enter
sub
mov
adc
outs
fnstcw
div
cs
std
int3
pusha
mov
lods
enter
popf
repz
push
or
popf
ds
inc
retf
out
fst
xlat
sti
cs
movs
xchg
loope
icebp
shr
imul
inc
(bad)
popf
xor
or
daa
movs
pop
adc
inc
xlat
loop
arpl
(bad)
push
inc
sbb
call
pop
push
shr
pushf
pop
lods
xor
mul
xchg
shr
xchg
jns
xchg
inc
push
fadd
daa
mov
add
dec
ds
shl
(bad)
in
pop
mov
mov
out
pop
lods
loop
inc
shl
jnp
cmp
mov
(bad)
call
adc
les
sbb
(bad)
xor
aaa
pop
cs
imul
inc
sahf
cs
push
push
push
pop
pusha
sub
shl
dec
scas
fwait
daa
jg
sub
out
mov
add
mov
mov
pushf
push
outs
fcomip
pop
cs
cmps
mov
dec
mov
jae
jno
xchg
daa
in
sbb
adc
xor
pop
xlat
(bad)
xlat
enter
sub
inc
pusha
push
icebp
cs
mov
aas
ficomp
aad
(bad)
sub
pop
out
out
mov
adc
cs
imul
xor
psraw
jns
cs
rol
dec
xor
aam
stos
scas
ins
and
adc
stc
mov
add
adc
popa
sbb
pop
or
dec
(bad)
(bad)
in
in
out
add
mov
push
sbb
xor
sub
sbb
rol
ret
std
cs
ror
jmp
and
imul
mov
sub
mov
aad
(bad)
imul
faddp
es
mov
jnp
in
xor
xchg
out
or
sbb
idiv
sar
(bad)
test
sub
ret
dec
xor
leave
cmps
je
cmp
fs
cmp
cwde
or
inc
add
jge
loope
adc
adc
imul
sub
add
add
rcl
leave
(bad)
mov
jbe
cs
popa
add
(bad)
xor
retf
mov
inc
sub
push
cmp
sub
jb
pusha
push
jmp
jle
mov
fcmovnu
lods
out
cs
sub
and
adc
jo
jp
aad
fs
bound
out
jmp
xchg
call
mov
mov
pop
or
retf
mov
dec
popa
cs
add
loopne
retf
ror
(bad)
mov
mov
push
mov
push
in
setae
or
mov
int3
inc
fsin
iret
bound
add
xor
loop
arpl
jns
push
push
ficom
fcomip
out
inc
and
in
cs
fsubr
mov
push
movs
popf
into
sar
sub
(bad)
rcl
cmc
cld
out
cs
(bad)
cmp
sub
stc
jmp
dec
add
push
in
daa
adc
mov
xor
dec
outs
push
daa
ret
jo
outs
test
mov
imul
sub
je
in
mov
test
sahf
fbstp
shl
jno
pop
leave
loop
push
push
popf
rol
xor
sbb
out
imul
cmp
lds
fistp
in
xchg
sub
outs
mov
call
in
js
scas
(bad)
call
mov
sbb
and
push
push
stos
xor
jecxz
or
stos
cs
mov
mov
mov
cs
aas
dec
imul
outs
xchg
cmp
xor
mov
jae
aad
popa
inc
adc
cmc
cs
pop
add
cwde
pushf
and
popf
push
sbb
or
(bad)
test
push
push
push
jbe
sub
fst
xor
cmp
adc
and
or
add
inc
xor
xlat
shl
pop
aas
mov
mov
sbb
add
outs
mov
cli
sbb
push
das
xor
aad
popa
bound
test
or
adc
retf
popa
lods
sbb
push
mov
mov
icebp
sahf
pushf
fwait
(bad)
push
push
addr16
jmp
mov
retf
dec
jg
cmp
inc
in
jmp
jg
fwait
int3
push
in
cmp
ins
mov
outs
fadd
aas
jmp
or
ds
cdq
icebp
cwde
out
dec
dec
mov
dec
sar
pop
ret
inc
mov
fsubrp
cmps
bound
inc
mov
cs
inc
jmp
jae
(bad)
sub
mov
sub
adc
leave
js
mov
lods
inc
not
add
icebp
loop
jmp
lods
into
pop
push
arpl
jne
adc
in
retf
leave
shr
xor
lods
xor
outs
mov
pushf
pop
loopne
imul
mov
fmul
mov
xchg
pop
aad
sbb
cmp
xlat
xlat
js
rcl
test
icebp
int3
push
xchg
(bad)
push
mov
dec
leave
mov
xchg
xchg
pop
jb
push
push
test
shl
daa
nop
sub
jecxz
loope
sbb
inc
lods
cmp
test
test
pop
push
mov
mov
retf
iret
cmp
repnz
clc
aad
fistp
enter
call
xchg
shr
int
daa
sub
mov
mov
fidivr
leave
fstp
xchg
sar
push
shrd
sbb
push
pop
sub
int3
mov
xchg
cmc
(bad)
cmp
jbe
sub
jns
inc
fcmovu
jmp
out
enter
or
sar
retf
xchg
or
pop
adc
test
fild
mov
add
ficom
aas
pop
into
(bad)
movs
add
(bad)
fnsave
scas
data16
arpl
sub
push
adc
adc
sahf
outs
jp
outs
push
sub
cs
or
sbb
pop
sar
dec
cs
or
in
xchg
lods
or
push
popa
push
(bad)
cli
sbb
sub
push
nop
mov
adc
or
ret
(bad)
hlt
rcr
adc
mov
inc
mov
rcl
ficom
mov
out
push
test
cs
scas
in
fdivr
jb
sbb
sub
cmp
out
sub
gs
push
cs
or
xor
inc
xor
inc
pop
push
mov
outs
or
jb
hlt
jmp
test
fisubr
enterw
sub
scas
push
jl
mov
out
or
jmp
push
cmp
arpl
ror
dec
out
cmp
repnz
shl
scas
shr
or
jae
xchg
and
rcr
cmc
mov
stos
inc
imul
rol
shl
mov
adc
cli
sub
mov
push
ror
mov
scas
push
push
ja
imul
push
outs
lock
ret
ret
scas
xor
imul
daa
mov
ret
adc
dec
inc
cmp
mov
sub
adc
shr
(bad)
mov
scas
xchg
xchg
js
cdq
push
push
mov
xor
out
adc
(bad)
cmp
dec
mov
dec
cs
call
ffree
add
push
sbb
int
clc
rol
xchg
leave
ficomp
popf
dec
add
lahf
iret
bound
cmp
or
pop
push
cmps
test
imul
dec
jg
scas
popa
sub
jge
imul
cmp
ret
xchg
push
stos
push
enter
std
add
in
mov
jmp
movs
test
loopne
pop
jle
shl
in
pop
add
cmp
hlt
or
ja
and
push
call
stos
into
(bad)
and
sub
adc
or
mov
lock
and
xor
sub
sub
hlt
stos
jmp
inc
ins
xor
cli
call
aam
or
sub
push
push
mov
scas
popf
adc
mov
mov
mov
jnp
loop
mov
mov
and
psubsb
imul
stos
leave
jmp
and
in
and
jnp
bound
je
enter
lods
clc
out
fdivr
pop
enter
outs
sbb
push
ins
imul
jne
mov
mov
sub
inc
(bad)
test
leave
and
mov
push
fnstcw
lahf
xchg
mov
mov
mov
in
sub
(bad)
jg
jns
out
sar
dec
add
inc
sub
fdivr
out
leave
test
pop
gs
inc
jl
or
shl
mov
sub
or
pop
or
out
shl
mov
or
outs
push
mov
push
xor
sbb
jecxz
and
mov
mov
dec
jle
ds
mov
fisttp
dec
std
(bad)
imul
sbb
pop
in
sbb
pop
loop
mov
out
and
leave
sbb
test
cmp
or
jmp
ret
retf
xchg
dec
push
ins
and
ret
mov
mov
mov
(bad)
mov
xchg
dec
mov
clc
xor
mov
repz
pusha
inc
sar
aas
call
sub
fnsave
inc
jae
sub
push
mov
mov
dec
(bad)
mov
call
and
ss
mov
pop
mov
jb
arpl
jl
push
inc
adc
cmp
in
mov
mov
lahf
dec
xor
inc
cmp
and
sbb
cmps
and
pop
cs
popf
inc
push
scas
adc
out
xor
cmps
(bad)
jge
sub
cs
cmp
dec
cli
adc
jmp
cmp
pop
xchg
cs
cs
jp
dec
inc
ret
mov
lods
sysexit
add
jmp
fldcw
call
bound
xchg
jle
xor
test
pop
ja
mov
stos
ret
leave
push
xor
lahf
(bad)
cs
iret
ins
and
adc
add
imul
test
aas
dec
add
mov
cs
pop
in
je
loop
stc
pop
xchg
mov
xor
xchg
mov
push
mov
or
inc
popf
jns
and
adc
xchg
sbb
mov
fsubr
aaa
cs
mov
mov
mov
in
js
adc
pop
mov
sub
mov
lahf
enter
ret
jg
sbb
xchg
pushf
mov
aaa
or
adc
stc
cmp
inc
cmp
xchg
fnstcw
leave
pop
in
xchg
jno
lds
xchg
ret
mov
cmc
dec
data16
sahf
fwait
adc
sub
or
cmp
icebp
cmp
sbb
test
mov
jmp
jecxz
pop
lods
(bad)
cmps
cmp
cs
into
xor
paddq
pop
sub
inc
add
cmp
xor
arpl
pusha
sahf
out
fstp
imul
cs
or
mov
cmp
mov
repz
sbb
call
inc
adc
sbb
loopne
cmp
sub
mov
fwait
out
test
cs
data16
cs
and
push
push
daa
test
push
add
loop
shl
mov
ja
aas
test
add
adc
cs
loop
inc
ins
jg
sbb
push
cs
jo
sbb
fcom
adc
xor
pop
cmp
dec
add
imul
ret
sub
mov
fisubr
push
loope
or
push
mul
ss
inc
sbb
mov
ficom
cmps
push
inc
mov
sub
sub
call
call
ds
fnstenv
in
jmp
shl
adc
test
sbb
push
xor
shr
sbb
push
and
xor
fdivr
(bad)
push
cmp
jge
mov
dec
xor
cdq
pop
sbb
(bad)
sub
mov
fisttp
adc
pop
xor
retf
xchg
pop
or
cs
dec
push
rcl
cmp
rol
enter
adc
call
sti
std
cs
adc
xchg
adc
cs
popa
push
outs
add
add
sub
mov
cmp
sahf
ins
cwde
enter
mov
push
adc
sbb
jae
xor
xchg
sbb
aam
dec
push
mov
mov
inc
push
(bad)
cs
xor
sbb
pop
jg
aas
(bad)
(bad)
shl
xchg
mov
jo
mov
cld
aam
add
ins
dec
movs
retf
dec
xchg
mov
sti
fdiv
icebp
add
mov
xor
and
out
mov
pop
adc
ret
xor
sub
pop
mov
cli
sub
xchg
stc
mov
cli
cmp
ret
mov
push
cmp
je
fst
adc
mov
jo
add
xchg
add
cmc
or
mov
pop
out
sbb
movs
add
outs
and
adc
icebp
sti
fcmovbe
in
fs
lods
out
xchg
pusha
pop
aad
dec
scas
sub
cmp
mov
outs
jle
int
jg
imul
cwde
test
repnz
xor
xor
neg
imul
inc
nop
sbb
leave
or
shr
je
movs
and
push
push
cld
rcr
jne
sbb
stos
sbb
sbb
sub
pop
mov
cmps
addr16
fsubr
les
je
stos
jp
test
test
adc
jne
mov
and
jae
ins
push
jae
enter
mov
pop
and
movs
scas
or
cmps
fdivr
(bad)
ds
aaa
mov
loopne
jo
dec
dec
jnp
sub
inc
adc
(bad)
stos
pop
test
(bad)
leave
repz
pop
ins
cs
and
push
inc
cs
dec
les
loop
jge
cs
cmps
jmp
jns
repnz
cs
outs
inc
les
and
mov
std
cs
adc
cmp
fld
cmp
xor
inc
enter
push
push
and
fwait
push
shl
inc
pop
cs
sti
js
cs
in
sbb
jle
daa
mov
(bad)
cmp
pop
out
adc
fidivr
icebp
out
rcl
cmps
inc
cs
cwde
and
and
movs
mov
xlat
aaa
int3
movs
out
int
repz
dec
jmp
(bad)
hlt
mov
cwde
xor
and
bound
fld
clc
(bad)
fsubr
pop
sar
xchg
ins
or
cmp
add
and
cs
and
std
jmp
ret
dec
aam
mov
cs
pushf
or
js
loope
in
out
test
cs
xchg
adc
and
int
pcmpeqd
jp
inc
cmps
fidiv
ds
and
push
out
add
daa
imul
movs
in
lods
out
cs
jmp
mov
ss
ja
movs
push
out
add
mov
xor
dec
sub
outs
mov
nop
sub
add
cs
pop
in
mov
loopne
daa
fsubr
lods
imul
imul
cs
fidiv
and
inc
js
sar
jp
outs
mov
scas
adc
mov
cs
pusha
dec
retf
xor
mov
jnp
sbb
cmp
ja
dec
loop
and
popf
pushf
daa
xor
pop
jo
cmps
jmp
addr16
cs
ja
mov
mov
sub
xor
mov
sub
push
mov
sub
pop
sbb
enter
cmp
(bad)
jmp
add
xor
out
mov
xlat
in
push
pop
in
jp
das
push
jns
cs
push
dec
dec
div
mov
jno
mov
mov
je
loopne
push
ret
add
enter
outs
aam
dec
pushf
mov
loopne
xor
jbe
fidiv
call
out
fadd
adc
inc
ja
cmp
sbb
push
popa
mov
mov
sbb
stos
fmul
lahf
ficomp
cs
mov
test
(bad)
das
das
ficomp
push
cs
mov
lods
aaa
imul
gs
dec
and
lahf
jnp
ficomp
movs
mov
clc
shr
xor
xchg
xchg
fst
(bad)
inc
add
movs
mov
cmp
je
icebp
call
xor
cs
and
leave
xchg
lahf
cli
sbb
push
sbb
fsincos
ss
dec
imul
xor
fldcw
cmp
sub
and
pop
sbb
mov
xchg
dec
inc
dec
sbb
pop
rcl
jle
inc
xchg
adc
cmps
and
aad
sbb
outs
cmp
ss
adc
jl
sub
mov
mov
std
or
sbb
xchg
xchg
cmps
cmc
js
pop
push
aaa
ins
lods
jnp
inc
push
scas
jle
xor
xor
jmp
ret
jge
and
xchg
sbb
jmp
ins
sub
ja
jp
cmp
popa
and
push
cs
stos
(bad)
aas
mov
jle
out
jno
push
jbe
sti
shr
mov
icebp
pop
stc
sbb
mov
hlt
aad
in
js
or
cs
ret
push
pop
mov
add
pop
mov
mov
and
jmp
jecxz
cmp
jnp
(bad)
fisttp
xchg
cmp
inc
int3
push
fisubr
xlat
pusha
mov
(bad)
mov
add
and
sub
push
mov
jne
sahf
cmp
aas
bound
out
(bad)
cs
into
sbb
repz
aad
or
icebp
sbb
clc
cmps
xchg
ins
xlat
out
test
push
clc
out
pop
cwde
push
pop
inc
xor
enter
jg
xchg
mov
add
shl
inc
push
test
pop
xor
gs
(bad)
push
xor
push
das
es
or
mov
pop
add
jae
xor
(bad)
retf
inc
iret
shr
loopne
inc
xor
js
or
jno
mov
ins
and
scas
sub
xchg
adc
inc
jge
iret
rcr
mov
addr16
pop
ds
pop
loop
(bad)
cld
fisubr
rol
xor
test
cmp
inc
fsub
jae
inc
xchg
outs
fist
rcl
test
adc
adc
cs
cs
int3
and
fisttp
xor
push
shl
sbb
lea
jns
rol
or
outs
xor
arpl
fisub
es
xor
mov
pusha
cmp
mov
sub
inc
dec
je
cmp
fisub
(bad)
(bad)
cs
jge
xor
and
out
mov
repnz
les
add
cs
ret
mov
call
js
lods
xchg
out
into
test
mov
sub
call
mov
cli
pop
dec
or
in
mov
test
iret
mov
test
xchg
sbb
xchg
cs
mov
mov
mov
sbb
pop
aas
scas
cs
xchg
sub
sti
enter
xor
push
mov
bound
cs
mov
xor
and
inc
enter
add
popf
fwait
shl
mov
fidivr
mov
loopne
inc
ret
inc
add
dec
sub
mov
retf
out
jle
jbe
xor
aaa
ss
cs
sub
xor
push
cs
or
out
popa
sub
in
jne
inc
das
(bad)
scas
in
push
out
jo
bound
leave
xchg
push
aaa
into
frstor
repnz
rol
xchg
scas
clc
(bad)
fsubr
cld
xlat
pusha
add
bound
cld
mov
in
or
lock
jge
scas
test
out
imul
sbb
loop
jb
inc
cmc
imul
adc
aam
mov
shl
ret
cwde
or
out
xor
(bad)
xor
lods
bound
mov
inc
cmp
mov
cmps
xchg
les
leave
push
push
or
mov
xchg
loop
add
sub
outs
or
es
xor
jmp
adc
mov
dec
fld
div
fidivr
scas
test
(bad)
cmp
xchg
adc
mov
jns
(bad)
mov
push
pop
dec
or
xchg
mov
lahf
imul
data16
pop
lods
loopne
mov
adc
ins
mov
jmp
xchg
cmp
sub
pop
adc
mov
dec
cld
cmp
jae
in
std
jg
addr16
push
lock
in
jne
sbb
push
push
scas
(bad)
mov
gs
mov
jmp
inc
adc
mov
fist
mov
outs
(bad)
lea
(bad)
(bad)
ucomiss
std
jb
pop
and
jecxz
rol
sbb
(bad)
mov
fistp
hlt
cld
xor
outs
jecxz
sub
stc
dec
inc
add
xchg
lea
call
xor
imul
jae
inc
add
mov
mov
cs
sbb
pop
sub
push
jns
mov
out
adc
lods
movs
pop
std
mov
jmp
push
sbb
out
outs
pusha
jle
add
cmp
sbb
lock
ret
stos
cld
push
mov
xor
sub
pop
mov
cmp
into
jno
lods
imul
jmp
or
popa
sahf
and
bound
clc
aam
xchg
fmulp
xchg
test
out
push
cwde
dec
lods
xor
sbb
int3
jl
push
jge
mov
pop
les
jo
nop
aad
sub
imul
push
sbb
sbb
adc
call
adc
dec
adc
sbb
dec
mov
cs
(bad)
aaa
sub
sbb
xor
ret
cs
or
out
loopne
cs
ficom
(bad)
repz
adc
scas
adc
and
ja
addps
push
dec
retf
aaa
sbb
add
(bad)
mov
ds
retf
cmp
stos
in
inc
daa
ror
inc
int3
lods
sahf
(bad)
jns
mov
sbb
call
imul
ficom
scas
call
cs
ret
dec
(bad)
shl
push
pop
sub
sbb
cmp
cmp
test
mov
fild
xor
rcl
dec
adc
pop
or
int3
cmp
adc
and
es
cs
sti
mov
in
cs
pop
sbb
pop
dec
adc
pusha
test
iret
shr
rol
or
mov
push
scas
aas
dec
ret
cwde
cmp
sahf
push
stos
outs
cmps
leave
pop
sub
cmp
inc
jmp
arpl
fwait
popf
cmp
mov
inc
fbstp
jp
xchg
push
mov
push
jmp
pop
dec
push
js
out
adc
inc
mov
out
push
mov
sub
sub
(bad)
es
bound
mov
fdivr
mov
ror
retf
aad
inc
data16
push
inc
or
test
ss
mov
leave
sbb
adc
jp
adc
mov
int3
data16
pop
(bad)
mov
jmp
cs
xchg
clc
sbb
adc
xor
in
mov
int3
ja
mov
addr16
push
sahf
xchg
and
xor
outs
push
lds
cmc
dec
or
inc
pop
cs
enter
push
push
scas
vpaddw
jne
adc
pushf
jb
push
loopne
cmp
ffreep
push
mov
xchg
pop
out
push
arpl
dec
and
leave
lahf
pop
ja
and
pop
cs
jbe
test
xor
ret
mov
adc
cmp
xchg
or
xchg
cs
mov
xchg
loopne
cs
ror
sti
paddw
mov
aas
(bad)
inc
jmp
xor
push
cmc
pop
scas
out
or
xchg
clc
scas
cs
imul
cs
punpcklwd
adc
scas
jmp
mov
mov
sub
push
jae
cli
stos
mov
add
in
cs
je
ds
outs
adc
and
push
fdivr
dec
stc
inc
xchg
inc
cmp
ss
adc
rcr
call
outs
jmp
sub
push
sub
and
sub
cs
test
ret
adc
test
pop
pop
sbb
fstp
sub
aas
add
pop
push
xchg
push
je
ret
or
mov
and
cmp
retf
or
cmp
scas
inc
(bad)
fcomp
pop
adc
arpl
and
scas
xlat
or
adc
sbb
sbb
sar
sub
movs
inc
jle
(bad)
sub
cs
rcl
cwde
push
fidiv
add
(bad)
dec
and
mov
fsubr
test
les
out
retf
dec
sub
mov
xor
iret
mov
xchg
or
loop
mov
adc
loopne
nop
jo
out
xchg
add
imul
pop
and
sbb
adc
sub
mov
lea
sbb
xchg
cs
xor
cmp
inc
lea
mov
adc
stos
sbb
leave
into
push
mov
mov
cmps
icebp
rcl
cmp
or
sbb
test
pop
loope
cmp
ds
push
pop
xor
mov
outs
or
cs
in
inc
or
xchg
cs
inc
sub
mov
jbe
mov
inc
xor
add
mov
mov
sbb
push
mov
sub
add
push
fistp
das
test
cmp
cs
test
add
sar
popa
xchg
sbb
aas
sbb
push
sub
push
mov
imul
out
pop
xor
sbb
mov
test
(bad)
sahf
movs
loop
int3
or
stos
lods
bound
push
push
loope
fcomip
mov
ss
fistp
pop
mov
ror
sbb
cli
and
inc
cs
mov
mov
popa
pop
or
sub
dec
ins
or
add
lea
call
fcomp
mov
sub
mov
(bad)
popf
and
les
loopne
pusha
test
and
hlt
push
and
mov
dec
mov
lds
fsubr
hlt
inc
leave
lea
add
or
rcr
xor
fst
mov
(bad)
mov
dec
jae
aam
add
repz
es
aam
xchg
and
xchg
cs
mov
xor
ret
test
scas
fisttp
cs
mov
pushf
rol
clc
sti
cmps
out
fmulp
inc
cs
adc
test
pop
xor
push
cmp
daa
or
sbb
dec
cs
dec
mov
add
retf
daa
in
bnd
fs
pushf
shr
mov
mov
sub
dec
cmp
into
cs
jb
lods
movs
dec
ins
(bad)
int
and
adc
cs
out
and
cmps
lods
pop
fs
shl
mov
js
sti
sub
inc
xor
pushf
(bad)
cs
rcr
test
cld
jge
push
movs
sbb
sbb
sahf
push
fwait
ror
xchg
mov
sti
push
adc
movs
push
pop
push
cdq
sub
and
xor
ret
xor
ret
je
cmps
cs
test
(bad)
outs
jmp
loop
fld
out
test
adc
scas
push
inc
xor
sbb
adc
push
(bad)
in
ds
xchg
push
mov
and
cs
dec
ror
in
cs
mov
pop
mul
repz
sub
or
jns
jl
pop
outs
jp
nop
leave
xor
loop
stos
test
push
push
(bad)
cmc
sub
fisttp
cs
sahf
cmc
and
push
fadd
mov
sub
push
sub
bound
xchg
jbe
sub
shl
mov
or
sub
rol
lock
das
aad
call
in
add
mov
je
movs
mov
push
gs
test
lea
add
sub
sbb
dec
mov
cs
mov
pop
adc
lock
jae
in
(bad)
push
cs
push
push
call
or
ins
add
and
shl
xor
or
xor
inc
mov
(bad)
mov
xor
jp
dec
test
dec
or
cmp
push
pop
cs
add
sbb
mov
pop
lods
xor
push
add
xchg
xor
mov
pop
out
std
daa
jo
inc
sub
pop
push
xchg
aas
mov
cs
in
pop
icebp
loope
cs
dec
dec
mov
fsub
addr16
ret
mov
int
push
jns
push
push
dec
shr
fisubr
inc
idiv
sbb
cmp
outs
add
push
movs
sbb
and
outs
icebp
stos
je
in
sti
or
cmp
enter
jmp
outs
stos
rcl
ffree
mov
pop
scas
cmp
mov
daa
out
inc
jns
hlt
push
sbb
bound
leave
pmaxub
(bad)
mov
out
dec
out
cld
add
or
xchg
cmp
jge
dec
sbb
xor
sub
jg
xchg
mov
clc
stos
data16
dec
femms
popa
xor
xlat
test
test
enter
xchg
outs
js
pusha
call
jmp
cmp
es
and
pop
adc
push
jno
icebp
and
repz
mov
retf
test
mov
pushf
aam
loopne
retf
mov
lea
shr
sar
sbb
shr
int3
cs
push
sbb
mov
pop
pop
cs
aad
test
cmps
inc
push
sub
xor
sti
pop
mov
dec
(bad)
scas
mov
pop
push
(bad)
je
dec
outs
cs
mov
mov
cs
xlat
stos
sub
fdiv
es
push
dec
xchg
(bad)
ror
stc
neg
cdq
pop
and
add
fsubrp
fstp
retf
push
cmp
cmp
sub
fdivr
add
push
loopne
mov
adc
fdivrp
push
imul
mov
out
cs
xor
jecxz
test
mov
cs
adc
loop
jne
sbb
sub
mov
repnz
stos
lods
xchg
loopne
lea
cs
jmp
inc
sub
jecxz
retf
push
pop
neg
ss
imul
jne
(bad)
adc
movs
mov
loope
call
jb
in
mov
es
lahf
jne
sahf
ss
je
jmp
fdivr
xor
mov
iret
(bad)
fisubr
mov
xor
xchg
dec
and
in
sub
test
das
dec
inc
int3
mov
sti
imul
or
rol
imul
adc
aam
dec
mov
outs
pushf
(bad)
or
gs
sbb
sub
pop
mov
jle
out
jb
bt
stos
pushf
sar
adc
test
jae
and
into
lds
inc
sub
cmps
jbe
aam
mov
jl
xor
inc
fs
repz
loope
mov
nop
iret
adc
in
ret
retf
and
cmps
and
cmc
sahf
(bad)
xchg
xor
mov
cmc
and
xchg
xor
mov
adc
sbb
add
jge
adc
in
mov
pop
aam
push
imul
mov
or
mov
push
loop
enter
pop
push
and
mov
xchg
ror
jmp
xchg
xchg
add
and
inc
add
faddp
jne
adc
jmp
add
call
repz
ja
cld
inc
mov
clc
adc
loope
mov
jbe
repz
adc
cmp
push
ret
add
js
pop
xor
push
jnp
into
jp
mov
mov
fisubr
cmp
pop
stc
fisttp
inc
sub
push
dec
pop
add
fisttp
cmovns
inc
enter
xlat
mov
mov
and
sub
mov
mov
push
shl
inc
imul
(bad)
mov
and
ss
dec
scas
ins
cmp
sbb
mov
out
dec
and
xor
sahf
movs
rol
cs
mov
imul
js
mov
fimul
inc
arpl
outs
repnz
bound
pop
add
and
or
sbb
inc
in
xchg
pop
retf
xor
stc
or
mov
or
test
jbe
xchg
mov
retf
adc
imul
push
ins
ror
aaa
adc
mov
lds
dec
add
push
in
jnp
pop
jg
popa
adc
jne
pop
xor
nop
xor
in
fisubr
pushf
out
add
pop
xlat
call
pop
push
in
mov
xchg
cmp
mov
dec
and
fidivr
add
rcpps
adc
sub
xor
ret
cs
adc
xor
mov
and
(bad)
dec
add
retf
pop
(bad)
shr
iret
out
lods
mov
xor
cdq
xor
outs
xor
call
push
mov
mov
mov
in
jb
sahf
lahf
sahf
gs
lea
and
inc
xchg
and
inc
movs
scas
mov
in
adc
mov
pop
gs
pop
xor
sbb
leave
jne
mov
sub
jmp
rcl
pushf
mov
loop
xor
outs
and
push
or
cmp
xor
or
jno
sbb
pop
inc
add
jae
add
outs
sub
test
shr
xchg
sbb
cs
push
pop
push
fld
push
shr
daa
cmp
or
iret
outs
loop
mov
aam
mov
cmc
inc
mov
ficom
cmps
movs
xor
popf
pushf
and
mov
stos
jmp
inc
jle
mov
mov
mov
sub
out
outs
into
pop
scas
adc
cs
imul
adc
pop
mov
cld
add
mov
ror
adc
inc
stc
sbb
jnp
daa
ss
pop
push
repz
jp
adc
loopne
sub
repnz
jmp
cs
out
test
mov
movs
call
xor
fiadd
jl
mov
pushf
xor
push
inc
pop
aaa
push
sub
and
inc
and
je
sub
sub
out
cli
in
xor
retf
out
pop
into
fisttp
ss
cmp
enter
or
push
jmp
cs
adc
push
leave
ficom
xor
cmp
js
inc
movs
dec
out
jp
iret
aam
push
shr
xor
push
dec
push
cmps
inc
xor
sub
clc
in
fld1
cli
aas
sub
mov
cwde
adc
cld
scas
fmulp
xlat
btr
cs
in
ins
pusha
fild
sub
push
shl
jg
shl
xchg
ret
cli
push
ja
scas
out
xlat
test
sar
mov
and
outs
ret
mov
cmp
cmp
ins
sub
(bad)
std
pop
xchg
icebp
inc
fstp
add
jecxz
push
in
push
sub
adc
jb
je
mov
js
(bad)
out
(bad)
enter
test
call
push
sub
es
aad
mov
sub
(bad)
xchg
jecxz
stc
test
sub
push
arpl
nop
and
and
lock
or
es
sbb
out
jne
pop
mov
inc
into
daa
push
dec
enter
jmp
or
into
xor
mov
cmp
mov
dec
movs
mov
add
aaa
ja
scas
fs
imul
loope
xor
xor
neg
push
adc
hlt
cmp
sub
mov
retf
(bad)
stc
sub
adc
xchg
pop
(bad)
ret
mov
push
loop
add
rdtsc
addr16
test
dec
retf
or
js
pop
and
call
mov
jne
jmp
sub
push
test
mov
mov
in
mov
cs
push
fcmovnu
int3
mov
lods
add
out
cs
js
jg
cmps
mov
xchg
inc
sti
adc
jns
arpl
add
daa
(bad)
push
mov
push
rol
loope
mov
lds
inc
cs
call
ds
rcr
xchg
dec
mov
mov
jp
jae
sub
mov
mov
mov
add
jmp
mov
xchg
pop
mov
std
dec
daa
pop
ds
xchg
sbb
fidivr
pop
xchg
scas
mov
js
sub
or
jb
shr
mov
(bad)
fidivr
fsub
out
jo
popf
dec
arpl
adc
mov
loope
push
in
lods
test
mov
add
or
bound
mov
xchg
xor
icebp
xor
(bad)
jbe
cmps
cmp
inc
and
ror
jbe
es
or
adc
je
mov
xor
ffree
cmp
mov
add
lods
jne
(bad)
mov
movs
adc
fdiv
fnstenv
iret
pop
mov
ja
jge
mov
nop
jecxz
xlat
and
sub
pop
xchg
jp
adc
push
sbb
lock
mov
shr
aas
and
mov
shl
pop
test
lea
mov
aam
and
pop
mov
leave
xor
movs
shl
push
sub
ds
sti
and
test
stos
stos
xchg
mov
fwait
outs
xor
mov
enter
inc
js
mov
xchg
dec
repnz
in
lock
leave
dec
data16
cmc
add
icebp
stc
sub
inc
and
(bad)
pop
add
mov
adc
push
mov
inc
inc
xor
ins
add
jo
(bad)
cs
mov
out
dec
sub
or
mov
(bad)
dec
inc
and
shl
ficom
mov
sub
mov
stos
adc
(bad)
add
outs
test
fsubr
sbb
jp
push
xchg
jp
sub
inc
xchg
xor
out
ror
repnz
(bad)
xchg
cli
mov
inc
in
fwait
mul
and
jmp
out
scas
test
jmp
ja
push
arpl
movs
test
add
push
mov
sahf
or
std
cmp
dec
inc
out
push
sbb
retf
add
in
loop
(bad)
mov
lds
call
mov
popf
xor
cwde
adc
xchg
dec
in
push
loopne
movs
pop
fwait
cs
pop
cmp
adc
into
sub
cs
lods
push
test
pushf
pop
daa
xchg
ror
js
aas
pop
mov
ucomiss
rol
and
je
xor
pusha
push
call
rcr
pop
cmp
ffree
psadbw
scas
xchg
push
pop
adc
jae
jg
xor
dec
adc
call
out
lea
mov
cs
mov
xor
retf
scas
and
push
sahf
dec
and
add
sub
sbb
in
leave
cs
sub
pop
scas
sbb
scas
lds
pop
(bad)
aad
imul
xchg
push
rcl
test
cli
dec
mov
outs
mov
pushf
cs
lds
mov
addr16
call
mov
fimul
push
adc
inc
cld
pop
test
xchg
jns
sub
das
dec
call
and
push
mov
sub
pop
mov
jo
jno
inc
(bad)
icebp
mov
hlt
stos
inc
xor
pop
cs
add
inc
daa
sub
cmp
xchg
lds
and
stc
sbb
push
icebp
and
inc
mov
sub
stos
fdivr
jl
or
arpl
xchg
scas
sbb
dec
and
xor
cmovle
test
enter
cs
cli
ja
xor
mov
fsubr
jmp
push
push
sbb
inc
shl
sub
sbb
scas
into
rcl
jecxz
and
pushf
stc
mov
mov
fisttp
xchg
stos
mov
pop
dec
sbb
aas
sbb
js
dec
and
mov
in
ds
or
cmp
and
mul
xor
sub
retf
daa
daa
jns
(bad)
in
push
ret
cmp
cs
int
into
mov
xchg
cs
push
ret
repnz
xchg
add
inc
dec
add
push
jle
jle
sahf
cwde
add
and
scas
retf
loop
jmp
daa
jnp
lea
inc
leave
loopne
xor
mov
ds
fs
jmp
inc
faddp
add
xor
out
(bad)
fstp
inc
ret
sub
sahf
push
rcl
leave
or
xchg
ret
or
or
sbb
cs
cmps
mov
xor
out
cmp
retf
xor
sub
inc
lods
lahf
ret
jp
scas
lods
div
xor
call
xchg
xchg
dec
mov
call
test
les
sub
es
je
fstp
sub
cs
sbb
rcr
shl
addr16
sub
shl
jmp
jne
test
sbb
les
xor
sub
fist
retf
jecxz
fwait
sub
enter
rol
mov
jno
mov
test
in
and
test
call
mov
mov
add
arpl
sub
imul
push
pop
jno
in
test
xchg
repz
cmp
jle
cs
js
pop
dec
push
cli
mov
cs
add
jae
inc
add
repnz
ret
fiadd
arpl
ror
arpl
pop
mov
pop
cs
jge
mov
mov
daa
movs
and
jo
sahf
test
(bad)
call
pop
xchg
jns
mov
pop
xchg
ss
ret
fcom
jno
xor
movs
cmps
mov
sbb
je
or
dec
jl
inc
jb
cmp
cs
sbb
mov
jp
int
clc
inc
xor
jmp
mov
sti
rcl
push
mov
je
xor
jmp
mov
jle
pmaxsw
mov
sbb
jno
add
rcr
xchg
lock
ror
jecxz
fld
jmp
push
into
mov
fwait
sbb
sub
push
or
arpl
xchg
pushf
inc
mov
sahf
(bad)
outs
sub
(bad)
mov
aas
test
push
scas
out
(bad)
jo
dec
stos
pop
cs
and
xor
and
loop
sbb
fisttp
cs
add
cs
imul
aam
int3
out
movs
jno
lods
mov
(bad)
retf
jb
xchg
gs
retf
call
xor
push
cmp
inc
cs
or
movs
adc
push
cs
shl
out
les
in
mov
mov
outs
daa
fild
shr
scas
sub
cmps
pop
and
nop
mov
fdiv
into
sub
cs
mov
icebp
mov
mov
push
add
push
icebp
jne
push
(bad)
adc
add
or
xor
mov
icebp
push
xchg
movs
xor
aaa
shr
ins
ror
imul
mov
test
es
icebp
pushf
jmp
inc
jbe
movs
(bad)
mov
dec
push
sahf
in
xor
js
imul
jmp
pop
cs
jne
(bad)
(bad)
scas
popa
jg
cdq
xor
jae
sahf
in
scas
jno
es
or
shr
(bad)
fadd
out
icebp
shl
and
add
test
fsubr
out
movs
dec
cld
cmp
int
das
aas
jne
cmc
push
cmps
xor
push
inc
nop
or
add
pop
xchg
std
(bad)
sar
push
test
adc
and
mov
fs
pop
mov
mov
sbb
js
stc
xchg
in
loopne
cs
push
mov
cs
jp
fisttp
inc
movs
ret
xor
shr
cs
inc
and
pop
retf
sar
add
inc
mov
in
icebp
inc
loope
(bad)
sahf
push
pop
movs
xor
pop
pop
scas
fimul
ins
cmp
and
cs
cdq
aam
push
sbb
xor
mov
cmc
shl
int
pop
push
mov
xchg
push
dec
or
push
cmp
xchg
jp
imul
or
(bad)
addr16
inc
sub
rol
pop
ds
bound
das
das
inc
xchg
mov
jne
xchg
sub
movs
jp
cmp
jge
dec
and
ret
(bad)
and
bound
scas
add
stos
jecxz
call
call
aad
adc
arpl
sub
je
stc
cmps
sbb
std
add
iret
ret
dec
retf
fcomp
push
aas
loope
xchg
mov
out
lahf
xchg
mov
and
sahf
sbb
jmp
mov
push
jno
sub
imul
add
mov
jb
arpl
pop
or
xor
mov
mov
test
fistp
mov
out
jne
xor
mov
cmp
pop
pop
call
shl
ficomp
push
sbb
mov
sbb
aam
push
xchg
or
add
retf
cmp
scas
push
(bad)
sti
sbb
xlat
push
pop
test
adc
or
xchg
or
stos
ud0
(bad)
aaa
mov
ret
sti
not
pop
scas
fdiv
cdq
and
jle
outs
lahf
cmp
les
mov
test
leave
add
scas
inc
fldcw
dec
aas
loop
xchg
add
(bad)
ss
mov
outs
jl
loope
sub
mov
(bad)
jo
les
ret
cmp
outs
fcomp
or
mov
(bad)
mov
fisub
das
fsub
(bad)
mov
xor
leave
mov
scas
xor
xchg
test
loop
xor
aaa
or
outs
outs
mov
movs
scas
loop
fdiv
stos
add
std
inc
(bad)
popf
mov
xor
je
(bad)
cmp
xchg
inc
and
call
movs
or
jg
loopne
pop
es
in
aad
push
aas
mov
ja
xor
lods
pushf
sub
or
and
enter
cmps
es
jmp
pushf
div
outs
mov
aas
enter
call
xchg
(bad)
mov
push
inc
pushf
mov
adc
and
mov
call
in
xchg
cmp
lock
inc
call
add
aas
xor
and
inc
das
mov
add
xchg
addr16
sub
jmp
shr
push
ins
push
cs
gs
jecxz
fisub
stc
jae
inc
adc
es
jge
inc
hlt
adc
loopne
cmp
fcmovu
fs
stos
add
rol
xor
es
xor
call
leave
in
imul
nop
aam
sub
gs
pop
sar
les
scas
add
xchg
and
cmc
push
jle
xor
and
and
inc
aas
jg
ror
mov
test
(bad)
into
mov
out
sub
jle
inc
jbe
sub
ret
rol
push
mov
jnp
sar
sbb
xor
fisub
xchg
mov
adc
std
repnz
sar
mov
add
loopne
jecxz
stc
xchg
xor
bound
aad
scas
inc
push
dec
imul
ins
dec
leave
xchg
cld
mov
adc
xor
add
scas
test
cdq
sub
retf
add
add
inc
add
pop
mov
lods
bound
jb
jmp
mov
mov
xor
sub
ror
cmp
sub
push
fcmovbe
(bad)
jns
(bad)
cmp
sbb
dec
test
mov
clc
push
outs
xor
jl
push
mov
popf
enter
hlt
aam
and
sahf
hlt
sub
push
test
lods
leave
or
jmp
inc
adc
pop
or
test
inc
sbb
pop
add
in
lock
jo
retf
das
add
mov
mov
jno
lahf
movs
sbb
mov
std
add
add
jmp
sub
mov
and
dec
(bad)
sar
mov
or
pushf
dec
cmps
xchg
mov
cmps
sbb
pushf
xor
fimul
mov
out
cmp
movs
sub
adc
xchg
push
test
movs
sbb
add
test
mov
xchg
cmp
push
cld
int3
jecxz
shl
mov
xor
sub
sub
mov
mov
popa
in
jbe
outs
sbb
cmp
mov
(bad)
in
jl
xor
fist
sub
in
test
loope
sbb
ds
and
or
push
sub
mov
sbb
xchg
sti
in
mov
mov
adc
jbe
ret
out
repnz
inc
pop
xor
push
push
push
mov
shr
dec
pop
pop
shl
mov
dec
add
push
icebp
adc
adc
bound
adc
mov
mov
cli
enter
daa
imul
cmp
mov
fild
in
inc
jl
jno
mov
(bad)
mov
stos
jge
pushf
ret
sub
ret
and
xor
cmps
ins
fldenv
xchg
sub
rol
into
cs
sbb
cs
movs
mov
inc
jmp
push
mov
aas
jbe
mov
(bad)
adc
frstor
fild
jne
xchg
jns
pushf
aad
adc
xor
ror
mov
fmulp
fidiv
mov
inc
inc
fisub
mov
outs
sbb
data16
cs
fsubr
(bad)
shl
sub
imul
arpl
cli
xor
mov
popa
neg
cli
xchg
pushf
sub
dec
lods
pop
jno
or
pop
or
daa
xchg
sub
(bad)
fld
rcr
jge
xor
mov
ror
and
push
(bad)
out
xchg
leave
retf
lds
inc
mov
jmp
xor
xchg
ja
jecxz
leave
out
scas
in
mov
mov
jns
sub
mov
push
xor
call
dec
jbe
jmp
rep
nop
mov
rcl
mov
cmp
in
adc
fild
sub
jge
imul
repnz
or
addr16
pushf
adc
push
adc
pop
jg
loop
mov
mov
iret
push
cmp
imul
fbld
push
shr
(bad)
mov
lods
or
mov
mov
icebp
mov
and
shr
stos
and
(bad)
aaa
aad
in
jb
adc
retf
(bad)
pop
pop
xchg
movs
jle
inc
mov
xor
bound
cmp
jnp
sub
out
and
cmps
mov
mov
ja
out
ss
jo
sbb
test
sub
(bad)
lods
mov
std
push
sbb
cmp
fnsave
jp
fnstsw
cwde
jg
jge
not
aam
jmp
in
mov
mov
enter
fstp
xor
scas
sub
imul
shl
jnp
dec
adc
jl
pop
push
mov
sbb
movs
xor
cs
int3
ins
sbb
cdq
adc
mov
adc
push
or
add
pusha
cmc
mov
dec
dec
or
cmp
sub
aas
sbb
xchg
outs
test
cmp
mov
adc
push
and
fistp
xchg
push
shl
jbe
pop
push
fdivr
popf
retf
bound
mov
cwde
test
adc
jecxz
das
jmp
push
adc
test
mov
enter
mov
dec
outs
push
inc
movs
dec
xor
sbb
pop
rcr
std
in
repz
scas
push
mov
mov
ror
inc
cs
or
dec
sbb
pop
cs
leave
push
mov
(bad)
shr
inc
mov
clc
lods
dec
pusha
cmpxchg
and
out
sub
mov
mov
jae
pop
xor
mov
fnstcw
out
stos
dec
out
cs
inc
sbb
cld
mov
out
push
stos
cs
push
add
ds
cs
lahf
ret
dec
sbb
cmc
adc
xor
sub
or
dec
scas
push
push
inc
jp
inc
les
xor
iret
mov
cmps
and
pop
cs
jmp
outs
jmp
movs
aaa
pop
add
test
sub
(bad)
out
pop
jl
cs
pop
adc
cmp
(bad)
lds
cs
cmp
ss
mov
je
in
cs
stc
xchg
cmp
cs
xchg
sub
xchg
cs
mov
push
sbb
stos
iret
cmc
mov
push
cld
and
adc
outs
sub
xor
cmps
push
ret
inc
ins
pop
mov
mov
icebp
mov
cs
pop
(bad)
aad
ds
push
pop
cmp
(bad)
stos
dec
sbb
jo
cs
xchg
shl
cs
sub
sbb
add
stos
lds
scas
add
rol
push
xor
sub
pop
pop
imul
cs
leave
or
add
test
mov
mov
leave
test
shl
adc
sahf
lods
sub
add
movs
out
adc
mov
xchg
int
retf
outs
push
xchg
in
push
out
(bad)
test
fmulp
mov
cs
jbe
jns
popw
inc
scas
mov
out
and
xor
inc
scas
sbb
shl
outs
push
inc
mov
(bad)
xchg
mov
std
retf
fisub
ins
xor
clc
call
xchg
movs
or
xor
mov
inc
inc
push
aas
bound
or
cld
xor
pop
(bad)
cmp
push
cs
adc
add
rcl
retf
mov
cs
out
mov
repnz
and
xor
add
into
nop
lods
enter
gs
aaa
push
mov
popa
cs
sbb
mov
les
xchg
imul
dec
aam
stos
repz
nop
push
in
adc
add
lds
push
lods
cs
fs
push
pop
mov
adc
add
cmp
cs
call
in
mov
sub
mov
mov
xchg
test
or
sar
cli
movs
mov
cmp
push
scas
js
into
dec
mov
out
jle
int3
pushf
and
lea
mov
inc
add
sub
pop
push
sbb
xchg
sti
retf
(bad)
fisttp
out
sbb
or
jne
sub
jne
cs
lock
push
shl
lods
sub
adc
nop
add
push
mov
adc
jnp
cs
clc
cld
fisttp
pop
aaa
xor
jbe
imul
jmp
ja
cmc
jecxz
sub
xchg
(bad)
jae
xchg
pop
retf
cmp
xchg
adc
sbb
scas
and
jmp
mov
xor
push
mov
ins
clc
in
lea
xor
movs
(bad)
mov
mov
das
fcomp
inc
xor
aas
and
sbb
lea
mov
mov
je
das
out
mov
test
mov
shufps
cmovs
cs
sub
mov
iret
sbb
lds
add
cmp
push
pop
and
ins
cmp
mov
add
sbb
dec
dec
fwait
xchg
(bad)
cs
ficomp
cs
inc
dec
(bad)
fistp
xor
sbb
xchg
and
mov
add
fiadd
sbb
scas
fsubr
cs
mov
and
movs
cs
mov
cmps
(bad)
fs
xor
push
(bad)
cs
mov
call
lock
fbld
fsubrp
ins
pop
jl
jle
cs
cmp
mov
scas
fucomp
add
int3
mov
in
cmp
imul
sub
mov
adc
add
retf
cs
popa
setb
out
hlt
push
inc
adc
std
pop
mov
cs
gs
ror
in
popa
shr
scas
sbb
das
scas
out
xor
rcl
xchg
test
jnp
bound
out
xor
mov
je
mov
sahf
xor
mov
mov
adc
cmp
jae
aam
inc
ret
out
mov
sbb
inc
arpl
pusha
out
cmp
(bad)
sar
(bad)
push
cmp
ins
dec
jae
cmc
cs
dec
mov
jnp
cmp
or
leave
push
loopne
aad
mov
das
ret
shl
xor
adc
addr16
xor
scas
pop
jae
fimul
xor
sub
fdivr
fidivr
mov
outs
adc
icebp
repnz
or
adc
stos
je
retf
mov
lods
sub
daa
and
mov
imul
xor
idiv
sbb
jno
ret
jo
(bad)
xchg
xor
xor
movs
xchg
adc
pop
jo
retf
inc
cs
jns
push
adc
jae
or
retf
jae
mov
repz
ds
xor
push
mov
pop
jns
sbb
scas
sub
stos
ss
or
xor
jp
and
jl
pop
imul
sub
fldenv
xchg
xor
inc
pop
push
jne
mov
(bad)
pop
sar
mov
jo
fdiv
lahf
inc
cmp
xlat
and
(bad)
fcom
cmp
retf
mov
es
jo
push
and
mov
ret
arpl
fsub
lock
popf
sar
cmp
int
lods
cmp
and
bsr
dec
leave
dec
not
js
xor
aas
mov
in
mov
add
lods
lock
shl
sub
xchg
and
test
call
and
js
stc
sub
dec
sub
ins
jle
and
leave
push
jg
dec
cs
mov
aaa
pop
xor
pop
mov
outs
and
outs
mov
push
add
jg
mov
jle
mov
mov
(bad)
mov
xchg
out
push
xchg
stos
xchg
xchg
sbb
clc
lods
xor
cmp
ficomp
cld
sub
rol
or
inc
scas
xchg
and
mov
ss
cdq
sbb
or
(bad)
mov
cs
aad
mov
or
call
and
(bad)
aam
scas
xlat
imul
jne
stos
aaa
jmp
leave
mov
add
addr16
adc
jno
and
jl
popa
mov
nop
xchg
push
xchg
pop
cs
cli
repnz
mov
cdq
sub
fnstsw
jmp
cmc
sbb
das
outs
add
lods
fidiv
add
mov
mov
mov
scas
pop
adc
mov
or
jl
and
mov
sar
adc
push
add
and
or
and
dec
mov
out
icebp
into
sbb
adc
cs
ret
fdivr
push
repnz
xlat
dec
test
pop
mov
ret
cdq
scas
out
pop
add
mov
sar
mov
clc
jnp
popa
bound
xor
xor
adc
jl
fdiv
cs
jo
cmp
pop
add
dec
xor
mov
push
jl
jmp
scas
inc
popf
pop
movs
cs
fs
or
add
fmul
jmp
mov
call
daa
movs
push
or
jg
jmp
sti
xchg
dec
outs
test
mov
dec
cs
add
pop
mov
mov
cs
test
push
fwait
out
dec
lds
(bad)
cs
mov
fs
dec
sbb
sub
inc
repnz
fadd
cs
dec
call
jb
add
cmps
cmp
push
and
scas
adc
inc
push
xor
and
or
pusha
pop
test
add
inc
cmps
mov
xchg
vmread
imul
cs
loop
xchg
movs
fsubr
cs
pushf
sbb
in
cmc
mov
stos
adc
call
int
(bad)
mov
jecxz
int3
or
push
hlt
jnp
cs
adc
cwde
cs
add
cmps
add
xchg
cs
ror
dec
or
jge
xchg
cmps
call
pop
jns
and
or
xor
xchg
shl
sti
cli
in
push
xor
stc
inc
inc
movs
pop
push
inc
adc
cwde
adc
rcl
cs
jo
cmp
es
frstor
cmovne
push
add
scas
xchg
jle
sub
jne
mov
lods
out
pop
retf
lds
jmp
push
idiv
cwde
repnz
xor
fidivr
leave
daa
sbb
into
sar
mov
xor
push
dec
popf
shl
jecxz
adc
stos
cmps
ucomiss
xchg
inc
mov
cld
sti
jnp
cdq
shl
push
sbb
xchg
vmulss
fisttp
ds
cmp
add
cs
hlt
inc
lahf
aas
test
(bad)
push
int
and
cmp
adc
xor
pop
shr
hlt
mov
xor
aam
and
pop
ins
sub
in
push
or
leave
or
xchg
js
push
cmps
add
lods
mov
fdiv
jg
icebp
outs
enter
mov
mov
pop
(bad)
call
xchg
movs
stos
loop
mov
stc
jecxz
sbb
shl
(bad)
in
dec
sub
mov
sti
mov
sar
xor
outs
(bad)
ins
sbb
cmp
cs
sub
fsub
ret
(bad)
in
mov
inc
imul
adc
jmp
fsub
sbb
aas
idiv
icebp
ficom
push
cs
and
call
push
pop
jecxz
sub
dec
std
push
call
lahf
jnp
fwait
ins
push
sbb
outs
push
(bad)
std
arpl
mov
xor
sub
xchg
out
jmp
mov
jp
mov
int
pusha
adc
and
cmp
and
cs
mov
mov
sti
jp
imul
mov
rol
ja
jno
and
popa
test
cs
in
xchg
sahf
xchg
add
cdq
jno
cmp
test
out
inc
iret
fcomp
add
adc
xchg
repnz
or
mov
scas
idiv
fsub
cmp
cmp
ss
js
in
aam
and
jo
in
fsubrp
mov
cs
fimul
mov
jecxz
mov
xchg
arpl
inc
iret
icebp
push
cs
in
jmp
les
clc
cs
mov
mov
and
jg
xor
xchg
push
or
push
popa
(bad)
xor
push
sahf
or
sub
lods
(bad)
cmp
cs
and
mov
cs
in
in
adc
push
jb
mov
mov
lods
mov
cmp
(bad)
adc
inc
rcr
fnstcw
lea
push
sbb
fucom
ret
sub
pop
div
retf
sahf
in
lods
icebp
or
pop
fdiv
das
xor
push
scas
inc
std
jbe
rol
sbb
sub
aaa
sub
pop
mov
pop
int3
xor
into
xor
fidivr
ds
and
popf
arpl
shl
pop
(bad)
and
movs
rol
cmp
sub
data16
or
sub
mov
cmp
inc
je
sahf
and
jb
and
push
(bad)
movs
adc
jns
push
ins
xor
gs
add
into
adc
inc
rcr
dec
ret
(bad)
movs
rcr
push
ret
test
adc
or
sub
jmp
retf
dec
aaa
inc
xchg
in
xchg
sub
add
add
out
push
aas
inc
or
mov
mov
push
in
rcl
daa
(bad)
fucomi
pop
cmp
inc
xchg
and
xor
dec
imul
cmp
xor
aad
fst
cs
inc
adc
rol
cmc
test
mov
mov
nop
add
xor
xchg
cs
mov
cs
(bad)
retf
or
mov
hlt
push
jns
adc
fucom
cs
imul
adc
retf
sbb
push
sub
fsubp
adc
fucompp
mov
or
pop
in
jp
cs
cdq
add
sub
pop
aas
cmps
or
int3
mov
inc
jmp
shl
mov
cmp
adc
ror
mov
mov
jle
pop
and
movs
fadd
sbb
(bad)
push
or
dec
outs
jae
cs
(bad)
fnstsw
and
mov
lods
mov
xor
or
pop
enter
outs
scas
adc
jnp
pusha
adc
xor
dec
ret
push
ins
pop
inc
retf
push
cs
fs
or
les
lea
mov
inc
aam
jle
fnsave
ss
mov
lock
in
aam
ret
cs
pop
mov
rcl
call
cs
js
cmps
in
cdq
cs
stos
int3
push
outs
retf
adc
sbb
(bad)
fcomp
iret
push
iret
lods
cs
out
retf
xchg
fisubr
mov
mov
scas
and
arpl
daa
inc
or
movs
int
aam
mov
addr16
fnop
mov
aad
cmps
mov
sbb
lock
add
mov
movs
retf
pop
jb
inc
sub
mov
pop
je
xor
mov
sar
lods
adc
out
repnz
cli
outs
push
int3
pop
sbb
les
push
or
cmps
call
(bad)
(bad)
sar
push
or
in
add
dec
adc
mov
xor
cmp
push
add
jmp
popa
fnstcw
sbb
out
mov
scas
xchg
push
(bad)
jecxz
movs
xor
dec
or
xchg
push
dec
add
outs
dec
(bad)
cs
inc
dec
sbb
pop
or
scas
xor
nop
daa
stos
jl
fldcw
sub
ret
xor
icebp
dec
dec
out
mov
scas
lea
cmp
jns
xlat
sub
(bad)
sbb
jnp
dec
adc
fcomp
loop
mov
mov
xor
push
cmps
scas
mov
cs
mov
test
push
xchg
addr16
push
push
mov
or
inc
or
pop
pop
fidivr
and
repnz
jno
mov
imul
retf
jg
xor
push
fsubr
repz
add
push
mov
cs
sbb
ror
cs
scas
fsub
push
cmps
cld
out
rcl
cmp
pusha
jge
mov
jnp
(bad)
sbb
ficomp
xlat
fs
mov
ins
ret
(bad)
cli
jl
xor
scas
shr
mov
xor
mov
sub
inc
jmp
ds
(bad)
mov
add
daa
mov
push
(bad)
enter
mov
xor
mov
sub
out
xor
ror
push
add
ret
ss
xchg
cmp
xchg
xor
fistp
out
push
pop
inc
and
push
mov
std
mov
cwde
sbb
mov
jmp
pop
push
dec
and
outs
retf
(bad)
cld
(bad)
sub
sub
popa
mov
ss
sub
xchg
and
fstp
sbb
xor
xchg
(bad)
cdq
fisubr
mov
leave
mov
push
sub
or
cmc
aas
adc
js
xor
hlt
mov
test
xchg
or
ds
out
fstp
(bad)
int
pop
xor
sub
scas
add
inc
adc
pop
jns
dec
or
jb
and
push
jae
inc
inc
mov
andps
lahf
test
jae
movs
js
jecxz
pop
ds
push
test
pop
pop
jnp
jo
or
sti
into
push
in
and
mov
add
xor
into
cmp
imul
cmp
bound
xor
adc
sbb
fidiv
stc
push
sti
pop
lds
addr16
jae
fistp
stos
jmp
inc
mov
mov
jb
inc
xor
or
xchg
inc
or
sub
dec
push
data16
aas
jb
call
push
outs
in
xchg
xor
and
jp
cs
sub
push
in
xor
dec
adc
out
xor
lahf
into
xchg
sbb
push
inc
xchg
fimul
jo
loop
in
outs
mov
ret
push
mov
aaa
jle
ss
cs
sub
pop
clc
enter
ins
xchg
inc
sahf
dec
inc
fwait
retf
and
mov
adc
imul
mov
sub
cli
jno
scas
mov
mov
cmp
mov
movs
dec
mov
add
jae
mov
mov
stos
fcom
xor
(bad)
daa
les
xor
push
and
fucom
cs
lock
mov
in
cmp
xor
std
adc
(bad)
xor
xchg
inc
cs
pusha
xor
jbe
scas
jp
push
adc
ins
cs
addr16
jo
xor
push
les
push
xchg
xor
dec
int
shl
mov
imul
jmp
jnp
out
xchg
imul
mov
fld
mov
stos
cs
mov
in
or
ret
test
sti
mov
loop
ja
cmp
stc
outs
mov
popa
push
add
pusha
and
xchg
fnsave
sub
popf
test
jbe
dec
lock
(bad)
clc
jmp
ret
mov
icebp
inc
cs
fidiv
scas
xor
jne
(bad)
fs
(bad)
mov
add
call
add
sub
inc
mov
popf
(bad)
repz
pusha
pop
sub
add
fdivr
ja
cs
mov
shl
cmps
jge
xor
mov
xchg
cs
mov
das
or
ret
xor
pop
jmp
ja
ins
push
inc
cs
mov
or
sbb
pop
fcmovnb
xor
sti
and
and
lea
mov
mov
das
fsubr
mov
jg
sub
je
dec
mov
gs
xor
inc
add
(bad)
push
punpcklwd
scas
or
das
(bad)
hlt
mov
jbe
fsubr
lds
lods
leave
mov
outs
test
shr
stc
xchg
les
add
(bad)
push
mov
idiv
cld
arpl
pop
add
and
into
or
sub
sti
sub
mov
adc
shl
push
sbb
scas
fisub
lock
xor
cs
into
add
cs
(bad)
mov
adc
push
or
rcr
xchg
gs
inc
or
xchg
mul
cmp
mov
push
sbb
add
dec
outs
or
inc
jl
lods
rcl
out
jmp
punpckhbw
movs
(bad)
hlt
xlat
scas
inc
sbb
(bad)
jmp
pop
es
in
jae
dec
ja
out
push
bound
cs
or
and
arpl
adc
jg
(bad)
push
sbb
ja
(bad)
cmp
stc
add
xchg
jge
pusha
ror
adc
or
clc
fnstcw
pop
mov
aaa
and
cs
push
inc
loope
jno
shr
xchg
loop
pop
pcmpgtd
mov
sbb
ss
mov
test
aad
in
inc
lea
add
loop
sbb
sbb
icebp
pusha
ja
aas
cmp
fwait
push
dec
es
and
outs
mov
sbb
xor
sub
outs
enter
fwait
xchg
imul
cmp
fcmove
xor
cmps
mov
les
adc
xor
push
jo
mov
dec
xor
cmps
(bad)
out
sahf
cs
adc
adc
mov
nop
cs
cli
cs
dec
cmps
icebp
cmc
fisttp
outs
int3
into
push
and
enter
std
push
jl
cld
cmc
and
call
jmp
(bad)
xchg
inc
popa
xchg
repz
add
mov
xchg
(bad)
mov
gs
repnz
dec
inc
add
fsubp
mov
ret
fsubr
xor
mov
push
fwait
sbb
retf
pop
shr
inc
popa
cs
jnp
ret
(bad)
mov
sub
jge
or
mov
(bad)
mov
push
sahf
in
in
push
lods
vfmaddsub132ps
test
or
xor
inc
(bad)
xor
repnz
jle
setp
sub
popf
mov
xchg
cs
cli
xor
test
mov
cs
cld
test
lods
in
inc
dec
(bad)
cs
mov
fwait
sbb
sub
loop
(bad)
xchg
(bad)
out
adc
lahf
daa
lds
sbb
mov
xchg
stos
stc
loopne
scas
hlt
lods
in
and
cld
xor
mov
es
push
(bad)
(bad)
push
test
mov
or
cmp
outs
data16
mov
mov
std
outs
jne
mov
leave
fdiv
inc
inc
push
fidiv
cs
scas
jle
mov
jl
cmc
iret
aam
rcr
mov
and
int3
daa
ret
(bad)
popf
out
mul
mov
dec
jns
xor
stos
mov
(bad)
out
mul
cs
xor
cmc
jg
(bad)
cli
inc
rcl
mov
in
push
mov
in
cmps
das
shr
push
aas
xchg
sahf
mov
mov
jmp
(bad)
test
ret
sub
call
cmp
adc
les
scas
data16
je
cs
rcl
shl
and
jnp
aam
push
add
ret
(bad)
cli
add
stos
or
aas
bound
push
arpl
pop
pop
loopne
lods
sub
and
sbb
cs
mov
xchg
fsubrp
adc
pop
lea
sahf
xor
test
mov
adc
mov
sub
fst
adc
call
inc
cdq
jl
push
xor
test
push
mov
push
cmps
mov
adc
xlat
mov
(bad)
leave
pop
or
int3
fmul
jecxz
push
ds
pop
(bad)
jae
sub
mov
shr
adc
jo
jp
jne
pop
jno
xor
out
add
arpl
pop
enter
and
pop
les
retf
movs
popa
test
iret
rcr
jge
dec
xor
mov
bound
leave
lahf
cs
pop
stos
movs
out
pop
pusha
cs
jnp
and
pop
mov
xlat
or
ror
js
add
xchg
pop
mov
mov
dec
pop
mov
in
ror
pop
xor
and
int
push
lock
test
(bad)
push
inc
inc
mov
popf
aam
mov
cs
adc
cmps
mov
mov
mov
mov
inc
je
test
push
ficom
cs
sub
pop
test
das
cdq
mov
pop
mov
push
int
shl
mov
aam
push
es
push
pusha
mov
sub
or
or
and
push
pop
sub
mov
(bad)
out
lods
or
add
jb
loop
popf
mov
addr16
call
mov
sub
not
shr
cs
xor
dec
add
daa
sub
xchg
mov
cmp
mov
and
pop
out
retf
and
jnp
add
jge
push
mov
rol
mov
xor
in
add
mov
retf
ds
jnp
nop
cmps
xor
cmp
(bad)
out
push
aaa
js
or
ss
jle
and
jno
xchg
bound
add
dec
jnp
retf
daa
or
mov
dec
test
test
cwde
sbb
adc
add
fs
pop
xchg
xor
into
ss
and
bound
and
xchg
out
rcl
fsubr
sbb
cdq
cmp
sbb
les
jne
cs
pop
dec
lahf
cmp
push
add
add
sbb
push
cli
stos
loop
bt
sahf
adc
sti
stos
xor
fst
push
mov
xchg
xlat
pop
adc
add
mov
and
sbb
aam
je
aaa
pop
pop
jecxz
aas
stos
mov
adc
in
js
nop
mov
aaa
dec
out
xor
pop
jno
bound
shr
mov
rcl
popf
xchg
adc
cs
aam
inc
or
adc
jmp
loope
fsubr
and
shr
xor
inc
rcl
push
repnz
and
sbb
cs
cwde
iret
jbe
pop
cs
call
sbb
aad
cs
mov
scas
lods
int3
cmp
movs
(bad)
pusha
fndisi(8087
ror
dec
or
jmp
xor
xchg
arpl
mov
cs
test
and
and
out
cmc
outs
ficomp
xchg
fiadd
cs
inc
popa
fadd
adc
shl
imul
xor
lods
cmp
fdiv
push
cs
mov
sub
mov
jecxz
cs
movs
fwait
or
push
mov
or
mov
pop
das
bound
mov
cs
add
das
call
test
cs
test
pop
xor
pop
push
neg
adc
cmp
cmp
mov
cmp
test
jl
pop
enter
pop
inc
(bad)
sbb
std
pop
cld
(bad)
sar
mov
ror
pop
inc
add
out
dec
fsubr
sub
(bad)
or
js
and
jb
sti
arpl
pop
(bad)
xchg
(bad)
add
hlt
pop
div
jnp
(bad)
aaa
retf
outs
mov
test
fsubp
out
xor
daa
adc
shl
dec
push
outs
dec
add
adc
or
shr
push
mov
inc
mov
or
lea
test
cdq
(bad)
mov
mov
and
dec
outs
mov
mov
ins
xchg
sbb
ss
xchg
or
in
push
test
xchg
inc
cmp
push
fst
cld
call
push
and
push
or
mov
cmp
test
and
fist
call
jg
dec
lock
jmp
cs
aad
neg
les
pop
mov
jmp
mov
or
pop
cs
push
test
cs
cld
dec
scas
movs
adc
jp
mul
outs
rol
cs
addr16
int
inc
and
std
add
sub
scas
pop
or
test
push
cs
inc
fwait
fs
adc
sbb
jno
retf
xor
jge
or
cli
stos
add
lods
xlat
mov
imul
(bad)
call
mov
cs
repnz
cs
movs
out
sub
lahf
cmp
daa
fwait
ds
dec
std
ficomp
cwde
and
ret
xor
loopne
repnz
cmps
mov
movs
in
and
xchg
push
push
sub
(bad)
stos
and
lahf
xor
or
push
aas
xchg
fisubr
(bad)
pop
jae
movs
or
ucomiss
stc
cs
out
gs
mov
pop
cdq
shl
mov
cs
dec
lahf
pop
and
add
aam
xchg
sbb
xor
hlt
or
loopne
xor
mov
in
fild
mov
sti
push
pop
push
inc
push
adc
cs
bnd
mov
(bad)
sub
ds
xor
push
sbb
(bad)
gs
hlt
scas
push
ret
push
xchg
icebp
out
adc
rol
lock
outs
(bad)
(bad)
fdiv
xor
sub
out
dec
adc
cs
xchg
enter
sub
addr16
xchg
shl
sub
dec
cmc
jmp
cs
jb
inc
jnp
mov
or
and
pop
dec
ins
pop
pop
push
sub
jae
loope
test
sbb
cs
les
outs
dec
clc
push
or
xchg
pop
addr16
ja
jb
mov
out
nop
aam
inc
aas
outs
out
mov
add
mov
cwde
xchg
stos
icebp
ror
push
les
(bad)
ficom
imul
cs
mov
fnstcw
shl
xor
das
shl
cdq
cs
mov
loop
imul
or
fmul
cs
lea
je
loopne
repnz
mov
lock
fwait
pop
add
cs
push
sbb
fist
pop
adc
pop
cs
xchg
(bad)
sbb
push
sub
mov
daa
mov
xchg
cmp
sbb
fisttp
aas
sahf
mov
mov
sub
and
pop
jno
sub
jnp
xchg
loope
inc
dec
enter
inc
std
in
and
es
xlat
lahf
inc
popf
cmp
fst
cli
aaa
jmp
stc
jle
pop
ins
push
push
xor
mov
push
push
add
xor
mov
into
push
and
push
cs
dec
or
call
xchg
(bad)
fs
sub
popf
mov
mov
cs
fwait
rol
and
and
icebp
adc
sub
shl
jb
add
in
jg
jmp
pop
push
aam
sbb
hlt
cld
jmp
in
ret
adc
into
push
xchg
jecxz
pop
stos
mov
pop
xor
(bad)
icebp
in
xor
and
sti
xor
neg
fld
sbb
out
push
xor
lods
inc
scas
sbb
push
rcl
cmp
push
sub
stos
pop
fstp
jp
ficomp
xchg
scas
(bad)
xor
ss
xor
outs
imul
mov
pop
jl
inc
js
je
pop
sbb
cmp
das
sub
outs
cmps
dec
pop
pop
inc
adc
pop
sbb
retf
xor
ds
sub
stos
and
push
mov
cmps
sbb
fiadd
mov
int
mov
mov
pop
imul
dec
setp
lds
sahf
movs
sub
mov
ret
jp
xor
or
iret
scas
dec
or
cs
jbe
xchg
jge
mov
or
adc
inc
pop
adc
xlat
cs
sbb
mov
cs
mov
test
mov
push
mov
retf
(bad)
sub
rcr
mov
sub
pop
lods
dec
sahf
enter
or
push
mov
push
push
cmp
xchg
jno
dec
mov
xchg
add
mov
pop
cmp
push
psubw
adc
aas
imul
std
(bad)
arpl
scas
mov
fmul
repz
bound
push
fild
int3
mov
test
cs
sub
dec
mov
shr
inc
daa
cmps
pop
and
inc
push
cmp
scas
dec
mov
fld
(bad)
add
pop
cmp
scas
and
cs
icebp
jno
sub
bound
pop
pop
nop
cs
in
jmp
loope
in
xor
ret
pop
adc
cs
sbb
ss
xor
pushf
pop
sub
imul
or
push
iret
adc
test
daa
minps
sub
pop
xchg
cs
adc
js
pop
pop
cs
(bad)
mov
mov
std
and
dec
xor
jl
(bad)
hlt
stos
stc
test
jp
mov
data16
push
outs
pop
cwde
sti
or
push
cmp
daa
jo
jo
jne
popf
outs
aas
lods
mov
(bad)
(bad)
sahf
jg
mov
mov
adc
cmp
hlt
(bad)
rcr
psubq
clc
xchg
xor
sub
lds
add
lods
test
pop
out
cmp
jl
fld
je
icebp
adc
scas
push
adc
push
push
cmp
dec
inc
jns
out
shl
fcmovne
loop
stos
mov
es
dec
mov
jo
ins
push
(bad)
and
pop
mov
or
xor
pop
sub
ins
pop
lods
jmp
movs
push
into
mov
cdq
mov
jno
ins
push
ds
outs
push
jle
sub
popa
pop
mov
xchg
nop
in
mov
xor
cmc
stos
ins
fdiv
enter
scas
imul
(bad)
mov
out
jo
icebp
sbb
sub
sbb
cmp
sub
aas
in
jne
inc
popf
cmp
ror
add
adc
ror
or
retf
mov
rol
xor
jno
out
mov
pop
add
and
dec
xlat
std
inc
ja
(bad)
cmp
clc
in
scas
jae
push
fwait
(bad)
popf
bound
(bad)
popf
push
mov
pop
nop
mov
fiadd
iret
mov
add
jecxz
mov
dec
jge
test
ficom
outs
dec
and
sub
push
jnp
pop
add
sbb
adc
jno
scas
pop
sub
data16
xor
or
add
inc
js
adc
das
aas
lds
adc
mov
mov
xchg
pop
mov
in
hlt
add
stos
mov
cmp
sub
dec
mov
imul
inc
push
ins
push
xchg
bound
sahf
mov
in
cs
dec
ds
or
mov
in
dec
inc
popa
push
enter
jmp
or
mov
inc
daa
ds
sbb
inc
dec
push
adc
ficomp
xor
fisubr
les
or
rol
mov
mov
in
dec
xchg
cmp
outs
ror
or
mov
inc
inc
push
outs
cmp
cs
(bad)
xor
xchg
adc
movs
jmp
imul
push
mov
rcl
iret
(bad)
push
daa
loop
int3
leave
add
pop
out
sti
sub
inc
fdiv
cmc
repz
sub
push
iret
add
pop
int3
(bad)
(bad)
dec
or
push
or
inc
push
and
cs
or
sbb
xor
fisttp
div
lock
adc
test
fstp
xchg
ret
mov
xadd
retf
xchg
mov
cs
cmps
push
int3
add
test
mov
xchg
pop
mov
(bad)
loope
out
(bad)
mov
stos
in
mov
cmp
or
inc
sbb
scas
jg
aaa
cs
test
fisubr
retf
inc
sbb
cs
in
jg
or
daa
and
inc
ins
and
cs
repz
(bad)
jno
out
mov
stc
xchg
jmp
cmps
xor
add
popa
push
jns
add
cs
lods
mov
sub
sub
cmps
call
mov
or
jg
aad
cs
cmp
dec
xor
push
sbb
adc
xchg
cs
sub
int3
cmp
and
xchg
inc
scas
daa
jge
loopne
repz
jae
mov
bound
and
push
cld
mov
movs
je
dec
push
lock
cs
cmp
jl
cs
sub
les
in
vunpckhps
inc
fnstsw
push
loope
out
xlat
das
test
and
shl
mov
repz
les
ret
cs
addr16
imul
mov
inc
mov
or
lds
mov
nop
pop
cs
(bad)
call
mov
fist
push
outs
movs
mov
lods
mov
jmp
pop
xchg
or
xchg
stc
and
repnz
push
out
xor
dec
mov
mul
fidivr
xor
or
pop
fld
sub
xor
test
cmp
or
rol
jle
loope
sub
int
jg
push
rcr
sbb
xor
clc
iret
out
cs
dec
scas
mov
lea
inc
jbe
sbb
mov
sahf
xor
jnp
ins
xchg
cs
adc
mov
pop
sub
fistp
xchg
(bad)
lds
cs
sub
push
shr
movs
mov
cs
dec
or
jns
xor
push
push
stos
jno
into
das
xchg
in
sbb
mov
cli
ret
push
out
sub
cs
or
enter
outs
div
scas
xchg
das
in
into
cs
jecxz
add
and
xchg
jmp
std
fistp
cmp
mov
pop
mov
mov
jecxz
push
sub
cs
popa
pop
ja
mov
(bad)
pop
mov
icebp
mov
les
cld
push
dec
push
sbb
(bad)
aad
ret
sar
push
or
jnp
push
pop
movs
xchg
repnz
jb
add
in
in
mov
dec
loope
add
push
adc
dec
xor
xor
in
inc
pop
sub
ret
mov
movs
pop
div
add
sub
in
stos
jne
lock
je
mov
ss
movs
shl
jns
add
xor
cli
test
xchg
(bad)
and
mov
xor
sub
pop
sbb
mov
out
cwde
repnz
xchg
loop
leave
add
push
inc
mov
pop
push
adc
add
push
sub
arpl
cld
jg
xor
pop
push
cmps
out
out
add
sbb
add
in
outs
aaa
leave
xchg
retf
cmp
scas
jmp
push
pop
lods
dec
add
cmp
cs
les
je
sub
jae
and
cs
adc
add
popa
xor
sub
ins
daa
loope
xor
sti
add
or
sub
out
inc
call
pop
inc
in
ss
inc
or
out
scas
xchg
test
fwait
aam
adc
adc
add
add
pop
out
hlt
sub
push
je
xchg
into
dec
stos
popa
cs
jp
fs
icebp
aas
lods
aas
dec
mov
xor
movs
enter
sub
push
jmp
lods
loop
pop
cwde
cs
xchg
xor
int
test
xchg
xor
ret
stos
xchg
into
push
jns
mov
test
sub
pop
pop
ret
(bad)
xor
outs
add
sub
data16
sub
jbe
cmp
dec
push
cs
add
lahf
add
sub
dec
xchg
test
mov
in
push
and
pop
cs
adc
aam
shl
outs
xchg
mov
retf
rcl
sub
mov
mov
sbb
xor
aas
push
in
test
mov
inc
sbb
out
jns
push
daa
xchg
adc
lds
movups
icebp
mov
xchg
and
mov
sub
add
dec
into
cs
xchg
clc
push
sahf
sub
(bad)
out
inc
loop
(bad)
scas
pop
outs
pop
push
cmps
and
inc
adc
or
ret
scas
or
adc
xor
xchg
push
jmp
cs
out
push
jp
fwait
repz
(bad)
xor
and
push
mov
outs
test
popf
into
push
xor
mov
dec
sbb
stos
and
xchg
add
in
scas
das
jmp
retf
dec
dec
rcl
cs
in
cli
sub
scas
jmp
sub
movs
test
(bad)
aam
jno
xor
add
jns
fdivr
pop
push
cmp
aas
adc
daa
jle
shl
xor
pop
dec
aaa
mov
cs
not
aad
sbb
fidiv
jae
mov
imul
adc
rcl
add
dec
cmp
js
call
repz
into
movs
popa
sub
inc
xchg
je
xor
jno
fsubr
push
fmulp
or
add
lods
xchg
xchg
loop
ror
and
mov
inc
mov
js
arpl
cmp
(bad)
sub
(bad)
jo
ja
(bad)
pusha
fcmovu
adc
rcl
scas
cmps
movs
cld
rol
pop
mov
sbb
sahf
xchg
rcl
lods
mov
test
fdivr
into
mov
xchg
dec
xchg
popf
retf
and
mov
mov
cs
retf
in
sub
repz
lahf
stos
push
mov
fsub
mov
fidiv
ficom
jmp
xchg
or
xchg
movs
(bad)
mov
or
stc
cmps
out
sub
es
xor
in
scas
xchg
aad
or
mov
rcr
in
mov
xor
xchg
jle
dec
jbe
ret
and
and
retf
xor
mov
aaa
mov
mov
lods
cmp
or
xchg
xor
data16
sub
jecxz
js
dec
push
inc
mov
out
out
cmp
sti
ins
add
adc
push
sbb
mov
cmp
test
sbb
cs
xor
cs
adc
pushf
mov
or
cs
xor
jns
xor
pop
and
sbb
jge
adc
sti
xchg
(bad)
cs
scas
lahf
mov
inc
and
out
cs
cmp
push
dec
call
add
loop
xchg
and
lahf
shr
adc
cmc
sub
arpl
mov
jb
ret
cs
sbb
pop
faddp
scas
enter
lods
push
or
mov
cs
mov
jmp
enter
out
cs
pusha
out
cli
mov
loopne
aam
cs
and
cmps
ss
sub
push
jmp
(bad)
mov
mov
cs
pop
inc
cmc
mov
mov
inc
xor
outs
pop
sbb
ficomp
xor
cmc
xor
(bad)
ret
sahf
jmp
loopne
(bad)
retf
cli
push
out
cs
mov
pop
pop
sahf
in
gs
retf
sub
add
pusha
xlat
dec
int3
leave
shl
enter
add
imul
(bad)
xchg
shr
sbb
and
add
adc
lahf
xor
jecxz
dec
cmp
xor
cs
sub
test
mov
jb
xor
cs
daa
sbb
imul
sub
xchg
cdq
push
mov
xor
or
outs
sbb
adc
iret
shl
int
xor
mov
ret
aaa
add
push
add
clc
or
jns
test
xor
aaa
add
and
inc
fild
daa
mov
cmps
xor
scas
sahf
xor
outs
pop
(bad)
rol
xchg
lods
out
push
aas
rcr
daa
jge
sar
xchg
in
dec
mov
sub
(bad)
les
jnp
cmps
out
xor
push
test
or
mov
mov
jne
dec
test
inc
std
push
stos
popf
shl
dec
out
not
loopne
sar
jno
cmp
jbe
daa
xor
loop
(bad)
aam
jo
mov
in
mov
mov
mov
xchg
(bad)
mov
inc
out
fs
sbb
movs
cmps
cs
push
cmps
leave
mov
out
sbb
ret
jecxz
sti
scas
mov
mov
mov
add
js
push
test
les
idiv
mov
lea
fstp
adc
and
xor
cmp
mov
and
sub
xor
mov
aad
popf
and
rcr
test
cwde
mov
lea
mov
mov
xchg
arpl
cmp
loop
dec
fsubr
mov
ror
inc
inc
outs
into
arpl
mov
add
fbld
mov
cs
cmps
clc
mov
fisttp
inc
aad
mov
push
das
xor
ficomp
cs
cmp
cmc
pusha
mov
pop
pop
das
xchg
mov
xor
push
out
bound
mov
or
jecxz
lahf
shl
xor
loop
jb
or
cs
das
js
add
fsub
and
(bad)
sbb
or
jmp
dec
or
daa
out
das
add
ret
scas
cs
inc
enter
xor
mov
movntps
sub
xchg
addr16
clc
cs
adc
aad
add
push
ins
das
dec
iret
fist
repz
sbb
stos
add
ins
mov
xchg
out
fdivr
adc
sub
pop
rcr
mov
shl
iret
sbb
iret
or
out
xor
sbb
scas
inc
(bad)
mov
cmp
and
xchg
sbb
mov
js
cs
scas
push
test
inc
cmp
dec
retf
nop
and
cs
and
push
(bad)
sbb
das
shr
push
cs
cmp
adc
(bad)
mov
sbb
jg
cmp
out
add
ins
push
fdiv
jmp
xor
and
aam
xor
mov
sub
mov
rcl
jp
int
test
stc
shr
inc
lock
shl
(bad)
push
push
outs
mov
cmps
adc
adc
sar
mov
jge
repnz
sub
and
sbb
ret
scas
cwde
push
fidivr
and
or
jge
movs
push
ins
adc
pushf
out
and
jge
iret
push
pop
add
adc
mov
cmps
push
push
cmps
and
(bad)
frstor
mov
mov
mov
shr
cmps
xor
mov
jle
stos
dec
adc
xlat
and
cli
sub
jmp
and
xchg
outs
bound
bound
leave
sbb
ss
(bad)
out
or
add
mov
inc
mov
jmp
movs
ss
xor
in
mov
add
int3
mov
and
mov
mov
jge
das
das
ins
push
dec
cmp
fsubr
sub
xchg
dec
add
loop
sbb
ins
sub
inc
out
loope
es
ss
aad
(bad)
push
mov
cmp
cld
popf
imul
xchg
push
mov
fdivp
sub
cmp
(bad)
jl
push
mov
aam
xor
loope
xlat
mov
retf
out
push
or
or
inc
jge
icebp
stc
test
lds
lods
out
xchg
lea
stos
mov
sbb
mov
adc
add
ja
call
mov
into
lahf
jno
dec
inc
inc
xor
cmp
shr
inc
adc
scas
out
inc
and
inc
ret
clc
popa
and
ucomiss
ror
adc
jg
xchg
mov
jecxz
dec
cs
cmp
xchg
icebp
xor
ss
mov
push
push
out
rcl
aas
in
aas
mov
adc
icebp
shl
adc
mov
pop
xchg
jns
and
movs
test
test
cs
mov
push
add
(bad)
lahf
imul
jae
inc
jns
cs
xchg
fldenv
sub
push
fisttp
std
ret
cwde
add
pushf
jb
(bad)
ins
(bad)
mov
push
mov
cmp
mov
stc
sub
leave
or
mov
or
and
in
repnz
xor
push
add
dec
sub
call
leave
pop
and
xor
fldcw
loope
in
jecxz
(bad)
fdiv
test
ss
leave
das
inc
in
repnz
push
ret
add
dec
loope
in
pop
xor
sub
xchg
sub
dec
ds
ret
retf
push
je
fcomp
and
add
sub
inc
jo
pop
outs
jp
sub
add
sbb
shl
leave
jne
nop
mov
xor
inc
shr
dec
lock
mov
out
and
mov
shr
das
sahf
pop
inc
sub
daa
mov
xor
sti
xor
cdq
aam
jmp
xor
retf
je
mov
mov
jo
cmps
fisttp
clc
sbb
sub
aas
lods
lds
hlt
cmps
pop
(bad)
aad
and
pop
imul
dec
scas
sbb
outs
xor
movs
out
stos
int3
mov
pop
cld
xor
out
lods
cmp
mov
popa
bound
jmp
jnp
leave
enter
out
cmp
rol
mov
sbb
mov
cmps
jmp
mov
cmp
daa
cli
xlat
in
aas
sti
aad
(bad)
pop
sub
push
cmc
push
clc
xor
adc
mov
nop
mov
movs
repnz
cs
mov
popf
scas
scas
aad
mov
mov
data16
jl
sub
mov
movs
daa
aaa
test
pop
dec
test
movs
loope
retf
push
or
sub
jbe
adc
pop
hlt
add
clc
stos
push
idiv
sub
sar
movs
repnz
xchg
adc
(bad)
cmps
push
sbb
(bad)
out
jno
int
cs
(bad)
push
enter
push
out
enter
sbb
mov
xor
iret
les
int3
aam
mov
or
cwde
sbb
loope
cs
mov
sub
stos
out
cmps
pusha
jecxz
in
cs
cmc
js
mov
jmp
dec
xor
test
out
xor
pop
mov
xor
push
icebp
adc
lods
shr
jmp
fisubr
xor
repnz
mov
loopne
jnp
or
cli
jae
lods
lahf
jb
clc
mov
call
xor
clc
push
mov
jo
push
pop
retf
push
lahf
daa
iret
add
push
aaa
out
not
daa
test
and
sub
dec
cmp
add
hlt
and
sub
addr16
mov
out
pop
or
mov
hlt
pop
scas
sbb
imul
stos
mov
cs
loopne
out
nop
adc
mov
fs
movs
mov
sub
inc
jl
add
mov
rcl
aas
lods
mov
dec
sub
add
or
jns
adc
pop
pop
cs
das
hlt
mov
cs
pop
bound
fwait
xchg
or
add
and
jecxz
mov
outs
adc
cdq
sub
dec
inc
cmps
pop
add
mov
ja
sbb
out
jns
mov
and
add
xor
fdiv
xchg
rcr
add
xor
ret
imul
leave
jl
shr
int3
mov
(bad)
xor
add
mul
in
les
pop
cmp
pop
aaa
inc
ror
mul
sub
pop
ins
int3
push
out
adc
fnstenv
cdq
daa
leave
idiv
aam
push
cmp
push
iret
loope
mov
sbb
test
and
popa
lea
and
cmps
cwde
jb
xchg
retf
outs
outs
mov
add
(bad)
fbstp
inc
(bad)
jg
fidivr
push
mov
jne
sbb
out
std
push
outs
add
pop
lods
cmc
out
mov
inc
mov
dec
leave
push
jge
cmp
ins
rcl
add
outs
pop
fcmove
mov
sub
or
lods
loop
stos
out
js
xchg
pop
jno
sbb
push
pop
push
and
scas
or
sahf
dec
adc
shl
retf
or
jne
dec
inc
jp
ins
hlt
xchg
cmps
lods
dec
fdivr
(bad)
in
aas
mov
jmp
iret
and
dec
(bad)
mov
xor
mov
cmps
pusha
daa
xor
push
dec
dec
out
and
leave
sbb
test
ja
pushf
jb
xchg
add
hlt
fcmove
out
retf
or
int
sar
jmp
scas
sub
fldlg2
push
out
xchg
iret
stc
push
cmc
sub
stc
sbb
bound
push
outs
xchg
jnp
retf
mov
int3
dec
jge
mov
sbb
scas
jp
test
dec
adc
push
push
out
scas
jmp
test
mov
and
push
adc
or
(bad)
mov
(bad)
enter
test
xchg
jae
xlat
popf
imul
push
xor
arpl
and
inc
jmp
call
mov
ss
repz
fsub
(bad)
sub
fnstsw
pcmpeqb
pop
pop
into
scas
xchg
fisttp
mov
lock
or
xlat
pop
and
loopne
adc
icebp
fcomp
fwait
jnp
and
jle
mov
inc
in
lods
mov
mov
cmp
add
scas
icebp
sar
std
int3
(bad)
popa
outs
xor
pop
aaa
mov
outs
cs
inc
mov
mov
mov
cs
sahf
sti
jp
(bad)
mov
std
aad
xchg
xchg
cli
daa
push
lock
(bad)
pop
inc
and
fld
repnz
cs
cli
lods
pop
sbb
sub
jmp
inc
in
dec
aaa
cs
(bad)
add
cmp
adc
daa
inc
dec
add
imul
lahf
dec
ret
stos
sub
ins
jnp
pop
cs
dec
sbb
mov
int
div
add
jo
stos
stos
jmp
xchg
push
cs
popa
and
sbb
daa
adc
xchg
pushf
lahf
add
popa
xchg
sub
stos
sbb
dec
jnp
push
jl
js
adc
bound
xor
jns
int
push
popf
mov
jmp
jae
and
icebp
push
jge
sbb
sub
fs
call
add
sahf
(bad)
arpl
mov
push
sub
pop
xor
nop
mov
xchg
adc
iret
dec
add
cmp
mov
mov
adc
scas
loop
stos
fcmovb
pop
sti
jo
sahf
fdiv
mov
mov
cwde
jmp
adc
xchg
pop
fisttp
jg
sbb
cs
push
je
pop
fild
outs
cs
shl
mov
test
jae
jo
(bad)
pop
popa
cs
(bad)
dec
pop
inc
xchg
cs
mov
cs
xchg
mov
sub
sahf
shl
in
fsub
mov
jle
sbb
cmp
push
outs
push
arpl
jg
idiv
call
mov
pop
cld
lock
test
cli
ficom
cs
daa
and
call
punpcklwd
adc
je
mov
lods
push
scas
fistp
call
add
rcr
jp
mov
iret
dec
push
cld
jmp
cs
fwait
in
imul
lods
outs
leave
cdq
lock
jle
jmp
out
shr
dec
jl
je
cs
push
test
xchg
cmps
(bad)
cs
mov
ss
div
std
out
frstor
ins
outs
xchg
outs
add
sbb
retf
sub
gs
jo
bound
ja
outs
or
lock
nop
adc
sbb
and
mov
or
pop
xor
aas
adc
icebp
out
inc
sub
adc
bound
mov
adc
add
sbb
xchg
shr
push
add
cmp
mov
cs
inc
loopne
pop
or
and
(bad)
push
jmp
or
mov
loop
pusha
test
sub
arpl
mov
sbb
scas
in
mov
mov
sti
xchg
inc
cs
scas
inc
shl
data16
pop
cmps
pop
inc
ja
sub
xlat
mov
icebp
cmp
add
loope
ja
jno
fisttp
sub
sub
push
cs
push
push
mov
nop
xchg
test
and
int
(bad)
push
gs
test
dec
sar
div
xor
fnsave
cwde
jmp
outs
push
dec
cs
sbb
mov
push
minps
adc
sar
or
stos
xor
mov
mov
sti
push
and
mov
fs
shl
cmp
je
xchg
addr16
xchg
imul
stc
pop
mov
repnz
fistp
pop
push
mov
add
outs
and
(bad)
into
or
pop
sub
stos
imul
jmp
xor
cmps
pop
ja
sub
cli
mov
fs
push
leave
loopne
out
je
jo
jp
sbb
mov
sbb
or
xor
(bad)
sbb
lock
inc
leave
cmp
pusha
pop
(bad)
jb
sti
fs
dec
ins
neg
ss
bound
pusha
dec
not
adc
jb
mov
ror
xor
rcl
pop
sbb
mov
scas
jg
and
daa
xchg
push
jl
pop
fild
inc
xor
cli
mov
fdiv
sub
push
sahf
pop
ret
adc
(bad)
mov
pop
ja
adc
inc
mov
loopne
mul
cmp
(bad)
stos
mov
dec
dec
scas
aam
(bad)
leave
cmp
enter
xlat
std
(bad)
ins
loope
cmp
mov
mov
test
(bad)
movs
sub
ins
push
sub
fst
pop
inc
jge
es
jle
mov
stos
icebp
and
enter
adc
lock
out
leave
fxtract
push
ret
(bad)
xchg
idiv
stos
or
jp
fisub
xor
std
xchg
cld
enter
jne
jl
mov
in
imul
test
lods
in
mov
inc
rcr
add
js
push
rcr
(bad)
scas
inc
rcl
add
lahf
pop
movs
xchg
bound
cmps
cmp
fcomp
add
int3
imul
iret
sar
fimul
pop
jb
adc
in
cmp
out
sti
xchg
imul
mov
aas
xor
jmp
inc
ret
fdivr
cs
add
sub
out
bswap
sar
jl
bound
xor
cs
rol
arpl
add
mov
lahf
int
mov
jbe
inc
into
jmp
xor
cmps
in
xor
pop
jle
sub
adc
test
enter
(bad)
cmps
xor
pop
shl
mov
stos
rcr
stc
into
out
aam
aaa
cs
(bad)
xchg
pop
lock
cs
icebp
xchg
(bad)
ret
add
and
or
rcr
cs
jno
sahf
add
push
jmp
push
int
and
sub
(bad)
int3
xchg
add
push
lea
stos
add
fidivr
lods
les
cmc
out
xor
mov
cs
push
add
pop
push
mov
push
cs
xchg
mov
pop
unpckhps
mov
clc
mov
cs
test
mov
dec
inc
(bad)
push
xchg
xchg
mov
xor
stos
push
div
(bad)
imul
data16
cmp
daa
rcr
mov
rcl
pop
pop
adc
cmp
push
dec
push
cmc
es
pop
jg
jae
stc
scas
test
out
mov
dec
push
xor
stc
enter
mov
arpl
(bad)
jp
xchg
cmp
shr
or
xchg
mov
mov
cmps
shr
cld
add
lds
jns
mov
aas
in
ins
pushf
and
mov
sub
jecxz
mov
scas
push
jmp
push
sbb
dec
lods
cs
cmp
add
daa
cmps
rol
popf
int3
movs
jl
push
in
sti
fldcw
bound
sub
nop
daa
jno
mov
shl
jae
cs
je
cmp
push
jo
adc
dec
gs
test
xor
push
js
cmp
cdq
daa
out
push
leave
mov
sub
push
shr
out
jbe
rcl
xlat
repz
cmp
sub
cld
outs
jbe
cs
sbb
pop
push
daa
add
lea
push
icebp
sub
outs
pusha
jge
jns
jge
fs
popa
lods
mov
jbe
dec
xchg
or
mov
adc
add
xor
test
lar
test
adc
and
aas
outs
test
adc
ins
out
cmc
ror
adc
dec
scas
mov
sub
neg
cs
es
cs
jno
popa
or
cmp
dec
jns
add
mov
pop
xor
nop
cs
daa
mov
(bad)
lds
add
test
(bad)
ret
repz
mov
iret
lods
mov
xor
push
push
dec
push
inc
xor
xor
mov
xchg
push
mov
movs
(bad)
xchg
(bad)
adc
es
jge
add
push
adc
sbb
in
call
enter
mov
sbb
mov
xchg
ror
fstp
cmp
daa
dec
push
cmp
imul
into
xor
ret
push
stos
xchg
je
daa
cmp
add
daa
dec
sub
dec
and
cmps
adc
xor
sbb
dec
mov
xor
inc
mov
lods
inc
loopne
and
cs
sbb
xor
ds
outs
mov
(bad)
popa
fadd
in
pop
adc
(bad)
lods
pop
stos
mov
sub
push
(bad)
dec
(bad)
mov
jecxz
enter
mov
or
scas
cmp
js
test
fist
loope
pop
adc
stos
cs
sub
fadd
xchg
int3
shr
xchg
pop
into
sahf
and
mov
mov
push
lock
test
and
test
pusha
and
adc
or
shl
jl
aad
pop
xor
lahf
mov
ja
rcl
sbb
inc
add
cs
fnsave
and
mov
sbb
fst
add
popa
xor
js
xchg
or
add
pop
outs
push
jnp
mov
mov
push
call
sti
out
in
jae
or
gs
shr
bound
jnp
cs
and
cld
daa
jl
pushf
(bad)
pop
mov
sahf
sub
in
movs
loopne
mov
in
mov
mov
push
sbb
push
(bad)
(bad)
dec
mov
adc
xlat
add
jbe
sub
push
call
push
xchg
push
fsubp
push
push
mov
into
inc
(bad)
xor
fdiv
aaa
aad
cs
xor
xchg
stos
ja
dec
pop
cs
sbb
fidivr
int3
div
movs
aas
sub
dec
xor
cmp
mov
push
or
mov
rcr
test
pop
sub
loopne
gs
lods
daa
(bad)
and
push
and
jmp
fidiv
mov
push
or
pop
stc
rcr
ror
mov
enter
push
sahf
jb
outs
cs
jo
jnp
aad
jno
stos
jmp
push
ins
xor
adc
daa
cmp
push
addr16
sahf
xchg
shr
cmp
adc
loop
stos
pop
cs
add
and
xor
mov
icebp
sub
cs
scas
inc
shl
push
sbb
cmp
dec
or
dec
mov
ins
sub
add
or
lock
(bad)
jp
cmps
xor
(bad)
jmp
xchg
add
jae
sbb
mov
(bad)
(bad)
sub
js
sbb
dec
(bad)
push
icebp
push
jae
push
scas
dec
(bad)
es
lds
jmp
out
sbb
cmps
ret
sbb
stos
test
dec
add
(bad)
sbb
jbe
mov
inc
mov
leave
ds
mov
popf
enter
ins
hlt
in
push
jnp
sub
jbe
or
pop
stos
and
jno
shr
pop
dec
push
xor
js
call
cs
sbb
xchg
xchg
ss
das
xlat
lods
xor
test
xchg
int3
pop
ins
data16
cs
fcmove
sar
push
cs
scas
test
push
mov
jl
adc
adc
test
cmp
jmp
shl
pop
retf
stos
sub
and
int3
mov
cdq
xor
cmps
push
and
call
jp
jns
mov
sbb
pop
imul
inc
cs
sti
mov
pop
dec
cmp
inc
or
xor
sub
fcmovbe
dec
mov
in
jmp
mov
dec
mov
dec
jmp
jne
int
sti
es
icebp
cmps
mov
scas
and
(bad)
popa
jmp
out
sbb
inc
push
or
pop
inc
scas
inc
test
push
push
rol
aaa
fistp
push
adc
arpl
add
stos
dec
pusha
xor
jo
push
test
clc
or
push
fcom
or
test
out
dec
(bad)
jle
rcl
ret
aam
xor
sbb
inc
mov
jns
cmps
xchg
icebp
inc
push
sahf
stos
jmp
sub
in
jns
jmp
shr
pop
and
ja
fdivr
push
es
inc
push
cwde
fdivr
and
mov
dec
pop
cmps
jle
inc
pop
cmp
sbb
mov
sub
call
cmp
es
shl
out
dec
data16
loop
stos
sub
push
adc
xchg
jno
test
outs
xor
lods
repnz
cmp
or
jp
xor
das
sbb
sbb
mov
mov
(bad)
cmp
movs
mov
xor
mov
mov
mov
jnp
enter
push
int3
jecxz
fild
add
scas
sahf
out
bound
loopne
pop
inc
pop
xor
stos
out
add
and
xchg
add
(bad)
mov
jae
xor
dec
daa
sub
stos
call
in
ror
mov
aam
stos
mov
xchg
repz
ss
les
cmp
rcr
fadd
adc
push
call
movs
pop
pop
pop
adc
and
ficomp
rol
push
sbb
sbb
scas
inc
adc
cmp
cs
fidiv
cmp
mov
bound
movs
cs
daa
lods
scas
(bad)
repz
ins
add
add
cs
xor
movs
xchg
push
push
xchg
leave
push
dec
rep
mov
(bad)
mov
and
fdiv
cs
ja
sti
cs
ins
in
lahf
(bad)
repnz
mov
retf
loopne
in
jns
dec
pusha
inc
(bad)
test
daa
inc
adc
stc
inc
jmp
cmp
cmp
arpl
out
out
xchg
sahf
sub
inc
mov
fcom
mov
mov
into
aaa
adc
or
xor
pop
and
and
sub
(bad)
jmp
inc
jae
test
(bad)
mov
enter
cs
popa
push
shr
ins
xor
sahf
and
add
mov
xor
pop
xchg
loopne
jle
sub
stos
cmovle
in
(bad)
test
ret
jle
movs
test
(bad)
imul
cmp
jmp
fimul
aam
push
inc
(bad)
retf
jmp
pusha
fidiv
js
out
(bad)
sahf
and
iret
push
mov
lea
xchg
jno
fdiv
sbb
leave
jmp
inc
dec
and
sbb
jge
cmovge
(bad)
in
ffreep
loope
fisttp
shl
cmp
adc
out
mov
push
mov
xchg
inc
mov
fld
cmc
and
das
inc
inc
mov
sub
mov
cs
test
pop
xor
ins
into
das
mov
xor
je
fist
test
sub
sub
(bad)
jg
push
jg
cmc
mov
mov
mov
dec
inc
retf
cmp
pop
fdiv
pop
test
pop
pop
nop
je
jle
pop
mov
adc
ficomp
adc
stc
and
cs
ret
mov
fwait
cs
shr
fst
loopne
adc
aad
fmul
cmc
cs
out
ror
mov
xchg
pop
cmp
dec
(bad)
loope
lds
jmp
xlat
sub
out
out
sub
mov
stc
inc
xor
pop
shr
push
adc
gs
adc
aaa
out
retf
outs
pop
ins
push
and
cs
mov
mov
jmp
pop
dec
sti
(bad)
aad
xor
inc
pop
add
add
(bad)
repnz
mov
push
mov
into
and
mov
stc
dec
add
cs
hlt
ret
or
adc
in
cs
cli
shl
add
pushf
out
xchg
fsubr
in
xchg
ja
cs
inc
popf
sbb
push
push
clc
cs
or
and
stos
loop
xchg
fidivr
mov
fadd
cmp
mov
(bad)
retf
jg
and
or
call
(bad)
push
mov
xchg
arpl
xor
xor
jp
mov
add
imul
inc
jge
pusha
loopne
ins
mov
sub
lods
add
popf
xor
pushf
cmps
in
mov
les
clc
or
sbb
jae
sub
scas
add
popf
shl
iret
or
mov
stos
movs
xor
pop
adc
into
out
ja
scas
and
das
ss
add
(bad)
push
mov
mov
xor
(bad)
out
out
adc
cs
fcom
jecxz
mov
aad
cmp
fcmove
mov
cs
jne
and
fadd
and
adc
daa
xchg
pop
push
ret
pop
sub
mov
xor
mov
jmp
stc
mov
cs
rcr
xor
add
xchg
cmp
sub
adc
repnz
test
ins
jne
data16
mov
xchg
mov
add
xchg
stos
movs
pop
and
(bad)
test
sub
das
test
shl
mov
(bad)
mov
sahf
es
in
xchg
lahf
dec
scas
call
adc
pop
lock
inc
mov
(bad)
cli
jbe
sub
pop
fadd
mov
jp
movs
xchg
ja
nop
lods
int
out
jge
lahf
xor
and
sub
(bad)
shl
cs
and
loop
sahf
hlt
mov
cdq
retf
iret
outs
mov
xchg
add
retf
sub
sar
add
pop
jno
cmp
loope
and
stos
adc
fmul
out
mov
popa
cmp
add
xor
adc
in
pop
into
xor
sub
push
sti
dec
cs
fsubr
imul
ror
gs
daa
xor
adc
push
inc
or
daa
jno
and
ret
jbe
sub
cdq
mov
js
cs
mov
cmp
dec
idiv
cs
sbb
add
movs
sub
daa
jo
adc
mov
jmp
loop
repz
mov
icebp
test
aad
out
mov
pop
mov
mov
xor
(bad)
std
mov
pop
or
jnp
inc
cmp
adc
or
inc
xor
sbb
out
int3
pop
cs
sub
sbb
dec
or
or
mov
mov
xor
sub
in
add
cld
pop
xchg
lea
out
scas
sub
sub
sti
mul
lahf
and
push
pop
jbe
jle
or
mov
popa
data16
xor
inc
xor
jecxz
out
addr16
and
adc
mov
sahf
(bad)
ret
xor
jae
push
cmp
scas
cmp
jp
push
mov
jl
pushf
imul
or
jo
xor
out
sub
movs
xchg
dec
cs
push
jae
pop
out
outs
cmc
xor
daa
cld
je
add
scas
aas
imul
ja
loop
pop
push
scas
movs
xor
pop
mov
in
loope
std
sub
jl
div
ins
pop
mov
stos
sbb
cmp
sbb
push
and
cmps
pop
ffree
and
fcom
lahf
jp
(bad)
cld
mov
shl
jle
test
jo
shr
rol
inc
sub
xchg
mov
jg
aas
pop
mov
ret
in
push
dec
pop
dec
push
add
sahf
cmps
sub
cs
sahf
pop
mov
fisttp
or
mov
es
lods
push
mov
dec
dec
push
out
lods
xor
jge
pop
cli
sub
cmps
mov
push
mov
in
cli
mov
into
xor
stos
jmp
lods
out
cmp
add
lahf
bound
push
fstp
push
in
cs
sub
mov
pop
or
or
shl
or
dec
movs
mov
adc
addr16
adc
xchg
test
add
shl
adc
add
leave
push
stc
mov
out
jp
loope
and
cs
and
dec
fld
aas
mov
cmp
neg
add
pushf
jge
adc
xchg
cs
cmps
cli
inc
mov
mov
jno
leave
pop
popa
cs
enter
in
scas
cs
cld
sbb
aaa
mov
xchg
movs
xchg
psrlw
aas
popa
xor
cwde
fst
out
fsubr
shl
dec
cmp
stos
test
out
lsl
jb
arpl
pop
cs
leave
dec
jne
fsub
inc
sub
cmp
out
dec
jp
mov
mov
lahf
xor
xor
sbb
cs
adc
(bad)
xor
push
jmp
pop
inc
aas
jge
es
popa
cmp
fisub
jno
scas
pop
pop
and
retf
sbb
jle
ins
(bad)
test
aam
cs
rol
add
jmp
add
sub
inc
ins
adc
pop
dec
(bad)
pop
mov
adc
mov
mov
add
and
aas
push
movs
jecxz
cs
test
into
cs
icebp
push
adc
or
sar
jne
test
xor
mov
xor
mov
imul
pusha
and
fstp
les
sub
nop
xchg
out
outs
test
shl
popa
ret
cmp
nop
mov
(bad)
pop
in
ror
mov
mov
sbb
cs
jp
xor
sub
jmp
dec
ds
push
pop
popa
pop
jl
xor
lods
and
and
adc
push
retf
xor
js
sbb
aaa
cmp
fld
add
add
mov
in
xchg
jp
test
fisub
gs
and
sbb
jne
in
retf
cwde
arpl
push
jl
sahf
es
add
in
ja
shl
cmp
sahf
push
pop
pop
push
dec
xor
inc
adc
loop
(bad)
cmp
jle
sub
xchg
mov
fbstp
jl
jge
mov
icebp
xchg
mov
jmp
inc
mov
mov
cli
mov
and
mov
scas
push
push
inc
aad
push
std
dec
in
call
ret
loope
adc
fld
mov
lock
mov
retf
inc
xor
cmp
push
inc
gs
jae
adc
mov
std
sub
push
or
xchg
je
arpl
mov
jae
fisttp
scas
cwde
ret
xor
out
repnz
std
inc
jae
xchg
xor
out
xlat
ret
push
jns
in
repnz
retf
sub
xor
mov
pop
imul
push
sub
cmc
inc
mov
jecxz
xchg
pop
ret
sub
shr
std
jbe
fnstenv
lock
es
inc
inc
jns
inc
push
addr16
or
push
pop
int
pop
loopne
push
push
adc
mov
mov
ins
inc
or
sub
pop
xor
cmps
jne
fistp
(bad)
pop
aas
cmc
iret
loop
add
shl
xor
sub
div
outs
outs
xchg
cmp
retf
scas
sahf
push
and
ret
call
jae
imul
getsec
fistp
scas
fsub
adc
mov
xchg
mov
ins
ret
or
test
hlt
retf
inc
cs
inc
mov
sub
call
daa
ds
sbb
push
outs
aas
loop
call
cmp
sub
pop
inc
or
cs
mov
inc
gs
int3
adc
cdq
lods
aad
push
push
jge
xchg
repz
dec
and
adc
(bad)
pop
paddusw
shr
add
neg
in
xor
pop
xlat
mov
push
jge
pushf
cs
xor
neg
jmp
fsubp
xchg
mov
jl
daa
repnz
cli
cmp
(bad)
xor
mov
lds
cmp
inc
div
or
aas
out
add
xor
push
pusha
sbb
adc
sub
xchg
pop
mov
mov
jecxz
sub
ret
into
lock
out
cmps
cmp
int3
xchg
adc
jns
sub
cs
(bad)
in
test
sbb
cmp
loop
dec
into
mov
xor
loopne
repz
mov
cs
sbb
sti
sub
imul
mov
fiadd
fsubrp
xchg
and
inc
sahf
data16
ins
je
cdq
sub
repnz
out
daa
mov
cs
add
call
out
lods
rcr
sbb
inc
and
ficomp
in
cs
outs
loope
and
cdq
pop
inc
add
stc
xor
mov
ins
cs
xchg
cmp
mov
jnp
sbb
(bad)
cs
addr16
repz
sub
cs
xor
cmp
sbb
dec
(bad)
in
fs
in
mov
xchg
rcr
mov
sub
pop
sub
push
mov
mov
pushf
ret
and
jae
jecxz
and
cmp
xor
out
imul
sub
mov
aas
ss
daa
cmp
adc
sub
aaa
sub
sub
bound
(bad)
in
pop
leave
stos
push
inc
leave
ror
gs
outs
sub
cli
and
ror
sub
cmp
popf
popa
sbb
push
fistp
adc
add
sahf
xor
xchg
xchg
stos
pop
ret
dec
xlat
lock
(bad)
out
sub
jle
mov
aaa
adc
out
fimul
and
repz
les
out
loopne
ret
leave
inc
ds
enter
mov
push
stc
les
sti
push
fdiv
rol
jle
sahf
cmp
mov
jge
xchg
(bad)
ds
je
lock
push
stos
btc
jbe
bt
jo
out
cmps
aam
inc
jle
or
jle
or
dec
cmp
shl
push
aas
mov
jae
inc
fsubp
or
xchg
inc
jle
nop
das
dec
push
test
(bad)
and
jno
sti
add
mov
pop
fidiv
dec
mov
xlat
(bad)
adc
ds
push
xchg
add
stc
test
push
add
or
sub
mov
xchg
mov
mov
or
cdq
sub
mov
push
std
ror
cmc
(bad)
fild
add
cs
jg
aaa
jbe
inc
cs
pop
push
push
cmp
aas
push
or
add
jns
enter
call
cs
dec
ror
add
xchg
adc
xor
sbb
jbe
(bad)
sub
mov
and
popf
shr
je
pop
pop
mov
mov
inc
ret
cmp
xor
mov
repnz
loope
sbb
mov
lock
imul
into
pop
and
add
xor
cs
jge
loope
aaa
and
sbb
xor
or
mov
add
nop
data16
cs
xchg
xchg
test
mov
repnz
lahf
cs
call
dec
and
fisttp
fs
jae
jno
shr
xlat
or
or
xchg
lahf
cs
(bad)
in
push
cmp
add
pop
mov
out
retf
mov
add
cmp
push
jae
dec
pusha
push
cs
sbb
cs
xchg
fld
jo
pop
repz
sahf
loopne
push
jbe
cmp
add
repnz
sbb
(bad)
fcom
outs
and
ret
xlat
stos
xor
xchg
pop
pop
mov
xor
mov
push
cs
adc
and
mov
pop
cmp
push
sti
jg
(bad)
cs
adc
xchg
mov
mov
sbb
cmps
sbb
test
ds
mov
(bad)
nop
ror
mov
movs
dec
adc
cmp
mov
std
sti
in
mov
xor
out
mov
cs
xor
and
adc
loopne
into
add
ds
pushf
adc
test
movs
cs
fimul
pusha
and
dec
mov
and
scas
xor
mov
cwde
and
adc
clc
loope
lock
mov
jne
xor
cmps
push
dec
aad
dec
jle
jmp
or
dec
jne
adc
test
and
xor
out
int3
in
and
movs
stos
stos
pop
xor
or
lock
cmps
inc
ret
(bad)
jge
push
(bad)
xor
lock
mov
daa
mov
je
xchg
xchg
imul
(bad)
nop
in
mov
sub
imul
mov
cmp
jno
add
pop
pop
jae
enter
(bad)
cmp
mov
test
xor
or
fcom
arpl
leave
jmp
pop
or
ja
gs
xor
inc
xor
(bad)
lahf
sti
test
test
aas
aas
mov
mov
xor
inc
hlt
(bad)
push
les
add
mov
dec
inc
or
jle
add
xchg
popa
leave
test
retf
jne
cli
mov
call
ins
sub
rcl
ret
cld
mov
or
mov
cmp
bound
imul
sbb
les
mov
push
dec
pop
outs
jo
gs
pop
outs
nop
pusha
and
not
add
jmp
pusha
popa
push
fldcw
sti
movs
dec
xchg
pop
enter
sbb
movs
jecxz
xor
sub
js
mov
leave
fld
jge
repz
arpl
pop
xchg
in
leave
xchg
push
jg
test
sub
add
adc
sbb
fdivr
xchg
aaa
shl
loope
test
test
xchg
out
out
clc
dec
stos
jmp
mov
jp
aas
movs
and
cmc
mov
xchg
dec
jno
gs
aas
sub
daa
(bad)
and
sti
adc
mov
int
mov
add
out
mov
pop
and
js
clc
int
mov
aas
mov
movs
mov
push
mov
mov
inc
(bad)
cmp
cmp
pop
push
dec
and
and
and
cmc
out
je
ret
sbb
scas
in
ins
ins
mov
xor
test
call
and
scas
mov
sahf
fs
adc
sbb
aam
pop
jmp
xchg
or
xor
jecxz
sbb
int
push
ucomiss
mov
push
scas
fstp
cmp
add
(bad)
out
fisttp
iret
outs
jmp
shr
(bad)
mov
das
(bad)
adc
sub
jg
xchg
iret
into
loope
sub
pop
mov
cwde
cld
sub
dec
jno
fidivr
aas
out
fiadd
mov
jge
and
les
pushf
xchg
sub
pop
push
(bad)
xor
or
int
push
add
mov
loope
mov
(bad)
pop
add
or
je
dec
clc
jle
xor
sbb
cmps
dec
jg
lea
addr16
lock
and
lods
cs
call
mov
mov
int3
faddp
mov
aas
cmp
mov
inc
ret
out
in
mov
stc
fs
sub
faddp
fstp
mov
or
int
popa
inc
lahf
or
ss
loop
pop
lods
loopne
cs
mov
cmp
lods
ret
mov
mov
cs
jnp
cmp
fwait
in
xor
cs
in
mov
cmp
xchg
xor
stos
pop
cmp
out
sahf
in
scas
sub
out
in
cmp
loop
cs
dec
dec
add
ss
xchg
jno
push
int
cmp
and
lea
rol
push
pop
jno
cwde
enter
xchg
fisub
jge
clc
add
outs
mov
xchg
out
int
sub
(bad)
mov
xor
movs
mov
fisub
dec
pusha
sbb
cmps
sub
and
ins
popa
sbb
cmp
test
call
fild
leave
movs
pop
hlt
sub
add
xor
js
or
inc
push
jp
xor
je
ja
inc
out
jg
cs
movs
dec
jbe
inc
inc
push
sub
rol
mov
pop
mov
les
mov
loop
or
lods
jns
cmps
pusha
and
cs
mov
into
(bad)
cmps
xor
adc
bnd
cs
in
mov
push
sub
jno
cs
jmp
leave
cs
fnstsw
xchg
cs
add
mov
(bad)
sbb
and
xchg
(bad)
test
sti
mov
add
adc
cs
pushf
dec
push
adc
and
fisub
movs
call
(bad)
push
cs
retf
xchg
and
push
test
cmp
adc
mov
inc
or
retf
push
movs
sub
xor
call
sub
push
cld
call
inc
xor
sub
pop
push
jle
test
cs
retf
and
repz
xchg
enter
aas
add
push
mov
hlt
fmul
ins
fwait
xor
adc
sub
xchg
push
xlat
jb
(bad)
int3
dec
rcr
mov
pop
(bad)
cmp
popa
into
jmp
aad
lea
pop
sahf
pop
push
xchg
pop
cs
repz
mov
mov
ret
add
repz
pop
dec
popf
(bad)
adc
dec
stc
mov
mov
repz
imul
mov
mov
mov
bound
repz
mov
dec
cs
ins
mov
test
or
retf
xor
popf
call
dec
xchg
or
add
(bad)
out
mov
jmp
mov
xor
rol
cmp
sub
lahf
mov
aad
mov
out
xchg
xor
ja
cmps
jmp
lea
xor
loop
push
scas
ds
mov
lahf
retf
or
call
cmp
mov
mov
pop
ins
xor
xchg
call
or
dec
test
mov
pop
in
fcomp
iret
lods
xchg
xlat
in
dec
or
push
int
sub
dec
(bad)
ficomp
outs
jns
scas
shl
xor
xor
push
scas
pop
popf
outs
mov
push
cmps
popf
mov
xor
stc
das
dec
mov
push
xor
sub
dec
xchg
dec
mov
cs
jae
push
mov
(bad)
mov
inc
push
(bad)
and
push
add
mov
sub
push
mov
xchg
xor
xor
outs
pusha
ins
xor
or
sub
into
adc
cmp
imul
sahf
mov
(bad)
push
xchg
and
ror
mov
ficomp
pop
out
adc
cdq
ins
cmp
div
cmp
test
out
mov
sub
mov
jp
xor
adc
out
sti
push
or
adc
pop
xor
push
cmp
or
shl
push
mov
leave
into
xor
cmp
mov
inc
daa
mov
stos
mov
js
cmp
outs
inc
dec
pop
ret
cs
fsubr
cld
rcr
mov
or
clc
adc
xchg
into
xor
test
add
jne
sbb
mov
push
mov
popa
sbb
cdq
and
xchg
cs
mov
js
in
es
fsub
ins
sbb
inc
push
ucomiss
int
dec
inc
pop
sbb
dec
adc
ins
leave
dec
cs
int
out
jp
cs
ja
movs
xor
mov
or
test
mov
and
mov
and
dec
inc
fisubr
mov
and
jge
mov
loop
test
jmp
dec
adc
(bad)
fsub
aas
inc
aaa
call
jmp
sub
cvtps2pi
push
add
div
call
add
mov
xchg
(bad)
cs
jp
mov
inc
mov
xchg
data16
in
(bad)
fadd
aas
cs
jl
jp
push
ret
aad
sub
sub
out
sub
fwait
js
cs
jbe
or
xchg
lea
cs
or
xchg
or
cmps
cmps
mov
jle
bound
adc
push
and
stos
add
aad
cli
mov
hlt
cs
push
out
(bad)
lods
call
aaa
leave
out
or
loop
pop
and
arpl
aaa
mov
and
daa
dec
out
dec
and
in
sbb
dec
add
inc
pusha
(bad)
setbe
cs
call
(bad)
mov
les
push
xor
pop
scas
ins
aad
scas
xor
cmp
lods
xor
push
add
sbb
jns
add
cmc
call
adc
xor
sbb
mov
sub
loope
or
movs
push
xlat
sbb
add
sbb
(bad)
in
jp
inc
mov
inc
push
pop
sbb
push
lahf
daa
pusha
sbb
sub
in
add
retf
sbb
pop
jge
int3
rol
outs
sub
mov
(bad)
pop
cld
mov
cmps
mov
ja
push
(bad)
inc
push
sbb
les
mov
fldcw
inc
test
mov
xor
dec
rcl
into
mov
mov
repz
repnz
jne
xor
mov
or
xor
(bad)
xor
sub
jmp
xor
js
jmp
pop
dec
je
jge
mov
adc
sbb
loop
lods
clc
test
sbb
pop
add
push
daa
std
mov
pop
pop
loop
test
push
and
mov
sahf
jb
cs
(bad)
std
jmp
cmps
cs
aas
mov
scas
inc
and
xchg
sti
stos
mov
xor
jg
mov
icebp
jecxz
xchg
add
ficom
mov
movs
cs
ins
xlat
xchg
pop
mov
xor
hlt
ret
aam
xlat
outs
aaa
pop
js
sub
push
jp
imul
into
mov
jecxz
mov
call
push
popf
sbb
icebp
mov
add
hlt
mov
fcmovnbe
xor
xchg
repz
scas
les
fdivr
push
add
add
add
sbb
fdiv
shr
ins
and
aad
sub
test
scas
push
mov
in
push
aas
stos
loopne
outs
sub
aaa
enter
cmp
aam
mov
js
pop
inc
cmps
jae
aam
xor
leave
ins
jg
mov
xor
aas
mov
int3
cmp
js
pushf
jp
mov
cmp
ins
xchg
push
movs
push
dec
or
push
pop
dec
(bad)
jmp
inc
movs
push
push
scas
dec
int
or
outs
loope
dec
push
outs
leave
mov
jns
mov
xchg
adc
mov
icebp
ds
add
and
out
daa
cmp
mov
dec
mov
leave
loopne
jbe
cwde
and
(bad)
or
scas
mov
sub
cld
xchg
mov
fcomp
cdq
lahf
push
xchg
enter
xchg
xchg
cmp
inc
inc
ret
imul
jmpw
fisttp
xor
mov
adc
cdq
xchg
jecxz
jge
mov
out
fld
cs
fld
mov
pushf
inc
loope
sub
inc
push
call
or
push
fidivr
xchg
shl
shl
cmp
fs
mov
pop
sub
jge
leave
push
xchg
sbb
and
sub
jmp
adc
cmps
xchg
dec
rcl
jge
scas
cmp
(bad)
nop
mov
cmps
push
imul
das
or
xor
ror
sahf
pushf
fisub
(bad)
cwde
(bad)
hlt
pop
sahf
sub
push
inc
test
xchg
pusha
js
cdq
ret
(bad)
mov
cmps
or
imul
in
(bad)
out
push
movs
cmps
inc
lahf
das
data16
mov
xchg
xor
xchg
fsubr
mov
jb
fs
ins
and
pusha
and
xor
jge
xor
in
jno
and
xchg
jp
scas
and
leave
pop
daa
iret
jmp
pop
(bad)
cmc
stos
pop
cs
pop
imul
add
push
xchg
daa
push
or
in
cmp
xor
sbb
out
loop
retf
push
mov
test
fisttp
and
xor
inc
jae
push
movs
outs
cmp
rcl
lock
aas
dec
mov
xchg
mov
call
dec
loopne
cs
and
adc
and
sub
(bad)
jbe
xor
sti
mov
mov
rcr
sub
mov
es
sbb
push
outs
ret
sbb
pushf
jmp
jp
push
cld
clc
out
xchg
jle
(bad)
cs
push
gs
cs
add
sti
repz
push
test
pop
cmp
lahf
imul
fstp
out
movs
mov
rcr
xor
dec
jge
mov
retf
dec
mov
or
ficomp
cs
sar
scas
outs
jmp
add
ficomp
arpl
xor
stos
push
mov
or
jbe
cmp
jmp
or
pop
cmp
dec
push
cs
in
or
mov
sar
xor
rol
movs
sahf
fdivr
jmp
mov
sahf
dec
xor
push
pop
pop
xchg
cmp
mov
pushf
clc
shr
lods
cs
mov
mov
jle
daa
stos
leave
add
fistp
int3
aam
cs
dec
mov
out
xor
or
mov
xchg
bound
dec
or
cs
(bad)
or
je
mov
mov
sbb
imul
aas
cwde
ret
into
sub
mov
aas
out
je
mov
ret
out
sub
ins
cmp
inc
loopne
inc
add
pop
in
sub
add
ss
or
adc
(bad)
jg
xor
xchg
rcr
jnp
cs
hlt
je
sbb
test
pop
adc
popf
and
or
sbb
gs
pop
xor
dec
add
jno
sbb
cld
adc
jb
sbb
pop
rol
cmp
add
popa
shl
stos
add
mov
xor
cli
add
(bad)
cmp
idiv
xor
test
jmp
shl
pusha
addr16
rcr
adc
jle
cmps
div
or
cs
or
jae
test
daa
mov
xor
sbb
push
sti
inc
loopne
cmp
push
leave
out
mov
push
inc
xor
cs
pop
hlt
movs
mov
pop
xor
jo
xchg
pop
push
fdiv
push
inc
mov
adc
shr
and
jecxz
je
mov
xor
cmp
fwait
sub
leave
xchg
xchg
jecxz
movs
push
cld
dec
div
imul
mov
js
pop
cs
add
jno
lock
jle
cmps
lods
inc
fwait
out
mov
cmp
mov
push
(bad)
lods
and
pop
dec
xchg
bound
cs
xor
push
cmp
pop
and
xor
push
call
pop
pop
ins
push
dec
and
mov
ror
push
enter
stos
ret
cdq
sub
fidiv
jl
stc
mov
sub
cmp
lods
lahf
scas
xor
scas
lds
sub
sub
jp
inc
aas
fwait
sub
mov
std
sub
out
cmps
in
aaa
pop
out
ret
add
mov
sub
scas
sub
outs
push
jle
push
jbe
lock
cli
xor
ret
mov
push
bswap
pop
nop
or
add
(bad)
push
lods
aas
xchg
fidiv
sbb
dec
fidivr
jo
dec
mov
fiadd
(bad)
push
shl
aas
das
leave
gs
jbe
sub
sub
stos
stos
ins
das
jns
mov
pop
je
adc
out
xchg
xor
xchg
push
addr16
and
enter
int3
cwde
push
test
cs
ds
sbb
rcl
mov
ror
adc
(bad)
in
leave
or
les
mov
jle
xchg
icebp
jne
inc
add
fstp
jge
imul
fmul
mov
mov
movs
fistp
xchg
stos
or
jmp
push
js
mov
cmp
mov
sub
and
and
leave
(bad)
cld
cmp
xchg
sub
mov
in
popa
sbb
mov
mov
addr16
xor
inc
and
dec
je
dec
out
xlat
push
cld
(bad)
and
inc
jge
test
push
scas
mov
shl
aad
or
inc
rol
data16
cmp
cmps
jns
sbb
(bad)
es
aam
mov
aas
(bad)
mov
aad
add
jmp
dec
jp
jl
mov
imul
sbb
aas
push
shr
mov
pop
adc
das
cmps
imul
pop
sub
push
ins
mov
lds
add
push
lods
and
cdq
sub
push
movs
sub
and
mov
jp
ss
scas
pop
std
cs
dec
or
pusha
cmp
cmp
retf
ret
mov
pop
sbb
and
sub
scas
sbb
lods
es
xor
add
aas
xchg
fcmovne
xor
out
dec
test
aad
and
in
dec
dec
jmp
inc
lods
cld
cs
cmp
dec
es
rcl
pop
add
fiadd
or
or
stos
lods
loop
pop
loope
xor
inc
out
mov
adc
xchg
daa
xor
popa
sar
scas
jmp
cs
push
push
in
inc
les
not
inc
dec
and
leave
das
sub
cs
lods
jmp
out
jae
rcr
pop
cmps
or
and
adc
xchg
push
scas
call
mov
(bad)
arpl
retf
mov
cmp
pop
dec
je
sub
leave
cmp
cs
fidivr
outs
retf
jb
add
sbb
cs
cmp
sbb
dec
(bad)
jle
inc
jb
adc
daa
fcomp
test
cmp
stos
(bad)
xchg
aad
cmp
push
sub
(bad)
add
loope
jmp
fs
nop
pop
mov
std
sti
inc
test
imul
(bad)
scas
push
add
shl
dec
int3
xor
movs
inc
data16
and
hlt
add
sbb
loopne
or
add
ret
push
mov
mov
sub
cmp
out
shl
mov
or
popf
ja
(bad)
into
dec
aas
or
push
or
leave
push
or
mov
enter
xchg
pop
cmc
push
push
add
fist
call
jo
push
icebp
push
inc
popf
adc
adc
mov
addr16
or
jno
jl
shl
adc
imul
mov
mov
mov
cmps
loope
bound
jmp
jns
mov
test
cmp
xchg
xlat
int
pop
(bad)
jg
daa
fs
xor
mov
sbb
jle
fdivr
fiadd
std
mov
inc
inc
ins
push
ret
jne
sti
inc
push
and
jo
aaa
sbb
or
das
leave
push
and
mov
mov
push
popf
stos
loopne
(bad)
out
ds
sub
xlat
or
aas
or
in
les
aam
dec
and
push
test
jmp
fldenvw
or
leave
dec
data16
inc
stos
movs
enter
out
sbb
xor
add
enter
xor
inc
adc
cmp
clc
call
sar
dec
xchg
shl
out
popf
data16
mov
sub
or
jb
push
scas
ror
xor
je
hlt
sub
nop
mov
sti
call
test
inc
es
and
inc
(bad)
jae
add
xchg
dec
out
fdivr
maskmovq
jmp
(bad)
bound
mov
mov
out
lods
cmp
ins
in
sub
jmp
mov
xor
(bad)
or
scas
in
mov
inc
sub
mov
fld
push
lahf
in
jmp
xchg
xchg
inc
add
jle
imul
push
(bad)
mov
fnstcw
(bad)
or
cwde
cmp
jb
pop
mov
sub
ds
inc
adc
out
cmp
imul
call
sub
cmp
icebp
lods
aam
xchg
out
pop
int
aas
fdiv
scas
inc
shl
sbb
inc
leave
les
ret
jae
mov
lahf
mov
aam
mov
sub
outs
das
fdiv
add
cmp
je
xor
add
stos
scas
in
in
push
push
addr16
aas
mov
rol
imul
fwait
ror
aad
lahf
or
lods
ins
jp
push
aaa
inc
stos
mov
daa
movs
pushf
push
xor
in
cmp
out
push
and
aas
mov
test
jmp
clc
pushf
imul
sbb
or
es
loop
sub
in
jmp
ret
inc
stos
fwait
ins
(bad)
cmp
push
scas
jp
xchg
fdivr
and
and
call
(bad)
mov
xor
(bad)
jg
mov
leave
pop
cdq
xor
push
xor
mov
cld
hlt
mov
pop
ja
sbb
and
loope
repz
in
xchg
movs
inc
mov
fld
ds
or
clc
mov
xchg
mov
fst
xchg
shl
adc
aad
push
cld
lock
fldcw
mov
dec
mov
rcr
fst
aam
push
in
mov
xor
inc
ds
jno
dec
mov
push
imul
loope
int3
repnz
je
cmps
shl
inc
add
div
pushf
mul
cdq
jae
(bad)
fdiv
ins
loop
jle
sar
fcom
mov
out
iret
jg
leave
push
xchg
cmp
sub
bound
pop
daa
ficomp
xchg
or
cmps
js
outs
pop
pushf
fmul
push
or
jns
ret
sub
xchg
stos
pop
in
mov
inc
pusha
out
mov
cs
sub
adc
test
sbb
dec
xor
inc
daa
jl
jns
dec
cmp
out
mov
movs
test
sbb
cs
cmp
jnp
xor
stos
adc
loop
call
jns
hlt
sbb
cs
popa
adc
or
leave
or
test
mov
cs
(bad)
sti
(bad)
loopne
pusha
xor
and
sbb
jge
pop
cmp
in
fiadd
popa
fwait
div
cwde
packuswb
arpl
daa
inc
in
sar
cmp
sub
movs
mov
adc
scas
rcl
cmp
jb
jp
push
mov
jle
add
jmp
or
cmp
pop
mov
cs
inc
imul
inc
mov
mov
sub
sti
mov
jge
cs
jb
push
fcomp
(bad)
pop
std
add
inc
add
cmp
loope
sub
mov
(bad)
into
mov
lods
jmp
jle
fiadd
out
and
sbb
xchg
rcr
mov
(bad)
pop
pushf
stc
xchg
pop
aad
into
inc
sub
shl
vcmpss
and
dec
sub
das
stos
fidivr
push
fwait
test
jb
mov
(bad)
push
or
es
fwait
or
lock
outs
jae
out
retf
dec
mov
and
cmp
lods
outs
(bad)
mov
shr
mov
ret
addr16
xchg
adc
mov
lahf
pop
jl
jnp
and
jge
jb
push
call
data16
(bad)
adc
outs
in
es
mov
int3
or
daa
inc
popf
mov
xchg
xor
push
aaa
or
and
pop
outs
push
leave
or
xchg
xchg
data16
sbb
pop
fcomp
(bad)
(bad)
or
iret
sbb
push
popa
es
cmps
jp
call
mov
lods
les
pop
push
sahf
cmp
pop
xchg
jmp
fistp
dec
out
out
dec
setg
jle
sbb
push
push
inc
xor
or
mov
leave
das
pop
imul
and
ds
cmp
fldcw
or
jo
cmps
ja
push
push
(bad)
int
adc
jbe
test
jp
xchg
or
and
pop
loop
xor
fsub
dec
icebp
sar
in
cld
lds
push
clc
or
cmp
outs
sub
pushfw
inc
sar
push
xchg
fmulp
cdq
out
not
inc
cwde
fwait
xor
inc
adc
fucom
(bad)
ins
push
adc
push
leave
jl
jo
bound
pop
ds
mov
or
and
cmp
cmp
adc
sub
ds
lock
pop
sub
iret
ds
or
xor
imul
lds
xor
jecxz
mov
and
push
pop
pop
sub
cli
push
leave
lea
dec
mov
icebp
mov
dec
cmps
push
movs
push
cs
ja
pop
ds
vpsubq
inc
adc
or
es
xor
xchg
aaa
jle
pop
xchg
xchg
aad
mov
daa
sbb
sub
jbe
in
cmp
fcom
inc
pop
dec
push
scas
jno
fidiv
imul
jae
jne
sar
mov
stos
mov
sub
(bad)
jg
mov
and
iret
dec
(bad)
mov
retf
pop
outs
sub
inc
cs
jg
sbb
cmp
mov
mov
cs
enter
std
pop
lods
cs
pusha
movs
mov
call
icebp
mov
ror
pop
and
in
sub
xor
adc
cmps
ror
test
lds
add
fs
xchg
int3
jae
xlat
fdiv
push
dec
shl
cmp
pop
xchg
push
jnp
leave
in
(bad)
xchg
push
cs
lods
mov
call
fild
adc
sub
sub
sub
push
cmp
mov
(bad)
add
ret
sbb
adc
je
call
aad
out
cmps
cs
pop
push
test
mov
sub
repnz
loopne
push
jle
test
xchg
pop
clc
and
cmp
pop
into
outs
mov
mov
cs
retf
and
cmp
std
mov
sbb
xor
(bad)
aas
(bad)
and
(bad)
push
scas
pusha
fnstsw
adc
mov
push
mov
(bad)
cmp
xchg
push
scas
add
cld
ret
cs
idiv
cmps
les
aaa
mov
xchg
addr16
inc
jmp
call
in
cmp
xor
scas
pop
setp
mov
mov
cmp
sub
sub
lods
das
sub
cmc
fcomp
mov
sbb
sbb
jcxz
xor
pop
xlat
xchg
adc
push
cs
sbb
push
shl
data16
mov
scas
jmp
and
fadd
adc
add
cli
jle
xchg
movs
mov
lock
in
ret
sub
or
mov
std
pop
jno
nop
or
stos
pop
mov
jl
cmc
or
sub
sar
aam
sbb
stc
(bad)
fisttp
and
jmp
and
xchg
push
mul
fnstenv
cs
add
push
scas
xchg
cs
out
dec
push
or
dec
pop
popa
int3
sbb
xchg
inc
cli
xchg
pop
sahf
pop
dec
ud1
and
fbstp
(bad)
scas
push
sub
(bad)
mov
dec
in
jl
icebp
sbb
sbb
into
mov
cs
jecxz
sub
pusha
cmp
scas
mov
fsubr
or
std
jns
leave
xor
test
jo
cmc
imul
adc
sahf
xor
pop
jae
cmp
test
xor
add
loopne
in
pop
fisub
movs
cs
pop
pop
sbb
mov
push
aam
push
fldenv
jp
daa
mov
xchg
outs
in
adc
mov
pushf
jne
test
sub
icebp
call
push
scas
fcomp
mov
bound
mov
cwde
clc
enter
out
test
mov
mov
add
bound
dec
shl
(bad)
cmc
push
or
aaa
leave
clc
push
scas
mov
out
lea
mov
lock
cs
leave
imul
in
pop
dec
(bad)
repnz
(bad)
jg
add
lds
sbb
jmp
stos
ret
push
dec
aam
call
fcomp
jae
sub
mov
mov
repnz
mov
xor
leave
sub
les
mov
push
sub
inc
push
(bad)
xlat
jl
aas
mov
leave
or
adc
stc
xchg
cli
mov
leave
add
mov
outs
sar
movs
mov
aad
xor
cmp
cmps
sub
dec
std
push
mov
movs
xor
shl
cmp
push
out
adc
int
add
test
fistp
es
adc
mov
jb
mov
and
scas
sub
fsubr
push
sub
cli
outs
ds
arpl
and
ds
cmps
rcr
dec
sub
data16
mov
imul
push
sub
(bad)
jo
add
fnsave
lock
jp
lods
jo
ja
push
(bad)
pop
je
nop
xor
cmp
(bad)
pop
pushf
jp
pop
or
mov
fwait
push
mov
jl
mov
setle
sahf
mov
and
or
cmp
pop
stos
sub
retf
(bad)
and
dec
push
or
cld
leave
repz
push
jle
sub
adc
sub
stos
mov
outs
aaa
or
aaa
aad
xor
cld
ja
imul
pop
ss
dec
adc
test
add
popf
cdq
std
aam
cs
add
sub
jb
mov
inc
pop
jg
cmc
sar
sub
xor
and
lods
push
add
mov
cs
(bad)
push
int
repz
jg
xchg
xor
jl
xor
xchg
jbe
retf
cs
cmp
out
iret
cs
xchg
push
xor
sub
ss
cmp
ret
jo
mov
cmps
icebp
xchg
int
jns
sub
xlat
push
cs
inc
jbe
(bad)
cs
add
stos
pop
sar
cs
mov
test
or
sbb
shr
mov
add
cmp
sub
inc
jbe
pop
cmp
data16
cs
jo
pop
adc
add
pop
inc
cs
ss
xor
xchg
xchg
lods
cs
dec
bnd
fldcw
inc
(bad)
(bad)
xor
adc
retf
sub
pop
fsubr
not
daa
xchg
cmp
jb
in
mov
mov
cli
ss
xor
js
and
dec
into
lock
outs
pop
out
(bad)
jnp
pop
cli
dec
push
mov
mov
mov
add
cs
(bad)
jns
mov
cmp
pop
aaa
jnp
inc
pop
ret
add
sub
jle
shl
scas
daa
cmp
adc
cs
mov
cwde
xchg
push
add
(bad)
scas
call
push
jbe
and
inc
mov
xor
sub
mov
add
adc
xor
pop
cmp
sub
cmps
mov
and
rcr
cmp
imul
mov
loopne
fdiv
sub
mov
sbb
xor
adc
pop
jle
adc
ja
mov
mov
dec
jl
xor
pop
inc
loopne
(bad)
pop
into
adc
mov
lods
or
dec
or
and
test
mov
add
and
(bad)
fisubr
jge
movs
sub
into
push
int
loopne
cmp
shl
fcmovnu
xor
out
loop
mov
push
out
add
xor
inc
sub
cmp
adc
adc
(bad)
hlt
ss
ds
fld
addr16
loopne
dec
or
popf
and
and
mov
xchg
aam
inc
push
mov
add
xchg
sar
inc
xchg
rcr
sub
dec
sar
das
int3
clc
dec
push
mov
inc
iret
push
and
xchg
mov
outs
add
dec
out
xor
or
pop
add
call
jns
mov
mov
jp
mov
scas
aad
mov
cwde
int
cmp
mov
and
jecxz
sub
xor
repz
fsubr
ins
sbb
push
hlt
(bad)
cdq
add
inc
or
cmps
dec
ja
test
mov
sbb
push
sub
mov
aam
mov
cmp
call
test
mov
imul
cmp
sbb
stos
rcl
mov
cwde
shr
jmp
mov
and
aad
sub
cmps
dec
dec
sub
es
mov
inc
(bad)
mov
leave
rol
ja
sub
rol
mov
mov
popf
hlt
cmp
mov
jecxz
sub
inc
iret
cmp
and
adc
movs
push
and
inc
(bad)
push
(bad)
ins
shl
rcr
ret
gs
fdivr
add
daa
adc
jp
add
push
mov
push
lods
dec
(bad)
push
or
jmp
out
pop
ins
ror
imul
leave
push
and
xchg
(bad)
aas
mov
jb
outs
lods
add
mov
stc
outs
mov
cs
enter
mov
(bad)
repnz
ret
test
xchg
inc
rcl
adc
cs
jp
dec
fcom
sub
cs
mov
data16
and
cmps
xlat
movs
scas
pushf
xor
inc
add
push
cmp
shr
xor
mov
ins
icebp
add
nop
jle
movs
lods
cmps
xor
ret
cs
js
(bad)
xchg
push
jne
sbb
popa
adc
xchg
push
mov
cs
neg
xor
pop
lock
stos
lods
pop
in
jne
jnp
cmp
sldt
sahf
dec
cs
pop
or
cs
mov
mov
(bad)
enter
enter
mov
(bad)
sub
clc
jne
cs
and
addr16
jo
rep
fisttp
mov
ret
popf
mov
jbe
sub
or
xchg
ficomp
mov
cmp
(bad)
call
mov
(bad)
xchg
xchg
mov
pop
push
cmps
les
adc
loopne
lds
mov
mov
dec
icebp
mov
pop
cs
push
push
cmp
xor
cs
bound
and
dec
xchg
pop
outs
jb
out
rcl
stc
jo
jle
jmp
pushf
fcomp
int
inc
out
data16
xchg
cs
outs
rol
test
imul
(bad)
fucom
cld
mov
xor
mov
or
cs
lahf
add
cs
mov
out
aam
std
and
mov
fcmovne
es
xor
les
jne
mov
lock
sbb
bound
aas
mov
call
retf
xor
xchg
mov
sub
scas
nop
push
cmp
add
iret
xor
cmc
ds
outs
and
push
and
loopne
mov
and
add
pushf
int
sub
inc
adc
(bad)
adc
add
fwait
pop
lods
xor
mov
xchg
iret
out
adc
outs
das
scas
and
mov
lea
aas
cmp
push
outs
mov
icebp
jnp
je
aam
mov
popa
in
ins
imul
pop
inc
shl
fmul
in
jl
or
adc
mov
nop
jnp
mov
fiadd
out
xchg
mov
mov
dec
bound
stos
dec
sbb
fisttp
loopne
sub
rcr
addr16
xchg
mov
mov
in
cmp
cwde
retf
jg
jne
aam
dec
mov
adc
jp
mov
and
sub
mov
pop
inc
push
(bad)
jmp
ss
xchg
add
icebp
out
and
xchg
ins
inc
and
mov
enter
mov
das
jmp
fisubr
push
shl
push
stos
ret
mov
add
int3
ins
ds
mov
(bad)
sahf
and
rol
jge
lock
jmp
(bad)
mov
sub
cmps
cmp
enter
ror
mov
cld
pop
mov
outs
sub
mov
jo
aam
cmp
neg
xchg
shl
dec
outs
xchg
mov
or
push
jne
push
in
mov
sub
inc
adc
fist
push
jbe
movs
stos
rcr
sub
add
xor
(bad)
imul
cs
mov
pop
aas
mov
mov
xchg
(bad)
and
dec
das
push
xchg
push
add
mov
sti
(bad)
lds
loop
cwde
leave
push
cmp
into
shl
ret
dec
pop
stos
jmp
in
sub
xlat
ss
jmp
xchg
xchg
sub
cwde
sub
xor
movs
or
cli
mov
inc
mov
mov
and
out
jp
lods
add
add
pop
xor
and
daa
xor
das
fdiv
inc
jecxz
sub
sar
xor
dec
inc
dec
cmc
mov
push
sar
ror
movs
adc
xchg
mov
out
jge
ret
push
fmul
in
jle
jo
add
and
or
inc
xor
(bad)
fisubr
adc
sub
(bad)
sub
ins
aas
cmps
jno
xor
(bad)
(bad)
mov
mov
add
inc
inc
bnd
mov
jmp
push
arpl
jno
adc
or
fwait
jge
jmp
cmp
inc
add
jp
cmps
hlt
movs
xor
(bad)
push
pop
sub
dec
push
ret
pop
mov
xchg
mov
jb
mov
ja
mov
or
xchg
fidiv
in
addr16
fstp
xor
inc
sbb
imul
div
fst
into
push
ss
jne
imul
sti
jl
mov
xchg
xor
adc
mov
fild
fs
inc
sbb
inc
pop
repnz
pop
loopne
cmp
push
xor
rol
mov
shr
mov
inc
jbe
and
sbb
enter
aas
dec
xchg
pop
imul
nop
sub
(bad)
sub
movs
jp
xchg
jl
inc
lea
sub
in
jne
and
pop
retf
inc
adc
pusha
es
push
fwait
arpl
xchg
push
popa
outs
cs
sub
pushf
or
call
or
sub
pop
lods
pop
pop
test
xor
sbb
inc
mov
sub
ss
and
xor
cs
outs
vaddsubps
cmp
bound
add
jge
adc
push
jl
(bad)
pop
mov
cs
dec
movs
lods
mov
cwde
fldcw
mov
retf
push
scas
ficom
cli
cmp
cs
push
jne
mov
cmp
cs
mov
out
sbb
mov
dec
(bad)
shl
and
xchg
rcr
cli
into
inc
cs
ins
jl
or
xor
sub
cmp
xor
pushf
adc
std
daa
call
cdq
ss
inc
retf
pop
and
mov
mov
loopne
sub
aad
dec
push
xchg
jg
pop
cs
fist
pop
movs
imul
jnp
iret
xchg
pop
cs
sub
test
idiv
add
sti
int3
ja
and
stos
nop
enter
and
loop
xor
xor
jle
and
inc
out
lahf
les
dec
cs
xchg
cs
jp
pop
rcl
pop
jg
jmp
fidivr
imul
mov
sub
jp
nop
sub
pop
loopne
cs
mov
cmp
lahf
outs
jb
xchg
xor
dec
lods
push
pop
dec
into
and
mov
mov
rcr
add
nop
loop
mov
sahf
xor
pusha
sub
daa
mov
xchg
cmps
je
adc
xor
cwde
loope
jmp
jle
es
add
ret
retf
cmp
int
cs
ss
les
cwde
aam
mov
mov
ins
xchg
push
aas
mov
idiv
cmp
shr
dec
ret
sbb
shl
adc
iret
mov
fimul
bound
lock
jo
rol
lods
scas
mov
fdivr
loopne
rcl
or
or
pop
xor
xor
mov
out
xlat
popf
fistp
jge
daa
jmp
pop
mov
stos
in
aam
pop
scas
les
loopne
sbb
pop
sub
dec
xchg
iret
cwde
scas
shl
push
adc
push
nop
add
jnp
xor
data16
out
lea
ret
imul
loopne
cs
out
adc
movs
pop
dec
cs
dec
sub
fsubr
stos
xchg
int
adc
mov
stos
aam
jbe
jg
call
xor
stos
pop
aaa
sti
mov
cmp
ins
rcr
cs
or
xor
in
jg
sbb
icebp
cmp
imul
arpl
repnz
cmp
scas
push
cs
push
(bad)
fsubr
retf
sbb
aam
cs
cmp
pcmpeqd
gs
fnstsw
sbb
xchg
inc
push
mov
cmp
sub
and
xchg
cs
fs
lods
jmp
dec
stos
add
inc
cs
sbb
cs
xor
xor
pop
daa
ja
mov
sub
pmaxub
aam
outs
and
or
sub
test
fnstsw
sahf
push
or
inc
mov
cmps
addr16
in
mov
and
lods
and
pop
test
mov
test
ficom
scas
out
mov
sub
add
retf
icebp
(bad)
popf
fistp
mov
sbb
bound
adc
push
pop
repnz
movs
and
xchg
pusha
adc
into
cs
in
sbb
cs
jp
lock
sub
(bad)
(bad)
jle
and
inc
jo
xchg
repz
scas
fs
xor
sar
push
add
call
lds
xchg
rcl
call
outs
or
test
inc
dec
jge
sub
sub
cmps
pop
xchg
push
(bad)
aad
inc
xchg
mov
ds
aas
lea
(bad)
push
xor
pop
push
in
xor
in
mov
pusha
fsubrp
dec
into
cmp
repnz
les
enter
push
push
sub
sub
ret
mov
out
mov
stc
sub
call
jno
pop
jmp
(bad)
pusha
stos
aad
jbe
repnz
inc
pop
daa
pop
xlat
cld
ja
pop
aam
cmps
inc
push
xor
or
fdivr
sti
fwait
(bad)
out
shr
or
xor
cmps
push
ja
test
outs
and
int
fwait
jecxz
fild
mov
inc
jns
sti
xchg
stc
iret
and
dec
pop
adc
mov
fistp
repz
xlat
jo
cld
mov
dec
sbb
dec
xor
push
jmp
scas
fs
adc
retf
fimul
das
cmp
imul
sub
fisub
xchg
call
ss
(bad)
pop
inc
inc
sub
sbb
dec
(bad)
scas
test
xor
arpl
jbe
jg
lahf
mov
loop
adc
(bad)
lods
jae
call
ds
xchg
pause
lea
push
scas
scas
push
or
mov
std
call
mov
sub
pop
fistp
fmul
add
popf
fwait
scas
xchg
sub
mov
mov
dec
mov
(bad)
fsubrp
pop
outs
fdiv
loope
out
clc
test
jle
fsubr
fwait
cmps
aaa
dec
pop
aas
outs
enter
cmc
or
fcom
mov
repz
push
mov
dec
cs
inc
push
das
fcomp
pushf
mov
dec
cs
jnp
(bad)
cmp
test
and
arpl
es
mov
ret
cmps
mov
xlat
xchg
icebp
rcr
sub
(bad)
and
xor
in
test
cmp
pusha
scas
fsubr
mov
(bad)
dec
push
sbb
sub
aas
or
icebp
cs
jno
pop
in
call
sub
in
ror
push
cs
pop
mov
das
xchg
sar
dec
retf
adc
push
js
cmc
test
sub
jbe
cmp
add
cs
(bad)
mov
popa
cs
test
mov
xor
dec
push
push
xor
cmp
cs
mov
cmp
cmp
(bad)
(bad)
imul
xor
or
xor
push
push
and
loopne
mov
mov
cs
cmp
cs
mov
(bad)
lds
cmp
push
sub
shr
sub
and
mov
dec
and
dec
shl
sub
test
push
sbb
push
ds
sti
and
adc
cs
pop
sbb
jo
loop
(bad)
addr16
cs
(bad)
mov
out
aam
std
cmps
jae
mov
shl
xchg
jne
call
adc
cmp
inc
inc
xlat
cli
fdivr
jae
inc
adc
mov
push
imul
not
loop
xor
mov
mov
in
mov
(bad)
stos
jl
pop
cmp
and
xor
mov
loop
mov
push
repz
(bad)
shr
aam
sub
inc
add
sbb
pop
and
or
dec
in
cli
dec
cmps
inc
pop
aad
dec
jae
jle
imul
into
(bad)
stos
enter
out
jae
push
mov
push
jb
or
xor
aaa
mov
loop
cmc
cmp
sbb
mov
rcl
xchg
test
mov
fdiv
repnz
xor
nop
lods
push
ret
and
in
and
ins
jbe
pop
fidiv
cmp
sbb
outs
xor
xchg
push
push
pusha
pop
scas
dec
or
hlt
mov
cmp
mov
ret
adc
mov
sub
pop
int3
cs
stos
stos
mov
and
sub
imul
das
xchg
cs
dec
mov
fcomp
cs
js
xchg
mov
jae
retf
cs
jecxz
div
add
jo
and
mov
push
lods
cs
stos
out
cs
cmp
or
pop
in
push
jl
inc
(bad)
sahf
pop
shl
push
jle
sub
jmp
js
jecxz
scas
sub
and
pushf
push
xchg
sub
cmps
out
xchg
scas
call
add
jmp
shr
xor
adc
daa
outs
dec
adc
mov
mov
jo
pop
lds
and
aas
mov
inc
aam
xchg
aaa
retf
or
push
adc
adc
cdq
(bad)
push
mov
icebp
mov
cmp
loope
rcl
add
mov
dec
jb
or
xor
cmps
jp
stc
daa
lock
imul
mov
cmp
leave
or
inc
arpl
or
sbb
test
ret
dec
mov
aaa
mov
ret
aam
dec
ret
jle
dec
cdq
ss
lock
and
cmc
loop
mov
mov
out
movs
addr16
loopne
scas
sub
(bad)
imul
frstor
pop
call
jo
(bad)
mov
mov
push
mov
mov
lock
imul
data16
imul
aaa
nop
cmp
sub
mov
inc
sub
sub
js
inc
xor
sub
lea
shl
fdivr
xchg
xor
fcmovnbe
aad
and
es
and
add
push
jmp
(bad)
jno
xor
ret
add
push
pusha
and
dec
das
mov
dec
mov
fs
stos
xchg
push
xchg
and
(bad)
sub
(bad)
or
in
popa
add
test
cmps
sub
sub
setb
sub
sbb
push
adc
push
in
xor
sub
xchg
sub
sbb
pop
dec
dec
and
aam
(bad)
mov
push
mov
pop
and
mov
add
icebp
rol
daa
scas
jl
out
mov
cmp
sub
mov
in
cmp
shl
jmp
add
adc
movs
dec
jl
jmp
cmp
sahf
not
pop
das
add
pop
jle
int
or
pop
xchg
in
jle
(bad)
mov
or
jne
bswap
test
jl
dec
stc
daa
xchg
rol
xor
sub
shr
xor
pop
pop
xchg
ja
pop
(bad)
push
mov
sub
dec
mov
push
test
ja
out
add
fucomp
daa
mov
in
les
scas
push
in
mov
nop
mov
je
mov
sub
int
je
leave
cli
xor
jmp
cs
adc
out
jmp
pop
mov
cmp
cs
js
add
jl
movs
xor
inc
push
scas
inc
pop
je
pop
adc
test
add
sbb
cs
xchg
push
scas
cs
je
and
cs
into
inc
hlt
xchg
test
push
cli
or
add
fstp
dec
jb
loopne
pop
fsubr
shl
dec
adc
sub
xor
gs
mov
cs
jno
xor
xor
mov
daa
push
adc
imul
das
aam
sub
pop
xchg
ret
out
adc
paddsb
jp
sub
sbb
xor
daa
repnz
mov
sub
push
in
mov
sbb
retw
dec
mov
ret
shr
xor
jge
data16
cs
mov
xchg
push
and
cld
mov
sbb
mov
movs
jb
cmp
xor
aam
imul
jl
cmps
xor
jge
sbb
sub
into
adc
inc
sub
sbb
into
aad
sbb
and
inc
ror
push
loopne
cs
dec
lds
sbb
cs
aam
inc
mov
mov
daa
cmp
push
test
cdq
jp
jmp
dec
sub
(bad)
xor
into
adc
xor
or
add
dec
scas
jle
outs
scas
cs
stc
dec
enter
fnstenv
outs
jp
sbb
popa
mov
ret
dec
mov
mov
mov
outs
fwait
adc
mov
or
inc
dec
iret
inc
shl
cmp
cld
sbb
out
add
(bad)
or
sti
sub
mov
ins
lock
cmps
sub
jns
and
inc
pop
mov
jl
call
sti
shl
daa
stc
or
push
pop
fidiv
aam
xor
push
hlt
add
movs
sub
push
inc
or
push
dec
sub
add
or
jb
add
jno
mov
mov
inc
div
mov
es
fadd
jbe
mov
lock
mov
das
retf
out
test
test
or
add
rol
and
cwde
and
and
in
pop
(bad)
adc
icebp
jb
lahf
pop
xor
rcr
add
stos
jne
jmp
jne
xor
xchg
and
stos
xchg
das
nop
aad
add
(bad)
fnsave
cmovbe
std
jne
cmp
and
sar
and
mov
das
lods
dec
aam
xor
cmp
clc
in
out
test
(bad)
div
out
xor
aam
adc
pop
ins
imul
push
inc
add
ret
ss
dec
fcom
jg
dec
sbb
idiv
rol
pop
daa
jg
(bad)
(bad)
mov
test
ss
xchg
mov
cmp
and
div
xor
idiv
dec
mov
jecxz
aam
jmp
test
hlt
mov
lea
fdiv
xor
and
imul
imul
iret
(bad)
sar
les
or
scas
inc
adc
cs
pop
sbb
cwde
out
or
out
je
push
xor
jmp
inc
mov
std
mov
scas
adc
sub
cmp
pop
xor
icebp
in
stos
test
aaa
or
lahf
dec
cs
xor
stos
pop
ret
xor
jne
imul
add
sbb
sub
outs
out
xor
pop
and
push
icebp
sub
jg
in
adc
leave
xchg
xor
push
dec
leave
cmp
and
sahf
xor
retf
pop
enter
mov
inc
mov
js
in
ss
sub
sub
dec
push
mov
push
cs
je
retf
fwait
retf
cs
shl
mov
hlt
mov
cs
fnstsw
add
lea
pcmpgtb
adc
cs
mov
or
xchg
adc
mov
inc
push
push
lds
cmp
stos
test
mov
ds
xor
call
inc
mov
pop
cs
push
imul
rcr
mov
cs
es
xor
into
test
mov
pop
xor
xor
xor
data16
cmp
(bad)
mov
jmp
jae
push
push
popa
(bad)
das
in
mov
ret
cmp
adc
pop
cs
lock
push
das
xchg
fidivr
int3
mov
cmc
ins
daa
push
inc
push
cmc
adc
aas
adc
retf
pop
push
loopne
cs
jl
bound
xchg
dec
lods
xchg
inc
aas
push
push
jle
cmps
jecxz
mov
ins
(bad)
sbb
sub
xor
rol
addr16
xchg
mov
loope
sub
sar
js
push
sbb
mov
cs
nop
daa
and
jl
adc
inc
popf
daa
mov
pop
jnp
dec
mov
ss
loope
sar
push
add
nop
data16
and
shl
mov
pop
xor
and
fcom
cmp
sbb
sub
mov
pop
sbb
mov
sbb
jns
(bad)
psllw
inc
cs
xchg
rol
scas
and
daa
in
aad
sub
test
and
mov
xor
push
or
xchg
aas
dec
mov
cs
sub
cs
div
mov
and
mov
pop
call
scas
sbb
mov
push
ss
mov
cmps
nop
rol
xchg
inc
pop
push
xor
jno
inc
test
or
test
clc
xchg
xor
test
std
or
outs
inc
adc
jl
mov
bound
push
daa
jmp
ret
loope
das
fmul
and
adc
ss
dec
retf
push
int
lahf
imul
jecxz
jmp
movs
cwde
or
imul
inc
jmp
jl
add
fidiv
adc
scas
icebp
push
add
lock
mov
enter
xor
or
hlt
adc
setp
imul
fsubr
outs
or
out
cs
lahf
jae
aam
pop
test
test
mov
js
xchg
fld
clc
leave
jecxz
inc
cs
mov
pop
es
jg
xchg
pop
cmp
fwait
xchg
hlt
icebp
xor
sub
test
cld
pop
jmp
dec
and
xor
outs
adc
cs
push
mov
mov
fcmovne
add
pop
jb
push
cs
aam
xchg
mov
(bad)
stos
sub
push
popa
cs
jmp
popf
xchg
xor
pop
mov
in
out
scas
out
cmps
enter
fld
xchg
xor
sub
jecxz
out
mov
lahf
int3
push
in
push
mov
pop
add
cli
enter
sub
lods
mov
cs
lock
pop
pop
mov
call
test
push
mov
in
jge
(bad)
mov
int3
aaa
adc
ss
out
pop
sbb
idiv
push
jbe
jno
mov
mov
inc
(bad)
stos
sub
nop
or
imul
scas
in
lods
dec
or
repz
(bad)
xchg
jmp
jle
cs
movs
and
cmp
adc
fwait
jg
test
pusha
or
push
and
mov
and
cmovo
outs
mov
pop
loopne
cs
out
cmp
imul
or
pushw
fistp
xor
push
in
sbb
cs
lds
xchg
jle
out
dec
xor
pop
std
add
fidivr
adc
loop
int
xchg
cmp
xor
(bad)
ss
jnp
cmp
sub
mov
xor
adc
cs
adc
sub
push
clc
(bad)
mov
cmps
in
or
jmp
lods
adc
retf
comiss
add
aaa
xor
or
icebp
scas
dec
pop
push
cs
push
sbb
std
pop
popf
ins
cs
sbb
xchg
cdq
cs
addr16
inc
xor
mov
xchg
mov
pop
dec
sub
call
cmp
jmp
sub
jge
xor
ds
xchg
mov
mov
cs
push
pop
dec
(bad)
leave
fdiv
call
push
into
loopne
loope
test
aam
xchg
pusha
imul
add
or
sbb
xor
cmp
cvtps2pi
jl
cs
shl
push
jns
test
and
add
inc
cmp
test
pop
push
mov
cld
mov
pop
adc
enter
ficom
mov
pop
lods
imul
cs
aad
adc
in
sahf
push
push
and
xchg
cs
xchg
cld
push
and
add
pop
aad
mov
fprem1
lods
cs
dec
mov
dec
mov
xlat
rdmsr
cmp
stos
cli
mov
addr16
xchg
shr
and
aas
data16
shr
adc
sub
and
ror
dec
mov
in
aaa
(bad)
es
add
movs
adc
mov
cs
es
add
cli
mov
mov
xor
pop
out
push
inc
adc
js
xor
xchg
jg
xchg
sub
mov
mov
sub
or
push
arpl
xor
pop
mov
mov
pop
imul
adc
xor
sbb
aaa
jle
xor
sahf
xlat
xchg
retf
jecxz
sub
movs
mov
mov
add
and
mov
js
rcl
jmp
std
dec
pop
cs
adc
pop
les
mov
mov
sub
xlat
mov
(bad)
and
mov
dec
pop
xchg
and
jo
movs
xchg
stos
or
xor
ins
cld
dec
mov
push
pushf
leave
out
xchg
das
dec
test
jmp
pop
cmp
push
add
inc
cmp
push
cwde
adc
push
jbe
leave
add
lock
imul
add
mov
push
stc
and
xor
sar
scas
js
lds
sbb
neg
out
sub
jecxz
aam
sahf
jae
in
add
adc
add
lahf
mov
xor
sub
or
xor
add
shl
jnp
xlat
pop
lahf
and
cmp
ret
mov
loope
xchg
stos
pop
loope
or
sub
ret
sbb
out
cwde
rcl
and
dec
call
lods
jmp
pop
mov
adc
jbe
stos
in
leave
mov
ds
and
loope
not
or
aaa
jecxz
jb
push
fisttp
add
leave
out
or
mov
xchg
or
fnstenv
jecxz
cmp
mov
push
cmp
(bad)
sbb
xor
icebp
fidivr
cmps
aad
fistp
arpl
adc
mov
pushf
aam
out
repz
sbb
jne
pop
ds
(bad)
lahf
(bad)
hlt
cwde
shr
jle
lods
paddq
ret
data16
stos
pop
outs
nop
in
adc
scas
mov
int3
pop
cmp
sub
cmovo
retf
xchg
loope
xor
test
aam
inc
shr
(bad)
xchg
stos
sub
jl
loop
sub
xor
repz
cs
movs
xchg
or
(bad)
mov
fdiv
icebp
out
leave
pop
hlt
scas
clc
sub
movs
mov
adc
jmp
mov
in
adc
(bad)
xchg
xlat
jmp
add
inc
cs
mov
jle
rcl
cs
sbb
cli
mov
call
mov
mov
mov
xor
xchg
push
scas
arpl
scas
into
(bad)
lock
xchg
or
pop
retf
mov
scas
mov
sub
mov
mov
fs
or
push
aaa
(bad)
outs
mov
loope
mov
leave
cs
pop
adc
shl
dec
cs
cli
ud2
hlt
dec
pusha
xor
or
pop
inc
into
push
test
nop
jecxz
outs
les
mov
cs
ret
push
mov
inc
push
jge
je
fs
jae
lock
shl
outs
aad
(bad)
shr
xor
mov
cs
cmp
dec
cs
jne
outs
aam
cmps
mov
push
push
xor
into
pop
and
push
sbb
pop
cmps
retf
push
stos
cmp
test
pop
test
fistp
dec
aam
adc
ds
nop
xchg
mov
call
hlt
sub
xchg
shl
mov
cwde
jns
aam
and
outs
adc
adc
in
cs
xlat
or
movs
cmc
mov
arpl
rcl
(bad)
aam
add
add
lods
mov
pop
test
fistp
add
xchg
ins
mov
(bad)
fild
std
xor
xor
adc
pop
mov
and
retf
outs
mov
rcl
sbb
test
jbe
call
cmp
jge
iret
xor
nop
stc
push
scas
pushf
and
pop
int3
xchg
ret
mov
and
ret
cmc
call
into
stos
sub
cs
lock
or
shl
push
leave
mov
rcr
loopne
xor
cdq
scas
rcl
adc
cs
es
xor
cs
clc
enter
pop
cs
rcr
mov
inc
mov
push
das
mov
cs
in
(bad)
shr
mov
push
loopne
daa
ins
pop
push
and
mov
mov
xor
xor
sti
shl
or
jns
jmp
xchg
dec
mov
scas
or
mov
cld
sti
out
fidivr
fstp
dec
adc
jae
cs
mov
pop
push
dec
sbb
xchg
(bad)
int3
scas
cs
into
mov
add
xchg
imul
(bad)
mov
mov
add
mov
sub
fisubr
mov
xor
dec
stc
in
icebp
sahf
pop
jmp
out
push
and
or
shl
mov
(bad)
pop
adc
and
adc
aas
xor
sbb
cli
or
out
fisttp
and
(bad)
inc
add
dec
inc
jge
leave
xchg
fcomp
cdq
sub
xor
jmp
inc
push
sbb
stc
into
mov
pop
sub
mov
xor
int
retf
mov
call
dec
pop
xchg
push
lahf
arpl
xchg
scas
and
jl
imul
dec
or
shl
cs
mov
movs
and
mov
pop
mov
cwde
cs
mov
dec
pop
packssdw
sbb
mov
in
jle
fwait
retf
shr
pusha
xor
imul
and
pop
mov
outs
popf
pop
out
loope
or
test
hlt
fs
ret
or
and
inc
cs
in
add
call
mov
(bad)
sar
mov
dec
jne
cs
mov
cwde
repz
xchg
(bad)
scas
ret
pop
daa
adc
push
push
dec
dec
mov
or
movs
(bad)
stc
xor
loop
daa
sub
xchg
sub
nop
xchg
call
mov
mov
xor
cmp
mov
or
test
icebp
mov
mov
stos
dec
lahf
icebp
mov
cs
fstp
ss
gs
or
xchg
add
clc
cmp
cmp
pusha
popf
inc
retf
pop
shl
and
retf
outs
jl
xor
xchg
out
xchg
cs
mov
cmp
xchg
push
fwait
test
cs
xor
adc
jb
in
enter
icebp
jno
and
mov
push
je
adc
scas
shr
inc
adc
popa
test
and
pop
push
jb
ss
adc
jnp
clc
cs
aad
popa
movs
popf
xor
sbb
dec
cmp
dec
cs
fxam
popa
jmp
cmp
cs
dec
mov
fmul
nop
add
fldenv
call
pop
mov
test
das
aas
nop
call
ficomp
push
pop
cs
push
popa
cmps
cmp
sbb
xchg
or
bound
mov
or
iret
cmp
adc
mov
lods
cmps
and
mov
(bad)
imul
mov
outs
mov
test
test
ficomp
xor
and
sub
add
test
jecxz
jo
dec
arpl
inc
ficomp
cs
out
bound
dec
mov
test
xor
xchg
mov
mov
bound
push
jbe
aaa
cmp
push
xchg
inc
ret
sbb
or
and
dec
sahf
ds
ret
inc
mov
and
adc
fld
xchg
pop
test
dec
or
ror
ins
pop
sbb
ds
jae
pop
mov
xor
add
cs
mov
push
inc
aas
jo
pop
adc
js
enter
mov
into
(bad)
xchg
cs
out
mov
setb
sub
fdiv
popf
popf
dec
fadd
cmp
and
add
sbb
pop
xchg
out
dec
mov
dec
imul
push
nop
add
hlt
loope
sub
xchg
push
les
or
and
push
mov
xor
xor
jno
dec
mov
daa
xor
push
rol
pop
dec
iret
scas
fisub
pop
add
cs
push
adc
sbb
enter
mov
cs
add
(bad)
pop
add
out
movs
mov
lods
cs
fstp
imul
aas
mov
(bad)
mov
push
scas
xchg
loopne
leave
popf
cmp
scas
xchg
pop
ficom
push
(bad)
cmp
push
fwait
xor
sub
cmc
lock
jp
mov
xor
cs
lock
(bad)
not
mov
and
or
mov
imul
cmp
(bad)
or
cs
ins
sub
mov
das
daa
rcl
jge
out
mov
cmc
pop
inc
js
or
cs
bound
mov
dec
push
xor
cs
movs
test
pop
pop
mov
fsubr
sar
mov
pop
xor
leave
add
mov
push
iret
daa
ss
mov
lods
cmp
and
jl
jbe
jle
shl
sub
sub
aaa
stc
call
pop
lock
mov
add
dec
out
cmps
inc
test
sbb
mov
jl
push
test
mov
xor
clc
mov
jmp
lods
movs
call
push
xlat
jb
jae
pop
dec
pop
nop
(bad)
int3
pop
sub
fadd
xchg
scas
sar
pop
add
leave
outs
lods
jae
cmps
xchg
aas
adc
xchg
test
jge
ss
cli
jle
mov
fisubr
xlat
data16
xchg
pop
xchg
cs
stc
cmps
adc
scas
into
inc
in
cs
mov
xchg
out
push
push
add
add
push
dec
jns
or
xor
pop
adc
and
adc
jmp
loopne
or
idiv
es
movs
lods
dec
(bad)
dec
pop
mov
mov
jne
fprem1
adc
mov
out
loopne
movs
popf
mov
jle
xor
lahf
out
fstp
xchg
fsubp
fs
movs
lock
test
pop
addr16
aaa
add
push
xor
clc
pushf
loope
daa
jle
mov
xchg
jmp
lods
or
sub
jp
idiv
or
outs
retf
mov
mov
mov
stos
mov
sahf
xor
push
sbb
and
xchg
cs
aas
mov
fdivr
dec
int3
rcl
fs
or
arpl
scas
xchg
and
and
cs
aas
addr16
cwde
clc
pop
cmps
mulps
sbb
inc
sti
sub
(bad)
sub
cs
in
popf
test
push
pop
xor
repz
add
das
sub
cmp
xor
xlat
ret
outs
out
mov
inc
aam
cwde
xor
repnz
jge
dec
cs
sub
sub
(bad)
out
pop
aaa
xchg
jmp
call
pop
mov
jo
cs
pop
inc
(bad)
and
addr16
cs
push
(bad)
cdq
aad
fwait
div
sar
and
aas
cs
cmp
dec
push
push
add
lds
dec
sbb
out
mov
jns
(bad)
sbb
loope
sbb
jge
cdq
cs
sbb
cmp
sbb
scas
pop
outs
add
pop
xchg
out
pop
cs
cld
in
pushf
das
shl
mov
outs
mov
out
cs
cmp
xor
test
cmp
js
aaa
xor
dec
jecxz
in
lods
xchg
cmps
out
mov
xchg
stc
push
sub
rcr
and
mov
push
stos
lock
mov
xchg
clc
mov
lods
enter
enter
repnz
pop
sub
jmp
mov
xor
test
add
clc
shr
adc
sub
lods
cmps
jp
neg
fld
or
xor
addr16
xchg
sub
es
pop
jns
fcomip
mov
xor
in
jmp
cld
mov
loopne
and
sbb
xchg
(bad)
aad
scas
stc
out
jmp
cmp
in
mov
adc
fs
xor
pushf
sub
fstp
sbb
scas
pop
push
dec
xor
add
inc
sbb
sbb
inc
push
push
jo
lds
jmp
inc
fidivr
sub
fdivr
mov
xor
dec
and
push
xor
add
xlat
(bad)
adc
(bad)
mov
and
cs
or
add
gs
and
push
sub
shl
and
jb
popa
or
mov
xor
dec
push
out
(bad)
fidiv
cs
int
fcom
std
clts
sar
or
and
inc
adc
gs
mov
mov
sub
cmp
sub
add
mov
pop
or
mov
cs
ss
mov
retf
rol
add
adc
mov
dec
sub
xchg
mov
cmp
aaa
cmps
sbb
add
retf
movq
ss
push
sub
hlt
pop
add
xlat
popf
test
xor
in
push
inc
out
xor
jg
pop
das
xlat
mov
pop
(bad)
(bad)
shr
test
lahf
xchg
push
ficomp
xor
not
(bad)
push
arpl
mov
or
iret
sbb
pop
rcr
xlat
out
mov
jno
data16
xor
sbb
mov
cs
outs
or
sti
xlat
mov
enter
cs
sbb
inc
sbb
jno
mov
and
scas
sub
inc
or
sub
fnclex
cs
xchg
sub
enter
fst
(bad)
mov
xchg
mov
push
cmp
push
mov
pop
stos
shl
scas
ins
scas
xor
jbe
xor
bound
loop
cs
or
rcl
cs
dec
inc
imul
nop
ret
daa
mov
mov
push
jnp
inc
popf
pop
popa
scas
stos
mov
movlps
dec
(bad)
aas
ds
out
jbe
dec
mov
and
cmps
mov
jg
scas
aad
jmp
or
cmps
out
(bad)
pop
and
movs
push
sub
scas
iret
loopne
push
sahf
test
mov
lds
scas
popf
cmp
enter
jp
ret
cs
test
push
and
lea
cmps
mov
dec
mov
call
test
push
shr
xchg
dec
or
cs
sub
outs
enter
jp
icebp
mov
adc
push
jo
ins
mov
out
sbb
fwait
or
or
mov
clc
xchg
scas
cmps
mov
pop
sar
add
cdq
int
xchg
cs
sub
and
add
mov
and
push
add
(bad)
push
adc
mov
cs
pop
push
sbb
xchg
lods
lock
lahf
jno
into
dec
mov
xchg
sub
fcomp
mov
into
(bad)
sbb
add
das
jecxz
xlat
inc
cs
aad
mov
or
adc
repnz
push
dec
add
pop
xlat
xor
xor
sahf
js
mov
cs
push
cmp
cs
popf
cli
out
sbb
out
pop
sbb
adc
outs
and
jle
sub
adc
(bad)
dec
xor
mov
cld
xlat
cs
cmp
sbb
push
push
adc
or
leave
nop
inc
jge
ds
aas
xor
shl
repz
fs
mov
arpl
or
(bad)
inc
stos
add
scas
(bad)
aam
pop
xor
cwde
push
mov
outs
pop
fmul
pop
push
arpl
ret
lods
pop
pop
repnz
inc
scas
xchg
mov
push
cmps
lods
(bad)
cmc
mov
leave
call
mov
sbb
cwde
gs
xor
out
inc
jge
cmp
mov
outs
and
leave
sbb
jg
inc
add
cmps
dec
jb
test
xor
pop
leave
lea
pop
inc
and
leave
pop
jmp
dec
sahf
mov
xchg
and
adc
jmp
push
aaa
leave
iret
addr16
xchg
mov
(bad)
mov
mov
(bad)
mov
call
rcl
jo
xchg
or
and
push
mov
push
sbb
jne
in
cmps
jnp
sbb
pop
cdq
or
in
test
xchg
sbb
iret
retf
leave
xchg
dec
outs
push
nop
and
pop
xor
ds
jo
scas
repnz
sub
ret
mov
push
or
jp
test
inc
pop
cmp
movs
xor
pop
imul
pop
push
jmp
stos
mov
sahf
xor
jg
xor
imul
or
inc
lods
loope
cmp
xor
push
stos
cmp
jb
out
jl
jmp
mov
xchg
jl
push
das
retf
hlt
fucomip
mov
inc
xchg
push
inc
lahf
push
mov
inc
call
adc
pop
dec
es
movs
cmps
push
push
push
leave
pop
add
popf
aas
inc
add
test
(bad)
scas
mov
sub
dec
lds
test
ins
iret
or
mov
jno
or
iret
xor
ja
adc
push
mov
mov
rcr
call
mov
and
mov
mov
dec
rcl
jecxz
sahf
cs
add
iret
cwde
(bad)
mov
hlt
mov
loop
imul
(bad)
push
test
popa
cs
out
imul
mov
xchg
adc
bound
(bad)
xor
lods
add
add
ds
dec
or
push
popa
cs
(bad)
popf
aas
and
mov
jno
xor
mov
fmul
test
mov
dec
loopne
mov
arpl
mov
push
or
sbb
psrlq
dec
pop
pop
(bad)
and
sub
inc
pop
cmp
jns
pop
mov
xor
iret
fild
shl
test
or
mov
xor
movs
scas
add
sub
lahf
sub
shl
movs
hlt
pop
push
and
imul
dec
adc
fsubr
pop
mov
xchg
(bad)
sbb
imul
xor
mov
sub
sbb
cmc
outs
cli
jle
call
mov
(bad)
daa
dec
leave
dec
inc
js
mov
push
je
cs
mov
push
pop
cs
bound
xchg
mov
aam
adc
adc
movs
dec
ret
(bad)
outs
sahf
dec
enter
and
fld
fnstsw
add
fistp
cdq
das
cs
jmp
sub
fild
xor
or
xor
scas
in
xchg
pushf
imul
sar
enter
jmp
test
sbb
clc
fidivr
mov
ret
cs
loope
(bad)
std
xor
outs
into
mov
aas
rcr
and
add
test
outs
dec
imul
fsub
sub
into
das
call
mov
test
(bad)
sbb
and
jno
or
cmps
jb
cs
mov
pop
pop
xor
adc
leave
fidivr
xor
push
scas
adc
sub
mov
(bad)
shl
(bad)
adc
cmp
xchg
sub
xor
cmp
mov
jne
jmp
xcrypt-ofb
cmps
outs
xor
and
or
cs
mov
or
mov
stos
in
push
clc
shl
pop
popf
adc
retf
adc
mov
inc
xor
sbb
pusha
adc
cli
call
test
jmp
push
adc
pop
fcmovne
(bad)
mov
mov
push
mov
(bad)
cs
popa
fst
shr
pop
daa
sbb
mov
fldcw
cs
or
jmp
in
jle
push
arpl
or
jge
jns
or
icebp
adc
inc
int3
jle
add
aam
(bad)
(bad)
sbb
faddp
(bad)
sub
mov
sub
dec
cmp
cmp
jmp
adc
xchg
mov
and
xchg
in
mov
push
gs
sub
xor
imul
and
int
mov
xor
sbb
nop
fcom
xor
bound
or
push
lods
in
xchg
loopne
aad
test
sub
js
mov
jmp
fisubr
scas
cs
mul
and
out
sub
call
push
xchg
loopne
add
pop
das
dec
scas
xor
adc
dec
sti
popf
(bad)
iret
cdq
outs
add
retf
ror
xchg
sub
lea
repnz
xchg
loopne
cs
jno
int3
xor
adc
icebp
ins
ret
jle
in
xor
ficom
inc
pop
movs
push
adc
push
cmc
stos
xchg
cs
pop
mov
mov
int
pop
pop
loope
sbb
and
movs
out
sti
test
aaa
ins
bound
shr
fs
sbb
sti
ss
call
aas
adc
pop
and
mov
jle
sbb
sub
xchg
fild
cmps
inc
mov
out
cs
mov
add
pop
xchg
dec
add
pop
out
and
outs
push
fistp
lock
adc
cs
repz
or
xor
int3
out
sbb
fisubr
mov
aam
adc
xchg
dec
mov
push
fisub
shl
call
xor
ins
add
xor
aaa
shl
sub
shl
mov
or
(bad)
xchg
jo
cs
fcom
sbb
sub
call
sbb
sub
and
xor
out
mov
add
adc
(bad)
retf
aam
adc
push
aad
jne
shl
mov
les
dec
(bad)
adc
leave
and
lock
je
retf
cmp
sub
es
xchg
dec
jp
push
fdivr
and
pop
cmp
mov
rcr
sbb
sub
in
(bad)
cmp
or
sbb
cmp
mov
cs
add
shr
jp
or
inc
jecxz
cs
jbe
jmp
jcxz
out
mov
mov
shl
fs
out
xchg
daa
mov
(bad)
sbb
pop
and
pop
and
fisub
jl
dec
or
add
sub
clc
out
pop
fidivr
and
jne
mov
add
sub
bound
scas
dec
fldcw
mul
loopne
adc
push
outs
and
pop
adc
icebp
cs
(bad)
loope
scas
pop
aas
jmp
cs
fsubr
movs
xchg
pop
fwait
and
sbb
mov
pop
mov
push
aas
outs
lahf
push
mov
out
pop
push
sbb
or
xor
mov
(bad)
pop
dec
bound
xor
inc
dec
push
out
fnstcw
mov
jl
push
sar
xchg
xor
mov
fadd
ds
mov
js
cs
add
xor
hlt
outs
pop
adc
push
(bad)
(bad)
imul
pop
inc
cs
xchg
push
fmul
out
push
call
adc
pusha
sub
fs
lea
push
fld
shr
mov
popa
mov
ins
pushf
mov
mov
ins
xor
xadd
ret
dec
xchg
cmp
jb
jmp
cmps
fnstenv
mov
push
ror
and
mov
xchg
jecxz
add
faddp
pop
cs
mov
xchg
outs
cs
in
call
and
push
out
out
xchg
and
cmp
loope
(bad)
fdiv
push
fs
sti
push
cs
dec
cmp
inc
pop
cs
mov
xchg
adc
xor
push
(bad)
cs
jmp
and
mov
dec
jle
pop
bound
cmp
shl
retf
pop
xor
arpl
xchg
sbb
out
fldpi
dec
bound
push
cs
std
loope
pop
or
dec
add
scas
xchg
pusha
pop
push
inc
cmp
sar
or
lods
and
fcmovb
dec
sub
arpl
push
cmp
cs
loopne
ud1
dec
add
ret
push
cmps
hlt
xchg
xchg
out
adc
into
cs
push
leave
je
mov
sub
cmp
inc
popf
xlat
stos
cdq
sbb
fldcw
mov
jmp
xchg
sub
xor
mov
addr16
or
adc
fs
ficom
ret
arpl
xchg
xor
push
data16
imul
enter
mov
test
ins
inc
fsub
sub
adc
lahf
jecxz
mov
xchg
pop
sbb
fstp
inc
dec
mov
dec
pop
mov
out
lahf
push
dec
cmp
pushf
sub
jmp
mov
xchg
pop
sub
fcmove
mov
mov
mov
inc
imul
dec
call
inc
mov
or
imul
jmp
(bad)
(bad)
ds
mov
sub
xchg
imul
adc
mov
cs
rol
(bad)
jbe
fs
jnp
mov
int
push
xor
ja
fld
les
mov
sub
mov
add
pop
pop
inc
jl
pop
pushf
(bad)
inc
xchg
ins
aaa
sbb
pop
adc
outs
pop
mov
out
inc
in
mov
into
(bad)
xchg
cmps
push
cmc
adc
cs
and
cmp
add
xlat
sub
or
and
pop
adc
cmp
cs
fdivp
lock
and
aas
fldcw
daa
lds
test
(bad)
dec
inc
sub
sbb
cs
aam
push
imul
jle
cmp
test
pushf
lahf
push
pop
ret
fwait
or
aas
add
scas
dec
add
cmp
cs
mov
loop
fnstsw
xor
mov
mov
lock
gs
cs
xchg
push
je
stos
sub
scas
and
in
shl
and
push
mov
scas
mov
cs
push
gs
movs
xchg
aam
cs
inc
cmp
data16
and
xchg
cmp
or
(bad)
in
push
lds
rol
add
jmp
push
aas
out
inc
hlt
pop
into
sub
cs
cmps
pop
ins
mov
out
xor
pop
jecxz
fldenv
aam
cs
scas
inc
into
lods
loop
add
out
sbb
push
xor
aad
mov
cs
mov
fcmovu
sub
cli
sub
outs
out
popa
sub
cmp
mov
pusha
sar
lock
out
imul
jp
lea
pop
xchg
cs
adc
xor
aas
jmp
jne
shr
xor
jb
adc
pop
fnsetpm(287
retf
pop
addr16
out
fst
cs
jnp
cmp
cs
xor
cli
inc
int
cs
stos
fldcw
outs
shl
scas
mov
enter
mul
push
mov
cs
imul
cmp
jo
or
mov
sbb
and
xor
sub
mov
mov
sbb
fs
push
push
das
xlat
leave
(bad)
aam
imul
add
xor
mov
imul
pop
add
fnstenv
cs
dec
and
adc
loop
icebp
jge
inc
int3
dec
cs
ficomp
ss
cs
sbb
pop
std
jecxz
imul
(bad)
repnz
push
mov
stos
mov
pusha
dec
cmp
inc
mov
jp
sub
jge
push
ds
sahf
pop
mov
mov
pop
fldcw
mov
or
fs
xor
pop
repnz
xchg
jne
jno
pop
aad
cs
inc
fsub
outs
aad
scas
ror
mov
daa
aam
push
dec
rol
arpl
data16
rol
xchg
cld
retf
pop
push
cdq
stos
rep
jne
(bad)
sub
test
fadd
adc
or
cdq
test
ret
retf
and
add
jns
outs
sub
cs
mov
outs
and
in
mov
sbb
test
cdq
sub
bound
add
inc
jp
mov
xor
aaa
jae
cwde
pop
out
pop
or
cli
aaa
push
test
sub
push
and
shl
pop
test
std
cmps
cmc
and
pop
jne
dec
inc
and
inc
test
mov
dec
mov
jl
imul
inc
stos
int3
scas
bound
ds
push
adc
push
je
push
out
jnp
imul
xor
xor
ins
mov
leave
adc
xor
add
addr16
(bad)
jmp
int3
in
js
sar
dec
cmp
and
mov
jno
ret
and
mov
mov
mov
cmps
and
add
mov
mov
sub
adc
xchg
mov
or
or
sbb
cmp
mov
pop
dec
(bad)
mov
xor
(bad)
shl
cs
mov
std
cs
xchg
xlat
repnz
push
clc
xchg
repz
cdq
jmp
jle
sub
in
mov
add
out
push
cmps
loopne
sub
pop
(bad)
fmul
and
cs
or
adc
mov
cld
icebp
loopne
stc
or
pusha
xlat
add
pop
and
pop
cs
cmp
repnz
push
adc
and
pop
inc
push
or
(bad)
int
pop
cmp
push
shr
mov
jg
out
in
mov
mov
cmp
repz
adc
ins
test
int
addr16
add
fdiv
fild
imul
cmp
lods
cs
lds
push
sbb
mov
inc
or
icebp
xor
hlt
dec
xchg
xchg
rol
rol
inc
add
call
fwait
pop
mov
arpl
out
or
aaa
jmp
jg
pop
cld
jb
je
sub
cmc
repnz
jp
in
ret
div
push
push
call
mov
test
fidivr
push
mov
mov
add
sub
aas
mov
outs
int
out
cs
lea
inc
dec
shr
push
mov
popa
in
cs
mov
aam
mov
inc
xor
mov
(bad)
dec
(bad)
xchg
fisub
aas
mov
mov
clc
loop
and
fld
test
add
cs
outs
and
pop
add
cmp
pop
je
cs
inc
movs
popa
and
mov
xchg
jecxz
(bad)
mov
mov
pop
mov
or
sbb
xor
pop
scas
sub
ucomiss
movs
cmp
jl
ja
xlat
sbb
mov
stos
and
xor
sbb
bound
mov
pop
ficomp
xchg
fsub
arpl
pop
sub
neg
sub
lahf
repz
mov
push
fwait
imul
cs
ror
mov
mov
cwde
shr
add
lss
jo
and
call
mov
push
jmp
sub
sbb
fcom
cs
mov
clc
retf
xchg
ja
cs
(bad)
cmp
xor
dec
push
sbb
cs
outs
or
leave
out
mov
pop
mov
push
jecxz
in
jmp
nop
jmp
sub
dec
out
aas
gs
sti
push
xchg
repnz
movs
dec
and
jns
push
pop
scas
dec
jge
dec
aaa
cmps
shl
sbb
(bad)
jb
pop
leave
jb
add
push
je
mov
aaa
jo
pop
sar
ja
sbb
bound
repz
add
retf
out
xor
sbb
xlat
xor
into
push
out
or
mov
rol
nop
lods
inc
cmp
jae
popf
pop
push
scas
(bad)
and
jg
in
movs
cs
dec
inc
mov
jb
push
inc
mov
std
cmp
or
inc
outs
push
push
push
int
sub
cld
push
aaa
and
push
add
xor
inc
adc
es
lahf
jnp
pop
mov
shl
ret
add
rcl
push
ret
cs
push
out
jl
(bad)
stc
xor
int3
xor
add
cmp
xor
push
gs
(bad)
xor
fdiv
cmps
mov
repz
sub
mov
imul
ins
or
inc
cmp
fwait
jne
aas
sub
jae
add
adc
lods
enter
dec
mov
mov
cs
jno
jbe
push
xchg
sbb
daa
push
push
ins
jl
push
mov
scas
jo
sub
xor
dec
ss
shl
cs
sbb
aaa
int
js
bound
mov
sub
icebp
xlat
xchg
inc
ss
xchg
or
inc
mov
sbb
scas
rcr
jno
xchg
cs
mov
inc
add
xchg
lea
inc
inc
pop
daa
and
inc
mov
mov
inc
fisubr
div
fadd
cs
addr16
inc
cdq
imul
movs
push
inc
fisttp
cs
sub
outs
test
loop
and
xchg
add
sbb
daa
jmp
fstp
mul
cmp
dec
jecxz
cs
aam
xchg
gs
cs
lea
(bad)
cli
int
sbb
xor
and
es
xchg
call
fisttp
shl
mov
cld
mov
test
ror
cs
push
and
inc
aas
xchg
jb
push
adc
lods
cmp
adc
ins
add
loopne
std
xchg
push
jge
outs
jp
mov
cmp
jne
ss
out
ret
cmps
mov
and
ja
pop
mov
jns
pop
sbb
mov
sbb
and
push
(bad)
mov
jmp
daa
in
and
xchg
pop
fs
xor
xchg
pop
out
lahf
rol
jb
xor
scas
xchg
cdq
dec
mov
ds
cmp
mov
dec
nop
jp
push
repnz
loope
mov
cs
stos
cmc
and
add
icebp
bound
mov
inc
rcl
push
cwde
adc
fs
jns
aaa
or
xchg
cdq
xchg
xor
mov
fwait
jb
mov
iret
shl
daa
fsubr
xor
mov
xor
mov
pop
dec
mov
idiv
sbb
and
cdq
outs
push
js
ret
adc
les
not
sub
aas
scas
shl
lds
icebp
jno
xor
jns
loopne
pop
frstor
pop
mov
aam
cs
iret
xchg
mov
rcl
pop
mov
ins
lds
sub
lock
xlat
and
cs
mov
jge
xor
pop
sti
loop
xchg
movs
jmp
push
push
adc
adc
mov
movs
xchg
fwait
sar
mov
sub
int
cmps
ds
ins
popa
stos
jnp
xor
mov
into
jl
scas
add
push
push
mov
loope
out
inc
pop
jno
xor
dec
mov
rcl
xchg
shl
outs
scas
push
loope
leave
sbb
mov
push
fs
add
inc
pop
loopne
mov
pop
test
inc
mov
(bad)
and
test
shl
or
mov
aad
inc
dec
fdiv
inc
and
aad
js
xchg
pop
pop
cmps
pop
int
push
cmps
rol
dec
xor
xor
jp
shl
pop
aas
dec
dec
fdivr
das
cmp
inc
push
push
xor
sahf
xor
ror
inc
cwde
or
xchg
add
aas
test
movs
aam
sub
jmp
jne
jbe
das
dec
adc
cmc
add
mov
adc
lods
jp
xor
or
cmps
addr16
push
leave
stos
rcr
imul
sub
xor
push
call
xor
retf
cld
xor
mov
add
pushf
cmps
outs
mov
push
(bad)
adc
leave
loope
and
mov
call
leave
jbe
out
pop
push
dec
mov
test
xchg
fcom
imul
jmp
pop
imul
mov
(bad)
lea
mov
adc
adc
ror
xor
imul
sahf
jo
mov
ror
jg
inc
push
add
pop
les
cmps
leave
sub
mov
shr
enter
rcr
pop
xchg
jle
mov
or
repz
mov
(bad)
leave
mov
inc
test
repz
sub
xor
in
leave
das
or
or
test
cmps
push
pop
fdiv
nop
xchg
out
pop
push
sub
cdq
pop
mov
gs
lods
test
xchg
jnp
fdivr
das
ds
lods
adc
cwde
cmp
imul
arpl
std
stc
jmp
ins
sahf
sar
test
jo
push
hlt
rep
icebp
fimul
movs
ss
inc
retf
int3
xchg
loope
out
popf
cs
ins
cs
clc
mov
sar
xor
cmp
cwde
sbb
jle
rol
(bad)
mov
(bad)
or
outs
mov
lods
mov
pop
aad
fidivr
inc
jmp
dec
xchg
pop
aam
lods
dec
js
push
mov
mov
mov
mov
int
es
ins
inc
push
outs
call
cmp
or
sti
sbb
or
inc
ins
sub
ins
sar
xor
inc
(bad)
loop
fdiv
and
aad
(bad)
mov
xlat
shl
ins
cmp
mov
and
mov
ins
out
mov
ja
outs
pop
movs
sahf
sub
das
das
rcl
push
into
out
cmp
pop
xchg
pop
bound
dec
push
inc
scas
sub
adc
scas
mov
pop
iret
xchg
test
daa
push
mov
pop
mov
add
loope
pop
sbb
leave
inc
jg
adc
push
inc
(bad)
sar
retf
xor
test
mov
xchg
or
pop
jle
ins
leave
pop
push
lds
loope
cli
mov
add
out
xchg
fiadd
(bad)
fisttp
or
test
iret
push
xchg
mov
pop
mov
hlt
nop
jne
je
pause
aaa
add
inc
sub
or
jecxz
sbb
and
push
icebp
neg
mov
inc
jl
or
cmp
cmp
data16
ins
imul
mov
dec
sti
out
div
fwait
icebp
lahf
ins
jge
in
aas
mov
sti
js
cdq
mov
jns
out
jg
cwde
loope
scas
sti
icebp
loope
jcxz
(bad)
cmp
or
sub
add
cdq
push
movs
pop
cmps
scas
shl
sub
dec
(bad)
jmp
retf
sbb
xchg
adc
movs
aam
ds
es
xlat
or
pop
and
dec
sbb
rol
pop
test
jge
ror
bound
dec
loope
mov
pop
std
pop
lea
or
cmp
mov
loope
into
xor
pop
push
fsubr
or
into
add
adc
fst
jmp
out
ret
sub
inc
(bad)
cmc
xchg
inc
adc
das
mov
push
mov
popf
and
int
xchg
jp
jle
jge
jne
mov
test
out
cmc
shl
cdq
and
inc
data16
xor
and
stos
in
(bad)
jo
sbb
sbb
push
and
and
enter
adc
dec
push
out
(bad)
es
sub
jmp
jle
sbb
inc
xchg
xchg
cmp
out
push
stos
outs
push
sub
leave
scas
stos
dec
mov
out
pop
push
ret
lods
inc
sub
outs
mov
scas
cmp
mov
xor
pop
xor
int3
cs
push
rcl
je
movs
daa
popf
mov
into
inc
(bad)
bnd
push
ss
xchg
xchg
retf
xor
shl
xor
fsubr
(bad)
aas
mov
cmc
ins
sbb
idiv
outs
pop
dec
add
inc
fstp
xchg
enter
fmul
jmp
cmps
test
enter
xchg
sub
aam
inc
fisttp
mov
(bad)
jmp
ret
shl
pop
mov
in
repz
pop
neg
and
repnz
in
addr16
dec
mov
shl
repz
sub
or
jp
pusha
ins
xchg
shr
mov
lods
mov
inc
pusha
sti
pop
or
pop
jno
jmp
out
dec
cmp
outs
leave
rcl
jnp
in
ss
and
push
sub
mov
add
cwde
mov
pop
gs
mov
xor
not
mov
pop
rcr
mov
mov
sbb
inc
scas
xchg
mov
scas
cs
xchg
in
out
fprem1
sbb
ins
(bad)
mov
pop
daa
jb
add
das
sahf
test
adc
sub
or
inc
ss
jl
dec
add
adc
mov
or
and
ins
cmp
push
lods
mov
call
dec
jp
push
cs
mov
lock
cs
outs
xchg
int3
cs
inc
push
pop
cs
(bad)
(bad)
je
jo
pop
ror
jle
jb
enter
or
or
jnp
push
and
or
xchg
sub
xor
stc
outs
xchg
mov
iret
scas
add
cmp
movs
lahf
out
xor
or
mov
cs
dec
xor
jno
je
adc
jns
loop
mov
and
mov
rcr
push
loope
xor
mov
(bad)
loopne
mov
mov
test
clc
call
gs
(bad)
(bad)
or
repz
cmps
cs
movs
mov
mov
scas
jno
dec
imul
adc
pop
mul
jecxz
jge
sbb
xor
sub
aaa
int3
retf
dec
mov
pop
and
jl
cli
mov
lock
inc
cs
cdq
repnz
xchg
cs
xor
jg
call
leave
sub
or
test
(bad)
dec
stos
push
add
test
cs
cmp
pop
xchg
adc
and
push
push
outs
sbb
and
adc
aas
jbe
stos
mov
xchg
popf
sub
lea
ret
shr
stos
cs
pop
mov
lods
add
xchg
bound
in
int3
adc
jns
fldcw
(bad)
leave
(bad)
scas
ss
ficomp
fsub
push
adc
sahf
cmp
inc
sbb
cmps
sub
loop
inc
pop
leave
cs
sti
pusha
sub
sbb
cs
std
xor
mov
xchg
retf
fsub
test
jne
jbe
sub
test
sub
scas
jmp
shr
cs
adc
sbb
cs
in
sti
in
add
daa
je
mov
mov
push
jecxz
push
ins
jp
imul
jge
mov
inc
push
xchg
xchg
mov
push
xor
jne
jno
ret
inc
inc
imul
mov
inc
stos
dec
mov
xchg
xor
cs
bound
mov
add
jbe
js
sub
fadd
repz
dec
inc
dec
or
fcom
jb
ror
push
shl
and
in
rcl
imul
das
mov
cmc
mov
lods
jnp
ret
std
add
xor
test
int
xor
mov
jbe
jnp
push
pop
dec
es
imul
or
adc
shl
mov
xlat
cs
sub
stos
push
mov
clc
lods
test
into
(bad)
jmp
lods
pop
mov
scas
in
clc
push
fisub
dec
push
int3
or
es
or
push
sbb
mov
mov
ins
add
mov
loopne
sbb
sbb
adc
in
pop
cs
shl
cwde
int3
inc
aad
push
add
int
mov
icebp
cs
jmp
in
sub
lds
inc
out
jg
(bad)
mov
xor
cmp
cvttps2pi
loop
sub
repz
inc
dec
aas
sbb
adc
out
mov
push
std
push
pushf
jno
in
xlat
push
in
mov
ds
mov
cs
jnp
push
fwait
adc
pop
add
cmc
mov
sub
add
jne
cs
(bad)
push
in
or
and
and
inc
daa
shl
sub
jg
fdivr
outs
add
cwde
fucom
sti
rcr
stos
dec
outs
adc
das
repz
pop
sub
fbld
shr
lods
mov
push
(bad)
sub
ret
xor
or
ret
(bad)
imul
rcl
dec
std
scas
imul
dec
xor
and
inc
push
jmp
xor
dec
fild
test
loope
leave
inc
(bad)
(bad)
xchg
cs
inc
retf
pop
pushf
adc
mov
xchg
inc
sub
iret
mov
std
in
pushf
sub
fld
rol
out
in
mov
jmp
xor
int
xor
jmp
cld
cs
or
push
adc
cmp
ja
or
retf
daa
jns
bound
jmp
mov
popf
mov
inc
jl
outs
sub
jae
in
mov
add
arpl
(bad)
push
pop
sbb
stos
xchg
adc
pop
nop
xchg
xchg
aaa
je
addr16
mov
fs
push
fld
shl
dec
cmp
xchg
push
cwde
arpl
scas
mov
pusha
sahf
cs
lds
clc
mov
mov
mov
jo
lock
mov
jl
test
(bad)
loopne
out
mov
jle
cmps
call
ja
out
jmp
mov
cwde
dec
ss
std
xor
mov
in
mov
mov
cmp
mov
mov
cld
push
(bad)
fdiv
out
push
cdq
xchg
jle
mov
test
scas
(bad)
xchg
daa
sub
in
aad
sub
adc
out
idiv
xchg
aam
xor
movs
out
cli
xor
and
pop
sub
ficom
shr
ret
jns
dec
xchg
hlt
cs
push
fist
mov
stc
fadd
xchg
sub
dec
scas
cmp
jns
setle
outs
mov
mov
imul
aam
or
jmp
sub
out
jno
push
scas
stc
pusha
enter
fdivp
mov
(bad)
push
in
jne
test
inc
in
mov
cs
and
mov
cs
xchg
fidivr
cs
ret
(bad)
cmp
xor
mov
xor
push
mov
mov
scas
jb
outs
retf
hlt
jns
in
mov
test
fsub
mov
pop
adc
(bad)
cmps
imul
mov
jl
fsubr
arpl
aad
dec
cmp
sub
fnstenv
int
jle
jnp
ja
mov
jns
int3
popa
xor
cmp
or
aam
push
add
or
les
mov
retf
dec
jle
mov
lea
sbb
mov
push
adc
or
mov
shl
cs
(bad)
or
jbe
mov
dec
push
stos
pop
pop
test
pop
add
inc
or
test
sub
or
cs
(bad)
int3
and
mov
cs
pop
mov
mov
scas
and
mov
cs
arpl
jle
add
mov
xor
out
dec
jp
mov
xchg
enter
popf
aad
mov
xchg
(bad)
jecxz
sbb
or
arpl
data16
scas
inc
inc
fisubr
enter
dec
inc
push
fdivr
aam
retf
cmp
jne
push
in
or
inc
push
aam
ins
push
push
jnp
js
(bad)
(bad)
push
pop
dec
inc
inc
bound
out
scas
imul
sub
push
mov
mov
inc
or
mov
cmp
sti
lods
xor
sbb
mov
sub
in
je
jge
sub
stos
mov
cmp
pushf
(bad)
dec
fistp
push
(bad)
push
xchg
(bad)
hlt
je
mov
clc
ja
cmps
loopne
mov
mov
fwait
test
cs
test
mov
bound
jp
inc
bound
(bad)
(bad)
jg
cmp
cs
push
in
mov
cs
cli
push
add
adc
je
cs
jo
xchg
push
cs
push
pushf
pop
ficomp
mov
scas
shl
sahf
jg
bswap
xor
daa
jge
sub
sbb
sub
fcom
add
das
cmp
cdq
inc
or
(bad)
sub
inc
retf
mov
or
jnp
mov
adc
call
ins
int3
cmp
pusha
mov
outs
cs
push
fcomp
pop
ret
test
mov
loop
retf
out
xor
popf
mov
in
dec
xor
test
out
les
mov
fs
sub
add
cs
push
ret
mov
out
xor
scas
icebp
cli
rcr
mov
sub
sahf
xchg
rcl
mov
aam
cmp
jne
cmp
jmp
sub
outs
mov
out
scas
scas
cmp
mov
dec
inc
push
lods
inc
and
clc
mov
or
popf
jmp
cmp
inc
sbb
leave
or
cli
outs
outs
mov
test
jnp
sub
sbb
leave
pop
mov
and
push
test
aad
retf
mov
dec
xchg
int
jno
int
sub
jb
mov
cli
bound
push
fs
shr
mov
js
loop
jno
ror
xchg
xor
test
lods
mov
cmp
gs
jns
jno
popa
out
mul
in
dec
jo
ror
and
rcl
sub
test
inc
push
pop
ret
dec
sbb
lds
out
rol
jb
ficomp
stc
(bad)
scas
shl
in
xchg
mov
lods
js
sub
movs
push
retf
add
jp
sbb
ins
pop
cs
(bad)
mov
rcr
jmp
call
xor
psubd
(bad)
pusha
cmc
inc
jbe
cs
fwait
mov
fist
sbb
and
dec
mov
pusha
repnz
(bad)
outs
mov
cmc
push
xor
jecxz
push
in
sub
jge
arpl
imul
jmp
mov
push
pop
imul
mov
out
retf
(bad)
lahf
mov
mov
cdq
push
imul
mov
pop
loopne
aas
cmp
bound
mov
cdq
mov
popf
fmul
pop
xlat
xabort
pop
cli
enter
mov
sub
ret
in
shr
xchg
pop
pop
push
int
mov
cwde
mov
jns
jecxz
sub
add
js
xor
push
or
jp
fidiv
sbb
add
dec
or
fld
and
mov
out
icebp
retf
dec
es
shl
xchg
aas
jno
fldcw
out
or
or
xlat
clc
or
clc
je
int3
jmp
or
sub
ror
mov
sub
aas
xchg
(bad)
out
call
call
aas
stos
fild
clc
sbb
cwde
scas
loope
push
icebp
out
inc
scas
fisttp
xor
icebp
cmp
(bad)
fabs
mov
test
test
sbb
paddusw
fisubr
push
cli
jle
adc
inc
jmp
js
sar
icebp
or
ss
jl
ds
data16
lock
xor
mov
mov
or
mov
push
push
jle
movs
mov
lods
push
outs
in
cmp
out
mov
outs
cmp
mov
test
test
je
out
and
xchg
or
(bad)
xor
inc
or
mov
je
int3
fidiv
jge
push
cwde
(bad)
cmps
stos
(bad)
mov
inc
push
dec
jae
retf
and
pop
sbb
xor
pop
or
and
in
push
lock
mov
jns
loope
mov
repz
test
sub
loop
mov
cli
pop
xor
leave
outs
push
pop
push
inc
and
push
pop
pop
fldenv
xchg
mov
rcr
nop
icebp
lods
jns
xchg
push
call
pusha
cmp
inc
add
jbe
leave
xor
ror
jb
lea
into
or
push
ins
cli
cdq
jg
cmp
push
jmp
mov
jg
mov
aam
in
or
addr16
repnz
loope
and
(bad)
pop
leave
cmps
xor
int3
jb
gs
pop
es
xor
or
dec
mov
jns
push
or
push
mov
cmp
xor
retf
xor
leave
ret
rol
shl
cmp
fistp
adc
(bad)
ret
icebp
add
jmp
xor
enter
fisttp
repz
mov
daa
sti
hlt
aas
(bad)
in
mov
cmp
sub
adc
sub
xchg
test
je
or
inc
hlt
mov
mov
fcmove
ds
xchg
push
sbb
pop
push
cmp
adc
loope
xchg
movs
jp
jmp
mov
adc
shr
jecxz
(bad)
sub
sbb
les
cwde
into
sub
mov
bound
mov
out
mov
jl
dec
mov
mov
mov
sub
mov
(bad)
(bad)
sahf
xchg
pop
es
cmp
mov
(bad)
hlt
push
xor
dec
mov
xchg
and
das
fdiv
cmp
les
call
push
mov
adc
sbb
add
xor
cmp
popf
adc
adc
loop
dec
sub
scas
pop
test
dec
fs
nop
jbe
ror
fcomp
popf
test
jo
in
lock
jb
mov
shl
dec
call
out
loope
mov
into
add
adc
jo
add
sub
sub
dec
and
dec
mov
icebp
sub
sahf
jo
xor
scas
pop
adc
xor
test
ins
sub
ins
(bad)
aad
jns
pop
scas
(bad)
nop
stos
cwde
xchg
mov
xchg
leave
lods
nop
fnstcw
inc
mov
popf
stos
jmp
mov
mov
ins
xor
cmp
mov
ins
jb
inc
push
jle
pop
push
jp
mov
inc
mov
mov
dec
and
and
push
test
jmp
fwait
leave
push
mov
xchg
sub
lds
ret
(bad)
cdq
outs
shr
and
daa
dec
icebp
(bad)
xor
mul
pop
jle
ss
and
or
sbb
cli
jae
sar
inc
pop
sub
dec
and
push
lock
add
test
dec
rcl
push
cld
mov
or
adc
call
add
popf
push
jne
les
and
inc
sub
das
mov
pop
cs
xchg
xor
xor
daa
push
push
bound
or
cmp
jno
adc
loopne
adc
test
dec
cs
out
dec
pop
outs
and
mov
scas
sbb
xchg
push
shl
es
mov
out
cmp
and
pusha
dec
aas
out
sbb
and
pop
sar
push
push
and
xchg
mov
mov
enter
into
xchg
sub
movsx
inc
adc
fidiv
repnz
sbb
pop
cs
lods
mov
xor
fnsave
mov
push
sbb
inc
mov
fisubr
rcr
or
or
mov
cmps
mov
cmp
sub
xor
cmp
loop
dec
add
xor
imul
mov
pop
outs
das
jbe
hlt
in
mov
pmaxsw
mov
xor
fwait
scas
cmp
je
movs
icebp
popa
xor
fnsetpm(287
mov
loope
and
lds
cs
mov
mov
or
inc
or
xchg
aam
dec
and
push
pushw
and
daa
pop
ficomp
daa
out
cwde
sahf
fcom
pop
aas
cmps
cld
add
test
addr16
mov
(bad)
ficomp
test
or
ins
xor
pop
pop
fcmovb
push
mov
mov
jg
sub
fild
scas
or
mov
add
cvtps2pd
outs
xor
scas
jmp
lods
sti
mov
rcl
xchg
mov
mov
(bad)
pop
mov
fisub
xchg
fild
movs
push
repnz
call
aas
test
xor
sbb
popf
inc
cs
cmp
dec
cs
sbb
xor
lahf
int3
xor
ds
ret
mov
lods
sub
imul
jmp
xor
cs
xchg
jecxz
cs
mov
out
xor
iret
ret
dec
in
sub
mov
retf
jmp
scas
mov
xchg
ins
pop
fisub
rol
lods
jge
call
dec
push
push
fidiv
outs
mov
scas
xor
cld
les
cs
and
jbe
xor
retf
mov
das
imul
mov
xlat
jno
sub
(bad)
sub
je
cs
sbb
xlat
clc
retf
pusha
dec
push
fsubr
add
fistp
or
pushf
cdq
sbb
call
bound
add
scas
push
ins
and
cs
jae
xor
call
and
mov
cmp
push
(bad)
outs
add
xlat
in
js
aad
aaa
pop
push
cmp
jge
out
push
popf
inc
(bad)
gs
mov
(bad)
mov
loop
cs
jle
out
inc
(bad)
fistp
sub
bound
sub
pop
mov
sbb
jle
ror
ret
cs
push
cmp
xchg
fwait
call
and
mov
mov
jne
xor
sub
push
out
pop
push
sbb
xor
icebp
(bad)
shl
scas
call
iret
stc
aam
lds
fs
or
outs
cs
sbb
jmp
stos
out
add
mov
jmp
je
jl
(bad)
in
leavew
mov
and
scas
and
jp
dec
fcomp
pop
leave
jae
lock
into
fild
mov
jmp
pop
xor
mov
push
fmul
and
leave
pop
out
loopne
jg
lahf
jno
fmul
dec
mov
lock
(bad)
dec
sub
cmp
ds
xchg
into
inc
out
push
push
not
arpl
rcr
inc
xor
fstp
add
shl
repnz
dec
es
push
push
fdivr
fmul
out
dec
mov
mov
add
retf
test
xchg
repnz
add
std
jo
sbb
xchg
pop
mov
sahf
and
push
xchg
mov
data16
enter
loope
out
imul
xchg
sahf
xlat
cmp
xchg
xor
dec
add
cs
mov
mov
test
daa
test
mov
jb
push
mov
jle
jmp
adc
cs
add
mov
sub
gs
cs
stc
or
inc
outs
add
mov
jg
sahf
cwde
dec
cs
jle
jmp
icebp
scas
xlat
push
mov
xchg
pop
push
fild
aaa
cmp
jmp
bound
lahf
(bad)
cli
ror
and
ss
pop
jbe
ret
sub
cmp
ja
and
dec
or
push
jbe
cmc
pop
cs
shl
inc
jo
mov
jns
mov
push
pop
scas
jg
or
ins
movntps
test
cmp
fsubr
xlat
xor
iret
sbb
xchg
or
sahf
and
xchg
pop
fisttp
mov
jle
mov
push
arpl
scas
inc
mov
xor
pop
cs
test
mov
ins
and
adc
dec
push
jmp
jo
push
xor
push
out
loop
cmp
leave
xor
dec
jne
mov
retf
lock
adc
leave
pop
loop
(bad)
cmps
jb
pop
pusha
imul
push
lods
xchg
pminsw
fidiv
sbb
or
je
js
xchg
cmps
inc
inc
xor
push
mov
movs
or
xchg
mov
loop
ja
test
sar
push
bound
movs
enter
mov
loop
add
adc
mov
icebp
fisttp
leave
loopne
cs
mov
pop
sub
xchg
push
jp
or
mov
push
fcom
jno
add
xchg
or
stos
add
mov
mov
or
in
jns
sub
enter
sbb
ret
add
std
out
push
loop
js
mov
dec
jle
sbb
dec
add
leave
jge
push
ja
xchg
mov
ss
repnz
test
inc
(bad)
iret
cld
faddp
jae
imul
and
fwait
aaa
add
int3
sub
lods
push
cli
ins
mov
aas
inc
jecxz
sub
mov
dec
push
ins
jo
xor
mov
fsubr
pop
fstp
loope
call
cs
ret
test
xor
outs
std
cdq
add
mov
(bad)
fild
and
loopne
idiv
dec
movs
mov
movs
aaa
xchg
or
mov
dec
cmp
int
rcr
cs
aas
daa
stc
or
repz
test
cs
add
(bad)
adc
dec
ins
iret
(bad)
inc
repz
mov
or
cmp
mov
into
addr16
or
stc
pop
and
pop
repz
aas
xchg
faddp
stos
sbb
cs
sti
mov
push
jecxz
(bad)
or
lahf
push
xchg
fidiv
call
push
push
sbb
scas
pop
(bad)
bnd
mul
enter
mov
and
jl
mov
les
adc
call
sbb
jmp
scas
in
and
lahf
cs
sbb
inc
mov
and
fiadd
cs
inc
es
add
mov
and
cmp
lahf
sbb
xor
adc
sbb
imul
loopne
out
xchg
cs
int3
mov
add
dec
leave
or
lahf
or
or
sbb
fdivr
fld
neg
cs
ins
(bad)
mov
int
lock
mov
adc
pop
sbb
in
fst
adc
nop
aam
rcl
es
rcl
jg
cs
pop
inc
and
xor
sahf
xchg
cld
mov
cs
push
out
inc
pop
add
cs
(bad)
xchg
xor
in
mov
mov
mov
sbb
xchg
adc
sbb
aas
lods
and
retf
movs
lock
scas
adc
ficomp
int3
push
pop
cmp
and
cmps
leave
(bad)
out
sub
shr
iret
inc
or
pop
daa
adc
scas
ret
jno
jnp
and
pop
mov
out
cs
dec
add
adc
daa
cmps
in
movs
inc
mov
ja
aaa
pop
dec
jnp
daa
jb
sub
pop
pop
scas
sbb
push
inc
push
ror
adc
test
scas
not
sbb
and
mov
mov
enter
shr
sub
mov
(bad)
push
adc
leave
popa
mov
adc
div
(bad)
js
into
int3
jge
jnp
xchg
stc
lods
daa
leave
iret
pop
xor
jo
stos
push
test
or
mov
mov
ds
mov
hlt
leave
addr16
jae
out
stos
mov
push
sub
mov
daa
scas
(bad)
pop
pop
dec
jle
mov
xor
mov
sahf
aam
cs
add
lahf
int3
daa
fdiv
pop
pop
test
xchg
in
aam
out
out
xor
xchg
cmp
sahf
push
ror
push
jle
pop
pop
and
out
(bad)
sti
lock
call
(bad)
mov
mov
pop
mov
not
pop
pop
jnp
test
cmps
cli
out
and
cmp
push
xor
jl
jmp
mov
out
sbb
pop
push
sub
pop
and
(bad)
push
push
fcom
fimul
push
mov
scas
xchg
cs
ds
enter
cs
sbb
daa
mov
cli
xchg
scas
or
adc
ins
ficom
ss
add
mov
inc
or
pop
push
jae
arpl
js
cs
jb
pop
inc
fild
lahf
rcl
ret
mov
frstor
in
pop
ins
daa
xor
inc
or
push
test
xor
enter
and
xchg
out
xor
jbe
pop
and
mov
inc
sub
or
daa
pushf
loope
xchg
shl
cs
sbb
push
sbb
sub
mov
mov
mov
aaa
adc
jg
popa
mov
shl
ins
retf
cs
cmps
test
adc
jne
mov
push
sub
dec
aam
mov
sub
ss
mov
adc
mov
(bad)
and
adc
js
jecxz
outs
push
xchg
daa
fadd
xor
cs
xor
cdq
sub
fldcw
pop
cs
pop
cmp
fmul
jmp
sub
fs
fisttp
sbb
sbb
ss
jl
push
mov
rcr
pop
in
xor
push
xor
dec
out
movs
xor
adc
add
into
sar
cs
stos
sti
mov
cmp
pop
jbe
xor
or
stc
ret
lods
cs
jle
pusha
cs
xchg
out
fstp
leave
xor
pop
or
outs
rol
sbb
mov
dec
xchg
fs
sub
scas
rol
jmp
lods
inc
xchg
out
out
fadd
jp
mov
aam
daa
mov
xlat
cmp
dec
stos
retf
cs
shl
daa
jmp
inc
imul
cs
fild
sysenter
sbb
dec
ret
stos
push
cs
cmc
clc
sahf
ret
inc
cs
add
dec
jge
mov
ret
inc
stc
jae
fcmovb
cwde
cs
and
mov
jbe
fisub
mov
not
data16
sub
pushf
aam
jge
cmp
xor
scas
retf
and
clc
sub
cld
data16
adc
sbb
out
cmps
push
and
sub
and
push
mov
sahf
test
jge
popa
sti
lds
and
int3
imul
or
sahf
pop
sub
dec
pushfw
stos
(bad)
dec
xchg
pop
cs
jmp
fcom
(bad)
test
xor
push
rcr
lock
sbb
and
push
and
or
jge
cs
push
adc
add
not
(bad)
stos
lahf
ror
push
mov
or
std
cs
mov
mov
adc
fs
push
push
cli
retf
ins
lea
les
mov
push
push
cs
fcom
je
into
mov
xchg
xchg
loop
test
mov
out
mov
aas
and
add
jle
lods
mov
repnz
cmp
ins
cs
arpl
pushf
aad
cs
pop
sub
mov
clc
repz
sbb
inc
xor
(bad)
call
ins
cmp
sbb
pop
cs
add
cdq
cs
pusha
pushf
mov
cmp
jg
xchg
cmps
xchg
cld
das
mov
mov
inc
push
push
(bad)
jmp
lods
in
gs
push
in
cs
pushf
fild
sub
sub
sahf
aas
aad
mov
out
les
out
out
jge
in
cs
xchg
xor
dec
div
adc
aam
clc
xor
leave
push
outs
mov
inc
inc
(bad)
adc
mov
jp
es
shl
les
leave
je
push
(bad)
aaa
sahf
lea
or
lods
xchg
and
dec
adc
jno
cmps
jp
rcr
xor
add
pop
cld
nop
dec
movs
mov
ficomp
cwde
cmp
inc
jno
adc
add
cmc
cli
dec
lods
and
xchg
dec
int3
inc
mov
enter
push
push
in
pop
cwde
xor
push
and
push
push
add
inc
pop
jo
cs
inc
sbb
sub
dec
add
cmp
aas
je
pop
jg
sbb
add
or
pop
aam
lea
adc
mov
sbb
add
mov
fcomp
(bad)
adc
xor
mov
add
ret
push
dec
(bad)
in
outs
int
add
enter
repnz
loope
xchg
push
inc
add
test
cs
mov
inc
sub
or
xor
ins
scas
es
xor
push
pop
adc
cli
push
fsub
xchg
stos
jmp
call
xor
pop
shr
push
pop
pop
sbb
adc
pop
lods
cmps
ret
push
ds
jnp
fnstenv
ds
xor
fstp
pop
mov
cs
out
push
movs
loop
sub
shr
inc
icebp
fdiv
mov
out
nop
or
mov
xor
add
mov
fdivr
jbe
bound
mov
mov
add
xchg
test
pop
data16
addr16
in
movs
mov
out
js
add
mov
outs
daa
fwait
cs
div
popa
rcl
push
inc
mov
and
lahf
adc
aaa
sub
mov
jecxz
rcr
jmp
fstp
mov
into
mov
mov
push
dec
call
loopne
arpl
xchg
jnp
sbb
les
mov
xor
push
adc
sub
mov
push
(bad)
or
mov
sbb
sub
pop
pop
outs
pop
jmp
imul
aas
ds
mov
stos
jge
adc
xchg
or
pusha
adc
or
cwde
mov
pop
push
push
inc
ret
or
cwde
bound
or
ss
call
or
jno
sub
pop
test
add
and
rcr
adc
fsub
aaa
movs
repnz
fcmove
leave
cmp
sub
mov
and
leave
and
mov
ins
outs
jge
(bad)
xor
push
lods
ss
into
fadd
pop
shr
xchg
ret
rol
lahf
xchg
cmps
jb
cmp
sbb
dec
pop
fs
sbb
push
xor
push
dec
(bad)
mul
sub
cmps
push
push
rol
(bad)
out
sbb
lods
jno
ss
mov
aas
sub
(bad)
outs
ret
(bad)
sti
dec
arpl
fdiv
xor
or
dec
push
sbb
push
aas
mov
lds
out
cmp
cs
pusha
sub
repz
in
mov
mov
xchg
test
push
xor
das
jae
ret
pop
mov
cmp
mov
cmp
xlat
add
push
cs
and
shr
lahf
out
xor
add
(bad)
shr
data16
mov
bound
inc
sub
scas
scas
mov
out
cld
inc
jno
push
pop
ror
or
scas
mov
jne
stc
(bad)
jmp
mov
(bad)
mov
faddp
stos
sub
daa
mov
into
(bad)
sbb
jge
inc
sahf
scas
and
mov
jg
aam
loopne
add
(bad)
lods
push
daa
sub
aad
daa
cmps
inc
mov
jb
out
mov
jp
inc
fisttp
sub
pop
jno
iret
mov
mov
pop
xchg
or
cmp
aad
push
xchg
loopne
sahf
sub
add
fnstsw
and
add
xor
cs
into
mov
or
jg
arpl
cmc
scas
js
mov
pop
and
mov
dec
retf
cs
(bad)
fwait
xchg
dec
cld
jmp
fcmovbe
inc
and
and
dec
dec
and
mov
fwait
jmp
rcl
icebp
xlat
dec
ret
js
test
xor
jge
outs
movs
xor
out
daa
mov
int
jbe
sub
call
adc
rol
inc
or
stos
test
push
or
scas
adc
xor
fwait
sub
jne
iret
dec
jp
scas
(bad)
jmp
ret
xor
sbb
inc
int3
mov
leave
paddsw
mov
(bad)
mov
push
push
(bad)
popf
sub
je
shr
int
mov
outs
ja
jae
fisub
or
add
xor
movs
cmp
outs
pmullw
jg
rcr
les
sub
inc
mov
js
in
pop
cmc
cmovge
mov
ins
ret
xchg
and
or
js
lds
cmps
adc
ror
div
ins
retf
jecxz
xor
mov
out
mov
fs
pop
mov
jl
xchg
jmp
lods
js
mov
sub
mov
out
mov
data16
mov
inc
mov
imul
xchg
mov
test
ds
mov
inc
xchg
out
xchg
push
cli
leave
add
sub
push
js
cmp
arpl
leave
les
aas
lods
call
movs
xchg
cwde
cmps
lahf
stos
or
jg
stc
(bad)
mov
neg
mov
scas
add
mov
mov
jp
dec
jle
(bad)
mov
push
pop
xor
call
or
leave
mov
jmp
mov
xchg
dec
hlt
ds
cdq
mov
es
xor
and
cmp
fild
sub
lods
jae
jg
jle
and
jmp
jb
inc
inc
and
movs
and
fiadd
jmp
pushf
pop
cmp
sbb
ret
sbb
fld
scas
popf
mov
mov
stos
ror
(bad)
jmp
(bad)
mov
mov
jnp
repz
aad
fucom
and
into
xchg
imul
leave
add
xchg
inc
stos
jecxz
xor
(bad)
cmc
shr
sub
mov
das
pop
aam
pop
sar
cmp
test
pop
xor
adc
jne
push
or
gs
lea
scas
dec
jge
adc
das
inc
loop
outs
xchg
jns
call
leave
vpshaw
dec
mov
mov
mov
mov
leave
shr
xchg
cld
inc
jbe
mov
stos
adc
sub
into
scas
out
repz
inc
jmp
push
pop
mov
xor
pop
adc
xlat
xor
(bad)
mov
push
push
addr16
inc
sub
repnz
cs
or
pop
sbb
push
vrsqrtps
mov
aaa
xor
push
push
cmc
xor
test
je
xchg
movs
inc
test
adc
jg
mov
(bad)
mov
xor
cs
push
gs
cs
adc
jno
xor
cmp
cli
jl
call
and
mov
push
neg
and
mov
inc
in
jecxz
dec
cs
lods
xchg
sub
test
fwait
mov
pop
not
jae
bound
scas
cmp
xchg
and
pop
and
jno
mov
sub
jmp
adc
mov
cs
cmp
ins
ja
sbb
cs
retf
xor
(bad)
mov
push
rcr
shr
cs
add
outs
popa
adc
hlt
mov
pop
jns
gs
call
bound
lock
cs
pop
inc
cli
stos
(bad)
xchg
dec
cs
and
cs
mov
adc
and
rcl
nop
je
rol
mov
mov
aas
rol
mov
mov
sub
push
inc
pop
sub
sbb
cmp
ins
jns
(bad)
xor
mov
mov
pop
sub
(bad)
jp
daa
rol
out
nop
inc
aam
or
adc
sbb
mov
xchg
es
xor
adc
push
jecxz
mov
cs
mov
or
cs
(bad)
jg
js
lock
push
pop
pop
mov
cs
retf
loope
icebp
movs
mov
(bad)
imul
rcr
cdq
and
stos
fwait
shl
js
sbb
je
xor
popa
mov
jnp
pop
add
sbb
xchg
adc
cs
stos
ret
xlat
call
js
xchg
scas
(bad)
and
xchg
or
jmp
outs
push
add
lahf
mov
daa
mov
test
mov
xlat
mov
psrlq
xor
lahf
data16
pop
jge
xchg
outs
ds
movs
mov
mov
and
sbb
push
pushf
mov
test
(bad)
mov
test
sub
xchg
inc
test
add
adc
cs
mov
lahf
fisttp
push
mov
add
xor
push
cs
or
mov
mov
fcomp
mov
jo
outs
jmp
cmc
fstp
push
rcl
cld
stc
daa
mov
in
loopne
fwait
mov
mov
cmps
cs
retf
addr16
and
inc
and
ret
mov
jb
jl
arpl
into
mov
scas
in
dec
ds
shl
add
shl
out
iret
ficomp
lock
or
shl
sti
ror
out
bound
sub
jb
mov
cmp
retf
test
pop
outs
xor
jecxz
sub
and
jne
out
jnp
mov
cwde
call
and
jno
sbb
sub
or
push
cs
push
iret
fisttp
movs
jle
ins
pushf
push
mov
jmp
cs
imul
loopne
fdivp
add
or
iret
ficom
cs
or
outs
scas
sub
cs
je
movs
cli
in
daa
jl
js
mov
jle
cs
ror
mov
inc
jmp
in
cwde
(bad)
pop
mov
push
xor
ds
sti
es
push
into
mov
daa
dec
scas
dec
lea
xchg
ret
outs
inc
pop
sbb
jmp
hlt
ret
xor
fdiv
pop
sbb
cs
add
mov
mov
(bad)
push
jmp
adc
xor
mov
call
sbb
ss
cmp
outs
add
sbb
pop
push
or
aaa
cs
or
scas
mov
lds
cs
outs
mov
mov
cmps
jmp
rcl
(bad)
push
sub
xor
mov
mov
inc
adc
ret
mov
push
mov
cld
out
inc
daa
sbb
cmp
js
gs
rol
repz
sbb
aas
mov
outs
jnp
mov
(bad)
pusha
xor
sub
push
out
movs
xchg
mov
sub
int
xchg
(bad)
aad
mov
adc
add
sub
iret
inc
push
out
mov
jnp
fisttp
fild
in
ja
add
and
xor
cmp
jno
xor
arpl
lds
cli
fisubr
pushf
adc
jbe
ja
adc
pop
movs
and
std
or
inc
cmps
movs
cmp
cmp
and
mov
xor
push
xchg
xor
inc
sub
and
xor
xor
dec
jg
fimul
imul
push
push
jnp
mov
lods
aas
pusha
inc
sub
out
dec
pop
loop
push
(bad)
repnz
test
mov
mov
mov
rep
sbb
dec
leave
iret
xchg
inc
sahf
(bad)
xor
lods
rcl
cmp
mov
pop
cwde
jl
shl
jne
cmps
ror
(bad)
cmp
sub
jg
pop
pop
sbb
fbld
jo
xchg
pusha
sub
dec
movs
test
sub
ja
inc
push
sub
(bad)
and
jne
int
shr
leave
or
adc
lock
mov
cs
mov
xor
(bad)
dec
mov
daa
jno
dec
add
dec
sbb
mov
adc
imul
sbb
pusha
inc
mov
lahf
mov
lds
or
retf
ins
add
ja
loope
gs
es
xchg
sub
out
push
and
push
in
in
scas
pop
push
or
mov
test
or
sysret
and
and
push
dec
cs
cmp
cmps
jecxz
xor
xchg
lea
cs
mov
mul
cs
pushf
jg
pop
jno
sub
adc
xor
xor
inc
xor
adc
lods
and
daa
sub
mov
mov
scas
movs
in
les
ins
dec
mov
jae
lock
xor
loop
sbb
ds
dec
lods
fidivr
fs
cs
push
dec
pushf
cs
bound
cs
mov
jmp
(bad)
xchg
loop
mov
pop
stos
inc
scas
sti
nop
mov
fs
test
xor
outs
cmp
and
mul
(bad)
test
xchg
xchg
cli
sub
cs
in
out
arpl
pop
push
aam
retf
push
mov
aad
xchg
jbe
or
xchg
pop
fwait
adc
pop
daa
movs
pop
xlat
push
pop
neg
cs
mov
mov
inc
mov
out
scas
pusha
(bad)
ja
sti
aas
imul
aaa
fwait
ror
cmps
push
xor
adc
aas
adc
push
mov
cmp
stc
stos
loope
mov
xor
cdq
ds
outs
cs
sbb
inc
push
xchg
cs
icebp
add
(bad)
cs
call
cs
fisubr
fcom
dec
or
push
jnp
cs
sbb
stos
xor
or
jp
cld
mov
push
popf
lods
pop
jmp
push
std
scas
rol
and
cmp
dec
sti
repz
rcl
dec
push
sbb
icebp
inc
push
pop
lahf
test
dec
mov
pushf
inc
mov
(bad)
aaa
ja
aam
in
sti
push
jl
jno
jbe
pop
mov
pop
mov
(bad)
push
mov
lods
aad
repz
xlat
and
jmp
mov
xor
inc
(bad)
outs
sub
lods
sub
mov
les
leave
or
lds
ss
(bad)
mov
aad
test
popa
fstp
cs
inc
add
or
les
sbb
fldlg2
jno
sbb
dec
dec
addr16
pusha
pop
test
cmp
cmps
scas
out
imul
daa
scas
fstp
dec
sub
pop
das
in
repnz
icebp
stc
and
out
leave
aas
pusha
xchg
and
dec
sub
push
daa
xchg
cmp
cmp
cmp
inc
pop
es
loope
mov
push
aam
aad
neg
outs
sub
or
cwde
stos
nop
xor
in
jl
and
icebp
lods
bound
mov
imul
cmp
pop
sub
out
loope
cs
cmp
push
mov
pop
push
leave
xchg
lock
imul
fadd
stos
outs
and
xchg
daa
pop
xor
mov
xchg
cmp
cmps
(bad)
jle
xor
shr
int3
xchg
loopne
mov
stos
addr16
(bad)
inc
inc
in
pop
pop
arpl
xchg
or
jecxz
out
dec
(bad)
sbb
(bad)
shr
cmp
in
loope
sub
jg
pop
arpl
(bad)
in
pop
das
out
and
fdiv
(bad)
mul
pop
jecxz
(bad)
scas
sti
out
xchg
pop
sahf
pusha
popf
fcom
mov
inc
(bad)
sbb
aam
or
mov
cmps
xchg
mov
sti
movs
out
xchg
xchg
pop
sub
daa
push
or
pop
and
mov
test
pusha
xchg
push
sub
mov
pop
ja
ins
sti
(bad)
dec
shl
pusha
jmp
mov
nop
addr16
jmp
pop
clc
int3
sub
cmps
sub
stos
aam
add
cdq
or
mov
sub
addr16
xchg
(bad)
(bad)
fld
adc
outs
or
rcr
mov
inc
test
jmp
pop
or
imul
into
jecxz
dec
stc
sbb
leave
and
xchg
mov
sbb
and
cmps
mov
in
pop
leave
dec
xchg
sub
cdq
jo
adc
mov
inc
fst
data16
mov
into
push
dec
fidivr
push
add
imul
cld
arpl
in
sub
lods
and
mov
jb
call
fdiv
sbb
(bad)
cld
cs
out
sbb
cs
adc
movs
mov
daa
fcomi
mov
shl
ins
cmp
stos
out
test
inc
mov
push
mov
cld
lods
inc
sbb
dec
pop
outs
cmp
imul
sbb
imul
add
cs
or
scas
pop
dec
or
fcomp
push
push
fisubr
mov
fbstp
lahf
mov
push
pop
cmp
sub
into
pop
sub
mov
ss
inc
arpl
cs
adc
sub
jle
pop
cmp
nop
in
cmps
jecxz
sbb
int3
cmp
xor
cs
mov
les
hlt
mov
out
jg
test
push
arpl
xor
pusha
sbb
fdiv
ss
cwde
scas
pop
rol
or
xor
dec
inc
pop
mul
xor
jmp
test
mov
cmp
cs
in
ret
push
inc
jp
or
mov
cs
push
sub
jge
and
je
ins
bound
cmp
pop
movs
push
imul
mov
test
test
(bad)
aam
mov
movs
in
fimul
call
pop
adc
aam
call
jp
push
push
or
scas
dec
cmp
jmp
inc
mov
lods
mov
jb
or
pop
cs
das
cs
or
cmc
or
mov
mov
call
fcomip
pop
cs
jmp
cmp
test
or
cs
loopne
lods
adc
outs
mov
dec
push
push
pop
cs
ret
das
push
repz
cs
jnp
push
fadd
inc
mov
adc
fidiv
das
scas
mov
xor
leave
stos
popa
mov
cmp
dec
push
add
fiadd
rcr
das
fisubr
mov
mov
xchg
or
repnz
xor
popfw
movs
push
add
fisubr
test
add
daa
jle
fistp
mov
cmps
jne
ins
daa
push
out
sti
fidivr
or
sbb
sub
jne
retf
mov
sub
test
pop
mov
in
cmp
scas
cs
sar
shl
cmp
das
and
sub
or
dec
cmps
pop
cwde
jmp
daa
mov
lods
adc
out
xchg
mov
mov
mov
fisubr
push
imul
push
pop
pop
ret
popa
cwde
or
imul
mov
nop
mov
xor
popf
mov
shl
stos
push
mov
lea
cmp
mov
push
xor
dec
fdivr
cli
jns
cs
adc
cmp
ja
in
push
cmc
lock
fwait
cmps
fmulp
xchg
rol
adc
mov
or
stc
out
xchg
cmp
leave
sub
aad
cmp
sub
pop
pop
add
bound
movs
fwait
jns
inc
mov
icebp
repz
inc
inc
fwait
pop
sub
xor
jmp
fs
xchg
mov
jle
dec
cwde
cmp
leave
add
mov
sti
mov
out
dec
scas
out
test
add
icebp
ss
sbb
ret
pop
(bad)
fld
mov
fdivp
aad
push
push
jp
jae
jecxz
dec
sub
call
xchg
imul
cs
arpl
mov
mov
cmp
mov
push
popa
cmp
stc
inc
(bad)
nop
and
or
pop
inc
test
aaa
push
lods
in
push
xchg
pop
jnp
popf
mov
fisttp
(bad)
or
fld
retf
dec
fmul
movs
mov
mov
retf
sub
pop
std
inc
mov
nop
mov
push
push
xchg
in
leave
call
stc
clc
xchg
mov
or
mov
cwde
shl
inc
pop
mov
pop
ins
pushw
retf
(bad)
cmps
push
ret
outs
retf
les
xchg
sti
(bad)
jo
leave
loopne
std
retf
out
adc
jnp
fadd
xchg
jge
sub
xlat
jb
xor
dec
sbb
add
cmps
(bad)
mov
cwde
jmp
jmp
movs
mov
stc
and
sahf
dec
lods
add
fmul
push
out
aad
daa
(bad)
mov
in
fiadd
hlt
or
icebp
push
scas
sbb
(bad)
aaa
inc
popf
or
or
mov
push
lods
xchg
into
push
out
div
mov
push
imul
fld
in
enter
mov
scas
mov
jmp
repz
jmp
(bad)
pushf
mov
adc
or
push
int3
mov
add
cmp
cmps
xchg
or
sahf
dec
sub
xor
and
mov
cs
mov
mov
dec
push
ret
(bad)
enter
and
hlt
in
inc
push
cs
inc
jmp
cmp
inc
pop
aad
retf
hlt
das
pop
scas
xchg
cs
mov
stos
cs
adc
push
inc
daa
dec
hlt
enter
rol
sbb
cmp
sbb
inc
lods
xor
popf
imul
fmul
xor
and
inc
add
into
stc
hlt
push
inc
pmaxub
in
or
dec
cs
mov
cli
pop
mov
jb
or
scas
fisub
jae
loope
repnz
push
sub
adc
outs
xor
xchg
fisubr
imul
ss
or
sar
icebp
jp
(bad)
xlat
mov
jp
add
call
ds
leave
jmp
cdq
adc
mov
sbb
jg
fwait
outs
leave
pop
ret
xor
data16
jae
jmp
mov
jnp
push
xchg
shl
(bad)
call
test
sub
dec
cmps
sub
mov
adc
rol
jmp
mov
(bad)
jp
stos
push
(bad)
jne
pop
pop
pop
sbb
hlt
test
lea
(bad)
jae
xchg
or
loopne
loop
je
sbb
xchg
pop
jmp
mov
fcomp
inc
int
cmps
mov
jb
imul
aam
fwait
(bad)
test
dec
icebp
int3
and
out
xchg
scas
cmp
cld
pop
je
jge
or
cmp
mov
into
mov
fnstcw
sub
pop
adc
fcomp
es
sub
pusha
test
pop
sub
test
mov
xchg
xor
movs
in
mov
xor
jno
inc
ins
mov
je
nop
fs
leave
push
mov
test
cmp
mov
inc
inc
cs
pusha
cmp
push
jns
scas
ins
cs
pop
xchg
cmp
jmp
mov
jmp
jb
in
sbb
ss
rol
aam
retf
dec
push
xor
mov
cmovbe
dec
inc
sub
fstp
int
add
out
inc
in
(bad)
mov
sbb
mov
mov
mov
fistp
dec
addr16
and
int3
(bad)
mov
jmp
mov
push
jo
mov
lock
test
rcl
pop
mov
scas
mov
cmovl
sbb
pop
or
emms
(bad)
(bad)
mov
xchg
retf
loope
xchg
push
mov
mov
push
and
jg
sbb
(bad)
jge
aaa
cmp
(bad)
add
(bad)
sub
rcl
pusha
or
adc
int3
adc
cmp
and
xor
mov
es
pop
or
inc
add
(bad)
mov
xchg
mov
imul
push
mov
dec
cwde
fsubp
div
or
fldenv
mov
xor
es
and
pop
ds
inc
mov
(bad)
pop
xor
and
xlat
cwde
or
and
add
cmp
push
scas
int
test
test
repnz
mov
sbb
xor
dec
repnz
popa
mov
sub
ret
dec
mov
cmps
xchg
dec
jp
test
leave
adc
push
push
cmp
aad
jno
and
adc
scas
iret
mov
cmp
scas
jl
sbb
cvttps2pi
mov
cmp
call
test
push
stos
mov
outs
cdq
rol
loope
lds
xor
cs
or
dec
push
or
scas
repz
sbb
fsubr
add
pop
dec
sahf
mov
in
jmp
push
imul
adc
scas
fist
sbb
push
sar
fstp
out
(bad)
dec
xor
or
mov
int3
pop
add
pop
or
(bad)
cmc
lods
mov
jg
xor
cs
movs
sbb
cmps
popf
push
leave
xlat
test
xchg
pop
push
shufps
jecxz
aam
push
and
inc
sub
jbe
(bad)
mov
cmp
dec
leave
xor
mov
into
in
xchg
push
ins
int
xchg
jno
sbb
or
or
fwait
xlat
dec
jns
ins
cld
(bad)
dec
and
repnz
(bad)
xor
or
jbe
aad
inc
ror
jmp
xchg
retf
arpl
xchg
test
leave
mov
push
sub
cmp
pop
test
mov
pusha
dec
cmp
ret
ffreep
ss
cmc
mov
and
int
mov
pop
sub
leave
mov
dec
pop
push
add
mov
xchg
mov
fs
push
mov
aam
xchg
mov
out
in
imul
adc
cmc
cs
pop
inc
and
cs
mov
fwait
das
pop
xchg
loopne
mov
jmp
mov
test
lods
jge
cmp
scas
or
adc
xor
cs
or
and
loopne
mov
(bad)
int
neg
test
cs
pushf
sbb
scas
les
mov
pop
out
movs
cmps
clc
lods
bound
cs
pop
mov
cs
adc
(bad)
les
inc
sbb
dec
imul
mov
call
mov
(bad)
in
mov
inc
cs
(bad)
xor
push
or
cs
pusha
test
cmp
mov
pop
in
inc
ret
mov
aas
xor
fmul
(bad)
dec
push
push
(bad)
scas
pop
xor
cs
pop
or
sub
(bad)
xor
jb
add
call
mov
dec
dec
xor
aad
test
pop
scas
repnz
dec
iret
mov
pop
scas
test
cs
and
jb
xor
lock
mov
popa
and
in
scas
xchg
scas
and
add
sub
ret
fadd
cs
rol
popa
mov
mov
adc
repnz
jp
enter
mov
jb
xor
xchg
mov
shr
xor
test
adc
jae
add
mov
or
sbb
sub
dec
adc
adc
xlat
jo
mov
cs
push
pop
pop
adc
loope
jle
add
push
lea
std
out
sub
pusha
nop
test
dec
mov
mov
jbe
cs
xlat
aam
mov
xor
std
repnz
inc
add
enter
rcl
jmp
scas
add
mov
rol
test
lods
scas
scas
xchg
mov
ret
jo
jmp
mov
and
iret
stos
mov
icebp
fild
hlt
inc
and
jecxz
sahf
in
enter
pop
leave
mov
test
xor
retf
add
push
push
mov
sub
jge
add
out
aad
mov
out
jmp
adc
leave
pop
push
pushf
jle
test
add
mov
pop
test
mov
scas
mov
mov
dec
stos
jge
push
shl
imul
xor
and
dec
xor
(bad)
push
ss
scas
sub
push
push
and
dec
sti
enter
push
sub
cmp
mov
movs
jge
fimul
fstp
mov
retf
and
scas
ds
sub
inc
push
pushf
retf
cwde
dec
inc
out
jp
sub
and
adc
cmps
aam
(bad)
pop
dec
lahf
or
enter
loopne
cmp
call
xor
test
dec
ss
(bad)
push
lock
lock
ds
mov
cld
xchg
sub
lods
scas
pop
cmp
mov
pop
xlat
int
leave
mov
mov
sbb
cmp
imul
inc
fldenv
xchg
arpl
test
dec
sbb
(bad)
(bad)
sbb
(bad)
dec
cmps
sub
mov
repnz
jnp
call
sub
mov
out
addr16
cmps
or
mov
jg
ins
(bad)
dec
shl
push
mov
push
adc
mov
mov
adc
jmp
xor
jp
fadd
mov
push
sub
cmps
pop
adc
cwde
sub
or
or
mov
mov
(bad)
cmc
xor
mov
dec
cs
cwde
jno
shl
stos
ret
aas
mov
(bad)
mov
mov
sub
lods
sti
leave
mov
or
mov
and
shl
xchg
mov
adc
dec
xchg
rcl
ja
mov
pusha
rol
ret
mov
(bad)
push
scas
xchg
dec
adc
jp
cmps
adc
pop
clc
inc
enter
call
arpl
cmp
cmps
dec
or
and
test
fild
loopne
and
test
push
sub
xchg
xchg
ror
mov
mov
and
mov
dec
adc
in
fldcw
add
sbb
(bad)
pushf
mov
retf
dec
repz
lods
pusha
cs
jae
scas
xchg
pop
inc
jae
cwde
adc
aaa
bndstx
outs
sub
push
int3
xor
shl
lods
adc
fs
cs
out
out
xchg
fcom
mov
scas
ret
test
shr
mov
arpl
jno
aas
into
cs
cmc
out
cs
mov
mov
repnz
ins
sub
call
movs
push
outs
aad
fdivr
outs
aas
sub
xchg
mov
test
call
sbb
test
aad
fwait
push
cs
pop
sbb
xchg
cs
push
push
pop
mov
dec
xchg
cs
inc
lods
add
sahf
cs
mov
fcomp
mov
mov
fldenv
jp
pop
fild
sub
pusha
inc
push
fisttp
cs
stc
sub
xchg
sub
scas
mov
outs
out
test
or
repz
push
out
sub
adc
(bad)
cs
xchg
mov
sbb
push
aam
aaa
(bad)
cmp
lahf
sub
xchg
add
gs
xchg
push
mov
cs
and
adc
pop
and
scas
stc
sti
sbb
cwde
aas
clc
(bad)
scas
jns
add
arpl
mov
inc
in
loopne
sbb
xor
bound
push
dec
pop
jecxz
mov
add
cs
ins
test
movs
cwde
fsubr
test
push
xchg
ret
repz
inc
xor
push
xor
dec
sbb
pop
add
mov
jecxz
stc
rol
mov
lea
push
dec
xor
push
adc
cwde
and
(bad)
jno
or
cmp
mov
cmp
ror
add
jmp
out
mov
xor
enter
(bad)
bound
sub
mov
xchg
aas
ror
fcom
mov
sar
adc
loop
mov
fdivr
aas
xchg
cmp
ja
test
stc
xchg
(bad)
pop
pushf
mov
stos
scas
sub
enter
mov
jmp
mov
or
inc
scas
sbb
hlt
mov
retf
call
ficom
cwde
shl
jmp
mov
push
sbb
hlt
adc
(bad)
mov
aad
cmc
mov
mov
int3
push
pop
jg
pop
sbb
push
inc
cs
cmps
stos
mov
cdq
jnp
aas
addr16
out
sbb
xchg
sbb
sub
sub
scas
cmp
in
push
inc
aas
jmp
imul
(bad)
mov
cs
jle
push
cs
jno
push
mov
pop
xor
stc
pop
pop
adc
cmp
scas
mov
ins
mov
lahf
mov
test
ret
(bad)
sahf
pop
ss
sub
pop
aas
xchg
push
std
ins
into
js
(bad)
mov
xchg
lods
cmp
shr
and
fld
xor
dec
test
movs
fisubr
sbb
mov
mov
movzx
and
add
xchg
fldcw
data16
cmc
cmp
cs
je
push
mov
into
adc
scas
push
cmp
cs
ja
and
cmp
ins
dec
xchg
rol
push
jge
jnp
add
sub
cs
js
mov
imul
fsub
adc
cdq
jl
cmp
cmp
out
or
ja
fsubr
data16
enter
sbb
je
lods
out
fidiv
pop
add
cwde
mov
fstp
es
es
cs
push
sahf
sbb
pusha
dec
aas
inc
call
dec
mov
iret
jl
ins
jmp
fsub
sahf
sub
push
in
cs
pop
icebp
mov
rcl
jae
int3
div
pop
sbb
aas
outs
jbe
and
cs
inc
movs
adc
sub
sub
ss
xchg
out
jbe
fidiv
xor
nop
les
sub
(bad)
in
jns
cmps
pop
push
mov
xor
adc
mov
dec
(bad)
popf
cs
lock
cwde
aad
lods
test
popa
pop
fs
int
xchg
stos
aas
adc
dec
dec
(bad)
push
xchg
clc
push
xlat
or
out
jge
int
adc
cmp
mov
xor
outs
jae
cli
in
lock
test
xor
or
push
leave
aas
ja
push
mov
sub
bound
and
add
pop
shr
sub
data16
push
or
mov
int3
dec
jmp
(bad)
ficomp
adc
mov
jg
mov
fidivr
dec
mov
or
leave
je
stos
jle
dec
ret
push
sahf
aas
jle
cmp
les
sub
push
sub
jmp
dec
(bad)
leave
xor
out
push
pop
test
push
dec
sahf
inc
cs
xor
test
punpckhdq
jb
pop
scas
inc
adc
in
div
hlt
mov
or
(bad)
shr
push
mov
gs
or
sub
pop
jno
dec
mov
test
addr16
ret
sar
sbb
cs
jb
inc
lods
push
xor
in
ins
pushf
mov
call
lea
cs
repnz
dec
cs
pop
mov
push
or
xor
int
(bad)
pop
pop
mov
pop
adc
scas
pop
sbb
push
jb
sbb
mov
xlat
dec
mov
push
fs
push
stos
sar
sbb
test
popf
(bad)
leave
or
inc
xor
outs
dec
jno
arpl
push
in
xchg
mov
call
push
dec
cs
dec
cmp
in
stos
shr
cmp
adc
nop
aaa
sub
mov
pushf
jle
xchg
add
into
loope
in
sub
and
cs
fnstenv
(bad)
das
fidivr
jmp
test
lds
out
loope
mov
sbb
or
jae
jmp
icebp
jo
push
scas
adc
push
xchg
scas
lock
mov
leave
nop
mov
mov
fwait
pushf
out
inc
mov
lock
add
add
sub
or
mov
sbb
repz
gs
repnz
and
xchg
mov
scas
xor
ss
jno
les
sub
sbb
leave
mov
mov
inc
sub
out
dec
or
push
call
dec
outs
(bad)
jmp
lahf
add
popa
sub
xor
cwde
test
retf
inc
and
imul
stos
loopne
jno
push
dec
movs
sub
call
jo
lahf
mov
inc
push
loop
mov
cmp
into
jecxz
sub
test
mov
arpl
adc
call
scas
outs
sub
(bad)
dec
pop
dec
xor
shl
mov
aaa
mov
cs
sbb
int
call
cs
cmp
sbb
out
mul
xchg
scas
jmp
in
fs
enter
sub
shr
mov
into
fild
push
sbb
cmps
push
mov
mov
adc
jle
pop
outs
lds
mov
mov
sbb
xchg
cs
cli
cmc
mov
cmp
pop
dec
cmp
or
iret
xchg
out
push
push
(bad)
das
cwde
in
mov
push
ja
push
inc
sub
adc
adc
fisubr
arpl
mov
adc
icebp
jg
xchg
outs
mov
jmp
pop
aaa
mov
mov
sub
ds
ja
or
dec
add
sub
shl
es
mov
fdiv
cs
xchg
(bad)
dec
pop
popa
mov
arpl
fdiv
or
sbb
sub
pop
aas
stos
pslld
jo
inc
rcl
inc
and
fisub
scas
jno
loopne
popa
xor
icebp
loop
nop
cs
push
jecxz
cmc
jnp
or
and
les
into
xor
xor
cmps
out
test
mov
pop
adc
add
iret
lds
xor
inc
pop
xor
xchg
(bad)
pop
jp
cs
arpl
or
pop
and
scas
sar
sub
imul
mov
cs
loopne
jne
inc
push
bound
movs
icebp
in
dec
cmp
cmp
in
in
outs
sub
adc
mov
pop
cli
mov
lods
cwde
xor
sbb
jno
mov
sar
sbb
jae
pop
sub
jg
stos
gs
icebp
(bad)
mov
push
arpl
out
inc
sbb
cmp
or
arpl
int
push
and
call
in
jmp
jb
fcom
pop
mov
das
jno
mov
test
mov
das
pop
out
sti
(bad)
out
movs
call
leave
fist
fsub
inc
ds
cmp
and
aaa
test
cli
shl
leave
std
(bad)
adc
pop
mov
xor
sahf
xor
sub
in
or
inc
sub
mov
mov
pop
mov
shl
ss
loop
aad
push
jp
cmp
test
stos
movs
xor
mov
or
sub
mov
out
and
xchg
loop
cmc
mov
dec
aad
xlat
outs
add
add
js
out
mov
mov
popf
sbb
and
fld
scas
ds
jecxz
mov
(bad)
xchg
pop
add
test
add
fwait
in
mov
pop
and
xchg
cmc
pop
sti
div
imul
movs
rcr
clc
dec
ret
xchg
es
mov
enter
mov
cdq
jle
push
xchg
sbb
add
push
(bad)
out
mov
mov
(bad)
std
or
dec
shr
jns
push
icebp
cld
mov
bound
jp
stos
pop
cmp
and
mov
jno
outs
(bad)
adc
push
aaa
aas
mov
inc
pushf
pop
add
lahf
mov
loopne
or
das
or
sub
sub
(bad)
dec
test
jbe
pop
out
out
xchg
push
push
outs
aam
scas
xchg
push
in
sub
and
dec
or
popa
cmp
push
cmp
sbb
(bad)
out
pop
or
push
mov
fdiv
repz
shr
es
mov
sub
(bad)
lods
loope
(bad)
inc
xor
(bad)
aas
loop
xor
(bad)
enter
mov
stc
push
(bad)
mov
test
jae
movs
xor
push
push
mov
arpl
ficomp
icebp
push
ficom
adc
jle
xor
sti
scas
lds
mov
cmc
jae
jbe
inc
es
cmp
loopne
and
(bad)
stc
push
push
fsub
inc
lock
and
add
out
in
(bad)
gs
push
sbb
xchg
dec
inc
imul
xor
pop
sbb
icebp
int
jmp
(bad)
add
pop
mov
pop
jg
cs
aam
mov
imul
adc
in
jmp
int
(bad)
lahf
shr
(bad)
xchg
scas
cwde
retf
fwait
and
cmp
outs
out
xor
sahf
bound
pop
inc
xlat
sub
lock
sub
mov
call
jae
sbb
out
ret
dec
cs
(bad)
ins
push
gs
pop
pop
xchg
call
mov
addr16
xor
cmps
add
cs
movs
aad
cli
adc
bound
pop
dec
inc
sub
idiv
cs
lds
fwait
es
and
clc
sbb
imul
js
cmps
sub
fsub
adc
repnz
sti
mov
call
push
xchg
sub
cmp
fild
test
sbb
nop
mov
mov
jg
(bad)
fcmovne
jmp
sub
loop
or
inc
mov
ja
xor
pop
repnz
stos
rcl
mov
cs
retf
push
pop
pop
neg
loope
loop
repz
mov
sub
pop
adc
jo
lahf
stos
inc
push
js
cs
jnp
mov
ficomp
stos
push
push
shr
or
les
inc
mov
mov
cs
xor
dec
retf
test
in
out
adc
xor
outs
es
cmp
adc
inc
push
jmp
and
cs
mov
stos
int
xor
sbb
outs
pop
mov
(bad)
sbb
mov
mov
cli
rol
and
inc
dec
sub
and
je
hlt
mov
mov
sbb
aad
outs
ins
lahf
cs
sbb
jb
repnz
shl
fcom
stos
int3
fsubp
xor
xor
cmps
and
nop
mov
jns
in
stc
je
add
cs
mov
test
jecxz
cmp
(bad)
std
(bad)
loopne
xor
call
push
and
repnz
mov
aaa
mov
(bad)
cmp
and
adc
sub
dec
scas
ins
sbb
sub
(bad)
mov
cmc
mov
retf
mov
cmps
jne
sub
push
jo
add
mov
cmps
mov
and
ins
bound
jno
in
out
cs
fbld
cmps
cs
push
pop
cmp
jmp
sub
add
add
shr
cmp
jo
call
stos
mov
aaa
cmc
add
cs
dec
ror
aas
inc
or
ss
or
mov
mov
inc
les
cs
pop
scas
int3
xor
jl
xor
outs
xchg
mov
les
sub
(bad)
cs
out
push
sahf
sahf
aaa
les
je
fsub
jg
xor
inc
or
mov
retf
pop
add
mov
scas
fsubr
push
shr
sub
mov
sbb
enter
lods
outs
inc
xchg
push
cmps
and
cmps
adc
test
xor
scas
out
out
xor
pop
push
cmp
aam
jl
cs
push
push
xlat
sub
mov
pop
push
daa
jne
scas
gs
ds
dec
inc
loopne
jge
xchg
jmp
mov
inc
push
inc
jne
add
cs
ficom
cdq
xchg
cs
and
into
and
jbe
cs
mov
fild
sbb
sbb
scas
and
cs
jnp
or
dec
adc
js
push
sub
test
scas
lds
lods
mov
inc
fbstp
xchg
cs
mov
(bad)
cs
xchg
mov
std
add
jnp
pop
out
pop
scas
scas
sub
cmp
xchg
and
ins
dec
sbb
and
ins
into
aam
scas
jle
hlt
mov
and
popa
push
out
or
jmp
pop
out
inc
jb
push
sub
arpl
adc
fisttp
cmp
in
push
sub
cmp
cmp
inc
add
adc
or
jb
in
sahf
mov
andps
add
rol
cmp
mov
repnz
(bad)
sub
jns
test
cmp
mov
or
mov
addr16
repnz
or
adc
push
aam
fimul
dec
aad
inc
aas
push
xchg
popa
fs
sar
shr
xor
scas
mov
mov
ret
test
lods
dec
clc
jmp
out
mov
into
cs
inc
clc
mov
fst
lds
push
pop
mov
pop
test
push
fld
xor
mov
and
fidivr
cs
shr
fwait
sbb
inc
push
pop
ret
xor
mov
les
je
dec
cmp
inc
add
mov
dec
out
jmp
cs
dec
sub
jnp
outs
ud2
cmp
dec
aam
pop
adc
mov
push
bsf
es
sti
shl
xor
cmp
jnp
sar
inc
inc
mov
lods
inc
xchg
jecxz
pop
cs
mov
popf
test
in
cs
and
xor
add
jb
push
int
stc
sub
inc
sbb
push
xor
push
outs
push
pop
test
cs
movs
imul
add
jae
rcl
xor
and
pushf
les
pop
cmps
aaa
adc
cmp
xor
sub
cli
outs
mov
sbb
push
cs
sub
out
mov
xchg
cs
outs
ret
push
cdq
push
cs
mov
repz
push
dec
adc
pop
mov
pop
or
mov
pop
sbb
adc
jo
jmp
retf
xchg
aad
cmp
out
cmp
(bad)
out
mov
cs
jnp
adc
sub
add
dec
sbb
add
push
dec
sbb
cmp
adc
xchg
vpor
mov
addr16
test
mul
add
and
rcl
aas
pop
sbb
xor
(bad)
and
mov
test
mov
leave
rcr
cmp
inc
stc
pop
retf
loope
sub
test
dec
js
add
jecxz
xor
sbb
xor
mul
ds
pop
dec
cmp
add
mov
cs
mov
sub
mov
jns
xor
xor
and
jge
sbb
lods
lea
xchg
(bad)
inc
inc
daa
ins
sub
scas
add
out
and
add
cs
outs
xor
or
mov
mov
adc
pusha
cs
lods
pop
inc
sar
std
cs
cmp
and
adc
push
retf
icebp
test
inc
sub
scas
pusha
jmp
or
inc
std
ret
xchg
pop
jno
pushf
xor
push
add
(bad)
pusha
lahf
cs
popf
movs
adc
xchg
mov
and
pusha
popf
(bad)
(bad)
sub
inc
fsubr
xlat
loopne
xor
push
out
and
inc
pusha
(bad)
add
pop
sbb
cs
retf
outs
mov
jo
out
cmps
xchg
fsub
xchg
jecxz
shr
push
mov
sub
(bad)
icebp
ficomp
out
or
sub
daa
cmp
push
call
or
int
addr16
push
sub
ins
xor
sub
cmps
mov
sbb
test
mov
adc
mov
add
in
iret
jmp
sbb
sti
outs
xchg
inc
sub
mov
xchg
jae
pop
mov
dec
mov
cld
cs
xchg
push
and
mov
int3
out
push
inc
mov
pop
jb
cli
mov
xor
bts
mov
mov
cs
jg
(bad)
je
scas
cmp
mov
icebp
jmp
scas
mov
fcomp
dec
test
into
cs
cli
add
jbe
or
imul
push
in
mov
mov
pop
or
pop
cs
sbb
cs
jns
stos
mov
jmp
pop
inc
add
jg
scas
loop
push
push
fidiv
movs
adc
xor
stos
popa
xlat
call
(bad)
mov
jb
add
cld
mov
xchg
loope
sub
nop
pop
and
stc
pop
cmp
mov
ret
xchg
jmp
push
add
rcr
pop
data16
je
cs
pop
and
xor
outs
and
out
inc
gs
call
xor
das
cmp
inc
inc
icebp
xor
loop
and
scas
mov
xchg
lds
jmpw
imul
ret
sub
retf
cs
mov
sub
push
fisttp
add
daa
dec
sub
shl
inc
or
mov
lock
fnstcw
cs
adc
adc
cmp
xor
aas
inc
cmp
movs
cs
ret
fild
shr
cs
cmp
cs
mov
jecxz
cmp
subps
arpl
es
sub
and
mov
ficomp
rcr
call
jns
and
sub
adc
inc
push
icebp
cs
dec
outs
xor
push
imul
dec
test
lahf
cs
aaa
ja
outs
movs
cs
pop
pusha
sbb
pop
loopne
outs
push
jb
lods
cs
fcom
(bad)
cld
cs
call
cs
stc
dec
mov
push
add
push
les
fnstsw
and
xor
push
out
rcl
test
and
imul
cmp
scas
and
sbb
xchg
scas
out
mov
loope
xor
in
jo
not
js
pop
mov
pop
adc
lahf
xor
sar
pusha
pop
cmp
mov
fbstp
scas
hlt
shl
lds
and
call
adc
(bad)
aaa
inc
pop
mov
popa
outs
es
add
mov
repz
retf
repnz
mov
jge
xor
dec
aas
mov
sub
not
ret
(bad)
mov
mov
jg
inc
sbb
and
mov
add
xchg
xor
into
and
test
out
mov
sahf
push
ss
nop
rol
push
dec
adc
cmc
cdq
and
cmp
xchg
dec
jbe
mov
(bad)
mul
sbb
push
in
pop
es
cmp
fxch
enter
adc
jo
addr16
jmp
sahf
cmps
in
mov
mov
fcom
xor
pop
mov
mov
add
cli
sbb
mov
inc
cs
xchg
aam
in
or
cs
fdiv
mov
sbb
scas
push
outs
sub
lods
mov
sub
or
push
sub
mov
push
daa
cmp
adc
xchg
jno
push
cmps
mov
call
into
dec
mov
push
out
push
xor
jb
cmps
and
rep
outs
sti
aaa
push
jmp
inc
dec
jno
cmp
adc
cmp
dec
sbb
xor
xor
and
cmp
and
call
dec
scas
adc
ss
cs
into
dec
cs
inc
xor
mov
jae
adc
cs
out
jb
icebp
adc
cmp
loopne
or
loope
fdivr
scas
(bad)
jle
into
or
jmp
scas
pop
aas
rcl
cld
cs
addr16
packsswb
test
inc
xchg
xlat
pop
daa
push
jo
jmp
adc
dec
adc
xor
shr
(bad)
scas
in
pop
push
outs
mov
scas
lods
out
inc
cmps
inc
mov
aas
adc
dec
bnd
cld
push
mov
mov
pop
adc
in
fmulp
dec
xor
jle
scas
in
std
cmp
mov
outs
push
pop
les
cmp
mov
rcl
add
dec
cmc
cmp
add
hlt
mov
int3
xor
mov
jge
cmp
xchg
cs
gs
jecxz
cs
cmp
cs
cdq
(bad)
pop
push
mov
retf
add
jne
idiv
les
int3
or
(bad)
mov
je
cs
sbb
xchg
sub
fldenv
xchg
cs
pop
mov
sub
push
xor
outs
adc
fild
cwde
mov
xor
je
jmp
jmp
out
or
bound
mov
xlat
pop
xor
loopne
cs
xchg
or
xchg
dec
aad
xor
ret
hlt
dec
mov
cs
(bad)
jmp
adc
jo
dec
adc
scas
scas
inc
or
mov
test
in
das
shl
mov
ret
or
cmp
(bad)
test
popa
adc
xchg
xchg
mul
ins
fucomi
xor
call
mov
jmp
push
les
iret
leave
jno
imul
add
gs
hlt
fsubr
push
outs
xor
adc
sub
dec
iret
ret
push
(bad)
lds
popf
pusha
movs
jae
test
cld
inc
xor
sbb
leave
rcl
not
cmpxchg
and
shr
loope
add
jl
and
xchg
fcomp
sub
loope
push
push
xchg
arpl
mov
hlt
in
mov
cwde
xor
(bad)
push
xchg
ror
pop
or
inc
adc
push
pop
mov
push
xor
xchg
xlat
mov
daa
inc
fmul
cmc
outs
inc
mov
int
add
bound
(bad)
cs
pop
fistp
cs
and
sbb
scas
mov
cwde
out
cmps
cdq
sub
xchg
shl
fcomp
gs
cs
mov
loop
sub
jbe
iret
mov
ret
push
mov
sar
mov
cmp
ret
repnz
sub
fs
test
add
sbb
xor
cwde
jle
dec
call
jnp
and
pop
adc
cs
cdq
arpl
cmc
cmp
lods
daa
popa
fld
add
outs
in
inc
je
cmp
sahf
js
adc
push
cs
fcom
mov
test
fisttp
popf
arpl
cld
gs
cs
adc
or
sub
div
add
mov
repz
add
lahf
mov
mov
dec
jns
sub
outs
pop
(bad)
imul
mov
pop
sub
movs
outs
jmp
cs
cli
cmp
push
cs
movs
push
in
cs
dec
jno
repz
push
xor
retf
pusha
out
bnd
mov
dec
or
pop
aas
xlat
lods
xchg
cmps
mov
aas
arpl
popa
cs
sub
mov
or
retf
inc
pop
into
rcr
sub
cs
call
outs
into
stos
cs
jne
pop
mov
jae
dec
test
push
adc
(bad)
and
mov
pop
push
or
fimul
xchg
retf
bound
or
push
fadd
cs
out
jmp
mov
(bad)
outs
pop
sub
outs
xor
mov
or
push
xchg
(bad)
xor
xor
mov
test
scas
retf
dec
rol
mov
retf
sti
cmps
mov
pop
pop
idiv
pop
imul
in
mov
dec
push
das
pop
mov
mov
jmp
or
add
leave
fcomp
or
clc
hlt
mov
into
frndint
jnp
ins
and
xor
push
scas
sub
jmp
xlat
push
mov
pop
xchg
loope
xchg
adc
outs
das
push
aad
mov
and
mov
jl
mov
leave
ret
xchg
scas
mov
and
adc
ss
mov
icebp
ss
adc
or
movs
cmc
mov
leave
xor
mov
inc
xchg
(bad)
pop
je
inc
xor
cmps
jnp
add
or
fld
mov
lods
jb
call
rcr
popa
mov
mov
inc
test
mov
aam
movs
and
dec
and
or
xor
jmp
push
sub
aam
mov
dec
repz
adc
jg
test
fs
jmp
sti
bound
sbb
stos
pushf
shr
test
mov
pop
xchg
sub
add
and
outs
lock
test
xor
adc
lea
mov
rcl
sahf
or
fsub
mov
mov
je
les
(bad)
jg
cmc
push
imul
jb
and
xchg
cmp
lock
or
(bad)
cmc
scas
icebp
jge
cmp
pop
call
or
pop
add
jmp
inc
outs
xchg
cmc
sbb
cmp
(bad)
jmp
jge
dec
adc
cs
retf
loope
nop
sub
(bad)
scas
movs
cmps
popa
mov
scas
ret
mov
aam
call
push
cs
sub
(bad)
xor
jae
movs
jecxz
dec
(bad)
dec
add
or
imul
jmp
mov
retf
jge
or
lea
cs
dec
sbb
repz
popa
cs
ret
cdq
test
cmp
adc
adc
ret
dec
sbb
out
push
cs
aas
sbb
data16
pop
cs
icebp
pop
mov
in
mov
xor
inc
mov
xor
inc
outs
push
cs
xchg
jg
js
shr
xchg
or
sbb
adc
daa
cmp
pop
es
pop
icebp
cmp
das
call
std
cmp
ror
xlat
out
sub
shl
adc
repnz
pop
lea
and
shl
cs
dec
fmul
mov
push
pop
(bad)
xchg
not
cwde
jg
cmp
cmp
into
retf
idiv
adc
xor
adc
js
sti
shl
or
or
stos
in
ret
cmp
jp
and
push
dec
jmp
sub
ss
sbb
neg
dec
jnp
sar
add
shl
sbb
daa
fmul
mov
scas
push
mov
(bad)
cmp
test
push
nop
and
retf
sub
jle
shl
mov
push
ss
inc
sbb
and
and
ins
js
xlat
xor
xchg
aam
popa
das
imul
mov
pop
xchg
cmp
jle
(bad)
cs
or
inc
inc
ret
jb
stos
aaa
push
adc
push
cmps
and
iret
add
cmp
call
(bad)
scas
sahf
sar
inc
dec
fimul
jo
(bad)
cs
repnz
ds
out
jbe
sub
add
dec
mov
push
movs
sub
mov
sub
pop
and
jne
in
out
into
cmps
lahf
invd
sbb
scas
imul
jl
xor
clc
push
sbb
mov
repz
jnp
mov
mov
sbb
rcr
in
xchg
cs
(bad)
int3
jecxz
sub
mov
xchg
js
mov
test
mov
mov
and
sbb
call
mov
fwait
pop
(bad)
pop
out
imul
mov
fisubr
cs
xor
or
test
and
popa
aaa
shl
cs
mov
jecxz
shr
int3
jle
mov
dec
bound
je
arpl
pop
sbb
nop
lock
inc
fild
outs
and
xor
jno
(bad)
iret
ins
imul
sub
hlt
adc
sub
(bad)
sahf
add
jae
imul
rol
mov
sub
arpl
mov
cs
in
and
outs
cmps
rcl
xchg
sbb
sub
outs
push
mov
cwde
bound
or
std
xchg
outs
jl
(bad)
push
es
jmp
mov
mov
or
mov
scas
sub
lahf
mov
push
push
add
dec
repnz
adc
jae
arpl
xor
out
inc
or
jge
push
scas
add
aam
xor
xchg
in
dec
xchg
ins
das
xchg
jge
in
aaa
cmc
xor
mov
pop
xor
sub
popa
add
in
jp
jo
enter
into
push
inc
mov
and
movs
pusha
arpl
pop
adc
(bad)
cs
rol
imul
test
loopne
sub
xchg
and
cmps
lods
test
les
ds
mov
inc
add
jge
sub
aad
sub
jl
aam
pop
es
pop
mov
int3
lea
popf
xchg
sbb
adc
sub
and
xchg
push
(bad)
xchg
cmp
mov
cs
outs
(bad)
mov
mov
xor
add
mov
inc
sub
mov
outs
jne
popa
lods
or
and
arpl
mov
sub
icebp
ss
lods
mov
rol
adc
gs
mov
push
mov
out
retf
xchg
rol
dec
inc
push
adc
fdiv
test
cs
adc
cs
(bad)
xchg
cmps
cld
rcr
sub
(bad)
push
jns
ret
cs
add
push
adc
sub
jg
jno
outs
mov
and
inc
out
imul
jl
mov
in
adc
inc
scas
ss
aaa
ret
and
fcom
scas
in
push
add
jnp
cs
push
fsubr
sub
mov
aas
dec
push
dec
fisub
xchg
call
xor
and
test
aas
jge
pop
inc
adc
repnz
(bad)
ins
sub
xor
fistp
out
fnstenv
test
jl
or
loope
int
inc
cs
cmp
mov
bound
div
iret
int
(bad)
clc
jmp
sbb
cdq
inc
xchg
jbe
out
ins
gs
enterw
fimul
imul
mov
mov
clc
xor
out
and
xchg
jo
cdq
ret
cs
cmp
ja
fwait
or
addr16
arpl
ret
sbb
sbb
cs
pop
nop
int3
frstor
add
and
xchg
add
mov
mov
call
and
push
push
mov
sbb
nop
fwait
ja
arpl
js
repnz
daa
daa
push
inc
xchg
jl
outs
dec
int3
loopne
mov
push
sbb
rcr
mov
mov
pop
cmps
xchg
(bad)
mov
or
jmp
lea
cpuid
push
mov
inc
cs
mov
in
cs
push
rcl
out
mov
cs
imul
adc
mov
out
loope
jmp
xor
mov
retf
jo
cs
pop
fisub
jge
sbb
daa
sbb
mov
cmps
js
cs
iret
inc
inc
popa
push
das
out
mov
cmp
adc
scas
imul
sub
fisub
mov
stos
std
push
in
cmp
cmp
arpl
xchg
mov
scas
outs
xor
push
(bad)
cwde
pop
test
arpl
gs
call
push
icebp
mov
and
retf
rcr
leave
clc
test
outs
(bad)
(bad)
mov
rol
cs
sub
cmc
cs
xor
dec
(bad)
cs
xor
jns
and
rol
push
sub
jmp
(bad)
jmp
cmp
dec
shl
mov
jns
sub
jmp
mov
pop
pop
sbb
cdq
shl
mov
dec
and
fs
jmp
lods
aas
add
push
xor
mov
mov
scas
(bad)
int3
fsubr
inc
mov
ja
sbb
cmp
push
add
inc
mov
push
test
push
dec
mov
dec
or
sub
push
sub
les
popa
shr
mov
ss
xor
xor
fs
xchg
aas
add
lds
push
test
sbb
push
dec
or
or
mov
scas
mov
xchg
mov
stc
daa
iret
movs
sub
dec
outs
cmps
mov
psllw
cs
inc
sbb
sti
cs
es
push
push
cmp
ins
scas
cmp
pop
sti
cs
push
arpl
cs
call
cwde
cs
shr
inc
jge
sub
xchg
scas
cs
xor
shr
cs
jp
sub
imul
cmps
xor
mov
fldpi
imul
mov
iret
fld
jno
(bad)
jbe
mov
sbb
sub
in
and
mov
iret
neg
fisub
xlat
cwde
fldcw
mov
and
cs
lods
int3
and
mov
fmul
jns
and
ret
push
aaa
and
sbb
lods
mov
pop
cmp
add
(bad)
repz
dec
xchg
jmp
stc
outs
and
mov
push
nop
out
xlat
adc
mov
mov
pushf
in
popf
xor
mov
inc
fmul
les
(bad)
cmp
jno
(bad)
mov
jl
xor
jnp
or
cwde
pop
adc
stos
mov
cs
jecxz
lods
daa
mov
and
jne
scas
aam
retf
rcl
mov
mov
scas
ss
jge
imul
mov
sub
xchg
in
std
pop
test
push
fcmovne
imul
(bad)
cwde
cli
fmul
mov
sub
hlt
ins
cmp
sub
mov
adc
(bad)
xchg
into
inc
rcl
mov
out
(bad)
push
in
aam
and
into
mov
push
inc
jo
leave
std
mov
adc
jmp
(bad)
mov
shl
and
push
fistp
jp
and
xchg
mov
jnp
jl
scas
(bad)
daa
xor
dec
xchg
cmp
or
imul
in
push
out
or
push
xlat
std
ds
(bad)
cli
adc
cmp
into
dec
mov
(bad)
pop
fsqrt
fdivr
retf
xor
imul
cmp
cmp
sbb
or
add
adc
(bad)
(bad)
dec
shr
(bad)
sti
mov
mov
js
stos
sub
test
call
in
jne
scas
test
push
jle
pop
out
mov
scas
mov
retf
test
popf
fsub
mov
mov
sub
xor
test
repz
ror
xchg
(bad)
push
or
jmp
enter
fimul
retf
and
hlt
sub
inc
fld
call
es
test
stos
mov
lahf
mov
retf
aam
jnp
js
xchg
in
cdq
cli
lods
mov
(bad)
jge
jmp
jle
xor
out
fmul
xchg
xchg
push
xor
loope
(bad)
shr
scas
dec
clc
xchg
fsubr
(bad)
jmp
sub
push
inc
movs
lods
jmp
rcl
cmps
push
(bad)
pop
out
fdivr
pop
and
test
xor
into
jne
add
and
fwait
cmps
pop
inc
push
add
pop
mov
aas
pusha
mov
rol
test
sbb
xor
(bad)
jmp
imul
mov
mov
and
cs
mov
outs
pushf
mov
push
inc
lods
add
mov
cs
xor
pop
cmc
mov
in
add
lahf
scas
je
mov
fistp
test
mov
inc
mov
call
sahf
mov
xchg
jne
ror
(bad)
lds
mov
leave
xchg
popa
or
popf
pushf
jb
mov
fs
mov
cs
add
pusha
shl
inc
aam
and
cmc
mov
xchg
cmp
popa
scas
(bad)
call
imul
mov
xchg
push
xchg
ins
xor
pushf
pop
jmp
add
pop
or
test
cs
enter
out
adc
(bad)
sub
or
out
call
dec
fist
jle
enter
and
pushf
rol
push
sbb
cld
ins
fild
xchg
nop
cmp
adc
pop
shl
outs
jl
pop
push
test
cs
cmp
out
retf
aas
xchg
fstp
test
cs
shr
mov
mov
outs
cs
fwait
inc
jp
cmc
xchg
stos
aas
and
daa
mov
fld
cli
add
and
loopne
ret
cwde
mov
into
pop
or
sub
pop
mov
ret
sti
pop
pop
dec
jp
fidivr
and
leave
ret
out
xchg
jl
adc
add
xchg
popa
push
cs
mov
pop
push
cmp
ud2
adc
or
shr
pop
int
(bad)
das
pop
out
and
test
in
into
inc
cmps
pop
jle
outs
pop
test
lds
scas
or
cs
cmp
dec
out
imul
adc
in
repnz
das
fcomp
mov
rcr
out
xchg
sbb
sahf
pushf
mov
sub
mov
rcr
sub
(bad)
daa
xlat
clc
add
mov
fstp
(bad)
adc
mov
call
mov
or
retf
jno
mov
sub
outs
add
mov
int
dec
test
daa
add
scas
addr16
dec
mov
adc
bswap
and
stos
loop
(bad)
into
aad
pop
outs
movs
repz
cs
in
xchg
xchg
fwait
ror
mov
sub
push
mov
outs
push
push
cs
es
sub
and
fidivr
sbb
mov
(bad)
xchg
xchg
cmp
loop
cs
test
sub
mov
xchg
jge
outs
retf
out
(bad)
maskmovq
xor
sbb
jmp
pop
dec
push
ror
shr
es
inc
mov
into
out
dec
loopne
prefetch
sbb
jmp
pop
mov
cs
(bad)
and
mov
xchg
movs
xor
sbb
aam
repz
int
loope
mov
and
sbb
xor
adc
in
and
push
mov
or
ss
push
jmp
retf
fdiv
pop
gs
bound
into
inc
enter
push
or
ror
ret
jecxz
ret
sub
(bad)
cwde
mov
push
cmp
sub
scas
fiadd
jns
sub
fld
add
adc
dec
retf
mov
mov
dec
push
mov
dec
nop
ret
pop
jae
mov
mov
push
lock
movs
jmp
fist
int3
add
sahf
cld
into
sahf
fadd
and
(bad)
adc
std
hlt
shr
fmul
mov
push
les
fmul
rol
cmps
mov
cs
test
mov
pop
cmovg
test
or
mov
stos
sub
xchg
nop
jmp
fisubr
addr16
scas
jecxz
in
sbb
inc
ss
test
mov
test
addr16
jns
mov
xchg
or
fidiv
and
jne
mov
ins
mov
frstor
into
enter
xchg
popf
cmc
hlt
add
out
push
pusha
arpl
sbb
fwait
imul
outs
mov
xlat
adc
xor
out
shl
sub
aad
and
imul
sub
movs
mov
and
dec
sbb
dec
cs
pop
lock
test
mov
adc
jmp
aam
inc
and
rcl
sti
fidiv
cs
pop
mov
aam
xor
es
scas
mov
inc
or
cli
repnz
hlt
sti
nop
aad
xor
xor
into
cs
frstor
push
xchg
cwde
daa
sar
(bad)
enter
push
add
sub
sub
hlt
scas
or
push
mov
jae
add
push
mov
mov
retf
push
jmp
leave
add
dec
lock
das
fldcw
std
daa
mov
jg
mov
and
int
scas
sub
cs
jmp
mov
pop
push
aas
and
in
jbe
imul
xlat
(bad)
xor
pop
scas
add
stc
(bad)
(bad)
outs
out
dec
ins
mov
or
push
jns
mov
mov
xor
mov
push
xor
test
sar
in
icebp
outs
xchg
hlt
loop
(bad)
xor
jmp
xchg
ss
cmp
pop
mov
cmc
mov
sub
sub
loope
scas
shr
xchg
test
jmp
jbe
fsub
ja
dec
into
imul
sbb
in
adc
sub
xchg
stc
shl
cmp
gs
push
(bad)
push
ret
xlat
scas
mov
add
cs
mov
xor
iret
sbb
out
xchg
xor
and
add
cmp
dec
in
fadd
imul
dec
mov
fild
cmp
js
mov
bound
pop
dec
jp
(bad)
scas
push
call
or
inc
push
aam
jbe
pusha
jo
xchg
aas
adc
nop
outs
out
inc
sub
leave
dec
cs
out
mov
cmp
dec
jmp
in
mov
cs
dec
(bad)
int
jae
retf
(bad)
and
adc
loopne
and
or
(bad)
xor
test
data16
mov
cmps
das
adc
cmp
push
xlat
fist
(bad)
icebp
and
pop
jbe
imul
mov
ss
in
add
jno
pop
out
dec
push
sbb
stos
xor
sub
rol
xor
je
ret
das
or
dec
leave
mov
cmp
fld
(bad)
cdq
test
loop
and
jmp
pusha
xchg
jl
push
stos
push
es
mov
lods
fdiv
mov
leave
xor
sbb
jg
xchg
mov
mov
ins
mov
jl
push
in
sub
cdq
test
pop
jno
test
mul
or
lods
mov
nop
hlt
sub
aam
adc
sub
adc
cmp
pop
lods
mov
leave
cld
cmp
xchg
popf
(bad)
xchg
fcom
and
sbb
or
mov
xor
lods
cmp
test
jmp
jmp
push
(bad)
out
inc
enter
mov
fs
in
add
add
or
xchg
mov
idiv
(bad)
jns
fdivr
aaa
mov
and
shl
ja
cmp
(bad)
lods
mov
mov
mov
mov
pusha
cmps
add
fdiv
jge
mov
aad
ja
push
mov
cmp
fcom
push
lea
xor
fstp
mov
mov
and
push
mov
sub
sub
iret
nop
jecxz
vpsubw
push
inc
ret
enter
dec
xor
sti
ret
adc
mov
push
stos
imul
inc
cmp
fcom
mov
lods
es
fldcw
sub
paddusw
stc
sub
loop
(bad)
ss
in
or
retf
(bad)
jp
aam
arpl
pop
mov
leave
cli
fcmovnbe
test
imul
push
iret
cmp
lods
add
outs
sbb
movs
xlat
push
es
scas
mov
push
fldcw
adc
jne
in
(bad)
cmp
sbb
push
add
mov
gs
fsin
sub
add
mov
inc
les
test
sbb
cmc
(bad)
mov
xor
aas
dec
jge
daa
ss
ja
jp
out
mov
adc
ins
scas
push
ret
pop
add
inc
loopne
(bad)
(bad)
shr
inc
xor
std
out
in
cs
push
mov
pop
int
dec
jl
adc
push
cmp
test
fmul
pop
cmp
and
xor
ficomp
xor
outs
xchg
(bad)
call
fisttp
je
mov
mov
dec
jmp
sub
inc
and
test
(bad)
scas
xor
adc
or
mov
cs
xchg
push
cmps
cs
push
sahf
(bad)
xor
push
fcomi
(bad)
xchg
cs
aam
fld
or
cs
aas
sar
jg
and
xor
pop
outs
sub
fmul
bound
push
sbb
mov
pop
imul
in
(bad)
out
loope
es
mov
in
xor
mov
pop
or
mov
xchg
aas
test
outs
mov
call
xor
dec
or
sub
mov
cs
add
sub
loop
(bad)
sbb
xor
mov
sub
fisubr
lahf
or
inc
scas
dec
cs
mov
jl
adc
or
out
mov
cwde
sub
daa
inc
stos
aam
fisubr
sbb
push
mov
repz
rol
test
mov
sbb
data16
out
scas
in
dec
mov
jnp
adc
outs
and
push
cs
sbb
push
or
enter
jb
push
jo
jnp
jbe
xor
test
out
mov
in
mov
push
test
(bad)
push
push
adc
pop
pop
int
xor
jge
shr
push
leave
fwait
add
rcl
adc
call
cmp
dec
jo
push
leave
jmp
lock
imul
cwde
test
jmp
mov
mov
aam
push
les
mov
(bad)
in
cwde
jg
shl
aas
or
dec
sti
or
sti
add
cmp
mov
and
or
inc
addr16
push
mov
xchg
repnz
mov
and
out
add
ds
aaa
inc
mov
jge
and
test
fcomp
and
div
popa
push
push
movaps
data16
outs
(bad)
es
xor
in
inc
stos
sub
inc
test
daa
test
and
ja
ret
clc
aad
std
imul
jl
cs
inc
fcomp
outs
jno
loop
pop
adc
push
adc
das
ldmxcsr
(bad)
sahf
nop
fstp
ins
xchg
cs
lods
(bad)
into
mov
mov
fidiv
add
clc
loope
sbb
adc
imul
leave
das
xchg
xlat
popa
pusha
jmp
fisubr
cmps
aas
repz
and
aad
sub
in
mov
scas
data16
out
xor
add
sub
cld
cs
clc
es
repnz
out
push
inc
dec
lock
daa
sbb
cs
sub
hlt
movs
pushf
sbb
pop
outs
mov
loope
cs
mov
cs
mov
add
cs
or
(bad)
mov
cs
add
std
cs
sahf
inc
(bad)
test
cs
xor
pop
outs
or
test
xor
iret
clc
in
dec
into
jmp
or
data16
or
mov
and
sar
loope
sub
xor
dec
or
push
repz
(bad)
call
mov
pop
sub
mov
add
shl
inc
loopne
adc
pop
(bad)
int
mov
ja
cwde
xor
fnstcw
out
add
jo
push
out
pop
mov
inc
mov
cwde
xor
sahf
xchg
lods
xchg
fiadd
sub
sub
test
add
popa
scas
push
cmps
cmc
sub
call
aad
ss
xlat
jmp
mov
mov
scas
enter
pop
imul
repnz
jne
xchg
int3
icebp
test
ins
push
sub
xlat
(bad)
sbb
ret
(bad)
jle
ja
and
mov
push
in
mov
mov
cmc
sub
push
scas
mov
lods
push
dec
push
(bad)
test
xchg
repnz
cs
xchg
mov
mov
jg
or
push
mov
lods
or
ins
sahf
push
and
leave
push
xchg
(bad)
pusha
cs
add
pushf
lock
cs
lds
ficomp
pop
int
imul
popf
dec
jmp
shl
mov
pusha
jo
scas
stos
mov
add
mov
iret
rol
and
cs
into
lahf
pusha
leave
or
or
xchg
addr16
stos
fnstcw
push
lock
sbb
scas
das
in
inc
scas
jmp
clc
or
out
dec
and
sar
sub
cmp
or
or
loop
mov
xchg
popa
pop
and
jl
cmps
mov
mov
fld
or
inc
adc
jg
xchg
sbb
jo
push
push
ss
push
ins
xchg
dec
lods
adc
xchg
call
dec
jl
jnp
sub
push
fs
sub
mov
pop
das
je
lods
test
and
adc
loop
and
mov
jge
jb
jge
(bad)
mov
sbb
mov
out
scas
inc
mov
sub
mov
iret
add
test
call
jbe
test
bswap
(bad)
push
dec
sub
xor
pop
sub
adc
xor
call
bound
cmp
push
mov
inc
ins
(bad)
xor
clc
sub
add
repnz
js
out
pop
scas
xor
cs
test
pop
or
pop
or
cs
cmp
mov
js
mov
inc
or
pop
push
sbb
outs
imul
adc
cmc
loopne
cmps
sub
fwait
dec
test
cs
jne
(bad)
ss
dec
shl
sub
ins
ja
and
cli
stc
fwait
shr
aas
or
js
dec
ret
das
xlat
cs
inc
pop
cmp
xor
addr16
mov
call
js
cs
lds
in
(bad)
fld
jo
int
das
xor
sbb
cwde
scas
ds
adc
repnz
dec
stos
push
cs
nop
inc
and
push
popa
xchg
enter
movs
cdq
dec
gs
dec
add
mov
lods
in
mov
mov
dec
mov
ret
cdq
jle
cs
pop
loop
rcl
and
and
xor
and
test
and
xchg
fistp
mov
or
mov
sub
aaa
fisub
pop
cmp
and
retf
xchg
and
cvtdq2ps
ret
dec
mov
movs
shl
mov
xor
retf
push
jno
or
cmp
adc
cs
int
mov
add
jecxz
cs
jl
add
dec
inc
ror
repz
cs
and
adc
fidiv
cmp
ins
les
cs
cmc
int
inc
lock
lahf
xor
rcl
daa
sub
ror
sub
inc
jo
fild
xchg
sub
push
cmp
(bad)
shl
cmps
sub
jmp
push
cmp
cs
mov
dec
bound
les
stos
std
ja
nop
jl
pop
dec
pushf
cmp
cmps
jecxz
imul
xchg
arpl
pushf
mov
cdq
mov
mov
jp
das
out
dec
xchg
les
addr16
cs
add
and
out
gs
and
sbb
popf
xchg
sahf
inc
push
add
sub
xchg
(bad)
adc
(bad)
jne
mov
add
and
sub
sahf
out
xor
les
cs
pushf
das
sbb
xchg
lods
aam
jmp
xchg
shl
dec
and
cmp
fimul
dec
in
inc
nop
dec
out
imul
xchg
test
ret
dec
add
aad
mov
mov
xor
out
cs
sub
loopne
push
jecxz
mov
mov
cs
or
stos
(bad)
push
popa
add
fstp
popf
mov
ficomp
mov
(bad)
or
mov
adc
mov
jp
push
cs
out
lods
out
call
mov
add
xchg
xchg
addr16
xor
scas
jno
(bad)
mov
push
add
sbb
and
adc
imul
out
ss
xchg
add
cmps
push
(bad)
push
xchg
ja
add
sti
lds
xor
js
push
test
push
into
lds
jmp
call
stos
cmp
push
sub
jp
jecxz
mov
mov
mov
mov
pop
mov
jecxz
or
scas
ss
xchg
daa
cs
int
loopne
cdq
sbb
stos
sbb
add
in
xchg
cmp
jp
cmp
xchg
and
fsubr
outs
(bad)
mov
icebp
push
not
clc
popa
scas
test
adc
out
mov
(bad)
cs
inc
stos
pop
int3
cmp
and
dec
sbb
out
jl
lock
or
cwde
xchg
dec
jmp
inc
mov
mov
cs
out
mov
rol
push
and
cmp
popf
mov
call
push
iret
cmps
loope
mov
leave
ja
xchg
in
sub
add
outs
add
jmp
test
out
stos
or
cmps
sbb
outs
add
and
call
sub
outs
mov
scas
popa
jge
mov
es
repnz
xor
paddusw
jmp
scas
and
rcl
mov
cmp
scas
mov
fsubr
shr
adc
in
stos
xchg
push
in
mov
xor
je
cs
sub
xor
mov
add
push
sub
mov
scas
sbb
and
mov
adc
cmp
stos
scas
sub
push
jno
or
jb
pop
cs
inc
mov
mov
ins
jle
(bad)
out
xchg
fld
stos
and
and
or
sub
add
(bad)
out
scas
imul
dec
add
and
cmps
stc
cs
movs
loopne
leave
(bad)
and
adc
cs
inc
jl
mov
(bad)
in
dec
mov
jnp
cdq
dec
movs
(bad)
nop
test
dec
bound
imul
rcl
cs
sub
sar
int
xor
call
sbb
sub
fiadd
push
lahf
jmp
and
mov
movs
cs
fucom
stos
mov
rcl
xchg
int3
xchg
dec
push
lds
jmp
adc
int
outs
jg
push
jmp
retf
test
sub
bswap
int
xchg
cmps
out
sub
and
jne
push
adc
sub
dec
nop
push
or
dec
and
in
fs
(bad)
sub
inc
adc
dec
ds
cmp
xchg
add
inc
xchg
jp
cmps
pop
ins
mov
scas
jae
sahf
into
pusha
mov
jmp
in
test
inc
jp
dec
push
xchg
xchg
cs
outs
push
imul
jg
stos
mov
ds
xchg
sti
xor
or
cs
cdq
das
inc
xor
ins
mov
xor
aad
in
jmp
fstp
cs
adc
(bad)
imul
inc
(bad)
(bad)
xor
cs
pop
mov
jl
(bad)
into
sub
stos
or
int3
mov
sbb
lock
push
mov
fwait
inc
idiv
push
mov
jno
mov
cs
stos
push
mov
fcomp
push
sbb
xlat
fs
mov
fcom
xchg
aam
xor
sub
scas
dec
cdq
les
mov
rcr
dec
cs
adc
xor
jb
xor
and
jl
sbb
les
xchg
add
dec
outs
mov
xchg
xor
sub
out
cs
fidivr
xor
lods
mov
jb
cmp
imul
jo
sti
xor
fisubr
call
(bad)
adc
push
mov
int3
and
mov
fld
cmc
out
jmp
(bad)
enter
cld
cs
push
in
sbb
and
mov
adc
fcomp
push
cs
outs
inc
push
sub
push
cs
mov
xor
sub
cmp
mov
xor
jns
push
sbb
xor
pop
ret
(bad)
cdq
outs
sbb
sub
mov
sub
scas
sub
jb
(bad)
daa
aaa
cmp
sub
fisubr
fwait
mov
outs
iret
pusha
inc
mov
dec
shl
xor
fdiv
pop
sub
test
adc
jge
mov
inc
cmp
shr
in
mov
push
adc
fstp
and
movs
je
es
call
loope
idiv
jge
out
mov
sub
fisub
adc
stos
retf
cmc
sbb
dec
jbe
cmp
loop
cmps
adc
sub
cmps
sbb
inc
sub
push
mov
mov
scas
mov
sbb
rcl
xor
and
lock
jb
mov
sub
adc
xchg
push
sub
or
aam
fwait
int3
je
ds
(bad)
mov
pop
and
xchg
jne
or
inc
mov
jbe
xor
pop
mov
mov
mov
or
mov
jns
mov
icebp
ja
leave
mov
loopne
scas
cli
mov
sub
sbb
stos
pop
out
aam
imul
jbe
adc
leave
push
idiv
stos
int
dec
mov
aas
fs
add
push
mov
(bad)
fs
outs
fs
jbe
outs
ja
mov
test
inc
mov
xor
jno
mov
push
mov
std
(bad)
pop
cmp
movs
imul
cmp
inc
push
jne
dec
pop
in
cs
fwait
in
frstor
adc
test
lahf
bound
(bad)
retf
in
dec
es
push
in
test
shr
retf
(bad)
imul
xor
data16
adc
sbb
dec
ins
push
mov
stos
xor
pop
xchg
test
jge
mov
xchg
lock
jmp
icebp
mov
lahf
test
sub
sub
fnstsw
sbb
dec
adc
push
and
cld
(bad)
push
in
pop
mov
sar
pop
ja
sub
push
add
(bad)
int
out
(bad)
jnp
ja
jo
mov
bnd
or
and
xchg
jl
mov
mov
sahf
xchg
push
xor
ja
mov
xor
jnp
or
pusha
dec
and
cmp
cmps
sub
mov
jge
int3
data16
mov
pop
fsubr
ds
pop
mov
repnz
mov
push
add
pop
test
out
retf
mov
push
aam
mov
cmps
add
jg
sub
loop
push
cmp
aaa
leave
push
hlt
inc
jp
cmp
dec
sub
dec
imul
sbb
lods
cmp
adc
add
(bad)
sbb
xor
ficom
jle
jge
jb
mov
sahf
sub
popa
inc
mov
dec
sahf
ret
daa
xor
mov
scas
push
mov
(bad)
enter
sbb
or
in
mov
aaa
arpl
shr
inc
mov
cs
add
aad
or
mov
fisub
inc
or
sbb
lahf
cs
or
jns
fild
dec
sbb
shl
popa
adc
les
mov
cdq
fdiv
call
pop
(bad)
cs
repnz
cs
mov
mov
mov
mov
mov
rol
(bad)
mov
iret
dec
ss
fld
cld
xchg
ja
cmps
inc
xchg
int
xor
loop
sub
adc
add
push
push
sbb
fdivr
test
loope
test
movs
mov
movs
xchg
aam
lods
(bad)
rcr
les
cs
add
popa
int3
push
out
ss
daa
push
jmp
leave
je
mov
rol
jg
popf
push
fisttp
mov
pop
in
movs
mov
lods
xchg
and
test
pop
xor
aad
daa
lock
call
aas
mov
mov
das
sub
mov
sub
mov
jp
in
xor
mov
mov
out
adc
sub
ins
inc
pop
daa
inc
jae
or
imul
aaa
or
lea
popf
mov
sub
ret
in
inc
sar
push
sub
mov
in
dec
(bad)
(bad)
popa
cs
ds
push
inc
es
xchg
pop
sbb
sub
jne
cmps
fwait
loop
mov
sti
(bad)
and
fcmovnu
cs
mov
jecxz
adc
dec
push
popf
mov
fadd
cs
ror
mov
mov
inc
jmp
outs
(bad)
cs
add
sbb
test
fwait
outs
out
fldcw
cmc
push
mov
pop
inc
sub
mov
test
xchg
pop
xchg
sbb
push
xor
aad
sahf
imul
call
int
cs
add
sbb
call
mov
xor
fcom
add
imul
pop
psllq
cs
stos
ror
push
aam
shl
mov
sub
mov
or
mov
idiv
imul
sbb
dec
push
pop
aas
sub
neg
into
push
sub
hlt
test
leave
gs
mov
pusha
ror
mov
mov
mov
jg
mov
arpl
cmp
push
(bad)
sub
jo
mov
push
cli
pusha
and
add
mov
jb
adc
pop
push
mov
jnp
hlt
les
mov
dec
out
retf
cs
pop
(bad)
enter
and
call
cmp
jae
or
push
cs
pop
push
add
nop
mov
vucomiss
push
out
cs
fldcw
jae
dec
push
cmp
aaa
jbe
adc
call
mov
(bad)
icebp
jae
in
xor
jo
inc
enter
ret
pop
fdivr
stos
cmp
cld
lods
cs
cmps
dec
out
pop
fcom
out
ins
int3
sahf
mov
rcl
cs
cmc
inc
fs
or
pop
repnz
add
xchg
mov
imul
movq
ins
mov
popa
cs
jmp
push
int3
fstp
daa
daa
fs
jo
movs
adc
das
scas
mov
mov
test
or
push
pop
retf
push
into
imul
inc
xchg
lahf
pop
push
daa
mov
sub
pop
ins
xor
jbe
ror
push
push
mov
test
sub
xchg
scas
xor
out
jae
mov
ins
ja
sub
xchg
cmps
cmp
mov
imul
loop
add
sti
mov
pop
into
in
out
and
retf
arpl
scas
daa
fxch
rcr
jmp
cs
js
and
pop
shr
ins
nop
arpl
cs
shr
jp
xchg
jg
sub
lds
cdq
and
jno
inc
fld
retf
sti
mov
mov
loop
and
cmp
dec
xor
sub
lahf
cmp
cmp
add
popf
popa
adc
inc
mov
imul
xchg
ins
rcr
mov
test
leave
mov
inc
(bad)
push
xor
dec
sub
cli
pop
mov
pop
pop
adc
sahf
cmps
xlat
movs
mov
and
sub
inc
hlt
popa
mov
cli
push
sub
pushf
cmp
addr16
inc
pop
or
dec
jl
not
mov
add
pop
push
int3
cmp
jo
aaa
pop
shr
jl
xchg
mov
pop
fisubr
cwde
mov
jmp
mov
or
push
mov
call
imul
cmp
jg
dec
pop
pop
cs
inc
lock
imul
sub
shl
xor
fs
shl
dec
mov
mov
in
xchg
test
addr16
jle
push
outs
sbb
stos
mov
rol
push
enter
cs
cdq
add
adc
push
cs
stc
mov
and
push
lds
ja
xchg
cs
mov
sub
cs
addr16
push
ss
mov
cs
sub
into
shr
push
fwait
jne
push
ins
pop
or
clc
movs
and
lds
dec
test
sub
pop
mov
cmp
push
scas
adc
jmp
xchg
or
sub
cs
setnp
fsubr
leave
pushf
mov
loopne
sahf
(bad)
or
cmc
cs
mov
add
je
cs
or
and
(bad)
mov
sbb
or
ja
in
dec
jnp
cmp
push
push
test
je
in
loope
xchg
rol
or
not
cs
add
data16
xchg
mov
push
mov
mov
out
hlt
int
popa
push
imul
gs
retf
aas
push
adc
outs
icebp
ret
mov
enter
fwait
daa
xor
adc
pop
or
jmp
mov
mov
add
int3
sbb
psubusw
mov
mov
cwde
rcl
push
pop
aas
imul
cmps
xlat
les
ret
mov
pop
inc
xchg
and
add
loope
xchg
or
cmp
sub
jl
clc
ficom
and
pusha
cmp
cld
daa
push
clc
test
jnp
inc
xchg
ins
jb
mov
sbb
in
or
cs
clc
push
jg
in
mov
cs
push
jmp
cmps
stc
mov
mov
xchg
shr
xchg
out
lods
mov
xchg
pop
sub
stos
das
ror
aas
scas
inc
jecxz
push
cmc
jno
retfw
mov
mov
jmp
dec
adc
add
sub
ins
aas
out
mov
sub
pop
dec
mov
mov
hlt
and
popf
es
cs
mov
mov
sbb
cld
adc
mov
mov
cs
cmp
xor
xchg
and
xchg
inc
jno
cs
mov
sbb
sar
daa
mov
jb
dec
ficom
cs
jo
xor
fnsave
inc
xlat
jmp
imul
push
outs
ror
push
cmp
scas
shl
scas
sub
mov
and
movs
push
cdq
push
add
aaa
xor
mov
int
movs
outs
fstp
push
jecxz
and
in
imul
add
mov
sbb
inc
push
inc
test
inc
add
or
jle
scas
xchg
xchg
add
fist
call
cs
pop
and
retf
jle
xchg
(bad)
xchg
cmp
call
outs
cmp
movs
sub
sub
inc
mov
sbb
loope
sub
or
out
pop
or
adc
xor
loopne
mov
ja
jnp
push
sbb
out
(bad)
and
cmps
and
imul
cmp
mov
aam
sub
and
push
das
xor
test
mov
call
daa
loope
cmc
popa
ins
sbb
data16
xlat
sub
xor
cs
imul
mov
lea
mov
js
rol
icebp
jb
cs
xchg
movs
shl
je
lods
or
or
inc
jl
std
in
xor
xchg
ins
scas
jmp
ucomiss
movs
mov
or
cmps
sahf
cwde
cmps
outs
mov
shr
cmp
fucomip
pusha
sub
cdq
repnz
xor
enter
ins
sub
out
das
xchg
sbb
imul
pop
mov
(bad)
cmp
out
ja
jge
fidivr
adc
xchg
jp
add
jb
test
or
push
mov
add
push
je
xor
fisub
add
jmp
lods
push
push
pcmpeqb
fist
arpl
mov
pop
(bad)
fild
addr16
push
ss
fiadd
or
out
adc
(bad)
push
sub
push
clc
or
mov
dec
jp
push
leave
inc
repnz
test
mov
and
inc
and
add
xor
dec
int3
inc
dec
loopne
or
adc
addr16
fwait
out
nop
mov
xlat
loope
lods
mov
mov
clc
lods
push
es
adc
enter
push
dec
leave
cmc
add
pop
and
push
fsub
fcmovnbe
test
jg
dec
scas
cdq
out
lods
fsubr
ret
mov
push
aas
mov
out
mov
cli
mov
std
sar
(bad)
jbe
scas
pop
data16
cmp
xor
dec
sub
dec
je
xor
(bad)
add
inc
ret
add
hlt
or
and
push
inc
loopne
rol
(bad)
lds
stos
mov
adc
adc
cwde
push
jg
adc
cs
or
cmc
add
jmp
pop
sbb
adc
stos
popa
cmp
or
jbe
lock
jmp
mov
cmc
jg
push
jbe
call
outs
call
mov
cmps
jb
jo
pop
movs
addps
scas
das
enter
int3
cs
fmul
mov
out
add
xlat
sub
push
cs
and
or
sahf
int
xchg
ds
imul
push
fs
cs
(bad)
stos
pushf
cmp
imul
and
jo
inc
movs
pop
into
dec
(bad)
xchg
sub
cmp
mov
arpl
(bad)
lea
sub
cmp
gs
sbb
scas
push
inc
rcl
xchg
mov
push
and
push
sbb
push
or
cmp
jle
mov
dec
scas
add
pop
and
or
je
(bad)
mov
mov
leave
add
push
push
cmp
cs
imul
retf
bound
push
push
inc
data16
scas
inc
sbb
push
inc
scas
add
sar
xchg
sti
mov
test
mov
pop
pop
push
das
movs
jg
xchg
mov
ret
jecxz
arpl
push
xor
adc
lods
push
stos
cli
mov
in
sub
retf
add
aas
push
xchg
adc
sahf
popa
xor
lods
adc
push
dec
jae
fistp
cmp
pop
scas
pop
ins
inc
or
cs
lahf
or
pusha
lock
cs
inc
dec
fdiv
aam
ja
xchg
mov
out
out
scas
xchg
mov
xor
dec
ss
int3
cs
adc
aaa
add
inc
push
push
fidiv
ds
les
imul
test
pop
lods
ret
int3
inc
cmp
dec
or
(bad)
fs
mov
push
call
pop
adc
(bad)
fbld
push
sub
mov
cmps
and
mov
pop
loopne
mov
test
mov
xor
add
mov
iret
cmp
cs
adc
jnp
retf
fwait
xlat
xor
jo
inc
cmp
xor
repz
sub
cs
adc
ret
lds
inc
(bad)
(bad)
jecxz
or
push
lods
aas
dec
lods
push
jle
cld
int3
outs
mov
fbld
add
sub
mov
aas
lock
retf
imul
fidiv
add
and
mov
push
les
jnp
mov
daa
mov
xlat
cwde
iret
mov
pop
test
scas
add
or
pop
xchg
out
int3
cwde
dec
cs
enter
stos
push
daa
sar
sbb
into
(bad)
int
icebp
int3
fisubr
xchg
mov
sahf
dec
mov
adc
mov
in
dec
and
fwait
add
lods
xor
scas
into
dec
adc
cs
rol
rol
sub
ss
pop
mov
xor
scas
cmp
rcl
cmc
gs
call
fld
(bad)
cmp
pop
xor
xchg
jmp
cs
addr16
inc
out
fadd
cld
adc
cmps
stos
or
out
push
loope
pushw
js
xor
daa
je
push
gs
jecxz
mul
mov
jmp
or
dec
in
(bad)
cs
or
jno
and
push
loopne
push
mov
pop
mov
add
cs
jmp
cld
push
jp
cli
or
dec
add
jae
and
push
xor
sub
mov
scas
jmp
and
adc
and
xchg
jae
xchg
(bad)
lock
loopne
je
jo
push
push
xchg
dec
loopne
adc
adc
cli
cdq
jns
fimul
icebp
inc
or
sbb
inc
mov
xor
test
cmps
(bad)
repz
add
das
enter
xor
mov
xlat
fwait
inc
sbb
stos
adc
daa
inc
xor
inc
cmp
add
add
pop
mov
mov
jne
jns
pop
cs
aam
push
shl
and
mov
push
adc
out
mov
dec
mov
test
cmp
jecxz
shl
xchg
push
mov
cs
and
mov
push
mov
sbb
mov
push
jp
test
cmc
hlt
scas
or
or
cs
mov
and
movs
xchg
fcom
imul
mov
dec
xor
ror
jne
jae
mov
outs
ins
call
and
pop
xor
cs
addr16
mov
push
mov
inc
int
out
fwait
push
pop
cs
xlat
mov
mov
mov
rol
(bad)
pop
or
cs
dec
jmp
pop
cs
sub
and
ret
jmp
in
push
clc
add
retf
mov
js
aam
cs
test
leave
or
movs
daa
cmp
stos
push
sub
mov
adc
(bad)
and
loopne
push
sub
data16
loope
push
sub
mov
mov
das
xlat
out
shr
out
out
jle
lea
ret
jecxz
cs
jge
add
out
sbb
loope
jp
scas
mov
es
test
xchg
pop
loop
mov
nop
mov
leave
and
cmp
daa
jne
inc
rcl
ds
out
scas
and
cdq
sub
mov
jmp
mov
stos
retf
inc
pop
mul
lock
sub
pop
jo
jno
add
retf
lods
aas
(bad)
sub
cs
test
sbb
out
push
scas
cmp
(bad)
imul
pop
stc
inc
mov
jbe
pop
aaa
stos
stos
cmps
js
pusha
xlat
cmp
lods
stos
push
cmp
test
xchg
pop
jle
ret
sbb
addr16
shr
jmp
dec
or
sub
mov
(bad)
xor
das
mov
xlat
js
and
add
call
fsubr
jecxz
loopne
xchg
cmp
add
pusha
shr
cmps
push
xor
test
push
xor
add
jg
xor
pop
xor
push
dec
and
pop
mov
pusha
cs
inc
ds
jl
mov
push
stos
sub
inc
or
and
out
pop
out
dec
cmp
cs
sbb
js
ds
sub
inc
jbe
add
xlat
push
scas
cmp
xor
sbb
das
and
mov
xor
call
sbb
push
fs
addr16
dec
jl
xor
daa
dec
xchg
js
lods
mov
and
cs
or
and
cs
pop
mov
movs
pop
fs
sub
dec
mov
push
cs
ins
mov
sbb
pop
inc
pop
outs
scas
icebp
hlt
shr
std
mov
or
push
je
xor
outs
daa
mov
and
cmp
stos
cs
xchg
xlat
pusha
cmc
mov
xor
xchg
fimul
leave
retf
push
nop
xor
aaa
cmp
xor
(bad)
xchg
pusha
or
arpl
(bad)
and
add
jno
xor
sbb
push
dec
call
addr16
aam
mov
hlt
cmc
icebp
mov
scas
jge
(bad)
lahf
mov
je
lds
fcomp
mov
(bad)
pop
mov
fdivr
or
movs
scas
into
js
xchg
out
sbb
cmps
ret
inc
out
jb
adc
mov
fstp
xchg
je
cmp
(bad)
ins
push
push
pop
xchg
nop
inc
sub
jp
(bad)
fimul
xor
(bad)
dec
and
icebp
sub
sub
mov
fnstsw
scas
lods
push
out
push
js
mov
leave
sub
ja
rol
jb
adc
xor
mov
fwait
jne
jecxz
(bad)
xor
mov
ret
dec
js
xchg
scas
mov
(bad)
cmp
or
inc
fs
xchg
or
push
sub
jnp
fiadd
out
add
push
aam
ja
mov
push
in
out
mov
arpl
adc
mov
inc
push
and
cmp
(bad)
into
mov
pusha
inc
mov
pop
mov
sbb
mov
push
push
inc
ins
fs
ja
leave
aad
test
ins
popaw
inc
lods
ss
inc
jns
or
jae
pop
icebp
std
push
push
fwait
cmp
bnd
sub
dec
and
popf
adc
(bad)
or
pop
and
push
mul
fiadd
loopne
arpl
push
(bad)
push
mov
mov
add
lds
aas
adc
fst
inc
fwait
sbb
sbb
mov
lahf
or
sub
fdivrp
sahf
(bad)
jne
imul
out
push
repz
pop
xchg
and
cmp
sbb
ficom
xchg
and
dec
mov
cmp
(bad)
cmps
div
fs
or
inc
popa
inc
mov
popa
ss
mov
fisubr
sbb
outs
(bad)
aam
out
lods
movs
fwait
lea
ja
mov
fidiv
jmp
and
fild
fistp
add
sub
mov
(bad)
inc
enter
lock
(bad)
loop
xor
and
stos
and
test
shr
jbe
sub
pushf
jmp
or
xor
fnsave
sbb
sbb
mov
xchg
sbb
(bad)
test
pop
jmp
mov
mov
jns
aam
clc
fcmovb
in
jae
icebp
push
jnp
xchg
sub
push
mov
mov
imul
dec
sub
push
xchg
jns
adc
leave
mov
push
lds
mov
or
xor
cmp
xchg
cs
adc
and
lods
xor
iret
cmps
outs
daa
in
ins
sub
scas
push
or
dec
sbb
loop
fwait
mov
cs
nop
into
stos
sub
ds
mov
push
push
push
xor
pop
hlt
lods
dec
mov
sub
mov
sub
cmp
cmp
int
jecxz
fldcw
popf
mov
ss
adc
mov
xor
dec
daa
jb
inc
arpl
les
imul
add
mov
mov
xor
imul
fistp
test
mov
xchg
shr
cmps
mov
mov
jle
shl
jmp
sbb
repz
push
inc
pop
push
fs
movs
bound
mov
cs
je
adc
push
sbb
sub
jmp
pop
icebp
mov
and
cld
jbe
dec
and
arpl
aad
fisubr
out
scas
mov
call
rol
les
int3
mov
cmp
xor
jge
iret
shld
cs
and
sahf
test
sbb
movs
out
inc
inc
pop
int3
push
aad
ret
add
jo
jb
xor
fsub
retf
sub
scas
shl
xlat
daa
push
or
inc
push
mov
ret
or
in
xchg
and
daa
lods
jb
pop
mov
xchg
jne
cs
xor
sub
pop
ds
sub
mov
paddusw
stos
push
adc
scas
inc
ins
jae
push
or
mov
je
ja
mov
or
dec
adc
data16
sti
rcl
ret
inc
mov
pop
cs
jle
aaa
xor
aas
adc
repnz
xchg
sbb
mov
shr
mov
inc
pop
movs
test
mov
loopne
call
mov
jns
push
mov
scas
(bad)
mov
push
call
pop
cs
hlt
sbb
push
jle
sahf
sub
cmc
mov
js
cld
or
and
push
pop
jbe
jl
sbb
jae
dec
sub
inc
sbb
and
into
sahf
js
repz
cmps
push
cs
mov
xor
sub
mov
push
xor
(bad)
mov
cdq
sbb
stc
mov
sahf
je
outs
mov
sbb
adc
sbb
outs
test
dec
xchg
aad
fnsave
fcmovbe
and
out
and
ret
mov
bound
cmp
or
cs
call
pop
add
lahf
mov
retf
test
mov
das
mul
data16
adc
dec
(bad)
lods
pop
scas
adc
cmps
inc
cdq
out
lods
sbb
retf
xor
jecxz
cli
popf
call
repz
(bad)
fucom
cmps
fwait
sbb
cs
repnz
jo
es
gs
pop
cs
test
sar
xor
pop
mov
cmp
inc
daa
or
in
fld
retf
cs
add
mov
inc
test
jp
out
std
stos
in
(bad)
aas
mov
mov
(bad)
ror
adc
(bad)
cwde
mov
adc
or
push
es
(bad)
jge
xor
dec
popa
mul
lea
aad
lods
or
push
mov
fnstenv
sbb
push
xor
popa
cs
adc
loopne
ds
movs
jecxz
cs
jne
mov
pcmpgtw
inc
inc
push
scas
aaa
fsincos
push
stc
mov
(bad)
loope
ins
xchg
jb
daa
xor
stc
test
xor
mov
ins
daa
push
pop
ds
fdivr
in
push
cs
jno
push
xor
ja
outs
sub
(bad)
test
nop
inc
jecxz
cmp
sti
xchg
arpl
and
fild
aaa
sbb
fstp
mov
jb
popf
xchg
sbb
push
sub
mov
js
repnz
outs
cs
xor
cmp
add
in
xor
out
cmp
fmul
xchg
adc
mov
push
inc
push
pop
adc
cmps
cs
sub
gs
sbb
out
loope
fld
xor
(bad)
xor
cmps
add
cmc
aas
or
(bad)
aas
mov
adc
dec
popf
clc
out
popf
dec
jne
aaa
icebp
adc
mov
xor
mov
xchg
(bad)
and
xor
add
stc
lods
into
ror
cs
div
push
pusha
add
loop
cs
ins
ret
hlt
retf
xchg
addr16
aad
push
mov
out
xor
cld
addr16
dec
xor
cs
dec
or
shl
inc
sub
inc
cli
add
xchg
jnp
mov
jo
lea
cs
mov
imul
push
pop
cs
(bad)
stos
and
adc
sub
rol
aam
cs
(bad)
rcr
adc
sub
pop
outs
jno
cmps
shl
mov
arpl
dec
scas
dec
pop
into
jne
mov
int3
ins
inc
jae
mov
xchg
fdiv
bound
sub
loopne
mov
pop
imul
sar
adc
push
aam
imul
and
jb
mov
xor
cmp
mov
jmp
pop
dec
into
aas
shr
cli
lock
imul
add
pop
into
leave
cmp
xor
xchg
rcr
adc
pop
aas
popf
adc
add
movs
or
loop
lods
dec
add
xchg
in
popa
sub
pop
lods
push
sub
xlat
push
out
cs
and
movs
xor
ins
in
mov
adc
addr16
stc
jmp
outs
cli
and
(bad)
jp
add
mov
popa
loop
out
or
fwait
sub
cmp
adc
loop
xor
out
fdivr
ins
or
or
dec
cmp
cdq
mov
enter
xchg
sub
fcom
cs
cdq
pop
inc
pop
mov
xor
leave
mov
outs
jnp
pop
cmp
sahf
into
nop
call
add
cld
sbb
cmp
xchg
jecxz
div
das
push
out
sub
cmps
cs
fbstp
(bad)
idiv
popf
fldz
add
(bad)
enter
fucomi
add
pop
sahf
(bad)
out
jnp
cmp
cs
pop
push
jo
std
iret
xor
outs
daa
adc
cmc
jnp
mov
cs
dec
inc
je
ror
cs
nop
outs
neg
(bad)
aad
pushf
rcl
and
scas
daa
push
adc
inc
push
pop
xor
xor
or
into
ins
je
pop
sti
xor
adc
(bad)
mov
jbe
push
cs
out
cs
pop
xchg
push
push
inc
sub
bound
sbb
cs
adc
mov
fist
inc
int
and
mov
dec
cs
js
fnstenv
mov
out
scas
cmp
loopne
lock
outs
popa
fcom
sub
out
or
cmps
sub
inc
mov
sub
jb
outs
loop
les
xchg
xchg
cmp
test
fwait
mov
out
xor
cwde
sub
dec
(bad)
xor
mov
xchg
cmc
sub
iret
(bad)
xor
mov
or
imul
cs
test
daa
push
mov
jmp
sub
xor
xlat
(bad)
out
mov
push
lods
fdiv
mov
stos
dec
push
in
jp
cs
test
cs
aaa
xor
bound
cs
mov
add
push
push
adc
pop
xchg
outs
es
add
xor
cs
int
nop
or
iret
in
push
mov
cmps
fsub
rol
mov
cs
dec
dec
sar
les
add
and
cs
xor
pop
arpl
mov
xor
dec
in
jg
retf
adc
sahf
mov
pop
test
or
xchg
xchg
mov
enter
xlat
jns
mov
fs
cmc
stc
frstor
test
dec
cmps
push
add
lods
pushf
stos
shr
test
std
mov
cs
adc
sub
jno
out
jge
add
outs
cmp
es
xor
and
dec
cmps
push
ret
test
shl
(bad)
lods
push
out
std
arpl
xchg
out
ins
sbb
adc
cs
arpl
jo
add
jb
ror
loopne
sbb
mov
cs
sub
pop
xchg
add
test
lods
fnstenv
dec
pop
das
push
jle
das
loopne
sbb
js
addr16
inc
aad
stos
lods
dec
int
dec
mov
daa
jmp
cld
cwde
pop
dec
and
scas
out
ror
es
add
push
cs
(bad)
out
cmp
xor
xor
je
in
jne
cs
cmps
cdq
push
mov
dec
cmps
push
or
mov
lahf
ins
popf
out
push
fmul
jl
imul
(bad)
mov
and
gs
cli
addr16
jp
adc
pop
mov
push
push
or
imul
xor
sti
add
jecxz
ror
cli
lea
mov
div
mov
cdq
push
jne
pusha
out
xor
enter
jg
sub
std
call
imul
adc
in
clc
mov
add
dec
xor
test
mov
pop
add
inc
xor
mov
mov
lods
cli
adc
cmp
xchg
mov
adc
cmc
mov
call
(bad)
std
fisubr
out
movs
jmp
push
cs
sub
inc
call
ins
xchg
push
mov
xchg
fst
pxor
call
mov
add
xor
push
and
mov
dec
mov
(bad)
call
sbb
pop
dec
xlat
dec
(bad)
ret
mov
faddp
cs
add
mov
xor
daa
outs
mov
xor
mov
mov
dec
rol
mov
and
test
xchg
sbb
in
loop
mov
int3
push
in
bound
jmp
inc
push
or
mov
jne
int
cs
add
cmp
mov
push
sub
cli
out
dec
retf
sub
fist
out
pusha
cs
std
dec
(bad)
sub
test
out
xchg
add
sub
inc
push
out
jmp
rcr
or
cmps
out
es
inc
dec
mov
daa
repnz
cmp
and
or
mov
not
fild
into
int3
jge
fs
(bad)
test
xchg
mov
cmps
jmp
leave
int3
mov
cs
test
lahf
(bad)
mov
or
out
into
scas
cs
imul
mov
lods
aaa
sub
xor
hlt
out
scas
cmp
mov
fisttp
cmp
dec
retf
cs
mov
mov
call
mov
icebp
cs
ret
sbb
and
push
dec
cli
iret
jo
push
and
xor
pop
pop
xchg
dec
adc
aaa
in
cld
add
add
sub
test
test
sub
mov
cmps
sbb
jg
imul
js
ins
xor
xor
dec
lods
inc
cld
mov
stos
inc
call
and
and
mov
xor
inc
lahf
dec
in
clc
fs
div
cmp
es
jo
(bad)
mov
push
mov
jae
pop
sub
retf
xchg
xor
scas
jecxz
dec
sbb
fdiv
or
add
sub
scas
shr
movs
scas
adc
or
in
or
jle
inc
or
mov
xor
dec
and
mov
sbb
adc
out
(bad)
les
leave
pop
inc
and
cmp
leave
loope
pop
xor
mov
lock
fnsave
mov
mov
cmp
adc
sbb
lods
or
and
dec
sbb
in
mov
ret
push
and
mov
pop
push
ss
icebp
push
cmc
jp
out
add
push
stos
in
iret
outs
mov
cmps
mov
cmc
cmp
aam
push
jne
and
movs
leave
jle
dec
push
out
stc
pop
mov
adc
xor
dec
(bad)
call
inc
loop
fwait
mov
lods
jno
push
inc
lds
push
push
cmps
add
shr
push
add
loope
mov
sti
test
sub
fdiv
loopne
or
dec
loope
adc
sub
cmps
bound
lods
es
das
sub
iret
xchg
cmp
out
out
xor
stos
jmp
push
xor
mov
ins
adc
aaa
sti
sbb
in
test
jbe
jmp
xchg
jmp
retf
cwde
pop
pop
xchg
cdq
mov
sbb
(bad)
pop
cwde
sbb
outs
loop
es
and
jl
imul
xor
mov
push
jns
pop
shl
jne
cmp
shr
sub
xchg
pop
xlat
mov
js
mov
out
inc
jb
sub
inc
or
jmp
stos
test
movs
sub
xor
mov
fbld
adc
pop
rcl
mov
mov
ss
sbb
sahf
call
sbb
fistp
ss
xor
xchg
aaa
xchg
std
outs
fwait
int3
xor
xor
push
(bad)
and
mov
ficom
inc
dec
stos
push
arpl
fwait
cmp
aas
icebp
lahf
iret
add
push
add
mov
add
add
and
xlat
adc
push
(bad)
stc
sbb
icebp
call
addr16
ffree
lods
fcomp
ret
je
or
mov
iret
mov
add
shr
push
xchg
push
push
lods
jbe
fdivr
shr
add
mov
cmp
xchg
mov
stos
mov
xchg
(bad)
fwait
(bad)
pop
jnp
popa
cmp
test
aam
aam
mov
push
push
xchg
popf
inc
push
mov
fdiv
out
test
leave
in
mov
or
jp
push
mov
dec
xor
and
ror
sub
mov
clc
test
pop
xor
jnp
enter
(bad)
neg
addr16
push
xor
dec
adc
adc
mov
icebp
stos
dec
inc
push
jo
dec
hlt
popa
repz
jp
mov
sub
jo
iret
jmp
push
(bad)
and
fidivr
shl
dec
xchg
sub
leave
test
ret
mov
(bad)
fs
and
inc
ficomp
mov
jge
pop
adc
daa
mov
fsubr
xor
rcr
xor
mov
jmp
out
loop
mov
sbb
or
cmc
jno
push
sub
sbb
jno
inc
nop
aam
add
stc
and
in
cmp
add
or
mov
and
mov
scas
jle
fld
mov
sub
inc
stos
cmp
ja
xchg
sti
leave
and
jle
outs
and
inc
mov
scas
lea
test
out
xchg
pop
xor
push
test
cmp
mov
pop
rcl
xor
(bad)
jle
add
pop
push
pop
mov
jns
les
xlat
idiv
mov
inc
push
dec
cli
data16
shl
stos
mov
outs
pop
xlat
out
lahf
mov
push
cmp
sar
mov
push
js
and
inc
arpl
shl
sub
sbb
jns
retf
sub
sub
push
aas
mov
test
mov
test
jmp
shl
repz
jmp
dec
push
push
test
mov
(bad)
adc
loopne
push
(bad)
xor
stos
hlt
mov
out
cli
int3
mov
aam
das
les
cmc
shl
call
(bad)
fisttp
test
inc
sub
lea
es
adc
scas
push
fs
sub
xor
imul
or
aad
ret
sub
add
adc
std
and
add
push
je
mov
movhlps
nop
cs
mov
sahf
aad
lods
cs
xchg
ins
or
jge
nop
mov
das
push
shr
(bad)
es
pusha
(bad)
jb
cs
sbb
mov
mov
xchg
mov
aam
jl
xchg
stos
jmp
in
outs
dec
neg
cs
sub
cmp
(bad)
popa
dec
daa
inc
pop
xchg
and
into
pop
cmp
movs
xor
shl
outs
add
neg
addr16
cmp
adc
sti
daa
jns
rcl
sub
scas
pop
mov
add
xor
jno
outs
mov
scas
cs
jns
pop
mov
jo
stos
mov
inc
dec
cmp
sub
int3
push
popf
jmp
cs
sar
scas
cmp
push
ds
gs
mov
movs
cs
stos
mov
data16
leave
cs
int3
mov
mov
adc
sub
mov
out
dec
cmovbe
cmp
mov
aam
pop
mov
xchg
arpl
mov
(bad)
scas
shr
pop
pushf
push
sar
retf
pop
inc
adc
dec
add
sub
push
scas
xor
adc
ss
dec
(bad)
sub
xchg
fisubr
mov
adc
fcomp
jae
add
xor
and
(bad)
pop
and
sbb
cmc
sbb
scas
sub
repnz
mul
cmp
imul
pushf
(bad)
not
int3
mov
xor
and
pop
scas
jb
jno
adc
loopne
bswap
or
lock
jge
push
pop
jecxz
imul
xchg
retf
pusha
pop
cmps
in
add
push
mov
pop
jne
sbb
es
call
stc
cmps
gs
pop
xor
inc
imul
mov
pop
inc
lods
mov
adc
cmp
out
push
inc
add
and
aam
les
mov
movs
xchg
cmp
int
(bad)
(bad)
div
sahf
mov
in
mov
ret
hlt
loope
loop
mov
mov
into
adc
and
xchg
ror
pop
push
push
mov
jne
mov
es
or
push
leave
cwde
mov
es
sbb
mov
ror
mov
and
dec
sub
nop
jg
and
fcomp
(bad)
push
dec
xchg
arpl
push
icebp
xchg
out
push
jbe
leave
call
hlt
outs
dec
mov
and
frstor
xor
jle
xor
js
jbe
add
or
arpl
add
add
out
hlt
dec
mov
push
add
je
out
inc
jbe
call
cmp
add
mov
dec
enter
leave
clc
dec
add
lock
in
cmp
mov
xor
inc
rcr
hlt
jmp
cmp
add
mov
(bad)
int3
in
call
mov
loope
mov
cmp
imul
jl
(bad)
stos
xchg
ror
sbb
pop
daa
aas
pusha
mov
dec
std
and
sub
(bad)
mov
daa
jae
adc
ret
push
pop
xchg
arpl
repnz
dec
lds
push
sub
movs
ret
xchg
cld
in
mov
scas
inc
out
dec
mov
pop
rcpps
or
rcr
inc
mov
push
mov
dec
xchg
(bad)
jae
mov
mov
xchg
in
ja
sbb
leave
ror
icebp
test
inc
leave
xchg
xchg
jp
jbe
jns
movs
and
cmps
mov
into
cdq
pop
loope
inc
(bad)
bound
int
push
sbb
pop
jg
fcmovnbe
dec
mov
enter
cmp
loop
out
mov
out
jmp
sbb
icebp
xor
ins
lock
mul
sbb
imul
xchg
arpl
cmps
pushf
(bad)
popf
inc
and
sub
das
ins
push
cvtpi2ps
inc
xchg
push
(bad)
das
cmp
mov
mov
mov
sahf
cmp
outs
and
popf
add
push
mov
sbb
test
fs
and
std
add
clc
pop
cmps
jb
ds
fwait
(bad)
mov
mov
pop
icebp
cwde
bound
inc
xchg
mov
es
rcl
mov
mov
mov
popa
mov
pushf
fs
aaa
mov
daa
rcr
push
adc
xchg
jl
mov
pop
mov
(bad)
jne
pop
pop
cmp
and
add
inc
mov
jo
and
cmps
inc
je
jle
add
xchg
adc
cmc
jne
es
ja
fwait
mov
add
mov
sub
mov
add
jnp
cmps
stos
pop
leave
daa
jns
sbb
repz
sub
push
xchg
loope
inc
sub
lods
sub
aas
sbb
loop
lods
cmp
arpl
xor
or
add
sub
xchg
lods
mov
loope
(bad)
data16
xor
adc
inc
icebp
dec
jnp
and
std
or
pop
or
fdivr
jge
inc
sub
cwde
fldenv
xlat
(bad)
push
xchg
push
loop
sti
jmp
sti
mov
inc
test
xor
lods
jle
aaa
or
cld
out
xchg
and
push
add
and
jbe
adc
push
pop
sbb
mov
dec
dec
lock
push
out
(bad)
fistp
push
ds
sub
mov
mov
pop
dec
jns
adc
ins
fstp
dec
bound
fucomp
sbb
add
dec
rol
cwde
ror
clc
jmp
cmp
rcl
pop
mov
mov
cmp
sbb
jno
sub
sub
jnp
out
cmp
adc
pop
mov
xchg
js
xchg
retf
cs
hlt
shr
mov
and
cs
(bad)
or
or
push
aas
les
fucomi
mov
xchg
cs
fld
scas
cmp
dec
mov
dec
rsqrtps
push
jns
or
popf
cmp
push
cmp
mov
(bad)
xchg
pop
adc
fcomp
mov
add
push
nop
or
dec
sbb
ins
jae
push
call
xlat
sub
xor
jl
jg
imul
sbb
clc
mov
pushf
(bad)
daa
loop
push
inc
push
test
in
repz
in
sbb
cs
sbb
aam
jns
cld
pop
add
sub
mov
cs
fmul
(bad)
mov
mov
ret
in
xchg
mov
cmp
mov
sbb
xchg
jbe
dec
push
jge
call
popa
dec
out
jle
js
jb
xchg
call
adc
aad
pop
sub
iret
dec
mov
mov
mov
jg
test
or
push
xor
cmp
ror
pop
and
dec
cmps
fistp
ds
leave
jmp
fnsave
fisub
dec
dec
out
ret
inc
push
mov
mov
xor
ficom
out
(bad)
pushf
(bad)
cmp
pop
jmp
pop
fisub
sub
(bad)
dec
or
outs
xchg
inc
cmps
sbb
dec
xchg
popf
retf
push
jns
leave
jnp
and
pop
data16
xor
sbb
(bad)
aad
push
xlat
div
aad
repnz
pop
dec
xchg
leave
(bad)
std
or
shl
cs
test
cmps
fnstcw
enter
jecxz
aaa
mov
pusha
push
add
add
fmul
dec
inc
dec
test
cli
xchg
neg
jne
push
or
dec
jmp
or
jge
inc
mov
xchg
cs
call
shl
shl
xchg
call
es
dec
add
or
xchg
fisubr
mov
cmp
mov
outs
add
push
jmp
adc
mov
pop
jmp
out
and
cmp
xchg
dec
xchg
bound
adc
imul
pop
adc
cs
inc
pop
cs
dec
sti
sub
int
xchg
(bad)
xchg
cs
cmp
jl
push
(bad)
loope
adc
mov
mov
mov
into
xor
mov
sbb
or
or
cs
fwait
dec
rol
bound
sub
fcmovne
test
xor
cwde
enter
daa
outs
mov
loop
sub
add
pop
mov
ficom
xchg
movs
cmp
jmp
ret
xchg
scas
icebp
adc
iret
cdq
jns
xor
and
outs
in
push
inc
pop
sub
pop
mov
xor
sub
sahf
les
test
adc
aaa
test
popa
cmp
mov
add
or
aas
jo
les
inc
loopne
and
outs
sub
cmp
add
scas
cdq
enter
call
popf
enter
adc
loope
call
cmps
jno
push
xor
clc
cmc
scas
sub
ins
xor
xor
ds
jmp
mov
loope
scas
nop
xchg
shl
pop
mov
shl
xor
mov
jbe
inc
adc
aaa
jnp
in
sahf
dec
add
shl
aas
bound
ror
cs
cmp
or
es
push
cs
div
mov
mov
add
sub
sbb
lods
fisubr
in
cmp
dec
scas
push
pusha
or
clc
jl
or
mov
push
inc
scas
sub
call
fild
cmovnp
in
ds
mov
cs
(bad)
sbb
(bad)
loopne
sbb
fnstenv
mov
push
sbb
ds
cs
and
adc
repnz
aaa
(bad)
iretw
hlt
mov
les
aas
arpl
movs
gs
mov
adc
adc
add
dec
sbb
aaa
fstp
xor
sub
pop
jo
pop
dec
cs
mov
in
xor
iret
mov
or
int3
cmp
cs
or
sbb
pop
jmp
jmp
popa
add
je
mov
xor
and
xor
sti
adc
in
retf
xchg
push
std
data16
cs
(bad)
fsubp
sub
xor
pop
bound
jns
or
retf
scas
popf
dec
inc
mov
daa
mov
dec
xlat
(bad)
mov
cmp
cs
dec
cmp
cs
dec
pop
push
jns
jmp
fmul
mov
push
pop
dec
xor
push
movs
pop
outs
in
cs
stos
dec
or
mov
addr16
inc
mov
pushf
jmp
dec
(bad)
inc
cs
mov
js
mov
fs
in
xor
pop
pop
push
adc
mov
cs
leave
sbb
rsqrtps
cs
push
mov
cld
lods
mov
ficom
cli
or
sub
scas
in
xor
add
xchg
mov
cs
pusha
(bad)
scas
rcl
in
mov
lods
sbb
dec
fs
test
nop
xor
or
pusha
or
ret
aad
in
lods
mov
shr
es
cli
mov
fcmovb
pop
dec
cs
les
enter
dec
shl
push
mov
into
out
cs
push
sar
add
cs
pop
add
push
jecxz
cs
in
(bad)
(bad)
scas
sahf
xor
sub
push
mov
cs
popa
mov
push
adc
inc
xor
lock
mov
loope
mov
ror
jmp
cld
icebp
and
ds
push
push
pop
adc
xor
pop
in
jge
fs
mov
jbe
test
clc
and
xchg
jbe
out
and
test
sub
sbb
lods
or
jmp
scas
sub
add
bnd
push
fild
fcmovnb
cld
xchg
or
loop
sbb
daa
xchg
inc
nop
adc
mov
shl
sub
loope
mov
mov
out
jge
xlat
or
ret
mov
dec
add
movs
clc
mov
outs
xor
ja
sti
xchg
shl
add
xchg
fnstenv
(bad)
mov
add
imul
adc
repz
cmp
ret
adc
dec
sub
outs
js
dec
or
add
inc
in
lock
mov
test
and
daa
repz
adc
xor
outs
mov
mov
mov
mov
call
in
cs
loop
or
in
fbld
shl
into
scas
mov
cs
lea
(bad)
push
outs
daa
adc
push
lods
push
fist
mov
xchg
and
iret
add
push
mov
jle
xor
add
dec
mov
retf
xchg
bound
sub
iret
mov
jmp
cs
dec
enter
fnstcw
es
fdiv
jmp
and
or
mov
stos
and
and
cld
inc
push
(bad)
cmps
in
ret
mov
jmp
xchg
sbb
pop
fist
loope
inc
push
and
sub
or
in
in
rcl
cs
aad
loope
mov
cs
arpl
mov
enter
push
mul
into
(bad)
cmp
setge
lods
scas
loopne
push
dec
and
pop
add
push
sbb
cs
stos
out
cld
sbb
(bad)
jp
dec
adc
mov
stos
sub
mov
stc
in
ret
(bad)
and
and
xlat
push
std
daa
out
sar
cs
push
cmp
sbb
cs
inc
in
gs
mov
pop
or
call
sti
daa
pushf
data16
push
push
add
icebp
sbb
xchg
retf
into
out
dec
int3
or
xchg
cs
(bad)
stos
xchg
jno
pusha
xor
sub
enter
addr16
sahf
mov
xor
inc
sub
fisub
repnz
les
ins
pop
xchg
jo
test
jns
out
(bad)
int
sub
jge
daa
mov
jne
or
in
fnstenv
fnstsw
xor
jg
jmp
test
into
ret
inc
cs
icebp
int
loopne
daa
stos
mov
jmp
xchg
(bad)
push
mov
xor
repnz
imul
inc
out
loope
adc
stos
mov
leave
les
int
dec
ins
mov
(bad)
jnp
mov
dec
jb
and
xor
loopne
ror
jnp
ficomp
(bad)
daa
xor
outs
pop
dec
test
adc
in
push
sbb
xor
fistp
shr
or
push
jecxz
pop
ss
mov
xchg
retf
aad
pop
cli
cld
je
daa
(bad)
shl
fwait
cdq
out
stc
mov
out
(bad)
neg
xchg
inc
loop
sub
ficom
inc
and
les
cmp
je
ffree
push
hlt
ret
cs
rcr
cld
call
dec
xchg
adc
out
jp
in
fst
fs
mov
inc
mov
mov
cs
cmc
movs
mov
mov
cs
sub
retf
cs
inc
adc
pop
data16
outs
cmp
pop
fnstcw
ret
cli
pop
and
enter
mov
jae
dec
dec
mov
mov
stos
scas
xchg
jp
cwde
pop
xor
jb
add
idiv
xchg
icebp
movs
into
mov
mov
and
hlt
mov
xor
popa
inc
xor
ss
dec
adc
repnz
sbb
mov
mov
es
adc
push
mov
dec
mov
test
das
fwait
mov
xor
call
mov
jmp
cs
popf
mov
and
aas
test
mov
into
mov
sub
repz
push
mov
call
cmps
cs
lahf
fs
cs
cmps
(bad)
out
mov
scas
jecxz
jbe
sbb
mov
or
rcl
mov
(bad)
xor
nop
retf
adc
ss
and
mov
out
and
jo
cmp
and
sbb
push
xchg
xchg
pop
or
push
stc
add
outs
adc
adc
movzx
xor
dec
and
cs
popa
retf
cmps
or
and
mov
in
in
sub
lock
mov
scas
xchg
cdq
dec
jmp
rcr
cmp
pop
leave
jmp
sub
(bad)
cmp
push
dec
data16
and
sub
icebp
bound
dec
movs
mov
call
ins
jge
xchg
(bad)
ror
dec
xor
scas
add
inc
test
cs
adc
ja
jnp
ffreep
adc
aad
test
out
and
retf
in
out
or
mov
call
xlat
movs
cs
add
cs
adc
arpl
adc
pop
mov
fiadd
add
inc
push
cs
imul
fstp
pop
aam
adc
(bad)
add
lahf
mov
lods
or
adc
mov
sti
dec
in
mov
sbb
pop
xor
faddp
add
addr16
mov
fdivr
mov
push
shl
daa
test
and
xchg
mov
in
add
mov
xor
popa
ficom
inc
dec
retf
cmp
lahf
jnp
xchg
imul
and
xor
push
or
loop
idiv
mov
mov
loop
int
in
push
mov
in
out
adc
stos
adc
push
(bad)
scas
or
inc
arpl
ret
mov
or
shr
xor
out
movs
dec
mov
(bad)
xchg
je
mov
test
push
aam
enter
pop
ins
xor
mul
jno
xor
aas
out
icebp
xor
sbb
(bad)
(bad)
pop
jge
mov
mov
xor
cmp
jmp
repz
aas
shr
loop
xchg
cmp
ins
ds
imul
sub
sti
icebp
inc
jmp
add
mov
leave
push
cmp
icebp
and
mov
xor
loope
sti
dec
je
(bad)
mov
xor
leave
xchg
mov
xchg
scas
mov
test
retf
and
add
xchg
jmp
leave
add
push
dec
or
lods
(bad)
adc
sub
cmps
call
xchg
inc
push
xor
push
out
dec
out
out
inc
push
aas
cmps
and
pusha
mov
fucomip
jg
and
mov
ret
pop
inc
out
dec
mov
popf
and
xchg
mov
xchg
mov
movs
stos
or
mov
fdivr
in
pop
inc
xor
aas
cmp
mov
test
js
cmp
dec
leave
nop
add
(bad)
add
mov
fidiv
add
xlat
mov
sub
cmp
scas
call
nop
inc
aad
push
mov
adc
fcmove
adc
cmp
ins
das
xchg
mov
jae
scas
xchg
add
jns
cmp
outs
je
mov
es
push
push
cli
cdq
jns
outs
retf
or
je
adc
jecxz
mov
(bad)
jp
push
imul
iret
aas
shl
outs
xor
lds
fcomp
push
cs
addr16
in
out
popf
lods
outs
(bad)
fmul
out
add
imul
pop
int
clc
jl
jno
mov
cwde
sub
popa
(bad)
dec
cmp
shl
dec
addr16
or
sub
push
(bad)
out
xchg
xchg
inc
xchg
sbb
mov
(bad)
outs
scas
ja
inc
cmps
outs
cmp
dec
mov
xchg
fisubr
test
and
daa
cmp
jne
xor
xchg
and
mov
mov
int
cs
add
pop
xor
push
sub
sbb
jbe
xlat
lods
xchg
lea
dec
pop
mov
out
iret
dec
dec
mov
xchg
aaa
retf
sub
cs
adc
jmp
cs
or
cmp
jnp
jmp
add
jecxz
dec
test
ret
rcl
xchg
ss
out
fldenv
cs
pusha
shr
sbb
pop
adc
jmp
or
inc
das
cld
sub
mov
fidivr
cs
sub
out
pcmpeqw
leave
pop
dec
jmp
cmp
ror
or
cwde
imul
ds
cs
jbe
push
dec
addr16
sbb
jle
cmp
adc
sbb
pop
je
sbb
mov
pop
xchg
test
cs
sbb
cmps
push
in
retf
cs
cmps
ds
stc
push
pop
xchg
out
mov
fdiv
fldcw
pop
adc
pop
sti
ret
(bad)
push
push
sub
(bad)
pop
sbb
sti
sbb
push
cs
mov
nop
adc
push
push
(bad)
cmc
pop
or
repnz
shl
shl
pop
push
sub
jecxz
icebp
bound
cs
out
add
mov
hlt
mov
mov
adc
mov
sub
xchg
sbb
iret
dec
popf
fwait
cs
inc
sub
cmp
daa
es
bound
test
popf
adc
call
xchg
mov
aam
cs
jmp
sbb
sbb
or
cs
iret
mov
ret
xor
jmp
popf
pop
out
into
mov
fcomp
cmp
sub
test
(bad)
jp
dec
mov
pop
das
cs
adc
dec
shr
(bad)
shr
cmc
pusha
leave
adc
push
pop
cs
outs
in
mov
sbb
mov
les
in
jbe
and
jle
mov
cs
je
xchg
mov
shr
cs
ds
xor
adc
ins
mov
ficom
shr
ds
jo
in
mov
jp
sub
mov
xor
nop
mov
push
mul
xor
cmps
inc
into
and
(bad)
jmp
push
mov
(bad)
mov
dec
ds
jo
xchg
fst
fidivr
in
cmps
repnz
call
xchg
xchg
sar
das
out
imul
iret
jmp
mov
fdiv
ins
jns
xor
dec
or
push
inc
sbb
popf
(bad)
cmp
std
scas
mov
lods
cld
shr
outs
ds
mov
and
jge
add
sub
inc
cmp
pop
or
scas
into
cwde
(bad)
pop
scas
mov
cs
shl
xchg
adc
iret
stos
sbb
in
adc
mov
pop
cmc
mov
lods
std
(bad)
xchg
xchg
dec
mov
or
movs
mov
jae
and
jno
pop
mov
popa
cs
inc
mov
jns
pop
push
sbb
push
xchg
mov
inc
jne
adc
nop
loopne
cmps
dec
jbe
addr16
fst
out
cs
jle
sbb
push
(bad)
scas
sub
mov
(bad)
pusha
and
sub
cmp
(bad)
outs
shr
call
add
outs
push
retf
xor
xchg
inc
cmp
push
xchg
ins
cs
jns
dec
ret
push
lds
stos
mov
mov
add
clc
pop
and
cld
dec
hlt
jle
fiadd
shl
cs
neg
mov
cs
arpl
dec
mov
sub
cmp
loopne
in
mov
add
jge
cmp
std
(bad)
xor
outs
cs
and
and
xchg
in
cmp
repz
arpl
mov
sub
mov
lock
add
ins
test
addr16
mov
cmps
cs
push
mov
and
add
cmp
mov
test
bnd
scas
shl
cmp
dec
sbb
dec
add
nop
daa
mov
fdivp
js
in
call
sahf
bound
xor
cwde
add
adc
daa
movs
out
cli
retf
repnz
call
pcmpeqd
arpl
aad
sub
xchg
imul
pop
pop
iret
jnp
pop
loope
cmps
scas
cli
push
frstor
cmp
xor
pushf
cs
dec
add
and
mov
cs
xchg
loop
inc
pop
les
je
cmps
(bad)
sub
mov
cmc
sbb
push
sbb
popf
out
push
in
dec
pop
mov
movs
ja
(bad)
sar
cli
adc
jb
test
cmps
lock
adc
sti
scas
in
mov
pop
into
dec
mov
push
hlt
mov
test
jae
pop
clc
or
inc
jp
pushf
fidivr
cmp
xchg
mov
icebp
jmp
pop
fldenv
xor
xchg
push
cmp
or
test
sbb
inc
or
sbb
add
cmp
xchg
sbb
sub
pop
retf
pop
icebp
cmps
jb
mov
data16
cmps
outs
sub
lods
popf
(bad)
sbb
cmp
nop
dec
pushf
icebp
push
mov
hlt
xor
idiv
sahf
and
mov
and
mov
and
retf
cs
or
push
scas
push
and
int3
loopne
jmp
adc
sub
into
movs
out
mov
cmc
fwait
aad
cmps
out
sar
ret
out
fcmove
pop
cs
in
sub
cmp
inc
repnz
ret
daa
cmp
shl
xchg
(bad)
cmp
xor
mov
mov
out
stos
ret
jno
retf
push
sub
sar
fwait
loopne
mov
aaa
mov
mov
cs
aad
movs
out
out
cs
cmps
sub
or
jns
cs
lods
imul
lds
daa
bound
or
push
jl
fwait
jno
push
sbb
bound
ss
push
aad
add
jmp
or
push
inc
cli
out
cwde
cs
enter
arpl
push
cs
(bad)
xor
xor
push
sbb
mov
call
xchg
xlat
arpl
ins
aas
xchg
mov
les
pop
pop
adc
sub
hlt
addr16
fistp
dec
mov
cmps
out
div
mov
dec
push
shl
ds
sub
sub
retf
sbb
sbb
jp
inc
test
rcl
xor
arpl
(bad)
data16
loope
fmulp
aam
repnz
push
jmp
lahf
mov
into
mov
loope
mov
or
cld
leave
out
adc
out
xlat
sub
pop
out
cmp
aas
cmps
mov
repz
rcr
ds
ror
xor
daa
jl
cmp
sbb
jne
lahf
mov
cs
mov
jb
sub
sti
push
push
push
ficomp
mov
shl
movs
cs
pop
outs
inc
(bad)
shl
lock
xor
mov
imul
pop
sbb
lods
icebp
in
lock
push
mov
push
stos
cli
cs
sbb
test
enter
loope
movs
jp
ins
inc
mov
sub
xor
push
lds
fldcw
add
mov
and
mov
dec
add
popf
jbe
xor
push
into
add
mov
xchg
icebp
push
je
pop
cs
mov
and
push
(bad)
xor
push
mov
or
sti
add
ror
out
cmp
aas
outs
daa
and
pop
sbb
add
jns
imul
retf
gs
inc
in
cs
xchg
jne
or
ret
jmp
popa
and
dec
repnz
lods
xor
xor
dec
fsubr
push
scas
jae
(bad)
(bad)
sub
pop
mov
xor
push
pop
push
lock
into
pop
sbb
(bad)
jecxz
popf
xchg
pop
mov
mov
push
adc
(bad)
sub
mov
push
dec
ja
hlt
and
inc
je
out
or
jae
test
cvtps2pi
xor
dec
pop
not
movs
mov
int3
iret
or
pop
(bad)
cmps
outs
push
imul
add
pop
add
(bad)
fsub
(bad)
push
cmp
je
push
jns
jmp
(bad)
mov
lods
pop
dec
xor
add
cs
mov
add
cmp
sub
ds
out
sbb
xor
pop
out
imul
xchg
adc
xor
into
xor
stos
icebp
jnp
leave
or
xchg
jg
push
or
scas
push
test
call
push
mov
ss
arpl
xor
stos
pop
sub
add
mov
sbb
pop
mov
shr
pop
call
mov
loopne
inc
xor
stos
cmc
dec
pop
fist
adc
inc
mov
mov
cmc
jp
(bad)
in
mov
or
sahf
or
cmp
mov
mov
retf
xchg
gs
mov
jecxz
fist
in
jno
and
adc
jne
mov
out
mov
loopne
xor
mov
ins
xor
call
nop
adc
cmps
xlat
or
mov
adc
dec
mov
jmp
sbb
inc
push
push
cmp
cmps
lahf
dec
xor
fldcw
xchg
cs
hlt
sub
sti
loopne
xor
test
and
and
iret
jle
movs
mov
add
in
mov
fs
mov
ror
ret
(bad)
mov
in
dec
push
aas
mov
je
xor
sti
aad
repz
out
adc
sub
pop
leave
stos
fs
inc
lds
pop
fadd
fld
jo
imul
outs
adc
sub
hlt
and
rol
dec
pop
pusha
sub
inc
sub
dec
cmp
int3
imul
adc
idiv
or
jecxz
push
sub
lea
or
cld
inc
cmp
mov
or
mov
sub
add
leave
call
and
out
push
mov
cmps
pusha
ds
xlat
mov
mov
pop
push
lahf
je
mov
int
cmp
sub
jno
cmps
mov
and
fwait
mov
mov
sub
scas
retf
(bad)
rcl
or
mov
mov
pop
bound
sti
fadd
out
xchg
mov
gs
inc
ss
adc
pop
and
scas
push
aaa
mov
(bad)
out
xor
cmp
stc
sbb
into
(bad)
repz
jmp
shl
es
sbb
add
dec
adc
shr
mov
inc
mov
inc
xchg
push
mov
mov
xor
add
into
movs
scas
pop
pop
inc
cs
pop
push
shr
fisubr
data16
pop
ds
pop
xchg
ins
pop
xor
call
mov
sahf
sub
aam
cmp
cs
mov
and
ret
mov
sbb
mov
fs
dec
mov
mov
(bad)
pop
inc
jge
jo
mov
mov
add
outs
inc
push
pushf
mov
add
dec
jmp
pushf
rcl
jne
ja
hlt
inc
inc
pop
into
cdq
xchg
cmps
jmp
jns
inc
sbb
les
fcom
fld
xor
push
or
mov
or
inc
nop
test
retf
ds
mov
popa
rcl
out
(bad)
in
or
je
retf
cmp
je
mov
rol
imul
sbb
leave
icebp
sub
mov
mov
or
mov
retf
cmp
adc
xchg
(bad)
daa
push
mov
sub
inc
leave
and
into
imul
xor
jl
test
sti
movs
jne
aas
pop
push
adc
cmp
lahf
imul
movs
mov
push
inc
fdiv
pop
bound
in
and
push
mov
cmc
imul
sbb
lds
(bad)
pushf
cmp
ret
mov
aad
mov
or
jmp
cmps
xlat
rcl
dec
mov
xchg
bndstx
and
leave
inc
cmp
sbb
dec
(bad)
loopne
mov
loope
xchg
(bad)
into
xchg
lock
test
jbe
mov
push
pop
les
cmp
mov
(bad)
repnz
call
xor
ficomp
xor
xchg
cs
aam
xchg
push
test
xor
or
fsubr
enter
adc
lock
test
sub
fcmovb
scas
push
mov
or
cs
setp
xchg
xchg
sbb
(bad)
cs
fs
frstor
push
push
in
pushf
xchg
(bad)
repnz
dec
mov
fimul
daa
fwait
test
jnp
scas
push
lock
xor
in
sub
cld
sbb
mov
dec
add
pop
fimul
mov
sti
mov
mov
adc
jo
cmp
mov
daa
ins
enter
outs
dec
lods
rcr
cs
push
mov
and
sub
aas
xor
clc
xchg
add
ret
cwde
mov
xchg
stos
aaa
mov
xor
inc
mov
test
out
inc
les
sub
leave
data16
fldcw
xor
icebp
aad
sub
in
xchg
shl
mov
mov
ins
sub
mov
cdq
jp
stos
jp
pop
dec
arpl
test
inc
dec
inc
popa
mov
(bad)
push
mov
mov
test
mov
aad
pushf
cmp
fdiv
gs
sub
scas
add
xchg
push
mov
dec
sbb
and
std
mov
xor
mov
test
cs
mov
cdq
add
jle
out
adc
cld
les
jmp
mov
pop
cs
(bad)
mov
cdq
(bad)
cs
inc
mov
daa
dec
movs
pop
xor
jbe
jp
jge
sbb
cs
mov
sub
or
jge
jb
je
add
jp
and
sahf
test
movs
inc
daa
add
adc
(bad)
fadd
mulps
xchg
aas
dec
sub
jge
add
leave
sub
adc
daa
sbb
sub
jbe
jmp
inc
xor
adc
scas
bound
jno
(bad)
aaa
jmp
cmps
xchg
adc
adc
fcomip
fcom
adc
jge
mov
and
shl
mov
scas
fild
mov
pop
out
sbb
and
test
sub
cs
cmp
dec
or
push
sub
push
rol
cs
adc
daa
outs
outs
int3
loope
psllq
nop
sub
scas
hlt
cmp
(bad)
call
adc
sub
sbb
clc
icebp
ror
or
jmp
mov
pusha
sbb
movs
sbb
xor
xor
mov
lock
or
mov
sbb
adc
jge
fs
sti
dec
clc
in
into
dec
out
arpl
fwait
inc
adc
or
sbb
push
js
cld
add
and
ds
scas
retf
nop
add
daa
aam
movs
das
jae
push
out
fcmovnb
ins
out
cmps
scas
fst
sub
ror
push
inc
repnz
xor
pop
jmp
push
clc
sub
aas
xchg
shl
scas
sti
mov
xchg
inc
scas
ja
xor
sbb
scas
jge
xchg
sbb
push
xor
push
pop
cmps
mov
xchg
into
(bad)
fld
test
(bad)
xor
lea
jmp
mov
ds
aas
cmp
test
jle
(bad)
xlat
cs
lea
shl
jmp
cmp
lea
pop
aam
xor
adc
add
sub
fdivr
adc
push
mov
(bad)
jle
movs
mov
shr
outs
adc
xchg
jge
out
stos
jmp
dec
push
dec
into
push
cmc
arpl
dec
dec
mov
push
mov
mov
sti
retf
dec
rcl
jmp
call
add
mov
and
push
repnz
inc
xor
mov
mov
pusha
test
(bad)
xchg
addr16
pop
jl
pop
pop
in
fnstsw
xchg
add
inc
shl
mov
dec
cmc
mov
cli
push
ins
dec
out
and
inc
popa
cmp
je
test
xchg
sub
mov
cmp
outs
jl
push
add
mov
stos
(bad)
push
cmps
ds
jl
test
add
cmp
xchg
fcomp
ins
(bad)
dec
js
out
scas
(bad)
and
xor
or
adc
and
cmp
inc
pop
cmp
dec
push
push
mov
xor
sti
ret
dec
out
jmp
jp
jl
mov
xor
cmp
repz
call
mov
(bad)
scas
sub
mov
push
add
into
mov
xchg
repnz
pop
push
popf
dec
(bad)
fnsave
push
dec
js
adc
cs
popf
loop
fist
mov
imul
retf
jmp
std
xor
imul
dec
leave
push
popa
outs
call
mov
cmps
mov
es
xor
(bad)
push
mov
inc
cli
push
icebp
fidiv
adc
dec
scas
pop
or
fldenv
cmp
push
add
sub
test
sbb
xchg
aam
push
push
mov
xchg
scas
push
cs
sahf
sbb
ret
fst
aas
(bad)
stos
cs
pop
leave
sub
std
mov
mov
or
cli
sub
(bad)
adc
push
pop
cs
mov
mov
push
push
cld
in
cmps
xor
pushf
mov
in
bound
cmp
icebp
std
xchg
pop
dec
xor
xor
(bad)
push
inc
ss
adc
cs
dec
sbb
push
icebp
push
push
adc
cmps
dec
cmp
jle
push
jecxz
ins
push
adc
jnp
daa
add
sahf
clts
dec
nop
cs
fdivr
cmc
jno
adc
ss
mov
(bad)
mov
out
jp
push
mov
stos
and
dec
add
xlat
fbld
xor
shl
rcr
dec
fmul
mov
loope
outs
mov
push
jg
iret
cs
jbe
adc
inc
push
xor
es
mov
rcl
jno
or
cs
xchg
xor
cs
dec
jb
sbb
inc
xor
(bad)
or
mov
je
xor
repnz
out
stos
xchg
add
(bad)
and
mov
xlat
loopne
(bad)
or
push
jg
icebp
fst
xor
adc
dec
sbb
stos
outs
push
scas
jg
pop
mov
data16
mov
movs
(bad)
sub
jl
ds
pop
popa
cs
es
or
mov
pop
retf
pop
dec
mov
sub
mov
add
xor
cld
or
jnp
daa
shr
cli
mov
inc
mov
in
jl
out
sbb
and
xor
cmp
mov
scas
jae
sbb
out
cs
mov
neg
jno
shr
add
test
ret
pop
fisttp
jae
mov
shr
in
xchg
xor
dec
daa
sub
mov
mov
aaa
outs
call
int3
push
cmps
jbe
xor
inc
(bad)
lds
(bad)
sbb
add
xor
cmp
div
(bad)
stc
xor
jg
outs
sbb
pop
aaa
mov
pop
out
aas
bound
push
je
scas
fsub
not
aas
add
xor
fwait
cmc
fdiv
arpl
inc
cdq
std
cs
ja
jl
jmp
cs
pop
enter
fs
adc
sbb
mov
fistp
cmp
sbb
dec
iret
fld
mov
xchg
test
mov
dec
sbb
cmp
stos
call
and
into
adc
lods
sub
repz
cli
fsubp
jo
sbb
cmp
xchg
int3
sub
mov
mov
fsubr
rol
sub
xchg
mov
xchg
xchg
jge
outs
jne
sub
jmp
xor
push
sbb
push
adc
aas
sar
movs
cs
lods
pushf
sbb
(bad)
jl
jmp
(bad)
mov
fidivr
and
(bad)
shr
dec
aaa
push
(bad)
push
mov
sti
xor
fld
cmp
fmul
or
ss
aam
js
(bad)
xlat
sub
cmp
mov
cs
fidiv
cs
mov
inc
daa
add
popf
ds
add
aam
adc
xchg
cs
sbb
jg
pop
fsubr
popf
cmps
and
ficomp
jp
adc
rcl
or
pusha
xchg
aad
mov
mov
mov
lahf
push
lea
outs
loop
hlt
pushf
sbb
xchg
fisub
fcom
mov
cs
jb
mov
or
adc
jmp
cs
sahf
lods
mov
int3
and
xlat
inc
(bad)
das
leave
daa
or
std
lods
out
add
mov
and
call
xchg
rcr
movs
pusha
adc
and
push
push
stos
dec
icebp
sti
ficomp
adc
inc
scas
shl
cbw
xchg
lahf
shl
mov
fwait
(bad)
aam
and
hlt
fisub
rcl
(bad)
out
setl
xchg
and
xchg
fucom
sti
xor
lods
stc
sbb
scas
sbb
cs
and
cs
rcl
mov
mov
adc
shr
sti
sub
jge
pushf
loop
fs
outs
or
xchg
sub
inc
out
imul
repnz
lock
shr
inc
adc
punpckhbw
add
stos
pop
sahf
das
xchg
aas
cli
in
scas
int
dec
rcr
cmp
scas
mov
ss
adc
xchg
cld
scas
cs
loope
jns
or
mov
cmps
add
cld
popf
cs
adc
jp
stos
lea
push
ja
jle
mov
cs
inc
ins
and
xchg
push
and
inc
mov
sub
stc
stos
push
out
mov
out
sub
ins
cdq
sti
lock
sub
ins
in
mov
jp
enter
sbb
mov
xor
movs
pop
add
jmp
leave
mov
dec
cs
inc
and
cs
cmps
push
movs
or
(bad)
out
dec
jmp
mov
inc
test
scas
jb
xor
jbe
ret
sahf
es
xchg
sub
mov
or
stc
mov
add
out
cld
scas
sbb
es
mov
aas
cmc
push
and
(bad)
fsubp
cs
in
xchg
pop
cmp
jb
shr
jnp
repz
pop
shl
push
aaa
and
jmp
out
mov
xchg
inc
cs
and
jns
mov
aaa
hlt
xor
aaa
jle
lock
ins
out
xchg
xchg
jbe
jmp
pop
or
loope
dec
inc
xor
mov
out
fs
xor
mul
scas
cli
ret
fwait
pop
xor
jb
pop
push
inc
mov
loope
ja
pop
xchg
adc
inc
add
(bad)
lahf
loopne
adc
or
sbb
pop
loope
hlt
iret
pop
outs
jge
imul
aas
sbb
scas
jle
push
mov
mov
cli
pop
movs
test
cmps
fs
imul
mov
(bad)
in
push
adc
test
inc
repz
cmps
data16
mov
and
mov
fistp
daa
jg
pop
mov
(bad)
scas
in
hlt
mov
into
inc
(bad)
repnz
jns
adc
inc
or
xchg
mov
out
jge
sub
and
test
bound
xor
dec
push
add
mov
loope
out
outs
push
sbb
sbb
xor
sub
fisubr
pop
pop
push
dec
pop
sbb
sub
mul
icebp
jg
loop
shr
lods
lock
adc
icebp
ret
dec
shl
mov
cs
shl
ret
pusha
retf
repz
sbb
aas
movs
(bad)
adc
cmc
mov
outs
(bad)
jp
dec
mul
(bad)
leave
adc
cdq
(bad)
iret
cmps
pop
jne
pop
aaa
sti
push
mov
sub
aam
push
ret
leave
pop
scas
mov
push
xor
push
cld
pop
ins
jg
outs
push
movs
cmp
sahf
test
fbld
sub
sub
inc
xor
arpl
and
lods
enter
nop
adc
psrlq
or
or
jmp
out
fst
shl
fistp
cmp
add
enter
scas
(bad)
out
mov
add
icebp
outs
ret
lahf
mov
test
sub
dec
push
inc
or
mov
daa
sub
mov
(bad)
ffree
dec
rcr
jmp
mov
sub
cmp
mov
mov
pavgb
jg
cdq
arpl
repz
icebp
push
fdiv
fdivr
fidiv
(bad)
and
dec
and
cmc
icebp
jnp
pop
dec
mov
adc
mov
pop
xor
test
sahf
les
xor
into
and
pop
sbb
xchg
sbb
jns
mov
lahf
imul
push
into
(bad)
sub
daa
lea
pop
cmp
pop
mov
pop
add
push
lods
imul
int
shl
pop
js
iret
ret
dec
xor
sub
push
ds
jno
push
shr
push
pop
call
(bad)
mov
jb
iret
fimul
xor
and
leave
and
push
fst
sar
push
(bad)
jne
fldcw
mov
js
mov
pop
cmc
out
out
xchg
sub
fist
dec
mov
popf
cmp
shl
cmp
aad
xchg
mov
push
push
mov
xor
ins
test
mov
push
inc
(bad)
retf
sub
push
jo
stos
xor
test
and
mov
aam
jg
out
push
pop
leave
sbb
sar
sbb
outs
mov
fstp
xor
test
and
cdq
and
sub
ins
idiv
cmp
cmp
cwde
sahf
pop
mov
xor
jns
lods
mov
jno
fnsave
call
dec
ds
cmp
icebp
sbb
cmps
add
push
stc
repnz
mov
(bad)
mov
mov
mov
cmps
pop
loopne
or
inc
lea
pop
iret
ss
fisub
pop
cs
dec
loop
xor
add
leave
int3
xor
or
fdivr
jl
cwde
xor
and
mov
stos
mov
inc
add
lock
jp
idiv
xchg
sbb
pop
pop
inc
out
(bad)
or
mov
fstp
rol
jmp
out
mov
xor
push
repz
popf
xor
scas
inc
xchg
dec
or
sub
cwde
and
fs
and
push
fldenv
and
stos
aam
fmul
sti
movs
cmps
xchg
fdivr
pop
cmp
jp
loopne
pop
dec
mov
and
push
call
or
mov
daa
int
and
ds
xchg
outs
dec
mov
ins
popf
adc
inc
mov
cs
dec
and
mov
pop
es
js
xchg
test
movs
jge
pop
pop
out
mov
sub
dec
stos
in
add
int
pop
js
xchg
jne
and
sbb
je
out
inc
sbb
ja
stos
pop
xor
sub
mov
lea
jnp
fs
outs
shl
inc
cmp
inc
pusha
and
push
cld
daa
mov
dec
xchg
xor
popf
dec
xor
adc
xor
rcl
das
fild
mov
adc
add
idiv
or
into
and
stos
dec
sub
leave
ror
addr16
jnp
xchg
jmp
cwde
sbb
pop
push
dec
cmps
and
mov
and
idiv
push
push
cdq
cmps
mul
outs
fld
(bad)
adc
sbb
sahf
inc
jbe
imul
leave
cdq
jno
mov
lds
lods
jecxz
sub
pop
movups
jmp
mov
dec
cmp
in
or
add
test
stos
daa
push
xor
rcr
shr
out
(bad)
stos
(bad)
fisttp
pop
mov
aam
sbb
push
jp
call
add
(bad)
adc
pop
xor
call
aad
push
fwait
xchg
or
sbb
lahf
cmp
lahf
add
outs
xchg
push
xchg
and
jmp
mov
push
and
gs
push
fcom
xlat
rcr
lea
jle
sub
or
daa
and
faddp
add
adc
sub
push
scas
sbb
pop
adc
cdq
out
sbb
push
sbb
gs
je
lods
inc
xor
push
xchg
aaa
stos
bound
shl
dec
push
inc
call
xchg
pushf
xor
push
mov
lea
cmps
in
cmps
sbb
sbb
add
jl
outs
pop
pop
dec
dec
xor
cs
sahf
sbb
push
and
jne
mov
jns
pop
jp
sub
(bad)
out
pusha
nop
sbb
sub
loope
mov
ficomp
xchg
movntps
out
retf
rcl
pop
mov
mov
cmps
xor
cmp
sbb
lods
mov
lds
in
icebp
xlat
scas
xor
jecxz
mov
mov
lods
xchg
add
add
rcr
out
into
add
scas
retf
mov
sahf
fcmovbe
nop
stos
sub
(bad)
cmp
fwait
cs
mov
and
out
cs
xchg
idiv
pop
sbb
icebp
sti
xchg
fld
cmp
cs
in
and
movs
lock
or
js
jle
mov
aam
ret
cwde
mov
xor
jne
push
popa
jecxz
lock
pop
movs
jmp
and
pop
shl
sbb
xor
or
and
in
or
push
mov
sub
jmp
pushf
icebp
aas
cwde
or
fsubp
jg
push
in
cmps
mov
imul
push
inc
xlat
cs
push
aad
and
adc
mov
sbb
xor
(bad)
sahf
cs
push
stc
xchg
loope
jnp
lds
jp
or
cs
sahf
push
add
mov
inc
out
repz
xor
xor
lea
jle
jg
xor
in
xchg
int3
lahf
out
cdq
cmc
mul
xlat
mov
in
mov
mov
out
imul
ja
cs
jb
stc
mov
pop
push
shl
xor
bound
cs
cmp
xor
push
gs
retf
adc
mov
or
fbstp
cs
xchg
aam
stos
inc
or
mov
and
cs
cmp
mov
fisubr
jecxz
repz
sub
cs
inc
cmps
push
adc
pop
mov
aaa
mov
out
pop
cmp
xor
dec
jmp
mov
test
xchg
fnstenv
repnz
cmp
(bad)
xchg
test
nop
mov
lods
cmp
jl
jns
xor
and
fwait
sub
push
leave
dec
dec
push
xchg
rcr
das
cs
stos
in
(bad)
bound
mov
daa
adc
xchg
mov
and
stc
or
jmp
jp
call
fnstcw
and
sbb
repnz
fnsave
dec
adc
jns
test
mov
and
sahf
fadd
mov
dec
pop
or
xchg
scas
mov
sbb
mov
xor
repz
dec
sbb
dec
or
sti
xor
aam
push
fs
call
inc
enter
int
fprem
in
les
sbb
pop
ins
loop
mov
sub
xor
pusha
jnp
scas
stos
xchg
pavgb
bound
xor
dec
inc
int
push
or
vpsraw
scas
sub
call
jns
xor
xchg
cld
ret
push
ret
lods
ins
pusha
cli
mov
ins
pcmpeqb
ret
(bad)
addr16
jnp
loope
jmp
sbb
cmps
leave
(bad)
cmps
ins
add
jl
and
push
xchg
mov
and
(bad)
dec
outs
sub
sub
out
or
jno
ss
xor
sbb
fidiv
mov
and
mov
add
aam
jno
test
mov
dec
mov
mov
mov
cmp
pop
arpl
adc
jae
sub
jp
fsub
lock
xor
out
push
clc
or
add
mov
lock
ret
and
fyl2x
jecxz
xchg
cs
sbb
bnd
and
enter
pop
fnstcw
cs
mov
inc
mov
in
(bad)
sub
(bad)
stos
xor
fsubp
jbe
and
ins
add
push
inc
add
sub
inc
in
jp
scas
(bad)
fimul
outs
aas
xor
add
out
cs
pop
nop
call
jmp
sub
(bad)
imul
and
add
(bad)
mov
retf
outs
fisub
jmp
ret
test
aaa
sub
out
imul
scas
adc
xchg
inc
xchg
adc
cs
jne
call
cs
cmp
sar
(bad)
into
xchg
(bad)
mov
stc
jmp
bound
out
jb
shl
in
fcmovu
push
lds
push
aaa
neg
mov
loopne
cs
push
mov
xor
sub
xchg
cld
mov
adc
pop
push
aam
add
lahf
cs
pop
inc
xor
ins
mov
mov
jg
call
cwde
fs
loopne
xor
stos
xor
jle
cli
popa
imul
jno
adc
add
push
mov
movs
les
fiadd
pop
test
jbe
in
shl
into
mov
movs
xor
ret
xchg
dec
fisubr
cmp
enter
push
mov
rcl
stos
cmp
adc
pop
(bad)
cs
das
scas
scas
or
test
jmp
(bad)
pop
push
movs
jb
stos
ins
lods
cmp
data16
cwde
cs
add
ror
cs
pop
pusha
lds
test
xlat
xchg
retf
dec
push
dec
add
out
inc
mov
jns
call
aas
cs
push
outs
(bad)
xor
mov
int
xchg
lods
loop
cs
inc
add
popf
cdq
retf
add
mov
jmp
mov
scas
std
xlat
movs
sbb
push
sysret
test
fs
push
neg
loope
hlt
lods
(bad)
pop
or
push
shl
mov
push
inc
aad
sub
pushf
xchg
in
push
nop
dec
jo
dec
imul
data16
cld
xchg
xchg
adc
pop
ins
jg
imul
test
leave
cmc
inc
xor
inc
push
ds
xchg
mov
sub
cld
sub
push
jge
add
add
cwde
jmp
out
cld
(bad)
arpl
imul
or
inc
out
sub
(bad)
pop
mov
aam
icebp
out
(bad)
(bad)
sbb
cwde
pop
cli
mov
cmp
(bad)
xchg
in
push
fdivr
test
dec
(bad)
cmp
xlat
into
leave
ds
xchg
sub
add
push
dec
jne
push
cwde
repnz
xchg
mov
ds
retf
bound
enter
cwde
das
mov
pop
leave
add
sbb
xlat
add
dec
int3
js
ret
ds
push
jle
or
jae
mov
bound
in
arpl
ds
loop
pop
cs
pop
push
dec
sbb
push
sub
jle
or
scas
and
push
or
xor
xor
enter
test
pop
add
les
and
mov
jge
pushf
cs
aam
ret
sub
out
aas
inc
stos
mov
cwde
sub
mov
fcomp
add
dec
mov
(bad)
icebp
gs
jle
sbb
and
cs
cdq
mov
cs
mov
ret
in
rcr
cli
jne
xor
inc
fist
push
push
mov
inc
(bad)
imul
jmp
pop
pop
pop
dec
ds
sahf
sub
fnstenv
enter
leave
add
mov
jne
xchg
data16
scas
mov
jmp
pop
sbb
dec
sub
dec
ret
jle
xchg
cmps
movs
add
test
push
(bad)
retf
cmp
cs
mov
outs
pop
fcomip
add
mov
stos
mov
cs
arpl
ret
das
gs
(bad)
or
and
idiv
mov
jg
inc
ja
retf
push
les
cs
cmp
inc
jmp
(bad)
das
icebp
push
imul
mov
mov
sub
fimul
pop
imul
push
pop
movs
cmp
mov
clc
jg
js
test
iret
mov
les
(bad)
mov
adc
push
sbb
push
test
les
pop
iret
cs
js
jo
adc
xor
sub
cs
add
xor
mov
retf
xor
sub
pusha
jg
rol
test
add
enter
inc
out
scas
and
cs
sar
or
mov
cs
mov
and
push
sbb
scas
jmp
jns
push
mov
scas
outs
cli
retf
lahf
mov
loopne
jecxz
inc
movhps
pop
fdiv
cmps
in
fwait
jns
outs
xor
mov
ficomp
xor
xchg
outs
mov
cs
shl
pop
sub
adc
in
(bad)
les
retf
rol
ss
in
mov
out
xor
jo
popa
mov
mov
push
scas
out
hlt
clc
dec
repnz
cs
and
call
stos
cs
push
movs
push
sub
jnp
sahf
(bad)
mov
adc
xchg
into
pusha
xlat
jb
add
jmp
mov
jae
mov
rol
cs
mov
cs
add
cs
fdiv
(bad)
leave
cs
stos
fwait
sti
enter
cs
pop
sbb
sbb
cs
push
adc
jmp
ficomp
and
lahf
cmc
sar
jecxz
(bad)
cs
jmp
mov
xor
ins
mov
arpl
imul
fist
lock
fmulp
fsub
add
add
icebp
ins
xlat
into
movs
outs
inc
cmp
or
pusha
pop
mov
cs
xchg
(bad)
call
sbb
dec
fild
fisubr
mov
(bad)
cs
dec
test
cs
or
cwde
mov
nop
sub
or
nop
loopne
les
div
lds
jmp
sub
mov
arpl
iret
into
push
cmps
test
inc
push
push
fsub
mov
rol
dec
jecxz
ins
push
dec
add
xchg
pop
(bad)
push
adc
movs
cmp
sbb
xor
jl
stos
sub
mov
add
and
in
pop
(bad)
mov
mul
push
cmp
jb
and
sbb
add
(bad)
cmps
jne
cmp
fnstenv
fidivr
leave
call
pop
xor
xchg
fcmovnbe
or
(bad)
cmc
shr
es
mov
loopne
jo
loop
mov
sahf
mov
(bad)
outs
fadd
adc
inc
cs
mov
into
ins
aas
jae
add
scas
jnp
dec
sahf
cs
loopne
out
sbb
xor
ins
jge
jne
adc
dec
rcl
pushf
sub
cmp
xchg
jbe
stc
dec
pop
mov
fnstenv
mov
mov
push
scas
pop
scas
push
add
cs
sbb
ds
cmp
mov
mov
mov
neg
mov
sub
dec
test
add
xchg
pop
(bad)
(bad)
jmp
test
jne
mov
add
(bad)
xchg
scas
mov
xor
aas
cs
xor
inc
xor
cmp
xchg
push
xor
adc
pop
fsub
push
pop
sbb
retf
scas
rcr
mov
outs
repnz
cli
mov
sub
xor
add
fist
repnz
movs
cwde
aad
jmp
cs
rol
out
sbb
xchg
cdq
push
xor
out
push
jl
xchg
jno
(bad)
sbb
ror
jg
push
cmp
mov
mov
jecxz
pop
mov
xchg
and
dec
sub
cmps
out
cmp
mov
dec
sub
inc
sub
lock
in
out
repz
pop
xchg
push
mov
aas
mov
addr16
jmp
inc
inc
sub
jb
aaa
out
cld
or
aas
fist
ret
cwde
sti
mov
scas
jb
and
mov
jl
pop
ror
dec
aas
imul
ret
cs
test
mov
or
cs
fadd
jns
scas
lock
cs
push
cmp
mov
fadd
ret
(bad)
mov
pop
jo
sbb
jmp
push
rol
mov
sbb
cs
ins
push
(bad)
mov
aas
or
mov
xor
inc
or
loop
sbb
int
mov
int3
and
cmp
pop
outs
adc
mov
cmp
mov
movs
cs
repnz
aas
add
loop
int3
sti
mov
emms
push
dec
jnp
xlat
pop
mov
pusha
stc
xor
or
outs
cmp
dec
push
inc
jmp
fwait
dec
into
mov
mov
or
mov
xchg
mov
xor
xchg
sub
push
jle
mov
cmp
xor
ds
xchg
xlat
bound
pop
cmps
xor
cmp
cmp
push
inc
jp
sbb
out
and
push
cmp
adc
ss
adc
inc
sub
or
jnp
cmp
into
xchg
xor
mov
out
fucom
cs
ror
cs
cwde
rol
stos
add
pop
inc
pop
jp
into
aam
mov
push
and
dec
push
retf
xchg
cs
and
stc
inc
sub
frstpm(287
mov
outs
sub
scas
push
adc
jg
cs
rcl
inc
dec
add
(bad)
popa
xor
jns
out
iret
add
sbb
imul
cs
sti
push
stos
pusha
bound
bswap
pop
push
test
mov
adc
lahf
into
sahf
mov
shr
es
fstp
jmp
inc
(bad)
mov
out
popa
ret
push
mov
add
call
mov
scas
xchg
sahf
dec
(bad)
das
mov
sbb
cwde
fwait
aam
push
cmp
fld
loopne
adc
sub
dec
dec
cmc
dec
fstp
push
sub
cs
xchg
aaa
unpcklps
popa
pop
(bad)
sub
jo
ror
xchg
xor
mov
test
push
mov
stos
sub
and
push
lods
dec
mov
mov
ror
mov
cmp
sti
test
push
jno
ret
cdq
leave
cmp
mov
retf
xor
and
pop
ret
add
nop
mov
movs
mov
fwait
movs
xor
ficom
lea
jge
aam
shr
xchg
adc
add
and
lods
xlat
push
jno
fcmove
mov
sbb
(bad)
pop
xchg
add
sbb
dec
cmps
ret
and
rcl
inc
dec
or
sub
std
adc
scas
pop
in
pop
adc
lea
jmp
cmc
into
mov
out
outs
loop
cwde
fild
cs
ja
pop
popf
das
xchg
mov
pop
mov
push
mov
xor
cmp
sahf
adc
out
xchg
sub
add
inc
inc
sub
xchg
cs
jmp
or
popf
mov
fs
cs
xchg
ret
inc
fisub
cmp
mov
push
dec
je
xchg
pushf
mov
(bad)
(bad)
pop
add
mov
sbb
sahf
pop
in
sub
mov
dec
sub
jg
mov
ret
dec
mov
sbb
jg
sub
out
inc
dec
nop
int3
fld
or
mov
mov
sub
in
call
push
es
ins
std
sub
aas
mov
mov
sub
cmp
xchg
xor
dec
sbb
outs
cs
into
cmp
pop
sbb
es
push
scas
pop
pop
and
pop
mov
icebp
out
ret
inc
mov
or
lock
or
mov
adc
mov
ror
out
outs
movs
out
xchg
retf
mov
add
jne
xor
mov
ret
mov
cs
xlat
fbld
jnp
outs
aas
sub
add
cs
in
mov
iret
rcl
sub
in
sbb
enter
inc
js
ins
and
or
or
stc
mov
push
xor
inc
fsubp
into
add
movs
push
ds
pop
shl
inc
aad
aaa
aam
cs
into
jg
sub
sub
mov
pop
and
cmp
jo
sahf
inc
repnz
or
rol
sub
mov
lahf
adc
jno
outs
ret
enter
fild
retf
data16
or
lods
mov
addr16
inc
rcr
scas
push
sub
push
sbb
ds
lods
scas
(bad)
pushf
mov
or
sahf
cmps
repnz
loopne
sbb
and
into
or
movs
mov
jle
xchg
push
mov
adc
out
sub
cmps
mov
loopne
(bad)
jecxz
mov
mov
xchg
mov
push
sub
cs
cmps
dec
and
sbb
popa
add
mov
loop
pop
loope
(bad)
xchg
out
scas
hlt
movs
cs
enter
(bad)
les
iret
lock
imul
jb
jp
sub
sub
repnz
sbb
es
scas
(bad)
mov
push
daa
mov
in
icebp
outs
or
mov
fcom
inc
retf
sub
mov
fcmovbe
popf
xchg
sbb
mov
test
pop
adc
retf
jnp
xor
pop
jmp
mov
pop
rcl
nop
je
pop
sub
xchg
out
ret
outs
addr16
jecxz
mov
inc
mov
daa
sub
inc
gs
jno
jns
push
push
xchg
cs
loop
adc
dec
pop
test
jg
add
pop
jae
popf
fisttp
ds
jmp
cs
push
pop
or
in
imul
inc
call
pop
outs
mov
push
cs
mov
jo
movs
retf
cmp
addr16
pusha
cmp
in
enter
ins
pop
mov
cs
mov
ret
xor
fisubr
jecxz
sub
or
adc
(bad)
popa
ret
aam
fst
outs
fnstcw
inc
or
je
inc
in
pop
aad
cwde
test
stos
dec
inc
jge
mov
sbb
jecxz
stos
mov
bound
in
les
xchg
push
mov
mov
jns
push
xchg
stos
and
sub
cdq
mov
outs
movs
xchg
jg
xor
mov
jle
es
cs
mov
loop
sbb
mov
dec
pop
cmp
int
xor
repz
ror
jo
aas
call
stos
imul
(bad)
dec
push
xlat
xor
add
retf
dec
pop
scas
outs
sub
mov
cs
xchg
ds
adc
inc
cs
xor
mov
cmp
dec
(bad)
cs
jmp
inc
or
cmps
mov
and
ficom
icebp
ficomp
and
mov
mov
in
arpl
out
pop
ret
shl
mov
sbb
test
xor
sub
ss
retf
test
jae
cmp
xchg
cmps
mov
mov
fwait
or
xor
xor
cdq
fsincos
gs
mov
je
jp
fstp
rcl
pop
mov
ds
cmp
fmul
sub
cmps
rcr
bound
(bad)
xor
fstp
cmp
add
out
add
xor
push
and
leave
idiv
mov
mov
mov
xchg
cs
mov
aaa
je
outs
pop
test
(bad)
mov
push
cs
ret
test
jmp
repnz
mov
sbb
(bad)
cs
fdivr
jp
push
sbb
mov
loope
sbb
or
cs
stos
in
out
mov
cs
jmp
stos
cmp
icebp
xlat
xor
jno
and
cmps
pusha
into
out
aad
call
sar
mov
inc
cs
fisttp
sbb
jo
inc
mov
jmp
mov
ret
call
inc
cmp
pop
push
inc
add
cs
pop
mov
mov
jae
fs
cs
or
std
outs
pop
add
arpl
or
fwait
sub
mov
mov
xor
xchg
cmp
sbb
push
sub
popa
dec
cs
mov
int
test
or
xchg
mov
push
push
scas
aad
test
(bad)
mov
call
lea
mov
not
pop
xchg
repz
mov
add
into
aad
xchg
arpl
retf
push
out
push
mov
push
inc
(bad)
lods
(bad)
mov
push
cs
shl
ret
out
add
pop
push
xlat
and
dec
sub
adc
xchg
xchg
nop
mov
xor
(bad)
jbe
xchg
mov
sahf
das
inc
aaa
in
mov
and
cs
nop
xchg
sbb
cs
imul
cs
aam
xlat
pushf
push
sbb
jecxz
outs
scas
sub
add
mov
fwait
aam
jmp
add
or
mov
sub
jmp
leave
(bad)
fisubr
(bad)
sbb
les
jmp
lock
xor
das
fidiv
(bad)
sbb
in
mov
jmp
jge
adc
add
scas
lea
cmp
ret
mov
and
mov
das
mov
dec
mov
pop
mul
cs
jl
dec
lock
test
daa
mov
push
sub
pop
jp
adc
jecxz
add
jb
(bad)
outs
push
cs
adc
aas
and
inc
into
dec
pop
adc
shl
enter
fs
adc
call
loop
dec
mov
xor
cmc
mov
xchg
or
or
jae
cs
mov
mov
call
fsub
cs
aam
mov
mov
stos
push
aam
pop
cmp
pop
add
cmc
outs
xlat
call
es
push
mov
into
add
inc
scas
jnp
arpl
lods
xor
xchg
ret
lahf
aad
ficom
adc
jb
imul
and
loopne
lsl
out
xor
cs
retf
pop
(bad)
xchg
fist
aam
gs
sub
cwde
clc
imul
pop
mov
call
mov
xor
rcl
mov
sar
inc
out
test
xchg
aad
lock
popf
sub
es
rcr
cld
sub
ss
cmps
cwde
sbb
or
mov
cs
test
and
or
arpl
xchg
cs
mov
and
into
jmp
loopne
adc
jo
cs
cmp
aad
mov
and
ss
or
xor
fidiv
(bad)
mov
imul
sub
test
xor
adc
mov
pop
mov
(bad)
test
adc
test
pusha
ror
add
mov
xchg
jge
jbe
pop
cs
cmps
add
push
dec
test
mov
aaa
fs
lahf
xor
jmp
bound
pop
cs
mov
leave
ret
pop
jo
test
jge
push
sbb
and
inc
scas
ds
mov
push
inc
mov
cwde
and
xor
outs
icebp
scas
mov
shr
lahf
aas
mov
(bad)
test
icebp
rcr
xchg
lods
int3
test
xor
sar
inc
ret
pushf
mov
int
lods
cs
sub
push
daa
imul
clc
jl
rcr
inc
mov
dec
js
cs
iret
(bad)
je
cmp
push
or
scas
dec
les
daa
cmc
ss
mov
fisubr
jae
and
arpl
cmp
fcomp
shl
add
add
enter
xor
out
test
retf
sbb
xlat
popf
dec
mov
adc
add
in
out
jae
or
push
cmps
cmp
cs
test
test
jecxz
inc
inc
mov
or
pushf
sbb
push
jae
(bad)
lahf
cs
inc
retf
jmp
scas
cmp
add
shl
mov
or
daa
cmp
xchg
stos
adc
jne
sti
jg
xchg
cdq
scas
sub
add
inc
shr
cs
mov
fwait
push
ins
jbe
call
push
test
xor
sbb
ss
xchg
adc
jmp
js
test
cs
(bad)
in
mov
in
lods
jno
mov
sahf
cs
outs
sub
es
sbb
test
inc
push
mov
lods
outs
add
hlt
mov
sbb
addr16
movs
mov
bound
(bad)
mov
pop
push
clc
cs
cmps
pop
push
push
sub
aaa
sub
add
aas
(bad)
xchg
test
les
mov
fs
lahf
push
retf
fidivr
jae
cs
mov
fsubr
cwde
pushf
loopne
inc
idiv
jns
ins
out
repnz
(bad)
hlt
jno
inc
jnp
cwde
fsubrp
pop
js
mov
inc
lods
mov
(bad)
cmps
add
retf
xor
enter
inc
sub
rol
loop
lahf
sbb
xor
das
jge
cmps
and
sub
inc
bound
addr16
jno
mov
jb
cdq
sbb
cmp
push
adc
mov
mov
out
adc
cs
in
cmps
jmp
lds
sub
mov
cdq
scas
xchg
loop
xor
sub
repnz
mov
outs
into
xchg
lods
jno
sub
out
and
xor
leave
cs
stc
mov
jmp
pop
and
add
ds
icebp
imul
into
xchg
push
mov
(bad)
mov
fistp
loope
adc
push
imul
push
dec
add
push
lock
push
loop
mov
int3
call
push
lea
mov
fnstenv
mov
inc
scas
push
and
movs
outs
xchg
aaa
jns
arpl
pop
dec
or
mov
ja
push
dec
add
xor
mov
cs
xor
xchg
aaa
in
dec
fcomp
pop
jl
dec
jb
jle
inc
cs
or
cpuid
sub
xor
and
stc
jle
imul
push
mov
cs
ins
and
sub
dec
cmp
and
xchg
pop
push
fdiv
sar
fwait
sbb
fcom
retf
xchg
imul
lods
(bad)
out
cdq
pop
rol
push
sub
xchg
das
or
or
cli
rol
sub
mov
xchg
sbb
out
xchg
leave
test
cs
or
mov
cs
push
popa
xor
(bad)
jns
cmp
mov
push
adc
outs
add
mov
jae
sub
das
cmp
xchg
jle
cs
out
lahf
push
fwait
add
je
xchg
aaa
bound
adc
scas
out
or
mov
or
or
add
sub
jge
xchg
and
idiv
test
pushf
fsubr
popf
xchg
loopne
push
jnp
imul
push
jae
cs
xor
(bad)
pop
inc
mov
jg
cmp
add
stc
scas
dec
push
ds
mov
jb
ucomiss
into
xor
imul
xor
adc
jno
sahf
inc
mov
jne
dec
pop
(bad)
fwait
(bad)
out
pop
sbb
or
jl
out
xor
adc
sbb
adc
rol
mov
into
les
jbe
iret
test
addr16
bound
add
mov
mov
aas
and
aaa
mov
(bad)
fistp
fcom
cs
jns
adc
iret
test
jne
mov
sub
inc
call
sbb
sub
scas
cmps
icebp
out
ins
inc
bound
push
sbb
xor
scas
add
dec
add
pop
push
cs
jl
in
outs
xor
out
dec
out
int
cs
call
sbb
ret
mov
nop
lea
rol
xor
rcr
xor
push
cwde
and
scas
or
out
or
jp
jbe
xor
cs
aaa
cs
and
mov
pop
cli
xchg
retf
cs
mov
test
in
cmp
mov
imul
jmp
loopne
pop
loop
lds
mov
fisttp
bound
fcmovnbe
fisttp
(bad)
cs
retf
jo
add
xor
sub
add
call
gs
jg
dec
add
pop
leave
and
mov
and
ins
push
dec
add
inc
push
ror
test
mov
cs
sahf
fsubr
out
retf
stc
fcomp
mov
pop
mov
std
dec
rcl
cmps
scas
pop
xor
jmp
sbb
imul
test
mov
xor
xchg
add
cmp
mov
jne
xor
cwde
xchg
bound
test
repz
sbb
mov
mov
loope
cmp
addr16
push
push
cmps
outs
push
cmp
stos
mov
push
test
add
push
push
(bad)
xchg
in
cs
lods
and
ja
sub
xor
or
push
and
in
cli
jne
clc
dec
cs
jb
and
xchg
sbb
ror
(bad)
ins
jno
cs
stc
mov
jmp
imul
aad
enter
inc
(bad)
adc
add
push
mov
(bad)
xchg
out
ss
xchg
cs
jmp
xor
xor
test
repnz
cmps
mov
mov
rcr
(bad)
clc
push
inc
sub
std
pop
adc
xchg
push
stos
dec
dec
adc
pop
pop
xor
jg
fwait
daa
jmp
popf
xchg
(bad)
out
test
clc
sub
(bad)
fadd
rcr
shr
cs
push
les
iret
mov
inc
jns
sbb
scas
xcrypt-cbc
cmps
xchg
imul
shl
fld
jge
push
loopne
xor
add
xchg
push
and
mov
push
mov
in
add
mov
jbe
sub
je
in
dec
mov
iret
fist
cmps
hlt
movs
scas
xchg
lock
int3
test
mov
pop
fldenv
scas
rcl
xor
jbe
imul
xchg
out
cs
sub
ds
push
outs
adc
push
mov
dec
popf
repnz
(bad)
jbe
xor
xor
jae
repnz
push
pop
pop
scas
sbb
push
ret
push
sub
pop
add
cs
xchg
push
ds
imul
out
cmps
retf
and
sub
sbb
test
mov
add
mov
jbe
cs
out
add
cs
or
mov
add
daa
sbb
scas
mov
ins
adc
shl
cmp
out
aad
mov
cs
bsf
daa
pop
ins
push
sbb
push
cs
inc
mov
cmp
jmp
xchg
mov
shl
inc
lds
test
int
inc
push
scas
push
sub
pop
fcmove
jne
fist
sbb
(bad)
in
mov
mov
test
mov
mov
push
push
xor
adc
and
movs
pop
lock
cmps
call
loop
ficom
stc
mov
add
xchg
cs
stos
xchg
xchg
and
movs
push
ja
loop
repz
pop
dec
mov
inc
enter
js
jnp
pop
cmp
ja
stos
mov
(bad)
sub
into
outs
push
aas
lock
(bad)
or
bound
shl
adc
sbb
xchg
fs
loopne
add
cs
or
rcl
ss
inc
jp
add
and
call
dec
adc
aas
mov
xor
inc
push
mov
jp
test
inc
loop
jl
jecxz
inc
and
popf
aaa
jne
add
je
outs
inc
les
es
cs
dec
jne
fadd
adc
inc
pop
inc
sbb
mov
dec
sub
jne
cmp
pop
int
push
cmp
fldenv
xchg
out
inc
xchg
mov
ficomp
xor
call
mov
or
pop
push
mov
sar
push
sbb
loopne
sbb
daa
gs
cs
jmp
ja
addr16
xchg
setl
in
cmp
stos
push
imul
mov
sub
mov
mov
mov
out
out
cs
dec
inc
jo
cmp
jmp
cs
mov
call
xchg
dec
dec
cs
dec
rcl
mov
adc
jbe
adc
sti
std
outs
add
jge
pop
out
xor
xor
pop
outs
out
cmp
push
ss
pop
mov
mov
in
test
and
cs
stos
or
dec
add
loopne
cs
inc
dec
inc
mov
pop
or
out
push
inc
add
jns
ins
(bad)
push
icebp
movs
xor
cs
xchg
adc
pop
pop
rcl
cs
push
loopne
mov
jle
ret
loopne
cmp
movs
xchg
cdq
jg
xor
add
pop
scas
ret
leave
push
not
(bad)
(bad)
jge
pop
fdivrp
and
in
data16
icebp
xor
fsubr
scas
mov
aad
not
cmp
lds
das
mov
leave
out
jo
jbe
jg
bound
adc
clc
mov
xor
mov
stos
xchg
pop
push
fld
push
loope
sub
cs
(bad)
cmp
inc
sar
mov
sub
pop
(bad)
scas
mov
fs
shl
push
call
mov
dec
inc
jmp
nop
pushf
repnz
shl
cs
pop
ss
dec
dec
leave
or
mov
out
ret
data16
xchg
cwde
into
clc
mov
ins
jmp
adc
jae
adc
push
push
clc
(bad)
dec
retf
or
loop
mov
repz
out
imul
cdq
dec
cs
add
xor
xchg
jle
lahf
out
mov
or
mov
bound
inc
mov
pop
(bad)
jns
push
inc
popa
ret
lea
jbe
adc
cmps
movs
mov
stos
(bad)
cs
ficom
sub
add
(bad)
out
(bad)
call
sti
cs
test
lods
shl
cs
add
scas
and
ds
ins
icebp
or
paddusw
cmp
push
adc
jnp
pusha
sbb
aam
scas
dec
sti
ficom
mov
test
ret
data16
and
inc
adc
rcl
loopne
mov
mov
sub
or
ror
adc
or
pop
cmp
dec
pop
xor
xor
push
pusha
les
mov
or
xor
fstp
rcl
icebp
sub
cmps
je
movs
xchg
stos
cs
push
aaa
mov
je
out
hlt
ficom
or
aam
jo
jmp
outs
mov
sti
xor
xor
call
push
dec
daa
pop
sub
arpl
jecxz
xchg
push
jmp
pop
jns
fcomp
and
xor
jge
cmp
pop
mov
xchg
(bad)
dec
out
mov
sbb
loope
scas
scas
xor
mov
push
jl
jp
add
pusha
jo
js
lock
sub
test
retf
ins
fsubrp
cmc
gs
push
add
aas
cld
ss
sbb
push
xor
cmps
xor
retf
mul
fisub
daa
xor
(bad)
hlt
dec
lock
sub
sub
mov
fsubr
imul
jge
sub
sub
add
cmp
cs
rol
lds
cwde
ficom
xor
jne
xor
inc
dec
add
clc
pop
xchg
sub
mov
cmp
test
cmp
xor
scas
jae
fsubr
mov
fst
inc
ins
sub
(bad)
dec
mov
inc
and
ds
dec
sub
leave
mov
sub
pop
mov
pop
push
aam
inc
lahf
xor
out
inc
and
dec
dec
call
out
pop
das
dec
jle
sbb
fist
dec
pop
mov
mov
jo
dec
add
mov
sub
adc
pusha
xor
mov
xchg
sahf
jmp
(bad)
mov
mov
dec
jo
scas
in
mov
imul
icebp
xor
in
and
imul
mov
(bad)
(bad)
stos
sbb
retf
in
fsubr
dec
lahf
lahf
lahf
pop
sbb
xchg
mov
or
jmp
test
push
lods
stos
mov
and
xor
(bad)
xchg
scas
lahf
pop
pop
adc
shr
inc
aad
xor
add
push
movs
inc
cmp
inc
scas
retf
std
mov
mov
lea
loop
(bad)
push
mov
and
movs
pop
and
pop
push
ja
out
push
bound
fdivr
in
mov
sbb
xor
add
neg
xchg
cs
retf
movs
icebp
bound
push
fdivr
into
test
or
shl
arpl
lds
cmp
xor
pop
cs
sbb
or
cs
jo
jge
jae
xchg
fidivr
xchg
retf
into
mov
ror
je
sub
pop
outs
out
movs
scas
cs
pop
mov
enter
and
sahf
retf
cmps
fcmovnbe
cs
add
adc
mov
jae
popa
cmp
xchg
push
cmp
(bad)
pop
addr16
fwait
lods
out
loope
or
clc
jmp
sub
jl
mov
faddp
imul
sti
mov
push
dec
pop
scas
cs
stc
mov
xor
jb
pop
popf
and
pop
push
push
repz
xchg
shr
cs
cdq
lds
pop
push
in
push
outs
add
cmps
jmp
rep
fist
push
lods
cs
int3
dec
shl
xor
sar
dec
cs
cmps
out
imul
dec
adc
test
popf
repnz
push
cs
daa
cmp
cs
(bad)
cmp
jbe
mov
push
push
aaa
call
or
and
cs
outs
enter
(bad)
jmp
jg
cld
jl
(bad)
test
inc
jle
adc
and
mov
scas
sti
jne
or
mov
das
scas
popf
cs
sub
dec
sbb
or
pusha
repz
and
div
mov
lds
into
cs
lods
in
inc
add
jecxz
sub
mov
lahf
mov
aaa
(bad)
daa
push
cmc
jnp
pop
cs
xor
push
push
retf
pop
popf
cs
inc
and
sar
dec
sbb
cs
or
lods
div
cs
push
and
inc
mov
sbb
stos
test
cs
(bad)
jl
inc
adc
cs
cld
cmps
into
sahf
shl
adc
scas
ror
xor
test
push
fdivr
lods
out
cwde
pop
cli
mov
and
loopne
popf
outs
mov
mov
(bad)
or
out
cmp
sbb
scas
test
(bad)
fdivr
xchg
push
mov
into
outs
mov
popf
stc
pop
mov
aaa
inc
aaa
cmp
mov
or
sbb
mov
push
fisubr
xchg
or
aaa
(bad)
or
fisttp
les
jmp
(bad)
hlt
scas
mov
cmp
xchg
xlat
movups
adc
inc
hlt
data16
inc
or
xor
mov
sub
push
je
mov
jne
mov
rol
bound
sub
jmp
xor
inc
pop
stos
in
(bad)
shr
xor
test
mov
call
xor
inc
out
jns
pop
dec
add
adc
sbb
test
jge
mov
(bad)
(bad)
jne
stc
and
mov
jmp
inc
mov
leave
gs
not
mov
aam
or
mov
int
aam
adc
inc
push
fld
int3
pop
dec
adc
shl
test
shl
xchg
sub
setae
aad
adc
push
scas
adc
adc
stos
lock
mov
mov
cwde
stos
(bad)
sar
stos
int
ins
aaa
xchg
push
inc
cs
xchg
sahf
loop
in
inc
jle
xor
add
adc
pop
cmp
cmp
xor
push
add
popf
lea
stc
rcr
in
hlt
test
loopne
je
out
adc
mov
fcomp
es
daa
sub
scas
jg
and
sub
ret
movs
retf
ds
push
(bad)
pop
sub
sbb
cmp
ret
into
inc
imul
mov
mov
and
scas
push
sub
dec
cs
adc
stos
cs
xor
add
xchg
(bad)
stc
or
ltr
stos
jnp
push
xor
xor
into
lahf
enter
sbb
jp
jg
(bad)
lds
cs
pop
scas
jmp
mov
pop
jne
fwait
push
sbb
cwde
sub
retf
jmp
mov
lock
inc
cmps
push
xchg
cs
cs
das
cdq
stc
mov
sub
cs
pop
mov
pusha
sub
adc
jmp
int
enter
dec
mov
mov
shl
pushf
call
out
dec
leave
sbb
cli
mov
inc
ja
ror
add
ds
jae
es
loope
cs
mov
clc
das
out
pushf
bound
call
or
dec
and
jbe
xchg
push
fiadd
imul
scas
add
sub
xchg
scas
lds
pminub
mov
in
aas
and
popa
push
ret
jg
mov
aas
dec
adc
push
add
not
add
lods
cs
outs
xchg
mov
cmp
int3
out
ds
repz
xchg
jns
(bad)
adc
loopne
pop
pop
cmc
mov
outs
adc
clc
add
mov
xor
mov
out
mov
mov
cmp
push
fld
jle
shl
cs
cmps
or
stc
inc
mov
cs
sar
out
sub
adc
ucomiss
dec
fisubr
pop
out
pop
lods
fsubr
cmp
inc
in
cs
test
sahf
aas
scas
push
xchg
xchg
jmp
push
std
into
in
add
cs
mov
push
cs
fsub
push
mov
in
out
in
fcom
adc
int
pusha
inc
cs
je
js
lods
dec
add
mov
mov
xchg
sbb
jmp
out
repz
push
and
adc
mov
ret
sub
xchg
ror
sbb
mov
lods
enter
inc
jns
jmp
pop
mov
dec
mov
int
movs
or
loopne
and
movs
cs
mov
loope
cs
movs
dec
lea
mov
xchg
enter
xor
jae
push
pop
(bad)
div
aas
(bad)
push
add
test
inc
out
jnp
mov
xor
cmps
les
stos
clc
mov
dec
or
xchg
inc
ins
cs
sub
(bad)
lds
arpl
dec
fild
cs
push
push
push
(bad)
in
cli
dec
in
das
ss
inc
mov
xchg
sti
aas
enter
push
push
mov
mov
leave
cdq
loope
push
adc
and
iret
clc
stos
xor
(bad)
jecxz
frstor
popf
mov
mov
jae
push
sbb
jg
pop
xchg
out
out
stos
xor
add
xlat
in
clc
mov
aad
pop
xor
jecxz
sbb
sub
pop
sbb
xchg
sbb
xor
fisubr
mov
xor
sbb
push
imul
jo
lds
mov
stc
pushf
out
in
pop
sub
sbb
popf
les
or
sahf
and
and
pop
repnz
(bad)
out
imul
sub
jb
sahf
addr16
in
xlat
xor
imul
retf
cs
not
out
cli
inc
pusha
pop
fidiv
ret
aas
aad
(bad)
pop
scas
cs
adc
add
jo
ss
popa
cs
push
inc
pop
jno
mov
cs
nop
xchg
or
push
pop
sahf
adc
stc
aas
cs
(bad)
scas
push
mov
or
or
imul
jne
or
sbb
jp
dec
mov
jmp
pop
xchg
rcr
push
mov
(bad)
push
cs
add
xor
xchg
inc
mov
and
xor
jmp
add
addr16
add
jne
loope
ds
fwait
lods
out
cmp
pushf
dec
cmp
fnstenv
arpl
imul
leave
stos
pop
mov
ins
xchg
mov
repz
scas
adc
xor
mov
in
jle
jle
outs
cs
dec
clc
add
cs
fdivr
pop
mov
pop
mov
push
sbb
aad
dec
imul
lahf
das
mov
jmp
loopne
cmp
mov
rcl
mov
mov
mov
jge
fwait
imul
and
in
cs
mov
push
daa
js
or
cs
dec
push
ins
sub
fcomp
repz
sbb
pop
out
cmps
inc
jo
leave
mov
inc
cs
sahf
push
out
mov
fistp
lods
repnz
retf
add
stc
fldcw
mov
es
in
pop
stos
add
scas
adc
xchg
ss
ins
imul
pop
dec
lods
adc
jbe
push
cs
or
push
movs
ret
(bad)
cs
inc
cmp
rol
cs
jmp
outs
jbe
sti
or
xchg
xor
iret
mov
ja
jl
push
into
nop
mov
std
shl
adc
loop
sub
pop
repnz
loopne
sub
push
aaa
test
or
jl
push
adc
push
sub
cld
dec
sub
or
pop
jle
mov
pop
push
pop
or
aaa
rol
test
fnstenv
retf
sub
dec
rcr
daa
xor
push
out
test
(bad)
ret
adc
sub
cs
int
imul
or
lods
in
dec
mov
sub
nop
jae
xchg
loop
shr
sub
into
xabort
sbb
jge
lds
inc
ins
and
std
fcomp
push
xor
jle
cmp
aaa
retf
nop
xor
push
pop
push
adc
dec
das
addr16
cs
pusha
dec
jge
popf
sar
cs
sahf
enter
push
adc
cmp
bound
cmc
pop
cmp
push
inc
std
push
scas
sub
inc
cs
xlat
out
mov
(bad)
mov
dec
push
and
xor
pushf
and
aaa
inc
push
and
sub
sahf
or
pop
test
movs
mov
jmp
hlt
rcl
movs
stos
scas
int3
inc
imul
inc
adc
add
push
add
xor
ret
lahf
imul
popa
outs
pop
add
sbb
xor
xor
ret
jo
(bad)
fsubr
push
ror
mov
sub
arpl
adc
mov
cmps
mov
cmps
cs
jne
aam
(bad)
mov
cs
adc
cmp
sbb
fs
ja
rcr
push
and
les
ret
jmp
mov
mov
cmp
mov
dec
shl
sbb
dec
pop
mov
imul
aas
outs
call
sbb
adc
sti
das
xor
outs
in
std
pop
mov
imul
cmps
mov
sbb
or
test
adc
or
mov
mov
leave
mov
xor
les
jmp
not
mov
sub
mov
icebp
and
shr
test
dec
sub
xchg
fwait
push
addr16
mov
rol
ret
out
add
daa
imul
cmps
imul
ror
ds
(bad)
jbe
jp
dec
pop
sub
adc
pusha
lods
push
fcmove
pop
sub
push
pop
test
add
dec
jnp
xchg
sbb
in
or
int
loopne
into
cwde
(bad)
idiv
cs
ds
div
add
fwait
adc
out
repz
dec
mov
add
pop
mov
js
xor
repnz
jnp
adc
aam
xchg
push
mov
push
dec
psllq
mov
pusha
jl
and
ret
fild
sub
pushf
int
cs
scas
out
fisubr
sub
and
add
and
mov
pop
arpl
pop
pop
dec
jbe
pop
adc
fisubr
and
div
inc
push
or
and
scas
mov
test
fistp
xor
movs
and
scas
in
or
sbb
inc
cs
lods
fnstenv
xor
ins
nop
test
test
(bad)
push
scas
dec
xchg
xchg
sahf
in
sub
mov
out
sahf
(bad)
(bad)
lods
into
cwde
cs
mov
test
rcr
xor
idiv
push
xchg
(bad)
iret
push
int
pop
mov
stc
outs
dec
leave
mov
fstp
push
cmp
(bad)
sub
dec
xor
aam
and
xchg
jae
cdq
sbb
(bad)
cmp
rol
arpl
dec
mov
cld
xchg
jbe
loope
retf
pop
push
push
aas
add
out
pop
inc
jmp
mov
out
and
mov
loopne
push
rcr
or
(bad)
push
in
push
leave
daa
xor
push
gs
mov
sbb
ret
loopne
cs
retf
int
push
dec
outs
hlt
cs
sbb
xchg
ret
cs
mov
(bad)
in
shl
cs
fst
pushf
cmc
mov
cld
mov
lahf
call
mov
imul
out
fnstenv
or
cdq
out
fwait
push
jbe
adc
call
mov
mov
or
leave
(bad)
das
cs
cmp
cli
mov
into
fldenv
mov
imul
cmp
inc
dec
adc
sbb
aad
mov
mov
mov
out
fst
(bad)
outs
cs
xor
or
add
aas
sti
jmp
xchg
stos
sbb
sub
mov
lds
cs
cdq
retf
scas
cld
xor
xor
call
arpl
stos
and
sub
in
jl
pop
cmp
leave
dec
push
xchg
aas
pop
or
enter
xchg
or
jle
popf
pop
cs
add
iret
jbe
add
daa
mov
fiadd
xchg
rcl
cs
ffree
call
movs
sub
cs
cld
loop
int3
mov
cs
aad
or
sub
dec
sub
cs
or
aas
ss
or
mov
cdq
inc
lods
in
ss
dec
adc
pop
scas
adc
push
mov
iret
xor
jl
jnp
leave
out
and
setns
in
xchg
cs
jmp
cs
cmp
or
cs
scas
sub
jecxz
aas
shr
pop
mov
(bad)
or
sub
mov
adc
push
xor
cwde
adc
(bad)
out
cmp
mov
xchg
cs
push
cs
xor
sub
mov
fistp
lock
ret
js
in
mov
xchg
cmps
mov
jo
xchg
pop
inc
rcr
xor
cmps
jge
dec
pushf
pop
inc
sub
gs
fisubr
movs
pusha
ror
(bad)
ficomp
sbb
(bad)
mov
out
ror
mov
out
aam
push
add
(bad)
leave
cdq
push
enter
jnp
ja
pop
out
pop
cs
dec
cmp
fs
xor
xor
sub
test
repnz
or
loop
bound
add
movs
adc
cmc
xchg
or
gs
jg
cmps
leave
into
call
dec
xor
push
arpl
dec
push
outs
adc
cmp
inc
adc
sbb
dec
mov
and
aad
dec
test
sbb
xlat
stos
bound
inc
daa
aad
imul
lock
call
inc
stos
xor
(bad)
icebp
cdq
xchg
leave
xchg
lea
cmc
out
add
mov
push
inc
cs
push
and
jg
cs
inc
and
fcmovnu
mov
fisub
inc
push
int3
cli
mov
jp
and
aas
sbb
cmp
invd
nop
sub
sbb
mov
ficomp
mov
enter
cs
pop
push
loope
adc
push
sti
mov
daa
dec
aaa
xor
repz
pop
fcom
push
fild
outs
scas
fnstsw
pop
jge
lds
loope
cmp
aas
cs
dec
push
ins
add
xor
movs
in
or
push
lea
fxch
nop
and
or
sbb
add
mov
mov
js
mov
sub
imul
pop
sub
cli
push
sbb
jmp
test
arpl
jg
into
ret
sbb
pop
inc
inc
adc
ucomiss
retf
cs
xor
jb
scas
mov
cmp
adc
ins
fucom
push
lds
jecxz
fwait
push
ss
pop
cs
pop
or
cs
clc
jne
fs
(bad)
or
lods
out
popf
cmps
in
lock
push
push
adc
aad
xlat
fwait
mov
and
les
or
sub
pop
imul
sub
jp
fs
scas
ficom
aaa
push
cs
inc
leave
cli
fldcw
xor
and
and
jmp
inc
pop
lahf
push
scas
aas
out
sbb
ret
iret
pop
add
rol
mov
cs
aas
fstp
and
loop
fmul
retf
and
nop
mov
add
sbb
or
inc
and
add
push
or
sbb
inc
ja
dec
adc
push
inc
dec
mov
(bad)
sbb
nop
mov
repz
int
dec
(bad)
cs
cmp
leave
push
jmp
ins
and
pop
cs
or
push
xchg
pop
es
fcom
mov
inc
es
or
test
fst
cmp
mov
dec
(bad)
xchg
xchg
std
mov
xor
mov
mov
movs
cs
cmp
mov
xor
imul
xor
daa
and
cs
pusha
(bad)
jne
pop
xchg
sahf
mov
mov
in
ror
out
outs
pusha
pop
add
push
cs
mov
mov
xchg
inc
cmp
pushf
(bad)
popa
adc
scas
(bad)
(bad)
mov
enter
popf
adc
adc
cs
sbb
movs
mov
mov
cmp
sbb
cs
shl
loopne
sub
call
pop
mov
jmp
adc
daa
je
retf
nop
mov
sbb
pop
adc
inc
cmp
jecxz
mov
mov
adc
pushf
cs
enter
mov
and
and
inc
adc
xor
mov
fsubr
daa
je
xchg
mov
shl
js
imul
fidiv
int
repnz
outs
mov
iret
es
clc
mov
in
das
xchg
test
repz
sahf
cs
fcom
pop
or
nop
mov
out
shl
in
push
rcr
mov
cdq
sub
push
xlat
leave
or
adc
inc
icebp
mov
mov
sbb
iret
mov
push
xor
pop
cmp
mov
jmp
repz
fsubr
jbe
fstp
mov
js
sbb
push
leave
ss
sub
outs
dec
test
dec
push
cli
mov
add
(bad)
mov
scas
add
mov
mov
mov
cmp
xor
lods
daa
inc
push
cmp
jle
pop
adc
leave
push
ja
pop
jne
push
mov
jo
dec
lods
rcl
inc
loop
ret
fadd
outs
leave
cwde
mov
cmp
cs
icebp
sti
cmp
mov
push
pop
or
inc
sub
jne
mov
and
out
add
test
xchg
mov
add
and
mov
inc
dec
sbb
dec
add
ins
xor
(bad)
or
jne
shl
lock
ret
sub
(bad)
jb
ja
push
lock
xor
and
sub
out
inc
aaa
add
fstp
(bad)
jl
add
(bad)
dec
bound
dec
adc
adc
push
clc
test
movs
ss
mov
das
and
addr16
loop
jnp
jo
ja
ins
push
out
mov
push
sub
lahf
jl
repnz
dec
neg
inc
leave
cwde
xchg
jno
fmul
add
lea
mov
push
scas
daa
cwde
stc
mov
adc
fs
mov
mov
xchg
cli
stc
lods
cmp
cwde
call
xor
fucomip
call
cmp
add
outs
in
sbb
jp
fisubr
imul
lods
ss
fld
dec
mov
xor
out
cmp
push
push
mov
inc
push
sbb
cmp
fisttp
push
and
pop
sub
jns
pop
jl
shl
push
cmp
jge
inc
pop
adc
or
arpl
int3
aad
movs
sbb
xchg
sub
xchg
jb
xor
int
(bad)
out
cmps
aam
dec
push
movlps
es
push
movs
sub
(bad)
adc
or
ja
add
repz
cmps
or
mov
fidivr
cmps
mov
push
sbb
mov
aad
aas
mov
sub
or
jae
xchg
push
xor
jge
inc
push
leave
push
addr16
fbstp
push
cmps
sub
ins
pop
lahf
ror
scas
pushf
enter
sub
xor
cdq
stos
ret
jne
loop
and
rol
mov
or
sub
mov
(bad)
jp
sub
jb
test
cmp
pop
jecxz
data16
je
out
mov
ret
xchg
cli
repz
sbb
cmp
cmp
repz
and
mov
mov
adc
ss
and
push
int
add
dec
leave
lock
jbe
dec
ffree
loop
push
enter
fstp
inc
add
mov
fisubr
xchg
jmp
jno
push
adc
ss
mov
xchg
ror
sub
leave
xchg
aaa
dec
mov
push
ss
jge
outs
es
fs
push
(bad)
je
or
sbb
and
sub
fst
das
(bad)
int
push
aaa
call
arpl
(bad)
push
xchg
cmp
jge
adc
imul
in
cs
mov
push
dec
(bad)
mov
(bad)
leave
lods
sbb
jmp
cmps
lock
fwait
push
fisubr
adc
scas
mov
iret
loop
mov
test
(bad)
xor
sub
data16
cmp
push
jmp
jo
jge
hlt
push
dec
std
fistp
mov
mov
jb
sub
clc
cwde
int
fdecstp
lods
call
sahf
pop
add
(bad)
mov
fcom
inc
es
jmp
jge
or
mov
popw
aam
bound
xchg
mov
call
(bad)
clc
xor
jno
(bad)
or
mov
sub
les
and
shl
pop
dec
sbb
sbb
test
popf
aas
ss
lods
ss
adc
(bad)
mov
(bad)
mov
mov
mov
pop
fs
call
(bad)
fisubr
icebp
gs
out
addr16
shl
cmp
cs
push
clc
sbb
push
jge
cs
sti
adc
mov
ds
dec
(bad)
push
or
jmp
in
dec
mov
mov
shl
scas
cs
xchg
sbb
push
shr
xor
leave
jecxz
mov
dec
jns
or
pop
cs
xchg
mov
pop
fldcw
mov
js
in
jo
pop
unpcklps
fiadd
jbe
cmp
or
xchg
mov
inc
pop
jp
xor
das
push
pop
mov
aas
je
cs
jb
or
pop
inc
popa
mov
push
push
mov
fs
out
and
add
sub
cwde
mov
adc
sub
outs
fild
sahf
clc
push
cmps
ss
mov
cmp
gs
xor
aam
scas
or
mov
dec
cs
dec
sub
inc
adc
in
bsf
into
cs
pop
fdiv
cmps
(bad)
mov
mov
pop
imul
push
sub
push
daa
pop
mov
cld
dec
loope
data16
adc
fld
out
les
cs
and
pop
adc
mov
je
push
cli
pop
xchg
mov
mov
fild
and
gs
jmp
aaa
add
int3
mov
xor
repz
enter
sbb
sub
mov
pop
sbb
xor
mov
push
cs
scas
in
jg
push
sbb
pop
inc
pop
xchg
mov
cmp
push
das
sub
jb
mov
and
es
inc
push
gs
jne
xchg
sbb
fisubr
movs
inc
repz
imul
cmp
xor
mov
lahf
sbb
mov
fcmovne
cwde
and
inc
daa
dec
imul
cmp
pop
pop
and
loop
inc
pop
mov
test
mov
popa
mov
xchg
push
pushf
aaa
div
cmp
add
fidivr
mov
adc
out
or
out
je
mov
jmp
and
and
mov
or
xor
mov
jmp
fstp
xchg
adc
mov
in
sub
mov
inc
outs
dec
mov
mov
mov
jo
cmp
or
jle
movs
fwait
ds
jmp
pop
push
(bad)
xor
push
leave
out
daa
inc
inc
retf
ror
jno
push
or
mov
inc
or
dec
faddp
jo
(bad)
cwde
out
sbb
cmc
pushf
jnp
scas
cmp
test
push
mov
(bad)
stos
ret
leave
bound
xor
sbb
outs
lea
jle
movs
adc
ror
inc
push
dec
out
lahf
xchg
into
mov
stos
cld
sbb
adc
je
imul
jns
xor
and
jp
das
popa
jnp
cmc
jo
dec
mov
retf
sub
mov
xlat
jns
cmp
sub
mov
xchg
(bad)
pop
cs
repnz
std
fadd
pop
mov
mov
fwait
in
xor
pop
mov
mov
and
lods
aas
gs
scas
sbb
xchg
lock
mov
popa
pop
or
sbb
inc
stc
jmp
sub
leave
xor
dec
mov
in
in
scas
mov
idiv
ins
or
push
fsubr
sub
cmps
addr16
das
dec
adc
scas
vcomiss
(bad)
add
es
xlat
xor
mov
fcom
inc
cmc
loopne
xchg
jb
movs
stos
scas
dec
fimul
add
push
xor
std
fidiv
div
jbe
cmps
jno
dec
add
outs
(bad)
iret
test
lock
ret
sub
mov
sub
sti
fst
outs
pop
and
cwde
(bad)
call
fs
cmp
call
xabort
pushf
mov
add
inc
iret
xor
jbe
mov
xchg
test
xor
rcl
popa
push
sahf
inc
sbb
retf
scas
outs
loope
test
in
mov
cmp
out
mov
sahf
sar
pop
push
sub
sbb
arpl
test
and
and
sti
add
jns
sub
adc
es
or
or
xor
fiadd
push
jmp
or
mov
push
sbb
int3
(bad)
call
imul
scas
jb
and
stos
dec
cs
or
push
daa
lods
popf
das
cld
jmp
xor
ds
inc
ja
imul
push
and
add
cs
add
lods
xchg
ficomp
in
mov
mov
pop
xor
inc
aam
xor
sub
loop
jo
(bad)
sti
adc
and
out
add
add
mov
jecxz
inc
xchg
add
mov
(bad)
xchg
xor
cs
cmps
stos
test
mov
(bad)
cmc
xor
scas
push
loope
outs
mov
sti
sbb
xor
rol
shl
pop
add
js
jmp
movs
xor
int
adc
scas
aas
cmp
outs
call
cs
pop
xor
jmp
ins
sub
lock
and
and
jmp
gs
mov
ins
push
call
cs
and
mov
cmp
fsub
mov
popf
ror
aas
mov
les
movs
ret
mov
dec
jnp
xor
push
cmp
push
sub
add
sbb
jmp
vpunpckhdq
xchg
push
jl
js
mov
(bad)
(bad)
cwde
lds
xlat
out
and
cmps
mov
pop
cmp
xchg
jbe
fwait
mov
pop
xchg
fist
(bad)
push
sub
mov
jns
push
scas
ins
out
call
pushf
jne
xor
pop
scas
push
inc
fild
xlat
mov
test
arpl
mov
loope
pop
(bad)
mov
ds
inc
and
xor
outs
or
idiv
daa
movs
push
and
(bad)
jno
jno
mov
pop
(bad)
(bad)
out
arpl
or
scas
cmp
hlt
and
inc
sub
mov
ror
adc
out
and
xor
and
adc
adc
sbb
pop
fsub
cs
jb
fidiv
add
cs
inc
xchg
jno
jo
ins
cs
arpl
cs
jmp
sahf
sbb
mov
mov
jae
into
xchg
add
sar
sub
push
repz
dec
loop
mov
(bad)
aam
cwde
add
das
sbb
or
jne
repz
mov
and
pop
data16
xor
cmps
scas
inc
div
sub
mul
shr
enter
outs
and
jle
bound
repz
loope
adc
ret
sbb
fcmovb
jnp
pop
(bad)
or
cmps
out
mov
clc
or
cmp
add
mov
push
xchg
fdivr
gs
ins
daa
cs
mov
add
pushf
(bad)
sub
in
cmps
cdq
sbb
into
pop
fst
sub
shr
sub
cmp
fadd
scas
icebp
cwde
iret
ret
push
shl
ja
pop
lods
jae
cs
rcl
pop
dec
add
push
mov
(bad)
or
lds
les
or
aaa
sbb
lds
fdiv
shl
jecxz
cs
push
pusha
mov
xor
popa
out
iret
pop
sbb
xchg
adc
repz
out
adc
xor
dec
and
mov
push
push
cs
ja
jmp
cs
xchg
pop
or
jmp
dec
pop
jae
daa
fldcw
push
arpl
xchg
repz
push
or
cs
inc
dec
lods
xor
ja
pop
xchg
not
imul
mov
or
clc
mov
sbb
xchg
add
ja
ss
cs
or
ds
ret
aam
pop
cs
retf
loope
int
and
pop
rol
jecxz
add
leave
fmul
adc
cs
call
std
jbe
jnp
out
gs
sti
shr
inc
push
or
sub
jo
loop
shl
add
mov
xor
xchg
fcom
arpl
xor
addr16
clc
or
or
pop
das
cmp
stc
cdq
ret
inc
xor
mov
jge
and
xchg
ror
xchg
sub
push
jne
inc
(bad)
cmps
ja
jle
ret
stos
jb
fmul
xchg
lock
inc
inc
mov
inc
unpcklps
fisttp
jecxz
lahf
aas
inc
jl
enter
loopne
or
push
test
fcomp
xor
jl
mov
pushf
sub
dec
out
and
std
mul
inc
ins
(bad)
retf
hlt
mov
pop
add
cmp
pop
arpl
fucom
or
push
pop
test
mov
dec
xchg
xchg
inc
and
adc
(bad)
fist
xor
test
repz
push
push
jge
out
xor
push
je
dec
sbb
mov
and
rcr
daa
inc
lods
dec
or
cmps
les
dec
(bad)
call
and
dec
shl
sub
shl
aad
and
push
fsubr
jae
push
loope
mov
push
push
loopne
aaa
sahf
mov
mov
test
movs
test
inc
mov
test
inc
or
aaa
shr
push
mov
ret
fxch
lds
cli
mov
popa
icebp
pop
es
xor
pop
push
jp
push
into
fdivr
call
arpl
pop
sbb
(bad)
add
cld
mov
dec
xchg
jo
loopne
je
ins
hlt
(bad)
fstp
imul
xor
push
xor
xchg
xchg
inc
or
cmps
out
mov
int
xor
std
xchg
js
jb
stos
nop
(bad)
fwait
rcr
lods
call
(bad)
loope
dec
xchg
aad
xchg
inc
xchg
xabort
sbb
popa
mov
jp
out
or
int3
lea
mov
cmps
push
lahf
cdq
cs
test
xchg
or
shl
mov
push
pop
cmp
fldcw
and
xor
aaa
cs
test
sbb
sahf
jbe
fimul
mov
xor
cmp
inc
lea
cmp
inc
pop
xor
cmp
test
out
mov
test
adc
fmul
mov
cs
nop
sub
and
enter
push
cs
aam
loope
stos
(bad)
xor
and
lds
push
ret
ror
push
fsub
sub
fld
std
(bad)
fucomip
jp
ficomp
pop
mov
xor
fsub
push
fisub
ins
js
mov
mov
xchg
and
scas
pop
inc
popf
imul
pop
sub
jne
push
sub
pop
pushf
scas
mov
or
jae
or
mov
retf
pusha
arpl
test
jae
std
adc
les
ret
bound
jl
stos
jb
into
jp
pop
fwait
cdq
fmul
ret
add
fisubr
push
out
repnz
daa
cmc
sbb
out
xor
mov
fiadd
cs
gs
adc
pop
cs
ret
mov
aas
bound
inc
or
into
pop
cmps
test
test
sbb
ins
or
push
xor
xor
out
movs
sub
mov
leave
xchg
xchg
shl
jno
std
pop
in
fcomp
rol
daa
inc
mov
call
test
sub
std
jno
push
dec
out
mov
pop
mov
jo
push
inc
(bad)
dec
cwde
cs
les
sbb
mov
ficomp
pop
cmp
mov
dec
cli
jmp
jp
adc
mov
and
sar
mov
mov
or
push
dec
add
mov
and
in
jnp
and
cs
test
jbe
arpl
cs
sub
add
inc
mov
dec
stos
dec
dec
bnd
ss
fild
pop
inc
sbb
push
cmp
jns
adc
(bad)
adc
icebp
lods
adc
adc
data16
cmp
xchg
cs
outs
inc
(bad)
mov
xor
scas
out
mov
push
shl
dec
add
outs
fneni(8087
out
rcl
adc
xchg
push
int
in
sar
call
mov
leave
push
scas
mov
add
xor
xor
lock
int
test
sub
sahf
xchg
cli
mov
and
sub
and
push
(bad)
sti
dec
jmp
cmp
or
cdq
ret
cs
push
xchg
push
xor
cs
sahf
xor
push
ret
cs
sub
outs
or
jge
cs
aaa
jecxz
cdq
fnstsw
or
cmp
and
cs
cmps
jl
xchg
out
lods
or
pop
sbb
lock
and
jo
or
push
test
cs
aam
mov
mov
ret
mov
popfw
sbb
cmp
icebp
mov
sahf
xchg
imul
aad
popf
and
and
sub
push
push
adc
data16
cs
iret
cmc
aas
xchg
jb
inc
into
jge
(bad)
mov
imul
scas
bound
test
sub
mov
repz
out
mov
sub
aaa
ss
add
out
mov
add
clc
inc
or
cs
or
jl
push
test
js
pop
cmps
xchg
outs
sub
or
xor
or
sar
(bad)
pop
mov
xchg
and
int
cs
and
dec
sbb
sub
xor
mov
xor
add
sahf
sbb
cs
loope
lahf
frstor
push
adc
push
movs
test
or
or
imul
push
mov
out
repz
out
inc
adc
cld
fwait
and
dec
sbb
aas
cmp
lods
out
push
out
sub
jge
add
outs
data16
cs
jmp
in
push
push
mov
fist
dec
cs
movs
stos
jmp
scas
cmps
adc
mov
aam
mov
fwait
cld
mov
cli
imul
adc
and
xor
push
addr16
or
bound
sbb
scas
(bad)
pop
lods
pop
xor
inc
xor
iret
mov
aaa
enter
(bad)
ins
xlat
jmp
sub
leave
mov
adc
pop
dec
jp
sub
sahf
test
stos
fwait
das
(bad)
scas
xor
cs
jmp
pop
or
mov
sbb
pop
xor
cmp
test
fnstenv
fs
sbb
(bad)
sub
scas
call
hlt
mov
and
cli
cs
sub
pop
lahf
jne
cs
data16
sbb
cs
sub
aam
pusha
xor
mov
sub
stos
mov
loop
xchg
aam
cdq
fs
xor
cwde
xchg
cwde
mov
mov
mov
xchg
dec
sub
mov
or
mov
push
add
sub
inc
ret
popf
(bad)
xchg
add
mov
and
es
(bad)
jg
out
ret
xchg
mov
sbb
retf
jg
mov
xor
dec
dec
ins
js
leave
push
rcl
push
(bad)
mov
stos
mov
leave
inc
cmp
mov
or
cmps
mov
int
test
les
mov
dec
push
inc
jae
mov
sbb
lods
xchg
fistp
push
xchg
add
inc
or
not
dec
inc
(bad)
daa
ret
lahf
lock
cli
test
xlat
leave
sub
mov
bound
sbb
add
add
(bad)
push
adc
inc
lds
or
icebp
jge
sub
gs
or
sar
cmps
call
sahf
sub
mov
into
jle
scas
rcl
cmp
and
leave
pop
sti
loope
add
(bad)
xor
ret
jne
bswap
cmps
pop
and
pop
fstp
sti
cmp
ret
jo
add
js
jno
lock
cmp
fidivr
xor
mov
xchg
in
lock
push
xor
addr16
fs
push
out
push
and
sbb
xor
call
fisubr
into
push
cmps
jp
pusha
dec
lock
sub
mov
loopne
leave
xchg
mov
adc
and
cmp
adc
in
sbb
addr16
adc
xor
imul
jmp
pop
test
in
hlt
fs
popa
inc
mov
(bad)
or
and
mov
loope
ret
(bad)
mov
sub
push
stc
cs
adc
xchg
add
sbb
sub
imul
push
sahf
sub
aaa
addr16
out
mov
cs
fistp
push
sbb
cs
xor
xor
add
cs
das
sub
xor
pop
dec
xor
shl
add
xchg
bound
adc
fsub
or
arpl
add
enter
pop
push
(bad)
pop
stos
push
fmulp
das
cs
dec
dec
in
out
adc
xor
rol
je
inc
sub
sub
xor
test
adc
cs
int3
stos
jo
pop
imul
push
out
movs
pop
mov
lock
retf
pop
or
shl
fcom
lods
inc
scas
cmps
pop
ror
adc
pop
mov
movs
xchg
fimul
ds
add
cmp
loopne
cs
test
sub
and
ins
out
in
lahf
enter
outs
mov
dec
jp
push
push
out
cs
ins
and
jge
ret
and
pop
scas
clc
jmp
push
jmp
mov
and
or
dec
imul
(bad)
fld
jmp
xchg
pop
mov
div
(bad)
mov
test
sub
jp
push
cmps
mov
bswap
mov
lods
adc
push
pop
mov
xchg
mov
xchg
xchg
xor
mov
fsubr
js
pop
cmps
xchg
sub
cmp
cmp
and
vlddqu
jno
dec
ficom
loopne
sub
push
xchg
outs
sub
pop
xchg
daa
mov
mov
sbb
ucomiss
push
pusha
cs
retf
outs
pop
aam
lahf
mov
sub
pop
fidivr
pop
adc
mov
movs
shl
into
add
scas
ficomp
(bad)
adc
aam
into
sub
cmps
or
cs
clc
es
add
movs
xchg
loope
mov
icebp
dec
sub
int3
mov
aas
push
add
pop
scas
fst
inc
push
data16
ret
fild
pop
lock
sub
into
aaa
cs
(bad)
pop
cmp
push
and
lods
add
pop
popa
xor
cmp
outs
sub
inc
shr
out
test
and
pop
dec
neg
dec
retf
sahf
pop
(bad)
cmp
add
popf
dec
sbb
sub
es
cdq
outs
adc
mov
pop
fsubr
and
mov
hlt
outs
and
sbb
inc
icebp
adc
loopne
mov
mov
sbb
mov
scas
add
das
in
cs
in
pop
outs
sub
dec
pop
(bad)
shl
xor
push
aas
sub
popf
mov
inc
fsub
fdiv
and
ror
sbb
or
xor
adc
push
xor
jg
in
lahf
jle
mov
mov
loop
mov
and
movs
cs
mov
sub
mov
dec
jle
sar
stos
in
sub
mov
mov
sub
icebp
rcr
push
lock
bound
scas
add
shl
loop
out
leave
(bad)
push
sbb
ins
cs
push
mov
imul
cmp
pop
dec
inc
pop
mov
xchg
cmp
outs
lock
je
fs
jge
xor
jg
and
cmp
or
sub
scas
add
(bad)
push
dec
icebp
pop
push
ins
aad
push
fild
aaa
push
int3
push
mov
es
add
(bad)
outs
jo
mov
push
jp
sbb
sub
out
push
ss
jge
test
inc
cmp
cmp
les
outs
inc
retf
ror
sti
sub
stos
imul
inc
dec
push
fldcw
popa
mov
mov
test
not
jae
stc
mov
daa
fucomi
cmps
icebp
mov
aas
(bad)
mov
push
fcom
pop
inc
jg
xchg
daa
cs
ins
mov
sub
xor
retf
ins
jne
fiadd
(bad)
mov
(bad)
mov
or
sbb
dec
dec
adc
xchg
sahf
xchg
mov
daa
in
arpl
and
lock
inc
fsubr
xor
adc
and
ret
les
imul
aas
push
fidivr
inc
xor
mov
xchg
cmp
jbe
pop
mov
fs
scas
adc
cmps
out
shr
cs
push
fmul
jmp
pop
xor
xchg
or
sbb
ja
cs
and
in
cs
outs
fcom
mov
xchg
ds
pop
adc
ret
int
dec
aaa
ret
xchg
aam
cs
jg
jl
out
push
or
xchg
stc
scas
rol
jo
popf
mov
dec
adc
push
outs
push
movs
imul
dec
dec
jae
shl
cs
adc
loop
(bad)
cs
fldpi
outs
ret
(bad)
jne
cld
cs
mov
test
leave
and
adc
out
call
out
ror
enter
mov
xor
test
push
dec
aad
pop
inc
xlat
sub
(bad)
fisttp
push
push
pusha
outs
imul
or
adc
sub
lods
ins
cmp
or
xor
jo
dec
sub
fs
dec
inc
or
mov
in
push
push
movs
xor
fisub
cs
cmp
arpl
or
sahf
movs
fcmovnu
pop
(bad)
gs
jl
xor
retf
mov
xor
lds
and
lods
icebp
jb
dec
push
xor
rcr
dec
inc
cmp
push
pusha
movs
lods
(bad)
or
mov
imul
mov
jno
jmp
mov
cs
lods
adc
jge
cs
adc
and
(bad)
(bad)
xor
or
lea
and
add
fsubr
jge
adc
cmp
repnz
add
das
pop
mov
imul
push
add
test
scas
fs
push
daa
xchg
div
dec
mov
ins
(bad)
cs
retf
rol
add
fs
stos
jmp
cs
sbb
pop
mov
nop
icebp
sub
pop
(bad)
dec
out
loopne
movs
cs
(bad)
icebp
stos
cs
pop
mov
loope
and
je
jg
inc
or
jecxz
ja
xor
and
sub
add
and
mov
mov
es
call
ret
adc
mov
out
outs
xchg
enter
(bad)
lods
cmp
aad
or
lahf
and
mov
push
mov
xor
std
data16
inc
cs
aam
shl
test
ja
inc
pop
movs
loop
push
imul
jge
dec
and
out
hlt
jns
dec
lea
sbb
xor
mov
and
into
clc
pop
mov
iret
cs
arpl
in
mov
jbe
dec
xor
sbb
mov
cmp
pop
(bad)
(bad)
(bad)
fldcw
mov
cs
push
inc
pop
test
pop
dec
std
cs
es
sbb
cli
(bad)
pop
xchg
sub
jbe
jno
sbb
add
and
fisubr
jmp
scas
and
jno
fild
fs
pop
test
pop
rcl
inc
lock
adc
cs
jp
mov
sti
icebp
pop
shr
push
(bad)
shl
aad
cli
out
xor
or
push
or
dec
in
ins
cs
push
cmp
daa
mov
inc
cs
dec
fidivr
cs
enter
push
mov
push
iret
cs
fisttp
sbb
inc
inc
pop
test
xchg
sahf
(bad)
test
jl
inc
cdq
sbb
mov
inc
jmp
mov
push
cs
outs
adc
pop
cs
xchg
cmc
jmp
push
push
push
mov
ret
or
or
cmc
std
xchg
jne
outs
cmp
es
and
dec
scas
jg
mov
push
sbb
scas
retfw
jecxz
and
fs
pop
imul
mov
daa
lods
sub
xor
mov
sbb
(bad)
leave
cmp
add
scas
fidiv
dec
lods
pop
cs
sbb
cmp
dec
mov
ret
mov
sub
mov
jbe
pop
cs
dec
je
inc
sub
mov
inc
adc
int3
xor
outs
sti
xor
cs
(bad)
or
sbb
dec
and
pop
push
jae
dec
cs
shl
out
jns
ds
adc
xchg
dec
div
xor
add
scas
sub
(bad)
cs
xor
loope
sahf
out
fldenv
push
stos
pop
(bad)
cs
repz
out
test
nop
dec
add
mov
mov
jno
inc
dec
mov
cmps
movs
jl
cs
xlat
and
inc
and
xchg
fisub
aas
or
hlt
xlat
mov
mov
add
cs
dec
(bad)
icebp
push
cs
pop
es
ds
push
pop
out
aas
cmp
xchg
test
pop
icebp
pop
jecxz
mov
(bad)
and
std
xor
test
jns
cs
repnz
sub
cwde
mov
fs
add
repnz
mov
mov
push
fnstcw
push
daa
mov
mov
out
sub
cmovp
inc
loope
cmp
sbb
jmp
or
jge
jp
test
ins
xor
xchg
pop
ins
clc
outs
out
fbstp
iret
aas
mov
pop
cmps
mov
cs
rcr
xor
xor
pop
ins
inc
xor
sbb
mov
nop
imul
jle
jg
push
pop
out
add
gs
xlat
fistp
xchg
aas
xchg
mov
push
out
call
cdq
(bad)
retf
mov
push
jb
mov
out
lods
xor
cmps
out
add
xchg
std
mov
cmp
adc
dec
sub
inc
xor
inc
idiv
rcr
fmul
out
mov
cs
mov
pop
out
cs
xlat
xchg
sub
arpl
daa
rol
mov
mov
das
cdq
push
mov
add
cmp
push
add
push
fmul
cs
(bad)
leave
pop
push
jmp
mov
mov
adc
out
pop
sbb
jmp
ds
inc
xchg
push
stc
sbb
or
jg
mov
(bad)
aas
dec
jmp
out
in
cs
sbb
jecxz
xchg
xor
or
repnz
ja
adc
sbb
adc
mov
add
xlat
xor
adc
or
fwait
cs
push
outs
stos
dec
lods
ret
lahf
movs
jmp
movs
pushf
(bad)
les
pop
(bad)
in
test
xor
mov
push
inc
sub
pop
cmp
test
xor
retf
dec
sub
ds
ins
cmc
add
xchg
das
dec
add
xor
lahf
pop
loope
sbb
inc
sbb
xchg
stos
mov
xchg
push
cmp
cmp
dec
sahf
fadd
pop
inc
or
stos
mov
mov
fstp
icebp
retf
in
mov
fstp
pop
leave
aas
rcl
js
push
bound
jo
mov
dec
fisubr
inc
outs
popa
movs
cmc
(bad)
adc
push
les
shl
lock
data16
pop
imul
je
cmp
push
push
push
mov
cs
sub
sahf
movs
cs
aad
cmc
call
mov
test
ror
hlt
cmp
ror
out
sti
or
cmc
test
push
or
es
adc
stos
out
lods
aas
fwait
jne
push
(bad)
jb
pop
cs
add
bound
sub
scas
mov
xor
lahf
jmp
dec
cmp
mov
dec
sbb
push
sub
inc
adc
xor
pop
pop
pop
push
sbb
retf
sahf
popf
push
or
(bad)
cld
fisttp
test
aam
cs
mul
fisub
test
out
cs
div
lods
clc
jl
push
inc
loop
dec
push
rcr
pusha
jne
lahf
ja
sub
dec
pop
adc
sti
pop
or
cwde
loope
dec
jp
shl
popa
sbb
inc
int3
xor
add
cs
inc
mov
cs
dec
(bad)
into
jg
dec
(bad)
daa
mov
icebp
popa
jmp
lahf
scas
shl
lea
mov
mov
lods
aas
jle
mov
xchg
dec
stos
mov
sub
or
mov
sti
leave
sbb
dec
adc
imul
or
xor
test
mov
fld
sahf
fcomp
sbb
inc
(bad)
aam
test
push
push
inc
push
push
or
cs
cmps
xor
xchg
iret
and
into
mov
xlat
into
clc
mov
fsub
jno
inc
and
div
sub
clc
pop
imul
test
int
cmp
scas
cdq
call
mov
mov
sahf
lea
mov
pop
repnz
clc
push
in
movs
jmp
pop
pusha
adc
cwde
sbb
cmp
xlat
add
fwait
stos
cwde
shl
add
dec
dec
xor
addr16
mov
into
cmps
and
ficom
es
jno
scas
pop
fcomp
sbb
pop
ss
ret
and
out
fisubr
in
mov
ror
daa
cmc
xor
test
xor
jle
dec
out
icebp
leave
int3
and
and
sub
shr
es
cmps
daa
aas
aad
push
inc
push
xor
jecxz
arpl
ror
imul
loop
outs
(bad)
jmp
push
es
add
ins
ror
and
aad
dec
js
or
pop
mov
bound
and
outs
adc
adc
std
outs
mov
ficom
pushf
and
cmp
mov
inc
adc
adc
jnp
and
scas
inc
jp
jns
leave
neg
sub
rol
fld
xchg
add
xchg
call
mov
pop
cli
call
mov
and
cld
rcl
es
ror
cmps
jle
out
push
adc
imul
popa
ja
jge
or
(bad)
xor
adc
push
adc
adc
push
push
data16
jo
es
dec
adc
out
loope
add
inc
in
inc
js
add
sub
jb
imul
rol
loop
cmp
and
sub
imul
jmp
es
sub
lods
or
cli
jo
jae
dec
pop
jp
loop
jo
inc
outs
retf
adc
push
xchg
adc
inc
inc
cmps
cmp
inc
adc
jns
add
(bad)
cmp
sub
dec
stos
cmp
or
imul
loopne
xchg
movs
rol
mov
cmp
ret
stc
xchg
sbb
lds
scas
jp
push
sbb
dec
push
mov
adc
out
or
daa
popf
mov
ror
les
bound
mov
sbb
es
popf
jo
adc
dec
jmp
cs
or
stos
push
jecxz
adc
inc
sub
stos
dec
jg
sub
adc
adc
jp
dec
fidivr
test
cmp
inc
jno
imul
mov
push
sub
into
adc
jno
mov
and
outs
ss
mov
jno
push
xchg
fstp
and
leave
inc
xor
loope
dec
cmp
push
mov
mov
inc
xor
lahf
ds
fs
loopne
and
sub
test
lods
shl
dec
cmps
and
xor
cmps
in
push
push
or
gs
dec
dec
push
or
loop
pop
add
push
push
add
cmp
push
(bad)
rol
cli
stc
xor
mov
shl
data16
repz
xor
(bad)
lods
jbe
sub
sub
adc
ds
or
stos
jmp
or
lods
dec
xchg
sub
mov
sub
rcl
jg
data16
push
jge
xor
push
lds
push
push
cli
dec
stc
out
xor
in
leave
pop
push
shr
inc
jmp
test
jb
icebp
mov
outs
ds
imul
mov
cmp
jg
or
shr
fsubr
imul
sbb
loop
xchg
jno
jg
pusha
mov
jle
(bad)
xchg
or
in
pop
mov
mov
push
and
ja
mov
fisubr
mov
or
mov
leave
iret
jnp
(bad)
loopne
adc
xchg
cmp
or
in
div
cmp
ror
dec
push
stos
jmp
jp
and
dec
cli
mov
stc
sub
adc
jno
mov
imul
xlat
mov
lods
ror
jp
cmp
push
add
mov
(bad)
jo
xor
push
mov
outs
imul
dec
and
dec
outs
mov
dec
test
add
popa
ds
jp
xlat
xchg
sahf
mov
cmp
push
retf
pop
lea
ins
mov
(bad)
out
sti
sub
push
push
fisttp
out
push
sub
stos
mov
mov
xor
in
dec
daa
leave
in
xor
or
(bad)
xor
enter
and
inc
sub
dec
pop
xchg
ss
cmp
push
(bad)
movs
dec
mov
scas
retf
dec
cmp
int
xor
mov
scas
ror
sub
and
ret
test
pop
cmps
and
sahf
and
gs
xor
sub
mov
mov
aad
xchg
rcl
sbb
and
mov
int
aaa
into
mov
mov
sub
push
push
xor
dec
cmp
(bad)
scas
cld
xor
jo
fcomp
or
inc
outs
cs
jle
mov
shr
jmp
int
rcl
leave
cmps
scas
iret
jnp
sbb
in
dec
mov
sbb
push
and
mov
or
neg
movnti
push
adc
adc
call
aad
sub
arpl
mov
push
call
adc
cs
in
dec
test
dec
or
mov
mov
pop
(bad)
pop
ficom
outs
mov
out
or
mov
sub
das
jmp
adc
js
enter
cs
push
cmp
and
scas
test
xor
cmp
in
jl
and
addr16
retf
add
(bad)
jp
xchg
xlat
inc
out
mov
js
fwait
rcl
test
cdq
sub
enter
dec
xchg
sub
sbb
xchg
adc
xor
cmc
jae
pop
aaa
xor
movs
repnz
lds
xor
jns
int
jae
xor
(bad)
mov
lds
push
(bad)
aas
xor
jb
out
mov
xor
call
and
iret
fdiv
mov
fisubr
test
(bad)
(bad)
scas
inc
fdivr
and
leave
mov
sbb
push
inc
iret
(bad)
hlt
outs
fsubr
lahf
xor
aad
dec
fcom
fdiv
and
add
push
sbb
repnz
or
inc
shr
cs
fwait
in
faddp
push
mov
fld
aas
aam
cmps
int
out
rol
icebp
mov
fdiv
or
mov
fwait
jns
jmp
adc
jo
fistp
es
cs
jmp
addr16
ret
mov
push
or
mov
inc
xlat
pop
(bad)
cs
push
and
sub
pop
jno
xchg
and
scas
jg
stos
nop
stos
fs
cmc
and
inc
lea
das
cmp
retf
out
mov
dec
out
fdivr
enter
pop
push
xchg
sub
pop
ror
push
adc
xor
xor
sub
sub
adc
mov
or
jmp
sub
inc
out
jp
jno
sar
cs
fldcw
retf
(bad)
popa
cs
ins
(bad)
pushf
xchg
fs
(bad)
cmps
sar
int3
test
sub
icebp
in
bound
(bad)
out
cmp
retf
jge
aad
mov
aas
add
sub
sub
pop
sub
fwait
(bad)
xor
jne
leave
xor
xor
es
clc
jae
cmp
mov
push
xor
sub
(bad)
retf
fld
ss
cmp
push
sahf
xchg
xlat
mov
sub
rcl
fisubr
rol
mov
popf
ins
add
pop
sub
mov
bound
cmp
push
jmp
push
push
cs
or
in
xor
pop
ins
fsubrp
mov
sbb
or
sub
cmps
in
daa
jae
es
cs
adc
and
call
pop
cld
xchg
fs
rol
pop
sbb
test
jl
pusha
lods
repz
in
push
cs
sbb
add
enterw
adc
rcl
cs
cmp
(bad)
pop
call
(bad)
cmp
dec
pop
mov
repz
pop
push
outs
lods
neg
mov
sub
adc
sahf
dec
cs
xor
jo
ret
ror
sti
mov
out
ret
scas
and
xor
aas
or
jp
sub
addr16
popa
loopne
pop
sti
sub
mov
das
(bad)
ret
inc
hlt
mov
out
cmp
aas
jp
nop
push
outs
jge
data16
xor
and
mov
ds
xchg
xchg
xchg
outs
stos
sub
sub
jbe
les
clc
(bad)
cmp
arpl
repnz
shr
cdq
adc
sbb
adc
jecxz
mov
div
fcomp
lock
add
mov
into
mov
mov
inc
sbb
mov
pop
inc
mov
push
loopne
adc
mov
sub
xchg
cmp
dec
ja
sbb
adc
pop
call
cs
xchg
in
jnp
jo
cs
cmps
inc
(bad)
sbb
jmp
xor
in
fs
mov
test
add
dec
xor
xchg
xor
cli
sub
jns
repz
and
fdivr
jmp
call
pop
in
out
scas
and
add
cmp
mov
mov
das
aas
sar
and
addr16
lea
cmc
cs
xor
cmps
jl
pop
lahf
mov
mov
loopne
popf
icebp
dec
adc
mov
and
ins
inc
ret
adc
stos
pop
push
sar
sti
fcomip
shl
fimul
jmp
out
ds
test
inc
punpcklwd
(bad)
imul
jmp
movs
and
inc
jmp
jp
jo
push
sub
jge
cmps
into
xor
pop
add
ret
(bad)
in
rcr
ins
or
test
mov
mov
or
test
and
adc
cmp
jno
jo
pop
dec
enter
jne
mov
outs
mov
jmp
jbe
ret
mov
push
hlt
cwde
push
add
inc
inc
(bad)
imul
hlt
(bad)
pop
cmc
or
pop
jmp
sub
std
sub
neg
mov
dec
(bad)
(bad)
jge
ins
mov
(bad)
stc
and
cmps
les
cmp
mov
sub
nop
cli
fld
mov
push
mov
test
out
int3
inc
cdq
adc
cld
jg
leave
(bad)
(bad)
(bad)
pop
lahf
arpl
dec
push
mov
adc
push
jge
jno
jno
in
es
hlt
adc
int
dec
and
inc
sbb
retf
mov
retf
xor
sub
(bad)
dec
pop
aad
and
cwde
xor
out
xor
or
jecxz
and
test
mov
mov
test
loopne
sbb
out
fldcw
push
sub
leave
das
outs
dec
mov
sbb
sbb
cmp
push
mov
add
jae
mov
les
xor
sbb
fcmovnu
cld
add
(bad)
arpl
mov
repz
sub
push
pop
or
or
outs
cmc
outs
inc
push
adc
push
stos
imul
cld
cs
cwde
(bad)
mov
jo
fwait
inc
mov
sub
cs
adc
cs
mov
adc
scas
and
add
xor
pushf
ins
cmps
cs
movs
mov
push
ret
xchg
pusha
xor
or
out
jbe
fld
mov
sbb
add
sub
push
call
add
iret
cld
scas
outs
clc
ficomp
div
xor
mov
addr16
rcl
dec
push
ins
and
cs
test
mov
add
cs
ror
js
mov
cs
dec
inc
je
mov
outs
sbb
cmp
xchg
int
sbb
scas
movs
aas
push
dec
and
mov
or
push
jge
xchg
mov
mov
cs
lods
mov
cs
ss
and
js
cmp
stos
js
push
add
lock
inc
xchg
xor
pop
addr16
(bad)
in
inc
daa
mov
dec
pop
or
test
leave
idiv
lods
xchg
or
xchg
cdq
mov
push
leave
jge
stos
test
adc
mov
push
mov
push
add
xor
adc
arpl
push
mov
dec
add
or
adc
sbb
sub
in
arpl
jne
cmc
out
lea
jbe
sub
outs
mov
test
ja
dec
xchg
cmps
jle
mov
add
and
fdivr
adc
pusha
je
les
(bad)
call
and
adc
call
xor
and
jge
jmp
sub
leave
and
loop
lea
pop
in
leave
dec
dec
or
sbb
mov
and
xor
dec
and
outs
cmp
or
out
mov
jp
add
and
sbb
adc
cli
lock
jge
(bad)
test
dec
or
stc
fisub
dec
sahf
mov
adc
leave
push
sub
stos
push
push
hlt
jmp
stc
xor
repnz
loopne
iret
mov
fistp
nop
retf
mov
sub
loope
stos
cs
xor
push
dec
add
fs
or
outs
mov
je
xor
clc
jbe
dec
into
xchg
sbb
xchg
hlt
cmp
mov
fld
icebp
rcl
xor
(bad)
fisub
lds
daa
mov
xchg
jne
sbb
cs
shl
movs
retf
bound
scas
(bad)
mov
bound
jno
es
ja
pop
sub
sub
cmps
mov
xor
xor
ja
or
adc
clc
adc
cmps
ins
adc
fsubr
fistp
pop
aas
cdq
loope
sbb
movs
(bad)
mov
cs
mov
jbe
mov
dec
sub
aaa
mov
mov
fidiv
lds
mov
cmp
lods
and
jmp
push
inc
in
test
push
stos
shl
mov
sbb
rol
xor
jg
add
dec
loop
mov
dec
mov
and
cs
jbe
fs
or
pop
data16
call
iret
daa
mov
icebp
and
push
loop
xor
sti
retf
and
push
aaa
leave
out
ret
ins
or
aaa
outs
mov
aaa
(bad)
fwait
aaa
ins
imul
push
pop
shl
mov
scas
dec
arpl
mov
ret
jge
es
xor
xor
pop
fldenv
mov
outs
aam
jno
movs
jp
jmp
imul
dec
cmp
je
mov
outs
les
clc
push
xchg
mov
sti
inc
leave
xlat
jb
add
jg
sub
cmp
mov
push
je
movs
aam
in
jb
cmps
sbb
imul
shr
mov
sbb
ins
test
mov
push
ja
pop
shr
push
gs
sbb
leave
cmps
jp
mov
and
dec
push
stos
ret
fst
shl
sbb
and
shl
stos
add
push
call
inc
and
xor
and
dec
cmp
ss
mov
jecxz
cmp
aas
jmp
repz
xor
dec
and
stos
xchg
mov
jge
movs
ret
inc
cmps
push
sbb
(bad)
imul
loope
or
xchg
imul
dec
and
ins
inc
push
out
ja
in
in
dec
or
outs
mov
or
sbb
jp
push
jb
fidivr
lods
in
sti
stos
push
les
xor
pop
sti
xchg
test
inc
adc
xor
cmp
enter
(bad)
sbb
leave
add
test
dec
fist
sar
lods
cmps
mov
dec
es
cmps
bnd
push
xchg
mov
inc
jge
dec
xor
and
daa
inc
add
(bad)
rcr
lock
jge
scas
add
loope
and
les
push
(bad)
pop
jl
jmp
dec
pop
mov
loopne
mov
bound
in
int
into
sub
repnz
cmc
mov
loope
sti
add
bound
fsub
cs
push
int3
adc
popf
or
xor
sbb
push
into
mov
xlat
cmp
cs
fwait
cmp
pop
stos
cmp
inc
imul
aad
bound
test
int
push
daa
xor
cdq
aad
mov
pop
in
loopne
mov
out
sub
(bad)
adc
mov
pop
shr
push
push
(bad)
clc
dec
scas
xchg
sbb
js
retf
test
pop
mov
stc
pop
push
jno
rol
(bad)
mul
cmp
xchg
push
dec
push
retf
int
cs
popf
jmp
fdiv
pop
call
sub
in
sub
jbe
fcom
cs
mul
sub
gs
popa
push
sbb
mov
mov
jno
xchg
xchg
mov
sbb
mov
mov
xor
daa
scas
lods
fimul
dec
push
and
and
xor
pop
cs
jb
cmc
jle
fmul
pop
mov
sub
sub
mov
daa
xor
xor
(bad)
and
xchg
xor
jne
aas
mov
fldcw
aas
clc
jnp
in
sub
faddp
aas
xor
(bad)
mov
cld
push
movs
sub
mov
jmp
mov
dec
cmp
jg
sahf
adc
cli
jno
add
loop
mov
pop
mov
scas
aas
(bad)
fdivr
test
push
scas
movs
popf
cmp
add
push
jmp
ins
jno
sub
xor
pop
push
mov
(bad)
adc
xor
mov
lahf
pop
push
shl
sub
inc
sbb
dec
mov
jp
test
aas
jns
add
ins
movs
add
addr16
push
int3
test
ss
pop
add
leave
icebp
out
mov
and
and
sub
into
imul
ret
cmp
ss
mov
bound
xor
pop
and
test
jo
sub
test
xor
mov
sub
add
out
daa
daa
clc
neg
add
mov
pop
lods
xor
bound
ss
jbe
repnz
add
pop
(bad)
inc
pop
dec
aas
pop
aam
cld
scas
xor
gs
dec
xbegin
mov
inc
retf
and
dec
mov
outs
js
push
mov
(bad)
out
std
shr
pop
adc
fsub
aam
into
cmps
fst
lods
cs
inc
adc
pop
add
js
sahf
in
icebp
cs
and
add
pop
fsubr
jo
ins
loop
sbb
aam
jmp
(bad)
(bad)
(bad)
imul
jmp
ss
push
mov
lock
cs
push
arpl
jb
add
out
bound
push
pusha
sbb
daa
loopne
je
in
lea
mov
xchg
adc
(bad)
xchg
cs
lahf
test
inc
shr
into
xchg
lods
cs
jo
dec
shl
pushf
test
enter
in
addr16
xchg
push
cmp
mov
sbb
call
pop
cmp
adc
popf
outs
xor
fcom
cmc
dec
out
hlt
xlat
mov
cs
or
retf
mov
mov
das
lea
leave
xchg
(bad)
xchg
stos
out
in
gs
xor
arpl
leave
add
jg
outs
xor
jge
jmp
adc
sub
neg
cs
xchg
imul
ins
popa
aad
in
scas
daa
add
test
sub
(bad)
xchg
push
xchg
daa
popa
into
aas
inc
clc
and
push
push
loop
add
mov
jae
jl
xor
int3
(bad)
leave
cmps
div
ins
(bad)
data16
sbb
in
dec
or
fsubr
out
jmp
fnstcw
mov
aas
sub
clc
jecxz
jno
mov
sahf
imul
std
popa
scas
mov
pusha
push
push
js
stc
leave
xor
sub
push
xor
add
jge
mov
popf
(bad)
rcl
daa
inc
sub
scas
rcr
and
mov
mov
movs
repz
and
sub
cli
inc
pop
(bad)
(bad)
loope
lods
xchg
mov
add
daa
xchg
sbb
adc
pop
inc
loopne
popaw
pop
scas
mov
pop
push
mov
inc
(bad)
cs
push
push
pushf
cmp
push
fnstenv
sbb
dec
sbb
inc
cs
mov
cmp
jge
xor
cs
shr
(bad)
and
xchg
mov
push
fisubr
inc
add
jnp
jmp
sub
repz
imul
or
or
pusha
ret
mov
sbb
fistp
aas
sbb
jo
jnp
cmps
fmul
test
mov
ret
cmp
(bad)
jl
jns
jmp
cmps
cmp
jecxz
fbld
ret
inc
retf
and
sub
mov
ds
and
jnp
mov
xor
mov
in
scas
loopne
out
mov
stc
jae
out
std
test
adc
dec
sub
sub
push
or
push
cs
dec
jle
es
data16
lods
in
xchg
sub
mov
std
mov
out
cmp
rcl
scas
inc
adc
cmp
inc
and
fwait
cs
mov
jecxz
mov
mov
cmp
mov
xlat
sbb
xchg
sti
pusha
je
repz
or
inc
sub
cs
sub
xor
lds
add
test
cld
sbb
out
or
and
fcom
test
pop
sti
stos
aaa
jle
sbb
mov
xchg
pop
clc
jno
(bad)
pop
dec
lods
popa
push
or
(bad)
adc
(bad)
fisubr
cdq
xor
movs
or
dec
push
rcr
inc
or
xchg
in
pop
push
out
xchg
aaa
cs
lock
inc
xchg
bound
jmp
push
cs
lea
stc
add
cs
test
adc
add
test
gs
push
sbb
add
and
retf
fadd
inc
(bad)
xlat
dec
mov
ds
(bad)
pop
sub
enter
xchg
mov
ror
imul
ins
imul
xlat
mov
int3
pop
test
mov
xor
lock
jp
ficom
ret
xlat
xor
movs
test
pop
dec
or
pop
push
int
xchg
int
cdq
je
mov
int
jno
and
jl
lds
xor
dec
out
fsubr
test
iret
mov
aaa
mov
push
xchg
xor
shl
test
(bad)
vfrczss
and
mov
xor
xlat
dec
or
(bad)
ja
retf
sub
or
pop
(bad)
push
sub
div
sub
jecxz
sub
xor
and
xor
in
mov
add
pop
(bad)
cmp
and
in
repnz
and
xchg
mov
mov
cld
dec
mov
mov
out
dec
mov
pop
adc
cmp
test
mov
out
dec
fsubr
cmp
sbb
ss
pop
retf
jne
cmps
fsub
stos
push
mov
cs
inc
addr16
fwait
aad
sub
lea
retf
xchg
ja
pop
dec
mov
sub
aaa
jecxz
dec
adc
stos
dec
fld
aam
jnp
call
sahf
mov
push
popa
(bad)
daa
fld
data16
inc
dec
inc
shr
sahf
iret
je
cmp
pop
repz
jmp
mov
add
cs
out
inc
jnp
jle
pop
dec
push
xor
fsubr
std
popa
cmp
jno
and
and
test
clc
pop
sbb
adc
cmc
mov
xor
enter
(bad)
das
stc
into
cmp
cmc
(bad)
sub
sbb
pop
test
cs
in
mov
add
cs
int
push
xor
fdivr
ret
out
fnstcw
cwde
loopne
jmp
out
stos
retfw
icebp
cs
dec
movs
cmc
cld
faddp
hlt
cs
jg
dec
xor
fbstp
shl
out
fst
shl
addr16
dec
inc
pop
cmp
cs
cmp
enter
jmp
ds
into
popa
(bad)
div
push
lods
fild
dec
scas
fdivr
and
adc
mov
pop
dec
pop
push
fs
mov
in
sbb
iret
push
loope
sub
jnp
test
stos
(bad)
add
xor
xchg
loope
in
cs
ret
mov
sbb
js
daa
aam
lock
ja
into
xor
sbb
out
hlt
add
imul
cs
cmps
cmp
fidiv
pop
sbb
test
stos
inc
scas
pop
xchg
leave
test
gs
mov
mov
ja
stc
jecxz
cs
xchg
mov
xchg
(bad)
mov
inc
jbe
icebp
ins
add
mov
cs
push
cmp
and
cs
mov
out
pop
sub
gs
pop
div
cmp
movs
push
es
test
add
repnz
test
je
jge
mov
dec
out
cmp
enter
xchg
mov
in
adc
dec
and
add
bound
call
and
sar
out
jnp
xor
aad
int
lea
movs
(bad)
int3
mov
ficom
mov
sub
cmp
mov
sub
stc
sbb
das
mov
test
ja
xchg
mov
pop
adc
in
push
test
xor
cmps
jne
adc
nop
cmp
aas
lahf
pusha
lock
outs
ss
inc
in
out
lods
aaa
xor
pop
and
inc
into
out
movs
mov
adc
sbb
adc
jl
repnz
enter
retf
xor
hlt
daa
push
into
inc
pop
jmp
jo
inc
xchg
jl
retf
int3
xor
or
cmp
add
es
cmc
mov
iret
or
shl
adc
scas
popa
mov
dec
pop
retf
ins
ror
lods
daa
fisubr
and
and
jns
rol
jbe
shr
out
sub
inc
xchg
stos
ds
ins
lods
cs
mov
imul
in
or
mov
aam
retf
pusha
hlt
ja
mov
push
bound
pop
mov
icebp
and
dec
icebp
add
dec
ret
shl
cs
sti
mov
fwait
scas
aas
jae
(bad)
in
pop
js
stos
mov
lods
imul
sub
pop
mov
sbb
fisub
std
jbe
daa
mov
cli
pop
adc
imul
mov
ret
mov
into
pop
and
fld
lock
mov
fsub
xchg
push
xchg
or
cmc
jecxz
jge
js
mov
in
mov
mov
push
cvtps2pi
scas
add
pop
xchg
addr16
cli
cs
(bad)
fnstenv
shr
xlat
out
test
pop
fsub
adc
xchg
fdiv
cmp
dec
lea
push
ss
xchg
add
push
aas
push
ret
mov
(bad)
pusha
pop
xchg
or
sub
pop
imul
out
std
scas
aad
add
loopne
imul
pop
xor
(bad)
stos
scas
dec
mov
lods
fcom
into
sub
dec
out
dec
inc
pop
loopne
or
inc
shl
test
(bad)
cli
push
push
push
jge
xchg
aas
fld
(bad)
xchg
scas
add
out
jmp
mov
(bad)
mov
pop
call
test
(bad)
pop
fs
or
test
push
pop
(bad)
cmps
mov
enter
leave
ins
jle
lods
outs
xor
jmp
lahf
xor
fwait
retf
in
sar
fisub
in
aaa
loop
out
idiv
les
pop
pop
adc
xor
cli
xor
loopne
fld
and
xlat
(bad)
mov
in
ret
push
int
call
js
scas
sbb
cmp
sub
(bad)
xchg
test
js
fwait
cmp
jns
imul
xor
shl
add
daa
test
sub
cmp
jb
dec
sbb
pop
imul
push
sbb
aaa
(bad)
ins
cs
stc
and
shl
xlat
cs
add
pop
xor
test
jecxz
push
inc
jg
adc
in
cdq
sub
mov
xor
add
dec
or
test
scas
add
lods
jae
push
lea
fs
ds
(bad)
cmp
jle
and
sub
mov
out
push
fwait
cs
js
fldcw
in
xchg
and
xor
and
cwde
dec
cs
fwait
pop
int3
js
xor
sbb
xchg
aad
shl
enter
ss
cs
aaa
add
nop
out
mov
sub
sbb
jbe
sub
mov
sub
xor
aas
adc
arpl
in
pop
retf
ficomp
mov
and
cmps
idiv
lods
pushf
out
and
push
jmp
sub
test
cmps
mov
cmps
js
in
push
mov
fisub
aaa
pop
dec
aam
mov
movs
or
cld
dec
sub
pop
icebp
cs
fcom
mul
push
je
outs
and
xor
jp
fsub
mov
in
jl
stc
(bad)
push
in
sub
inc
mov
cs
retf
adc
pop
aas
pop
loope
repz
mov
rol
or
jb
arpl
out
call
pop
(bad)
cwde
scas
and
pop
mov
cmp
es
retf
and
pop
bound
adc
xchg
in
out
in
fdivr
dec
ror
pop
rcr
call
xor
cld
das
or
xchg
sbb
adc
inc
jmp
adc
dec
jg
movs
pop
jb
push
ret
adc
sbb
inc
ror
push
leave
xchg
or
loopne
push
and
xor
sbb
aad
sub
jle
xor
and
in
mov
jb
sub
arpl
scas
shl
es
jno
rol
xor
sub
outs
popf
shr
aam
pop
fidivr
mov
cmp
xchg
aam
icebp
(bad)
repz
jmp
mov
test
fdiv
dec
add
aas
mov
mov
sahf
sub
call
dec
xor
xor
(bad)
js
inc
sbb
jecxz
push
cdq
jo
ss
sub
(bad)
into
xchg
jbe
add
cs
(bad)
aas
arpl
int
push
cmp
cmp
adc
push
adc
pop
push
cmp
and
add
xor
and
jb
inc
pop
or
retf
arpl
push
dec
leave
cs
out
test
iret
xor
loope
dec
push
loop
pop
das
sahf
je
cmp
push
lods
jg
fstp
jne
sar
fidivr
fld
xchg
popa
call
inc
sbb
scas
add
push
pop
or
sub
sbb
aam
test
xor
add
(bad)
jns
cs
push
and
into
mov
cs
sbb
ins
or
cs
ins
fwait
movaps
(bad)
ficomp
push
aaa
(bad)
movs
aas
push
sub
into
popa
cdq
push
and
adc
xchg
lds
cld
mov
fcom
xchg
retf
cs
loope
mov
mov
lods
les
daa
pop
add
lea
or
(bad)
call
xchg
imul
(bad)
int
or
push
jb
cs
pop
mov
cs
and
jnp
jae
hlt
mov
pop
push
cs
jbe
ja
pop
jnp
push
or
rcl
(bad)
cld
cs
sbb
fist
and
xchg
inc
mov
imul
jmp
pop
js
in
mov
or
adc
pop
pop
outs
xor
add
lods
test
sub
ss
mov
push
mov
mov
pop
pop
data16
mov
stos
cs
jmp
cwde
cs
aas
je
mov
xor
movs
jo
push
dec
sahf
sub
fwait
daa
daa
repz
out
scas
cmp
jne
sbb
adc
sub
inc
sbb
movs
jnp
cs
mov
jecxz
add
adc
inc
cs
popf
mov
sbb
test
mov
push
es
push
outs
xchg
cld
neg
mov
call
sub
stos
in
mov
fs
outs
ror
xor
or
data16
inc
aas
and
leave
fmul
and
sbb
enter
bound
scas
sub
xchg
loope
hlt
mov
fldcw
movs
sub
mov
sbb
retf
adc
cs
movs
out
das
jecxz
cs
sub
jle
call
pushf
cmps
pop
pop
fadd
adc
adc
xor
adc
fsubr
push
mov
or
cmp
sbb
inc
jecxz
cmps
loop
es
jmp
test
jmp
cs
dec
ret
(bad)
xor
cmc
movs
jmp
cs
xchg
cmps
(bad)
mov
icebp
dec
pop
dec
mov
adc
sbb
cwde
jmp
(bad)
repnz
mov
pop
jg
jns
inc
adc
push
jb
or
or
cmp
jg
dec
adc
cmp
repnz
inc
pushf
ficom
test
int3
inc
inc
retf
cs
xor
mov
cs
mov
rcr
stos
xchg
ffree
cmps
pop
push
cs
mov
push
push
popaw
mov
jl
cmp
dec
push
es
loope
adc
jne
jb
sbb
xchg
js
ja
and
or
es
push
pop
push
outs
push
(bad)
cs
push
inc
push
and
jns
sub
lahf
shl
rcr
shr
xchg
js
les
leave
jnp
push
fdiv
inc
(bad)
fdivr
xchg
dec
iret
add
in
cmp
bound
cwde
std
mov
mov
fst
sbb
cmp
ret
scas
movs
mov
sub
pop
sbb
mov
sbb
and
sub
mov
cmp
cdq
mul
cmps
sub
jl
ins
int
push
dec
cmp
jle
sub
retf
cdq
jmp
and
adc
sub
push
sar
jge
push
aad
sub
repz
jl
xchg
sub
xchg
xchg
(bad)
pop
and
jb
xlat
add
cdq
add
fld
js
push
xchg
pop
repz
ret
add
push
and
out
rcl
loopne
push
int
loop
or
or
movs
add
aas
push
mov
cmp
cmps
sub
lock
sub
in
jae
adc
imul
push
pop
add
mov
push
cwde
loope
push
out
or
sub
(bad)
dec
inc
sub
sub
scas
push
leave
cmp
xor
scas
jp
test
lahf
push
dec
ja
and
cmp
pop
or
mov
aam
popf
leave
or
icebp
movs
cmp
xchg
dec
sub
xor
dec
repnz
(bad)
pop
xlat
dec
int
imul
and
dec
shr
xchg
mov
jae
add
or
cs
repz
(bad)
cs
loope
mov
add
and
imul
(bad)
sub
and
push
cs
or
pop
pop
jl
inc
rcl
cmp
fs
jno
bound
dec
push
shl
das
xor
cs
(bad)
fisttp
pop
xchg
xchg
cs
jae
nop
loopne
js
pusha
pop
push
test
in
cdq
int
loop
stos
jbe
adc
outs
xchg
cli
ror
sub
push
inc
sub
pop
push
jle
adc
pop
cs
movs
popf
dec
lea
adc
jmp
loop
fs
mov
cs
push
lods
and
mov
into
scas
iret
shl
in
stos
mov
popa
cmp
inc
repz
clc
cmc
push
and
lea
sti
popa
mov
outs
int
cmps
adc
cmps
sbb
ins
bound
rcl
movlps
mov
pop
inc
in
and
scas
push
push
cmc
repz
push
sbb
mov
inc
cs
arpl
ins
sti
mov
retf
(bad)
cmp
jb
xor
xor
inc
int
cmp
cmps
mov
rcr
sar
aam
dec
addr16
and
sub
ret
xchg
leave
pop
sub
push
jo
idiv
mov
pop
xchg
jg
ret
mov
enter
lock
jnp
inc
xchg
adc
popa
or
sahf
mov
out
push
jne
sti
jo
or
nop
xor
aas
push
sbb
imul
out
dec
lea
push
stos
scas
add
pushf
addr16
cmp
sub
rcl
pop
or
sti
mov
jmp
jb
leave
retf
cs
popf
cmc
lods
push
dec
pop
jle
add
sbb
xor
cs
sbb
sub
adc
xor
movq
daa
cs
inc
sbb
ins
push
jmp
sbb
mov
or
mov
xchg
xor
mov
cli
shl
ror
fimul
test
clc
cs
(bad)
xchg
je
push
adc
pop
rcr
xchg
scas
clc
xor
inc
je
hlt
xchg
outs
test
retf
mov
cs
mov
xor
push
js
bound
push
les
out
mov
add
repz
mov
adc
addr16
jecxz
dec
lods
xlat
cs
push
inc
iret
mov
data16
fs
cwde
out
pop
mov
xor
(bad)
sar
cs
fsub
sub
dec
sahf
push
mov
mov
cld
mov
sbb
cs
repz
xor
cs
pop
sub
mov
cdq
retf
add
cmc
pop
inc
pop
pop
cs
imul
pop
fadd
mov
cdq
stos
jne
mov
sub
adc
sub
or
(bad)
pusha
mov
data16
std
outs
and
cs
das
pop
adc
aam
mov
mov
cs
xchg
fimul
popf
dec
cs
xchg
dec
sbb
sub
mov
xor
rol
xchg
cs
adc
out
dec
xor
ins
mov
mov
(bad)
outs
cs
mov
inc
pushf
xor
hlt
movs
icebp
sahf
into
add
jbe
enter
cs
or
loop
mov
nop
mov
sub
sub
add
retf
xchg
adc
mov
cs
adc
push
add
xor
cli
or
mov
retf
pop
xor
rol
push
in
icebp
stos
test
cmp
ds
cmp
dec
mov
sub
lods
dec
fbld
sbb
dec
mov
outs
jae
outs
sub
and
idiv
mov
xor
stos
icebp
es
imul
mov
setb
repz
(bad)
jmp
cmp
inc
xchg
jmp
out
imul
push
fimul
pop
stos
outs
mov
call
aas
mov
das
lea
fsubr
sub
sub
xchg
call
fst
cmc
les
leave
daa
ds
jb
lods
(bad)
and
stos
push
aaa
stos
and
jno
fistp
(bad)
sbb
and
je
mov
jecxz
xor
(bad)
mov
hlt
sbb
test
movs
mov
mov
mov
jno
dec
enter
mov
(bad)
sbb
mov
stos
push
cmp
lahf
(bad)
jo
movs
sub
mov
or
inc
loop
dec
jo
inc
hlt
cmp
or
or
push
push
or
sbb
movs
mov
cs
fisubr
lods
fsub
cs
test
ins
mov
adc
inc
out
pop
retf
cwde
pop
out
xchg
dec
dec
daa
and
or
repnz
fwait
outs
pushf
out
lds
mov
mov
and
cmc
movs
out
shl
jae
shr
scas
dec
cs
js
shl
jns
cs
and
or
sub
stos
add
dec
scas
push
(bad)
fsubr
out
loop
xchg
out
xor
or
shr
fdivp
ret
pop
test
mov
inc
pop
mov
xor
adc
rol
int3
mov
jmp
test
repnz
pop
les
ror
dec
xchg
mov
outs
cmp
es
aaa
ror
pop
inc
pop
cs
sub
call
cmp
ins
es
or
jmp
leave
cs
mov
ror
loop
push
push
mov
retf
outs
push
or
xor
cdq
repz
dec
test
loop
or
sub
jmp
out
enter
pop
stos
dec
bound
stos
mov
jecxz
jne
and
(bad)
mov
pop
clc
mov
cs
jp
ja
xor
inc
cs
sbb
jl
in
movs
(bad)
enter
shr
mov
xchg
push
retf
fdivr
dec
test
out
fldcw
cwd
cs
mov
aas
cmp
sub
xchg
mov
outs
fsubr
mov
xchg
(bad)
int3
pop
(bad)
or
cli
push
mov
(bad)
das
rcl
dec
push
xor
mov
xchg
out
lods
ds
adc
add
mov
int3
push
outs
cs
add
sub
mov
dec
mov
pmaxsw
sahf
out
rol
push
mov
cmps
pop
cli
xchg
scas
cmp
adc
fs
cs
icebp
jle
xor
cs
dec
into
xor
shr
idiv
pop
sub
(bad)
test
out
outs
pop
xchg
mov
rcl
inc
and
stc
mov
cs
inc
imul
sub
xchg
ja
add
push
mov
clc
bound
mov
mov
fneni(8087
rcr
jg
in
int
push
add
pop
pop
sbb
into
xchg
xchg
mov
add
sti
cmp
enter
ret
pop
xchg
out
in
add
daa
in
ins
mov
sub
or
inc
call
cs
test
xor
mov
push
xor
mov
stc
jecxz
shr
int
(bad)
js
xlat
lods
out
into
cli
test
xor
sahf
loope
rcr
xor
adc
sbb
movs
cmp
lock
shr
inc
(bad)
fdivr
fimul
inc
cmp
inc
jbe
ins
push
popf
imul
mov
sar
mov
mov
cs
sti
cs
aaa
jp
mov
popa
mov
adc
test
push
cs
ds
cs
call
dec
movs
xor
jle
xchg
cwde
jg
and
in
into
push
jp
cs
jo
jns
xor
lea
adc
jle
leave
into
mov
pop
mov
mov
cmp
xor
sub
(bad)
sub
sub
xor
xchg
(bad)
in
jmp
aas
shr
iret
out
(bad)
sti
mov
pusha
push
cmp
out
outs
cmp
and
push
enter
jbe
cmp
pop
and
shl
inc
sub
daa
jo
sbb
das
push
aas
leave
jbe
xor
inc
jmp
mov
outs
repnz
iret
pop
sysexit
jle
loope
cs
adc
mov
cld
cmp
sub
mov
cmps
pushf
sbb
jae
inc
add
fnstsw
in
jmp
xor
jmp
or
push
cmp
mov
loop
outs
scas
or
arpl
cld
stos
mov
mov
fsub
les
mov
jno
je
pop
call
adc
scas
xchg
jns
inc
jp
ins
stos
into
rol
pop
dec
sub
imul
dec
inc
push
or
push
xlat
xor
fistp
mov
imul
xchg
ss
xor
(bad)
std
mov
add
out
hlt
test
pusha
and
das
out
jae
lahf
xchg
and
(bad)
dec
(bad)
popa
loopne
cmp
scas
les
hlt
outs
into
fisttp
lods
iret
push
push
ins
and
push
cmc
arpl
pop
das
aas
imul
leave
js
mov
jecxz
(bad)
dec
fild
shr
ja
arpl
les
(bad)
ds
fcomp
xlat
retf
in
pop
and
xor
mov
pop
rcr
les
enter
icebp
aam
pop
loop
adc
aam
mov
mov
push
dec
sub
xchg
mov
jle
pop
je
dec
xlat
rcl
add
loope
sub
jecxz
fsubr
mov
cmc
ror
dec
int
and
aam
(bad)
in
pushf
cmp
mov
jle
leave
jg
fmul
cmps
sub
sub
xchg
scas
out
(bad)
pop
ss
adc
out
cmp
cli
shr
fsubr
nop
(bad)
mov
rol
jg
fscale
sbb
mov
xchg
mov
aam
repnz
xor
dec
loop
sbb
jns
(bad)
mov
fld
scas
push
inc
bsr
push
cmp
sub
mov
dec
shl
enter
imul
mov
arpl
call
lock
push
add
push
leave
fld
jo
pop
retf
mov
not
jle
retf
stos
repnz
popf
jg
xor
ds
xchg
mov
jns
pop
push
(bad)
or
inc
sbb
setae
test
add
mov
std
cs
mov
mov
mov
sbb
dec
mov
sbb
cmp
ja
bound
sub
mov
inc
(bad)
jmp
push
adc
xor
lods
(bad)
gs
lock
add
leave
push
and
jge
retf
ret
jmp
mov
push
and
(bad)
cmp
push
jp
or
sub
and
xchg
stos
in
xchg
push
and
neg
mov
jecxz
mov
nop
call
mov
in
jle
scas
jl
loope
sahf
pop
imul
pop
gs
push
bound
out
sub
aas
stos
in
aam
outs
cwde
sar
cmp
cmps
les
cmp
add
xchg
sbb
mov
repz
mov
xchg
arpl
in
cmp
pushf
cmps
aaa
rcr
push
retf
sbb
leave
push
and
jmp
je
jmp
mov
mov
fisub
gs
out
in
dec
clc
int3
ror
je
in
gs
push
jp
mov
test
push
es
push
xchg
mov
data16
mov
xchg
fild
sub
lods
rol
push
inc
jae
xchg
jns
js
adc
in
cmp
sbb
xlat
jb
xchg
xor
and
(bad)
cmp
retf
(bad)
sub
mov
sub
sub
mov
call
call
scas
jbe
loopne
and
in
xchg
nop
(bad)
aam
adc
push
pop
cmp
dec
inc
fdiv
sub
daa
xor
add
cs
fadd
jo
test
sbb
dec
jnp
test
pop
mov
js
into
pushf
jmp
iret
add
xchg
test
lods
cs
(bad)
in
scas
xchg
jl
cs
and
dec
xor
mov
xchg
loopne
bound
fcomp
sub
and
push
mov
inc
dec
and
pop
sbb
outs
ins
pop
nop
jae
jmp
jmp
out
mov
into
or
call
sbb
mov
jp
jle
push
sbb
lock
sub
loop
push
inc
cmp
call
fs
out
(bad)
jo
ror
sub
ins
and
and
push
stc
mov
out
shl
push
cs
sbb
or
sbb
hlt
mov
std
push
mov
xchg
cs
jns
test
push
into
mov
jnp
outs
and
int3
int
xlat
sbb
fisttp
(bad)
jae
test
mov
js
(bad)
sub
pop
repz
into
sbb
scas
outs
add
mov
sti
sub
pop
out
nop
fild
das
daa
repz
test
not
cs
scas
push
xlat
jno
xchg
cs
pop
pop
cmp
mov
aas
lahf
mov
xchg
sbb
loope
test
sub
xor
(bad)
sti
movs
cmps
xor
mov
dec
cs
fld
loope
push
daa
dec
xchg
call
lock
cmp
lods
div
mov
call
retf
mov
in
mov
add
push
scas
(bad)
fnstcw
lahf
jne
adc
or
mov
test
add
test
and
mov
push
adc
test
push
rcr
cmps
xchg
jmp
daa
dec
mov
sbb
xchg
out
popa
sbb
out
dec
push
xor
cmp
adc
xchg
shr
push
sub
cld
out
inc
in
dec
pop
sub
stc
sbb
out
leave
imul
jg
jecxz
ds
mov
aas
xchg
sbb
jno
mov
push
test
pop
ja
test
retf
sbb
sbb
mov
mov
aas
pop
and
inc
mov
outs
jb
sub
push
xlat
outs
or
cs
mov
jbe
sti
jae
pop
inc
adc
mov
push
sbb
sub
arpl
cli
inc
sar
mov
cmp
out
ja
movs
fsqrt
mov
or
ss
sbb
cdq
fwait
xlat
sti
mov
adc
or
stc
xchg
ss
mov
xor
dec
adc
scas
es
add
fnstcw
fs
fisubr
inc
js
and
(bad)
popa
bound
loop
add
movs
movs
out
pushf
add
jge
movs
(bad)
sub
fsub
jecxz
fdiv
(bad)
fnstsw
sbb
dec
stos
xlat
add
add
std
leave
or
rol
les
cmp
inc
add
js
and
cwde
inc
xor
imul
idiv
aad
out
push
sub
add
and
sbb
into
push
mov
xlat
dec
cmp
scas
sbb
hlt
or
mov
cli
mov
xchg
mov
idiv
rol
int
daa
sub
cmc
retf
ficomp
jecxz
out
mov
sub
sar
aam
fadd
push
push
add
push
jb
cmp
inc
jns
push
repz
cmps
cs
divps
pop
mov
rcl
cs
lds
push
pop
dec
cs
xor
repz
jb
dec
fild
add
ret
retf
scas
lods
daa
pusha
shl
or
aaa
into
jp
mov
sar
and
ds
aas
push
jg
mov
dec
add
cs
popf
xor
iret
in
xor
cwde
mov
(bad)
xchg
scas
or
nop
lds
jnp
out
adc
into
(bad)
outs
xchg
test
and
stos
mov
mov
bound
ja
inc
push
xor
jnp
mov
dec
mov
push
fld
es
cmps
pop
imul
push
sbb
mov
cmp
inc
je
inc
pop
pop
fs
cmp
ss
mov
outs
dec
js
xchg
cmc
or
lds
ret
cs
dec
mov
sub
into
or
retf
sbb
xchg
and
pop
jmp
mov
mov
sbb
add
inc
lds
jp
or
dec
imul
ret
cli
pop
cld
lds
mov
cmc
pop
sbb
in
das
leave
repnz
jo
lahf
adc
xor
and
out
js
int3
test
repz
jmp
pop
xor
push
cli
pusha
sub
and
and
pop
sub
repz
push
mov
out
fistp
daa
dec
adc
push
lods
cli
dec
mov
sub
push
addr16
imul
js
jecxz
push
mov
and
mov
shl
cmp
mov
adc
clc
pop
or
aad
imul
xor
add
push
pusha
push
mov
xchg
jg
pop
scas
ss
sub
je
in
mov
push
xor
rol
dec
repnz
cmps
test
lea
mov
ret
in
cs
inc
fistp
sbb
adc
or
test
jg
leave
aad
mov
cs
adc
mov
mov
cs
push
sti
xchg
xchg
mov
out
ins
aas
pop
xchg
sahf
mov
ds
pop
adc
pop
xchg
jno
adc
push
mov
and
mov
lods
int3
cld
inc
jmp
daa
cmp
rol
sahf
cmc
add
and
and
inc
xchg
fwait
push
or
lahf
jbe
rol
sub
push
ret
xor
aas
stos
jmp
cdq
xor
mov
es
(bad)
sbb
pop
xor
out
xchg
mov
pop
adc
out
sbb
jp
daa
adc
rol
add
ins
out
jne
cwde
push
mov
retf
mov
xor
int
xchg
and
dec
inc
ins
or
in
sar
pop
mov
cs
jmp
(bad)
cs
std
jecxz
icebp
out
sbb
fnsave
daa
jnp
adc
xchg
or
xor
out
iret
hlt
push
cdq
push
jno
sbb
sub
push
movs
xchg
cwde
scas
and
outs
pop
pop
fsubr
jbe
cmp
inc
loope
xor
dec
or
xchg
loopne
sti
mov
(bad)
xchg
mov
and
fs
sbb
jp
repz
mov
jmp
movs
xor
push
cdq
mov
push
ret
std
fiadd
jge
xor
xor
xchg
jb
ss
cmps
pop
sub
sti
dec
inc
std
das
mov
nop
lods
or
mov
into
adc
mov
je
cmc
loope
pop
mov
inc
mov
test
retf
iret
xor
jl
dec
pop
mul
clc
cmc
fldcw
add
and
jle
retf
fwait
xor
push
mov
mov
add
lods
fwait
inc
js
mov
ret
sbb
jae
dec
std
dec
data16
xchg
mov
inc
sub
cmp
leave
cmc
hlt
jmp
aas
movs
test
scas
call
sti
cmp
pop
mov
and
add
add
cwde
leave
push
dec
test
leave
cmp
mov
inc
and
sbb
or
imul
daa
and
add
adc
push
push
cmp
test
jne
add
mov
mov
in
sahf
push
sar
cmp
mov
add
push
adc
outs
sbb
in
pop
xchg
and
ret
popa
mov
mov
mov
cs
mov
les
inc
push
mov
shl
mov
(bad)
fcom
push
adc
cmp
ror
cmc
aam
xchg
or
dec
enter
inc
fnsave
std
loopne
mov
inc
mov
in
mov
arpl
xchg
dec
cs
sbb
cmp
jle
sub
loopne
call
outs
push
xor
ss
arpl
sub
ds
sahf
pop
cli
cs
or
dec
(bad)
mov
shl
mov
jp
lods
std
into
mov
or
inc
adc
inc
add
or
(bad)
out
adc
pop
mov
and
mov
inc
mov
mov
(bad)
scas
jmp
iret
dec
dec
inc
mov
mov
fs
jp
test
xor
jno
repnz
pop
sub
adc
out
sbb
pusha
dec
xchg
aad
jbe
js
push
(bad)
mov
fsubr
in
mov
xchg
stos
jnp
lea
cmps
xor
sbb
sub
cmp
and
cmp
bound
xor
add
cmps
mov
sbb
mov
jo
rol
stc
clc
push
in
inc
rcl
(bad)
div
adc
fsub
jbe
cs
sub
cli
jmp
repnz
aaa
into
push
xchg
sub
xchg
mov
test
jbe
adc
xor
xchg
inc
dec
mov
mov
int3
hlt
cmp
cs
adc
sub
xor
sub
xchg
stos
scas
mov
out
xor
repz
test
jmp
cmp
push
mov
xchg
das
fmul
fidiv
aas
xor
xchg
retf
hlt
and
in
scas
xchg
dec
sbb
movs
cwde
test
and
daa
mov
mov
inc
retf
pop
ficom
aam
cs
scas
popf
jo
std
xchg
push
daa
cmp
imul
xchg
iret
jns
mul
mov
xor
pop
xor
or
mov
jg
leave
jge
xchg
scas
dec
sub
mov
dec
cmp
mov
movs
add
xchg
dec
cld
stos
ret
stos
mov
std
rcl
mov
les
imul
cmp
inc
adc
jae
xchg
cs
outs
add
push
cs
stc
sub
mov
push
inc
xchg
mov
pop
nop
popf
mov
push
xchg
into
lock
mov
sbb
ins
sub
sub
test
cmps
mov
dec
push
test
popa
dec
in
popf
xor
fisubr
movups
scas
arpl
cs
shr
pop
dec
push
cmc
adc
xchg
test
sub
loopne
data16
iret
cwde
enter
ja
in
jle
mov
mov
sti
int
mov
fild
test
movs
lods
fdivr
scas
test
ja
jg
xchg
cs
or
sbb
aad
xor
sub
mov
adc
push
xchg
rcl
cs
stos
mov
jo
and
inc
jbe
in
xor
mov
sbb
aam
sub
inc
fsubr
nop
cs
repz
sub
rol
mov
mov
cmps
add
ds
mov
lahf
cmp
sub
adc
imul
out
aas
aad
cmp
jecxz
push
scas
mov
das
add
jle
jl
xor
data16
mov
inc
add
scas
adc
inc
pop
cs
mov
pop
cmp
movs
out
sbb
scas
test
or
or
test
fs
jb
lahf
jmp
out
fstp
test
pop
sbb
imul
jae
add
neg
je
daa
ret
loop
out
scas
daa
push
test
xor
dec
jae
jmp
dec
mov
outs
pop
jp
inc
pop
aad
movs
mov
fadd
shr
adc
jne
lods
mov
sub
sbb
cs
ins
sti
dec
test
jle
mov
adc
ret
xchg
retf
lea
jne
cmp
out
or
mov
cwde
cs
push
add
xor
pop
and
jmp
outs
mov
lahf
sub
push
sub
mov
xor
scas
inc
inc
call
out
test
pusha
xchg
xchg
fs
or
ret
push
leave
adc
shl
or
push
sbb
push
loopne
xchg
clc
or
pop
cs
mov
in
or
aas
retf
fucomp
retf
aas
and
es
(bad)
ficomp
cmp
fst
cmp
xor
sbb
mov
loope
or
xor
lods
and
sub
ret
push
out
int3
xor
mov
ficom
imul
cli
xchg
lahf
dec
daa
or
daa
lea
ds
sbb
sti
and
or
dec
push
push
xor
mov
repz
xor
test
and
fisub
xor
and
dec
fisub
xor
arpl
inc
outs
and
adc
xchg
add
mov
retf
cli
in
xchg
mov
or
xchg
cs
xor
mov
jb
jge
aas
scas
mov
cmp
sahf
sar
adc
out
xor
ret
xchg
jmp
repnz
sub
les
adc
mov
je
push
push
test
or
adc
dec
scas
and
dec
dec
cmps
or
lds
in
mov
stos
cs
xor
frstor
dec
cmp
and
inc
or
cs
hlt
jne
pop
xor
scas
cmp
lock
ret
(bad)
shl
movs
jmp
scas
mov
sub
cmp
(bad)
jecxz
inc
(bad)
cmp
sbb
jmp
stos
daa
mov
shr
add
aam
fisub
sub
pop
sub
sub
out
retf
inc
pop
sbb
push
outs
daa
adc
cs
and
push
push
sbb
imul
movs
in
push
dec
fst
call
(bad)
mov
lock
jmp
mov
sbb
(bad)
hlt
cli
inc
out
xor
clc
mov
dec
mov
pop
mov
fisubr
(bad)
fcom
jns
push
outs
pop
sbb
sub
imul
push
bound
inc
rcr
psllq
adc
sahf
dec
cs
call
das
pop
jb
mov
outs
push
hlt
shl
sbb
rcr
and
fistp
jb
xor
test
inc
stos
retf
adc
and
jle
cs
mov
daa
jbe
pop
cs
adc
imul
cli
pop
add
mov
(bad)
jo
daa
push
or
dec
mov
in
lock
mov
daa
push
ins
les
push
or
test
or
lods
retf
clc
mov
pusha
jne
dec
pop
cs
dec
mov
cs
jmp
into
int
mov
pop
adc
ss
and
xchg
aam
scas
push
mov
cmc
mov
push
shr
int
sbb
loope
and
xchg
jae
xchg
dec
js
push
cwde
sub
cmps
sbb
xchg
pop
cs
xor
rol
scas
jnp
outs
xor
mov
sub
inc
cmp
rcr
das
ficomp
mov
(bad)
repnz
sti
mov
and
shr
imul
dec
fcmovne
sbb
fidivr
movs
cmp
(bad)
cmps
jg
xchg
icebp
mov
retf
add
jno
mov
movs
jmp
jo
pop
mov
cs
js
mov
mov
jo
loope
dec
inc
push
cs
jmp
cmps
or
jmp
cmc
in
cmps
add
xor
dec
scas
(bad)
jne
dec
mov
cdq
das
push
movs
mov
jl
je
sub
mov
xor
sbb
call
adc
dec
jl
xor
mov
add
inc
pop
(bad)
lods
inc
iret
fwait
in
idiv
cmc
js
xor
mov
daa
xor
lods
cmp
rcr
push
scas
jae
cs
sbb
jb
inc
sub
addr16
inc
xor
movs
or
fstp
retf
imul
push
push
push
popa
inc
and
test
push
(bad)
aam
retf
inc
in
xchg
test
cs
pop
(bad)
scas
pop
ja
cmp
icebp
cmps
int3
imul
mov
rcr
cs
fst
shl
cmc
aas
out
mov
sahf
bound
cs
mov
idiv
outs
in
shl
sub
or
xchg
(bad)
push
cld
push
cmp
jmp
enter
xchg
leave
shl
frstor
add
into
and
push
xor
movs
ja
xchg
mov
pop
cs
sahf
shl
shl
je
push
xchg
sub
in
sub
out
jbe
lods
das
cs
aaa
mov
mov
mov
jmp
or
and
and
shl
out
shl
cs
gs
outs
xor
xchg
cmp
scas
mov
sbb
sub
aas
cld
xor
pop
pop
push
aas
jb
sub
scas
inc
pusha
jo
mov
push
mov
pop
js
ss
add
outs
and
push
push
ret
inc
jnp
and
mov
cs
add
shr
and
cdq
retf
data16
pop
mov
(bad)
mov
cdq
mov
xchg
stc
inc
sub
mov
into
fild
sub
test
and
aam
cs
and
sub
inc
js
push
xchg
sub
xchg
xor
cmp
fiadd
sub
test
ins
icebp
cmp
mov
ds
movs
mov
adc
(bad)
popf
cmp
and
add
mov
jg
sbb
clc
fisubr
sti
popf
xor
loop
test
mov
nop
sbb
repz
retf
xor
aaa
cs
call
adc
jns
scas
aas
lahf
xor
cli
mov
push
sub
ret
xor
test
and
mov
hlt
pop
pusha
xor
fxam
jne
pop
retf
fs
aam
pop
fsub
cs
cmp
dec
xchg
out
jns
jnp
sub
mov
clc
sar
sub
daa
loope
adc
(bad)
lods
mov
xchg
in
dec
lods
xchg
(bad)
cs
shl
les
jmp
loope
into
mov
sbb
into
ret
add
push
dec
adc
sub
add
loop
aad
pop
mov
jl
outs
aaa
mov
dec
add
js
adc
fidiv
mov
sub
inc
jmp
addr16
and
lock
xchg
fidivr
pop
mov
dec
push
fisubr
shr
jnp
mov
gs
cwde
adc
pop
sbb
push
rcl
jne
or
adc
cmc
adc
pop
or
pop
push
xchg
or
jns
enter
cs
xchg
loopne
cs
js
push
and
lods
xchg
into
mov
jl
mov
mov
aam
mov
xor
jp
and
fs
movs
push
or
cs
lahf
xchg
nop
add
inc
cs
adc
mov
mov
adc
cmp
test
pop
loopne
xor
in
and
mov
inc
leave
fstp
cs
xlat
aam
mov
lock
fbld
jnp
bound
sub
and
scas
jge
dec
rcl
mov
dec
pop
sbb
jecxz
ret
jp
jae
xor
ss
mov
and
sbb
outs
test
cs
mov
mov
std
dec
test
jmp
and
shr
push
nop
add
out
inc
sub
in
shl
xchg
fldl2t
stos
cs
inc
xor
push
dec
cs
daa
push
popa
movs
mov
jns
imul
outs
out
sub
adc
sub
jle
adc
cs
repnz
popf
cs
ret
cmps
mov
in
push
rcl
push
jmp
adc
outs
or
push
push
jmp
add
popa
shl
add
(bad)
xor
adc
or
retf
fwait
out
popf
sbb
cmp
mov
xchg
pop
fs
cs
in
push
lods
cs
retf
repnz
jns
aas
bound
xor
popf
mov
push
sbb
gs
ja
and
test
xor
sbb
aad
push
adc
mov
sub
cwde
or
sti
sub
daa
mov
sub
push
xor
dec
mov
push
add
push
xchg
mov
xchg
into
cmps
cmp
sbb
xor
mov
retf
int
fcomp
cs
mov
jns
ja
cmp
mov
sub
mov
sbb
cs
fimul
jb
and
xor
ret
(bad)
adc
inc
loope
dec
or
into
imul
add
dec
ss
mov
pop
jmp
rcr
nop
dec
fsub
retf
dec
cs
push
jns
repz
sahf
cs
and
push
das
xor
cdq
test
retf
pop
cs
cmp
cmp
xor
call
jp
imul
in
mov
sar
xor
mov
mov
ins
das
test
daa
(bad)
jge
shl
mov
data16
enter
dec
sahf
pop
cwde
push
push
pop
cmp
xor
xchg
and
and
loope
dec
and
call
xor
loopne
xor
jb
adc
jae
jp
adc
lahf
mov
ret
mov
jmp
and
sub
repz
ins
in
int
mov
sub
and
or
cs
out
cmp
and
dec
aam
cs
bound
xchg
daa
mov
loope
jge
iret
sahf
and
ficom
and
dec
adc
(bad)
add
or
sub
cmp
and
pop
mov
push
sub
dec
test
scas
xchg
movs
(bad)
mul
in
repz
sbb
and
cmp
imul
pop
sub
jb
iret
pop
cs
fldcw
jge
bound
xchg
rcl
adc
or
gs
mov
aam
pop
sub
adc
dec
nop
cs
in
xor
pop
retf
cld
into
leave
(bad)
scas
shl
adc
mov
test
pop
xchg
cs
cli
dec
pop
dec
mov
and
or
es
rcl
push
jl
int3
push
adc
stos
test
xchg
into
shr
cs
push
je
outs
mov
add
jp
aaa
jl
out
xchg
das
cs
cdq
cmps
mov
enter
mov
xor
mov
test
daa
inc
les
shr
retf
inc
push
int
jle
push
aaa
pop
mov
sbb
jp
shl
mov
push
or
mov
cmp
lods
sub
arpl
scas
std
and
pop
cs
adc
retf
jb
mov
mov
cmp
mov
mov
ret
cs
add
add
or
inc
cdq
mov
cmp
sar
cmc
mov
enter
jmp
adc
pop
in
imul
mov
xor
push
mov
shr
xor
xor
sahf
mov
shr
or
xchg
(bad)
sahf
fsubr
mov
fld
mov
mov
ret
adc
sbb
cs
or
xchg
daa
ja
lahf
int3
ror
cs
push
push
dec
mov
and
jns
xchg
mov
push
mov
and
cs
movs
sbb
xchg
(bad)
es
test
outs
icebp
or
inc
pop
sub
cs
pop
pusha
(bad)
mov
inc
cmp
xor
push
sbb
(bad)
dec
scas
cdq
leave
sbb
xor
and
push
mov
cmp
cs
fidivr
jae
data16
mov
xchg
mov
repz
mov
clc
enter
ins
and
xlat
fidiv
sbb
inc
pop
aad
adc
cs
(bad)
lods
push
xor
cs
pop
daa
arpl
(bad)
aam
cs
dec
rol
lock
test
dec
mov
cmp
xor
je
ror
cs
sbb
les
out
movs
mov
cs
fstp
pusha
push
pop
xor
pop
jge
repz
mov
(bad)
outs
mov
jnp
jmp
je
leave
inc
js
fmul
cmps
mov
xor
cmovnp
fdivr
add
xor
mov
add
mov
fstp
aam
xchg
lock
sub
jge
pop
cs
stos
jmp
int3
je
sub
imul
leave
cmp
push
stos
(bad)
or
cs
sti
or
movs
mov
stos
ret
(bad)
call
push
pop
movs
xor
out
ss
mov
(bad)
sbb
call
out
leave
mov
sbb
xlat
pop
and
hlt
cs
ss
enter
xor
dec
xchg
push
movs
out
xor
leave
rol
sub
int
sub
cmps
je
jo
inc
push
xor
out
xchg
cmp
and
ss
add
out
lea
push
sub
cmp
push
out
outs
aas
pop
push
cs
int
test
pop
mov
xchg
aaa
rcl
push
stc
mov
xchg
lds
cmp
add
scas
pop
fwait
shr
jecxz
fcmovnu
mov
xchg
ret
adc
adc
cmc
sub
scas
xor
sub
pop
sahf
xchg
mov
mov
cld
call
cmc
xor
cs
es
(bad)
mov
mov
push
xor
popf
pop
add
pop
dec
clc
fisub
jb
push
ins
ret
fstp
cs
mov
pop
inc
in
sbb
pop
pop
stos
addr16
pop
push
or
test
cs
xchg
aad
mov
cs
fldcw
pop
ret
cs
push
xor
dec
xor
mov
mov
test
test
push
cs
aaa
pop
mov
into
xchg
fmul
mov
lock
pop
jmp
je
xor
enter
ret
mov
and
jmp
fnstenv
inc
mov
fdivr
jae
and
pop
add
mov
mov
scas
jg
pop
add
pop
dec
lahf
cdq
inc
leave
aaa
pop
dec
xor
or
dec
sbb
xor
adc
adc
aas
dec
and
jg
and
cld
les
add
not
fnsave
jno
data16
gs
out
jnp
cs
cmp
cwde
in
xchg
retf
sub
cmp
daa
imul
mov
jnp
cs
xchg
in
jae
js
daa
cmc
or
adc
ds
inc
loopne
sub
(bad)
out
(bad)
pop
push
fcom
inc
std
mov
pop
inc
cs
mov
add
fstp
lds
rcl
mov
pop
mov
sbb
sub
adc
sbb
rcl
(bad)
loopne
(bad)
jecxz
(bad)
ds
mov
ins
stos
test
pop
xor
mov
cwde
push
pop
outs
test
xor
ret
inc
or
ss
add
cld
jbe
sub
pop
inc
cmp
pop
xlat
xchg
je
sub
add
dec
xchg
out
add
sub
inc
aam
mov
mov
test
push
push
add
pop
(bad)
lahf
jae
push
cs
ins
sbb
add
pop
mov
jmp
xchg
xor
lahf
dec
pop
pop
popa
push
loope
data16
jbe
jo
out
xor
ret
xlat
les
pop
int3
mov
sub
xchg
dec
inc
pop
sahf
je
push
das
enter
cdq
dec
retf
xor
push
scas
aaa
cmps
inc
scas
lods
outs
stc
mov
mov
outs
add
cli
jmp
sbb
sub
sbb
jp
sub
sbb
adc
aas
mov
(bad)
(bad)
lahf
shl
mov
xor
jno
cmp
iret
mov
shl
xor
retf
jae
push
push
call
enter
cmp
inc
adc
dec
push
push
aas
and
rcr
das
jb
mov
cld
mov
ds
ss
mov
dec
cmp
scas
jmp
jmp
dec
scas
cs
nop
mov
cs
inc
adc
xor
jp
mov
sbb
add
cmps
int3
test
xchg
cli
push
or
jne
addr16
jmp
fdivr
mov
sbb
fwait
adc
sbb
sbb
inc
shr
mov
aas
push
das
xchg
and
xchg
push
loop
mov
lods
in
cmp
sub
mov
push
outs
out
iret
sub
lock
fistp
arpl
mov
lods
fdivr
dec
cmps
loop
push
mov
scas
stc
cs
add
(bad)
aaa
or
ficomp
dec
or
mov
fwait
outs
xor
jae
inc
fcom
ret
int3
rcl
and
daa
lea
les
mov
pop
ror
xor
cld
fs
sbb
int
sub
jo
push
mov
mov
sub
sahf
ret
nop
fld
xchg
xchg
rcl
cs
sbb
or
adc
mov
mov
test
(bad)
pop
push
lds
push
ds
aam
xchg
cs
xchg
call
mov
add
scas
loop
jg
aas
fisttp
inc
fwait
xchg
sahf
neg
mov
jle
jns
add
jb
jecxz
mov
movs
mov
stos
cmp
out
cmp
adc
test
(bad)
sar
mov
mov
xlat
jo
outs
sub
fcom
and
adc
add
sbb
mov
arpl
xchg
cs
mov
fcom
jae
lods
iret
ds
retf
mov
lods
es
push
movs
mov
loopne
gs
push
mov
xchg
mov
and
mov
xchg
mov
(bad)
pop
push
xor
and
int3
shr
cmp
fbstp
js
pop
push
dec
pop
cmps
adc
ja
pop
scas
sub
and
or
stc
cs
retf
loopne
pop
aaa
cs
std
rcl
push
cmp
mov
out
pop
mov
jp
add
cdq
ins
cmp
cs
sbb
fldenv
push
mov
stos
jns
retf
sar
movs
inc
mov
(bad)
leave
repnz
pop
adc
sub
retf
dec
inc
popa
sbb
mov
xchg
out
sub
daa
xchg
loopne
iret
jecxz
not
(bad)
(bad)
cmp
inc
cs
movs
adc
addr16
adc
in
mov
out
add
rcr
or
fnstenv
ja
loope
xor
fistp
add
pop
out
dec
push
mov
ja
scas
and
sahf
jnp
inc
clc
add
nop
(bad)
cmp
pop
jmp
in
aas
test
and
sub
mov
cmp
pusha
jne
cmp
and
adc
jo
adc
jmp
xor
jp
jl
fsubr
inc
sbb
sub
in
sbb
jb
aas
cs
bound
cmp
cmp
aas
add
fst
inc
outs
daa
sub
out
sbb
or
aaa
adc
int
out
icebp
lahf
cmp
or
out
popf
cs
sbb
cs
inc
mov
in
cs
loop
in
push
sub
sub
inc
add
pusha
std
dec
jle
mov
cmps
cs
xchg
jne
adc
add
outs
stos
inc
loop
mov
out
push
aas
adc
push
cs
push
or
ja
jp
jnp
sti
jbe
xor
and
sub
jnp
dec
xor
fadd
push
mov
and
je
pop
jle
cs
jne
pusha
lods
aam
daa
shl
mov
or
cmp
inc
les
and
mov
nop
sbb
mov
push
imul
outs
addr16
push
call
popf
mov
icebp
push
add
out
(bad)
shl
shl
imul
pop
and
movs
daa
iret
mov
cmp
leave
cli
mov
and
jge
sbb
adc
mov
xchg
out
dec
sub
cmc
scas
and
xchg
daa
mov
and
sti
ins
push
adc
xor
std
pop
sbb
into
gs
test
add
jbe
push
or
(bad)
call
out
pop
jmp
pop
(bad)
(bad)
xor
(bad)
test
xchg
scas
and
sbb
call
pop
arpl
push
ds
add
movs
dec
mov
xchg
cs
std
sub
stos
jecxz
(bad)
loopne
cs
in
jp
aaa
push
jbe
punpcklwd
ficom
or
dec
inc
adc
sbb
sbb
sbb
mov
pop
idiv
ins
(bad)
pusha
mov
stc
xchg
scas
aas
stos
scas
xor
xchg
out
or
or
ror
cmps
pop
jmp
and
jbe
scas
add
mov
xor
pop
(bad)
mov
loope
jmp
cli
lods
call
sub
outs
lea
call
scas
cmp
shr
and
wrmsr
push
cld
xor
out
lea
outs
xchg
pop
sar
push
xchg
xlat
sub
cs
ja
lahf
lods
in
movs
pop
xor
inc
out
pushf
pop
add
pop
enter
imul
push
add
mov
out
jb
pop
out
mov
jmp
cmp
movs
inc
enter
fadd
xchg
retf
jae
push
add
or
mov
sub
add
adc
cs
fcomp
sub
add
aas
cld
push
out
jp
retf
mov
pop
push
sub
cmp
fisubr
mov
sbb
adc
cmp
loopne
sub
int
imul
jae
enter
pmaxub
pop
jg
stos
rcl
cs
outs
push
or
and
fld
dec
fdiv
cmps
lea
test
stos
jo
pop
mov
jle
jnp
jmp
imul
fwait
test
mov
cs
mov
cwde
bound
icebp
lock
or
cmovno
and
or
cs
fdivr
scas
push
or
clc
fcmove
(bad)
sub
mov
push
das
mov
cs
dec
adc
pop
pop
imul
xor
mov
inc
popf
add
fcom
scas
xor
imul
fld
push
rcr
fsub
out
xchg
adc
pop
inc
jp
dec
ret
push
push
push
leave
in
push
rcl
mov
sub
in
push
sbb
mov
inc
and
add
daa
mov
xchg
shr
xor
cmps
(bad)
int
aaa
xchg
rcr
mov
push
stc
daa
push
xchg
pop
push
push
add
or
pop
jb
dec
sub
sub
jle
scas
push
xor
sub
(bad)
mov
(bad)
sbb
lods
push
aas
jmp
ja
(bad)
retf
xchg
movs
jae
loope
adc
outs
mov
sub
(bad)
scas
mov
push
ror
leave
dec
into
(bad)
sbb
shl
push
in
inc
jb
imul
mov
xchg
icebp
retf
enter
cmps
cmc
mov
push
inc
xchg
or
sub
cmp
pop
adc
iret
push
bound
imul
sbb
jo
cs
aam
sbb
or
out
adc
xchg
inc
jbe
outs
pop
pop
out
mov
inc
add
jl
enter
cs
in
movs
cs
xlat
cmp
jmp
jnp
scas
mov
loop
pop
adc
(bad)
adc
inc
pop
pop
push
mov
es
fmul
mov
stos
icebp
scas
imul
dec
pusha
sbb
das
iret
pushf
mov
loopne
std
lods
loop
pop
popa
out
test
xchg
push
xchg
mov
mov
out
pop
and
fsubr
or
xor
outs
jg
cmp
mov
lods
cdq
int
push
and
out
daa
sbb
out
push
jmp
push
in
leave
push
sbb
aam
mov
ret
xchg
push
ror
cdq
loope
mov
mov
popa
xchg
pop
mov
adc
mov
push
xor
jnp
scas
mov
cmp
sub
jae
je
mov
in
mov
adc
push
loopne
inc
cs
lods
fcomp
fs
cmp
sahf
into
fnsave
inc
dec
pop
aas
imul
and
(bad)
daa
mov
test
and
push
cli
scas
scas
cmps
out
int
shl
pushf
outs
pop
ss
inc
add
lahf
mov
pop
retf
cli
mov
shr
mov
xchg
(bad)
ficom
add
sbb
out
mov
mov
xor
loope
(bad)
jne
fmul
retf
xchg
add
and
or
shr
xor
and
xor
sub
or
sar
xchg
(bad)
mov
into
dec
xor
shr
ds
(bad)
dec
push
xchg
retf
or
xlat
jno
jle
sub
repz
cmp
das
mov
fwait
jno
fmul
push
add
clc
mov
and
sub
mov
(bad)
mov
test
outs
das
mov
sub
rol
jecxz
push
repz
mov
dec
or
or
outs
pop
dec
fdivr
outs
stos
jbe
xchg
push
mov
sbb
mov
jns
icebp
mov
inc
ffreep
out
sbb
sub
out
mov
repz
pop
in
jnp
outs
pop
je
test
movs
mov
stos
je
int
not
mov
sub
enter
mov
cwde
rcl
sti
(bad)
jecxz
sub
jno
cmp
daa
or
ret
mov
sub
rcl
mov
sar
dec
rol
ret
mov
sub
arpl
imul
cmp
dec
sbb
jmp
icebp
stc
sub
mov
mov
call
xchg
icebp
cdq
mov
push
outs
fxch
sub
mov
mov
cmps
inc
add
sbb
nop
add
push
enter
xor
shl
pop
icebp
ins
scas
stos
stos
xchg
ss
sub
std
cs
nop
aas
mov
icebp
dec
push
ror
test
inc
mov
sbb
outs
ds
dec
(bad)
add
sbb
retf
lea
out
xchg
push
add
scas
xchg
out
sub
fs
sahf
loopne
call
add
mov
(bad)
call
jmp
mov
adc
outs
xchg
fcmovb
push
adc
test
repz
and
mov
push
mov
pop
movs
add
sub
cs
push
dec
sub
cs
scas
inc
xor
pop
adc
sub
cwde
outs
call
dec
or
int3
mov
cs
fisttp
jle
fwait
jl
lods
mov
sub
push
xor
jle
mov
jmp
pusha
adc
daa
sub
xor
pop
mov
jge
repz
gs
add
fst
xchg
jae
or
jmp
push
dec
clc
and
cs
pop
dec
sahf
shl
dec
ja
mov
mov
mov
or
adc
sti
or
icebp
push
sub
loop
in
push
xchg
mov
ret
sub
in
(bad)
cs
mov
stos
and
xor
sbb
lods
das
xchg
dec
iret
and
dec
movs
lods
adc
xchg
(bad)
scas
fsub
mov
dec
add
adc
push
in
or
je
cmp
pop
xlat
shl
pop
sub
cld
out
sub
and
retf
cmps
les
sti
xor
mov
pop
sub
add
jmp
stos
inc
jo
and
cmps
das
cmps
fstp
cmps
fmul
jp
sub
lahf
adc
jo
dec
out
les
mov
mov
data16
push
out
cdq
fdiv
shr
mov
add
cmp
jecxz
aaa
cwde
popf
sub
sub
mov
movs
sbb
pop
mov
dec
xchg
outs
push
cs
jbe
je
iret
in
fild
adc
movs
movs
cmp
cmp
cmps
xor
leave
retf
les
ins
scas
mov
cmp
aaa
adc
test
std
data16
retw
fsubr
test
push
mov
mov
retf
push
ss
xor
jmp
cmp
cld
adc
inc
sub
lock
pushf
and
test
es
popf
mov
cmp
scas
and
jne
sub
sub
test
push
and
arpl
jmp
cmp
gs
push
(bad)
std
sahf
or
mov
cmps
sub
mov
xor
fisttp
jnp
test
(bad)
lods
repnz
mov
in
xlat
cld
je
cmp
pop
mov
cmps
or
push
and
neg
xchg
outs
xchg
sub
daa
sub
cmp
cwde
cdq
or
cmp
xor
jnp
pop
jle
test
lods
icebp
jp
stos
or
inc
stos
imul
aam
dec
mov
mov
sbb
xchg
dec
dec
bound
nop
push
xlat
int3
out
cmp
scas
es
fst
sbb
data16
sar
daa
scas
xor
mov
out
pushf
jb
std
lods
xchg
pop
je
cs
jmp
inc
pop
jg
ds
mov
pop
adc
push
xchg
(bad)
sbb
cmps
rcr
mov
mov
loopne
out
xor
sar
rep
xchg
in
scas
mov
shl
cs
mov
pop
adc
push
pusha
mov
mov
sub
jle
repnz
lea
arpl
mov
ret
test
sub
xor
mulps
and
jg
inc
add
push
push
ins
adc
shr
mov
and
ret
sbb
jl
mov
imul
xchg
xchg
cld
cli
pushf
dec
adc
lods
das
cs
cdq
fadd
test
pop
fsubp
lods
rcl
daa
std
mov
sbb
fistp
push
adc
push
adc
sbb
and
xchg
xor
cmp
jmp
or
scas
test
outs
retf
psraw
sub
jmp
mov
push
or
loopne
je
cmps
or
fnstcw
lods
pop
les
mov
or
rol
push
or
iret
mov
mov
jle
adc
pop
fimul
add
cs
lds
outs
daa
and
inc
push
and
out
push
inc
or
dec
pop
adc
pop
mov
faddp
repnz
or
dec
lahf
sub
adc
test
mov
std
sub
xor
outs
stos
lods
jmp
dec
inc
stc
or
or
sbb
scas
loop
sar
mov
push
sub
repnz
sahf
jle
ret
jb
test
adc
mov
push
pop
sub
xchg
cmps
sub
popa
es
mov
sbb
scas
jne
int
xacquire
popa
leave
out
fcmovbe
daa
or
or
cs
ret
ins
cmc
aaa
fld
popa
mov
cmps
jo
lods
cs
retf
int3
inc
push
mov
jl
test
and
dec
push
idiv
or
cmp
xor
jo
out
mov
jl
dec
inc
pop
in
sub
xchg
(bad)
out
xor
ud2
(bad)
call
xor
xor
push
ret
test
sub
out
sub
jbe
sub
sbb
icebp
adc
xchg
inc
shl
jnp
(bad)
cmps
push
xchg
fsubr
cmp
push
mov
imul
ins
and
in
xchg
or
cs
jge
and
and
sub
imul
shl
or
in
cs
shr
push
adc
pop
xchg
xor
pop
push
shl
(bad)
rcr
sub
add
adc
movs
mov
sbb
jmp
shr
or
test
loope
ret
bound
dec
cwde
imul
ss
gs
pushf
cmps
mov
xor
inc
repnz
push
setnp
mov
popa
das
cs
or
adc
sub
cmc
cs
mov
les
sbb
ja
pusha
pushf
dec
cs
cmp
adc
div
cli
cs
inc
outs
leave
lock
xlat
rdtsc
sub
out
call
mov
pop
add
and
xchg
loop
div
and
add
sub
cli
mov
jo
aaa
test
sbb
mov
jle
ficom
pop
leave
sbb
xor
mov
jecxz
pop
and
pop
hlt
clc
xor
mov
xor
pop
sbb
rol
out
sahf
adc
pushf
out
mov
adc
adc
adc
adc
les
fadd
inc
cmp
lock
fild
aaa
movs
inc
adc
int3
lahf
fidivr
inc
movs
imul
ins
inc
sbb
sub
shl
sbb
mov
push
sub
jno
test
in
int3
push
add
dec
pop
inc
dec
cmps
xlat
leave
push
add
sar
outs
sub
aad
mov
rcl
dec
xchg
ds
leave
rcr
or
cwde
(bad)
sbb
mov
xchg
mov
leave
xlat
out
and
xor
test
dec
rcl
and
and
fstp
mov
mov
popf
xchg
sub
mov
aam
push
in
and
dec
xor
xlat
lock
neg
cmp
repz
in
fbld
mov
fist
fadd
dec
mov
sub
mov
cmp
stos
sbb
or
ds
lea
push
cs
scas
cmp
sub
daa
add
sti
jge
scas
cwde
stos
mov
inc
test
cdq
(bad)
lahf
(bad)
cwde
sub
xchg
inc
mov
xchg
mov
mov
push
pop
pop
(bad)
(bad)
mov
shl
enter
outs
cld
adc
(bad)
(bad)
push
dec
lds
dec
cs
pop
cmp
movs
xor
dec
mov
mov
pop
(bad)
push
and
(bad)
repz
cmc
sbb
in
sbb
popf
xor
sar
jg
sub
out
sahf
sar
ficomp
ja
cs
shr
aas
and
test
dec
into
fdiv
rcr
add
and
adc
cs
les
pusha
mov
lods
mov
mov
(bad)
std
popf
jge
cs
cmp
pusha
cs
xor
mov
jmp
pop
ss
imul
(bad)
call
jb
mov
push
cli
ins
adc
push
xchg
jno
sub
xor
jmp
jl
into
(bad)
movs
adc
test
mov
les
mov
je
out
rol
cwde
push
clc
aam
dec
cmc
add
inc
stc
cs
inc
enter
movs
pusha
jp
xor
xor
pop
(bad)
cdq
clc
cmp
push
push
daa
shl
out
js
(bad)
xchg
inc
mov
jmp
cs
test
or
bswap
fimul
pusha
sub
mov
rcl
int
push
dec
dec
xor
mov
inc
xchg
add
pop
xchg
out
and
mov
call
imul
and
lds
iret
sub
pop
jg
and
and
and
cs
out
js
and
leave
cmps
iret
dec
pop
test
mov
into
loopne
call
sti
js
push
xchg
mov
clc
sbb
movs
hlt
mov
mov
js
(bad)
(bad)
fwait
sbb
fld
out
gs
sbb
ins
jns
mov
push
lea
test
int3
fwait
cs
jmp
into
scas
push
(bad)
popa
and
ja
outs
cs
cdq
retf
add
mov
push
loope
pop
outs
mov
inc
inc
lea
dec
sub
cld
xchg
sub
lods
scas
xchg
mov
jbe
xchg
add
out
out
add
pop
test
or
outs
mov
out
movs
mov
outs
xchg
xor
test
(bad)
(bad)
out
cmp
sub
(bad)
movs
sub
jg
mov
fprem1
out
sub
popa
cld
mov
jecxz
mov
dec
xor
shl
out
ror
(bad)
jmp
push
pop
dec
xor
mov
adc
aam
fst
test
dec
cmc
repz
mov
cmp
cmps
push
pop
mov
mov
mov
mov
jmp
inc
popa
ret
popf
mov
xor
nop
enter
adc
cmps
jp
and
dec
pop
push
(bad)
cmc
and
shr
sahf
jge
sub
std
adc
push
push
mov
scas
hlt
mov
cs
mov
ret
xor
aas
dec
mov
test
(bad)
jnp
jge
fwait
test
mov
mov
mov
movs
clc
stos
fs
imul
cs
cmp
or
cmp
push
mov
fwait
movs
dec
push
rol
jno
jmp
xor
stos
lods
inc
and
cs
in
rcl
(bad)
pcmpeqd
movs
lea
dec
or
mov
rcl
sub
xchg
fld
xor
stc
dec
inc
push
fst
cs
retf
mov
sub
push
loopne
sub
xchg
jg
ins
mov
cs
adc
push
cs
and
popa
mov
test
jecxz
inc
jbe
ficom
push
fs
pushf
dec
outs
loope
fisubr
scas
fbld
fwait
std
add
pop
or
push
push
out
int3
adc
into
and
adc
or
scas
sbb
push
cmps
push
xor
mul
cwde
fnstenv
lea
mov
aam
xor
es
in
push
popa
(bad)
stc
cs
sub
push
xchg
jecxz
je
pop
in
jge
or
push
and
enter
ret
dec
sbb
push
and
adc
pop
in
ja
outs
cdq
mov
cs
lods
sbb
ins
mov
aad
cld
(bad)
aad
xor
xchg
sub
mov
push
cmp
sahf
das
icebp
jne
repz
cs
neg
faddp
inc
loopne
xor
xchg
pushf
rcl
cmp
enter
(bad)
and
cmp
xor
nop
adc
pand
push
and
lock
add
sub
movs
stos
add
int3
cs
nop
mov
sbb
inc
dec
cmp
cs
sbb
test
xchg
mov
shl
(bad)
dec
add
mov
xchg
enter
mov
ror
push
pop
sbb
imul
fwait
test
sub
fst
jmp
enter
mov
ds
pop
data16
sbb
or
sub
fld
outs
or
sbb
mov
push
xor
push
dec
pop
mov
imul
and
fild
lea
lods
mov
daa
(bad)
jmp
lods
inc
(bad)
cmps
pop
nop
inc
xchg
pushf
jnp
cs
movs
or
mov
or
xor
sbb
int
ins
iret
jo
cs
pop
inc
sub
xor
ds
fld
test
les
jge
jmp
jg
jb
push
sub
lods
dec
or
(bad)
inc
add
cs
mov
xchg
dec
mov
cmps
pop
outs
enter
(bad)
in
rcr
sub
xchg
xor
jecxz
fwait
adc
cs
test
xor
inc
inc
aaa
aam
ficom
cs
mov
cmp
jecxz
mov
dec
out
les
sbb
push
hlt
pop
sbb
inc
js
je
daa
xor
test
cmps
leave
into
pop
test
push
mov
dec
shl
cs
cmp
out
dec
and
in
test
or
and
cs
mov
adc
out
jecxz
mov
push
sar
jge
sub
xor
addr16
rol
sbb
xchg
fucomp
fwait
jl
daa
mov
fsubr
xor
aam
xlat
iret
sbb
stc
sub
aad
mov
dec
and
jb
and
pop
cmp
fdiv
and
push
movs
fs
shl
cmp
push
fwait
add
mov
aad
fild
cmp
mov
jbe
ss
jle
pop
inc
rol
cs
div
icebp
lods
add
or
sbb
push
pop
dec
jae
xor
adc
arpl
push
shr
scas
ins
aaa
push
pop
push
or
lock
sub
lea
xor
sbb
stos
push
(bad)
dec
imul
push
jno
inc
xor
dec
int3
mov
and
push
shr
mov
jbe
cs
xor
xor
test
pushf
out
mov
mov
idiv
push
outs
cwde
xor
in
scas
sub
aam
mov
mov
call
mov
(bad)
or
jge
sub
xchg
and
xor
hlt
fmul
push
jmp
cs
mov
xlat
jnp
mov
jmp
aad
mov
xor
iret
jno
test
cld
or
jae
ins
push
push
or
sbb
xor
pop
outs
or
imul
mov
mov
jp
jns
and
mov
sub
bound
int3
dec
in
retf
cs
iret
mov
pushf
repz
scas
dec
or
xor
mov
das
ins
jl
popa
add
retf
cs
jp
dec
cld
sti
sbb
sub
jmp
xor
cmps
dec
sub
leave
outs
rcr
push
jmp
stos
lea
and
inc
stos
add
push
sub
arpl
jo
imul
mov
cwde
fisub
enter
dec
cli
mov
push
es
shl
daa
stc
push
outs
push
jns
xor
test
push
aas
xchg
mov
push
aad
mov
ins
scas
not
cmps
cli
cwde
cmps
inc
sbb
cmps
das
popa
out
push
or
int3
mov
leave
call
dec
push
sub
(bad)
jo
jge
xor
xor
mov
cld
out
stc
pop
fsubr
inc
mov
fld
pushf
sti
fild
fst
ret
ja
ret
mov
call
adc
cmp
push
ds
dec
cmps
xchg
call
lock
sub
shl
mov
scas
mov
out
cmp
(bad)
push
movs
rcl
fidivr
pop
sbb
mov
lea
call
(bad)
xor
stos
sbb
in
jmp
pushw
adc
xlat
add
dec
mul
add
iret
movs
sbb
nop
add
dec
pop
ror
(bad)
sbb
sub
sub
test
das
js
sub
inc
mov
fnstsw
sbb
dec
in
inc
sbb
je
xor
push
(bad)
cmc
lock
lods
test
jl
loope
sar
mov
retw
and
adc
push
dec
jae
ins
sub
jno
ins
imul
xchg
gs
ja
jb
cmp
icebp
int3
inc
cli
loop
xor
xchg
retf
outs
xor
cmp
push
pop
inc
xor
sub
sub
out
pop
lods
jle
cs
inc
leave
mov
sub
(bad)
loope
xlat
popf
cmps
push
das
shr
retfw
jmp
inc
mov
jl
xor
stos
mov
sbb
scas
fcom
mov
sbb
std
mov
outs
cs
(bad)
fist
inc
cs
das
out
rcl
into
jb
cmp
pushf
mov
sub
jae
cmp
ror
fimul
out
fist
sub
sub
into
mov
scas
push
jp
inc
pop
pop
sub
jo
inc
push
into
xor
int3
shl
ins
mov
jmp
scas
es
and
cs
xchg
jno
mov
cmp
pop
mov
and
add
ficomp
cs
xchg
mov
mov
jmp
jae
and
or
sbb
scas
dec
xor
addr16
mov
icebp
fst
stc
cmp
shl
(bad)
push
sub
in
xrelease
push
adc
xor
jnp
jle
clc
cmp
ins
cld
cs
(bad)
push
in
mov
cs
or
sub
add
and
in
les
(bad)
sub
(bad)
in
dec
pusha
sub
dec
test
pop
push
repnz
jecxz
lods
icebp
lock
sub
inc
pop
inc
iret
stos
sbb
(bad)
xchg
mov
leave
imul
(bad)
rcl
cs
in
cs
lahf
jle
cs
xchg
jns
cmp
scas
cs
push
or
inc
mov
scas
add
(bad)
cs
ins
cmc
mov
out
imul
mov
(bad)
(bad)
jmp
adc
stos
mov
or
or
(bad)
call
dec
cs
jb
jne
pusha
popa
xor
xchg
adc
xlat
bound
jmp
and
into
ficom
sbb
aas
sbb
mov
stos
and
mov
inc
not
xchg
or
mov
je
pushf
cmps
lds
leave
sbb
fimul
add
or
imul
mov
pop
and
xchg
cmp
jl
scas
sbb
ds
xchg
cs
or
adc
stc
jnp
cs
xchg
retf
cmp
push
push
jo
shr
retf
xor
push
daa
cs
sub
leave
jb
inc
cs
push
(bad)
push
xor
adc
retf
mov
or
mov
sub
cs
push
stc
scas
cs
outs
pop
adc
ins
and
and
(bad)
and
jnp
mul
daa
and
jge
mov
inc
or
sahf
push
aas
add
shr
jbe
sbb
inc
adc
scas
dec
adc
cmp
movs
pop
dec
adc
iret
mov
aam
sti
or
mov
arpl
mov
rol
xchg
fwait
push
adc
xor
pop
sub
sar
jge
(bad)
xlat
add
int
sbb
xor
inc
xor
sub
sbb
add
xor
inc
inc
arpl
dec
sub
mov
in
mov
test
adc
popf
xor
mov
push
ja
pop
push
leave
fistp
xor
mov
mov
(bad)
ja
mov
mov
inc
sub
pop
scas
push
mov
mov
add
xchg
daa
gs
dec
push
ds
xor
mov
sti
pushf
rcl
loop
div
ja
xor
sti
fbld
fadd
call
(bad)
es
cs
cmp
xor
pop
sub
pop
lock
daa
add
cmp
loopne
jecxz
std
or
fwait
push
cli
sub
adc
dec
shl
data16
adc
and
(bad)
cmp
gs
hlt
daa
adc
and
dec
jne
ds
fwait
retf
bound
call
outs
aas
dec
pop
ins
dec
mov
cs
ins
sub
dec
mul
mov
pop
sub
(bad)
out
sbb
call
mov
inc
add
push
mov
in
mov
or
adc
popf
lea
fidiv
mov
fs
jmp
mov
scas
ficomp
emms
adc
cmps
mov
(bad)
or
es
cs
adc
cmp
aam
fdivr
int
cmp
iret
dec
js
mov
arpl
cs
popf
sub
cld
add
jmp
inc
pop
push
bound
cs
xchg
xchg
push
sbb
and
pushf
add
fs
xchg
push
cs
(bad)
out
fmul
jno
sahf
rdtsc
mov
int
xor
add
push
popa
outs
xor
inc
out
outs
ret
dec
mov
push
add
enter
mov
or
loop
push
mov
or
ins
lock
inc
fisubr
sbb
push
shr
push
div
dec
test
mov
sbb
pop
outs
fldenv
js
(bad)
sub
fisttp
dec
movs
inc
push
outs
sbb
jae
out
(bad)
mov
xor
jns
sbb
sti
pop
sbb
cs
push
sbb
imul
rcl
cs
outs
out
loopne
xchg
shr
dec
loop
jmp
stos
and
inc
fmulp
dec
(bad)
mov
(bad)
cs
cld
cmps
les
aad
jne
inc
jnp
mov
xor
fstp
stos
cmps
xor
test
cs
or
sbb
(bad)
jno
or
cs
leave
popf
in
js
pushf
adc
test
(bad)
fsubr
fistp
sub
sbb
mov
jae
enter
xchg
arpl
jnp
loope
sbb
loop
shl
mov
xchg
je
mov
cs
jae
lahf
cs
nop
fsubp
or
cs
pop
movs
out
fisttp
inc
adc
mov
mov
cs
lea
stos
test
cs
lahf
retf
inc
cmps
cmp
xor
popf
fisub
jb
cmps
cs
dec
je
push
mov
sub
lds
mov
xchg
sbb
inc
daa
mov
(bad)
push
mov
push
xchg
sbb
enter
mov
cs
inc
push
ret
jns
cs
movs
sub
pop
and
cdq
out
sub
or
in
into
fwait
aam
xor
shl
sar
loopne
aaa
mov
add
xor
and
ds
mov
mov
shl
sbb
iret
test
mov
js
jb
dec
cld
mov
lock
fucomp
adc
(bad)
cli
cmp
out
mov
aam
xchg
adc
dec
jno
mov
xor
push
test
(bad)
push
pop
xchg
fisubr
in
sbb
in
push
das
sub
dec
xlat
sti
aam
fdivr
sub
out
leave
mov
(bad)
ficom
mov
outs
in
sti
push
sbb
adc
fdiv
cmp
push
loopne
xchg
ror
inc
into
push
les
leave
lds
push
xlat
sub
(bad)
adc
mov
dec
pop
or
pop
jne
stos
mov
(bad)
in
scas
dec
mov
int
sub
mov
dec
dec
xchg
and
jp
inc
ror
cs
out
stos
jecxz
sti
ficom
mov
cmps
retf
cmps
in
into
test
mov
xor
in
add
xlat
mov
popa
adc
adc
dec
stos
push
cmp
mov
dec
jmp
and
ins
xor
cs
cmp
sub
ins
add
ret
out
add
mov
rcr
push
lods
scas
cs
in
pop
or
aad
add
cs
inc
mov
pusha
mov
bound
pop
xor
xchg
scas
or
pusha
imul
xor
in
(bad)
jmp
xchg
cs
fsubr
fs
sbb
fsub
pop
and
cmp
js
out
jle
fdivr
jmp
loope
faddp
leave
sbb
ror
clc
test
add
mov
mov
call
aad
pushf
jmp
xchg
retf
xor
idiv
inc
xchg
or
je
jge
es
push
mov
mov
jmp
and
mov
xchg
shl
jg
repz
daa
sti
push
add
jge
out
mov
aas
mov
cs
in
cmp
cmps
pop
xchg
push
daa
jmp
jae
push
jp
pop
sub
fwait
sbb
leave
add
mov
enter
dec
cmps
or
dec
push
and
icebp
clc
xchg
daa
sub
mov
scas
fst
mov
mov
pop
mov
mov
sub
pop
repnz
dec
out
or
stos
aaa
fld
outs
imul
push
test
cmp
push
xchg
pop
ss
mov
mov
outs
arpl
or
int3
add
dec
out
push
jns
mov
gs
and
outs
es
cmp
jmp
fsubr
ds
ins
shl
sub
fcomp
mov
push
sub
push
mov
xor
mov
dec
jmp
add
mov
and
les
stc
add
imul
xchg
inc
(bad)
sub
sti
in
scas
test
js
ds
das
stos
fwait
int
and
jo
mov
out
jne
fs
dec
pop
inc
jae
dec
(bad)
jno
icebp
out
std
daa
fadd
add
cmps
jmp
inc
pop
dec
xor
or
std
adc
sbb
dec
pushf
imul
fidivr
sbb
mov
and
jb
jle
(bad)
out
add
test
add
jae
jne
push
pushf
fisubr
cdq
xor
mov
push
mov
or
js
push
ret
data16
aaa
sub
fcom
sub
jmp
xchg
and
sbb
mov
sub
leave
test
enter
add
xchg
and
xor
mov
xchg
inc
push
dec
cmp
and
pushf
xor
iret
rol
repnz
leave
arpl
xchg
inc
cmp
xor
sub
sbb
cmp
enter
(bad)
xchg
ss
jno
mov
jns
jno
xlat
xchg
and
test
out
fsub
and
inc
nop
in
xchg
xchg
mov
push
xor
jbe
daa
pop
es
add
imul
inc
mov
adc
out
dec
test
sbb
inc
jns
push
mov
adc
adc
xlat
retf
stos
dec
movs
hlt
mov
mov
add
and
ret
dec
or
xchg
jae
cmp
push
ja
aas
outs
into
cmps
ss
dec
cmp
and
imul
push
daa
and
inc
je
out
pop
test
rol
retf
in
push
mov
in
sbb
pop
cs
std
mov
cs
daa
lods
aaa
mov
sub
out
adc
sbb
add
(bad)
push
test
inc
loopne
push
mov
mov
add
dec
cs
ror
cmc
rol
mov
stc
sbb
nop
mov
sti
xor
ffreep
xchg
test
mov
xchg
fimul
mov
cmp
cs
mov
pop
out
pop
aam
adc
xor
(bad)
cld
cs
xlat
or
cs
(bad)
push
imul
movs
call
std
cs
sub
cs
and
dec
rol
imul
push
mov
dec
pop
push
xor
fs
sbb
stc
push
fnop
movs
push
xor
and
iret
mul
mov
and
dec
popf
pop
jle
aaa
aas
lods
pusha
outs
ret
jecxz
mov
push
and
inc
and
stos
fwait
outs
loope
inc
ss
hlt
sub
cs
xchg
adc
fbld
in
mov
cs
std
cld
or
bound
ja
fadd
jmp
cs
shr
mov
or
imul
xchg
and
movs
xor
mov
lods
retf
(bad)
adc
pop
ins
sbb
daa
adc
xor
push
and
cs
int3
bound
sub
ds
loop
mov
jne
sbb
adc
pop
jp
add
mov
push
icebp
push
movs
aad
(bad)
mov
pop
add
push
and
es
(bad)
popa
test
pop
mov
fimul
xchg
dec
mov
mov
mov
scas
std
outs
push
scas
jb
sti
or
fdiv
or
fimul
popf
add
out
cmps
mov
rcl
mov
and
ins
cdq
jne
fs
or
es
outs
sub
pop
sbb
cwde
xlat
daa
mov
jmp
mov
xchg
shl
cli
aaa
cs
out
mov
pop
fdivrp
outs
adc
mov
leave
or
push
mov
cmps
test
mov
xchg
lahf
push
jl
lods
jb
inc
cwde
mov
imul
aaa
cmp
push
into
in
repnz
daa
mov
js
fdivp
fstp
lods
mov
push
stos
or
fabs
cs
div
jl
fisub
add
pusha
mov
(bad)
stos
movs
jmp
push
jle
hlt
cs
cmc
fidiv
pop
xchg
std
cs
push
(bad)
push
add
outs
inc
mov
jb
into
cs
pop
mov
and
mov
daa
jb
push
push
cmp
sub
shr
ret
xor
push
cs
out
jge
push
aas
and
cs
xor
add
outs
mov
cmps
jge
leave
cmp
or
xchg
outs
sti
xchg
test
xor
jecxz
loop
push
gs
aad
add
movs
sbb
mov
outs
xchg
jne
(bad)
xor
ffreep
push
movs
xchg
fcom
cmp
dec
push
fsubr
sahf
or
xchg
mov
scas
sub
cld
jl
retf
xor
xchg
push
mov
xor
xor
stc
dec
dec
cs
retf
lock
pop
fwait
ja
xor
in
push
ret
cs
je
mov
and
(bad)
push
sbb
jns
xchg
sub
mov
xchg
mov
xchg
loope
jmp
pushf
mov
outs
xchg
xchg
adc
sub
data16
(bad)
xor
into
stc
jmp
mov
cs
adc
stos
out
outs
sub
adc
sahf
xchg
mov
rcr
pop
or
into
pop
add
mov
lea
push
xor
ficomp
in
mov
xor
or
sub
cs
mov
movs
loopne
not
push
sbb
sub
bound
adc
imul
mov
movs
jo
pop
ret
mov
inc
fstp
pop
push
sbb
(bad)
bound
push
jb
xlat
aas
xor
enter
imul
inc
jo
xor
mov
test
aad
mov
cmp
hlt
retf
dec
xor
xchg
rol
dec
div
stos
sub
push
xor
(bad)
aaa
inc
pop
(bad)
mov
lods
cdq
dec
mov
pop
sub
shr
cmc
cs
inc
movs
adc
jbe
je
mov
test
xor
dec
ret
retf
mov
(bad)
loopne
add
jle
aaa
enter
sub
xchg
adc
jge
inc
fst
sub
sbb
jb
leave
inc
test
or
mov
or
jp
pop
lods
add
push
fcmovnbe
push
dec
sti
fcom
mov
lods
inc
push
add
mov
or
mov
xlat
adc
mov
stc
xchg
dec
out
xchg
jl
(bad)
cmp
mov
ficomp
dec
adc
aam
adc
push
dec
adc
jo
enter
inc
or
push
popf
add
ins
loope
mov
xchg
xchg
xor
popa
jp
and
cdq
push
xchg
xchg
mov
call
ins
xchg
gs
jl
jp
mov
cs
mov
xchg
push
push
adc
xchg
fisub
sub
jp
popa
and
sub
sub
addr16
fst
or
imul
rol
dec
scas
xor
fwait
stos
icebp
cs
call
xor
pop
outs
xchg
jne
outs
lods
push
jecxz
xchg
aas
or
loopne
push
std
stos
dec
add
ins
into
jmp
(bad)
push
push
sbb
js
repnz
inc
out
xor
inc
mov
jbe
imul
and
xor
adc
in
int
loopne
cs
xor
mov
adc
sbb
repnz
pop
or
pop
push
dec
cs
rcl
inc
scas
jge
data16
cs
cmp
adc
sbb
and
push
sbb
lock
or
ret
stc
cs
jb
sbb
cs
xchg
sahf
sub
daa
sub
add
inc
lea
xor
mov
scas
cmp
or
xor
add
ret
aam
jp
dec
push
jb
pop
sahf
xor
in
dec
jne
cs
stos
sti
mov
mov
cs
mov
push
retf
repnz
add
xchg
mov
pop
(bad)
cmps
inc
xor
jae
push
fld
fwait
repnz
xlat
scas
or
movs
add
(bad)
scas
in
pushf
test
aas
icebp
stc
outs
into
xor
loope
add
xchg
adc
pop
and
push
push
imul
push
cmp
sub
mov
js
dec
xor
inc
adc
mov
cli
cs
adc
xor
jne
and
xchg
dec
push
mov
mov
movs
dec
xchg
push
int3
mov
or
add
xchg
int
in
mov
in
(bad)
or
loope
cmp
shr
cli
sbb
sub
stos
aaa
push
push
inc
inc
sbb
cdq
xchg
pop
hlt
cs
mov
and
sub
test
add
mov
mov
adc
mov
mov
push
and
pop
arpl
mov
push
cmp
sahf
mov
adc
xor
xchg
not
xor
sub
cs
test
fld
js
(bad)
(bad)
lahf
sub
leave
and
sub
add
push
movs
push
and
add
jge
cs
in
shr
hlt
mov
push
movs
sahf
out
movs
push
lea
(bad)
xor
adc
xor
frstor
mov
pop
dec
addr16
daa
cmc
jle
call
adc
or
mov
fadd
push
lea
je
and
jmp
sub
mov
(bad)
xor
add
popa
adc
shl
leave
(bad)
mov
or
push
mov
repz
xchg
aaa
xor
inc
xor
sbb
xchg
xor
cs
es
mov
out
shr
pop
jns
and
xchg
inc
adc
ror
inc
outs
add
cs
jmp
jecxz
xor
xchg
pop
dec
lock
imul
sub
or
and
inc
mov
xchg
fucom
sbb
call
rcr
mov
xor
add
adc
(bad)
cwde
std
sub
jo
jle
scas
shl
inc
cs
or
jae
mov
inc
(bad)
dec
js
fidiv
jae
push
or
cdq
xor
cmp
sahf
mov
mov
push
out
jmp
mov
xchg
lock
inc
cmp
xlat
jmp
xor
xor
jmp
test
cmp
and
or
push
mov
cmc
in
scas
mov
and
sub
aas
adc
jle
cs
inc
adc
std
cmp
(bad)
xchg
daa
inc
sar
cld
adc
or
arpl
push
xor
cs
addr16
leave
sbb
scas
sahf
cs
and
aam
cmovae
int3
cmc
icebp
(bad)
xchg
es
and
das
mov
shr
jnp
jecxz
xor
(bad)
cs
test
and
xchg
stos
cs
das
lahf
add
sbb
cmp
fcomp
ins
cs
stos
dec
mov
fwait
lahf
mov
xor
mov
mov
cs
or
pop
nop
in
adc
xor
mov
mov
mov
daa
xor
outs
sub
mov
cwde
add
mov
adc
push
loope
fucomip
loopne
daa
mov
scas
int
push
dec
jmp
cdq
aas
aam
pushf
push
cs
adc
pusha
pop
daa
iret
test
out
fnstenv
into
push
js
mov
in
fisttp
adc
cs
je
jp
sbb
cs
fs
mov
das
sub
pop
xchg
into
sbb
push
cwde
adc
adc
dec
arpl
push
cli
outs
movs
outs
sbb
addr16
cs
shl
daa
cs
rep
xchg
and
inc
pop
add
cld
add
inc
xor
shl
test
cld
icebp
in
rcr
sbb
cmp
mov
scas
loopne
bound
fisttp
aaa
fcom
cmps
jge
sub
mov
xchg
inc
imul
dec
adc
retf
ds
mov
cmp
cmp
adc
pop
sub
inc
dec
xchg
jbe
inc
adc
scas
push
pusha
cmp
cmp
cs
push
mov
daa
mov
push
jne
or
xor
pop
ja
mov
retf
xchg
movs
pop
mov
stos
mulps
outs
add
aam
ins
cs
sub
mov
xor
mov
cmp
cwde
out
mov
in
adc
xchg
or
cmp
es
xor
push
add
ret
ss
imul
(bad)
imul
inc
movs
mov
mov
bound
jbe
ja
jns
push
test
sub
jmp
mov
push
and
fucom
sbb
xor
ror
mov
mov
push
scas
pop
cmp
and
xor
sub
ret
cli
sahf
push
mov
push
mov
push
push
scas
cs
pusha
rcr
sbb
add
inc
sub
leave
or
jecxz
lock
or
dec
cs
outs
xor
daa
(bad)
test
(bad)
popa
mov
or
and
and
cmp
outs
xor
cs
mov
je
jg
mov
daa
xchg
call
sub
stc
pop
dec
(bad)
je
aas
stos
pop
sbb
cmp
sub
rol
push
mov
push
mov
mov
sahf
push
xchg
jp
lds
aas
add
icebp
mov
dec
mov
xor
mov
pop
idiv
loop
jecxz
pop
lock
retf
adc
dec
cli
fisttp
sub
pop
or
add
add
test
xchg
cmovp
sub
push
or
jno
push
stos
outs
mov
cs
aas
mov
push
aaa
popa
(bad)
bound
dec
ds
or
lds
cmp
loope
xor
mov
gs
fdivr
out
mov
fnstsw
cs
lods
sbb
or
push
add
bound
adc
cmp
and
jp
ja
jb
leave
aaa
(bad)
(bad)
mov
mov
aas
add
mov
pop
pop
std
mov
push
add
call
cmp
adc
jne
dec
mov
popf
sahf
popf
leave
mov
js
add
fucomp
std
test
scas
mov
xchg
mov
das
push
mov
mov
out
std
sub
push
loope
movs
enter
adc
call
or
jae
rcr
mov
cmp
into
mov
and
movs
test
bound
sub
add
cmp
jecxz
aam
das
scas
inc
(bad)
or
shr
jmp
push
stos
ret
ss
inc
xchg
mov
aas
scas
xchg
movs
pop
adc
mov
lods
inc
hlt
or
pop
call
xor
jnp
add
lods
mov
xor
aas
cmps
aaa
fs
into
jmp
jecxz
mov
cs
out
or
dec
mov
mov
mov
sub
add
cmp
aad
jo
mov
cmp
jae
cmps
loop
ror
and
repnz
xor
dec
rcl
jmp
loope
and
out
(bad)
sub
cmp
daa
xor
repz
je
scas
jle
repz
mov
pushf
push
jmp
push
push
fdivr
mov
mov
ja
jo
outs
fmul
(bad)
(bad)
mov
jae
nop
aas
sbb
shl
rol
outs
cdq
in
movs
inc
ins
mov
(bad)
sti
add
and
fs
retf
(bad)
out
xchg
mov
add
xor
js
push
push
aam
push
sbb
pusha
icebp
xchg
or
fst
(bad)
popf
fld
inc
rol
loop
int
out
(bad)
pop
nop
mov
push
(bad)
aaa
xor
and
test
out
mov
popf
retf
mov
mov
xchg
fnstcw
shr
mov
add
jnp
cmp
mov
ror
outs
push
cli
(bad)
(bad)
cs
xchg
sbb
adc
sub
xor
cs
dec
cmp
dec
cs
add
fst
aas
cs
call
mov
repz
int
popa
mov
mov
inc
aas
dec
mov
mov
lods
xchg
fisub
xor
aam
mov
and
ins
loop
cs
ja
sub
lods
arpl
pop
rol
test
mov
xchg
idiv
adc
scas
loope
pminub
adc
sbb
imul
cmps
mov
lea
sti
out
test
shr
and
push
pop
mov
pop
(bad)
pushf
rcr
mov
ret
cmp
pop
cs
adc
cs
sbb
je
aaa
mov
xor
hlt
pop
mov
dec
sar
sub
xchg
shr
fsubr
popf
lods
out
dec
(bad)
mov
add
mov
fcom
adc
sbb
dec
fist
mov
xor
push
push
lds
add
into
inc
sub
or
repnz
push
std
mov
sub
dec
xchg
pop
xchg
cs
gs
aad
aam
sub
xchg
mov
add
or
ret
mov
test
xor
outs
cli
and
or
mov
dec
and
xor
inc
into
push
push
mov
jno
jge
mov
movs
and
xor
mov
pop
and
cs
movs
cli
lock
dec
cwde
and
pop
retf
adc
mov
or
push
cs
adc
pusha
outs
sub
dec
mov
and
inc
mov
cmps
mov
arpl
(bad)
loop
and
int
push
push
or
test
enter
and
mov
mov
popa
and
stc
mov
clc
fdiv
ret
sub
inc
fild
adc
mov
jne
jmp
(bad)
mov
mov
sbb
pop
mov
add
sub
xchg
daa
ins
adc
mov
leave
push
fstp
pop
jbe
pop
je
or
push
push
xor
or
(bad)
(bad)
pushf
jecxz
dec
mov
cmp
lock
or
movsx
bound
fadd
xor
adc
or
cdq
dec
repz
and
leave
jecxz
xchg
inc
and
out
imul
mov
jge
pop
lahf
popa
xchg
movs
test
push
cmp
or
sahf
cmps
and
jge
stos
hlt
cld
addr16
fcmovb
mov
sahf
sub
pusha
enter
mov
lahf
adc
dec
dec
outs
jne
push
xor
leave
(bad)
fiadd
movs
test
mov
and
and
nop
std
outs
xor
in
in
fcomp
xchg
xchg
xor
adc
and
pop
sub
cmc
mov
stos
or
movs
pusha
ror
sub
ficom
jge
xchg
and
outs
es
dec
jb
mov
push
lds
add
adc
and
push
movs
sub
pushf
sbb
jne
loopne
test
push
mov
sub
inc
pop
test
xchg
lock
cwde
jecxz
jl
mov
dec
inc
add
xchg
ins
into
sub
jge
outs
push
sub
outs
jno
shl
sub
xor
mov
(bad)
mov
xchg
xchg
fidiv
jmp
jle
out
mov
daa
call
not
inc
xor
les
pop
scas
sub
xchg
adc
adc
lds
fadd
sub
and
les
sbb
lock
aam
outs
mov
inc
arpl
mov
test
inc
jge
xchg
cmp
xor
mov
dec
leave
mov
icebp
or
out
sub
stos
xlat
push
loope
add
ret
(bad)
push
sub
loopne
push
xor
xor
arpl
sub
lea
loope
mov
pop
scas
pop
clc
pop
daa
sub
cmp
add
outs
jbe
inc
or
sub
sub
cmp
push
xchg
mov
ficom
fimul
sbb
jg
mov
test
xchg
mov
jmp
scas
stos
lock
jge
popa
pop
mov
xchg
outs
ds
jbe
and
adc
loope
cs
adc
xor
jns
ror
mov
mov
add
cld
add
rcl
loop
arpl
in
mov
mov
xor
fst
aas
das
and
arpl
jge
xchg
scas
aaa
dec
add
cs
in
out
cld
jmp
ins
jmp
cmp
movs
adc
js
inc
dec
sbb
out
mov
repz
fptan
pop
mov
and
shl
push
icebp
call
fdiv
call
and
push
stos
fs
jbe
iret
(bad)
fbld
push
mov
sub
xlat
jo
in
pusha
push
mov
popf
out
les
cs
scas
fiadd
test
icebp
pop
cmp
dec
push
loop
aam
sub
into
jne
mov
or
mov
lds
(bad)
sub
iret
ror
cmps
cmp
stc
mov
mov
add
mov
fld
movs
mov
dec
pop
popf
inc
xchg
test
out
mov
cs
(bad)
pop
sti
fisubr
add
cs
leave
test
cs
or
es
jge
jnp
xlat
scas
cmp
into
add
and
pop
push
pusha
cmps
cs
(bad)
xor
scas
inc
mov
test
cld
sti
out
mov
push
jmp
sbb
xor
xor
mov
shr
pop
loop
scas
cs
xor
xchg
add
mov
rol
ins
mov
or
pop
jno
imul
push
outs
mov
inc
adc
or
push
pusha
cs
adc
arpl
loop
pop
adc
(bad)
fstp
call
sbb
bound
sub
aam
fs
popa
push
repnz
adc
cwde
xchg
ret
cs
xchg
push
cs
dec
lds
cs
div
(bad)
cs
push
scas
inc
add
or
add
add
cmp
enter
inc
mov
cs
stc
shl
call
scas
xor
xchg
ja
jmp
jno
inc
sbb
or
neg
and
in
xchg
das
mov
mov
aas
cmps
xchg
sahf
lods
lock
(bad)
sahf
jle
add
mov
out
in
sub
jg
clc
cld
dec
xchg
test
mov
call
cmp
loopne
dec
xchg
out
xchg
mov
test
ss
ret
adc
inc
xor
and
outs
movs
loope
sub
mov
sbb
outs
je
xor
pop
mov
rol
stc
cmp
mov
call
and
sub
out
mov
inc
shl
mov
dec
fisubr
sbb
pop
loopne
repz
into
mov
cmp
or
pop
cs
js
int
mov
fld
dec
cs
add
xchg
out
dec
mul
(bad)
fstp
out
fdivr
shl
sbb
out
mov
xchg
cs
and
and
xchg
out
mov
xor
arpl
push
push
push
pop
into
jbe
pusha
add
cmp
fldenv
stos
xchg
je
mov
(bad)
sub
out
push
cmps
cs
call
shl
or
dec
test
cs
lds
mov
std
mov
xor
xchg
mov
ins
shl
ss
mov
adc
arpl
or
xor
(bad)
xor
push
sbb
push
jnp
aam
push
adc
or
(bad)
fucom
dec
div
leave
data16
pop
imul
jns
lfs
repz
push
xchg
int3
cs
inc
inc
adc
in
mov
enter
push
fucomp
xor
jnp
adc
mov
in
aas
js
jo
and
retf
add
ret
sub
scas
pop
dec
or
pop
cmp
scas
xlat
lahf
test
mov
fisttp
push
or
mov
daa
sbb
sahf
lds
sub
add
sahf
mov
sbb
and
stos
shl
jle
mov
cs
mov
sbb
cmc
out
stos
mov
pop
icebp
cs
jo
movs
test
and
pop
xchg
cmp
xor
or
add
mov
jecxz
cmp
ror
sbb
(bad)
xor
jne
and
inc
or
xor
lahf
call
inc
inc
and
and
xlat
xchg
dec
mov
lods
and
lds
push
push
jo
in
xchg
cmps
and
mov
jns
das
xor
pop
sbb
pop
sbb
dec
scas
cs
jae
fdivr
xor
enter
mov
xchg
(bad)
jns
aas
lds
hlt
out
aaa
cmp
pop
add
leave
mov
mov
call
pushf
xor
add
cs
daa
cmp
or
dec
dec
stos
(bad)
jmp
mov
add
jns
add
sub
mov
push
xor
in
and
add
aas
sbb
cli
xor
push
dec
mov
jnp
add
test
cli
cwde
cs
lahf
xor
mov
mov
jne
dec
sub
xlat
jmp
or
fld
(bad)
out
fdivr
cmp
ret
mov
xchg
fisttp
stc
bound
add
mov
xor
pop
outs
pop
dec
gs
fwait
dec
push
or
jl
mov
sub
xor
jp
cmp
icebp
jmp
sahf
push
out
into
ins
in
xchg
adc
or
gs
or
dec
stos
cs
pusha
fcmovbe
call
iret
lds
(bad)
cld
bound
dec
ret
push
cs
inc
mov
jecxz
shr
out
aad
mov
adc
popw
mov
cmc
outs
sub
pop
adc
sub
adc
jae
out
gs
lds
(bad)
pushf
push
cmp
mov
rcl
adc
jno
cs
int3
aas
and
mov
adc
call
retf
int
adc
push
pop
mov
out
mov
or
xor
jbe
retf
or
or
nop
cs
jo
xor
leave
adc
cmp
xor
sar
sub
cs
popa
and
je
xchg
js
cs
ret
mov
jae
push
and
aaa
daa
push
pushf
pop
mov
mov
retf
cmp
jmp
(bad)
mov
push
or
scas
pushf
jbe
out
cmps
push
xor
mov
inc
add
adc
ins
jmp
and
out
push
stos
jmp
jns
push
cli
ret
and
fdivr
(bad)
add
gs
xchg
data16
ret
ficom
sub
xor
mov
mov
stos
loop
outs
or
sub
mov
in
lahf
fistp
iret
pop
ror
pop
out
dec
fwait
pop
imul
push
xor
cs
sar
cmp
push
xor
jle
sub
pop
mov
icebp
and
xchg
adc
dec
ror
or
dec
add
jp
fs
cs
jl
jae
mov
cld
pop
ja
inc
scas
adc
sub
lea
neg
cmps
aaa
ret
and
shr
gs
mov
mov
scas
loop
ins
xchg
lds
cld
int3
mov
jmp
mov
jns
mov
aam
inc
mov
push
xor
push
cmp
inc
popa
xor
popf
xchg
aam
mov
aaa
les
outs
call
retf
fcom
mov
add
dec
sub
sub
movs
xchg
rol
into
imul
adc
lahf
lea
out
movs
mov
(bad)
retf
xor
xor
lock
add
mov
cmp
repz
in
sbb
jmp
sub
test
dec
cmps
(bad)
push
scas
xlat
adc
outs
int
fxch
in
shr
inc
arpl
(bad)
push
xor
into
daa
pop
popa
scas
scas
ins
inc
stos
fsubr
cs
pop
sar
xor
adc
jne
dec
mov
sub
jns
daa
test
into
loope
jb
pop
push
fisubr
add
pop
sub
retf
push
out
lahf
jns
imul
fdivr
sbb
ret
out
mov
inc
adc
inc
enter
std
mov
int
stos
ret
fisttp
cmp
mov
add
retf
pop
or
inc
inc
push
adc
dec
adc
(bad)
cs
and
ror
scas
sub
xchg
mov
cmc
sbb
neg
retf
out
cmp
or
or
adc
sbb
xchg
outs
inc
and
ror
js
mov
sub
(bad)
mov
(bad)
jle
ret
leave
iret
and
scas
push
sub
sub
pop
push
inc
xchg
mov
cmps
cmp
and
mov
and
xor
out
(bad)
inc
xor
xchg
push
aaa
int3
retf
imul
ins
or
push
fcomp
cs
mov
es
cmp
inc
leave
dec
xor
push
sahf
fdivp
mov
stos
jne
(bad)
sub
push
cmp
and
ins
push
jno
pushf
or
jle
clc
sub
pop
(bad)
push
aas
in
out
pop
xchg
xchg
inc
in
dec
lahf
jmp
das
sub
movs
dec
xor
adc
lods
jge
push
mov
cmp
push
sub
loope
sub
fisubr
push
ins
bound
jge
cs
and
mov
cmps
clc
dec
jl
mov
xchg
add
mov
push
sbb
inc
test
mov
dec
cmps
hlt
in
rol
dec
call
leave
js
outs
adc
iret
or
pusha
ja
mov
das
sub
neg
lock
ror
sub
mov
add
xchg
shl
pop
pop
sub
popf
ficom
fidivr
inc
xor
jle
leavew
cmp
sub
and
test
cmp
xor
dec
push
add
push
and
cmp
ss
add
(bad)
popa
sub
sub
test
call
xor
cdq
ret
sti
pop
outs
into
jge
cs
mov
xor
add
mov
and
faddp
xor
daa
not
add
iret
movs
mov
lds
xor
aam
imul
and
test
sub
add
enter
jg
lods
scas
push
inc
inc
xlat
cs
dec
push
leave
cs
dec
or
mov
test
xchg
xchg
adc
cmp
jo
pusha
ret
push
shr
(bad)
jns
stc
xor
push
bsf
scas
push
clc
stos
(bad)
mov
call
aaa
addr16
int
mov
xor
cld
in
test
aas
sub
add
scas
iret
not
dec
push
add
mov
sub
(bad)
out
jnp
inc
pop
cs
leave
sbb
sub
jb
xor
mov
mov
adc
addr16
fimul
cld
stos
cmp
dec
cs
adc
dec
adc
push
and
pop
fsub
outs
pop
inc
cs
stc
mov
fadd
xor
movs
xchg
sar
je
aas
sbb
retf
cmc
out
outs
mov
and
inc
add
arpl
cs
sub
addr16
test
add
fiadd
cmp
imul
(bad)
popa
icebp
sub
in
or
(bad)
pop
cmps
mov
fisubr
xor
push
xor
fist
shl
fist
scas
pop
sub
pop
inc
(bad)
cs
jo
and
ror
cli
jno
and
inc
mov
rol
xor
fcom
gs
out
(bad)
mov
or
xchg
xchg
mov
les
cs
ret
push
pop
adc
mov
mov
loop
cmp
stos
iret
fild
pop
add
mov
jne
call
sbb
xor
std
adc
fs
es
cmp
fucomi
rcr
(bad)
stos
sub
mov
loopne
push
add
dec
cmp
fimul
hlt
sbb
sub
rcl
into
repz
inc
mov
xchg
xor
pop
fisubr
pop
lahf
rcr
and
pop
pop
pop
dec
jge
popa
adc
cs
sbb
sub
mov
pusha
cmp
(bad)
inc
xor
je
scas
xor
jnp
jg
sub
fcmovu
in
stos
add
cs
clc
and
or
cmps
imul
out
out
adc
mov
call
cs
sti
test
pop
nop
sub
loope
lahf
outs
movs
lock
cs
jne
or
frstor
cs
adc
xor
lods
rcl
ror
add
push
adc
data16
xor
fs
mov
cs
adc
add
jge
mov
popf
(bad)
shl
adc
inc
mov
into
or
ja
dec
or
push
and
rol
cs
(bad)
mov
pop
pusha
imul
dec
dec
jne
ins
adc
dec
cs
push
out
(bad)
cmps
ss
cs
hlt
mov
call
and
lea
out
nop
or
in
adc
push
ret
psadbw
repnz
cs
(bad)
mov
fidiv
cs
pop
outs
pushf
ins
xchg
or
repz
pop
int3
mov
xchg
shl
xor
cmps
push
out
scas
iret
cli
test
mov
cmp
pop
gs
adc
xchg
scas
sub
or
jae
xor
xor
retf
cmp
pop
scas
xchg
aas
jno
dec
cs
cdq
popf
fwait
and
pusha
dec
sbb
aaa
fiadd
cmp
mov
stc
fisub
es
mov
out
ins
jnp
cs
ins
bound
add
dec
ret
(bad)
mov
scas
fs
sti
stos
icebp
stc
mov
sub
outs
add
xchg
sub
push
movs
sub
xchg
jle
xchg
in
sahf
dec
cs
sub
ror
shr
das
(bad)
cli
in
ret
jg
daa
mov
mov
call
test
cwde
add
jo
sar
and
idiv
add
retf
ja
xchg
popf
jne
mov
cmp
loop
adc
cld
sbb
shr
sub
cli
div
outs
mov
rol
outs
and
test
xchg
fldenv
(bad)
mov
mov
stos
jmp
jo
js
popf
retf
sbb
xor
xchg
dec
rcl
rol
in
mov
jbe
leave
fs
inc
inc
jbe
dec
add
cmp
shr
aam
cmps
lahf
jnp
mov
or
mov
(bad)
jle
adc
ss
sbb
sbb
movs
sub
je
xchg
sub
xor
mov
mov
sbb
(bad)
or
out
sub
fstp
scas
mov
and
jns
aas
lahf
rol
stc
test
shl
dec
xlat
fs
nop
and
loop
jmp
shl
mov
rcr
es
mov
add
add
adc
dec
push
cs
bound
je
rcl
cs
test
pop
adc
sbb
add
inc
jnp
cmp
jmp
dec
sub
in
or
mov
hlt
and
and
or
cs
test
mov
cs
inc
and
pop
lds
cs
xchg
mov
in
gs
nop
loope
dec
xor
xchg
sub
sbb
sbb
movs
or
xor
mov
sub
pop
test
aaa
nop
rol
test
cs
outs
mov
sub
retw
fcomp
lock
aad
adc
mov
pmaddwd
push
in
mov
iret
mov
or
cmp
jb
cmp
jecxz
cs
add
outs
dec
cmp
cld
aam
in
cs
mov
pop
loopne
push
rcl
stc
mov
loopne
cs
push
lods
(bad)
jbe
inc
test
add
and
fmul
into
mov
cmps
pop
push
push
and
adc
(bad)
out
cs
pop
mov
xchg
push
add
loope
sub
repz
test
js
mov
xchg
test
and
add
mov
je
loopne
test
mov
add
sbb
cmps
adc
dec
leave
push
add
lds
inc
or
jo
scas
push
ss
or
inc
xchg
(bad)
xor
push
add
xchg
call
mov
sub
ror
inc
out
loop
mov
xor
outs
adc
jb
aaa
ins
aad
daa
mov
addr16
cwde
fdiv
fisubr
xchg
mov
popa
pop
pop
xor
push
lods
pop
pop
dec
jle
cs
sbb
or
(bad)
add
in
(bad)
sahf
fwait
movs
push
out
xor
adc
jge
ror
in
out
popa
dec
dec
out
stos
mov
inc
cs
inc
add
push
shl
je
mov
mov
rol
loop
icebp
pop
mov
sbb
sbb
out
leave
pop
pop
daa
mov
fiadd
aam
mov
scas
loop
ror
idiv
les
jmp
test
mov
adc
std
mov
es
fimul
cli
sub
popf
int
rcl
xchg
pop
cs
gs
call
mov
imul
and
aad
scas
mov
xor
ficom
loop
outs
movs
adc
sbb
push
lds
mov
cmp
xchg
or
stos
mov
add
scas
stos
(bad)
mov
lea
cmps
fwait
ror
inc
cmp
out
cs
dec
fdiv
iret
xor
and
loope
rep
mov
jmp
shr
dec
inc
sbb
jmp
jge
push
fdiv
mov
xor
or
jo
cs
(bad)
jnp
retf
sub
movs
cmc
sahf
adc
xor
jl
pop
jl
repz
aas
fdiv
daa
loopne
mov
mov
lock
mov
adc
pusha
cmp
retf
int3
dec
sbb
or
xor
pop
add
sub
mov
add
pop
mov
cmc
shl
mov
cmps
enter
test
jo
jns
hlt
les
push
cmp
or
movs
sub
mov
cs
(bad)
hlt
mov
push
cmp
in
mov
pop
and
push
cmp
shr
lea
jge
cs
or
pop
push
ret
daa
dec
cld
and
repz
add
cs
rcl
rcr
(bad)
push
cmc
jo
cs
pop
inc
inc
sar
inc
pop
push
out
adc
leave
cdq
faddp
idiv
test
mov
cs
or
sub
popf
call
jno
sbb
aad
pop
jl
shr
push
ss
and
das
xchg
fwait
aad
cs
je
and
stc
add
aaa
mov
push
sbb
cmps
lock
shr
outs
mov
sbb
add
mov
mov
sbb
pop
fwait
mov
or
lods
test
aaa
aam
test
fstp
stos
enter
adc
ret
jge
sub
stc
pop
and
jle
pop
xchg
dec
and
adc
lods
ror
test
xor
dec
pavgb
shl
xchg
mov
popf
mov
ret
xor
dec
(bad)
xor
jmp
jae
gs
jb
pop
int
retf
xchg
push
push
lea
push
xchg
and
dec
jecxz
jge
or
add
jbe
cmp
pushf
mul
leave
sub
stos
and
and
sbb
ret
repnz
(bad)
jbe
push
aas
stos
pop
retf
fdiv
jbe
jno
retf
fadd
fimul
mov
inc
cwde
cmp
mov
leave
push
shr
mov
add
jp
arpl
in
push
cmp
or
(bad)
repnz
xor
jle
dec
inc
inc
mov
std
push
loope
cs
inc
jp
cmp
adc
cwde
pop
das
mov
pop
imul
and
jo
fcomp
cmps
test
(bad)
fisub
shr
mov
add
pavgb
mov
add
add
xlat
cs
pop
sub
leave
es
cs
jge
and
cs
sbb
inc
dec
fistp
mov
jl
jo
aad
call
xor
pop
(bad)
mov
xchg
cs
pop
fs
mov
inc
cs
jbe
iret
mov
cs
pop
sbb
xchg
outs
pop
imul
jecxz
sub
cmp
sahf
into
enter
mov
frndint
sbb
je
add
jo
push
scas
jle
xor
xor
aaa
dec
pop
retf
out
push
inc
test
(bad)
(bad)
repnz
dec
adc
int
cwde
sbb
sbb
rcl
xor
xlat
cwde
cs
retf
pushf
pop
pop
and
clc
push
inc
in
into
lds
xor
dec
xor
ffree
add
xchg
ret
scas
add
push
pop
dec
adc
arpl
jbe
mov
out
mov
pop
lds
add
inc
add
and
add
jle
add
mov
shr
push
dec
cmp
aam
xchg
jecxz
(bad)
push
dec
inc
and
xor
push
fcomp
pusha
pop
or
push
jmp
add
dec
(bad)
aad
mov
adc
es
sbb
or
in
mov
dec
sub
pushf
sti
(bad)
int3
fmul
loop
je
inc
adc
sub
mov
cld
mov
shr
mov
pop
jno
ds
or
nop
mov
popa
sub
sahf
dec
ins
cmp
inc
jae
mov
pop
or
sti
cmps
add
mov
push
xor
jecxz
mov
and
dec
or
lds
push
xchg
ins
jmp
mov
sub
test
cmc
or
fnstenv
out
gs
ins
call
or
cmp
scas
or
fwait
mov
daa
scas
cmps
sbb
mov
and
sub
xchg
imul
cmps
lahf
xchg
dec
sbb
cmp
push
into
in
pop
cs
ja
cli
mov
gs
mov
cmp
arpl
adc
daa
and
into
jae
int
or
xchg
call
mov
sub
sub
nop
cmp
dec
lss
jno
push
mov
xchg
mov
and
and
add
push
(bad)
fsubr
cs
test
pop
pop
dec
movs
retf
es
dec
sub
rol
aad
aaa
sbb
jnp
adc
hlt
les
mov
jne
pop
aas
jg
mov
fwait
dec
cmp
cmp
push
ret
mov
push
add
or
pop
dec
in
adc
test
jmp
lea
cs
popa
adc
stos
fwait
mov
sub
int
jae
and
cs
in
jo
(bad)
mov
jb
(bad)
sbb
xor
nop
xlat
int3
test
mov
xor
(bad)
cmc
shl
(bad)
stc
sbb
aad
adc
das
xchg
test
(bad)
into
mov
mov
iret
push
dec
cs
ror
and
and
test
(bad)
repz
mov
fdiv
cs
push
adc
das
pusha
cs
or
push
jge
aas
(bad)
xchg
retf
iret
cmp
inc
outs
dec
scas
cmp
pop
push
push
adc
cs
icebp
mov
imul
out
push
cmp
xlat
dec
sub
icebp
adc
add
jl
xchg
xchg
mov
inc
or
mov
add
ja
pop
push
bound
push
and
mov
xor
or
mov
jp
fs
fdivr
xchg
mov
fcomp
adc
xchg
and
mov
outs
mov
pusha
cs
mov
lock
mov
sbb
das
retf
dec
mov
sub
mov
bound
icebp
ficomp
pushf
cmps
test
or
cs
mov
retf
inc
mov
sub
clc
jnp
(bad)
nop
sti
out
sbb
cs
jmp
imul
sub
adc
iret
repz
mov
fadd
scas
cs
ret
gs
aas
mov
mov
xchg
(bad)
les
ds
into
cs
inc
iret
cli
fbld
aas
pop
fadd
inc
or
cs
mov
movs
cs
stc
cmp
bound
retf
mov
lea
pusha
test
mov
aad
push
jecxz
pop
cs
lahf
test
test
or
test
and
(bad)
dec
gs
mov
pop
xchg
dec
mov
outs
inc
mov
(bad)
loop
sbb
push
lock
je
repnz
sahf
aad
imul
mov
call
push
add
mov
xchg
mov
dec
retf
dec
cdq
loopne
xor
outs
cs
dec
in
adc
sbb
rcr
mov
mov
out
mov
cs
jb
xor
mov
xchg
cs
hlt
jle
vminsd
xchg
inc
jns
xchg
cwde
mov
fmul
imul
push
daa
hlt
push
or
scas
cld
mov
mov
fisttp
sbb
xchg
hlt
fcmove
inc
adc
cmps
xor
mov
das
cs
xor
into
aad
or
add
xor
jne
pop
push
sub
jmp
dec
sub
out
pushf
addr16
frstor
cmps
jp
fs
cmps
mov
xchg
mov
in
and
inc
outs
inc
adc
hlt
loope
cmc
es
xor
and
ja
cmp
xor
cmp
add
xor
shl
stc
cmp
or
xor
je
add
sub
mov
out
int3
outs
jnp
retf
in
or
mov
lods
sub
fisub
mov
leave
test
sbb
fs
or
push
push
(bad)
xchg
shr
sub
das
sbb
fsubr
into
div
add
cmp
(bad)
out
(bad)
mov
cs
push
inc
lods
or
jno
sbb
daa
pop
loope
(bad)
fnstenv
jmp
inc
mov
xchg
shl
out
stc
cmp
sub
cmps
out
pop
repz
mov
inc
in
push
push
push
and
fisub
jmp
and
dec
int
(bad)
cmc
popa
fs
sub
cmp
adc
nop
jns
mov
pop
mov
ret
jmp
enter
mov
xor
xchg
mov
ret
jmp
cmp
xchg
dec
mov
out
mov
int
sub
pop
and
pop
jne
cmps
test
imul
and
xchg
dec
popf
cs
ret
(bad)
in
jnp
call
jmp
push
and
(bad)
cs
sbb
int3
sbb
xchg
or
mov
sub
mov
jnp
or
add
test
pop
lods
xchg
mov
jnp
fnstenv
add
and
pop
cs
mov
sub
(bad)
fdivr
dec
dec
lods
in
das
pop
dec
xchg
outs
adc
sub
dec
or
mov
cmp
sub
cs
jns
mov
sbb
bound
dec
xchg
cmp
xchg
cs
popf
fnstsw
in
rcr
scas
dec
mov
stos
bnd
jmp
test
mov
adc
bound
test
(bad)
stc
pop
push
sub
inc
(bad)
div
out
dec
add
hlt
pop
push
xor
jge
pop
dec
out
lods
pop
push
pop
sub
iret
leave
push
add
daa
clc
jne
movs
mov
sbb
popa
inc
cs
out
cmp
scas
cs
push
mov
add
mov
dec
aas
inc
dec
push
sbb
les
cmps
jecxz
add
lahf
jg
mov
daa
div
scas
xchg
loope
cmps
(bad)
(bad)
jmp
movs
shl
jbe
ror
pop
clc
adc
mov
cwde
and
bound
nop
xchg
push
mov
shl
mov
add
cli
jns
inc
push
(bad)
iret
cmps
inc
leave
xor
sbb
mov
aas
nop
rol
cdq
mov
iret
fidivr
mov
xchg
daa
aas
cld
xchg
mov
add
fdiv
shr
adc
or
jp
add
clc
cs
sub
scas
add
(bad)
lods
cld
mov
test
xchg
jnp
xor
and
icebp
aaa
daa
arpl
pop
and
cs
rcr
lahf
mov
cs
pop
in
or
cmp
adc
imul
imul
and
sbb
and
pop
mov
xchg
int3
lods
movs
test
hlt
mov
rcl
add
sub
sar
pop
xor
push
pop
inc
imul
stc
or
mov
sbb
out
and
cs
pop
into
ret
std
add
sub
es
xchg
and
cdq
adc
cs
fdiv
sbb
sub
cmp
jmp
push
or
sbb
xchg
cs
push
jno
fidiv
jecxz
mov
fcom
pop
cmp
add
pusha
xchg
push
xor
add
add
sub
jge
mov
fistp
dec
push
rol
mov
leave
mov
out
sbb
xchg
add
adc
sub
inc
pop
push
jne
adc
lahf
cld
adc
lock
pop
xchg
cmp
ins
cli
xchg
scas
mov
push
aam
(bad)
fsub
popf
push
clc
pop
cmp
leave
scas
scas
push
inc
jo
add
pop
mov
pop
out
pop
mov
xor
jno
push
inc
daa
loopne
nop
scas
je
sub
and
mov
adc
inc
sbb
(bad)
mov
push
pop
ins
push
icebp
xchg
cmp
xor
fldcw
ss
(bad)
and
call
xor
(bad)
rcr
int3
inc
(bad)
fild
xor
aas
jecxz
pushf
pop
in
sub
ret
and
lahf
(bad)
aam
(bad)
and
pop
and
dec
lods
int3
mov
xor
test
int3
ror
add
lods
lods
popa
xor
sbb
mov
cwde
mov
jle
pop
mov
icebp
(bad)
test
pop
shr
ret
add
fisttp
mov
mov
and
or
iret
aam
jmp
imul
mov
fbld
xor
push
dec
enterw
lahf
mov
in
lock
cmp
adc
mov
fprem1
jo
jge
stc
xchg
fld
dec
adc
xor
js
stos
sar
out
arpl
push
and
inc
xchg
scas
cmps
lds
jno
jmp
push
mov
stc
inc
cmp
(bad)
dec
popa
and
(bad)
jmp
push
jle
jae
in
hlt
stos
sub
lock
out
stos
lahf
jle
sub
ja
bound
pop
sub
inc
repz
ret
sub
leave
jno
jmp
imul
arpl
dec
push
outs
leave
out
sub
leave
(bad)
and
ds
es
neg
ss
adc
aas
pushf
pop
or
jmp
adc
dec
out
mov
adc
push
int
or
imul
pop
rol
pop
bound
test
rcr
jg
jne
fisttp
clc
pop
dec
pop
repz
and
mov
imul
aam
add
(bad)
mov
aas
jge
mov
(bad)
pop
clc
not
(bad)
out
std
icebp
mov
data16
je
xchg
sub
fsub
neg
jae
xor
cmp
and
pop
pop
imul
dec
or
and
push
dec
imul
xor
jmp
sub
outs
push
cs
xchg
add
mov
mov
push
jbe
cmp
mov
aam
jmp
lock
xchg
xor
inc
dec
pop
or
js
scas
mov
adc
frstor
shl
daa
icebp
shl
repz
jg
test
dec
out
cs
mov
mov
(bad)
int3
push
hlt
div
packsswb
push
and
fcomp
pop
scas
and
dec
inc
mov
lods
mov
adc
ins
inc
je
xor
ins
lahf
mov
fistp
loopne
mov
push
out
pop
mov
ret
xchg
fmul
mov
cs
mov
es
loopne
xor
out
add
jl
or
addr16
pop
xchg
cs
xchg
rcr
mov
retf
jbe
jne
or
xor
fs
cmp
cli
hlt
mov
daa
or
jmp
into
cs
(bad)
dec
outs
ror
mov
stos
and
add
retf
mov
cs
inc
pop
fsubr
in
movs
cmc
cs
sbb
adc
add
popf
aad
adc
inc
sub
mov
div
mov
pop
sbb
arpl
dec
push
into
inc
fnstcw
pop
fld
loope
test
movs
out
repnz
mov
inc
jl
imul
sub
aas
(bad)
cmp
sub
fisttp
dec
or
adc
or
dec
or
div
mov
mov
imul
sub
inc
sbb
repnz
xor
arpl
arpl
retf
ret
into
jo
aam
cs
aas
jno
mov
xor
mov
mov
mov
pop
sbb
mov
add
call
lods
les
pop
outs
movs
pop
cs
sub
pushf
aad
add
sub
fs
cmp
pop
mul
sbb
ins
sub
daa
jno
or
jae
add
push
ins
xor
ror
sub
ja
or
sub
pop
jae
test
inc
sbb
stc
sahf
mov
or
pop
(bad)
cs
stos
loopne
cs
arpl
add
pop
mov
sti
ret
cs
dec
iret
ret
call
movs
out
sub
sar
inc
dec
pop
stos
adc
jmp
(bad)
or
aas
pop
rol
jne
cs
aam
lahf
dec
imul
repnz
lods
jmp
(bad)
clc
xor
dec
popf
pop
add
or
das
es
add
xlat
sbb
jg
stos
ds
push
outs
push
or
loop
mov
mov
es
adc
les
pop
push
cmp
sbb
xchg
stos
xor
in
add
add
pop
sbb
nop
cwde
push
dec
mov
mov
dec
inc
cs
inc
jo
int3
cmp
mov
imul
sbb
dec
sub
dec
add
daa
(bad)
div
out
mov
scas
loopne
push
jae
repnz
xor
nop
cs
arpl
pop
aad
ficom
push
cli
sub
scas
cdq
(bad)
mov
popf
cld
jnp
push
fld
cs
add
push
add
dec
sub
scas
inc
push
shr
push
sbb
int3
adc
cmps
scas
mov
mov
aaa
mov
adc
mov
mov
sub
dec
test
aas
fucom
mov
outs
sub
and
movs
call
and
popf
cmp
mov
push
jo
xchg
jge
xor
adc
pop
cmps
add
out
mov
sti
enter
sub
(bad)
mov
and
pop
(bad)
inc
and
ss
ds
xor
std
xlat
(bad)
sub
out
icebp
(bad)
xchg
fs
out
int3
leave
sbb
out
and
jmp
mov
out
rcr
test
nop
xchg
(bad)
fmul
jp
push
(bad)
push
sti
nop
sar
dec
div
mov
mov
jbe
inc
mov
out
std
retf
je
stc
scas
add
retf
dec
xchg
push
cmp
xchg
mov
mov
ss
inc
sbb
dec
jo
add
stos
jmp
aaa
aad
mov
fld
xor
stos
aas
sar
dec
mov
mov
add
xchg
leave
data16
aam
pop
jmp
sar
lods
sbb
lahf
mov
xor
shr
test
stc
push
xor
bound
jl
pop
sti
fbstp
jle
push
inc
loopne
int3
fcom
sub
and
xor
sti
cmp
mov
(bad)
fwait
and
mov
push
xchg
dec
xor
push
jnp
and
or
ret
mov
stos
ins
icebp
jl
sub
ret
or
dec
repnz
mov
add
inc
mov
jnp
jge
mov
sub
fadd
mov
cs
aas
mov
jle
push
sub
dec
or
dec
sbb
mov
add
mov
scas
loopne
ror
push
call
push
xor
mov
jbe
pop
sbb
mov
stos
adc
jbe
lock
pop
add
xchg
ja
shr
and
and
cmp
iret
test
(bad)
fist
inc
shl
jno
cmp
xor
add
dec
sub
jmp
push
(bad)
push
ret
inc
fdivr
jle
xor
mov
ret
dec
pop
add
xor
test
mov
sar
xor
movs
gs
jp
fistp
imul
inc
sub
inc
aaa
pcmpgtb
ja
fbstp
adc
arpl
loopne
mov
pop
xchg
out
fidiv
pop
push
imul
jg
xchg
ret
xor
dec
or
je
imul
push
push
pop
push
pop
cmps
push
xor
sub
pop
push
shr
sub
cs
sti
test
bound
lahf
and
repz
fld
into
outs
xor
shl
and
dec
test
into
imul
cmp
adc
outs
lods
into
mov
jnp
jns
mov
and
cwde
adc
repnz
rcr
pop
push
not
repz
cs
xor
cli
pop
bound
shl
dec
push
inc
les
inc
or
ds
add
mov
jo
repnz
into
push
scas
les
inc
mov
outs
fcmovnbe
xor
jns
cs
or
dec
xor
movs
and
les
and
sbb
push
clc
jb
jne
adc
les
pop
dec
mov
ja
dec
jle
sti
pop
adc
xor
mov
outs
fisubr
call
xchg
xchg
mov
cld
aas
inc
jg
out
into
sbb
(bad)
dec
cs
je
retf
das
mov
xchg
les
es
cs
push
nop
jmp
test
out
cli
hlt
stc
les
ret
addr16
pop
push
cs
clc
add
fs
fmul
cs
jl
shl
jae
cs
push
dec
popa
loope
cmp
dec
xchg
addr16
cs
mov
adc
jle
ret
cmp
dec
pop
jg
push
sahf
rcr
ja
fld
pop
jle
pusha
fucomp
test
sub
fs
mov
mov
and
push
mov
jl
cs
cmps
icebp
cli
cs
das
xchg
fild
stos
pop
orps
in
xchg
imul
and
fdiv
(bad)
leave
mov
into
int
(bad)
sbb
jmp
jnp
movs
or
jns
fisubr
sub
inc
add
push
jmp
(bad)
std
int
lea
pop
sbb
mov
push
or
test
xor
addr16
icebp
mov
xor
pop
ins
pop
sub
inc
das
sub
push
sti
test
ficom
add
mov
mov
shr
push
repz
push
jp
inc
rcl
test
(bad)
es
in
cmp
outs
jmp
inc
rcl
bound
mov
fcmovu
inc
sub
not
enter
das
retf
xchg
jns
lods
adc
imul
sbb
cmps
add
pop
int3
push
fsubrp
cmp
nop
bound
dec
es
ss
pusha
cs
cmps
pop
lods
pop
aas
ds
xor
jns
pop
or
push
mov
or
pop
adc
mov
adc
ss
mov
aas
xchg
push
aas
cli
sbb
cs
lahf
test
mov
xor
inc
cs
(bad)
jnp
mov
add
(bad)
sahf
movs
cmpps
sub
movs
outs
sub
stos
loop
shl
sbb
or
pop
(bad)
or
mov
pop
cs
mov
ret
mov
cs
push
sub
pusha
and
xchg
xchg
rcr
(bad)
inc
sub
jne
iret
lods
mov
sub
ins
scas
cmp
push
push
cs
add
pop
inc
sbb
cs
fwait
jmp
cs
retf
inc
xor
sub
adc
sbb
jb
stos
mov
sahf
es
inc
mov
push
or
xchg
loopne
and
or
fsubrp
sub
hlt
cmp
mov
push
es
push
push
aaa
inc
dec
mov
cs
inc
mov
cmps
push
or
int3
fiadd
inc
dec
add
adc
out
xchg
(bad)
sti
jl
or
fwait
into
sbb
arpl
fisub
push
add
dec
or
and
movs
dec
adc
push
mov
pop
sbb
inc
mov
movs
loope
repz
ror
xor
out
repnz
mov
pop
pop
cs
add
mov
dec
cmps
fdiv
add
inc
mov
sbb
cmp
and
js
imul
ret
out
or
daa
pop
pushf
repz
das
mov
sbb
sub
xor
sbb
jmp
sahf
push
loope
mov
cmc
clc
jb
cli
cs
mov
cs
mov
mov
xor
movs
daa
cmp
xlat
dec
and
pop
sub
test
mov
cmp
in
pushf
fcomp
adc
scas
xchg
or
sbb
xchg
data16
mov
mov
ins
cwde
das
mov
mov
mov
out
inc
scas
mov
rol
jne
data16
imul
mov
jae
mov
add
mov
push
arpl
rol
lods
in
ret
sub
and
(bad)
(bad)
xlat
mov
pop
clc
popa
sub
scas
out
jno
and
lods
sahf
pop
hlt
push
in
cmc
add
dec
and
or
and
sahf
call
cs
(bad)
loop
mov
retf
cs
mov
cs
mov
int3
out
mov
adc
hlt
xor
pop
ins
jmp
repnz
les
xor
adc
ret
cs
pop
inc
std
daa
inc
push
movs
adc
add
aaa
sub
dec
jne
jb
sub
iret
jl
xchg
mov
or
inc
(bad)
bnd
cmp
ins
lods
push
xor
scas
and
nop
ja
pop
xchg
dec
and
sub
fcmovnbe
xchg
cs
cld
cs
mov
sbb
cmp
sub
xchg
fidivr
loop
add
sbb
bound
imul
leave
daa
add
pop
adc
in
pop
call
mov
ret
out
push
ret
cs
jb
mov
mov
sub
xchg
sar
aaa
fsubp
nop
pcmpeqb
in
pop
dec
movs
sub
outs
sub
cmp
or
pop
adc
xchg
sahf
cs
shr
mov
aad
mov
cmp
mov
cs
inc
in
enter
sbb
xchg
lock
sub
xchg
mov
scas
dec
js
pop
rol
xchg
cs
dec
jle
and
mov
pusha
and
imul
sbb
cs
cwde
out
lods
call
fisttp
dec
jnp
mov
sub
inc
mov
mov
pop
mov
into
outs
cmps
xchg
call
fisttp
enter
scas
int3
mov
xchg
cs
jo
sub
stos
mov
xchg
hlt
mov
in
add
mov
das
outs
mov
lods
cs
aad
xchg
jge
cs
stos
sbb
daa
pop
push
(bad)
fisttp
pop
int3
inc
xchg
xor
ret
xor
in
mov
xchg
mov
sbb
xchg
mov
sub
nop
lahf
or
or
hlt
cs
fstp
jl
adc
fstp
jle
push
push
js
enter
mov
sbb
and
or
movs
sbb
imul
fnstcw
ja
xor
rol
xchg
scas
cdq
fimul
mov
fild
and
fadd
ficomp
shr
xor
adc
xor
push
jmp
mov
fldcw
shr
imul
jbe
add
xchg
test
cs
add
inc
push
and
and
cmp
push
mov
push
outs
inc
jge
jb
push
cs
xchg
outs
sbb
mov
arpl
pop
lahf
(bad)
jbe
adc
push
sbb
inc
xor
ja
arpl
and
push
xor
mov
xor
jmp
out
fild
jmp
cmp
dec
cs
pop
jl
fsubp
mov
dec
out
jmp
inc
or
sub
ja
mov
sub
out
mov
sbb
js
mov
jne
lds
and
push
out
mov
xor
shr
int
push
stos
inc
dec
cmp
retf
mov
sub
scas
popa
mov
mov
aam
dec
push
push
sbb
jns
mov
cs
dec
and
aam
xor
or
mov
daa
cmp
bound
shl
xor
and
into
repnz
xchg
xor
aas
and
xor
int3
push
test
retf
outs
out
jae
jbe
inc
xor
mov
push
(bad)
popa
pop
outs
adc
std
sbb
lock
(bad)
mov
test
pusha
sbb
mov
les
cs
cwde
xchg
(bad)
addr16
movs
in
dec
ror
add
out
inc
inc
push
(bad)
jne
push
sbb
mov
div
mov
cmp
arpl
and
imul
shl
cmp
adc
inc
mov
jmp
fidivr
mov
or
cmp
adc
loop
out
push
fstp
add
(bad)
xchg
or
pusha
push
int3
cmp
push
data16
daa
repz
or
xor
in
jl
cli
ret
jmp
lahf
into
cmp
test
adc
outs
jne
popf
aas
int3
sbb
sub
adc
inc
xchg
lahf
xchg
out
scas
xchg
xchg
in
fstp
imul
rsm
sub
cmps
mov
test
mov
enter
das
pop
bound
add
push
(bad)
call
sbb
dec
cs
std
cli
or
(bad)
cmp
add
sbb
stc
out
mov
dec
jmp
cs
add
jbe
jmp
movs
xor
sub
dec
into
retf
inc
add
add
adc
pop
cs
jle
and
cs
inc
sub
loopne
shrd
jl
push
gs
mov
add
outs
dec
aaa
stos
mov
mov
jg
int
xor
adc
test
push
std
pmulhw
retf
int
loopne
add
gs
xlat
mov
push
stos
cs
repz
sub
adc
in
mov
mov
xrelease
movs
fsubr
inc
js
jecxz
cs
sub
out
inc
xchg
dec
adc
(bad)
arpl
lock
push
jecxz
fistp
adc
adc
or
ret
jp
xchg
test
out
xor
lds
push
cs
int3
out
fs
mov
and
cmc
js
dec
aad
jge
leave
out
and
push
cs
or
jmp
cld
fcomp
cmc
jp
pushf
sbb
and
mov
stos
out
mov
adc
in
xchg
fdivr
cld
daa
outs
cmp
cs
push
int
pop
mov
fidiv
xchg
add
cs
or
or
dec
push
cs
sbb
inc
pop
cmp
xor
enter
sbb
cs
out
xchg
mov
mov
js
(bad)
push
mov
mul
adc
mov
push
lods
ss
xor
sahf
(bad)
das
sub
jbe
xor
cwde
xlat
es
loopne
jbe
cmp
fsubr
out
ror
lahf
(bad)
in
push
(bad)
sub
adc
push
ins
cs
daa
add
xlat
jmp
ror
mov
and
arpl
(bad)
popa
mov
lods
(bad)
xlat
sub
dec
dec
xchg
inc
in
mov
and
call
jbe
mov
push
sub
les
inc
adc
xor
cs
je
sbb
push
xor
adc
scas
mov
xor
jg
outs
stos
xchg
adc
xor
xchg
retf
loop
scas
(bad)
in
(bad)
xchg
and
daa
ss
fimul
pop
(bad)
jmp
adc
jecxz
clc
fisttp
scas
aam
in
popf
call
and
jecxz
mov
mov
mov
cmp
add
xchg
dec
and
shr
pop
aaa
jbe
lock
test
cs
shl
pop
and
xor
sub
movs
push
outs
pop
outs
sbb
jbe
jge
cmp
out
cmps
popf
fcmovne
(bad)
cs
and
dec
xchg
mov
imul
aaa
js
mov
(bad)
fisubr
mov
add
mov
imul
xor
ja
cmp
ss
nop
mov
fstp
and
inc
imul
(bad)
sub
cwde
cmp
daa
cmp
jg
sbb
test
bound
rol
loope
ds
scas
repz
cs
cli
xor
rcl
jno
mov
pop
inc
mov
gs
leave
scas
cwde
test
ins
scas
mov
ins
and
push
das
cs
push
inc
in
cmp
shl
push
cld
adc
test
das
lods
xchg
call
mov
mov
mov
add
push
adc
shr
(bad)
dec
jns
cmp
push
sub
mov
dec
jmp
gs
jo
jno
movs
pop
cmps
pop
or
dec
pusha
mov
mov
mov
xchg
sbb
int3
cld
lods
cmc
push
pop
(bad)
xchg
add
mov
js
sbb
fldcw
jne
sbb
pop
lahf
stc
in
paddd
mov
jns
pop
inc
xor
cmp
jmp
mov
add
cld
inc
pop
std
(bad)
ds
mov
scas
pushf
fldenv
dec
add
das
scas
inc
push
test
inc
data16
cs
pop
fild
imul
mov
clc
into
mov
cmps
out
(bad)
mov
sahf
adc
add
pusha
ror
in
out
jg
inc
pop
jmp
popa
cs
add
cmp
ins
cs
scas
shr
mov
pop
jp
sbb
inc
add
cmp
mov
sub
mov
sbb
jg
addr16
fiadd
adc
cs
icebp
dec
repz
adc
leave
mov
adc
nop
mov
push
cmp
and
sbb
std
les
outs
fidivr
pusha
xor
movs
mov
dec
(bad)
xchg
pop
push
lods
push
jp
fxch
cs
sub
push
adc
cmc
jns
xchg
and
cs
js
push
inc
(bad)
cmp
mov
mov
es
aaa
adc
mov
cmp
cs
jb
ja
outs
movs
call
and
loop
and
or
mov
sbb
jae
add
cmps
popf
dec
les
sub
lahf
(bad)
mov
xchg
and
(bad)
daa
jecxz
jne
xor
dec
movs
xor
sbb
push
pop
in
fwait
ins
cmps
es
push
call
aaa
daa
xchg
(bad)
pop
shl
sbb
jge
stos
cmps
test
pop
in
mov
pop
loopne
js
pop
cdq
jbe
test
(bad)
xor
shl
pop
aad
fs
in
scas
jnp
aam
or
cdq
ds
dec
jnp
and
dec
xor
push
mov
enter
bnd
scas
xor
leave
cwde
add
jae
mov
mov
dec
and
fs
and
and
and
adc
lock
fidiv
je
jge
outs
xchg
pop
dec
cs
daa
leave
sub
shl
add
mov
adc
cmp
sub
out
mov
mov
cmps
retf
lahf
push
mov
div
adc
add
mov
xchg
push
(bad)
shl
jmp
lods
adc
aaa
mov
cmp
stos
daa
xor
xor
daa
push
xor
sahf
mov
add
lods
push
xchg
aas
cli
cmp
into
lds
mov
adc
inc
dec
jne
xor
mov
mov
cmp
loop
call
mov
retf
mov
cs
inc
addr16
dec
psrad
call
adc
cs
pop
sahf
jge
in
fcom
xor
and
es
imul
xchg
mov
ins
and
push
out
shr
popa
and
add
or
cmp
(bad)
outs
jmp
add
mov
mov
sub
scas
xchg
dec
div
loopne
(bad)
loope
loopne
sbb
iret
into
dec
pop
or
xor
mov
or
fsubr
ss
lea
or
bound
stos
or
sbb
cli
mov
into
mov
das
add
pop
xchg
xchg
je
pop
push
dec
ins
xor
cmp
sbb
dec
inc
(bad)
mov
pop
sbb
pop
inc
and
jb
cmp
lahf
and
jle
sub
fsubr
push
jmp
addr16
pop
and
arpl
cli
jmp
add
aaa
xor
mov
pop
shr
add
ss
inc
cs
sub
mov
in
int3
sbb
(bad)
out
sub
test
push
push
mov
dec
xor
xor
out
mov
ret
xchg
repnz
push
cs
pop
loopne
cld
inc
jge
xor
pusha
fcomp
mov
jmp
out
jb
add
pop
push
cdq
and
loop
out
mov
mov
sub
jae
fsubr
or
out
xchg
and
mov
jno
dec
jle
jae
adc
(bad)
ror
out
das
(bad)
sub
mov
jmp
mov
aaa
fs
xchg
sahf
sub
fidiv
test
fdiv
in
fist
cmc
and
add
push
xchg
shr
imul
ja
pop
pop
imul
mov
jle
cs
mov
outs
lea
mov
cs
rcr
dec
and
in
nop
shr
out
xor
and
dec
les
adc
test
pop
push
outs
xor
add
fldenv
int3
jge
mov
ins
dec
aaa
or
jmp
add
xchg
fsubr
sub
lea
or
inc
mov
loopne
jo
in
push
cmp
sub
(bad)
and
pop
jge
mov
dec
(bad)
cmp
mov
es
dec
cmc
mov
test
adc
jmp
arpl
jp
pop
inc
jg
cmp
mov
cmps
cdq
cmps
mul
add
popa
jge
leave
sub
adc
imul
(bad)
repnz
mov
outs
adc
(bad)
or
mov
mov
leave
ss
ftst
div
mov
pop
sbb
mov
adc
leave
cdq
mov
in
cld
mov
outs
fcmove
pop
mov
out
push
xor
inc
scas
and
leave
test
fsubr
js
fsubr
fucomp
adc
cs
pop
cmp
aam
cmps
jo
stc
mov
lds
iret
or
cmps
sub
aad
mov
in
mov
in
sti
jmp
mov
ret
or
jmp
cmc
sahf
into
adc
pop
mov
aad
push
loopne
jle
test
ret
shl
cmp
dec
mov
xchg
mov
movs
push
mov
jbe
fwait
stos
jmp
ds
cs
jle
mov
xor
push
dec
jg
inc
jp
cs
(bad)
into
and
xor
jl
inc
or
cmp
push
aad
(bad)
cs
jl
pop
ret
scas
pop
jb
jg
xor
cs
enter
hlt
ret
xor
jae
sbb
adc
nop
xor
cmp
into
dec
xor
ret
jo
mov
in
das
daa
xor
mov
(bad)
lahf
out
aas
call
add
fs
call
pop
jl
cmp
stos
pop
push
pmaxsw
adc
ja
cs
cmp
sbb
cmp
cs
push
inc
cli
fimul
xchg
sahf
enter
or
sub
and
rcr
movs
mov
movs
jecxz
test
push
mov
lahf
add
jp
and
mov
xor
and
int3
jbe
sahf
in
cs
sbb
xor
ret
scas
mov
sar
cdq
arpl
in
scas
adc
ds
push
fs
pop
fsubp
jp
outs
sbb
scas
or
movs
cmps
sub
push
ds
(bad)
adc
adc
imul
out
mov
cs
fwait
push
fcom
cmp
lea
outs
icebp
jb
nop
xor
daa
rol
sub
jnp
sar
call
data16
cs
outs
fld
jno
mov
xor
mov
(bad)
cdq
mov
sub
push
lds
out
std
adc
xor
ret
shr
daa
call
imul
popa
iret
cmc
outs
scas
mov
arpl
push
jge
dec
int3
aaa
xchg
jg
jl
cs
jb
adc
arpl
bound
cs
daa
clc
mov
and
jp
push
mov
jge
lods
or
cs
push
cs
push
mov
enter
inc
jb
call
lods
outs
mov
sub
and
jmp
and
push
pop
jl
or
sub
fsubrp
cmps
sbb
push
adc
lods
inc
mov
xor
inc
cmp
sub
xor
dec
inc
loop
lds
mov
mov
sub
cdq
fdiv
outs
xlat
in
icebp
pop
add
dec
sar
or
rol
rcl
out
sub
jbe
repnz
jl
inc
(bad)
loop
xlat
mov
sbb
mov
mov
(bad)
adc
scas
adc
test
rcl
mov
sub
adc
test
and
inc
movs
repnz
jo
std
sub
loop
dec
xchg
in
and
mov
iret
ins
ins
mov
arpl
xor
bound
(bad)
lds
and
xor
inc
mov
scas
push
outs
or
mov
scas
stos
outs
addr16
xor
and
and
jne
mov
(bad)
pop
dec
sub
cmps
fwait
addr16
sub
cwde
sahf
push
ds
xor
loopne
mov
xchg
pop
scas
xor
(bad)
push
nop
sahf
clc
daa
sti
in
inc
hlt
mov
push
add
sub
rcr
xlat
push
out
aam
lock
repz
xor
jmp
test
push
and
cmp
mov
jecxz
mov
sahf
or
daa
dec
add
push
stc
cs
lahf
cwd
add
mov
cs
mov
movs
sub
shr
shl
jle
pop
jnp
jno
mov
call
jno
mov
(bad)
out
ds
mov
aad
sub
rcl
adc
mov
test
out
inc
popf
cs
(bad)
(bad)
outs
xor
test
jmp
outs
inc
daa
add
in
push
cmp
mov
cs
mov
push
loop
iret
xchg
addr16
fild
sar
jnp
push
jne
push
loopne
and
jae
aas
scas
icebp
mov
xor
sub
popf
(bad)
jecxz
aaa
sub
clc
xchg
scas
and
push
sub
and
jl
sub
js
adc
mov
jb
push
retf
mov
xor
push
(bad)
cwde
arpl
mov
xor
stos
cmps
test
cmp
daa
mov
jb
in
and
ins
jnp
(bad)
or
(bad)
fwait
ss
ds
popf
push
mov
add
inc
enter
and
es
test
leave
xor
cmp
(bad)
push
mov
inc
and
dec
out
jae
das
mov
outs
aas
fimul
leave
int
xchg
pushf
inc
xor
cs
mov
in
(bad)
aaa
ds
int3
cmp
(bad)
popa
adc
xor
int3
popf
xor
ins
fdiv
jmp
jae
out
popa
xchg
dec
aas
and
jmp
in
mov
cs
fld
test
cs
aam
xchg
lods
in
fsub
pop
push
mov
cs
mov
inc
adc
dec
sbb
(bad)
clc
push
cmp
(bad)
test
mov
adc
and
mov
gs
push
and
loope
repz
mov
(bad)
push
cs
(bad)
fsub
test
or
mov
push
loope
cs
shl
sbb
sub
push
rcl
lahf
icebp
cdq
mov
cs
pop
pushf
stos
cs
mov
iret
loopne
pop
mov
inc
jle
sti
inc
cs
pop
xchg
data16
es
add
imul
jmp
stos
fnsave
test
mov
push
mov
sub
adc
inc
ds
sbb
cs
sbb
xlat
xor
ins
cs
and
sub
sub
sbb
inc
pop
xchg
pop
jno
jne
mov
fldcw
ins
fmul
adc
div
adc
mov
outs
rcr
and
ds
jne
mov
fidiv
pop
jecxz
cdq
xlat
(bad)
push
xor
mov
daa
pop
mul
loopne
sbb
(bad)
adc
fnstsw
retf
pop
push
daa
xchg
mov
sbb
addr16
js
push
dec
inc
adc
scas
ins
xchg
cs
mov
pop
inc
xor
cs
mov
daa
daa
ja
push
sub
pop
ins
adc
test
add
repnz
mov
adc
inc
adc
sbb
lock
add
xor
or
outs
adc
mov
mov
in
inc
shr
loop
pmaxsw
leave
dec
jp
cmc
into
inc
cmp
ret
lahf
scas
push
icebp
movs
scas
scas
fcomp
push
xchg
push
jge
or
cs
aas
out
adc
add
and
test
adc
pushf
scas
test
nop
cmp
xor
outs
inc
int
mov
xchg
scas
xor
in
loopne
mov
jl
and
jg
mov
mov
in
ficom
dec
jp
je
into
mov
ror
cmps
cs
ins
cli
adc
cmp
and
jo
sbb
out
outs
cs
leave
xchg
add
loop
adc
mov
bound
inc
or
sbb
out
xor
mov
loop
cld
cs
xchg
loopne
loop
mov
pop
xor
cmps
cs
out
cs
dec
or
add
or
cs
push
fmul
sbb
movs
sbb
xor
fisub
stc
out
push
push
fldz
dec
cmps
and
jb
mov
fld
bound
and
outs
dec
mov
sbb
pop
adc
ret
cs
das
pop
mov
(bad)
dec
xchg
cs
enter
mov
(bad)
xchg
fiadd
pop
adc
push
aam
(bad)
popa
add
inc
sbb
sbb
dec
(bad)
pop
xor
push
xor
xchg
cmp
mov
pop
(bad)
pop
rcr
std
hlt
aam
out
push
adc
cmp
and
inc
or
dec
or
popa
loopne
add
(bad)
aaa
adc
daa
xor
std
push
mov
aas
push
sbb
lods
mov
scas
mov
mov
adc
scas
in
hlt
sub
add
xchg
mov
call
push
adc
mov
mov
call
push
adc
repnz
popa
adc
sub
ins
mov
xchg
mov
lods
loop
daa
mov
fwait
xor
fiadd
sub
addr16
xchg
jg
retf
mov
out
xchg
cmp
mov
fldenv
sub
jne
and
stos
sti
mov
clc
loopne
ins
(bad)
push
cli
fadd
jmp
cwde
mov
mov
gs
mov
sbb
and
pop
push
js
xchg
mov
xchg
sar
(bad)
popa
outs
leave
and
push
mov
dec
loop
cmp
xchg
jg
jnp
push
shl
push
cmp
and
add
dec
enter
xchg
inc
add
add
xchg
retf
test
enter
mov
stos
xchg
scas
aam
popf
jmp
mov
es
push
pop
xchg
dec
mov
pop
mov
sub
mov
leave
inc
int3
cwde
(bad)
mov
jmp
mov
cli
sub
mov
test
xor
(bad)
ins
(bad)
shr
mov
xchg
and
mov
leave
or
sub
inc
sbb
jns
add
push
outs
nop
retf
or
lods
fldcw
mov
pop
xor
xchg
jle
shl
int3
add
in
xchg
(bad)
cdq
adc
xor
pop
fcmovnbe
pushf
cs
mov
lods
in
mov
cs
mov
movs
mov
add
mov
(bad)
das
or
adc
cs
add
je
dec
cs
add
mov
imul
dec
out
in
call
adc
add
jmp
mov
cmp
xor
hlt
(bad)
pushf
and
ret
inc
adc
mov
retf
inc
mov
cs
adc
test
cs
sub
loopne
xchg
mov
(bad)
js
pop
dec
cs
mov
lods
les
ficomp
out
popf
pop
mov
xchg
and
push
sub
mov
(bad)
or
retf
sub
push
jl
xchg
xor
pop
mov
sahf
push
jb
xor
mov
mov
adc
sti
and
fsubrp
int
scas
clc
int3
cwde
jnp
scas
addr16
dec
into
clc
int
ror
inc
or
pop
lock
dec
inc
pop
aas
cmp
sar
lods
sub
mov
add
repnz
cs
mov
ja
call
xchg
pop
ins
loop
push
add
sub
xchg
cmps
or
add
and
push
cs
arpl
daa
iret
loopne
into
push
mov
sub
test
cmp
cmp
cmp
sub
inc
ins
scas
push
jg
xor
push
push
xor
pop
adc
xor
jmp
mov
imul
xchg
mov
fist
cmp
mov
fwait
push
add
sbb
retf
jo
ror
mov
jnp
in
pop
div
scas
cdq
xlat
stc
pop
sbb
in
je
xchg
jbe
mov
stos
and
mov
adc
jp
sub
pop
mov
fist
sub
xlat
push
mov
outs
cmp
cs
pop
inc
sub
cld
dec
xor
jge
cs
bound
sbb
mov
cmp
cs
jns
pop
inc
and
cs
jbe
ins
lock
xor
push
jns
in
lea
iret
sub
sti
ins
cmp
pop
or
cmp
ja
out
dec
push
inc
push
adc
mov
or
push
xlat
loop
mov
int3
mov
leave
push
lahf
mov
mov
daa
mov
mov
call
enter
xchg
sbb
fisubr
scas
sar
sahf
cmp
add
aam
mov
(bad)
(bad)
sub
sbb
(bad)
sbb
ds
push
daa
inc
fldcw
xchg
pop
outs
xchg
leave
std
loop
push
sahf
es
retf
inc
inc
and
xor
mov
(bad)
out
and
movs
gs
movs
pop
ror
pop
push
mov
push
(bad)
mov
push
test
leave
jo
xchg
loopne
popa
js
(bad)
dec
mov
xchg
test
leave
pop
jecxz
jle
aaa
inc
dec
jg
in
mov
mov
cmps
pop
pop
in
add
push
xor
xor
jmp
inc
jmp
sahf
xchg
dec
jmp
push
sti
push
mov
lods
xchg
xchg
mov
and
dec
and
pusha
cmc
dec
in
ret
ficom
mov
sahf
stos
test
imul
pop
or
stos
rcr
inc
mov
rcr
loope
dec
ret
push
xchg
fiadd
shr
adc
sub
call
inc
mov
adc
add
xchg
and
div
inc
xlat
icebp
push
xor
aam
xchg
pop
popa
cmp
pop
movs
data16
sub
push
jp
mov
test
aas
mov
mov
stc
and
fcomp
shr
leave
int3
xor
jecxz
loope
mov
fld
in
cs
cmps
out
mov
neg
and
outs
std
(bad)
(bad)
out
(bad)
xchg
(bad)
cmp
adc
jne
xor
and
cwde
inc
inc
cs
aaa
rcr
add
mov
lahf
jnp
push
bound
or
out
cmp
adc
clc
(bad)
repz
sahf
or
inc
mov
les
sbb
cmp
and
mov
scas
scas
sub
add
sahf
scas
push
cmp
sub
and
pusha
adc
shl
sub
and
cmp
out
enter
call
xchg
dec
and
cs
xchg
loope
push
mov
mov
(bad)
sahf
and
and
mov
jae
sbb
xlat
inc
sti
movs
fwait
mov
into
fcomp
dec
pushf
packsswb
push
scas
retf
mov
cs
push
push
jbe
fisubr
cs
dec
push
in
push
retf
pop
xor
jns
dec
add
mov
pusha
push
fwait
jmp
test
add
dec
arpl
mov
adc
mov
adc
sub
stos
in
sbb
xchg
int3
cs
dec
js
out
cwde
mov
fcomp
jp
aam
mov
cmps
xor
popf
rcr
cmp
xchg
cs
ror
add
ret
fucomi
ins
cs
pop
test
iret
sub
dec
xchg
xchg
dec
cs
pop
sbb
jne
cs
int3
xchg
nop
ss
(bad)
mov
sbb
add
jmp
sbb
cs
push
popa
and
ins
sub
loop
into
inc
xor
inc
inc
mov
aam
sub
leave
sahf
cwde
xor
cs
jl
cmps
sbb
sub
out
pop
or
push
pavgb
out
mov
dec
jbe
mov
repz
jp
retf
sub
push
test
imul
call
(bad)
adc
xchg
pop
cs
jne
cmp
into
jmp
jge
sahf
jb
in
xchg
repnz
cmp
rcl
mov
push
cli
cs
into
mov
add
out
cs
(bad)
jnp
test
push
sbb
movs
sbb
jle
sbb
dec
jecxz
sub
jne
ror
ins
in
adc
and
dec
jo
cwde
jl
or
mov
mov
dec
int
test
inc
adc
inc
ins
mov
mov
iret
and
mov
fld1
or
out
pop
mov
arpl
mov
jmp
das
ret
cmps
fwait
push
sub
sar
into
cld
pop
movs
scas
sub
sub
sti
sar
cs
add
inc
or
mov
js
ror
add
out
push
mov
dec
jg
inc
arpl
inc
adc
or
cs
daa
push
pushf
mov
sbb
das
repz
add
pop
cmp
aad
mov
cs
loope
xor
test
and
jb
sti
enter
add
xor
out
cs
movs
sti
mov
dec
mov
push
cmp
repnz
ins
jbe
iret
mov
leave
stos
hlt
movs
sub
mov
test
daa
bound
mov
dec
ror
(bad)
cmc
xlat
aas
xor
mov
lfs
cli
sub
xchg
(bad)
retf
mov
mov
daa
cmp
scas
adc
sti
in
push
cmp
in
daa
ficomp
push
cmp
push
and
ss
and
sub
popa
scas
pop
or
jg
sbb
outs
cs
jp
fwait
sbb
ret
or
ins
outs
pop
mov
cld
xlat
inc
imul
test
bound
fcmovnu
sub
adc
lahf
mov
(bad)
repnz
sahf
rcr
push
hlt
cs
ficom
cmp
push
mov
retf
adc
fidiv
js
jno
sbb
fsub
lea
pop
and
call
(bad)
jb
inc
jle
(bad)
sub
test
ss
adc
add
dec
cmp
adc
(bad)
sbb
nop
push
xor
repz
sub
je
and
mov
lahf
out
cdq
loopne
clc
push
xor
xor
pop
scas
pop
aam
mov
mov
mov
movs
call
enter
into
push
scas
adc
sub
or
rcl
fisubr
repnz
scas
pop
adc
xor
inc
scas
and
jo
retf
or
hlt
or
sub
daa
mov
test
cwde
adc
cs
push
lods
xor
div
fdivp
push
repnz
add
push
cs
sbb
fs
outs
xor
test
scas
dec
cmp
loop
jmp
cmc
mov
adc
xor
test
lods
xchg
lea
or
jecxz
push
aam
and
stos
cmp
jmp
cmp
xchg
mov
jno
push
pop
cs
cmp
sbb
xchg
dec
idiv
pushf
leave
sub
pop
fs
or
divps
cmps
mov
fistp
dec
popa
(bad)
xchg
mov
pop
mov
mov
cmc
outs
mov
js
and
in
aad
stc
out
shl
jle
sar
cmp
xor
pop
imul
sahf
rcr
sub
mov
cmp
and
sub
ins
xor
test
arpl
call
test
lds
mov
call
mov
(bad)
sub
push
scas
mov
add
pop
lods
mov
cli
jmp
push
lahf
push
cli
sub
ret
loopne
mov
daa
sub
(bad)
mov
dec
aaa
sub
int3
mov
daa
cmc
xor
xor
jbe
cmp
cs
mov
icebp
mov
ret
lahf
shl
lods
daa
adc
adc
int
out
pop
ficomp
push
or
sahf
out
pop
test
mov
(bad)
shl
out
shl
xor
(bad)
lea
jns
aas
inc
jg
(bad)
mov
es
pop
aad
sub
xchg
(bad)
repz
cs
cmp
or
scas
vpaddb
pop
push
sbb
cs
mov
xor
sbb
and
dec
cmp
rcl
cdq
aad
cs
inc
mov
ss
mov
out
mov
fsub
shr
dec
dec
pop
pop
adc
inc
jmp
aas
and
add
arpl
sar
xor
jbe
stos
xchg
xor
mov
scas
outs
shl
daa
inc
dec
mov
repnz
imul
leave
cmp
adc
xor
rol
mov
fimul
jmp
imul
(bad)
int
and
in
push
lea
mov
adc
pop
(bad)
sub
adc
and
in
mov
rol
stos
in
pusha
add
push
xor
out
leave
loope
push
sub
mov
(bad)
idiv
adc
sub
cmc
mov
rep
dec
sbb
leave
cmp
xor
push
(bad)
fmul
jge
shr
jmp
mov
sub
cmps
push
cmp
pop
leave
cli
std
(bad)
mov
mov
xor
push
in
pusha
scas
and
cmc
and
push
jmp
dec
cmps
push
aam
fisttp
push
dec
enter
hlt
je
sti
pop
retf
je
cmps
mov
mov
xchg
call
dec
mov
jns
popf
jle
jg
xchg
push
mov
sub
shr
int3
inc
out
and
jnp
xor
push
lds
xor
fisttp
mov
ror
pop
repz
pop
pop
sti
or
out
jl
vfrczpd
arpl
loop
(bad)
cwde
add
jmp
scas
pop
ss
leave
sbb
mov
mov
in
xchg
aam
sub
jbe
enter
dec
mov
test
int
aam
clc
dec
ins
xchg
leave
dec
jp
mov
xor
in
mov
and
xchg
hlt
outs
push
movs
repnz
xchg
scas
sub
xor
cwde
imul
addr16
fcomp
add
(bad)
loope
daa
lds
inc
mov
fild
mov
nop
jl
(bad)
mov
mov
mov
ds
add
lock
inc
inc
jne
adc
fdivr
xor
cmp
arpl
xchg
xchg
xor
and
(bad)
(bad)
and
mov
inc
out
repnz
out
and
ror
dec
add
lahf
sti
xor
or
xlat
sub
cwde
test
test
xchg
scas
and
xor
pop
cmp
jmp
(bad)
pop
push
loope
push
jecxz
shr
sbb
fwait
push
xchg
jle
adc
push
pop
cmp
push
pop
int
lds
sub
add
or
inc
es
push
ret
mov
iret
mov
sub
sbb
push
loope
dec
aas
push
popf
jmp
xchg
xchg
mov
(bad)
pop
dec
mov
pop
sbb
call
scas
jns
push
lea
das
daa
cwde
in
out
retf
aaa
dec
cmps
idiv
mov
and
xor
shr
push
inc
jae
into
mov
jp
les
into
nop
cs
shr
adc
mov
inc
dec
and
(bad)
std
test
cs
lahf
xchg
and
outs
ins
sbb
lock
inc
loope
lahf
mov
inc
loopne
xor
sub
xchg
fisttp
push
jbe
cs
aaa
or
mov
or
jge
xlat
push
push
neg
cs
mov
cs
pop
lods
mov
xchg
fsub
inc
push
ret
mov
outs
add
mov
mov
fld
mov
aaa
ja
push
fld
aas
xchg
pop
out
jbe
or
fs
xchg
in
jns
lahf
sub
out
cmc
sub
xchg
xor
mov
jns
popa
fst
fisttp
push
mov
mov
cmp
ror
xor
inc
ret
ds
sbb
inc
(bad)
cld
fst
ret
call
cmp
inc
mov
fwait
aad
shl
fisubr
adc
fidiv
sbb
(bad)
lahf
sub
test
out
push
xlat
shr
or
adc
ja
xchg
adc
cmp
push
std
xchg
loopne
add
cmp
sub
jne
lahf
sbb
lahf
mov
aam
cdq
xor
mov
xchg
in
scas
push
leave
push
push
mov
or
sbb
cmc
or
cmps
ja
aaa
jecxz
cmp
sub
add
dec
mov
and
dec
fadd
outs
int3
ins
sub
rcl
inc
mov
aas
cmp
inc
push
adc
push
dec
loopne
imul
add
fdiv
scas
inc
adc
sbb
adc
cs
jbe
sbb
dec
or
mov
popf
xor
or
retf
sbb
mov
sti
call
ss
mov
jnp
rol
popf
cs
inc
xor
call
sbb
mov
daa
fs
adc
pop
push
into
jmp
xchg
es
leave
fist
ins
ds
mov
pop
scas
push
dec
mov
add
push
cs
ret
mul
out
lods
mov
push
dec
call
psadbw
or
leave
cs
movd
push
aaa
jp
or
lds
(bad)
push
fwait
les
fdivr
dec
je
fnstenv
pop
add
sbb
sbb
push
jo
(bad)
cs
ret
jmp
int3
mov
pop
cs
add
jp
rcl
mov
test
scas
out
or
test
(bad)
in
pop
enter
cmp
cs
jmp
call
jl
iret
fistp
cli
inc
and
cmp
popa
lods
loope
out
ficomp
(bad)
out
fs
push
xor
cmps
mov
sbb
les
add
sti
test
cmp
cs
into
sbb
and
aam
iret
cs
mov
or
cs
cmc
mov
push
cs
arpl
ds
xor
jmp
xor
mov
scas
outs
cmps
xor
dec
jne
outs
mov
aaa
stos
and
mov
mov
add
xchg
mov
ret
sbb
add
xor
test
int
cs
test
sub
in
(bad)
out
dec
ret
xor
cdq
jecxz
mov
or
jnp
mov
inc
mov
push
cs
mov
into
and
adc
cs
xchg
sub
xor
jle
test
fistp
cdq
adc
fs
stos
ror
fmul
in
jg
scas
sbb
jp
popa
sbb
jge
rol
xor
add
pop
push
cdq
daa
pop
aaa
dec
mov
scas
pop
cmps
sub
aas
dec
cld
push
cmp
pop
adc
sbb
fs
push
ret
mov
stos
xor
sub
push
leave
xlat
jecxz
xor
jp
retf
jmp
sub
mov
ficom
je
push
cs
out
xchg
enter
and
mov
sbb
mov
mov
sbb
daa
sub
inc
(bad)
push
dec
aas
sbb
push
dec
jle
dec
push
daa
imul
repnz
inc
cs
pop
call
call
inc
add
inc
mov
dec
pop
fnstenv
push
out
retf
int3
mov
push
sbb
test
iret
add
jmp
hlt
jo
lmsw
xchg
jmp
xchg
cs
sahf
fmul
cwde
test
sub
movs
inc
paddd
stos
adc
push
cmp
in
pop
cmps
lock
xchg
jo
xor
jae
cmp
addr16
adc
sahf
inc
pop
xor
(bad)
aad
out
(bad)
mov
and
inc
jns
aas
cmp
xchg
push
or
je
and
(bad)
push
inc
xchg
xor
repz
imul
jo
add
pop
or
push
cmp
jno
daa
pop
adc
ficomp
outs
sbb
push
int3
xor
sbb
js
(bad)
mov
and
lds
mov
int3
lea
(bad)
js
adc
push
shl
mov
inc
in
inc
sbb
call
sbb
jb
and
and
jl
(bad)
mov
cs
and
ja
fstp
sbb
jb
cs
fisubr
pop
cs
push
mov
xor
mov
fld
sbb
or
call
push
bound
push
xor
icebp
jp
jbe
jns
xchg
sub
pop
stos
cdq
cmp
ins
dec
(bad)
das
movs
mov
call
dec
mov
(bad)
out
or
out
sub
push
cdq
daa
or
lods
push
fistp
and
and
dec
je
or
fwait
mov
and
push
xor
sub
test
aas
jmp
out
fucomip
ret
lods
jmp
mov
add
dec
inc
or
cs
or
or
jmp
fist
scas
dec
cmp
xor
jmp
xor
xor
dec
mov
jnp
mov
arpl
mov
lahf
xchg
inc
repz
lea
lahf
imul
repnz
outs
(bad)
cmp
xor
(bad)
(bad)
jmp
pusha
js
mov
push
cmp
fmul
test
jmp
leave
fdiv
(bad)
xlat
cmp
jne
jl
in
inc
scas
cwde
(bad)
adc
leave
or
pop
out
lods
leave
jo
out
push
pop
daa
mov
sub
xor
(bad)
jmp
push
fcomip
(bad)
(bad)
pusha
push
loopne
test
pusha
inc
popf
call
sub
inc
jg
add
cs
add
push
pop
shr
popa
jle
(bad)
out
dec
ret
xor
stos
int
pop
sti
push
sahf
icebp
pop
fsub
cmp
mov
jl
mov
sbb
and
imul
and
sahf
fldenv
mov
push
inc
dec
xor
sub
scas
wbinvd
or
leave
mov
mov
(bad)
mov
ss
fist
fmul
jp
mov
ds
imul
movs
xor
dec
test
dec
fdivr
xor
idiv
cmps
es
movs
dec
loope
es
ror
mov
out
in
outs
sub
cmp
int
imul
(bad)
std
movlps
mov
dec
js
mov
and
lock
mov
iret
daa
and
sub
outs
call
mov
fcom
loop
push
rcr
(bad)
dec
adc
leave
jb
into
mov
mov
jle
les
mov
scas
xchg
and
mov
xchg
jg
leave
xchg
cmp
jo
fs
mov
and
cs
(bad)
jmp
push
fdiv
fcomp
cmp
outs
faddp
in
cs
push
call
in
aas
mov
lock
cs
mov
std
cs
enter
call
mov
xor
lds
jbe
sub
cmps
fwait
push
xchg
xchg
pushf
shl
enter
mov
sbb
cmp
dec
jle
imul
aas
cmps
jg
mov
scas
sar
mov
mov
dec
add
mov
aam
dec
fcom
mov
xchg
cmp
leave
xchg
imul
inc
xchg
out
cmp
push
jle
aam
add
cmp
push
mov
das
out
hlt
sub
leave
sbb
sub
jmp
push
mov
pop
bound
dec
mov
(bad)
mov
jg
jg
in
out
(bad)
lods
fs
in
xchg
adc
stos
lock
sbb
imul
outs
mov
mov
(bad)
or
cmps
mov
mov
mov
mov
inc
pop
jmp
or
jg
cmp
cs
xchg
jno
pop
jecxz
mov
xor
jbe
push
sbb
jg
cmp
mov
scas
xor
into
shr
cwde
cmp
(bad)
cs
fs
fwait
lock
shl
adc
push
or
pop
sti
(bad)
cmp
repnz
adc
out
cmps
stc
sahf
fdivr
dec
in
into
xor
or
nop
aaa
jae
pop
xchg
cmp
ins
dec
scas
xor
pop
mov
mov
es
cs
pop
mov
enter
add
scas
pop
lods
cs
out
cwde
pop
inc
mov
js
mov
retf
xor
push
pop
daa
adc
cmp
or
push
push
sar
push
popa
ins
(bad)
in
ds
mov
mov
pop
aas
sbb
xor
outs
cdq
out
cmp
cld
lods
jmp
push
cmc
dec
or
xor
lock
sub
xor
adc
fcomi
pop
into
popa
stos
cs
js
test
mov
cs
mov
out
fstp
daa
cmps
mov
popf
imul
call
and
dec
sub
outs
push
adc
test
in
daa
xor
popa
vmwrite
cmp
sub
inc
rcr
clc
shl
pop
xor
mov
in
imul
sub
cs
push
inc
pop
sbb
push
sub
or
sub
(bad)
std
adc
stos
ins
rcr
aaa
jns
push
cmc
inc
mov
pop
in
out
scas
jmp
into
xchg
in
int3
ins
xor
jge
jecxz
jns
fmul
not
cmp
leave
cli
add
cmps
cs
daa
push
dec
sbb
daa
and
push
cli
lods
popa
(bad)
cld
(bad)
into
or
(bad)
daa
xor
xchg
cs
mov
xor
inc
fwait
add
sbb
fistp
push
lods
sub
xor
loopne
xchg
dec
jb
mov
call
shl
mov
xor
(bad)
add
mov
scas
mov
fisubr
lods
out
pushf
cs
jp
pop
push
aam
lds
pop
add
push
mov
neg
cs
push
mov
lahf
retf
fst
add
into
fcom
sub
leave
jnp
or
push
mov
fadd
popf
cs
movs
jmp
sbb
sbb
imul
mov
mov
push
jmp
pusha
sub
xchg
test
inc
fadd
(bad)
mov
(bad)
sbb
adc
sbb
or
ins
mov
fs
(bad)
into
test
cmp
(bad)
out
push
daa
dec
shl
enter
cs
sub
sub
fnstcw
xchg
ret
mov
add
out
push
fs
mov
and
ficomp
dec
test
cmps
lods
in
inc
shl
cs
jb
pop
loopne
je
push
add
sub
xor
sar
or
std
repnz
(bad)
fwait
push
push
jecxz
mov
mov
sub
setle
mov
xor
aas
scas
ins
(bad)
(bad)
lock
mov
daa
pop
sub
dec
rcr
dec
mov
retf
xor
push
jl
addr16
(bad)
sbb
jb
fnsave
out
dec
and
fsub
call
push
xor
imul
hlt
jmp
add
in
scas
push
inc
xlat
pop
sub
sbb
call
and
xor
push
cs
sub
jns
or
sub
inc
xchg
sbb
call
xor
(bad)
mov
popa
adc
stos
ret
xor
add
shl
sbb
scas
pop
fisubr
mov
xchg
movs
out
ins
jne
lock
xor
adc
fstp
ret
std
test
sub
test
push
les
xchg
fsubr
adc
loope
int
pop
ror
cmp
ror
movs
jae
shl
fadd
inc
dec
rcl
(bad)
int
stos
out
in
add
fnop
xor
mov
aad
mov
aaa
or
movs
and
leave
mov
lods
mov
mov
test
cmps
dec
fmulp
mov
mov
fnsave
leave
xlat
mov
dec
dec
movs
xor
ret
cld
sub
jecxz
jecxz
mov
shl
mov
ss
stos
pop
push
and
out
cs
retf
xor
call
sti
movs
cwde
aad
jbe
and
aad
add
add
std
stos
icebp
add
lods
push
push
inc
pop
enter
add
dec
xchg
add
sbb
xlat
int
cmp
sbb
daa
(bad)
xchg
aad
fisttp
ror
out
dec
imul
cmps
mov
cli
(bad)
test
outs
adc
mov
fsub
out
cmps
retf
mov
xchg
sar
ficom
and
or
xchg
cwde
cs
or
cmc
nop
daa
pop
or
adc
pop
mov
adc
cs
pop
inc
push
jno
in
xlat
push
mov
aad
std
cs
mov
add
stos
mov
int
adc
ret
pop
shr
imul
cs
add
daa
pop
sub
int
shr
xor
das
iret
ficom
stc
lds
push
imul
dec
push
push
je
ss
ins
sbb
shl
xlat
imul
int3
xor
xchg
daa
js
mov
xchg
mov
cli
addr16
and
push
imul
push
mov
cs
pop
adc
cmp
add
sub
retf
mov
sbb
sub
in
add
sbb
je
(bad)
and
dec
jg
and
dec
div
fcomp
push
or
in
jg
repnz
ret
add
shl
clc
scas
je
sbb
data16
push
ins
mov
xchg
nop
xor
sub
in
fwait
cs
xlat
mov
xchg
lahf
sbb
push
test
jecxz
in
(bad)
call
adc
mov
lock
dec
outs
xor
daa
cmps
sti
mov
cmps
nop
sub
cs
scas
sbb
dec
xor
aad
call
cs
lods
cld
mov
daa
adc
sbb
xchg
cdq
cmps
xor
imul
out
xchg
cmps
and
pop
xchg
add
jne
std
sub
adc
ja
stos
pop
enter
aas
mov
mov
jmp
and
xchg
(bad)
call
(bad)
fstp
pushf
push
xchg
test
ja
pop
sub
ja
pop
(bad)
stc
outs
outs
xchg
cs
cmp
fs
ret
cmp
mov
jbe
popa
and
and
mov
aam
pop
cs
inc
mov
inc
cs
repnz
cs
(bad)
aam
or
sbb
cmp
imul
(bad)
nop
(bad)
fild
inc
fcmovne
jge
mov
in
push
leave
lds
call
mov
push
test
lea
sub
lahf
inc
mov
repnz
mov
xor
mov
fdivr
dec
mov
cmp
mov
jle
cwde
sbb
not
stos
data16
dec
cld
fld
sbb
sub
xor
sbb
xor
inc
mov
dec
es
pop
aas
and
jne
sahf
popa
and
xchg
imul
ffree
(bad)
lock
call
sbb
stos
sti
into
ins
pop
sub
ins
ds
les
push
das
or
sbb
sub
cs
pop
xchg
dec
in
and
sbb
and
xchg
cmp
cmps
outs
cmp
inc
inc
mov
aam
xor
xchg
ins
xchg
movs
adc
stos
pop
(bad)
imul
out
inc
xchg
popa
inc
pop
leave
push
mov
mov
fs
pop
scas
das
in
mov
scas
sub
mov
cwde
jl
inc
es
mov
iret
jmp
aas
dec
fiadd
xchg
cmp
cs
out
mov
mov
inc
sub
add
jge
sbb
jae
mov
adc
test
dec
leave
adc
inc
pop
rol
and
into
fidivr
cmp
add
pop
leave
xchg
jb
mov
inc
push
mov
je
xlat
mov
rol
fsub
scas
es
leave
push
rcl
mov
je
sub
push
push
mov
add
daa
sar
ja
loop
mov
add
fldcw
cmps
mov
and
mov
mov
xor
jl
test
rcr
cs
in
cmps
jne
xlat
xchg
daa
out
shr
xchg
imul
mov
dec
cmps
xchg
cmp
in
push
sbb
dec
rcr
cs
inc
fcomi
push
cs
pop
test
fisubr
xchg
inc
ja
daa
lods
xor
js
xor
add
or
inc
sub
xor
xchg
int3
lahf
mov
and
arpl
jbe
xor
cmc
pop
sub
push
fisub
aaa
aad
pop
ja
sbb
push
pop
gs
js
outs
xchg
mov
(bad)
repnz
mov
jmp
psraw
shr
sub
xor
(bad)
mov
mov
cs
stc
xor
jmp
lods
cs
loopne
cdq
xor
mov
outs
add
lods
cs
(bad)
(bad)
sbb
movs
(bad)
push
adc
xlat
cmc
mov
mov
pop
dec
scas
(bad)
xor
jno
(bad)
mov
mov
daa
ret
loope
xor
jg
lahf
add
ja
ins
mov
xchg
out
jno
push
cmp
and
ret
cs
ins
xor
or
mov
push
nop
dec
jl
xor
inc
adc
add
cmp
movs
inc
outs
test
jl
lods
cs
mov
pop
mov
sub
pushf
mov
lock
scas
out
mov
jb
and
inc
jmp
mov
mov
or
mov
inc
pop
mov
scas
faddp
(bad)
mov
icebp
lods
mov
pop
leave
inc
jo
inc
push
and
xor
or
mov
scas
test
mov
cld
shl
xchg
out
dec
test
sub
sub
(bad)
out
xchg
aad
xor
outs
test
dec
sub
cmp
cs
xor
add
clc
xor
and
sub
mov
call
cmp
imul
mov
pop
sbb
xchg
rol
(bad)
inc
(bad)
fsubrp
lods
cs
movs
jmp
(bad)
cs
out
not
jmp
mov
cs
push
or
aas
mov
hlt
mov
cs
or
add
daa
cli
jnp
mov
retf
jmp
aaa
out
mov
call
fcomp
cs
jnp
scas
test
out
push
inc
or
mul
mov
scas
and
xabort
inc
(bad)
in
(bad)
cs
jne
cs
mov
fadd
push
add
shl
push
jmp
repz
jle
(bad)
shr
pop
outs
jo
dec
jle
stos
popf
fdivr
into
test
mov
and
jbe
sbb
add
jne
sub
leave
(bad)
mov
ss
fs
add
sub
ja
mov
outs
pop
pop
pop
mov
not
cs
arpl
adc
out
xor
or
jne
scas
pop
rcl
cmps
xor
push
inc
jecxz
out
retf
and
push
dec
imul
push
mov
or
js
xchg
jg
cwde
ret
cld
sti
imul
mov
xor
cs
ret
pop
dec
jge
cmp
pop
dec
adc
sub
ror
inc
(bad)
jbe
test
mov
int3
cmp
adc
dec
add
sti
mul
fwait
ss
push
add
in
push
shr
mov
or
cmps
cmp
shl
cs
sbb
arpl
gs
(bad)
xchg
cs
inc
ja
dec
jmp
mov
dec
jb
push
pop
cs
lds
cs
inc
fisub
jne
cmps
jmp
(bad)
adc
in
cmc
shl
pop
sub
add
mov
mov
sub
fstp
daa
pop
mov
pop
mov
cmp
jo
cs
neg
cs
outs
mov
adc
sub
mov
xor
scas
inc
jmp
gs
sub
push
das
fiadd
dec
out
cli
cs
cmp
test
test
xor
clc
add
mov
push
rcl
fs
mov
sub
mov
mov
clc
mov
aam
dec
xchg
jae
aaa
ss
sub
cld
rol
cdq
mov
mov
and
shl
xchg
add
cmps
sub
je
push
movs
mov
ins
out
aas
mov
js
xor
mov
dec
xlat
adc
adc
xor
inc
fcmovnu
or
out
pop
scas
pop
inc
setle
xor
cmp
cs
push
inc
or
sbb
daa
adc
test
mov
cs
retf
sub
xchg
outs
inc
cmps
dec
jno
xchg
loopne
popf
fst
cs
repz
fisubr
scas
pop
mov
hlt
and
(bad)
dec
pop
scas
sbb
jp
sub
aas
push
inc
fmul
aad
cs
jmp
dec
mov
sbb
sub
xor
mov
push
cwde
or
(bad)
rcl
cs
cmp
shl
sahf
leave
cs
ss
(bad)
fisttp
cs
cdq
jmp
jo
in
icebp
push
rol
loop
xor
mov
mov
mov
and
int3
ucomiss
dec
cmp
les
(bad)
adc
ja
cs
add
pop
cdq
stc
sbb
cs
shl
repnz
inc
daa
call
retf
nop
mov
dec
mov
jne
dec
cs
mov
das
cs
push
and
push
and
xor
sub
push
loope
addr16
add
pop
cs
ds
xchg
fwait
daa
mov
jb
jmp
and
sub
mov
inc
and
mov
jns
dec
mov
pusha
sub
std
or
addr16
cs
in
push
fdiv
jmp
nop
jae
daa
pop
xor
inc
daa
test
mov
mov
(bad)
adc
call
rol
arpl
in
xor
push
mov
sbb
sbb
pop
sbb
cmc
pop
(bad)
je
or
mov
sti
pusha
cs
shr
sahf
pop
fisubr
scas
or
mov
cs
not
xor
int3
out
add
pop
cs
iret
aam
cli
jl
cs
rol
and
sub
scas
stos
mov
fisubr
mov
xchg
and
cmc
mov
mov
add
and
xor
test
outs
inc
daa
into
jnp
sub
and
sub
sahf
std
vmwrite
ficomp
gs
pop
(bad)
scas
sub
mov
mov
out
clc
mov
dec
add
loope
call
sub
fsubrp
add
test
lock
adc
inc
dec
or
mov
cmp
xor
xchg
jp
pop
push
inc
imul
bound
cmps
daa
ret
(bad)
mov
imul
aam
pop
xor
ins
(bad)
add
jge
add
jge
sub
adc
mov
out
ins
pop
ret
test
cmp
jg
(bad)
daa
mov
sub
cmp
push
leave
stos
mov
leave
xchg
push
push
add
inc
sub
movs
and
adc
push
loope
les
xchg
loopne
ret
cs
mov
xchg
daa
int
std
lods
leave
popa
jne
lods
aad
(bad)
mov
lea
cs
retf
sub
adc
adc
xchg
sahf
and
and
cmps
push
xor
outs
jnp
dec
adc
js
jbe
jae
push
mov
cld
xcrypt-cfb
cmps
loop
push
outs
xchg
mov
dec
es
add
inc
mov
jae
sub
call
cs
jae
adc
pop
das
ss
cmp
cs
xchg
mov
inc
(bad)
mov
fsub
outs
out
fistp
mov
cld
xor
loop
sbb
xor
ins
sbb
xchg
xchg
mov
sbb
sub
sti
in
inc
bound
xor
xchg
call
(bad)
mov
mov
xor
into
dec
aaa
cmp
and
sub
xchg
adc
mov
jge
arpl
cmps
xor
add
xor
and
fst
add
dec
add
(bad)
daa
xor
jmp
jmp
dec
or
jnp
scas
cs
into
dec
xchg
mov
xchg
fisub
xor
scas
mov
xlat
ret
jo
add
jle
push
outs
sub
mov
or
in
daa
lea
jg
mov
inc
push
xor
xor
shl
add
daa
xchg
(bad)
jae
cs
shr
and
cs
adc
adc
mov
es
fstp
inc
ret
call
pushf
ds
popa
jmp
cli
lahf
int3
daa
xor
fistp
fisubr
mov
mul
(bad)
(bad)
jmp
loope
or
mov
fcomp
cs
rcl
ret
and
aad
add
or
mov
cs
ficomp
or
aaa
sub
or
xchg
outs
sbb
sti
stos
test
icebp
out
or
inc
int3
repnz
fld
pop
dec
inc
lods
fisubr
jle
push
cmps
fnstsw
in
mov
mov
push
mov
jmp
ret
sub
cmps
push
cmp
inc
inc
push
ret
dec
sub
bound
mov
push
dec
cmps
dec
mov
mov
pop
sbb
das
cs
mov
cld
adc
inc
ss
fiadd
push
loopne
jbe
and
jns
sub
cdq
scas
dec
pop
xchg
xor
xchg
test
imul
bound
xor
les
loopne
repz
iret
push
adc
xor
dec
lods
jmp
neg
mov
lods
shr
hlt
and
dec
cs
fsubrp
movs
adc
push
xlat
adc
mov
xchg
and
ret
cs
mov
jge
pop
xchg
cs
mov
rol
mov
mov
retf
sub
retf
mov
jo
out
mov
sub
dec
enter
push
mov
or
in
out
dec
in
scas
fsubr
leave
or
cmp
js
nop
sbb
cld
adc
or
rcl
cs
(bad)
daa
xor
in
ret
movs
cs
sbb
jnp
mov
cs
mov
les
(bad)
fild
sbb
repz
pop
sub
push
dec
or
xchg
cs
mov
mov
data16
xchg
movs
jb
cs
push
dec
arpl
dec
fst
mov
ret
cs
outs
or
jns
sub
add
and
xchg
mov
dec
cs
lea
gs
lods
lock
dec
and
push
mov
daa
push
xor
add
mov
push
pop
into
ja
sub
xor
cs
xor
push
inc
sbb
xchg
imul
adc
(bad)
icebp
sub
jbe
mov
xor
es
mov
cs
call
(bad)
sub
add
gs
and
xor
gs
mov
jp
into
xor
mov
mov
fist
inc
sub
sahf
add
xchg
push
push
push
or
fiadd
pop
inc
cmp
mul
xor
xor
gs
add
dec
repz
int3
xchg
out
push
jno
pop
out
and
mov
(bad)
xchg
out
loop
idiv
fisubr
movs
(bad)
cli
out
sar
jb
pop
sbb
add
or
sub
and
outs
mov
dec
jl
rcr
or
cs
inc
pop
sbb
cs
dec
sub
dec
sbb
or
or
cs
rcr
stos
pop
aaa
jae
aaa
leave
out
cmovo
rcl
in
mov
sub
jne
mov
pop
push
and
xor
arpl
idiv
stos
pop
je
adc
cmp
and
arpl
cmp
loop
jp
mov
cdq
push
mov
jno
add
inc
test
and
lahf
les
cmp
push
push
nop
cs
(bad)
jle
mov
push
inc
or
daa
and
aaa
pop
mov
sub
lods
rcl
inc
or
xchg
xchg
jnp
pop
add
cmp
push
pop
mov
mov
xchg
adc
ss
xor
xor
pop
add
stos
out
mov
enter
mov
sub
in
int3
adc
sub
add
inc
pop
pop
cs
leave
inc
es
dec
into
sbb
mov
mov
daa
cmps
xor
pop
mov
sbb
and
and
push
xchg
shr
ins
shr
mov
(bad)
out
sub
xchg
sbb
cmp
cs
rcr
inc
mov
mov
aad
movs
(bad)
lahf
cmp
sub
cs
xchg
das
xchg
dec
and
je
add
jnp
adc
and
jg
inc
mov
mov
lods
xor
adc
jle
and
scas
add
popa
movs
sub
or
and
scas
xor
adc
sahf
jg
(bad)
das
push
fcom
cs
sbb
rcl
add
cs
mov
sbb
lds
inc
or
cs
mov
push
cs
cmp
push
inc
into
cmp
and
jg
push
sbb
sbb
mov
jae
and
push
arpl
into
(bad)
and
inc
jo
sbb
jecxz
sti
enter
(bad)
inc
shr
mov
ja
and
dec
dec
out
(bad)
jmp
mov
sub
jno
and
xchg
dec
movs
cs
aam
and
inc
mov
loop
mov
adc
pmulhuw
popa
fninit
jo
cli
adc
jg
jmp
mov
dec
daa
retf
aad
ret
pusha
mov
pushf
push
shl
inc
jge
stos
xor
bound
cmp
pusha
cs
mov
fs
repz
aaa
je
sub
sub
push
cs
sub
ja
aas
aas
jge
aam
jp
mov
add
xchg
aas
ja
outs
in
mov
cmps
aas
std
pop
xor
cmp
mov
loope
mov
iret
sub
mov
pop
add
mov
mov
(bad)
fnsave
push
adc
pop
sbb
mov
call
mov
aam
cmp
(bad)
mov
add
fild
add
daa
shl
stos
lahf
sub
xchg
cdq
jo
sahf
cmp
push
pop
movs
out
shl
push
or
add
imul
cwde
push
xor
sub
pop
call
jbe
sub
mov
or
jecxz
das
xor
pop
adc
cwde
fwait
popa
and
pop
lahf
inc
movs
cmps
mov
dec
adc
mov
add
imul
mov
xchg
jmp
imul
pusha
rcr
out
sub
mov
mov
cmp
dec
jp
jge
stos
or
mov
inc
sti
shl
push
(bad)
adc
jp
sar
(bad)
popf
xor
jmp
mov
jbe
stos
xor
stos
sub
fucomp
ret
leave
add
jb
mov
xor
in
inc
cwde
push
lods
pop
jmp
xchg
or
push
adc
gs
xchg
jno
mov
mov
or
or
add
scas
jne
ja
inc
sahf
inc
(bad)
fsubr
and
sub
cmps
jg
and
fsubr
shr
mov
mov
and
jns
repz
pop
(bad)
or
lds
sub
loope
test
bound
das
jmp
(bad)
mov
aad
dec
jmp
mov
and
aas
lods
push
adc
out
leave
std
push
xchg
fmul
fs
mov
(bad)
(bad)
and
jmp
shr
nop
(bad)
sbb
nop
cmp
ficomp
or
iret
or
inc
cmps
pop
xor
stc
aas
bound
adc
add
jae
jnp
ror
jge
pop
(bad)
cmps
jbe
addr16
daa
out
outs
mov
je
scas
xchg
aas
shr
mov
cdq
mov
mov
pop
or
mov
ret
inc
xchg
pop
cld
ins
ret
jmp
sahf
mov
or
or
jbe
out
adc
(bad)
icebp
or
mov
ds
mov
lods
xor
sub
xchg
lahf
jg
push
cmps
add
pop
jecxz
push
movs
test
mov
fadd
shl
test
xor
lahf
scas
dec
(bad)
sub
rol
mov
and
icebp
(bad)
stc
mov
test
gs
pusha
adc
add
xchg
cs
je
sub
jg
sub
ins
xor
sbb
push
or
mov
jnp
pop
xor
cs
dec
mov
es
(bad)
fs
cmp
aas
jo
xor
sub
lds
out
dec
cs
xchg
lahf
rcl
mov
sar
pop
cs
mov
mov
in
xrelease
(bad)
(bad)
std
lods
cli
test
or
(bad)
mov
fisubr
arpl
xchg
push
(bad)
lds
ins
js
ret
cs
lock
in
fbstp
add
(bad)
cs
cmps
jmp
cs
lods
repz
sahf
bound
sbb
sbb
daa
arpl
lahf
rcr
sbb
mov
repz
cs
cli
mov
cs
fld
jae
xlat
xchg
mov
pop
mov
outs
add
sub
and
cs
or
inc
cmps
cmp
mov
scas
inc
loop
aad
inc
add
inc
ret
test
fwait
dec
test
shr
mov
lods
div
fsubr
call
mov
mov
push
dec
and
add
adc
inc
pop
and
or
sbb
push
outs
es
aad
in
xchg
push
scas
cli
cs
pop
cmp
sub
adc
daa
bound
leave
cmp
call
mov
mov
je
es
fiadd
inc
push
xor
dec
out
out
pushf
lods
je
mov
add
gs
imul
push
sbb
out
and
aas
pop
jge
cs
sbb
xor
lea
addr16
sahf
cmp
cs
(bad)
(bad)
stc
jo
xlat
in
cs
mov
loopne
mov
out
out
lods
call
mov
cs
fadd
fcom
pop
fnsave
mov
les
std
mov
push
add
sub
cs
jle
sub
xchg
scas
adc
bound
retf
pop
push
repnz
fucomp
mov
jnp
or
popf
xchg
es
pop
data16
mov
leave
sti
(bad)
into
retf
push
jg
push
dec
sub
xor
inc
imul
les
(bad)
mov
xor
fisubr
push
ds
ror
mov
push
pop
ds
sub
push
cdq
int3
test
(bad)
push
or
sub
imul
jl
dec
es
leave
push
fdiv
pusha
enter
mov
(bad)
mov
xchg
jl
inc
mov
or
mov
adc
ss
lea
adc
rol
cmps
ficomp
mov
les
ficom
and
cmps
push
lds
stc
ror
in
or
test
loope
jmp
fndisi(8087
(bad)
or
push
push
jns
leave
retf
ficom
jmp
inc
jnp
iret
cs
je
hlt
test
out
adc
inc
fimul
in
cmp
arpl
outs
sub
inc
mov
mov
pop
leave
ins
(bad)
mov
movs
jmp
xor
xor
fcomp
loopne
add
cs
rcr
(bad)
cs
jb
xchg
loop
into
dec
xor
xor
stos
pusha
cs
xchg
cs
loop
push
aas
mov
dec
push
ror
sbb
push
pop
aam
(bad)
(bad)
sub
(bad)
mov
inc
int3
outs
out
cs
gs
movs
jb
std
ror
pop
stos
nop
adc
outs
loop
mov
cli
int3
or
sti
scas
sbb
mov
lods
neg
fild
loopne
(bad)
call
and
aaa
js
test
cmp
xchg
imul
jg
das
add
lds
pop
cmp
mov
das
cs
iret
aam
neg
sbb
mov
jecxz
dec
les
das
adc
ret
mov
mov
cmp
shr
dec
gs
(bad)
lock
ds
cmc
sub
dec
ret
sbb
sub
in
inc
jo
scas
sbb
push
mov
xor
adc
xor
cs
es
mov
ds
cs
pop
or
jge
cmovbe
scas
sbb
jns
push
cs
scas
dec
rol
mov
test
sahf
or
or
mov
pusha
cdq
rol
aad
dec
inc
enter
imul
dec
test
mov
fld
sub
adc
in
add
test
or
sbb
je
pop
sbb
or
outs
loop
jp
pusha
push
push
sahf
push
pop
aaa
mov
enter
dec
cs
jecxz
jno
shl
ja
pop
inc
(bad)
push
push
or
or
cs
lds
inc
loop
cmp
mov
aas
jmp
fimul
dec
cwde
ret
int3
adc
in
fdivr
adc
not
mov
xchg
or
or
mov
jmp
cmp
pop
inc
jnp
push
sbb
inc
sub
pop
(bad)
and
inc
cs
mov
loop
pop
imul
dec
or
aam
aas
(bad)
cli
into
add
cmc
adc
adc
ret
dec
out
rcr
xchg
push
xchg
outs
ds
aam
(bad)
iret
adc
cmps
mov
aad
mov
mov
adc
stc
inc
jae
ret
sub
mov
pushf
shl
and
mov
dec
movs
mov
idiv
xlat
fsubr
pop
cmc
shr
std
xchg
das
mov
jp
ins
aam
cs
outs
es
cmp
fld
call
out
stos
imul
adc
out
mov
sahf
mov
dec
fist
inc
shr
pop
ret
cs
ja
clc
cmps
xor
push
pop
(bad)
dec
mov
and
xchg
sbb
cs
mov
retf
cmps
xchg
(bad)
or
das
lods
mov
cs
pushf
lahf
icebp
dec
leave
mov
fsubr
xor
daa
mov
(bad)
rcl
jle
add
cmp
cmp
xchg
dec
sub
jecxz
(bad)
data16
sbb
mov
xor
mov
mov
dec
call
adc
cmps
fisttp
cmp
push
jp
shl
(bad)
outs
adc
pop
mov
mov
or
je
adc
pop
xlat
rcl
mov
sar
rcr
jle
mov
and
jno
ja
or
jo
mov
dec
mov
mov
cmps
inc
add
pop
mov
push
dec
addr16
xor
xchg
mov
ja
(bad)
sub
mov
lea
les
into
fcom
lods
xchg
ror
clc
xor
fstp
(bad)
fsubr
rol
push
mov
cs
movs
popa
push
fistp
pop
cs
and
aas
add
daa
(bad)
loop
rcl
push
ret
cmp
lds
(bad)
out
js
jne
cdq
mov
and
jno
mov
shl
scas
xchg
xor
jae
into
call
jne
and
mov
cs
dec
mov
pop
not
add
push
cs
lods
ss
push
out
mov
imul
adc
aam
dec
sub
pop
xor
jmp
push
inc
cs
hlt
lock
(bad)
(bad)
mov
and
pop
sbb
sti
call
fwait
inc
adc
jg
lock
sbb
(bad)
nop
hlt
out
lds
push
cs
mov
inc
repz
jp
mov
push
cli
or
jbe
loopne
mov
(bad)
cmp
xor
sbb
rcl
adc
(bad)
cmps
and
test
push
repz
aam
add
and
and
or
lock
xor
lahf
jo
sbb
popf
jp
cs
push
mov
inc
or
lock
enter
aad
xchg
inc
mov
rol
pop
cli
and
sub
test
jge
(bad)
call
and
mov
lock
cmp
retf
mov
pop
fnstsw
adc
stos
loop
in
movs
clc
sar
push
mov
test
les
mov
pop
pop
iret
(bad)
mov
(bad)
in
(bad)
loope
popa
cmp
jmp
in
bound
jmp
mov
push
push
sbb
mov
xor
mov
cmps
fst
xor
das
push
pop
fiadd
add
loope
into
sahf
xlat
test
cdq
daa
sub
sbb
push
xchg
(bad)
in
sub
addr16
or
adc
inc
(bad)
shl
dec
cmp
and
int
xor
push
xor
xchg
xor
jns
push
jmp
loopne
imul
or
sub
push
(bad)
and
cmp
adc
add
xor
arpl
cmp
sub
and
retf
shl
xor
and
inc
out
pop
(bad)
movs
cs
lods
mov
ins
cmpxchg8b
(bad)
into
cmp
inc
cs
loope
js
pusha
jnp
cs
add
push
cmp
dec
or
cs
and
mov
mov
scas
or
aas
pop
ins
inc
jb
fcmove
cs
mov
daa
and
popa
cs
mov
sub
mov
sbb
pop
xchg
xchg
or
test
xchg
mov
mov
shl
jae
adc
aas
bound
cs
adc
jmp
test
or
adc
cmc
sub
lea
ficom
jle
pop
add
enter
sbb
push
es
cdq
xchg
sub
(bad)
dec
add
dec
dec
mov
dec
push
jnp
xchg
push
outs
mov
mov
and
inc
scas
cmp
dec
pop
bound
pop
push
and
dec
rcr
xchg
cwde
push
out
fidiv
cmp
jae
cs
inc
jb
call
or
adc
test
mov
xor
popf
jae
push
and
jle
daa
mov
call
pop
enter
add
mov
(bad)
xchg
and
cmp
dec
or
mov
ins
mov
cmp
cs
mov
xor
mov
pop
jne
int3
jecxz
(bad)
arpl
fdiv
(bad)
(bad)
loopne
data16
(bad)
mov
out
adc
fs
fadd
sub
aam
out
pop
mov
hlt
jl
ja
in
mov
out
jecxz
dec
inc
sbb
mov
inc
xor
pop
sti
pop
ins
leave
xor
inc
push
popf
xchg
xor
aaa
mov
cld
adc
push
test
sar
sub
fwait
mov
leave
sub
test
test
ret
out
inc
pop
call
jmp
je
jb
push
leave
out
sub
and
aad
sbb
dec
jno
imul
leave
repz
jmp
repz
stc
movs
cmps
xchg
ret
mov
push
push
(bad)
popf
xchg
inc
dec
loopne
xchg
mov
fwait
call
scas
das
rol
inc
inc
jo
sub
jge
mov
icebp
(bad)
not
mov
int
cmps
jae
inc
rcl
ins
sub
inc
and
fs
cmc
jmp
shl
(bad)
or
aas
xor
mov
jno
test
xchg
sub
gs
aam
adc
(bad)
fnstenv
inc
add
pop
outs
rol
sub
adc
leave
push
or
jno
ret
retf
ret
retf
mov
dec
sub
jne
jecxz
inc
cmp
les
push
lock
test
retf
cmp
pushf
mov
(bad)
push
sbb
dec
inc
push
xor
and
jmp
dec
fidiv
push
pop
pop
adc
(bad)
push
retf
inc
or
cmps
dec
jl
jle
in
inc
xor
outs
jne
outs
mov
lods
cs
scas
sub
out
imul
jle
mov
scas
aam
or
mov
or
ds
repz
out
fbstp
(bad)
loopne
sub
call
test
pop
cmc
js
les
xlat
aad
sub
push
gs
repnz
fld
ins
sub
cwde
jo
push
mov
aad
cs
dec
ja
sbb
cs
push
lods
mov
cmc
lods
xchg
push
sbb
inc
(bad)
sbb
iret
sub
sub
sub
sub
std
out
inc
outs
cs
jmp
scas
int3
test
std
lods
adc
loope
jmp
lahf
aas
gs
push
sti
cs
aad
fistp
dec
push
pop
imul
into
loop
and
mov
mov
push
xchg
xor
cs
add
push
loopne
imul
imul
sar
hlt
in
mov
(bad)
mov
push
aas
cmp
and
xchg
add
push
pop
mov
leave
cs
gs
(bad)
and
xchg
int
sbb
icebp
popf
and
es
jb
and
scas
cld
imul
test
jmp
sbb
push
jno
cld
add
mov
pop
loopne
and
aaa
and
lods
adc
and
lods
xchg
scas
icebp
pop
jmp
mov
add
jp
push
fld
mov
xchg
shl
lds
retf
movs
retf
mov
sbb
cs
xor
aaa
call
sahf
adc
inc
jno
xor
pop
cs
fdiv
cmps
fcomp
xor
cmp
out
add
leave
mov
dec
mov
push
mov
aad
ins
cmp
cs
in
jmp
neg
stos
xlat
jmp
jmp
clc
mov
test
test
xor
(bad)
mov
dec
out
adc
ins
(bad)
cli
mov
js
sbb
int
pushf
shr
daa
sbb
jle
or
add
push
cs
lea
xchg
jg
daa
shl
pop
(bad)
pusha
call
mov
fstp
les
sbb
push
ja
jo
xchg
(bad)
cmp
xor
or
pop
test
call
fdiv
cdq
int
fadd
fsubrp
int
out
inc
div
cs
dec
gs
ss
sub
rcl
cmc
mov
sub
jmp
leave
mov
mov
lds
(bad)
mov
int
add
push
pusha
movs
iret
jge
push
bound
into
or
xor
popf
cli
cmp
outs
xor
xchg
scas
pop
je
test
cmps
jb
cmc
sbb
mov
xor
std
xor
and
push
xchg
and
ins
cmp
retf
pusha
rcr
inc
xchg
dec
retf
jbe
lds
shl
jo
jge
scas
and
cmp
(bad)
jmp
xchg
push
sub
mov
add
and
mov
scas
call
(bad)
out
movs
cwde
lea
loopne
cmp
push
ror
neg
out
in
pop
daa
adc
or
sub
sub
pop
out
ds
test
repz
int
inc
add
imul
and
dec
daa
cmc
ja
js
iret
inc
push
(bad)
es
dec
lods
jmp
iret
inc
pop
sbb
lahf
ds
bound
jle
push
les
mov
xchg
(bad)
test
xor
mov
xor
push
fdivr
dec
out
push
mov
adc
cmp
mov
dec
inc
(bad)
sub
ins
cmps
xlat
ret
loopne
arpl
pop
sbb
dec
jle
sbb
pop
sub
out
enter
es
jmp
xor
inc
dec
dec
adc
mov
inc
jae
in
mov
sub
inc
xor
cmp
je
cmp
mov
jnp
or
nop
lods
enter
enter
scas
in
fwait
fs
sub
pop
add
xor
cmp
sub
retf
fwait
pop
mov
scas
fnstcw
jp
or
cs
js
out
test
or
std
jb
rol
aaa
int
(bad)
cmp
retf
repnz
push
aas
xchg
ret
or
cmp
les
mov
loope
dec
jo
pop
and
xchg
xchg
sub
push
rcl
xchg
(bad)
(bad)
loopne
and
cs
sub
aas
stos
cs
(bad)
jg
mov
mov
push
jl
sub
cdq
out
sbb
aad
cs
xchg
nop
adc
push
sub
imul
jmp
sub
int3
out
cmps
push
push
out
ud1
outs
push
cmps
inc
je
iret
push
popa
fdiv
sbb
into
in
mov
test
mov
and
or
std
add
cs
es
push
sub
mov
mov
xor
xor
sub
or
outs
aam
mov
(bad)
repz
js
push
scas
or
and
push
or
mov
imul
mov
xor
push
div
fcomip
ins
cs
sbb
cs
add
xchg
sti
mov
adc
jb
into
inc
clc
arpl
mov
div
jno
stos
mov
sbb
sar
xchg
sbb
(bad)
fs
pushf
mov
adc
push
mov
xor
js
and
sar
cmps
lock
pop
test
in
add
(bad)
cmp
test
fs
and
icebp
cli
mov
pop
repnz
add
out
in
(bad)
mov
mov
mov
cmps
add
sub
iret
test
inc
push
cmp
mov
fdivr
into
clc
fistp
push
aam
sbb
or
sub
pop
(bad)
mov
test
sbb
inc
and
xchg
dec
jne
cmp
lds
(bad)
int
inc
cmps
mov
sub
loop
lods
out
jmp
cwde
cmc
cmps
jno
mov
push
lods
inc
daa
outs
sub
pop
xor
adc
dec
mov
add
fsubr
push
or
outs
add
sbb
dec
aam
mov
movs
sbb
and
(bad)
in
out
sbb
shr
push
sub
leave
icebp
rol
or
inc
stc
sub
xor
ds
adc
fwait
or
pop
stos
ret
nop
test
push
cmc
jbe
jecxz
cmp
mov
je
dec
jp
out
jno
outs
or
test
test
jmp
leave
movs
push
xchg
mov
pushf
(bad)
push
sar
call
retf
adc
mov
jmp
push
xchg
hlt
add
shl
cld
sub
aam
adc
jp
out
ds
scas
sub
data16
jl
jg
repnz
or
das
call
scas
in
push
cmp
aas
mov
daa
cmp
jecxz
movs
add
jns
mov
hlt
dec
sbb
xor
pop
mov
mov
ins
inc
into
mov
jns
scas
cs
loop
in
cmp
cs
imul
jmp
cmp
mov
jb
out
cdq
lea
pop
fldcw
cli
adc
mov
push
mov
shr
icebp
xchg
mov
add
scas
inc
shr
lods
xor
shl
push
lahf
dec
push
pop
fisubr
adc
add
pop
sbb
fwait
mov
fldcw
push
xor
add
dec
xor
adc
push
inc
imul
pushf
fwait
repnz
test
nop
popf
and
mov
aaa
das
sub
sbb
add
lock
add
retf
rcl
or
jns
test
cmp
jno
cwde
adc
sub
mov
push
cmps
stos
dec
mov
div
cmc
mov
xor
fcomp
loope
out
ret
cli
aas
rcr
cli
fadd
mov
pop
ins
(bad)
cs
xchg
mov
mov
push
scas
lock
scas
jnp
rcl
rol
mov
add
aam
das
out
cmp
and
add
inc
mov
mov
scas
or
mov
jmp
(bad)
daa
pop
bound
outs
push
sub
cmps
and
stos
add
(bad)
sub
outs
and
push
sbb
fist
push
jp
repz
xor
ins
cmp
inc
xor
pop
outs
pop
fisttp
aam
lds
ret
cmps
mov
add
cs
xor
adc
xor
ret
and
shl
inc
mov
repz
mov
xor
xlat
fmul
inc
add
mov
test
mov
rcl
pop
ret
and
nop
rol
shr
pop
fs
jmp
jo
cmp
and
stc
and
dec
sbb
push
pop
or
data16
dec
jns
add
adc
cmps
mov
jae
pop
dec
dec
jmp
mov
test
add
lock
das
ror
std
cs
clc
jecxz
leave
int3
lahf
push
mov
xor
push
mov
ja
test
or
test
jbe
xchg
scas
imul
in
cmps
xor
push
lock
seto
sbb
icebp
shr
inc
pop
out
leave
xchg
dec
mov
sub
mov
ja
daa
lds
stos
(bad)
ds
cmp
xor
mov
jl
cs
dec
sub
dec
and
leave
dec
inc
out
loope
push
call
ins
jmp
aad
xchg
cwde
sub
dec
push
lahf
out
and
jne
jb
cs
aam
in
fwait
rcr
outs
out
jle
mov
dec
add
adc
lock
cs
jnp
xor
jbe
and
add
cmp
pop
dec
int3
dec
mov
sbb
mov
sbb
add
jae
callw
xchg
in
les
shl
and
jo
and
out
push
push
inc
dec
xor
jge
mov
mov
fst
das
dec
sub
jl
rol
cs
pop
int
repnz
pop
sbb
(bad)
enter
push
mov
sbb
mov
jns
cwde
xchg
add
sbb
xor
cs
out
stos
cmps
movs
repnz
test
stc
outs
pop
dec
inc
cmp
fsub
enter
adc
les
aas
sub
pop
(bad)
xor
ja
and
jecxz
and
pop
sbb
push
or
cs
xor
cmp
mov
dec
into
ss
bound
and
cs
out
cmps
in
sub
test
js
popf
mov
outs
cmps
mov
xlat
test
xor
xor
sbb
jo
lods
clc
dec
lea
pop
shr
jnp
cld
shr
enter
scas
xchg
xor
out
bound
cs
outs
nop
xor
sbb
dec
mov
push
aaa
fwait
sar
into
adc
pop
and
mov
pop
retf
test
cmps
cs
mov
dec
mov
fwait
(bad)
xor
pop
mov
mov
sbb
inc
xchg
cs
sbb
push
das
xor
ja
movs
popa
test
outs
or
in
or
mov
inc
sub
jo
push
adc
ficomp
(bad)
in
mov
inc
data16
xchg
cmp
cmp
inc
xlat
pop
bound
add
fadd
mov
adc
pop
(bad)
jne
xor
push
push
xchg
ret
sub
cmp
add
push
cs
xor
repnz
in
cs
sbb
popw
pop
bound
or
xchg
cmps
adc
ds
fiadd
sub
aaa
xor
adc
push
cs
mov
pop
or
test
adc
cmp
push
or
cs
jns
or
mov
and
jle
dec
imul
and
jle
cs
in
cmp
fs
rcl
add
and
outs
in
icebp
mov
jbe
inc
ret
aas
xchg
aas
sub
mov
rcr
jnp
cmp
cs
rcr
mov
out
mov
push
push
scas
xor
adc
jmp
mov
cs
stos
icebp
and
adc
imul
(bad)
ret
cs
push
(bad)
rcl
shl
sbb
mov
ror
aam
iret
pop
stos
push
sub
(bad)
jmp
pop
dec
push
xchg
mov
sbb
nop
iret
aam
mov
sub
leave
pop
call
dec
ja
mov
sub
imul
sub
add
xlat
sar
out
xor
rcr
shl
(bad)
inc
and
(bad)
xchg
cmp
mov
leave
push
sbb
cmc
adc
das
loop
(bad)
and
ror
movs
scas
or
cmp
dec
xor
js
ret
xor
aam
retf
xor
pop
into
push
daa
mov
jg
cmpxchg
or
fild
repz
outs
jle
adc
inc
cli
mov
ret
imul
(bad)
lahf
jno
xor
sub
cld
fucomip
push
leave
add
mov
inc
sar
lds
sahf
cld
aaa
scas
cmp
or
or
gs
jne
and
pop
sub
add
jae
in
push
repz
mov
mov
sbb
pop
lahf
push
lock
cs
daa
mov
mov
std
outs
out
fnstcw
loop
xor
into
jns
xchg
cmp
adc
leave
scas
stos
adc
inc
clc
rol
dec
dec
out
mov
aas
or
pop
int3
stos
dec
xor
sbb
sub
int3
mov
stos
push
out
daa
inc
mov
adc
sub
or
pop
cmc
add
popa
jp
mov
inc
shl
add
shl
jmp
fidivr
(bad)
xor
into
xchg
jns
bound
cli
scas
xor
inc
shl
out
dec
into
or
sahf
cs
xchg
int3
fnsave
cwde
stos
in
cs
js
lea
xlat
xchg
or
aas
arpl
xchg
xor
or
jb
cmp
gs
outs
push
in
icebp
cs
jae
or
cs
mov
in
push
push
jbe
adc
test
fdiv
enter
mov
pushf
xchg
fdiv
jmp
ficom
inc
mov
mov
mov
xchg
push
mov
outs
jge
aaa
dec
adc
pop
leave
xadd
arpl
and
scas
(bad)
inc
xchg
in
cs
test
fcom
je
lds
ds
push
mov
sub
into
test
mov
clc
adc
out
repnz
popf
adc
test
repz
inc
jg
rol
push
pusha
lahf
or
push
clc
mov
popf
(bad)
scas
shl
push
jb
bnd
in
dec
call
pop
cmps
mov
sbb
je
hlt
movs
in
jg
sbb
in
sbb
cs
call
scas
inc
jno
jns
mov
and
jne
mov
sub
xlat
sub
daa
jg
and
adc
jno
jo
cs
rcr
fwait
mov
mov
pop
das
and
test
xlat
mov
fbstp
sti
test
(bad)
xor
mov
fimul
fs
enter
add
es
pop
sub
add
adc
(bad)
cmc
xor
pop
fs
movs
dec
adc
loopne
xchg
mov
push
push
in
jmp
cmps
fnsave
leave
pusha
or
out
mov
xchg
and
imul
fyl2xp1
or
retf
int3
fidivr
cmps
sbb
xchg
jmp
out
push
sub
xchg
ficom
out
(bad)
repnz
stc
jae
out
xor
jmp
ds
or
dec
and
addr16
pop
jecxz
mov
sub
rcl
and
fcomp
push
jge
xor
mov
sbb
in
dec
fiadd
cmp
js
daa
mov
cmc
pop
push
dec
inc
imul
pop
adc
push
es
cmp
mov
leave
js
or
add
add
fidivr
fist
aas
call
push
mov
jp
sbb
gs
ss
mov
mov
(bad)
aam
or
inc
add
(bad)
hlt
push
sbb
sub
jge
jae
dec
and
or
xchg
push
inc
cmps
sub
cmp
inc
stos
cmp
adc
mov
sub
mov
push
(bad)
and
mov
adc
mov
inc
mov
xchg
inc
push
or
js
push
jo
xchg
cdq
sahf
aaa
inc
enter
arpl
test
not
pop
sub
arpl
in
js
pop
stos
cs
lahf
xchg
shr
cs
jp
mov
in
adc
jb
sub
cs
mov
mov
xchg
mov
mov
fxch
and
sub
(bad)
cli
and
rcl
push
(bad)
adc
sub
dec
into
xchg
fptan
scas
sub
(bad)
jmp
pop
mov
movs
out
inc
pop
mov
jge
jg
or
xchg
std
adc
aaa
pop
push
xchg
sub
fidivr
dec
add
sbb
push
push
push
pop
test
(bad)
pop
cs
ss
push
hlt
mov
cs
or
mov
sbb
scas
pop
repz
(bad)
pusha
gs
add
fcmovb
call
jmp
sahf
add
retf
mov
cmps
mov
(bad)
retf
xchg
dec
jp
jle
or
(bad)
xlat
(bad)
cmp
cmp
mov
cmp
mul
xor
in
(bad)
mov
push
test
pop
push
bound
push
add
pop
or
xor
jmp
cmc
xor
pop
add
dec
dec
daa
fidiv
ins
into
jno
(bad)
(bad)
fisubr
test
inc
pop
jno
(bad)
je
dec
mov
jge
mov
fmul
mov
and
push
aad
add
arpl
je
lods
leave
sbb
fwait
outs
jmp
sub
mov
mov
ficomp
sbb
aas
mov
out
imul
push
cs
xchg
inc
pop
test
add
jne
cs
ja
jno
bound
push
out
or
sub
xor
repnz
jl
sub
in
(bad)
fidiv
(bad)
scas
inc
inc
test
xor
rcl
mov
jge
jb
les
push
pop
pop
push
out
hlt
cs
mov
xorps
scas
adc
lahf
add
mov
es
test
shl
dec
retf
cmp
pop
cmp
arpl
mov
cld
jnp
sub
or
cmp
(bad)
icebp
push
push
out
mov
xor
hlt
xchg
movs
dec
xchg
jmp
cs
or
sbb
push
add
ss
loopne
sub
retf
inc
or
push
sub
or
sub
dec
fsubr
jbe
dec
jno
out
cs
pop
retf
test
int
cs
inc
mov
das
mul
adc
out
clc
scas
xor
movs
or
iret
in
mov
mov
add
scas
xor
sub
inc
adc
and
retf
outs
mov
cs
push
lea
fs
loop
xchg
sbb
push
cs
in
pop
pop
mov
std
xor
or
addr16
or
sub
das
imul
cdq
sub
mov
xor
push
cld
addr16
sub
dec
push
icebp
call
mov
mov
xor
cs
push
and
rcl
sbb
add
out
mov
adc
mov
adc
inc
or
sub
cmps
cmp
rol
sbb
jge
mov
aad
(bad)
retf
dec
pop
fsub
movs
pop
enter
ja
sub
scas
ret
cs
inc
adc
jmp
cmp
sbb
pop
or
xchg
cdq
stc
xchg
mov
je
mov
sahf
hlt
mov
mov
xchg
cs
out
jle
int3
bnd
adc
add
cmp
pop
pop
and
or
imul
xlat
outs
jo
mov
mov
std
leave
or
shl
scas
rol
jle
jg
lahf
and
push
push
adc
mov
xchg
sub
stos
add
jne
fdivr
pop
xchg
jmp
jl
dec
adc
jae
add
aaa
fdivr
cmc
in
and
dec
xchg
in
mov
xchg
imul
dec
xor
aam
mov
adc
mov
and
push
pop
push
test
xchg
xor
mov
sbb
adc
jns
cmp
jmp
es
hlt
xchg
loop
or
fsubrp
pop
call
xchg
jle
or
loopne
xor
sub
in
femms
scas
add
jae
add
dec
pop
push
inc
jge
adc
daa
jl
in
fcomp
jnp
leave
push
call
push
mov
mov
sar
xor
or
prefetcht1
in
outs
jns
xchg
fsubr
daa
mov
dec
mov
jle
dec
or
in
mov
xor
dec
push
fcmove
call
inc
jo
daa
mov
pop
mov
out
lods
popa
and
cs
mov
sbb
(bad)
push
jl
mov
cmc
in
mov
call
das
mov
daa
cmps
add
mov
popa
loope
ret
sbb
mov
mov
mov
std
xchg
popa
outs
lods
adc
and
in
in
enter
and
jns
or
adc
outs
xor
popa
pushf
jmp
jns
aaa
loope
lahf
into
rcr
bound
mov
dec
cs
xlat
jae
cmp
pusha
fisubr
jecxz
retf
pusha
adc
cmp
pop
cs
retf
clc
out
jae
rol
lods
fsub
stos
fsubp
push
jno
xlat
xor
ss
adc
bnd
cs
dec
push
lods
and
arpl
pop
stc
retf
cmp
into
sub
and
pop
(bad)
pusha
stos
mov
cmp
cs
pop
dec
ss
sub
popf
and
dec
test
sbb
inc
shl
mov
xor
repz
das
ret
or
gs
mov
sub
inc
out
repnz
push
dec
cmps
fs
push
daa
cs
mov
sti
xchg
adc
mov
outs
lods
or
push
sub
out
fwait
xchg
shl
and
adc
push
xor
adc
pop
cld
into
mov
mov
and
arpl
ret
addr16
fimul
push
aas
cs
fsubp
pop
pop
gs
xchg
push
pushf
cmp
xchg
push
jne
daa
(bad)
sbb
(bad)
inc
mov
or
imul
jle
lock
fs
sbb
push
mov
fidivr
bound
jmp
cs
clc
cmp
add
sub
push
sub
fs
mov
sub
cs
mov
fmul
ret
jmp
cs
mov
mov
sbb
ja
cs
sub
je
push
jl
ds
lock
lea
inc
shl
xor
imul
push
enter
movs
lock
ret
(bad)
inc
mov
cmp
aad
pop
and
adc
xchg
sbb
mov
daa
jecxz
dec
rol
adc
mov
loope
xchg
repz
push
xchg
sub
icebp
aad
aaa
es
test
ret
mov
leave
sahf
call
push
iret
mov
adc
cs
push
addr16
cs
aam
scas
ficom
jno
outs
add
cs
dec
ret
inc
in
mov
std
out
loope
fmul
lods
and
cs
jne
or
or
loop
inc
(bad)
stc
jmp
adc
fisttp
push
fwait
mov
pop
or
movs
leave
sbb
mov
cmp
pop
outs
dec
jl
mov
xchg
out
std
into
dec
mov
xchg
or
push
aaa
adc
adc
fisttp
pushf
ins
cld
inc
cs
sub
test
dec
cs
pushf
lods
adc
mov
sub
nop
xor
xor
mov
push
pop
sbb
neg
and
lea
sub
ret
test
cwde
mov
pop
lds
or
out
ficomp
cs
sub
xchg
ds
cs
cmp
fwait
sbb
fmulp
or
jnp
jge
inc
or
jl
ss
stos
cmp
push
cmp
jmp
lods
test
sub
pushf
mov
jnp
cs
retf
pop
test
ret
mov
adc
(bad)
stos
mov
mov
aaa
retf
xor
scas
rcl
mov
mov
sub
hlt
mov
push
inc
inc
pop
sub
mov
push
xor
leave
lds
jmp
inc
inc
je
cwde
out
out
(bad)
and
scas
add
ror
movs
iret
popf
xor
pushf
(bad)
inc
mov
dec
push
aaa
and
loopne
adc
in
scas
enter
(bad)
cmp
outs
push
xor
xchg
push
inc
ds
dec
js
call
es
lods
ss
jmp
aaa
pop
aad
push
push
dec
jmp
jecxz
in
inc
sti
and
dec
or
enter
gs
jns
cmp
add
cmc
je
sub
push
movs
cdq
hlt
cmps
xlat
dec
(bad)
dec
lods
out
sub
xchg
fsubr
test
ror
sbb
mov
mov
into
cld
int3
and
sub
mov
mov
stos
call
movs
jno
mov
mov
aas
cmp
inc
mov
add
stos
jmp
sti
or
icebp
adc
xchg
and
jp
mov
out
lods
daa
push
outs
push
cs
mov
test
retf
cmp
jecxz
xchg
int3
outs
push
add
cmps
mov
adc
cs
test
retf
cs
mov
test
xchg
hlt
adc
int3
mov
outs
inc
adc
and
xor
jecxz
pop
cs
jmp
lods
jmp
stos
or
mov
lock
sar
cli
aad
jno
outs
ds
iret
jmp
cmps
pop
push
(bad)
cwde
ins
cmc
cs
pop
ret
jg
test
mov
and
sub
cs
or
xor
je
adc
push
leave
push
pop
neg
fdivr
fdivr
cs
jmp
mov
sbb
xchg
push
mov
cmp
xor
daa
outs
cmps
pop
sbb
jns
mov
mov
push
mov
ja
adc
push
js
loop
pop
jns
outs
mov
xor
mov
push
cmp
sub
add
call
cs
out
(bad)
retf
out
add
test
das
ficomp
shl
dec
in
shl
jle
sub
daa
jnp
mov
cld
retf
push
xor
cs
pop
lods
div
pop
dec
add
sub
xor
cmp
adc
mov
xor
test
mov
scas
add
xor
xor
dec
pop
push
sbb
jns
clc
inc
xchg
fwait
or
in
mov
jnp
test
adc
loop
(bad)
stos
mov
xchg
enter
xor
ret
inc
sub
and
jg
arpl
add
dec
fimul
jmp
inc
and
(bad)
mov
mov
inc
push
fidivr
in
inc
xor
(bad)
retf
xor
aam
dec
fsub
dec
jecxz
out
fdivr
jae
inc
sub
adc
icebp
mov
cs
sbb
mov
ret
wrmsr
pop
sub
or
ins
in
cs
iret
sub
neg
inc
cs
xchg
jg
mov
or
mov
adc
xchg
test
and
clc
scas
dec
or
mov
push
or
aaa
pop
mov
scas
mov
scas
sbb
ucomiss
sub
ja
xlat
cs
rcl
mov
cmps
test
sub
std
pop
daa
inc
cmp
sbb
pop
add
(bad)
add
aam
sub
fsubr
icebp
push
pop
inc
outs
leave
dec
scas
add
push
imul
shl
lock
call
sub
test
movs
mov
xor
cs
popa
retf
mov
jns
iret
cs
je
test
loopne
and
repz
into
stc
test
or
fsubr
or
inc
fs
arpl
hlt
cs
mov
sbb
cs
jne
mov
xor
inc
pushf
(bad)
or
push
mov
aad
bound
fldcw
xor
movs
adc
or
push
add
and
jb
(bad)
mov
sub
mov
imul
pop
adc
xchg
jne
arpl
cs
xor
sub
pop
mov
outs
retf
fist
pop
test
ret
jae
bound
hlt
div
fsubr
inc
in
jle
cmp
loope
(bad)
js
fidivr
and
or
sub
movs
fbld
xor
jle
in
push
sbb
into
jno
sub
cwde
jmp
scas
cli
call
xchg
cs
shr
or
daa
out
jl
adc
xchg
mov
pop
popa
xor
xor
movs
and
imul
adc
repnz
pop
scas
jg
dec
test
push
mov
aaa
ins
jmp
xor
and
mov
mov
scas
dec
cmp
cs
or
daa
outs
add
pop
out
call
leave
out
arpl
js
xor
mov
xor
pop
ror
push
sbb
inc
in
sub
jmp
lods
cmp
outs
mov
mov
lock
aas
stc
or
pushf
mov
enter
mov
call
add
lods
jl
data16
push
pushf
pop
jb
and
pushf
push
sub
mov
pusha
retf
outs
(bad)
outs
push
dec
fcom
out
popf
jp
pop
sbb
cdq
sbb
sub
and
xchg
and
mov
rcl
xchg
or
data16
pop
lock
or
xor
sbb
xor
fsubr
sub
sbb
xlat
jl
or
sub
enter
and
nop
aas
mov
in
dec
push
pop
adc
cmp
cs
mov
pop
push
and
pop
pop
inc
sub
sub
xor
daa
and
sub
or
push
xchg
hlt
out
cmp
jl
jmp
sub
daa
loope
test
into
int3
ret
cs
es
repz
(bad)
aam
fidivr
iret
sahf
pop
out
arpl
sub
test
and
push
pop
pop
and
adc
cs
mov
xor
scas
mov
jb
pop
jnp
pop
xor
cld
loopne
cs
sbb
xor
out
into
push
call
xchg
add
jge
cs
out
adc
or
sbb
fcom
outs
cmp
push
add
fiadd
or
pop
fisubr
xchg
lods
mov
int
and
cmp
scas
lds
out
and
cmp
ret
fisub
cmp
out
mov
nop
sahf
sbb
and
out
(bad)
xor
scas
add
daa
imul
pop
aam
bt
aas
xor
dec
cmps
retf
into
sbb
mov
arpl
sbb
mov
or
imul
and
mov
adc
xchg
xor
(bad)
sti
mov
dec
ss
xor
sub
aam
jmp
std
in
rol
push
lahf
nop
jecxz
retf
leave
cmp
ror
pop
and
cld
mov
pop
cmp
xor
push
cmp
mov
and
sbb
es
jns
add
scas
and
imul
movs
xor
jo
mov
sbb
xor
xchg
dec
leave
test
cmp
mov
xor
imul
imul
xchg
mov
aad
mov
(bad)
pop
jo
leave
sub
jle
mov
cs
inc
les
fistp
xchg
pop
inc
xor
ins
dec
jb
sub
push
dec
out
sub
rcr
push
push
outs
pop
mov
lds
pop
push
cmp
out
mov
inc
sbb
aaa
jle
push
dec
and
xor
mov
(bad)
cmp
fisubr
ficomp
push
ja
xor
push
mov
shr
mov
mov
mov
push
mov
sub
(bad)
sbb
int3
fucompp
mul
fcom
outs
mov
xor
add
xor
jnp
inc
int3
retf
div
add
and
rcr
f2xm1
xor
push
movs
jno
jmp
push
sahf
sub
ins
iret
cs
loope
mov
scas
rcr
sub
iret
jo
cmp
xchg
into
add
dec
dec
ret
xchg
adc
std
adc
or
pop
scas
xchg
jb
and
movs
sbb
cs
push
jbe
(bad)
es
cs
jmp
lock
call
clc
mov
cs
hlt
mov
or
lds
adc
mov
dec
xchg
mov
test
(bad)
and
or
xor
xchg
out
push
aas
jg
mov
into
mov
dec
jnp
adc
leave
xchg
jns
cmps
mov
retf
(bad)
cmp
sub
pop
loopne
addr16
and
data16
dec
pop
add
rol
repnz
sub
out
leave
mov
ja
pop
mov
and
iret
sbb
rcr
dec
or
cmp
or
mov
or
inc
fs
xlat
enter
push
lock
push
aas
out
push
mov
outs
or
(bad)
push
adc
mov
push
pop
sbb
fidivr
inc
out
add
xor
push
in
cs
sahf
or
jo
mov
leave
(bad)
cdq
dec
jg
dec
mov
xor
push
ja
std
add
mov
into
xor
not
cli
ret
mov
test
xchg
loope
out
ror
xor
mov
cs
and
mov
in
xchg
dec
lds
cs
repnz
mov
test
ret
cmp
sahf
ficom
jg
(bad)
mov
sub
(bad)
pop
bound
cs
mov
stos
les
inc
mov
add
popf
inc
or
cs
sub
xor
(bad)
rcl
mov
push
push
ret
sub
pop
popf
out
or
xchg
sub
retf
clc
rol
(bad)
mov
aaa
popf
(bad)
in
jae
ss
mov
push
cmp
inc
dec
lahf
xchg
test
ss
cmp
std
sub
retf
add
sti
mov
out
mov
push
xchg
jbe
cs
mov
icebp
push
and
das
xor
(bad)
and
pop
rcl
stos
int
add
xor
jns
aaa
fild
xchg
sub
pop
inc
pop
inc
cmp
mov
cs
mov
pusha
out
cmp
jae
lods
leave
ins
inc
ret
cmps
(bad)
retf
(bad)
ins
push
ds
push
dec
xchg
test
dec
out
xor
dec
inc
sbb
outs
jbe
jae
aas
mov
dec
pop
sahf
or
scas
sub
xchg
or
(bad)
sbb
jbe
or
es
fs
rcr
sub
not
(bad)
sbb
ja
mov
pop
jne
rcl
mov
ret
jne
cmp
jns
cdq
test
test
xor
fwait
pop
leave
rcr
xor
adc
cmps
jo
jno
jp
xchg
jle
cdq
add
sub
ins
push
out
and
mov
sub
outs
cmp
aam
in
outs
fld
call
mov
mov
xor
(bad)
out
xchg
data16
cmp
lds
fs
mov
aad
dec
pop
pop
(bad)
out
and
dec
clc
nop
(bad)
ficomp
fnstsw
inc
cwde
aad
sub
test
enter
push
and
jg
push
test
aaa
mov
addr16
jg
pop
hlt
cmps
stos
pop
test
sbb
mov
scas
pop
or
push
cmps
cs
(bad)
mov
mov
rcr
mov
sub
aam
cs
fsubr
je
push
pop
cs
jbe
pop
lods
or
mov
adc
paddq
(bad)
in
(bad)
and
xchg
fsub
sbb
(bad)
aas
test
jns
add
xchg
xor
inc
mov
xchg
sub
jg
xchg
es
cmps
lods
mov
and
push
int3
lock
cmps
in
push
sub
ds
push
mov
leave
xchg
pop
or
add
jge
push
inc
lahf
(bad)
xor
in
adc
test
(bad)
cmp
add
inc
sti
retf
lahf
loope
or
in
scas
popa
dec
mov
fldcw
in
out
dec
xchg
outs
cmp
mov
mov
into
cmc
enter
push
repnz
addr16
popf
sub
imul
mov
cs
sbb
xor
fdivr
out
retf
push
mov
cs
mov
into
jp
out
lods
xchg
pop
(bad)
sbb
in
sbb
xchg
pop
or
push
stos
mov
cmc
mov
ds
xchg
adc
cs
xor
or
adc
cmp
inc
inc
lahf
daa
(bad)
and
jg
pop
push
cs
mov
pop
sbb
pop
outs
pop
add
add
shl
int3
inc
ret
cmp
in
stos
shr
lock
inc
leave
add
xor
rol
cmp
mov
sbb
scas
jnp
sub
mov
jbe
cmp
mov
cs
daa
push
sub
mov
push
int
fistp
jb
xor
clc
outs
sbb
cs
mov
mov
aaa
dec
dec
lahf
popf
pop
neg
mov
inc
or
jne
jmp
mov
dec
mov
(bad)
jmp
fimul
or
out
sub
xor
inc
jl
(bad)
push
sbb
jle
daa
pop
imul
mov
aaa
jg
das
adc
loop
cwde
push
add
gs
(bad)
mov
cmp
test
out
int3
daa
test
pop
ins
lds
mov
pop
add
push
dec
fwait
inc
(bad)
(bad)
ins
xchg
xor
lods
in
iret
clc
adc
jge
cmps
adc
mov
stos
push
dec
aad
pushf
lock
xchg
call
and
repz
mov
ror
push
push
jp
cmp
outs
in
fild
mov
mov
les
shl
(bad)
xlat
xor
pop
add
fmul
stos
test
mov
cmp
fisub
inc
push
arpl
out
inc
sub
jmp
add
add
xor
xchg
xchg
(bad)
push
leave
push
(bad)
sub
int
lock
jg
xor
sub
lods
add
out
xor
jge
cli
sbb
add
gs
cs
jae
stc
mov
sub
push
add
(bad)
ss
es
inc
pusha
outs
outs
fsub
lds
fisubr
out
adc
mov
inc
cs
ror
test
and
lea
or
inc
xor
imul
shr
enter
loope
je
rcl
adc
and
or
pop
cmp
pop
and
lock
cmp
ja
jp
iret
clc
into
cs
push
dec
pop
and
adc
adc
ucomiss
popf
push
(bad)
mov
jmp
arpl
(bad)
or
inc
adc
pop
aaa
cs
cwde
leave
inc
dec
mov
fld
pushf
push
div
and
cmp
(bad)
scas
data16
mov
pusha
or
add
out
test
cli
jne
adc
dec
or
pop
fucomi
enter
xor
xor
cmp
cmp
mov
push
in
lock
(bad)
hlt
test
outs
dec
fsubr
ficom
shr
mov
or
xor
dec
arpl
ret
xor
mov
adc
lock
nop
or
and
imul
ret
out
or
inc
sub
mov
cmp
jle
out
(bad)
hlt
movs
pushf
sbb
push
les
jne
mov
ror
cwde
mov
mov
mov
imul
cs
(bad)
std
mov
cs
loopne
and
cld
mov
cs
push
out
outs
mov
or
cdq
scas
mov
cmp
sub
cs
adc
inc
scas
sub
(bad)
retf
push
cli
push
push
sub
fsubr
cs
aas
sbb
jl
add
jl
retf
out
and
xchg
fwait
cmc
icebp
push
jns
cdq
cwde
pop
pop
push
cs
push
cmp
and
mov
test
cs
repz
push
imul
push
pop
and
pop
out
pop
xor
cs
sub
std
js
outs
sub
daa
mov
scas
sahf
mov
test
xor
xor
add
daa
pop
push
cwde
arpl
(bad)
adc
pop
mov
daa
inc
mov
add
adc
push
inc
dec
aas
scas
retf
sub
out
sub
stos
or
mov
cmp
push
div
call
cs
fwait
ror
retf
adc
call
or
jbe
pop
outs
(bad)
push
cs
pusha
fist
pop
mov
mov
cmp
daa
or
xor
imul
les
sub
mov
enter
sub
cs
xchg
or
aad
int
add
fucom
scas
mov
mov
nop
mov
dec
sub
xor
inc
jge
sbb
xor
or
or
sub
dec
test
xor
cwde
jg
jmp
shl
call
sbb
and
cmps
inc
jle
xchg
mov
shl
imul
push
icebp
mov
push
js
cld
cs
out
loope
mov
les
in
add
xor
or
pushf
jmp
lds
jecxz
adc
push
sets
sub
sbb
lea
sti
mov
mov
sub
aad
in
test
mov
dec
cs
inc
jb
jle
mov
(bad)
cmps
mov
(bad)
xor
out
push
cs
inc
push
rcr
cdq
mov
xchg
mov
fisub
test
xchg
jl
jmp
mov
cs
mov
lock
sbb
(bad)
scas
ret
inc
ror
sub
push
xor
jmp
xor
out
or
push
test
iret
outs
stc
jle
shl
arpl
and
cmp
dec
pop
test
sar
(bad)
cs
leave
aad
add
fidiv
cmp
jmp
inc
shr
test
and
adc
cs
mov
xchg
pop
mov
xchg
jbe
xor
jnp
hlt
sbb
xchg
arpl
jns
cs
adc
push
add
fs
adc
adc
dec
into
push
in
xchg
mov
sbb
lds
fmul
add
out
call
jae
sbb
inc
imul
and
sbb
(bad)
fstp
sbb
xchg
add
pop
cs
adc
pop
xor
aas
retf
jmp
xchg
jne
push
mov
into
cmc
mov
cs
movs
sub
movs
shr
lods
stos
daa
push
dec
jl
into
cli
popf
pop
push
shl
pop
push
jmp
aas
xor
shl
call
fimul
mov
pop
pop
loop
in
imul
pop
retf
popa
dec
dec
(bad)
sub
loopne
cwde
xor
stos
aas
jle
mov
sub
jno
inc
xchg
imul
add
cmp
outs
and
mov
jle
add
es
mov
xlat
mov
aaa
cli
repnz
add
fdivr
pop
lds
fld
dec
adc
sar
jge
lock
repz
sub
dec
outs
aas
mov
call
jbe
adc
(bad)
xor
jp
xor
or
push
push
mov
(bad)
imul
xchg
outs
out
daa
leave
ins
push
push
jnp
push
push
xor
out
pop
and
mov
(bad)
pop
(bad)
sub
cmps
rcr
cdq
pop
add
pop
add
lea
mov
push
cmps
push
pmaxsw
ret
arpl
sbb
sar
jp
mov
(bad)
push
pushf
fsub
sbb
je
les
das
inc
lds
popf
push
leave
dec
jmp
(bad)
jmp
das
cmps
(bad)
xlat
out
scas
outs
inc
out
xor
test
jp
adc
dec
leave
(bad)
xor
test
inc
xor
or
(bad)
out
mov
movs
add
push
push
popf
in
fs
push
and
cmp
cdq
leave
out
jb
add
shl
imul
cmps
pop
f2xm1
aaa
mov
test
test
fsubr
or
cmps
jecxz
xchg
fisttp
mov
(bad)
mov
test
mov
inc
pop
ins
dec
pop
xchg
mov
lods
out
mov
test
scas
std
push
jecxz
adc
push
add
cwde
std
arpl
jmp
and
adc
dec
xlat
imul
ins
rol
inc
mov
jnp
push
sbb
inc
jg
in
lock
or
mov
xchg
clc
jno
cmp
scas
mov
push
xor
xchg
idiv
je
mov
xchg
lods
sahf
xor
dec
dec
outs
or
sub
ss
xor
pop
and
pop
bound
into
jp
or
stos
lds
inc
aad
fiadd
cs
mov
push
xchg
and
adc
sub
push
inc
je
adc
push
cmc
cld
mov
rcl
call
dec
cs
jmp
pop
push
ret
adc
add
dec
add
leave
xor
jbe
inc
outs
ret
cdq
aaa
xor
mov
sbb
test
iret
ins
xor
xlat
call
xor
dec
push
inc
mov
adc
or
mov
mov
jecxz
daa
repnz
les
ds
push
lds
xchg
jnp
loop
adc
or
aaa
call
mov
push
ret
dec
gs
sub
enter
test
mov
fwait
leave
pop
add
sub
ins
(bad)
aad
push
sub
or
sbb
push
xor
adc
mov
adc
jge
jnp
or
inc
xchg
xchg
cmp
outs
jae
dec
sub
(bad)
mov
mov
fs
lods
into
nop
jp
lock
mov
add
inc
daa
push
adc
or
xor
xchg
retf
inc
(bad)
xchg
adc
pushf
div
int3
inc
sti
cld
push
ret
test
push
mov
rcl
out
add
dec
cs
repnz
mov
arpl
push
lock
daa
mov
push
sti
js
jbe
icebp
in
xor
popf
cdq
outs
or
sub
(bad)
cs
idiv
cs
(bad)
jg
sub
loop
jbe
shr
lahf
cmps
cmp
stc
mov
cs
sbb
outs
sbb
pop
cmp
fdivr
sub
pop
mov
push
xor
sbb
test
test
lahf
jno
mov
mov
addr16
pusha
cmp
repz
popa
add
in
sub
jo
aad
mov
call
fwait
shl
test
or
stc
sbb
or
or
pushw
pop
fs
sbb
xor
and
jns
cs
pop
outs
xor
cwde
aam
mov
cs
mul
xor
je
push
call
add
jle
leave
and
lods
in
xchg
std
(bad)
stos
or
cmps
sub
test
cs
sar
xchg
imul
(bad)
cmp
jmp
aam
pushf
or
mov
je
pop
mov
xor
xor
sub
aam
stos
dec
int
mov
shl
(bad)
(bad)
imul
pop
jb
ins
push
jae
out
sub
pop
push
jmp
arpl
out
mov
cmp
test
jno
mov
and
jle
mov
add
jno
jecxz
stos
push
ds
imul
nop
(bad)
cli
pop
pop
mov
repnz
sbb
ins
sub
inc
fistp
inc
sub
cmps
dec
pop
pushf
fisubr
ret
jg
mov
(bad)
sub
mov
xor
(bad)
lahf
into
aas
fsubr
sahf
out
repnz
ret
hlt
cs
clc
mov
fdiv
imul
shr
push
jb
(bad)
mov
inc
jl
mov
xchg
mov
add
fimul
cld
adc
daa
push
pop
mov
add
cs
inc
or
or
outs
repz
addr16
or
pop
test
out
mov
imul
xchg
and
movs
pop
xor
lods
xchg
loope
or
(bad)
push
add
inc
push
jnp
sbb
int3
jo
cmp
fiadd
cs
call
bswap
in
mov
(bad)
div
arpl
cs
sub
pop
pop
js
xor
xlat
(bad)
cs
or
inc
xor
cs
dec
outs
(bad)
ror
dec
inc
out
xor
pop
adc
add
push
icebp
add
adc
(bad)
(bad)
call
lahf
inc
sub
hlt
test
sub
push
push
mov
or
adc
repnz
shr
mov
mov
push
cs
jb
add
adc
retf
adc
and
jp
add
add
std
pop
sahf
jo
cs
inc
or
xor
xor
sub
mov
or
xlat
shr
mov
das
pop
fld
and
mov
mov
and
leave
cld
mov
js
pop
je
mov
mov
dec
mov
sbb
cmp
mov
push
add
xor
jmp
scas
and
jle
xor
(bad)
xlat
loopne
dec
(bad)
icebp
push
es
mov
xor
test
in
xchg
scas
jmp
cmp
leave
mov
sub
aaa
scas
inc
(bad)
test
(bad)
lods
das
xor
inc
push
clc
cwde
adc
fcmovnbe
mov
dec
lods
stos
adc
sbb
mov
mov
push
push
sbb
cmps
mov
sub
rcl
dec
aad
(bad)
bound
xlat
lods
iret
arpl
aas
jne
jo
inc
mov
lods
and
rol
sub
arpl
scas
or
fdiv
inc
push
mov
(bad)
push
mov
mov
inc
mov
jmp
jns
cmp
push
mov
xchg
cmp
mov
ins
xor
in
rcr
xor
popf
sub
xor
cmps
shr
sbb
jp
sub
inc
outs
lods
jmp
inc
pop
cs
push
mov
iret
sbb
imul
mov
lock
bnd
add
inc
aas
add
fs
aad
cwde
mov
(bad)
ss
lock
and
cs
test
and
movs
call
add
out
sub
cs
adc
aad
push
mov
mov
lods
and
sbb
dec
jmp
jmp
je
xchg
pop
scas
scas
cmp
jo
xor
pop
lea
shr
xchg
or
add
push
jecxz
cs
jl
adc
push
out
mov
daa
sub
cs
test
add
mov
push
cmp
out
sahf
call
jg
cs
sub
xchg
cmp
add
push
mov
push
jne
xor
and
fidiv
cs
inc
imul
enter
sbb
xchg
xchg
retf
test
fstp
jmp
jne
or
sbb
sbb
repz
xchg
into
cs
sbb
bound
popa
xor
(bad)
rcl
jo
addr16
sub
out
mul
jg
xchg
sub
out
(bad)
imul
fst
scas
scas
push
hlt
cs
inc
stos
out
mov
stos
mov
adc
push
enter
mov
push
mov
and
xchg
push
sahf
cs
lahf
jnp
cs
pop
mov
cs
in
in
scas
test
cs
aas
inc
xor
xchg
fwait
gs
mov
sahf
and
loop
rcl
out
pusha
push
cmp
pop
dec
xchg
mov
mov
div
push
cli
push
aam
ret
rcr
or
and
fild
mov
stos
sti
mov
xchg
fisttp
inc
shl
fadd
mov
imul
add
test
fisub
add
sbb
out
mov
int
cs
cmp
dec
mov
or
sub
inc
ss
adc
cdq
and
jle
and
(bad)
jle
pop
inc
cmp
mov
fistp
mov
pop
scas
mov
xor
jne
ja
xor
adc
cs
mov
lods
push
lds
mov
push
mov
mov
lods
fisttp
icebp
and
cwde
jle
int3
or
aad
outs
and
call
and
cs
sbb
mov
mov
dec
cmp
ret
cmovno
out
pop
add
mov
inc
fsubp
fwait
cs
das
outs
gs
mov
xor
dec
sti
aaa
fst
mov
sub
sub
push
xlat
and
xchg
retf
xor
ins
pop
mov
mov
inc
sbb
sti
fcomip
repz
inc
cs
sahf
xchg
adc
inc
sbb
jo
dec
jns
push
sub
or
daa
push
cmps
mov
mov
loop
mov
xor
not
(bad)
mov
and
int
shl
repnz
imul
add
mov
dec
push
push
sbb
jle
mov
and
and
das
jl
dec
sti
mov
leave
sub
xor
fnstenv
cmp
icebp
sub
leave
sub
or
es
fcmove
sub
mov
mov
leave
push
sahf
jg
fistp
stos
sub
aam
xor
jmp
dec
adc
(bad)
jg
rcl
outs
je
sti
jbe
ss
fild
in
pop
push
out
repnz
xor
push
jbe
push
sub
dec
cwde
movs
je
adc
xchg
sub
stos
shl
out
jg
ds
push
fistp
test
js
cmps
sbb
pop
mov
and
in
add
sub
push
fadd
sahf
mov
inc
mov
jo
leave
and
(bad)
push
mov
and
mov
adc
les
sbb
ds
pushf
sub
jns
jo
cmp
out
rcl
stos
mov
cmps
pop
cdq
loop
push
pop
sbb
fdivrp
adc
or
sub
ss
sub
mov
add
cmp
xlat
xor
enter
pop
idiv
les
leave
cs
(bad)
dec
leave
(bad)
lock
fidivr
jae
sub
mov
sbb
mov
pop
push
or
cwde
mov
test
mov
jg
and
out
jmp
xchg
iret
icebp
and
scas
xor
or
xlat
cs
les
fimul
iret
dec
jle
lahf
dec
jp
and
data16
sub
and
push
and
in
aad
push
mov
xchg
shl
xor
fadd
pop
and
data16
fs
and
mov
push
sbb
arpl
out
shufps
push
mov
out
mov
cs
cmp
ror
test
add
pop
out
popa
pop
mov
ja
push
cs
adc
jb
xchg
jg
(bad)
xchg
out
xlat
test
dec
push
outs
movs
mov
push
mov
mul
rcr
test
not
push
dec
or
jecxz
push
mov
fisub
mov
aas
push
fs
mov
ja
aas
ffree
pusha
mov
das
xchg
xor
and
push
(bad)
mov
push
call
cmp
inc
lods
bound
popf
pop
ds
outs
pop
push
and
cs
enter
pop
mov
add
mov
dec
or
adc
js
fs
inc
xchg
cmp
and
mov
mov
cmp
xlat
jmp
mov
inc
adc
inc
jb
adc
and
int3
mov
in
push
shl
xchg
add
inc
pusha
into
int
or
pushf
inc
push
and
fild
sbb
mov
ficomp
popf
sahf
sub
out
xchg
cs
jg
push
enter
and
retf
repz
in
xor
pusha
jecxz
mov
scas
mul
fild
xchg
in
mov
add
sbb
adc
(bad)
fimul
sub
jmp
push
or
cs
jo
lods
jne
cmp
jb
pop
jp
mov
dec
adc
mov
aam
sbb
add
test
pop
jmp
add
outs
and
leave
fmul
xor
jno
mov
push
sub
mov
or
mov
jo
mov
cmp
cmp
inc
jle
scas
sub
sub
ret
xchg
fst
repz
pop
add
pop
dec
mov
add
mov
fstp
int
rol
frndint
and
outs
sar
mov
push
inc
cmp
add
cmc
push
pop
or
adc
fidivr
inc
cmp
cdq
or
aas
stos
mov
fadd
(bad)
cmps
in
jne
push
pushf
mov
mov
and
jns
cmp
mov
bound
xor
add
xchg
xor
mov
push
push
js
sbb
sar
ins
sub
lods
xor
out
iret
test
dec
adc
aas
daa
in
dec
cmps
add
(bad)
hlt
dec
xchg
cwde
cmp
or
test
imul
icebp
jmp
pusha
sub
add
addr16
pop
add
pushf
aas
mov
inc
adc
jbe
in
dec
mov
mov
bound
push
jge
aaa
fmul
mov
lods
jecxz
ret
or
fst
xor
test
in
loope
(bad)
mov
inc
add
aas
inc
cmc
dec
test
inc
push
cwde
fld
pop
test
retf
arpl
icebp
in
jmp
or
jnp
lahf
sbb
mov
imul
gs
sahf
dec
push
sbb
ret
sub
mov
sbb
push
out
or
jp
data16
sub
inc
adc
aam
and
xrelease
dec
cmp
fisubr
xor
push
and
dec
and
std
adc
iret
cs
repnz
cld
aas
shl
scas
scas
cs
jne
jg
movs
clc
sub
adc
daa
ja
daa
lods
push
or
pop
out
xchg
mov
xor
or
inc
dec
push
repnz
aaa
ret
and
xor
cdq
ror
and
fwait
xlat
xor
les
repz
sbb
outs
dec
and
xchg
pop
add
(bad)
aaa
xchg
push
xchg
lds
pusha
push
push
fisubr
mov
jb
(bad)
idiv
pop
cs
in
repz
fdivr
pop
xor
pop
ins
test
cs
xlat
mov
and
push
dec
mov
clc
cs
push
(bad)
add
loopne
aam
xor
pop
mov
mov
cld
mov
mov
sub
scas
mov
add
neg
in
sbb
ss
push
popa
and
aam
inc
sub
add
fcom
or
outs
push
and
enter
and
js
(bad)
push
xlat
cld
ficomp
shld
push
in
inc
fucomp
or
sar
jo
adc
or
arpl
mov
(bad)
cmps
jp
push
mov
xchg
add
sahf
and
mov
sub
and
add
pop
jns
adc
sbb
retf
fiadd
ret
lods
out
shl
out
lock
sub
pushf
(bad)
mov
add
mov
lea
fldcw
and
mov
cs
xchg
ret
xchg
jns
jg
out
mov
into
pushf
cmp
cs
push
add
test
cmp
dec
push
scas
stc
cmp
jns
pop
fsubrp
ffreep
and
xor
sbb
push
pop
cld
xor
repz
pop
push
push
push
cld
(bad)
fst
cmp
jnp
(bad)
fs
push
ins
cs
fsubr
sti
fadd
push
sahf
xor
xor
sbb
lods
and
(bad)
xor
pushf
jmp
scas
lahf
cld
test
adc
or
mov
in
stos
pop
int3
and
push
xor
pop
sub
adc
add
sbb
jg
cmp
arpl
dec
mov
dec
clc
push
lock
add
pop
lods
cs
xchg
jp
xchg
mov
mov
or
jecxz
cs
test
push
nop
jne
cs
push
retf
jnp
mov
cs
js
pop
adc
pop
pop
inc
xor
(bad)
mov
jnp
(bad)
movs
fsub
inc
scas
nop
or
push
aaa
sub
xor
cmps
mov
cmp
fstp
stc
inc
fdivrp
cs
xchg
inc
stos
dec
mov
jmp
sbb
daa
dec
(bad)
repnz
scas
push
sbb
cwde
shld
scas
push
and
repz
bound
lea
imul
cmp
daa
(bad)
xor
hlt
arpl
outs
call
pop
cmp
dec
hlt
fcmove
cs
out
xchg
ficom
cs
out
into
and
adc
stos
xchg
shr
mov
dec
int
fmul
and
pusha
dec
xor
mov
sti
add
mov
cmp
jmp
xchg
adc
lock
mov
adc
push
push
lea
ins
es
xor
push
and
(bad)
jmp
add
mov
sub
(bad)
xor
leave
les
add
xchg
inc
popf
pop
fdivr
out
add
data16
repz
ins
jge
or
jo
mov
lock
leave
call
pop
and
xor
jecxz
movs
retf
lea
fld
aad
mov
stc
mov
cdq
retf
int
dec
test
leave
test
sub
iret
xor
cld
daa
div
pusha
adc
int3
mov
arpl
movs
dec
pop
mov
rol
retf
outs
fidivr
movs
sub
lods
or
jle
pop
fistp
aaa
cmps
jmp
je
mov
leave
(bad)
pusha
mov
push
stc
cmps
ins
xchg
enter
(bad)
fucomip
cs
mov
daa
ret
push
adc
dec
adc
jmp
mov
xor
xor
add
mov
or
cmp
cmp
xchg
jno
je
pop
scas
sbb
(bad)
mov
(bad)
xor
inc
outs
push
fstp
call
cs
sub
ins
out
cdq
jg
and
cs
mov
cs
test
cmp
jns
sub
push
pop
dec
sbb
retf
retf
movs
pop
cs
mov
mov
mov
enter
int3
xchg
and
leave
aad
push
and
nop
or
bound
(bad)
out
movs
mul
xor
sar
inc
cs
pop
add
sub
shl
cmps
mov
jge
xor
call
pop
cs
(bad)
sbb
add
shl
ss
mov
out
pop
xor
mov
dec
fcmovnu
cs
sti
mov
jg
nop
repnz
dec
sub
and
cli
aam
mov
or
repz
xchg
fwait
jl
add
cmp
xchg
test
adc
or
mov
push
ficom
aam
scas
cmps
idiv
ja
mov
add
cli
or
xchg
enter
sub
dec
bound
out
pop
in
cs
cli
inc
mov
add
cs
pop
xchg
addr16
mov
cs
jmp
push
scas
fbstp
iret
rcr
or
xchg
jo
imul
ins
pushf
cmps
xchg
xchg
movs
jecxz
lock
shl
jl
sbb
sbb
pop
dec
mov
pextrw
les
mov
push
sbb
xor
pop
out
adc
ins
add
mov
jb
jg
pop
stc
fistp
mov
(bad)
sub
fs
retf
dec
call
addr16
xchg
mov
sub
mov
pusha
or
adc
xor
push
mov
lods
out
outs
out
sti
out
int3
add
shl
fcos
xchg
sbb
into
jb
imul
cmp
ucomiss
call
adc
xor
push
sub
stc
repz
sbb
scas
loopne
mov
or
push
inc
inc
sub
mov
cmp
(bad)
mov
fwait
aam
addr16
mov
mov
cmp
jae
xor
test
lods
loop
int3
xor
push
shr
sahf
push
jae
ins
push
dec
icebp
xor
fsubr
jg
adc
push
jae
sub
aas
xor
cmps
test
mov
dec
dec
movs
inc
xchg
lahf
xor
pop
pop
outs
jp
into
aas
and
(bad)
mov
pop
movs
cmps
xchg
shr
dec
and
movs
sub
int
add
mov
ucomiss
push
pop
fisttp
cld
bound
jae
outs
push
add
aad
popa
(bad)
xor
jge
shr
clc
shl
imul
in
in
adc
xor
loopne
pop
rcr
bound
dec
outs
sub
sbb
xlat
add
pop
pusha
imul
(bad)
into
fstp
push
mov
jno
dec
mov
mov
movs
jmp
mov
adc
jge
pop
and
mov
mov
iret
mov
sbb
fsubr
lods
sqrtps
or
mov
cs
lock
mov
out
jne
mov
out
push
inc
adc
pop
adc
test
xor
cmps
setge
pop
shr
mov
or
cmps
icebp
ja
das
ins
gs
pop
xchg
mov
in
call
add
jp
jnp
lods
sbb
sbb
aam
xchg
mov
mov
cs
push
out
int
ss
xor
repz
stos
mov
dec
(bad)
push
lds
aaa
loope
sub
lods
fidivr
fnstsw
jne
cmp
in
mov
lds
xlat
xchg
sahf
adc
pop
mov
imul
mov
sub
push
test
mov
or
outs
and
adc
out
into
loopne
xor
inc
push
aam
test
add
stos
xchg
sbb
pop
jmp
push
dec
push
fsubr
scas
jb
iret
js
jo
retf
xor
jp
xor
mov
outs
stos
or
mov
call
xchg
int
inc
push
sub
jle
or
push
push
fisub
ins
adc
imul
pop
scas
xchg
mov
fidivr
sub
cmp
and
jno
mov
jg
jae
adc
xchg
xor
mov
movs
ja
push
retf
xchg
and
cmps
addr16
scas
leave
jae
cmp
out
cs
pop
dec
mov
pop
cmp
sub
xchg
repnz
add
and
aad
sbb
push
mov
jmp
or
mov
outs
int
mov
and
(bad)
push
push
das
shl
popa
jno
call
and
iret
xor
sar
add
mov
pop
xchg
push
scas
in
stos
in
dec
sub
aad
(bad)
loop
pop
shl
jmp
inc
add
test
inc
lods
call
inc
jge
or
dec
sub
mov
test
adc
sbb
mov
xchg
ss
jle
push
(bad)
dec
pop
cs
push
mov
xchg
cs
jb
sbb
out
cld
jle
gs
ror
or
js
ret
cs
xchg
mov
and
xchg
jno
jbe
loop
nop
cs
push
repnz
(bad)
(bad)
neg
lods
xchg
daa
adc
add
inc
xchg
cmps
in
leave
jl
shr
in
pop
stos
cmp
std
out
xor
inc
and
outs
push
push
add
sbb
sbb
mov
fsub
push
dec
adc
lea
jecxz
cs
mov
icebp
fld
addr16
(bad)
call
daa
cmp
bound
sbb
or
cli
(bad)
mov
pop
dec
pop
sbb
(bad)
jp
(bad)
call
mov
sbb
xor
add
out
(bad)
mov
aaa
mov
in
test
add
mov
out
cmps
ss
mov
and
or
scas
xor
pop
xor
mov
jge
cs
inc
mov
mov
mov
outs
test
cs
adc
lock
adc
dec
mov
test
loope
jmp
mov
in
outs
imul
adc
push
mov
cs
das
js
int3
aaa
scas
cmp
aam
inc
enter
pusha
vhsubpd
inc
cmps
xchg
push
stc
loop
sbb
out
jns
adc
(bad)
mov
sbb
cmp
mov
pop
push
jmp
and
scas
outs
cmp
sbb
icebp
push
sar
(bad)
inc
xchg
mov
test
int3
retf
xor
or
fisubr
mov
sbb
ret
xor
adc
mov
call
mov
jp
push
and
ins
cdq
leave
scas
mov
cs
cmps
(bad)
pop
sti
xor
leave
int
cmp
jl
ret
repnz
mov
mov
scas
cli
xchg
retf
lds
retf
aaa
cs
idiv
mov
pop
call
sub
sahf
adc
and
xchg
cld
out
push
mov
cmp
iret
add
movs
cli
(bad)
xor
(bad)
neg
hlt
add
cs
ss
cmp
add
and
fwait
pushf
push
sub
xor
push
aas
inc
lods
pop
and
xor
jl
cmp
ins
stc
mov
jno
lahf
jb
(bad)
inc
loope
lock
out
ret
mov
call
nop
xor
or
xor
cmp
xor
dec
inc
imul
popf
out
inc
out
adc
outs
aas
add
das
sbb
cmp
movs
push
imul
xchg
out
mov
mov
xor
inc
add
sahf
push
add
jmp
cmps
xor
cs
data16
sbb
rcr
outs
pop
xlat
cmps
pushf
mov
sub
cmp
mov
sub
and
in
loopne
xchg
out
push
and
outs
xor
js
add
or
fnsave
sbb
jmp
sub
enter
jle
or
in
cs
imul
cmp
sub
neg
ret
fimul
call
jb
pop
pop
lea
cmp
sub
dec
pop
fld
xor
into
jb
push
fisubr
adc
in
das
ret
sar
inc
push
pop
and
dec
js
xor
cmps
dec
out
out
daa
jns
sbb
mov
stc
add
icebp
mov
push
inc
push
pop
popa
stos
add
leave
xor
sti
pushf
and
int3
push
xchg
out
outs
cs
cli
inc
rol
fmul
jg
out
fldcw
sub
inc
cwde
mov
int3
add
loope
(bad)
nop
xchg
sub
jno
out
pop
xor
push
icebp
sub
je
mov
lods
push
jl
cs
push
aam
sub
cs
scas
fbstp
cs
xor
pop
in
inc
repz
test
mov
fisub
sbb
outs
test
popf
rcl
sub
sbb
xchg
cs
repz
ret
sbb
scas
pop
sbb
xchg
or
repnz
sti
imul
(bad)
imul
adc
push
jg
mov
sbb
or
cmc
ficomp
pop
popa
adc
or
jle
push
mov
pop
add
cmps
stos
call
sbb
push
cmp
sbb
sbb
push
xor
jecxz
loop
mov
mov
lds
sub
cli
add
out
bound
shl
sahf
mov
mov
mov
fadd
in
pop
or
inc
das
cs
call
outs
xor
mov
cs
adc
sub
sahf
mov
inc
bound
jmp
cs
pop
pop
cld
xor
aad
mov
pop
lock
cmp
out
jle
cs
(bad)
add
sti
or
cs
sub
inc
iret
cmp
and
daa
lods
xchg
cs
and
lock
push
mov
test
loope
imul
fucomp
add
mov
mov
rol
dec
scas
ja
pop
(bad)
(bad)
push
mov
mov
aad
cmps
std
test
dec
add
cs
es
cmc
lds
jp
mov
outs
rcr
mov
ss
into
js
sub
dec
cmp
pop
pop
sahf
in
cs
mov
int
js
in
aam
and
cmp
or
jns
fdivr
adc
sbb
mov
movs
daa
fld
push
xor
xchg
mov
(bad)
in
xlat
xchg
fild
xor
lds
das
shr
jmp
out
int3
mov
hlt
std
(bad)
loopne
sahf
adc
outs
push
into
in
enter
and
pushf
(bad)
dec
in
int3
pop
sbb
cmps
pop
mov
lds
mov
(bad)
nop
imul
das
test
out
mov
pop
inc
loope
outs
mov
sub
push
and
push
out
stos
movs
xor
fidivr
mov
mov
ss
ret
lahf
rcl
shl
jle
mov
fld
mov
in
jno
xchg
das
pusha
mov
in
sub
sbb
scas
add
es
out
and
and
mov
pop
je
adc
popa
xchg
pop
daa
loopne
fisub
sahf
cmp
cs
dec
or
sub
and
into
xor
jl
sbb
outs
nop
mov
mov
cs
add
xor
dec
retf
cdq
jp
jmp
aad
int
sub
out
rcr
std
mov
in
call
xlat
cs
mov
les
dec
cs
icebp
in
out
cli
lods
xor
test
cli
repnz
loope
scas
add
pusha
outs
cs
push
lahf
xchg
lods
xchg
sub
pop
shr
mov
adc
mov
mov
and
call
push
sub
add
repz
dec
ret
daa
stc
pushf
loope
xchg
sahf
mov
rol
lahf
jne
sub
xor
out
push
bound
test
std
cs
les
sbb
adc
pop
sbb
ds
dec
sbb
xchg
cs
gs
cmp
inc
movs
outs
mov
daa
getsec
pop
push
out
adc
jecxz
xchg
lock
js
inc
hlt
push
sub
imul
fisubr
jmp
mov
(bad)
sahf
cmp
loop
icebp
pop
stos
xor
fidiv
xchg
xchg
jnp
jno
repz
sub
out
and
stc
pop
icebp
mov
outs
pop
outs
cmp
adc
lock
mov
ret
push
push
push
pop
clc
xor
mov
scas
push
pusha
ficomp
add
mov
popf
jae
mov
in
xor
xor
dec
int3
inc
push
test
or
dec
pop
push
sub
cmp
jle
gs
bound
stos
or
je
sub
cs
jns
lds
sbb
sbb
push
xor
xchg
cmp
sub
or
inc
jo
and
cs
out
out
mov
in
mov
dec
push
or
cs
xor
and
popa
cs
or
mov
in
mov
cmc
sbb
addr16
outs
adc
test
stos
mov
jns
mov
and
xchg
mov
daa
add
imul
push
sbb
and
loopne
or
pop
test
outs
mov
scas
arpl
int
or
ror
adc
jmp
clc
push
dec
cmp
dec
popa
sub
cmp
cdq
fistp
push
outs
xlat
fwait
adc
in
mov
push
or
mov
inc
sti
cmps
int3
stos
dec
sub
not
neg
iret
out
into
jmp
jns
cs
cdq
mov
xchg
jle
sbb
fwait
enter
imul
leave
mov
shr
mov
call
cmp
push
pop
pop
cs
push
dec
pusha
popfw
lock
inc
or
push
jne
sub
clc
jo
pop
fs
mov
mov
pushf
sub
(bad)
cs
adc
mov
cwde
gs
mov
mov
stos
adc
es
pop
call
sub
mov
mov
je
retf
pop
shl
and
in
xor
std
pop
gs
jae
test
pop
xor
pop
jge
(bad)
cs
sub
xor
fwait
pusha
(bad)
mov
retf
int3
lods
out
adc
aam
dec
cmc
push
pop
lods
cs
xchg
mov
mov
xchg
mov
xchg
add
mov
lds
fnstsw
jbe
cld
inc
(bad)
sub
mov
pop
(bad)
mov
cmp
xor
jbe
int3
bound
lahf
cmp
out
daa
dec
movs
aad
push
into
scas
call
and
sub
push
xchg
push
es
mov
ret
cs
cwde
or
and
sahf
inc
sahf
xor
daa
in
jp
add
out
scas
pop
icebp
mov
xor
mov
js
sub
push
cs
idiv
nop
loopne
mov
stos
sub
dec
mov
pop
xor
xchg
jle
fwait
stc
mov
cli
cs
pop
dec
pop
adc
mov
movs
push
jne
mov
cmp
pextrw
push
daa
sbb
xor
pop
dec
mov
lea
push
mov
retf
mov
xchg
aas
jno
mov
ds
in
inc
int3
cmps
fimul
xor
fstp
int
das
mov
pop
sti
mov
cmp
stc
aaa
dec
mov
bound
and
pop
or
xchg
rcl
xor
jecxz
dec
pop
and
lds
cs
sub
dec
in
fstp
push
shl
(bad)
gs
mov
ja
lds
xor
sar
ins
loop
sub
push
hlt
xor
cs
fidivr
fadd
adc
lahf
mov
mov
and
movs
mov
xor
dec
dec
cs
mov
cwde
inc
ds
sar
push
or
ins
xor
cmps
xchg
add
vucomiss
mov
dec
jnp
xor
mov
inc
rcl
(bad)
jp
xor
push
dec
js
(bad)
cmc
sub
mov
(bad)
aam
add
out
and
ficomp
push
mov
test
sbb
jnp
cld
cmp
fdiv
add
lahf
dec
mov
add
xor
aam
fcom
adc
test
ret
adc
enter
sahf
pop
call
xchg
cs
jo
inc
(bad)
hlt
mov
les
cmp
daa
pusha
sbb
into
pop
jmp
fmul
lods
mov
sbb
mov
xor
mov
xor
in
adc
ucomiss
jle
push
mov
xchg
imul
mov
add
outs
not
sub
add
repz
(bad)
fnstsw
sbb
sahf
addr16
adc
scas
pusha
aaa
jp
or
sub
stc
dec
test
rcl
jb
fisubr
(bad)
out
movs
push
in
jg
shl
adc
test
div
lods
cs
dec
mov
pop
pop
cs
add
mov
scas
wrmsr
jno
out
jge
outs
xor
dec
ja
sub
loopne
sti
mov
aam
cs
popa
movs
retf
push
jmp
sub
imul
push
(bad)
in
inc
movs
adc
std
mov
fbstp
aam
push
mov
cdq
gs
std
cs
mov
cli
aam
xchg
jge
movs
int3
add
test
add
imul
repz
and
pop
(bad)
cs
scas
out
les
test
pop
xchg
cs
fiadd
push
scas
popf
xor
xor
loopne
jge
(bad)
adc
and
into
jmp
cmp
enter
xchg
and
cmp
push
retf
cs
mov
aad
(bad)
in
add
cmps
jmp
and
push
inc
loope
cs
inc
out
pusha
mov
xor
adc
mov
imul
mov
add
fstp
adc
fsubr
mov
pop
cmp
clc
jnp
cs
dec
bnd
fmul
and
inc
and
mov
fsub
dec
shl
and
and
dec
aad
push
cli
dec
xor
arpl
scas
(bad)
xchg
les
out
sbb
mov
lea
lods
mov
fldcw
push
adc
sbb
pop
fcmovnbe
pop
xor
and
pusha
sbb
xor
sub
pop
ss
fnsave
std
mov
dec
test
add
dec
dec
(bad)
mov
test
das
out
mov
mov
lahf
pusha
pop
adc
mov
push
aas
mov
nop
add
repz
leave
pop
(bad)
fdivr
sbb
call
icebp
add
cli
mov
xchg
daa
movs
cmps
dec
cmc
retf
addr16
mov
adc
call
or
adc
jge
pop
sub
add
mov
adc
and
fiadd
push
test
mov
aad
inc
test
dec
leave
push
mov
pop
das
push
hlt
arpl
dec
jmp
lods
jmp
sbb
mov
das
in
popa
sub
inc
call
push
mov
sub
dec
mov
aas
movs
pop
and
jo
push
inc
test
mov
push
xchg
and
add
pop
ret
xlat
ret
mov
push
(bad)
nop
call
(bad)
and
jae
test
jg
(bad)
daa
dec
xchg
fld
cmp
fs
pop
fdivr
xor
and
push
jno
mov
fdivr
(bad)
mov
mov
fs
(bad)
and
test
mov
adc
xor
(bad)
pop
sub
(bad)
jne
lock
ds
shl
push
dec
adc
mov
dec
mov
and
retf
pop
xchg
add
pop
cmc
ss
push
icebp
sub
pusha
mov
mov
mov
sbb
cwde
add
(bad)
mov
pushf
adc
sub
out
das
xor
outs
dec
mov
fldcw
sub
leave
or
push
dec
dec
push
xor
jmp
pop
lods
jo
xlat
and
xchg
push
cmp
inc
scas
outs
scas
jl
and
dec
mov
scas
xchg
pusha
sbb
dec
fwait
jmp
adc
into
mov
push
inc
jno
xchg
sbb
pop
xchg
push
cld
loop
add
and
cld
mov
call
cmps
xor
scas
lock
rcl
inc
mov
dec
xor
into
dec
(bad)
aam
and
cmp
pop
dec
or
cs
cmp
pop
and
ldmxcsr
dec
or
push
test
jmp
adc
out
jle
jo
mov
jne
scas
xor
mov
push
mov
push
lock
fs
sub
outs
push
fucomp
mov
mov
inc
add
ja
aad
in
xor
push
jle
jno
jl
das
imul
dec
(bad)
dec
ficomp
mov
push
jb
inc
or
popf
mov
sub
leave
scas
mov
shr
rcr
add
adc
inc
lock
jmp
xor
std
xchg
cli
psraw
xsaveopt
out
jp
push
or
cs
sti
mov
ins
xor
jge
in
dec
lahf
add
(bad)
cmp
idiv
mov
adc
xor
scas
xchg
sub
xor
and
sub
mov
pop
dec
daa
push
(bad)
ret
or
mov
push
cs
cdq
adc
mov
bound
ins
scas
out
inc
test
adc
es
(bad)
cmc
out
xlat
popf
daa
nop
xchg
movs
sub
into
es
and
and
fisub
mov
fcomp
cs
xor
jns
inc
xchg
popf
test
(bad)
push
stos
(bad)
fmul
jmp
popa
and
shr
stos
aas
mov
add
xor
lods
in
or
shr
sub
push
aas
stos
jle
hlt
mov
imul
fimul
sub
pop
ret
mov
pop
ret
cs
pop
aas
shl
test
and
mov
xchg
mov
in
outs
inc
scas
add
sub
pop
push
ret
test
sub
mov
xchg
push
cld
popa
or
jns
test
lock
js
rcr
cs
inc
dec
stos
loopne
ds
aaa
push
add
push
push
cs
scas
das
and
pop
fdivr
jl
scas
mov
adc
sbb
inc
outs
call
(bad)
sbb
out
cmc
adc
lds
(bad)
xchg
shl
ror
cld
lods
int3
mov
xchg
std
je
repnz
outs
mov
ins
sbb
mov
adc
xor
cli
arpl
sbb
test
faddp
ficomp
test
inc
mov
inc
in
mov
sbb
xor
adc
mov
sbb
mov
(bad)
jb
outs
mov
in
pop
add
pop
mov
and
inc
in
and
call
mov
jge
mov
mov
cmps
or
sub
push
leave
jge
jmp
test
(bad)
xor
add
inc
in
jecxz
arpl
fwait
and
repz
mov
jo
leave
sahf
fsubr
retf
mov
test
and
push
cdq
jb
jno
mov
adc
js
(bad)
mov
dec
sub
fld
mov
mov
pop
nop
dec
sub
leave
push
dec
sub
pop
sub
add
shl
sub
lods
push
fistp
sbb
xor
pop
into
sub
js
pushf
xchg
sub
jge
pop
jecxz
push
(bad)
cld
jp
mov
test
or
clc
stos
adc
(bad)
into
es
aas
test
mov
jnp
aaa
leave
bound
pop
ins
push
fdiv
aaa
or
dec
imul
inc
mov
mov
out
pop
xchg
dec
adc
push
and
dec
jl
adc
out
in
(bad)
daa
mov
and
test
mov
aad
(bad)
cmp
scas
aad
jmp
adc
leave
jae
mov
mov
(bad)
test
pop
int3
pop
push
and
fmul
jmp
pop
push
cmps
(bad)
out
gs
jb
push
sub
and
test
fcom
cmp
pop
and
pop
sub
add
fdivr
push
inc
mov
dec
ficom
out
adc
aaa
bound
jmp
mov
mov
mov
lods
mov
(bad)
out
xchg
jmp
and
jne
mov
ja
and
dec
jnp
in
jo
mov
loop
inc
adc
jmp
in
aaa
xor
inc
shr
in
mov
and
mov
push
fdiv
scas
shr
sbb
ins
xchg
movs
hlt
int3
aaa
pop
pop
xchg
sti
jle
xchg
dec
pushf
in
lods
pop
mov
data16
xor
push
mov
cli
fcom
es
sub
xor
jmp
in
(bad)
pushw
jo
cmp
xchg
push
cli
or
pushf
push
movs
sub
xor
inc
xchg
(bad)
leave
icebp
fcmovb
scas
ja
pop
cmps
fucomip
xchg
(bad)
sbb
mov
mov
aad
popa
adc
pop
out
mov
pop
and
cmp
xor
adc
sbb
cmp
retf
and
xchg
cdq
sub
dec
scas
inc
(bad)
js
(bad)
jbe
sbb
add
and
clc
test
cs
not
jb
(bad)
mov
sbb
xor
mov
jne
outs
rcl
call
daa
adc
pop
sbb
cli
adc
hlt
add
bound
aam
iret
and
cmp
sbb
push
aad
push
pusha
(bad)
lds
jnp
out
jmp
jae
loope
in
mov
scas
mov
xchg
sbb
pop
push
pop
push
test
add
addr16
call
mov
push
add
sub
cs
cld
mov
lock
pop
cs
sbb
xchg
or
in
sub
push
adc
sbb
mov
xor
add
xchg
dec
adc
xor
add
ins
pop
loop
xchg
inc
popf
imul
dec
enter
outs
push
ror
push
and
out
call
push
sub
push
retf
(bad)
sub
sub
jae
add
ss
cld
add
xor
out
inc
and
inc
dec
(bad)
dec
jl
cmps
data16
retf
mov
cld
jle
jp
mov
mov
arpl
push
iret
scas
sbb
fld
das
aas
sbb
jmp
xor
rcr
cmp
out
dec
push
cmp
iret
(bad)
and
fwait
adc
cs
fcom
out
div
test
rcr
sub
fwait
outs
jp
cs
mov
imul
cli
ins
inc
aad
sub
and
cmp
jne
push
clc
xchg
fisubr
sub
mov
addr16
and
cdq
aas
jp
pop
sub
push
mov
sub
jmp
pop
lods
xor
jns
sbb
or
out
movs
stos
pop
cs
scas
ins
jae
sbb
cs
sar
xchg
xor
cs
and
repz
or
nop
lds
jmp
imul
jns
sbb
xchg
pop
cli
mov
push
fcom
ffreep
sub
push
mov
lods
mov
mul
cwde
push
xchg
sub
sti
xchg
arpl
ja
lods
mov
cs
in
sbb
imul
pop
mov
lock
push
lahf
in
mul
mov
(bad)
sub
int
push
xchg
jmp
jg
adc
or
loopne
and
dec
lahf
xchg
rcl
pop
xchg
out
jg
add
push
mov
(bad)
jo
xor
push
fst
fwait
retf
addps
jmp
sbb
test
fwait
mov
cmp
dec
xor
xchg
aad
and
sbb
fwait
dec
cmp
ucomiss
add
cmp
xor
dec
jl
jge
cs
fistp
(bad)
jno
mov
call
repz
push
adc
lds
xor
mov
stos
xchg
les
add
xchg
out
jae
js
in
cmp
dec
out
mov
sub
(bad)
bound
xchg
jb
sub
xor
dec
je
test
rcr
fs
cs
fwait
adc
pop
je
sub
int
mov
movs
test
adc
dec
iret
mov
mov
jns
gs
pusha
repz
mov
dec
cmp
inc
xor
xchg
mov
sub
out
dec
inc
inc
push
jae
sub
pop
jg
mov
test
aaa
(bad)
hlt
jb
fdiv
sub
and
lahf
add
xor
pop
push
and
push
add
imul
fisubr
mov
and
dec
mov
xchg
add
mul
lds
fimul
dec
xor
sbb
rcr
add
lea
push
cs
rol
push
jae
sub
(bad)
lods
sahf
mov
out
retf
leave
faddp
adc
enter
cs
dec
inc
jl
pop
scas
pop
mov
cs
sub
xchg
xchg
mov
stos
pop
(bad)
pop
arpl
cmp
in
and
leave
mov
cmp
mov
xchg
jb
pop
or
add
add
je
mov
sub
call
ret
clc
ret
jo
mov
jbe
fmul
sub
adc
xlat
xchg
(bad)
sub
sti
cmp
xlat
std
jno
push
leave
sub
mov
stos
inc
xchg
sub
mov
xchg
or
je
in
adc
or
inc
js
dec
jne
and
push
adc
pcmpeqb
dec
jno
jl
int3
cmp
lahf
aad
popa
stos
rcr
test
sub
jns
push
std
imul
and
sub
lds
dec
(bad)
and
scas
push
push
adc
out
add
mov
cs
jb
inc
in
mov
inc
cmp
mov
sbb
stos
out
cld
shr
dec
add
test
sahf
fxam
retf
cli
retf
adc
test
sti
sbb
fisubr
mov
daa
sbb
jns
dec
dec
out
and
sub
sti
mov
pop
mov
out
sub
sti
mov
sub
movs
fwait
add
popa
loop
xchg
mov
lods
scas
adc
mov
xor
jl
mov
cmp
cmp
shr
outs
ficomp
movs
add
data16
push
push
outs
arpl
dec
or
das
inc
dec
lea
push
fadd
je
and
dec
div
mov
jmp
or
iret
mov
pop
pop
add
retf
addr16
test
push
(bad)
mov
sub
stc
fadd
aam
inc
sub
(bad)
ror
mov
(bad)
pushf
pop
inc
mov
push
cs
pusha
mov
inc
push
(bad)
cs
shl
cs
jo
and
rol
mov
jnp
push
mov
out
test
aaa
push
push
test
mov
popf
mov
(bad)
dec
cmp
pop
xor
call
mov
imul
sbb
cdq
mov
inc
popa
aam
pop
pop
push
mov
cs
neg
popf
xor
(bad)
xchg
mov
out
inc
mov
xor
mov
cmp
sbb
icebp
aad
lea
adc
pop
pop
ror
and
mov
sahf
lahf
(bad)
outs
aas
repnz
pop
sbb
sbb
les
lods
dec
(bad)
fsubr
cs
mov
xchg
mov
jge
mov
lods
enter
xchg
jl
scas
lods
jle
ja
mov
cs
add
das
xchg
outs
ret
push
dec
daa
cmp
in
outs
iret
outs
jg
sub
in
sbb
shl
fidiv
jecxz
sub
xor
fcmove
lea
stc
in
push
(bad)
dec
sub
mov
nop
lods
jmp
jecxz
xchg
retf
cs
mov
pop
push
(bad)
pop
adc
cs
fs
adc
shl
jmp
scas
cwde
dec
and
jae
xlat
outs
mov
xor
fcmovnu
push
cmps
xchg
(bad)
jecxz
cmp
data16
cmp
jp
enter
lahf
adc
push
leave
cwde
sub
cmc
and
lahf
pop
jge
xor
movs
scas
jb
pop
pop
mov
mov
mov
shl
scas
sar
and
jbe
aam
loope
pop
mov
lds
sub
fldenv
pop
dec
fcomp
cs
ja
or
prefetch
mov
xor
cmp
or
pop
retf
ins
out
xchg
jmp
jnp
cmc
mov
sbb
adc
test
cmp
xor
mov
dec
adc
ret
scas
adc
sbb
dec
ins
push
leave
mov
sub
aad
out
jnp
test
not
push
or
xor
dec
jne
push
push
sub
fwait
mov
outs
sbb
mov
mov
pop
push
mov
push
mov
into
(bad)
stos
push
leave
cwde
pop
cmp
into
inc
cmp
arpl
dec
lods
bound
xor
outs
fadd
cli
add
adc
inc
cmps
fs
out
mov
add
add
rcl
jo
mov
(bad)
mov
hlt
push
cmp
push
adc
ins
ds
mov
inc
movs
mov
fsub
iret
mov
xchg
mov
pop
pop
sub
pop
test
scas
leave
xor
inc
and
sub
ror
xchg
sti
sub
xchg
lock
mov
sub
lods
mov
push
push
mov
add
sub
shl
push
fucomi
aas
lods
push
stos
xchg
fild
xor
leave
stc
mov
ds
xchg
cmp
aas
test
scas
mov
ja
rcl
pop
outs
and
mov
xchg
xchg
inc
icebp
daa
mov
push
cmps
ficomp
sub
test
(bad)
outs
push
test
push
leave
push
dec
out
mov
dec
adc
fisubr
in
sub
jg
adc
sbb
(bad)
cli
int
rcl
cmp
mov
(bad)
aaa
les
mov
pop
mov
sbb
adc
pop
inc
out
rcr
in
xor
rcr
adc
call
cs
mov
jmp
dec
xor
in
rol
add
pop
mov
mov
ss
and
js
inc
pop
pop
cmovns
xchg
in
jmp
enter
fsubr
cmp
cmc
mov
fild
outs
sub
and
jmp
daa
xlat
gs
mov
je
fidivr
mov
retf
dec
inc
or
icebp
mov
fsubrp
movs
cmp
jbe
iret
rol
cwde
jb
cld
or
cs
push
lods
in
mov
cmps
rcr
xchg
loopne
std
outs
stos
or
out
xchg
xor
mov
mov
(bad)
repnz
sbb
jo
dec
inc
mov
nop
fucomip
daa
add
scas
push
and
cmp
dec
cs
test
push
adc
and
adc
or
mov
es
loop
adc
xor
xor
jne
mov
stos
add
int3
cs
push
popa
out
mov
pop
dec
jno
add
in
cmps
mov
xor
loope
std
inc
lds
test
pop
inc
repnz
sub
pop
dec
xchg
mov
cs
test
adc
and
out
enter
cmps
stc
cs
xchg
(bad)
cld
jecxz
icebp
mov
dec
dec
jbe
into
arpl
mov
sub
ret
fldenv
int
stos
fimul
xor
xchg
pop
icebp
adc
jae
pop
loop
int3
inc
cs
cmp
cmp
push
imul
sbb
les
dec
cld
xchg
xchg
jbe
push
cs
ja
xchg
sub
pop
dec
scas
pusha
popa
adc
icebp
fst
push
dec
xor
push
cmps
add
xchg
pop
mov
aaa
fwait
xor
mul
(bad)
pop
cmp
in
cmps
cld
mov
add
jne
mov
xor
sahf
pushf
pop
ins
jbe
cs
inc
adc
and
int3
in
hlt
xchg
(bad)
aaa
sub
mov
rcr
mov
or
cli
arpl
daa
sub
sahf
and
out
mov
pop
adc
or
popa
push
adc
fisub
cdq
and
(bad)
jns
inc
scas
lods
ret
mov
xor
mov
ror
ficomp
daa
test
mov
jge
ja
cwde
out
aaa
out
out
std
jl
cs
xchg
sub
xor
jmp
or
scas
mov
icebp
lods
xchg
retf
adc
cs
mov
inc
or
jmp
mov
js
jo
retf
inc
out
pop
test
(bad)
ins
shl
inc
adc
dec
cmp
sahf
(bad)
sub
inc
rol
xchg
or
jl
inc
jge
int3
and
into
(bad)
push
mov
mov
push
add
lods
leave
sub
sbb
jnp
inc
mov
hlt
rol
jmp
ds
sar
inc
rol
icebp
neg
sub
jmp
inc
pop
ja
rcr
mov
daa
push
push
jmp
cmp
in
adc
cmp
dec
mov
sti
or
pop
and
aas
fbld
(bad)
cmp
out
jmp
aam
pushf
stos
test
jnp
mov
outs
jg
xor
fsubr
dec
rcr
(bad)
push
push
mov
ins
sbb
out
test
in
cdq
xor
outs
cs
sub
pop
popf
push
mov
push
xor
inc
mov
pop
retf
cmp
and
addr16
popf
in
sahf
sub
daa
inc
ror
mov
ins
out
ret
mov
inc
dec
adc
nop
mov
dec
sub
jecxz
push
pop
inc
fsub
cld
xchg
dec
cmps
xor
xchg
fild
daa
test
shl
xchg
lods
add
or
xor
and
aam
mov
(bad)
xchg
push
cmp
adc
mov
out
cmps
icebp
mov
enter
inc
loopne
cs
jmp
jb
cli
xor
inc
mov
inc
and
ds
lods
in
imul
(bad)
sti
into
xlat
jmp
ss
sub
push
mov
mov
xchg
sub
add
push
(bad)
mov
and
ins
mov
jle
inc
in
ins
dec
pop
cmps
es
inc
js
out
leave
sub
pop
daa
jno
addr16
lea
(bad)
jle
push
jp
aas
mov
add
jne
adc
xor
fnsave
lock
cmp
(bad)
mov
ja
push
cdq
popf
stos
fld
push
sub
(bad)
loopne
in
icebp
pop
call
movs
es
scas
(bad)
cmp
je
and
adc
mov
push
xor
fisubr
jge
call
jl
add
lea
push
leave
adc
out
or
add
repnz
adc
push
fwait
jo
push
cwde
scas
inc
pop
mov
daa
pop
inc
(bad)
jg
jnp
ss
xor
dec
dec
(bad)
popa
movs
cs
outs
call
jmp
push
shr
fsubr
adc
fistp
jbe
fisubr
repnz
icebp
les
dec
push
cmp
mov
cs
nop
test
je
aam
scas
sahf
adc
or
dec
jo
int
push
inc
or
mov
sub
adc
adc
push
adc
or
adc
xor
xchg
(bad)
out
jmp
sar
movs
xor
loope
mov
bnd
lods
add
push
sub
mov
into
add
out
stos
jecxz
lock
jo
lods
jae
ret
(bad)
call
xor
cli
stc
out
(bad)
dec
mov
cs
sub
outs
adc
and
sbb
fincstp
mov
test
pusha
movs
mov
push
jnp
ins
cmps
out
movs
push
movs
pushf
jo
mov
imul
enter
call
and
inc
pop
and
outs
es
pop
jecxz
ret
cwde
shl
data16
lods
xor
adc
jnp
xchg
gs
xchg
pop
sti
js
scas
push
mov
mov
cmps
in
or
jbe
cs
mov
jecxz
cs
pop
inc
into
jne
pop
cs
retf
jae
xchg
inc
movs
or
fsubr
mov
pop
add
daa
mov
and
cs
cmp
icebp
scas
adc
adc
add
cs
ds
pop
(bad)
xor
clc
sar
dec
shl
xor
call
sub
je
and
mov
or
jge
scas
push
pushf
outs
jecxz
xchg
imul
in
ror
sub
std
mov
out
dec
mov
lods
(bad)
nop
cs
sbb
xor
retf
out
addr16
out
arpl
and
inc
pop
imul
ds
std
cs
dec
iret
test
cmp
cmps
repz
dec
sar
icebp
out
movs
popf
jae
jbe
ins
and
int
cmp
or
leave
push
lahf
sbb
loope
dec
lock
push
sbb
nop
mov
cmp
cs
repz
jmp
sub
icebp
(bad)
inc
xor
mov
push
mov
jg
mov
inc
jle
and
cs
sbb
std
lods
cmp
ret
push
aad
push
pushf
sub
pusha
scas
fld
pop
cmp
cmp
ja
or
daa
pop
mov
pop
mov
mov
loopne
xchg
mov
sub
cmps
std
jge
inc
dec
cmps
(bad)
and
ret
xchg
pop
ja
shl
lock
push
mov
fisub
push
jg
(bad)
push
hlt
xchg
cs
adc
and
add
fstp
sbb
pop
test
adc
sub
out
mov
push
outs
xor
cmc
repz
mov
movs
cmp
(bad)
sahf
into
adc
xor
fidiv
sbb
adc
cmp
sub
mov
mov
jno
mov
dec
call
push
nop
rcl
ret
mov
cmp
pop
mov
jmp
test
ret
pushf
dec
icebp
mov
cs
int
jmp
gs
aas
xchg
jne
jae
cmp
push
cmp
jb
cmps
cmp
jl
push
adc
xor
ins
lods
in
add
loopne
int
(bad)
jbe
cmp
sbb
js
xor
(bad)
sub
jns
add
(bad)
es
xor
jmp
stos
out
sahf
clc
push
mov
dec
pusha
adc
std
leave
fisubr
cs
sbb
and
leave
mov
sar
and
and
jbe
cs
daa
mov
mov
push
xchg
and
jae
jo
(bad)
lahf
mov
(bad)
cwde
rol
xor
int
ins
icebp
shr
adc
add
je
pop
mov
push
(bad)
sub
mov
add
xor
jb
lock
test
ins
pop
aam
imul
mov
mov
cdq
jg
or
and
xor
push
sub
or
outs
pop
cs
and
inc
and
inc
push
dec
cli
mov
dec
add
mov
xchg
out
adc
push
daa
or
pop
push
test
sbb
push
dec
cs
pop
add
or
adc
sub
jmp
jp
sbb
mov
xor
mov
push
jmp
scas
inc
outs
call
shr
mov
cs
clc
pop
sbb
outs
sub
mov
jns
(bad)
daa
mov
xchg
cmps
inc
mov
cmp
jecxz
and
pusha
or
push
pop
jle
pop
push
outs
push
xchg
mov
sub
mov
and
mov
pop
inc
mov
jae
ins
or
inc
inc
scas
(bad)
and
xor
jno
adc
scas
lahf
mov
pusha
push
mov
adc
es
push
xor
jae
add
dec
mov
mov
jle
push
outs
(bad)
mov
je
jnp
xchg
pop
sbb
cmp
jbe
ds
sahf
push
or
mov
fistp
ds
push
xchg
push
cs
or
std
cs
(bad)
icebp
or
sub
dec
in
cmp
and
(bad)
je
cs
cmc
mov
lahf
(bad)
rol
cdq
mov
adc
fsubr
mov
pop
jp
or
pop
push
stos
inc
cs
xor
jnp
xor
hlt
(bad)
jmp
sbb
lahf
(bad)
mov
or
cmp
adc
ja
push
sub
jp
test
jg
les
cmp
mov
inc
int3
xchg
stc
and
inc
inc
fwait
out
or
cmp
xchg
jl
xchg
push
scas
xlat
jge
mov
(bad)
fisttp
dec
xchg
sar
or
dec
cs
sub
pop
and
add
aas
pusha
dec
push
sbb
adc
or
xor
sub
pop
sbb
inc
sahf
push
shl
cs
lock
shl
outs
into
mov
add
out
cmp
scas
ins
mov
mov
mov
jge
mov
dec
adc
pusha
lods
out
cmp
ret
cmp
sbb
jae
sbb
xor
cs
inc
cmps
xor
xor
shl
adc
lahf
div
out
cs
je
add
mov
call
lea
add
out
or
adc
add
(bad)
test
cli
xchg
nop
cmp
cmp
pmaxsw
inc
retf
mov
mov
ror
jmp
mov
add
or
fwait
sub
pop
daa
mov
adc
pusha
xor
ss
xchg
sub
add
gs
hlt
shr
jbe
cs
loop
mov
bound
xlat
jle
mov
lods
cmp
mov
sub
cli
outs
pop
jp
pop
pop
sbb
inc
mov
cs
fbstp
jbe
dec
lods
sbb
test
pop
cs
xor
enter
daa
(bad)
pop
mov
mov
imul
rcr
aaa
ret
jne
shr
mov
push
push
dec
jp
bound
xor
les
js
aas
dec
gs
not
push
pop
arpl
push
rcr
shr
push
clc
lea
stc
push
pop
adc
ds
xor
mov
push
ret
jns
sub
cs
lods
nop
add
scas
stos
cs
inc
pop
shl
lds
cs
mov
ret
jae
into
call
dec
stos
cs
mov
adc
xchg
mul
gs
stc
add
ret
xor
adc
psrlq
lods
cld
mov
jb
test
stc
out
jg
ret
lods
fstp
push
pop
mov
je
sbb
stos
add
bound
add
push
pop
imul
ret
out
push
ss
cmp
sub
fcom
cmp
mov
lahf
je
pop
hlt
push
mov
push
mov
lods
scas
mov
lahf
mov
cmp
and
push
daa
inc
lods
push
gs
add
sbb
out
loope
in
iret
ins
inc
sub
add
jle
add
lods
daa
jno
je
popf
sub
lds
pop
push
jb
xor
aaa
rcr
bnd
js
pop
jecxz
into
cs
aaa
fsubr
movntps
dec
adc
sahf
pop
pop
(bad)
test
push
sub
mov
jno
lds
ins
imul
push
daa
shr
inc
or
add
dec
fnsave
clc
or
imul
jns
xor
add
ficom
dec
movs
jb
cs
push
add
ret
mov
ins
adc
or
cs
dec
leave
mov
adc
les
iret
pop
sahf
mov
sub
and
outs
xchg
lock
pusha
cs
mov
dec
or
fld
mov
xor
cs
add
adc
aaa
push
cmp
cs
ds
in
mov
inc
jno
(bad)
sbb
mov
xor
mov
jb
imul
inc
cs
mov
xor
sub
rep
xchg
cmp
(bad)
nop
mov
cs
fisttp
adc
shl
lods
mov
(bad)
fwait
arpl
and
xlat
ror
mov
dec
retf
out
xor
scas
outs
jg
icebp
add
mov
inc
addr16
jmp
cwde
cs
jb
aas
sbb
cs
fistp
sub
call
inc
shr
push
mov
cmp
int3
mov
jbe
sbb
daa
cmp
in
shl
retf
add
fcomp
cs
adc
stos
test
pop
cmp
ffree
sub
js
pop
xchg
cs
pop
in
hlt
jae
(bad)
jmp
sbb
or
and
scas
or
cmps
hlt
jns
(bad)
(bad)
aad
loope
out
jp
clc
or
jne
ret
mov
and
inc
mov
test
fs
push
daa
and
scas
test
daa
stos
or
and
pop
dec
pop
clc
retf
cs
inc
xchg
ret
jecxz
push
out
cmp
mov
pop
cmps
stos
jmp
cmp
fnstsw
sbb
int
jecxz
xchg
xchg
push
xor
sbb
call
out
in
dec
adc
mov
leave
ins
sub
and
add
cmp
dec
sub
or
mov
sbb
sbb
mov
push
cs
mov
sub
inc
andps
pmaxsw
shl
jnp
mov
cmps
dec
xor
fwait
es
mov
test
pop
push
mov
lods
iret
sub
out
fnstcw
or
fidiv
leave
xchg
les
out
aad
or
mov
push
push
jg
xchg
dec
aam
cmc
pop
jmp
jbe
outs
and
ja
movs
lea
outs
push
adc
mov
sub
jle
mov
mov
jnp
jbe
dec
cs
dec
add
or
push
lods
cs
(bad)
scas
mov
jge
(bad)
scas
push
dec
cmps
pop
jg
xor
sar
stos
push
(bad)
pop
push
out
(bad)
test
daa
ficomp
fiadd
add
push
push
pop
push
jg
xchg
in
mov
ret
std
pshufw
into
outs
fwait
xor
pop
and
inc
xchg
xchg
(bad)
ins
fsubr
loopne
jecxz
jmp
cmp
js
cs
(bad)
ret
cmp
es
push
retf
lds
test
fnstcw
out
lea
movs
ret
jl
cmp
jns
in
and
jecxz
xchg
scas
mov
cmp
out
add
push
dec
cmps
out
ucomiss
jge
jbe
jnp
push
sub
pop
lds
xor
aaa
sub
cs
(bad)
jnp
mov
shl
sbb
sub
aas
pop
inc
aaa
cs
push
inc
pop
cdq
xchg
lahf
icebp
shr
inc
bound
jno
arpl
cmp
out
aaa
dec
push
push
repnz
sar
leave
into
lods
xor
jbe
and
arpl
adc
push
in
loopne
cmp
sbb
rol
cs
dec
add
mov
cs
mov
push
call
movs
in
xor
sbb
cs
lock
mov
mov
cs
sub
dec
lahf
inc
cs
(bad)
out
pop
push
movs
jo
jge
and
fs
xchg
repz
cs
adc
fyl2xp1
jle
xchg
popa
xor
(bad)
in
cmc
pop
push
jno
jne
mov
xchg
mov
or
daa
(bad)
stos
call
inc
xchg
jbe
xor
xor
mov
adc
hlt
adc
ret
pushf
out
mov
sbb
into
fidiv
fldcw
xchg
or
mov
sbb
push
out
fs
fst
adc
pop
xor
xchg
daa
(bad)
push
icebp
jmp
mov
out
xchg
(bad)
mov
dec
js
cwde
push
push
popa
xor
jmp
sub
mov
test
xor
xor
addr16
fist
mov
test
and
xor
add
pop
test
scas
into
dec
xchg
dec
add
sub
test
xor
cs
xor
pop
cs
(bad)
mov
cmp
out
imul
lahf
leave
adc
in
jmp
cmc
js
dec
and
std
cmps
pop
cmp
cli
scas
ins
push
daa
cs
push
popa
add
xchg
bound
sub
mov
xchg
fwait
retf
and
mov
dec
mov
mov
aad
inc
mov
mov
(bad)
call
mov
shl
pop
aad
dec
add
sahf
into
test
mov
aaa
sar
enter
shl
fwait
mov
hlt
fs
sbb
int3
jns
aaa
mov
mov
inc
aaa
jbe
jp
fidiv
mov
xchg
int
cld
dec
mov
mov
cmps
push
cmc
mov
add
sbb
addr16
push
mov
xor
inc
adc
push
call
ss
push
out
inc
loope
sbb
xor
cmp
sub
sti
fsub
or
les
sti
cwde
or
cmp
fisttp
sub
mov
sbb
leave
or
push
xchg
or
std
sbb
loope
cmp
retf
jbe
xchg
xchg
ja
in
mov
loopne
fbld
(bad)
and
add
adc
into
xor
pop
das
scas
ret
xor
pop
sub
cld
lods
sub
(bad)
dec
cmp
test
les
or
in
scas
adc
dec
pop
sbb
cmp
push
test
int
xor
sti
mul
or
out
xchg
sub
(bad)
psllq
push
jnp
lods
jmp
dec
or
inc
repnz
or
movs
push
es
and
into
icebp
sbb
leave
stos
jae
mov
xor
mov
mov
ret
cmp
daa
push
test
mov
ds
aad
cmp
aam
jo
(bad)
xor
je
(bad)
cmps
int3
and
stos
push
idiv
ss
mov
fisttp
out
js
jno
sbb
dec
out
cli
fmul
lahf
mov
daa
jns
movs
sub
push
push
sbb
jb
xor
jns
sbb
adc
mov
mov
inc
aaa
push
cmp
or
div
fdiv
leave
pop
mov
pop
xchg
clc
adc
and
sub
sbb
mov
ins
std
push
cmp
push
pop
mov
aas
sbb
outs
test
arpl
mov
add
xlat
repnz
(bad)
scas
or
int
lds
or
pop
fmul
cmps
xchg
test
mov
enter
fistp
pop
mov
lock
sub
fbstp
out
cmps
pop
jno
inc
rcr
loop
out
or
push
xchg
daa
xchg
or
push
aad
pop
sub
das
cmp
and
ja
adc
mov
or
sub
dec
cmps
mov
mov
aad
inc
jecxz
retf
or
jge
sbb
scas
int
test
out
inc
xor
pop
push
test
mov
push
retf
cmp
or
(bad)
push
loopne
into
lods
jmp
iret
dec
fcom
(bad)
int
pop
aam
dec
jne
or
push
rcr
sti
mov
xchg
cwde
test
ins
sbb
sub
ret
test
lock
pop
cmp
scas
hlt
adc
in
stos
leave
xchg
pop
sub
jo
lods
xchg
hlt
stos
cli
add
retf
mov
mul
xchg
inc
jl
add
lods
lea
jae
sub
cmps
xchg
sbb
pushf
cmp
push
sub
cmp
sbb
mov
(bad)
mov
sbb
mov
jnp
(bad)
fsubr
push
loopne
push
sub
mov
xchg
and
in
(bad)
mov
(bad)
es
and
sbb
ret
cmp
test
stos
fnstsw
pop
popf
sbb
mov
dec
repz
fldenv
fisttp
clc
cmp
mov
cs
loop
push
cld
add
push
and
in
adc
mov
add
ficom
jmp
test
sbb
mov
mov
sbb
mov
xchg
movs
cs
imul
ja
cs
cmps
adc
xchg
out
add
cs
test
sub
mov
sub
iret
mov
ja
xor
mov
xchg
stc
mov
xchg
nop
js
cs
cdq
pop
loop
data16
mov
ret
cmps
fisttp
and
cs
sbb
add
cmp
cmp
cs
and
(bad)
loopne
cmps
fucomip
fldenv
pop
ins
xor
jnp
mov
jns
and
ss
cmc
or
xlat
sar
push
repnz
sbb
dec
pop
cdq
fcomp
outs
les
lock
sahf
xor
lods
fld
jmp
and
inc
mov
or
daa
sub
jno
cs
mov
jg
fistp
pop
or
sub
sub
lea
cmps
cmps
loope
pop
xor
pop
clc
enter
imul
fisub
rol
jmp
jbe
mov
(bad)
scas
fs
sub
dec
daa
mov
adc
xor
inc
cmp
dec
retf
jmp
push
leave
int3
adc
aas
sub
pop
cs
stos
jno
cwde
mov
push
sbb
out
and
xor
sbb
dec
xor
(bad)
popf
cwde
jne
rol
icebp
and
out
stos
fbstp
inc
repz
(bad)
mov
mov
sbb
add
std
mov
push
out
and
sub
jge
lods
fyl2x
out
in
(bad)
in
mov
xchg
lods
xor
pusha
aas
(bad)
out
jmp
repnz
lock
jns
add
push
sub
mov
aas
pop
retf
sub
aam
out
fsub
xchg
stos
mov
add
push
gs
sbb
lods
fcomp
out
(bad)
sub
push
ins
cs
push
rcr
hlt
mov
(bad)
fsub
mov
and
mov
push
pop
push
xor
scas
add
pushf
jae
lods
ret
jle
push
and
arpl
lock
mov
ins
sub
bound
leave
sbb
cmp
call
push
dec
xlat
jmp
or
fst
add
(bad)
(bad)
shl
shl
pop
add
jmp
aas
(bad)
jne
imul
inc
pop
into
sub
xchg
pop
add
shr
jno
cmp
ja
push
data16
jno
or
xchg
rcl
rcr
loope
fwait
ds
jmp
mov
sub
dec
sub
jae
dec
les
sub
xlat
xor
imul
pop
mov
push
ret
les
cmp
stos
jno
jmp
sbb
inc
xchg
inc
lods
(bad)
or
dec
fcmovbe
das
ja
std
mov
in
in
mov
out
pop
daa
xlat
jmp
push
dec
push
js
fwait
not
dec
mov
xchg
pop
dec
sar
ret
aam
pop
push
data16
fistp
enter
mov
pop
sub
call
xchg
push
loopne
fisttp
jecxz
pop
iret
dec
add
mov
loop
inc
movs
mov
ret
xor
scas
(bad)
call
push
sahf
repz
inc
cs
stos
mov
bound
push
mov
mov
lds
lahf
mov
sbb
das
and
or
cmp
sahf
je
pop
pop
pop
repz
sti
jmp
jae
addr16
imul
lahf
pusha
jo
pushf
ret
adc
dec
fisttp
jmp
cs
pusha
lahf
cmc
es
add
aad
cs
adc
call
sub
cmps
cs
stc
add
das
ins
ror
jns
aaa
pop
bound
call
out
or
jp
cmps
xchg
das
cdq
ret
mov
lods
jmp
je
and
(bad)
pop
out
dec
mov
xor
das
mov
mov
xor
mov
imul
pop
popa
mov
test
cs
sub
or
cmp
xchg
mov
ins
fadd
and
xlat
(bad)
arpl
dec
add
data16
movs
adc
jmp
adc
je
shl
inc
(bad)
data16
xor
dec
mov
loope
adc
cwde
iret
data16
movs
cs
into
icebp
std
aam
push
aas
mov
out
xor
(bad)
jo
add
and
fistp
imul
xchg
ffree
sub
(bad)
scas
mov
xchg
rcl
xchg
test
jmp
lahf
test
(bad)
out
pop
add
and
scas
shr
sub
adc
dec
cs
xchg
jge
xchg
lahf
cs
pop
hlt
xchg
rol
outs
loop
loopne
icebp
mov
(bad)
ds
shr
shl
xor
jns
dec
enter
ss
test
push
into
cs
cs
test
rol
mov
xor
xchg
inc
push
adc
psrld
pop
jge
fldcw
pop
daa
sub
adc
xlat
push
cmp
mov
data16
sub
in
pushf
push
mov
pop
push
dec
or
popf
out
cs
mov
aam
cli
inc
add
movs
inc
pushf
jo
mov
and
push
sub
dec
std
cmp
sub
mov
dec
dec
out
dec
sti
xor
ja
ficom
loopne
(bad)
div
or
shl
push
mov
xor
push
stos
adc
ds
dec
cmp
xlat
das
mov
cmp
loopne
xchg
mov
enter
nop
jne
fsubr
cmp
push
mov
and
(bad)
xor
sub
repz
cmp
pslld
push
or
les
xchg
xor
add
stos
or
mov
mov
cmp
push
call
sbb
xchg
jbe
cmp
test
jge
inc
xchg
jg
sub
xor
inc
popf
leave
daa
fidiv
push
daa
clc
or
js
jle
and
xor
fcomp
sub
xor
sub
ds
scas
cs
ins
sbb
push
sti
outs
adc
pop
daa
cwde
cdq
lahf
rcr
pusha
xchg
sub
shr
xor
fs
loope
push
sub
imul
xchg
ret
daa
mov
mov
pop
scas
or
sbb
shr
and
es
add
and
(bad)
es
sub
push
mov
push
outs
cdq
mov
sub
pop
xchg
cs
pop
movs
xlat
xor
dec
sub
pop
scas
xchg
mov
pop
push
sbb
mov
xchg
xor
sbb
push
push
mov
cmp
test
xor
inc
sbb
(bad)
mov
ss
lea
fsubr
or
jnp
cs
xchg
fisub
push
mov
nop
icebp
xor
dec
ret
arpl
xor
push
stos
pop
rcl
push
aam
xor
sbb
(bad)
imul
lock
movs
and
std
cs
in
(bad)
pop
cs
retf
rcl
pusha
sub
pop
ds
xchg
cli
or
addr16
sub
mov
loop
outs
test
outs
mov
cmp
jne
push
data16
cs
sbb
xchg
push
movs
sbb
xchg
cmp
mov
jbe
mov
pop
adc
shl
out
sahf
loope
mov
push
pop
adc
xchg
sbb
out
inc
mov
bound
cmp
pop
sub
jns
arpl
test
icebp
mov
fadd
mov
sub
cs
jmp
(bad)
cmp
movs
mov
mov
outs
fst
scas
and
mov
stc
xor
icebp
pop
jns
(bad)
hlt
into
push
aas
xor
adc
neg
xchg
jb
mov
nop
and
addr16
mov
cmps
sbb
pop
dec
add
pusha
cs
(bad)
dec
dec
jb
sti
mov
adc
pop
call
ins
mov
adc
rcr
cdq
cmp
cmp
fldenv
add
xchg
or
cmps
aas
(bad)
dec
fucom
sbb
aaa
mov
mov
cmc
leave
xchg
mov
xor
adc
stos
fwait
mov
and
sub
xor
push
pop
loopne
popf
jo
(bad)
xor
cmps
push
adc
cs
jno
les
jecxz
lods
mov
xor
loope
cmp
mov
pop
stos
pusha
out
retf
cs
xor
adc
adc
inc
push
ins
bound
rcl
jmp
fmul
ds
shr
jb
je
repnz
or
jecxz
aad
jae
ret
cwde
or
in
jmp
sub
push
ret
cs
add
xchg
jae
int
cld
movs
mov
add
aad
inc
jb
or
dec
inc
add
or
sub
jb
add
xor
and
pop
lahf
xor
sbb
jecxz
sti
adc
jb
cs
mov
gs
movs
hlt
mov
shr
sti
in
in
push
mov
cs
enter
mov
out
loop
sbb
lods
rcl
mov
cmp
int
out
ficomp
(bad)
xor
add
lods
mov
or
imul
outs
or
js
dec
and
cs
push
jne
sub
bound
inc
jl
iret
xchg
out
adc
cmp
cs
ror
add
loope
inc
rcl
lock
loop
xchg
(bad)
cmp
arpl
dec
xor
daa
out
pop
push
xor
cs
jge
repz
jmp
adc
out
sbb
push
adc
(bad)
sahf
push
pop
adc
and
fnsave
scas
scas
fnstenv
mov
sbb
mov
(bad)
ins
out
mov
dec
out
(bad)
mov
mov
jnp
ins
and
into
mov
bound
cmc
cs
mov
fwait
stos
sbb
daa
mov
mov
jmp
out
cmp
fdivr
pop
lock
mov
hlt
sbb
dec
jae
je
mov
jnp
add
pop
inc
cs
xchg
shr
sub
xor
and
or
fldenv
pop
cs
push
add
jmp
sub
shr
adc
adc
ret
cld
mov
or
xchg
sub
xor
outs
pusha
jge
mov
scas
cmps
iret
add
push
int
mov
jmp
cmp
and
or
jno
xor
ror
sub
xchg
ror
mov
jmp
and
xchg
iret
lds
cmps
cmp
xchg
mov
add
cmp
imul
jg
push
add
cs
xchg
int3
out
popf
(bad)
cs
jp
xlat
pusha
sbb
sar
sbb
xor
sbb
sti
jns
cli
jle
and
push
push
scas
ds
int
cmps
cs
scas
test
or
jle
push
and
pop
cs
xlat
push
mov
cs
dec
addr16
adc
jp
mov
push
sub
popf
es
rol
dec
mov
lock
call
movs
ret
push
test
repnz
add
add
mov
iret
outs
lock
pop
cs
call
push
scas
fiadd
xor
outs
enter
mov
or
bound
ja
cs
movs
out
out
stos
cmp
xor
cmp
sub
fldcw
sahf
inc
mov
and
fist
xor
xchg
pushf
mov
outs
dec
addr16
push
pop
push
jae
jl
xchg
scas
push
leave
ret
pop
push
retf
mov
push
pop
and
add
(bad)
lahf
sub
pop
repnz
loopne
mov
leave
daa
mov
pop
cmps
jb
test
fistp
leave
pop
push
adc
into
stc
cmc
fs
lea
mov
push
inc
and
shl
in
xlat
test
inc
mov
mov
xor
fistp
out
cld
jmp
lahf
sbb
mov
xor
adc
je
pop
mov
and
imul
mov
push
jle
jge
rol
jb
test
xchg
push
arpl
fs
jmp
xchg
(bad)
fstp
and
ficom
lods
repz
mov
and
sbb
into
mov
(bad)
into
shr
outs
(bad)
fld
jle
addr16
push
ss
mov
mov
pop
lahf
sahf
or
push
ins
pop
or
inc
xchg
outs
es
mov
or
cmp
fiadd
push
ret
in
dec
dec
push
sahf
mov
(bad)
out
add
les
jno
sub
sub
mov
dec
out
cmp
test
mov
push
jge
and
inc
inc
enter
mov
sahf
sub
adc
adc
cs
popa
push
sbb
mov
ficomp
sbb
imul
mov
sub
es
and
or
scas
mov
(bad)
push
and
jle
push
cmp
daa
adc
enter
cs
sbb
dec
in
iret
mov
mov
xor
sub
xchg
xchg
adc
sbb
cmps
pop
pop
movs
cmc
mov
mov
jmp
adc
mov
(bad)
shr
inc
ss
inc
mov
rol
inc
fcom
xor
imul
push
add
gs
pop
aam
inc
mov
sub
mov
pop
stos
xchg
lea
ins
int
push
inc
xor
hlt
pop
mov
loope
jle
(bad)
cmp
sbb
inc
push
mov
fs
dec
mov
jne
pop
pop
ins
aad
imul
stos
enter
rol
outs
and
test
jp
dec
dec
add
xchg
dec
inc
daa
or
or
fs
adc
lds
scas
test
mov
or
pop
dec
push
lock
or
aas
leave
and
pop
(bad)
push
mov
xor
cs
cmps
inc
mov
mov
or
xor
leave
mov
dec
sbb
xor
inc
adc
push
mov
inc
jge
dec
js
outs
mov
(bad)
leave
xlat
mov
into
dec
add
push
stos
fs
dec
dec
add
imul
ins
mov
or
mov
and
pop
movs
pop
or
js
daa
pop
mov
sub
(bad)
sbb
xchg
das
xchg
stos
xchg
shl
test
push
(bad)
pop
cmp
jae
and
jbe
xor
int3
sahf
into
iret
(bad)
fcom
es
cmp
jbe
push
adc
mov
cmp
or
sub
test
xchg
outs
dec
test
inc
push
jo
push
push
jecxz
sub
cwde
fldcw
mov
jge
xor
loopne
das
xchg
mov
(bad)
or
or
mov
aas
pop
dec
dec
lods
pop
paddd
sar
stos
lock
js
xor
(bad)
lods
xor
loope
mov
cld
add
xchg
cs
or
inc
adc
into
xor
mov
mov
cmp
mov
push
ins
iret
test
mov
cs
imul
cdq
shl
loop
push
pop
call
es
push
xchg
scas
enter
fisubr
outs
out
cmps
mov
gs
lods
inc
pop
out
rcl
or
mov
sub
in
test
inc
sub
pop
loopne
(bad)
push
daa
mov
jmp
aad
mov
ss
lods
sub
shr
mov
add
mov
lea
shl
sub
mov
or
mov
cs
xchg
mov
pop
inc
test
jo
push
or
(bad)
push
mov
add
sbb
push
stc
push
adc
adc
jns
adc
popf
and
fs
push
and
scas
push
enter
mov
mov
fsubr
int
jae
cmc
cld
call
or
ds
sub
xor
adc
push
xchg
daa
add
inc
outs
xchg
fcmovb
call
sub
push
dec
pushf
shr
or
push
jno
inc
jae
xchg
(bad)
push
or
ss
xchg
jbe
cdq
repnz
aas
add
das
call
pusha
rol
cmps
lock
push
xor
push
inc
add
out
lea
dec
and
jle
push
xchg
rcl
sub
sbb
stos
shl
(bad)
test
xor
mov
jne
push
push
nop
in
sub
das
dec
shr
aaa
sub
or
xor
aaa
cmps
fdivr
test
pop
jo
mov
mov
add
pop
xor
js
out
dec
(bad)
sbb
xchg
jnp
mov
jno
xor
xor
sub
cli
lahf
or
mov
mov
loope
sbb
cmps
scas
push
cmps
cs
sahf
sbb
jmp
mov
scas
xchg
push
dec
mov
rcr
push
daa
fmul
cmp
icebp
xchg
(bad)
mov
cs
(bad)
push
inc
lea
push
push
jl
in
outs
pop
xchg
rcl
cs
jo
xor
test
outs
adc
inc
cs
inc
xor
or
loope
cs
test
in
cs
imul
xor
or
cs
mov
mov
adc
push
jle
call
ins
xor
(bad)
push
add
or
xor
call
add
je
(bad)
cmps
adc
jb
xor
test
mov
daa
call
dec
jp
and
or
sub
outs
pop
aas
pop
pop
fwait
ins
into
add
cmps
ja
or
xor
sbb
scas
in
stc
call
mov
cmp
pop
aas
adc
popa
loopne
stos
arpl
pop
cs
inc
pop
mov
cdq
cwde
lds
fsub
cs
ror
pop
cmp
sbb
or
in
repz
cs
mov
ret
pop
psllw
test
xchg
enter
pop
adc
int3
cmc
cs
dec
mov
pop
mov
retf
clc
call
sub
adc
fimul
cli
iret
daa
test
enter
jbe
sub
sub
fcmovnu
dec
mov
pusha
loope
push
cs
add
aad
inc
popa
psllw
jne
repz
bound
mov
or
enter
arpl
sbb
gs
xor
push
pushf
mov
adc
xor
mov
nop
mov
cs
xor
popa
xor
xchg
sbb
(bad)
inc
or
sbb
inc
movs
popa
data16
inc
sahf
enter
adc
cs
in
loopne
clc
add
xor
pop
cli
dec
mov
ror
mov
jae
out
lods
add
gs
das
shl
cmp
xchg
ja
fcom
mov
mov
(bad)
xlat
nop
mov
sub
sub
je
test
dec
mov
iret
xor
fst
ds
cli
mov
das
out
pop
inc
pop
jno
inc
and
in
leave
ficomp
and
and
div
mov
cmc
js
fidiv
and
dec
pop
in
in
call
leave
pop
int3
pop
cmp
mov
xchg
pop
stc
movs
xchg
(bad)
(bad)
push
and
fsub
pop
sub
jg
ins
cmp
fimul
(bad)
add
dec
shl
leave
iret
dec
xchg
ret
mov
out
cmp
xlat
stc
shr
and
cmp
test
pop
(bad)
leave
adc
xchg
adc
js
jae
cmc
sub
int3
call
push
dec
xor
and
sbb
sbb
pop
je
pop
mov
add
mov
pop
adc
or
jns
loope
mov
pop
call
sub
popf
aam
sti
in
rol
imul
stc
jno
addr16
repnz
and
adc
push
cs
sbb
jnp
adc
adc
or
cs
popw
sub
adc
loop
sahf
push
mov
adc
inc
retf
jno
out
and
iret
cs
cmc
nop
mov
test
xor
xchg
dec
xchg
js
imul
scas
fsubr
xchg
cs
(bad)
retf
cmp
ret
outs
sub
scas
xor
adc
jne
outs
adc
pop
cmps
jp
push
imul
pop
mov
loopne
jl
jb
inc
jmp
fwait
aam
icebp
inc
sti
push
out
dec
cs
(bad)
xor
push
dec
out
cs
cmp
add
repz
popa
and
sbb
(bad)
sub
push
and
sbb
inc
(bad)
into
je
mov
popf
sub
xor
dec
ficom
(bad)
jp
aas
dec
scas
mov
push
mov
aad
fistp
xchg
inc
add
mov
xchg
mov
jg
jae
and
push
mov
lods
fwait
outs
inc
jne
daa
(bad)
lock
adc
or
inc
cmps
cs
add
bound
xor
dec
mov
fild
xchg
pop
sbb
fsub
jp
sub
dec
arpl
aam
mov
push
cmp
add
jp
imul
into
dec
popf
xchg
inc
outs
jmp
push
xchg
mov
mov
jge
out
pop
retf
cwde
stos
cmps
sub
adc
scas
lea
xchg
push
mov
cs
dec
sahf
jno
inc
jp
cs
jg
cmp
jb
fs
jbe
es
cs
repz
mov
rol
adc
sbb
mov
cmp
fs
cs
sbb
mov
mov
push
fsub
mov
cmp
hlt
xchg
aas
aad
pop
mov
dec
pop
cmp
inc
cli
push
adc
fstp
push
push
jbe
mov
and
sub
mov
xchg
cs
rep
cmp
iret
shr
retf
xor
mov
outs
push
mov
fisttp
mov
hlt
test
sahf
or
mov
pop
xchg
push
cs
sar
ds
sub
(bad)
fild
cs
push
cmp
lds
hlt
repz
adc
popa
xor
out
mov
cmp
push
jmp
daa
mov
sahf
in
mov
mov
push
add
inc
add
iret
cli
sahf
addr16
cmp
jae
dec
daa
(bad)
push
xor
cmp
jmp
scas
add
mov
stos
jl
mov
(bad)
cld
dec
push
jnp
cs
push
in
out
iret
imul
mov
jmp
pop
jge
idiv
or
sbb
push
fdivr
jl
pop
cs
outs
cmps
pop
aas
inc
inc
xor
outs
fstp
fwait
aaa
jbe
fbld
xchg
loopne
mov
shl
mov
jno
pop
outs
xchg
cmp
mov
sbb
shl
xlat
lea
out
movs
into
pop
lods
scas
sahf
enter
dec
rol
inc
mov
cs
cmp
pop
or
imul
sub
arpl
or
cmc
cmps
and
fsubr
mov
adc
in
jae
add
je
xor
or
out
outs
call
dec
(bad)
out
xchg
jno
cmps
es
test
(bad)
stc
mov
repz
imul
sub
ds
(bad)
iret
nop
dec
jae
idiv
or
or
sub
outs
inc
adc
xor
cs
adc
(bad)
ds
pop
push
(bad)
stc
cwde
rol
jl
sbb
fcmovb
mov
or
loope
cmp
out
push
cs
je
(bad)
cmp
out
repnz
shr
xchg
xchg
scas
mov
pop
mov
push
test
fwait
xor
in
ficomp
icebp
mov
repnz
cs
sar
outs
daa
(bad)
adc
cli
(bad)
cs
aam
mov
cs
jp
out
or
outs
inc
into
cld
mov
and
mov
xor
stc
fbstp
addr16
pop
mov
cs
fldenv
push
xchg
in
cs
fistp
lds
aad
xor
push
pop
les
cs
jb
rcr
mov
cmps
lods
jne
ret
das
rcr
into
nop
push
leave
push
and
int
cmc
mov
icebp
cs
shl
ret
sbb
cmps
pop
cmps
inc
mov
bound
push
dec
rol
sbb
repnz
addr16
stos
mov
cli
les
xor
mov
daa
adc
and
and
call
or
jmp
sbb
(bad)
loopne
cs
xor
xor
fisubr
and
cld
mov
inc
inc
push
push
aam
sub
imul
popf
cmp
lea
enter
lock
adc
jns
rcl
out
aam
daa
pop
jbe
retf
retf
or
push
sub
dec
cli
jge
mov
xchg
sub
jmp
sub
bound
cs
aaa
dec
scas
pop
mov
fld
jne
xchg
(bad)
(bad)
loopne
xor
sbb
add
mov
jmp
dec
into
push
aaa
into
and
jp
push
inc
sub
ss
xchg
sbb
add
and
jns
imul
sbb
sub
je
fst
retf
stos
sbb
dec
push
dec
sub
test
or
and
(bad)
pushw
mov
jno
(bad)
push
pop
mov
test
(bad)
sbb
bnd
xor
dec
sbb
jne
and
les
sbb
add
lahf
loop
lods
push
xchg
mov
or
inc
and
pushf
outs
inc
mov
outs
sub
test
aas
(bad)
div
xor
loope
or
add
fnstcw
fcmovb
aas
aad
aaa
nop
fcomp
gs
cmp
add
in
aam
pop
jae
sbb
xor
jne
or
push
push
ss
aad
pop
movs
mov
sub
(bad)
shl
jmp
inc
jbe
mov
scas
mov
jae
nop
or
and
push
add
addr16
leave
jmp
xchg
into
mov
js
pop
leave
jbe
lahf
and
adc
(bad)
jmp
es
test
mov
lock
loope
add
(bad)
fild
sbb
xor
xchg
and
fidivr
icebp
and
or
pop
sub
gs
mov
pop
adc
jge
push
ss
mov
xor
scas
fidivr
xor
inc
loope
cmps
call
xchg
push
call
xor
iret
xor
inc
pop
out
loope
out
out
jge
sysexit
adc
adc
xor
xor
lock
and
ja
cs
push
mov
and
inc
add
ja
in
dec
cs
xchg
or
xor
bound
nop
mov
cmp
xchg
icebp
hlt
sub
stos
inc
fst
pushf
fstp
movs
sbb
aaa
cs
mov
add
bound
push
cs
push
fs
mov
aas
inc
or
ret
into
popa
push
imul
sti
and
mov
shl
in
das
xor
je
ret
sub
add
sahf
test
nop
and
cmp
pop
push
dec
into
enter
int
dec
and
pop
cli
or
push
and
adc
and
xchg
inc
push
std
cs
cmc
icebp
int3
pop
push
fs
fmul
pop
dec
cmps
adc
xchg
push
mov
adc
adc
push
mov
test
rcl
hlt
jmp
pop
cs
inc
out
mov
cs
sbb
sub
mov
mov
ins
outs
pop
or
dec
mov
push
xor
mov
jle
shr
dec
ins
pop
fld
mov
or
sbb
aam
sub
fcomp
addr16
push
loopne
cdq
mov
xchg
cmps
out
mov
xor
push
or
(bad)
aas
xor
cwde
into
pop
xor
sbb
cs
mov
xchg
enter
sahf
outs
sbb
mov
cs
mov
and
(bad)
cwde
neg
mov
pop
cmp
cs
mov
or
mov
cs
ss
(bad)
jns
pop
pop
sub
test
sub
add
jno
sahf
(bad)
scas
call
cs
pop
fnstsw
scas
xchg
xor
mov
cmp
jmp
mov
cs
adc
sub
out
cs
call
mov
fwait
(bad)
iret
cmp
cs
xor
popf
mov
mov
in
mov
add
(bad)
mov
cmp
out
cdq
mov
aas
xchg
es
aaa
cs
dec
push
sbb
mov
cs
int
sbb
les
pop
popa
cs
pop
(bad)
fcom
cs
stos
loop
fdiv
ret
lahf
cdq
aam
fsubr
test
fwait
push
adc
iret
sti
std
scas
mov
shl
inc
push
jg
fidiv
cs
addr16
in
movs
adc
cmp
sub
imul
clc
out
scas
and
add
sub
xor
and
in
das
lahf
jmp
mov
jne
mov
stos
adc
jecxz
stos
sub
sbb
sbb
and
fld
out
pop
jnp
aaa
inc
mov
and
out
mov
cs
loop
inc
and
mov
sub
or
mov
into
shl
sbb
sub
adc
dec
or
fldz
mov
sbb
mov
and
adc
ins
push
xchg
push
(bad)
xor
and
mov
push
pop
(bad)
outs
pop
jae
xor
mov
mov
ins
sub
inc
jp
test
jmp
push
and
imul
arpl
pop
pop
cs
add
jl
clc
aam
cs
(bad)
cmp
out
mov
xchg
movs
mov
push
fwait
sahf
pushf
jl
leave
pop
inc
push
int
inc
std
cmp
sub
(bad)
cmp
dec
mov
enter
lock
xor
mov
xor
addr16
(bad)
cmp
cmp
pop
sub
test
xor
xchg
(bad)
mov
mov
addr16
adc
sub
mov
in
add
call
dec
out
dec
inc
fst
lods
repnz
dec
jmp
cmps
cld
scas
xchg
jmp
(bad)
sub
jmp
pusha
aam
rcl
pop
xor
stos
les
out
sahf
add
sti
out
lea
repz
and
sbb
(bad)
xor
sub
(bad)
cmp
sub
sub
cmps
push
leave
xchg
adc
das
aad
nop
xor
mov
cmp
xchg
mov
jae
sub
(bad)
das
stc
out
dec
ss
xor
jl
aad
jmp
xchg
aas
adc
push
mov
mov
aas
sbb
inc
pop
das
xor
leave
nop
ror
pop
pop
mov
loopne
inc
movs
sub
lea
mov
loopne
cmps
aaa
push
scas
icebp
push
movs
push
jb
pop
or
lock
aam
sub
xor
sub
dec
das
mov
sbb
mov
add
xor
aas
test
pop
rcr
mov
mov
lahf
jge
dec
xlat
outs
(bad)
xor
push
dec
out
into
call
(bad)
ds
fst
cmp
jnp
mov
pop
xor
mul
(bad)
ds
mov
dec
in
ja
retf
sbb
rcr
inc
retf
or
mov
retf
push
pop
jo
push
cmp
loope
sbb
and
jp
shl
stc
inc
dec
mov
arpl
xchg
cmps
inc
jo
sub
outs
push
add
sbb
dec
push
es
jmp
inc
cmp
push
jmp
sub
icebp
lock
push
mul
lods
or
leave
loope
inc
fcomp
enter
xchg
mov
push
push
dec
add
out
jo
outs
inc
jmp
inc
loopne
je
push
aad
mov
mov
popf
addr16
or
test
mov
lods
mov
push
cmp
xchg
imul
out
xchg
fs
mov
and
daa
sbb
int
fisub
and
push
outs
dec
leave
push
ss
sub
lds
xor
out
in
(bad)
cs
retf
cmp
loopne
popa
cmc
adc
fsubr
xchg
xor
and
stos
test
adc
cmps
mov
sub
cs
sbb
add
add
daa
jmp
scas
mul
adc
push
sub
mov
leave
test
mov
or
loopne
aam
pop
sub
push
addr16
call
inc
sub
pop
sbb
stc
les
movs
(bad)
in
cs
call
cmps
repz
arpl
adc
mov
dec
das
lds
jl
xor
cs
pop
mov
fwait
arpl
out
jno
sub
cmc
out
and
cs
out
fwait
aam
cwde
xor
mov
out
jle
sbb
mov
mov
add
xor
xor
into
push
popa
lea
fwait
add
in
cld
mov
mov
inc
pop
mov
and
mov
jp
gs
rcr
cs
sub
cs
add
xor
jbe
jo
xchg
imul
retf
pop
nop
xlat
cs
add
int3
cmp
aam
cs
mov
jmp
(bad)
leave
dec
fild
bndldx
out
fwait
push
hlt
mov
jmp
dec
add
cmp
jle
rcl
pop
pop
inc
mov
cwde
push
adc
sub
cmp
outs
retf
push
jmp
fsubr
xchg
cs
pop
inc
add
sbb
mov
add
sti
sub
mov
gs
ss
mov
std
test
je
cs
inc
push
ret
cs
les
mov
dec
xor
jns
jecxz
add
aaa
sub
dec
movs
cs
int3
fcomp
push
into
add
call
imul
je
test
adc
neg
push
jmp
sahf
scas
and
mov
mov
fwait
les
mov
out
cwde
sbb
clc
adc
(bad)
adc
push
and
jmp
and
mov
sub
pop
scas
(bad)
movhpd
stos
dec
mov
aam
ret
mov
movs
cmps
lea
rcl
mov
retf
pop
push
scas
pusha
sub
xor
pop
mov
ins
fistp
movd
and
cmc
les
jge
sub
push
test
out
cmp
inc
adc
stos
pop
or
aad
fisub
mov
icebp
adc
inc
fidiv
sub
fcomp
sub
adc
inc
mov
and
fsubr
adc
pop
stc
repz
sub
push
cs
ins
in
cmc
sub
pop
inc
or
cs
into
ds
les
es
(bad)
cdq
fs
jo
cs
loope
mov
sub
lock
dec
and
jl
inc
and
movs
in
(bad)
into
mov
mov
iret
arpl
(bad)
xor
mov
jmp
pop
int3
imul
mov
mov
mov
xor
outs
mov
pop
ss
pushf
xor
xchg
ret
std
retf
shl
mov
or
jmp
jbe
cmp
sti
stc
leave
sbb
and
dec
in
in
jmp
push
into
jle
mov
mov
xchg
inc
outs
(bad)
(bad)
aas
pop
mov
pop
out
xchg
push
xor
rcl
fucom
lds
jl
outs
mov
and
in
pop
mov
mov
aaa
(bad)
adc
xchg
xchg
daa
repz
out
repnz
out
arpl
out
dec
and
push
jmp
imul
and
and
retw
mov
(bad)
cmps
fistp
pop
xor
lock
or
cmp
sbb
mov
fs
imul
mov
call
sbb
iret
lods
lahf
out
ins
imul
call
scas
jle
leave
ret
(bad)
push
and
call
icebp
push
pcmpgtb
sub
xor
add
sub
dec
pop
pop
popa
test
cs
jb
lock
inc
sub
cmps
cs
inc
add
mov
sbb
push
jge
push
es
or
pop
pop
(bad)
scas
fnstcw
fisubr
jno
push
sub
cwde
pop
or
push
cs
push
retf
int3
iret
cs
cli
pusha
nop
cs
jmp
test
and
(bad)
aad
mov
fld
jo
mov
sub
mov
ret
xor
fwait
outs
fmul
cld
fsub
(bad)
pop
sub
cmc
mov
inc
mov
aam
cs
bound
xchg
or
sahf
cs
mov
das
mov
cs
push
div
outs
out
cmp
sbb
es
mov
jge
repnz
cdq
sub
aad
add
cmc
pop
test
xlat
mov
int
dec
jmp
dec
and
jle
xor
jp
cld
xchg
(bad)
std
jb
xchg
sbb
test
scas
jge
mov
jb
inc
daa
xchg
dec
test
popf
xor
mov
test
iret
xor
sub
loopne
add
ficomp
sub
imul
dec
out
mov
iret
inc
cwde
sbb
and
adc
jmp
or
loopne
pop
adc
mov
xchg
retf
push
push
ffree
jne
sub
cs
cmp
je
test
and
sbb
clc
fisubr
scas
mov
push
or
ret
cs
push
cmp
mov
sub
imul
in
mov
rol
add
pop
lods
pusha
jae
xor
(bad)
xchg
cmc
dec
jmp
adc
push
in
mov
stos
loop
mov
jle
ds
inc
data16
retf
lods
cs
mov
fisubr
daa
or
mov
pop
xchg
xor
rcl
es
outs
cs
sbb
rcr
jmp
xchg
scas
in
cs
into
sbb
jae
add
mov
adc
(bad)
jmp
or
mov
ret
fidivr
inc
xchg
outs
(bad)
jg
ins
and
sub
sbb
inc
int
inc
sub
mov
mov
jbe
js
nop
pop
(bad)
into
add
and
push
jmp
fsub
retf
jae
xchg
or
lock
jmp
ret
or
dec
cmp
xchg
mov
push
adc
(bad)
jecxz
xor
inc
xchg
aaa
rol
arpl
and
enter
push
xchg
aad
xor
data16
jge
inc
dec
outs
xchg
sar
out
data16
fadd
xor
scas
test
mov
fisubr
enter
and
in
xchg
and
lods
xor
jp
(bad)
push
dec
daa
ret
add
cld
leave
lods
call
mov
(bad)
in
iret
aam
cs
dec
xor
clc
leave
and
lock
mov
push
ror
sbb
jb
pop
xchg
mov
sub
shl
pop
jb
mov
inc
iret
sub
mov
div
jle
pushf
sub
gs
jp
test
shr
stc
sti
(bad)
out
mov
adc
or
pop
jae
loope
test
movs
xor
jne
test
(bad)
or
push
cld
mov
sahf
mov
aam
pop
movs
(bad)
sub
pop
movs
pop
in
xor
scas
clc
sub
pop
sahf
pmullw
int3
lods
loopne
out
cmp
jp
inc
aam
cs
sbb
sub
out
addr16
aad
fidiv
mov
retf
into
xchg
int
and
xchg
sub
cmp
cmp
test
xchg
jge
and
and
push
cmp
repz
jmp
mov
push
imul
repnz
pop
push
dec
fwait
mov
mov
cs
in
jecxz
jmp
lods
mov
mov
push
pop
xor
ins
sub
movs
shl
adc
pop
sbb
scas
test
(bad)
loopne
pusha
cs
sbb
jb
xchg
cs
mov
cmp
pop
iret
push
cmp
jbe
jnp
mov
and
push
push
aas
rcl
push
pop
imul
les
and
out
and
in
cmc
xchg
cmps
arpl
adc
js
xchg
add
xor
icebp
pop
pop
int3
outs
out
mov
scas
cmp
push
cs
push
adc
cs
push
or
xor
cli
out
push
mov
and
ins
leave
cli
mov
imul
cwde
ret
cs
push
mov
test
cli
cs
clc
in
sar
mov
lods
ins
cmp
popf
cs
bound
cs
add
mov
pop
(bad)
cs
xchg
test
inc
xor
jge
test
mov
mov
bound
mov
cs
fsubr
xchg
xor
cs
cmp
ss
xchg
cmp
mov
mov
mov
cmps
imul
outs
fmul
(bad)
and
sub
inc
cs
cdq
xchg
mov
outs
fldenv
cmp
dec
data16
test
or
cld
ins
xlat
popf
xor
icebp
adc
xor
daa
sbb
enter
add
xor
push
push
popf
xchg
inc
shl
es
cmc
jp
(bad)
icebp
cmp
dec
sub
cmp
xor
scas
xchg
mov
rcr
fld
cmp
imul
xor
into
inc
pushf
into
scas
pop
and
(bad)
cmc
mov
jmp
sar
ret
das
sbb
int
test
(bad)
out
cmp
add
push
cs
pushf
and
ficom
fsubr
clc
pop
dec
aaa
pop
fist
xor
xor
cmp
call
push
pop
into
aam
cs
jo
cmp
cs
(bad)
stos
mov
cs
push
(bad)
jbe
jae
cs
lods
aaa
sub
ficom
mov
pushf
ffree
xchg
fst
and
mov
add
cmp
jmp
shl
jmp
fidivr
enter
cmps
fimul
mov
test
fstp
mov
or
add
and
(bad)
jne
adc
arpl
xchg
fmulp
pop
mov
mov
push
in
cmp
jge
cli
or
push
mov
cmp
leave
mov
mov
lods
jmp
xlat
cld
jnp
ds
f2xm1
mov
shl
mov
leave
add
and
jo
fmul
push
std
arpl
mov
sar
les
xor
aas
cmp
add
mov
call
enter
xchg
sub
dec
xchg
pop
mov
dec
xchg
xlat
mov
jnp
jne
sub
mov
and
stos
add
je
sti
jb
mov
scas
or
jno
mov
mov
or
mov
adc
mov
fs
loope
arpl
out
cli
pop
push
out
aam
push
sahf
ja
adc
xor
dec
jnp
test
xchg
ficomp
push
mov
mov
es
xchg
inc
jb
push
cdq
stc
(bad)
sti
or
sbb
(bad)
std
sub
dec
lock
out
add
iret
xchg
jg
es
inc
mov
mov
jl
inc
(bad)
xchg
mov
test
pop
xor
loopne
sub
out
aad
into
leave
mov
push
popa
in
push
cld
pop
or
jno
jo
sub
mov
jge
retf
test
pop
mov
jne
adc
xchg
pop
jno
jns
mov
js
fild
jp
cmps
jg
xchg
sub
shl
lods
ror
add
inc
push
mov
adc
js
scas
jg
lea
dec
mov
jp
xor
adc
xor
iret
and
mov
aas
in
mov
je
mov
mov
inc
inc
icebp
xchg
fiadd
daa
ins
sub
push
sbb
arpl
aam
add
out
(bad)
jmp
dec
test
cld
lods
pop
call
jb
test
pop
xchg
pop
mov
cmp
jge
pop
push
pop
cs
shl
mov
mov
mov
(bad)
dec
lods
mov
xchg
fisttp
xor
and
and
sub
cs
fdivr
and
cmp
in
xor
and
mov
test
xor
mov
push
adc
mov
mov
ret
fstp
xlat
cs
push
js
xor
test
sbb
lea
movs
inc
in
jae
out
mov
jecxz
aaa
push
test
outs
pop
int
cs
test
xor
fnstsw
mov
jle
mov
xchg
cs
mov
add
cs
in
fisub
xor
data16
xor
mov
dec
jle
or
imul
outs
popa
and
push
sbb
std
or
test
cli
xchg
sbb
adc
aaa
jnp
out
pop
mov
sub
ret
ja
cmp
aad
xchg
or
dec
lods
pop
jno
sub
sar
and
mov
cs
add
and
aas
mov
cs
sub
dec
adc
cs
dec
or
out
mov
scas
loope
les
jo
(bad)
xor
mov
cmp
add
faddp
scas
jecxz
int
out
scas
inc
cwde
ss
js
das
push
or
mov
mov
pop
enter
stc
loop
cs
push
icebp
pop
pop
cmp
pop
sub
sub
aaa
fldcw
jbe
add
scas
inc
ret
push
xor
cs
leave
inc
xchg
push
ins
addr16
mov
ret
cmp
sub
jnp
stc
nop
fsqrt
cmp
pop
retf
xlat
sub
add
mov
in
jmp
sub
sub
out
and
fistp
fldcw
inc
jno
aad
dec
repnz
cs
jecxz
cmp
fs
push
inc
stc
fcmovb
mov
and
fwait
jo
cmovns
jmp
dec
sub
(bad)
and
mov
repz
or
mov
lock
xor
cs
loop
xor
int3
out
test
dec
mov
hlt
xchg
cmp
sub
jl
inc
xchg
or
dec
cmps
daa
mov
fsubr
data16
jp
das
inc
adc
push
push
jmp
xchg
pop
mov
adc
jnp
mov
cli
mov
gs
or
fs
jnp
shl
inc
dec
outs
stos
pop
out
pop
test
xor
jmp
mov
imul
scas
add
push
mov
sub
mov
sub
mov
lods
(bad)
xchg
nop
cmps
cwde
sub
mov
fwait
into
out
jnp
cs
xor
xchg
loope
out
sbb
dec
(bad)
shl
cmps
or
cs
outs
mov
xor
pusha
push
cs
sbb
(bad)
pop
cs
jnp
inc
add
ret
je
add
out
test
jno
out
loope
ret
ret
ins
out
inc
or
inc
imul
test
pop
fnstcw
aaa
jge
add
inc
pushf
push
(bad)
sbb
mov
aam
push
std
movs
fdivr
xor
xchg
sub
xor
jbe
mul
xchg
movs
pop
mov
sbb
xor
loope
cs
dec
add
and
mov
les
inc
mov
test
sti
call
or
dec
jmp
scas
aas
mov
cmp
sbb
or
xor
(bad)
cmp
fisttp
jno
jns
imul
sub
mov
call
jl
mov
test
xor
cmp
clc
mov
push
mov
cli
add
jns
push
sbb
(bad)
es
in
or
test
out
in
push
sbb
call
mov
xor
cmc
aam
xor
xchg
fcomp
sub
add
cs
sub
xor
ins
dec
cmp
(bad)
and
pusha
pop
mov
cs
sub
into
inc
inc
cld
cs
dec
cdq
dec
sub
aam
xchg
scas
clc
push
mov
jns
pushf
fnstcw
add
and
and
cs
xlat
mov
cs
push
pop
add
popf
cs
push
mov
and
aad
jle
jns
jnp
cs
mov
ins
adc
ins
sub
mov
outs
or
fwait
mov
jnp
add
xor
ret
int
retf
pop
sub
loop
(bad)
pushf
clc
into
mov
cmc
cs
cdq
stos
pop
sub
pop
mov
test
sbb
adc
mov
(bad)
lds
cmp
outs
pop
cs
sbb
dec
cmp
aaa
cwde
mov
bound
(bad)
inc
cmc
cs
adc
movs
sbb
in
cmp
scas
push
mov
sub
sahf
jno
push
nop
or
(bad)
xor
inc
add
test
xchg
cs
scas
(bad)
push
stos
fst
sbb
imul
inc
adc
inc
sub
dec
retf
mov
pop
scas
sbb
and
adc
ret
and
cs
xchg
jb
add
add
es
and
mov
cs
add
xor
es
aaa
repz
jb
(bad)
ficom
push
das
cs
pop
dec
jnp
xchg
pop
cs
pop
arpl
xor
out
mov
jecxz
dec
adc
cmp
movs
jmp
jns
add
outs
in
fcom
sbb
push
pop
imul
mov
sub
dec
dec
mov
inc
lock
push
imul
ins
fistp
pop
ret
push
nop
fiadd
dec
mov
shr
sbb
fxch
mov
scas
cs
mov
retf
xor
icebp
movs
popa
sub
xor
(bad)
mov
(bad)
aas
xchg
push
out
mov
icebp
sub
mov
pusha
push
cmp
aad
mov
call
outs
mov
xor
xor
dec
jp
sbb
mov
or
fimul
push
jg
cmp
add
aas
xlat
push
or
dec
push
jno
pop
add
cs
mov
in
cs
ja
cmc
retf
pop
outs
xor
xchg
inc
or
pop
out
test
fisttp
out
and
or
imul
dec
cld
int3
xchg
dec
sub
dec
xor
push
test
js
pop
xor
inc
adc
mov
in
out
fild
pop
mov
add
out
jno
out
les
popf
int3
push
loop
rol
mov
(bad)
or
push
xor
sti
jb
adc
jmp
cs
adc
inc
bound
and
scas
push
add
mov
push
cmp
mov
add
(bad)
push
sahf
jp
arpl
retf
jge
ds
movs
test
push
loopne
xchg
pop
mov
adc
inc
shl
pop
jnp
or
jp
dec
stos
push
and
fisubr
dec
pop
add
out
mov
es
jp
test
xchg
dec
mov
loope
dec
xchg
xor
repnz
cmps
out
aas
inc
fist
cmp
lods
iret
shl
sub
arpl
sti
(bad)
iret
dec
daa
push
cmps
dec
push
hlt
movs
jmp
mov
inc
adc
call
mov
dec
mov
xchg
outs
xchg
mov
mov
inc
or
fmulp
retf
mov
adc
stc
push
dec
jns
movs
sbb
repnz
inc
adc
xor
daa
cwde
in
pop
mov
leave
pop
cmp
arpl
(bad)
imul
xlat
cmp
jge
es
adc
imul
icebp
repnz
add
or
(bad)
push
lods
cmp
and
cmp
inc
mov
add
(bad)
retf
adc
xchg
jl
xchg
dec
out
outs
aas
inc
cmps
cmp
xchg
sub
bound
mov
retf
inc
aam
mov
stos
or
mov
retf
iret
out
in
test
push
into
daa
(bad)
aad
add
xor
mov
leave
jo
sub
ss
repz
push
shr
cmps
(bad)
add
xchg
or
movs
add
addr16
jb
pop
loopne
or
mov
mov
cdq
(bad)
std
int3
adc
cmc
xchg
cmc
mov
leave
ret
push
and
(bad)
cmp
xor
lods
gs
mov
call
aas
lods
cmp
lds
push
hlt
leave
cmc
jmp
or
add
out
(bad)
sbb
shl
and
mov
xor
sub
sti
pop
cmps
in
(bad)
push
mov
mov
mov
(bad)
sub
mov
rep
mov
sub
sub
jle
mov
dec
idiv
lds
and
ja
jge
mov
cs
mov
pop
mov
iret
xor
cmc
popa
test
pop
sahf
cs
dec
push
cmc
xor
xor
push
inc
and
outs
std
cs
pop
movs
adc
or
daa
jg
adc
mov
retf
xchg
add
js
pop
je
add
sub
inc
mov
mov
out
fwait
dec
dec
cdq
or
pushf
movs
sub
rcl
cs
enter
and
mov
mov
sbb
mov
xlat
cdq
xchg
pop
cmc
cs
push
push
sbb
xchg
retf
xor
ret
jno
std
scas
fisub
cs
fisubr
cs
shl
mov
cmp
nop
inc
(bad)
inc
xchg
pop
and
in
sahf
and
call
cmps
add
sbb
dec
xor
ret
inc
nop
mov
pop
push
and
leave
sbb
push
fsubr
enter
jnp
inc
push
jo
repz
add
int
jae
repnz
adc
sub
xchg
lock
hlt
daa
mov
fisttp
cs
jae
cmps
sti
stos
dec
xor
iret
mov
ins
retf
mov
add
out
push
xlat
sub
out
mov
adc
xchg
shl
mov
cs
(bad)
(bad)
mov
cs
pop
lea
sbb
cmp
mov
mov
not
or
jmp
add
inc
out
loop
sbb
pop
retf
sti
retw
mov
jmp
mov
xchg
lahf
add
pop
mov
mov
daa
sub
dec
pop
(bad)
iret
and
mov
mov
(bad)
xchg
cmp
mov
and
ja
dec
push
int3
fldcw
add
or
dec
(bad)
jne
cmps
pusha
pop
push
enter
std
sar
push
fcomp
adc
pop
xchg
iret
mov
cli
xor
mov
pop
out
mov
fdiv
in
cmp
mov
mov
xchg
or
aad
sbb
fsub
mov
jmp
mov
in
dec
daa
test
xchg
enter
into
arpl
jmp
sbb
lock
(bad)
je
out
pushf
mov
jae
mov
mov
jle
push
mov
xor
dec
or
add
sbb
jo
dec
sub
ins
push
ret
in
mov
iret
cmps
dec
pop
gs
or
fucomip
(bad)
mov
outs
push
daa
inc
adc
sub
push
or
int3
cmp
mov
lea
gs
sahf
jns
leavew
jmp
lock
bound
ss
xor
mov
add
sub
inc
ja
mov
or
mov
sub
shl
push
add
enter
xor
sub
in
xor
cs
(bad)
xchg
mov
loop
mov
sar
fcomp
mov
cmp
and
mov
test
ret
cmp
rcl
stc
add
jl
cs
adc
push
mov
or
xor
xor
(bad)
pop
ss
cli
xchg
rcr
inc
and
stos
jno
and
dec
sub
out
lahf
jle
cmps
imul
in
jae
es
cmp
rcr
retf
cwde
fnstsw
out
outs
dec
ss
fwait
mov
jne
sbb
add
repnz
jnp
push
out
fcompp
stos
test
mov
leave
push
jge
fsub
pop
mov
and
les
mov
mov
rcl
iret
aas
mov
movs
call
addr16
pushf
mov
inc
pop
js
mov
ror
cmp
jb
pop
cmps
mov
adc
or
adc
add
and
push
mov
mov
xchg
mov
mov
jno
mov
stos
and
sub
add
test
push
fbstp
cs
ja
jnp
lahf
loopne
fsub
cs
jmp
out
movs
cs
aad
fld
pop
and
mov
outs
push
push
arpl
xchg
dec
fbld
nop
mov
lock
in
in
adc
cs
ins
test
cs
sub
(bad)
fild
mov
xchg
mov
xchg
cmp
aad
les
jmp
push
adc
xchg
outs
mov
nop
jae
out
gs
(bad)
stc
sbb
lea
push
cmp
sahf
jle
xor
retf
lahf
push
adc
mov
scas
pop
js
int
rcr
sbb
xchg
ret
ds
in
pop
pop
add
mov
pop
lods
xor
dec
jecxz
mov
mov
adc
mov
into
sar
pavgb
fwait
outs
ss
push
add
xor
out
scas
ret
jmp
add
repz
test
sar
sbb
fdivr
sub
pushf
leave
clc
cmp
mov
rol
lahf
jle
and
je
fcom
test
sbb
fild
jg
aad
cli
ss
push
jmp
(bad)
xchg
add
push
out
and
icebp
mov
repnz
fdivr
xor
sbb
sub
adc
leave
test
hlt
or
movs
mov
std
push
(bad)
push
leave
rcr
mov
jmp
mov
in
cwde
xchg
sub
pop
jp
stos
push
mov
(bad)
dec
es
jo
add
sbb
jg
(bad)
nop
sbb
push
xor
mov
inc
frstor
sbb
(bad)
mov
fstp
dec
pop
enter
test
(bad)
adc
sbb
adc
cmps
popa
retf
sar
xor
dec
out
leave
sbb
popa
or
ret
pop
pop
xchg
add
push
inc
bound
mov
fidivr
movs
cmps
or
arpl
outs
dec
cdq
xor
(bad)
imul
and
sub
ins
jae
scas
pop
jmp
(bad)
mov
out
cdq
jg
(bad)
mov
mov
cmps
int3
test
daa
mov
idiv
(bad)
in
mov
add
daa
pop
add
push
inc
push
lods
mov
(bad)
call
sub
stc
or
sub
les
inc
pop
xor
sahf
and
push
adc
(bad)
in
cs
ret
inc
jmp
in
or
imul
push
cs
nop
lahf
pop
shr
sub
retf
and
mov
cs
mov
loopne
mov
jge
mov
mov
popa
jne
fld
sbb
jecxz
inc
or
jno
enter
sub
xor
pop
and
iret
aad
dec
xchg
xor
mov
cs
adc
pop
(bad)
and
xor
add
mov
mov
rcl
mov
sub
xor
pop
xchg
test
shr
outs
pop
sbb
sbb
jb
pop
mov
scas
cmp
es
inc
out
(bad)
scas
(bad)
mov
mov
rcl
push
xchg
sub
les
(bad)
or
xor
jle
mul
aam
loope
lods
lods
sahf
aad
and
cs
and
enter
mov
cmp
xchg
rcr
fld
daa
dec
mov
mov
test
mov
repz
(bad)
fistp
push
cwde
sbb
sub
mov
leave
cli
imul
in
jo
nop
dec
icebp
lock
lods
and
test
scas
sub
ret
scas
or
mov
pusha
push
(bad)
js
cmp
cs
pop
jne
cmp
ins
dec
pop
jmp
cmp
add
repnz
push
mov
xchg
inc
add
arpl
clc
rcl
imul
fdivr
ja
sub
mov
adc
or
fwait
mov
sub
fld
and
ins
inc
ja
inc
push
scas
(bad)
loope
fs
les
out
pop
lods
outs
xchg
pusha
outs
ins
bound
mov
retf
in
cmps
loopne
in
mov
aas
cmp
mov
out
retf
adc
imul
int
dec
inc
cs
mov
sub
enter
test
mov
cs
cmp
call
xor
leave
mov
cmps
fwait
adc
jp
shl
mov
out
out
(bad)
and
mov
push
cmp
push
retf
scas
fisubr
std
les
cwde
xor
push
fdivp
sub
pop
jno
and
out
and
fstp
popf
xor
sub
push
stos
add
repz
push
sti
mov
sbb
xor
push
jne
push
outs
aaa
jnp
xor
jp
pop
retf
addr16
out
fwait
push
lea
cmp
mov
sub
inc
xlat
pop
pop
sahf
mov
xchg
imul
sar
or
jb
xchg
call
xchg
in
dec
pop
add
xor
or
cs
cmp
sti
cs
jne
push
lods
add
nop
adc
inc
and
ja
or
movs
pop
fsubr
inc
(bad)
(bad)
sub
mov
test
mov
jnp
cmp
repz
rol
cs
xor
cmc
add
jle
test
cs
pop
dec
int3
pop
pop
mov
sbb
or
cs
inc
lods
cmp
mul
dec
int3
(bad)
arpl
adc
daa
jo
mov
dec
call
(bad)
lea
scas
lock
outs
and
inc
fs
jae
pop
inc
sub
cmp
scas
push
retf
test
xor
repz
out
stos
mov
jmp
retf
lods
(bad)
aas
loop
inc
mov
stos
stos
or
stos
pop
dec
(bad)
pop
cmps
xor
les
(bad)
fld
out
popa
jne
or
daa
ins
rcr
dec
test
add
mov
add
dec
and
fistp
mul
adc
mov
js
(bad)
push
mov
adc
idiv
jmp
nop
sub
mov
sub
cmc
dec
out
sbb
rol
rcr
js
xor
inc
in
mov
and
in
add
mov
cld
je
dec
mov
pop
xor
movs
mov
lahf
imul
mov
leave
xlat
mov
movs
arpl
cmps
test
dec
and
and
test
mov
jp
outs
mov
mov
sub
sbb
jae
mov
pop
loopne
mov
adc
xchg
repnz
aas
mov
mov
xchg
push
cmp
ficom
aas
in
out
jecxz
pusha
into
shr
dec
push
mov
mov
jno
scas
dec
sub
jge
out
jnp
les
repz
push
call
out
xor
aas
lea
adc
push
shr
inc
out
sti
inc
push
push
and
cmc
bound
cmp
repnz
mov
cmp
xchg
mov
sub
or
pop
fwait
loope
sbb
ins
hlt
sub
in
xor
iret
lods
or
pop
fmul
pop
out
fist
or
push
pop
dec
es
cs
or
sbb
or
xor
xor
adc
popa
adc
ss
lock
daa
ja
loopne
das
and
sub
xchg
scas
push
mov
shr
aaa
ret
mov
std
cs
sub
mov
add
sahf
jmp
adc
cmovs
or
pop
or
mov
call
int3
fs
adc
iret
cmp
dec
(bad)
jns
xchg
test
sbb
xor
repz
mov
xor
sub
out
cmp
int
cli
jmp
dec
shl
lea
sbb
aaa
scas
loope
add
mov
movs
sbb
and
outs
add
or
mov
iret
cs
cmps
sub
div
je
sahf
movs
mov
adc
pop
shl
ins
or
(bad)
aam
mov
hlt
xchg
fnsave
movs
mov
push
(bad)
jmp
mov
lock
lods
pop
out
jae
cmp
fstp
fldenv
pop
push
movs
or
xchg
lahf
jne
aam
out
test
push
adc
dec
aas
arpl
cmp
push
and
push
add
(bad)
mov
out
call
mov
iret
or
add
mov
test
aad
daa
xlat
fsubr
dec
xchg
pop
push
loopne
ficomp
jb
inc
loop
test
pop
dec
pop
mov
push
sbb
repz
scas
jne
lods
shr
mov
and
cmp
push
mov
cs
leave
fstp
and
sti
pop
cmc
fidivr
pop
cs
xor
rcl
cwde
sub
ror
xchg
xor
dec
jle
aas
pop
ins
aas
sbb
inc
scas
xor
addr16
outs
xchg
rcl
mov
sub
fcomp
icebp
scas
and
dec
jmp
cs
adc
mov
cmp
xor
push
push
sbb
xchg
std
pop
inc
adc
ss
movs
jb
or
add
mov
xor
mov
push
out
sbb
(bad)
into
fs
ds
sar
jl
ret
push
xchg
dec
xor
leave
or
mov
xor
adc
std
loop
xor
and
adc
jbe
sti
pop
sub
jl
pop
jb
rcr
fs
(bad)
xor
cmps
jp
pop
cmp
imul
sub
mov
jl
into
mov
pop
popa
or
push
shr
addr16
and
and
fnstenv
xor
add
sbb
nop
jbe
mov
push
and
mov
lods
call
and
repnz
jno
cmps
cmp
pop
xor
pop
imul
pop
add
inc
aas
mov
jge
mov
call
fmul
inc
(bad)
mov
outs
leave
or
iret
loope
inc
sbb
mov
daa
jmp
dec
ds
push
adc
push
test
dec
cmp
imul
inc
fbstp
je
add
es
pop
add
jbe
push
pop
push
(bad)
ficomp
(bad)
call
dec
rol
lock
clc
cli
fsubr
jnp
sub
mov
cld
inc
les
adc
data16
bound
add
je
mov
out
retf
test
jo
mov
xchg
cli
ror
imul
cs
pop
ins
add
popa
sbb
inc
xor
xor
sti
mov
pop
ror
outs
(bad)
lds
xchg
pop
fnsave
pop
test
pop
jmp
pop
sti
cmps
test
xchg
stos
int3
pop
mov
ja
lea
adc
pop
scas
push
cmp
xchg
cmp
cs
jne
pop
xor
push
mov
xchg
mov
xor
or
push
cmps
pop
jne
out
arpl
lods
addr16
in
dec
daa
mov
pop
or
das
sbb
test
pop
out
cmp
out
lock
sbb
call
push
es
jp
jecxz
and
cs
jne
cmc
shr
fidivr
cmp
xor
in
inc
rol
sub
cwde
daa
sbb
sbb
outs
push
xor
bound
sub
out
mov
pushf
adc
stos
push
xchg
and
test
add
or
adc
push
xchg
test
push
fcom
cs
addr16
cmp
call
or
sbb
leave
mov
xchg
ficomp
pop
push
jl
test
cs
jecxz
xchg
mov
daa
mov
fimul
lock
dec
aam
into
cs
inc
sub
sub
retf
push
xor
cmp
inc
pop
jbe
inc
sub
and
sahf
xchg
out
adc
or
mov
scas
xchg
loopne
sti
(bad)
cmp
jge
xor
mov
mov
cmps
jecxz
and
ror
jmp
cmc
cdq
cmp
and
leave
mov
out
mov
sub
mov
dec
sub
xor
mov
add
inc
out
push
aam
fs
leave
or
(bad)
lods
mov
push
mov
inc
pop
js
cli
xchg
jno
mov
jbe
dec
dec
sub
leave
inc
call
mov
sar
outs
out
push
push
add
pop
mov
dec
xor
out
jo
loopne
ja
dec
cs
clc
call
add
jmp
out
fucomp
or
fisttp
xchg
mov
sub
mov
lods
dec
xor
stos
in
xchg
adc
mov
add
or
in
push
dec
cs
jns
jae
xchg
aam
cs
enter
retf
jmp
movs
stos
mov
das
push
and
xchg
test
push
call
inc
pop
sbb
(bad)
push
in
aad
sub
cwde
or
cs
sar
ret
adc
inc
sub
cld
outs
lahf
stos
out
scas
adc
or
dec
jnp
pop
outs
jge
mov
add
pop
movs
and
mul
stos
xchg
inc
ret
popf
fistp
sti
sub
sbb
adc
mov
jp
adc
sbb
ficom
popf
cmp
add
xchg
mov
mov
enter
cmc
in
bound
or
(bad)
sub
lahf
scas
enter
mov
sub
lea
scas
sbb
jg
xchg
retf
into
and
sti
mov
sahf
mov
cmp
cmp
sub
fstp
fs
fimul
cli
push
sub
jmp
xor
mov
pop
and
adc
das
fsubr
or
mov
std
push
shr
inc
jno
xchg
and
std
or
and
out
cmc
cs
call
inc
icebp
xchg
push
enter
xor
jle
add
aam
cs
mov
and
xor
adc
mov
retf
call
cs
pop
sbb
mov
add
inc
pop
js
xchg
sar
les
scas
fst
out
sub
test
std
fcom
fcmovu
cmp
mov
(bad)
shr
les
fild
inc
(bad)
cmp
push
mov
sbb
jmp
adc
in
je
and
and
shl
movs
mov
loope
pop
jnp
(bad)
shl
jns
jo
mov
bound
cmp
mov
test
cld
movs
mov
pop
(bad)
ja
adc
cmp
dec
mov
inc
call
pop
cmp
inc
or
mov
lods
stos
mov
and
push
mov
jno
pop
je
leave
cli
cmp
cs
jmp
mov
into
les
lock
test
cmp
in
jmp
out
mov
dec
ret
dec
mov
aas
in
jl
out
es
xchg
fisub
jmp
sub
adc
outs
cs
cwde
movs
jecxz
xor
and
or
aaa
sub
mov
xchg
arpl
xchg
sub
inc
jnp
mov
aas
fwait
sbb
iret
into
mov
aaa
aas
xlat
fs
cmp
ins
dec
les
xor
xor
push
inc
inc
addr16
mov
aas
out
dec
cs
jecxz
shr
stos
test
les
aas
xchg
mov
cs
pop
cs
or
mov
mov
ja
stos
inc
loop
paddusb
int3
idiv
popf
aam
and
push
adc
adc
scas
sbb
aas
cs
retf
cs
sti
lahf
or
and
dec
push
cmp
(bad)
xchg
std
movs
jb
icebp
gs
mov
imul
sub
xchg
dec
enter
vgatherqpd
loop
(bad)
xchg
cs
repz
out
or
mov
push
clc
mov
xchg
xor
jmp
jge
ret
fimul
lock
cwde
xor
sub
mov
pop
inc
dec
push
cmp
adc
mov
push
lods
test
(bad)
and
popa
and
sar
cli
lods
pop
(bad)
mov
pop
stc
lahf
mov
jae
nop
add
or
xor
xor
xchg
and
out
sahf
daa
mov
jle
xor
cs
jg
pop
inc
add
fdivr
pushf
mov
loop
jge
sub
imul
sub
mov
cs
in
xchg
(bad)
mov
daa
cmp
rol
out
(bad)
jge
gs
push
jl
or
rol
(bad)
lahf
mov
stos
icebp
enter
rcr
(bad)
dec
mov
add
pushf
mov
jp
pop
cmp
cs
dec
mov
mov
sbb
jnp
bound
(bad)
sub
xchg
jecxz
push
and
dec
fs
loope
sub
add
into
cmp
(bad)
stos
fld
sub
fwait
shl
js
and
ret
xor
test
xor
mov
data16
mov
xor
pop
xor
into
or
dec
(bad)
in
and
out
test
mov
retf
xor
rol
daa
adc
cmp
sub
repnz
sbb
jae
test
dec
lods
jbe
stc
mov
sub
ja
xor
stos
sub
(bad)
pop
cmp
aam
cmp
cmp
rep
xor
loopne
arpl
inc
mov
mov
fld
shr
push
(bad)
cld
(bad)
in
cmp
jecxz
into
popf
(bad)
push
scas
jle
push
xor
dec
(bad)
das
jmp
push
shr
lods
popf
cmp
int3
push
mov
fimul
fs
lock
sub
loopne
or
dec
and
test
scas
xchg
fisub
rcl
xor
xchg
stos
and
dec
cmp
jne
repz
pop
push
push
add
cmp
jb
pushf
pop
xor
repz
clc
repz
sub
mov
mov
adc
out
leave
arpl
pop
sbb
fiadd
arpl
xchg
cwde
and
push
js
mov
push
push
xlat
stos
mov
ret
inc
inc
mov
mov
add
push
jns
outs
push
js
and
push
scas
cs
sar
push
add
(bad)
popf
movs
sar
inc
leave
loope
cs
add
cs
mov
arpl
mov
xchg
lds
mov
mov
out
pop
inc
mov
movs
sbb
out
iret
cs
fsubr
dec
cmps
cs
fstp
fadd
lods
mov
pop
and
cs
jle
inc
or
xor
dec
mov
cld
dec
test
mov
cmps
sub
stc
jnp
retf
xor
cs
jo
ds
fstp
inc
shl
and
ds
loopne
add
jmp
leave
jbe
sub
inc
data16
xor
mov
fimul
shl
jl
sub
pop
jge
nop
in
scas
jle
pop
aam
adc
icebp
into
sub
daa
ins
pop
(bad)
rcr
cli
leave
jnp
mov
adc
inc
xor
mov
pop
cs
pusha
adc
mov
jbe
fdiv
mov
sub
addr16
add
rcl
xchg
fs
jae
mov
and
jnp
xchg
pop
inc
mov
jle
inc
mov
dec
sti
(bad)
pop
loopne
jbe
mov
mov
xchg
dec
or
scas
xor
imul
je
(bad)
clc
es
fdivr
jmp
loop
outs
ss
imul
or
sbb
xor
jmp
fxch
test
pop
scas
mov
mov
and
scas
adc
fs
ja
sbb
ror
mov
leave
inc
jmp
sub
imul
cmc
lea
daa
inc
test
enter
mov
aad
mov
mov
outs
jmp
cs
add
shl
mov
jne
jnp
outs
sub
or
fisub
jo
sub
pusha
jne
and
pop
inc
sub
in
push
cs
shl
inc
mov
pop
sbb
outs
mov
clc
sub
arpl
imul
add
stc
js
pusha
cmp
mov
stos
jne
shl
cmp
sbb
pusha
sbb
or
aaa
addr16
shl
out
cli
inc
fdiv
mov
cmc
scas
retf
int
in
pop
pop
mov
adc
mov
jae
arpl
mov
scas
imul
(bad)
adc
(bad)
jmp
daa
cmp
lea
cs
neg
xor
adc
xor
cmp
and
inc
ss
sub
scas
out
mov
cs
cmp
xor
adc
sbb
add
fisubr
xchg
ror
jae
mov
imul
ret
xor
mov
icebp
inc
jg
add
xchg
aad
fbstp
(bad)
mul
mov
ficom
(bad)
jae
mov
nop
cld
repz
popa
pop
inc
popa
fisubr
(bad)
xchg
fild
lahf
mov
mov
or
stos
push
jmp
fstp
pop
fisubr
sbb
mov
pusha
rol
pop
inc
push
data16
into
mov
cs
xchg
cld
div
fwait
cs
inc
or
sub
cmps
mov
mov
fld
cdq
push
jbe
pop
aad
xchg
mul
push
loope
jne
arpl
fwait
xchg
lock
and
test
cmp
cmc
in
adc
inc
cmp
cwde
sub
mov
push
xor
push
arpl
push
mov
aaa
and
(bad)
jae
and
mov
inc
mov
sub
data16
pop
sub
cmp
adc
push
ja
or
xor
imul
call
cwde
sub
xor
sub
bound
(bad)
mov
sub
div
xchg
aas
addr16
mov
leave
out
bound
pop
xor
push
outs
sub
pusha
adc
test
cdq
mov
fnsave
cli
imul
pop
sub
out
je
or
cmps
in
pop
push
sub
push
fcmovnb
ret
cs
xchg
add
(bad)
daa
cs
cmp
inc
push
lock
and
push
lods
sahf
ins
call
stos
pushf
or
adc
cmp
cs
stc
fwait
jmp
pop
imul
dec
mov
rcl
pop
inc
daa
enter
cmp
adc
mov
or
stos
push
lock
adc
jp
scas
sbb
sbb
fcomp
ds
lock
sub
adc
fidiv
(bad)
in
fstp
movs
shl
outs
or
fimul
cs
sbb
sbb
sub
sahf
cmp
add
cmp
lods
xchg
sbb
or
push
into
push
inc
pavgw
aam
mov
and
sbb
xor
retf
jmp
cmps
leave
rcl
ja
xor
adc
pop
aas
push
(bad)
repz
cmps
xchg
js
cmp
xlat
pop
rcl
in
xor
fxch
daa
jle
inc
adc
xchg
mov
push
(bad)
das
mov
ret
popf
sbb
outs
dec
add
ret
adc
push
out
ins
xor
inc
ret
bound
(bad)
push
xchg
and
std
les
dec
xchg
ja
call
mov
data16
push
xor
sub
dec
and
adc
adc
loope
mov
jmp
out
stos
push
add
sbb
(bad)
in
out
add
or
ror
add
add
dec
ror
inc
xchg
rcl
ret
sub
sbb
aas
jecxz
or
js
or
mov
bound
xchg
ins
pop
and
cmp
mov
push
jae
rcr
jo
pop
jle
arpl
push
in
rol
fimul
or
pop
sbb
pop
fwait
lods
inc
push
ds
mov
mov
ins
push
xchg
dec
outs
aas
mov
jp
mov
mov
loope
outs
aaa
mov
xlat
iret
into
sti
mov
sub
out
stos
(bad)
test
and
out
pop
or
jne
push
je
pop
mov
imul
fsubr
cld
scas
shl
inc
cmps
or
push
mov
sub
pop
inc
xchg
and
add
mov
je
jp
fmul
rcr
xor
pop
lock
arpl
leave
inc
mov
add
cwde
(bad)
xor
pushf
jmp
call
pop
shr
cwde
test
jno
icebp
mov
ror
outs
mov
out
repnz
pop
xor
dec
push
sbb
inc
push
mov
mov
mov
cmc
dec
inc
iret
cmp
repnz
(bad)
in
in
(bad)
ss
leave
and
ds
mov
call
stos
iret
sar
push
inc
xchg
fs
(bad)
cmp
movs
adc
xlat
jp
mov
pop
test
or
fsubr
bextr
jl
inc
mov
js
push
dec
test
(bad)
push
sbb
cmp
sub
cmp
mov
aas
cs
add
xor
or
outs
cs
xchg
ins
inc
jnp
cwde
adc
mov
ret
scas
cli
sbb
mov
(bad)
std
cld
pop
xchg
sub
cmp
or
adc
fidivr
scas
mov
xor
jge
loopne
iret
cs
hlt
xchg
cmc
pop
dec
cli
mov
dec
or
(bad)
out
inc
cs
test
cmp
enter
cli
sti
les
push
movs
mov
mov
ret
jno
adc
test
hlt
retf
add
inc
cs
ins
push
adc
xchg
xchg
scas
add
pop
jge
lods
outs
mov
or
mov
add
mov
xor
jmp
xchg
push
out
push
add
in
sbb
pusha
cmp
push
mov
pop
outs
push
ret
shl
bnd
scas
es
rol
aad
cld
call
mov
(bad)
mov
xor
mov
xchg
dec
add
dec
inc
jnp
jmp
(bad)
fisub
inc
push
pop
or
jmp
nop
pop
test
xchg
enter
push
test
sub
dec
jb
cs
mov
adc
mov
jmp
js
cmp
xor
popa
or
xchg
loop
dec
sub
stos
pop
fisubr
cs
push
loope
mov
in
stos
sti
mov
imul
xor
push
(bad)
mov
out
sbb
xchg
clc
push
cmp
(bad)
data16
mov
outs
aas
imul
cmps
or
xchg
fisttp
add
mov
shl
xor
dec
fs
out
sub
jbe
sub
push
cmp
mov
sahf
cs
dec
daa
xor
lea
cs
ds
push
sbb
fldcw
mov
push
push
xchg
jo
enter
dec
sub
lock
sub
hlt
loop
in
std
test
xor
adc
je
cld
cs
sub
ins
(bad)
and
fild
es
mov
dec
test
fmul
loop
(bad)
xchg
les
cs
sub
jge
movs
pop
xor
mov
jnp
neg
cs
add
call
aaa
cmp
sub
add
mov
mov
pushf
sub
cmps
ret
sub
pop
mov
pop
jg
mov
cs
mov
cmps
pop
jno
dec
mov
mov
inc
shl
jae
imul
into
inc
cmp
into
fst
and
jnp
pop
inc
mov
test
hlt
push
mov
add
rcr
and
jno
popf
dec
sysret
push
ds
mov
cmp
lods
into
inc
xor
cs
in
into
jbe
xor
sti
scas
dec
(bad)
and
add
ins
dec
inc
or
outs
xor
fcomp
stos
int3
mov
cdq
push
scas
mov
les
cmc
mov
cmp
sbb
cs
xchg
sahf
(bad)
ret
xor
mov
(bad)
sahf
push
popa
lds
fcmovne
lea
rol
sahf
dec
gs
sbb
cs
loope
scas
out
je
int
out
cmp
shr
cs
ss
sbb
add
cs
pop
xlat
rol
daa
repnz
xor
cmps
push
cs
aam
xchg
daa
loopne
sub
icebp
mov
sti
push
mov
and
loopne
jmp
(bad)
data16
outs
mov
outs
inc
(bad)
sbb
xor
dec
jl
sar
fcmovnb
xlat
xchg
cs
push
lahf
aaa
dec
das
xchg
add
jae
test
jnp
sbb
out
mov
add
les
fscale
and
cli
and
push
push
mov
ins
sub
sbb
cmp
or
mov
rcl
cs
or
and
inc
add
push
fld
sub
mov
or
and
outs
cmp
stos
dec
xchg
loope
and
push
repz
mov
adc
pop
add
shld
aam
jl
stos
adc
sbb
scas
shl
sub
nop
lea
leave
fwait
xchg
cwde
loope
and
div
xor
jle
and
das
mov
shl
jno
mov
fst
mov
jge
ror
in
int
sub
out
xor
xchg
sahf
(bad)
jmp
xchg
out
aaa
jmp
jne
fs
fiadd
call
cmps
xchg
scas
scas
jg
les
inc
lods
push
cmp
cmc
fucomp
sub
cwde
mov
cmp
sub
sbb
leave
addr16
ss
sar
mov
movs
in
mov
iret
scas
fwait
clc
ss
jl
cs
inc
(bad)
test
popf
sub
nop
sub
es
fisttp
mov
add
popf
sub
mov
sub
jne
dec
and
mov
or
test
xchg
movs
cmps
pop
cmp
inc
mov
push
hlt
cli
arpl
pop
cmp
iret
dec
lea
cmp
ds
and
jns
sub
lock
(bad)
sub
or
fbstp
mov
or
cdq
cmp
(bad)
scas
inc
in
push
pop
dec
popf
hlt
imul
fnstcw
jp
mov
cmp
jge
or
imul
sub
add
push
mov
mov
push
xchg
aam
jmp
xchg
enter
shr
jbe
popa
push
dec
fistp
mov
mov
or
cmp
lods
fcom
enter
sub
pusha
push
imul
xor
cmp
dec
popf
jle
fist
jg
mov
test
add
xchg
and
sub
pop
gs
pop
mov
xchg
sub
or
not
cmps
mov
jmp
into
or
inc
pop
push
or
(bad)
fiadd
inc
mov
or
aaa
xchg
pop
ss
inc
fidivr
test
cmc
sub
sti
jp
sbb
ret
jg
xchg
sbb
push
test
sub
sub
mov
push
inc
mov
loop
xor
pop
movs
popa
sub
ds
xchg
push
dec
sbb
inc
lea
cs
ret
rcr
add
jp
mov
dec
or
cmp
xor
daa
dec
cmp
push
push
push
push
add
fucompp
std
outs
adc
sub
out
sbb
dec
shl
cs
mov
loopne
addr16
adc
xlat
pop
outs
dec
mov
pop
xor
dec
loopne
jmp
loop
add
adc
stc
call
pop
and
mov
jmp
pop
adc
into
call
mov
xchg
add
adc
xor
pop
or
fcom
lock
(bad)
test
adc
(bad)
mov
bnd
sub
scas
mov
icebp
jnp
outs
xchg
lahf
pop
push
ret
cmp
(bad)
pusha
jo
jl
fyl2xp1
ins
sub
xor
arpl
and
mov
or
pop
inc
out
(bad)
jnp
jge
xor
jbe
das
push
mov
and
das
ret
jns
js
sbb
iret
ja
shl
inc
leave
mov
loop
jl
in
pop
mov
loopne
(bad)
popf
rol
out
sub
call
div
push
ins
out
mov
push
aaa
clc
pop
imul
pusha
mov
call
std
outs
ins
sub
or
xchg
push
(bad)
jmp
mov
xchg
ror
or
cmp
push
loopne
movs
loop
mov
and
out
fadd
inc
mov
cs
fimul
push
xor
cs
jl
mov
mov
adc
cs
in
mov
or
sbb
retf
daa
xchg
push
jmp
lods
into
hlt
fstp
pop
mov
imul
lods
jecxz
cmps
xor
scas
xor
cmp
mov
mov
and
inc
inc
retf
pop
or
stos
push
adc
and
cs
jne
scas
leave
cs
mov
loope
test
popa
and
aam
mov
stos
clc
addr16
sbb
outs
push
adc
add
mov
in
stc
and
xor
mov
sbb
rol
pop
or
shl
sahf
in
inc
ins
mov
cs
xchg
cmp
fldcw
mov
jne
loope
fisttp
push
ret
inc
xchg
rcr
les
daa
ror
cli
push
jnp
or
dec
and
cmp
push
cs
sbb
mov
cs
mov
ins
cs
mov
loope
xchg
aam
cs
sub
cs
(bad)
lods
and
daa
push
das
cli
xor
add
sar
(bad)
mov
pushw
(bad)
fstp
sub
iret
outs
mov
add
hlt
sub
in
fs
jle
jb
or
scas
mov
add
inc
retf
(bad)
xchg
scas
pop
daa
out
imul
mov
(bad)
and
mov
fnsave
push
inc
inc
leave
fcomp
and
sub
(bad)
cmps
pop
and
dec
adc
adc
add
es
sub
sbb
leave
sub
fxch
pop
adc
test
xchg
les
adc
leave
sbb
(bad)
clc
inc
sub
fcomi
cmp
or
add
aaa
leave
sbb
fstp
push
jo
add
inc
adc
popf
sar
mov
adc
xchg
adc
inc
sbb
daa
sub
pop
xchg
push
xchg
mov
push
ret
cld
cmp
mov
cs
mov
pop
ja
inc
add
and
arpl
clc
sahf
ins
mov
into
iret
add
mul
xchg
xor
sbb
ret
or
cs
cli
out
cmp
test
ins
pop
lea
xchg
dec
cmp
cmps
mov
inc
xchg
jbe
push
ins
pusha
shl
add
fild
ins
test
inc
inc
ret
mov
jbe
enter
jne
mov
mov
pop
loop
jecxz
ins
mov
int
repz
mov
rcl
dec
pop
fisttp
mov
data16
mov
call
in
clc
jmp
cwde
push
sub
fisubr
out
push
push
pusha
(bad)
xor
or
jmp
pop
push
aas
test
push
(bad)
dec
stos
int
cs
sbb
mov
cs
add
and
sbb
and
adc
sub
or
cs
nop
test
mov
inc
movs
mov
and
int
dec
aas
out
ja
popa
cs
stos
add
fdivr
scas
sub
jae
mov
xchg
and
loopne
ret
inc
lods
pusha
cli
sub
fld
sbb
test
pushf
and
sbb
cmp
mov
sbb
(bad)
(bad)
pop
movs
aaa
inc
shrd
pop
push
ds
ret
and
pop
and
mov
cs
in
cmc
lods
cs
(bad)
xor
xchg
fldcw
pushf
(bad)
dec
cs
loop
jno
cmp
movs
jbe
(bad)
loope
inc
cli
push
mov
adc
out
cs
xchg
out
aad
cli
cs
push
sub
jp
retf
sbb
add
inc
cld
jg
stos
aam
cmps
(bad)
sbb
cs
call
out
mov
sti
sub
xor
mul
shr
xchg
pop
mov
mov
(bad)
lahf
xor
xor
xor
inc
mov
xor
cmps
add
nop
or
jge
cs
jnp
pop
cs
sbb
jle
sub
ror
push
pop
or
cs
jnp
repz
push
add
popf
mov
sar
jp
xchg
add
fmul
pushf
jl
iret
retf
sbb
into
xor
dec
or
inc
outs
pop
aas
(bad)
stc
in
cs
test
mov
bound
retf
mov
lahf
shl
ret
inc
mov
inc
and
push
cld
stos
in
mov
add
mov
mov
pop
or
lahf
scas
mov
xor
aad
stc
repz
and
mov
cs
sub
sbb
jg
pop
in
out
and
jbe
mov
pop
cs
add
pop
or
cs
arpl
shl
pop
aam
rcr
cmp
push
pop
add
rcr
pushf
vcvtsi2sd
leave
mov
cwde
int
(bad)
or
mov
rcr
adc
lods
dec
es
adc
dec
mov
push
jp
xchg
js
adc
jp
add
cmp
hlt
mov
and
push
test
(bad)
movs
cs
mov
gs
or
sahf
pop
js
cs
and
test
mov
cmp
pop
mov
ss
out
leave
aaa
add
pusha
xor
mov
dec
cmp
mov
out
push
je
test
mov
or
(bad)
je
leave
out
mov
push
cdq
xchg
lahf
cli
dec
push
push
aaa
leave
lods
sbb
cmp
out
xor
pop
cmp
adc
test
fmul
xor
adc
mov
mov
inc
in
pop
inc
pushf
pop
sub
leave
and
jl
cmp
addr16
bound
ficom
movs
push
lods
pusha
pop
sub
out
aad
test
mov
out
out
shr
into
push
test
movs
dec
lahf
int
aad
pop
inc
mov
fdivrp
cs
or
fstp
sbb
daa
mov
xchg
loopne
outs
shl
cs
jl
pop
pop
pop
sbb
ds
lahf
bound
iret
sub
push
hlt
cli
and
arpl
cmp
and
cs
adc
test
es
mov
fdivrp
std
cs
cwde
fs
mov
cs
pop
outs
dec
mov
scas
dec
shl
xor
aam
mov
fwait
jecxz
scas
and
xor
sbb
cs
adc
ficom
jp
push
sbb
and
scas
jl
shr
sbb
daa
push
push
sub
retf
sub
mov
mov
cs
fisubr
adc
in
into
fnsave
push
dec
bound
lods
ror
or
mov
dec
add
test
out
push
xchg
outs
pop
loop
leave
dec
bound
xor
and
cmp
sub
repz
inc
push
daa
xor
pop
test
das
mov
fcmovu
cs
cmps
jecxz
sub
inc
fimul
or
add
jne
push
test
bound
aad
mov
test
or
js
push
add
shl
xor
fidivr
stos
dec
mov
mov
retf
sbb
and
fdiv
xchg
fld
enter
(bad)
inc
inc
js
mov
and
ror
pop
cs
sbb
cmps
or
sub
loop
cmc
xor
int
(bad)
sub
jmp
data16
outs
fwait
xchg
std
cmps
cs
inc
adc
push
inc
out
movs
inc
add
adc
shr
fdivr
retf
inc
test
outs
scas
adc
js
stc
and
push
popa
in
mov
lock
test
adc
int3
fnsave
call
in
dec
or
adc
pusha
(bad)
in
jmp
xchg
ret
scas
fs
dec
xor
sbb
sub
dec
push
dec
shr
xor
into
enter
xchg
and
pop
fisubr
stos
adc
push
fmulp
mov
mov
xlat
popa
sti
pop
and
xchg
lock
out
mov
ret
xchg
and
xchg
outs
retf
cs
ret
or
pop
cs
sbb
in
fdiv
mov
push
pop
pop
ds
pop
stos
dec
cmps
div
mov
mov
inc
sahf
fld
test
stos
adc
in
inc
retf
dec
les
cmp
scas
fisttp
push
cdq
imul
rcl
sub
adc
out
mov
or
sar
(bad)
into
adc
inc
pop
push
cs
jb
cmp
and
inc
shl
adc
movs
adc
aad
jle
daa
pop
xchg
sub
out
sub
int3
add
mov
daa
cmps
(bad)
xor
test
mov
in
push
das
dec
sub
sub
push
popa
outs
and
push
in
dec
dec
mov
test
inc
sar
jmp
lds
sbb
fcom
and
adc
repnz
or
xor
jb
push
test
xchg
outs
out
retf
clc
cs
pop
(bad)
cs
pop
scas
or
push
adc
pop
push
dec
cmp
lods
inc
into
lods
sub
mov
pop
in
or
ins
xor
imul
xlat
add
jge
shr
sub
sub
xchg
(bad)
jne
sbb
out
(bad)
outs
cmp
fdiv
lahf
pop
push
push
pop
stos
aad
enter
out
stos
mov
mov
aam
xor
cli
lods
cld
sub
cmc
into
or
scas
add
xchg
mov
das
scas
aad
inc
lds
mov
and
test
jno
daa
cli
push
sbb
pop
stos
icebp
xchg
add
aas
clc
retf
dec
arpl
addr16
adc
inc
sahf
mov
adc
cs
cmp
cmc
cs
inc
cmp
int
adc
lds
or
mov
out
(bad)
or
test
aas
xchg
jp
push
mov
adc
add
in
sub
adc
aas
cs
retf
sub
daa
leave
adc
into
out
stc
or
add
xor
jle
jle
mov
loop
sub
or
xor
aas
sbb
mov
cwde
fld
inc
data16
mov
and
das
cwde
in
pop
cs
in
(bad)
or
dec
xor
(bad)
call
mov
dec
xchg
dec
push
dec
pop
into
inc
push
inc
imul
mov
mov
xor
clc
pop
dec
mov
and
cmp
or
lock
bound
sub
xchg
aam
mov
cmp
inc
mov
jbe
rol
xchg
int3
push
jnp
out
pop
adc
inc
sub
mov
pop
fisub
fwait
xor
pop
adc
or
popa
dec
les
adc
inc
add
pop
ins
mov
ins
cmp
es
lods
jg
sub
adc
inc
test
cli
push
dec
cs
push
pop
xchg
aad
int3
mov
mov
xchg
xchg
sub
xor
jo
mov
daa
(bad)
xchg
(bad)
xchg
sti
ret
adc
js
pop
test
push
cs
mul
xor
loope
repz
cmp
jl
and
push
sub
add
sti
ficom
fimul
xor
jbe
adc
dec
bt
call
out
movs
mov
ret
in
push
push
pushf
ffreep
xchg
mov
xchg
mov
lods
shr
popf
inc
adc
sbb
adc
out
or
retf
and
inc
dec
daa
ret
jnp
adc
add
das
add
push
(bad)
mov
test
test
push
jge
push
leave
out
adc
(bad)
or
ins
in
test
inc
jne
xchg
sbb
sub
or
(bad)
push
leave
push
sti
lock
jg
xor
dec
leave
and
cmp
mov
mov
inc
xlat
stc
mov
adc
sub
xchg
add
(bad)
jno
sbb
mov
push
inc
movs
jbe
aaa
dec
fdiv
shr
or
cmpxchg
push
int
inc
fmul
cmp
test
dec
xchg
xor
loop
xchg
aam
cmc
loopne
mov
scas
int3
mov
mov
pop
leave
mov
sbb
fld
inc
cmp
fstp
test
push
dec
inc
rcl
xor
(bad)
mov
and
pop
xchg
inc
in
call
fnstenv
push
les
dec
dec
gs
stos
xchg
mov
pop
icebp
and
jno
sub
push
jnp
cwde
retf
lods
stos
ja
xchg
test
inc
shl
mov
pop
movs
test
sar
fstp
inc
jle
leave
pop
mov
(bad)
push
movs
cmc
adc
sahf
mov
xchg
outs
stos
mov
fadd
into
lods
xchg
jge
das
imul
sbb
add
push
pop
ret
dec
and
out
or
xchg
mov
in
sbb
push
jne
jno
ror
mov
stos
out
cs
icebp
popf
cmps
sub
sbb
mov
sar
xchg
pop
scas
cmp
aas
jno
movs
mov
test
push
xchg
movs
(bad)
xchg
inc
mov
cmc
mov
repnz
in
cs
dec
outs
test
sbb
cs
cmp
cs
adc
xchg
xlat
popf
shr
or
mov
lds
retf
imul
(bad)
mov
push
add
cli
cmc
mov
ss
cdq
cmp
mov
cmp
in
imul
sub
addr16
shl
loop
ins
jb
adc
clc
in
xor
add
shl
out
sahf
aad
push
cs
cmps
fidivr
cs
jb
adc
mov
mov
lock
adc
xor
int
arpl
cs
rcr
adc
nop
jge
mov
adc
icebp
scas
fcmovnu
dec
ja
pusha
jg
xor
mov
aad
imul
jp
push
xchg
jg
mov
ror
mov
jmp
inc
and
pop
xchg
cs
out
and
dec
cmp
cdq
cwde
mov
jae
adc
fisubr
pop
mov
dec
pop
pop
adc
push
dec
jnp
iret
push
and
cs
xor
int
inc
cs
and
xor
fs
xor
ror
scas
inc
dec
push
xchg
cmp
enter
les
xlat
push
mov
aaa
or
mov
lods
cs
sbb
or
xor
scas
sub
gs
jecxz
jns
push
push
push
pop
push
add
mov
or
jp
mov
mov
in
xlat
inc
das
or
outs
mov
mov
mov
sbb
in
add
(bad)
push
or
sbb
test
mov
add
mov
mov
add
ins
mov
ds
cs
je
mov
xor
loop
xor
ret
scas
loop
dec
or
fmul
scas
(bad)
dec
sbb
popa
imul
sub
ss
mov
imul
and
xor
xor
test
dec
jmp
sub
mov
cmp
das
xor
xor
dec
stc
mov
mov
js
jae
or
pop
rcr
and
inc
sub
scas
aaa
lahf
mov
pop
lds
(bad)
gs
lods
repnz
push
cs
adc
lods
adc
sub
call
test
daa
loopne
pop
daa
pushf
dec
imul
pop
lahf
sbb
int3
cmp
adc
(bad)
(bad)
data16
ds
xor
push
outs
pop
mov
(bad)
not
sub
xor
call
(bad)
xor
popa
jg
push
lods
(bad)
test
cs
loope
or
adc
aam
xlat
call
dec
mov
nop
retf
push
scas
icebp
sbb
push
out
int3
lea
cmp
dec
sar
fwait
shr
out
test
in
retf
inc
push
fs
sti
enter
sahf
and
push
jb
mov
adc
movs
out
inc
sbb
xor
and
test
push
or
cmps
unpckhps
movs
pop
aad
push
or
movs
out
(bad)
scas
fs
mov
pop
xchg
add
or
jb
fisubr
sub
hlt
out
or
pop
daa
push
arpl
pop
or
aad
mov
fcomp
rcl
ret
xor
and
leave
cmp
mov
rcl
and
(bad)
pushf
arpl
mov
stos
lds
adc
scas
and
mov
stos
in
push
dec
pusha
jae
lea
mov
mov
cmp
enter
ror
cs
aam
in
int3
xchg
adc
jns
xor
mov
stc
cs
cmp
je
scas
clc
xor
in
shl
push
jl
cs
pop
mov
(bad)
jg
aaa
popf
xchg
push
push
push
pop
or
repnz
cmp
sub
and
and
ret
jg
mov
or
mov
lods
gs
dec
sti
pop
push
cs
jmp
mov
nop
ins
addr16
cs
sub
mov
nop
sub
sbb
mov
out
and
jae
xchg
sub
test
loopne
shl
cmc
lods
inc
scas
cs
mov
dec
push
push
adc
or
cmp
(bad)
mov
cmps
call
xor
ja
sub
pop
cs
mov
(bad)
pop
(bad)
ins
leave
retf
in
push
dec
pop
cmp
shr
push
jg
enter
sbb
dec
imul
nop
xor
ds
mov
in
mov
movs
test
gs
jno
cmp
scas
out
jo
sar
xor
arpl
sub
cs
inc
(bad)
in
adc
sbb
fistp
popa
dec
sub
sbb
scas
movs
orps
xor
ds
jbe
(bad)
daa
dec
push
in
(bad)
loopne
inc
imul
xchg
pop
dec
aam
xor
cs
adc
dec
jnp
mov
clc
jmp
not
rcl
in
xchg
nop
out
aad
pop
test
inc
(bad)
sbb
(bad)
push
mov
lds
test
xchg
jl
mov
push
sbb
sbb
sub
add
std
cs
movs
jno
mov
ret
jbe
add
jecxz
and
dec
pop
dec
cmp
xchg
sbb
add
mov
fcmovnu
repnz
ds
(bad)
not
(bad)
movs
out
and
xor
test
mov
jb
mov
dec
cmc
ss
pop
jbe
sub
mov
in
and
out
js
add
push
adc
xor
fisub
icebp
sub
out
push
pop
mov
rcl
mov
js
sbb
push
lea
ret
in
jl
imul
retf
pop
sub
xor
inc
xor
fs
jnp
scas
fisttp
shr
pusha
push
test
out
das
jmp
fnstcw
ss
mov
cs
sub
sub
imul
sub
movs
(bad)
loope
iret
or
xchg
sbb
mov
xor
cld
dec
leave
mov
(bad)
sub
es
fbld
dec
pop
push
idiv
add
cmps
pop
pop
bound
leave
and
gs
dec
mov
cmp
push
jl
and
in
dec
loope
aas
xchg
and
or
fs
shr
out
loopne
(bad)
pop
and
aas
push
ss
mov
jne
xchg
sbb
xlat
push
jbe
sar
push
loopne
push
ins
adc
pop
(bad)
cmp
add
in
lock
push
out
leave
xor
adc
sub
sub
mov
mov
leave
adc
xchg
or
inc
pop
in
and
enter
lods
add
add
fst
lahf
and
fs
mov
push
cmp
test
mov
cmp
xor
adc
mov
sti
icebp
mov
pop
xor
icebp
and
lock
sahf
aam
cwde
lds
or
out
cmc
pop
jb
pop
jb
lock
dec
cs
imul
mov
mov
sub
push
jae
push
add
push
repnz
adc
(bad)
cli
add
sar
fldcw
lods
or
inc
out
arpl
and
out
jmp
popf
pop
pop
test
cmp
jmp
movs
or
xchg
fwait
dec
in
push
leave
dec
popa
nop
jge
retf
in
jae
push
sub
out
addr16
das
mov
mov
scas
ins
(bad)
and
adc
push
cli
inc
cwde
jno
(bad)
xor
data16
add
xchg
inc
leave
(bad)
js
cs
repz
(bad)
in
gs
es
and
shr
push
clc
in
push
push
sub
push
scas
aad
or
jmp
xor
jo
cld
xor
fwait
push
or
les
mov
fdivr
ss
inc
ja
(bad)
(bad)
xlat
rcr
dec
scas
fsubr
sub
ffree
xchg
adc
xor
mov
dec
sbb
out
and
stos
mov
jmp
pop
aad
mov
clc
cs
fwait
inc
loope
cmp
add
fild
popf
adc
outs
adc
cmp
inc
cmp
and
mov
push
mov
ds
out
dec
sbb
daa
add
scas
pop
xchg
daa
sub
in
dec
xor
(bad)
and
(bad)
push
or
fisttp
xor
loope
pop
cmp
out
cmp
scas
icebp
test
bound
popa
sub
dec
icebp
xchg
mov
push
out
xor
mov
call
ins
lea
fcomp
out
imul
cmp
ret
mov
adc
mov
mov
jne
stos
out
test
loop
adc
xchg
pop
ss
sbb
fs
int
mov
je
jnp
cmp
jne
cmp
dec
shr
push
and
sbb
pushf
imul
jbe
(bad)
mov
xchg
and
stos
inc
mov
xchg
loop
enter
xor
js
test
retf
leave
ds
out
sub
cmc
jns
pop
mov
or
xchg
mov
jo
retf
pop
jg
aad
std
mov
xchg
(bad)
mov
stc
popa
jmp
in
or
jp
sub
pop
and
imul
or
mov
xchg
not
das
out
loope
repnz
jecxz
lea
push
(bad)
jmp
sub
dec
iret
shl
div
sub
mov
jecxz
jle
sub
jecxz
sub
cmp
adc
jb
jg
inc
cmp
daa
rol
mov
and
mov
outs
pop
lods
out
dec
jp
inc
xchg
mov
nop
mov
pop
inc
test
ficomp
shl
cs
jns
xchg
es
mov
into
ds
mov
xor
sub
cmp
out
xlat
pop
sbb
xor
cs
push
xor
or
cs
imul
(bad)
fdiv
sub
sti
jle
cld
outs
cs
jmp
aad
mov
rcl
int
aam
shl
jge
mov
(bad)
jne
cs
push
das
mov
iret
dec
sbb
jae
ins
dec
mov
retf
pop
mov
xor
out
cmc
cli
movs
xchg
cs
push
retf
or
push
dec
cs
and
jno
jl
xor
pop
pop
int3
retf
xchg
test
outs
sbb
call
addr16
retf
rcr
daa
retf
sub
push
and
jae
or
lods
(bad)
mov
mov
pop
test
std
js
sti
jl
cmp
in
lock
sub
and
push
xor
sub
xlat
xor
fsub
xchg
mov
jb
cs
scas
push
div
shl
mov
mov
scas
lods
inc
adc
das
outs
ja
in
xchg
addr16
jae
ja
lods
mov
or
adc
pop
adc
mov
mov
out
in
jb
int3
inc
sti
jae
fmulp
dec
xor
mov
repnz
out
stos
mov
pop
into
and
enter
xchg
(bad)
cld
loop
pushf
fiadd
fisttp
mov
cs
hlt
adc
cmp
movs
js
es
push
inc
jns
xor
add
adc
xchg
sub
or
dec
cs
push
push
dec
pop
push
dec
ds
mov
test
sti
repz
mov
mov
adc
ins
pop
cmp
inc
add
or
jecxz
fisttp
or
(bad)
fidivr
inc
push
push
pop
lea
pop
test
inc
(bad)
in
dec
cmps
out
dec
mov
aaa
add
sub
sbb
xor
call
push
jb
pop
adc
cmp
mov
mov
in
ror
or
imul
int3
stc
sbb
scas
xor
add
outs
or
out
test
dec
xor
xchg
jne
inc
outs
cmps
cs
sahf
push
icebp
addr16
pop
(bad)
mov
mov
mov
aam
not
bound
cmps
mov
pop
icebp
pop
out
sub
jns
(bad)
xor
sbb
pop
pushf
rcr
mov
cdq
addr16
adc
jmp
adc
jecxz
xchg
pop
stos
mov
popf
outs
(bad)
int
je
pop
fidiv
out
add
test
pop
pusha
sub
mov
cdq
mov
fmul
inc
pop
scas
cs
aad
ret
mov
lods
aas
rcl
mov
loope
cmp
mov
or
xchg
mov
test
cs
jmp
sbb
out
dec
jmp
pusha
aaa
mov
mov
gs
adc
or
lock
iret
scas
xor
and
sub
mov
dec
data16
gs
movs
ins
pop
xor
cmp
int3
icebp
std
xchg
adc
test
cmp
adc
(bad)
imul
lods
fldcw
retf
pop
dec
or
inc
pop
inc
mov
fmulp
push
daa
mov
mov
add
cmp
scas
loopne
push
sbb
xor
leave
and
dec
adc
add
cmp
and
push
fs
mov
test
add
mov
nop
loop
cmp
(bad)
sbb
syscall
loope
cs
stos
popf
push
test
push
mul
(bad)
cmps
pop
lea
xchg
lds
or
call
test
or
nop
mov
in
mov
dec
push
xchg
daa
and
fisubr
jmp
mov
xchg
cs
movs
jmp
or
iret
or
cs
push
add
jp
and
lds
inc
cmps
adc
out
cmp
xor
adc
shl
scas
mov
std
scas
sub
sub
pop
inc
jnp
std
int
in
loopne
pop
cmps
xchg
dec
fsubr
pop
imul
hlt
jp
mov
push
(bad)
pop
ds
dec
scas
xchg
clc
je
pop
outs
push
cmps
pop
mov
pop
call
ss
jno
jl
pop
xor
sbb
add
push
loopne
sub
fdivr
and
mov
pop
lahf
retf
test
jle
and
jl
cs
xor
and
js
cmps
dec
lods
pushf
cmps
xchg
mov
(bad)
jns
js
scas
mov
xor
sub
mov
xlat
ror
fadd
(bad)
scas
arpl
(bad)
mov
mov
lods
xor
jge
sub
jmp
xor
fwait
mov
mov
push
or
sbb
(bad)
sbb
jnp
inc
inc
stos
dec
xor
and
sub
jne
xor
cwde
inc
es
mov
and
mov
xchg
add
or
aad
push
dec
ret
xlat
std
mov
jecxz
inc
xchg
mov
hlt
je
push
mov
repz
cwde
cmc
cmp
sub
stos
sub
xor
xlat
out
cli
(bad)
dec
mov
lahf
push
fisubr
inc
pop
mov
sub
ja
sti
js
int
idiv
aas
xor
xor
mov
sbb
mov
sub
inc
fmul
xchg
aas
leave
mov
test
jb
sbb
ins
retf
(bad)
stc
cli
sub
push
pop
bound
sub
push
imul
or
imul
push
fidivr
xor
adc
xchg
push
pop
adc
cmp
fst
in
leave
inc
pop
out
out
ins
ret
sbb
std
mov
or
xchg
inc
outs
jnp
pop
pop
jno
stos
scas
movs
push
jle
fsubr
push
jmp
inc
jl
push
pop
stos
push
scas
in
add
cs
mov
pop
sub
adc
nop
fwait
stc
cmps
cwde
scas
add
fldenv
xor
call
cs
add
rcl
rcr
icebp
fild
mov
mov
xchg
mov
ins
js
(bad)
in
in
imul
movs
xchg
cmp
xchg
call
inc
pop
cs
stc
test
sbb
cwde
imul
cs
lods
xchg
push
mov
push
cmp
cli
dec
pop
fbstp
dec
sbb
sar
jle
shr
cmps
cs
or
adc
xor
xor
inc
scas
and
jns
loopne
pop
jge
cmp
out
fistp
aaa
cmp
out
cmp
mov
xor
cmp
inc
push
xchg
cs
jg
xor
pusha
dec
or
sti
shr
dec
push
push
push
jb
dec
sub
jne
lock
sbb
ins
xor
pop
(bad)
mov
shl
in
pop
or
mov
add
lahf
and
nop
sub
pop
dec
ins
push
sbb
cli
(bad)
xor
add
test
ss
and
shl
xchg
xchg
or
sub
in
pushf
jg
lods
out
mov
mov
ins
(bad)
sub
cmp
add
jl
in
xchg
cmp
and
ret
mov
and
loopne
ds
adc
sub
(bad)
push
fisubr
pop
mov
aas
in
(bad)
xchg
das
scas
imul
dec
cmp
push
xor
dec
jge
ret
pop
xchg
adc
fstp
push
xchg
cs
mov
mov
bnd
sbb
push
mov
push
pop
pop
and
dec
add
std
or
pop
adc
xchg
sub
push
cs
mul
shr
add
sub
push
out
aas
ins
fcomp
xlat
push
xor
into
mov
inc
xchg
retf
(bad)
aam
cs
mov
jp
rol
mov
or
das
and
mov
push
xchg
lods
inc
mov
out
pop
idiv
mov
and
mov
fs
xchg
mov
cs
imul
stos
inc
mov
mov
sbb
lahf
cs
jo
movs
repnz
xor
cmps
adc
dec
or
out
and
outs
fucomi
scas
mov
add
adc
mov
xchg
cs
add
enter
push
adc
mov
aas
pop
sahf
xchg
cs
lods
xchg
rol
stc
sub
and
retf
addr16
call
push
adc
mov
xchg
les
(bad)
in
jl
mov
sbb
jnp
sbb
xchg
cs
out
mov
fisttp
sbb
dec
mov
cmps
les
ins
cs
xchg
or
out
push
lods
jnp
mov
nop
fld
xor
lods
fs
push
les
repnz
jmp
mov
xor
mov
dec
xor
add
js
mov
(bad)
xor
xchg
or
sbb
and
sbb
mov
push
cs
ror
dec
jae
or
loop
sar
mov
push
(bad)
or
push
call
or
js
mov
je
inc
dec
sti
mov
retf
or
or
ja
test
ja
jecxz
movs
rcr
and
arpl
push
stos
or
sub
inc
ins
out
popf
add
mov
sti
movs
cmp
adc
adc
add
cdq
aaa
clts
inc
jmp
xchg
jno
mov
pop
outs
neg
and
lea
or
pop
imul
icebp
outs
adc
retf
jg
adc
mov
lock
out
in
call
mov
xchg
stos
jmp
call
add
xlat
sar
xchg
iret
inc
stos
cmp
xchg
pop
sub
or
out
icebp
xlat
(bad)
mov
movs
mov
sub
div
test
adc
inc
leave
cdq
mov
shl
xor
cmp
push
and
jmp
or
jo
ss
and
es
data16
sub
inc
(bad)
fcmovb
scas
xor
jle
outs
jl
and
xchg
inc
(bad)
sub
jno
pop
push
mov
mov
out
inc
inc
xor
jmp
mov
mov
xchg
jb
push
bound
mov
rcr
js
out
pop
jmp
hlt
in
das
add
jno
leave
je
pop
push
and
xlat
call
fdivr
lahf
xchg
or
mov
and
aad
mov
jecxz
adc
push
mov
mov
and
pop
ja
xchg
sub
jl
js
pop
add
fstp
xor
mov
sub
retf
jge
lea
cmps
cwde
mov
jne
dec
adc
outs
fcomp
pushf
inc
sbb
sub
sbb
scas
xor
and
ror
fcmovbe
ret
push
inc
jmp
or
test
je
mov
inc
xchg
mov
in
idiv
ins
mov
sti
iret
mov
xchg
fldenv
inc
add
xchg
cdq
sbb
scas
sub
movs
xchg
add
xchg
pop
push
leave
cmp
push
cmps
add
dec
mov
lods
ror
div
loop
out
jmp
out
rol
sti
icebp
(bad)
mov
jmp
out
(bad)
sub
push
in
inc
mov
xor
inc
xchg
out
cmps
scas
jle
in
outs
(bad)
mov
aas
mov
mov
ja
dec
pop
xchg
pop
push
imul
jg
sbb
cli
mov
mov
(bad)
xchg
jnp
xlat
inc
cld
scas
push
jno
mov
pop
out
std
inc
and
scas
jge
retf
inc
pop
pop
and
aas
mov
push
mov
imul
sub
(bad)
fld
mov
cdq
rol
pop
and
push
(bad)
jnp
xchg
(bad)
push
jbe
pop
mov
dec
jno
test
stos
and
jno
(bad)
aas
sti
ror
push
aad
fistp
mov
and
test
ret
sar
fsubr
dec
and
(bad)
pop
enter
dec
data16
fisttp
sub
pop
or
imul
lods
inc
and
sbb
mov
push
cdq
cmp
shr
addr16
rol
pop
add
jnp
mov
xor
mov
cli
lods
out
xlat
mov
fs
test
cmp
mov
xor
iret
mov
fucom
lods
test
popf
jnp
sub
test
cmps
push
popf
push
fs
mov
push
add
(bad)
test
xor
icebp
outs
inc
inc
lods
add
std
dec
lods
gs
sub
adc
sbb
jmp
jae
test
xlat
push
iret
xchg
and
(bad)
imul
cmp
add
loop
movs
rcr
inc
leave
jae
in
dec
sub
xchg
in
sub
in
fcomi
xor
cli
out
adc
cdq
adc
cmp
mov
cmp
mov
fidiv
les
ins
dec
cmc
sahf
out
lods
outs
fs
test
dec
(bad)
or
je
cmp
outs
sbb
adc
sti
loope
push
outs
outs
leave
mov
mov
mov
in
mov
push
jnp
ss
call
add
xor
dec
pop
push
ds
sub
and
mov
push
aam
pop
fs
xor
mov
lods
sub
sub
pop
or
mov
cwde
ins
retf
sahf
mov
fwait
xor
(bad)
addr16
dec
cdq
data16
mov
fsubr
(bad)
and
sbb
popa
mov
mov
push
rcl
cmp
mov
repnz
jle
les
jp
cs
aas
icebp
mov
outs
push
pop
xor
into
mov
xchg
js
xchg
pop
jl
cmps
pop
mov
jle
sahf
das
xchg
mov
ror
pop
or
mov
sub
mov
fild
dec
dec
loopne
xor
mov
push
mov
cs
sub
mov
imul
std
popf
and
int3
lods
cmp
and
jmp
mov
les
repnz
sbb
pop
sub
ds
fcom
ret
push
xor
scas
(bad)
popf
outs
mov
test
mov
icebp
jnp
dec
stc
iret
jo
cwde
enter
mov
pop
fs
bound
dec
in
lahf
cmp
and
sub
cs
mov
imul
pop
rcr
call
ds
pop
xor
xchg
outs
lods
enter
popa
mov
sbb
jp
jbe
and
xor
mov
dec
cs
iret
in
dec
mov
xor
sub
add
mov
and
retf
das
mov
aam
sub
or
adc
mov
sbb
jp
popa
mov
fimul
fsub
iret
and
outs
loopne
out
mov
fidivr
jno
leave
sahf
jg
(bad)
imul
xor
jbe
das
shl
movs
sub
imul
dec
add
xchg
mov
xor
xchg
push
loope
xor
daa
push
xchg
xor
scas
dec
test
push
stos
add
sub
retf
xlat
sub
adc
mov
lods
push
cs
cmp
mov
xchg
push
dec
mov
fistp
xchg
sub
inc
push
pop
jecxz
mov
cs
add
mov
(bad)
cli
repnz
in
inc
pop
aad
(bad)
push
lods
sahf
xor
dec
push
(bad)
jmp
jl
(bad)
into
jae
pop
ins
cs
data16
daa
jno
ret
call
int
mov
push
popf
mov
push
int3
ficomp
psllq
sar
loop
scas
inc
cs
jle
adc
fsubr
mov
sbb
aaa
test
jmp
retf
(bad)
ficomp
out
popf
or
ret
arpl
xchg
or
pop
xchg
add
cdq
mov
adc
loope
test
stos
es
leave
push
gs
repz
and
xchg
add
mov
sub
(bad)
pop
ds
push
or
test
shl
(bad)
inc
test
mov
pop
(bad)
sub
add
xchg
rol
call
ds
jmp
mov
fnsave
iret
sub
leave
repz
mov
push
cmp
ror
test
xor
aam
add
mov
(bad)
xchg
adc
jno
sti
les
adc
sar
nop
mov
ds
sti
pop
push
xor
jecxz
jmp
sub
or
jg
push
cld
jmp
adc
jge
xlat
or
ds
aad
xor
cli
movs
inc
add
(bad)
mov
add
outs
(bad)
pop
lods
mov
pop
je
loop
xchg
mov
dec
add
push
mov
push
cmc
scas
xchg
adc
lock
and
adc
xor
fadd
cs
mov
rol
js
sub
ins
xchg
div
xor
das
xor
or
xor
iret
xor
in
and
lea
inc
cmp
rcl
xor
dec
jecxz
jo
jae
(bad)
repz
or
jp
pop
cmp
cmp
call
clc
stos
je
ficomp
xchg
adc
cs
mov
test
xor
icebp
push
mov
nop
daa
add
dec
push
shr
sub
cs
push
xor
popf
mov
cli
lahf
pop
xor
sub
push
mov
mov
cmc
cli
idiv
dec
fidiv
inc
aas
push
cld
cs
xor
popf
xor
jmp
xor
jle
sahf
aas
push
lods
push
cs
mov
sbb
mov
in
cs
dec
repnz
sub
inc
pop
xor
and
dec
cs
cmps
frstor
add
(bad)
aaa
mov
idiv
sbb
cmp
cs
sub
adc
rcl
test
cs
mov
call
xor
sub
(bad)
scas
push
xchg
cmps
sub
xor
scas
jmp
mov
sub
xor
es
mov
movs
adc
and
cmps
repnz
test
mov
sbb
mov
cs
pop
repz
adc
xor
addr16
mov
xchg
shl
leave
sbb
lock
push
cmp
adc
(bad)
enter
mov
cs
sbb
inc
ret
out
xchg
mov
scas
inc
pop
test
mov
and
jmp
dec
repnz
stos
pop
xchg
xor
mov
mov
push
scas
gs
imul
mov
std
mov
push
pushf
cs
mov
in
inc
pop
scas
ror
nop
sub
fnsave
sub
xchg
iret
or
arpl
daa
std
jbe
jmp
xor
cs
in
cmp
cdq
loope
add
push
inc
add
mov
mov
jle
(bad)
retf
das
sbb
pop
cwde
fwait
mov
test
jb
sub
push
add
mov
icebp
in
mov
xor
cdq
xchg
and
cs
lods
pop
fwait
retf
xchg
pusha
xchg
sbb
push
jecxz
imul
mov
or
jae
(bad)
and
cs
cmc
(bad)
jo
mov
mov
add
fucomi
xlat
pop
or
cmp
pushf
scas
(bad)
cs
mov
push
js
inc
icebp
cs
and
add
push
jo
adc
scas
jno
hlt
add
dec
xchg
xor
pop
xchg
jb
sub
and
scas
xchg
cmp
adc
ja
fldenv
cmovnp
les
shr
and
lock
xor
xor
jmp
sbb
add
(bad)
dec
xchg
fist
or
cs
mov
sbb
xchg
or
clc
and
xor
fstp
xor
add
mov
pop
pushf
xor
mov
mov
add
or
das
jmp
mov
int
push
jne
call
out
lods
mov
xchg
mov
jmp
fimul
cmp
sbb
imul
adc
mov
add
mov
and
pop
mov
inc
je
ss
push
or
cmps
xor
(bad)
and
cs
inc
pop
xlat
jnp
leave
shl
les
sbb
add
(bad)
leave
fadd
jp
ret
(bad)
adc
sub
adc
dec
gs
dec
fimul
ret
adc
xor
xchg
xchg
aaa
lahf
mov
out
pusha
mov
pop
mov
lods
inc
mov
idiv
jne
add
pop
cvtps2pd
pop
mov
out
je
into
cmp
adc
xchg
push
add
test
stos
(bad)
fnstenv
repnz
daa
xor
inc
(bad)
out
sti
(bad)
xor
(bad)
ret
cs
into
adc
cs
sbb
mov
mov
sti
cld
add
inc
lea
shr
imul
fld
pop
cmp
je
cmovl
xlat
movs
gs
lock
dec
mov
fist
jns
adc
pushf
lock
jne
inc
fisttp
cmp
mov
aaa
dec
int3
aam
arpl
adc
sub
cmp
rcl
and
test
stos
icebp
inc
sub
mov
ret
mov
jecxz
push
cs
(bad)
lahf
adc
movs
xor
std
xchg
adc
dec
bound
push
scas
lock
sbb
or
sub
ror
mov
jno
xchg
mov
jl
jp
xchg
ret
adc
nop
dec
mov
adc
cli
les
ret
jmp
mov
rcr
int
stos
ret
sub
mov
ds
and
jmp
loopne
pop
adc
hlt
cmp
imul
aam
adc
inc
xor
out
repz
das
add
test
aam
mov
into
jge
mov
adc
pop
ins
sar
xchg
lods
xlat
sti
out
int
mov
repz
sub
pop
dec
addr16
aas
adc
adc
es
sub
dec
data16
aaa
(bad)
jmp
popf
adc
out
ret
scas
cs
(bad)
cmp
stos
dec
push
jmp
int
sti
out
popa
nop
daa
add
sbb
push
lock
test
fmul
cmp
push
call
es
cs
or
pop
and
push
or
adc
movs
loop
cs
cli
push
push
pop
shr
lods
daa
mov
lds
fidiv
xchg
sub
adc
and
push
rcl
test
stos
sub
pop
cs
adc
rcl
test
push
outs
jne
icebp
sub
scas
fldcw
jg
cmp
out
shr
in
pop
xor
sbb
arpl
cmp
or
ret
daa
lods
cmc
jns
test
adc
stos
mov
xor
shr
mov
push
push
out
leave
rcr
jmp
fsub
xchg
movs
mov
pop
xor
shr
cmc
das
mov
mov
movs
pop
push
push
outs
leave
pop
repnz
(bad)
mov
or
pop
ret
mov
(bad)
push
aam
mov
sbb
sar
test
jp
add
sub
or
adc
xchg
mov
mov
add
cmps
and
push
leave
mov
add
push
and
bound
shl
enter
icebp
jp
xor
leave
dec
fs
sti
repnz
aam
in
stos
and
mov
(bad)
bound
fs
movs
xor
jge
inc
loopne
retf
test
sub
sub
mov
les
push
int3
ss
cmp
fstp
jmp
jmp
pop
(bad)
pop
and
jno
cmp
daa
ins
test
mov
sbb
push
mov
in
xor
pop
sub
xchg
cli
cmps
or
adc
dec
mov
lods
pop
stos
jmp
loop
push
xor
push
retf
lods
pop
xchg
int3
call
adc
(bad)
cs
inc
mov
cmp
sar
xor
loopne
or
push
ror
cmp
inc
mov
pop
icebp
fsub
jge
push
sub
or
xchg
pushw
out
xor
(bad)
mov
pop
rol
repnz
sub
out
jl
jno
push
and
arpl
cs
ins
xor
repnz
xor
in
mov
and
jne
sub
push
inc
adc
mov
test
retf
out
fst
out
mov
mov
and
lds
xchg
pop
cs
cld
add
popa
imul
or
push
adc
sub
loop
enter
mov
in
dec
stos
mov
cs
inc
or
cs
push
sbb
pop
movs
cmp
aam
cs
jns
out
sub
rcl
pop
push
add
cs
push
test
push
push
(bad)
pop
mov
dec
push
dec
add
loopne
jae
and
xor
repz
xor
inc
pop
dec
ins
fisub
lods
in
in
mov
lock
add
mov
adc
mov
inc
cmp
cs
popf
mov
adc
or
sti
loopne
ror
xor
in
shl
enter
idiv
cs
movs
adc
jo
sub
popa
adc
mov
xor
xchg
cs
inc
cs
jae
movaps
push
loope
mov
into
int3
dec
cs
or
mov
xor
(bad)
out
xchg
lods
aas
mov
jb
test
jge
push
jmp
mov
iret
fdivr
mov
fld
cdq
lods
mov
inc
mov
fwait
sbb
outs
bound
arpl
push
or
jb
inc
loope
xor
add
stos
cmp
test
daa
pop
fcom
cs
pusha
or
into
inc
movs
xchg
jae
pusha
(bad)
cs
mov
dec
jne
sbb
cdq
loope
jns
aas
gs
rcr
sbb
(bad)
scas
mov
push
aaa
push
lock
enter
or
ror
sub
loop
push
dec
scas
scas
and
daa
arpl
(bad)
jecxz
cmp
sub
and
mov
add
and
mov
(bad)
out
fadd
in
cs
xor
xor
and
ja
jmp
outs
cs
inc
fisub
packuswb
ret
mov
pushf
or
push
dec
cs
retf
xor
test
or
push
or
pop
sbb
daa
outs
das
jo
cs
(bad)
cmp
push
cs
fwait
cmp
xor
inc
shr
jmp
aam
mov
add
or
xor
int3
mov
cs
mov
add
neg
sub
xor
mov
and
into
pop
mov
gs
jnp
and
fwait
leave
out
aaa
cmps
mov
std
pop
out
mov
ins
icebp
dec
leave
xor
ret
(bad)
out
mov
sbb
hlt
pop
jmp
stos
cs
call
push
dec
retf
push
xchg
adc
stos
cmps
push
out
cwde
dec
push
aad
xor
mov
cwde
test
cs
fs
sub
pop
mov
cs
lods
push
inc
(bad)
jl
inc
pusha
cmp
adc
xor
outs
mov
gs
daa
imul
dec
std
test
sub
jmp
pop
cmp
fbld
into
stc
cs
push
jb
sbb
sub
lock
or
pushf
aaa
push
mov
daa
inc
adc
mov
sub
xor
ins
adc
outs
jmp
jge
add
mov
or
(bad)
out
imul
ret
pop
(bad)
and
aas
js
out
cmp
imul
loope
xchg
(bad)
dec
sbb
in
lods
inc
xor
and
dec
mov
mov
(bad)
retf
movs
xor
ror
aas
dec
mov
cld
mov
jg
jnp
sub
and
fstp
sbb
daa
out
or
sbb
jae
and
jmp
repz
xor
jle
xor
add
mov
mov
or
dec
enter
ins
and
add
mov
jae
dec
pop
sub
das
stos
xor
rcl
jmp
push
cmp
test
repnz
cmps
dec
(bad)
or
pusha
pop
sar
(bad)
xchg
stos
jb
scas
rcr
push
out
sub
fistp
mov
outs
cwde
int
fsub
jecxz
(bad)
cmp
stos
stos
sub
push
dec
push
cs
mov
mov
jmp
out
sub
in
xor
loope
icebp
jnp
jg
sub
inc
test
aas
cmps
ds
or
mov
ret
sbb
sbb
pop
or
cwde
stc
or
sub
push
xchg
mov
and
jb
sbb
out
test
daa
(bad)
xchg
fwait
js
fisttp
cs
stc
aad
mov
inc
xor
jle
fld
cs
ficom
icebp
movs
add
add
movs
mov
xor
mov
pusha
pop
adc
sahf
in
push
mov
and
shr
rol
xor
xor
scas
mov
(bad)
push
cs
mov
cs
ins
pop
pop
pusha
jo
gs
mov
jno
mov
push
push
test
ins
cs
pop
mov
cs
xlat
in
mov
fst
pop
jp
lods
stos
pop
cs
and
mov
mov
lock
push
cs
cmp
loopne
sub
popa
(bad)
jo
jae
cmp
inc
ret
gs
xchg
imul
bswap
stos
call
out
add
or
inc
dec
loopne
shr
leave
ja
cli
cwde
fsubr
sahf
inc
add
mov
inc
leave
dec
pop
cs
out
xor
pop
and
not
in
inc
pop
or
sbb
sbb
sub
in
xor
popf
sub
std
loop
stc
cs
aas
inc
call
adc
and
jnp
inc
lods
mov
cmc
push
cld
daa
sub
stos
cwde
das
inc
test
push
cs
cdq
bnd
or
or
in
repz
sub
ja
push
out
ret
fnstsw
mov
(bad)
push
dec
cmp
jno
and
rcr
movhps
push
add
out
scas
sahf
cwde
inc
and
mov
add
pop
or
pop
in
jmp
adc
pop
jle
es
cvtps2pd
outs
ins
sub
inc
popf
popf
jp
sub
sbb
xlat
pop
adc
fisttp
cmp
pop
outs
add
ret
xor
pop
stos
add
stos
push
adc
not
cmps
mov
shr
add
jno
es
fdiv
sub
shld
scas
bound
push
sbb
cs
xor
cmp
sbb
push
mov
mov
adc
and
pop
enter
jb
xchg
inc
xor
or
aas
jg
mov
adc
or
es
pusha
test
sub
cli
and
cs
daa
out
mov
clc
sbb
mov
das
fdivr
scas
aam
icebp
add
in
mov
int3
cs
xchg
jl
jb
in
jo
cwde
add
mov
sbb
fnsetpm(287
jge
in
mov
jecxz
xchg
adc
call
pop
lahf
jl
pop
mov
and
shr
cdq
mov
int3
mov
mov
sub
jns
jmp
push
pop
pop
sbb
out
pop
mov
ror
in
test
mov
rol
ror
cld
inc
sbb
xor
mov
gs
lahf
jecxz
pop
icebp
mov
inc
daa
mov
repnz
dec
js
xor
sti
in
div
fistp
cmp
je
sub
stos
(bad)
pop
out
inc
fisttp
dec
(bad)
push
and
inc
aas
mov
push
ficomp
fs
jecxz
pop
and
in
data16
jae
(bad)
jg
inc
sub
rcl
movs
inc
(bad)
(bad)
mov
adc
movs
rcl
loopne
mov
cmps
fldcw
popf
ret
xor
xchg
xchg
je
rol
fisub
push
and
xchg
xor
and
inc
loopne
imul
jo
rcr
pop
and
inc
jmp
(bad)
push
sti
cmp
mov
fsub
jle
scas
outs
dec
retf
aas
mov
sti
dec
gs
fst
into
outs
push
mov
fmul
xchg
sub
(bad)
push
lds
or
sub
push
dec
xor
out
std
and
aas
mov
xchg
mov
push
sub
pop
icebp
push
pop
aam
test
iret
jmp
fild
rol
add
xor
dec
jge
out
xchg
scas
cmp
pushf
cmp
ficomp
int3
jecxz
(bad)
invd
sub
cli
ret
mov
push
push
shl
fldcw
lods
cmps
jge
mov
test
mov
cmp
or
pusha
scas
pop
xor
ror
lods
loop
push
loop
xchg
iret
xchg
aam
add
sub
scas
iret
and
mov
shl
push
les
jae
ficomp
cmp
stos
outs
sbb
mov
xchg
cmp
mov
jecxz
xlat
fdiv
pushf
repz
es
mov
lods
add
jl
sbb
stc
sbb
jae
dec
clc
mov
ins
pop
pop
mov
dec
clc
outs
outs
dec
jle
call
lahf
lahf
push
stos
daa
inc
pop
(bad)
xchg
(bad)
cli
jl
dec
dec
clc
push
xchg
jns
enter
(bad)
shl
dec
inc
jbe
(bad)
movs
adc
adc
(bad)
pop
(bad)
mov
adc
mov
bound
sub
ds
pop
or
daa
xor
xor
xor
xor
pushf
mov
shl
fistp
hlt
fcmovb
mov
xor
xchg
and
push
push
xchg
push
rcl
test
and
out
mov
lock
jno
xor
mov
test
push
cli
(bad)
mov
call
and
rcr
clc
sbb
sbb
in
frstor
cdq
xor
mov
rcl
dec
adc
adc
mov
bound
cs
mov
or
push
mov
inc
jne
push
fild
dec
or
sbb
jge
sbb
adc
mov
popf
daa
mov
xchg
inc
in
jge
or
push
fs
out
inc
xchg
mov
stc
mov
sbb
adc
jle
inc
add
popa
div
lods
xor
dec
push
sub
pushf
mov
je
outs
dec
push
and
sar
inc
cmps
into
stc
xor
inc
jp
and
push
out
cs
out
fadd
mov
cmp
cli
dec
add
and
or
push
sbb
adc
movs
dec
pop
out
and
pop
cmps
xor
leave
mov
fidivr
cs
xlat
int
sahf
movs
jmp
jmp
mov
adc
imul
dec
sbb
out
das
ja
cmp
sbb
sub
rcl
sub
pushfw
fcmove
add
jge
popf
pop
(bad)
out
push
out
mov
cs
add
call
xchg
ins
mov
xchg
cs
std
jmp
add
lds
sbb
sahf
(bad)
xor
xchg
mov
test
cmps
xchg
xchg
shr
hlt
pop
popa
movs
pusha
and
mov
ja
lahf
inc
cwde
adc
int3
mov
mov
xor
lahf
sbb
or
xchg
sub
jmp
lods
jmp
pop
and
cmp
inc
(bad)
out
sub
cs
mov
add
inc
xor
jg
inc
push
jb
pop
or
je
dec
test
cwde
(bad)
jmp
fwait
sub
push
(bad)
fild
add
clc
mov
sub
xchg
setb
or
shl
and
lock
cs
pusha
pop
mov
mov
and
add
pop
xchg
mov
jp
(bad)
pop
scas
sahf
daa
fstp
js
inc
inc
ja
out
xor
popf
(bad)
push
loope
scas
push
push
dec
jb
es
inc
mov
xchg
push
ficomp
and
add
and
xchg
inc
leave
loopne
js
enter
mov
jl
and
sub
and
(bad)
and
les
popa
mov
sub
fbstp
adc
fsubp
clc
xchg
xchg
sub
mov
fucom
std
fsubp
inc
int3
xor
aam
jno
loope
fnstcw
retf
push
sbb
and
adc
sub
dec
stos
movs
push
push
or
mov
test
adc
outs
inc
jb
xor
imul
dec
aas
jecxz
shl
or
push
or
push
xor
xor
mov
out
rcl
jg
xchg
scas
push
(bad)
leave
sahf
dec
xchg
imul
cmp
push
dec
inc
les
lahf
pop
sub
sar
nop
cmp
jge
mov
dec
mov
xchg
pop
imul
aas
or
out
into
xor
sbb
es
adc
mov
sub
cmp
imul
test
push
mov
retf
pop
jae
pop
pop
and
enter
sub
cs
(bad)
or
mov
adc
pop
sub
ins
imul
retf
stos
push
inc
mov
xchg
out
(bad)
xor
shl
(bad)
aaa
js
aam
rcl
mov
rcr
xchg
loope
jl
add
ins
inc
mov
test
mov
rol
in
dec
out
sub
jno
sbb
pushf
or
sub
add
loope
sub
(bad)
and
fldcw
mov
mov
add
icebp
xor
pushf
inc
mov
rcl
push
fs
sub
daa
sbb
pop
(bad)
mov
cmc
push
sar
pop
mov
jp
xor
outs
sbb
rol
push
or
outs
xor
sahf
(bad)
add
and
cs
xor
popa
adc
mov
jno
scas
mov
dec
xor
cmp
les
and
cs
inc
push
and
or
(bad)
cwde
cli
cs
ss
imul
xchg
cs
jg
std
loop
jp
xor
sbb
in
stos
mov
cdq
lea
not
cld
lods
fadd
pop
or
jp
adc
cs
mov
into
mov
outs
xchg
ret
into
xor
pop
inc
jbe
jle
inc
jno
lods
jae
sub
sub
push
xor
aaa
xor
rol
addr16
pushf
mov
mov
test
mov
loop
sti
mov
xor
inc
rol
retf
or
sbb
cs
xlat
xchg
mov
cs
jae
pushf
mov
aad
popa
loope
add
mov
sbb
jns
sub
add
adc
or
test
jp
inc
lods
stos
mov
lock
mov
test
ins
ret
inc
sub
scas
cs
jo
sar
cs
shr
outs
fstp
push
stos
ja
or
nop
pushf
(bad)
inc
lods
jmp
cdq
dec
in
imul
pop
pop
push
sbb
pop
and
xor
(bad)
fisub
lods
dec
fcmovnb
push
icebp
xor
mov
dec
mov
sbb
cvtdq2ps
je
jl
dec
sub
jae
mov
and
mov
outs
inc
or
jg
xor
ins
push
sbb
push
or
xchg
cs
in
pop
and
cmp
xchg
sahf
jbe
pop
xchg
fild
dec
je
push
add
les
adc
pusha
mov
xor
pop
jne
cwde
xor
dec
pop
repnz
aam
xchg
cwde
stos
(bad)
aas
cs
dec
jmp
leave
test
rcl
cdq
stc
mov
imul
das
repz
rcl
add
cvtps2pi
cmp
push
dec
clc
rcl
into
aam
mov
jno
arpl
popa
pop
dec
or
push
push
sbb
fnstcw
sub
push
inc
(bad)
or
push
inc
movs
sbb
inc
retf
(bad)
fdiv
xor
adc
lods
cmp
push
shl
mov
dec
xor
jne
stos
cmps
rcl
mov
mov
cwde
or
add
dec
in
repz
pop
sub
div
add
dec
sbb
mov
xchg
jae
inc
(bad)
mov
or
dec
scas
leave
cmps
icebp
adc
mov
fsubr
jecxz
jnp
and
sub
iret
bnd
dec
rcl
rcr
scas
pop
push
adc
sbb
adc
cmps
push
sahf
add
pop
(bad)
or
sbb
sub
pop
cdq
sub
jmp
mov
scas
inc
cs
push
jno
jbe
cmp
sub
movs
xchg
fist
sbb
and
and
or
aam
pop
leave
inc
cmp
shr
inc
adc
pop
push
ds
pusha
sbb
push
pop
mov
mov
jnp
into
sbb
ss
push
inc
add
pop
les
leave
je
adc
test
cs
enter
mov
push
fadd
jno
loope
scas
je
cli
sub
dec
sub
xlat
pop
sbb
out
sbb
bound
push
xor
leave
adc
loope
(bad)
pop
pop
adc
shr
fsubr
cmps
mov
lods
mov
xchg
retf
xchg
stos
in
call
xchg
outs
(bad)
xchg
mov
mov
mov
retf
push
lea
or
mov
or
jbe
aaa
neg
es
push
xchg
push
pop
movs
push
(bad)
scas
xor
mov
cs
(bad)
int
pop
jmp
and
leave
cmp
int3
sub
xor
jno
xor
out
test
add
pop
cs
pop
jmp
dec
lock
cs
adc
sub
cmps
cs
lea
pop
je
dec
sbb
xchg
xor
aad
cmp
(bad)
mov
sub
test
jne
jmp
mov
data16
gs
popf
pop
jb
ret
outs
and
addr16
inc
loope
inc
shr
and
out
mov
mov
fwait
gs
and
stos
in
add
aas
pop
and
(bad)
outs
push
sub
into
(bad)
out
xor
mov
pushf
das
push
mov
outs
fbstp
sbb
fsubr
cmc
push
jnp
sti
loopne
lods
in
call
sub
scas
shl
psadbw
pusha
scas
xchg
(bad)
mov
xor
push
icebp
push
and
call
cs
sbb
cmp
or
fadd
out
cs
ja
sbb
mov
adc
lods
or
in
mov
mov
xor
inc
jl
add
mov
rol
mov
inc
cmc
iret
ins
retf
(bad)
xor
and
cmovae
stos
call
loopne
cs
mov
cs
shr
loope
ss
rcr
int3
sbb
sub
and
movs
mov
mov
sbb
dec
or
or
bound
dec
cwde
or
(bad)
imul
or
jnp
jmp
sub
sti
(bad)
out
push
pop
fcom
adc
jo
mov
int3
aaa
xlat
repnz
enter
cwde
dec
fstp
inc
jo
cs
pandn
add
icebp
cs
mov
jo
cmp
xchg
fild
loopne
ds
cs
dec
sbb
sub
and
sub
fiadd
cmp
mov
dec
xor
push
cs
mov
or
cmp
shl
push
jo
(bad)
dec
adc
and
aam
mov
push
cmp
pop
out
xchg
sub
cmps
std
out
push
rol
iret
(bad)
data16
xchg
aam
cmp
mov
in
scas
and
cmps
cmp
sti
adc
xchg
cs
xchg
mov
aas
out
movs
jp
call
test
scas
popa
das
mov
mov
movs
push
ret
hlt
cli
test
(bad)
jno
mov
imul
cmps
mov
mov
test
xchg
push
movs
shl
or
jne
push
stos
popa
inc
into
cs
dec
xchg
cli
sahf
pop
cs
out
in
shl
lock
scas
scas
pop
das
iret
inc
mov
popa
out
in
cmp
dec
dec
retf
cs
mov
bound
aad
aas
ins
and
pop
popa
pop
jecxz
xor
xor
loop
or
or
daa
jbe
add
cmp
mov
xor
and
lfs
dec
enter
xchg
retf
mov
or
xor
clc
(bad)
shl
mov
fisub
(bad)
adc
pop
jg
out
dec
repnz
xor
dec
test
push
loope
js
xchg
jno
ret
jl
xor
stc
mov
aad
xlat
(bad)
aas
js
int
in
fdiv
add
push
(bad)
mov
(bad)
cld
adc
ja
sub
test
mov
and
(bad)
in
repnz
pop
out
outs
mov
push
xchg
lea
cmp
add
pop
cli
int3
sub
pop
xchg
and
ins
fisttp
hlt
inc
mov
ins
push
dec
sbb
sbb
and
mov
push
dec
loope
test
lahf
or
in
jno
add
aas
movs
push
add
dec
mov
(bad)
jo
rcr
jmp
adc
jnp
js
test
adc
adc
hlt
sar
sub
test
imul
sbb
inc
sahf
aaa
lds
pop
push
aas
mov
adc
mov
pop
or
mov
inc
rcr
add
pop
mul
mov
sub
push
mov
sbb
imul
aaa
es
faddp
(bad)
adc
fwait
cmp
add
es
push
mov
mov
and
sub
mov
inc
int
es
movlps
cmps
mov
sub
mov
(bad)
addr16
stc
outs
lea
push
jne
jg
ret
push
adc
push
cmp
jg
mov
mov
mov
cwde
xor
adc
push
lahf
(bad)
pop
adc
stos
popa
mov
jo
sti
mov
inc
or
int
jl
movs
push
xchg
out
xchg
idiv
(bad)
out
(bad)
sar
les
jbe
addr16
dec
movs
jecxz
or
shl
arpl
push
mov
and
sti
add
jle
repz
jg
or
dec
mov
out
ins
call
sub
cmps
fst
pop
sub
cld
arpl
scas
movs
fisttp
add
xor
sub
imul
or
popa
cmp
jl
mov
test
sbb
cmp
stos
pop
dec
lods
xchg
cmps
sbb
mov
sub
fimul
movs
fcmove
xor
enter
sbb
lock
cmc
sar
mov
pop
cmp
cmp
out
mov
lock
jae
push
and
sbb
xor
shl
mov
std
xchg
add
movs
loop
mov
inc
sub
push
sbb
xor
fcom
ja
pop
outs
add
loopne
push
fild
dec
mov
sub
(bad)
dec
sub
mov
stos
inc
das
ret
pop
add
data16
push
sub
popf
cwde
mov
sub
xchg
cmp
idiv
pop
add
stos
push
xor
test
and
cwde
sbb
and
jmp
and
xchg
out
fidivr
(bad)
or
fimul
jae
push
addr16
ret
stc
rcr
nop
inc
adc
(bad)
mov
xchg
jmp
mov
sub
retf
(bad)
(bad)
mul
test
rcr
pop
mov
lea
int
(bad)
repz
out
xor
dec
sbb
scas
scas
jbe
ret
out
sub
cmp
int3
pop
pop
test
shl
adc
push
fstp
push
(bad)
jmp
mov
mov
xor
jg
sar
shl
(bad)
aam
mov
add
daa
aas
call
push
out
das
fmul
sti
outs
fldcw
fstp
xchg
lods
stos
push
push
bound
scas
cdq
sub
rcl
leave
les
sbb
or
in
test
ja
ret
add
mov
inc
int
xor
push
push
lods
(bad)
cmp
nop
and
std
bound
sbb
arpl
sub
(bad)
out
retf
cmp
and
fwait
cwde
xchg
adc
hlt
daa
mul
rcl
or
xchg
sahf
dec
inc
mov
push
aam
out
enter
mov
fdiv
or
ss
das
mov
mov
fisttp
mov
int3
pop
sbb
nop
pop
std
stos
mov
mov
cs
fst
cs
loopne
xchg
mov
xor
cwde
or
daa
or
push
outs
add
cs
inc
or
mov
lea
fsub
outs
jmp
lods
aas
fstp
inc
jb
pusha
fsin
into
mov
ja
mov
jns
xor
jae
xchg
xlat
(bad)
repnz
xor
jmp
scas
inc
iret
lahf
jp
aad
mov
pop
inc
icebp
sub
out
rcl
dec
add
mov
cmp
xor
push
pop
imul
jle
push
xchg
xor
push
xchg
int3
test
sub
xchg
cs
rol
jne
add
add
cmc
daa
mov
cs
movs
inc
ror
ins
jge
rcr
aam
adc
cs
mov
jmp
inc
xor
dec
stos
ror
movs
adc
pop
add
adc
fmul
add
mov
sub
lods
out
fidiv
sub
ror
cs
in
stos
retf
(bad)
test
test
stc
mov
aad
xchg
(bad)
ucomiss
jmp
out
lods
jmp
enter
push
scas
sbb
adc
sub
movs
xor
mov
jno
sahf
jp
cs
mul
lock
cs
adc
push
cmp
xor
cs
fucom
sub
cs
and
dec
stos
pop
mov
xor
ret
adc
mov
loop
sti
lods
mul
mov
xor
xor
inc
leave
xor
jnp
cs
push
icebp
out
les
push
loope
data16
mov
into
sub
sub
repnz
in
mov
pop
jl
ret
outs
adc
sbb
dec
mov
sub
leave
push
arpl
icebp
jl
in
ret
sti
xchg
ret
stos
daa
rcr
jne
xchg
jbe
xor
cwde
out
inc
fst
sub
(bad)
arpl
adc
xor
and
pop
inc
icebp
cs
add
push
ds
sbb
sub
push
scas
scas
ins
adc
add
out
cs
dec
push
xor
or
cmp
sti
icebp
adc
adc
in
outs
inc
(bad)
jne
pop
cs
and
push
cs
mov
scas
mov
into
add
dec
push
push
fs
cs
jmp
aas
mov
add
push
fwait
lods
pop
sbb
imul
jnp
retf
and
mov
lea
lahf
add
ins
push
js
xor
or
repz
push
cmps
daa
xchg
mov
cs
gs
outs
jbe
or
or
sar
ret
test
xor
dec
or
imul
mov
cs
(bad)
xchg
mov
xchg
cs
shr
fbstp
cmp
popf
fidivr
es
pushf
shl
push
pusha
jno
loop
fucomp
add
sub
ret
cmp
jns
mov
into
mov
mov
sbb
sti
cs
jae
gs
or
jl
xchg
push
ret
and
dec
(bad)
adc
fmul
xor
pop
loop
bnd
mov
add
aas
push
dec
leave
retf
shr
and
adc
xor
cs
test
mov
adc
cmp
outs
push
mov
mov
xor
shr
mov
cs
dec
vpand
sbb
or
inc
fimul
adc
outs
out
fild
cmp
cs
in
lods
mov
mov
enter
mov
je
ins
out
stos
sub
inc
adc
cs
(bad)
jno
(bad)
outs
fwait
pop
jbe
repnz
xor
lods
rcr
xchg
sbb
xor
in
mov
les
ja
jne
jl
int3
out
cmps
cs
xor
and
sub
push
sti
pop
and
(bad)
nop
xchg
add
mov
pusha
push
adc
push
or
lea
rol
dec
cmp
add
jge
pop
adc
aaa
sub
out
scas
mov
int3
xchg
cwde
sub
cmp
sub
sub
aaa
jbe
retf
cmp
fidiv
fild
cdq
sahf
loope
pop
ror
cs
pusha
xchg
sbb
xor
pop
das
sub
sub
add
ror
push
aaa
jne
rol
mov
int3
out
cdq
or
adc
cs
cmp
push
xor
pop
or
pop
sub
or
xchg
sbb
ss
sbb
fnstcw
sbb
(bad)
xor
xchg
mov
sbb
fidiv
mov
xor
fcmovnbe
and
or
js
cs
lock
icebp
cs
lds
sub
lahf
les
shl
ja
adc
mov
sub
adc
out
push
clc
jp
pop
cs
mov
je
mov
test
sahf
sub
fsincos
mov
mov
inc
fimul
add
divps
or
and
aas
jmp
popf
dec
ins
mov
repnz
imul
xchg
icebp
into
int
adc
xchg
cs
mov
xchg
mov
repz
scas
add
shr
sub
(bad)
fsubp
clc
arpl
ds
out
push
add
sub
and
popfw
scas
cs
sub
mov
xor
out
jmp
les
retf
adc
popa
cs
cmp
test
xor
or
push
xchg
int3
int3
cs
iret
cmp
inc
mov
stos
or
mov
out
bound
or
pop
lahf
aas
int
jecxz
rcr
adc
sbb
outs
jo
sbb
add
mov
cs
cld
cs
std
fiadd
jne
dec
jns
call
mov
mov
xchg
and
clc
jb
popf
ins
out
in
pop
push
sbb
pop
xor
mov
cdq
sbb
cmps
out
aad
outs
cmp
add
vmread
(bad)
cs
mov
cmp
cwde
in
mov
test
xchg
into
cs
jmp
jno
pop
cs
jb
xchg
or
dec
mov
test
xor
call
dec
adc
xor
xor
sbb
and
jnp
cmps
push
push
popf
pop
scas
fidivr
iret
fadd
cs
movs
call
sub
mov
fcom
xchg
inc
test
scas
jnp
push
cmps
in
dec
dec
cmc
sar
fmul
std
call
mov
nop
outs
(bad)
mov
push
xchg
adc
jle
sahf
fwait
mov
xchg
ret
lea
mov
inc
xchg
mov
lods
sub
jnp
mov
das
cdq
mov
cmc
shrd
xchg
shr
imul
sub
inc
push
pop
push
pop
mov
dec
out
adc
cmps
jmp
cld
aam
cs
pop
push
fistp
imul
cs
dec
(bad)
push
push
daa
mov
pop
(bad)
cli
mov
retf
js
cs
and
push
popa
stc
cs
cld
stos
xchg
das
lods
movs
cmp
mov
out
jge
out
fild
and
ins
push
sbb
arpl
popf
aad
mov
pop
adc
(bad)
es
aas
push
pop
cmps
cs
sbb
add
add
adc
cs
push
retf
xchg
pop
sub
cmps
out
push
pop
dec
pop
fucomi
mov
and
xchg
inc
imul
rol
cmp
jp
lahf
js
cmp
js
aaa
jl
(bad)
push
pop
je
adc
cli
jmp
mov
mov
mov
mov
arpl
adc
stos
mov
sub
scas
lods
jp
call
js
cmps
push
lahf
cld
lds
cmp
(bad)
sub
jg
mov
mov
aam
or
cld
shl
in
sbb
fnstcw
jecxz
iret
out
fwait
adc
out
mov
inc
mov
xor
mov
mov
fstp
retf
lahf
xor
out
add
jo
js
dec
or
push
sar
fldcw
pop
mov
push
cdq
imul
cs
inc
sbb
cwde
and
out
(bad)
js
mov
sub
out
mov
pop
call
inc
bnd
cs
cwde
loop
pop
fbstp
icebp
loope
cmps
jbe
das
into
aaa
scas
push
xchg
cs
push
scas
pop
enter
mov
jns
aaa
cdq
(bad)
cmp
mov
out
stc
les
pop
scas
fidiv
ins
cmp
popa
jmp
sbb
cs
dec
ficomp
xchg
neg
stos
pop
add
mov
cmp
sub
mov
in
aas
bound
mov
das
cs
ret
outs
and
cs
jp
push
sub
pop
inc
(bad)
(bad)
dec
sub
fstp
jl
lods
clc
sub
int3
lea
mov
pop
ins
or
push
xor
adc
add
push
or
cs
gs
lock
cs
xor
mov
int
and
push
sbb
(bad)
pushf
xchg
xchg
add
shr
ds
xor
hlt
mov
inc
mov
in
mov
or
xchg
lds
inc
dec
shr
sahf
out
mov
adc
rol
cs
inc
sar
retf
add
xchg
test
mov
inc
jl
ss
lods
push
or
imul
out
inc
dec
cmp
mov
test
lods
xor
cmc
jl
push
outs
mov
lock
cwde
cmps
sub
xor
scas
aad
xlat
add
pop
loopne
inc
xchg
and
outs
mov
je
xchg
mov
jmp
add
and
data16
inc
xor
push
test
mov
and
jne
jnp
xor
retf
xor
dec
aaa
leave
push
(bad)
enter
inc
fs
sahf
jg
cmp
test
mov
adc
jge
mov
inc
inc
and
xchg
loopne
inc
cmps
pushf
and
jb
pop
push
leave
mov
fld
add
or
inc
inc
fnstcw
rol
pop
rol
popf
test
ficomp
sbb
scas
out
cmp
mov
xlat
scas
xor
outs
jae
pop
sub
pop
push
sbb
out
repz
cmc
add
(bad)
fild
adc
and
cmp
bound
repnz
cld
scas
movs
pop
dec
into
imul
xor
or
mov
iret
adc
xchg
call
(bad)
or
into
xchg
test
mov
imul
jmp
push
shr
pop
fmul
xchg
test
pop
inc
rcl
(bad)
out
movs
movs
sub
adc
inc
(bad)
aaa
and
packssdw
push
or
sub
cmp
mov
int3
sahf
xor
add
(bad)
into
test
mov
adc
test
in
aas
xor
call
fucomip
xor
outs
fldenv
dec
add
out
mov
mov
cli
adc
jg
and
pop
mov
and
sbb
inc
seta
mov
dec
fisttp
sub
test
int3
xchg
cs
in
jns
mov
sub
mov
mov
jge
ror
mov
sub
cmp
imul
enter
dec
sbb
stos
jbe
push
int3
cmc
hlt
xchg
out
mov
and
gs
addr16
fcom
jecxz
adc
sbb
ret
adc
cmps
icebp
jmp
cs
out
mov
clc
push
xor
cmps
outs
addr16
cmp
push
hlt
sub
mov
pop
jmp
lock
lods
ss
pop
scas
xor
push
xor
test
enter
rcl
mov
inc
push
or
shr
repz
push
cli
(bad)
sti
add
(bad)
pushf
cmc
and
in
sub
mov
daa
scas
adc
jge
jp
pop
jnp
mov
and
sub
adc
inc
aad
scas
xor
push
push
sub
jecxz
add
mov
inc
pop
(bad)
pop
ror
xor
out
fs
and
jl
pop
inc
aam
adc
and
jns
and
test
test
cmps
add
add
pop
je
push
jge
mov
bound
cwde
pop
xor
neg
jnp
mov
and
xor
stc
add
adc
fidivr
jo
sub
xchg
xchg
fst
neg
js
jbe
iret
add
(bad)
lea
cmp
or
sub
jle
push
adc
cs
adc
loopne
pop
cmp
dec
fsub
mov
mov
jmp
in
cs
fisub
xchg
inc
mov
cmps
lock
pop
repz
jmp
daa
or
loopne
in
imul
pop
les
pop
mov
into
mov
cs
pop
pop
loope
mov
ja
popa
mov
(bad)
lock
pop
cs
mov
(bad)
push
cs
push
jmp
(bad)
cs
adc
or
mov
sbb
xor
in
hlt
pop
daa
repz
stos
out
mov
dec
fsub
add
mov
int
idiv
add
(bad)
sub
mov
movs
shl
push
adc
sbb
cmp
lods
aas
mov
(bad)
jne
push
(bad)
in
shr
icebp
cdq
xlat
aad
out
push
ficom
inc
nop
sbb
cli
lods
pop
push
imul
je
bound
sahf
jle
fcmovbe
lock
cmc
xchg
xchg
shr
dec
(bad)
push
lods
popa
scas
push
imul
cs
movs
test
adc
xchg
fidiv
push
test
pushf
outs
ret
push
cs
movs
sbb
in
mov
cs
movs
xor
fldcw
sbb
cmp
jg
data16
loopne
mov
jmp
push
push
inc
(bad)
data16
test
ss
(bad)
push
adc
sub
mov
cli
mov
cs
sub
outs
repnz
imul
and
hlt
adc
add
xor
mov
dec
add
adc
adc
sar
xor
stos
push
sub
loopne
cs
or
rcr
retf
sti
sbb
mov
mov
inc
push
outs
lahf
or
out
jo
rcl
cli
fucomi
mov
cld
cs
push
adc
and
scas
clc
repnz
mov
and
adc
pop
fdiv
xchg
dec
lods
add
jmp
adc
out
sbb
aas
scas
sub
fadd
out
pop
jne
push
(bad)
jg
bound
or
dec
stos
cmc
data16
xchg
iret
push
loop
pusha
out
jo
jmp
pop
mov
mov
lods
cmp
sbb
or
and
and
add
add
pop
loopne
cmp
into
jecxz
dec
adc
mov
in
sbb
push
fwait
mov
aam
sub
js
mov
bound
jmp
outs
outs
push
leave
jns
loop
and
push
arpl
retf
mov
rol
iret
ss
pop
cmp
jns
xor
retf
jnp
mov
xchg
sub
pop
inc
jno
shl
iret
fcom
and
sbb
jle
es
pop
into
mov
or
sub
cmp
das
add
ja
cmp
inc
icebp
jae
les
fsubp
add
and
inc
jb
cli
arpl
jo
inc
ins
fstp
shl
inc
retf
lods
jnp
ret
and
cmps
ds
enter
dec
jmp
(bad)
out
xchg
add
mov
(bad)
dec
jge
mov
sub
inc
out
sub
and
pop
pop
or
daa
dec
adc
sub
dec
jno
dec
out
imul
pop
dec
js
rcl
mov
xor
les
adc
and
xor
stos
mov
mov
ret
movs
ss
sub
jno
mov
jmp
xchg
(bad)
mov
add
adc
mov
in
xor
add
imul
cs
outs
std
cmp
scas
mov
push
lods
mov
iret
ds
fwait
mov
mov
push
scas
test
and
lea
xor
or
outs
and
int3
out
fldcw
jmp
lahf
(bad)
je
div
cs
cmps
ins
sub
or
clc
out
int
dec
pop
sbb
pop
aad
ror
gs
dec
mov
push
adc
repz
data16
cmps
aaa
push
adc
pop
(bad)
enter
dec
push
punpcklbw
sbb
outs
cs
bound
xor
test
cwde
retf
aam
shl
add
xchg
das
xchg
mov
sbb
cs
loop
pop
xchg
cs
push
div
movs
mov
aad
into
mov
imul
jl
ret
cmc
inc
adc
mov
cs
addr16
xor
xor
cmc
sub
cli
out
imul
dec
je
adc
js
or
shr
arpl
xor
ja
cmp
xor
jnp
retf
cs
push
pushf
cwde
push
inc
retf
in
fdivr
inc
mov
inc
test
cs
push
cs
jno
xchg
mov
xchg
adc
jl
in
ret
push
mov
ret
bound
and
or
lahf
add
daa
fadd
mov
jp
movs
pop
sbb
sahf
cs
sti
test
cs
and
call
add
cmps
mov
jle
daa
xlat
jb
adc
push
and
std
jecxz
bound
clc
int3
movs
das
pop
xchg
leave
sbb
xor
or
or
aas
mov
test
(bad)
out
pop
mov
int
mov
cs
lea
cmps
cs
cmp
adc
shl
(bad)
(bad)
jecxz
cs
xchg
rol
ror
push
fisttp
mov
dec
dec
icebp
pop
push
lods
jmp
test
push
imul
pop
movs
add
xchg
xor
or
shr
aas
daa
sar
inc
cmp
jo
fstp
bound
add
jecxz
cmp
or
pop
jnp
int3
loope
xor
sti
push
dec
ret
dec
mov
adc
fisttp
mov
out
cmps
xchg
fcom
mov
add
movs
pop
xor
rol
dec
outs
cmp
adc
or
sbb
cmps
xchg
fcom
jecxz
pop
test
imul
or
(bad)
mov
push
cmp
and
outs
fisubr
sbb
push
movs
xor
outs
sub
call
pushf
xlat
ret
sbb
push
and
test
outs
pop
and
jb
in
je
xchg
sub
(bad)
xchg
out
mul
cs
and
fwait
push
add
mov
pop
jae
aad
mov
fisubr
cmp
and
loop
cli
stos
push
xor
push
adc
pop
xchg
leave
inc
xor
and
inc
ror
cmps
jle
out
stos
mov
sbb
sub
add
or
int
xor
fld
dec
jbe
outs
mov
aas
popf
pop
fdiv
or
push
lods
popa
sahf
mov
mov
cmps
pop
cs
push
jg
and
add
sar
pop
push
cs
cdq
shr
dec
mov
push
daa
mov
mov
jmp
jae
stc
mov
out
test
push
sbb
push
inc
adc
cs
inc
test
cli
aam
in
repnz
mov
mov
pusha
in
cs
sub
pop
inc
jge
ror
outs
xchg
push
push
jle
and
mov
leave
sub
jne
mov
pop
push
lds
push
leave
and
pop
das
sub
jge
daa
mov
bound
push
rol
pop
mov
fdivr
aas
xor
out
inc
js
mov
(bad)
push
lods
test
jb
dec
and
movs
out
lahf
mov
push
mov
xchg
bound
out
rcr
retf
inc
dec
add
sar
fcmovbe
dec
dec
data16
adc
push
add
jne
popf
rol
cs
fs
inc
mov
int3
or
retf
inc
shl
pushf
mov
cmp
and
shl
mov
lahf
add
mov
cld
xchg
jno
(bad)
es
push
outs
adc
cmps
stos
mov
adc
addr16
scas
iret
mov
sbb
xchg
jp
push
push
xor
jb
push
jns
into
ins
push
sub
cmc
(bad)
xchg
mov
add
sbb
pop
dec
hlt
mov
movs
cs
mov
jecxz
out
mov
xor
mov
out
cli
dec
or
ja
push
and
cwde
inc
test
cmp
jno
mov
rol
jp
inc
cs
test
and
or
sub
push
popa
pop
inc
ja
mov
je
call
pop
xchg
jo
xor
jg
ficomp
push
add
and
rcl
jp
cs
pop
ins
push
outs
repnz
sti
sbb
test
xor
add
je
iret
cs
ficom
pusha
cs
int
fisubr
seta
sti
mov
add
movs
pop
jle
popf
pusha
sub
cs
hlt
pop
out
sbb
scas
cs
cmp
in
ds
adc
push
xchg
jg
rol
sub
jne
jne
imul
add
ror
lea
push
movs
fsubr
daa
daa
xor
std
out
sbb
(bad)
pop
or
mov
push
cs
cli
sbb
cs
dec
and
add
je
sub
xchg
scas
push
jmp
fs
ror
dec
cs
mov
(bad)
push
sub
cmp
iret
adc
push
inc
mov
fdiv
push
dec
cs
jb
inc
mov
lods
shl
mov
lea
sbb
and
popf
pop
mov
aas
adc
sub
push
or
and
pop
in
clc
out
cmps
and
fwait
sub
rol
call
cs
jae
adc
clc
mul
cmp
mov
adc
nop
mov
shl
cmp
ins
aas
outs
mov
psubb
cli
adc
aam
xor
in
neg
mov
adc
ins
clc
sti
inc
test
dec
pop
into
and
push
test
sub
sbb
fild
mov
pusha
xor
sbb
outs
test
mov
push
sub
jnp
pop
cmp
add
aaa
mov
test
out
fmul
fmul
sahf
sub
pop
xlat
add
xchg
test
mov
(bad)
xor
loopne
push
push
sahf
and
inc
sub
adc
loopne
dec
loop
imul
dec
jnp
loop
out
push
cmp
jge
add
dec
sub
nop
pop
sub
mov
fadd
sub
int3
fdiv
repnz
mov
add
nop
stos
cs
push
outs
push
movs
daa
pushf
cmp
out
jp
arpl
sub
push
fdivr
repnz
outs
sbb
imul
pop
and
out
pop
sbb
mov
test
mov
ror
inc
sub
outs
and
dec
inc
sbb
mov
es
jl
and
pop
mov
dec
mov
push
dec
std
mov
in
popa
lahf
and
mov
push
mov
jecxz
pop
cmps
fwait
jae
aad
aas
popf
mov
rol
lock
(bad)
(bad)
mov
pop
xor
out
ret
jg
(bad)
xor
or
popa
jp
and
shl
jg
push
loope
jmp
in
cwde
fcomp
stc
dec
xadd
lahf
sub
icebp
adc
sub
inc
ret
mov
mov
retf
outs
pop
mov
xor
dec
sub
not
int
sbb
jno
std
lods
pop
mov
dec
arpl
iret
daa
jns
out
pop
mov
fucomi
movs
xor
xor
cs
dec
mov
clc
aas
adc
xchg
add
mov
sub
jecxz
fldenv
loop
fild
push
lahf
pop
shr
cs
push
jb
or
cs
ret
aam
or
dec
fnstcw
and
cs
das
inc
jmp
xor
popf
imul
aas
dec
retf
nop
mov
jns
mov
cs
pop
inc
jb
das
and
bound
jecxz
out
mov
fldcw
add
jmp
mov
icebp
les
sbb
dec
cmp
sbb
das
in
call
sub
mov
cmp
test
icebp
inc
lahf
out
popf
cld
pop
stos
shl
adc
cs
xchg
adc
sbb
stos
push
popa
sbb
outs
scas
add
leave
xor
cmp
loope
mov
push
pop
adc
rcr
push
pusha
pop
xor
mov
retf
test
in
xor
sbb
js
call
fadd
sti
retf
in
stos
push
xor
jns
and
(bad)
scas
push
pop
sub
cmp
jp
xor
mov
inc
cmovnp
cdq
stos
or
or
pop
jl
clc
xor
mov
jge
add
cmp
cmp
test
stos
cs
shr
xchg
loop
xor
scas
cmps
lods
sbb
cs
pop
retf
add
xor
inc
xchg
fwait
adc
jl
nop
add
popa
adc
call
daa
jp
xor
stos
mov
into
cmp
movs
test
loop
pop
daa
add
and
cmp
dec
push
out
cmp
push
repnz
out
jl
js
pop
mov
push
cs
test
data16
push
or
scas
and
addr16
jb
cmp
jmp
shl
cs
mov
push
push
cmp
cs
in
(bad)
sbb
int3
mov
pusha
cmp
mov
cs
call
mov
xor
dec
shr
adc
sbb
aas
ins
dec
adc
(bad)
cld
cs
mov
add
cdq
(bad)
jl
jo
pusha
sbb
dec
push
mov
je
inc
pop
push
dec
push
dec
loop
mov
shr
icebp
fldcw
mov
cmp
mov
push
outs
jne
aaa
mov
(bad)
sub
push
or
jmp
cs
sti
shl
(bad)
rcl
xor
or
adc
push
fs
dec
out
rol
cmp
pushf
jns
xchg
adc
movs
sbb
lock
jmp
sar
xor
popf
xchg
cld
push
push
xor
xor
sub
stos
fistp
add
cmp
cs
mov
js
fnstcw
lods
push
outs
fsubr
test
or
ret
loop
ror
mov
scas
out
push
(bad)
pop
dec
mov
lods
or
add
lods
mov
cmps
pop
test
mov
jbe
cli
(bad)
fisubr
pop
dec
jbe
cdq
adc
int3
dec
ss
adc
cmp
ret
xor
xor
xor
mov
sbb
and
es
bound
cmp
lods
and
das
xchg
sbb
inc
bswap
loop
sub
sub
push
cmp
xlat
pop
mov
pop
fdiv
jo
popa
sti
movs
and
inc
and
ins
jle
push
jecxz
(bad)
imul
std
push
call
cs
scas
aas
in
cmps
jmp
mov
xlat
fcom
dec
or
pop
add
ret
push
fidiv
sahf
xor
outs
jmp
add
movs
fist
and
push
jo
sub
cld
or
(bad)
loope
imul
pop
daa
neg
ins
in
cs
or
dec
xchg
in
push
add
cvttps2pi
add
push
clc
xchg
movs
loop
push
outs
(bad)
mov
push
cs
dec
in
sbb
mov
rol
cs
dec
mov
aad
jl
cs
jb
mov
ds
pop
cs
fs
scas
stos
pushf
add
cmp
(bad)
movs
jmp
xor
add
fs
icebp
add
(bad)
fisubr
push
movs
lea
xor
lds
mov
mov
out
xchg
mov
push
loope
jmp
mov
xchg
sar
test
sub
mov
not
cmp
mov
jle
pop
or
aas
sbb
lea
xchg
push
test
fdiv
scas
call
(bad)
cs
in
mov
jnp
icebp
push
dec
imul
lods
sub
out
fistp
cs
mov
mov
pop
movlps
scas
pop
outs
pop
jbe
or
mov
pop
sbb
cmp
loop
xor
(bad)
(bad)
mov
loop
pop
push
add
scas
imul
stos
mov
leave
push
sbb
outs
mov
pminsw
mov
jge
mov
xchg
arpl
test
cld
ficomp
dec
ret
scas
and
lock
ds
and
cmp
and
push
dec
mov
aaa
cs
movs
ror
adc
(bad)
xchg
xor
or
jmp
loope
loope
mov
dec
mov
mov
jne
sub
leave
push
push
stos
xchg
and
inc
cli
(bad)
jmp
pop
ficom
and
and
push
cs
mov
call
call
(bad)
(bad)
jle
sub
adc
arpl
xor
mov
or
call
jo
sar
and
pop
rcl
mov
shufps
fcomp
cld
add
ins
psubsb
lods
out
sbb
push
leave
adc
aaa
stos
fsubr
or
shr
mov
xchg
cs
test
aad
push
in
xchg
fcomp
xchg
cs
iret
fs
dec
adc
push
mov
iret
test
shl
cmc
xor
xor
push
fwait
out
call
xchg
outs
xor
xor
leave
sub
push
bsr
xor
jle
leave
sbb
popa
mov
pop
jp
cmp
les
jo
hlt
jecxz
cs
add
movs
fisub
sbb
push
movs
cmps
mov
xor
imul
hlt
inc
mov
cs
lahf
gs
sub
lods
imul
(bad)
icebp
imul
inc
jl
in
movs
inc
cs
xor
sub
sub
sub
jge
xchg
jnp
pmullw
or
cmps
inc
pop
ins
fstp
leave
into
jno
(bad)
mov
jmp
test
loope
xor
or
xchg
fild
push
shl
and
scas
pop
cmp
retf
leave
loopne
cs
jmp
mov
xor
test
lock
cmc
into
(bad)
in
xor
(bad)
mov
add
push
sub
cwde
retf
outs
adc
ret
and
pusha
add
push
mov
jo
cs
int
jge
jb
imul
inc
cs
jp
mov
daa
push
ds
mov
aam
movs
out
inc
jo
sub
xchg
adc
fdivr
pop
aaa
cs
fs
mov
test
test
lods
push
push
imul
lods
jnp
call
cmp
push
icebp
into
and
jbe
icebp
data16
or
add
fsubr
(bad)
cs
loope
lock
dec
inc
pop
adc
push
leave
inc
dec
xchg
fldcw
and
pop
pop
cs
push
pop
add
jae
sbb
ins
mov
cs
repz
and
jo
push
cs
and
xor
neg
sbb
test
cs
sbb
cmps
daa
xlat
sub
mov
mov
xchg
xchg
repz
icebp
pop
xchg
aas
cmp
mov
cmp
push
sbb
cmc
cmps
cs
jo
addr16
fld
mov
pop
adc
mov
repz
cwde
sbb
in
imul
xchg
adc
xor
pop
dec
pop
fs
mov
cs
adc
xchg
mov
add
or
mov
xchg
fisubr
dec
test
sbb
jg
push
jbe
pusha
idiv
push
les
(bad)
(bad)
cs
adc
dec
cmp
push
out
and
iret
dec
pop
adc
xchg
pop
call
not
mov
and
cmp
jp
inc
sahf
movs
cs
adc
clc
and
mov
dec
sub
push
jmp
mov
stos
add
xchg
sub
jmp
mov
out
std
dec
idiv
psrlq
pop
cs
ret
jg
add
repz
xlat
out
daa
into
int
sbb
or
push
pop
cmps
add
jns
sub
xchg
mov
(bad)
fidivr
icebp
test
dec
scas
pop
loope
jmp
daa
lahf
in
dec
sahf
mov
leave
xchg
mov
and
cs
div
cs
sti
mov
push
push
xchg
cs
clc
pusha
xchg
inc
cmc
inc
in
jmp
mul
fisttp
scas
or
inc
sub
xchg
dec
out
mov
inc
mov
outs
and
or
pop
adc
lods
mov
xchg
outs
and
inc
sbb
pop
not
jecxz
out
mov
retf
sub
xlat
outs
inc
js
shr
and
ret
(bad)
jmp
sahf
pushf
pop
add
pop
hlt
xor
push
out
scas
cwde
aam
outs
push
jg
pop
xchg
retf
mov
xchg
xor
sbb
add
sub
imul
rcr
mov
mov
add
sub
ret
imul
(bad)
leave
sub
lock
sub
inc
lock
int
inc
aam
dec
(bad)
retf
cmp
test
push
vmread
adc
fidiv
enter
stos
mov
xor
push
not
movs
retf
cs
sub
and
mov
je
xor
dec
or
pop
ins
inc
push
xor
mov
add
xchg
inc
push
mov
cs
retf
imul
retf
mov
inc
xor
jo
scas
adc
xchg
in
add
in
scas
dec
add
gs
push
pop
shr
push
int3
repz
xor
fs
mov
je
push
mov
jle
adc
xchg
lock
repnz
cs
pop
movs
lods
pop
xor
jnp
rcr
loop
outs
sub
out
test
pusha
aad
push
hlt
push
mov
(bad)
je
gs
xchg
sub
ret
loopne
push
inc
js
xor
data16
mov
jge
ror
(bad)
shl
dec
aaa
scas
add
mov
add
ins
fisubr
stos
fcomp
push
xor
inc
jno
pop
out
sub
addr16
jge
pop
add
daa
jo
daa
data16
je
dec
ds
push
dec
jbe
bound
xchg
cwde
mov
push
jl
sbb
jb
xchg
mov
and
jmp
loop
add
mov
jmp
fisttp
sti
add
dec
retf
fld
rol
mov
cmps
jb
xchg
push
call
xor
mov
mov
mov
push
in
out
push
shr
adc
cmp
les
xor
jmp
aad
pop
out
fsub
and
inc
scas
and
scas
out
push
shl
push
stos
adc
cmp
or
pop
pop
push
xor
imul
pop
fsubr
(bad)
out
sub
push
mov
mov
adc
(bad)
fwait
jb
pop
retf
cs
and
ja
pop
outs
sub
add
aam
lahf
push
xor
je
jbe
pop
adc
test
adc
cs
add
hlt
cs
mov
shl
jne
cli
cs
mov
mov
stos
sbb
xchg
pop
push
mov
and
stos
shl
jmp
mov
stc
outs
adc
mov
add
push
lods
cdq
adc
les
add
in
and
and
push
and
ret
fnstcw
xchg
fist
cs
sbb
js
out
sahf
push
and
bound
cmps
int3
into
mov
popa
mov
xchg
icebp
ins
outs
jno
inc
(bad)
nop
mov
(bad)
call
sti
cdq
inc
leave
dec
mov
mov
jp
adc
inc
(bad)
xchg
(bad)
outs
cmp
stc
jle
inc
sub
iret
add
aas
jno
cmp
dec
add
inc
cs
mov
fcomp
and
cmp
jp
ret
mov
fcom
cli
orps
mov
sub
leave
push
pop
enter
enter
(bad)
dec
aaa
sub
cmps
dec
and
dec
fcmovbe
aad
jmp
adc
adc
cmp
mov
or
sbb
fsubr
sub
cmps
ret
mov
cmc
xchg
sub
pop
jmp
jbe
push
out
xor
mov
lock
pop
mov
pop
fnsave
(bad)
pop
lock
dec
sub
in
scas
(bad)
rol
jg
xchg
and
ds
jo
jp
adc
pusha
push
pop
or
inc
cs
fs
cmps
adc
mov
push
mov
adc
in
or
mov
push
idiv
cmp
imul
push
pop
shl
lds
(bad)
jp
sbb
fisubr
jl
aas
(bad)
aaa
(bad)
call
sbb
test
sahf
jp
lahf
cs
ficomp
sub
nop
int3
and
mul
out
add
(bad)
std
(bad)
rol
out
mov
sbb
push
int
push
outs
test
cdq
push
mov
sbb
sahf
ds
xchg
fsub
push
pusha
fsubr
mov
mov
fs
addr16
xor
test
cmps
dec
in
dec
les
mov
pop
sbb
ja
hlt
cmovle
push
jl
xcrypt-ofb
cmps
imul
sar
mov
fcomp
cdq
ror
adc
xor
jle
push
or
xor
cmp
in
adc
daa
or
stc
shl
popf
lods
daa
dec
into
mov
ds
xor
push
out
jae
dec
sbb
mov
push
lea
cs
out
lds
mov
jno
cs
repnz
mov
out
stos
out
xchg
push
cli
inc
shr
retf
cwde
loopne
adc
sbb
mov
sub
cmp
jg
xchg
retf
in
aam
sbb
out
mov
mov
xor
sub
pop
sub
dec
retf
dec
dec
fiadd
(bad)
jmp
cmp
sub
pop
sbb
jg
aas
pushf
cmp
or
push
inc
jb
xor
lods
out
dec
out
(bad)
shr
(bad)
je
es
mov
jbe
in
sub
out
xor
jmp
dec
mov
sar
inc
js
push
cmps
sbb
shr
in
cwde
mov
cmp
xor
cs
(bad)
xchg
xchg
add
jnp
push
jmp
pop
lahf
ds
div
ret
pop
movs
and
cmp
sbb
adc
in
jb
(bad)
pop
or
ins
jno
inc
adc
mov
jns
jl
pop
jne
fwait
mov
retf
push
sar
movs
rol
pop
shr
pop
mov
imul
dec
outs
inc
mov
fld
cmps
dec
aas
cmps
sbb
or
nop
add
jmp
loop
mov
mov
adc
push
xor
push
lds
push
(bad)
and
jg
mov
sub
imul
(bad)
jmp
xchg
cs
xor
call
fisttp
pop
(bad)
ss
outs
sub
ins
aaa
xor
inc
mov
inc
repnz
ret
push
add
mov
aaa
ja
sub
xchg
jno
adc
xor
mov
rcl
faddp
iret
cs
je
fstp
rcl
stos
xor
adc
xchg
or
ret
pop
das
push
sbb
push
add
addr16
aas
mov
cli
or
mov
xor
(bad)
test
jb
and
and
push
adc
push
sbb
push
cs
dec
arpl
int
(bad)
jmp
mov
cs
aas
retf
inc
adc
adc
add
jmp
arpl
push
cmp
mov
pop
sub
xor
dec
mov
adc
jle
(bad)
lock
(bad)
and
outs
retf
pop
scas
pop
mul
mov
hlt
sub
cs
mov
xor
enter
xchg
lahf
repnz
scas
loopne
dec
adc
sar
cmp
jns
cdq
push
scas
sbb
add
cs
push
repnz
call
ins
pop
pop
cmps
adc
gs
cs
xor
and
in
jmp
xor
icebp
cs
sbb
xor
mov
cs
sbb
enter
dec
xor
sbb
xchg
mov
ja
loop
lods
push
cs
and
mov
cmp
cmps
ror
sbb
loopne
icebp
mov
and
mov
out
dec
cmp
cmp
adc
push
xor
cwde
nop
aaa
out
and
mov
xchg
mov
lods
sbb
es
std
jp
mov
repz
jbe
push
popf
adc
imul
rcr
cmp
loope
cs
push
push
sub
jl
retf
retf
jmp
(bad)
into
jmp
add
sub
out
iret
sti
(bad)
mov
jb
aam
adc
sub
push
int
fisttp
sbb
call
imul
sbb
aas
rcl
xor
int3
sahf
cs
pusha
and
cs
(bad)
cmp
inc
movs
pushf
out
adc
sbb
mov
cs
pusha
in
sbb
push
aad
push
out
xor
and
out
int3
ret
mov
mov
fwait
loop
(bad)
jbe
or
cmp
inc
jg
test
into
jo
loope
cs
mov
mov
and
fs
push
repz
fsubr
pop
inc
mov
jecxz
and
cs
scas
ins
stos
sub
sti
or
adc
bound
push
inc
jo
loop
pop
dec
(bad)
stos
cmp
mov
fstp
and
xor
and
repz
dec
mov
lods
out
outs
mov
packssdw
pop
leave
int
movs
cwde
iret
shl
aam
xchg
in
scas
xchg
lock
and
inc
and
sub
inc
ret
stos
xchg
scas
loopne
adc
in
std
mov
mov
push
mov
retf
or
jmp
sbb
mov
xor
adc
loop
shr
cs
jbe
sub
mov
xchg
mov
cmps
out
push
in
mov
jmp
cs
xchg
out
jnp
dec
mov
fsubr
fld
sub
leave
mov
cmps
lods
xabort
shl
movs
cmp
int
aam
leave
jo
das
popf
retf
mov
jo
xlat
push
movs
rcl
jb
and
fs
movs
pushf
loopne
inc
xchg
mov
sub
pushf
inc
cmp
and
sbb
nop
dec
out
leave
dec
mov
mov
ins
rcl
dec
or
jge
pop
sub
add
retf
xor
ds
mov
mov
lea
ret
neg
outs
and
cmps
movs
cli
or
lods
cmp
(bad)
dec
adc
jmp
jp
(bad)
loopne
lds
mov
fstp
jge
leave
(bad)
adc
pop
sub
enter
jb
jno
cmp
xor
(bad)
and
xchg
arpl
jle
mov
es
push
sub
sbb
push
cmp
clts
leave
sbb
xchg
dec
sbb
adc
ja
mov
inc
mov
imul
mov
sar
je
(bad)
(bad)
repz
ja
cmp
scas
cs
loop
je
pop
inc
(bad)
sub
jbe
rcr
jae
mov
(bad)
mov
ins
mov
cmp
pop
test
and
into
push
data16
cld
cmp
mov
xlat
test
icebp
or
dec
push
rol
sub
movs
popf
iret
repnz
cmp
add
loop
sub
push
xor
mul
ins
xchg
les
(bad)
xchg
mov
and
and
out
(bad)
mov
lahf
jo
pushf
mov
lods
leave
adc
aad
xor
jmp
fimul
cli
xor
and
mov
and
mov
inc
xor
pop
iret
or
ret
sub
fld
push
xor
pop
or
xor
scas
inc
pop
push
popf
pop
sbb
stos
jo
cs
shl
mov
push
popf
xabort
push
pop
jecxz
push
or
call
cmp
mov
add
jmp
aas
mov
dec
ja
xchg
outs
push
mov
push
and
cmp
jle
lods
movs
xor
inc
jmp
pop
(bad)
leave
ror
jo
sub
jno
stos
inc
(bad)
mov
add
ret
(bad)
pop
xor
mov
lods
mov
jp
loop
and
xor
sub
imul
mov
les
mov
or
add
pushf
(bad)
leave
mov
inc
movs
mov
repz
dec
mov
out
fistp
jns
int3
cmp
arpl
inc
in
jmp
leave
add
idiv
shr
mov
outs
cmp
and
jo
ins
shr
pop
dec
sahf
into
push
hlt
fnstcw
xor
dec
push
leave
scas
inc
mov
or
mov
out
sbb
out
xor
loope
dec
dec
jge
fidiv
pop
sbb
mov
cs
sbb
xchg
xchg
add
mov
repnz
cmc
dec
xchg
xchg
xlat
push
jmp
dec
push
fadd
cs
mov
out
cs
bound
les
pop
outs
cs
push
sahf
xchg
test
je
jno
adc
push
cs
push
aam
cdq
mov
les
fnsave
push
pop
dec
push
jno
jmp
enter
test
movs
int
mov
inc
push
push
imul
mov
xor
sbb
pop
mov
mov
mov
inc
pop
xchg
(bad)
sub
out
cmp
xor
and
fimul
and
xor
dec
and
jmp
lea
(bad)
stos
sub
add
cs
push
div
push
in
mov
aaa
fmul
sbb
shr
out
ror
jle
popa
cs
jge
jg
rcl
jecxz
pop
cs
out
and
cmp
out
sbb
jne
inc
sub
(bad)
outs
sub
scas
or
jns
movs
mov
(bad)
cs
retf
and
push
sbb
pop
lds
popa
les
mov
cs
(bad)
fisub
and
xor
cmp
cli
movs
aas
sub
cs
div
jae
cld
aad
pop
lea
aam
test
pop
mov
arpl
loop
(bad)
sbb
sub
sub
sub
cli
jne
mov
mov
sub
(bad)
jb
shl
push
aam
test
cmp
xchg
push
loop
mov
xor
das
ror
cdq
retf
and
fdiv
mov
adc
and
push
inc
jae
test
pop
xchg
sbb
sti
retf
fwait
cs
xor
and
cmps
icebp
or
jb
addr16
std
cs
push
sub
aam
xor
sbb
shr
xchg
into
nop
mov
push
(bad)
adc
das
cs
inc
mov
test
lea
pop
fisttp
shr
lods
or
leave
cmps
jecxz
xor
adc
pop
xchg
(bad)
mov
sub
and
sub
enter
fucomp
(bad)
and
fcomp
cs
jle
dec
js
sbb
xchg
out
shr
add
movs
aas
cmc
jmp
push
sahf
mov
stc
jge
jmp
cs
nop
push
and
out
test
sub
push
mov
adc
inc
adc
mov
movs
mov
xchg
xchg
cs
test
das
mov
repnz
sbb
sub
cs
jg
out
loop
scas
jmp
repnz
(bad)
cs
jl
cli
jb
imul
das
mov
les
mov
lods
test
mov
add
add
dec
outs
(bad)
lods
dec
mov
sub
fst
xchg
and
dec
xlat
push
mov
or
add
xor
aas
and
sahf
inc
fcom
loopne
sbb
adc
outs
scas
dec
repnz
mov
(bad)
push
inc
or
scas
pop
push
dec
xor
cmp
imul
out
xchg
add
int3
inc
mov
pop
ret
sbb
not
sahf
shl
clc
mov
jp
pop
fld
pop
fidivr
out
xor
mov
fs
mov
(bad)
jg
sbb
sub
les
dec
out
(bad)
and
xchg
ja
ret
into
mov
clc
movs
cmps
adc
jno
adc
xor
(bad)
jge
push
sub
sub
call
sub
pop
or
sbb
inc
add
dec
(bad)
cmp
and
xchg
cmps
adc
xlat
(bad)
push
cmp
movs
mov
(bad)
pusha
and
dec
lock
sbb
pop
jae
and
out
xchg
sub
rol
in
jmp
fsubrp
fdiv
and
nop
in
pop
in
into
adc
xlat
lds
cs
pop
mov
aas
jno
xchg
addr16
add
nop
or
jecxz
movs
mov
cs
iret
sahf
dec
mov
std
(bad)
cmp
xor
ror
mov
outs
and
(bad)
stos
mov
jae
xor
js
and
repz
push
in
stos
nop
(bad)
call
in
inc
inc
xchg
mov
dec
push
adc
sub
push
sub
mov
out
sar
out
stos
pop
scas
loope
sti
or
mov
add
pop
sub
jo
loopne
cmp
int3
sbb
vmovups
stos
mov
mov
out
push
popf
fisub
dec
ret
jg
xor
pop
mov
lods
dec
gs
mov
test
cmp
jo
aas
dec
loope
adc
pop
mov
enter
sbb
and
sahf
shr
cs
xchg
or
or
fild
fwait
sbb
adc
mov
or
lods
daa
push
or
and
dec
and
add
mov
jle
sbb
mov
retf
outs
in
cs
cdq
inc
jl
scas
xor
sbb
imul
sahf
mul
imul
out
push
adc
lods
repnz
cmp
cmps
xchg
ss
cs
push
arpl
push
adc
iret
jmp
inc
nop
imul
cs
sbb
pop
cmp
inc
cs
fsub
shr
out
imul
imul
add
cmc
mov
cdq
lods
or
loop
(bad)
mov
sbb
daa
(bad)
push
clc
mov
push
icebp
ins
fisubr
(bad)
cmp
xchg
mov
mov
in
push
pop
cwde
dec
add
xor
inc
cdq
lahf
test
jp
fcom
jl
xor
xchg
fnsave
cmc
es
sub
popf
push
test
stos
dec
idiv
stos
rcr
cwde
cmp
lods
movs
add
xchg
rol
jmp
imul
scas
mov
outs
sub
cmc
imul
adc
in
leave
call
cdq
mov
mov
and
fstp
movs
les
out
add
sub
sti
rcl
sbb
bndldx
ins
(bad)
movs
mov
cmp
add
push
inc
je
pop
fmul
mov
sub
stos
fstp
rcr
push
imul
dec
pop
(bad)
popa
(bad)
bound
xor
push
sub
rol
mov
call
jns
std
ficomp
cdq
jp
xchg
retf
dec
(bad)
sar
fcmovnb
jnp
cmp
mov
inc
ds
sub
das
mov
(bad)
(bad)
xor
inc
pop
push
mov
cmp
xor
les
xlat
dec
sahf
cmp
outs
je
add
icebp
repz
call
(bad)
leave
pop
push
mov
rcr
std
pop
int3
inc
lods
out
xchg
stos
(bad)
hlt
lods
adc
adc
shl
dec
sub
cmps
data16
or
imul
add
pop
fldcw
and
js
push
push
and
int
mov
xor
idiv
cmps
stos
jp
ja
add
push
jp
jecxz
retf
(bad)
xchg
or
fsubr
paddusb
jmp
fadd
daa
adc
sbb
dec
rcl
retf
inc
pop
test
test
sahf
leave
sub
jle
push
mov
enter
(bad)
rcl
shl
pop
lock
jo
pusha
mov
stos
xor
cli
scas
neg
je
pop
pushf
ss
xlat
das
or
addr16
sub
mov
dec
shl
hlt
push
sbb
cmp
xlat
imul
add
stos
xchg
xchg
cmp
mov
mov
fcomip
adc
add
cmp
out
jb
dec
push
mov
push
mov
ss
xchg
loopne
jb
mov
pop
jmp
mov
imul
lea
push
mov
add
sub
into
dec
mov
addr16
das
mov
jnp
jge
sti
cs
jg
stc
mov
mov
retf
and
mov
loop
jmp
in
not
pop
cmp
add
fmul
lods
scas
(bad)
xchg
stos
pop
cs
mov
mov
fwait
jo
xor
mov
dec
mov
psraw
jmp
stc
mov
retf
mov
push
shr
stos
xor
xor
pop
inc
adc
xchg
daa
xchg
inc
inc
pop
sahf
out
enter
ror
cs
jecxz
in
and
xor
cs
xchg
mov
xlat
cs
iret
mov
jmp
test
add
and
test
lods
xor
scas
fsubr
sbb
sub
mov
cmc
mov
fsub
xor
or
aad
fisttp
sbb
gs
inc
cs
and
inc
push
mov
push
out
sub
aas
sbb
mov
cs
ret
cs
jecxz
mov
retf
movs
cmp
xchg
repnz
push
cs
ins
dec
mov
jae
ret
mov
popa
pop
mov
pop
fcom
loop
push
cs
or
lds
icebp
loop
push
into
jmp
(bad)
sub
(bad)
lea
jp
sub
xor
xor
push
mov
fmulp
shl
std
ja
(bad)
(bad)
sbb
call
pop
es
or
js
xchg
iret
sub
jo
mov
push
cmp
or
adc
pop
call
cmps
mov
icebp
or
idiv
out
sbb
cmp
cs
aam
xchg
sbb
lods
inc
outs
out
sub
xchg
cs
jmp
jo
scas
pop
dec
pop
dec
mov
outs
mov
adc
scas
arpl
ret
cmp
ins
jb
jge
jp
add
ret
sbb
xor
sbb
fld
(bad)
rol
movs
icebp
fst
inc
jae
popf
aas
inc
add
clc
or
and
bound
icebp
jmp
in
xor
mov
arpl
sub
inc
mov
and
jns
mov
cmp
enter
loop
mov
sti
xor
ret
mov
ficom
push
sub
push
mov
jmp
push
add
and
ss
mov
outs
mov
pop
and
lods
and
cs
movs
xor
jecxz
push
mov
ret
cs
pop
scas
les
or
stos
push
cs
(bad)
jmp
or
push
loope
sub
bound
inc
cs
and
aam
adc
shl
jge
aad
and
push
cli
xor
mov
xor
adc
xor
je
sub
ins
daa
fsubrp
fiadd
push
popf
push
cs
jmp
fst
enter
or
pop
xchg
jge
imul
mov
mov
shr
into
push
loop
rcl
push
push
push
inc
rcr
jb
xchg
aaa
push
mov
popa
aas
lods
inc
mov
aaa
dec
or
jp
das
jo
mov
int
fdivr
and
hlt
icebp
mov
add
xchg
cmps
cs
cld
sbb
fnsave
push
movs
adc
rcl
pop
outs
xor
leave
movs
dec
lock
pop
scas
js
lock
pop
sub
jno
sub
mov
push
xchg
mov
and
push
mov
push
add
jle
sub
(bad)
jmp
and
dec
sub
movs
in
(bad)
(bad)
and
sbb
inc
sub
cmp
jp
jecxz
add
fld
ss
xor
mov
inc
shl
jmp
nop
popf
call
jne
fisubr
xchg
mov
cmp
jg
lea
sub
cmps
and
fsub
or
sbb
xor
dec
adc
scas
fild
(bad)
or
dec
cld
push
inc
mov
pop
mov
dec
or
(bad)
into
add
push
push
imul
aaa
xor
sbb
xchg
not
out
or
rol
call
sahf
add
iret
(bad)
mov
dec
xor
daa
mov
popw
enter
rcl
daa
scas
out
dec
loope
cs
dec
xor
(bad)
je
add
out
cs
iret
mov
cs
push
jmp
xor
mov
rdpmc
xchg
push
outs
xchg
adc
lea
fidiv
dec
aaa
jge
dec
cs
mov
add
nop
in
push
push
adc
(bad)
add
add
cs
out
imul
cvttps2pi
xor
out
out
add
aam
cs
mov
push
nop
hlt
jmp
dec
jns
mov
xchg
stos
inc
cs
adc
inc
out
iret
mov
imul
jg
xor
sar
cs
cmp
div
adc
pushf
ret
sub
xor
push
(bad)
pop
(bad)
fiadd
in
adc
test
mov
push
cs
jl
pushf
cs
xchg
imul
fild
icebp
pop
fdivr
cmp
shl
cs
push
hlt
mov
popa
push
fs
jmp
xor
cmp
idiv
fs
push
mov
xor
or
test
dec
(bad)
dec
mov
sub
sbb
jge
leave
pop
xor
sub
add
xchg
stc
imul
mov
xor
repz
sbb
adc
cmp
pop
scas
mov
ins
stos
inc
test
add
cmp
xor
out
xor
adc
xor
sub
mov
lods
bnd
xchg
movs
les
sub
inc
jl
(bad)
not
sub
leave
push
movs
into
sbb
lods
pop
retf
fs
pop
sub
or
mov
xchg
xchg
sti
jge
fld
mov
add
out
inc
leave
(bad)
div
fimul
sbb
fnstenv
es
ss
mov
sub
ret
pop
and
cli
sub
aas
and
test
(bad)
cmc
or
add
dec
repnz
idiv
pop
fsubr
jg
hlt
push
das
scas
xor
adc
mov
dec
sbb
nop
fdivp
sub
inc
stc
popa
adc
leave
(bad)
enter
setg
inc
into
int
dec
outs
jge
scas
pop
xchg
shr
fmul
adc
adc
loope
inc
cwde
pop
dec
int
fdivr
shl
imul
icebp
inc
sbb
lea
mov
mov
dec
inc
retf
cs
xchg
bnd
in
mov
std
mov
cs
loope
les
xchg
add
mov
xchg
das
cdq
jae
mov
icebp
in
outs
(bad)
call
and
jnp
push
mov
fcmovne
sub
dec
and
lahf
iret
scas
stos
add
jbe
pushf
sbb
push
cs
jp
dec
pop
and
and
cs
cmp
cs
repnz
xchg
fcom
retf
inc
(bad)
sar
(bad)
cmc
xor
adc
cmp
(bad)
xor
jnp
jmp
sti
enter
jmp
cld
cs
pop
or
outs
sbb
popf
leave
out
bnd
inc
cmp
lods
retf
pop
lock
xchg
sti
xlat
xchg
movs
cmp
mov
mov
enter
jno
cmp
mov
sbb
bound
dec
push
push
pop
(bad)
sub
mov
xchg
adc
icebp
jmp
cs
scas
adc
leave
xchg
cwde
aaa
xor
repnz
frstpm(287
and
outs
push
push
dec
sub
movs
dec
and
push
imul
pop
and
cmc
jle
cmps
dec
adc
ficom
mov
cmp
lea
pushf
xlat
popa
out
and
xor
and
cs
mov
je
add
push
and
ret
test
adc
scas
xor
mov
inc
and
mov
(bad)
sub
push
pop
sbb
mov
out
fisub
daa
cld
xor
icebp
or
mov
push
jbe
add
hlt
cmp
sub
mov
xor
int
jo
fnstenv
push
fcmovne
cmp
jbe
pop
mov
repz
cs
dec
adc
fcom
add
dec
cli
mov
jo
inc
bound
jmp
scas
or
repnz
out
pop
adc
xor
mov
popf
push
xor
fnstenv
mov
mov
xor
mov
xor
sub
add
xor
mov
or
jmp
mov
pusha
outs
and
leave
mov
sub
adc
daa
jbe
lods
push
or
dec
aas
add
idiv
std
sbb
pushf
shr
mov
mov
cs
or
(bad)
stos
sub
into
cli
jne
shl
dec
push
movs
xchg
outs
addr16
imul
into
sahf
fild
xor
scas
push
iret
push
out
sbb
call
cs
adc
sub
adc
pop
mov
cs
jle
xchg
push
pop
adc
cs
mov
push
push
pop
cs
iret
out
xor
sub
mov
xor
xchg
fild
dec
cmp
and
aaa
into
push
cs
pop
cmc
(bad)
int3
repz
adc
or
lock
dec
add
xor
xchg
out
and
fist
jb
cmp
or
pushf
aaa
add
loop
stc
cs
jmp
jno
xchg
jae
adc
mov
or
cs
popf
cmps
in
std
cs
sub
and
and
adc
leave
fist
shl
jg
and
push
adc
pop
push
mov
mov
leave
outs
test
jmp
mov
fucomi
cld
ss
sbb
mov
das
xor
aaa
jb
jg
mov
push
inc
cs
retf
jns
inc
out
mov
call
iret
push
pop
popa
shr
push
sub
(bad)
mov
scas
push
and
adc
or
int
bound
cs
icebp
test
cmp
mov
enter
pop
adc
mov
loop
sub
outs
sbb
out
stos
out
jne
repz
inc
push
retf
cs
and
pop
jne
sbb
xchg
dec
mov
sub
jmp
xor
sub
popf
cmp
pop
push
xor
dec
cmp
out
shl
sub
inc
xor
and
std
js
ffree
(bad)
pop
mov
in
and
mov
outs
add
push
stos
and
mov
mov
jecxz
mov
hlt
in
inc
fdivr
cmp
jg
mov
hlt
mov
mov
mov
lahf
test
inc
jmp
sub
xchg
out
mov
xor
pop
das
mov
xor
adc
loop
add
add
inc
cld
leave
std
jp
call
sub
inc
xchg
cmps
add
adc
xor
(bad)
sbb
and
in
cmp
sahf
mov
inc
cmp
dec
xchg
xor
dec
leave
push
mov
jno
test
mov
jne
adc
mov
push
jno
xchg
mov
pop
jo
mov
sub
jns
mov
shl
push
test
cmp
cmp
mov
es
retf
and
les
mov
adc
shl
push
jo
push
push
sahf
jmp
js
(bad)
sub
outs
shufps
xchg
pop
or
test
cmps
ja
push
fcomp
xchg
(bad)
bound
jle
stos
xor
pop
add
mov
jbe
or
fucom
cmps
jl
dec
sub
ret
jb
je
(bad)
call
mov
mov
mov
or
sbb
cs
rcl
xchg
ins
test
sub
test
ret
rol
outs
in
fadd
cs
(bad)
add
leave
and
imul
sahf
mov
inc
icebp
jne
adc
adc
jmp
mov
push
(bad)
xchg
fild
adc
sub
out
fwait
mov
push
mov
inc
lock
cmp
into
pop
cs
sub
mov
jp
ror
enter
aas
dec
mov
stos
scas
test
mov
into
xor
repnz
xchg
mov
jp
xchg
ror
jge
cmp
mov
sbb
(bad)
push
daa
(bad)
mov
add
retf
cs
arpl
adc
mov
and
add
push
int
jb
cs
mov
cmp
cs
cwde
enter
(bad)
adc
mov
pop
or
inc
ja
cs
lock
cs
int
mov
jb
cmp
ja
add
pop
icebp
add
xchg
leave
cs
inc
sub
dec
sub
pusha
outs
enter
or
sub
pushf
adc
aaa
sti
fst
jmp
mov
daa
cmps
and
nop
data16
sahf
add
push
cmps
pinsrw
scas
scas
out
mov
fistp
xor
xchg
(bad)
mov
and
sub
bound
cmps
movs
mov
pop
cs
jmp
jp
and
mov
mov
cdq
sbb
mov
(bad)
cs
mov
mov
xor
adc
sub
mov
lods
jle
mov
push
pop
adc
or
jbe
xchg
sub
cli
shr
imul
out
fwait
adc
sub
xor
icebp
pop
push
mov
lahf
adc
push
jl
mov
daa
outs
rcl
push
push
xor
cdq
loop
cmps
popa
cs
xor
sub
les
xor
lock
jmp
outs
ret
fisttp
repnz
inc
or
or
(bad)
add
jle
xchg
rcl
into
inc
cs
dec
icebp
sbb
add
adc
int
cmp
cs
ret
js
(bad)
mov
and
pusha
out
inc
cs
out
push
je
inc
shl
push
popf
mov
cs
and
push
addr16
push
sbb
push
ret
fisttp
fiadd
cs
inc
add
and
cs
jmp
shl
push
daa
test
int
dec
popf
pop
xor
jno
pop
icebp
or
mov
pop
or
inc
and
into
xchg
ret
call
(bad)
adc
cs
xchg
mov
cdq
fsubr
stc
test
sbb
in
mov
inc
add
mov
cdq
sbb
cmps
cs
sub
imul
fwait
sbb
sub
push
push
adc
in
and
pop
out
or
cmps
mov
aaa
xor
daa
xor
sbb
jg
das
jle
lds
or
mov
cmp
in
or
inc
pop
rol
(bad)
js
loopne
push
cwde
pop
and
xchg
ins
xor
and
sub
lock
pop
(bad)
call
xchg
inc
nop
ja
mov
cmp
fst
cmp
sbb
pop
movs
cmps
pop
pop
push
fs
mov
aad
lds
(bad)
jl
cdq
cmp
or
shl
neg
push
aam
(bad)
pushf
loope
mov
push
popa
mov
imul
push
in
mov
push
sbb
inc
mov
ins
ja
xchg
fldenv
pop
lods
mov
fdiv
das
sti
hlt
fdivr
jge
dec
je
les
(bad)
push
loope
mov
cmp
imul
and
cmp
cmp
or
cld
scas
out
aas
dec
aaa
imul
inc
cmp
sar
or
adc
mov
inc
gs
and
inc
pop
cs
dec
jl
js
pop
xor
inc
aaa
dec
push
push
xor
rcl
cmp
xor
das
stc
scas
or
pop
fild
rcr
ins
fstp
popfw
leave
daa
sar
repnz
jmp
mov
sbb
push
and
enter
adc
mov
adc
mov
sar
xchg
(bad)
daa
out
test
pop
js
sub
sbb
retf
(bad)
cli
jg
sub
enter
out
mov
dec
mov
(bad)
sub
xor
xchg
sub
dec
adc
and
in
mov
in
iret
xchg
push
mov
pop
xor
imul
test
int3
xor
icebp
add
lock
(bad)
mov
mov
popf
outs
aam
or
push
mov
retf
js
xchg
xor
mov
das
scas
dec
call
cs
pusha
cli
hlt
shr
mov
push
lock
sub
in
stos
xchg
lock
push
mov
add
xor
imul
test
xchg
xor
push
stc
rol
cmps
and
cmp
into
dec
add
xchg
es
(bad)
jb
mov
div
xchg
imul
jmp
mov
inc
mov
mov
mov
mov
nop
jge
lock
xor
test
push
adc
mov
ss
sbb
inc
sti
push
mov
jb
fucomp
fsubr
and
mov
sub
or
inc
pop
pop
iret
pop
or
xchg
sub
(bad)
adc
xor
loope
push
leave
inc
sub
sti
pop
fcmovbe
push
pop
sti
cmp
clc
mov
push
and
std
inc
dec
mov
cs
cmp
mov
and
cmp
outs
push
pop
and
cs
sub
jb
or
dec
in
stos
lds
js
push
fld
cs
pop
gs
aas
sbb
jns
mov
sub
cmp
into
and
cmp
fstp
mov
xchg
cmps
xchg
shl
popa
stos
xor
setne
(bad)
sbb
cs
adc
cs
xor
jge
jecxz
pop
loopne
push
xchg
cs
into
jnp
sub
cmps
xor
test
fidiv
out
fs
fwait
mov
sbb
push
icebp
or
or
add
jg
push
imul
mov
in
nop
aas
bound
mov
cmp
lods
cmp
jmp
repnz
psubusb
mov
push
cmp
sbb
xchg
scas
push
js
(bad)
cdq
sub
rol
jmp
xchg
daa
(bad)
mul
cs
cmp
pop
pop
dec
sub
cmp
pcmpgtd
sahf
xchg
sub
pop
les
xor
pop
jge
(bad)
adc
mov
cs
repz
outs
(bad)
pop
jmp
sub
neg
int
jmp
into
gs
cs
pop
mov
jo
mov
pop
or
out
cs
pop
xor
cmp
aad
cs
xor
xor
shl
(bad)
adc
mov
lds
mov
cs
fisttp
adc
enter
aas
mov
xor
stc
xchg
je
mov
cs
fwait
test
enter
ror
mov
dec
adc
data16
adc
int
fdivr
or
shr
dec
or
jg
data16
xor
cs
pop
push
stos
push
push
sar
mov
sub
sub
adc
xchg
sahf
movs
cs
loopne
xchg
fnstsw
mov
popf
cs
sar
leavew
fdivr
and
jnp
frstor
pop
dec
or
jno
pop
test
daa
je
stc
mov
ds
repz
mov
hlt
cs
scas
je
sub
adc
cs
movs
pushf
push
cmp
add
xchg
cmps
(bad)
mov
arpl
lods
sbb
cmp
xor
leave
arpl
sub
out
scas
xlat
add
arpl
out
mov
loop
inc
xor
aam
div
jbe
push
pop
cmp
push
sahf
push
push
inc
pop
add
in
enter
jmp
jno
fadd
gs
arpl
jmp
jb
or
ss
mov
scas
jg
mov
fs
adc
add
mov
call
jle
jbe
gs
mov
and
movs
fwait
aad
mov
xchg
xor
mov
jmp
sub
jecxz
add
dec
cld
xor
sub
xor
shl
jno
or
cmps
(bad)
cmp
mov
repz
in
retf
inc
lds
out
pop
rep
cdq
stos
xchg
add
jle
fild
mov
xabort
push
aas
mov
jmp
loop
jmp
mov
arpl
jle
iret
rol
iret
xor
test
arpl
das
scas
xchg
aas
and
jae
hlt
retf
cld
adc
pop
xchg
mov
sbb
mov
and
push
fidiv
mov
mov
loopne
leave
jmp
xor
add
and
or
jle
jns
ucomiss
call
sub
jl
pusha
or
xchg
inc
mov
sub
dec
sbb
ret
mov
fwait
repz
cmc
mov
jmp
sbb
cmp
add
push
sub
ret
mov
xchg
daa
lds
es
jo
or
jl
retf
out
add
aaa
popw
jp
aas
scas
sub
mov
movs
pop
inc
add
pop
popf
cs
imul
dec
or
xor
adc
jl
sub
mov
fidivr
lods
cs
xchg
and
mov
fst
mov
xor
sbb
daa
repz
loopne
data16
xor
inc
mov
add
push
fsubr
in
push
mov
cwde
push
cmp
sti
xor
fst
shl
in
lods
out
jns
and
mov
int
cli
xchg
xchg
ror
adc
adc
push
js
bound
xchg
imul
sub
ins
xor
test
cs
fs
scas
and
pusha
repnz
cs
dec
push
sbb
stos
mov
or
push
mov
pusha
push
jg
xor
retf
pop
cmc
xor
cld
sbb
cli
mov
sub
in
or
popa
xor
lods
push
or
xor
js
enter
pop
mov
cs
iret
dec
aas
xchg
push
fisttp
and
leave
outs
dec
pusha
mov
inc
enter
fisttp
inc
and
jmp
inc
test
xor
fsubr
and
sbb
pusha
or
mov
lds
inc
inc
scas
loopne
loop
and
push
loope
movs
das
bound
into
add
cs
push
sti
sbb
sub
jl
push
lods
cs
or
and
pop
cs
into
jecxz
sub
loop
and
data16
pusha
mov
inc
inc
mov
push
xor
sahf
cld
and
or
cmp
push
dec
push
scas
popa
in
cmp
bound
push
inc
scas
shr
out
pop
dec
jnp
xlat
daa
scas
test
clc
sti
mov
push
cs
jmp
push
test
cmp
popa
cmp
daa
push
jl
outs
in
aad
movs
or
jbe
fwait
(bad)
out
fcom
mov
and
es
mov
shl
jb
mov
mov
jb
mov
push
mov
fcom
movs
sub
xor
pop
sbb
sbb
mov
fsubr
lds
fisub
into
mov
aam
mov
mov
(bad)
sub
daa
out
rcr
push
jg
push
out
and
outs
loopne
sbb
pop
mov
scas
pop
daa
dec
jae
aam
mov
cmp
scas
mov
lods
push
and
xchg
mov
xchg
mov
pop
xchg
cs
loopne
adc
sub
inc
jae
fldenv
push
sub
lahf
sahf
dec
mov
mov
(bad)
loopne
into
aas
aas
lods
cs
inc
pop
or
fsubr
mov
repz
popf
jg
mov
adc
xor
xchg
fwait
mov
jle
adc
mov
jno
sbb
adc
or
jne
loop
repnz
lods
mov
fistp
xor
pop
xchg
xlat
mov
dec
cs
inc
cs
pop
push
repnz
(bad)
sbb
lahf
or
cwde
inc
inc
cs
shl
sub
add
arpl
mov
mov
bound
cmps
movs
mov
int3
mov
cs
sbb
nop
pushf
adc
add
mov
in
js
repz
popa
push
mov
lods
sbb
mov
scas
inc
dec
test
pop
(bad)
int3
pop
mov
mov
jns
stos
test
sbb
jp
in
push
call
pop
sub
mov
push
xchg
jnp
and
jo
push
data16
mov
bound
push
cs
sbb
mov
pop
cmp
mov
xor
and
push
sbb
xchg
pop
bound
xchg
mov
(bad)
mov
out
cli
mov
cs
ss
gs
jne
pop
or
sub
push
(bad)
push
add
inc
cmp
mov
(bad)
out
nop
retf
scas
xchg
mov
add
in
stc
fs
cs
xlat
mov
daa
repz
inc
loop
xchg
add
ins
and
xor
add
ins
fsubr
xor
and
clc
fsub
not
hlt
movs
jmp
mov
or
mov
cs
dec
or
cmp
inc
call
sbb
cs
(bad)
gs
movs
cwde
sbb
(bad)
out
out
out
in
pop
adc
sub
xchg
int
das
pop
sub
cmp
bsf
mov
cs
or
add
mov
aam
xchg
(bad)
in
clc
jbe
dec
cs
mov
daa
retf
ins
push
(bad)
fyl2x
mov
push
adc
dec
push
xor
movs
cmps
out
in
cmp
js
cs
iret
enter
jb
pop
ror
in
icebp
mov
lahf
out
out
inc
lock
movs
pop
rcl
jnp
xchg
mov
xor
pop
leave
lahf
mov
sahf
repnz
mov
fucomip
sbb
push
pop
test
inc
mov
repnz
es
rol
mov
scas
sub
sub
je
mov
ret
dec
fcmovnbe
int3
mov
or
xor
clc
dec
inc
into
sbb
push
pop
adc
mov
test
or
sub
loopne
cmps
cmp
mov
sub
out
mov
fldcw
fild
jmp
push
mov
mov
and
dec
fwait
test
or
fwait
jle
pop
aad
lock
or
pop
jp
jmp
add
mov
add
mov
xchg
sub
es
jnp
(bad)
sub
lds
pushf
fsub
pop
mul
fnstcw
out
pop
mov
push
sar
lock
mov
pop
out
cld
lea
add
xchg
mov
mov
xor
or
ss
xchg
fsubr
xchg
loopne
in
xchg
call
and
out
sub
push
iret
stos
aam
loopne
cmp
(bad)
pop
fadd
aam
mov
add
and
sub
fcomp
(bad)
(bad)
test
loop
mov
(bad)
sti
xchg
int
dec
jp
xchg
shl
fld
sub
inc
outs
adc
cwde
xor
cmp
aas
and
inc
lds
push
or
sub
cmp
mov
xchg
jbe
jmp
movs
sub
aad
cmp
push
cli
out
stos
adc
mov
pop
outs
out
mov
and
pop
movs
sub
and
cmc
mov
mov
sub
xor
jl
xor
cmps
addr16
pop
cdq
sti
das
inc
xchg
out
push
fcomp
fidivr
jne
in
mov
scas
mov
lea
movs
out
cli
dec
scas
adc
cmps
in
(bad)
stos
xor
outs
loop
push
push
dec
dec
pop
pop
sub
je
add
sbb
xor
loop
loope
leave
mov
inc
adc
jbe
imul
out
into
add
dec
jne
and
xor
outs
sbb
in
xlat
jae
scas
push
fsubrp
cmp
add
jmp
mov
xchg
cwde
daa
push
outs
jg
sub
xor
cmp
add
mov
sbb
push
xor
inc
xchg
add
sub
xchg
adc
jo
inc
not
push
pop
inc
test
xchg
or
pop
mov
mov
(bad)
xchg
mov
jne
cmp
xchg
add
out
popa
and
jo
mov
(bad)
jl
xor
mov
cmp
adc
int
fst
cmp
dec
lock
lahf
test
jl
pushf
push
sub
repz
mov
test
cs
hlt
mov
cs
or
jecxz
outs
cld
cmp
xor
or
xor
stos
ficom
jnp
fldenv
in
das
mov
dec
cwde
arpl
ret
cs
test
xchg
daa
xor
sahf
popf
and
or
scas
movs
sub
int3
and
dec
ds
sar
xlat
cmps
icebp
push
dec
neg
jbe
clc
into
lds
mov
enter
andnps
push
jle
push
out
out
xchg
adc
jp
jge
push
sti
cs
jmp
add
push
jle
je
les
pop
push
cmps
cs
lock
fiadd
icebp
sub
dec
sti
daa
push
adc
dec
adc
push
adc
inc
cmp
xchg
arpl
add
call
out
daa
pushf
push
mov
cmp
dec
out
sahf
int
fs
scas
scas
pop
cs
xchg
shl
loope
ret
jp
push
retf
adc
(bad)
out
fwait
adc
mov
push
mov
inc
add
outs
inc
rol
sti
or
mov
or
jnp
arpl
retf
cs
xchg
mov
cs
ins
gs
mov
sbb
scas
in
adc
mov
cs
push
mov
cmp
xor
aam
adc
cmps
adc
xchg
jne
xlat
push
lods
push
add
lea
les
mov
loope
mov
in
sbb
inc
(bad)
shl
add
outs
jge
pop
mov
scas
cmp
sub
push
cs
mov
sbb
cs
movs
dec
sbb
inc
scas
cs
stc
test
xor
sbb
mov
dec
adc
ud2
sub
jg
cs
enter
pop
xchg
test
enter
push
sahf
nop
aam
test
adc
sbb
add
lods
ss
cmp
xchg
dec
mov
xchg
push
jge
(bad)
test
rol
mov
add
scas
cs
bound
sbb
xlat
and
fldcw
aas
or
in
sbb
mov
mov
mov
test
sahf
push
out
stc
scas
jae
test
lods
add
sahf
push
mov
loop
idiv
mov
enter
leave
sbb
bound
outs
dec
sti
mov
cs
clc
int
jp
aad
inc
mov
mov
xor
stos
leave
fistp
xchg
(bad)
fldlg2
scas
sub
clc
scas
and
lods
sub
mov
or
movs
loop
sbb
pushf
imul
sub
xchg
jbe
cmp
or
add
or
sub
sbb
push
dec
ret
lock
shr
ins
and
movs
inc
xor
rcl
push
xchg
jp
out
pop
xor
mov
das
cmp
arpl
xor
mul
lea
cs
das
push
lock
cmp
push
stc
pop
movs
repz
(bad)
jns
jb
ins
rcl
add
hlt
sbb
popf
add
sub
push
mov
sub
xor
mov
mov
inc
mov
xchg
xchg
xchg
push
cs
int3
out
repz
pusha
sbb
mov
daa
pop
retf
or
lods
cs
sub
jl
adc
ss
nop
mov
push
push
push
xchg
sahf
xor
(bad)
jb
push
ins
mov
xor
xor
cs
inc
sub
mov
jns
mov
cs
ret
fdivr
je
pop
mov
mov
sbb
jno
sub
sbb
loop
sub
into
mov
shl
aam
cs
push
mov
pop
xor
pop
push
jmp
outs
scas
mov
push
ficom
cs
mov
jbe
cs
aas
repnz
pop
push
repz
cmp
push
inc
mov
lods
xor
inc
jnp
xchg
xchg
mov
push
outs
ret
fucom
cs
leave
add
inc
out
jge
ins
mov
jbe
push
xor
inc
pop
jge
mov
jmp
leave
or
cwde
push
ja
data16
ja
leave
in
cmps
xor
inc
sub
int
rol
(bad)
out
or
icebp
xor
dec
lods
cli
leave
pop
test
call
jl
cmps
xor
jnp
or
sahf
out
outs
sahf
adc
outs
out
cmc
mov
xchg
(bad)
out
mov
sbb
pop
mov
xor
lds
dec
sbb
retf
dec
leave
hlt
test
and
les
cmp
dec
rol
stc
push
inc
add
mov
je
shl
mov
stos
jmp
sysexit
int
xchg
movs
fcomp
stos
shl
das
(bad)
out
sahf
dec
mov
mov
lea
loope
leave
dec
add
call
data16
(bad)
inc
dec
fadd
ror
sub
imul
stos
fcom
ins
ss
ror
rcr
fsubr
fstp
mov
push
push
rol
in
bound
es
out
stc
xor
jbe
out
cmp
inc
dec
nop
(bad)
out
and
bound
je
and
xor
mov
loop
in
in
popf
mov
(bad)
cmp
(bad)
int3
cs
bound
jecxz
xor
add
push
outs
lea
scas
loopne
or
ss
inc
js
gs
push
lods
stc
push
xchg
cmps
jmp
jne
mov
mov
lea
mul
inc
push
cs
pop
inc
sahf
push
fild
(bad)
into
retf
inc
sbb
out
outs
sti
mov
mov
mov
cs
or
pusha
shr
fisubr
test
pop
test
rcl
dec
jle
push
sub
cs
nop
jge
xchg
fldcw
stc
jl
jb
retf
xor
rcr
sub
mov
fistp
retf
push
les
push
push
aam
aas
pushf
xchg
lahf
lods
pop
mov
iret
fsubr
sub
adc
repz
shl
ficom
cmp
push
inc
inc
push
xchg
mov
mov
int3
adc
(bad)
sub
inc
or
sub
add
rcl
aaa
aad
outs
jae
sbb
cwde
pop
jle
cs
adc
jbe
nop
cmps
push
mov
adc
outs
jmp
ror
into
cs
cmp
jecxz
shl
sbb
or
sahf
addr16
mov
cs
add
movs
jl
enter
or
clc
cmps
mov
ins
into
add
enter
xor
daa
jmp
or
xchg
mov
add
sbb
sbb
jne
scas
xor
retf
ret
mov
dec
or
mov
ins
call
mov
mov
test
or
xor
inc
add
loopne
mov
adc
test
repz
xchg
pop
cld
sub
cdq
sub
rol
add
mov
xchg
jb
fs
mov
iret
mov
hlt
imul
mov
aaa
mov
loope
ficom
or
sbb
pop
cs
test
leave
push
cs
mov
ins
cmps
push
imul
test
mov
into
test
popf
call
jns
jb
cmp
in
mov
repnz
ret
popa
imul
jbe
shl
mov
adc
jo
popf
iret
(bad)
sbb
and
inc
aas
leave
cdq
loopne
fistp
bound
jmp
int3
bound
pop
sar
xchg
lahf
enter
out
loopne
add
cs
sbb
jg
cli
inc
lods
cs
jo
dec
cmp
lods
cs
in
cmps
mov
and
xor
ret
push
outs
pop
dec
or
es
mov
popa
cs
test
adc
and
ins
into
cmp
clc
fisttp
rcl
scas
adc
out
xchg
lods
std
icebp
mov
cmp
mov
test
or
dec
inc
inc
push
xor
(bad)
mov
sbb
xchg
jns
add
loope
fild
inc
add
cmp
cwde
push
xchg
cmp
jns
sub
mov
fdivr
(bad)
clc
add
xor
popf
mov
enter
out
in
cmp
cmp
ins
sbb
stc
iret
les
out
out
repz
daa
mov
(bad)
rcl
ror
fst
sbb
pop
push
sbb
mov
fs
ins
adc
sub
cs
push
ret
mov
dec
fwait
sbb
test
sub
push
cmps
idiv
(bad)
cmps
sub
stos
fldenv
scas
push
std
mov
das
sub
fcom
lods
in
leave
(bad)
mov
fnsave
pop
or
ja
js
push
and
repnz
daa
mov
out
push
xchg
sub
adc
mov
jne
sbb
inc
jb
imul
repz
hlt
jmp
pop
mov
fst
xor
icebp
out
in
or
and
add
adc
cmp
push
push
inc
(bad)
jecxz
js
loopne
adc
(bad)
dec
ins
push
leave
inc
inc
pop
pop
fsub
cli
sub
or
enter
data16
out
daa
out
sub
mov
aaa
leave
fs
xlat
push
mov
cld
jne
out
mov
and
leave
mul
out
add
dec
adc
xor
add
and
pop
arpl
imul
mov
jl
sub
sbb
icebp
pop
push
dec
mov
ficomp
fistp
push
mov
push
xor
popa
adc
sub
(bad)
sub
cmp
cs
sub
mov
hlt
enter
cmp
cs
popf
sub
push
xor
outs
inc
mov
daa
lea
mov
push
sbb
std
retf
add
xchg
sahf
test
mov
jmp
enter
sbb
pushf
rcr
add
fnsave
xor
shl
outs
sub
shl
pushf
pusha
frstor
lds
xchg
jg
push
mov
push
xor
mov
mov
int3
cs
xlat
jp
add
cld
pop
(bad)
sub
inc
(bad)
xor
xchg
xor
add
pusha
mov
xchg
xor
call
jecxz
xor
dec
rcr
adc
dec
loop
lods
pop
cmp
xchg
repnz
pop
mov
dec
cmp
sar
cmp
pusha
clc
fisttp
retf
xchg
not
pop
int3
jnp
es
iret
cs
(bad)
mov
aad
aas
repnz
adc
popa
sub
and
cmc
mov
sbb
daa
sub
and
sar
mov
xor
push
sub
mov
sbb
dec
lahf
in
xor
add
fiadd
fidivr
sub
pop
cld
jae
jle
sub
or
ret
iret
out
push
xor
mov
and
fiadd
fsubr
dec
rcl
xor
sahf
jmp
cmps
mov
push
ss
or
add
adc
cmp
mov
mov
ret
or
rol
cs
mov
iret
cs
pushf
aaa
mov
mov
aas
cmc
data16
test
repz
ret
and
cmp
mov
call
mov
add
mov
(bad)
repnz
fdiv
test
cdq
push
push
lock
sub
fsubr
int3
(bad)
inc
cs
push
and
pop
cmp
adc
pusha
adc
jns
into
and
shr
ins
(bad)
cmp
clc
mov
or
outs
add
cdq
pushf
jne
popa
cs
sub
push
mov
es
adc
fldenv
aas
cs
repnz
ror
sub
and
outs
push
xor
inc
imul
in
or
addr16
pop
xor
imul
mov
xor
push
jmp
outs
fadd
xlat
sbb
push
mov
adc
mov
pop
out
jno
jge
fadd
jg
sub
dec
xchg
add
mov
jb
ja
inc
xor
xchg
pop
and
js
push
into
mov
push
push
sub
add
sar
push
xor
or
sti
(bad)
xor
sub
mov
sub
sbb
(bad)
jmp
xchg
adc
xchg
xchg
mov
scas
pop
push
call
jge
adc
add
cmp
imul
sbb
in
pop
fdiv
push
je
pop
addr16
cs
xor
fs
jecxz
xchg
fimul
cs
or
mov
xor
pop
das
test
cmc
daa
sbb
je
retf
xor
and
dec
jg
cmp
add
mov
jnp
das
cmp
aaa
movs
in
xor
pop
(bad)
fnstenv
leave
or
and
ja
mov
fwait
inc
lock
std
fadd
mov
(bad)
pop
mov
out
pop
inc
outs
mov
dec
sub
dec
dec
mov
jge
add
fisubr
or
inc
sub
jge
shl
mov
into
mov
or
push
sub
out
pop
(bad)
cdq
mov
and
push
sub
lahf
call
cs
sbb
aas
ins
aaa
retf
jmp
jnp
daa
lods
scas
sub
sbb
adc
adc
out
mov
jle
pop
xor
shl
jmp
mov
cs
mov
adc
mov
sub
outs
repz
dec
scas
shr
mov
out
mov
mov
push
cs
pop
inc
fist
and
add
xchg
scas
sub
cs
repnz
das
daa
and
cs
sbb
es
retf
in
sub
xchg
xchg
add
adc
push
(bad)
int3
loopne
cs
dec
icebp
mov
jnp
cmps
adc
mov
std
and
(bad)
shl
cs
add
push
mov
mov
xchg
aas
cdq
fwait
rcr
out
cmp
mov
cmps
hlt
jb
gs
dec
lahf
cmp
dec
dec
and
sub
dec
cmp
cmp
inc
xor
(bad)
(bad)
xchg
retf
dec
dec
xor
mov
xchg
scas
shl
xor
hlt
inc
xchg
div
cdq
pop
(bad)
add
inc
mov
mov
mov
lahf
rol
imul
mov
popf
(bad)
ret
cmp
cdq
cmp
mov
addr16
push
sahf
daa
and
into
xor
scas
out
mov
xor
mov
cmp
sub
repnz
test
mov
jge
dec
xor
adc
(bad)
in
retf
into
jg
addr16
pop
cld
std
xchg
ret
mov
and
fs
cwde
out
sub
dec
in
mov
loope
test
sbb
sbb
aad
dec
rol
neg
out
xchg
or
daa
call
fadd
cs
sbb
bound
cs
add
mov
cld
cs
aam
cmps
ins
mov
jnp
sahf
imul
sub
repz
mov
cs
or
sub
mul
dec
daa
jp
mov
inc
push
xchg
xchg
(bad)
jecxz
sbb
aaa
cmps
and
lahf
(bad)
in
mov
pop
adc
sbb
push
outs
or
in
adc
xor
jge
sub
and
cmp
mov
mov
push
jbe
adc
add
pop
xchg
lock
add
sar
sbb
push
and
or
add
jns
jne
lods
mulps
outs
dec
jbe
data16
add
sbb
sub
(bad)
push
add
out
dec
dec
sub
xstore-rng
cmps
or
cmp
out
xchg
xchg
out
loopne
cs
cmp
cs
bnd
cmp
cwde
iret
or
cmp
cs
inc
ret
call
jno
mov
sbb
outs
adc
pop
pop
pop
lds
scas
cli
jne
fist
movs
and
jbe
xchg
loopne
xchg
and
(bad)
cmps
call
add
add
jp
daa
add
fmul
add
pop
test
adc
pushf
loope
or
icebp
enter
mov
sub
(bad)
dec
je
sbb
push
scas
adc
jle
cmp
aaa
push
jp
mov
add
xor
lods
mov
sub
leave
ins
cmc
sub
popa
rcl
sub
jae
dec
push
scas
pop
mov
mov
cs
dec
inc
xchg
sub
mov
sub
sbb
repnz
ins
les
sbb
daa
ins
dec
add
push
mov
not
(bad)
xor
aad
ss
fdiv
sub
adc
sbb
sti
mov
mov
sar
lock
fisub
and
fwait
call
cwde
fimul
or
add
mov
jg
and
pushf
icebp
ss
xchg
xchg
nop
mov
add
scas
dec
or
scas
xchg
jp
xor
and
hlt
aas
aad
sbb
ins
shl
out
mov
cmp
es
pop
pop
mov
or
das
sub
inc
mov
aaa
(bad)
xor
int
call
push
mov
and
dec
out
(bad)
or
pop
fldenv
scas
test
mov
call
(bad)
push
xor
(bad)
leave
(bad)
cli
scas
inc
add
idiv
(bad)
es
xchg
arpl
movs
pushf
call
test
jmp
and
adc
cs
fst
xor
mov
std
(bad)
pop
mov
inc
dec
inc
jne
clts
jns
nop
into
push
mov
adc
add
cmc
and
xor
test
imul
loope
pop
or
push
adc
mov
sub
in
adc
sub
mov
dec
daa
push
cli
xchg
imul
xlat
into
sub
shr
call
mov
jmp
jno
adc
out
shr
imul
stos
icebp
pop
outs
retf
xchg
jmp
pop
push
ss
push
xchg
sbb
or
cmp
xor
imul
dec
loopne
dec
mov
and
mov
dec
(bad)
mov
or
and
lds
sahf
ret
or
jle
adc
cld
loop
cmp
aas
data16
push
in
add
adc
xlat
je
cs
inc
ds
mov
sub
jmp
push
rcl
std
cs
(bad)
mov
cmc
cs
add
cmp
test
(bad)
ins
jge
jp
sbb
and
sub
in
shl
adc
push
dec
cs
mov
or
addr16
adc
inc
int
cs
push
and
xchg
sub
sub
adc
stc
daa
dec
pop
sahf
adc
aam
ins
fadd
push
xchg
jl
hlt
pop
(bad)
fcom
pushf
adc
xor
shr
fidivr
add
xor
cs
inc
sub
test
push
inc
pop
loope
(bad)
or
sub
jae
loopne
pop
ret
xor
repnz
ficomp
mov
loop
cs
or
daa
sbb
add
out
movs
je
pushf
add
es
cmps
xor
inc
jbe
mov
adc
mov
xlat
inc
nop
outs
sub
sub
xchg
retf
cmp
dec
test
lahf
sbb
inc
and
push
xchg
repnz
out
or
leave
movaps
add
jbe
jge
out
lahf
pushf
into
sub
pushf
jle
daa
and
jmp
dec
push
neg
mov
sbb
cmps
jp
dec
sub
int
aas
jmp
mov
scas
xor
jge
cmp
idiv
cmps
mov
and
adc
mov
or
movs
inc
cs
jno
aas
jo
mov
gs
retf
push
inc
sbb
loop
mov
pop
mov
push
lods
in
sbb
pop
in
repz
xor
xlat
ror
cmp
nop
popf
sub
jmp
sub
dec
inc
fdivp
fs
xor
enter
sbb
loopne
pop
jmp
in
dec
inc
loop
jg
xor
ficomp
inc
bound
js
xchg
daa
arpl
sub
jmp
jb
retf
fwait
xchg
test
cmp
jb
and
mov
push
sbb
inc
sbb
ins
sub
call
stos
pop
imul
pop
xchg
cmp
jbe
out
cs
test
add
and
jb
out
enter
xor
mov
ins
push
inc
push
xor
xor
sti
mov
test
dec
or
and
jmp
jg
(bad)
or
xlat
mov
inc
pop
cs
out
cmp
push
jp
out
test
jns
pop
adc
test
and
jb
je
iret
jmp
(bad)
cs
pop
and
sub
iret
xor
test
out
lahf
mov
cmp
mov
clc
mov
add
jnp
in
dec
lds
jb
mov
adc
jge
dec
sub
add
xor
add
adc
(bad)
mov
xor
jae
and
xchg
or
mov
(bad)
push
mov
repnz
ins
and
stos
fnstsw
cs
mov
aaa
sub
adc
jne
movs
cs
fdivr
cs
loopne
test
test
cs
stos
cld
jb
pop
adc
das
outs
mov
aas
ror
push
repz
out
in
ficom
xor
ins
push
mov
mov
push
sahf
fisttp
je
sub
jp
daa
and
jno
and
xor
mov
fwait
mov
dec
cmp
in
jb
movs
push
scas
pop
repz
fidiv
lods
lahf
(bad)
out
aam
mov
cmp
pop
div
inc
repz
cs
jne
mov
icebp
movs
push
dec
ds
imul
mov
je
sub
into
in
and
pop
int
(bad)
pusha
cs
ret
jnp
stos
and
loopne
lods
sub
fidiv
imul
xor
scas
inc
pop
jmp
jb
dec
cmp
pop
mov
nop
ftst
mov
cs
jge
aad
xchg
ret
(bad)
cld
mov
push
add
sub
xor
and
push
fst
movd
cmc
out
out
jne
gs
call
push
mov
and
inc
mov
mov
mov
call
(bad)
adc
adc
je
inc
aas
out
cmp
adc
leave
cwde
push
(bad)
cmps
sbb
ins
mov
xchg
pop
sub
arpl
dec
scas
and
scas
imul
cmps
xor
add
add
dec
inc
scas
dec
xor
(bad)
lahf
pop
jg
cs
adc
inc
cmps
xchg
clc
dec
jbe
(bad)
mov
rcl
push
call
dec
push
mov
pop
daa
repnz
or
dec
jmp
xchg
cwde
outs
push
adc
daa
push
int
sub
rcr
cs
rcr
aaa
xor
cmp
pop
arpl
stc
lods
sub
movs
adc
sbb
pop
dec
or
mov
test
or
push
cs
cdq
shr
cli
icebp
xchg
aad
xchg
nop
cs
push
sbb
daa
jmp
ret
lock
or
add
mov
in
cs
outs
sub
jge
push
cs
cmp
jg
inc
add
js
push
lds
pusha
fisubr
daa
adc
in
stos
xlat
dec
mov
test
sub
pop
push
jns
dec
jne
xchg
in
and
and
(bad)
fsubr
test
sub
jns
lods
std
add
adc
das
daa
xor
(bad)
push
xor
jbe
rcl
push
repnz
and
push
std
dec
and
out
fsubr
and
mov
mov
xor
push
aam
mov
add
pop
fsubrp
mov
and
mov
inc
sbb
enter
adc
(bad)
jle
push
shl
push
leave
mov
xlat
das
pop
xor
ds
pop
inc
mov
ja
sub
jecxz
mov
inc
aas
push
nop
sub
pop
dec
sti
loopne
push
sub
clc
xchg
cmp
shl
lea
xor
mov
leave
xchg
or
fdiv
inc
or
enter
outs
aas
xlat
and
push
sub
addr16
xor
test
(bad)
scas
shl
lods
aaa
out
leave
cmp
jns
rol
xchg
adc
repnz
cmp
movs
xor
push
inc
leave
fidivr
mov
xor
xchg
cmp
xor
dec
jp
inc
cs
mov
push
ins
cs
jb
push
mov
sub
cdq
ja
in
jns
std
into
lods
push
cs
aam
mov
cs
call
cs
xchg
imul
movs
xor
loope
xchg
arpl
sub
enter
cmp
add
scas
mov
mov
xor
ror
stc
cmp
cmp
fldenv
push
in
aaa
push
mov
cs
pop
mov
lods
adc
add
sub
in
xchg
pop
outs
shr
scas
xor
cmp
leave
fild
das
sti
or
mov
sub
jo
jg
xor
inc
vpsllq
fiadd
mov
repz
mov
test
xchg
shl
sub
daa
push
and
not
xor
push
int3
ror
sub
shr
push
push
mov
es
jmp
push
das
fmul
popa
dec
mov
mov
xor
mov
sbb
(bad)
mov
xor
clc
or
push
mov
dec
aas
jb
xlat
push
scas
je
ret
and
aas
cmp
fdivr
or
xlat
in
movs
cmp
xchg
mov
mov
sahf
(bad)
jp
std
iret
(bad)
cs
retf
jb
pop
adc
xor
shl
and
jmp
fstp
cs
pop
jg
inc
or
imul
adc
es
sbb
mov
mov
mov
(bad)
cmp
cmp
pop
add
in
cs
pop
movs
in
movs
int
xchg
mov
loopne
pushf
pop
xchg
dec
lock
popf
aas
mov
leave
add
push
sar
or
add
(bad)
outs
push
xchg
sbb
pop
jne
popf
ret
adc
jns
inc
adc
add
adc
imul
jp
shl
test
lahf
jmp
in
mov
jp
cs
and
stc
sub
aam
xchg
sub
aam
test
mov
outs
and
lea
cmp
xchg
fisub
ins
(bad)
dec
mov
sub
cld
mov
aad
adc
repz
jg
imul
push
xchg
cs
(bad)
ret
scas
cs
ins
push
and
cs
jmp
je
mov
mul
outs
ins
out
jg
out
xor
shl
pop
loopne
dec
fisubr
jne
mov
dec
adc
jnp
xor
and
jo
(bad)
cs
fild
fnsave
inc
jbe
add
push
mov
cld
dec
loop
adc
cmp
or
enter
push
or
or
ds
sbb
pop
sbb
inc
aas
call
push
ins
gs
mov
imul
xchg
test
or
add
ja
movs
push
mov
xchg
sub
xchg
sti
(bad)
out
(bad)
stc
mov
loope
mov
in
add
jg
test
xchg
cs
cs
sbb
mov
stc
cmp
mov
sbb
sbb
jg
push
xor
xor
mov
(bad)
jmp
call
mov
sbb
jnp
xor
pop
sbb
or
inc
daa
ret
into
and
mov
adc
sbb
xchg
dec
mov
into
les
inc
pop
add
jne
call
ja
adc
std
sahf
fisub
cmp
das
fisub
cs
lds
js
idiv
les
sub
jae
cdq
movs
mov
mov
jl
jp
push
add
cwd
push
and
jo
mov
pop
ret
outs
(bad)
jp
jecxz
popf
cmp
push
jl
push
mov
cmp
mov
push
sub
loop
stc
(bad)
lods
stos
test
mov
xor
scas
(bad)
in
out
and
fs
mov
sub
aaa
jmp
in
retf
xchg
pop
jge
xlat
add
cmp
(bad)
dec
push
mov
pop
mov
test
xor
lds
jecxz
pop
push
jo
ds
inc
loope
push
push
cmp
xor
dec
and
int
mov
sbb
xchg
fwait
ror
push
cwde
popa
xchg
cld
pop
(bad)
(bad)
int
loop
repz
push
xchg
cmp
push
fs
leave
in
mov
fsub
jle
pop
sbb
pop
mov
pop
mov
mov
scas
xchg
and
ins
inc
mov
mov
scas
call
loopne
es
sbb
fs
mov
in
arpl
add
cmp
stos
mov
pushf
and
bound
inc
ins
cwde
aaa
aam
(bad)
cwde
dec
dec
leave
sub
xchg
in
mov
js
popf
sub
push
retf
daa
and
psubusw
sub
imul
push
outs
jo
ja
dec
stos
inc
(bad)
mov
mul
movs
cs
nop
or
leave
mov
cli
idiv
ret
xchg
cmps
cld
mov
pushf
(bad)
jne
inc
sub
mov
xchg
push
shl
shl
nop
arpl
and
es
inc
stos
xchg
sub
push
cmc
pop
scas
aam
out
and
std
retf
cdq
cs
or
or
addr16
test
xlat
xor
in
push
cs
fisubr
add
aaa
rol
ret
jo
xor
je
imul
sahf
test
jb
test
mov
adc
jmp
shr
dec
xchg
fcmovbe
lea
hlt
inc
and
pop
cli
pop
daa
mul
xor
adc
inc
lods
cs
mov
sub
push
bound
fcom
not
lods
sub
pop
ins
xor
dec
hlt
or
div
test
pop
push
inc
add
lock
(bad)
out
call
jmp
in
push
jge
jmp
dec
gs
mov
mov
adc
sub
aad
sbb
scas
fs
int
les
addr16
jg
aam
xor
mov
xor
adc
aam
pusha
pop
dec
push
gs
xchg
cwde
mov
cwde
jp
jl
jae
out
push
scas
push
das
mov
and
loopne
jmp
out
ret
pop
push
and
add
jg
cmp
sub
sub
fsub
mov
sub
addr16
cmp
movs
test
mov
add
loope
enter
push
outs
push
sti
in
outs
add
cs
and
fsub
bound
jecxz
into
(bad)
xlat
cmp
jbe
fcomp
mov
out
fild
cmp
cmp
cmp
sub
stos
xor
clc
jmp
sub
and
mov
mov
jmp
jg
cs
sbb
jecxz
push
cmp
out
pop
adc
outs
pop
adc
and
adc
jl
ror
in
add
push
pop
std
sbb
and
pop
aaa
mov
xor
mov
jne
inc
aaa
mov
dec
rol
mov
sbb
cs
xchg
cmp
sub
inc
add
push
bound
dec
pop
pop
enter
stos
cs
mov
cmp
xchg
scas
cs
fldl2e
(bad)
cdq
jnp
scas
daa
rcl
test
mov
xor
and
jno
xchg
jne
stc
add
adc
mov
loop
xchg
daa
pop
sbb
jmp
jmp
rcr
dec
sub
cmp
in
cs
pop
dec
inc
jno
daa
cs
in
scas
lock
(bad)
cs
shl
loopne
aaa
(bad)
fisubr
hlt
in
shl
fisttp
cs
mov
int
scas
xchg
pop
fnstcw
iret
mov
xor
fisub
ja
test
ret
lods
mov
ds
or
xor
jmp
inc
dec
cs
mov
imul
and
cmp
daa
cmp
and
mov
or
scas
sub
(bad)
mov
adc
mov
or
adc
cs
jbe
mov
scas
ffree
or
bnd
out
retf
adc
loop
loope
rcr
stc
mov
ror
rcr
(bad)
cmp
ja
(bad)
push
(bad)
xchg
mov
cmps
pop
pop
mov
adc
sub
sbb
repz
int
aas
mov
ret
mov
shl
cmp
inc
mov
ins
cmp
and
call
fdivr
(bad)
sub
or
sbb
xor
push
add
pop
jl
push
xchg
jmp
inc
push
xchg
retf
cli
lock
lods
jle
fldcw
(bad)
cmc
test
jbe
sub
cdq
lea
dec
stos
cld
and
rcr
je
(bad)
jp
mov
xchg
mov
test
adc
ret
sub
retf
ins
addr16
dec
mov
leave
lahf
inc
pop
push
(bad)
pop
cmp
sub
dec
push
scas
lock
jno
loopne
mov
scas
dec
inc
loop
fimul
fcom
inc
(bad)
mov
pop
push
push
out
jno
jmp
adc
aaa
sub
arpl
dec
ds
dec
out
or
dec
sahf
sbb
test
push
out
push
(bad)
jle
mov
in
cmp
sub
mov
fst
jnp
popf
cmp
mov
pop
adc
mov
mov
mov
push
aas
xchg
ds
test
leave
push
jae
dec
inc
iret
retf
sbb
sub
(bad)
pop
fidiv
aam
pop
push
(bad)
dec
inc
lods
mov
sbb
outs
mov
in
sbb
mov
popa
leave
lods
jne
aam
ins
push
je
cmp
sub
aas
neg
or
xor
ins
add
push
or
jle
cwde
pop
enter
xchg
lahf
dec
jae
pop
in
(bad)
push
adc
fadd
ins
es
xor
out
sbb
pop
xor
push
cmp
inc
(bad)
(bad)
and
add
retf
cwde
cmp
out
ja
jg
and
es
mov
fnsave
inc
int3
outs
jmp
mov
pop
adc
out
(bad)
or
adc
xor
outs
hlt
mov
leave
jg
std
(bad)
and
jp
mov
out
mov
fisub
cmp
das
pop
xchg
mov
mov
int
rcl
out
dec
push
jg
jp
mov
ins
jmp
(bad)
in
xor
pop
push
arpl
loope
or
repz
out
push
xlat
adc
pop
aad
movs
stos
add
stc
jmp
pop
cmps
sbb
xor
xchg
(bad)
pop
mov
jno
xchg
dec
xchg
outs
sub
or
push
mov
dec
shr
cli
aam
dec
adc
xlat
push
sub
aas
mov
xor
jmp
pop
and
into
leave
movs
jns
push
pop
aam
cli
jo
cmp
fsub
jg
mov
(bad)
mov
mov
fst
data16
xchg
inc
lock
into
ror
xor
sub
xchg
test
cmp
scas
pop
and
mov
inc
shl
gs
dec
mov
mov
inc
xchg
push
call
div
aas
or
pop
js
out
mov
fsub
data16
scas
inc
xlat
xor
int
mov
push
leave
add
inc
fcomip
dec
aas
cmp
cmc
xlat
jno
dec
cmps
int
imul
adc
xor
lea
add
fstp
push
(bad)
inc
in
test
or
mov
popa
cmp
jp
xlat
jle
sub
int3
sub
aaa
xor
rcr
xor
repnz
arpl
fxam
jle
out
or
mov
push
aas
lods
imul
inc
sub
pop
pop
add
int
mov
dec
cmp
push
push
gs
imul
sahf
pop
xor
mov
lock
fwait
iret
mov
fs
push
inc
leave
mov
outs
daa
repnz
dec
aas
lods
jbe
sti
shl
cwde
or
(bad)
push
fadd
pop
int3
sub
sti
(bad)
jbe
faddp
jb
fldenv
push
out
dec
push
stc
mov
retf
xchg
stos
fst
out
clc
jbe
hlt
rcl
or
sub
les
add
sahf
pop
pusha
clc
mov
jecxz
sar
inc
jnp
test
xchg
dec
loopne
fstp
mov
mov
je
sbb
cdq
jb
and
mov
push
inc
or
fbstp
pop
add
cmp
and
pop
add
dec
(bad)
push
push
or
xchg
dec
xor
int3
jnp
cli
lahf
xor
les
push
(bad)
adc
mov
jbe
add
adc
xor
and
mov
scas
push
arpl
(bad)
sahf
scas
inc
hlt
aaa
lods
xchg
mov
repz
call
and
push
out
xor
in
or
adc
jno
scas
dec
adc
ror
inc
scas
jnp
xor
lods
leave
dec
jbe
cmp
hlt
mov
test
xchg
jecxz
jno
or
cmp
pop
aad
les
jle
cmp
push
in
in
push
enter
push
xchg
in
outs
lea
int
push
xchg
sti
mov
mov
ficomp
retf
rcl
leave
out
mov
js
inc
sar
push
cmp
push
call
add
inc
inc
cmps
in
cmps
shl
test
jmp
cs
js
fdivr
test
clc
dec
push
sub
(bad)
cdq
mov
out
fld
dec
xchg
and
and
(bad)
into
mov
cmp
sub
mov
sar
rcl
fwait
sub
push
mov
jno
mov
dec
imul
imul
jno
ja
ds
out
fisub
lahf
sbb
repnz
into
ins
adc
pop
movs
push
xchg
mov
(bad)
je
sahf
mov
daa
xor
jl
in
jno
push
jp
mov
call
mov
lahf
test
cmps
stos
(bad)
fiadd
mov
fstp
sub
mov
das
cmp
imul
imul
fs
shl
pop
(bad)
or
cmp
and
mov
int3
mov
jle
into
pusha
aam
movs
(bad)
out
xchg
(bad)
jmp
pop
mov
jl
es
les
mov
push
(bad)
out
add
(bad)
adc
adc
fidivr
leave
fcomp
cmc
mov
addr16
pop
mov
popf
mov
leave
clc
adc
outs
inc
cmc
loop
push
(bad)
jmp
stos
xor
(bad)
cmp
pop
icebp
add
dec
dec
in
and
sub
dec
mov
mov
push
mov
jnp
fidiv
and
mov
stc
push
nop
out
adc
dec
cmp
dec
mov
adc
pop
push
pop
sub
clc
int
ja
shl
outs
mov
call
es
cmps
cli
or
xor
in
adc
ja
add
mov
inc
mov
dec
repz
cmps
add
fxch
mov
ds
pop
xlat
push
and
mov
fisttp
mov
out
xor
pop
int
mov
ror
out
and
sub
mov
sub
xchg
cmps
xor
gs
jmp
int
movs
retf
adc
into
(bad)
mov
cli
call
push
mov
movs
push
popa
jl
mov
in
lahf
out
out
imul
aas
sbb
cs
cmp
dec
push
and
sub
xchg
push
xchg
or
ds
test
call
and
add
adc
adc
cs
pusha
or
mov
mov
jno
sbb
scas
jle
adc
or
sbb
int3
xor
mov
add
inc
(bad)
fstp
ficomp
mov
mov
sti
xor
mov
aas
push
mov
into
cld
add
push
cs
push
jb
clc
enter
scas
out
xchg
push
movs
pop
inc
out
cmps
sbb
jp
cmp
pop
daa
call
mov
fld
ss
xor
cmp
add
(bad)
xor
push
jb
test
cmp
xchg
fcmovnu
sahf
push
cmp
push
lods
or
sub
push
jp
xchg
xor
sub
sbb
cs
mov
repnz
popf
xchg
cs
lods
ins
fcomip
retf
pop
(bad)
pop
ret
push
add
mov
das
test
push
push
aam
or
ror
cs
movs
sti
cmp
outs
repnz
or
stos
int3
leave
xor
nop
movs
loop
jo
adc
gs
sub
jl
cmc
mov
cs
sbb
pop
cs
mov
and
xchg
push
js
ret
xlat
rcr
scas
mov
lds
mov
sub
adc
add
ins
pop
sbb
arpl
leave
add
fisttp
ja
fcmovu
push
(bad)
mov
xor
jle
mov
cmp
cmp
out
push
enter
hlt
shl
sbb
jecxz
and
outs
fsubr
shr
or
pop
jp
dec
push
and
xor
pop
sbb
dec
outs
dec
sar
add
movs
adc
sub
sub
xchg
jl
push
jnp
fidiv
cld
push
fmul
outs
mov
jo
sbb
or
sub
call
retf
(bad)
(bad)
jg
lock
ins
lods
leave
push
push
sub
fadd
leave
cmp
jne
sub
test
shr
outs
out
adc
lods
lock
adc
add
and
push
(bad)
mov
mov
iret
icebp
in
dec
dec
lea
mov
popa
lods
into
mov
mov
mov
stos
lods
and
cs
fild
in
les
adc
jbe
xchg
(bad)
out
mov
mov
shl
dec
fsubr
pop
sub
mov
and
push
pop
cmp
(bad)
mov
sub
stos
sbb
(bad)
call
sbb
jmp
jp
pop
xchg
nop
xor
addr16
inc
mov
sub
push
hlt
gs
arpl
lods
cmp
pusha
jecxz
sbb
pop
xchg
mov
cs
rol
retf
test
add
sar
xor
pop
ins
scas
cs
in
cli
shl
mov
pop
(bad)
shr
sub
fwait
jno
aaa
cli
addr16
or
mov
sub
(bad)
xor
in
scas
mov
adc
dec
pushf
imul
mov
mov
adc
ds
push
cs
cmc
jmp
jb
add
jbe
xlat
and
popa
adc
inc
cdq
mov
xchg
stc
stos
push
mov
mov
xor
pusha
mov
test
inc
jge
adc
xchg
mov
int3
fadd
lods
pop
xor
mov
stc
into
stos
jecxz
mov
mov
mov
mul
cs
push
add
mov
push
movs
in
and
adc
cs
pop
into
sub
xor
adc
aad
mov
cwde
mov
xor
mov
mov
pop
and
inc
(bad)
dec
ficom
cmps
and
mov
scas
xchg
add
fsub
pushf
cmp
scas
or
lods
cs
out
xor
mov
inc
inc
loope
xchg
and
mov
cmps
cmps
add
push
adc
sti
cs
cli
jne
pop
dec
jmp
mov
inc
and
pop
dec
sbb
(bad)
(bad)
lea
xor
and
fst
xor
ret
pusha
or
movs
xchg
sub
je
sahf
ds
or
push
jns
scas
dec
mov
ins
sbb
dec
or
lahf
jmp
test
fs
sub
jne
mov
in
shl
sbb
fnstsw
out
push
cs
movs
iret
shr
pusha
add
mov
sub
jne
ficom
cs
sahf
push
std
in
movs
mov
sub
sahf
sub
push
add
pop
sbb
dec
cdq
xor
dec
push
shl
retf
jo
fisub
ss
outs
es
or
icebp
sbb
push
sub
int3
into
mov
cs
je
leave
test
shr
cs
lahf
mov
fisttp
retf
mov
cmp
lds
and
sbb
popa
push
mov
lock
scas
jae
sub
repnz
and
xchg
rol
scas
inc
retf
xchg
cmp
cs
mov
(bad)
out
fdivr
cs
push
adc
sub
repz
cs
and
jecxz
clc
cmp
add
lds
xor
lock
inc
enter
nop
fldcw
jp
jle
(bad)
fidivr
mov
inc
push
mul
out
(bad)
shl
stos
fild
xlat
pop
mov
dec
cs
fwait
cmc
mov
pushf
repz
lds
fcmovnbe
xor
add
add
mov
test
mov
and
cmp
gs
jp
ret
mov
jmp
lods
sbb
dec
pop
push
cs
or
(bad)
cmp
mov
int
push
jno
imul
mov
js
add
adc
mov
and
movs
fidivr
or
loopne
dec
adc
loope
xor
mov
mov
pop
sub
adc
scas
int3
out
ficom
jb
daa
jno
stc
rcl
cs
imul
jae
pop
call
int3
(bad)
in
fisub
cmp
cwde
outs
enter
fs
push
aad
sar
adc
subps
or
shr
mov
cwde
and
add
sbb
mov
cs
add
(bad)
cs
xchg
jmp
arpl
and
lods
push
adc
lea
loopne
cs
lock
mov
push
std
dec
pusha
inc
inc
fsubr
or
add
js
ins
jbe
out
scas
jmp
push
frstor
outs
mov
mov
mov
movs
xchg
pop
jecxz
sub
and
adc
lods
test
int3
aam
ja
jg
ret
je
push
in
cmp
xchg
aam
out
les
dec
(bad)
int3
iret
or
sub
outs
icebp
cmp
cs
mov
push
stos
hlt
cs
retf
pop
xchg
xchg
mov
and
shr
or
cmp
dec
leave
adc
push
pop
ins
cmp
bound
jnp
jmp
popf
aas
cs
push
sub
fs
xchg
cs
repnz
div
lock
inc
fadd
sub
adc
js
inc
jg
daa
inc
xchg
fst
addr16
mov
jl
push
mov
(bad)
cmovge
adc
sbb
addr16
mov
dec
retf
stos
add
out
movs
out
fnsave
cs
icebp
leave
sub
mov
xchg
fcmovb
adc
sbb
scas
mov
popf
dec
xchg
cmp
ja
xor
sahf
mov
ins
into
ret
retf
js
or
add
stos
push
push
inc
(bad)
mov
adc
inc
mov
push
add
dec
mov
jno
add
xchg
lock
les
push
sub
xchg
cs
dec
pop
je
dec
test
adc
fmulp
enter
or
cmp
pop
xor
jle
and
push
mov
mov
cmp
add
fmul
jge
sub
sbb
push
mov
imul
mov
dec
mov
mov
cmps
out
xchg
pop
out
pop
jno
push
in
sar
shl
push
pop
cdq
pop
icebp
cwde
mov
adc
sbb
aam
inc
stos
adc
(bad)
dec
mov
adc
jle
arpl
jmp
rol
mov
cmps
leave
sbb
stos
icebp
xor
pop
mov
sub
and
add
retf
pushf
mov
sub
mov
mov
inc
push
and
jo
dec
ds
cmp
adc
cli
xor
ss
cmps
mov
xor
in
fst
cmp
int
cmc
jb
jmp
aas
movs
or
xlat
cmc
fadd
fild
std
or
icebp
int3
arpl
out
std
clc
das
cmps
enter
cwde
daa
jmp
push
xchg
xlat
push
xor
aas
fidiv
cmc
jg
cmp
jae
pop
std
mov
pusha
jne
mov
push
ins
cmp
mov
mov
and
scas
int3
inc
push
mov
inc
fnstenv
xor
mov
scas
add
xor
out
hlt
ins
aaa
iret
or
sub
xor
lock
dec
mov
cmps
out
mov
and
lods
add
add
mov
addr16
lods
and
push
inc
cmps
inc
std
out
jns
cmp
mov
pop
or
mov
jne
pop
lea
xchg
xchg
pusha
mov
xor
std
in
(bad)
les
sti
mov
push
outs
xor
pop
push
inc
mov
sub
add
xor
push
or
jp
fidiv
push
xchg
cld
and
test
and
fdiv
and
xor
(bad)
or
(bad)
shr
cmp
ds
loopne
aam
bound
ins
mov
xor
jb
aam
test
call
ins
push
pop
dec
fs
iret
cli
in
cmp
je
out
ins
fs
ds
mov
cwde
int
xor
inc
es
cmp
and
xlat
and
je
ins
mov
and
out
lods
sub
xlat
sti
sub
xchg
lods
scas
data16
sahf
xor
rcl
add
xchg
das
dec
jle
call
xor
push
mov
test
push
add
out
mov
mov
inc
push
daa
popa
push
ins
jns
stos
dec
sbb
ja
sub
and
inc
pop
dec
dec
and
cs
ss
push
xor
push
xor
lods
scas
cs
pop
fs
add
and
lahf
js
out
and
add
mov
mov
sub
cs
jno
add
xor
xlat
fidivr
sti
(bad)
push
test
xchg
mov
jg
xchg
mov
push
ror
adc
mov
sub
daa
and
bound
push
pop
(bad)
sub
sti
in
nop
retf
int
mov
ret
not
jb
add
and
stos
mov
outs
xor
cs
popf
jo
sbb
cs
pop
sub
add
jmp
pop
scas
js
call
or
mov
fmul
(bad)
cmp
movs
neg
ins
shr
mov
xlat
sahf
pop
adc
or
fild
ins
(bad)
fincstp
mov
(bad)
pop
dec
out
(bad)
js
mov
cs
sub
scas
fisubr
jmp
jge
cmp
scas
inc
clc
ins
dec
retf
jmp
(bad)
xchg
cwde
lea
imul
mov
mov
add
rol
jbe
sbb
test
cwde
imul
fistp
mov
int3
cs
loop
enter
jle
xlat
popf
imul
and
sahf
mov
pusha
int3
sub
(bad)
retf
fwait
xor
sub
pop
repz
add
pop
cmps
push
xchg
out
jge
mov
cs
xor
mov
mul
sbb
push
cmps
inc
test
scas
pop
aas
cmps
shl
into
pop
in
mov
popf
ins
sar
out
aaa
in
and
and
pop
rcr
retf
mov
daa
jl
jnp
clc
sbb
xor
sbb
xchg
cs
push
inc
mov
sbb
cmp
push
inc
dec
cs
xor
dec
popf
sahf
xchg
add
fldcw
movs
rol
jns
cs
jmp
scas
cs
cld
scas
(bad)
cdq
add
or
dec
dec
ret
xchg
xor
mov
push
and
int
add
xchg
pop
mov
mov
cmps
or
loope
in
js
popf
test
push
mov
int3
sub
jo
and
cs
test
push
dec
push
pop
ds
push
dec
push
mov
dec
dec
add
push
push
aaa
fnstcw
outs
repnz
cmps
sub
es
add
or
and
(bad)
loope
daa
aam
mov
ins
jne
add
jl
mov
daa
mov
jae
sub
out
cmp
mov
or
cmp
dec
aam
arpl
sub
and
cmp
mov
cmp
outs
push
pop
fs
push
inc
out
icebp
or
dec
pop
pop
lahf
ret
aam
pop
mov
sub
jns
mov
dec
call
imul
dec
or
and
rol
adc
sbb
sub
xchg
aam
jo
arpl
in
std
lods
imul
pop
mov
and
enter
pop
movs
pop
scas
ret
(bad)
les
xchg
call
inc
fidiv
fs
daa
lock
fisttp
movs
ins
mov
cmp
mov
fwait
adc
jae
push
jbe
and
jecxz
mov
jb
or
add
mov
lods
push
mov
popa
(bad)
lahf
xchg
xchg
push
mov
push
lea
icebp
mov
jl
fcom
mov
sub
lea
sahf
push
mov
ret
pop
std
cs
sub
outs
xchg
iret
mov
wbinvd
push
xchg
add
sub
fsubr
aaa
aad
into
fs
test
fisttp
cs
adc
push
pop
bound
sub
push
std
retf
cs
mov
jmp
mov
xor
cs
xlat
sbb
add
xor
sub
inc
jmp
xchg
ret
sahf
pop
or
sbb
fwait
aam
call
pop
sahf
in
mov
sbb
gs
xor
mov
jmp
je
sub
lea
fcom
hlt
adc
(bad)
fistp
pushf
loopne
rol
retf
ret
(bad)
test
pop
sbb
add
or
out
in
nop
cs
dec
sbb
sbb
xchg
mov
push
dec
sub
mov
adc
and
into
test
gs
sub
fidivr
sub
mov
je
cs
jle
push
xchg
and
mov
pop
call
pop
imul
add
xchg
fisub
ds
push
lock
nop
mov
sub
xchg
outs
fmul
xor
cmps
cmp
xor
xor
inc
leave
mov
rcr
repz
mov
icebp
and
push
shr
sub
ffree
mov
cmps
xor
outs
das
sub
(bad)
mov
mov
pop
mov
add
cmp
sub
enter
inc
out
xlat
sub
or
icebp
jno
mov
ja
push
cmp
js
xchg
cs
dec
test
adc
mov
test
push
out
mov
fimul
fisub
cs
popf
cdq
mov
pop
jmp
shr
ret
dec
bound
gs
shl
pop
inc
cmp
cli
cs
cmp
cmp
jns
pop
std
sti
lea
jmp
cs
xchg
xor
mov
(bad)
pusha
fcmovu
sub
mov
rol
mov
mov
xor
cs
dec
inc
cmps
mov
(bad)
mov
cli
push
jnp
xchg
fs
cs
int3
ret
mov
retf
push
fsubp
ror
aam
clc
pushf
or
fs
lahf
xchg
cs
dec
sbb
std
mov
out
pop
test
in
cld
mov
cs
jp
(bad)
xor
scas
cs
fs
and
fdiv
(bad)
(bad)
in
clc
lock
push
out
mov
mov
dec
push
xor
push
jg
daa
pusha
cs
pusha
retf
(bad)
mov
cmp
daa
xchg
cmp
lock
ror
cs
aas
je
cs
add
jno
shl
pop
add
or
xchg
cmps
inc
(bad)
neg
add
inc
or
mov
scas
pop
idiv
aad
dec
call
pop
sbb
scas
out
loopne
cmps
icebp
xchg
sub
das
scas
mov
in
ins
fstp
adc
enter
xor
dec
xchg
call
cmp
push
cs
cmps
adc
aaa
adc
sbb
add
(bad)
sbb
aaa
je
jae
into
cmp
mov
xor
in
loope
sbb
jno
aad
add
sub
retf
adc
inc
scas
aad
sbb
inc
stos
into
dec
test
push
and
xor
sub
fs
dec
retf
inc
pop
xchg
rcl
sub
adc
lock
fucomp
push
in
pop
sub
and
jae
dec
adc
pop
cmp
iret
fldenv
and
dec
icebp
xlat
xor
in
aas
jmp
(bad)
xchg
sti
repnz
(bad)
ss
and
iret
sub
jmp
sub
rol
stos
lods
mov
aas
cmp
mov
inc
in
mov
add
jmp
xchg
inc
xor
or
lahf
cs
(bad)
or
lods
sub
cs
adc
movs
dec
mov
and
pop
add
xchg
cdq
xchg
repnz
inc
fs
adc
pop
jne
sahf
sub
fxch
sub
jae
cmp
and
mov
jo
into
lock
xchg
inc
mov
dec
adc
sub
dec
dec
cs
xchg
mov
xchg
div
cmp
add
icebp
aad
mov
mov
cmps
xlat
xchg
xor
sbb
fwait
inc
xor
xchg
or
push
mov
stos
pop
adc
(bad)
stc
mov
cmp
das
add
test
scas
mov
sbb
int3
cmps
xor
or
dec
ret
sub
sub
mov
push
jb
add
iret
xchg
sbb
adc
mov
sub
or
aas
push
(bad)
pop
ficom
jb
repnz
jo
add
mov
imul
test
div
sbb
lods
scas
adc
mov
loop
pop
cs
retf
sbb
cs
int3
iret
dec
mov
aam
daa
cmc
into
(bad)
add
mov
xchg
jmp
gs
clc
bswap
(bad)
cs
aas
pop
push
xor
and
daa
push
aas
inc
pop
test
sub
pop
push
imul
cmps
cs
out
push
loope
cmp
sub
add
sbb
jns
popf
inc
cdq
and
int3
rol
push
xor
in
mov
pop
cmp
arpl
dec
push
push
fimul
cmc
xchg
fnsave
mov
dec
arpl
jae
cmp
retf
rep
cs
sub
push
arpl
sub
leave
in
adc
push
jo
xchg
dec
xchg
push
xor
xchg
mov
scas
arpl
std
cs
fst
mov
out
sbb
loop
jmp
or
adc
xchg
les
lea
sub
mov
push
popa
scas
mov
sub
cs
pop
mov
cs
loop
lea
xchg
fcmove
mov
and
pop
pop
mov
(bad)
sub
mov
jle
add
test
lods
push
int
xchg
push
cmp
or
xor
fdecstp
fisub
sti
out
add
sbb
adc
sub
scas
out
inc
fdiv
jbe
sub
icebp
push
mov
loopne
adc
addr16
sub
stos
xchg
fisubr
arpl
(bad)
lahf
cmp
mov
sar
cs
int3
outs
imul
pusha
or
xchg
out
mov
mov
outs
call
jg
cs
idiv
out
test
sbb
jl
mov
add
cmc
rcr
cmp
xchg
ja
fnsave
add
scas
sbb
out
dec
sbb
(bad)
pop
adc
out
pop
pop
adc
fs
mov
not
retf
xor
mov
adc
xor
add
jle
jb
mov
(bad)
mov
arpl
retf
lods
cmc
loopne
fs
ficom
cs
dec
sar
dec
aas
loop
xor
sub
inc
je
inc
clc
ja
retf
ficomp
mov
push
(bad)
mov
scas
push
sahf
jae
xchg
cmp
frstor
adc
sbb
dec
xchg
in
fldenv
cmp
scas
xlat
loopne
xor
sbb
sub
mov
push
adc
jne
or
xor
retf
out
dec
or
les
psubsw
push
push
or
scas
pop
and
pop
jne
cs
adc
cmp
outs
jl
cs
push
push
call
data16
pop
push
dec
inc
sub
dec
call
xchg
cs
stos
mov
aam
jl
fs
stos
inc
xlat
fst
push
retf
std
or
call
cmps
push
push
out
bound
sub
icebp
mov
push
mov
pop
and
jnp
std
repnz
shr
scas
mov
sar
cs
sbb
jl
jb
xor
jp
mov
retf
mov
or
cmp
dec
push
or
add
and
jo
popa
push
xchg
inc
lods
cld
in
xor
cwde
in
dec
jne
je
mov
(bad)
std
add
(bad)
pop
pop
fsubr
les
ror
(bad)
stos
xchg
sbb
sbb
lods
(bad)
jbe
and
jns
xchg
(bad)
sub
xchg
push
ins
cmp
inc
jp
sub
out
mov
sti
pop
add
into
mov
(bad)
and
leave
jmp
mov
mov
loopne
and
cmp
vpsrld
sub
push
es
fcomip
out
loope
(bad)
dec
sub
out
ins
dec
das
sub
cmc
xor
push
push
sub
es
push
cmp
push
(bad)
adc
inc
movs
pushf
std
mov
inc
ja
xlat
jbe
ins
movs
sbb
xlat
rcl
pop
pop
mov
push
adc
sub
mov
sub
sub
pop
retf
(bad)
push
xchg
pop
fstp
lods
(bad)
push
sub
fcomp
mov
ja
inc
push
jae
loop
xchg
ss
cmps
and
test
and
(bad)
je
adc
dec
in
out
or
shr
push
and
dec
push
push
(bad)
add
ret
retf
js
jnp
(bad)
push
mov
inc
jmp
jmp
fdivr
or
shl
div
mov
xlat
popf
cli
fdiv
sahf
es
icebp
xchg
cmp
repz
push
shl
sub
jle
add
jp
int
ror
xor
aas
xchg
out
arpl
jp
js
(bad)
sti
sbb
inc
pop
jno
or
pop
mov
(bad)
and
cmp
add
adc
inc
dec
cmp
mov
cwde
mov
aas
stos
and
pop
mov
iret
cmp
idiv
ror
cmp
add
test
shl
popf
xchg
add
jno
in
mov
add
xor
leave
in
int3
adc
add
loopne
mov
or
cwde
into
xor
cmc
sub
mov
mov
push
inc
adc
nop
int3
out
and
bound
pusha
pop
fsubr
xchg
out
pop
mov
mov
aad
cmps
lods
sar
push
mov
shr
(bad)
sub
sbb
inc
inc
jge
enter
cwde
mov
mov
push
(bad)
xor
nop
inc
sub
push
xor
fmul
xchg
mov
dec
loop
jmp
leave
pop
inc
xor
push
out
(bad)
test
mov
nop
jmp
mov
enter
aaa
mov
mov
sub
xlat
sbb
mov
cmc
outs
pop
add
jb
cs
xchg
ins
push
inc
cmp
jle
push
xchg
stc
out
add
lahf
push
out
punpcklwd
gs
push
fwait
arpl
xor
push
and
mov
xor
jo
inc
xor
(bad)
sub
push
xor
les
push
out
dec
mov
adc
pop
dec
push
clts
adc
movs
push
adc
movs
push
and
fistp
inc
cs
imul
or
xor
fcomp
bound
ror
das
sbb
fwait
jp
and
cld
pop
and
data16
scas
or
js
xchg
xlat
ror
push
xchg
and
imul
xchg
sbb
fisubr
test
mov
cmp
dec
or
(bad)
sar
sbb
cs
dec
push
xor
push
bound
push
ffreep
add
in
sub
sbb
stos
jnp
sbb
mov
dec
aad
xchg
mov
xlat
adc
and
jge
lock
jl
cdq
es
jmp
cmps
ret
sub
enter
fistp
mov
xlat
xchg
leave
inc
mov
es
xor
and
push
outs
ins
js
sbb
cmp
lods
mov
adc
inc
sbb
cmps
scas
leave
dec
fs
dec
adc
and
(bad)
adc
dec
inc
adc
(bad)
mov
jge
(bad)
push
add
cli
inc
add
sub
push
call
lods
xor
addr16
outs
lods
ret
pop
fst
jmp
outs
jnp
das
push
aaa
mov
lods
arpl
xchg
xchg
jno
sbb
push
adc
aas
mov
stos
or
mov
cmp
and
jle
sub
fsub
test
mov
in
into
aad
rcl
cwde
jo
cmc
pop
inc
or
stos
jle
or
cmp
outs
outs
pop
push
lods
jmp
fs
mov
(bad)
sub
pop
cwde
xlat
inc
frstor
stc
xchg
sahf
and
pop
jnp
mov
and
and
(bad)
mov
aaa
sub
pop
cld
fxch
cmp
shl
dec
xor
jbe
adc
outs
mov
cmp
test
add
std
sub
mov
test
sahf
mov
rol
out
sub
shl
ja
dec
repnz
mov
movs
ficom
sub
xlat
push
inc
xchg
lock
sar
cli
pop
aaa
push
xor
inc
xchg
pop
sbb
push
daa
aad
sub
fs
mov
xor
sbb
mov
ror
cld
cmp
leave
test
push
nop
mov
lea
cld
dec
sbb
add
mov
(bad)
mov
fidivr
das
popa
fistp
(bad)
jne
xchg
mov
jae
push
lahf
(bad)
out
cld
mov
in
mov
cmp
sbb
sbb
mov
iret
jle
loopne
sub
cmp
stos
test
mov
cmp
aaa
imul
stc
cmp
imul
inc
lock
retf
dec
fsubrp
cmps
fldcw
xlat
(bad)
push
aad
icebp
(bad)
(bad)
pop
push
icebp
ins
jb
fwait
test
addr16
xchg
shl
adc
xor
adc
or
pop
push
pop
xlat
icebp
dec
mov
(bad)
jae
arpl
push
cmc
(bad)
inc
out
dec
dec
int3
sub
jnp
push
add
or
sahf
in
and
leave
push
das
mov
inc
fldlg2
cdq
out
dec
mov
sbb
xor
ss
push
out
loope
sub
sbb
jmp
cmp
pop
mov
pop
mov
adc
sti
push
adc
lds
jecxz
sub
lods
add
push
mov
fistp
data16
retf
xor
jle
mov
inc
ss
mov
lea
adc
jmp
in
call
xor
cmp
stc
sub
and
test
cmp
addr16
sahf
ins
leave
sub
aas
div
mov
dec
inc
push
(bad)
and
cwde
jbe
js
mov
in
push
jnp
mov
push
or
add
aas
sbb
into
mov
cs
mov
or
or
aaa
jnp
jne
cs
es
and
push
mov
pop
mov
out
xchg
lods
mov
or
jae
jo
js
fld
in
cdq
dec
push
out
push
xor
popf
or
lahf
sbb
imul
dec
xor
loop
iret
jle
retf
cs
scas
and
(bad)
inc
dec
cs
inc
mov
sbb
mov
int
or
retf
scas
mov
jecxz
xor
sbb
scas
push
leave
aad
out
movs
or
test
and
shl
nop
push
jmp
dec
add
cs
repz
fwait
mov
push
jne
push
pop
push
lock
sahf
and
out
les
cdq
bound
hlt
icebp
cs
cmp
xchg
mov
(bad)
aad
pop
push
cs
push
movs
fldenv
dec
outs
sbb
push
sub
and
or
add
or
cmp
scas
mov
jl
push
mov
pop
add
sbb
cs
ss
sbb
adc
cs
fsub
cmp
jl
inc
dec
out
shr
jae
and
cmp
jbe
inc
adc
sub
pop
pop
jmp
popa
mov
(bad)
xor
xor
fsubrp
add
mov
int3
outs
dec
mov
jg
fs
cs
outs
push
add
mov
pop
inc
pop
dec
sahf
cs
jl
in
xor
push
loopne
sti
mov
cli
mov
cs
bound
cwde
push
sahf
xor
add
in
cs
cmps
icebp
xor
push
stos
dec
sbb
mov
popf
test
pop
jmp
(bad)
or
ret
mov
outs
pop
dec
es
aas
push
cmps
sti
retf
outs
xchg
sbb
mov
jecxz
test
jo
mov
mov
sbb
pop
push
jl
and
pop
inc
stos
stos
sbb
mov
and
ror
stos
mov
dec
xor
and
push
mov
sub
and
cmps
loop
cdq
cs
lods
and
in
jge
fidiv
(bad)
shl
cs
adc
test
sub
xchg
adc
jge
fidivr
and
adc
inc
int3
sub
xchg
cld
mov
pop
shr
mov
push
fwait
test
sbb
(bad)
aam
aaa
addr16
xlat
mov
aas
lock
in
sbb
mov
mov
cmps
daa
mov
into
xlat
dec
or
inc
xchg
or
xchg
jnp
cs
iret
popa
scas
and
jmp
mov
mov
and
mov
scas
or
add
dec
adc
gs
movs
add
or
pop
mov
in
sbb
fwait
scas
(bad)
out
cmp
xor
ret
xchg
jbe
movs
cs
jno
repnz
jo
cs
push
pop
adc
cs
je
jbe
in
jle
sub
hlt
ins
sbb
scas
jnp
pop
aas
pop
lods
jo
mov
cwde
or
aas
pop
xchg
xchg
into
jg
cmp
mov
lods
aas
loope
jnp
cs
dec
loopne
inc
cs
pop
xchg
fsub
fisub
shr
imul
cli
cs
pop
stc
and
shl
cs
jecxz
test
cs
out
push
loope
in
repnz
leave
mov
and
sub
or
push
mov
adc
xchg
int3
cli
movs
or
stc
les
cmp
push
xchg
cs
cmc
adc
xchg
test
inc
cmp
mov
lods
ret
jb
mov
out
imul
adc
mov
ror
es
push
mov
add
xchg
and
dec
push
pop
sbb
push
push
neg
sbb
xor
pop
push
cs
sub
std
cs
call
cs
xchg
and
jo
sbb
dec
ret
sar
cmps
pop
ss
mov
xlat
or
cwde
ins
mov
pop
sbb
sahf
xchg
sub
leave
add
inc
daa
add
add
mov
adc
pushf
cmp
xchg
add
jo
rol
aam
shl
out
(bad)
aaa
int3
(bad)
les
jmp
fsubrp
or
mov
outs
fstp
lea
and
cmp
xor
jmp
fidivr
sbb
xchg
dec
pop
lods
fs
aaa
inc
pop
xchg
aam
mov
and
(bad)
or
popa
faddp
icebp
pop
sti
sbb
sub
ret
das
push
in
push
dec
nop
fcom
push
xchg
push
loope
lahf
mov
jecxz
xor
in
sbb
jle
cmps
adc
pop
inc
and
pop
cdq
loope
xor
ds
shr
std
pop
add
xchg
adc
pusha
cmps
xchg
idiv
out
out
leave
(bad)
jge
out
cld
push
push
out
aas
xchg
mov
lods
sub
push
es
sub
add
fld
sub
leave
dec
cli
push
cli
fcom
pop
je
aaa
ds
rcr
fst
imul
xor
dec
inc
stc
dec
sub
add
cmp
cs
icebp
in
xor
cs
sti
lock
inc
push
repnz
sub
std
push
stos
(bad)
(bad)
scas
retf
pop
and
push
mov
xchg
imul
xor
test
outs
(bad)
cmp
or
test
gs
outs
lahf
(bad)
aad
jb
bound
mov
xchg
xabort
out
das
push
inc
call
sbb
sbb
shr
add
sub
add
out
mov
into
(bad)
mov
adc
pop
mov
adc
and
cmp
cmp
xor
xor
dec
push
outs
cs
mov
jg
push
fsubr
adc
sti
mov
stos
mov
sbb
push
das
aam
(bad)
dec
ins
dec
cs
call
pop
sub
int3
inc
dec
dec
ret
call
arpl
out
sbb
loop
sub
cvttps2pi
movs
leave
stos
cs
add
div
mov
add
push
xor
dec
xor
mov
outs
add
lock
outs
xchg
loopne
cli
scas
in
(bad)
fldl2t
inc
(bad)
rol
pop
idiv
movs
aas
pusha
adc
test
into
jp
cs
or
jne
pusha
inc
adc
mov
and
mov
and
cmp
bswap
icebp
jo
lods
cs
rol
and
outs
xlat
xor
popa
out
loop
daa
cs
jnp
call
iret
pop
mov
(bad)
xchg
add
xor
mov
cli
cmp
push
add
and
xchg
ficomp
pop
mov
fnstenv
cmp
sbb
movs
adc
push
repnz
push
adc
(bad)
idiv
mov
adc
cs
scas
mov
pop
repz
or
and
ror
mov
fadd
xor
sbb
jge
sahf
fsubr
lahf
scas
std
mov
xor
mov
mov
sub
xor
mov
adc
jno
mov
out
pop
jae
fcomp
mov
cmp
stos
iret
lds
in
(bad)
mov
fild
arpl
gs
(bad)
cs
je
mov
push
add
sbb
sbb
xor
cmp
push
cmp
adc
cmp
(bad)
loop
sub
sub
fst
mov
jecxz
cmp
call
or
dec
jle
repnz
sub
cmc
dec
mov
rcl
mov
sahf
pop
je
xor
jl
add
adc
sbb
xor
ret
jmp
sbb
aad
jge
mov
shr
xchg
xchg
adc
pop
jp
jmp
dec
sar
call
iret
inc
adc
xchg
cmc
shl
or
retf
mov
lock
loope
or
(bad)
aas
xchg
mov
jmp
pop
lea
mov
xor
sub
push
ror
xchg
addr16
cs
mov
sub
mov
into
xor
mov
aam
mov
and
sub
retf
int
out
call
pop
repz
and
ss
int3
(bad)
jbe
sbb
(bad)
loop
movs
out
dec
inc
idiv
retf
pop
push
outs
outs
ja
sbb
pop
cs
test
mov
inc
ss
pop
push
pop
jnp
pop
dec
pop
mov
mov
xor
inc
or
enter
jno
and
sbb
pop
pop
pop
inc
mov
mov
cs
pop
pop
fdiv
dec
jp
ret
push
ds
mov
and
mov
cs
jbe
push
aas
adc
lea
or
repnz
push
mov
mov
sbb
cmps
aam
mov
cmp
cs
push
jmp
mov
or
mov
(bad)
adc
rcr
xchg
sbb
lods
cld
mov
stos
or
adc
test
sub
repz
push
inc
mov
mov
cs
pusha
arpl
jne
xor
and
xchg
aad
xchg
sahf
mov
addr16
sbb
outs
mul
loopne
js
dec
jns
and
call
stos
out
loope
rcr
icebp
cs
out
mov
inc
cs
mov
daa
ret
mov
outs
mov
adc
shl
sahf
scas
jo
js
cs
mov
stos
cli
cs
dec
or
es
mov
not
sub
dec
idiv
adc
movs
cs
fild
dec
call
mov
or
cs
rcl
ss
xlat
xchg
sahf
xchg
xor
pop
mov
pop
push
pop
push
aas
daa
jle
ret
inc
ss
mov
dec
inc
scas
and
xor
xor
and
(bad)
adc
imul
dec
mul
popf
out
jmp
xchg
lds
in
in
imul
push
adc
add
sbb
mov
test
xchg
push
xchg
cs
lock
jg
loopne
icebp
adc
sbb
mov
cmp
cs
stos
ds
shl
mov
(bad)
cmp
or
dec
and
das
neg
cs
and
mov
cs
jno
bound
lods
sub
pop
outs
es
(bad)
mov
mov
fild
xor
jne
pop
imul
mov
enter
int
fnsave
or
ret
mov
shl
jae
cmp
sub
xor
xchg
movs
call
stc
mov
test
iret
jnp
int3
das
push
sbb
cli
scas
add
les
cs
loop
pop
and
sub
out
mov
ins
mov
sub
add
and
in
ss
sub
leave
mov
pop
adc
cmps
dec
je
daa
(bad)
mov
aam
icebp
cmps
dec
mov
fsub
push
cli
mov
mov
rol
push
stos
mov
popa
fldenv
out
idiv
sub
aas
shr
dec
loop
(bad)
or
fild
fdivr
icebp
mov
sbb
das
or
mov
push
mov
bound
sub
fs
mov
jge
push
and
fdivr
jb
pop
int
xlat
push
mov
mov
push
imul
push
cs
sti
mov
jmp
les
push
mov
fcom
ficomp
or
fxch
nop
dec
aaa
push
in
cs
add
sub
jmp
mov
jno
xor
outs
pop
xor
sar
adc
mov
stos
xor
inc
xor
lods
imul
adc
xchg
pop
cs
xor
sbb
mov
lahf
icebp
in
and
rcl
imul
(bad)
clc
jmp
cmp
dec
pop
jle
pop
cs
cwde
rol
movs
push
scas
cs
jge
shl
retf
lahf
mov
lods
fbstp
push
stos
mov
pop
adc
mov
div
sbb
sub
pushf
mov
add
jmp
push
les
sbb
sub
movs
fucomip
mov
ror
mov
and
adc
push
push
fistp
fsubrp
add
and
add
xor
loopne
push
(bad)
fwait
cmp
cli
mov
int3
lds
xchg
icebp
stos
shl
pop
(bad)
aam
in
xlat
sub
aaa
cmp
cs
xor
iret
adc
adc
aas
stos
imul
adc
cmp
aas
call
(bad)
shl
push
mov
pop
cmps
mov
mov
fnstcw
movs
aad
jmp
jg
push
adc
dec
test
icebp
jmp
add
repz
jmp
jne
lods
push
or
mov
mov
sahf
mov
icebp
pop
pop
outs
dec
leave
mov
dec
mov
icebp
xor
jg
sbb
leave
ds
push
sub
inc
int
xchg
dec
ja
popa
leave
jmp
jmp
xchg
sbb
sar
mov
mov
xor
int3
inc
xchg
lock
retf
stos
lock
mov
out
loope
(bad)
mov
mov
sbb
enter
adc
cmp
sbb
push
mov
lods
adc
add
xchg
movs
dec
inc
mov
scas
mov
lea
cmps
into
leave
or
fistp
aas
mov
shl
cmp
hlt
mov
pop
out
repz
push
push
inc
or
es
add
clc
pushf
cli
sub
inc
ds
mov
dec
pop
pusha
inc
popf
inc
sbb
aam
lahf
dec
pop
mov
dec
(bad)
es
jle
fimul
bound
cs
cld
mov
test
mov
jle
in
mov
cmps
imul
outs
out
pop
pusha
xor
in
cs
std
mov
loope
inc
dec
or
push
sbb
or
and
dec
pop
mov
mov
mov
mov
mov
adc
mov
mov
xor
daa
or
jg
jl
add
mov
inc
cmps
pop
icebp
sbb
movs
sub
cmp
cmp
xchg
lahf
stos
into
loopne
repnz
loop
cld
push
fbstp
aad
mov
jnp
stos
jmp
test
ds
cmps
xor
ffreep
rcl
push
mov
outs
dec
les
pop
cmp
add
cs
mov
cmp
mov
add
call
jp
and
mov
call
and
xor
push
mov
ret
mov
jne
xor
fmul
out
and
clc
cs
cmp
sub
lods
out
outs
loope
popf
ret
and
push
cs
addr16
jns
sub
pop
adc
push
cs
nop
pop
dec
ss
gs
jmp
lock
cmp
out
mov
ins
shl
mov
daa
adc
call
xor
mov
pop
mov
mov
push
jno
cs
popf
int
(bad)
xchg
ror
call
mov
imul
dec
and
push
cs
fldcw
mov
addr16
cmps
mov
push
adc
popf
fisubr
jns
jnp
cs
and
iret
mov
push
fsub
push
test
push
sub
lock
stos
cs
dec
add
mov
cmp
lods
cdq
inc
nop
mov
popf
cs
push
sbb
retf
mov
xchg
cmps
pusha
mul
cwde
loope
into
sbb
aaa
pushf
pusha
push
push
cs
imul
inc
jne
idiv
push
pop
jle
and
sub
or
jae
or
leave
daa
jo
jnp
aaa
push
push
and
mov
ins
push
xchg
mov
jg
sub
rol
and
lods
aam
neg
sub
jle
xchg
cmps
jae
add
js
xchg
arpl
jge
inc
bound
jge
aam
stos
sub
xor
call
jne
and
dec
dec
rcl
push
push
adc
pop
sub
push
sbb
add
fdiv
jge
jbe
clc
jae
mov
out
stc
pop
dec
xchg
scas
xchg
cmp
and
fs
dec
bswap
movs
(bad)
jno
pop
add
add
jmp
or
add
imul
mov
imul
movs
mov
cmps
and
out
repnz
mov
(bad)
xchg
mov
loope
cmp
scas
sub
adc
fistp
push
pop
dec
xchg
dec
mov
push
hlt
inc
mov
iret
xchg
or
and
mov
dec
popf
outs
jp
imul
jno
cs
sub
cmps
in
dec
mov
jo
pop
pop
xchg
pop
sub
lds
xlat
scas
retf
cld
scas
dec
push
mov
add
test
psubsb
popa
mov
mov
jg
xor
push
shl
xchg
fcom
cs
pop
out
cs
outs
sub
pop
repz
xchg
les
cwde
adc
and
shl
imul
cs
int
call
loop
mov
stos
jmp
sbb
cld
clc
cs
jnp
push
daa
pop
shr
mov
enter
fst
jge
les
sub
jl
loopne
and
xchg
(bad)
and
js
xor
mov
sub
push
pop
adc
and
or
and
jp
cmps
addr16
adc
out
in
cs
inc
jno
dec
fbld
stos
dec
dec
xchg
jae
scas
cs
psrlq
cs
repnz
and
mov
mov
push
mov
pushf
sahf
sub
push
aaa
scas
in
cmp
cmp
xor
cs
xchg
xlat
cmp
sar
outs
jo
(bad)
and
mov
pop
popa
(bad)
xchg
shl
add
cs
ja
mov
sbb
out
movs
icebp
outs
mov
mov
cs
aaa
and
cmp
pop
dec
cmp
cmp
into
xor
pushf
cs
(bad)
push
retf
or
mov
mov
sbb
dec
push
in
and
adc
into
outs
mov
cs
je
rcr
int
arpl
push
lahf
bound
push
je
js
jl
jecxz
and
stos
fwait
sysret
sbb
mov
loope
pop
dec
jmp
rol
mov
lea
lods
and
cmp
das
retf
addr16
push
gs
inc
sub
fild
xor
xchg
add
cs
imul
addr16
ds
outs
iret
sbb
inc
and
pop
cmp
mov
cs
std
mul
ret
mov
or
and
outs
push
cmp
pop
stos
cli
in
std
ds
inc
xlat
stos
cs
popa
cld
icebp
or
mov
xchg
cs
adc
jg
retf
fnstsw
sti
lahf
aaa
xor
cld
fdiv
jge
ja
sub
push
out
(bad)
popf
outs
(bad)
cdq
xadd
push
xlat
mov
push
cmp
pop
push
xchg
cmp
(bad)
leave
out
push
or
(bad)
gs
and
dec
cmp
movs
inc
mov
sbb
cs
mov
cmc
inc
daa
aas
xchg
mov
cs
push
add
sub
jge
nop
jb
loopne
cs
jl
mov
mov
jns
(bad)
and
pop
imul
mov
mov
push
mov
iret
add
push
push
push
out
cs
inc
cdq
push
sub
(bad)
loope
cld
mov
faddp
or
mov
sub
cwde
and
es
scas
(bad)
jmp
sub
mul
mov
scas
mov
stc
inc
cs
inc
pop
cmps
cdq
aas
sub
and
or
or
call
xlat
push
mov
and
xchg
push
enter
sub
popa
xor
fnstsw
adc
xor
cs
mov
jns
sub
(bad)
xor
or
retf
sub
pop
sti
jb
outs
push
cmp
pop
mov
inc
scas
cs
jecxz
mov
cs
mov
aas
mov
aam
outs
sbb
dec
pop
xor
sbb
fwait
inc
ret
fs
daa
lods
fld
add
retf
cs
push
call
xor
pop
shr
pop
(bad)
aam
ins
cs
push
mov
and
lods
mov
outs
sbb
cmc
pop
pop
cs
fiadd
loopne
inc
addr16
and
out
sub
xchg
inc
lahf
xchg
test
fbstp
mov
(bad)
push
sbb
mov
sub
daa
inc
outs
out
ror
mov
and
call
jl
cld
mov
pusha
xchg
adc
imul
std
dec
inc
xchg
out
ins
data16
dec
push
xchg
add
enter
pop
cs
xchg
faddp
div
cs
test
add
cs
xor
dec
inc
pop
scas
mov
repz
sub
repnz
mov
sub
in
cmp
lods
cmps
mov
inc
jbe
in
ficomp
add
mov
push
mov
int3
sbb
push
lea
movs
aas
push
push
sub
cs
xchg
jmp
enter
push
sub
ret
outs
in
cs
into
aam
test
jbe
cs
adc
ja
retf
cs
outs
test
outs
mov
int
(bad)
xor
in
test
add
cs
mov
shr
inc
or
xchg
ins
cs
sub
adc
(bad)
test
dec
pushf
push
sahf
xor
scas
(bad)
popf
bound
scas
hlt
mov
or
fcomp
sar
jmp
sar
pop
mov
das
rol
cmp
mov
repnz
and
aaa
clc
jg
rcr
shl
jg
lods
(bad)
cs
(bad)
sbb
mov
cmp
mov
or
sbb
xchg
sub
or
sub
int3
fidivr
ins
xchg
sahf
inc
mov
sti
stos
std
push
mov
pop
lea
retf
imul
pop
jecxz
lea
test
sub
push
jmp
cs
ins
mov
pop
fnstenv
mov
adc
adc
pop
push
leave
cmp
pop
loope
adc
mov
xor
dec
pop
mov
mov
inc
pop
cmps
lock
sub
fisubr
mov
sub
inc
cs
(bad)
push
jmp
push
add
mov
aad
dec
cs
jge
push
or
mov
xor
mov
cs
jg
and
cli
xor
sbb
out
les
adc
mov
cmp
mov
jg
cs
aam
sub
pop
popa
cs
lods
out
and
push
xchg
dec
cs
leave
ins
or
clc
dec
shl
adc
clc
adc
lea
div
xor
xor
cs
jge
cs
or
cs
cs
cs
ret
cmc
lahf
cs
or
inc
mov
mov
stos
fbld
cs
sbb
mov
into
int
inc
xor
mov
arpl
dec
cs
add
mov
ficomp
dec
dec
sbb
pop
cs
rol
jp
aas
cs
shl
in
aaa
cs
imul
adc
mov
arpl
xchg
push
cs
movs
adc
mov
fidivr
jl
loopne
sub
pop
pushf
mov
scas
cmp
stos
or
test
mov
cs
imul
cs
int
in
aad
adc
out
jecxz
rcl
sub
cmp
adc
or
jge
rcr
sub
mov
pop
push
cmps
jg
mov
pushf
push
sub
cmps
sub
int
push
imul
dec
pop
xchg
fimul
jns
pop
test
fdivr
dec
pusha
xor
sub
mov
inc
sahf
fstp
mov
or
aaa
test
adc
xor
or
mov
xor
call
cs
mov
popf
pop
cs
dec
jae
stos
xor
fcom
inc
adc
out
popf
push
fwait
jle
adc
adc
dec
pushf
fs
repnz
pop
add
push
xor
sahf
cmps
add
outs
addr16
mov
mov
div
fadd
stos
mov
aam
cs
mov
cs
imul
jno
retw
add
or
test
xor
cs
loop
retf
mov
cs
pusha
or
iret
(bad)
frstor
mov
adc
loopne
xor
push
nop
cs
jne
mov
sub
cs
ret
(bad)
leave
or
cs
leave
in
push
mov
mov
stos
arpl
cs
pop
push
test
lock
xchg
cmp
push
inc
(bad)
stos
mov
in
push
pushf
fld
retf
lock
xchg
repz
mov
mov
dec
dec
add
and
int3
pop
std
ds
pushf
in
sub
fsub
xor
js
xchg
mov
stos
loope
cdq
icebp
jmp
sbb
jmp
add
cs
ins
mov
dec
(bad)
movs
not
cmp
mov
repnz
or
dec
pop
mov
jp
into
pop
addr16
mov
das
in
fwait
out
sub
jl
cs
mov
jmp
cdq
add
push
test
imul
xor
mov
add
dec
or
sub
mov
mov
push
mov
sbb
cmp
pop
mov
pushf
cs
cs
lock
not
inc
cs
xlat
daa
cmp
xchg
mov
ins
mov
popa
aad
cmp
inc
xor
mov
add
push
adc
outs
sbb
mov
mov
cmps
pop
call
dec
popa
adc
and
pop
scas
jle
pop
fucom
push
mov
dec
lods
outs
cs
cs
stos
es
movs
fimul
add
das
cs
int
(bad)
sbb
cli
inc
mov
cs
ins
shl
jecxz
cs
nop
lahf
xchg
jmp
pop
mov
xor
(bad)
imul
fsub
cs
sub
mov
push
es
sahf
mov
cs
xor
ins
mov
sub
(bad)
inc
lds
inc
adc
enter
push
or
sbb
cs
xchg
int3
mov
inc
xor
jbe
popa
cmp
shr
cs
mov
lds
pop
mov
cs
cdq
mov
out
movs
or
(bad)
jb
jb
cs
cmp
bound
cld
xor
out
and
sub
sahf
adc
stc
mov
mov
xchg
es
(bad)
aam
push
or
dec
cs
ret
fnstenv
lea
and
or
data16
mov
lock
adc
in
mov
ja
cmps
and
sbb
jno
adc
push
push
cs
xchg
jl
es
cs
sub
xor
jae
mov
inc
repnz
mov
jle
push
cs
loop
pop
shr
cs
in
mov
sbb
movs
jno
and
shl
adc
push
outs
lds
sub
addr16
sbb
xor
jl
test
stos
aas
pusha
outs
retf
repnz
js
(bad)
adc
add
cmp
(bad)
in
bound
loope
push
jo
repnz
cs
adc
ss
out
movs
or
shr
xor
cs
mov
pop
and
xchg
xchg
mov
cmps
jbe
xor
pop
cmp
cs
out
arpl
repnz
and
push
sub
xor
dec
mov
fimul
sub
hlt
out
push
mov
cs
cmc
or
sub
cs
inc
dec
push
cmps
mov
imul
imul
sbb
xor
cs
cs
cwde
icebp
and
cs
fild
xchg
scas
jecxz
es
or
sti
fld
jae
cs
and
stc
shr
stos
cs
daa
cmp
out
push
mov
lods
cs
cs
push
cmp
xor
sub
mov
(bad)
cmp
inc
sbb
mov
pop
jp
test
inc
or
shl
lea
pop
push
sbb
cdq
inc
out
jne
mov
add
in
xchg
icebp
pop
std
add
sbb
push
cld
sub
arpl
cmc
dec
or
scas
or
shl
(bad)
clc
ret
xlat
mov
pop
cs
fisubr
(bad)
daa
rcr
mov
inc
cs
mov
fisttp
jmp
lds
hlt
xor
and
enter
sub
inc
cmp
adc
retf
pop
jns
dec
add
push
xor
fsub
shr
(bad)
into
cmp
imul
sbb
int
inc
repnz
mov
adc
fsubr
or
sub
xor
lock
or
jle
fsub
daa
pop
pop
ss
add
scas
mov
js
and
pop
sbb
cs
cs
cs
sbb
inc
mov
cmp
add
mov
mov
cs
inc
push
sbb
es
xchg
lods
inc
iret
cs
out
mov
or
mov
adc
out
cmps
add
daa
(bad)
xor
cmp
fbstp
jmp
xchg
(bad)
pushf
aad
cs
fwait
cmps
xchg
aas
dec
push
jp
dec
cs
cmp
lods
pop
jo
int3
xor
hlt
adc
push
or
inc
push
cs
out
test
(bad)
fstp
adc
xlat
sub
out
mov
jmp
xor
pop
outs
cs
cmp
mov
sar
xor
fsub
dec
lods
and
mov
jb
cmp
repnz
nop
inc
fimul
imul
xor
jecxz
call
xchg
cs
sub
push
adc
loop
addr16
pop
xor
jmp
cs
jl
push
lods
sbb
cmp
repnz
arpl
sti
scas
cs
stos
cs
add
fs
ja
cs
xchg
push
inc
dec
nop
cs
cmp
push
shl
movs
mov
push
adc
cmp
test
push
jl
jbe
pop
adc
cs
stos
and
pop
sub
push
ss
cmps
sbb
movs
cmp
push
push
call
dec
xchg
mov
repnz
cmovp
mov
cs
fimul
cmp
xor
xor
out
cmc
mov
rol
fisub
stc
bswap
scas
xchg
ins
pop
adc
inc
fadd
push
cs
shr
or
hlt
lds
sub
xchg
push
cs
jo
jbe
pop
mov
inc
and
mov
cmp
xchg
adc
pop
xor
cs
push
dec
inc
pop
xor
mov
in
sub
mov
dec
sub
jb
cmps
out
cs
in
ficomp
adc
jbe
cs
pop
xchg
cmp
shr
jecxz
sahf
and
sahf
push
cs
inc
popa
nop
inc
cmp
ss
(bad)
fsubr
dec
mov
pop
rcr
pop
(bad)
sub
imul
out
cs
movs
lds
sbb
repz
adc
daa
scas
mov
add
mov
mov
sub
add
sbb
leave
cs
(bad)
pop
pushf
cs
fcmovu
jmp
cs
test
xchg
mov
mov
shr
dec
movs
xchg
pop
cs
sahf
xor
or
daa
adc
or
xor
loope
push
lods
call
and
fsubr
scas
xlat
xchg
xor
mov
aam
mov
fnsave
retf
das
push
stos
es
add
imul
cdq
lock
add
xor
nop
mov
lods
scas
popa
retf
dec
cmps
pop
push
fsubr
leave
xchg
mov
adc
jle
pop
not
es
sbb
dec
xor
xchg
sub
rcl
xor
jle
lods
aas
inc
ja
cdq
cs
data16
pop
cs
cs
inc
enter
xchg
fs
in
sub
xor
mov
aam
push
imul
sbb
and
jle
(bad)
stc
pop
xor
cs
ror
loop
out
sub
mov
cmp
shr
inc
fwait
pop
aaa
mov
mov
xor
mov
dec
dec
mov
ret
push
push
sub
mov
imul
sar
nop
in
fdivr
push
int3
sahf
fmul
cmps
mov
xchg
or
cli
pop
sub
daa
cmp
les
xor
pop
jno
outs
pop
cs
mov
pop
stos
pop
aaa
push
aad
lods
mov
loope
xor
ret
mov
dec
cmc
retf
jo
add
inc
in
xor
cmp
dec
inc
cs
or
and
pop
repz
mov
mov
sbb
cmp
in
lea
fwait
sbb
mov
mov
stc
pop
jns
cmc
pop
jle
(bad)
jmp
mov
adc
mov
sbb
dec
mov
call
test
enter
mov
jmp
imul
aas
loope
pop
pop
dec
fadd
(bad)
fs
inc
int
pop
stos
cs
mov
cmc
and
bound
in
sti
ret
cs
test
cmps
xor
xchg
sbb
sbb
movs
mov
inc
popf
in
mov
mov
ss
cs
test
or
cs
arpl
jmp
cs
mov
fstp
sub
scas
out
mov
xor
out
sbb
pop
stos
and
adc
icebp
jnp
cs
call
mov
test
cli
rcr
mov
sbb
mov
sub
popa
shr
(bad)
push
mov
or
loopne
scas
cmp
push
xchg
adc
xor
pop
xchg
sbb
nop
sbb
retf
js
into
cs
in
or
loopne
xchg
ss
mov
shr
idiv
call
outs
mov
dec
(bad)
arpl
lock
add
inc
cs
push
xor
sbb
loopne
icebp
sub
mov
repnz
add
mov
dec
mov
jb
sub
mov
addr16
inc
out
out
and
cs
cmps
pop
xor
xchg
xor
adc
ret
stc
test
xor
sbb
or
cld
adc
ds
xor
fld
cmp
cs
rol
jmp
xchg
xor
inc
xchg
addr16
push
sub
sbb
mov
cs
in
outs
bound
mov
push
sahf
xor
mov
das
push
cs
test
imul
daa
push
into
or
pop
outs
dec
pushf
retf
call
mov
cs
scas
jmp
cmp
inc
push
mov
sub
mov
loope
jbe
push
hlt
fisubr
jne
cld
sub
cs
xchg
scas
mov
xor
cdq
cmp
cmp
mov
inc
dec
inc
cs
add
jle
inc
sti
xor
inc
cs
aaa
pop
daa
arpl
jmp
mov
push
push
int
dec
out
mov
int3
and
(bad)
cmp
daa
dec
mov
pop
out
mov
repz
mov
pop
dec
leave
shl
cmp
cs
lods
outs
bound
test
and
cmp
das
cld
scas
cs
in
push
mov
cmp
adc
rcr
cs
jb
in
sbb
movs
inc
push
xabort
mov
sar
mov
out
je
sub
xchg
push
cs
jmp
cs
jnp
pop
movs
lock
sub
adc
add
cs
ja
xchg
aaa
(bad)
jge
cs
ret
lods
cs
xchg
clc
ds
jle
or
gs
mov
jecxz
sub
fwait
(bad)
cmp
cmp
or
jb
jmp
lods
xor
icebp
inc
daa
cmp
xchg
mov
out
jae
(bad)
and
inc
ja
in
mov
fild
cs
xchg
rcr
cmp
iret
mov
stos
push
pop
and
rcr
lea
dec
ins
in
nop
cs
mov
xor
ds
sbb
int
cs
mov
pop
outs
add
push
xchg
mov
scas
les
jle
pop
mov
push
mov
retf
stos
test
mov
loop
outs
adc
cmp
cmps
lock
pusha
mov
add
in
mov
add
fmul
loope
xor
xchg
(bad)
pop
movs
scas
xchg
out
jmp
pop
cs
daa
pop
arpl
hlt
sub
unpckhps
pop
and
fld
push
stc
jnp
sub
scas
cs
mov
or
addr16
dec
aam
aas
fwait
in
cld
les
sahf
cs
add
repz
push
fdivr
cs
(bad)
retf
fsubr
inc
sub
mov
jle
sub
stos
push
sbb
cmc
mov
jg
dec
cs
add
xor
adc
cs
push
xchg
pop
jmp
or
mov
mov
xor
scas
lea
das
push
cmp
sahf
cs
fidivr
loopne
(bad)
scas
sbb
cmp
xchg
jl
pop
inc
mov
daa
ror
inc
jae
mov
cmc
jle
sub
jmp
fsubr
out
dec
cmp
cmps
mov
in
cs
sbb
test
mov
cs
cmp
fwait
bound
or
sahf
nop
idiv
inc
ret
xor
fwait
inc
jp
sbb
popf
dec
cs
mov
adc
test
and
adc
pusha
cs
mov
les
out
test
push
xor
into
and
ins
call
sbb
ret
xor
pop
movs
pop
(bad)
jl
aad
stos
cmc
cmp
xchg
dec
ss
push
push
outs
(bad)
in
in
pop
neg
push
xor
add
or
pop
xor
je
add
cs
adc
jnp
mov
scas
dec
mov
out
imul
inc
popa
call
pop
sahf
data16
and
cmps
sub
fmul
clc
sub
rcr
shl
push
daa
in
std
aas
imul
jno
out
mov
jbe
adc
sub
add
scas
stos
jo
fisubr
adc
sub
and
push
pop
fs
xor
fisttp
aaa
adc
(bad)
in
(bad)
das
xor
out
xchg
fstp
aad
adc
mov
sub
loopne
cs
push
mov
(bad)
fdiv
arpl
sbb
pop
fcmovu
into
adc
inc
mov
imul
sbb
xlat
sub
xor
cs
nop
push
loopne
imul
and
out
jae
cs
ins
pop
lea
addr16
scas
add
mov
outs
in
push
and
mov
popf
cs
xor
push
mov
sub
pop
sahf
jnp
inc
arpl
mov
mov
adc
pop
fimul
ror
(bad)
cs
mov
fwait
into
les
push
push
mov
cmp
and
cs
pop
mov
jg
cs
cs
scas
xor
cli
cs
fnstenv
mov
loop
cmp
js
cs
sbb
ds
xchg
dec
jb
push
lock
mov
cmp
sar
test
ret
mov
fcmove
xchg
sbb
daa
call
ins
in
cmp
scas
cs
mov
xchg
xor
sub
out
shr
sbb
adc
fstp
add
add
inc
aam
imul
nop
fbstp
std
jne
sub
pop
gs
cs
cmps
cs
and
fisub
cs
mov
ret
test
dec
mov
jbe
aam
cmp
in
mov
mov
push
data16
cs
cmp
fsubr
pop
sahf
mov
setae
cs
sub
addr16
je
jbe
ret
cs
retf
inc
add
sahf
test
ret
push
data16
cs
dec
jl
outs
sub
lock
mov
cs
iret
ret
pushf
xchg
cs
or
aad
pop
sti
in
frstor
push
adc
mov
cmp
sub
fcmovnb
cs
xchg
mov
in
aas
sbb
cs
ret
xlat
and
cs
lock
ss
push
cmp
(bad)
into
cs
pushf
cmps
and
cmp
cwde
out
addr16
pop
pop
(bad)
loopne
or
xor
mov
mov
jb
pop
je
iret
test
xor
lds
mov
stos
jp
jl
scas
popf
sub
cs
xor
adc
mov
cs
dec
xor
pop
inc
or
test
call
leave
cs
or
jecxz
push
cmp
shl
stos
xchg
es
popa
cmps
mov
rol
nop
mov
push
clc
out
push
lahf
xchg
arpl
mov
leave
xor
jg
daa
xchg
mov
add
mov
inc
xchg
retf
xchg
lock
mov
fdiv
jp
and
sub
xor
fisubr
jo
push
cmp
sbb
lar
cmps
and
arpl
adc
loopne
xchg
movs
adc
ret
cmp
sub
bound
jmp
jne
sbb
xchg
jge
mov
cs
out
stc
mov
mov
pop
push
leave
adc
cs
movs
dec
xchg
call
pop
and
sub
dec
sub
(bad)
cs
je
cs
ret
lods
mov
pop
retf
cs
inc
mov
outs
call
inc
cs
push
gs
imul
pushf
mov
cmp
in
out
cs
mov
cmp
es
adc
scas
movs
rcl
xor
mov
dec
cs
movs
(bad)
daa
xor
jmp
add
xchg
add
cs
scas
movs
jmp
test
stos
push
or
test
sub
cmp
ins
mov
pop
int3
cs
mov
aad
inc
in
push
cs
xchg
cs
pop
mov
jns
mov
fwait
dec
jecxz
fisub
scas
iret
push
xchg
jge
jle
or
jmp
sbb
fld
mov
xor
ds
jne
mov
arpl
cs
leave
fs
(bad)
or
cld
inc
add
jae
scas
xchg
(bad)
mov
adc
inc
dec
fnclex
and
xor
cs
je
stc
or
shl
sbb
xor
adc
dec
aaa
mov
imul
pop
mov
(bad)
sar
cs
mov
cs
repnz
or
out
in
mov
xchg
ins
push
cmp
fdivr
into
cs
scas
mov
jae
and
imul
jge
aas
ja
(bad)
mov
pop
iret
sub
popf
dec
xor
(bad)
cmp
xor
stos
ins
cmp
sbb
or
ds
push
imul
ret
xchg
adc
sub
pop
ja
cs
xchg
loopne
xlat
mov
lods
dec
aas
xchg
mov
cs
pop
push
retf
inc
add
data16
bound
scas
sti
sub
xchg
js
or
sbb
adc
sub
dec
jp
mov
outs
repz
sti
or
xor
push
jnp
cs
add
cs
cs
cmp
xor
ror
cmp
fcomp
lsl
imul
retf
addr16
mov
jo
ds
sbb
cmp
js
ss
loopne
cs
mov
cmps
add
xor
lods
cs
cs
push
push
or
data16
leave
in
mov
push
cs
sbb
outs
jg
test
sub
xchg
jns
ins
mov
shl
jno
pop
test
clc
sub
les
mov
xor
dec
pop
ror
jmp
cs
dec
pop
adc
and
xor
js
cwde
arpl
xor
or
cs
jmp
sti
gs
sbb
add
(bad)
sub
mov
ss
cwde
lock
sub
int
cs
xor
sub
outs
iret
sub
pop
push
stc
popa
mov
mov
cld
repz
lock
cs
fmul
cs
sar
bound
imul
inc
ss
or
les
ret
xchg
imul
(bad)
pop
int3
fild
mov
outs
cdq
aaa
inc
jmp
add
mov
scas
inc
mov
add
cs
call
push
sahf
rcr
mov
push
fnsave
cs
sub
jo
adc
sub
shr
inc
dec
or
mov
cs
js
cs
xchg
cs
push
sub
mov
or
mov
fs
ja
mov
add
adc
cs
cmp
retf
cs
repnz
and
cs
jbe
js
ret
cs
int
mov
push
sbb
iret
dec
xor
dec
fwait
cli
mov
cmp
sub
out
dec
cs
or
sub
adc
xchg
dec
cs
cs
fld
dec
xchg
jp
ds
mov
or
repnz
(bad)
jecxz
push
xor
cs
jb
push
aas
xor
iret
pop
dec
adc
add
and
icebp
pop
shr
xor
retf
sbb
mov
add
mov
cmc
daa
xor
(bad)
stos
or
and
cs
fisub
in
add
jmp
add
pushf
cs
ins
hlt
cmp
xchg
jbe
and
push
(bad)
cs
and
and
cs
mov
xchg
jmp
cs
cs
jno
aaa
sub
es
mov
inc
enter
pop
loop
and
dec
cs
mov
pop
sub
fidivr
bound
add
cs
clc
sub
mov
test
int3
cmp
xchg
cs
add
into
cs
cmp
mov
cs
inc
sub
xchg
cmps
fwait
adc
cs
push
cmp
ret
push
push
cs
inc
jo
and
mov
or
cs
fldcw
cs
inc
in
aaa
popf
das
cs
fist
xor
loopne
outs
pop
sub
pop
dec
push
mov
outs
pop
fimul
outs
push
adc
push
or
out
rcr
std
sub
push
cs
es
sbb
out
inc
inc
pusha
nop
xor
cmps
out
push
sar
jle
pop
pop
cs
movs
pop
fstp
(bad)
not
lods
hlt
adc
ins
popf
loop
dec
(bad)
sub
cs
dec
fdiv
or
movs
popf
jg
xor
cmps
shr
dec
add
fld
pop
arpl
push
test
inc
mov
xor
add
cs
(bad)
sahf
stos
dec
add
sar
mov
aas
fmulp
sub
fs
pop
pop
cld
sub
sub
mov
and
sahf
int3
jle
cs
shr
jo
outs
out
push
pop
xor
xor
add
push
jno
add
cs
pusha
sbb
jmp
stos
test
sub
add
xor
scas
cmp
addr16
mov
xlat
pop
sub
jmp
daa
hlt
aas
outs
fild
cmps
jle
icebp
inc
stos
inc
inc
mov
sub
mov
ss
cmp
icebp
adc
cs
dec
es
out
cs
fld
cs
das
add
push
cs
sub
mov
sub
push
mov
or
add
addr16
pop
jae
shl
into
data16
push
mov
mov
movs
dec
cs
sti
sub
retf
jp
ret
push
test
cs
add
fld
inc
pop
and
cs
dec
les
cs
fild
sub
sbb
or
sbb
sub
jno
ins
dec
add
daa
shl
pushf
mov
outs
aad
pop
xor
les
xchg
push
movs
xchg
push
sbb
sbb
adc
pop
jne
push
aam
cs
into
xor
cmps
and
jmp
jmp
adc
loope
lock
std
adc
cs
push
test
cmp
lods
enter
lea
inc
cs
pusha
lods
push
pop
sbb
sbb
outs
cs
cmps
fwait
lods
lea
ror
sbb
push
pop
or
pusha
js
out
cs
pushf
inc
ds
adc
je
cs
mov
sub
imul
cs
xchg
cs
arpl
out
cs
sbb
cs
fs
and
repnz
fistp
call
jb
cs
test
lods
aad
mov
jo
fwait
mov
cs
xchg
add
lea
loope
cs
leave
fsubr
nop
cs
out
int3
cmps
xor
gs
push
jle
push
aad
sti
and
mov
into
stc
cs
daa
int3
sub
outs
jae
aas
and
jne
stos
jmp
mov
jo
shl
jne
cmc
jo
cs
(bad)
jge
jbe
cs
(bad)
fsubr
scas
adc
stos
in
push
mov
adc
and
mov
adc
ja
cs
mov
movs
sub
adc
push
cs
mov
pop
push
jle
or
mov
dec
or
and
xor
mov
ds
aaa
mov
cli
stc
icebp
sub
add
xchg
cmps
sahf
(bad)
jle
mov
in
fcomp
add
cs
and
sub
sub
and
pmaddwd
adc
daa
sub
add
mov
cs
and
shl
sbb
dec
popa
cmp
outs
cs
push
in
hlt
or
cs
jnp
gs
imul
cmp
pop
push
pusha
and
(bad)
jbe
inc
pop
movs
out
sub
int
mov
cli
out
(bad)
mov
in
xchg
out
iret
addr16
(bad)
les
(bad)
and
aas
test
daa
xor
imul
outs
enter
or
or
scas
xchg
push
sbb
xor
sub
jno
or
outs
sub
inc
stos
cs
inc
cmp
fbstp
push
arpl
push
fmulp
and
adc
lds
mov
cs
jg
shr
rol
scas
imul
cmp
jae
aas
cs
out
call
mov
pop
cwde
inc
imul
inc
cli
mov
add
mov
cs
mov
in
aaa
inc
nop
add
xchg
mov
jecxz
mov
xor
xchg
fs
aas
pop
ds
sub
icebp
mov
cs
les
xor
popf
cs
dec
inc
mov
test
cs
push
jnp
iret
mov
sbb
js
inc
cs
out
cdq
out
lds
or
dec
and
test
cmp
mov
loope
outs
mov
sub
aad
push
or
jne
cs
or
mov
pop
out
cs
mov
xor
sahf
je
and
jno
es
ja
adc
and
cs
retf
mov
xor
ins
fcmovnu
mov
push
cs
jg
add
pop
out
mov
(bad)
sar
test
or
shl
cmc
cmp
mov
cs
adc
popa
cdq
cmp
mov
push
cs
sti
pop
jb
pop
sub
retf
and
fwait
pop
lock
or
cs
mov
xor
mov
cs
dec
or
data16
(bad)
lahf
sahf
enter
mov
scas
pop
xor
xor
out
xor
aam
cld
movs
gs
into
jge
sti
loop
sub
sub
outs
sub
pop
sub
cs
out
iret
(bad)
sbb
adc
cs
and
jbe
aas
ret
adc
retf
and
les
and
jo
cs
sub
adc
pop
xor
(bad)
add
mov
cmps
cs
mov
and
jg
cmp
hlt
test
cs
xchg
push
imul
jb
loopne
add
mov
jecxz
xchg
aas
mov
push
mov
in
push
sub
ins
add
cs
push
cs
je
movs
lock
mov
(bad)
lods
cmp
hlt
gs
lds
sub
adc
add
cs
cs
scas
sbb
xchg
jmp
aaa
push
cs
inc
jnp
add
xor
(bad)
out
sub
out
cs
loop
pusha
add
leave
pop
shr
push
iret
jecxz
push
inc
dec
retf
jp
int3
jbe
adc
ins
xchg
nop
pop
dec
into
sar
cmps
inc
loopne
test
add
adc
jmp
out
cs
or
push
or
jmp
div
test
loope
into
push
xchg
sbb
bound
sub
push
cmp
call
pusha
push
mov
jns
sub
mov
sbb
add
daa
(bad)
ins
ins
cs
pop
es
mov
ficom
push
in
sub
xchg
cs
push
mov
fidivr
(bad)
cs
add
mov
cmp
jecxz
fisttp
cs
fnstenv
push
cs
out
clc
pusha
or
adc
push
cmp
sbb
xchg
pop
push
add
push
in
ja
cmp
and
add
push
aas
cmp
ds
add
and
ins
lea
add
les
cs
(bad)
or
jo
cs
dec
mov
cs
clc
ror
xchg
pmovmskb
data16
test
lods
jle
data16
cs
mov
add
fs
pusha
call
in
int
sbb
xor
rol
and
mov
mov
es
cmps
out
mov
cwde
fidiv
and
ret
outs
cs
mov
dec
and
ins
rcr
(bad)
scas
mov
xlat
dec
dec
jns
in
dec
jge
(bad)
jmp
cs
push
inc
push
int3
sbb
das
pop
mov
(bad)
popa
jnp
test
dec
je
add
xchg
js
in
aas
jge
(bad)
or
arpl
cmp
mov
into
cs
ins
inc
mov
popa
fldcw
xchg
sub
mov
cs
out
in
pop
and
xchg
outs
inc
loop
push
jae
cs
cdq
ins
pop
cli
mov
or
add
cs
xor
jp
xchg
dec
cs
cs
mov
and
jecxz
bnd
mov
ret
in
jmp
push
push
xor
sub
enter
or
es
imul
test
mov
jae
or
in
daa
out
aam
shr
ror
aaa
outs
sub
inc
jnp
test
fisubr
sub
sub
pop
cs
xor
xor
adc
leave
cs
ss
cs
xor
test
adc
pop
xlat
outs
push
pop
push
daa
mov
sbb
mov
or
repz
cmp
popf
outs
push
push
daa
or
and
add
ins
fisubr
xchg
mov
repnz
cs
mov
mov
pop
mov
mov
test
cmp
push
inc
fsub
sbb
mov
sub
adc
cs
cli
fldcw
icebp
dec
jnp
in
sub
and
xlat
xor
or
jne
jbe
and
mov
shr
fistp
dec
xor
pop
movs
cmp
jne
daa
scas
aas
push
sub
push
lds
shl
dec
xchg
lods
sub
ss
xchg
add
lods
cs
mov
push
cs
in
xlat
repz
jnp
(bad)
fcomp
xor
push
lea
and
stos
fisubr
cs
or
mov
jo
arpl
mov
cs
mov
pop
and
adc
sub
(bad)
scas
cs
aam
mov
ss
add
cs
neg
lock
cs
jo
push
mov
mov
cs
sub
in
icebp
sub
lds
test
into
pop
mov
mov
fdiv
pop
pop
xor
xchg
paddb
jg
inc
mov
ins
cs
cdq
cmps
xor
cs
pop
sbb
hlt
sub
adc
sahf
inc
push
push
cs
mov
jo
and
xor
sbb
inc
xchg
mov
stc
adc
or
add
lea
fidivr
dec
adc
pop
push
lods
inc
and
cli
loopne
sub
mov
push
imul
xchg
push
outs
push
sub
xor
lahf
lds
loop
mov
inc
push
jle
in
outs
cwde
add
lahf
mov
or
(bad)
xor
push
dec
cs
daa
push
lods
inc
sub
and
stos
adc
adc
dec
pop
sub
pop
sub
(bad)
pop
rcr
xor
ins
jne
mov
adc
and
inc
xchg
mov
daa
setle
sub
xchg
lods
daa
cs
scas
dec
mov
cs
lock
out
arpl
mov
xchg
dec
dec
add
daa
cs
out
jg
jb
cmp
or
lds
loopne
pop
loop
movs
jg
retf
cs
pop
test
mov
cs
jbe
inc
xchg
mov
cs
dec
push
les
push
(bad)
retf
push
cmp
out
in
add
sbb
sub
sub
loopne
cs
pop
cmps
cs
pop
push
aas
dec
cmp
imul
(bad)
aas
cmp
mov
mov
shl
out
repnz
into
mov
daa
aas
sub
push
sbb
leave
iret
test
mov
cs
cs
int
inc
cdq
imul
jmp
in
cs
dec
shr
lea
inc
fadd
daa
arpl
cs
mov
pop
push
cs
les
cs
push
sahf
mov
mov
mov
cs
cs
test
mov
dec
aaa
dec
add
leave
adc
outs
cs
out
pop
jns
in
sub
adc
cs
cli
adc
sar
pop
test
or
add
ja
cs
add
ret
lock
retf
outs
or
xor
dec
test
cs
jmp
xchg
stos
mov
icebp
push
xchg
jg
addr16
cs
dec
lahf
xor
cmps
jmp
xchg
out
pop
mov
cs
inc
shl
arpl
nop
cs
cmp
(bad)
daa
sub
sahf
inc
ret
or
dec
repnz
add
mov
cmp
lahf
mov
in
inc
popf
data16
mov
sub
cwde
inc
cs
cs
mov
js
ds
push
cs
mov
aas
leave
sub
cs
cs
loopne
imul
dec
call
pop
sub
data16
cs
sub
rcr
hlt
cs
outs
cmp
sub
or
scas
enter
(bad)
imul
ins
dec
jno
ss
adc
scas
push
cmc
mov
and
mov
push
pushf
sub
cli
stos
aam
pop
repz
repnz
push
lods
fisubr
and
cdq
test
xor
dec
cs
push
add
add
out
lock
dec
ror
jle
jmp
xchg
cs
test
mov
fs
adc
push
sti
jae
movs
(bad)
out
dec
xor
push
call
cs
adc
out
pop
arpl
lahf
xor
cs
fldenv
cs
xchg
add
push
sub
ror
cmp
push
aas
inc
sub
cs
rcr
mov
cmp
jmp
mov
cs
sbb
mov
outs
jg
mov
sub
ss
addr16
mov
popa
pop
cs
xchg
add
les
aam
outs
mov
cs
mov
or
mov
mul
cs
pop
popa
cs
scas
mov
pop
mov
cs
mov
sub
and
fcmovb
sbb
data16
dec
jmp
and
xor
jno
xor
pop
fcmove
mov
sub
mov
shl
inc
rcl
sahf
cld
push
cs
adc
sub
jp
push
adc
int3
inc
push
dec
cs
mov
push
addr16
dec
cs
mov
cmp
rcl
lds
inc
lock
pop
fld
rol
cs
ins
inc
sbb
lahf
mov
into
xor
and
call
push
xchg
add
dec
cs
and
push
pop
xor
mov
xor
cs
cs
lahf
add
add
cs
cmps
enter
out
frstor
lahf
add
imul
jp
sub
das
in
sahf
jo
outs
cs
out
or
ret
cs
xor
jp
stc
pop
cmp
or
outs
cs
loope
mov
cmp
lods
(bad)
cs
cmps
mov
loope
mov
(bad)
xor
jle
and
movs
outs
cmp
cdq
sub
dec
js
in
cs
adc
pop
outs
ss
std
cmp
xor
cs
icebp
cld
cs
test
pusha
sar
in
pop
xor
mov
mov
fldenv
imul
cs
cmc
ds
xchg
sub
div
paddsb
lahf
push
jnp
repnz
out
jmp
mov
cs
and
jl
xchg
mov
add
cmp
popf
cs
cmp
xor
call
pop
push
rep
stc
or
add
jns
ds
sbb
dec
sub
or
cs
fnstenv
push
and
fwait
mov
daa
sahf
cs
cwde
test
dec
cs
or
cs
dec
xchg
add
leave
js
retf
push
arpl
cs
jge
xchg
leave
movs
jmp
jle
call
jecxz
pop
lea
popa
xchg
mov
cs
je
loopne
cs
xor
popf
push
je
shr
out
dec
mov
out
outs
es
lods
cs
daa
mov
in
inc
jg
shr
dec
movs
je
pushf
rcl
cs
xor
or
jno
mov
(bad)
outs
pop
add
test
pop
and
adc
push
sub
cs
outs
ja
pop
out
add
jecxz
push
cs
xchg
movs
es
scas
into
pusha
sub
and
xlat
addr16
xchg
(bad)
cs
aas
into
adc
dec
jb
or
add
int3
and
cmp
xor
jbe
mov
fisttp
push
ss
push
or
cs
jmp
push
cs
mov
int3
scas
cmc
inc
cs
sub
mov
xchg
or
les
cs
bound
mov
lods
cwde
or
sbb
pop
fld
mov
cli
sub
inc
or
add
cmp
retf
and
rcr
push
push
mov
and
mov
movs
dec
xor
mov
or
mov
fs
cs
pushf
mov
mov
nop
rol
and
push
in
mov
mov
sub
enter
push
sbb
or
fsub
jmp
aas
cs
gs
out
xor
jge
imul
sub
int3
test
out
xor
sbb
movs
or
pop
sub
jno
jo
push
popf
push
mov
outs
nop
jl
cwde
int
pop
or
pop
cs
mov
cs
jmp
cs
stc
xchg
test
mov
mov
test
inc
dec
push
popa
mov
fld
test
cmp
sbb
cs
and
mov
scas
lahf
push
sub
call
cs
enter
mov
cs
fsubr
mov
stos
call
push
pextrw
jo
push
pop
ss
jns
xor
out
daa
pop
stos
cs
push
movs
aaa
stc
leave
ror
cs
jmp
pop
cs
inc
jae
cs
mov
cs
add
outs
pop
addr16
and
(bad)
fcom
retf
loop
mov
xor
cs
pop
fdiv
cs
mov
nop
loope
ds
push
je
sahf
cs
cs
mov
loop
xchg
dec
xlat
mov
call
div
push
xlat
cmp
jno
add
cs
leave
sar
or
js
mov
jg
sub
jns
add
sbb
cdq
cs
xchg
xchg
cs
test
xchg
dec
ins
cs
rcl
or
or
ins
cs
test
sbb
jmp
xor
cs
cs
add
cs
cs
imul
loopne
arpl
cs
sub
adc
cs
(bad)
ror
xor
cs
aaa
test
cs
cs
xor
sbb
arpl
cs
jo
jb
cs
cs
jns
push
(bad)
cs
push
das
mov
mov
das
mov
and
lea
pop
xchg
cs
clc
movs
lahf
adc
sahf
adc
lea
cmps
add
dec
cs
cs
fwait
cs
push
cs
ret
cs
loope
xchg
out
add
mov
cs
cs
or
xor
stos
int
cs
enter
xchg
or
cs
cs
movs
pop
push
mov
push
xchg
fcmove
movs
cs
jmp
aas
cdq
or
cs
add
xchg
or
imul
cs
fld
(bad)
dec
je
es
cmp
cmp
or
ret
in
dec
fdivr
cs
ins
cs
out
cs
cs
js
fild
add
ficom
repz
call
cs
cs
cs
mov
jb
je
cs
ja
cs
rcl
push
test
int
jmp
mov
cs
cs
cs
cs
lea
jbe
and
jmp
push
cs
mov
mov
jmp
cs
test
or
lds
std
or
dec
sbb
sbb
sub
das
mov
aad
xor
loopne
cs
cs
stc
cs
push
les
xor
push
shr
mov
pop
arpl
xchg
sbb
xor
lods
ffreep
mov
imul
xor
push
push
mov
repnz
fsub
jo
mov
jae
lods
and
push
rol
sbb
loop
sub
ror
sbb
pop
sbb
test
mov
enter
cs
es
xlat
push
popa
sub
xor
sub
sub
jno
outs
sub
inc
imul
pop
cs
add
pusha
cs
xchg
cs
into
dec
mov
cdq
shl
cs
(bad)
fild
jne
sbb
add
rep
dec
mov
jae
push
data16
cmps
mov
ss
ins
pop
push
xchg
xchg
mov
(bad)
and
cmp
test
aad
in
shr
xchg
fcmove
dec
call
dec
add
in
push
mov
inc
or
ins
fsubr
jnp
fwait
cs
mov
xchg
repnz
mov
adc
cmps
mov
test
popa
stos
push
mov
xor
fcmovnbe
ds
test
adc
lea
shr
dec
jbe
dec
push
add
daa
daa
and
sahf
mov
xlat
ja
rol
pop
push
and
adc
dec
pop
outs
and
ret
sub
push
xchg
aad
cs
popa
rol
mov
pop
scas
mov
arpl
mov
adc
cmps
jne
vphaddbq
dec
mov
jnp
push
jae
cs
test
(bad)
pop
(bad)
xor
(bad)
adc
lock
jmp
mov
por
repnz
jge
mov
fistp
(bad)
lahf
leave
in
cmp
dec
sub
les
xchg
adc
add
jne
xor
retf
fcmovb
test
sbb
pop
dec
cs
leave
pop
jle
enter
retf
std
mov
mov
movs
inc
scas
outs
jmp
popa
push
xor
mov
mov
cmp
lods
dec
cs
push
mov
adc
ror
jp
sub
push
ds
cmp
dec
add
stos
jno
jb
jle
scas
pop
adc
cdq
test
clc
lods
mov
fs
jecxz
jl
mov
xchg
jp
aas
int3
push
dec
pop
cs
xchg
fnsave
mov
lock
fmul
sub
adc
clc
push
cs
adc
add
mov
sbb
xor
sub
rcl
add
mov
ret
outs
(bad)
xchg
push
shr
outs
jecxz
xchg
mov
fistp
int
cs
sbb
fsubr
aas
retf
sbb
xchg
dec
rcl
cmc
out
arpl
in
and
dec
push
lea
outs
iret
push
cs
mov
inc
mov
sub
nop
addr16
cmps
sbb
mov
neg
push
fst
jmp
ret
sbb
jecxz
aas
es
add
sub
sub
jbe
cmp
shl
aaa
and
fnsave
fcomp
xor
cmps
xchg
add
mov
xor
cmp
pop
dec
or
cs
adc
add
push
aas
pop
inc
lock
fdiv
gs
movs
xchg
xlat
ror
jecxz
adc
jmp
call
sar
aad
inc
les
daa
inc
rcr
cli
push
fldcw
mov
xchg
scas
and
lods
sar
je
ds
xchg
movs
mov
retf
leave
and
loopne
mov
add
call
(bad)
mov
mov
mov
in
leave
xor
out
add
cs
push
adc
mov
xchg
int3
stos
aad
outs
out
(bad)
jge
scas
pop
test
outs
push
mov
out
sbb
mov
and
repz
je
mov
cmp
lods
mov
imul
add
sub
out
xchg
xchg
push
lock
cli
mov
sub
leave
inc
jae
push
mov
xor
jmp
cs
daa
xor
jle
dec
cmp
daa
jle
mov
and
leave
ss
enter
mov
cmps
mov
inc
adc
pop
xor
mov
daa
cmp
adc
xor
and
test
adc
mov
sub
cmps
cmp
xlat
adc
rol
loopne
pop
imul
and
jns
and
sub
adc
scas
pop
outs
or
and
in
fisubr
jbe
fimul
mov
ins
xor
shr
xchg
gs
push
adc
dec
outs
ins
pop
scas
in
(bad)
daa
out
cmc
sub
xlat
xor
inc
shl
scas
push
sbb
test
int
mov
enter
(bad)
movs
sub
or
adc
cli
daa
xor
jb
mov
fidivr
test
leave
das
(bad)
cld
mov
cs
bound
xor
mov
fwait
mov
mov
addr16
jne
pop
dec
retf
push
(bad)
xchg
cs
or
fchs
in
cs
mov
cmps
cli
inc
or
cs
(bad)
in
dec
mov
leave
sbb
cmp
sub
adc
and
ret
xchg
out
push
jle
js
out
(bad)
cmp
xor
add
out
mov
xor
scas
mov
cmp
idiv
ja
cs
loop
push
shr
mov
(bad)
jbe
sub
stc
mov
mov
mov
lahf
mov
xor
(bad)
call
lds
bound
scas
es
xor
or
xchg
jno
add
out
pop
adc
xor
int
adc
cmp
and
shr
aaa
and
ret
mov
(bad)
push
push
out
and
inc
mov
mov
std
or
adc
jmp
add
dec
mov
mov
add
arpl
mov
outs
aam
leave
or
outs
add
repz
cs
mov
leave
cs
pop
jecxz
aad
call
retf
dec
xor
push
cmp
sub
xor
mov
hlt
push
and
mov
sub
push
mov
pop
cs
mov
test
and
loopne
(bad)
mov
test
or
pop
cmp
es
(bad)
fisttp
cmp
adc
adc
inc
aas
sub
pop
scas
push
fwait
jg
jnp
pop
popa
adc
mov
retf
cmps
lock
and
mov
and
repz
xlat
mov
add
dec
cmps
push
sub
inc
and
pop
(bad)
xchg
not
ins
jle
leave
xor
and
dec
inc
ja
cs
scas
test
(bad)
cs
(bad)
loopne
aam
(bad)
cs
test
loop
cmp
ins
loopne
pop
mov
adc
push
add
pop
cs
in
(bad)
xor
(bad)
mov
push
pushf
sub
xor
rol
addr16
das
sbb
ror
adc
cs
lods
xchg
push
test
movs
dec
gs
and
mov
cmps
lds
nop
ret
pop
cmp
out
jmp
ucomiss
mov
rol
repz
push
retf
movs
sub
ret
leave
mov
and
pop
adc
and
mov
cs
push
or
xor
inc
xor
test
retf
in
loopne
cs
aad
push
lea
mov
mov
loope
and
push
stc
cs
je
pop
pop
mov
jne
jae
scas
dec
(bad)
lahf
int3
js
jb
ds
pop
sar
cwde
out
push
and
imul
repnz
(bad)
fist
adc
bound
test
sub
sbb
cmps
daa
cdq
retf
push
dec
fidivr
add
repz
in
stos
movs
jmp
or
dec
jno
xor
hlt
sti
js
xchg
out
and
inc
daa
out
jb
lds
sub
push
cs
lea
xor
sub
iret
into
cmp
rcl
mov
out
cdq
adc
hlt
into
xchg
mov
jno
xchg
mov
sub
scas
jae
mov
sahf
(bad)
aaa
push
les
mov
aam
xor
fdiv
scas
test
int
fiadd
xor
inc
mov
xchg
fnsave
in
popa
or
and
daa
ja
pop
inc
imul
cdq
rol
out
xchg
addr16
scas
movs
lods
xchg
jmp
mov
add
imul
cld
rol
ds
imul
xor
pusha
lahf
bound
gs
push
test
mov
mov
ror
not
inc
or
and
scas
ja
repz
leave
mov
mov
mov
ja
sbb
stos
xor
test
mov
lods
outs
(bad)
xchg
adc
mov
adc
pop
(bad)
jnp
leave
push
cmp
xchg
(bad)
shl
push
xchg
aaa
scas
add
sahf
dec
mov
and
jmp
popf
cmps
jmp
into
cmps
add
cs
retf
lods
out
pop
lock
dec
push
cli
xor
sub
cmp
bsf
js
adc
loope
or
daa
push
(bad)
sar
js
sub
cld
idiv
or
pop
ins
cs
aaa
and
cs
cs
or
ror
std
add
shl
rcl
pop
and
shr
jbe
jb
adc
cs
das
jns
mov
sbb
outs
in
mov
cs
fmul
xchg
gs
xor
iret
fnstcw
(bad)
std
mov
mov
cs
cld
mov
push
cs
and
mov
es
and
sub
fwait
jge
ins
xor
sub
dec
mov
sub
cmps
pop
(bad)
cmps
mov
xchg
pop
cs
mov
or
fnstenv
aaa
(bad)
mov
in
ins
scas
sbb
mov
sub
shl
leave
push
cs
inc
loope
rcl
push
daa
mov
ds
push
outs
cs
xor
lods
dec
int
fidivr
or
mov
cmp
lods
pop
ss
loop
or
popa
xchg
xchg
push
arpl
out
fwait
xor
jae
aas
icebp
mov
pop
outs
movs
mov
xchg
mov
cwde
push
add
sbb
mov
dec
inc
sub
ror
mov
imul
mov
mov
test
mov
sub
inc
clc
pop
and
mov
retf
lock
and
sub
or
stc
jmp
xor
(bad)
idiv
sub
add
data16
adc
push
inc
adc
cs
les
outs
mov
push
sub
jmp
sub
adc
pop
and
adc
sub
cs
mov
or
nop
sbb
aam
push
iret
cs
stos
xor
cli
popa
scas
and
cwde
mov
(bad)
mov
shr
aaa
les
bound
cmps
and
es
aam
mov
push
jnp
mov
jne
outs
mov
(bad)
mov
mov
or
cmps
in
mov
cs
mov
sub
jge
sub
jp
adc
push
cmp
in
out
lahf
stos
sti
adc
pop
and
dec
push
cli
xor
fwait
(bad)
xchg
sub
pop
mov
hlt
push
cmp
or
pop
or
cs
mov
sbb
outs
push
sti
ret
pop
sahf
push
mov
sub
sub
in
movs
int
lods
xor
mov
pop
shr
or
bound
push
cmp
or
mov
pop
loopne
repz
mov
imul
pop
sbb
rcr
cmp
sub
mov
in
add
cmps
inc
adc
rol
xchg
jnp
adc
pop
ja
movs
fisubr
add
aam
xchg
or
xor
mov
shl
cs
test
mov
in
out
cs
loopne
pop
int3
xor
xor
mov
inc
push
mov
pop
cmp
mov
and
ins
dec
enter
rcr
out
das
xlat
and
scas
(bad)
(bad)
fldenv
cmp
stos
push
dec
test
xor
jbe
pop
aad
cdq
ret
push
cs
push
add
test
int
popf
retf
shr
scas
sbb
cs
mov
lods
cs
int
pop
fwait
cmps
mov
add
jge
(bad)
mov
enter
mov
mov
cwde
sar
out
jle
pop
dec
arpl
add
push
je
dec
movs
xor
je
test
fsub
mov
cli
xchg
stos
lods
int3
pop
sub
adc
push
push
rcr
int
cdq
outs
cmps
into
ds
sbb
and
inc
stos
call
mov
popf
std
(bad)
retf
push
out
fninit
cs
jmp
mov
out
fsub
push
scas
fsubr
fwait
push
(bad)
or
mov
test
ror
push
push
leave
test
sar
imul
scas
push
leave
int
jo
cmps
jecxz
add
cmps
fisubr
push
les
pop
ss
pop
das
push
mov
push
xor
fsubp
xchg
bound
mov
mov
sbb
aam
push
(bad)
xor
mov
cli
lock
mov
push
(bad)
inc
test
cmp
sub
and
cmc
dec
jmp
aam
cmpxchg
aad
dec
out
sub
out
lds
mov
and
les
js
xchg
fmul
stos
or
push
cmp
pop
daa
dec
fwait
push
(bad)
push
push
cmp
push
int
cmp
mov
lahf
(bad)
pop
lea
retf
scas
sbb
pusha
stos
sub
sahf
inc
cs
in
fmul
adc
cs
add
or
sub
and
sub
jp
inc
arpl
adc
pop
jle
mov
push
push
cs
mov
xor
mov
les
cs
mov
mov
mov
out
adc
popa
xchg
(bad)
data16
jp
rol
fld
xor
sub
cmc
and
xchg
les
outs
aas
dec
hlt
adc
rol
cs
test
mov
movs
push
sahf
sub
enter
(bad)
call
sub
push
loope
dec
cmps
xor
and
out
add
pop
jle
mov
mov
mov
cmp
xchg
mov
cmp
xor
out
(bad)
jle
loop
jmp
xor
stc
sbb
fcomp
int3
cmps
dec
pop
xor
dec
lahf
rcl
add
cmc
fcomp
mov
cs
ins
jbe
adc
cs
dec
xor
leave
or
repz
sub
cmp
fiadd
test
sub
es
pop
in
aas
xchg
rcr
out
loop
bound
xor
mov
mov
sub
fiadd
jne
fstp
outs
call
and
cmp
and
push
shl
dec
fdecstp
sti
(bad)
sbb
imul
lods
cmc
daa
call
icebp
movs
adc
out
dec
aad
shl
cmp
(bad)
pop
or
sub
cmp
fptan
sub
mov
cs
add
inc
pop
push
inc
jb
int3
(bad)
mov
rcl
fmul
inc
retf
nop
jecxz
out
add
in
inc
jg
ret
cmp
loop
pop
dec
arpl
push
pop
push
jno
dec
ja
mov
test
cmps
xor
or
adc
fidivr
lods
cs
mov
stos
js
ret
(bad)
xchg
imul
adc
fild
daa
sub
inc
jp
sbb
cs
(bad)
adc
push
loope
fidivr
out
cs
outs
cs
je
jl
mov
fcomp
jg
jnp
nop
and
(bad)
out
movs
aad
sub
aaa
imul
std
fidivr
push
xor
and
inc
dec
int
js
sbb
lods
out
mov
push
ja
and
iret
mov
(bad)
pop
dec
pop
and
daa
imul
jp
push
cmp
cmp
pushf
xchg
or
mov
pusha
in
pop
cs
retf
adc
push
les
pop
mov
xchg
cmp
jmp
sbb
sub
jo
jno
movs
sbb
test
push
push
imul
rcr
mov
imul
cmp
dec
ret
sub
adc
pop
sbb
inc
js
lods
inc
xchg
fs
mov
xchg
inc
jbe
mov
in
cs
pop
into
sbb
pushf
pop
dec
pop
push
or
in
sti
test
jle
shr
jg
lds
loope
fnstsw
xchg
fucomi
arpl
mov
push
mov
(bad)
dec
pusha
(bad)
jb
xchg
aas
xor
out
rcr
mov
rcl
(bad)
imul
inc
scas
sbb
cs
ins
push
test
test
stos
stos
mov
jae
xchg
sub
(bad)
out
mov
pop
sub
xchg
fnstcw
push
pop
pop
outs
loop
dec
xor
jne
iret
lods
ins
mov
pop
jl
inc
dec
dec
or
sbb
outs
scas
mov
out
fist
xchg
or
sar
mov
fild
inc
inc
imul
xor
inc
repz
movs
adc
test
inc
pop
mov
pop
jnp
lock
imul
mov
jge
nop
je
out
jle
dec
dec
ss
fidivr
and
(bad)
bswap
jmp
movs
je
add
cmc
adc
leave
pminsw
fimul
adc
shr
push
add
(bad)
adc
fadd
lods
mov
rcl
xchg
outs
sbb
mov
aam
mov
pop
sub
adc
mov
stc
sbb
(bad)
fsubr
push
leave
dec
sub
test
or
mov
es
sub
cwde
fmul
xor
es
stos
add
cmps
dec
push
mov
test
add
leave
push
sbb
sub
jbe
mov
mov
xchg
lock
enter
into
leave
jnp
and
lock
leave
fstp
fnstsw
jmp
and
(bad)
sbb
aam
push
test
les
pop
mov
sbb
lahf
xor
(bad)
in
test
mov
stos
cmp
xchg
lods
sahf
pop
inc
sub
xchg
mov
fs
lods
leave
outs
shl
and
ja
int3
inc
jmp
mov
daa
(bad)
scas
aam
mov
adc
pusha
push
push
xchg
sbb
call
or
int3
das
out
xor
dec
leave
mov
jo
sub
mov
call
aas
push
aas
out
outs
xchg
cmp
leavew
inc
jl
cld
sub
xchg
push
mov
fnstsw
test
push
rcl
mov
xchg
and
mov
lods
out
leave
dec
(bad)
xchg
movs
jne
dec
sbb
lea
pop
sub
mov
mov
mov
sbb
hlt
les
mov
rol
sub
fld
mov
xor
and
in
xchg
les
and
hlt
rol
rol
sbb
mov
movs
stos
mov
push
cmpps
mov
cs
adc
add
outs
inc
scas
and
jmp
xor
js
jle
icebp
(bad)
arpl
daa
and
daa
pop
push
(bad)
mov
xchg
scas
daa
ins
xor
dec
rol
fs
xor
mov
mov
ficom
mov
cs
inc
imul
xor
or
xor
(bad)
cs
jl
add
dec
or
dec
loopne
call
in
retf
cwde
sar
mov
pop
jo
jnp
adc
lea
ror
(bad)
mov
push
and
fbstp
std
jb
call
enter
jecxz
sub
xor
stc
mov
out
mov
mov
xchg
jle
dec
ror
out
cli
call
mov
push
movs
xor
enter
push
bound
and
sub
stc
mov
fist
outs
cmps
js
cs
xor
adc
mov
dec
sub
hlt
enter
push
ja
sub
shr
mov
dec
mov
call
scas
sbb
paddb
aad
mov
push
pop
mov
outs
stos
cwde
fldcw
fld
retf
cmc
push
pop
push
adc
stc
push
push
cvtdq2ps
pop
cmp
sub
leave
(bad)
jmp
mov
in
sub
jge
loop
sub
inc
imul
test
cmp
lea
ja
stc
mov
fisub
retf
vcvtsd2ss
dec
gs
loope
cmp
dec
fs
push
mov
loope
retf
mov
shl
dec
(bad)
push
addr16
xchg
shr
int
fdivr
outs
fld
retf
sub
enter
push
rcr
jl
or
aam
xor
jno
sbb
dec
shr
or
stos
cmp
test
mov
and
imul
inc
clc
fisubr
jne
jo
outs
sub
fdivr
scas
add
xor
xlat
std
xchg
mov
sti
ret
leave
cmps
xchg
jl
rcr
and
sahf
push
movs
pop
adc
pop
mov
mov
push
add
push
out
mov
dec
and
and
cmp
cs
jmp
adc
fwait
mov
mov
mov
mov
xor
ss
add
adc
cmp
inc
neg
mov
jle
ja
add
pushf
sbb
mov
leave
nop
xor
and
xchg
dec
dec
mov
mov
sbb
xor
adc
xor
xor
inc
cwde
shr
xchg
shl
fs
cmps
js
push
or
les
ret
mov
add
push
or
sbb
sbb
mov
mov
into
mov
cmp
cmc
stos
mov
(bad)
sahf
fldcw
xchg
cmps
neg
stc
in
scas
in
mov
loope
cmps
out
cs
arpl
dec
or
pusha
cs
test
cld
outs
fwait
mov
ja
mov
push
push
sbb
cs
nop
retf
or
imul
or
pop
scas
sha1msg1
mov
imul
lods
ins
sbb
lods
jp
jmp
into
js
cmp
popf
mov
dec
pop
int
jmp
and
call
js
lahf
out
xlat
cs
fxch
shl
push
in
jg
cdq
add
push
or
popa
stos
div
cs
scas
les
aad
in
mov
cmp
loopne
and
ss
and
mov
and
daa
in
or
pop
cs
lahf
xor
mov
pop
dec
cmp
out
test
push
call
lds
dec
mov
daa
movs
pop
nop
add
push
addr16
jmp
sub
dec
adc
push
and
mov
adc
cmp
mov
cmp
lds
shl
sbb
adc
pop
outs
jmp
cmp
mov
jns
or
mov
loopne
and
xor
dec
cs
(bad)
cs
inc
mov
fsubr
lock
and
cs
stos
(bad)
outs
daa
fimul
hlt
(bad)
and
xor
in
retf
mov
or
imul
cmovp
test
dec
jp
adc
movs
adc
aaa
xchg
loop
mov
xor
xchg
fwait
scas
sar
mov
pop
add
xlat
out
pop
jg
(bad)
dec
push
and
ins
loope
push
sahf
sbb
adc
in
(bad)
out
mov
fimul
fisttp
arpl
test
mov
dec
loope
(bad)
jle
aaa
in
mov
mov
cs
pushf
rcl
and
cs
jae
cmps
mov
shl
mov
xor
mov
mov
cmps
xor
sar
dec
add
repnz
xchg
inc
enter
mov
mov
lahf
xor
ja
adc
jo
scas
cmp
mov
jae
dec
icebp
pop
ds
jnp
lock
jno
(bad)
and
pop
sub
sub
test
lea
pop
mov
cmp
lock
inc
out
ja
retf
add
jae
ret
and
xor
(bad)
aam
and
es
jmp
cmps
iret
push
call
mov
cmp
and
hlt
enter
loopne
scas
mov
movs
and
test
cli
and
ja
popf
jl
daa
dec
stos
jne
stc
nop
inc
jns
fisttp
mov
sbb
push
das
mov
and
pop
outs
jmp
out
add
push
test
push
cmp
xlat
pop
rcl
mov
adc
shl
aaa
test
jo
xchg
pop
push
stos
shl
mov
(bad)
and
call
cmp
mov
jns
stos
movs
call
xchg
mov
push
(bad)
aam
jp
adc
inc
fidivr
inc
jle
mov
pop
movs
adc
aaa
(bad)
cmp
dec
xor
shl
adc
xchg
fisttp
mov
pop
(bad)
and
mov
leave
add
sahf
push
iret
xor
xchg
jo
idiv
mov
dec
aaa
leave
cmp
lock
cmps
xlat
jl
mov
and
add
ror
outs
jb
push
call
pop
mul
xlat
test
lods
cwde
dec
jmp
mov
ret
mov
fsub
jae
jo
mov
imul
stos
es
sub
pushf
jnp
(bad)
jp
fadd
xchg
ds
ja
sub
mul
sub
scas
fwait
and
xchg
cmp
pusha
jno
sub
repz
push
fmulp
dec
mov
xchg
mov
aad
lods
daa
ror
hlt
call
push
cs
(bad)
in
scas
inc
add
cs
es
cs
call
pop
cs
push
pop
jns
loope
popa
fs
jne
push
cdq
cs
cmp
cs
je
add
cs
sub
sub
sub
ret
mov
(bad)
scas
and
push
out
xchg
cmp
daa
mov
call
ins
or
out
in
adc
stos
pop
aaa
test
pop
jle
rsqrtps
pop
imul
outs
cwde
or
leave
add
cmp
stos
sub
scas
cdq
jl
sub
pop
ins
push
adc
cs
scas
in
adc
pusha
mov
and
imul
sub
pop
outs
pusha
push
xor
stc
icebp
xor
pop
dec
inc
mov
aaa
pushf
outs
inc
mov
dec
cs
push
stc
int
idiv
fs
ja
cs
cmc
add
repnz
and
sbb
jmp
fadd
fstp
and
rcl
cmc
inc
adc
bound
cs
aam
lods
call
dec
shl
repnz
div
adc
scas
popa
mov
xor
int
ss
cdq
ret
and
jnp
loop
shr
stc
or
push
stos
push
pop
jbe
mov
je
sub
std
sti
cmc
dec
mov
lods
icebp
add
es
xchg
cmp
out
rol
inc
lock
jle
out
das
lds
push
outs
mov
aas
out
shr
xchg
xor
int
mov
gs
ins
or
sbb
lock
hlt
adc
cmp
stos
xchg
add
les
ins
in
movs
cs
pushf
test
pusha
adc
ins
mov
add
scas
push
pslld
cmp
push
mov
and
xor
scas
and
cs
je
das
jo
sub
mov
sub
dec
adc
pop
dec
pop
aaa
mov
scas
ins
mov
and
mov
xor
ficom
ins
mov
mov
xor
pop
push
pop
sbb
int
mov
std
push
lock
scas
(bad)
stos
out
sub
or
outs
dec
cs
adc
test
dec
xor
pusha
xor
outs
pop
aas
ret
xor
inc
xor
cli
js
jmp
(bad)
iret
push
cs
stos
sbb
cs
shl
dec
sub
lods
xchg
or
sub
cmps
inc
es
cmp
movs
pop
out
repnz
call
outs
cmc
pop
in
in
pop
es
dec
rcl
inc
mov
das
lahf
out
push
push
pop
inc
sbb
mov
or
push
test
sub
add
push
cmps
gs
xor
sub
sbb
mov
jge
fidiv
and
pop
jmp
cmc
aaa
cld
imul
pop
mov
into
pop
or
aam
clc
cmp
push
jmp
je
push
jb
jns
ss
mov
dec
push
xor
(bad)
fsubr
pop
push
scas
mov
enter
retf
cmps
pop
cs
js
pop
sbb
push
ins
push
mov
or
sub
cmps
dec
jbe
int
xor
push
shr
daa
xchg
jnp
and
or
jne
cmp
xor
or
fistp
into
jae
cs
add
mov
popa
jnp
jbe
(bad)
inc
lods
pop
cs
pusha
scas
sbb
mov
push
clc
add
loop
lods
push
mov
sub
sbb
jo
xchg
loop
sub
and
in
cs
mov
cwde
adc
cs
movs
ds
aaa
fwait
js
sqrtps
stos
int3
out
xor
cmp
add
mov
jge
cmps
and
sub
jnp
sub
(bad)
ucomiss
pop
cmps
jge
pop
scas
lods
sub
daa
fidiv
stos
cdq
aas
mov
sar
in
inc
add
push
xor
xor
cs
test
stos
sahf
sub
mov
pop
test
push
dec
sub
xchg
jp
out
jnp
(bad)
cld
jo
mov
retf
scas
jns
inc
mov
mov
xlat
mov
mov
into
xor
shl
xor
push
inc
out
inc
pop
ins
mov
std
mov
push
xor
cs
sbb
mov
rcl
movs
push
xor
sbb
mov
test
lock
dec
cs
in
jecxz
jg
or
stos
adc
(bad)
mov
popa
or
int
out
ins
(bad)
or
mov
mov
out
xor
test
lods
adc
fmul
adc
data16
fsubr
cwde
mov
stc
data16
js
mov
dec
sbb
and
add
or
or
lds
push
jnp
ja
jmp
mov
xor
sub
mov
div
mov
pop
sar
adc
retf
loopne
xor
(bad)
inc
out
sbb
daa
hlt
add
stc
(bad)
daa
push
sub
cs
or
test
jo
test
jne
call
mov
sar
daa
sbb
retf
sahf
xchg
out
ja
cs
aad
shr
jnp
mov
jmp
pop
cmp
and
sbb
push
xor
sbb
cmp
lods
or
xor
dec
ins
(bad)
fisub
sub
jnp
push
xor
jne
in
jne
mov
push
sbb
movs
jle
lods
xlat
test
or
mov
cmp
push
out
and
cld
jmp
fidivr
jnp
pop
mov
(bad)
push
in
sub
adc
dec
(bad)
push
mov
sub
xor
cmp
push
mov
aas
sbb
ins
and
outs
sub
xor
popf
jns
and
fiadd
movs
aaa
test
jmp
inc
xor
dec
cs
stc
inc
jmp
lea
call
bt
cmc
bt
clc
sub
jmp
add
dec
outs
arpl
inc
ins
ins
outs
arpl
mov
push
push
pushf
push
ret
xchg
jno
ss
dec
xor
and
jecxz
dec
add
lea
mov
imul
(bad)
mov
xchg
ins
stos
(bad)
mov
mov
or
mov
enter
test
xor
pop
pop
retf
inc
sbb
stos
stc
sbb
xchg
shl
faddp
add
xchg
xor
out
add
and
cdq
lea
ja
call
mov
lahf
mov
ds
dec
or
pushf
mov
loopne
jo
sub
pop
pop
fistp
inc
add
sbb
gs
xchg
or
rcr
add
sti
mov
dec
nop
mov
xor
adc
push
pusha
sub
movs
hlt
mov
pop
cmp
call
adc
icebp
test
sub
cmp
mov
xchg
(bad)
repnz
movs
cmc
sub
(bad)
sbb
test
jae
lods
pop
fimul
sbb
(bad)
std
mov
sub
dec
jge
jp
push
psubd
shl
sub
mov
in
in
popf
int
sub
das
dec
shr
loopne
jge
jae
jmp
addr16
cmps
xchg
add
loopne
dec
fist
das
jg
adc
test
idiv
dec
xor
push
aas
jae
gs
popa
and
jno
int
mov
movs
mov
dec
ret
imul
xchg
ins
xor
dec
or
mov
and
ja
push
push
pusha
inc
lea
jmp
loop
xor
popa
dec
pop
xor
and
xchg
mov
sbb
xchg
or
adc
inc
bound
sub
es
jo
fnstenv
cmp
push
mov
mov
jo
sti
sub
test
xor
inc
in
outs
out
or
pop
jno
dec
jmp
inc
xor
sbb
popa
das
inc
mov
popa
pop
pop
xchg
mov
mov
data16
dec
and
imul
outs
test
sub
cmp
movs
push
push
adc
pop
pop
pusha
dec
inc
inc
pop
push
popa
pop
mov
inc
dec
cmp
ja
clc
ss
pop
pop
dec
dec
xlat
and
stc
xchg
xor
sub
adc
sub
test
pop
inc
sub
cmp
and
or
mov
sub
or
inc
push
call
and
push
sbb
push
mov
jmp
out
push
cs
pusha
inc
sbb
cmps
push
dec
push
dec
sbb
shl
xor
inc
dec
add
mov
pop
mov
jnp
pop
ins
into
into
in
jno
(bad)
sbb
jb
ds
bound
jp
gs
es
jge
fnop
lahf
cmp
iret
aas
jp
call
fist
je
jno
enter
cmp
jo
cmp
or
cmp
push
leave
and
movs
push
mov
and
add
and
shl
jmp
sub
sub
and
and
inc
inc
cmp
cmp
cmp
xor
xor
adc
or
or
or
add
add
and
sbb
sbb
sbb
adc
adc
jno
imul
ins
imul
cs
add
js
jb
cs
dec
push
push
dec
dec
dec
cs
inc
inc
dec
dec
inc
inc
inc
mov
pusha
cs
pop
push
push
pop
sub
push
push
push
scas
scas
dec
add
shl
lahf
out
sub
inc
adc
ret
push
adc
or
dec
pop
push
push
dec
mov
push
ja
xor
push
jae
add
data16
hlt
jo
fiadd
mov
xor
test
xor
and
push
adc
dec
xor
inc
pop
nop
xor
gs
add
cmps
xor
xor
xor
mov
fnstcw
cmp
and
xor
xor
xchg
xor
or
xor
add
inc
cs
mov
stos
stos
lods
lods
cmps
cmps
test
movs
mov
mov
cs
mov
(bad)
mov
mov
add
mov
pushf
xchg
cs
cdq
cwde
xchg
xchg
xchg
xchg
out
cs
icebp
lock
in
in
out
out
call
jmp
inc
add
cli
std
cld
imul
idiv
clc
repz
hlt
iret
cs
rcl
retf
retf
(bad)
cs
leave
enter
(bad)
fild
fsubp
loopne
fcmovu
(bad)
cs
(bad)
rcl
aad
das
mov
or
imul
scas
jge
out
jmp
scas
pop
aaa
lods
jo
(bad)
sbb
into
pop
into
inc
jmp
scas
push
aad
fdiv
sub
sub
ds
loop
ins
xor
or
adc
push
or
push
xor
push
je
push
pop
push
rcl
cli
dec
inc
int
sub
pop
jecxz
sub
ins
pop
adc
stos
aas
scas
ins
inc
dec
bound
sbb
dec
adc
gs
arpl
icebp
xor
mov
and
dec
push
int3
cdq
fimul
add
ins
inc
pop
outs
xor
(bad)
es
pop
outs
jl
mov
imul
icebp
sub
adc
push
dec
pop
jle
movs
xor
pop
sbb
inc
jmp
sub
pushf
out
aad
mov
xor
icebp
cwde
dec
inc
dec
push
xchg
lock
out
or
push
jg
add
aas
jmp
imul
gs
cmp
sbb
push
inc
jno
xor
push
pop
addr16
dec
dec
inc
arpl
inc
ret
pop
mov
xor
or
and
(bad)
pop
ret
fist
ds
outs
add
jl
inc
dec
push
xchg
push
neg
sar
sub
pop
inc
into
add
jle
mov
inc
or
xchg
je
pop
xchg
retf
xor
inc
sbb
jne
xchg
es
test
add
test
push
jno
cmps
cmp
gs
push
mov
inc
mov
dec
sbb
dec
push
mov
aaa
dec
pop
jmp
pop
dec
or
push
fisub
dec
cmp
jp
dec
push
dec
or
push
pop
inc
adc
pop
pop
mov
add
imul
das
add
dec
or
dec
xchg
mov
addr16
push
mov
mov
cs
push
push
pop
les
or
jp
xchg
mov
inc
sbb
call
gs
mov
adc
ret
dec
(bad)
sub
pop
xor
retf
add
jl
cmps
and
cmp
imul
pop
nop
cmp
or
cdq
sub
mov
push
nop
dec
mov
and
stos
mov
push
push
mov
mov
mov
push
and
test
int3
push
rcr
popa
test
dec
popf
push
mov
push
pop
dec
out
movs
push
xchg
sub
add
sbb
pop
dec
jl
or
pop
mov
retf
dec
shl
sbb
scas
ret
adc
or
sbb
push
ins
cmp
pop
loopne
inc
push
push
ret
push
push
mov
int
imul
(bad)
or
(bad)
fisttp
movs
das
fcomp
int
jmp
sbb
js
push
sti
sbb
test
add
fidiv
sbb
(bad)
jl
inc
loop
inc
add
sbb
xchg
or
jbe
stos
jne
in
or
and
inc
imul
dec
inc
lock
add
pushf
dec
add
int3
imul
ds
(bad)
stc
(bad)
push
sub
jne
xor
adc
je
cli
repz
leave
shr
jl
adc
push
sbb
xchg
jb
adc
sbb
add
jle
jno
mov
movs
dec
push
jle
push
mov
ss
dec
dec
jb
into
sub
scas
pop
lods
pop
mov
inc
sub
fidiv
mov
in
or
rcl
jle
cmps
jbe
xor
pop
push
jns
data16
add
cld
pop
xor
(bad)
pusha
in
or
movs
add
out
and
imul
and
out
pop
sar
mov
inc
mov
dec
sub
push
gs
xchg
sub
sub
pop
xor
out
(bad)
jle
sbb
mov
dec
mov
fs
pop
pusha
and
jl
and
inc
ins
cmp
sub
push
cmps
jp
inc
jno
xchg
dec
jmp
dec
push
ins
dec
repz
retf
int
and
es
jbe
jp
bound
pushw
popa
pop
cmps
push
push
adc
dec
push
dec
fstp
ins
ins
xchg
sub
inc
mov
ja
dec
fsub
and
or
cld
adc
jnp
es
sub
or
pop
jecxz
dec
or
js
cmps
and
inc
sbb
mov
scas
lds
jmp
inc
test
jecxz
push
mov
push
and
cmp
xlat
lods
push
xor
xor
aas
bound
ds
lods
scas
pusha
mov
daa
fild
push
ss
cmc
mov
sub
push
add
inc
call
sub
or
inc
cmp
mov
jp
push
mov
and
ss
and
adc
cmp
jno
mov
or
fadd
call
push
rcr
ds
pop
mov
cmps
es
push
pop
xor
ds
(bad)
jmp
pop
lea
call
(bad)
rcr
dec
or
or
fisub
frstor
push
pop
push
gs
ds
ss
jbe
lods
arpl
lock
(bad)
lods
std
pusha
push
cmp
pop
ds
loope
fld
jmp
cmp
repz
push
cmp
dec
push
dec
dec
push
call
ds
xchg
call
in
push
std
add
call
jle
sbb
push
xchg
movs
inc
xchg
inc
push
pop
cmp
mov
call
push
lds
jp
sub
cmp
(bad)
pusha
mov
rol
adc
ret
setp
inc
pop
push
mov
inc
cmp
pop
mov
cmp
dec
loope
test
xchg
adc
ds
pop
cmp
mov
adc
inc
sub
pop
mov
and
bound
xor
cwde
pop
mov
inc
adc
cmp
inc
cli
push
mov
ins
popf
xor
dec
sub
jge
sub
bound
pop
iret
add
std
outs
pop
dec
xchg
cmp
idiv
pop
fnstcw
inc
cmp
addps
dec
cmp
ins
cmp
xchg
sub
push
call
jo
mov
das
cmp
push
pop
pop
cmp
(bad)
or
ins
fs
jge
retf
(bad)
mov
xchg
out
mov
imul
addr16
xor
xchg
mov
inc
mov
xchg
jnp
mov
call
sbb
outs
mov
push
movs
jp
es
into
sub
call
scas
cli
xchg
push
cmps
cmps
mov
sahf
cmps
mov
addr16
push
and
out
mov
and
sahf
adc
call
scas
xor
push
lods
scas
es
outs
fiadd
mov
or
jmp
cmp
stc
jp
push
xchg
scas
push
jg
or
xchg
in
inc
jle
es
push
jnp
jle
add
gs
cmp
(bad)
rol
pop
je
ins
cmp
into
push
es
call
gs
adc
call
mov
xchg
jb
es
push
mov
sub
jns
cmp
lods
jbe
mul
ror
not
mov
cmp
es
out
dec
mov
in
test
fidivr
es
mov
ss
bound
sahf
test
xchg
out
mov
arpl
mov
mov
outs
jnp
adc
jle
out
inc
inc
inc
mov
cmp
mov
(bad)
aad
jle
mov
addr16
adc
popa
jp
icebp
(bad)
bound
mov
add
or
in
add
push
daa
ds
into
es
xchg
(bad)
pop
xor
imul
sub
or
xor
push
fdivr
adc
jns
icebp
sbb
es
mov
mov
sub
imul
dec
mov
jp
or
jg
jnp
test
out
and
push
dec
lods
dec
imul
addr16
and
sub
pop
pop
mov
addr16
gs
jmp
(bad)
push
jno
cli
ins
sbb
and
popf
out
lds
pusha
dec
inc
les
mov
push
imul
and
fld
cmc
bound
por
xor
out
retfw
gs
lods
pop
fisubr
nop
aad
jnp
cmovge
loope
and
pop
pop
call
cld
into
and
push
pop
jl
ins
jmp
push
pop
fstp
xchg
arpl
mov
mov
jl
fs
mov
dec
or
scas
mov
push
jo
jle
dec
dec
pop
(bad)
inc
cmp
or
in
inc
ror
jl
js
xor
lds
mov
data16
mov
adc
into
fdivr
mov
mov
jae
xchg
arpl
lods
mov
jns
and
sub
xor
xor
cmp
mov
jmp
or
sbb
dec
es
dec
inc
fisubr
popf
pusha
cld
jmp
xchg
mov
mul
jle
outs
clc
jno
pop
gs
mov
fneni(8087
dec
cmps
enter
out
cmp
iret
loopne
pop
jle
imul
pop
xchg
scas
(bad)
outs
pop
mov
dec
xchg
adc
dec
cwde
test
fsubr
pop
dec
sbb
addr16
retw
clc
mov
ja
and
je
es
inc
or
adc
sub
mov
shr
adc
push
push
retf
xchg
imul
push
adc
or
inc
repz
adc
leave
cmp
add
sbb
call
jo
in
data16
lahf
sbb
adc
cmps
adc
add
out
push
dec
sbb
loop
dec
cmp
aaa
adc
sub
pop
cmp
sbb
inc
push
adc
adc
push
mov
and
add
or
cmp
and
inc
imul
push
sbb
push
sub
test
inc
ficomp
adc
push
cli
cmps
scas
sbb
xor
neg
sub
add
loop
sahf
pop
cmp
jmp
xchg
adc
xchg
push
sahf
test
mov
jbe
and
mov
push
scas
test
pop
pop
rol
push
dec
test
jp
jle
bound
pushw
outs
test
sbb
rol
push
push
ds
xor
or
jmp
push
push
or
cmps
retf
out
adc
bound
or
push
shl
sub
mov
inc
loop
and
jb
sbb
ret
out
mov
or
push
mov
push
(bad)
jl
or
or
or
dec
pop
jg
sub
jmp
pop
shl
inc
rcr
scas
or
xor
inc
int3
add
fstp
push
mov
push
and
xchg
dec
sub
enter
sbb
imul
inc
cmp
and
push
outs
(bad)
es
add
jle
pop
pop
xchg
push
sub
pusha
into
(bad)
or
outs
imul
and
jl
jbe
cmp
dec
jl
jle
repnz
adc
jle
ss
fwait
mov
call
xor
mov
sahf
sub
(bad)
fild
xchg
xor
popf
les
test
mov
add
add
mov
lahf
pop
mov
mov
mov
mov
xchg
cli
test
push
lea
mov
stos
lahf
cmps
out
cmp
push
mov
fdiv
pop
and
jmp
pop
mov
into
sbb
cdq
movs
mov
mov
addr16
les
mov
cmps
scas
popf
pop
mov
call
(bad)
(bad)
(bad)
test
clc
loop
ffree
retf
(bad)
mov
xchg
xor
fisttp
fwait
xchg
ret
jbe
mov
test
aam
ret
outs
xor
mov
mov
ds
mov
nop
xlat
xor
add
fsub
dec
mov
(bad)
adc
sbb
sbb
xor
loope
jecxz
add
call
shr
rcr
iret
test
popf
shl
jbe
jg
mov
cmp
clc
stos
movs
popf
mov
inc
mov
repz
mov
lds
fldenv
test
out
sub
mov
mov
cmc
push
jecxz
dec
fidivr
fimul
cmp
sub
xor
aaa
xor
adc
out
and
adc
add
push
into
push
push
or
sub
and
test
in
loop
cld
fsubr
fiadd
clc
hlt
in
mov
daa
(bad)
jmp
in
out
push
ret
cmc
in
push
(bad)
pop
add
fisubr
jmp
leave
and
(bad)
(bad)
cs
xor
loopne
bound
xchg
out
xor
lods
mov
mov
shl
inc
sub
mov
xchg
movs
inc
mov
xchg
mov
xchg
call
shl
call
sub
mov
mov
cdq
ss
imul
mov
xchg
mov
shl
cmp
jne
mov
jge
sbb
jmp
mov
inc
rcr
jns
fist
mov
ret
xor
mov
mov
mov
sub
fbstp
adc
mov
mov
ret
dec
sbb
xchg
test
fld
outs
sub
aas
mov
push
jne
xchg
mov
test
cwde
xchg
sahf
mov
lds
mov
pop
cdq
out
mov
aaa
pop
and
jo
adc
mov
dec
inc
push
mov
sub
pop
and
sub
mov
test
or
sub
test
shl
fidivr
mov
mov
mov
lea
loope
mov
mov
aam
adc
movs
jb
loop
sub
adc
xor
and
jbe
xor
push
sahf
test
leave
pop
push
sub
adc
jmp
add
sub
dec
mov
(bad)
dec
xchg
lods
xor
pop
adc
adc
pusha
or
push
mov
mov
push
mov
push
stos
bound
add
mov
adc
jbe
cmps
shr
sub
cmps
jbe
xor
inc
push
sar
dec
push
push
cmps
shr
adc
push
stos
add
imul
xchg
fidiv
mov
jp
xor
mov
sbb
and
es
repnz
add
push
adc
mov
leave
fs
adc
stos
mov
push
mov
xchg
sub
jle
loope
jae
ds
or
retf
(bad)
test
outs
mov
jle
nop
not
out
loope
outs
call
jnp
mov
out
push
std
push
push
rcr
push
push
xor
test
fnstenv
push
mov
(bad)
outs
jg
cmp
pushfw
outs
xchg
in
mov
outs
stos
push
ja
mov
shl
inc
cmps
(bad)
push
in
jp
xor
or
push
bound
data16
jno
push
sub
and
inc
fidiv
push
int
add
push
jbe
jnp
cmp
shl
aas
clc
cmps
adc
push
call
adc
sub
mov
(bad)
rcr
push
mov
push
add
jno
(bad)
mov
js
outs
rcr
retf
add
dec
bnd
(bad)
bnd
mov
imul
imul
ins
xor
and
mov
xor
jle
xchg
jo
add
data16
mov
pop
int3
mov
push
outs
mov
pop
sub
loop
adc
sub
add
es
bound
rcl
retf
cmp
dec
push
pop
jmp
adc
xchg
es
(bad)
adc
or
mov
sbb
stos
xchg
into
push
mov
lea
sar
loop
xor
out
cmps
fsubp
jno
adc
push
ins
jo
pop
push
or
add
(bad)
sbb
xor
sbb
xor
loopne
sbb
or
or
pop
xor
cwde
test
mov
repnz
fs
mov
int
outs
add
xor
mov
inc
xchg
loope
ins
xor
loopne
aaa
cmps
xor
cli
imul
fstp
xchg
(bad)
pop
addr16
ror
shl
icebp
and
mov
cmps
data16
lock
inc
sub
jmp
cmp
in
es
(bad)
ror
xchg
add
cmps
adc
inc
sti
push
mul
mov
sar
(bad)
leave
and
pushf
and
pop
push
push
(bad)
pushf
push
or
stos
loopne
scas
imul
push
ret
dec
sub
adc
pop
inc
es
or
jo
fwait
sbb
mov
push
in
add
call
sub
jmp
ficomp
push
leave
je
ins
out
stos
cmp
and
mov
adc
fisubr
cmp
mov
jmp
xlat
shl
cli
cmp
pop
outs
stos
jb
jno
imul
or
outs
ds
push
ins
and
in
int
inc
push
pop
imul
lods
mov
add
nop
out
cmp
adc
jle
push
imul
mov
bound
stos
pop
jnp
inc
adc
push
cmp
nop
addr16
rcr
inc
push
out
mov
idiv
cmp
push
imul
push
inc
mov
jp
lock
pop
push
and
push
mov
adc
test
gs
iret
(bad)
lods
enter
cmp
gs
fwait
aas
aad
faddp
xchg
lahf
into
lock
pop
into
lock
jmp
out
or
iret
sub
stos
in
push
push
scas
inc
push
push
stos
cdq
jle
xor
sar
sub
push
fs
mov
mov
aaa
data16
addr16
mov
xor
xchg
dec
xchg
and
fs
ret
push
push
ins
xchg
into
les
ds
mov
ss
jb
push
jbe
shr
cmp
ds
sbb
bnd
bound
scas
or
retf
mov
xor
jmp
mov
push
int3
pop
or
sbb
inc
cmp
and
ret
repnz
jb
imul
mov
inc
jle
ins
fst
push
ins
adc
adc
push
mov
fnstsw
sahf
mov
into
xor
push
sbb
jp
outs
cmps
shr
push
mov
test
adc
cmp
out
aam
inc
lods
add
cmp
outs
aam
dec
xor
inc
push
cmp
or
in
mov
shl
push
push
out
mov
rcr
adc
(bad)
and
bound
sbb
aad
bound
sub
movs
inc
push
mov
sub
push
jle
cmps
and
clc
ins
pop
lods
data16
es
aaa
(bad)
adc
mul
add
call
fldenv
cmps
shl
xor
or
shl
sahf
int
pop
scas
shr
fsub
je
out
pop
mov
out
pop
jmp
out
push
xor
in
shl
ss
bound
ss
xor
bound
push
mov
ins
push
data16
push
mov
jnp
adc
push
cmp
call
adc
inc
mov
push
test
out
xchg
call
xor
test
cmp
pop
ds
(bad)
shr
(bad)
into
push
movs
loope
ss
data16
ds
rcl
stos
jl
cli
ret
push
mov
cmp
popa
sahf
loopne
dec
stos
cmps
es
inc
into
jbe
fmul
mov
xor
in
xchg
adc
jl
adc
sar
aad
or
call
mov
cli
push
into
ja
out
dec
out
pusha
mov
dec
test
ss
push
inc
pop
popf
mov
mov
(bad)
bndldx
add
mov
sbb
cmp
cmp
cmp
pop
xchg
lahf
adc
aam
add
(bad)
sar
movs
ins
push
sub
cmps
in
push
pop
add
rcr
inc
sbb
imul
dec
cmp
adc
add
pop
test
mov
mov
daa
mov
(bad)
pop
jns
dec
or
dec
(bad)
xchg
mov
es
sbb
xor
movs
addr16
adc
cmc
into
mov
in
test
repnz
and
loopne
and
push
sbb
shl
xor
inc
ror
inc
jnp
inc
sbb
inc
cmp
adc
cmp
and
jne
cmp
inc
shl
pop
mov
retf
cmps
xor
ds
or
or
in
or
ds
and
sub
sub
xor
daa
or
adc
jnp
adc
and
push
adc
es
fwait
es
inc
cmps
push
jae
(bad)
shl
jns
je
jmp
push
test
mov
jmp
push
push
or
jp
sbb
ret
xor
test
pop
inc
es
sub
data16
adc
pop
mov
mov
xchg
shl
retf
sub
dec
xor
loope
inc
dec
jb
push
test
fimul
callw
adc
jb
push
rol
enter
inc
cwde
or
push
loope
pop
inc
dec
sub
scas
shl
test
and
lods
mov
sub
push
test
mov
data16
cld
adc
push
aam
inc
dec
mov
inc
and
scas
cdq
cmp
dec
adc
test
test
out
data16
rcl
fdivr
call
adc
pop
data16
xor
push
icebp
lea
and
dec
sub
sahf
test
sub
mov
sar
pusha
sub
out
mov
jg
fs
ret
pop
lea
lods
push
pop
lods
add
or
scas
mov
push
push
add
(bad)
pop
jne
outs
push
shl
and
(bad)
sub
pop
std
cmp
mov
mov
enter
cmp
(bad)
jae
popf
dec
es
mov
out
pop
mov
scas
call
push
std
data16
push
bound
ja
leave
lock
xor
cs
scas
sbb
sub
mov
test
inc
sub
arpl
xor
or
adc
bound
or
sub
xchg
jno
shl
movs
jecxz
mov
jp
mov
cmp
mov
mov
jmp
into
outs
jns
mov
test
(bad)
cmp
inc
cli
in
dec
pop
fs
xor
imul
jo
scas
(bad)
dec
sub
mov
leave
cmc
enter
sub
imul
shl
shl
cmp
xor
ja
leave
dec
dec
fs
leave
inc
stc
repnz
push
xchg
sbb
jmp
xor
push
in
test
call
jbe
(bad)
mov
pop
dec
xor
xor
jle
jo
arpl
jle
add
pop
imul
xchg
jns
lock
mov
lods
mov
daa
loopne
jle
mov
inc
std
stos
ret
mov
rol
push
xor
mov
jp
fstp
push
inc
mov
test
repnz
int
mov
cmp
jg
pop
dec
push
mov
add
mov
push
(bad)
aam
xchg
and
mov
fwait
push
or
cmp
push
fs
(bad)
jge
cdq
push
add
iret
mov
rcr
lea
jb
cmc
clc
cmp
pusha
mov
pushf
pushf
lea
jae
ror
mov
and
ror
mov
shrd
xor
bsr
ror
mov
stc
cmc
stc
cmc
xor
test
repnz
jmp
mov
call
clc
cmc
xor
mov
jmp
sub
xor
sub
and
inc
jnp
dec
or
add
pop
pop
adc
add
clts
sahf
mov
std
jo
add
sub
out
or
sbb
pop
fcmovnbe
loope
push
gs
pop
in
loope
inc
fwait
xchg
aaa
or
jb
push
xchg
stc
sub
jns
push
or
push
ins
pusha
in
or
loop
sahf
cwde
xlat
jbe
push
js
cmp
sub
sbb
in
aaa
imul
cs
inc
ret
retf
enter
retf
(bad)
div
int
dec
out
in
sub
enter
rcl
movs
mov
cmps
mov
test
xor
call
push
jno
mov
cmps
dec
add
sbb
or
mov
mov
fbld
jmp
mov
call
mov
out
jl
fcomi
adc
xchg
stos
push
cld
mov
adc
and
cld
retf
sti
xchg
adc
pop
adc
inc
dec
xchg
cwde
shr
fnclex
cmps
mov
clc
mov
fst
mov
push
inc
arpl
test
inc
pusha
and
inc
jg
fild
loopne
cs
jae
dec
sahf
push
adc
das
ret
cli
test
sub
dec
jo
imul
push
(bad)
aam
fisub
outs
cmovo
in
mov
cmc
in
sbb
xchg
jmp
xor
das
cmp
mov
stos
cli
in
in
mov
aas
push
inc
jl
cdq
nop
adc
mul
or
cdq
loope
add
loop
sub
fisttp
pop
jns
(bad)
jno
inc
outs
push
loopne
lock
das
cmp
xchg
sbb
pop
push
pop
jmp
paddsw
(bad)
mov
jb
xchg
xchg
(bad)
mov
out
cmc
inc
jmp
mov
in
cmps
mov
in
cld
mov
sub
std
add
jnp
jle
jmp
push
(bad)
and
stos
sub
cmp
fsubr
mov
mov
mov
xor
ror
push
scas
fld
js
xor
mov
cwde
xor
std
mov
adc
pop
jg
adc
cmps
xchg
fxch
sbb
sub
in
neg
cmp
ret
push
jmp
mov
mov
adc
lea
pusha
push
ret
xor
mov
jno
xchg
cwde
icebp
mov
std
mov
(bad)
les
fist
shr
mov
je
lods
sbb
or
jb
cdq
mov
fstp
jp
jne
fs
jp
and
mov
jl
mul
adc
fdiv
bound
mov
aaa
pop
or
push
xor
pop
mov
stc
xlat
inc
data16
dec
push
mov
clc
add
mov
stc
dec
mov
imul
add
shl
xchg
pop
add
jmp
or
pop
inc
(bad)
in
das
das
add
sub
xchg
lea
(bad)
mov
xor
push
xchg
mov
jnp
mov
jno
addr16
dec
pop
push
rcl
pushf
fild
shl
mov
fld
jno
add
mov
into
xchg
mul
bound
dec
mov
or
pop
inc
je
sbb
das
pop
push
in
adc
push
mov
sub
cmp
and
mov
loope
int3
es
inc
cs
clc
inc
aaa
sbb
je
xor
rcl
pop
nop
adc
shl
fstp
mov
inc
or
outs
aas
mov
inc
sti
std
repnz
ja
mov
jo
push
inc
imul
ror
daa
push
mov
jno
mov
das
ficom
push
sbb
xor
or
sub
jae
and
lahf
cmps
in
mov
mov
inc
mov
mov
lahf
imul
(bad)
lods
ficom
inc
jb
push
and
jns
ror
je
or
sub
xchg
ins
cmc
dec
add
cmc
call
ret
jmp
call
repnz
mov
lea
jne
call
pusha
lea
jne
shr
add
mov
ror
mov
pushf
push
bt
call
jnp
jecxz
mov
jno
(bad)
ret
xchg
mov
xlat
daa
stc
or
movups
sbb
sbb
emms
outs
arpl
inc
push
inc
push
inc
arpl
sbb
lods
vpaddq
call
xor
inc
xchg
fstp
pop
mov
push
adc
stos
into
inc
nop
fist
dec
dec
mov
inc
(bad)
jl
push
mov
cmp
pushf
cdq
leave
shl
lea
xchg
or
mov
mov
dec
mov
pop
adc
cmps
daa
or
xor
mov
or
xor
scas
call
pusha
cmps
jmp
push
add
push
out
mov
jno
cmp
ins
je
jl
pop
cmovno
jl
aaa
aad
sahf
cdq
xchg
rol
dec
shl
in
sbb
jne
sub
mov
jp
adc
in
sti
(bad)
xchg
fst
in
sar
pusha
pop
je
push
movs
mov
pop
loop
ins
imul
dec
loopne
jge
mov
ret
imul
jp
push
jbe
mov
sbb
(bad)
push
jge
xchg
enter
dec
sbb
out
inc
sub
mov
call
imul
mov
jns
jns
jle
push
cmp
scas
dec
dec
mov
(bad)
out
test
mov
sbb
into
test
xor
pop
sbb
inc
(bad)
clc
inc
inc
dec
or
mov
out
mov
iret
std
mov
or
ins
imul
xchg
test
or
clc
clc
jne
pop
in
push
push
mov
push
pushf
mov
mov
pushf
pushf
push
lea
jmp
pusha
repnz
push
push
call
pusha
mov
push
push
push
ret
push
jmp
sbb
jecxz
lea
pop
hlt
hlt
loope
fdivr
cli
dec
inc
aas
jb
push
cmp
inc
push
jmp
imul
mov
movs
add
std
jne
outs
inc
push
sbb
and
or
leave
inc
popf
sti
cmp
not
repnz
in
inc
sbb
je
es
fcomp
movs
int
xor
bound
dec
jns
repz
mov
je
test
jbe
call
cmp
sbb
push
js
dec
dec
jnp
or
dec
mov
cld
cmp
lea
push
dec
into
cmp
dec
push
adc
fimul
inc
xlat
iret
mov
lahf
mov
mov
clc
stos
cli
out
stos
rcr
cmp
cmp
sar
mov
adc
push
inc
cmp
xor
lahf
jmp
dec
call
adc
hlt
jp
jae
and
cdq
test
repz
jp
dec
sbb
jle
jmp
fistp
popf
mov
push
or
push
and
in
and
das
xor
test
(bad)
retf
push
mov
push
(bad)
into
pushf
fcmovnbe
lahf
mov
adc
ja
xchg
out
movs
stos
in
popa
stos
or
(bad)
scas
(bad)
mov
imul
ins
ret
ja
sub
push
icebp
leave
inc
jo
rcl
test
gs
and
jmp
mov
leave
(bad)
sub
nop
(bad)
ficom
cmovp
dec
pop
push
popa
and
pop
mov
pop
inc
jnp
dec
pop
int
jp
push
sbb
mov
fsubr
retf
add
sbb
sub
nop
out
push
in
into
call
div
loopne
enter
std
jnp
or
stc
or
push
jbe
jle
mov
ret
dec
push
xchg
(bad)
data16
sub
and
jecxz
mov
mov
adc
push
rcl
inc
jne
loope
test
sub
mov
pop
das
(bad)
cwde
inc
stc
or
fst
pop
inc
jnp
(bad)
push
cmp
or
cdq
scas
call
adc
mov
jl
jns
ss
aad
inc
mov
fst
nop
(bad)
out
xor
jo
leave
jp
cmps
sub
mov
cmp
jno
fsubr
or
xor
jl
inc
xchg
scas
cmp
je
lock
inc
xor
jno
dec
xchg
inc
xor
popa
pop
sbb
push
movs
pop
dec
mov
ss
(bad)
cmp
out
test
and
jmp
cmp
cmps
xchg
cwde
xchg
sbb
cmp
xor
in
loope
cmps
mov
and
loopne
lock
pop
loope
mov
cli
jmp
add
sahf
(bad)
cmp
ins
idiv
lods
cwde
xchg
test
hlt
out
or
test
cmps
sbb
mov
mov
ds
and
xor
repz
cli
mov
(bad)
cdq
jb
cmp
je
cmps
in
mov
outs
or
jle
outs
sub
inc
cmp
or
in
and
sub
mov
mov
ret
imul
jl
mov
jo
hlt
loop
out
sub
xor
int3
mov
or
stos
sbb
cmp
mov
test
jp
outs
mov
cmp
push
inc
or
inc
cmp
es
das
in
sub
xchg
jno
je
gs
adc
into
jmp
sar
loope
cmp
rcl
into
ja
jg
mov
add
adc
je
jnp
pop
test
mov
pop
pop
ins
or
mov
aam
cmp
dec
add
mov
stos
(bad)
das
pop
jns
call
je
jmp
push
lods
ja
fldcw
and
sub
sbb
mov
xor
(bad)
cld
xchg
jnp
ret
call
imul
mov
lods
cmp
call
jl
cmps
arpl
mov
xor
je
dec
out
fldcw
fs
stos
out
jbe
xor
icebp
popa
cmps
sub
call
add
dec
xchg
xor
(bad)
sti
xor
cmp
rcr
stos
pop
mov
ret
es
fdivr
and
ds
push
sbb
ss
into
ds
fstp
aas
inc
in
stos
sbb
enter
data16
lea
xor
adc
aas
stos
stos
add
jne
mov
dec
ss
pop
xchg
or
(bad)
pop
imul
ins
xchg
pop
sub
rcr
mov
(bad)
push
(bad)
or
aam
or
outs
in
adc
xchg
push
xor
psrld
xlat
push
xchg
sub
push
or
jge
ins
ret
aaa
sub
or
mov
or
sub
cmp
and
sub
fcom
jns
or
lock
xchg
aas
pushf
fsubr
sahf
add
and
int
callw
jl
cwde
mov
(bad)
ja
pop
es
sub
js
mov
cmps
jecxz
push
push
push
pop
ret
jne
imul
mov
jmp
sbb
mov
mov
imul
add
sub
xor
sub
repz
and
xor
jge
inc
mov
dec
add
fist
les
(bad)
call
adc
test
sbb
cmps
xor
imul
sub
ds
scas
out
fstp
ss
lods
or
sbb
dec
div
pop
push
and
jno
lods
(bad)
adc
or
jno
ret
adc
or
fs
adc
pop
mov
push
movs
bound
(bad)
scas
jecxz
stos
add
(bad)
sbb
push
rcr
cmp
and
mov
into
xor
lods
imul
cld
or
jbe
dec
sub
icebp
sub
dec
inc
push
sbb
pusha
push
sub
(bad)
xor
ins
xor
jle
mov
mov
xor
and
mov
jp
sbb
jmp
xor
lods
div
jo
vcmpsd
push
pop
ins
mov
pop
sbb
xor
adc
imul
mov
jmp
out
fisub
mov
test
push
in
xchg
cmp
mov
inc
sbb
ja
outs
dec
in
and
sub
and
scas
and
cmp
adc
sub
cmp
arpl
dec
push
cdq
xchg
xchg
pop
lods
adc
pop
jmp
push
rcl
imul
sar
lock
loopne
sub
es
repz
mov
ret
loope
(bad)
fist
inc
cli
imul
jle
inc
fs
xlat
push
icebp
out
mov
ins
cmp
sbb
dec
sbb
out
push
cmp
(bad)
out
push
ss
xchg
les
(bad)
out
or
pop
sbb
pop
and
hlt
out
xor
scas
js
imul
xor
mov
xlat
int3
add
shld
sub
inc
rol
and
pusha
jmp
jae
or
aad
adc
ds
and
jnp
add
push
sub
cmps
jne
ins
sbb
push
scas
cdq
adc
pop
jno
fiadd
dec
jmp
push
lahf
inc
sahf
xor
outs
sahf
in
test
sbb
mov
fimul
pusha
out
cdq
mov
push
ds
mov
mov
mov
ds
mov
stos
in
sub
add
movs
jg
fisttp
dec
and
cmp
ret
sub
cmps
adc
outs
xor
cmp
and
dec
cmp
aad
pop
jno
cwde
mov
mov
pop
icebp
loop
xor
or
sar
add
mov
inc
push
adc
lods
cmps
cmp
or
stos
mov
jne
shl
push
mov
daa
inc
add
out
btc
outs
std
add
mov
xchg
jbe
inc
pop
jge
xor
push
test
sbb
movs
xor
jle
mov
inc
xor
inc
aaa
push
das
sti
rcr
inc
adc
jmp
in
out
cmp
xor
dec
sbb
push
cmps
out
jb
ins
sub
and
lods
imul
movs
push
jb
imul
adc
les
adc
xchg
xor
into
cmp
jl
mov
mov
push
mov
dec
je
jmp
(bad)
sub
cmp
mov
dec
sub
sub
or
push
add
imul
mov
lods
xchg
jb
ret
xor
inc
xor
push
mov
ds
push
inc
(bad)
or
out
mov
lods
jo
outs
xor
jecxz
sub
cmps
movs
icebp
mov
lods
fdiv
adc
out
sub
sub
cmps
jmp
repnz
adc
ins
outs
fmul
bound
jle
jp
jg
(bad)
or
xor
or
stos
jbe
jge
mov
xchg
out
data16
cmp
imul
mov
test
ret
push
push
aad
popa
jp
dec
ins
sub
mov
mov
shl
in
push
push
movs
adc
stos
push
mov
nop
cmp
mov
loope
ins
mov
push
or
mov
dec
idiv
jle
or
nop
mov
fsub
and
rcl
sub
push
daa
sub
cmps
sub
ret
inc
sar
scas
sbb
push
mov
pushf
mov
stc
cmps
xor
dec
push
jle
pop
adc
ds
mov
imul
sub
and
xor
mov
iret
outs
mov
stos
repz
cmp
ds
mov
data16
or
and
pop
shrd
xor
movs
cmp
xor
data16
adc
stos
out
xor
xor
cmps
jecxz
mov
outs
jl
outs
pause
inc
inc
(bad)
jae
call
push
test
ins
scas
adc
mov
or
repz
pcmpgtd
push
and
scas
cmp
iret
push
mov
pop
jmp
cdq
xor
cwde
push
cmp
add
ret
enter
(bad)
hlt
xchg
loop
pop
ins
sub
out
retf
xor
add
mov
mov
mov
(bad)
xor
dec
cmp
sub
add
ins
sub
stos
gs
ds
shl
pop
cmp
cmp
push
xchg
mov
out
add
jecxz
cmc
jo
xor
jge
sbb
push
sub
dec
and
popa
xor
sub
add
or
dec
pop
scas
jno
mov
xchg
sub
and
shr
ror
(bad)
sub
push
repnz
shl
test
mov
xor
push
cld
cmp
es
adc
cld
mov
pop
stos
inc
mov
fidivr
ins
lods
xor
add
ret
push
push
pop
sbb
test
lods
outs
push
jbe
les
sub
sub
jo
sub
repnz
mov
fisub
stos
mov
mov
jmp
jno
inc
cmp
dec
ret
pop
mov
cmp
xchg
sbb
sub
retf
iret
inc
ret
cli
pop
stos
(bad)
in
sbb
ds
sar
sbb
sbb
sub
test
or
pop
aaa
ss
dec
in
scas
retf
push
and
sub
and
sub
jecxz
out
retf
sub
lock
test
pop
adc
ds
inc
imul
mov
sub
jae
loope
data16
mov
ds
into
addr16
cmp
xor
inc
cdq
or
and
mov
inc
and
adc
loop
push
pop
jnp
das
pop
mov
sub
sbb
adc
jp
and
xor
cmp
ins
and
adc
jmp
ja
aad
add
cli
and
sbb
cdq
pop
imul
cmp
cmp
or
ins
stos
sbb
test
leave
adc
enter
sub
or
mov
or
hlt
sub
pusha
cdq
dec
sub
xor
mov
sub
sahf
icebp
xchg
jmp
sar
xchg
sar
mov
push
dec
outs
mov
mov
inc
das
jmp
mov
inc
ret
inc
mov
pop
(bad)
icebp
sar
cmps
mov
ret
mov
bound
mov
ds
outs
inc
dec
es
sbb
mov
xor
cmps
inc
add
pop
and
inc
xor
fisub
in
jecxz
ss
jle
fs
cmps
and
mov
(bad)
sub
mov
dec
ret
out
mov
dec
int3
push
gs
mov
inc
mov
cmp
pop
mov
(bad)
in
push
jp
bound
arpl
sti
inc
cdq
pop
clc
call
jb
lds
mov
test
outs
data16
jb
add
retf
movs
xor
adc
cmps
mov
inc
lahf
or
jmp
es
cmps
(bad)
cmp
jg
scas
ror
call
pop
fbld
leave
jmp
fidivr
ins
add
cmps
nop
add
adc
cmp
cmp
lea
sbb
cld
call
cmps
idiv
mov
out
dec
cmp
cmp
sub
and
hlt
cmp
sub
and
into
cmp
nop
shr
out
retf
mov
and
adc
mov
punpckhdq
lock
dec
jle
xlat
adc
dec
jbe
ins
fld
xor
mov
xchg
daa
shr
or
fistp
cdq
add
sub
(bad)
xor
adc
or
cmp
mov
fsub
shr
add
bound
push
cmp
dec
out
jmp
pop
cli
out
ins
push
retf
das
push
in
scas
aas
mov
aam
or
pop
out
(bad)
mov
lods
sub
in
cmp
into
xchg
mov
je
jb
loopne
fmul
mov
mov
inc
mov
movs
adc
push
pop
(bad)
jbe
in
add
pmaxsw
(bad)
into
sub
push
shl
ins
ror
loopne
in
add
es
dec
and
aas
fidiv
dec
je
jo
push
push
shl
cwde
jmp
ja
ss
pop
and
inc
fsubr
sub
rol
sar
enter
adc
or
addr16
outs
fwait
repnz
jnp
fchs
and
mov
aas
jbe
push
cmps
icebp
es
mov
dec
stos
mov
pop
jbe
aam
pop
out
jle
sub
dec
outs
lods
outs
xchg
and
bnd
dec
cmp
(bad)
(bad)
cmp
(bad)
dec
cmps
mov
jo
(bad)
sbb
jno
push
adc
xor
xor
push
adc
jmp
(bad)
cmps
cmp
jge
add
xor
loopne
jge
push
or
pushw
retf
push
cld
dec
and
aaa
stos
jge
cmp
jg
xor
in
mov
ds
mov
sbb
jne
mov
stos
scas
fst
outs
cmps
inc
adc
add
in
cli
dec
inc
retf
add
adc
outs
(bad)
sub
push
mov
and
(bad)
fsubp
push
pusha
adc
daa
les
fisub
ds
jg
data16
mov
add
push
dec
ss
sub
or
in
dec
arpl
and
adc
dec
test
out
outs
inc
outs
es
mov
test
shl
fistp
imul
adc
xchg
and
test
scas
sub
adc
pop
push
xor
cmp
test
cmps
xchg
adc
pop
push
int
or
xor
cmp
xor
es
add
add
jle
in
js
icebp
leave
mov
sub
sbb
mov
push
jbe
retf
dec
and
imul
clc
pop
imul
cmp
inc
push
xor
inc
or
popa
in
jle
sub
icebp
(bad)
not
sahf
stc
aad
xor
push
(bad)
pop
popa
xchg
and
add
sbb
cmp
sub
sbb
mov
movs
mov
fcomi
inc
and
push
jae
mov
in
bound
dec
and
jns
cmc
inc
push
sbb
cmp
lods
fidiv
inc
jnp
mov
daa
inc
push
jle
out
lods
mov
iret
movs
lds
imul
sbb
add
dec
sub
sbb
and
xchg
shr
and
push
pop
jo
dec
(bad)
mov
test
daa
mov
ja
cmps
jmp
cmp
push
add
sub
pop
mov
rol
mov
jns
stos
inc
adc
adc
sub
lahf
ret
call
cmp
daa
(bad)
mov
pop
fcom
inc
inc
in
push
daa
dec
fidivr
mov
(bad)
pop
jmp
or
pop
pusha
lock
stos
hlt
(bad)
repz
pop
push
mov
(bad)
cmp
inc
adc
xor
fnsave
retf
xchg
sbb
fidivr
or
dec
jle
in
dec
push
or
retf
jle
mov
sbb
mov
mov
xor
cmp
mov
or
jmp
cmps
jge
imul
cmps
mov
pop
(bad)
iret
inc
shl
in
mov
pop
bound
inc
ds
into
sub
addr16
loopne
data16
in
dec
mov
fisub
repnz
ins
mov
fsubrp
ret
and
sub
(bad)
jo
mov
ss
mov
scas
test
fs
xor
add
push
mov
lods
adc
out
jecxz
xor
sbb
lods
adc
jmp
out
lock
(bad)
dec
cmps
push
sub
mov
sub
ds
popa
push
shl
sub
lods
pop
test
ds
xchg
outs
jbe
out
aaa
xlat
cmps
std
mov
dec
push
scas
std
fcomp
fwait
fwait
xor
sub
imul
sub
pop
add
cmps
ins
mov
mov
mov
shl
mov
adc
leave
pusha
jmp
test
sub
(bad)
test
mov
pop
cmp
sbb
and
sar
mov
push
adc
stos
pop
mov
or
mov
mov
test
add
scas
test
inc
adc
mov
es
jo
retf
jle
adc
clc
fimul
or
cmps
push
or
mov
jg
mov
sub
push
pop
mov
jecxz
xchg
sub
cmp
test
stos
sti
mov
pop
push
pop
sub
pop
adc
add
mov
ds
push
mov
bound
bound
push
in
mov
es
or
inc
mov
push
mov
mov
sub
mov
inc
pop
add
pop
inc
(bad)
jne
pop
mov
mov
(bad)
ror
bound
dec
bound
and
loop
test
sahf
(bad)
cmp
mov
not
movs
shl
cli
jmp
stos
adc
mov
ds
and
shl
cmp
call
push
dec
test
push
mov
sub
push
out
and
addr16
in
pop
data16
mov
or
daa
ds
mov
fs
jo
xor
es
push
adc
jp
adc
imul
inc
and
xor
add
fsubr
cdq
fadd
push
and
xor
fcmovbe
pop
bound
into
test
mov
inc
fisub
inc
into
es
stos
xchg
dec
pop
ja
add
stos
cmp
adc
or
adc
test
sub
addr16
adc
out
sub
imul
inc
outs
add
(bad)
mov
je
xchg
mov
cli
dec
inc
mov
jg
jb
cmp
pop
sbb
aas
mov
push
outs
iret
les
je
das
adc
pcmpgtd
pop
push
push
mov
and
xor
stos
jbe
sub
push
push
imul
push
sub
test
mov
cmp
rcl
cmps
cmp
rol
xchg
dec
daa
sub
in
ins
sub
mov
cmp
jnp
inc
add
lds
ds
sbb
sbb
add
cmovp
cmp
gs
(bad)
fist
push
push
jmp
jle
jg
push
push
mov
inc
mov
sub
sbb
sub
ss
aaa
jmp
xchg
aas
inc
xchg
pop
push
mov
shl
outs
movs
jle
mov
sub
inc
cld
jle
shr
std
push
add
inc
mov
push
bound
inc
out
xor
scas
xchg
xor
sar
gs
mov
xchg
or
mov
jne
mov
jle
bound
adc
imul
push
cmps
sub
add
into
lea
mov
out
mov
mov
pushf
xor
mov
(bad)
push
inc
and
loope
mov
xor
and
aaa
and
or
add
test
cmp
sub
mov
mov
shr
mov
in
mov
add
mov
or
xchg
(bad)
xlat
dec
sahf
in
push
jnp
mov
and
push
cmp
dec
pop
mov
push
xor
test
ds
push
mov
jp
dec
iret
popa
jae
test
jne
(bad)
ss
hlt
push
jecxz
inc
inc
das
aas
cmpps
dec
sub
loop
fiadd
push
daa
sub
jmp
pop
ret
push
lea
push
ins
cmps
outs
cmp
imul
mov
test
movs
data16
jae
bound
outs
out
adc
or
imul
rep
ins
popf
xchg
loop
popa
pop
int3
xor
mov
mov
ja
dec
iret
stos
(bad)
sub
push
ds
sub
in
in
pop
sbb
cmp
sub
mov
lds
daa
inc
dec
cmp
stos
mov
dec
add
rol
xor
cmp
lock
xor
loopne
cwde
sub
jg
push
mov
repnz
ins
xor
lea
pushw
mov
add
fwait
xchg
lea
jge
out
jmp
or
xchg
pop
xchg
pusha
mov
test
rcr
adc
lds
data16
in
cmp
ds
cmp
push
mov
outs
jmp
mov
stos
mov
shr
xchg
call
sbb
jmp
pop
pop
adc
nop
aaa
pop
mov
ins
mov
es
xchg
loope
sub
jg
(bad)
mov
sub
mov
int
add
mov
mov
push
dec
push
inc
call
xor
xchg
ret
icebp
mov
retf
fs
add
test
mov
or
stc
jg
mov
adc
pop
sub
push
fild
mov
mov
test
(bad)
test
or
sub
xchg
xor
or
pop
adc
sbb
imul
jg
xchg
ds
popa
or
add
data16
test
outs
(bad)
ja
add
push
movs
inc
cs
dec
dec
dec
push
pusha
and
and
jle
stc
inc
adc
jp
jno
sbb
gs
jp
call
push
cdq
jno
test
test
add
mov
das
push
into
cmps
jp
push
mulps
imul
cs
or
lahf
mov
fs
pop
dec
xchg
jge
jnp
addr16
test
mov
push
cdq
mov
stos
imul
mov
lods
outs
add
or
push
mov
pop
sub
in
push
hlt
dec
lods
or
mov
xor
inc
out
fiadd
mov
pop
test
add
and
sub
sbb
inc
aas
jge
out
ficom
and
cmp
sub
std
and
xor
stos
xor
ret
xor
(bad)
jl
xor
push
dec
inc
add
or
sub
imul
sbb
lds
sub
outs
cmps
pop
cwde
or
push
mov
movs
call
xchg
lods
push
add
xor
mov
push
out
inc
stos
out
xor
ins
ss
sub
dec
jmp
add
and
and
fs
xor
or
test
pusha
popf
cmp
test
or
imul
sub
or
pop
jae
cmps
pop
data16
(bad)
jmp
mov
retf
sbb
mov
shl
jp
dec
pop
adc
mov
mov
inc
fwait
pop
add
push
scas
aam
aas
stos
xor
jns
sbb
sub
sahf
fist
and
sbb
daa
cmp
aas
stc
inc
sub
retf
sub
fsub
loop
sub
mov
adc
jo
in
mov
add
cmp
cdq
fld
cmps
and
loope
sbb
iret
adc
sub
enter
xor
jg
into
lahf
fs
jnp
test
push
inc
ds
pop
outs
aas
or
lods
sub
sbb
ja
sub
or
sub
xchg
jmp
pcmpeqb
push
add
xchg
cmp
or
(bad)
dec
or
dec
ins
test
outs
mov
cmp
and
xchg
xchg
pop
add
push
ror
adc
imul
dec
adc
push
loope
scas
jb
std
inc
ja
pop
daa
rol
ss
jle
xchg
fimul
inc
and
and
(bad)
push
mov
mov
adc
dec
popf
fist
dec
cmp
dec
test
cmp
xor
(bad)
jge
(bad)
shl
pop
dec
icebp
and
pop
inc
lock
outs
in
sub
or
out
push
vmovaps
arpl
push
test
push
cbw
or
dec
out
in
aas
mov
jae
dec
sub
bound
jne
push
mov
dec
xchg
inc
cmps
rol
ins
mov
aas
adc
and
test
jmp
cli
adc
xor
add
jg
xchg
adc
int3
shr
sub
pop
and
addr16
adc
jp
jmp
xor
mov
push
sahf
or
jmp
dec
sbb
shl
outs
xchg
xlat
add
push
inc
(bad)
test
adc
mov
xlat
push
cli
out
jmp
pop
std
lods
cmp
into
or
mov
(bad)
test
cli
or
cmp
(bad)
xchg
xchg
jae
push
out
xor
ds
jnp
aas
jb
aaa
test
add
inc
sbb
lock
jp
adc
ins
sti
cmp
lock
or
out
mov
not
mov
leave
lods
int
(bad)
div
clc
out
idiv
push
ret
jl
jle
xor
test
cmps
or
add
aam
and
(bad)
dec
inc
sbb
cmp
in
cmp
xor
xchg
pop
out
aas
mov
pop
push
inc
movs
mov
mov
sti
inc
ror
icebp
mov
sub
jbe
adc
mov
scas
jnp
in
(bad)
ds
jns
clc
mov
jno
sub
(bad)
call
add
push
or
js
dec
jl
or
(bad)
xor
sub
add
ja
div
stos
and
(bad)
push
addr16
sar
into
or
pop
cli
addr16
mov
(bad)
addr16
cmp
aas
sub
sub
adc
jp
call
movs
aam
ins
and
push
sbb
sti
jae
inc
cmp
inc
sbb
fiadd
xor
xchg
sub
pop
push
inc
mov
cmp
(bad)
push
push
imul
mov
in
dec
mov
jl
sbb
cld
ja
dec
xor
sti
xchg
rol
(bad)
sub
mov
pusha
add
sbb
jbe
mov
aad
out
and
mov
or
mov
dec
mov
jmp
aad
ficom
pop
daa
xchg
dec
shr
out
jmp
jle
aas
jb
dec
cmps
add
dec
cmps
bound
es
outs
cmps
add
test
outs
sbb
inc
add
xor
xor
push
ret
gs
pop
mov
xchg
sub
ds
lods
dec
aaa
frndint
jmp
shl
xor
in
in
jno
or
mov
xor
pop
ins
scas
sub
mov
pop
pop
hlt
fs
mov
in
out
es
push
jl
and
retf
je
aas
sbb
es
imul
add
outs
xchg
scas
cli
jo
out
pop
adc
gs
sub
jg
push
mov
(bad)
push
pop
es
or
jo
ds
sbb
imul
add
pop
cmp
inc
inc
out
push
push
in
rcl
mov
or
jle
push
lea
fst
lea
xchg
test
(bad)
sbb
adc
ss
repnz
add
push
ds
push
jns
cld
pop
into
xchg
cmp
test
arpl
cmp
pop
add
cdq
push
enter
push
jge
aam
outs
into
lods
jmp
mov
sub
inc
in
pop
push
out
or
pop
mov
jle
push
fwait
jge
test
out
int
adc
ss
mov
mov
(bad)
sbb
pop
sbb
lock
(bad)
jns
pop
adc
push
jbe
pop
cmps
push
in
pop
movs
inc
xchg
push
enter
imul
mov
jmp
mov
lahf
push
ss
mov
pop
add
into
push
adc
lods
dec
sbb
adc
cmp
ins
outs
into
or
mov
jmp
sbb
in
es
mov
sbb
into
inc
adc
mov
fsub
push
ins
dec
into
xlat
js
pop
jo
rol
pop
push
fdivr
push
into
loopne
push
pop
jmp
mov
jmp
int
add
add
cs
outs
add
lea
jp
sti
in
dec
es
imul
test
push
mov
lods
jo
add
dec
lock
sub
movs
jns
rol
ror
stos
or
retf
dec
mov
inc
outs
sbb
and
sub
or
das
push
rcl
inc
jg
add
lea
retw
xchg
sub
test
sbb
nop
inc
add
or
sub
ds
cmp
inc
ja
xchg
dec
ret
inc
add
dec
and
sub
inc
ins
gs
jp
icebp
jp
jnp
dec
bound
or
push
jg
or
ja
jmp
jo
jb
icebp
mov
sbb
ss
inc
pop
cmps
push
mov
pop
dec
xchg
push
fidivr
shl
add
sbb
std
sub
and
fsubrp
jb
int
sub
aad
xor
retf
sbb
mov
xchg
bound
shl
pop
addr16
mov
ss
cmps
or
pop
daa
push
dec
cmp
mov
clc
adc
stos
test
jo
out
and
outs
push
in
imul
ret
sysenter
dec
xor
rcl
sub
pop
test
push
jl
sub
out
or
sub
shl
xor
mov
push
aam
popa
ret
popa
xchg
fldcw
cmps
sub
add
or
imul
movs
dec
jl
sub
xchg
sub
or
push
push
stos
je
push
rcl
xor
dec
in
imul
data16
out
mov
pop
cmc
push
jbe
pop
mov
jmp
ret
cmp
pop
xchg
jge
push
loopne
and
mov
ss
lds
out
push
dec
pusha
jo
pushf
mov
cwde
and
mov
jns
out
xchg
movs
imul
xchg
dec
jo
cmps
push
dec
jl
jecxz
and
and
dec
dec
pop
mov
hlt
pop
(bad)
mov
ja
pusha
xor
mov
cmp
or
and
mov
mov
ins
xor
mov
movs
(bad)
pop
adc
std
stos
fdivr
loopne
movs
xchg
cmps
jo
dec
xor
add
adc
xor
pop
sub
std
mov
es
jl
std
cmps
ds
adc
or
(bad)
les
std
or
lods
add
push
pop
jbe
adc
jp
jp
pop
out
jo
cwde
mov
ds
mov
jecxz
imul
and
jmp
mov
sbb
sub
and
push
push
les
(bad)
adc
inc
adc
sbb
pop
inc
cmp
shl
xor
push
and
(bad)
scas
xor
lea
cmp
mov
mov
or
aad
movs
mov
add
inc
push
test
jg
call
js
dec
xchg
push
mov
inc
mov
imul
stos
mov
shl
adc
mov
push
sbb
sub
pop
inc
push
push
xchg
in
ret
sbb
push
mov
xor
rcl
call
not
sub
jmp
inc
adc
pop
inc
in
je
xor
outs
mov
bound
jns
inc
mov
jp
push
js
dec
mov
mov
inc
jne
mov
mov
mov
or
pop
cmp
call
push
inc
enter
test
shl
adc
xchg
add
push
push
mov
test
lea
xchg
fs
in
pusha
aam
inc
out
xor
jge
clc
push
sub
mov
leave
sub
aam
lock
cmps
cmp
or
mov
mov
bound
mov
ss
out
pop
adc
xchg
popf
push
push
out
arpl
rol
sub
les
xor
inc
cmps
dec
add
push
add
or
(bad)
pushf
in
(bad)
int
icebp
mov
pop
addr16
(bad)
(bad)
into
and
sbb
jo
xlat
lock
cmps
dec
push
mov
mov
aam
test
mov
push
inc
mov
mov
xchg
mov
out
push
mov
cmp
test
cmps
out
test
jo
jae
lods
push
or
xor
test
sbb
pop
jecxz
data16
xor
adc
inc
jecxz
cmp
inc
adc
push
xchg
lock
mov
dec
xor
aam
or
in
outs
inc
and
sub
hlt
js
retf
aaa
pop
lock
mov
stos
mov
pop
out
pusha
mov
inc
and
push
and
mov
dec
xor
inc
dec
or
fstp
inc
inc
loope
call
sub
call
test
out
push
and
mov
sbb
adc
jle
and
or
mov
add
retf
gs
cmps
lock
jl
jae
mov
fwait
pop
(bad)
jmp
sbb
push
cmc
lods
aas
stos
test
push
or
lods
(bad)
adc
(bad)
ds
lock
out
je
and
retf
jg
xchg
jle
inc
cmp
add
inc
sub
iret
(bad)
loope
rol
js
shl
fidiv
mov
push
test
cdq
aad
cmp
test
sahf
je
adc
cmp
dec
jl
add
sub
cmps
pop
pop
push
dec
call
je
loope
lock
mov
sub
shr
cwde
ror
xchg
xor
mov
pop
stos
add
mov
mov
push
cmp
sub
addr16
fdivr
sub
and
add
pushf
scas
or
pop
and
das
or
adc
push
cmp
pop
xchg
xor
shr
les
lahf
mov
push
imul
loop
stos
shl
jg
call
sahf
es
icebp
mov
dec
mov
push
in
and
hlt
add
or
xor
repz
cmps
les
cmp
jge
adc
outs
xor
mov
cmp
std
jno
daa
sbb
jl
sti
push
(bad)
pop
and
fs
or
or
jmp
sbb
jle
pop
xchg
xor
(bad)
int
cmp
dec
pop
mov
xor
into
and
jmp
push
rcr
sub
and
clc
inc
push
mov
xor
add
mov
and
xchg
inc
cmp
and
push
and
and
xor
sub
lods
push
mov
enter
mul
out
mov
imul
inc
pop
push
xor
fwait
sub
(bad)
xchg
sbb
outs
outs
cmps
ds
or
es
push
push
xor
sub
retf
mov
xchg
inc
lahf
push
outs
adc
(bad)
in
pop
adc
and
and
inc
(bad)
dec
adc
ss
inc
cdq
xchg
inc
mov
popw
outs
out
stos
test
ds
sub
adc
push
loopne
movs
inc
cmp
and
leave
lods
sub
mov
adc
mov
mov
push
push
ret
adc
pop
popf
clc
inc
mov
dec
out
pop
cmp
adc
in
mov
(bad)
dec
or
hlt
jns
dec
mov
and
adc
cmp
hlt
fldenv
shl
pop
ss
repz
push
data16
jb
ss
inc
jle
xchg
or
xor
out
aaa
(bad)
mov
jbe
push
pop
cmps
xor
(bad)
lods
test
push
arpl
push
adc
or
cmp
and
stos
je
xlat
daa
and
inc
ret
inc
leave
add
add
dec
adc
repnz
out
jo
add
pop
pop
(bad)
or
out
bound
mov
ins
pop
pop
pop
cmp
xor
sahf
and
es
out
int
push
push
cmp
aam
and
ret
scas
enter
or
out
fsubr
popf
rol
mov
cmp
lods
sub
dec
stos
repnz
adc
mov
xor
fdiv
(bad)
sub
add
pop
stos
sub
push
stos
fldenv
and
loop
and
test
and
call
sbb
arpl
test
jo
je
jg
push
or
pop
xchg
popa
mov
fnsave
add
pop
bound
jno
fisttp
jge
dec
add
imul
shl
add
mov
and
and
aaa
jns
(bad)
jl
or
(bad)
sahf
add
dec
stos
jb
dec
mov
push
xor
and
div
loope
xor
xor
and
aad
inc
loopne
add
ds
aaa
mov
iret
mov
mov
int3
(bad)
xchg
out
mov
(bad)
or
inc
mov
in
push
xchg
xor
call
nop
push
xor
jbe
jp
push
or
pop
xor
lahf
inc
inc
imul
push
pop
fisubr
xchg
or
pop
sahf
mov
stos
adc
and
retf
push
ins
or
jb
mov
stos
mov
nop
push
call
jnp
mov
push
sbb
ss
adc
push
push
push
(bad)
xchg
jo
loopne
and
ss
aad
outs
mov
xor
arpl
xchg
mov
popf
sub
iret
push
mov
cmps
ds
mov
imul
xchg
add
pop
mov
loop
xchg
and
imul
sub
in
loop
in
inc
inc
and
test
cmps
sub
(bad)
fsubrp
fs
icebp
jl
add
mov
dec
dec
inc
es
push
inc
sub
push
outs
dec
inc
jno
icebp
es
xor
xor
sub
daa
das
inc
dec
sbb
push
xor
xor
ficomp
or
pop
es
xor
ds
cmp
sbb
xchg
adc
add
mov
lock
add
mov
adc
(bad)
push
mov
mov
mov
sbb
(bad)
lods
xchg
jge
outs
fist
loope
lock
mov
and
es
in
mov
mov
jle
xor
hlt
or
mov
scas
inc
sahf
xor
push
xchg
rol
outs
dec
jle
jno
inc
adc
loopne
fst
fs
icebp
jbe
std
or
cmp
and
sub
xchg
sbb
outs
not
xor
push
pop
imul
fcmove
mov
aam
shl
nop
ss
pop
push
or
cmp
pop
lods
and
aas
lods
mov
movs
inc
sub
add
test
ss
or
pop
rcl
movs
cmps
jle
xor
test
and
adc
test
cmp
test
data16
sub
xor
mov
rol
sbb
jg
xchg
mov
cmps
sbb
push
push
cmp
mov
add
jne
jne
cmp
sbb
(bad)
xchg
pop
test
jmp
out
pop
cmps
(bad)
lods
das
pop
mov
jl
icebp
push
fldcw
cmp
mov
sub
mov
sbb
jmp
inc
cmps
jecxz
scas
sti
add
jge
jg
sbb
sbb
jo
jmp
jno
mov
sub
add
dec
jmp
sub
daa
xor
push
and
das
fsub
fisttp
pop
cmp
sbb
mul
push
das
(bad)
cwde
xor
call
in
sbb
jno
and
push
repnz
ss
stos
or
dec
cld
push
and
jp
sbb
jmp
(bad)
mov
loopne
jae
test
sar
test
test
sub
sub
sbb
dec
sub
mov
mov
scas
add
leave
and
das
call
out
add
loope
sbb
adc
lock
and
lock
test
(bad)
jg
and
jne
jmp
leave
mov
xchg
jbe
test
loop
fnstcw
xor
lods
inc
es
mov
aas
pushf
mov
imul
stos
cmp
and
movs
stos
sbb
ds
adc
ret
sub
jle
ins
dec
push
xchg
sub
out
pop
jmp
push
cwde
pop
and
sbb
jmp
pop
test
jnp
inc
mov
out
loopne
pop
jb
sub
inc
test
icebp
sbb
cmp
sub
hlt
hlt
push
sbb
pop
mov
cmp
xlat
sub
cmps
cmp
mov
push
mov
(bad)
dec
cmp
ret
xor
sbb
fiadd
imul
mov
jl
sub
addr16
or
rcl
mov
sub
add
inc
(bad)
loopne
inc
or
daa
adc
adc
xchg
dec
sub
sub
push
ds
lea
xor
sub
mov
(bad)
fnstcw
out
jle
jnp
jle
or
mov
mov
inc
cmp
cmp
push
aaa
jbe
scas
sub
adc
pop
and
jo
cmps
and
and
test
test
fs
push
cmp
rcl
sbb
or
iret
add
scas
not
lods
test
cld
xchg
jl
dec
xor
and
cmps
lock
stos
sub
inc
push
jmp
sbb
fld
fistp
and
nop
add
out
and
cmps
test
push
push
inc
lods
add
mov
jp
sub
jle
dec
test
dec
and
inc
and
pop
ds
dec
and
imul
mov
and
xchg
movs
jae
test
jmp
push
sar
dec
lock
ins
sbb
cmp
daa
and
addr16
pop
add
pop
xor
ja
cmp
in
push
xchg
pop
inc
mov
int3
aas
shl
jnp
shld
xor
xor
or
sub
push
push
je
sub
movs
ins
push
push
xor
sub
aas
sbb
ss
or
inc
cmp
test
cmp
jns
xor
bound
and
call
in
(bad)
mov
(bad)
pop
aaa
pop
jne
xor
sbb
sub
scas
rcr
and
ins
mov
and
ss
xchg
fs
push
jmp
popa
test
jno
jns
xchg
nop
cmps
aaa
movs
popa
sahf
inc
mov
or
shufps
jmp
shl
mov
movs
imul
xchg
add
adc
dec
daa
scas
push
cs
sub
add
jns
inc
aam
sub
repz
push
jecxz
or
add
jne
cmp
mov
add
mov
add
ins
sub
jmp
sbb
push
sub
adc
pop
cmp
or
cmps
in
sub
or
or
mov
adc
mov
test
mov
pop
lock
jecxz
adc
push
out
pop
(bad)
cli
fld
push
mov
cld
adc
pop
push
scas
ins
aas
mov
xor
add
ror
call
dec
sub
adc
push
inc
arpl
cs
adc
pop
inc
mov
bound
pop
fisubr
adc
mov
loope
and
cmp
or
or
add
out
add
bound
cmp
(bad)
mov
dec
cmp
nop
push
mov
pop
xor
das
inc
das
add
mov
xor
mov
mov
mov
or
cmp
xchg
sahf
arpl
fcomp
pop
sub
hlt
daa
xchg
lods
adc
imul
or
pcmpgtd
mov
adc
aas
lods
adc
rcr
mov
jo
jno
mov
sbb
cmp
in
push
in
(bad)
mov
pop
or
and
idiv
es
(bad)
repnz
cmps
or
mov
jl
cmp
ins
not
cmp
add
inc
jl
xor
inc
xchg
dec
fld
arpl
xor
aam
lds
pusha
aas
mov
push
pop
leave
and
pop
jg
mov
pop
or
sbb
mov
lea
test
mov
mov
retf
push
mov
adc
test
clc
icebp
push
ret
or
cmp
ds
xor
es
data16
xchg
jmp
pop
and
xchg
ficom
mov
cmc
into
cmp
out
cmp
outs
jp
and
push
call
dec
scas
outs
xlat
div
out
or
jae
lods
add
xchg
dec
jle
xor
pop
cwde
sub
(bad)
aad
xor
mov
mov
fstp
add
ins
push
pop
inc
data16
adc
test
jp
adc
inc
sub
lock
sub
adc
adc
ins
scas
pop
sub
cmp
es
jnp
mov
cmps
mov
addr16
xlat
inc
sbb
test
adc
pop
pop
addr16
fsub
jmp
xchg
inc
mov
jb
vpminub
lods
or
jb
(bad)
outs
adc
rcr
out
leave
dec
cmp
add
sbb
cli
push
ins
mov
adc
not
xor
lahf
in
test
sahf
add
xchg
cmp
addr16
sub
mov
mov
test
mov
mov
pop
pop
movs
jmp
pop
jmp
data16
xor
add
xor
or
sbb
sti
es
push
ins
(bad)
arpl
pushw
scas
adc
xchg
dec
lods
aas
xchg
shr
in
fstp
(bad)
arpl
push
pop
sbb
jecxz
push
add
push
pusha
imul
push
cmp
jns
xchg
in
cmp
test
adc
(bad)
adc
ins
popa
ss
aaa
sub
and
ins
and
mov
scas
imul
and
adc
inc
push
aad
inc
sub
pop
cs
push
xor
movs
pop
stos
xchg
sub
pop
inc
mov
push
adc
add
leave
pop
or
or
sub
jp
add
in
fldenv
aaa
or
aam
fwait
mov
dec
dec
test
call
xchg
call
push
and
fdiv
ins
mov
je
push
mov
adc
cmp
ins
lods
(bad)
pop
ins
lods
sub
add
jle
jns
dec
sub
(bad)
push
xchg
bound
adc
imul
push
les
pop
mov
pop
data16
or
(bad)
in
es
out
daa
pop
out
and
out
mov
fcom
fstp
aas
xchg
fisub
jae
icebp
outs
cmp
sbb
sar
cmp
push
sbb
test
push
push
xor
cmp
enter
outs
cmps
adc
mov
jnp
pop
cs
push
outs
sbb
pop
inc
and
push
ds
and
inc
cdq
xor
ins
arpl
sub
adc
inc
mov
inc
(bad)
loop
stos
fs
mov
sub
add
add
sub
not
(bad)
test
test
push
adc
sbb
retf
and
movs
ins
jno
cwde
ja
enter
icebp
fild
sub
mov
lea
ror
and
fs
add
jnp
aam
dec
loope
xor
sbb
je
stos
fnstenv
cmovae
je
pop
repnz
mov
ja
push
jl
fwait
js
clc
add
mov
xor
mov
xor
and
inc
and
xchg
scas
ret
jge
add
cmp
(bad)
mov
mov
cmp
xor
cmps
xchg
movs
cdq
xor
pop
loope
push
stc
das
lds
add
xor
lds
in
adc
add
push
jg
dec
push
out
int
adc
ss
lods
push
mov
jl
adc
adc
inc
lea
jl
stc
fiadd
pop
sub
jbe
fsubr
mov
mul
imul
ds
sbb
xchg
fisub
mov
dec
in
or
sub
ds
sbb
js
inc
sub
retf
mov
cmp
sbb
sub
inc
je
xchg
fsub
cmp
(bad)
dec
ror
stos
aaa
inc
pop
aam
sbb
push
and
ss
jbe
es
stos
imul
jmp
out
stc
push
es
imul
pop
out
arpl
jae
mov
loopne
fwait
pop
leave
and
ror
imul
retf
cmp
out
outs
cmps
cld
mov
jne
xchg
push
loope
ins
(bad)
jl
inc
mov
mov
cmps
and
jmp
ds
loop
pushf
rcr
mov
xor
xchg
jle
pop
in
shl
loopne
es
push
popf
pop
pushf
mov
aaa
mov
(bad)
adc
(bad)
add
mov
cmp
add
out
loopne
jb
stc
mov
out
(bad)
call
adc
in
cmps
jnp
adc
outs
mov
(bad)
inc
imul
push
xchg
jp
outs
lea
arpl
adc
es
xchg
outs
jecxz
dec
popa
pop
jns
in
fistp
inc
movs
outs
call
icebp
aad
popf
xor
movs
arpl
lods
movs
push
sub
sbb
daa
jp
ss
jle
loope
fwait
cmps
icebp
loop
ds
pop
sbb
add
call
push
dec
dec
es
jno
mov
outs
ss
jmp
popa
pop
pop
ds
inc
xchg
nop
or
cmp
pop
aad
or
por
sub
ja
iret
mov
out
jge
gs
(bad)
cmp
stos
repnz
int
(bad)
pop
je
movs
or
push
or
test
push
scas
mov
mov
add
test
aas
dec
call
pushf
je
and
iret
inc
retf
cmp
repnz
jmp
in
std
or
cli
add
push
add
and
in
sub
cmp
mov
lods
push
cli
mov
add
pop
pop
push
ja
ss
and
fadd
inc
fsubp
push
fbld
call
arpl
imul
cmp
cmp
mov
sub
inc
adc
xchg
sbb
nop
mov
jmp
cmp
pop
jo
(bad)
loop
jne
loop
loope
xor
sbb
pop
femms
push
aas
xchg
and
outs
scas
jle
add
push
mov
icebp
pop
aas
ins
test
pusha
shl
jp
push
xor
or
loopne
add
fucompp
lods
or
fdivr
push
mov
cwde
jmp
inc
popf
xchg
push
loope
xor
dec
es
out
jge
inc
ficomp
mov
or
sbb
jl
repnz
fs
xor
sahf
or
nop
arpl
cld
cmp
data16
(bad)
cli
jecxz
add
in
mov
ds
pop
pop
out
ds
movs
mov
push
loop
cmp
sub
dec
adc
sub
repz
fidivr
sahf
dec
ss
push
xchg
in
pop
mov
lea
jle
ins
sbb
aaa
rol
sub
lock
add
push
pop
je
(bad)
mul
neg
jmp
mov
lods
jg
iret
jo
xchg
push
mov
test
lea
xor
test
outs
mov
outs
in
ins
arpl
push
call
jmp
or
ss
imul
mov
jo
repz
ds
xor
stos
std
data16
sub
call
sahf
movs
gs
movs
inc
mov
rol
cmp
add
pop
push
call
sbb
icebp
ret
mov
xor
pop
sub
xchg
or
ret
sahf
iret
arpl
xchg
out
sub
push
in
jno
adc
and
scas
mov
out
imul
adc
stos
dec
xchg
jmp
outs
rol
ins
es
pop
cld
jle
cmp
mov
fidiv
mov
cmp
dec
dec
call
js
movs
push
dec
xor
leave
add
es
or
sbb
jp
es
add
test
loope
dec
cdq
and
adc
cmps
xor
arpl
xor
jg
add
aaa
jb
or
fnstenv
or
enter
test
jnp
dec
je
sti
push
mov
cmp
sub
sub
stos
(bad)
xchg
xor
add
mov
push
pop
or
int3
mov
jmp
ss
sbb
xor
mov
scas
stos
mov
mov
lds
sbb
sbb
add
ins
out
(bad)
fsub
adc
and
pop
movs
pop
out
sbb
cmps
jle
push
ss
loop
shr
or
outs
and
add
sbb
xor
sub
inc
lods
ds
nop
push
and
ss
movs
cmp
lods
(bad)
sub
popf
inc
outs
sub
adc
bound
outs
test
xor
push
imul
push
popa
push
xor
outs
pop
dec
sar
mov
and
inc
push
cmp
imul
inc
or
xchg
cmp
retf
int3
mov
inc
pop
mov
cdq
and
neg
stos
push
adc
dec
aam
bound
push
sub
adc
xchg
pop
cmp
js
hlt
cmps
add
fcomp
jecxz
fstp
fs
mov
mov
cld
push
cmp
and
(bad)
mov
fs
inc
push
sbb
ret
or
loopne
inc
or
aaa
ins
jle
sub
sub
jnp
aaa
adc
(bad)
dec
cmp
xor
xlat
xlat
lods
ffree
sub
rcl
push
shl
xchg
ins
call
cmp
jle
mov
and
shl
jb
push
mov
and
ficomp
pop
sbb
sub
adc
aam
xchg
(bad)
fcom
inc
jb
sti
mov
jmp
ja
push
mov
(bad)
daa
add
rcl
scas
pop
or
pop
add
cmp
push
cdq
test
pop
aaa
xor
and
stos
in
popa
test
and
popf
lods
mov
jb
out
cmps
repnz
sub
mov
mov
mov
call
push
imul
lods
ins
xor
loopne
rcl
sahf
mov
fstp
rep
xchg
ret
and
xchg
mov
imul
push
shr
inc
pop
gs
cmc
jmp
and
sub
jnp
jg
push
adc
or
or
cmp
cmps
ins
adc
rcr
jmp
or
add
test
cwde
push
xchg
fwait
imul
shl
or
push
jmp
and
outs
add
pop
gs
arpl
sbb
xlat
fldpi
add
adc
pop
mov
mov
fdiv
sub
arpl
int
inc
jns
xchg
jge
leave
popa
mov
int3
lds
xchg
mov
cwde
inc
xlat
stos
add
mov
div
out
repz
call
xor
lods
pop
dec
aas
jno
push
sub
pop
fild
sbb
psllw
ins
inc
add
adc
dec
cmp
cmps
fsubr
mov
imul
adc
inc
lods
lds
in
imul
aas
pop
dec
push
clc
fst
aad
dec
xor
jae
(bad)
jge
out
in
imul
arpl
jne
push
cli
dec
pop
mov
cwde
cmp
cmp
dec
push
movs
jnp
and
or
pop
enter
and
(bad)
movs
xchg
stos
inc
jge
inc
pop
imul
jae
gs
dec
sahf
or
(bad)
xchg
xor
jae
outs
pop
sbb
mov
xchg
stos
in
pusha
xor
adc
dec
push
shl
add
out
adc
pop
add
jmp
jb
mov
not
stos
sbb
sbb
sahf
ins
sahf
sub
shr
jecxz
ds
add
xchg
mov
sbb
xlat
jae
scas
les
movs
cmp
and
aam
lock
inc
es
test
out
add
sar
movs
scas
ss
outs
xchg
jle
rcl
cmp
(bad)
pop
jbe
mov
and
sahf
adc
test
sbb
sub
out
gs
es
add
mov
bound
cmp
ja
add
cmps
pop
fucom
data16
in
mov
or
jno
aam
jmp
ficomp
ret
xchg
cmp
movs
dec
cmp
adc
(bad)
mov
inc
lea
mov
mov
in
cmp
adc
movs
fnsave
outs
sbb
popa
push
loope
and
stos
inc
jmp
mov
push
in
jp
jmp
inc
pop
outs
jl
(bad)
and
popf
outs
push
mov
sahf
sbb
jge
retf
mov
and
arpl
pop
push
push
or
and
push
daa
pop
jg
imul
dec
aas
jo
push
aas
push
sbb
push
ja
add
jnp
cmp
add
push
xchg
and
shr
and
cmp
mov
ret
jmp
jo
and
int3
pop
shl
int
in
test
jnp
aaa
dec
retf
adc
sbb
sbb
or
mov
xor
(bad)
fist
cli
bound
mov
jmp
sub
rcr
push
hlt
and
and
xlat
pop
test
cli
cmp
fld
fcom
mov
dec
push
test
jae
and
adc
shl
pop
add
sbb
in
xchg
and
outs
mov
mov
jecxz
adc
adc
pop
and
mov
mov
scas
push
sub
and
call
or
cmp
sbb
nop
retf
cmp
pop
inc
(bad)
lock
(bad)
fcmovnbe
dec
rcl
pop
inc
sbb
pop
xor
push
push
(bad)
push
jbe
out
fs
cmp
sbb
or
mov
sub
arpl
data16
lock
lods
and
push
adc
jp
jo
xor
jo
jge
mov
or
out
es
pop
cmp
mov
and
out
ret
adc
stos
mov
ficom
push
pop
and
add
dec
ins
mov
mov
and
(bad)
pop
(bad)
mov
mov
mov
sub
push
xchg
mov
ds
outs
pop
ja
mov
shr
movhps
sahf
pushf
or
pop
xor
sbb
data16
xor
sar
add
repnz
aas
jle
dec
hlt
push
pop
lods
sub
gs
push
(bad)
fimul
mov
push
sub
jle
jl
and
mov
movs
jno
xchg
xchg
sbb
gs
jge
gs
pop
xor
mov
pop
pop
repz
xchg
pop
push
sub
stos
fcom
(bad)
mov
shl
jge
arpl
sbb
and
movs
popa
nop
push
push
data16
push
push
mov
sub
out
and
pop
sub
mov
sub
sub
push
neg
xchg
retf
mov
cmp
dec
mov
dec
mov
cwde
outs
adc
out
mov
mov
outs
xlat
xor
sub
cmp
xor
or
and
sub
xor
test
rcr
data16
dec
in
lock
inc
mov
jle
push
sbb
push
jl
out
das
scas
jle
push
repnz
mov
rcr
inc
loop
xchg
and
jno
in
movs
push
test
and
push
gs
jg
(bad)
cmp
imul
mov
xlat
mov
ret
aas
iret
xor
aam
(bad)
rcl
js
inc
push
jmp
dec
int3
(bad)
push
inc
stc
mov
imul
and
out
bound
retf
aam
daa
out
sbb
cmp
inc
jmp
ds
mov
jns
pusha
into
gs
jecxz
add
xor
xchg
leave
clc
and
(bad)
mov
lea
int
sub
add
mov
shr
pop
mov
stos
jle
and
sahf
mov
out
push
jnp
cmp
sbb
fmul
pop
push
ins
out
dec
movs
imul
push
push
ss
sbb
ret
xor
out
adc
fsub
push
mov
out
cmp
movs
shr
cmps
cmp
mov
inc
mov
je
(bad)
pop
xor
gs
jno
pop
add
add
push
adc
push
mov
sbb
cmp
movs
in
mov
outs
out
cmp
push
xchg
fs
jbe
push
loopne
cmp
in
cdq
adc
scas
cmp
fcom
push
ss
ss
jecxz
out
lock
xchg
loop
and
xor
gs
mov
outs
sub
and
push
xor
dec
mov
and
and
aad
jl
mov
fs
lods
sub
add
sub
test
sahf
mov
popa
or
inc
add
jo
add
sbb
push
xchg
sub
xchg
ds
jno
xchg
xor
pop
and
(bad)
jno
inc
fbstp
lock
mov
inc
movs
mov
call
push
push
call
inc
jo
arpl
sub
jo
inc
mov
stos
jnp
push
test
or
xchg
or
fsubr
xor
jne
ins
movs
xchg
adc
(bad)
cmp
jp
xchg
inc
cmp
jbe
dec
jg
mov
pusha
dec
sub
mov
jl
data16
adc
aas
mov
sub
div
test
loope
aam
test
or
pop
mov
mov
rcl
ins
xor
jnp
cld
or
and
out
arpl
stos
push
dec
xor
icebp
loop
push
sar
stos
push
sahf
or
cmp
fisubr
scas
xchg
sub
scas
cmp
pusha
fs
cli
sbb
in
fild
shr
push
mov
mul
leave
ja
cmp
sbb
jns
or
inc
xor
jmp
jb
or
jnp
mov
xor
add
mov
or
adc
fwait
inc
sub
jbe
dec
cmp
mov
jmp
and
xor
inc
inc
movs
mov
pusha
in
sub
xor
mov
dec
fwait
and
loopne
mov
jbe
fsubp
fimul
push
sub
dec
sahf
sbb
(bad)
packuswb
movs
sub
mov
ja
(bad)
cli
(bad)
xor
push
dec
ds
test
mov
jns
out
mov
xchg
loop
add
cli
xor
into
aam
xchg
sub
inc
cmps
or
sbb
out
sub
inc
imul
imul
mov
sub
stc
jnp
jp
sti
mov
jle
repz
pop
(bad)
push
lock
and
mov
sti
rol
fstp
add
fsubp
jo
dec
adc
sar
shl
lea
dec
ss
inc
jbe
call
cmp
ins
aas
sub
pop
jae
pop
inc
pop
jl
mov
inc
or
lock
inc
fst
arpl
in
lds
pushf
aas
ds
push
retf
xchg
pop
sub
cmp
sti
ficomp
pop
or
inc
jo
xor
shl
jbe
dec
sbb
cmp
gs
or
in
ds
mov
push
fdivr
add
add
outs
mov
jb
sar
es
lea
(bad)
mov
sbb
repz
jns
adc
mov
inc
xchg
ret
add
inc
push
mov
xchg
scas
sbb
mov
adc
sbb
push
adc
and
addr16
and
push
inc
jno
(bad)
cmp
xchg
ja
push
inc
pop
popa
fldcw
mov
xchg
push
test
and
mov
mov
les
jmp
add
jbe
add
mov
test
(bad)
fiadd
sahf
outs
push
aas
inc
cmp
ss
aad
mov
xor
xor
push
adc
xor
adc
jbe
add
add
push
or
in
adc
add
dec
ror
mov
push
in
je
retf
mov
loope
xor
mov
pop
jle
iret
jp
and
and
push
(bad)
lods
lea
test
xor
ins
push
(bad)
push
inc
imul
push
xchg
rcl
mov
sbb
jge
xchg
push
jg
(bad)
mov
adc
(bad)
mov
call
ins
mov
loop
push
jo
or
push
push
jae
test
or
or
adc
(bad)
out
ror
inc
stos
pop
jmp
fldcw
xor
mov
sbb
adc
jle
imul
and
dec
adc
in
sbb
inc
push
or
cmp
mov
cmp
leave
or
cmp
out
xchg
clc
(bad)
fsubr
(bad)
je
mov
lock
pop
into
lahf
call
imul
mov
iret
fucomp
out
adc
xchg
adc
les
icebp
int3
xor
aas
loop
jo
jg
and
mov
fisub
and
adc
ins
xchg
sub
es
push
sub
ret
sti
jno
mov
(bad)
lods
(bad)
std
ins
add
xchg
sub
dec
xor
jbe
sub
ret
sub
dec
movs
mov
and
mov
sbb
inc
sub
lods
fiadd
data16
jo
jle
movs
cmp
inc
and
ret
mov
out
mov
mov
nop
aam
mov
aad
xchg
inc
jno
loope
push
jne
fiadd
sbb
ret
idiv
sub
mov
mov
lahf
mov
ficomp
cmps
xlat
movs
out
fcompp
cmp
cmps
jae
imul
push
leave
mov
cmp
jne
and
pop
adc
adc
pop
mov
sub
mov
lods
stos
outs
ins
fsubr
jbe
add
adc
test
(bad)
push
sub
bound
adc
fisub
sub
and
fs
cld
cdq
or
out
sub
push
std
stos
or
xor
sbb
pop
cmps
test
push
jne
in
ja
sbb
ret
ss
daa
fldcw
mov
out
mov
cmp
inc
fisubr
icebp
arpl
or
cld
fidiv
pushf
mov
fst
icebp
into
and
and
jg
sub
mov
xor
inc
imul
test
dec
cmp
xor
inc
dec
xchg
cmp
mov
jecxz
jg
xchg
xor
ins
fidiv
out
(bad)
mov
pop
inc
call
dec
jo
call
popa
xchg
(bad)
lods
jo
push
(bad)
addr16
ds
stos
pop
adc
es
movs
jbe
aas
sbb
pop
aad
push
pop
inc
fs
xchg
retf
mov
push
pop
xor
mov
ror
ret
das
adc
cmp
dec
sti
das
and
adc
or
xor
add
jns
sbb
ds
ret
inc
sub
jbe
xor
jle
and
sub
sbb
addr16
sbb
xchg
fisttp
sbb
cmp
je
push
push
xor
pop
xlat
dec
pop
js
ror
outs
ds
into
xor
jl
arpl
mov
idiv
test
sbb
xor
imul
xchg
jb
lods
xchg
test
cmp
pop
div
push
(bad)
xchg
lods
out
xchg
lock
(bad)
lods
sti
leave
fst
leave
cwde
and
pusha
sub
pop
push
push
enter
or
xor
push
icebp
fdivr
fisubr
rcl
int3
sub
sub
mov
ret
sub
and
jno
scas
enter
cmp
fldcw
xor
movs
ss
lods
xor
scas
pop
xor
push
dec
mov
retf
(bad)
push
and
int
out
or
sub
and
(bad)
fdiv
pop
in
ins
retf
add
(bad)
(bad)
and
and
les
popf
inc
or
or
dec
jb
xor
jle
xor
sub
lock
jle
mov
pop
bnd
dec
(bad)
sub
out
push
ds
cwde
into
hlt
ror
in
scas
and
jo
sbb
pop
xor
ficom
mov
into
cmps
ss
mov
mov
jb
jae
cmp
lods
icebp
stos
dec
push
push
(bad)
es
outs
cmp
fadd
push
out
cmp
sub
inc
push
xor
sub
sub
mov
cmp
sbb
or
xchg
inc
mov
cmp
xor
mov
dec
jmp
pop
dec
std
sub
in
gs
jmp
packssdw
sub
and
pop
in
out
cli
xor
sbb
push
adc
shl
sub
push
add
sub
push
ds
pop
rcr
cmp
xor
push
aaa
das
popa
and
add
retf
jno
push
mov
mov
sub
es
jl
ror
mov
sub
leave
mov
call
mov
jo
jno
dec
lea
mov
adc
cmp
jmp
popa
stos
nop
addr16
sub
dec
pop
iret
mov
std
inc
(bad)
ss
cwde
cmp
pop
pop
daa
(bad)
cld
or
sub
inc
pop
adc
rol
test
sub
pop
in
jle
lds
mov
sub
dec
cmps
popa
test
jae
sub
cmp
fisubr
movs
jecxz
jle
das
inc
xchg
dec
push
mov
out
test
outs
div
gs
sub
aad
dec
mov
ins
lods
and
jno
mov
ja
cli
and
(bad)
jo
loopne
ds
cmps
jmp
inc
nop
sub
aas
cmc
adc
leave
pminsw
aad
adc
es
popa
push
fistp
xchg
aam
dec
cmps
cmp
inc
daa
jmp
sbb
stc
or
or
inc
pop
xchg
lods
push
adc
retf
ja
adc
pop
stc
ja
shl
lea
xchg
adc
xchg
mov
mov
mov
add
int
and
loopne
and
mov
(bad)
fmul
and
xchg
mov
jmp
cmc
ss
(bad)
or
pop
cmp
icebp
jle
cmc
data16
hlt
sub
and
xor
stc
cmps
cmp
xor
ret
imul
lods
ins
movs
push
adc
sbb
push
scas
sub
jl
push
(bad)
mov
aam
aas
jg
add
jnp
(bad)
adc
retf
push
lahf
cmp
(bad)
xchg
mov
dec
xor
sub
add
inc
pop
(bad)
push
adc
xchg
push
mov
sub
add
adc
xor
xchg
push
and
ror
icebp
xor
aas
loop
fimul
aaa
test
je
sub
cmp
mov
pop
js
add
push
adc
xchg
fs
push
cwde
sahf
and
mov
pop
mov
fwait
mov
or
pop
and
mov
dec
jg
fs
ret
and
cwde
mov
xchg
cmp
icebp
das
sub
cmp
mov
movs
pop
adc
sub
lock
jno
(bad)
adc
sub
arpl
out
sub
adc
xor
stos
xor
pop
and
xor
dec
dec
sbb
outs
ret
stos
xor
ins
xor
outs
hlt
sub
and
or
rcl
add
add
fild
inc
into
fild
or
push
pop
mov
ret
shr
mov
cmp
pusha
push
fcomp
shl
mov
adc
or
cmp
(bad)
mov
outs
xor
sar
push
icebp
mov
sbb
mov
ret
sub
jge
xor
ja
jl
inc
std
mov
mov
xchg
in
sub
scas
xlat
sbb
ret
scas
lock
sub
and
je
add
xchg
cmp
and
movs
aas
push
scas
push
xor
cmp
sbb
adc
mov
repnz
das
pop
stos
icebp
or
repnz
test
leave
and
dec
das
xor
cmp
js
mov
mov
addr16
es
pushf
jl
arpl
mov
es
lahf
mov
in
or
retf
jl
adc
pop
xor
dec
xchg
ds
arpl
test
mov
hlt
mov
stos
xor
and
jnp
leave
push
push
mov
pop
enter
inc
sahf
ja
shl
retf
es
stos
daa
ds
dec
sbb
and
outs
sub
jae
add
int
sub
jecxz
push
das
aam
push
sub
stos
loope
in
jmp
mov
xor
pop
stos
pop
into
mov
or
mov
leave
ds
push
xor
out
dec
movs
jo
push
mov
aam
sub
aad
shl
data16
scas
shl
mov
std
fstp
mov
mov
add
pop
sahf
sti
push
pop
add
daa
jns
retf
nop
jg
and
jmp
and
aad
rol
hlt
fisttp
stos
jecxz
dec
jg
jp
add
addr16
fistp
or
pop
add
push
daa
lock
sub
xlat
stos
sub
fistp
(bad)
mov
test
out
dec
or
inc
pop
xor
jbe
adc
sub
repnz
and
in
ret
mov
into
loope
outs
cwde
and
movs
stos
jecxz
sbb
sbb
sbb
pop
test
stos
lock
out
arpl
sbb
jo
jge
ror
mov
xor
stos
adc
sbb
and
fsubr
or
addr16
mov
ret
cmp
dec
cmp
lods
mov
addr16
sub
sub
ss
std
ins
ret
sub
sahf
call
sbb
inc
cmp
mov
inc
mov
mov
inc
jne
adc
test
cmps
push
and
mov
cmp
sbb
xchg
cld
jg
test
and
fwait
xchg
loop
jge
outs
push
xchg
fwait
rcl
in
lock
sbb
fs
pop
out
lods
cmp
and
daa
cmp
in
dec
cmp
pop
jmp
enter
push
loope
retf
(bad)
hlt
mov
fldenv
mov
in
mov
inc
(bad)
jle
loope
xor
idiv
test
ret
pop
jmp
push
push
mov
sub
push
push
jns
mov
and
cmp
xchg
dec
inc
mov
fadd
xlat
cld
mov
pop
mov
jmp
sub
fs
jmp
mov
or
(bad)
lds
sub
sub
test
adc
xchg
enter
fsubr
mov
sub
push
dec
cmp
mov
bound
mov
sahf
addr16
or
adc
sbb
push
sub
push
mov
mov
push
lods
out
ins
ins
mov
xor
add
movs
sbb
cmp
inc
mov
outs
sahf
pop
xchg
ror
stos
cmp
mov
mov
jo
jno
jp
cmp
addr16
outs
dec
fwait
pop
pop
and
shl
jle
sbb
or
xor
movs
xor
sub
cld
xchg
mov
jmp
pop
icebp
loopne
call
mov
mov
nop
jo
add
push
repz
ss
cmp
stos
or
aad
psubb
pusha
bound
sbb
cmps
movs
(bad)
out
sbb
xchg
add
jl
push
data16
shl
mov
rcl
sub
adc
daa
and
pop
adc
ins
test
xor
imul
push
sub
mov
and
ss
loop
cmp
enter
es
jp
mov
pop
sbb
jmp
adc
mov
mov
mov
ret
and
push
sahf
xor
cmps
jb
das
aas
mov
data16
fs
loop
jmp
adc
inc
sub
(bad)
icebp
mov
dec
icebp
rcr
and
lods
ret
push
xor
jge
sub
pop
scas
adc
jns
xor
mov
adc
jb
call
sub
pop
push
js
mov
stc
fbstp
(bad)
data16
lods
jne
xchg
xchg
hlt
pop
jp
push
pop
stos
cdq
cmp
cmp
in
jle
add
iret
dec
jmp
cmp
jmp
and
out
jbe
cdq
ret
adc
loop
pushf
sub
enter
push
jp
pop
daa
(bad)
jno
pop
arpl
(bad)
cmps
or
and
xlat
jg
and
add
dec
fcmovnb
call
icebp
daa
es
or
cmp
les
inc
sbb
mov
sbb
cmp
mov
sub
push
add
mov
mov
or
loope
cwde
jmp
(bad)
mov
cwde
inc
lods
push
inc
sbb
pop
aam
add
jl
js
int3
add
xchg
int3
mov
lods
mov
mov
pop
repnz
sub
push
imul
test
into
shr
rcr
shl
mov
je
retf
lods
imul
xor
aas
lods
popa
movnti
inc
in
cmps
daa
ja
dec
aas
leave
sub
pop
mov
sbb
int
add
mov
ins
push
pop
push
ret
add
xor
dec
jmp
out
adc
push
cmp
pop
enter
imul
test
pop
cmp
cwde
mov
push
(bad)
mov
adc
lock
mov
pushf
mov
add
mov
jp
in
and
or
dec
jmp
jns
cmp
sub
add
jmp
daa
imul
push
or
repnz
add
movs
push
(bad)
test
jecxz
dec
bound
lds
xor
adc
(bad)
push
add
cmp
jo
movs
repnz
mov
es
jo
inc
xchg
loop
dec
mov
movs
ret
out
lods
imul
(bad)
out
jmp
fidivr
inc
xchg
gs
out
mov
(bad)
and
cmps
mov
retf
mov
out
std
sbb
jb
stos
mov
shl
cmps
les
movs
cdq
mov
inc
xor
outs
out
arpl
xor
std
mov
add
jo
imul
pop
mov
(bad)
shr
jae
mov
imul
lods
xor
xor
lds
jne
into
out
mov
aam
pop
mov
in
xor
iret
into
ds
fs
aam
inc
jmp
shr
pop
movs
mov
leave
lahf
and
ds
mov
cmc
jbe
and
outs
pop
push
sub
push
mov
push
xchg
mov
test
mov
xchg
fisub
mov
mov
and
fcomi
sbb
xchg
mov
stos
jmp
xchg
and
add
ja
or
clc
jge
out
hlt
sub
inc
(bad)
ret
xor
xchg
and
sub
jmp
repnz
push
ss
mov
ret
push
mov
leave
dec
int
gs
(bad)
mov
mov
gs
ja
jecxz
add
ret
xor
mov
jbe
mov
mov
daa
jno
cmps
cmp
clc
aad
push
cmps
into
xor
ins
sbb
and
pusha
sahf
sbb
(bad)
jge
xchg
cmp
data16
jns
jecxz
push
int3
xor
push
std
jle
cmp
frstor
xor
adc
ins
xchg
mov
cmp
(bad)
mov
xchg
adc
pushf
inc
sub
in
push
test
sahf
jbe
ret
(bad)
fwait
dec
pop
leave
mov
shld
(bad)
mov
cmp
ins
push
mov
jmp
push
in
push
aas
lahf
imul
inc
fcom
fisub
mov
ret
daa
out
into
ds
push
sbb
leave
mov
xchg
test
rol
aas
mov
adc
xchg
or
jecxz
adc
sbb
jecxz
or
sub
adc
movs
add
into
push
rol
jg
xor
jo
je
es
loopne
push
stos
mov
jno
clc
retf
fsubr
lock
mov
imul
push
push
mov
test
out
xchg
and
stc
cmp
jle
xchg
fimul
or
outs
cmp
xchg
test
mov
fistp
or
push
xchg
mov
scas
or
xor
jno
sub
leave
loope
mov
fwait
push
inc
out
jmp
es
iret
jbe
ins
xacquire
xchg
adc
push
imul
dec
pop
or
jg
dec
or
test
add
adc
dec
adc
xchg
jmp
aam
cld
movs
scas
or
ds
mov
push
es
adc
icebp
shr
push
(bad)
push
cmp
jo
push
into
les
data16
jecxz
ss
loopne
cmps
inc
popf
mov
fs
or
inc
data16
add
jo
es
or
sub
lods
cmp
jg
jae
and
xchg
cmp
es
sub
xor
xchg
cmps
je
and
int
lods
cmps
aaa
rcl
sbb
mov
mov
shr
mov
imul
fs
in
lods
xor
fsubr
in
sbb
sub
fcmovnu
sub
add
pop
mov
mov
scas
cmp
add
add
dec
ror
adc
scas
outs
sub
(bad)
mov
scas
loope
retf
in
or
mov
dec
or
out
outs
pop
push
xchg
pop
mov
out
xor
ret
sbb
fild
sub
jmp
jo
mov
push
pop
pop
jne
pusha
inc
inc
div
cmps
pop
outs
and
les
mov
cmps
mov
pop
dec
enter
lds
cmp
outs
adc
mov
push
ret
hlt
jl
enter
sbb
push
inc
fldcw
xchg
push
pop
pop
nop
xchg
inc
xchg
mov
pop
jmp
mov
jp
jo
adc
std
lahf
mov
inc
pop
aad
push
and
mov
mov
ret
and
inc
ret
and
bswap
pop
sahf
fadd
sub
xchg
retf
cmp
mov
mov
inc
sub
jae
movs
fiadd
fscale
test
add
jge
and
inc
add
test
ss
dec
popa
pushf
rol
mov
data16
outs
mov
cmps
mov
add
cs
aam
xchg
xchg
gs
js
dec
sbb
push
xchg
adc
aas
mov
and
pop
pop
cdq
and
sub
sub
xchg
pop
inc
pop
and
jbe
cmp
sahf
(bad)
aaa
imul
and
pop
pushf
and
imul
fidivr
fistp
mov
mov
mov
push
cmp
push
addr16
inc
or
sub
loope
adc
push
sub
inc
xchg
sti
xor
push
nop
test
mov
push
sub
mov
je
cli
mov
jmp
inc
js
mov
inc
retf
push
daa
idiv
or
outs
mov
pop
sub
xchg
gs
mov
sub
inc
push
cli
(bad)
xchg
movs
popf
dec
xchg
into
dec
push
retf
hlt
je
add
xchg
ret
sbb
sahf
or
(bad)
repnz
dec
mov
(bad)
ror
add
repnz
jns
and
inc
mov
adc
ret
cmp
cmp
adc
jmp
lods
mov
leave
inc
push
add
icebp
xchg
sub
or
call
fild
xor
add
sti
loope
dec
mov
outs
mov
dec
rcr
xchg
loope
clc
aas
ds
xor
in
jno
dec
sub
icebp
jmp
jo
out
jns
xor
mov
pop
push
push
sub
stos
xor
hlt
test
stos
or
mov
xchg
push
pop
pop
ins
out
fiadd
sub
adc
pushf
jb
mov
dec
test
sbb
popf
scas
(bad)
rol
out
adc
mov
call
sub
dec
sub
fs
scas
out
cli
mov
outs
dec
or
xchg
xor
jne
or
ss
mov
jae
jmp
jns
sub
sub
pop
jns
dec
sbb
lea
lock
stos
outs
xchg
(bad)
jle
gs
in
jno
adc
adc
pop
lock
add
bound
add
ror
push
outs
push
(bad)
repz
sahf
xchg
sbb
xchg
(bad)
lea
fidiv
jl
cmp
sti
sar
pop
arpl
movs
rcr
adc
adc
jnp
dec
jb
dec
xor
pop
xchg
imul
cdq
cmp
sahf
sbb
cmp
ins
(bad)
repnz
push
mov
add
icebp
xor
retf
push
and
outs
xor
mov
rcr
dec
fimul
(bad)
xchg
(bad)
xlat
ss
inc
xchg
jl
inc
sbb
dec
movs
sub
loop
out
xor
loop
and
sub
(bad)
push
or
scas
mov
cli
xor
jb
lea
jge
(bad)
and
mov
xor
ins
mov
sbb
imul
ins
jns
mov
jp
mov
data16
xor
(bad)
daa
cmc
inc
movs
and
sbb
sbb
clc
or
inc
jmp
cmp
adc
sbb
and
or
or
xlat
movs
mov
push
mov
push
ins
xor
sbb
push
add
mov
addr16
push
and
cmp
ret
add
sbb
push
jnp
fs
inc
out
jge
ja
xor
data16
adc
xor
mov
xchg
in
cmp
fmulp
call
cli
push
test
xor
fistp
ins
mov
cmp
test
frstor
mov
enter
push
xor
in
in
(bad)
mov
adc
gs
and
outs
mov
lds
scas
jl
mov
mov
outs
xchg
sub
ja
cmp
sub
cmps
and
or
aas
ins
push
pop
lock
arpl
ret
add
fmul
inc
cwde
jno
cli
mov
fisubr
push
mov
shl
call
(bad)
pop
mov
mov
int
and
out
aaa
mov
popf
das
movs
mov
xlat
add
arpl
pop
test
jnp
mov
and
rcl
add
and
rcr
lahf
addr16
ja
jno
xchg
stos
inc
jno
push
into
fisttp
dec
(bad)
in
mov
push
fsub
jae
leave
sub
mov
xchg
icebp
imul
xor
push
fisubr
loopne
and
mov
inc
rol
dec
or
pop
dec
js
xchg
push
aaa
or
cmps
or
add
mov
or
lods
call
push
mov
cmp
sbb
aaa
es
jmp
add
mov
out
scas
or
out
or
mov
gs
mov
movs
xchg
cli
mov
mov
in
sub
pop
fiadd
das
pop
cmc
jl
pop
movs
push
sbb
pop
mov
(bad)
push
push
mov
stos
and
and
dec
rcl
aaa
cmp
push
scas
lds
fwait
and
imul
lods
test
ret
fbstp
and
push
cmps
sub
cmp
ret
sub
mov
ins
imul
jmp
cmps
out
cli
mov
mov
int3
fimul
(bad)
jmp
mov
(bad)
int3
test
mov
cmp
sbb
cs
mov
or
aam
jle
jno
pop
pop
mov
sbb
adc
jbe
or
push
(bad)
mov
push
sbb
stos
adc
leave
xor
mov
push
imul
int
pop
repnz
mov
xchg
dec
sub
push
xor
(bad)
fsub
das
xchg
nop
inc
jne
push
cmp
xchg
xor
cmp
inc
into
je
in
dec
ret
inc
std
shl
inc
icebp
cmps
ja
jle
outs
sub
pop
jnp
and
inc
pop
sub
es
xor
sub
cli
push
(bad)
push
inc
xchg
and
jo
adc
cmps
call
or
jnp
cs
rcl
adc
call
fsubp
fwait
jp
and
ret
lods
sub
stc
je
in
push
stos
es
mov
(bad)
mov
test
pop
popf
out
and
(bad)
out
adc
je
and
cmps
cmp
xor
jp
out
jmp
sub
sub
xor
das
(bad)
leave
push
inc
inc
test
pop
into
sbb
mov
push
mov
or
xchg
sbb
adc
jmp
imul
dec
pop
fs
jns
sbb
sbb
pop
dec
scas
ds
sub
stos
repz
sub
cmp
aad
mov
(bad)
les
adc
out
inc
push
dec
pop
ds
ins
and
mov
dec
push
das
aas
ret
push
push
dec
cmp
dec
xchg
add
add
jae
xchg
(bad)
dec
and
fldln2
jo
dec
es
inc
xchg
cmp
adc
push
clc
outs
mov
adc
add
xor
inc
imul
inc
faddp
aaa
dec
or
repz
loopne
rcl
sbb
jnp
sbb
daa
sbb
adc
cli
sub
das
push
and
xchg
sbb
sub
push
lods
add
xchg
add
mov
ss
in
les
push
leave
lods
enter
pop
mov
ret
sub
sbb
out
lea
cld
mov
sub
mov
inc
push
sar
mov
ror
out
push
cmps
call
push
pop
imul
(bad)
in
sub
sti
and
inc
pop
in
(bad)
repnz
cmps
lea
aaa
iret
xchg
stos
dec
(bad)
and
bound
data16
ret
fs
push
mov
es
sub
push
and
adc
cmps
xchg
aaa
ret
lods
aas
ins
inc
test
xchg
mov
data16
pop
out
mov
call
mov
shr
xchg
inc
jb
xor
cmps
(bad)
jecxz
addr16
pushw
test
inc
add
jbe
sub
sbb
(bad)
cmp
mov
cmp
(bad)
dec
cmp
imul
push
stos
mov
repnz
cmp
arpl
push
popa
fadd
in
push
add
cmp
and
daa
ss
xor
sub
aad
lahf
imul
push
cmc
loope
out
or
xor
jle
or
pop
retf
sbb
out
inc
sub
cmps
adc
jbe
jo
out
lods
stos
lea
popf
movs
lods
inc
add
mov
xchg
pop
out
xor
int
inc
aaa
aad
or
nop
xchg
bound
inc
loop
cmp
cmp
pop
dec
mov
adc
cmp
mov
shl
jne
push
call
add
es
inc
cli
adc
aas
sbb
sub
cmp
vmwrite
out
push
dec
cmp
cmp
sub
jp
clc
ds
push
xor
cmps
call
sbb
push
mov
out
lock
cmp
cmps
cmps
xor
js
and
xor
(bad)
xchg
test
shl
push
aam
jle
mov
jmp
mov
shl
dec
mov
in
mov
loopne
gs
sub
hlt
mov
movs
lods
push
xor
(bad)
es
inc
out
sub
out
call
cmp
in
mov
arpl
repz
adc
icebp
sub
inc
jmp
jmp
ds
jle
mov
adc
(bad)
lods
jno
das
pop
popa
aam
dec
adc
adc
fnstcw
fs
jo
(bad)
mov
outs
sub
int
sbb
jns
test
sub
daa
xor
xchg
xchg
xor
fidivr
xlat
test
popa
adc
outs
mov
jg
jns
and
fcomp
cmp
clc
fisttp
rol
xchg
movd
pop
or
push
or
push
adc
push
in
push
cmps
retf
sahf
xor
test
pop
ins
clc
push
sbb
or
test
mov
scas
inc
push
sbb
cwde
jp
bound
push
jno
dec
adc
stos
(bad)
and
mov
mov
jno
aaa
cmp
cmp
outs
xchg
mov
call
fnstsw
lea
and
and
movs
mov
ds
jmp
add
jns
dec
xor
leave
sahf
mov
and
or
jbe
adc
pop
add
ins
cmp
sar
jp
jns
stos
pop
dec
bound
test
sbb
jnp
dec
ror
push
dec
test
and
in
mov
sbb
es
xchg
pop
loopne
lds
(bad)
jecxz
inc
jae
mov
add
push
data16
out
leave
mov
das
fadd
cmp
int3
mov
scas
sbb
inc
push
push
sub
imul
and
dec
xor
push
mov
mov
mov
repz
das
cmps
fldcw
loope
scas
adc
inc
(bad)
jns
inc
xor
mov
sbb
stos
xchg
push
call
loopne
test
jmp
cmc
outs
pop
stos
in
and
push
jmp
jnp
add
push
push
loopne
aam
pushf
xor
mov
xor
das
push
scas
xor
inc
fsub
push
ins
add
jb
inc
ror
push
push
mov
in
stos
adc
cmp
mov
outs
sub
sar
jmp
addr16
and
inc
jne
outs
into
mov
ds
cmc
add
pop
in
sar
(bad)
push
data16
sub
sbb
stos
push
mov
cmp
cmp
or
adc
sub
xchg
repnz
xor
mov
cmp
mov
stos
mov
stos
xchg
or
test
pop
cmp
outs
into
sub
push
pop
rcr
daa
loopne
outs
loopne
(bad)
mov
sbb
fs
ds
rol
test
xor
repnz
das
or
ins
cmp
mov
fs
inc
xlat
pop
mov
stos
push
pop
pop
mov
push
test
aam
cs
xor
mov
dec
push
cmp
daa
sub
arpl
jb
push
adc
push
movs
je
jmp
push
pop
pop
xchg
out
fsubr
aad
stc
sub
sub
loopne
and
dec
ss
fidivr
inc
jp
add
ss
fcmovnb
pmuludq
(bad)
ret
add
add
test
xor
dec
and
fs
pop
push
leave
jno
pop
repz
ds
out
retf
pop
fist
loop
(bad)
cmp
inc
scas
and
retf
cmp
or
push
push
fs
(bad)
jle
push
scas
sbb
outs
cmps
aad
or
sbb
rol
and
inc
adc
push
sub
fsubr
movs
xchg
es
pop
pop
into
xchg
retf
loop
repz
sbb
adc
pop
push
ss
pop
add
pop
scas
leave
dec
mov
outs
mov
push
dec
inc
imul
xor
adc
dec
ds
into
and
xchg
or
aaa
and
sti
aaa
scas
sub
xchg
pop
rol
scas
mov
jg
or
(bad)
pop
mov
pop
cmp
pop
ret
aas
push
sub
push
lock
mov
fcomp
es
and
jnp
stos
pop
xor
push
loop
jnp
jno
loopne
sub
bound
imul
add
inc
pop
cmps
fist
mov
and
jno
xchg
jp
sub
retf
and
mov
movs
cmp
stos
push
or
sub
mov
push
aas
sub
adc
es
inc
pop
aaa
mov
sbb
push
sbb
jno
cmps
jg
imul
imul
push
or
jecxz
xor
rcr
mov
out
cs
popa
ss
scas
xchg
adc
movs
push
fadd
add
mov
adc
in
adc
push
push
rcr
imul
call
xchg
data16
cmps
sti
dec
lods
icebp
test
ret
test
sti
mov
pop
sub
xor
in
ins
outs
lea
jl
inc
jg
sahf
sub
movs
pop
mov
or
mov
in
sub
sbb
sub
mov
sub
dec
xchg
mov
push
in
jae
bnd
repz
mov
daa
daa
push
mov
mov
neg
jno
lods
ret
and
sub
std
pop
sub
jmp
sti
fst
sub
(bad)
mov
add
adc
or
jge
pusha
loopne
sbb
mov
add
repnz
sbb
enter
neg
mov
push
mov
mov
(bad)
loopne
pop
sub
popa
dec
ds
mov
sbb
jg
mov
pop
xor
cmp
pop
mov
pop
mov
sub
ins
adc
xor
mov
push
aaa
out
gs
je
jecxz
into
mov
and
(bad)
call
repz
xor
pop
sbb
(bad)
dec
sub
inc
stc
lahf
and
mov
xor
and
jb
dec
jp
lock
or
inc
xchg
xchg
leave
(bad)
or
mov
pop
adc
pop
or
imul
movs
and
dec
cmp
stos
push
mov
cmp
mov
int3
dec
or
push
jl
cmp
mov
lods
pop
ds
jmp
xchg
lea
add
test
repnz
aas
stos
jbe
out
and
push
int3
and
add
stos
scas
adc
or
push
sub
dec
sar
mov
sub
push
in
hlt
dec
mov
outs
jnp
retf
retf
fmul
lock
fdivr
shl
sub
jle
xor
push
stos
cvtps2pd
xor
sub
js
xor
adc
aas
lods
inc
lds
fist
out
es
mov
ins
ss
cmp
xlat
sahf
bound
dec
and
sub
or
movs
jle
jo
and
add
or
test
push
leave
jl
lock
ja
push
jbe
mov
bound
mov
mov
and
ss
or
sbb
cmp
mov
jge
movs
jb
loopne
imul
ins
mov
ret
pop
psubsw
jne
inc
sub
mov
lds
in
ss
in
push
cmp
ins
in
mov
inc
mov
cmp
cmp
ds
sub
ret
pop
shr
push
aaa
xchg
ds
mov
and
fld
or
xchg
imul
sbb
shr
or
daa
xchg
cmp
cmp
das
push
pop
cmp
jno
sub
jae
clc
jno
shl
lods
push
outs
dec
mov
xor
daa
pop
add
ins
or
clc
and
(bad)
sahf
retf
xor
adc
pop
and
or
mov
test
or
cdq
mov
or
xor
pop
push
addr16
fild
xchg
jg
push
push
fiadd
and
sub
test
or
sub
adc
mov
dec
cmp
or
stos
arpl
sbb
js
inc
pusha
push
fmulp
je
jmp
inc
xchg
icebp
xchg
ss
sub
adc
jle
mov
sub
jbe
push
ss
add
sbb
es
xor
ins
xchg
test
push
ins
call
sub
clc
ret
jecxz
xor
and
mov
xchg
pusha
adc
popf
xor
adc
cdq
or
xchg
jl
jl
push
push
call
fsubr
or
pop
or
jns
shl
mov
mov
sbb
frstpm(287
adc
aaa
ins
or
imul
stos
add
cmp
push
xor
sub
adc
ins
xchg
inc
jp
retf
cmp
jb
mov
rcr
pop
(bad)
pop
inc
inc
idiv
or
fcom
ins
fmul
xor
mov
pop
or
sbb
mov
out
jnp
inc
popf
arpl
or
loop
(bad)
arpl
movs
fwait
or
fiadd
push
aas
jmp
fdivr
cdq
aaa
scas
push
loope
add
mov
arpl
xor
shl
or
sbb
push
into
(bad)
xchg
fstp
movs
(bad)
cmp
gs
jmp
sbb
loope
mov
xchg
or
push
dec
addr16
lea
inc
test
cmp
arpl
ret
add
inc
fiadd
leave
jne
popa
push
jmp
lods
es
mov
push
cmc
push
mov
test
mov
mov
cmp
mov
inc
cmp
xor
int3
shr
jb
iret
mov
stos
sub
das
jno
xor
stos
fdivr
pop
cmps
aaa
or
ss
dec
jnp
mov
mov
int
ds
xchg
push
dec
outs
or
and
or
test
jnp
in
adc
rol
(bad)
popa
jg
adc
xchg
addr16
int
lea
lock
(bad)
jecxz
xchg
mov
enter
dec
ins
ss
xchg
(bad)
setae
jmp
pop
cmp
pop
ds
adc
pusha
sub
xor
nop
lods
pop
aaa
jno
dec
aaa
inc
loope
pop
pushf
mov
add
fisub
ret
inc
dec
ins
push
dec
jno
mov
inc
inc
and
sbb
pop
and
add
jns
je
(bad)
ret
cmp
xor
jl
(bad)
xor
outs
or
(bad)
or
lods
xor
jmp
jb
cmp
jne
lds
push
in
pop
mov
mov
cli
cmps
ret
sti
inc
(bad)
int
xchg
fdivr
or
cld
xor
data16
cmp
pop
cmp
adc
jmp
sbb
cs
dec
aam
aaa
ror
mov
test
add
ja
mov
mov
mov
cld
ds
push
cmp
movs
js
jmp
rcr
cmp
ds
sub
mov
and
cmp
leave
arpl
pop
push
mov
or
jle
popf
lds
pop
xchg
ror
push
push
jecxz
cmp
lods
xor
jno
push
retf
icebp
call
(bad)
popf
leave
call
mov
ret
lock
movs
and
test
pusha
stc
jb
jle
cwde
push
or
fisubr
loop
stos
(bad)
pop
pop
cmp
mov
leave
rol
xchg
add
ficomp
mov
shr
es
inc
ret
sub
adc
stc
rol
xchg
inc
xor
add
mov
lods
pop
fdivr
mov
jle
inc
mov
ret
add
fwait
pop
inc
repz
and
mov
in
or
mov
push
gs
sbb
xchg
out
enter
and
ret
sub
(bad)
push
xchg
push
sub
(bad)
jo
mov
lds
leave
loop
aam
jp
xchg
js
pop
sar
push
adc
xor
sub
adc
sub
sbb
or
aad
push
imul
lods
xor
cmp
and
and
and
call
adc
icebp
das
clc
add
lea
mov
int3
(bad)
lods
test
lods
in
ret
or
stos
push
jmp
mov
cli
ds
mov
mov
std
shl
call
out
push
cmc
cmp
mov
pop
jns
xchg
test
cmp
ret
jno
loope
xor
pop
push
jbe
inc
(bad)
cmp
cmp
jg
add
int
loopne
sub
sub
ret
cmp
sub
dec
(bad)
push
pop
pop
test
cmps
cmp
push
adc
jp
mov
sub
fs
icebp
or
pushf
mov
fidivr
push
pop
pop
xor
xor
pop
(bad)
pop
cli
mov
lods
loop
cmp
pop
shl
or
ins
xchg
or
pop
arpl
test
call
ins
in
jns
jle
xchg
cld
mov
mov
daa
into
sbb
jbe
xor
pusha
xor
movs
push
es
cmp
mov
enter
loop
sub
inc
out
dec
pop
sub
or
fdiv
push
clc
mov
xchg
lock
inc
jae
fxch
stos
(bad)
xchg
dec
sub
shl
and
(bad)
and
cmp
ins
and
pop
or
in
int
add
xor
sbb
leave
mov
ins
push
out
loope
sbb
sub
cmp
adc
and
sub
sub
arpl
push
ret
cmp
and
(bad)
jl
jle
lods
pop
rol
mov
pop
push
sub
sub
test
and
or
ficom
int
scas
or
mov
ficom
mov
mov
adc
jp
dec
sbb
jno
cmp
jle
xor
mov
cmp
mov
div
fisubr
adc
les
sub
hlt
retf
add
and
xchg
push
push
adc
push
cmp
cmp
in
inc
shl
add
out
daa
cmp
shl
(bad)
das
jmp
out
mov
dec
xchg
mov
jge
adc
outs
sub
push
or
mov
xor
add
jg
cdq
and
scas
(bad)
movs
or
mov
fwait
ror
mov
sub
push
bound
(bad)
xchg
jge
xchg
outs
mov
jg
mov
movs
add
repz
rol
and
ja
aas
ds
std
cdq
cmp
cmp
sub
mov
xlat
test
inc
(bad)
cld
or
fnstenv
add
outs
adc
xchg
cmp
(bad)
mov
cmp
pop
jno
inc
in
(bad)
(bad)
cmp
nop
jle
fdivrp
out
retf
push
idiv
rcr
je
lods
stos
cmp
sub
mov
movd
or
dec
push
pop
mov
xor
jne
mov
sub
aas
ds
scas
xor
push
jp
add
adc
aaa
retf
lods
xor
(bad)
inc
gs
pop
repz
or
push
push
in
push
mov
inc
retf
mov
push
into
jp
sub
mov
cmp
fisubr
add
sub
loopne
mov
sub
repz
scas
stos
pop
js
aas
shr
stos
icebp
jns
mov
cli
(bad)
push
add
pop
push
dec
fild
sub
aas
pushf
push
das
es
sub
push
out
ss
push
push
loope
rcl
and
clc
retf
call
jle
push
and
mov
mov
hlt
dec
into
je
repnz
mov
icebp
pop
xchg
adc
pop
cmp
in
pop
pop
pop
cmp
je
or
push
test
jo
out
inc
retf
into
movs
cmps
ins
aam
ins
cs
(bad)
xor
inc
mov
jmp
dec
scas
in
mov
cmp
xchg
movs
jo
dec
inc
out
or
cmp
fbstp
aas
test
sbb
test
int
imul
or
sub
data16
loop
and
jno
adc
mov
retf
sbb
fs
shl
stos
cmp
push
or
mov
mov
add
test
loop
cmps
stos
out
pop
xchg
push
dec
arpl
and
lea
push
fs
cwde
mov
sbb
pop
pop
add
pushf
xor
xchg
xor
inc
out
jmp
out
ds
cmc
mov
jnp
(bad)
test
jmp
jno
repz
test
es
push
sub
inc
ss
imul
jecxz
xchg
inc
lea
cdq
dec
sub
pusha
movd
cmp
pusha
push
cmp
xor
cld
loopne
stos
jl
pop
pusha
and
in
shl
clc
or
inc
(bad)
int
xchg
mov
cwde
mov
add
test
icebp
rol
sub
in
adc
pop
jl
sub
test
(bad)
mov
adc
nop
cmp
call
je
dec
push
dec
es
test
out
ins
jmp
cmp
rcr
scas
fldenv
pusha
or
lea
xor
mov
mov
xor
leave
loope
and
into
(bad)
out
and
movs
cmp
push
inc
mov
or
and
sub
or
out
mov
and
xor
mov
out
je
and
movs
imul
lds
mov
mov
mov
or
out
adc
leave
(bad)
out
into
shl
(bad)
push
out
test
movs
sbb
test
(bad)
jne
ins
ret
fidiv
ins
fiadd
or
jne
ins
rol
pusha
shl
inc
inc
mov
sub
adc
lods
retf
mov
cmp
and
inc
jp
dec
add
xor
push
sbb
sub
loope
sub
dec
mov
leave
fimul
add
loopne
mov
imul
lods
xor
repnz
les
adc
cmp
or
and
jge
push
cmps
mov
xchg
imul
and
jb
dec
or
pop
rcl
ins
mov
inc
xor
inc
ss
sar
test
and
es
shr
mov
sahf
and
repnz
xchg
adc
call
lock
add
pop
pop
pushf
jmp
add
sub
sub
xchg
push
movs
shl
imul
fimul
sub
int3
gs
mov
sahf
sar
daa
(bad)
pushf
outs
daa
sub
outs
or
(bad)
push
jns
mov
sbb
jge
stos
sbb
stos
outs
adc
js
movs
test
xchg
enter
and
(bad)
mov
mov
cmps
xor
cmp
and
sbb
jno
mov
and
and
or
push
mov
sub
dec
test
jg
sub
push
lahf
retf
mov
lods
into
(bad)
cmp
sub
sub
xor
sub
xchg
adc
adc
jg
sahf
and
repnz
sahf
xor
dec
arpl
js
jns
aas
sub
inc
push
and
or
out
push
sub
adc
imul
inc
in
xchg
in
jle
xchg
retf
popw
jb
lahf
stos
enter
mov
rcl
sub
or
(bad)
aaa
mov
mov
aaa
jo
sub
aas
cmps
shr
adc
pop
inc
test
mov
stos
stos
fisttp
sub
data16
cmp
fisubr
jbe
sub
cmp
ins
mov
xchg
outs
and
outs
and
mov
jb
lahf
stos
fldcw
sub
inc
xor
or
test
jle
dec
jbe
inc
push
test
fcom
cmp
in
jo
pop
cmp
ret
loope
push
lds
inc
push
and
dec
and
jmp
scas
dec
and
adc
xor
or
mov
(bad)
fisttp
(bad)
sub
push
pop
pop
ins
ror
adc
push
push
and
sbb
rol
test
aaa
jns
shl
xchg
inc
fcomp
leave
fcom
xchg
(bad)
fidivr
push
je
daa
xchg
loopne
sub
sub
in
push
out
ins
mov
cmp
lods
aad
xchg
xchg
popa
aam
scas
mov
jl
sbb
adc
sub
adc
jbe
call
and
(bad)
icebp
mov
xchg
(bad)
loop
enter
out
outs
scas
ja
lock
(bad)
sub
jno
loope
pop
arpl
das
in
shl
jnp
loope
sti
cld
xchg
xor
pop
mov
in
push
pop
mov
sub
jo
or
in
psubd
sti
and
fisub
popf
pop
sbb
fst
mov
dec
sbb
ds
and
lock
not
mov
test
push
cmp
bound
call
fisttp
and
and
cmp
xor
mov
and
scas
push
lea
cmp
ins
imul
shl
sub
mov
push
jnp
sbb
cmp
nop
lahf
call
xchg
js
fisttp
popf
sbb
mov
inc
aaa
je
jmp
gs
out
adc
push
and
adc
ret
retf
jb
or
ret
out
push
popf
dec
cmps
or
aam
and
ins
cmp
adc
xor
mov
mov
add
push
and
and
pop
and
mov
cmp
push
sbb
xlat
push
and
xchg
scas
cmp
hlt
dec
adc
iret
xor
out
(bad)
ss
imul
sub
jle
sub
adc
xor
out
daa
ret
gs
push
xchg
mov
scas
aaa
and
cmp
push
mov
into
jae
ins
pop
arpl
cld
mov
and
add
xchg
sub
in
pop
or
sbb
push
add
pop
xchg
jo
stos
sbb
lods
sbb
add
mov
dec
jp
outs
pop
push
push
xor
mov
push
mov
mov
nop
mov
shr
dec
outs
ror
jno
cli
fcom
cmp
out
and
ja
shl
sub
and
aad
inc
fisubr
icebp
and
sub
and
or
movhps
sbb
mov
icebp
and
adc
in
sub
adc
jg
push
fidivr
jecxz
xchg
in
or
sbb
into
stc
jg
jae
mov
fs
jl
aam
movs
and
lock
int
and
or
pop
or
pop
or
lods
push
mov
inc
lock
add
stos
sbb
outs
push
jg
xchg
push
cmp
cwde
jnp
sub
inc
pop
xor
mov
sub
jp
(bad)
es
popf
pop
arpl
pop
stc
(bad)
into
sbb
out
int3
sahf
repnz
push
cwde
sbb
mov
push
cmps
ins
sub
inc
mov
mov
and
dec
pushf
xchg
lahf
pusha
ret
jmp
imul
sub
push
lods
adc
sub
jno
shl
or
push
in
mov
mov
fmul
scas
push
jge
and
jle
sub
test
mov
lods
outs
ja
in
ss
(bad)
mov
adc
mul
outs
ret
sub
fucomip
push
xor
pop
ror
xor
xor
sub
mov
loope
sub
test
mov
nop
call
mov
imul
sbb
xchg
std
arpl
outs
dec
push
and
push
inc
jno
xchg
sub
inc
es
add
leave
pop
in
call
scas
(bad)
mov
jbe
jo
xlat
cmp
(bad)
add
cmp
jne
scas
xchg
pop
sbb
jp
mov
or
fidiv
movs
push
adc
and
sbb
push
mov
add
xchg
jo
adc
push
idiv
lods
cmp
pop
push
lea
jge
test
js
fld
and
shl
out
jmp
bound
aad
js
xchg
(bad)
cwde
fidiv
mov
je
aaa
outs
scas
addr16
and
lds
or
sub
stos
or
sbb
mov
jge
cdq
lock
jmp
add
or
add
jle
es
or
sar
mov
sub
movs
ss
mov
mov
neg
inc
mov
out
cwde
or
push
(bad)
test
xor
faddp
imul
gs
sbb
and
sbb
(bad)
dec
jmp
test
or
(bad)
imul
aas
cmps
xor
(bad)
fcmovb
inc
xchg
out
or
sub
and
inc
adc
mov
cmp
aam
xchg
popf
mov
stos
adc
mov
(bad)
int
mov
add
cmc
sub
retf
ror
call
sub
fidivr
(bad)
and
cmp
ds
mov
sbb
imul
dec
pushf
push
scas
xchg
sahf
cld
jnp
cld
movs
cmp
dec
mov
mov
fs
sbb
fnsave
popa
cmps
popf
stc
shl
stos
mov
or
pop
inc
jne
test
test
mov
jo
mov
or
mov
adc
pop
jmp
test
add
push
adc
inc
cmps
test
add
xchg
add
or
or
daa
xchg
leave
jae
mov
call
push
aas
cmps
test
pushf
imul
movs
inc
sbb
out
pop
jmp
fisubr
cmps
leave
pop
clc
pop
add
outs
rcr
sub
xchg
movs
or
xor
(bad)
mov
sub
leave
arpl
(bad)
sub
outs
add
(bad)
sbb
scas
ja
xor
aad
cmp
add
mov
(bad)
xor
add
fldenv
popa
adc
jno
leave
mov
inc
out
sub
es
aas
movs
leave
cwde
sbb
ret
icebp
xlat
data16
lods
push
and
mov
or
imul
push
inc
mov
or
(bad)
fs
jle
pop
adc
inc
pop
cmp
cmp
lods
leave
sbb
out
ds
add
push
test
sub
sbb
xor
sbb
aaa
imul
lock
adc
dec
lea
(bad)
bound
push
std
outs
dec
in
outs
pop
in
stos
outs
pop
xchg
stos
outs
push
popf
stos
outs
jbe
test
bts
cmps
jne
sahf
loop
lock
imul
adc
popf
idiv
(bad)
loope
mov
push
or
mov
cmps
leave
gs
or
les
js
pop
pop
xchg
repnz
jnp
call
sbb
jno
ds
adc
mov
sub
push
out
mov
aam
or
fidiv
and
lods
retf
ins
mov
data16
pop
and
lea
xlat
int3
adc
push
es
mov
lods
push
minps
mov
pop
sub
sbb
or
test
outs
call
sub
fistp
xchg
jne
xor
mov
out
cmp
scas
imul
mov
add
add
xchg
fiadd
rcl
push
or
push
aas
cmp
addr16
retf
jae
leave
mov
je
mov
cld
push
ret
cmp
je
lahf
test
mov
and
sbb
sub
cmps
jmp
sbb
cmp
push
aas
out
fs
cmp
cs
mov
xchg
mov
lods
push
xchg
fiadd
cwde
pop
mov
rcr
shl
stos
pop
retf
mov
xchg
jnp
inc
jmp
sti
ins
dec
pop
popa
sub
jno
adc
fsubr
es
imul
jge
pop
mov
mov
pop
adc
add
popa
test
and
leave
mov
push
inc
outs
mov
sub
mov
cmp
cli
and
inc
repnz
dec
jg
dec
jo
sbb
aas
jb
adc
outs
mov
inc
jne
jl
cmp
call
pop
ins
xchg
push
mov
outs
mov
ins
mov
or
pop
lods
call
call
inc
arpl
or
nop
add
movs
and
xor
push
mov
dec
jns
jno
xchg
test
stos
xchg
add
mov
pop
mov
adc
pop
sub
sub
xor
adc
or
add
int
imul
leave
sub
sub
xchg
add
sbb
ret
pop
sub
lea
xor
pop
rol
(bad)
ds
test
aas
sub
push
mov
imul
(bad)
push
leave
or
popf
dec
ds
lods
arpl
aas
cmp
fld
sub
sbb
fs
mov
jmp
cmp
sub
adc
and
sbb
lea
scas
aaa
adc
add
pop
inc
and
imul
cmc
retf
mov
(bad)
pop
jmp
push
and
xor
out
jmp
rcl
mov
add
les
xor
scas
sub
psubd
adc
test
ja
add
stos
add
push
pusha
inc
sbb
jbe
pushf
ret
mov
and
fs
xchg
mov
fild
in
ins
jb
xor
mov
mov
push
repz
movs
xchg
fmul
outs
and
adc
dec
and
enter
fiadd
add
ret
push
mov
sub
imul
dec
jo
out
inc
lods
pusha
jb
pop
and
and
or
daa
add
and
xchg
sub
and
pusha
mov
mov
mov
aaa
call
jnp
add
push
xor
std
jo
mov
(bad)
jge
or
pop
push
es
jmp
inc
ja
push
mov
or
push
jo
xchg
jo
jl
cmp
(bad)
fst
or
xchg
sub
daa
sub
mov
mov
ins
rol
(bad)
xor
xor
push
sbb
in
push
cmps
gs
jns
out
mov
jns
pop
popf
pop
sub
mov
mov
jle
test
dec
jg
mov
pop
adc
push
(bad)
fisub
add
sub
push
mov
pop
lea
cmp
test
jmp
shl
and
repnz
test
leave
ror
int3
inc
out
mov
xor
ins
and
cdq
pop
inc
cmp
dec
adc
shr
sbb
jbe
cdq
jno
rcl
data16
ret
xchg
dec
sub
push
test
pop
fidivr
push
mov
jo
data16
dec
xor
mov
mov
aas
sar
and
movs
cmc
jbe
xor
(bad)
jae
in
stos
sbb
outs
sub
xlat
movs
lods
xor
cmp
test
mov
xor
ja
imul
cmp
add
push
or
shr
enter
sub
out
ficom
xor
stos
add
mov
dec
or
aad
sub
adc
xor
push
scas
mov
(bad)
sub
inc
mov
jb
neg
pop
cmp
push
fcom
sbb
fisub
dec
lahf
push
movs
repz
mov
setne
jnp
sbb
rcl
push
repnz
imul
data16
cmp
bound
sub
or
js
xchg
cmp
sub
pop
mov
es
stos
ja
sub
addr16
fidivr
push
push
retf
(bad)
or
mov
push
stos
and
adc
(bad)
scas
js
stos
sar
push
and
mov
ret
aas
stos
fcom
fnstcw
enter
ret
sub
out
jbe
adc
pusha
lock
in
adc
rol
(bad)
jo
cmp
fild
pop
daa
(bad)
(bad)
mov
sub
stos
scas
jno
mov
mov
mov
push
and
mov
cmp
sbb
pop
jb
cmp
aam
popf
or
lock
mov
test
add
popf
out
lock
sti
jl
inc
xchg
movs
mov
test
cld
pop
ds
(bad)
mov
jno
mov
push
mov
pop
xor
sub
add
sub
pop
ins
push
push
jmp
adc
xchg
jge
or
cmp
test
out
dec
repz
inc
call
ret
jmp
int3
jecxz
int
ror
repnz
mov
sahf
shr
and
mov
xchg
shr
jnp
mov
imul
push
jge
mov
stos
out
push
push
adc
mov
(bad)
aad
and
jge
imul
dec
mov
jge
pushf
adc
mov
vmovmskpd
(bad)
dec
jge
addr16
sbb
mov
xor
sbb
push
data16
jo
lea
stos
nop
pop
fwait
sbb
pop
aas
lods
(bad)
out
sbb
xchg
sub
and
jmp
or
pop
add
leave
mov
mov
push
rcl
imul
mov
xor
movs
mov
ret
or
jne
inc
push
ror
add
into
test
dec
or
es
xor
popa
(bad)
pop
enter
xchg
mov
or
out
stos
xor
sub
out
mov
imul
push
inc
dec
outs
ror
sub
sbb
fidivr
(bad)
pop
add
daa
js
mov
push
movs
outs
or
inc
rol
mov
out
and
xor
pop
fadd
cdq
push
add
xor
aam
es
imul
inc
inc
dec
xchg
jnp
lods
(bad)
int
fwait
mov
push
stos
sub
xchg
sbb
jbe
stos
out
mov
sbb
ret
into
lahf
mov
cli
ficom
inc
pop
ficom
mov
in
retf
fdivr
enter
ret
into
fdiv
mov
add
push
push
rcl
in
add
ins
xchg
pop
add
shl
push
pop
xacquire
sub
adc
sar
fst
lds
jnp
cmp
push
sub
test
dec
pushf
xlat
dec
cmp
jnp
xor
es
outs
mov
mov
es
jmp
es
sub
push
ds
bound
sub
sahf
adc
outs
ret
(bad)
mov
adc
and
cmps
retf
add
cmp
sbb
retf
push
push
pop
adc
das
dec
mov
mul
xchg
ins
cmp
movs
mov
fsub
xchg
mov
push
daa
pop
jmp
or
mov
sbb
sub
test
mov
lock
mov
lods
push
jmp
adc
inc
dec
aad
dec
jl
jns
test
xchg
sub
sbb
mov
mov
xor
xchg
ds
pop
(bad)
push
aaa
jle
xor
sbb
mov
ret
pop
xchg
stos
xor
imul
arpl
fmul
addr16
inc
add
shl
call
dec
icebp
test
(bad)
push
xchg
shl
xchg
(bad)
push
ds
mov
(bad)
stc
push
push
es
pusha
lods
jo
std
sub
in
and
mov
(bad)
ret
push
or
aaa
(bad)
dec
retf
stos
adc
sbb
push
call
push
mov
stos
and
cmp
and
cmp
or
dec
pop
(bad)
popf
fsubr
push
loop
mov
xchg
push
and
pop
inc
cmp
ins
jb
or
push
das
sub
push
cmp
xchg
imul
(bad)
call
push
adc
xchg
mov
sar
pop
pop
in
jns
imul
mov
imul
sar
add
ins
ja
adc
mov
enter
(bad)
mov
ins
or
push
cmp
jbe
jl
and
cmp
jmp
pop
pop
fnstcw
xor
mov
or
movs
aas
xor
and
inc
pop
sub
pop
test
push
push
pop
sbb
cmc
and
push
(bad)
mov
jnp
jecxz
xlat
or
in
push
cli
call
stos
or
ret
sub
add
sbb
cwde
icebp
xor
das
mov
das
bound
rcl
xor
xor
add
popa
cli
inc
push
sbb
sahf
dec
cwde
cmc
sahf
push
dec
or
lea
cmp
add
and
shl
jmp
push
ins
sti
or
in
stos
jb
stos
jecxz
stc
call
mov
icebp
ret
imul
in
fidivr
rol
fnstsw
push
mov
mov
push
inc
pop
inc
or
das
pop
in
cmp
and
ficomp
cli
pop
jbe
stos
dec
(bad)
and
sub
and
cmp
adc
mov
sub
adc
sar
je
xor
xchg
jecxz
cmp
jg
scas
push
jle
mov
pop
test
and
dec
push
sbb
jnp
enter
or
push
dec
and
cmp
or
and
sahf
sbb
inc
pop
lock
ss
sar
retf
push
fwait
pop
(bad)
repnz
dec
mov
mov
nop
cmp
outs
dec
cmp
inc
adc
mov
sub
stos
adc
fdivr
scas
cmps
push
push
ja
fcom
inc
jae
fs
dec
inc
push
or
sub
aaa
push
call
mov
shr
or
ror
mov
loope
push
mov
daa
sbb
shl
pushf
vaddsd
popf
sub
cmps
aaa
hlt
(bad)
pop
dec
imul
dec
cmp
aas
and
mov
xchg
rol
pop
popf
(bad)
(bad)
sub
fldcw
sub
(bad)
jns
mov
sub
mov
pushf
or
xchg
push
lods
cmp
ins
fcmove
or
and
jbe
cmp
xchg
dec
xchg
adc
(bad)
shl
stos
ss
xchg
adc
adc
inc
mov
xchg
inc
pop
lds
mov
dec
cli
pop
mov
inc
adc
or
xor
movs
sub
push
in
cmp
scas
das
push
stos
out
cmp
out
ins
(bad)
jle
add
or
repz
dec
into
mov
nop
cmp
lock
inc
add
stos
popf
pop
nop
mov
dec
cmp
jno
aad
dec
lods
in
sub
mov
outs
push
ins
or
or
xchg
pop
sub
push
mov
je
out
mov
in
add
sub
fidiv
retf
and
repz
test
fadd
icebp
adc
and
push
and
gs
cmp
xor
fsubrp
icebp
cmp
leave
test
aas
sub
in
sub
or
(bad)
shr
sub
add
mov
pop
pop
aaa
ss
sbb
jp
ret
and
adc
add
movs
aas
je
loope
movs
retf
cld
push
test
lods
push
push
stos
mov
adc
push
inc
rcl
xor
or
jbe
(bad)
mov
and
jmp
cs
add
and
pusha
mov
out
cmp
mov
ret
mov
mov
xchg
pop
jno
add
sub
icebp
(bad)
fucomip
xor
dec
jmp
mov
mov
and
and
sti
scas
sbb
xor
mov
fisub
shl
(bad)
hlt
in
rol
fdiv
xchg
fsubr
push
pop
sub
js
arpl
adc
(bad)
ss
or
pop
cmp
bound
adc
xlat
scas
adc
push
sub
or
xor
mov
jmp
sub
xchg
pushf
xchg
inc
jae
mov
sub
cli
js
inc
jge
and
xor
pop
leave
mov
sub
rol
das
lods
or
jle
int3
arpl
je
hlt
pop
xor
sbb
scas
adc
pop
or
je
sahf
and
dec
shr
aaa
mov
xlat
cld
adc
lahf
ficomp
mov
movs
arpl
lea
call
popa
sub
aas
test
stos
sar
or
sub
add
into
ja
(bad)
mov
movs
and
stc
jns
jne
je
and
and
pop
or
cmp
aam
test
and
arpl
sub
mov
mov
xlat
ss
or
ds
ja
jae
out
cwde
sbb
add
lods
push
and
sub
push
fiadd
das
sbb
sub
xor
inc
je
xchg
test
pop
sub
sar
sub
ins
sahf
xchg
push
stc
das
cmp
ins
sbb
jb
or
aas
mov
stos
mov
clc
jbe
add
and
push
adc
push
mov
inc
loopne
pushf
push
sub
push
add
pop
and
xlat
xchg
and
out
and
popa
(bad)
imul
fidivr
add
sub
data16
inc
push
mov
adc
adc
es
xor
mov
rcl
adc
xchg
es
sbb
or
mov
push
push
jl
cmps
sub
nop
mov
xchg
sub
mov
push
inc
jmp
ret
cli
ds
ins
test
pop
push
push
ret
push
mov
ret
and
xchg
sub
pop
jb
add
mov
fs
sahf
adc
dec
dec
mov
in
mov
cmp
dec
lock
jbe
lds
popa
or
imul
dec
mov
in
stos
push
stos
mov
js
outs
es
sub
sahf
push
mov
icebp
(bad)
jo
dec
shl
test
fwait
cmp
js
push
shl
arpl
push
imul
add
push
leave
and
scas
push
jno
data16
pop
das
or
int3
mov
ds
(bad)
fisubr
fidiv
jle
(bad)
scas
(bad)
(bad)
cmp
imul
test
jg
sbb
and
mov
dec
mov
rol
xchg
add
sbb
icebp
fldcw
push
fs
mov
enter
push
inc
and
fisubr
fs
dec
mov
and
jo
aaa
icebp
enter
dec
cwde
jg
rcl
loope
(bad)
xchg
call
movs
jge
adc
ins
aaa
cmp
stc
ror
sbb
icebp
fldcw
push
sub
push
xchg
inc
outs
sub
in
aaa
mov
aaa
imul
sub
mov
jb
shl
mov
stos
icebp
test
xor
fnstcw
push
mov
sub
sub
mov
pop
xor
rol
xor
mov
lea
adc
jg
icebp
das
sub
pop
and
aaa
and
dec
daa
(bad)
xor
daa
ds
inc
and
xchg
mov
adc
xor
ja
ins
daa
or
pop
mov
das
push
xor
jmp
iret
or
jg
adc
add
push
and
inc
and
push
xabort
ret
into
scas
or
mov
stc
adc
(bad)
or
push
adc
movs
pop
test
fs
arpl
leave
or
jecxz
adc
stos
enter
fcom
xor
mov
in
sub
sub
pop
inc
and
adc
inc
dec
repnz
push
nop
inc
pop
fild
sub
sbb
xor
mov
loope
pop
pop
arpl
push
movs
dec
(bad)
retf
clc
xor
mov
icebp
inc
shl
mov
in
dec
fist
sbb
in
aas
push
mov
add
cmps
(bad)
repnz
inc
sub
jno
ja
jle
clc
shl
jbe
clc
inc
out
sub
xor
jmp
data16
imul
das
sti
(bad)
loopne
inc
das
test
call
mov
jmp
jno
adc
cdq
or
sub
xchg
and
scas
mov
or
stc
cwde
push
add
ja
pop
push
lods
sbb
fimul
and
add
add
mul
pop
push
fisub
je
jp
outs
fbstp
enter
push
push
adc
lea
add
or
xor
gs
or
mov
test
shr
ret
mov
cs
or
pop
inc
mov
or
jle
xor
lods
shr
addr16
jg
sub
(bad)
loope
aas
mov
mov
mov
stos
pop
push
test
pop
add
mov
jmp
pop
cs
jb
cmps
push
sub
aas
pop
sbb
push
(bad)
fst
and
add
mov
mov
pop
and
arpl
jmp
or
pop
popw
inc
retf
inc
loopne
fisubr
mov
cmp
gs
cmps
and
mov
or
movs
push
sbb
or
adc
jno
ret
or
cmp
fild
xchg
lods
aaa
les
pop
jl
shr
test
cmp
outs
adc
add
bound
and
fstp
xor
aad
jmp
pop
xchg
mov
or
mov
stos
or
stos
sbb
xor
(bad)
sub
fs
push
inc
test
mov
mov
das
dec
outs
sub
push
cld
mov
hlt
dec
ja
fmul
jae
add
sbb
vorpd
mov
and
sbb
xor
retf
pop
outs
cmp
sub
fist
sub
loopne
jmp
inc
add
add
and
dec
or
jmp
cmp
ficomp
ret
and
mov
sar
cmp
jo
jne
dec
jmp
jp
and
push
mov
pusha
ret
stos
adc
cmp
es
into
push
push
sbb
cmp
pop
lods
push
inc
xor
enter
jmp
inc
pop
out
inc
sbb
and
add
mov
adc
test
dec
mov
inc
mov
(bad)
cmps
mov
pusha
inc
es
sub
ss
and
arpl
(bad)
sbb
jae
ret
sbb
adc
mov
dec
cmp
xchg
or
cld
pusha
xor
jnp
sub
ret
add
icebp
jg
push
fwait
cld
cmp
mov
pop
repnz
retf
cmps
and
outs
pusha
mov
sbb
(bad)
push
setae
pop
aas
test
jge
mov
gs
cmp
pop
sub
pop
and
inc
hlt
clc
cmp
push
xchg
cmp
(bad)
das
push
xchg
push
and
dec
aam
fld
es
push
or
pop
add
pop
push
test
sahf
loope
les
aas
cvtps2pd
sbb
dec
std
and
cwde
cld
xlat
dec
(bad)
mov
dec
add
pop
add
or
mov
xor
nop
movs
add
cmps
enter
adc
clc
sub
iret
pop
sub
sbb
inc
mov
enter
push
sbb
sub
sub
adc
(bad)
leave
jno
or
sub
xchg
rcl
xor
adc
inc
xor
mov
pusha
les
sub
mov
(bad)
cmp
pop
sbb
xchg
fnstsw
pop
popa
dec
sbb
jo
rcl
jne
xor
cmp
or
add
out
mov
aam
fcmove
fisubr
mov
mov
in
sub
lods
(bad)
jbe
(bad)
pop
inc
mov
fst
nop
jo
push
push
pop
mov
adc
cmp
xor
sub
mov
cdq
or
out
ret
sub
pop
(bad)
push
jle
cmps
add
rol
shl
mov
or
cmp
add
dec
mov
sub
and
rol
not
hlt
pop
das
leave
movs
punpckhdq
xchg
xchg
lods
sbb
inc
jle
cld
call
jnp
movs
add
push
test
mov
xor
aaa
or
push
fisttp
cmp
cmps
pop
mov
lock
sub
shl
movs
lods
mov
adc
test
aam
icebp
(bad)
inc
out
cmp
out
adc
jae
leave
(bad)
cmp
sti
jae
fs
pop
leave
stos
stos
imul
stos
xor
inc
rdpmc
sub
cmp
rcl
xor
popa
leave
jge
clc
xchg
repz
dec
dec
(bad)
test
jmp
mov
cli
adc
cmp
stos
pop
fadd
ret
and
ja
jmp
xor
ds
lock
jp
shl
xlat
sbb
or
jb
xchg
retf
(bad)
push
sub
or
jg
mov
mov
jmp
jo
or
adc
adc
adc
adc
sub
icebp
(bad)
ds
push
repnz
mov
movs
pop
mov
aad
shr
pop
pop
ds
xor
retf
es
push
add
ins
sahf
mov
add
aaa
jnp
mov
or
ret
mov
add
aam
push
dec
imul
add
stos
stos
retf
setae
rcr
xchg
data16
sub
jmp
data16
cmp
(bad)
fld
cs
cmps
movs
shl
out
cmc
xor
add
xor
sti
add
aad
imul
add
mov
inc
fdiv
push
lea
scas
aad
sbb
adc
sub
sbb
sbb
adc
and
add
or
sbb
sub
in
leave
adc
add
loopne
mov
mov
fiadd
cmc
sbb
adc
inc
push
adc
add
test
les
jbe
shr
push
repnz
or
xor
and
cmp
push
push
js
mov
and
mov
adc
mov
inc
mov
or
out
or
xchg
dec
or
and
xor
pop
add
pop
cmp
movs
push
iret
aas
or
sbb
ror
std
sub
pushf
jmp
mov
or
inc
pop
(bad)
mov
and
adc
div
or
jbe
bound
je
sbb
outs
xchg
push
jo
adc
pusha
xlat
inc
mov
dec
mov
leave
ss
stos
add
jmp
or
shr
movzx
and
mov
add
call
push
fstp
sbb
rcl
test
or
rcr
out
xor
and
xor
mov
or
fnstsw
(bad)
out
ret
jns
arpl
add
rcl
test
mov
inc
aad
xor
pop
popf
and
dec
ret
or
jle
push
sub
pop
add
popa
pop
pop
xor
push
or
fs
test
lods
sub
imul
pop
out
pop
and
pop
push
push
arpl
in
mov
test
mov
mov
push
lock
fbstp
test
jmp
pop
int3
jmp
retf
mov
pop
inc
stos
and
daa
loopne
push
mov
push
pop
out
in
in
sub
cwde
xor
pop
(bad)
xor
mov
push
cmc
sub
repz
cmps
cmp
leave
xchg
ja
scas
push
jbe
mov
sbb
sub
jnp
sub
test
sahf
mov
xchg
push
cmps
mov
jmp
or
cmp
into
(bad)
xlat
js
cmps
ds
or
popf
push
jp
shl
ss
imul
jecxz
jne
jns
xlat
outs
inc
ret
xchg
sub
scas
inc
mov
xchg
call
pop
cmp
(bad)
mov
inc
(bad)
pop
loopne
xchg
imul
mov
aas
mov
sbb
xor
(bad)
push
or
push
push
cmp
jae
mov
leave
popa
test
inc
jno
or
adc
lods
jo
lods
xor
push
lds
stos
iret
shl
mov
dec
sub
ficom
pusha
push
sbb
jae
fst
sub
enter
arpl
dec
xor
dec
mov
sub
jecxz
and
out
clc
lea
and
jp
push
aad
push
(bad)
in
test
mov
mov
or
ins
movs
sbb
or
sub
fiadd
or
test
mul
dec
jl
cdq
loop
or
adc
xchg
cmp
mov
ds
mov
imul
xchg
sbb
or
adc
scas
sbb
popf
adc
pop
rcl
jbe
cmp
test
and
lea
stos
cmps
jge
in
ss
mov
sub
mov
stos
dec
aad
jbe
stos
mov
sub
xchg
sbb
or
imul
push
outs
or
out
inc
sbb
mov
dec
adc
or
inc
inc
jge
xchg
xchg
out
out
aas
jle
xchg
(bad)
ja
add
add
inc
sbb
sbb
ss
pop
jno
and
test
or
cmps
jp
sbb
xchg
leave
inc
sbb
imul
hlt
out
jmp
movs
jae
pusha
aad
fwait
pop
data16
gs
inc
ret
sub
push
stos
lea
xor
xor
sbb
cs
inc
jno
push
movs
in
sub
jnp
sub
mov
sub
mov
cwde
push
xlat
cmp
ins
mov
add
imul
adc
mov
or
repz
sbb
pop
or
call
mov
cdq
cmp
push
xor
cmp
push
sti
inc
(bad)
dec
push
and
xor
jns
push
xor
dec
rcl
neg
lods
sahf
sub
outs
mov
daa
dec
or
ds
outs
cmp
mov
jo
xchg
sub
jb
js
repz
pop
outs
outs
ja
add
ds
jmp
data16
je
inc
adc
in
cmp
popf
sub
sub
jecxz
and
jmp
in
add
test
sub
lock
lock
out
xchg
mov
inc
jge
fimul
fisubr
mov
add
push
in
loope
adc
inc
cmp
jecxz
xchg
fbstp
jmp
add
rol
stos
sbb
not
sub
sub
jecxz
faddp
sub
mov
aam
std
add
sub
cmps
ret
outs
bnd
or
sub
test
gs
outs
inc
cmp
outs
out
xchg
or
ds
lods
pop
inc
inc
cmps
or
xchg
mov
je
nop
inc
aad
jg
icebp
das
xchg
jl
mov
into
inc
xchg
dec
mov
imul
fidivr
pop
aas
dec
bound
jl
(bad)
jp
outs
xor
push
(bad)
and
add
dec
sar
dec
sbb
jle
shr
hlt
das
dec
ja
sub
imul
mov
cli
imul
mov
(bad)
mov
adc
fbld
xor
ja
xor
stc
push
mov
xor
or
out
dec
mov
and
aas
xchg
bound
sub
shl
(bad)
out
outs
cmp
mov
xchg
jle
sti
push
dec
sub
lahf
jecxz
aaa
add
shl
ret
cmp
pusha
jne
lds
pop
aam
xor
inc
loope
in
adc
adc
ds
cmps
punpcklwd
fisttp
jae
adc
cli
mov
adc
cs
sar
adc
aas
inc
and
in
xor
daa
xor
test
scas
adc
ror
mov
push
mov
leave
dec
jne
sbb
xchg
dec
cmp
inc
test
js
shl
pop
push
mov
in
sbb
jnp
in
mov
fs
jecxz
push
int
add
in
repnz
(bad)
ins
sub
out
and
inc
and
sub
or
cwde
fisub
cmp
scas
xlat
xchg
dec
xor
push
mov
pusha
push
xor
mov
and
jge
fstp
inc
pop
adc
or
push
icebp
idiv
and
mov
ins
dec
jbe
dec
imul
jp
sbb
inc
stos
arpl
sub
dec
rcl
rcl
sub
cli
ss
inc
cmp
xor
add
scas
jge
push
push
enter
jns
jb
or
or
pusha
(bad)
sub
or
mov
push
add
mov
pop
xor
push
adc
pop
or
xchg
in
and
or
(bad)
mov
sub
push
js
aas
stos
mov
loopne
jbe
push
push
ins
movs
jle
xchg
mov
sar
jo
xor
mov
push
(bad)
pop
xchg
or
adc
retf
jle
sbb
mov
ja
mov
xor
aaa
push
mov
call
imul
jmp
sahf
les
loopne
add
xchg
lods
and
jnp
test
scas
outs
cwde
imul
dec
pop
mov
mov
cmp
push
push
sbb
push
arpl
pop
hlt
das
jg
aad
sti
test
cmc
(bad)
cmp
retfw
imul
inc
and
pop
push
xor
(bad)
or
ss
sub
ja
push
sub
sub
add
jbe
mov
pmaxub
fs
shl
and
jl
and
cmc
aad
mov
arpl
inc
dec
sbb
imul
dec
fistp
pop
xor
dec
pop
mov
cmp
pushf
xor
fbld
pop
and
push
pop
(bad)
mov
adc
push
mov
push
xor
lods
cmc
cmps
sti
pop
cmc
imul
das
dec
add
test
xchg
push
sbb
data16
mov
stos
cmp
push
jb
pop
popf
icebp
fmulp
cld
jl
jb
jae
pushf
ds
or
aam
dec
out
adc
jl
mov
retf
pushf
mov
sub
jns
rcr
dec
into
add
sub
xchg
mov
and
je
pushf
push
cmp
ins
inc
mov
dec
add
sub
leave
scas
adc
sub
pop
cmp
ret
adc
fwait
cwde
cmp
call
in
test
movs
aad
sub
push
dec
sbb
push
cmovs
test
jo
or
jg
push
dec
adc
sbb
jbe
jge
jle
jle
pop
sti
mov
jp
sub
addr16
sti
inc
jle
aas
push
(bad)
push
les
ficomp
ds
adc
cmp
mov
sub
(bad)
ficomp
je
test
lea
mov
and
out
inc
add
xor
test
dec
lea
dec
ja
mov
sbb
les
mov
mov
pop
outs
xchg
dec
sub
jle
ret
jle
cmps
mov
and
out
pop
cmp
adc
imul
push
cwde
dec
inc
sub
jp
out
sar
sub
xor
(bad)
sub
loope
repnz
repz
cmp
pcmpgtb
out
mov
dec
test
aaa
imul
and
mov
mov
rcr
and
pop
sbb
(bad)
jmp
dec
stc
push
jle
rcr
scas
adc
sub
(bad)
icebp
aaa
test
(bad)
not
or
ja
dec
leave
inc
sti
icebp
xlat
ins
ds
pop
add
push
lahf
pop
fadd
jp
mov
add
clc
mov
cmps
imul
imul
push
lods
push
leave
xlat
outs
mov
out
pop
and
adc
jl
ror
leave
std
pop
cmp
xor
ja
movs
(bad)
outs
xchg
enter
add
pop
ss
sub
push
mov
cmp
int
sub
fst
or
adc
mov
enter
jg
inc
sub
and
jmp
or
(bad)
ins
adc
cdq
js
daa
arpl
or
mov
nop
cli
push
push
pop
cmp
test
sub
cwde
fstp
into
ds
je
sub
lods
sub
jmp
inc
sahf
arpl
sub
movs
sub
jb
and
pop
cmp
jnp
push
and
adc
mov
out
pop
xchg
mov
jo
pop
shr
add
xlat
or
cmp
sub
jnp
mov
shr
or
shr
mov
dec
fsub
outs
push
jnp
gs
pop
and
stos
scas
dec
pop
add
xor
add
je
mov
xchg
sub
stos
mov
cli
jge
pushf
(bad)
push
or
aas
out
sahf
outs
int3
xor
mov
je
ja
mov
sti
push
fsubr
stos
aas
push
popa
in
sub
cmp
hlt
xchg
shl
addps
mov
push
jne
mov
jle
(bad)
jo
push
outs
call
fld
push
and
mov
or
mov
sub
or
es
or
icebp
cmp
sub
ss
nop
retf
push
inc
jns
push
mov
push
(bad)
jmp
and
loopne
cmp
leave
pop
pop
cmp
sbb
cmp
outs
xor
jl
adc
xchg
mov
lods
ja
mov
lea
aaa
adc
xchg
pop
and
cmps
pop
push
addr16
cmps
jnp
imul
add
add
or
shl
jmp
cmp
and
stos
inc
movs
lods
sahf
cwde
pop
fwait
(bad)
(bad)
mov
push
push
cwde
out
inc
adc
inc
leave
push
enter
fld
mov
cwde
xchg
cmp
mov
ins
push
mov
fisttp
cmps
push
cmp
mov
loopne
xor
scas
adc
dec
push
hlt
push
adc
mov
pop
lahf
(bad)
mov
stos
jo
cmps
fisttp
push
xchg
lods
inc
and
inc
push
and
or
js
cmp
cmps
xchg
(bad)
loop
rcl
leave
sti
dec
dec
adc
dec
outs
push
inc
imul
jne
test
mov
mov
mov
out
iret
(bad)
xchg
adc
rcr
jmp
jnp
mov
xchg
sub
movs
mov
jo
cmps
xchg
dec
mov
ror
fist
loopne
test
jo
ret
ds
outs
mov
imul
pop
sub
jl
inc
fistp
pop
push
jo
nop
xchg
cmp
push
(bad)
lods
xor
adc
repnz
xchg
mov
jg
int3
popf
jg
push
mov
or
mov
es
jg
(bad)
and
div
aas
das
out
loope
xor
jbe
daa
xchg
icebp
xchg
out
lea
dec
inc
xchg
cmp
add
push
jnp
das
mov
jns
xor
ja
dec
or
push
jbe
cmp
dec
ds
cmp
sbb
jno
sub
fldenv
cdq
cwde
in
arpl
stos
pop
pop
pop
test
int
mov
test
aas
jl
es
dec
jg
(bad)
jns
xor
sbb
ret
add
dec
lahf
jl
jo
fs
out
or
and
dec
mov
xlat
xchg
and
sbb
call
cmc
out
cmp
adc
inc
and
pop
popa
jle
or
mov
(bad)
stos
or
xor
push
mov
cmp
sub
push
mov
cmp
fsubr
jb
pusha
and
pop
into
sub
out
mov
sub
xlat
stc
repnz
sub
add
scas
(bad)
mov
xchg
daa
ds
leave
xor
fwait
sub
cmps
enter
dec
jmp
sub
push
pop
sub
das
pop
xchg
jns
xor
inc
sbb
push
call
aaa
cli
outs
outs
xchg
in
or
xchg
push
cmp
xchg
out
ret
cmps
dec
dec
popf
ds
(bad)
into
pop
xchg
jne
jmp
sub
std
dec
je
add
and
mov
inc
jns
mov
das
push
mov
mov
or
es
movs
aaa
inc
xor
test
dec
and
arpl
ret
jae
xchg
dec
popa
xchg
test
and
sbb
cli
jno
cmp
pop
sub
cmp
jns
rcr
out
mov
jnp
add
mov
(bad)
sub
mov
es
jne
add
leave
arpl
cmps
(bad)
jg
into
in
add
loope
pop
fcmovu
lock
adc
dec
mov
fdiv
push
cmp
pop
scas
dec
aaa
mov
pop
inc
je
(bad)
push
sub
mov
xor
cld
pusha
loope
jne
jmp
mov
jge
jo
mov
jge
cmps
and
addr16
or
push
ja
adc
xchg
es
js
dec
sar
add
icebp
sub
in
sub
inc
jge
imul
pop
ror
fs
daa
dec
addr16
jnp
repz
out
sub
jns
mov
fcmovnbe
addr16
jl
pushf
aaa
mov
pop
fsubr
fisub
sbb
je
push
shl
test
cmp
pop
out
inc
jnp
js
clc
cmp
mov
inc
bound
inc
adc
add
xlat
leave
shl
pop
and
xchg
push
movs
outs
sbb
xchg
inc
sbb
(bad)
xor
outs
sar
add
push
stos
dec
jge
pop
ins
sub
js
test
sub
ret
in
xchg
adc
in
rcr
cmps
sub
aam
xor
sub
or
push
inc
or
push
or
xor
cmp
add
sub
stos
(bad)
fistp
jmp
xor
add
into
stos
adc
les
test
lds
mov
mov
dec
mov
in
in
es
in
mov
bound
ret
jg
mov
(bad)
js
pop
jle
dec
or
sub
scas
stos
stc
test
mov
push
xchg
pop
(bad)
lea
push
mov
or
pop
xor
xchg
or
jnp
adc
cmp
jae
sbb
adc
jns
in
sub
mov
jb
and
fisttp
outs
jns
jmp
lds
add
jb
jmp
push
xor
dec
and
sub
ret
ret
aas
mov
hlt
or
cmps
mov
das
cmp
imul
or
cmp
daa
aad
outs
mov
and
and
movs
(bad)
pusha
mov
cmp
push
(bad)
out
test
ins
out
jl
jb
add
iret
pop
out
call
mov
inc
repz
(bad)
aas
adc
pusha
les
out
pop
es
push
stos
icebp
or
or
xlat
rol
cli
dec
icebp
int3
inc
push
dec
es
leave
enter
(bad)
es
lea
and
gs
es
in
lods
xchg
xor
or
add
fnstenv
not
inc
jmp
stos
dec
jmp
push
sysexit
stos
fisubr
jge
ror
jb
and
adc
sub
ins
ja
sub
cmp
cmps
mov
fs
sub
ds
movs
nop
mov
xor
jo
cmps
lods
push
adc
ins
test
mov
sti
lods
jmp
int
cmp
ins
fstp
arpl
xor
sub
mov
mov
imul
cmp
push
push
mov
pop
add
out
or
adc
repnz
cmp
jg
out
pop
sub
inc
enter
ins
jmp
dec
inc
jb
fstp
je
call
push
jmp
adc
mov
adc
es
aaa
jns
outs
push
xchg
dec
or
addr16
sbb
enter
test
sub
jnp
shl
push
iret
inc
adc
imul
and
and
call
fs
data16
std
cmp
inc
into
dec
sub
(bad)
pusha
mov
cdq
std
jle
scas
jle
and
pop
cmc
inc
sub
jns
pop
mov
(bad)
and
mov
retf
sbb
scas
jnp
jle
(bad)
loopne
sub
push
sub
jbe
sub
clc
lods
sbb
(bad)
hlt
push
mov
inc
jbe
dec
ins
pop
ret
adc
daa
mov
cmp
cmp
xor
pop
jmp
or
add
popf
mov
ins
lds
iret
stos
repz
je
retf
sub
sub
mov
cwde
or
cmp
jmp
adc
outs
mov
fs
retf
mov
(bad)
cmp
or
ds
xor
or
ins
jno
jb
sbb
pop
or
cmp
pop
xchg
out
scas
push
cld
or
mov
and
out
in
jmp
imul
add
pop
loope
loop
jmp
stos
arpl
mov
adc
jae
sub
and
cmc
xchg
push
enter
jnp
or
sbb
hlt
mov
xchg
jae
scas
aam
rcl
and
ds
and
adc
je
ins
add
sbb
movs
mov
xor
and
push
push
movs
push
jnp
xor
bnd
mov
test
xchg
cli
test
repnz
xchg
pop
sub
pop
loopne
dec
dec
jnp
sahf
push
fcmovb
push
sub
inc
out
mov
pop
push
push
cmp
mov
(bad)
xor
in
nop
sbb
jg
mov
outs
sub
ja
jl
jmp
mov
test
pusha
retf
test
push
or
popf
pop
cli
cmp
add
imul
pop
je
ret
shl
outs
mov
ret
push
sub
fbld
jbe
cmp
ret
sub
or
stos
sbb
mov
and
pop
and
sbb
loopne
mov
or
add
cmps
add
outs
jle
cmp
lods
sbb
mov
pop
jle
clc
dec
arpl
xor
jle
fisub
ins
push
call
mov
push
test
cli
jmp
ret
jb
bound
or
mov
lods
push
and
ja
fimul
push
xor
shr
inc
shr
fadd
in
stc
(bad)
stc
(bad)
jmp
lahf
and
dec
and
mov
rcl
xchg
neg
pop
out
pop
mov
xchg
ss
lods
fist
in
pop
aas
dec
daa
enter
xor
pusha
loope
jle
jo
pop
mov
fnstsw
jg
dec
jge
jnp
out
fs
outs
xchg
retf
push
ja
inc
stos
sub
xlat
dec
dec
jl
retf
retf
inc
push
pushf
(bad)
cmp
xchg
je
mov
jecxz
es
sub
and
ds
jle
jle
xor
cli
sar
dec
or
icebp
popf
ret
and
adc
push
sub
cld
jno
push
or
push
mov
bound
cmp
out
jl
pop
jle
jle
sub
inc
fsub
sub
or
and
jp
cmp
mov
mov
cmp
mov
fwait
push
add
in
outs
shl
scas
bound
xor
icebp
mov
dec
scas
pop
push
not
push
add
adc
push
or
test
xor
das
push
jb
sti
(bad)
push
jne
int3
or
js
adc
aas
pop
adc
adc
aaa
ret
shr
les
ret
test
loope
loopne
fcmove
cvtps2pi
sub
fcom
sub
int
in
jecxz
sbb
cmps
push
dec
xor
push
jnp
mov
sar
fimul
pusha
inc
adc
xchg
popf
push
jne
neg
jbe
fisubr
sub
mov
in
repz
and
xor
(bad)
out
jmp
or
(bad)
or
inc
or
sub
sbb
sub
sub
inc
and
inc
repz
sbb
xor
sub
jge
mov
inc
out
sub
fild
sub
or
xor
cld
mov
inc
(bad)
mov
out
pop
bound
ss
mov
cmp
add
inc
daa
ja
jmp
and
add
leave
call
cmp
mov
push
icebp
and
inc
punpcklbw
cmp
fwait
ja
ins
sbb
(bad)
push
bound
sub
std
xadd
xor
sub
xchg
add
mov
out
retf
cmc
jne
or
in
inc
cmp
(bad)
std
add
jns
aad
and
push
nop
aas
ss
data16
jle
mov
mov
jge
enter
dec
xor
dec
fimul
mov
push
cs
sub
and
xchg
sub
sbb
outs
and
fistp
push
and
mov
in
data16
xchg
cmp
sbb
push
ss
out
lods
jl
pop
adc
sbb
test
pop
dec
push
or
push
add
jns
push
add
bound
or
mov
cmp
ja
sub
add
movs
outs
xor
lods
cmps
lds
jmp
cmp
adc
lods
ja
outs
add
add
mov
ror
pusha
bound
imul
out
push
push
jo
out
retf
bound
xor
and
cmp
jbe
and
xchg
sti
cmp
out
retf
sbb
cmp
ja
sub
add
rol
push
adc
adc
enter
adc
or
sub
sbb
cmps
and
jnp
sbb
xor
mov
sub
cmps
mov
ins
and
mov
mov
lods
rcr
xchg
test
dec
mov
bts
push
lods
sbb
addr16
adc
sub
ins
sub
sbb
xor
sbb
inc
sahf
xlat
test
stos
xor
fisub
or
adc
xor
mov
ds
ds
cmp
jnp
es
addr16
push
jg
push
enter
or
xchg
add
sub
pop
mov
push
jp
xor
(bad)
ins
imul
rcr
jnp
adc
mov
xchg
inc
outs
cmp
std
cmc
cmp
push
std
es
imul
bound
es
xchg
jnp
jp
popf
cmp
jnp
es
lea
dec
shl
lods
push
inc
imul
pop
ds
call
pop
inc
push
stos
inc
sbb
dec
cdq
stos
pushf
and
cs
cmp
stos
and
cmps
adc
mov
mov
cmps
push
dec
mov
cmp
lods
jo
pop
jo
adc
push
jbe
add
movs
push
stos
scas
pop
push
fs
mov
outs
inc
xchg
arpl
sub
jb
nop
pop
aad
or
ins
jo
icebp
out
fmul
sub
jl
jno
mov
mov
xor
into
out
call
cmpxchg
cli
les
and
mov
test
dec
xchg
pop
sbb
sbb
gs
je
mov
mov
inc
dec
(bad)
or
jl
ret
sbb
popf
loope
mov
(bad)
int3
pop
aam
sbb
fwait
aaa
sub
sti
inc
push
cmp
sub
out
jle
jne
jp
mov
jp
imul
adc
mov
push
sbb
mov
and
sub
(bad)
mov
mov
loopne
fs
xchg
imul
fwait
jno
(bad)
test
mov
and
mov
xor
push
mov
stos
push
push
cdq
xor
leave
cmp
xor
and
sbb
dec
(bad)
and
jbe
fsubr
sub
add
push
jp
cmp
and
pop
sub
dec
cmc
in
hlt
adc
push
xor
xor
sbb
cmps
aam
out
daa
jns
mov
adc
inc
xor
cmps
and
xlat
add
and
push
in
pop
es
jne
js
inc
(bad)
or
cmp
jmp
jecxz
or
stos
out
jge
ss
sbb
push
syscall
and
into
xchg
fwait
mov
test
outs
xor
push
push
scas
shr
test
test
int3
xchg
adc
jns
rcr
pop
cmp
or
cmps
adc
pop
or
add
cmp
sub
cmp
retf
xor
and
es
stos
ins
mov
cmp
jmp
mov
pop
push
jbe
and
sbb
jl
cmp
movs
cmp
xchg
loop
sbb
xor
test
test
jl
jmp
test
out
sub
inc
dec
or
and
addr16
imul
test
dec
ins
inc
imul
add
es
xor
js
adc
imul
cmp
or
es
xor
mov
sub
mov
sub
fiadd
aaa
jnp
add
push
shr
or
mov
jbe
push
sub
pop
cmp
nop
or
cmp
adc
add
jp
jnp
cmp
jge
or
jo
or
mov
cmp
adc
cmp
mov
pop
or
xor
enter
jmp
push
inc
ins
ds
sbb
ins
xchg
or
movs
addr16
int3
push
cld
jle
sub
or
and
jbe
push
outs
jae
(bad)
dec
cmp
xor
gs
sub
xchg
and
stos
arpl
out
mov
and
push
mov
pop
ss
cmp
in
push
push
push
mov
sbb
sbb
mov
jp
mov
jl
fwait
sbb
xchg
std
pop
(bad)
icebp
bound
sub
mov
lock
aas
sub
ret
loope
cwde
jmp
das
js
icebp
lahf
test
xor
sub
out
cmp
jmp
sub
ja
jne
fmul
jmp
sbb
jg
add
out
mov
aad
jmp
cmps
xor
call
xchg
add
push
inc
aas
test
imul
jg
pop
ret
cmp
das
gs
xor
mov
je
inc
call
jbe
test
mov
ret
mov
mov
repz
pop
jno
outs
jle
push
ins
jl
ja
cld
cmovs
sub
mov
popf
add
movs
adc
das
pop
in
ds
push
mov
(bad)
ds
mov
sbb
and
sub
in
test
adc
(bad)
imul
and
arpl
or
cmp
add
int3
lahf
dec
and
test
es
sub
fist
mov
test
movs
pop
pop
fisub
mov
or
jge
mov
js
neg
pop
ins
jb
cdq
and
nop
sub
ret
xchg
fs
dec
mov
out
gs
and
imul
ja
(bad)
test
add
jo
sub
stc
rcr
xor
dec
(bad)
sbb
sub
mov
idiv
push
pop
jecxz
jo
xor
pop
jb
js
adc
leave
push
ds
jb
cmp
nop
push
xor
dec
lea
cmps
xchg
push
div
lods
test
dec
jle
xchg
stos
push
xchg
and
add
or
sub
adc
and
daa
jp
xchg
xchg
xchg
jmp
sub
fisub
mov
xlat
(bad)
stos
into
xor
int3
jle
retf
inc
ds
mov
and
sub
jns
push
loope
dec
out
add
jge
(bad)
or
and
sbb
cld
and
xlat
add
sub
and
pusha
xchg
inc
test
and
push
(bad)
and
aam
xor
sti
adc
jmp
dec
(bad)
and
push
xor
cmp
aas
int3
rol
jno
ds
xor
xor
pop
out
sbb
sbb
mov
jo
ret
sbb
outs
xor
jg
js
or
jle
test
xor
inc
xor
(bad)
xor
adc
or
pop
cli
sar
mov
callw
add
add
out
sub
mov
xor
aaa
xchg
adc
xor
sbb
fdiv
lahf
pop
clc
sti
ret
outs
xor
mov
jb
add
loop
mov
xor
mov
jecxz
fcmovnb
xor
sub
mov
aas
movs
jns
test
sub
pop
xchg
push
inc
ins
dec
add
lea
xchg
hlt
add
(bad)
or
loope
jb
or
std
push
jp
stos
pop
push
inc
push
cmp
or
or
sub
or
xor
aaa
stos
ins
jg
cmps
cdq
repnz
jge
xor
inc
sbb
ds
daa
push
ss
and
cmp
jbe
xor
daa
mov
sti
shl
push
mov
imul
add
add
mov
and
mov
daa
pop
add
push
jmp
iret
fs
jp
mov
shl
loopne
stos
scas
and
arpl
sbb
(bad)
int
jl
or
lods
repz
and
leave
xchg
cmps
adc
and
xor
cmp
test
ja
cmp
test
int3
(bad)
aad
xchg
push
and
cmp
das
jo
and
jmp
ret
js
fistp
les
idiv
ins
out
cmp
(bad)
add
mov
loop
push
adc
xchg
ds
movs
jle
xor
mov
jo
push
add
mov
test
cmp
test
pop
daa
mov
jo
aas
ret
cmp
mov
push
push
sub
call
stos
fisttp
mov
sbb
aas
(bad)
or
aam
mov
es
mov
js
sbb
xchg
stos
dec
stos
(bad)
sub
and
mov
lods
sbb
add
(bad)
push
dec
icebp
mov
out
xor
data16
push
mov
sub
adc
cmp
jbe
ja
je
inc
(bad)
or
cdq
outs
ins
adc
cmps
in
jo
inc
jno
inc
std
mov
mov
sbb
mov
inc
xor
dec
sub
aam
stc
jne
and
jle
dec
enter
xor
mov
out
push
ds
and
in
mov
imul
mov
add
push
pusha
sub
push
adc
and
push
aas
pushf
(bad)
sub
add
and
arpl
or
outs
outs
fbstp
in
arpl
jns
arpl
out
jmp
sub
pop
jmp
loopne
push
retf
cmp
jae
fdiv
dec
sub
xchg
ss
mov
or
mov
es
push
pop
and
dec
imul
mov
shl
and
adc
and
hlt
push
shl
cdq
xor
and
mov
ins
and
xor
sar
out
dec
ds
xor
push
dec
clc
fs
or
inc
leave
arpl
out
jmp
lods
ins
cmp
popf
mov
cmp
rcr
jae
arpl
jmp
ss
mov
or
aaa
pop
test
and
hlt
push
shl
sub
cmp
stc
(bad)
lock
aaa
pop
and
scas
mov
nop
jo
xor
pop
ins
pusha
int3
pop
popf
add
push
adc
test
push
bt
adc
lock
call
aas
je
les
pop
(bad)
out
call
dec
cmps
clc
jecxz
(bad)
or
sub
stc
ins
adc
sbb
sbb
loopne
inc
pop
add
mov
outs
lock
jp
stos
aam
dec
std
cmc
int
leave
and
xchg
ror
cmps
push
data16
cwde
jo
push
add
xchg
and
fld
adc
jle
mov
adc
add
cwde
jl
mov
stos
mov
loopne
cmps
out
aam
lds
stc
mov
adc
mov
inc
fistp
mov
and
xchg
pop
ins
push
adc
leave
and
dec
push
jo
and
(bad)
aad
fild
aad
fcmovb
push
dec
inc
and
mov
ror
loopne
sbb
dec
xchg
stc
je
xlat
mov
sbb
jg
ret
gs
fld
mov
cmps
(bad)
dec
fdiv
stc
push
shl
mov
mov
ficomp
pop
push
mov
pop
sbb
mov
push
data16
push
movs
test
add
add
cld
dec
adc
shl
mov
mov
jae
jnp
jmp
mov
aad
and
in
lods
adc
dec
call
xchg
and
call
stos
jno
in
mov
in
xabort
jmp
call
in
fldenv
iret
fsub
ret
push
xchg
fsubr
mov
clc
movsx
push
fsubr
xor
jg
ret
jne
xor
and
xor
ror
fldenv
fld
cmps
icebp
(bad)
jl
cs
jp
fsin
mov
xlat
in
pop
(bad)
neg
fs
xor
or
(bad)
(bad)
movs
xchg
mov
jno
in
unpcklps
nop
shl
xor
nop
mov
in
daa
adc
or
(bad)
adc
outs
je
mov
add
xor
leave
les
lods
adc
mov
xchg
add
rcr
in
test
mov
int3
daa
push
jnp
adc
push
aaa
mov
push
ins
xlat
(bad)
mov
enter
loopne
(bad)
sti
(bad)
call
mov
mov
mov
pop
lods
adc
mov
add
outs
xor
(bad)
mov
scas
stos
mov
loopne
test
adc
cmp
mov
je
cmps
push
or
int
adc
(bad)
add
ret
ficom
fxch
js
jmp
or
loopne
test
adc
sbb
fiadd
mov
mov
sti
fld
cmp
push
cld
shl
ret
sub
push
shr
pop
sahf
ret
(bad)
pop
rol
inc
lahf
fcmovnbe
movs
ins
(bad)
in
(bad)
dec
(bad)
arpl
jge
adc
jno
mov
add
cs
iret
jo
shr
(bad)
clc
frstor
leave
stos
mov
loopne
mov
lahf
out
push
xor
pop
pop
movs
xchg
mov
stos
mov
loopne
ror
mov
scas
jo
shl
call
dec
loope
adc
aaa
mov
pusha
loope
imul
in
xchg
mov
stos
mov
rsqrtps
push
fmulp
fisub
dec
(bad)
pop
imul
stos
mov
loopne
mov
inc
fsubrp
jo
sbb
clc
movsx
and
call
stos
call
leave
cdq
inc
lods
gs
int
xchg
test
add
pop
out
lods
outs
fbstp
jmp
jno
jl
mov
shl
xor
sub
fs
xchg
mov
adc
push
test
inc
lods
pop
adc
jl
mov
fs
push
mov
pop
pop
daa
pushf
push
jne
cs
dec
cld
or
dec
jmp
mov
cmps
es
mov
daa
mov
inc
adc
ja
push
mov
repnz
xor
xor
mov
rcl
jns
xchg
movs
push
mov
push
mov
add
test
(bad)
mov
mov
sub
(bad)
fsubrp
shl
jne
in
(bad)
jae
dec
mov
data16
dec
jmp
js
popf
adc
lock
jl
loopne
(bad)
outs
sub
test
fdiv
cmp
ins
dec
push
lods
nop
or
jo
pop
adc
cmp
(bad)
lock
inc
daa
xor
push
push
stos
fldenv
and
stos
adc
pop
scas
push
sbb
(bad)
cmp
jmp
push
fld
outs
jle
xor
(bad)
leave
jmp
repnz
ja
pop
cwde
test
cmc
inc
inc
cmp
cmps
push
mov
js
pop
jae
mov
and
sbb
xchg
cmps
cmp
xor
push
sub
mov
adc
or
test
pop
or
dec
in
add
pop
mov
lods
dec
aam
shr
jno
mov
das
or
div
mov
out
dec
fs
jns
cmp
adc
cmp
jl
cmp
inc
xor
mov
shl
pop
jnp
inc
mov
push
pusha
xor
pop
inc
pop
and
dec
icebp
ja
push
scas
cs
add
sbb
xor
test
aad
cmp
push
(bad)
pop
mov
inc
or
das
adc
das
jno
test
jg
sbb
(bad)
pusha
lock
outs
xchg
inc
hlt
mov
jg
adc
aad
fisub
test
push
inc
jg
pop
into
movs
cmp
sbb
and
ins
dec
mov
loope
sbb
(bad)
iret
inc
ret
loopne
(bad)
outs
rcl
out
and
das
jne
enter
adc
aad
xchg
cmps
mov
sbb
adc
inc
mov
(bad)
mov
adc
pop
mov
xchg
push
sbb
sub
add
push
mov
(bad)
fwait
dec
mov
mov
nop
push
jnp
xor
and
add
shr
aam
ins
pushf
aaa
ficomp
jno
mov
dec
mov
repz
call
cmp
jmp
cld
mov
mov
pop
jl
in
mov
pop
cmp
sub
fst
xor
jbe
jno
push
xor
js
imul
jecxz
leave
shr
scas
and
fsubr
std
lods
aaa
mov
leave
xchg
mov
xor
mov
pop
aam
into
and
xor
or
pop
ja
jae
push
ret
inc
loopne
sbb
sub
imul
and
sub
enter
jmp
out
out
bound
and
ret
dec
ins
pop
(bad)
je
dec
push
das
out
add
ret
mov
cmp
rol
mov
inc
xor
xchg
cmc
fmul
aaa
neg
test
adc
add
stc
out
push
fimul
and
test
mov
rol
mov
or
dec
ja
push
dec
sub
mov
cmc
push
dec
fnstcw
cmp
inc
dec
sub
loope
enter
adc
in
sub
push
lods
mov
add
xor
inc
or
or
xor
push
in
inc
scas
mov
pop
mov
movs
ins
and
push
pop
lock
push
in
xchg
xlat
inc
fisttp
dec
and
dec
push
sub
sub
xor
jmp
inc
sahf
bound
xor
data16
mov
add
cmps
xor
push
imul
sbb
iret
xor
mov
les
cmp
inc
and
push
inc
je
test
pop
iret
sbb
fld
bound
dec
popa
pop
xchg
pop
and
arpl
mov
lods
aaa
stos
ins
ret
ror
icebp
int3
xor
push
(bad)
out
push
add
test
and
in
(bad)
dec
cmp
aam
shr
inc
minps
stos
loop
(bad)
and
jo
dec
pop
xor
nop
or
icebp
mov
push
adc
dec
dec
cli
lods
sub
mov
xchg
or
xor
sub
movaps
stos
aaa
jg
das
xchg
in
jg
jmp
inc
and
bound
repnz
cmps
sbb
jp
ds
cld
mov
xor
jge
jle
jmp
or
std
or
push
rcr
cmp
sub
stos
aam
pop
adc
sub
loopne
adc
jb
fwait
xchg
rcr
loop
pop
push
lods
mov
pop
fs
es
cmp
sub
jecxz
jmp
sub
jno
ret
xchg
push
sbb
sbb
clc
pop
data16
mov
mov
inc
ss
cmp
(bad)
adc
cmps
sbb
out
stc
add
adc
popa
xor
scas
push
(bad)
jnp
or
aas
jge
loopne
mov
add
pop
lea
in
add
xchg
inc
or
loope
icebp
or
inc
aam
mov
jmp
fstp
daa
mov
cmp
nop
in
push
sub
es
mov
cli
loop
jo
aad
jecxz
cmp
mov
movaps
pop
pop
cld
sub
dec
adc
ret
mov
dec
ds
inc
outs
idiv
inc
jnp
(bad)
hlt
and
sti
cmp
xchg
stos
gs
aas
into
cmp
cli
adc
sub
cmps
mov
sub
out
test
(bad)
pusha
scas
pop
je
push
(bad)
xor
pop
jbe
add
leave
and
fnstcw
cmp
mov
cli
add
shl
add
adc
sub
aam
scas
outs
jnp
movs
inc
pop
outs
jne
scas
es
push
retf
add
repnz
call
pop
xchg
pop
(bad)
jmp
das
add
mov
mov
push
push
stos
mov
imul
mov
aaa
(bad)
ins
xchg
xchg
cmp
test
adc
enter
xor
sbb
jp
(bad)
popf
pop
inc
mov
into
ret
jae
aam
mov
cli
pop
pop
dec
movs
and
mov
(bad)
pop
inc
(bad)
pop
fs
add
or
inc
and
cmp
int
cmp
stos
(bad)
pop
jns
sbb
pop
movs
pop
dec
out
mov
sub
les
scas
xor
cmp
call
daa
cmp
adc
test
or
xor
popf
jb
xchg
js
jg
aas
mov
inc
imul
mov
test
sub
iret
sbb
outs
out
dec
sub
gs
enter
ret
popf
jp
add
retf
push
cmp
cld
fisubr
cmp
popf
pop
mov
adc
mov
hlt
inc
mov
popa
cmp
movs
mov
adc
gs
adc
dec
inc
push
jo
xor
ja
sar
rcl
lahf
fwait
shr
jns
sbb
jno
stos
call
pushf
jnp
sub
dec
push
inc
rol
push
jecxz
stos
mov
(bad)
adc
mov
mov
jmp
add
ins
mov
inc
popa
xor
mov
cmp
dec
inc
ror
aam
xlat
outs
leave
or
ds
leave
daa
ret
sub
shr
dec
aas
pop
cld
sub
fs
je
xor
pop
call
(bad)
pop
jbe
and
pop
dec
cmps
push
pop
in
inc
or
bnd
outs
or
mov
in
push
out
sub
imul
add
cmps
mov
lahf
stc
call
out
xor
call
daa
call
(bad)
(bad)
fdiv
out
outs
mov
lods
and
in
scas
xchg
es
adc
pop
cmp
mov
and
jl
xor
bound
sub
add
test
(bad)
stc
in
ficomp
pop
fsubr
imul
jnp
ret
jnp
call
jne
sub
ds
fucomi
sbb
sub
adc
aad
mov
aad
bound
pop
inc
rol
js
xchg
pop
inc
sahf
sub
retf
mov
(bad)
cmp
and
icebp
fcomp
jmp
or
test
pop
and
enter
sub
pop
aam
dec
mov
cmp
inc
pusha
cmps
pop
cmp
ins
jnp
xchg
sub
mov
push
xchg
pop
push
mov
js
pop
adc
adc
jne
xchg
repnz
fsubrp
push
xchg
pop
ror
jae
sahf
pop
cvtpi2ps
sbb
test
jno
push
dec
dec
shl
mov
xchg
xchg
out
fisubr
ror
dec
into
push
jmp
xor
xchg
inc
cmp
ja
xor
lahf
xor
es
sub
loope
shl
mov
je
mov
aam
push
dec
adc
push
pop
arpl
cmp
loope
mov
adc
aam
push
das
test
(bad)
dec
and
or
es
addr16
popf
or
push
adc
push
jl
dec
mul
sbb
sbb
leave
in
or
ds
cmps
jle
jmp
das
ror
mov
movs
cmps
mov
scas
test
push
cmp
or
xor
xor
inc
shl
xor
xchg
test
outs
aas
inc
leave
loop
pop
dec
fdiv
push
mov
jle
cmp
xor
xor
pop
test
adc
stos
sti
(bad)
jge
ret
loop
imul
shl
jno
int
or
push
pop
sub
daa
popa
xor
in
jno
xchg
mov
mov
es
sbb
pop
jle
mov
stos
mov
mov
jo
push
movs
ret
adc
retf
cs
and
call
jge
ds
test
and
ret
inc
inc
jo
sbb
xchg
out
test
add
xor
out
mov
into
pop
js
xor
ret
je
fisubr
fldcw
dec
stos
adc
pop
inc
mov
test
mov
mov
mov
jb
mov
(bad)
retf
add
jp
pop
dec
in
mov
push
add
pop
les
loopne
das
bound
mov
sahf
dec
xor
xor
or
xor
and
add
jmp
jecxz
pop
push
iret
cmp
dec
sbb
pop
sub
(bad)
push
jb
mov
scas
xor
ret
jno
add
and
pop
cli
mov
adc
mov
sbb
xchg
fsubr
pop
mov
in
xor
nop
fwait
ret
out
add
push
inc
aad
movs
bound
mov
fwait
push
push
pmuludq
sub
retf
xchg
push
xchg
dec
(bad)
xlat
rcl
aad
xchg
adc
push
into
sub
not
cmp
push
push
mov
retf
sub
add
loope
icebp
addr16
mov
(bad)
mov
cdq
push
sub
pop
cdq
std
rcr
add
ja
repz
add
lahf
mov
mov
daa
not
test
pop
shr
lods
pop
ret
retf
push
adc
mov
lods
pop
sub
push
dec
jns
call
mov
pushf
repz
mov
gs
stc
dec
cmp
(bad)
fdivr
imul
xor
repnz
test
jmp
test
ss
jecxz
lods
sbb
ins
inc
pop
jg
icebp
inc
ret
jae
clc
ds
pop
mov
jmp
or
jge
ret
cmp
or
outs
dec
stos
stos
gs
fstp
pop
mov
or
sub
dec
push
push
imul
or
cmp
sub
jns
jmp
push
xchg
aad
pop
and
cmps
inc
xchg
ss
mov
shl
gs
enter
push
aas
sub
ins
push
test
rcr
or
std
test
sub
pop
and
out
sbb
sbb
dec
mov
imul
sbb
mov
sub
sbb
shr
cmp
mov
lods
in
enter
ins
sub
and
icebp
mov
std
leave
push
push
mov
ins
in
ss
push
push
xchg
push
dec
dec
out
xchg
jno
cmp
and
jmp
es
inc
pop
xor
sub
fldenv
jbe
adc
stc
xchg
sar
aas
cld
sub
aam
in
loop
jle
cmp
pop
or
imul
and
sub
push
test
jno
mov
outs
adc
or
shr
daa
jge
mov
lods
cmp
cmp
adc
icebp
(bad)
setge
pop
lea
sub
jne
cmp
jmp
mov
inc
sub
xchg
mov
xchg
push
scas
sub
pusha
push
sub
mov
out
fsub
icebp
xchg
sbb
popf
push
movs
mov
and
push
pop
mov
pop
sar
adc
xor
xchg
ds
nop
cmp
adc
mov
fld
ja
ds
adc
sub
ds
pop
pop
sbb
aas
lods
dec
mov
dec
cmp
cdq
jle
sub
cmp
pop
sbb
jmp
cmp
and
iret
jo
retf
(bad)
xlat
and
adc
fmul
sti
aaa
aam
push
sar
jno
je
bound
scas
push
add
jecxz
inc
out
cld
ret
sub
pop
mov
and
inc
cmp
push
loope
adc
imul
and
out
cmp
test
sub
and
inc
sub
pop
cmp
outs
jmp
rol
cs
sbb
sub
int
push
mov
in
ins
inc
inc
and
lods
pop
pop
stos
not
(bad)
cmp
lea
cmp
test
and
adc
sub
cmp
and
inc
es
fiadd
sahf
jmp
ret
cmp
or
add
mov
mul
jmp
fisttp
cmp
daa
int3
int3
jb
pusha
and
adc
jns
sub
sbb
or
psllq
cmp
clc
fbstp
call
inc
and
lock
add
cli
out
js
mov
dec
pop
ret
adc
idiv
jg
lods
cmps
sub
jle
sub
adc
rol
ds
cdq
sub
mov
cmp
fistp
sub
push
ss
mov
sbb
mov
scas
or
retf
jns
mov
or
dec
and
cmp
inc
xchg
test
icebp
lods
jg
xor
sbb
and
xchg
mov
pop
add
jmp
cmp
(bad)
and
sub
push
sbb
popf
cs
pop
sub
stc
ret
sbb
out
dec
xchg
xor
(bad)
test
xchg
sub
jae
inc
rol
mov
ss
in
push
imul
das
mov
rol
cs
xor
fnstenv
push
and
sub
lods
adc
push
jl
inc
sub
jnp
inc
push
xchg
jae
xchg
mov
(bad)
dec
mov
dec
retf
icebp
shl
cmps
les
std
pop
sar
jb
loope
(bad)
cmps
sub
jbe
imul
push
and
add
sub
sbb
ja
pop
dec
sub
test
sub
(bad)
jo
(bad)
adc
sub
out
push
push
sti
push
cmp
clc
movs
jbe
xor
das
sub
jmp
pop
test
or
out
(bad)
(bad)
cmps
ins
arpl
shl
aaa
dec
cmp
push
pop
cs
and
lock
inc
stos
rcl
in
ds
stc
leave
mov
lea
scas
pop
adc
popf
or
xor
ret
sbb
add
push
pop
test
xchg
inc
fcmovu
imul
jae
push
inc
popf
inc
imul
jp
enter
adc
dec
push
fidivr
test
fdivr
ds
bound
push
sub
in
jno
pop
test
fwait
sub
inc
std
push
pusha
ss
cmps
and
cld
into
pushf
enter
sub
and
add
(bad)
imul
sub
push
aam
jae
xor
data16
cmp
cmp
sub
pop
mov
mov
add
jbe
fnstsw
cmps
push
lea
dec
jmp
stc
mov
inc
or
ret
or
xchg
add
js
loope
xor
sahf
enter
fcmovbe
cli
in
xor
es
sub
push
shl
mov
jmp
lahf
cmc
enter
(bad)
icebp
test
adc
mov
test
out
and
sub
adc
mov
data16
cs
aaa
movs
jno
mov
enter
cmp
sub
ret
repnz
jnp
das
push
sub
xchg
or
and
jns
push
jmp
pop
sbb
jnp
adc
dec
and
mov
pop
outs
fisttp
jne
jo
das
jno
cdq
mov
out
cmps
bound
mov
loope
cmp
sub
in
cmp
sub
(bad)
aas
pop
mov
cmp
push
aam
outs
adc
xor
cld
cmps
out
lahf
je
push
dec
push
jp
push
out
xor
test
cs
lods
call
outs
sub
sub
and
mov
and
cdq
das
push
test
mov
call
out
and
(bad)
and
jle
into
ret
pop
jno
cmp
pop
sub
test
mov
shl
dec
push
inc
sub
int3
push
bound
and
or
add
xlat
(bad)
mov
mov
adc
xchg
test
dec
lock
dec
xchg
popf
pop
sbb
icebp
mov
and
nop
fwait
push
stos
xchg
clc
mov
sbb
retf
(bad)
aam
std
jbe
mov
push
lods
xor
(bad)
jmp
icebp
sub
cdq
mov
ret
in
dec
cmp
inc
dec
stos
pop
aaa
shr
inc
mov
es
jp
cmp
sbb
cmp
test
outs
rcl
leave
call
sahf
cmps
sub
xor
and
dec
jnp
or
cmps
stos
test
push
or
xor
ds
mov
and
push
push
mov
jno
mov
loopne
pop
add
(bad)
or
push
ret
or
fldenv
lods
mov
repz
pop
fsubr
imul
adc
(bad)
xchg
mov
sub
push
mov
mov
cmp
leave
rcl
shl
jb
pop
cmp
je
pop
or
popa
and
jo
inc
sub
cmp
dec
ret
add
scas
je
loop
cmps
cwde
jnp
jns
lock
xchg
rcr
jo
fcom
in
push
test
push
cmc
mov
xor
mov
and
pop
xchg
inc
leave
cmp
out
ror
jo
xor
jno
icebp
or
ins
sar
sahf
repz
mov
inc
ds
outs
pushf
arpl
push
fst
ds
call
ins
je
cmp
push
add
xor
xlat
adc
or
jmp
pusha
push
sub
icebp
jns
out
mov
add
leave
pop
in
pop
stc
sbb
dec
scas
xor
and
outs
imul
xchg
cmp
test
in
jae
and
stc
jle
lods
inc
adc
adc
mov
sub
adc
add
fisub
std
jo
hlt
movs
xchg
int
and
pop
nop
test
sahf
popf
mov
sub
ds
aam
out
jnp
inc
mov
mov
cmp
push
xor
inc
loop
sub
fnstsw
and
rol
mov
xlat
aam
pusha
pop
jp
pushf
and
jg
sbb
ins
dec
call
sbb
adc
inc
push
pop
dec
cmps
adc
fwait
xor
xchg
cmps
sub
push
sbb
enter
inc
lock
jae
dec
jne
rcl
data16
aas
xor
dec
stos
pushf
cwde
dec
leave
jns
cmp
inc
arpl
xchg
ins
sbb
imul
stc
jle
xchg
nop
jle
inc
mov
scas
or
sub
cli
aam
add
push
push
jns
cs
bound
je
jbe
aas
retf
mov
push
xchg
test
sbb
in
jecxz
frstor
(bad)
pop
mov
fs
rol
imul
sub
xor
push
push
test
jecxz
and
jae
and
mov
sub
nop
aaa
xchg
fsubr
add
es
mov
jecxz
lods
imul
jecxz
mov
and
or
cmp
lods
fwait
loop
aaa
test
jns
icebp
ss
sahf
imul
mov
adc
mov
pop
or
aam
cmp
jge
je
idiv
call
std
loop
push
cmp
xchg
mov
xlat
(bad)
inc
js
dec
outs
xor
je
xor
dec
sub
add
sub
cmp
ins
xchg
pop
fistp
push
sub
adc
push
push
sbb
pop
xor
pop
jns
mul
test
or
push
push
std
fs
(bad)
cmps
fwait
in
mov
cdq
rcl
in
sub
gs
lods
mov
repnz
cmp
(bad)
adc
push
push
xor
jo
arpl
nop
outs
aas
imul
pop
mov
rcl
cwde
cli
xchg
(bad)
out
sub
sub
cwde
rcl
fsubr
jb
add
call
mov
nop
cmp
and
inc
les
sub
jge
xchg
mov
push
shl
es
je
mov
adc
push
stos
push
jge
mov
cmp
in
icebp
retf
mov
not
inc
dec
or
in
jg
push
aam
or
fs
sub
retf
scas
ficomp
leave
jg
enter
lock
jb
into
pop
push
movs
and
out
adc
lock
cmc
test
cmps
xchg
xchg
out
rol
cmc
jo
and
or
test
cmps
xor
inc
ja
dec
sub
aas
or
mov
sbb
mov
push
and
jae
cmp
shr
inc
cdq
outs
xchg
icebp
pop
cmp
fsub
cmp
test
xor
outs
call
icebp
add
scas
push
cmps
daa
addr16
ins
dec
pop
add
inc
(bad)
lods
dec
dec
sbb
add
pop
adc
movs
fmul
mov
pop
lds
(bad)
xchg
mov
jae
daa
add
xlat
not
scas
ds
dec
or
je
xor
mov
or
sub
push
loopne
pop
push
mov
ins
xor
cmp
sub
dec
popa
div
sub
cmp
add
xor
push
lahf
fmul
adc
inc
dec
lock
fsubr
sub
jno
mov
mov
or
ins
retf
jmp
movs
jno
rcr
and
sub
aam
das
imul
icebp
jmp
inc
aad
popf
lahf
retf
and
or
ficomp
push
out
mov
inc
(bad)
mov
add
jmp
(bad)
gs
sub
ret
loopne
(bad)
ficom
sbb
xor
popa
push
inc
cld
jle
pushf
add
test
jno
aas
xchg
jmp
cmp
rcl
jno
mul
inc
xor
mov
and
imul
and
aaa
mov
pop
add
loopne
arpl
out
xor
cmps
int
push
cmp
stos
(bad)
sub
ds
cmp
and
fwait
sub
sub
inc
in
iret
dec
xor
push
(bad)
pop
push
fbstp
je
mov
cmp
adc
cmp
jns
cmp
icebp
adc
jl
or
aaa
mov
rcr
inc
mov
xchg
imul
mov
push
(bad)
in
cmp
shl
xor
sub
jb
movs
stos
in
fs
ret
es
mov
aam
sbb
sahf
pop
inc
sbb
fst
sub
mov
mov
call
loop
fidiv
xchg
inc
xor
xor
hlt
push
pop
jle
(bad)
add
push
pop
cmp
aam
pusha
xor
jle
fdiv
xor
cmps
inc
inc
adc
sub
dec
jp
rcl
xor
call
pop
add
mov
daa
stos
aam
push
xchg
mov
xchg
add
not
dec
icebp
loopne
jno
mov
fiadd
je
enter
or
jle
leave
add
add
cmp
add
pushf
inc
adc
(bad)
jns
add
jns
jb
and
cmp
(bad)
out
je
cmp
daa
jbe
cmp
pop
arpl
sbb
cmp
mov
test
xchg
out
jne
data16
rcr
ret
sub
dec
adc
daa
or
and
or
cdq
out
mov
hlt
imul
retf
ja
mov
push
movs
push
fimul
adc
push
sbb
sub
mov
adc
mov
dec
sub
xor
je
ja
sub
cli
inc
arpl
sahf
mov
ret
push
fld
loop
stos
adc
mov
add
jg
and
push
pop
sub
mov
mov
scas
scas
(bad)
cmp
arpl
xchg
cwde
adc
aam
push
or
sub
(bad)
addr16
xor
jno
ret
lahf
cli
(bad)
cli
in
add
(bad)
xor
into
int3
scas
cmp
dec
mov
es
daa
ds
xchg
fisubr
imul
mov
in
and
ja
int
xchg
xchg
or
das
and
leave
dec
sar
jo
push
push
sbb
pop
lods
jp
out
ins
add
int
out
rcr
test
es
scas
fst
(bad)
data16
jns
movs
push
bound
std
dec
retf
push
test
dec
std
repnz
ss
add
jbe
lods
add
and
and
adc
push
not
mov
or
push
sub
icebp
scas
push
push
mov
mov
sub
cli
(bad)
jno
dec
inc
xadd
sub
cmp
repnz
xchg
sbb
pop
cmc
xchg
aaa
(bad)
fild
loope
mov
mov
jbe
mov
adc
int
inc
outs
adc
popa
nop
leave
dec
jp
stos
(bad)
jmp
mov
adc
push
movs
dec
lds
cmp
mov
ret
sbb
dec
ins
movs
cmp
jbe
adc
aad
cmp
dec
sub
sub
ins
mov
jb
mov
cmps
je
mov
jne
add
jno
inc
out
or
sbb
inc
sahf
push
dec
sbb
add
xchg
rcl
sbb
cli
les
out
ret
(bad)
adc
jmp
jns
lahf
and
minps
cli
jmp
jp
mov
mov
jno
xor
adc
mov
pop
cmp
add
push
pop
mov
mov
add
(bad)
mov
ins
test
adc
push
(bad)
mov
pop
cld
add
xchg
pop
cmp
stc
ins
enter
sub
inc
add
leave
xchg
xor
dec
add
pop
adc
into
stc
push
push
xchg
add
sbb
sub
jl
xor
in
cmp
sbb
ins
jno
ret
outs
pop
ficomp
or
mov
xor
cmp
sub
jne
(bad)
push
pop
mov
adc
imul
pop
outs
push
out
aam
xor
mov
rcl
sub
fild
xor
jge
jnp
sub
adc
dec
jmp
pop
sub
pop
stos
pop
jp
(bad)
cli
ins
pop
sbb
or
sbb
cmc
push
lea
sub
push
push
inc
sbb
xchg
cli
(bad)
xor
nop
mov
dec
add
xor
ret
fiadd
std
jle
pushf
pop
jno
add
pop
int
sbb
push
pop
cmp
sub
iret
add
(bad)
mov
jl
popa
mov
and
fnstenv
mov
jb
test
rcl
or
(bad)
mov
jl
test
push
(bad)
cmp
pop
cmp
div
sbb
lods
jmp
and
test
je
cmp
lahf
inc
lods
test
pushw
aaa
arpl
stos
add
in
cmp
outs
call
stos
neg
mov
inc
jo
into
ror
scas
sub
out
scas
rol
ss
and
dec
sti
dec
add
shl
mov
or
adc
or
mov
sub
daa
adc
or
mov
pop
sub
in
mov
or
psubusb
addr16
and
mov
cmp
fdivr
icebp
sub
mov
push
ret
xor
push
sub
pop
and
in
and
sbb
xor
jmp
cmp
pusha
pop
icebp
mov
call
arpl
cmp
push
dec
jno
pop
sub
and
ret
jae
je
aas
lahf
add
cmp
jmp
js
xchg
jo
lock
adc
icebp
mov
bound
mov
push
in
int3
add
es
adc
nop
je
and
push
or
jecxz
xor
retf
sub
stc
pusha
xchg
cmp
cmp
int3
xlat
xor
inc
and
add
or
push
repnz
xchg
adc
shl
pop
inc
dec
push
and
(bad)
loope
aad
out
pop
mov
pop
xor
dec
dec
stos
xor
leave
sub
inc
movs
xchg
inc
sub
(bad)
lock
push
dec
sbb
jno
or
and
out
loopne
je
or
mov
inc
int3
sub
push
cmp
adc
movs
aad
jl
test
ins
jecxz
push
popf
shl
and
mov
outs
sub
mov
(bad)
cmp
icebp
leave
mov
fist
ret
arpl
and
addr16
cmp
jns
outs
es
jo
pop
pop
pop
iret
mov
cmps
ja
pop
jae
dec
pop
sbb
adc
scas
test
and
inc
add
sbb
(bad)
xchg
fisubr
mov
pop
lock
add
add
mov
and
add
iret
and
fdivrp
add
hlt
push
aaa
rcr
in
inc
xor
sub
add
or
and
and
and
aam
bound
test
jp
xor
mov
cwde
dec
pop
jo
ds
bound
les
es
mov
loop
ins
ins
lds
addr16
sti
lods
jno
movs
jp
jg
(bad)
out
mov
shl
jle
jle
push
and
(bad)
les
or
inc
in
pop
aad
push
fcmovbe
cmp
jbe
test
fisubr
repnz
popf
push
jmp
sbb
sub
cli
sub
xchg
mov
mov
push
test
ins
aaa
adc
jle
imul
ret
xchg
mov
xor
mov
dec
mov
sub
fs
jno
and
clc
push
jmp
mov
shl
mov
jle
inc
arpl
bound
adc
jge
and
jne
push
lock
das
(bad)
bound
leave
adc
push
mov
out
ins
stos
iret
or
pop
sbb
rcr
lock
cmps
aas
icebp
fld
ror
pop
clc
dec
push
add
call
sub
repz
inc
inc
aas
pop
sar
fdivr
out
test
mov
add
add
sbb
jo
fisttp
sub
jge
shl
and
jp
sub
jl
push
mov
mov
xchg
idiv
retf
sbb
daa
inc
mov
or
fisubr
add
push
push
cdq
imul
outs
sbb
inc
push
push
mov
data16
je
push
rol
adc
add
dec
sub
sahf
(bad)
or
test
and
std
fldcw
pop
push
jmp
shl
mov
ins
mov
jecxz
mov
lods
out
inc
outs
mov
call
add
mov
adc
jp
sub
fidivr
mov
ret
cdq
das
mov
retf
es
sbb
enter
pop
jecxz
cmps
adc
push
sti
or
jl
sub
pushf
mov
shl
inc
ja
loope
and
mov
aam
leave
mov
pusha
es
push
dec
push
inc
lods
shr
cmps
xor
cmp
jno
gs
(bad)
adc
lods
test
out
or
push
xchg
adc
jg
aas
in
sub
cld
pop
fs
movs
xlat
test
fld
mov
pop
sub
sbb
mov
pop
(bad)
leave
dec
pop
push
sbb
pusha
arpl
pmaddwd
aam
sub
inc
(bad)
outs
cmp
aaa
out
cmps
mov
mov
in
or
js
sub
push
cmp
shr
sub
xchg
fcmovb
sub
rol
rcl
ja
sbb
ins
ds
pop
test
mov
mov
cmp
pop
sub
cli
mov
das
ds
sub
xchg
adc
movs
or
jmp
call
ds
(bad)
sub
(bad)
icebp
scas
outs
daa
lock
xor
das
mov
mov
sub
out
out
icebp
and
add
sub
(bad)
push
sbb
and
jg
add
imul
leave
xor
ret
cmp
inc
stc
sar
(bad)
mov
sbb
arpl
inc
ficom
test
sub
stos
sub
arpl
fmul
cmp
lea
and
sbb
cwde
fwait
out
jbe
je
std
xchg
stos
xchg
aam
sub
ficomp
push
and
dec
bound
adc
inc
mov
lods
outs
(bad)
and
mov
pop
ret
pop
xchg
mov
xor
loopne
and
xor
lock
retf
pop
rol
fisubr
loope
repnz
mov
gs
bound
les
aam
pop
inc
mov
xlat
mov
fild
stos
sahf
outs
fmul
sub
push
cmp
stos
es
cmp
mov
xchg
cmp
test
loopne
imul
ror
cmp
leave
movs
mov
dec
in
aad
or
push
inc
inc
inc
ret
sub
lock
rcr
(bad)
and
jg
add
xor
or
pop
and
sbb
mov
(bad)
add
(bad)
aad
push
mov
jns
rcr
add
leave
pop
sub
std
ret
sub
push
cld
aaa
(bad)
mov
retf
xchg
out
mov
dec
mov
shr
sahf
mov
mov
or
dec
cmp
xor
(bad)
dec
mov
dec
mov
rcr
out
jmp
ja
push
cld
rol
cmp
or
aad
dec
stc
data16
pop
mov
sub
mov
mov
pop
pusha
dec
mov
sbb
ja
mov
or
pop
scas
cmp
mov
adc
stos
and
adc
jne
inc
add
xchg
fs
(bad)
gs
xlat
pop
jns
xor
and
mov
adc
scas
or
ins
xchg
es
push
out
mov
in
sub
cwde
into
or
sub
(bad)
push
pop
mov
push
jmp
and
and
xor
sub
daa
jbe
pop
xor
xor
aaa
cmp
xchg
aam
jbe
dec
sub
xor
mov
xor
mov
mov
cli
(bad)
bound
mov
push
mov
data16
and
pop
stos
sub
pop
and
pop
sub
sub
in
loop
or
pop
or
cmps
and
or
mov
inc
fisttp
ins
and
ds
pop
out
mov
ja
pop
sub
sub
ins
(bad)
jne
leave
clc
out
(bad)
xlat
and
pop
xchg
sbb
pop
inc
and
out
out
test
mov
fsub
repnz
inc
push
push
das
sbb
sbb
fwait
add
and
cmps
cmp
adc
leave
sub
jg
adc
cmp
inc
test
dec
pushf
jmp
inc
dec
xor
ret
inc
push
in
addr16
mov
push
out
aad
stos
jp
inc
adc
shrd
add
pop
inc
push
scas
push
ret
dec
int3
out
push
cmps
into
mov
inc
outs
or
aam
shr
arpl
jle
shl
scas
sub
scas
sub
cmps
xor
aad
adc
sub
and
sub
dec
add
fisub
or
gs
push
loop
pop
mov
mov
(bad)
cdq
inc
pop
jns
cmps
jnp
sub
mov
cmp
add
aas
inc
cld
inc
pop
fidivr
dec
shr
leave
mov
adc
jbe
test
mov
push
and
xchg
mov
push
inc
ss
test
lahf
fist
sub
out
jns
sbb
movs
pop
inc
cld
cmp
jae
pop
cmp
nop
movs
bound
je
ss
(bad)
dec
nop
call
xchg
xor
sub
test
inc
mov
cmps
and
into
sar
jecxz
addr16
les
push
or
push
movs
popf
or
sar
neg
jbe
cwde
xchg
xor
cli
aad
shr
cmp
mov
push
neg
cmps
and
mov
cmp
pop
idiv
mov
pusha
pop
outs
aas
xchg
sub
pusha
sub
xchg
fiadd
sub
cmp
popf
inc
xchg
and
pop
xor
jmp
sbb
jmp
mov
clc
ds
es
mov
push
dec
sub
sub
out
in
add
clc
ds
jae
pushf
jb
scas
ds
iret
adc
push
add
or
mov
cmps
ror
adc
cld
pop
clc
jmp
inc
pop
xor
mov
cmp
test
sub
inc
fwait
nop
cmps
push
jmp
pop
dec
popf
dec
xor
int3
mov
cmp
dec
and
out
jno
cwde
ret
(bad)
dec
pop
sub
inc
lds
aam
or
mov
rol
fwait
scas
mov
mov
jl
add
addr16
add
xchg
dec
fidivr
es
pop
mov
cmps
push
mov
pusha
xchg
inc
in
xor
daa
std
and
dec
mov
rcl
inc
in
or
push
mov
pushf
or
dec
mov
cwde
mov
aam
in
cdq
mov
sbb
xchg
push
les
test
and
sub
xor
jle
mov
(bad)
dec
jnp
div
or
aaa
ja
movs
inc
adc
(bad)
lea
push
and
jo
into
push
cli
aam
xor
ins
cmp
repnz
push
outs
pop
(bad)
retf
jge
repz
jge
add
daa
fs
jne
arpl
sbb
push
test
mov
add
pop
jl
xlat
xchg
cld
adc
daa
cmp
mov
leave
add
dec
loopne
test
(bad)
test
ins
and
xor
out
(bad)
mov
xor
dec
jmp
xlat
fistp
stos
inc
xchg
sti
aad
mov
pop
or
call
(bad)
push
leave
inc
add
mov
xchg
or
pop
sub
mov
jae
push
add
sbb
stos
fwait
jg
or
leave
add
pop
jmp
fsubr
xor
pop
imul
aaa
sbb
je
xchg
rol
adc
add
call
bound
sub
ds
and
aaa
sub
outs
cmp
push
push
and
or
out
jbe
sub
xor
lods
test
dec
sub
call
(bad)
dec
sbb
dec
mov
mov
mov
stos
push
sbb
add
stos
data16
lds
out
mov
inc
adc
sub
test
lods
xor
adc
xchg
or
data16
cmp
lahf
pusha
cmp
hlt
sub
or
sub
shr
xlat
add
lock
pushaw
adc
add
aam
cmp
sar
leave
loope
dec
iret
lock
mov
into
pop
push
inc
dec
xor
jmp
ja
add
dec
popf
pop
int
repnz
es
into
cmp
sub
loop
aaa
adc
jb
cli
or
outs
arpl
mov
fild
ss
push
xor
test
jae
or
add
push
jns
push
int3
shr
dec
fdiv
push
fisub
fld
sbb
inc
enter
arpl
shl
xchg
repnz
js
jb
inc
imul
adc
sbb
adc
(bad)
aas
mov
fcom
pop
ret
leave
or
push
jbe
cmp
mov
jle
mov
xchg
scas
js
xchg
xor
outs
mov
test
jle
repnz
(bad)
jmp
(bad)
call
fmul
mov
ret
xchg
out
ss
xchg
mov
sbb
fbstp
(bad)
loope
leave
sub
lods
mov
ds
(bad)
push
jecxz
mov
sub
push
sub
iret
hlt
outs
imul
mov
sbb
push
sub
and
pusha
loopne
shr
popa
cld
in
into
adc
test
adc
bnd
pop
(bad)
aaa
aam
enter
lea
jnp
scas
out
into
cmp
mov
test
out
nop
pop
js
sar
sti
lea
jnp
jnp
dec
inc
push
lock
aaa
lods
cmp
ja
mov
mov
ja
scas
inc
xchg
mov
mov
popf
repnz
nop
push
(bad)
pop
(bad)
jle
xchg
xchg
xchg
cmp
fidivr
jg
std
cwde
div
push
adc
pop
jle
clc
movs
adc
rol
jo
idiv
mov
cmps
bound
jmp
adc
ds
inc
jnp
and
retf
ins
gs
jmp
and
aam
sub
jmp
and
mov
aam
icebp
outs
in
inc
or
aas
jle
dec
push
or
outs
pop
mov
dec
ror
ret
fcomi
rcl
in
jge
sti
cmp
adc
nop
into
sar
push
adc
arpl
and
cmp
inc
outs
ret
cdq
push
xchg
adc
xchg
pop
(bad)
and
sbb
rcl
bswap
cmc
xor
outs
dec
mov
into
sub
xor
retf
(bad)
or
and
daa
adc
jmp
in
stc
mov
add
cmp
imul
pop
test
or
xchg
out
xchg
jmp
outs
xchg
jmp
std
sub
push
ja
int
push
adc
and
fs
and
sbb
mov
inc
daa
cmc
mov
shl
mov
dec
mov
dec
push
fbstp
imul
push
mov
ja
rcl
icebp
cmp
repz
outs
add
sbb
lea
dec
xor
mov
xchg
(bad)
in
cld
and
mov
dec
cmps
xchg
or
xor
sub
fcom
mov
jo
jmp
(bad)
js
or
mov
fwait
rol
cmp
sub
or
jle
imul
scas
es
test
daa
cli
leave
cmp
test
sbb
pop
fs
movs
sbb
aam
jecxz
jg
jge
sub
push
enter
inc
sub
fisub
jle
je
xchg
jmp
ja
xchg
jne
lds
add
fidivr
ret
xchg
push
jmp
lods
aas
mov
push
data16
add
jle
pop
adc
mov
sbb
pop
xchg
test
push
sub
or
push
sub
dec
or
pusha
jns
dec
xor
dec
mov
popf
hlt
ja
loope
adc
(bad)
out
out
ret
outs
push
or
jmp
jge
cmp
add
(bad)
push
pop
xor
lds
cmp
xchg
imul
xor
xchg
icebp
fwait
inc
(bad)
int3
or
xchg
cmp
icebp
sbb
cmp
movs
mov
js
inc
lahf
cs
aad
(bad)
cmc
stc
mov
and
pop
sub
sub
rcl
and
pop
pop
or
cmp
jae
sti
jle
jl
dec
nop
mov
pop
add
xor
and
push
mov
(bad)
xor
sbb
or
sub
sbb
jno
push
xor
int3
ret
les
into
mov
mov
leave
xor
push
push
cdq
rcr
pusha
cmp
sub
add
lea
enter
mov
sbb
jp
inc
sbb
and
fdivr
xor
sbb
popf
dec
js
add
rcl
add
xor
aas
cmps
in
or
xchg
mov
cmp
in
jl
sbb
mov
jno
aaa
(bad)
stos
xor
test
sbb
mov
into
scas
(bad)
cli
xchg
jo
xor
je
lahf
pop
jmp
push
sub
das
sub
jle
popa
xor
lods
pop
sbb
xor
scas
sti
pop
or
jmp
add
push
push
fidivr
stos
sbb
push
xchg
pop
adc
stos
push
sub
xor
popf
lea
jno
ret
xchg
push
movs
scas
push
popa
push
fistp
jnp
cmc
jbe
out
mov
sti
push
push
jp
jo
add
xor
neg
cli
sbb
mov
dec
sub
jnp
pop
or
mov
fild
aaa
push
imul
cmps
push
fldcw
cwde
in
test
rcl
adc
out
cmp
jge
retf
retf
stc
imul
aad
cmc
push
mov
cmp
fdiv
cli
(bad)
out
and
test
xchg
lock
sub
mov
add
(bad)
(bad)
mov
scas
ins
jo
push
xor
xor
out
pop
adc
mov
and
test
(bad)
mov
call
pop
call
(bad)
and
sub
sti
adc
lods
retf
shl
xor
jmp
and
or
push
je
test
scas
or
das
inc
mov
add
je
imul
rcl
jnp
jl
imul
and
add
(bad)
and
jecxz
xor
movs
push
push
outs
sbb
mov
jge
hlt
cmp
iret
jae
or
sbb
test
sub
xor
jmp
popa
inc
in
dec
call
(bad)
pop
rol
inc
add
das
add
jmp
fbld
push
cmp
pmaxub
pop
call
sahf
sbb
(bad)
jmp
xchg
loopne
arpl
and
pop
int3
outs
cld
push
mov
ins
sbb
inc
loopne
inc
push
ret
jno
dec
sub
fcmovnu
ret
lock
hlt
push
push
in
sub
pusha
lahf
call
scas
sahf
out
leave
and
cld
jo
retf
sbb
loop
icebp
adc
xor
xor
pop
inc
addr16
loopne
inc
jb
fldcw
and
or
add
mov
dec
and
mov
pop
mov
lea
xor
jb
(bad)
test
jnp
jae
in
jmp
mov
inc
push
and
fsubrp
sub
stos
stos
ins
data16
adc
mov
jbe
inc
adc
xchg
push
aas
lods
leave
add
push
sbb
and
push
push
sub
cdq
or
and
mov
adc
test
jns
aaa
inc
inc
es
ins
shl
jle
xor
lds
test
ds
adc
adc
out
retf
es
lods
lods
fld
push
xor
push
ret
sub
adc
and
ins
stos
and
inc
(bad)
adc
cmps
aas
mov
xchg
fidivr
jo
cli
cmp
test
out
push
cmp
jmp
mov
inc
or
data16
scas
mov
mov
(bad)
push
mov
cmps
fist
or
adc
xchg
out
(bad)
adc
shl
pushf
jo
or
mov
cdq
stos
mov
add
rcl
addr16
sub
fisubr
inc
dec
stos
push
jb
ror
sub
out
aaa
jb
sar
cmps
stos
jo
call
cmp
pop
es
jb
mov
aas
push
aam
sahf
dec
aas
leave
rcl
ja
mov
aaa
movs
test
and
mov
mov
retf
xchg
or
es
push
or
push
jp
mov
xor
fidivr
xchg
inc
xchg
adc
outs
dec
sbb
adc
es
push
shr
mov
dec
push
retf
call
ror
push
shl
leave
xchg
sbb
repnz
pop
and
push
xchg
ficom
mov
cmp
and
out
ds
es
cmps
js
out
stos
jo
ret
hlt
(bad)
fisub
ror
and
imul
popa
or
xor
outs
aad
cmp
es
out
jg
push
push
adc
cmp
es
lods
jo
adc
xor
out
xor
xchg
pop
jmp
cmc
dec
inc
imul
lea
and
and
inc
pop
and
stos
imul
ds
push
push
and
ds
aad
loop
out
add
imul
shr
arpl
cmp
dec
push
shl
(bad)
fcmovnb
ret
jp
cmps
lods
call
or
xchg
pop
add
mov
add
repnz
ret
fwait
cmps
repnz
test
and
cmp
repz
outs
aaa
push
cmp
in
push
mov
loop
or
es
add
add
cwde
outs
push
fcomp
mov
push
mov
(bad)
and
mov
daa
stos
leave
jle
ins
push
pushf
sbb
inc
or
sbb
aaa
stos
sub
pop
imul
es
jnp
or
shl
retf
outs
sbb
xor
movs
jnp
or
mov
retf
sub
push
(bad)
push
loop
push
fisub
pop
stos
int
push
jge
push
clc
add
call
and
mov
test
jb
scas
jbe
ins
test
dec
or
call
inc
ds
mov
adc
outs
pop
imul
int3
dec
mov
stc
lods
or
jle
add
mov
ret
xchg
or
jle
ins
mov
or
jle
push
ds
jb
stc
pop
add
leave
mov
push
pop
call
jo
mov
dec
(bad)
pop
xchg
(bad)
test
push
ds
shl
push
movs
xor
leave
mov
xchg
out
adc
sub
jmp
mov
mov
pop
and
or
shl
xor
jbe
repz
xor
es
data16
mov
es
(bad)
aam
pop
jmp
push
push
and
mov
jmp
xor
cli
inc
adc
(bad)
jns
(bad)
push
ins
fidivr
cmc
mul
es
sub
push
add
ins
or
push
mov
adc
fisub
popf
push
pop
mov
inc
jle
ins
push
stos
or
cmps
(bad)
aam
pop
push
adc
imul
popa
jp
adc
push
shr
adc
sbb
mov
fsubrp
push
push
ds
stos
icebp
cld
or
push
sub
pop
data16
or
push
lds
cld
cmp
scas
out
ins
in
pop
sub
arpl
jmp
cmp
push
movs
lods
pop
mov
push
mov
ss
or
pop
stos
add
sub
jg
cmp
out
push
adc
cmp
sbb
sbb
jp
cmp
cmp
mov
jmp
stos
imul
sbb
shr
adc
push
and
popf
and
imul
dec
outs
push
adc
cmp
adc
xchg
or
imul
and
mov
cmp
sub
lods
jle
and
outs
(bad)
adc
or
lods
jbe
cmps
or
mov
cmp
pop
cmp
mov
mov
jo
test
cmp
outs
out
push
data16
pop
cmps
mul
test
ja
outs
cli
test
cs
pusha
dec
sahf
scas
in
xchg
es
push
mov
push
cmps
sbb
and
adc
mov
dec
(bad)
dec
lock
sub
jb
out
sti
pusha
scas
adc
inc
shl
mov
push
push
pop
inc
jno
(bad)
push
mov
xchg
push
push
and
and
cwde
mov
inc
test
cdq
jle
cmp
stos
jo
adc
imul
mov
pop
dec
pop
jae
sub
sub
cmp
adc
ds
jl
ins
inc
ins
rcr
pop
push
sahf
sbb
cmp
outs
inc
es
jno
leave
sub
lock
jl
cs
mov
pusha
mov
mov
mov
lea
jmp
xor
push
jmp
mov
pushf
mov
mov
push
push
mov
lea
jmp
mov
push
daa
test
pop
push
dec
add
jb
push
cwde
pusha
xchg
bound
pop
test
adc
les
jbe
push
jp
retf
inc
out
ss
inc
cld
cli
or
jae
xor
xor
or
stc
add
add
cmc
out
adc
fnstcw
pop
push
sub
mov
rcl
call
mov
nop
aas
add
sti
sub
rcl
lds
(bad)
or
fidiv
adc
sbb
ret
xor
add
daa
push
sti
mov
lahf
ror
lock
cmp
call
in
ins
test
repnz
cld
lock
in
rcr
adc
out
pushf
mov
out
adc
test
push
jl
or
sbb
cmc
mov
jmp
mov
call
pusha
inc
pushf
rol
call
mov
push
pushf
lea
jmp
push
repz
pop
jmp
bt
rol
cmp
sub
bt
mov
cmp
sub
pushf
mov
pushf
mov
push
mov
pushf
pushf
lea
jmp
call
bts
cmp
call
pushf
call
jmp
mov
jmp
pusha
push
mov
pusha
mov
mov
push
lea
jmp
sub
pusha
jmp
cmp
movzx
not
xor
sub
shrd
bswap
dec
movzx
neg
stc
sub
mov
call
pushf
not
call
push
jmp
mov
jmp
push
pop
push
pushf
lea
jmp
mov
btc
cmp
not
mov
push
push
clc
sub
call
push
call
rcl
mov
call
mov
push
push
mov
push
lea
jmp
mov
mov
mov
pushf
mov
call
push
popf
mov
mov
lea
jmp
aam
bsf
rdtsc
jmp
mov
add
pusha
mov
push
mov
mov
pushf
lea
jmp
bt
call
mov
pushf
lea
jmp
pushf
pop
jmp
push
test
pushf
sub
test
jmp
jmp
pushf
pop
mov
mov
push
jmp
mov
pushf
lea
jmp
pushf
rol
clc
jmp
sbb
stc
neg
call
sub
bt
imul
pusha
push
mov
call
mov
push
lea
jmp
jmp
call
cmc
sub
call
movzx
movsx
mov
pusha
mov
bt
mov
ror
pushf
pushf
push
pushf
mov
mov
push
ret
adc
mov
lea
clc
adc
ror
mov
bt
add
call
cbw
mov
clc
das
xor
rcl
mov
stc
push
test
mov
sub
pushf
clc
bt
jmp
mov
neg
xor
pusha
mov
pushf
clc
cmc
add
call
mov
mov
mov
pushf
push
mov
lea
jmp
pushf
push
lea
push
call
lahf
mov
aas
bsr
not
test
shr
sub
mov
cmp
clc
jae
sub
cmc
and
call
push
pop
mov
mov
mov
lea
jmp
push
call
jmp
mov
mov
mov
pushf
mov
mov
push
lea
jmp
push
pop
pushf
mov
lea
jmp
mov
jmp
sar
bsr
mov
dec
mov
pushf
push
push
test
add
pushf
push
mov
pusha
pushf
mov
lea
jmp
bt
mov
push
stc
add
pusha
sub
push
mov
mov
lea
jmp
add
add
stc
stc
not
bt
clc
cmc
not
test
sub
push
clc
pushf
mov
and
pusha
mov
call
mov
pushf
pop
call
clc
pusha
add
jmp
push
push
pushf
pop
push
jmp
pushf
pusha
pushf
repz
pop
pushf
call
stc
sub
push
neg
mov
pushf
mov
cmp
sub
jmp
shl
bsf
sar
mov
jp
mov
jmp
mov
pusha
pushf
pushf
lea
jmp
push
pop
pusha
push
mov
pushf
lea
jmp
call
mov
pushf
pop
pushf
pushf
jmp
pushf
pushf
call
pushf
pop
push
call
pusha
pushf
pushf
pop
pushf
jmp
pushf
mov
push
lea
jmp
mov
pushf
call
cmp
stc
sub
push
cmc
test
and
jmp
cmc
test
clc
cmp
sub
pusha
cmc
add
jmp
not
mov
mov
call
cmc
mul
push
mov
pusha
call
mov
mov
push
lea
jmp
push
pop
push
mov
mov
lea
jmp
rcl
clc
mov
cmp
test
test
sub
cmp
shr
pushf
push
pusha
mov
call
pusha
repz
pop
mov
push
mov
jmp
pusha
repz
pop
pushf
push
mov
mov
call
push
push
and
pushf
lea
jl
push
pusha
mov
pusha
call
pusha
movsx
lea
movzx
mov
call
jmp
mov
mov
pushf
pushf
mov
mov
mov
jmp
jmp
ror
bswap
pusha
inc
inc
add
ror
xor
adc
add
shl
test
mov
jmp
lea
push
pusha
pushf
call
call
shr
mov
rol
bt
sbb
add
pusha
not
push
mov
push
call
sub
call
push
mov
pushf
mov
jmp
call
call
repz
jmp
push
mov
call
pusha
cmc
xor
pusha
push
bt
xchg
jmp
push
xchg
xchg
std
bswap
mov
pusha
lea
jmp
pop
push
mov
lea
jmp
xchg
mov
mov
movsx
sete
mov
pushf
pusha
div
pushf
mov
push
mov
mov
mov
push
pushf
pop
push
mov
call
push
pusha
pushf
mov
push
mov
lea
jmp
repz
pushf
mov
pushf
call
pusha
mov
push
pushf
mov
lea
jmp
mov
call
pusha
push
mov
push
push
lea
jmp
cmc
jmp
push
push
lea
jmp
cdq
xchg
jmp
mov
mov
pusha
mov
jmp
cld
mov
rep
btc
shrd
bsf
not
mov
test
movsx
mov
cmc
jmp
test
mov
call
ror
mov
dec
rcl
mov
pushf
cmc
pushf
call
pusha
call
jmp
jmp
jmp
call
call
sub
call
push
pop
mov
mov
mov
mov
lea
jmp
clc
bt
xor
mov
inc
call
xchg
mov
mov
push
mov
mov
pushf
push
ret
mov
test
shl
push
call
call
repz
pop
pusha
pusha
pushf
mov
push
mov
pushf
mov
push
call
push
pop
mov
mov
lea
jmp
pusha
repz
pop
call
jmp
pushf
div
push
jmp
push
mov
sub
cmp
bt
bt
call
mov
mov
mov
pushf
pusha
call
mov
jmp
pushf
pop
lea
js
push
pushf
pusha
push
pop
pushf
pushf
mov
lea
jmp
setge
mov
sub
xor
setnp
not
pusha
inc
btc
not
call
mov
mov
pushf
pop
pushf
push
pop
mov
push
push
push
lea
jmp
mov
pusha
pushf
call
mov
call
pushf
inc
call
call
jmp
sub
jmp
shr
aam
aaa
mov
call
shr
aaa
daa
mov
jmp
lea
jg
pushf
jmp
mov
mov
pusha
pushf
pop
mov
mov
push
pop
pushf
lea
jmp
call
mov
mov
pushf
pushf
pop
pushf
push
pop
mov
push
push
pushf
lea
jmp
push
shrd
or
mov
bsf
sub
bsf
bsr
mov
sub
jno
cmc
mov
jmp
push
pushf
push
mov
jmp
add
bsr
bt
mov
ror
not
neg
mov
push
pushf
not
mov
lea
je
cmp
not
push
jmp
call
pusha
btc
jmp
jmp
clc
sub
mov
lea
jmp
cmc
sar
rcr
neg
mov
push
cmp
sub
push
jmp
test
sub
jmp
jmp
jmp
pusha
cld
mov
mov
push
push
lea
mov
std
cld
jmp
call
bsr
mov
cmc
pushf
clc
cmp
add
pusha
push
mov
mov
pushf
push
lea
jmp
pushf
pushf
mov
call
pushf
mov
jmp
mov
push
push
mov
pushf
pop
mov
push
push
pop
mov
mov
mov
mov
lea
jmp
pusha
repz
pop
push
mov
jmp
stc
jmp
xadd
shrd
test
mov
bswap
pop
adc
rdtsc
bsf
pop
sub
xadd
pushf
rcl
mov
bswap
mov
bswap
sbb
mov
rol
mov
xchg
std
not
mov
dec
mov
rcr
dec
xadd
mov
std
mov
clc
clc
jmp
push
pop
mov
push
pushf
mov
lea
jmp
mov
mov
lea
jmp
call
push
jmp
add
jmp
pushf
lea
push
pusha
mov
mov
pusha
mov
mov
mov
lea
jmp
mov
pushf
mov
mov
mov
lea
jmp
shr
bsf
shrd
mov
stc
call
stc
mov
add
pusha
mov
lea
jmp
rol
das
shl
lea
pushf
pushf
clc
mov
cmp
mov
call
push
push
pop
mov
pushf
lea
jmp
bsf
and
mov
bt
and
not
mov
or
sbb
shl
call
call
mov
mov
lea
jmp
mov
jmp
pusha
repz
pop
push
mov
mov
mov
push
pushf
mov
pushf
push
lea
push
push
pushf
mov
mov
pusha
lea
jmp
mov
pusha
lea
jnp
push
lea
push
jmp
xchg
aaa
xadd
bswap
mov
stc
mov
stc
test
bt
add
push
mov
pushf
push
lea
jmp
movsx
not
mov
pushf
jmp
pushf
mov
mov
mov
pushf
push
pushf
push
push
ret
mov
movzx
mov
pushf
idiv
call
pushf
stc
pushf
push
pop
pusha
pushf
cmc
add
cmp
push
popf
push
push
mov
lea
jmp
call
push
lea
push
call
pushf
mov
pushf
push
mov
pushf
lea
jmp
call
mov
jmp
mov
add
bsr
sar
add
ror
mov
cmc
xor
and
shr
neg
movsx
movsx
inc
bsr
push
movsx
shrd
sub
cmc
push
rol
test
not
xor
cmc
rol
jmp
pushf
call
push
push
push
pop
push
lea
jmp
pushf
mov
pushf
pusha
jmp
push
mov
pushf
pop
push
call
mul
push
pusha
pushf
mov
pushf
pushf
push
mov
push
mov
call
rcr
or
rol
shrd
mov
sar
mov
cmp
bt
add
pushf
call
mov
shl
mov
call
bt
push
mov
jmp
mov
jmp
and
mov
push
sub
jmp
stc
sub
bt
shr
pushf
pusha
mov
pushf
call
cwde
rdtsc
sar
mov
cwde
test
stc
aad
mov
cmc
cmp
sub
bt
clc
imul
push
mov
mov
push
mov
call
jmp
bswap
mov
shl
setb
mov
jmp
push
mov
call
mov
cmc
test
jmp
bsr
jmp
setno
cmc
mov
cmp
xor
push
pushf
inc
push
pushf
stc
test
add
jmp
sub
inc
setb
movzx
bswap
mov
jmp
pusha
jmp
bsf
mov
shr
not
mov
call
pushf
call
lea
je
push
mov
push
mov
pushf
push
ret
call
pushf
mov
lea
jne
pushf
stc
cmp
xor
pusha
call
push
pop
pushf
push
lea
jmp
jmp
jmp
pusha
mov
and
stc
cmp
lea
jle
push
lea
jne
bsf
xor
setb
jmp
dec
mov
or
sub
mov
test
pushf
sub
test
call
push
mov
call
jmp
push
call
push
dec
mov
lea
jne
jmp
lea
push
pusha
push
call
push
call
push
pop
pushf
push
lea
jmp
lea
push
pusha
jmp
xor
stc
push
clc
sub
call
call
mov
mov
lea
jne
push
mov
push
pushf
pusha
push
ret
call
pushf
jmp
stc
mov
bts
sbb
jmp
btc
ror
pusha
movzx
not
btr
shl
xor
push
not
not
pusha
inc
movzx
ror
sets
bt
rol
pop
add
adc
call
btr
pusha
pop
mov
pushf
add
pushf
pushf
call
dec
clc
cmp
xor
jmp
mov
push
pop
pushf
push
push
push
lea
jmp
cmp
pushf
jmp
stc
cmp
bt
sub
bt
clc
shl
pushf
pushf
jmp
pop
pusha
lea
jmp
pushf
pop
call
push
test
add
mov
call
sub
add
sub
add
add
add
inc
clc
sub
add
imul
add
stc
sub
(bad)
cli
sub
add
sub
inc
(bad)
sub
pusha
std
sub
mov
sti
sub
jle
sub
add
add
imul
sub
add
sub
xor
sub
int
sub
cwde
imul
test
sub
sbb
sub
gs
sub
jle
sub
and
sub
(bad)
cli
sub
and
or
and
add
sub
aas
cmc
sub
or
sub
sub
add
sub
add
pop
sub
add
sub
or
sub
add
sub
or
adc
add
dec
cld
sub
and
sub
and
sub
add
pop
sub
cmp
add
add
add
add
sbb
sub
dec
stc
sub
add
add
adc
std
sub
dec
cli
sub
add
cld
sub
sbb
sub
adc
imul
mov
add
add
sub
add
add
imul
sbb
sub
adc
add
or
(bad)
cli
sub
add
sub
add
add
adc
add
sbb
sub
or
sub
gs
sub
pusha
std
sub
add
cld
sub
xor
sub
(bad)
cli
sub
leave
imul
and
sub
mov
push
sub
pusha
std
sub
dec
cli
sub
add
sub
inc
sti
sub
add
cli
sub
pusha
std
sub
pusha
std
sub
add
push
sub
add
add
cld
sub
mov
cld
sub
or
sub
add
cli
sub
out
cld
sub
jg
sub
add
stc
sub
adc
sub
or
sub
dec
stc
sub
inc
cli
sub
and
add
std
sub
leave
imul
add
sub
jg
sub
add
sub
mov
cli
sub
cmp
or
fiadd
sub
inc
clc
sub
sbb
sub
add
sub
xor
sub
xchg
sub
dec
(bad)
sub
inc
cli
sub
inc
(bad)
sub
add
sub
(bad)
sub
int
sub
add
sub
add
add
(bad)
cli
sub
mov
imul
mov
cli
sub
aas
cmc
sub
add
sub
add
stc
sub
inc
(bad)
sub
out
sub
mov
std
sub
cwde
imul
add
sub
inc
std
sub
add
sub
add
sub
cmp
sub
sbb
sub
cmp
or
sub
adc
sub
or
sub
adc
(bad)
sub
sub
add
sub
sub
sub
add
imul
add
sub
add
cld
sub
xor
sub
add
cld
sub
add
imul
adc
cld
sub
mov
add
sub
add
(bad)
sub
aas
cmc
sub
or
sub
add
cmp
add
sub
enter
call
pusha
stc
cmc
xor
call
mov
mov
pushf
mov
mov
lea
push
pushf
pushf
pusha
mov
pushf
lea
jmp
pushf
pop
pushf
mov
mov
push
push
pop
pushf
pushf
push
pushf
lea
jmp
mov
mov
pusha
mov
mov
lea
jmp
bsf
shr
mov
cmc
and
add
push
mov
pusha
pusha
push
call
sar
bsf
movsx
mov
adc
sub
stc
shr
add
and
xor
rol
cmp
push
mov
stc
shl
cmp
push
shr
pushf
clc
or
call
push
mov
push
pusha
pushf
mov
push
pushf
push
ret
pushf
pop
mov
pusha
pushf
push
pop
push
pushf
lea
jmp
push
pushf
mov
pusha
mov
push
lea
push
call
xchg
bsr
btr
and
sbb
mov
stc
jmp
call
clc
add
test
pushf
shld
push
pusha
call
mov
jmp
setb
pop
pushf
pushf
push
lea
jmp
cmp
mov
cmc
not
call
clc
pushf
add
jae
sub
call
mov
mov
pusha
mov
call
mov
pushf
jmp
bts
movzx
adc
sub
inc
bts
xor
bts
neg
sub
and
sub
bswap
sub
jl
inc
pushf
mov
inc
bt
rol
bt
bsr
bts
sub
adc
inc
sbb
mov
mov
pushf
bt
bt
add
pusha
call
pushf
pop
push
push
pusha
push
pop
pushf
lea
jmp
stc
add
mov
cmc
jmp
mov
pushf
call
stc
neg
mov
cmc
call
call
call
not
lea
pusha
mov
push
pushf
pushf
lea
jmp
jmp
jmp
lea
push
push
mov
push
call
call
mov
pusha
jmp
lea
push
pushf
push
jmp
inc
mov
clc
rcr
jmp
pushf
pop
jmp
jmp
push
mov
push
call
pop
push
lea
jmp
mov
jmp
pushf
pushf
lea
jne
neg
mov
inc
bsr
xor
jmp
aad
mov
pusha
clc
cmc
test
sub
pushf
pusha
pushf
mov
mov
push
lea
jmp
pushf
pusha
repz
pop
jmp
jmp
add
cmp
mov
xor
mov
pushf
call
jmp
jmp
mov
call
pushf
call
lea
je
pushf
sub
jb
bt
xor
jmp
lea
mov
pusha
mov
jmp
mov
push
pushf
pop
pushf
std
pop
jmp
mov
push
push
pushf
lea
jmp
sub
pushf
push
call
pusha
mov
repz
pop
push
pushf
pusha
push
mov
pushf
mov
push
mov
push
mov
call
lea
jo
pushf
push
push
pop
mov
lea
jmp
mov
mov
push
push
mov
pushf
pusha
push
call
pushf
mov
lea
jle
push
mov
push
pushf
pusha
mov
lea
jmp
push
push
pop
pusha
mov
lea
jmp
call
call
mov
pushf
mov
pushf
mov
lea
jmp
call
aaa
call
neg
dec
pusha
mov
pop
mov
shr
rcr
sbb
shr
mov
pushf
add
stc
shrd
jmp
mov
mov
lea
jmp
call
btr
and
mov
shl
rcl
mov
inc
mov
cmc
add
pushf
pusha
jmp
aad
bsr
mov
stc
add
pushf
mov
push
mov
mov
pushf
pushf
push
pusha
mov
pushf
push
lea
jmp
xor
pushf
sub
call
bswap
push
ror
push
bt
cmc
cmc
xor
cmp
mov
push
test
sub
pushf
pushf
mov
mov
pusha
push
mov
lea
jmp
pushf
div
pusha
mov
jmp
inc
stc
cmc
cbw
bt
cwde
stc
cmp
sub
jmp
mov
call
pushf
push
mov
mov
push
pusha
lea
jmp
inc
stc
call
push
mov
mov
test
sub
jns
clc
sub
clc
add
push
pusha
jmp
sar
or
mov
bsf
sbb
add
pusha
rcl
xor
bswap
inc
rol
pop
clc
stc
ror
setl
add
and
clc
dec
cmp
xor
add
bt
mov
bt
sub
call
jmp
pusha
bt
and
mov
clc
rcr
stc
rol
mov
mov
clc
clc
sub
jmp
xor
mov
sub
cmc
test
cmc
mov
jmp
mov
shr
call
sub
pushf
mov
pusha
pushf
mov
lea
jmp
pushf
mov
lea
push
push
pusha
push
call
mov
mov
jmp
mov
call
pushf
pusha
neg
lea
jbe
inc
test
jmp
test
sub
jmp
push
test
sub
push
push
pusha
mov
pushf
mov
lea
jmp
mov
push
jmp
call
dec
test
cmp
mov
xor
call
pusha
clc
cwde
call
bt
shl
shld
mov
pushf
call
rcr
btc
movsx
setae
movzx
clc
call
call
mov
pusha
pushf
pushf
pushf
pushf
pop
pushf
call
push
inc
push
rol
bt
add
jmp
bt
pusha
add
jmp
push
mov
call
jmp
push
pushf
pop
jmp
bt
btr
rol
shr
cmp
shld
sub
ror
mov
bts
mov
mov
bt
add
push
jmp
pushf
pop
jmp
stc
neg
jmp
mov
cmc
sub
call
pusha
repz
pop
jmp
bts
jmp
bts
bsf
xor
shld
movzx
add
aas
lea
mov
bt
sub
bt
mov
bt
clc
or
call
mov
push
pushf
lea
jmp
jmp
pusha
mov
pushf
pop
pushf
mov
push
push
pop
pushf
pushf
mov
mov
lea
jmp
cmp
pushf
test
and
jmp
cmc
add
pushf
push
jmp
mov
jmp
jmp
mov
pusha
pushf
push
lea
jmp
bt
dec
add
mov
bt
cmc
stc
pusha
xor
pusha
jmp
call
mov
daa
mov
jmp
pusha
push
pushf
mov
pushf
mov
push
lea
jmp
bt
mov
pushf
mov
cmp
clc
cmc
sub
push
push
mov
lea
jne
stc
test
xor
pusha
push
xchg
jmp
jmp
pushf
pop
pushf
push
call
mov
mov
pusha
push
push
lea
jmp
pusha
mov
pushf
lea
call
jmp
pushf
pop
pushf
mov
jmp
push
pushf
pushf
lea
jmp
pushf
call
push
pop
mov
lea
jmp
shr
not
aad
mov
sar
dec
mov
pusha
stc
mov
sub
jmp
mov
jmp
cmc
stc
mov
btc
lea
push
xor
push
dec
pusha
add
not
mov
xor
mov
adc
mov
rcl
clc
setnp
add
push
pop
test
pusha
bsr
push
mov
pushf
mov
cmp
neg
not
dec
bt
shl
xor
and
neg
rcl
lea
rol
sub
sub
dec
cmc
rcr
rcl
mov
jmp
pushf
clc
clc
add
push
lea
jmp
call
setnp
mov
inc
jmp
mov
mov
lea
jmp
jmp
mov
pusha
pusha
lea
jmp
mov
pusha
pushf
lea
jmp
push
mov
mov
lea
jmp
pushf
pusha
mov
mov
pushf
push
lea
jmp
mov
mov
lea
jmp
jmp
call
push
lea
ja
sbb
sar
mov
das
lea
shr
sub
inc
test
test
lea
and
neg
and
bswap
test
sub
not
bswap
call
mov
pusha
pushf
pushf
lea
jmp
push
pop
push
mov
lea
jmp
pushf
mov
mov
mov
mov
mov
lea
jmp
xchg
call
jmp
clc
push
stc
xor
mov
sub
lea
jno
not
push
dec
jmp
pushf
pushf
pop
mov
push
pop
pushf
mov
lea
jmp
mov
mov
jmp
push
mov
pusha
lea
jmp
btr
not
mov
stc
add
pusha
pushf
pop
jmp
mov
call
mov
lea
jne
bsr
mov
jmp
movsx
push
sete
mov
push
push
lea
cpuid
test
jmp
mov
pushf
pusha
pusha
pushf
lea
jmp
pusha
mov
push
mov
mov
mov
lea
jbe
pusha
pusha
lea
push
call
movsx
call
cmp
clc
sub
pusha
pusha
stc
imul
pushf
mov
mov
call
push
popf
pushf
push
pushf
push
push
ret
jmp
call
add
dec
add
add
pop
add
add
gs
add
outs
xlat
add
and
add
pusha
movs
add
pop
rol
add
repnz
sbb
add
dec
repz
jbe
add
cdq
repz
mov
repz
or
add
fs
add
mov
add
shl
add
clc
hlt
add
dec
cmc
add
mov
add
mov
cmc
add
sbb
add
dec
test
mov
test
or
add
cmp
add
mov
add
shl
add
clc
test
add
stc
add
cmp
add
stc
add
sbb
add
dec
cli
add
js
add
test
add
(bad)
add
nop
sti
add
in
sti
add
cmp
add
imul
add
cld
add
call
std
add
push
std
add
cmp
add
std
add
aaa
inc
add
inc
add
add
jnp
add
loope
add
rol
add
add
add
add
add
add
cmp
push
add
push
