add
push
push
mov
call
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
push
mov
call
push
push
push
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
push
push
jne
push
push
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
mov
push
call
mov
mov
movzx
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
push
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
call
in
sub
lea
push
push
push
push
call
mov
dec
dec
je
sub
je
sub
je
call
mov
call
call
push
push
push
push
call
jmp
movzx
sub
je
dec
je
push
push
push
jmp
push
call
jmp
mov
push
push
call
mov
call
mov
jmp
push
lea
push
push
push
call
xor
mov
push
push
push
push
push
call
push
mov
push
push
push
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
push
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
mov
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
push
add
mov
mov
push
add
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
movzx
movzx
sub
je
add
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
push
push
mov
call
push
call
push
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
mov
mov
mov
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
push
call
mov
mov
and
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
mov
call
add
test
jne
push
pop
jmp
push
push
push
push
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
push
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
push
lea
push
push
call
add
leave
ret
add
add
add
add
add
and
add
add
add
add
xor
inc
add
adc
cmp
add
ins
add
add
add
movs
add
add
add
int3
add
add
inc
add
add
adc
add
add
add
add
push
add
test
pop
push
push
jb
push
gs
add
dec
je
fs
fiadd
sub
inc
sbb
xor
lea
pop
mov
add
add
in
or
inc
add
jmp
clc
cmp
or
or
mov
cld
inc
inc
pop
mov
add
(bad)
adc
push
ins
leave
jecxz
mov
pop
xor
adc
add
enter
fdivr
and
in
in
adc
add
adc
jge
push
add
add
call
push
add
add
and
icebp
std
cld
add
push
and
add
cld
inc
xor
enter
add
inc
(bad)
jne
retf
in
dec
xor
adc
call
mov
add
add
add
in
js
add
mov
mov
add
xor
dec
xor
add
add
inc
xor
inc
js
outs
outs
outs
in
add
ins
lahf
imul
outs
jns
xchg
gs
inc
gs
push
add
imul
test
push
ins
add
ins
jns
outs
outs
imul
je
je
je
ins
add
add
add
mov
add
add
add
add
cmp
add
add
add
lods
add
add
ror
jno
push
outs
push
mov
jle
fsubr
jnp
cli
es
mov
mov
and
nop
(bad)
push
xor
inc
or
(bad)
test
mov
or
inc
mov
mov
and
and
das
pop
les
mov
test
out
imul
jae
inc
movs
(bad)
xchg
dec
(bad)
js
je
push
inc
ins
and
add
mov
sbb
fwait
sbb
sub
ins
arpl
sahf
pop
int3
add
nop
adc
sbb
jl
dec
movs
mov
rcr
push
sub
imul
mov
pushf
sahf
(bad)
imul
test
leave
add
mov
xchg
(bad)
mov
ret
mov
test
inc
and
into
xor
shl
xor
mov
xor
in
and
scas
cli
mov
sbb
push
iret
push
pop
push
jl
add
stos
std
loop
addr16
pop
loop
sbb
pop
cmp
xor
bnd
test
mov
jp
movs
jno
rcl
inc
dec
ins
adc
mov
pop
js
xchg
in
(bad)
(bad)
xchg
in
or
pop
icebp
rcr
cmc
out
add
fdiv
jg
cs
push
pop
jae
add
sub
fwait
pop
cmps
xor
sbb
je
loopne
leave
into
in
adc
ror
xchg
sub
fidiv
fst
xor
pushf
and
mov
mov
aad
iret
inc
int3
(bad)
or
jge
test
loop
and
push
mov
cmp
pop
xor
cmc
ror
and
iret
test
push
ins
dec
fadd
cwde
dec
stos
pushf
call
push
out
mov
mov
xor
cmp
je
nop
push
les
pop
dec
sub
pop
pop
pop
aas
cmp
jmp
or
pushf
data16
ins
cmp
adc
in
lock
ficomp
pop
pop
mov
pop
push
jo
test
pop
dec
clc
cmp
mov
cmp
cli
mov
and
cs
rcl
fistp
hlt
icebp
xor
dec
pop
lahf
xor
mov
inc
mov
jecxz
adc
and
xlat
stc
or
mov
pop
mov
cmp
xor
and
sar
pop
xor
cli
retf
or
pop
shl
(bad)
sub
dec
paddb
test
aam
sub
push
pop
adc
inc
pop
in
xchg
sbb
jb
in
cld
add
aam
mov
push
mov
daa
mov
mov
nop
xor
push
jmp
inc
cmps
push
lds
fistp
sbb
outs
imul
pop
dec
jmp
pop
sub
inc
jp
popf
xor
lahf
jbe
cmp
mov
sub
loop
out
cdq
jae
add
mov
pushf
inc
fwait
mov
sbb
in
in
fimul
in
in
movs
ret
inc
add
and
leave
hlt
pop
nop
mov
fist
mov
mov
mov
mov
cdq
repz
mov
xor
out
mov
pop
xchg
retf
pop
xchg
shr
test
call
mov
adc
mov
or
addr16
sub
loope
fwait
adc
mov
mov
fistp
mov
pop
sub
out
pop
sub
pusha
jb
xchg
test
ins
pop
dec
add
(bad)
and
aam
lods
xor
fsubr
loop
push
sub
jmp
inc
ret
dec
les
or
push
xchg
loopne
jmp
xchg
or
fcmovbe
add
bound
xchg
shl
pop
mov
gs
test
ins
mov
int
mov
in
test
outs
fistp
sbb
fdiv
push
retf
push
mul
popa
add
xor
ins
jle
in
mov
cs
test
mov
sbb
mov
sbb
or
sahf
mov
and
jne
daa
int
pop
pop
pop
xchg
push
push
pop
and
retf
int3
sbb
neg
in
pop
mov
pusha
push
push
jae
push
push
mov
pop
in
or
mov
repz
sub
add
adc
out
movs
and
repnz
cs
and
xor
jne
mov
sbb
cmc
push
add
fsubr
in
das
sbb
ja
jns
xor
xchg
ror
popf
mov
imul
fdiv
(bad)
movs
dec
fdivr
jbe
call
aaa
scas
outs
mov
jg
shr
cdq
movs
stc
in
clc
pop
mov
pusha
mov
lock
mov
jae
ror
in
mov
div
in
pop
xchg
inc
(bad)
pop
xchg
das
jmp
lds
cmp
or
mov
pop
jl
test
mov
sbb
mov
pop
cmp
ja
add
loopne
scas
into
adc
xchg
xchg
lea
jl
hlt
pusha
xchg
pop
and
in
sbb
mov
or
sub
lods
inc
sahf
cdq
cmp
jbe
in
cmc
sub
ja
adc
lahf
inc
xlat
push
sbb
jo
jecxz
sub
xchg
adc
ins
test
pop
imul
daa
pop
inc
xor
int
aas
lahf
ins
cdq
mov
or
loopne
push
in
jmp
sub
loope
mov
int3
repnz
call
push
call
ds
dec
adc
out
jo
and
adc
or
call
inc
and
imul
sub
mov
not
ret
pop
sbb
les
cmps
mov
fwait
jbe
or
push
mul
scas
popa
cmp
in
dec
test
in
mov
push
xor
mov
push
mov
jecxz
jnp
and
fs
clc
mov
mov
(bad)
push
xor
(bad)
pushf
dec
mov
mov
ror
mov
mov
sbb
push
pop
int
(bad)
shl
sub
cdq
imul
rcl
xchg
clc
leave
test
xor
fstp
test
push
and
test
mov
push
test
scas
xchg
gs
test
jmp
jo
rcl
(bad)
lods
and
in
push
and
cmp
in
and
in
std
enter
fist
and
xchg
nop
fisubr
sar
add
jg
push
add
(bad)
int
push
in
retf
mov
nop
sti
out
ss
stc
sbb
adc
and
ret
push
cmp
cmp
pop
sub
aad
popa
outs
scas
mov
mov
adc
retf
mov
es
push
or
(bad)
cmovl
dec
fmul
stc
xor
mov
cmp
jmp
mov
fstp
inc
push
pop
lds
push
test
(bad)
and
mov
xchg
ins
cmp
movs
into
(bad)
add
dec
pop
lahf
push
cld
cwde
in
and
fimul
ficom
outs
data16
mov
pop
or
popa
xor
inc
sbb
in
test
retf
les
cmp
dec
cmp
test
in
loopne
nop
inc
or
fsubr
data16
fmul
pop
xchg
jae
mov
idiv
sbb
mov
out
inc
aam
sti
pushf
inc
or
or
mov
or
sbb
mov
mov
ja
fild
loop
lods
adc
cmp
int
cwde
loope
ret
fdivr
jecxz
mov
ret
popa
fimul
repnz
in
pop
sbb
add
push
adc
push
push
add
mov
jns
cmp
mov
mov
sti
mov
in
mov
(bad)
mov
push
pop
scas
pushf
sub
xchg
mov
(bad)
(bad)
(bad)
jmp
(bad)
jg
mov
int3
jecxz
add
xlat
outs
and
stos
jl
ficomp
dec
imul
adc
add
mov
jl
pop
stos
out
sbb
movs
dec
jmp
jae
mov
pop
cmp
cmp
dec
adc
xchg
sub
inc
inc
cmp
mov
mov
cwde
lods
jo
jmp
sbb
push
pop
dec
xor
sbb
add
clc
lea
ror
cmp
gs
(bad)
icebp
jle
ds
mov
stos
or
cdq
mov
(bad)
jmp
jae
mov
lods
push
shl
dec
xchg
rep
fs
loop
and
arpl
cmp
xor
push
into
xor
fldlg2
or
mov
xor
pushf
cmps
ja
mov
pop
dec
pop
jns
lods
adc
sub
xchg
fucom
or
ficomp
fiadd
push
xor
xchg
rcl
jmp
sbb
cmp
std
pop
jg
loope
and
ficomp
int
pop
fld
adc
out
inc
out
mov
in
jg
jmp
inc
out
int
push
adc
aam
aam
sub
imul
gs
out
out
loop
ins
cmps
sti
cmps
sbb
or
(bad)
mov
sbb
sahf
pop
test
(bad)
pop
call
outs
and
xchg
jo
fld
daa
stos
adc
js
sti
xchg
adc
and
adc
stc
(bad)
rcr
sub
pop
ret
xor
loop
pop
or
push
cmps
ins
xor
arpl
bound
pushf
scas
out
imul
and
movs
imul
xlat
jecxz
cmc
push
shr
mov
scas
gs
outs
pop
movs
rcr
es
mov
rol
jb
mov
cmp
mov
lock
adc
or
shl
cmc
fstp
xchg
xchg
mov
js
pop
imul
cli
cs
push
xor
mov
sub
and
loope
sbb
mov
retf
pop
or
ins
jbe
mov
mov
loope
ins
xchg
or
or
idiv
sub
mov
ins
test
sub
cmp
daa
(bad)
aas
add
(bad)
nop
stos
and
(bad)
sub
fcomi
getsec
outs
add
inc
xor
and
clc
(bad)
outs
mov
fdiv
xlat
sbb
push
outs
xchg
nop
mov
xlat
and
shr
inc
inc
lods
das
pushf
inc
and
pop
and
in
dec
or
dec
out
pushf
push
xchg
cs
movs
aaa
ins
jl
out
aam
inc
adc
push
xchg
in
mov
jno
repz
cmp
imul
sbb
fisubr
fsubr
cmc
aad
xchg
sahf
and
test
rcl
cmps
mov
jmp
pop
and
sbb
mov
ss
jnp
push
mov
enter
sbb
mov
dec
scas
retf
inc
pop
fnstsw
dec
scas
xchg
test
int
push
(bad)
sti
pop
lock
mov
inc
clc
mov
xor
ins
mov
add
mov
pop
rol
(bad)
daa
adc
mov
loop
pop
push
ret
data16
inc
(bad)
sbb
fdiv
scas
push
ficomp
cmc
mov
loope
pop
add
(bad)
rcl
aam
add
ret
aaa
mov
int
mov
cld
and
mov
(bad)
push
pop
jg
and
loope
sub
fnstsw
sahf
sub
pop
mov
fbld
repz
xchg
xor
or
sub
aaa
test
in
inc
aas
sub
outs
(bad)
mov
pop
out
shl
sbb
dec
daa
dec
lea
lock
(bad)
hlt
jl
mov
imul
ret
jns
pop
mov
jg
push
in
(bad)
enter
scas
jmp
sub
stos
jmp
mov
pop
jno
outs
and
pop
sub
mov
or
les
lock
lahf
xchg
(bad)
test
mov
shl
sbb
lds
mov
hlt
push
(bad)
xchg
out
xchg
call
shufps
stos
xchg
pop
js
scas
pop
mov
dec
das
adc
(bad)
call
retf
adc
jecxz
sub
add
rcr
pop
icebp
and
xchg
push
ins
js
scas
fcmovbe
lahf
mov
and
add
and
ja
pop
xor
das
aam
inc
xchg
jno
and
dec
outs
add
in
push
sub
add
fprem
sub
test
jb
push
push
dec
jle
and
xlat
addr16
jb
push
imul
dec
jmp
pop
xor
sbb
int3
mov
in
hlt
dec
mov
add
add
adc
sub
push
mov
ins
int
lods
lods
rol
ins
aas
arpl
push
and
test
or
add
into
stc
inc
add
ror
data16
out
movs
push
in
repz
dec
inc
or
or
xor
inc
dec
mov
adc
xchg
jge
push
pop
aaa
adc
dec
pop
test
nop
jae
xchg
mov
mov
jnp
mov
dec
pop
iret
sahf
dec
mov
xchg
enter
dec
sub
mov
and
mov
fidivr
gs
mov
mov
jns
cs
fnsave
(bad)
jne
sub
or
cmp
pop
pop
iret
xchg
or
movs
aad
iret
(bad)
(bad)
lock
xor
aam
sbb
cmp
mov
outs
adc
lods
cs
jbe
stos
inc
ret
jae
mov
mov
jnp
dec
mov
dec
sub
sar
aam
sbb
or
clc
shl
cmp
sbb
mov
jne
add
ja
mov
hlt
xlat
lock
adc
pusha
jne
cmc
hlt
ret
mov
push
mov
cmp
pop
sar
sub
or
aaa
test
sbb
mov
(bad)
out
xlat
xor
xchg
jbe
jnp
adc
or
cld
push
jb
ror
rol
ror
cmp
lea
lods
dec
scas
adc
sbb
push
stos
pop
in
xchg
lods
dec
push
in
in
sub
xlat
sti
pop
mov
cmc
aam
stos
jmp
lods
fadd
cld
add
ror
jae
ds
inc
inc
fld
add
or
add
leave
fsub
es
jecxz
cmc
or
popf
imul
and
xchg
loopne
or
push
pop
js
dec
add
jl
sub
cwde
add
cmp
pop
call
les
xchg
dec
stos
xchg
sub
mov
jecxz
add
cmp
mov
mov
sub
sbb
inc
cmc
adc
js
call
xor
jmp
ret
or
and
(bad)
(bad)
call
add
mov
or
cs
jb
mov
mov
sbb
lahf
mov
dec
mov
xchg
sar
sbb
aas
mov
popa
outs
push
add
(bad)
gs
repz
cli
daa
sbb
pop
aas
mov
je
test
fwait
aas
pusha
inc
call
pushf
dec
inc
add
mov
jl
loopne
pop
jg
rcr
mov
ins
xlat
cmc
imul
pop
mov
xchg
test
pop
mov
retf
in
ds
sbb
or
clc
(bad)
pop
outs
xchg
jnp
(bad)
in
or
test
lds
rol
or
xchg
dec
mov
mov
mov
xor
jge
xchg
xchg
sub
push
or
sbb
push
retf
mov
adc
sub
jecxz
mov
leave
lods
xchg
adc
mov
lods
fstp
xchg
xchg
fxch
push
add
jo
or
mov
iret
shr
mov
out
add
test
test
cmps
push
mov
in
xchg
test
or
jbe
jmp
xlat
or
aam
ss
inc
jmp
loop
push
movs
test
cmps
inc
mov
out
inc
jbe
inc
dec
cmc
je
lahf
pop
mov
lock
dec
mov
jl
add
ds
mov
push
adc
outs
sub
and
cs
xchg
pop
adc
lods
mov
xchg
imul
test
or
and
and
mov
movs
movs
xchg
xchg
loopne
push
or
mov
mov
call
lods
call
dec
mov
shr
add
jp
(bad)
and
lahf
daa
test
and
pop
jnp
add
cdq
jo
jmp
mul
xor
bound
sbb
out
dec
cmc
xor
adc
mov
inc
sub
addr16
jnp
xor
push
sahf
fst
adc
aaa
push
cmps
pushf
js
jle
or
sub
mov
rcl
imul
adc
dec
imul
out
nop
shl
or
adc
sbb
ins
(bad)
loop
in
mov
xchg
inc
pop
cmp
test
cmp
outs
stos
push
aas
test
sti
push
add
sbb
pop
and
shr
adc
retf
es
mov
inc
mov
loopne
sbb
mov
pop
lods
inc
mov
inc
cmps
fild
fiadd
sbb
repz
mov
push
out
and
lods
pop
shr
jno
cwde
fsub
add
fs
pop
mov
imul
sbb
(bad)
push
movs
push
jbe
sub
sti
repnz
pop
(bad)
jmp
mov
pop
mov
inc
aam
iret
pop
test
ret
je
test
mov
les
mov
mov
jg
adc
outs
dec
xor
dec
push
(bad)
fiadd
jmp
xor
je
add
lds
cmp
inc
jl
sbb
je
xor
pop
cmps
shr
add
pop
xor
bound
xchg
test
(bad)
xor
jmp
jecxz
mov
xor
loopne
or
fcmovne
xor
xor
mov
ss
cwde
jecxz
or
jl
call
std
je
mov
pop
pop
aas
(bad)
push
in
cwde
dec
jno
cmp
xlat
xor
push
or
mov
mov
shl
inc
mov
bnd
jecxz
xchg
jge
dec
add
add
test
add
add
add
add
hlt
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
nop
add
add
rol
add
add
add
inc
add
adc
add
inc
add
pop
add
and
mov
add
cmp
(bad)
jmp
ja
mov
(bad)
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
push
ins
add
add
add
add
add
add
add
add
xchg
add
sbb
push
add
pusha
cs
add
add
add
inc
add
mov
add
add
mov
add
sub
clc
add
test
add
popa
add
add
jb
add
and
outs
ja
mov
inc
xor
fiadd
add
sahf
add
andnps
fcmovnb
inc
mov
xor
or
push
cmp
mov
jp
(bad)
jmp
push
test
inc
jmp
test
in
adc
adc
test
in
inc
std
(bad)
call
inc
(bad)
shl
lds
jge
push
add
add
add
pop
(bad)
(bad)
fist
adc
jmp
push
call
loopne
(bad)
inc
adc
cld
push
push
xor
adc
stos
push
push
test
(bad)
stc
lea
lea
jne
add
adc
add
adc
adc
add
add
add
add
add
mov
add
add
add
push
add
outs
jbe
inc
imul
adc
push
popa
gs
je
dec
popa
inc
imul
inc
push
mov
inc
add
lds
popa
fs
ja
add
js
jne
popa
ins
outs
jae
imul
push
jb
xor
push
add
add
fiadd
add
add
add
add
add
add
add
test
add
add
add
add
xchg
dec
test
pop
inc
dec
int3
outs
mov
inc
loop
gs
mov
popa
sbb
adc
aam
ins
fsubrp
jns
in
inc
fild
adc
pop
xor
ins
adc
and
es
les
add
cli
and
or
fs
test
jmp
fs
cmp
ret
dec
in
pop
aas
mov
arpl
push
xor
jns
cmp
das
popf
mov
shr
arpl
pop
dec
outs
jnp
adc
mov
push
cli
cmp
jne
(bad)
fdivr
and
push
sub
lods
outs
cmp
mov
fdiv
cs
mov
dec
not
adc
sub
mov
pop
(bad)
dec
(bad)
lock
mov
ret
fisub
sub
call
shl
pop
jle
fimul
movs
cwde
cmp
mov
jo
rcl
jbe
push
push
or
fidiv
pop
mov
sti
lea
pusha
adc
fcomp
lahf
fcmovu
xchg
call
push
fisttp
adc
jns
das
dec
cmp
out
movs
leave
sar
mov
dec
cmp
push
lea
jg
das
imul
cmps
lock
sbb
jecxz
stc
(bad)
out
(bad)
push
xchg
retf
int
(bad)
into
xchg
inc
mov
rcl
bnd
xchg
and
add
inc
(bad)
jns
les
dec
int
packuswb
inc
ds
fcom
repz
jp
jne
cmp
sbb
loop
(bad)
sbb
pop
mov
sub
mov
add
test
in
xor
and
inc
mov
fst
sub
out
pushf
bound
cdq
stos
int
jb
sub
add
jb
test
and
dec
int3
fnstsw
or
repnz
or
sbb
sbb
xchg
stos
dec
scas
sbb
sub
adc
add
icebp
ret
sbb
gs
xchg
dec
je
clts
push
test
inc
es
mov
sub
call
daa
mov
inc
cli
leave
sbb
add
dec
sub
jo
cld
(bad)
add
jmp
jnp
(bad)
jne
dec
push
mov
push
and
bound
add
push
aaa
dec
pop
hlt
(bad)
idiv
outs
jge
mov
cwde
test
outs
jecxz
jge
cld
xchg
call
stc
(bad)
xor
std
inc
stos
sbb
call
test
sti
enter
out
arpl
inc
jb
ja
mov
mov
jns
ficomp
jmp
pop
lds
jo
cmp
add
mov
pop
and
lea
inc
sahf
rol
inc
pushf
retf
int3
sub
or
pop
xor
jae
in
repz
pop
inc
cli
js
push
jns
data16
iret
movs
movs
xchg
adc
repnz
jle
pop
jl
fiadd
std
scas
add
int
xchg
popa
lock
pop
jmp
xchg
out
or
mov
cwde
gs
add
vpackuswb
loope
ficom
cmp
int
in
mov
mov
pop
mov
into
cmp
mov
and
sti
loope
inc
pop
cmp
(bad)
(bad)
xchg
or
scas
dec
inc
inc
mov
rcr
and
dec
and
mov
cmp
mov
fcomi
mov
outs
(bad)
xchg
(bad)
fadd
in
add
seto
pop
cli
mov
enter
jnp
inc
icebp
ud2
mov
sar
sbb
or
adc
pushf
xchg
iret
loope
pop
cmps
dec
mov
xor
mov
rcl
fstp
lods
aam
int
fxch
or
movs
test
mov
mov
cmp
sbb
(bad)
inc
push
dec
movs
gs
push
dec
dec
inc
fwait
cmc
mov
popa
inc
fdivp
and
movs
movs
xor
hlt
jae
jp
out
inc
mov
jmp
mov
repnz
into
jecxz
mov
icebp
out
fs
jns
push
mov
lds
cmps
dec
or
mov
pop
mov
mov
fld
push
scas
mov
xlat
pusha
repnz
je
cmp
inc
inc
into
dec
pop
(bad)
push
push
fcomi
fist
rcl
stc
or
out
popa
xchg
push
daa
imul
fild
dec
fwait
es
xchg
cmps
mov
jb
pop
push
aad
mov
adc
push
imul
dec
ret
add
mov
stos
mov
xchg
sbb
jns
retf
push
sbb
jb
sti
mov
and
pop
mov
or
ret
inc
(bad)
adc
jnp
push
mov
mov
and
push
push
mov
(bad)
bound
int3
call
mov
mov
fiadd
inc
sub
jo
out
push
movs
mov
sbb
test
mov
push
xlat
inc
clc
fimul
imul
push
call
push
pop
jne
pop
pop
push
adc
jge
push
sar
xchg
push
stos
mov
dec
out
xor
iret
push
sti
jno
scas
aas
lea
outs
inc
pop
js
push
xchg
lahf
test
scas
xor
jl
and
dec
mov
loopne
jmp
mov
cdq
cmp
sub
sahf
outs
xor
dec
pop
sbb
dec
ss
test
leave
jae
in
or
setb
xor
call
sbb
push
jge
leave
das
add
inc
repnz
rcr
(bad)
jno
pop
adc
cmp
xor
xchg
and
outs
stos
les
pop
mov
ins
(bad)
in
cmp
cmp
mov
fld
adc
popa
pop
inc
into
mov
mov
aaa
mov
les
push
xor
icebp
sbb
neg
cmp
scas
xchg
clc
xchg
jnp
push
jle
loope
dec
sbb
and
(bad)
and
sub
or
test
sub
sub
xchg
or
test
mov
in
dec
daa
cwde
das
push
(bad)
jge
add
jne
lea
popf
adc
sbb
cdq
xchg
cld
jmp
mov
push
sub
stos
add
dec
shl
adc
and
pop
cwde
dec
test
adc
sub
xchg
or
dec
dec
(bad)
jecxz
addr16
xchg
in
movs
mov
aas
adc
adc
sbb
adc
pop
mov
sahf
adc
add
ja
addr16
std
dec
sbb
sbb
inc
mov
sub
cmp
das
cmp
xor
loope
test
adc
outs
adc
dec
mov
xchg
loope
movs
or
cmps
jno
xor
adc
sbb
cmp
mov
repz
xor
xchg
pop
js
lock
sub
xor
mov
and
cmp
cmc
sbb
dec
repnz
aaa
mul
pusha
xor
xor
jb
loopne
jl
sub
inc
test
cmp
mov
dec
in
adc
sbb
lds
inc
fadd
stc
cdq
mov
xchg
cdq
mov
jae
mov
or
mov
inc
shr
mov
hlt
sbb
push
cmc
sbb
or
and
les
or
cmp
dec
(bad)
outs
fwait
int3
sbb
xchg
dec
enter
mov
mov
popa
stos
js
popf
es
xchg
jbe
dec
wrmsr
lds
arpl
mov
mov
jl
pop
mov
xor
dec
(bad)
mov
xor
or
mov
add
cmp
call
dec
mov
daa
adc
mov
lods
imul
jmp
bound
jb
add
shl
data16
cld
mov
jmp
shr
in
xchg
mov
and
adc
call
inc
and
scas
inc
arpl
fild
push
lds
adc
pop
out
loopne
cdq
scas
dec
ss
aaa
inc
add
pop
add
cmp
iret
mov
cs
mov
jle
test
add
int3
aaa
jecxz
test
xor
push
add
xchg
pop
jp
push
or
sub
neg
aam
sbb
cmps
sub
mov
mul
adc
add
cmp
cwde
ret
call
mov
sbb
mov
ins
fnstsw
movs
dec
jns
inc
sub
cmp
iret
cli
cmps
pop
stc
mov
jl
push
in
adc
mov
or
mov
aaa
pop
sub
in
push
ret
jmp
sub
xchg
adc
dec
ins
add
dec
cld
std
push
mov
inc
cmps
addr16
scas
dec
mov
loope
push
dec
add
loopne
sub
rol
and
adc
dec
and
inc
mov
sbb
ja
jae
clc
and
mov
popf
popa
retf
call
movs
xchg
mov
imul
jle
mov
push
xchg
fcom
sub
push
inc
sbb
cmp
mov
loope
pop
cmp
idiv
je
sub
lahf
movs
test
cli
lds
rcl
cmp
daa
cmp
pop
mov
push
mov
xchg
sub
push
sub
dec
mov
je
sub
cmps
enter
aaa
lock
jge
push
jo
cld
imul
jno
pushf
jne
xchg
adc
xchg
movs
inc
mov
(bad)
push
dec
push
out
aad
push
dec
(bad)
xchg
fcom
fwait
push
fcom
mov
pop
sub
loope
push
mov
xchg
inc
jae
dec
movs
(bad)
and
aaa
add
fisub
jae
mov
xchg
push
and
jbe
adc
mov
loop
dec
dec
movs
mov
test
je
pop
adc
jae
sar
sub
lods
pop
pop
jg
add
outs
inc
dec
call
daa
xchg
push
adc
outs
inc
dec
dec
je
fistp
pop
xchg
pop
jle
mov
ins
adc
ds
mov
mov
adc
call
mov
mov
add
adc
bound
test
and
loop
cld
ret
push
cmc
add
mov
jno
or
out
clc
mov
lahf
cmp
or
idiv
mov
xlat
fs
aas
fcom
and
inc
and
or
mov
fstp
mov
lea
and
adc
ss
cld
fild
imul
cmp
and
setne
adc
jl
rol
push
jb
loope
ds
out
cs
call
loopne
adc
lock
pop
call
push
enter
pushf
sub
xchg
adc
or
jmp
call
aaa
rcl
sub
push
adc
stc
sbb
or
xor
jmp
xor
sbb
scas
xchg
dec
push
retf
stc
lahf
mov
pop
daa
retf
fwait
adc
enter
daa
jle
inc
cmp
push
mov
mov
push
ror
mov
mov
ror
mov
in
retf
add
jb
(bad)
outs
inc
(bad)
add
cwde
pop
dec
mov
mov
mov
fnsave
scas
mov
inc
pushw
je
ins
in
lods
jle
pop
div
sub
jle
mov
sub
fild
sbb
repz
gs
dec
int3
cmp
jmp
loopne
push
clc
dec
lea
push
jno
retf
je
pushf
sub
xlat
mov
dec
fstp
mov
je
and
popf
lods
ds
rcr
sub
std
pushf
shl
push
sbb
xchg
adc
loop
mov
mov
ficom
repz
pushf
dec
jl
cdq
into
lock
pop
gs
ins
or
scas
adc
inc
sub
les
dec
pop
push
scas
ret
lock
sbb
inc
call
cwde
pop
(bad)
mov
push
les
sub
scas
push
dec
inc
sub
js
jo
data16
dec
shl
push
cmp
leave
xor
mov
pop
adc
sub
movs
xchg
cmp
scas
into
hlt
xor
jnp
ror
push
sub
jne
int
aam
das
dec
bound
cli
fild
push
or
xchg
adc
dec
lds
iret
ds
xchg
cmp
xchg
loope
inc
pop
mov
fbstp
sub
fnstsw
push
sti
adc
loope
push
lahf
(bad)
inc
daa
and
mov
stos
(bad)
out
sahf
mov
fwait
cmp
iret
push
cdq
imul
out
and
push
movs
cmp
push
repnz
pop
jns
fnstsw
jecxz
aam
sti
sub
jmp
mov
jp
push
lds
retf
add
cli
xchg
xlat
xchg
std
cmp
lds
adc
lock
in
ja
dec
and
hlt
mov
jmp
out
js
hlt
and
cs
push
push
dec
retf
daa
xor
pop
jnp
imul
in
jge
ret
cmp
add
jge
xchg
xor
xor
ins
jle
nop
popa
pop
ret
repz
imul
les
mov
cmc
xchg
pop
imul
or
lahf
or
out
sbb
jge
inc
inc
jbe
sbb
xchg
pop
sahf
sbb
dec
aaa
jae
in
ss
jle
sub
sub
aad
mov
pop
clc
vcvtsd2ss
jge
xchg
bound
push
push
jecxz
js
cdq
cdq
xchg
je
dec
jmp
sub
inc
(bad)
neg
loopne
or
in
xchg
icebp
jg
clc
inc
cld
push
jl
dec
nop
or
dec
hlt
dec
js
into
loop
arpl
jp
xchg
leave
xor
sub
into
push
pusha
adc
imul
imul
sub
inc
pop
xor
or
xlat
in
fisubr
pop
iret
cli
push
and
adc
js
je
int3
xchg
dec
adc
xor
pop
jnp
lods
repnz
loope
mov
mov
pop
into
push
inc
shr
into
leave
mov
std
jo
js
mov
mov
push
mov
shl
sub
inc
pop
adc
test
inc
pop
cmp
jmp
fld
idiv
fisub
push
(bad)
test
out
cmp
push
pop
setae
push
rol
and
pop
std
or
imul
sbb
jmp
cmc
sbb
ss
stos
mov
mov
dec
push
mov
stos
test
adc
dec
out
in
cmp
retf
pop
mov
add
inc
test
icebp
sbb
inc
pop
or
adc
lds
cld
popa
rcl
sub
enter
xor
fadd
mov
and
jmp
lods
enter
nop
arpl
jae
xchg
push
movs
sbb
push
aaa
bound
add
pop
in
and
jmp
dec
push
ins
sub
inc
enter
ss
push
add
pop
mov
icebp
inc
repz
or
sub
ins
int3
bound
mov
sbb
ds
pop
sbb
push
repnz
ins
call
sub
cmps
(bad)
jmp
xchg
stc
push
inc
stos
mov
add
sub
les
push
cmps
mov
mov
mov
ins
xor
pop
fild
xor
sbb
pop
cmp
pop
dec
test
push
pop
imul
mov
push
retf
push
inc
push
sar
in
lods
xchg
ds
mov
fs
rol
stc
mov
pop
cli
test
fld
xor
aas
adc
in
sub
or
loope
xchg
xchg
sub
jl
jge
nop
jge
push
xor
adc
mov
mov
lds
outs
sar
pop
add
ret
dec
rol
mov
mov
jns
jg
and
add
inc
xchg
lahf
test
pop
aad
inc
push
es
call
add
mul
mov
xor
jl
jns
and
xchg
(bad)
and
mov
dec
pusha
pop
sti
dec
cmps
fcomp
xor
(bad)
fsub
sub
aas
adc
cli
fnstsw
mov
xchg
sbb
adc
push
jb
gs
sti
ror
outs
pop
jno
cmp
jae
xchg
xchg
mov
dec
push
call
and
iret
je
and
mov
popf
cld
mov
and
inc
test
js
push
out
aam
(bad)
js
out
aas
sahf
jmp
out
push
fcomp
dec
movs
cwde
dec
shl
xlat
ins
mov
inc
inc
and
fisttp
lea
and
scas
adc
mov
adc
rol
int3
and
(bad)
aas
add
pop
xor
xchg
fbld
dec
pop
cdq
lahf
test
stos
jno
mov
int3
dec
mov
pop
jo
std
xor
mov
adc
or
lods
mov
lahf
sbb
fimul
jl
xchg
retf
in
ins
xor
fmul
repnz
jbe
into
mov
adc
push
cmps
(bad)
hlt
movs
dec
cmp
pop
retf
cmp
iret
les
clc
std
adc
jne
ins
dec
fstp
fs
not
mov
ret
mov
lods
ret
jnp
dec
imul
mov
clc
std
lahf
aam
add
sahf
jle
dec
adc
gs
ins
xchg
loope
xor
test
xchg
pop
or
les
ins
js
jmp
retf
jg
pop
lock
jnp
sbb
aad
ret
into
and
push
mov
sti
mov
jo
sub
mov
fisttp
repz
(bad)
lods
gs
aas
ror
jno
test
dec
pop
call
mov
xchg
mov
rcl
jg
add
outs
mov
push
retf
cmp
mov
loop
sbb
mov
xchg
fadd
out
xchg
ror
shl
push
gs
fistp
pop
popf
repnz
push
(bad)
fld
pop
mov
cli
cmps
mov
fild
push
pop
xchg
inc
repz
loopne
push
retf
add
inc
jle
retf
gs
idiv
fist
cmovp
push
gs
clc
sbb
movs
push
pop
fadd
repnz
xor
lods
fdivr
adc
dec
xchg
test
fistp
(bad)
loop
(bad)
in
dec
add
xlat
mov
ja
sbb
stos
stos
mov
or
sbb
add
cli
add
add
add
inc
add
dec
add
add
add
xlat
add
fiadd
add
add
add
add
add
adc
add
sub
add
add
add
add
add
or
add
add
mov
add
xchg
mov
sub
add
adc
or
add
add
mov
ja
mov
(bad)
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
push
add
outs
add
mov
aaa
add
add
add
adc
mov
add
add
add
add
add
cs
(bad)
add
add
add
and
outs
push
push
sbb
dec
add
push
jb
inc
mov
sti
inc
sbb
enter
mov
inc
les
push
lea
adc
not
cs
inc
pop
add
mov
enter
pop
dec
adc
jge
out
ret
add
push
inc
push
out
mov
lea
adc
add
mov
add
adc
(bad)
(bad)
es
adc
addr16
add
shl
cmp
add
cld
adc
lea
adc
push
cmp
inc
mov
ror
or
clc
jne
(bad)
cmp
add
add
pop
add
fwait
cmps
sub
inc
inc
add
gs
gs
stos
inc
dec
je
gs
je
jo
sbb
ins
jo
aas
ds
inc
jb
add
push
dec
arpl
ins
sahf
out
add
gs
addr16
push
gs
xchg
jb
ja
imul
js
xor
add
add
sti
pop
mov
sbb
add
(bad)
(bad)
lods
cmp
ja
data16
mov
xor
repnz
retf
cmp
xchg
cmc
push
sbb
xor
sub
(bad)
in
pop
je
push
xchg
cdq
jo
loop
xlat
mov
jmp
jmp
fisttp
out
sar
mov
arpl
leave
rcr
imul
leave
sub
loop
sbb
fldcw
mov
pop
add
pop
add
and
inc
jmp
dec
cmp
fdivr
add
sub
clc
push
push
and
mov
das
push
out
push
cmp
fsubp
sub
cmp
dec
mov
mov
add
jecxz
add
mov
jae
ret
psubq
fst
mov
ins
sbb
ret
push
nop
adc
ins
rol
pop
xlat
push
outs
jne
imul
imul
cwde
inc
adc
jae
cmc
cmc
and
sbb
cmps
inc
mov
xor
arpl
pop
xor
or
arpl
push
shl
gs
push
xor
std
cdq
pop
push
in
xor
cld
retf
and
add
in
add
pop
jmp
mov
pop
(bad)
jge
sbb
fld
test
adc
sbb
cs
push
mov
and
adc
rol
mov
pop
xor
lahf
dec
es
push
ret
xchg
cmp
je
cmc
sub
movs
js
mov
gs
int3
std
xor
xchg
cmp
xor
cmc
into
imul
mov
sbb
nop
push
mov
sub
jno
ds
cmps
xlat
lock
inc
stc
mov
fsub
in
cmp
imul
xchg
inc
jbe
sub
adc
fadd
and
aam
ror
fnstcw
aam
stos
mov
mov
std
and
push
cmp
movs
fucomip
or
mov
inc
xor
mov
clc
jl
inc
adc
(bad)
jmp
sbb
stos
sub
test
add
push
inc
mov
ins
mov
aad
sub
push
pushf
in
jne
add
xlat
fcom
cmps
jge
push
cwde
call
xchg
ror
bound
pop
adc
in
lds
cdq
je
and
sub
or
gs
sub
es
pop
test
iret
cmp
jp
xor
fbstp
inc
adc
sbb
and
mov
fmul
mov
pop
xor
mov
and
int3
push
xchg
movs
mov
or
jae
fnstsw
dec
push
test
mov
jb
bound
das
out
arpl
mov
ret
test
test
or
mov
xor
or
fdivp
mov
aaa
jl
dec
adc
inc
push
push
fidivr
jl
add
shr
cmp
inc
dec
daa
fdivr
int3
adc
pop
scas
inc
lahf
sub
mov
adc
fsub
cmc
or
aam
std
in
or
jb
aam
xor
lods
into
push
sar
mov
xlat
xchg
mov
mov
cdq
or
jge
(bad)
jecxz
fmul
test
aas
jb
xchg
loop
mov
test
adc
inc
les
pop
jo
cmp
pop
mov
mov
aas
clc
sub
in
sbb
sahf
cld
aad
lds
movlps
pop
xchg
or
jl
cmps
(bad)
enter
inc
ins
inc
retf
add
cs
mov
prefetcht2
mov
fdiv
in
or
pusha
dec
jmp
ins
inc
fcmovnbe
inc
add
iret
sub
jbe
pushf
xchg
ss
mov
xor
in
fst
sub
outs
test
xor
or
leave
inc
lock
lds
mov
mov
ins
idiv
lea
xchg
push
movs
ret
xor
adc
push
add
inc
mov
adc
dec
bound
jbe
movs
outs
inc
mov
adc
xchg
jmp
out
vpbroadcastq
push
retf
mov
push
adc
out
call
and
ret
ja
aad
or
pop
mov
test
xor
cmp
je
or
xor
ss
lds
cmps
sub
inc
mov
push
mov
aam
jecxz
sar
std
arpl
mov
and
sub
cli
xchg
push
add
arpl
sub
xor
mov
inc
sub
jb
add
pop
mov
mov
dec
lods
xor
mov
push
fwait
loope
test
jo
daa
cmp
jmp
cwde
inc
inc
pop
mov
mov
imul
xor
and
and
mov
jg
(bad)
sti
movs
fwait
inc
ficom
mov
into
mov
jle
push
mov
jle
pop
mov
sbb
test
xchg
bswap
mov
jno
rol
xchg
add
dec
gs
loopne
jge
jmp
push
push
stc
cs
xor
xchg
sbb
(bad)
jb
mov
xor
jg
into
(bad)
pop
sub
add
retf
pop
push
loop
inc
sbb
ficomp
mov
dec
in
cwde
mov
frstor
jno
add
loopne
sub
or
rcr
dec
xor
push
loope
mov
jno
into
xchg
or
and
jae
add
cmp
gs
dec
iretw
pop
aam
mov
push
adc
addr16
clc
lahf
loopne
mov
aam
mov
adc
and
arpl
fmul
fsubp
sub
rol
jbe
mov
jmp
push
ficom
jmp
jnp
call
mov
outs
arpl
xlat
jns
jg
js
pop
mov
or
in
dec
pop
mov
xor
jmp
rol
pushf
jmp
adc
or
sub
dec
movs
sbb
sub
in
dec
mov
pusha
jmp
rcr
ss
mov
mov
jne
cdq
aad
mov
neg
pop
popf
xor
repz
pusha
fstp
adc
outs
xor
fnstsw
push
inc
cmc
leave
add
stos
jae
push
add
bound
pop
sahf
lods
stos
cld
add
pop
mov
clc
mov
and
xchg
dec
add
sub
(bad)
movs
mov
sub
or
mov
mov
out
cmc
xor
jmp
nop
or
std
punpcklbw
mov
push
mov
pusha
bound
das
clc
jbe
retf
xor
out
lock
out
cmp
pop
aaa
mov
in
rol
inc
mov
rol
adc
adc
xor
push
push
fisttp
in
test
push
dec
sub
inc
cdq
sbb
dec
mov
xchg
push
repz
sub
in
out
cmps
adc
push
scas
inc
pop
sub
popa
retf
push
jmp
or
rcr
into
xchg
sbb
dec
sub
iret
aam
xor
stc
loopne
shld
mov
or
xlat
pushf
sbb
fmul
jle
mov
int3
and
xchg
aas
sub
push
add
adc
mov
cmp
push
dec
push
mov
mov
stos
sbb
outs
(bad)
mov
mov
test
(bad)
das
(bad)
ja
add
xchg
shr
sbb
mov
cmps
xor
cmp
out
xchg
mov
retf
sti
sahf
mov
xchg
mov
push
mov
mov
adc
mov
pop
sub
sar
adc
jecxz
add
daa
cs
xchg
dec
push
dec
shl
xchg
cwde
loop
(bad)
(bad)
and
mov
adc
xor
stos
fistp
int3
and
cli
lods
not
push
jmp
mov
dec
adc
scas
shr
lods
mov
xchg
and
mov
leave
push
dec
cmp
out
fidiv
ins
mov
cmps
pop
je
call
mov
das
push
add
jns
xor
ret
or
pop
aas
lods
sti
in
ret
mov
idiv
out
lea
loope
mov
sbb
mov
je
pop
pushf
push
fmul
cld
mov
cmp
test
inc
jno
mov
daa
xchg
or
mov
stos
cmps
(bad)
addr16
out
mov
pop
sbb
rcr
sbb
aam
mov
inc
mov
inc
fiadd
jle
sti
push
pop
loope
or
(bad)
cs
xchg
cmps
out
fbstp
popf
jb
adc
pusha
inc
add
xor
and
aad
fcomp
jo
(bad)
xor
clc
fidiv
mov
stos
push
or
test
jp
xchg
mov
repnz
mov
pop
ins
(bad)
pop
mov
mov
bound
fild
aas
xor
ds
iret
movs
push
cs
fbstp
add
or
fsub
movq
push
push
aaa
stos
out
out
push
jle
push
stos
cmc
rol
pop
add
in
lea
jg
sub
rcl
ss
mov
cmc
push
inc
pop
es
mov
ss
loop
fdiv
lock
lods
ins
sub
repnz
ret
fld
adc
or
jg
adc
push
jbe
push
cmp
add
mov
into
ja
push
scas
pop
mov
mov
movs
xor
(bad)
movs
call
sbb
or
mov
cmp
cmps
jl
fldcw
fwait
cmps
hlt
jmp
cmp
in
or
lock
mov
sub
idiv
test
pop
std
mov
xchg
xchg
mov
xchg
jbe
es
push
fbld
cmc
adc
cmps
mov
lods
mov
push
bound
hlt
and
adc
mov
idiv
rol
fwait
pop
and
pop
movs
movs
popa
in
scas
jmp
leave
pusha
lds
loop
fadd
push
shr
adc
or
rcl
data16
or
loope
retf
fild
sbb
xor
pop
mov
xlat
mov
and
cmc
xchg
sahf
enter
daa
sub
xchg
scas
clc
xor
sbb
lock
push
ds
xchg
aaa
data16
adc
pop
int3
mov
stos
movs
pop
and
call
fwait
push
nop
or
mov
sub
inc
xchg
dec
mov
add
push
leave
fwait
sub
stos
jmp
and
mov
scas
daa
jnp
inc
into
iret
rcl
ja
(bad)
(bad)
inc
push
rcl
and
and
or
or
jg
adc
and
sub
mov
push
push
ja
xchg
fidiv
mov
cmp
and
(bad)
das
xchg
inc
mov
ret
lods
jecxz
cwde
push
mov
mov
dec
mov
or
jmp
mov
dec
pop
pop
pop
cmp
out
cli
jne
fistp
inc
mov
xor
es
mov
pop
ja
das
mov
mov
mov
shl
hlt
fsub
or
or
(bad)
pop
dec
sbb
dec
outs
popf
pop
fs
adc
retf
(bad)
add
mov
inc
sub
pop
pop
cmp
or
jns
stos
loopne
stos
lods
mov
(bad)
or
inc
cmp
pop
fwait
mov
pop
cmps
aad
xor
movs
mov
inc
cmc
dec
dec
cdq
jmp
mul
movs
push
mov
xor
push
xor
sbb
gs
cmp
add
fild
xchg
mov
loopne
ds
fnstcw
sbb
sub
popa
jnp
push
xor
int
mov
ret
and
and
mov
mov
aas
ins
rcr
aam
rcl
(bad)
lock
sbb
push
mov
ins
shr
xor
jge
inc
pop
arpl
inc
or
sub
mov
sbb
sub
mov
inc
adc
stos
pusha
xchg
dec
hlt
mov
cmp
leave
repz
mov
sbb
pop
(bad)
out
jbe
cwde
inc
jg
arpl
es
test
popa
(bad)
inc
data16
push
jp
adc
mov
std
xor
mov
xor
jne
std
pop
daa
in
mov
mov
xor
cwde
fistp
and
aad
or
sub
push
loopne
lds
xchg
cmp
stc
test
jnp
jb
sbb
add
mov
fnstsw
punpckhbw
(bad)
mov
cli
cmc
pop
call
(bad)
xor
push
xor
dec
inc
xor
call
sub
je
cwde
int
jnp
mov
add
cmp
push
jle
adc
pop
fild
in
pushf
imul
jae
pusha
pop
sahf
(bad)
movs
pop
adc
mov
arpl
(bad)
sub
push
stc
mov
cs
mov
adc
or
sbb
jnp
mov
adc
shrd
pop
iret
dec
sbb
jle
(bad)
pop
cmp
ror
fdivr
and
into
out
rcl
push
pusha
call
add
dec
jecxz
cmp
imul
stos
mov
gs
out
cmc
fcmove
pop
or
stos
aam
rcl
fbstp
jb
inc
stos
push
xor
xor
je
mov
mov
xor
jo
ds
xchg
jp
sub
cmp
in
mov
or
les
cdq
adc
sbb
sbb
inc
es
mov
je
pop
sub
add
push
jno
push
and
fwait
pop
mov
lds
and
or
adc
sub
mov
xchg
xchg
push
cld
ins
sub
test
scas
leave
fs
push
jecxz
mov
adc
sbb
and
sub
ret
sti
mov
adc
or
and
std
dec
push
pop
xor
add
push
(bad)
xor
inc
pop
scas
fld
dec
push
pop
mov
jbe
mov
movs
mov
adc
mov
rcl
xchg
int
enter
pop
xchg
fiadd
add
jae
cs
(bad)
pop
pop
ret
cmp
(bad)
jbe
inc
cli
mov
cmp
aaa
xchg
retf
(bad)
mov
cdq
sbb
inc
sbb
and
fistp
mov
outs
cld
xor
pop
in
cmps
(bad)
pop
in
jle
pop
clc
in
outs
sub
hlt
rcl
inc
retf
add
jge
mov
enter
hlt
push
dec
add
cmps
mov
xchg
(bad)
fmul
dec
jno
jmp
mov
jmp
cld
mov
pop
addr16
inc
jp
adc
ret
stos
push
test
fdivr
or
mov
(bad)
scas
das
dec
mov
imul
movs
cmp
pop
add
xchg
iret
jle
fadd
lds
repz
dec
int3
dec
pop
pop
add
ins
add
xchg
call
ret
mov
das
inc
pop
sbb
adc
arpl
repz
mov
or
xchg
mov
inc
or
sbb
mov
jb
call
cmps
inc
cmp
in
xor
(bad)
addr16
retf
push
mov
mov
(bad)
call
push
ret
xor
scas
xor
mov
mov
sbb
xchg
cmp
mov
scas
dec
fsubr
xchg
dec
mov
mov
or
or
shl
pop
xor
mov
mov
fcom
cmp
cmps
xor
dec
int
rcl
daa
icebp
(bad)
pop
push
(bad)
fwait
popf
in
cmp
dec
and
or
ins
sub
stos
xchg
(bad)
push
pop
pop
lods
mov
or
sbb
mul
sbb
fild
repz
inc
test
cld
dec
adc
stos
sbb
adc
mov
mov
pop
lea
sti
mov
ret
xchg
sbb
sub
hlt
ficom
popa
loop
lods
sbb
mov
adc
xchg
pop
stos
ja
adc
mov
stc
and
dec
or
add
or
int3
(bad)
push
(bad)
inc
ins
and
mov
pushf
xchg
inc
imul
ret
push
stc
out
mov
(bad)
nop
popa
retf
cld
jmp
mov
out
jmp
mov
sub
popa
jns
push
push
inc
adc
pop
xor
scas
and
sub
inc
cs
mov
ret
(bad)
imul
mov
mov
test
add
and
add
inc
out
sub
(bad)
mov
dec
inc
xor
lods
in
sub
ins
and
mov
cli
imul
pop
pop
mov
rol
aas
pop
xchg
mov
pop
push
sbb
in
push
dec
pusha
lock
cmp
imul
lock
pop
or
mov
iret
xchg
dec
cmp
mov
or
and
(bad)
gs
neg
lods
mov
xchg
repz
xchg
scas
mov
popf
js
mov
mov
aaa
push
pop
iret
inc
dec
test
ficom
mov
mov
cwde
js
mov
or
int3
xchg
adc
xor
lods
iret
sar
jmp
pop
ror
cmc
je
fs
lock
call
cmp
lea
mov
xchg
push
fist
jl
sbb
push
sti
jmp
inc
push
ins
or
or
pop
xor
mov
mov
cmp
js
shr
sti
lock
pop
jecxz
fild
test
aaa
cmp
ret
nop
(bad)
mov
mov
cmp
fcomp
rcr
pop
cmc
or
lds
xor
cdq
xchg
or
xchg
jecxz
ret
les
dec
loopne
ins
dec
mov
into
mov
mov
scas
shr
mov
pcmpeqw
data16
cmp
hlt
mov
dec
lahf
(bad)
sar
jns
inc
mov
stos
inc
push
outs
xchg
jae
mov
jb
jp
dec
cmc
loop
movs
and
out
fist
ins
jl
inc
xor
xchg
(bad)
push
retf
inc
sti
out
popf
loopne
(bad)
rcr
sbb
scas
xchg
nop
out
mov
push
mov
jle
push
pop
repz
adc
adc
adc
jmp
rcl
out
adc
mov
and
pop
xor
retf
in
cld
int3
xor
fcomi
mov
mov
adc
and
mov
adc
and
cmp
inc
or
xchg
cmp
adc
jge
cmps
jne
sub
arpl
push
sub
add
sbb
add
add
add
add
(bad)
imul
add
sti
pop
mov
sbb
stos
mov
add
add
add
add
add
add
xor
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
mov
adc
or
add
adc
adc
add
add
ret
add
sub
or
add
add
add
jb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
loop
sbb
and
dec
outs
je
jb
outs
sti
dec
outs
jo
push
addr16
enter
jecxz
out
xchg
stc
dec
mov
pushf
or
add
add
mov
repz
xchg
inc
push
fdivr
push
pusha
adc
call
pop
adc
rcr
inc
cmp
inc
movs
mov
call
and
inc
add
or
dec
add
xor
cmp
test
test
je
rcr
dec
or
push
add
mov
call
test
jmp
inc
clc
call
repz
push
jmp
push
call
inc
(bad)
push
loopne
add
push
leave
pop
sbb
add
mov
jg
add
sbb
add
sbb
sbb
sbb
sbb
sbb
add
ins
add
gs
jae
movs
popa
dec
ins
add
add
add
fs
add
outs
ins
ins
outs
inc
popa
imul
add
je
xor
fiadd
gs
add
jo
add
fs
add
imul
xor
add
add
add
add
add
add
lahf
mov
add
add
add
add
add
add
inc
add
add
add
adc
mov
add
inc
mov
pop
sahf
cli
fsub
and
dec
enter
mov
imul
xor
mov
push
int3
mov
xlat
ins
int3
mov
mov
retf
mov
mov
adc
sub
add
enter
push
jl
repz
dec
(bad)
mov
lods
int3
cmp
int
or
mov
pop
jns
movs
dec
sub
scas
mov
les
adc
(bad)
and
(bad)
adc
enter
push
shl
and
in
add
ss
ror
(bad)
dec
hlt
fbstp
pop
cs
outs
xchg
add
arpl
and
and
jbe
jmp
add
push
add
or
int
fdivr
xchg
push
je
leave
jge
jmp
call
cmp
jb
xchg
imul
loope
jae
dec
cmp
repz
in
movs
les
dec
xor
fdivr
jnp
mov
cmp
loopne
adc
in
or
pop
int
add
push
add
into
psubsb
mov
data16
cmp
or
sahf
loope
(bad)
leave
sub
xchg
aam
sub
adc
test
jo
scas
test
clc
pop
sbb
mov
movs
retf
leave
sbb
sbb
ins
mov
inc
sub
push
pop
push
rcl
std
adc
xor
inc
aas
sbb
in
std
jmp
or
or
adc
ret
fstp
fiadd
inc
mov
neg
xor
mov
mov
jo
push
sahf
popa
loop
test
jne
(bad)
push
pop
cmps
ds
jp
fnstsw
push
rol
adc
sbb
and
add
enter
mov
fistp
aas
mov
mov
xor
xor
ins
xchg
pusha
retf
hlt
jno
aaa
mov
aaa
(bad)
pop
xchg
mov
pop
sbb
aas
test
aam
test
cmp
pop
bound
and
sbb
out
mov
jne
iret
xchg
fistp
pop
push
jmp
adc
push
dec
pop
jmp
std
call
push
repnz
mov
mov
cli
xchg
mov
mov
mov
(bad)
mov
iret
push
adc
inc
paddq
jbe
push
nop
fbld
jne
sub
out
(bad)
dec
dec
daa
fwait
dec
sub
sar
test
retf
(bad)
div
cs
loope
sub
in
adc
packuswb
fidiv
neg
fwait
push
pop
icebp
clc
fs
pop
nop
xor
push
xor
nop
and
adc
popf
nop
mov
pop
inc
push
sti
add
in
rol
outs
out
loope
pop
xor
jns
fild
sub
dec
cmp
sub
pop
adc
fisubr
imul
and
push
jae
or
not
push
mov
ds
fld
sub
loop
mov
jns
out
(bad)
jmp
sub
loopne
sub
jo
repnz
cld
or
add
xor
dec
aaa
pop
aas
dec
arpl
or
and
push
add
sbb
add
ret
popf
sbb
pop
pop
cmp
pop
lds
and
test
sub
test
int
mov
mov
and
jno
mov
and
push
push
call
enter
adc
jmp
adc
jecxz
mov
xor
mov
push
push
jp
or
cmp
sbb
sub
daa
aam
popf
adc
mov
lock
inc
mov
push
sub
mov
xlat
adc
inc
cmp
add
loopne
or
pop
or
loopne
sahf
mov
pop
icebp
push
pop
and
into
inc
dec
mov
out
push
out
shl
fcomip
jecxz
or
dec
xchg
out
ins
and
addr16
sar
mov
dec
ret
add
aas
js
push
cmp
(bad)
neg
push
enter
daa
and
data16
xchg
xor
adc
mov
xchg
mov
hlt
mov
sar
test
loopne
mov
and
add
imul
mov
jmp
xchg
jle
leave
outs
jp
imul
pop
popf
les
dec
mov
inc
jmp
or
daa
sbb
ret
mov
mov
add
jbe
xchg
pop
pop
fsub
mov
popa
(bad)
cmp
sbb
aaa
imul
(bad)
and
inc
and
enter
stos
neg
dec
push
(bad)
mov
test
inc
movs
mov
into
mov
int3
pusha
xchg
dec
dec
push
jp
std
popa
cmp
mov
push
push
mov
inc
jbe
cld
pop
(bad)
retf
(bad)
push
cmp
rcl
stc
xchg
xchg
fimul
mov
in
das
xor
shl
ret
fistp
and
cmc
add
test
mov
mov
pop
loopne
call
ds
test
pop
and
cli
ins
xor
push
out
add
enter
jnp
movs
or
inc
stos
cmp
pop
es
loop
iret
add
aaa
sbb
pop
leave
scas
inc
call
xchg
leave
leave
mov
lock
mov
fwait
movs
cmc
cmps
out
push
adc
call
mov
stc
fmul
mov
rol
or
push
inc
push
movs
aas
inc
movs
sbb
daa
push
cmp
retf
cmc
hlt
(bad)
(bad)
sub
or
pop
sbb
and
push
cmp
fldenv
pushf
mov
(bad)
ss
sub
retf
outs
pop
sub
(bad)
pop
aaa
mov
lea
mov
lods
mov
(bad)
rcl
sub
test
mov
pop
icebp
xchg
push
pop
cmp
aas
ret
inc
in
iret
pusha
mov
xchg
dec
sahf
or
dec
in
mov
loop
sbb
(bad)
pop
add
push
push
push
cs
ss
and
pushf
push
(bad)
rcl
(bad)
fimul
sahf
fnstsw
fild
jp
jmp
xchg
ror
hlt
cmc
outs
cld
je
loop
inc
out
inc
and
and
ja
mov
popa
(bad)
rol
dec
in
das
mov
inc
lods
jnp
pop
fdivr
adc
dec
inc
sub
adc
neg
pop
or
add
sub
add
data16
outs
ficom
and
das
sbb
xchg
(bad)
mov
or
mov
xchg
fisubr
iret
xlat
mov
xchg
or
pop
sub
inc
(bad)
int3
sbb
mov
popa
xor
shl
pop
loope
fdivr
dec
cld
arpl
pop
pushf
jmp
jns
mov
mov
popf
lods
xchg
out
inc
xor
cli
lahf
in
or
cs
or
(bad)
sbb
or
addr16
add
cli
cwde
daa
xor
dec
dec
ret
pusha
and
repz
or
sar
push
push
shr
fmul
(bad)
jno
sbb
inc
wbinvd
inc
test
(bad)
mov
mov
sub
xchg
fild
push
mov
cmp
sahf
cdq
inc
xchg
jmp
gs
cmps
daa
(bad)
out
and
pop
xor
mov
test
mov
push
outs
sub
sbb
push
nop
inc
cli
sbb
sbb
jns
jnp
xor
jmp
push
xor
cwde
mov
popf
loop
pop
scas
out
push
test
mov
mov
dec
and
out
retf
fiadd
or
dec
sub
mov
dec
or
mov
mov
fwait
push
push
pushf
mov
ds
inc
push
sub
inc
inc
xor
jge
scas
shl
sbb
das
pop
(bad)
js
pop
fnstenv
mov
iret
mov
mov
dec
push
pop
call
jmp
jae
outs
ss
xchg
js
xchg
mov
push
xchg
aam
mov
aam
es
std
pop
cmp
xor
inc
push
out
stos
pop
add
cmp
add
adc
inc
fcomip
rol
mov
and
inc
icebp
adc
fisttp
jecxz
add
mov
mov
out
mov
jnp
js
jmp
cmp
in
push
fdivr
jg
push
jnp
and
pop
test
and
mov
shl
rol
(bad)
das
sbb
jns
stos
jae
aas
jmp
dec
pusha
mov
popa
movs
jae
call
cli
ret
bound
adc
dec
jb
fwait
and
fistp
cmp
sub
push
cmp
out
popa
nop
xchg
ss
pop
fs
xchg
iret
adc
ret
sahf
jmp
or
shr
dec
iret
(bad)
repz
cdq
dec
pop
pop
das
cmp
add
and
cmp
pop
sbb
pop
into
clc
icebp
in
adc
add
sbb
fild
cli
mov
inc
push
push
mov
inc
ds
movs
call
sub
out
pop
cwde
mov
daa
dec
cdq
or
pop
gs
je
enter
or
jmp
push
push
adc
adc
sub
pop
dec
pop
in
mov
pusha
and
mov
std
xor
sbb
jmp
sub
test
xor
rol
cmp
add
daa
dec
xchg
inc
test
int3
out
sbb
dec
je
cmp
sbb
mov
(bad)
add
xchg
mov
xchg
add
pop
dec
push
pop
jecxz
push
inc
pusha
cs
mov
mov
push
mov
inc
call
push
sbb
pop
fsubp
mov
rcr
dec
xchg
xchg
js
fidivr
jb
ss
test
mov
jns
xchg
retf
mov
stc
pop
sqrtps
push
cmc
dec
inc
scas
xchg
pop
mov
inc
push
pop
cmp
pop
or
int3
jp
ins
nop
add
or
pop
jmp
cwde
addr16
je
out
mov
out
push
xchg
sahf
loop
jmp
xchg
jne
retf
jno
mov
loopne
jecxz
mov
fmulp
add
cmps
cmps
in
ss
dec
ins
jo
add
sbb
inc
lods
call
dec
sbb
sub
mov
jmp
outs
pop
leave
fstp
mov
mov
shr
adc
jmp
and
call
stos
shrd
jmp
jg
popf
push
dec
(bad)
sbb
inc
fadd
inc
add
nop
cdq
mov
dec
call
jmp
div
stos
push
gs
jg
imul
jo
mov
mov
push
rcr
(bad)
ss
mov
pop
cs
mov
xor
cmp
mov
aaa
jno
xor
sbb
scas
adc
xchg
push
dec
call
mov
sahf
stos
cwde
inc
repz
stc
cmp
shr
ss
sub
add
pop
xor
cmps
push
call
mov
pop
daa
cdq
mov
jp
das
(bad)
ret
mov
bound
inc
or
mov
jmp
push
sub
rcr
sti
outs
inc
outs
push
adc
mov
popf
pop
das
movs
xchg
jnp
push
or
sbb
inc
push
ud2
int3
shl
data16
inc
mov
ss
push
and
retf
pop
ffreep
imul
nop
shl
movs
pop
fidivr
add
shr
cmp
mov
sbb
int3
dec
cmp
sub
mov
xchg
test
dec
mov
mov
cs
mov
cs
and
(bad)
xor
fist
fidiv
scas
clc
mov
sahf
repz
outs
bound
push
mov
push
nop
loop
xchg
std
sahf
adc
ss
fs
adc
call
bound
xor
sti
xor
sbb
call
push
adc
xor
into
sub
sbb
jmp
and
mov
xor
pushf
jo
push
mov
sti
inc
hlt
hlt
or
imul
dec
mov
mov
xchg
adc
in
out
adc
shr
mov
xchg
xchg
test
fmul
push
pop
mov
clc
fcomp
je
push
cmovbe
imul
add
or
lea
sbb
inc
daa
lea
mov
or
push
mov
or
or
push
push
fmul
xchg
xchg
outs
(bad)
nop
test
pop
dec
dec
dec
daa
xchg
mov
push
imul
lods
dec
mov
pop
movs
nop
mov
pop
sar
arpl
fistp
imul
imul
repnz
inc
test
adc
scas
jp
adc
adc
(bad)
outs
addr16
dec
into
sahf
call
ins
nop
push
dec
js
xor
movs
cdq
xor
push
push
sbb
mov
sti
rcr
fwait
fs
bound
lods
mov
add
loop
cmc
fs
fld
jbe
dec
dec
cmp
arpl
or
popf
cmp
mov
ficomp
lea
js
inc
mov
sub
in
and
xchg
push
inc
cmp
mov
clc
je
mov
repnz
test
cwde
iret
arpl
nop
outs
fnstenv
push
(bad)
dec
jns
pop
inc
dec
call
sbb
mov
ins
or
retf
out
push
clc
pop
xchg
js
test
adc
dec
inc
in
xchg
or
je
in
bound
pusha
aaa
rol
sahf
ins
loop
or
pop
push
arpl
add
cmps
ins
fcomi
cwde
mov
push
shl
inc
rcl
fwait
inc
mov
sar
rcl
push
xor
xor
hlt
sub
loop
inc
test
fcom
mov
fdivr
outs
adc
scas
or
js
stos
(bad)
mov
push
dec
xchg
rcl
ins
and
pop
mov
mov
and
sbb
push
mov
jbe
push
cld
sub
cmp
and
or
dec
sahf
icebp
retf
lock
sub
xor
movs
sbb
test
cmp
ficom
shr
or
scas
neg
fwait
mov
fs
movs
rol
fcom
repz
aas
or
shl
sbb
adc
inc
mov
cld
dec
xchg
sub
add
je
outs
push
bound
outs
dec
jb
in
rol
shl
adc
shr
test
(bad)
sub
test
not
js
mov
mov
imul
cs
mov
cmp
(bad)
inc
lods
cmp
xor
push
cmc
mov
stos
repnz
cmps
jo
das
pop
repnz
jp
push
enter
sbb
gs
ss
shl
jmp
jp
pop
mov
cmp
enter
lds
sbb
pop
retf
jl
xchg
jl
pop
jp
enter
xchg
xlat
je
mov
ins
aas
retf
retf
and
imul
dec
xchg
mov
pop
retf
jnp
repnz
rcl
lds
gs
xor
add
loopne
xor
adc
mov
jge
(bad)
clc
adc
fnstcw
loope
inc
sbb
das
add
movs
cmp
and
jecxz
in
retf
(bad)
(bad)
push
mov
push
sahf
mov
xchg
sub
ins
dec
(bad)
out
push
or
in
add
ins
sub
(bad)
pusha
shl
xor
push
cmp
push
je
lods
pop
test
jp
mov
mov
mov
dec
and
je
cmp
push
push
ins
fistp
adc
aaa
dec
inc
iret
sahf
fwait
cmp
fwait
cmps
xor
xchg
push
movs
sahf
jo
adc
add
ins
jge
pop
rep
xchg
repz
jg
pushf
cmps
jge
pop
sbb
jmp
lea
and
into
retf
xchg
arpl
fwait
and
xor
xchg
xchg
outs
pusha
fbld
mov
outs
and
call
mov
push
fisub
push
daa
(bad)
fs
sub
cs
ret
pop
popa
mov
sbb
pop
sub
fst
dec
hlt
and
popf
and
pop
jmp
mov
pop
hlt
cmp
aas
sub
std
stos
jb
push
nop
data16
lahf
mov
mov
jnp
inc
add
pop
mov
mov
aad
inc
sbb
jl
rcl
push
(bad)
(bad)
jmp
mov
in
int3
imul
ss
and
mov
ss
jnp
nop
xchg
mov
push
repz
cdq
xchg
push
daa
jp
xor
(bad)
cld
mov
(bad)
pop
and
adc
push
inc
or
sbb
sbb
pop
cs
lahf
inc
cld
or
stc
int3
test
jmp
or
pop
sbb
hlt
mov
lods
dec
mov
jecxz
sub
push
add
dec
jecxz
and
test
mov
je
lods
sub
mov
fmul
inc
clc
mov
popf
mov
sub
add
push
mov
stc
dec
in
mov
inc
shrd
add
retf
fldcw
pop
cmp
stc
push
fcom
(bad)
inc
lods
pop
mov
imul
in
out
mov
mov
repz
loop
inc
xchg
idiv
or
mov
(bad)
add
in
jecxz
sub
adc
lods
inc
mov
enter
jmp
(bad)
sub
outs
inc
add
dec
cmp
cmp
add
jne
lock
push
adc
jno
adc
mov
adc
cmp
inc
in
fmul
xchg
pop
inc
addr16
mov
mov
ins
mov
in
rol
push
xor
popf
loope
mov
jb
enter
ss
xor
push
rol
nop
jge
rcr
sbb
xchg
mov
das
or
repnz
sub
adc
outs
ja
pop
hlt
popa
popf
cmp
inc
add
test
leave
loop
mov
in
outs
and
xor
pop
or
repz
dec
cmp
mov
les
ja
push
fidivr
aas
pop
ror
push
sbb
dec
mov
pop
mov
data16
loop
mov
sub
ins
adc
xor
repnz
cmp
cmp
add
add
push
push
in
lods
stc
add
add
add
add
mov
xchg
add
add
sldt
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
stos
stos
add
ja
mov
jg
jg
mov
int3
int3
int3
int3
int3
add
add
add
add
or
outs
jne
or
or
adc
add
add
add
adc
add
adc
add
add
test
arpl
mov
add
add
add
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
movs
rol
outs
inc
push
imul
add
btc
fldpi
sahf
mov
enter
or
push
(bad)
jmp
clc
sbb
inc
pop
in
pop
inc
mov
cld
add
mov
(bad)
adc
add
add
add
out
jmp
push
dec
fs
push
rol
retf
in
mov
mov
mov
cmp
add
push
daa
add
add
xor
inc
pop
pop
add
lock
(bad)
jmp
push
pop
call
add
clc
mov
loope
(bad)
std
les
push
mov
add
mov
push
mov
add
cmp
clc
loopne
add
retf
sub
mov
inc
add
lock
push
jne
or
adc
add
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
pop
add
add
bound
inc
add
gs
outs
outs
outs
ins
test
imul
xchg
push
add
jbe
je
arpl
gs
xor
inc
ins
jb
addr16
jge
add
es
outs
imul
inc
popa
gs
cmp
add
add
icebp
je
in
add
popf
and
sar
lahf
call
outs
les
cmp
mov
jmp
pusha
jns
dec
push
cld
xor
adc
jns
mov
adc
scas
(bad)
dec
xor
and
mov
mov
jmp
xchg
sbb
call
not
dec
popa
clc
jne
cmps
pop
xchg
xchg
adc
out
repz
mov
push
sub
lods
sub
push
cmp
pop
sub
inc
icebp
inc
bound
scas
mov
xchg
cmp
mov
jbe
(bad)
fcmovu
je
xchg
dec
or
cmp
movs
and
cmc
or
fcmovu
jns
pop
sbb
stc
adc
mov
xchg
push
push
shl
out
fwait
(bad)
push
aaa
adc
pop
cwde
jl
jmp
loop
ins
and
inc
push
aas
mov
mov
jo
ret
js
js
mov
stos
or
iret
das
mov
mov
popf
cwde
pop
mov
xchg
hlt
adc
adc
push
pop
mov
addr16
test
out
lock
adc
jmp
mov
je
sbb
xchg
stc
adc
jg
inc
(bad)
sbb
adc
loopne
xor
xlat
ja
retf
repz
pop
sub
push
add
or
mov
fstp
mov
in
adc
popf
inc
aam
sub
or
pop
retf
push
mov
and
cmp
iret
mov
out
mov
shl
sbb
add
dec
pop
movs
cmp
dec
rol
scas
mov
mov
adc
lahf
into
xchg
je
mov
not
jns
and
stc
icebp
mov
xor
add
shr
jne
fwait
mov
cmp
sub
outs
jo
mov
retf
loope
and
ret
rcl
les
scas
in
retf
ret
leave
mov
mov
jg
mov
pop
popa
gs
jmp
int3
push
sub
push
loope
addr16
dec
pop
in
dec
mov
repnz
shr
or
lods
mov
xchg
loopne
sub
and
out
(bad)
int3
in
(bad)
in
xor
pop
push
xor
cmps
mov
add
xor
pushf
fiadd
pop
xchg
es
mov
cmp
add
icebp
mov
sub
mov
loop
js
pop
mov
repz
push
adc
sub
cmp
mov
leave
fcom
push
and
ss
push
cld
retf
repnz
outs
inc
cmps
cmp
call
in
loop
jbe
mov
xor
dec
inc
scas
mov
gs
daa
dec
retf
std
push
cmp
mov
icebp
aas
stos
ficomp
add
test
jo
push
fidiv
xchg
mov
out
shl
cmc
adc
adc
dec
outs
and
out
lea
stos
mov
jp
in
add
(bad)
enter
fimul
pop
repnz
cmps
ret
adc
and
es
push
popa
out
cli
leave
int3
sahf
in
mov
push
sbb
repz
js
or
push
sar
pop
add
pop
cld
outs
mov
mov
(bad)
adc
hlt
ret
adc
ins
sub
fisubr
push
js
test
mov
call
clc
push
cmp
int3
mov
jnp
repz
in
scas
ret
mov
enter
lods
jno
xor
sar
push
rol
test
pop
lea
dec
sbb
push
shl
adc
or
lds
sbb
lea
or
pop
mov
in
xchg
ret
rcr
push
adc
std
cmp
pop
mov
sub
sbb
popa
jne
enter
or
inc
in
jmp
inc
out
popf
dec
push
mov
inc
test
popf
mov
sar
adc
enter
cmp
sub
mov
inc
push
sub
pop
scas
les
mov
or
push
imul
call
mov
mov
icebp
mov
popf
xor
int3
mov
stos
and
sbb
mov
sbb
adc
cmp
mov
adc
mov
lahf
or
xchg
pushf
pop
jo
sti
or
jae
outs
mov
iret
and
ds
test
mov
scas
repz
aad
dec
sbb
xchg
pop
and
cld
aad
or
jp
pop
cli
mov
std
mov
je
out
jg
arpl
mov
jns
movs
(bad)
adc
xchg
mov
jmp
dec
mov
adc
je
ror
mov
arpl
jge
mov
das
adc
clc
or
lods
aam
(bad)
movs
add
retf
test
jns
cmc
push
xchg
mov
xchg
int
xchg
jg
inc
pop
(bad)
fs
loope
sub
pop
push
pop
push
popa
scas
or
shl
add
mov
(bad)
push
pop
test
and
rcr
retf
push
and
and
mov
mov
out
rol
fbld
add
push
or
pop
scas
ror
mov
xor
lods
sub
in
lods
jb
xchg
xor
sub
cmp
iret
out
mov
mov
rol
repnz
xor
cld
and
dec
test
pushf
push
nop
bound
ss
movs
push
cmps
dec
mov
xchg
stos
xchg
cmp
xor
stos
dec
jecxz
shl
sub
pop
adc
pusha
pop
pushf
aam
and
jae
mov
fiadd
in
fnstsw
jge
enter
scas
outs
sahf
inc
push
mul
cwde
push
sub
stos
fst
jl
ss
cmp
dec
pop
dec
retf
cmp
ret
adc
popf
cmp
push
stc
(bad)
or
out
jge
pop
fcomp
jns
cs
out
or
pop
frstor
mov
js
pop
jmp
sbb
jmp
mov
cmp
fwait
cli
mov
fwait
mov
(bad)
shl
sub
or
frstor
fmulp
lahf
mov
int3
loopne
(bad)
lock
push
mov
les
inc
mov
push
xor
inc
inc
add
xchg
dec
cld
jae
xchg
pop
fs
(bad)
imul
es
mov
jo
adc
fimul
push
push
cs
rol
jno
sub
(bad)
paddw
adc
rcr
dec
cmp
and
or
dec
lea
xor
ds
inc
or
ds
cmp
dec
push
out
int3
test
loop
mov
jno
sbb
and
fstp
sbb
popf
xor
dec
pop
mov
or
stc
(bad)
mov
mov
sbb
mov
in
cmp
add
mov
push
pop
mov
test
add
cld
hlt
fidivr
mov
into
and
xor
data16
shl
not
jo
in
inc
add
fs
cmp
or
mov
enter
(bad)
scas
adc
mov
(bad)
ins
iret
mov
dec
nop
fisub
inc
(bad)
dec
dec
cwde
mov
in
jg
jbe
call
rcr
outs
ins
in
push
sub
push
test
and
retf
and
jg
adc
lods
push
push
push
pushf
xchg
cli
mov
ficom
adc
retf
dec
mov
sub
test
mov
jb
or
cmp
popa
mov
cmp
int3
js
scas
cmp
jae
fstp
(bad)
inc
add
push
push
add
or
sub
xchg
mov
inc
or
mov
and
sbb
in
mov
mov
shl
hlt
mov
add
(bad)
out
pop
mov
xor
jmp
outs
push
xchg
add
mov
(bad)
ss
call
sbb
int
xlat
fdivr
stos
mov
or
mov
push
inc
adc
push
push
add
rcr
sub
in
xchg
scas
dec
ins
push
mov
ror
and
push
dec
mov
sub
outs
and
stc
push
cli
sbb
test
(bad)
sar
in
arpl
loope
(bad)
mov
sub
xchg
and
push
jno
das
(bad)
aaa
add
mov
pop
mov
pop
cmp
loopne
mov
int3
xor
jne
loop
test
and
int3
ins
lods
add
jae
mov
out
repnz
lea
add
push
aaa
into
ror
daa
inc
int
inc
sti
or
test
and
dec
ss
inc
mov
push
mov
jo
jae
stos
mov
fwait
add
test
pop
fadd
xchg
mov
mov
mov
arpl
fld
mov
fsubr
push
mov
sbb
xchg
jne
mov
hlt
scas
(bad)
aam
pop
xchg
ins
cwde
int3
mov
dec
or
jle
or
rol
imul
inc
pop
pop
xor
fsubr
push
cs
xchg
pop
add
xchg
ficom
pop
dec
or
add
repz
rcl
int3
loope
and
inc
xchg
leave
nop
cs
in
ficom
shl
fdivr
cmps
dec
cmp
data16
arpl
iret
rcl
xchg
cmp
jl
stos
lea
lods
xor
shl
xchg
sti
jmp
movs
inc
mov
dec
push
stc
pop
adc
xlat
fld
(bad)
imul
mov
arpl
sub
sub
xchg
fnstcw
(bad)
repz
inc
fsub
pop
leave
mov
(bad)
leave
mov
lahf
mov
add
imul
(bad)
xor
mov
dec
mov
sbb
and
ret
push
cmp
sub
ss
xor
adc
call
dec
sbb
pop
icebp
sub
call
(bad)
popa
adc
scas
clc
push
daa
inc
ret
mov
mov
nop
ins
or
das
je
pop
xor
retf
popa
fcomp
aam
outs
sbb
data16
add
pop
push
mov
add
jle
fld
fnstenv
xchg
loop
les
lahf
(bad)
mov
lahf
mov
mov
test
pop
cld
jns
cmp
pop
add
mov
fisubr
sub
cmp
ror
cmp
push
aaa
inc
sar
jb
shr
clc
add
fdivr
pusha
out
outs
jnp
xchg
pop
jb
push
mov
(bad)
aas
mov
enter
jmp
test
jmp
dec
rol
dec
mov
jmp
push
stc
ret
or
and
sbb
cld
pusha
sbb
dec
pop
(bad)
add
loop
xor
stos
mov
jo
pop
call
out
dec
cmp
cwde
dec
outs
out
iret
repz
in
xchg
xchg
mov
les
xchg
adc
ins
stos
enter
(bad)
cli
jecxz
mov
sub
add
(bad)
jecxz
in
or
jp
sar
xchg
hlt
ror
dec
(bad)
mov
mov
sub
jl
in
sbb
in
mov
(bad)
push
out
push
out
out
and
or
lods
pop
arpl
stos
mov
ja
lods
into
sub
mov
inc
xor
(bad)
mov
(bad)
jbe
xor
out
cmp
call
and
xchg
sub
pop
mov
add
enter
pop
mov
and
dec
xchg
push
popa
push
ins
mov
pop
jno
cwde
push
(bad)
lods
test
inc
jns
gs
jne
or
and
cmp
mov
cmp
dec
aam
idiv
xchg
dec
pusha
adc
ret
in
leave
add
xor
fadd
xlat
addr16
push
iret
jecxz
shl
inc
cmp
mov
cmps
jb
cld
fsubr
adc
mov
loope
sbb
cli
in
push
fidiv
xor
pop
push
aaa
mov
inc
shl
icebp
xchg
adc
jmp
jmp
dec
scas
jae
out
adc
in
(bad)
test
bound
xor
push
add
mov
add
test
std
jb
scas
xchg
das
add
mov
repnz
imul
add
into
fcom
icebp
retf
loope
add
test
sub
or
mov
dec
sbb
or
adc
mov
push
retf
stos
shl
inc
and
xchg
jle
cs
pop
sub
jmp
hlt
cmp
ret
aaa
cmp
test
daa
sbb
movs
ins
loopne
fdivr
std
sub
and
dec
add
je
xchg
out
ins
call
lods
lds
or
jbe
je
inc
cmp
cbw
nop
lock
xchg
fstp
fwait
mov
repz
push
inc
cmp
cli
jle
jb
push
pop
dec
inc
fadd
mov
outs
leave
sahf
neg
mov
and
ins
push
icebp
sbb
or
pop
mov
mov
pop
(bad)
aas
cdq
mov
mov
and
dec
xchg
or
push
(bad)
es
inc
pop
mov
push
cmp
pop
xchg
addr16
pop
nop
(bad)
jbe
pop
and
lods
shr
sti
(bad)
push
cmp
jge
movs
mov
repz
enter
ffreep
lea
ins
loopne
rol
inc
aaa
adc
call
pop
push
jge
mov
mov
call
mov
or
(bad)
adc
mov
movs
rcr
mov
hlt
(bad)
jno
mov
push
stos
out
cmp
cmp
mov
lds
mov
clc
pusha
aam
scas
inc
das
push
sub
out
xor
cmc
(bad)
fucom
ret
outs
mov
mov
sub
sub
mov
or
xchg
inc
pop
fbstp
or
sbb
jne
movs
jns
out
je
xchg
int
arpl
cmp
js
xchg
outs
adc
jno
mov
push
mov
adc
and
call
hlt
scas
and
scas
xor
into
sbb
(bad)
inc
std
ret
loopne
fwait
push
scas
dec
lea
sahf
add
jbe
fdiv
imul
scas
sbb
inc
hlt
pop
inc
jb
cld
add
adc
scas
aas
outs
xchg
rcl
inc
jge
push
stos
inc
loope
lea
lods
mov
pop
mov
dec
std
jecxz
xchg
xor
call
pusha
cli
outs
pusha
push
inc
cmp
add
stos
ret
jmp
inc
std
mov
or
pusha
popf
js
add
je
jge
adc
mov
push
and
mov
movs
loope
xchg
(bad)
nop
fcomp
xchg
hlt
sbb
jns
leave
shl
or
retf
or
movs
data16
pop
mov
fisubr
repnz
xchg
ds
loop
test
adc
jo
mov
sub
inc
cmp
stos
mov
in
or
xchg
fstp
jns
cld
jle
mov
movntq
or
lods
inc
mov
cmp
or
(bad)
adc
and
fild
inc
xchg
cs
pop
lds
enter
mov
(bad)
(bad)
das
xchg
push
daa
pop
ret
in
inc
ss
lods
xchg
dec
push
or
out
ins
sar
int3
dec
aad
shl
mov
mov
push
loop
sbb
xchg
shl
cmp
loopne
ins
add
pop
mov
stos
test
out
cmps
cmps
pop
xchg
adc
mov
movs
jecxz
push
fldenv
push
sbb
add
gs
adc
adc
test
push
fstp
out
inc
movs
aas
add
dec
(bad)
and
xchg
loope
or
mov
in
or
jbe
lahf
popa
push
pop
ins
stos
mov
sbb
loop
test
sbb
shl
add
sbb
cmovl
dec
mov
loopne
push
nop
cmp
cld
test
add
or
neg
jbe
inc
cmp
cwde
test
sahf
pop
out
xchg
gs
xchg
xor
adc
aam
std
xor
in
pop
mov
cmp
pop
retf
xlat
xor
sub
dec
dec
call
call
div
fs
inc
cmps
aas
bt
out
jne
popa
retf
popa
add
adc
mov
fbstp
dec
sbb
adc
mov
and
je
xchg
lods
scas
push
mov
mov
aad
or
ins
sub
movs
push
(bad)
jmp
xchg
cmp
jl
shl
push
dec
cmp
dec
or
push
call
adc
stos
jnp
cmp
jns
mov
(bad)
sub
fcomp
jo
ds
dec
dec
into
fisub
pop
xor
inc
adc
add
lds
popa
xor
movs
adc
xchg
int
and
call
add
les
retf
sar
ret
mov
xchg
mov
jmp
dec
dec
mov
icebp
sbb
mov
jno
test
cmp
jle
cs
xor
lods
gs
pop
(bad)
mov
gs
mov
ja
inc
jge
ret
out
sub
jne
fidivr
jno
jne
bound
scas
cmp
pop
repz
ss
aad
adc
jns
lock
fcmove
std
xchg
inc
lock
lahf
pop
mov
xchg
dec
mov
sti
(bad)
add
es
jb
mov
dec
fisubr
pop
sar
inc
push
in
retf
jmp
and
sti
mov
sar
or
enter
ficomp
(bad)
je
push
nop
sar
and
or
jmp
inc
test
jecxz
xor
(bad)
inc
cmc
inc
clc
xchg
jge
cmp
inc
retf
sub
call
or
js
pop
scas
jo
jg
iret
add
ins
xchg
ret
lea
stc
clc
adc
mov
sub
xlat
ret
mov
add
stos
jmp
dec
mov
outs
or
sbb
cdq
test
enter
je
and
jecxz
push
jne
cs
sahf
aas
mov
popf
outs
jl
scas
xchg
not
movs
xchg
fstp
mov
xor
imul
data16
push
lods
mov
jb
push
mov
cli
sti
xor
daa
repz
dec
or
push
outs
pop
ja
jno
imul
jle
lahf
je
dec
ins
not
pushf
add
jmp
in
addr16
ret
std
in
xor
mov
std
stos
sahf
push
cmp
xchg
push
jl
push
push
mov
test
add
(bad)
movs
rol
add
add
add
add
icebp
add
add
je
add
add
add
add
add
add
add
add
in
add
add
xchg
jle
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
push
mov
je
cmp
je
call
call
mov
mov
push
mov
call
mov
mov
movzx
movzx
xor
xor
movzx
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
nop
add
add
add
add
push
add
dec
add
add
add
add
add
adc
sahf
fiadd
add
add
add
js
stos
add
popa
add
add
ins
jle
add
add
scas
clc
gs
arpl
and
jae
jae
dec
dec
push
and
and
push
js
scas
xchg
adc
mov
push
lea
add
xor
mov
jne
jne
(bad)
call
lea
dec
xchg
clc
push
test
add
add
mov
add
lea
call
adc
inc
mov
and
in
push
add
add
adc
cmp
test
loopne
add
adc
or
std
je
push
sbb
mov
mov
push
and
jne
push
(bad)
ficomp
test
(bad)
(bad)
clc
test
lea
imul
clc
or
inc
call
(bad)
push
jne
lea
add
add
push
dec
sahf
mov
add
inc
ins
add
inc
gs
mov
outs
gs
inc
dec
gs
jns
dec
pop
gs
add
fs
add
fs
dec
ins
jns
fldenv
dec
outs
jae
push
push
pop
outs
jbe
cs
arpl
jg
add
scas
jmp
add
ds
add
add
add
ret
or
jb
jmp
dec
mov
mov
(bad)
cmp
xor
push
mov
sub
add
mov
adc
loope
xchg
mov
cmc
rcr
cmp
lea
inc
call
outs
add
popf
and
daa
jecxz
mov
les
aaa
cld
addr16
repnz
ret
mov
pop
xchg
fldcw
mov
jl
or
les
xor
inc
stos
fmul
shr
int
shr
ja
push
dec
mov
push
lock
inc
jecxz
movs
adc
pop
loope
xchg
jns
inc
es
cmp
(bad)
mov
ja
mov
jge
repz
out
je
mov
jmp
mov
xchg
(bad)
lods
jae
xchg
jle
shl
or
xor
popf
mov
cs
or
dec
fisubr
fimul
add
and
dec
sub
test
mov
int3
aam
and
test
repnz
pop
push
in
and
cmps
push
fidiv
and
call
jne
mov
xor
sub
icebp
outs
push
stos
sti
jne
push
je
mov
arpl
sub
pop
ins
xchg
mov
adc
in
mov
sbb
mov
or
push
movs
ret
clc
mov
adc
repz
pop
xor
pop
push
mov
dec
xor
shl
mov
lock
or
mov
mov
loope
fdivr
int3
aaa
jb
dec
and
enter
out
fs
xlat
or
mov
jnp
and
test
xchg
xor
push
out
test
int3
test
pop
mov
pop
outs
sbb
sub
outs
jmp
pop
jmp
pop
push
push
aam
cmc
xor
mov
cs
jmp
mov
ret
add
mov
mov
inc
sbb
mov
nop
aad
pop
test
scas
lods
pop
mov
scas
(bad)
mov
dec
cmp
out
sub
fmul
add
mov
aam
mov
jmp
pushf
(bad)
cmps
inc
lahf
cmc
mov
das
cmp
repnz
std
ror
cli
mov
int
jg
sub
mov
xor
pop
sbb
fisubr
sar
cmps
(bad)
jmp
cmps
adc
jg
sub
pop
loope
inc
jle
mov
inc
push
jl
adc
sub
jb
fstp
out
das
push
mov
div
add
sar
or
call
mov
cli
xor
add
sub
jb
or
outs
das
iret
fcom
xchg
(bad)
pushf
jmp
clc
stos
xchg
push
(bad)
jne
je
add
xchg
enter
jl
fs
mov
push
dec
sub
mov
das
in
fst
lock
shr
out
xor
movs
pop
xlat
mov
dec
xchg
test
outs
imul
repnz
jo
pop
cld
jns
cmp
popa
retf
mov
xchg
out
movs
jmp
std
mov
mov
test
mov
jmp
lods
mov
lahf
xchg
inc
pusha
lea
adc
rcl
sbb
dec
add
and
loop
jno
xor
xchg
pop
mov
push
stos
das
pushf
cmp
test
cld
call
test
pop
ins
mov
lds
cwde
mov
retf
push
test
leave
ds
pop
lock
xchg
mov
xchg
dec
(bad)
stos
dec
retf
ins
adc
or
hlt
cmc
cmc
ins
fisub
sub
xchg
lea
ins
push
gs
sti
jge
dec
imul
adc
jle
daa
xor
lods
cmp
xchg
out
retf
js
cld
inc
xor
in
arpl
pop
inc
cmp
ror
add
loop
cld
pushf
cld
psubsw
add
adc
loop
mov
in
imul
dec
(bad)
adc
jo
sahf
repz
stos
add
or
xchg
fs
mov
cmps
aad
imul
retf
cld
call
pop
pop
movs
ret
adc
cmp
call
dec
rol
jp
sub
aad
push
fisub
mov
mov
imul
movs
jo
fs
jmp
out
loop
fcomp
dec
test
dec
mov
fst
add
or
push
outs
fadd
clc
ja
dec
jle
inc
and
mov
xchg
push
or
pop
or
mov
xor
int
jmp
and
(bad)
mov
jae
dec
fst
adc
cmp
dec
pop
xlat
(bad)
dec
push
mov
mov
jno
cmp
push
push
nop
push
or
jnp
jecxz
popf
aad
pop
retf
scas
out
push
pop
ds
xchg
jmp
out
retf
ins
stc
aam
les
lahf
popa
(bad)
xor
or
jl
xor
jmp
stos
adc
inc
xchg
jmp
jo
pop
cmp
sub
ins
sbb
add
and
xor
jg
adc
push
adc
dec
adc
dec
(bad)
outs
rcl
cmp
shr
pop
inc
inc
popf
mov
inc
adc
dec
add
adc
or
cmps
repnz
pop
bound
popa
dec
cmp
or
je
jbe
pusha
aam
mov
jno
dec
movs
jp
leave
pusha
sbb
jne
push
imul
sbb
aam
ds
fadd
in
fimul
sbb
jns
mov
mov
jne
sbb
pusha
(bad)
fiadd
call
add
push
cld
cs
or
mov
sbb
pop
pop
aam
or
jecxz
aad
mov
ds
aad
jmp
sbb
mov
cmc
xchg
cmp
(bad)
fdiv
ins
jnp
sar
xor
and
sbb
frstor
in
jl
enter
shl
xor
bnd
mov
arpl
or
and
imul
jbe
jne
outs
popf
inc
aaa
push
sub
xchg
sbb
and
nop
mov
rol
hlt
in
mov
rol
add
add
push
and
ins
mov
or
lods
scas
ror
bswap
or
retf
(bad)
jmp
in
push
mov
push
jle
ficom
ja
mov
cs
das
es
mov
lods
and
xor
xor
mov
add
xor
sahf
into
cmp
push
fild
cmp
fadd
push
ret
data16
dec
jnp
cmc
push
retf
loopne
mov
neg
fmul
sub
cdq
adc
out
imul
fs
mov
xor
stc
cld
leave
repz
enter
xchg
adc
mov
inc
jmp
push
leave
adc
jmp
and
xor
inc
fdivr
cmps
es
or
sbb
hlt
sbb
mov
lods
stos
and
mov
out
repz
das
mov
cmps
sbb
sub
mov
inc
adc
and
jmp
lods
push
mov
shl
in
mov
test
outs
mov
mov
and
fist
dec
sub
pushf
ret
add
push
inc
fcomp
mov
cmp
fdiv
retf
rol
repnz
cs
xor
cdq
test
scas
inc
xor
and
neg
inc
push
arpl
fsub
jnp
es
dec
es
cli
sbb
mov
mov
push
(bad)
out
jl
arpl
adc
jmp
mov
sbb
sub
dec
fisubr
rcr
adc
iret
daa
loope
push
out
(bad)
aas
repz
mov
aas
adc
inc
lea
jl
mov
and
loop
rcl
cmps
pushf
(bad)
fwait
addr16
popa
add
mov
mov
xchg
addr16
stc
mov
cmp
push
mov
jo
xchg
xor
and
aas
dec
or
sub
lock
pop
xchg
add
lds
mov
pop
test
mov
add
sbb
mov
cmp
mov
sahf
xchg
lahf
ins
fwait
cli
add
cs
lea
adc
movs
retf
ins
adc
in
lock
or
jmp
in
cmp
iret
out
xor
(bad)
and
mov
cmp
xchg
(bad)
jo
jl
rep
fucomp
cmp
cmp
sub
ret
jae
pop
stos
xor
in
add
(bad)
xchg
dec
repz
jecxz
jns
xchg
cmps
fcomp
mov
jl
mov
outs
std
fs
adc
(bad)
rcr
rcl
jmp
or
or
(bad)
inc
jmp
ret
mov
mov
jo
mov
push
dec
add
out
mov
pushf
cmp
lgs
mov
das
mov
jg
sbb
cdq
and
xchg
sub
mov
mov
xchg
pop
sub
mov
inc
and
repz
iretw
loop
jl
sbb
add
outs
jne
sar
mov
mov
push
aas
sbb
or
xchg
retf
xchg
std
pop
mov
sbb
push
cwde
retf
loop
ret
push
pop
jecxz
lods
jmp
aas
or
pop
test
cmp
out
stos
lock
lods
and
repz
dec
nop
jae
dec
daa
xchg
fimul
push
in
or
outs
push
test
stos
ror
add
js
(bad)
in
ins
and
and
aam
fidivr
push
into
inc
and
and
jle
jae
mov
inc
jge
out
mov
fsubr
xchg
mov
inc
cmp
scas
repnz
mov
(bad)
cmp
js
push
arpl
inc
push
cmp
fcmovu
test
sbb
jne
loop
shl
push
les
push
adc
jge
test
xchg
test
xor
xchg
lahf
nop
jne
pushf
mov
jb
pop
icebp
mov
fstp
push
mov
jns
call
and
dec
lock
push
mov
ds
nop
fwait
retf
push
jbe
call
sub
sbb
xchg
inc
and
stc
add
jmp
retf
rcl
jle
mov
or
aam
xor
lods
jle
adc
outs
pop
test
push
add
in
imul
jmp
into
lgs
xchg
or
lahf
sub
push
mov
stc
loope
cmps
push
sbb
jp
mov
call
jg
stos
inc
push
pop
loopne
mov
cmp
add
xor
or
retf
fldenv
mov
outs
sbb
(bad)
jae
push
out
retf
test
es
movs
adc
cmps
sub
pusha
inc
pop
ret
jecxz
sti
mov
out
mov
mov
sub
test
and
repz
fistp
mov
sti
adc
outs
retf
iret
add
sub
in
ror
imul
mov
lods
mov
jo
outs
xchg
or
addr16
jle
dec
adc
and
xlat
popf
mov
xor
xlat
outs
ffreep
sbb
mov
leave
jge
dec
aam
and
jecxz
add
jl
cwde
daa
mov
add
loop
pop
or
and
out
inc
(bad)
mov
(bad)
aam
out
inc
out
mov
xor
mov
out
div
mov
lahf
push
mov
and
adc
push
cwde
mov
popa
inc
mov
add
or
test
arpl
(bad)
das
(bad)
out
dec
arpl
mov
add
std
mov
imul
xchg
and
lahf
jge
sub
inc
scas
sbb
in
imul
mov
and
mov
lods
not
addr16
dec
out
mov
inc
xor
jb
repz
add
cmc
pop
pop
mov
and
call
sbb
lods
out
es
ss
jns
lock
imul
addr16
pushf
adc
add
movs
loop
in
jne
mov
(bad)
mov
in
jnp
test
add
bound
adc
mov
in
mov
xor
or
add
xchg
mov
pop
(bad)
stos
mov
std
or
adc
fidiv
adc
push
mov
cmp
mov
mov
pop
fiadd
and
dec
in
aam
push
dec
pop
fwait
inc
sbb
or
and
push
cwde
cmp
in
bts
scas
iret
dec
mov
mov
mov
pop
cmp
stc
and
int3
and
aam
jle
jae
mov
mov
sub
inc
ins
pop
push
jmp
adc
js
xchg
mov
test
push
fsub
mov
je
movs
addr16
shl
xchg
sbb
test
iret
sbb
fidiv
mov
cmp
jb
retf
xor
jb
xor
ret
xchg
cmp
sbb
lods
push
stc
sub
scas
ins
fstp
mov
int
jns
mov
fdivr
push
mov
cmp
or
popa
mov
dec
aad
pop
cmps
outs
mov
punpckhwd
push
cmps
pusha
push
xchg
dec
in
xchg
pop
movs
movs
mov
sub
pop
cmp
jb
jecxz
xchg
mov
into
mul
sbb
imul
bound
rol
das
shl
sub
and
sbb
or
data16
mov
fidivr
fiadd
popf
add
daa
xchg
xchg
push
jnp
pop
cmps
jno
mov
mov
xchg
dec
jmp
jnp
or
fld
das
hlt
retf
dec
leave
pop
aas
jbe
inc
int3
shl
xor
sub
icebp
pushf
dec
inc
push
rcl
pop
inc
fdiv
pop
mov
pushf
dec
adc
out
xor
loope
mov
jecxz
fisttp
xor
imul
int
in
push
jo
mov
cwde
cld
push
cmps
inc
ss
ret
push
je
jb
jo
ja
sbb
fs
cmp
push
data16
inc
movs
adc
add
loopne
fisubr
jg
jp
ja
or
and
loope
inc
sbb
mov
in
sbb
mov
test
icebp
dec
pop
sub
lock
outs
daa
mov
mov
xchg
ret
or
data16
(bad)
out
mov
xor
and
mov
push
enter
je
jns
stos
inc
cmps
clc
outs
mov
daa
adc
stos
adc
imul
or
stos
mov
cwde
arpl
mov
cmc
push
btr
mov
retf
shr
pop
sbb
push
shl
cmp
stc
and
sbb
jge
aaa
lods
(bad)
out
push
cwde
ja
mov
pop
push
xor
rcr
push
jl
rcr
rol
adc
or
(bad)
mov
or
popa
mov
lea
xchg
pop
inc
test
and
sbb
inc
ds
lods
mov
cmp
std
mov
jle
arpl
push
in
and
retf
dec
xchg
int
call
mov
cwde
shl
addr16
jmp
cmc
out
jecxz
cwde
loope
mov
inc
rcl
inc
cmp
test
imul
cmp
in
nop
dec
imul
inc
in
loop
rol
cwde
test
retf
push
mov
ins
adc
mov
test
cld
pop
pop
js
sub
adc
inc
outs
gs
outs
mov
cmp
mov
dec
inc
adc
add
or
rcr
ins
mov
daa
inc
pop
push
and
aam
xchg
adc
mov
mov
pop
bound
push
sbb
les
mov
repnz
ret
or
jp
mov
mov
ror
aad
ja
mov
sub
mov
ret
mov
pop
mov
out
ret
adc
aam
mov
(bad)
xor
mov
repz
inc
mov
mov
jae
push
jnp
xchg
(bad)
pushf
cmp
sbb
shl
fstp
or
hlt
sti
mov
jle
adc
push
xor
cmps
ja
rcr
les
or
(bad)
out
dec
jae
(bad)
jmp
push
out
mov
mov
pop
sar
jo
fstp
out
movs
iret
xchg
xor
ins
js
inc
dec
and
inc
cmps
xchg
into
mov
jae
and
test
sbb
xchg
pop
jp
pushf
movs
pop
arpl
dec
inc
lods
(bad)
loop
mov
test
jge
xchg
lods
jg
outs
out
loopne
xor
stos
pop
push
pop
cmp
or
ins
in
mov
sub
add
jl
xchg
jbe
imul
imul
rcl
lea
push
xchg
loopne
cmp
mov
mov
or
xor
sar
xchg
into
pop
cmp
jmp
ret
mov
cmc
xchg
and
gs
cwde
(bad)
mov
(bad)
imul
inc
lods
mov
ret
into
push
sbb
(bad)
gs
out
jge
pop
push
xchg
add
adc
int
mov
or
mov
inc
inc
mov
dec
jne
xor
mov
and
mov
jp
repz
sbb
ins
mov
out
jecxz
mov
shl
gs
sbb
mov
xchg
ds
in
jb
pop
lock
push
lods
jb
mov
mov
fisttp
dec
neg
lods
sar
sbb
out
jmp
nop
mov
pop
add
jecxz
dec
pop
mov
shl
ins
(bad)
out
push
test
(bad)
mov
add
nop
test
or
mov
push
scas
adc
aaa
fnsave
inc
jns
gs
sub
mov
pushf
pop
cmp
imul
cli
fmul
add
add
ds
xlat
pop
leave
out
add
into
imul
retf
enter
lea
pushf
in
sub
pop
fisub
out
adc
or
mov
jle
stos
inc
jbe
mov
into
add
div
retf
pop
xor
lea
push
mov
dec
lock
and
call
push
pop
clc
jg
mov
cwde
mov
mov
test
dec
push
inc
xlat
jo
or
inc
add
js
push
call
cld
jns
and
add
mov
add
add
scas
jmp
add
ds
add
add
add
add
add
pop
add
add
ja
mov
(bad)
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
outs
inc
or
add
add
add
add
add
mov
add
add
add
add
shr
add
add
xchg
add
add
add
pushf
add
in
and
pop
add
push
outs
imul
adc
jne
push
leave
aaa
mov
popa
xchg
iret
mov
inc
cld
inc
lea
add
dec
mov
mov
inc
inc
std
and
call
pop
add
ret
push
add
add
mov
cmp
lea
(bad)
ror
rol
add
add
push
add
test
adc
(bad)
inc
cld
inc
inc
inc
adc
inc
or
(bad)
call
(bad)
jge
push
push
inc
push
adc
(bad)
std
sar
mov
ret
or
lock
(bad)
inc
add
add
and
add
add
add
add
add
add
clc
add
add
push
je
imul
outs
pusha
imul
inc
add
add
mov
inc
shl
inc
gs
gs
ins
and
js
push
ins
and
add
dec
ins
popa
jne
gs
je
outs
push
ins
arpl
add
add
add
xchg
add
les
add
add
push
add
mov
add
add
add
and
push
(bad)
cdq
ss
pop
test
push
popf
push
dec
add
jmp
stos
xchg
sub
cmps
mov
inc
push
stos
sbb
out
push
in
into
pop
push
cmps
inc
jmp
out
(bad)
fimul
push
pop
scas
inc
fimul
jns
mov
pop
movs
xlat
outs
stc
aad
sub
xchg
pop
in
jb
pop
outs
movs
repz
add
movs
dec
or
jmp
and
sub
arpl
fstp
movs
mov
lock
xchg
movs
xchg
xchg
mov
ret
ror
inc
fimul
cmp
or
out
pop
pop
aaa
push
popa
out
in
jmp
pop
arpl
or
mov
or
imul
jp
out
jo
jnp
xchg
pop
and
ret
pusha
mov
mov
adc
jmp
(bad)
mov
stc
test
pop
and
ss
inc
cmp
outs
push
cmp
test
sbb
sar
pavgb
dec
mov
jo
xor
jns
cs
sub
ret
cld
lahf
icebp
mov
and
lea
cmp
test
mov
in
sbb
retf
add
cmp
and
lea
neg
pop
(bad)
test
dec
lods
and
mov
sub
out
ins
outs
xchg
xchg
cmp
aad
inc
add
test
fcom
sub
lock
fdivr
out
lods
cwde
adc
dec
pusha
ja
dec
jae
pop
js
(bad)
hlt
xchg
xchg
call
mov
shl
mov
test
repnz
jae
ins
xor
jle
add
mov
cmp
xchg
push
pop
cdq
mov
and
into
ret
jle
push
mov
(bad)
cmp
(bad)
xor
xchg
pop
daa
popf
ins
sub
mov
mov
add
mov
cmp
stc
push
call
cmp
aas
imul
mov
inc
mov
stos
(bad)
scas
jmp
jo
push
ss
jb
test
mov
mov
ins
push
aam
inc
add
jns
cmp
jnp
rcr
ror
push
dec
pop
and
inc
and
ds
xchg
cmp
pop
lahf
push
sub
adc
jl
pushf
xor
imul
(bad)
out
push
push
ret
iret
adc
xchg
adc
add
inc
sbb
lods
mov
pop
jp
push
jge
sub
clc
pop
inc
dec
cmps
push
psraw
arpl
popa
in
cwde
push
stos
xor
cmp
lds
mov
add
(bad)
sub
scas
pop
lods
dec
out
pop
sti
jmp
call
jb
movs
cli
xchg
xor
ja
jl
jle
push
mov
mov
or
int3
cdq
lods
ss
es
(bad)
add
sbb
jp
push
loop
gs
push
stc
jl
ss
mov
and
bound
mov
pop
cmp
in
inc
mov
mov
mul
es
(bad)
jne
inc
mov
pop
lods
outs
icebp
xchg
add
lahf
mov
push
sub
mov
leave
dec
stos
aad
fisub
mov
loope
push
inc
mov
repz
mov
cmp
daa
lahf
fs
das
popa
fnstcw
cld
loope
inc
sub
cmc
nop
fisub
hlt
mov
sti
ror
pusha
int
push
ret
inc
or
pushf
add
dec
or
pop
inc
and
jno
sub
repz
pop
jo
xchg
daa
and
jne
jmp
sbb
sbb
das
xlat
jo
push
or
jnp
push
loope
retf
mov
(bad)
jno
jmp
aaa
out
rol
mov
dec
pop
push
mov
(bad)
adc
stos
sbb
(bad)
das
xchg
jae
test
test
xor
add
cmps
inc
cwde
mov
out
fwait
pop
pop
mov
enter
hlt
ret
mov
mov
xor
jnp
cmp
push
scas
movs
mov
mov
push
or
aad
push
mov
pop
test
mov
and
cmp
retf
push
add
out
shl
or
adc
(bad)
push
adc
xchg
ror
pop
push
rcr
std
mov
or
jmp
inc
inc
out
jge
nop
outs
push
aad
outs
add
pop
mov
mov
xchg
das
int
or
fsubr
xor
ins
push
in
dec
sti
mov
xor
movs
clc
mov
and
clc
pop
test
add
int3
inc
push
mov
imul
sub
rcl
mov
pop
fs
xchg
clc
mov
push
imul
dec
adc
add
mov
test
push
dec
mov
inc
pop
pop
mov
or
das
outs
test
inc
into
inc
sti
jg
and
loopne
xchg
push
lods
aaa
mov
push
outs
ins
inc
ins
cld
fldenv
pop
xchg
bound
lock
xor
dec
cmps
cmps
sub
sbb
jmp
in
das
add
jb
sbb
and
stc
and
fbstp
dec
mov
mov
pop
inc
rcr
je
xlat
xchg
stc
jle
mov
xor
xchg
clc
sbb
js
popa
movlps
push
jne
mov
xchg
push
(bad)
fidiv
add
pop
xchg
shr
ss
cmc
and
loop
push
in
lods
xor
lods
mov
jmp
sahf
xchg
mov
sub
pop
fisub
test
inc
xlat
and
mov
adc
sbb
xor
pop
ret
hlt
mov
imul
aam
test
imul
das
lds
rol
je
and
neg
xor
aam
xor
add
jns
pop
mov
(bad)
inc
push
shr
push
test
bound
imul
xchg
fisubr
push
jl
in
push
bound
lods
push
pop
xchg
out
add
xor
gs
ins
jmp
xor
clc
fldcw
mov
jg
xor
or
mov
mov
dec
imul
in
xor
xchg
mov
jne
inc
pop
popf
lahf
sub
fld
movs
scas
rcr
js
jecxz
pop
gs
fiadd
pushf
sub
mov
fiadd
mov
jbe
mov
push
jl
in
nop
loop
push
out
imul
jle
push
mov
jp
push
test
std
(bad)
pop
cmp
mov
push
and
out
jg
sbb
(bad)
xchg
cmp
xchg
and
push
aas
pop
ins
addr16
(bad)
add
mov
cwde
(bad)
iret
into
mov
jg
cmp
fistp
iret
add
(bad)
stos
mov
push
js
adc
into
cdq
sub
push
cmc
cmp
jb
mov
ins
lds
mov
test
push
popa
cmp
sub
ss
jl
retf
shl
cs
fwait
sbb
jns
imul
mov
or
loope
jge
push
cli
test
lock
add
jmp
fild
xchg
lock
pushf
jge
cmp
iret
adc
sub
sar
arpl
inc
cmc
int
mov
mov
js
jnp
popf
mov
or
mov
jecxz
or
dec
dec
addr16
dec
adc
inc
mov
mov
sub
sahf
stos
sbb
mov
int
push
jmp
pop
mov
add
jae
mov
mov
and
mov
lods
mov
mov
ret
pop
pop
rol
into
in
test
hlt
rol
or
xchg
jbe
inc
dec
lods
neg
(bad)
xchg
push
mov
fisubr
push
mov
test
outs
cli
out
mov
movs
push
fsubr
call
mov
fbld
stos
push
lfs
cmp
(bad)
jo
call
fs
or
sti
out
sbb
hlt
lock
xor
lahf
jmp
inc
jmp
mov
inc
cmp
stos
(bad)
vmwrite
call
sbb
pop
sbb
jns
cli
test
hlt
xor
out
push
(bad)
movs
mov
sti
les
jnp
cli
div
call
gs
mov
pop
div
pop
push
jne
jg
pop
push
repz
pminsw
pop
fisttp
xor
cmps
retf
aad
lea
jle
inc
sbb
sbb
mov
je
dec
adc
jbe
stos
xchg
mov
pop
cs
jno
xlat
xlat
ror
aam
xor
repnz
or
scas
dec
aam
jno
in
imul
mov
lods
push
dec
fwait
add
je
push
mov
inc
xlat
(bad)
push
dec
or
stos
scas
mov
xlat
std
call
xor
out
es
lods
cdq
in
(bad)
xchg
rol
fistp
mov
mov
dec
and
mov
fidiv
add
int3
xor
cmova
cmps
test
and
jns
ret
pop
into
les
gs
popa
rol
int
jnp
and
(bad)
fsubr
mov
lods
sbb
add
int
stos
xor
adc
push
jmp
data16
mov
frstor
cli
push
cmp
mov
mov
and
and
bound
repz
push
ds
jp
enter
cld
mov
shr
mov
push
test
mov
sar
mov
test
(bad)
sbb
dec
and
mov
push
push
ja
mov
or
pop
imul
cmp
out
jecxz
sbb
retf
arpl
int3
dec
cmc
inc
add
mov
(bad)
add
mov
inc
jmp
(bad)
(bad)
cli
xchg
aas
gs
cld
jmp
xchg
add
dec
es
sub
std
jecxz
inc
mov
mov
cmp
push
push
pop
add
shl
les
pop
mov
aad
dec
xchg
dec
fwait
jmp
push
iret
mov
test
mov
fwait
popa
cmc
xor
imul
out
mov
push
js
(bad)
xchg
add
xchg
mov
fdivr
push
(bad)
in
cmp
xchg
in
adc
stc
lahf
ror
retf
bnd
sub
inc
ror
inc
mov
mov
push
push
mov
add
inc
mov
loope
mov
push
pminsw
dec
fs
push
aas
add
shl
mov
inc
fwait
int
xor
sbb
jge
fidiv
and
jmp
shl
int
(bad)
fbld
mov
adc
xchg
mov
mov
or
movs
inc
pop
imul
inc
cmps
pop
dec
aam
test
mov
push
out
cs
test
fld
xlat
aas
xor
mov
sbb
shr
aam
lea
iret
sahf
sub
jno
pop
fnstsw
dec
pop
(bad)
loop
nop
outs
aad
fldenv
(bad)
fild
jmp
cld
aam
mov
cmp
adc
imul
int3
inc
dec
daa
ss
fidiv
inc
daa
mov
punpckhwd
xchg
jmp
test
add
repz
xchg
pop
retf
xchg
dec
push
dec
mov
out
sbb
jl
cmps
mov
int
scas
sbb
out
cmps
imul
nop
data16
cmp
cld
js
test
jbe
mov
int3
adc
pop
cmp
rol
clc
loope
mov
sahf
retf
bound
xor
dec
xor
sub
pop
push
(bad)
and
sub
xor
arpl
sub
cs
mov
aaa
pushf
jle
sbb
xchg
or
cwde
mov
jb
jge
sahf
fldcw
cmp
jo
sbb
and
pop
in
mov
sar
mov
inc
sub
je
sbb
fdivr
add
es
dec
adc
stos
not
push
cmps
icebp
mov
mov
and
push
or
or
scas
xchg
loope
(bad)
arpl
pop
and
ss
jmp
lods
enter
jl
push
mov
leave
js
(bad)
stc
in
add
(bad)
out
xor
push
push
mov
dec
cs
fadd
inc
jnp
stc
or
inc
inc
jecxz
out
push
gs
ds
imul
jp
push
aaa
dec
sub
rcr
les
pop
call
xchg
xchg
lods
les
jmp
inc
mov
lea
repnz
push
jns
mov
jbe
shl
dec
out
push
je
or
pop
loope
and
cmps
fld
fadd
es
lods
cmps
jg
or
cmp
sti
sbb
call
rcl
or
push
xchg
cmc
push
fs
pop
fnstsw
sar
and
mov
or
leave
les
mov
scas
push
mov
call
push
enterw
mov
mov
add
clc
pop
inc
mov
jl
pop
xchg
cwde
lock
aas
sbb
sub
gs
sub
push
inc
mov
and
adc
and
frndint
movntq
ss
push
(bad)
push
sbb
es
movs
imul
mov
ror
mov
xor
add
sub
inc
xchg
inc
cwde
popa
dec
es
xor
pop
cdq
mov
and
push
js
and
mov
fst
cmp
or
dec
dec
jl
pminub
cmp
leave
sbb
sub
push
cmp
ja
call
hlt
fwait
inc
add
add
cli
popa
daa
cmp
push
les
mov
cmps
shr
or
xor
pop
aaa
push
mov
dec
in
sti
int
sbb
jp
iret
mov
movs
arpl
rol
sub
add
sbb
jnp
pushf
retf
add
icebp
neg
sar
shl
into
dec
sbb
mov
mov
and
(bad)
cwde
add
inc
pop
add
fld
xor
xor
mov
cmp
xor
jge
(bad)
loopne
in
repz
std
aad
mov
and
cmp
std
fisub
cdq
sub
add
popa
outs
xchg
test
mov
adc
or
shl
jl
bound
out
cld
std
push
push
repnz
inc
inc
(bad)
fxch
addr16
movs
loope
push
dec
sti
(bad)
fidivr
loope
fcom
push
xor
xchg
out
push
ret
pusha
xlat
test
fcom
inc
lock
push
jle
mov
lock
fidivr
or
ror
aas
push
mov
jne
push
cdq
scas
or
jno
mov
outs
stos
cdq
push
loope
ds
leave
ss
aam
add
aaa
cmp
sahf
movs
loopne
(bad)
push
test
mov
in
enter
dec
ja
or
jae
adc
sub
mov
xlat
or
cmp
or
push
popa
push
inc
or
setle
mov
mov
jecxz
cmc
push
test
test
and
fidivr
sbb
icebp
out
mov
mov
pop
pop
jno
push
jae
pop
fadd
xchg
dec
sar
cmc
lods
mov
adc
cwde
push
rcl
mov
mov
into
data16
and
not
ret
xchg
push
mov
mov
int3
ja
jbe
cmp
ins
lahf
aam
sbb
fs
neg
pop
or
sti
pop
pop
std
jg
enter
adc
adc
cwde
cli
and
dec
dec
and
xchg
jp
xchg
xor
push
add
mov
mov
push
fnsave
push
aam
ss
and
fistp
call
xchg
popf
fcom
(bad)
mov
and
sahf
call
add
mov
inc
shl
and
or
sbb
cmp
jae
call
adc
nop
test
or
pandn
das
mov
aam
xlat
and
shl
pop
xchg
xchg
xchg
das
adc
pop
les
pushf
sahf
sub
sbb
sub
fld
gs
(bad)
stc
cmp
(bad)
icebp
mov
call
fxch
add
imul
daa
dec
inc
pop
cmp
push
ds
sbb
aas
ror
movs
aad
fadd
(bad)
adc
sub
pop
or
pop
ja
xchg
push
mov
ins
or
xlat
pop
ret
pushf
adc
aam
sub
xchg
add
out
movs
cmps
mov
sbb
std
es
(bad)
jb
out
mov
sbb
repz
xchg
sbb
call
jg
and
test
sbb
retf
ret
mov
sbb
cmc
push
repnz
out
outs
inc
sbb
scas
(bad)
aas
xchg
enter
xchg
stos
add
(bad)
outs
pop
fistp
out
cmp
add
mov
sub
into
inc
pop
cli
je
inc
adc
fisttp
add
or
xlat
in
cmp
add
inc
jp
imul
cmp
repz
push
out
std
jae
aaa
mov
inc
pop
aad
(bad)
cmps
and
pop
in
out
jb
mov
adc
fwait
jmp
aas
sti
push
mov
push
mov
xchg
sbb
pop
call
mov
dec
cs
or
mov
dec
mov
adc
repnz
xor
xchg
ja
jo
dec
call
imul
dec
into
mov
adc
inc
sahf
push
add
inc
push
mov
nop
into
clc
fdivr
mov
sub
push
jno
lods
or
push
jno
xchg
add
and
out
add
daa
je
adc
retf
inc
inc
out
push
(bad)
std
fcomp
jp
xchg
retf
sbb
push
cmp
push
push
loopne
mov
push
enter
mov
jbe
loopne
sti
or
pop
ret
pop
lods
cmc
sbb
xchg
fld
retf
scas
pop
inc
cmp
inc
(bad)
gs
or
pop
jl
int
pop
pusha
jecxz
ins
add
cli
imul
add
or
into
push
and
dec
bound
xchg
pop
jbe
add
sub
inc
cmp
movs
inc
(bad)
imul
xchg
dec
mov
shl
je
ror
mov
fadd
pusha
mov
mov
sub
cmp
push
inc
bswap
pop
cmp
mov
pop
lahf
lods
pop
adc
(bad)
cmc
push
pop
cmps
xlat
out
xchg
cmp
sbb
or
movs
aas
test
or
jg
xchg
outs
mov
adc
pop
inc
sbb
loopne
imul
aam
inc
mov
stc
frstpm(287
(bad)
sbb
cdq
test
add
add
add
add
add
loop
add
xchg
add
les
or
push
add
add
add
mov
add
add
add
xor
add
add
jo
jo
hlt
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
je
inc
add
add
pop
and
and
outs
and
les
jmp
xor
add
add
add
pop
add
add
push
xchg
or
add
or
add
add
add
cmps
sbb
sbb
call
xor
add
and
jb
push
dec
(bad)
xor
fs
add
push
outs
or
cld
stc
xor
clc
dec
inc
in
jmp
fdivr
or
dec
retf
mov
je
inc
adc
leave
dec
bswap
cld
(bad)
dec
pop
in
mov
cmp
pop
ret
in
add
adc
sbb
add
adc
out
(bad)
push
inc
cld
stos
aam
(bad)
rol
adc
loopne
mov
adc
xor
rol
xor
push
add
(bad)
jmp
std
pop
std
je
push
xor
and
rcl
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sar
jo
add
push
call
(bad)
add
push
add
cld
mov
add
adc
sbb
add
sbb
sbb
sbb
cmp
out
add
sbb
jae
outs
gs
ins
movs
ins
ins
add
inc
je
add
movs
outs
mov
gs
imul
jae
ins
je
lahf
push
ins
imul
inc
push
jne
gs
jae
xor
jae
jae
loopne
ins
add
add
add
rol
add
add
add
xor
add
ret
fdivr
out
das
addr16
mov
dec
jae
dec
aad
xchg
(bad)
sbb
ss
mov
fwait
sub
sbb
test
mov
arpl
xchg
in
popa
pop
sbb
leave
mov
push
sahf
adc
arpl
mov
fimul
aas
mov
xchg
(bad)
ror
(bad)
iret
outs
addr16
ins
rol
and
mov
sub
push
inc
sbb
sbb
je
shr
arpl
mov
enter
sub
jb
jbe
in
sub
xor
sub
mov
xor
adc
inc
jnp
shl
fist
ret
cmc
mov
clc
shl
mov
and
dec
xchg
not
cmp
or
mov
(bad)
ins
xchg
or
daa
std
movs
dec
or
mov
stos
js
retf
jecxz
inc
mov
dec
pop
int3
cwde
pop
jmp
and
test
sbb
mov
nop
aaa
xor
push
test
movs
enter
in
sub
cmps
cmp
adc
cli
mul
bound
xchg
xchg
jb
cmp
mov
leave
mov
repz
mov
(bad)
jmp
xor
pop
cmps
cmp
imul
loopne
aam
ret
inc
(bad)
aam
imul
xlat
push
cmp
ret
retf
rol
add
retf
inc
mov
and
xchg
inc
lods
scas
push
push
inc
cwde
push
adc
(bad)
loope
imul
mov
lea
sub
fcmove
sub
into
jmp
daa
inc
in
dec
push
int3
in
fstp
das
xor
xor
inc
inc
arpl
test
into
movs
cli
mov
jg
mov
hlt
out
xor
retf
xor
fsubr
mov
adc
out
xchg
adc
ror
mov
shr
and
out
push
movs
mov
outs
jle
pop
sbb
mov
data16
pop
add
pushf
sbb
les
inc
aad
ins
add
or
adc
fwait
sub
popf
ins
test
pop
mov
in
adc
lods
stos
xor
mov
fistp
inc
cmp
fmul
mov
dec
xor
xchg
aad
xchg
addr16
lock
inc
or
xlat
adc
jp
repz
inc
push
retf
pusha
dec
and
cmps
mov
jb
mov
inc
das
lahf
jno
dec
mov
and
inc
icebp
mov
lahf
pop
xchg
ds
shr
dec
fdiv
sub
vmovaps
in
jbe
push
push
cmp
jns
fwait
mul
cmc
mov
adc
and
imul
ret
sti
bound
hlt
fwait
idiv
pop
lds
rcl
or
sub
out
mov
pop
dec
aad
ds
or
xor
sbb
ss
sbb
loope
fadd
mov
xchg
dec
popf
or
inc
add
ds
cli
xchg
data16
hlt
mov
add
dec
push
out
pop
adc
fstp
test
fwait
dec
sbb
idiv
pusha
sti
adc
xchg
aaa
sbb
stc
sbb
shl
dec
data16
add
shl
or
mov
test
gs
enter
mov
sbb
fs
lds
dec
xor
add
aas
xor
dec
call
bound
mov
dec
sub
std
push
jmp
fs
enter
nop
ror
fadd
and
(bad)
scas
mov
hlt
outs
popa
in
aad
repz
xchg
push
mov
mov
jle
push
cmp
xor
and
xchg
mov
gs
sti
(bad)
outs
pop
popa
mov
ja
add
arpl
(bad)
popa
add
into
push
bound
daa
fadd
sbb
clc
cmc
ret
mov
jl
adc
push
push
call
(bad)
out
inc
xor
movs
sbb
imul
xchg
fdivr
test
lods
sbb
cmc
xchg
push
call
or
aaa
into
sbb
(bad)
jbe
cmp
sbb
mov
mov
mov
cmp
mov
shl
in
and
jmp
fsub
gs
pop
jnp
call
outs
pop
fmul
int
scas
sti
dec
imul
lods
or
movs
mov
int
out
cmps
sub
retf
sbb
cmp
push
sbb
pop
dec
(bad)
out
int
out
js
adc
or
sbb
sbb
test
sub
adc
addr16
mov
mov
dec
or
or
ja
or
lods
mov
stc
xor
push
repz
jae
add
xor
fdiv
and
or
shr
inc
sub
dec
jg
lea
iret
test
rcl
add
mov
sub
cmp
dec
pop
dec
xlat
mov
fnstenv
sbb
mov
test
out
iret
call
xchg
addr16
mov
leave
std
dec
push
movaps
sub
xor
mov
and
push
lock
fidivr
and
sub
repz
sbb
and
leave
adc
shl
add
(bad)
cli
movs
pop
push
xchg
cmps
and
add
in
(bad)
push
jno
jne
shr
imul
jne
gs
nop
shl
stc
ss
mov
jle
outs
enter
jmp
in
nop
mov
out
inc
mov
arpl
xor
jmp
stos
frstor
mov
mov
mov
sbb
cmc
int3
push
inc
cld
cwde
lods
retf
pop
sahf
mov
lods
pop
add
loopne
out
sub
or
bound
jp
sbb
jg
(bad)
pop
shl
xor
mov
in
(bad)
fwait
jmp
jb
and
adc
jg
jmp
(bad)
push
xchg
push
xchg
cmp
loope
in
add
or
scas
and
push
outs
aad
repz
into
inc
dec
or
adc
mov
adc
pop
xlat
rcl
cmp
mov
leave
push
stc
in
xchg
jle
jo
ins
cmp
pop
sbb
aas
mov
jmp
test
(bad)
adc
retf
mov
xor
and
stos
and
mov
movs
jb
add
(bad)
cmp
and
add
mul
jg
cmps
in
or
or
out
cmps
out
and
dec
(bad)
stc
cwde
sbb
and
sbb
cdq
dec
outs
(bad)
and
mov
jge
loopne
adc
jle
mov
push
pop
or
bound
loopne
cmp
xchg
push
out
ficomp
or
pop
xor
sub
std
cmp
push
sti
sar
sti
xchg
mov
jns
xor
into
fist
xchg
push
out
sbb
cmp
enter
cli
dec
in
ret
jae
aad
dec
jl
(bad)
pop
mov
movs
push
cmp
dec
sub
adc
fwait
sti
sbb
sahf
call
aam
in
mov
dec
pop
pop
shr
mov
clc
dec
test
jmp
int
(bad)
pop
cmp
adc
or
dec
aaa
sbb
hlt
jne
(bad)
mov
xor
mov
ss
call
jecxz
cmp
imul
fwait
scas
sub
pusha
jmp
popa
lods
mov
mov
and
mov
and
dec
sub
inc
dec
out
(bad)
cdq
imul
mov
and
jmp
mov
xor
fwait
mov
mov
hlt
xchg
and
xor
inc
mov
lods
adc
push
stc
mov
aaa
cmp
jle
scas
xchg
xchg
adc
add
dec
push
(bad)
shr
ja
in
jmp
ror
fcom
pop
xchg
or
(bad)
or
or
xchg
fs
arpl
test
lods
mov
dec
and
outs
(bad)
dec
mov
xchg
jle
cmp
fwait
xlat
rcr
adc
ss
cmp
xor
dec
cmp
inc
aam
cmp
fnsave
sbb
in
cmps
mov
rcr
sub
mov
jmp
or
shl
test
pop
int3
pushf
sub
pop
inc
aad
and
mov
inc
(bad)
fcom
push
or
pop
(bad)
pop
arpl
mov
sbb
push
mov
dec
(bad)
and
fs
rcl
add
shl
ins
lds
loop
mov
sub
jns
mov
outs
sbb
sbb
jle
es
dec
and
sahf
ret
sub
shl
xchg
inc
mov
outs
mov
cmps
call
jns
cmps
mov
sbb
jmp
push
cmp
aad
mov
push
dec
adc
cdq
jmp
fs
sar
xchg
test
adc
cmp
or
xor
mov
or
jmp
daa
xchg
and
dec
dec
push
mov
retf
push
adc
int3
cwde
dec
cld
xchg
movs
sahf
push
adc
xor
push
xchg
jb
cli
ins
add
fcomp
ficomp
fisub
dec
mov
sbb
shr
fs
outs
jbe
ins
mov
adc
jne
cld
scas
jl
dec
push
mov
sub
das
ins
push
jbe
mov
mov
push
call
aad
int3
xchg
(bad)
cmp
mov
je
retf
xchg
ror
out
call
inc
xlat
ins
jp
inc
call
das
fistp
add
les
mov
out
xchg
xor
sar
stc
fidivr
mov
add
dec
and
jmp
mov
nop
xor
and
mov
mov
shl
jns
mov
inc
(bad)
(bad)
sbb
pop
ds
arpl
sbb
mov
xor
loope
scas
in
mov
pushf
inc
xchg
scas
xor
cmp
outs
mov
pop
js
adc
rol
and
call
es
mov
mov
inc
ins
mov
xchg
sub
sti
neg
aad
jo
popf
push
mov
imul
xchg
test
or
aad
mov
bound
sbb
jno
dec
fldl2t
jmp
lods
mov
ret
stos
ret
dec
mov
clc
push
push
pop
mov
aaa
out
xlat
shr
cmps
call
jmp
dec
xor
push
popa
les
(bad)
cmc
mov
add
cmp
aad
cld
popa
shr
push
xchg
pop
loopne
cdq
mov
sub
ret
pusha
es
mov
xor
mov
mov
and
out
mov
outs
push
stc
cmp
stos
sahf
jmp
jb
fmul
pop
jo
dec
add
popf
in
(bad)
mov
dec
mov
sub
in
dec
aad
sub
or
push
sbb
or
and
dec
scas
jb
test
mov
das
(bad)
push
or
mov
xor
add
rcr
sub
out
add
push
jle
push
jle
xchg
std
xor
pop
xor
mov
lods
inc
loope
sbb
or
scas
adc
adc
xchg
fcomi
ds
jmp
or
push
out
ret
ja
mov
outs
inc
test
dec
inc
dec
imul
in
sahf
hlt
xor
pop
pop
mov
jne
out
ror
add
jno
jl
adc
movzx
sub
pop
int
add
(bad)
das
dec
daa
ja
mov
popa
jns
enter
mov
ss
jnp
test
push
pop
dec
mov
mov
sub
jmp
pop
push
sbb
sub
lods
lods
xor
mov
loopne
cwde
out
mov
test
clc
cmps
cs
xchg
cld
pop
and
int
popf
sbb
cmp
and
mov
dec
mov
push
sti
es
xchg
jp
add
xchg
pop
fisub
outs
dec
shl
jge
sbb
inc
pushf
xchg
test
mov
inc
ret
leave
xlat
sbb
in
mov
mov
jnp
std
jnp
aam
or
push
fucomp
jns
stos
pop
mov
in
call
mov
das
stos
cld
(bad)
imul
fisubr
mov
xor
push
sbb
ret
iret
xor
cmc
add
sbb
sbb
fadd
xchg
pop
dec
pop
pop
setp
push
shl
nop
ins
popa
lods
inc
cwde
push
add
ret
loop
cs
jns
jl
(bad)
cmp
push
mov
sub
call
sub
mov
dec
dec
and
cmp
pop
call
jecxz
ds
push
ret
test
ud2
lods
adc
xchg
jae
outs
cli
ret
jle
mov
jae
rol
jp
fdivr
clc
xor
push
clc
mov
sbb
dec
add
dec
or
xchg
in
loop
(bad)
xor
out
xchg
addr16
dec
repnz
mov
jns
add
mov
jmp
adc
ins
pop
add
cmps
adc
nop
sti
out
push
int3
retf
mov
enter
and
fist
add
jecxz
mov
repz
mov
pop
test
(bad)
jae
jno
sub
xor
ret
cmove
mov
ret
xchg
push
cdq
repz
mov
outs
shr
imul
mov
cdq
cmp
fs
push
mov
stos
dec
inc
mov
mov
loope
(bad)
pop
and
hlt
inc
sbb
out
test
inc
cmps
daa
stos
sbb
out
push
and
and
jno
mov
add
xor
jns
sbb
push
push
sti
push
loop
out
and
xchg
fistp
pop
ins
inc
mov
and
add
cld
pop
xchg
jle
movs
jo
je
cmp
ret
ins
daa
xchg
stc
test
lea
(bad)
or
enter
sbb
inc
popf
dec
movs
jae
pop
mov
(bad)
mov
mov
xchg
xor
fld
imul
rcl
int
push
daa
test
mov
xchg
cld
xchg
call
pop
ins
test
push
and
sahf
xlat
lahf
cmp
lds
jne
cdq
sub
outs
mov
and
lock
mov
movs
mov
add
ss
inc
cmps
icebp
jae
xchg
loope
cwde
cmc
imul
mov
cli
clc
(bad)
push
fucomp
push
lock
sahf
adc
sti
mov
shl
int3
fdivp
mov
fld
mov
in
dec
jb
push
jbe
cld
setg
mov
inc
cmp
repz
or
push
mov
int3
cli
loope
fnstcw
push
cld
mov
jmp
ja
jns
push
jno
ja
add
xrelease
pop
fs
xor
nop
dec
sbb
fs
lahf
or
call
mov
add
or
sbb
dec
mov
pop
xchg
sbb
mov
loop
mov
leave
in
lea
lahf
outs
mov
lahf
inc
pop
(bad)
pop
stos
retf
push
nop
loopne
mov
leave
xchg
dec
mov
ret
stos
out
test
arpl
ficom
out
mov
mov
(bad)
call
stc
hlt
(bad)
(bad)
cmps
cld
xor
nop
lds
and
retf
and
jmp
dec
or
xor
dec
pop
or
mov
and
push
pop
xor
(bad)
(bad)
hlt
test
ja
movs
jmp
jbe
fstp
xlat
in
mov
cmps
bound
xchg
sbb
xlat
push
mov
and
outs
xchg
imul
xchg
pop
popa
xchg
daa
cmp
stc
imul
adc
scas
lahf
int3
lahf
xchg
and
clc
jns
jmp
fwait
clc
sub
cld
mov
(bad)
jns
mov
stc
out
and
aaa
leave
test
adc
and
mov
adc
pop
pop
sub
adc
mov
adc
call
jmp
pop
outs
mov
xchg
aad
pop
mov
sub
push
mov
add
movs
or
mov
repz
inc
fisub
test
in
aad
push
icebp
pop
push
xchg
sub
push
push
repnz
and
cld
shr
xchg
mov
sbb
out
push
fsubr
iret
jmp
outs
mov
stos
mov
icebp
push
jmp
sbb
mov
pop
movs
sub
or
sbb
imul
mov
aad
push
xchg
cli
mov
sub
xor
mov
add
mov
pusha
es
loopne
gs
xchg
cmp
ret
or
scas
sbb
push
inc
jne
ret
jb
mov
or
inc
stc
xor
jmp
xor
popf
shl
cmp
jg
iret
xor
cmps
cwde
test
cwde
sahf
sub
jns
int3
clc
cdq
ficomp
(bad)
mov
div
jmp
xchg
add
bound
mov
dec
jns
cld
xlat
xchg
jbe
movs
sub
pop
pop
test
mov
pop
sub
and
xchg
scas
and
aas
xor
lods
inc
(bad)
movs
xor
and
mov
std
add
and
adc
xchg
mov
mov
mov
jge
mov
sbb
popa
add
adc
xchg
mov
std
xchg
cmp
pop
addr16
scas
jno
ret
jge
adc
icebp
lock
test
push
in
inc
mov
fsub
cmps
or
push
add
xchg
(bad)
in
cmps
xchg
mov
add
ret
int3
and
call
cmp
dec
jp
mov
cmp
jl
lea
xchg
into
jne
inc
ss
xlat
push
aad
leave
pusha
das
jmp
dec
pop
sbb
(bad)
addr16
mov
pop
sbb
sbb
movs
pop
or
mov
adc
sub
out
rcr
out
je
dec
inc
push
ins
push
push
mov
les
call
pop
inc
(bad)
mov
push
or
popf
mov
sub
push
in
pop
fst
sbb
out
mov
jmp
and
and
ds
sbb
or
out
mov
lods
mov
adc
add
lock
xchg
xchg
mov
sub
les
mov
xchg
mov
ficom
jg
add
nop
mov
jecxz
cmps
ret
cmp
iret
cld
scas
ins
mov
jmp
cs
inc
add
xor
mov
add
rol
add
add
add
add
add
imul
add
add
xor
add
or
add
add
or
in
in
test
add
add
(bad)
jmp
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
or
mov
inc
mov
push
push
push
push
push
call
add
mov
cmp
jbe
and
cmp
jne
call
mov
add
push
push
call
mov
mov
movzx
mov
movzx
sub
test
je
mov
add
mov
push
push
push
push
call
mov
sub
mov
add
mov
mov
sub
mov
cmp
jge
mov
mov
jmp
fld
call
inc
mov
mov
mov
mov
mov
sub
test
je
call
jmp
and
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
movzx
mov
push
call
mov
and
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzx
mov
inc
mov
add
movzx
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzx
mov
dec
mov
add
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
push
call
mov
push
call
cmp
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
aam
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
(bad)
add
int3
aam
add
aam
add
add
lods
aam
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
aam
add
aad
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwde
aad
add
aad
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
(bad)
add
dec
(bad)
add
push
(bad)
add
pop
(bad)
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
(bad)
add
cwde
(bad)
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
cld
xlat
add
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
fadd
add
add
jl
add
je
add
ins
fadd
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
fadd
add
fadd
add
fadd
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
fld
add
add
mov
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
fld
add
fld
add
add
or
add
adc
add
sbb
add
and
add
aaa
fiadd
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fiadd
add
add
push
fiadd
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistp
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
