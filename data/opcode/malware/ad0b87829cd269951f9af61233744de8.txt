not
push
out
xchg
pop
mov
call
pushf
outs
xchg
call
aam
push
adc
dec
and
shl
jb
inc
inc
sbb
(bad)
loopne
mov
fld
addr16
jbe
push
and
rcl
mov
xor
ret
cmp
je
sub
sti
fiadd
xchg
enter
movs
int3
shl
mov
cmp
push
addr16
mov
mov
add
or
xchg
inc
mov
sbb
jmp
fld1
pusha
(bad)
daa
push
jb
shr
jne
pop
mov
jp
and
loop
lock
test
call
sub
scas
push
ja
xchg
or
movs
fcmovbe
jb
pop
pop
into
data16
fstp
adc
test
fistp
dec
or
es
sti
jae
pop
jmp
mov
xchg
mov
push
xor
imul
mov
inc
sbb
push
pop
dec
scas
jno
pop
scas
imul
mov
cmp
(bad)
sbb
or
shr
jg
outs
or
stos
inc
imul
ret
or
int
dec
adc
test
fnstcw
fisub
cmp
xor
arpl
loope
js
cdq
hlt
mov
and
cmp
clc
scas
fstp
jge
aas
inc
jns
in
add
outs
pop
cmps
imul
jns
inc
cs
xchg
jbe
jle
inc
jmp
repz
dec
add
mov
xchg
in
push
pop
jo
mov
xchg
pop
test
mov
push
in
mov
mov
retf
aaa
(bad)
pop
fdivr
xor
xchg
lods
scas
cmp
mov
xchg
or
and
loope
lea
pop
inc
mov
data16
adc
test
data16
push
add
xor
aaa
and
rcl
sbb
and
adc
and
jbe
mov
mov
mov
in
lahf
adc
pop
dec
mov
std
jnp
ja
jne
call
addr16
fiadd
adc
and
xchg
xchg
add
std
jns
sub
jno
pop
inc
or
add
lds
xchg
ret
dec
cmp
aad
pop
xlat
in
mov
xchg
inc
adc
inc
fisttp
arpl
dec
and
movaps
(bad)
xor
sub
add
ror
jmp
push
jl
xchg
add
cdq
pop
jns
rcl
adc
add
cs
hlt
adc
push
je
sub
retf
push
sub
mov
inc
mov
sbb
sub
mov
pop
mov
hlt
hlt
je
outs
mov
mov
and
ja
stos
popf
aaa
aas
sahf
call
add
jmp
and
mov
sbb
ror
shl
xchg
popf
mov
ja
cpuid
aam
cmps
stc
add
sub
fisttp
aas
int3
cmp
sub
xchg
sbb
sub
movs
mov
mov
sub
bound
sub
call
es
scas
xor
jb
scas
ins
out
adc
cli
cmp
rol
add
das
dec
inc
shl
ja
add
inc
es
sbb
idiv
mov
sub
inc
xchg
repnz
mov
jge
adc
push
add
xor
adc
test
shl
add
scas
jo
loope
or
ja
test
outs
mov
inc
js
movs
hlt
(bad)
push
arpl
mov
jmp
bound
ja
lahf
and
fcomi
xlat
cmp
sbb
out
(bad)
rcr
stc
adc
jmp
push
(bad)
sub
rol
fs
xor
mov
sbb
dec
and
hlt
ror
mov
nop
loop
pop
shr
test
std
mov
iret
jmp
sti
js
or
sbb
jno
out
test
inc
mov
and
test
bound
jmp
jo
sbb
pop
mov
ret
repz
push
adc
je
jae
mov
add
add
dec
arpl
push
in
arpl
and
cmp
into
add
xchg
sbb
fnstenv
or
push
add
xchg
(bad)
sub
sbb
push
cs
mov
xor
sbb
mov
xor
ss
mov
lods
adc
jge
sub
cmps
aas
je
std
jmp
push
pop
pop
push
dec
rol
lock
or
test
xchg
and
inc
xchg
sub
push
pop
jnp
dec
fadd
out
dec
push
das
ss
adc
mov
mov
stos
enter
shl
js
or
add
repz
xchg
xchg
in
retf
dec
pop
out
add
add
jge
aas
and
in
adc
push
ins
mov
stc
shr
rcl
(bad)
mov
div
pusha
push
sbb
adc
pusha
les
jg
mov
jg
(bad)
ret
test
iret
outs
imul
inc
xor
cwde
jne
mov
push
inc
sub
inc
mov
rcr
cwde
or
ins
in
daa
outs
sahf
arpl
sbb
aas
sar
adc
das
dec
rcl
(bad)
out
dec
mov
int3
retf
adc
add
pop
call
pushf
push
add
cli
scas
pop
add
dec
cli
retf
push
and
sbb
jecxz
mov
sbb
clc
jno
mov
fst
in
leave
push
je
add
pop
push
int3
(bad)
adc
int
retf
sbb
jo
stc
int
es
and
xchg
hlt
dec
jmp
test
jae
sahf
in
mov
pusha
loop
push
enter
outs
addr16
cmp
retf
clc
gs
movs
aam
xchg
nop
xchg
adc
or
out
dec
add
cmp
or
pop
sub
xchg
scas
or
mov
fild
xchg
jno
sbb
dec
loope
jg
fmulp
inc
jecxz
mov
xor
int3
or
adc
sub
ret
ret
call
adc
fwait
dec
push
add
mov
add
frstor
pop
add
inc
add
test
cli
xor
inc
xor
inc
jmp
jmp
loopne
in
aad
sub
and
aad
mov
ret
xor
bound
arpl
add
loope
fs
push
adc
sbb
lods
repnz
pop
cdq
cmp
jl
jno
sub
jb
mov
xchg
ror
sbb
popa
rcl
inc
out
xlat
rcl
cmp
pusha
pop
mov
add
fnstcw
pop
fs
inc
lods
mov
out
jns
push
repnz
dec
in
lods
or
mov
mov
stos
repnz
pop
ficomp
std
sbb
jecxz
icebp
sub
and
fcmovne
stc
adc
jo
in
push
shl
xor
out
inc
pop
inc
cmc
mov
cmp
cmc
int
shl
cdq
and
pop
push
or
ja
sahf
fcmovb
nop
xchg
pop
adc
add
inc
sbb
ror
stc
gs
(bad)
adc
fstp
das
stc
mov
lea
lock
int3
cs
ss
cmp
outs
adc
lea
int
(bad)
into
fsubr
inc
jmp
push
mov
jp
js
jecxz
cmovno
pop
pusha
jl
sub
and
xchg
sbb
or
pusha
push
push
mov
add
inc
aam
out
inc
mov
adc
ss
cwde
and
sbb
mov
jo
xchg
pop
cmc
imul
and
test
xchg
mov
inc
fxch
sub
sbb
sar
adc
pop
lahf
add
mov
(bad)
in
into
(bad)
xchg
push
leave
scas
push
inc
(bad)
xchg
xor
call
fidiv
(bad)
mov
mov
adc
xchg
rol
addr16
lods
or
add
push
movs
sub
mov
div
fld
push
inc
cmp
in
in
sbb
inc
(bad)
mov
mov
shl
pop
mov
cmps
sti
fcomp
and
scas
cld
fcom
add
mov
inc
dec
add
or
scas
sbb
lock
push
push
call
scas
lds
cwde
shl
imul
pop
sbb
fimul
or
in
pusha
add
rol
push
outs
mov
cmp
push
inc
cmp
cmp
mov
popa
aas
std
or
push
into
adc
inc
icebp
lea
cli
pop
and
out
ins
add
shl
movs
cmp
dec
inc
xor
xchg
int3
cld
add
hlt
inc
cmp
fistp
mov
outs
popa
jns
ret
sbb
icebp
push
enter
out
xor
vsubpd
std
sar
scas
out
retf
inc
mov
pop
hlt
mov
mov
or
test
adc
lds
clc
cmc
cdq
or
fldcw
and
sub
cmovno
out
adc
or
jnp
sub
shr
imul
jg
data16
inc
fstp
and
or
mov
adc
jae
pop
stos
mov
dec
mov
mov
dec
xor
mov
cmp
(bad)
xor
dec
push
sbb
int3
jmp
nop
das
outs
sub
loopne
lahf
data16
and
jmp
mov
ffree
jl
out
mov
stos
jmp
xchg
sbb
sub
je
mov
ins
adc
pop
dec
shl
push
push
aaa
jb
pop
iret
inc
in
dec
cmp
shl
repnz
nop
and
dec
xor
xor
mov
push
and
inc
shl
call
imul
jb
aas
int3
pop
sahf
jecxz
jmp
cmp
das
and
retf
sbb
inc
ja
in
out
cmp
ins
lock
ins
jnp
or
lahf
fsubr
jmp
xchg
ret
dec
xor
arpl
sbb
xchg
lock
push
sub
push
or
call
pop
cwde
adc
adc
test
or
mov
scas
in
sbb
data16
inc
mov
mov
fmul
movs
mov
cmp
fld
xchg
dec
jge
xor
sahf
ficom
push
ds
gs
popa
mov
push
mov
leave
inc
push
mov
mov
shl
sub
sub
jmp
mov
inc
sub
mov
cwde
lds
adc
fcmovne
add
ss
adc
sub
(bad)
pop
shl
or
pushf
ds
(bad)
in
out
push
movs
dec
ins
push
sub
add
and
das
dec
stc
inc
data16
(bad)
mov
inc
in
mov
mov
jmp
cmp
or
mov
inc
(bad)
shl
push
movs
push
jae
pop
test
pop
inc
(bad)
stc
das
sbb
xchg
addr16
shr
jge
or
js
xchg
imul
mov
xor
xor
pop
sbb
add
dec
leave
sbb
mov
add
stc
cmc
push
repnz
fcmovb
adc
(bad)
jmp
pop
retf
jle
jne
sti
fisub
div
sub
cwde
or
fist
fsub
loope
shl
in
mov
repnz
mov
mov
sub
sbb
in
clc
push
xchg
sub
push
mov
or
mov
(bad)
repnz
mov
mov
and
sub
ja
sub
arpl
pop
inc
loopne
mov
cmovns
ror
mov
sub
mov
cld
stos
int
lds
jnp
inc
gs
sub
push
inc
aam
ret
test
pop
push
cmp
or
sbb
cmp
jns
sar
(bad)
call
mul
and
add
lea
cli
int3
in
xchg
cmp
xchg
pop
cmps
inc
ins
mov
inc
pushf
lea
sahf
ss
cmps
xor
sub
mov
cmp
xchg
cmps
bound
sbb
pop
je
mov
hlt
adc
ret
jl
mov
push
aam
sbb
out
pop
or
rep
stc
icebp
shr
adc
ja
jmp
pop
mov
retf
ret
ins
inc
push
mov
sub
sbb
pop
or
jmp
sbb
ret
jnp
(bad)
lock
popa
jge
adc
ror
imul
xchg
lods
sub
iret
and
int3
push
inc
pop
jmp
retf
cmp
push
dec
iret
cmp
inc
xor
int3
bound
inc
cs
mov
dec
push
test
dec
(bad)
mov
xchg
mov
aad
(bad)
stc
sbb
inc
sbb
fisubr
fistp
int3
xlat
sti
jle
dec
cmp
out
int3
push
or
js
pusha
daa
or
xor
lods
mov
jmp
dec
cld
mov
sbb
mov
je
push
rol
ret
rcl
xchg
mov
(bad)
cmc
push
daa
retf
cmp
sub
xchg
rcr
std
out
(bad)
repz
sbb
or
cld
fmul
clc
mov
or
xor
fsub
xchg
mov
or
xor
dec
arpl
adc
in
stos
(bad)
inc
mov
sub
mov
push
push
inc
and
iret
mov
mov
fsub
scas
inc
outs
popf
rol
(bad)
cmc
dec
(bad)
(bad)
cmps
(bad)
int3
retf
or
mov
les
and
imul
xlat
add
cwde
dec
mov
sbb
cs
jmp
rcl
test
mov
or
lahf
dec
lods
retf
pop
mov
xchg
movs
adc
aad
sub
xchg
out
adc
lahf
mov
cmp
jmp
and
in
xchg
(bad)
adc
(bad)
push
jmp
jmp
mov
or
mov
adc
jecxz
in
jns
jbe
rol
xlat
push
or
cmp
cmp
jle
sbb
or
xchg
test
or
shl
div
jl
lahf
or
test
jmp
pop
mov
add
mov
mov
in
xor
bnd
shl
or
out
sahf
ins
cmp
lock
adc
test
xor
retf
retf
lods
(bad)
jnp
sub
notrack
mov
inc
xchg
jae
jno
call
sbb
push
cmp
dec
loope
xchg
cmp
or
bound
(bad)
sbb
dec
loope
call
mov
pop
push
lock
cdq
sbb
push
add
cmps
stos
sub
jmp
out
lds
jne
dec
adc
mov
leave
test
dec
pop
pushf
cmp
mov
push
loopne
les
jl
inc
pop
xchg
fdiv
add
outs
adc
sbb
xchg
mov
shl
sbb
xor
sbb
cwde
enter
sub
ret
bnd
push
jbe
jl
xchg
or
xlat
test
fld
sub
fwait
mov
call
and
adc
pop
cs
sub
push
adc
(bad)
shl
loopne
ins
xchg
call
jecxz
mov
repz
or
in
dec
ja
push
inc
jle
in
out
add
ss
ds
push
aaa
daa
jnp
pop
es
inc
and
cmps
in
ja
(bad)
mov
add
xor
lods
ins
jge
movs
xor
popa
jmp
into
and
loop
dec
mov
lods
ret
or
jp
int
aam
iret
sbb
cmp
xchg
add
mov
mov
js
cdq
shr
xchg
add
fwait
push
imul
jns
mov
xlat
fisttp
and
sub
jp
in
cmc
or
(bad)
aaa
sahf
adc
mov
mov
fs
je
sbb
pop
out
movs
mov
or
inc
int3
and
fadd
push
cmp
rcl
and
ja
sub
cmp
jbe
xor
mov
ret
push
and
loopne
mov
je
adc
cmps
sub
cmp
pop
cmp
nop
cmp
(bad)
jnp
jno
out
mov
mov
inc
bound
aaa
lea
mov
or
mov
jl
sbb
cmp
adc
jmp
add
xlat
das
dec
xchg
sub
dec
push
imul
les
mov
mov
and
xlat
shl
cmps
fcomp
adc
sahf
inc
imul
arpl
mov
push
xor
mov
mov
xchg
not
dec
call
cmp
pop
adc
push
pushf
sbb
add
outs
ret
out
dec
jge
and
sub
retf
pop
and
adc
outs
retf
ret
cmp
je
cmc
jmp
cwde
bound
inc
xchg
adc
sub
lods
daa
iret
ss
jmp
push
push
fbstp
lahf
mov
inc
sub
(bad)
push
xor
sub
ja
pop
push
adc
out
push
mov
loopne
jb
dec
jae
movs
hlt
loope
nop
jge
xor
stc
xor
add
es
and
mov
inc
loop
sahf
movs
cmp
pop
dec
sbb
iret
clc
pop
mov
mov
imul
jns
fidivr
pusha
ins
shl
fwait
mov
jmp
out
gs
adc
fstp
xchg
adc
mov
mov
shl
scas
(bad)
mov
push
(bad)
out
data16
aaa
mov
and
into
and
fstp
xchg
sti
ins
jecxz
or
sub
fidivr
fsubr
das
cdq
popa
push
pop
shl
adc
mov
or
adc
and
gs
cmps
xchg
test
not
or
push
movs
aad
mov
sbb
mov
cmps
jmp
neg
sbb
sbb
scas
cmp
inc
push
imul
out
out
adc
(bad)
loopne
jl
mov
sub
lods
int
or
mov
sub
(bad)
scas
ins
retf
outs
dec
and
ds
gs
popf
jo
jg
cmp
mov
pop
call
cmp
pop
inc
jmp
fcom
mov
gs
stos
adc
cdq
jne
mov
or
pop
mov
test
dec
cdq
ret
or
mov
lods
fild
popf
addr16
dec
cmp
inc
mov
ret
ss
mov
(bad)
jne
inc
mov
fyl2xp1
push
or
retf
je
clc
jb
add
jmp
xchg
in
push
(bad)
push
arpl
lods
aaa
adc
inc
sbb
inc
mov
mov
ror
add
popa
ss
add
mov
sub
jmp
jae
(bad)
push
outs
mov
(bad)
clc
cs
jae
pop
leave
jp
xor
ins
(bad)
pop
xchg
mov
mov
shr
pop
out
nop
jmp
push
ins
dec
fcom
add
call
mov
shr
out
lds
cmc
push
dec
jle
mov
mov
and
sub
cmp
aas
sub
call
push
push
cmp
xchg
pop
adc
outs
fiadd
push
mov
mov
inc
aam
ja
jle
sbb
inc
cwde
xchg
mov
fcomi
in
pop
in
mov
sahf
push
adc
pop
fwait
cmps
mov
std
xchg
into
xchg
pop
adc
or
or
push
xor
cld
push
sbb
xor
arpl
icebp
in
xchg
cmps
jae
retf
cmps
push
push
fdivr
mov
retf
mov
sub
ror
xchg
jnp
arpl
(bad)
cmp
cmp
movs
push
pop
cmp
cmp
xlat
test
push
(bad)
in
push
cmp
mov
cli
inc
mov
leave
dec
push
sub
cmp
fwait
loope
test
fcom
out
loop
lahf
mov
out
sbb
push
jge
push
inc
fidiv
xor
inc
push
mov
pop
fisttp
fidiv
ss
cli
pop
dec
jecxz
xchg
dec
xchg
loop
jbe
js
jmp
loope
ret
sub
dec
sbb
out
aam
mov
or
add
enter
test
push
and
inc
jnp
add
int
je
cmp
sbb
jne
cmp
mov
dec
cmovbe
cdq
mov
mov
sub
out
pop
lock
push
or
mov
inc
mov
inc
add
vcvtsi2ss
inc
cmp
leave
inc
ja
mov
ins
fs
xchg
leave
mov
pusha
stos
push
in
xchg
xor
nop
addr16
sub
ret
fdivr
sti
sbb
aad
or
les
shl
ror
mov
adc
and
sbb
and
sbb
mov
push
(bad)
fmulp
mov
ja
lahf
imul
xchg
icebp
pushfw
jecxz
das
mov
loopne
adc
das
lds
into
addr16
ret
daa
lock
push
mov
or
dec
jne
xor
xchg
out
ins
bound
fmul
inc
pop
xchg
inc
cs
pop
dec
jno
(bad)
outs
inc
push
cli
sub
pop
mov
loopne
cld
and
inc
inc
jb
cdq
xchg
mov
mov
cmp
adc
sub
dec
or
es
loopne
into
jmp
jne
mov
movs
scas
push
icebp
pop
addr16
mov
sbb
sahf
pop
mov
and
sbb
dec
pop
imul
mov
xchg
ds
sbb
push
dec
bound
(bad)
cmps
or
push
push
push
or
ja
and
xorps
ror
lods
push
daa
mov
retf
mov
or
pop
mov
leave
aad
or
mov
loop
jmp
or
out
movs
fild
mov
push
rcl
cmp
imul
icebp
aaa
push
pusha
lds
fs
mov
popf
xchg
xor
cld
scas
dec
xor
and
add
mov
(bad)
(bad)
ds
mov
call
fst
es
ficom
sbb
sbb
xor
cld
not
leave
dec
jmp
mov
cmp
ret
push
jp
(bad)
lock
xchg
dec
daa
scas
jno
cmps
test
push
and
addr16
dec
or
cmps
mov
mov
inc
inc
js
push
push
fsubr
pop
retf
gs
divps
test
mov
outs
inc
sbb
es
into
popa
in
mov
fiadd
out
cmp
mov
cmp
mov
gs
and
pop
xchg
aam
lock
xchg
dec
aam
jmp
adc
nop
lahf
push
les
jb
adc
and
call
and
xchg
mul
pop
(bad)
std
dec
push
push
mov
xlat
test
ret
sub
add
mov
and
and
les
mov
add
adc
dec
adc
mov
jae
ds
ins
sbb
retf
add
mov
dec
inc
inc
jmp
mov
imul
cwde
mov
mov
sub
mov
pop
sub
mov
and
bound
and
hlt
mov
inc
cmp
repz
cmc
pop
pusha
rol
and
enter
sbb
imul
les
adc
ret
pop
pop
popf
adc
mov
add
not
int3
xchg
mov
out
popa
stos
lods
popf
test
push
dec
push
fcomp
cmps
leave
pop
movs
daa
test
ja
fs
push
mov
sub
(bad)
movs
sbb
inc
fcom
xor
(bad)
or
add
lds
call
inc
pop
fldcw
popa
xor
push
lods
or
dec
out
add
jle
fs
sbb
pop
repnz
fnstsw
clc
mov
inc
pop
or
pop
fimul
stc
and
sbb
push
ficom
les
add
xlat
and
inc
xchg
jns
out
fmul
dec
cmp
adc
nop
or
lahf
mov
(bad)
lods
xlat
fsub
dec
pop
pop
xchg
xchg
mov
loop
fiadd
jmp
pop
sar
pop
adc
adc
sar
push
xor
std
sbb
dec
adc
sbb
iret
pushf
cmp
or
mov
inc
push
aad
jne
movs
into
fs
popa
xor
and
jmp
mov
xchg
in
dec
push
adc
test
xor
pop
jns
dec
outs
mov
ret
dec
add
cld
push
cs
dec
in
xchg
cmp
lock
(bad)
xlat
or
arpl
es
mov
cld
ret
movs
mov
sahf
fptan
cwde
fs
mov
stos
push
mov
ficomp
ds
or
jl
mov
jbe
enter
lahf
ror
dec
push
add
stc
ins
cdq
pop
ins
jle
xlat
imul
jl
sbb
ja
xchg
inc
xor
cli
mov
xlat
jno
es
xchg
xchg
mov
pusha
int3
lods
and
inc
(bad)
adc
sti
or
mov
cmc
jae
fild
sub
out
pop
xchg
add
xchg
dec
hlt
mov
push
rcr
nop
adc
xor
jnp
push
scas
jecxz
xor
imul
repz
aaa
push
jp
and
int3
jecxz
or
push
xor
repnz
pop
stc
lods
movs
xchg
stos
jno
mov
lahf
jecxz
movs
push
leave
(bad)
pop
mov
mov
pop
lods
data16
xchg
lahf
inc
jge
shl
add
or
es
lds
pop
add
loopne
addr16
hlt
add
repz
outs
dec
test
cdq
loopne
or
mov
int3
mov
jecxz
dec
cli
rol
push
loopne
cli
addr16
pop
inc
test
adc
cmps
pop
adc
mov
fs
rcl
or
dec
sub
rcr
arpl
inc
sahf
push
lds
dec
hlt
cmp
add
xor
test
cdq
aaa
stc
mov
and
fs
cmp
(bad)
mov
push
add
mov
aaa
gs
mov
push
call
mov
xor
push
bnd
lahf
xchg
push
out
loop
xchg
fisubr
xchg
retf
sbb
cmp
pushf
cli
adc
retf
xchg
pop
pop
and
jns
dec
ins
in
rcr
xchg
adc
or
push
call
das
mov
mov
push
gs
sub
mov
icebp
mov
iret
les
mov
push
mov
jp
pop
push
cmp
aad
loope
or
cmp
dec
enter
bound
icebp
push
in
inc
daa
dec
xchg
fbld
inc
jmp
fcom
div
clc
pop
cs
jmp
je
ss
pushf
pushf
test
add
pop
xchg
sub
pop
les
fidivr
clc
add
lea
xor
pop
mov
mov
or
inc
out
es
into
mov
dec
ret
popa
adc
test
test
add
push
outs
sub
dec
inc
pushf
sbb
imul
loopne
lea
jmp
inc
adc
or
dec
nop
cwde
jecxz
cmp
call
ds
test
cld
data16
daa
stc
dec
pop
jbe
js
push
jecxz
mov
pushf
leave
or
repnz
sub
outs
(bad)
pop
outs
loopne
imul
pop
sub
movs
and
data16
add
das
sub
leave
cdq
inc
push
das
test
nop
mov
(bad)
sti
mov
xchg
jbe
adc
sub
jmp
lea
in
stos
and
out
lds
loop
enter
mov
mov
xor
xchg
ja
imul
scas
int
xor
out
mov
jb
dec
shl
add
cmps
std
sbb
les
sub
cli
mov
mov
out
push
adc
test
pop
ret
es
loope
xchg
xchg
inc
push
mov
es
sbb
sub
retf
jg
and
dec
mov
push
and
mov
dec
(bad)
pop
mov
repnz
mov
pop
sti
cmp
cmp
adc
fwait
(bad)
dec
data16
xor
das
xor
ror
add
inc
pop
add
sub
sub
add
outs
jb
cdq
add
loop
cld
movs
mov
jne
xchg
sbb
mov
mov
test
jecxz
div
jae
test
lods
add
xchg
inc
push
pop
sahf
pusha
cmp
push
add
and
mov
stc
adc
dec
popf
sub
loope
fwait
mov
cwde
mov
shl
retf
xor
or
cmps
or
leave
in
sbb
or
mov
push
or
xchg
jo
and
les
inc
cld
push
addr16
cmp
xlat
call
cs
loope
jne
shl
dec
inc
sub
xchg
fnsave
imul
into
cmps
jbe
dec
jl
repnz
in
sub
inc
add
and
cmps
mov
add
arpl
jb
jnp
and
xchg
das
sub
mov
shl
loop
sbb
imul
pusha
pop
js
mov
popf
aas
iret
sbb
sub
aam
inc
sub
data16
or
cmc
sahf
cmc
repnz
push
retf
les
mov
xchg
sahf
sbb
mov
aaa
jp
pop
add
movs
sub
push
jbe
or
push
xchg
mov
pusha
push
and
dec
cmps
inc
popa
and
pop
fwait
leave
je
aaa
inc
ins
movs
mov
repz
repz
addr16
(bad)
sbb
inc
inc
dec
xchg
xchg
mov
xor
imul
push
mov
test
outs
push
das
mov
dec
retf
test
mov
pop
add
cmc
cmp
sbb
call
out
mov
call
repnz
sbb
fwait
aaa
arpl
mov
adc
xchg
mov
clc
mov
aas
sub
retf
pop
mov
out
(bad)
xor
sbb
jecxz
cmps
push
jmp
lods
pop
mov
loopne
ds
lods
mov
mov
sar
(bad)
iret
jecxz
loopne
and
jne
cmp
jecxz
stos
mov
jno
das
loop
lahf
out
pop
push
mov
hlt
(bad)
icebp
xchg
mov
test
adc
pop
or
xor
div
fnsave
shl
push
sti
mov
repz
aam
fisub
xchg
xor
outs
test
int3
(bad)
daa
xor
mov
and
push
pop
sbb
sbb
mov
lock
fadd
pop
ret
aaa
fbld
pop
push
add
nop
sub
pop
ins
repz
adc
jecxz
add
jmp
cs
push
aad
xchg
out
xchg
into
ficomp
outs
(bad)
mov
push
lds
or
lock
pop
rol
(bad)
pop
push
pop
sbb
and
cld
loope
push
jno
xchg
addr16
sbb
or
cmps
ret
xor
out
dec
retf
inc
das
aaa
push
cmp
ret
cld
and
sub
jb
xor
stos
mov
pusha
and
iret
dec
aas
or
pop
sub
aad
inc
fnstsw
in
jp
push
xor
xor
arpl
icebp
ins
mov
ins
sbb
inc
loope
int
add
jmp
leave
enter
xchg
icebp
dec
jns
adc
movs
jg
lds
dec
xor
ins
mov
jns
fwait
enter
popa
push
jmp
pushf
cs
push
push
pushf
xchg
icebp
pop
cmp
fidiv
iret
dec
xchg
jmp
cld
add
in
into
and
std
stos
add
aas
pop
rcl
aad
xchg
xor
mov
xchg
sti
xchg
aam
movs
pop
jnp
les
aam
pusha
sub
movs
pop
pop
push
jg
bound
push
stos
mov
test
mov
cmp
pop
jmp
out
repnz
jb
mov
sar
dec
jmp
sbb
out
sub
xchg
fidiv
movs
arpl
out
mov
or
into
rcl
jmp
xor
fisttp
fisttp
adc
jmp
int
and
arpl
push
adc
popf
jno
mov
call
add
loope
pop
jmp
add
sub
sub
mov
hlt
cdq
adc
push
mov
cmps
pop
pop
jle
jns
xchg
push
repz
ret
xchg
jle
pop
push
out
sti
push
rol
pop
fs
mov
mul
inc
mov
jae
and
push
ins
mov
in
jno
jne
(bad)
scas
retf
xchg
pop
xchg
jg
ins
fldenv
jmp
sbb
and
cmp
jle
push
push
mov
inc
sub
loop
ret
test
mov
add
imul
push
adc
and
pop
es
(bad)
push
mov
popa
push
nop
inc
out
dec
cmps
enter
mov
jb
retf
dec
aad
rol
sbb
jne
cmp
in
adc
push
push
loopne
div
dec
jno
(bad)
fisub
push
jns
nop
iret
mov
lods
iret
mov
imul
ja
bound
or
retf
lahf
jl
stos
cmp
adc
in
je
popf
fstp
jbe
test
and
xchg
mov
ins
sub
arpl
push
enter
dec
mov
nop
sahf
sahf
imul
push
enter
sahf
inc
xchg
movs
sub
fistp
ja
inc
out
xor
inc
or
(bad)
xchg
push
push
sbb
and
js
push
push
std
inc
mov
mov
or
repz
or
mov
into
xchg
nop
xor
push
mov
nop
aaa
jno
mov
add
test
xor
fsub
mov
popa
mov
dec
cwde
and
cmp
test
push
ins
loop
mov
pop
dec
pop
jns
pop
sbb
inc
jmp
xchg
inc
push
and
adc
out
aam
inc
dec
mov
neg
cdq
lods
fnsave
sbb
pop
lahf
leave
add
xchg
fistp
inc
jns
les
mov
hlt
lar
test
(bad)
mov
and
enter
pop
pop
gs
dec
clc
sahf
add
arpl
xchg
and
lods
je
leave
jge
mov
push
imul
cmp
imul
push
ror
pop
and
mov
sub
leave
inc
in
(bad)
mov
add
imul
out
xor
mov
or
push
outs
sbb
int
outs
or
xor
lea
xchg
pop
dec
xor
mov
add
shl
mov
lahf
cmp
jp
xor
xchg
test
dec
xor
xchg
lea
sub
(bad)
out
stos
retf
lock
cmp
dec
out
mov
shl
lea
stos
aad
cmc
cdq
popa
xchg
bt
pop
pop
mov
push
arpl
lahf
mov
cmp
(bad)
rcl
jmp
fidivr
sub
cmp
mov
xchg
xchg
mov
mov
cmps
mov
repnz
fs
lock
in
xor
js
cwde
sbb
mov
fld
test
je
pop
and
retf
into
pop
clc
jbe
jne
pop
div
add
leave
push
frstor
and
mov
xchg
stc
mov
bound
outs
pop
(bad)
jmp
out
mov
push
test
xchg
cmps
pushf
sar
push
pushf
sub
mov
mov
hlt
sub
in
inc
lahf
nop
push
xor
loope
push
imul
fs
push
je
and
or
(bad)
out
lahf
sahf
dec
xlat
cwde
popf
cmp
jo
sbb
pop
(bad)
xlat
xchg
mov
ja
mov
jno
mov
xor
in
dec
cmps
dec
cmp
push
ss
div
aas
out
push
jecxz
hlt
inc
nop
push
retf
mov
push
imul
inc
fucomp
add
sub
inc
cmp
ret
std
sbb
dec
ret
cmps
mov
dec
sbb
in
jp
repz
push
xchg
mov
fmul
pusha
lods
pop
test
cmc
jg
repz
sbb
les
sbb
mov
pop
jns
pop
xchg
(bad)
iret
sti
(bad)
dec
inc
xor
xor
jecxz
mov
stos
fidivr
or
dec
lea
addr16
sub
fwait
or
outs
(bad)
mov
pop
jg
test
xchg
mov
jae
push
shl
or
in
cmp
out
dec
popa
in
dec
js
adc
or
aaa
mov
int3
and
push
push
push
ins
inc
lahf
mov
not
cld
jb
mov
cmp
pushf
bt
jnp
fmul
cld
(bad)
jb
sbb
push
jg
xor
lods
cli
test
je
ins
xchg
(bad)
adc
xor
lahf
ds
cs
push
mov
push
mov
mov
or
adc
aam
and
cmp
push
retf
test
push
sbb
sub
sub
pop
mov
sahf
nop
and
imul
aaa
arpl
(bad)
aad
jge
mov
test
jns
fnstsw
stos
movs
sbb
sbb
mov
out
sbb
cld
and
pushf
inc
adc
ficomp
inc
movs
inc
arpl
mov
les
icebp
xor
xor
sbb
das
mov
sub
mov
movs
jmp
add
ret
push
mov
xchg
mov
enter
cmps
shl
test
inc
dec
mov
cmp
clc
mov
add
adc
xchg
xor
cmp
sbb
mov
mov
jecxz
not
ja
stos
fimul
or
inc
shr
push
les
mov
rcr
sbb
inc
or
mov
push
push
jne
mov
ret
shl
repz
and
test
add
and
leave
push
adc
outs
add
inc
xchg
cmp
push
jae
inc
mov
(bad)
and
(bad)
mov
rcl
push
dec
mov
push
jbe
jle
lock
add
jp
dec
stc
hlt
cwde
stos
dec
nop
xlat
stos
adc
xlat
or
jg
loopne
dec
jns
aas
sahf
fs
popa
sar
jne
mov
loopne
xchg
mov
mov
scas
xchg
pop
fnstenv
and
imul
mov
fild
out
add
repnz
popf
xor
sub
adc
xor
cmp
cwde
fistp
add
call
push
push
push
mov
into
push
ss
or
je
outs
and
and
sbb
pop
pop
cmp
inc
jbe
xchg
xor
out
movs
mov
sbb
fld
lods
push
push
or
mov
xchg
lds
pop
in
push
mov
leave
mov
adc
jge
lds
sti
or
jge
loope
cmp
bound
fisttp
sub
aam
clc
mov
retf
sub
mov
inc
or
test
mov
test
push
ss
fs
inc
push
stc
xor
into
adc
mul
xor
imul
sahf
and
aas
outs
ds
fidiv
(bad)
pop
ret
out
test
nop
pop
(bad)
ret
imul
(bad)
fist
or
add
out
jg
inc
je
mov
xchg
mov
pop
mov
dec
stc
and
push
adc
repz
cmp
cmp
into
adc
imul
pop
sub
mov
jmp
lods
loop
movs
(bad)
neg
rcl
cmps
add
pushf
(bad)
adc
lsl
xchg
movs
inc
lods
fwait
ss
mov
mov
clc
es
inc
ror
cmp
out
add
push
sahf
fcom
out
std
jno
sbb
mov
lahf
lock
and
out
pop
sbb
out
(bad)
sbb
in
sbb
aad
jbe
and
cwde
xor
or
pop
in
mov
sbb
mov
stc
loope
cmp
les
push
sbb
pop
sbb
aam
or
mov
movs
inc
sub
inc
push
or
enter
addr16
adc
mov
dec
je
mov
pushf
cmp
pusha
dec
inc
int
adc
into
sub
mov
into
(bad)
fwait
jbe
add
jae
dec
add
pop
lods
mov
sub
sbb
arpl
inc
ds
pusha
xor
push
pop
outs
mov
cmps
(bad)
js
fcomp
push
imul
mov
aaa
add
and
loop
cmps
inc
aad
shl
pop
sbb
add
aad
xchg
pop
fbstp
fsubr
sbb
lods
push
sub
mov
out
jge
pop
in
aas
sbb
mov
cmp
jmp
sub
mov
cmp
neg
ret
add
repz
ret
(bad)
cli
iret
xor
aas
push
xor
retf
aad
icebp
push
push
mov
jp
sub
movs
pop
mov
dec
stos
cmc
xor
mov
sbb
stos
shr
mov
and
pop
jge
add
xor
in
lea
pop
cwde
and
sub
jbe
outs
sub
add
sahf
dec
pushf
cmp
adc
lock
cs
loope
nop
xchg
lods
xchg
sub
bound
mov
stos
sbb
mov
inc
mov
int3
mov
or
cmp
repz
xchg
add
fpatan
pop
mov
sub
lods
fwait
(bad)
pop
sar
mov
inc
jo
xor
ret
xchg
or
test
mov
arpl
sti
mov
mov
mov
dec
and
mov
rol
cwde
mov
in
lods
pop
mov
inc
xchg
movs
idiv
or
fdiv
or
imul
adc
xchg
cwde
xor
fnstsw
pop
mov
jns
cwde
xchg
fs
ret
xor
adc
cmps
ret
dec
push
inc
lods
mov
cld
stos
loop
stos
adc
sti
daa
bound
das
test
stos
outs
mov
in
sub
adc
out
addr16
pop
leave
xchg
mov
mov
mov
arpl
add
mov
out
push
aas
icebp
jle
test
and
sbb
or
aaa
scas
js
sahf
jmp
scas
cmp
mov
mov
or
mov
movs
arpl
sbb
in
jmp
or
aaa
ret
push
nop
in
dec
loope
push
xor
(bad)
and
and
xor
inc
dec
arpl
pop
dec
out
push
inc
sub
ret
(bad)
icebp
call
fucomip
fs
aas
test
gs
cmp
inc
adc
mov
fdivr
xor
push
in
outs
stos
jbe
daa
mov
fadd
jae
outs
mov
mov
(bad)
into
pop
cs
nop
jp
xor
rcl
test
arpl
mov
test
push
fcomp
mov
fisttp
ins
push
mov
inc
inc
std
adc
jp
jns
mov
cmps
jg
pop
cmps
mov
movs
and
pop
dec
arpl
arpl
ds
and
jg
inc
loope
xchg
pusha
fnstsw
fcompp
scas
xor
int
mov
js
stc
leave
pop
jno
adc
ds
fcomip
jle
aas
or
mov
xchg
loopne
jbe
dec
add
add
inc
lods
cmc
mov
inc
xchg
mov
fisttp
mov
inc
stos
in
bound
cmc
mov
dec
gs
loopne
pop
cmc
push
bts
push
pop
inc
test
and
bnd
inc
dec
mov
cld
(bad)
loopne
(bad)
out
mov
push
or
es
fmul
neg
movs
sub
mov
mov
xchg
test
sub
adc
mov
xor
aaa
cmc
popf
adc
pop
lods
mov
sbb
xor
movs
cdq
mov
hlt
push
shr
clc
(bad)
ins
inc
pop
sbb
jp
mov
adc
xchg
stc
or
jp
inc
mov
or
add
jmp
xchg
(bad)
daa
and
mov
enter
pushf
xchg
xchg
iret
jg
outs
or
add
arpl
loopne
shr
(bad)
jle
fadd
out
inc
and
fcmovb
pop
pop
stos
adc
push
sbb
inc
out
shr
inc
ret
imul
outs
sub
inc
out
and
shl
in
add
sub
xor
or
dec
inc
dec
jp
hlt
mov
sub
test
jmp
cmp
(bad)
leave
in
inc
pop
xor
mov
xor
dec
lea
inc
stos
repz
sub
(bad)
retf
cwde
shl
pusha
dec
shl
mov
adc
inc
fld
jmp
xchg
(bad)
push
arpl
fdiv
push
ins
fld
jge
test
ror
pop
out
jnp
adc
jae
jno
mov
dec
mov
xchg
repnz
or
(bad)
jnp
repnz
pop
daa
mov
pop
or
mov
adc
cmp
lock
push
test
or
mov
lds
pop
pushf
je
cdq
retf
xchg
and
pop
repz
inc
sahf
mov
lahf
hlt
push
add
xor
call
sbb
or
sub
push
push
mov
(bad)
loop
adc
(bad)
cmps
fadd
aad
ror
test
jp
xchg
aad
(bad)
push
cwde
lock
mov
add
(bad)
shl
and
shl
dec
add
(bad)
mov
lds
jne
shl
xchg
(bad)
mov
ja
mov
mov
pop
je
jmp
fild
lahf
fimul
push
(bad)
cmp
xlat
and
add
xchg
mul
or
movs
std
fisttp
cwde
ins
scas
adc
add
lock
mov
xchg
cmc
fsubr
inc
pusha
out
mov
cmps
cwde
icebp
push
fchs
stos
pop
rcr
(bad)
adc
cmp
repnz
scas
ds
dec
pop
sbb
inc
xor
xor
push
add
scas
pop
inc
cmp
pop
cmp
pop
push
aad
pushf
iret
(bad)
jno
retf
jnp
push
push
test
xor
xchg
xchg
into
test
jnp
jecxz
hlt
jmp
push
pop
fdiv
je
jae
cmc
imul
jno
ds
mov
bound
mov
outs
in
sub
dec
xchg
scas
loope
xchg
pop
sub
mov
out
inc
movs
cmps
and
sub
mov
jmp
xor
(bad)
lahf
ret
movs
push
xor
jecxz
(bad)
icebp
sub
and
lahf
pop
mov
add
or
clc
push
iret
or
or
in
dec
or
fistp
or
mov
and
inc
int3
cmc
call
stos
retf
xlat
bsr
xor
xor
mov
mov
mov
or
adc
movs
inc
adc
cmp
lock
mov
sbb
repz
ret
into
les
rep
aam
xchg
jbe
or
(bad)
icebp
jge
mov
xor
sbb
aaa
mov
or
sub
jg
test
push
and
fsubp
(bad)
jmp
cmp
mov
mov
ja
loop
repz
sbb
xchg
push
jp
out
add
mov
fcomp
add
jle
dec
mov
scas
aas
frstor
ret
loop
push
iret
and
aad
pushf
mov
scas
cli
cmp
test
rcl
fisub
ins
xchg
test
xchg
mov
scas
jne
loope
fucomp
ins
ja
mov
cmp
xor
pusha
dec
xor
dec
test
mov
mov
jmp
inc
xchg
ins
sbb
jecxz
and
sbb
ds
fisubr
pop
div
mov
aam
xchg
inc
stos
and
repnz
shr
mov
inc
(bad)
popa
mov
xchg
jge
mov
jmp
pusha
add
(bad)
(bad)
hlt
mov
dec
cmps
jg
out
jle
xchg
or
xor
add
jo
test
repz
mov
call
xchg
add
fwait
xchg
cmp
jmp
inc
fld
xchg
into
cmp
xchg
cmp
repnz
jne
scas
sti
in
jle
xor
pop
jbe
imul
pop
jmp
in
dec
push
sub
push
mov
adc
ss
and
js
call
xchg
adc
add
repnz
xor
jnp
jge
aaa
aaa
scas
mov
ins
iret
out
dec
pop
jo
dec
repnz
mov
and
(bad)
sbb
inc
cli
mov
or
xchg
jle
mov
movs
push
mov
sbb
add
pop
cs
sbb
test
fs
arpl
or
adc
sub
add
in
inc
push
gs
or
mov
ins
adc
mov
iret
cmp
push
xchg
repnz
ss
jns
or
enter
cs
cmp
sub
dec
xchg
push
or
xchg
adc
inc
mov
xchg
sub
gs
and
mov
outs
into
mov
cld
lock
mov
push
sbb
clc
into
jge
cmc
jb
adc
xor
(bad)
mov
mov
xchg
push
cmp
jnp
jle
xor
in
scas
jbe
sbb
jnp
cmp
sub
and
int
cmp
add
cmp
sbb
fistp
pop
mov
cmp
inc
sub
jbe
add
pop
xchg
add
adc
inc
leave
inc
add
push
inc
test
xor
add
jns
xchg
cmp
ret
lods
shl
sbb
arpl
ja
pop
lds
movs
mov
push
cmovne
pop
out
int
sbb
push
fld
in
dec
jmp
mov
cmp
ret
test
push
sbb
in
bound
int
pop
or
or
rcl
das
mov
icebp
jne
sbb
(bad)
nop
lea
mov
aaa
xor
push
or
adc
lock
ja
xchg
xlat
xor
ins
ds
aam
fld
mov
bound
gs
or
inc
sub
mov
movs
pop
jmp
scas
mov
push
sub
in
out
dec
sahf
jne
pop
in
and
pop
fs
or
xchg
and
mov
add
mov
jl
xor
shl
jp
aas
and
jl
sbb
xchg
int3
ror
fsub
cmp
inc
test
cs
ret
scas
jns
in
jmp
in
inc
sbb
dec
add
jbe
and
sbb
out
shr
xor
adc
xchg
mov
sub
pop
mov
test
push
ins
pop
xchg
retf
inc
mov
ret
arpl
cmp
leave
sahf
sbb
retf
cmps
jno
(bad)
fcomp
or
mov
mov
jl
jmp
cld
xor
mov
mov
neg
push
bound
cmp
mov
sub
icebp
retf
push
imul
dec
sub
xor
or
mov
cdq
nop
mov
mov
add
pop
and
loop
or
or
xchg
xchg
movs
dec
fst
mov
fadd
add
sahf
cmp
pop
adc
mov
movd
outs
dec
call
and
push
out
mov
ins
or
loope
cmp
or
scas
jmp
jge
mov
pop
es
ret
loope
xor
jl
fst
pop
gs
add
test
es
adc
jg
inc
adc
pusha
cmp
xor
mov
retf
cs
sub
movs
xchg
cmp
pop
cmp
mov
jl
push
mov
cli
or
mov
test
xor
sub
xchg
dec
out
sbb
sbb
mov
xor
xchg
movs
and
pop
pop
cmps
out
pop
retf
mov
sbb
cmps
bound
pop
pop
mov
jecxz
xchg
out
hlt
call
xor
dec
scas
or
dec
fisttp
xchg
sbb
jb
mov
push
jno
add
xchg
jmp
mov
mov
outs
out
lods
xor
dec
add
rcr
jecxz
and
xchg
rcr
push
xchg
mov
jle
iret
add
rcl
sub
je
jns
mov
push
adc
inc
popf
or
inc
out
iret
xchg
cmp
daa
push
enter
and
das
mov
outs
int3
call
lock
mov
mov
mov
sub
repnz
xor
xlat
mov
(bad)
inc
cwde
aad
adc
(bad)
mov
movs
mov
xor
cmp
sahf
dec
push
xchg
add
push
call
xchg
jle
and
das
movs
push
mov
dec
xchg
test
mov
sbb
aas
in
repz
sti
ins
(bad)
aad
xlat
adc
ins
jg
lock
imul
je
cmp
jo
lea
sub
sbb
mov
fs
sub
jmp
out
or
xchg
jp
sbb
fldcw
jmp
imul
push
inc
push
jmp
inc
cmp
pop
ret
dec
jnp
in
cs
lahf
pop
add
imul
cld
sub
jp
mov
ret
push
push
xor
push
fsub
dec
repnz
das
add
pop
outs
std
data16
and
add
sbb
jno
add
test
test
fst
xor
cmp
fstp
mov
sub
add
or
das
cmc
mov
test
mov
loopne
cmps
xchg
cmp
or
sbb
outs
cmp
mov
popf
pop
add
pushf
pop
adc
lods
or
sbb
xor
rcl
sub
add
mov
fisttp
sbb
leave
cs
in
clc
(bad)
lock
sahf
mov
movs
xor
jnp
cmp
shl
or
mov
cmps
shl
(bad)
jae
push
dec
xchg
mov
retf
jmp
jmp
mov
push
pushf
retf
or
neg
xchg
(bad)
cld
jp
sbb
fsub
inc
lock
cmp
sbb
jb
enter
(bad)
pusha
mov
test
inc
push
and
push
push
push
mov
mov
fiadd
pop
adc
cwde
sub
and
mov
(bad)
sahf
push
lea
pop
mov
loope
fild
scas
js
push
dec
adc
test
jl
xor
arpl
retf
pop
jl
out
cmp
inc
pop
mul
loopne
scas
jmp
jmp
gs
dec
ret
inc
ja
cmp
adc
inc
mov
xor
mov
push
cs
push
aam
xor
jne
stc
add
mov
inc
sti
call
les
jmp
lahf
adc
pop
in
(bad)
add
lods
fnstenv
add
jge
lock
enter
cmp
add
lock
push
cmp
idiv
nop
lock
jg
xchg
pop
jo
mov
pusha
rcr
shr
sub
fldpi
xor
and
or
sti
cmps
cld
pop
adc
fild
scas
je
movs
cmps
outs
push
(bad)
pop
inc
inc
sbb
scas
xchg
arpl
pop
(bad)
test
sbb
call
hlt
mov
mov
jge
dec
add
sbb
lds
jmp
retf
inc
push
jae
and
dec
sub
outs
sbb
scas
or
and
arpl
mov
or
repnz
xchg
test
lahf
mov
jp
test
sub
sbb
pushf
sub
pop
xchg
inc
sti
mov
inc
push
sbb
leave
mov
ret
jg
dec
adc
fild
cs
adc
push
xor
sar
push
sub
aas
jo
repnz
fild
rcl
add
mov
xchg
push
sbb
sub
jmp
xor
dec
aaa
push
nop
mov
push
and
bound
or
ins
inc
(bad)
mov
inc
cmp
jmp
and
pop
jle
popf
dec
sub
setge
sbb
pop
mov
dec
mov
les
imul
aam
stos
adc
pop
movs
push
pop
mov
push
shl
or
or
aas
push
mov
add
je
lea
js
dec
sub
cmp
shl
bound
rol
mov
xchg
rol
xor
icebp
mul
xchg
dec
xor
outs
mov
int
daa
push
arpl
mov
and
dec
cmp
inc
shl
call
shl
push
dec
dec
ins
sub
cld
or
pop
rol
jge
ror
arpl
add
or
pop
test
stos
jle
sahf
jns
xchg
mov
pop
push
or
sbb
enter
daa
push
jle
outs
cmp
jp
scas
add
adc
test
push
sub
mov
xchg
test
sti
arpl
int3
xlat
inc
pop
jb
sub
pop
mov
adc
add
jmp
jmp
mov
mov
and
mov
lds
jb
push
xlat
iret
sbb
cmp
imul
fst
ins
xlat
push
jb
cdq
mov
push
xchg
neg
aaa
jp
fist
jae
adc
dec
aaa
in
xor
xor
add
or
lea
js
xchg
mov
sub
daa
in
sub
hlt
and
or
fistp
add
xchg
mov
mov
sti
das
dec
dec
ins
fst
add
iret
cmp
push
mov
int
inc
sbb
mov
jo
inc
fistp
jmp
in
outs
clc
sbb
mov
fsub
loop
pmuludq
test
add
dec
or
dec
cmp
es
pop
out
xor
loop
outs
ds
test
jg
sub
and
cmps
push
mov
inc
sub
aas
movs
scas
push
sahf
ds
imul
scas
and
cmp
ins
and
fwait
(bad)
in
adc
cld
out
cld
outs
in
dec
cmp
push
imul
imul
push
syscall
push
lods
jns
ins
imul
inc
ret
xor
(bad)
idiv
xor
mov
repnz
and
ror
pop
add
and
es
pop
and
stos
ror
movs
stc
mov
fsubr
and
hlt
mov
icebp
push
out
cmp
enter
jecxz
outs
adc
inc
mov
and
push
dec
retf
sub
or
test
mov
test
(bad)
push
mov
loopne
pusha
call
imul
mov
jnp
aas
je
or
or
(bad)
aad
and
pop
lds
(bad)
cmp
mov
aam
xchg
adc
arpl
(bad)
sbb
ficomp
aad
aaa
adc
lods
icebp
mov
out
sbb
xchg
rol
cmps
add
cmp
dec
pushf
into
ror
dec
jae
lods
add
loopne
out
mov
std
loopne
adc
repz
jmp
lods
scas
out
cmc
or
mov
je
mov
inc
inc
jbe
(bad)
popf
mov
out
add
mov
mov
jb
ins
cmp
jmp
inc
popa
lods
sbb
fs
add
and
cmc
xchg
pop
(bad)
jmp
or
jp
cli
dec
sbb
dec
dec
neg
jnp
cmp
or
sub
out
adc
movs
rol
jmp
pop
retf
or
leave
push
sub
mov
fdecstp
enter
iret
cmps
inc
in
push
rcr
pusha
mov
jbe
fisubr
xor
mov
sbb
pop
fdiv
ins
add
xchg
pop
push
frstor
xchg
cmp
call
mov
jno
repz
dec
mov
fadd
nop
pop
les
dec
inc
rol
scas
sbb
xchg
dec
cmps
addr16
push
js
push
mov
addr16
jnp
inc
xchg
mov
inc
repnz
cld
push
daa
jbe
mov
push
mov
in
cmp
mov
in
fcomp
js
shr
jecxz
loop
mov
push
dec
aas
inc
test
or
sub
scas
xchg
or
adc
add
push
stc
dec
inc
push
adc
cmp
leave
push
jns
mov
sub
cmp
clc
les
fild
or
pop
jb
out
sub
ret
dec
and
adc
pop
sbb
xchg
xchg
aas
cli
jbe
jmp
xchg
inc
jle
jno
push
movs
in
shr
cmps
mov
fwait
scas
fidiv
popf
out
popf
sbb
cmp
pop
mov
xchg
enter
(bad)
(bad)
push
mov
jg
cmp
mov
lods
and
sbb
mov
shl
sahf
not
cmp
add
adc
jmp
and
mov
inc
xchg
mov
inc
xor
jo
add
sbb
dec
sub
fst
xchg
adc
push
int3
lahf
mov
mov
fmul
or
retf
inc
push
pop
test
add
cmps
pop
dec
hlt
movs
xor
push
mov
jnp
cmp
jo
sti
test
xchg
icebp
ja
and
scas
mov
inc
rcr
cwde
pop
jo
int3
icebp
out
int3
xchg
pop
inc
aas
test
loopne
fild
adc
xor
push
je
cmp
sbb
push
out
pop
mov
mov
mov
mov
mov
mov
xor
push
jns
test
adc
sbb
pop
call
dec
or
aas
inc
pop
lods
fiadd
shl
inc
(bad)
xor
pop
into
(bad)
repz
cmp
jns
push
mov
cmps
scas
and
mov
xchg
aam
mov
mov
dec
lods
(bad)
repnz
aad
sbb
loope
adc
gs
xor
push
fdivr
jecxz
mov
dec
loop
aad
and
enter
xchg
std
int3
imul
push
cmps
loope
pop
mov
mov
int3
repz
stos
(bad)
inc
data16
xlat
cmc
add
jg
aad
in
neg
add
bound
jecxz
je
retf
add
or
jmp
cld
out
movs
jne
hlt
vcvtsi2ss
imul
ss
test
enter
push
or
outs
xchg
add
jo
inc
pop
xor
outs
aaa
mov
jmp
les
mov
jecxz
or
rcr
push
add
out
xchg
add
or
dec
aam
and
fdiv
sbb
jnp
sub
fwait
in
mov
sub
xor
fs
fdivr
in
popf
scas
xor
xchg
inc
mov
sub
clc
lea
(bad)
jl
pop
mov
mov
sahf
lods
inc
cmp
movs
pop
xor
(bad)
ja
push
push
arpl
arpl
(bad)
jmp
xor
aaa
mov
sbb
add
shr
add
cmp
mov
push
dec
call
jns
mov
jmp
mov
xchg
popa
ret
cmps
sub
cwde
stc
lods
cli
loope
mov
and
push
pop
cmc
lock
xchg
xor
mov
out
xor
scas
and
add
xchg
jae
xor
add
inc
sbb
stc
(bad)
mov
call
mov
(bad)
mov
adc
bound
pop
pop
jb
mov
xor
aam
test
inc
fdiv
shl
mov
sub
and
xor
aaa
pop
sbb
jmp
sub
out
call
push
adc
add
adc
js
jns
das
out
inc
push
xor
inc
je
mov
movs
jno
cmp
loopne
xchg
aas
sbb
adc
and
lds
sbb
div
jmp
(bad)
rcr
lldt
cwde
pop
dec
adc
(bad)
adc
push
mov
mov
movups
mov
mov
scas
loop
sub
xor
sbb
nop
mov
mov
shl
test
lock
shl
jmp
dec
out
inc
nop
adc
lahf
stc
and
or
cmp
fld
stc
fist
xchg
repnz
fild
inc
xor
daa
sbb
xlat
pop
jb
xchg
int
add
(bad)
aas
push
xchg
cmp
cmc
xchg
das
js
mov
or
out
and
frstor
stos
or
sbb
(bad)
(bad)
iret
mov
bound
ret
pop
mov
dec
adc
jb
stc
push
and
cmp
jnp
and
lods
imul
cmp
mov
lea
ins
fwait
sbb
and
push
ins
lock
fwait
popa
retf
(bad)
ins
push
fstp
mov
scas
stc
or
add
or
sbb
sub
sbb
jl
pop
dec
push
stos
cmp
ret
imul
mov
(bad)
push
xor
rol
stc
sub
enter
test
call
pop
pop
pop
shl
retf
movs
xor
mov
sar
stos
xchg
mov
retf
push
pop
add
adc
xchg
pop
test
sbb
cmc
ret
repnz
adc
lds
xor
hlt
add
jbe
jnp
push
and
lods
add
cmps
mov
mov
dec
sub
bound
jmp
ds
unpckhps
and
std
sub
rcl
out
dec
fstp
adc
(bad)
fsub
mov
sub
clc
cs
aas
lea
pop
sub
into
movs
jecxz
dec
movs
stos
jp
dec
add
push
push
nop
pop
popa
imul
cmp
mov
adc
push
and
std
scas
cli
shr
ret
and
add
pop
cmp
mov
pop
ror
sahf
(bad)
ds
sar
lahf
mov
pop
push
das
push
(bad)
sbb
scas
jo
int3
scas
loope
out
fdiv
or
mov
mov
xor
cmp
scas
pop
mov
xlat
ins
pop
xchg
jp
xchg
(bad)
loop
retf
ret
xchg
mov
mov
aam
bound
push
jnp
cmps
inc
ret
ret
jge
sub
cdq
js
dec
inc
jl
cmp
mov
in
push
ins
test
push
sbb
inc
adc
or
movs
sub
shl
icebp
and
sti
loop
jmp
sti
sbb
cmps
ins
pop
lahf
ds
shl
fbld
mov
clc
bound
(bad)
cmp
jno
mov
retf
hlt
mov
sbb
mov
fnstenv
push
inc
lds
das
nop
fstp
pop
xchg
inc
sahf
inc
xor
adc
mov
jae
xchg
ja
div
xor
jnp
and
push
xchg
mov
sbb
out
ror
mov
mov
cs
in
sbb
fcomp
sub
add
sti
cs
ins
jl
jae
stos
(bad)
cdq
fidivr
fldcw
xor
mov
dec
pop
lds
pop
je
mov
jecxz
xchg
cwde
dec
js
adc
xor
jge
repz
mov
add
push
mov
mov
lods
aaa
sbb
jo
pusha
daa
xchg
not
pop
out
test
jne
cmc
nop
mov
xchg
xchg
mov
mov
pop
or
mov
frndint
inc
pop
fcmovb
lock
daa
shl
fdivr
ins
mov
call
pop
push
movs
movs
pop
fs
add
fs
mov
mov
jbe
pop
aaa
rcr
shl
out
retf
xor
jp
into
shl
or
bound
adc
and
mov
lock
or
jns
test
imul
inc
fiadd
rol
mov
jmp
xor
dec
cdq
mov
int3
mov
lods
pop
data16
xor
mov
dec
cli
mov
lock
xchg
mov
nop
gs
pusha
out
fstp
stos
shr
dec
jmp
(bad)
dec
ds
clc
call
pop
sbb
ds
fwait
push
ins
das
add
inc
xchg
popa
mov
inc
push
mov
sti
mov
dec
jne
or
dec
out
test
inc
xchg
jg
mov
cld
cmp
loope
fld
shr
jo
aaa
sbb
and
inc
aas
dec
adc
nop
in
cwde
or
cwde
sbb
popa
cdq
sbb
xchg
sub
jns
xchg
jne
pop
clc
sbb
lock
mov
cmp
and
sub
mov
lahf
shr
sub
add
xchg
xor
sti
adc
or
mov
xor
and
jle
add
(bad)
adc
pop
rcr
mov
ja
fwait
push
or
call
popa
xor
call
scas
cwde
jne
nop
mov
lods
sbb
cmp
ror
loopne
inc
test
sub
cmc
daa
or
sbb
inc
xchg
call
clc
pop
fld
xchg
push
inc
push
call
rol
out
add
frstor
movhps
add
xchg
ins
mov
mov
ret
clc
push
fld
(bad)
arpl
or
jnp
dec
mov
adc
adc
in
imul
daa
sbb
int
push
cmp
add
sets
popa
mov
retf
jo
or
cmp
scas
mov
jp
push
inc
in
(bad)
cld
mov
adc
enter
adc
enter
jae
lds
sbb
sbb
sbb
and
adc
aaa
xchg
leave
loopne
and
cld
mov
sub
inc
inc
push
fisttp
push
jle
iret
dec
stos
jl
stos
and
jmp
pop
mov
in
inc
je
stos
mov
mov
inc
ret
(bad)
mov
xlat
mov
add
scas
shr
xor
cmp
pop
mul
daa
ins
(bad)
cld
pop
daa
mov
(bad)
mov
and
jp
xchg
jno
adc
push
(bad)
aad
lods
inc
pop
cmps
loopne
mov
leave
xor
mov
cmp
mov
test
xor
imul
out
jmp
or
push
retf
sbb
(bad)
push
cmc
in
and
fisubr
mov
pop
daa
add
stc
movs
xor
jmp
imul
ret
enter
out
cli
(bad)
js
rol
mov
mov
sbb
sub
data16
and
or
retf
and
xchg
in
test
inc
push
fwait
cmp
sub
inc
sub
mov
in
and
mov
inc
or
xchg
push
xchg
mov
and
jo
out
mov
daa
adc
cmp
xchg
outs
cmp
push
xchg
cmps
call
lods
pop
or
sbb
popf
sar
test
(bad)
inc
sub
mov
cmp
sub
dec
in
cmp
loope
dec
add
lods
push
icebp
mov
sbb
push
cmp
pusha
stos
sar
mov
sub
jmp
xchg
inc
fild
xchg
push
pop
stc
mov
aam
jno
rcr
adc
repz
or
or
mov
int3
cmps
cdq
mov
sub
xchg
mov
add
add
or
xor
xchg
add
sbb
sub
jl
adc
and
xchg
js
shl
or
dec
mov
in
cwde
xchg
adc
imul
xchg
jno
mov
ret
mov
movs
repz
xchg
mov
mov
ficom
sub
test
(bad)
cmp
mov
(bad)
neg
adc
mov
sub
xor
push
mov
daa
push
(bad)
jg
fdiv
jl
ja
repnz
xchg
mov
retf
sbb
adc
dec
out
xchg
not
add
loop
jns
in
(bad)
(bad)
inc
stos
mov
(bad)
gs
popa
inc
fstp
scas
adc
pop
retf
mov
xor
inc
shl
daa
ins
ret
sub
rol
push
mov
mov
out
jnp
inc
and
int3
stc
jb
mov
loop
(bad)
mov
lsl
rcr
(bad)
fcmove
rcl
xchg
dec
sub
fmul
setb
(bad)
mov
loop
jbe
pop
xchg
movs
(bad)
and
add
add
stc
inc
popa
mov
shl
jbe
retf
leave
push
pop
jo
in
pushf
outs
stc
add
ja
jp
mov
pop
mov
aaa
test
mov
out
push
push
mov
pop
arpl
pop
push
sahf
push
scas
dec
push
mov
dec
lea
xor
cmps
aad
xchg
clc
cmp
(bad)
int3
mov
into
fnstcw
(bad)
(bad)
and
and
lahf
fnstenv
add
push
dec
sar
mov
and
sub
push
icebp
inc
adc
ret
retf
dec
adc
lods
scas
adc
mov
push
js
mov
mov
sub
adc
loop
xor
jno
loopne
scas
mov
jnp
ficom
js
mov
nop
(bad)
pushf
shr
retf
lea
jmp
mov
mov
nop
mov
push
ss
add
popa
ret
std
js
pushf
mov
jo
nop
stc
clc
aam
js
sbb
mov
mov
xchg
icebp
sub
movs
cmp
ins
sub
dec
mov
fist
jo
sub
popa
jg
dec
jbe
int3
adc
adc
sub
and
sbb
push
mov
cmp
test
adc
imul
retf
jo
xlat
ret
out
mov
rcr
cmc
pop
sub
dec
or
pop
repnz
jbe
pop
sub
cmc
jnp
and
je
hlt
test
pop
sub
pop
xchg
mov
idiv
cli
sbb
xor
xchg
or
adc
and
jg
jmp
and
jmp
sub
jno
mov
ins
dec
cmp
inc
sub
ins
sub
inc
cmp
jo
jge
test
in
mov
push
clc
cmp
xchg
or
xor
hlt
div
test
inc
loopne
add
dec
push
jp
out
xor
jecxz
int3
xchg
fs
dec
clc
mov
sub
aaa
jae
or
shl
jns
ins
(bad)
shl
pop
outs
inc
jl
dec
hlt
adc
mov
xor
and
mov
add
add
dec
leave
mov
mov
dec
dec
fmul
cmp
jns
fdiv
push
jp
nop
mov
arpl
jmp
out
or
cli
lds
sbb
pop
(bad)
cli
xor
shl
xor
inc
fcom
add
mov
sti
loop
dec
lahf
in
neg
daa
loope
xchg
movs
mov
adc
imul
lds
add
enter
pop
gs
lock
imul
jmp
lods
and
mov
xchg
repnz
stc
sar
cmp
pop
cmp
int
(bad)
mov
jno
add
shr
sbb
xchg
xlat
and
or
(bad)
aad
fnstcw
xlat
icebp
adc
pop
cli
aam
retf
aas
imul
push
dec
stos
xchg
xchg
cmp
cs
scas
push
mov
loop
add
mov
fidiv
in
es
cmps
fcom
imul
add
lock
push
jp
mov
pop
jecxz
pushf
ficom
mov
dec
xchg
enter
dec
adc
mov
pop
shr
in
cmove
inc
sbb
hlt
lock
push
mov
imul
pop
imul
out
adc
sbb
movs
fist
jnp
sub
inc
enter
sbb
push
or
push
ror
stc
mov
xor
mov
push
xor
xchg
cmp
js
(bad)
pop
mov
neg
cmp
xchg
xchg
test
test
jmp
mov
jg
xor
dec
fld
outs
cmp
rol
inc
push
stos
cbw
xchg
xor
xchg
retf
sbb
aas
inc
inc
jl
or
shl
aam
push
dec
dec
retf
scas
call
ficomp
xchg
cdq
imul
cdq
dec
outs
jbe
test
push
add
mov
cmps
ud2
xor
fwait
mov
fs
aas
push
jmp
adc
mov
jmp
mov
sub
adc
pop
push
and
test
loope
add
nop
iret
adc
loope
inc
mov
rol
pop
xchg
jl
mov
cs
and
pop
add
rcr
fwait
sbb
mov
xchg
pop
shr
push
das
pop
jbe
push
push
out
inc
ret
add
(bad)
jl
and
or
cmps
(bad)
nop
ret
and
test
push
inc
adc
arpl
fcomp
or
aam
ret
je
and
test
sub
jmp
xor
pop
cld
test
mov
scas
mov
mov
test
adc
imul
mov
push
test
xchg
out
fwait
pusha
fwait
or
(bad)
mov
push
sti
pop
stc
int
add
loope
dec
inc
das
call
pop
push
and
retf
push
xlat
mov
push
movs
mov
and
fnstcw
out
inc
fs
out
imul
sub
aaa
pop
(bad)
repz
add
xor
dec
int
fnstsw
adc
cmp
call
xor
dec
test
sbb
fucomp
(bad)
jne
jo
jbe
rcr
pop
loope
xchg
and
sbb
test
or
jnp
dec
push
mov
xor
jecxz
ret
jg
xchg
mov
or
or
aad
sahf
pusha
push
repz
jmp
jo
push
pop
call
iret
dec
mov
(bad)
fdiv
fst
xchg
adc
imul
mov
sub
jb
ret
sub
stc
ret
cld
outs
add
xlat
fist
jb
int3
out
push
ins
in
mov
bnd
xor
sub
sub
pop
scas
rcl
xor
pop
jne
add
fs
test
mov
mov
push
(bad)
retf
cmp
sbb
jns
outs
mov
pop
aas
sbb
sub
xlat
leave
aad
pop
and
loope
shl
sahf
or
mov
lahf
mov
daa
add
iret
dec
outs
repnz
mov
mov
pop
push
mov
mov
outs
dec
push
fs
sti
test
pop
cmp
ins
mov
and
xchg
jae
(bad)
shl
push
loope
repz
js
cmp
sti
mov
fistp
in
shl
inc
lds
in
dec
push
(bad)
ror
ja
sti
pop
xor
push
jne
scas
dec
in
xchg
rol
ret
jnp
enter
jno
pop
arpl
dec
aam
ins
or
(bad)
mov
xor
(bad)
adc
xor
call
mov
fadd
iret
and
xchg
pusha
pop
push
push
test
movs
fs
mov
push
mov
icebp
mov
xor
clc
or
fwait
out
cs
movs
mov
or
mov
(bad)
stc
rcl
fsub
lahf
cdq
dec
or
and
jp
imul
or
int
icebp
mov
mov
fadd
(bad)
fild
cli
test
xchg
xchg
and
int
xchg
enter
shr
shr
mov
addr16
push
pop
sub
mov
bound
ss
repz
hlt
(bad)
mov
mov
inc
inc
jl
push
cmp
jmp
xor
ja
add
xchg
xchg
mov
inc
cmp
stos
ins
dec
adc
and
nop
test
jnp
mov
mov
pop
dec
ins
scas
out
pop
jnp
xor
mov
stc
xor
xchg
jg
jmp
call
or
jecxz
je
fdivr
xchg
pop
rcr
cmps
cmp
push
call
scas
mov
pushf
push
cmp
mov
daa
pop
ja
or
les
cmp
shl
call
(bad)
mov
fcmovnu
pop
adc
ffreep
rol
xor
fnsave
sub
sub
call
jnp
push
shl
xchg
test
xchg
call
in
scas
shl
pop
pop
dec
lods
pop
xor
jo
cmp
aas
mov
adc
jbe
imul
adc
dec
add
cmp
jmp
int
push
(bad)
xchg
mov
cmps
loop
pop
mov
stos
inc
ds
das
jl
pop
das
mov
sti
push
jp
in
cwde
test
pop
xor
stos
ds
(bad)
repz
jno
idiv
in
cwde
cli
jne
sbb
xor
xor
fisubr
test
add
and
outs
call
sahf
adc
inc
inc
pop
rol
jne
jmp
pop
frstor
xor
push
mov
dec
lahf
mov
sbb
outs
push
sub
imul
jle
mov
adc
and
push
adc
jne
shl
clc
int
adc
imul
xchg
sub
dec
aam
push
enter
xor
je
ins
dec
mov
rcl
adc
test
sub
mov
mov
xor
js
dec
cmp
adc
loopne
lods
mov
mov
xchg
inc
imul
xchg
jmp
(bad)
dec
(bad)
and
and
adc
jmp
pop
cmp
test
fcomp
rcl
cmps
and
rol
xchg
retf
es
mov
and
pop
movs
sbb
jne
lods
fidivr
add
and
fadd
xor
and
fsubr
xchg
adc
les
das
aas
ret
adc
data16
sub
into
pop
mov
cmp
test
cdq
adc
retf
mov
mov
test
add
repnz
mov
mov
nop
out
or
mov
and
(bad)
pop
push
push
jp
lahf
dec
movs
ret
sub
inc
shl
push
jecxz
test
in
jg
cmps
cmps
adc
cs
in
out
mov
mov
sbb
fucom
nop
cmp
retf
jle
jg
push
mov
outs
xchg
in
or
pop
rol
dec
lock
pushf
dec
xor
aas
pop
iret
push
adc
xor
and
(bad)
add
add
call
dec
andps
or
xor
(bad)
mov
jecxz
in
cwde
icebp
sub
or
jmp
adc
fld
adc
pop
push
mov
push
push
or
popf
and
out
psubusw
(bad)
mov
jmp
sub
inc
mov
call
in
addr16
shr
push
sub
in
or
dec
fst
mov
fdiv
mov
dec
cwde
test
cmc
adc
cdq
fs
xlat
inc
cs
int
rcr
neg
sbb
mov
and
fwait
cmp
test
lds
sub
mov
fistp
sbb
repz
cmp
lahf
mov
jmp
imul
push
jne
dec
fsubr
add
stc
(bad)
hlt
xor
lods
inc
and
xchg
and
int
dec
push
pusha
sub
and
test
adc
push
loope
pop
cmp
xchg
les
fisubr
xchg
pop
jo
mov
jg
lahf
jle
and
repz
mov
retf
push
xor
mov
pop
ret
and
int3
jl
aas
(bad)
cmp
xor
lea
dec
xchg
push
mov
cmp
out
add
jb
movs
je
jns
cmp
cmp
inc
jp
adc
(bad)
stos
cmp
xor
outs
xor
das
ret
andps
or
mov
jmp
mov
cmovs
movs
pop
in
pop
fcomp
dec
pop
lods
retf
(bad)
inc
pop
dec
sub
mov
fwait
add
jmp
cdq
sti
sbb
outs
ins
sbb
daa
pop
sti
push
call
jge
and
into
or
pushf
add
mov
mov
mov
inc
xor
push
lock
bound
add
xchg
jb
mov
jmp
call
push
ds
dec
mov
rcl
into
xchg
ds
sub
jno
adc
sbb
xchg
and
push
pop
cdq
pop
aad
test
fmul
jg
xchg
sub
inc
retf
pop
push
mov
xor
add
(bad)
jmp
push
adc
fistp
shl
push
dec
fidiv
mov
sub
cli
(bad)
pop
or
and
and
push
shl
jmp
jmp
dec
mov
das
loope
(bad)
cld
bnd
jo
jl
push
and
enter
rcl
xor
mov
xchg
mov
loope
out
or
jnp
xor
shr
loop
cmp
dec
or
xor
cmps
mov
ja
add
mov
lods
ds
fisub
ss
pop
push
loopne
or
loope
leave
push
or
push
fld
lock
jp
pop
test
loopne
cmc
cwde
idiv
or
sub
dec
in
pop
retf
mov
xchg
out
pop
cmp
aas
and
mov
or
jmp
sub
mov
bound
jmp
test
retf
pop
jo
mov
test
adc
(bad)
test
xchg
stos
push
and
xlat
mov
mov
sbb
div
sub
dec
aam
push
inc
mov
pop
rol
or
gs
push
(bad)
xchg
scas
sahf
mov
dec
iret
mov
pop
outs
or
ret
out
mov
rcr
add
jae
clc
xor
gs
jp
stos
loopne
dec
adc
xlat
shr
dec
test
dec
xchg
jnp
fidivr
dec
jp
add
push
lea
sbb
scas
mov
addr16
mov
fdivr
add
loopne
lods
inc
cmp
mov
out
mov
sub
xor
popf
ret
aad
data16
lea
xchg
jp
or
xchg
xor
push
inc
push
pop
mov
jl
sub
nop
ins
sbb
ja
loopne
aas
pavgw
scas
fcom
pop
xchg
les
cmp
aaa
mov
sub
jp
cmp
sbb
(bad)
lds
scas
fsub
mov
jmp
mov
cmp
lea
loop
lds
pop
ds
jle
mov
shr
and
pop
add
in
stc
xchg
sahf
icebp
jns
(bad)
pop
mov
sbb
mov
ficom
lds
cmp
dec
ror
pop
cwde
mov
xchg
(bad)
push
sahf
rcr
xor
lods
cli
xlat
mov
mov
lea
adc
shl
lods
or
imul
jecxz
ficomp
rcl
push
push
dec
dec
call
nop
sub
pop
addr16
icebp
cmp
jecxz
daa
xchg
sub
mov
retf
js
sti
jp
fcomp
fistp
div
mov
mov
es
repnz
or
jo
adc
push
jb
jle
push
push
xchg
dec
das
nop
lds
xor
xchg
call
jmp
xor
sbb
cmp
jae
inc
in
mov
xor
icebp
inc
adc
fld
xlat
mov
(bad)
movs
cs
ja
aas
jmp
iret
ins
scas
lds
(bad)
jne
fadd
xchg
cs
jp
jle
push
inc
das
and
ds
inc
xor
or
and
lea
sub
cmc
inc
cmp
mov
cmp
jl
lds
ret
adc
lahf
imul
call
in
push
test
adc
retf
mov
cld
das
mov
stos
push
daa
icebp
jmp
add
push
data16
int
(bad)
in
sbb
sub
imul
je
arpl
cwde
xchg
adc
and
xor
clc
out
sub
cmps
mov
popa
xchg
jnp
jo
xor
inc
fs
jmp
mov
imul
popf
push
mov
and
je
iret
xor
push
stos
xor
shr
movs
ret
test
sar
imul
or
add
cmps
fistp
or
jbe
jb
push
jne
xchg
loope
push
fnstsw
pop
hlt
aam
bound
repnz
sbb
pop
cmc
xlat
repz
in
int3
xor
(bad)
mov
and
scas
push
jge
push
mov
jbe
(bad)
out
and
dec
sub
or
ret
adc
xlat
sbb
mov
inc
and
test
mov
jg
mov
dec
retf
or
(bad)
lods
xor
sar
add
sbb
inc
and
jg
push
ret
mov
test
mov
sub
movs
sub
or
mov
mov
(bad)
mov
fldenv
jle
ret
mov
pop
loopne
mov
movs
cmp
inc
bound
loopne
mov
nop
arpl
cmp
add
mov
sahf
xor
xor
cmp
js
popf
retf
(bad)
jo
dec
mov
rol
enter
pop
mov
mov
ja
adc
sub
sub
test
sub
sub
push
sub
and
div
mul
test
mov
aas
push
aad
shr
jmp
push
xor
mov
pop
push
jg
retf
movs
xor
sbb
imul
lock
out
inc
pop
inc
xor
pop
sub
sub
pop
dec
stc
(bad)
mov
mov
push
xchg
adc
sub
in
or
push
mov
pop
into
outs
and
sbb
and
dec
aaa
shl
inc
cmps
loopne
fdivr
xlat
pop
fndisi(8087
adc
pop
or
push
and
push
mov
int
jnp
fwait
push
outs
pop
xor
xchg
mov
movs
sbb
inc
cmp
leave
jns
mul
sub
shl
pushf
mov
add
cmp
in
mul
mov
mov
sti
in
add
cmps
ins
push
mov
inc
(bad)
push
ret
mov
cmps
mov
(bad)
call
jne
mov
and
fisubr
cdq
pop
test
stos
enter
into
xchg
mov
cmp
jle
inc
sbb
es
js
in
ficom
fadd
gs
mov
sti
inc
popa
icebp
clc
cmc
xor
in
push
(bad)
shl
sbb
addr16
sbb
repz
push
repz
adc
pop
imul
ret
aas
icebp
mov
push
scas
pop
enter
dec
call
outs
and
adc
repnz
dec
jae
loop
mov
jns
pushf
outs
adc
repz
sub
jne
xchg
mov
and
push
or
mov
dec
ds
xchg
ret
retf
cwde
cmps
xchg
pop
outs
dec
xchg
in
(bad)
(bad)
adc
mov
fldcw
jle
shr
pop
pop
pop
enter
or
leave
jp
mov
iret
and
retf
(bad)
ror
adc
lods
jno
cmps
cmp
push
lods
jbe
xor
or
mov
mov
dec
fmul
out
arpl
aaa
test
adc
and
gs
out
cdq
and
mov
out
test
and
mov
fcmovne
mov
adc
in
push
mul
dec
aaa
jl
jb
test
add
adc
loopne
jne
pop
mov
addr16
(bad)
bnd
aam
cwde
nop
push
mov
fst
nop
lds
stos
ds
fild
cli
fist
repnz
je
cmp
rcl
inc
enter
xlat
fsubr
xor
mov
push
xchg
lds
(bad)
aas
mov
imul
(bad)
jl
pop
(bad)
test
imul
fimul
cmps
mov
sub
push
aaa
shl
out
cmp
push
mov
and
es
dec
jne
aaa
bound
fcomp
and
ffree
xlat
pop
adc
stos
adc
jnp
(bad)
mov
or
dec
jne
add
std
push
jecxz
jp
fbstp
shr
shr
(bad)
inc
aaa
fwait
sbb
mov
mov
(bad)
mov
cmc
je
ja
push
ret
xchg
jns
sub
add
dec
jl
test
cld
sub
outs
dec
nop
jmp
lods
inc
mov
xchg
cmp
ds
sub
mov
out
sbb
xor
xchg
xchg
retf
mov
pushf
mov
mov
xlat
or
and
jne
inc
xor
or
xor
jo
nop
xor
inc
xchg
or
fwait
push
mov
call
pop
movs
sar
cdq
ja
(bad)
ins
retf
ror
inc
inc
cmp
mov
mov
xchg
jnp
pop
addr16
mov
lds
inc
pop
mov
aaa
cmp
icebp
inc
cmp
(bad)
jbe
lahf
xchg
sub
repnz
mov
retf
add
ds
pop
xor
xchg
pop
sbb
jge
adc
push
pusha
jg
icebp
mov
push
lods
je
fild
(bad)
inc
xor
push
adc
sahf
sub
les
mov
push
data16
jl
addr16
fdivr
ss
adc
jge
pop
pop
xor
stc
pop
pop
xor
stc
outs
sub
mov
xchg
jmp
out
xchg
mov
push
add
out
and
pop
movs
mov
dec
and
loope
lahf
lods
inc
mov
fcom
adc
cmp
xchg
test
sahf
push
xchg
push
and
pop
lods
mov
sti
mov
fisttp
imul
lods
add
jmp
sbb
push
rol
std
xchg
dec
outs
cmps
pushf
shl
or
loope
mov
pop
aam
das
leave
xor
sbb
retf
stc
movs
stos
js
inc
cmp
dec
dec
and
movs
or
mov
mov
repnz
sbb
push
in
loope
sar
inc
xor
std
cdq
sti
xchg
int
add
cwde
sbb
ficomp
pop
push
adc
xchg
bound
fwait
(bad)
fstp
mov
sbb
jo
or
(bad)
mov
fcmovnb
sub
es
jae
cmp
ret
lods
inc
pusha
test
into
mov
push
jmp
mov
stos
movs
sbb
cmp
fdiv
adc
test
out
adc
mov
ja
push
enter
jo
mov
sar
aas
mov
stc
ss
in
loope
pop
call
ret
cmps
mov
rol
pop
out
xlat
push
fldenv
inc
inc
bnd
xchg
cmps
adc
mov
adc
cmc
and
in
jbe
sahf
repz
jo
adc
aaa
mov
out
sbb
out
icebp
adc
das
inc
adc
or
pushf
out
push
es
lea
sub
xor
idiv
cdq
sub
mov
and
or
test
or
mov
(bad)
mov
or
fs
adc
mov
clc
adc
push
(bad)
hlt
adc
test
push
jle
and
int3
hlt
add
les
iret
test
adc
fstp
or
mov
out
sub
jle
xor
lods
in
js
loop
scas
mov
pop
mov
pop
jmp
pop
arpl
mov
xlat
sbb
sub
clc
add
cli
leave
cmp
xchg
movs
pop
jle
fwait
push
movs
inc
out
push
arpl
pop
ja
mov
push
or
dec
sbb
movs
cmp
hlt
sub
cmp
pushf
push
call
mov
mov
cmp
mov
jecxz
cmc
add
jmp
mov
retf
pop
mov
call
push
rcr
pop
sub
nop
jo
es
sub
aam
adc
das
mov
cmps
xor
nop
mov
add
adc
dec
in
shl
mov
imul
cmps
inc
and
retf
std
xor
jns
stos
test
xor
mov
movs
fcmove
cli
cs
mov
or
popa
sub
sub
fidiv
fisub
(bad)
retf
ret
pop
(bad)
mov
push
(bad)
fnstcw
jmp
dec
jg
daa
gs
les
(bad)
out
add
cmc
push
sbb
add
sub
mov
not
pop
mov
in
inc
push
pop
jnp
mov
(bad)
and
imul
(bad)
jae
mov
cmp
movs
mov
push
in
jns
call
out
int3
aaa
xor
add
xchg
jnp
or
int
mov
mov
jo
data16
pop
xor
scas
iret
push
out
sbb
add
xchg
test
shl
int
sub
sbb
push
jmp
pop
dec
dec
fmulp
fnstcw
ds
leave
xor
and
xchg
clc
pushf
ret
(bad)
pop
out
dec
test
push
inc
icebp
cmp
enter
hlt
sbb
dec
and
mov
scas
adc
jo
cmp
fcmovnb
idiv
xchg
adc
sub
add
jmp
leave
into
shl
scas
xchg
mov
loope
inc
push
outs
xchg
icebp
push
clc
cmp
out
or
std
pop
pusha
cmp
ss
jns
sub
adc
sub
test
add
adc
mov
daa
xchg
int3
xor
push
sub
jae
mov
sub
jp
sub
mov
push
cmp
or
ficom
xlat
jo
push
jmp
(bad)
nop
jbe
(bad)
jl
shl
mov
or
fimul
and
pop
in
sti
fbld
cmps
inc
xor
aam
daa
mov
jmp
jo
or
mov
mov
gs
cld
inc
xchg
push
xlat
jge
mov
dec
jmp
lock
cmp
dec
mov
dec
mov
push
cmps
inc
in
scas
fucomp
call
js
xchg
xchg
les
js
arpl
push
sbb
cmc
not
add
loope
xchg
movs
pop
ss
gs
dec
and
clc
xchg
jbe
mov
mov
fisttp
push
in
and
lods
mov
xor
aam
sub
inc
add
stc
movs
call
int3
aad
dec
jmp
ret
and
and
sar
and
mov
and
movs
add
mov
ret
jne
xor
neg
mov
pop
bound
cdq
test
inc
jg
pop
fimul
in
xor
push
or
xor
arpl
js
mov
inc
out
inc
mov
ret
sbb
in
repnz
imul
sbb
ds
daa
ins
and
outs
and
(bad)
inc
int
(bad)
push
arpl
mov
and
cmp
xchg
cmp
ins
xchg
jo
test
xchg
(bad)
jmp
jne
and
cmp
push
xchg
push
sub
mov
add
lds
push
ins
movs
cmp
pushf
and
aaa
pushf
dec
stos
jbe
pop
push
sbb
test
push
or
jnp
jnp
mov
mov
lock
jnp
sub
mov
fsub
mov
cmps
in
xor
sti
xor
adc
dec
loopne
fmulp
or
jb
jl
push
dec
add
pop
data16
aaa
gs
les
cmps
dec
ror
or
mov
push
or
add
cdq
jne
sub
mov
daa
call
rol
inc
add
fcmovnb
cmp
push
xor
loop
dec
xchg
ins
sub
bound
jo
cmp
ret
or
push
ret
sbb
dec
mov
or
aas
mov
jg
retf
imul
fucomp
jp
dec
test
push
adc
mov
push
imul
ins
add
lods
stos
aad
fld
test
ins
sahf
test
sbb
sbb
test
sub
aas
mov
push
sub
pusha
scas
dec
xchg
cdq
xchg
inc
ret
es
or
(bad)
fild
les
sbb
cld
dec
jnp
(bad)
loopne
out
mov
push
fwait
mov
cmc
sbb
jae
div
xor
pop
ss
pop
repnz
push
int3
sbb
call
call
jbe
sub
je
imul
jmp
sbb
movs
into
(bad)
hlt
fwait
call
xor
xchg
pop
std
sbb
and
xor
leave
rol
push
push
mov
inc
mov
pop
pop
sub
and
dec
mov
lahf
sub
sbb
push
rcl
in
sub
imul
adc
scas
pop
push
std
or
cmp
adc
jp
call
in
mov
retf
aad
outs
mov
push
out
aad
xchg
fdivr
sar
jne
sub
or
(bad)
mov
pop
outs
leave
cwde
aad
xor
call
jge
push
adc
and
pop
(bad)
inc
push
sbb
scas
pop
cmc
push
or
leave
mov
xor
cmp
or
ret
lods
out
test
mov
cmps
enter
and
iret
in
jae
int
fild
inc
shl
add
fdiv
mov
push
sbb
enter
imul
popf
daa
mov
loop
ins
dec
arpl
fsubr
(bad)
mov
sub
pop
gs
sbb
stos
xor
pop
repnz
shr
and
hlt
(bad)
lods
repnz
int3
jmp
mov
cmc
mov
aad
repz
shr
add
fimul
loope
bound
dec
xchg
cmp
mov
imul
enter
inc
or
ins
add
or
cs
push
(bad)
mov
xor
fwait
cmp
and
mov
xor
mov
js
aas
ficomp
retf
mov
mov
fild
xchg
mov
ins
and
movs
test
iret
sub
adc
ror
icebp
pop
rcr
ror
cwde
fidiv
push
mov
test
clc
ret
out
fiadd
ficom
rcl
dec
js
push
cmp
xchg
adc
cwde
mov
jns
cmp
cmps
lock
iret
out
sub
or
dec
mov
inc
xor
movs
neg
xchg
out
inc
in
aam
and
movs
stc
mov
pop
mov
mov
mov
dec
popa
(bad)
xadd
adc
jp
xor
out
imul
inc
mov
adc
outs
xor
in
push
fidivr
adc
call
dec
push
sar
push
sbb
int
shl
pop
push
cmp
sub
pop
jae
dec
fwait
lahf
fnsetpm(287
and
imul
mov
pop
dec
jmp
std
or
call
call
jecxz
aas
inc
sahf
mov
(bad)
je
in
and
push
adc
cdq
push
test
or
nop
dec
pusha
mov
xchg
aas
xchg
call
psubsw
sbb
lahf
std
movs
pop
pusha
and
pop
push
cwde
daa
scas
cmps
mov
push
mov
mov
nop
push
cmp
nop
sti
cwde
jnp
pop
hlt
retf
(bad)
mov
ret
ffree
outs
loopne
pop
outs
add
mov
jo
mov
jae
jmp
cmc
shl
out
fstp
stc
call
addr16
or
jb
(bad)
shl
or
and
ds
lea
in
add
loopne
scas
cmp
stos
inc
pop
mov
stc
loope
xchg
push
jp
leave
ins
mov
jne
jmp
fnsave
mov
les
dec
(bad)
into
push
dec
or
fidivr
mov
enter
(bad)
push
retf
mov
loop
stos
or
adc
jle
jmp
clc
add
stos
add
cli
cdq
mov
xor
lods
inc
push
inc
mov
(bad)
fwait
cmp
pop
cmps
repnz
add
sub
or
ja
lock
dec
xchg
cdq
call
inc
sahf
jmp
stos
loop
dec
push
cs
retf
rol
xchg
xlat
neg
and
das
in
lods
test
xchg
in
mov
call
push
adc
sbb
pop
dec
(bad)
mov
sub
mov
sbb
cmp
popa
cdq
retf
pop
fcomp
xchg
mov
push
jmp
paddw
aam
mov
mov
aad
call
mov
xchg
lods
xor
loope
jmp
jae
inc
arpl
cmp
mov
dec
lods
jmp
mov
xchg
fidiv
adc
fild
mov
out
xchg
call
ror
xchg
mov
sbb
push
(bad)
frstor
lods
or
dec
jmp
and
push
gs
daa
fadd
loope
cmps
push
pop
popa
adc
mov
fiadd
jp
dec
sub
jp
and
push
pop
sub
sub
dec
xchg
daa
mov
mov
jo
(bad)
jmp
out
jbe
inc
out
cmps
sti
pusha
adc
mov
adc
add
push
test
pop
and
call
inc
jae
cmp
fidiv
cdq
xor
adc
(bad)
jno
pop
xchg
dec
sbb
cmc
(bad)
repz
call
das
add
sub
inc
add
fninit
shl
pop
js
lock
fistp
xchg
je
pop
call
mov
mov
mov
rcr
mov
add
shl
mov
and
push
shl
dec
(bad)
or
pop
(bad)
sbb
shl
out
sbb
aas
push
out
(bad)
repnz
xchg
push
pop
xchg
mov
cdq
sub
popf
inc
fstp
xchg
ficom
shr
out
stc
pop
cmp
sub
imul
sar
out
shl
sub
or
imul
push
mov
jbe
add
pop
mov
leave
out
imul
xor
in
xor
pop
loopne
adc
fcmove
mov
mov
dec
pushf
scas
jl
enter
cmp
daa
retf
pop
xlat
stos
sbb
mov
jne
xlat
lea
or
sbb
add
lods
leave
loop
sbb
cmp
or
xchg
dec
js
or
mov
pop
fist
lods
inc
pusha
add
fimul
sbb
fisubr
shl
outs
pop
dec
push
ins
scas
inc
sub
inc
adc
xchg
xchg
lods
(bad)
cli
adc
adc
repnz
das
mov
les
sahf
adc
cmp
call
ret
sbb
dec
xchg
xchg
enter
mov
cmc
jle
cmp
cwde
sbb
push
rcr
into
in
and
add
adc
jge
xor
popf
lock
imul
mov
sub
outs
int
xlat
push
retf
ins
(bad)
cmp
inc
add
icebp
shr
icebp
cmp
jmp
dec
bnd
or
sahf
outs
add
frstor
mov
jecxz
xor
loopne
(bad)
fld
push
and
popf
jno
fwait
or
add
jno
cld
imul
mov
add
int3
or
inc
cmp
popa
lea
push
in
mov
movs
adc
xchg
push
mov
out
xor
mov
sub
xchg
or
dec
xor
fs
xor
dec
sbb
adc
call
jmp
jmp
test
push
repz
adc
and
add
add
sub
(bad)
jns
inc
inc
out
int
shl
cmp
adc
xchg
mov
std
idiv
mov
and
dec
or
xchg
mov
xor
adc
ret
repnz
test
mov
not
push
sti
(bad)
ja
sub
mov
cmps
push
stc
jge
mov
sbb
nop
jp
cdq
pop
stos
cmp
dec
mov
jg
scas
adc
jmp
mov
enter
out
xchg
retf
xchg
pop
outs
retf
mov
inc
cwde
jecxz
mov
ret
jmp
fs
pop
aad
ja
das
add
in
std
fistp
out
neg
and
fbstp
sub
cmp
test
fisttp
xchg
es
dec
mov
push
mov
pop
int3
mov
push
jb
and
push
jae
push
adc
or
movs
mov
or
ss
fisub
fxch
mov
dec
xchg
xchg
ja
cmp
fcmove
das
(bad)
mov
mov
ds
mov
rol
push
push
push
push
fimul
xor
inc
jo
into
sub
adc
lea
mov
neg
jge
shr
mov
xor
idiv
aas
xor
push
add
sbb
(bad)
scas
call
cmp
jmp
inc
mov
retf
loop
sbb
rcr
cmps
fcom
or
test
iret
or
aad
out
mul
ret
mov
or
jmp
mov
or
mov
cmp
mov
push
pop
pop
mov
sbb
mov
pushf
fwait
dec
fadd
out
call
adc
fsub
cmp
pop
sar
push
imul
sbb
xor
repz
jl
sub
mov
test
jmp
push
movs
sar
jbe
(bad)
mov
dec
(bad)
scas
js
shl
dec
jl
int3
inc
sbb
loopne
popf
imul
mov
mov
enter
adc
out
xor
xchg
mov
test
shr
xor
push
call
cmc
xlat
stos
cmp
repnz
or
adc
or
enter
mov
cmp
cwde
adc
test
(bad)
jge
mov
pusha
pop
into
data16
dec
das
in
aas
(bad)
arpl
pop
or
clc
lods
jmp
cli
xchg
inc
pusha
(bad)
mov
and
cmp
into
xchg
jl
shr
push
shr
mov
je
lods
retf
hlt
ins
in
repz
outs
cvtdq2ps
xlat
fstp
out
jg
push
sub
dec
dec
add
mov
jo
lods
inc
adc
repz
ss
cmp
mov
mov
adc
fneni(8087
xchg
inc
sbb
cmp
xchg
pop
xor
push
retf
jbe
das
es
hlt
jae
ficom
mov
mov
ds
add
xchg
ss
push
jb
pop
rcr
cli
pop
js
xor
test
jns
adc
xor
xor
jecxz
addr16
ret
clc
ret
xor
scas
js
lods
or
popa
mov
vcvtps2pd
setb
xchg
pop
mov
cmovle
push
push
sub
inc
mov
xchg
popa
xlat
js
dec
pop
icebp
(bad)
cs
pop
cmp
mov
scas
sub
pop
push
sbb
cld
mov
arpl
mov
in
mov
ja
loope
inc
xchg
pop
pop
nop
push
and
out
ins
test
call
jg
or
or
xchg
push
(bad)
ds
xor
cmp
push
xlat
repnz
in
mov
sti
and
inc
or
int
sti
xchg
out
jl
cs
dec
imul
jle
mov
dec
sbb
je
and
test
popa
mov
hlt
adc
fdivr
xchg
into
xchg
fstp
in
push
call
push
jmp
es
loope
popa
inc
aas
stos
fnstcw
jmp
xor
and
das
jmp
aam
mov
rcr
push
pop
mov
imul
dec
in
outs
sbb
imul
push
push
mov
fiadd
mov
das
mov
adc
ja
inc
pop
xor
out
popf
bsf
xchg
daa
cld
inc
icebp
in
xor
push
jmp
aas
(bad)
push
sbb
mov
cmp
sahf
test
mov
sub
sahf
jae
push
mov
(bad)
cmps
mov
aaa
mov
xchg
mov
shr
xor
out
aad
or
mov
xchg
jg
lods
mov
xchg
test
fadd
pop
ret
mov
dec
dec
ins
jl
loope
jnp
mov
add
jbe
xor
outs
jbe
cmc
sub
mov
or
cli
rcr
es
(bad)
addr16
movs
test
not
faddp
retf
mov
or
mov
add
scas
push
stos
adc
dec
int3
or
test
push
fmul
adc
cmp
jnp
js
mov
sub
jbe
dec
pop
js
mov
movs
aad
xchg
ret
movs
pop
jg
out
mov
ds
dec
mov
cmps
std
adc
data16
push
loop
fdecstp
xchg
in
xor
in
fsubr
jp
adc
sub
clflush
cmp
mov
fistp
fist
mov
add
or
cwde
popf
(bad)
mov
mov
shl
cmp
gs
(bad)
mov
sub
xchg
sbb
hlt
adc
push
jb
retf
in
idiv
sbb
enter
dec
pop
hlt
(bad)
aas
jmp
xchg
rcl
es
lea
int3
push
jno
out
push
push
pop
sbb
lods
rol
cmp
jmp
pop
push
mov
imul
faddp
hlt
fdivr
inc
in
cmp
sbb
retf
lock
js
cld
imul
push
retf
pop
outs
pop
dec
clc
inc
adc
cmp
xor
mov
xor
dec
jbe
dec
and
clc
mov
lods
jp
div
fcomi
les
retf
test
repnz
pop
loop
ficomp
add
bound
popa
xchg
fs
je
sahf
out
ss
dec
cwde
(bad)
int3
dec
ins
ins
dec
cmps
repz
enter
inc
jecxz
push
push
(bad)
sub
shr
adc
pop
lds
jl
and
mov
sbb
lds
xor
dec
mov
adc
nop
push
div
dec
mov
pop
dec
dec
xchg
add
sub
int
std
pushf
push
cmp
jecxz
dec
pop
popa
jnp
fcomp
dec
or
inc
in
sub
(bad)
sbb
push
xor
je
je
xor
pop
je
jnp
daa
ds
clc
pop
ret
mov
or
xor
jbe
sti
sub
xchg
cmp
dec
mov
imul
add
push
and
stos
out
mov
ret
retf
sbb
push
pop
cdq
in
imul
add
cmp
pushf
dec
cmp
mov
adc
jmp
enter
push
jb
(bad)
js
sub
aad
push
push
ins
xchg
(bad)
hlt
dec
cmps
and
out
cmps
in
or
fsubr
outs
cwde
ret
pmulhw
inc
out
pop
cmp
pop
lahf
or
imul
rcr
ins
xor
ins
sub
sbb
fs
cmp
fisubr
xor
retf
add
ret
sbb
mov
and
cld
fbstp
and
or
das
imul
inc
mov
mov
dec
add
adc
retf
enter
jmp
aam
sub
push
fwait
shr
cmp
mov
fcmovne
mov
stos
data16
dec
xchg
mov
sar
or
cmp
pop
arpl
fwait
cmps
fiadd
dec
pop
mov
adc
jle
and
xor
xchg
mov
rcl
xor
jmp
and
sub
mov
jne
es
adc
mov
ret
mov
xor
retf
xchg
sub
aaa
imul
add
pop
jae
push
sub
mov
imul
mov
or
mov
cmps
out
js
inc
mov
dec
bound
aam
mov
inc
mov
movs
clc
mov
push
pop
mov
pushf
aam
in
xor
mov
lock
mov
dec
add
adc
sub
test
pop
jae
cmp
sub
inc
sar
outs
xchg
(bad)
cmp
dec
aam
push
xchg
hlt
aad
mov
sbb
inc
ss
sub
cmps
xchg
jp
jp
stos
lea
pop
push
xchg
adc
(bad)
fsubr
cmp
call
add
mov
out
repnz
sbb
icebp
or
xor
shr
cmp
leave
fild
test
jg
mov
sub
mov
jecxz
mov
aas
add
and
stos
fnstcw
mov
xchg
(bad)
inc
xor
stos
add
in
jno
inc
adc
jne
jge
imul
add
leave
push
jbe
cmp
bound
sub
rcl
adc
icebp
aam
pop
rcl
mov
data16
mov
sbb
dec
cmps
jae
adc
xchg
shr
jmp
je
fld
bound
sub
dec
cmp
sub
or
xor
loope
pop
loop
and
dec
cmp
xchg
mov
es
inc
jge
mov
cmps
dec
inc
sub
cmps
popa
addr16
xor
jp
cmps
and
jge
adc
aaa
not
mov
sbb
fsub
add
sar
mov
and
add
xchg
cli
into
cmp
ret
call
and
xchg
cli
loop
ins
cmp
pop
bnd
jnp
dec
popf
push
jno
mul
mov
sub
ds
jbe
xchg
and
jne
imul
bound
rcr
out
pop
aam
xor
xor
iret
inc
xchg
adc
pop
xor
push
test
cdq
es
sti
fisubr
xchg
dec
xor
js
pusha
jo
shr
cdq
out
rcr
push
jbe
xlat
mov
scas
mov
bound
pusha
iret
jmp
mov
jne
cmp
ds
imul
fimul
inc
mov
lods
clc
(bad)
sti
and
mov
sub
cwde
fnstcw
cli
add
add
jne
js
in
dec
loopne
and
xchg
dec
adc
stos
imul
and
xchg
dec
test
dec
data16
jmp
add
fistp
ins
shl
jb
sub
pop
inc
cmc
repnz
cmps
xchg
jl
jecxz
pop
cmps
fldenv
push
idiv
push
mov
cld
mov
xchg
jae
nop
mov
jg
cmc
inc
xchg
inc
loopne
mov
mov
dec
xchg
stos
out
mov
enter
outs
mov
enter
jp
retf
pop
stos
sbb
sbb
loope
cmpxchg
leave
js
push
movs
cdq
mov
iret
jne
and
mov
mov
sbb
fbstp
inc
retf
(bad)
cmps
rol
jmp
inc
ins
les
out
out
jecxz
cmp
push
nop
fisubr
mov
cmp
(bad)
rol
test
pushf
pop
or
cmp
ret
stos
inc
sbb
push
arpl
or
jno
pop
mov
xchg
enter
cmp
aad
push
nop
xor
cwde
xchg
jmp
sbb
adc
in
test
in
xchg
mov
mov
mov
inc
lds
and
cmp
mov
mov
adc
cmp
stc
je
retf
dec
mov
mov
dec
les
ds
repnz
xchg
pop
jmp
sbb
cmovb
data16
shr
jecxz
mov
out
loop
icebp
inc
sbb
inc
mov
repnz
fimul
inc
push
and
int
jbe
inc
push
cmps
jecxz
test
shr
cmp
or
or
mov
sar
(bad)
xchg
fwait
lock
adc
xlat
pop
pop
inc
hlt
jnp
jge
pushf
dec
jg
jae
lsl
dec
push
dec
sar
dec
clc
push
dec
ror
mov
cmps
sub
and
add
add
jo
(bad)
jnp
inc
outs
pusha
fsub
add
push
stos
daa
not
test
fisubr
fisttp
fdivr
popf
ss
cmc
sub
pushf
pop
nop
push
mov
addr16
add
sub
jmp
daa
dec
push
mov
ja
sub
mov
cmp
(bad)
mov
addr16
das
adc
popa
lods
enter
jne
out
push
or
dec
xchg
xor
mov
call
cwde
and
cmps
loopne
pop
pushf
or
inc
push
lds
(bad)
rcl
pop
out
daa
fidivr
rcl
lahf
sbb
iret
xchg
and
mov
repnz
push
inc
outs
push
jle
popf
and
push
cmp
and
loope
dec
lea
add
add
ja
xor
sbb
add
or
movs
pop
sti
cwde
fucom
(bad)
mov
inc
lds
xchg
sub
cmps
xor
jmp
adc
dec
xor
jbe
or
push
push
popf
stc
cmp
movs
iret
xor
add
ret
iret
ret
pop
pop
dec
cmps
fbstp
push
or
js
imul
cs
pop
sub
sub
xchg
mov
pop
pop
mov
js
aas
add
sub
test
ret
fldcw
add
addr16
cdq
mov
dec
xor
clc
pop
out
jno
(bad)
sbb
mov
dec
jmp
or
inc
ror
int3
mov
(bad)
or
mov
mul
loope
fist
mov
mov
daa
cs
xchg
xchg
adc
xor
aaa
(bad)
aas
xor
sbb
ret
or
adc
xchg
aam
jg
ret
rcl
inc
dec
xchg
push
stos
push
in
xchg
lea
loopne
push
rol
mov
call
push
sub
pop
ror
sbb
sub
out
adc
outs
mov
aaa
fs
lahf
push
mov
fsubr
cs
add
movs
adc
sar
(bad)
inc
xchg
jno
or
push
fdiv
ret
mov
xor
or
fbstp
leave
pop
inc
dec
cwde
sbb
cmovl
cld
imul
push
add
sub
movs
mov
aam
dec
mov
sub
retf
mov
jo
inc
mov
mov
shl
subps
pop
pop
push
call
push
push
lods
imul
add
xchg
mov
inc
retf
hlt
cwde
mov
dec
stc
bound
enter
dec
jecxz
repnz
cmps
mov
rcr
mov
fsubp
and
cmp
dec
sub
jmp
push
ss
fwait
das
add
jno
das
loope
cmp
mov
and
push
mov
jo
mov
sub
mov
cmps
stos
ficom
push
inc
or
ret
cdq
daa
outs
pop
hlt
xor
rcr
push
pop
mov
cwde
int3
mov
add
mov
retf
mov
or
xor
sbb
fadd
mov
repz
jno
les
push
nop
pop
addr16
(bad)
call
mov
retf
or
retf
xchg
adc
repz
inc
outs
jle
test
stos
fcom
mov
cmps
add
es
jnp
ficomp
jno
cmps
aad
idiv
nop
sbb
xchg
jge
mov
mov
call
inc
mov
pop
les
mov
jo
into
inc
mov
test
jp
push
jno
cmp
retf
repz
jb
sub
aaa
adc
push
mov
adc
std
int
cld
add
sbb
pop
jle
sar
and
push
fcomp
or
inc
shl
inc
and
(bad)
jmp
loope
loop
xchg
shl
es
mov
adc
out
xchg
shl
mov
aam
test
dec
add
xchg
stc
push
ror
fsubr
fmul
shl
into
pushf
mov
dec
cmp
test
adc
add
and
je
pop
(bad)
push
hlt
ins
daa
inc
fild
mov
ins
ror
fstp
dec
inc
pop
jmp
and
push
lods
ins
mov
cmp
je
test
xchg
mov
jae
jae
(bad)
jmp
ret
mov
out
mov
stos
add
push
xchg
dec
mov
test
push
mov
fsubr
dec
scas
xchg
mov
mov
dec
jl
jnp
jp
std
jne
dec
loope
test
or
jbe
mov
imul
jmp
(bad)
mov
add
mov
sbb
lahf
xchg
dec
sub
into
popa
jno
ror
shr
fs
cdq
sbb
test
cmp
cmps
mov
and
mov
movs
(bad)
sbb
ret
stos
mov
(bad)
and
shl
repnz
fdivr
stos
pop
xor
into
jp
(bad)
retf
movs
imul
out
gs
push
xchg
push
jge
not
imul
mov
out
dec
in
fucomp
test
jne
jmp
in
ins
lahf
dec
xchg
rcr
jnp
ins
jmp
inc
mov
push
retf
(bad)
icebp
scas
and
mov
retf
mul
(bad)
mov
ds
mov
push
arpl
jl
and
icebp
push
push
das
push
movs
lods
(bad)
(bad)
jle
jmp
pop
cmp
lock
xlat
pusha
add
mov
jle
push
(bad)
out
cmps
inc
dec
fadd
xor
sti
mov
mov
ins
jp
mov
imul
jae
daa
or
sbb
mov
or
jae
gs
dec
sbb
call
(bad)
outs
cmps
add
xlat
fstp
jns
retf
hlt
inc
lds
sbb
mov
cmp
push
dec
sbb
push
inc
rcr
pop
mov
les
mov
push
and
ret
pop
test
xchg
pushf
mov
aad
or
lods
jno
daa
sbb
dec
sub
scas
adc
xchg
mov
and
or
ret
ds
out
add
nop
and
mov
outs
out
dec
sbb
(bad)
mov
cmp
mov
dec
mov
sbb
adc
xchg
sahf
or
xor
rcr
pop
mov
(bad)
sbb
cmp
aad
or
stos
sbb
sahf
cmps
xor
es
cli
dec
mov
test
cmp
data16
bound
lock
popf
push
ror
aad
mov
pop
inc
and
sub
cdq
fist
xorps
cmps
adc
push
adc
or
mov
xchg
cmp
repz
out
neg
xor
out
mov
xor
mov
ud0
out
rcl
inc
scas
sub
mov
xchg
mov
scas
ret
sbb
xor
pop
jmp
(bad)
test
mov
sub
test
xchg
cmps
enter
(bad)
mov
and
pop
adc
cwde
dec
mov
pop
outs
xor
repnz
sub
int
sbb
clc
inc
pop
inc
repz
add
cdq
popf
(bad)
iret
jge
fmul
popa
jo
enter
icebp
in
fcmove
jl
jl
icebp
xor
mov
jno
xchg
out
pop
mov
stc
icebp
push
iret
shl
add
add
pushf
jne
push
inc
out
pop
sti
inc
jmp
dec
cmp
movs
(bad)
(bad)
cmps
mov
imul
xor
and
xchg
jge
pop
sub
mov
out
pop
jae
pop
int
add
iret
mov
adc
out
idiv
mov
pop
mov
fwait
xor
out
pop
into
or
test
xchg
popf
(bad)
mov
mov
test
inc
push
push
cs
sbb
or
jnp
sahf
push
pop
mov
pushf
movs
xchg
popa
jnp
add
daa
ret
push
jb
cmp
mov
push
adc
jne
sub
jns
push
call
xlat
add
jmp
push
pusha
dec
call
outs
js
(bad)
shr
mov
cmp
add
not
sub
lods
lock
jg
addr16
and
je
pop
(bad)
out
imul
jmp
repz
outs
xchg
pop
ss
or
xchg
inc
jmp
push
out
mul
dec
and
iret
push
jl
or
jne
fistp
dec
(bad)
aas
mov
xchg
mov
hlt
movs
and
or
(bad)
std
push
lods
cmp
add
(bad)
ins
jecxz
mov
aad
mov
lds
push
sub
loop
and
sahf
sbb
pop
fistp
out
push
mov
mov
xor
aas
xchg
add
mov
icebp
pop
popf
hlt
sub
cmp
icebp
int3
mov
out
nop
sub
sbb
inc
pop
mov
test
mov
ins
stos
icebp
enter
inc
loop
jmp
data16
add
xor
mov
mov
xor
mov
sahf
sub
jne
push
(bad)
(bad)
jmp
jb
in
dec
adc
xor
xchg
daa
jg
pop
imul
movs
cmp
scas
sbb
movs
ins
push
stos
cmps
xor
dec
mov
cwde
lods
jecxz
xor
aas
dec
imul
mov
dec
ins
fisubr
cdq
xchg
in
aad
(bad)
shl
addr16
inc
mov
dec
lds
gs
cwde
mov
test
loopne
fs
popf
dec
or
ins
addr16
dec
xor
clc
dec
mov
adc
inc
outs
pop
sti
inc
ins
loop
inc
clc
or
inc
push
loopne
repz
adc
loopne
dec
adc
mov
shl
push
add
push
mov
es
ins
push
add
jnp
inc
xchg
out
push
adc
loope
pop
pushf
rol
adc
jle
sbb
add
mov
and
shr
lods
call
call
xchg
shr
push
jae
inc
xor
retf
adc
icebp
sub
lds
mov
dec
in
ret
jmp
(bad)
icebp
and
jmp
or
addr16
scas
xor
aas
mov
sbb
arpl
out
mov
sub
mov
mov
xchg
daa
mov
jb
sbb
sub
xchg
cmps
out
inc
outs
mov
pop
cmps
adc
mov
ins
inc
ss
jmp
adc
ins
hlt
push
xor
jne
jmp
or
push
mov
jl
mov
pusha
jae
pop
ds
loop
pusha
sbb
dec
ret
inc
sti
pop
ret
pusha
or
aad
scas
retf
mov
mov
sub
fisttp
shl
cmp
test
pushf
jbe
pop
jbe
xchg
jg
fild
push
jl
pop
(bad)
addr16
sub
inc
inc
xchg
mov
and
xor
mov
nop
stos
fldenv
leave
xchg
pop
sub
lods
cdq
pop
xchg
add
je
and
aaa
mov
div
mov
jl
leave
inc
(bad)
and
shl
cdq
jo
add
fst
call
ds
scas
mov
test
ins
cli
mov
out
test
into
inc
cld
sub
in
cmp
jnp
sbb
dec
or
ror
sub
dec
nop
test
js
leave
xchg
sahf
enter
add
repnz
dec
mov
fst
add
push
repnz
and
push
outs
repnz
in
mov
test
xor
mov
adc
cmp
in
aam
icebp
dec
loopne
mov
out
mov
push
lods
xor
ror
add
push
inc
sub
nop
adc
cmps
(bad)
cmp
jmp
dec
inc
loopne
xchg
or
mov
pop
mov
xchg
rcr
jecxz
xor
ins
and
dec
dec
(bad)
jp
stc
shl
fistp
xchg
sbb
sub
xor
or
mov
push
es
mov
mov
pop
(bad)
xchg
ja
xor
jmp
mov
inc
fiadd
out
mov
adc
call
js
fst
loopne
pop
add
shl
mov
pop
xchg
mov
pusha
pop
cdq
ds
(bad)
fst
cmp
test
(bad)
out
mov
mov
jp
pop
pop
lods
(bad)
push
push
jmp
pop
in
mov
mov
sahf
xor
xor
fsubr
sbb
inc
jle
mov
sub
(bad)
in
cld
fwait
mov
sar
jne
ret
mov
ror
jg
out
push
test
ds
adc
mov
dec
arpl
fs
mov
fld
or
pop
shr
mov
jecxz
stos
clc
ret
inc
rcr
dec
mov
into
ficom
cmp
dec
cmp
leave
cld
or
ret
add
mov
aad
out
pop
(bad)
sbb
mov
sbb
push
stc
xor
jne
test
retf
jg
cmp
punpckhwd
sbb
popa
cmps
or
mov
xchg
xchg
mov
std
(bad)
cdq
test
test
mov
popf
(bad)
imul
mov
mov
test
scas
frstor
ds
in
fld
in
mov
mov
cmp
imul
pop
inc
rol
(bad)
push
in
cs
cmp
lds
mov
scas
adc
repz
cmp
lock
adc
cmps
retf
aam
je
aam
xchg
in
loop
aas
pop
arpl
jmp
call
mov
dec
sti
pop
jmp
mov
aas
aas
mov
stc
bound
icebp
dec
cld
add
mov
jl
jge
push
cmps
jne
out
pusha
cmps
push
(bad)
mov
punpcklwd
fsubr
pop
ffree
pushf
pop
repnz
imul
xchg
cmp
sahf
popa
sbb
push
mov
ss
sub
imul
lds
pop
push
sub
lea
les
(bad)
cmc
mov
ficom
rcr
mov
inc
sub
sub
mov
add
(bad)
cmp
and
cmp
add
jl
jne
popf
dec
rcpps
inc
mov
stos
inc
sub
cli
imul
xchg
mov
jmp
xchg
mov
stos
jmp
jmp
(bad)
mov
repnz
outs
pop
test
sbb
fdivr
call
inc
jecxz
(bad)
in
and
out
push
sub
mov
cmp
outs
rcl
sbb
es
loope
iret
jbe
in
add
outs
push
xchg
xchg
xor
iret
jns
jbe
sub
push
shl
shl
jne
dec
leave
pop
repz
or
mov
in
push
cli
sti
fs
push
adc
jno
cmp
sbb
mov
sub
stos
test
pop
stos
les
mov
mov
inc
mov
icebp
test
dec
mov
out
bound
sbb
std
xchg
sub
add
or
push
popa
pop
sub
fs
pop
jno
xchg
cld
jl
pop
pop
push
mov
fs
popa
jo
enter
cmps
test
dec
pushf
sbb
dec
dec
pop
mov
cmps
ja
add
jae
movs
xchg
mov
dec
dec
and
ds
add
xchg
mov
mov
call
mov
mov
mov
inc
add
pop
dec
dec
sbb
aaa
stc
xchg
mov
rcl
loope
shl
hlt
jmp
adc
mov
(bad)
int3
(bad)
scas
mov
and
sub
jmp
cli
fldcw
jmp
push
fidivr
pop
inc
imul
inc
push
lock
push
mov
and
(bad)
shr
sbb
and
xchg
fadd
xchg
outs
dec
(bad)
or
inc
outs
dec
daa
cmp
shl
pop
ds
and
mov
fwait
aas
(bad)
fst
dec
mov
shl
add
xchg
sub
addr16
inc
jns
ret
inc
enter
mov
nop
push
and
xchg
test
lea
xor
pop
pop
push
push
fisttp
nop
imul
dec
cmp
push
xchg
jno
loop
push
(bad)
(bad)
shl
iret
in
je
mov
addr16
mov
mov
sub
add
in
mov
cld
icebp
push
mov
mov
in
push
dec
xor
stos
mov
popf
adc
push
out
(bad)
lods
mov
pop
dec
mov
shl
xchg
pop
ret
lods
leave
push
lods
into
fsub
jo
cs
ror
or
jno
in
push
in
outs
scas
test
pop
mov
or
je
(bad)
add
mov
call
sbb
in
fld
aaa
sub
fsubrp
add
dec
inc
fcmovne
jp
mov
(bad)
cli
jp
or
cmp
cmc
shl
mov
xchg
add
dec
aaa
popa
or
add
cwde
iret
sbb
fwait
(bad)
mov
jmp
test
adc
loopne
(bad)
or
jmp
repz
sub
jecxz
call
xchg
inc
mov
xor
aam
inc
jo
xlat
mov
retf
mov
or
in
clc
les
cmc
or
jmp
shr
or
aaa
imul
cmps
xchg
test
sub
in
cmp
push
sub
and
jae
movs
adc
inc
or
loope
mov
retf
xchg
mov
adc
jmp
pop
inc
mov
(bad)
loope
mov
cmp
fnstcw
test
sbb
dec
sar
cld
mov
icebp
dec
retf
mov
add
loop
cmp
rcr
icebp
lea
sub
rol
cs
in
push
and
push
out
popa
add
or
and
movd
fcomip
dec
pusha
and
addr16
call
cmp
jae
fdivr
pop
out
lods
jmp
xchg
adc
sbb
add
add
enter
or
pop
test
scas
mov
adc
jg
xor
xor
xchg
jl
mov
push
(bad)
mov
call
adc
bound
pusha
mov
cwde
or
sub
icebp
jecxz
icebp
push
xor
and
inc
out
mov
(bad)
dec
inc
pop
xor
outs
xor
shl
mov
push
test
bound
sbb
xor
sbb
inc
in
dec
push
and
adc
pop
aaa
sub
aad
or
dec
out
jmp
movs
mov
clc
push
(bad)
mov
inc
test
neg
test
pop
or
in
xchg
int
imul
scas
dec
push
jp
movs
je
add
mov
scas
ficom
jge
mov
dec
mov
movs
xchg
and
es
enter
add
or
inc
pusha
inc
sub
loope
sbb
es
mov
xchg
mov
aas
out
jne
fnstsw
xor
rol
jp
pop
and
mov
ret
sub
push
cmp
aam
cmp
or
pop
call
sti
adc
mov
sahf
je
(bad)
jl
fisubr
inc
lods
lahf
outs
inc
mov
mov
xchg
add
push
jl
pop
xor
mov
out
(bad)
idiv
lahf
out
or
pop
mov
xchg
mov
pop
cmp
push
cli
jecxz
lss
mov
jp
cmp
fcmove
pop
into
popf
lods
xor
popf
outs
mov
sti
jp
mov
sub
adc
push
pop
mov
push
(bad)
out
adc
nop
inc
icebp
(bad)
sbb
jns
ds
dec
cmp
adc
and
arpl
jb
xchg
js
and
mov
or
jmp
dec
std
shr
rol
stc
inc
inc
popa
dec
ins
xchg
mov
lods
xchg
sbb
(bad)
fldcw
ret
dec
retf
loop
jl
inc
lods
test
lea
mov
or
stos
dec
dec
in
dec
sahf
ss
mov
xor
mov
mov
push
mov
dec
push
xor
sbb
aad
add
mov
fisubr
xor
and
cmps
loopne
xchg
gs
mov
inc
daa
xor
(bad)
push
out
outs
sahf
mov
(bad)
int3
xor
aam
repnz
sub
mov
outs
idiv
mov
jnp
pop
outs
jmp
mov
adc
loope
fstp
add
inc
lock
stos
jo
sbb
ret
cmp
dec
push
push
push
call
adc
jno
add
mov
dec
jle
cld
test
cmc
mov
jle
div
popf
out
(bad)
pop
pusha
iretw
xchg
pop
push
add
mov
xlat
sbb
rcr
loop
rcr
shl
sahf
mov
sub
aad
sbb
imul
leave
shl
jl
mov
fcom
shl
(bad)
enter
fidiv
sbb
or
out
fcmovnbe
dec
test
pop
add
test
inc
loop
lea
and
addr16
addr16
test
push
sub
(bad)
sub
push
dec
hlt
aaa
adc
lea
pop
dec
dec
mov
pop
add
outs
add
pop
imul
int3
xchg
push
add
(bad)
in
pop
push
shr
or
dec
pop
movs
sbb
test
cwde
inc
neg
inc
pop
loope
cs
jnp
xor
push
xor
mov
inc
fwait
lahf
sbb
sbb
add
mov
push
jnp
loopne
aad
sbb
(bad)
push
fldcw
scas
(bad)
cld
sbb
jns
pop
and
aad
inc
cmp
jae
mov
cmp
shr
mov
test
icebp
jp
mov
push
lods
movups
rcl
dec
je
cmp
sbb
cli
scas
fcom
sbb
pop
cmp
mov
push
pop
cmps
shl
in
scas
jo
xchg
sar
test
cld
aas
into
jl
dec
je
iret
xor
stos
(bad)
push
adc
push
repnz
sbb
sub
fdiv
je
lds
dec
pusha
rol
mov
cli
dec
les
push
rcr
mov
xchg
inc
jecxz
les
xchg
push
loopne
addr16
mov
mov
sbb
inc
gs
fwait
push
movs
xchg
push
or
jmp
pop
or
movs
outs
jg
jae
adc
jle
inc
xor
mov
ret
cmps
cmps
push
lea
sti
pop
pop
push
mov
shr
jno
pop
push
into
imul
push
call
ret
push
(bad)
jecxz
jg
xor
nop
ja
test
div
cmp
sahf
mov
(bad)
mov
push
mov
out
popf
or
fist
inc
xor
mov
pushf
data16
iret
xchg
xchg
cdq
pop
fmul
fucomp
nop
in
adc
or
push
mov
inc
cmp
pusha
pop
stos
or
xchg
test
jns
add
sbb
cmc
not
jle
sbb
add
pop
nop
adc
fstp
je
js
dec
adc
adc
repnz
adc
cmp
mov
cs
cs
ror
inc
in
sbb
test
inc
cli
js
sbb
leave
cdq
pop
in
inc
sub
xchg
push
sbb
cmp
(bad)
adc
js
jge
xor
push
ret
(bad)
lds
push
lea
mov
lds
jo
push
popa
js
dec
xchg
outs
repnz
adc
(bad)
das
jecxz
adc
pop
pop
mov
add
retf
adc
lods
lods
outs
into
pop
outs
test
pop
ss
xor
xor
push
xor
push
ins
jp
test
loop
mov
adc
adc
jb
jns
call
jmp
pusha
or
mov
sahf
out
sbb
mov
shl
jmp
mov
xchg
push
jge
ds
or
sbb
es
fimul
imul
retf
mov
jg
cmp
mov
push
xor
mov
mov
retf
mov
xor
dec
pop
pop
loope
xlat
sub
jns
push
sbb
je
popa
lea
xchg
cmps
js
shl
into
xor
sar
jmp
dec
add
pop
mov
push
jb
imul
inc
sbb
cli
(bad)
xchg
out
mov
add
add
dec
sbb
pop
and
fcmovnu
xor
je
xor
inc
adc
push
mov
dec
(bad)
push
sbb
push
or
jmp
jle
ror
cmp
test
loope
dec
inc
cwde
mov
add
dec
mov
cli
andps
pop
stos
push
test
push
sub
fidivr
call
dec
xor
sub
dec
scas
popa
xchg
inc
jb
mov
int
mov
shl
popa
out
sbb
xchg
pop
push
ja
xor
mov
mov
mov
cli
in
and
repz
xchg
popa
xchg
dec
scas
(bad)
aad
inc
push
jmp
sbb
push
add
dec
pusha
mov
push
pop
sub
push
lods
jmp
mov
icebp
push
mov
popf
jecxz
mov
stos
xor
and
movs
inc
push
or
std
mov
sub
rcpps
mov
dec
daa
imul
mov
jecxz
imul
aaa
loopne
cs
pop
ret
mov
(bad)
xor
push
mov
fstp
add
jns
out
loop
enter
lods
push
loopne
jg
scas
fucomip
lods
fcom
fadd
cdq
pop
ins
retf
jo
call
scas
xor
stos
mov
cmp
cs
repz
cmp
cmp
ficom
and
jo
test
fwait
add
mov
pop
shr
pop
sub
adc
dec
jae
add
pop
adc
dec
inc
cmp
test
jo
xor
data16
mov
sbb
inc
xchg
xchg
aaa
jge
add
jecxz
sbb
mov
nop
retf
hlt
jbe
pushf
push
dec
(bad)
push
xchg
and
jge
jns
and
sbb
mov
int
scas
hlt
imul
in
sbb
xchg
mov
aaa
mov
gs
and
fcmovne
or
adc
adc
jbe
or
sbb
push
inc
sbb
mul
adc
out
mov
test
sbb
ss
sbb
in
and
adc
xchg
daa
adc
xchg
inc
xor
outs
sbb
(bad)
div
xchg
ins
test
aam
or
arpl
mov
stos
push
dec
icebp
xor
add
inc
mov
cmps
mov
mov
daa
or
inc
ret
sub
mov
adc
stos
dec
xlat
push
test
xchg
mov
sub
stos
loope
inc
pop
adc
pusha
out
cmps
popf
loopne
xchg
hlt
mov
sahf
sahf
push
ret
sub
xchg
mov
and
mov
aam
pop
sub
push
add
fsubp
dec
loopne
mov
cli
push
das
xchg
mov
push
dec
xor
sbb
sbb
hlt
int
push
add
and
jb
pop
jg
test
(bad)
pushf
xor
inc
sub
adc
out
add
loopne
jno
std
mov
inc
jp
clc
and
push
or
fild
in
imul
jo
outs
cmps
xor
test
loopne
adc
cli
lahf
into
xor
and
sbb
les
imul
pushf
(bad)
fwait
or
imul
xor
mov
dec
jmp
and
ret
jge
test
aaa
mov
mov
pop
fst
scas
xor
push
(bad)
inc
dec
in
loope
jae
movs
in
in
clc
xchg
jle
hlt
gs
hlt
jmp
pop
int
xchg
mov
mov
fmul
add
sub
ret
movs
fisubr
push
rol
retf
in
stos
xor
cmp
cdq
pushf
call
mov
cmp
xor
rcr
stos
xor
pop
adc
inc
xchg
sub
out
cmovg
repz
xor
rol
ins
aam
in
xchg
add
push
cmp
sub
mov
add
sub
push
add
or
test
add
mov
cmp
fnstsw
inc
dec
xchg
or
sar
test
mov
xchg
xor
sub
adc
xchg
imul
jno
xchg
pop
push
jae
sbb
xchg
cmps
(bad)
mov
rol
clc
mov
inc
mov
mov
(bad)
sti
rdmsr
dec
mov
jbe
data16
pushf
imul
fadd
sbb
or
add
jmp
pop
sbb
jno
icebp
add
sub
out
lods
mov
repz
inc
jmp
dec
sub
mov
xor
xor
jmp
add
cdq
loope
ss
jle
test
lahf
fisubr
inc
push
or
xlat
aad
(bad)
adc
pop
mov
jle
aas
push
cmp
and
push
lahf
jnp
or
jg
add
out
fsubrp
push
cwde
dec
jecxz
jge
jp
aas
xlat
mov
out
pop
jl
rcr
adc
and
cmp
in
into
test
hlt
pop
bswap
iret
(bad)
mov
ror
dec
mov
scas
sub
les
aas
je
jo
sbb
sbb
dec
mov
jo
jge
pop
sahf
dec
jns
pusha
jmp
mov
idiv
push
cs
std
in
repz
mov
data16
inc
jl
int
int
(bad)
mov
jl
xchg
push
mov
mov
hlt
adc
rcl
imul
xor
inc
sti
cs
das
lods
movs
fmul
xchg
cmp
dec
xchg
mov
jne
jno
inc
sbb
icebp
inc
jle
call
les
pushf
adc
les
mov
nop
pop
cld
jb
and
or
mov
mov
repnz
mov
mov
enter
pushf
jmp
retf
cmc
jmp
push
adc
dec
shr
neg
xchg
ret
jno
nop
or
movs
push
mov
adc
adc
push
jmp
fldenv
push
jmpw
sbb
lahf
ficomp
jb
sar
in
mov
jns
jl
int
add
les
mov
cld
mov
pop
dec
(bad)
jb
sub
shr
lock
dec
shl
imul
pusha
jb
jg
loop
arpl
xlat
jno
imul
dec
mov
hlt
retf
not
jb
lock
or
pop
cwde
mov
pop
aad
mov
xor
das
bound
add
dec
std
add
push
jp
pop
daa
addr16
jmp
and
bound
and
xchg
and
or
cmc
cwde
mov
push
dec
jae
dec
push
icebp
out
call
ja
inc
add
jno
jl
pop
pop
cs
test
iret
lods
out
jge
retf
or
loope
(bad)
iret
jbe
mov
xlat
retf
mov
mov
and
adc
jae
dec
pusha
ret
cwde
or
and
xchg
das
mov
sub
inc
lahf
push
jle
sbb
pop
adc
and
dec
les
mov
jne
fwait
push
in
pop
pop
xchg
cli
stos
je
outs
fdivr
dec
les
sar
std
and
pop
ror
ret
js
jmp
cmp
cmp
xor
pop
shr
in
retf
xchg
sbb
jno
movs
xor
mov
jns
dec
imul
sbb
mov
mov
enter
(bad)
cmps
retf
leave
mov
ins
cmp
pop
out
pushf
pop
or
daa
xchg
test
xor
sbb
test
loopne
das
inc
data16
inc
or
jge
mov
test
arpl
xor
add
mov
js
sti
xor
sbb
out
test
cmps
movs
es
adc
jns
repnz
pushf
jg
cmps
add
inc
or
jl
imul
rcl
dec
mov
lods
mov
xor
arpl
cmp
xchg
mov
push
adc
test
(bad)
cli
loopne
jbe
sar
push
outs
test
and
ins
mov
leave
fs
pop
dec
pop
dec
int3
dec
or
rcl
ins
out
push
and
push
xchg
cmp
pop
push
ret
mov
push
jle
outs
mov
rcl
jmp
test
push
retf
inc
cmp
test
or
ja
lahf
hlt
fstp
movs
adc
mov
push
lock
ss
fst
aas
xor
adc
das
sub
dec
cdq
out
mov
test
mov
cmps
stos
lods
rol
xor
lock
inc
bound
fisub
pop
pop
mov
adc
arpl
cmp
call
scas
mov
mov
mov
pop
xor
xor
jb
sub
add
repz
cdq
addr16
fisttp
ins
or
jle
out
pop
(bad)
lock
push
lods
retf
dec
bnd
mov
test
int
mov
iret
cdq
pop
js
fcomp
pop
adc
mov
and
lods
cmp
push
loope
add
mov
pop
ret
les
xlat
test
pop
sbb
xchg
mov
push
imul
in
jo
inc
cmp
or
push
ret
fcom
push
into
movs
sahf
xor
sahf
sar
adc
pop
clc
fld
leave
lahf
pushf
push
mov
test
sub
or
push
jns
jnp
(bad)
outs
or
xchg
in
dec
and
ds
fild
add
dec
scas
mov
or
nop
mov
push
adc
push
inc
jle
repz
(bad)
push
cmp
pop
aas
push
call
sbb
sbb
scas
js
xor
sub
aad
cmc
push
mov
call
scas
mov
push
(bad)
xor
xchg
inc
adc
dec
nop
out
inc
aad
mov
retf
outs
push
xchg
cmp
push
(bad)
outs
jecxz
scas
cs
adc
out
loope
mov
imul
xchg
inc
imul
daa
gs
xor
inc
mov
popf
xchg
add
in
push
mov
inc
bound
mov
test
xor
add
pop
mov
movs
outs
mov
sub
dec
and
(bad)
cmps
push
xor
add
mul
pop
jg
inc
movs
pop
dec
or
and
mov
jmp
test
ret
popa
enter
not
pop
call
add
js
push
std
sub
push
and
aaa
xchg
push
dec
push
mov
call
mov
jns
test
cmp
add
pop
idiv
xlat
aaa
out
mov
dec
xor
sub
push
mov
xchg
pop
mov
js
xor
sub
popf
into
mov
sbb
or
sub
call
cs
inc
loope
and
movs
adc
out
cld
(bad)
mov
sahf
(bad)
jmp
adc
scas
dec
push
cmp
into
jae
repz
dec
lock
push
xor
ja
fistp
repz
jo
out
or
inc
lods
jbe
and
lds
popf
mov
imul
add
pop
push
in
or
jne
push
sbb
popf
fwait
cli
cli
repnz
arpl
pushw
clc
jge
cmp
add
lods
mov
cwde
scas
aam
dec
xchg
in
fmul
sbb
dec
xchg
mov
push
and
xor
icebp
pop
vsubsd
scas
mov
push
adc
scas
in
call
adc
loope
inc
inc
mov
jg
and
test
hlt
jbe
pop
inc
and
mov
enter
cmp
xchg
inc
fsub
xor
sbb
hlt
mov
and
aad
xchg
or
aam
nop
nop
das
fbld
fnstcw
(bad)
bound
(bad)
xor
pop
das
mov
into
xor
pop
xchg
mov
std
dec
sahf
sbb
dec
cs
sub
cli
out
cmp
mov
(bad)
je
add
adc
cli
call
xchg
mov
out
ins
retf
daa
pop
retf
pushf
push
mov
fsubr
arpl
and
mov
cmc
adc
(bad)
imul
shl
or
push
push
jmp
add
push
jb
sub
or
mov
leave
and
test
aas
fisub
mov
sub
mov
lds
push
sub
or
lock
lahf
repz
cwde
xchg
mov
fst
neg
add
sti
mov
xor
ins
or
mov
jno
mov
dec
and
popa
lahf
and
inc
mov
sar
mov
push
ficomp
test
mov
xor
dec
xchg
pop
mov
cwde
das
or
popf
mov
repz
(bad)
mov
mov
push
and
stc
mov
jbe
mov
jecxz
lea
(bad)
cmp
nop
pop
lods
popa
mov
hlt
prefetchwt1
shl
dec
lock
jecxz
push
(bad)
popa
(bad)
mov
push
adc
mov
pushf
popf
repz
adc
xor
(bad)
ficom
test
and
pop
sub
dec
and
(bad)
mov
mov
popf
jmp
and
stos
arpl
push
loopne
stos
out
xchg
sti
lods
ins
ucomiss
stc
pop
xor
test
(bad)
pop
mov
icebp
repz
shr
data16
mov
dec
and
rcl
or
or
cmc
pop
push
popa
movs
adc
xor
pop
je
and
mov
mov
into
xor
push
inc
mov
mov
jns
mov
rcr
in
push
lahf
aad
push
jecxz
sub
jb
rol
lods
(bad)
or
call
push
daa
sub
test
outs
inc
retfw
xor
sub
push
pusha
pop
inc
in
ror
mov
mov
lock
adc
sub
cmc
aaa
jnp
cdq
popf
out
repnz
push
fnstcw
mov
pop
inc
adc
test
shr
sub
mov
cdq
xchg
out
lahf
sbb
jmp
clc
pop
jnp
imul
or
pop
pop
movs
cmovle
aad
jl
out
scas
dec
movs
in
and
mov
sbb
ins
and
ds
(bad)
adc
in
jmp
cmp
push
cdq
je
mov
or
xchg
test
inc
xor
aaa
mov
mov
sbb
inc
aad
ss
inc
in
sub
gs
fmul
stc
dec
and
popf
popa
and
pop
xlat
in
cmp
jb
into
movs
(bad)
in
xchg
push
cmp
(bad)
clc
mov
pushf
jl
mov
jne
mov
jno
aas
pcmpeqb
inc
push
test
cmp
pop
lea
push
jmp
outs
xchg
sbb
push
jle
or
fs
cmp
rcl
push
out
xor
pop
jns
test
addr16
sub
ss
adc
shl
push
adc
call
scas
dec
cs
pusha
int
arpl
loop
inc
out
cmp
sub
pop
clc
inc
mov
ins
cld
or
ffree
pop
sub
mov
dec
or
push
push
push
adc
or
aam
ret
repz
dec
adc
popa
mov
mov
lods
xor
movs
outs
cld
pop
scas
in
fsub
cmp
mov
rcl
cs
imul
ret
push
add
mov
(bad)
mov
sbb
xor
movs
or
repnz
sub
push
cmps
fwait
inc
cmps
mov
mov
sahf
int3
inc
push
cmp
push
jmp
xchg
sub
jb
add
and
icebp
ret
pushw
adc
sbb
and
ror
inc
scas
dec
ins
sub
xor
lds
and
out
pop
pushw
jmp
cmps
push
mov
loop
adc
hlt
xchg
jmp
leave
mov
sub
stos
pop
ja
push
arpl
jbe
fdiv
fsub
into
aas
xchg
loop
xlat
mov
cmp
out
mov
enter
jnp
xor
fidiv
iret
cmp
adc
or
mov
movs
or
lahf
xchg
and
ja
and
jle
fxch
push
cld
sub
cmp
sbb
sbb
aas
mov
jnp
(bad)
dec
ss
call
pop
dec
cs
lea
pop
das
lods
jl
cmc
(bad)
jmp
xchg
adc
repz
and
xor
sbb
jnp
or
jae
out
xchg
adc
sub
mov
dec
pusha
xchg
mov
sub
sbb
in
sahf
xor
ins
adc
nop
xlat
pop
test
cmp
shr
mov
dec
mov
jecxz
mov
jb
rcr
mov
cwde
std
jmp
rcr
imul
push
jmp
fcom
xchg
jmp
pop
xchg
dec
adc
push
xchg
(bad)
stos
jne
in
mov
add
repnz
repz
inc
inc
cmp
pop
fbstp
xor
add
fwait
daa
mov
and
outs
inc
adc
test
push
jmp
cmps
push
mov
aam
ss
sbb
mov
ret
in
cs
out
sub
push
push
repz
xor
cmp
imul
jnp
loopne
fstp
mov
mov
popa
pop
in
pop
sub
cld
fisttp
sbb
sub
xchg
sar
or
jg
and
mov
push
fabs
mov
repz
jo
cld
idiv
sbb
jb
pop
retf
imul
xor
hlt
dec
sar
inc
loope
fnsave
retf
push
fcom
jl
cmp
movs
out
jbe
fwait
test
mov
or
mov
shr
push
pop
fsubr
fcom
add
retf
sub
pop
dec
cmp
stos
(bad)
pop
sub
fcompp
cld
jl
pop
imul
pop
mov
ja
das
dec
cwde
test
lods
inc
add
mov
xor
jl
xchg
cwde
mov
push
dec
outs
arpl
pop
sahf
test
cmps
mov
mov
stos
and
jo
adc
mov
cld
pop
sahf
xor
mov
out
sub
(bad)
mov
ins
(bad)
retf
nop
jg
lock
jmp
pop
ss
push
dec
xor
xor
cwde
xchg
cmp
addr16
(bad)
mov
xor
pushf
test
shl
iret
mov
push
outs
aaa
jno
enter
xor
mov
jg
jnp
inc
sbb
in
icebp
cmps
or
inc
out
out
jns
pop
or
rcr
retf
loope
jne
pop
mov
mov
jmp
out
push
out
jle
out
retf
add
retfw
shl
adc
or
adc
daa
xchg
dec
call
adc
les
or
cmps
in
push
in
or
inc
xor
mov
dec
mov
bound
hlt
js
add
loope
rcr
cmps
jnp
xchg
rol
int
ss
stc
mov
jae
push
push
rcr
jns
(bad)
leave
push
mov
fistp
clc
xchg
ins
add
mov
arpl
test
mov
test
fldcw
daa
stos
sub
add
mov
cmp
hlt
out
js
dec
int3
stos
inc
adc
in
in
xchg
je
adc
cli
sahf
loop
and
fwait
repz
adc
int
mov
push
lahf
cmp
pop
pop
ja
stos
mov
pop
popa
call
mov
clc
ja
xlat
mov
mov
jbe
inc
push
ja
xchg
mov
xchg
call
add
inc
sar
mov
xchg
out
and
jmp
inc
jns
sbb
jmp
push
add
ret
sub
inc
test
mov
(bad)
scas
adc
in
gs
mov
mov
ds
jge
js
cmp
ja
jo
mov
es
cmp
mov
mov
aam
popa
push
sub
in
pop
scas
(bad)
enter
add
out
push
mov
(bad)
aaa
pushf
push
pop
and
mov
dec
cmp
pop
call
fs
pop
mov
dec
(bad)
hlt
xchg
adc
and
pop
retf
add
mov
jle
leave
sub
ds
mov
xchg
in
loop
xchg
dec
mov
dec
int3
xchg
je
push
adc
xchg
xor
push
dec
cli
pushf
mov
in
and
xchg
xor
sar
xchg
mov
out
inc
sar
sbb
dec
test
add
or
lock
lea
imul
push
jmp
inc
dec
fnstcw
jg
icebp
ret
bound
ins
sub
jmp
dec
loop
cmp
(bad)
jg
das
out
repz
icebp
pop
ret
mov
push
leave
mov
mov
repnz
add
and
in
and
lea
loopne
cdq
xchg
pop
dec
fxam
or
cdq
retf
jle
jmp
sti
ss
ins
ins
and
jb
sub
jno
cmps
hlt
push
sub
mov
xchg
inc
outs
inc
push
dec
sbb
sbb
lods
jnp
lock
xchg
fadd
lds
cld
pop
scas
mov
sub
iret
imul
jno
or
sbb
add
mov
mov
dec
loopne
pushf
mov
jbe
scas
adc
mov
cmp
ja
cwde
add
loope
aaa
fnstcw
test
inc
sub
addr16
fnstsw
fs
or
xor
enter
xchg
jns
cdq
fist
mov
rcr
les
shr
or
xchg
sub
sbb
mov
leave
cmp
and
pop
jns
retf
cdq
add
mov
ret
and
rcl
adc
in
scas
fsubp
adc
push
and
popf
jnp
int3
cmp
push
outs
jb
gs
mov
mov
enter
mov
mov
mov
pop
outs
sbb
std
cmp
jl
add
lods
call
pop
pop
sbb
int
push
and
test
adc
or
mov
xor
sbb
stos
sahf
add
push
xchg
outs
jae
jp
aam
dec
arpl
dec
(bad)
not
inc
pop
aaa
jo
ret
push
xchg
push
stos
xchg
sub
push
or
mov
dec
inc
jge
test
inc
(bad)
adc
jl
push
clc
add
pop
repz
cmps
pop
imul
adc
ficom
xor
shl
test
(bad)
call
pop
sbb
sahf
je
hlt
jl
pusha
sub
sbb
sub
mov
push
mov
retf
cmps
clc
inc
lods
add
jmp
mov
jmp
test
lds
pop
popf
push
xor
cmp
add
ins
retf
out
sbb
add
ja
mov
mov
cs
cmp
xchg
push
rcr
cld
dec
and
aam
mov
(bad)
jno
les
pop
jbe
loop
or
jb
in
jle
inc
dec
add
push
lahf
jo
pop
pusha
pushf
cmp
mov
push
bound
sbb
inc
in
rol
pop
xchg
cdq
cli
and
ror
mov
cmp
inc
jmp
mov
cdq
mov
jmp
xchg
push
ss
push
aas
jae
enter
cmp
jne
out
mov
jnp
pusha
xchg
outs
xchg
cmp
add
add
sbb
(bad)
and
frstor
das
mov
mov
stos
movs
mov
jge
and
aas
test
mov
cld
bound
cmp
cmp
pusha
push
mov
pop
and
pop
shl
jl
jmp
adc
lods
pop
dec
and
in
sahf
(bad)
jb
xlat
popa
test
inc
cmp
sahf
test
dec
adc
in
sbb
test
rcr
add
cwde
sub
(bad)
jmp
or
push
gs
aam
inc
push
aaa
lock
vpsubsw
out
cmp
in
pop
scas
call
mov
push
imul
mov
movs
retf
lods
hlt
jo
aam
add
and
and
movs
pop
mov
cmp
sti
repz
or
xchg
sub
xor
dec
loopne
call
retf
je
scas
and
ret
retf
cmps
mov
ret
sbb
out
xor
clc
(bad)
jo
stos
dec
cmp
push
out
dec
xchg
sahf
xchg
gs
xchg
dec
inc
in
jp
fcmovne
bound
or
ret
push
push
aaa
loope
or
fwait
add
out
sub
imul
retf
repz
xor
fdivr
push
rol
push
mov
imul
movs
lds
sbb
inc
(bad)
loopne
out
(bad)
fucomi
push
mov
ss
pusha
xchg
sahf
mov
and
lds
movs
cmp
and
dec
add
and
test
loopne
sbb
xlat
cmc
test
jp
ds
sar
ins
xchg
xchg
dec
test
push
movs
sahf
pop
mov
jno
xchg
fcmove
or
sar
pop
mov
mov
xor
mov
cmp
or
jl
sbb
aad
mov
push
enter
int
pop
cdq
sbb
and
mov
or
push
shl
fisubr
addps
xor
out
(bad)
adc
(bad)
retf
jne
call
clc
icebp
movs
mov
mov
fistp
gs
int3
into
dec
push
jbe
fwait
inc
dec
inc
dec
imul
push
mov
into
add
cmp
daa
mov
int3
jecxz
daa
nop
daa
clc
jae
lock
shl
ins
or
and
adc
sbb
inc
jne
sbb
stc
stos
adc
xor
in
stos
add
(bad)
shl
je
adc
cmps
inc
cmp
into
sbb
adc
sub
dec
pop
not
scas
pushf
scas
dec
push
sbb
retf
and
pop
pop
rol
push
xchg
xchg
nop
pop
adc
pop
push
stc
repnz
hlt
jae
movs
daa
sbb
(bad)
pop
cmp
gs
rcl
scas
les
lea
data16
adc
pop
mov
dec
xchg
dec
jge
xchg
push
fs
xchg
std
push
pushf
pushf
aaa
ja
push
or
xor
adc
das
test
lods
add
cdq
push
inc
add
and
ds
repnz
and
or
add
rcl
xchg
sub
add
dec
pop
loop
in
xchg
test
inc
xlat
fs
dec
test
lods
in
std
adc
xchg
sti
sbb
sbb
(bad)
push
xor
dec
xchg
mov
sbb
mov
pop
aad
mov
pop
fwait
push
adc
lods
adc
sbb
fild
sbb
out
inc
xchg
mov
lds
sbb
stos
fsubr
xchg
into
loopne
add
or
inc
xor
jmp
js
pop
jle
call
jbe
ins
add
pop
sub
into
test
in
js
clc
push
mov
repnz
cmp
and
lods
or
jecxz
(bad)
jmp
iret
xor
shl
pusha
push
(bad)
lahf
outs
scas
fbld
cmp
cwde
mov
or
imul
in
jge
aam
sahf
inc
inc
jnp
sbb
xor
(bad)
pop
icebp
(bad)
icebp
xor
cmp
sahf
aas
mov
int3
push
cmp
(bad)
xor
adc
and
aam
divps
jnp
test
push
mov
adc
pusha
xor
and
sub
(bad)
jnp
sar
jp
mov
pusha
rcl
cdq
sbb
daa
or
shr
push
and
push
dec
push
std
pop
mov
dec
adc
mov
mov
mov
jle
(bad)
les
mov
mov
ret
pop
push
dec
mov
mov
fdivr
ss
in
mov
lock
repnz
addr16
cmp
add
add
imul
push
xor
enter
aaa
mov
shl
xor
ja
push
mov
jno
mov
add
or
daa
mov
push
xchg
test
pop
mov
ja
mov
push
xchg
cmp
add
(bad)
xor
out
arpl
push
in
out
inc
cwde
mov
push
sbb
lock
fnstenv
ss
cmp
jnp
mov
rcr
inc
sti
mov
sti
mov
out
push
xchg
stc
and
stos
mov
inc
(bad)
fld
jg
adc
mov
daa
cvttps2pi
call
ins
xchg
es
outs
ret
ss
sbb
cmp
inc
cmp
sub
mov
rol
jge
fistp
jle
fs
push
test
cmp
(bad)
and
xor
sti
xor
lea
cli
cmps
and
mov
inc
(bad)
sbb
sub
cmp
loop
scas
jmp
mov
shl
mov
in
sti
stc
lea
mov
sub
push
das
mov
aad
enter
hlt
mov
mov
cmps
in
add
adc
rcr
jl
or
lea
xchg
xchg
dec
inc
and
mov
leave
push
jl
dec
push
sti
push
out
or
push
lock
mov
ja
mov
xchg
cmp
push
test
and
sti
dec
add
stc
sti
add
in
repz
push
sbb
out
mov
ins
inc
xchg
test
jbe
repnz
in
add
(bad)
cld
das
xor
popa
pop
dec
aad
stos
xor
pop
adc
or
mov
push
cmp
retf
in
pop
test
popa
outs
add
rcl
mov
adc
pop
sub
pop
call
adc
call
icebp
xor
or
aad
sbb
pop
dec
mov
clc
ja
xchg
sahf
mov
inc
jae
dec
cmp
pop
fisubr
addr16
(bad)
out
sti
loope
sub
mov
mov
aaa
pop
cmps
sbb
mov
nop
xchg
leave
mov
cmp
jnp
ret
rcl
cmc
mov
mov
jp
(bad)
dec
jb
ds
hlt
sub
cdq
sub
rep
ds
jne
arpl
out
fwait
lds
mov
leave
adc
push
cmp
add
loope
scas
ret
neg
cmp
jns
rcl
icebp
pop
lods
inc
mov
or
outs
and
fwait
mov
popa
jg
adc
mov
mov
cmp
xlat
dec
pop
mov
inc
mov
cwde
ds
aas
cmp
movs
push
test
stos
dec
ret
in
adc
adc
dec
dec
test
pop
les
addr16
xor
inc
and
inc
aam
dec
xchg
jl
dec
or
sbb
mov
inc
dec
push
aad
popf
mov
in
ror
and
dec
push
xchg
dec
dec
in
mov
(bad)
cs
pop
mov
sub
jae
xchg
dec
aam
xchg
aaa
repz
mov
add
dec
arpl
fsubr
xchg
shr
mov
inc
pop
push
jbe
dec
popa
(bad)
jp
popf
repz
es
push
in
xor
mov
mov
daa
xor
jnp
dec
movs
inc
inc
pop
push
jb
adc
pop
jmp
jl
dec
sbb
out
aas
cmp
or
xchg
or
and
mov
popa
inc
ds
xor
mov
shr
xor
lea
push
dec
scas
in
dec
dec
fild
test
and
add
pop
and
call
push
call
cmp
fs
sbb
aas
jne
in
push
cli
add
cmp
push
loopne
and
cmc
or
fiadd
movs
dec
jne
mov
scas
call
(bad)
das
je
xor
xchg
es
into
stos
push
movs
and
inc
jno
retf
push
sti
and
popf
add
imul
fmul
xor
mov
mov
daa
(bad)
mov
push
in
jp
cmps
jo
jns
and
mov
test
adc
int3
aam
xchg
xchg
sbb
(bad)
repz
mov
xchg
jmp
inc
and
ja
cli
fild
dec
std
xor
jle
aam
in
adc
ret
js
or
mov
jmp
mov
push
add
iret
mov
adc
imul
cli
ins
push
mov
sub
adc
sti
push
mov
xchg
lods
ror
cld
mov
inc
mov
pop
push
sub
inc
sbb
je
test
add
mov
dec
push
test
in
jns
repz
xchg
mov
popa
mov
mov
shr
cdq
pop
bound
ds
xor
mov
bound
push
out
sbb
hlt
or
jecxz
shl
movs
cdq
inc
mov
mov
or
loope
sahf
ins
cmps
mov
jbe
test
cmc
jp
xchg
jbe
and
test
movs
xor
sub
dec
in
retf
xchg
xlat
jecxz
dec
pop
cmp
aaa
or
mov
das
dec
push
mov
cmp
mov
sar
sbb
sub
out
sub
inc
jecxz
sub
mov
jb
out
je
push
pusha
lds
cmc
cmc
mov
add
and
jbe
enter
fidiv
ins
dec
cmp
dec
add
js
sub
retf
or
inc
(bad)
out
neg
mov
push
pop
das
das
mov
mov
shr
ds
pop
lods
std
mov
jge
inc
mov
xchg
xchg
shl
pop
sbb
jno
test
add
ja
pxor
cmc
popf
pop
mov
pop
xor
outs
leave
xchg
jnp
pop
mov
sahf
cmp
lods
retf
jle
scas
and
mov
sbb
je
call
hlt
adc
mov
leave
in
pavgb
jae
push
cmp
test
repnz
adc
aas
and
and
mov
ror
lock
sbb
or
in
repz
sbb
sbb
inc
into
pusha
clc
jl
rcr
daa
call
ss
mov
mov
cs
mov
out
inc
add
cmp
out
cmp
mov
xchg
dec
inc
sbb
sahf
loopne
or
lods
push
outs
inc
sahf
lods
xchg
sbb
int3
out
push
sub
popa
cmp
add
jb
(bad)
cwde
sti
lahf
or
jmp
jnp
dec
mov
fcmovb
push
or
nop
jmp
outs
cld
enter
imul
lock
ret
adc
pushf
jp
sar
test
dec
xchg
sar
push
test
retf
cdq
dec
loopne
pusha
sbb
add
shl
xor
mov
mov
das
aaa
sti
stos
shl
popa
mov
retf
nop
bound
adc
retf
jg
mov
adc
push
push
outs
add
push
sub
push
or
xchg
loopne
mov
inc
rcl
(bad)
mov
pop
mov
mov
loop
cmp
sub
inc
jecxz
cli
outs
sti
sub
mov
dec
jae
cmp
mov
jb
cld
in
iret
inc
jecxz
imul
cld
inc
fcmovnu
movs
(bad)
cld
sbb
add
or
sbb
xchg
iret
enter
pop
pop
xor
shl
inc
pop
adc
sub
adc
retf
fisub
jnp
add
imul
push
and
xchg
push
arpl
push
jmp
ja
push
loope
das
stos
mov
and
add
push
imul
jmp
test
inc
shr
(bad)
mov
icebp
mov
scas
pop
inc
add
jns
mov
cmc
or
xchg
adc
push
into
(bad)
ss
adc
repz
mov
or
pop
in
xchg
into
adc
cmp
jb
jge
inc
adc
jb
jb
dec
mov
outs
nop
je
ror
jp
fstp
adc
nop
mov
inc
xchg
sbb
cmps
into
fstp
gs
arpl
mov
stos
jmp
dec
(bad)
xchg
(bad)
in
adc
push
stos
(bad)
sbb
xchg
std
loope
ins
(bad)
retf
cmp
and
jno
outs
lds
xor
mov
adc
cmps
mov
retf
mov
mov
call
je
mov
shl
sub
mov
cmp
aaa
inc
ret
jle
je
inc
loope
adc
xor
push
adc
je
icebp
dec
aaa
or
lods
push
pop
mov
xor
pop
pop
sti
lea
in
pusha
xor
jmp
mov
repz
xlat
add
cmovns
sbb
xchg
jmp
dec
xor
xchg
out
adc
jge
or
pop
sbb
stos
adc
test
fwait
mov
leave
add
retf
dec
mov
mov
push
shl
bound
and
in
mov
pop
cld
loopne
mov
jmp
jo
push
sar
lds
and
push
leave
sbb
sti
cmp
cmp
test
mov
cmp
(bad)
cmps
dec
repz
inc
and
gs
sbb
pop
push
int
cwde
mov
jo
sub
xchg
in
jmp
mov
xlat
mov
icebp
xchg
pop
push
cmps
xor
adc
mov
retf
dec
(bad)
out
mov
add
sti
jp
or
sub
sahf
mov
pushf
push
mov
jmp
xor
push
pop
daa
or
xor
iret
mov
lahf
inc
inc
dec
add
lahf
je
xchg
cmp
in
test
mov
sub
xchg
(bad)
jp
cmp
mov
mov
pusha
pop
mov
push
retf
jno
add
sub
cmp
fwait
jge
addr16
in
push
sbb
jle
xchg
jnp
push
nop
jmp
fwait
lahf
xlat
retf
mov
jne
leave
cmc
int3
pop
or
add
push
dec
fsub
dec
ins
mov
lahf
push
add
xor
lahf
push
mov
pop
addr16
(bad)
or
cmp
cmp
add
mov
or
ss
pop
cli
mov
cli
jg
mov
in
mov
pop
arpl
adc
jno
(bad)
ror
les
mov
sbb
sub
into
inc
ins
leave
pop
cli
(bad)
pop
test
dec
jae
mov
dec
scas
in
test
fwait
xchg
or
ins
or
cmp
das
retf
sub
repnz
mov
mov
cmp
cmc
std
je
sub
push
add
out
movs
std
cmp
and
jnp
scas
or
add
push
xchg
out
movs
in
out
xchg
sahf
retf
cdq
outs
sbb
mov
xor
in
xchg
popa
mov
repz
gs
dec
mov
push
loope
lahf
mov
inc
hlt
sub
jmp
dec
pushf
ret
in
inc
test
mov
adc
xchg
fmul
mov
inc
jbe
sbb
jne
(bad)
es
jecxz
jl
xchg
or
popf
inc
cmp
xchg
(bad)
test
stc
jns
mov
test
arpl
mov
jecxz
xor
xor
mov
clc
imul
xor
jmp
xchg
fucomp
scas
aaa
std
sub
jns
inc
or
ins
rol
jg
fwait
into
or
call
sbb
add
dec
or
add
aam
mov
movs
jmp
jmp
out
push
xchg
add
mov
fistp
cmp
xor
jmp
(bad)
out
in
repz
dec
and
jle
push
out
xor
cs
jbe
mov
add
mov
iret
xor
out
dec
addr16
ds
adc
out
push
cmc
push
mov
nop
xor
outs
and
stos
retf
ror
fiadd
pop
push
popa
push
shl
jecxz
out
loopne
pop
add
sbb
sub
aas
in
nop
xor
xor
inc
cwde
xchg
hlt
inc
xchg
push
ret
inc
push
inc
xor
sub
dec
inc
pop
sar
movs
(bad)
cmp
jmp
dec
dec
test
cdq
adc
mov
or
mov
add
mov
hlt
out
mov
push
cmps
adc
jmp
test
dec
or
or
arpl
fwait
leave
pop
push
mov
mov
(bad)
mov
stos
psadbw
sub
and
adc
inc
mov
xor
jmp
(bad)
jle
fidivr
inc
jbe
ins
sti
sub
or
add
mov
data16
xor
sar
pop
cli
js
add
pusha
mov
and
mov
adc
sub
adc
jmp
cmp
data16
scas
hlt
vmovd
pop
pushf
pushf
dec
adc
mov
dec
test
adc
mov
movs
inc
lock
in
cld
xor
push
jecxz
xlat
js
add
cdq
cs
inc
inc
sahf
out
lods
rol
xchg
repnz
adc
cmps
push
mov
(bad)
lahf
mov
xchg
mov
pusha
dec
pop
sbb
push
lahf
imul
jne
repz
ja
dec
icebp
into
ins
and
jae
xor
mov
aas
arpl
cdq
xor
imul
sub
movs
mov
ficomp
stos
xlat
push
push
rol
mov
jae
leave
gs
test
sbb
lods
sub
arpl
lods
push
mov
or
push
hlt
or
cmp
push
pop
sysexit
loopne
adc
out
fcomp
call
pop
mov
dec
sbb
xchg
in
pop
cwde
ins
bound
aad
pop
xchg
and
fs
jmp
aam
push
xor
aas
div
adc
loopne
jecxz
popa
lahf
cmp
push
push
jne
push
hlt
mov
jecxz
xchg
adc
dec
pop
rcr
mov
or
mov
jns
pusha
fnstsw
xlat
dec
int3
pop
push
mov
dec
jl
pop
imul
add
ja
outs
cli
push
inc
xchg
push
movs
add
repz
clc
push
cmp
pop
sub
dec
sub
cmp
scas
dec
ds
adc
(bad)
icebp
and
stos
int3
sub
sub
aaa
push
and
sbb
add
stos
push
(bad)
int3
dec
cmc
arpl
sti
xchg
hlt
(bad)
mov
shr
imul
loopne
fcomip
jae
pop
sbb
inc
repnz
xlat
jmp
call
jns
stc
push
call
pop
pop
add
fwait
sbb
cwde
loop
fmul
push
(bad)
scas
add
sbb
cld
pop
pcmpeqb
hlt
das
adc
pop
in
or
bound
int3
outs
rcr
cmp
push
cmps
and
imul
call
adc
mov
dec
dec
out
mov
jmp
add
arpl
pop
inc
aas
jne
xchg
xor
imul
jno
retf
inc
dec
out
lahf
mov
push
sbb
xchg
mov
dec
sub
rol
fstp
dec
and
jnp
and
loope
mov
hlt
retf
mov
cmps
std
pop
xchg
and
test
jg
test
push
sbb
cli
or
mov
rcr
and
frstor
mov
in
add
cdq
imul
adc
xlat
in
fnstsw
sahf
bound
sbb
sbb
stc
aad
call
xor
sbb
mov
movs
and
sub
lea
(bad)
dec
push
inc
int3
sub
jge
jmp
adc
xchg
stos
inc
lods
mov
cs
retf
mov
inc
mov
xlat
ins
dec
push
or
fcmovnb
adc
nop
ret
push
xor
gs
ds
in
cmc
sbb
mov
in
add
xor
adc
jnp
mov
nop
mov
ins
xor
fild
push
sub
cdq
sbb
fsub
and
mov
cmp
mov
repnz
(bad)
pop
mov
gs
je
inc
mov
ins
sub
jg
xchg
mov
leave
mov
jl
daa
sub
push
dec
pop
xchg
mov
movs
and
(bad)
out
adc
pop
int
call
mov
pop
inc
int
jne
jmp
lea
inc
in
inc
jle
jmp
retf
in
not
imul
jbe
xlat
dec
pushf
out
jns
xchg
dec
mov
outs
cmp
ficomp
loope
adc
xchg
retf
pop
imul
rcl
out
clc
outs
push
mov
(bad)
inc
aad
add
push
lea
xor
mov
ret
cwde
iret
shl
sub
xlat
ins
pop
or
mov
jo
shl
arpl
sub
aam
jnp
sub
lods
or
push
cmp
push
mov
jmp
out
xor
movs
pusha
cmp
add
fdivr
cs
cmp
jb
sbb
xlat
pop
sbb
js
sub
jne
ds
(bad)
sbb
rcl
mov
or
or
pop
cmp
mov
mov
movs
mov
sbb
sti
jmp
ss
(bad)
icebp
icebp
paddw
mov
mov
pop
push
mov
shl
xchg
add
aas
inc
push
push
and
aas
cld
sub
mov
in
xor
xchg
and
test
push
add
push
outs
ret
pop
xlat
pop
pop
cdq
(bad)
adc
repz
push
push
mov
mov
dec
mov
clc
cmp
push
inc
sti
pop
pop
jno
xor
pop
loope
inc
sbb
jge
shl
pop
adc
mov
cwde
fsubr
popf
push
sbb
cmc
sbb
add
or
and
mov
fwait
test
neg
clc
repnz
gs
test
shl
loopne
in
pushf
rcl
jp
add
jp
into
mov
or
dec
pop
clc
and
xchg
icebp
aam
not
fsub
shl
inc
pop
lods
or
mov
jo
test
inc
mov
add
xor
mov
jbe
xchg
scas
dec
mov
(bad)
and
sub
rcr
rol
addr16
push
loop
pop
shl
sub
fs
cli
mov
hlt
cld
movs
(bad)
je
adc
je
loope
not
test
cmps
out
dec
sbb
jp
jle
and
in
or
adc
sub
loope
int3
add
test
cli
iret
lods
add
in
mov
inc
outs
ret
mov
sbb
loop
xchg
or
xchg
sbb
aaa
xor
aas
jbe
and
pop
push
xchg
cwde
ret
loopne
pop
sahf
adc
mov
daa
and
daa
sysenter
pop
mov
(bad)
mov
repz
bound
adc
imul
test
push
out
pop
lods
sub
das
mov
leave
jnp
xor
xchg
jae
cdq
push
sub
dec
dec
add
daa
das
jo
push
outs
inc
inc
xor
inc
inc
std
pushf
enter
mov
jecxz
sub
pop
es
cmp
xor
push
jg
inc
call
enter
sahf
loop
mov
cli
call
movs
xor
lahf
shl
pop
jg
push
lahf
mov
push
mov
mov
push
mov
push
mov
mov
xchg
adc
pop
test
mov
popa
sbb
cwde
ret
jge
data16
cwde
pop
jecxz
les
pop
stc
mov
cmp
mov
jb
mov
fnstcw
mov
xor
push
dec
xor
mov
sub
add
scas
xor
xchg
cs
cmp
(bad)
pusha
ins
jl
aaa
mov
cmp
fistp
je
loopne
ins
push
pop
xor
stos
pop
in
push
sub
pop
push
out
loopne
cmp
xor
or
jae
xacquire
or
xchg
call
xchg
xlat
mov
inc
add
jp
mov
jmp
push
cdq
test
add
xchg
jmp
clc
sub
xor
cmp
sbb
cmps
xchg
scas
and
push
pop
int3
out
jb
or
nop
lock
or
std
adc
mov
popa
fsubr
and
dec
or
mov
inc
fisub
outs
inc
in
js
mov
add
jl
pop
adc
push
lock
push
lods
lahf
neg
loope
sbb
sub
(bad)
scas
pop
xor
lods
loope
in
fdivp
scas
scas
sbb
outs
jbe
dec
and
jl
jbe
jp
mov
test
and
dec
xchg
and
xchg
ret
dec
loop
je
loope
dec
imul
inc
pusha
pusha
sub
cs
repnz
push
aad
fsub
retf
or
lds
pop
fdivr
cmps
jg
mov
repnz
ret
and
pop
int3
ja
imul
jmp
jns
xchg
adc
mov
je
sub
nop
movs
outs
es
mov
jle
repz
fs
or
in
sub
fwait
outs
ins
nop
push
ins
mov
iret
fldcw
sar
adc
sub
rcl
adc
lea
mov
lock
push
or
mov
call
fcom
(bad)
jne
fidivr
cs
pop
and
ja
sbb
jno
xor
xchg
aam
sbb
inc
imul
mov
mov
test
fist
sti
arpl
mov
sub
in
loop
pop
sbb
cmp
sub
xchg
cli
ficom
pop
je
cmc
ss
ins
popf
clc
cmp
loopne
fadd
jg
dec
mov
into
(bad)
cmp
in
test
add
push
dec
xor
adc
push
test
jo
int
mov
dec
iret
cmps
(bad)
sub
push
out
cli
cwde
add
dec
add
add
jo
jge
retf
les
in
cdq
idiv
inc
shl
mov
add
adc
out
dec
les
cmp
or
mov
fcomp
or
cli
xchg
mov
fsub
retf
ins
out
cmp
mov
mov
add
mov
xlat
mov
std
inc
and
ja
daa
pop
add
iret
mov
in
adc
fisttp
dec
scas
mov
xchg
jp
add
ins
loop
test
and
clc
out
mov
pop
test
call
mov
cmp
jnp
jne
je
lock
mov
(bad)
push
mul
fadd
shl
xor
inc
or
mul
mov
sub
push
jmp
and
or
(bad)
pop
push
lahf
in
sub
ror
push
fs
cmps
cmps
sub
xor
dec
mov
arpl
stos
xchg
ror
scas
loopne
inc
pop
sub
test
pop
retf
add
scas
mov
lea
movs
int3
push
or
aas
hlt
dec
in
push
jmp
sub
out
mov
lock
push
sub
loopne
mov
cmp
fcom
dec
push
pushf
ja
xchg
xor
mov
mov
ror
dec
pop
out
das
fcmovu
xor
sahf
sub
mov
js
xor
add
xchg
sbb
retf
sbb
jle
sti
xchg
jmp
arpl
xor
mov
fild
cmc
sub
push
aam
mov
call
loopne
in
rol
sub
int
gs
inc
inc
cmp
mov
pop
inc
je
or
and
pop
jne
or
mov
out
dec
stc
dec
test
add
adc
fdivrp
outs
mov
or
retf
push
mov
push
fmul
ret
fidivr
and
outs
mov
add
fdivr
fstp
lds
xchg
repz
adc
movs
ins
scas
js
into
dec
scas
xchg
sbb
js
stc
dec
aad
scas
imul
pop
mov
dec
stos
pop
dec
imul
call
retf
cmps
push
sub
cmps
xor
lds
outs
sub
stos
fdivr
xor
jo
add
or
idiv
lds
setae
xor
jg
ss
sbb
call
lea
(bad)
adc
je
std
add
shr
mov
add
cmps
and
lds
test
pusha
popw
(bad)
sbb
out
aaa
movs
pop
shl
mov
sub
(bad)
fldcw
das
xor
arpl
push
xor
call
(bad)
ja
ins
fs
or
gs
pop
mov
daa
inc
stos
pusha
fcom
cmc
inc
sahf
sub
test
aaa
push
cmp
int3
cwde
cmp
xchg
xor
scas
into
jge
retf
nop
jecxz
enter
sub
test
mov
fsub
jecxz
neg
pop
or
mov
sub
push
mov
lea
test
mov
shr
repnz
dec
lahf
push
call
cmp
fidiv
adc
mov
fwait
stos
nop
pushf
cmp
push
push
pop
xor
std
sbb
jmp
icebp
jmp
pop
mov
rcr
fnstenv
call
jno
mov
lods
pusha
xor
ss
jno
adc
in
mov
in
push
jecxz
test
mov
outs
in
rol
outs
call
ds
push
pusha
jnp
daa
pop
mov
pop
jge
and
add
ret
xchg
pushf
mov
adc
sub
jg
push
adc
iret
in
sar
in
fist
add
(bad)
pop
int
dec
or
mov
scas
(bad)
imul
mov
fsubr
int
adc
and
ins
movs
test
cld
div
cmp
add
dec
and
test
or
aam
push
fwait
push
stos
call
xchg
rol
pop
add
xchg
fmul
adc
stc
inc
into
sub
xchg
xchg
jnp
imul
adc
dec
int3
mov
aam
hlt
xchg
(bad)
addr16
mov
sub
in
mov
hlt
cmps
cs
add
cli
jb
fs
scas
bnd
int
xlat
nop
fwait
adc
push
test
sbb
shl
jo
es
fidiv
(bad)
stc
int
ja
call
inc
mov
jo
mov
pop
shl
push
or
repz
(bad)
and
lods
loop
outs
push
outs
and
fwait
mov
dec
push
jb
mov
aaa
fisttp
retf
lds
cwde
call
shl
sub
mov
test
imul
or
sbb
gs
js
jecxz
lods
addr16
xor
xor
lds
mov
test
and
pop
or
pushf
mov
mov
pop
adc
fadd
jecxz
adc
retf
popa
xor
xchg
adc
pop
bound
popa
xchg
adc
scas
xor
lds
and
pop
cmc
fscale
nop
lods
adc
fisub
loop
xor
fistp
mov
je
arpl
xor
jno
repnz
aad
fld
loope
pop
out
push
mov
xor
mov
or
loop
cwde
leave
mov
shr
xor
push
mov
hlt
lahf
inc
enter
aas
xchg
(bad)
mov
cdq
push
pop
mov
or
adc
mov
cmp
das
aad
popa
fimul
push
xchg
mov
mov
les
xor
jns
mov
xor
and
stos
sub
xor
mov
call
push
popf
cmp
ins
dec
gs
bound
mov
retf
sbb
add
div
cmp
fwait
cld
pop
in
cmp
leave
retf
jl
or
adc
aam
inc
xor
jnp
call
sbb
pusha
test
push
mov
loope
sbb
add
or
jle
sub
cmc
inc
jbe
adc
lods
popa
into
icebp
jmp
inc
pop
adc
cmp
cld
(bad)
fadd
inc
cld
jle
xchg
cmp
out
loope
lods
xor
movs
ret
inc
aas
rcl
xchg
adc
xor
in
sti
ds
xor
retf
call
mov
cs
pusha
inc
out
dec
xchg
jecxz
and
mov
test
enter
int3
call
dec
ret
js
push
mov
popf
mov
jae
sub
into
add
fwait
stos
jp
(bad)
xchg
jnp
popf
stos
push
(bad)
es
mov
movntq
ins
cli
push
test
push
outs
fidivr
sub
into
lods
jle
pop
and
call
cmc
in
cmps
jbe
addr16
push
jg
pop
xchg
and
ret
imul
fwait
cmp
push
rol
sbb
(bad)
mov
pop
hlt
in
ret
retf
inc
sbb
cwde
stc
addr16
add
loopne
mov
add
fistp
xchg
xchg
lds
or
imul
dec
not
dec
mov
adc
sub
jg
push
adc
addr16
inc
push
adc
je
add
inc
ret
outs
xor
lods
dec
xchg
add
sar
cwde
dec
or
add
fld
push
xor
and
es
fdivr
ss
in
mov
pop
and
sahf
push
call
jmp
pop
jmp
sti
add
xchg
mov
sar
mov
jmp
cmps
fwait
cmp
jae
xor
sahf
inc
aaa
and
fnstsw
xor
add
and
sbb
mov
fbstp
and
sub
mov
loop
push
dec
mov
stos
nop/reserved
repnz
addr16
add
and
push
xchg
jle
or
js
lds
repz
dec
call
or
fdivr
push
mov
ss
cmp
adc
or
sbb
xor
in
enter
ffree
mov
arpl
je
shr
in
push
and
cli
add
xlat
xor
shl
call
lock
xlat
push
aad
test
or
fisttp
jmp
test
mov
mov
dec
repz
(bad)
inc
mov
mov
cmp
test
pusha
test
xchg
ss
out
lock
push
dec
mov
clc
xchg
mov
and
pop
aam
pop
cs
call
push
pop
call
xor
aad
stc
dec
dec
inc
add
shr
mov
test
pusha
inc
mov
push
test
inc
xor
add
call
push
cld
and
fist
test
adc
jecxz
mov
call
dec
and
push
sbb
fwait
mov
ss
jnp
lock
sbb
xchg
or
es
test
sahf
pop
shl
jp
and
lea
pop
inc
xchg
inc
sub
jmp
mov
dec
add
jae
mov
cld
stc
jb
cmp
(bad)
jbe
pop
fwait
popf
shr
xor
pop
adc
loope
out
jnp
test
jmp
push
jae
pushf
enter
aad
adc
jo
retf
xor
jbe
stos
out
rep
call
cmp
icebp
pop
push
aaa
xchg
int
cld
stos
xchg
xchg
mov
sbb
outs
inc
sub
mov
and
out
mov
lahf
stc
enter
push
cwde
and
jp
jle
out
out
test
or
mov
fnsave
in
arpl
neg
lods
push
add
mov
js
cdq
jp
rcl
shl
aad
pop
pop
adc
inc
mov
inc
mov
call
mov
push
fwait
int
data16
out
ror
inc
xor
aaa
xor
mov
movs
pop
pop
jmp
outs
sub
shl
stc
(bad)
(bad)
mov
stos
loope
retf
xchg
imul
inc
movs
dec
jns
addr16
sub
xchg
dec
out
popf
xor
or
test
fadd
mov
jmp
mov
adc
or
imul
shr
in
neg
retf
std
mov
mov
push
inc
push
mov
retf
and
dec
and
mov
adc
test
add
in
test
or
fcom
mov
fnstcw
aad
mov
pop
in
push
inc
adc
ss
or
and
inc
mov
rcl
mov
call
adc
sbb
pop
dec
jae
xchg
pop
inc
call
sahf
idiv
(bad)
jl
push
es
shl
je
xchg
call
call
add
add
lea
or
mov
(bad)
cs
xchg
ret
xchg
cmp
enter
cmp
je
popf
sub
aad
ins
pop
pop
aad
popa
scas
fimul
cli
sub
or
mov
pop
jbe
xor
repnz
retf
icebp
dec
add
inc
push
dec
mov
fldenv
cld
cmp
rcl
push
aaa
in
fnstsw
pause
out
jg
lock
dec
add
(bad)
cmp
es
imul
push
into
fcmovnbe
shr
dec
rcl
jb
mov
mov
mov
xchg
std
adc
jns
xlat
call
sub
sbb
aas
sbb
push
push
sub
int3
int
test
aas
push
pop
push
mov
movs
or
add
pop
mov
add
or
jmp
add
sbb
xor
mov
nop
test
mov
add
lahf
mov
stc
(bad)
loopne
inc
call
adc
lds
nop
repz
stc
add
bound
lea
jbe
xor
xchg
xchg
in
adc
jo
mov
inc
mov
test
aas
fisubr
xchg
cmp
adc
loope
jne
inc
in
sub
xor
xor
dec
outs
(bad)
cli
or
bound
jmp
or
jle
or
jno
pop
out
add
cmp
adc
out
iret
push
inc
sbb
pushf
sar
test
jno
fdiv
in
in
cmp
sub
ins
idiv
sbb
or
dec
fisubr
inc
pop
jmp
fstp
lds
mov
and
pop
lods
retf
aad
mov
mov
sub
dec
(bad)
cmp
ins
mov
sbb
adc
test
data16
mov
lods
jno
shl
dec
js
xor
jmp
push
or
(bad)
cmp
push
retf
pop
imul
fstp
push
dec
gs
int
mov
push
jle
add
cmp
aaa
push
(bad)
scas
adc
fild
sub
push
xor
enter
iret
test
out
xor
sbb
push
(bad)
xor
xchg
jo
xlat
mov
out
mov
leave
and
enter
xor
inc
inc
imul
cmp
dec
jge
cs
push
cmp
loop
into
enter
test
xor
daa
mov
out
in
loope
jno
push
mov
xor
xchg
fsubr
push
dec
scas
nop
jno
sub
call
and
dec
jl
and
shr
sahf
sub
hlt
lods
(bad)
retf
in
push
loopne
adc
pop
push
cs
rcl
sbb
movs
add
or
movs
dec
in
pop
mov
mov
mov
adc
jb
xor
nop
repz
in
les
jo
add
retf
and
push
push
jmp
fbld
ins
sbb
mov
add
in
retf
das
mov
inc
xchg
pop
dec
push
xor
mov
ret
adc
scas
retf
out
mov
jge
push
xchg
popf
clc
je
adc
mov
mov
sbb
push
mov
mov
xor
jo
inc
jo
mov
push
dec
lods
mov
inc
jbe
jecxz
mov
jnp
xor
mov
adc
mov
(bad)
daa
out
jno
adc
or
icebp
push
or
icebp
jle
dec
jp
out
jbe
je
xchg
cmp
loopne
sbb
mov
pop
push
push
push
fcomp
addr16
aad
mov
loop
jp
fcomp
cmp
add
cmc
ror
aaa
ja
inc
jecxz
pushf
or
or
xor
clc
gs
dec
test
das
cmps
mov
fs
ror
inc
out
movs
cmp
cld
sub
cmp
fwait
les
add
adc
pop
dec
jmp
mov
add
stos
and
jecxz
push
adc
mov
inc
sub
stos
jne
jbe
retf
or
cmp
mov
pop
fcomp
jmp
pop
adc
stc
stos
push
jmp
add
dec
jp
xlat
gs
and
mov
gs
ins
and
shl
jl
pop
ins
adc
mov
ret
mov
xor
out
leave
in
test
call
sbb
dec
pop
cdq
jmp
xchg
or
dec
ins
(bad)
loopne
jo
fnsave
adc
push
icebp
clc
xchg
out
adc
das
jg
(bad)
cs
cmp
mov
mov
or
fnstenv
neg
retf
mov
lods
gs
xlat
add
loopne
mov
daa
call
cld
(bad)
push
jmp
arpl
in
and
les
out
(bad)
jp
push
push
dec
jb
xchg
sbb
test
cmp
jbe
(bad)
aam
mov
adc
test
mov
jnp
inc
ror
inc
es
inc
ffree
fsubr
mov
int3
mov
movs
cmc
mov
cmp
(bad)
sub
jb
aam
cmp
test
or
cmc
mov
push
xor
fs
and
inc
mov
sub
jecxz
xor
xchg
in
or
mov
push
imul
push
adc
inc
call
retf
sbb
nop
(bad)
jp
enter
mov
das
imul
lods
mov
cs
push
add
aad
mov
jle
push
retf
mov
mov
sbb
popa
xor
add
inc
les
fisttp
dec
jne
test
scas
push
call
ret
inc
inc
mov
cmp
fisubr
fnstcw
pop
cmps
rol
das
addr16
mov
aam
gs
xbegin
lds
hlt
or
sbb
das
shl
pop
add
daa
cmc
sub
icebp
and
dec
mov
mov
lds
and
test
mov
pop
(bad)
fisubr
in
dec
add
xchg
fisubr
mov
cmp
xchg
enter
add
sub
ret
mov
push
push
and
ret
out
ret
pushf
jecxz
adc
cmps
cmc
xor
inc
test
ins
sbb
test
cli
sub
push
mov
mov
xor
lods
and
jns
loopne
in
pop
sti
jb
les
cmc
pop
fidiv
fdiv
das
jle
lahf
xchg
test
(bad)
and
test
mov
jae
adc
xlat
add
push
lds
inc
je
fdiv
mov
(bad)
mov
ins
jecxz
aas
les
sbb
add
sahf
mov
fsub
and
mov
mov
fabs
adc
sub
aas
(bad)
pop
push
pop
aad
dec
push
retf
inc
std
(bad)
mov
pop
call
and
xchg
stos
jns
shl
mov
pop
adc
push
aam
add
fisttp
mov
loopne
es
shr
inc
pop
mov
dec
mov
and
(bad)
push
mov
in
cmps
sub
lahf
and
inc
stos
clc
push
pop
aas
push
out
sub
sti
stos
xchg
popa
adc
imul
rol
aaa
jge
jno
cmp
pop
call
and
mov
add
bound
jns
or
fmul
cwde
cmp
cmovae
xor
fistp
in
iret
xor
cmp
stos
add
js
retf
inc
xor
and
cmp
cmps
dec
dec
dec
cdq
sbb
fsubr
movs
imul
loop
sub
enter
push
and
in
xor
ss
inc
test
imul
iret
gs
cs
out
ds
jg
cli
cmp
into
enter
mov
push
dec
mov
fiadd
call
popa
movs
and
inc
adc
pop
or
sub
(bad)
sbb
test
out
pop
sub
dec
inc
push
pop
call
sub
xchg
push
repz
dec
call
test
sub
jb
inc
sub
mov
lock
rcr
mov
jp
push
cmps
push
mov
mov
imul
hlt
(bad)
mov
data16
inc
or
dec
xchg
push
daa
xchg
jb
xchg
or
mov
or
pop
push
repz
push
sar
mov
mov
outs
mov
jne
and
je
test
shl
daa
inc
sub
jbe
pusha
arpl
or
shl
enter
jne
dec
cmp
pusha
jp
mov
jl
sahf
sub
xchg
push
retf
lods
pop
cdq
retf
test
arpl
(bad)
jp
jb
xchg
out
mov
mov
lods
sbb
out
jecxz
pop
pop
or
into
scas
xchg
pop
sub
dec
xchg
(bad)
(bad)
and
not
jne
and
test
cmp
repnz
push
xor
mov
pop
aad
movs
xchg
inc
repz
xchg
dec
ror
mov
call
ja
jg
mov
jns
in
sub
ror
mov
(bad)
das
iret
mov
push
retf
mov
ds
xor
adc
test
sti
xor
ds
popf
nop
cmps
repz
movs
xor
sbb
cli
fadd
or
pop
mov
add
add
out
(bad)
out
sub
mov
or
cmp
out
cmp
pop
test
enter
jae
movs
sti
je
push
xor
addr16
bound
nop
mov
dec
and
pop
adc
(bad)
mov
test
mov
and
out
ret
ret
int3
dec
stos
add
jae
dec
imul
dec
inc
(bad)
sbb
es
(bad)
cs
repnz
push
mov
pop
and
push
jns
arpl
pop
adc
adc
sti
inc
inc
xor
loopne
lds
add
cmps
jmp
fisubr
or
mov
popf
jecxz
and
hlt
or
into
inc
ret
jnp
jno
mov
fstp
sbb
jae
ja
jbe
jge
inc
test
mov
xor
in
mov
js
dec
or
or
xor
xor
cmp
or
addr16
out
mov
(bad)
jmp
repz
mov
lea
mov
add
out
add
inc
mov
imul
mov
aad
or
or
loopne
xchg
les
jg
cmp
pop
ins
mov
dec
pop
movnti
add
pop
and
shl
enter
rcr
sub
push
(bad)
mov
push
pop
ins
push
fisub
push
sbb
push
or
into
xchg
cmp
js
adc
xor
jnp
mov
fstp
(bad)
cdq
je
imul
dec
in
jmp
lea
push
mov
cmp
lods
adc
fiadd
pop
xor
rcl
imul
in
sub
test
jle
imul
cmp
inc
xor
jle
cdq
jecxz
cs
inc
aaa
adc
das
and
or
ds
lahf
repz
cs
push
outs
in
movs
aad
js
dec
out
push
dec
test
dec
mov
push
imul
shr
fild
shl
inc
cmps
pop
and
xchg
push
mov
std
fist
lods
outs
mov
fild
push
inc
xchg
adc
dec
inc
fcomp
stos
jae
pop
sub
sbb
and
inc
outs
loop
scas
js
vsubss
out
pop
and
xor
lock
push
pusha
inc
mov
jne
adc
jmp
add
xor
or
jns
data16
inc
int
das
call
dec
daa
repnz
adc
inc
out
xchg
push
pop
sbb
pusha
xor
mov
int
test
cdq
push
sub
cmp
mov
popw
test
mov
push
xchg
mov
pop
lods
in
aad
mov
mov
stc
test
sbb
xchg
stc
xor
pop
call
mov
add
dec
das
cmc
stc
push
fidivr
pop
adc
cmps
das
iret
jmp
shr
xchg
inc
retf
je
xchg
xor
imul
int3
(bad)
fsub
dec
out
int
mov
leave
daa
sti
(bad)
and
push
xchg
push
repz
imul
(bad)
jmp
mov
add
push
pushf
add
movs
ja
xchg
jmp
lods
clc
adc
into
ret
outs
fcmovu
sub
push
xor
adc
outs
data16
aad
xor
mov
inc
sbb
inc
and
inc
pusha
cdq
and
movs
and
and
pop
inc
push
pop
mov
out
xor
gs
cld
push
mov
jno
add
inc
into
(bad)
add
or
pop
fist
aaa
pop
sub
push
xchg
fsub
lock
jno
ds
xlat
inc
adc
push
mov
shl
push
and
cmp
xor
cli
xor
cmp
fdiv
and
dec
lods
jb
dec
mov
mov
loop
mov
mov
cmp
or
mov
cdq
sub
and
or
or
mov
call
jmp
test
popa
cmp
add
outs
mov
aad
xor
ja
dec
fadd
mov
cmp
out
dec
mov
push
mov
sbb
jle
add
mov
rcr
xchg
and
mov
add
cdq
lods
call
jo
cmp
xchg
std
jge
and
push
xlat
(bad)
leave
dec
fs
inc
sti
aam
rcr
pop
pusha
test
inc
jecxz
sub
or
ss
xor
(bad)
cmp
jge
jge
mov
mov
dec
lahf
scas
mov
pop
aaa
and
lods
or
stc
jp
out
neg
shl
pushf
iret
(bad)
sbb
nop
xor
movs
push
sub
popf
pop
cmp
fs
or
mov
add
push
cld
xor
aad
pushf
mov
das
sbb
xor
pop
sahf
pop
imul
xor
xor
sahf
int
add
std
mov
fild
cli
add
or
je
sti
cmp
push
cmp
shr
xlat
stc
xor
xor
mov
sub
mov
div
push
sub
outs
ror
fdivr
mov
clc
sbb
adc
test
cwde
pop
je
pop
jmp
adc
outs
mov
adc
pop
ficom
jmp
jecxz
push
dec
(bad)
retf
pop
stos
mov
(bad)
test
or
inc
mov
jno
xchg
out
aam
pop
or
inc
cs
(bad)
das
mov
aad
cmps
push
scas
adc
cmp
push
dec
pop
dec
jp
aaa
jp
push
mov
pushf
pop
adc
add
je
rcl
out
rcr
jne
mov
in
pop
push
sbb
sub
je
push
mov
mov
inc
cwde
add
inc
push
stos
mov
dec
popa
mov
bound
(bad)
rcr
test
mov
mov
cmc
xor
cmp
dec
add
sub
inc
mov
aaa
push
push
inc
repz
(bad)
je
and
outs
mov
inc
aaa
imul
lahf
outs
add
mov
xor
dec
sbb
push
or
jnp
pop
jnp
loopne
or
fsub
jno
sar
jg
lds
add
xchg
repnz
jp
cmp
jne
and
inc
xlat
adc
xor
dec
stc
mov
dec
inc
ror
clc
inc
aas
fiadd
mov
das
pop
call
cmp
sbb
jmp
mov
cli
pop
popf
pop
xchg
pushf
pop
or
test
push
xchg
aas
add
sub
pop
test
das
jecxz
test
icebp
add
movzx
pop
aam
jnp
test
xlat
mov
push
add
aas
(bad)
in
xchg
sbb
and
dec
outs
popf
repnz
not
jns
push
mov
call
pop
bound
inc
stos
fwait
cmp
pop
jb
and
xor
daa
test
mov
aad
push
mov
(bad)
cmc
mov
fs
js
jno
leave
adc
mov
lock
in
xchg
fs
imul
and
xor
sbb
push
aas
push
xchg
adc
add
pop
(bad)
sbb
xor
hlt
dec
test
adc
shr
push
aaa
loope
push
add
enter
fdiv
fs
stc
sub
xchg
xor
mov
pop
jo
sub
mov
xchg
loopne
inc
mov
cld
data16
mov
dec
fldlg2
add
mov
loopne
xor
cs
cs
dec
arpl
mov
mov
cmps
mov
add
rcr
push
inc
out
or
dec
std
aad
lahf
push
out
push
fld
lahf
(bad)
ins
fnsave
stc
mov
aas
sbb
xor
cmp
add
or
out
and
rcl
arpl
int
jl
push
in
int
popa
popf
push
and
sbb
lahf
sbb
fidivr
test
stos
jbe
call
sbb
int3
sbb
das
jno
add
xchg
mov
(bad)
cmps
lock
mov
call
call
(bad)
sub
mov
(bad)
jg
cmc
add
lock
arpl
mov
sti
dec
jnp
std
inc
inc
push
fs
inc
fs
(bad)
dec
clc
mov
stos
or
(bad)
sar
inc
mov
fs
sahf
pop
(bad)
pop
movs
and
sub
pusha
data16
cdq
mov
sti
sbb
inc
int
mov
mov
add
repnz
inc
push
sub
add
jae
xchg
imul
push
pop
aam
sub
(bad)
scas
fisub
jmp
pop
shr
sub
lea
les
retf
cld
pop
loopne
lahf
jnp
xor
mov
cwde
cmp
sub
xor
xor
sbb
dec
aas
cmps
(bad)
fcomp
mov
int
fs
bound
push
push
dec
jmp
inc
scas
mov
repnz
bound
mov
fldenv
xor
add
pop
iret
rol
sbb
inc
xchg
clc
mov
lock
(bad)
xor
sub
dec
retf
out
lahf
int
das
cmc
lds
xchg
xor
call
dec
mov
dec
cli
mul
add
add
aaa
ror
cmps
adc
sub
adc
adc
mov
mov
loop
rcl
out
mov
xor
mov
stos
inc
es
retf
repnz
scas
sti
sbb
push
cwde
sti
pop
nop
add
xchg
and
enter
xchg
ss
out
in
mov
je
sbb
in
repz
fstp
imul
xor
mov
or
int3
pop
enter
mov
mov
jb
hlt
ins
sti
fnstcw
adc
daa
sub
(bad)
lock
jbe
(bad)
aam
(bad)
icebp
cli
xchg
aas
push
mov
jnp
inc
jg
fidiv
sbb
mov
mov
sbb
iret
push
ds
inc
mov
popf
cmp
lea
lahf
pop
push
hlt
cmp
fisub
leave
fs
sbb
das
jae
push
mov
mov
int
or
add
jg
or
(bad)
sahf
xor
sbb
popf
or
(bad)
push
(bad)
mov
retf
neg
fs
sbb
ficom
jnp
dec
(bad)
addr16
jbe
mov
fisttp
scas
cs
das
mov
js
int
add
push
test
cmp
movs
add
and
rcr
adc
jno
sahf
lock
out
mov
fild
cdq
cmc
adc
push
inc
adc
sahf
es
popf
aad
jecxz
pop
(bad)
out
xchg
(bad)
aam
(bad)
cli
lods
outs
or
aas
jp
add
jp
jmp
pop
sub
lea
cdq
out
xchg
lea
icebp
mov
push
(bad)
test
sbb
lods
ja
push
idiv
jmp
jb
mov
cmp
idiv
(bad)
imul
clc
xchg
aaa
push
lods
jmp
dec
cmp
xor
push
ret
mov
and
scas
lock
test
xchg
or
cli
pop
stc
cmp
shr
or
mov
xor
dec
inc
mov
push
(bad)
fwait
add
inc
nop
jle
inc
push
out
loope
mov
mov
mov
stc
test
ds
push
or
movs
mov
sbb
aas
push
add
loop
mov
add
add
dec
push
or
rcl
xlat
idiv
enter
into
pushf
or
push
cwde
cld
and
icebp
jg
mov
jae
or
xchg
jne
sub
pop
jmp
dec
jbe
call
loope
ds
push
ss
int
xchg
rcl
inc
pop
or
dec
xor
rcl
je
push
inc
daa
out
add
dec
(bad)
jne
int
je
jp
cmp
movs
out
xchg
dec
fwait
not
mov
push
iret
sub
scas
inc
inc
mov
icebp
mov
mov
(bad)
in
push
imul
cdq
imul
jb
adc
lods
(bad)
pop
jbe
stos
push
loopne
or
nop
pop
mov
retf
pop
loope
cmp
push
mov
loop
sbb
ret
sub
xor
xor
mov
mov
sub
pop
dec
add
(bad)
sbb
ins
into
jmp
shl
mov
mov
sbb
aaa
repnz
stos
dec
fnsave
cwde
mov
mov
push
rcl
sbb
adc
xlat
aas
mov
stos
leave
mov
aam
jmp
movs
sbb
adc
mov
sub
cmp
icebp
shl
js
adc
sahf
push
(bad)
mov
add
call
in
fwait
jae
dec
call
inc
jne
inc
mov
cmp
push
xchg
test
push
xchg
jge
inc
jb
pop
jecxz
xchg
cmp
inc
in
push
mov
jne
or
mov
loopne
pusha
and
cli
jb
jae
xlat
rol
or
mov
and
ror
fist
ins
dec
sbb
xchg
xchg
rcr
rcr
push
popf
fcmovnb
inc
add
push
or
into
xor
rcr
out
call
or
daa
ins
loope
mov
lock
adc
imul
sbb
fidivr
imul
scas
in
mov
(bad)
jg
add
adc
call
mov
ror
sahf
jp
push
mov
push
stos
mov
xchg
sub
push
pop
mov
das
sub
adc
dec
adc
ret
xchg
push
fmul
loope
iret
enter
mov
ja
or
pop
cmc
jl
out
repz
daa
loopne
push
cs
arpl
jb
mov
dec
jge
ror
pop
xchg
and
jp
mov
ins
out
push
call
and
popf
test
jmp
hlt
jns
mov
jmp
pop
mov
iret
cmps
xchg
loope
leave
nop
pop
(bad)
es
shl
mov
or
movs
cmp
(bad)
pop
dec
cwde
pop
add
test
scas
dec
fisubr
(bad)
sbb
iret
sti
retfw
out
jae
adc
sbb
ja
stos
sbb
push
dec
mov
dec
mov
adc
pop
sbb
sub
inc
leave
out
or
lods
mov
and
arpl
retf
dec
jmp
xchg
or
jne
fldenv
push
(bad)
rcr
sub
jbe
inc
cmp
pushf
xchg
xchg
sub
movs
dec
pop
retf
sub
movs
sub
inc
loope
mov
test
call
(bad)
mov
push
or
cdq
jl
test
jl
stos
sub
mov
inc
out
mov
mov
jmp
and
fld
xchg
ror
js
sbb
ds
(bad)
mov
sub
mov
pop
ret
sbb
gs
lods
out
cs
or
or
out
pop
loop
mov
jo
xchg
test
mov
pop
jns
push
lods
mov
call
bound
movs
pop
mov
or
clc
imul
dec
adc
dec
or
adc
xor
test
dec
jle
in
je
test
sub
xchg
mov
call
out
pop
mov
mov
movs
jmp
dec
arpl
cli
and
fwait
ins
mov
pop
inc
fimul
push
ror
leave
sub
neg
xacquire
mov
je
retf
popf
out
jae
jmp
push
gs
shl
inc
jg
(bad)
cmp
push
imul
xlat
xchg
lahf
mov
dec
jno
dec
xor
or
cmps
cs
adc
popf
adc
je
cmp
mov
out
jg
jnp
xchg
lahf
or
pop
add
cmp
retf
adc
sbb
dec
(bad)
(bad)
and
sbb
jb
fiadd
xlat
aas
jnp
repz
dec
xor
or
jecxz
push
shl
scas
inc
inc
dec
jg
add
xlat
inc
ror
jle
xchg
pop
cwde
xchg
bound
and
add
scas
aas
pop
sbb
in
push
pop
or
sbb
das
xor
dec
mov
(bad)
movs
sub
mov
sbb
cmp
sbb
push
sbb
in
gs
add
push
sbb
(bad)
push
ins
call
cmp
sbb
das
in
pop
mov
cmp
push
retf
cwde
push
stos
fild
es
movs
rcl
pop
jne
repnz
mov
xchg
jp
adc
lods
mov
mov
retf
fwait
pop
outs
std
neg
es
les
jb
add
inc
dec
pusha
dec
mov
fstp
dec
nop
xor
xlat
es
mov
jle
cmp
inc
in
jecxz
cld
sbb
aad
xor
inc
in
push
daa
jns
lods
js
ror
xchg
jo
int
and
push
jecxz
imul
sbb
cmps
retf
jp
pop
loopne
mov
lods
pop
mov
push
ficomp
push
daa
sbb
(bad)
out
inc
daa
push
pop
or
and
shl
xchg
sbb
xchg
retf
cmps
das
push
mov
cdq
ficom
call
add
mov
enter
and
dec
(bad)
inc
iret
arpl
jno
and
xor
(bad)
imul
mov
sar
loope
cli
fdivr
loopne
pop
push
movs
daa
sbb
cmc
and
dec
lahf
or
test
dec
adc
pop
sbb
enter
push
outs
add
ds
cmova
and
lods
jo
push
cmp
lods
mov
lods
push
popf
cmp
jge
fadd
mov
int
inc
jae
pop
jmp
or
pop
pop
mov
mov
ja
mov
test
loop
(bad)
jle
add
or
out
clc
clc
arpl
fmul
je
mov
fcomp
call
icebp
imul
fwait
clc
out
dec
lock
loop
mov
sub
je
popf
cmps
and
xchg
xor
push
retf
or
ss
dec
je
sti
test
mov
mov
inc
ds
push
push
out
add
popa
in
add
lods
mov
adc
scas
clc
add
and
pop
sub
cmp
xchg
xchg
rol
xchg
push
sbb
lods
add
add
out
clc
(bad)
sbb
popa
mov
pop
push
call
sub
jmp
outs
sbb
jle
add
jmp
or
dec
das
cmp
push
or
je
add
in
fdivr
dec
dec
mov
dec
xchg
adc
(bad)
fidiv
repnz
nop
pushf
pop
lea
clc
push
cmps
push
outs
dec
xchg
sbb
or
inc
movs
mov
in
dec
mov
call
sub
cld
cmp
imul
sub
outs
xchg
adc
mov
pop
mov
cdq
inc
or
mov
jo
fild
pop
sub
enter
mov
cpuid
adc
inc
iret
cmps
jecxz
xchg
test
outs
stos
sbb
push
in
fidiv
movs
mov
(bad)
out
xchg
shl
dec
cs
fld
icebp
mov
push
sar
and
or
les
(bad)
cs
loopne
cmps
gs
out
ds
inc
clc
dec
adc
mov
enter
out
pop
pop
into
mov
test
mov
shr
cmp
cli
lods
sub
(bad)
dec
xchg
rep
cmp
loope
push
fucomi
test
(bad)
(bad)
mov
int3
add
adc
and
clc
test
mov
inc
(bad)
xlat
sar
movs
or
adc
xor
scas
xor
mov
inc
jns
mov
push
(bad)
adc
je
(bad)
in
pop
leave
jge
jnp
sbb
push
xchg
cli
test
imul
in
fucom
shl
xor
jge
imul
and
inc
pop
test
cpuid
cmovo
jmp
sbb
shl
sahf
arpl
pushf
cmp
loop
out
jl
sbb
cmp
adc
popa
fimul
test
push
std
xchg
mov
sub
sub
ret
add
push
fwait
cwde
in
retf
repnz
cmps
lods
hlt
pop
cmp
fdivr
(bad)
std
pop
xlat
xlat
or
scas
push
add
jg
push
push
push
xchg
enter
in
xchg
jle
stc
and
mov
rol
repz
jge
sbb
aaa
mov
sar
add
or
xchg
es
sbb
xor
stos
sub
out
mov
push
cdq
dec
inc
outs
pop
(bad)
iret
or
xchg
pop
mov
pop
add
mov
or
shr
mov
adc
bnd
jg
mov
retf
lods
mov
jmp
cmp
mov
mov
fstp
dec
jmp
js
repz
mov
xor
pop
xlat
in
mov
aas
xchg
(bad)
xor
dec
xor
mov
xchg
xchg
(bad)
cmps
sub
sub
not
ins
fisubr
push
enter
jns
aaa
sti
daa
scas
sti
dec
movs
data16
pop
(bad)
fcom
dec
iret
fadd
or
das
out
arpl
pop
call
inc
aas
xchg
rcl
sbb
inc
or
pop
sub
pop
adc
jmp
ss
cmp
lods
test
in
(bad)
adc
dec
mov
mov
(bad)
fild
clc
sbb
jp
add
add
push
loope
int3
cmps
std
call
out
ret
pop
xor
rcr
aam
repnz
mov
inc
push
pop
popf
in
inc
mov
cmp
jle
jb
push
mov
test
mov
xchg
(bad)
xchg
mov
pop
int3
ja
add
int
test
jb
inc
test
movs
mov
aas
lea
sbb
sub
fwait
(bad)
stos
sar
adc
pop
cmc
retf
stc
add
ret
std
imul
call
sub
inc
stos
and
xor
fwait
jae
shr
gs
mov
jae
cmp
adc
rcl
push
jno
iret
inc
xchg
adc
(bad)
sbb
sub
and
dec
adc
pop
(bad)
dec
jns
dec
cwde
jbe
push
pop
jne
sar
dec
inc
ja
inc
test
out
(bad)
jg
and
or
call
mov
push
mov
push
mov
push
cmp
fimul
jne
sub
cwde
movs
push
xchg
dec
sbb
pushf
mov
enter
dec
xchg
jno
and
cmps
xor
test
outs
ins
sbb
mov
loope
repnz
inc
es
out
mov
dec
sub
push
outs
test
inc
push
in
inc
pop
cmp
popa
xchg
test
xchg
mov
(bad)
loopne
or
jmp
in
test
test
xor
pop
mov
pop
ins
stos
pop
les
and
xchg
sub
xlat
push
xchg
sbb
sub
pushf
mov
iret
dec
sbb
mov
sub
adc
cmp
test
pop
jns
or
lods
int
cli
out
pop
pop
cmp
xchg
xor
sub
repnz
out
in
adc
push
pop
push
leave
push
pop
sbb
int
in
popa
lods
icebp
adc
dec
lea
xlat
cmp
dec
adc
sbb
inc
lock
mov
cmp
mov
cld
mov
clc
mov
xchg
xor
mov
jo
sar
add
sar
jbe
pusha
mov
in
out
add
and
pop
jmp
cmp
imul
cdq
ret
sbb
jo
jge
lods
jne
push
jbe
jo
push
clc
mov
xor
jns
push
inc
jecxz
and
xchg
inc
inc
ins
ins
int3
add
inc
inc
sub
push
push
ror
sub
imul
jmp
lods
xchg
and
fadd
jnp
sar
jle
xchg
sbb
dec
pop
popa
ins
sub
jmp
jne
ja
les
rcl
fcmovne
mov
jg
sbb
pushf
into
test
mov
xchg
add
mov
push
adc
mov
mov
sub
push
push
mov
cmp
pop
aas
dec
mov
mov
adc
inc
xchg
inc
pop
dec
adc
arpl
add
xchg
mov
jmp
and
add
pop
lods
push
ins
imul
(bad)
cmp
mov
lods
mov
push
call
movs
push
sub
ret
js
sub
pop
cmp
xchg
cmps
inc
fsub
lock
inc
pop
movs
sub
xlat
out
pop
dec
and
dec
rcl
imul
(bad)
sub
mov
gs
push
xor
mov
pop
pop
ret
and
dec
jge
jne
mov
dec
test
mul
pop
and
push
mov
sbb
inc
xchg
pop
fld
in
adc
jg
mov
mov
repnz
inc
fwait
jle
aad
cdq
or
arpl
pop
sbb
push
test
mov
fisttp
sub
mov
pop
(bad)
push
mov
mov
loope
ss
xor
(bad)
fidivr
adc
popf
test
mov
dec
loop
rcr
aad
and
sahf
mov
popa
sub
test
outs
pop
sub
ret
dec
push
add
inc
inc
adc
into
mov
stc
mov
cmp
and
(bad)
nop
mov
movs
jo
cmps
cmp
push
int3
loope
and
gs
push
jmp
repnz
enter
mov
xchg
sbb
cmps
lahf
mov
test
neg
pop
jno
sbb
push
popf
cmp
in
mov
inc
jno
pop
call
mov
add
pusha
cs
push
xor
aad
mov
das
mov
sub
aas
fcmovnu
xlat
mov
add
dec
jb
inc
pop
(bad)
push
out
pop
dec
sti
and
xor
in
mov
and
(bad)
sub
ins
out
cmp
ret
pop
jnp
sbb
into
int3
inc
cmc
jbe
fwait
or
xor
test
xor
xor
pop
pop
int
aad
aad
shl
mov
arpl
cli
sub
pop
movs
or
xchg
xor
iret
pop
or
cmps
ss
mov
mov
shr
and
pushf
loope
push
clc
lds
test
add
mov
js
mov
jo
jecxz
je
out
jp
mov
sbb
jmp
sub
mov
mov
jns
(bad)
fwait
cdq
jp
stos
sub
push
add
shl
fidivr
push
fwait
addr16
cmp
or
neg
xor
sbb
jo
xor
inc
jb
sbb
push
dec
mov
push
sub
cmp
inc
enter
loop
cmp
repz
cld
sbb
sub
vmwrite
daa
iret
repnz
loopne
in
outs
and
stos
(bad)
test
test
lds
xchg
fisttp
xchg
jo
xchg
sub
xchg
adc
out
xor
int
inc
mov
imul
out
cmps
jp
jg
jle
loope
stos
mov
mov
int
jge
call
and
pop
rol
inc
pop
std
pushf
fistp
jnp
mov
aas
sub
dec
in
test
mov
pop
mov
fwait
xchg
mov
sub
add
mov
cmp
loopne
stos
pop
pop
or
adc
sub
add
dec
mov
xchg
arpl
mov
cwde
or
(bad)
test
ds
inc
sti
jl
mov
xchg
stos
xchg
push
aam
adc
pop
gs
inc
shr
outs
cmp
xchg
scas
ds
jmp
(bad)
(bad)
cmp
in
(bad)
ror
jmp
ret
jmp
mov
jge
aaa
mov
fs
jo
sbb
shl
sbb
(bad)
jecxz
shl
xchg
jmp
xor
push
(bad)
lods
sub
mov
test
sahf
mov
mov
outs
(bad)
mov
mov
into
ret
cmp
xchg
xor
adc
shld
add
mov
mov
add
push
pop
cmc
inc
jmp
adc
(bad)
rol
es
clc
mov
mov
scas
sti
int
ds
pop
out
push
retf
sbb
fbstp
clc
mov
xor
mov
outs
xchg
push
jge
les
rcl
sub
stc
scas
fimul
mov
in
call
xchg
sub
fsub
retf
hlt
or
out
or
cmp
or
inc
sub
in
jmp
mov
or
cli
aad
push
push
sbb
sub
xor
idiv
sbb
xchg
xchg
xor
push
xor
add
or
dec
into
add
mov
nop
mov
adc
adc
inc
pusha
ins
cmp
mov
aad
into
xchg
pop
aas
ret
movs
js
cmp
pop
punpcklwd
das
dec
test
rcr
test
clc
ins
jae
mov
jnp
fisub
and
out
movs
les
mov
adc
mov
inc
iret
int
sub
jl
push
cmp
outs
inc
fld
push
ins
cli
mul
push
ds
das
fisub
mov
jmp
daa
aaa
shl
mov
jns
fsubrp
hlt
mov
mov
cli
push
pop
xchg
fcmovb
in
xchg
jmp
jbe
les
ja
cmp
arpl
lock
pop
in
mov
daa
xchg
and
dec
fiadd
push
lods
(bad)
inc
out
pop
push
imul
popf
ins
ds
cmp
add
aaa
dec
out
pop
call
imul
push
dec
outs
es
cdq
jbe
pop
mov
into
bound
mov
test
add
imul
in
pop
xor
(bad)
add
sub
inc
lods
add
jle
repnz
scas
xor
out
xor
shr
push
push
mov
push
mov
daa
loopne
xlat
push
mov
movs
push
rcl
(bad)
cs
out
dec
or
movups
add
xor
pop
loope
fs
test
adc
loopne
mov
jb
shr
arpl
xchg
xor
xor
add
(bad)
mov
pusha
push
mov
les
sub
add
add
jl
ins
fldenv
mov
sub
push
mov
adc
sbb
mov
mov
push
pusha
sbb
ret
sbb
shl
mov
ins
cmp
push
xor
mov
outs
and
test
scas
push
xchg
add
and
sbb
and
js
into
cli
lahf
push
adc
cmp
inc
popf
push
fsubr
fisttp
test
div
(bad)
push
inc
push
sbb
hlt
mov
mov
inc
mov
out
cmps
ja
or
push
cld
cmp
or
call
jo
inc
je
cdq
scas
or
fcom
nop
xchg
js
repnz
mov
ins
jnp
xchg
int3
shl
int
aas
sbb
jge
mov
add
jmp
sbb
vorps
jo
retf
push
pop
fwait
clc
aaa
xor
lahf
mov
lods
push
pop
int
cmp
mov
pop
mov
pop
sbb
test
push
xchg
gs
jle
jg
push
mov
mov
mov
sub
cmp
loop
aaa
jnp
or
sbb
pop
mov
daa
xor
inc
stos
fwait
mov
cmp
ja
and
in
adc
(bad)
pop
pop
out
inc
fwait
std
xchg
(bad)
std
inc
and
ds
fwait
cmps
cs
mov
push
jmp
adc
retf
jo
and
push
cmp
ret
dec
popf
pop
test
push
xchg
and
(bad)
push
mov
int3
mov
nop
dec
jle
lods
fdivr
cmp
cli
popf
mov
jo
dec
aas
adc
adc
movs
(bad)
ja
ret
or
retf
cmps
aad
fadd
sub
les
or
enter
pop
(bad)
adc
(bad)
aam
fisub
mov
in
mov
dec
shl
mul
push
xchg
(bad)
mov
std
adc
pusha
inc
xchg
shl
popa
pop
fcomp
jns
ja
dec
or
cmc
cmp
hlt
retf
nop
xor
cmps
rol
dec
mov
inc
(bad)
popa
int
icebp
add
mov
sar
dec
pop
repz
(bad)
cwde
test
mov
xchg
pop
jns
pop
mov
dec
mov
rol
(bad)
jl
pop
lea
push
adc
(bad)
jmp
mov
leave
mov
and
sub
or
push
test
in
inc
pushf
and
popw
inc
inc
adc
aaa
xchg
push
imul
push
xchg
imul
test
fdiv
jl
or
test
or
loope
out
ror
loope
or
xlat
imul
dec
jo
cmp
fnsave
and
neg
stc
pop
pop
stc
dec
div
dec
mov
jbe
jmp
test
cmp
pop
mov
inc
shl
jg
add
and
inc
loope
out
data16
pop
inc
fst
inc
xchg
push
ss
pop
in
ja
sub
cld
cmp
arpl
sbb
jmp
loop
loop
cdq
mov
out
jmp
xchg
sub
arpl
aas
movsx
das
jae
lods
jb
pop
retf
out
loop
dec
mov
mov
shr
stc
inc
jo
sbb
addr16
push
mov
push
mov
add
xor
aam
xchg
push
xchg
adc
inc
push
mov
aad
outs
add
cmp
inc
pop
push
jbe
jns
pop
and
add
or
daa
jle
js
std
dec
retf
adc
jne
in
lods
idiv
sub
(bad)
rcl
and
dec
div
pop
retf
jns
int
or
mov
dec
in
inc
(bad)
mov
xchg
xchg
dec
push
jmp
inc
dec
inc
aas
aam
in
inc
call
loope
dec
inc
add
add
jmp
xchg
mov
jno
pop
fimul
icebp
shr
add
and
js
outs
imul
dec
scas
ret
imul
pop
push
mov
push
loope
cmp
jae
stos
cmp
gs
inc
mov
jge
sub
lods
imul
push
popf
into
push
loopne
cmp
push
inc
and
retf
loop
and
add
test
sbb
push
psrad
jno
mov
jmp
jge
and
xchg
fisub
xor
push
fistp
cmps
in
cmp
add
lea
neg
arpl
test
fld
fsub
push
nop
retf
xchg
scas
lahf
xchg
fidiv
xor
sub
mov
std
clc
(bad)
push
imul
fsub
daa
retf
push
cmp
addr16
out
out
jb
lds
pop
pop
xor
add
dec
(bad)
lods
ss
mov
sbb
repnz
test
pop
data16
fidivr
adc
lods
sbb
mov
jge
movs
rsqrtps
call
ins
cmp
jb
outs
jg
icebp
scas
retf
adc
jns
sbb
mov
jp
out
es
ds
test
fwait
xor
push
fisub
mov
ins
inc
imul
mov
mov
mov
lock
push
inc
cmp
mov
cs
cmp
imul
imul
pop
mov
jnp
push
mov
call
push
pop
(bad)
xor
lods
xchg
retf
push
jns
mov
jmp
loope
loopne
sti
sub
je
push
daa
fisubr
add
cwde
jle
add
push
cld
jae
rol
mov
out
and
dec
cmps
jp
xor
xchg
fs
rcl
(bad)
aad
push
out
add
jnp
dec
stos
pop
push
dec
fs
loope
and
mov
and
cmp
mov
outs
scas
movs
out
cmp
sub
jmp
pop
adc
cmp
mov
rcl
mov
test
arpl
popf
lahf
shl
je
jb
xchg
sbb
inc
shl
push
(bad)
adc
es
lods
stc
cmp
cmp
sbb
cld
retf
(bad)
xchg
aas
pop
cmp
xchg
and
mov
test
cmps
test
in
loop
pushf
(bad)
xchg
push
scas
pop
cs
push
aas
mov
mov
pushf
or
loope
dec
inc
or
call
jg
sbb
sub
xor
push
loopne
call
rcr
popf
and
outs
je
fisub
mov
dec
hlt
inc
xchg
mov
mov
jecxz
test
lds
mov
push
aam
pop
push
test
inc
xadd
pop
adc
xor
es
fstp
push
jl
jmp
mov
(bad)
cwde
scas
pop
mov
push
test
inc
inc
and
sbb
data16
aaa
ret
push
jmp
sub
cmp
jge
adc
arpl
sbb
test
xchg
aam
mov
imul
jbe
arpl
mov
das
cmp
dec
xchg
push
add
das
pop
outs
sti
pusha
fnsave
stos
xor
das
in
(bad)
pop
es
push
inc
sub
jp
xchg
aaa
dec
push
test
mov
movs
(bad)
and
cdq
test
adc
fistp
jmp
or
xlat
ffreep
xor
jge
das
mov
repz
push
fldcw
mov
xor
adc
push
lods
cmps
fadd
mov
pop
cmc
js
mov
mov
aam
fs
inc
es
mov
push
cmp
pop
pushf
sbb
and
jmp
mov
popa
add
inc
sbb
mov
es
leave
shl
add
into
ret
fmul
jmp
fcmovb
jmp
fdivr
or
popa
scas
mov
stc
or
cmp
dec
ins
dec
pop
and
push
xacquire
and
xlat
and
idiv
or
je
fistp
and
xlat
mov
inc
test
mov
push
test
mov
iret
add
fwait
xchg
scas
(bad)
mov
and
test
sbb
fdivr
mov
in
cmp
mov
into
add
cmp
aad
sbb
pop
jmp
lds
int3
pop
adc
scas
jnp
loopne
jno
sub
call
jl
jg
or
inc
xchg
mov
jnp
xor
in
inc
adc
adc
ret
ret
mov
fdivr
jecxz
daa
cs
cmp
jbe
pop
out
leave
jo
lods
mov
(bad)
fprem
dec
imul
inc
sbb
cmps
mov
ins
add
out
xor
adc
xor
add
mov
imul
out
cmp
xor
and
ror
or
adc
mov
add
jbe
imul
int
xchg
cmps
icebp
and
daa
dec
ret
(bad)
sbb
mov
adc
push
sub
enter
mov
mov
mov
xor
cmp
cdq
rcl
add
cmps
test
ror
call
je
ror
fsub
popf
int
test
sbb
push
inc
mov
popf
mov
test
xlat
je
add
outs
in
and
sub
jbe
xchg
sbb
adc
bound
lods
gs
popa
dec
pusha
call
iret
sti
(bad)
in
call
and
pop
(bad)
sub
enter
sbb
mov
scas
sti
xchg
in
mov
call
mov
inc
das
push
jp
sahf
mov
push
mov
scas
retf
jns
aaa
outs
cli
lock
sub
cmp
jne
mov
mov
cmc
add
je
test
dec
in
cmps
popf
and
fiadd
in
std
cs
aam
iret
popa
retf
outs
inc
inc
scas
fbstp
mov
mov
pop
(bad)
sbb
popf
dec
mov
dec
pusha
or
adc
pop
mov
fadd
sti
lods
fsubr
stos
sub
mov
pop
mov
(bad)
aad
jecxz
push
leave
push
fdiv
repz
ret
daa
or
call
dec
retf
push
and
inc
fisttp
in
push
cmp
loop
mov
mov
dec
add
into
jnp
bswap
jmp
sub
in
sub
xchg
adc
fwait
sahf
movs
sbb
adc
or
xchg
inc
popa
in
into
fs
out
xor
jns
aas
inc
push
adc
test
add
xchg
xchg
(bad)
mov
or
movs
xor
shr
xchg
push
inc
and
mov
(bad)
mov
addr16
jnp
mov
inc
retf
cwde
and
mov
clc
in
lds
rcr
inc
cs
jl
mov
or
test
adc
repnz
cmp
movs
adc
and
and
out
out
fst
sub
test
imul
dec
jg
mov
adc
jo
loopne
mov
pusha
mov
mov
cmp
push
in
pushf
in
pop
sub
push
mov
xor
mov
xor
ret
sar
jo
aaa
test
out
adc
xor
sbb
inc
fldcw
das
or
inc
mov
(bad)
or
out
lods
mov
jmp
mov
sbb
arpl
adc
sahf
mov
(bad)
je
mov
xor
mov
mov
out
aas
out
and
clc
xchg
addr16
mov
and
bound
dec
adc
ss
push
mov
mov
xor
fstp
(bad)
push
pop
cld
or
adc
lahf
mov
add
(bad)
inc
inc
mov
ja
(bad)
xchg
into
xchg
or
ror
mov
(bad)
(bad)
repnz
cmps
sub
in
pop
mov
rol
jle
inc
cs
xchg
and
pop
push
adc
loope
push
loop
push
sub
inc
ror
jge
lahf
add
cmps
(bad)
dec
or
or
add
out
(bad)
push
sbb
(bad)
fincstp
add
mov
sbb
pop
mov
call
sbb
push
imul
sub
inc
adc
leave
clc
cmp
idiv
(bad)
add
pusha
sbb
out
mov
xchg
pop
ss
mov
test
sti
fdivrp
imul
sub
jmp
into
gs
cs
mov
jecxz
test
xor
stos
inc
or
mov
sbb
rcr
pop
sbb
jb
jnp
inc
sub
iret
test
stos
or
dec
(bad)
pushf
mov
test
dec
in
neg
jae
sub
sbb
dec
jo
or
ds
mov
add
test
fist
inc
cs
inc
stc
sub
movs
dec
je
inc
bound
push
or
pop
pop
cmp
mov
pop
repz
mov
ror
add
push
in
xchg
push
mov
dec
add
jmp
gs
call
sar
jb
data16
fdiv
mov
jns
(bad)
clc
aas
icebp
jp
enter
and
mov
pop
popa
xor
jmp
out
fild
jmp
and
retf
cmp
fwait
xchg
mov
std
aaa
or
stc
in
cli
push
(bad)
call
imul
adc
jecxz
jbe
mov
sbb
imul
sbb
add
dec
sbb
fiadd
adc
jno
xor
loope
mov
mov
inc
in
or
cmp
pop
push
aad
mov
pop
mov
lds
(bad)
imul
or
(bad)
mov
(bad)
rol
or
xchg
xor
and
push
xchg
push
jecxz
push
ror
nop
xor
ret
push
das
push
fucom
repnz
push
loop
lahf
in
add
adc
jnp
mov
pop
push
push
repnz
xlat
addr16
fdiv
or
cmp
push
push
mov
add
adc
xchg
dec
sbb
and
fadd
(bad)
ss
add
leave
in
shl
cmp
ja
inc
movs
mov
push
pop
sbb
retf
rcl
and
test
adc
push
ret
fmul
(bad)
cmp
ins
mov
push
mov
mov
dec
adc
jmp
xchg
and
jmp
(bad)
push
ins
push
cmc
xchg
xor
pop
adc
pusha
and
sbb
push
sub
retf
jbe
cmp
gs
dec
pop
sar
push
sub
xor
lods
mov
sub
cld
pop
movs
jb
outs
retf
or
or
inc
(bad)
daa
popf
imul
loop
mov
stc
sti
xchg
aad
sub
or
arpl
sbb
push
and
mov
jae
or
sub
ins
aad
push
outs
movs
bound
pop
scas
aaa
mov
in
pop
jge
neg
xchg
pop
adc
call
push
das
adc
out
mov
push
fistp
add
bound
mov
dec
pop
xlat
pop
mov
push
push
xor
popf
(bad)
in
dec
mov
push
mov
pop
pop
and
push
fsubr
ror
movs
or
cmp
inc
mov
(bad)
iret
ss
inc
push
pushf
add
cli
imul
call
inc
pop
shr
push
xor
sbb
lahf
xlat
inc
mov
fnsave
push
scas
scas
ins
dec
mov
jns
bound
lods
in
repnz
imul
jnp
int
fwait
pop
jae
jmp
scas
and
cmp
leave
pop
test
adc
jae
or
jb
mov
adc
lock
adc
cmps
pushf
loopne
jbe
inc
vrcpps
and
pusha
jg
sbb
enter
pusha
or
push
test
xlat
mov
in
ss
jge
aam
inc
jno
pop
sbb
mov
icebp
stc
out
add
shr
cmp
xchg
mov
repz
mov
rol
(bad)
cmp
dec
rcr
popf
xchg
jnp
add
mov
aam
(bad)
cs
outs
mov
rcl
div
movs
shl
outs
sub
pop
mov
mov
(bad)
xchg
ss
stos
pop
add
test
pop
fstp
inc
jnp
mov
push
cld
ins
ja
retf
or
test
mul
mov
jg
xchg
push
dec
xlat
cwde
add
xchg
or
mov
or
ja
sbb
call
add
adc
fucom
int3
cmp
pop
inc
xchg
ins
cmp
hlt
mov
inc
mov
call
jae
push
mov
in
dec
xchg
jecxz
add
and
xor
(bad)
fs
fldcw
jecxz
cmp
and
aas
xchg
jle
pop
and
test
add
sub
mov
gs
fsubr
test
test
mov
imul
xor
into
nop
repnz
addr16
ror
push
sar
cmp
cdq
dec
pop
pushf
retf
jo
loope
xor
lea
jmp
cld
push
in
xor
out
std
nop
inc
rcr
retf
jne
jge
xchg
sbb
xchg
aas
loopne
pop
pop
daa
or
xor
and
sub
dec
sbb
in
icebp
push
push
and
shr
rol
sub
outs
jge
pusha
adc
and
dec
inc
nop
push
dec
mov
fcom
js
sahf
inc
loope
pop
jecxz
jo
test
and
je
(bad)
mov
sbb
inc
test
mov
adc
push
xchg
cdq
mov
or
sar
ret
push
pop
push
(bad)
jb
sbb
xor
imul
xlat
rol
mov
ss
sbb
mov
rol
out
icebp
or
or
popf
retf
pop
repz
xchg
popf
shl
rcr
cmp
jg
dec
push
xor
outs
and
and
mov
add
aas
mov
adc
daa
imul
stc
sbb
gs
adc
pop
pop
or
mov
fld
sbb
sahf
addr16
xchg
fnstsw
xchg
cmp
pop
imul
leave
jg
repz
leave
hlt
jmp
lsl
sub
(bad)
cwde
ror
xchg
cmp
mov
push
clc
int
hlt
std
xor
add
daa
mov
jnp
xor
daa
xor
xchg
mov
mov
pop
mov
jecxz
ss
(bad)
xchg
sub
mov
fisub
inc
xchg
test
out
mov
nop
jge
adc
arpl
shr
or
sub
out
loopne
adc
push
out
and
stc
xor
inc
(bad)
cmp
mov
nop
out
jns
mov
dec
ins
inc
inc
loopne
popa
in
push
jmp
mov
dec
or
mov
das
aad
fisttp
sub
fwait
dec
pop
mov
cmp
and
enter
mov
push
pop
pop
imul
shl
sub
das
xchg
imul
mov
ret
push
ret
es
arpl
dec
or
enter
push
sti
sub
in
add
sbb
retf
aad
adc
add
mov
dec
jb
neg
neg
or
pop
and
into
fistp
scas
xor
test
push
imul
ret
pop
push
inc
cmp
sub
push
mov
lahf
adc
adc
int3
imul
mov
call
ins
fisttp
add
inc
cmp
cmp
and
(bad)
mov
add
adc
pop
xor
inc
fisttp
xor
push
clc
mov
push
sbb
fs
stc
jno
add
jg
das
dec
arpl
ret
cmp
adc
cmp
sbb
cwde
shl
scas
push
sbb
adc
jae
cwde
or
shl
cmp
push
(bad)
lock
jmp
pusha
add
stos
mov
sbb
ret
sub
ins
mov
jb
jb
and
xchg
dec
mov
je
loop
fdiv
mov
inc
adc
aam
jo
xchg
add
dec
xchg
xchg
add
sbb
hlt
jmp
js
xor
xor
ficom
popf
ins
jge
push
test
loopne
jo
adc
and
mov
ds
les
inc
jns
bound
(bad)
movs
jne
bnd
xchg
push
out
rol
pop
jle
adc
cdq
jge
push
clc
into
out
sbb
(bad)
enter
sahf
jae
inc
and
push
inc
stos
push
ins
sahf
sbb
arpl
dec
mov
mov
adc
hlt
pop
aam
xchg
gs
sub
nop
les
pop
fisttp
inc
mov
mov
xor
out
call
adc
dec
mov
daa
movs
and
movs
(bad)
inc
cmps
sub
jb
fsub
mov
pop
ror
out
scas
(bad)
mov
movs
and
scas
push
xlat
out
dec
xlat
xor
retf
imul
or
add
push
dec
and
fidivr
ds
inc
dec
test
jecxz
fdivr
mov
mov
cmp
psrlw
inc
xor
push
sbb
test
cmp
lea
stos
(bad)
fist
fbstp
cld
push
leave
frstor
pusha
fbstp
push
xchg
mov
lods
in
jmp
mov
dec
xor
pop
jecxz
mov
push
xor
into
xchg
cmp
sbb
mov
call
jns
dec
xchg
inc
cmps
iret
adc
(bad)
push
pop
and
sbb
and
fucomip
leave
push
ja
cld
lea
lea
adc
xchg
jnp
ins
mov
iret
nop
fs
out
ja
push
mov
int3
es
xchg
iret
and
nop
xchg
cld
mov
retf
mov
xor
or
sub
jne
and
add
and
dec
ins
shl
fcmovnu
aam
pusha
lods
out
outs
daa
lods
sbb
mov
sbb
imul
xlat
aaa
inc
sub
xor
and
into
mov
or
dec
mov
pop
nop
enter
enter
shl
jno
mov
lahf
hlt
xchg
mov
jmp
add
adc
push
cld
push
test
or
inc
or
xor
call
pop
nop
repz
cmps
pushf
xchg
fldenv
fiadd
push
lock
xor
cmps
ficomp
sahf
imul
jb
loopne
sbb
out
pusha
aad
sar
sahf
leave
add
ins
in
int3
push
xchg
inc
push
push
mov
adc
es
retf
into
cmp
sub
bound
jg
fist
ins
xchg
adc
cmp
push
cmp
lods
test
xchg
leave
sub
pop
xlat
dec
inc
jbe
out
jge
inc
jge
clc
ins
js
inc
sub
push
mov
es
je
ret
inc
inc
mov
fwait
imul
add
mov
arpl
in
out
imul
test
fild
stos
sahf
loope
int3
sbb
add
jl
xchg
(bad)
loope
out
les
nop
call
jne
xlat
repnz
lods
jae
inc
inc
inc
inc
aas
scas
shl
aas
enter
js
mov
push
jmp
std
xor
jns
mov
add
sub
add
(bad)
movs
ss
loop
inc
test
imul
shl
fwait
and
or
mov
rcl
add
inc
adc
jecxz
pop
mov
and
push
sbb
adc
push
dec
dec
movs
dec
jae
and
xchg
push
pop
adc
sub
dec
shl
or
xor
or
sbb
and
(bad)
push
jmp
fiadd
or
imul
cmps
adc
jnp
mov
pushf
fs
and
pop
mov
cmp
sbb
dec
pop
out
stc
adc
pop
cld
scas
mov
pop
jmp
in
outs
cmp
(bad)
pop
ins
test
xorps
frstor
inc
mov
mov
or
push
add
rcr
mov
dec
xor
or
pop
or
ja
push
pop
fsub
jbe
sub
int3
dec
pop
cli
xor
or
(bad)
(bad)
popa
jg
sub
mov
push
jbe
retf
fidivr
imul
xlat
jl
pop
push
and
mov
daa
mov
ret
out
add
add
jmp
mov
mov
and
adc
rcl
sub
mov
jnp
adc
arpl
popf
call
in
lods
rol
arpl
fs
sahf
dec
outs
lods
xor
and
pop
hlt
mov
inc
push
cmp
sbb
dec
jo
mov
jg
int3
push
add
les
inc
adc
fsincos
sub
and
push
hlt
dec
pop
test
fdivr
adc
push
lods
nop
loope
int
stos
xchg
mov
test
ins
or
inc
cwde
daa
xchg
outs
fadd
clc
int
or
call
fisub
repnz
adc
(bad)
rcr
jnp
(bad)
sti
inc
mov
mov
mov
fiadd
in
adc
push
ds
mov
inc
sub
adc
leave
fld
inc
xchg
push
pop
lods
jecxz
push
pop
sbb
jae
sbb
push
or
adc
push
add
js
jns
sar
or
mov
cld
xchg
rol
lahf
sti
sub
mov
mov
mov
sub
test
arpl
sub
jp
and
fcom
jmp
ret
xor
into
(bad)
jl
loope
adc
call
rcl
mov
daa
mov
arpl
sub
fstp
inc
icebp
ja
dec
in
rcl
xchg
fsubrp
pop
jb
daa
mov
inc
loop
loopne
ins
add
dec
inc
cs
or
push
inc
imul
cmp
cld
sbb
xchg
shl
cmp
cli
jle
jae
cmp
and
and
ret
fwait
aaa
ror
mov
test
daa
pop
xor
cmps
popa
mov
(bad)
aad
push
stos
addr16
(bad)
popf
gs
inc
call
push
(bad)
test
scas
xor
ins
inc
cmp
jl
xchg
jb
leave
rcl
call
or
xchg
pop
fisubr
sar
aad
hlt
xor
sub
shl
pushf
in
stos
in
rcl
and
and
mov
iret
fldcw
xchg
jle
jmp
movs
shl
or
add
pop
cmps
out
shr
mov
jecxz
sub
ss
mov
jb
gs
repnz
add
dec
stc
and
push
jo
jo
or
push
mov
mov
inc
mov
ins
cwde
inc
enter
repnz
sahf
in
adc
f2xm1
jae
cs
mov
and
arpl
dec
sbb
jge
pop
fmul
pop
push
clc
stc
pop
arpl
enter
mov
popf
aad
xor
bswap
pop
mov
push
imul
sti
dec
out
sub
cwde
push
xlat
lds
fidiv
fadd
loopne
xchg
push
shl
cmp
jb
jp
call
int
push
sbb
aaa
push
movs
inc
pusha
fmul
add
add
stos
cmps
xchg
cmp
inc
repz
push
int
dec
aam
rcr
inc
icebp
pop
sub
add
nop
pop
enter
xchg
xchg
addr16
fs
push
jl
(bad)
xor
mov
ds
call
arpl
jg
movs
outs
sbb
cwde
and
ret
out
mov
pop
and
adc
jge
int
cdq
jb
adc
mov
xlat
xchg
fldenv
or
push
jno
jb
adc
dec
inc
out
retf
dec
repz
add
sbb
jne
xchg
nop
add
cmp
inc
loopne
sti
mov
xchg
or
mov
ins
pusha
push
cmp
shl
scas
mov
mov
push
push
jnp
sub
xchg
scas
dec
xchg
mov
das
pop
jg
mov
retf
sahf
(bad)
push
(bad)
in
inc
cmp
cdq
imul
aas
into
push
pop
pop
sbb
fstp
test
(bad)
shl
push
adc
int3
sub
jl
clc
push
add
xchg
push
imul
and
xchg
arpl
(bad)
ins
test
in
xchg
pop
mov
push
fmul
jbe
inc
xor
inc
inc
call
sbb
jmp
cmps
sub
xchg
adc
pop
jb
sbb
push
pop
sti
dec
mov
scas
and
and
daa
jno
xchg
ret
mov
pop
(bad)
aaa
cmps
jp
hlt
sbb
outs
xor
(bad)
loope
mov
mul
push
rcl
movs
adc
xchg
jecxz
je
imul
push
ins
sbb
stc
mov
jo
out
or
xor
and
scas
jbe
in
es
int
jmp
cmp
inc
pop
ja
dec
jle
(bad)
repz
and
shl
fadd
fwait
sub
test
adc
into
cs
xor
bound
(bad)
stos
pusha
fcomp
jecxz
pop
xlat
jns
lock
push
popf
mov
push
fidivr
pop
inc
sahf
sbb
mov
aad
inc
icebp
nop
sub
mov
(bad)
ins
loopne
jl
mov
dec
ja
das
lods
lock
aad
test
dec
fst
fdivp
hlt
or
xor
mov
cmps
stc
fmul
dec
sbb
mov
pop
add
inc
mov
jns
mov
push
pop
aas
je
mov
mov
pop
or
and
and
ret
inc
add
sbb
sub
adc
mov
mov
dec
jnp
das
(bad)
lods
fild
scas
retf
sub
js
ds
stos
pushf
(bad)
repnz
aam
je
xor
xor
mov
jns
cmps
pop
cmp
or
or
pop
test
call
mov
jge
xchg
xchg
not
mul
repz
pushf
mov
pop
rcr
jl
sub
call
aad
jne
jnp
adc
sbb
dec
push
in
int3
in
mov
bound
mov
and
jno
fnsave
mov
mov
mov
cmc
cmp
call
jne
dec
cmp
pop
push
in
and
push
xor
inc
mov
aam
mov
lea
xor
aaa
xchg
jbe
in
sbb
pop
aam
into
mov
stc
out
stos
lock
popa
dec
stos
icebp
jmp
mov
mov
shl
retf
push
and
adc
data16
(bad)
adc
jle
add
push
stos
sub
not
cmps
push
out
push
inc
inc
xchg
aam
dec
adc
scas
ret
jecxz
xor
jnp
and
lods
retf
rcl
and
and
cmp
popa
fmul
jo
or
pusha
mov
fist
fcmovnb
jp
enter
add
daa
mov
mov
mov
shl
xor
xor
jno
dec
adc
inc
data16
scas
lods
fist
dec
push
clc
dec
icebp
stos
ret
lods
icebp
enter
xlat
inc
sbb
adc
imul
rol
dec
rcl
lea
push
test
adc
jnp
popf
jns
shr
xchg
call
scas
out
repz
jae
arpl
inc
sbb
aas
sub
jge
in
or
mov
jmp
cdq
cs
imul
dec
idiv
inc
xor
pushf
enter
sub
fiadd
pop
cmp
out
jle
cld
mov
adc
jmp
rcr
test
fisttp
fcmovbe
cmp
push
lahf
fwait
xchg
mov
jmp
in
xor
ret
mov
dec
xchg
in
jmp
cmp
hlt
push
addr16
cli
mov
and
jle
in
int
fwait
mov
dec
cmp
pop
mov
pop
(bad)
push
call
sub
xor
or
sbb
mov
shl
loope
fistp
add
cmc
and
jb
push
scas
retf
xor
je
adc
push
mov
inc
push
mov
mov
inc
or
lods
ins
loope
xlat
movs
retf
add
cmp
dec
jle
jp
(bad)
sub
nop
mov
(bad)
dec
sbb
(bad)
out
mov
xor
cmps
xchg
sub
cmp
inc
mov
xor
ja
rcr
jl
in
xchg
inc
and
xchg
cmp
and
je
jmp
movs
ret
cmps
xchg
cvtdq2ps
cmps
mov
pop
xchg
into
xchg
mov
xor
cmp
clc
inc
sub
aam
cmp
xchg
(bad)
cmps
movs
jae
clc
int
mov
fldcw
mov
es
retf
or
cmp
dec
push
and
popa
ret
mov
sar
dec
pop
sub
(bad)
push
xchg
mov
sbb
adc
pop
sbb
mov
inc
fdivr
jle
fistp
sub
mov
leave
test
loopne
mov
sbb
pop
push
popf
fistp
(bad)
fisubr
pop
sbb
fs
cmp
push
mov
stc
dec
popf
or
cs
fwait
imul
inc
jl
xchg
aaa
adc
in
inc
les
inc
(bad)
and
lds
sahf
repz
mov
cmps
pop
lock
cmps
cmc
ret
jecxz
jne
adc
ror
push
and
push
pop
add
pop
test
ja
xchg
hlt
mov
jnp
push
lods
push
fstp
cmp
(bad)
out
test
call
stos
jno
mov
test
(bad)
in
fucom
bswap
test
fimul
das
xor
arpl
aaa
dec
jecxz
sub
xchg
test
inc
ret
ja
xchg
mov
rcl
mov
mov
sub
add
xchg
jno
jge
fmul
data16
imul
outs
xchg
lds
and
pop
jo
xor
and
aad
mov
loopne
out
mov
and
add
adc
and
pushf
mov
jb
call
inc
mov
aam
stos
sahf
cwde
push
pushf
sbb
or
pop
push
(bad)
xlat
xchg
mov
test
dec
bound
inc
imul
aaa
(bad)
lea
pop
in
xor
dec
xchg
and
pusha
movs
mov
nop
jnp
mov
outs
fwait
inc
xchg
outs
pop
fidiv
xor
and
jle
and
pop
sahf
aas
sub
xor
adc
rcr
or
faddp
and
fwait
adc
sbb
add
jns
mov
fld
pop
xchg
popf
sub
and
in
push
jle
sub
xor
inc
push
addr16
dec
xchg
es
jbe
jmp
push
mov
daa
mov
ret
(bad)
in
and
sub
add
sahf
push
out
push
or
inc
test
push
fist
ins
xor
(bad)
rcr
jg
mov
xor
mov
mov
pushf
enter
or
in
push
loope
or
(bad)
fs
addr16
addr16
ficomp
pop
icebp
es
aaa
retf
popf
and
(bad)
or
jge
scas
out
addr16
pop
ja
push
mov
cmp
mov
scas
(bad)
or
cmp
rol
fbstp
das
xor
sbb
gs
xchg
jmp
test
shl
or
in
ins
adc
jmp
inc
cwde
mov
jp
push
cwde
scas
xlat
fistp
jae
imul
sub
hlt
fnsave
aaa
outs
imul
push
sbb
push
or
sub
int3
shr
push
adc
and
mov
jbe
pop
mov
xchg
jbe
loop
jp
xchg
cmp
into
cli
test
pushf
lock
ins
fmul
call
ins
rcl
in
adc
out
out
cs
mov
mov
shr
das
lea
xchg
and
xchg
cld
and
daa
jae
arpl
pop
outs
dec
xor
inc
popf
fdiv
lock
imul
loopne
cmp
popa
fsubr
inc
mov
movs
in
popf
inc
xchg
xor
mov
adc
jecxz
aam
mov
jo
mov
cmp
mov
jle
add
sub
mov
pop
imul
mov
push
mov
add
or
movs
mov
ds
mov
pop
ficomp
mov
shl
shl
pushaw
mov
xlat
cli
lods
popa
shr
iret
xchg
jmp
loop
loop
lahf
(bad)
nop
popa
outs
cmp
cmp
outs
xor
rol
in
clc
jmp
mov
icebp
in
adc
daa
fiadd
sahf
pop
pop
mov
jmp
xor
push
movs
inc
das
mov
loopne
fstp
mov
arpl
mov
shl
dec
fld
push
jno
jecxz
inc
jl
mov
xchg
lods
add
pop
or
out
pop
retf
leave
xchg
(bad)
scas
jmp
mov
dec
mov
lods
cmp
pop
out
repnz
xor
cmp
pop
call
ret
xor
mov
inc
jae
xor
sub
shr
lods
in
fs
ins
pop
pop
sub
(bad)
dec
xor
sub
push
out
cwde
and
inc
xor
ret
mov
scas
xchg
sub
xlat
mov
neg
js
add
mov
adc
loop
pushf
dec
sahf
lds
data16
sti
out
dec
jmp
dec
sbb
mov
enter
push
pop
loop
fmul
jns
pop
and
in
push
jmp
out
push
jmp
dec
retf
cmp
mov
xchg
mov
mov
(bad)
test
repz
aam
popf
(bad)
push
fst
jge
inc
or
pop
scas
mov
shr
dec
bswap
add
ss
inc
xchg
push
ficom
pop
push
xchg
scas
cld
jmp
sub
cli
add
cmp
je
xchg
and
retf
out
xchg
jge
jb
jge
mov
imul
adc
mov
push
fdivp
mov
fmul
scas
mov
(bad)
cld
and
cmp
jmp
cmp
mov
xor
cmps
test
dec
adc
pop
lods
xchg
test
pop
movs
jl
xor
iret
inc
push
xchg
mov
fs
adc
stc
push
out
xchg
out
push
pop
jne
cmp
push
in
jl
lock
adc
imul
mov
push
dec
cmp
(bad)
inc
xlat
cmp
pop
push
sub
retf
fisttp
sahf
movs
aad
mov
fcomip
xchg
ins
lahf
or
mov
sbb
stc
je
and
aam
sbb
lea
cmps
jae
cmp
xor
bound
in
stos
call
xor
js
jge
jns
loopne
fstp
sbb
fbld
and
mov
out
jecxz
addr16
cmps
add
pop
push
cs
and
pusha
dec
mov
adc
dec
sbb
int
es
jle
cmp
in
cmp
movs
push
pop
cmp
sub
loopne
js
cs
sub
mov
cmps
inc
fstp
addr16
pop
mov
mov
das
fmul
ins
inc
(bad)
or
mov
sbb
mov
pop
in
repz
adc
test
adc
scas
push
hlt
mov
fldcw
int
das
xchg
adc
adc
adc
mov
je
xor
pop
push
mov
push
in
mov
fimul
mov
test
mov
push
imul
dec
xchg
leave
aam
pop
push
xchg
sbb
test
jp
mov
mov
popf
jbe
js
sub
dec
(bad)
jp
inc
in
outs
movs
dec
xchg
or
dec
adc
test
pop
mov
stc
data16
pop
push
jge
push
mov
adc
inc
pop
dec
mov
cld
jmp
pop
pop
movs
and
or
mov
clc
aad
jl
add
sub
retf
cmp
enter
test
(bad)
ja
cmps
xchg
imul
scas
adc
lea
(bad)
les
mov
pop
inc
and
and
cmp
movs
adc
jge
xor
sbb
enter
jb
mov
sahf
and
cli
jmp
in
sti
call
and
mov
xchg
sbb
adc
repnz
test
cmc
mov
and
sahf
fbstp
loope
mov
push
movs
mov
test
addr16
and
loope
push
xor
and
addr16
js
bound
test
mov
in
dec
jmp
shl
mov
movs
ja
sbb
jnp
xchg
mov
pop
xchg
pop
sbb
hlt
jmp
adc
fsub
xor
pop
fdivr
loopne
xor
xor
retf
push
lods
icebp
addr16
dec
test
das
into
xchg
cmp
clc
ret
ja
mov
(bad)
push
jmp
xchg
push
es
sub
(bad)
loop
imul
outs
pop
xor
retf
dec
push
cmp
loopne
ins
or
xchg
mov
call
fstp
sahf
and
ins
mov
sub
fld
mov
loopne
pop
push
cmp
popa
dec
(bad)
imul
add
inc
jmp
int
mov
push
or
mov
push
dec
pop
inc
pop
lds
and
xor
rcl
and
cli
jno
xchg
sahf
popf
adc
icebp
or
mov
mov
adc
and
mov
shr
(bad)
xor
outs
and
clts
leave
xchg
and
mov
rcr
pop
xchg
adc
or
and
sbb
xchg
or
cmp
pcmpeqd
jo
stc
mov
push
xor
cmp
lds
test
dec
sub
and
cmp
adc
sbb
cmps
pop
add
iret
adc
xor
lock
mov
fs
clc
jmp
jge
push
int3
jg
jae
push
scas
xor
ret
inc
ds
popa
es
test
das
rcr
aaa
movs
mov
scas
imul
pushf
adc
mov
call
jecxz
push
rcl
pop
fwait
repnz
xchg
out
icebp
sbb
popf
fnsave
es
mov
sbb
cmps
cwde
test
adc
idiv
call
(bad)
and
fwait
bound
add
nop
loope
mov
imul
or
cmp
call
arpl
gs
mov
addr16
push
nop
ins
sbb
leave
scas
push
sub
enter
pop
sub
sub
jmp
push
pop
add
and
bswap
mov
push
sub
xchg
mov
mov
rol
(bad)
aam
push
add
dec
add
mov
pop
xor
and
adc
mov
inc
jae
movs
stos
inc
xchg
sbb
add
jecxz
test
mov
lahf
mov
or
sub
out
pop
xchg
inc
and
push
push
call
cmp
fist
adc
mov
jge
int
in
sub
sub
lahf
or
sbb
out
sti
or
loope
or
fsubr
push
sbb
xchg
push
adc
movs
xor
sbb
push
sbb
rcr
sbb
inc
push
add
mov
into
inc
and
das
mov
cmp
repz
mov
cli
xchg
adc
imul
cmp
inc
test
mov
dec
xchg
pop
xlat
xchg
fisttp
fsubrp
mov
movs
add
out
xchg
push
daa
adc
or
mov
leave
add
jb
cmp
mul
fidivr
xchg
adc
xor
inc
xchg
nop
dec
add
lea
das
cmps
sbb
mov
add
loopne
outs
sub
pop
outs
push
xchg
(bad)
ja
data16
in
add
iret
(bad)
fld
hlt
cmp
mov
int3
jno
and
adc
push
out
ficomp
sub
aad
rcr
out
jp
hlt
adc
adc
aas
int
mov
push
jge
(bad)
pop
iret
xor
or
mov
pop
adc
mov
cli
mov
out
and
push
xor
stos
sahf
or
scas
cdq
mov
push
mov
inc
out
xchg
test
das
jmp
jo
cld
xchg
or
pop
in
and
inc
push
pop
or
xchg
(bad)
pushf
jecxz
sub
pop
push
mov
ret
inc
add
and
hlt
stos
or
sbb
sahf
idiv
mov
mov
mov
xchg
xchg
(bad)
fsub
adc
daa
(bad)
jecxz
mov
sbb
mov
addr16
not
ins
es
fdiv
push
inc
loop
xlat
sub
ds
push
add
sbb
movs
out
retf
lea
pop
stos
push
test
shl
mov
into
scas
fmul
aas
out
out
sub
adc
je
jmp
ja
sub
scas
or
inc
(bad)
sti
add
stos
mov
pop
jne
sbb
mov
dec
(bad)
sub
retf
add
xchg
cmp
loopne
mov
xchg
cmps
jo
fstp
push
pushf
xchg
out
leave
cmp
push
and
or
sub
sar
mov
aam
xchg
sub
and
cmp
(bad)
pop
or
jbe
sub
add
cdq
add
enter
scas
mov
xor
dec
bnd
sub
jnp
imul
add
(bad)
adc
lahf
adc
int
stos
or
pop
dec
and
jmp
test
inc
fisttp
out
dec
dec
push
sub
sub
sub
xchg
inc
je
sahf
jge
or
adc
rcr
fisubr
dec
add
cmp
int
aam
repnz
cdq
mov
(bad)
scas
xor
ss
je
retf
sub
dec
fucom
xlat
call
pop
lds
call
cwde
sti
je
mov
lock
push
xor
and
mov
push
scas
lods
add
xlat
neg
sub
fsubr
mov
dec
or
int3
pop
dec
leave
rol
cmp
jae
stos
sub
sbb
jae
retf
inc
jge
data16
out
scas
outs
pop
mov
push
mov
push
adc
add
sbb
jno
pushf
mov
into
int3
pop
sti
repz
mov
jmp
cmp
xlat
popa
fsubr
xor
fisttp
dec
pusha
push
and
fidivr
pop
cmp
and
div
xchg
aaa
inc
cmc
arpl
sub
jb
lock
sbb
neg
push
and
imul
js
mov
adc
movs
outs
add
nop
ss
mov
dec
mov
shr
lods
call
inc
pop
arpl
cmps
rcl
inc
pop
aas
jl
inc
mov
dec
pop
and
push
push
cmp
jge
jne
push
into
push
mov
push
xchg
or
push
ja
adc
inc
lahf
inc
cld
fmul
bound
mov
sub
or
scas
mov
ins
and
popf
call
cs
pop
jae
pushf
add
sub
jae
jns
mov
scas
sub
(bad)
arpl
fld
sub
sbb
jae
jg
sub
add
push
daa
pop
jno
in
jmp
imul
sub
jmp
sub
xor
xchg
dec
scas
aas
jne
mov
inc
out
sbb
xchg
jns
sbb
push
mul
stos
and
or
repz
jbe
popa
pushf
push
cmp
(bad)
push
out
add
xchg
dec
sub
ins
inc
xchg
push
dec
(bad)
pop
dec
in
jecxz
in
mov
sub
push
inc
push
or
or
push
pop
dec
mov
out
sub
shl
lea
or
jge
std
mov
mov
scas
es
movs
or
add
sub
mov
fmul
jae
mov
push
mov
arpl
ins
or
mov
mov
addr16
clc
ret
and
bound
sub
or
test
js
mov
sti
adc
pushf
in
mov
dec
cmp
mov
movs
imul
mov
xchg
int3
xchg
lods
rol
sub
ret
stos
cdq
outs
or
lock
(bad)
or
jno
pop
retf
jmp
cwde
adc
xlat
retf
xchg
ja
rcl
push
sar
mov
sub
mov
gs
mov
adc
in
mov
fisttp
xor
inc
call
or
aad
(bad)
and
ins
mov
pop
and
sbb
cmp
pop
jmp
mov
sub
int3
cli
add
push
jns
leave
dec
push
mov
jle
idiv
sbb
mov
scas
adc
or
rcr
(bad)
inc
rcl
push
pop
std
lea
add
mov
pop
dec
cld
cld
shr
pusha
xlat
gs
mov
je
and
test
add
pop
out
retf
pop
adc
push
cld
lods
pop
gs
test
cld
fucom
jae
inc
xchg
js
into
icebp
mov
jo
test
(bad)
mov
bound
shl
adc
lahf
cmc
pop
in
inc
(bad)
mov
test
aaa
jno
inc
and
aas
scas
in
int
dec
mov
jne
sub
js
cmps
ficom
push
jbe
xor
aaa
dec
jmp
pushf
and
inc
stos
mov
mov
ret
jmp
in
jmp
mov
test
sub
outs
ds
shl
jl
mov
sub
test
loop
jp
loope
inc
cmp
inc
add
sub
rcr
gs
popf
cmp
rcl
repnz
out
call
jmp
cdq
mov
xchg
test
or
fmul
add
cmp
lods
movs
or
push
mov
xor
cli
inc
jnp
dec
rol
movs
mov
xor
adc
daa
push
enter
or
lods
dec
pop
jp
or
cmc
cdq
(bad)
stos
lahf
mov
xlat
pop
mov
sub
arpl
sbb
cmp
fcmovne
push
sbb
jmp
and
or
shl
cmp
loop
dec
sbb
add
pop
in
inc
aaa
push
fbstp
cld
(bad)
mov
jne
jbe
xchg
xchg
xor
fld
jns
daa
dec
pop
cmp
adc
adc
jo
(bad)
sbb
and
xchg
cld
in
dec
in
sbb
inc
imul
gs
or
imul
ror
lea
stc
icebp
pusha
scas
sbb
or
loopne
out
(bad)
inc
rcl
dec
out
sub
popf
pop
jg
imul
push
cld
jmp
mov
mov
sub
out
imul
jae
or
out
push
push
inc
sbb
test
out
xchg
outs
hlt
sub
pop
nop
(bad)
out
sbb
dec
jge
pop
ins
cmp
punpckhdq
xor
xchg
lods
cld
xchg
(bad)
imul
mov
(bad)
scas
jae
cmp
mov
sahf
loop
add
fdivr
pop
popf
call
lahf
adc
jo
enter
leave
imul
push
loopne
test
xor
gs
add
aaa
arpl
push
push
aam
add
scas
jecxz
inc
or
jne
add
dec
rcl
or
sbb
cwde
sub
sbb
pop
das
lahf
adc
adc
(bad)
dec
sub
mov
(bad)
xlat
movs
mov
repnz
hlt
dec
loope
cmp
push
test
lods
push
ret
jb
xor
jmp
movs
aaa
sub
add
in
cmp
sbb
dec
or
push
test
int
mov
or
sbb
mov
jmp
cmps
add
sbb
iret
push
iret
lods
jle
in
sub
push
outs
inc
xor
ja
mov
push
or
pop
div
(bad)
and
push
mov
fwait
imul
in
(bad)
out
cmps
jmp
(bad)
imul
or
leave
cmp
xor
int3
mov
xor
rcr
mov
jb
mov
push
xchg
dec
fs
mov
test
into
cmp
inc
pop
mov
push
add
xchg
cmp
ror
ins
cli
das
push
pop
inc
pop
jnp
lods
jle
popf
xchg
cmp
and
adc
inc
sbb
(bad)
jp
mov
lods
pop
fs
retf
xchg
daa
and
retf
cmp
adc
enter
js
loopne
mov
jae
xchg
scas
dec
fstp
lods
aad
push
fwait
out
mov
xchg
cmp
les
ret
mov
pop
fs
sub
push
and
cmp
sub
sub
mov
(bad)
sub
ret
popa
pop
mov
fwait
cld
loope
ss
pop
cmp
mov
daa
cmp
out
mov
arpl
pop
inc
mov
data16
sub
or
aam
mov
or
je
xchg
imul
outs
out
mov
inc
xchg
add
sub
pop
(bad)
outs
into
js
sub
in
(bad)
(bad)
idiv
xchg
inc
pop
mov
aad
add
sub
jbe
pop
ds
ror
add
test
(bad)
(bad)
rcr
cmp
rcr
cmps
mov
jns
stos
shr
mov
and
xchg
add
outs
cmp
xchg
pop
mov
dec
mov
out
imul
or
pop
sub
fcomp
aad
punpckhwd
xchg
clc
arpl
xchg
stos
xor
adc
int3
mov
test
xchg
shr
mov
sbb
push
xchg
mov
adc
push
add
test
jnp
es
(bad)
imul
cmp
pop
dec
cs
(bad)
test
pushf
and
jnp
rep
enter
repnz
mov
inc
hlt
cmp
in
sub
push
and
shl
and
pop
retf
jge
dec
ins
enter
movs
(bad)
daa
cmp
retf
loope
pop
cs
add
jnp
fldenv
push
fdecstp
fcomp
retf
dec
ror
out
mov
retf
or
dec
or
test
cs
ret
arpl
add
cwde
js
xchg
xor
fnstsw
sbb
or
(bad)
push
inc
mov
jne
mov
mov
inc
or
adc
enter
lock
and
pop
add
test
into
out
sqrtps
mov
inc
movs
fdivr
xor
cmps
ja
dec
daa
mov
pop
or
imul
test
mov
cld
stos
pop
adc
shr
popa
es
jno
inc
aad
shl
jge
jne
inc
scas
push
fistp
cmps
inc
cmp
call
dec
cmp
leave
int3
fiadd
adc
sahf
sbb
dec
in
ja
jnp
mov
and
ins
mov
mov
cmp
and
mov
sbb
jae
sub
fiadd
push
loop
test
cmp
cmp
sub
jbe
push
push
jmp
add
push
rcr
xor
inc
aam
jge
mov
loope
stos
pop
div
jmp
scas
pop
ucomiss
movs
retf
popa
xor
(bad)
cmp
add
pop
push
clc
cmp
sub
imul
(bad)
stos
mov
imul
add
dec
lahf
cwde
add
sti
jo
cmps
jae
inc
pop
cmovle
xchg
push
push
push
cwde
ins
fistp
movs
cmp
xor
and
sub
(bad)
cmc
add
(bad)
aad
ins
mov
mov
push
push
fld
dec
cmp
jo
mov
lods
das
clc
popa
retf
push
retf
ins
xor
mov
into
pop
jmp
ja
test
mov
shl
xor
ins
test
jae
int
mov
cmp
std
out
or
inc
cdq
inc
sahf
imul
in
stos
jno
outs
xchg
xchg
push
sub
jne
pop
fwait
xchg
mov
mov
daa
mul
cmp
xchg
add
call
mov
jmp
jb
popa
loop
inc
add
movs
lods
shr
(bad)
arpl
pop
xor
sbb
pushf
retf
sub
mov
dec
xor
(bad)
pop
pop
pop
mov
mov
push
sub
adc
pop
mov
pop
fisubr
in
and
retf
xor
cmp
retf
pop
and
add
stos
push
frstor
sbb
(bad)
(bad)
inc
(bad)
or
ss
cmp
out
div
retfw
sbb
mov
mov
ins
mov
adc
retf
retf
cmp
std
stos
fild
dec
mov
cmp
leave
stos
dec
scas
cwde
cli
dec
add
pop
in
lods
adc
mov
(bad)
pop
cmp
mov
mov
mov
or
pop
bswap
pop
push
jl
pushf
cmp
cwde
nop
sub
test
adc
mov
repnz
cdq
(bad)
cmps
and
test
rcr
jbe
leave
push
sbb
or
pop
sbb
lea
mov
or
(bad)
mov
outs
pop
xor
jg
mov
rol
retf
sub
inc
mov
jecxz
loopne
and
or
ror
or
mov
cmp
mov
int
sub
leave
lods
mov
mov
mov
(bad)
jecxz
fdivr
fs
mov
in
(bad)
cmps
mov
xor
mov
repnz
adc
mov
pop
and
push
xchg
movs
add
sahf
inc
fild
out
dec
sub
mov
and
mov
outs
cmc
mov
and
sub
xchg
cmps
(bad)
fisub
mov
dec
stos
pop
xor
loope
stos
(bad)
mov
stos
(bad)
iret
mov
inc
es
movs
(bad)
loop
inc
push
push
outs
in
test
std
sahf
repnz
mov
movs
pop
dec
sub
sti
sbb
push
push
dec
ret
xor
test
push
and
in
arpl
and
popf
fstp
mov
loop
mov
jg
rcl
cs
test
mov
and
jge
xor
ret
frstor
mov
jns
loop
mov
cmps
cld
dec
out
sti
sbb
sub
sbb
cdq
and
mov
lds
pusha
int
cmp
jb
xchg
xchg
mov
pop
sub
mov
fs
xchg
sub
sbb
adc
pop
cwde
cdq
sub
arpl
retf
cmp
je
shr
adc
xchg
(bad)
jne
xchg
fbld
pop
sbb
cld
jbe
mov
push
mov
test
jne
mov
jmp
mov
xlat
mov
mov
sub
add
bnd
mov
jb
xchg
jecxz
and
cmps
std
int
jns
ss
cwde
in
sbb
inc
rdtsc
adc
fbstp
sbb
daa
mov
or
mov
out
out
sbb
mov
sbb
cmp
push
and
xor
pop
pop
in
(bad)
rcpps
jmp
and
shl
js
and
mov
xlat
pop
jbe
int3
sahf
xor
xlat
sbb
or
aad
push
jle
mov
xor
aam
and
inc
sub
(bad)
mov
popa
out
mov
sbb
pop
test
pop
and
and
pop
jle
jo
int3
hlt
dec
sbb
xchg
sbb
pop
mov
test
mov
jge
dec
aaa
cmps
push
rep
add
xor
and
ds
pop
mov
push
sar
mov
jmp
rcl
xor
jle
(bad)
xchg
cli
imul
pushf
jl
xchg
mov
add
mov
ss
jmp
cmp
pop
inc
stos
and
into
mov
(bad)
leave
pop
add
add
cmc
dec
jecxz
movs
sub
add
outs
sbb
and
sub
retf
stc
dec
nop
retf
gs
dec
inc
mov
push
add
aas
adc
ja
sub
mov
or
in
retf
loopne
sub
mov
dec
sub
fidiv
cs
jle
das
sub
cdq
cmp
sbb
fiadd
mov
mov
dec
ds
icebp
xchg
mov
xor
je
in
mov
jg
push
mov
xchg
or
mov
xchg
sub
xchg
(bad)
aam
div
not
adc
or
dec
jl
aad
shr
bound
hlt
jge
mov
sub
into
lods
mov
push
retf
aad
xor
push
mov
sbb
fs
xchg
(bad)
int
iret
xor
mov
mov
ret
mov
mov
and
cs
and
enter
sub
int3
lods
mov
sub
jnp
pop
pop
aad
pop
push
add
rcl
or
lods
xor
mov
movs
push
xchg
cmp
enter
lods
pop
pop
xor
rcl
cmp
xchg
jmp
xchg
inc
call
push
sub
xor
push
cmps
add
in
sub
adc
dec
dec
pop
popf
and
fist
dec
xchg
int3
pop
outs
repnz
cmp
pushf
add
add
xchg
ds
ins
out
fdivr
(bad)
icebp
inc
xor
pop
push
rcl
je
cmp
scas
xchg
int
sub
cmp
pop
jnp
adc
fbstp
jle
push
inc
xor
loope
fcmovnb
push
jl
adc
xor
stos
rol
adc
mov
sbb
lods
inc
shl
pushf
jge
outs
dec
sbb
lods
xchg
push
pop
mov
rcr
addr16
data16
mov
gs
adc
mov
stos
or
pop
not
sub
adc
and
jp
ins
jnp
cmp
mov
push
dec
js
retf
push
dec
adc
pop
jmp
push
mov
push
cwde
pop
xchg
loopne
inc
mov
jecxz
fwait
sbb
and
cmps
push
stc
je
mov
sub
popf
adc
pop
out
rcr
xchg
mov
ja
pushf
rcr
js
sbb
jbe
dec
sar
lock
add
mov
pop
mov
push
jl
test
adc
dec
mov
dec
adc
(bad)
jb
jp
xchg
fimul
int
cmp
jno
sub
xchg
loopne
xor
imul
in
stos
jg
cmps
inc
lock
or
sub
pop
dec
retf
mov
scas
data16
push
mov
xor
bnd
imul
fbld
add
movs
mov
pop
out
inc
jmp
repnz
out
cmp
movs
and
mov
or
in
pop
leave
pop
add
cmc
sbb
jg
xchg
and
jb
in
in
fdiv
mov
add
push
push
fstp
add
sar
pusha
push
inc
cmps
sub
inc
call
mov
rcr
push
jne
dec
sbb
mov
sbb
dec
and
mov
gs
push
into
inc
jmp
clc
cld
retf
pop
pop
fild
in
les
call
jmp
xor
sbb
ret
jecxz
stc
sbb
(bad)
fs
in
iret
mov
add
pop
mov
jecxz
leave
pushf
(bad)
and
and
and
or
fstp
xchg
jp
pushf
sbb
(bad)
mov
stc
dec
stos
test
push
movs
mov
adc
jb
cmp
clc
std
arpl
mov
and
dec
mov
ror
jp
jg
mov
push
push
in
mov
mov
push
push
ds
pextrw
pop
popa
sbb
sbb
pop
xor
popf
push
sub
push
aad
cmc
mov
pop
int3
jno
mov
int
sub
(bad)
xor
das
lods
std
inc
aaa
or
retf
stos
cld
mov
and
sbb
xor
sbb
jnp
add
scas
(bad)
das
movs
(bad)
in
test
rol
add
xchg
adc
stc
adc
mov
mov
inc
adc
or
std
xchg
dec
out
test
pop
daa
and
pop
std
hlt
dec
rol
mov
mov
pop
cwde
xchg
sbb
scas
mov
inc
out
or
mov
sti
xchg
shl
fsub
lds
xor
lds
push
pop
xor
(bad)
jmp
dec
bound
das
xchg
adc
sub
mov
pop
mov
sub
(bad)
push
(bad)
fnstsw
mov
fldenv
scas
les
sbb
out
jne
movs
dec
xchg
pop
inc
pop
or
clc
cmps
data16
scas
sub
cmp
pop
std
into
mov
addr16
xchg
add
jo
jmp
add
in
fisub
mov
(bad)
shl
cwde
int3
scas
shl
lock
mov
inc
arpl
stos
cmp
call
dec
outs
das
cmp
push
add
jle
jmp
dec
or
aad
dec
cmp
in
push
ret
cmc
sub
addr16
loopne
cmps
imul
test
sub
mov
pop
push
test
pop
adc
cdq
xor
bound
neg
xchg
fwait
push
aam
loope
aas
out
mov
je
dec
fdiv
ds
fisttp
dec
jb
lods
push
dec
mov
jo
or
retfw
into
xor
int3
pop
or
icebp
in
es
dec
daa
shl
jnp
push
dec
or
jne
push
aaa
push
neg
repz
mov
xchg
lahf
xchg
test
and
dec
sbb
inc
fcmovne
sbb
xchg
rol
imul
rcl
not
cmps
mov
call
iret
jge
in
in
(bad)
inc
jno
inc
fidivr
ficom
mov
test
out
pop
sub
data16
ja
ds
inc
sub
inc
dec
xchg
mov
sbb
out
stos
inc
cli
sub
jns
into
stc
icebp
sti
call
data16
outs
push
int3
int
jmp
cwde
sbb
sti
xchg
xchg
fldenv
lahf
mov
fcomp
loop
inc
ret
lea
sahf
mov
mov
aad
cli
xor
xor
adc
leave
mov
fwait
out
cld
dec
push
iret
jnp
mov
hlt
(bad)
aad
pop
mov
push
mov
mov
shl
add
dec
mov
ret
shl
cmps
cmp
xchg
or
jo
retf
sub
arpl
lea
mov
jle
xor
inc
les
icebp
outs
dec
jmp
dec
movs
jnp
mov
xchg
jbe
jne
les
mov
lock
jno
cmp
arpl
imul
fwait
mov
add
outs
nop
jae
mov
ins
push
pop
cmp
cs
outs
fsubr
cmp
gs
mov
mov
rcr
cmp
sti
arpl
xchg
in
jp
sub
xchg
sti
sbb
sbb
jne
and
push
bound
dec
xor
jb
inc
fnsave
dec
jo
int3
rcr
or
and
test
sbb
jbe
add
test
or
push
and
ret
cmp
jmp
xchg
scas
lock
ja
repnz
cwde
repnz
sub
mov
jmp
xor
cmp
mov
pcmpeqb
ret
xchg
ss
or
and
ret
or
add
pop
mov
jp
and
lods
sbb
stos
ja
sub
fsubr
and
js
ins
bnd
pop
mov
das
(bad)
fstp
xor
inc
pop
xchg
fcomip
adc
xchg
(bad)
pusha
repnz
stc
stos
sbb
je
imul
and
cld
add
stos
outs
mov
mov
sbb
pushf
pop
lock
vcvttsd2si
(bad)
jnp
hlt
push
(bad)
cmp
(bad)
xchg
fld
push
xchg
pop
jnp
jle
fsubr
cli
out
scas
outs
pop
les
add
sub
mov
jno
out
lea
pop
inc
cmp
jg
and
retf
cmp
push
cmp
in
push
pop
(bad)
les
jle
push
mov
ja
and
adc
out
push
cmp
clc
int
push
mov
sub
push
ss
movs
dec
mov
cdq
enter
inc
aas
cmp
mov
inc
fcmovu
fidivr
push
mov
add
jmp
nop
out
mov
retf
mov
not
fild
test
fcomp
jle
in
mov
xor
or
out
in
repz
inc
enter
jbe
sub
sub
jp
sub
rcr
push
dec
and
cld
clc
jge
mov
imul
adc
mov
pushf
push
lds
loopne
inc
push
adc
mov
xchg
(bad)
bt
jns
lds
(bad)
out
adc
mov
pop
cmps
arpl
in
jne
fisttp
dec
cmp
pop
inc
push
xor
pop
and
sub
inc
fist
sahf
xchg
fstp
inc
(bad)
xor
mov
inc
iret
add
xchg
mov
imul
or
dec
lahf
jmp
xor
dec
jge
mov
or
fdivr
dec
and
daa
mov
cmp
xor
and
shl
mov
js
sbb
in
and
test
pop
add
cmp
aam
stos
pop
push
ds
jg
leave
nop
pop
push
fisttp
or
cmp
or
fild
cmp
test
or
pop
and
sub
aaa
leave
jp
in
mov
cmp
adc
jle
push
(bad)
stos
xlat
adc
imul
cld
cmp
adc
ret
ins
jae
iret
cmc
fadd
iret
jle
fninit
js
dec
and
and
in
(bad)
fmul
adc
xchg
adc
cmp
adc
fimul
int3
pop
push
push
lahf
int
fwait
mov
fdecstp
mov
ret
ret
loope
cmp
pop
mov
jmp
dec
push
inc
mov
ins
ror
(bad)
mov
mov
das
in
mov
(bad)
je
gs
mov
dec
adc
out
xchg
scas
enter
ret
out
adc
out
jne
push
or
ins
push
mov
xabort
mov
push
loop
bound
into
or
xchg
xor
es
pop
ja
sub
and
and
push
imul
outs
sbb
js
aad
loopne
push
cmps
int3
cmp
xor
imul
dec
xchg
imul
push
xlat
stc
or
jb
sbb
mov
retf
fdivr
mov
push
jecxz
popa
shl
xchg
imul
(bad)
mov
and
out
test
aaa
and
sbb
inc
outs
idiv
clc
(bad)
fidiv
in
in
and
ins
pop
xchg
pop
jmp
lea
lock
push
pop
xor
call
jb
test
pop
mov
sbb
mov
sub
jg
idiv
pop
aad
lods
cmps
or
sti
scas
mov
daa
sbb
xchg
lahf
xor
cmp
pop
pop
mov
ror
xchg
sbb
push
into
pop
popf
xor
call
jno
jno
push
xor
in
add
sahf
sub
aaa
pop
or
test
inc
mov
dec
sbb
or
inc
or
sbb
jmp
inc
adc
mov
pop
std
mov
inc
int3
std
daa
aas
rol
sahf
xchg
lahf
dec
sub
fisttp
or
dec
cmp
inc
and
sub
pop
sbb
outs
retf
dec
jmp
sub
or
scas
jecxz
sub
test
fst
cmp
aaa
fild
inc
aaa
xchg
or
stos
mov
test
gs
mov
out
add
mov
mov
data16
inc
ins
inc
inc
out
leave
xchg
ja
adc
or
fldcw
mov
adc
ins
add
outs
inc
mov
add
adc
jb
add
sub
lods
mov
mov
loop
mov
push
mov
cmp
movs
mov
sti
ds
sub
and
mov
pop
out
push
gs
pop
pop
push
nop
jl
inc
leave
sahf
addr16
jle
mov
mov
mov
shl
sub
fld
inc
pop
cmp
jmp
mov
add
mov
mov
out
lahf
fdiv
ins
jecxz
imul
dec
jo
inc
jmp
jp
mov
pop
or
in
jge
mov
call
leave
jle
jecxz
xchg
mov
out
fcom
fiadd
and
cmp
out
mov
jns
int
out
mov
adc
ins
rol
dec
mov
mov
or
and
mov
push
xor
or
mov
das
scas
xor
mov
inc
push
dec
and
pop
and
sbb
push
popa
movs
or
(bad)
sbb
jg
mov
and
xchg
xlat
push
xchg
adc
jl
sub
inc
fwait
mov
fcomp
popf
lods
repz
xchg
xchg
or
test
dec
fistp
ss
mov
dec
mov
iret
sub
cmp
or
jge
int3
fsubr
imul
test
arpl
test
inc
daa
ficom
mov
dec
(bad)
and
cdq
cmps
push
jno
push
xchg
movs
cld
loopne
adc
adc
ds
mov
inc
mov
and
rcr
or
ss
bound
dec
add
sahf
retf
ja
sbb
aaa
in
shr
sub
stos
xchg
aaa
dec
sbb
scas
and
push
sbb
mov
pop
test
gs
mov
in
dec
ds
inc
pop
fsubr
jb
inc
mov
or
mov
inc
adc
shl
mov
ror
fwait
lods
mov
xchg
jmp
int
cld
mov
mov
push
inc
jge
outs
fist
bswap
push
ss
jns
clc
repz
or
or
jne
sbb
call
inc
and
loopne
daa
stos
xchg
outs
(bad)
popf
pusha
fld
xlat
addr16
adc
lods
mov
mov
and
push
mov
in
pop
(bad)
mov
cs
imul
ins
data16
mov
stc
push
call
fdivr
cmps
cli
(bad)
cmc
xchg
lods
repz
fisubr
add
inc
in
test
in
dec
pop
inc
lahf
adc
stos
jmp
ror
test
mov
dec
loop
lea
mov
aaa
jns
inc
push
dec
ds
mov
mov
pop
out
jo
int
test
mov
mov
xchg
out
xchg
in
clc
pop
fidivr
sbb
bound
mov
inc
fnsave
repz
push
sbb
mov
ja
adc
pop
stos
clc
out
or
xor
xchg
imul
retf
xor
mov
dec
adc
sub
mov
xchg
and
popa
mov
mov
in
jecxz
xor
mov
xor
jb
imul
add
and
stos
cmp
rcr
gs
xor
lds
and
arpl
mov
fimul
dec
adc
push
mov
gs
mov
fldenv
mov
dec
out
test
push
daa
and
das
in
loopne
sbb
jmp
repz
std
scas
or
cmps
cmp
xor
xchg
scas
ins
popf
add
popw
cmp
rcr
jb
xchg
xor
dec
xor
inc
cdq
fcomi
xchg
ret
lea
loopne
lds
fidiv
test
(bad)
popa
xor
xor
sbb
icebp
in
repnz
jge
mov
sub
lock
loope
int
dec
cwde
lock
scas
push
add
mov
loop
jno
sub
outs
jge
sbb
or
sub
or
push
jmp
add
dec
mov
dec
mov
ins
adc
mov
test
das
and
inc
lods
cmc
sub
pop
cld
pop
gs
popf
jecxz
cmp
jb
int3
pop
cmovbe
mov
sub
cmps
movs
cld
sar
mul
test
sub
xchg
pop
outs
xchg
or
loop
aas
mov
pop
fucom
test
mov
mov
pop
std
mov
clc
adc
arpl
fisubr
and
ja
inc
test
jae
ja
xor
sbb
sbb
std
sbb
dec
out
mov
fwait
jae
push
cmp
mov
test
sti
pop
sbb
sub
sti
hlt
pushf
popa
stos
jo
pop
dec
mov
test
out
xor
jbe
sub
mov
lods
out
leave
out
test
pop
push
mov
les
xchg
cmp
inc
in
pop
fcom
(bad)
loopne
sub
mov
cmp
in
in
mov
cmp
fucom
shl
xor
loop
cmp
push
mov
jns
inc
xlat
cmps
dec
xor
push
and
sar
fldcw
mov
add
sub
adc
sub
arpl
jno
shl
mov
sub
or
jne
pop
stos
xlat
xchg
mov
sub
ins
fcmovnbe
sub
retf
mov
inc
add
imul
aad
jo
out
popa
iret
jle
mov
rol
cld
outs
sbb
fcmovnbe
test
xor
mov
pop
push
rol
(bad)
int
ins
stos
int3
nop
pop
fwait
inc
hlt
cmp
iret
sbb
hlt
or
(bad)
or
xor
daa
sbb
pop
pop
scas
push
je
rcpps
pop
sub
add
jle
inc
mov
addr16
fild
enter
test
mov
push
or
cdq
cmp
or
cli
push
inc
addr16
lahf
or
aaa
push
fidivr
in
push
pop
xor
outs
push
jg
mov
mov
xlat
jb
repz
js
mov
mov
mov
xor
pop
(bad)
aad
clc
sbb
call
sti
sar
jb
retf
inc
push
enter
jbe
dec
mov
aas
dec
dec
jne
(bad)
xchg
sbb
mov
(bad)
(bad)
aas
leave
fdiv
stc
bound
in
mov
je
dec
xor
gs
dec
ret
add
retf
mov
mov
gs
cdq
jmp
arpl
nop
retf
ret
out
fld
aas
jp
aaa
aad
and
mov
or
addr16
xchg
mov
jl
push
(bad)
aad
addr16
ds
aam
iret
mov
ins
mov
dec
jmp
lods
ret
cmp
and
cmp
fsubp
inc
sub
fist
fucom
adc
jecxz
add
xor
cmp
pop
sbb
mov
fistp
jno
push
pop
xor
mov
and
adc
xchg
test
into
pop
sub
or
jne
mov
sahf
scas
push
jb
je
shr
neg
imul
pop
out
xor
sub
lds
cli
xor
rol
pop
pop
out
or
and
and
inc
adc
hlt
cs
(bad)
cmps
clc
push
cmps
shr
pop
in
test
or
mov
dec
xchg
fidiv
in
mov
retf
pop
sub
ins
daa
fwait
popa
jp
adc
ss
xor
movs
adc
leave
push
pop
and
fstp
dec
jo
mov
je
adc
fs
inc
push
loope
lds
dec
test
jecxz
dec
cmp
jl
daa
out
mov
mov
push
xchg
(bad)
aas
sub
xchg
out
mov
or
pop
cmp
stos
add
inc
fdivp
fnsave
mov
shl
ins
leave
sahf
mov
data16
fsubr
into
inc
mov
fstp
not
push
dec
or
mov
xchg
pop
fnstsw
push
imul
shr
hlt
mov
xchg
bound
mov
xor
fld
add
mov
or
rcr
movs
xchg
cmp
call
nop
cmp
shr
and
gs
hlt
popf
test
mov
dec
jo
xor
pop
(bad)
mov
mov
ffreep
adc
add
pop
xchg
mov
xchg
test
mov
arpl
sub
sbb
mov
int
mov
lds
inc
test
mov
sub
mov
push
stos
cmps
pusha
cmp
loop
aad
ins
xchg
or
and
out
pusha
ret
push
and
(bad)
imul
call
mov
or
call
dec
or
cli
test
popf
idiv
cli
mov
cmp
xchg
call
jl
and
cmp
sbb
fisttp
inc
cmps
int3
pop
add
sti
test
mov
ins
stos
lahf
sbb
dec
loop
jne
pop
sub
mov
(bad)
shl
push
dec
inc
mov
or
xchg
stos
cdq
std
bnd
jp
test
jle
pop
ret
loopne
ss
nop
movs
add
sub
or
imul
jbe
rcr
sub
inc
cmp
mov
sub
scas
test
mov
leave
mov
iret
push
adc
inc
(bad)
div
iret
xchg
nop
push
mov
enter
mov
mov
iret
mov
fmulp
icebp
(bad)
outs
or
(bad)
push
adc
(bad)
pop
xor
addr16
jecxz
xchg
push
pop
inc
inc
or
dec
pop
add
and
cmp
xlat
(bad)
and
ret
sbb
add
sahf
push
in
dec
ror
aas
jno
test
daa
cmps
add
adc
pop
call
xor
mov
adc
or
xor
repnz
pop
(bad)
test
jmp
push
mov
or
xor
pop
or
add
call
add
fdivr
cwde
inc
ret
ins
xchg
out
nop
jl
xchg
inc
popf
scas
mov
(bad)
cmp
mov
push
fmulp
cdq
sub
jne
sbb
lock
mov
jnp
xchg
call
mov
dec
xchg
popa
loope
or
xchg
jmp
adc
call
jle
add
aam
loopne
shr
and
(bad)
aas
mov
sub
retf
jp
sar
add
xor
jmp
in
cmc
aaa
(bad)
xchg
movs
mov
xchg
cs
add
mov
test
ret
sbb
fiadd
fsubr
xor
mov
pushf
dec
aaa
adc
test
shl
mov
or
sub
pop
pop
movs
add
inc
ds
mov
adc
pop
retf
cmp
(bad)
pusha
fcom
dec
out
scas
sti
or
or
ins
lods
add
and
mov
jns
sub
inc
push
popf
retf
popf
shl
and
adc
lahf
int
loopne
sbb
mov
cmps
in
cld
xchg
call
stos
movs
push
ins
mov
(bad)
sti
in
sbb
and
or
push
push
out
sbb
xchg
call
or
push
push
stc
(bad)
repz
lea
mov
push
pop
enter
ffree
and
in
das
xor
in
push
ror
push
push
fcomp
mov
jnp
pop
or
mov
or
les
jl
fistp
pop
add
cmps
out
cmp
ins
jmp
iret
xchg
(bad)
(bad)
rcr
fst
jnp
jbe
(bad)
ds
stos
or
iret
push
mov
jmp
nop
es
jmp
rcr
fwait
mov
sbb
mov
mov
xor
fmul
add
(bad)
or
xor
cmp
inc
popa
(bad)
in
pop
fwait
repz
movs
(bad)
pop
aam
xor
(bad)
aam
dec
push
out
cmp
jg
cmp
fdiv
add
inc
or
loope
add
jp
or
es
xor
cdq
push
pop
xlat
xor
xor
mov
jb
aas
sub
add
leave
sahf
cmc
mov
js
mov
scas
pop
jno
jmp
jne
enter
(bad)
pop
jns
push
movhps
xchg
mov
adc
outs
or
push
mov
shr
outs
call
pop
jno
mov
aam
inc
mov
xchg
(bad)
fisubr
f2xm1
cmp
arpl
ss
mov
lds
jo
sbb
xor
xor
pop
mov
jae
mov
aad
call
out
xchg
test
xchg
xor
shr
adc
lock
imul
sub
add
inc
je
xor
aaa
into
and
imul
or
jecxz
sub
pop
pop
jge
cdq
xchg
clc
int
jle
in
or
retf
cmps
test
inc
int
inc
push
daa
popa
sub
fucomp
inc
fcomp
or
(bad)
push
test
outs
xor
cmp
mov
cli
sub
xchg
scas
and
in
outs
scas
pop
jge
mov
repz
loopne
or
mov
dec
add
sub
jge
xlat
imul
rcr
shl
adc
out
ret
push
into
les
mov
inc
cld
fsub
cmp
lahf
push
xchg
es
(bad)
dec
sub
int3
jo
sbb
push
ror
je
push
xor
popf
fxam
pop
int
mul
aam
mov
pop
inc
out
cmp
nop
ret
fsubp
mov
sub
int3
(bad)
mov
outs
and
out
dec
add
xor
sub
ss
in
dec
retf
loope
addr16
mov
imul
cmp
jne
js
mov
repz
fwait
push
(bad)
lock
iret
ror
xor
jne
jecxz
inc
cmps
call
hlt
xchg
inc
push
dec
lea
push
iret
ret
cmp
jecxz
(bad)
xchg
mov
inc
(bad)
push
mov
cli
adc
fldl2e
xchg
fimul
add
fs
mov
inc
xchg
popf
mov
loop
or
cwde
mov
adc
enter
and
aaa
cmp
sub
inc
sub
fidiv
imul
inc
ret
aam
jnp
in
retf
mov
test
or
jp
pop
aaa
sar
pop
xchg
lods
inc
mov
not
push
repz
stc
sbb
sub
adc
out
push
adc
cs
rcr
add
jecxz
gs
mov
xchg
jmp
fimul
dec
push
mov
pop
sbb
in
outs
das
xchg
dec
jbe
jbe
popa
jp
jnp
out
xchg
adc
int3
retf
jg
ret
mov
dec
imul
lods
dec
aam
retf
mov
xor
ja
mov
data16
mov
fwait
ret
scas
js
int
jmp
dec
into
mov
sub
jne
jb
mov
xchg
aaa
add
mov
aad
mov
bound
mov
hlt
push
pop
mov
imul
sbb
dec
push
mov
sub
nop
or
in
mov
scas
pop
aas
int3
jmp
rcr
icebp
jle
ds
pop
adc
fwait
movs
fucom
dec
jmp
arpl
sub
stos
mov
enter
lea
rol
movs
mov
or
es
(bad)
retf
xor
int3
lods
lds
(bad)
jmp
push
push
scas
inc
je
shl
test
int3
inc
pop
push
mov
sbb
xchg
mov
arpl
push
jnp
dec
mov
mov
je
mov
and
fnstsw
daa
jg
int3
pop
(bad)
mov
mov
sbb
pop
test
sbb
jae
add
test
bound
mov
ss
or
sbb
sbb
mov
loopne
out
ficomp
mov
scas
and
or
xor
xchg
add
push
fisttp
cli
stos
jg
xchg
pop
xor
daa
cmp
jmp
loop
sub
jb
inc
jnp
out
das
ins
aad
les
cmp
inc
jo
repz
jecxz
test
in
mov
retf
mov
imul
or
stc
push
dec
repnz
cmp
movs
lods
xor
dec
cmps
ret
test
xor
or
sub
mov
mov
das
mov
cli
(bad)
in
rcl
movs
pusha
push
sbb
mov
mov
push
test
push
or
in
inc
jle
lods
push
dec
dec
cld
out
inc
push
fdivr
fcom
cs
aaa
dec
and
add
out
pop
out
cli
out
adc
rcl
jge
inc
mov
pushf
xchg
or
or
pop
jl
loopne
push
push
clc
pop
push
stc
xchg
loop
adc
loopne
push
adc
mov
jmp
push
inc
daa
xor
and
add
jne
push
sub
stc
mov
and
lock
lea
inc
jge
sahf
xchg
adc
pop
adc
(bad)
xlat
mov
repz
mov
mov
and
shl
fist
sbb
dec
arpl
jno
mov
push
xchg
es
push
shl
inc
mov
sbb
popf
or
jmp
pop
cwde
cmc
(bad)
mov
call
sub
inc
ficomp
inc
cmc
cmps
(bad)
adc
sub
addr16
mov
imul
inc
clc
(bad)
mov
sbb
lods
xchg
cmp
div
dec
dec
and
inc
and
cmp
mov
mov
or
retf
sbb
cmc
mov
xchg
add
pop
jge
(bad)
mov
cmps
cmc
mov
cpuid
mov
push
and
lock
dec
ja
and
(bad)
adc
fistp
nop
lahf
adc
test
iret
mov
sbb
aam
fiadd
cmp
push
jbe
int
iret
shl
loopne
mov
out
movs
push
sub
pop
xchg
je
sti
aad
push
cmp
lock
movs
push
jne
push
jle
cdq
dec
cmp
ret
ror
and
push
inc
sbb
fisttp
cmps
pop
scas
dec
rol
jmp
mov
xchg
pop
retf
add
mov
dec
jmp
xchg
js
add
sbb
xchg
mov
(bad)
mov
mov
xchg
add
retf
(bad)
jmp
scas
iret
js
retf
popf
cmc
ret
jno
leave
rcr
es
mov
sar
push
mov
gs
or
adc
(bad)
loope
test
(bad)
mov
dec
ret
mov
fild
add
pop
mov
and
(bad)
cmp
fmul
test
xchg
scas
repnz
sbb
and
jne
test
cmp
aam
fild
jno
sbb
int3
int
dec
loopne
and
sar
sbb
mov
jbe
(bad)
fld
xchg
loop
xor
pop
in
cdq
lahf
lahf
ins
push
add
stos
ret
in
lods
out
shl
xchg
mov
lds
pop
ja
mov
stos
adc
mov
sbb
inc
into
leave
mov
das
inc
xor
leave
or
jne
mov
(bad)
xor
mov
mov
mov
popa
xchg
(bad)
in
inc
fcmovnb
adc
popa
ja
push
fisttp
or
cmps
repz
dec
xchg
jbe
mov
sbb
and
or
ja
shr
out
xor
dec
clc
lods
mov
rcl
jb
sti
das
test
inc
or
or
jnp
mov
and
aam
outs
push
pop
push
jns
xor
sub
jmp
cs
enter
dec
dec
add
sub
or
sti
pop
jb
retw
fs
dec
sbb
fisub
push
push
rcr
dec
popa
js
rol
mov
pop
jnp
sbb
hlt
pusha
aam
aam
jmp
ins
pop
cmp
pop
movs
bound
and
push
adc
loop
retf
lahf
imul
aaa
pop
data16
fiadd
mov
outs
add
pop
pop
jb
out
xor
xchg
cdq
push
mov
sbb
movs
sbb
cmp
mov
dec
sub
jne
xchg
mov
dec
and
pop
mov
jmp
jp
stos
jno
or
mov
mov
stc
loopne
ds
ror
fistp
imul
ret
ds
mov
mov
iret
test
sub
inc
inc
sub
test
sbb
adc
xchg
loopne
sub
xlat
cmps
gs
jmp
jg
enter
push
fisub
mov
(bad)
push
call
cmps
fnstcw
push
cmp
xchg
add
scas
stos
cs
pusha
retf
push
mov
add
jmp
shl
clc
xchg
scas
mov
mov
pop
retf
sar
fldenv
inc
xor
vcvtsd2ss
loopne
adc
push
mov
loope
sti
shl
imul
jge
jb
in
jge
jmp
retf
imul
mov
inc
mov
xchg
cs
pop
push
sub
pop
mov
dec
popa
stc
mov
push
out
push
(bad)
fild
mov
cs
push
popf
mov
mov
sbb
sub
sbb
(bad)
and
xor
fld
mov
hlt
movs
in
mov
adc
xor
ret
test
sti
dec
nop
fsubr
shr
in
inc
push
jne
add
stos
jne
or
and
fucomp
and
stos
mov
mov
gs
fistp
(bad)
xchg
clc
int3
inc
shl
movs
ret
ins
lods
cmp
and
bnd
cmp
fsincos
push
fild
xor
shl
pop
call
adc
(bad)
lods
jo
mov
adc
sbb
aas
mov
test
ret
enter
ret
cmp
test
inc
int3
inc
sub
sub
lea
cmps
scas
in
sbb
int
push
xor
xchg
push
xchg
add
push
jmp
into
dec
rcl
cdq
mov
ja
mov
std
sub
ss
iret
(bad)
sub
stos
or
(bad)
push
pop
push
stos
arpl
nop
push
mov
cli
das
shl
mov
cmp
arpl
sub
lods
shl
push
xor
lds
xchg
mov
fwait
or
mov
out
or
adc
xchg
xchg
mov
ror
cmps
iret
ja
nop
inc
aaa
(bad)
sub
or
sbb
sbb
or
and
xchg
es
ins
pop
shr
adc
lods
pop
sub
mov
call
xlat
in
lock
shl
pop
and
mov
jp
dec
mov
ret
das
xor
adc
push
enter
pop
retf
lds
mov
sub
imul
call
jl
xor
and
mov
stos
ins
cmp
sti
loopne
data16
push
(bad)
mov
push
cmp
mov
imul
fdivr
push
mov
and
cmp
pop
cmc
jno
hlt
or
fldlg2
(bad)
mov
not
stc
add
shr
ss
or
pop
cld
xchg
xor
hlt
fadd
dec
inc
jecxz
cmovb
push
jl
or
or
push
jg
shr
inc
cmp
loopne
push
ret
fnstcw
mov
sti
(bad)
icebp
mov
(bad)
dec
inc
call
or
fcom
(bad)
push
dec
push
mov
dec
cmp
scas
pop
mov
movs
pushf
fdiv
movs
mov
call
fcom
out
retf
mov
push
pop
xor
push
fmul
stos
pop
imul
push
inc
mov
xchg
loopne
das
fidivr
xchg
or
ror
add
ins
in
loop
ficomp
lea
hlt
xor
scas
pop
test
scas
jmp
sbb
push
dec
test
pop
adc
lahf
push
add
shl
adc
push
dec
sbb
out
mov
xchg
hlt
and
aad
or
jns
jle
into
repnz
cli
(bad)
outs
push
retf
add
nop
add
adc
inc
push
jno
sub
call
mov
neg
sub
sbb
mov
jge
out
mov
and
retf
cmp
(bad)
cmp
push
push
(bad)
ins
shl
repnz
mov
add
in
xor
ins
in
xor
cwde
xor
push
and
pop
mov
dec
jns
out
scas
mov
xchg
fs
(bad)
xchg
mov
cs
and
popf
sbb
mov
adc
pop
inc
push
push
lea
fimul
pop
dec
loopne
pop
fdiv
jmp
or
xchg
jp
adc
lahf
jmp
pop
fldcw
mov
xor
es
push
hlt
push
in
pop
xlat
xor
cmp
sbb
js
xchg
lahf
scas
or
and
ret
xor
pop
shl
cmp
mov
push
mov
xchg
dec
mov
call
mov
pop
ret
xchg
add
retf
pop
push
xchg
popf
mov
loopne
push
xchg
ss
sub
mov
sbb
es
stos
push
push
mov
lahf
shl
add
jmp
push
or
adc
xchg
xor
dec
and
push
jle
repz
stos
xchg
fcom
pop
or
idiv
mov
add
pop
xchg
cmp
(bad)
cs
xchg
jp
jb
add
mov
pusha
xor
xor
jnp
sbb
sub
sub
sbb
mov
jl
popa
scas
into
test
push
not
les
cmp
mov
ret
xlat
enter
jg
inc
sbb
ss
cmp
mov
cld
scas
jmp
lods
inc
xchg
les
nop
hlt
add
and
(bad)
xlat
call
in
add
ror
out
xchg
aad
movs
xchg
push
and
sbb
dec
adc
idiv
xchg
jl
jge
cdq
scas
in
in
into
shl
pop
jo
sub
cmp
in
icebp
push
add
mov
adc
sbb
movs
call
sub
inc
rol
fidivr
mov
adc
jno
(bad)
hlt
aad
ret
xchg
add
sahf
out
push
outs
inc
movs
clc
jne
jno
adc
sbb
sbb
and
cli
bound
mov
in
inc
adc
retf
fidivr
sar
fiadd
ins
mov
ds
sbb
sub
rcl
lods
std
inc
push
push
or
shl
jg
rcr
dec
ins
inc
pop
lahf
lea
or
in
std
mov
add
(bad)
in
(bad)
cmps
stos
sbb
dec
mov
push
jnp
jo
mov
and
push
xchg
adc
pop
popf
test
cmp
xor
cmp
add
jp
xor
xor
pop
mov
call
and
pop
test
jp
inc
push
jle
fldenv
add
mov
loopne
fcmovne
sahf
xor
pop
xchg
dec
cmp
cmps
pop
add
pop
add
adc
pop
idiv
mov
stos
jmp
sub
xchg
jo
and
adc
xor
jmp
fisttp
out
test
sti
out
fild
ret
fdiv
xor
out
test
aaa
jno
mov
xchg
shr
and
jmp
fs
sbb
stc
sub
popa
pop
jno
jmp
jnp
pop
inc
pushf
jns
in
mov
push
dec
xor
and
addr16
mov
or
and
adc
sahf
arpl
movs
inc
or
dec
cmc
push
nop
dec
dec
fisubr
movs
sub
and
or
test
push
call
fisubr
leave
or
mov
ja
popw
inc
xchg
sub
dec
scas
mov
or
hlt
adc
adc
fst
sbb
cli
xchg
scas
out
dec
aad
or
inc
or
jp
pop
xor
iret
cmp
test
sub
ins
inc
call
ret
shl
in
test
inc
dec
test
mov
jge
repz
gs
jl
rol
ror
int
cmps
into
or
popa
and
fwait
xor
std
push
pop
mov
nop
push
dec
frstor
or
ret
pop
pop
sub
pop
loopne
cs
(bad)
ret
movs
or
nop
pop
mov
mov
and
cmp
cmp
mov
mov
or
sub
mov
ret
out
push
cli
out
xlat
push
sbb
sbb
mov
sub
rcr
inc
mov
scas
xchg
and
add
pop
xchg
daa
int3
inc
mov
int3
or
pop
sahf
je
repnz
enter
xchg
pushf
loop
mov
jl
push
pop
dec
push
pop
leave
mov
sub
and
out
(bad)
es
dec
xor
cmp
jbe
pop
jb
sub
dec
js
cmp
and
ds
cmp
pop
jno
push
mov
fdiv
inc
sbb
in
push
push
xchg
adc
(bad)
imul
jge
inc
or
cmp
lock
dec
jecxz
pushf
jae
lea
adc
dec
mov
cdq
dec
dec
cmp
or
mov
fnop
bound
std
not
outs
in
das
in
xor
popa
push
out
or
add
or
hlt
bound
or
and
mov
mov
mov
jl
repnz
jle
dec
dec
mov
jo
xchg
mov
dec
adc
mov
in
cwde
int
jnp
sub
mov
jecxz
mov
scas
sub
jb
cmp
(bad)
outs
fadd
outs
add
dec
dec
mov
daa
ins
sub
(bad)
push
mov
movs
sub
mov
(bad)
pop
adc
scas
daa
lds
les
fstp
loope
inc
or
or
jmp
loopne
outs
call
(bad)
out
add
dec
sbb
repz
ret
fld
outs
jecxz
clc
(bad)
mov
mov
push
popf
test
sbb
fnstcw
cmp
mov
or
in
rol
push
std
and
mov
ss
inc
pop
cs
jno
imul
xor
adc
jbe
xchg
push
into
iret
xor
mov
mov
leave
and
int3
or
shr
mov
sbb
mov
out
sub
jns
ret
push
jecxz
add
mul
push
pop
mov
sub
(bad)
add
and
add
or
lods
dec
push
icebp
pop
mov
mov
mov
cdq
pop
and
sar
fxch
xchg
xor
sar
inc
ret
push
and
add
(bad)
outs
mov
xlat
cmp
pop
test
nop
push
xlat
aas
pop
dec
jo
sbb
fdiv
fsub
int3
xchg
test
pop
js
mov
mov
shl
xor
push
push
add
mov
inc
adc
dec
sbb
or
jne
popa
(bad)
xor
inc
ja
scas
mov
retf
jmp
or
test
dec
push
repnz
or
(bad)
xchg
in
push
xor
jge
popa
hlt
daa
rcr
fwait
repnz
adc
mov
mov
mov
cmps
dec
test
pop
fs
imul
push
sbb
sbb
or
mov
fwait
and
mov
inc
imul
push
dec
fcmovbe
inc
fwait
add
fprem
cld
xchg
pop
push
jae
and
aas
xchg
xchg
outs
fwait
shr
jg
fadd
stos
mov
cmps
nop
or
mov
(bad)
aad
xchg
xchg
scas
lea
adc
cmp
mov
and
es
ss
clc
(bad)
je
xchg
loop
dec
stc
(bad)
sbb
(bad)
mov
into
(bad)
imul
xchg
xor
push
fdivr
lock
(bad)
fisttp
out
sahf
cmp
scas
imul
arpl
xchg
ret
lods
adc
and
pop
aaa
shl
adc
mov
or
mov
jge
pop
add
mov
sbb
in
mov
cli
sub
shr
push
sbb
xor
call
enter
mov
arpl
cmp
or
movs
idiv
inc
sub
sub
inc
jmp
add
movs
dec
and
pop
shl
cmps
in
jno
cdq
jecxz
leave
mov
(bad)
into
daa
adc
scas
xor
outs
in
out
dec
rcl
pop
mov
mov
push
mov
aas
sub
pop
push
jbe
add
pop
loop
sub
sub
push
gs
and
inc
(bad)
adc
inc
shl
retf
sbb
leave
mov
test
sbb
imul
and
call
push
cmps
test
push
sub
or
clc
add
rol
daa
jmp
mov
sub
or
dec
(bad)
out
xchg
push
mov
scas
jns
sbb
sahf
jne
mov
inc
jmp
cdq
cmc
push
mov
dec
xchg
clc
push
dec
xchg
pop
dec
lahf
sbb
(bad)
jp
in
adc
xor
cmp
mov
mov
inc
and
add
out
jp
or
mov
mov
mov
jmp
in
dec
cmp
dec
loope
std
lea
dec
push
(bad)
call
cmps
popf
repnz
loop
pop
jl
and
xchg
scas
loope
sub
lds
lea
sub
mov
add
mov
inc
test
iret
push
push
es
mov
add
inc
sub
mov
mov
sti
lods
add
inc
les
pop
xor
and
mov
daa
out
jmp
test
sub
cmp
fsub
imul
iret
sahf
pop
cpuid
aad
fcmovnbe
repnz
(bad)
int
push
jo
xchg
jbe
fld
cs
icebp
popf
pop
and
cmp
push
shr
cmps
and
mov
neg
and
jne
outs
mov
add
push
sbb
cmp
adc
sbb
cmp
lahf
jns
adc
sbb
jp
cmp
xor
xchg
(bad)
adc
mov
sbb
in
or
(bad)
cmp
push
and
push
imul
dec
add
and
mov
pop
fs
call
dec
shr
out
out
adc
loop
inc
mov
out
sub
test
js
pop
test
push
or
mov
mov
xchg
das
mov
int
repz
push
lods
fild
fidiv
pop
adc
or
outs
dec
retf
scas
mov
sub
(bad)
mov
pop
lsl
cmps
or
hlt
outs
(bad)
add
add
pop
out
fwait
cmp
ficom
or
(bad)
jns
mov
(bad)
mov
jge
or
push
inc
fsubr
int3
jg
xor
test
sysexit
(bad)
imul
repnz
shl
xchg
pop
hlt
test
icebp
cmps
inc
xor
add
dec
and
retf
and
sub
xor
repnz
icebp
add
pop
mov
cmps
lods
sub
rol
jge
retf
pop
jg
inc
je
ja
mov
rcl
xchg
pop
pop
jnp
repz
sbb
sub
mov
fwait
loop
xchg
xor
dec
stos
jmp
ret
cmp
pand
aad
call
jge
mov
or
jnp
sub
inc
and
push
(bad)
cmp
dec
push
pop
lock
es
fiadd
cwde
sub
inc
add
jns
pop
jmp
mov
(bad)
popa
dec
stc
add
xor
dec
dec
movs
fild
cwde
or
sbb
or
sti
lea
fdiv
fs
mov
sbb
inc
xchg
dec
scas
dec
pop
das
out
sbb
adc
and
bound
inc
lods
in
adc
lds
mov
test
lahf
and
inc
out
lahf
push
dec
test
and
inc
out
xchg
icebp
and
sub
add
in
or
and
movs
adc
sub
mov
jmp
dec
push
shl
push
popf
cli
adc
inc
xor
ss
pusha
ror
add
loopne
std
cmp
cld
inc
fs
xchg
call
add
push
es
inc
mov
push
aad
adc
and
mov
sbb
into
pop
or
pop
add
sar
inc
xchg
punpcklbw
and
jmp
xor
(bad)
call
test
and
jb
jno
cmp
or
cmp
sub
mov
pop
xchg
(bad)
pushf
mov
xor
and
rcl
not
adc
fwait
mov
cmp
or
mov
jae
aaa
cs
shr
mov
xchg
pop
add
mov
shr
ret
rol
mov
push
dec
dec
jecxz
cmp
outs
lods
retf
sub
jns
or
add
lahf
push
ins
jp
cmp
mov
in
and
jmp
inc
xchg
xchg
cmp
mov
cli
int3
clc
shr
lods
nop
test
shl
test
ins
xor
jae
movs
icebp
pushf
mov
inc
xchg
call
mov
call
jl
xchg
loop
dec
aam
aas
adc
imul
and
ins
rol
dec
(bad)
inc
pop
in
popa
ds
cmp
repz
xor
jg
push
sbb
sub
sbb
scas
stos
lds
test
xacquire
leave
retf
jge
and
in
jbe
pop
xor
cdq
rol
xchg
jb
jecxz
cmps
retf
cmps
lods
sub
jnp
sahf
inc
mov
mov
sub
xlat
or
inc
add
(bad)
fdivr
xor
mov
push
add
das
pop
inc
in
or
clc
(bad)
fld
lea
mov
adc
movs
adc
outs
(bad)
pop
pushf
fild
cmp
ins
adc
sbb
and
or
sbb
mov
ror
(bad)
pop
mov
pop
dec
pop
pop
rol
repz
das
push
xchg
aaa
or
jns
es
push
add
and
mov
lock
fucomp
ss
or
dec
addr16
inc
clc
jmp
lods
inc
retf
xor
ds
mov
ss
pop
test
sbb
mov
in
inc
ins
imul
jle
push
sahf
jo
jp
and
jnp
movs
hlt
sbb
pop
in
adc
push
sti
and
adc
add
fbstp
lods
mov
retf
cwde
xchg
leave
sub
adc
sbb
inc
mov
inc
xor
cmp
inc
mov
xor
mov
dec
popa
call
xor
push
lea
jmp
imul
sbb
outs
popf
fstp
mov
repz
mov
jl
push
cmp
cli
sbb
rcl
jo
fsub
xchg
retf
jl
stos
aas
rcl
jge
jle
movs
mov
fdivr
rcl
sar
mov
push
fldenv
call
push
out
das
js
xchg
popa
scas
add
xchg
repz
lahf
or
lea
jge
inc
fld
xor
shr
sbb
jecxz
loopne
mov
ins
nop
xchg
scas
mov
jge
push
jmp
shr
scas
lock
push
cli
mov
and
mov
inc
scas
les
aam
mov
push
repz
mov
mov
or
lock
stc
inc
outs
jmp
push
or
sti
inc
mov
cmp
inc
fbstp
pop
or
dec
sti
lods
icebp
or
(bad)
fiadd
xlat
lds
outs
pop
mov
xchg
mov
ins
aas
js
mov
sub
clc
jecxz
adc
es
jbe
daa
jl
xchg
in
ins
add
sahf
daa
cld
pop
xor
or
in
repz
mov
xor
pop
cmps
cmp
xor
leave
xchg
sub
inc
and
stc
fsubr
mov
xrelease
pop
mov
jne
pop
mov
fnstsw
mov
xchg
adc
mov
jle
dec
sub
jae
xchg
mov
jbe
adc
add
push
call
(bad)
xsha1
cmps
or
movs
ja
imul
sub
push
mov
aaa
jmp
popa
push
cmps
sti
sub
lock
out
leave
mov
sub
aas
push
mov
jnp
cli
aas
and
mov
idiv
push
jno
into
fistp
sub
stos
nop
adc
pop
jge
inc
movs
push
call
ins
dec
sbb
(bad)
sub
ror
cli
popa
sbb
jmp
xchg
mul
ret
rcl
adc
out
stc
data16
jo
int3
jae
and
dec
push
mov
loope
mov
ds
sbb
mov
pop
ins
or
push
push
enter
dec
push
and
or
push
sbb
retf
xchg
xchg
inc
adc
ficom
std
or
int
sub
or
sub
xchg
retf
test
shl
pop
loop
jp
mov
loop
sbb
(bad)
sahf
leave
icebp
dec
cmp
je
add
movs
ror
cld
and
stos
xchg
adc
or
pop
ins
adc
mov
and
in
(bad)
(bad)
pop
outs
retf
aad
int
call
js
cmp
mov
pop
lahf
addr16
nop
std
sbb
xchg
stos
in
aam
push
mov
push
dec
push
mov
inc
adc
cmp
and
shl
das
and
jmp
fist
imul
push
out
jmp
dec
dec
adc
test
cmp
loop
or
repnz
xor
inc
outs
push
jnp
xor
fsub
shl
neg
dec
jo
out
sub
daa
fiadd
aam
stos
lock
sub
sub
(bad)
cmp
mov
enter
jge
clc
loop
fisttp
add
loopne
pop
jp
daa
cmc
aad
out
cmp
push
sub
inc
mov
xchg
xor
mov
and
loop
push
out
retf
and
int3
pop
dec
rcl
ficom
xor
jle
call
data16
mov
sub
daa
cs
inc
mov
cmp
dec
push
add
leave
push
pop
fbld
jmp
stc
movs
popf
sub
xchg
jno
bound
or
ss
fisttp
xchg
and
(bad)
loope
add
lock
inc
lods
sahf
ins
imul
ret
pop
popf
fwait
jb
cmp
sub
mov
lds
add
arpl
mov
cmp
cmp
movs
dec
push
ds
sub
xchg
jbe
nop
xor
push
jg
mov
xchg
repnz
mov
cld
sub
dec
cmps
call
add
popf
fld
mov
dec
shl
shr
cmps
adc
in
jmp
enter
pop
dec
add
sbb
jnp
mov
not
(bad)
or
leave
xchg
or
pop
rcr
and
add
push
fsub
out
pop
or
pop
mov
pusha
add
xchg
cdq
mov
loope
mov
retf
js
inc
fadd
push
cmps
inc
dec
dec
xchg
mov
sbb
aas
push
sub
xor
cmp
push
or
loope
sub
mov
pop
ret
mov
xor
jle
mov
(bad)
xlat
mov
out
mov
xor
pop
xchg
and
dec
in
ror
test
cmp
mov
pop
sub
lds
pop
xor
pop
mov
mov
mov
adc
jl
sti
pop
push
dec
into
loope
pop
test
cmps
cmp
xor
jns
mov
cmp
xlat
and
inc
pop
cmps
adc
and
int3
cmp
je
call
inc
call
dec
jmp
cmp
stc
sbb
je
cmp
pop
test
pop
add
cmps
ja
pop
repnz
mov
mov
pop
das
mov
pop
or
out
mov
xchg
pop
push
inc
pop
jne
xor
(bad)
clc
cmps
jo
test
push
or
fnsave
out
jnp
movs
loop
mov
pop
pop
dec
ds
loopne
fs
pop
sti
pcmpeqd
xlat
imul
iret
cmps
and
fadd
nop
or
pop
mov
aam
daa
xor
xor
call
in
(bad)
ins
daa
cmp
popa
nop
dec
imul
adc
fstp
add
cmc
mov
jno
das
cmc
add
outs
jo
das
in
mov
mov
sbb
xchg
push
push
pop
daa
or
xchg
mov
call
hlt
ficom
jb
pop
sahf
iret
stos
imul
sbb
fsubr
aas
test
pop
imul
stos
jl
stos
xor
jb
xor
leave
rol
push
inc
test
cli
inc
lods
inc
jp
sub
mov
inc
mov
sbb
jmp
movs
xchg
dec
jl
dec
arpl
mov
ror
jmp
out
mov
jp
sub
jnp
mov
lahf
sbb
add
mov
add
fsub
sub
out
ror
sbb
out
sub
ret
gs
and
out
mov
or
jp
add
and
sub
repz
adc
push
jae
leave
xchg
mov
aad
sub
jge
scas
fcomp
rcl
add
je
pop
pop
shl
stc
fs
ror
fs
lods
fwait
pop
inc
jge
dec
cmc
or
and
push
out
and
les
pop
test
sub
dec
mov
xor
push
fadd
jae
lods
pop
imul
mov
add
into
xor
cwde
adc
je
add
inc
(bad)
pop
popa
stos
mov
fimul
mov
repnz
rcr
shl
pop
dec
dec
mov
iret
push
ss
cmp
arpl
dec
cmp
ss
pop
xor
push
jns
cmp
(bad)
adc
fwait
inc
pusha
ficom
fdivr
jae
or
psrad
jbe
xchg
cdq
fidivr
push
sbb
mov
push
aas
adc
xchg
add
jmp
mov
push
xchg
frstor
inc
sbb
rcr
pusha
neg
(bad)
or
mov
aaa
std
retf
and
call
push
ret
adc
lock
fwait
aam
iret
pop
fisubr
xchg
sub
je
mov
int
dec
xor
(bad)
call
cdq
jp
sub
cmp
pushf
int
out
(bad)
jo
cld
mov
leave
dec
out
enter
xor
xchg
hlt
pusha
das
sbb
lldt
(bad)
outs
pop
mov
nop
jmp
call
pop
sbb
dec
and
cmps
cmp
dec
bound
bound
mov
fdivr
jmp
add
cmp
in
mov
push
into
add
or
xchg
xor
mov
dec
dec
jmp
xor
dec
add
inc
popa
iret
aam
mov
lods
sahf
cdq
out
cld
jecxz
mov
popa
mov
lods
hlt
repnz
out
in
and
sub
fxch
ss
enter
sub
jmp
clc
dec
xchg
retf
mov
or
sar
mov
and
das
ins
sbb
mov
aad
sbb
shl
mov
xchg
fisub
ja
aas
les
das
xor
jno
rcr
pop
imul
test
test
mov
out
loop
push
cmc
(bad)
call
inc
idiv
jg
xchg
push
and
push
aas
mov
xor
int3
mov
push
mov
ror
ret
dec
mov
(bad)
jmp
call
sub
xchg
mov
outs
mov
int
cmps
mov
das
data16
and
js
and
(bad)
sub
dec
inc
fwait
ror
mov
sbb
sub
inc
inc
pop
aad
push
xchg
in
cmp
sbb
push
or
add
shl
enter
xor
add
movs
ds
pop
shl
loop
ja
pop
mov
sub
les
test
das
(bad)
fisubr
sub
shl
out
pusha
ret
xchg
mov
fist
add
out
pop
js
mov
push
add
movs
mov
jnp
mov
pushf
mov
rol
mov
and
jmp
add
inc
in
in
adc
sbb
cli
shr
push
gs
pop
sar
pusha
pop
jno
adc
clc
cs
out
adc
xchg
mov
xor
jg
test
fs
in
mov
fs
jo
out
fsubr
inc
inc
mov
ins
push
aas
scas
cld
xor
jl
shl
data16
mov
(bad)
cmc
inc
and
jg
inc
lahf
fsub
mov
mov
mov
repz
sar
test
jns
stos
or
(bad)
push
lock
adc
push
push
mov
pushf
mov
pop
fnsave
mov
cmp
inc
stc
je
out
sub
(bad)
int3
push
leave
inc
ret
fadd
fisttp
test
lds
xchg
bound
sub
sbb
(bad)
cmp
int
retf
push
inc
sub
cmp
outs
lods
and
fimul
lds
or
mov
mov
xor
pop
push
sbb
mov
cmps
cmp
mov
jecxz
pushf
pop
push
dec
and
out
sar
shl
in
inc
adc
xor
xchg
jl
lahf
arpl
push
call
out
xchg
(bad)
xor
pop
dec
mov
rcr
xor
pop
inc
icebp
loope
cmp
mov
dec
sub
hlt
shl
jns
mov
hlt
cmp
jns
dec
mov
and
call
jo
push
cmp
inc
mov
jmp
xchg
(bad)
(bad)
push
jbe
xchg
jmp
lods
inc
mov
cs
push
add
adc
stc
(bad)
aad
outs
sahf
add
cmp
in
rcl
dec
lods
sub
xchg
xor
lds
jecxz
mov
data16
ds
lock
inc
xor
out
xchg
js
outs
arpl
xchg
xchg
or
mov
adc
xchg
mul
add
fmul
sub
or
ret
aas
push
mov
xchg
test
push
call
push
loope
fcomp
imul
mov
jns
inc
or
xchg
imul
stos
push
repz
xchg
mov
xchg
adc
and
adc
add
fsubr
push
pop
sti
adc
lock
paddusb
mov
les
jecxz
cs
test
xchg
lods
call
xchg
sbb
jl
mov
(bad)
cmps
sbb
pusha
int
sbb
jge
xor
fnstsw
inc
in
icebp
dec
add
push
sbb
mov
push
aam
ins
lods
pusha
cli
add
xchg
sbb
lahf
ror
pop
(bad)
sbb
sub
in
lock
jno
test
jl
jmp
lods
push
mov
mov
pop
loope
sub
cdq
loop
cmps
inc
push
mov
(bad)
nop
mov
fst
cld
leave
push
xchg
std
rol
xchg
mov
(bad)
jo
stos
sub
xchg
enter
adc
(bad)
jecxz
or
sub
cmps
mov
pusha
inc
(bad)
int
fist
pop
in
sub
mov
jmp
clc
shl
inc
outs
or
xor
push
stos
mov
mov
sti
fwait
bound
mov
rol
mov
push
mov
into
mov
push
push
shl
fcmovnbe
jnp
out
add
imul
lds
mov
mov
into
or
sti
pop
movs
push
push
mov
sub
or
jle
xchg
jo
push
pop
mov
or
inc
sbb
dec
inc
dec
les
nop
fnstsw
lock
inc
sub
mov
scas
jae
cmc
cmp
mov
data16
mov
into
call
enter
mov
jp
dec
clc
jl
cld
sbb
xchg
or
mov
mov
or
xchg
cmp
push
xchg
test
repnz
loopne
push
sti
xlat
fiadd
pushf
fcomp
push
fsubr
adc
loop
xchg
xor
sub
mov
mov
cli
icebp
inc
ds
in
push
mov
and
adc
movs
mov
or
repz
fimul
adc
fst
shr
mov
jecxz
outs
sub
sar
jns
push
cld
les
hlt
dec
sub
and
push
scas
inc
inc
leave
jg
ret
int3
sbb
repnz
fs
add
cmc
cmp
add
fadd
fcomp
(bad)
and
xchg
xor
scas
cmp
pop
or
mov
mov
(bad)
or
mov
pop
push
cmp
mov
mov
lock
add
fcmovu
imul
mov
test
(bad)
xchg
mov
jae
cmc
dec
sbb
inc
cmp
fwait
mov
xor
clc
jmp
mov
cmps
sub
add
iret
xor
and
fbstp
scas
dec
sti
retf
and
fwait
call
jnp
fwait
and
into
(bad)
repnz
xchg
inc
pushf
sbb
jmp
out
sbb
out
mov
push
cmps
cmp
xor
loopne
or
sub
sbb
push
ds
pop
movs
and
inc
mov
popa
ror
push
in
aaa
cld
cmp
inc
sub
movs
inc
adc
jbe
pop
(bad)
mov
test
jle
cmp
aam
adc
dec
or
cmps
imul
into
test
xchg
sub
sbb
loope
rol
in
xlat
xor
shl
mov
mov
jno
ror
(bad)
xor
test
call
std
mov
xchg
mov
mov
dec
mov
xchg
mov
lea
sub
sbb
clc
(bad)
cmp
mov
mov
jno
sbb
ds
xchg
jmp
test
test
pop
xchg
jp
and
mov
shl
repz
inc
mov
sbb
in
scas
iret
je
jno
fsub
stc
(bad)
aas
pop
je
(bad)
test
cmp
aas
push
add
in
int3
pop
add
sbb
xchg
push
push
or
outs
pop
sbb
imul
(bad)
xchg
stos
sbb
loop
sub
pop
sub
sbb
xor
mov
cmp
mov
movs
add
push
gs
push
fidivr
xchg
pop
add
mov
aas
in
enter
inc
push
adc
mov
jecxz
cmps
into
std
pushf
and
rol
fmul
cs
es
aaa
in
cwde
dec
mov
xchg
jmp
std
int3
in
xlat
je
out
sub
inc
cs
adc
pop
ss
jl
sub
pop
sbb
jnp
imul
inc
mov
in
ret
outs
loop
(bad)
cmp
or
jmp
stos
sub
rcr
xor
aas
lods
sub
adc
movs
dec
inc
js
xchg
xchg
pop
das
pop
dec
(bad)
leave
or
(bad)
mov
sub
add
lds
out
mov
dec
pop
test
ins
jne
je
pop
mov
outs
jb
cmp
sub
sahf
fdivp
pop
popf
(bad)
xor
xchg
mov
fist
jns
pop
mov
mov
sub
mov
pop
cld
mov
and
cmp
fcmovbe
lods
mov
imul
pop
pop
loop
add
out
xor
ret
into
xchg
jmp
or
nop
push
sub
les
push
(bad)
int
cmp
mov
mov
test
inc
pop
sub
call
pop
mov
shl
loopne
sub
test
and
fcomp
das
cld
push
xchg
retf
dec
imul
dec
and
dec
or
lahf
push
push
add
adc
ins
dec
sbb
inc
jns
rcr
stos
das
sbb
mov
outs
add
push
test
enter
je
dec
mov
add
mov
add
mov
(bad)
into
mov
push
rcl
cmc
xchg
cld
jb
mov
jmp
sub
cdq
pop
test
mov
loopne
pop
add
je
imul
push
sbb
mov
in
outs
cmp
test
and
mov
xchg
stos
call
jno
ins
retf
dec
jno
cmp
mov
int
dec
adc
popf
jmp
hlt
ja
test
sar
push
xchg
sub
mov
shl
xor
ja
pop
inc
add
cmp
icebp
(bad)
xchg
imul
imul
loope
jns
mov
mov
fisubr
loope
inc
in
and
cmc
int
(bad)
inc
inc
mov
cmp
add
mov
dec
ss
push
js
call
inc
mov
jae
push
rcl
or
pushf
ins
adc
inc
rcr
add
add
imul
xchg
bound
fdiv
pop
(bad)
sti
fsubr
jl
fwait
pop
and
repnz
ret
inc
(bad)
in
mov
repz
or
pop
push
push
addr16
(bad)
jb
repz
aam
pop
icebp
enter
ins
je
(bad)
jbe
int3
cdq
js
ins
pop
pusha
cwde
cmp
and
adc
out
push
shr
xor
nop
out
or
add
es
lods
int
mov
inc
jno
mov
cmp
inc
jmp
test
int3
push
rcl
cwde
fcom
(bad)
mov
sub
xor
push
imul
sub
or
repnz
xchg
fdivr
mov
pop
pop
repnz
add
ds
sub
dec
into
pop
lds
enter
int
mov
aaa
(bad)
or
jbe
lea
ja
sti
sub
mov
jno
mov
js
sub
mov
arpl
shl
not
push
pop
ficomp
push
jmp
or
aam
mov
add
not
adc
add
nop
mov
mul
inc
push
pop
lahf
mov
mov
push
push
mov
into
addr16
div
test
xor
pop
xchg
(bad)
fdiv
xor
inc
cmp
or
jns
mov
pop
push
fdivr
mov
lock
jns
in
cli
(bad)
inc
jmp
daa
mov
and
bound
sbb
loopne
or
and
cmp
inc
fadd
out
jnp
rcl
add
sub
(bad)
mov
push
mov
adc
aas
xor
lods
icebp
sub
cmp
mov
cmps
std
mov
jnp
fadd
mov
jne
mov
inc
jecxz
adc
xchg
push
dec
out
xor
pushf
inc
pop
or
int3
out
push
mul
imul
inc
std
pop
push
stc
and
inc
in
mov
inc
loopne
js
and
lsl
out
pushf
mov
inc
mov
pop
movs
es
(bad)
push
iret
or
aad
dec
pop
pusha
xor
xor
aam
sub
pop
call
int
imul
xchg
mov
xor
xchg
xchg
push
call
(bad)
in
push
out
stos
ja
imul
mov
adc
mov
jp
int
cmps
pop
test
jp
test
mov
inc
retf
lock
retf
(bad)
sub
out
pop
and
and
inc
iret
loope
addr16
pusha
lods
push
fistp
jge
xor
push
cmp
gs
jge
inc
arpl
enter
(bad)
lock
xor
and
jb
rcr
fcom
movs
push
mov
push
rcr
out
loop
test
xor
retf
lds
dec
leave
dec
gs
sbb
jo
das
jbe
lea
cmp
xlat
fcomp
dec
mov
shr
mov
add
mov
add
push
(bad)
rsm
pop
xchg
sub
mov
jo
push
push
xchg
xor
jno
cld
imul
aaa
push
jg
adc
mov
cmc
stos
mov
xchg
int3
push
add
stos
fbstp
idiv
(bad)
outs
lahf
xor
push
icebp
int3
(bad)
mov
or
mov
xchg
or
mov
cmp
in
stos
movs
sub
adc
idiv
std
je
mov
and
xchg
aas
dec
outs
jns
aam
xchg
call
or
adc
lock
pop
push
out
xchg
cmps
into
sbb
data16
adc
mov
and
push
sbb
inc
jb
repz
dec
sbb
xor
rcr
jno
pop
scas
retf
sbb
das
cmp
sbb
inc
mov
dec
psrad
iret
pushf
mov
ror
cmp
sbb
pop
sbb
leave
test
jmp
imul
or
sub
(bad)
pusha
cs
add
mov
test
cld
jns
cmps
pop
in
adc
into
pop
or
jmp
sub
cmc
inc
popa
push
or
aaa
and
fmul
in
(bad)
or
ficom
inc
lods
push
cmps
adc
test
outs
retf
mov
in
cmp
js
js
fs
cmc
xlat
dec
mov
adc
fild
test
fwait
cmp
ret
pop
cld
push
rcr
adc
adc
dec
in
test
mov
rol
sbb
dec
push
xor
es
push
in
pushf
push
push
inc
les
dec
cwde
sub
lds
add
pop
mov
xchg
adc
movs
(bad)
sar
and
out
adc
mov
js
jge
dec
dec
pop
and
push
lods
cmc
jbe
or
(bad)
sbb
repnz
xchg
outs
rcr
push
dec
movs
stos
jge
pop
jecxz
jle
xchg
ins
mov
inc
call
cmp
lods
imul
push
sahf
test
xchg
stos
outs
cmps
aam
and
inc
push
test
mov
leave
jle
dec
mov
cmp
fdivr
inc
push
sbb
sub
jno
call
mov
sub
cdq
fmul
gs
fsubr
out
dec
cmp
sub
das
mov
test
cmp
pop
in
fdiv
mov
movs
mov
push
ins
mov
jmp
xchg
lds
cmp
hlt
das
adc
push
loop
aad
mov
retf
aaa
pop
push
cmps
add
adc
dec
inc
adc
dec
repnz
sbb
fsub
arpl
xlat
or
and
ret
pop
shl
lea
cs
ins
pop
sub
pop
out
popf
lods
push
(bad)
icebp
adc
scas
add
mov
pop
test
pop
mov
sub
(bad)
mov
cmps
xor
pop
inc
mov
fwait
ins
pop
ins
dec
push
movs
fcomp
mov
mov
pop
lds
mov
in
shl
rcr
push
popa
ret
inc
jg
out
jle
in
mov
inc
jb
fdivr
pop
gs
or
stc
js
push
lock
in
xchg
push
fsubr
sahf
inc
repnz
movs
push
xchg
inc
(bad)
in
ins
add
cld
data16
in
cwde
xchg
push
das
nop
or
sahf
sbb
sub
and
rcl
ss
das
xchg
mov
dec
push
cmp
cmp
sub
mov
call
lods
xchg
(bad)
cmps
sar
jmp
and
mov
jnp
or
test
ret
mov
sbb
xor
add
push
and
ja
mov
ds
adc
into
push
inc
enter
or
(bad)
sbb
stos
icebp
mov
bound
enter
adc
nop
inc
cmc
inc
lods
out
in
stos
cdq
mov
dec
(bad)
mov
out
or
(bad)
pop
mov
inc
mov
push
mov
lods
or
movs
cld
data16
lods
mov
out
les
cmp
nop
int
lods
dec
sbb
inc
mov
mov
pop
mov
rcl
test
xor
sahf
jmp
call
adc
call
loopne
aad
jg
jg
cmp
jnp
jnp
jmp
pop
ficom
dec
inc
shr
pop
mov
out
mov
and
mov
or
sub
hlt
jmp
jmp
dec
fldl2e
cli
mov
and
inc
push
pop
add
sub
mov
sub
mov
pop
lods
cmp
xor
push
fucom
pop
ins
jnp
sbb
mov
cs
je
add
ss
mov
push
mov
jp
mov
pop
pusha
pop
sub
xor
mov
cmps
pop
adc
cs
fwait
out
(bad)
pushf
imul
or
mov
xor
mov
les
repnz
into
dec
inc
mov
mov
or
sbb
sar
mov
jno
repnz
dec
(bad)
(bad)
sub
and
xchg
je
pusha
or
mov
pop
hlt
pop
push
push
scas
nop
xchg
(bad)
enter
push
inc
stos
out
adc
dec
repz
cmp
movs
sar
push
aam
dec
or
in
push
je
sub
lods
pcmpeqw
xor
or
jmp
loop
retf
aas
arpl
leave
cmp
(bad)
pop
out
and
cmp
mov
dec
push
aas
inc
call
xor
adc
mov
clc
popf
lods
mov
or
pop
push
cmp
int3
clc
mov
sahf
out
sahf
sub
mov
call
mov
pop
int
and
xchg
sub
outs
sub
fsub
xor
mov
hlt
pop
fdiv
sub
clc
loop
pop
(bad)
and
faddp
add
int3
sub
cmp
in
shl
(bad)
shr
sbb
out
jp
fadd
xchg
mov
int
data16
ret
dec
xor
pop
mov
sbb
out
add
push
adc
mov
jmp
in
cmp
jbe
ret
push
xor
out
add
das
dec
and
fild
push
int3
jne
out
enter
fisttp
mov
cmp
cmc
cmp
jle
sar
xor
test
retf
mov
jmp
fiadd
ret
fidivr
jge
icebp
sbb
cmps
lahf
mov
repnz
popa
xor
fstp
and
pop
int
or
out
and
xchg
ins
imul
push
jns
test
jo
mov
xchg
xlat
movs
mov
or
adc
fidiv
lea
daa
dec
shr
pop
xchg
call
mov
pop
stc
je
mov
(bad)
int
lds
ret
fstp
ja
cwde
out
sar
add
out
jno
call
ins
add
xor
mov
sbb
ins
shl
jns
mov
push
nop
pop
out
out
mov
pop
mov
xlat
pop
sbb
cmc
int
(bad)
mov
xor
ss
hlt
stos
add
jmp
ins
pop
rcr
mul
lock
sbb
xchg
mov
and
push
jmp
push
cmps
cmp
mov
mov
jle
add
int
std
lock
pop
mov
pop
cmps
mov
dec
je
xchg
pop
mov
cmp
scas
push
lahf
dec
movs
js
push
sub
sbb
cmp
ins
jo
(bad)
(bad)
hlt
and
cwde
or
icebp
cmp
f2xm1
mov
adc
add
scas
sbb
pop
add
fimul
jg
push
pop
shl
fst
sub
movs
push
outs
xchg
ja
push
push
dec
outs
(bad)
push
jle
adc
dec
sub
mov
and
(bad)
call
fbld
in
push
adc
sbb
mov
mov
stos
iret
inc
cdq
ror
sbb
jge
outs
leave
and
pop
pop
pushf
jnp
sub
cdq
dec
mov
lock
or
jle
in
lock
dec
out
inc
movs
das
aad
cmc
cdq
lods
jno
movs
mov
sub
xchg
jb
fild
fcom
mov
jnp
stc
adc
adc
stos
or
and
add
push
sub
add
pusha
sti
add
push
push
cmp
xchg
xor
xor
enter
(bad)
retf
mov
retf
mov
jae
rcl
mov
dec
sbb
imul
xor
pop
les
mov
and
mov
mov
adc
jp
push
cdq
pop
xchg
js
mov
ins
int
dec
mov
and
imul
mov
out
or
pop
icebp
fs
or
inc
cmc
movs
pushf
(bad)
repnz
icebp
dec
jns
(bad)
popf
je
pushf
gs
pushf
mov
sar
and
out
(bad)
aam
ins
xor
mov
retf
int
scas
and
push
cs
gs
mov
rol
xor
jnp
rol
push
popa
out
xor
in
aad
pop
popa
mov
cmp
mov
sbb
cdq
mov
pop
ins
xchg
clc
or
jmp
sbb
jns
or
adc
inc
cld
push
jge
ss
les
adc
and
dec
adc
mov
lock
xor
mov
sbb
loopne
mov
push
xchg
cpuid
icebp
push
pusha
out
and
jg
pop
sub
pop
outs
fmul
mov
fist
cmps
clc
xchg
xchg
xor
xchg
data16
mov
int
in
push
cld
scas
mov
mov
test
mov
add
outs
jmp
adc
int3
outs
dec
adc
fistp
addr16
fnstsw
mov
int
pop
fs
jnp
push
mov
popf
lds
mov
adc
jecxz
ja
addr16
cmps
mov
das
xlat
fild
push
push
or
xor
pushf
xchg
les
sbb
jmp
cwde
in
dec
add
and
stc
pop
lods
imul
dec
loope
fs
not
jge
lds
mov
(bad)
adc
aam
and
push
arpl
xchg
pop
pushf
enter
mov
retf
aas
and
sbb
push
and
sub
push
cmp
lods
or
movs
shr
sbb
mov
cmp
pop
mov
sub
mov
push
fsubr
mov
imul
jg
sar
sahf
imul
ror
test
and
sahf
js
adc
ffree
inc
into
jg
scas
lds
sub
sahf
jnp
popf
in
aaa
or
repz
mov
mov
retf
in
(bad)
fist
enter
fldcw
mov
adc
xor
mov
jecxz
das
int3
inc
or
stos
jno
jp
clc
arpl
inc
push
arpl
mov
lods
imul
and
mov
sar
xchg
dec
mov
retf
retf
retf
or
sbb
arpl
fild
pop
xor
mov
ds
fucompp
aas
ret
sahf
dec
mov
xchg
(bad)
mov
inc
or
inc
aad
push
adc
pushf
xchg
jp
mov
movs
cs
mov
and
inc
cmp
sbb
aaa
mov
mov
inc
aaa
push
push
movs
xor
cmp
inc
sar
shr
pop
hlt
mov
cwde
cmc
cdq
fistp
out
icebp
lock
popa
mov
pop
mov
test
out
mov
out
call
inc
push
dec
movs
(bad)
cmp
retf
ss
xchg
(bad)
iret
js
fwait
jae
in
jb
lock
jecxz
hlt
sbb
pop
(bad)
mov
mov
xor
mov
mov
or
lods
es
and
dec
imul
mov
xor
hlt
lods
sbb
not
popa
xor
pop
retf
(bad)
scas
add
xchg
mov
mov
inc
scas
and
(bad)
leave
xor
push
and
inc
in
test
jmp
or
clc
dec
jo
cmp
mov
out
pop
pop
rol
jb
fnstenv
and
xor
dec
mov
cmp
retf
test
inc
sub
(bad)
lahf
(bad)
mov
add
pop
test
push
addr16
pop
xchg
movs
int3
mov
dec
aaa
and
pop
popa
sub
sbb
dec
rol
scas
jle
clc
sbb
mov
ret
mov
mov
pop
call
xor
jb
add
and
sti
add
ins
xchg
out
out
(bad)
stos
ja
lds
sbb
mov
xor
loopne
xchg
push
pop
mov
add
dec
shl
xchg
iret
cmp
and
mov
and
xor
sbb
(bad)
ja
nop
fdiv
rol
lds
jp
and
frstor
pop
dec
popa
and
push
push
bound
ds
stos
inc
mov
or
jne
call
jecxz
lahf
add
cld
enter
mov
(bad)
xor
loope
cmp
repnz
pusha
test
or
cmp
fild
gs
fadd
pop
push
icebp
xlat
mov
push
sub
sahf
sbb
test
mov
push
and
iret
jno
xor
loopne
dec
addr16
jmp
lahf
aaa
fdivr
ror
aam
pop
(bad)
out
push
push
push
adc
adc
test
nop
sbb
scas
movs
pop
jno
jnp
add
sub
nop
arpl
push
mov
sbb
xlat
mov
or
pushf
mov
mov
retf
xor
aaa
add
iretw
imul
push
je
loope
sub
push
mov
data16
cmc
and
scas
retf
int3
mov
add
dec
mov
add
pop
and
cmps
movs
rol
(bad)
mov
jmp
mov
push
std
aam
or
les
(bad)
cmc
inc
fwait
popf
cmps
int
mov
aam
adc
popa
mov
ins
push
mov
stc
jmp
(bad)
pop
(bad)
mov
cmp
and
sub
adc
push
mov
dec
mov
movs
xor
lahf
test
(bad)
mov
mov
and
loope
pop
jge
xor
or
and
push
pop
add
or
pop
ret
movs
add
sub
inc
mov
pop
inc
inc
xor
pop
sub
daa
cmp
aad
ins
inc
jns
fmul
jg
and
test
enter
dec
mov
or
inc
or
jle
add
dec
xor
mov
mov
mov
xchg
sbb
push
pop
mov
sbb
cs
sar
add
mov
or
xor
repz
dec
popa
mov
imul
pop
jmp
lds
in
sub
mov
xchg
fsubr
inc
loope
jmp
fwait
mov
mov
dec
pop
arpl
pop
cmc
je
mul
fistp
xchg
cmp
fstp
(bad)
scas
sub
vrcpps
pop
(bad)
(bad)
int
or
jae
and
adc
loopne
ds
push
out
test
test
xchg
fdivr
or
loope
mov
stos
pusha
cmp
mov
inc
lock
xor
sti
stc
dec
jno
shr
clc
xchg
mov
add
mov
ret
in
adc
into
les
pop
xchg
ret
and
or
cmp
out
gs
shr
xor
in
ds
jp
cmp
xchg
sahf
out
fidiv
mov
adc
inc
xchg
sar
mov
(bad)
cli
ins
rcpps
mov
leave
es
xor
mov
loop
mov
(bad)
xor
pop
daa
inc
inc
inc
gs
xchg
shl
pop
xchg
or
cli
aaa
sti
cli
jnp
cmps
xchg
push
inc
sub
(bad)
inc
mov
loopne
pop
pop
and
ret
lock
or
scas
shl
(bad)
fimul
pop
xchg
dec
mov
jae
xor
or
pop
inc
ret
leave
repz
xor
mov
xchg
cmp
icebp
call
jp
dec
out
das
imul
cld
fmul
push
dec
lds
inc
mov
neg
aaa
bound
add
std
cwde
inc
jl
(bad)
pop
pop
mov
jg
sbb
inc
in
cmps
push
cmp
test
js
and
sbb
in
outs
popa
rcl
loopne
pop
leave
ret
add
mov
pop
out
ds
cmp
nop
repnz
inc
jbe
and
jle
adc
les
sbb
(bad)
movs
and
in
push
push
xchg
fidivr
mov
fistp
and
idiv
sti
aas
(bad)
enter
fsub
(bad)
in
mov
mov
mov
mov
or
mov
fistp
lea
(bad)
scas
into
cmp
ret
je
add
xor
adc
psubsb
push
sbb
xor
mov
outs
mov
xor
xchg
aad
sbb
into
icebp
mov
mov
push
addr16
or
pop
leave
nop
mov
jle
cli
push
call
xor
out
cmp
addr16
add
add
or
ficom
dec
(bad)
aad
std
inc
push
jmp
icebp
mov
push
and
shr
test
mov
call
hlt
aam
sti
loopne
test
push
in
cmp
(bad)
xchg
xchg
movs
jno
mov
sbb
(bad)
mov
mov
inc
test
aad
push
sub
js
xchg
in
data16
rcr
sbb
xchg
jle
add
inc
dec
push
cmp
fbld
and
iret
cmps
into
jl
mov
sahf
and
test
test
inc
and
addr16
pusha
fist
sbb
lahf
popa
or
sar
or
in
ins
push
xchg
xor
outs
popf
push
adc
gs
cmp
stos
aam
nop
into
jns
outs
jns
add
mov
dec
xor
inc
cmp
mov
or
sbb
scas
sbb
loopne
mov
pushf
pop
pop
mov
sbb
out
add
std
(bad)
and
push
mov
adc
mov
cmp
daa
enter
lods
dec
mov
mov
lods
sbb
sub
add
mov
jbe
push
leave
test
ja
mov
xor
mov
pop
fwait
ds
cmp
adc
and
dec
adc
pop
dec
pop
sbb
sbb
out
mov
cmp
dec
lock
sbb
sbb
in
loop
lea
or
sbb
fld
in
sub
sub
stos
push
jecxz
or
lock
dec
loopne
jns
cli
dec
fwait
push
addr16
mov
aam
or
lea
mov
sbb
pop
dec
add
in
adc
imul
adc
(bad)
dec
or
sub
aas
push
xchg
jp
and
loop
pop
sub
mov
(bad)
cmp
xor
in
ds
aas
popf
out
jae
dec
sub
test
jecxz
cld
xor
push
xchg
mov
mov
dec
or
je
outs
cmp
bound
imul
test
fistp
cli
rcr
jo
sahf
cmc
adc
pop
sub
aam
(bad)
aaa
repz
stos
jnp
cli
sub
mov
mov
or
inc
adc
xchg
xor
inc
mov
test
inc
or
loope
mov
fsubp
icebp
xor
and
js
pop
sbb
mov
outs
xlat
movs
shl
outs
pop
inc
fnstcw
pop
or
add
ror
mov
ret
and
mov
cmp
and
sub
and
aad
je
pushf
mov
and
inc
dec
fiadd
pushf
mov
adc
jmp
sbb
repz
inc
cmp
push
mov
pop
rol
push
in
fs
(bad)
push
fisttp
jns
sub
(bad)
addr16
rol
push
cld
adc
xor
cmp
push
repz
adc
cdq
mov
push
ins
jne
repz
inc
add
in
and
jo
mov
push
push
inc
mov
mov
ja
lods
call
add
in
(bad)
dec
jno
xor
dec
cmp
push
pop
ja
nop
adc
lahf
lock
push
in
adc
mov
ret
int3
fisttp
inc
mov
lds
add
adc
xchg
test
mov
sub
ds
sahf
add
imul
add
les
fdivr
dec
sbb
stos
test
sti
loope
pop
mov
xor
mov
adc
mov
jle
push
jns
sub
out
lock
mov
ret
xchg
loope
xchg
lods
xor
xchg
fwait
or
scas
lods
repz
mov
adc
mov
mov
dec
test
inc
jo
das
push
xchg
jae
outs
xchg
inc
(bad)
fnstcw
jecxz
add
call
in
rol
push
test
imul
ss
push
ins
(bad)
(bad)
test
mov
jns
adc
sbb
push
clc
ja
cmp
daa
sbb
xchg
pop
jb
test
cmps
sub
repz
aas
sahf
inc
daa
lds
cdq
xor
(bad)
push
test
mov
sbb
mov
cmp
test
sbb
arpl
pusha
stos
xor
jnp
xor
push
jo
xchg
inc
int
shr
std
adc
mov
adc
xor
push
in
xchg
fwait
repz
cmps
add
pop
mov
in
push
mov
fcom
das
xchg
mov
jns
adc
sbb
in
mov
mov
dec
stos
push
stc
into
push
retf
mov
(bad)
outs
sub
aad
or
inc
push
mov
leave
push
jg
(bad)
jo
loopne
(bad)
mov
popa
xor
test
mov
call
sbb
adc
in
dec
mov
jp
sub
call
mov
jmp
pushf
xor
xor
push
xchg
daa
imul
(bad)
pushf
adc
dec
ror
dec
rol
and
jp
lods
lds
fld
jp
push
clc
ins
(bad)
js
cwde
cmps
aas
int3
mov
dec
cmps
repz
js
inc
scas
adc
shl
dec
xchg
cvtps2pi
ds
(bad)
push
(bad)
dec
jo
stc
add
push
inc
inc
call
push
into
nop
call
jbe
in
pop
rcl
in
sub
push
xchg
add
lock
loopne
mov
repz
and
cdq
ds
inc
adc
test
mov
dec
data16
imul
pop
test
sub
push
or
xor
xlat
popa
test
addr16
gs
add
je
jg
mov
adc
iret
inc
ret
mov
mov
ins
and
sbb
xor
bound
aaa
inc
or
jo
iret
int3
aam
and
mov
push
lods
mov
frstor
cwde
out
shl
icebp
sbb
(bad)
add
mov
adc
xor
jae
and
pop
repz
or
cmp
aaa
adc
in
push
cmp
push
adc
pop
pop
test
pop
es
or
cmp
jb
or
aas
cs
push
xor
mov
mov
cmp
ficom
ret
imul
test
imul
pushf
fnsave
test
and
xchg
pop
cmps
addr16
in
cmps
xchg
cmp
xchg
movs
ret
sub
pop
inc
daa
mov
std
jg
retf
jno
add
jno
movnti
xor
dec
jno
xchg
push
or
adc
cld
cmp
cs
push
(bad)
in
add
mov
jno
inc
push
cmps
jno
cli
inc
scas
test
mov
pop
sbb
sbb
cdq
cmps
aad
pop
jo
mov
mov
sar
mov
jp
and
pop
sbb
push
out
and
outs
adc
clc
(bad)
gs
dec
pop
shr
pusha
pusha
pop
mov
mov
or
or
call
add
and
push
push
int
adc
mov
inc
sbb
test
sbb
lods
je
mov
cmp
call
enter
(bad)
adc
mov
jne
(bad)
out
(bad)
repnz
fsub
inc
rol
stos
out
les
push
test
push
scas
add
jmp
fidiv
inc
call
shl
sub
inc
shr
sub
fcomp
mov
mov
mov
shl
mov
idiv
pop
out
add
in
std
or
xor
push
cs
aas
out
push
js
outs
lds
sub
pop
add
dec
pop
pop
lea
shl
xor
and
mov
ds
les
mov
arpl
cmp
call
cwde
or
dec
xlat
ror
out
jb
(bad)
stos
fwait
aad
and
dec
imul
push
nop
aaa
sahf
int
mov
pop
cmp
call
add
ror
icebp
push
lock
sbb
sub
addr16
dec
ret
jns
aas
dec
and
retw
push
outs
sbb
fwait
jae
fs
cld
lea
rcl
push
ret
push
(bad)
adc
add
bound
jae
repz
pop
pop
inc
leave
mov
mov
fadd
inc
data16
xchg
xor
add
or
sbb
push
sbb
outs
sbb
icebp
mov
push
push
scas
fild
shl
test
aas
xor
lods
out
int
call
les
add
js
inc
retf
dec
jg
or
loope
repz
pop
ins
push
(bad)
in
mov
hlt
int3
xchg
push
cmp
fsubr
sub
hlt
add
(bad)
push
mov
cli
call
push
into
pop
iret
je
in
xchg
shr
inc
adc
mov
mov
je
add
and
adc
(bad)
pop
jo
add
mov
pop
fild
out
sub
(bad)
pop
push
call
jmp
push
retf
jecxz
imul
jge
and
cdq
or
cmps
shl
dec
push
js
inc
sbb
xchg
jl
dec
pushf
jecxz
xor
adc
pop
pop
xor
and
icebp
add
daa
call
dec
shl
sbb
jb
cmps
clc
push
push
mov
jbe
adc
adc
movs
push
out
push
(bad)
addr16
sub
sub
jl
adc
in
aaa
ror
lods
pushf
cli
into
in
or
in
addr16
into
outs
push
fs
adc
mov
cmp
sahf
retf
mov
cmc
test
in
and
xor
sbb
sub
mov
ds
or
hlt
outs
sub
out
jmp
pop
cld
dec
add
xchg
dec
fadd
inc
out
jae
pop
in
inc
sbb
mov
lock
sbb
push
lods
sub
push
xchg
and
or
and
and
or
inc
stos
or
iret
add
pushf
ss
xchg
mov
fidivr
mov
mov
mov
call
pop
sbb
jnp
fisubr
mov
es
mov
sbb
push
popa
shr
mov
pop
push
dec
fsubr
jbe
pop
gs
add
jae
nop
in
sub
add
sahf
sar
dec
dec
mov
pop
sbb
addr16
pop
popf
out
pop
bswap
fistp
outs
mov
sub
in
jge
scas
rcl
push
add
mov
in
jl
lock
cmp
stc
ss
dec
jb
xchg
lock
inc
(bad)
cmp
or
push
inc
cmp
lahf
es
xor
dec
dec
xor
retf
pusha
in
lds
pusha
push
inc
retf
outs
inc
mov
push
cwde
iret
cmp
aam
in
sbb
sbb
push
mov
pop
fs
nop
add
(bad)
fild
retf
jbe
mov
jns
(bad)
stos
aam
lods
js
mov
cmc
mov
mov
sub
jb
sbb
pop
popf
dec
pushf
sbb
hlt
inc
pop
(bad)
outs
mov
mov
scas
or
aaa
in
push
dec
into
sub
(bad)
jmp
icebp
jmp
mov
xor
jns
push
xor
es
gs
sbb
lods
xchg
adc
xor
xchg
and
das
sub
daa
popa
aas
mov
sahf
lods
or
popf
popa
lods
dec
cwde
popa
movs
ss
in
dec
movs
adc
mov
ja
cmp
mov
cmp
add
push
leave
cwde
push
jno
es
jmp
daa
cld
bound
lock
mov
add
retf
in
rcl
test
cmp
lds
dec
mov
push
stos
mov
add
and
pop
iret
test
fnstcw
mov
cli
dec
(bad)
movs
pusha
and
shr
(bad)
mov
mov
pop
dec
xchg
sbb
mov
or
daa
icebp
and
push
pop
sub
mov
jmp
(bad)
fst
or
test
pop
pushf
ja
push
add
push
dec
sbb
(bad)
pop
or
pop
fstp
push
fild
clc
call
pop
retf
mov
or
push
cli
cmc
test
push
test
or
cmps
mov
and
xchg
fbld
xchg
adc
adc
(bad)
mov
clc
jmp
push
std
and
inc
sub
(bad)
jno
sbb
push
sbb
mov
mov
popf
dec
jo
xchg
test
jne
mov
in
lods
lods
in
in
adc
aas
leave
push
xor
or
ins
int3
and
mov
pop
inc
(bad)
das
and
lds
sbb
xor
push
arpl
push
adc
xor
gs
sti
push
fadd
or
cmps
or
sub
push
scas
ret
xlat
dec
imul
xor
dec
pusha
shl
pop
sbb
and
iret
enter
scas
mov
dec
xor
and
fwait
add
mov
mov
mov
sahf
inc
cmc
gs
add
ffreep
jo
inc
cli
call
and
seta
add
jg
sahf
add
sbb
add
js
and
jnp
xlat
cmp
or
les
inc
push
(bad)
adc
inc
jg
xchg
mov
cmp
push
sar
push
jge
sti
xchg
sar
ss
mov
mov
jp
push
repz
frstor
and
popf
push
jp
push
popf
pop
scas
fsubr
lods
sub
daa
mov
xchg
addr16
push
dec
jo
aas
adc
shl
sub
push
in
stc
fs
and
cdq
or
xchg
push
jmp
xor
or
clc
std
jno
xchg
stos
sub
pop
ficom
dec
jbe
sub
mov
daa
cwde
rcr
int
shl
add
and
add
pop
std
sar
push
dec
cmp
add
das
loope
add
mov
cld
in
call
and
rcr
fimul
sti
push
and
movs
fsubr
inc
je
push
icebp
lea
cmp
inc
addr16
xor
clc
out
dec
or
pop
fnsave
(bad)
mov
xchg
sbb
cli
and
ret
xchg
retf
test
add
mov
je
jmp
inc
jne
lea
js
push
mov
jbe
and
push
pop
mov
jmp
rcr
pop
inc
inc
sbb
jno
stos
cmp
aad
shl
jo
pop
ins
addr16
add
popf
mov
jbe
mov
pop
mov
leave
push
sbb
pop
ins
pop
pop
fmul
ret
pop
enter
loopne
pushf
cmp
add
scas
movs
(bad)
je
aam
sub
xor
inc
mov
pop
iret
push
aam
jns
mov
adc
out
push
and
fisub
bound
jb
xlat
call
push
retf
mov
xchg
xchg
push
das
jo
mov
repnz
ds
ins
pop
icebp
call
cwde
mov
xchg
xchg
xor
pop
mov
inc
or
loopne
cli
mov
je
scas
mov
shr
jae
add
sub
loopne
push
(bad)
and
cmp
popf
mov
mov
and
and
leave
sbb
in
jecxz
jns
test
cmps
jae
fs
mov
cs
sub
or
push
xchg
stos
data16
aam
pushf
add
aaa
inc
and
mov
or
dec
pop
push
and
sbb
fwait
adc
jle
(bad)
rol
sbb
and
push
cmps
ins
enter
mov
dec
je
sbb
sub
cli
adc
scas
mov
int
sub
shl
fcomi
mov
pop
cli
nop
icebp
sbb
out
leave
gs
and
adc
mov
repz
(bad)
inc
or
xchg
add
pop
inc
mov
pushf
mov
add
sub
lods
popf
imul
push
retf
loop
(bad)
in
dec
test
pop
int3
pop
sub
jg
stc
mov
push
add
lahf
pop
lahf
(bad)
stos
mov
scas
push
mov
sbb
mov
add
rcr
pop
iret
into
xchg
adc
les
add
mov
or
sar
fld
rol
jge
outs
or
cmp
retf
cmp
fcomp
add
cmp
not
and
adc
out
std
inc
mov
les
js
cmps
lods
ins
shl
dec
inc
sbb
add
push
sti
jecxz
into
loope
clc
jg
jae
retf
or
add
dec
iret
xchg
jp
fsubp
call
(bad)
or
sbb
add
fwait
div
hlt
mov
cmps
cmp
bound
jmp
xchg
push
loope
sbb
test
mov
in
jg
mov
outs
ins
cmps
push
inc
jno
sbb
leave
clc
xchg
xor
xor
ins
mov
int3
cmp
add
(bad)
mov
test
xchg
push
out
enter
pop
and
jecxz
dec
xor
and
sahf
sbb
push
(bad)
cmp
and
icebp
or
jg
sbb
and
movs
lods
pop
cli
ins
les
jns
fdivrp
test
mov
sub
call
shl
fsubr
or
push
data16
fist
mov
push
ret
mov
nop
outs
push
cmp
mov
push
and
and
sbb
ror
and
iret
stos
in
dec
adc
push
jge
clc
pop
addr16
dec
or
enter
pop
push
outs
movs
push
jmp
jae
xchg
shl
ds
push
test
fs
mov
icebp
dec
lds
rcl
xchg
seto
add
sbb
and
mov
mov
xor
jb
jg
int3
xlat
and
cmp
sub
push
imul
ror
dec
xlat
fs
aam
push
xchg
jne
jle
lods
jo
stos
pop
push
jo
mov
xchg
sti
repz
jns
mov
mov
mul
inc
adc
and
xchg
sbb
fst
repz
std
je
shr
ja
lds
sbb
lock
xchg
test
sub
sti
fucomi
jnp
fnstcw
cli
test
push
xchg
jno
sbb
loope
repnz
int3
add
push
sub
xchg
and
push
mov
pop
add
or
sbb
mov
loop
pushf
xchg
(bad)
cdq
es
jp
adc
test
pop
js
add
aad
or
and
mov
lock
xchg
xor
sub
pop
(bad)
ret
mov
push
cdq
in
adc
mov
stos
data16
jb
jbe
call
sbb
into
pop
inc
push
aad
jge
popf
jno
xor
cmps
mov
adc
and
mov
jl
lods
jle
loopne
inc
inc
popa
jge
loop
dec
adc
mov
popa
and
fnsave
mov
mov
popf
stc
stc
pop
pop
mov
cld
dec
push
dec
jecxz
sub
inc
pop
sub
(bad)
jne
mov
cld
xor
daa
ss
sbb
mov
data16
fist
xchg
inc
fistp
mov
retf
in
test
aaa
adc
cmp
jle
stos
jb
(bad)
jb
xchg
jle
sub
rcr
jmp
loop
fmul
sbb
leave
ja
mov
or
cld
out
outs
push
(bad)
fisubr
xchg
enter
mov
push
inc
call
inc
call
cwde
cdq
xor
loop
imul
push
repnz
popf
jns
ret
jle
push
xchg
cmp
hlt
fwait
jns
pop
sub
(bad)
lea
pop
out
adc
pop
rol
outs
das
xlat
add
push
lods
in
gs
mov
push
pop
pop
(bad)
dec
sbb
(bad)
aas
popf
mov
(bad)
shl
lds
sub
in
jmp
push
jns
or
jmp
retf
icebp
sub
loop
nop
mov
jmp
pop
cld
mov
add
jns
or
and
xchg
cmp
mov
hlt
push
outs
sub
cmp
int3
cmps
das
stc
test
inc
das
dec
jl
jmp
inc
add
sar
jo
sbb
clc
test
int
shl
xor
test
leave
sub
aad
fisttp
xchg
cmp
int3
imul
loope
arpl
xchg
add
add
push
fisttp
movs
inc
fnsetpm(287
in
imul
fadd
xor
lods
aaa
(bad)
jle
xchg
jmp
sar
xor
(bad)
test
out
daa
je
pminub
mov
out
ss
dec
arpl
jbe
cmp
(bad)
(bad)
fmul
jno
xchg
inc
jge
mov
test
mov
loope
or
sub
and
mov
push
movs
shl
adc
(bad)
aam
sub
mov
jl
lds
lods
pop
fs
icebp
popa
into
add
sar
push
sti
dec
pop
pop
xchg
aam
add
je
mov
mov
pop
aaa
jae
daa
jl
out
jg
retf
or
daa
push
jle
sub
push
gs
mov
inc
cmps
aam
daa
scas
cmps
jnp
xchg
or
sub
push
xchg
xor
lahf
mov
pop
and
add
jo
sbb
xor
gs
dec
clc
in
jne
ja
fwait
push
xchg
cmp
pop
enter
icebp
push
ja
nop
sub
and
pusha
in
mov
loope
cmps
push
clc
sub
mov
mov
or
sbb
stc
shl
bound
cmp
xor
dec
or
(bad)
in
mov
fwait
arpl
rcr
imul
xor
out
mov
cmp
shr
or
mov
cmps
sahf
adc
mov
inc
or
test
pop
test
movs
into
pop
jnp
add
scas
pop
sub
push
mov
imul
out
push
and
mov
aad
cdq
retf
pop
inc
in
nop
aaa
sar
ins
mov
cli
push
cmp
(bad)
fdivp
inc
or
push
push
loop
cmps
inc
inc
fcom
jp
loop
jbe
inc
mov
mov
iret
cs
in
add
lea
test
add
and
scas
mov
mov
mov
shl
pop
imul
adc
jo
lock
jae
sbb
rcl
mov
imul
movs
ins
push
xchg
jge
loopne
int
popa
out
neg
das
out
mov
test
jnp
add
stos
cmp
jle
inc
push
push
push
cmp
xchg
push
inc
ret
jmp
inc
mov
mov
test
shr
out
pop
push
push
jge
mov
xchg
inc
ins
inc
gs
lahf
into
enter
sub
cmp
rcl
(bad)
out
or
pop
ins
and
adc
pop
in
jno
shl
sbb
stos
or
dec
add
fstp
jg
ja
icebp
mov
jmp
js
addr16
jb
pop
and
add
push
mov
push
add
sti
cwde
sub
jle
clc
test
pop
or
sbb
push
int3
int3
addr16
jl
or
fimul
lahf
retf
popa
enter
vpcmov
repz
sub
jecxz
sbb
jecxz
xor
and
outs
mov
repnz
sub
push
push
jmp
cmp
pop
leave
or
mov
movs
cwde
mov
jmp
sbb
cmps
mov
loop
jmp
sti
mov
and
cmp
inc
sahf
push
mov
stc
fwait
clc
dec
jp
cmp
sub
push
sub
cmp
push
mov
leave
jl
mov
sbb
retf
adc
mov
mov
aam
test
neg
push
pop
lock
inc
sbb
cmc
adc
xlat
lahf
add
(bad)
out
inc
jne
dec
mov
(bad)
stc
inc
in
neg
add
or
cmp
movs
inc
pop
enter
adc
cli
xor
xor
ss
stos
fild
cmp
sub
add
arpl
movs
aas
xor
sbb
adc
call
sbb
fisttp
cwde
leave
mov
cmps
clc
movs
lods
pop
or
fwait
sbb
add
fadd
inc
and
retf
ror
stos
dec
cs
and
or
cld
ror
int3
fwait
add
ss
cmp
xchg
ins
jb
push
cmp
pushf
ds
bound
in
sahf
(bad)
or
test
movs
(bad)
mul
add
pop
or
stos
pop
jmp
hlt
icebp
pop
mov
mov
fldcw
push
out
dec
fiadd
xchg
jno
repz
pop
xor
mov
cmp
inc
ja
inc
jmp
pop
in
xchg
retf
aas
repnz
hlt
sub
lods
shl
(bad)
sub
sub
push
pop
lock
and
push
xor
push
ins
xor
pusha
xchg
pop
xchg
adc
adc
add
adc
add
add
packuswb
sbb
movs
in
mov
scas
jb
sub
frstor
(bad)
mov
pop
(bad)
fnsave
and
push
jnp
lea
aam
loop
mov
xchg
pushf
ds
sbb
shl
loop
test
jmp
test
daa
mov
test
std
stc
pop
pop
daa
aam
pop
push
ss
mov
(bad)
loop
cli
mov
nop
bswap
sbb
xchg
test
aad
mov
pop
lods
lea
pop
cmp
shl
pop
int3
ror
in
mov
in
fsub
call
xchg
ins
(bad)
ins
add
cdq
adc
and
xchg
int
out
push
sbb
jmp
mov
sbb
push
cmp
call
loop
inc
movs
stos
inc
or
ins
lahf
adc
pop
(bad)
leave
pop
(bad)
mov
push
jle
out
sbb
and
iret
or
inc
cld
fild
cmc
adc
fcomp
and
pop
mov
push
clc
loop
and
sbb
imul
pop
push
fld
jmp
jnp
dec
mov
xlat
mov
sbb
aam
pusha
aas
repz
pop
call
(bad)
arpl
push
fsub
inc
mov
sbb
lods
int
je
pop
hlt
xor
mov
mov
jmp
adc
sub
mov
fprem1
push
mov
cmp
sub
jnp
add
dec
xchg
(bad)
retf
inc
xchg
inc
push
shr
mov
cmps
call
pop
aas
add
xchg
pop
imul
mov
inc
jl
xor
rcl
adc
push
cld
aaa
mov
dec
cmp
daa
lahf
popf
cwde
outs
dec
jl
mov
js
sahf
sub
cmp
pop
das
jns
test
out
xchg
mov
cmp
or
es
outs
and
mov
sti
cmp
out
(bad)
es
arpl
movs
bound
cli
je
int
es
jb
in
lahf
mov
loopne
xchg
xor
outs
mov
test
les
(bad)
and
inc
jmp
test
addr16
xchg
add
or
int3
sti
jo
cmp
mov
jo
lahf
les
(bad)
push
lea
and
iret
pop
sub
es
and
popa
loopne
xor
and
int3
retf
push
sbb
(bad)
xchg
icebp
or
test
icebp
lods
(bad)
adc
aam
add
aaa
mov
js
sar
push
sar
dec
aam
cli
daa
and
mov
sub
pop
dec
cmc
or
stos
xchg
repnz
in
outs
push
(bad)
shl
sbb
pushf
dec
inc
mov
cmps
ret
mov
push
sub
push
mov
cmc
sub
repz
jecxz
loop
and
jmp
jb
and
xchg
imul
fnstcw
pop
or
mov
outs
jne
lds
in
arpl
nop
scas
sbb
cmps
scas
fisubr
sub
sbb
fcomp
jmp
cli
push
sub
ins
fdivr
sub
push
std
dec
shl
sahf
xor
cmp
imul
and
test
(bad)
sbb
dec
popf
push
out
xchg
jne
mov
ret
xchg
aam
popf
(bad)
mov
sub
div
mov
stc
pop
sub
stos
pop
push
sub
stos
sub
mov
js
add
adc
data16
ins
lahf
std
push
jmp
imul
iret
inc
xchg
or
push
lods
mov
push
outs
movs
jo
xor
bound
pop
es
push
(bad)
pop
mov
push
ins
stc
mov
push
or
and
pushf
ss
inc
(bad)
hlt
jb
xchg
loopne
stc
les
shl
pop
call
dec
sbb
inc
mov
outs
xor
jno
mov
fidiv
add
mov
push
test
pop
lahf
mov
or
js
aaa
aam
xchg
popf
inc
add
mov
xchg
mov
jns
in
inc
inc
js
aam
test
in
add
mov
icebp
out
jecxz
jb
mov
cld
xor
add
inc
fmul
int3
mov
gs
pop
inc
cmp
stos
cmp
dec
aam
and
inc
xchg
xor
add
add
rcl
in
shl
je
shl
xchg
and
and
(bad)
xchg
pushf
repz
pop
dec
leave
jbe
mov
adc
xchg
sub
jg
cdq
lahf
gs
pop
(bad)
loopne
arpl
jnp
jo
or
xor
out
stos
pop
cli
mov
repz
in
xchg
cmps
mov
lods
push
pop
lods
xor
jg
ret
or
push
and
int3
(bad)
pop
adc
int
push
mov
sbb
inc
and
lods
aad
cmp
cdq
jno
repz
mov
mov
or
mov
data16
popa
ds
pop
lahf
xchg
dec
int
fst
xor
dec
loope
adc
rol
add
add
icebp
test
sahf
fwait
xchg
mov
push
sti
inc
loop
daa
popf
mov
sbb
cmps
dec
mov
ja
sahf
mov
das
jb
mov
push
xor
(bad)
frstor
sub
jmp
inc
cmp
mov
sbb
lods
pop
test
push
in
and
stos
stos
cmp
and
sub
xchg
mov
mov
xor
cmp
mov
jns
loopne
sbb
aas
cmp
xchg
jns
shr
xor
in
or
mov
mov
inc
xchg
es
(bad)
xchg
fdivr
sbb
xor
imul
enter
(bad)
es
mov
popf
sbb
or
sbb
jbe
xchg
jmp
pop
cmp
push
cmc
dec
scas
les
mov
imul
sbb
test
loopne
sub
jo
sar
sti
mov
inc
outs
push
cmp
inc
and
and
jnp
fadd
out
dec
lods
inc
sti
cdq
xchg
push
or
mov
inc
xchg
test
cmp
mov
sub
cmp
pushf
push
jmp
xchg
popa
cmp
mov
push
jnp
adc
push
mov
xchg
ja
push
add
enter
push
add
mov
addr16
loop
addr16
sti
mov
popa
shr
or
adc
sbb
sbb
pop
mov
cdq
push
test
movs
mov
ins
cmp
mov
shl
cmp
daa
loope
inc
xor
lds
mov
mov
push
div
pusha
dec
loopne
or
rol
not
gs
push
(bad)
cli
xor
arpl
sbb
or
call
and
jge
push
gs
dec
mov
sbb
dec
fnstcw
fs
mov
push
jae
push
test
add
or
mov
fstp
(bad)
das
sbb
out
stos
or
gs
pop
hlt
pop
call
sbb
in
out
ins
jmp
call
int3
cli
mov
inc
test
xor
ret
test
ins
outs
mov
push
dec
inc
xchg
xlat
bnd
hlt
dec
daa
ficomp
xor
xchg
sahf
push
loope
and
retf
dec
sbb
adc
imul
mov
les
das
adc
rcl
add
pop
xor
mov
pop
shr
mov
sbb
jl
mov
lock
(bad)
data16
rcl
les
sbb
jno
rcl
lea
gs
in
cli
cdq
push
clc
sbb
and
aas
pop
jg
jp
xchg
ss
cmp
into
sub
movs
fldcw
mov
mov
(bad)
arpl
sbb
iret
repnz
sub
push
sti
ret
jp
dec
ret
leave
test
push
jno
cmp
xchg
or
je
push
or
dec
cdq
cwde
cli
mov
fnsave
std
mov
ret
xchg
push
dec
call
in
jmp
mov
cs
push
aas
inc
push
cwde
jle
mov
(bad)
jb
xor
dec
enter
adc
mov
inc
aad
sub
cdq
lock
sbb
pop
ss
out
es
les
pop
adc
arpl
fs
out
jno
data16
into
xchg
mov
add
add
dec
arpl
loop
mov
fld
jmp
adc
add
jl
fmulp
sub
retf
popf
xlat
loopne
adc
push
xchg
jae
(bad)
fadd
ins
in
sub
imul
loopne
test
enter
or
lods
inc
out
sbb
popf
push
daa
aam
sti
imul
xor
and
leave
mov
and
pusha
xor
jne
xchg
jae
adc
sti
and
ficomp
mov
jmp
pop
ins
fs
dec
jmp
loopne
xor
in
retf
cld
inc
aas
and
fdivr
test
jp
outs
inc
je
cmp
idiv
test
add
inc
enter
adc
imul
dec
dec
and
(bad)
fmul
ja
cmp
sbb
jns
ret
or
rcl
out
out
xchg
mov
dec
cmp
neg
mov
push
sar
xchg
sub
pop
dec
xor
rcr
push
jno
push
push
mov
out
pop
mov
or
push
aam
ret
push
arpl
cmp
or
jp
inc
dec
ror
add
inc
cmc
jle
aam
inc
test
sbb
aad
test
fs
ret
or
mov
sahf
or
rol
mov
out
lock
xchg
ret
jp
mov
jl
mov
into
add
and
mul
dec
pop
add
mov
or
repz
popa
jne
movs
sbb
or
dec
dec
adc
out
int
stc
adc
jle
test
mov
inc
mov
mov
xor
jo
mov
cmp
mov
add
pop
adc
xor
(bad)
xchg
in
jbe
pop
sub
fxch
dec
call
pop
and
aaa
daa
mov
out
xchg
lods
aad
imul
mov
lods
aas
enter
inc
(bad)
hlt
and
mov
fadd
jle
mov
jb
jg
xchg
push
int3
xchg
hlt
repnz
rcr
test
and
add
inc
mov
stos
lahf
sbb
(bad)
aad
popa
mov
cmp
lds
or
or
push
rcl
jbe
ins
mov
inc
push
or
(bad)
jle
retf
or
dec
bound
or
push
popf
sbb
lods
and
cli
and
arpl
bound
int
neg
cmc
sub
mov
cs
sahf
movs
push
lock
inc
sub
xchg
repz
into
dec
dec
in
hlt
lods
pop
rcr
mov
je
jbe
fmul
mov
cdq
lea
jb
pop
dec
xor
push
inc
push
mov
(bad)
in
jo
(bad)
js
test
sub
addr16
push
imul
xchg
push
or
add
mov
mov
lods
pop
and
pushf
les
xchg
dec
xchg
dec
gs
fmul
xor
out
sbb
dec
outs
and
lods
xchg
mov
xlat
xchg
aam
in
test
scas
xor
push
pop
stos
jge
push
popf
(bad)
into
inc
outs
addr16
mov
(bad)
mov
and
cmp
push
push
mov
lods
sub
sub
push
mov
out
call
gs
pop
ins
in
lahf
fisttp
add
xchg
adc
test
pop
hlt
adc
dec
outs
sbb
adc
push
adc
mov
xchg
jno
add
add
lock
xchg
stos
loop
sbb
add
sbb
add
enter
clc
mov
retf
xor
sub
cmc
sar
xchg
test
aaa
pop
pop
bound
mov
es
add
dec
xor
jmp
push
ja
(bad)
xchg
mov
jns
cmp
mov
push
xchg
dec
daa
call
cmc
xchg
stos
dec
xor
push
inc
sub
pop
pop
loop
jp
neg
sar
dec
push
mov
das
push
rcr
xlat
mov
xchg
and
dec
iret
imul
mov
sub
and
mov
lods
or
cmp
iret
lock
mov
cmp
xor
loopne
stc
aam
xor
retf
movs
jl
pushf
add
sbb
in
and
pop
or
iret
ds
push
mov
pop
sbb
pop
mov
shl
fcomi
repnz
sar
dec
(bad)
sub
dec
mov
mov
shl
es
je
jp
inc
js
inc
push
adc
or
out
push
fucomip
ds
daa
or
mov
jmp
sub
icebp
loopne
sahf
adc
mov
add
jmp
push
out
or
pop
push
imul
push
ins
movs
sti
mov
data16
aam
cmp
mov
gs
call
adc
aam
sub
retf
clc
and
test
dec
iret
(bad)
popa
mov
mov
xchg
pop
out
arpl
xchg
je
sbb
test
xlat
xchg
sub
scas
adc
mov
adc
pop
mov
iret
xchg
mov
jge
push
outs
hlt
popf
cmc
push
xor
adc
in
mov
cmp
cmps
inc
sbb
mov
xor
mov
fimul
inc
mov
mov
push
cmc
cvtpi2ps
out
or
sub
add
mov
jmp
sub
jle
xlat
cmp
mov
pop
cmp
sbb
sub
pop
mov
add
int
div
in
cmps
push
leave
jnp
or
mov
xor
push
test
and
xor
hlt
aad
jno
pop
leave
ss
stos
call
inc
rol
xchg
and
mov
cwde
pushf
(bad)
sbb
push
(bad)
xchg
or
push
lods
hlt
cmps
or
mov
sub
les
bnd
fdivr
pop
nop
add
adc
retf
push
or
or
dec
jb
push
faddp
mov
sub
rol
cmp
add
pusha
xor
cmp
cmp
adc
and
ins
not
cmps
mov
fisub
and
push
push
add
icebp
cmp
and
fiadd
retf
popa
adc
pop
nop
jns
lea
push
or
jp
sub
pop
inc
cld
jmp
jmp
mov
dec
mov
xor
dec
push
inc
lea
test
fmul
inc
cs
dec
sub
inc
ss
data16
pop
fcom
adc
pusha
or
push
push
into
ss
pop
jmp
retf
scas
inc
mov
(bad)
rcr
lea
hlt
or
lea
int
mov
push
call
xor
shl
lock
rol
test
cmp
imul
xchg
sbb
and
jle
mov
ja
adc
stc
ss
fwait
xchg
mov
cmp
inc
sbb
mov
and
sbb
div
and
popf
sar
mov
cmc
add
out
ja
pop
mov
mov
hlt
fnstenv
test
pop
test
loope
dec
mov
jmp
xchg
pushf
xchg
lahf
inc
jb
sahf
sub
test
mov
sbb
loop
fstp
jecxz
push
js
data16
xchg
pushf
sub
dec
and
ds
jo
or
movs
aam
cmp
jno
enter
fbstp
cmp
in
outs
add
lds
(bad)
mov
jecxz
sbb
hlt
dec
and
xor
xchg
call
daa
adc
mov
push
cli
push
sahf
movs
pop
push
mov
adc
sub
and
push
xchg
push
test
push
stc
es
mov
push
sub
in
or
and
retf
dec
dec
fcom
inc
mov
push
xlat
cmp
or
xchg
cmp
ror
push
pop
mov
push
adc
shr
sbb
ja
sub
xacquire
retf
or
std
inc
cld
mov
rcl
sbb
or
cmp
sbb
cdq
pop
jecxz
loopne
jno
into
mov
mov
jmp
mov
adc
add
or
push
xchg
ror
test
sbb
dec
xchg
das
or
dec
push
aad
fs
sbb
jp
out
jb
pop
push
jno
add
lock
dec
ss
fwait
and
mov
and
and
out
cmps
inc
add
xor
jns
mov
gs
mov
adc
int
or
ret
clc
les
(bad)
jl
cmp
lahf
std
div
test
idiv
lds
stc
jbe
xor
and
dec
test
pop
fimul
or
jns
pop
cmc
xchg
push
push
shl
mov
mov
mov
(bad)
rcr
push
fwait
mov
pop
sbb
ins
mov
mov
ins
jge
and
dec
and
push
push
ret
xor
stos
mov
sbb
retf
lods
fild
xor
sub
mov
jnp
sub
fldenv
ins
mul
dec
ins
adc
(bad)
addr16
xor
xchg
cmp
adc
jmp
loop
mov
addr16
scas
sub
mov
push
test
mov
ins
mov
mov
sbb
in
mov
xchg
xchg
cli
movs
inc
cmc
inc
clc
jge
pop
int
fs
fmul
push
lods
imul
into
xor
aaa
mov
jmp
adc
jg
jno
stos
and
leave
jb
fcom
push
repnz
cmc
sbb
out
push
and
leave
jno
push
in
or
shl
fcomp
pop
jo
das
dec
sub
mov
sbb
mov
mov
jg
add
pop
fs
imul
es
sub
xchg
pop
imul
jl
xor
or
pop
aaa
and
call
call
into
(bad)
xor
cmps
push
fist
retf
push
les
xor
out
stc
xlat
inc
pushf
jmp
sbb
pop
scas
arpl
xor
fs
sahf
js
lods
jle
sub
sub
push
sub
test
test
cmp
pop
aas
push
and
mov
gs
aam
inc
les
pop
sbb
in
dec
mov
js
inc
lds
push
pop
sbb
mov
mov
sub
ror
pop
stc
pop
mov
xor
xchg
stos
aam
xor
cwde
cmps
arpl
mov
fsubr
mov
dec
jo
sbb
jmp
stc
imul
mov
(bad)
mov
ins
outs
icebp
mov
jbe
retf
inc
test
js
mov
cmp
sub
mov
icebp
cmp
add
mov
sub
mov
mov
cmp
dec
inc
rol
inc
adc
adc
clc
mov
xor
add
push
retf
nop
rol
cdq
mov
mov
outs
xchg
push
adc
sbb
rol
lock
jg
test
les
jmp
mov
aaa
mov
aaa
(bad)
into
fcomp
sahf
jge
(bad)
mov
cmp
jecxz
test
and
repnz
mov
ins
cmp
mov
jbe
pop
mov
dec
in
lods
scas
push
and
(bad)
adc
cdq
enter
pop
and
sub
lock
xchg
adc
mov
dec
fnstcw
jmp
outs
pop
adc
rcr
je
ds
add
add
jecxz
add
xchg
into
leave
leave
inc
inc
sbb
mov
stc
(bad)
jbe
mov
pusha
cli
mov
mov
add
fwait
mov
sahf
daa
es
arpl
and
and
popf
stc
cmps
xchg
xchg
ret
cmps
xchg
sub
push
mov
ret
lahf
(bad)
cmc
call
inc
jle
or
shl
arpl
movs
dec
xor
(bad)
sub
dec
arpl
dec
push
push
into
inc
cwde
ret
add
xchg
cmp
jb
pop
cmp
adc
or
cmp
cwde
lock
loop
scas
stos
sub
pusha
mov
lods
cmc
cli
dec
bound
rcl
leave
clc
in
push
ss
lea
(bad)
cmps
fs
and
cmps
scas
xlat
in
out
sbb
xchg
or
and
xor
or
in
lods
mov
jb
inc
rol
test
push
imul
pop
rol
mov
inc
lods
sahf
es
xor
push
add
xor
xchg
das
xor
mov
fcomp
ja
dec
dec
jecxz
cmp
test
cdq
cmc
enter
mov
cmps
fadd
add
sbb
sub
jno
sub
adc
int3
pop
pop
icebp
xor
outs
fwait
sub
add
sbb
std
mov
inc
call
loop
(bad)
icebp
imul
ins
add
shl
test
stos
aam
ret
dec
jmp
jns
jmp
pop
call
cmp
xor
mov
hlt
inc
push
push
xor
mov
lods
fs
stos
les
cmp
xchg
mov
mov
dec
mov
inc
jmp
imul
stos
or
mov
and
xchg
dec
push
pop
pop
xchg
or
daa
mov
ret
fdiv
pop
push
push
xchg
arpl
mov
add
nop
mov
loopne
push
xlat
inc
xchg
scas
inc
or
push
push
sbb
ins
popa
jmp
or
cli
repnz
aam
popf
and
jno
ss
sar
pop
leave
(bad)
cdq
inc
sbb
mov
cmp
sti
popf
stos
jg
clc
test
cdq
and
push
fwait
(bad)
and
mov
mov
inc
mov
cmp
outs
or
mov
add
fs
and
retf
fdivr
imul
repnz
cmp
cmp
aaa
inc
out
(bad)
lods
xchg
dec
or
dec
call
xchg
xchg
cdq
push
adc
sub
sbb
jge
pop
rcl
jmp
push
or
adc
xlat
das
lock
or
adc
fsub
test
mov
mov
cmp
mov
pop
sub
dec
sahf
add
ret
xor
and
xchg
int3
movs
sbb
or
push
in
inc
adc
out
jae
and
aas
and
or
sbb
lahf
icebp
sub
mov
mov
cld
inc
dec
out
pop
pop
mov
lods
add
xor
xchg
enter
fdiv
jns
cmps
push
(bad)
repz
(bad)
out
cmc
test
in
call
sub
in
or
mov
mov
int3
jb
xchg
mov
sbb
test
xchg
cmp
pop
sbb
push
inc
fcomi
mov
jge
and
std
arpl
cmps
mov
popf
push
inc
dec
and
imul
jle
scas
xor
mov
xchg
cmp
mov
xor
xchg
ins
add
outs
adc
pop
mov
pop
jecxz
fistp
imul
out
mov
jge
push
and
jns
xchg
push
call
mov
sbb
sbb
leave
cli
mov
cmp
push
and
pop
mov
inc
fwait
jb
sahf
dec
or
ffree
mov
or
into
mov
mov
jnp
rol
mov
ficom
(bad)
jno
cwde
or
js
inc
jecxz
sub
ss
dec
mov
in
imul
xchg
fcmovnbe
test
out
jg
push
popf
xor
ror
add
inc
imul
jnp
fistp
dec
ins
adc
je
cmps
mov
addr16
mov
(bad)
int
rcl
enter
fs
or
jmp
in
push
bound
(bad)
adc
fld
jmp
imul
arpl
stc
je
mov
in
aaa
fisub
xchg
inc
add
or
xor
pusha
mov
in
inc
gs
pop
lock
xchg
sbb
jns
addr16
and
aaa
sbb
and
sbb
lds
neg
fndisi(8087
and
inc
mov
cmp
dec
or
cmc
jmp
push
call
push
add
popf
call
cld
fisubr
mov
xor
push
retf
jns
js
stos
inc
pop
lock
inc
inc
adc
test
dec
sbb
dec
ins
mov
and
pop
pop
mov
(bad)
ja
push
xchg
adc
jo
pop
sub
add
pop
ret
xchg
mov
shl
movs
sub
frstor
leave
fwait
sahf
or
mov
xchg
xchg
push
add
scas
aas
push
dec
cs
in
cld
pusha
mov
dec
cmp
push
rol
ins
mov
(bad)
cmp
push
mov
fwait
(bad)
in
cmp
or
add
out
jmp
into
sub
jmp
loop
xor
adc
(bad)
std
cli
fwait
mov
jmp
inc
mov
push
int3
inc
mov
ja
fistp
enter
add
mov
leave
adc
call
jno
call
sbb
lahf
sub
lods
jp
fist
jmp
cmp
sub
mov
jmp
daa
dec
sahf
jb
lahf
sbb
call
jmp
aas
mov
mov
lock
jle
cmp
rcl
jmp
pop
dec
mov
xchg
jl
test
inc
and
inc
pusha
sbb
out
inc
mov
cmps
cmp
xor
mov
inc
fisttp
inc
sub
rcl
neg
test
inc
scas
and
(bad)
je
and
shr
loopne
inc
lahf
adc
lods
jns
lds
xor
push
out
retf
out
sub
xor
xchg
add
push
cmp
cmps
call
fistp
jmp
sub
call
mov
mov
jmp
ins
cli
cld
cld
mov
pop
bound
ins
loop
push
jmp
and
ss
xchg
xchg
jne
mov
push
arpl
clc
imul
xor
fist
and
leave
pushf
clc
jnp
or
test
xchg
jl
mov
mov
and
es
fwait
jl
mov
inc
pop
shl
dec
inc
xor
ja
ja
cmps
adc
ret
or
stos
or
dec
loopne
call
retf
jbe
push
mov
pusha
dec
enter
cmp
das
in
dec
mov
arpl
sbb
retf
xchg
adc
dec
sti
and
adc
jl
adc
bound
jmp
xor
scas
mov
or
pop
test
dec
pop
pop
sbb
adc
fnstcw
jo
hlt
and
and
sub
cwde
add
and
and
adc
add
xor
cdq
adc
out
sub
mov
sub
mov
cmovne
mov
shl
jnp
retf
pop
arpl
jmp
movs
leave
push
pop
lahf
(bad)
cmps
cdq
mov
or
mov
xchg
(bad)
cld
div
sbb
pop
mov
sahf
popw
push
push
lahf
or
push
(bad)
xchg
xchg
lods
push
jp
dec
and
imul
adc
push
adc
mov
jge
outs
mov
jnp
pop
dec
xchg
add
test
jmp
ins
inc
ror
loop
dec
and
repnz
cwde
daa
test
in
and
lahf
hlt
push
sti
dec
push
lods
fs
arpl
sub
imul
int
jmp
ja
jno
aad
pop
xchg
mov
stos
adc
pop
or
mov
push
pop
push
hlt
add
fs
pop
mov
push
and
bound
adc
jbe
push
push
jge
dec
pop
pushf
push
jmp
push
mov
in
cli
inc
fbld
dec
stos
mov
stos
call
dec
hlt
mov
push
cli
and
add
dec
imul
into
lds
xor
and
and
add
mov
ret
push
stos
mov
div
neg
or
enter
sub
mov
mov
ins
push
push
and
imul
push
xor
call
adc
int3
or
dec
mov
(bad)
push
mov
aas
ja
jl
xor
leave
out
mov
jae
movs
stos
jae
pop
push
push
test
test
push
shl
mov
fistp
adc
mov
jno
jle
and
adc
cli
outs
gs
sub
mov
(bad)
and
cmp
jmp
or
loope
rol
mov
movs
mov
icebp
xor
push
dec
push
ins
call
jp
add
leave
xor
ror
jo
lock
mov
mov
ret
dec
sbb
cmp
sets
das
cmp
mov
int3
mov
lods
retf
jae
arpl
lock
dec
pop
ror
es
push
pop
push
xchg
jb
es
ror
jae
add
in
push
out
jle
movs
mov
sub
movs
xor
add
mov
xor
cwde
data16
scas
rcr
add
js
mov
xor
retfw
fld
cmp
test
ror
jo
ror
or
std
sub
mov
or
xchg
fsubp
sbb
aam
pop
rcr
add
iret
test
out
into
mov
sub
lock
idiv
dec
addr16
xor
xor
fmul
cmp
lds
push
cmps
(bad)
sub
pusha
jnp
std
dec
pop
stos
jb
std
mov
add
scas
pop
jo
in
dec
lods
fiadd
(bad)
shr
mov
aaa
and
int3
fwait
movs
sti
pop
dec
jge
xor
ja
add
adc
cmp
adc
popf
les
test
jecxz
push
gs
fcomp
repnz
ss
leave
xchg
icebp
push
cmp
dec
in
xchg
cmps
aaa
sbb
sahf
jno
and
add
push
dec
lds
adc
xor
dec
cmp
ror
aad
mov
fisttp
out
cmp
xchg
adc
cdq
mov
inc
dec
cmp
add
(bad)
arpl
push
aaa
dec
(bad)
push
push
fs
cli
ror
inc
mov
pop
pop
mov
ret
add
int
dec
mov
or
push
inc
repnz
iret
xchg
cmp
and
cli
xchg
mov
stc
cmps
and
adc
and
stos
cmp
jp
mov
push
(bad)
fmul
sub
cmp
mov
popf
jle
pop
popa
sub
or
sar
retf
out
dec
push
dec
pop
push
jne
mov
(bad)
push
and
push
add
in
adc
lods
sub
pop
sti
jmp
pop
fimul
rol
loopne
fcomi
in
jnp
push
sar
pop
pop
adc
mov
pop
imul
pop
mov
(bad)
icebp
test
sbb
and
or
mov
adc
jae
mov
imul
mov
loop
or
push
sub
int
adc
pop
dec
rcl
outs
push
out
mov
jnp
add
pop
xor
add
outs
mov
sahf
in
(bad)
movs
or
dec
or
mov
mov
aad
mov
sbb
std
dec
(bad)
sub
scas
scas
sbb
cmp
les
shr
inc
pushf
fild
add
sar
jp
sar
mov
add
mov
xchg
dec
jle
xchg
addr16
push
out
xor
dec
clc
adc
mov
push
fwait
rol
mov
mov
scas
and
sbb
sub
imul
fsubrp
mov
hlt
scas
inc
jmp
aad
out
jnp
dec
rcl
or
push
jl
push
into
data16
mov
int
(bad)
in
inc
mov
cld
sbb
test
ror
sub
shl
jns
stc
repz
push
mov
xor
sub
and
icebp
in
arpl
and
jle
or
sbb
inc
stos
cmp
mov
neg
add
aas
fbld
fadd
imul
clc
es
xchg
push
dec
nop
imul
loop
dec
jb
inc
adc
imul
dec
adc
lea
aad
(bad)
sbb
les
mov
xchg
adc
popa
cmc
imul
inc
outs
(bad)
stos
dec
mov
mov
bound
cmc
add
fisub
not
jp
and
int
ds
bound
xchg
sbb
js
mov
shr
push
add
pop
frstor
dec
sub
cmp
pop
or
pop
cwde
xor
add
ja
stos
rol
cs
sbb
fdivr
cmp
cld
test
dec
push
stos
(bad)
retf
xchg
ja
xor
(bad)
js
fs
pop
arpl
xor
or
cld
or
cmps
adc
jnp
pop
fidiv
jb
mov
jb
push
fstp
inc
rcr
ss
movs
xchg
sar
mov
shl
call
xor
jp
sbb
mov
push
cli
call
bound
cmp
(bad)
mov
add
or
je
test
mov
stos
mov
mov
pop
movs
sbb
mov
pop
dec
mov
jge
and
imul
arpl
xchg
jg
mov
(bad)
push
lahf
xchg
adc
mov
dec
cmp
lds
sbb
es
sub
mov
xchg
lock
cs
or
dec
push
mov
sub
cmp
ins
repnz
out
movs
dec
jnp
aaa
pop
sbb
jae
mov
xor
cmp
push
retf
push
(bad)
sub
jge
fwait
jmp
ins
cmp
stc
test
xchg
add
je
ret
pop
idiv
sets
in
mov
jg
jb
xor
mov
adc
pop
xor
xchg
dec
jg
fcomp
inc
mov
repz
stos
mov
xchg
push
pusha
mov
repnz
into
outs
jno
cli
mov
shl
rol
fcom
fmul
adc
jle
jg
mov
inc
xor
into
xor
int
std
jne
jp
adc
xor
loop
int3
ins
pushf
call
lea
push
xchg
pop
cmp
mov
sub
imul
sub
add
sbb
add
cwde
or
jae
repnz
lea
loop
or
or
pusha
pop
pop
fiadd
and
pop
cli
and
fistp
jbe
aam
daa
int3
repnz
in
jmp
dec
pop
out
inc
mov
cmps
rol
push
movs
ds
mov
add
mov
fisubr
dec
pop
sbb
(bad)
sub
data16
es
repz
mov
or
sub
ins
clc
clc
lock
pop
arpl
mul
cdq
ds
ret
pop
ja
cmp
loope
retf
aaa
lock
xor
xchg
cmp
cli
rol
fcmovb
jl
cmps
data16
pop
fdiv
push
jo
push
mov
hlt
dec
jne
jae
inc
and
dec
pop
pusha
inc
pop
cmp
xchg
inc
in
imul
push
lds
jmp
mov
jne
movs
stc
jge
enter
xchg
call
pop
mov
fbstp
cmp
inc
sbb
and
sbb
inc
xor
fimul
or
add
sbb
retf
mov
or
and
push
in
add
lods
je
ins
push
ret
ror
xchg
pop
es
call
lahf
mov
or
pop
xchg
push
scas
inc
pop
inc
push
sbb
or
xchg
pop
test
mov
fcmovne
sub
in
jle
(bad)
lock
aaa
cmps
sub
nop
adc
test
mov
fmul
inc
or
sar
mov
sahf
outs
imul
mov
nop
jns
xchg
push
shl
(bad)
fidiv
(bad)
jo
push
(bad)
mov
arpl
dec
mov
and
lahf
pop
dec
push
mov
xor
push
hlt
jp
cmps
scas
pop
ins
xor
mov
jmp
mov
mov
xlat
sbb
cmp
adc
jge
pop
stos
dec
sar
aad
mov
mov
ret
clc
(bad)
mul
ja
jb
icebp
fwait
jp
(bad)
sti
and
push
pop
cmps
xchg
repnz
in
add
jle
hlt
xchg
test
inc
xchg
nop
jecxz
lea
daa
inc
sti
xor
in
bound
test
out
lock
pusha
pop
iret
mov
push
push
pop
pusha
in
mov
loope
or
popf
ror
add
mov
and
js
cmc
adc
xchg
sbb
jmp
jne
and
ror
mov
jg
mov
dec
jle
out
lods
ror
(bad)
adc
stc
mov
lahf
pop
fisttp
sbb
mov
cwde
mov
nop
leave
hlt
call
sbb
adc
test
(bad)
(bad)
(bad)
xor
jae
(bad)
sub
scas
sar
xor
int
fwait
sub
jge
adc
sar
mov
xchg
jns
mov
scas
jbe
loope
out
and
xor
mov
mov
mov
out
jge
retf
or
jae
mov
mov
(bad)
loop
lds
mov
push
push
rol
bound
pop
aas
movs
push
shl
(bad)
jb
lds
or
fild
lock
mov
push
mov
mov
lock
push
mov
fs
inc
mov
ficom
inc
ret
repnz
nop
cmp
adc
add
xchg
sbb
stc
add
dec
xchg
adc
push
xchg
sbb
dec
push
test
and
mov
pushf
or
fld
xchg
sub
mov
mov
sar
(bad)
fst
xchg
pop
out
jbe
cdq
stos
sahf
mov
test
aaa
inc
sbb
out
xor
fdivrp
push
push
mov
and
push
pop
mov
cmps
test
mov
xor
outs
and
rol
shl
movs
std
dec
repz
dec
pusha
int3
stos
ret
push
shl
retf
cmp
mov
mov
push
push
add
lock
in
test
add
outs
dec
xor
cmp
cmp
shl
enter
dec
add
xor
sar
aaa
das
pop
jg
cmp
adc
push
enter
out
lods
les
jne
add
xlat
enter
adc
jmp
pushf
mov
je
mov
push
push
pop
mov
fadd
aas
mov
xor
adc
fisubr
push
shl
les
adc
mov
xchg
cmp
jnp
jmp
movs
sbb
mov
cli
cwde
or
inc
mov
lods
mov
repz
fld
lahf
xor
cmp
jmp
pushf
mov
jns
ja
cld
ins
cli
fiadd
pop
inc
mov
and
jns
das
mov
pop
movs
push
or
jns
xlat
jecxz
ror
out
scas
cmps
bound
sbb
mov
dec
inc
imul
mov
test
mov
pushf
mov
enter
and
or
shl
enter
aaa
mov
cmp
ins
pop
and
ss
dec
stos
jmp
shl
ja
scas
pop
sbb
pop
push
ret
sub
loope
fisttp
jae
retf
pop
sub
jne
push
test
mov
data16
mov
in
out
test
and
inc
and
mov
jge
fsub
in
mov
pushf
mov
psubusw
out
xor
sub
call
iret
retf
retf
inc
mov
sbb
or
aam
inc
ror
mov
pop
(bad)
in
das
je
xchg
pop
cmp
in
sub
fistp
and
mov
(bad)
sbb
push
mov
mov
leave
das
into
mul
popa
movs
inc
ret
mov
mov
xchg
test
adc
into
lahf
xchg
mov
ins
(bad)
push
sbb
mov
xchg
mov
ret
imul
jmp
ja
inc
xchg
lods
mov
add
pmaxsw
pop
arpl
add
mov
call
test
cmp
mov
adc
xchg
inc
dec
cmp
icebp
ret
out
popf
rol
arpl
cs
cmp
sti
repnz
pop
xor
mov
sti
xor
jae
aam
call
lahf
cmps
test
cmp
dec
ficom
adc
and
dec
shl
add
adc
xchg
idiv
push
pop
or
std
sub
push
xlat
push
bound
add
retf
dec
jns
in
(bad)
test
cmp
les
inc
lahf
lods
adc
imul
cwde
in
or
test
mov
popa
adc
movs
mov
loop
add
pop
jb
push
or
daa
mov
add
xor
mov
sahf
mov
retf
and
mov
(bad)
jl
xor
mov
sbb
adc
nop
mov
leave
dec
into
inc
in
movs
inc
adc
in
(bad)
stos
cld
add
(bad)
popa
imul
aaa
ja
stos
or
dec
push
out
push
mov
cmp
mov
ds
jmp
push
mov
jne
cld
xchg
ficomp
push
movs
sar
ja
(bad)
push
mov
das
xor
dec
pushf
sbb
ret
xchg
loopne
das
push
push
fidivr
mov
xor
repz
xchg
in
sti
pop
sub
jo
enter
jmp
xchg
fwait
enter
mov
xchg
pop
ror
movs
inc
cmp
cmp
jle
sahf
cmp
adc
loope
enter
lock
outs
jno
jae
jo
pushf
cmp
cli
add
icebp
sub
ja
sbb
add
cmp
add
and
sti
outs
mov
bnd
call
arpl
jo
cmp
lock
(bad)
dec
xlat
xchg
dec
lock
push
mov
nop
and
iret
dec
sbb
out
or
lock
fisubr
fdivr
ja
out
add
int
imul
add
push
mov
nop
pop
mov
push
inc
stc
adc
mov
loopne
push
xchg
mov
ja
cmp
inc
xchg
js
pusha
cmp
and
inc
lea
mov
or
aaa
push
mov
rol
out
je
nop
dec
bound
ds
sub
push
mov
popa
xchg
sbb
sbb
mov
sub
cdq
jbe
ja
(bad)
das
dec
sahf
stc
ret
sti
jmp
fiadd
inc
into
add
xrelease
je
jmp
ins
push
cmp
and
jl
add
mov
push
xchg
mov
ror
sub
sub
xlat
lods
ins
xor
hlt
retf
ret
push
push
hlt
sbb
mov
shl
sub
int
jge
ins
shr
sti
push
sahf
fbstp
push
daa
inc
mov
mov
inc
loopne
xor
mov
in
add
mov
aas
xor
jecxz
jecxz
cli
aam
jmp
push
mov
add
out
cmp
jmp
outs
pop
fwait
xchg
push
sbb
mov
sub
mov
leave
fmulp
xor
lock
ds
push
repnz
rol
fcom
inc
fild
in
xor
in
xchg
leave
xchg
mov
rcr
dec
ins
shl
jl
push
xchg
stos
mul
mov
xor
les
sub
pop
cmp
popf
aam
add
test
xchg
mov
add
fstp
cdq
aam
xor
push
add
ds
ja
xchg
jmp
mov
int3
repz
mov
jae
cmp
cmp
jg
xchg
jne
sub
jns
adc
mov
mov
repnz
into
sahf
ins
jno
les
iret
and
mov
repz
sbb
mov
xchg
jg
gs
and
popf
sbb
addr16
mov
mov
push
or
(bad)
je
add
xor
divps
mov
jmp
std
mov
jo
push
jmp
jbe
pop
ins
sub
retf
sub
call
ud0
adc
cmc
das
loopne
ds
push
cmp
(bad)
cli
inc
dec
xchg
and
add
(bad)
inc
jmp
pop
sbb
ret
rol
ret
cli
aam
loop
inc
clc
das
xchg
push
sti
dec
cli
mov
or
jle
pop
add
jle
jbe
pop
arpl
dec
pop
in
std
iret
mov
(bad)
idiv
jb
mov
or
(bad)
je
fs
or
mov
mov
dec
stc
into
imul
nop
cmp
jbe
call
xchg
loopne
sbb
pop
cmp
or
xchg
add
xrelease
fidivr
dec
adc
push
in
mov
sub
fild
(bad)
dec
aaa
push
fld
js
sub
(bad)
imul
bound
jp
add
fcom
cwde
adc
imul
pushf
mov
adc
push
jb
jbe
es
adc
xlat
sub
mov
push
ret
(bad)
add
iret
add
sbb
pop
das
jge
scas
nop
push
stos
sbb
fninit
add
jge
xor
popa
push
jne
or
inc
jmp
sub
push
xchg
lds
cmps
addr16
imul
add
cmp
jae
clc
xchg
pop
cmp
mov
and
arpl
call
xor
pop
fild
(bad)
lods
retf
div
pop
lods
repz
xor
sbb
ja
outs
movs
fist
adc
mov
mov
xchg
ror
mov
loope
outs
adc
add
scas
push
add
push
in
mov
mov
inc
daa
ja
push
out
dec
jne
push
aad
sub
test
or
sub
mov
cmc
sub
popa
iret
add
data16
and
clc
cmp
loope
push
fwait
sar
xchg
jmp
jg
ds
gs
adc
in
and
pop
out
adc
pop
jns
pop
inc
outs
add
scas
jge
cmp
ja
ss
cmp
add
int
loop
push
mov
jl
add
dec
in
dec
pusha
sub
pop
sbb
push
mov
aas
in
fneni(8087
cdq
jae
adc
xchg
push
dec
mov
and
add
mov
mov
fild
sbb
out
xchg
ins
stc
inc
push
lahf
rcl
int
jne
loopne
int
movs
cmp
dec
xor
pop
scas
push
in
cmp
out
pop
push
dec
xchg
sub
cmps
loopne
jb
int
test
cli
jecxz
cdq
push
or
lods
dec
loope
popf
inc
test
sub
mov
cmp
mov
inc
adc
mov
icebp
add
dec
sahf
retf
shr
(bad)
fistp
clc
dec
inc
jns
(bad)
xor
test
(bad)
inc
lahf
dec
mov
push
sahf
xchg
lods
cmp
test
xchg
test
out
push
inc
mov
add
inc
sbb
leave
mov
push
or
push
mov
ror
cld
cmp
mov
cmp
mov
xchg
ja
jmp
retf
popf
adc
sbb
sub
jp
pop
adc
scas
mov
sub
ins
iret
adc
leave
pusha
aad
xchg
xchg
cwde
xchg
and
retf
mov
pop
icebp
add
fwait
popf
sbb
adc
stos
dec
lods
push
icebp
js
sbb
outs
sti
cmp
into
mov
inc
mov
scas
cwde
fs
test
sub
xchg
cli
test
or
mov
adc
sub
clc
into
pop
(bad)
and
dec
xlat
ror
sahf
sbb
(bad)
bound
loop
adc
ins
xchg
push
addr16
fsub
sahf
push
adc
mov
fs
out
retf
mov
jmp
scas
ss
js
data16
rcl
repz
aaa
fsubr
xor
stc
or
(bad)
(bad)
push
mov
add
aaa
popf
das
inc
cmp
cmps
rol
push
arpl
dec
test
add
adc
jg
pop
mov
call
(bad)
adc
mov
push
cmp
jbe
loopne
inc
aaa
repz
mov
rcr
pop
lods
jo
lods
mov
arpl
or
sub
iret
mov
xchg
out
movs
shl
scas
mov
repnz
pop
pop
in
sbb
cld
and
xchg
mov
cld
aam
adc
add
imul
inc
sub
test
pop
mov
adc
std
movs
inc
sbb
lahf
inc
xor
call
add
fsubrp
dec
fldenv
(bad)
les
aad
pop
pushf
fadd
in
xlat
outs
movs
shl
add
cmp
pusha
pop
in
(bad)
jle
pmaxsw
in
leave
adc
or
mov
aaa
(bad)
or
sbb
mov
out
xchg
shr
je
mov
fsub
xor
push
adc
aam
addr16
push
xor
in
add
jecxz
sbb
jo
mov
jne
movs
sub
ficomp
xor
xchg
jb
mov
pop
ds
daa
stos
mov
xchg
jae
int3
sbb
mov
(bad)
rep
(bad)
(bad)
xor
iret
mov
mov
cdq
adc
pop
xor
into
(bad)
nop
addr16
add
inc
mov
pop
mov
cli
dec
retf
test
(bad)
iret
sub
out
or
mov
and
addr16
fistp
retf
inc
jmp
(bad)
adc
adc
xchg
rep
test
cs
cmps
ror
xor
gs
inc
in
pavgb
loopne
pop
mov
jbe
pusha
test
pop
bound
adc
and
sbb
xlat
mov
sub
sub
jb
mov
jmp
mov
mov
pop
(bad)
cli
adc
mov
xor
inc
retf
sbb
test
cmp
sbb
mov
test
jg
mov
loope
enter
xchg
cmps
fucomi
pop
out
adc
jbe
lods
jae
retf
push
pop
xchg
mov
sub
pushf
pusha
and
push
pop
cmps
ja
sub
outs
jle
and
enter
test
mov
pop
sbb
cdq
jge
xor
add
xor
cmps
ror
idiv
and
push
pop
pop
shl
push
sbb
and
nop
jecxz
jmp
mov
mov
mov
stos
cli
enter
dec
xor
in
sub
in
ins
lock
stc
inc
inc
mov
push
dec
pushf
mov
mov
push
inc
and
push
cli
mov
(bad)
pop
test
inc
sbb
enter
repnz
cmc
(bad)
fnstenv
dec
and
push
nop
add
xchg
or
out
mov
fmul
std
inc
mov
or
xchg
adc
jbe
movs
scas
dec
iret
inc
enter
inc
sbb
or
repz
mov
fwait
mov
mov
push
aad
scas
cwde
(bad)
out
scas
push
leave
xor
push
jmp
fs
pop
inc
mov
inc
lock
inc
retf
movs
std
mov
and
inc
aam
cmp
bound
push
ja
pop
adc
xor
out
(bad)
retf
push
xor
pop
scas
sbb
push
imul
adc
mov
xor
in
out
mov
inc
call
(bad)
(bad)
xlat
ja
jmp
sub
and
mov
sti
stos
mov
xor
neg
mov
mov
aas
(bad)
push
push
addr16
loope
cdq
das
mov
pop
push
outs
jae
shl
fcomp
add
popa
gs
and
hlt
adc
pop
fs
jmp
adc
data16
fiadd
or
stos
loopne
das
ret
cmp
push
and
aad
cwde
adc
pop
mov
mul
test
rol
lock
push
faddp
dec
ret
or
add
cmp
push
cmp
stos
or
push
repz
js
inc
lock
xchg
adc
push
ins
push
or
pusha
xchg
jb
pop
push
jbe
leave
push
cmp
push
cmps
inc
jecxz
push
sbb
and
jecxz
(bad)
push
mov
lock
xchg
adc
push
shl
into
not
stos
push
lods
movs
sub
lahf
outs
pop
stc
fmul
mov
jle
aam
sbb
dec
sbb
xchg
jecxz
clc
outs
xchg
adc
stc
add
outs
pop
outs
adc
pop
sub
add
mov
or
mov
or
cdq
stos
js
jp
jge
(bad)
test
xchg
bound
mov
cmp
enter
mov
or
out
loopne
jae
pop
sub
xor
rcr
bound
mov
(bad)
xchg
and
mov
pop
fwait
stc
push
push
or
push
cmp
xchg
jg
adc
out
das
push
hlt
inc
call
jl
inc
das
bndldx
adc
cmps
pop
sub
fldcw
std
out
fs
sub
mov
jmp
cmp
mov
scas
scas
cli
in
mov
popf
(bad)
and
cmp
sub
test
retf
inc
sub
push
and
ret
aaa
cmp
xchg
(bad)
icebp
pop
cmp
rcr
push
and
ror
iret
xor
jg
fwait
sub
int3
pop
stos
daa
jne
jp
jle
fldenvw
xor
pop
xchg
fisub
mov
inc
dec
fstp
icebp
mov
aaa
xchg
cwde
xchg
cmp
call
fucomp
(bad)
mov
rcr
or
pushf
movs
std
lods
adc
cmp
loope
xchg
adc
and
and
outs
ffreep
cmp
(bad)
sub
xchg
fistp
pop
push
(bad)
xlat
xchg
cmp
(bad)
lods
dec
xor
and
mov
cwde
add
scas
das
mov
push
ret
scas
pusha
rol
dec
and
(bad)
mov
pop
fidiv
jbe
sahf
dec
pop
std
pushf
xchg
cs
std
lock
sti
xor
xor
jne
call
inc
aas
and
mov
jno
mov
cdq
fsubr
fistp
cld
mov
imul
ja
push
or
jl
call
dec
mov
add
lea
jmp
daa
fs
movs
and
cdq
xchg
sahf
(bad)
push
(bad)
push
push
(bad)
ins
pop
jecxz
les
fisub
dec
dec
push
pop
jmp
mov
push
leave
jmp
sub
mov
adc
imul
lock
push
sbb
out
icebp
push
and
pop
pop
imul
int
xor
inc
cwde
movs
cs
clc
dec
sub
sbb
push
(bad)
aad
rcr
and
enter
lods
mov
push
inc
clc
cmp
jb
mov
popa
mov
dec
and
adc
pop
mov
fmul
js
jp
sar
add
scas
dec
push
jle
sahf
jl
dec
jmp
xchg
dec
aas
cmp
add
ins
cmp
(bad)
push
cmps
pusha
push
sar
sbb
add
jg
sbb
jae
test
mov
or
(bad)
jb
enter
xor
test
cmps
call
adc
push
cmp
adc
retf
adc
mov
imul
movs
jmp
in
enter
xor
xchg
pushf
js
inc
sar
mov
pop
(bad)
lds
fs
int
sbb
les
loopne
dec
and
ss
pop
sub
shl
cmp
lods
ja
call
aaa
(bad)
xchg
sub
cmc
jbe
cli
jg
(bad)
adc
rol
add
je
cwde
cmps
loopne
test
dec
inc
lds
aas
aad
in
sub
and
loop
ret
cmp
cld
inc
ss
daa
sub
std
int
hlt
cmp
pop
push
or
push
(bad)
xlat
pop
xor
jecxz
iret
cmc
loop
lods
cmc
or
push
test
retf
jecxz
dec
push
sti
in
mov
daa
jl
push
(bad)
sar
push
mov
push
inc
adc
stos
iret
push
das
into
push
sbb
lods
das
jecxz
mov
movs
mov
imul
sub
sub
mov
call
daa
mov
inc
pop
out
mov
pusha
cmps
pop
cwde
and
mov
je
mov
jo
call
(bad)
out
pop
mov
div
sbb
(bad)
inc
pop
dec
mov
js
pop
je
jno
xchg
dec
push
sub
call
mov
adc
call
mov
xor
sahf
fst
sub
add
int3
jae
call
test
fwait
push
into
in
call
into
add
mov
inc
jge
sub
rol
adc
mov
inc
das
or
movs
jp
xlat
popa
sub
push
push
inc
mov
jecxz
adc
xchg
std
aad
mov
sbb
cdq
loop
mov
mov
repnz
fdivr
xlat
mov
ror
iret
xchg
sahf
test
clc
pusha
dec
fcomp
adc
push
push
and
sbb
das
push
or
cmps
call
ret
movs
int3
inc
pop
pop
add
inc
out
mov
lods
fistp
mov
jae
mov
jge
or
xchg
out
cdq
stc
je
in
and
call
or
inc
mov
dec
dec
inc
dec
sbb
pop
add
es
mul
xchg
or
sub
add
xor
hlt
int3
mov
mov
ins
shl
xchg
pop
mov
and
dec
shl
iret
push
icebp
cmp
push
ret
cdq
jnp
mov
sbb
dec
xor
xchg
mov
mov
jb
sbb
rcr
xor
add
scas
out
lods
mov
retf
into
lods
sub
shl
xchg
mov
in
sub
lods
or
xlat
iret
sub
jmp
fimul
xchg
scas
imul
mov
mov
and
push
cmps
adc
xchg
adc
dec
xchg
mov
fisub
arpl
fs
pushf
sti
push
rcl
stc
retf
mov
add
and
xor
lock
push
pop
out
gs
fstp
in
in
lock
add
push
cmp
xchg
add
scas
clc
in
out
in
je
stos
pusha
(bad)
cmc
imul
rol
icebp
aam
xchg
hlt
push
pop
pop
adc
sub
in
ss
outs
(bad)
(bad)
fsub
fnstcw
inc
out
sub
addr16
js
xchg
cmps
and
je
pushf
in
iret
jecxz
xchg
repnz
scas
scas
sbb
mov
jae
into
add
and
(bad)
mov
lea
int3
pop
fsubr
loope
call
jne
or
add
inc
mov
dec
push
mov
es
fisub
out
push
jmp
int3
push
sbb
je
cdq
mov
mov
lds
xchg
or
adc
out
dec
(bad)
jmp
scas
push
cmp
outs
iret
imul
cli
mov
pop
ror
stc
pop
adc
push
daa
adc
repnz
das
adc
jmp
or
jmp
push
call
(bad)
repnz
add
mov
add
adc
retf
mov
(bad)
jmp
and
adc
gs
rcr
mov
out
test
fstp
inc
mul
pop
loope
stc
jae
das
mov
cli
repz
jns
inc
stos
ja
and
and
cwde
pop
pop
js
push
push
les
inc
adc
ins
jmp
(bad)
test
outs
(bad)
mov
retf
jae
jne
in
mov
jge
mov
xchg
stos
xor
mov
lods
out
(bad)
fs
in
das
adc
cmp
or
cmps
push
out
pusha
and
out
stos
fld
fstp
dec
repz
mov
and
(bad)
push
rcr
imul
mov
mov
lods
push
sbb
movs
aaa
inc
ja
cli
ret
inc
sub
or
sub
fld
xchg
js
out
mov
inc
and
xor
push
xor
popf
rol
ins
test
stos
popa
mov
adc
jmp
stos
cmp
sbb
inc
stc
add
(bad)
ss
jl
inc
cmp
aaa
pop
pop
pop
push
mov
xlat
adc
jo
ins
movs
jbe
in
mov
push
or
dec
popf
cdq
ror
dec
dec
test
pmulhuw
loope
mov
fcmovnu
mov
inc
adc
int3
pop
adc
jge
sti
add
ret
cmp
mov
int
outs
adc
adc
shr
in
ret
add
pop
stos
clc
push
mov
mov
or
(bad)
cwde
inc
mov
inc
add
push
nop
dec
arpl
in
das
jbe
addr16
popa
ror
leave
loopne
sub
jp
(bad)
mov
mov
adc
test
mov
and
test
retf
popf
cdq
out
pop
and
mov
test
mov
jmp
mov
les
fnstcw
aaa
jo
sbb
lock
leave
or
gs
mov
pop
cmps
out
test
sbb
jae
dec
and
jmp
es
bound
mov
pop
xchg
or
mov
call
fdiv
push
mov
setae
iret
pop
sbb
add
push
jg
push
retf
test
in
adc
inc
popf
shl
aad
sub
sub
pushf
cmp
jp
jb
in
pop
and
mov
mov
inc
adc
ret
pusha
cmp
pop
in
fs
fst
rcl
addr16
push
out
jno
jbe
ret
imul
movs
adc
bound
pop
mov
cmc
clc
or
lods
push
fistp
inc
sbb
in
fild
or
daa
test
loopne
dec
dec
add
outs
sbb
fsubr
adc
hlt
shr
xchg
jno
jne
int
sbb
cdq
jo
mov
pop
mov
xchg
push
mov
mov
aaa
inc
clc
and
mov
add
call
push
add
fld
repz
xchg
sbb
push
pop
imul
add
dec
pusha
ror
or
sub
inc
xchg
inc
imul
cmps
push
shl
shl
cmp
cdq
pusha
dec
pop
pop
imul
fst
xor
jecxz
ja
dec
bound
sbb
or
pop
outs
das
xor
cmp
inc
jne
test
adc
imul
sbb
inc
aaa
sub
movs
mov
push
int
jp
mov
sbb
pusha
sub
push
enter
(bad)
or
out
arpl
call
mov
jecxz
loopne
pushf
mov
out
mov
in
mov
int3
push
jp
test
mov
push
adc
fnstsw
jp
mov
and
movs
fwait
rcr
inc
cli
sahf
cmp
and
or
or
and
jecxz
int
mov
inc
or
pop
sub
adc
inc
fbld
push
or
mov
data16
xchg
in
inc
adc
or
mov
aam
push
mov
and
in
sub
cmp
loop
add
mov
lods
and
call
xor
retf
in
in
hlt
sub
popa
fbstp
pop
jo
(bad)
ror
add
dec
leave
ins
and
pusha
leave
sub
dec
pop
pop
dec
popf
dec
outs
xchg
dec
shl
mov
push
lahf
in
push
adc
mov
fucomip
mov
add
push
push
mov
retf
xor
dec
mov
icebp
jle
fadd
mov
push
mov
int3
sahf
xlat
imul
cmp
jnp
push
push
fnsave
cmc
call
(bad)
lock
ins
sbb
in
sub
xor
dec
out
and
push
jne
mov
mov
cmc
cmp
and
fwait
sti
pusha
ds
dec
cli
pop
div
into
xor
jg
xor
and
push
cmp
cmc
fcom
sub
xchg
fmul
xchg
std
ret
xor
sbb
dec
push
fwait
in
mov
ror
(bad)
mov
lahf
icebp
dec
(bad)
out
sub
jb
cmc
or
or
adc
mov
and
fwait
cwde
ss
outs
pop
fnstsw
cmp
pop
push
and
test
aam
mov
fidiv
jbe
out
lods
mov
leave
dec
leave
paddd
test
cld
mov
mov
jmp
mov
movs
std
push
lea
xchg
and
xchg
ror
mov
out
add
dec
adc
jmp
sub
xchg
jl
mov
js
or
sti
mov
pop
frndint
inc
adc
push
inc
out
cwde
leave
enter
and
mov
mov
adc
push
pop
inc
jg
push
cmp
std
mov
sub
scas
int
(bad)
sub
jecxz
adc
(bad)
or
int3
jle
inc
add
push
lea
add
fwait
mov
(bad)
or
or
add
dec
cmps
and
pop
(bad)
lods
cmc
pop
scas
imul
cmps
jno
imul
cwde
fnstenv
in
sbb
arpl
leave
mov
int3
test
rcl
movs
xor
sahf
mov
pop
mov
into
movs
js
sti
ins
stc
xchg
mov
dec
or
pop
cmp
test
mov
enter
xchg
daa
inc
dec
fidivr
fst
sub
or
xchg
lds
out
adc
movs
xchg
js
mov
jp
jae
scas
in
adc
xor
push
or
mov
das
ret
scas
adc
mov
mov
jne
je
and
adc
jae
xchg
sbb
jecxz
into
fdivr
cmp
int
stc
or
xchg
ins
jno
inc
adc
retf
xor
mov
xor
call
outs
xchg
call
pop
dec
or
mov
mov
mov
push
outs
outs
enter
adc
push
out
dec
jo
jo
stos
push
jge
xlat
xrelease
mov
mov
lahf
xor
jg
(bad)
cdq
repz
jb
pop
cmp
inc
add
cli
call
inc
movs
shl
test
jb
jnp
pop
pop
mov
inc
arpl
pusha
pop
out
jnp
jl
dec
dec
das
and
out
xor
push
pop
mov
cmp
adc
rcl
xchg
pop
out
stc
xchg
pusha
push
bound
add
and
movs
cmc
imul
push
sbb
test
or
mov
sbb
xchg
(bad)
pop
icebp
or
pop
loopne
lods
call
fcmovbe
scas
xchg
repnz
dec
dec
pop
popa
sub
mov
popf
rol
int
sub
cmp
and
inc
aaa
inc
mov
or
loope
xchg
inc
or
or
nop
mov
clc
jno
dec
(bad)
retf
lahf
ss
cmp
ins
pop
(bad)
or
cmp
adc
jbe
inc
ss
out
stc
push
sbb
xchg
outs
dec
add
pop
lods
pusha
adc
cmp
jne
mov
mov
jmp
mov
mov
mov
es
movs
js
ret
shl
ins
jno
mov
clc
loope
clc
pop
in
jbe
mov
sub
sahf
adc
mov
pcmpgtd
in
xlat
packssdw
push
dec
aas
lock
sub
mov
push
out
and
pop
xor
es
mul
push
inc
xchg
xor
adc
dec
push
and
fld
inc
clc
and
push
jo
loop
imul
mov
ja
sub
ret
aam
test
dec
add
push
jne
scas
add
les
loopne
shl
iret
lods
fdivr
inc
popf
les
ret
pushf
xchg
loop
jne
sub
icebp
mov
fadd
pop
cli
cmps
mov
mov
cli
pop
retf
xchg
cmp
mul
sti
bnd
xor
xor
dec
add
outs
ret
inc
sub
and
and
clc
pop
cli
clc
imul
push
add
add
movs
mov
ins
mov
pop
aaa
inc
cmp
data16
jne
dec
dec
shl
xchg
sbb
jns
test
mov
pop
ficom
cdq
sahf
inc
xchg
repz
sub
mov
out
(bad)
(bad)
pop
mov
push
(bad)
punpcklwd
iret
lods
in
push
sub
icebp
enter
jecxz
les
nop
out
loopne
inc
ja
mov
fs
sub
retf
shr
xchg
dec
sar
rol
neg
cmp
dec
or
pop
mov
sub
jp
ret
cdq
add
ja
push
sbb
scas
push
sbb
fcom
fistp
and
retf
mov
and
push
add
ins
data16
(bad)
xor
cmp
sahf
jb
sbb
cmp
pop
cmc
(bad)
stos
pusha
repnz
arpl
push
into
outs
gs
jp
in
or
jno
cmp
jno
std
pop
dec
in
and
jle
push
sub
dec
dec
cs
cmp
xchg
adc
jnp
inc
dec
das
outs
sbb
mov
mov
and
js
aaa
mov
jmp
mov
pop
xchg
out
in
push
xor
lahf
rcr
popf
mov
mov
sar
addr16
addr16
push
test
aas
std
popf
aam
add
dec
sti
push
in
push
cld
icebp
cmp
adc
call
not
(bad)
int3
pop
push
jmp
push
int3
xchg
iret
inc
pop
adc
adc
jge
add
mov
shl
mov
in
xchg
add
adc
xchg
add
mov
add
or
test
es
ja
and
rcr
std
and
(bad)
add
cmp
pushf
xchg
jbe
inc
dec
stos
jns
push
rol
jmp
mov
sar
test
cmc
push
int3
dec
in
mov
lock
mov
ret
adc
xchg
std
push
jmp
iret
jbe
dec
in
cmp
dec
das
test
test
jnp
retf
mov
xor
ret
xor
aas
fisub
jbe
xchg
aad
or
inc
repnz
inc
ins
test
mov
mov
push
mov
adc
es
js
jge
(bad)
adc
popa
sbb
pop
adc
scas
mov
xchg
cdq
rcr
mov
test
sub
or
imul
cmp
sub
fcmove
fs
pop
adc
icebp
mov
cmp
lea
in
fdiv
add
mov
cmp
icebp
xor
add
loop
jge
movs
stos
in
addr16
jno
jle
jne
add
leave
mov
shr
add
cwde
and
imul
shl
sub
in
jnp
rol
fistp
repz
fimul
repnz
mov
xor
aad
mov
sar
push
sub
adc
sbb
xor
daa
(bad)
call
push
mov
xor
mov
call
fisttp
and
dec
les
adc
outs
or
inc
dec
retf
fisub
push
mov
call
fbld
inc
dec
xlat
push
aaa
xchg
pop
or
data16
vcvtpd2dq
je
std
gs
xchg
adc
or
xor
add
inc
into
in
(bad)
xor
jmp
mov
shl
mov
xor
test
in
in
jb
pop
stc
rcr
mov
in
pop
dec
lea
bound
mov
jnp
pop
fadd
fdiv
or
es
adc
pusha
dec
lea
stos
imul
xchg
or
xchg
mov
add
nop
xor
stc
outs
or
nop
pop
xor
adc
push
leave
mov
fs
add
ds
dec
pop
cs
sahf
add
call
bound
pop
in
imul
mov
push
add
jl
lods
sub
inc
std
lock
jo
mov
and
cmp
enter
pusha
pop
in
lea
sbb
push
js
pop
adc
in
test
retf
je
and
push
mov
inc
pop
stos
enter
jmp
sbb
jnp
sbb
jl
jbe
push
adc
xchg
pop
out
or
push
dec
add
xchg
les
rol
cli
and
dec
daa
adc
arpl
pop
cmps
inc
push
mov
out
ret
push
push
call
jae
adc
fiadd
mov
movs
add
pop
in
out
xchg
jle
push
jecxz
inc
push
sar
rcl
out
add
inc
mov
mov
mov
and
xchg
lods
or
imul
in
les
sar
sbb
inc
ret
inc
xchg
nop
or
sbb
xor
ror
retf
and
scas
(bad)
pop
pusha
jns
enter
ds
mov
jle
mov
fild
scas
cwde
int3
sbb
pop
test
inc
scas
mov
aaa
cmc
mov
stos
pop
jle
push
imul
jp
mov
xor
scas
fmul
and
into
cmp
inc
enter
and
pop
stos
fisttp
call
mov
inc
lock
xchg
push
mov
outs
fimul
lea
mov
mov
push
xchg
adc
lahf
jp
add
call
push
rcl
inc
jne
pop
fisttp
cli
call
and
pusha
mov
mov
leave
fadd
repnz
outs
test
add
pop
pop
cdq
out
lds
or
stc
fdivr
push
and
imul
inc
inc
sbb
xchg
xchg
in
adc
pop
js
mov
inc
cwde
cs
shl
dec
mov
in
call
or
jge
popa
shr
call
dec
scas
cmp
cmp
movs
inc
add
daa
test
or
adc
xlat
loop
sti
bound
clc
addr16
push
mov
addr16
jg
adc
xor
fwait
int3
add
jecxz
sub
or
cmp
(bad)
in
fild
test
dec
xor
in
int
mov
cs
or
popf
inc
cmps
pop
push
sbb
sub
mov
sahf
outs
pop
or
inc
shl
aam
mov
sub
inc
mov
movs
inc
xor
scas
xor
cs
outs
test
aam
cmp
je
scas
jmp
jae
and
loop
cmp
xor
jg
inc
push
addr16
vsqrtss
test
leave
jb
lods
inc
outs
inc
pop
fsub
push
xor
mov
icebp
aaa
sub
mov
mov
fnstcw
cmp
and
sub
frstor
xor
movs
xor
jg
sti
fsubp
imul
ret
icebp
cmp
sub
pushf
add
and
fcmovnb
ins
mov
retf
jbe
adc
and
cmp
xor
xchg
rcr
test
sub
repnz
push
div
aaa
mov
or
cmps
leave
shl
dec
test
pop
imul
ja
adc
jb
(bad)
jmp
sbb
pop
push
pop
imul
sbb
push
inc
mov
into
jno
mov
jg
(bad)
mov
jmp
fisubr
add
and
imul
or
rcr
bound
mov
retf
cmp
(bad)
enter
in
pop
test
xor
sub
jae
xchg
ss
not
inc
gs
jmp
inc
lea
sbb
or
ins
cmp
xchg
jb
jns
stc
vcmpsd
das
leave
lods
lods
shr
(bad)
mov
xchg
retf
outs
sub
xchg
cmp
(bad)
mov
iret
out
rcl
(bad)
ss
mov
push
in
ins
repz
hlt
cmp
xchg
adc
cli
(bad)
pushf
dec
sbb
jp
imul
xor
jno
in
cwde
jbe
cmps
mov
out
std
pop
push
loope
sub
in
jmp
or
stc
hlt
pop
movlps
jl
pop
dec
mov
cmp
imul
jp
(bad)
gs
pushf
jge
jle
sub
cs
mov
fidiv
out
push
mov
enter
xor
sbb
add
inc
add
dec
ret
aas
or
addr16
mov
repz
push
push
movs
sub
pop
pop
(bad)
(bad)
mov
stos
adc
test
popf
mov
push
push
enter
cwde
popf
cmc
xchg
mov
or
push
mov
lods
fucomip
rcr
inc
mov
int3
je
scas
(bad)
jmp
lods
cmp
mov
sbb
and
imul
int
inc
stc
jne
xor
add
ss
mov
retf
jecxz
loope
jge
jno
jmp
cmp
cli
inc
mov
or
or
sar
fild
jmp
out
popf
cli
jg
dec
add
mov
mov
pop
popa
and
jne
les
pop
cmp
pop
cmp
outs
sti
add
push
sub
push
mov
mov
sbb
or
sub
loop
mov
movs
lahf
sti
pop
lods
cli
mul
in
outs
sbb
pop
or
pop
in
repz
cmp
mov
popf
push
mov
shl
or
and
xor
xchg
iret
call
sub
mov
cmc
pop
add
test
int
fucomi
and
and
imul
add
retf
retf
mov
jg
sbb
adc
nop
adc
fimul
call
into
dec
dec
inc
cmp
in
sbb
ss
push
xchg
dec
mov
packssdw
hlt
les
xlat
in
and
push
mov
and
dec
cmc
push
or
and
fnstenv
sahf
movs
or
std
cdq
and
out
jge
push
xchg
(bad)
push
sub
test
lock
mov
inc
aad
nop
lea
loopne
xchg
sahf
mov
xor
stos
ret
out
(bad)
fnstcw
cmps
add
inc
sub
addr16
dec
mov
or
add
jmp
and
mov
jecxz
push
jl
int
dec
(bad)
jmp
outs
(bad)
push
outs
inc
pop
pop
and
mov
jmp
inc
pop
dec
into
or
data16
push
xchg
stos
xor
jg
xor
(bad)
ficomp
retf
xchg
push
ja
xor
imul
inc
xlat
int
imul
loop
fcom
cmp
or
jmp
leave
adc
pop
lods
xor
and
inc
xchg
bound
adc
mov
inc
push
pop
adc
retf
aaa
xchg
fistp
xchg
iret
pop
adc
inc
daa
rcr
call
xor
lods
jbe
lds
jno
mov
lods
mov
nop
cld
ret
dec
retf
popa
sub
std
sbb
cmps
daa
and
inc
repnz
ret
mov
loopne
xchg
pop
mov
and
cmp
cdq
mov
mov
or
and
cli
push
and
std
mov
retf
popf
mov
mov
mov
and
in
call
pop
into
jp
jmp
leave
xchg
lahf
enter
ja
push
xchg
add
sub
push
out
mov
pop
push
mov
repnz
(bad)
(bad)
lock
mov
sbb
and
pop
(bad)
pop
fstp
je
push
repnz
mov
cmp
fimul
push
jnp
cs
cwde
(bad)
jmp
call
push
out
cmp
dec
and
das
jb
scas
icebp
aad
pop
retf
mov
jb
adc
loopne
sub
adc
push
sbb
mov
fstp
fnstcw
mov
jecxz
jmp
in
imul
repnz
ins
int
sti
push
fstp
std
ret
shl
dec
out
mov
nop
push
mov
cmps
adc
bound
push
push
out
pop
add
jbe
ins
or
xchg
sar
fsub
std
sahf
adc
jg
jae
mov
xor
shl
xchg
es
cdq
mov
sub
pop
inc
lahf
mov
(bad)
or
cmp
mov
(bad)
push
not
das
xchg
pusha
dec
and
stos
jo
in
jbe
movs
inc
jbe
jl
lods
adc
mov
shr
out
test
popa
jge
stos
clc
sbb
add
jge
int3
adc
adc
pop
shl
sbb
fucomip
or
cld
xchg
dec
adc
retf
push
push
inc
sbb
femms
jp
inc
mov
adc
pop
stos
mov
push
pop
lods
aad
loop
test
stos
out
ret
inc
call
xor
push
out
lock
push
mov
or
and
adc
push
mov
or
pop
retf
pop
aad
mov
cmp
inc
cdq
pop
shl
scas
lds
jmp
iret
outs
hlt
dec
sahf
or
xor
rcr
jle
sub
jae
cli
adc
int
and
or
xlat
imul
sbb
(bad)
outs
fadd
ss
jg
pop
pop
jb
or
shr
mov
nop
mov
aad
mov
enter
js
test
jbe
pop
cmps
mov
adc
neg
jns
pop
sub
mov
mov
ss
sbb
and
jbe
and
test
sti
add
dec
or
add
gs
nop
dec
test
je
dec
data16
xchg
jmp
sbb
add
cmps
cmp
sbb
xlat
sbb
cmp
and
add
adc
add
nop
(bad)
imul
xchg
xor
jbe
pop
repz
dec
and
stos
inc
sub
pop
cmp
jl
xchg
dec
mov
test
scas
jb
mov
mov
movs
icebp
push
mov
and
or
test
mov
sub
adc
(bad)
cmps
mov
or
pop
lock
cmp
scas
xlat
mov
fnstcw
push
stos
neg
outs
jge
push
xchg
jmp
into
adc
dec
xor
sahf
cwde
add
ins
mov
test
xchg
adc
lock
jo
out
ficomp
(bad)
leave
leave
psadbw
loop
pop
shl
retf
cmp
out
out
xor
aad
xor
aaa
gs
add
aad
and
mov
in
dec
test
jg
mov
in
(bad)
int
xchg
pop
adc
pop
pop
push
xchg
out
lock
dec
(bad)
not
pop
push
out
jp
pop
scas
add
sbb
mov
sub
push
in
xor
pop
dec
call
repz
je
jbe
rcr
sub
xchg
(bad)
stc
xor
test
xchg
mov
mov
scas
mov
pop
xor
jo
sbb
(bad)
repz
push
aad
pop
jnp
sbb
inc
mov
daa
ret
or
dec
mov
(bad)
inc
test
xor
rol
mov
sub
mov
shl
call
and
aaa
mov
inc
ins
mov
inc
or
mov
in
(bad)
push
mov
push
in
push
xchg
push
or
push
sub
xor
push
cmp
lods
icebp
ins
sbb
nop
push
shr
loope
sub
push
repnz
scas
cmpneqps
inc
cli
aas
jmp
mov
lahf
daa
pop
add
pop
lea
repnz
sbb
push
cs
ins
clc
sbb
(bad)
call
rcr
jmp
lods
xchg
int
loop
test
mov
xor
idiv
cmps
xor
pop
cwde
jmp
leave
shr
mov
sbb
dec
jl
aad
into
xchg
sub
rcl
sar
pushf
sbb
sub
aas
adc
pop
test
outs
and
jl
repnz
dec
ret
stc
out
push
icebp
mov
or
mov
push
call
mov
sub
and
aam
jg
jp
or
mov
cmp
ss
pop
and
adc
popa
(bad)
std
int
nop
fwait
xor
adc
sbb
push
dec
xor
std
sar
std
and
(bad)
jno
call
imul
pop
mov
daa
cmp
xchg
add
pop
pop
inc
pop
aas
daa
cs
std
lea
(bad)
jecxz
fcomp
nop
sub
pop
pushf
push
jl
mov
adc
ss
dec
(bad)
pop
mov
or
sbb
in
(bad)
fsubr
cmp
push
push
mov
xlat
(bad)
pushf
outs
and
jp
cmc
push
adc
std
mov
sbb
aaa
ret
mov
hlt
fcmovbe
mov
movs
dec
push
and
movs
movs
add
lods
pop
ins
dec
add
fstp
push
cmp
adc
pop
movs
ins
push
fadd
pop
sub
push
mov
mov
push
lods
pop
adc
cmp
cs
ds
outs
addr16
inc
std
pop
adc
aam
push
in
addr16
push
push
stc
cmp
(bad)
pop
cld
dec
lea
jp
lds
add
sub
xchg
sbb
aas
dec
ret
stos
lock
pop
(bad)
push
fldcw
pop
push
cs
arpl
cmp
std
sbb
xchg
fst
js
cs
push
sub
xchg
dec
stos
in
xor
sbb
xchg
push
xchg
sub
ins
cmp
add
loop
mov
pop
mov
sub
test
add
jl
enter
fild
xor
xor
and
push
inc
(bad)
push
cmp
push
sbb
adc
jge
jno
or
add
add
cmp
lods
and
cmc
ins
cli
outs
push
cmp
pop
(bad)
cmp
push
push
nop
repz
mul
inc
pop
and
movs
sbb
leave
aaa
pop
cmp
test
jns
jns
inc
inc
out
xchg
push
mov
inc
sbb
mov
mov
int
dec
(bad)
fidiv
xchg
repz
scas
inc
sbb
pop
lods
jecxz
cs
sar
fstp
arpl
and
inc
xchg
jno
push
cmp
inc
ds
test
pop
mov
mov
(bad)
dec
or
retf
outs
xchg
xor
stos
fimul
jle
retf
std
ja
and
xchg
xor
mov
cli
jg
call
add
popf
nop
(bad)
out
jae
xchg
and
div
mov
rcr
clc
mov
jnp
call
idiv
cs
cmp
push
dec
in
push
data16
push
jns
sub
jnp
mov
sbb
int3
ins
enter
cmps
(bad)
add
into
dec
hlt
sti
sahf
loope
in
xchg
call
scas
push
nop
scas
inc
repnz
cs
and
mov
and
shl
dec
mov
loop
xchg
stos
in
out
out
jnp
inc
xchg
adc
fld
outs
enter
xor
repz
shl
adc
es
xor
ins
mov
out
fnsave
sbb
test
mov
adc
bound
cmp
leave
mov
in
loop
pop
sub
dec
mov
cmp
out
sub
jp
stos
cwde
lahf
or
ror
into
mov
and
adc
dec
mov
daa
sahf
sbb
into
call
fdivr
and
fwait
push
mov
pop
scas
jecxz
jg
mov
ret
das
iret
call
add
es
sbb
mov
imul
mov
cmp
fstp
mov
xchg
ficomp
pop
and
aad
inc
mov
push
ja
mov
scas
addr16
aad
fisubr
mov
scas
and
mov
mov
xchg
cmp
jge
lods
push
jge
add
out
or
inc
push
(bad)
addr16
hlt
mov
sbb
push
push
nop
or
or
into
xor
gs
ds
xor
imul
xchg
and
popa
daa
pop
scas
jns
lahf
das
ins
es
or
dec
dec
stos
add
xor
adc
(bad)
in
dec
or
jp
sub
add
fs
imul
sbb
fcmovnu
or
dec
and
aas
(bad)
mov
sar
sub
pop
xchg
call
ret
scas
xchg
mov
cmp
pop
cmp
sub
pop
es
mov
retf
mov
ds
cld
jbe
test
pop
sub
push
mov
pop
loop
in
int3
std
shl
cmp
test
test
inc
adc
mov
or
mov
mov
or
adc
sahf
push
invd
jnp
nop
repnz
adc
in
fnstenv
mov
mov
gs
xchg
cwde
fcomi
push
mov
jae
cmps
stos
std
movs
pop
pop
movs
fisubr
cmps
xchg
pushf
jnp
fmul
les
mov
dec
jmp
int3
in
scas
pop
mov
ja
mov
sub
inc
cmps
nop
cmps
mov
push
mov
call
and
sbb
xor
repz
inc
jecxz
ins
sahf
ret
repz
loope
mov
out
jl
icebp
mov
and
ins
mov
cs
in
mov
retf
loopne
adc
lods
in
outs
xchg
xchg
push
stc
into
lock
(bad)
imul
jns
or
add
js
lahf
shl
out
mov
pop
push
and
pop
mov
loop
or
adc
and
dec
int3
loopne
jne
jle
out
push
sbb
mul
pusha
cmp
sub
out
cmp
shl
retf
adc
sub
in
adc
xor
mov
xor
or
push
(bad)
(bad)
jmp
lds
cdq
nop
xor
add
cmps
ret
in
xchg
out
test
or
push
mov
sbb
pop
sar
mov
sbb
movs
xor
fcomp
or
movs
and
sbb
mov
pop
xlat
push
inc
sub
jmp
pop
fiadd
shr
dec
pusha
push
imul
pop
fnstsw
fidivr
sbb
push
loopne
mov
in
pop
call
mov
mov
in
pop
mov
inc
add
xlat
mov
or
hlt
mov
or
or
adc
xchg
fidiv
mov
shr
jg
dec
ins
mov
add
test
aad
xchg
ins
je
xor
nop
mov
push
or
sub
sbb
jae
ds
imul
stc
retf
pop
push
retf
or
cdq
and
(bad)
not
jae
outs
jmp
jbe
call
xor
jno
push
(bad)
pop
add
inc
out
test
pushf
mov
adc
(bad)
out
movs
mov
xor
jo
cmc
mov
mov
inc
mov
fidivr
push
fbld
ja
sbb
and
jo
mov
push
inc
hlt
sbb
je
shr
xchg
pop
leave
cli
ja
xor
shl
ins
stos
pop
scas
mov
add
out
xchg
sbb
mov
fwait
add
mov
push
xchg
mov
aad
ret
adc
loope
xchg
adc
sub
adc
ins
mov
scas
stos
js
mov
nop
pop
scas
sbb
popf
and
xchg
mov
addr16
rcr
test
aad
cmp
jle
aam
push
mov
stc
js
pop
sub
ret
(bad)
xchg
mov
sub
add
sub
je
test
mov
sub
push
lahf
xor
sbb
push
cmp
sbb
shr
(bad)
in
mov
call
imul
in
xlat
jmp
loopne
sub
iret
jb
jbe
(bad)
mov
sbb
les
pop
cmp
(bad)
sti
cmp
and
cmp
ror
fistp
adc
out
retf
sub
push
je
gs
sbb
fcmovnbe
movs
(bad)
mov
ret
push
mov
dec
clc
loopne
mov
inc
out
jmp
and
xchg
jp
push
pop
mov
jmp
loope
retf
push
fcom
adc
push
icebp
scas
aad
retf
pop
xlat
sbb
js
daa
aad
push
shl
push
movs
and
dec
push
pop
mov
test
and
dec
(bad)
addr16
rol
rcl
xlat
cmps
adc
mov
pop
cmp
adc
push
popa
jle
fild
jmp
push
fnsave
jne
sub
push
mov
push
lock
push
retf
cmps
cld
lods
(bad)
not
and
scas
fdiv
int3
pop
mov
xchg
jmp
xchg
int
push
sti
push
int
jb
push
into
mov
cdq
into
jl
and
adc
push
dec
fmul
out
jo
aam
mov
fcomp
int3
ins
mov
call
sahf
xor
dec
mov
adc
repz
xor
es
pop
dec
pop
mov
fnstsw
rol
push
stos
(bad)
mov
xor
outs
push
or
das
dec
adc
pop
scas
dec
in
call
mov
jae
push
jle
mov
add
jecxz
xchg
mov
ins
cs
push
dec
movs
int3
fsub
add
dec
pop
dec
(bad)
(bad)
and
fcmovnb
(bad)
and
outs
repz
dec
aas
add
inc
add
in
cmps
jbe
cdq
xchg
retf
jge
push
xor
mov
mov
shl
(bad)
repz
sub
add
or
sbb
xchg
adc
and
in
jae
aaa
push
pop
mov
add
aad
xor
lods
sbb
cs
sti
push
int3
scas
push
repnz
nop
(bad)
shl
sub
push
push
mov
imul
adc
hlt
loop
test
mov
mov
cdq
sti
aam
test
push
adc
add
xchg
ror
or
stos
xchg
enter
out
cmp
xchg
data16
and
(bad)
nop
sub
test
cmp
sub
ds
cmps
xor
cmp
inc
jmp
cmp
xchg
add
dec
push
lahf
in
jno
jmp
jle
inc
xchg
clc
lahf
or
enter
push
in
ret
adc
sbb
mov
ins
fistp
jmp
les
sbb
inc
sbb
sub
xor
xlat
adc
push
and
xchg
mov
sti
shl
pop
cmps
jp
aas
jae
jmp
(bad)
icebp
xchg
std
xor
mov
xchg
cdq
push
cmp
pop
cmp
dec
sbb
xor
std
sbb
fistp
add
inc
addr16
mov
sbb
lds
push
test
scas
sub
sahf
fnstenv
or
cld
push
sub
cli
inc
lock
xchg
sub
aas
add
push
gs
pushf
xchg
ret
jecxz
pop
cmp
jl
pop
(bad)
mov
std
sbb
dec
mov
add
sbb
push
hlt
cmps
and
faddp
shr
arpl
sub
xor
xchg
div
jbe
push
push
xchg
push
sub
ins
adc
push
(bad)
in
or
inc
clc
dec
fldcw
add
jle
dec
inc
mov
les
call
rcl
test
mov
inc
add
jg
inc
clc
(bad)
fs
xchg
mov
ret
cdq
or
clc
inc
in
(bad)
lahf
icebp
add
add
xchg
nop
je
and
and
adc
addr16
sub
cmp
icebp
sub
xchg
das
loop
(bad)
jbe
pop
popf
xchg
mov
fsubr
jl
sbb
pop
xchg
xchg
test
push
scas
aam
scas
cwde
jecxz
sbb
jne
ss
or
cs
xor
scas
mov
clc
in
xchg
add
(bad)
nop
cli
out
addr16
mov
sub
xchg
mov
pop
push
rcr
inc
mov
arpl
xchg
fstp
out
dec
dec
or
fst
es
arpl
je
and
and
fiadd
mov
ret
(bad)
lahf
mov
push
inc
xor
mov
cmp
stos
ins
add
dec
mov
mov
pop
sub
xor
jbe
and
push
pop
push
cwde
data16
cmp
dec
mov
(bad)
mov
ins
(bad)
outs
dec
(bad)
push
mov
mov
in
inc
inc
inc
sbb
cdq
mov
cli
mov
push
push
pop
test
mov
out
movs
ja
lock
pusha
or
jnp
xchg
jecxz
or
cmp
outs
je
or
and
push
ror
mov
ret
xor
arpl
pop
cmp
xlat
test
test
pushf
movs
xor
out
xor
in
push
ins
lods
data16
fidiv
mov
outs
pop
repnz
fwait
fs
xchg
mov
sub
or
sbb
adc
ficom
add
xchg
cmp
cdq
mov
adc
aam
jbe
call
xor
retf
add
jae
xchg
enter
pop
dec
js
xchg
scas
in
mov
(bad)
sub
mov
pop
push
push
sbb
pop
test
inc
or
lds
xor
fucomip
(bad)
repz
jl
mov
adc
pop
jge
fbstp
in
pop
addr16
(bad)
cld
jge
cmp
rcr
mov
test
and
or
js
jmp
les
ret
popf
ja
mov
lock
shl
mov
mov
(bad)
ss
iret
xchg
mov
dec
pushf
inc
push
(bad)
and
sub
add
mov
and
in
adc
pop
mov
cmp
fwait
cmc
test
loope
aad
adc
sti
out
(bad)
pop
jns
fs
mov
shl
popa
ja
dec
loopne
fbstp
fisub
inc
jmp
xor
sub
arpl
in
outs
div
push
pop
cmp
add
mov
dec
push
sub
xlat
adc
push
push
into
mov
outs
retf
xor
pop
inc
in
test
das
xor
sbb
push
xchg
(bad)
push
call
cmp
fcomip
pop
lods
xor
call
popf
and
out
loope
or
out
loope
mov
test
dec
add
sub
shl
aad
push
lods
lds
inc
push
std
inc
xchg
xor
shl
(bad)
mov
add
mov
sbb
cdq
or
push
fbstp
leave
cmp
ret
pop
xor
arpl
xor
ss
pushf
inc
cld
(bad)
mov
mov
mov
sbb
xchg
ins
push
mov
jnp
mov
dec
xchg
(bad)
xlat
cmp
lods
mov
push
sar
loope
adc
loop
(bad)
(bad)
mov
xchg
or
mov
jp
adc
inc
mov
and
inc
(bad)
cmc
pop
push
push
stos
imul
push
bound
(bad)
mov
test
mov
inc
loopne
cdq
xchg
inc
sti
xor
xor
dec
repnz
and
and
dec
xor
(bad)
and
mov
dec
xchg
mov
inc
movs
fs
adc
add
pop
cwde
lea
aaa
int
ret
jnp
inc
out
add
jecxz
popa
add
fucomi
mov
push
cdq
aaa
(bad)
or
xchg
cld
je
dec
bound
xchg
outs
in
icebp
mov
or
cmp
test
mov
ror
fstp
fdivr
pop
sti
hlt
mov
out
pop
sub
lds
jne
sub
sbb
stos
scas
or
fcom
lds
ror
sub
jo
lahf
int3
pusha
mov
xchg
sbb
pop
mov
push
in
adc
outs
add
stc
repz
xchg
cmc
mov
cmp
das
in
mov
pop
mov
fild
cwde
ss
mov
cwde
jge
jmp
adc
stc
sbb
push
in
sub
(bad)
fxch
mov
dec
xor
mov
sbb
or
mov
cmp
std
pop
dec
pop
cmc
test
lea
mov
aam
(bad)
inc
adc
loop
dec
push
and
push
pop
inc
dec
int3
and
inc
loopne
ss
add
popa
iret
fwait
add
mov
xchg
ret
mov
mov
std
sub
jp
mov
inc
retf
push
xchg
add
inc
sbb
jp
xor
cmp
xchg
fidivr
fiadd
(bad)
test
jge
test
xlat
sbb
inc
retf
rcl
ins
mov
hlt
dec
inc
jne
add
jg
cwde
ror
nop
inc
cli
xlat
popa
sub
shl
aad
fabs
arpl
(bad)
in
sub
add
lahf
fiadd
xor
std
dec
xor
and
int
icebp
lods
mov
push
imul
and
push
xchg
and
retf
movs
xor
lock
mov
push
es
(bad)
xchg
mov
xor
sbb
add
cli
lahf
scas
nop
loope
and
ins
cdq
xchg
out
fst
mov
add
repnz
mov
addr16
mov
jp
xchg
mov
dec
push
xchg
push
cmc
stos
cmp
xor
pop
mov
mov
push
pop
push
loopne
shl
sub
push
aad
xor
and
fbstp
xchg
mov
xor
or
xchg
inc
pop
imul
mov
pushf
inc
cmp
cmp
add
jno
and
cmp
push
bound
cmps
fs
mov
push
arpl
jbe
sti
popf
add
pop
inc
sti
test
cmp
pop
mov
mov
xchg
dec
xor
cmp
lock
or
gs
pop
mov
clc
xor
(bad)
jle
mov
xor
fs
repnz
inc
fisubr
in
lds
push
inc
outs
xlat
mov
in
cwde
push
push
(bad)
and
arpl
into
movs
in
mov
sbb
xchg
fcmovu
mov
data16
lahf
push
sub
fldenv
lds
or
sbb
jne
push
mov
push
test
push
sub
mov
mov
push
arpl
out
lods
inc
test
or
lods
int3
inc
retf
sub
in
ds
cmp
aas
cmps
nop
sub
mov
dec
jno
pop
data16
cwde
pop
sub
mov
iret
jb
or
pop
adc
(bad)
stos
ja
aaa
out
outs
rcl
or
cdq
sbb
fcmovbe
inc
pushfw
jle
mov
lods
sub
inc
mov
sub
xor
lahf
ror
mov
cmc
mov
push
xchg
lock
outs
or
jmp
ror
pop
into
mov
sbb
adc
test
mov
or
ja
outs
add
pop
in
test
push
in
gs
xor
cmp
inc
addr16
push
mov
mov
mov
iret
scas
dec
xchg
sbb
loop
push
xchg
inc
lods
test
pushf
scas
push
push
ss
cvtps2pi
jl
add
popf
js
xor
inc
addr16
mov
mov
mov
movs
test
mul
das
(bad)
out
xor
mov
xchg
mov
stc
movs
out
std
enter
mov
jb
in
lahf
mov
mov
adc
fild
adc
cmc
in
jne
clc
mov
out
mov
pusha
in
ds
xchg
xlat
cwde
(bad)
mov
fimul
jle
je
(bad)
pop
lods
push
out
cmc
xor
mov
les
xlat
(bad)
popf
cmpps
(bad)
das
mov
not
jge
in
pop
mov
std
mov
fnsave
ds
add
inc
ja
cmp
cwde
push
push
mov
sti
mov
out
sar
sar
dec
push
and
das
mov
pop
xchg
and
inc
jl
jbe
call
fld
fincstp
push
dec
pop
lahf
in
push
jmp
dec
inc
or
push
fwait
mov
xchg
mov
or
inc
inc
jo
cdq
xchg
or
bound
mov
inc
fld
push
xchg
xchg
test
scas
adc
adc
and
mov
fxch
addr16
push
pop
int
ret
out
xchg
sbb
pop
cdq
sbb
mov
stc
mov
lahf
scas
push
add
call
retf
out
cmc
cmp
xor
call
cmp
mov
cmps
popa
and
mov
or
push
sbb
push
cdq
imul
and
imul
pop
push
push
mov
push
dec
sbb
or
std
mov
fwait
xchg
xchg
lahf
mov
sahf
inc
scas
test
ret
cmp
push
sbb
sub
enter
inc
inc
mov
or
mov
push
pop
jge
sub
test
fwait
shl
out
data16
es
dec
jmp
jae
aas
test
inc
mov
and
aas
xor
or
fdiv
jmp
inc
(bad)
mov
imul
fs
(bad)
popf
ret
sbb
fstp
pop
mov
add
aad
shl
out
ins
cmp
call
ins
mov
leave
push
icebp
jno
sbb
mov
push
sub
in
test
(bad)
sbb
mov
add
call
rcl
pop
mov
popa
test
fwait
push
mov
scas
jmp
mov
mov
mov
jns
push
xlat
jp
mov
mov
ins
sti
dec
and
push
ss
fidivr
push
ret
sti
push
mov
popa
xchg
cmp
adc
or
lds
adc
and
data16
or
in
inc
fwait
add
jae
pop
jge
sbb
(bad)
popf
lds
out
mov
(bad)
aas
arpl
mov
cmps
mov
mov
mov
out
push
cmp
inc
or
mov
aas
or
fistp
inc
clc
mov
add
inc
pop
push
gs
xor
das
xor
test
dec
lea
mov
call
or
push
and
or
cmp
jns
dec
push
inc
sbb
inc
fistp
or
(bad)
neg
loop
adc
xchg
std
mov
shr
and
icebp
pop
jp
retf
in
test
in
add
mov
ds
sbb
pop
call
in
imul
mov
loopne
or
pop
cwde
pop
mov
cmps
dec
outs
mov
lea
ins
adc
pop
dec
std
es
dec
sbb
fs
es
xchg
dec
jmp
and
stos
lods
fwait
push
cmp
push
dec
xor
push
aad
ret
and
inc
dec
xor
xchg
clc
stos
aam
and
jns
scas
jb
movs
je
jo
xchg
push
dec
neg
scas
inc
mov
stc
ret
push
pop
mov
les
jmp
pop
inc
or
xchg
sti
xlat
sbb
fld
pushf
repnz
fisttp
jl
adc
mov
pusha
push
pop
mov
sbb
cmp
outs
jle
adc
dec
inc
cmp
fcmove
inc
fdivr
pop
jmp
dec
add
cld
xor
mov
fwait
pusha
mov
jae
add
stc
clc
fist
pushf
inc
push
push
scas
les
push
stos
push
dec
add
call
hlt
das
stos
push
pusha
iret
mov
jbe
mov
jmp
mov
jo
mov
add
adc
das
inc
jmp
int
add
lea
aad
mov
jns
dec
push
dec
xor
imul
push
stos
rol
out
xchg
paddw
ins
adc
mul
cmps
outs
stos
cmp
jo
mov
(bad)
push
mov
sub
pop
cmps
add
repz
sub
or
adc
xor
and
clc
ja
cmp
add
lock
imul
add
(bad)
popf
in
cmc
(bad)
nop
mov
mov
mov
loopne
adc
mov
xchg
test
xchg
mov
pop
jbe
rol
push
jae
das
repz
inc
xor
pop
jecxz
dec
mov
xor
popa
xchg
inc
ret
cmp
mov
or
movs
pop
inc
dec
jns
mov
pop
movs
addr16
mov
add
xor
cld
sub
dec
(bad)
jmp
mov
lock
and
dec
or
pop
jecxz
pop
pop
lock
stos
hlt
pop
jns
mov
dec
in
fldenv
test
retf
jmp
push
aad
mov
mov
lea
or
enter
xchg
mov
inc
xor
shr
sub
mov
out
ss
cmc
repz
jne
cli
imul
pop
push
push
lods
jl
out
shl
sbb
test
popf
inc
test
lahf
mov
mov
inc
mov
out
into
mov
loope
cdq
sbb
cmp
xor
leave
std
cmp
jnp
sub
inc
addr16
jo
cmp
add
add
push
js
mov
pop
mov
cdq
cmc
test
stos
sub
add
hlt
pop
xchg
ret
add
fld
sbb
ror
ja
xchg
pop
dec
mov
shr
dec
mov
(bad)
neg
dec
push
pop
lods
repnz
jbe
jmp
in
loope
repnz
ds
rol
and
arpl
pop
sar
push
pop
pusha
inc
xor
jne
call
xor
cmp
mov
inc
pop
ins
add
lods
ins
rcl
pop
leave
sub
cmc
test
pusha
and
pop
sbb
(bad)
hlt
loope
pop
mov
int3
sbb
fdiv
jge
mov
mov
cmp
pushf
lahf
jae
stc
fwait
aad
rcr
or
mov
test
adc
push
inc
sub
or
test
and
into
hlt
fisttp
xlat
cmp
mov
push
and
xor
iret
xor
pop
fld
cmp
jns
ss
aad
cmps
fisub
adc
gs
or
es
mov
sbb
cs
push
ins
sub
and
jmp
xchg
(bad)
aaa
gs
dec
(bad)
xchg
rcr
pop
mov
lock
fsubr
ins
shr
enter
jmp
mov
push
js
or
mov
sub
mov
or
push
ins
rcr
out
pusha
call
popa
in
aad
(bad)
dec
cmp
mov
sti
test
cmc
push
jo
sbb
xchg
pop
mov
xchg
or
aas
retf
push
push
pop
test
or
cmp
mov
mov
pop
dec
mov
inc
(bad)
and
push
ins
xchg
test
mov
pop
cs
out
pusha
xor
mov
jp
out
popa
push
jecxz
push
int
ret
es
ins
xchg
scas
sbb
call
fs
inc
shr
adc
and
test
xchg
in
mov
xchg
and
inc
mov
mov
push
jle
xchg
push
imul
mov
jne
leave
adc
push
scas
add
call
cmp
pop
out
nop
stos
in
dec
mov
iret
mov
adc
js
adc
dec
sbb
inc
xor
sbb
rcr
dec
dec
mov
call
out
jno
call
adc
retf
sar
enter
push
cmp
out
movs
js
out
pop
mov
out
cmp
pusha
add
sub
jge
dec
xchg
push
fcom
cmc
and
jo
aad
adc
xor
jns
pop
test
add
mov
push
adc
jno
push
jne
ins
and
or
icebp
frstor
xchg
lock
popa
or
fcomp
clc
dec
xchg
xchg
xchg
ss
mov
jmp
cld
xchg
sbb
cwde
sub
dec
mov
stos
jle
cmps
push
mov
mov
div
xchg
add
mov
and
xchg
mov
ret
scas
adc
push
push
pushf
mov
ins
bound
int3
pop
scas
lds
push
int3
adc
sbb
add
mov
fwait
rcl
std
loop
enter
mov
push
test
popf
ret
adc
lahf
cmp
(bad)
and
movs
cld
loopne
loopne
dec
pusha
mov
loopne
cmp
cmp
add
int
jmp
xor
add
stos
push
inc
sbb
pop
jo
dec
(bad)
jns
mov
fstp
ins
mov
cmps
pop
or
xor
scas
repnz
ret
ins
scas
xchg
add
inc
push
iret
jo
mov
xchg
rcl
mov
pop
push
pop
pop
or
mov
jne
mov
outs
sub
loop
jns
fadd
sbb
sar
mov
add
mov
push
or
sbb
pop
pushf
push
or
push
inc
sub
xor
mov
xor
mov
enter
mov
xor
add
sub
dec
push
(bad)
outs
push
movs
sbb
pop
and
les
(bad)
fild
rol
xor
xor
jo
cmp
mov
(bad)
push
cmc
jmp
jmp
ins
ja
nop
mov
pop
enter
mov
test
ror
loope
mov
ret
xchg
dec
push
and
out
mov
repz
push
sub
stc
mov
xchg
mov
addr16
lds
movs
mov
inc
cmp
imul
shl
(bad)
sbb
(bad)
mov
and
ins
sub
pop
js
push
xlat
cld
in
jbe
sub
pop
lods
pop
pop
sub
out
or
add
jne
in
out
mov
mov
push
add
mov
xor
cmp
sub
in
lods
cmps
stos
cmp
pop
in
push
fidivr
push
daa
xor
add
xor
call
mov
pop
jae
jo
sar
and
call
jne
cmp
iret
(bad)
mov
ins
push
iret
fscale
imul
adc
iret
xor
jge
xchg
sbb
lea
cmc
sub
push
cmp
and
inc
sahf
push
adc
addr16
div
(bad)
icebp
push
push
pushf
mov
sbb
nop
jecxz
dec
inc
xor
adc
(bad)
push
jnp
ret
xor
icebp
fs
add
pushf
mov
mov
and
pop
aam
sbb
or
adc
jno
inc
daa
test
in
fmul
sub
sub
dec
lods
sub
lds
out
push
sub
jp
aad
outs
shl
addr16
inc
dec
and
imul
pop
and
daa
fstp
jg
xchg
inc
mov
mov
fnstsw
repnz
pop
mov
mov
popa
adc
ss
adc
adc
(bad)
int
mov
pop
mov
iret
enter
pop
and
sti
jne
push
pop
add
pushf
hlt
jecxz
rcr
push
inc
not
aas
les
jg
dec
popa
rcr
adc
mov
sub
sub
pop
xor
hlt
cmp
pop
cli
pop
xor
pushf
fiadd
jecxz
sbb
int
add
lahf
or
jno
push
sbb
fucomi
jecxz
mov
pop
not
test
mov
or
and
dec
jmp
jnp
pusha
sub
sbb
mov
retf
ror
mov
mov
dec
ins
jns
xchg
mov
popa
(bad)
in
pop
adc
push
pushf
popf
or
enterw
push
es
mov
shl
pop
retf
cli
add
cmp
cmp
cmp
sub
fwait
inc
icebp
pop
cmp
test
mul
movs
out
xchg
das
pop
mov
inc
enter
rcl
mov
or
add
rcr
inc
push
out
or
mov
repnz
lock
dec
inc
jle
mov
mov
xor
jge
es
mov
or
jae
sub
ss
sub
imul
movs
outs
lock
mov
or
sbb
(bad)
fld
lods
into
cdq
jne
mov
cmp
jmp
fdivr
scas
loopne
sub
into
jne
push
data16
jmp
and
or
add
ss
sahf
aaa
fwait
dec
adc
cmp
mov
adc
dec
pop
and
push
loope
cmp
xor
fwait
pop
pushf
sbb
leave
push
popa
push
sub
das
ret
push
inc
add
mov
mov
cmp
inc
xchg
sbb
jg
mov
fimul
add
xor
out
icebp
inc
jne
inc
leave
sub
sbb
mov
mov
push
and
fadd
xor
add
mov
mov
in
or
push
shl
inc
int3
stos
out
pop
jno
div
imul
test
leave
mov
inc
mov
fcom
cmp
fcmovnbe
and
add
scas
(bad)
jmp
int3
out
push
pop
push
dec
stos
fcmovnbe
cwde
loop
xchg
shl
cdq
jecxz
push
ds
pusha
jp
int3
scas
inc
sub
and
das
ss
xchg
scas
add
jo
sbb
or
retf
scas
push
iret
xchg
xchg
repz
pop
(bad)
in
js
mov
pop
div
loop
mov
ja
cmps
es
jne
jno
adc
lock
mov
mov
test
dec
push
mov
adc
cmp
jns
and
rcl
cs
out
xchg
into
add
inc
xor
add
call
cmp
call
xor
xor
or
mov
jae
or
in
lahf
jne
hlt
inc
mov
jne
fsubr
sahf
repnz
jl
retf
push
fmul
xchg
pop
jb
push
add
popa
icebp
fcomp
pop
mov
mov
cmps
ror
pop
dec
imul
pop
cmp
mov
push
fwait
xchg
lahf
xchg
sbb
std
sbb
jae
sub
push
sbb
pop
cmp
sbb
or
ss
lock
xor
pop
shl
pop
push
adc
stos
scas
jle
in
out
jb
call
xchg
call
lods
mov
or
js
repz
dec
data16
jecxz
inc
stc
push
mov
mov
sub
int3
jg
jge
jmp
push
cmp
div
aas
stos
ins
jo
adc
pusha
cmp
es
cdq
or
cmp
(bad)
aas
scas
mov
fbstp
pop
test
sbb
out
out
loope
dec
mov
adc
pop
cmp
fimul
aam
cmps
xchg
xor
jb
xor
int3
shl
pushf
cmp
dec
add
and
jbe
inc
sbb
cmps
daa
lea
gs
test
jns
fild
aam
cmp
mov
xor
ret
shl
aas
(bad)
fnsave
scas
cmc
sahf
sub
mov
add
cmp
sbb
in
sti
retf
stos
push
movs
mov
es
out
jbe
mov
cmp
out
ficom
hlt
or
lea
sbb
xchg
cli
xor
jbe
ds
ret
inc
add
xchg
ss
cmp
or
xchg
call
or
test
bound
and
leave
mov
xchg
push
mov
mov
cmp
rcr
push
jo
mov
sbb
push
fucomp
ret
clc
imul
daa
lods
les
or
pop
xchg
(bad)
cmp
shr
popa
stos
inc
not
retf
gs
inc
push
adc
stc
cmps
jae
outs
mov
mov
sti
(bad)
cmp
xchg
cs
jb
shr
pushf
enter
pop
push
ss
cld
lea
outs
out
and
or
cld
rcl
sub
gs
sub
das
jmp
nop
arpl
push
jb
cli
mov
test
sbb
mov
mov
jo
sar
sub
repz
pop
adc
pop
pop
dec
push
ja
xor
bound
cmp
dec
ret
imul
in
inc
adc
cmp
out
mov
lahf
test
test
icebp
jmp
xchg
call
mov
mov
and
mov
mov
xchg
ins
mov
or
push
push
or
push
retf
push
sbb
lds
pop
shl
enter
js
adc
icebp
data16
cmp
getsec
hlt
mov
daa
mov
sti
adc
jg
call
in
out
mov
scas
push
arpl
fadd
xchg
aam
inc
test
mov
or
in
and
(bad)
jne
cmp
inc
fcmovu
call
fs
movs
addr16
stc
sub
mov
jnp
and
jbe
imul
pop
js
ja
and
enter
data16
jne
cli
mov
mov
cwde
cmp
loopne
daa
xchg
push
mov
adc
ss
fldcw
fadd
or
or
mov
fbstp
pop
ja
fisubr
mov
and
stc
idiv
scas
and
fdivr
cmp
arpl
push
mov
and
adc
jmp
(bad)
rol
and
inc
cmp
pop
cmp
out
xchg
popa
cwde
xlat
mov
loope
ins
jno
or
sti
mov
ins
cli
popf
pop
push
or
das
movs
retf
or
push
in
and
jno
leave
mov
into
ss
adc
pop
mov
or
and
jno
fs
mov
call
in
cdq
in
jmp
push
in
and
cmp
outs
and
xor
xlat
aaa
or
call
mov
or
pop
in
sbb
pop
pop
mov
adc
push
jle
(bad)
stc
or
dec
(bad)
addr16
loopne
or
popa
mov
hlt
push
das
add
mov
jae
mov
xchg
pusha
lea
xchg
sbb
into
jg
xchg
and
dec
mov
jae
subps
stos
icebp
ss
aad
or
in
js
mov
or
mov
ja
cdq
sbb
pop
scas
gs
pop
xor
push
out
iret
fwait
jo
push
push
add
mov
jmp
test
les
add
mov
in
lods
imul
cdq
mov
dec
cmp
jno
lea
mov
fld
jne
mov
out
xchg
pusha
hlt
and
leave
push
dec
test
mov
test
les
arpl
sbb
xor
push
mov
retf
sbb
xor
and
out
push
dec
mov
in
sub
div
movs
mov
mov
xor
data16
bound
lahf
rcr
in
inc
outs
mov
aad
test
aaa
xor
fwait
jge
dec
mov
add
leave
sbb
dec
or
fbstp
adc
jmp
adc
(bad)
jno
xchg
mov
test
es
mov
cmp
sub
call
mov
call
dec
xchg
add
sbb
sti
sbb
or
stos
inc
out
xor
pop
ret
sti
loopne
xor
sbb
xchg
popf
jg
ror
aam
cmp
ror
jae
aam
mov
sbb
inc
mov
or
mov
cdq
popa
and
or
int3
dec
outs
(bad)
jbe
mov
bound
push
push
cmp
bound
popa
shl
push
cmp
jecxz
jl
adc
push
dec
(bad)
xor
shl
xchg
pop
or
xchg
jbe
cmp
xlat
and
shr
jg
push
inc
xlat
pop
adc
sbb
xchg
mov
mov
(bad)
imul
into
repz
fdivr
retf
mov
lds
jle
ds
lahf
lock
inc
dec
mov
xchg
and
adc
loopne
pop
jle
or
mov
movs
mov
sbb
mov
int
inc
hlt
sub
mov
sbb
push
inc
mov
iret
mov
push
sbb
jp
fistp
lock
data16
jae
fisttp
ins
dec
jl
lahf
mov
mov
inc
adc
out
div
scas
repz
scas
arpl
mov
and
cld
push
sbb
push
sub
jno
popa
fiadd
inc
pop
fucomip
mov
addr16
or
out
loopne
sub
dec
in
in
mov
retf
dec
div
mov
(bad)
clc
xchg
push
mov
ins
add
jae
cs
dec
pop
mov
or
mov
pusha
mov
mov
push
mov
sub
mov
sub
in
leave
push
cmp
push
(bad)
test
cld
mov
repz
mov
fmulp
mov
sub
mov
(bad)
mov
sub
xchg
(bad)
xchg
mov
imul
cwde
mov
mov
add
mov
cmp
push
cmp
push
dec
hlt
jne
ins
mov
xlat
scas
leave
inc
jmp
mov
add
or
jmp
sbb
cmc
dec
int3
inc
test
shl
mov
stos
scas
mov
add
ja
sbb
das
pushf
call
sbb
push
push
aaa
sar
hlt
cdq
fmul
and
inc
rcr
sub
mov
sbb
add
xchg
dec
or
fild
mov
dec
(bad)
pop
or
xchg
or
in
ja
icebp
dec
inc
sub
stc
or
pop
retf
es
sahf
pop
xchg
cmovl
adc
(bad)
into
int
pop
loop
das
jl
sbb
shr
xchg
int
out
jge
or
sub
fcomp
sbb
sub
popa
dec
js
push
jmp
bound
out
pushf
push
stos
add
dec
test
scas
push
pop
(bad)
call
sub
and
xor
out
clc
xor
daa
xor
out
ds
xchg
iret
ds
scas
pop
sbb
xor
pop
test
mov
aam
adc
int
sub
das
rcl
pushf
mov
ins
push
adc
sahf
icebp
mov
lds
cli
cmc
mov
pop
sbb
sbb
mov
xchg
xlat
cs
xchg
(bad)
out
(bad)
xor
push
jnp
cmps
pop
mov
sub
jb
sbb
out
iret
push
sbb
add
jecxz
cs
addr16
test
shl
mov
idiv
fild
loope
mov
int3
aam
push
retf
jle
sub
stos
pop
pushf
test
xlat
push
cmp
mov
lods
push
stos
fsub
cmp
pushf
cdq
leave
sub
out
cwde
pop
(bad)
fbstp
jne
or
hlt
adc
nop
xchg
fst
stos
push
push
xchg
jbe
pop
outs
push
jmp
test
mov
or
mov
lahf
inc
jnp
jb
ror
aad
dec
adc
(bad)
stc
push
mov
fcomp
fwait
push
lea
cmp
out
mov
xor
arpl
fldcw
dec
and
loop
jns
(bad)
xlat
pop
jbe
xor
mov
mov
cs
push
mov
xchg
adc
call
xor
movs
and
push
mov
and
cmp
imul
push
mov
mov
mov
sub
sbb
stos
ins
dec
data16
jbe
cmp
xor
pop
cmp
loop
mov
std
mov
pop
popf
inc
xlat
sub
std
cs
mov
xor
inc
cli
lods
mov
fistp
(bad)
mov
imul
pusha
mov
mov
add
pop
sbb
outs
(bad)
pushf
sub
test
cmp
sbb
pop
cdq
int3
xor
xchg
sbb
shl
sub
adc
and
add
loope
mov
xor
push
cmps
shr
jmp
scas
bound
add
pop
(bad)
jo
adc
jmp
es
aaa
or
inc
adc
mov
fimul
inc
mov
sbb
fidiv
outs
div
(bad)
lods
dec
xor
fs
test
imul
adc
sbb
rol
jl
shl
out
and
sbb
pop
lahf
push
or
fnstenv
add
je
jmp
xlat
cmps
xor
mov
mov
or
(bad)
fimul
popf
mov
and
sub
cld
pushf
cmp
(bad)
jmp
cmp
xchg
inc
movs
and
push
pop
jno
in
out
jl
jmp
pop
add
call
clc
adc
adc
mul
movs
push
or
jg
adc
and
jmp
push
mov
sub
in
push
sbb
pop
loop
adc
pop
jns
push
add
or
arpl
pop
ficomp
in
nop
pop
ins
ins
shr
in
or
out
xlat
call
stos
stos
push
xor
push
add
outs
xchg
pushf
fldcw
push
add
bound
mov
neg
call
pop
push
or
pop
ja
pop
je
repz
lea
stos
dec
cwde
sub
xor
fdiv
pop
fwait
(bad)
or
inc
inc
cmp
rcr
adc
mov
ss
retf
mov
fsub
adc
into
outs
call
ror
gs
ss
(bad)
out
sub
push
push
and
pop
xor
js
daa
std
ins
lock
mov
das
mov
data16
inc
icebp
jg
(bad)
adc
repz
mov
test
dec
cmp
jl
loopne
jae
jno
mov
cmps
jae
fstp
pop
icebp
stc
xor
dec
mov
movs
cwde
mov
call
xchg
into
sub
les
xchg
loope
cmp
out
sbb
add
pop
leave
xor
add
ret
mov
outs
adc
pop
jmp
(bad)
cmp
sub
dec
lahf
cmp
dec
add
retf
mov
into
mov
xor
stos
mov
in
sbb
jne
sti
stc
xchg
add
dec
and
mov
jno
xchg
xor
movs
sbb
ret
sar
inc
mov
movs
pop
and
push
popa
leave
jns
mov
add
in
mov
outs
ss
dec
movs
rol
nop
dec
or
cmp
xchg
dec
imul
dec
or
push
out
into
mov
sbb
mov
sub
push
push
(bad)
cld
push
cmp
lock
and
cmp
pop
ins
sbb
mov
(bad)
inc
mov
inc
push
mov
or
(bad)
(bad)
fild
xchg
fnsave
cdq
mov
jns
mov
sbb
clc
outs
pop
pop
or
sahf
add
or
push
jl
sub
pushf
and
hlt
das
adc
xchg
sbb
out
xchg
bound
push
jb
xor
push
jno
sbb
or
dec
(bad)
xchg
mov
cwde
js
dec
cmp
jmp
sbb
push
test
mov
jo
mov
push
fs
retf
xor
mov
out
cmp
push
mov
push
fild
push
clc
outs
leave
icebp
test
and
scas
xor
outs
mov
jnp
loop
les
aam
std
dec
push
sbb
add
mov
inc
dec
fwait
xchg
(bad)
cdq
jmp
adc
cdq
mul
pop
add
jp
or
dec
xchg
or
mov
fisubr
cs
fld
mov
ins
xchg
mov
fucom
loopne
push
stos
pop
sbb
sahf
inc
repz
cmp
cmp
sub
sbb
int3
ins
popw
data16
mov
jmp
mov
call
loopne
(bad)
mov
inc
xchg
out
mov
xor
js
cmp
xchg
fsubr
xor
enter
dec
dec
movs
mov
mov
cs
fidiv
pop
sahf
pop
xchg
adc
push
shl
cwde
dec
les
in
mov
pop
test
jmp
cmp
cs
jnp
fild
movs
iret
adc
pop
test
sbb
mov
push
and
(bad)
push
scas
ins
push
jnp
loope
(bad)
jg
into
ja
cmp
outs
dec
fwait
cmp
movs
sub
cmps
sub
jg
cmps
loope
fcom
stos
into
loop
(bad)
adc
add
iret
imul
xchg
cld
add
jb
xchg
ret
cmp
cmp
int
rcl
sar
xor
jmp
stos
mov
xor
pop
loopne
dec
es
push
xchg
or
cmps
adc
or
(bad)
add
mov
sbb
pop
and
std
xor
out
pop
enter
addr16
xchg
mov
inc
popa
and
aad
mov
data16
js
je
ja
test
pop
and
stos
mov
sbb
sti
push
jno
ret
push
sbb
mov
xchg
xchg
xor
out
lds
test
imul
add
mov
call
call
jmp
xor
ins
test
bnd
mov
jbe
in
push
sbb
mov
sbb
or
jns
mov
mov
sbb
pop
inc
xchg
icebp
repz
cdq
xor
xchg
cmp
add
mov
fwait
imul
and
mov
mov
push
jmp
aad
ret
lods
and
push
mov
out
sbb
imul
mov
pushf
sub
movs
mov
leave
fistp
sbb
mov
xchg
jmp
mov
xchg
fisub
cmp
jo
jmp
jnp
movs
mov
aas
sbb
mov
mov
add
outs
mov
pop
sbb
retf
in
iret
add
cmp
jns
pop
jmp
jl
retf
add
bound
add
jns
psubq
jmp
sbb
push
xlat
pop
cli
xchg
sub
pop
fucomip
dec
dec
cld
int
push
scas
jno
into
out
xor
adc
add
mov
inc
out
cmp
cwde
dec
pusha
imul
push
jecxz
push
xchg
adc
add
push
fisttp
push
repnz
sub
pusha
adc
adc
aas
jp
pop
xchg
sbb
bound
mov
lock
outs
xchg
xor
jno
add
xchg
imul
rol
lods
lds
and
add
in
pop
(bad)
jns
dec
mov
jecxz
mov
pop
add
jmp
das
xchg
jne
sbb
cmp
xor
inc
inc
in
add
pop
mov
or
gs
pop
ret
adc
stc
(bad)
jl
inc
pop
pop
mov
test
mov
jle
fidivr
icebp
ret
mov
scas
add
xchg
or
sti
shr
xchg
cmps
adc
mov
add
in
sbb
pop
xlat
jno
jg
fdiv
test
pop
gs
sahf
push
push
fild
xor
fsub
aas
jge
scas
loop
sbb
and
fnstenv
sar
mov
mov
cmps
je
xor
cmps
aad
push
xchg
inc
and
(bad)
sbb
push
and
retf
mov
push
xor
test
loopne
and
dec
push
inc
sub
jp
push
(bad)
in
lds
adc
jge
in
fcmove
push
int
rcr
inc
sub
and
outs
nop
jmp
je
not
fs
out
inc
mov
lods
and
xchg
inc
(bad)
pop
outs
pop
stos
cwde
pop
sbb
fmul
in
cmp
stos
movs
in
in
out
mov
enter
call
ficomp
lods
jmp
vpperm
add
cmp
test
xor
dec
cmp
das
or
div
adc
jl
dec
sahf
xor
leave
mov
ds
shr
sbb
or
pop
loope
dec
scas
inc
scas
cmp
cld
xor
cmp
sub
lods
sub
sub
mov
cmp
cs
pop
mul
repnz
retf
inc
sbb
fstp
cli
cmp
push
test
xor
idiv
dec
cmp
pop
adc
pop
mov
xchg
test
cld
shr
cmp
adc
mov
inc
sub
pushf
scas
add
pop
outs
sbb
add
cmp
push
dec
cmp
rcr
sbb
jbe
daa
add
cmp
dec
retf
(bad)
fnsave
outs
gs
and
and
xchg
push
mov
lods
mov
ins
fidiv
inc
jno
cmp
addr16
sbb
and
jg
test
push
cld
lock
rcr
ja
cmp
push
test
add
(bad)
stos
adc
call
movs
jnp
int3
cli
cdq
popf
xchg
dec
mul
jg
or
(bad)
or
and
clc
out
inc
jno
sub
jae
lods
and
rcl
dec
mov
add
and
dec
fwait
or
(bad)
sbb
mov
or
std
fistp
mov
mov
movs
rol
mov
nop
and
iret
add
movs
sub
and
sar
add
enter
pop
sbb
hlt
cmc
dec
jl
sbb
into
cmc
cwde
push
and
xchg
or
xchg
sahf
and
rcr
rcl
mov
xor
and
pop
fistp
mov
hlt
mov
loopne
xchg
sub
pop
lods
mov
fld
mov
pop
mov
xchg
mov
(bad)
rol
push
and
(bad)
call
fwait
sbb
sub
cdq
adc
dec
jmp
dec
(bad)
rcr
(bad)
aad
jle
add
sti
bound
dec
addr16
push
mov
or
aas
and
adc
out
fadd
mov
icebp
shl
cmp
sbb
cs
lods
mov
jo
cmp
fld
xchg
xchg
aas
lahf
mov
or
or
push
inc
fstp
iretw
and
sbb
js
mov
cmp
add
inc
jle
loop
aas
in
sahf
sbb
mov
shr
jp
movs
and
std
adc
fcom
add
out
mov
and
push
inc
inc
test
xchg
sub
(bad)
loop
repz
pushw
xlat
sar
cwde
dec
push
jecxz
xlat
in
es
cmp
mov
mov
mov
leave
into
mov
mov
shl
push
mov
jns
ins
mov
call
adc
int
rol
adc
call
sub
cmp
leave
and
push
(bad)
aad
mov
stos
mov
mov
lods
dec
cwde
daa
mov
mov
scas
inc
cmp
fild
fbld
mov
std
or
js
or
push
in
sub
test
cmp
outs
sar
cmp
push
cmps
cmps
aam
retf
push
adc
and
mov
xlat
je
push
cmps
jmp
xchg
fnstsw
adc
cld
push
pop
xor
mov
rol
fnstcw
popa
loopne
add
ins
call
push
xor
sbb
mov
inc
xor
jecxz
push
sub
push
movs
(bad)
pop
jmp
xor
or
mov
and
cdq
dec
sub
sbb
and
repz
jg
xor
stos
retf
pop
addr16
repz
popf
nop
ret
pop
das
sbb
sahf
outs
inc
mov
push
fstp
(bad)
out
sbb
jo
cmp
stos
sbb
push
mov
sbb
stc
and
outs
mov
jp
xchg
loopne
mov
ficom
pop
inc
cmp
fld
cmps
jmp
xchg
dec
mov
(bad)
jge
adc
dec
push
jge
pop
fidiv
fs
cmc
(bad)
fsubr
xor
fcmovne
mov
cld
ss
dec
sbb
mov
int3
dec
adc
xchg
xor
jae
inc
cld
cmp
out
aas
mov
push
push
or
test
jmp
pop
pop
cmc
push
inc
xchg
lahf
fimul
pop
sahf
or
pop
cmp
and
enter
lods
in
(bad)
jge
mov
mov
pop
cmp
and
test
call
fnsave
xchg
sbb
adc
mov
enter
pop
ins
jno
jg
xchg
mov
cmp
and
loop
adc
cmp
shl
lock
jae
iret
dec
in
cwde
test
jmp
out
sub
inc
fistp
ins
cmp
movups
test
sub
ror
retf
dec
retf
push
xchg
adc
sub
mov
or
dec
out
imul
mov
and
sub
(bad)
xor
pop
and
aad
aam
jmp
neg
mov
ror
mov
pop
inc
lods
cld
pop
js
sub
test
jae
out
push
xchg
cmps
jno
xor
imul
sub
add
or
imul
push
loope
loope
sub
cmps
jno
shr
test
add
dec
scas
xchg
mov
dec
inc
or
mov
adc
jbe
cwde
mov
fcomp
js
jne
idiv
mov
and
jne
mov
outs
in
or
ins
clc
popa
pop
aas
jbe
in
jp
retf
shr
push
imul
pop
sbb
int
add
inc
and
sub
retf
mov
cld
ret
test
je
inc
ss
leave
mov
push
fnstsw
pop
push
enter
into
scas
cld
pop
sub
inc
ja
jno
lods
cmp
adc
mov
cmp
mov
sub
push
(bad)
shl
jmp
add
stos
cmc
push
mov
sbb
dec
jl
jle
mov
push
mov
or
in
(bad)
cld
add
pop
popf
pop
or
add
std
sbb
rol
jno
jo
icebp
shr
adc
mov
sbb
jnp
pop
mov
xchg
fpatan
pop
cmp
rcl
sub
stos
mov
icebp
add
mov
mov
icebp
aad
jae
fistp
mov
push
cli
jns
xor
fiadd
push
mov
test
mov
pop
or
jmp
xlat
int
and
or
mov
mov
mov
outs
sbb
fisubr
xchg
or
xchg
or
cmp
xor
in
(bad)
fist
mov
jbe
nop
outs
lahf
or
sub
sub
sub
ja
dec
jns
push
inc
sub
or
and
mov
push
call
test
cmps
cmp
inc
mov
mov
push
test
(bad)
xchg
mov
loop
das
sub
mov
test
in
inc
adc
fldcw
cli
mov
(bad)
mov
dec
pushf
aad
mov
ja
or
inc
dec
jmp
pop
mov
icebp
dec
scas
fistp
jl
fild
fiadd
sub
push
(bad)
sub
(bad)
outs
jmp
jmp
fldenv
dec
sub
push
add
add
(bad)
dec
mov
repz
ss
mov
ror
out
rcr
mov
loope
(bad)
mov
mov
xor
xchg
add
pop
push
nop
cmc
stos
and
retf
xor
jb
movs
jg
mov
or
mov
pop
sahf
lar
test
mov
lahf
hlt
dec
into
push
call
mov
ss
cmp
int3
mov
sar
and
ror
aas
or
pop
jg
jmp
pop
inc
mov
sbb
sbb
xchg
cwde
mov
imul
dec
xchg
scas
test
aaa
pop
shl
jns
jg
jecxz
xchg
mov
inc
retf
cmp
jmp
nop
into
shr
fnsave
gs
mov
mov
test
pop
mov
dec
adc
xor
sub
push
adc
fwait
imul
lock
retf
ja
ds
adc
shl
into
in
pop
out
jbe
push
adc
les
xchg
js
xchg
in
shr
mov
mov
fmul
xor
mov
jecxz
xchg
jle
pop
fsub
jg
xlat
js
mov
mov
cmp
mov
ins
imul
adc
mov
dec
pushf
dec
ja
push
sti
dec
outs
push
rcr
ret
(bad)
int
sbb
pushf
dec
cmc
mov
cmp
je
and
cmp
xchg
(bad)
sub
sahf
sbb
ins
shl
arpl
jno
push
cmp
call
fdivr
sbb
or
jno
cli
sub
idiv
cld
stos
mov
push
xor
lods
dec
stc
cmp
sbb
retf
lock
repnz
popf
lds
push
jmp
popf
std
mov
sub
mov
pop
fcomp
pop
xlat
stc
mov
xchg
push
int3
mov
(bad)
jl
rcl
icebp
or
test
mov
neg
sub
pop
mov
jae
outs
inc
sahf
xchg
jle
cmp
push
jno
mov
mov
and
jne
(bad)
jbe
inc
jg
xchg
outs
neg
jno
sbb
popf
add
inc
sahf
add
pop
push
push
into
repz
aad
pop
imul
pop
call
out
add
pop
popf
test
jge
sub
(bad)
xchg
xchg
test
mov
iret
sub
inc
add
mov
sub
dec
mov
ret
mov
mov
out
mov
jp
add
pop
sbb
sahf
adc
push
add
push
xor
fldenv
outs
jb
test
jbe
mov
push
jg
adc
stc
pushf
pop
in
mov
add
jmp
inc
pop
jge
dec
repnz
ins
mov
(bad)
xor
xor
sbb
sub
out
(bad)
dec
in
and
jb
pop
gs
cmp
in
shl
mov
add
mov
int3
mov
dec
push
scas
shl
ds
xchg
repnz
aaa
xor
adc
iret
push
add
pop
clc
add
and
xchg
mov
jg
aaa
pop
test
aaa
loope
jge
push
add
sbb
(bad)
aas
shl
repz
pop
cmp
out
dec
push
cmp
pop
sub
fild
stos
test
sub
mov
aas
push
mov
icebp
jmp
push
jb
cmp
inc
mov
or
ins
loopne
mov
mov
push
mov
test
mov
in
mov
jns
test
cmp
aas
(bad)
les
fisub
mov
mov
jae
add
in
fsubr
addr16
sub
in
aad
jl
dec
xchg
scas
inc
or
sbb
inc
cmc
jne
inc
int
or
pop
cli
mov
repnz
ss
std
or
add
imul
xchg
rol
(bad)
movs
push
jmp
push
mov
push
xchg
lea
fwait
dec
imul
inc
gs
mov
imul
xor
cmp
outs
and
call
jmp
repnz
pop
int
sar
jbe
add
mov
fidivr
add
mov
ins
bound
mov
(bad)
fld
loope
xchg
inc
xor
in
je
mov
sti
imul
popa
lds
and
xchg
xor
stc
mov
add
or
jbe
mov
sbb
inc
add
cmp
movs
mov
push
out
(bad)
ins
mov
push
dec
aam
int
jmp
enter
mov
lea
(bad)
fs
xchg
dec
rol
call
and
jno
push
cmp
xor
xchg
mov
inc
mov
das
push
xor
aaa
mov
mov
(bad)
jne
mov
mov
loopne
aam
inc
sub
jns
cli
or
mov
(bad)
pop
xchg
jo
movs
sub
ds
sub
imul
aaa
push
loop
add
add
repz
inc
pop
push
lods
imul
cs
out
mov
fdivr
ror
iret
mov
push
aaa
xor
add
mov
imul
sbb
fwait
lar
pushf
in
cmp
adc
push
cmp
dec
gs
pop
aaa
jmp
(bad)
xchg
sub
inc
pop
icebp
or
outs
xchg
movs
mov
out
and
mov
mov
push
es
ds
cmp
xor
adc
mov
test
xor
hlt
mov
js
(bad)
mov
jb
sbb
hlt
in
pop
xor
shl
shl
pop
mov
inc
fldenv
ja
(bad)
jno
adc
out
cmp
push
movs
fst
mov
or
inc
push
fisttp
dec
sub
xlat
pop
cmp
jle
sub
mov
es
push
jne
ficomp
(bad)
in
cmp
jns
fwait
mov
or
jb
jge
ror
jge
loopne
jo
mov
cdq
cmp
add
out
repnz
jno
mov
cmp
xchg
xchg
outs
mov
stos
jne
mov
stos
scas
push
test
in
rol
add
push
les
mov
adc
lahf
dec
sub
sbb
jae
or
fld
test
adc
mov
adc
outs
and
cmp
rcl
test
xchg
and
cmp
int
dec
pop
add
pop
loopne
cmps
(bad)
add
movs
and
sbb
dec
aad
cwde
or
in
sbb
push
(bad)
xchg
sbb
outs
sahf
mov
jae
es
mov
cmp
adc
fwait
std
int
mov
ss
test
stos
dec
or
repz
pop
jns
push
loop
mov
cmp
xchg
or
cmp
mov
xchg
je
fsubr
xchg
mov
or
clc
daa
sbb
push
adc
js
dec
and
adc
dec
ror
cmp
rcl
and
(bad)
je
adc
xor
stos
aad
pop
js
mov
hlt
test
add
add
test
and
inc
aas
sub
jo
dec
stos
popf
cs
pop
jle
xchg
and
jp
movq
in
icebp
inc
lock
push
pop
mov
jecxz
mov
retf
mov
popa
add
jge
sti
pop
jge
std
je
lock
xchg
mov
out
jno
cmp
pop
ds
dec
cdq
popf
(bad)
xchg
stos
(bad)
stos
mov
repnz
bound
popf
ror
rcr
fdivr
pop
inc
les
sbb
xchg
or
loope
push
cmp
xchg
xchg
jae
push
outs
cmp
xchg
push
imul
in
pop
xchg
enter
dec
cmp
pop
jl
mov
add
popa
or
or
push
add
pop
push
push
jl
loope
in
rol
inc
dec
mov
adc
cmp
dec
xchg
mov
fsub
test
jle
push
mov
or
gs
ins
stc
data16
rcl
sbb
lea
je
pushf
xchg
shr
push
in
int
sub
lods
sub
fiadd
jbe
sbb
mov
sar
in
sub
xchg
and
xor
mov
sbb
jmp
push
xor
xlat
mov
xor
add
sbb
(bad)
and
xor
lods
test
cmp
push
dec
shr
mov
cmp
jmp
vmovups
dec
les
out
xor
and
jg
ds
ficom
mov
int3
pop
pop
(bad)
push
jmp
fstp
test
mov
test
clc
jo
adc
sbb
mov
ins
fimul
mov
push
ret
mov
push
push
mov
mov
shl
(bad)
or
jmp
xchg
sbb
fld
mov
mov
sbb
push
out
pop
mov
sar
xor
not
cld
add
xor
mov
or
mov
call
loopne
mov
push
sti
fldenv
shr
sbb
dec
or
(bad)
jmp
aad
add
ret
pop
add
popa
xlat
ins
dec
adc
enter
les
dec
lods
xor
shl
pop
adc
cmp
sbb
push
outs
cmp
push
popa
jmp
mov
mov
test
jne
and
and
outs
jae
dec
jne
or
push
in
sar
inc
ret
imul
cmp
or
cmps
aam
jne
xor
sbb
add
or
add
daa
dec
jp
pusha
aad
imul
stos
or
std
gs
cmps
test
jno
int
cwde
inc
(bad)
data16
or
sub
outs
scas
pushf
mul
jl
add
mov
cmp
or
mov
aaa
jl
sti
call
pop
and
dec
hlt
out
movs
pushf
inc
mov
lods
jle
sti
adc
(bad)
cwde
sbb
in
leave
(bad)
cli
aaa
aaa
dec
xor
jns
ficom
inc
jp
stos
iret
fcom
dec
sbb
and
es
push
jne
not
jl
cmps
xlat
pusha
or
pushf
test
je
cmps
sbb
pop
(bad)
sbb
xchg
sahf
call
in
sbb
rol
enter
dec
xchg
je
cmp
sub
iret
popa
mov
imul
inc
retf
add
and
scas
cmp
int
imul
or
jmp
sub
fild
stos
cmp
(bad)
push
movs
sar
sar
jle
pop
out
mov
mov
mov
sub
(bad)
out
repz
mov
sbb
inc
shld
add
cmp
scas
repz
mov
add
dec
ins
imul
xchg
and
loope
adc
lods
scas
mov
jbe
fs
adc
bound
leave
pop
xchg
adc
jb
pop
test
mov
out
pop
stos
ret
jmp
mov
xor
idiv
call
leave
je
jo
mov
jo
dec
and
js
push
jbe
mov
xor
jnp
xor
jle
xor
and
jg
sbb
mov
fmul
dec
aaa
stc
fs
retf
add
arpl
test
xor
test
rcr
cmps
cmc
jp
out
xchg
movs
cmp
imul
outs
retf
scas
sub
sub
push
push
cmps
(bad)
das
jmp
scas
ror
lods
inc
outs
push
sub
out
(bad)
mov
(bad)
xor
data16
mov
jne
xchg
sar
add
inc
aam
js
out
retf
ins
mov
xchg
hlt
test
and
add
mov
push
(bad)
mov
cmps
sub
jecxz
je
mov
push
mov
daa
rol
daa
jo
fbstp
jge
cdq
jle
frstor
mov
int3
pushf
inc
cmps
ins
adc
fisub
ins
inc
cmp
imul
add
or
mov
or
cmp
xchg
jbe
(bad)
out
imul
sbb
or
sti
mov
mov
sbb
mov
adc
push
fwait
push
pop
mov
sahf
icebp
push
aam
test
and
pop
outs
xor
push
push
xor
retf
lahf
rcl
sti
jl
push
dec
repz
popf
icebp
test
push
shl
aas
jmp
lea
sub
pop
mov
sbb
cmc
dec
pop
imul
push
sbb
or
imul
cmc
das
mov
jecxz
xchg
mov
into
cs
sbb
fdivr
into
add
or
mov
ins
movs
xchg
repnz
lahf
scas
nop
(bad)
outs
pop
mov
neg
xor
xor
push
pushf
and
ins
ins
(bad)
movs
pushf
cmp
sub
jecxz
jge
cdq
mov
fnstenv
inc
dec
pusha
addr16
in
pop
out
jno
(bad)
mov
push
ret
shl
xor
mov
cs
retf
in
jle
jb
mov
dec
sbb
sbb
sub
cmps
jmp
cdq
inc
or
cmp
cs
and
mov
retf
xchg
fidiv
sbb
je
das
sub
mov
inc
jge
add
xchg
or
or
add
neg
xchg
rcl
jle
or
jmp
into
iret
push
sub
ja
dec
pop
or
and
push
and
pop
mov
jmp
(bad)
fsubr
xchg
sub
dec
cmp
test
cld
bound
les
sbb
mov
xchg
jmp
test
jle
or
and
lods
jecxz
cmp
dec
xlat
push
cmp
gs
je
ud0
inc
lahf
and
rol
fnsave
jbe
jmp
mov
repnz
push
and
ja
cwde
inc
nop
mov
or
imul
pop
ror
(bad)
js
inc
sbb
adc
aaa
mov
cmp
js
pop
jecxz
lahf
cwde
or
push
in
push
pop
push
ins
dec
iret
sub
jnp
mov
push
movs
in
scas
mov
outs
shl
or
and
emms
add
ja
mov
cmp
loopne
mov
mov
int3
adc
aam
ret
(bad)
xor
mov
(bad)
into
adc
xchg
sub
cwde
cmp
xor
mov
sbb
(bad)
cmps
daa
push
dec
(bad)
std
jmp
mov
outs
sub
mov
and
addr16
and
ja
jmp
push
mov
or
mov
mov
xchg
lock
xchg
ret
fnstsw
xchg
stos
or
sbb
fucom
dec
mov
sbb
je
jl
repnz
and
loop
fcomip
pop
sub
adc
push
aaa
fsubr
mov
movs
sti
pushf
inc
test
sahf
xor
mov
cld
into
xchg
add
iret
adc
and
cmps
and
into
xor
adc
mov
xchg
xor
repnz
leave
leave
nop
dec
call
movs
cmps
and
jae
xchg
adc
ror
mov
mov
clc
add
shl
push
stc
and
retf
addr16
pop
jmp
cmps
cmp
into
dec
or
out
mov
mov
dec
push
loop
inc
cmps
les
imul
sub
pop
data16
inc
dec
inc
in
xchg
pop
cmc
ins
fisttp
xchg
hlt
movs
sub
adc
ja
push
and
sti
shr
scas
outs
mov
in
stos
dec
shl
jmp
shl
xchg
lahf
xor
ror
add
xor
(bad)
in
and
mov
push
xchg
ret
fsub
inc
ja
fistp
dec
clc
cmp
mov
ja
xchg
mov
int3
pop
mov
sub
cli
mov
scas
in
test
xor
dec
xor
pop
inc
jp
pop
in
sbb
mov
inc
test
push
(bad)
shr
sar
mov
std
ret
loop
adc
mov
cmp
sbb
cmps
mov
sub
inc
mov
lea
mov
fs
cmp
lahf
loop
hlt
xchg
or
out
or
lahf
pop
pop
fdiv
adc
sbb
jp
or
xchg
cs
scas
mov
or
frstor
add
cmps
cmps
fsubr
loopne
mov
rol
mov
mov
imul
inc
sub
push
sub
xor
sti
sbb
xor
loopne
movs
aad
imul
mov
into
jp
cmps
in
pop
or
or
and
lds
and
int3
dec
mov
pop
popa
adc
xor
xchg
sti
pop
hlt
push
and
ret
jge
nop
mov
(bad)
rcr
arpl
out
sbb
jl
ret
mov
sbb
fwait
push
aaa
sbb
push
jg
sbb
add
mov
fs
xor
cmp
cld
imul
and
adc
sbb
cld
jge
mov
sub
int3
sub
xor
jns
popa
dec
xor
pop
inc
push
popa
xor
pusha
ret
nop
sub
pop
jp
in
das
xchg
jne
mov
push
dec
sub
mov
and
or
add
sub
xchg
jbe
je
popf
mov
lds
pop
loopne
sbb
scas
xchg
inc
leave
mov
cmp
inc
ins
push
fstp
mov
shl
xor
mov
hlt
sub
pop
in
enter
push
lahf
int3
lock
cdq
push
outs
aaa
(bad)
int3
jmp
sub
cdq
mov
jns
push
stos
stos
or
stos
loope
outs
xlat
push
xchg
push
pop
pop
mov
add
xchg
dec
pop
lahf
pop
enter
sbb
fsub
mov
loopne
xchg
test
jmp
push
jne
fcomp
add
inc
mov
ret
fld
pop
test
repnz
call
nop
adc
adc
mov
dec
ret
and
iret
and
cmp
js
push
into
sbb
mov
jg
mov
loop
movlps
and
jo
sub
(bad)
dec
cmps
(bad)
jbe
or
jbe
movs
cwde
pop
jb
sub
outs
push
jge
mov
cli
jne
push
jecxz
cmp
sbb
scas
cmps
in
test
fisub
fdivr
jge
jne
dec
fiadd
sbb
sets
cli
xor
daa
sbb
stos
ret
mov
dec
cdq
lock
in
xchg
rcl
fwait
jae
and
jecxz
and
in
pop
inc
ins
jecxz
js
xchg
and
hlt
sub
iret
fstp
test
and
stos
sub
dec
inc
sub
ret
es
loopne
push
mov
xchg
mov
dec
sub
out
sbb
scas
movs
aas
sar
sbb
rcl
int
stos
or
cmp
jnp
mov
and
cmpxchg
push
aad
sar
das
pusha
add
inc
std
jne
cmp
xchg
pushfw
push
inc
cdq
push
ds
aaa
ret
inc
add
in
mov
(bad)
fcmove
push
(bad)
in
mov
and
pop
daa
cdq
add
retf
lea
push
mov
cmp
mov
fdivr
outs
push
and
addr16
clc
std
push
rcr
and
cmp
add
in
jne
enter
hlt
sub
(bad)
hlt
fnclex
jne
arpl
push
xor
mov
imul
xor
fist
mov
and
mov
jmp
mov
push
mov
cmps
jl
loopne
jno
lahf
push
dec
jecxz
stos
call
std
pusha
mov
inc
pop
jnp
mov
daa
mov
jp
mov
test
inc
and
and
fldcw
(bad)
(bad)
mov
or
mov
push
lods
xchg
cmp
ret
js
sub
pushf
mov
movs
loop
std
adc
aam
js
sar
xor
pop
dec
mov
and
mov
push
js
ja
pop
jmp
int3
int3
and
out
lods
(bad)
cmc
dec
aaa
popf
jge
stos
push
push
ins
outs
mov
in
or
or
mov
ret
cmp
sar
ficomp
or
fadd
lock
pop
mov
fstp
adc
jne
inc
(bad)
xor
push
data16
dec
leave
xor
jmp
push
mov
jnp
add
outs
sbb
push
dec
test
data16
mov
xor
mov
out
push
lahf
(bad)
(bad)
inc
mov
jns
(bad)
mov
cmps
call
sti
(bad)
and
jge
test
push
mov
and
mov
cmps
dec
retf
div
je
mov
jmp
fsub
stos
sbb
scas
xor
rcl
xor
ror
mov
icebp
pop
scas
aaa
test
pop
rcl
in
push
push
bound
add
add
(bad)
fstp
jo
xor
fdiv
adc
retf
das
sti
in
or
lods
adc
xor
mov
and
xor
adc
fs
retf
shl
push
sbb
inc
mov
mov
mov
mov
es
stos
cs
fwait
add
push
jmp
pop
dec
add
fs
xor
dec
das
pusha
shr
push
popa
retf
(bad)
dec
jae
repz
loopne
sub
(bad)
inc
fdiv
inc
ret
dec
lock
test
or
ror
or
xchg
or
cmp
sbb
js
cdq
add
lock
xchg
mov
(bad)
scas
mul
inc
xor
in
cwde
(bad)
out
mov
lods
pop
repz
or
fdiv
jl
adc
add
mov
sub
mov
nop
mov
fadd
add
jmp
sub
adc
cmp
pop
lods
add
dec
fild
movs
push
dec
cmps
js
pop
xchg
push
pop
lods
cli
sti
mov
mov
mov
jl
pop
sub
jns
iret
push
cmp
xchg
iret
imul
mov
or
lods
out
call
movs
repz
mov
jmp
xor
das
jp
ins
dec
out
xchg
xor
mov
int3
div
inc
pusha
inc
xchg
outs
push
pop
inc
mov
aam
sub
mov
retf
jecxz
lahf
dec
mov
ror
mov
pop
test
add
in
in
cli
mul
ret
iret
mov
lahf
and
sbb
dec
int
push
leave
aad
ins
dec
std
and
sbb
and
pop
xchg
cld
pop
and
popa
add
pop
inc
cmp
xchg
push
dec
mov
jae
xchg
popa
mov
pop
rcl
mov
enter
pop
stos
adc
es
push
in
out
mov
inc
and
pop
pop
and
xor
dec
sbb
cmp
cmp
fstp
popa
cmp
mov
jno
push
mov
or
pop
(bad)
mov
imul
test
ret
cmp
cmps
mov
sbb
int3
inc
pop
stos
repnz
push
mov
jge
(bad)
loope
bound
in
outs
mov
sub
pop
mov
push
jno
jnp
jmp
retf
sti
stos
pop
mov
inc
dec
xchg
popf
inc
call
inc
mov
and
and
sbb
fsubr
rcl
fs
mov
out
push
les
fimul
stc
pop
ror
int3
push
jle
sbb
mov
into
push
add
pop
movs
(bad)
outs
jge
jnp
mov
outs
test
sbb
jmp
jecxz
fadd
iret
and
bound
mov
xchg
xchg
mov
std
sub
sbb
xlat
mov
jmp
retf
push
repz
mov
push
ss
icebp
lock
ficomp
xchg
pop
and
lods
add
in
pop
mov
dec
(bad)
mul
shr
out
mov
push
les
scas
(bad)
mov
xor
fdivr
std
adc
imul
mov
jne
jmp
dec
dec
in
mov
repz
push
pop
jl
dec
xor
jl
add
inc
xor
std
jns
fwait
shl
and
mov
jl
adc
sub
clc
and
fcmovu
out
mov
ins
jno
ss
adc
sub
stc
mov
nop
into
mov
stos
mov
fs
leave
retf
cld
cmc
jns
pop
sahf
in
lea
push
pop
lods
out
adc
stos
dec
ja
fild
mov
adc
dec
dec
add
sbb
mov
test
in
adc
rcr
add
into
loopne
clc
jp
cmp
xchg
in
mov
cmp
push
js
in
mov
pushf
aaa
push
fmul
xor
mov
(bad)
mov
cmp
out
lahf
ret
stc
jmp
mov
dec
sub
(bad)
pop
bound
lock
and
mov
adc
aad
sbb
(bad)
lods
scas
inc
cwde
xchg
add
pop
cdq
movs
push
imul
shl
clc
jg
jle
sbb
mov
xor
add
dec
xor
push
mov
std
imul
mov
ds
aas
add
mov
dec
adc
aaa
xchg
int3
xlat
mov
(bad)
jl
in
test
shr
mov
retf
mov
sub
push
inc
pop
daa
mov
add
ret
adc
lds
xchg
jge
xor
xor
shl
inc
jmp
or
mov
addr16
and
xlat
test
lea
jb
into
cdq
mov
sub
(bad)
out
(bad)
xor
aas
xor
lods
aam
mov
sbb
xchg
mov
shl
jl
fnstcw
jecxz
je
push
mov
loopne
push
adc
jnp
xchg
inc
jae
mov
popa
out
push
push
inc
xor
jo
shl
(bad)
ret
push
loop
icebp
jecxz
sub
fisub
ins
leave
xor
(bad)
ins
xchg
call
(bad)
div
push
fistp
gs
push
mov
(bad)
xchg
shl
push
sub
mov
pop
ins
retf
mov
fmul
mov
iret
nop
mov
rol
adc
dec
popa
pop
cdq
ror
ret
movs
and
lahf
mov
adc
xor
hlt
lock
sbb
rcr
or
data16
mov
fmul
dec
jbe
rcr
movs
mov
sbb
mov
popa
outs
cs
xchg
push
xchg
push
shl
sub
mov
lock
sbb
gs
out
mov
fsub
mov
pop
xchg
int3
shl
sub
push
jmp
aad
mov
out
(bad)
sub
xor
mov
stos
pop
mov
sbb
cld
out
jo
jmp
jecxz
sbb
std
sub
rcr
(bad)
(bad)
jns
mov
sbb
rcl
jle
and
lods
sar
jo
mov
push
xchg
enter
ds
neg
jmp
retf
jb
adc
cld
adc
dec
adc
cmps
add
jge
retf
add
setg
sti
jnp
scas
xlat
iret
add
add
inc
stc
hlt
test
cmps
aaa
dec
or
sbb
into
cmp
addr16
fcmove
imul
xor
mov
cmps
cld
clc
into
movs
or
mov
data16
daa
test
cmp
pusha
jl
(bad)
cmp
push
push
pop
xchg
test
add
jne
adc
test
dec
scas
push
jno
loop
ins
jbe
and
cli
sbb
cmp
or
daa
rol
jno
dec
mov
inc
clc
add
push
xor
loop
outs
sti
xor
adc
les
jbe
pop
jo
pop
imul
aaa
cwde
dec
adc
es
mov
lods
push
xor
adc
push
daa
xor
in
jmp
shl
jo
(bad)
and
sahf
imul
inc
icebp
xor
test
xchg
jo
dec
jge
shl
mov
push
jo
push
or
and
pop
add
and
ret
jnp
sbb
int3
push
or
adc
pop
jbe
int3
push
cwde
xchg
push
cmps
push
in
push
mov
mov
mov
jbe
and
fsub
(bad)
mov
cmps
mov
pcmpeqd
xor
pop
cmp
xchg
inc
adc
(bad)
in
aas
mov
fstp
or
inc
mov
and
sub
scas
ds
jmp
push
sar
outs
jp
pusha
lds
fwait
test
push
fs
mov
pushf
xchg
push
les
sub
xor
shrd
adc
xor
inc
sub
pop
dec
out
pop
or
aas
int3
cmps
xor
cmps
adc
test
xchg
and
lds
push
outs
cmp
call
outs
icebp
mov
ds
cmps
(bad)
pusha
data16
loopne
lea
xchg
jle
mov
adc
jg
out
sbb
ficomp
(bad)
adc
push
xchg
fldcw
or
ins
loopne
adc
fld
sbb
inc
dec
punpcklbw
sbb
shr
cwde
push
fbstp
mov
call
mov
imul
int3
sbb
pop
push
sub
loope
ins
pusha
cmp
or
inc
inc
pop
dec
mov
push
icebp
mov
pop
xor
icebp
mov
(bad)
pop
xchg
mov
fnstsw
fild
scas
xor
mov
pushf
mov
sub
in
rol
mov
inc
mov
out
pop
nop
mov
je
outs
js
pusha
or
lock
retf
movs
mov
pop
mov
mov
xor
gs
scas
jg
sub
dec
mov
pop
push
sti
stos
push
push
gs
inc
push
arpl
sbb
jb
ins
fistp
or
into
fistp
hlt
enter
or
and
xchg
loopne
sbb
xchg
or
mov
push
add
js
fidiv
(bad)
loope
sub
or
add
inc
das
cmps
xchg
leave
mov
cmp
ret
daa
lahf
data16
outs
jnp
(bad)
inc
mov
ss
int3
or
mov
fldcw
pop
lahf
sbb
popf
push
mov
or
xchg
fld
dec
and
xor
fidivr
hlt
aad
es
imul
push
imul
fwait
xor
mov
xor
iret
xchg
out
sub
xchg
dec
push
mov
mov
push
imul
sub
dec
xor
movs
push
lods
push
and
cs
sbb
imul
or
ficomp
test
dec
gs
or
xchg
jp
inc
out
fsub
sub
jbe
outs
cwde
ins
gs
lds
imul
out
jle
and
lods
aaa
inc
inc
inc
xchg
push
mov
bnd
movs
test
popf
pusha
cmp
loopne
pushf
leave
test
aad
mov
add
sbb
adc
xchg
inc
retf
loopne
dec
pop
add
fs
cdq
jmp
add
fisubr
mov
sbb
shl
and
sti
js
imul
imul
xor
je
adc
int
(bad)
icebp
mov
xchg
mov
aas
scas
out
repz
test
ins
loopne
cmps
xchg
fild
cmp
es
or
or
sub
pop
pop
sbb
lods
push
cmp
sbb
rcl
stos
xor
cli
and
dec
pop
fwait
in
and
bound
int3
pop
leave
push
test
bound
push
(bad)
out
jp
sar
cli
mov
mov
es
sbb
addr16
arpl
out
fwait
push
imul
dec
aam
push
es
inc
sar
pop
dec
fs
xchg
and
pushf
scas
ror
fst
xchg
xor
xor
call
setb
push
bound
and
test
mov
test
out
pop
pop
outs
enter
stos
int3
jg
fwait
clc
(bad)
ins
or
add
push
ss
cdq
cdq
lods
sbb
push
rcr
mov
xchg
(bad)
(bad)
std
pop
pop
pop
xchg
adc
sbb
push
repz
leave
scas
in
cwde
xchg
sub
and
xchg
fst
mov
sub
adc
sbb
fcmovu
push
dec
pop
fld
(bad)
or
add
mov
stos
aam
sahf
sti
into
cmps
shr
adc
popf
mov
rcl
das
out
jo
jmp
js
enter
mov
add
mov
and
pushf
in
mov
movs
(bad)
fdiv
test
jmp
jbe
xchg
push
call
lods
inc
mov
rcr
arpl
push
xor
pop
ja
jg
inc
cmps
cdq
sahf
inc
dec
fldcw
fiadd
mov
test
inc
shr
aam
shl
push
cmps
int
lahf
mov
xchg
jbe
fisub
push
cs
dec
repz
fstp
mov
xor
xrelease
xchg
out
inc
retf
cmps
sbb
int
mov
psrld
and
out
int
sbb
out
adc
sbb
dec
xchg
xchg
aad
call
sub
icebp
inc
push
xor
inc
and
sub
or
adc
adc
and
jmp
mov
push
push
test
jno
bnd
mov
pop
pop
jmp
mov
mov
mov
jp
push
jmp
and
or
das
mov
mov
stos
cld
das
mov
mov
rol
xchg
sub
pop
lahf
je
fidiv
jp
mov
or
int
rol
cmc
sti
mov
sar
(bad)
retf
xchg
or
xor
retf
mov
mov
inc
push
imul
cs
sbb
fdivr
inc
fwait
jecxz
inc
or
and
repnz
loope
test
es
in
daa
js
push
mov
aad
sub
lock
imul
push
out
or
pop
mov
call
cmp
and
scas
outs
jg
cs
mov
adc
pop
rcr
pop
xor
inc
xor
add
adc
(bad)
aam
shl
leave
loopne
or
push
push
add
adc
out
or
cmp
jecxz
imul
test
mov
shl
test
jb
dec
data16
xor
imul
jnp
pushf
cld
jp
push
dec
pop
dec
imul
js
dec
cmps
ficomp
(bad)
scas
ja
jo
mov
add
sti
shr
das
jecxz
jbe
loope
jecxz
retf
out
jne
in
ins
inc
jae
push
ret
cdq
mov
movs
cmps
push
shr
add
in
call
loop
sti
repz
push
out
(bad)
mov
ja
cdq
cmp
xchg
sbb
xchg
pop
xor
xchg
in
rol
push
sub
fs
mov
scas
(bad)
nop
inc
push
mov
bound
dec
cmp
jne
aaa
xlat
dec
call
icebp
popa
jbe
cmps
sbb
add
mov
imul
neg
popf
repz
adc
sub
addr16
push
aad
sti
adc
dec
retf
or
rcr
psadbw
mov
inc
cmps
call
jo
jp
outs
pop
not
push
push
and
shr
add
bound
enter
jae
xchg
xor
dec
movs
pushf
pop
sbb
es
hlt
sti
(bad)
sti
mov
shr
cmc
cmp
sub
jmp
mov
mov
and
imul
sbb
mov
xor
mov
push
push
imul
xlat
pop
ja
or
sub
or
daa
ds
sub
push
dec
out
mov
dec
test
cmp
out
(bad)
stc
or
into
in
jae
jmp
xlat
sbb
movs
mov
(bad)
outs
mov
inc
mov
sbb
push
in
rcr
outs
mov
adc
jb
jne
xchg
fst
lods
std
add
call
leave
lods
sar
and
inc
mov
and
mov
pusha
popf
ficomp
or
ss
scas
cmc
imul
dec
xchg
dec
inc
in
sub
sar
leave
in
xor
(bad)
jmp
mov
jmp
jp
jp
add
out
out
and
scas
fsub
and
movs
mov
in
popa
fisub
dec
inc
lods
not
mov
and
push
add
xor
mov
arpl
sbb
adc
(bad)
add
(bad)
imul
iret
repnz
arpl
inc
lods
jl
xchg
dec
ja
jp
xor
(bad)
(bad)
mov
jg
cdq
dec
into
arpl
test
sub
mul
div
inc
das
sub
sub
inc
inc
shl
cmp
repz
imul
jo
sub
ds
das
data16
adc
jmp
xor
push
bound
in
shl
or
stc
jns
dec
loope
outs
popf
mov
cs
push
inc
les
mov
test
pop
sti
push
loopne
mov
(bad)
and
push
pop
adc
iret
ret
jmp
jbe
sub
ret
in
lahf
and
xchg
jno
(bad)
xor
je
loop
or
ror
cmp
retf
mov
adc
pop
repz
rep
sub
xor
push
scas
mov
ja
and
jle
stos
(bad)
pushf
jecxz
push
mov
sub
pop
mov
arpl
mov
mov
daa
scas
jnp
imul
sahf
or
mov
add
shl
enter
add
xor
dec
(bad)
xor
sub
nop
mov
in
dec
sub
jo
sub
sub
ror
push
jns
jecxz
and
pop
aad
xor
ds
pop
mov
scas
and
fwait
sbb
jb
ror
test
call
sbb
dec
adc
pop
cdq
xchg
inc
mov
pusha
xlat
push
jae
jge
xor
sbb
stos
dec
mov
xchg
mov
sar
or
mov
mov
mov
cld
aaa
gs
(bad)
lods
xchg
in
rcl
out
xchg
mov
sti
dec
cli
jmp
mov
lods
ins
xchg
mov
xchg
out
(bad)
or
cmp
inc
enter
adc
loope
inc
sbb
xchg
sbb
push
add
gs
cmps
dec
push
cmps
push
xchg
pushf
popf
call
mul
repz
or
xlat
mov
push
pop
daa
test
add
fisubr
dec
jmp
add
sub
into
in
lock
mov
mov
test
add
xor
je
and
mov
ror
ja
aas
pop
rcr
pop
dec
cmps
out
pop
shl
lahf
push
out
mov
mov
in
loopne
cli
add
call
lds
in
xchg
cmp
push
(bad)
mov
bound
mov
cmp
fisttp
sub
jnp
nop
push
inc
cmp
stos
mov
jmp
xchg
shl
clc
cmovnp
cmps
mov
mov
dec
sbb
inc
inc
push
outs
dec
cmp
leave
cmp
int
lahf
mov
lock
out
xor
popa
pushf
mov
jb
loop
mov
jg
ins
mov
add
mov
push
jbe
lock
js
adc
pop
(bad)
pop
or
xor
sahf
xchg
fs
push
daa
mov
mov
popa
popf
pop
out
jl
pop
movs
mov
cmp
pop
or
dec
mov
call
sar
aaa
push
(bad)
ja
out
or
mov
ds
jp
adc
push
ds
inc
sub
and
cli
mov
pop
jge
shr
out
int3
dec
int3
mov
jle
(bad)
cdq
loop
or
mov
cmps
outs
cmp
and
out
rcl
hlt
jo
jecxz
xlat
and
inc
out
(bad)
not
loop
or
and
fld
or
mov
dec
mov
dec
mov
jl
jg
outs
dec
xchg
xchg
pop
push
repz
xor
push
pop
adc
push
(bad)
cwde
loope
pushf
popf
adc
jecxz
jmp
scas
(bad)
mov
jl
daa
jecxz
loope
push
int
imul
pop
sar
mov
jle
les
add
jno
fmul
mov
sbb
sbb
movs
ds
in
mov
or
jae
bound
push
or
push
and
(bad)
mov
inc
stos
sahf
aaa
cmc
test
ret
jmp
fist
jl
ins
sub
ins
xchg
sbb
fmul
hlt
jge
adc
hlt
cmp
mov
mov
retf
add
dec
sbb
jg
fadd
sub
scas
imul
lahf
add
loop
fld
push
xchg
dec
sub
js
sbb
aam
push
mov
gs
sbb
cmp
int
enter
ds
mov
dec
ss
add
jle
arpl
shl
cmp
pop
jmp
(bad)
out
sbb
sub
int3
jo
mov
lahf
fs
rol
jle
bound
cli
push
sub
push
out
mov
leave
cmp
push
daa
jb
mov
add
jb
dec
jle
dec
xchg
lods
or
add
dec
cmp
mov
inc
jb
inc
bndldx
das
aas
loop
xchg
ret
lods
mov
dec
addr16
int3
sub
mov
ins
dec
inc
cwde
data16
jle
lods
cmp
mov
movs
daa
cmp
cmp
cmp
jmp
pop
movs
call
jo
mov
dec
sti
push
jbe
out
sbb
stos
icebp
ret
hlt
call
int
int3
fmul
retf
lds
sub
nop
push
pop
xchg
xor
es
cs
jg
push
pop
and
icebp
sbb
sub
and
arpl
jg
mov
retf
mov
add
inc
fwait
scas
sbb
or
sbb
arpl
or
push
fldcw
test
pop
jbe
stos
push
xchg
ret
xchg
cld
jl
mov
leave
mov
mov
hlt
sub
ficomp
mov
dec
fidivr
aaa
mov
push
dec
dec
add
idiv
scas
inc
fcompp
cmps
pop
faddp
push
adc
stos
push
mov
pop
js
xchg
mov
fcom
clc
or
sub
dec
dec
jne
idiv
and
stos
sub
das
loopne
rcl
mov
push
out
xor
or
adc
inc
pop
out
mov
add
and
inc
adc
push
jo
xor
call
hlt
and
push
clc
mov
out
add
cmp
dec
adc
ret
xor
aad
xor
dec
(bad)
aaa
data16
std
xor
inc
rol
adc
outs
test
inc
fwait
dec
cmps
std
test
sar
out
loope
jp
mov
add
jno
adc
pop
arpl
adc
rcr
push
mov
and
dec
outs
jge
movs
fisttp
mov
(bad)
outs
xlat
scas
int
mov
adc
mov
fbld
xor
(bad)
xchg
fild
ret
call
(bad)
out
rcl
arpl
cmp
and
adc
lea
scas
mov
xchg
jg
mov
popa
es
or
out
mov
jnp
pusha
push
rcl
pop
mov
cwde
push
sub
stos
iret
dec
pop
or
pop
mov
inc
into
xor
fidivr
int
jmp
clc
or
mov
shl
push
dec
xor
nop
cld
sbb
dec
and
stc
push
dec
ret
pop
mov
jno
jge
xchg
adc
mov
or
outs
jge
(bad)
jmp
lods
mov
ja
pop
in
retf
(bad)
shl
mov
mov
add
in
lods
push
in
cmp
or
sub
out
mov
jle
mov
in
xchg
lea
jl
dec
inc
les
and
cmp
outs
test
push
mov
sahf
test
lock
mov
dec
adc
pop
pop
mov
test
(bad)
mov
call
shl
inc
stc
pop
inc
bound
dec
push
xchg
aam
or
je
push
out
clc
jle
pop
jecxz
movs
pop
movs
mov
pusha
sti
aaa
or
dec
and
int
mov
outs
sbb
push
jae
jge
push
cs
or
(bad)
je
cmp
popa
dec
lock
loope
mov
inc
mov
jge
and
add
adc
xchg
pop
in
and
ja
mov
cld
repnz
xchg
lock
lea
fbstp
loop
test
sbb
(bad)
xor
iret
xor
stos
(bad)
std
mov
scas
pusha
xchg
popf
push
mov
pop
cpuid
call
idiv
adc
inc
retf
jne
mov
js
(bad)
ret
imul
cli
jg
cmp
call
enter
jbe
mov
lahf
xchg
jne
fisubr
push
popf
xchg
adc
pop
outs
ins
push
add
xor
shr
clc
sub
push
repz
push
adc
mov
jge
jl
pop
cmps
and
dec
dec
push
mov
jmp
rol
pop
out
jbe
lods
adc
fadd
sahf
and
push
aam
cli
aaa
stos
stos
cwde
xchg
cmp
popf
mov
ins
add
xchg
dec
sbb
stc
cmp
out
test
repz
sahf
lds
retf
and
clc
loopne
repz
enter
stc
hlt
mov
stos
xchg
dec
mov
xor
pop
clc
movs
out
add
je
push
icebp
cs
fcom
retf
in
loopne
mov
scas
xchg
imul
out
jno
rol
pop
push
mov
pusha
jecxz
sar
adc
mov
mul
(bad)
test
adc
or
xchg
xchg
xchg
clc
in
xlat
fmul
les
sbb
(bad)
push
push
mov
loope
add
add
icebp
scas
stc
and
pop
xlat
xchg
scas
xchg
fldcw
loopne
scas
dec
or
mov
and
pop
cmp
ror
pop
loope
pushf
mov
xchg
xor
stc
cmp
loop
sahf
or
test
icebp
xchg
aad
nop
aad
xor
and
inc
inc
sub
xchg
cmp
sub
push
push
xlat
dec
sub
mov
pop
pop
loope
mov
mov
or
daa
jns
xchg
jecxz
or
push
clc
test
shr
fidiv
or
cmp
ss
sar
cmps
inc
jmp
loop
mov
cmps
dec
mov
jo
and
and
fisubr
nop
mov
pop
je
and
add
dec
mov
xor
out
dec
ins
fwait
test
add
retf
fisub
stos
fstp
fadd
dec
sub
in
push
or
js
mov
pop
mov
es
out
shl
sbb
add
sbb
stos
xchg
adc
cmp
adc
test
bound
(bad)
cmp
je
out
rcr
cmp
cmp
lahf
cmp
or
adc
pop
shr
loopne
pop
scas
mov
cmc
neg
lods
push
cmp
mov
retw
int3
dec
xlat
dec
mov
pop
adc
sub
stc
jge
xor
mov
sbb
ja
in
ds
jne
mov
push
fwait
xchg
addr16
cmp
mov
or
add
cmp
add
ret
sahf
test
ss
pop
fsubr
repz
call
scas
jl
jp
(bad)
fmul
movs
xlat
sti
mov
sub
cmp
(bad)
outs
aad
(bad)
lods
cmp
scas
and
dec
out
clc
(bad)
sbb
out
loop
push
mov
pop
push
(bad)
addr16
outs
lea
or
in
xor
adc
call
xor
mov
or
in
and
jae
stc
(bad)
addr16
lds
inc
outs
sub
test
stos
jp
loope
sub
out
hlt
outs
aas
(bad)
adc
sbb
out
fist
outs
and
inc
in
icebp
add
dec
imul
test
cmp
mov
cmps
cmp
pop
jbe
pop
adc
inc
cmp
xchg
lock
cmp
add
cmps
jno
mov
pop
mov
xchg
xor
pop
lahf
aam
pop
popf
mov
neg
and
rcr
mov
dec
or
pusha
ror
outs
repz
push
jge
pop
sub
enter
fbld
sub
push
mov
test
jmp
sub
scas
push
call
pop
out
inc
sbb
and
fimul
mov
fnstcw
mov
jbe
push
lahf
loope
jl
inc
cmp
je
jl
in
add
or
or
mov
sbb
sbb
cmp
scas
gs
jmp
sti
(bad)
sub
loopne
pop
push
enter
push
mov
mov
fwait
scas
cmps
fild
fwait
stos
add
in
jo
(bad)
int3
add
sti
stc
in
pop
fwait
sub
popa
int
test
jl
and
push
call
stos
sbb
push
aas
push
jne
xor
(bad)
jmp
pop
cs
and
jg
inc
push
adc
lahf
popa
push
jl
popa
push
imul
aam
inc
xchg
xchg
rcl
pop
(bad)
loopne
ror
pop
dec
outs
mov
rcr
xchg
dec
sub
mov
xchg
movq
fisubr
pop
mov
sub
mov
int3
xor
push
jl
xor
xchg
cs
in
les
cmp
jno
mov
mov
xchg
mul
mov
fwait
mov
push
sub
fwait
mov
pop
jae
add
inc
call
dec
scas
or
cmp
int
aam
pop
pop
jne
ja
jg
(bad)
push
outs
pop
(bad)
mov
test
jl
dec
clc
or
sub
ret
scas
pop
mov
xor
mov
or
mov
or
inc
adc
xchg
and
dec
inc
sbb
add
pop
call
jnp
lea
inc
bound
popa
push
repz
sub
fisttp
jg
addr16
add
out
imul
pop
xor
xchg
mov
xlat
jno
sbb
pop
cmp
jb
dec
repnz
ins
adc
xchg
add
add
xchg
add
xchg
jmp
lahf
rcl
add
repz
fnstsw
ins
rcr
std
push
or
les
pop
dec
je
sub
and
in
ffree
sahf
pop
stos
retf
add
idiv
fisttp
daa
stc
(bad)
aad
out
xchg
xchg
clc
mov
jp
jecxz
aas
test
and
mov
jae
(bad)
cdq
aas
lea
in
(bad)
or
xor
(bad)
rol
push
neg
lods
outs
cmp
stos
push
in
call
ret
fwait
rcl
fld
aaa
je
shl
xor
sub
push
jle
pop
mov
dec
pop
xchg
mov
mov
xchg
cdq
push
fucom
add
push
es
mov
adc
dec
sahf
sub
and
fst
mov
add
pushf
fs
addr16
xor
pcmpgtd
(bad)
mov
and
cmp
rcl
movs
inc
into
and
jns
push
jmp
push
xor
(bad)
lock
xor
jp
pusha
popa
aas
aas
pop
idiv
stos
in
(bad)
fsubr
outs
pop
bound
(bad)
clc
jnp
xchg
in
pusha
fstp
(bad)
jecxz
call
or
inc
fsubrp
not
jmp
cmp
pop
add
xchg
ins
clc
out
add
daa
xor
cld
cwde
sub
cmc
out
daa
or
lods
pop
and
jle
(bad)
retf
cli
push
(bad)
into
shl
xor
jnp
sub
xor
inc
mov
pusha
ret
pop
push
in
pop
jno
mov
sbb
xchg
sti
dec
in
fld
out
mov
or
daa
scas
data16
jmp
test
pop
push
mov
int3
bnd
sti
sub
pushf
cmp
sbb
(bad)
pop
shl
and
pop
lea
pop
iret
(bad)
jmp
out
mov
xor
das
popa
dec
imul
mov
inc
pop
mov
add
push
leave
retf
int
inc
cmp
test
cs
(bad)
in
mov
or
jecxz
cmp
push
or
jmp
mov
hlt
jo
cmp
pop
pop
arpl
sbb
data16
stc
jmp
pop
ja
xor
jns
mov
movs
cmp
and
out
std
scas
xor
lods
(bad)
push
add
dec
jae
mov
out
mov
repz
fisubr
icebp
mov
pop
xor
cmps
int
ss
test
mov
inc
test
inc
mov
movs
mov
inc
retf
pusha
cs
dec
mov
pop
xchg
xor
jne
pop
sbb
scas
ins
jne
scas
cmp
pop
inc
bound
adc
jb
or
sub
and
mov
push
adc
aas
xchg
or
imul
iret
ja
out
(bad)
pop
in
mov
cmp
leave
fisttp
popa
aas
loopne
or
xchg
repnz
ss
push
mov
(bad)
js
push
cld
scas
jmp
gs
jecxz
inc
pop
xchg
data16
pushf
aad
cs
inc
test
sbb
add
sbb
mov
sub
xchg
xchg
or
(bad)
sbb
fcom
cld
sbb
ror
mov
inc
sbb
and
mov
and
sub
(bad)
push
ins
call
(bad)
leavew
loopne
popa
pop
mov
push
cmp
xchg
stc
mov
imul
xor
mov
mov
aam
jmp
cmp
push
retf
xor
shr
in
or
and
add
aas
mov
cli
sub
test
or
pop
rcl
and
mov
lea
push
mov
sahf
dec
sub
sbb
mov
loopne
push
mov
fcmovne
dec
icebp
cdq
(bad)
dec
push
fsubr
mov
ss
jl
mov
fcmovu
aam
jmp
fdivr
push
rcl
push
inc
and
xchg
les
test
bound
xchg
jge
cmps
jle
(bad)
repnz
mov
push
dec
movs
ja
add
jmp
mov
jo
adc
pop
adc
fistp
xchg
adc
mov
dec
sbb
or
add
inc
mov
cmp
loopne
out
aas
mov
cmps
shr
dec
repz
jmp
pop
pop
xor
jb
int3
div
inc
imul
mov
ret
lods
dec
fld
xchg
xor
cmp
mov
jmp
ret
ins
mov
ds
jno
cmp
out
push
(bad)
cdq
stos
xchg
pop
mov
pop
jnp
add
test
icebp
push
jmp
jmp
mov
sbb
icebp
and
or
dec
mov
into
retf
dec
cld
mov
(bad)
ins
pop
scas
inc
scas
gs
inc
adc
sbb
jb
mov
jecxz
cmp
cmps
xchg
pop
mul
nop
xchg
stos
(bad)
aam
and
dec
repnz
shl
jg
out
mov
cdq
rcl
lods
or
icebp
into
add
push
cmp
jg
clc
repz
add
pop
inc
dec
push
mov
fwait
adc
loope
jle
push
jmp
cmps
add
loope
loope
outs
aam
inc
lea
inc
mov
jns
mov
xchg
repz
mov
or
mov
pop
xor
mov
scas
or
hlt
jmp
(bad)
push
retf
nop
dec
loopne
push
push
std
loopne
js
fisub
ret
(bad)
lea
jmp
stos
adc
xchg
sbb
outs
lds
stos
xchg
cmc
repz
jge
pop
xor
sub
inc
ficom
mov
fwait
push
call
pop
mov
fiadd
push
push
hlt
rcl
(bad)
jge
pop
aam
xchg
push
in
out
mov
jns
pop
dec
pop
out
(bad)
sti
add
dec
inc
fnsave
(bad)
pop
cmp
inc
call
or
xor
mov
inc
daa
je
jae
push
mov
repz
cld
mov
push
pop
je
adc
icebp
cmp
sbb
dec
js
out
rcr
mov
leave
out
ficomp
push
mov
xor
ret
cmps
icebp
fldcw
lds
sbb
sbb
push
scas
jo
leave
push
and
call
bnd
inc
dec
xchg
xchg
adc
xor
into
jns
or
sahf
push
adc
fucom
dec
and
and
and
add
popf
add
in
bound
mov
loopne
add
cmps
jmp
cld
in
fs
jecxz
loope
pop
loopne
xchg
inc
cmp
iret
sub
lock
les
and
lods
adc
ja
xchg
and
(bad)
ret
jmp
test
gs
mov
js
daa
mov
fs
neg
adc
movs
mov
and
xor
les
pop
outs
xor
cmp
sub
push
popa
daa
mov
test
pop
(bad)
sub
jge
push
in
jbe
icebp
pop
add
xchg
jmp
jnp
in
in
cdq
pop
mov
(bad)
(bad)
cmp
out
xor
xchg
pushf
push
fisttp
les
mov
cmps
stc
dec
stos
add
and
mov
stos
test
add
aam
test
test
or
mov
mov
stos
daa
add
int
add
jg
jnp
out
sub
pusha
inc
and
jne
sbb
fsub
jg
loope
test
nop
and
add
test
aaa
xchg
mov
cmps
adc
push
into
test
fstp
stc
mov
bound
enter
pop
xor
xchg
rcr
stc
pop
shl
pop
sub
in
(bad)
out
in
sub
int3
popf
mov
or
jmp
nop
mov
jb
test
xor
and
xchg
not
mov
adc
fidivr
(bad)
mov
imul
sub
mov
bound
xchg
ret
cmp
cwde
push
(bad)
pop
stos
add
jnp
call
std
ret
ret
(bad)
movs
dec
xchg
dec
jmp
scas
lods
dec
out
jle
adc
jg
or
mov
sar
fstp
push
(bad)
dec
fcomp
arpl
jns
push
scas
sub
out
mov
xor
retf
in
stos
dec
mov
cmps
xchg
icebp
repnz
mov
(bad)
add
fist
cmp
mov
daa
aaa
push
imul
dec
fisttp
(bad)
xor
enter
loope
out
pop
out
pop
out
add
inc
pop
pop
jbe
jb
cdq
cwde
jae
test
jmp
mov
not
push
mov
inc
movs
je
jbe
and
adc
sbb
out
pop
movs
fnstsw
inc
inc
jnp
scas
jns
hlt
push
aaa
jle
das
mov
fcomp
push
mov
dec
cmps
fstp
ja
xchg
or
jmp
js
inc
xchg
cmps
sahf
push
sub
cmp
and
jmp
xor
dec
mov
in
xchg
inc
sar
repz
cmps
call
popf
push
xor
test
adc
aad
ja
sbb
lea
and
stc
mov
mov
mov
jb
int3
jp
pop
mov
cmp
or
add
sbb
test
pop
pop
pop
mov
adc
int
repnz
nop
test
pop
inc
in
hlt
jb
pushf
in
mov
cmps
xor
add
cmp
imul
call
mov
bswap
sar
pop
mov
sub
xchg
mov
push
jmp
ficomp
adc
xchg
push
mov
sbb
xchg
sar
dec
ficom
dec
xor
xchg
sub
mov
xchg
xchg
retf
fisubr
pop
xchg
pop
retf
es
xor
xchg
adc
adc
jne
sbb
int
inc
stos
cmps
movs
imul
int3
in
add
and
stos
xor
jp
xor
imul
and
jae
push
pop
sub
cwde
xor
dec
mov
and
jl
cmp
daa
mov
ror
xor
sub
outs
loop
aaa
sbb
pushf
shl
lds
pop
push
mov
shl
dec
movs
pop
movs
enter
add
sbb
xlat
pushf
cmp
sub
xchg
mov
je
inc
mov
fdiv
ins
mov
jns
xchg
lahf
xor
fstp
loopne
pop
fisub
push
jno
movs
test
sub
jmp
push
dec
test
mov
jp
ret
hlt
shr
push
jae
aas
mov
das
int3
ins
(bad)
fsub
das
cli
shr
sub
mov
adc
sub
outs
sbb
gs
cmp
sbb
pop
stos
or
movs
pop
jbe
add
xchg
jne
sti
sub
jmp
loopne
pop
push
inc
shl
sub
ror
xchg
addr16
out
xor
(bad)
mov
jmp
xchg
fbstp
jp
sbb
inc
test
dec
sub
xchg
mov
and
nop
popf
fist
push
sub
or
in
cmp
repz
adc
jecxz
xchg
cwde
out
push
adc
jne
pusha
push
mov
retf
movs
lock
mov
or
mov
repnz
lock
(bad)
and
cs
fisttp
dec
lea
dec
out
xchg
test
repnz
dec
cmp
xlat
xchg
movs
or
xor
sbb
add
je
jmp
pop
pop
push
ins
sub
hlt
rol
out
xor
mov
adc
cld
aam
test
push
xchg
sub
inc
sub
mov
sub
(bad)
clc
leave
cmps
pop
das
into
push
fwait
push
mov
retf
pop
push
add
push
jo
fbld
imul
xchg
dec
hlt
xor
adc
test
aaa
fdivr
lods
in
pop
loop
xchg
jmp
es
cmp
jg
mov
inc
pop
loope
xchg
sbb
arpl
cmp
rcl
imul
jp
jae
adc
mov
push
pusha
loope
bound
mov
lds
and
ins
cdq
xchg
add
pusha
mov
push
xchg
movs
fst
and
imul
pop
mov
push
fidiv
int
adc
pop
mov
fbld
(bad)
(bad)
sahf
adc
xchg
lahf
jo
fisttp
dec
movs
add
test
mul
popw
mov
es
sub
outs
and
mov
sahf
shl
fild
add
hlt
sbb
ret
outs
fisttp
sahf
mov
ja
cdq
movs
nop
scas
jmp
loope
(bad)
cmps
cmp
xchg
sub
cwde
jnp
add
shl
cwde
imul
stc
and
xchg
adc
sub
inc
fiadd
and
mov
jp
sub
jae
les
xchg
mov
arpl
(bad)
push
push
pop
ss
popf
add
sub
repz
mov
inc
mov
jmp
aas
call
sbb
mov
cmp
xor
xor
sbb
jmp
(bad)
jae
mov
mov
lods
adc
loopne
aaa
cli
mov
loope
call
inc
jbe
sbb
add
popa
fldln2
fdivr
xchg
adc
cdq
test
jo
xchg
aad
xor
neg
or
adc
jo
sti
out
pop
add
movs
sbb
sub
cmp
dec
dec
jmp
sub
test
and
je
leave
fist
xor
mov
sub
push
daa
outs
scas
ss
jmp
clc
push
call
(bad)
xlat
mov
xchg
mov
daa
add
add
pop
dec
in
sbb
or
aas
mov
push
(bad)
(bad)
iret
scas
scas
dec
sub
mov
lods
lods
cmp
imul
bound
adc
sahf
jmp
dec
mov
push
aam
mov
mov
mov
mov
iret
out
outs
test
cli
and
dec
mov
and
xor
xor
sbb
dec
ret
fmul
xchg
mov
hlt
mov
mov
jmp
push
loop
adc
fbld
push
arpl
js
jbe
div
(bad)
dec
(bad)
int
dec
je
sbb
and
call
inc
push
xor
(bad)
dec
hlt
test
fild
pop
pusha
mov
inc
clc
inc
push
jbe
sub
fbstp
jg
add
sbb
xchg
pop
or
and
ds
pop
bound
ins
repnz
xchg
je
(bad)
or
das
int3
pop
cmc
shr
push
test
test
outs
(bad)
pop
movs
cli
mov
sbb
bound
pop
push
mov
sbb
ss
cmps
sti
cli
mov
cmp
stc
hlt
mov
or
or
ret
jecxz
std
xchg
jae
push
(bad)
aam
mov
push
inc
aas
adc
mov
sar
sbb
push
pop
iret
jle
dec
mov
inc
sbb
adc
cmc
fcom
mov
or
fild
and
aam
mov
mov
and
int3
ret
dec
cmp
loope
mov
mov
mov
adc
out
ret
mov
sti
movs
pop
mov
sbb
cmp
pushf
cmp
mov
mov
in
xor
jg
jp
xor
or
clc
out
sbb
jno
fidiv
or
std
imul
je
xor
int3
fmul
sub
dec
mov
cs
xchg
push
mov
sbb
lock
cli
add
ins
mov
in
mov
xchg
cmp
dec
mov
(bad)
arpl
jle
cs
or
adc
jg
mov
adc
or
hlt
shl
daa
xor
cli
lock
mov
sbb
xchg
scas
mov
sbb
lods
dec
stos
adc
mov
xor
xchg
pop
mov
xchg
adc
lahf
ja
xchg
push
stos
adc
sub
loopne
fcomi
not
jnp
sub
xor
sub
sbb
dec
(bad)
and
das
xchg
or
pop
ins
outs
and
arpl
fldcw
or
xor
xor
inc
int3
jge
push
dec
push
fild
jg
int3
sub
das
cli
or
movs
push
pusha
add
call
cmp
xchg
cmp
sub
add
shl
add
xchg
jge
xchg
cmp
daa
fist
shl
aam
loope
mov
fisttp
ds
ret
push
and
aaa
js
jnp
out
lock
or
xor
repz
lds
ja
loopne
aas
cmp
das
mov
les
lahf
repnz
mov
cmps
ret
dec
jb
pop
mov
cwde
out
xchg
stos
out
cmp
mov
jmp
adc
sub
shl
cld
loope
dec
dec
push
jl
jnp
cmc
push
push
add
cmp
out
and
dec
aad
ror
dec
lea
pop
dec
(bad)
jne
push
pop
mov
xor
xchg
mov
call
mov
(bad)
pop
popf
cmp
jnp
lods
js
mov
dec
xor
and
pusha
xchg
enter
sbb
add
sub
clc
(bad)
and
adc
sti
retf
dec
aaa
push
sti
sbb
retf
sub
jb
test
and
xchg
shr
mov
mov
fnstcw
push
add
out
and
dec
push
out
aaa
xchg
lods
ja
mov
std
and
mov
outs
sbb
mov
test
mov
xor
jb
rol
(bad)
mov
out
iret
or
sub
retf
shl
sub
cmps
dec
jae
adc
mov
cmps
jnp
comiss
push
leave
cdq
(bad)
sub
cmp
sub
rcl
setle
es
and
loope
push
mov
xchg
sbb
pop
push
add
sti
and
arpl
push
cmp
je
(bad)
xchg
pop
mov
(bad)
shl
push
sub
cld
push
retf
(bad)
js
add
mov
data16
retf
ror
or
repnz
lock
cs
shl
xchg
mov
dec
pop
test
mov
or
imul
fsubr
jmp
mov
dec
pop
mov
mov
stc
(bad)
lea
nop
ins
(bad)
xor
dec
popf
(bad)
mov
es
inc
xor
inc
(bad)
or
mov
shl
(bad)
pop
ret
pop
push
fsubr
ds
ret
aaa
ret
xchg
popa
je
ss
pop
mov
add
and
and
loope
fsub
mov
cli
dec
jb
cmc
cmp
(bad)
fs
pop
test
adc
sbb
mov
pushf
int
js
(bad)
shl
adc
mov
dec
iret
jno
pop
lahf
xor
pusha
mov
xor
js
xor
mov
jl
pop
cmp
mov
adc
lods
popa
test
outs
loopne
test
cwde
and
sub
scas
xchg
gs
popf
cld
mov
aam
inc
scas
inc
dec
js
adc
(bad)
pop
retf
add
out
jl
aaa
jecxz
nop
and
imul
or
loop
sbb
mov
and
aad
pop
cmp
xchg
clc
cmps
pop
fadd
rcl
cli
xchg
mov
lea
rol
pop
ret
xchg
and
cli
cli
out
std
cmps
mov
lods
cwde
mov
pop
(bad)
ss
inc
popf
out
bswap
push
pop
or
rcr
inc
pop
fcom
cli
push
add
dec
jno
in
mov
xchg
push
out
lods
or
push
fld
mov
es
fdivr
add
jg
mov
out
test
pop
pusha
mov
in
(bad)
leave
jo
movs
popa
shl
mov
and
jae
imul
push
mov
xchg
sti
lock
jg
sbb
lods
push
popf
add
mov
in
cmps
xchg
mov
push
jmp
int
sti
stc
cdq
xor
in
test
(bad)
in
mov
or
rol
pushf
xchg
in
or
mov
sbb
adc
xor
call
mov
outs
mov
and
xchg
ret
pop
test
in
pop
jne
push
cmps
xor
in
add
add
add
mov
inc
add
jmp
mov
fst
rcr
mov
xor
or
and
icebp
jnp
lods
sbb
push
push
fiadd
push
cmp
jge
adc
cli
scas
push
fstp
sbb
in
test
sar
cwde
stc
xor
push
rcl
sub
out
imul
mov
enter
das
mov
inc
sbb
scas
xor
pop
mov
fisub
outs
mov
mov
mov
rol
test
add
push
jl
call
mov
test
sub
inc
pushf
push
icebp
fistp
(bad)
push
jmp
mov
pop
mov
or
inc
cld
hlt
inc
fsubr
xchg
pop
push
jnp
xchg
retf
cmp
sub
jmp
fild
mov
scas
mov
jae
xchg
or
sar
or
dec
jne
test
js
jbe
push
pop
push
mov
jae
cmp
fsubr
dec
jecxz
mov
adc
mov
lahf
push
dec
stos
inc
cmp
jae
and
push
push
out
jns
mov
mov
xor
iret
adc
or
sbb
repz
stos
sbb
mov
push
lahf
cmp
(bad)
(bad)
sub
(bad)
cmc
jge
cmc
sbb
cmp
inc
cmp
mov
ja
jnp
out
aad
xchg
aas
jne
xchg
(bad)
xchg
push
pop
test
add
ficomp
int3
outs
(bad)
jae
xchg
mov
lds
and
lahf
fld
mov
and
retf
loope
loop
push
lods
xor
in
into
pop
cwde
inc
fidiv
les
dec
xchg
mov
xchg
mov
xchg
fs
inc
jmp
scas
js
shr
fmul
add
mov
pop
leave
mov
icebp
(bad)
mov
aas
pop
cmp
push
dec
push
pop
int3
int3
leave
and
cwde
mov
pop
lahf
sbb
call
movs
pop
mov
(bad)
mov
fs
cmp
int3
mov
or
(bad)
mov
or
add
cwde
push
(bad)
inc
or
jbe
fistp
test
or
vsqrtpd
jmp
xor
dec
(bad)
aas
cmps
mov
mov
scas
rcr
mov
cmp
popf
xor
dec
add
ficomp
ds
xchg
jle
mov
pusha
imul
sbb
imul
dec
ror
pop
cmps
push
mov
sbb
pop
sub
pushf
repnz
sbb
outs
enter
push
mov
and
ins
aaa
popa
outs
or
imul
and
mov
sbb
dec
loop
inc
push
push
retf
adc
das
cdq
sbb
icebp
out
sbb
pop
push
push
ss
jb
inc
inc
and
iret
push
je
or
mov
inc
xchg
(bad)
jmp
test
or
xlat
adc
es
push
stos
mov
outs
fwait
cmp
inc
(bad)
pop
or
jb
pop
xor
mov
aad
cdq
xchg
lea
loopne
std
js
mov
xor
faddp
imul
mov
pop
and
mov
das
mov
inc
ds
push
jno
out
enter
adc
daa
inc
mov
sbb
lock
pop
in
adc
push
cmp
push
cmp
add
into
push
jp
vandnps
icebp
mov
test
enter
jl
push
mov
mov
mov
cmc
and
mov
sbb
and
cmp
pop
test
add
jmp
jge
ins
lea
movs
ins
xor
leave
ins
fcmove
aam
inc
sub
daa
jecxz
xchg
jne
jmp
xor
inc
jmp
inc
push
cmps
inc
mov
inc
push
or
push
mov
xor
dec
scas
adc
cmps
or
cmps
shl
sbb
je
sahf
pop
jp
jb
stc
mov
fiadd
sti
mov
test
mov
dec
and
mov
sub
ss
stos
call
les
dec
int3
sbb
pop
fimul
inc
cdq
rol
adc
jne
jmp
aam
out
push
lock
mov
mov
and
mov
or
xchg
out
sub
pushf
(bad)
sub
mov
neg
cmp
and
xchg
adc
dec
cmp
call
loop
repnz
jmp
mov
inc
mov
lock
cmp
mov
mov
daa
add
pushf
xchg
inc
clc
test
dec
mov
inc
lahf
cmc
mov
into
lahf
mov
shr
iret
xor
cmp
call
cmp
in
out
jnp
mov
sub
jle
sub
jmp
cs
fwait
dec
cdq
or
sub
jmp
sub
inc
xor
in
ins
pop
out
ds
sbb
in
inc
mov
xchg
(bad)
test
push
mov
je
push
inc
sub
sahf
mov
cmp
or
dec
in
or
stos
or
data16
add
stos
adc
call
stos
out
in
test
jae
inc
mov
adc
push
sub
fistp
and
and
sub
cmp
les
jp
inc
rcr
je
repnz
pusha
mov
jnp
out
pop
mov
sbb
mov
push
push
push
cmp
mov
xchg
neg
clc
sub
add
call
jo
int3
mov
sbb
mov
movs
stos
add
leave
mov
pop
adc
call
rol
std
dec
aaa
not
mov
dec
mov
xor
or
(bad)
dec
repz
add
dec
fwait
or
or
enter
shl
jmp
inc
and
jecxz
mov
cmps
sbb
call
jl
imul
mov
sbb
ret
lods
dec
scas
sbb
rol
js
out
sub
popf
cwde
and
mov
pusha
jmp
mov
ins
and
push
push
(bad)
stc
xor
jno
and
push
hlt
out
xchg
cmp
mov
aam
xchg
dec
inc
dec
call
or
pop
dec
ret
es
sbb
jg
repnz
mov
int
mov
icebp
and
xlat
fs
dec
test
jo
clc
push
sbb
ret
pushf
enter
pop
cmp
shl
aas
fld
stos
fadd
pop
or
not
(bad)
push
(bad)
push
xor
add
jnp
ret
retf
jo
push
mov
adc
inc
add
imul
adc
maskmovq
mul
js
inc
or
and
and
sbb
cmp
push
pop
shr
jnp
mov
xchg
xchg
mov
mov
xchg
popa
sub
test
mov
sub
sbb
pop
std
mov
jmp
add
retf
ds
push
xor
mov
rcr
sbb
xor
btr
mov
mov
es
or
or
xchg
mov
sbb
add
shl
sub
(bad)
jecxz
pop
adc
int3
push
cs
fbstp
in
xor
lea
add
loope
jae
and
arpl
jl
aaa
jnp
shl
lds
and
xchg
xor
das
test
test
jl
in
retf
popf
mov
mov
xchg
arpl
or
ficom
bound
daa
add
pop
and
jae
cmps
mov
cmc
stos
out
mov
stc
fmul
cld
sub
mov
repnz
lock
push
scas
jno
adc
pop
inc
ret
rol
fldenv
hlt
fild
cld
test
cld
sbb
push
dec
xchg
jb
outs
ds
stc
adc
scas
pop
mov
mov
mov
inc
jl
cmp
(bad)
stos
int3
out
xor
mov
lock
push
push
int3
sub
nop
inc
inc
jo
ror
mov
xchg
loop
or
loop
ins
mov
inc
lock
jnp
call
repnz
cmps
ja
fmul
push
retf
cmp
bound
das
lods
jge
sbb
repz
jo
out
out
push
push
push
mov
lea
bound
xlat
sar
hlt
shr
out
aad
push
sbb
push
adc
loopne
in
ins
mov
cmc
mov
ret
call
arpl
lock
scas
sbb
inc
cmp
mov
push
inc
sub
cmp
inc
and
out
push
in
cmp
cmps
jns
daa
sbb
stc
jnp
jo
jnp
push
fild
adc
xor
aam
mov
(bad)
dec
test
div
lods
mov
jle
arpl
adc
xchg
pushf
xor
sub
aam
stos
jl
xchg
pop
jge
push
mov
dec
sbb
and
cwde
into
out
mov
pop
xlat
shr
mov
lock
fs
popa
daa
ret
mov
dec
xchg
fisttp
push
inc
and
and
ud1
jl
pop
pop
and
push
xchg
ret
inc
mov
mov
jb
push
dec
mov
push
into
ja
(bad)
aad
mov
cmc
cmp
adc
neg
cli
pop
inc
xchg
jo
in
je
daa
adc
loop
adc
cmp
adc
mov
(bad)
xchg
jne
sbb
dec
aaa
dec
xor
mov
mov
and
sbb
pop
or
mov
nop
outs
xor
or
push
jg
lds
cmps
mov
xchg
call
cmps
imul
push
clc
xchg
or
mov
sbb
in
scas
push
mov
mov
add
cmc
lea
cli
xchg
jno
mov
sbb
pop
adc
not
ins
retf
fist
es
mov
add
and
cmp
inc
inc
or
mov
shrd
mov
call
xchg
push
int3
(bad)
cmp
(bad)
nop
movs
or
aad
mov
mov
shl
push
enter
jge
push
mov
dec
cmps
sub
popa
fisttp
lahf
and
push
imul
fst
adc
cmps
dec
fistp
ffree
or
fcmove
cs
mov
test
pop
fadd
and
mov
cs
cwde
mov
mov
inc
and
mov
mov
mov
sub
dec
push
sub
adc
ins
xchg
push
inc
int
xchg
arpl
dec
enter
mov
or
mov
or
out
mov
pop
fistp
cmp
dec
push
xchg
in
xchg
retf
sbb
cli
pop
push
cmp
gs
inc
xor
jl
pop
lea
or
jns
mov
ret
sti
mov
inc
je
jnp
push
inc
sub
pop
push
push
pop
sbb
pusha
dec
push
xchg
fld
mov
adc
or
movs
or
adc
and
js
andps
jle
xchg
aas
pop
nop
into
ret
xor
data16
ret
movs
addr16
fwait
sbb
cmps
pop
mov
dec
jecxz
xor
mov
adc
sbb
add
adc
jae
lea
add
or
repnz
sbb
mov
xchg
or
cmp
jnp
mov
fucomp
add
jo
sar
sbb
sbb
fdiv
int
xchg
lods
sbb
out
xor
(bad)
mov
shl
pusha
call
fidivr
jg
jbe
adc
ficom
inc
sub
and
sub
clc
mov
shr
(bad)
xchg
xor
call
mov
cmc
push
mov
mov
push
jl
mov
ret
dec
movs
es
push
aad
fnstenv
ins
out
mov
mov
mov
push
sbb
push
stos
sti
pop
mov
sbb
cmp
call
mov
xor
out
or
cmp
mov
pop
lea
rol
sbb
fmul
retf
je
pop
ins
loopne
mov
adc
xlat
fnstcw
jp
sub
jecxz
mov
scas
pop
(bad)
cld
sahf
bound
push
push
ret
fcom
sbb
dec
inc
in
cmp
jecxz
dec
mov
scas
mov
das
adc
jae
ins
mov
dec
mov
adc
mov
int
call
inc
sbb
scas
adc
push
sbb
pop
inc
cmp
push
add
clc
shl
out
adc
xchg
stos
push
cmp
xchg
int
sbb
pop
push
popf
les
sub
mov
imul
fwait
jae
fs
add
sub
jp
pop
jmp
imul
dec
dec
jg
(bad)
sbb
push
es
jne
addr16
ja
inc
mov
lock
inc
xor
ret
dec
lods
popa
enter
clts
mov
or
and
inc
and
stc
mov
pop
aad
xor
jno
jnp
loopne
gs
mov
pop
mov
clc
mov
jmp
retf
sub
scas
pop
jmp
sub
mov
pop
fidivr
cmp
or
shr
movs
cmp
pop
ins
jl
sub
loope
push
(bad)
push
sbb
(bad)
push
pop
loope
fistp
(bad)
int
nop
fwait
xor
out
call
test
jno
fidivr
inc
lock
sub
and
ins
sub
bound
adc
loope
lahf
pop
int
stos
push
or
dec
sub
dec
mov
pusha
dec
cli
xor
mov
pop
jns
adc
mov
pop
mov
test
jp
test
ja
bnd
xchg
nop
jns
sub
jb
je
mov
bound
dec
inc
je
inc
nop
in
push
clc
outs
inc
mov
popf
mov
call
xchg
and
cmc
aaa
inc
mov
push
mov
sbb
xchg
cmp
pop
jne
daa
xchg
mov
adc
shl
add
(bad)
outs
inc
test
scas
in
or
xchg
add
adc
adc
pop
das
inc
mov
popf
or
and
stc
out
mov
cmp
data16
push
mov
adc
mov
inc
inc
cli
push
enter
xor
push
dec
test
and
jb
(bad)
pop
cs
mov
sbb
enter
or
inc
es
je
shl
sti
stc
inc
mov
ret
cmps
dec
call
std
call
pop
das
push
leave
ror
das
aam
dec
mov
add
dec
mov
ds
pop
jle
sub
lock
sbb
add
jbe
mov
pop
cli
mov
push
cs
scas
dec
div
test
xor
(bad)
pop
fdivr
mov
mov
cmp
test
or
mov
adc
icebp
inc
scas
jmp
adc
popf
pop
or
sar
mov
test
lahf
call
sbb
fist
pop
mov
jg
into
int
cmp
mov
push
(bad)
xchg
(bad)
jns
(bad)
and
xor
loop
cmp
pop
scas
inc
xlat
adc
inc
pop
es
(bad)
xchg
jle
xor
mov
jbe
je
adc
mov
jmp
stc
xchg
and
dec
js
imul
(bad)
mov
xchg
or
jmp
or
inc
call
in
clc
les
in
addr16
dec
fsub
adc
push
dec
sbb
or
ds
lods
jo
aam
test
mov
xchg
shl
mov
enter
xor
sbb
push
dec
mov
movs
dec
inc
fsub
add
jo
and
ret
jne
nop
test
and
mov
fistp
out
out
xor
js
mov
in
(bad)
cmps
fcomi
(bad)
imul
inc
popa
pusha
out
inc
call
mov
jp
mov
add
adc
(bad)
xlat
pop
mov
xlat
inc
data16
mov
dec
mov
das
int
(bad)
jns
call
je
or
mov
cmp
push
push
call
imul
or
mov
cld
sub
in
jl
fmul
pop
dec
das
adc
pop
adc
cmps
push
or
loopne
xchg
or
push
in
les
push
sub
jo
imul
mov
call
xchg
mov
repnz
mov
jmp
dec
xor
xor
cmp
inc
int3
mov
je
and
mov
(bad)
imul
pop
int3
mov
add
mov
test
pop
xchg
out
mov
jge
xor
sub
adc
ds
pop
mov
inc
xchg
imul
div
scas
inc
xchg
frstor
idiv
jbe
jmp
lahf
mov
xor
or
sbb
and
bound
test
lock
cmps
mov
fdiv
and
jne
int
adc
mov
pop
jb
stc
aam
push
cmp
cdq
sub
push
lods
xchg
loop
and
mov
ficom
out
test
ja
mov
add
daa
cdq
xchg
fwait
push
shl
rcr
retf
hlt
sub
jl
mov
movs
jns
into
push
lock
pushf
or
dec
pop
mov
hlt
out
jb
sahf
pop
pop
fisttp
add
fwait
push
jg
pop
and
ret
cld
(bad)
cmp
xchg
test
mov
ds
mov
fmul
sahf
jle
xchg
bound
dec
lds
pop
mov
or
(bad)
pusha
fnstcw
push
in
pop
add
xchg
mov
jmp
add
push
punpckhdq
add
xor
popf
push
into
jno
or
sbb
inc
xchg
fldcw
xchg
xchg
cmps
shr
adc
jmp
retf
lock
xchg
mov
fmulp
int3
shl
pop
int
scas
xlat
mov
nop
sbb
jno
push
rol
div
dec
jo
inc
dec
inc
in
rcl
mov
mov
call
mov
dec
adc
adc
cmp
xchg
popa
outs
ins
(bad)
cmp
div
pop
jne
dec
lds
int
mul
mov
jno
fild
repz
adc
add
sub
into
fs
mov
lods
push
mov
pop
add
mov
or
jmp
or
cmps
mov
popf
repz
repz
pop
push
pusha
pop
push
rcl
daa
mov
lods
out
out
sbb
or
clc
inc
inc
je
bnd
or
(bad)
out
pop
test
fbstp
push
pop
sbb
adc
mov
(bad)
sbb
cmps
add
mov
imul
lods
xchg
call
pop
add
(bad)
fs
adc
inc
xchg
adc
push
ficom
cmp
leave
pop
idiv
dec
cmp
dec
mov
or
xchg
xchg
inc
hlt
add
xchg
std
cs
lock
xor
add
(bad)
dec
cld
ficom
jbe
(bad)
lahf
jo
or
movs
sub
sbb
rol
in
scas
pop
jns
jecxz
cmps
mov
bound
pushf
sbb
stos
mov
inc
out
inc
dec
mov
(bad)
stos
xchg
mov
and
rol
aad
push
inc
xor
or
ss
(bad)
jmp
rcr
adc
xlat
out
xchg
ins
push
mov
sub
xchg
push
aad
cmp
add
pop
pop
ds
mov
mov
mov
in
mov
scas
mov
std
stos
es
popf
xchg
add
jae
xchg
ins
push
fadd
shl
data16
stc
mov
push
call
cli
mov
imul
clc
dec
test
cld
imul
test
iret
repnz
aaa
loope
mov
sub
pop
(bad)
jmp
aad
jbe
xor
aaa
mov
xchg
enter
xchg
jmp
repnz
in
icebp
xchg
push
xor
sub
stos
ficomp
push
sub
(bad)
neg
pop
dec
loop
jnp
dec
and
ret
cmp
sub
mov
fnstcw
jl
adc
retf
dec
cld
rcr
clc
jo
mov
inc
xlat
hlt
pop
adc
push
out
in
dec
sub
(bad)
neg
mov
outs
pop
mov
inc
sahf
adc
pop
xchg
ins
sub
xlat
mov
retf
scas
pusha
pushf
(bad)
xor
xchg
mov
mov
adc
sub
loop
out
out
and
and
push
inc
push
inc
sub
cmp
in
lods
stos
sti
dec
pop
mov
xchg
shl
sub
jecxz
pop
push
adc
movs
push
ds
in
stos
aas
lds
jnp
les
add
jne
(bad)
push
mov
and
jl
push
inc
sti
add
pop
(bad)
mov
daa
add
or
inc
cmp
shl
xor
and
and
outs
mov
lahf
jecxz
xor
rol
call
ret
and
sub
ins
add
aam
or
fwait
xchg
shl
mov
mov
add
addr16
mov
mov
add
mov
int3
or
ins
sar
cmp
jmp
out
into
mov
repnz
int3
fadd
cmp
mov
jno
sbb
stos
adc
add
out
lds
xor
outs
cmp
push
jle
or
xchg
jg
ss
jge
in
sar
aad
enter
add
sbb
icebp
pop
ret
aaa
les
adc
fxam
push
mov
mov
dec
(bad)
shl
push
push
or
xchg
xchg
xor
out
pop
pop
sub
cwde
pop
xchg
jmp
ror
neg
mov
icebp
jbe
ds
shr
hlt
dec
adc
rcl
add
vpshufd
jnp
mov
les
inc
rcr
and
scas
mov
pop
sti
in
jl
pushf
mov
xor
mov
imul
std
pop
jp
add
iret
jl
push
and
jae
imul
dec
jne
ret
fwait
aas
pop
dec
retf
pop
mov
and
stos
test
adc
sub
enter
mov
fnstenv
dec
data16
xchg
xchg
fdivrp
rol
add
bound
(bad)
jnp
dec
jns
mov
jp
dec
in
mov
adc
stos
movs
mov
mov
in
scas
cmps
add
sub
xchg
push
jle
aam
(bad)
mov
or
add
pop
call
and
jnp
lea
loop
mov
cmps
ja
mov
jb
or
mov
xchg
sub
xchg
pop
pop
xchg
movs
ja
daa
lods
mov
pop
add
sti
cmps
cwde
xchg
xchg
pop
adc
cmps
(bad)
jmp
je
lock
nop
imul
aad
jecxz
jb
xor
imul
xchg
jno
xchg
outs
cmp
sub
call
in
cwde
(bad)
je
scas
shl
cmps
(bad)
fwait
es
and
and
dec
jmp
leave
mov
or
ins
in
jb
cwde
ins
xchg
adc
and
xchg
cmps
mov
or
inc
and
adc
icebp
dec
fimul
sbb
push
ja
ror
add
mov
mov
sbb
or
jb
pop
xor
pop
cwde
add
sbb
pop
not
fstp
push
cdq
ret
out
xchg
dec
int
test
jmp
mov
pop
push
jae
mov
scas
(bad)
xchg
dec
inc
in
add
popa
in
lods
ret
adc
cmc
dec
arpl
shr
movs
xchg
or
aaa
pop
adc
jbe
or
dec
sbb
loopne
sbb
mov
pusha
ret
enter
or
sbb
sbb
shl
mov
(bad)
mov
jmp
add
ret
lahf
sub
add
(bad)
ficom
jge
sub
inc
repnz
add
movs
and
cmps
fist
push
and
xchg
jmp
push
inc
ss
push
test
call
mov
push
adc
add
xor
jecxz
in
add
test
jge
xchg
icebp
dec
rcr
mov
test
add
repz
(bad)
dec
jne
ja
inc
add
jp
scas
mov
dec
mov
(bad)
and
shr
push
enter
jb
je
cmp
push
xlat
mov
jo
jo
jns
cs
mov
in
call
adc
out
test
add
push
lods
inc
push
sub
inc
xor
mov
xor
cld
jns
je
mov
inc
fs
ja
fwait
and
pusha
jnp
out
sbb
push
ret
out
nop
xchg
(bad)
loopne
xor
xor
add
cmp
or
mov
jle
inc
mov
inc
mov
push
movs
sbb
xor
cmps
outs
(bad)
popa
xchg
dec
jl
adc
cmp
pop
mov
data16
push
fmulp
xchg
inc
pop
inc
xchg
loopne
mov
(bad)
sbb
call
clc
cmps
adc
inc
jo
push
std
cmp
ret
add
repz
cmc
dec
or
jge
push
xchg
pop
repnz
pop
int
and
fincstp
inc
leave
fadd
pop
push
inc
jns
aad
inc
xchg
push
not
add
xor
fwait
mov
adc
xchg
pop
int
pushf
movs
rol
jns
xchg
bound
jae
adc
xchg
sbb
ins
cwde
call
mov
or
mov
cmp
cs
xchg
out
and
pop
xor
push
mov
or
mov
ret
lea
push
loopne
shl
xchg
ins
movs
mov
test
pop
jns
and
loope
std
push
(bad)
jnp
lods
adc
sbb
test
mov
push
add
dec
stos
jp
cli
push
jae
xchg
sbb
push
push
jmp
scas
add
jge
jne
jmp
push
mov
data16
scas
iret
lahf
shl
sti
icebp
pop
cld
sub
or
jmp
mov
stos
ror
dec
push
stos
cmp
sub
dec
mov
pop
fimul
mov
(bad)
stos
dec
add
cmp
idiv
fmul
pop
xor
mov
adc
jle
pop
std
jge
hlt
es
imul
pop
les
mov
xor
and
repz
jns
jmp
inc
in
sub
mov
ins
jae
bound
loopne
stos
hlt
inc
(bad)
mov
cmp
retf
jecxz
dec
push
ret
jg
cld
push
sti
(bad)
mov
ja
sbb
movs
es
outs
mov
and
mov
inc
push
in
aad
fild
ja
xchg
das
pop
test
rcr
(bad)
push
mov
addr16
push
mov
mul
jae
cmp
scas
lea
sub
mov
ins
or
push
repz
and
in
(bad)
ss
push
dec
jb
mov
(bad)
pop
pop
stos
cmp
test
sub
call
loope
jne
sbb
lods
add
stos
push
xor
and
stos
sub
imul
stos
jmp
push
fucomi
data16
add
push
call
ins
and
fist
in
and
aam
xlat
mov
mov
add
jmp
fcomip
xor
xchg
mov
dec
pop
cld
imul
icebp
mulps
in
daa
in
push
sbb
hlt
xchg
mov
das
aas
arpl
in
mov
mov
mov
pushf
lods
jg
dec
jne
aaa
add
mov
xor
dec
xchg
push
(bad)
pushf
adc
and
jl
pushf
pop
fsub
pop
ds
jb
cmp
pop
stc
dec
push
and
loope
ins
add
test
std
out
popa
jns
xchg
addr16
add
xor
lea
dec
lahf
cmp
jl
mov
xor
dec
scas
inc
inc
std
push
xchg
pop
xor
add
rcl
dec
jnp
int3
scas
movs
pushf
lahf
lds
fnsave
pop
jmp
dec
ins
cmp
sbb
in
sbb
dec
outs
jae
adc
icebp
cwde
nop
jle
in
test
sub
dec
xor
movs
mov
pop
add
sub
inc
jne
icebp
mov
pop
sbb
aad
movs
push
xchg
add
cli
mov
out
dec
idiv
pop
or
scas
inc
cli
enter
or
mov
mov
jmp
sub
push
pop
sub
pop
add
aas
sahf
out
jbe
out
sti
xchg
mov
cmp
jmp
mov
mov
out
and
xor
pop
aaa
adc
mov
arpl
into
dec
(bad)
call
mov
or
cmp
adc
xchg
xchg
dec
and
mov
stos
sub
jae
pushf
jae
mov
jle
inc
add
or
les
pusha
ja
ret
jnp
pop
mov
ins
inc
xchg
sub
cmc
push
jmp
retf
(bad)
cli
arpl
push
push
out
call
push
mov
jo
mov
cmp
push
stos
rol
cmp
lds
push
sub
dec
outs
clc
icebp
lahf
ret
mov
outs
mov
jne
add
and
or
pop
shl
js
adc
daa
cmp
mov
pop
sbb
adc
pop
adc
cmp
fmul
inc
iret
fsub
test
or
stos
les
add
adc
adc
mov
push
pop
clc
ret
jmp
repnz
outs
pop
gs
mov
adc
ja
lods
xchg
xor
cmp
daa
cmp
or
cmp
mov
push
xchg
mov
das
sbb
ds
jecxz
or
sub
outs
sti
mov
inc
in
pusha
lods
adc
jge
mov
stos
add
mov
mov
call
js
adc
mov
jno
test
fdivr
or
sar
cld
shl
cmp
adc
push
pop
mov
out
push
mov
adc
jnp
ss
cmps
jo
lock
hlt
mov
mov
into
mov
xchg
mov
daa
inc
jg
mov
dec
stos
mov
ja
mov
add
lods
in
scas
jnp
loope
and
adc
cwde
sbb
js
push
fnstsw
push
sub
int3
push
or
jo
inc
aaa
inc
in
push
in
jo
push
pop
jo
rcl
jmp
lods
mov
mov
jmp
add
imul
pop
dec
cmp
xor
and
hlt
sbb
arpl
mov
push
jg
call
cmp
fadd
out
inc
lock
cmps
mov
mov
rol
mov
xlat
pop
repnz
xchg
lods
call
or
mov
jo
push
sbb
cmp
imul
push
xchg
fiadd
retf
jmp
dec
ins
sbb
adc
cmp
add
jns
std
mov
cmp
setge
inc
pop
fnstcw
dec
push
sub
cmp
inc
push
pushf
push
fld
dec
cmp
cmp
bound
out
in
lds
ror
jno
fdivr
into
(bad)
rcl
push
lds
mov
jmp
push
frstor
pusha
lods
cmps
jne
or
xchg
pop
js
jp
mov
cmp
adc
stos
mov
inc
ret
xchg
fadd
arpl
out
(bad)
cmp
xlat
sbb
call
xor
(bad)
xlat
jg
cmps
and
xor
jne
mov
pop
movs
test
into
lock
test
jmp
jmp
and
aaa
fdivr
sbb
stos
ret
sub
scas
push
dec
or
cmp
mov
pop
data16
in
add
aas
pop
jo
xchg
clc
dec
dec
adc
stos
imul
push
mov
jp
mov
retf
outs
outs
sbb
mov
sub
cmps
pop
and
dec
pusha
xchg
mov
int
jp
adc
movs
sbb
dec
xlat
ja
pop
jnp
fs
mov
gs
mov
fs
mov
and
pop
mov
adc
jg
dec
pop
sub
ins
mov
outs
jl
jns
inc
sub
int3
cmp
es
mov
stos
js
pushf
mov
jno
pop
ins
les
mov
fadd
scas
int
xchg
ret
xor
cmc
or
sub
mov
fldenv
ds
shl
imul
dec
inc
mov
sub
pop
or
sub
dec
pop
mov
dec
aad
lea
ins
push
std
push
xchg
and
outs
div
cmp
pop
mov
lods
mov
cmp
sub
(bad)
jmp
sti
adc
idiv
icebp
repz
in
dec
shr
pop
mov
xchg
fwait
jp
push
push
xor
mov
and
sbb
sbb
inc
cmp
and
jg
push
in
dec
lods
daa
mov
sbb
dec
mov
cmps
jg
push
add
outs
jae
xor
lahf
jecxz
dec
mov
ret
(bad)
je
xchg
in
cmp
xor
retf
mov
call
xchg
pop
mov
(bad)
ins
jb
mov
cwde
xor
jge
fistp
sbb
sahf
jle
fs
je
adc
dec
sub
jl
push
adc
hlt
add
mov
jns
xlat
ja
out
sub
mov
jecxz
mov
jne
dec
lds
ins
xlat
dec
imul
stos
aaa
(bad)
sbb
dec
ficom
or
popf
mov
sti
not
call
and
mov
je
pop
dec
pop
pop
retf
sahf
xchg
ins
pop
into
retf
adc
sub
ds
push
call
sub
or
jl
clc
and
out
call
jle
lods
(bad)
jmp
jo
jmp
leave
movs
and
fidiv
js
daa
leave
outs
push
(bad)
dec
jb
and
enter
das
out
mov
xchg
or
out
push
jo
cld
sbb
sub
(bad)
xor
cmc
imul
imul
add
out
dec
dec
mov
repnz
retf
inc
sub
adc
jmp
sbb
or
xor
call
dec
std
addr16
push
pop
test
std
mov
dec
add
sub
stos
sahf
jge
xor
repz
cmp
xor
adc
fild
in
fiadd
add
push
ins
fist
repnz
lock
data16
shl
pop
sbb
mov
xchg
lahf
daa
mov
mov
ror
push
dec
mov
jns
repz
inc
sbb
push
shl
xchg
shl
cmps
aam
push
dec
int
mov
xchg
mov
mov
mov
add
iret
inc
mov
jle
cmp
mul
jo
xchg
fisttp
xor
shl
pop
mov
clc
jl
or
(bad)
scas
rcr
jno
rcl
int3
data16
fwait
push
sahf
lock
repz
push
mov
jmp
or
mov
jne
mov
loop
in
outs
xor
sub
enter
lds
frstor
dec
pop
pop
dec
mov
mov
jns
mov
push
sbb
cmp
jmp
out
cli
popa
mov
or
xor
push
test
add
mov
sbb
jb
sahf
mov
push
xchg
retf
cld
cmp
xchg
imul
(bad)
adc
cmp
(bad)
sub
adc
mov
call
jnp
lods
pop
xchg
push
mov
hlt
mov
cwde
dec
xor
lods
inc
xor
inc
jno
push
xchg
aaa
mov
push
es
dec
cmc
loopne
cmp
clc
mov
xchg
bound
fwait
dec
mov
sub
cli
push
add
cld
and
leave
js
imul
mov
pop
je
add
xor
cli
inc
xor
mov
cmp
xor
push
inc
xlat
sub
aaa
mov
mov
push
shl
lock
arpl
paddusb
pop
xor
sbb
fild
push
movs
int
mov
fnsave
sbb
iret
mov
lahf
inc
xor
cmp
xor
sub
or
adc
pop
ficom
mov
out
movs
push
test
int
push
jl
cmp
and
scas
ins
outs
add
fstp
in
outs
repnz
mov
stc
jmp
jecxz
int3
jl
nop
bound
icebp
and
and
adc
lahf
outs
dec
xlat
xchg
test
out
add
push
outs
out
(bad)
ret
ins
loopne
lock
inc
arpl
inc
push
or
mov
inc
sub
sub
cmp
mov
lea
xlat
or
imul
out
mov
pop
jge
data16
mov
(bad)
push
(bad)
fldcw
sbb
cmp
sbb
xor
xchg
aam
loopne
lods
xchg
ja
add
lods
cmp
test
mov
(bad)
jmp
inc
movs
inc
ret
bound
jb
std
cmps
jg
sahf
add
mov
in
ins
xchg
in
xor
outs
aas
pusha
push
(bad)
pop
imul
pop
jmp
jecxz
xchg
sbb
jb
push
dec
push
(bad)
jmp
mov
sub
pop
repnz
lahf
jnp
les
xor
push
scas
and
mov
adc
adc
pop
or
add
dec
adc
(bad)
mov
in
movs
out
dec
arpl
lock
cmp
or
ror
(bad)
(bad)
clc
xchg
pop
adc
mov
imul
jo
rcl
adc
adc
push
push
jae
call
pusha
aam
mov
mov
add
jle
gs
jmp
inc
sub
leave
jmpw
push
pop
push
ins
jle
jb
retf
dec
int3
pop
add
adc
scas
push
pop
adc
jl
pop
in
(bad)
retf
sbb
cdq
mov
(bad)
push
mov
and
sbb
inc
test
sbb
(bad)
xor
je
sub
xchg
pop
into
jg
and
push
xchg
xor
pusha
ret
pop
fs
adc
movs
add
stos
add
shr
push
and
cmp
test
and
sub
ret
dec
or
mov
sub
sti
mov
mov
and
aas
push
not
fstp
cmp
icebp
retf
loope
mov
sbb
int3
test
dec
test
aaa
test
(bad)
aad
fmul
in
ret
ja
sti
jl
add
mov
jecxz
(bad)
mov
call
out
in
mov
or
arpl
sub
test
in
sbb
aad
je
or
adc
sbb
fst
and
and
xchg
xor
(bad)
jnp
sbb
imul
or
loope
inc
push
scas
and
push
out
inc
cmp
mov
iret
loop
or
pusha
xchg
aaa
xchg
sbb
mov
subps
loopne
fst
fnsave
ins
jmp
aas
std
jno
sub
ins
popa
xchg
cmp
(bad)
fadd
cmp
gs
jle
and
loop
iret
mov
sub
add
hlt
in
addr16
rcr
jne
(bad)
dec
pop
jmp
jecxz
inc
inc
jge
ins
je
fdiv
(bad)
int
imul
cmps
xchg
cmp
in
mov
cmp
imul
push
and
mov
invd
(bad)
arpl
cs
and
jge
fidivr
jbe
in
in
out
in
fidivr
ins
in
retf
push
sahf
mov
inc
loopne
pop
or
pop
pop
scas
add
daa
inc
imul
(bad)
dec
push
dec
push
lds
sub
mov
mov
or
dec
mov
shr
call
(bad)
and
movs
or
ror
jecxz
retf
inc
rcr
cmp
or
jmp
ret
fwait
jb
cmp
je
leave
jp
into
jb
sbb
pushf
pop
adc
imul
and
int3
movs
out
cld
pop
jg
lods
xor
call
adc
loop
shl
popf
shr
xchg
and
repnz
mov
pusha
or
adc
int3
(bad)
cmp
adc
sbb
pop
xor
stos
push
pop
daa
sbb
aas
cmp
cli
push
add
(bad)
aas
es
(bad)
xor
sub
js
xchg
ins
mov
push
add
dec
push
cdq
aam
rol
fmul
xchg
or
outs
test
call
jns
mov
retf
js
or
mov
adc
or
jae
pop
(bad)
jp
in
pop
or
loop
dec
scas
sub
out
scas
cmp
dec
mov
mov
test
sub
jle
mov
fsub
mov
test
lds
les
adc
lahf
loopne
and
scas
add
jno
je
pop
push
xor
push
stc
vpmacsdql
xor
outs
sub
repz
push
lds
add
test
and
jmp
les
in
push
sti
cmp
mov
cmps
xor
inc
pop
mov
test
mov
or
int
shr
or
outs
shl
cmp
ja
inc
test
sbb
pop
nop
sbb
push
jge
and
adc
je
mov
call
retf
jb
cs
popf
jge
scas
mul
xchg
in
mov
leave
or
je
shl
imul
repz
jae
out
inc
mov
mov
add
jecxz
add
and
or
cli
and
(bad)
mov
jmp
fild
mov
aam
cmp
dec
(bad)
xchg
and
aam
xchg
clc
xor
cmp
push
xor
in
stc
fadd
inc
sub
sub
inc
xchg
sub
fsubp
cmp
mov
stos
jmp
inc
jmp
cmp
xchg
fcomp
gs
daa
popa
push
adc
mov
jbe
(bad)
adc
jmp
sahf
adc
cli
call
test
lock
cmps
fwait
enter
leave
pop
ins
ret
in
jmp
adc
or
pop
jb
push
mov
ret
and
inc
adc
sbb
div
add
sbb
loop
jl
stc
in
test
mov
xor
movs
push
(bad)
jae
data16
dec
xor
inc
dec
inc
stos
push
sbb
pop
int
cmc
inc
(bad)
jp
fs
adc
push
inc
cmp
xlat
mov
pop
cwde
inc
xor
shl
jmp
(bad)
cmps
pop
push
(bad)
and
fimul
leave
retf
inc
les
shl
pop
mov
sub
or
pop
push
sub
shl
jne
aam
popa
inc
sbb
stos
popf
or
int
mul
xchg
shl
xchg
sbb
cmps
mov
movs
mov
je
retf
iret
rcl
leave
xchg
xchg
(bad)
sub
popf
jp
pop
push
inc
aas
xor
loope
xchg
je
call
ret
cdq
imul
mov
pop
push
push
xchg
push
jae
sub
call
pop
loop
clc
movs
inc
adc
aas
call
daa
(bad)
fdivr
inc
push
out
adc
mov
mov
popa
jae
pop
ftst
or
add
xchg
rol
push
dec
shr
(bad)
fdiv
sub
push
push
das
mov
mov
movs
mov
cli
clc
mov
pop
pusha
push
mov
push
(bad)
ja
(bad)
push
push
dec
push
jo
dec
fstp
push
add
aad
inc
les
shr
inc
xchg
mov
mov
pop
popf
retf
or
fild
fwait
push
mov
(bad)
gs
mov
sub
xchg
je
and
add
shl
sub
retf
lods
clc
jns
push
push
mov
or
lods
add
int
icebp
sbb
xchg
(bad)
paddd
sbb
adc
aad
push
cmp
test
push
push
int3
mov
cld
sahf
fs
sbb
shl
jbe
(bad)
lods
sti
cmps
cmps
inc
jle
push
int
xor
dec
adc
scas
cmps
popa
jns
or
cmp
mov
pop
fcomp
daa
iret
mov
loope
(bad)
pushf
xor
adc
imul
add
fs
outs
inc
aam
xchg
mov
stos
stos
sbb
shr
sbb
fmul
lea
cmp
pop
dec
xlat
or
fist
mov
ret
cmc
jg
int
sbb
mov
rol
pop
xchg
jecxz
cmp
icebp
xor
int
jle
push
in
jb
xchg
adc
loop
scas
push
pmaddwd
nop
mov
mov
ds
rcr
aas
enter
dec
mov
mov
je
outs
or
inc
cwde
cs
mov
mov
xlat
in
pop
mov
sar
jge
mov
xor
and
xchg
and
or
pop
dec
cmp
pop
cmp
or
sub
jne
and
mov
push
outs
xor
mov
inc
cmps
cld
int3
and
icebp
cs
and
jg
jp
mov
push
xlat
dec
pusha
xchg
leave
mov
aas
ja
sub
ret
das
jne
das
sbb
xchg
and
ins
pop
adc
imul
sar
in
in
shr
test
adc
cmp
mov
push
sti
push
and
cmp
test
mov
or
ins
or
pusha
aas
dec
dec
out
popa
jmp
inc
push
push
or
leave
in
and
or
sub
movs
xchg
mov
clc
jmp
sub
add
sbb
lahf
mov
push
cwde
call
pop
sti
adc
cmc
imul
popf
sbb
lock
lock
cmp
repz
(bad)
dec
int3
and
cmp
jb
jle
adc
shr
pop
loop
sub
js
je
jp
fs
and
jbe
jecxz
cwde
shl
push
nop
jb
loopne
xchg
mov
aam
int
fst
scas
je
enter
push
int
dec
mov
push
cmps
scas
mov
shl
clc
pop
icebp
inc
fdivr
mov
and
ret
xchg
push
nop
mov
in
sahf
scas
es
xlat
adc
test
jmp
out
pop
fld
mov
mov
cmc
sub
xor
mov
shl
ficomp
(bad)
push
dec
leave
cmp
pop
mov
lods
mov
arpl
fsubp
jbe
imul
jecxz
jne
dec
dec
stc
dec
jns
xchg
out
dec
ficom
aam
in
or
scas
fild
dec
(bad)
xchg
retf
inc
jo
aam
sub
and
cmp
jns
stos
dec
pop
mov
mov
xchg
sbb
bound
into
fnstcw
mov
jb
adc
mov
xchg
jmp
call
test
movs
add
cmp
and
mov
dec
out
aad
rcl
push
xlat
out
sbb
xor
mov
cmp
jl
jns
dec
xchg
popf
mov
pushf
cmps
or
jo
sub
inc
add
(bad)
add
ffree
out
scas
jb
sbb
jmp
aaa
rcl
adc
sbb
ja
lahf
icebp
hlt
std
mov
mov
rcl
nop
xchg
adc
push
xor
outs
inc
sbb
sub
xor
xor
pop
jmp
icebp
pusha
cdq
sahf
inc
dec
or
mov
leave
and
cmp
mov
pop
xor
push
sbb
sub
lods
pop
clc
std
mov
jbe
push
push
fucomip
push
push
aaa
call
inc
adc
add
pop
cmps
arpl
pop
out
mov
inc
and
inc
xchg
and
dec
out
shr
push
xchg
jns
sub
push
add
inc
lahf
mov
push
add
fcomp
enter
das
lahf
mov
adc
mov
add
popa
dec
adc
lahf
bound
push
retf
cmp
jecxz
push
jo
in
add
mov
cmps
out
push
shl
jp
(bad)
rcl
sbb
pop
clc
push
xchg
pop
addr16
out
ins
arpl
mov
cmps
push
cmp
push
mov
push
push
sub
(bad)
push
hlt
mov
iret
daa
mov
pop
fisttp
bound
jp
outs
cli
bound
push
xor
sub
xor
mov
mov
mov
sub
push
fstp
dec
pop
out
dec
adc
jmp
pushf
in
mov
and
cs
call
cmp
sbb
push
out
xchg
or
cmp
pop
fisttp
jecxz
arpl
xchg
aas
les
in
aaa
mov
mov
into
out
mov
dec
data16
jno
data16
adc
or
fnsave
mov
dec
loopne
and
gs
jnp
lahf
lea
shl
or
dec
push
mov
dec
mov
out
hlt
add
fmul
shl
or
cwde
ins
sub
out
xchg
sbb
jmp
lock
hlt
or
iret
xor
sti
jle
jnp
push
cdq
dec
push
jge
or
inc
popf
push
mov
push
inc
sub
rol
test
mov
clc
cmp
stc
mov
or
shl
add
imul
xchg
mov
xlat
jle
dec
out
sub
test
jno
fcom
ins
leave
mov
ficom
mov
adc
sub
les
push
push
mov
jmp
pushf
movs
mov
dec
pop
aaa
(bad)
leave
mov
push
ficomp
aaa
mov
and
cli
fistp
jge
loop
xchg
push
inc
xor
dec
js
inc
mov
outs
popf
leave
push
pop
clc
fnstenv
jns
in
pop
nop
push
inc
sbb
ins
cmc
outs
jl
into
sub
dec
cmp
push
dec
push
repz
inc
out
scas
xchg
imul
push
repnz
fild
adc
push
add
cmp
or
leave
pop
cdq
test
out
(bad)
scas
ins
jns
push
pop
mov
pop
test
loopne
fcom
or
xchg
and
cmp
aas
lock
sti
lahf
std
es
test
push
iret
btr
fsubr
hlt
outs
pop
outs
(bad)
adc
pop
xchg
or
add
jnp
cmp
pop
pop
fld
shr
add
pop
fs
adc
xchg
mov
xchg
dec
and
and
lods
movs
push
push
mov
(bad)
popa
inc
repz
mov
add
out
xchg
inc
cwde
stos
rcl
aaa
inc
test
mov
or
and
and
mov
cmc
xor
test
stos
lds
cs
xchg
cli
xor
iret
mov
test
sti
sub
jmp
out
and
xchg
aad
retf
in
sub
mov
cli
push
daa
fxch
dec
pop
add
mov
xchg
scas
cld
ror
mov
(bad)
repnz
(bad)
ins
cli
rcl
fisub
test
psrld
or
mov
jno
push
scas
jp
and
neg
lea
mov
daa
hlt
adc
fimul
add
mov
cwde
int3
imul
jmp
loopne
lds
add
pop
cmp
add
jb
(bad)
jo
xor
xor
fstp
arpl
jb
test
shl
shl
adc
adc
rol
inc
push
mov
pop
idiv
cmp
xchg
fidivr
sti
pop
(bad)
xor
int3
test
popf
mov
pop
retf
test
jo
dec
in
outs
and
xor
sbb
push
outs
xor
pop
pop
repz
and
add
movs
inc
int3
repz
dec
lods
ins
xchg
int
fadd
pop
(bad)
mov
repz
std
imul
aaa
les
cmp
(bad)
into
push
daa
xchg
sub
cwde
add
test
or
cmp
test
outs
push
push
push
gs
mov
stos
jl
or
ins
mov
mov
lods
ins
xchg
adc
pop
and
jno
and
(bad)
cmp
sbb
sbb
push
in
sar
push
rcl
stos
movs
pop
fcom
sub
xor
pop
dec
inc
sti
jp
sub
icebp
aam
or
dec
fwait
cmps
shl
inc
pop
mov
sub
outs
cmp
sub
gs
pusha
cmp
jno
punpcklbw
fsubr
jne
lods
xchg
xlat
aad
inc
push
inc
in
add
dec
ret
icebp
mov
adc
and
cmp
add
pop
or
hlt
mov
inc
fs
stc
ins
cli
lahf
test
(bad)
pusha
rol
scas
and
jno
push
ret
dec
shr
lock
aam
das
pop
fcomp
mov
nop
or
sbb
mov
mov
hlt
test
pop
mov
sub
retf
dec
sub
jle
and
mov
in
mov
mov
pop
movs
fisttp
sub
mov
js
adc
sbb
mov
sbb
cmp
sbb
lahf
mov
icebp
mov
push
cmp
retf
(bad)
jmp
mov
xlat
jno
(bad)
in
xchg
daa
movs
or
pusha
hlt
xchg
shl
call
jne
test
push
xchg
leave
pop
add
out
mov
inc
mov
(bad)
xchg
sbb
dec
jl
dec
xchg
inc
mov
mov
inc
jge
and
inc
(bad)
adc
cs
test
xor
mov
fwait
mov
es
mov
loope
std
jb
fidivr
push
out
hlt
out
and
push
cmp
rcl
out
add
dec
jbe
dec
cmp
hlt
fbld
in
fcomp
fwait
dec
jnp
mov
mov
into
mov
sub
push
inc
dec
xor
outs
repnz
fcom
add
mov
or
cmp
jnp
inc
inc
sbb
cmp
div
loopne
xchg
dec
jo
jns
ds
in
pop
cmp
fisttp
enter
mov
jnp
mov
mov
xchg
mov
push
mov
and
cmps
lea
or
pop
fidiv
jnp
cmps
pop
ss
sbb
mov
(bad)
cmp
fnstsw
shl
nop
mov
push
inc
sub
data16
imul
sub
ret
mov
jb
lea
mov
popf
xchg
js
or
mov
fisttp
cmp
inc
adc
inc
cmp
dec
int3
xchg
outs
movs
js
mul
dec
inc
int
xor
mov
clc
retf
adc
jae
hlt
lock
jp
push
add
imul
pop
into
or
sar
mov
mov
cld
out
mov
mov
sbb
pusha
xchg
call
(bad)
cmp
pop
stos
add
push
fbstp
xchg
cdq
sbb
scas
dec
or
mov
cmp
cwde
push
xchg
sbb
int
nop
mov
dec
cmc
push
or
sbb
lods
es
test
data16
xor
xchg
push
inc
(bad)
pop
xor
mov
xchg
or
lods
repz
pop
retf
inc
mov
dec
fcom
imul
(bad)
call
pushf
or
cwde
dec
inc
out
stc
adc
ja
mov
scas
mov
sbb
rcl
into
mov
mov
mov
aam
cmc
ret
xor
out
xchg
mov
mov
or
into
cdq
mov
cwde
jnp
inc
sub
cmp
test
sbb
pop
inc
xchg
and
adc
lock
xchg
in
inc
jbe
clc
adc
ja
lds
adc
mov
pop
add
inc
outs
stos
cmc
xchg
jecxz
addr16
in
ret
cs
cmp
jl
aad
mov
iret
add
mov
sti
fld
ret
aad
rcr
sbb
int3
test
dec
das
imul
test
mov
or
mov
jno
aad
pop
sbb
cmc
test
adc
aaa
jae
xchg
shl
hlt
dec
push
mov
mov
les
xor
outs
hlt
nop
js
pop
fstp
and
outs
fstp
jl
(bad)
inc
pop
adc
jle
sub
mov
shl
fild
ret
cs
cmp
ins
mov
jge
xor
enter
sbb
lock
add
(bad)
ror
mov
in
mov
(bad)
mov
in
int
std
pusha
cmp
dec
(bad)
jl
xor
idiv
mov
(bad)
out
jecxz
or
stos
jecxz
pop
fdivrp
fstp
fwait
mov
or
add
shr
jnp
std
add
jae
(bad)
or
aad
sbb
adc
dec
add
fst
repnz
ret
sub
dec
neg
mov
adc
adc
mov
imul
and
sub
cmp
repnz
jo
rol
shr
xchg
test
retf
or
adc
push
(bad)
popf
test
push
sub
cmp
in
jo
push
gs
cmp
cli
or
mov
arpl
mov
lds
sub
lock
stos
ret
je
mov
push
push
pop
push
push
pop
test
add
sti
xchg
mov
jno
sbb
into
xchg
stos
dec
xchg
xchg
or
call
pop
jno
cli
jp
idiv
iret
(bad)
mov
cdq
fwait
jns
imul
fistp
adc
nop
inc
pusha
stc
mov
lds
outs
jmp
retf
jl
scas
addr16
sub
sbb
mov
movs
rol
mov
outs
push
push
jnp
data16
and
cmovns
sub
xchg
fisub
cdq
sahf
ja
pop
cmp
movs
add
lods
sub
xor
movs
cmp
xlat
shl
add
dec
retf
adc
inc
pusha
mov
repnz
and
mov
idiv
addr16
push
xchg
jb
sbb
or
mov
les
mov
out
sbb
push
mov
sbb
mov
cmp
mov
aad
aad
fcmovb
movs
aaa
dec
data16
fld
sbb
jbe
pop
cli
outs
lds
jge
push
push
inc
and
xchg
pop
aas
imul
loop
int3
or
scas
sub
or
outs
inc
sub
add
bound
stos
mov
or
xchg
cmp
and
add
inc
mov
jge
not
adc
sbb
lds
pavgw
les
mov
dec
push
push
mov
mov
rol
cmp
out
mov
sub
mov
cmp
and
lock
fwait
inc
outs
in
sub
sub
pop
push
ret
jbe
ss
adc
mov
loop
loopne
adc
jbe
retf
mov
sub
mov
int3
jno
mov
mov
sahf
out
into
dec
call
and
or
mov
mov
sub
and
mov
xchg
cmc
call
sti
aam
jmp
test
pop
xor
into
(bad)
jnp
xchg
jbe
in
mov
lods
jecxz
(bad)
rcr
addr16
in
test
push
icebp
adc
and
daa
jecxz
sar
test
retf
adc
mov
jns
push
add
jbe
xchg
imul
pop
or
test
xchg
dec
cmp
inc
aad
push
sbb
pop
stos
test
je
jle
lods
cmp
push
sbb
inc
aas
fnstenv
mov
or
xchg
mov
arpl
mov
sbb
pusha
loop
les
jbe
fmulp
dec
sbb
add
mov
fnstsw
arpl
sti
test
jle
loopne
icebp
jbe
rcr
push
cmc
sbb
fistp
dec
mov
stos
ds
and
inc
iret
dec
push
sar
jmp
inc
bound
inc
jns
push
shl
cmp
push
or
and
push
arpl
jle
dec
test
enter
add
push
push
cmc
aas
push
jns
add
xchg
les
cmp
mov
inc
xor
out
xor
add
(bad)
in
push
mov
xchg
and
rcl
jbe
mov
je
jle
jmp
sti
pop
and
aam
fld
lahf
push
sbb
push
sti
adc
xor
aaa
sbb
mov
jp
mov
or
hlt
fld
push
xor
aas
xor
xor
jne
jo
popa
xor
pop
or
xchg
mov
and
sbb
inc
stos
inc
out
jmp
adc
xor
pop
cld
icebp
mov
cmps
das
outs
cmps
hlt
sar
pop
shr
push
movs
mov
mov
fisub
lahf
jno
adc
lahf
enter
pop
scas
rol
int3
in
data16
mov
in
push
mov
pusha
xchg
mov
out
sbb
stos
xor
cli
inc
sub
inc
div
les
sub
aam
retf
inc
inc
test
das
push
add
ins
cmp
lods
add
repnz
pop
shl
arpl
call
xchg
or
pop
in
cld
push
pop
cmps
or
in
and
jo
pop
xor
cmp
or
mov
and
addr16
pop
mov
push
mov
js
inc
in
xor
jl
ins
xor
cmp
xor
imul
or
inc
lea
mov
fstp
xchg
mov
sbb
or
bound
inc
jno
std
xor
lahf
xchg
jp
inc
cli
mov
ja
jle
retf
adc
daa
fidivr
mov
int
xchg
sbb
sbb
loop
ret
sub
inc
add
mov
mov
mov
fwait
mov
push
popf
xor
push
sub
in
dec
js
(bad)
jns
loope
add
popa
pop
dec
gs
or
loope
dec
pop
inc
add
data16
sbb
xchg
adc
jle
add
xacquire
cld
mov
inc
dec
push
bnd
les
mov
mov
inc
mov
mov
enter
dec
js
xor
dec
xchg
mov
xor
jg
jo
in
inc
out
les
xor
add
push
sbb
pop
call
sub
adc
out
outs
fsub
popa
out
or
adc
sbb
jle
sahf
or
adc
jmp
cdq
scas
in
sub
jb
push
cmp
cli
pop
push
xor
repnz
pusha
adc
repz
cmp
mov
adc
add
outs
cmp
clc
sbb
xor
iret
xor
mov
xchg
inc
sbb
dec
stc
mov
stc
inc
(bad)
test
scas
pop
adc
inc
mov
add
cld
stos
push
xchg
inc
sub
int
push
retf
loop
out
xchg
fwait
pop
aaa
dec
mov
into
mov
outs
jp
fistp
cmp
jnp
pop
hlt
dec
mov
xor
adc
and
test
movs
not
mov
aas
mov
or
push
pop
outs
sub
call
icebp
mov
sbb
fs
cmps
clc
dec
mov
call
imul
leave
or
sahf
lods
imul
sbb
in
rcl
adc
add
lods
pop
notrack
scas
and
mov
cmp
fdivr
enter
mov
in
push
xchg
sbb
adc
out
into
inc
push
lea
fiadd
out
mov
test
sbb
lock
mul
nop
push
stc
and
in
aaa
leave
mov
(bad)
push
arpl
sub
es
stos
jg
xor
test
adc
jns
fst
and
xor
test
adc
lds
movs
scas
ret
dec
mov
push
mov
test
xchg
mov
sbb
pop
jae
call
jo
adc
(bad)
dec
aam
push
or
js
imul
xchg
mov
mov
cmp
dec
xlat
addr16
or
call
nop
(bad)
cmp
mov
jl
imul
cmc
jo
cmp
sahf
mov
mov
mov
gs
sbb
ds
mov
lods
push
test
shl
mov
inc
cmps
and
dec
bound
test
or
imul
ret
lds
icebp
test
es
out
cli
test
mov
sar
and
sub
add
mov
iret
sbb
pop
mov
push
outs
dec
jl
or
test
xchg
xchg
jg
jno
gs
mov
cwde
xlat
push
in
mov
jns
inc
fisubr
push
in
movs
sbb
jecxz
jo
push
xor
mov
jle
sub
jno
jno
push
add
fldz
xchg
iret
inc
fld
mov
enter
add
fisubr
jno
mov
mov
xlat
retf
mov
mov
cmp
push
popa
aaa
pop
fisttp
adc
das
pushf
es
push
enter
sbb
mov
ret
and
pop
arpl
ins
fs
push
rcr
adc
fiadd
data16
loope
add
and
mov
ss
pop
inc
cmps
jmp
outs
xchg
clc
mov
adc
hlt
push
data16
mov
test
stos
mov
inc
inc
loop
dec
(bad)
lods
inc
mov
arpl
sub
pop
jle
fisub
pop
dec
lds
call
dec
mov
xchg
jae
sub
sub
mov
sti
lods
loopne
sub
pop
or
out
shl
ss
mov
test
ins
fadd
jmp
outs
xchg
and
sub
adc
cdq
mov
into
bound
mov
mov
clts
mov
xor
cmp
iret
add
jge
icebp
lock
test
call
and
popa
sub
test
mov
stos
xor
jl
cmp
lock
add
push
xchg
mov
in
loope
add
and
mov
je
push
adc
(bad)
aam
pop
bound
cdq
or
push
sar
dec
ret
cmp
ins
data16
add
call
jl
int3
xor
xor
push
pop
fwait
out
or
adc
int
int3
mov
fwait
xor
(bad)
push
(bad)
daa
shl
add
mov
cdq
movs
mov
rcr
enter
push
pop
cmps
scas
lods
(bad)
sbb
mov
sub
sub
sub
ret
out
popa
adc
mov
mov
sub
dec
push
pop
mov
scas
out
ja
adc
aas
popa
fld
arpl
fwait
and
in
pusha
mov
dec
test
imul
aam
add
ins
rcr
add
jmp
popa
mov
ds
cmp
bnd
iret
mov
out
push
mov
fcomp
mov
(bad)
rol
(bad)
cmp
cmp
cmc
pusha
add
xor
fist
sbb
mov
push
movs
jge
push
push
inc
clc
xchg
call
cmp
xor
push
dec
xchg
imul
test
ret
push
mov
push
add
ja
retf
push
sbb
das
xchg
push
cli
mov
add
test
jg
pop
cmc
xor
xchg
sub
(bad)
or
push
aaa
fld
addr16
inc
pop
xchg
adc
mov
jecxz
retf
out
add
add
inc
add
shr
mov
cmps
jmp
dec
dec
setno
iret
jmp
std
scas
mov
xchg
in
push
xor
scas
add
pushf
loop
shr
xchg
cmp
cmp
lock
inc
je
hlt
call
cmps
inc
dec
lea
jnp
sahf
xchg
adc
mov
xchg
inc
jb
sub
xor
cmp
test
outs
fsubr
and
dec
cmp
loop
icebp
adc
lods
sbb
leave
jg
rcr
fiadd
or
cmps
sti
push
fadd
fist
imul
and
xchg
dec
sbb
cmc
push
mov
xlat
add
mov
lea
(bad)
out
idiv
jns
int3
cmps
lahf
movs
fwait
lds
ss
xchg
scas
scas
mov
pusha
inc
jae
int
sbb
sub
and
cmps
cmp
xor
jns
mov
mov
xchg
fbld
xchg
dec
(bad)
xor
imul
push
adc
cmp
inc
or
lods
push
clc
cmc
sar
je
cmp
fimul
inc
(bad)
loopne
hlt
and
or
ins
xor
xchg
imul
mov
out
mov
ret
mov
push
test
pop
fmul
sbb
outs
movs
push
and
fild
shl
and
push
jg
aaa
(bad)
adc
movs
sti
jle
mov
inc
stc
cmps
(bad)
mov
mov
(bad)
xlat
in
jae
sub
in
add
jge
pop
addr16
xchg
push
inc
adc
sbb
cld
sahf
pop
(bad)
pop
mov
cwde
mov
stos
shl
add
dec
fs
fdivrp
aad
lods
sbb
pop
(bad)
sahf
dec
icebp
ror
mov
xor
inc
outs
mov
cmc
cs
mov
push
shl
add
mov
ja
ret
cmp
sbb
cmp
sub
xor
jb
scas
cwde
pop
inc
test
xor
cmp
loop
cmc
arpl
push
mov
xor
(bad)
fcomp
das
jno
ins
jno
adc
loop
mov
xor
addr16
xor
ret
adc
xchg
push
in
cmps
push
shl
in
mov
jp
arpl
and
or
fs
xor
or
mov
mov
pop
cmp
xchg
cmp
mov
xor
test
cmps
call
test
in
in
sbb
imul
dec
mov
daa
inc
mov
xchg
mov
push
and
pushf
cmp
(bad)
mov
outs
pop
stos
sti
lods
sub
mov
movs
clc
cdq
and
rcl
loopne
fdivr
cmp
mov
xchg
adc
sbb
inc
icebp
push
adc
pop
jmp
jb
loope
pop
mov
call
shr
jl
adc
rol
pop
lahf
sbb
jo
push
xchg
popa
mov
xchg
pushf
rol
enter
test
aam
sub
in
ds
cwde
(bad)
mov
push
out
jmp
sub
or
push
retf
push
push
movs
outs
pop
inc
mov
sub
jge
xchg
hlt
dec
loop
xchg
fcmove
(bad)
(bad)
int3
imul
cmp
sub
mov
xchg
pop
sar
lea
js
add
adc
inc
scas
fcmovnu
xchg
jae
push
xchg
cmp
rcl
out
inc
sub
dec
imul
ins
cs
adc
and
inc
iret
retf
adc
sub
test
push
cmps
call
add
cli
adc
push
in
clc
inc
test
loop
jl
ret
popa
pusha
and
test
std
hlt
jge
stc
and
fwait
mov
nop
xchg
xor
adc
mul
mov
mov
or
in
fisub
and
adc
jae
ja
arpl
or
xor
popf
jmp
lods
cmc
add
mov
dec
push
push
dec
mov
sbb
jecxz
cwde
hlt
lock
jnp
mov
iret
mov
adc
inc
xor
sub
xor
sbb
aas
cmc
sti
inc
mov
stos
push
add
jmp
fwait
mov
jb
cld
lds
jl
test
fsub
dec
mov
sub
aas
ret
sub
jne
out
push
and
sbb
jae
inc
(bad)
xlat
mov
push
mov
or
lds
es
dec
sbb
adc
mov
sub
push
fwait
outs
add
pop
jecxz
mov
add
mov
push
(bad)
cmc
xchg
js
(bad)
mov
repz
popa
aas
loope
mov
push
enter
push
adc
(bad)
mov
ret
and
or
jae
mov
adc
jg
xor
mov
imul
lock
sbb
arpl
dec
and
jmp
cmp
and
add
(bad)
outs
loop
mov
stos
(bad)
mov
mov
xor
jne
and
pusha
dec
adc
push
jg
aad
xchg
ins
rcr
rcr
scas
mov
sub
mov
sti
hlt
pop
sub
loopne
dec
adc
mov
std
mov
pop
fild
retf
inc
xchg
add
fisttp
pop
daa
jo
nop
clc
sub
in
rol
jle
ins
xrelease
dec
fcmovbe
xor
cmps
jmp
mov
mov
adc
enter
jmp
sub
or
shr
pop
jae
int3
ins
loop
data16
pop
das
push
iret
test
pop
xchg
outs
outs
sbb
mov
gs
push
inc
inc
mov
out
mov
mov
popa
inc
pop
out
cmp
lock
fbld
ret
in
cmc
cmps
out
mov
xchg
xchg
imul
in
icebp
sbb
ret
sti
ins
inc
dec
mov
int
mov
call
xor
(bad)
pop
xchg
xor
push
dec
dec
ins
lahf
fmul
or
or
pop
xor
fsubr
pushw
adc
(bad)
and
sub
retf
mov
inc
adc
inc
mov
add
xchg
mov
fdivr
aad
loope
call
mov
movs
inc
div
push
movs
fcmovnbe
push
aad
popa
xchg
shr
sub
dec
jmp
pop
(bad)
sbb
adc
cmp
sbb
mov
xchg
push
push
ins
push
ins
ror
inc
cmp
mov
xchg
sbb
sub
mov
dec
dec
dec
inc
out
inc
shl
mov
jno
jns
mov
xor
popf
loope
imul
sub
in
je
push
push
sub
out
mov
xor
sub
test
cmp
out
inc
add
outs
pop
pop
mov
jge
fninit
mov
and
sbb
and
adc
popa
test
rcl
fsub
add
xchg
pushw
pop
xchg
and
sub
(bad)
jmp
lods
hlt
sub
push
js
jnp
sar
pusha
add
call
dec
daa
leave
push
pusha
cs
cmc
(bad)
mov
push
pop
getsec
loopne
inc
pop
push
push
repnz
xchg
inc
lahf
pop
pusha
sar
cwde
loope
sub
sbb
sub
enter
jecxz
out
cs
cs
loop
sbb
xchg
lods
ret
jle
xor
push
mov
test
je
add
or
cmc
pop
push
pusha
imul
add
xchg
jmp
add
jb
movs
test
push
sahf
sbb
iret
popf
or
cmps
rcr
lea
stc
push
sti
xchg
push
in
jl
test
dec
cwde
push
mov
jmp
dec
out
fst
scas
inc
dec
jb
fistp
mov
mov
js
popf
outs
in
and
aaa
imul
js
cli
int3
shr
inc
scas
(bad)
fild
in
jge
in
sbb
sbb
xor
in
cmps
sub
lods
scas
sub
xchg
(bad)
test
js
mov
shl
stos
mul
push
(bad)
sbb
sbb
mov
bound
scas
pop
mov
imul
test
xor
out
and
dec
fcom
dec
cmp
pop
dec
inc
pop
pusha
add
mov
popf
ja
mov
fs
shr
add
mov
sub
xchg
fs
sub
popf
dec
fiadd
add
cmp
(bad)
popa
add
inc
clc
loope
out
sahf
push
sub
mov
or
movs
jle
sub
dec
stc
and
test
int
mov
lods
xor
repnz
lods
icebp
cmps
cmps
shl
pop
xchg
loop
enter
sub
(bad)
lahf
rcl
sub
sbb
outs
std
ja
sub
stos
push
dec
cmps
call
cmp
sahf
fist
test
adc
and
sbb
jle
mov
inc
or
shl
xchg
add
jmp
sar
xchg
jbe
xor
popf
ffreep
out
adc
jnp
push
mov
dec
dec
dec
dec
ret
sahf
lods
lods
(bad)
cmp
cmps
(bad)
xchg
lds
xor
stos
inc
pop
pop
lahf
pop
and
sub
and
mov
cmp
jge
fmul
ror
addr16
sahf
mov
push
xchg
ds
cmps
(bad)
stos
fild
adc
sub
push
jmp
inc
mov
pop
int3
or
and
sar
add
inc
or
lock
push
(bad)
mov
xor
movs
popf
mov
test
sbb
ret
(bad)
and
xor
shl
sub
loopne
pmuludq
cmps
aaa
jge
or
mov
daa
lahf
pop
inc
call
lahf
xchg
ins
or
gs
xor
inc
xchg
xor
loopne
mov
test
das
push
jmp
push
lds
lods
leave
jno
into
mov
sti
sub
dec
or
mov
loopne
sti
(bad)
aad
loope
ror
adc
jae
ss
mov
pop
dec
xchg
cmps
pushf
jae
sbb
mov
daa
mov
add
out
nop
adc
cmps
xor
jmp
add
imul
nop
loop
inc
lock
daa
fimul
inc
adc
mov
cld
jg
enter
add
pop
pop
adc
pop
sbb
cmps
jecxz
sub
pop
ds
cmps
mov
imul
popa
pusha
scas
mov
call
test
(bad)
loopne
cmp
push
pop
cwde
or
cdq
std
cwde
push
hlt
repz
ss
call
loop
not
lea
dec
lds
mov
outs
or
pop
test
push
add
sub
jmp
das
call
push
jmp
mov
mov
adc
enter
inc
dec
push
sbb
push
frstor
repnz
inc
xor
loope
xor
jmp
stc
pop
push
pop
in
jne
rcr
std
xor
ins
pop
aad
rol
lods
loopne
or
mov
lods
loop
mov
ins
stc
xor
mov
into
movs
daa
ret
push
xchg
sbb
mov
or
fdiv
mov
les
popa
and
pminsw
ret
xor
push
adc
xchg
xor
scas
inc
(bad)
retf
rol
call
jge
inc
bound
or
adc
add
mov
loope
sbb
nop
inc
scas
stos
push
jb
xor
in
adc
dec
pop
mov
out
int
pop
mov
aas
lahf
ret
cmc
test
mov
clc
mov
add
sar
data16
les
repz
xchg
mov
cmps
test
call
ins
xchg
xchg
xchg
jge
dec
or
sahf
repnz
jmp
je
mov
sub
push
add
pop
pop
mov
outs
inc
inc
mov
gs
fndisi(8087
push
mov
(bad)
xor
and
xor
xor
pop
in
outs
fcom
or
aam
xor
es
mov
pop
test
cmc
pop
inc
or
mov
xor
jmp
mov
into
fcmovb
or
xor
mov
jp
js
rcl
mov
nop
push
cmp
(bad)
jns
or
lock
and
int3
ss
sub
push
cmp
mov
movs
out
rol
test
loopne
pop
aad
mov
and
sbb
push
lods
test
js
aad
out
retf
lock
adc
xor
and
pop
in
inc
setns
data16
sub
repz
dec
mov
sub
in
out
movs
into
dec
pop
ret
test
retf
mov
dec
push
jp
pop
fwait
sbb
outs
jl
sub
je
mov
into
xchg
and
stos
aaa
sar
and
leave
mov
(bad)
test
jecxz
pop
and
ins
outs
inc
ret
adc
pop
dec
inc
push
int
int3
cmp
mov
xlat
sbb
cmc
lods
inc
frstor
mov
dec
sahf
loopne
xor
cmp
popf
call
out
xchg
push
fcom
rcr
xchg
and
lock
test
out
pop
sub
dec
lds
lods
movs
mov
repnz
pop
cmp
test
iret
and
xor
dec
fiadd
cmc
sbb
je
rcl
icebp
add
cmp
sub
xor
outs
mov
ds
mov
xchg
jg
rcr
jle
inc
mov
(bad)
pop
pop
les
inc
(bad)
cmp
xor
test
cmp
into
stc
jno
sub
lods
mov
add
push
xchg
es
push
or
push
adc
sub
pop
ret
xchg
out
outs
pop
femms
adc
nop
push
push
lahf
pop
jno
lods
cdq
dec
or
cdq
xchg
leave
xor
jle
mov
test
out
dec
outs
lods
inc
vsqrtps
out
fisttp
xor
xacquire
or
jns
cmp
out
test
rcl
mov
mov
sti
push
repnz
icebp
ins
mov
jle
dec
add
sbb
inc
enter
ret
(bad)
repz
jae
sub
ret
xchg
or
dec
pop
adc
fcomp
mov
jp
xchg
xor
xor
(bad)
sar
or
daa
xchg
aam
stos
rol
mov
pop
add
arpl
aam
cmp
out
push
dec
xor
pop
ret
dec
pop
xchg
inc
adc
cmp
push
push
loope
loopne
jae
or
xor
add
mov
daa
mov
(bad)
test
sub
scas
cmps
inc
int3
cmps
ror
lock
sbb
inc
lahf
dec
adc
mov
popf
jbe
aaa
push
add
push
push
mov
data16
mov
ss
stc
inc
imul
pop
sti
fidivr
in
mov
inc
xchg
mov
test
mov
sar
xchg
(bad)
mov
jmp
xor
fs
pusha
inc
mov
xor
fcomp
out
jnp
mov
call
mov
pop
cmp
arpl
nop
sub
jo
out
push
lea
pushf
addr16
adc
ja
push
mov
sbb
rol
or
jmp
mov
push
(bad)
ja
sti
xchg
test
xchg
aaa
jne
sbb
sub
int
jbe
jl
jae
arpl
inc
dec
aad
loopne
inc
sub
dec
mov
in
lds
clc
lods
int3
sub
sahf
jo
push
adc
adc
aad
int
out
shl
jg
add
sub
lods
xchg
fs
mov
xor
cmp
popf
xchg
and
movs
dec
out
inc
pusha
pusha
push
fdivrp
xchg
jns
cmp
clc
pop
outs
loop
call
mov
mov
call
push
pop
pop
or
test
dec
dec
xchg
inc
pop
mov
movs
movs
daa
add
push
sbb
adc
pop
pusha
retf
loope
add
pop
dec
pop
xchg
shl
fsub
xchg
sti
mov
(bad)
xlat
or
stos
addr16
in
pop
mov
mov
and
sbb
inc
cmps
push
ror
mov
popa
btc
adc
and
retf
jne
jecxz
push
mov
pop
mov
mov
inc
and
movs
and
aaa
loopne
push
dec
mov
into
jb
and
std
pop
stc
mov
jmp
cwde
mov
icebp
(bad)
ror
sbb
or
sub
jno
inc
rcl
or
sub
pop
int
enter
pop
(bad)
in
dec
xor
dec
pop
mov
mov
into
sbb
xchg
sub
mov
xor
pop
jnp
fidivr
mov
cdq
mov
pop
dec
mov
xchg
adc
ds
retf
push
es
or
add
add
xchg
cmp
lods
cs
fcmovnu
cmp
xchg
cmp
xchg
fdiv
pop
dec
inc
(bad)
dec
fdiv
pop
or
imul
(bad)
pop
cmc
ins
clc
mov
inc
popa
inc
sahf
ffree
xchg
sub
mov
adc
mov
(bad)
xor
inc
mov
sti
lods
imul
(bad)
stc
xchg
(bad)
mov
xchg
cmps
push
or
fs
mov
int
enter
icebp
and
inc
cdq
scas
leave
mov
adc
sbb
in
fistp
jle
cmp
mov
push
mov
(bad)
lods
add
xchg
mov
jns
xchg
mov
test
xor
xor
fisttp
(bad)
mov
std
icebp
mul
push
call
je
inc
in
loop
fdivrp
jae
js
push
mov
shr
push
pusha
push
test
mov
mov
cdq
movs
mov
in
hlt
sub
rcl
push
sub
dec
out
mov
rcl
iret
adc
fisttp
jns
dec
xor
jp
mov
out
iret
call
int
mov
add
not
xchg
dec
call
cli
push
ds
dec
inc
mov
lds
cmp
push
pop
jo
pop
add
xlat
sub
pop
shl
dec
jae
cmp
jno
adc
js
daa
add
xor
idiv
jge
pop
sub
je
fs
sbb
push
cmc
div
out
or
or
push
leave
add
shr
int
push
inc
int
call
add
dec
sbb
sbb
dec
push
sar
mov
nop
fldenv
aas
push
adc
and
shr
adc
cmp
jmp
call
retf
adc
mov
lods
adc
je
push
push
ret
das
mov
sbb
cs
sar
sbb
add
out
ja
and
(bad)
push
fdivr
mov
sub
imul
dec
iret
out
and
adc
neg
fisttp
jg
dec
repnz
jne
jp
std
xor
leave
or
sub
pop
jno
xchg
mov
mov
cmps
pop
pusha
(bad)
je
mov
mov
inc
hlt
sbb
mov
mov
out
nop
sti
or
add
pushf
jnp
hlt
sti
mov
fnstsw
and
adc
cmp
pop
xchg
(bad)
jl
xchg
jecxz
(bad)
ficomp
repz
and
imul
in
lds
icebp
mov
mov
jns
js
(bad)
hlt
outs
imul
push
in
cwde
cmp
push
jnp
js
xchg
or
dec
mov
mov
sti
push
push
fcom
pop
cld
into
push
adc
sub
je
xlat
je
sbb
aaa
mov
bound
dec
imul
cdq
sar
adc
icebp
push
mov
xchg
daa
xchg
mov
popa
cdq
mov
cmp
inc
and
inc
cmp
cwde
add
mov
pop
or
xor
pop
ret
mov
mov
dec
add
inc
sti
lds
jae
or
push
ror
xchg
sub
bound
popa
lods
ins
add
pop
cmp
(bad)
jmp
stc
or
cmc
mov
jp
cmp
outs
mov
adc
push
je
xchg
dec
or
repz
loopne
loop
out
cmps
or
cmp
retf
stos
mov
ret
cmp
adc
adc
pop
les
inc
push
sub
mov
xchg
pop
lahf
ficomp
scas
mov
dec
aaa
inc
inc
dec
inc
cmp
push
jno
loope
xchg
imul
call
sub
adc
in
test
xchg
mov
mov
xchg
stos
push
sbb
test
push
mov
pusha
add
fnstcw
enter
jle
dec
cmps
pop
and
ret
add
push
mov
mov
sbb
retf
lea
xchg
sub
or
popa
dec
rcl
aam
pop
movs
das
push
jmp
inc
mov
jp
push
xor
adc
push
push
enter
int3
sbb
pop
or
xchg
dec
push
mov
add
std
mov
sbb
pop
sbb
sub
xor
mov
adc
mov
lods
sub
mov
popf
not
push
sub
mov
loop
outs
retf
xchg
or
retf
mov
popf
inc
inc
ror
fsub
add
xchg
cmovae
int
add
je
dec
inc
repnz
fld
add
pop
xor
inc
xor
pop
and
cmps
dec
or
or
push
dec
mov
loopne
fnstcw
push
test
stos
add
imul
push
jg
add
sbb
test
and
cmp
pusha
scas
pop
lods
push
popf
imul
inc
adc
dec
and
sub
jp
shl
out
and
inc
mov
nop
pop
jl
test
out
in
jnp
(bad)
jge
dec
jne
pop
add
sbb
daa
scas
jns
bound
loop
pop
add
dec
cdq
pop
mov
rol
adc
mov
rol
test
cmp
jns
fwait
mov
add
adc
test
push
xchg
loopne
shl
cmp
ret
mov
shl
and
xor
call
jb
rol
xchg
sbb
pop
cmp
pop
mov
cmp
aam
xor
adc
out
xor
femms
pop
jg
shl
not
mov
and
and
retf
jmp
scas
stos
jmp
adc
mov
sbb
sbb
leave
push
(bad)
std
mov
push
push
push
mov
inc
xchg
cwde
pop
sub
repz
loope
push
cmp
pop
or
mov
mov
imul
mov
jo
sbb
and
lahf
xor
dec
pop
in
aas
pop
dec
or
xchg
xlat
mov
mov
outs
jns
lock
gs
mul
fsubr
xlat
inc
(bad)
(bad)
out
lahf
inc
lods
shr
das
cs
pop
mov
or
lods
lahf
shl
pusha
shl
mul
aam
pop
aad
push
aaa
xor
and
and
sub
push
imul
fist
sub
call
jecxz
into
retf
cmp
push
int3
cmc
xchg
or
sub
adc
and
push
jae
and
pop
inc
aaa
fs
jns
inc
pop
dec
fiadd
aam
ret
ds
jo
mul
iret
mov
mov
pop
lahf
jmp
cmp
inc
jnp
sahf
scas
stos
and
mov
fisttp
in
lahf
and
mov
out
stos
cmc
cdq
jae
push
fcom
jmp
xor
jge
mov
xor
rcl
mov
sub
or
bnd
(bad)
adc
mov
shr
fcom
and
adc
push
mov
mov
nop
and
jl
int
shl
in
cmp
jb
mov
cld
neg
out
ret
enter
mov
push
dec
dec
sub
dec
ins
xor
or
pop
loopne
hlt
leave
out
lahf
rcr
popa
mov
sub
inc
ds
inc
sar
push
cs
pop
rep
call
out
push
adc
inc
call
fnstcw
jg
out
retf
lods
push
push
push
jmp
imul
out
mov
shl
or
sub
pop
mov
xchg
inc
ins
sub
dec
jne
push
mov
loope
jge
fs
mov
cmp
loopne
push
xlat
enter
int
mov
or
xchg
cmps
iret
pop
cmc
das
or
movs
fst
mov
fs
(bad)
sahf
xchg
mov
test
inc
jle
aas
out
cmps
popf
es
(bad)
add
mov
mov
pushf
test
cwde
xor
retf
lds
jo
sub
in
xchg
inc
aam
pop
sub
push
pop
push
mov
push
xchg
mov
push
(bad)
fld
xchg
and
sub
sub
scas
cmps
or
lods
push
in
sub
or
out
or
fwait
shl
adc
and
sbb
or
movups
sbb
sub
ret
xchg
xchg
ins
xchg
inc
inc
(bad)
fdivr
push
icebp
nop
push
pop
sti
cmp
ret
xchg
mov
mov
leave
and
mov
pop
or
jmp
push
pop
mov
loopne
cld
dec
and
jnp
int3
shr
cwde
pop
adc
add
nop
mov
gs
jp
xor
outs
shl
pop
ret
jnp
mov
shl
sbb
je
addr16
popf
into
mov
ret
test
jmp
loope
inc
mov
dec
xchg
retf
test
jg
pop
loopne
jnp
dec
or
je
jmp
out
fs
xchg
shl
add
shl
fist
out
std
mov
sar
cmp
cmp
jge
es
es
push
not
int
fstp
sbb
jle
imul
mov
test
xchg
sti
or
xor
push
arpl
ror
jnp
cmps
nop
sbb
adc
cmp
enter
(bad)
push
loop
jg
mov
mov
mov
test
das
push
mov
pop
fist
out
mov
in
out
retf
lock
pop
test
hlt
fbstp
cs
div
inc
pop
push
push
cmp
adc
test
aad
jl
jae
xchg
xchg
dec
sub
inc
inc
inc
into
ret
pop
push
aas
fisub
aad
pushf
xchg
jne
mov
and
xchg
mov
and
sar
adc
mov
aad
dec
aam
mov
mul
pop
in
aam
pop
retf
jg
xor
je
add
push
es
xor
push
rcr
(bad)
pop
lahf
enter
xor
jno
inc
mov
xchg
loopne
jmp
jmp
(bad)
fwait
movs
or
stos
int
cmp
adc
jmp
push
stc
xor
and
fcomi
nop
jle
movs
mov
lea
mov
out
pop
repz
push
fisub
dec
mov
dec
pop
arpl
sbb
jo
outs
test
adc
jbe
jp
clc
not
dec
int3
xchg
retf
mov
jae
sbb
jns
mov
xchg
ss
inc
sub
hlt
xor
pop
mov
mov
xor
dec
xor
or
dec
mov
int
xor
push
and
push
aam
and
push
in
and
xor
fdiv
popa
loope
stc
mov
jle
cmp
adc
leave
sbb
sbb
cld
cmp
out
(bad)
push
push
cmp
push
sbb
dec
call
sti
movs
pop
xor
xor
and
movs
scas
push
call
fcomp
addr16
xor
iret
push
in
push
je
loopne
lock
dec
dec
sti
mov
and
add
rcl
pop
mov
mov
inc
icebp
test
gs
dec
jb
aas
mov
inc
dec
stc
xor
xchg
ss
jmp
push
dec
fs
cmp
cmps
leave
enter
sub
imul
popa
gs
push
arpl
jmp
sub
mov
(bad)
mov
adc
popa
gs
and
or
fucomi
add
shl
cmc
in
out
out
iret
icebp
mov
hlt
fadd
(bad)
dec
(bad)
fwait
jg
mov
xchg
and
dec
push
inc
xor
in
hlt
or
shr
mov
mov
retf
cmc
inc
mov
inc
lds
movs
jg
and
push
xchg
fld
and
mov
sub
out
pop
adc
and
daa
and
movs
sbb
adc
pop
outs
mov
cld
ins
cmp
push
inc
cmp
mov
dec
es
inc
fisttp
rcr
out
mov
test
pop
or
cmp
mov
daa
into
fadd
test
xor
mov
pushf
cmc
and
mov
icebp
ss
pop
add
add
sub
cli
popf
(bad)
in
sbb
mov
inc
jmp
adc
add
add
jl
fisttp
mov
xchg
call
daa
arpl
pop
inc
lahf
ins
bound
out
add
ins
mov
add
ret
mov
dec
or
ret
repnz
repnz
dec
pop
in
lahf
rcl
aas
dec
cmps
adc
idiv
push
fadd
push
inc
inc
sbb
cmp
ret
or
mov
addr16
sti
xor
jp
out
inc
retf
pop
fcmovb
shr
xor
add
dec
xchg
popf
jmp
mov
mov
inc
jle
push
xchg
test
inc
cmp
add
pop
(bad)
jmp
xchg
stc
test
jns
in
fdiv
jno
sub
into
test
add
mov
xchg
in
and
mov
pop
mov
aaa
imul
adc
push
mov
stos
(bad)
xchg
jl
lods
push
mov
mov
retf
cmp
add
lock
mov
xor
push
call
ror
sti
inc
mov
hlt
cdq
addr16
dec
pop
push
cmps
test
ins
test
rcl
call
add
sahf
pop
lea
inc
push
mov
fdivrp
jecxz
sub
rcl
ins
scas
jecxz
retf
mov
push
icebp
movs
es
jg
or
fdiv
add
(bad)
clc
outs
push
adc
or
jg
ds
dec
xchg
sbb
xor
ror
out
and
fdivr
cmp
pop
icebp
push
das
add
aam
pop
push
mov
arpl
(bad)
aas
or
push
push
and
fild
in
jp
and
mov
adc
or
call
jb
or
es
bound
lods
xchg
mov
lods
stos
popf
dec
out
and
pusha
jne
cmp
xchg
loope
int
or
jmp
sub
in
cdq
sub
push
les
inc
fistp
or
es
rol
fisub
push
jne
dec
sub
loop
js
fisttp
cmps
cwde
mov
xchg
rcr
xchg
ins
adc
sbb
enter
in
je
out
xchg
push
or
ret
fst
adc
in
ja
jno
(bad)
mov
inc
test
int3
mov
icebp
pop
and
rol
lea
jno
std
ds
sbb
pop
xor
pop
cmp
cmp
xchg
xor
and
jge
xchg
add
jb
sub
mov
and
push
out
add
jns
cmp
jae
(bad)
stc
sbb
loope
inc
xchg
pop
sub
stc
and
jp
not
adc
neg
cmp
sahf
dec
xchg
and
cmp
cmp
mov
stos
popf
sbb
enter
cmp
dec
ins
aas
test
mov
fldl2e
cmps
pop
sbb
test
cmc
push
dec
mov
imul
ins
push
or
nop
cmp
mov
fidiv
pop
xchg
dec
dec
mov
jnp
call
sub
sub
shl
mov
push
icebp
jge
push
xchg
ret
adc
cdq
aaa
and
ins
sub
jnp
outs
lock
jns
lds
call
adc
add
jns
mul
std
mov
inc
call
jle
sbb
mov
repnz
(bad)
lock
add
mov
outs
sub
mov
mov
add
dec
xor
inc
(bad)
loope
movs
lods
imul
mov
xor
cmp
adc
sbb
call
jmp
mov
adc
mov
in
dec
mov
stos
dec
iret
push
xchg
xchg
cs
call
mov
popa
arpl
sbb
jnp
retf
mov
fistp
popf
push
mov
leave
cwde
je
leave
imul
call
daa
imul
push
dec
mov
xchg
pop
(bad)
call
(bad)
jge
push
cmps
pop
pop
aas
xchg
nop
dec
dec
in
js
(bad)
(bad)
mov
sub
push
aas
jne
cmp
cmp
jae
scas
xchg
xor
out
fcmovnb
adc
jnp
mov
mov
cmp
ret
ins
jl
test
bound
mov
lds
mov
scas
mov
xchg
fsubr
int
add
fdiv
cmp
in
sub
xchg
mov
push
mov
jnp
aas
rcl
sti
mov
adc
or
push
ret
or
mov
mov
std
aaa
mov
test
or
push
sbb
cdq
cmp
push
push
dec
adc
or
(bad)
imul
mov
fs
and
in
add
mov
push
push
mov
pushf
push
jnp
mov
call
psubusb
cmp
xchg
mov
nop
addr16
and
in
loop
xchg
mov
fs
rcl
into
inc
fs
scas
and
sbb
mov
mov
or
in
es
iret
push
mov
sbb
repz
rcr
(bad)
push
sbb
add
cmps
repnz
imul
ret
jae
in
add
shl
hlt
xchg
(bad)
xor
rcl
adc
rcr
cmps
push
jns
cwde
ds
ja
or
lea
mov
ins
adc
jmp
mov
or
clc
and
mov
(bad)
retf
aas
xchg
fild
xrelease
stos
mov
in
out
adc
imul
add
loope
pop
inc
jmp
popf
(bad)
or
stc
mov
call
jmp
lea
or
mov
jge
fisttp
pop
out
mov
addr16
popa
lods
mov
das
ret
push
loop
je
enter
je
retf
or
mov
call
push
mov
test
mov
stos
push
out
sub
adc
mov
stc
movs
inc
test
mov
xchg
loope
fs
inc
inc
fisubr
jb
jge
cmp
inc
scas
popf
inc
repnz
sub
mov
lahf
ds
imul
adc
aam
lea
add
aad
or
push
call
add
mov
jnp
pop
mov
dec
add
pop
std
mov
jp
outs
ja
jns
inc
push
adc
ins
push
mov
cmp
mov
push
movs
pop
inc
cmp
jle
lahf
dec
ffree
push
das
push
push
dec
inc
iret
iret
mov
xchg
aam
mov
push
mov
dec
add
sbb
mov
or
(bad)
out
daa
mov
push
push
js
mov
pop
lods
jnp
sbb
and
jg
leave
xchg
enter
ins
dec
mov
and
inc
shr
jno
lahf
sbb
test
xor
fisubr
sbb
rcr
or
inc
pusha
clc
and
xchg
stos
pop
cmp
adc
pop
or
add
lds
call
loopne
xchg
xchg
mov
out
push
retf
gs
ds
and
sub
movs
xor
inc
sub
sti
in
ret
sti
cmp
inc
jle
test
mov
xchg
mov
mov
xlat
std
sbb
xchg
cmp
js
(bad)
push
mov
adc
cmps
mov
rcl
inc
mov
inc
mov
(bad)
enter
cmp
inc
pop
dec
lods
inc
sub
dec
leave
addr16
ja
mov
mov
loop
lock
sub
in
sbb
dec
adc
pusha
std
push
mov
mov
and
pop
addr16
cld
cmc
test
dec
and
ds
int
jle
mov
lock
inc
test
or
aaa
fdiv
ss
out
or
xchg
jbe
mov
or
rcl
sub
dec
inc
mov
adc
pop
jmp
inc
mov
and
inc
loope
mov
daa
jae
pop
jno
les
inc
jns
and
shr
mov
or
inc
scas
stos
push
enter
jge
push
and
pusha
leave
cli
mov
mov
fnstenv
fs
sbb
and
adc
inc
fs
mov
loope
push
and
ror
push
add
xor
mov
(bad)
jg
cmc
jnp
out
xlat
push
call
mov
xor
mov
(bad)
rcr
movs
in
xor
xor
test
xchg
sar
imul
mov
(bad)
fidivr
cld
repz
scas
adc
leave
inc
test
out
cmp
mov
mov
add
call
leave
out
jns
sub
ja
retf
add
mov
sbb
scas
arpl
sar
cdq
xchg
jmp
cli
hlt
inc
push
sbb
mov
sub
inc
push
xchg
pop
icebp
in
xchg
inc
mov
das
jo
mov
sub
or
push
jae
sbb
bound
pusha
and
cwde
mov
in
cmp
fwait
imul
pushf
jo
inc
pop
daa
mov
das
cmp
out
aas
pop
inc
mov
dec
or
sub
and
mov
jecxz
dec
jmp
stos
mov
adc
arpl
bswap
repz
dec
and
push
push
test
clc
lea
int
out
or
inc
mov
nop
mov
cmps
ss
out
add
repnz
retf
sti
sbb
je
push
add
add
pushf
or
jecxz
popa
xchg
popa
sbb
outs
cmc
push
into
xchg
repnz
fild
add
nop
xor
repz
sub
sbb
push
loop
ds
popa
inc
ja
push
jmp
sbb
add
push
jecxz
outs
loop
ret
push
fist
inc
sub
mov
hlt
loopne
lahf
popf
and
push
xchg
repnz
jmp
pop
ret
add
dec
add
call
scas
mov
and
push
div
dec
arpl
aam
cmp
cmp
mul
jle
dec
xchg
xor
mov
fadd
dec
(bad)
lds
jg
mov
and
cmps
adc
jmp
jno
xchg
cmp
xchg
adc
cli
push
je
mov
or
cmps
or
jae
push
ficom
pusha
jg
mov
lock
mov
imul
sar
and
mov
xchg
cmp
cmp
mov
arpl
dec
nop
out
div
adc
(bad)
clc
std
jb
add
in
push
mov
sub
jg
inc
stos
stos
cli
mov
or
push
loop
cmp
jmp
mov
movs
push
jmp
xchg
mov
jbe
mov
jmp
lahf
pop
sub
add
lods
jl
mov
mov
sbb
dec
out
js
div
imul
(bad)
leave
lds
push
std
and
ja
xchg
mov
adc
sub
xchg
cmc
jno
xchg
inc
cmps
mov
aam
sub
inc
(bad)
repz
or
imul
dec
scas
push
(bad)
jmp
pop
and
mov
test
mov
mov
(bad)
(bad)
movs
das
out
sbb
mov
sub
jne
mov
das
shr
mov
js
jns
call
aaa
xchg
movs
sahf
or
inc
(bad)
cmp
push
iret
fcom
push
inc
movs
call
xor
ret
(bad)
call
push
pop
mov
gs
movs
sti
adc
jae
cmp
fistp
ret
in
shl
and
rol
push
mov
push
add
dec
push
mov
xchg
mov
add
rol
jae
push
fidiv
dec
fmulp
aad
and
push
fwait
dec
mov
mov
mov
or
pop
fwait
cmp
mov
and
retf
push
or
mov
add
dec
add
hlt
pop
mov
jne
push
inc
push
cmps
shl
stc
mov
jp
xchg
mov
lods
push
mov
dec
sub
mov
cli
jecxz
data16
push
lea
or
test
and
ins
push
test
dec
(bad)
pushf
fisubr
push
adc
loopne
lods
mov
gs
pop
cmps
(bad)
not
scas
lods
and
iret
test
aam
mov
sbb
fist
mov
pop
jp
inc
sub
sbb
mov
pop
in
mov
(bad)
pop
es
movs
repz
aaa
fild
iret
and
sub
fwait
push
mov
and
in
pop
shl
int3
cli
push
jl
mov
leave
(bad)
xchg
mov
mov
mov
ret
sub
lods
fnstcw
shl
mul
out
inc
xor
mov
and
icebp
mov
cmp
fs
fisttp
ror
sub
and
popf
adc
out
mov
adc
dec
shr
(bad)
test
cmp
add
shl
mov
mov
add
test
jmp
(bad)
dec
sub
dec
sbb
inc
sub
jge
and
retf
xchg
pop
jns
cmp
dec
jp
rcr
inc
aas
pop
mov
adc
push
or
dec
popa
outs
xchg
mov
adc
mov
in
lods
adc
xor
and
xchg
int3
jno
push
add
push
mov
imul
repz
push
test
adc
inc
push
fs
cmp
sbb
ins
adc
push
enter
rol
xchg
ret
daa
dec
xchg
repnz
or
cmps
pop
sub
adc
mov
jae
cli
mov
mov
pop
mov
aaa
out
(bad)
dec
jb
pop
jb
imul
iret
clc
idiv
mov
loop
fisubr
mov
xor
js
or
rol
ror
mov
cdq
scas
or
mov
lds
jns
movs
or
aad
lea
sti
or
xor
daa
inc
imul
mov
outs
loopne
sub
xor
push
pop
and
mov
pushf
inc
push
push
shr
sbb
and
xchg
aam
scas
int
hlt
add
(bad)
sahf
sbb
ss
out
adc
dec
xor
repz
jmp
jl
push
inc
pop
adc
push
lock
mov
in
ins
mov
jecxz
sysret
pop
mov
fsubr
into
xor
xchg
push
mov
inc
push
retf
dec
test
rol
imul
jg
dec
mov
xor
fisubr
shl
(bad)
push
pop
(bad)
ficom
mov
xor
je
push
xchg
lock
icebp
fnstenv
mov
cs
push
jmp
aad
fild
iret
je
test
jecxz
dec
mov
dec
cmp
add
xor
jge
retf
inc
loopne
xor
mov
mov
xchg
sub
mov
popf
cmps
xor
sbb
mov
lods
xchg
push
pop
xchg
pop
cmp
scas
sbb
push
jecxz
jo
or
out
push
pop
push
push
sti
popf
cmp
mov
push
push
inc
cmc
and
xor
clc
scas
xchg
xchg
in
mov
cmc
adc
dec
sbb
rol
jb
and
adc
aaa
push
cmps
jmp
jb
add
stos
gs
sbb
shr
(bad)
lods
fmul
lods
xor
nop
mov
jb
mov
mov
push
sahf
in
retf
call
sub
or
mov
aaa
repz
and
fsubr
retf
les
push
or
mov
pop
popa
pop
mov
cmc
pop
sahf
cld
ss
inc
dec
jo
sub
call
push
les
or
sbb
pushf
dec
pop
pop
inc
sub
and
aam
ds
jl
(bad)
dec
dec
mov
cmp
ja
jo
(bad)
aad
sti
jecxz
cmps
(bad)
lock
jo
inc
xchg
in
inc
sti
xlat
pusha
add
outs
xlat
dec
mov
and
xor
or
and
mov
or
sbb
shl
cmc
adc
imul
pop
sti
mov
les
or
adc
aad
ret
pushf
ror
adc
ins
gs
fsub
jns
cmps
dec
subps
(bad)
jb
loop
lods
xor
pop
pop
inc
jno
fnsetpm(287
rcr
fistp
push
and
daa
push
cmp
inc
mov
sbb
dec
popf
pushf
dec
sahf
ror
idiv
nop
mov
mov
jl
cmp
call
xchg
cwde
call
mov
lea
add
xchg
test
mov
out
int3
adc
lods
pushw
xor
inc
out
aas
push
popf
ins
dec
test
mov
repnz
ror
mov
mov
jns
jb
xor
test
jno
neg
push
xor
jmp
ins
pop
in
rcr
pushf
jmp
xchg
retf
jbe
(bad)
xor
movs
mov
bound
dec
or
std
ror
shr
imul
jmp
add
cmp
dec
mov
les
out
cli
cmp
imul
ins
hlt
call
mov
sbb
out
mov
dec
push
cmp
mov
call
movs
jbe
or
in
ss
call
push
aad
es
mov
jb
mov
pop
inc
inc
jbe
aam
or
adc
jne
scas
adc
push
clc
pop
jle
xchg
mov
stos
mov
dec
mov
(bad)
sub
gs
int3
and
repnz
push
jbe
ds
ins
es
or
xor
mov
jne
sub
jl
lods
or
fs
jge
xchg
cld
cli
sub
and
xor
lea
dec
push
in
cdq
adc
and
cwde
xchg
cmp
es
loope
je
(bad)
loopne
sub
scas
(bad)
sub
mov
cmp
mov
push
sub
sar
mov
inc
mov
imul
xchg
add
lock
nop
push
mov
jmp
push
pop
and
test
jae
xchg
aad
scas
xchg
loop
xchg
das
imul
jecxz
push
popa
mov
lahf
scas
cmp
cs
shl
loope
and
dec
in
adc
mov
dec
add
(bad)
les
cmp
fst
ds
add
jbe
scas
outs
sbb
gs
adc
nop
and
ins
enter
xor
jmp
out
shr
in
fdivr
jno
jmp
pop
call
push
jbe
push
jbe
pop
sub
inc
stos
call
cmp
xchg
ficomp
test
ds
(bad)
fsubr
xor
dec
movs
rol
mov
mov
fsubp
stc
jecxz
cli
in
sub
div
dec
test
xchg
mov
inc
add
inc
mov
dec
cs
jnp
lock
xchg
cmp
cmp
loop
sub
or
seto
cld
pop
mov
out
xchg
or
mov
popa
dec
sub
jo
and
sub
test
jne
xchg
fistp
jne
mov
sbb
std
xchg
or
int
inc
sbb
inc
retf
lock
inc
sbb
inc
cli
jo
outs
fnstsw
adc
dec
or
pop
mov
xchg
xchg
pushf
mov
mov
xchg
std
adc
and
div
xor
xchg
stos
outs
mov
(bad)
xor
out
sbb
push
mov
jmp
cmp
imul
xchg
lds
xchg
jae
add
cli
mov
jns
icebp
(bad)
fwait
cmp
ds
shl
mov
adc
or
(bad)
(bad)
out
mov
xchg
inc
fild
popf
into
stc
arpl
dec
adc
loopne
mov
jl
cmp
jmp
test
mov
test
idiv
mov
arpl
mov
xor
mov
ja
xchg
push
xchg
ja
adc
and
add
mov
ret
(bad)
(bad)
mov
test
xor
or
sub
int3
movs
lock
xor
mov
out
cmps
shl
neg
and
lods
adc
mov
scas
aad
test
adc
mov
xor
push
add
sti
in
mov
arpl
loope
dec
pop
inc
xlat
xchg
sbb
jle
bound
rol
dec
jnp
cmp
aaa
xchg
repnz
pop
stos
sub
jnp
add
leave
xlat
sub
or
(bad)
mov
out
mov
jmp
por
xchg
out
inc
xchg
(bad)
xlat
fsubp
mov
dec
out
popa
mov
add
add
dec
mov
mov
dec
mov
pop
ds
mov
mov
sub
cmp
or
rcr
div
and
sbb
add
xchg
cmp
xchg
iret
cmp
out
call
rcr
aaa
add
inc
fimul
xchg
push
lods
cmps
stos
shr
(bad)
(bad)
mov
and
call
test
clc
lods
int3
and
dec
mov
xchg
cmps
adc
cdq
cwde
cwde
jmp
pop
mov
push
dec
xchg
add
mov
out
out
add
dec
dec
popa
ins
scas
xor
push
adc
jmp
xchg
add
stc
repz
(bad)
mov
push
(bad)
stos
jb
outs
sub
addr16
cmps
psrld
or
dec
add
repnz
jecxz
xchg
sub
xchg
leave
ret
sub
aad
mov
adc
mov
cmps
sahf
pushf
and
scas
push
dec
inc
cmp
arpl
xor
inc
jle
(bad)
rol
mov
cmp
jl
mov
loop
dec
sbb
test
add
out
mov
leave
(bad)
ins
test
cmp
adc
stos
stos
dec
adc
jno
inc
pop
cld
push
mov
cli
lock
cmp
leave
lahf
dec
ret
inc
fldcw
sahf
mov
cdq
cmps
or
ror
int
sahf
retf
mov
push
aad
stos
fiadd
cmp
or
mov
xchg
jl
es
xor
ins
sub
cmp
jle
ins
shl
xchg
inc
dec
lods
into
lock
pop
movs
out
xor
rol
rcl
mov
add
(bad)
in
inc
ror
loope
xchg
and
xchg
mov
xor
push
mov
rol
push
xor
sbb
fiadd
repnz
mov
imul
mov
xchg
mov
call
mov
xchg
sahf
or
xchg
pop
jo
lock
mov
sub
push
cmps
jno
pop
xor
repz
out
js
enter
add
mov
mov
fs
repz
shr
add
(bad)
out
push
out
sub
fiadd
push
je
lea
jo
(bad)
call
dec
jae
out
sub
sbb
mov
es
xchg
add
pusha
imul
addr16
jp
(bad)
stos
xor
mov
shl
stc
aaa
mov
and
add
fwait
das
in
mov
add
push
xchg
jl
or
jnp
retf
cwde
sub
xchg
add
lods
xchg
rcr
and
mov
add
push
xchg
shl
or
pop
xor
in
pop
pop
push
or
mov
ins
pop
pop
ja
adc
test
imul
ss
mov
inc
std
call
fwait
jae
inc
cdq
adc
and
sti
and
icebp
xchg
fmul
xchg
or
sti
addr16
ds
cmp
adc
sbb
or
sub
push
shl
dec
neg
push
daa
(bad)
cmc
dec
and
test
cmp
push
dec
add
mov
mov
fild
jbe
lock
pop
sbb
sub
add
dec
xor
add
je
cwde
sub
add
add
rcl
jnp
inc
sub
mov
sbb
(bad)
(bad)
or
or
jecxz
lods
jne
sub
adc
clc
lahf
sti
js
cmps
mov
xchg
dec
xor
add
fiadd
xor
dec
ss
into
or
jecxz
mov
adc
popf
data16
scas
xlat
jge
dec
xchg
cmps
int3
push
xchg
loope
push
test
test
jne
dec
push
mov
mov
sbb
or
sbb
and
xlat
daa
mov
mov
fsub
xor
sbb
and
fsub
push
retf
push
and
sbb
aam
cwde
ja
fneni(8087
bound
push
add
push
test
jno
stos
ins
jo
sub
ret
or
popf
xchg
test
shr
or
stos
dec
mov
dec
loopne
pop
cmps
push
in
aaa
mov
sub
cmp
jp
jbe
ret
test
mov
inc
outs
clc
in
mov
fadd
out
jnp
or
call
ror
int3
out
loope
xor
adc
push
in
daa
cmp
data16
daa
pop
jne
retf
or
iret
and
es
mov
jmp
fwait
xchg
arpl
add
or
adc
fsub
aas
and
push
add
lods
movs
jmp
imul
add
stos
or
shl
stc
cwde
mov
je
push
cmp
fcomip
dec
daa
dec
pusha
and
and
sub
or
inc
jne
mov
lea
fisttp
idiv
pop
jl
in
pushf
popf
mov
cmc
xchg
js
mov
(bad)
xor
push
mov
pop
jmp
push
push
das
cmp
loope
cmp
aas
or
fadd
leave
mov
lea
adc
sbb
sahf
daa
test
pushf
fcomp
ret
cmps
xchg
adc
daa
xchg
add
xor
xchg
lods
jnp
adc
ins
test
imul
pop
adc
and
lods
xor
in
push
fidiv
loope
ret
repnz
jnp
xor
(bad)
and
imul
sub
test
sub
mov
popf
hlt
cld
and
or
fldenv
fcomp
mov
aam
in
xchg
push
jbe
mov
aam
mov
out
mov
(bad)
xor
ins
xor
mov
xchg
shl
scas
jg
mov
pushf
push
sbb
adc
xchg
(bad)
push
jne
loope
mov
mov
sub
mov
lock
push
repnz
pusha
loopne
inc
pop
loop
xchg
add
fwait
add
(bad)
push
into
dec
sub
cmp
js
movs
fimul
(bad)
cdq
loope
lds
mov
fucomp
(bad)
fdiv
outs
shl
jecxz
xchg
lods
dec
jg
inc
lods
cmp
jl
mov
sub
and
cdq
mov
push
push
push
sub
jb
fld
xchg
jne
sub
inc
or
rcl
push
and
or
lock
fdivr
push
jle
(bad)
and
jns
int
push
arpl
adc
cmp
aaa
push
fld
jmp
inc
lds
jecxz
pop
loopne
mov
ret
sub
inc
test
jmp
jb
vmptrst
(bad)
mov
xor
pop
sbb
inc
mov
jge
fxch
push
leave
fmul
jo
call
xchg
in
pop
add
jp
call
sub
cmp
pop
dec
mov
sbb
aam
inc
inc
add
icebp
repz
push
test
or
pop
arpl
dec
push
pop
into
cmp
enter
popf
lds
bound
cmp
gs
pop
mov
and
mov
repz
dec
shl
push
fwait
lea
(bad)
pop
mov
adc
outs
and
lds
sti
inc
adc
jmp
call
pop
ins
and
call
iret
sbb
ja
test
jg
shl
(bad)
scas
jb
in
dec
jo
adc
out
int
loop
lods
sbb
pop
out
(bad)
leave
mov
sbb
push
vstmxcsr
sbb
inc
nop
add
push
repnz
outs
pop
loop
jo
mov
fnclex
mov
cwde
or
sub
cs
xchg
out
jle
xchg
pop
push
push
popf
inc
sub
jp
xor
dec
jl
xchg
ret
lods
out
out
pop
into
les
and
in
pop
pop
or
and
or
push
enter
idiv
inc
mov
push
lock
jns
pop
adc
fwait
bound
mov
lock
add
mov
inc
sbb
sar
icebp
test
push
sub
pop
xor
xor
scas
mov
adc
inc
(bad)
jge
push
jl
push
bswap
add
ficom
xor
in
scas
sbb
lods
adc
xor
repz
mov
mov
mov
enter
sbb
sbb
fst
push
outs
cmp
nop
xlat
xchg
add
(bad)
jecxz
add
aaa
ins
jl
cwde
add
pusha
adc
inc
das
mov
not
cmp
add
adc
xchg
or
sbb
dec
xor
in
aad
repnz
xlat
add
xor
and
int
sbb
loope
cmp
push
sti
push
mov
mov
hlt
mov
ds
jbe
xor
mov
inc
push
xor
and
inc
mov
pop
cmp
jns
ja
or
ret
sbb
jne
mov
in
or
call
inc
adc
mov
sar
xchg
imul
int
data16
scas
mov
push
call
inc
cmp
nop
dec
(bad)
int3
mov
adc
push
test
sbb
mov
sbb
add
pushf
push
cmp
dec
pop
pusha
call
dec
push
(bad)
xor
sbb
inc
sub
xlat
xor
xchg
lds
or
cmps
jmp
mov
pop
cmp
dec
push
(bad)
out
dec
xchg
pushf
mov
cwde
mov
call
cli
push
fstp
cli
xchg
movs
cwde
sti
ret
pop
pop
repnz
(bad)
frstor
pop
mov
(bad)
push
sbb
xchg
mov
add
push
add
loopne
add
xor
mov
sub
enter
mul
xchg
push
data16
lea
movs
movs
in
mov
les
dec
push
adc
xor
and
es
mov
scas
xor
jge
xchg
fistp
cs
(bad)
outs
dec
pop
ret
push
in
(bad)
ds
push
pop
jmp
retf
xchg
push
fstp
int3
lods
test
mov
push
sbb
dec
adc
dec
das
idiv
lahf
xor
ds
mov
mov
pop
mov
add
sub
sub
push
arpl
xchg
lahf
lahf
in
pop
jbe
pop
and
loop
lods
mov
in
je
push
not
call
jmp
pop
mov
mov
cmp
fisttp
mov
lods
cld
add
ins
cli
in
gs
jns
jmp
and
pop
pop
aam
retf
(bad)
lods
test
out
je
cld
xor
push
fs
(bad)
push
add
fsubr
fsubr
jne
jno
mov
arpl
fisub
and
jmp
pushf
xor
pop
cmps
xor
push
mov
iret
pop
fidiv
pop
mov
sbb
rol
inc
mov
jmp
aad
arpl
loop
cmc
and
push
rcr
repnz
mov
sub
push
pop
rcr
push
stos
add
push
int3
test
sub
test
ins
int
(bad)
cmp
pop
daa
push
mov
lahf
fs
das
gs
dec
leavew
int3
mov
out
mov
ins
xor
fdivr
ret
dec
jmp
retf
mov
xchg
mov
popf
(bad)
jl
and
scas
in
aas
inc
pusha
xchg
cs
dec
sub
fild
add
xor
sub
sbb
das
fidiv
xchg
cmp
test
mov
movs
int3
mov
jns
int3
mov
stc
pop
xor
(bad)
jl
ret
in
inc
fidiv
and
shl
(bad)
(bad)
jmp
scas
and
push
or
(bad)
sbb
mov
lock
add
imul
clc
push
cmp
ret
or
add
cdq
inc
(bad)
jae
ds
popf
lea
sbb
movs
lock
cmovno
pop
outs
bnd
cmc
outs
jecxz
adc
or
test
mov
or
out
jge
mov
xchg
mov
xchg
push
mov
dec
push
dec
out
mov
fs
push
mov
std
sub
pop
add
mov
xor
popa
(bad)
test
cmp
pop
call
pop
push
inc
and
mov
mov
daa
sahf
jnp
cmps
jle
js
xor
cmc
adc
fisub
mov
rcr
pop
outs
jbe
fldlg2
adc
fwait
cdq
ret
gs
and
iret
lahf
mov
dec
fmul
xchg
xchg
or
loopne
pop
out
pop
xor
mov
or
pop
call
mov
sahf
push
loope
inc
adc
adc
jmp
xor
inc
mov
or
icebp
test
int3
mov
and
jle
std
mov
inc
inc
test
mov
ins
pop
sbb
xchg
add
daa
pop
sub
jg
shr
xor
imul
mov
daa
fist
adc
nop
in
fimul
enter
loope
dec
out
and
aaa
jecxz
inc
sbb
adc
fisttp
xor
mov
cdq
add
adc
xchg
and
out
mov
pop
mov
test
mov
cld
std
loope
jmp
and
sbb
mov
and
xchg
sbb
pop
sub
or
mov
(bad)
jae
mov
lock
ja
add
add
cld
and
ins
add
pop
cwde
mov
cs
scas
(bad)
(bad)
push
jp
js
fwait
sbb
imul
fxch
cdq
add
xchg
or
push
add
retf
dec
and
jle
adc
push
retf
imul
xor
add
xlat
mov
idiv
mov
xchg
es
(bad)
hlt
int
dec
mov
inc
adc
push
inc
loop
scas
jb
imul
rcr
stos
mov
push
jo
mov
js
push
addr16
outs
xor
gs
in
aas
bound
push
rsm
pop
inc
xor
(bad)
(bad)
call
or
test
ret
pusha
bnd
cmp
mov
xchg
ins
jns
add
xor
in
pushf
push
jmp
(bad)
dec
pop
mov
sahf
mov
push
jg
sbb
in
add
dec
(bad)
aas
movs
frstor
out
mov
daa
mov
push
gs
lods
push
sub
cmp
adc
pop
(bad)
loop
retf
ds
push
inc
pop
in
fcomp
mov
inc
jl
push
(bad)
retf
xchg
jmp
jle
hlt
repnz
xchg
lods
fwait
inc
fnstenv
sub
xchg
pop
xchg
shr
cmp
and
pop
psrad
fimul
sbb
movs
push
xchg
jecxz
test
add
mov
nop
lds
sbb
add
or
pop
mov
push
jmp
outs
pop
inc
and
in
jbe
outs
cli
fwait
adc
xor
push
js
dec
mov
sbb
xchg
mov
in
or
stos
pop
fwait
pop
addr16
pop
jae
lock
mov
lock
mov
add
loop
mov
cmps
xchg
fcmovnb
imul
test
loope
xlat
add
sub
retf
aam
mov
cmps
cmc
call
pop
push
ret
mov
push
sar
cmp
or
es
dec
xor
dec
repz
jp
enterw
sub
mov
mov
ja
jmp
ds
adc
jo
std
fist
jle
push
lods
mov
loopne
and
mov
jle
lods
jp
or
fadd
ror
mov
mov
cmps
movs
rcl
sbb
dec
rol
stos
cs
push
pop
sti
cmc
jo
(bad)
fwait
mov
sub
retf
mov
mov
inc
push
xor
mov
call
dec
(bad)
retf
iret
neg
inc
arpl
cs
or
sbb
mov
add
mov
push
push
push
pop
push
pushf
imul
mov
out
mov
lock
mov
and
pop
std
mov
adc
imul
cmp
sub
adc
rcr
adc
dec
push
imul
xchg
pop
cmp
pop
xchg
repz
jge
(bad)
aaa
or
das
mov
and
jo
sti
fdiv
xchg
cmp
sar
mov
loope
out
rcl
pop
or
jo
jb
push
jmp
sbb
sti
jmp
xor
xchg
ret
push
retf
push
add
sub
ss
add
and
or
sahf
stc
cwde
mov
mov
xor
mov
ja
ds
sub
and
sub
data16
lock
adc
sub
imul
dec
sbb
pop
loopne
sub
mov
fistp
fs
out
das
sbb
sub
cmp
sub
cmp
add
and
dec
mov
in
adc
xchg
test
push
sub
inc
pop
movs
mov
movs
pop
sub
pop
adc
int3
inc
inc
int
add
add
lea
jge
fs
fcomp
pusha
(bad)
lahf
adc
and
pop
xor
or
cmp
loop
mov
jns
fiadd
mov
stos
out
bound
and
add
clc
(bad)
dec
mov
xchg
cld
xor
cmp
jecxz
lods
icebp
and
xchg
cmp
ret
sahf
ins
xor
mov
jns
cmp
mov
add
fisttp
movs
aaa
test
mov
sub
mov
lods
mov
push
and
and
mov
mov
inc
add
inc
fidiv
imul
in
aam
lods
pop
xor
mov
leave
call
lods
fsub
push
nop
mov
lods
repnz
not
jb
pop
pop
ds
mov
ror
xchg
sar
cmp
push
pop
and
push
pop
jecxz
outs
jns
iret
cmp
fstp
adc
in
dec
adc
xchg
mov
popa
jno
fiadd
imul
pop
jno
hlt
pusha
enter
xlat
or
jae
outs
lea
sub
mov
hlt
cmc
jbe
mov
std
repz
push
xchg
xlat
xor
scas
mov
push
push
cmp
in
into
xchg
xor
inc
stos
mov
or
jns
stc
mov
adc
sbb
xlat
cld
cmp
xor
cmp
cs
jle
sub
repnz
lahf
sub
cld
xchg
dec
scas
imul
mov
adc
neg
loop
imul
movs
icebp
mov
and
lock
xchg
jmp
test
dec
cs
mov
fwait
jp
mov
sub
xor
mov
je
inc
dec
push
and
sbb
mov
xchg
nop
addr16
xor
xor
sbb
stos
mov
or
fistp
jmp
mov
cld
ss
retf
mov
adc
mov
(bad)
adc
fcomp
add
nop
scas
or
pop
add
adc
adc
xor
pusha
ja
and
or
bound
lock
sbb
jo
inc
enter
mov
and
sbb
mov
out
out
xlat
mov
ficom
or
aad
lods
pop
or
sub
arpl
xchg
loope
pushf
dec
xchg
(bad)
pop
clc
sbb
ins
repz
sar
push
sbb
push
adc
cmp
pop
adc
mov
inc
xlat
mov
mov
enter
out
pop
xchg
add
scas
pushf
pusha
mov
pop
call
pop
les
rcl
push
mov
test
jl
shl
pop
xchg
out
loop
test
test
pop
pop
pop
jmp
push
out
jns
(bad)
push
clc
mov
addr16
add
shr
jmp
fdivp
pop
es
pop
jge
add
sahf
adc
dec
jbe
xchg
sbb
or
adc
(bad)
fcmovnb
mov
mov
mov
jne
pop
mov
push
jo
test
sahf
js
sub
lods
mov
mov
pop
icebp
jg
push
and
nop
cmp
xchg
sahf
xor
movq
out
or
mov
mov
popa
and
fdiv
add
retf
dec
pop
sub
mov
add
rol
sbb
push
mov
mov
lds
cmps
cmc
or
adc
push
mov
out
jnp
popa
sbb
cmp
ret
cdq
or
jae
clc
inc
push
and
dec
leave
mov
pushf
test
add
(bad)
pushf
ja
cmp
jnp
add
(bad)
sub
imul
mov
icebp
inc
push
push
iret
mov
lods
cmc
fbstp
jne
mov
cmp
or
pop
mov
push
inc
mov
and
xor
jl
lods
mov
pushf
hlt
gs
dec
ret
fsubr
fs
hlt
clc
dec
(bad)
cmp
mov
sti
dec
les
inc
jge
lods
sbb
iret
(bad)
outs
sbb
and
xor
cmps
test
inc
adc
movs
pop
cdq
lds
jle
pusha
pop
retf
les
dec
(bad)
std
xchg
js
test
mov
(bad)
cmp
das
sbb
mov
cmp
jg
sub
inc
icebp
pop
imul
sahf
adc
push
lock
in
ins
sub
repnz
or
aam
xchg
mov
and
push
std
int3
std
mul
test
dec
mov
out
addr16
in
sub
cmp
sbb
scas
(bad)
stos
dec
xchg
ret
mov
dec
test
dec
sahf
push
or
ficomp
inc
outs
movs
jle
pop
and
repnz
adc
mov
mov
mov
cld
sbb
xor
dec
fisubr
fwait
push
or
outs
cmp
mov
jmp
xor
(bad)
fdiv
mov
xor
hlt
sti
xlat
xchg
or
out
out
ret
xlat
mov
movs
cld
xlat
and
xchg
xor
rcr
lock
sub
jmp
xchg
pop
mov
popa
adc
sti
jbe
imul
push
adc
pop
stc
ss
sub
retf
sbb
or
add
cmp
sahf
pop
pop
jl
xor
inc
or
aas
or
retf
les
outs
stc
leave
loopne
loopne
mov
mov
push
cwde
bsf
adc
mov
and
mov
fcmovb
cmp
ins
cld
in
out
cmps
es
dec
cmps
fsub
or
test
imul
xchg
cmps
cdq
stos
stos
stos
add
push
test
lods
fwait
xchg
or
sar
retf
dec
js
sub
mov
test
(bad)
mov
ins
jo
sub
mov
sbb
jge
out
and
sub
mov
mov
jo
pop
lods
cmp
lahf
cmp
push
pop
jl
and
adc
int
and
in
dec
mov
mov
jno
jns
test
pushf
pop
mov
sub
mov
adc
data16
xor
out
and
and
mov
pop
adc
outs
push
cmps
inc
ficomp
jbe
jo
ss
sbb
sub
fisub
sub
mov
(bad)
mov
xor
mov
hlt
into
pop
loope
lea
pop
(bad)
xchg
(bad)
mov
jecxz
out
stos
out
ss
dec
sbb
mov
call
mov
sub
sub
fldcw
and
adc
ficomp
out
(bad)
(bad)
(bad)
loope
or
dec
ss
jbe
sbb
mov
push
aam
int
mov
xchg
pop
mov
mov
dec
mov
adc
push
inc
loop
dec
fdivrp
xchg
movs
out
or
cmp
and
push
les
js
inc
popf
jb
daa
or
repnz
mov
sahf
je
pop
sub
mov
lfs
out
adc
pop
ds
jg
jg
push
je
fidivr
scas
dec
das
(bad)
mov
push
pop
fwait
leave
inc
adc
cmp
xor
mov
inc
push
in
or
movs
xchg
push
fbstp
sbb
mov
jae
sub
cmps
addr16
jbe
jo
cmp
or
iret
push
jg
out
xor
pop
mov
movs
pop
add
cdq
arpl
test
dec
ja
jecxz
bound
cdq
inc
and
aaa
pop
test
push
pusha
icebp
popa
stc
pop
mov
lock
clc
cmp
mov
add
push
aad
in
xchg
push
mov
xor
movs
leave
dec
xchg
popf
jno
int3
call
repz
ret
and
mov
cli
es
out
cmc
imul
scas
std
daa
add
in
xchg
fnstenv
xchg
inc
pop
out
sbb
add
push
retf
xor
js
dec
push
test
mov
dec
out
add
fstp
pop
inc
push
sbb
mov
cmp
mov
xchg
pop
data16
(bad)
fsubr
lods
lock
xor
push
nop
enter
mov
jno
and
cmc
and
dec
xchg
(bad)
or
lods
loopne
ja
loopne
add
jmp
mov
pop
mov
fidiv
ja
cmp
inc
jns
out
addr16
ficomp
mov
fstp
sub
mov
dec
cmps
(bad)
pop
pop
aam
aad
inc
addr16
sbb
jne
(bad)
fwait
ret
loop
jmp
popf
cli
mov
xchg
pop
out
arpl
into
pop
fcom
mov
pop
sub
mov
jg
das
icebp
dec
jbe
or
lods
pop
sar
dec
sbb
cmp
mov
icebp
and
in
call
jge
fadd
sub
leave
imul
dec
sbb
sub
mov
add
xchg
mov
outs
pop
(bad)
popf
xchg
inc
out
ja
mov
and
(bad)
fiadd
xchg
addr16
mov
clc
data16
out
mov
enter
push
add
(bad)
ret
jns
aaa
xor
in
ins
mov
or
sar
pusha
add
mov
jg
jnp
sub
stc
movups
xor
mov
pop
repnz
stos
mov
xchg
sar
and
pop
push
stos
or
es
jmp
cmp
psubw
adc
mov
lods
(bad)
hlt
(bad)
jmp
(bad)
not
lock
mov
inc
mov
xor
js
push
lahf
jle
xchg
push
inc
retf
ins
(bad)
adc
pop
std
rdmsr
loope
add
ret
pop
or
call
add
ins
inc
lahf
cdq
sti
adc
mov
jno
push
mov
mov
iret
dec
inc
dec
xor
cwde
cmc
dec
xor
xchg
loopne
jp
repnz
pop
lds
movhps
lds
jne
in
out
nop
cld
inc
shl
mov
jge
out
mov
call
out
add
adc
ja
mov
mov
scas
loope
clc
dec
ss
ror
xor
mov
mov
mov
out
out
lea
mov
shl
mov
push
(bad)
(bad)
aad
or
push
retf
loopne
xlat
(bad)
cmp
icebp
mov
(bad)
loope
es
pop
clc
shr
clc
mov
dec
mov
cmp
xchg
inc
out
pop
push
out
iret
idiv
jbe
pcmpgtd
hlt
arpl
cld
int
dec
add
lods
stc
ins
cmp
xchg
dec
lds
cld
int
sbb
cld
pop
mov
popa
lods
mov
popf
pop
out
sub
or
loop
std
fsub
movs
xchg
sub
ins
pop
shr
inc
in
fcmovnb
out
in
icebp
sar
adc
pop
mov
xchg
mov
pop
adc
xchg
test
jnp
rcr
and
xchg
retf
sar
out
bound
stos
pop
adc
lds
adc
and
mov
lea
fs
aam
loope
jb
mov
pop
aaa
push
aad
and
or
ds
jae
pop
fwait
js
test
xchg
fistp
xor
inc
(bad)
sar
arpl
loopne
pop
fisub
mov
es
add
rep
stc
jl
dec
lock
sar
shl
sar
das
in
mov
repnz
lahf
(bad)
or
mov
cpuid
xchg
mov
push
retf
mov
sti
popa
not
rcr
sub
mov
stc
xor
aaa
es
add
mov
sbb
mov
inc
add
mov
dec
mov
mov
jno
dec
xchg
mov
add
daa
ror
and
sub
loope
push
jmp
aam
mov
adc
popf
cwde
mov
mov
pushf
outs
pop
pop
fprem1
outs
jo
adc
cmp
xchg
lds
mov
dec
popa
std
addr16
adc
stos
mov
ret
mov
push
inc
pushf
mov
jb
dec
adc
and
loope
xchg
xchg
or
xor
(bad)
shr
push
mov
xchg
mov
icebp
xor
cmps
(bad)
jns
cmp
and
call
cmp
mov
xlat
jno
lods
lahf
mov
aas
xor
adc
cli
pop
add
addr16
jge
xor
sub
or
inc
add
imul
xchg
leave
(bad)
dec
adc
idiv
mov
sahf
mov
or
retf
or
or
xlat
sub
cs
and
repnz
jnp
cs
or
mov
popa
imul
aam
inc
in
jnp
cmp
fmul
in
xchg
retf
sub
into
loope
xor
lods
fs
add
sbb
mov
out
out
xchg
jnp
cmc
call
and
addr16
leave
imul
add
add
popa
xchg
mov
scas
fsub
adc
lds
(bad)
out
out
xor
ficomp
out
jne
cmp
loope
adc
push
adc
add
pusha
ins
mov
cmps
jg
jb
cli
mov
ins
jmp
scas
pop
(bad)
pop
ja
adc
js
push
clc
arpl
icebp
(bad)
mov
(bad)
cmp
int3
jp
mov
mov
xchg
or
aad
mov
stos
push
loope
fwait
jne
mov
leave
lds
xchg
pop
loopne
or
jns
xchg
je
inc
adc
rol
(bad)
popf
adc
aam
repnz
cdq
jo
ficomp
hlt
add
jbe
mov
inc
push
loopne
call
pusha
adc
mov
and
pop
pop
iret
aaa
inc
(bad)
inc
adc
push
aaa
mov
in
ret
mov
mov
or
pop
mov
and
dec
mov
lahf
pop
push
jnp
jmp
sub
jg
mov
sti
adc
pop
fwait
adc
fisub
sub
retf
add
and
js
pop
(bad)
(bad)
out
scas
sahf
add
add
lahf
scas
repz
ins
test
cmps
sbb
stos
push
dec
dec
sbb
mov
fsubr
popf
mov
push
cmp
jb
(bad)
rcr
push
shl
loope
repz
data16
and
jmp
or
rol
call
test
hlt
pop
jle
lods
push
in
in
call
aaa
out
movs
xchg
and
inc
retf
push
(bad)
xor
dec
pminub
mov
call
xchg
lock
jnp
push
xchg
dec
test
or
(bad)
cld
sub
call
(bad)
pop
pushf
xchg
cli
dec
xchg
or
es
fucom
movs
xlat
int3
cwde
xor
ficom
dec
aad
mov
mov
mov
mov
cmc
stc
arpl
pushaw
mov
sti
mov
cmp
fs
or
mov
inc
mov
cmp
mov
inc
push
cmps
pop
test
pop
mov
adc
push
cmp
je
and
cmp
pop
or
or
inc
xchg
out
sbb
jb
psllq
not
push
(bad)
mov
adc
pushf
xchg
dec
(bad)
fwait
mov
jecxz
mov
lds
jmp
jne
je
add
pop
movs
mov
dec
retf
mov
aas
adc
add
or
or
shl
mov
xchg
ds
test
movs
movs
or
mov
in
aam
mov
call
xor
add
push
cmp
nop
jmp
sub
leave
inc
clc
pop
retf
xchg
dec
xchg
test
dec
adc
mov
pusha
xchg
daa
xchg
dec
add
push
scas
(bad)
push
adc
sub
jle
aam
pop
mov
outs
jmp
mov
fucom
fidiv
ret
mov
sbb
xchg
arpl
pop
cmc
mov
push
ret
in
push
add
jle
lock
in
mov
jmp
mov
and
adc
popa
dec
mov
repnz
push
call
lds
into
and
adc
jmp
jae
rol
test
ret
(bad)
push
and
cmp
test
ins
cwde
pop
pop
adc
or
lods
jecxz
jmp
cmp
test
pop
dec
push
and
push
outs
fmul
fisubr
fmulp
sbb
cli
pop
fwait
in
jmp
inc
xor
and
xchg
xchg
ja
xor
sub
jno
loop
iret
and
test
test
daa
xchg
fcomp
clc
push
add
push
push
sub
add
xchg
push
lock
gs
adc
sub
popa
adc
xchg
or
mov
push
mov
sbb
inc
out
jno
into
test
int3
xor
rcr
xchg
mov
cmp
repz
sub
mul
sub
shl
mov
ins
lock
arpl
cmp
xor
push
shr
mov
jg
and
lock
inc
push
leave
inc
dec
les
imul
and
mov
leave
movs
xchg
lods
fisubr
and
je
jge
cdq
in
js
movs
ja
sub
dec
xchg
ficom
ins
cld
adc
cmp
xchg
mov
and
imul
add
sbb
xor
inc
add
mov
shl
clc
fisttp
cmp
mov
push
inc
pop
jb
ss
push
scas
gs
cwde
pop
xchg
scas
pop
pop
mov
call
push
mov
out
test
sub
std
loopne
sti
mov
cmp
dec
jcxz
inc
dec
out
push
dec
push
add
cmp
scas
loop
xchg
adc
pop
sbb
ret
pusha
and
xchg
adc
dec
cmp
loope
mul
and
imul
mov
dec
ins
sahf
push
pop
jmp
inc
std
inc
xor
mov
jecxz
aad
in
jge
(bad)
(bad)
jecxz
mov
mov
mov
sqrtps
or
call
ret
or
sbb
fisub
fcomp
stos
xchg
das
fcom
int
pop
movs
out
mov
and
mov
aam
stos
aas
repnz
and
jmp
mov
test
jmp
mov
std
jl
cmp
push
cmp
xor
aas
jge
push
rcl
and
xor
mov
icebp
adc
fs
push
gs
adc
inc
imul
or
icebp
or
mov
test
xor
mov
pop
icebp
pop
int3
scas
mov
sub
pop
out
jnp
fbstp
outs
mov
inc
scas
enter
(bad)
shr
xor
rcl
pop
or
test
shl
pop
int
mov
add
ds
jg
inc
ret
adc
loope
dec
(bad)
cdq
xchg
cmp
xchg
jnp
mov
ds
hlt
push
sbb
vsubsd
daa
jnp
mov
or
enter
iret
(bad)
jge
das
jge
sbb
jae
arpl
add
nop
pop
sub
dec
jno
test
cld
pop
js
inc
jle
dec
mov
(bad)
dec
lahf
outs
loope
dec
dec
xchg
cmp
out
popf
mov
jge
xchg
imul
pushf
dec
xchg
outs
pop
jae
mov
out
out
cmp
(bad)
push
jo
and
les
popf
push
aaa
jp
pop
aad
ret
push
stc
test
test
pusha
pop
clc
sub
inc
mov
fbld
mov
mov
rcr
test
or
adc
fwait
jecxz
mov
and
xor
adc
pop
or
add
out
or
pushf
gs
popa
test
addr16
fsub
ror
and
call
les
test
in
xchg
push
adc
or
loop
push
jl
repnz
(bad)
pop
xchg
fwait
rep
and
int3
std
mov
fmulp
iret
popa
jbe
shr
retf
push
or
pop
iret
sub
popa
adc
cdq
lahf
lahf
push
ds
jg
sbb
jbe
rol
cdq
jl
xor
xor
mov
or
sahf
sub
cdq
and
scas
mov
push
jns
cli
add
sahf
push
test
out
test
sbb
call
sub
test
ins
cs
out
cld
leave
xor
(bad)
cmp
ins
sub
xor
fxch
jbe
movs
popf
push
fdiv
sub
mov
out
mov
push
mov
xchg
cmps
sbb
xchg
jecxz
xchg
inc
test
add
push
push
iret
lods
mov
jns
pop
pop
pushf
pop
test
jnp
adc
xor
pop
imul
sub
(bad)
jl
and
imul
mov
add
pop
pop
or
jp
inc
sub
shl
mov
xlat
inc
jae
add
pop
test
lds
pop
mov
mov
fsubp
fld
sub
outs
xchg
out
loopne
in
adc
mov
repz
imul
adc
lock
(bad)
fimul
sub
lods
in
(bad)
xor
sub
out
push
leave
movs
test
xchg
cmc
cmp
test
cmp
inc
jle
xchg
in
sub
jns
add
mov
inc
and
test
sub
dec
and
mov
push
ficom
cmps
xchg
jge
imul
xchg
lea
jge
pop
xchg
fstp
or
pop
xchg
push
sti
xor
aaa
bts
xchg
sbb
cmp
ins
movs
nop
in
pop
mov
or
outs
enter
cmc
or
jno
in
aad
fisub
int3
mov
pop
into
xor
clc
lods
ins
pop
sub
add
xchg
xchg
mov
jecxz
repz
cmp
inc
movs
pop
cld
stos
rcr
clc
and
aam
cmp
fs
or
iret
push
push
mov
fimul
pop
aad
push
or
ret
mov
dec
mov
xchg
push
xor
sbb
icebp
sbb
cmp
jg
sub
popa
mov
out
jb
and
adc
loope
pop
push
adc
es
sub
iret
std
add
mov
push
cmps
in
repz
adc
push
pop
mov
mov
jle
sbb
mov
dec
jo
mov
lods
hlt
into
cmp
pushf
adc
dec
ss
pop
cdq
jbe
push
xchg
outs
scas
mov
mov
arpl
ins
adc
ficomp
push
mov
sbb
cdq
pop
fild
into
xchg
lods
ds
pushf
mov
jno
or
fs
aas
inc
aas
xchg
pop
outs
loopne
cmp
fdivr
inc
inc
mov
jo
fistp
xchg
(bad)
shr
mov
aas
rcr
retf
mov
and
xor
jecxz
cmp
sub
inc
push
jno
mov
call
in
sti
xor
(bad)
push
sbb
iret
mov
pop
clc
shl
loop
fsub
stos
push
mov
pop
jecxz
loopne
ficomp
mov
mul
add
inc
mov
jecxz
retf
mov
fmul
fadd
sar
stos
push
push
ins
imul
mov
aas
mov
push
aaa
movs
shr
push
pop
retf
cmc
sbb
and
dec
mov
mov
mov
push
xchg
jnp
cmps
pop
mov
sub
sub
push
imul
mov
(bad)
cs
repnz
jae
dec
(bad)
and
mov
adc
popf
dec
cld
jbe
addr16
cmp
xor
arpl
in
pop
not
jo
(bad)
arpl
mov
push
nop
mov
jmp
xor
std
and
or
pop
cmc
push
test
in
xchg
cmp
cld
inc
sub
dec
repnz
mov
mov
push
pop
retf
sub
mov
add
test
int
xor
push
push
in
add
xlat
imul
mov
or
and
popa
aam
mov
mov
xor
leave
jp
xor
mov
shl
cli
loope
cmp
cmp
outs
cmp
das
pop
stos
sbb
leave
aad
or
ja
dec
aaa
adc
xchg
repnz
cmp
pusha
or
lods
mov
pop
fnstsw
lea
xchg
dec
sub
mov
lahf
adc
mov
sti
mov
mov
loope
es
pop
out
xbegin
outs
imul
push
ret
fidiv
stc
imul
ret
inc
push
push
aas
adc
jnp
fwait
push
not
inc
gs
xor
loop
push
repnz
mov
lods
mov
inc
inc
lds
outs
inc
mov
das
out
int3
inc
xor
sbb
mov
inc
dec
test
cmc
add
cmps
aad
into
sub
dec
shl
lea
xchg
xlat
out
adc
fs
call
pop
push
out
bts
sub
imul
cmp
push
push
push
ret
jmp
xchg
mov
loopne
or
popa
mov
sbb
mov
scas
cli
paddsb
sub
adc
fsubr
jns
xor
sbb
jbe
(bad)
cmp
test
shr
test
popa
rol
mov
jp
jge
div
hlt
pusha
cmp
mov
(bad)
pop
sub
cdq
inc
sahf
arpl
cmovge
cmps
add
jg
or
pop
pop
sub
dec
mov
cmc
fisttp
das
cmc
sbb
out
cmp
mov
scas
out
icebp
fmul
push
mov
pop
sbb
dec
xchg
cld
loop
pop
inc
rcr
movs
movs
mov
inc
mov
scas
fisttp
inc
jle
or
scas
xor
repnz
xchg
cmp
mov
push
lahf
outs
test
mov
pop
mov
mov
or
pop
out
pop
xchg
shl
fcomp
aad
test
sbb
mov
inc
fstp
daa
clc
in
lock
adc
xchg
frstor
mov
push
outs
dec
or
xor
dec
ret
or
sar
or
xor
out
adc
(bad)
cmp
jmp
in
jo
mov
movs
ret
cli
add
stc
mov
and
(bad)
imul
mov
dec
lock
data16
scas
(bad)
retf
xchg
arpl
fwait
(bad)
stos
int3
jne
ret
lds
sub
test
jle
fiadd
outs
fimul
ss
scas
test
(bad)
cmp
or
sti
mov
test
mov
outs
sub
jecxz
pop
es
pop
push
ror
xchg
push
pop
lock
jo
ins
jnp
adc
fimul
ins
and
gs
cld
sbb
jg
sahf
pop
ret
sbb
jnp
(bad)
mov
push
shr
or
pushf
hlt
rol
mov
sahf
ds
fidivr
sub
(bad)
out
(bad)
mov
test
jae
out
jle
cmp
cmp
ins
adc
dec
cmp
enter
fwait
pop
jo
(bad)
fist
adc
push
jo
push
retf
lock
nop
xchg
and
xor
push
data16
loop
dec
sub
mov
test
cmp
(bad)
jmp
popf
arpl
cld
xchg
call
in
cs
mov
push
xchg
outs
ret
mov
jmp
sti
(bad)
cmp
fadd
out
out
jnp
push
or
fiadd
cli
push
push
rcl
(bad)
push
adc
inc
push
lock
out
inc
adc
loopne
mov
push
retf
dec
mov
repnz
idiv
outs
sub
jno
mov
pop
retf
shr
(bad)
(bad)
sbb
stc
and
aas
dec
jb
cmps
fldcw
add
(bad)
dec
es
lods
jl
mov
mov
mov
aaa
inc
or
out
xchg
fsubp
mov
mov
sub
outs
inc
mov
shl
lds
xchg
pop
iret
out
(bad)
sub
pop
inc
in
adc
mov
xchg
stc
xor
mov
cmp
shr
dec
lds
aad
mov
add
retf
out
mov
std
lahf
xor
pop
leave
add
sub
mov
jb
mov
xchg
pop
sbb
fidivr
mov
pop
or
dec
or
pop
lds
xchg
jp
inc
cmp
hlt
sub
dec
lea
xor
jnp
mov
outs
mov
mov
inc
adc
fist
xchg
icebp
sahf
mov
or
stc
inc
cs
inc
sbb
push
or
sub
pop
sub
dec
icebp
sub
cli
mov
nop
test
cdq
lock
sbb
outs
or
(bad)
mov
pop
sbb
es
fcmovnbe
in
in
jb
jl
pop
mov
pop
xor
dec
leave
pop
int
dec
pop
jb
clc
rol
dec
xor
pop
loop
pop
ss
ror
sbb
xchg
push
scas
fwait
xor
add
pushf
(bad)
mov
out
add
inc
popa
sub
mov
sbb
pop
pop
(bad)
retf
xor
retf
mov
cmp
jne
pop
cmp
sbb
jns
dec
retf
pop
repz
hlt
cwde
mov
cwde
xchg
stos
bound
nop
bound
mov
mov
retf
push
sub
cmp
not
rcr
imul
xchg
jecxz
mov
sbb
retf
hlt
inc
cmp
aam
inc
es
aas
out
jns
fstp
push
sbb
xor
mov
add
imul
mov
or
dec
stc
test
mov
fs
loop
adc
(bad)
sub
mov
push
adc
add
adc
adc
sbb
mov
cmp
icebp
ror
and
imul
xchg
fstp
sbb
adc
mov
mov
aad
js
pop
f2xm1
xor
aaa
in
dec
xchg
inc
dec
inc
(bad)
(bad)
lahf
push
add
into
xchg
inc
fwait
pop
nop
in
cmp
add
hlt
leave
jne
jo
jae
cmp
in
lahf
sub
ret
movs
jp
mov
fwait
jmp
mov
out
mov
dec
imul
sub
or
and
and
ror
mov
sbb
mov
int3
cld
xor
push
pusha
xor
and
mov
pushf
(bad)
adc
std
mov
fdivr
cmc
xor
xchg
jno
or
mov
add
fincstp
add
inc
cmp
dec
pop
cmp
pop
mov
rol
xchg
repnz
in
or
dec
and
jp
push
mov
adc
or
sbb
cmps
ja
dec
and
jo
and
or
push
loopne
imul
push
pop
mov
and
sub
in
aad
call
pop
xor
or
mov
or
pop
push
daa
imul
dec
sub
sub
call
pop
push
mov
(bad)
jmp
out
push
mov
push
xor
pushf
mov
in
jbe
xor
jecxz
(bad)
xor
sub
aad
jmp
add
stos
dec
in
inc
cmp
mov
cmc
sub
jo
retf
adc
aad
jbe
popa
ins
in
add
cld
add
lods
mov
jmp
cld
mov
sub
imul
dec
push
push
push
dec
jns
mov
movs
cmps
mov
add
sar
daa
jle
pop
jb
adc
int3
popa
movs
(bad)
lods
sbb
sub
pop
stos
(bad)
jo
pop
aam
std
daa
dec
out
mov
pushf
xchg
sar
sti
sbb
cwde
adc
lods
daa
pop
adc
sbb
adc
lea
aam
jne
push
mov
retf
repnz
imul
add
jecxz
mov
cmp
cld
cmp
mov
mov
cmp
pushf
push
fimul
jns
xchg
pop
xor
pop
mov
pop
xchg
iret
pop
inc
cld
stos
packuswb
xlat
aad
fstp
xlat
enter
sub
loopne
out
mov
fs
inc
push
in
ins
adc
dec
xchg
test
test
ja
outs
in
es
mov
mov
dec
iret
mov
mov
add
mov
adc
pop
ins
shr
inc
or
sbb
mov
xchg
inc
add
addr16
dec
sbb
ins
mov
mov
ss
inc
mov
lahf
psubsb
rcr
fcmovb
in
sub
repnz
dec
adc
or
cdq
maxps
sub
test
adc
jnp
call
sahf
fwait
dec
ins
add
add
and
or
jmp
add
inc
jno
xchg
dec
retf
or
out
push
push
and
sub
push
retf
sbb
jb
not
mov
rcr
inc
jmp
mov
xor
xchg
leave
fsubr
cmp
call
dec
ror
mov
ins
push
cmp
xchg
ins
cmp
pop
dec
mov
add
fchs
popa
popf
in
pushf
aaa
mov
mov
into
in
sub
loopne
mov
mov
mov
jns
add
push
push
jae
ret
jmp
pop
cmps
mov
pop
das
ret
aam
or
or
shl
(bad)
sbb
push
xchg
dec
out
mov
mov
ret
lods
add
out
popa
push
mov
pop
stc
cmps
call
xor
(bad)
out
cld
in
or
cli
adc
mov
sbb
pop
das
fwait
mov
push
out
repz
enter
adc
scas
jnp
sbb
sub
inc
outs
stos
jbe
jg
mov
inc
test
cmc
jecxz
ret
adc
dec
in
sbb
push
xchg
dec
mov
test
ds
movs
fistp
xor
mov
mov
mov
daa
inc
xor
sub
cmp
call
mov
movs
inc
aad
add
jmp
dec
loop
jge
outs
daa
(bad)
mov
push
stos
push
xor
mov
aaa
and
add
ret
xor
sar
or
int
lods
arpl
mov
adc
cmp
push
and
mov
iret
aaa
sbb
jl
test
ror
lock
cmps
iret
das
or
sbb
arpl
xchg
test
mov
mov
(bad)
leave
iret
int
imul
fwait
outs
popa
mov
int
sub
mov
add
test
pmaxub
sahf
pop
jge
sub
add
icebp
lea
int
imul
adc
mov
or
stos
adc
das
push
xchg
ret
fbld
sbb
rcl
imul
call
rcl
cwde
sbb
and
std
mov
mov
sbb
bound
mov
idiv
jp
iret
pop
es
outs
out
ret
push
jnp
add
js
push
xchg
sub
icebp
inc
cdq
or
mov
xor
jno
adc
(bad)
je
ins
jns
adc
in
cmp
and
imul
sub
fwait
rcr
push
ror
pop
mov
rcl
sti
stos
not
js
aas
jle
sub
dec
rcr
mov
call
ret
xor
sahf
mov
mov
and
dec
ja
xchg
inc
and
es
fcomp
enter
mov
popf
imul
add
pop
mov
or
sahf
test
or
int
rcl
adc
push
sbb
inc
sub
loope
jge
leave
cwde
sbb
mov
inc
out
fsubrp
(bad)
mov
jg
pop
jp
and
lods
mov
std
in
add
add
pusha
or
aas
sub
and
adc
aad
xor
in
test
and
cld
push
lods
mov
dec
je
jno
jle
fwait
loopne
jnp
clc
hlt
mov
outs
lock
xor
or
mov
pop
ror
jecxz
mov
mov
adc
sub
jmp
sbb
fcmove
push
int3
sbb
jnp
data16
jmp
xlat
pusha
push
cmp
push
mov
mov
fmul
shr
xchg
jg
push
ror
arpl
push
mov
lock
imul
aad
div
push
ret
idiv
adc
loop
or
sbb
adc
adc
fimul
outs
(bad)
loopne
mov
add
pop
adc
outs
fucomi
mov
enter
dec
in
dec
xor
fidivr
lahf
xor
cdq
cmc
or
addr16
inc
mov
cmc
sbb
repz
icebp
stos
ret
cmp
aaa
mov
push
xor
aaa
sub
out
movs
dec
sub
fs
push
sbb
cmp
lods
adc
shl
dec
fadd
and
lea
in
adc
out
inc
(bad)
out
inc
(bad)
mov
jle
cld
sub
xor
loopne
add
(bad)
mov
push
adc
(bad)
iret
je
or
ret
(bad)
cmp
adc
(bad)
mov
push
mov
inc
sbb
inc
xchg
cmp
fldenv
jp
loop
jmp
ds
xchg
push
(bad)
in
or
mov
cmc
sar
(bad)
and
fs
scas
xchg
jnp
jp
jl
call
inc
stc
push
mov
mov
cmp
daa
ss
aaa
or
dec
inc
mov
nop
pop
test
push
inc
lahf
sub
jae
xchg
aas
push
pop
(bad)
push
int
push
pop
movsx
mov
in
jo
stos
jb
or
mov
stos
pop
lds
int
mov
mov
sub
push
mov
neg
dec
jmp
and
neg
jnp
fidiv
out
inc
mov
fcomp
imul
gs
retf
xchg
retf
sub
into
or
ds
push
jg
inc
or
sbb
scas
and
push
das
xchg
leave
and
dec
jne
stos
fwait
stc
cwde
push
dec
sbb
add
data16
outs
loop
int3
add
fidivr
push
push
xor
pop
mov
pop
cmp
push
mov
xchg
mov
push
add
cmp
out
adc
je
cmps
mov
sub
inc
sahf
mov
mul
or
dec
pusha
call
ffree
jmp
mov
push
cmp
pop
arpl
jne
mov
and
lds
push
movs
mov
push
retf
ins
xchg
jle
ja
cdq
mov
inc
sub
loop
jnp
dec
push
fld
xchg
xor
push
mul
call
xchg
jp
xchg
push
pop
repnz
out
(bad)
out
cmovbe
mov
pop
stos
xchg
sub
lahf
or
imul
cld
jno
aas
push
and
add
pop
popa
push
cmc
cmp
imul
xor
imul
sahf
je
cdq
fsubr
dec
ret
ret
adc
out
xor
rcr
inc
popa
inc
add
dec
pop
jbe
rcr
inc
mov
inc
ja
jl
mov
(bad)
or
pop
mov
clc
out
add
inc
or
ins
xor
push
xchg
jb
in
inc
mov
(bad)
push
in
pop
inc
mov
pusha
cdq
test
mov
leave
sbb
mov
call
sub
push
sti
or
or
or
push
out
xchg
gs
pop
mov
int
mov
(bad)
sub
push
aas
mov
adc
sub
in
scas
cmp
sbb
cmp
fs
fs
push
sahf
sti
dec
ds
xchg
jb
or
pushf
cli
daa
sub
cmps
stos
xchg
mov
mov
pop
sbb
(bad)
call
push
push
mov
jmp
popf
xor
jno
and
in
sbb
aaa
aas
test
sbb
fisttp
fldcw
adc
push
int3
xchg
mov
xchg
mov
dec
push
inc
in
mov
dec
sub
cmps
mov
mov
ss
pusha
rol
not
sbb
push
test
loope
adc
cli
out
or
test
add
sub
mov
arpl
(bad)
xchg
mov
xchg
pushf
jecxz
sahf
out
fidiv
xor
mov
out
das
cmp
xor
mov
(bad)
xor
push
mov
iret
mov
xchg
push
loop
call
mov
pop
push
fiadd
mov
scas
sti
inc
adc
and
inc
not
push
or
mov
test
mov
push
mov
shl
push
not
mov
into
push
mov
xor
or
sar
jnp
or
rcl
pop
sub
inc
jmp
call
scas
sub
les
sub
pop
or
push
in
add
(bad)
dec
mov
fldln2
jo
retf
cs
sbb
cmp
movs
mov
xchg
or
mov
xlat
cmp
push
call
mov
stos
sub
(bad)
in
mov
dec
mov
xlat
outs
xor
and
push
inc
add
xor
sti
inc
cmp
mov
(bad)
in
ja
or
xor
inc
popa
pop
xchg
lds
jmp
adc
cmps
mov
mov
push
cld
sbb
in
imul
outs
inc
sbb
clc
loopne
in
(bad)
(bad)
sub
mov
in
rcr
imul
cmc
add
fwait
push
int
mov
(bad)
adc
fwait
mov
or
lods
xchg
cmps
dec
sar
clc
inc
ss
add
inc
jmp
add
aam
ds
xor
sbb
inc
fs
inc
mov
call
rol
xlat
mov
or
pop
test
nop
in
retf
add
das
shl
ja
adc
jnp
adc
xchg
(bad)
jecxz
push
push
xchg
call
sub
js
leave
add
popa
iret
dec
mov
fwait
pop
xor
mov
jle
sti
sbb
(bad)
(bad)
mov
mov
div
sti
test
ja
or
pop
adc
ins
mov
retf
dec
add
inc
mov
jae
xchg
aaa
mov
shr
stc
jle
adc
pop
movs
arpl
xchg
pop
mov
ins
or
cmp
shl
sbb
mov
popf
test
rol
jle
jnp
add
iret
fprem1
std
pop
sub
adc
mov
call
movs
dec
jmp
mov
sub
mov
jno
and
mov
mov
je
fld
push
call
mov
jmp
nop
xchg
scas
push
sahf
clc
in
mov
jmp
test
scas
in
fld1
jmp
lea
daa
xor
add
ins
fsubr
xchg
cmp
dec
lods
mov
or
inc
fnstenv
rep
adc
out
enter
out
or
loope
es
mov
(bad)
mov
fiadd
in
push
js
fidiv
mov
mov
mov
mov
sti
inc
test
inc
pop
inc
mov
cdq
inc
pop
or
std
cs
jecxz
cmp
or
jae
sub
or
pop
inc
push
nop
daa
pop
cld
leave
pop
pop
out
jnp
or
or
ret
test
or
xchg
(bad)
xor
ret
mov
mov
fnstcw
sbb
push
mov
sub
retf
cmp
out
in
loope
jae
inc
fs
sbb
leave
xor
and
xchg
mov
add
pop
and
icebp
or
adc
pop
sbb
add
popa
out
int
pandn
dec
sub
ds
out
hlt
xchg
mov
push
popf
(bad)
cmp
aad
jae
shl
jns
push
pusha
fld
ret
jmp
jmp
mov
sub
arpl
dec
sahf
test
scas
xchg
xchg
jmp
loope
jo
sbb
int3
inc
rcr
call
fdiv
or
xchg
cdq
stc
pop
in
cs
and
xor
rol
push
mov
cmp
add
xor
jg
mov
fild
xchg
cmps
bound
add
ins
pop
pusha
adc
popa
pop
mov
lods
(bad)
cmp
call
ja
and
dec
jo
imul
lahf
push
test
inc
add
arpl
dec
jle
xor
xchg
mov
mov
ret
cmps
xchg
fdivr
pop
push
xchg
ficomp
std
les
ins
sub
jno
sbb
mov
push
stos
ret
xor
pushf
mov
(bad)
jo
sbb
sub
push
cdq
xor
pop
test
ret
idiv
mov
outs
aaa
sti
jbe
mov
in
sar
cmps
out
sbb
daa
in
add
dec
lea
lock
mov
push
ss
pop
dec
sbb
cld
adc
jbe
out
cmp
(bad)
(bad)
mov
fisubr
mov
ss
in
add
jl
mov
cmp
adc
in
daa
int
inc
cmps
cmps
repnz
mov
std
pop
inc
loop
mov
(bad)
xchg
inc
push
pop
pandn
aad
add
push
xchg
leave
(bad)
out
cmp
pop
sahf
or
je
push
mov
fst
lods
mov
inc
mov
mov
cmp
jle
std
adc
push
cdq
pop
inc
inc
xchg
cmp
popa
std
stos
or
stos
cwde
lock
popf
daa
mov
mov
push
(bad)
cs
pop
(bad)
adc
movs
jge
popf
push
inc
rcl
ins
add
xor
jbe
cmp
and
xchg
shl
add
leave
fsub
pushf
push
loop
xchg
int
imul
inc
inc
xchg
mov
push
aas
stos
mov
test
jmp
std
lock
jg
xor
mov
(bad)
cli
lock
jge
sub
or
push
in
jae
jp
push
pop
test
sub
jne
in
push
inc
hlt
jne
sub
(bad)
and
ret
sub
retf
inc
xor
mov
mov
jne
push
stos
mov
fcmovbe
repnz
lock
pop
adc
dec
inc
inc
lds
mov
lahf
inc
jmp
fwait
cmps
and
push
sar
cmc
(bad)
fsubr
enter
xchg
sbb
add
gs
or
mov
push
sub
push
jnp
mov
pop
mov
std
stos
mov
cmps
pop
mov
arpl
adc
icebp
mov
lods
add
cmps
and
popf
iret
or
lock
pop
int
xlat
retf
popf
push
add
(bad)
jb
and
(bad)
cld
(bad)
stc
push
sar
push
fbstp
(bad)
mov
push
add
daa
xor
outs
jnp
es
mov
iret
lock
jle
sbb
mul
push
pop
pop
pop
sub
daa
mov
pop
or
sbb
and
mov
(bad)
adc
ins
scas
or
call
aas
jns
lds
mov
outs
mov
std
shl
adc
sbb
adc
mul
imul
aam
add
cmc
out
mov
ret
jb
xchg
jmp
adc
push
out
inc
fisubr
lods
jmp
enter
sub
cmp
push
sub
mov
push
push
adc
inc
vmovhps
sahf
cmps
fscale
dec
enter
ins
xchg
jecxz
cli
mov
xor
retf
repnz
jecxz
cmps
cmp
shl
inc
xor
fisttp
pop
mov
xor
mov
cmp
push
mov
dec
xchg
into
sub
mov
or
mov
int3
mov
loopne
mov
push
fst
inc
mov
data16
retf
cmp
xchg
push
movs
aad
popf
sub
jge
xchg
and
sub
int
push
mov
mov
hlt
mov
jmp
pop
jmp
fwait
int3
lea
in
dec
neg
out
daa
sub
enter
and
das
push
mov
cmp
shl
pop
add
or
es
xchg
into
mov
lahf
imul
mov
gs
jae
cmps
mov
mov
cvtps2pi
pop
std
je
outs
sbb
mov
push
fsubrp
ror
loop
dec
cmp
xchg
je
jl
dec
aam
mov
xchg
cmp
lods
repz
jmp
jg
div
loope
xchg
xor
mov
ss
add
lock
xor
fstp
xchg
mov
repnz
and
mov
(bad)
adc
sbb
stos
enter
ja
push
sti
lea
loope
call
or
ret
iret
pop
cmp
sub
sbb
xor
xor
movs
push
repz
shr
inc
add
cmps
push
out
leave
cdq
loop
into
mov
dec
cli
movs
(bad)
rcr
jnp
xchg
js
mov
xchg
jp
in
icebp
xlat
ror
(bad)
sbb
mov
cmps
fimul
jge
daa
dec
and
push
sti
cmp
ins
out
jnp
xchg
pop
mov
out
repz
push
in
push
xor
jp
jno
push
mov
fmul
dec
mov
xchg
xor
and
mov
fsub
cmp
(bad)
mov
jg
cmp
js
(bad)
sub
movs
(bad)
rcl
sub
cmp
adc
arpl
mov
arpl
xor
sbb
pop
sti
out
mov
jecxz
inc
das
adc
gs
push
shl
out
pop
add
hlt
js
ret
imul
aad
in
out
sbb
(bad)
mov
push
pop
xor
mov
mov
loop
adc
sub
adc
ins
enter
adc
jmp
jno
cmp
aaa
scas
cs
cmp
fldl2e
mov
sbb
pop
pop
pop
adc
push
lock
ss
stc
pop
dec
cmp
(bad)
cmp
jmp
jbe
gs
push
jo
cmp
popf
push
ret
mov
sbb
jmp
das
adc
call
das
test
cmp
sbb
repnz
shr
(bad)
mov
bound
arpl
or
stos
cmps
xchg
jnp
fs
cwde
adc
xor
jns
push
sahf
add
(bad)
jle
dec
aam
(bad)
mul
cmp
lahf
pushf
pusha
fist
pop
imul
js
lods
cmp
cdq
shl
dec
sbb
add
cmps
mov
imul
ret
lahf
cdq
sub
dec
popa
lahf
jne
scas
int3
push
stc
out
pop
out
push
sbb
xchg
arpl
(bad)
loope
rol
(bad)
fmul
mov
jecxz
repnz
pop
icebp
mov
fisttp
daa
jne
xchg
xor
dec
cli
(bad)
adc
call
sbb
cmps
sbb
cmp
aad
stos
into
sar
cs
dec
shl
lock
mov
push
data16
pop
jl
icebp
frstor
sub
sub
mov
pop
sbb
stos
and
cs
inc
jne
(bad)
repnz
adc
jae
jmp
inc
inc
push
in
into
scas
push
push
dec
or
mov
clc
arpl
aaa
in
mov
(bad)
sbb
jo
ficomp
addr16
retf
addr16
pushf
or
call
sbb
and
pop
or
(bad)
cmp
ret
inc
inc
shl
mov
sbb
jle
inc
inc
sub
addr16
or
jle
arpl
cmp
sub
xor
mul
clc
or
mov
sub
retf
movs
loope
lock
mov
sbb
lods
cmp
sahf
arpl
or
cmp
add
pop
jecxz
dec
jae
adc
add
mov
push
pop
add
scas
push
neg
je
jae
icebp
add
aaa
dec
imul
imul
xchg
mov
icebp
not
lahf
cmps
pop
add
scas
int
addr16
xchg
imul
imul
add
lods
repnz
sub
fmul
xchg
jbe
rcr
adc
test
inc
shl
pop
xchg
cs
push
mov
xor
loope
fnstsw
test
lahf
jb
outs
es
cmp
and
es
sub
inc
jae
mov
jmp
test
pop
fnstenv
stos
repnz
(bad)
mov
add
(bad)
aad
sbb
in
pop
mov
ins
jecxz
stos
test
popa
jge
xchg
push
nop
xchg
pop
or
add
out
xchg
mov
sti
int3
outs
stos
loope
mov
jno
sbb
inc
mov
shl
sahf
sbb
jmp
inc
out
jmp
xor
dec
sbb
aam
cwde
call
je
sub
jb
inc
cmc
and
xor
inc
lock
xor
jno
or
out
fmul
bound
pop
test
cli
mov
inc
mov
push
mov
iret
stos
or
mov
(bad)
dec
sub
test
sub
mov
pop
ja
pop
inc
sub
jno
fwait
mov
retf
int3
js
inc
cld
fisttp
cmp
repnz
lds
fidiv
jecxz
cli
lods
in
xchg
pop
push
lea
sbb
retw
lock
ret
int
inc
cld
pop
rcr
xor
loope
inc
(bad)
mov
aas
fldcw
iret
mov
(bad)
pop
out
fstp
and
stos
shl
mov
out
shl
sbb
mov
cmp
ror
sub
in
leave
add
add
fdiv
push
dec
fldenv
test
hlt
sbb
pop
shl
push
gs
les
sbb
dec
(bad)
imul
pop
pop
inc
jl
outs
pop
pop
sub
xor
fild
or
adc
sub
inc
scas
adc
mov
js
jmp
push
xlat
arpl
pop
push
xlat
(bad)
clc
or
xchg
xchg
inc
inc
(bad)
inc
dec
cmp
int3
loop
inc
mov
jnp
mov
mov
cmp
mov
es
ins
std
rcr
jp
call
or
and
cdq
mov
sbb
xlat
or
bound
inc
(bad)
jmp
mov
jle
push
ficomp
jg
inc
(bad)
mov
sub
sub
ret
mov
jle
push
rol
jno
icebp
loope
out
jno
xchg
adc
fidiv
sub
push
cmp
adc
push
xchg
mov
mov
adc
pop
add
adc
xlat
or
sub
push
dec
ret
inc
dec
pop
movs
bound
mul
mov
(bad)
ror
dec
mov
mov
(bad)
and
test
mov
mov
iret
mov
jmp
inc
pop
push
add
or
add
test
jle
push
in
(bad)
mov
not
xlat
sbb
inc
jno
shl
cmp
repnz
out
sbb
xor
pop
pop
rol
mov
xchg
arpl
inc
push
adc
(bad)
adc
stos
fisttp
sbb
pop
inc
mov
mov
mov
outs
jmp
mov
aad
sub
mov
or
lods
in
cwde
jge
jmp
je
mov
addr16
sbb
fnstenv
add
jecxz
movs
xchg
clc
shl
fwait
enter
mov
jmp
dec
in
push
jbe
aam
push
jne
jae
stos
bound
ret
fwait
rcr
cli
in
and
fsubr
test
xchg
sahf
repnz
shr
ja
cdq
cwde
push
mov
int
push
in
fst
dec
pop
and
in
fst
outs
sbb
aam
js
jbe
xchg
sub
mov
xchg
and
dec
ja
push
in
in
sub
int3
fs
jl
popa
aas
call
mov
in
inc
mov
jns
add
hlt
sub
test
aaa
pop
mov
pop
arpl
lds
sub
pop
fidivr
or
push
clc
sub
cmp
pop
dec
fs
adc
pop
mov
and
mov
jae
push
(bad)
lock
pop
shl
mov
enter
inc
push
and
or
dec
add
outs
aam
mov
xchg
cli
(bad)
call
into
rcl
sbb
call
push
adc
jp
popf
mov
ins
inc
dec
cdq
jbe
scas
es
xchg
and
dec
shl
jecxz
push
pop
rol
or
pop
or
mov
mov
push
adc
fadd
pop
inc
jge
mov
and
xchg
adc
cdq
fidiv
int3
add
mov
cmp
jecxz
aaa
out
jae
popa
test
cmc
not
cdq
add
sub
nop
in
sub
push
jmp
lock
dec
retf
adc
cwde
push
mov
pop
push
mov
mov
das
leave
jns
xor
and
cwde
pop
das
jnp
pop
loopne
adc
push
mov
add
retf
cmc
int
outs
jle
addr16
and
nop
inc
call
inc
hlt
fmul
ss
retf
cwde
ret
push
mov
and
xor
out
cli
pop
sub
pop
xchg
in
cmc
inc
popa
mov
(bad)
jl
fisubr
movs
push
sub
mov
mov
mov
mov
arpl
jge
sbb
dec
xor
mov
cmp
adc
cmp
lock
inc
sub
in
lods
in
dec
add
sbb
push
sbb
pop
fadd
inc
pop
mov
out
inc
adc
ja
imul
sar
jge
sub
push
jno
je
or
into
(bad)
adc
and
and
push
outs
jp
cmc
mov
jg
adc
nop
nop
jne
call
fild
loop
mov
sbb
xchg
adc
xor
or
jp
lods
sub
add
mov
or
mov
sbb
nop
and
or
or
cwde
fwait
test
cmp
or
nop
add
push
sub
or
or
lds
push
jp
and
popf
gs
call
jl
pop
sti
adc
lock
cmp
adc
jbe
mov
cmc
cmps
mov
fcmovnbe
mov
or
(bad)
dec
rcr
pushf
cmp
pop
popf
push
cld
jnp
add
jge
jp
das
xor
addr16
jmp
cmc
mov
test
dec
xchg
xor
and
or
es
sbb
scas
adc
cmp
test
xchg
data16
push
std
mov
es
add
enter
ss
in
inc
pop
lods
dec
shl
push
sub
pop
jp
test
inc
or
pop
daa
js
cmps
dec
out
dec
mov
outs
cmps
mov
jge
mov
cmps
jle
imul
out
repnz
mov
cmp
inc
cdq
mov
inc
iret
sbb
outs
fnsave
sbb
out
jns
cmps
loopne
jle
xor
jl
pop
fimul
sar
mov
cmp
jecxz
or
dec
inc
xor
sbb
addr16
jle
or
aad
mov
xchg
mov
push
scas
fs
and
fmul
loope
fadd
inc
mov
retf
jp
sub
mov
retf
mov
mov
aaa
lds
cdq
stos
shl
add
and
inc
ins
xor
push
mov
leave
daa
sbb
fwait
mov
jb
ret
repnz
push
ret
rol
or
jns
or
sbb
mov
test
out
inc
sahf
int
jbe
inc
cmp
ficom
inc
sbb
int3
adc
lds
mov
lock
xchg
popf
out
in
mov
jbe
mov
aaa
xor
adc
push
mov
or
xor
sbb
mov
cs
mov
push
stos
jg
dec
bound
scas
push
imul
pushf
xor
addr16
cmps
ret
mov
mov
ss
outs
push
mov
leave
and
mov
imul
pop
push
jmp
in
rol
xor
movs
in
pop
dec
(bad)
call
or
pop
loop
or
sbb
xchg
rcr
and
jg
sbb
cmp
jle
stos
sbb
int
mov
into
mov
pop
inc
xor
(bad)
mov
jecxz
pop
std
mov
adc
fwait
dec
push
movs
out
movs
mov
cmps
cmp
sar
mov
ins
cmps
mov
or
sbb
cmps
out
and
adc
or
shr
mov
aas
jne
scas
addr16
push
mov
pop
fsubr
adc
inc
mov
fdivp
pushf
scas
jb
dec
lock
sub
xchg
cdq
xchg
xchg
cmc
cmp
ja
imul
fld
sbb
cmp
leave
mov
jo
(bad)
movs
inc
and
cli
dec
xchg
push
or
mov
retf
fiadd
jae
cmc
repz
inc
mov
bound
les
jnp
movs
push
idiv
push
popf
sahf
inc
dec
jge
repnz
ds
adc
test
data16
push
mov
jno
pop
adc
fsubr
pusha
and
outs
je
out
xchg
(bad)
lea
movsx
int
mov
aaa
lea
push
in
mov
shr
push
xchg
mov
in
mov
pop
lods
sub
xchg
sub
sub
cmc
jmp
xor
adc
ror
mov
pop
lods
ds
movs
xchg
or
jecxz
push
mov
jmp
sub
cmp
ins
test
mov
and
mov
lea
scas
jmp
cs
mov
movq
and
add
sbb
fnstcw
fsubr
xor
sbb
mov
lock
mov
inc
out
push
iret
push
cmc
fist
jg
lock
xchg
jno
mov
xchg
je
loop
mov
jmp
ret
(bad)
dec
dec
(bad)
test
ret
fsubr
aad
ficomp
add
or
ret
hlt
aas
mov
call
push
pusha
or
mov
daa
cmp
jo
loope
pushf
or
jle
and
sub
xlat
jg
mov
sub
shr
sbb
cmp
xchg
div
cdq
push
mov
je
lahf
fdivr
jmp
ret
mov
jle
sar
call
jmp
outs
and
rcr
fild
and
add
je
jg
adc
sub
fst
jg
retf
ins
cld
xchg
js
pop
and
sahf
rcl
or
jb
inc
sub
xchg
mov
clc
adc
ret
sar
xor
xchg
sub
or
aam
aaa
inc
inc
xchg
push
pop
in
iret
add
repnz
popf
sub
retf
xchg
sti
(bad)
out
mov
iret
imul
daa
hlt
shl
and
inc
jno
sbb
(bad)
(bad)
adc
das
repnz
adc
outs
sub
lds
(bad)
outs
imul
sbb
int
jae
jp
pop
jg
pop
stc
in
idiv
cmps
jmp
and
paddsw
lods
dec
cmps
pop
cmps
fld
int
jge
je
or
xchg
adc
adc
das
adc
xchg
sbb
fsub
popf
xlat
je
fidiv
sbb
xchg
stos
mov
inc
into
lahf
sub
cmp
dec
hlt
xchg
pop
cwde
in
jo
mov
cld
add
mov
stos
sbb
popf
daa
ins
dec
add
out
add
mulps
dec
cmp
dec
movs
cmps
cli
out
or
cmps
jmp
sbb
jo
retf
mov
xor
add
mov
sbb
mov
or
pop
mov
mov
ss
jmp
xor
rcr
or
leave
or
cmps
mov
jg
stos
fldenv
adc
jmp
pop
pop
lods
out
and
sbb
add
sbb
cmp
xchg
push
repz
adc
jge
push
jg
movs
inc
inc
jle
clc
test
lods
hlt
push
outs
xchg
sbb
jmp
mov
stos
ret
xchg
sub
inc
outs
cdq
lods
sub
adc
iret
add
outs
(bad)
ins
popa
sub
add
dec
dec
mov
enter
movs
cwde
mov
or
or
xor
cld
not
pop
lea
lock
push
rcr
push
mov
into
(bad)
pop
stos
mov
push
push
cmp
out
mov
mov
sahf
(bad)
jo
sub
ficom
ins
sti
pushf
mov
jge
or
mov
ins
xor
cs
scas
sti
add
imul
and
leave
sbb
std
push
ins
fsub
hlt
stos
inc
aad
xor
shl
and
mov
movs
jo
and
lods
mov
scas
sti
imul
push
jl
jecxz
inc
jno
sbb
jae
pop
inc
cmp
stos
inc
inc
pop
leave
(bad)
daa
mov
pop
call
pop
push
shl
(bad)
push
adc
inc
not
xor
out
aaa
enter
and
(bad)
rol
and
fstp
loopne
cmp
and
adc
fcomp
xchg
jne
das
jmp
fisub
icebp
sahf
cmps
and
cmps
fwait
push
inc
or
xor
call
lahf
shl
retf
or
sub
push
and
ss
adc
aaa
hlt
dec
imul
or
test
add
repnz
xor
in
or
dec
dec
jg
fwait
inc
dec
cvtps2pd
(bad)
mov
jl
cmp
xlat
ret
fstp
jecxz
or
scas
mov
lahf
sahf
es
jmp
or
mov
mov
or
or
inc
int3
or
and
cmp
sbb
lahf
sbb
inc
cmp
out
mov
enter
mov
out
cmps
mov
in
pop
xor
nop
clc
stos
and
inc
adc
das
jne
and
inc
ja
mov
and
cmp
sub
inc
dec
bndstx
sbb
icebp
lock
mov
push
dec
dec
out
jge
inc
cmps
inc
mov
(bad)
sbb
iret
scas
call
call
mov
jno
es
pop
dec
or
js
not
cmp
xor
outs
sti
dec
call
test
adc
jnp
pop
hlt
cmp
call
test
and
sbb
dec
ror
adc
lahf
pop
mov
data16
loope
add
or
mov
adc
ret
(bad)
xchg
add
mov
add
mov
popa
pop
xor
call
mov
mov
mov
mov
push
and
mov
fsub
std
jge
add
in
mov
daa
aad
or
push
call
add
jmp
sub
dec
or
xchg
outs
add
jne
or
dec
mov
or
push
jg
xchg
dec
pop
addr16
imul
(bad)
push
add
pop
adc
mov
es
pop
(bad)
jnp
movs
jae
out
fnsave
cld
or
jge
out
inc
mov
test
push
ret
bound
daa
cmp
xchg
mov
pop
test
daa
fist
stos
std
sub
movs
jmp
push
ja
inc
sub
or
les
xchg
adc
adc
dec
fs
fistp
jge
add
add
ret
jbe
jbe
das
popf
in
mov
mov
and
pop
into
ds
gs
loope
and
mov
and
or
sbb
xchg
cmp
popf
fidiv
cmp
cmp
std
add
in
ds
dec
xchg
bound
scas
ds
dec
outs
aas
push
cmp
mov
test
shl
jns
je
mov
jmp
sbb
aad
mov
pop
or
mov
imul
mov
jecxz
jmp
cmps
push
add
ins
adc
div
outs
fbstp
frstor
jnp
int
jmp
data16
pushf
outs
sahf
call
cs
test
movs
add
jmp
mov
xchg
repnz
jmp
sbb
movs
lahf
inc
fisttp
cmp
jae
enter
arpl
ins
xchg
push
imul
and
pop
inc
repz
jp
push
push
sub
shr
cwde
mov
cmp
push
ds
inc
dec
fldenv
pop
pop
add
imul
ins
ja
jle
xchg
std
(bad)
leave
add
das
aaa
lock
stos
ss
retf
jl
push
or
and
jo
ror
jno
mov
or
cmp
repz
(bad)
or
xchg
mov
xchg
xchg
cli
daa
mov
leave
dec
popf
pop
xor
mov
out
les
pop
repnz
push
pushf
sub
jge
and
pushf
dec
sbb
(bad)
js
test
cmp
out
sub
loope
aad
out
inc
sahf
mov
mov
xchg
enter
fucomip
sbb
jp
mov
pop
or
dec
setns
inc
loope
jo
js
sub
lods
jge
out
(bad)
aam
add
loop
mov
sbb
or
and
dec
xor
hlt
inc
js
movs
add
adc
jp
jmp
les
into
cmp
inc
sahf
pop
das
stos
(bad)
fwait
mov
sub
gs
xchg
cmp
nop
jo
fidiv
cmps
sahf
push
scas
test
mov
(bad)
ins
xchg
enter
ror
cmp
xor
push
(bad)
push
mov
sub
dec
dec
movs
xchg
xchg
pop
leave
call
jmp
dec
xor
std
arpl
mov
xchg
jns
aaa
push
ds
mov
xor
fild
fist
das
xchg
jg
out
xor
or
push
xor
jge
jbe
mov
mov
inc
je
inc
push
push
hlt
lds
mov
leave
dec
in
and
(bad)
push
mov
mov
call
jge
mov
(bad)
fist
pop
mov
mov
out
mov
jae
cmp
loope
cmc
xchg
xor
push
daa
mov
pop
adc
js
pop
clc
scas
jno
inc
dec
pop
mov
jno
lods
pop
jbe
mov
and
jo
ins
shr
inc
adc
fst
sub
ret
jmp
push
pop
cmp
shl
sbb
idiv
sub
iret
and
dec
xchg
sub
arpl
iret
out
sar
mov
xchg
mov
adc
gs
hlt
lea
mov
mov
in
int3
lods
add
lds
enter
jbe
xor
cmps
inc
cmp
xor
mov
les
mov
fild
in
add
int
ins
icebp
test
pusha
ret
(bad)
in
ret
sbb
mov
jne
hlt
mov
ins
add
pop
jp
push
(bad)
xlat
jns
fsubr
adc
shl
xlat
mov
test
mov
inc
cli
(bad)
imul
leave
push
or
ret
imul
xor
mov
out
retf
es
mov
retf
mov
mov
jb
ss
lock
ins
data16
stos
inc
fwait
push
mov
ins
mov
adc
xchg
leave
aaa
and
push
mov
push
mov
push
pop
dec
frstor
jmp
add
adc
push
jmp
sub
lock
push
jl
add
jae
shr
cmp
inc
iret
or
ds
lods
repnz
xchg
call
rcl
ret
push
sbb
lds
push
push
push
xor
pop
dec
repz
icebp
mov
mov
fidivr
ret
cs
push
test
mov
add
add
in
pop
jecxz
aas
sbb
lahf
adc
push
sub
loope
add
xchg
scas
call
dec
test
imul
jne
out
icebp
popa
mov
test
pop
jecxz
outs
push
fistp
mov
sub
sar
iret
jmp
out
lock
into
xchg
mov
retf
test
ins
ja
aaa
sub
addr16
cdq
cmp
dec
std
nop
call
and
inc
mov
jne
push
inc
adc
das
(bad)
cli
test
pop
or
adc
fidiv
jno
push
nop
imul
mov
dec
call
push
xor
ds
aaa
inc
jns
int
adc
dec
les
dec
(bad)
xchg
sbb
xor
pop
arpl
outs
xchg
ins
in
pop
sahf
sub
xchg
sbb
sahf
test
iret
mov
outs
popf
shr
jecxz
sub
cmp
sbb
add
fadd
sbb
jae
xchg
gs
loope
cmp
ss
std
ret
stos
daa
and
cmps
test
ins
fadd
call
das
dec
cmp
dec
repnz
int
mov
pop
dec
das
push
mov
mov
and
and
sub
mov
jp
popa
imul
scas
push
stc
push
addr16
xor
add
push
lods
fist
and
sbb
jg
fstp
sub
mov
cmp
xchg
fsubr
jge
into
inc
mov
sahf
ds
daa
push
fcomip
mov
test
or
push
mov
jno
int3
retf
jmp
outs
push
adc
sub
and
pushf
inc
movs
movs
ficom
bndldx
adc
mov
dec
hlt
sub
std
clc
test
jp
jl
ja
adc
sbb
pop
jg
retf
or
fadd
add
mul
jmp
mov
mov
aaa
test
ins
xor
push
add
dec
pop
icebp
ins
jmp
data16
outs
and
loopne
cmp
fcomp
outs
jg
mov
dec
pop
mov
movs
je
cmp
aad
add
pusha
sub
xchg
ins
jmp
ins
popf
scas
in
xlat
sub
sti
cdq
arpl
adc
push
call
sub
loop
mov
jle
into
bound
je
or
jge
adc
out
(bad)
xor
push
inc
pop
add
or
lahf
push
out
add
dec
repz
or
and
inc
shl
outs
call
bound
inc
mov
inc
mov
pusha
ins
push
scas
sub
dec
mov
js
or
(bad)
cmp
push
jmp
dec
(bad)
fsub
int3
loop
and
xchg
add
pop
xor
stc
xor
aaa
je
les
repz
mov
pop
jp
pop
jmp
xchg
mov
pop
cmp
mov
bnd
push
call
and
iret
(bad)
(bad)
jmp
jae
stc
imul
lock
les
imul
and
adc
pop
push
std
xor
add
(bad)
inc
out
test
ror
(bad)
scas
mov
inc
sub
or
rcr
mov
frstor
or
push
(bad)
inc
enter
jnp
add
xor
js
mov
imul
pop
jecxz
fs
(bad)
mov
(bad)
in
pop
fild
jo
adc
dec
or
push
inc
xor
xchg
sub
test
stos
(bad)
(bad)
mov
jns
shl
out
fisubr
sbb
jbe
push
dec
inc
jbe
cmp
mov
dec
cmp
scas
jae
pop
pop
out
and
adc
inc
(bad)
call
push
lahf
sbb
ds
shl
cmp
dec
ins
scas
outs
icebp
push
push
dec
xchg
jnp
push
dec
imul
scas
ret
jno
push
add
cs
and
mov
stos
loopne
xchg
inc
lods
jns
and
mov
loope
fsub
push
std
jae
xor
jg
push
lds
fs
jns
push
pop
fs
xor
outs
pop
inc
dec
(bad)
xchg
mov
(bad)
mov
(bad)
fild
mov
add
add
xor
fsubr
imul
sub
dec
pushf
push
mov
add
dec
or
sbb
or
(bad)
stos
dec
xchg
pop
dec
ins
pop
call
lahf
fcmovu
adc
xchg
sbb
mov
mov
push
data16
nop
inc
lds
and
aad
jge
xor
xor
cdq
dec
and
sub
call
jns
mov
adc
mov
and
sub
(bad)
xor
(bad)
popa
push
adc
pop
aas
xchg
cmp
sbb
das
or
pop
aaa
pusha
jno
shr
push
pop
jge
lahf
sub
or
or
sbb
mov
movs
mov
outs
pop
xchg
ins
mov
sub
sub
in
outs
jge
aaa
mov
adc
inc
icebp
sub
call
stos
bswap
retf
stos
inc
fld
fldln2
pop
or
dec
ficomp
fwait
push
push
mov
xchg
sub
xchg
push
dec
mov
jmp
fstp
dec
fwait
shl
aam
jl
clc
sub
xor
push
dec
je
cwde
dec
jae
xor
call
adc
loopne
pop
add
out
popa
(bad)
sub
rol
add
mov
leave
outs
data16
out
shr
popa
jne
ds
nop
idiv
add
not
fwait
dec
mov
ja
stos
xor
(bad)
sbb
jae
ret
mov
sub
neg
call
fidiv
and
fist
xlat
lods
sub
jne
jmp
in
pop
jne
retf
dec
pop
ins
adc
add
cmp
xchg
out
or
xchg
xchg
scas
sub
fadd
inc
sub
mov
jecxz
inc
cld
popa
cdq
lods
add
retf
ja
out
push
xor
mov
cs
push
sub
xchg
jp
loope
stos
dec
loop
fisubr
mov
(bad)
out
cmp
dec
jp
in
add
cmp
ret
mov
and
movs
jmp
es
(bad)
lock
int
pop
ror
cmp
pop
sti
test
aad
rol
cld
jno
xlat
cmps
dec
inc
fwait
pusha
enter
inc
mov
aaa
movs
cwde
icebp
les
test
dec
repnz
cmp
xchg
sbb
sub
inc
fwait
and
in
inc
mov
call
inc
mov
mov
adc
fldcw
call
push
jl
outs
aas
dec
jns
stos
lahf
mov
cmp
cmps
xchg
mov
push
cmp
sub
add
dec
repz
and
call
sti
sub
mov
in
jns
aam
fcom
in
push
ins
movs
cmp
mov
fst
cmp
jnp
(bad)
inc
mov
sbb
jo
mov
ret
int3
loope
cmps
mov
mov
xor
mov
ret
mov
popf
mov
not
lods
jmp
daa
cmps
sub
gs
es
cdq
ror
sbb
push
mov
movs
outs
adc
mov
inc
scas
xlat
mov
mov
add
hlt
daa
inc
mov
fnstcw
and
jmp
fs
jmp
jmp
or
into
out
sub
adc
push
mov
fs
cmp
ret
adc
or
je
movs
xchg
lock
sbb
xchg
mov
adc
and
(bad)
mov
xchg
loop
pop
xchg
mov
sub
dec
mov
push
mov
js
mov
cmp
mov
adc
std
mov
add
leave
movs
sub
es
mov
add
jb
xor
ins
and
push
pop
fadd
sti
pop
mov
inc
data16
add
lock
xor
icebp
xchg
repz
inc
adc
in
(bad)
and
call
inc
arpl
lea
push
imul
test
stc
rcl
jno
cmps
dec
push
and
cs
(bad)
cs
out
in
sub
xchg
mov
cmp
adc
aad
or
mov
dec
iret
scas
cmc
inc
out
ret
outs
sti
mov
pusha
xchg
out
mov
jmp
mul
push
lock
fsub
mov
call
pop
push
add
jg
jmp
es
icebp
pop
out
adc
mov
cs
test
pop
sahf
mov
pop
push
jmp
das
jecxz
sbb
(bad)
cli
iret
mov
xor
dec
call
js
loopne
pop
cmp
xlat
cdq
sub
xchg
repz
xchg
rcl
xor
cmp
leave
cdq
or
movs
mov
int3
ud0
mov
xchg
loope
ja
arpl
lods
mov
call
push
into
pop
into
daa
repz
mov
xchg
xchg
stos
popa
fist
lods
and
sub
or
sbb
push
jmp
or
mov
sbb
push
daa
cs
inc
mov
mov
lods
jge
inc
shl
sbb
fmul
add
fiadd
stos
jns
xchg
fimul
mov
ins
push
loop
dec
pop
rcl
mov
xchg
loop
jne
pop
iret
nop
mov
scas
test
stos
pop
jnp
(bad)
aad
lds
shl
pop
fidivr
inc
mov
enter
and
mov
xor
pusha
cwde
mov
jbe
pop
sub
inc
imul
aas
mov
jns
dec
pop
jnp
pop
or
pop
test
movs
clc
jmp
push
jge
(bad)
cli
fnstenv
push
fdiv
dec
es
bound
and
xchg
div
enter
sub
push
pusha
mov
fstp
adc
icebp
aas
addr16
add
push
xor
xchg
fwait
push
or
mov
jmp
sbb
fist
add
loopne
jns
loope
jb
jl
es
xor
jmp
(bad)
out
adc
push
xchg
(bad)
(bad)
sub
adc
ins
inc
cmp
jle
fld
fmulp
lds
in
in
sbb
inc
jmp
dec
and
mov
and
rcr
dec
xor
xchg
mov
xor
sub
mov
mov
adc
cld
add
mov
loopne
lea
push
jb
add
clc
mov
ds
call
shr
lods
cwde
mov
mov
xor
(bad)
std
sbb
ret
pop
sub
jecxz
xchg
lds
out
add
sub
fsubr
in
(bad)
out
hlt
adc
jg
ds
retf
cld
pushf
mov
adc
mov
sub
sbb
mov
cmc
or
adc
and
js
arpl
test
xor
pop
clc
mov
pushf
fldenv
pop
mov
jns
test
loope
add
sar
addr16
out
lds
arpl
pop
mov
xchg
mov
shr
inc
(bad)
imul
es
cld
inc
movs
in
jge
push
movs
clc
into
push
stos
mov
test
loop
xor
sub
add
sbb
(bad)
mov
cmc
push
(bad)
aad
xlat
and
cmps
push
and
xor
ret
mov
mov
inc
sbb
push
inc
dec
call
and
mov
mov
xchg
stc
add
int
int
jmp
in
adc
dec
lods
lds
test
cs
or
add
or
lds
pop
jg
push
pop
pop
fstp
stos
and
test
mul
call
mov
xchg
addr16
pop
rol
(bad)
xor
scas
dec
pop
nop
pushf
pop
or
ins
jmp
add
mov
loope
or
mov
imul
xor
cmp
test
or
sub
jns
lock
and
ins
push
and
pop
pop
cs
ins
sbb
js
enter
push
in
mov
inc
ds
ficomp
mov
mov
movs
inc
or
xchg
adc
(bad)
fnsave
or
add
mov
dec
push
pop
(bad)
lods
jnp
jmp
dec
outs
push
imul
in
aad
ja
push
adc
bnd
mov
sahf
sub
ja
cs
fcomp
push
push
in
je
and
mov
sbb
fcmovbe
push
xor
add
cmp
cs
cmps
fldcw
mov
pop
mov
inc
sar
(bad)
xchg
add
iret
das
movs
cmp
fptan
inc
icebp
leave
jecxz
pusha
add
out
dec
sahf
sbb
movs
in
clc
mov
test
pop
inc
jne
xchg
inc
shl
mov
sbb
clc
movs
sbb
xor
outs
ins
cmp
popa
jge
loope
fcom
mov
sahf
in
sub
out
or
pop
cwde
enter
sub
xchg
clc
xchg
jge
in
mov
retf
mov
xchg
jecxz
push
ins
xor
scas
or
push
xlat
jns
movs
xchg
es
movs
mov
jl
push
jecxz
mov
loope
(bad)
por
mov
stos
xor
jns
jmp
cmp
call
sbb
mov
shl
ds
cmp
cli
(bad)
stos
cmp
mulps
fwait
out
les
ja
and
xor
cmps
cmp
and
add
aaa
xchg
mov
sub
dec
dec
push
cmps
loop
mov
imul
xchg
inc
int3
mov
add
xor
jecxz
xchg
xor
prefetch
and
js
ins
jle
stos
jae
sbb
adc
sub
mov
shr
dec
or
dec
daa
sahf
addr16
mov
cmps
movs
in
test
or
jl
inc
inc
aas
cmps
inc
push
jns
int
add
data16
push
iret
xchg
jmp
or
jno
repnz
arpl
sysenter
(bad)
repz
jne
in
mov
and
sahf
sub
arpl
and
inc
lods
out
mov
not
cmp
loope
push
cmc
pushf
mov
out
dec
xor
jmp
arpl
(bad)
rcr
bnd
popa
gs
cdq
cs
and
cmps
sbb
pusha
aad
leave
test
jle
sti
in
sahf
test
test
(bad)
pop
test
sbb
xor
push
add
dec
dec
cld
push
test
or
xor
out
movs
xor
cmp
xchg
pusha
mov
add
aad
inc
nop
and
xor
cmp
xchg
jge
xor
add
adc
jnp
add
sbb
in
ss
mov
jg
mov
fs
mov
les
jle
inc
mov
gs
ficom
sbb
xchg
cmp
mov
mov
stc
mov
gs
lods
addr16
fild
test
mov
or
cmps
iret
adc
rcr
arpl
lock
sub
pop
retf
xchg
test
sbb
cmp
sub
jl
adc
lock
dec
mov
out
pop
fiadd
cdq
sub
mov
mov
fmul
cmp
fucomip
test
cmps
arpl
retf
hlt
ins
sbb
cmc
mov
stos
ins
sub
push
leave
push
rcr
les
aaa
or
outs
dec
and
jo
lods
(bad)
xor
push
scas
iret
or
add
fnstsw
mov
test
loope
imul
ins
inc
adc
cwde
xchg
adc
idiv
sbb
cwde
leave
dec
and
sbb
pcmpgtw
jno
and
in
bound
shl
xchg
cdq
(bad)
in
add
retf
jne
imul
fdiv
mov
jbe
inc
adc
adc
arpl
das
fs
adc
push
sub
iret
mov
movs
(bad)
aam
mov
sti
pop
test
mov
pop
cmp
mov
xor
mov
mov
pusha
rcr
pop
mov
sti
aas
pop
adc
adc
sbb
and
xor
inc
sar
cmps
cmp
cmc
loop
inc
mov
(bad)
iret
fiadd
and
movs
ins
pop
outs
hlt
inc
add
mov
mov
movs
jns
lods
cmp
icebp
mov
xchg
and
rol
inc
sar
fmul
icebp
push
js
fisub
out
jg
rol
bound
cli
into
(bad)
or
sbb
aad
pop
mov
icebp
imul
mov
adc
jge
std
popf
xor
js
cmp
pcmpgtb
sbb
mov
in
add
sbb
pop
xchg
call
lahf
dec
call
adc
mov
mov
daa
cld
mov
mov
aas
mov
xor
hlt
(bad)
pop
inc
jne
xor
pop
or
lods
ja
aas
sbb
out
(bad)
mov
jbe
inc
repz
push
jmp
movs
pop
sub
mov
jg
push
bound
sar
stos
and
pop
pusha
cmp
in
fst
mov
cmp
rcr
adc
imul
(bad)
repz
sbb
mov
call
into
xlat
inc
aaa
push
mov
mov
sbb
cmp
sub
and
cmp
jle
mov
cwde
div
sbb
pop
loopne
pop
adc
nop
or
or
sbb
cdq
repnz
aas
push
sbb
out
std
and
xchg
cmp
inc
add
cdq
dec
dec
ins
add
mov
outs
int3
xchg
into
push
inc
aaa
inc
jns
xor
ret
int
addr16
movs
xor
inc
aad
rcl
xchg
cmc
cmps
mov
sahf
adc
lahf
and
mov
sub
mov
jo
mov
mov
jnp
cmps
(bad)
fwait
mov
aas
inc
out
shr
mov
hlt
in
push
stos
ror
or
mov
scas
call
push
leave
out
loope
inc
int3
clc
scas
mov
ret
push
mov
mov
aad
sahf
dec
nop
xchg
xor
adc
(bad)
aad
test
cmps
sbb
jbe
ins
mov
ss
mov
sbb
aas
lds
jb
mov
std
cmp
shl
add
inc
gs
and
xor
inc
cmp
cmp
mov
push
jp
dec
and
jl
test
ja
inc
push
nop
(bad)
fwait
xchg
gs
mov
ds
cmp
fnstsw
sub
addr16
push
cmp
push
les
xor
fsubr
call
movs
adc
dec
mov
clc
mov
cmc
or
cs
out
loope
add
pop
dec
fs
test
jb
call
sub
fst
fwait
adc
ds
sbb
mov
arpl
pop
lods
sub
imul
pop
inc
cmp
xor
js
(bad)
xlat
cli
repz
(bad)
lea
add
icebp
dec
fidiv
ret
ror
movs
mov
push
add
sbb
test
or
dec
mov
mov
ins
sbb
pop
and
add
xor
fdivp
fldenv
xchg
xchg
into
or
push
push
imul
popf
dec
and
inc
out
(bad)
bnd
sar
xor
popa
outs
sub
jb
imul
xor
jae
xor
loope
mov
movs
push
(bad)
xor
unpckhps
fisttp
xor
push
cdq
xchg
mul
aam
pop
xor
aaa
xchg
jns
ror
outs
pop
in
dec
test
xor
dec
and
je
movs
loop
mov
xor
adc
aaa
and
mov
stos
adc
dec
rcl
jns
cld
adc
pop
fbld
add
inc
xchg
(bad)
test
add
fwait
iret
sbb
pop
lods
aad
loopne
sub
aam
xchg
jnp
leave
push
fstp
loop
and
dec
xlat
inc
xor
test
ds
call
jecxz
inc
jg
pop
xor
mov
enter
aad
mov
mov
ins
scas
jae
and
sub
mov
scas
cmp
inc
jns
bound
xlat
push
bound
jge
jge
lahf
aam
pop
mov
outs
xchg
pop
fwait
jns
cmc
or
sti
pop
or
or
ror
out
cwde
in
test
xor
movs
jmp
test
mov
cmp
or
push
int3
int3
add
sub
sahf
fadd
aad
push
adc
add
inc
sub
xchg
adc
test
mov
jecxz
cwde
push
shr
ret
pop
iret
scas
push
call
lds
imul
sahf
stos
and
sub
mov
hlt
rcr
mov
fucom
xchg
les
pusha
outs
clc
push
inc
jle
(bad)
cmp
aad
out
int3
xor
out
xor
or
adc
dec
add
adc
test
sbb
jae
and
pop
push
scas
cmp
call
mov
xchg
cmc
jp
ret
shl
sub
stos
xchg
cmp
and
gs
push
aad
jle
inc
pop
fst
shl
jae
add
stc
mov
jp
call
outs
jle
ror
int
xchg
jns
rcl
outs
stos
shl
push
in
lds
cmp
ret
sbb
pop
mov
add
push
loopne
test
push
mov
cmp
sti
aam
jbe
popa
or
mul
mov
dec
aaa
data16
pusha
bound
jmp
xor
leave
cmp
fmul
mov
sbb
jle
sbb
mov
mov
push
mov
xor
xchg
aad
stos
and
xchg
or
mov
or
ror
mov
cmp
aam
xchg
in
sub
lahf
pusha
push
add
(bad)
das
cmc
jmp
push
fwait
jne
call
push
loope
add
retf
ja
fscale
cmp
push
inc
test
fdivr
clc
(bad)
(bad)
push
push
leave
pop
loop
add
push
xlat
ja
dec
jmp
mov
mov
int
rcl
jno
cwde
push
(bad)
in
stos
in
(bad)
jg
rcl
popf
pop
mov
das
mov
adc
push
push
push
ins
fs
mov
into
sbb
push
jmp
(bad)
lea
out
js
inc
scas
add
js
mov
sub
out
mov
jmp
and
mov
das
jge
inc
cs
iret
imul
cmp
xor
adc
jecxz
rcl
cmp
push
cmp
jmp
sub
xchg
neg
inc
dec
loope
inc
aas
std
in
jl
test
mov
pop
adc
lods
dec
dec
cmc
xchg
cmp
arpl
push
dec
ror
mov
lds
or
ret
and
mov
idiv
cwde
in
push
fs
in
fld
jbe
xor
ret
pop
and
push
ror
push
das
jne
in
int
dec
imul
mov
push
div
mov
sbb
add
jecxz
lods
xchg
sub
ret
jmp
mov
pop
jg
adc
movs
shl
jmp
xor
test
jle
stos
rcr
push
imul
push
dec
inc
test
cmp
adc
(bad)
scas
pop
iret
cdq
ret
iret
repz
mov
mov
inc
adc
or
rcr
jle
jmp
data16
inc
jbe
lods
jge
jnp
or
adc
loope
fcomp
sbb
pop
inc
int3
mov
stc
imul
inc
jne
fwait
pop
int
test
ds
cld
add
inc
jnp
sbb
pop
in
xor
mov
jmp
ins
pop
jle
xchg
cmp
mov
adc
cmp
nop
adc
push
xlat
lds
ins
ret
repnz
sbb
inc
xor
sti
jp
fdivr
xchg
inc
mov
jae
pop
adc
sahf
mov
ror
push
sbb
cmps
mov
pop
fucomip
and
movs
int
or
pop
push
sub
into
and
push
cmp
(bad)
int3
imul
pop
mov
sub
mov
mov
int3
pop
aam
mov
sar
cmp
mov
jno
push
jmp
pop
das
adc
jl
push
add
icebp
add
fadd
icebp
in
arpl
fmul
xchg
out
xor
dec
add
pop
sbb
in
in
push
sub
xchg
dec
cwde
sub
shl
and
cmp
push
pop
jmp
xlat
sub
jno
pop
pusha
test
into
or
mov
cmp
pop
inc
jmp
pop
push
dec
lahf
push
ss
into
adc
pushf
movs
adc
in
or
les
mov
(bad)
xor
sub
ret
pop
fidiv
add
sti
repz
fmul
mov
and
adc
sub
and
inc
dec
dec
mov
push
push
dec
ret
jp
mov
mov
lods
jle
in
mov
pop
mov
fs
aam
movs
lock
jno
mov
pop
sub
(bad)
addr16
aad
in
mov
dec
jecxz
repnz
add
fs
popa
push
ror
icebp
pop
jbe
xchg
pop
(bad)
cmp
test
cmc
int
xchg
nop
mov
sub
out
fwait
inc
addr16
pop
in
cmps
(bad)
popf
jns
inc
inc
pop
adc
lods
shl
xchg
xor
sbb
mov
pop
or
loopne
scas
sahf
inc
aad
clc
sub
std
add
add
data16
push
call
jp
inc
push
in
jno
cmp
sub
inc
sti
sub
(bad)
xor
ins
sub
adc
xchg
mov
sub
or
xor
shl
add
sbb
mov
jp
jl
cmc
ds
ins
mov
icebp
in
or
push
adc
mov
cwde
clc
(bad)
outs
aam
call
in
aad
mov
adc
fbld
push
int3
(bad)
(bad)
push
mov
(bad)
in
lea
stc
xchg
jmp
adc
mov
fsubr
shl
add
adc
test
and
sub
ror
cmp
push
cmp
sub
mov
jbe
jb
inc
push
jp
cmp
or
aas
xor
push
scas
jbe
dec
jo
or
mov
xchg
xchg
ds
repnz
xchg
sbb
cmps
and
ret
mov
pop
push
jl
iret
mov
mov
daa
outs
cmp
daa
mov
push
cmp
sbb
add
ss
test
retf
xchg
jmp
or
btc
jl
jo
movs
retf
jge
leave
cld
out
push
js
pushf
movs
fsubr
push
std
mov
stc
aam
movs
or
adc
sti
pop
inc
and
arpl
imul
div
js
retf
in
or
bnd
aaa
cmp
dec
push
sub
sub
mov
fsub
jne
aas
dec
je
jg
sbb
inc
jns
out
inc
int
nop
aas
ja
test
sar
xor
in
add
gs
jecxz
pop
fimul
sbb
cmp
jg
int
mov
int3
(bad)
lds
outs
adc
out
sbb
adc
dec
push
push
jb
pop
jns
js
repz
inc
jp
dec
xchg
aad
daa
ret
mov
js
add
add
or
ficomp
and
repnz
seto
call
inc
sbb
hlt
cmp
add
jnp
mov
pop
jne
lahf
xor
test
xor
leave
fadd
mov
icebp
mov
push
xchg
or
adc
mov
cdq
outs
dec
dec
les
sbb
popa
jge
cmps
movs
pop
mov
(bad)
cmp
jae
out
jnp
scas
or
and
lds
pop
addr16
or
ss
cs
pop
pop
sbb
pop
movs
(bad)
nop
push
out
push
rcl
(bad)
repnz
push
pop
js
nop
ret
xchg
jl
xchg
call
xor
sbb
cmp
mov
xchg
dec
arpl
mov
js
sub
out
gs
dec
loop
pop
add
mov
cmp
inc
jb
pushf
sbb
imul
fdivr
and
pop
dec
fwait
into
or
cld
iret
fistp
xor
das
cwde
adc
xor
jbe
enter
pop
not
ins
or
sbb
mov
mov
xchg
push
iret
jnp
shr
sbb
mov
in
nop
lock
pop
cwde
maskmovq
test
cmp
in
adc
or
in
adc
adc
dec
movs
push
mov
in
loopne
jne
ret
jnp
sti
push
shl
xor
inc
push
push
iret
sbb
xchg
div
mov
mov
mov
mov
inc
mov
repnz
std
rcr
pop
mul
iret
xor
cld
and
xchg
nop
mov
pushf
std
add
inc
inc
std
inc
out
and
pop
fisttp
mov
fstp
mov
arpl
xlat
sbb
push
cmp
je
inc
fadd
mov
test
ds
fpatan
push
sahf
mov
pop
add
and
ret
test
fstp
push
and
fidivr
jge
ret
das
cmps
mov
mov
adc
mov
out
fwait
mov
dec
inc
mov
mov
dec
push
outs
cld
sub
stos
inc
fucomip
sti
test
mov
std
icebp
pop
sbb
push
test
(bad)
out
out
in
(bad)
ror
jmp
(bad)
ss
xchg
aaa
pop
xor
ja
neg
bound
ins
fwait
adc
inc
cmp
fisttp
mov
add
mov
inc
mov
and
loope
stos
pushf
and
cmc
jmp
xor
(bad)
sbb
call
(bad)
jmp
push
mov
pop
xor
scas
dec
data16
jmp
push
mov
mov
sub
pusha
popf
aam
shl
je
imul
inc
es
js
xor
je
pop
jmp
push
jb
xchg
jns
jne
imul
inc
cwde
sets
js
and
in
jmp
fwait
mov
fst
sub
push
retf
sub
adc
push
hlt
push
div
sub
dec
inc
dec
pop
ror
adc
repz
in
or
(bad)
dec
add
cmp
repz
push
jbe
into
inc
pop
push
mov
jae
sub
jne
push
mov
xor
and
or
icebp
mov
iret
bound
add
dec
icebp
inc
adc
adc
cmps
mov
cmp
inc
mov
add
xor
mov
mov
arpl
das
movs
xor
call
xchg
cmc
cmps
or
cs
les
lock
xchg
popf
std
mov
retf
mov
cmp
ret
mov
inc
add
stos
scas
pop
retf
imul
scas
xchg
out
inc
ja
pop
sti
xchg
in
inc
xchg
jo
cmp
jg
and
inc
xchg
cmp
outs
xchg
xor
mov
pop
retf
xchg
jge
push
(bad)
aad
pop
call
movs
dec
(bad)
sub
sbb
cmp
addr16
stos
push
bound
call
(bad)
das
hlt
loopne
outs
push
std
dec
push
fisubr
addr16
(bad)
push
and
xchg
rcr
fwait
sbb
outs
dec
xchg
push
call
sub
rol
repnz
jle
shl
loopne
pop
cdq
add
in
mov
add
pmulhw
rol
shr
jge
add
mov
std
mov
mov
fs
pop
inc
push
pop
xor
jmp
aas
dec
xchg
(bad)
push
scas
sub
adc
mov
push
ds
xor
cli
adc
mov
scas
out
test
jge
int
sbb
pop
inc
jl
mov
mov
add
aam
xor
lds
pop
lods
mov
bound
mov
inc
stos
in
sbb
scas
pop
imul
in
xor
mov
jne
cmps
(bad)
sbb
push
push
shr
rcl
rcr
enter
sub
test
scas
xchg
mov
mov
and
mov
cmp
adc
aad
inc
(bad)
in
fdivr
(bad)
cld
lahf
jnp
(bad)
jmp
stos
xchg
cmp
push
fst
add
retf
sbb
cmp
xchg
pop
push
mov
add
lock
dec
fwait
sub
sbb
and
mov
jecxz
retf
dec
cmps
int
call
push
clc
call
inc
call
dec
cmc
mov
mov
cdq
ins
imul
xchg
pusha
xchg
mov
sbb
cmp
fld
sub
jo
cmps
cmp
out
popf
clc
js
cmp
xchg
jo
dec
and
pusha
mov
mov
xchg
fwait
dec
call
jl
inc
sub
or
push
mov
les
pop
push
sub
jp
dec
shr
cwde
pop
rol
cdq
pop
pop
jbe
inc
imul
adc
mov
int
cld
jo
in
std
aas
mov
push
push
rol
sbb
rcl
inc
cmp
xchg
or
mov
or
iret
out
out
les
and
jns
mov
retf
lods
jne
out
stc
lods
fbld
mov
call
test
fcos
fild
ss
retf
or
sub
push
mov
add
(bad)
push
es
and
scas
or
cmps
repz
jae
push
scas
leave
imul
sahf
jg
vshufps
xchg
cld
aas
jg
cdq
out
xor
test
in
pop
loop
(bad)
cmc
bswap
aam
(bad)
sub
adc
inc
gs
fsubr
in
ds
mov
retf
push
fs
cdq
xchg
mov
sub
mov
jae
mov
mov
jnp
out
push
jne
jecxz
dec
dec
loop
inc
cmp
jg
in
ficom
test
jns
inc
data16
mov
cwde
sub
aas
fwait
pop
jmp
add
mov
inc
or
mov
pop
dec
neg
lahf
loop
pop
stos
les
mov
xor
mov
jnp
mov
sbb
inc
sbb
nop
fdivr
mov
jb
rcr
les
or
xchg
dec
jge
lock
sbb
pop
pusha
push
jp
inc
cmp
imul
cmps
shl
fsubr
cdq
dec
xchg
dec
adc
push
xor
pop
dec
or
cld
sub
adc
shl
test
pop
mov
mov
jnp
rcl
mov
int3
ds
test
bnd
imul
arpl
add
inc
or
or
push
cmp
(bad)
xchg
ret
or
bound
rcr
push
cmp
mov
sbb
popa
mov
or
enter
ficomp
sub
jle
(bad)
push
int
jno
ins
std
jl
nop
xor
imul
out
inc
lods
jae
pop
cmp
ins
xchg
push
xor
daa
into
enter
xchg
inc
sahf
sar
les
xchg
pop
dec
bound
pusha
bound
pop
jb
jne
and
rcr
sub
aam
sti
jno
minps
jmp
push
out
mov
mov
xchg
dec
shl
je
jno
xchg
sar
push
pop
xlat
js
scas
mov
in
(bad)
xor
ret
pop
push
push
cmps
inc
jp
adc
hlt
dec
loopne
fld
repnz
add
adc
xor
sub
mov
sub
mov
mov
mov
mov
inc
jle
adc
pop
cdq
pop
mov
repz
inc
add
inc
xor
test
out
inc
ror
jl
dec
mov
jmp
data16
jmp
add
pop
sahf
dec
adc
add
sub
sbb
pop
out
in
popa
cmp
mov
(bad)
push
cmp
int3
pop
js
xchg
(bad)
cmps
mov
dec
stos
sbb
imul
mov
inc
out
adc
ja
or
jne
fidiv
ins
mov
stos
inc
(bad)
fcom
jns
sub
rcr
mov
mov
into
mov
(bad)
hlt
adc
dec
pop
mov
mov
adc
in
outs
push
test
and
arpl
loopne
out
addr16
not
out
dec
dec
add
fidiv
sbb
xor
pop
xchg
xchg
cdq
test
daa
push
shr
or
pop
scas
sti
add
push
addr16
pop
out
mov
popf
jnp
mov
push
shr
push
imul
out
and
in
and
dec
dec
push
cwde
movs
sub
sbb
pop
fiadd
xor
or
push
cld
rcr
mov
test
mov
xor
jle
out
adc
xchg
jg
cmp
sub
ja
jnp
push
rcl
pop
inc
clc
cwde
fwait
adc
shl
push
xchg
pop
in
cmp
cmc
in
or
cmp
stc
xor
fwait
mov
les
stos
mov
fisub
sub
add
or
mov
ror
rcl
fwait
test
scas
or
dec
xchg
mov
dec
idiv
xchg
in
cmp
inc
add
fimul
sub
mov
pop
cmps
fisttp
dec
loope
and
aad
xchg
add
jge
jbe
push
ret
or
nop
cmp
test
les
nop
js
push
mov
add
aad
stc
mov
pop
xchg
fdivr
in
aam
outs
mov
mov
das
(bad)
ins
ds
lods
pop
test
in
and
les
push
(bad)
pop
pop
rcl
add
mov
aam
pop
xchg
push
push
test
scas
xor
sub
test
and
dec
retf
jnp
sub
adc
add
and
mov
in
sub
and
jl
inc
jae
fist
xchg
mov
repz
pop
and
jb
and
call
push
clc
lea
aas
ficom
push
cld
dec
mov
(bad)
sbb
dec
jbe
jnp
ja
mov
inc
test
cmp
hlt
add
shl
inc
pop
push
test
inc
xor
aaa
mov
(bad)
jl
stos
push
inc
shl
sub
repnz
sub
xlat
xchg
aaa
bound
cmp
adc
lea
aas
mov
aaa
cld
pop
pop
push
pop
dec
add
jp
bound
add
ss
enter
ins
fcomp
repnz
out
or
xor
add
inc
add
pushf
pop
retf
mov
push
xlat
pop
pop
psubsb
adc
js
dec
jecxz
cmp
or
pop
or
into
imul
cs
fnstenv
adc
std
int3
and
test
sbb
adc
sub
int3
cwde
cmp
mov
cmp
js
fs
push
and
mov
and
mov
ror
sbb
xchg
inc
adc
push
cwde
and
jle
jb
push
sbb
and
mov
test
pop
das
shr
mov
cli
popa
jecxz
sar
mov
repz
mov
fnstsw
ins
mov
ja
sgdtd
mov
aad
adc
inc
push
push
pop
imul
test
fwait
mov
xor
push
jmp
and
mov
cmp
sub
shl
cmp
mov
or
push
jge
mov
cmc
sbb
lahf
sbb
adc
or
loopne
pop
inc
jle
test
inc
pop
fs
stos
push
and
mov
test
iret
ja
fwait
cmp
mov
push
retf
out
and
pop
dec
int3
fcmovne
call
adc
popf
ins
push
scas
stos
cli
push
rol
xor
mov
xor
test
loopne
dec
in
xor
and
mov
adc
pop
jno
push
movs
xchg
cld
ds
pop
pop
mov
dec
dec
mov
nop
add
aas
inc
fwait
sub
mov
sbb
inc
push
add
ror
mov
bound
jo
aas
loop
jne
clc
push
lock
and
mov
test
mov
adc
or
fs
in
xchg
movs
sub
out
int
or
call
sbb
cli
mov
mov
cmp
repz
fimul
and
lods
cmp
ja
ds
dec
add
mov
lds
cmp
lea
add
mov
clc
addr16
add
inc
push
scas
mov
xchg
das
xchg
lods
test
mov
out
hlt
xchg
idiv
push
jge
(bad)
in
dec
rcr
xor
cmp
xor
xor
add
mov
xchg
inc
mov
pop
es
(bad)
retf
adc
scas
ss
mov
pop
dec
cmp
iret
adc
movs
cmp
cmp
sbb
aas
mov
(bad)
clc
ja
mov
cmp
stos
fstp
dec
inc
inc
ficom
dec
ds
(bad)
pop
ins
inc
xor
pop
jmp
aas
jne
shl
push
cs
push
or
pop
fild
mov
and
in
std
pause
and
mov
cmp
cmp
mov
sub
dec
cmps
das
dec
out
and
pop
cmps
ja
daa
mov
mov
movs
sti
jne
les
loopne
mov
xor
jp
dec
into
fidivr
in
fdivr
add
stc
movs
call
mov
jl
ret
add
es
bound
ret
mov
xor
push
aas
push
cmp
lds
mov
test
(bad)
push
ja
movs
in
fs
call
daa
retf
inc
mov
xchg
pop
cmp
scas
lahf
out
cli
ror
das
sbb
retf
dec
sbb
mov
push
imul
mov
movs
scas
pusha
sub
xchg
mov
jle
imul
xor
xchg
push
pop
int
xchg
cld
dec
stos
adc
mov
adc
xchg
pop
in
(bad)
xor
cmp
iret
pushf
push
inc
add
cmp
data16
mov
stos
fimul
stos
pop
es
mov
push
xchg
inc
fnsave
jge
daa
sbb
lods
(bad)
call
in
jmp
test
in
push
xchg
rol
stos
or
retf
jne
sbb
aaa
sub
jnp
push
stos
xor
scas
adc
loope
xchg
mov
adc
in
sub
pop
mov
or
cdq
ror
cmps
mov
cmps
std
mov
jae
fwait
retf
movs
ror
push
bound
leave
xchg
repnz
inc
sbb
sbb
xchg
ret
xchg
mov
dec
ins
push
jae
bound
sub
cmc
in
xlat
add
(bad)
(bad)
add
into
mov
or
es
mov
adc
je
mov
popf
mov
and
mov
mov
add
imul
movs
sbb
sub
push
sub
mov
xchg
mov
scas
pop
mov
lahf
jge
cmp
(bad)
mov
add
sbb
fmul
jl
mov
inc
retf
xlat
xchg
cmc
repz
in
fisubr
mov
or
or
jmp
cld
cli
scas
push
mov
cmps
mov
mov
cmp
inc
leave
icebp
xor
adc
sbb
(bad)
(bad)
repz
push
setp
loope
sub
icebp
xchg
popa
lea
movs
(bad)
mov
or
pop
sub
rcl
push
shr
sub
sub
mov
add
adc
pop
dec
in
ror
cmps
es
cwde
arpl
les
mov
jle
hlt
xchg
cmps
iret
lods
add
pop
jbe
mov
jp
cmp
icebp
push
push
ret
cmp
or
jo
xor
pop
sar
daa
hlt
dec
retf
push
and
xchg
out
sub
sbb
sar
pop
iret
mov
cmp
in
ficomp
aam
retf
out
sub
loope
jnp
mov
add
inc
pop
js
nop
jno
jge
jle
push
xor
xchg
in
cmp
xor
push
adc
retf
ins
or
and
mov
jne
mov
sub
lods
or
pop
imul
ins
lea
adc
sub
lds
mov
retf
std
rcr
neg
push
sahf
ss
imul
adc
repz
iret
mov
mov
add
mov
xchg
jns
test
movs
popa
add
jmp
inc
sar
addr16
xchg
and
add
in
inc
lea
mov
bound
sbb
dec
cmc
mov
icebp
repz
xchg
pop
push
out
lea
push
movs
and
retf
push
or
mov
cmp
add
sub
adc
lock
sub
retf
imul
and
sbb
dec
inc
sti
cwde
inc
std
xchg
xor
outs
loop
or
inc
inc
cs
cdq
xchg
(bad)
or
pop
fs
mov
cld
dec
pop
adc
adc
or
sbb
ret
jnp
xchg
pop
(bad)
retf
je
inc
inc
outs
jge
test
shl
sub
sbb
push
shl
movs
aaa
mov
push
sub
fisttp
mov
imul
or
sub
mov
mov
out
cdq
and
mov
and
jmp
push
aaa
cdq
add
outs
(bad)
cli
jp
mov
(bad)
cld
or
inc
or
mov
mov
inc
sub
push
push
lds
mov
add
push
and
outs
add
adc
cs
xchg
dec
(bad)
jmp
ds
dec
mov
mov
fst
stos
ins
push
test
mov
movs
out
xor
xchg
jae
jno
adc
aam
loope
mov
aad
rcl
jge
adc
xchg
popf
xchg
mov
push
out
popf
fs
or
xchg
fsub
cld
gs
add
add
ficomp
shr
xchg
pop
lods
gs
push
xchg
test
loopne
scas
jnp
adc
xor
and
adc
cmps
ins
mov
xor
inc
mov
and
push
cmpxchg
stos
iret
xchg
out
mov
jb
dec
xchg
xchg
pop
shr
jge
push
mov
mov
lds
test
aam
repnz
shl
jns
pop
pop
fs
ss
dec
inc
adc
mov
add
adc
test
ret
xchg
in
mov
xchg
imul
gs
xchg
dec
jl
outs
sbb
cmp
or
repz
adc
dec
adc
mov
add
cmp
mov
mov
push
adc
shr
int3
dec
mov
icebp
test
clc
jmp
stc
dec
(bad)
sbb
mov
push
mov
jae
ss
dec
call
xchg
jp
jecxz
in
adc
sbb
cmps
adc
and
dec
das
in
mov
popf
xchg
push
daa
iret
lds
int
stc
xlat
lea
imul
pop
repz
and
dec
out
dec
jl
ss
lods
ret
jecxz
mov
and
mov
aaa
sbb
jecxz
push
xchg
mov
jb
fidiv
(bad)
mov
and
enter
ret
lea
stc
mov
push
hlt
mov
out
jp
daa
inc
es
cmp
adc
leave
mov
cld
repnz
sbb
out
icebp
sbb
dec
pushf
ds
dec
inc
fiadd
adc
ins
inc
(bad)
push
aad
fwait
and
xor
fisubr
pop
gs
pusha
push
xor
xchg
add
pop
sbb
fcomp
arpl
out
jl
sbb
mov
jecxz
dec
mov
sbb
mov
xchg
inc
bound
mov
ins
and
mov
inc
push
pop
jle
jecxz
ret
movs
mov
adc
cwde
scas
(bad)
mov
pop
lds
mov
lahf
cmc
mov
pushw
inc
cmp
xchg
jb
inc
pushf
pop
push
mov
lea
and
pusha
int3
repz
test
mov
mov
sar
xor
mov
loopne
cmp
fwait
mov
push
push
jno
push
push
add
pop
lods
dec
or
pop
imul
aaa
in
test
xor
jl
push
jle
push
xchg
movs
pop
push
les
scas
mov
mov
mov
jae
enter
cmps
pop
test
call
in
std
cmp
loop
mov
test
test
cmp
mov
cmp
int3
mov
sbb
stos
mov
and
ja
frstpm(287
pop
shl
pop
mov
(bad)
push
mov
ror
enter
hlt
fnstsw
sub
adc
push
nop
push
arpl
int3
cmc
scas
scas
outs
popa
(bad)
cld
sub
add
(bad)
jecxz
cmps
shl
sbb
enter
les
mov
add
pop
add
mov
dec
mov
mov
nop
xor
xchg
jns
mov
xor
xchg
clc
sti
std
lock
cld
(bad)
mov
mov
cmp
into
mov
dec
sub
stc
sub
pushf
xchg
xchg
daa
and
into
shl
xchg
mov
cmp
sti
repz
xchg
jmp
push
mov
inc
xor
fist
stc
into
nop
into
shr
push
je
push
fsubr
imul
ja
mov
out
mov
mov
and
mov
hlt
jle
in
bound
test
and
sbb
sbb
out
stc
xor
stc
sahf
push
arpl
ss
aam
call
lds
cmp
adc
(bad)
cmp
sbb
aam
inc
cmp
clc
xlat
pop
mov
xlat
mov
fcmovb
sub
lods
sbb
mov
inc
add
adc
cmp
push
xor
ja
jge
repnz
fimul
cld
adc
sbb
loope
and
cmp
idiv
out
xlat
sbb
cmp
mov
sub
inc
inc
out
xchg
jl
push
out
lods
and
push
sub
mov
int3
shl
mov
mov
mov
lods
jno
mov
call
sub
cmp
jle
pop
and
addr16
or
retf
nop
and
icebp
fwait
or
sbb
mov
mov
ins
(bad)
shl
add
(bad)
sahf
sbb
jge
aad
pop
pop
int
and
rol
mov
cmp
jg
fwait
call
fistp
push
call
sub
shr
cld
adc
pop
jbe
xchg
shr
xchg
mov
leave
or
ret
ret
push
cmp
jg
retf
mov
xchg
lahf
data16
ret
dec
pop
fmul
pop
mov
cmp
(bad)
shr
cmp
inc
pop
and
mov
sbb
xchg
inc
push
(bad)
mov
mov
dec
retf
aad
cld
shl
dec
xlat
sbb
mov
into
xlat
sbb
fcom
dec
call
jmpw
mov
dec
(bad)
adc
add
stc
xchg
inc
mov
sub
int3
add
inc
cmp
(bad)
jb
xor
mov
fimul
aas
add
(bad)
lea
xor
sub
mov
cmp
add
cmp
and
dec
pop
cld
lahf
xlat
cli
jl
jge
xor
aaa
pusha
out
stc
inc
call
jno
push
scas
mov
repz
fild
xor
or
int
add
jb
ins
pushf
dec
add
int
mov
mov
js
fild
xor
push
push
call
pop
adc
jnp
inc
sbb
ret
dec
pop
outs
xchg
in
mov
or
cmp
or
shr
xor
sbb
ss
jmp
push
push
retf
adc
out
push
push
xchg
repz
pop
gs
pop
mov
fisttp
fdivr
icebp
daa
jmp
ret
stc
adc
fwait
or
imul
icebp
sbb
xchg
enter
test
mov
add
retf
mov
xor
pop
arpl
xchg
cmp
sub
test
arpl
nop
imul
fwait
jl
pop
(bad)
movs
push
jbe
push
gs
les
aaa
cli
pop
sub
add
(bad)
shl
daa
data16
lds
mov
dec
movs
adc
adc
push
cmp
(bad)
sub
arpl
add
es
jo
pop
and
cmps
call
or
rol
aam
and
xchg
imul
push
jg
imul
push
fwait
pop
cmc
pop
fadd
cmp
pop
cmc
shl
mov
push
push
mov
mov
push
jle
into
pushf
jno
mov
fld
push
push
cdq
int3
es
(bad)
hlt
xchg
inc
pop
mov
xchg
jbe
add
ror
or
sahf
imul
xor
lods
sti
cmp
sahf
push
retf
jge
jbe
retf
sbb
enter
cmp
mov
sbb
nop
push
clc
xchg
leave
iret
xchg
add
xor
cmc
adc
add
cmp
xor
int
les
outs
jg
bnd
push
daa
je
(bad)
cmp
push
push
aaa
xor
mov
test
ret
xor
scas
mov
jbe
sub
sar
jg
repz
scas
loopne
pop
push
and
popa
or
dec
shr
mov
popa
int
leave
sbb
dec
(bad)
call
pusha
movs
pop
sbb
das
outs
cmp
enter
ins
arpl
test
add
mov
test
xchg
les
imul
jbe
jmp
jne
nop
cmp
xchg
or
jg
out
adc
retf
iret
lds
outs
es
jb
push
mov
lods
cmp
push
add
add
daa
mov
fimul
xchg
push
xor
in
pop
jmp
je
pop
mov
(bad)
add
out
es
outs
cwde
repz
xchg
cs
jl
sub
jbe
pop
das
pushf
dec
jge
dec
jb
xchg
movs
cdq
es
repz
das
pop
sub
aam
add
rcr
repz
jo
sbb
stos
jcxz
xchg
push
sti
stos
call
push
ss
and
shr
inc
in
pop
repz
pop
jge
pop
retf
push
shl
cmp
ficomp
pop
or
add
inc
and
cmp
add
mov
inc
jns
fdivrp
pusha
sbb
mov
test
cli
xor
pop
sub
addr16
aas
jmp
aaa
pop
mov
push
in
jge
or
or
mov
xchg
out
pop
cmps
mov
add
jo
aam
aas
and
ss
mov
or
ins
mov
add
or
bound
mov
pushf
lods
out
mov
adc
lods
mov
daa
jmp
pop
and
cmp
cdq
(bad)
fwait
sti
call
lods
jl
test
out
pusha
iret
dec
mov
mov
movs
mov
cmp
(bad)
push
jmp
pop
fs
scas
jns
sbb
gs
retf
cmp
mov
ss
loope
cs
outs
loop
add
popf
les
scas
mov
inc
leave
rcl
pushf
shr
xor
push
aad
mov
fcomp
dec
mov
cli
pop
dec
jnp
mov
mov
inc
fbld
dec
cmp
and
aas
cmp
mov
leave
jge
rcr
lods
dec
cwde
add
mov
and
cld
aas
add
cmps
inc
mov
icebp
ret
das
(bad)
mov
inc
mov
(bad)
adc
push
mov
pop
cs
enter
jg
into
icebp
aad
dec
jbe
shl
sub
jle
adc
in
sbb
mov
xchg
or
jl
js
iret
das
jnp
loop
xchg
call
sub
jae
jmp
ins
jb
pusha
dec
jl
jnp
lea
leave
mov
adc
cli
ret
jmp
scas
cmp
jp
sub
rcl
fisubr
cmp
cmp
lods
popa
sahf
aad
sub
mov
pop
push
push
push
or
pop
out
add
lods
xor
mov
es
repnz
out
dec
icebp
jnp
mov
rcr
daa
inc
mov
jmp
mov
js
dec
(bad)
sub
and
hlt
imul
mov
and
sbb
adc
pop
jge
les
sbb
stos
lock
getsec
popf
jp
jl
cld
pop
nop
movs
sbb
mov
add
xor
jne
or
es
std
inc
mov
inc
ins
fdiv
dec
dec
jmp
aam
sbb
ds
(bad)
xor
push
movs
ret
dec
into
sahf
push
pop
stos
xchg
mov
xor
test
or
or
mov
cmp
and
xchg
mov
or
cmp
cmp
dec
push
inc
jns
rol
sti
unpckhps
xor
or
icebp
aam
mov
pop
cmps
test
xchg
mov
call
cdq
dec
scas
ins
shr
fmul
(bad)
iret
shr
test
(bad)
in
mov
or
test
inc
das
icebp
into
imul
mov
popf
sti
shl
cmps
int3
pop
adc
es
mov
scas
aam
rcl
stc
xor
cmp
adc
div
push
aam
movs
dec
xor
jg
ss
cdq
sub
cmp
push
sbb
les
shl
push
push
mov
cld
in
cmc
jp
mov
add
into
pusha
cmp
data16
aad
iret
addr16
repz
mov
or
aas
mov
jns
cs
xchg
(bad)
out
add
dec
lods
sbb
(bad)
mov
dec
repz
daa
(bad)
fs
mov
test
es
scas
lahf
mov
and
sti
and
push
call
push
pop
adc
in
shl
push
sbb
xor
mov
add
adc
push
mov
sbb
push
leave
cmp
mov
bnd
pop
rcl
sahf
rol
adc
sahf
sbb
add
pop
hlt
mov
add
jg
aam
retf
test
es
mov
jl
mov
aad
cmp
push
inc
imul
cmp
in
adc
mov
in
fild
sahf
jae
cmp
js
nop
mov
inc
mov
xor
aad
add
in
pop
test
xor
mov
fcomip
dec
fcos
fucom
(bad)
mov
dec
in
add
sub
sub
shr
fbstp
cmp
ja
movs
fs
jle
cs
clc
int
xor
std
mov
pushf
inc
shl
pop
into
fwait
leave
cmp
jecxz
fisttp
pop
mov
mov
add
das
mov
dec
cmc
inc
push
xchg
not
pop
sbb
jle
xor
cld
loopne
inc
(bad)
push
cli
jmp
out
cld
and
sub
ss
cmp
cld
cmp
jb
xor
jne
cli
xor
or
mov
stos
jne
adc
retf
xchg
aas
out
dec
fldcw
movs
xor
ret
cs
inc
jo
mov
outs
(bad)
push
pop
loop
or
and
cld
cwde
xor
mov
sbb
mov
add
test
std
mov
pop
sti
mov
leave
dec
cmp
ins
fsubr
xchg
sub
ret
fbld
cmps
dec
mov
cmp
jecxz
sbb
bound
jl
aas
adc
neg
adc
inc
bound
in
cmps
mov
sahf
retf
inc
sub
cmp
sbb
add
daa
mov
cdq
push
sub
call
mov
sub
jecxz
shl
sbb
movs
push
das
gs
or
mov
or
mov
ret
or
cli
aam
sahf
sub
mov
lea
aas
add
adc
cmp
out
xchg
jge
or
arpl
ror
add
lods
and
xor
fcom
stos
cmp
push
iret
loop
popa
xchg
std
mov
into
push
cmp
push
add
iret
pop
cmp
add
pop
fnstenv
dec
into
imul
popa
(bad)
lods
sub
cs
mov
lahf
add
push
fwait
add
mov
into
mov
clc
mov
inc
jne
(bad)
cld
cmp
pop
xor
xchg
pop
ficomp
or
dec
jmp
mov
mov
mov
or
(bad)
mov
mov
mov
xchg
xchg
loop
adc
mov
jae
daa
cmps
mov
cmp
xor
add
lea
dec
mov
xchg
daa
xor
shr
enter
pop
jno
adc
cli
xchg
mov
inc
xor
in
scas
sbb
mov
in
dec
js
enter
lods
or
sbb
adc
mov
leave
retf
test
retf
pop
pushf
shl
leave
xchg
and
cmp
dec
loope
(bad)
ins
jg
mov
push
push
mov
sbb
jge
mov
mov
retf
jmp
xchg
out
push
inc
push
xor
adc
and
dec
lods
xchg
mov
imul
sub
fmulp
or
out
in
cmp
inc
loopne
push
rcl
mov
fisub
popf
(bad)
xlat
sbb
dec
aad
fstp
xor
adc
loope
and
push
fs
push
outs
shl
pusha
dec
cmp
cmps
idiv
cld
mov
mov
push
ror
inc
jmp
mov
ja
sti
xor
xor
sub
sar
add
(bad)
inc
jae
xor
movs
clc
std
add
mov
xor
test
loope
xchg
inc
push
sub
mov
cmp
cmp
add
aaa
jg
test
clc
mov
push
push
xchg
gs
sbb
adc
inc
sub
and
out
sub
mov
es
push
pop
mov
sub
xchg
xchg
pop
add
call
lock
dec
jns
and
sbb
jne
mov
pop
sub
leave
inc
mov
bound
loop
int
mov
lahf
clc
lahf
cmps
clc
cli
scas
lds
lea
push
cmp
sti
or
fstp
inc
out
fdiv
lea
jns
add
jle
pop
into
scas
lea
inc
cmps
sar
push
out
repz
fistp
sbb
add
and
aaa
sub
clc
bound
or
(bad)
ss
ins
mov
out
pop
jbe
lds
push
daa
mov
es
mov
addr16
mov
imul
push
push
inc
xor
inc
(bad)
jecxz
cmps
aam
lods
pushf
mov
hlt
push
push
pusha
push
out
mov
add
dec
test
push
and
es
or
dec
mov
xor
push
pop
sbb
dec
push
and
and
imul
dec
fldcw
lock
adc
pop
mov
in
inc
jmp
cli
retf
and
lahf
add
sub
sub
rcr
mov
js
(bad)
push
xchg
mov
sbb
leave
ins
adc
adc
and
dec
jp
dec
aam
(bad)
push
cmp
shr
out
and
mov
ret
push
enter
sbb
jmp
jns
cmp
push
add
ja
sub
and
jmp
xor
loope
mov
int3
fisubr
xchg
adc
pop
je
scas
xchg
ins
or
or
xchg
sbb
add
jnp
mov
pop
pop
fcmovnb
add
test
inc
popf
pop
dec
mov
cmp
xor
adc
nop
sbb
mov
fs
inc
mov
shr
mov
(bad)
sbb
hlt
vcvtsi2ss
cmp
sbb
inc
inc
cmps
cli
mov
mov
ret
sti
ret
test
or
mov
imul
cmps
fild
outs
js
inc
pop
mov
xchg
daa
sub
stc
iret
and
not
jb
mov
jle
(bad)
int
push
mov
or
loop
rcr
dec
imul
sti
mov
sbb
adc
dec
inc
xor
scas
ss
adc
jbe
lock
or
nop
aaa
add
push
mov
mov
mov
mov
dec
fs
add
add
xor
mov
mov
(bad)
loop
dec
pop
and
in
arpl
jecxz
imul
jecxz
seta
loop
mov
fild
outs
cli
jmp
cmp
dec
or
xchg
pop
bound
mov
push
ds
inc
test
shr
sub
fisttp
ret
test
aaa
shr
dec
jmp
mov
jle
out
movs
or
cwde
add
xchg
jno
hlt
sti
ficom
in
ins
loope
lahf
loope
out
inc
add
stos
in
outs
sub
in
stos
loope
aas
cmp
add
xor
xchg
mov
shr
scas
ja
add
retf
adc
dec
cmps
inc
jg
retfw
ret
nop
jb
inc
dec
sub
mov
mov
inc
fild
enter
cmps
jno
lahf
xchg
fwait
mov
and
or
pop
pop
sub
ror
xor
pop
int3
mov
inc
or
nop
imul
push
retf
sbb
mov
idiv
stos
cmp
push
lock
dec
test
jnp
popf
mov
lock
stos
sub
push
out
ds
ds
out
fstp
scas
sahf
das
or
cwde
outs
popa
test
push
cdq
xlat
into
mov
pop
idiv
dec
test
hlt
jmp
xor
push
or
rcl
pop
mov
pop
or
dec
fld
cmp
jno
push
cli
leave
daa
jecxz
shr
daa
add
pusha
mov
mov
repnz
mov
push
frstor
stos
(bad)
push
cli
mov
(bad)
repz
(bad)
clc
cmc
(bad)
mov
pop
dec
cmp
push
and
into
ret
hlt
ret
inc
xor
dec
mov
(bad)
ja
lods
xlat
iret
fmul
or
rcr
mov
pop
and
pop
into
pop
push
(bad)
inc
add
mov
xchg
mov
movs
cwde
adc
mov
pusha
adc
fwait
mov
push
aad
ins
mov
jbe
into
pop
out
in
ins
dec
pop
arpl
(bad)
xor
loope
sub
push
and
mov
pop
add
hlt
cs
inc
add
call
mov
das
mov
call
sub
mov
jnp
adc
add
cs
adc
mov
enter
cld
jb
je
pop
or
mov
dec
ins
daa
push
cmp
xchg
(bad)
sbb
fs
cld
xor
pop
jecxz
push
cld
test
pop
call
pop
aaa
mov
(bad)
sbb
xor
in
popa
push
(bad)
out
ret
das
xchg
test
ds
les
or
cli
je
jmp
jge
sbb
jo
or
(bad)
scas
in
mov
stos
ds
popa
pop
cs
sub
ror
in
jmp
leave
push
adc
aad
je
in
cs
pusha
push
retf
cmc
xchg
mov
mov
mov
clc
jno
cmp
xlat
stc
out
js
repz
scas
pop
dec
push
ins
leave
clc
cli
leave
add
repz
sbb
je
or
add
mov
scas
jbe
push
mov
jmp
out
out
jp
xor
cmp
cmp
outs
stos
mov
mov
adc
sahf
cmp
jbe
test
cmp
stos
adc
cld
imul
mov
sahf
xor
das
int
(bad)
ja
(bad)
xor
jl
xor
and
push
or
sbb
(bad)
mov
icebp
cmp
fmul
pop
arpl
or
jb
out
push
scas
or
arpl
repz
sub
int
dec
push
sti
ds
jg
fwait
ins
xor
xchg
mov
push
add
(bad)
jbe
jge
fsubr
mov
cli
lahf
hlt
xor
mov
inc
pop
mov
fwait
jne
and
dec
je
pop
cmp
cli
xor
out
call
mov
test
cmp
jno
inc
popa
mov
mov
pop
xadd
test
mov
imul
repz
test
mov
in
adc
cmp
ins
cdq
jbe
ins
pop
ja
aas
fisttp
mov
push
data16
add
lock
jne
int3
mov
out
mov
sti
or
lea
cmp
add
fdiv
stos
cmp
add
mov
and
outs
jbe
push
std
mov
popa
jae
dec
ficom
ret
sbb
add
xchg
call
pushf
push
sub
jno
shl
pop
add
cmp
iret
movs
fisub
jle
stos
imul
ins
jle
(bad)
out
dec
jo
popf
mov
mov
loop
xchg
pop
shr
jle
xchg
dec
jmp
(bad)
mov
inc
or
pop
push
mov
int3
repz
push
(bad)
iret
fwait
scas
mov
push
cmp
fcom
sub
into
nop
sub
leave
repnz
movs
addr16
or
jns
hlt
hlt
sbb
jle
pusha
pop
pop
pop
rol
dec
mov
int
fidivr
sar
or
dec
out
adc
push
ss
loopne
xor
pop
lods
out
jb
add
jle
shl
js
arpl
popa
dec
mov
pushf
in
sub
outs
inc
les
fwait
xchg
xor
les
or
nop
mov
fcmovnu
les
or
test
mov
add
xchg
jno
sti
mov
xor
or
cld
in
fwait
sbb
ret
(bad)
mov
popf
enter
mov
scas
cmp
mov
xor
es
jcxz
outs
fdiv
push
cmp
std
mov
rcr
aad
sbb
mov
xchg
ss
push
lea
pop
add
(bad)
ins
mov
retf
call
pusha
xchg
xor
mov
sbb
ins
loop
les
mov
cwde
cmps
cmp
jnp
int
rcl
xor
mov
cld
mov
sbb
jmp
pop
and
pop
and
fidivr
pusha
lods
sahf
cmp
sbb
xlat
jp
push
jl
vandps
shl
loop
xor
push
push
mov
inc
mov
sub
retf
pop
mov
fcom
mov
test
xchg
push
cmps
mov
div
daa
test
jg
(bad)
test
cmp
inc
cmps
xchg
xchg
pop
mov
mov
xor
xor
in
inc
lahf
xor
ret
and
cmp
out
xchg
stos
jmp
dec
hlt
sub
sbb
and
mov
aad
and
pop
out
or
push
dec
(bad)
mov
sub
xlat
in
in
sbb
adc
jno
lock
les
loop
mov
xor
cmp
mov
cld
cmc
(bad)
aad
adc
cdq
sbb
ja
or
xor
dec
jnp
sbb
mov
adc
in
cwde
cmps
add
push
je
retf
test
dec
lods
loopne
pop
mov
xchg
test
inc
pop
cmp
pop
popf
inc
add
cmp
jbe
stos
xchg
sub
bound
jbe
mul
cmp
cmp
outs
test
mov
lea
push
jnp
xchg
pop
add
(bad)
and
xchg
jmp
out
mov
jno
loopne
jge
or
call
mov
xor
mov
loope
aaa
lahf
or
movs
out
dec
cmp
cmps
add
lahf
xchg
xor
cld
mov
nop
jno
mov
mov
xor
imul
xchg
gs
jnp
push
push
retf
fdivrp
xchg
sub
xor
fimul
les
cwde
fmul
nop
sahf
mov
mov
mov
mov
inc
add
loope
loope
sar
and
in
sub
test
pop
cs
xchg
push
retf
push
retf
mov
cmp
inc
in
cmp
cmp
xchg
stos
lea
cmp
cdq
xor
fidivr
xor
es
inc
adc
les
imul
int
pop
jecxz
pop
lods
push
sahf
mov
pop
pop
int3
push
xchg
movs
cmps
or
push
das
add
int
cld
call
(bad)
es
shl
std
adc
movs
push
inc
xchg
cmps
jnp
sub
add
xor
sub
jge
outs
push
imul
jmp
mov
cld
xor
push
mov
mov
outs
sbb
sahf
loope
mov
bound
or
jae
aad
dec
mov
scas
repz
call
sub
add
mov
inc
(bad)
std
mov
adc
ins
in
xchg
sbb
jmp
out
outs
xchg
test
fwait
or
adc
inc
outs
iret
inc
xchg
mov
dec
retf
test
nop
and
aas
push
call
ins
cs
pop
cmps
ret
lea
pop
jl
test
rol
or
hlt
mov
popf
ret
shr
sub
test
lds
xchg
(bad)
cmps
out
test
sub
iret
xor
mov
push
inc
shl
imul
stos
es
and
aad
ss
jmp
xchg
xor
test
mov
mov
loope
or
push
push
push
add
mov
data16
inc
hlt
xchg
jns
cmc
call
and
pop
push
inc
add
jmp
inc
sub
xor
leave
lods
pop
imul
fiadd
scas
repz
mov
sbb
outs
mov
mov
popa
adc
ret
adc
xchg
movs
inc
ret
or
pop
sbb
add
into
jg
xchg
mov
test
cmps
hlt
jl
inc
or
aas
repnz
add
sub
xchg
jecxz
rcr
fs
addr16
loop
pop
push
repnz
test
enter
and
or
nop
mov
jno
movs
xchg
fwait
inc
test
into
popa
clc
in
shr
fdiv
int3
jge
add
xchg
ss
sbb
push
inc
xchg
mov
or
jae
sbb
sub
das
inc
add
sub
add
cmp
call
mov
add
mov
int
inc
inc
dec
retf
sbb
jge
call
pop
jp
and
mov
dec
fsubr
call
ss
sub
outs
popf
std
cmp
add
loope
test
stc
sbb
pop
stos
mov
cmp
and
aam
xor
mov
mov
not
adc
pop
aam
leave
and
psrad
cmp
mov
shr
sub
mov
repnz
push
aas
mov
nop
arpl
es
xor
(bad)
stos
push
scas
lods
into
adc
push
adc
xor
lods
push
mov
sar
pushf
lea
jg
retf
cld
jmp
stc
aam
adc
arpl
push
in
test
add
rcr
mov
out
inc
movs
push
lea
push
mov
lock
cmp
aas
push
and
inc
shl
aaa
imul
inc
in
test
adc
cmp
sub
es
out
adc
jbe
pop
icebp
or
jns
lods
jnp
mov
inc
mov
xor
mov
jecxz
sbb
pop
add
(bad)
popa
int3
xchg
mov
imul
pop
imul
popf
cmps
aad
mov
push
jg
xchg
lods
mov
ret
fisttp
adc
lahf
hlt
loopne
sub
mov
xchg
jp
movntps
mov
xchg
dec
xor
das
lss
cwde
push
cmp
sti
daa
(bad)
dec
loop
adc
scas
ds
rcr
clc
or
sbb
fld
ss
xchg
(bad)
dec
mov
hlt
jae
sbb
cld
imul
cmp
xor
pop
loopne
(bad)
jg
in
inc
cmp
loope
xchg
addr16
in
mov
gs
inc
mov
inc
cmps
ret
add
push
push
dec
mov
push
push
cmp
fiadd
sub
js
push
xchg
test
jl
pop
pop
lock
mov
jmp
ss
mov
mov
mov
pop
push
dec
add
icebp
add
mov
out
pop
icebp
aad
(bad)
mov
mov
fisub
cmc
sbb
mov
sub
out
popf
dec
out
jl
and
in
mov
sbb
push
rep
dec
test
mov
rol
xchg
jl
sub
and
in
push
push
mov
hlt
mov
(bad)
xchg
ins
into
xor
ins
mov
arpl
mov
adc
xor
jl
cld
add
add
xor
int3
test
fild
jo
sbb
loope
add
inc
nop
pop
dec
repz
inc
fisubr
rcl
repz
lods
imul
cwde
push
sub
loope
scas
lea
stos
cdq
xchg
mov
loop
push
push
leave
and
shl
rcl
pushf
sbb
in
push
push
dec
inc
mov
fcmove
loope
jne
addr16
dec
mov
cmp
mov
dec
pop
ss
xor
sahf
xchg
in
enter
icebp
pop
repz
ins
push
dec
xchg
repz
sbb
add
je
push
ins
test
inc
test
in
mov
clc
push
ror
mov
stos
lock
push
retf
fwait
add
aam
xchg
or
mov
dec
push
in
pusha
pop
add
shl
sbb
or
ror
dec
cmp
sbb
jle
bound
popf
cli
xchg
jmp
sbb
test
ror
aad
jb
sub
lods
fld
iret
fs
popa
push
les
sub
mov
or
neg
ins
xlat
dec
hlt
push
mov
mov
add
pushf
aam
inc
mov
leave
dec
mov
sbb
pop
imul
vpsllw
xchg
arpl
mov
cmp
dec
sub
pushf
stos
cmp
lods
inc
arpl
mov
cmp
cli
push
pop
loop
imul
dec
pop
mov
jmp
jecxz
jl
rol
adc
inc
dec
or
inc
mov
sub
xor
repz
(bad)
fiadd
jb
leave
fmul
arpl
push
fidivr
(bad)
and
sahf
push
(bad)
bound
dec
scas
sub
fmul
mov
dec
(bad)
test
jne
lock
and
or
outs
movs
cmp
mov
scas
xchg
mov
or
xchg
cli
add
pop
fistp
rcr
pop
repz
pop
and
out
and
jmp
pop
jg
ss
scas
in
xor
jo
hlt
ins
icebp
stc
pushf
cmps
jae
adc
cmp
jg
fisttp
inc
ror
pop
push
outs
push
lods
jnp
adc
outs
mov
push
in
test
inc
sbb
cdq
test
xor
loopne
pop
je
pop
mov
cmp
xor
push
jp
out
mov
push
inc
push
jle
mov
dec
pushf
jae
push
addr16
mov
sub
xchg
loop
ins
in
jle
adc
jns
repnz
mov
fwait
dec
adc
mov
or
das
cmp
mov
lahf
jno
cld
add
into
mov
pop
and
mov
and
aam
inc
(bad)
sti
pop
push
push
or
pop
push
xchg
test
and
je
(bad)
adc
inc
arpl
jo
daa
(bad)
int3
push
add
sti
pop
ficom
cdq
loop
push
stc
mov
xlat
pop
push
xchg
or
mov
fisubr
loope
sbb
hlt
les
xchg
pop
jns
in
inc
xor
or
inc
push
scas
cmp
xchg
loop
pop
sub
xchg
mov
(bad)
or
mov
add
push
test
rcl
or
sub
pusha
mov
and
inc
push
jle
pop
sub
jge
mov
push
mov
int3
push
ins
jmp
or
outs
ret
mov
lds
mov
scas
inc
or
sub
cmp
adc
mov
add
pushf
or
outs
(bad)
dec
xlat
popa
jne
popf
jb
adc
sub
shl
adc
das
mov
mov
leave
sbb
sub
int
test
pop
jmp
pop
mov
adc
(bad)
jp
in
mov
(bad)
dec
(bad)
arpl
push
movs
push
stos
fs
(bad)
(bad)
fcom
jl
mov
int3
mov
shr
dec
mov
add
push
sub
add
push
sub
sbb
pushf
pop
pop
fwait
out
xor
and
pop
ds
es
jno
mov
sub
dec
cdq
push
jl
jnp
lock
cdq
iret
(bad)
int3
aas
xor
mov
mov
cmp
cli
or
fisttp
mov
rcl
mov
shl
cld
mov
mov
pop
adc
pop
ror
lods
and
adc
mov
out
cwde
mov
adc
xchg
or
arpl
mov
pop
push
xchg
dec
popa
cmp
cli
inc
mov
lds
fild
mov
mov
fisubr
out
repnz
movs
inc
sub
adc
pushf
mov
xor
test
cmc
xchg
js
dec
dec
cmc
aad
cld
mov
call
push
daa
hlt
push
int3
cdq
lods
gs
imul
inc
inc
stos
jne
sub
cwde
jge
dec
jns
cli
inc
jo
enter
sub
lock
shl
punpcklwd
aad
mov
test
or
fidivr
xor
cmc
sub
pop
inc
jg
lahf
sbb
or
xchg
leave
(bad)
iret
les
js
jl
arpl
call
in
mov
les
fdivr
imul
xchg
mov
out
dec
inc
pop
into
cwde
iret
lahf
mov
(bad)
(bad)
sub
xor
pusha
mov
(bad)
or
fiadd
dec
fist
sbb
enter
test
mov
in
xlat
adc
mov
sbb
repnz
ror
nop
mov
mov
lds
mov
pop
outs
dec
or
cdq
or
scas
rol
push
jae
inc
mov
test
xchg
aaa
in
push
ss
add
cmps
ja
or
or
or
mov
push
and
lods
pop
movs
in
iret
xor
mov
mov
dec
mov
ret
shl
ret
jp
xchg
es
aaa
inc
call
push
repnz
and
test
xchg
retf
add
(bad)
stos
jp
out
fld
rcl
xchg
test
mov
pop
leave
movs
fadd
mov
popa
into
sub
push
fisub
sti
pop
movs
mov
sbb
mov
outs
xor
mov
add
push
sub
dec
loop
or
ins
aas
pop
lds
pop
or
in
xchg
jmp
pop
stos
dec
adc
mov
push
inc
xlat
xchg
pop
popa
mov
adc
(bad)
les
or
sahf
(bad)
mov
cmp
inc
jnp
nop
lock
popf
add
sub
pop
jo
es
mov
jmp
lahf
dec
pop
retf
push
sbb
imul
ror
push
dec
out
mov
jg
inc
jbe
psrlw
outs
jmp
rcl
inc
cld
std
cmp
popf
fisttp
pop
mov
mov
mov
adc
test
sub
xor
je
stos
push
mov
scas
dec
pop
ror
push
ins
cmps
loop
ret
mov
ficom
cmp
(bad)
call
leave
mov
loope
fimul
outs
test
fimul
scas
out
dec
inc
rcl
fcomp
mov
repnz
and
pop
int
sti
js
sub
outs
cmp
xchg
loop
imul
sub
jecxz
lods
int
scas
jge
repz
fisub
xor
adc
pusha
inc
lds
mov
dec
je
xchg
xor
mov
fldcw
not
(bad)
sub
mov
std
and
jge
(bad)
out
jbe
ror
pop
jbe
outs
dec
pop
ds
jecxz
cwde
daa
retf
loope
aaa
mov
repz
fucomi
stos
adc
or
addr16
cmp
add
inc
adc
pop
or
xlat
scas
loopne
outs
arpl
ret
jo
pop
sbb
pop
repz
xor
sub
cmp
sub
pop
fidivr
cmp
jmp
ds
dec
imul
push
gs
push
ret
or
ret
not
xor
in
cmp
not
push
push
lahf
xchg
pop
and
jns
mov
adc
aaa
js
add
pop
pop
gs
cmp
(bad)
jp
mov
push
aam
and
dec
add
xor
test
lahf
dec
jle
xchg
dec
fsub
aam
pop
mov
mov
int
mov
mov
ds
sub
out
cmc
and
mov
leave
mov
pop
and
and
iret
dec
mov
mov
fild
lock
push
imul
push
movs
dec
in
int3
or
push
pop
test
(bad)
mov
xor
outs
sahf
xor
rcl
sbb
and
ror
into
lea
loop
inc
lods
jecxz
lods
push
jge
bound
addr16
cmp
stos
popa
retf
mov
ret
mov
or
mov
mov
ja
inc
push
fs
jge
jmp
jl
leave
dec
push
pop
pop
xchg
ficom
mov
inc
sub
xor
test
xor
mov
rol
movs
ss
inc
mov
cld
or
test
sbb
adc
pop
aad
mov
cmps
cmps
rcl
mov
retf
and
inc
add
into
ss
and
popf
inc
repnz
mov
repz
pop
jle
xchg
xchg
mov
push
rcl
cwde
pusha
ret
(bad)
movs
sbb
pop
cmc
std
sub
je
push
pop
jne
inc
add
mov
cmp
imul
out
lods
sbb
xchg
fidivr
cld
mov
ins
sub
fnstsw
mov
ins
adc
xchg
jg
enter
jne
mov
sbb
push
ja
add
pop
popf
call
mov
sbb
jl
push
sbb
int
xor
test
dec
inc
push
or
xchg
jns
dec
sub
rol
outs
rcl
dec
mov
das
js
movs
dec
push
push
loopne
popf
loopne
cmp
aaa
add
aas
push
xor
and
gs
adc
shl
dec
push
(bad)
int3
int3
fdiv
mov
retf
jmp
test
lock
push
gs
pop
clc
adc
je
dec
fsubr
pusha
or
movs
xor
mov
add
scas
daa
lahf
cmp
xor
mov
push
ror
jo
push
xor
jmp
je
cli
fidiv
cmp
(bad)
xchg
mov
xor
xchg
lea
push
pop
in
ret
mov
inc
loopne
icebp
mov
pop
or
and
aas
out
sub
retf
stos
add
mov
pop
mov
fstp
(bad)
jno
cwde
(bad)
pop
outs
dec
(bad)
retf
pmovmskb
pop
les
retf
ja
cli
gs
dec
cmp
push
or
or
(bad)
imul
cmp
cmp
mov
fbld
outs
sbb
adc
mov
lahf
(bad)
out
enter
push
fstp
or
lods
xchg
ins
inc
js
iret
jmp
push
xchg
add
push
fldcw
pop
(bad)
mov
xchg
pop
loop
rcr
hlt
xchg
inc
rcl
dec
mov
fwait
dec
in
ror
and
dec
inc
jae
pop
dec
in
repz
test
jnp
call
mov
cmp
ror
ja
ror
xchg
sub
cmc
addr16
add
scas
inc
xchg
pop
mov
sbb
and
mov
cmc
push
mov
add
mov
mul
data16
sbb
add
scas
mov
dec
cs
cmp
adc
jbe
sbb
fild
jmp
cmp
icebp
push
cmp
mov
pusha
inc
retf
fadd
test
fadd
cdq
(bad)
mov
jmp
jns
xchg
cmps
xchg
js
adc
cmp
sbb
xchg
pusha
mov
sub
jns
int
lods
jl
sti
sbb
sub
inc
add
jns
push
jns
or
sbb
ror
xor
test
cmp
adc
js
retf
pop
sti
mov
ja
mov
push
and
push
out
aaa
cmps
push
mov
rcl
mov
xor
jmp
xor
mov
xchg
dec
fst
cmp
ins
aas
or
pop
or
fs
or
cdq
cmp
adc
pcmpgtb
call
cmp
not
out
jmp
ret
mov
icebp
sti
xchg
and
jae
sbb
xchg
pop
adc
cmps
xchg
inc
test
jecxz
cmps
enter
int
xchg
mov
stos
rcr
dec
(bad)
lds
addr16
je
sbb
scas
std
cmp
cld
dec
mov
aas
loope
mov
into
sbb
(bad)
cld
pop
and
jae
aas
mov
scas
into
jae
cwde
fnsave
sbb
scas
mov
arpl
sub
pop
xor
es
push
inc
dec
push
int
mov
(bad)
nop
pop
and
push
mov
out
xor
rcl
loop
and
imul
mov
dec
pop
push
mov
mov
outs
mov
jmp
adc
(bad)
cmp
imul
cmp
imul
adc
out
xor
imul
adc
cmp
fwait
mov
sbb
or
clc
cmp
test
outs
pusha
je
jns
fdivr
je
mov
adc
jle
push
call
repnz
xor
mov
mov
xor
add
out
push
jmp
pop
xor
inc
aad
scas
add
push
(bad)
(bad)
sbb
pop
outs
xchg
jb
aam
dec
das
gs
dec
bound
sub
mov
xor
xor
seto
push
ja
addr16
movs
push
test
lods
and
xor
idiv
mov
and
out
jge
xor
cdq
push
dec
dec
jg
js
adc
add
pop
retf
sub
mov
clc
call
inc
ins
ret
les
or
sti
test
cmp
call
call
pop
and
mov
inc
inc
movs
out
xor
and
retf
or
les
mov
pop
mov
call
cmps
or
aam
in
push
ss
xchg
jbe
popf
out
(bad)
push
(bad)
(bad)
in
add
ss
mov
lock
fisub
inc
div
test
cli
xor
inc
nop
mov
dec
and
inc
sti
dec
mov
mov
fcom
shr
lods
xchg
nop
jo
loop
dec
or
addr16
xchg
dec
sbb
loop
xor
mov
stc
push
jb
cdq
adc
mov
imul
fiadd
rcl
adc
pop
xor
mul
mov
sbb
xchg
and
fist
add
into
dec
jbe
and
aam
fisubr
sbb
aaa
cmp
pop
or
mov
or
dec
test
cwde
add
les
(bad)
stc
fucomip
les
dec
add
xchg
pop
(bad)
jl
clc
hlt
mov
stos
and
rol
push
cs
xor
lahf
jge
mov
or
pop
add
push
jle
(bad)
pop
and
ret
stos
mov
call
pop
adc
loop
test
adc
or
dec
jge
and
retf
inc
out
cmp
ja
ror
dec
inc
push
in
sbb
sti
sub
push
cmc
fmul
aad
nop
pop
fadd
dec
push
mov
(bad)
loope
jge
aad
jg
imul
pop
aas
ret
inc
outs
(bad)
(bad)
sub
adc
jo
repnz
mov
daa
in
aas
cmp
and
lahf
icebp
sub
inc
dec
out
sub
mov
ror
adc
fdiv
outs
pop
iret
jl
push
mov
call
repnz
xchg
aad
or
inc
lock
popa
push
inc
imul
fwait
mov
dec
ss
and
pop
mov
jmp
nop
or
cmp
cmp
xchg
xchg
imul
push
outs
stos
inc
dec
pusha
xor
mov
in
cmp
cmp
xor
xchg
lods
ror
inc
mov
ins
sub
and
lea
mov
fst
push
add
add
xor
xor
imul
inc
movs
dec
adc
jle
sbb
sbb
pop
lods
movs
pop
mov
push
int
adc
pop
aam
or
fwait
nop
faddp
adc
xchg
fild
(bad)
out
xchg
inc
xor
cmps
sub
mov
enter
cmp
aam
ss
push
es
pushf
pushf
xor
test
cmps
sub
inc
ret
icebp
add
or
pop
and
loopne
inc
imul
aad
push
mov
jg
mov
outs
push
fimul
mov
jmp
dec
jle
adc
xor
mov
inc
mov
mov
cmp
sti
mov
mov
and
sbb
in
push
stos
aad
mov
or
ffreep
daa
mov
dec
add
icebp
ror
aad
mov
mov
push
xchg
gs
push
add
mov
stc
les
fcmovnbe
mov
sbb
dec
sbb
cld
sub
mov
push
pop
xchg
lock
pop
dec
push
retf
mov
or
icebp
pop
mov
repnz
mov
aad
pop
ins
pop
adc
mov
xchg
jge
mov
hlt
test
push
aas
add
aaa
sub
movs
mov
ja
div
jg
cdq
xchg
jecxz
out
je
sbb
mov
les
mov
push
push
push
fbstp
daa
xlat
push
aad
jnp
clc
mov
jo
mov
sbb
mov
add
(bad)
jl
es
inc
sub
push
repnz
cmp
pop
loop
and
cli
pop
cmp
fwait
mov
mov
aad
fcmovnbe
pusha
push
aam
js
data16
pop
stos
inc
fild
pop
ins
mov
imul
in
cwde
cmps
push
xchg
xor
cld
pop
fwait
sbb
xor
push
and
dec
das
cmp
mov
dec
and
nop
sub
(bad)
int3
dec
mov
jmp
xchg
mov
pop
mov
mov
rcr
sbb
xlat
pop
arpl
xor
mov
(bad)
sub
pop
repz
or
push
sub
fadd
jns
rcr
int3
fstp
push
mov
dec
les
lods
mov
lods
sti
sti
cmp
daa
mov
push
push
adc
lock
jmp
shr
pop
outs
cmp
cmp
mov
das
(bad)
fst
dec
mov
es
mov
test
mov
inc
mov
sahf
cmp
imul
xor
sti
gs
push
dec
adc
sub
jg
add
cdq
xchg
aaa
push
(bad)
call
xor
xor
sar
xor
inc
add
syscall
js
sahf
adc
sub
cmp
das
mov
cmp
rcr
scas
lock
push
sub
sti
jnp
mov
out
call
imul
mov
jno
in
in
and
and
push
je
add
jp
popa
call
add
iret
scas
in
nop
push
sbb
xchg
mov
(bad)
mov
imul
xchg
cmp
mov
data16
mov
fist
lods
or
jns
aaa
int
push
ds
ins
push
retf
mov
div
or
dec
std
mov
mov
mov
mov
push
js
(bad)
cmp
mov
mov
das
addr16
popa
lock
std
mov
std
and
cmp
mov
test
mov
out
out
cmp
fst
shl
and
sbb
mov
loop
aas
pop
cld
and
retf
jne
push
aam
fstp
sub
imul
ds
or
pushf
jae
ja
mov
lods
call
sbb
xor
or
fbstp
cld
adc
loope
fimul
repz
data16
and
aas
adc
pop
icebp
add
adc
cmp
cmp
and
adc
inc
jb
inc
push
paddusw
jle
xor
mov
push
jle
adc
popa
sbb
pop
es
ret
push
cmp
ins
mov
test
ja
(bad)
loope
pop
dec
pop
xor
into
inc
dec
xor
xchg
fist
scas
add
or
sub
arpl
xchg
cmp
xor
gs
inc
push
fidivr
dec
retf
mov
inc
mov
mov
push
pusha
mov
mov
rcr
add
outs
dec
jg
dec
popa
mov
push
and
imul
add
jg
cmp
stos
mov
or
dec
jmp
sub
mov
push
mov
rol
pop
xor
jecxz
jo
jmp
daa
arpl
out
rcl
das
aad
int3
push
(bad)
add
(bad)
pop
xor
xor
(bad)
mov
retf
mov
pushw
jo
sbb
push
shr
cmc
sahf
add
inc
int
mov
call
dec
rcr
fdiv
jmp
push
dec
aam
or
sti
xchg
and
dec
jg
outs
xor
push
jge
loope
lds
mov
mov
lahf
or
retf
xchg
mov
fst
cmps
test
cmp
lock
iret
jb
xor
sbb
or
pop
(bad)
(bad)
pusha
mov
pop
mov
xchg
std
(bad)
aam
jp
ret
addr16
mul
dec
icebp
mov
shl
js
sbb
pusha
aad
inc
lods
jp
jnp
dec
mov
xor
or
hlt
jmp
imul
repz
pop
int
and
pop
xor
add
popa
mov
cmp
fcomp
inc
xchg
and
or
dec
cld
pop
movs
push
jmp
stos
xor
dec
mov
mov
call
adc
sbb
add
lahf
and
or
adc
(bad)
adc
inc
mov
sbb
cmp
cmp
bound
adc
daa
sbb
or
push
sub
neg
movs
or
xor
ins
in
imul
je
add
mov
push
aad
pusha
sar
xchg
pop
or
add
lock
aad
xor
dec
pop
mov
lods
dec
scas
jae
cld
inc
stos
mov
sti
ss
inc
sbb
out
inc
inc
cli
and
adc
(bad)
ds
call
push
xlat
push
pop
mov
pop
sub
out
or
or
xchg
retf
push
sub
sbb
dec
xchg
ss
ja
jb
xchg
les
mov
retf
iret
jae
pop
mov
loop
dec
cmc
jmp
or
dec
(bad)
outs
rcr
or
mov
add
stos
dec
push
out
push
dec
cmp
out
icebp
mov
mov
sbb
call
pop
fdiv
mov
dec
popf
and
out
push
nop
mov
(bad)
adc
pop
jle
(bad)
add
xchg
lsl
cli
sub
dec
jo
inc
dec
pop
jp
repnz
cli
pop
ja
loop
push
push
pop
idiv
enter
les
pop
cmp
xchg
sbb
fldenv
cmp
adc
cmc
pop
rcl
out
dec
test
lea
or
dec
push
jns
nop
jge
gs
loop
dec
xchg
daa
jmp
pushf
js
fsub
pop
mov
xchg
adc
jmp
mov
div
cmc
ss
ds
jle
push
arpl
cdq
popf
arpl
ins
jmp
popf
cwde
jmp
adc
lahf
imul
jp
sbb
enter
adc
push
jne
fld
mov
data16
fidivr
shr
movs
fwait
cmps
pop
and
mov
push
outs
std
rcr
fisubr
lea
cmp
inc
jle
mov
jbe
sar
sbb
sbb
cwde
test
adc
jns
add
mov
cmc
mov
retf
das
in
in
test
popa
inc
popf
mov
jno
sahf
jmp
add
cli
fdivr
iret
sbb
call
daa
jne
sub
push
sahf
or
mov
iret
pop
or
aas
mov
mov
cmp
jns
(bad)
fnstenv
dec
(bad)
jle
stc
push
repnz
(bad)
pusha
push
aad
pop
jle
and
inc
cmps
pop
bound
jbe
and
sub
clc
push
add
dec
jl
pop
inc
ins
ror
jl
movs
mov
or
aam
pop
inc
adc
scas
outs
xchg
push
lock
push
retf
shl
xchg
repz
cmc
push
call
jnp
imul
sti
sub
popa
cmps
sbb
ins
repnz
adc
and
addr16
out
loope
aas
add
ins
pop
idiv
jo
loopne
int
mov
xchg
shr
test
icebp
icebp
hlt
fiadd
jb
and
and
loope
or
cmp
push
ins
fnstenv
lfs
push
das
add
jno
adc
xor
ins
test
out
mov
adc
out
test
mov
test
aaa
popf
ret
cld
lahf
movs
add
int3
mov
xlat
stc
sbb
adc
xchg
cli
stc
sub
jmp
popa
or
or
repnz
mul
and
rol
js
mov
sti
mov
out
stos
pop
mov
stos
and
stc
jae
xor
pop
inc
sbb
dec
fbld
out
xchg
daa
lock
sub
jae
ins
push
xchg
in
mov
jnp
inc
xchg
imul
int3
and
popa
in
pop
xchg
out
repz
ret
int
pop
cmp
retf
mov
sub
movs
pop
xchg
pop
dec
hlt
(bad)
sbb
push
jmp
add
sar
mov
stos
retf
push
inc
std
sti
pop
mov
mov
rcr
(bad)
pop
inc
and
pop
out
add
mov
rdmsr
cmp
and
sub
mov
jno
ins
or
in
pop
dec
and
rol
and
push
movs
mov
sbb
adc
pop
xor
pop
cs
dec
xor
daa
std
dec
lock
int3
push
(bad)
jge
xor
ret
ror
aad
aam
pop
movs
cmp
fdiv
loopne
shl
into
in
xchg
cwde
idiv
aas
or
or
in
add
movs
ret
pop
lds
dec
mov
adc
lea
xchg
cwde
rcl
jmp
mov
mov
icebp
or
sar
stos
test
inc
mov
aad
enter
pop
push
mov
pop
xchg
fwait
mov
dec
scas
les
pop
lock
sbb
retf
sub
mov
jne
sbb
mov
mov
test
idiv
fnstenv
aas
pop
sub
add
aam
add
ds
fs
cli
inc
xchg
(bad)
cmps
ret
stc
call
mov
sub
les
jne
xchg
je
dec
push
lock
loope
xor
xchg
lods
addr16
outs
jo
jge
(bad)
push
les
and
dec
or
js
add
dec
leave
inc
xchg
(bad)
sub
sub
adc
mov
nop
jle
jge
adc
(bad)
mov
inc
aas
adc
icebp
lock
(bad)
cs
pop
adc
jl
popf
ds
push
xor
shr
push
out
into
ss
shl
fs
xlat
push
sbb
xchg
xlat
or
dec
mov
inc
xor
ja
(bad)
std
mov
andnps
(bad)
std
or
jl
and
lea
(bad)
push
(bad)
jp
inc
addr16
bswap
shl
scas
ficom
clc
adc
xchg
(bad)
mov
aas
sar
inc
sbb
mov
mov
iret
or
sbb
jo
dec
loop
mov
daa
mov
push
out
cmp
popa
cmp
jmp
test
out
pop
sbb
(bad)
inc
dec
jo
adc
rcr
(bad)
pop
mov
jecxz
mov
into
imul
nop
cmp
push
loope
pop
sbb
dec
push
gs
adc
jl
cli
sub
cwde
sub
xchg
dec
and
dec
cmp
imul
imul
sbb
popaw
push
fisub
retf
dec
sti
pop
jl
cmps
mov
jecxz
out
test
loopne
sbb
push
addr16
jg
in
adc
int
aaa
jecxz
sahf
or
jg
inc
outs
sub
inc
inc
dec
scas
push
inc
adc
push
inc
lahf
and
in
xchg
lods
push
jae
icebp
fwait
mov
mov
movs
mov
daa
fcmovnu
mov
adc
mov
xchg
js
jecxz
mov
sub
push
cmps
jmp
add
mov
mov
mov
in
lods
mov
fld
inc
lds
jo
jecxz
aad
xchg
call
or
sbb
lods
pusha
xor
pop
jmp
mov
jae
and
adc
dec
jle
(bad)
ds
pushf
dec
add
mov
je
(bad)
jmp
nop
retf
sub
add
cdq
mov
rol
adc
mov
out
adc
data16
sbb
nop
rcl
(bad)
retf
int3
mov
or
lods
(bad)
mov
add
sub
fstp
sar
popa
mov
ret
mov
mov
in
cmps
hlt
aas
dec
jp
jecxz
sbb
push
inc
ss
add
mov
loopne
pop
pop
adc
ins
out
test
adc
imul
pop
cwde
cdq
ja
jmp
jo
pop
cmps
or
fiadd
add
sbb
xchg
sub
cmp
pusha
ds
jmp
jmp
jne
push
popa
xchg
jmp
xor
sbb
mov
inc
xchg
jl
ret
in
sub
test
ficomp
jns
mov
jg
rcr
or
jmp
imul
cmp
jge
stos
mov
mov
cmps
jno
xchg
sbb
call
cmc
mov
xchg
cmps
mov
mov
dec
xlat
jge
xor
ds
aad
pop
jmp
add
stc
aad
xchg
sbb
mov
mov
push
inc
stc
loopne
pop
outs
outs
(bad)
dec
pusha
inc
or
jle
leave
ror
jno
push
fstp
out
movs
push
add
cmc
cli
jmp
icebp
ret
adc
fldcw
pushf
jg
nop
pop
aam
inc
jns
pop
xor
scas
cmp
push
jbe
cdq
div
out
cmp
sbb
mov
pop
lock
rcr
sub
jle
pop
ja
sbb
(bad)
pop
enter
shl
xchg
xor
push
(bad)
mov
mov
mov
and
cmc
adc
iret
pop
dec
(bad)
imul
fmul
push
dec
add
adc
pop
push
je
scas
cs
jbe
dec
(bad)
jle
push
pop
cdq
sbb
jmp
mov
cdq
popa
sub
std
push
jg
jge
js
xchg
ins
outs
(bad)
dec
test
adc
fdiv
mov
imul
mov
add
and
jp
aaa
fwait
sahf
(bad)
sub
in
add
call
adc
(bad)
cs
sbb
adc
daa
stos
test
fucomi
sahf
pop
hlt
sbb
mov
mov
inc
mov
ja
inc
movs
bound
mov
add
and
sbb
fs
sbb
js
movs
pop
xor
(bad)
pushf
ins
les
(bad)
ds
xchg
idiv
shl
or
mov
cmps
push
addps
inc
jnp
call
test
jne
mov
popf
shr
lock
dec
xchg
sbb
bound
or
mov
lods
or
mov
and
lock
dec
cmp
(bad)
into
sub
into
mov
mov
jmp
xor
inc
mov
fstp
xlat
aas
cwde
push
call
or
in
scas
mov
xchg
sub
mov
jecxz
mov
jns
pop
cmps
pushf
jecxz
push
inc
push
pushf
and
test
or
fcmovnbe
ror
(bad)
test
mov
cmp
out
xor
push
addr16
cmp
mov
mov
cmp
push
mov
jb
fsub
mov
hlt
mov
and
mov
mov
adc
jo
ds
mov
pop
push
jmp
scas
dec
fadd
jbe
xor
mov
add
js
lods
lods
test
push
jne
push
out
fs
ins
cmp
out
cli
sub
popa
lock
out
pop
add
mov
inc
mov
in
test
movs
jl
sub
mov
jecxz
stos
(bad)
xor
or
mov
aaa
mov
mov
sbb
iret
lahf
sahf
and
pop
xchg
or
push
xchg
or
cmps
retf
or
cdq
push
popf
call
push
into
pop
inc
ret
mov
setge
hlt
jnp
frstor
daa
retf
je
xor
leave
dec
xchg
push
enter
repnz
inc
xchg
mov
(bad)
pop
out
push
call
jnp
adc
and
or
xor
imul
sub
loopne
aas
mov
shr
lock
sub
xchg
inc
(bad)
push
pusha
inc
push
cdq
xchg
xor
mov
das
add
icebp
stc
out
shl
lock
jge
jb
stc
lods
mul
leave
fidivr
cs
fcmovne
leave
popa
mov
add
cmp
jg
in
dec
adc
add
cmp
jb
les
(bad)
cwde
dec
cwde
std
outs
je
adc
cmp
or
mov
and
fmul
dec
cmp
push
pop
push
loope
sar
cmps
mov
add
jno
pusha
jo
xor
test
fild
ret
dec
mov
(bad)
and
test
loope
xor
push
and
and
mov
xor
mov
xchg
jo
pop
neg
test
outs
jbe
adc
sbb
add
xor
sbb
mov
mov
addr16
mov
scas
cmp
xchg
jns
inc
repnz
mov
loop
or
fst
jns
test
push
outs
push
sar
(bad)
dec
mov
cmps
dec
and
stos
loop
add
cmp
inc
or
and
and
or
inc
inc
das
adc
mov
fsub
fisub
and
push
bound
adc
add
pop
and
mov
cmp
sub
jb
sar
jb
mov
int3
lods
leave
(bad)
in
add
push
inc
test
xchg
mov
cmp
retf
pop
lods
ja
xchg
mov
xchg
pop
sti
outs
std
fbstp
enter
mov
cdq
mov
outs
pop
loop
jo
mov
clc
retf
outs
(bad)
pop
push
fnstsw
bound
nop
pop
inc
mov
push
fsubr
and
sbb
(bad)
mov
fisubr
(bad)
push
mov
es
pop
movs
xchg
xchg
out
loopne
aas
mov
mov
mov
cmp
add
cmp
movs
ins
jmp
fimul
or
push
xor
ins
lods
(bad)
pop
fdivr
mov
fdivr
or
das
mov
bound
jno
ds
ins
xchg
dec
add
(bad)
js
ret
sbb
in
mov
mov
enter
imul
xor
repz
lods
aaa
ror
fadd
mov
test
mov
fsin
in
imul
and
inc
sub
sbb
call
(bad)
into
and
lods
aas
mov
loope
(bad)
dec
xchg
dec
loope
imul
int
sub
cmps
push
mov
test
mov
fstp
adc
inc
outs
jae
clc
cmps
mov
aam
mov
js
addr16
fwait
inc
push
push
ins
ins
mov
mov
test
outs
out
add
cmps
aad
jmp
enter
sbb
xchg
movs
pushf
push
fidiv
cld
push
pusha
pushf
pop
test
jmp
lds
js
xchg
lea
mov
test
jae
test
shr
lahf
xor
imul
rcr
sub
push
add
cvtps2pd
xchg
adc
cli
sbb
fist
cdq
clc
stos
add
and
push
adc
sti
lds
movs
pop
sti
stos
mov
imul
push
das
ret
jecxz
repz
dec
dec
popa
mov
outs
call
sbb
mov
lock
cwde
mov
ins
lods
and
movs
test
cmp
mov
mov
hlt
fwait
pop
(bad)
lahf
bound
dec
cmc
call
sbb
and
loope
jmp
hlt
dec
sub
rcr
pop
cmp
dec
cmp
and
inc
pop
pop
add
lahf
sub
outs
(bad)
push
in
jns
pushf
or
lea
and
mov
xchg
aas
xlat
js
and
or
xlat
aad
dec
(bad)
test
popf
ret
adc
mov
ds
and
(bad)
out
daa
fidiv
mov
sbb
add
adc
or
mov
test
enter
nop
ret
mov
lods
ins
adc
inc
add
xor
js
jae
icebp
and
sub
mov
add
cdq
lock
pop
cmp
pop
rol
or
idiv
push
mov
std
pop
push
sbb
repnz
lea
fstp
ss
lock
inc
loop
sbb
inc
ss
xadd
test
or
iret
and
xor
jo
xor
ja
jl
cmp
lods
retf
push
out
aas
jne
dec
pop
xlat
sub
xor
fld
adc
loop
not
and
outs
inc
dec
xchg
cmp
and
push
inc
fcomip
xchg
es
jl
lsl
mov
out
dec
pop
js
out
loopne
(bad)
mov
jmp
cmp
push
push
cmp
in
mov
mov
stc
mov
sbb
pop
jge
add
mov
shl
adc
stos
sbb
xor
aad
add
dec
push
push
sub
xchg
pop
ss
daa
push
pop
jns
dec
jae
sbb
jl
push
cmps
jns
add
(bad)
xor
mov
mov
mov
(bad)
repnz
xor
cmp
fcomp
sbb
or
jle
test
(bad)
fisttp
cmp
sub
bound
dec
or
and
loope
push
in
sub
fdiv
imul
push
push
jbe
sar
xchg
dec
jl
sub
ss
lds
ds
push
rcr
dec
addr16
mov
fbstp
mov
push
push
sbb
xchg
pop
adc
xor
shl
out
lahf
mov
sbb
jmp
pop
mov
adc
inc
mov
loope
adc
xchg
add
scas
hlt
cmc
sub
mov
xchg
jmp
sub
cmp
sub
push
inc
push
das
outs
inc
hlt
pushf
stos
out
test
and
arpl
pop
push
mov
imul
aam
test
das
stos
sti
push
add
jmp
cli
(bad)
mov
movs
sub
ins
xor
sub
mov
cmp
stos
mov
push
in
fdivr
sub
xor
(bad)
and
inc
out
call
cmp
adc
mov
mov
cmp
pop
push
cld
stc
test
and
in
mov
adc
mov
not
cmp
fstp
xor
ins
in
imul
test
ins
es
popa
inc
mov
jmp
sbb
fsub
inc
push
fild
pop
xlat
pop
pusha
scas
ret
fcomip
or
xchg
pop
and
mov
addr16
mov
lahf
add
out
push
addr16
test
fld
xor
in
jae
hlt
cmps
stc
sbb
test
mov
mov
jne
enter
jo
and
sbb
mov
mov
mov
add
add
push
(bad)
retf
repnz
cmps
fldcw
dec
out
fdiv
adc
dec
jecxz
or
push
mov
and
xor
mov
ror
cmp
mov
mov
rol
mov
jg
das
inc
ror
(bad)
jmp
ror
out
repnz
jns
push
nop
sbb
sar
(bad)
ds
lea
inc
inc
shl
(bad)
pop
cmp
adc
mov
cmps
xchg
test
jbe
xor
in
jno
sbb
pop
test
mov
xchg
retf
movs
repz
sbb
mul
ds
bnd
rol
cmp
xchg
cmp
xchg
pusha
cmps
push
sub
call
loopne
xor
or
ret
movs
test
nop
maskmovq
imul
lods
sub
sbb
loop
out
cmp
lahf
dec
jg
adc
popa
daa
retf
push
retf
and
pop
sti
fldenv
(bad)
lock
mov
les
jb
pushf
push
mov
push
frstor
xor
test
loop
jmp
ror
xchg
sti
pop
lea
sub
call
lds
dec
jbe
mov
movs
adc
call
movs
hlt
test
(bad)
test
out
jno
into
jl
and
aaa
daa
iret
fsub
inc
(bad)
rcl
mov
sbb
jecxz
mov
push
adc
dec
hlt
jb
mov
cmps
mov
add
enter
in
and
retf
dec
pop
xchg
sbb
iret
mov
cmp
pop
inc
and
xor
push
out
push
adc
fadd
mov
mov
test
sub
cld
add
xchg
aas
jmp
outs
in
adc
test
dec
push
adc
inc
xchg
retfw
sub
xchg
fwait
inc
and
pop
aam
cmp
adc
jb
dec
(bad)
xchg
mov
(bad)
test
push
fwait
scas
retf
adc
mov
loopne
xchg
loope
fisub
push
rcl
sbb
test
lods
pop
mov
clc
mov
imul
fcomp
sar
call
sub
add
pop
fisttp
add
inc
je
into
mov
rcl
shl
loopne
jge
dec
popf
mov
and
jo
std
jge
fwait
cmp
out
int
sbb
or
mov
adc
fs
jae
fld
les
push
neg
(bad)
loopne
sub
mov
mov
fild
shr
push
sbb
cmp
add
xlat
mov
retf
add
mov
pop
jmp
or
sbb
(bad)
idiv
clc
cmp
leave
mul
or
call
fbld
(bad)
inc
or
loope
xlat
ins
sahf
inc
cmp
into
ret
aas
out
jne
xchg
sbb
in
mov
popa
mov
jmp
(bad)
fisub
leave
ror
mov
and
jmp
and
sar
bound
mov
xor
add
inc
fstp
adc
in
dec
cdq
test
repnz
aaa
repz
mov
mov
rol
out
push
cmp
retf
mov
inc
jl
adc
xor
and
repnz
jno
test
cmp
ror
test
ja
xchg
int
jns
xor
mov
push
jo
or
mov
adc
sbb
mov
test
mov
clc
sbb
f2xm1
xor
stc
jge
adc
ja
xor
mov
jmp
ins
jae
cmp
or
and
cli
and
adc
push
mov
lahf
ds
sbb
inc
ret
dec
dec
push
retf
xchg
xor
mov
jns
pop
and
pop
push
and
test
cmc
sbb
loope
jmp
pusha
xchg
mov
mov
loope
fnstcw
cld
mov
push
pop
or
xchg
cmp
out
icebp
ins
in
xchg
psllq
adc
imul
ror
stos
ss
in
mov
pusha
mov
sub
mov
jge
mov
popa
jmp
jns
nop
push
sub
int3
and
mov
not
jae
lds
adc
lds
outs
arpl
cli
shl
loopne
popf
(bad)
cmp
pushf
mov
gs
bound
adc
add
retf
xchg
and
dec
out
test
popa
xchg
cmp
jae
push
sub
pop
fcom
jbe
mov
pop
scas
jae
and
aaa
inc
in
outs
mov
bnd
push
inc
loope
pop
jmp
ins
nop
sar
outs
pop
outs
es
movs
push
inc
or
push
mov
sbb
hlt
or
mov
inc
ffreep
mov
mov
mov
int3
and
outs
or
jle
add
xchg
sbb
cld
sbb
dec
scas
jns
add
in
imul
add
arpl
mov
and
or
jl
sbb
ficom
cmp
xchg
mov
jle
fist
xor
sbb
mov
sub
sbb
aas
loop
rol
jg
xor
jbe
xchg
out
std
ror
cmp
in
out
dec
xor
das
sub
jp
sahf
xor
dec
xlat
xor
fstp
test
mov
subps
push
es
xor
loop
scas
mov
loopne
enter
iret
cmp
out
call
jns
pop
test
data16
enter
jl
imul
(bad)
pop
icebp
mov
je
lahf
iret
add
repz
bound
(bad)
sbb
mov
dec
leave
es
out
xor
push
nop
xchg
daa
stc
cmp
rol
cld
dec
ins
stos
add
test
(bad)
push
in
mov
mov
cmp
push
pop
sub
cld
fimul
mov
mov
lahf
ds
adc
(bad)
cmp
dec
inc
push
dec
test
aam
aaa
test
outs
mov
test
xchg
push
adc
jmp
or
lods
dec
xor
push
neg
fcomp
js
sub
(bad)
pushf
xchg
mov
push
mov
in
sub
pusha
dec
out
pop
jbe
outs
in
je
fmul
test
leave
xor
pop
xchg
or
pop
test
popf
std
ret
sbb
mov
ret
test
and
mov
ja
loopne
(bad)
mov
dec
(bad)
inc
les
xor
sub
xchg
ins
mov
mov
and
mov
adc
xchg
retf
jge
sti
jo
xchg
inc
loop
ss
jmp
in
jmp
and
shl
mov
pop
mov
test
jle
test
sbb
mov
test
(bad)
ds
cmp
inc
imul
add
in
cld
fs
pop
add
push
adc
test
xlat
pop
cmp
sbb
and
add
dec
push
cwde
(bad)
(bad)
out
cs
ror
jb
adc
lock
mov
add
mov
and
pop
scas
xchg
mov
push
lahf
cmp
mov
in
mov
add
adc
arpl
stos
scas
int
call
inc
and
retf
cmp
jo
mov
mov
ror
jb
and
and
clc
adc
neg
mov
or
jo
jb
out
jg
movs
out
js
mov
push
mov
and
in
stc
rol
dec
into
dec
cmp
cmps
sbb
inc
cmp
push
fdiv
jbe
mov
lods
jo
pusha
mov
sub
cmp
inc
int
mov
sub
imul
adc
add
mov
into
aam
inc
push
stos
lods
outs
gs
scas
sub
sub
in
cmp
jno
rol
xor
and
nop
into
fstp
nop
pushf
sti
bound
fadd
gs
mov
jbe
cmp
and
pop
mov
mov
retf
add
jo
cdq
xlat
in
or
lock
inc
aas
xchg
sub
loopne
sbb
aaa
push
ins
pop
(bad)
jmp
adc
mov
ror
ret
sbb
pop
imul
icebp
sahf
(bad)
out
icebp
jl
pop
xor
xchg
cmp
aam
add
adc
sub
xor
call
mov
out
popa
not
fcmovbe
sbb
and
mov
in
sub
mov
and
in
ins
sub
mov
mov
stos
cmc
or
dec
cmp
adc
clc
adc
dec
inc
(bad)
fs
(bad)
test
mov
int3
outs
and
xor
mov
not
and
test
dec
movs
cmp
dec
cwde
(bad)
(bad)
push
push
int3
push
ret
arpl
shl
mov
shl
cmc
push
mov
mov
jns
call
lds
ds
fcomp
mov
test
stc
mov
pop
sub
into
pop
jp
ja
mov
into
jmp
std
push
test
mov
pop
push
cmp
test
fucomi
fdivp
leave
sub
retf
neg
dec
repz
lock
cmp
xchg
fadd
rol
pop
enter
push
fwait
xchg
xchg
lods
ror
sub
sub
push
(bad)
daa
push
fnstcw
fwait
or
(bad)
mov
xchg
and
mov
lods
xor
dec
jmp
mov
mov
movs
push
repz
sbb
xchg
pop
test
inc
add
out
or
xchg
fidivr
lea
je
test
cmps
in
aad
gs
shl
lahf
int
mov
jno
in
and
xor
pop
xchg
scas
test
in
dec
(bad)
fist
(bad)
shl
out
fwait
repnz
fucomp
or
shl
sub
push
mov
cmp
out
scas
pop
xchg
cld
push
iret
enter
mov
xchg
mov
fcomp
adc
mov
sbb
scas
imul
pushf
pop
xor
out
adc
daa
inc
shl
ret
clc
je
nop
sub
fidivr
mov
mov
jl
add
dec
ja
or
inc
pop
movs
xchg
xlat
adc
and
or
xchg
adc
inc
push
inc
lock
mov
cld
in
bound
test
ret
jmp
retf
xchg
add
cmp
ins
test
mov
leave
mov
cmp
fxch
nop
push
push
mov
cmp
icebp
adc
dec
les
jb
mov
aaa
mov
loopne
cmp
sub
retf
push
and
lock
xchg
call
xchg
js
(bad)
jl
sub
out
fsub
cli
dec
in
mov
int3
cli
aam
add
sub
inc
(bad)
mov
inc
test
push
cmp
lods
sub
retf
fsub
mov
sahf
lea
sar
adc
repz
rcr
sbb
nop
mov
in
sub
xor
dec
xor
or
(bad)
daa
cmp
repnz
inc
sbb
mov
push
imul
sub
or
pop
xor
inc
bound
adc
nop
adc
push
or
test
xchg
add
cld
jl
xchg
loopne
neg
mov
pop
mov
imul
and
test
jb
outs
mov
push
dec
jl
add
or
jmp
inc
sbb
cwde
mov
cwde
push
xor
push
std
outs
arpl
popf
inc
xlat
enter
(bad)
arpl
sar
and
push
push
mov
or
jl
in
fsubr
shl
in
pop
push
mov
adc
xor
cmps
mov
sub
dec
popa
sub
jmp
and
lea
mov
std
lahf
jno
sbb
cld
mov
xor
outs
inc
or
retf
cmps
add
xor
dec
inc
call
mov
mov
pop
xchg
inc
push
xchg
in
lock
adc
addr16
mov
ret
dec
arpl
xrelease
arpl
fst
and
cmp
push
xchg
into
mov
cmp
cmp
inc
fsub
dec
inc
pushf
mov
xchg
rol
inc
cmp
in
mov
in
(bad)
and
sub
cld
and
movs
mov
jae
sbb
xchg
lock
dec
mov
rcr
loope
in
mov
mov
lea
pop
pushf
xor
jecxz
xor
mov
xchg
bound
jno
fwait
sub
dec
inc
ds
mov
cld
cmp
ret
mov
aad
repnz
add
enter
jmp
(bad)
dec
lea
dec
or
push
pop
int3
inc
or
(bad)
js
icebp
sub
push
ret
mov
adc
inc
jmp
push
dec
mov
mov
and
ficomp
add
or
mov
mov
xor
loope
and
js
hlt
and
sub
scas
popf
mov
lods
mov
dec
push
test
loop
test
and
sti
movs
cmps
inc
jecxz
fisubr
push
adc
dec
xor
cs
test
dec
and
add
mov
loope
mov
in
jno
and
mul
es
mov
add
out
dec
mov
out
iret
jne
nop
and
sbb
sub
push
sub
pushf
out
out
dec
inc
cmps
loope
pop
inc
sbb
pop
cmc
mov
iret
int
pop
push
call
jns
ins
idiv
shl
pop
scas
xor
imul
retf
in
ss
mov
stc
cmp
mov
adc
stos
pop
out
sar
xchg
sahf
icebp
mov
into
cmp
int3
dec
dec
es
jo
dec
call
adc
xchg
xchg
sti
or
xor
dec
and
push
mov
dec
ror
call
sub
and
add
or
inc
mov
inc
in
pop
lds
pop
dec
inc
adc
int3
(bad)
int
test
pop
sti
movs
aas
std
je
retf
sahf
gs
xchg
push
or
xchg
nop
cmp
inc
loopne
and
sbb
fwait
or
loop
sbb
sub
mov
popf
popf
and
int
ins
ins
mov
adc
push
xchg
call
or
lahf
dec
adc
pushf
retf
lds
fbstp
xor
or
sbb
jl
jo
clc
mov
loopne
lock
and
shl
ret
xchg
jne
ss
mov
xchg
or
scas
bound
dec
arpl
rol
pop
ret
mov
rcr
mov
xchg
cmp
ja
jge
push
je
cmp
xchg
xchg
js
mov
sub
jmp
xchg
push
mov
lea
cmp
test
mov
mov
mov
mov
jle
dec
cdq
hlt
inc
or
std
fstp
in
add
push
mov
mov
dec
into
loop
lea
push
xlat
setnp
scas
imul
pop
lock
into
dec
jle
push
or
pop
into
dec
pop
icebp
ins
in
push
int3
pop
fincstp
retf
arpl
inc
into
and
enter
mov
add
inc
dec
jmp
es
aaa
pcmpgtw
ror
out
sub
push
mov
retf
dec
and
pop
jno
call
aad
or
cwde
fs
cmp
(bad)
jmp
push
outs
mov
mov
test
add
stos
pop
pop
and
sub
xor
add
dec
or
push
jge
(bad)
sbb
dec
add
mov
mov
xor
inc
xchg
(bad)
dec
out
pop
out
call
push
inc
fucom
outs
les
loop
xchg
mov
stos
fadd
xchg
mov
mov
clc
dec
pushf
es
lods
jae
lahf
push
xor
aam
movs
mov
pop
xchg
scas
test
jmp
ror
jl
(bad)
pop
jle
stc
pop
(bad)
adc
jmp
or
sbb
(bad)
dec
dec
ret
push
lock
sbb
add
push
das
popf
dec
cli
nop
sub
sbb
inc
pop
vpsubsb
push
mov
push
inc
push
mov
jg
mov
mov
mov
adc
and
push
dec
pop
adc
pop
push
fild
push
sahf
xchg
movs
push
pop
mov
mov
mov
mov
mov
xchg
stc
(bad)
mov
and
adc
pop
loope
fdivr
dec
mov
shl
arpl
pop
dec
jmp
cmp
call
push
adc
cli
add
inc
and
xchg
jno
outs
xor
and
popa
jns
mov
ins
(bad)
sub
fidivr
and
(bad)
movs
mov
and
push
jl
push
push
xor
xor
int3
jge
lock
inc
jns
pop
jnp
pop
push
mov
cmp
push
xor
out
es
sub
int
add
push
inc
push
test
xchg
mov
cwde
fnstenv
fist
out
fmul
inc
fldcw
shl
fsub
aad
xchg
imul
lods
sbb
jmp
sub
out
adc
test
cmp
mov
(bad)
aaa
je
sbb
call
mov
cld
in
xchg
mov
pop
mov
fisub
aam
pushf
add
jmp
in
into
jno
push
xchg
daa
or
xchg
mov
int3
or
sub
cmp
xor
xchg
jae
int3
jmp
(bad)
ror
sbb
xchg
mov
int
in
sahf
enter
les
jmp
mov
mov
push
mov
fbld
(bad)
mov
dec
inc
xor
lea
shr
add
loop
xor
mov
push
xchg
loopne
jge
stos
dec
in
pop
jmp
movs
dec
pop
in
mov
pop
xor
or
adc
mov
in
push
gs
push
out
aad
mov
cmp
inc
dec
not
mov
jl
ins
add
push
mov
cmp
mov
repnz
cmc
test
outs
mov
rcl
cmc
pop
dec
(bad)
cmps
cdq
mov
dec
and
adc
xchg
xchg
push
inc
adc
inc
xor
in
aas
xor
add
or
jl
test
jl
fdiv
xor
mov
mov
popa
xchg
ds
test
outs
nop
jo
push
mov
bound
loopne
cmps
adc
mov
sub
add
scas
jnp
or
mov
movs
shr
fs
push
push
test
and
mul
scas
fs
ins
inc
sbb
loop
or
test
xchg
cmp
out
jg
jmp
xor
jmp
push
jmp
mov
sub
xchg
leave
cli
and
(bad)
add
sbb
mov
es
mov
in
jbe
int
loope
hlt
adc
jge
jmp
mov
mov
sbb
and
fsubr
and
add
dec
jmp
jno
(bad)
jb
dec
inc
(bad)
mov
or
jle
sbb
aam
test
adc
fmul
fiadd
js
sti
dec
dec
fdivr
sti
add
mov
dec
mov
das
jo
mov
fiadd
sbb
test
(bad)
mov
sbb
pop
inc
xchg
cmps
dec
mov
cld
pop
mov
imul
pusha
bound
cli
mov
jmp
pop
test
or
jb
xchg
xlat
pushf
pop
pop
in
in
les
pop
inc
dec
outs
ds
mov
mov
adc
add
jp
and
hlt
jne
jae
jb
adc
pop
jnp
dec
mov
test
sub
pop
(bad)
fcmovbe
fs
(bad)
jmp
not
mov
sub
or
push
ins
shr
mov
jp
pop
jne
cwde
fwait
xchg
cmps
test
cmc
outs
xchg
in
jno
fstp
dec
xchg
or
pop
xor
rol
call
add
cmp
int
add
or
mov
dec
fsub
cmp
repnz
mov
mov
dec
mov
out
or
into
int
sbb
mov
cdq
out
and
icebp
fdiv
mov
adc
pop
jmp
cs
arpl
dec
ret
dec
mov
mov
cmp
call
icebp
cmp
inc
lea
dec
push
fwait
repnz
or
dec
mov
pop
faddp
sahf
fs
shl
sbb
mov
or
stos
mov
push
in
xchg
pop
adc
jno
cdq
cmp
mov
jl
push
push
sub
cmp
and
jp
xor
inc
mov
pop
je
out
lods
nop
pusha
and
stos
mov
pop
mov
rsm
test
cmp
jo
cmp
lods
call
xchg
jnp
lahf
inc
jno
push
jmp
and
cs
shl
(bad)
int
ja
sbb
pushf
add
cdq
inc
cmp
in
cmps
in
inc
ror
xchg
push
popa
ins
inc
push
bound
ret
or
ss
out
outs
cld
add
es
fnstcw
shr
fisubr
fnstcw
mov
push
test
stos
xor
ins
mov
repz
and
sbb
sbb
mov
cmp
(bad)
xor
test
push
and
mov
repz
mov
push
out
cwde
sahf
push
lahf
mov
xor
sahf
push
or
pop
push
dec
ja
xchg
repnz
nop
xchg
pop
in
cmps
leave
test
or
mov
fs
scas
sbb
jp
xor
pop
cmp
nop
data16
xor
addr16
sbb
call
jno
stos
cmps
cmps
rol
fwait
(bad)
push
cmp
gs
enter
jb
iret
lods
jmp
jmp
push
test
mov
xor
hlt
xlat
pop
ror
jle
sbb
xor
cmp
hlt
mov
repz
icebp
sbb
stos
out
enter
pop
cdq
jbe
shl
pop
and
xor
jb
add
mov
(bad)
loop
xchg
dec
inc
leave
lock
movs
jae
xchg
rcl
xor
ret
mov
mov
cmp
fdivr
cdq
push
or
psrld
das
stos
sub
mov
not
movd
xchg
les
jne
jg
xor
sbb
sar
das
gs
scas
js
cmp
(bad)
pop
shl
dec
fistp
sbb
and
push
cmp
in
jg
scas
push
jp
imul
mov
sub
sbb
hlt
push
jno
xchg
ds
scas
fwait
and
ins
das
out
ins
dec
sub
mov
xor
icebp
mov
dec
popf
adc
inc
or
nop
outs
sar
xchg
nop
add
inc
inc
cmc
or
jg
cmps
mov
xchg
aas
adc
mov
mov
adc
mov
pop
mov
call
ret
cmp
pop
aad
loop
jae
out
lahf
fcomi
(bad)
cmps
mov
in
es
dec
push
fld
or
xor
lock
pushf
and
lods
loope
into
fistp
fisub
cwde
in
arpl
xchg
and
xchg
jns
jb
mov
mov
dec
and
nop
jmp
shr
ds
imul
or
adc
aaa
sbb
gs
adc
cmp
sbb
call
jns
mul
ss
jb
or
popa
int
inc
sbb
or
push
stos
xchg
in
and
sbb
and
or
jne
and
mov
lahf
les
mov
call
ja
sbb
and
(bad)
in
xchg
ins
(bad)
pop
sbb
add
jne
mov
cmp
sbb
out
pop
jmp
in
(bad)
pop
pop
in
fmul
or
(bad)
mov
popf
enter
inc
mov
jns
aad
jmp
or
and
add
loope
mov
cmp
std
aad
mov
ror
fidivr
sar
stc
jb
out
dec
(bad)
adc
jp
mov
ins
hlt
or
cld
mov
mov
jmp
nop
jne
shr
push
jae
mov
icebp
and
adc
loop
idiv
out
jmp
pop
mov
aas
and
adc
ss
or
or
xor
lods
and
div
jne
out
push
sub
mov
jo
mov
xchg
pushf
and
sbb
in
xor
jg
imul
push
(bad)
out
ins
sub
(bad)
xor
mov
test
lods
xchg
ins
outs
xor
dec
call
mov
jnp
int3
loop
inc
dec
icebp
push
xchg
cwde
adc
(bad)
push
dec
call
ror
shl
dec
dec
push
popa
sbb
ins
cdq
pop
mov
add
ins
adc
sub
(bad)
pushf
push
mov
jle
stc
inc
mov
jp
popa
pop
add
sub
mov
lea
xchg
mov
jno
and
sets
cmp
mov
pop
loopne
ins
sbb
leave
lds
lahf
cmp
or
pusha
xchg
out
jge
das
and
call
cs
scas
mov
test
pop
out
xchg
xor
push
adc
jae
dec
xor
outs
iret
jb
imul
push
and
mov
push
push
xchg
test
stc
sub
fistp
ins
fbld
lods
push
scas
cdq
jge
mov
fwait
or
adc
and
(bad)
mov
inc
dec
fld
inc
std
out
pop
xchg
in
push
icebp
aas
xor
pop
fbstp
cmp
pushf
dec
push
pushf
pop
(bad)
imul
dec
mov
dec
cmps
jge
dec
int
jae
mov
xchg
js
mov
jbe
je
adc
add
pop
ss
add
aaa
inc
xchg
sbb
push
pusha
int
mov
and
in
jo
push
stos
jmp
leave
mov
(bad)
bound
sub
mov
outs
les
stos
mov
mov
jg
mov
in
sub
cmps
jp
sbb
sbb
popa
mov
popf
or
xchg
(bad)
addr16
sub
outs
jae
outs
push
xchg
addr16
dec
pop
loopne
cmps
mov
push
jns
xor
ins
stc
cmc
pop
cmp
cmp
js
or
je
lea
in
ret
cmp
and
push
xor
pop
pop
xor
or
and
cld
test
test
jns
jmp
sti
dec
push
jecxz
loopne
aad
cmps
repnz
sub
and
pop
or
and
aas
xchg
lods
push
aam
adc
sub
pop
ror
sub
dec
add
cwde
je
ins
popf
sub
mov
out
loopne
jns
sbb
outs
cmps
push
lods
clc
fadd
jb
imul
sub
adc
cmp
adc
sbb
fbstp
jl
rol
js
out
aaa
shr
or
(bad)
push
or
pop
out
(bad)
sub
pop
imul
and
cmps
in
dec
inc
fst
push
gs
dec
repnz
xchg
aaa
iret
(bad)
sub
ds
cdq
pop
mov
xor
cwde
nop
rsqrtps
push
fwait
movs
add
dec
lods
or
or
scas
dec
push
mov
les
push
div
popa
es
cmps
or
add
repz
mov
push
imul
mov
mov
ins
stos
dec
retf
lea
mov
fcom
dec
dec
adc
hlt
test
cmp
clc
stos
mov
jbe
adc
jmp
xchg
js
daa
sbb
mov
pop
xchg
dec
lahf
ret
mov
push
neg
jl
pop
ins
sub
inc
aam
push
dec
mov
stos
xchg
and
loop
fs
inc
loope
retf
mov
fwait
adc
fistp
outs
sahf
sub
or
in
ins
imul
rcr
push
jecxz
mov
aad
mov
sti
sub
nop
xchg
cwde
je
sub
in
sahf
push
jbe
and
data16
sub
int
push
fisttp
lock
cs
aam
sub
ds
xchg
out
mov
(bad)
(bad)
rcr
xchg
and
add
sahf
sub
sub
jno
sub
sbb
loope
sub
xchg
sbb
inc
ss
inc
fwait
out
inc
cld
aas
jns
xor
cmp
movs
loope
mov
cmp
adc
cs
jb
in
mov
cli
or
push
mov
sar
fwait
dec
jae
xchg
xor
and
mov
shl
loope
dec
fidiv
ds
jecxz
rcl
je
sbb
ds
pop
sbb
cmp
fild
push
mov
lahf
cdq
cli
xchg
cli
and
xor
das
jmp
fiadd
and
cmp
lock
sbb
outs
adc
xor
xchg
mov
inc
sti
aam
imul
push
inc
dec
mov
jmp
sub
ret
cmc
outs
inc
add
xchg
lock
xor
aad
push
xor
and
movs
jns
push
lahf
das
popf
mov
(bad)
sub
sbb
sub
mov
xor
sub
mov
scas
xchg
mov
or
push
retf
icebp
ret
scas
dec
cmp
cmps
fstp
push
xchg
mov
sbb
mov
add
imul
ja
clc
add
mov
ins
out
sub
xor
xor
xchg
push
test
dec
jecxz
cmp
test
or
retf
movs
sub
mov
jo
adc
add
cmp
js
popf
xchg
cmp
or
sbb
(bad)
jo
cmc
push
sbb
test
dec
test
fld
inc
cmps
icebp
pop
mov
std
cmp
sar
cmp
in
pop
icebp
mov
punpcklwd
out
fwait
aad
sub
dec
sbb
ret
pop
test
cmps
sbb
inc
adc
sub
das
sbb
sub
jg
test
dec
js
test
test
mov
dec
icebp
sbb
shr
test
aad
push
push
adc
jecxz
mov
test
out
mov
(bad)
mov
retf
movs
pop
adc
pop
pushf
fadd
outs
adc
inc
enter
pop
idiv
jmp
push
lock
arpl
push
ss
fimul
lods
ret
aas
int
sbb
push
adc
addr16
imul
loop
mov
mov
push
test
cld
pop
out
and
cli
jbe
pusha
lods
adc
xor
adc
mov
mov
test
ror
ins
into
jmp
out
stos
pop
pop
push
(bad)
cmp
cmp
inc
cmps
ret
aas
fsubr
call
jecxz
jmp
sub
xchg
call
mov
pop
dec
mov
lods
mov
fstp
std
arpl
mov
retf
mov
test
push
or
hlt
cmp
cwde
retfw
adc
sub
push
ins
out
mov
inc
xor
jg
test
add
dec
cmps
stos
mov
and
mov
jo
mov
(bad)
jecxz
xor
pushf
add
pop
sub
and
mov
popa
out
arpl
xor
adc
add
test
xchg
cmp
sbb
push
nop
jmp
rep
sub
jp
adc
iret
jno
xchg
mov
ins
(bad)
mov
in
lods
(bad)
push
out
fwait
stos
pop
in
mov
or
or
mov
mov
inc
xchg
xchg
cli
xchg
ins
movs
pusha
xchg
stc
pop
ins
(bad)
ja
mov
jecxz
jg
std
cmc
push
add
test
push
push
gs
push
gs
mov
sbb
(bad)
fsub
mov
push
inc
and
jmp
retf
scas
ja
mov
mov
xchg
cmp
jno
pop
add
and
mov
jecxz
repz
das
cmp
push
xchg
rcl
in
js
ror
pop
leave
xchg
jno
call
mov
popf
push
push
push
(bad)
and
push
and
sbb
nop
ja
xlat
lahf
ret
mov
movs
(bad)
sbb
xchg
jb
in
pop
shr
push
lds
stos
xchg
inc
cmc
test
clc
dec
jle
add
std
xor
dec
js
mov
xor
push
lods
jmp
repz
in
sbb
call
sahf
adc
push
repnz
sar
inc
add
jno
repz
cmp
sbb
or
imul
and
dec
or
cmps
cmps
sbb
adc
cdq
sbb
cwde
loope
jecxz
dec
xchg
fild
fcmovu
fwait
and
push
cmps
jne
jne
popa
xor
gs
rol
mov
retf
ja
add
shr
jg
les
dec
lock
retf
cli
nop
inc
shl
mov
mov
and
cmp
sub
fadd
mov
mov
jg
adc
ret
cmc
mov
push
lods
stc
pop
xor
jns
cmps
nop
test
push
inc
mov
clc
sbb
test
lds
and
add
lods
shl
lock
jle
cmp
adc
push
cld
movs
cmp
jge
adc
nop
xor
xor
cmp
mov
jmp
imul
fisttp
inc
fild
pop
stos
retf
jno
daa
sub
rcl
add
arpl
jl
sbb
and
inc
and
push
or
jmp
call
mov
fbstp
cmc
xchg
inc
aam
cmp
int3
movs
cmps
fisub
test
cmp
test
in
sti
fs
loopne
mov
sahf
lds
mov
adc
push
pop
mov
shl
cli
push
and
vpshufhw
inc
lahf
jns
cmp
or
movs
fstp
sbb
pop
fsincos
ja
add
loope
call
enter
repnz
jmp
push
and
adc
outs
sub
(bad)
popf
sbb
ins
lods
icebp
scas
mov
mov
mov
fcomp
sbb
movs
or
and
push
push
es
or
xchg
ds
lods
mov
outs
xor
aas
imul
aam
xchg
xchg
xchg
mov
mov
push
mov
pop
add
dec
retf
sub
xor
(bad)
push
cdq
or
xor
call
adc
dec
cmc
rcl
movs
and
xor
jmp
iret
enter
dec
sbb
in
cmp
mov
stc
push
aad
lds
shr
xchg
and
add
jg
and
retf
test
mov
jl
test
and
jnp
and
xchg
test
les
xchg
mov
push
pop
xchg
aaa
and
xor
and
std
hlt
repz
loopne
daa
in
mov
pop
addr16
cmps
movs
dec
(bad)
sbb
pop
lds
xor
lods
js
dec
ror
in
xor
das
cmp
stos
push
add
test
loope
enter
or
sbb
mov
imul
shr
(bad)
ins
pop
scas
lods
jnp
test
sub
stos
adc
stos
jno
inc
mov
shr
inc
add
imul
and
xchg
xchg
push
inc
xlat
jecxz
fsubr
outs
mov
inc
sub
fild
mov
sub
dec
xchg
js
xlat
sbb
jbe
int
or
retf
mov
in
pop
inc
pop
xor
lahf
mov
or
mov
xor
mov
fsubr
aas
push
cmp
mov
xor
push
fcom
aas
pop
sub
sub
repz
dec
mov
inc
in
outs
push
xor
inc
in
xor
pusha
std
pop
or
sbb
shl
rcl
(bad)
mov
js
stos
cmp
add
push
xor
push
fst
(bad)
ja
imul
push
mov
nop
mov
into
adc
outs
inc
loope
call
and
ja
and
imul
and
iret
repz
xchg
aad
in
mov
push
ins
(bad)
call
outs
push
xchg
pop
imul
mov
popf
mov
seto
arpl
ret
in
fcmovne
or
(bad)
fstp
push
inc
jl
mov
pop
dec
outs
cmc
xor
mov
or
jp
sub
mov
xlat
adc
int
mov
push
cld
dec
xchg
je
mov
shl
add
sub
mov
xor
xor
or
bound
lock
(bad)
sbb
aas
lods
sti
shr
sbb
sub
sbb
push
in
push
sbb
sbb
ss
push
jne
add
push
int
call
dec
and
xor
pusha
stos
mov
nop
mov
mov
in
adc
ret
dec
jae
pop
leave
push
(bad)
movs
and
cmp
dec
push
in
je
bound
cli
adc
daa
xchg
sar
call
xor
inc
inc
xor
xchg
out
jmp
into
jge
push
iret
fnstsw
xchg
mov
dec
popa
dec
push
fstp
mov
scas
clc
not
mov
test
ss
sbb
cmps
out
imul
(bad)
in
mov
xchg
clc
sub
movs
cmp
icebp
jmp
ds
mov
aas
add
mov
and
popf
movs
jmp
(bad)
in
jmp
inc
rcr
sub
daa
jb
lahf
add
(bad)
iret
fisub
(bad)
pop
inc
xchg
and
or
rcl
and
test
std
loopne
adc
mov
in
add
sti
js
in
jg
mov
les
dec
xchg
adc
xor
ds
jmp
scas
and
movq
dec
ja
sub
imul
call
jnp
pop
mov
fwait
and
sbb
adc
pop
cmp
or
aad
cmp
js
pop
xor
sti
jge
call
adc
cwde
es
push
or
or
pushf
jl
test
ins
sahf
or
adc
cmp
or
aaa
adc
or
ss
inc
leave
sti
retf
or
push
cmp
cmp
dec
inc
pop
(bad)
cmc
add
pop
rol
xor
jl
scas
push
das
popf
sub
dec
imul
mov
sbb
scas
popa
mov
pushw
mov
retf
adc
inc
stc
enter
sub
loope
adc
mov
loopne
ins
stos
add
add
aam
ror
mov
inc
movs
test
jno
sahf
sub
jb
cli
inc
cmp
aam
icebp
xchg
outs
cli
push
outs
rol
enter
fs
(bad)
ds
mov
mov
xchg
cwde
mov
es
icebp
dec
ret
mov
pop
in
retf
mov
sahf
mov
ds
pop
xlat
sbb
repnz
stc
dec
lods
dec
(bad)
mov
lds
pushf
mov
pusha
mov
repz
repnz
inc
lahf
lods
xlat
bound
cmp
xchg
mov
or
leave
push
sahf
mov
xchg
cmps
xchg
cmp
mov
adc
ins
sub
aas
dec
adc
xchg
jmp
xor
push
xchg
xchg
int
mov
ja
dec
and
push
jle
adc
in
mov
adc
fwait
rol
jl
jnp
aam
retf
movs
or
add
repz
ins
aad
xor
mov
lock
dec
adc
lock
push
jne
popf
mov
xor
outs
adc
and
mov
mov
outs
inc
adc
jmp
in
xchg
dec
add
cmp
and
xchg
push
xchg
clc
cmp
(bad)
stos
shl
les
je
fidiv
mov
xchg
(bad)
xor
push
adc
xchg
lods
mov
sar
(bad)
pop
outs
fisttp
push
cld
jne
fbstp
rcr
cmc
(bad)
push
out
dec
pop
mov
jmp
xchg
fisub
lahf
or
pop
pusha
xchg
retf
add
das
jo
xor
mov
pop
pop
or
dec
jp
mov
je
sahf
mov
jo
(bad)
cmc
iret
clc
call
jg
call
lods
out
jle
pop
ficom
mov
callw
loopne
enter
jne
lods
jmp
xor
js
jle
and
dec
aad
loopne
dec
sbb
ds
repz
cld
outs
(bad)
xchg
xchg
nop
js
mov
mov
repz
fwait
xlat
dec
imul
and
push
jl
sbb
loopne
add
test
or
in
push
cmp
bound
ins
push
retf
jnp
add
push
sub
push
test
xchg
and
push
jmp
mov
loop
sti
dec
and
movs
adc
mov
sar
aaa
aaa
add
in
cdq
(bad)
mov
dec
cdq
jge
cmp
test
cmps
and
and
or
mov
sub
ja
or
inc
mov
cdq
je
xchg
push
das
or
add
enter
neg
pop
leave
add
in
sbb
shl
dec
push
dec
sahf
and
test
fucom
pushf
pop
loopne
or
push
rol
arpl
loopne
sub
xchg
gs
cwde
xor
fs
and
sbb
push
dec
xchg
push
push
push
out
jb
fsubr
sbb
sub
loope
add
out
inc
dec
mov
and
fimul
sbb
cld
je
mov
mov
push
jb
(bad)
pusha
in
sbb
out
or
dec
mov
mov
add
xlat
cmps
(bad)
es
das
(bad)
ds
fiadd
call
int3
jle
fcmovb
and
retf
shl
jns
std
(bad)
jge
lods
mov
pop
mov
(bad)
stos
xlat
aam
int
push
push
std
ins
adc
push
test
pop
rep
pop
adc
adc
lea
daa
clc
or
ret
adc
jge
mov
lock
mov
sahf
and
adc
and
xchg
jno
scas
xor
lea
inc
dec
vminsd
sti
cmp
hlt
into
pop
push
in
ins
push
push
mov
jae
popf
fwait
mov
int3
lea
jl
in
int3
mov
add
shr
xchg
jge
pop
push
repz
lods
fucomi
pop
xchg
pop
rcr
add
and
push
cdq
xlat
scas
xchg
lea
or
mov
jae
mov
add
push
add
in
inc
ins
xchg
push
xor
jb
mov
repz
and
imul
jge
aad
les
and
clc
xchg
(bad)
outs
or
jnp
rol
aaa
jl
pop
jno
adc
fnstcw
cmc
(bad)
add
add
mov
jg
mov
mov
std
imul
jl
xchg
loop
ja
add
cmc
and
pop
fcom
das
adc
cmps
push
jmp
pop
push
addr16
bound
fcmovnbe
jns
pop
loope
cmp
call
loopne
movs
sbb
and
sbb
mov
aad
mov
dec
repz
mov
cdq
call
pop
popf
and
icebp
inc
adc
cmp
xchg
(bad)
call
mov
addr16
mov
ret
in
add
dec
add
stc
sub
dec
xchg
or
arpl
iret
mov
sub
fwait
xor
push
push
fwait
sbb
jecxz
push
inc
inc
sti
sbb
adc
movs
mov
xor
push
xor
mov
xchg
pushf
mov
cmp
mov
add
or
jae
cld
fnstcw
popa
push
rcr
and
mov
mov
scas
cmp
dec
add
dec
cli
xchg
mov
push
dec
dec
lods
mov
jmp
sub
imul
fincstp
arpl
add
retf
and
jmp
lea
or
sar
pop
xchg
mov
mov
xor
fwait
sub
retf
shl
adc
pop
push
mov
ret
imul
test
ficom
cwde
pop
dec
movs
add
repz
pop
sub
in
in
cmps
or
retf
xchg
sub
cs
scas
mov
cmp
xor
inc
jne
ins
dec
cmps
test
int3
dec
pop
xchg
cmp
daa
jo
fidiv
cmps
fist
cmp
shr
pushf
gs
mov
sub
hlt
loopne
fs
in
dec
iret
sbb
mov
sbb
xlat
cmp
cmp
pop
cmp
repnz
push
(bad)
mov
outs
(bad)
retf
xor
sbb
cmp
shr
mov
push
jnp
mov
cmc
call
or
push
ins
pushf
jmp
(bad)
rcl
repz
pop
xchg
clc
mov
add
aam
mov
mov
push
adc
sub
xor
(bad)
stos
pop
daa
dec
scas
sub
mov
jbe
push
pushf
test
pop
mov
out
pop
mov
push
push
in
inc
cmp
(bad)
sbb
lock
cdq
and
fild
mov
les
and
and
inc
jge
fild
xor
and
jmp
loop
jle
sbb
lea
mov
js
cmp
pop
(bad)
pop
add
adc
xchg
call
jmp
cli
cdq
out
jmp
retf
fisubr
mov
mov
(bad)
or
or
fbld
inc
and
mov
mov
(bad)
cwde
fst
bound
ss
pop
adc
dec
jb
ss
sbb
adc
push
dec
retf
arpl
stos
imul
xor
cmp
inc
push
cwde
pop
dec
mov
pop
xor
add
xor
sub
out
pusha
mov
push
push
jno
cmps
pop
stos
mov
mov
adc
aam
pop
and
aaa
jo
mov
or
stos
sub
popa
(bad)
fadd
jp
pop
jle
cmp
stos
add
ret
js
lahf
push
mov
mov
ins
(bad)
hlt
cmp
jp
sbb
inc
sub
and
sub
mov
sbb
loopne
add
and
jmp
shl
dec
rcl
mov
and
pushf
int3
scas
push
test
stc
test
aad
add
out
imul
mov
and
loopne
add
push
pop
(bad)
pusha
out
dec
xor
jmp
(bad)
mov
jecxz
and
pushf
add
jbe
sbb
scas
xchg
jnp
inc
cli
add
jne
inc
push
popa
pusha
das
push
call
mov
hlt
test
inc
nop
jg
in
gs
pop
popa
xor
iret
sti
push
jb
repz
mov
inc
imul
test
mov
fs
add
jbe
test
jb
in
pop
inc
loope
aas
pop
push
lods
jp
sub
mov
jbe
nop
jp
pop
data16
mov
jmp
and
xor
cli
push
jl
xlat
sub
lahf
add
or
push
int3
cld
push
retf
mov
cdq
sti
xchg
pop
mov
push
adc
data16
in
pop
mov
pop
aad
mov
imul
inc
xor
mov
mov
push
std
xlat
cwde
dec
inc
test
pop
cmp
mov
mov
aad
loope
and
pop
(bad)
cmp
cld
and
arpl
push
int
xchg
int
aas
sub
in
ins
pusha
inc
adc
dec
pop
ficom
ins
dec
mulps
ret
add
mov
mov
inc
add
add
mov
jbe
mov
cdq
sbb
lahf
cld
mov
sbb
das
inc
retf
or
sub
outs
stos
out
mov
push
mov
imul
cmp
pop
mov
jmp
stc
jecxz
inc
ror
and
push
into
out
sub
clc
xchg
addr16
cdq
pusha
cmps
iret
add
retf
addr16
push
adc
shr
idiv
test
icebp
iret
jecxz
jns
cmc
jle
pop
cmp
jp
mov
and
mov
push
or
mov
xor
cmp
jg
cmc
jecxz
jge
test
arpl
pop
or
scas
pop
into
pop
icebp
(bad)
jmp
mov
ret
add
jne
icebp
jnp
ret
ret
daa
jno
jp
fbld
dec
jbe
(bad)
fwait
(bad)
cmp
add
cmp
pop
mov
pop
lods
adc
fs
scas
icebp
es
out
pop
and
mov
pop
(bad)
fldl2t
jnp
fst
pusha
jae
mov
xchg
(bad)
ret
ret
out
inc
mov
out
test
popf
push
leave
jo
mov
pop
sbb
icebp
aas
cdq
jb
icebp
dec
sub
call
cmps
out
and
ds
or
ret
(bad)
adc
cdq
in
fdiv
inc
xchg
test
push
xchg
dec
add
out
vorps
adc
lds
loopne
bound
bound
cmps
cs
out
adc
clc
sbb
lahf
test
xchg
mov
mov
call
or
test
jae
mov
in
mov
xor
es
mov
or
les
pop
into
jb
lods
mov
pop
mul
sub
pusha
icebp
xchg
mov
je
mov
retf
mov
in
add
ins
jns
out
sbb
fs
cmp
pop
repz
add
(bad)
push
add
outs
ds
ret
into
ret
mov
add
fbstp
inc
out
sbb
dec
inc
arpl
mov
lods
dec
adc
aam
aad
mov
add
pop
pop
cmp
pop
jp
xchg
sbb
repz
sub
adc
call
in
arpl
cmp
icebp
fistp
xchg
xchg
mov
inc
iret
adc
out
shr
imul
push
adc
adc
push
mov
dec
sbb
xor
fnstcw
xor
push
push
enter
shl
xor
cmp
imul
leave
and
dec
das
iret
stc
cli
sub
pop
inc
fimul
cmp
mov
addr16
pop
cmps
or
pop
out
lock
pop
aam
rcr
xlat
push
hlt
addr16
cmp
dec
movs
xchg
repnz
xor
xchg
jmp
movs
pop
inc
dec
mov
ror
pop
jmp
test
idiv
or
leave
fstp
sub
cmp
mov
mul
bnd
mov
out
lahf
xor
test
inc
mov
xor
or
cmps
scas
das
pop
inc
stos
push
xchg
jmp
xchg
das
dec
dec
imul
jbe
or
in
(bad)
repz
cmp
push
into
das
and
call
dec
and
lods
loop
sub
inc
outs
jmp
scas
mov
push
mov
cmp
pop
or
test
idiv
push
(bad)
pop
mov
mov
pop
or
aas
(bad)
aad
mov
jge
xchg
sahf
pop
push
div
fdiv
or
and
jle
imul
mov
sti
push
aaa
mov
fdivr
outs
repnz
mov
pop
je
scas
mov
cs
(bad)
loopne
and
jge
cld
cmp
outs
sub
in
and
xchg
push
stos
cmp
cmps
lods
mov
jne
pop
(bad)
jmp
push
xlat
add
mov
xchg
jb
dec
sub
inc
mov
(bad)
in
fisttp
inc
xlat
jge
mov
fwait
mov
(bad)
fcmovnb
jno
out
sti
cdq
stos
xchg
sub
mov
mov
outs
push
mov
and
cmp
mov
inc
add
arpl
dec
ja
je
ins
add
lea
xchg
hlt
mov
loop
add
mov
adc
inc
mov
cli
sbb
fcmovne
xchg
push
push
imul
jmp
inc
adc
call
and
sub
push
outs
xchg
sbb
jl
adc
add
lea
(bad)
add
push
and
outs
or
arpl
xor
inc
out
in
pop
pop
aad
push
mov
call
aas
shr
xor
retf
popf
pop
mov
jmp
dec
push
push
ret
mov
cwde
movs
mov
push
ja
sub
push
mul
inc
add
push
cmps
cld
rcr
out
mov
das
jae
sbb
pop
adc
data16
int3
dec
mov
push
and
(bad)
cmp
adc
xchg
mov
xor
or
pop
sbb
lods
aas
xor
jae
(bad)
lock
adc
xor
or
xchg
into
in
xchg
pop
dec
adc
cmp
fwait
ret
cmc
popa
inc
adc
lods
fwait
call
je
outs
xchg
inc
fdivr
fild
jl
lods
mov
add
cmp
aaa
mov
add
xchg
int3
pop
mov
sub
inc
inc
sbb
div
test
dec
push
mov
clc
sub
in
shl
call
(bad)
mov
inc
xor
lea
sbb
sub
movs
xchg
outs
jnp
pusha
test
push
xlat
push
adc
not
data16
shl
push
push
jecxz
popf
xchg
in
fwait
cmp
mov
push
mov
xchg
(bad)
int3
fistp
fbstp
(bad)
push
imul
inc
dec
sub
hlt
mov
mov
mov
into
xchg
scas
cmp
fstp
arpl
xor
dec
(bad)
dec
ss
xchg
ins
cmp
in
mov
and
jle
pop
add
mov
retf
in
in
imul
add
in
lods
dec
mov
mov
ret
into
push
jns
mov
mov
in
jo
mov
out
popf
sub
jae
or
pop
push
loopne
arpl
into
pusha
dec
retf
cld
mov
jmp
xchg
xchg
push
jb
ret
cs
retf
test
push
cmp
mov
add
xor
jl
or
ret
or
fimul
mov
leave
(bad)
(bad)
mov
popf
mov
mov
outs
cmps
mov
mov
adc
imul
outs
sbb
lock
pop
mov
or
cwde
test
xchg
in
dec
nop
sub
cmps
lods
(bad)
cli
mov
xchg
mov
xchg
stos
data16
cmp
or
cli
pushf
dec
ror
jne
inc
cdq
test
or
ja
cmp
ror
movs
aad
scas
test
push
arpl
aad
es
xlat
push
add
xchg
scas
shl
rcl
sar
sub
inc
jmp
dec
mov
fidivr
sub
ins
pop
shr
popf
mov
push
sbb
jg
dec
mov
dec
aad
or
or
sub
inc
xlat
add
jg
shl
and
inc
sbb
mov
cmps
(bad)
bound
mov
ja
mov
jle
mov
xor
std
xor
inc
scas
add
test
adc
(bad)
loopne
out
outs
xor
inc
nop
in
sub
adc
(bad)
inc
or
outs
into
cmps
mov
mov
add
cmps
pop
dec
push
call
add
push
xchg
cld
ins
sar
xchg
data16
sub
dec
mov
in
test
mov
dec
lock
(bad)
shl
in
retf
(bad)
push
(bad)
(bad)
sar
outs
jl
sub
scas
or
xor
arpl
nop
push
cli
aad
aad
mov
mov
pop
je
les
or
sub
in
(bad)
sahf
call
cmps
and
cmp
pop
jmp
fild
jmp
call
fistp
xchg
inc
or
jbe
xchg
cli
loope
aaa
mov
pushf
fnsave
(bad)
loop
das
ds
xor
mov
jp
sahf
pop
ins
fdivr
in
jmp
jae
repnz
fldcw
in
jle
in
lds
ds
enter
popa
popf
(bad)
mov
sbb
cli
dec
je
imul
or
xor
fcomp
pop
mov
sub
aas
imul
or
pop
jae
and
in
xchg
and
(bad)
je
mov
xor
pop
xchg
mov
test
cmp
icebp
(bad)
sub
sub
sub
inc
jns
push
into
and
or
push
leave
pop
or
xchg
or
jno
pop
or
in
xor
mov
jg
jmp
jmp
mov
popf
inc
pop
xlat
dec
ins
into
sbb
outs
dec
or
and
xor
ins
arpl
pushf
call
xor
mov
(bad)
stos
movs
or
mov
or
(bad)
fdiv
inc
push
jne
dec
adc
inc
int3
loopne
jae
fnsave
push
call
sahf
repnz
test
(bad)
lds
pop
aaa
fstp
sub
clc
cli
and
mov
inc
jnp
int3
xor
push
cmp
rol
push
mov
inc
aas
jle
int
or
sub
mov
pop
xchg
cmps
stos
push
(bad)
add
jno
add
lock
out
test
mov
push
or
cwde
lds
mov
adc
or
jg
js
inc
pop
or
ins
dec
cmp
add
dec
clc
fadd
pop
jb
mov
lds
fiadd
retf
fs
mov
jecxz
in
(bad)
aas
sbb
or
inc
fistp
jge
in
out
jo
hlt
push
mov
enter
add
mov
or
jl
and
fidiv
out
inc
jb
sbb
push
inc
cmps
scas
push
sub
icebp
icebp
cmp
pop
(bad)
cmp
repz
sbb
jge
or
les
pop
xchg
hlt
inc
(bad)
loope
xchg
mov
in
iret
loope
js
mov
fdivrp
repz
dec
cld
shr
cmp
mov
ss
inc
jae
lods
fnstcw
and
and
lods
neg
or
aam
lods
call
pop
lock
inc
xchg
and
xor
and
loop
sar
adc
mov
clc
pop
nop
pop
pushf
push
rol
loope
cmp
icebp
popa
sub
imul
adc
(bad)
enter
dec
push
lds
sub
sar
lods
data16
(bad)
jne
enter
sar
push
daa
clc
mov
js
out
or
add
dec
out
mov
adc
(bad)
call
push
imul
das
mov
bound
xor
call
pushf
xchg
fmul
retf
add
lods
cld
pop
and
int3
xchg
jno
test
pop
add
push
fsub
scas
xor
movs
fsubr
pop
jp
mov
into
jo
imul
retf
gs
or
lahf
cmps
sbb
adc
loope
mov
xchg
js
das
adc
jns
push
out
(bad)
xchg
and
lds
push
and
ja
(bad)
je
or
dec
test
mov
and
call
mov
dec
std
push
inc
pop
xchg
dec
into
imul
jecxz
mov
sub
jg
stc
jbe
jo
jle
pop
rcl
jb
mov
lock
in
pop
add
mov
in
retf
jbe
xor
loope
imul
cdq
mov
pop
cmp
daa
imul
rcl
pop
push
in
sbb
jge
lods
push
sti
clc
push
add
test
mov
std
cwde
imul
jns
adc
xchg
add
mov
imul
imul
push
mov
or
pusha
or
dec
dec
int3
xor
mov
push
(bad)
push
mov
mov
mov
push
adc
test
dec
mov
mov
out
sbb
inc
ficomp
xlat
dec
push
adc
jne
movs
sbb
pop
mov
dec
shl
dec
imul
sbb
fbld
cmp
repnz
or
add
ins
add
adc
jnp
lock
push
dec
dec
jmp
mov
or
mov
(bad)
mov
pop
fs
lahf
cld
mov
addr16
out
adc
jg
pop
or
in
xor
cli
test
pop
adc
inc
mov
ss
test
pop
iret
stc
sub
js
mov
call
mov
loop
xor
hlt
xchg
push
push
fcomp
cwde
outs
sbb
(bad)
jp
sub
ret
and
xchg
call
dec
dec
jae
lods
sahf
dec
in
dec
pop
outs
xchg
xchg
dec
fild
das
and
push
or
cmp
sub
cmps
test
lods
xchg
xchg
fiadd
aas
mov
(bad)
test
xchg
ret
out
in
repnz
mov
jge
or
dec
push
mov
sar
dec
fstp
out
mov
sub
mov
(bad)
cs
das
data16
leave
neg
xor
cli
xor
stos
nop
pushf
jnp
push
add
mov
(bad)
loop
cmp
enter
jns
icebp
popf
mov
xchg
ins
sub
gs
mov
(bad)
in
imul
xor
add
cmps
mov
xor
ss
jg
dec
jbe
icebp
retf
int
enter
cmp
hlt
pop
out
pusha
cwde
or
mov
test
sub
xlat
in
fstp
pop
int3
jle
nop
or
xchg
out
inc
ret
idiv
and
int
addr16
rcl
jnp
rol
xor
jmp
inc
push
test
mov
add
xchg
pop
mov
aam
xchg
inc
les
mov
out
sbb
je
cld
stos
mov
or
fdivp
jns
mov
dec
jl
jmp
pop
dec
xor
pushf
pop
(bad)
or
cmp
mov
aam
neg
mov
hlt
jge
dec
inc
push
xlat
fimul
mov
shl
dec
dec
mov
xor
jnp
mov
into
pop
add
cmps
add
inc
xchg
mov
sub
sbb
xchg
cmp
mov
lods
gs
aaa
lods
jge
add
xor
adc
sbb
lods
inc
loop
adc
cmps
test
mov
pop
test
ss
and
mov
or
and
call
shl
jmp
aas
loop
jecxz
jnp
popa
addr16
(bad)
es
movs
mov
or
jns
stos
xor
add
out
add
mov
adc
or
and
(bad)
cmp
lea
sub
jb
ja
fld
js
mov
retf
push
mov
inc
jmp
(bad)
push
mov
test
fdiv
lock
out
pop
mov
mov
xlat
popa
mov
outs
icebp
jb
mov
jae
leave
adc
outs
dec
out
and
je
sub
mov
fucomi
lahf
add
jne
push
dec
inc
arpl
stos
fistp
jne
and
cmp
call
cli
daa
aas
call
repnz
addr16
or
cmps
push
lods
sub
adc
mov
jb
cs
paddusb
leave
ss
push
stc
mov
scas
sub
fdivp
out
sub
fidiv
(bad)
jnp
adc
sti
or
sti
adc
outs
inc
inc
cmp
out
mov
mov
cs
gs
test
lahf
mov
add
xchg
mov
shl
sbb
pop
and
inc
lods
cmp
outs
jmp
rcr
xchg
(bad)
aam
mov
(bad)
push
fwait
rol
iret
mov
adc
or
jmp
and
neg
push
adc
jg
adc
dec
jae
dec
dec
(bad)
popa
xchg
cli
xchg
(bad)
data16
pop
in
loope
ins
test
fistp
cmps
test
cli
cli
inc
ss
out
xchg
pop
aad
(bad)
and
cmp
shl
pop
adc
add
pop
or
mov
push
mov
pop
movs
push
sub
cmps
lock
retf
mov
fs
dec
or
mov
pop
dec
jmp
out
push
ret
xrelease
mov
jno
test
sbb
sbb
(bad)
out
sbb
xor
sbb
daa
mov
int3
mov
std
hlt
jl
repz
int
fmulp
push
cmp
dec
adc
push
push
adc
and
test
and
pop
pop
clc
mov
cmp
int3
and
add
pop
and
adc
inc
lea
sbb
out
fiadd
ds
and
pop
ins
pop
sub
xchg
in
pop
cmp
imul
jne
and
addr16
jle
hlt
cmps
jge
out
ds
mov
cmp
(bad)
out
aaa
xor
and
pop
test
or
rcr
fdivr
test
repnz
fnstsw
mov
mov
and
movs
mov
shl
lods
and
cwde
loop
sbb
test
sub
fistp
jg
pop
dec
(bad)
mov
inc
xchg
fdiv
test
cmp
mov
or
pop
or
adc
jns
jl
sbb
(bad)
mov
fnstsw
pop
mov
popa
ja
stos
lods
inc
xor
inc
xor
jecxz
mov
or
mov
mov
popa
or
(bad)
leave
xor
sti
push
cmp
add
ret
sti
ja
xchg
xchg
enter
or
pop
mov
sbb
mov
lods
arpl
sub
push
sar
push
xchg
in
into
retf
fwait
push
ror
imul
dec
mov
xchg
and
xor
into
pop
int3
mov
pop
cmp
pop
xchg
ror
popf
jecxz
shr
push
cmp
jae
sub
js
push
xor
and
push
jb
rcl
adc
jp
bound
daa
pop
xchg
adc
mov
daa
dec
popa
push
xor
mov
fild
imul
mov
pop
into
ins
stc
xchg
jle
pop
sub
popf
es
xor
or
cmp
jns
xchg
push
ror
sti
push
leave
(bad)
mov
popa
leave
mov
xor
mov
mov
popa
out
xchg
and
jae
out
mov
dec
fs
fcmovu
pop
nop
aas
aad
pushf
retf
icebp
dec
lea
fist
mov
mov
call
xor
or
(bad)
add
add
movs
shl
popa
xchg
xchg
mov
mov
mov
in
scas
icebp
jnp
pushf
mov
ret
push
fwait
cwde
pop
jae
dec
cdq
call
and
test
scas
xchg
mov
xor
mov
repz
sub
imul
out
stos
pop
popf
hlt
test
pop
jo
and
pop
mov
lds
adc
fistp
mov
ret
dec
jno
int
cmp
push
dec
jns
add
mov
xchg
inc
xchg
and
aam
stc
or
mov
fadd
add
inc
ret
mov
clc
mov
scas
adc
push
movs
data16
rcl
fsubrp
jmp
ror
xor
addr16
mov
fst
xchg
ret
call
jbe
lds
jno
sub
pop
pop
popf
imul
mov
adc
pop
and
arpl
push
sub
jmp
fnstcw
inc
shr
gs
cmp
nop
aad
icebp
dec
sbb
and
aad
cmp
sbb
xor
retf
mov
(bad)
sub
jge
dec
xor
push
sbb
ins
sub
aam
shl
adc
pop
test
ret
(bad)
enter
aaa
int3
jno
mov
push
jae
sub
xor
pop
inc
xor
add
sbb
push
jge
mov
mov
cmps
jns
outs
sbb
push
lahf
pusha
push
inc
add
(bad)
int
int3
leave
daa
push
lock
fcmovu
jb
xor
xor
inc
stc
xchg
dec
repnz
pop
pusha
push
mov
inc
loopne
cwde
ins
sbb
popa
cmp
int
push
cld
jp
enter
push
jno
iret
stos
mov
cdq
add
dec
sbb
enter
(bad)
rol
xchg
and
adc
ss
cli
inc
sbb
in
adc
mov
loopne
bound
jg
pop
and
mov
pop
pushf
push
bound
cmp
in
(bad)
lahf
sub
mov
inc
xchg
mov
in
fisub
push
mov
add
inc
sbb
dec
mov
adc
int
rcr
jo
xchg
dec
add
jmp
rol
xchg
(bad)
in
lods
jb
into
mov
outs
add
aad
or
inc
pop
mov
pop
cmps
rcr
jge
add
je
fwait
cmps
mov
test
retf
scas
mov
std
stos
xchg
cmps
frstor
push
retf
push
imul
lds
xchg
cs
test
xor
ss
cmp
imul
retf
mov
aam
unpckhps
sub
scas
lea
loopne
mov
add
adc
or
mov
es
fcmovnb
mov
xchg
or
inc
inc
retf
pop
mov
push
in
mov
cli
mov
xchg
ds
push
mov
fwait
xor
outs
xlat
pop
xchg
ins
or
add
fcom
lock
ss
inc
scas
les
inc
mov
loop
call
sub
pop
pusha
(bad)
(bad)
(bad)
popf
ret
ins
mov
mov
(bad)
fprem1
mov
repnz
mov
cmp
push
fsin
stos
out
jbe
or
mov
pop
(bad)
in
std
mov
pusha
cmp
ss
(bad)
test
sti
mov
popf
out
sub
fwait
add
jmp
jmp
imul
sti
retf
outs
ss
daa
inc
(bad)
js
dec
popf
ret
mov
sar
pop
adc
js
cmp
xchg
pop
(bad)
sbb
int
dec
xchg
repz
and
test
das
clc
pusha
pop
aaa
retf
xor
or
out
std
jae
dec
cmp
ret
jmp
and
mov
or
xchg
outs
xlat
popa
cmp
and
inc
ss
stos
lea
push
jecxz
add
cwde
pop
fadd
ins
and
fnstenv
pop
pusha
cmp
cmp
iret
pop
mov
out
jmp
xlat
das
push
xor
fbstp
ins
ret
add
in
fdivr
xchg
fiadd
mov
xchg
fstp
sahf
and
(bad)
lahf
mov
mov
imul
popfw
movs
das
imul
dec
or
nop
popf
mov
stc
and
pusha
daa
fild
and
lahf
push
or
ja
jns
jb
(bad)
(bad)
jg
ror
test
mov
mov
ds
pop
call
mov
call
xchg
call
sub
aas
rol
retf
(bad)
xchg
mov
mov
jns
shl
clc
daa
and
jo
movlps
add
sub
(bad)
retf
adc
push
fst
push
(bad)
inc
add
mov
mov
mov
push
jo
das
pop
mov
(bad)
icebp
leave
ficom
sbb
pop
adc
(bad)
repz
ins
es
mov
jbe
lahf
je
in
fmul
in
daa
xor
je
mov
pop
push
or
mov
mov
sbb
mov
mov
add
int3
inc
stos
rcl
xor
xor
cmp
arpl
hlt
mov
dec
shl
pop
xlat
mov
test
hlt
movs
inc
out
int3
mov
lods
lahf
sar
push
push
(bad)
sbb
push
pop
pop
test
pop
xor
xchg
loop
loopne
sbb
inc
ins
dec
adc
xchg
push
xlat
pop
mov
push
cmp
xor
jl
and
and
mov
jl
inc
data16
mov
jmp
stos
adc
sub
mov
out
cli
sub
cmp
dec
sbb
scas
stos
push
fiadd
inc
js
mov
and
mov
jnp
jecxz
mov
mov
ja
cmp
push
iret
jne
xchg
or
loope
pmulhuw
clc
(bad)
cwde
mov
jl
outs
test
fcomi
in
jl
ret
and
cdq
jne
or
jle
fisubr
sub
iret
mov
jp
(bad)
arpl
xor
xchg
lahf
or
fs
adc
syscall
popa
ins
jmp
xor
inc
enter
jecxz
jmp
add
lods
pop
data16
jmp
fs
test
int
cmp
adc
mov
push
adc
adc
fldcw
mov
pop
inc
dec
test
(bad)
pushf
pop
call
repz
jns
cmp
xor
sbb
jp
lods
repnz
pop
lahf
push
popf
aam
mov
arpl
ror
xchg
in
js
xchg
adc
leave
sbb
jbe
jno
fcom
test
sbb
out
cmp
inc
jmp
dec
and
add
nop
cmp
xchg
ja
pop
jo
in
mov
fstp
div
mov
mov
bnd
aas
xor
jp
in
ja
inc
das
mov
loope
mov
into
hlt
popa
enter
fst
jg
jne
arpl
sti
cmp
mov
push
mov
sbb
clc
cwde
fidivr
push
inc
add
rcl
push
xor
retf
jmp
jns
cs
cdq
add
aaa
test
neg
cmps
xchg
xor
frstor
inc
mov
fs
jbe
sbb
test
stos
mov
pushf
shr
daa
xor
cmp
call
aam
dec
adc
es
sahf
inc
imul
mov
sub
js
ror
inc
movs
pusha
lock
dec
pop
das
mov
bnd
jg
dec
rol
gs
fs
(bad)
fisubr
add
add
ds
ins
jecxz
int3
shr
push
pop
rol
cmp
cmc
xchg
imul
shl
mov
ret
int3
pop
mov
xchg
dec
xchg
mov
cmp
mov
mov
inc
mov
push
js
movs
ins
je
mov
test
push
mov
(bad)
or
sbb
ret
outs
mov
add
out
mov
lods
mov
lds
jno
push
mov
push
jle
idiv
ret
sti
test
jmp
gs
test
sub
adc
sub
pushaw
mov
add
add
jmp
push
lahf
cmps
ins
mov
jbe
in
test
dec
fucom
les
jb
sbb
shl
icebp
test
mov
cs
push
adc
mov
jnp
ror
loope
retf
add
aam
push
jns
xor
xchg
pusha
cmps
rcr
or
pop
nop
(bad)
mov
fisttp
adc
mov
inc
pop
sti
xchg
cmp
leave
int3
movs
dec
dec
pop
mov
sbb
(bad)
mov
ins
int
xchg
mov
jecxz
jns
sub
lds
adc
out
outs
inc
pop
jmp
cmps
xchg
aad
lods
in
cli
or
lock
ficomp
mov
lahf
push
stc
sub
retf
fcomip
dec
pop
fldcw
fcmove
pop
test
shl
(bad)
in
jne
sahf
stos
mov
jmp
dec
mov
out
push
sub
cmp
push
cs
jmp
aas
lahf
xchg
icebp
xlat
mov
push
call
or
push
in
or
adc
push
mov
retf
cs
sbb
pop
adc
scas
out
dec
aad
nop
stc
arpl
scas
fidiv
dec
mov
outs
dec
imul
xchg
inc
pop
(bad)
stos
sbb
sti
ins
mov
out
or
ret
outs
pop
pop
outs
xor
xor
xchg
jae
dec
and
adc
pop
stos
or
push
imul
or
arpl
lock
mov
add
jmp
(bad)
mov
add
push
mov
std
test
adc
or
mov
push
mov
sbb
or
movs
ins
in
repnz
loopne
(bad)
push
pop
mov
mov
sar
jae
ret
test
jbe
push
stc
cmp
sar
and
lea
mov
fild
into
popa
sub
sbb
aad
nop
loope
adc
or
push
cmps
repz
lock
sbb
cmp
pop
rcr
fcom
test
pop
fldcw
pop
into
stos
or
pop
and
push
bound
cmps
sti
or
lahf
ins
movs
sar
repnz
test
stos
scas
sbb
push
sbb
cmp
jb
loop
mov
movs
add
xlat
stos
xor
jmp
mov
icebp
or
fmul
in
out
push
in
add
sbb
rcl
lods
mov
into
mov
ja
cmp
xchg
inc
fnstcw
shl
sbb
mov
in
mov
adc
cmc
cmp
(bad)
std
xchg
xor
dec
jmp
nop
mov
pop
in
es
sbb
mov
cmp
jl
lock
cli
aam
push
sbb
xchg
xchg
add
imul
pop
ins
adc
mov
call
leave
add
add
(bad)
mov
mov
outs
mov
out
repz
jo
adc
cmp
(bad)
cmp
pop
and
shl
fs
outs
int3
test
pop
jnp
in
xchg
js
(bad)
or
add
(bad)
jns
cdq
lods
shl
cli
adc
sar
dec
call
push
push
retf
pushf
push
pop
stos
mov
mov
push
stos
push
in
fst
and
jne
pop
sbb
jecxz
scas
aad
xchg
mov
clc
adc
out
push
mov
lahf
cmc
sub
sbb
in
mov
sbb
jae
jmp
rcl
scas
or
sub
push
xchg
mov
out
add
dec
clc
rcr
or
fmul
cmp
shl
xchg
test
ja
push
aas
int
and
mov
add
call
aas
fsubr
mov
repnz
retf
and
mov
dec
call
bound
inc
jb
adc
cdq
and
push
daa
cmp
clc
or
jge
inc
sbb
push
stc
inc
jecxz
mov
adc
test
mov
mov
push
dec
lods
fld
sub
outs
out
sub
or
cmp
mov
mov
lock
scas
adc
push
add
cmp
or
in
test
xchg
jecxz
fs
(bad)
shl
call
movs
add
push
js
imul
out
stos
xor
sti
cmp
cdq
mov
lock
loopne
cmp
ins
or
adc
fisttp
pop
movs
cmp
cld
imul
xor
mov
rol
and
xchg
aas
push
fisubr
cmp
sub
cli
sahf
aaa
cmp
xacquire
adc
jl
aas
or
fwait
es
mov
cmp
mov
mov
aas
icebp
lea
mov
(bad)
movs
pop
sub
or
xchg
out
in
sub
(bad)
sbb
jmp
dec
or
mov
sub
fisubr
leave
mov
add
add
cmps
or
ja
mov
cs
jle
push
loopne
xor
ds
gs
loope
mov
xchg
test
aam
arpl
xchg
dec
cmp
and
inc
pop
dec
lahf
pop
pop
xor
push
xor
xchg
cmp
les
jl
and
mov
push
movs
popa
push
sbb
jmp
sub
mov
fimul
jg
sub
sbb
gs
mov
lea
mov
ror
les
or
call
cmp
inc
int3
loope
out
add
or
inc
(bad)
fadd
rcl
test
xlat
neg
out
ins
je
jecxz
and
inc
cwde
jle
push
outs
loope
xchg
xchg
mov
das
idiv
sbb
add
jge
add
mov
rol
sbb
mov
loope
jb
loopne
xchg
push
xchg
jnp
test
mov
shld
aas
repz
mov
push
lea
bound
(bad)
mov
test
pop
xlat
sar
jge
jmp
fld
stc
inc
movs
add
icebp
pop
mov
dec
sbb
scas
in
push
gs
jns
jae
adc
push
jmp
push
(bad)
jp
enter
and
into
(bad)
rol
mov
push
aad
mov
push
inc
xchg
das
mov
out
add
sbb
sbb
retf
cdq
mov
adc
inc
push
and
push
add
gs
(bad)
xchg
inc
enter
imul
jle
fld
dec
lods
aam
or
mov
les
ins
mov
mov
push
bnd
cmps
add
jb
and
movs
and
div
and
jg
les
lods
and
loop
movs
sbb
xchg
pop
lods
popa
lds
cli
in
inc
(bad)
out
movs
jnp
fisub
pop
jo
test
mov
aas
mov
fadd
jo
dec
sbb
js
cmp
add
mov
(bad)
enter
and
adc
call
les
lahf
push
enter
mov
push
outs
mov
and
rsqrtps
push
mov
test
repz
call
leave
xor
push
cmps
pop
sbb
cli
rcl
test
jae
sbb
mov
or
xchg
jle
add
mov
pop
mov
push
(bad)
inc
nop
scas
xor
xchg
inc
mov
(bad)
pop
xor
out
arpl
pop
jg
sub
mov
push
test
movs
add
repnz
cmp
fwait
push
mov
shl
pop
scas
xchg
retf
cs
xlat
cdq
and
(bad)
sub
cmc
jmp
inc
mov
fstp
sub
sbb
or
xor
mov
inc
imul
sub
sbb
sbb
xchg
dec
(bad)
adc
iret
sbb
pop
setl
loopne
je
stos
ja
add
xchg
mov
fld
mov
xchg
pop
cld
cmc
popf
mov
test
mov
jp
or
cmp
mov
push
xor
or
fwait
scas
repnz
push
inc
and
push
(bad)
lods
aaa
jb
mov
fs
mov
mov
cmp
push
xor
sbb
(bad)
mov
adc
inc
jno
fwait
das
test
adc
adc
inc
int
sbb
xchg
out
dec
mov
dec
push
(bad)
cmp
inc
or
popf
arpl
(bad)
int3
rcr
ins
sub
test
call
pop
inc
mov
mov
jmp
pop
imul
inc
xor
cmps
out
add
xchg
adc
(bad)
fisubr
inc
dec
or
shl
pop
xchg
inc
ja
mov
aad
mov
paddusb
push
mov
stos
jl
imul
inc
pop
mov
adc
mov
dec
aaa
xchg
call
leave
nop
mov
shl
pop
ss
stos
mov
mov
adc
jae
push
xor
adc
and
push
(bad)
lds
lock
cmps
repz
clc
test
into
pop
std
dec
data16
add
mov
sub
sar
stos
jmp
ss
rol
or
dec
pop
retf
fsub
cwde
xchg
dec
fwait
add
push
addr16
pop
cmps
mov
nop
cmp
jo
repz
sub
fcom
jmp
jmp
sub
add
cdq
mov
pop
retf
inc
mov
test
mov
sub
ror
mov
sbb
fsubr
daa
leave
or
push
enter
push
outs
cmc
nop
hlt
mov
push
loopne
xor
enter
dec
mov
scas
test
add
in
out
retf
outs
pop
adc
mov
sub
sub
test
prefetch
or
pop
sub
sub
ficom
sar
in
xor
sub
add
fnstcw
mov
push
jmp
popf
jbe
sti
xchg
icebp
xchg
mov
and
aad
and
mov
cmps
jbe
jae
sub
pop
jo
ins
ret
lock
and
add
loope
ins
add
and
int
cmp
sbb
leave
mov
cmp
mov
xchg
cli
mul
retf
xor
xchg
pop
(bad)
sbb
add
mov
push
int3
int
jmp
ins
push
arpl
inc
repnz
cmp
std
pushf
and
cdq
push
mov
add
jns
into
lods
sbb
or
xchg
cld
fist
mov
pop
jecxz
add
mov
dec
into
push
inc
jno
test
mov
pop
xchg
repz
xor
xchg
dec
cmp
add
push
sub
xchg
je
aaa
push
ret
cmp
movs
(bad)
sbb
cmps
or
data16
fwait
push
mov
push
out
cs
mov
adc
push
xor
mov
leave
movs
popf
daa
mul
dec
in
mov
mov
dec
popa
and
dec
retf
ss
dec
scas
jmp
dec
jbe
sbb
jge
sub
cmp
pusha
pusha
cmp
fist
add
cmp
inc
sbb
push
dec
in
test
adc
fsubr
sbb
aad
add
loopne
ret
lock
shr
int3
add
push
pop
popf
cmp
outs
(bad)
push
mov
xchg
nop
push
push
sub
pop
pop
push
imul
mov
stos
pop
sahf
and
out
scas
ds
fsubrp
jno
aas
ds
sub
adc
fdivr
rcr
jle
push
popw
fs
es
cdq
sub
pop
xchg
mov
inc
(bad)
mov
or
jns
pop
xchg
sub
xchg
in
cmp
jb
in
int
jmp
daa
outs
iret
mov
jmp
(bad)
add
movs
pop
hlt
loop
mov
jg
cmps
jmp
mov
(bad)
outs
cwde
adc
in
imul
xor
sub
pop
inc
jmp
test
ja
sbb
pop
stc
mov
cmc
cdq
sub
bound
rcr
sub
ret
xor
xor
ss
retf
pop
ins
popf
stc
dec
(bad)
jmp
mov
aad
fst
or
lods
cs
sbb
xor
inc
fwait
xchg
mov
push
call
push
out
dec
clc
(bad)
push
leave
and
sub
fcmovb
jl
lock
lahf
pop
xchg
xlat
push
ss
push
nop
ins
imul
shr
mov
push
cli
shl
int
lock
repnz
pop
inc
popa
jmp
add
cmp
mov
fidiv
arpl
(bad)
mov
shl
icebp
out
pusha
and
in
es
xchg
cs
pusha
or
icebp
std
and
loope
jge
jno
test
inc
fucomip
adc
sbb
das
mov
sbb
push
mov
xor
into
inc
loopne
inc
out
ja
mov
call
pop
popa
pop
push
xchg
shl
(bad)
popf
add
fcom
push
ret
mov
dec
ja
test
adc
xor
add
mov
cmc
pop
movs
xchg
mov
loop
mov
mov
add
inc
xchg
ja
mov
mov
push
xabort
pop
and
repz
dec
dec
lods
xlat
jno
dec
or
stos
ja
add
push
mov
repnz
dec
cmp
fadd
and
xchg
inc
popf
loope
push
xor
enter
pop
add
xor
jle
rcr
ins
loopne
dec
mov
leave
push
in
cmp
cld
aam
add
mov
mov
cmp
movs
dec
fsubr
adc
mov
(bad)
int3
loop
dec
inc
fidivr
sbb
addr16
shl
fild
cdq
fimul
mov
xor
enter
mov
xor
cmps
adc
jmp
sbb
ja
shr
xchg
movs
aas
pop
or
mov
jp
fisub
cmps
and
and
and
cmp
fsubr
sub
inc
xchg
(bad)
data16
test
push
sahf
or
xchg
mov
sahf
jecxz
xchg
mov
push
in
adc
into
mov
and
or
rol
adc
fild
scas
imul
ins
addr16
out
popf
out
(bad)
dec
push
dec
jmp
adc
mov
mov
push
dec
stos
out
sub
test
popw
push
data16
cli
shl
and
ins
xchg
xchg
pop
mov
fwait
xlat
dec
mov
mov
and
fst
aas
hlt
jbe
xor
mov
jmp
pop
in
fld
das
sub
cld
int
dec
(bad)
mov
(bad)
inc
loop
adc
icebp
das
pop
daa
enter
add
xor
pop
xor
pusha
xor
xchg
cmp
jle
fcomi
jns
pushf
shl
lods
retf
inc
jae
add
dec
stos
cmp
and
pxor
pop
mov
into
xor
imul
cmp
xchg
sbb
or
cli
daa
xor
sahf
xchg
xor
mov
xchg
mov
loopne
xchg
pop
popf
mov
(bad)
xchg
pop
mov
jle
add
push
add
and
xor
rol
nop
add
rcr
or
cli
add
movs
aaa
imul
rcr
cmp
mov
mov
dec
push
inc
je
cmp
mov
mov
mov
loope
push
sahf
and
cmc
lods
sub
sub
mov
fadd
lock
aam
xchg
push
push
sub
fnsave
mov
fcomp
scas
xchg
mov
bound
clc
pop
pop
outs
cdq
gs
or
hlt
mov
or
cmp
ror
mov
movs
(bad)
fisubr
ret
push
and
iret
push
xor
(bad)
aam
xchg
xchg
mov
icebp
clc
mov
popf
call
and
sahf
imul
iret
pop
xchg
rcr
retf
cwde
mov
adc
push
pop
dec
xchg
push
je
xor
test
xchg
(bad)
int3
fucomi
push
adc
dec
fnstcw
jne
dec
mov
hlt
dec
stos
push
aad
fs
sub
cmc
out
rol
repz
jae
ret
pop
out
and
mov
cmp
sbb
pop
(bad)
(bad)
cmp
mov
bound
xchg
aas
popa
jne
push
xchg
ret
xchg
xchg
push
xchg
dec
leave
cld
repz
into
loop
repnz
ss
cmps
adc
mov
jno
sub
mov
dec
sbb
jb
shr
pushf
and
cs
push
xchg
sahf
jp
test
imul
pop
dec
push
fcmovb
sbb
fdiv
add
rcr
les
jbe
dec
jp
jp
enter
xchg
int
popf
mov
repz
(bad)
mov
jmp
gs
cmp
call
retf
fldcw
(bad)
scas
or
or
into
or
xor
outs
(bad)
bound
arpl
jnp
ss
cmp
call
sub
ins
cs
sbb
xchg
mov
jp
mov
jns
push
adc
daa
pop
sub
sbb
sub
dec
mov
adc
ror
lea
sbb
sub
or
inc
inc
dec
ror
repz
push
fldcw
das
xchg
(bad)
call
inc
adc
cmovle
dec
mov
pop
mov
sub
cmp
test
pop
sub
fsubr
xchg
mov
test
mov
adc
push
sub
icebp
test
mov
jmp
inc
mov
sbb
or
imul
or
ret
sub
lods
lea
cmp
inc
leave
xor
pop
cmp
ficom
nop
xchg
stos
jmp
push
or
imul
pop
stc
in
or
jecxz
push
mov
and
mov
sub
fwait
dec
stos
pop
pop
fstp
jp
or
ret
js
and
dec
ds
sbb
inc
(bad)
movs
dec
mov
sar
mov
loope
out
cdq
out
int
jne
push
(bad)
push
pop
push
les
aas
jecxz
imul
mov
gs
cwde
push
push
movs
add
pop
ds
pushf
mov
or
jnp
push
push
loope
sti
js
lock
fs
and
mov
imul
test
xchg
inc
or
jecxz
test
scas
dec
outs
inc
cmp
and
pusha
stos
pop
xchg
js
add
ret
ja
jno
jmp
fisttp
add
stos
popf
mov
sub
fstp
jmp
adc
rcr
jo
add
xlat
cmp
lea
push
lea
sahf
ret
stos
js
outs
cs
sbb
test
mov
push
daa
mov
icebp
test
emms
imul
jle
push
and
pop
push
sub
imul
pop
inc
neg
div
sti
outs
ret
mov
arpl
inc
cld
cld
lea
fs
sub
xchg
test
arpl
sbb
leave
in
sbb
cmp
into
mov
lods
jge
hlt
cmp
getsec
lods
imul
mov
loop
(bad)
mov
adc
add
retf
lock
add
aam
ss
pushf
dec
add
(bad)
aad
clc
dec
add
dec
push
arpl
dec
pusha
fsub
in
jnp
addr16
sub
xchg
xchg
(bad)
fstp
(bad)
retf
inc
fstp
pop
mov
js
sub
hlt
cs
mov
push
mov
mov
push
dec
xchg
jl
and
(bad)
imul
xlat
test
xor
cs
icebp
shr
movs
out
jnp
mov
cwde
mov
cmps
inc
jno
inc
mov
xor
(bad)
jmp
jb
mov
mov
sub
fnstcw
sub
xchg
or
sbb
mov
mov
jnp
xor
mov
push
(bad)
jg
pusha
adc
stos
popf
xor
cdq
lods
add
cmp
push
jp
imul
sti
add
scas
pop
inc
mov
mov
xor
jmp
lock
jnp
dec
push
inc
arpl
push
scas
pop
xchg
pop
push
xor
ret
aad
test
xchg
push
inc
inc
mov
jbe
test
daa
jbe
hlt
push
push
stos
fmul
mov
sti
jmpw
adc
aad
inc
es
push
mov
jmp
jge
dec
fwait
or
add
dec
popa
sub
push
mov
mov
add
(bad)
pusha
sbb
call
mov
and
inc
sbb
sub
adc
ror
push
pushf
arpl
adc
daa
out
retf
jp
xchg
call
sar
pop
inc
add
fdiv
test
jmp
jns
pop
pop
sub
cwde
xor
dec
repz
mov
or
(bad)
fdiv
sub
popf
sbb
repnz
sub
loope
inc
daa
into
retf
idiv
xor
nop
sbb
dec
nop
jp
mov
or
mov
xor
cmp
iret
push
sahf
sbb
int
lea
jp
and
pop
and
inc
repz
sbb
and
mov
dec
push
(bad)
pop
ins
cld
imul
sbb
mov
scas
xor
dec
mov
aaa
push
lahf
push
cdq
or
mov
(bad)
std
mov
and
icebp
dec
fild
les
dec
mov
push
mov
test
push
dec
add
sub
jnp
mov
push
mov
fwait
sbb
or
jo
pop
inc
pushf
repz
adc
sub
xor
or
pop
movs
mov
stc
sbb
adc
xchg
sbb
dec
dec
rcr
xor
popa
int3
mov
lods
dec
imul
inc
pop
mov
fs
xor
data16
iret
bound
mov
fisub
pop
jno
sbb
mov
fwait
sub
inc
mov
ficom
sub
test
fs
mov
cmp
adc
aas
mov
lds
inc
ds
fwait
popa
or
xchg
retf
lds
jns
pop
pop
mov
xlat
nop
rcl
sub
enter
shl
mov
ret
dec
call
repz
xor
fst
inc
shl
mov
std
or
popa
pushf
sub
out
arpl
daa
fldcw
sahf
sub
movs
xor
cli
dec
mov
mov
pop
jbe
pop
pop
shl
ret
jecxz
or
dec
lock
bound
sub
cwde
fnstsw
pop
xchg
push
(bad)
xor
adc
pop
out
xchg
inc
aaa
cmp
pop
pop
std
scas
fbstp
pop
or
xchg
cmp
cmp
popf
stc
and
jle
lds
outs
dec
push
js
call
adc
and
pop
jecxz
pop
jnp
mov
popf
mov
sub
jmp
mov
push
fstp
xor
dec
adc
frstor
sub
movs
rol
es
popf
daa
cmp
dec
push
sahf
mov
push
and
xchg
cs
int
push
adc
push
lds
call
and
jle
sahf
repnz
or
sbb
pop
ins
pop
mov
sub
or
pop
cwde
scas
adc
(bad)
aad
aaa
push
(bad)
lods
es
push
dec
push
(bad)
dec
jne
fwait
pop
out
lahf
imul
stc
leave
xor
(bad)
and
cmps
stc
dec
test
jb
inc
push
jmp
leave
fist
jne
out
sub
sub
mov
inc
dec
lds
cmp
(bad)
lock
bnd
sub
lds
xchg
hlt
stos
js
inc
or
retf
retf
hlt
enter
adc
mov
pusha
adc
pop
sbb
shl
mov
ret
idiv
ret
inc
scas
(bad)
test
mov
into
push
fisubr
jbe
mov
mov
jmp
mov
push
mov
fcomp
lahf
int
test
or
ret
dec
and
dec
xor
mov
mov
retf
xchg
dec
add
outs
pusha
sub
or
xor
mov
add
fnsetpm(287
inc
adc
xchg
or
cmc
cmp
adc
inc
and
ja
imul
rol
cld
(bad)
cmc
mov
cwde
mov
sti
jae
xchg
test
cmp
xor
shl
push
dec
or
call
add
in
lahf
pop
ss
shr
int3
add
repnz
cmp
ds
aam
jb
mov
pop
enter
shl
dec
fiadd
pop
add
mov
adc
ret
dec
fnsave
xchg
inc
pop
mov
and
ins
fnstsw
jne
xchg
inc
sub
add
sub
lods
jns
call
sbb
or
in
cmc
std
stc
outs
test
and
mov
bound
xchg
test
jno
jae
int
jnp
pop
dec
jg
mov
in
pop
ins
mov
test
mov
mov
push
mov
in
sub
dec
push
mov
test
inc
push
mov
or
xchg
dec
xchg
cdq
jbe
pop
loope
ds
cmp
xchg
cdq
jne
add
mov
cmps
fisttp
adc
cmps
mov
xor
ja
adc
sbb
fwait
cli
cwde
add
cmc
sbb
pop
cld
shr
and
jnp
sbb
mov
xchg
sub
add
movs
(bad)
pop
pushf
cs
sbb
int
imul
mov
xlat
push
and
inc
aad
(bad)
popf
xor
add
jmp
mov
call
xor
lahf
test
or
loop
stc
lds
ja
or
mov
add
sti
iret
rol
pop
call
mov
in
fistp
xor
xor
fsub
int
xchg
stc
shl
push
(bad)
leave
jb
xchg
in
dec
shl
jo
inc
and
mov
ja
aaa
xchg
sbb
fsubr
lahf
mov
xchg
in
dec
movs
push
xchg
inc
std
push
fs
mov
clc
jns
add
mov
sub
call
push
adc
jnp
mov
div
mov
dec
push
adc
sbb
ficomp
retf
movs
jb
pop
mov
call
push
test
cmp
aad
nop
mov
lds
mov
in
adc
push
push
test
mov
pop
or
in
lahf
xchg
mov
das
adc
pop
push
pushf
cdq
mov
pop
ficomp
shr
jae
mov
call
jl
mov
call
pop
mov
jge
push
(bad)
adc
xchg
clc
div
xor
les
iret
inc
loopne
test
mov
cdq
bnd
inc
pushf
jnp
add
lds
(bad)
(bad)
adc
(bad)
shr
jle
cmp
push
js
addr16
in
xchg
retf
cli
test
cmp
sbb
push
push
inc
(bad)
(bad)
in
in
fwait
push
dec
cmps
pop
push
mov
cld
mov
mov
add
aad
outs
inc
add
cmc
sahf
or
mov
stos
jo
add
dec
xchg
mov
stos
cmp
jnp
sbb
lea
or
adc
cmc
stos
enter
movs
sub
jno
inc
pushf
cmp
inc
or
out
pop
(bad)
je
jge
jle
push
jg
pusha
(bad)
jbe
push
ins
hlt
xlat
mov
dec
xchg
mov
and
mov
shr
mov
(bad)
mov
adc
and
xlat
test
cmp
add
push
sahf
int3
std
push
icebp
jo
scas
fwait
push
pop
pop
mul
jmp
cmp
and
inc
aam
std
jmp
fist
sbb
pop
and
ror
loopne
inc
gs
or
add
ja
jnp
cmp
das
dec
or
lahf
test
test
fpatan
popf
push
test
xor
mov
cmc
or
int
je
dec
sub
or
sub
mov
outs
adc
pop
sbb
or
icebp
lds
les
stos
lods
push
or
push
or
test
pushf
jmp
int3
cli
lahf
dec
fadd
mov
aad
mov
sbb
jbe
xchg
popa
aas
mov
dec
nop
icebp
shr
sbb
mov
push
(bad)
or
mov
xor
jl
inc
inc
or
cmp
sar
pop
in
rcr
ss
mov
ins
outs
aas
push
inc
adc
clc
scas
(bad)
popa
sahf
into
arpl
leave
pop
les
fst
jle
adc
jmp
or
retf
or
lock
lods
jno
pop
push
jecxz
adc
xor
test
loope
mov
fidivr
and
movs
ins
shl
int3
pop
pop
pop
cmp
push
mov
fcmovu
popf
sbb
fcom
dec
fidiv
jg
adc
add
sbb
inc
lahf
out
movs
sub
mov
mov
mov
(bad)
aam
sar
movs
out
sub
lods
jecxz
sti
mul
dec
mov
stc
mov
js
fwait
clc
xlat
mov
adc
push
jg
addr16
dec
scas
loop
jg
jne
push
mov
cmp
fist
cmp
jl
out
mov
xchg
movs
scas
inc
sahf
fbstp
push
xlat
adc
jecxz
into
ret
dec
cwde
je
mov
aaa
loop
loop
mov
inc
and
jg
movs
jnp
jbe
sbb
hlt
loop
sub
popf
pop
(bad)
ficomp
dec
sub
dec
(bad)
out
std
in
or
dec
xchg
push
jnp
daa
mov
inc
add
xor
pop
push
clc
imul
push
xor
fisubr
out
pop
fidiv
dec
sbb
inc
mov
pop
aad
lods
dec
gs
out
adc
cmp
lods
jnp
pop
out
(bad)
les
adc
mov
jae
enter
push
js
push
mov
push
loopne
out
or
ss
push
and
mov
jno
jl
and
pop
outs
jmp
mov
in
push
test
clc
mov
retf
sub
mov
jne
retf
repz
fmul
cdq
add
lds
hlt
sbb
imul
call
ins
dec
fcomp
lods
mov
test
jle
xor
jbe
loop
mov
mov
test
sub
cwde
jp
push
into
sub
pop
sub
(bad)
stc
aas
sub
(bad)
nop
xor
pusha
out
sti
shr
mov
in
scas
mov
pop
pop
pop
call
movs
in
dec
adc
loopne
hlt
mov
int
cs
pop
call
xor
xor
sub
cmp
sub
or
add
or
sbb
mov
adc
arpl
je
test
jne
xchg
mov
xor
jl
inc
and
jb
ins
dec
pusha
(bad)
jmp
inc
sub
mov
adc
pop
pop
cmps
add
or
pop
cmps
call
pop
and
dec
xchg
cli
mov
xchg
repnz
gs
add
aas
push
push
aas
mov
cmp
xchg
ds
js
test
icebp
leave
scas
and
and
jne
pop
rcr
fucomip
push
(bad)
cwde
cld
xchg
cmc
loopne
inc
test
sub
repnz
dec
mov
pop
xchg
test
pusha
jo
xchg
fcmovne
movs
loopne
sti
cmp
mov
mov
rcl
dec
cdq
adc
popf
dec
js
sub
jo
push
mov
jne
(bad)
and
inc
fild
cmc
pusha
loope
mov
je
and
pop
xor
push
mov
test
mov
and
(bad)
mov
sub
dec
push
and
out
and
and
test
mov
push
jo
sub
xchg
sub
rol
xor
test
clc
xchg
push
imul
es
cwde
jecxz
idiv
fwait
(bad)
xchg
jecxz
not
push
pop
sub
stc
mov
ds
out
lahf
jp
push
nop
std
(bad)
xchg
cmp
xchg
pop
push
xor
jge
xchg
in
adc
mov
xchg
adc
push
inc
sbb
cs
mov
pushf
enter
cli
outs
push
mov
div
lock
inc
cmps
jle
cmp
test
inc
jno
push
ds
jbe
fiadd
push
jb
fwait
aas
stos
add
les
cdq
clc
out
cmp
mov
xchg
fsub
(bad)
int
sbb
jnp
mov
stc
scas
int3
jno
add
push
xor
stc
lea
jge
pusha
mov
or
pop
aaa
sub
movs
adc
pop
leave
mov
out
ja
jns
test
retf
push
(bad)
call
xabort
cdq
jnp
push
cli
nop
and
jp
inc
sub
mov
and
daa
push
je
sti
add
js
jno
cmp
push
ins
xchg
jecxz
xchg
add
ret
adc
shr
rol
fs
hlt
mov
add
(bad)
std
jb
and
mov
sub
push
retf
adc
rol
inc
imul
sbb
mov
pop
in
stos
jle
shl
inc
and
fcmovnbe
mov
xchg
div
imul
out
jmp
add
inc
movs
data16
inc
fidiv
jnp
and
dec
stc
jb
or
jle
ret
outs
mov
fs
or
sbb
jns
data16
pop
push
xlat
inc
xchg
into
xor
fs
ins
inc
mov
adc
inc
mov
rol
arpl
imul
pop
push
dec
mov
jae
jge
push
hlt
and
mov
pop
and
mov
das
std
cmp
dec
cmp
or
mov
inc
add
mov
dec
adc
push
pop
add
(bad)
jns
sar
dec
sahf
aas
xor
ins
push
test
adc
push
pop
pop
and
fstp
mov
jo
outs
sub
in
xor
push
repnz
out
push
adc
jp
pusha
mov
imul
adc
dec
test
mov
pop
add
add
mov
aam
fild
fmul
lods
ss
ins
retf
jecxz
arpl
into
add
inc
dec
mov
mov
mov
test
daa
push
add
mov
mov
xchg
sti
stc
fiadd
scas
jecxz
fiadd
sbb
mov
dec
pop
inc
add
loopne
mov
mov
leave
adc
das
sbb
aad
xor
pop
out
pushw
dec
jne
adc
push
in
xchg
xchg
shr
bound
outs
push
cmp
nop
or
sub
lods
cmp
mov
or
and
mov
mov
jg
lahf
xchg
cmc
push
adc
push
jne
cmp
push
mov
rcr
sub
scas
mov
or
dec
fild
cs
sub
movs
mov
cmc
xchg
rcr
xor
mov
xor
cdq
jbe
inc
je
jo
pop
rcl
add
push
sahf
mov
popf
jae
(bad)
in
dec
adc
xchg
mov
dec
jae
lods
out
scas
(bad)
pop
sbb
data16
mov
test
mov
cmp
adc
jae
ja
xchg
xor
sar
inc
cmp
repz
inc
sbb
addr16
scas
lods
sub
mov
mov
mov
aaa
fistp
push
mov
stos
push
mov
scas
loope
lahf
fisttp
retf
and
inc
push
dec
pop
push
xchg
sahf
out
fwait
shr
sbb
xor
addr16
shl
jg
mov
xor
jo
scas
mov
mov
ja
jmp
xlat
mov
cmp
mov
retf
sub
add
fyl2xp1
add
rol
mov
in
cmps
scas
frstor
test
dec
pop
fiadd
inc
addr16
aas
popf
add
mov
int3
pop
add
or
push
pop
xor
repz
xlat
outs
push
xor
mov
sub
dec
daa
dec
out
mov
jle
xor
adc
cmp
(bad)
aaa
dec
mov
fs
mov
push
mov
push
outs
test
dec
mov
dec
sub
test
rcr
pop
je
xchg
jbe
cld
jnp
ret
ss
inc
cmps
mov
push
dec
jne
mov
into
pusha
sbb
rol
inc
je
pop
xchg
mov
std
in
mov
(bad)
mov
pop
add
cmp
paddd
cmp
xor
sub
mov
push
sub
or
sbb
sahf
int
pop
and
add
cmp
xor
cld
sbb
(bad)
xchg
mov
mov
cdq
lods
(bad)
shl
lods
es
or
pop
push
xchg
and
out
inc
or
push
scas
cs
mov
inc
mov
je
shr
mov
jg
add
xor
lods
in
xchg
lds
cmp
int
inc
xchg
cmp
jl
xchg
mov
and
xchg
retf
pop
inc
stc
in
imul
dec
inc
icebp
xchg
mov
push
lds
popa
mov
mov
xor
pop
into
lods
cmc
stos
cmp
inc
adc
mov
inc
pushf
dec
mov
test
adc
movs
test
out
mov
push
add
jne
sti
mov
and
out
stos
jno
mov
pop
inc
pushw
cmp
mov
sti
test
cmp
sub
test
movs
add
fidiv
fcomi
adc
mov
sub
sbb
aad
imul
js
inc
loop
sub
and
mov
add
(bad)
std
rol
mov
stc
lock
xchg
rol
ins
sub
push
lahf
inc
mov
mov
mov
xchg
xchg
sahf
out
or
xchg
clc
ret
mov
aad
pop
xor
mov
pop
jg
jle
adc
fild
xchg
clc
inc
pop
enter
jnp
pusha
(bad)
std
adc
mov
push
call
fcomp
jecxz
jle
push
inc
cmps
xor
and
int3
int
mov
pop
and
adc
mov
clc
popf
jmp
cmp
cmp
dec
jmp
adc
arpl
stc
push
mov
and
jns
stc
test
xchg
cmp
cld
hlt
xchg
hlt
xchg
pusha
retf
mov
loope
push
add
cmp
std
pusha
pop
adc
out
dec
leave
jne
clc
mov
sub
cmp
ret
(bad)
xchg
sbb
ret
out
ins
mov
pop
test
leave
dec
cmp
cmp
fsubr
push
and
mov
test
sub
push
xchg
test
loope
out
enter
xor
xlat
out
les
ins
xor
stos
pop
and
push
sti
dec
popa
and
sub
xor
ret
cmp
movs
daa
aas
mov
test
push
leave
ss
mov
adc
inc
(bad)
sbb
jle
(bad)
mov
jmp
into
in
cwde
movs
int3
add
shl
cmp
xor
or
(bad)
les
push
loopne
imul
sub
xchg
mov
jecxz
rol
ror
(bad)
gs
stos
rep
sbb
xor
push
retf
mov
xor
mov
pushf
jne
sahf
and
push
cwde
inc
rol
test
sbb
clc
adc
push
loop
rcr
or
les
mov
mov
adc
adc
add
xor
popf
jmp
addr16
add
call
test
xor
xchg
mov
ror
inc
int3
inc
mov
fist
mov
mov
hlt
adc
or
test
pusha
push
in
add
pop
dec
fistp
push
sahf
cmc
mov
and
and
popa
mov
lea
addr16
sbb
outs
xor
mov
cs
out
fcom
cmps
int3
sahf
mov
inc
mov
push
pop
xor
ret
into
call
add
shl
add
bound
jno
add
into
cli
mov
xchg
mov
and
bound
pop
mov
movs
pop
in
imul
lds
in
aam
(bad)
cdq
mov
fcmovnbe
fs
inc
cmp
jecxz
jmp
fwait
js
lods
fld
rol
lds
cmp
sub
mov
xor
xor
xor
sahf
adc
or
cmps
push
popa
(bad)
jecxz
sti
(bad)
jnp
push
inc
leave
nop
push
popa
clc
cmps
lock
cdq
lea
and
mov
mov
(bad)
fmul
lahf
loopne
leave
mov
sbb
push
stc
inc
push
(bad)
andnps
popf
cs
inc
xchg
xchg
or
adc
mov
add
dec
pop
add
ja
or
mov
adc
das
push
popa
movs
jnp
dec
shl
scas
ds
push
pop
sub
cmps
repz
inc
test
mov
js
push
adc
bound
sub
data16
lea
or
or
or
sbb
pop
sub
lahf
in
mov
gs
xor
jbe
adc
int3
pop
xchg
add
movs
daa
jo
pop
test
stos
mov
xor
(bad)
aam
mov
jno
cvtps2pi
jp
repnz
push
pop
inc
mov
pop
call
push
lods
nop
add
fs
shl
xor
(bad)
mov
stos
sbb
(bad)
shl
ins
add
les
out
xor
fwait
pop
jmp
push
(bad)
out
mov
int
sar
je
cli
mov
xor
sub
pop
gs
sbb
not
xchg
cmp
fwait
dec
add
outs
inc
dec
lds
fucompp
cmp
and
dec
xor
ins
mov
cwde
imul
pop
xchg
jmp
mov
cs
push
(bad)
jne
sbb
popa
jmp
inc
xor
mov
push
dec
dec
or
cs
shl
pop
addr16
jno
mov
pop
enter
add
mov
pop
les
sub
in
fbld
out
inc
(bad)
in
mov
jmp
push
test
xor
sbb
and
xlat
mov
cmp
call
popf
ja
scas
mov
movs
mov
sar
sub
xchg
jo
iret
jecxz
push
shr
push
(bad)
mov
mov
xor
rol
aad
aam
loope
or
in
mov
shl
cmps
push
or
push
(bad)
inc
sbb
cwde
dec
mov
fwait
add
fstp
fld
out
ds
pushf
adc
add
test
or
into
popf
mov
inc
pusha
push
xchg
adc
push
imul
leave
or
xor
inc
daa
xchg
inc
icebp
jle
adc
sbb
xchg
sbb
mov
jae
jecxz
mov
xchg
outs
iret
lods
ret
(bad)
int3
pop
xor
xchg
push
pop
daa
mov
dec
rcr
mov
cmps
or
xlat
cld
and
das
fs
xchg
and
push
vpsubq
sbb
dec
xor
mov
shl
rcl
xor
in
mov
sbb
retf
mov
add
js
loope
daa
mov
jnp
test
sti
mov
(bad)
cmp
sbb
sub
and
dec
fsubr
fstp
icebp
pop
pop
fs
es
push
mov
pusha
dec
popa
inc
fstp
inc
pop
pop
or
fiadd
adc
je
sub
xchg
mov
hlt
pop
and
adc
jnp
ficomp
outs
bound
inc
push
push
jmp
cld
int
pop
outs
imul
push
push
(bad)
mov
mov
nop
jg
fstp
or
sub
mov
sub
add
inc
jge
sar
mov
add
jp
ret
push
add
mov
repz
movs
cld
aad
ins
add
mov
stc
iret
mov
inc
pop
jmp
pop
call
inc
popf
pop
mov
mov
pop
js
repnz
in
movs
out
sti
mov
dec
rcr
fisttp
(bad)
dec
and
pop
sbb
mov
mov
push
jmp
mov
aam
loop
iret
sub
bswap
data16
je
xchg
neg
jmp
mov
sbb
fstp
inc
sub
pop
mov
xchg
adc
jo
pop
sub
imul
imul
popa
shr
lea
xchg
or
and
fiadd
pop
cmp
mov
add
mov
movs
push
stos
jae
test
cmps
jg
xor
cdq
push
add
lds
or
dec
in
mov
cli
adc
xor
jns
dec
test
int
sub
jg
push
sub
push
and
fmul
push
fiadd
shl
dec
fnstenv
add
jne
pop
dec
(bad)
mov
leave
jp
jmp
pusha
rol
fcom
mov
sub
call
aas
and
mov
idiv
pop
jae
lods
xor
mov
sub
pop
mov
cmp
push
add
out
popf
ficom
repz
xchg
sbb
sti
out
jge
cmps
shr
nop
popf
(bad)
mov
pop
mov
iret
adc
repnz
push
push
pusha
clc
out
mov
inc
cmp
fidivr
clc
cli
into
dec
mov
cmp
ja
outs
mov
and
inc
mov
ret
or
aaa
mov
xchg
jge
push
hlt
out
xor
mov
ss
aaa
push
or
dec
clc
mov
and
or
hlt
xor
in
sbb
test
sti
arpl
fcom
xchg
mov
sti
outs
push
cs
je
addr16
xchg
enter
dec
or
lds
sbb
fisttp
jmp
sbb
inc
and
adc
imul
sub
add
stc
sti
cmps
and
inc
or
stos
xlat
cdq
aaa
mov
and
adc
push
mov
push
ret
mov
ret
inc
pop
sahf
dec
bound
ins
push
xchg
lock
mov
arpl
dec
(bad)
fisubr
pop
and
in
popf
fs
mov
dec
cdq
xchg
and
pop
clc
push
jb
test
sahf
push
in
(bad)
xor
in
ins
mov
outs
mov
popf
std
(bad)
stc
mov
mov
dec
sub
mov
xchg
icebp
(bad)
call
cld
mov
jmp
pop
loopne
sbb
push
ins
repnz
jns
jbe
test
jl
(bad)
into
xor
push
daa
jae
mov
popf
std
out
add
xor
push
popa
inc
push
xchg
xchg
push
outs
cmp
mov
fucomp
outs
or
outs
xlat
jmp
(bad)
lahf
cs
aad
mov
movs
cld
in
dec
arpl
scas
inc
arpl
icebp
cs
jae
sub
inc
gs
popa
cmp
gs
pop
movs
sbb
pop
js
xchg
gs
ja
pop
push
mov
jo
and
scas
pop
mov
mov
ja
cmp
pop
or
clc
test
adc
loope
cli
mov
iret
fwait
mov
test
sbb
les
inc
std
mov
mov
adc
mov
pop
test
dec
lock
stos
mov
fs
ss
stc
lods
lods
xchg
fwait
shl
xor
dec
jae
jle
inc
arpl
pop
int3
mov
fwait
stc
ins
pop
es
ja
jb
sbb
push
in
scas
int3
mov
mov
mov
push
aas
or
xor
aad
repz
pushf
inc
sub
dec
fdivr
jl
out
(bad)
into
sahf
add
mov
adc
imul
sub
into
sbb
call
aas
pop
std
push
out
cwde
xchg
(bad)
lock
call
outs
mov
fild
cld
inc
jmp
sbb
lahf
movs
pop
cmps
inc
adc
adc
(bad)
sub
bound
dec
div
pop
or
imul
sbb
jno
pop
(bad)
cwde
inc
mov
mov
jae
sbb
neg
imul
add
dec
mov
or
adc
xchg
fs
cmp
test
data16
fs
cmp
push
scas
std
sar
sub
fcmovu
jmp
xor
mov
js
cmp
iret
hlt
imul
pop
cmp
mov
hlt
mov
pop
in
into
mov
xchg
cmp
into
cld
or
(bad)
jno
xchg
outs
mov
scas
jno
push
test
and
cmps
mov
jno
lea
popa
mov
pop
(bad)
(bad)
mov
add
mov
mov
outs
inc
jmp
pop
ret
jbe
jb
mov
daa
push
fsubr
mov
xchg
jne
inc
xchg
add
pop
mov
push
iret
jne
in
pop
movs
adc
push
sub
pop
dec
mov
cmps
adc
std
jge
jg
push
push
and
add
movs
lods
lds
aaa
and
inc
fs
pushf
sti
pop
push
arpl
mov
sub
fidiv
stos
jmp
mov
sbb
or
in
inc
dec
push
int
jecxz
leave
outs
imul
inc
gs
(bad)
je
push
jns
pop
and
ffreep
adc
jbe
and
mov
xchg
push
inc
cmp
fxch
popa
pusha
push
lock
imul
add
dec
xchg
jmp
les
loop
push
pushf
jno
cmp
outs
push
into
into
shl
push
xor
ds
jle
or
push
add
in
aam
cld
cdq
push
aam
push
stos
jg
repz
(bad)
loop
addr16
cmps
popf
mov
xor
push
pop
ficomp
cmp
add
dec
out
bnd
xor
add
lds
es
pop
jmp
xchg
in
repnz
fcom
lahf
jmp
ds
xchg
add
sub
xor
pop
fst
pop
cmp
fcmovb
push
stos
mov
ss
ds
arpl
clc
das
dec
fbstp
icebp
and
xor
outs
call
rcr
dec
mov
das
inc
call
inc
test
push
or
fwait
mov
mov
fs
mov
jbe
sbb
aad
pusha
test
push
cmc
mov
into
pop
cli
or
xor
dec
shr
jmp
out
psubsb
fcompp
fisttp
inc
xchg
(bad)
(bad)
lods
push
xchg
inc
dec
push
leave
pushf
jp
push
loop
and
xchg
jge
and
inc
mov
scas
mov
sar
enter
call
cmp
daa
jne
enter
sbb
sbb
sbb
xor
adc
sbb
pop
out
sub
jg
mov
hlt
daa
cmp
adc
scas
xor
sub
imul
sbb
add
jp
mov
imul
xchg
xlat
push
aas
pop
dec
add
pop
retf
mov
popa
add
jmp
les
jns
repz
test
sbb
retf
add
jnp
or
rol
or
les
pop
out
sub
rol
and
mov
mov
cmc
fimul
sub
fwait
mov
pop
jp
inc
pop
dec
push
cld
adc
mov
mov
dec
dec
push
dec
adc
in
imul
repnz
fwait
inc
inc
inc
cmp
adc
std
jge
mov
jmp
sbb
xchg
or
hlt
in
xor
pop
mov
and
xor
movs
ficom
sti
(bad)
out
cmp
push
inc
mov
out
mov
cmc
xor
mov
test
push
dec
sar
xor
je
out
and
shl
pop
(bad)
fiadd
push
stos
inc
push
outs
repz
icebp
(bad)
ds
mov
jp
push
mov
test
rcl
out
lods
xchg
mov
jae
retf
mov
jae
out
adc
xchg
cli
or
push
ficomp
add
add
sub
inc
sub
(bad)
sub
movs
jle
mov
jbe
pop
pushf
jp
aas
out
(bad)
fild
or
loope
outs
aaa
push
push
lds
(bad)
xchg
mov
cmp
cs
hlt
cmp
sbb
push
out
stos
inc
cmp
pop
mov
mov
sub
int
movs
div
xchg
ss
add
(bad)
(bad)
jno
push
pop
mov
clc
bound
jne
sub
xlat
ja
sub
jle
(bad)
or
fucom
or
jo
aam
cmc
jno
clc
mov
mov
xchg
jge
sbb
mov
stc
jno
(bad)
stos
les
in
push
pop
inc
mov
pushf
mov
push
sub
imul
and
dec
es
cmp
push
and
mov
adc
out
fdivp
in
iret
outs
icebp
mov
popf
add
sub
mov
retf
stc
nop
movs
ret
loope
add
cld
adc
std
out
je
imul
test
or
stos
ds
mov
retf
fsub
gs
xchg
mov
sbb
dec
(bad)
lock
cmps
mov
addr16
mov
jp
cld
repnz
inc
fwait
push
push
push
xor
sub
shl
ins
sbb
xchg
xchg
sbb
push
or
aaa
xor
xor
mov
or
push
xchg
sti
add
mov
add
daa
dec
popa
(bad)
add
adc
outs
fucomp
fwait
dec
cdq
mov
int3
jbe
dec
in
pop
mov
loopne
and
daa
int
xchg
out
pop
popf
mov
daa
sbb
jbe
fsub
loopne
addr16
fadd
sbb
mov
push
retf
aam
and
es
mov
daa
add
(bad)
repnz
mov
pusha
or
xchg
dec
imul
or
dec
and
or
cmp
add
xchg
repz
outs
pop
jl
movs
xlat
gs
jmp
sbb
sar
imul
add
mov
sub
pop
xor
ds
mov
mov
push
push
dec
jae
cmps
and
add
xchg
ins
jnp
aaa
fsub
stos
dec
or
in
ds
test
jmp
jge
loop
mov
inc
cmc
pop
push
loope
mov
mov
cmp
test
pop
dec
fild
sbb
out
dec
(bad)
test
jp
jmp
lock
sbb
and
fidiv
cmp
mov
lds
arpl
cmc
enter
jae
jl
and
adc
jae
cmps
mov
cmp
sub
pop
es
mov
cmp
mov
test
xchg
outs
out
mov
jne
outs
je
push
leave
sub
xchg
xchg
lea
add
jmp
test
xchg
jnp
mov
lea
loope
jne
sbb
das
push
lea
arpl
loop
les
aaa
lahf
mov
sub
into
push
pop
cmp
js
xchg
mov
stos
push
in
repnz
ficom
sbb
push
lea
popf
inc
and
xchg
jae
jb
jns
mov
hlt
dec
mov
icebp
es
mov
mov
in
mov
dec
(bad)
jmp
pop
imul
mov
mov
jge
ror
jae
and
fistp
sbb
dec
test
pop
jmp
mov
mov
push
ss
retf
bound
sub
push
sbb
cmps
inc
push
out
fwait
cmp
(bad)
into
stos
jmp
sub
xchg
jmp
or
ins
cmp
call
push
or
add
mov
ins
icebp
cmps
aam
cmps
std
(bad)
adc
stc
jbe
sbb
les
mov
lea
mov
mov
pop
mov
add
lods
cmp
shr
add
mov
jle
push
ins
push
out
movs
add
nop
or
jo
data16
mov
les
in
outs
outs
mov
xchg
pop
mov
mov
in
test
or
push
jp
fsubr
outs
dec
xchg
mov
add
cmp
xchg
icebp
inc
xor
cld
cmp
ret
and
lods
adc
jecxz
pop
push
aas
push
mov
mov
test
in
(bad)
frstor
jmp
jno
xchg
int
sub
shl
sub
mov
push
dec
cmc
in
ret
add
add
sbb
lods
xchg
push
adc
jmp
fs
xor
cwde
shr
lods
inc
mov
xlat
fidiv
daa
sbb
ss
mov
dec
add
leave
les
je
retf
lods
pop
inc
pushf
pop
outs
out
add
ins
inc
pop
sbb
daa
inc
gs
das
pop
nop
inc
pop
pop
sub
jecxz
inc
movs
stos
(bad)
push
mov
sbb
mov
mov
add
fucomp
inc
rcr
lea
out
xchg
pop
test
pusha
inc
mov
gs
add
mov
aam
dec
mov
mov
sbb
add
popa
adc
aas
into
jg
fcomp
cmp
jge
jns
xor
mov
dec
leave
mov
cld
div
(bad)
retf
cld
test
loop
jae
mov
popa
push
and
cwde
dec
jg
(bad)
jmp
retf
dec
jle
mov
mov
mov
mov
xchg
add
mov
test
addr16
xor
mov
jg
test
jp
push
cmps
adc
clc
stos
jne
jo
xor
imul
push
pop
rol
jno
jecxz
and
ss
(bad)
mov
pop
mov
add
jnp
push
xchg
cmp
mov
dec
mov
in
fild
data16
mov
(bad)
jns
add
in
lds
jnp
cmp
mov
pop
adc
(bad)
dec
data16
mov
sub
push
pop
dec
xor
inc
lea
call
popa
ret
push
shl
imul
fst
sbb
mov
stc
pusha
add
push
(bad)
cmp
frstor
aaa
dec
jo
mov
dec
daa
mov
fcomip
dec
loope
dec
cli
sbb
push
mov
add
loope
fmul
or
push
adc
sbb
jg
and
push
mov
mov
ja
arpl
inc
loopne
mov
mov
push
mov
cld
xchg
add
push
add
ins
gs
or
lea
aaa
push
aad
xchg
sti
stc
and
push
jp
popa
dec
cmp
inc
je
cld
sub
mov
ror
add
arpl
ficom
(bad)
xchg
cmc
scas
push
cwde
inc
pop
cwde
mov
(bad)
in
leave
ins
inc
sbb
ins
enter
jns
jecxz
mov
cli
aad
push
(bad)
push
push
sar
lock
call
inc
xor
or
mov
push
popa
push
stc
pop
sub
push
icebp
add
mov
jb
scas
sub
dec
mov
lock
pop
dec
lock
ss
mov
mov
cmps
jmp
xor
xor
cmps
loop
shl
cld
sub
mov
dec
or
cwde
xchg
loope
sbb
and
jg
enter
pop
imul
shl
clc
(bad)
sbb
pushf
inc
lock
leave
push
int3
pop
imul
and
jb
mov
dec
hlt
and
out
xchg
nop
fnstenv
mov
nop
cli
and
jp
loopne
cmp
adc
and
movs
xchg
push
jmp
xchg
fs
stos
push
push
shl
xor
int
pop
scas
and
jne
cmps
sbb
mov
std
xlat
push
fisttp
(bad)
xchg
retf
jmp
lods
push
jl
mov
out
cmp
inc
in
pop
add
test
mov
mov
dec
xor
enter
cs
lds
scas
jnp
dec
je
pop
pop
(bad)
lahf
in
dec
mov
je
jae
lahf
sbb
fwait
pusha
jo
ret
push
mov
stos
rcr
push
je
and
cli
sbb
test
inc
and
dec
and
mov
mov
xor
jmp
push
push
movs
inc
arpl
or
xlat
pop
and
dec
dec
mov
cli
sub
xor
add
push
ds
jle
test
leave
sub
mov
js
cmps
fcmovnbe
mov
lock
out
jne
dec
sbb
fld
cli
dec
fidivr
cmp
(bad)
xchg
push
lods
scas
sub
int3
adc
aas
es
arpl
push
xor
aaa
imul
adc
(bad)
popf
loop
cs
test
fnsave
or
or
or
fist
call
mov
lds
sbb
fnstenv
inc
inc
pop
std
push
ja
call
push
lods
cmp
mov
aaa
aam
sbb
and
rol
ss
mov
xor
repz
push
add
jno
mov
in
cs
out
fld
mov
sbb
cli
xchg
out
cli
daa
(bad)
sbb
movs
ret
mov
arpl
adc
xor
inc
jno
addr16
adc
shl
fist
mul
(bad)
int
inc
(bad)
fild
xor
push
sbb
mov
cmp
out
jne
test
mov
lea
add
in
call
jnp
repnz
mov
mov
pop
jmp
adc
cmp
mov
dec
mov
outs
push
retf
sbb
in
inc
rcl
mov
repnz
mov
fs
sahf
or
ins
int3
and
push
mov
cmp
popf
out
enter
jl
adc
sub
dec
jecxz
pushf
push
enter
push
jnp
aaa
(bad)
je
add
xor
out
push
das
mov
(bad)
out
dec
push
add
mov
jae
imul
mov
jecxz
and
popa
xchg
cmp
pop
out
movs
popf
cmp
hlt
cmp
push
sub
imul
iret
rol
add
pop
xchg
test
out
mov
sub
push
inc
jns
and
and
in
outs
add
dec
mov
stc
shr
mov
mov
dec
adc
jae
lds
adc
mov
pmaxsw
fimul
jecxz
rcl
jb
sbb
pop
pop
xchg
ss
and
sub
les
jae
and
fisttp
bound
mov
int
adc
sbb
retf
sub
pushf
aam
pop
cs
cmp
dec
loope
ins
lods
sbb
shl
lea
ss
mov
cmp
cmp
add
pop
scas
popa
enter
repnz
mov
add
(bad)
xchg
jmp
mov
jl
bound
mov
inc
adc
xchg
or
out
jnp
sub
pop
cdq
sbb
or
push
dec
cdq
movs
push
(bad)
dec
push
jo
nop
aam
add
les
mov
clc
sahf
ds
sub
xor
out
mov
fisub
int
inc
cwde
push
retfw
pop
loope
les
jno
add
push
and
add
sahf
cdq
addr16
xor
jbe
mov
mov
popa
in
fisubr
fstp
mov
jle
retf
ficom
out
out
jle
shl
mov
xor
rol
push
hlt
or
or
xor
mov
lahf
das
inc
xor
xchg
je
call
adc
pushf
xor
clc
mov
lahf
add
ja
mov
push
push
repz
sub
(bad)
cs
hlt
pusha
iret
movs
inc
xor
sbb
jp
int3
test
mov
pop
rol
scas
or
jg
ins
adc
pop
in
gs
and
mov
rcr
adc
(bad)
pop
push
cmc
fimul
sub
repnz
or
push
sbb
js
movs
(bad)
jge
call
dec
mov
aas
or
mov
inc
pop
test
rcr
scas
sti
cwde
out
nop
xchg
imul
cmp
std
sbb
xchg
adc
popa
add
lahf
out
imul
ret
jbe
dec
iret
mov
clc
jae
enter
scas
jle
push
sti
popa
xchg
push
add
sahf
inc
and
sub
push
cmp
stos
mov
or
cmp
jmp
dec
mov
icebp
mov
pop
pop
aas
or
in
inc
mov
push
test
pop
mov
das
xchg
fsub
shl
mov
int3
mov
push
lahf
out
das
fwait
and
cld
mov
shr
jbe
loop
push
aaa
lods
sub
or
sar
push
dec
sbb
leave
or
jle
push
mov
pop
xor
push
mov
adc
sbb
add
mov
mov
loop
mov
mov
xor
jae
or
dec
mov
adc
adc
loop
ins
pop
jmp
scas
pop
stc
push
call
or
sbb
or
sahf
call
adc
jae
cmp
push
xchg
call
adc
push
mov
pop
pop
xchg
adc
push
cli
and
jbe
sbb
mov
clc
xchg
mov
push
sub
lahf
add
inc
(bad)
mov
lea
push
js
(bad)
xor
mov
repnz
gs
je
mov
fbld
jp
in
mov
mov
pushf
fs
call
imul
pop
mov
pushf
xchg
fucom
ins
dec
jl
out
cmp
nop
cmp
mov
aam
inc
(bad)
ins
xor
adc
jmp
sbb
sbb
dec
test
ds
mov
imul
rsqrtps
sbb
inc
add
or
(bad)
push
ja
aam
xlat
cmp
mov
mov
pop
mov
popf
jl
loop
test
jge
xchg
jge
aas
fwait
push
fwait
cmps
gs
les
lea
dec
scas
lock
sbb
pop
mov
movs
mov
mov
jae
into
adc
cmp
mov
aas
xchg
mov
lds
sub
daa
or
lods
cmp
xchg
push
xchg
sub
loope
add
fst
cvtdq2ps
or
jo
inc
loop
mov
cmp
cmps
rol
pop
cwde
enter
pusha
jle
mov
repz
lock
int
xchg
xlat
call
pop
mov
dec
js
pushf
imul
dec
aam
fsubr
imul
fild
enter
jp
push
scas
(bad)
push
in
(bad)
jno
push
mov
sub
and
loope
jnp
cmps
jl
pop
daa
push
ja
xor
into
ret
xlat
outs
xchg
pop
mov
out
js
add
inc
leave
int
jmp
in
test
xor
daa
test
add
adc
jmp
sub
ror
in
xchg
loopne
sub
sbb
or
movs
dec
push
out
arpl
sahf
jl
sbb
jl
mov
or
aas
adc
imul
mov
sti
jecxz
mov
ins
retf
imul
fcmovne
rcr
mov
cs
popa
scas
inc
push
fldcw
or
and
jno
push
mov
movs
mov
push
inc
(bad)
jmp
(bad)
xchg
adc
jns
jb
arpl
retf
ror
lods
out
in
push
dec
push
sub
cld
push
pop
call
fmul
popa
fcmovnu
inc
test
clc
hlt
pusha
fdivr
jle
inc
jg
jmp
jae
sbb
leave
inc
xchg
sar
nop
mov
or
(bad)
fdivr
push
scas
(bad)
or
ret
mov
and
ins
jmp
sbb
mov
sahf
pop
add
scas
ds
add
fcomp
xchg
push
xchg
loop
repnz
rcr
xor
std
push
aas
jg
jmp
ret
sahf
sbb
test
xor
and
push
leave
ja
pushf
xchg
imul
pop
aaa
jmp
ret
mov
jb
adc
push
fs
sbb
rcl
movs
idiv
sti
ret
retf
test
add
sub
fwait
pop
jne
add
out
mov
push
aaa
inc
(bad)
lods
loope
xchg
int3
jge
scas
loop
mov
jp
lahf
inc
stos
mov
(bad)
and
dec
iret
xor
pop
sbb
icebp
fmul
push
xchg
imul
outs
test
loope
jge
pusha
nop
movs
fsubr
sub
stos
add
mov
(bad)
ret
jae
mov
push
(bad)
mov
popf
inc
xor
sub
jecxz
xchg
pop
dec
imul
in
and
inc
mov
mov
cli
test
(bad)
out
jnp
jmp
ror
popa
inc
mov
je
push
(bad)
jmp
gs
sbb
rol
jae
push
jno
jnp
mov
push
xchg
cmp
sar
cmp
pop
sbb
std
mov
fs
push
int3
mov
call
mov
dec
sbb
enter
adc
mov
imul
retf
xor
mov
in
popf
mov
xlat
dec
pop
les
jl
inc
fucomip
jb
retf
stc
mov
(bad)
(bad)
fadd
fdivr
push
fistp
or
fdiv
js
mov
(bad)
(bad)
cdq
pop
hlt
bound
or
leave
retf
int3
mov
mov
repz
sbb
mov
std
push
xlat
cli
sub
int
jnp
adc
xor
cs
push
adc
and
out
pushf
inc
icebp
call
dec
aas
lods
add
rcr
ret
out
test
arpl
outs
mov
mov
btc
outs
fidiv
push
push
push
xchg
jmp
dec
sub
aas
movs
adc
cmp
adc
xor
std
jae
pop
fwait
scas
mov
fwait
cmp
add
fsub
int
out
add
dec
jnp
adc
mov
xchg
push
dec
add
jnp
in
or
outs
adc
lock
aaa
js
imul
stc
lods
pop
in
ins
push
mov
jg
sub
jge
mov
add
xor
addr16
ret
mov
jg
or
ins
adc
loop
xor
into
inc
js
clc
test
ror
and
mov
sub
lock
xchg
or
xchg
popf
and
sti
shl
(bad)
push
aaa
mov
cmp
jle
xor
push
xchg
sub
call
lods
or
jecxz
mov
mov
addr16
xor
(bad)
repnz
xor
(bad)
inc
sahf
scas
jnp
cs
cmp
sub
das
rol
xchg
cmp
xor
mov
push
mov
sub
add
retf
fsubr
dec
ja
and
mov
inc
push
xchg
sbb
bswap
inc
jg
jb
cli
adc
fwait
and
sbb
fs
pop
lea
sub
jnp
adc
push
add
or
and
enter
out
ror
xor
loope
jae
ret
js
push
mov
fcomp
cmps
jnp
or
dec
bound
loopne
int
dec
and
cmp
sbb
mov
pop
lock
ss
jp
jo
cmps
in
inc
retf
in
xchg
ja
pop
pop
dec
xchg
jbe
mov
xchg
xchg
jl
xchg
mov
sbb
jae
jp
test
adc
mov
jbe
and
fst
inc
xchg
retf
call
cld
or
ret
lea
push
clc
xchg
cmp
jae
pop
ins
in
(bad)
cli
mov
and
pusha
data16
adc
dec
dec
sahf
and
rol
mov
sbb
push
and
pop
(bad)
cmp
pop
inc
inc
add
xchg
xor
enter
je
mov
sub
pop
adc
outs
add
sbb
fcom
outs
push
cdq
pop
pusha
mov
jle
dec
lods
pop
out
sub
vpmaxsw
dec
pop
mov
(bad)
xchg
ret
imul
pop
push
jne
xor
jno
clc
sbb
out
repnz
js
out
hlt
jl
fsub
js
lea
dec
cli
das
adc
pop
jmp
loope
outs
pop
int3
call
inc
or
cmp
ret
sbb
ins
(bad)
and
push
xor
add
push
(bad)
lock
or
jnp
lock
outs
outs
or
sbb
push
and
push
push
sbb
pop
clc
fist
rcl
jne
lods
cmp
jmp
das
and
sbb
pop
push
inc
add
mov
mov
jae
push
jecxz
dec
mov
mov
cmp
stos
inc
mov
lds
ret
js
je
sbb
push
cld
pop
stos
imul
push
mul
sbb
out
rcr
rcl
jp
pop
outs
push
jae
lock
sti
aaa
out
or
cmp
mov
outs
inc
dec
bswap
push
std
test
pop
push
mov
leave
dec
or
add
scas
adc
shl
rcr
cmp
inc
cmp
jno
push
gs
sbb
adc
aad
cmp
ins
test
ror
(bad)
xor
sbb
mov
enter
sbb
pop
fisubr
ja
lods
xchg
stos
push
add
arpl
pop
inc
adc
pop
jge
sub
inc
imul
push
cwde
jae
int
mov
or
inc
jne
(bad)
jg
mov
scas
adc
mov
push
xchg
daa
mov
call
xor
inc
(bad)
push
xchg
adc
inc
fnstenv
xchg
add
add
jo
sbb
sar
or
pop
inc
jae
add
test
mov
pop
jmp
pop
in
jl
mov
or
sbb
pop
inc
add
adc
jno
and
les
jae
jae
shr
je
jmp
mov
rcl
mov
xor
push
inc
outs
push
mov
aas
mul
cmpxchg
sub
mov
mov
fs
out
mov
mov
xlat
xchg
jmp
in
mov
inc
cmp
or
and
mov
scas
outs
clc
in
call
movs
in
push
ds
ss
dec
aaa
jbe
pop
cmp
sbb
les
jmp
fst
repz
sub
xchg
sbb
ror
stos
retf
cli
xchg
pusha
and
outs
cmp
xchg
dec
ins
dec
test
mov
or
pop
xor
(bad)
jecxz
in
stos
aas
inc
in
int
addr16
dec
cs
(bad)
sbb
or
outs
mov
outs
jbe
enter
pop
cmps
pushf
inc
(bad)
cmc
add
xchg
cmp
test
xor
aam
fcomi
stos
loope
pop
into
pop
mov
xchg
sub
push
retf
jge
and
sahf
rcl
mov
fistp
lock
sub
and
out
xor
jnp
(bad)
push
loop
sahf
push
fnsave
sub
push
js
fist
ror
fst
fwait
mov
pop
cmp
xor
movs
mov
daa
ds
pop
jle
push
mov
cld
sub
jmp
adc
pop
dec
mov
fwait
xchg
rol
mov
pop
aas
mov
addr16
out
loopne
and
div
jmp
pop
mov
inc
add
repnz
mov
and
jbe
mov
sub
xor
dec
in
call
imul
pop
sbb
mov
pop
bound
in
(bad)
fsubr
push
mov
je
clc
mov
jne
or
or
lods
outs
call
push
outs
hlt
mov
call
xor
fsubr
sti
dec
popf
jmp
xchg
mov
pushfw
add
lods
out
lods
js
jp
dec
add
repnz
sub
jl
imul
out
add
into
scas
ds
stos
fs
xchg
movs
mov
(bad)
gs
data16
push
repnz
lods
icebp
into
push
cmps
sti
scas
cli
xchg
inc
add
and
fs
cdq
add
mov
lods
in
shr
pop
mov
js
or
mov
loope
dec
popa
scas
sbb
or
jno
dec
enter
shl
mov
out
push
push
jns
xchg
xchg
mov
add
enter
push
scas
inc
in
mov
jae
gs
cmp
out
dec
out
push
cmps
adc
mov
xchg
fstp
or
push
fwait
and
push
mov
xchg
and
ror
es
iret
lock
xchg
xchg
dec
and
xchg
add
jo
lods
call
inc
mov
fild
or
push
test
pusha
adc
in
jmp
mov
xchg
pushf
into
mov
jp
jecxz
cmp
mov
add
cli
jbe
inc
movs
pop
push
fldenv
clc
sbb
(bad)
pop
cmps
xor
popa
es
das
daa
push
cmps
ror
fisttp
mov
call
sbb
in
or
retf
pop
imul
mov
aam
mov
test
nop
and
je
xchg
iret
shl
fild
dec
or
sub
xchg
je
ja
lods
imul
inc
dec
jnp
jmp
add
data16
xor
into
push
sbb
cmps
mov
pop
cmp
jle
jmp
popa
mov
dec
in
and
sbb
fwait
jns
inc
jno
or
cwde
xor
(bad)
dec
not
xchg
imul
loope
adc
jge
inc
mov
mov
rcr
out
mov
cmp
ins
cmp
and
mov
jnp
pop
and
xchg
and
jns
mov
sub
movs
sbb
fnstcw
enter
xor
lahf
dec
jae
mov
push
fcmovnu
xchg
cmp
cwde
cmps
pop
nop
mov
push
out
mov
ss
and
daa
fsubr
test
or
mov
add
div
push
pop
mov
jo
mov
jnp
push
mov
pop
mov
cmp
data16
call
loopne
sbb
loope
cmp
sub
cmp
mov
fld
or
mov
push
mov
aad
mov
pop
rcr
(bad)
mov
or
pop
addr16
xchg
pop
nop
push
jbe
push
mov
mov
int3
inc
icebp
test
sahf
cld
jbe
icebp
mov
aad
icebp
(bad)
cs
or
retf
mov
inc
mov
lods
inc
sahf
vpaddusw
xchg
mov
arpl
mov
push
inc
fst
call
clc
xor
enter
jmp
dec
fwait
les
lds
xchg
xchg
lahf
nop
cld
pop
add
shl
jmp
dec
or
cmp
inc
(bad)
and
rcl
mov
jge
sub
jmp
cmp
jbe
push
out
jnp
fiadd
mov
ret
in
daa
daa
or
pusha
bound
xor
mov
cmp
adc
(bad)
dec
sbb
add
dec
addr16
das
sub
test
xor
jg
nop
adc
call
jne
icebp
sbb
mov
pop
mov
and
and
pop
movs
in
popa
(bad)
lock
inc
dec
fadd
inc
out
sbb
popf
or
add
inc
lds
mov
sbb
and
icebp
scas
fmul
ins
aam
sbb
sub
nop
loopne
mov
std
addr16
adc
fwait
adc
rcr
sub
mov
fwait
inc
sub
dec
push
fidiv
dec
dec
mov
dec
sub
cs
pusha
add
popf
inc
sbb
mov
aas
push
(bad)
imul
dec
(bad)
fiadd
dec
stos
and
xchg
dec
inc
jp
hlt
or
stos
sub
test
jmp
into
outs
or
aas
mov
lds
call
xchg
inc
(bad)
stc
lea
inc
out
retf
stc
ficomp
inc
jmp
sub
clc
sti
jne
inc
push
outs
mov
mov
inc
inc
or
or
les
push
call
hlt
jmp
das
in
in
popf
xchg
adc
icebp
xchg
arpl
adc
pop
es
cmp
lock
jne
pop
pop
mov
cmp
in
cld
adc
(bad)
mov
jp
sbb
mov
xlat
push
add
sub
xor
dec
sar
int3
inc
hlt
in
test
fld
inc
fcom
pop
in
inc
icebp
mov
mov
mov
sub
xchg
es
pop
and
leave
mov
pop
xor
into
cmp
das
je
or
adc
xchg
push
sti
xchg
stos
push
jg
xchg
xchg
jl
mul
mov
sbb
les
dec
popa
fwait
jp
adc
outs
mov
inc
xchg
out
pop
aaa
add
adc
push
pusha
loope
inc
je
jnp
mov
jnp
in
fadd
push
push
adc
and
fld
ins
pop
cmp
mov
and
xchg
add
aam
mov
xchg
sub
aaa
or
dec
and
(bad)
cwde
ret
mov
xor
dec
pusha
jnp
and
ret
pop
mov
aaa
fxtract
nop
aam
add
sbb
ror
dec
push
xchg
ror
fstp
mov
or
jbe
lahf
sbb
inc
cmp
adc
cwde
jcxz
ficom
call
push
xchg
push
mov
test
out
sub
xchg
xor
ret
cmp
mov
mul
iret
out
stc
fimul
out
ret
mov
push
xchg
jno
int
sbb
dec
mov
mov
clc
inc
sub
push
pop
or
call
adc
in
adc
data16
xor
fisttp
pop
addr16
les
stos
xor
mov
js
sar
imul
aaa
mov
inc
sbb
jno
test
aam
inc
fmul
cmp
push
sub
mov
comiss
lods
and
cdq
mov
imul
aas
mov
pop
mov
and
jo
aaa
cs
or
dec
jbe
lods
rcl
xor
in
or
sbb
fsub
dec
out
or
call
jbe
fadd
inc
lods
pop
jg
xlat
loop
jb
(bad)
push
add
xchg
jne
or
xor
mov
ror
pop
inc
icebp
scas
fmul
sub
push
xor
shl
xchg
push
jg
jb
hlt
xor
mov
rol
ficom
sti
push
fwait
ret
dec
imul
cld
das
cmp
cmp
push
in
cmp
jl
ds
jp
mov
popa
addr16
movs
daa
push
mov
mov
add
hlt
xor
daa
hlt
xchg
cmps
xchg
lods
cmps
loope
imul
retf
add
pop
int
movs
pop
retf
(bad)
sub
loopne
in
test
je
pop
fcmovu
inc
inc
pushf
add
and
mov
jmp
xor
cld
fcmovbe
outs
push
shr
and
jecxz
loopne
jg
add
dec
mov
push
mov
jnp
popf
mov
mov
fidivr
jmp
pop
pop
repnz
mov
mov
xor
leave
pop
xor
ins
push
xlat
add
xchg
retf
xchg
popa
nop
sub
xlat
lock
adc
fdiv
xchg
sahf
xor
bnd
pop
mov
mov
rep
rol
jmp
repz
xlat
push
hlt
daa
sbb
out
sbb
icebp
inc
rcr
mov
push
cmp
mov
leave
lds
daa
xor
addr16
and
mov
xchg
add
ds
push
sbb
inc
(bad)
xlat
icebp
push
push
jl
mov
in
fwait
daa
ins
sub
ss
xor
xor
xor
test
pop
cmc
pop
cdq
call
mov
dec
sbb
xor
inc
mov
(bad)
rcl
push
popf
mov
push
gs
mov
dec
aaa
jl
shl
xor
xchg
fnstcw
leave
iret
add
rol
inc
imul
mov
fsubp
jmp
mov
mov
dec
sbb
sbb
je
(bad)
mov
or
or
rcl
cmp
cwde
jge
push
or
fiadd
jg
push
es
add
mov
jbe
(bad)
shl
retf
das
mov
and
xchg
dec
addr16
push
cmp
inc
(bad)
(bad)
jb
mov
pop
test
and
cmp
jg
sub
lods
cmp
inc
mov
jbe
mov
add
ss
xor
fs
js
cdq
aas
jbe
sar
sub
in
sbb
jg
mov
sub
xchg
cmp
mov
loop
test
xchg
sub
mov
add
sti
mul
push
mov
sub
push
jae
mov
call
retf
popa
sti
push
inc
mov
rcl
lea
jo
pop
in
jmp
dec
mov
add
call
loope
aad
and
int
inc
pop
inc
inc
xchg
aas
mov
push
cwde
fldenv
dec
jo
stos
mov
jae
ss
add
pop
pushf
dec
and
mov
adc
sbb
inc
cmps
adc
(bad)
dec
mov
add
sbb
sahf
fmulp
adc
cs
rol
in
dec
adc
cmp
xchg
add
push
mov
inc
xchg
push
jo
test
and
fsub
movs
mov
popa
daa
lock
inc
and
ins
pop
pushf
and
dec
xchg
aad
ror
cmp
rcr
pop
mul
enter
mov
pop
ja
sub
and
(bad)
push
ss
xchg
ror
xor
pop
jns
fidivr
xor
out
mov
repnz
out
iret
jb
pop
xor
dec
icebp
jns
ins
rep
pop
mov
xchg
xchg
lds
das
mov
jle
arpl
stos
out
jno
or
shr
sti
push
(bad)
push
and
ds
sub
add
fsub
fs
add
inc
and
les
cli
dec
mov
xchg
in
ds
pop
cdq
jl
or
adc
mov
xor
cmp
jns
inc
ja
jmp
mov
mov
xchg
sbb
(bad)
mov
sub
pushf
add
mov
mov
mov
or
sub
jge
jecxz
dec
in
fstp
pop
cmps
stos
sub
jo
test
fisttp
adc
daa
sahf
sbb
jno
mov
ins
push
outs
jae
dec
mov
int
movnti
neg
mov
or
cmps
(bad)
xor
add
inc
pushf
xchg
jb
popa
xor
shr
loop
add
jne
rcl
lea
out
cli
dec
dec
movs
inc
push
mov
jmp
jnp
sbb
inc
retf
mov
gs
dec
out
mov
pop
mov
inc
xadd
dec
sub
mov
sbb
rcr
xchg
sbb
ret
push
cli
and
out
add
cwde
mov
retf
cmp
or
pusha
fnop
or
arpl
xor
sub
jmp
stos
icebp
pop
or
ffree
push
(bad)
cmp
ds
xchg
add
sub
add
in
lds
xchg
push
or
fistp
add
and
cmp
jmp
and
and
pop
pop
add
sbb
mov
mov
jns
cmp
push
shl
sbb
add
call
cld
addr16
jecxz
xchg
data16
cmovge
dec
and
sbb
fsubr
call
mov
call
add
push
sar
xchg
push
out
int
inc
jg
sbb
sbb
cmp
cmp
call
rcr
mov
fmul
xchg
sbb
scas
std
adc
enter
pop
popa
out
mov
xlat
ret
mov
out
sub
pop
xchg
gs
outs
push
cmp
cmps
cld
pushf
loopne
xchg
push
adc
xor
cmc
dec
adc
loop
xchg
(bad)
(bad)
rcr
ins
push
ja
sub
sub
add
mov
int3
adc
xor
(bad)
mov
movs
or
and
ds
push
(bad)
xchg
test
mov
xchg
push
xchg
xchg
pop
adc
(bad)
fcom
scas
fcmovnb
push
or
jl
fisttp
out
mov
xor
xchg
movs
add
jp
xor
cwde
aaa
in
mov
sbb
xchg
(bad)
push
or
and
sub
test
mov
int
mov
(bad)
cmp
and
pusha
imul
pop
xchg
popf
xchg
pop
call
cmp
shl
inc
cld
xchg
cmps
or
pop
jle
(bad)
or
cld
or
fs
pushf
xlat
iret
lahf
(bad)
scas
xchg
mov
scas
test
adc
jp
int3
daa
mov
ror
cli
and
das
fnstsw
in
lods
loope
pop
xor
add
in
cmps
fld
xchg
loop
movs
call
mov
(bad)
xor
xchg
and
(bad)
clc
mov
stos
jnp
call
mov
and
sar
in
cmp
push
dec
popf
out
push
fstp
aaa
sub
inc
popa
clc
jae
dec
mov
cwde
or
ss
aaa
cmp
mov
out
sub
sbb
inc
push
cmp
rol
(bad)
movs
xchg
cmp
(bad)
push
mov
adc
dec
pop
and
jmp
dec
mov
shl
retf
push
jp
in
das
test
jno
xchg
pop
cmc
test
jg
(bad)
jmp
xchg
test
bound
push
or
hlt
jae
push
outs
mov
lds
lahf
out
ror
sub
test
sbb
bound
loop
and
cli
ins
in
adc
xchg
add
mov
sti
(bad)
ins
xchg
mov
push
repnz
test
ret
mov
cmp
add
shl
pop
loop
cmps
xchg
push
dec
mov
neg
lds
(bad)
jmp
sbb
xor
inc
mov
call
mov
hlt
adc
cmp
(bad)
mov
adc
or
jbe
pop
out
loop
fisttp
and
push
mov
jecxz
mov
sti
sar
jne
outs
cli
aad
movs
in
xchg
outs
mov
add
pop
dec
jne
pushf
xchg
movs
loope
or
das
sub
push
sbb
push
pop
cmps
ret
sub
fist
in
dec
push
loopne
scas
aas
xchg
shl
and
mov
mov
sbb
test
hlt
imul
aam
repnz
aaa
inc
nop
popa
mov
sub
test
addr16
fcmovu
inc
xor
mov
fisubr
not
xor
xor
imul
push
cmp
(bad)
fwait
popa
pop
stos
inc
retf
test
clc
jno
and
cwde
scas
jmp
mov
xlat
retf
adc
das
cmps
test
xchg
mul
and
dec
mov
out
inc
fidivr
mov
loopne
jae
cmp
ins
icebp
or
pushw
add
xchg
cwde
adc
mov
add
(bad)
and
mov
sub
and
imul
mov
jge
inc
and
jge
push
mov
xor
sbb
pop
xor
jb
(bad)
aad
imul
mov
popa
xchg
and
xor
xor
jp
pop
jle
shl
dec
sbb
sti
fst
ss
imul
mov
and
dec
mov
call
sub
xchg
cmp
(bad)
sbb
pop
or
add
sbb
push
imul
xor
fild
lea
les
aaa
pmaxub
into
call
sbb
or
and
mov
outs
ins
sbb
rcr
(bad)
mov
pop
mov
fdiv
mov
sbb
sub
cmp
pop
mov
(bad)
jge
rcl
dec
mov
fbld
ins
hlt
fst
mov
sbb
xchg
mov
xchg
into
dec
cmovl
jns
jmp
mov
hlt
sahf
jno
dec
imul
popf
xor
jbe
push
cmp
inc
popa
mov
add
mov
std
pop
inc
daa
inc
adc
pop
ror
dec
addr16
cmps
cld
inc
jne
and
xchg
pop
jl
cmp
in
stos
xor
sub
mov
dec
mov
mov
ror
es
(bad)
ins
test
mov
push
pop
std
xor
mov
shr
(bad)
dec
stos
xor
frstor
pop
ret
jp
imul
mov
je
cld
xor
shl
push
or
mov
cmp
mov
dec
hlt
xchg
xor
push
call
mov
clc
daa
les
fisttp
xor
lock
mov
jge
sub
fs
adc
fnstcw
dec
fidivr
pop
push
mov
ror
add
xchg
mov
push
in
(bad)
mov
hlt
shl
and
and
addr16
xchg
xchg
sbb
ins
xor
push
and
test
popa
sbb
and
cwde
and
mov
mov
mov
push
rcr
jno
xor
js
mov
and
imul
cmp
and
neg
(bad)
ins
dec
push
add
mov
xchg
dec
ja
jno
movs
pop
inc
push
inc
mov
mov
sub
rol
push
mov
or
in
mov
ds
push
ds
mov
data16
dec
into
fldcw
cwde
sahf
pop
push
fstp
and
ret
add
and
and
shl
imul
and
mov
and
mov
call
sbb
and
dec
in
movs
sahf
jecxz
pop
cmps
mov
sbb
test
jmp
sub
stc
sub
ret
lahf
sti
push
cmp
inc
mov
repnz
mov
pop
xor
xchg
sub
dec
enter
lods
sub
mov
fdivr
int
and
xchg
inc
imul
or
xchg
test
in
sub
mov
inc
fist
jb
sub
pop
sbb
nop
mov
imul
and
clc
pop
pop
cmps
or
dec
push
aam
mov
les
mov
push
shr
xchg
jo
and
sbb
cmps
lock
add
scas
mov
mov
fsub
jno
(bad)
(bad)
adc
lods
add
and
fdivr
cmp
(bad)
ins
add
inc
adc
or
ret
pop
out
push
sbb
retf
ds
jg
stc
clc
and
aam
xchg
xor
dec
pop
mov
xor
pmulhw
push
(bad)
jge
nop
jno
pop
aas
scas
ja
jnp
stc
pushf
(bad)
hlt
inc
(bad)
(bad)
jecxz
inc
mov
add
daa
mov
push
push
mov
cld
jne
rol
shr
das
not
cdq
cmp
mov
call
cmp
mov
mov
pop
xor
jbe
mov
pop
test
mov
mov
cdq
scas
loope
push
ins
clc
sub
dec
lea
mov
sub
add
sbb
repnz
or
icebp
or
gs
(bad)
repnz
mov
mov
sti
inc
iret
add
clc
mov
dec
sahf
aaa
inc
sub
jge
jns
xchg
inc
push
cmp
jb
fild
jno
retf
dec
cmc
mov
mov
imul
inc
jp
popf
mov
dec
add
jl
xchg
and
mov
cmp
(bad)
xchg
cmp
sub
addr16
push
and
mov
dec
and
sub
repz
pop
push
aas
sbb
cli
cmp
inc
lds
push
inc
test
mov
mov
xchg
or
idiv
fcom
fbld
xchg
push
push
or
sbb
fs
jecxz
mov
test
lods
cmp
shr
ins
mov
cmps
sub
xchg
pop
fnstenv
call
std
inc
into
mov
icebp
and
and
data16
dec
dec
repz
pop
xchg
sbb
mov
fsub
dec
mov
jbe
fstp
je
ins
dec
cmp
mov
push
(bad)
jg
out
popf
xor
inc
imul
sub
out
imul
xor
or
add
movs
sub
mov
cmp
mov
arpl
in
inc
addr16
jb
fcmovnb
mov
repz
and
je
cld
add
pop
inc
fist
je
xchg
push
repnz
adc
dec
ins
aad
sub
movs
mov
test
add
dec
jmp
sub
push
(bad)
imul
xchg
test
outs
mov
mov
cld
enter
arpl
cwde
out
jb
push
adc
or
iret
xor
jmp
push
inc
not
mov
adc
addr16
cmp
call
imul
adc
shl
enter
jecxz
cwde
sub
xchg
cmps
fwait
retf
xor
sub
stos
or
fwait
ins
push
int
sbb
pop
push
int3
fdivr
repnz
xchg
push
inc
sub
push
and
fdivr
inc
stc
stc
push
sub
xchg
inc
out
adc
push
add
faddp
out
mov
shl
adc
inc
cmp
sbb
adc
sbb
jnp
jge
and
push
(bad)
pushf
pop
jmp
sub
inc
adc
push
std
je
dec
call
repz
push
repnz
into
fwait
call
in
in
dec
cmps
call
pop
xchg
mov
pop
retf
ret
push
mov
pop
dec
bound
leave
cmp
mov
aaa
fcom
dec
dec
inc
adc
mov
aad
ins
pop
test
add
(bad)
js
outs
mov
out
dec
jp
dec
stc
xor
xor
push
or
retf
mov
inc
leave
mov
or
imul
xor
xchg
inc
add
mov
sbb
std
or
lea
jb
movs
ret
sub
outs
sti
popa
je
add
push
add
mov
cmp
jnp
sbb
hlt
rol
dec
loope
icebp
ja
repnz
loop
cmp
dec
lds
or
ffree
jnp
in
cmp
into
lock
jge
jecxz
(bad)
sub
and
jecxz
ret
mov
into
gs
adc
adc
repnz
call
loope
cmps
out
dec
jno
imul
mov
call
dec
or
cmp
dec
mov
hlt
and
leave
pushf
in
in
(bad)
in
sbb
out
mov
fisub
adc
xchg
adc
daa
sub
jge
adc
sub
dec
popa
xchg
cmps
(bad)
in
call
popf
and
scas
fbstp
mov
fstp
cli
xor
dec
pop
retf
aaa
mov
sub
jmp
sub
mov
mov
fisub
adc
sub
enter
leave
dec
test
xchg
mov
bnd
add
sbb
jae
push
mov
fwait
stos
or
imul
fild
inc
test
mov
cmc
icebp
inc
xchg
push
mov
mov
push
icebp
or
das
xor
lahf
ss
imul
loope
cmp
aas
mov
or
aad
js
cmp
jge
mov
int3
sub
dec
jno
push
adc
adc
aas
lds
sub
or
stos
mov
ror
sub
icebp
int3
mov
mov
mov
test
dec
ds
jmp
iret
pop
lahf
pushf
lock
jno
dec
sub
inc
pushf
outs
scas
cmps
lock
clc
sub
into
movs
fs
fs
sbb
mov
lea
xor
sub
or
nop
add
sub
rol
nop
out
ins
repz
js
mov
pop
inc
mov
ret
xor
pop
xchg
loopne
cmp
adc
dec
(bad)
aad
xor
(bad)
add
xor
jle
movs
out
inc
enter
jae
sbb
mov
or
cmp
test
and
imul
icebp
bound
nop
movs
push
sar
mov
int
(bad)
cs
(bad)
sbb
mov
sahf
pop
jmp
loopne
repnz
mov
push
call
dec
mov
pop
int3
outs
xor
xor
out
dec
add
pop
cmp
xchg
sub
xchg
sub
add
scas
and
or
xchg
test
pop
mov
adc
mov
scas
cwde
fdivr
pop
cdq
push
mov
arpl
pop
in
sbb
cmp
ret
inc
jmp
icebp
xchg
cmp
cwde
pop
push
fwait
mul
mov
cmp
mov
cmc
cmp
icebp
push
nop
cmp
ins
pop
addr16
cmp
or
fiadd
jle
cmps
add
lods
cmps
or
cmp
test
addr16
rcr
addr16
cmc
sbb
iret
hlt
jecxz
and
dec
push
mov
bswap
out
aas
mov
or
gs
cdq
jge
mov
sbb
call
cmp
outs
adc
mov
sub
repnz
jo
lahf
mov
dec
pop
or
xor
mov
cmp
push
bound
sti
xchg
add
jno
pop
arpl
nop
inc
cmc
mov
scas
in
enter
fdiv
movs
xchg
shl
stos
xor
inc
out
cwde
push
popf
inc
dec
mov
mov
fstp
out
nop
cmp
sbb
adc
pop
mov
idiv
inc
xor
mov
mov
dec
dec
xchg
pop
push
ror
leave
popa
mov
inc
imul
sahf
(bad)
mov
stos
cmc
nop
push
xchg
ja
ins
ja
fs
cmp
mov
hlt
imul
add
push
xchg
lds
mov
sahf
btc
lea
repz
stos
xor
pop
fnstsw
les
fcom
(bad)
mov
scas
cmp
loopne
ror
clc
inc
test
scas
(bad)
and
pop
sub
push
or
adc
jno
sub
jmp
cmps
fadd
pusha
pop
cdq
push
std
adc
stc
adc
or
add
call
cmp
dec
cld
lahf
mov
stos
adc
icebp
jp
popa
xor
dec
xor
sahf
and
dec
sub
(bad)
xchg
jbe
fiadd
sub
or
xchg
jb
pop
icebp
adc
test
daa
sbb
daa
popf
int
fs
xlat
(bad)
mov
fnstenv
xlat
pushf
jmp
xor
or
push
call
push
push
les
in
sub
pop
mov
aas
sbb
out
dec
mov
dec
jns
out
adc
jecxz
into
call
mov
idiv
aad
outs
frstor
std
push
mov
jge
stos
(bad)
adc
jge
jmp
sub
and
(bad)
cmp
test
into
dec
mov
mov
and
and
out
pop
sbb
inc
je
sub
jns
or
or
jnp
push
pop
dec
push
pop
pusha
pop
jle
lahf
ja
add
lods
lock
cmp
jo
(bad)
in
imul
mov
idiv
xor
and
pusha
repz
int
iret
ret
repnz
loopne
fwait
test
add
inc
shl
loope
push
frstor
jmp
pop
mov
mov
mov
fdivr
xor
inc
sbb
jnp
mov
sar
push
push
or
leave
sbb
outs
mov
repz
fstp
pusha
mov
or
jae
sbb
add
fistp
and
add
lea
data16
shl
(bad)
jmp
xor
mov
pop
mov
mov
push
popf
aad
jae
imul
pop
mov
(bad)
sbb
popa
outs
xor
xor
imul
lahf
inc
push
ins
dec
out
push
jge
inc
iret
ret
cmp
rep
movs
inc
arpl
and
mov
call
inc
sahf
aad
ds
ds
pop
xchg
mov
xchg
test
push
gs
sahf
xchg
ret
cli
cwde
div
or
pop
adc
fmul
scas
scas
sub
adc
sbb
jo
jbe
dec
and
cli
loopne
and
ret
mov
jns
xchg
jg
inc
jo
imul
mov
sahf
pushf
leave
or
cli
inc
dec
into
sub
adc
mov
xor
sub
xchg
clc
fild
fadd
lea
inc
mov
cmp
pop
sahf
push
imul
xchg
jmp
scas
inc
ins
dec
je
sbb
cmp
xchg
fisubr
push
cmp
test
sub
test
enter
movs
movs
mov
icebp
pop
stos
xchg
xor
stos
cmps
pop
imul
ja
push
dec
mov
fsubr
push
or
xor
inc
(bad)
fdivr
mov
xor
fadd
cmp
in
ins
jecxz
retf
in
cmp
jne
cmp
icebp
sbb
imul
cmp
xchg
push
data16
add
movs
out
les
jne
cmc
mov
xor
mov
bound
popf
(bad)
lock
(bad)
scas
(bad)
es
movs
push
gs
or
inc
int3
or
repnz
mov
lods
bound
pushf
and
fsubr
pop
xchg
rol
cmp
push
xor
push
scas
daa
sbb
test
dec
cmp
ins
into
movs
push
or
imul
clc
out
fsub
jmp
hlt
xor
retf
nop
(bad)
adc
lods
inc
jns
jbe
inc
rol
cdq
dec
jmp
push
xor
icebp
lods
cwde
sub
clc
out
xor
jp
mov
pop
push
cld
hlt
mov
call
neg
add
mov
ffree
dec
sbb
mov
imul
arpl
js
sub
lea
test
sti
into
sub
xchg
or
inc
push
lods
xor
fadd
out
inc
sbb
test
add
cld
sub
and
rcl
mov
je
cmp
enter
jge
xchg
mov
add
ror
cli
jmp
lods
cmp
pusha
xor
inc
push
sbb
loop
lods
mov
cmps
test
pop
mov
je
or
dec
push
out
hlt
or
adc
adc
cwde
(bad)
lahf
push
es
push
jge
xlat
push
retf
in
xor
std
jno
jnp
push
nop
call
data16
mov
pop
imul
jmp
repnz
xchg
dec
aam
push
data16
scas
lods
jae
inc
inc
stos
daa
cmp
ins
lds
add
jle
popa
arpl
xchg
popf
jbe
add
pop
cmp
in
adc
mov
adc
mov
fs
and
xor
mov
push
aam
and
das
scas
pusha
rcl
imul
mov
dec
push
aas
xor
repz
(bad)
mov
push
out
mov
fs
jg
add
sbb
and
fmul
(bad)
or
mov
scas
adc
and
fistp
mov
jbe
xchg
pop
dec
xchg
xchg
sub
inc
jle
dec
ret
push
rcl
sbb
daa
push
(bad)
or
pop
pusha
push
adc
nop
push
enter
jb
mov
or
sti
lods
out
fwait
cld
xchg
repz
dec
xor
pop
test
mov
or
call
mov
pop
dec
cli
xchg
pop
sub
loop
stos
mov
mov
aam
out
out
sti
aad
mov
mov
pop
(bad)
adc
out
mov
mov
adc
lods
mov
retf
retf
or
push
dec
mov
sar
jnp
test
lock
(bad)
dec
imul
mov
jbe
or
mul
(bad)
adc
cs
cmp
mov
xor
test
add
loopne
xor
jmp
aam
in
pop
fdiv
addr16
lods
mov
rcl
and
fs
and
and
jle
sahf
loop
mov
popa
jge
leave
sbb
pushf
or
retf
push
push
je
loope
mov
jmp
cmp
jmp
popa
push
sbb
outs
and
not
cmp
jp
data16
push
aam
mov
xchg
xchg
mov
leave
je
cwde
enter
shl
mov
jb
xchg
imul
in
sub
push
loop
aad
pop
dec
outs
jne
shl
push
or
inc
(bad)
stos
xchg
mul
push
add
xor
mov
push
push
xor
outs
jl
and
push
mov
sub
repz
jp
inc
mov
xor
cmp
push
jnp
out
scas
stos
add
sbb
mov
inc
(bad)
adc
popa
popf
and
push
cmp
dec
fmul
adc
push
fcom
add
js
aam
dec
pop
call
(bad)
test
in
sbb
push
jmp
cld
sub
add
pusha
lahf
call
in
inc
(bad)
imul
mov
cmp
int3
push
xchg
inc
ins
push
pushf
shl
dec
retf
repnz
and
sbb
adc
test
test
and
push
or
mov
add
fisttp
sub
xor
fs
adc
jns
ins
lock
mov
mov
out
jge
and
loope
push
lock
and
and
cmp
fcom
cmps
xchg
in
in
push
inc
scas
retf
(bad)
xchg
sbb
mov
