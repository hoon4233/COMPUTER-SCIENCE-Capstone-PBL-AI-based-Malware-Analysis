xor
adc
add
add
dec
add
add
add
add
add
add
add
add
push
lock
add
test
adc
pop
sub
add
or
sub
add
or
add
push
sub
add
or
add
adc
add
add
or
add
adc
or
add
sub
sub
add
adc
add
xor
add
add
add
sub
add
add
add
or
add
or
or
adc
add
pop
xchg
pop
sbb
add
or
pop
pop
or
push
mov
pop
xor
push
sub
add
adc
add
sub
adc
add
adc
sub
adc
pop
add
push
sub
jle
add
add
push
add
or
adc
add
adc
add
add
add
adc
push
mov
add
add
add
adc
add
add
sub
add
xor
add
add
add
add
adc
sub
pop
add
add
push
push
jb
add
jo
push
adc
sub
adc
add
dec
add
add
add
sbb
and
add
add
or
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
xchg
add
jo
or
jo
or
jb
add
jo
or
or
add
jo
or
or
add
jo
or
or
add
jo
or
or
and
or
or
jo
or
push
jb
add
jo
or
(bad)
jns
add
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
add
jo
or
adc
add
add
or
adc
jo
or
push
jb
add
jo
or
pop
jb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
add
jo
or
sbb
sti
add
jo
or
sbb
jo
or
push
jb
add
jo
or
pop
jb
add
jo
or
and
add
jo
or
and
add
jo
or
and
add
jo
or
and
add
jo
or
and
in
add
or
and
jo
or
es
add
jo
or
daa
jb
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
add
jo
or
sub
mov
add
or
sub
jo
or
cs
add
jo
or
das
jb
add
pop
xor
add
pop
xor
add
pop
xor
add
pop
xor
add
pop
xor
mov
pop
xor
jo
or
ss
add
pop
aaa
jb
add
pop
cmp
push
add
or
cmp
push
add
or
cmp
push
add
or
cmp
push
add
or
cmp
lahf
push
add
or
cmp
jo
or
ds
push
add
or
aas
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
pop
add
or
inc
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
dec
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
push
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pop
jb
or
jo
or
pusha
jb
or
jo
or
popa
jb
or
jo
or
bound
or
jo
or
arpl
or
jo
or
fs
or
jo
or
gs
or
jo
or
data16
or
jo
or
addr16
or
jo
or
push
jo
or
imul
or
push
cmp
or
imul
add
or
ins
jb
or
jo
or
ins
jb
or
jo
or
outs
jb
or
jo
or
outs
jb
or
jo
or
jo
out
add
or
jno
or
pop
jb
pop
or
pop
jae
dec
or
pop
je
jnp
add
or
jne
fwait
or
pop
jbe
mov
or
ja
xlat
or
pop
js
out
or
pop
jns
adc
add
or
jp
sub
add
or
jnp
cmp
or
jl
pop
push
add
or
jge
jg
add
or
jle
cdq
push
add
or
jg
mov
or
add
add
push
add
or
add
push
add
or
add
add
(bad)
jo
or
add
add
(bad)
jo
or
test
add
jb
(bad)
jo
or
test
add
jb
(bad)
jo
or
xchg
add
jb
(bad)
jo
or
xchg
add
jb
(bad)
jo
or
mov
add
jb
(bad)
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
lea
add
jb
adc
jo
or
mov
add
jb
adc
jo
or
pop
add
jb
adc
jo
or
nop
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
xchg
add
add
adc
jo
or
cwde
add
add
adc
jo
or
cdq
add
add
adc
jo
or
call
add
or
fwait
add
add
adc
jo
or
pushf
add
add
adc
jo
or
popf
add
add
adc
jo
or
sahf
add
add
adc
jo
or
lahf
add
add
adc
jo
or
mov
or
add
or
mov
das
adc
jo
or
mov
push
adc
jo
or
mov
ins
adc
jo
or
movs
add
add
adc
jo
or
movs
add
add
adc
jo
or
cmps
add
add
adc
jo
or
cmps
add
add
adc
jo
or
test
add
jb
adc
jo
or
test
sub
jo
or
stos
add
add
adc
jo
or
stos
add
add
adc
jo
or
lods
add
add
adc
jo
or
lods
add
add
adc
jo
or
scas
add
add
adc
jo
or
scas
add
add
adc
jo
or
mov
add
jb
adc
jo
or
mov
add
jb
adc
and
cmp
and
imul
add
adc
and
lods
adc
and
fst
and
repz
and
or
or
mov
sub
or
mov
push
push
add
or
mov
jg
add
or
mov
xchg
push
add
or
mov
mov
add
or
mov
in
add
or
mov
adc
add
or
rol
add
pop
add
or
rol
add
pop
add
or
ret
add
pop
add
or
ret
add
add
pop
add
or
les
add
jb
pop
add
or
lds
add
jb
pop
add
or
mov
add
pop
add
or
mov
sbb
jo
or
enter
jb
sbb
jo
or
leave
add
add
sbb
jo
or
retf
add
sbb
jo
or
retf
add
add
sbb
jo
or
int3
add
add
sbb
jo
or
int
add
jb
sbb
jo
or
into
add
add
sbb
jo
or
iret
add
add
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
rol
add
jb
sbb
jo
or
aam
add
jb
sbb
jo
or
aad
add
jb
sbb
jo
or
(bad)
add
add
sbb
jo
or
xlat
add
add
sbb
jo
or
fadd
add
jb
sbb
jo
or
fld
add
jb
sbb
jo
or
fiadd
add
jb
sbb
jo
or
pop
adc
adc
adc
sub
add
or
add
or
add
adc
xor
add
sub
add
push
push
sub
sub
add
push
add
sub
add
push
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
add
int3
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sbb
add
outs
sbb
jnp
add
add
push
add
or
add
or
jnp
add
add
pop
pop
pop
jae
add
or
add
or
jnp
add
add
test
add
and
add
add
add
add
outs
and
add
add
add
add
push
add
or
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
outs
sub
add
add
add
add
sbb
pop
jae
add
or
add
or
jnp
add
add
(bad)
sbb
jo
sub
add
add
add
add
popw
sub
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
lahf
sbb
jo
and
add
add
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
and
add
and
add
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
sbb
jo
sub
add
add
inc
or
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
jae
add
or
sub
add
adc
add
add
sbb
add
sub
sub
push
sub
add
sub
add
sub
add
push
sbb
inc
sub
jb
sbb
jo
adc
add
sub
add
add
add
jle
add
add
sbb
add
or
call
call
add
outs
cmp
add
sub
add
pop
sbb
sbb
cmp
add
sub
add
pop
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sbb
add
sub
add
xor
pushf
add
add
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
cmp
add
outs
cmp
jnp
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
hlt
add
add
jge
and
add
outs
and
add
add
add
add
std
sbb
jo
sub
add
add
add
add
ins
pop
pop
jae
add
or
add
or
jnp
add
add
outs
sub
jnp
add
add
adc
add
and
add
add
add
add
outs
and
add
add
add
add
inc
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
inc
add
add
inc
jae
add
or
add
or
jnp
add
add
and
sub
add
add
add
add
cmp
or
or
add
or
jnp
add
add
xor
add
and
add
add
add
add
outs
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
pop
add
pop
dec
jae
add
or
add
or
jnp
add
add
mov
add
outs
inc
add
or
jnp
add
add
inc
sbb
jo
sub
add
add
add
add
outs
inc
add
or
jnp
add
add
dec
pop
sbb
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
outs
sub
add
add
add
add
cmp
add
outs
cmp
jnp
add
add
outs
aas
add
or
jnp
add
add
test
adc
add
or
add
or
jnp
add
add
(bad)
sbb
jo
sub
add
add
add
add
or
adc
add
or
add
or
jnp
add
add
outs
inc
add
or
and
add
add
test
add
jae
add
or
das
add
or
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
add
sbb
jo
sub
add
add
inc
adc
add
jae
add
or
xor
add
add
sub
add
or
sub
add
sub
add
dec
add
or
adc
add
sub
add
adc
add
add
and
sbb
jo
add
dec
add
or
add
or
add
or
push
or
add
add
sbb
add
add
push
add
sub
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
mov
fdivr
sub
inc
ret
sbb
movs
xchg
pop
in
xchg
push
sbb
sub
sub
mov
pop
add
add
mov
adc
mov
fldcw
xchg
(bad)
sbb
xchg
imul
(bad)
mov
jno
in
xchg
fwait
adc
jge
sahf
xor
mov
mov
push
sub
fwait
jbe
cmps
inc
sub
sub
test
sbb
inc
pop
lods
xchg
xor
scas
enter
imul
and
mov
dec
outs
mov
and
mov
les
jmp
rol
sbb
jns
dec
ret
xchg
ret
retf
les
jmp
mov
jns
pop
retf
cmp
pop
int3
(bad)
push
int
loope
into
sub
lods
into
shr
rcl
pop
rcl
add
ror
dec
xchg
in
dec
fidiv
mov
data16
jmp
inc
aam
faddp
add
je
ins
in
clc
loopne
jge
loopne
cmp
loope
ret
xchg
loop
inc
and
dec
fstp
in
pop
mov
out
je
jmp
int3
mov
jmp
into
jmp
in
inc
repnz
shl
fucomp
cmp
and
xlat
lahf
cmc
out
ret
repnz
sahf
repnz
aam
repz
sar
sbb
sar
dec
or
jb
mov
sbb
enter
jge
pushf
push
out
std
gs
std
dec
xchg
fwait
(bad)
pusha
aam
call
and
mov
jmp
sub
lea
daa
(bad)
jge
rcr
call
add
or
loop
or
imul
adc
mov
inc
adc
mov
retf
jecxz
mov
aas
sbb
push
sbb
fnsave
xchg
jge
sbb
imul
sbb
mov
pop
stos
in
and
mov
test
and
mov
adc
std
arpl
and
mov
xchg
and
or
xlat
stc
daa
mov
gs
dec
and
add
sub
sub
push
or
ja
sub
cmp
cld
in
bound
cmp
cmp
int3
cs
xor
(bad)
sbb
push
aam
xor
push
mov
push
inc
push
xlat
dec
loop
call
or
pop
cmp
push
lods
cmp
les
ds
xchg
xchg
mov
adc
aas
das
push
cli
aas
mov
mov
inc
sbb
mov
xlat
inc
cli
inc
dec
cmp
dec
jo
cld
dec
or
add
sar
dec
ds
ret
push
test
push
adc
push
(bad)
add
lds
lods
push
retf
in
push
pop
daa
sub
dec
pop
cmp
ja
(bad)
push
jmp
rol
icebp
pop
aaa
inc
or
xchg
arpl
cli
pop
add
aad
popa
push
dec
arpl
ds
jl
ins
push
out
fsubr
pop
imul
imul
adc
retf
ins
ins
xor
loopne
test
pop
adc
es
sub
ret
dec
daa
push
js
ja
js
jge
jns
mov
jns
iret
cmp
jnp
aaa
ret
jnp
adc
add
fmul
add
pop
add
add
add
add
adc
add
adc
add
add
adc
add
stos
add
add
push
add
sbb
push
add
xlat
sbb
add
sbb
add
add
stos
adc
add
add
add
pop
add
inc
or
add
adc
add
add
cld
adc
add
sbb
add
or
add
add
ficomp
add
or
add
add
fcomp
add
test
pop
add
mov
add
add
push
add
and
add
push
add
nop
add
add
add
addr16
add
adc
add
add
add
add
xor
add
sbb
add
mov
or
add
add
daa
add
add
imul
jmp
add
add
add
add
aam
add
sahf
sbb
add
push
add
pop
adc
add
add
in
add
stc
add
add
adc
add
add
add
adc
add
push
add
rcl
add
add
fiadd
add
adc
add
movs
or
add
adc
add
pop
add
mov
or
add
adc
add
sbb
add
mov
or
add
sbb
add
add
dec
or
add
or
add
push
add
dec
add
add
add
add
sbb
add
add
add
add
jl
add
jno
add
sbb
add
xor
add
push
adc
add
adc
add
push
add
nop
sbb
add
add
add
add
add
add
or
add
jmp
add
sahf
or
add
or
add
rcl
add
or
add
add
jnp
add
mov
sbb
add
adc
add
jnp
add
jnp
add
or
adc
add
push
add
sub
add
adc
add
add
jp
add
sub
add
cmp
add
pop
or
add
add
add
sldt
rcr
add
sbb
add
add
pop
sbb
add
adc
add
adc
add
adc
add
sbb
add
add
add
jbe
add
push
sbb
add
add
call
add
mov
or
add
add
xchg
or
add
sbb
add
retf
add
or
add
fiadd
add
xchg
or
add
push
add
xchg
sbb
add
add
add
add
add
add
cmp
add
sub
add
rol
add
addr16
add
and
add
movs
adc
add
push
add
data16
add
or
add
or
add
sbb
add
add
push
pop
add
jnp
add
add
add
sahf
add
add
pop
add
mov
pop
add
nop
sbb
add
add
loopne
add
aam
add
jb
add
xor
add
add
std
or
add
add
or
adc
add
add
add
test
add
jg
add
or
and
add
bound
push
add
imul
add
push
add
add
add
sbb
push
pop
pop
jle
jle
or
push
or
jmp
add
sbb
cmp
jle
cmp
pop
pop
dec
push
jle
mov
scas
shl
push
or
jle
inc
mov
pop
jle
sbb
jle
inc
add
push
sbb
cmp
jle
push
sbb
pop
inc
mov
(bad)
shl
lea
sbb
xor
jg
cmp
jle
ds
jle
or
outs
add
and
mov
hlt
jle
lea
sbb
mov
inc
pop
or
pop
pop
test
adc
add
push
sbb
imul
and
or
pop
or
adc
ins
fwait
add
push
sbb
pop
or
adc
sbb
push
mov
add
or
push
pop
pop
adc
jle
test
push
adc
jmp
enter
or
push
mov
pop
pop
inc
pop
rcl
lea
shl
pop
hlt
jle
fild
add
or
push
jle
inc
mov
jle
cmp
hlt
jle
xor
push
jle
shl
pop
jle
jle
shl
jle
pop
jmp
gs
add
sub
dec
sbb
jle
aas
push
jle
ds
jle
scas
gs
aam
jle
dec
push
jle
add
cmp
cmp
pop
scas
gs
jle
dec
outs
or
add
or
gs
ds
test
push
or
add
sbb
dec
jle
jle
or
or
or
inc
mov
push
jg
or
add
adc
dec
jg
hlt
jle
push
jle
hlt
jle
push
cmp
ds
cmp
add
push
or
mov
push
inc
pop
jle
scas
gs
(bad)
add
and
dec
inc
mov
hlt
jle
cmp
scas
or
push
inc
mov
mov
push
jle
or
addr16
pop
dec
push
jo
add
or
lea
add
xor
push
jle
add
cmp
cmp
push
or
push
jle
hlt
jle
push
or
or
inc
pop
jmp
jle
pop
jo
add
lea
add
mov
jmp
add
push
inc
pop
jle
inc
mov
pop
pop
out
jle
cmp
jle
pop
pop
adc
ds
jle
ds
jmp
rol
sbb
push
inc
pop
jle
jmp
dec
or
pop
pop
jle
jo
fcom
add
sbb
push
shl
dec
out
dec
push
jle
jle
jle
sbb
push
scas
gs
add
cs
push
shl
imul
lea
pop
hlt
jle
addr16
sbb
adc
jle
hlt
jle
or
imul
jle
hlt
jle
cmp
cmp
ins
call
push
hlt
jle
xor
add
test
adc
addr16
jle
jle
(bad)
jle
sbb
dec
aam
sbb
add
push
jle
jle
shl
pop
or
hlt
jle
push
ds
jle
or
cmp
shl
push
scas
gs
inc
xor
add
dec
push
cmp
jle
hlt
jle
mov
shl
xor
fimul
add
push
rcl
or
lea
push
test
push
jle
hlt
jle
adc
jle
jle
jle
hlt
jle
pop
add
sub
push
jle
ds
jle
inc
mov
mov
push
jmp
pop
hlt
jle
arpl
pop
ds
or
addr16
hlt
jle
pop
push
jbe
add
rcl
sub
jle
jle
test
push
cmp
ds
test
add
rcl
lea
jle
test
or
push
test
push
jle
inc
mov
ins
call
sub
push
ins
call
aam
jle
aas
push
jle
test
call
or
jle
jle
fdivr
push
or
pop
jle
sbb
cmp
pop
or
out
jle
or
sbb
rcl
pop
jbe
add
sbb
push
dec
push
jle
ds
jle
jle
sbb
dec
jg
jle
jle
jle
adc
add
sub
push
rcl
mov
jg
adc
jle
pop
pop
jle
jle
ds
mov
jle
ds
or
ds
jle
sbb
push
rcl
std
add
and
push
or
jle
scas
gs
jle
or
ins
call
or
pop
jle
jle
inc
adc
add
or
jle
sbb
or
sub
jle
jle
pop
pop
jle
out
jle
jg
test
add
or
jle
ins
call
js
add
or
sbb
pop
cmp
sbb
jle
dec
ds
add
add
call
ds
aas
push
jle
jle
adc
add
or
or
call
shl
outs
add
push
or
scas
gs
ds
or
pop
add
push
or
jmp
arpl
loopne
add
adc
push
sbb
push
cmp
jle
ds
jg
jp
add
push
ds
dec
push
ds
sbb
jle
pop
pop
rcl
leave
add
push
ds
ds
hlt
jle
gs
scas
gs
adc
jg
rcl
pop
scas
fild
add
push
cmp
jmp
push
inc
pop
or
cmp
jo
ds
ins
call
jle
dec
test
adc
push
scas
gs
gs
pop
or
pop
jle
shl
mov
or
add
push
scas
gs
mov
arpl
push
jle
or
cmp
cmp
sbb
push
jo
sbb
jle
jle
sbb
arpl
mov
push
sbb
lea
add
push
jle
or
mov
jle
push
jle
sbb
jle
out
cmp
aam
jle
mov
add
push
ds
jle
ds
aas
push
jle
pop
pop
cmp
jg
or
call
or
addr16
sub
push
jle
ds
jle
or
or
hlt
jle
push
jo
jle
test
push
cmp
out
jle
scas
gs
jle
cmp
add
adc
push
jle
inc
pop
or
push
shl
push
cmp
add
push
ds
jle
hlt
jle
push
cmp
inc
pop
scas
sbb
push
jle
hlt
jle
arpl
sbb
hlt
jle
lea
or
imul
mov
add
push
ds
jg
ds
jle
jle
sbb
or
mov
aas
push
shl
fadd
sub
push
rcl
pop
pop
pop
aas
push
or
jle
add
mov
out
sbb
cmp
mov
cmp
jle
out
add
sbb
push
scas
gs
rcl
adc
jle
cmp
ds
inc
mov
sbb
add
push
jmp
push
rcl
push
rcl
cmp
dec
jle
shl
adc
shl
or
or
push
jle
out
add
dec
add
pop
sbb
sbb
add
ds
ds
ds
add
dec
jg
or
adc
jle
jle
jle
aam
ds
mov
add
adc
aas
push
ds
inc
pop
ds
test
jle
push
sbb
lea
dec
dec
add
shl
or
lea
pop
pop
inc
pop
aam
or
ds
out
dec
push
dec
push
rcl
cmp
dec
mov
hlt
jle
gs
or
jle
hlt
jle
mov
jle
cmp
adc
sbb
cmp
jle
jle
or
jmp
xchg
add
adc
hlt
jle
jle
dec
adc
inc
pop
sbb
jle
or
jg
pop
pop
dec
push
mov
add
mov
sbb
ds
cmp
ins
call
aas
push
sbb
rol
imul
hlt
jle
dec
hlt
jle
jle
pop
cmp
jle
cmp
call
adc
jle
jle
hlt
jle
sbb
jle
cmp
jle
rcl
push
hlt
jle
pop
jle
add
in
add
jle
jle
jle
rcl
xor
jle
jle
ds
jg
pop
pop
test
push
test
adc
jmp
gs
jle
jle
sbb
add
pop
rcl
(bad)
dec
push
inc
mov
scas
cmp
jle
sbb
call
inc
mov
cmp
sbb
xor
add
cmp
out
jle
jle
hlt
jle
pop
ds
jle
sbb
inc
push
add
cmp
ds
jle
dec
push
mov
shl
or
shl
cmp
push
sbb
or
out
jle
add
pop
push
add
cmp
or
pop
out
or
pop
jg
jle
jle
ds
ds
jle
rcl
cmp
mov
jmp
push
jmp
cmp
hlt
jle
sbb
jle
jg
inc
pop
or
arpl
sbb
lea
push
add
pop
jle
hlt
jle
dec
or
jle
jmp
push
dec
push
jg
jle
inc
mov
cmp
inc
pop
or
inc
mov
or
inc
pop
jle
or
push
jle
ds
inc
mov
jle
aas
push
inc
pop
in
mov
pop
jo
jle
cmp
jle
ds
adc
ds
xchg
push
add
inc
pop
jle
inc
mov
inc
pop
or
mov
and
push
add
pop
jg
jle
adc
jmp
dec
jmp
or
imul
push
shl
arpl
inc
pop
inc
mov
push
pop
pop
jle
ds
jle
or
push
hlt
jle
push
test
adc
add
inc
pop
sbb
jle
cmp
push
cmp
ds
out
out
sub
add
inc
pop
ins
call
ds
jle
ds
jle
mov
out
jle
jle
mov
add
add
pop
adc
ds
jle
dec
push
add
dec
mov
jle
mov
jle
and
add
pop
aam
inc
pop
jle
mov
jmp
push
ds
ins
call
jle
cmp
or
jle
sbb
push
mov
add
cmp
adc
jle
cmp
ds
jle
hlt
jle
(bad)
hlt
jle
pop
jg
or
dec
ds
ins
call
scas
gs
add
add
cmp
pop
pop
pop
cmp
cmp
pop
add
pop
pop
out
jle
jle
hlt
jle
push
adc
jle
or
push
add
pop
sbb
jmp
mov
pop
pop
add
push
or
ds
jle
and
pop
add
pop
hlt
jle
push
jmp
pop
jle
rcl
dec
jle
or
jo
sbb
ds
test
add
pop
pop
jle
jle
jle
scas
gs
out
jle
sbb
add
cmp
sbb
pop
add
pop
pop
jle
inc
mov
aam
jle
adc
jle
rcl
imul
shl
push
jle
add
call
adc
pop
jle
inc
mov
pop
pop
jle
out
mov
or
sbb
mov
dec
shl
push
mov
aam
jle
rcl
add
and
or
push
mov
jmp
cmp
mov
mov
jle
or
add
or
and
push
out
shl
gs
jle
ds
sbb
push
hlt
jle
cmp
push
shl
data16
and
arpl
jle
ins
call
inc
mov
jg
ds
shl
(bad)
pop
pop
pop
pop
jle
rcl
xor
or
shl
or
jmp
cmp
cmp
push
sbb
rcl
gs
pop
adc
jle
jle
ds
mov
arpl
cmp
cmp
dec
or
or
jle
add
pop
or
ds
sub
rcl
cmp
dec
adc
jle
jle
or
ins
call
cmp
ins
call
or
adc
imul
jg
scas
gs
jle
pop
xlat
or
adc
cmp
sbb
pop
cmp
jle
jle
jle
imul
or
adc
cmp
jle
pop
rcl
xor
push
scas
add
push
rcl
cmp
imul
or
sub
push
sbb
sbb
arpl
mov
mov
test
lea
mov
mov
sbb
push
les
or
push
scas
gs
jle
ds
dec
push
hlt
jle
push
hlt
jle
push
test
pop
pop
jle
pop
dec
or
sbb
ds
or
addr16
pop
or
push
add
dec
mov
jle
ds
clc
pop
or
and
ds
sbb
push
ds
jle
jle
shl
(bad)
aas
push
aas
push
jle
out
jle
sbb
xchg
jne
add
jo
cmp
cmp
jle
or
push
cmp
jle
sub
or
sub
addr16
ds
rcl
push
jle
adc
jle
test
push
test
adc
pop
pop
shl
mov
cmp
(bad)
mov
addr16
jo
ds
jle
or
out
ds
cmp
jle
pop
pop
jle
jle
pusha
mov
addr16
jmp
push
jle
jmp
lea
jle
cli
iret
or
push
jo
sbb
jle
or
rcl
out
add
imul
jle
rcl
or
pop
or
push
or
std
or
and
imul
pop
pop
jle
jle
inc
pop
scas
gs
mov
push
cmp
aam
out
jg
sbb
adc
add
aam
aam
jo
add
arpl
ins
call
adc
jle
out
or
dec
mov
sbb
or
jle
bound
or
es
jle
dec
jle
or
sub
or
mov
ds
hlt
jle
push
jg
jle
or
jle
or
push
cld
inc
or
and
jle
push
ds
sbb
mov
jle
aas
push
rcl
pop
shl
dec
jle
jle
or
or
adc
jle
push
scas
gs
jle
jle
jle
ds
xor
add
hlt
jle
push
jmp
jle
dec
sbb
dec
jmp
push
mov
pop
pop
ds
retf
add
hlt
jle
push
adc
pop
pop
hlt
jle
mov
push
add
sbb
cmp
jle
test
fwait
or
sbb
jle
push
cmp
shl
cmp
jle
test
xor
(bad)
mov
add
hlt
jle
jle
arpl
cmp
enter
hlt
jle
or
jle
jle
jg
inc
mov
out
shl
push
jle
or
xor
or
push
hlt
jle
cmp
cmp
jle
pop
pop
int3
cmc
or
cs
jle
sbb
or
jle
inc
pop
or
sbb
jle
shl
arpl
mov
dec
pop
pop
jle
hlt
jle
or
test
jle
sbb
push
sbb
jle
xor
scas
add
or
and
sbb
push
sbb
cmp
mov
shl
jle
push
aas
push
jle
cmp
sbb
add
jle
or
pop
jmp
or
cmp
pop
ds
add
sub
test
push
ds
xor
or
adc
dec
push
rcl
mov
pop
pop
pop
jo
into
or
and
dec
push
pop
pop
cmp
rcl
cmp
push
inc
mov
cmp
jge
add
jle
dec
push
jle
jmp
mov
hlt
jle
(bad)
ds
inc
mov
sbb
inc
mov
xchg
or
sub
rcl
push
add
jle
push
jle
rcl
call
jmp
gs
pop
pop
sbb
jle
stos
or
sub
rcl
adc
jle
sbb
test
or
adc
sbb
cmp
mov
push
cmp
or
sub
or
ds
cmp
jle
aam
jg
jle
cmp
cmp
jle
ds
or
ds
or
cmp
xlat
or
push
jle
or
or
adc
cmp
or
sbb
mov
pop
jle
push
or
adc
or
rcl
push
jo
jle
sbb
add
cmp
dec
push
sbb
or
ds
adc
jle
inc
mov
push
jle
ins
call
sbb
sbb
adc
ds
ds
jle
jle
cmp
sbb
cmp
or
sub
ds
shl
push
jle
ds
ds
pop
pop
pop
pop
jo
or
pop
pop
jle
jle
test
add
dec
or
push
jle
ds
jle
jle
jle
jle
ds
jle
jle
jle
or
pop
or
and
out
sbb
sbb
inc
pop
or
cmp
hlt
jle
pop
cmp
jle
push
jbe
add
jle
sbb
jle
jo
sbb
lea
jle
adc
or
sub
jmp
pop
or
aas
push
or
scas
gs
cmp
or
gs
jle
mov
add
jle
adc
sbb
cmp
add
addr16
push
jle
ds
hlt
jle
push
ds
scas
gs
or
es
add
push
jg
inc
mov
jle
out
jle
sbb
ds
ins
call
sbb
out
ds
or
or
and
add
lea
rcl
cmp
aas
push
jo
jle
jmp
cmp
lea
out
add
jle
pop
pop
sbb
push
jle
ds
jle
jg
mov
jle
pop
pop
or
pop
cmp
add
cmp
lea
pop
pop
hlt
jle
gs
cmp
or
pop
pop
jle
aas
push
ins
call
rcl
dec
sbb
adc
dec
(bad)
sub
pop
pop
sbb
cmp
jle
cmp
push
jo
or
mov
or
push
ds
jle
aas
push
inc
pop
or
add
xor
test
lea
aas
push
jle
ds
jmp
pop
jle
jmp
push
test
jle
mov
sbb
jg
or
jle
mov
test
shl
mov
arpl
dec
push
jle
jle
sbb
ins
call
scas
add
imul
push
hlt
jle
dec
scas
add
fwait
or
shl
(bad)
pop
pop
or
pop
cmp
ds
jb
or
scas
gs
jle
cmp
sbb
push
jle
jo
cmp
hlt
jle
leave
or
aam
adc
jle
jle
cmp
or
push
jg
mov
jmp
fisttp
hlt
jle
push
inc
pop
test
sub
jle
jle
inc
mov
or
dec
add
push
inc
test
jle
push
cmp
hlt
jle
pop
jle
jle
or
jle
lea
jle
mov
jo
fimul
add
jle
hlt
jle
jle
push
jo
ds
rcl
push
rcl
and
add
jle
jle
rcl
adc
jo
sbb
test
cmp
pop
jle
jle
push
cmp
add
jle
jle
sbb
jle
out
jmp
sub
cmp
pop
shl
push
jle
cmp
sbb
pop
dec
push
jle
shl
pop
sbb
add
jle
jle
hlt
jle
cmp
cmp
push
jle
pop
pop
pop
pop
adc
pop
pop
dec
push
fdivr
add
cmp
or
rcl
(bad)
ds
jle
jo
or
sbb
or
pop
pop
cmp
jle
mov
cmp
jbe
push
add
jle
jle
jle
ds
test
mov
pop
jmp
dec
jmp
adc
push
add
cmp
cmp
cmp
pop
hlt
jle
push
ds
stos
ror
push
jle
jle
inc
mov
(bad)
push
jle
aam
test
pop
jle
jle
test
jle
jle
jmp
dec
jg
ds
or
pop
sbb
pop
cmp
push
add
jle
jg
ds
ds
pop
pop
or
push
aam
ins
call
verr
jle
jg
hlt
jle
push
jle
out
scas
gs
jle
ins
call
adc
or
gs
call
cmp
cmp
cmp
jle
cmp
jle
mov
mov
mov
aas
push
jle
jle
jle
cmp
jle
jo
lods
xor
add
jle
jg
jle
dec
push
jle
hlt
jle
(bad)
hlt
jle
pop
or
inc
dec
ltr
jle
test
cmp
addr16
adc
jle
pop
pop
or
pop
ltr
jle
inc
mov
pop
jmp
cmp
push
cmp
scas
gs
jle
inc
mov
push
jp
str
jle
inc
mov
jle
cmp
test
add
jle
inc
mov
jle
pop
pop
jg
jle
hlt
jle
push
test
arpl
dec
aam
jle
ds
jle
or
mov
sbb
or
jle
hlt
jle
pop
or
ins
call
sbb
inc
mov
mov
jle
or
jle
hlt
jle
and
ltr
jle
sbb
push
jmp
adc
inc
mov
mov
jle
dec
jl
lldt
jle
sbb
sub
scas
or
hlt
jle
dec
add
cmp
add
ds
or
sub
adc
ins
call
jo
out
or
sub
add
mov
inc
mov
rcl
cmp
addr16
rcl
inc
adc
and
mov
pop
cmp
or
cmp
or
inc
mov
dec
jle
jmp
cmp
push
jle
adc
and
mov
jle
jle
jle
or
jle
mov
gs
adc
jle
scas
gs
aas
push
jle
jle
sbb
add
jg
shl
push
jle
shl
cmp
sbb
push
ds
jle
jle
or
inc
pop
jle
pop
pop
test
add
jg
jle
cmp
inc
pop
shl
push
dec
pushf
adc
and
mov
jle
mov
jle
cmp
out
jle
or
cmp
pop
dec
push
ds
jle
or
mov
mov
add
test
cmp
push
hlt
jle
leave
adc
and
mov
push
jle
out
ds
cmp
mov
jle
pop
pop
jle
pop
pop
hlt
jle
sbb
sbb
adc
adc
mov
imul
jle
jo
ds
jg
ds
mov
adc
push
test
adc
pop
jle
cmp
sbb
cmp
addr16
pop
dec
or
mov
or
jle
hlt
jle
(bad)
rcl
dec
out
rcl
pop
jmp
push
pop
pop
ds
pop
pop
mov
jmp
add
test
pop
shl
xor
add
push
rcl
mov
sbb
aam
jg
inc
mov
push
cmp
cmp
jle
jle
cmp
add
inc
mov
push
or
cmp
xor
aam
out
dec
push
jle
ds
add
gs
aas
push
or
push
adc
adc
mov
out
jle
cmp
rcl
imul
add
adc
adc
add
pop
jle
jle
add
mov
push
jle
add
mov
pop
hlt
jle
mov
jle
sbb
imul
dec
aas
push
jmp
scas
gs
call
jo
out
aam
adc
hlt
jle
push
scas
gs
pop
mov
hlt
jle
push
or
call
mov
or
out
aas
push
or
lea
or
ret
and
mov
scas
or
test
push
shl
xor
rcl
lea
jmp
fcom
add
sbb
pop
add
arpl
jle
aam
jle
ds
rcl
pop
jle
sbb
pop
sbb
ds
test
push
mov
push
out
adc
sub
addr16
pop
pop
adc
sbb
pop
sbb
dec
jle
jle
add
arpl
dec
or
inc
pop
in
add
lea
jle
sbb
scas
cmp
hlt
jle
push
jle
sbb
xchg
add
sbb
cmp
jle
ds
sbb
or
jle
jmp
add
cmp
or
pop
pop
add
call
ds
or
adc
adc
lea
push
test
push
ds
sbb
dec
push
pusha
adc
sub
jmp
adc
sbb
pop
dec
push
ds
scas
gs
pop
or
mov
push
dec
push
jle
or
jbe
add
cmp
out
aam
jle
jg
ins
call
test
cmp
or
pop
sbb
add
cmp
sbb
jo
ds
ds
ins
call
and
hlt
jle
dec
test
or
mov
dec
jle
test
cmp
jmp
mov
push
jle
or
hlt
jle
dec
push
rcl
add
jmp
cmp
jle
ds
cmp
ds
jle
or
out
add
jmp
push
jg
jle
jle
or
(bad)
aas
push
adc
adc
jle
jle
jle
cmp
ds
ins
call
jle
mov
adc
sbb
(bad)
hlt
jle
mov
pop
or
cmp
out
jle
ds
out
mov
and
adc
sub
pop
or
inc
mov
(bad)
ds
jle
dec
push
jle
shl
mov
push
cmp
jle
adc
jle
mov
jle
sbb
cmp
mov
jmp
push
ds
hlt
jle
dec
aas
push
sbb
push
pop
inc
adc
push
ins
call
cmp
or
imul
dec
aam
jle
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fild
add
push
add
add
sbb
mov
test
call
cmps
call
mov
mov
add
in
pushf
in
mov
nop
mov
xchg
cmps
in
and
mov
mov
in
pushf
push
add
add
adc
mov
in
mov
test
mov
add
in
mov
test
call
mov
mov
call
mov
mov
call
popf
in
popf
push
push
add
add
mov
in
mov
mov
mov
in
mov
mov
call
add
add
in
sub
mov
nop
mov
nop
mov
nop
mov
mov
call
mov
add
in
mov
mov
in
mov
test
mov
jmp
mov
movs
mov
mov
jmp
mov
or
add
daa
call
mov
mov
in
mov
mov
in
mov
xchg
cmps
call
mov
mov
add
sbb
nop
mov
(bad)
nop
in
mov
test
in
xchg
in
mov
or
add
adc
mov
in
xchg
out
mov
mov
mov
add
in
mov
mov
call
mov
(bad)
nop
in
mov
scas
xchg
call
xchg
call
xchg
mov
add
scas
mov
mov
in
mov
mov
test
push
push
add
add
mov
call
lods
call
mov
sldt
add
out
xchg
in
mov
mov
mov
mov
in
mov
nop
mov
mov
add
inc
in
mov
mov
popf
mov
movs
mov
mov
mov
nop
mov
mov
nop
mov
mov
in
mov
mov
in
mov
adc
add
inc
call
mov
mov
call
mov
popf
mov
mov
call
and
and
and
mov
mov
mov
push
adc
add
and
mov
call
mov
scas
mov
test
call
mov
nop
mov
mov
add
sbb
mov
mov
in
mov
test
adc
add
sbb
mov
mov
in
mov
mov
mov
adc
in
mov
mov
mov
call
mov
xchg
cmps
call
mov
mov
call
mov
push
add
add
in
mov
nop
mov
test
in
mov
mov
mov
mov
in
cmps
call
mov
nop
mov
pop
add
add
in
mov
mov
in
mov
mov
call
mov
xchg
scas
in
mov
xchg
cmps
call
mov
xchg
cmps
call
mov
popf
mov
mov
in
mov
sbb
add
cmp
mov
mov
out
nop
in
mov
mov
mov
mov
in
sub
mov
scas
mov
mov
nop
mov
nop
mov
add
call
xchg
jmp
mov
mov
nop
mov
nop
mov
add
call
pushf
out
mov
mov
mov
mov
in
mov
mov
add
sub
mov
jmp
mov
mov
mov
in
mov
mov
out
mov
mov
call
pushf
push
sbb
add
push
call
mov
nop
mov
mov
test
mov
call
mov
sbb
call
mov
nop
mov
scas
mov
mov
mov
mov
mov
mov
mov
in
mov
add
call
and
mov
mov
call
mov
mov
nop
mov
mov
movs
mov
xchg
cmps
in
mov
pop
add
add
call
cmps
call
mov
mov
in
cmps
in
and
mov
mov
in
mov
mov
add
out
mov
mov
mov
movs
mov
mov
in
cmps
out
nop
in
xchg
call
mov
mov
push
and
add
push
in
xchg
call
mov
test
call
mov
mov
push
and
add
sbb
mov
call
mov
mov
in
mov
add
mov
nop
mov
test
mov
call
mov
mov
add
in
mov
mov
in
popf
jmp
mov
mov
out
mov
mov
out
mov
mov
in
add
add
add
in
xchg
in
mov
test
in
mov
popf
mov
test
call
mov
test
mov
add
call
mov
mov
mov
mov
in
mov
add
mov
out
mov
mov
scas
mov
mov
add
sbb
nop
mov
xchg
scas
in
xchg
in
mov
mov
out
nop
call
add
add
mov
xchg
cmps
call
and
add
add
in
xchg
in
mov
nop
mov
mov
movs
mov
mov
add
mov
call
mov
nop
mov
xchg
scas
in
mov
scas
xchg
call
mov
mov
mov
mov
mov
out
scas
out
mov
mov
add
cmp
mov
mov
mov
call
mov
nop
mov
mov
(bad)
nop
in
mov
scas
xchg
call
mov
mov
add
and
mov
mov
in
mov
scas
xchg
call
mov
mov
in
mov
mov
jmp
add
add
call
xchg
in
mov
mov
call
xchg
jmp
mov
mov
popf
mov
test
nop
mov
mov
out
mov
das
add
add
out
scas
in
mov
mov
in
xchg
call
mov
mov
add
mov
nop
mov
mov
popf
mov
popf
mov
mov
call
xchg
in
mov
xor
add
adc
mov
call
mov
mov
push
xor
add
sbb
popf
mov
mov
call
mov
mov
call
mov
add
call
scas
in
cmps
in
mov
mov
nop
mov
mov
in
xchg
call
xchg
out
mov
mov
mov
out
xchg
push
xor
add
sub
mov
call
xchg
in
mov
mov
xchg
cmps
call
mov
mov
popf
mov
mov
push
xor
call
popf
jmp
mov
xchg
scas
in
mov
mov
add
add
call
sub
mov
mov
call
lods
out
scas
in
cmps
in
xchg
call
scas
call
mov
mov
add
out
mov
mov
mov
out
scas
in
mov
mov
mov
call
mov
cmp
add
ss
mov
mov
mov
xchg
cmps
call
mov
mov
in
mov
nop
mov
mov
out
scas
push
cmp
add
sub
nop
mov
mov
out
mov
nop
mov
test
call
cmps
in
mov
scas
xchg
call
add
add
call
xchg
in
xchg
call
mov
mov
call
mov
mov
in
popf
push
cmp
add
inc
in
and
xchg
in
sub
mov
mov
in
mov
xchg
cmps
in
mov
movs
mov
mov
mov
in
mov
scas
mov
mov
mov
cmp
add
push
call
mov
scas
mov
mov
in
mov
mov
in
mov
cmp
out
mov
mov
mov
mov
mov
mov
in
mov
scas
mov
nop
mov
xchg
cmps
call
nop
in
xchg
out
nop
call
mov
add
add
in
mov
mov
mov
out
nop
call
mov
aas
add
add
test
scas
xchg
call
mov
mov
call
pushf
in
xchg
call
mov
mov
scas
xchg
in
mov
mov
in
mov
test
add
ss
and
mov
mov
in
xchg
in
mov
mov
mov
nop
mov
nop
mov
test
call
mov
inc
add
add
call
and
mov
mov
call
mov
nop
mov
mov
in
xchg
out
xchg
in
xchg
in
mov
test
add
call
mov
xchg
cmps
in
mov
mov
call
mov
mov
call
mov
popf
mov
inc
add
add
call
pushf
out
mov
nop
mov
test
in
sub
lods
push
inc
add
add
nop
mov
mov
call
mov
mov
in
mov
xchg
scas
out
mov
mov
in
sub
mov
test
in
xchg
call
mov
mov
inc
add
add
call
mov
nop
mov
mov
mov
in
mov
nop
mov
mov
in
cmps
in
popf
call
and
mov
mov
add
out
nop
out
mov
mov
mov
in
cmps
call
xchg
call
mov
mov
in
xchg
call
xchg
call
add
add
mov
mov
popf
mov
test
call
cmps
in
popf
call
mov
mov
dec
add
add
in
sub
mov
mov
call
popf
call
mov
mov
scas
xchg
in
pushf
in
mov
(bad)
nop
push
dec
add
add
mov
test
mov
out
mov
mov
mov
xchg
scas
push
dec
add
add
scas
mov
mov
scas
xchg
call
mov
mov
in
xchg
in
mov
xchg
cmps
in
xchg
in
sub
stos
out
mov
nop
mov
mov
in
xchg
in
mov
mov
push
dec
add
add
call
mov
mov
mov
call
pushf
push
dec
add
add
in
mov
mov
out
mov
mov
mov
call
mov
mov
add
in
mov
mov
call
popf
out
nop
call
mov
nop
mov
mov
mov
mov
mov
dec
add
add
mov
call
xchg
popf
mov
mov
mov
out
mov
nop
mov
(bad)
nop
in
xchg
call
mov
mov
call
mov
xchg
scas
push
dec
add
add
mov
(bad)
nop
call
mov
scas
xchg
call
mov
mov
out
xchg
call
mov
mov
add
in
mov
mov
mov
in
xchg
call
xchg
out
nop
in
xchg
out
mov
push
add
add
test
test
call
xchg
in
xchg
push
push
add
add
call
nop
call
xchg
in
mov
mov
call
mov
add
call
pushf
call
mov
mov
popf
mov
mov
in
xchg
push
push
add
add
mov
in
mov
mov
in
mov
mov
in
cmps
out
mov
test
mov
call
xchg
push
add
add
call
lods
in
cmps
in
xchg
call
mov
xchg
cmps
in
mov
push
add
add
in
mov
movs
mov
nop
mov
mov
call
mov
add
in
popf
call
xchg
call
mov
mov
in
mov
mov
in
xchg
push
pop
add
add
in
cmps
call
mov
scas
xchg
in
mov
xchg
cmps
in
xchg
call
mov
mov
mov
(bad)
nop
push
pop
add
add
call
and
mov
mov
call
mov
mov
out
mov
test
nop
mov
nop
mov
xchg
scas
push
pop
add
add
out
mov
mov
mov
out
mov
mov
out
mov
mov
call
mov
mov
in
mov
add
in
mov
mov
in
mov
test
test
pop
add
add
mov
in
mov
mov
(bad)
nop
in
mov
mov
out
mov
mov
call
mov
mov
jmp
mov
mov
xchg
scas
call
add
add
nop
in
mov
xchg
cmps
in
mov
mov
mov
mov
xchg
scas
push
pop
add
add
mov
call
mov
mov
mov
in
popf
in
mov
mov
call
popf
call
mov
(bad)
nop
in
mov
nop
mov
nop
mov
pop
add
add
call
xchg
call
nop
call
mov
mov
nop
mov
pusha
add
add
in
mov
mov
mov
scas
mov
mov
mov
popf
mov
mov
call
mov
mov
scas
xchg
in
popf
push
popa
add
add
out
mov
test
mov
mov
nop
mov
add
in
mov
nop
mov
mov
mov
call
mov
arpl
add
and
mov
mov
mov
nop
mov
mov
mov
add
cmp
mov
(bad)
nop
in
cmps
call
mov
mov
out
mov
nop
mov
mov
mov
scas
mov
mov
out
mov
mov
add
ss
mov
mov
call
stos
call
mov
mov
in
mov
(bad)
nop
call
popf
in
popf
call
mov
data16
add
call
mov
mov
mov
in
mov
mov
add
add
in
mov
test
in
cmps
out
nop
out
scas
call
mov
mov
call
mov
mov
nop
mov
push
call
popf
out
mov
test
call
mov
mov
mov
mov
push
imul
mov
call
mov
mov
mov
call
mov
mov
in
sub
mov
scas
mov
push
add
inc
out
mov
mov
mov
nop
mov
nop
mov
mov
nop
mov
mov
call
nop
out
nop
call
mov
mov
out
mov
mov
scas
mov
imul
add
in
xchg
call
xchg
mov
out
mov
mov
mov
ins
add
add
call
mov
mov
mov
in
cmps
in
cmps
call
mov
ins
add
add
call
mov
mov
mov
call
mov
mov
mov
in
xchg
in
mov
outs
add
add
call
and
xchg
call
mov
scas
mov
mov
add
mov
nop
mov
mov
push
jo
add
sub
mov
mov
in
mov
scas
xchg
call
xchg
mov
in
mov
mov
scas
mov
jno
add
inc
call
nop
call
nop
in
xchg
in
mov
mov
test
jmp
mov
mov
xchg
scas
in
and
xchg
call
mov
mov
out
scas
in
add
add
add
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
add
add
call
mov
xchg
cmps
in
xchg
in
mov
mov
mov
add
aas
out
xchg
out
xchg
out
mov
mov
call
lods
out
mov
mov
mov
call
cmps
in
mov
mov
in
popf
in
mov
mov
push
jne
add
inc
call
sub
mov
movs
mov
mov
mov
in
xchg
in
xchg
call
mov
mov
in
mov
nop
mov
mov
in
and
mov
add
mov
call
mov
nop
mov
mov
mov
out
scas
call
mov
mov
push
ja
add
xor
popf
mov
nop
mov
mov
nop
mov
mov
mov
in
mov
xchg
cmps
call
pushf
push
js
add
and
mov
out
mov
mov
out
mov
mov
nop
mov
scas
mov
mov
call
add
add
call
mov
nop
mov
mov
out
xchg
jmp
mov
mov
add
call
mov
mov
call
mov
scas
xchg
in
cmps
in
mov
mov
mov
call
mov
jnp
add
and
mov
mov
mov
mov
out
mov
mov
in
mov
mov
add
sbb
mov
call
pushf
in
xchg
in
mov
mov
push
jge
add
xor
scas
xchg
out
nop
in
xchg
call
mov
xchg
scas
call
mov
mov
in
cmps
call
popf
in
mov
jle
add
sub
mov
in
xchg
in
mov
mov
call
popf
call
xchg
out
mov
xchg
scas
in
mov
add
mov
jmp
mov
mov
test
in
mov
mov
call
mov
add
mov
in
mov
mov
mov
mov
in
sub
mov
mov
add
ss
xchg
in
xchg
out
scas
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
call
mov
mov
add
push
in
mov
mov
out
nop
in
cmps
call
mov
mov
mov
add
call
mov
mov
out
mov
nop
mov
test
test
add
sub
popf
mov
mov
nop
mov
nop
mov
mov
in
mov
mov
mov
test
add
cmp
mov
call
mov
mov
nop
mov
mov
nop
mov
test
mov
mov
mov
push
xchg
add
ss
nop
call
popf
call
mov
mov
nop
mov
mov
mov
in
and
xchg
in
mov
mov
xchg
add
xor
mov
in
xchg
in
xchg
out
mov
mov
in
xchg
in
sub
mov
mov
in
mov
mov
mov
mov
add
aas
call
mov
nop
mov
mov
call
xchg
call
mov
mov
call
mov
scas
mov
nop
mov
mov
mov
mov
add
sub
mov
in
xchg
out
mov
mov
in
xchg
in
and
mov
mov
mov
push
mov
add
aas
in
pushf
out
nop
out
mov
nop
mov
mov
call
xchg
in
and
mov
nop
mov
xchg
cmps
in
mov
test
mov
mov
out
mov
mov
add
aas
in
mov
nop
mov
test
(bad)
nop
call
mov
(bad)
nop
call
mov
scas
xchg
in
mov
nop
mov
mov
call
add
add
add
in
sub
xchg
mov
nop
mov
xchg
cmps
in
mov
lea
add
adc
mov
mov
call
mov
mov
add
adc
scas
mov
mov
mov
mov
add
mov
call
mov
mov
call
mov
mov
mov
mov
xchg
cmps
in
xchg
in
pushf
in
mov
scas
xchg
call
xchg
in
mov
nop
add
add
in
popf
in
mov
mov
mov
call
pushf
in
mov
mov
in
mov
mov
scas
mov
mov
mov
add
in
mov
nop
mov
mov
out
scas
out
mov
mov
test
out
mov
test
in
pushf
call
mov
add
call
cmps
out
xchg
call
mov
scas
mov
mov
scas
mov
mov
mov
mov
call
add
add
mov
mov
(bad)
nop
in
cmps
push
xchg
add
add
out
nop
call
mov
mov
in
mov
mov
mov
test
in
xchg
out
scas
in
xchg
in
xchg
call
mov
xchg
add
add
in
mov
test
mov
in
pushf
out
mov
mov
out
mov
mov
in
mov
mov
call
stos
call
add
add
in
mov
test
nop
mov
mov
nop
mov
mov
call
mov
xchg
add
add
mov
in
xchg
call
mov
mov
call
scas
in
mov
mov
nop
mov
xchg
cmps
in
mov
popf
mov
mov
call
mov
mov
in
add
add
add
in
xchg
in
cmps
call
mov
nop
mov
mov
call
mov
nop
mov
mov
in
pushf
call
mov
mov
push
cdq
add
add
call
mov
nop
mov
mov
in
mov
nop
mov
mov
mov
mov
mov
call
add
add
mov
mov
out
scas
in
mov
mov
in
mov
nop
mov
mov
in
mov
scas
xchg
out
scas
call
mov
mov
out
mov
fwait
add
add
nop
mov
nop
mov
mov
in
mov
scas
mov
mov
call
mov
scas
xchg
in
mov
add
mov
in
xchg
call
mov
popf
add
add
nop
mov
nop
mov
mov
in
mov
mov
out
mov
mov
mov
test
xchg
cmps
call
scas
call
mov
sahf
add
add
mov
test
mov
in
xchg
call
mov
test
call
lods
in
mov
lahf
add
add
lods
in
popf
call
popf
out
xchg
call
mov
scas
mov
mov
in
mov
test
call
mov
xchg
scas
call
mov
add
out
scas
in
sub
mov
test
in
xchg
call
mov
mov
in
xchg
call
mov
mov
mov
mov
mov
mov
mov
call
add
add
add
in
xchg
call
mov
xchg
scas
call
cmps
call
popf
call
mov
mov
mov
nop
mov
mov
call
sub
mov
mov
nop
mov
popf
mov
mov
mov
call
mov
movs
add
add
call
popf
call
mov
mov
in
mov
mov
mov
call
mov
mov
add
inc
call
mov
nop
mov
scas
mov
mov
call
mov
mov
mov
in
xchg
in
mov
mov
mov
nop
mov
cmps
add
add
call
popf
call
mov
mov
mov
mov
mov
in
mov
mov
call
add
add
call
scas
jmp
mov
mov
in
cmps
out
xchg
in
xchg
out
mov
nop
mov
xchg
scas
in
xchg
in
mov
mov
in
mov
test
add
and
mov
in
mov
nop
mov
mov
in
mov
mov
test
call
mov
mov
xchg
cmps
out
mov
stos
add
add
sub
stos
out
mov
mov
nop
mov
test
mov
stos
add
add
out
mov
nop
mov
mov
out
nop
call
mov
scas
mov
test
call
mov
lods
add
add
in
and
mov
mov
nop
mov
nop
mov
add
in
xchg
call
xchg
movs
mov
mov
mov
scas
xchg
in
mov
(bad)
nop
in
mov
mov
test
push
scas
add
add
in
sub
mov
mov
mov
mov
nop
mov
scas
mov
mov
out
nop
push
scas
add
add
in
popf
in
mov
mov
in
mov
mov
mov
mov
add
and
nop
mov
mov
in
mov
mov
movs
mov
mov
add
ss
mov
mov
(bad)
nop
in
and
mov
mov
out
mov
nop
mov
mov
test
(bad)
nop
in
xchg
out
scas
call
add
add
in
mov
nop
mov
mov
call
mov
mov
in
mov
nop
mov
mov
movs
mov
mov
add
xor
mov
in
mov
movs
mov
mov
call
mov
mov
out
nop
in
popf
call
mov
mov
add
inc
in
popf
in
mov
mov
mov
popf
mov
mov
call
mov
xchg
scas
out
nop
in
mov
mov
mov
in
xchg
call
popf
in
mov
mov
add
sub
mov
in
mov
mov
out
mov
mov
mov
call
sub
mov
add
call
mov
nop
mov
mov
xchg
scas
call
mov
mov
nop
mov
mov
jmp
add
add
call
mov
mov
call
mov
mov
out
nop
in
mov
test
xchg
scas
in
xchg
in
mov
movs
mov
test
mov
add
and
mov
mov
mov
call
mov
mov
mov
out
mov
mov
out
mov
nop
mov
popf
mov
mov
in
mov
xchg
cmps
in
and
popf
in
mov
mov
mov
call
mov
xchg
cmps
in
mov
mov
mov
in
xchg
in
mov
mov
in
xchg
call
xchg
call
add
add
out
scas
in
xchg
call
mov
mov
call
mov
mov
call
mov
mov
call
lods
in
sub
mov
add
xchg
in
and
mov
xchg
cmps
call
sub
xchg
mov
mov
call
mov
movs
mov
mov
call
add
add
in
xchg
in
pushf
call
mov
nop
mov
mov
out
mov
mov
add
call
mov
(bad)
nop
in
mov
mov
mov
call
mov
test
(bad)
nop
in
pushf
call
add
add
mov
nop
mov
mov
call
mov
mov
mov
out
nop
in
popf
in
mov
mov
in
mov
popf
mov
mov
out
mov
mov
push
rol
add
mov
in
mov
mov
mov
call
mov
mov
mov
in
mov
mov
mov
mov
mov
out
mov
rol
add
call
mov
mov
test
in
xchg
out
mov
ret
add
in
mov
mov
call
sub
mov
xchg
cmps
call
sub
mov
mov
nop
mov
nop
mov
mov
push
ret
add
add
call
mov
mov
out
nop
in
mov
movs
mov
mov
call
and
and
mov
add
in
xchg
out
xchg
in
mov
mov
out
mov
mov
in
xchg
call
mov
lds
add
sub
mov
in
xchg
call
mov
mov
mov
mov
out
scas
call
mov
nop
mov
mov
add
call
mov
mov
in
and
xchg
call
mov
mov
out
scas
in
mov
mov
in
mov
mov
movs
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
test
add
mov
in
mov
mov
in
mov
mov
call
mov
nop
mov
mov
mov
mov
nop
mov
xchg
cmps
call
add
add
call
xchg
call
xchg
call
pushf
call
mov
mov
mov
in
popf
call
mov
scas
mov
mov
in
mov
retf
add
xchg
scas
in
xchg
in
cmps
in
pushf
in
popf
call
nop
call
mov
mov
out
nop
call
popf
call
mov
mov
in
mov
retf
add
add
call
mov
mov
in
mov
xchg
cmps
call
mov
mov
mov
in
mov
mov
push
int3
add
add
in
xchg
call
scas
in
mov
nop
mov
mov
mov
call
cmps
call
mov
add
mov
in
popf
in
mov
mov
into
add
add
in
xchg
call
mov
scas
mov
mov
popf
mov
nop
mov
mov
mov
nop
mov
mov
mov
mov
add
test
call
mov
mov
call
popf
push
rol
add
push
call
xchg
in
cmps
call
mov
mov
nop
mov
rol
add
ss
mov
test
in
mov
mov
mov
call
xchg
nop
mov
test
call
mov
mov
add
and
mov
in
mov
mov
mov
in
mov
mov
push
rol
add
and
mov
call
mov
mov
nop
mov
nop
mov
test
nop
mov
aam
add
and
mov
call
mov
mov
test
popf
mov
nop
mov
aad
add
inc
call
mov
mov
call
mov
mov
in
xchg
call
mov
test
out
xchg
call
xchg
nop
mov
mov
in
pushf
call
mov
add
movs
mov
nop
mov
mov
mov
mov
in
mov
mov
nop
mov
mov
mov
scas
mov
(bad)
nop
push
xlat
add
add
in
xchg
out
mov
mov
mov
mov
in
xchg
in
mov
mov
mov
out
mov
test
in
mov
mov
add
mov
nop
mov
(bad)
nop
call
add
add
mov
mov
mov
in
xchg
call
mov
mov
in
mov
test
mov
mov
call
mov
fiadd
add
and
test
mov
movs
mov
mov
call
nop
call
mov
fild
add
sbb
xchg
scas
in
mov
test
xchg
scas
in
mov
fadd
add
daa
in
cmps
out
scas
in
mov
mov
mov
nop
mov
mov
mov
or
xchg
push
add
xchg
hlt
cwde
cmc
test
arpl
jno
jno
push
push
aas
mov
add
and
dec
add
jge
push
xor
cmps
out
mov
repz
nop
mov
int
mov
inc
cmp
cmc
xchg
rcl
fsub
jmp
pop
adc
inc
cs
mov
ficom
pop
and
and
lods
mov
mov
mov
xchg
mov
jo
shl
pop
in
ja
pop
cmp
pop
cmp
fidiv
push
movs
in
mov
cmp
jns
popf
stc
mov
dec
ds
ss
aaa
jle
mov
or
push
inc
sbb
(bad)
jno
xor
push
mov
push
rol
outs
jecxz
mov
movs
loopne
neg
or
add
jnp
pop
mov
loop
cld
mov
or
sub
dec
or
jge
imul
sbb
xor
movs
call
cmp
not
push
push
xor
inc
call
xor
and
std
lahf
jmp
jne
ror
mov
lods
fs
jl
sti
(bad)
into
lods
(bad)
mov
arpl
mul
leave
mov
pusha
mov
sbb
and
outs
repz
xor
adc
push
mov
push
aad
cmc
mov
and
test
cmp
sub
es
mov
inc
sub
ins
fprem
mov
and
or
xchg
sti
mov
jecxz
push
xor
cmp
mov
call
stc
xchg
mov
adc
xchg
ins
pop
adc
vmread
retf
jmp
ret
add
inc
mov
hlt
mov
mov
xchg
pusha
sub
add
ds
call
popa
sbb
mov
dec
add
mov
cmp
jnp
add
loopne
jle
push
sub
fidivr
adc
shl
pop
es
jecxz
in
stos
xchg
add
and
in
popa
rcr
mov
loop
push
jmp
shl
sub
fist
and
scas
dec
icebp
or
cmp
sub
std
scas
mov
push
push
les
and
and
sub
cli
pushf
fimul
sub
mov
inc
daa
pop
xor
inc
stos
les
sti
pop
push
sub
pop
dec
ds
mov
fidivr
out
xchg
mov
mov
pushf
lods
jge
not
test
mov
xchg
popf
fwait
xlat
mov
or
sbb
jg
cmp
xchg
shl
in
(bad)
ror
mov
and
pop
add
ss
xor
inc
or
aas
test
(bad)
int
shr
push
jmp
fisub
out
mov
cwde
test
dec
sbb
sub
jns
jg
inc
pop
jmp
xchg
fcomp
push
rol
div
inc
scas
jmp
sti
or
adc
push
(bad)
jle
sbb
jb
push
cmps
lahf
jo
xor
and
dec
push
jmp
xor
inc
out
setne
(bad)
cmc
sub
mov
fild
xchg
mov
data16
mov
lods
dec
inc
add
cs
mov
xchg
int3
mov
std
jo
loop
int
(bad)
xchg
(bad)
(bad)
out
rcl
ins
aas
cmp
cdq
stc
call
dec
(bad)
loop
repz
pushf
add
(bad)
inc
push
fs
fsubr
arpl
pop
add
cmp
jo
inc
xor
dec
aas
pop
adc
push
pop
push
jl
cmp
inc
das
and
ss
push
or
outs
cmp
sbb
inc
or
push
sub
pop
adc
add
jecxz
lds
xor
fs
shr
fcomp
and
xor
adc
dec
add
movs
loop
int3
mov
xchg
or
fs
push
sub
(bad)
mov
xchg
lods
(bad)
inc
daa
bound
packuswb
gs
daa
dec
punpckhdq
jo
push
or
or
call
loop
push
out
rcr
std
sahf
in
rcr
call
ret
mov
dec
mov
stc
mov
mov
repz
jmp
jno
push
sub
aam
into
outs
sbb
pusha
sbb
dec
sbb
inc
out
and
xchg
repnz
inc
pop
bound
pop
xchg
(bad)
xchg
jmp
inc
and
or
cmp
pop
adc
jge
pop
add
imul
add
lods
iret
xchg
and
mov
xchg
cli
mov
test
pusha
add
mov
dec
or
cwde
cli
bound
ds
(bad)
mov
cdq
jl
out
add
lods
cli
cwde
nop
imul
inc
cmp
inc
mov
add
xor
mov
mov
ror
loop
(bad)
cmp
ja
jbe
push
cmp
mov
ret
push
cmp
push
(bad)
jno
xor
adc
icebp
mov
sbb
or
ja
xchg
shl
adc
inc
(bad)
shl
adc
jmp
pop
pop
jecxz
loop
(bad)
pop
hlt
mov
ins
cmovae
outs
cmp
push
and
pop
add
popa
cmp
daa
inc
pop
bound
mov
jp
arpl
sub
jb
jo
jp
jo
inc
xor
inc
sbb
hlt
mov
in
mov
mov
push
mov
cdq
hlt
inc
cs
or
imul
jo
imul
pop
cmp
daa
push
or
xchg
jmp
or
arpl
jl
sub
stos
shl
mov
lds
sub
dec
cld
lods
in
xchg
push
cmp
je
cmp
enter
lods
jmp
(bad)
arpl
mov
xchg
rol
cdq
and
ret
mov
inc
xor
pop
xor
mov
cwde
repz
mul
mov
mov
int
(bad)
jp
jmp
mov
push
ret
add
mov
(bad)
(bad)
js
in
xchg
aad
mov
cs
xor
sbb
jbe
scas
fidivr
push
adc
aad
test
or
sbb
lods
mov
stos
int3
mov
in
(bad)
sti
add
neg
sub
xchg
or
mov
sub
pop
and
sub
sbb
or
pop
push
sub
ja
ins
scas
jmp
leave
xchg
fisub
ret
mov
pop
and
sti
inc
push
pop
rol
and
rcl
shr
test
jmp
not
lods
loope
fdivr
adc
cmova
pop
fstp
lahf
cli
xchg
cmp
dec
sub
iret
mov
fidivr
inc
cmp
sub
cmps
outs
inc
adc
ins
pop
jne
out
stos
in
mov
mov
jg
bound
jne
sub
sar
push
dec
in
clc
pushf
out
call
in
jmp
pushf
jge
jl
push
adc
iret
mov
cmps
stos
dec
stos
jecxz
(bad)
daa
sti
xchg
hlt
(bad)
xchg
clc
mov
mov
xor
dec
les
adc
outs
push
inc
add
adc
pop
cmp
sub
push
add
and
inc
sti
lahf
fimul
jmp
shl
jae
and
into
xchg
in
retf
xchg
into
add
push
cs
xor
jle
mov
inc
adc
add
dec
xor
adc
push
dec
and
and
inc
aas
add
cs
adc
and
cli
test
mov
call
cs
or
lahf
(bad)
pop
int3
mov
nop
hlt
mov
rcl
and
push
sbb
dec
adc
xor
popf
cld
xchg
or
add
push
fnsave
ret
nop
ret
xchg
test
xchg
fdivr
inc
xor
out
stc
pushf
fimul
mov
xor
adc
dec
and
sub
loop
std
or
es
clc
stos
fimul
push
pop
cmp
mov
xchg
(bad)
xor
and
push
add
test
xchg
dec
daa
and
pop
aas
in
call
cmps
test
pusha
adc
icebp
mov
mov
aas
pop
pop
and
push
es
scas
int
inc
or
dec
sbb
frstor
xor
dec
and
outs
pop
out
mov
or
cli
pushf
fld
popf
in
mov
mov
sub
push
mov
int3
mov
sub
inc
sub
ja
fs
add
aad
stos
mov
sub
xchg
xchg
test
jo
push
lds
bound
xchg
mov
fstp
mov
popf
in
jmp
xchg
dec
lds
bound
sub
loop
sar
jmp
aam
fist
jno
pop
jmp
test
std
test
xchg
xlat
pop
in
retf
stos
stos
std
mov
mov
(bad)
xchg
aad
popf
icebp
popf
cld
gs
gs
jl
fnsave
sub
and
leave
popa
or
daa
pop
mov
ret
pop
jp
sub
pushf
int
icebp
mov
push
cmp
pop
ds
xor
xchg
and
(bad)
add
push
or
and
dec
pcmpeqb
ret
cwde
stc
outs
add
inc
or
test
and
sbb
inc
or
jmp
cmp
adc
inc
es
sub
and
jbe
mov
(bad)
test
jg
push
dec
and
bound
fs
xor
ins
adc
int3
lods
aam
iret
cs
and
minps
mov
push
in
add
sub
push
xor
add
popa
pop
jne
(bad)
sbb
push
repnz
(bad)
movs
call
sub
ret
scas
(bad)
adc
not
aad
mov
shr
inc
es
pushf
push
or
fadd
xchg
pusha
xor
or
cwde
cld
mov
dec
sub
add
inc
sub
and
jbe
xor
pop
in
ret
mov
xchg
leave
stos
ficomp
repnz
stos
into
addr16
cli
mov
pushf
in
stos
repz
mov
(bad)
arpl
inc
stc
pop
(bad)
aad
retf
pop
xchg
in
mov
daa
(bad)
push
push
aad
ret
mov
bound
pop
sti
call
and
into
xchg
mov
(bad)
mov
dec
adc
test
mov
fldenv
sbb
mov
or
pop
pop
jge
lahf
cli
xchg
xchg
les
jae
and
inc
or
push
fist
repnz
stos
clc
pop
fsub
shl
inc
or
pop
mov
cwde
fisub
repz
pop
push
daa
js
leave
mov
call
inc
shl
pop
add
ins
pop
inc
es
clc
mov
mov
pop
or
pop
cmp
idiv
jae
xor
dec
sub
jle
pushf
iret
popf
idiv
int3
mov
lahf
mov
pop
add
mov
mov
cmc
(bad)
jnp
pop
pop
jae
jle
push
xor
mov
mov
xchg
stos
clc
stos
fimul
pop
mov
lahf
std
test
mov
test
mov
mov
adc
jns
push
sub
jle
and
jl
jns
xchg
xchg
mov
mov
lsl
pop
cmovae
jo
cmp
das
dec
xor
dec
adc
jns
push
xor
lds
into
popf
out
rcr
adc
sbb
cmp
enter
daa
daa
or
dec
lea
jns
lods
out
cmp
jge
jno
jl
cs
test
cmp
inc
sbb
retf
aas
pop
jae
and
xor
dec
and
sahf
in
retf
inc
sbb
in
add
stc
es
add
(bad)
out
mov
add
dec
sub
xor
pop
push
test
adc
adc
xchg
lock
and
xchg
icebp
pusha
xor
or
mov
dec
sbb
cmp
cmp
adc
stos
lds
pop
(bad)
dec
sub
(bad)
mov
or
mov
lods
fldenv
dec
sub
cmp
stc
js
push
cmp
push
jno
cmps
lds
scas
cmp
mov
xor
shr
ins
(bad)
and
ret
pop
xor
retf
addr16
pop
push
in
mov
outs
add
in
lea
lock
xlat
mov
dec
or
daa
outs
icebp
dec
xchg
cmp
xor
imul
sub
mov
mov
and
daa
jb
jne
cmp
test
mov
cs
nop
cmps
mov
fdiv
fidiv
bound
inc
mov
mov
test
int3
scas
les
push
call
imul
mov
test
pushf
mov
mov
nop
pop
add
lock
out
mov
mov
icebp
nop
fsub
repz
dec
adc
jg
mov
imul
adc
xor
dec
in
(bad)
mov
jg
and
test
pushf
repnz
ss
cmc
mov
in
ret
push
sbb
adc
xor
dec
cmovbe
sbb
dec
and
andnps
ins
adc
push
push
push
data16
jne
pop
xor
outs
sbb
inc
and
jne
xor
dec
cmp
stos
jecxz
enter
movs
(bad)
scas
dec
packsswb
jnp
pop
add
add
sbb
outs
sub
sub
jmp
cmp
pop
mov
cmc
cmps
fnstenv
add
xchg
cli
push
(bad)
setnp
std
cwde
mov
lahf
pusha
xor
push
xor
xor
mov
or
inc
add
inc
fild
pop
adc
sub
pop
fcom
pop
add
push
ss
or
and
cmps
add
pusha
xor
movs
cli
or
cmp
(bad)
cmp
ins
mov
add
xor
push
push
pop
dec
cmp
and
pop
movs
mov
scas
in
mov
push
xchg
pop
and
cmps
jmp
in
xor
retf
xchg
cli
add
lods
cmps
fisttp
push
cmp
push
sub
adc
in
add
mov
retf
data16
ds
out
lds
and
ins
and
fild
std
mov
xchg
stc
lds
(bad)
jecxz
aam
cmps
aam
inc
int
in
int
mov
push
lods
jg
pop
pop
loop
inc
dec
push
outs
pop
dec
cld
inc
sub
jnp
jg
pop
daa
inc
aas
pop
mov
call
sbb
push
aas
inc
xor
(bad)
jmp
sti
mov
mov
outs
and
mov
mov
or
(bad)
or
fidivr
stc
lods
loopne
jb
xchg
fiadd
movs
int
dec
int3
mov
mov
mov
mov
cmps
mov
push
jle
xchg
std
call
add
xchg
dec
sub
pop
cmp
dec
aaa
pop
loop
cmp
jnp
movs
out
test
int
lds
bound
pop
inc
and
mov
mov
fild
gs
inc
int
fnstcw
loop
jmp
lds
add
sub
cs
ss
adc
sub
lock
mov
aaa
loopne
outs
and
fistp
jne
test
mov
movs
aam
add
ror
idiv
test
in
into
bound
push
pop
mov
les
aaa
jbe
and
xor
push
mov
mov
call
mov
mov
xchg
std
sbb
jb
dec
shl
and
sbb
xchg
test
mov
mov
or
fcom
daa
push
cs
xor
pop
lods
mov
sub
or
pusha
fisub
bound
ja
inc
xor
(bad)
in
stos
in
or
push
ds
mov
adc
and
in
dec
sbb
popa
add
leave
mov
and
lock
mov
jmp
mov
inc
out
mov
call
mov
add
arpl
adc
inc
add
pop
inc
cmp
sub
pusha
adc
xor
imul
jne
mov
xchg
mov
(bad)
mov
cld
xchg
out
and
mov
xchg
jge
push
ret
mov
cdq
jecxz
les
push
sbb
push
add
add
stc
ja
js
fild
pop
sbb
out
stos
leave
mov
mov
and
aaa
sub
imul
sub
inc
or
cld
(bad)
loopne
in
sbb
adc
into
inc
dec
hlt
dec
add
push
mov
mov
call
loop
stos
cld
mov
mov
pop
or
data16
loope
and
add
mov
xchg
into
mov
mov
jp
push
addr16
popa
mov
jo
jg
inc
add
mov
cdq
int3
test
retf
call
lock
push
add
call
mul
mov
popf
inc
sub
arpl
out
sahf
(bad)
mov
mov
(bad)
mov
xor
xor
push
in
mov
arpl
mov
pushw
frstor
out
test
ins
or
jbe
ins
cmovs
push
pop
jne
pop
aas
pop
xor
mov
cmps
xlat
mov
leave
call
fstp
mov
dec
cs
push
dec
daa
ficom
jns
mov
mov
xchg
jmp
shr
sbb
jbe
xor
jae
fwait
lock
or
and
das
arpl
inc
or
(bad)
fnstcw
mov
mov
xlat
xchg
int
inc
mov
xchg
fdivr
add
push
sub
inc
or
scas
data16
popa
and
jae
push
pop
dec
sub
lods
call
jno
jns
(bad)
std
popf
ja
gs
cli
mov
hlt
cmps
data16
(bad)
mov
sub
addr16
imul
out
ror
adc
inc
fadd
dec
outs
mov
xchg
out
stc
sub
mov
mov
inc
cmp
mov
add
dec
or
inc
fild
jns
xlat
pop
cmp
leave
dec
xor
dec
das
sub
jge
mov
push
js
xor
cli
mov
fwait
imul
lock
xchg
push
cmp
call
inc
mov
mov
movs
(bad)
mov
and
clc
lahf
jae
(bad)
sahf
stc
add
jl
pop
retf
mov
jecxz
dec
cmp
in
xor
dec
adc
retf
cmps
pusha
mov
lods
call
cmp
add
sar
inc
scas
lds
pop
or
add
mov
and
pop
aas
jle
inc
imul
push
and
shr
call
loopne
ret
push
lock
xlat
fs
xchg
mov
adc
jns
js
leave
pop
sbb
or
push
cmp
add
pop
aas
jp
inc
stc
inc
mov
lods
out
xor
mov
mov
rol
jnp
inc
adc
pusha
or
jbe
ins
xor
out
xor
xor
fsub
ja
add
bound
xchg
fdivr
rcl
aam
shl
arpl
dec
xor
xor
push
add
adc
jmp
jmp
mov
sub
adc
(bad)
ins
push
dec
push
(bad)
out
(bad)
ret
inc
sub
jge
popa
retf
mov
and
add
jbe
ins
push
out
(bad)
fstp
jp
fs
adc
imul
adc
xor
push
xor
and
dec
add
inc
or
jg
ja
jmp
add
and
push
movs
mov
mov
xchg
into
arpl
popa
cmps
jno
mov
xchg
stc
test
add
dec
or
xlat
(bad)
call
out
add
rcl
test
add
add
(bad)
xor
aaa
pop
push
jb
bound
js
push
add
xor
dec
or
add
xchg
sti
mov
sahf
loope
int
loopne
test
xchg
shr
xchg
lods
loope
cmc
mov
mov
pusha
sub
pusha
ss
jns
push
or
pusha
es
das
jg
pusha
add
das
inc
pop
pushf
fadd
in
retf
mov
test
stos
out
(bad)
neg
shl
jmp
test
fmul
mov
(bad)
rcl
std
xchg
repnz
in
sti
sub
out
cmp
xor
outs
xor
in
stc
mov
rcr
mov
or
outs
dec
das
mov
outs
and
fst
ret
add
sub
shl
retf
ret
sar
mov
icebp
lods
sbb
loopne
fisubr
pop
ja
xor
cmp
xor
inc
xor
pop
pop
dec
pop
and
inc
das
mov
stos
pop
jge
inc
sub
addr16
dec
inc
push
sub
fwait
adc
push
and
xchg
pop
mov
jl
test
mov
dec
and
add
dec
sub
adc
in
cmc
scas
or
mov
icebp
cld
mov
lahf
out
fstp
retf
mov
lods
add
sbb
movs
in
test
add
jl
xor
jp
xor
xor
dec
dec
jo
ss
sub
cmp
push
mov
ins
dec
dec
inc
and
xchg
idiv
sbb
jmp
ss
mov
jae
and
popa
pop
dec
inc
jnp
xchg
cmp
repnz
hlt
fbld
div
(bad)
sbb
mov
xchg
dec
mov
fwait
or
inc
xor
add
jg
nop
sbb
out
test
into
mov
adc
mov
xchg
loopne
aam
adc
call
push
push
pop
sub
or
jne
push
addr16
pop
data16
sub
lods
imul
xlat
stos
add
mov
div
scas
(bad)
in
adc
pop
arpl
lea
cdq
adc
jmp
mov
or
fadd
fidiv
ror
cmp
call
mov
mov
xchg
sbb
sub
add
push
sub
pop
and
ret
mov
push
pusha
and
xor
nop
or
dec
or
xor
loope
cmp
push
daa
fwait
or
dec
sub
adc
sub
pop
pop
xchg
loope
dec
stc
test
lods
adc
sbb
xchg
retf
push
pop
dec
push
dec
gs
and
js
mov
xchg
or
mov
xchg
sbb
in
sbb
es
xor
ins
inc
imul
pop
aas
addr16
cmc
mov
aam
(bad)
cmps
loop
enter
sti
xchg
icebp
lahf
out
mov
test
shr
sbb
aas
push
xor
push
push
ja
pushf
out
scas
les
mov
xchg
repnz
rol
cmp
push
sti
inc
stos
arpl
xor
xor
ja
adc
add
and
call
into
sub
push
mov
les
inc
(bad)
mov
outs
ficom
mov
or
fdiv
in
jge
jbe
sub
stos
inc
xlat
jno
ins
cld
cmp
jnp
and
out
pop
retf
xor
loop
mov
mov
lahf
cwde
inc
fild
ficom
add
cmp
lock
add
pop
jecxz
sbb
arpl
inc
rcl
pop
mov
push
xchg
test
mov
mov
dec
mov
scas
scas
mov
or
inc
icebp
push
into
(bad)
nop
inc
loopne
icebp
inc
retf
pop
mov
stc
ds
sar
(bad)
mov
ja
pop
(bad)
inc
in
ret
xchg
fsub
or
sub
inc
out
xor
xor
cdq
mov
fistp
inc
mov
jge
mov
outs
or
repz
sti
add
pop
loop
in
jp
push
(bad)
daa
adc
add
xor
adc
das
dec
icebp
pop
jmp
cmp
jo
pop
iret
outs
sar
dec
into
jle
jb
push
sbb
sti
dec
rcl
cmp
dec
out
and
or
(bad)
es
adc
in
add
std
inc
retf
push
int3
hlt
aad
in
clc
and
bnd
or
retf
repz
adc
sbb
mov
inc
loop
pushf
mov
dec
lock
mov
shl
lock
add
inc
jns
jnp
retf
push
popa
sbb
or
call
add
push
fcos
outs
ror
call
outs
jne
inc
gs
pop
outs
iret
jnp
stc
xor
add
out
cmp
frstor
out
dec
cmc
hlt
jnp
or
(bad)
mov
mov
xor
cmp
adc
lea
xor
stos
xchg
xchg
xchg
push
shl
pop
(bad)
mov
in
jle
push
out
jg
xchg
xor
nop
pop
push
cs
mov
mov
stos
mov
xchg
push
mov
sub
popa
ins
cmps
ficom
adc
call
cmp
outs
fwait
arpl
hlt
sub
sub
push
daa
mov
dec
fcomp
fcomp
test
imul
and
xor
mov
pop
xchg
mov
rcl
lods
sub
lods
jns
jno
call
dec
mov
fimul
cmps
test
adc
scas
js
add
push
movs
or
xchg
in
stos
xlat
cwde
repnz
add
sbb
or
ins
cmp
imul
inc
xor
inc
pop
fs
jae
pop
cmp
adc
jle
popa
cmp
dec
cmp
arpl
or
js
inc
cmp
pop
mov
jb
add
and
nop
mov
or
xor
dec
mov
cdq
dec
xlat
ins
or
dec
adc
sub
aad
sbb
sub
mov
test
popf
sahf
mov
(bad)
rcr
adc
mov
add
dec
scas
adc
adc
scas
xchg
fstp
call
dec
std
imul
and
and
sub
imul
add
in
in
call
add
loopne
add
gs
inc
mov
inc
mov
test
jge
jb
xchg
pusha
add
or
or
push
sbb
hlt
xchg
pushf
gs
jle
inc
mov
pop
stos
int
mov
push
fisttp
jl
js
(bad)
gs
movs
jne
pop
mov
in
push
in
push
repz
daa
add
out
int
dec
jmp
pop
cmps
ja
(bad)
mov
lea
rol
fsub
sub
sahf
mov
xor
mov
cmc
lahf
mov
jns
and
repz
cdq
stos
popf
jns
cmp
jb
es
fisubr
sub
push
(bad)
aas
dec
sbb
push
imul
jmp
jmp
nop
fisub
inc
jl
jbe
pop
aaa
popa
push
xor
in
std
lahf
xchg
dec
shl
(bad)
mov
cmc
shl
rcr
or
repz
out
xchg
arpl
pop
data16
pop
inc
pop
sub
cmp
test
sti
ja
or
stos
mov
push
sbb
call
sar
dec
call
or
push
(bad)
test
sub
add
stc
push
pop
jmp
jg
je
int3
pop
pop
jmp
dec
cld
pop
jb
jo
in
pop
sbb
jp
bound
mov
lods
jl
mov
int
xchg
sahf
mov
idiv
xchg
pop
or
cmp
stos
mov
lahf
(bad)
adc
imul
adc
imul
retf
shr
dec
xchg
jge
mov
mov
mov
and
ins
pusha
mov
xor
imul
jbe
jae
jbe
mov
cmp
and
xchg
call
(bad)
adc
ins
nop
data16
sub
push
adc
aas
pop
popf
inc
(bad)
and
mov
jecxz
adc
pusha
or
aaa
dec
ins
movs
aam
out
xchg
xchg
xor
imul
add
inc
lods
mov
sbb
sub
xor
dec
or
popf
inc
repz
jmp
lods
clc
lods
leave
mov
mov
call
idiv
clc
mov
mov
xchg
(bad)
xchg
sbb
ds
and
sub
add
rol
int
das
retf
jne
ja
(bad)
aam
add
rcl
hlt
sub
test
sti
loopne
push
(bad)
dec
shld
data16
jge
mov
push
sbb
dec
pop
fist
movs
call
xor
pop
clc
repz
jmp
add
mov
mov
call
mov
cmps
mov
loopne
daa
sbb
push
out
push
loope
xor
stos
gs
call
test
jl
aad
inc
retf
clc
je
xchg
aam
adc
inc
mov
pop
fisubr
mov
mov
std
adc
push
pop
pop
ret
daa
push
shl
push
xlat
nop
xchg
inc
out
inc
mov
push
mov
js
test
in
popa
lds
sub
push
repnz
jle
jg
ficom
outs
jmp
adc
ss
add
fsubr
cmp
cmps
push
lods
dec
adc
mov
aad
test
call
mul
sub
(bad)
mov
(bad)
and
pop
or
les
mov
in
mov
pop
xchg
mov
push
adc
xlat
xchg
mov
xchg
and
jmp
mov
into
jecxz
mov
dec
icebp
retf
xor
das
pop
shl
movs
test
out
pop
jl
jnp
cmp
mov
ror
std
cli
nop
mov
pop
retf
inc
int3
xchg
addr16
or
xchg
fiadd
in
push
jne
jno
inc
pop
mov
mov
je
cmp
pop
pop
sbb
xchg
out
xchg
xor
shr
sub
sub
stc
leave
jl
cmps
mov
xchg
stos
mov
dec
out
fisubr
int
mov
push
ret
ret
xchg
mov
adc
pop
jbe
test
outs
jbe
lds
addr16
adc
cmp
gs
mov
in
dec
data16
or
inc
jbe
retf
les
in
repz
sub
cmp
js
lods
sbb
ja
int
push
out
js
xlat
jg
mov
popf
jg
test
pop
mov
out
sbb
jo
movs
mov
call
sub
and
fimul
call
gs
fst
sbb
fs
adc
add
mov
movs
sbb
cmp
mov
ret
xor
mov
sbb
and
pop
sbb
ins
and
daa
push
push
inc
and
jg
push
adc
jne
ja
bound
inc
cmp
jne
dec
adc
dec
cmp
jge
cwde
ficom
cld
lahf
dec
or
xor
pop
jmp
add
sub
jae
jno
adc
leave
add
sub
pop
jnp
xchg
and
and
pop
loop
cs
je
aad
add
mov
sbb
jo
fisub
jno
mov
pop
ins
movs
test
inc
mov
push
popf
mov
and
sub
dec
adc
or
sub
fstp
int3
dec
or
pop
out
mul
cwde
xlat
push
jmp
fadd
fadd
movs
and
pop
test
repnz
or
push
into
pushf
pop
mov
daa
cmp
int
retf
and
inc
jns
mov
xor
lods
outs
add
retf
push
adc
icebp
imul
and
adc
rol
jl
or
ds
in
sbb
push
ds
je
sub
adc
add
and
and
rol
pop
jecxz
mov
inc
fild
(bad)
mov
xchg
mov
imul
push
push
pop
mov
mov
inc
mov
mov
and
lea
rdtsc
ret
xchg
stos
xchg
mov
dec
repnz
aad
ret
and
fldcw
cmp
pop
hlt
push
test
inc
cmps
fiadd
xchg
enter
imul
popa
sti
ret
lea
and
xor
xor
and
test
and
push
inc
je
ins
push
adc
mov
pop
pop
out
sub
or
aas
jp
ja
dec
jmp
stc
jle
push
in
leave
popa
rcr
lods
pop
cmp
jo
push
inc
pop
sub
dec
ins
loope
push
cmc
jp
icebp
and
pop
dec
test
pushf
add
int3
popa
mul
aaa
push
mov
sar
inc
shl
fsub
lock
out
push
fmul
fisttp
cmps
xchg
test
fist
fprem1
cmp
add
xchg
or
dec
fdivr
mov
xchg
pusha
in
fadd
inc
jb
mov
mov
ja
xlat
out
push
cmc
les
out
xor
fldenv
xor
xchg
sar
inc
xchg
xchg
xlat
(bad)
aas
add
sti
leave
das
inc
pop
in
adc
and
test
pop
das
test
(bad)
and
push
dec
mov
imul
push
cmps
mov
mov
or
push
jb
aad
inc
in
sub
mov
loope
rol
sahf
fidivr
retf
mov
sti
mov
out
ret
(bad)
cld
sahf
jecxz
(bad)
mov
cmps
sar
xchg
hlt
xchg
xor
xchg
shr
ficom
lock
add
dec
sbb
push
or
and
sahf
inc
stos
iret
or
push
jae
sahf
aaa
in
jge
movs
scas
pop
(bad)
ja
mov
outs
leave
outs
cdq
(bad)
cld
add
iret
pop
push
sub
inc
pop
leave
pop
pop
std
sub
int3
inc
hlt
or
mov
sub
cld
and
mov
xor
push
inc
lods
lods
cmp
cmp
push
rcr
xchg
movs
and
add
sub
aam
xor
and
pop
aam
adc
inc
push
shl
lods
sahf
fdivr
xor
jb
cli
push
loop
rcl
ins
ja
jbe
jns
mov
jnp
push
scas
iret
ins
mov
inc
xchg
push
push
fld
cmps
dec
sbb
adc
ds
sar
xor
cmp
into
push
pop
adc
sub
loop
cmp
ret
push
push
out
adc
aaa
cld
addr16
cs
inc
std
aas
or
into
push
xor
xor
fstp
push
in
sub
cmp
add
inc
(bad)
sub
xor
jmp
shl
pop
rcr
mov
repnz
fadd
pop
lds
fild
push
xchg
cmps
pusha
mov
lea
(bad)
cmp
inc
loope
div
ret
retf
mov
jno
loopne
int
xchg
lahf
push
sub
push
adc
pusha
push
push
and
xchg
test
or
sbb
pop
jmp
dec
clc
mov
loop
into
jo
(bad)
jns
dec
es
dec
rol
push
cmp
lods
cmp
or
adc
imul
and
mov
dec
repnz
xlat
pusha
out
fdivr
stc
test
pusha
leave
fnstcw
add
icebp
jbe
sbb
into
xchg
mov
push
dec
jp
cmc
mov
aas
pop
call
lods
gs
loope
dec
int
jg
aad
cmp
xlat
ins
dec
cmps
(bad)
or
fisttp
loope
and
mov
sbb
mov
(bad)
ror
sub
xchg
ss
imul
add
mov
push
daa
mov
and
add
loope
and
push
test
pushf
and
test
cwde
sbb
xchg
or
jg
stos
mov
adc
mov
les
cmp
push
mov
les
test
nop
aad
pop
mov
xlat
adc
scas
shl
std
mov
(bad)
mov
jmp
sbb
(bad)
cmc
xchg
rcr
(bad)
cmps
les
call
mov
stos
cli
xchg
xchg
(bad)
out
stos
sbb
pop
and
jle
ja
inc
jb
add
and
pop
mov
mov
int
pop
mov
and
push
fmul
ds
outs
fld
mov
mov
inc
rcr
js
sbb
pop
mov
pop
mov
test
popf
jle
fucomp
pop
les
adc
test
pop
mov
das
lds
pop
arpl
jns
push
lods
mov
sbb
cmps
test
add
sub
inc
ret
mov
mov
psadbw
aas
add
pop
in
add
mov
fnstcw
nop
dec
enter
popf
pop
push
lds
mov
and
jnp
or
jmp
pop
sub
jnp
inc
adc
jl
es
jmp
add
pop
loopne
out
push
adc
repz
sub
pushf
mov
mov
bound
ret
xchg
mov
rcr
shl
and
outs
scas
retf
push
mov
ret
sahf
mov
dec
or
sbb
outs
enter
xchg
stos
stos
outs
sbb
push
cmp
or
ror
dec
shl
enter
ds
push
adc
ss
pop
out
add
and
sahf
sub
fst
out
lock
add
cmc
retf
xchg
popf
add
sbb
out
mov
test
sbb
dec
js
imul
mov
mov
inc
(bad)
ficomp
ins
in
push
in
ins
and
imul
and
retf
sbb
xchg
mov
dec
dec
push
rol
nop
sbb
icebp
fsub
in
add
out
icebp
jl
movs
ficom
in
pop
out
xchg
mov
adc
in
mov
mov
in
call
aam
mov
mov
dec
in
sub
or
clc
or
cdq
push
outs
xlat
pushf
pop
mov
inc
fdiv
mov
sbb
sub
lds
retf
sub
jnp
movs
mov
shr
mov
test
ret
adc
out
add
sbb
jle
test
out
stc
and
call
stc
sbb
inc
xchg
pusha
add
cmp
rcr
or
mov
sub
jnp
mov
test
add
data16
mov
mov
sti
arpl
cmp
jae
sbb
dec
push
cdq
pop
add
jl
dec
cmp
and
dec
das
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
push
inc
and
jg
push
adc
push
sahf
jmp
mov
scas
icebp
mov
loop
add
aaa
stc
sub
lods
and
adc
pop
stos
stos
push
call
retf
outs
arpl
inc
xchg
xchg
fcom
or
(bad)
and
xchg
imul
(bad)
inc
mov
loop
loopne
nop
xchg
stos
and
xchg
dec
(bad)
xchg
and
pop
jb
fwait
adc
int
inc
(bad)
pop
sahf
mov
lods
mov
shl
mov
push
sti
pushf
pop
call
into
jb
les
push
mov
sahf
jge
jnp
mov
inc
(bad)
jae
movs
mov
sbb
push
mov
jae
in
int3
lods
(bad)
sar
adc
lds
jmp
js
mov
icebp
cdq
cmp
arpl
jl
mov
push
add
fcom
fldcw
arpl
pop
cmp
clc
mov
shl
loope
clc
(bad)
jae
push
sub
and
clc
mov
movs
iret
movs
out
scas
idiv
test
rcl
sar
pop
jl
pop
pop
inc
sbb
gs
cmp
movs
movs
mov
stc
xchg
xor
pop
pop
or
mov
mov
loop
out
scas
mov
call
call
add
dec
cmp
add
push
cmp
scas
idiv
cmp
ret
cmps
loop
clc
xchg
cmc
fbld
pop
xor
dec
mov
aad
cmp
add
or
js
xchg
pushf
in
in
les
sub
aas
pop
inc
rol
scas
outs
or
adc
dec
movs
push
dec
push
push
sbb
in
(bad)
cmc
call
aam
fcmovb
push
push
jae
popa
cmovl
sti
mov
mov
pushf
repz
outs
daa
dec
setle
(bad)
mov
xchg
sti
nop
shl
pop
jae
push
je
push
inc
add
ja
jmp
idiv
add
push
add
lods
loopne
stc
fwait
mov
lds
cmp
inc
cs
or
mov
retf
mov
loop
in
mov
mov
pop
cmp
inc
or
outs
or
pop
dec
iret
mov
(bad)
fwait
cli
ficom
imul
jo
popa
xor
or
jae
inc
daa
push
int
fstp
fisub
retf
ror
cmp
sbb
push
sbb
mov
jb
push
or
jo
pop
and
dec
sub
pop
ds
sbb
adc
scas
out
out
ret
cwde
lods
(bad)
mov
mov
or
popw
pop
adc
pop
sbb
and
push
push
inc
cmp
mov
xchg
lock
jl
jecxz
(bad)
sbb
dec
push
dec
std
pop
pop
je
ins
sub
imul
jno
retf
cmps
fidiv
xor
push
test
mov
test
fs
clc
popf
fild
inc
and
cmp
adc
imul
or
jge
addr16
pop
fstp
retf
jecxz
dec
es
and
aas
iret
dec
xor
push
mov
inc
adc
mov
mov
mov
and
std
adc
inc
adc
cmp
inc
cmp
cmp
imul
(bad)
mov
xor
and
lods
push
sub
inc
and
in
in
(bad)
mov
jmp
mov
push
xor
xchg
fidivr
or
lahf
out
movs
test
ds
ins
cmp
cmc
(bad)
out
scas
out
test
lahf
icebp
nop
lock
pusha
aaa
pop
and
popa
add
mov
(bad)
call
push
xor
mov
repz
fimul
pop
adc
fisttp
mov
xor
ins
add
and
jne
gs
cld
div
fdivrp
fwait
clc
and
in
mov
ins
add
push
data16
and
add
into
popf
iret
mov
or
bound
dec
xor
ins
push
arpl
pop
aaa
dec
cmc
jle
pop
sbb
pop
(bad)
in
stos
mov
repz
jmp
test
cli
mov
dec
push
imul
inc
cmp
push
xor
mov
iret
xchg
test
pushf
gs
inc
xor
dec
xor
test
test
mov
cmps
(bad)
sahf
repz
pop
cli
lahf
fld
push
lds
int3
scas
(bad)
mov
push
ds
sub
or
ret
mov
mov
stos
out
dec
imul
enter
xlat
pushf
icebp
sub
mov
xchg
in
cld
lahf
call
cs
xor
cmp
sbb
ds
jl
pop
sbb
bound
dec
movs
aam
ret
mov
cmp
pop
xor
jge
sbb
pop
sub
push
fld
enter
pop
xor
out
fstp
sbb
sbb
in
leave
stos
sar
xchg
cli
sub
ret
dec
add
ja
fdiv
sub
inc
add
mov
mov
popa
or
inc
pop
pop
cmp
icebp
nop
jmp
sub
cmps
retf
lahf
in
clc
and
push
daa
inc
ds
push
push
and
cmp
sti
xchg
out
test
lods
enter
mov
scas
clc
mov
xor
adc
jle
stos
mov
in
add
xor
adc
inc
cmp
mov
ficom
add
ins
pushw
pop
xor
dec
aaa
mov
stos
loope
out
clc
sbb
popa
es
dec
xchg
jmp
in
out
sahf
mov
mov
aaa
gs
inc
(bad)
cmp
nop
lock
fdivr
(bad)
je
xchg
div
mov
aad
pop
push
jl
push
imul
into
mov
lea
enter
cwde
cli
mov
push
jo
jb
ins
and
and
and
inc
fisttp
lock
mov
scas
int
xlat
lds
bound
pop
aaa
dec
es
cdq
fild
(bad)
mov
xchg
lock
loopne
jb
fs
cmp
stc
mov
minps
inc
or
(bad)
jmp
shr
pop
cmp
inc
or
sub
push
sbb
lahf
jmp
repnz
call
xor
sti
popf
in
movs
enter
pushw
dec
adc
push
pop
sub
mov
xchg
icebp
mov
cwde
push
cmp
dec
sub
hlt
sahf
cmc
mov
xchg
jns
ins
ds
pop
push
xor
and
dec
sub
jecxz
in
popf
aad
(bad)
sub
loop
lds
xor
sbb
inc
inc
mov
scas
xlat
mov
jmp
(bad)
xchg
cld
mov
or
sub
mov
lods
jmp
imul
or
or
jo
mov
xchg
fiadd
dec
or
jp
outs
add
push
das
inc
pop
mov
les
cwde
cli
or
int3
scas
(bad)
mov
adc
ins
pop
inc
and
dec
add
jbe
ins
inc
push
je
jp
pop
cmp
pop
cmp
gs
mov
popa
xor
sbb
cmp
or
icebp
mov
bound
push
or
inc
xor
pop
sbb
in
cmc
fwait
cli
cdq
cmc
test
cdq
repz
fstp
test
movs
out
lea
and
cmp
scas
int
rcr
loope
(bad)
sahf
aad
push
adc
clc
and
or
xchg
hlt
xchg
jp
sub
cmp
jl
popf
lds
cmp
dec
or
mov
mov
call
jbe
ins
push
fwait
leave
mov
inc
or
pusha
add
mov
and
and
mov
in
ss
arpl
inc
or
lds
xchg
xchg
scas
adc
repnz
pushf
clc
and
mov
mov
xchg
fdiv
jl
cs
shr
call
jbe
dec
and
pop
mov
mov
add
and
ins
dec
xor
pop
aaa
inc
push
in
xchg
call
and
push
sbb
sub
leave
mov
ds
xor
push
out
xchg
shl
jns
push
dec
sub
jo
add
pop
xor
mov
inc
das
push
cmp
xchg
fmul
mov
iret
mov
pop
jbe
js
inc
pop
mov
mov
lods
in
mov
inc
pop
arpl
jp
gs
xchg
lock
mov
in
test
out
pop
bound
inc
sbb
pop
adc
or
fwait
stc
sub
jp
outs
add
push
sbb
outs
cmp
lahf
std
mov
adc
mov
js
pop
sbb
or
(bad)
sti
scas
loop
clc
call
mov
pop
ja
dec
and
pop
sub
xor
cs
ss
jo
imul
movs
fnsave
jnp
and
arpl
inc
and
inc
or
jbe
js
pop
cmp
pause
std
(bad)
lds
lds
or
jb
push
es
xor
sub
inc
or
cmps
(bad)
mov
mov
xchg
jbe
daa
inc
add
imul
xchg
cmp
ret
lods
sahf
int3
mov
enter
inc
daa
and
cli
xchg
out
ret
adc
mov
jmp
scas
loop
sti
cdq
fist
(bad)
in
mov
mov
sub
inc
and
imul
pop
add
jl
push
sbb
fidivr
jecxz
adc
pop
sbb
add
aad
hlt
mov
fdivr
out
pop
adc
inc
cmp
cmp
mov
call
adc
sar
(bad)
mov
jmp
or
jle
gs
add
mov
cmps
les
sbb
push
xor
push
adc
mov
dec
and
das
outs
mov
loope
fisub
jo
jno
pop
mov
movs
mov
and
out
popf
aad
sub
imul
adc
loope
iret
mov
sbb
jo
imul
jg
outs
mov
lock
inc
cmp
push
movs
in
mov
cwde
stc
fwait
div
pop
sbb
scas
std
mov
mov
xchg
fldcw
pop
cmp
xor
jb
icebp
nop
repz
out
movs
leave
bound
cmc
mov
jecxz
sti
cdq
mov
hlt
xchg
lds
hlt
lahf
inc
cs
xor
cs
xor
aas
js
push
mov
leave
movs
aad
jmp
inc
adc
xor
cs
adc
jp
data16
(bad)
mov
test
xchg
jmp
mov
test
mov
aad
inc
pop
gs
out
cmps
retf
mov
add
inc
aaa
(bad)
fld
hlt
mov
xor
pop
xor
xor
rcr
jo
ins
lods
cmp
push
xor
or
shl
lea
jnp
popa
sub
div
mov
retf
add
adc
jl
dec
and
ss
pop
jp
lahf
(bad)
test
mov
bound
cmp
add
sub
xor
push
inc
cmp
mov
mov
xchg
jmp
jmp
sbb
dec
aaa
and
and
jae
jae
stos
and
clc
mov
mov
retf
ss
xor
sbb
cmp
fimul
shl
call
stos
shl
inc
sub
jl
jmp
fmul
cmp
fst
push
adc
or
outs
add
jg
mov
sbb
jg
pop
adc
mov
out
pushf
aam
stos
shr
jmp
fcomi
dec
add
inc
cmp
pop
xor
data16
add
mov
call
xchg
dec
sbb
ins
or
sbb
or
dec
push
bound
js
pop
adc
and
in
mov
mov
aad
xlat
mov
inc
sub
dec
adc
push
sbb
arpl
es
cs
mov
dec
ret
sbb
not
dec
sub
dec
rol
mov
icebp
cdq
test
div
loope
(bad)
popf
mov
mov
shl
mov
clc
mov
push
sbb
rcl
sub
jno
leave
mov
xchg
clc
pushf
(bad)
cmp
push
add
mov
mov
xchg
or
push
pop
jle
dec
dec
and
jbe
ss
aaa
je
push
or
adc
jl
pushw
and
push
call
aas
outs
dec
sub
popa
leave
xor
dec
add
inc
es
xor
pop
dec
and
pop
xor
adc
cmps
cmc
cmps
rol
push
xor
mov
cwde
sar
ror
adc
inc
xor
jns
arpl
jb
fsubr
dec
dec
or
dec
push
push
mov
stos
leave
mov
lods
test
adc
jl
ror
fidiv
mov
(bad)
mov
xchg
aad
clc
mov
inc
sub
jge
and
mov
xabort
(bad)
mov
stos
into
mov
mov
xchg
in
and
push
jns
pop
and
sub
dec
adc
pop
xor
xchg
jmp
into
xchg
movs
movs
inc
sub
jnp
pop
xor
jle
gs
push
dec
cmp
inc
cmp
or
pop
ins
icebp
pushf
in
movs
leave
mov
scas
add
jge
fs
mov
cdq
jecxz
(bad)
mov
mov
scas
shl
pop
ss
pop
jp
in
movs
mul
loopne
lds
sub
push
loop
fcmovnbe
mov
ret
inc
sub
or
and
fdivr
push
mov
jmp
inc
and
sar
jmp
jmp
sub
imul
mov
dec
pop
imul
adc
push
add
pop
mov
stc
xchg
in
cmp
cmp
jge
fisttp
sti
cmps
add
mov
push
push
cmp
inc
add
test
xchg
(bad)
xchg
out
out
lods
xlat
mov
mov
jae
jno
ins
and
shl
test
movs
jmp
add
push
cmps
sar
cli
add
aaa
jne
fs
and
bound
je
ja
sbb
and
ins
mov
std
test
jg
push
adc
mov
ror
ds
ins
mov
fwait
into
and
cli
xor
pop
jg
ja
in
popf
aad
shr
or
cli
cdq
jecxz
(bad)
mov
and
pop
ds
xor
fsub
or
dec
cmp
inc
lods
aad
fstp
outs
or
inc
fild
mul
sbb
cmp
(bad)
mov
je
popa
or
cli
xchg
xchg
lds
pusha
add
imul
adc
jno
pop
push
add
ins
or
arpl
jg
pop
and
push
arpl
pop
ss
and
loop
stc
stos
ror
fs
jl
jo
cmps
les
fnstenv
mov
mov
mov
cwde
aam
add
and
dec
das
pop
mov
mov
xchg
fidiv
sbb
dec
retf
mov
retf
test
inc
mov
scas
(bad)
mov
fcom
in
(bad)
cmc
xchg
rcr
pop
jbe
jns
jp
lods
(bad)
lods
out
mov
inc
sub
pop
or
in
outs
sub
inc
and
xchg
neg
aad
icebp
xchg
(bad)
mov
xchg
dec
push
xor
outs
push
xchg
(bad)
mov
mov
mov
movs
into
stos
jmp
data16
adc
imul
xor
push
pop
ds
jno
jg
inc
fdiv
xlat
(bad)
jne
jg
pop
adc
sbb
sub
ret
movs
enter
jmp
lock
je
ins
sub
sub
pop
aas
and
in
cmp
add
adc
cmp
les
in
imul
adc
dec
es
test
mov
fisttp
pusha
xor
jno
fs
mov
movs
iret
xor
inc
or
jmp
repnz
xlat
lahf
sti
push
inc
cmp
dec
adc
push
ins
aas
ins
sbb
out
call
pusha
push
jne
push
add
jbe
adc
and
or
push
fnsave
mov
push
sbb
dec
in
stos
repnz
xchg
in
xchg
cmc
mov
pushf
fstp
dec
and
dec
cmp
jle
xchg
scas
retf
mov
scas
mov
xchg
ret
(bad)
in
xchg
xor
pop
sbb
outs
dec
and
push
pusha
mov
stos
icebp
mov
sbb
pusha
and
xor
imul
and
pop
aaa
jne
shl
pop
adc
adc
jle
pop
aas
aaa
jle
jl
popa
cs
cwde
fdiv
(bad)
cmc
mov
fdivr
hlt
mov
add
mov
clc
dec
or
dec
push
push
pause
jmp
sub
inc
sub
scas
(bad)
mov
dec
repnz
cld
push
adc
sbb
pop
sbb
push
daa
outs
add
stos
jmp
(bad)
ins
stc
lods
loopne
stc
cwde
fbld
and
jge
jae
or
push
inc
push
aad
les
loop
cli
mov
xchg
cld
popf
(bad)
xchg
loope
add
arpl
jns
cdq
in
mov
pushf
fidivr
cmp
inc
or
jne
xor
dec
push
pop
or
and
das
mov
fwait
jecxz
in
mov
call
mov
xchg
xor
ret
mov
lods
aaa
push
xor
sbb
mov
push
cmp
imul
fstp
push
adc
leave
ret
mov
xchg
out
mov
or
imul
and
mov
leave
lock
xlat
cmps
push
cmp
das
inc
pop
arpl
rcr
xchg
inc
and
dec
(bad)
or
mov
mov
(bad)
jecxz
dec
es
dec
adc
mov
shr
mov
lods
aam
fnstcw
or
(bad)
pushf
aad
aam
repz
movs
mov
test
mov
dec
and
or
sub
jmp
sbb
outs
or
pop
xor
sar
rol
pop
adc
inc
es
xchg
in
and
jmp
les
push
lods
int3
mov
cmps
loopne
dec
es
daa
dec
cmp
fwait
mov
lahf
cli
mov
imul
adc
inc
int
in
mov
sahf
dec
jle
imul
mov
popf
lds
aaa
dec
das
push
int
ret
mov
dec
or
mov
(bad)
stc
lods
loope
in
dec
or
bound
jle
(bad)
movs
enter
sbb
bound
inc
add
inc
add
aaa
pop
sbb
xchg
mov
pop
mov
scas
(bad)
mov
retf
xor
outs
outs
adc
cmps
call
fisubr
ins
cs
push
push
scas
fmul
sti
sub
arpl
inc
cmp
pushf
aam
(bad)
lods
clc
jns
pop
push
dec
loop
mov
dec
sub
ja
mov
fnsave
sub
cmp
jb
push
pop
dec
leave
and
in
mov
mov
mov
out
sbb
xchg
fbld
dec
pop
push
xor
adc
dec
or
inc
and
jne
push
sub
mov
xchg
shl
icebp
xchg
lds
jae
jno
xchg
mov
push
jge
pop
sbb
data16
dec
or
mov
test
movs
lds
dec
add
xor
imul
adc
jno
test
enter
pop
cmp
dec
test
xchg
lea
es
push
cmp
mov
mov
xlat
mov
inc
fsub
jp
popa
packsswb
stos
fist
push
xor
popa
xor
movs
call
pushf
lock
xchg
sti
call
shr
mov
cmc
xchg
div
push
je
jp
inc
lds
repnz
daa
inc
aas
pop
xor
jb
push
sub
jae
pop
sbb
or
das
dec
aaa
push
adc
and
dec
daa
push
mov
int3
cmps
int
call
ins
sbb
iret
rcl
in
sbb
gs
scas
retf
mov
sahf
int
pop
or
jl
jne
push
sub
leave
or
fbstp
cs
adc
mov
into
mov
cmp
mov
sub
iret
xchg
retf
jmp
add
push
jno
sbb
dec
add
jle
scas
retf
mov
cwde
enter
jecxz
cli
cwde
fcom
je
ja
test
mov
in
imul
and
dec
cmp
adc
jg
stos
mov
out
sbb
push
dec
sub
jp
mov
stos
out
cld
sahf
mov
bound
inc
cmp
inc
punpckldq
jno
jmp
ins
aas
dec
scas
ret
mov
out
icebp
nop
add
xchg
push
add
popf
push
mov
addr16
mov
mov
ins
mov
fsubr
jl
pop
mov
(bad)
adc
jb
arpl
cmp
out
or
scas
addr16
or
jl
addr16
retf
sti
or
fidivr
cmp
pop
push
lock
icebp
pop
das
int3
pop
in
(bad)
jl
je
or
push
lahf
dec
xlat
pop
test
mov
dec
stos
mov
call
inc
mov
push
mov
push
mov
addr16
popa
mov
mov
loop
aas
call
cmp
or
retf
lock
sbb
ret
sub
gs
adc
pop
sbb
pop
xor
hlt
fwait
mov
addr16
les
xlat
dec
mov
gs
dec
mov
pop
fisttp
mov
dec
sub
into
mov
mov
xor
mov
nop
rol
les
in
jo
(bad)
cmp
adc
dec
cs
and
outs
daa
pop
retf
push
xor
or
jge
std
cmp
aad
dec
mov
test
fst
into
mov
mov
inc
fadd
fisub
div
(bad)
mov
mov
cmp
mov
test
popf
mov
xchg
jmp
xor
in
call
hlt
or
pop
ins
sbb
sbb
inc
adc
rcr
dec
sbb
popa
std
sbb
scas
daa
or
mov
rcl
adc
mov
mov
sbb
into
popf
fstp
xor
sub
fld
add
pop
icebp
dec
mov
cmp
fld
icebp
cdq
movs
push
shl
aad
jb
inc
xor
jecxz
lahf
mov
xor
or
pop
mov
xchg
pop
retf
cwde
fs
jbe
sub
adc
pop
xor
pop
or
popf
stc
and
jmp
mov
mov
movs
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
push
xor
or
imul
sbb
inc
pop
out
pop
mov
addr16
jle
pop
aam
(bad)
pop
ret
ss
or
or
loope
add
pop
sbb
cmp
(bad)
xor
ror
cmp
cmp
rcr
aaa
shl
sub
add
mov
js
jge
xor
jae
push
enter
xchg
jmp
push
aam
cmc
dec
mov
icebp
push
sbb
mov
inc
test
push
int3
jg
pushf
mov
fidiv
dec
lock
in
dec
fbld
(bad)
cmp
push
add
pop
cli
add
pop
fistp
xor
xor
aaa
rcl
inc
jl
push
pop
jns
mov
pop
aam
push
mov
mov
bound
mov
pop
mov
push
push
jmp
popa
mov
mov
gs
jne
pop
sbb
test
xchg
fwait
dec
xor
or
inc
cmp
cmp
xor
add
sti
add
sbb
nop
fist
int3
dec
xchg
dec
test
sub
sahf
jb
aam
cmps
in
cmps
jmp
cld
xchg
lahf
jo
cmp
mov
dec
mov
inc
mov
ss
xor
jb
adc
xchg
sahf
fs
or
inc
adc
pop
clc
stos
repz
sar
jmp
add
xlat
dec
jecxz
dec
loope
inc
call
ins
loope
popa
lock
hlt
in
adc
fidiv
mov
movs
(bad)
mov
inc
push
adc
cli
ja
ret
test
dec
xchg
mov
xor
mov
scas
mov
dec
nop
xchg
test
adc
test
lods
jge
jno
std
jns
jmp
dec
rcr
stos
and
stos
xor
jmp
add
xor
bound
clc
dec
xchg
mov
dec
inc
push
aam
popf
pop
xchg
add
daa
push
jp
dec
push
cwde
fistp
outs
and
push
cmp
adc
push
pop
and
inc
add
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
xor
pushf
jmp
cwde
cmc
fidiv
jnp
imul
sti
jbe
sahf
mov
scas
popf
js
sbb
dec
mov
retf
push
mov
loopne
std
inc
stos
jns
push
int
test
das
icebp
jne
outs
les
les
lods
xchg
mov
test
mov
inc
mov
adc
pop
and
daa
cmp
xor
xor
cmc
add
sbb
ins
loop
rcr
ja
push
out
pop
sbb
sub
(bad)
cmp
into
xor
iret
cmp
aam
or
not
inc
(bad)
sub
call
es
popf
mov
or
mov
mov
test
daa
cli
and
inc
and
addr16
lds
rol
test
(bad)
bound
xchg
pusha
push
pop
out
sbb
bndstx
pop
pminsw
jnp
jnp
cli
xor
push
cmp
dec
cmp
adc
xchg
rol
(bad)
popf
nop
jp
or
lea
xchg
enter
push
xlat
pusha
mov
sub
and
fdiv
sbb
cmp
push
stos
icebp
xor
out
jmp
loopne
(bad)
mov
aaa
push
(bad)
cmp
or
push
xor
xchg
push
(bad)
xchg
imul
inc
ror
dec
imul
jle
jno
icebp
dec
xchg
mov
dec
sbb
int3
lahf
ficomp
sub
stos
cmps
mov
das
xor
test
or
mov
fimul
scas
mov
cmps
mov
xchg
scas
ss
or
dec
sbb
jle
sbb
sub
jno
xchg
mov
xchg
stos
and
ds
dec
call
sub
(bad)
push
jmp
neg
or
retf
adc
cmp
push
jmp
jbe
push
sub
nop
cmps
test
cmp
pop
ja
inc
js
inc
(bad)
(bad)
je
icebp
mov
add
into
cmps
iret
mov
stos
in
(bad)
stos
fiadd
mov
out
sbb
push
cmp
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fnstenv
jmp
(bad)
test
ins
cmc
es
xchg
push
repz
pusha
scas
jl
adc
inc
mov
push
lods
inc
out
retf
inc
cwde
dec
fimul
cmc
cdq
push
mov
bound
pop
scas
xchg
data16
xchg
mov
inc
mov
jmp
aaa
retf
test
inc
fwait
mov
mov
lods
xchg
fst
outs
nop
imul
mov
lahf
jo
push
out
gs
aaa
not
daa
sar
or
jmp
dec
cmps
dec
shl
hlt
pop
(bad)
sub
jne
push
add
arpl
dec
mov
jb
push
test
mov
mov
bound
repnz
cmp
jge
add
mov
dec
retf
loopne
adc
add
xchg
(bad)
and
mov
or
in
xchg
xchg
mov
loop
outs
scas
out
mov
cwde
imul
loop
jle
stos
ins
xchg
add
scas
jle
jmp
lea
int
inc
mov
dec
mov
mov
call
gs
sub
mov
in
sub
mov
pop
mov
pop
adc
mov
push
cmp
cmp
mov
bound
ins
fnstenv
cs
in
mov
cmps
aad
pop
out
repz
sbb
jge
adc
push
mov
pop
jno
dec
outs
retf
push
sbb
lods
mov
addr16
(bad)
je
repnz
xor
sub
pop
inc
les
rcr
pop
mov
jle
dec
jns
dec
fwait
mov
ja
sahf
add
test
(bad)
xchg
(bad)
xor
je
mov
inc
jmp
in
inc
sahf
test
gs
jbe
out
pop
fidiv
test
test
ret
push
leave
jno
(bad)
jne
adc
xchg
or
sub
cmp
dec
sub
jne
jae
jnp
jge
or
mov
jmp
mov
movs
les
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
pop
inc
pop
sbb
push
pop
ins
xor
cmp
sub
ror
ret
pop
movs
stos
inc
mov
inc
mov
dec
mov
mov
mov
stos
mov
call
mov
mov
in
popa
add
in
inc
aam
xadd
adc
pop
std
sub
ja
call
adc
adc
xlat
xor
outs
mov
adc
lar
aas
add
adc
int3
and
xchg
imul
cmc
push
mov
sbb
pop
xor
pop
cmp
or
fidivr
add
pop
int
in
test
(bad)
fst
inc
xlat
out
push
fld
or
push
and
xchg
sub
in
test
cli
cmp
int3
push
add
push
adc
dec
movs
jnp
adc
mov
outs
mov
add
push
jo
bound
repz
cmp
xchg
sbb
out
or
cmp
pop
add
ret
mov
daa
jmp
fild
gs
je
jnp
sub
arpl
test
sbb
cli
scas
and
sahf
leave
pop
movs
int
mov
es
xchg
ins
into
adc
add
push
aas
jecxz
add
ds
into
and
push
jecxz
std
fwait
xchg
dec
xor
lea
icebp
dec
mov
inc
leave
fwait
jge
adc
fild
fist
pop
(bad)
mov
xor
or
pop
popf
mov
jb
push
xchg
mov
cmp
inc
out
ins
mov
outs
loope
(bad)
les
xor
inc
mov
pop
shr
mov
stc
inc
ror
movs
(bad)
mov
pop
shr
jge
retf
inc
jp
jle
loope
dec
loope
js
jnp
lds
lods
cmps
pop
into
push
lahf
mov
cmps
fimul
test
pop
daa
and
xchg
cdq
cmp
test
mov
mov
jb
hsubpd
push
jae
push
orps
inc
adc
jl
popf
(bad)
mov
sar
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
jo
ins
cmp
dec
xor
xchg
jmp
or
cmp
cmc
push
and
push
jmp
jbe
cmp
jnp
ins
stc
adc
cmps
jp
cmp
dec
sahf
dec
loop
icebp
outs
movs
jg
adc
inc
mov
jmp
add
rol
adc
push
or
and
cmp
adc
cmc
push
shl
out
fild
push
fcom
mov
sahf
push
aad
adc
call
out
sub
loopne
adc
cmp
std
ds
xor
repnz
jmp
ss
out
pxor
inc
in
push
sub
add
jecxz
adc
xor
mov
call
cli
mov
xor
scas
mov
xchg
fisub
mov
scas
les
ret
mov
jb
or
scas
addr16
add
in
push
aaa
hlt
or
pop
hlt
adc
inc
pop
add
mov
cmps
retf
les
mov
and
test
inc
sbb
iret
cmp
(bad)
sub
ret
scas
out
dec
test
fs
pop
jle
jg
pop
mov
xor
cmp
cdq
jo
in
pop
jecxz
add
add
push
and
push
push
jae
add
push
pop
fcomp
pop
retf
mov
jb
or
xchg
test
cmps
mov
sbb
jbe
add
adc
stos
adc
fisubr
loopne
arpl
jae
lea
movs
aam
fwait
nop
push
in
inc
sbb
push
cli
dec
outs
int3
dec
jbe
push
iret
addr16
test
jb
cmp
lods
cmp
jmp
add
cmp
push
loope
and
or
mov
popf
or
xor
inc
out
in
fwait
lods
xor
adc
push
lahf
sub
test
xor
xor
popa
pusha
sbb
iret
inc
push
into
popf
mov
or
add
sub
aas
mov
shr
into
and
not
cld
xchg
xchg
fstp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fnstenv
loop
icebp
call
aam
hlt
mov
rcr
iret
test
jecxz
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
loope
cmc
mov
jecxz
hlt
xchg
iret
test
ds
adc
stos
arpl
inc
mov
xchg
inc
les
je
jne
or
push
mov
jmp
bnd
pusha
ret
jge
popf
xchg
inc
test
movs
xchg
sahf
bound
bswap
call
mul
mov
shr
(bad)
cs
or
out
add
sub
repz
ficomp
and
xchg
inc
mov
ja
test
test
imul
dec
sbb
or
jmp
rcl
(bad)
bound
jp
lahf
xchg
inc
or
dec
jge
mov
xchg
addr16
(bad)
push
mov
push
xchg
sub
pushf
jae
aad
stos
cmc
daa
idiv
mov
shl
imul
mov
leave
push
movs
test
xchg
fist
retf
inc
mov
pop
and
test
(bad)
sbb
ins
cs
push
inc
jle
mov
adc
adc
cmp
push
mov
das
adc
jne
sbb
mov
mov
addr16
jne
in
mov
push
xchg
pop
nop
div
int3
mov
xchg
loopne
mov
dec
aad
arpl
xor
das
cld
imul
pop
or
mov
jb
loopne
push
int3
dec
push
pushf
dec
(bad)
dec
xchg
cmps
mov
movs
xchg
and
or
jbe
loope
mov
retf
cdq
movs
push
shl
ret
ja
movs
fiadd
ds
and
out
dec
(bad)
jecxz
adc
sbb
add
out
stos
enter
test
sub
ins
jno
add
addr16
sbb
aas
sbb
inc
in
popf
push
jmp
mov
or
cwde
or
das
xor
aam
cwde
mov
xchg
fild
shl
sbb
jmp
xlat
fst
rcr
(bad)
mov
xchg
cmps
in
cli
call
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
aas
jnp
dec
or
bound
xor
imul
dec
xchg
sahf
xchg
xchg
jno
fstp
in
inc
mov
push
sahf
jo
das
(bad)
jge
push
(bad)
psubusw
lahf
mov
movs
arpl
imul
sub
push
dec
adc
push
xor
inc
add
je
ins
xor
cmp
imul
sti
push
retf
push
sbb
into
and
add
inc
movs
xchg
sub
(bad)
xchg
mov
mov
bound
push
in
sub
xor
sbb
pop
repnz
cmps
dec
xchg
adc
(bad)
sub
in
or
int
push
lock
fsubr
sti
mov
xchg
jnp
outs
mov
repz
mov
pop
mov
and
pusha
mov
xor
cs
into
add
add
inc
ss
arpl
and
cmp
fist
xchg
fistp
pop
aaa
fs
jnp
ss
jnp
je
jp
dec
pop
pop
xor
arpl
lods
ds
push
movs
iret
pop
movs
mov
pop
pop
call
inc
int3
daa
and
ds
mov
sbb
(bad)
mov
sbb
gs
mov
pop
fdivr
mov
dec
aad
pusha
mov
mov
or
lods
lahf
fisub
sbb
jle
out
push
mov
cmp
pusha
mov
or
(bad)
(bad)
(bad)
sbb
adc
push
jmp
jle
repnz
in
push
int3
adc
or
xor
mov
sbb
int3
jno
add
fsubr
or
mov
add
imul
add
fisub
push
lock
aad
ficomp
xchg
xchg
xchg
push
xor
xor
ret
add
mov
bound
fld
push
loop
test
xchg
pusha
mov
pavgb
adc
dec
mov
and
push
adc
scas
ins
mov
popf
ins
cs
lock
scas
dec
xor
pop
les
repnz
daa
adc
xor
and
push
mov
mov
pop
sub
dec
mov
aas
call
ror
mov
adc
adc
sti
cmp
repz
jae
lahf
ins
mov
out
fs
mov
movs
pushf
jns
xchg
nop
dec
rcr
pushf
arpl
cmp
push
cmps
jbe
jnp
call
pop
retf
sub
mov
pop
mov
mov
mov
sub
xor
xor
sub
and
aas
pextrw
add
dec
mov
mov
add
pop
into
xor
pop
xor
sbb
cmp
cmp
jmp
add
xchg
jno
add
js
and
push
mov
xor
or
scas
jo
dec
leave
cs
pop
add
or
xor
pop
clc
or
push
cmps
test
ret
sub
icebp
cmp
repz
repz
cdq
cli
push
mov
fsub
sbb
cmp
pop
cmps
ins
mov
js
inc
add
ret
inc
stos
fidiv
jecxz
jmp
mov
push
mov
push
stos
lahf
cli
jg
adc
mov
push
mov
add
push
push
push
sbb
push
fdiv
xchg
xchg
xchg
mov
xchg
and
or
rol
fld
out
xor
popf
mov
adc
lahf
dec
fcom
add
sbb
pop
shr
out
xor
dec
mov
cmps
mov
push
test
jb
add
xor
shl
int3
dec
fiadd
push
int3
and
inc
fistp
mov
mov
xor
sub
sub
push
int
jecxz
mov
jmp
lds
cli
cdq
cmps
outs
int3
cmp
add
xor
repnz
shr
inc
das
adc
int3
xor
mov
aad
adc
pushf
movs
ja
nop
pusha
adc
dec
std
xor
neg
or
add
push
xlat
and
stc
inc
int
retf
dec
shl
inc
fnstcw
(bad)
mov
cmps
cdq
fwait
sahf
nop
inc
mov
and
movs
ins
mov
or
mov
mov
xlat
add
or
add
es
sub
xor
aas
enter
loop
adc
mov
mov
loop
cmp
pop
(bad)
push
xchg
popf
lea
cmp
pop
or
pop
sub
stc
or
loopne
stc
or
cmc
add
pop
repz
and
mov
jp
ja
js
or
push
fbld
jmp
repnz
sbb
jecxz
mov
or
sbb
jmp
jmp
out
push
sbb
push
(bad)
cld
mov
mov
mov
(bad)
aam
xor
or
pop
mov
xchg
outs
mov
cdq
push
jecxz
in
cmp
mov
inc
test
pop
fisub
add
mov
mov
mov
or
cmp
psllq
pusha
jmp
loope
movs
push
movs
inc
mov
shl
dec
and
out
test
dec
(bad)
pushf
leave
pop
iret
jp
mov
pushf
lahf
arpl
rol
sbb
add
dec
xchg
xchg
jno
stc
sub
push
sbb
add
out
leave
aaa
imul
adc
or
mov
pop
out
dec
mov
shl
dec
lods
xchg
ins
xchg
adc
aam
iret
or
call
xchg
xchg
outs
adc
dec
retf
lds
in
fnstsw
test
mov
cwde
ins
xchg
inc
retf
inc
aam
repz
(bad)
pop
mov
pushf
fwait
(bad)
in
push
mov
out
je
fs
mov
repnz
mov
inc
aad
add
adc
add
jp
push
shr
jbe
jno
sahf
mov
add
jge
or
aas
jmp
jle
cdq
gs
xchg
outs
fldenv
sub
adc
xor
or
sahf
stos
jge
fwait
popa
xchg
aad
ret
xor
adc
and
out
cmps
jl
pop
fst
lea
inc
int
into
imul
in
jae
and
repz
inc
std
and
xor
mov
cmp
and
or
pop
sbb
inc
mov
adc
pop
ret
imul
xchg
outs
mov
not
and
aaa
cld
or
pop
lods
nop
repnz
leave
dec
shl
mov
mov
inc
mov
and
and
and
and
in
es
push
(bad)
xor
dec
fist
sbb
or
sub
sbb
mul
stos
les
inc
mov
sbb
pop
mov
sub
push
retf
inc
fild
cmp
mov
lahf
mov
leave
jbe
inc
aad
ficomp
inc
mov
mov
add
sahf
bound
in
and
and
pop
push
imul
push
test
ficomp
dec
retf
jle
nop
test
sahf
pusha
int3
aas
ds
lock
hlt
xchg
mov
fbstp
in
xor
and
aas
sbb
pop
test
jo
cs
jmp
sbb
or
das
enter
out
ins
or
mov
lahf
jle
mov
mov
lea
int
std
push
shr
lea
mov
test
jl
jge
jbe
xchg
(bad)
pusha
fisub
push
(bad)
in
xchg
xchg
push
mov
test
mov
call
dec
into
and
pop
movs
mov
(bad)
jg
jl
sub
sub
push
test
xchg
push
js
sub
das
jge
addr16
and
add
mov
mov
mov
sub
jnp
fwait
jge
mov
dec
test
jbe
dec
mov
js
leave
sub
inc
movs
jle
jge
outs
es
cmp
push
adc
std
xor
cmp
pop
sbb
retf
dec
xor
push
test
int
out
movs
inc
lds
xchg
sahf
jb
mov
ins
stos
call
iret
adc
push
xor
ret
push
movs
jnp
inc
xlat
pop
xor
out
cmc
xor
aaa
sti
sub
xchg
jne
arpl
mov
jae
lods
ja
xchg
cli
push
iret
gs
xor
in
lock
pop
adc
xor
adc
getsec
sbb
loop
sbb
xor
and
hlt
inc
into
xor
syscall
xor
xor
pop
lods
cdq
mov
iret
inc
in
sub
ins
mov
xor
out
fisub
and
mov
dec
rol
mov
jns
push
fmul
pop
fiadd
mov
outs
movs
xchg
xchg
mov
lahf
mov
jg
es
jg
in
jne
inc
hlt
inc
aam
cmps
sahf
stos
fwait
xchg
mov
and
pop
or
mov
mov
les
ins
into
ins
(bad)
pop
inc
push
jmp
ss
pop
fiadd
out
aas
sti
push
adc
push
mov
adc
xor
dec
repnz
mov
mov
jo
or
jecxz
cli
dec
call
jecxz
aam
leave
and
aaa
pop
adc
xor
cmp
cmp
ins
shr
aaa
sbb
adc
sub
adc
loop
int3
sub
or
jnp
arpl
sub
loop
aad
xchg
mov
test
mov
jmp
push
pop
leave
push
cmc
pop
shr
(bad)
adc
in
adc
lds
sbb
push
int3
ins
fmul
and
pop
mul
pop
add
jge
and
or
addr16
aaa
cmp
push
loope
or
adc
jns
mov
xchg
mov
mov
mov
aas
out
sbb
or
adc
sbb
add
xchg
cwde
sahf
xchg
cdq
mov
sti
push
fdivr
xchg
mov
and
mov
test
mov
sti
dec
out
push
sar
je
mov
push
mov
into
jp
je
mov
jmp
imul
loopne
rol
mov
mov
cmp
(bad)
ds
cld
and
push
mov
les
mov
std
sub
push
pop
jecxz
pop
push
pavgw
int3
pop
sbb
lock
mov
inc
pop
push
add
push
stos
data16
into
and
pop
stos
jno
popa
cmps
imul
pop
jno
imul
xor
sub
push
cmp
loopne
xor
cmc
cmp
add
xor
icebp
add
sub
mov
add
loopne
out
leave
push
fidivr
inc
fisub
or
adc
adc
cmp
push
out
cmp
pop
aam
mov
or
stc
push
out
xor
sti
pop
mov
add
dec
aam
(bad)
or
cmc
xchg
xchg
popf
jo
je
xchg
repz
test
fwait
out
pop
mov
adc
pop
fst
movhps
push
push
out
mov
push
fild
cmc
add
mov
xor
inc
mov
cmp
push
loope
aaa
jmp
pushf
push
js
in
retf
mov
mov
jnp
call
inc
retf
jl
mov
pop
mov
add
jl
(bad)
mov
xchg
xchg
popa
les
addr16
dec
aas
or
(bad)
xor
es
fimul
ins
stos
imul
lock
xor
retf
inc
call
push
jecxz
sti
ins
aas
sbb
pop
pop
xor
and
add
jmp
pushf
stos
nop
xchg
jp
and
bnd
sub
jbe
dec
(bad)
and
add
or
mov
mov
and
add
daa
icebp
xor
fstp
xor
push
sbb
sub
mov
mov
xlat
cmps
mov
test
inc
mov
mov
inc
rol
cmc
ss
inc
mov
arpl
pop
std
push
mov
and
xor
push
mov
out
cmp
inc
(bad)
or
xor
jmp
dec
fdivr
mov
mov
jb
dec
mov
jno
jae
shr
jae
jge
jle
cmp
dec
aam
std
push
fisub
not
test
daa
sbb
mul
clc
sub
shl
call
cmp
cmp
jge
sub
lahf
jns
bound
ret
pop
fstp
iret
push
mov
lds
in
test
mov
leave
imul
out
add
sbb
push
leave
inc
sar
iret
xor
cmc
inc
mov
push
mov
repz
add
pop
adc
sahf
dec
repnz
mov
jne
pop
out
mov
push
jmp
add
aam
call
push
in
mov
sbb
pop
sti
xor
aaa
clc
aaa
pop
scas
jns
cmp
pushf
lea
(bad)
lea
xchg
mov
and
adc
and
push
test
xchg
je
pop
clc
jnp
push
out
retf
daa
jmp
mov
popa
mov
xor
pop
(bad)
aaa
(bad)
xor
out
dec
mov
xchg
lahf
inc
fld
mov
inc
mov
fld
push
cs
cmp
xor
cmp
and
ret
and
inc
les
sbb
idiv
sub
cmp
pop
fild
and
loopne
or
push
adc
ds
daa
mov
or
daa
sub
in
ss
add
pop
(bad)
stc
pop
(bad)
xor
les
movs
jg
dec
mov
(bad)
popf
jb
pop
lds
push
stos
lea
imul
fadd
je
dec
shl
cmp
add
jecxz
out
pop
cmp
pop
mov
mov
mov
adc
loopne
jmp
add
dec
in
mov
pop
xor
push
int
sbb
pop
mov
gs
xchg
jns
out
push
lea
lea
xchg
nop
popa
ficom
(bad)
push
adc
pop
fsub
imul
dec
mov
cli
push
test
adc
dec
test
push
scas
data16
or
dec
sar
cmp
sub
icebp
dec
out
sub
cmp
jb
and
and
sub
inc
adc
cmp
aaa
pop
leave
inc
fidiv
dec
sub
adc
sbb
out
sbb
push
scas
xlat
test
lds
popa
leave
or
fwait
arpl
fisttp
std
dec
mov
mov
popa
in
cmp
xor
inc
xlat
dec
adc
or
pop
cmps
inc
int3
xor
xor
imul
jecxz
mov
loope
rcr
sub
pop
rol
cmp
std
dec
cmps
mov
inc
mov
mov
mov
mov
mov
push
(bad)
and
xor
pop
cmps
xchg
push
ret
sub
add
ins
frstor
jbe
or
pushf
mov
jnp
jno
ss
and
push
xor
cmc
push
fsub
add
sub
xor
or
cmp
add
or
movs
jno
popa
cmps
jnp
inc
shl
icebp
push
xor
pop
inc
mov
fist
jbe
repnz
xor
sub
jmp
adc
in
(bad)
popf
jae
xchg
imul
fisub
inc
rcr
cdq
outs
xchg
mov
movs
imul
jns
push
aam
in
xor
jns
inc
rcr
push
(bad)
xchg
sbb
push
aad
xchg
mov
xor
out
or
ins
stos
inc
cld
or
cmp
push
(bad)
and
cmp
and
inc
add
std
add
adc
cmp
mov
mov
cmp
and
pop
mov
pop
cmp
xor
xor
dec
(bad)
xor
ret
adc
lahf
arpl
pop
sbb
and
cs
pop
stos
dec
mov
xlat
es
mov
repz
cmps
fild
neg
stos
(bad)
lahf
out
movs
js
fwait
je
xchg
fs
add
sar
push
loopne
cld
add
iret
xchg
cmp
add
or
ds
outs
rol
and
jmp
repz
cmp
and
sbb
in
lahf
data16
fnstenv
jmp
add
cmp
pop
fst
cwde
rol
ins
idiv
jp
cmp
lock
cdq
mov
push
mov
out
push
shl
ret
sub
cli
paddw
jno
sub
push
fcom
jae
jg
ins
or
test
push
aad
js
push
cwde
gs
test
xchg
hlt
sub
les
cmc
cmp
cmp
xchg
fild
ja
add
push
sbb
popa
adc
aam
sbb
pop
mov
and
push
or
std
jge
popf
imul
out
lds
mov
jmp
rol
and
or
sbb
retf
dec
sti
ds
sub
mov
mov
dec
in
push
loopne
test
cdq
mov
ins
movs
fnsave
mov
jl
mov
xchg
inc
sar
sbb
sahf
xchg
inc
mov
ja
loopne
mov
xchg
js
or
sub
jp
ja
mov
adc
out
jnp
sub
es
push
jmp
mov
test
jne
jmp
xchg
rol
mov
xor
mov
inc
sub
das
lock
inc
mov
add
aas
sbb
ds
call
gs
and
add
adc
inc
mov
call
xchg
(bad)
les
call
dec
in
out
cs
nop
mov
dec
or
jno
cwde
xchg
pusha
mov
neg
push
or
xor
dec
and
cmp
sub
mov
sub
and
cld
add
xchg
fwait
jb
dec
(bad)
pop
adc
cld
xor
push
mov
or
adc
add
push
test
inc
scas
std
push
(bad)
aaa
jmp
xor
inc
scas
arpl
push
scas
jl
and
shl
mov
jle
push
push
jmp
pusha
mov
pop
fistp
pushf
xchg
jo
inc
cmc
push
mov
jno
jbe
ja
test
out
dec
jmp
pop
lds
nop
cwde
jg
sub
ss
adc
pushf
mov
repz
jmp
pop
ficom
je
cmp
sub
add
push
movs
dec
cmps
nop
dec
iret
mov
jbe
fwait
push
pop
adc
scas
mov
into
xor
adc
daa
jmp
adc
push
shl
push
les
or
push
cmp
push
xchg
push
mov
fbstp
cmc
cmp
jg
jg
xchg
sahf
pusha
mov
jo
daa
ret
dec
iret
xor
int3
psrlw
add
(bad)
mov
arpl
pop
in
push
lods
inc
fdiv
jle
stc
inc
mov
cwde
inc
mov
nop
fwait
inc
daa
sbb
adc
jb
jno
and
mov
mov
lahf
dec
mov
mov
and
das
and
and
inc
stos
jb
sub
out
inc
fdiv
out
push
ret
cmp
les
in
and
dec
ret
inc
rol
adc
in
sbb
fiadd
aas
add
sti
cdq
xchg
lahf
jb
ins
test
femms
sbb
and
into
cmp
pop
fild
add
adc
inc
fadd
cmp
loop
sti
cmp
lds
mov
ror
push
out
xor
add
ins
rcl
mov
pop
mov
adc
xor
add
and
or
enter
mov
mov
mov
cwde
jb
outs
mov
push
test
or
in
out
scas
mov
(bad)
or
jae
push
push
adc
ficom
xchg
xchg
dec
xchg
das
sbb
sub
cmp
ins
lods
jnp
mov
sahf
cwde
repz
fisttp
mul
out
lds
icebp
push
fbstp
in
dec
fisubr
cmc
or
ins
xlat
dec
movs
jg
inc
cmp
stc
push
stos
dec
retf
push
fldenv
loop
pop
in
or
push
jge
inc
mov
cs
push
mov
popa
out
cmp
pop
fdiv
icebp
and
add
cmp
dec
test
jmp
inc
mov
mov
cmp
cs
es
psrad
mov
adc
mov
outs
or
sbb
and
cmc
add
sbb
pop
aam
mov
fimul
xchg
inc
mov
je
and
(bad)
pop
sbb
add
repz
jmp
sbb
push
xchg
xchg
popa
mov
mov
outs
mov
or
and
xor
in
in
sahf
jl
mov
jnp
mov
mov
xchg
push
fnstsw
lock
adc
or
cli
es
stos
jbe
ja
dec
(bad)
push
xchg
sub
xchg
jle
das
das
xor
out
rcl
sub
or
out
xor
inc
mov
or
call
xor
pop
mov
mov
call
ins
cmps
mov
imul
xor
call
or
cmp
push
stos
nop
repnz
(bad)
and
ss
sub
loope
cmc
sub
sub
push
(bad)
cmp
push
test
es
push
movs
je
cdq
mov
jno
sbb
sbb
dec
(bad)
imul
out
push
movs
xchg
xchg
inc
rol
and
clc
pop
frstor
gs
xor
cmp
ja
ins
cmp
xchg
jecxz
push
sbb
in
dec
mov
xchg
pusha
mov
and
ja
ss
loop
push
cli
or
push
int3
dec
mov
mov
jg
xchg
xchg
sub
push
retf
daa
inc
add
cmp
xor
xor
(bad)
mov
push
jb
push
push
adc
or
ret
pop
aam
hlt
add
jno
ds
test
aam
leave
sub
outs
or
in
in
sti
and
pop
cmps
inc
movs
popa
int3
xchg
push
jge
test
mov
movs
xchg
cmps
mov
mov
xchg
push
jp
jne
inc
add
(bad)
ds
lds
outs
stos
pushf
mov
pop
iret
xchg
into
add
push
movs
test
and
and
cld
add
ds
leave
dec
rcr
daa
cmc
xor
dec
mov
clc
dec
cmps
xchg
popf
jo
jg
in
xchg
lahf
sahf
inc
mov
jo
(bad)
fild
add
arpl
xor
es
call
ja
cmp
xchg
ja
gs
imul
mov
ret
es
and
imul
out
jl
jge
and
test
and
jg
out
xor
aam
mov
jne
or
cmc
loopne
jno
push
stos
icebp
dec
ins
ins
cld
scas
retf
push
jmp
and
mov
neg
add
std
lock
and
jmp
fwait
jg
shl
push
aaa
push
pop
adc
and
adc
outs
xchg
mov
ins
sbb
out
push
add
jbe
int
and
call
add
pop
add
mov
or
jno
call
stc
or
push
fs
pop
sbb
adc
push
mov
ficomp
(bad)
cs
and
test
mov
aad
jno
fmul
adc
mov
xor
lds
jmp
std
jmp
mov
(bad)
cli
push
bnd
test
and
repz
fidivr
mov
pushf
and
mov
dec
add
push
and
pop
xor
inc
mov
sbb
stc
pop
add
repnz
xchg
adc
call
sub
or
jmp
or
ja
mov
cmp
psubb
and
cmp
test
fwait
int3
fmul
xchg
mov
rcl
hlt
sub
or
push
ins
inc
ins
(bad)
xchg
add
in
sub
sahf
or
push
ss
les
js
bound
inc
jl
aaa
stc
sub
mov
xor
xchg
das
cmp
repnz
and
retf
adc
sbb
adc
nop
addr16
and
cs
sbb
dec
sbb
and
ss
fistp
mov
fadd
arpl
dec
mov
gs
dec
iret
adc
movs
push
arpl
pop
jbe
sbb
add
cld
cmp
mov
ins
fistp
daa
mov
push
fild
add
push
mov
mov
stc
cmps
mov
xor
cmp
js
pop
lfs
loop
scas
fadd
xchg
iret
cmc
and
mov
jmp
jp
fcmovne
mov
sub
out
or
in
xor
jecxz
shr
pop
sub
repnz
scas
jb
xchg
jbe
data16
loop
dec
mov
mov
cmp
jo
aaa
mov
jae
lds
jno
mov
xor
push
call
das
rcl
mov
mov
call
pop
pop
mov
push
pop
and
adc
push
dec
adc
or
or
out
sbb
mov
mov
mov
cmps
inc
add
lods
fwait
into
aaa
clc
stc
jbe
pop
push
shl
inc
fs
shl
jne
xchg
xlat
cmp
mov
fcomp
aam
add
and
xor
lea
pop
cmps
fnstcw
cmc
and
mov
mov
xchg
rcr
ja
out
in
jg
xor
xor
ret
aaa
jg
adc
popf
neg
bound
loope
std
fld
mov
sbb
ss
dec
rcl
sbb
sub
cmps
pop
sbb
fisubr
sbb
(bad)
rcr
stc
ja
jmp
xlat
int
or
mov
push
xchg
jae
into
imul
ins
xchg
cmp
movs
sub
lods
cmp
xchg
aaa
daa
(bad)
dec
dec
mov
inc
nop
push
sub
push
ins
jge
push
mov
dec
cmp
into
sar
or
je
push
iret
ret
pusha
jne
push
add
stc
cmp
rcl
sub
push
inc
clc
popf
jg
cs
jmp
dec
add
ror
(bad)
jnp
fs
jmp
dec
inc
or
lock
or
enter
jno
leave
or
sbb
or
je
pop
dec
lods
fistp
cdq
clc
and
xor
cmps
iret
mov
sahf
add
push
ins
cmp
loopne
cld
fadd
or
dec
nop
arpl
arpl
stos
(bad)
jbe
push
xchg
fcmovnbe
mov
(bad)
loopne
mov
cmp
push
jae
popf
gs
and
lahf
ins
out
add
sahf
xor
std
sbb
jbe
xchg
fucomi
adc
fcom
mov
aaa
dec
mov
ja
daa
mov
jecxz
mov
addr16
push
xchg
adc
aad
pop
jle
out
xchg
movs
es
dec
xor
lea
jmp
rol
jecxz
cmp
cmp
stos
sar
pushf
mov
repz
mov
icebp
pusha
ins
data16
fidiv
xor
mov
push
out
jge
or
mov
aas
(bad)
adc
jge
push
mov
adc
mov
dec
sbb
pop
lods
bound
repz
push
je
ins
aas
push
aam
jnp
jno
pusha
mov
xchg
push
mov
pushf
test
mov
push
ja
cmps
ror
shl
sbb
in
push
push
aam
xor
lds
inc
add
add
(bad)
loop
jb
pop
pop
int3
mov
mov
test
push
mov
mov
inc
xlat
xor
popa
aam
push
dec
rcl
inc
and
jmp
push
mov
dec
je
hlt
xlat
mov
mov
rcr
fcomp
add
icebp
dec
movs
ins
xor
fdiv
xchg
cmp
data16
mov
adc
nop
test
ss
sbb
add
fistp
nop
pop
leave
cmp
sbb
out
sub
add
dec
add
popa
dec
mov
shl
cmps
inc
and
mov
cmp
dec
out
xchg
fs
data16
jg
stos
and
hlt
mov
stos
inc
xchg
movs
jmp
jle
fild
or
and
jb
jnp
fdiv
cmp
adc
mov
int3
pop
pop
fisttp
mov
xchg
jge
xchg
lahf
sub
fdivr
or
sar
fcmovb
mov
pop
test
cmp
fisttp
sub
call
sbb
pop
inc
mov
xor
js
sahf
xchg
jns
rol
test
scas
sbb
les
or
mov
mov
push
retf
cmc
add
push
mov
jnp
pop
in
inc
jae
inc
test
mov
lods
jo
cld
leave
ss
fidivr
push
test
retf
xor
movs
lods
(bad)
rol
xchg
or
cdq
xor
xlat
xor
stos
xchg
and
push
sar
jmp
jmp
and
and
jbe
cwde
xchg
retf
jecxz
xor
pop
out
std
out
nop
cdq
out
add
outs
retf
push
pop
cmc
outs
jns
clc
cmp
push
or
ficom
cmps
cli
imul
call
push
add
jmp
push
mov
pop
test
pop
imul
inc
in
stos
mov
pop
jne
mov
dec
and
nop
test
call
sbb
sti
add
(bad)
scas
push
sar
pop
movs
cwde
cmps
fimul
xchg
retf
mov
mov
mov
ins
and
jo
dec
pop
cmc
jne
nop
sti
push
cmp
sub
arpl
nop
xlat
cs
out
gs
es
mov
push
stos
popf
lock
shr
jecxz
jg
and
adc
sbb
dec
ja
xchg
in
cmp
sbb
out
and
test
(bad)
test
sub
aam
pop
repnz
les
xchg
xchg
fld
xchg
mov
or
or
push
pop
(bad)
xor
push
xchg
outs
mov
jg
adc
cs
cmp
stc
dec
fwait
sub
ja
and
(bad)
xchg
inc
fistp
stc
xchg
test
pop
fadd
mov
call
sahf
dec
xlat
mov
std
fidiv
lods
std
sti
dec
pop
bound
mov
and
dec
inc
ja
jp
cmp
mov
out
cs
ja
sbb
sub
std
jne
stos
adc
add
mov
mov
jae
repnz
pop
adc
pop
cdq
and
fsubr
jmp
pop
out
sahf
bound
push
xchg
pop
in
mov
imul
xor
fbld
mov
dec
push
(bad)
pop
(bad)
fst
(bad)
mov
pop
fld
dec
xchg
inc
or
das
xchg
shl
lds
jp
mov
adc
dec
pop
inc
ret
dec
pop
scas
(bad)
jbe
sub
inc
lods
dec
cli
pop
inc
test
test
mov
inc
in
or
xchg
dec
adc
add
mov
dec
mov
pop
pop
pop
imul
mov
or
jmp
sti
xor
daa
push
mov
fadd
aaa
push
lods
adc
fcom
mov
sbb
lock
pushf
lods
(bad)
mov
jmp
int
loop
clc
test
mov
out
icebp
cmps
ins
movs
loope
(bad)
ins
and
jnp
push
mov
adc
jmp
int
pop
xor
xchg
popa
(bad)
xor
shr
sub
lds
or
sbb
(bad)
and
cmp
mov
leave
xchg
dec
xor
or
add
faddp
mov
les
(bad)
cli
fdiv
push
mov
inc
fs
(bad)
mov
push
mov
mov
pushf
xchg
outs
xchg
repnz
xchg
adc
pop
mov
je
xchg
pop
and
lock
xor
fisub
icebp
dec
movs
mov
stc
push
jl
mov
adc
hlt
jmp
push
pop
sub
sub
or
mov
mov
sbb
int
clc
js
mov
cld
dec
shl
test
lahf
add
mov
cmp
(bad)
push
add
stc
or
and
lds
fimul
stos
fidiv
mov
pop
mov
ss
cmc
stos
enter
mov
ret
xlat
out
dec
rcl
pop
jl
movs
ins
or
loopne
fadd
jnp
mov
imul
and
or
jmp
(bad)
pop
mov
inc
nop
call
mov
out
adc
or
mov
add
mov
hlt
movs
mov
add
jb
mov
int3
(bad)
lods
or
cs
cmp
mov
inc
cmps
imul
je
popf
ret
data16
scas
cmp
ret
ror
sub
popa
mov
rep
or
ss
fmul
fld
cmp
sbb
mov
inc
jge
mov
iret
and
fst
pop
(bad)
popf
pusha
jge
test
add
and
int
cmp
nop
dec
lock
dec
in
pop
sub
sbb
fnsave
xchg
or
dec
retf
or
pusha
sub
mov
add
mov
cs
test
ror
sub
cmp
xor
mov
fs
sbb
fdivrp
out
xor
adc
nop
shr
(bad)
cmp
dec
stos
mov
adc
fdiv
or
loope
jge
or
cmp
outs
mov
push
xchg
lods
test
icebp
pop
jle
retf
rcr
xchg
mov
stc
mov
cs
fidiv
fnstcw
mov
in
enter
xchg
adc
arpl
int
add
adc
scas
and
stos
cli
(bad)
sub
push
pop
mov
into
out
xor
push
pop
push
jmp
and
push
dec
xchg
jns
ret
mov
push
aas
inc
pop
or
sub
mov
push
mov
jo
int
shl
int3
int
cld
jecxz
xchg
rcr
mov
jno
movs
cmp
in
mov
add
adc
adc
ja
mov
das
dec
data16
nop
icebp
mov
nop
xor
push
call
js
lods
addr16
loopne
cmp
pop
lahf
fist
fcomp
sub
lods
push
or
iret
inc
or
mov
out
or
adc
jb
rcl
mov
or
imul
arpl
test
xchg
mov
and
cmp
xlat
inc
sbb
xchg
push
push
xor
mov
mov
mov
in
add
mov
xchg
xor
pop
stos
jl
repnz
push
jno
pop
pop
shl
sub
sbb
push
pop
aad
add
ret
and
rcr
mov
sbb
push
xor
jbe
mov
ret
xor
mov
cdq
cmps
ret
push
arpl
aas
mov
int3
call
and
jecxz
dec
adc
es
jns
jle
into
jno
sbb
push
sub
pop
fsubrp
or
cmc
loopne
jmp
and
loopne
enter
fdiv
adc
loope
mov
inc
cmp
dec
xor
inc
std
jecxz
movs
push
out
cmps
mov
cmc
and
and
xchg
mov
mov
fst
mov
inc
out
out
sub
jb
ret
jge
inc
jl
or
xchg
lahf
sub
mov
(bad)
popf
retf
fs
cwde
inc
inc
dec
je
frstpm(287
retf
xchg
fimul
in
mov
sub
aad
dec
xchg
out
jecxz
cdq
add
hlt
mov
mov
addr16
add
xor
mov
jecxz
cmps
xor
adc
shl
mov
jp
addr16
mov
adc
das
cs
in
xchg
cmps
jecxz
adc
inc
xchg
xchg
jl
dec
shl
push
mov
leave
scas
fiadd
pop
idiv
mov
ins
out
imul
mov
nop
stos
adc
(bad)
enter
mov
xchg
daa
sub
xchg
xchg
mov
sbb
xchg
shl
enter
xchg
push
nop
jmp
xor
mov
outs
dec
jo
fimul
xchg
cmp
sbb
test
add
xchg
lds
rol
xor
push
sub
enter
inc
sbb
push
cmps
cmp
xchg
mov
xor
add
in
sahf
mov
sbb
adc
lods
add
in
mov
(bad)
in
mov
mov
xchg
jp
into
add
std
sbb
arpl
addr16
fwait
rol
sub
sub
xchg
mov
mov
sbb
jle
(bad)
xchg
adc
push
push
xchg
fnstenv
xchg
pop
das
test
loopne
aaa
mov
or
sysexit
push
cld
dec
(bad)
adc
mov
out
ror
push
mov
mov
sbb
in
add
test
or
inc
xor
scas
xchg
stos
gs
mov
ret
or
mov
test
and
push
jnp
mov
ret
mov
dec
jo
xor
mov
inc
dec
push
xchg
mov
xchg
loopne
mov
or
lock
mov
jmp
sahf
popf
lds
int
inc
mov
push
(bad)
jp
jecxz
push
jne
icebp
push
lahf
add
imul
mov
ja
mov
std
push
imul
push
bound
cmp
ror
fidiv
jb
sbb
push
fldcw
inc
nop
mov
(bad)
mov
adc
push
test
jle
jmp
jnp
wbinvd
retf
pop
mov
mov
(bad)
fstp
xlat
mov
dec
out
pop
or
sar
mov
jnp
jl
clc
mov
push
data16
test
addr16
mov
loop
mov
imul
shl
std
cmp
test
and
xor
mov
les
adc
(bad)
dec
aaa
pop
fcom
sbb
loope
lds
fdiv
in
cmp
jne
adc
mov
out
cmp
sub
mov
movs
xchg
cmp
mov
ins
jmp
call
std
in
lods
int
repz
scas
cdq
std
jge
imul
mov
cmp
in
out
adc
push
fwait
js
mov
lea
jne
xchg
retf
jo
test
mov
repz
mov
pop
xor
xor
lahf
cmp
das
sbb
push
pop
sbb
stos
jns
ficom
cmp
ins
sbb
cld
dec
push
push
test
push
fisttp
test
aaa
jne
sbb
pop
arpl
jmp
mov
mov
pop
xor
jno
je
test
jle
inc
sahf
sti
xor
and
push
stos
jmp
repnz
jmp
mov
jb
dec
push
(bad)
pop
inc
or
sbb
das
sbb
bnd
outs
aas
and
jg
movs
pop
aam
add
add
sbb
jge
jmp
lock
call
push
loopne
cwde
(bad)
jmp
sub
test
mov
mov
pop
push
push
cmp
pusha
loopne
xor
jns
cmp
es
adc
xlat
movs
stc
adc
add
jno
sub
mov
and
sti
xor
jne
pop
mov
loop
mov
pop
push
dec
sar
sub
leave
xlat
mov
adc
shr
sub
xchg
ja
and
loop
jno
scas
add
cmps
es
test
cmp
outs
shl
and
inc
adc
enter
fdiv
fstp
push
dec
mov
xchg
sbb
test
xchg
iret
repnz
sub
mov
imul
sub
and
push
mov
jae
push
(bad)
ds
ss
pop
out
push
mov
jb
or
cmp
fisttp
mov
lods
dec
stos
push
lea
mov
jno
adc
loopne
jp
jg
(bad)
mov
inc
bound
mov
cmp
into
shl
dec
jge
push
das
popa
xor
cmp
pop
into
and
movs
xchg
pand
push
push
jns
imul
sbb
jmp
xor
imul
shr
mov
rol
inc
mov
push
daa
push
shl
jg
inc
inc
xchg
and
jle
das
inc
(bad)
shl
es
xlat
mov
outs
in
enter
aad
adc
out
or
jmp
jb
daa
nop
mov
adc
sbb
mov
push
shl
stos
mov
jle
lds
inc
jg
retf
dec
sub
cmp
or
push
lds
push
jmp
mov
dec
out
daa
push
pop
scas
outs
push
ret
cmp
test
mov
mov
mov
jne
sbb
or
lods
test
xlat
fdiv
(bad)
das
(bad)
mov
xchg
arpl
aaa
addr16
mov
xchg
xchg
xor
ror
scas
ret
cli
jnp
pop
or
mov
dec
jge
pop
pop
dec
mov
adc
mov
pop
mov
loopne
adc
jno
loop
dec
jb
xor
pusha
or
cmc
xchg
retf
dec
dec
xor
fdiv
enter
dec
mov
cmp
dec
mov
fdiv
mov
movs
arpl
fistp
outs
out
test
lock
jp
mov
pop
pop
dec
jmp
mov
test
fidivr
pop
rcr
enter
add
push
xor
mov
inc
retf
dec
(bad)
aam
jb
sbb
shl
repz
dec
sbb
cmp
cmp
fs
xor
call
mov
jo
movs
mov
call
(bad)
mov
dec
push
jge
mov
jp
retf
push
rcl
ins
scas
div
in
test
ins
inc
jo
fcom
mov
pop
mov
loope
and
(bad)
ror
pop
pusha
dec
ins
add
push
adc
pop
jle
(bad)
loopne
lds
call
add
sbb
mov
jg
jae
test
fidivr
push
fldenv
jge
stos
and
cwde
imul
sub
into
and
mov
xchg
or
pop
jle
jae
popa
test
jnp
enter
cwde
xor
jo
or
jmp
and
test
sub
push
(bad)
repz
mov
add
dec
cs
ds
dec
add
jns
imul
popf
shl
inc
retf
push
add
pop
ds
and
cmp
sub
pop
in
xchg
rcl
jp
jle
pop
sbb
shl
dec
ret
lods
(bad)
push
dec
(bad)
pop
and
add
jmp
aad
shl
add
adc
sbb
(bad)
out
xchg
pop
cmp
cmp
mov
sti
xchg
mov
xchg
shl
and
loope
in
icebp
mov
pop
es
sbb
mov
rol
or
icebp
fs
lds
fisub
out
adc
lods
std
(bad)
loopne
imul
jno
test
mov
sub
pop
push
push
adc
jmp
in
mov
outs
adc
dec
adc
dec
xor
mov
push
push
xchg
repnz
xchg
mov
and
jl
adc
adc
hlt
lods
in
xchg
mov
mov
cdq
lods
int
popa
pop
adc
icebp
pop
aaa
pop
in
jbe
sub
mov
or
dec
sub
test
scas
rol
cmps
(bad)
imul
jnp
daa
pop
aam
ret
mov
xchg
mov
(bad)
mov
xchg
fsubr
dec
movs
push
dec
push
pop
sti
jp
inc
mov
mov
mov
xor
dec
add
sub
push
cmp
fstp
sbb
outs
out
fcomp
add
sbb
xchg
xchg
sti
imul
push
adc
cmp
push
stc
mov
lods
xor
imul
(bad)
xlat
lahf
repnz
rcl
outs
cmp
push
push
xor
stos
lock
adc
inc
sbb
jge
dec
jns
pop
out
add
jno
shl
jge
add
add
pusha
pop
pop
jp
popa
push
push
sbb
push
and
add
jmp
int3
xchg
cmps
retf
dec
adc
jne
icebp
mov
(bad)
stos
in
mov
and
popa
sbb
jbe
and
xchg
lock
add
and
and
scas
push
push
xor
std
popf
lock
ja
push
imul
add
(bad)
mov
pop
push
ins
icebp
mov
adc
out
imul
cmp
fisub
push
shr
cmp
pop
push
adc
aaa
push
out
adc
dec
out
(bad)
neg
add
add
sti
movs
icebp
pushf
call
cmps
(bad)
mov
sub
pop
loope
and
push
out
mov
mov
popa
or
mov
(bad)
mov
xchg
mov
mov
lahf
(bad)
popf
scas
pop
sub
in
loope
(bad)
xchg
fcom
jecxz
fistp
xor
jbe
cwde
mov
add
cmp
xchg
std
imul
lods
jl
gs
jnp
dec
or
and
mov
xchg
test
mov
mov
rol
cmp
sub
pop
sbb
ja
dec
mov
aad
cmc
xchg
cmps
(bad)
movs
data16
inc
add
xor
xchg
fidivr
popa
xor
or
mov
mov
shl
push
fistp
pop
xchg
xchg
cmc
lahf
aam
scas
xlat
xchg
sti
imul
xchg
std
repz
fs
rol
out
nop
xlat
pusha
icebp
mov
push
jae
pop
jne
test
mov
mov
or
mov
jb
push
fisub
dec
or
dec
pop
xor
xchg
jnp
pop
pop
pop
push
je
jge
pop
add
in
rol
das
pop
add
lods
fstp
ja
xlat
nop
fst
call
sub
sub
sub
jmp
test
inc
and
add
aad
idiv
data16
pop
push
pop
pop
gs
dec
adc
popf
ficom
mov
mov
inc
dec
daa
pop
add
inc
in
mov
ins
test
add
push
pop
ja
ss
sub
pcmpgtw
add
and
ins
adc
sub
xor
adc
adc
inc
xor
pop
sub
pop
es
cld
mov
outs
xor
cmp
or
pop
adc
add
mov
test
cs
cmp
addr16
cmp
in
jmp
dec
sub
js
imul
repnz
sbb
inc
or
jne
in
loopne
ret
mov
cmp
pusha
cmp
pop
adc
xchg
mov
pop
imul
and
into
mov
xchg
inc
add
mov
mov
and
and
call
test
pop
adc
push
test
scas
fild
sbb
pop
cmp
ins
add
xor
mov
test
dec
sbb
cld
sahf
out
jmp
jb
xchg
sti
cwde
bound
cmps
stc
fs
cwde
call
xlat
add
fist
push
sub
push
loopne
mov
fs
and
jl
cs
test
push
adc
jo
and
div
mov
data16
(bad)
mov
lock
cwde
xchg
hlt
dec
aad
test
mov
nop
mov
or
push
rdpmc
imul
adc
inc
cmp
inc
out
lahf
(bad)
mov
inc
xor
pop
or
or
inc
ror
push
sbb
je
or
cld
mov
lods
(bad)
pop
sbb
rcr
les
aas
js
push
in
movs
js
out
jne
pop
in
mov
xor
mov
or
add
jp
mov
mov
mov
mov
xchg
push
hlt
mov
sbb
loopne
fs
or
popf
xchg
push
or
jo
leave
in
test
xor
jl
js
mov
xor
out
cmp
sbb
out
xor
push
sub
call
pop
call
cmp
sub
xlat
mov
mov
mov
test
call
lds
adc
add
popa
add
stos
sahf
sbb
test
arpl
jbe
lds
mov
jb
fcmove
scas
call
out
xor
stc
pusha
or
sub
or
pop
adc
cmp
add
retf
movs
fnstcw
stc
pushf
jmp
enter
cwde
retf
jmp
in
je
and
mov
mov
cmps
or
sbb
xor
jl
jb
pusha
cmp
add
aad
aad
mov
mov
mov
lahf
cli
mov
fimul
or
fdivr
xor
js
pop
xor
and
jge
add
inc
loop
cs
add
pop
int
clc
fwait
cld
fwait
in
mov
jle
es
movs
cld
retf
into
mov
mov
sti
pushf
int
aad
enter
retf
arpl
jns
int
jmp
shl
int
xlat
mov
sar
cdq
retf
test
ins
cmp
in
(bad)
fcom
fild
int3
mov
repz
jl
ins
add
daa
out
inc
sub
jl
pop
in
repnz
inc
xor
out
ret
xchg
retf
cld
pushf
arpl
adc
(bad)
dec
sub
pop
repz
jae
add
cmp
sub
xor
adc
fs
(bad)
cmp
pushf
fist
xlat
test
push
sbb
push
sbb
adc
inc
sub
dec
and
lahf
fld
aad
bnd
lea
pop
add
inc
and
add
jp
and
fstp
sub
sbb
add
cld
and
shl
(bad)
sti
jns
aas
pop
loop
retf
rol
push
es
clc
mov
into
std
ret
mov
call
fist
and
add
dec
or
jg
push
call
loopne
cmp
aam
lock
fisttp
outs
push
inc
xor
in
scas
ret
mov
cmp
push
enter
and
mov
or
jg
jle
enter
push
mov
clc
mov
or
cmp
stos
aam
out
xchg
pop
push
repnz
ins
aas
std
pop
push
iret
jo
inc
add
jp
(bad)
cli
xor
sub
ds
aas
ret
stos
stc
(bad)
fldcw
dec
sub
adc
call
add
out
pop
xor
and
pop
sbb
xchg
mov
paddsw
imul
punpckldq
jo
stc
outs
fld
not
jnp
pop
push
loopne
fdivr
dec
cvtdq2ps
pop
jmp
push
je
xlat
out
sti
mov
(bad)
lods
(bad)
xchg
les
pop
shl
sub
mov
ret
gs
inc
adc
test
cmp
dec
lods
ret
mov
jno
cdq
hlt
mov
and
cmps
dec
pop
push
ds
sbb
jnp
pop
ds
ds
(bad)
and
mov
call
sub
mov
movs
scas
dec
sbb
jge
or
xchg
fs
or
inc
fimul
cli
push
ret
jmp
enter
pop
or
push
sub
sub
or
test
fisttp
cmovbe
addr16
cmc
mov
cs
or
mov
xchg
(bad)
int3
out
scas
out
test
sbb
sub
shl
cmp
dec
ret
das
cmp
inc
mov
add
hlt
xchg
test
dec
js
jp
dec
(bad)
fist
shl
sub
loopne
out
xchg
cmps
jg
pop
or
jmp
pop
mov
xchg
int3
sti
pushf
fist
test
pop
cmp
dec
cwde
xor
dec
add
push
fs
sbb
pusha
add
cs
cdq
repz
out
mov
scas
jno
loopne
inc
mov
push
sub
cs
shl
or
mov
jmp
or
sahf
jne
push
xor
jecxz
in
popf
mov
push
xor
and
clc
inc
mov
call
fwait
cmc
inc
es
jg
xor
sub
test
mov
shl
ds
loopne
mov
nop
inc
mov
jno
leave
xchg
jg
outs
call
cld
xchg
xchg
pop
add
inc
stos
leave
movs
mov
push
lahf
das
jb
pusha
sbb
test
dec
fidivr
xor
jno
mov
push
jo
push
sub
les
inc
adc
mov
stos
in
mov
inc
enter
dec
sar
push
test
pop
sbb
hlt
idiv
add
(bad)
cli
xchg
hlt
xchg
mov
push
mov
pusha
and
icebp
mov
leave
stos
pushf
mov
test
into
test
jg
push
inc
or
and
mov
jb
push
xor
(bad)
cmps
lds
cdq
fiadd
arpl
and
xor
pop
inc
or
adc
or
sbb
sub
arpl
pop
sbb
or
sub
shl
fld
rcl
jae
ins
das
sub
stos
ror
jo
aad
ror
ret
lods
int3
call
in
ret
ins
cmp
(bad)
(bad)
stos
jmp
jmp
rcr
push
mov
icebp
push
sbb
es
call
cdq
mov
imul
pop
sub
mov
sub
sub
jbe
jne
das
imul
and
shr
stc
imul
xor
jmp
idiv
loop
xchg
cli
xchg
in
mov
fsub
xchg
fidivr
dec
ins
and
jo
cld
mov
push
push
cmp
ss
cwde
loopne
outs
pusha
or
add
test
mov
cmp
ficomp
pop
jecxz
fiadd
jbe
stos
js
jns
mov
aam
aam
hlt
mov
cmp
out
mov
lods
mov
dec
xchg
xor
dec
repnz
jge
pop
mov
sbb
ins
sub
inc
jae
sbb
pop
stos
out
clc
push
mov
mov
not
sub
sbb
rol
mov
sbb
dec
or
out
sbb
ds
cmp
and
mov
xor
jge
push
mov
adc
movs
rcr
inc
repz
fld
js
adc
pop
ret
sbb
pop
add
(bad)
aaa
push
push
and
xor
inc
mov
mov
fadd
or
cdq
ret
stc
xchg
cld
jno
push
sbb
dec
into
(bad)
call
inc
movs
fld
popa
sbb
cmp
or
outs
mov
xchg
stos
jp
sbb
popa
sub
loop
movs
(bad)
mov
out
add
clc
cdq
push
add
and
sbb
add
xchg
ret
xchg
push
daa
pusha
cs
cdq
loope
into
ds
mov
dec
adc
push
push
ror
fnstcw
jg
shl
mov
mov
pop
sahf
pop
or
pop
or
jbe
or
es
out
cwde
add
cmps
clc
mov
outs
push
jmp
sbb
xchg
(bad)
push
pushf
mov
ds
test
int
test
xchg
sar
and
(bad)
jmp
call
daa
inc
pushf
add
stc
sub
xor
mov
sub
mov
aam
cmc
xchg
pop
adc
sbb
arpl
ins
inc
sub
and
mov
ja
enter
aam
pop
push
sub
mov
pop
cmp
neg
dec
and
pop
hlt
mov
(bad)
xchg
loope
mov
pop
call
push
xor
and
push
inc
pop
fs
rcr
adc
cmc
xor
and
lods
xor
cmp
in
cmp
or
xrelease
cs
xchg
imul
das
aas
aad
shl
cld
xchg
inc
es
in
mov
pusha
mov
inc
and
adc
mov
mov
int
mov
je
daa
je
dec
and
xor
mov
and
push
add
jnp
mov
jmp
dec
aaa
daa
cli
int
rcr
jae
aaa
mov
mov
iret
sbb
mov
pop
jle
xchg
jecxz
(bad)
dec
and
mov
pushf
enter
int3
popf
sar
ret
inc
add
add
imul
xchg
rcl
addr16
retf
fnstsw
outs
adc
fisttp
sub
das
and
mov
(bad)
gs
cdq
hlt
je
addr16
sti
mov
xchg
fistp
call
cwde
dec
sub
call
push
int
mov
retf
jb
push
out
lock
and
inc
movs
lods
lds
cwde
jnp
out
cmp
mov
mov
aad
test
(bad)
xchg
mov
fs
mov
sbb
dec
cs
cmp
dec
cmp
enter
lahf
pop
sahf
xlat
xor
std
scas
cli
inc
aas
aaa
cld
pushf
clc
mov
je
jae
mov
xchg
stc
mov
rcl
idiv
push
adc
inc
xor
repz
pop
mov
out
mov
mov
ja
jnp
dec
movs
out
rcr
mov
jge
dec
xor
daa
data16
(bad)
xor
jno
pop
add
loop
dec
sub
mov
mov
xchg
movs
iret
mov
xchg
pop
adc
loopne
mov
add
add
and
xchg
and
xor
adc
addr16
mov
mov
xchg
retf
xchg
mov
rep
sub
jns
movs
bnd
fbstp
popf
lock
push
(bad)
xchg
inc
sbb
push
and
cld
jbe
(bad)
lods
ret
movs
lods
rol
lahf
cli
jmp
ror
cli
mov
adc
pop
xor
retf
mov
stc
in
rol
adc
sub
jno
jno
mov
nop
cmps
frstor
ror
cdq
aad
rol
add
ja
push
scas
into
mov
and
js
inc
or
inc
and
dec
or
inc
sub
push
mov
dec
(bad)
outs
mov
in
movs
std
pop
jmp
xor
arpl
sahf
inc
xchg
rol
outs
rcpps
jb
jnp
popa
jmp
jge
repz
punpckldq
mov
dec
or
dec
sbb
mov
retf
hlt
mov
fwait
cmc
imul
call
icebp
mov
push
movs
mul
mov
sbb
pop
sbb
adc
jne
sbb
lods
(bad)
dec
add
out
sahf
retf
(bad)
icebp
jne
and
sahf
icebp
nop
stc
outs
sbb
sbb
inc
add
ja
ror
cmp
dec
icebp
cwde
mov
stc
outs
fwait
mov
lock
fadd
mov
test
mov
pop
clc
sub
inc
sub
sub
cmp
push
pop
push
xchg
(bad)
mov
push
and
sub
fld
ins
mov
retf
mov
adc
leave
stos
fisubr
repnz
and
fcom
arpl
mov
(bad)
mov
adc
sbb
inc
sub
pusha
push
outs
adc
push
sbb
pusha
add
jnp
push
inc
and
sub
shl
addr16
mov
adc
imul
sub
test
test
mov
gs
outs
cmp
out
call
jbe
mov
jns
ja
jnp
jno
push
cmp
aad
push
rol
bound
or
cmp
je
inc
or
mov
xchg
mov
jne
jg
mov
cmp
sbb
rol
or
sti
xor
push
sbb
mov
push
ds
xchg
push
daa
outs
add
cmp
xchg
mov
push
in
cmps
fist
xchg
lock
cmps
(bad)
movs
leave
pop
leave
fs
xchg
int3
xor
jp
push
cmp
scas
std
jmp
adc
pop
push
or
mov
xchg
push
ss
adc
ja
pop
cs
mov
add
push
idiv
sbb
push
pop
xchg
out
lds
cs
xor
push
add
pop
dec
mov
xor
daa
jae
sub
push
arpl
(bad)
arpl
lds
xor
jae
push
xor
popa
sbb
sub
cdq
jno
mov
mov
fmul
js
add
add
xchg
fidivr
xchg
neg
adc
mov
xchg
or
dec
call
push
adc
jo
test
daa
mov
ror
loope
mov
das
push
mov
sti
cwde
frstor
rcl
arpl
push
mov
int3
mov
mov
cmp
cmc
inc
sub
cmp
les
data16
xor
inc
clc
mov
nop
and
and
mov
ret
fwait
jb
test
xchg
ja
xor
inc
popa
or
push
adc
fmul
punpckhbw
fcom
in
xchg
jl
scas
aam
mov
aaa
std
adc
xchg
bound
sub
add
les
stc
adc
sahf
(bad)
sub
xchg
scas
cmp
js
mov
xchg
cmps
jp
pop
sbb
mov
mov
adc
cld
mov
inc
push
dec
cwde
fdivr
rol
dec
or
scas
mov
out
add
ret
xor
div
lock
and
std
mov
jge
icebp
mov
xchg
shl
(bad)
imul
(bad)
cld
push
jns
jge
sbb
dec
xor
(bad)
aad
scas
mov
and
dec
xor
popa
adc
dec
out
sar
stos
fild
es
push
retf
xor
mov
int
inc
fistp
push
sbb
mov
xchg
icebp
popa
jmp
push
aaa
je
test
dec
cs
loopne
lds
sahf
xlat
pushf
iret
imul
dec
retf
xchg
pushf
test
in
(bad)
loope
cmc
fs
push
mov
scas
ficom
test
mov
into
stos
call
push
cld
ds
mov
jmp
hlt
addr16
fistp
xor
es
pop
push
sub
push
cwde
cli
mov
arpl
call
ficom
nop
sar
or
test
sahf
(bad)
clc
cdq
shl
xor
push
in
into
mov
cdq
xor
pop
fs
loopne
and
js
loop
test
or
je
pop
inc
add
test
int
js
mov
(bad)
cwde
fimul
add
mov
mov
xchg
cmc
(bad)
lock
jae
cmp
xchg
fidivr
ja
xor
inc
sub
fsub
stos
enter
xchg
sub
push
cmp
push
push
sbb
inc
mov
stos
in
mov
xchg
(bad)
mov
pop
(bad)
cmp
aas
mov
int3
mov
cwde
ja
fnstcw
inc
and
fwait
clc
xchg
fiadd
adc
mov
cli
cmp
ins
inc
push
jnp
pop
sbb
es
or
sub
or
or
xchg
ret
push
sub
out
cdq
repz
gs
arpl
(bad)
or
dec
das
dec
stos
das
and
jnp
cwde
mov
aam
cld
lods
nop
popa
loop
int
push
push
ret
mov
mov
inc
xchg
int
or
retf
cwde
loopne
cld
sbb
adc
imul
inc
stc
sbb
imul
mov
int
cmp
add
sbb
test
fcomp
loop
cmps
jecxz
retf
int3
test
and
sbb
sbb
push
scas
loop
xbegin
or
call
cmp
shl
(bad)
je
fs
outs
sbb
sbb
outs
adc
retf
ret
popf
das
xor
dec
add
dec
or
arpl
sbb
jnp
xchg
outs
ss
jle
pop
adc
adc
imul
out
(bad)
mov
bound
in
jae
inc
or
nop
xlat
fs
sub
sbb
pop
and
add
jns
and
dec
or
in
icebp
adc
inc
add
pop
sbb
ins
and
fmul
(bad)
jmp
mov
xlat
cwde
cmps
int3
movs
shr
xor
xchg
test
pop
adc
sbb
(bad)
xchg
ficom
jecxz
(bad)
mov
or
sbb
jp
xchg
fcomp
jge
jno
jo
or
jmp
(bad)
adc
scas
repz
and
movs
enter
aam
mov
mov
test
inc
cmc
pushf
call
sbb
inc
adc
push
jae
jno
pop
adc
push
pop
or
fwait
cld
arpl
inc
and
inc
adc
cmc
popa
or
jne
(bad)
fimul
push
aaa
jle
pop
adc
push
sbb
add
inc
sub
cmc
out
mov
clc
mov
dec
ss
test
xor
pusha
in
sbb
push
or
jnp
(bad)
retf
outs
adc
mov
add
loope
or
cmc
mov
adc
jmp
and
pop
push
xor
push
cmp
repz
movs
movs
shl
repnz
cmp
ret
jne
ins
push
pop
lds
xchg
xchg
in
in
or
jl
and
shl
stos
fimul
fcom
mov
jp
and
mov
pusha
or
int
fst
jmp
stc
inc
pop
inc
or
out
cmp
xchg
fdivr
repz
cmp
push
jb
inc
and
cld
mov
cld
and
sub
jno
inc
or
xchg
mov
xor
add
jp
or
popf
clc
bound
dec
or
jecxz
ficomp
int3
xor
dec
sbb
or
xchg
(bad)
mov
pop
pop
jge
dec
mov
mov
movs
inc
xchg
hlt
cdq
in
push
cmp
retf
loop
ins
jno
push
or
aaa
push
sbb
inc
sub
lock
std
push
imul
imul
adc
minps
js
add
or
or
dec
das
inc
scas
pop
aas
inc
xor
sub
xchg
xlat
mov
or
cmp
or
in
(bad)
cmc
arpl
scas
frstor
add
xor
ds
xor
or
xchg
sahf
icebp
cmp
enter
cmp
cwde
ror
jecxz
js
cmp
and
inc
push
push
xlat
xor
lods
rcr
and
ss
sub
std
(bad)
loope
stc
gs
aas
cmps
fnsave
xlat
inc
in
pop
mov
cmc
(bad)
in
xor
add
aas
and
cmp
pop
lods
(bad)
(bad)
mov
test
pusha
loopne
mov
fidiv
pushf
fcomp
and
rep
clc
nop
ficomp
dec
sub
data16
lahf
ret
retf
cmps
mov
aad
shl
mov
pusha
cmp
pop
lahf
test
pop
dec
cmp
inc
in
jb
push
add
fimul
mov
and
inc
xor
cmp
add
es
stos
into
call
xchg
les
mov
mov
jmp
and
jne
push
jg
push
mov
lods
(bad)
mov
push
mov
mov
arpl
sar
pusha
pop
cmp
jo
and
jno
in
mov
jns
in
movs
leave
mov
(bad)
shl
and
add
sbb
inc
cmp
and
cmp
pop
sbb
fwait
or
sbb
ins
cs
mov
lods
mov
in
fistp
loopne
retf
inc
inc
push
(bad)
mov
jnp
sub
pop
adc
jae
sub
adc
je
and
add
pop
inc
or
les
dec
gs
jmp
(bad)
mov
and
dec
loopne
or
mov
xchg
mov
fiadd
pushf
fst
scas
xor
shl
popf
xor
movq
enter
jne
ins
sub
mov
jns
jbe
push
and
pusha
sub
dec
out
into
inc
ins
pcmpeqw
ja
jnp
cmp
adc
push
pop
cmp
inc
adc
fidiv
pop
and
xchg
neg
pop
push
mov
cmp
jb
inc
pop
sub
es
ficom
xchg
clc
fwait
cli
xchg
fstp
lods
icebp
mov
push
cmp
push
or
inc
add
push
adc
(bad)
in
pushf
test
mov
lahf
movs
ret
jb
fisubr
scas
(bad)
call
addr16
test
mov
adc
dec
or
(bad)
xchg
mov
nop
sti
sahf
(bad)
jg
ins
add
sub
lahf
(bad)
nop
jbe
stos
(bad)
mov
mov
inc
adc
jb
jne
dec
and
dec
or
cmc
stos
stc
xchg
sar
mov
xor
mov
xchg
cwde
inc
or
and
mov
cmp
xchg
retf
xor
dec
and
mov
xchg
and
pop
(bad)
loop
add
jbe
add
jge
lods
ret
push
adc
jp
push
mov
aaa
dec
xor
push
movs
or
addr16
popf
div
mov
test
dec
adc
mov
add
xlat
sbb
and
pop
inc
ds
call
mov
add
jns
daa
imul
mov
mov
and
retf
mov
fwait
test
mov
inc
das
sub
xchg
inc
pop
jl
outs
and
lahf
imul
mov
adc
retf
scas
fstp
ja
mov
sbb
movs
loop
js
clc
xor
and
jbe
arpl
bound
push
out
cli
xchg
les
pop
aas
sbb
ins
adc
sbb
bound
fldenv
and
cmp
cld
xor
sti
ds
lock
ret
fistp
and
cmp
aam
fidiv
sub
inc
or
cmp
outs
jmp
mov
scas
rcr
ficom
fwait
std
or
jl
or
call
jmp
cld
arpl
jg
cli
int3
xchg
cmps
mov
sub
and
push
fld
xchg
repz
rcr
in
stos
test
popa
in
lods
mov
sbb
or
dec
sub
adc
jnp
pop
and
pop
je
jg
pop
and
push
arpl
jmp
ror
icebp
mov
scas
shl
pop
cmp
ja
cmp
push
scas
adc
js
jo
inc
scas
add
shr
(bad)
in
mov
stc
call
sbb
add
cld
and
mov
push
jno
sbb
cmp
or
mov
sti
mov
mov
xchg
push
inc
adc
pop
cli
xchg
fmul
mov
scas
call
bound
jp
jne
mov
sub
stos
icebp
xchg
fdiv
(bad)
xchg
mov
int3
test
(bad)
neg
sub
push
cmp
pop
rol
push
and
inc
add
sbb
or
cld
aad
ret
stos
aam
add
fnsave
rol
or
(bad)
and
inc
cmp
add
push
or
test
adc
cmp
jl
jl
outs
xor
out
in
pushf
jl
test
lea
scas
(bad)
mov
mov
and
jbe
fcom
mov
shl
cmps
ficom
test
movs
aam
dec
sbb
mov
push
xchg
fst
xor
pop
aad
cwde
loopne
outs
mov
pushf
into
nop
enter
dec
sub
ds
add
cmp
inc
ss
add
call
in
jp
gs
add
jmp
dec
mov
gs
sbb
pop
das
icebp
shl
les
movs
mov
xlat
fidivr
cmp
in
in
xchg
sub
add
stc
ror
and
pop
push
scas
inc
in
jle
or
pop
ds
pop
fstp
xor
jnp
sbb
jp
daa
(bad)
test
std
mov
and
jle
movq
je
jnp
fiadd
dec
mov
ficom
cdq
jmp
daa
jp
pop
inc
or
push
dec
add
adc
mov
mov
push
inc
or
jmp
pusha
or
sub
outs
call
push
out
mov
adc
jno
(bad)
sti
mov
xchg
icebp
mov
(bad)
in
mov
add
push
mov
fs
fld
out
hlt
and
leave
stos
(bad)
mov
test
(bad)
test
mov
add
inc
or
push
pop
loope
pop
and
retf
xor
xor
daa
push
loope
test
fdivr
and
icebp
call
out
test
lods
leave
pusha
pop
es
daa
outs
or
les
mov
dec
test
xchg
shr
dec
sbb
mov
imul
and
xor
mov
cvtps2pd
data16
add
mov
add
dec
and
int3
mov
lods
rol
clc
and
mov
(bad)
bnd
bound
adc
inc
fwait
leave
add
ret
mov
shl
lock
cmovge
ds
aas
dec
in
xchg
icebp
mov
loop
hlt
or
xor
dec
adc
adc
xor
stos
int
lds
sub
dec
xor
xlat
pusha
or
test
jle
dec
inc
cmp
sti
in
xchg
shl
mov
sub
repnz
mov
cs
pop
in
mov
and
jnp
ja
jnp
sub
inc
das
dec
xchg
ins
xor
adc
in
nop
jmp
out
in
xchg
stos
xchg
mov
push
sbb
mov
or
cmp
push
xor
sbb
pop
add
push
jge
ins
or
adc
dec
scas
and
in
cwde
fnstsw
popf
mov
stc
mov
scas
std
xchg
shl
xchg
push
inc
(bad)
sbb
jae
outs
sub
lods
mov
lods
clc
fwait
int3
mov
inc
add
inc
mov
iret
and
(bad)
mov
mov
mov
bound
inc
es
data16
sbb
jge
dec
aas
pop
sbb
push
cmp
gs
pop
add
cmp
push
sub
out
mov
jo
push
and
hlt
sahf
cmc
mov
int3
arpl
inc
call
mov
dec
leave
mov
out
leave
mov
or
repz
push
cmp
sbb
imul
add
mov
xchg
leave
adc
sar
jg
pop
or
sub
std
nop
loopne
jge
push
cmp
jbe
addr16
leave
lods
jmp
scas
jmp
les
dec
daa
cmp
dec
add
daa
or
jns
push
pop
push
push
sub
int
ret
mov
add
push
inc
push
sbb
add
and
pop
jl
push
push
or
and
ret
jp
xchg
aam
fwait
ret
mov
or
je
sbb
push
xor
in
and
enter
xlat
cmp
dec
sbb
leave
bound
dec
xchg
xchg
repz
push
cmp
retf
mov
push
or
mov
adc
xor
pop
and
cs
xor
ror
add
and
mov
sub
xchg
icebp
xchg
rcr
mov
xchg
movs
in
mov
in
scas
into
xchg
prefetch
in
mov
mov
scas
lds
data16
add
js
dec
sub
inc
sub
push
int
push
jle
xchg
std
cli
mov
mov
jmp
imul
or
dec
sub
ss
lods
(bad)
mov
in
out
jecxz
mov
mov
mov
sti
and
ins
adc
das
addr16
test
test
in
shl
pop
pop
push
pop
sub
imul
movs
in
cmc
mov
sub
fistp
adc
pop
jmp
inc
mov
sbb
(bad)
ds
fild
int3
lods
aam
lahf
cld
xchg
loope
add
cmp
sub
jno
push
xchg
stc
xchg
xor
ss
or
rol
or
imul
test
lods
leave
nop
in
sahf
cs
xor
(bad)
cld
cwde
loopne
fcomp
call
add
jns
repz
add
jmp
rcr
loope
push
push
aaa
push
push
into
sbb
add
add
jmp
xchg
mov
jno
xor
stos
in
rcl
dec
stos
push
pop
jg
add
mov
das
pop
or
in
nop
xlat
(bad)
in
test
aam
pop
pop
jp
je
sub
sbb
call
adc
and
jl
jns
jmp
movs
addr16
and
add
pop
xor
stos
(bad)
mov
scas
push
push
add
dec
ror
push
cmp
scas
jecxz
retf
mov
outs
lds
dec
cs
mov
(bad)
fdivr
cmp
push
cwde
stc
arpl
out
lahf
xlat
adc
or
cmp
sub
jmp
dec
xor
pop
push
pop
adc
jb
dec
pop
jl
push
adc
sahf
int3
(bad)
popa
cmp
dec
sub
xor
inc
daa
inc
xor
adc
adc
or
pop
cmps
cmc
adc
sbb
ds
ins
add
pop
sub
scas
lds
rol
fild
jne
imul
sbb
push
inc
cmp
jge
push
loopne
cli
mov
and
cmp
outs
mov
jb
and
jge
call
sub
or
fwait
aad
repz
sar
mov
xor
pop
push
push
sub
or
pusha
sub
mov
js
add
push
std
mov
adc
pop
adc
(bad)
std
pusha
or
pop
add
and
and
sub
mov
cmp
outs
xor
in
daa
xor
pop
pop
jb
ins
not
jle
loope
int3
cwde
inc
dec
out
int
shl
int3
nop
adc
add
call
jb
or
dec
mov
xor
dec
sub
inc
add
jne
ss
add
mov
pushf
movs
shl
in
retf
imul
xor
mov
cmp
dec
jecxz
out
cmc
cmps
fnsave
mov
fild
push
mov
nop
rcl
xor
cs
jl
scas
out
adc
cmp
lods
fst
add
push
leave
cdq
lods
test
add
jle
dec
sub
mov
repz
mov
scas
sti
cwde
leave
lahf
jmp
jmp
js
jg
imul
pop
jns
sar
out
stos
dec
sbb
jbe
ja
cmp
pop
ss
mov
(bad)
icebp
cwde
ret
mov
inc
adc
push
loopne
in
xchg
movs
hlt
popa
sub
(bad)
lods
ins
and
clc
mov
lds
mov
cli
gs
pop
xchg
in
iret
mov
dec
adc
mov
inc
or
or
push
add
and
scas
movs
int3
cmps
in
cmps
cmps
push
add
or
push
push
loopne
cmp
jl
lock
shl
imul
sbb
pop
inc
cmp
cli
cmp
pop
lods
popa
add
addr16
sbb
inc
stos
call
jne
out
mov
lahf
fdivr
add
mov
out
rcl
out
(bad)
pusha
in
sbb
imul
mov
shl
pop
out
jns
cmp
pop
adc
ret
and
out
fwait
ret
mov
lahf
xor
push
ds
stos
lock
add
or
inc
mov
bound
xchg
pop
imul
cld
mov
mov
inc
icebp
hlt
mov
mov
jbe
das
movs
leave
or
ins
and
loopne
int
cmps
(bad)
push
fs
in
xchg
ret
or
add
scas
mov
xchg
stos
imul
mov
shl
dec
adc
inc
push
sbb
int3
nop
enter
scas
lds
push
ins
xor
not
mov
mov
sbb
inc
or
push
fs
inc
sub
and
inc
or
sbb
aam
(bad)
es
push
push
and
pop
and
cdq
nop
adc
jns
jbe
jle
inc
xor
or
dec
or
and
push
add
jae
imul
inc
and
sti
stos
retf
test
cmp
(bad)
test
cmps
pop
and
ret
jmp
stc
call
mov
adc
in
iret
mov
mov
jnp
xchg
retf
adc
push
ins
mov
dec
sbb
out
sahf
cld
mov
mov
adc
dec
aaa
imul
cmc
push
jae
pop
add
push
ja
outs
rcl
lods
(bad)
mov
aaa
jg
jb
outs
xchg
call
jg
push
push
dec
add
sbb
jmp
cmp
jo
ret
fwait
in
jns
cmp
inc
in
xchg
ins
pop
xor
dec
loopne
fnsave
sahf
enter
jne
ds
sub
enter
push
push
add
js
sub
std
cwde
fild
pextrw
cmp
dec
aas
inc
sbb
jns
icebp
call
mov
addr16
sbb
(bad)
aad
ret
scas
aam
sub
(bad)
mov
scas
fsubr
mov
mov
outs
sub
clc
cld
mov
adc
adc
retf
or
shr
ja
imul
jae
jmp
mov
jns
popf
rol
push
mov
jo
jbe
xor
jmp
inc
mov
dec
and
adc
loopne
fdiv
in
xor
cmp
pop
aas
retf
lds
loop
pop
pop
and
jmp
inc
scas
mov
movs
leave
xchg
outs
xor
inc
sub
add
mov
test
pop
and
ret
jecxz
(bad)
scas
cmps
fdiv
adc
arpl
add
out
clc
lahf
(bad)
mov
aam
pop
dec
ss
das
dec
mov
enter
iret
jo
sub
test
xchg
arpl
out
lahf
xlat
adc
jmp
ror
test
imul
jno
adc
aaa
dec
das
push
sub
jb
cli
nop
sti
xchg
inc
enter
sbb
push
mov
xchg
push
add
inc
loopne
movs
fld
imul
cwde
mov
hlt
aaa
mov
jecxz
movs
push
mov
jo
mov
rcr
js
adc
sahf
(bad)
push
pop
inc
pop
mov
in
cmp
mov
jg
cmp
in
dec
mov
gs
cmp
enter
xlat
or
jmp
sub
xchg
loope
push
mov
sub
repnz
ret
jmp
in
loopne
lock
mov
mov
popf
cmps
pop
inc
cmc
mov
sbb
pop
push
scas
jb
std
adc
cmp
in
repz
jmp
lods
retf
sub
fstp
and
pusha
rol
sti
das
jle
call
xchg
pop
ss
lock
mov
out
mov
daa
imul
mov
mov
jb
pop
das
out
dec
int
mov
fs
mul
daa
jl
push
xor
inc
push
and
psrlw
xor
leave
adc
xor
cmp
cmps
pop
sbb
jge
xchg
xchg
mov
call
sub
into
jno
outs
xor
sub
sahf
adc
inc
mov
int3
pop
sub
mov
hlt
and
in
or
(bad)
aad
fwait
xor
jmp
sti
lds
loopne
push
jl
cmp
jmp
out
fdivr
scas
mov
mov
inc
or
daa
inc
retf
xor
mov
xor
mov
dec
shl
push
stos
xlat
push
or
lods
ja
xchg
movs
mov
cmc
(bad)
mov
sbb
mov
cmc
xor
(bad)
and
cmc
es
push
sbb
xor
je
shl
icebp
or
dec
and
push
add
fldcw
push
jns
jns
xchg
fidiv
lds
add
int
xor
sbb
sbb
or
xchg
and
cmp
push
outs
xor
jbe
(bad)
leave
or
xor
(bad)
test
jnp
xor
sahf
cmps
jbe
pop
out
lahf
dec
dec
gs
cmp
xchg
or
push
lods
pop
jmp
fdivr
sti
xchg
daa
dec
xlat
or
rol
dec
pop
jbe
mov
or
pop
inc
jp
adc
cli
sar
jns
xor
and
enter
mov
pop
mov
and
push
cmps
in
scas
adc
test
xchg
or
in
push
push
and
clts
sbb
jp
iret
mov
push
pop
jp
push
or
gs
adc
push
xchg
int3
ja
and
xchg
mov
leave
sbb
jmp
int
test
pushf
xchg
add
popf
add
lahf
fiadd
add
mov
push
add
xchg
std
inc
mov
pusha
push
or
dec
cmp
push
inc
shl
loop
or
test
les
outs
mov
nop
and
aad
adc
ret
sub
mov
or
int
dec
or
nop
or
pushf
daa
dec
lds
movs
xchg
gs
jo
pop
iret
jo
inc
test
dec
in
mov
repz
inc
xchg
or
or
call
cmp
call
mov
sbb
sti
cmp
test
inc
aad
nop
out
les
xor
adc
push
pop
and
neg
and
sub
out
test
xchg
lds
popf
data16
or
jbe
pushf
pop
dec
test
adc
aas
xchg
das
test
dec
cld
pop
jae
inc
pop
lea
mov
cmp
fdiv
cmps
lds
(bad)
dec
fiadd
out
cmp
fld
addr16
retf
mov
sub
shr
in
mov
push
aad
stc
adc
lock
fdiv
push
scas
movs
nop
int
sbb
sub
jne
mov
jae
iret
cmp
arpl
mov
adc
mov
ror
in
cli
mov
mov
fnstenv
je
imul
test
sahf
fucomi
mul
inc
outs
(bad)
dec
push
div
pop
mov
pop
in
mov
mov
pop
pop
inc
mov
callw
aas
mov
pop
dec
dec
aad
cdq
mov
lea
ret
push
add
inc
adc
int
lea
xchg
mov
retf
ins
jecxz
pop
out
adc
add
sbb
mov
movs
test
retf
mov
sahf
xlat
sbb
bound
test
shl
mov
jns
sti
jmp
or
push
into
bnd
movs
retf
mov
in
repz
test
ret
pop
and
cdq
cmp
cwde
push
sub
inc
jo
sbb
(bad)
mov
sbb
or
jno
sti
popf
cmp
and
dec
mov
jno
sbb
popa
imul
jg
adc
or
repz
imul
(bad)
mov
bound
pop
(bad)
and
ins
mov
xchg
jp
dec
pusha
test
imul
pop
imul
out
add
gs
jbe
(bad)
int
push
jge
pusha
pop
ins
shl
scas
das
fldenv
clc
pop
call
mov
jae
and
ins
fiadd
push
dec
inc
mov
rol
mov
fisub
sbb
movs
lds
out
stc
cmp
jo
jnp
mov
sbb
xor
add
cs
lods
push
inc
mov
scas
wrmsr
mov
lods
lahf
pusha
push
adc
mov
jge
or
addr16
jp
pop
lock
dec
push
xchg
fild
mul
icebp
lahf
jle
xchg
ret
loope
sbb
(bad)
mov
out
sbb
jno
push
xor
and
fs
mov
lods
inc
adc
(bad)
(bad)
aas
fcom
mov
sbb
sti
repnz
dec
or
sti
das
cmp
cdq
std
enter
push
mov
sub
push
push
icebp
ss
jmp
add
std
cmp
cmp
enter
pop
cmps
sub
fst
leave
pop
fisubr
sbb
(bad)
dec
inc
sub
lods
push
jg
inc
sbb
sbb
xchg
ret
inc
or
push
mov
and
cs
dec
ja
adc
push
xchg
inc
ins
sbb
jns
lock
dec
fsubp
pop
movs
jp
retf
aad
sti
mov
jle
in
js
jle
pop
cmc
std
cwde
or
mov
push
push
mov
dec
sahf
std
mov
(bad)
outs
pop
inc
mov
arpl
pop
dec
inc
hlt
push
into
push
xor
add
sbb
fstp
popf
in
sbb
xchg
popa
adc
das
retf
xor
mov
sub
(bad)
mov
sbb
hlt
scas
push
out
call
pop
or
addr16
jg
call
mov
cmp
pushf
iret
mov
jns
ss
mov
js
lock
addr16
adc
xor
cmc
pusha
dec
mov
add
dec
mov
sbb
xchg
in
mov
movs
das
mov
mov
mov
aaa
aam
retf
in
sub
mov
xchg
or
jg
test
fisub
loopne
cmp
fsubr
dec
rol
leave
jmp
outs
cmp
mov
das
int3
imul
pop
jecxz
mov
cmc
call
jnp
push
repz
test
gs
ins
lods
loop
dec
outs
out
xlat
mov
push
ret
stos
mov
fs
mov
rol
jbe
jne
push
jno
stos
mov
pushf
arpl
gs
add
or
sbb
jbe
and
fiadd
js
ins
repz
shl
xor
inc
cmp
daa
and
dec
inc
and
jp
call
cmc
adc
cmp
push
stc
into
test
sbb
cmp
jns
shl
aaa
call
inc
iret
jne
mov
push
mov
daa
mov
sbb
(bad)
cmp
dec
mov
or
in
adc
or
fidiv
and
shl
cmp
sbb
cwde
push
xchg
sub
lock
cmp
scas
mov
adc
xor
cmp
fcmove
jne
mov
mov
test
test
mov
loop
cmc
xlat
inc
mov
jmp
push
adc
ja
fs
push
les
ret
cmp
icebp
mov
pop
cmps
inc
push
ret
xlat
(bad)
js
pusha
int3
lock
mul
pop
data16
push
(bad)
rcl
pushf
fcomp
les
cmp
mov
pop
xchg
(bad)
lods
or
adc
sub
loopne
(bad)
ss
pop
add
in
into
aaa
cwde
xchg
outs
in
ucomiss
jp
pop
and
fnstenv
xchg
xlat
xchg
add
lods
pop
iret
fild
cmp
and
retf
or
or
movs
repz
inc
jl
iret
or
repnz
or
mov
sbb
cmps
mov
ret
add
xchg
fnstcw
inc
mov
or
scas
sbb
(bad)
add
adc
shr
xor
std
cld
ret
xchg
retf
repnz
xlat
pop
xlat
push
add
push
push
sar
cmp
sub
jmp
in
sbb
cld
push
jmp
mov
icebp
dec
cmc
xchg
jle
ins
popf
jg
and
sub
ss
cmp
inc
mov
xor
aaa
push
pop
adc
xor
(bad)
and
sub
pop
xchg
mov
dec
pop
fild
adc
sub
cmps
test
aaa
cmp
jl
rol
mov
lahf
adc
es
push
or
inc
xor
push
inc
xorps
stc
pop
jno
push
adc
mov
movs
fisttp
ror
lods
sbb
stos
cmp
mov
stc
sbb
sbb
xchg
add
cmp
aas
or
mov
jl
call
xchg
mov
push
pop
or
fbld
jg
outs
fwait
mov
add
fsubr
mov
bound
xor
ds
jmp
or
fyl2x
mov
in
lods
inc
jmp
or
dec
aam
adc
cli
stos
sub
jle
and
inc
pop
fsubr
imul
aaa
sbb
int
inc
sub
jne
dec
jns
pop
in
inc
push
or
mov
sti
cmp
clc
stos
mov
out
mov
sub
jp
and
mov
shr
in
mov
xchg
int3
mov
jge
xor
imul
hlt
in
dec
cdq
mov
xor
hlt
pop
jbe
sbb
mov
(bad)
out
adc
jne
ins
test
xor
mov
cli
mov
into
or
xchg
push
xchg
loope
popf
xlat
cmp
add
jno
loop
push
push
je
in
mov
push
push
sub
sub
jmp
into
fwait
mov
add
lea
scas
arpl
mov
fld
sbb
sbb
pop
ins
adc
or
loop
aam
imul
lds
pushf
outs
mov
test
mov
xor
mov
js
mov
retf
cmp
das
cmp
fs
aas
arpl
ret
jmp
pop
call
call
sbb
(bad)
in
cmp
(bad)
push
xor
in
add
imul
adc
rcr
push
mov
sbb
and
adc
sbb
sub
lods
(bad)
in
pushw
adc
push
dec
imul
cwde
rcl
inc
xchg
jbe
mov
sar
jnp
dec
out
xchg
pcmpeqw
les
stos
stos
jbe
pop
adc
(bad)
icebp
icebp
imul
xor
sub
fcmovu
inc
ret
mov
and
pop
int
lds
mov
test
push
out
xor
sysret
jg
cmps
daa
jnp
xchg
xlat
push
aam
stc
mov
or
xor
pop
in
jmp
and
and
retf
cmp
je
or
ret
icebp
sub
push
mov
sbb
jb
mov
or
shl
into
mov
or
ja
cmps
mov
push
(bad)
mov
dec
sub
cli
leave
pusha
pushw
ret
mov
ret
add
inc
cmp
test
and
pop
dec
jnp
inc
pop
sbb
push
xchg
int
mov
cs
pop
mov
push
push
stos
gs
jecxz
aas
or
mov
inc
jns
xor
mov
dec
pop
idiv
pop
mov
shr
adc
xor
shl
cmps
dec
cwde
or
cdq
movs
js
jle
psubd
add
pop
mov
lahf
rcl
and
adc
mov
push
add
lods
ins
mov
lock
pop
adc
or
pop
int3
xor
fimul
xchg
jmp
pop
inc
push
dec
jl
jmp
sub
adc
popa
mov
pop
int
test
push
pop
pop
hlt
cmp
(bad)
sbb
mov
xlat
scas
adc
hlt
mov
mov
adc
push
shl
test
(bad)
(bad)
fcom
je
sub
ja
inc
arpl
imul
dec
shl
inc
xor
aad
add
pushf
dec
mov
rcr
lods
rcr
int
dec
mov
mov
xor
inc
mov
jle
dec
int3
push
push
adc
lock
cdq
inc
shl
push
push
push
cmp
jne
dec
mov
jl
scas
ins
fdivr
in
push
dec
inc
or
xchg
les
rcr
das
inc
jbe
(bad)
mov
pop
lahf
iret
inc
mov
push
mov
test
test
mov
jbe
retf
test
loope
and
sbb
dec
aam
shl
dec
sub
and
push
test
adc
stc
xor
int3
addr16
and
xchg
cld
pop
inc
sub
enter
ja
add
mov
mov
gs
lods
sti
loop
push
push
sub
aam
fidiv
hlt
or
retf
loope
lods
imul
movs
push
mov
jo
xchg
xchg
fiadd
pop
scas
ins
push
jg
(bad)
jecxz
fs
push
xor
es
and
cmps
retf
test
and
outs
repz
cmp
dec
sub
sbb
out
leave
inc
shr
add
fdiv
test
xor
mov
(bad)
pop
push
in
push
ins
jo
int
xchg
popa
aaa
fisubr
sub
pop
rcl
xor
dec
loopne
pop
lods
push
ret
push
retf
cs
clc
xor
aad
xlat
xor
loope
sub
pop
mov
movs
dec
int3
das
loopne
out
pop
int3
dec
pop
mov
dec
mov
or
outs
mov
lods
push
cmp
push
jmp
div
or
mov
dec
mov
push
(bad)
jb
nop
(bad)
adc
fdiv
les
add
rcr
aam
hlt
imul
adc
ss
scas
cmp
push
addr16
push
mov
lods
fdivr
call
pop
pusha
push
push
inc
lods
fs
or
imul
fwait
out
jae
push
xchg
xor
dec
cdq
imul
dec
test
pop
add
ins
jne
mov
jge
sbb
pop
push
jae
cmc
scas
cmps
inc
adc
xchg
shl
push
ja
daa
mov
sbb
mov
sbb
pop
cmps
mov
(bad)
js
pop
icebp
cmp
pop
fiadd
push
lahf
mov
rcl
retf
lds
jne
or
iret
int
ficom
test
lea
mov
sub
jmp
es
xchg
sub
je
or
ja
ins
nop
dec
(bad)
dec
ficom
jge
xor
leave
out
push
and
ret
xor
mov
je
dec
js
dec
mov
js
mov
push
(bad)
xchg
jmp
mov
out
inc
loope
movs
xchg
(bad)
jno
sub
cmp
(bad)
rol
cli
jno
dec
fisub
bound
cmp
xor
cmps
xchg
sub
dec
mov
fwait
pop
sub
dec
test
fcmovu
jb
push
and
pop
imul
dec
add
cmp
in
pusha
out
sub
adc
inc
push
pop
mov
add
cli
sahf
frstor
push
pop
add
mov
sbb
call
add
(bad)
ss
das
pop
test
cmp
dec
out
in
leave
daa
dec
fdivr
add
in
or
jge
push
xor
mov
push
mov
inc
xor
test
out
cmps
out
mov
xchg
or
lea
jle
cmps
(bad)
jno
fcomp
dec
xchg
xchg
adc
pushf
adc
adc
push
imul
mov
xchg
jae
test
add
fistp
nop
add
mov
aaa
cmp
or
dec
pop
sahf
in
std
std
push
add
lea
adc
(bad)
ss
fnstsw
retf
mov
movs
sub
xchg
loopne
mov
fwait
in
ds
sbb
clc
push
pop
call
push
xchg
jl
or
fs
std
adc
mov
out
pop
cwde
xor
xor
retf
push
pop
fs
adc
arpl
popf
adc
xor
mov
sbb
(bad)
cmp
and
and
aas
jbe
scas
jae
or
pop
pop
loope
shl
imul
lods
adc
or
cs
add
pop
fsub
xor
lock
test
daa
ins
adc
addr16
leave
jp
outs
push
cli
cmp
cmp
ss
sahf
mov
repz
mov
rcr
sub
pop
out
mov
push
adc
aaa
addr16
sbb
xor
cwde
sbb
dec
and
ins
lods
adc
xchg
rep
ret
ds
je
repnz
jmp
mov
mov
dec
mov
sub
scas
inc
xchg
mov
rcl
fidivr
ins
sbb
pop
adc
inc
dec
push
sub
jbe
inc
push
add
out
xlat
pusha
leave
stos
sub
ins
push
mov
jge
jl
ds
add
xrelease
test
cmp
ins
dec
fild
in
nop
daa
enter
and
movs
ret
out
or
daa
in
mov
and
jmp
les
jecxz
push
ret
and
iret
fs
push
mov
dec
lods
call
dec
cwde
sub
lea
mov
pop
dec
or
cmc
mov
cli
arpl
mov
lock
movs
(bad)
rcr
mov
daa
adc
sbb
cmp
and
dec
push
(bad)
imul
push
xchg
retf
icebp
in
jns
sbb
(bad)
adc
test
dec
inc
sar
push
xchg
inc
loope
cmp
dec
push
(bad)
dec
adc
and
mov
jo
push
or
lahf
xlat
mov
outs
sbb
adc
lods
push
movs
dec
ficomp
imul
and
ret
outs
fild
and
push
repz
push
jmp
add
cmp
sar
leave
(bad)
jno
outs
call
subps
pop
cli
and
leave
sub
out
or
add
aas
and
pop
pop
push
es
int
jne
push
nop
into
int3
cmp
mov
xor
retf
aaa
dec
fsub
pop
rol
popa
std
sub
movs
cmp
mov
lds
(bad)
les
pop
loop
xchg
fld
sbb
dec
je
jns
mov
loop
sbb
pop
or
add
sbb
es
cmp
xlat
and
pop
sar
popf
lods
mov
loop
dec
jae
fs
dec
dec
dec
or
adc
xchg
imul
ins
ret
mov
xor
retf
daa
push
ins
xchg
fnstenv
inc
add
sbb
xchg
inc
jle
cmp
jae
scas
jmp
inc
sub
imul
test
mov
dec
dec
xor
lgs
(bad)
js
jo
add
push
outs
mov
test
int
adc
neg
xor
je
scas
mov
push
adc
push
add
adc
xchg
test
dec
push
inc
ret
pop
adc
cmps
jle
cmp
push
leave
xchg
jge
push
mov
adc
scas
adc
cmps
pushf
ror
sar
pop
iret
and
cdq
sbb
fstp
mov
xlat
test
add
xchg
and
mov
shr
xchg
popf
mov
aaa
mov
fcmovnb
push
icebp
in
in
sbb
leave
push
test
cmp
and
(bad)
dec
inc
sub
fmul
in
sbb
pop
mov
bound
xor
jns
sbb
pop
sub
sub
(bad)
mov
jge
loope
cmp
xchg
and
dec
mov
movs
push
fs
push
cmps
mov
mov
push
pop
or
in
mov
outs
add
inc
(bad)
adc
push
mov
cmp
cld
adc
adc
lfs
pop
popf
and
lahf
shr
adc
pushf
inc
or
pusha
mov
xchg
push
stc
sub
mov
sar
push
and
pop
add
inc
cs
pop
dec
retf
in
xor
movs
xchg
push
sub
mov
pop
ficom
mov
int
loop
out
xlat
jnp
dec
and
add
cmp
shr
adc
push
loopne
and
int3
pop
addr16
jg
inc
test
jnp
ret
add
mov
addr16
xchg
inc
enter
loop
sbb
(bad)
xor
xor
(bad)
hlt
fisubr
mov
dec
shr
sub
mov
sbb
stos
in
push
(bad)
repz
and
bound
shl
(bad)
xlat
sub
xor
mov
mov
push
sbb
mov
or
cs
clc
xchg
(bad)
iret
pop
or
fst
sub
shr
push
xchg
xchg
and
inc
push
ret
rcr
pushf
ja
rcl
cli
nop
adc
outs
xlat
shl
daa
xor
jbe
outs
mov
jo
mov
nop
repnz
xor
cmp
adc
and
fild
inc
in
enter
retf
mov
push
ror
pop
push
pop
cli
imul
enter
hlt
addr16
jno
cs
add
loope
push
in
loope
iret
ret
cmp
sti
jp
sub
test
jb
xchg
les
ret
cmc
rcl
sbb
jne
or
fmul
(bad)
xchg
adc
movs
mov
inc
iret
aam
test
pop
jns
xchg
xlat
ret
xchg
pusha
imul
out
fld
jl
mov
dec
mov
pusha
mov
mov
mov
jbe
mov
sbb
ret
bound
pop
jmp
cmp
and
cdq
cdq
or
fdivr
pop
in
hlt
xchg
xchg
das
or
ror
xchg
adc
mov
fild
pop
cmps
(bad)
and
mov
icebp
imul
add
xchg
inc
inc
aaa
push
pop
ja
sub
and
dec
scas
psadbw
jle
cmp
ss
lahf
loopne
sahf
int3
jae
lds
iret
adc
sbb
pop
mov
cmp
shl
mov
rcr
scas
jbe
pop
lea
icebp
icebp
shr
adc
aad
daa
(bad)
xor
inc
dec
pop
inc
shr
push
xchg
ss
js
je
cdq
frstor
mov
stc
pop
mov
jecxz
jns
jg
retf
(bad)
imul
andps
leave
jle
hlt
dec
ret
out
xchg
pop
sahf
sub
stc
push
hlt
mov
arpl
xor
pop
ror
int3
mov
test
xchg
or
and
sub
mov
repz
sbb
aas
sti
and
gs
sub
cmc
cmps
dec
sub
cmp
pop
(bad)
ss
bswap
fidiv
daa
aam
ins
popa
addr16
mov
adc
test
sub
dec
mov
fsub
scas
mov
mov
or
push
scas
lock
adc
pop
cli
(bad)
add
xchg
or
adc
add
sub
add
call
pop
cmc
fild
add
retf
cli
es
push
mov
mov
dec
cmp
ror
and
into
or
push
ins
test
gs
lahf
lea
test
sbb
mov
pop
gs
fistp
stos
xchg
sub
inc
push
icebp
jns
push
icebp
lea
or
das
enter
cmp
adc
push
jno
inc
sub
adc
mov
test
jl
adc
adc
repnz
push
popa
repnz
jnp
aaa
and
cli
pop
xor
inc
pushf
push
in
sub
push
in
jmp
mov
mov
sbb
push
inc
jl
repz
push
jnp
sbb
mov
lods
mov
(bad)
in
sbb
mov
xchg
hlt
push
pop
inc
js
ds
cmp
fcom
adc
mov
loope
aaa
push
fisttp
push
mov
fidiv
retf
pop
push
add
sahf
gs
cld
icebp
cwde
cmps
(bad)
or
sbb
xor
(bad)
mov
test
std
jecxz
mov
xchg
scas
pop
mov
xlat
pushf
inc
cmp
add
sbb
pop
hlt
or
mov
mov
jg
vpsraw
mov
adc
sub
mov
mov
retf
loop
sahf
not
lds
mov
fiadd
xchg
out
xor
pop
leave
xor
fwait
cmp
pushf
aam
mov
mov
mov
sub
ret
adc
mov
and
out
cmps
sub
nop
mov
inc
loopne
fsubr
mov
leave
xchg
push
jne
mov
sub
push
pop
enter
or
add
sub
daa
ja
mov
xor
hlt
scas
jno
mov
jb
in
push
popf
dec
shr
pop
retf
or
in
inc
pop
in
xchg
cmp
sub
inc
xor
mov
push
mul
push
and
out
clc
sahf
sar
lahf
scas
loopne
sub
jle
jne
push
test
or
xor
or
mov
cs
mov
jle
enter
stos
push
lahf
inc
mov
push
hlt
fiadd
aam
jns
xor
cmp
sbb
or
xchg
push
enter
mov
shr
idiv
into
retf
loopne
int
aam
leave
xchg
cdq
mov
push
mov
pop
add
adc
fidiv
les
dec
bound
sub
dec
jg
bound
out
jb
jecxz
loop
or
icebp
mov
lock
pop
outs
add
add
pop
xchg
adc
or
sbb
pop
mov
xchg
mov
(bad)
mov
stc
sub
dec
inc
jmp
repnz
je
popf
fs
add
mov
out
cmp
imul
mov
loope
nop
pop
inc
mov
push
and
mov
addr16
scas
mov
push
push
and
sbb
adc
pusha
hlt
lods
adc
les
jbe
push
push
in
pop
jo
dec
icebp
outs
jecxz
jle
mov
cs
repz
loope
xor
je
push
test
mov
cmp
push
mov
jne
rcl
jo
fnstenv
loopne
inc
push
push
mov
jb
cmc
mov
jecxz
jnp
leave
mov
mov
cmps
lock
test
movs
jo
inc
mov
fcmovnbe
in
movs
xchg
xor
inc
cmp
and
xchg
lods
mov
xchg
call
fiadd
or
stc
pop
int
mov
sub
(bad)
shl
jbe
(bad)
cmp
mov
xchg
mov
mov
add
popf
js
popf
xchg
stos
(bad)
cmps
nop
jmp
sub
xchg
test
jne
push
in
cmp
mov
movs
jmp
or
or
mov
mov
jle
shl
repnz
mov
xchg
lock
xor
test
sub
mov
push
pop
adc
cwde
mov
out
into
xchg
loop
in
jno
mov
loop
cmc
pop
sbb
leave
inc
pop
cmp
jecxz
ins
outs
mov
hlt
mov
repz
ret
or
sbb
sbb
lock
in
test
loopne
dec
scas
jle
imul
or
jg
repz
cmp
inc
bound
mov
(bad)
movs
ret
imul
jmp
sbb
mov
das
jmp
pop
push
sbb
and
sub
iret
xor
xchg
test
xor
push
jl
ja
inc
lods
dec
dec
dec
xchg
inc
fwait
push
mov
jle
add
sub
dec
pop
push
clc
xor
int3
or
or
loop
mov
jmp
mov
adc
rol
ffree
jp
xor
mov
cmp
mov
jp
sub
dec
pop
jl
pop
jp
pop
stc
push
xchg
nop
imul
jbe
loope
or
clc
push
mov
jecxz
lea
nop
test
xor
outs
aad
ds
jmp
push
jmp
scas
test
lahf
(bad)
enter
inc
pop
movs
xor
lds
fist
(bad)
test
dec
push
fcomp
dec
les
cld
lea
push
leave
dec
xchg
jne
out
mov
sub
scas
inc
outs
jecxz
mov
lock
or
pop
or
mov
cdq
jl
sbb
xchg
sbb
cs
and
xor
stos
add
or
xor
inc
xor
mov
xchg
in
cmp
or
data16
test
push
dec
enter
inc
hlt
stos
ja
mov
stc
and
pop
adc
push
test
adc
cmp
imul
push
clc
rcl
xor
cmp
cmp
jecxz
add
mov
cmp
pop
test
jmp
pop
push
or
jo
(bad)
sbb
fdiv
xchg
lock
dec
mov
mov
inc
jo
test
pop
pop
sbb
mov
push
push
in
sub
or
movs
pop
pop
mov
pop
leave
into
in
push
sahf
test
adc
lods
pop
pop
ret
addr16
add
les
std
mov
mov
jne
into
inc
sub
movs
cwde
jae
out
imul
push
imul
jl
das
pushf
(bad)
mov
mov
xlat
pushf
loop
popa
cmps
hlt
sbb
jge
sar
jne
test
jno
and
std
mov
or
pop
push
inc
add
sahf
and
mov
maxps
test
push
std
fistp
and
and
push
ins
jmp
inc
sub
ficom
cmp
aam
jae
sub
aam
jb
and
lods
loopne
std
jle
jb
inc
test
pop
(bad)
rcr
lds
sar
mov
mov
idiv
aam
xchg
jmp
in
or
shr
add
popa
cld
(bad)
aas
xor
sub
repz
cmp
in
or
pop
int3
mov
mov
sub
jns
ja
mov
mov
jecxz
aad
mov
fsub
data16
ret
xchg
and
mov
aam
inc
adc
int3
sub
(bad)
in
inc
clc
(bad)
mov
cld
enter
ins
xchg
pop
sbb
mov
and
out
clc
dec
sub
les
aam
ss
jle
inc
je
mov
cmp
jecxz
sub
add
adc
and
cmp
dec
jmp
aaa
cmp
outs
aaa
push
sar
ret
retf
daa
adc
and
aaa
hlt
inc
push
sub
push
out
fsub
ss
shr
or
loope
dec
in
inc
cs
inc
jp
sub
dec
je
xor
sti
xchg
sbb
scas
pusha
cwde
fs
fs
vmulps
sbb
and
sub
mov
inc
sub
inc
rdmsr
pop
sub
push
pop
jo
dec
fdivp
fimul
add
cmps
push
sbb
test
stc
popf
bound
popa
aaa
xchg
loopne
sub
or
mov
or
rcr
gs
bound
sub
rcl
inc
cmp
mov
inc
cmc
cmp
push
mov
push
test
inc
(bad)
in
jl
loop
(bad)
repz
and
mov
pushf
sub
movs
cmp
xor
adc
(bad)
sub
push
mov
mov
xor
push
scas
test
xor
mov
aam
fwait
cmp
mov
xor
pusha
xor
adc
retf
retf
adc
lea
pop
(bad)
test
xchg
cmp
jle
bound
xchg
shl
or
lds
(bad)
pop
pop
cmps
adc
(bad)
lods
jle
into
sub
sub
push
aas
add
loop
jnp
jae
mov
push
add
(bad)
cmps
sbb
mov
inc
add
mov
cs
xchg
jae
mov
pop
es
lds
pfcmpge
(bad)
cmp
call
(bad)
dec
int3
imul
xchg
test
inc
call
push
lods
in
cli
jle
pop
inc
dec
movs
test
cs
mov
xchg
shr
jae
rol
lahf
adc
push
mov
mov
outs
pop
call
call
iret
sub
(bad)
hlt
sub
dec
pop
jb
popa
movs
push
mov
arpl
xor
sbb
popa
aaa
popa
or
mov
aad
jmp
mov
(bad)
repnz
cmp
inc
adc
dec
mov
test
aas
fsubrp
push
cmp
sbb
scas
lds
push
cli
out
cmp
pop
pop
add
xlat
(bad)
mov
sbb
cwde
push
xor
into
adc
imul
adc
xchg
in
pop
cmps
shr
xchg
jno
out
mov
or
xor
cli
xor
and
shl
xor
out
iret
aas
mov
mov
mov
popa
retf
ss
jbe
sahf
sahf
pop
repz
sar
and
inc
out
cmp
sub
xor
pop
dec
pop
mov
ret
jmp
ja
adc
add
cmp
dec
mov
repnz
ret
loop
mov
xlat
xchg
jmp
ret
sbb
ja
das
and
je
hlt
adc
push
movs
inc
loop
adc
push
xor
stc
mov
mov
int
fimul
std
les
(bad)
test
adc
xchg
dec
adc
shl
gs
jmp
sub
or
iret
stos
retf
or
dec
iret
mov
or
pop
mov
and
push
push
push
add
hlt
ds
push
jp
in
mov
dec
push
sub
dec
or
and
call
ss
inc
mov
sbb
mov
inc
stos
test
push
test
cmp
ror
xor
out
dec
lds
retf
jle
shl
sub
shl
push
clc
cmc
ret
mov
sub
xlat
xor
xchg
dec
mov
push
and
cmp
fsubr
test
jecxz
or
repnz
push
inc
iret
jg
sbb
aaa
inc
ror
(bad)
js
out
xor
pop
stos
aad
xchg
mov
sbb
inc
xor
sub
dec
xor
jnp
fst
arpl
int
inc
mov
iret
sub
jnp
add
ficom
dec
test
cmp
cmps
call
or
stos
js
or
imul
(bad)
xchg
in
daa
not
ret
enter
repnz
push
js
or
sti
push
inc
and
stc
push
pop
pop
xor
xchg
scas
and
pop
retf
mov
inc
rcr
into
sar
adc
retf
adc
loop
dec
fistp
les
inc
push
out
nop
lods
icebp
jno
xor
cld
mov
jmp
mov
icebp
mov
adc
xchg
sub
mov
hlt
xor
addr16
movs
push
mov
jle
pop
cdq
push
add
fst
movs
enter
outs
(bad)
fld
ret
sub
inc
dec
pushf
(bad)
lock
cmp
sbb
cld
pop
out
outs
and
xlat
mov
pop
mov
xor
push
sub
fsub
mov
fnstcw
sub
iret
ins
test
das
xor
dec
mov
cmp
xchg
scas
in
dec
sub
cmp
and
cmps
push
xor
stos
daa
test
and
daa
icebp
and
aas
ins
in
jl
pop
mov
push
ins
inc
movs
data16
xor
out
in
cmps
ror
imul
call
retf
sub
jae
inc
test
xchg
fs
cmp
popa
dec
sbb
mov
(bad)
aad
jbe
rcl
leave
scas
sbb
pop
daa
mov
in
ja
shr
test
adc
fcomp
dec
dec
pop
aaa
pop
pushf
pop
movs
inc
gs
mov
dec
stc
xchg
push
push
push
adc
dec
push
push
fst
dec
or
gs
jo
lock
(bad)
(bad)
in
iret
ins
xchg
xchg
lds
jle
xchg
mov
cmp
sub
jne
lock
push
and
aaa
ror
icebp
cmp
dec
jae
mov
in
push
dec
inc
adc
and
sub
jne
pop
pop
jno
jae
loop
jmp
cmp
(bad)
hlt
adc
retf
xchg
dec
jbe
xor
repz
xor
mov
enter
(bad)
shl
mov
jo
scas
jmp
pop
fst
xor
mov
(bad)
fwait
inc
push
dec
loope
movs
add
hlt
add
sbb
jp
out
jecxz
stos
test
es
sbb
pusha
or
scas
push
inc
call
jge
push
fild
sub
push
cwde
add
sub
nop
fnsave
push
ins
hlt
xchg
in
dec
pop
lds
aam
cmp
repz
retf
fsubr
mov
mov
test
sub
fnstenv
mov
in
adc
test
rcr
dec
cmps
cli
popa
stos
mov
mov
xor
rol
dec
aas
pop
retf
call
pop
pushf
mov
ins
cmp
add
je
addr16
lods
aam
push
adc
fisttp
loopne
pop
mov
call
mov
add
mul
fbld
(bad)
xor
cmp
mov
jnp
and
mov
jbe
pop
push
(bad)
shr
push
xchg
repnz
adc
cs
push
into
arpl
or
sahf
dec
mov
xlat
or
xchg
mov
das
sub
xchg
sub
push
movs
xchg
inc
dec
sbb
in
inc
sub
in
ins
pop
dec
mov
add
pop
jnp
inc
push
jne
inc
mov
jne
ss
test
test
sbb
add
fistp
frstor
push
aam
in
inc
mov
test
inc
into
lds
ds
add
call
test
into
in
iret
xchg
out
sub
add
(bad)
sub
call
jne
in
out
dec
gs
adc
and
popa
adc
mov
cmps
mov
stos
sub
retf
aaa
sub
movs
test
dec
shl
xor
test
inc
mov
dec
push
pop
xor
es
dec
mov
or
or
mov
cmps
cmps
aad
movs
test
(bad)
sbb
push
dec
adc
cmp
rcl
jg
leave
in
setae
pop
sbb
adc
and
and
add
xchg
push
add
add
je
and
cmc
(bad)
es
aad
iret
dec
jge
(bad)
mov
add
ja
stos
xor
out
adc
sub
push
aad
mov
out
mov
xchg
ss
add
mov
popa
mov
call
jg
mov
in
je
ins
sub
dec
fs
vpmacswd
das
stc
call
(bad)
(bad)
cmp
xor
addr16
add
fucomp
push
xor
gs
sbb
arpl
mov
xor
push
inc
xlat
stos
retf
jmp
leave
adc
fnstsw
jecxz
mov
(bad)
in
pop
mov
inc
scas
js
sub
inc
mov
sar
jmp
dec
jp
dec
aad
js
lods
pop
ficom
cmp
iret
in
das
mov
jl
push
aaa
push
push
sbb
push
scas
sbb
mov
mov
aas
push
cmp
mul
mov
xchg
es
mov
sti
test
mov
ror
add
jge
sub
dec
daa
test
mov
data16
mov
dec
sub
mov
call
inc
or
leave
xchg
stos
push
pop
sbb
xchg
xor
sub
xor
cmp
sti
adc
(bad)
mov
jb
jae
jg
(bad)
fimul
movs
push
xchg
jbe
rol
jecxz
xor
ret
das
jo
mov
div
lahf
arpl
shr
cli
mov
out
fbstp
aas
xor
movs
and
cmc
cmp
fdivr
sti
call
test
lea
aaa
jmp
xor
jae
clc
lahf
push
push
xlat
dec
stc
jmp
js
jmp
loopne
dec
cld
inc
fidiv
int
ffreep
mov
jne
dec
cmp
xor
call
pushf
loopne
cli
out
dec
mov
mov
ja
push
mov
adc
inc
sbb
imul
cmp
aaa
adc
and
fdiv
fist
cli
(bad)
mov
jmp
xchg
push
push
outs
inc
fcmove
xchg
loopne
shl
jmp
pop
loope
leave
sub
(bad)
call
push
xor
push
sub
int3
add
dec
sti
xor
les
cmps
outs
je
mov
(bad)
xor
jecxz
retf
inc
stos
data16
mov
inc
adc
jbe
inc
mov
stos
retf
jmp
sbb
aad
jo
pop
push
xor
dec
jl
jbe
ds
aam
rcr
nop
shr
xor
fbstp
pop
not
mov
sub
je
jno
ja
adc
pop
lahf
pop
mov
sub
or
sbb
repnz
sbb
mov
(bad)
rep
shr
(bad)
repnz
pop
bound
sub
aad
xor
or
push
mov
std
pop
mov
mov
mov
mov
mov
jnp
jne
jne
pop
pop
pop
in
addr16
retf
enter
jb
in
push
xor
or
ins
mov
stos
ucomiss
loope
push
lahf
ja
ja
xlat
ja
pop
adc
push
test
icebp
push
xchg
pop
popf
(bad)
mov
xchg
ja
push
mov
mov
sub
out
fdiv
enter
retf
cld
call
or
cmps
pop
cmps
mov
add
or
fs
ror
xchg
cld
sub
sahf
sbb
ret
mov
xlat
out
mov
sbb
int
push
test
int
jle
inc
popa
ja
cmp
mov
mov
inc
inc
jle
and
inc
int3
outs
and
and
sub
cwde
push
loopne
xchg
cs
or
push
imul
xchg
cmp
dec
push
push
add
pop
cld
mov
idiv
xchg
fcom
int3
adc
das
dec
ss
cmp
mov
add
inc
test
sbb
inc
movs
dec
push
aaa
std
mov
xchg
adc
sbb
inc
rcr
ins
inc
fimul
imul
test
fcom
sub
mov
pop
mov
mov
out
inc
outs
dec
push
inc
cdq
mov
push
xchg
mov
nop
mov
xchg
dec
mov
xchg
inc
add
js
adc
push
sbb
nop
sbb
cmp
mov
outs
push
out
sbb
push
call
test
xchg
scas
sbb
(bad)
ret
xchg
into
xor
mov
cmp
inc
or
ret
(bad)
js
mov
jle
push
push
idiv
jne
or
fdiv
stc
aam
pop
daa
xor
lea
jae
retf
stos
data16
ins
xor
push
lea
xor
or
and
aam
int
mov
cmp
push
(bad)
and
call
push
sub
sbb
adc
pop
dec
mov
pusha
xlat
sub
mov
stc
jno
pop
add
adc
daa
push
jecxz
dec
les
cmp
push
aaa
loope
add
retf
jo
push
add
fs
ins
dec
fsubp
je
pop
add
imul
cmp
jge
sbb
mov
out
pop
(bad)
(bad)
inc
stos
jp
jnp
push
mov
pop
jae
or
dec
pusha
push
dec
repnz
mov
sar
mov
(bad)
and
sysenter
loopne
daa
push
mov
loopne
iret
xchg
(bad)
sbb
pop
mov
fcom
lahf
scas
test
dec
mov
or
sub
shl
sahf
adc
fild
popa
scas
or
add
in
adc
cmps
mov
ins
stc
pop
xchg
test
ins
rcl
cmps
pop
je
sti
cmp
js
mov
sti
nop
rcl
mov
mov
mov
mov
(bad)
into
jmp
dec
iret
repnz
push
lock
fldcw
lock
in
jecxz
lock
add
or
xchg
sbb
dec
inc
iret
cld
inc
add
xor
push
repz
test
xchg
pop
or
mov
pusha
dec
or
aas
stc
rol
jge
fwait
enter
cs
pop
fild
jmp
or
loopne
loop
arpl
add
neg
ins
dec
sub
jb
fsubr
jne
loopne
dec
push
retf
add
pop
stos
popf
push
dec
mov
(bad)
xchg
lods
dec
aas
popa
xor
sar
stos
xor
push
mov
mov
inc
retf
test
push
dec
sahf
pop
xor
leave
sub
ret
mov
ins
xor
imul
mov
cmp
pop
jl
push
or
mov
xlat
xchg
popa
inc
cmp
mov
(bad)
dec
arpl
mov
call
call
inc
inc
aam
je
mov
push
scas
push
inc
out
fcom
(bad)
ja
fldenv
retf
int3
and
in
mov
(bad)
jmp
pop
dec
icebp
cmp
pushf
mov
or
icebp
aas
loop
xor
pop
iret
lock
mov
mov
mov
inc
dec
add
pop
sub
imul
cmp
adc
cdq
(bad)
xor
pop
(bad)
repz
popf
popa
in
inc
call
les
loopne
jge
cmc
dec
mov
inc
out
jmp
sub
cdq
dec
out
nop
push
cdq
push
scas
mov
icebp
inc
leave
idiv
out
sbb
adc
movs
lea
std
ficom
outs
sbb
and
int3
ror
aad
jbe
adc
sub
or
adc
out
(bad)
dec
lds
iret
cld
pop
dec
int3
ins
das
mov
mov
aaa
outs
add
inc
adc
add
mov
push
js
jecxz
stos
sbb
cmp
mov
and
ins
stos
pop
test
mov
mov
sub
lock
(bad)
xor
push
je
fs
mov
adc
cmp
mov
je
or
ins
lahf
sub
ret
mov
(bad)
fwait
cdq
mov
fild
dec
loopne
lea
push
mov
ror
sbb
out
lods
leave
icebp
add
adc
pusha
jb
stc
jmp
jl
jb
lahf
test
loopne
dec
push
aam
dec
sbb
stc
add
push
into
or
(bad)
jo
inc
les
iretw
sub
jmp
scas
jmp
fcom
pop
or
push
adc
les
lahf
imul
pmaxsw
cmp
popf
in
inc
sbb
mov
xlat
js
cwde
int3
mov
fnsave
xchg
pop
shr
or
inc
ja
test
sub
ficomp
iret
clc
add
ds
sbb
and
sub
stc
aaa
in
imul
outs
sub
(bad)
adc
or
mov
xchg
cld
jbe
fadd
sbb
lock
jno
scas
xor
popa
aas
addr16
aad
sbb
push
add
dec
adc
sub
mov
mov
xor
or
cdq
fiadd
pop
(bad)
jno
and
xor
lds
rcr
adc
adc
jle
adc
jbe
lea
xlat
gs
dec
fcomi
fcomp
(bad)
fsubr
pushf
sub
adc
jmp
mov
in
cmc
ss
push
mov
jns
call
fnsave
aad
xor
sbb
retf
shl
push
out
cmp
xor
(bad)
aam
popa
ins
sub
xchg
inc
retf
jb
mov
xchg
scas
push
ret
mov
dec
mov
fwait
sbb
mov
scas
mov
test
dec
push
push
add
mov
mul
cmps
cmp
mov
push
push
jns
(bad)
cli
dec
loope
iret
dec
mov
movs
mov
iret
mov
pop
adc
jae
push
push
mov
inc
xchg
xor
fstp
lea
call
inc
inc
push
or
ret
fimul
pop
xor
sub
xor
imul
mov
test
push
in
xor
icebp
cld
outs
cmp
lock
outs
mov
inc
mov
in
push
mov
ja
mov
dec
pop
push
pop
sub
cmp
jnp
mov
daa
dec
add
loope
je
je
ror
into
xchg
fdivr
xchg
inc
ins
inc
push
stc
leave
mov
or
pop
xchg
xchg
cmps
or
call
retf
pop
bound
cdq
imul
push
adc
(bad)
shl
sub
or
sar
test
repz
and
in
cmps
add
xchg
push
adc
fmul
xchg
pop
(bad)
jae
xchg
ss
sbb
sub
inc
xchg
add
ror
or
pop
pop
jbe
inc
or
xlat
or
jg
(bad)
push
retf
sti
ror
shl
dec
leave
add
sub
add
xor
arpl
les
and
jmp
cmp
fmul
push
(bad)
xlat
lahf
cmp
mov
jae
push
pop
das
cs
jp
dec
inc
xchg
(bad)
enter
jg
inc
pop
push
jbe
popa
mov
jmp
push
(bad)
mov
sti
ja
lods
test
lock
push
cmp
sbb
dec
xchg
mov
jb
jmp
ja
push
or
adc
retf
int
sub
aad
out
cmc
dec
ret
lods
addr16
ret
loop
jae
push
push
mov
xor
mul
fdiv
jae
jp
jae
mov
mov
add
pop
bound
sbb
cmp
(bad)
ins
inc
iret
xchg
test
in
repz
xor
sbb
clc
jne
inc
xchg
fadd
lods
jecxz
and
cmc
jnp
lock
div
cmp
call
mov
add
dec
scas
push
fcomp
cmp
and
push
int
xchg
mov
inc
jo
fdivr
dec
in
ror
mov
ins
or
lds
aad
rol
inc
lea
xchg
mov
fwait
push
icebp
sub
fimul
rcr
in
and
jmp
sbb
jecxz
out
outs
mov
out
test
addr16
cdq
shl
cmp
or
sub
jge
lock
dec
les
and
(bad)
fxch
das
ret
pop
sbb
and
(bad)
iret
pop
xor
sbb
lds
or
mov
push
cli
xchg
mov
jbe
cmp
lods
and
leave
pushf
add
pop
pushf
outs
in
cmp
jnp
popa
pop
mov
out
loop
(bad)
loop
loopne
mov
rcl
xor
ficomp
stos
push
mov
mov
movs
push
push
xor
cmp
nop
call
sahf
and
pop
cmp
pop
adc
pop
pop
std
xlat
sub
test
mov
sbb
loopne
cmp
and
fistp
pop
gs
mov
or
mov
xlat
dec
jmp
fist
cdq
lahf
sub
cld
jno
fmul
nop
mov
or
outs
lea
(bad)
pop
call
or
jmp
test
jno
aas
or
mov
enter
add
out
fnsave
inc
mov
sbb
push
movs
xlat
fisub
mov
sbb
loope
in
fsub
xor
popa
(bad)
fnsave
arpl
sub
loop
xor
jno
imul
dec
lods
xor
int3
ins
out
lods
sbb
sub
add
adc
push
push
add
xchg
je
sahf
mov
dec
cmp
push
repz
pop
ret
icebp
inc
in
sub
mov
push
dec
pop
or
and
cmp
iret
cmp
sti
sub
add
xchg
inc
or
pop
cmp
adc
mov
pusha
xchg
xor
or
outs
jns
jle
aad
outs
pop
pop
xor
in
jb
rcl
aad
sub
aaa
test
jp
push
mov
mov
pop
es
es
jge
xchg
loop
mov
dec
lds
out
mov
pop
pop
test
and
dec
addr16
adc
pusha
pusha
cli
lds
jb
test
cmps
dec
clc
and
cmp
out
push
xchg
scas
aas
jge
sbb
cs
mov
jecxz
inc
scas
inc
out
cwde
xchg
mov
and
jne
sub
add
call
mov
or
scas
inc
into
mov
cmp
jmp
(bad)
and
mov
mov
sub
into
mov
pusha
mov
jle
test
jmp
mov
push
jge
sub
data16
retf
inc
nop
call
les
call
ja
mov
or
jnp
mov
cmp
leave
inc
sub
dec
jb
push
js
inc
das
mov
or
call
mov
jge
sub
idiv
jae
aaa
int3
jb
mov
mov
scas
jb
cmp
retf
push
dec
dec
lock
or
ins
inc
jnp
mov
xchg
adc
push
adc
dec
or
scas
mov
js
jno
mov
mov
scas
xchg
je
rol
xchg
xchg
test
add
cmc
inc
scas
adc
je
rcr
dec
movs
pop
aam
mov
sbb
jl
add
das
out
int3
pop
mov
adc
into
mov
test
xor
pop
pop
aaa
jnp
retf
shr
je
sbb
push
lahf
push
xor
mov
sub
dec
das
cmc
mov
clc
pop
and
push
xchg
push
lods
iret
and
push
test
jmp
call
out
mov
das
jg
dec
aaa
sub
iret
sub
mov
pop
sbb
adc
or
lock
or
mov
in
test
add
pop
mov
test
xchg
rcr
adc
rcr
inc
cmp
(bad)
cld
and
push
(bad)
leave
pusha
adc
fwait
mov
dec
idiv
jp
pushf
in
mov
add
je
push
dec
popf
imul
jge
push
inc
test
pop
movs
mov
inc
mov
adc
aam
or
jmp
int
push
xor
push
test
das
mov
sbb
std
jle
out
int3
les
inc
xor
addr16
xlat
or
sub
enter
or
cmp
xchg
fistp
mov
xchg
(bad)
ja
jo
push
inc
dec
and
cli
cmp
cmps
les
push
dec
stos
(bad)
or
fucomp
or
xchg
pop
je
(bad)
xor
xor
cmp
mov
inc
mov
lods
fstp
lods
mov
mov
adc
jmp
jne
push
pop
icebp
(bad)
xchg
ret
or
aam
in
jmp
call
pop
test
jb
lahf
push
out
repnz
adc
aam
pusha
mov
sahf
push
mov
setl
cmp
push
jge
jb
lds
dec
addr16
pop
and
jge
stos
dec
cmp
test
jmp
shl
push
ficomp
(bad)
ret
addr16
out
and
and
mov
push
cmps
lods
pop
cmp
int3
std
enter
and
or
add
pusha
cld
fiadd
mov
ltr
xchg
adc
popa
push
jbe
shr
mov
dec
aaa
js
pushf
aam
xchg
scas
cmp
and
enter
or
mov
stos
fiadd
cmps
fiadd
jne
add
mov
jo
fcomi
ja
sbb
enter
test
dec
pop
xor
fcmovb
add
mov
popa
pusha
xchg
add
sbb
jmp
neg
enter
mov
ss
mov
in
jmp
aad
mov
cmp
sbb
stc
pushf
int3
icebp
and
cmp
aaa
lock
nop
cmps
dec
xchg
das
xchg
xchg
hlt
test
add
push
(bad)
add
int
mov
and
sub
inc
(bad)
dec
ror
push
out
push
fmul
pop
push
dec
das
xchg
lods
jmp
and
cmp
outs
jbe
jmp
cwde
iret
(bad)
add
cmp
aas
pop
cmp
or
ins
sub
xor
xchg
lds
shr
push
ret
push
call
add
je
inc
mov
jge
(bad)
add
ret
outs
sbb
dec
clc
mov
mov
cmp
jno
sub
aaa
xchg
jmp
or
cmps
pusha
sahf
fcom
aam
and
aam
adc
hlt
arpl
xchg
loope
inc
jmp
int3
hlt
(bad)
adc
jle
cmps
js
jo
popa
mov
aam
pop
pusha
pop
ins
adc
inc
push
int
push
cmc
loope
dec
stos
outs
cmp
in
xchg
pop
jle
test
pop
or
int
clc
shl
jmp
mov
push
lock
ds
jb
cli
ret
xchg
ret
movs
pop
sbb
icebp
add
nop
xchg
pop
lea
xchg
mov
xor
push
push
pop
mov
popf
sbb
in
sbb
pusha
fnstsw
xchg
mov
dec
(bad)
add
stos
adc
push
shl
scas
mov
jp
adc
pop
push
pop
xchg
loopne
add
fwait
aaa
mov
jne
out
out
out
stc
sar
bound
cmp
inc
(bad)
aaa
mov
cmp
xor
and
inc
test
mov
add
dec
push
and
pop
daa
lock
jns
dec
aas
sbb
inc
add
in
xchg
int3
inc
pop
dec
ret
jmp
push
pushf
xchg
sub
xor
pop
cmc
or
xor
sahf
xchg
int3
xor
cs
(bad)
hlt
xchg
dec
xor
imul
cmc
xor
dec
in
or
push
jno
inc
pop
xchg
in
xor
call
ds
xchg
jmp
mov
inc
or
cmp
pop
or
stos
repnz
push
pop
neg
add
mov
stos
enter
push
push
mov
mov
add
fadd
cmps
add
stos
pop
xlat
dec
mov
(bad)
mov
add
xchg
push
add
add
mov
les
outs
jmp
cmc
mov
jl
inc
push
je
test
lods
rcr
shl
outs
add
inc
repnz
neg
cmp
(bad)
not
fsub
out
xchg
or
xchg
mov
int3
iret
popa
aaa
fwait
sub
pop
cmp
or
sub
in
movs
jmp
out
retf
pop
sub
or
outs
sahf
mov
dec
dec
(bad)
cmc
test
div
push
dec
or
loope
out
call
xchg
lock
xchg
mov
mov
movs
into
movs
out
rcr
jnp
mov
sti
shl
mov
mov
inc
icebp
lahf
pop
mov
daa
imul
fwait
clc
ffreep
mov
int
jb
xchg
sub
hlt
sahf
std
leave
jno
add
test
push
jnp
sbb
xchg
mov
mov
movs
into
movs
out
rcr
mov
leave
lods
call
push
aam
(bad)
js
jo
icebp
xchg
cmc
loop
std
iret
call
adc
cmp
cmp
jmp
es
pop
inc
sbb
and
mov
mov
ss
mov
pop
xchg
cs
jmp
(bad)
xchg
(bad)
mov
(bad)
call
shr
fst
(bad)
mov
cmc
mov
int
cmp
test
bound
mov
loopne
(bad)
mov
dec
add
xor
js
push
jbe
mov
(bad)
repnz
jnp
mov
cmps
out
mov
loope
stc
mov
int3
mov
cmc
cwde
loopne
loope
mov
loope
les
fcomp
out
imul
add
dec
pop
xchg
aaa
and
mov
pop
add
lock
repz
(bad)
mov
lods
jmp
xchg
hlt
cdq
jmp
mov
(bad)
iret
push
pop
add
cmp
ds
sar
lods
dec
and
test
mov
test
mov
xchg
hlt
mov
stos
loop
ret
mov
fsubr
hlt
mov
nop
enter
hlt
mov
push
pop
sti
mov
or
xor
addr16
mov
data16
dec
sub
arpl
inc
cld
xchg
pause
ret
mov
movs
into
(bad)
call
push
cmp
sbb
jno
imul
aas
inc
sub
jp
pusha
xor
pop
cmp
and
sub
imul
pusha
sub
push
cmp
sbb
inc
clc
mov
mov
and
xchg
fucomip
mov
dec
push
outs
and
hlt
imul
push
repnz
jne
jecxz
sahf
xchg
pop
cmps
lods
(bad)
icebp
call
out
call
not
ret
mov
loopne
mov
stc
call
iret
mov
mov
jecxz
icebp
call
out
mov
push
cld
adc
mov
mov
pop
pusha
or
dec
jmp
out
lods
add
or
pop
jl
mov
xor
popf
fcomp
mov
adc
mov
sub
outs
daa
inc
push
fs
adc
ins
and
jb
push
or
sub
push
adc
cmp
or
addr16
pop
xor
dec
or
ja
ins
aas
dec
push
push
xor
adc
xchg
fsubr
bound
xchg
add
xor
mov
stos
out
or
adc
not
xor
inc
pop
gs
mov
out
sub
add
je
xchg
imul
jbe
jo
std
lahf
sbb
mov
test
sub
pop
or
pop
ds
push
adc
gs
or
pop
daa
dec
es
push
add
jae
pop
es
add
imul
cmp
mov
or
and
xchg
arpl
mov
mov
mov
jb
popf
and
fs
add
inc
push
jp
loop
in
ins
sub
sbb
mov
and
xchg
scas
aad
pop
in
sbb
pop
cmp
inc
punpckldq
jo
pop
cmp
outs
sbb
popa
sbb
ja
push
xor
and
dec
cmp
mov
fdiv
lods
add
or
pop
jl
mov
xor
popf
fcomp
(bad)
retf
pushf
sub
pop
movs
scas
jmp
in
loop
(bad)
out
push
add
fdiv
imul
or
test
je
outs
jae
call
xchg
mov
xchg
fidivr
retf
mov
xchg
cli
fwait
clc
xchg
in
sar
test
lahf
repz
(bad)
cmps
in
call
jo
lahf
adc
inc
das
ja
out
loop
aaa
jns
dec
jmp
adc
idiv
jge
ret
std
jnp
jg
les
in
lock
pop
(bad)
xchg
lock
popa
push
(bad)
pop
push
imul
jb
mov
dec
pop
mov
sub
jb
movs
loope
pop
dec
inc
xchg
mov
sub
mov
aad
cli
and
adc
test
mov
enter
mov
or
(bad)
mov
rcl
xchg
cmps
int3
scas
cmp
jle
jne
js
pop
leave
mov
mov
mov
fucomp
push
jbe
scas
mov
aad
inc
adc
nop
mov
dec
inc
call
xchg
xor
xchg
aas
pop
pop
cs
mov
retf
and
sar
sub
push
push
lahf
sbb
arpl
popf
das
add
jg
xchg
xor
mov
jo
jnp
bound
push
outs
aaa
mov
neg
iret
aaa
pop
ss
push
pop
adc
imul
jle
lahf
adc
mov
xchg
jecxz
jg
fs
ret
pop
aas
fs
cmps
test
jbe
test
(bad)
popa
add
int3
test
xchg
sti
nop
shl
cli
ja
gs
mov
adc
cdq
push
out
add
sbb
xchg
and
mov
push
push
inc
not
cmp
out
cli
cmps
idiv
iret
or
arpl
push
aas
inc
or
imul
stos
out
test
dec
sbb
mov
std
mov
xchg
iret
jns
push
sub
or
popa
and
cmovbe
lock
add
jl
mov
iret
loop
sub
ret
mov
movs
mov
test
jmp
jmp
movs
icebp
or
fcmovu
mov
fnsave
in
int
call
lods
retf
xchg
call
adc
sub
call
and
push
or
cmovbe
and
popa
inc
jl
add
scas
and
sub
xchg
daa
xor
push
std
fbstp
mov
rol
push
ins
jg
cmp
mov
mov
das
ins
push
push
out
mov
pushf
das
push
push
ins
pop
and
das
inc
pop
xor
js
addr16
push
add
lahf
shr
mov
mov
xchg
in
mov
mov
xchg
jmp
hlt
fld
xchg
into
mov
sbb
test
xchg
mov
in
push
and
mov
push
xor
pusha
sti
mov
cld
jb
nop
add
sahf
cmp
pop
sbb
cli
mov
xchg
fdiv
ss
cmp
jnp
jnp
dec
sbb
dec
dec
or
test
xchg
repz
mov
in
cdq
mul
bound
jg
pop
punpckhbw
popa
or
xchg
fisubr
or
mov
loope
or
xchg
and
add
loopne
das
fs
fistp
ret
mov
sub
call
pop
mov
xor
jle
xchg
push
out
fnsave
xlat
mov
mov
jae
pushf
daa
and
push
imul
jmp
popf
retf
cmps
xor
mov
icebp
mov
rcl
das
jne
sub
xor
mov
pop
pop
outs
jmp
cmc
mov
sub
mov
mov
sub
rcr
add
sbb
jle
outs
retf
jle
nop
cli
mov
mov
xchg
shr
lock
fsubr
jge
dec
sub
enter
mov
retf
push
pusha
std
xchg
(bad)
out
mov
add
add
and
pop
sub
push
pop
push
sbb
es
xchg
mov
mov
repz
xchg
stos
int
sbb
jp
add
push
or
pop
pop
pop
cmp
in
xor
ja
gs
xor
lahf
popf
int
ret
cmps
loope
(bad)
lahf
(bad)
xchg
jmp
cmps
inc
xor
pop
add
or
pushf
(bad)
int3
mov
xchg
mov
ds
jnp
jnp
push
data16
iret
xchg
(bad)
mov
cmp
sub
jp
xchg
cmp
mov
cdq
lds
push
sbb
xchg
fstp
xchg
mov
movs
out
inc
xlat
stos
stc
inc
loope
add
push
add
inc
xor
push
add
pop
or
sbb
lahf
cli
mov
lods
ret
xlat
cmps
in
neg
dec
adc
xor
sbb
fwait
test
jg
or
jle
js
xchg
cmps
add
imul
leave
test
(bad)
popa
add
bound
jl
jo
movs
mov
mov
pop
sti
mov
jp
lahf
aad
les
loop
in
mov
iret
int
hlt
mov
(bad)
cld
mov
(bad)
(bad)
frstor
stc
scas
sti
mov
scas
in
fld
mov
(bad)
mov
mov
stos
sbb
jp
dec
bound
add
push
jge
mov
cmc
fsubr
call
dec
out
scas
not
addr16
bound
imul
sub
inc
leave
inc
sub
shr
outs
aad
adc
inc
xor
xchg
addr16
scas
aad
lds
mov
sbb
dec
sub
fwait
div
sbb
sub
dec
pop
bound
ja
push
sub
inc
daa
arpl
jbe
ins
adc
dec
sub
jnp
call
iret
ret
jmp
add
jne
inc
sbb
cli
ffree
pop
(bad)
in
push
cmp
daa
push
cmp
es
aaa
pop
adc
xor
loop
xor
fistp
(bad)
enter
(bad)
push
xor
sub
js
and
je
sahf
and
add
and
jp
mov
add
push
sub
fbstp
test
data16
nop
std
fisubr
dec
push
jne
(bad)
iret
hlt
jl
mov
movs
loope
ss
dec
out
push
mov
xlat
mov
xor
add
xchg
(bad)
push
and
mov
pop
sub
or
sub
push
adc
inc
xor
jge
data16
inc
cmps
scas
les
mov
fisttp
xchg
mov
mov
xor
scas
test
movs
lods
mov
xchg
xchg
scas
ror
popf
(bad)
cmps
cmp
sub
jbe
jno
out
sbb
loop
daa
cmp
inc
inc
outs
out
mov
aam
aad
adc
stos
or
inc
mov
or
dec
sub
pop
cmp
adc
hlt
pop
sub
jne
push
ficom
push
out
jnp
pop
repnz
pop
push
ret
push
ret
bound
fcom
js
jo
pop
mov
mov
(bad)
and
dec
cs
xchg
mov
mov
push
add
aas
mov
push
xor
pop
sbb
xchg
sbb
addr16
jle
lods
add
mov
out
test
mov
add
push
lea
mov
cld
dec
in
mov
daa
and
jmp
arpl
jge
(bad)
jmp
jge
jg
lahf
lds
inc
call
mov
stc
aaa
add
imul
fwait
clc
ffreep
mov
int
jb
xchg
sub
hlt
sahf
std
leave
jno
add
test
push
jne
out
test
mov
rol
mov
xchg
or
dec
pop
jge
jg
jae
inc
jmp
ins
push
jp
pop
ds
lock
loopne
(bad)
xchg
cmps
hlt
outs
fist
jmp
iret
xchg
repz
(bad)
addr16
xor
push
cmp
and
pop
cmp
imul
out
dec
aas
pop
xchg
js
mov
clc
jl
lahf
and
jo
mov
das
jbe
jge
pusha
push
dec
sbb
fidivr
jns
push
jae
xchg
mov
nop
add
jnp
jp
pop
pop
je
mov
mov
mov
xchg
movs
fucomip
adc
push
jg
rcl
mov
mov
cld
sbb
test
jne
cwde
int
push
lahf
mov
jg
inc
sbb
mov
icebp
clc
or
lods
dec
pop
push
push
call
std
pop
cmp
movs
lods
(bad)
aam
ja
ja
sbb
sbb
add
xchg
sti
mov
xor
jbe
inc
push
jb
sbb
fidiv
push
xor
and
dec
cmp
mov
push
xor
js
cwde
pop
div
xchg
and
imul
rcl
pop
gs
xchg
inc
sub
pop
push
push
pushf
fdivr
fst
sub
mov
cli
shl
mov
leave
cli
inc
cmp
outs
or
mov
jl
in
add
xchg
ret
push
xchg
and
cmp
jns
test
cs
push
jnp
imul
ja
jbe
push
sbb
out
pop
sar
push
rol
jb
or
inc
ror
js
test
sbb
outs
sub
shl
into
out
adc
imul
mov
jg
jnp
ins
ret
lods
in
(bad)
js
arpl
xchg
std
xchg
rcl
imul
and
xor
jp
mov
mov
loop
or
pop
(bad)
icebp
shl
fwait
rol
not
fsub
rcr
push
dec
jle
jo
inc
sbb
mov
stos
push
loop
in
mov
test
xor
mov
mov
mov
out
jp
xor
mov
add
cmc
sahf
adc
in
leave
(bad)
arpl
cdq
sub
fwait
cvtdq2ps
ins
inc
setge
sbb
popf
call
pop
sub
add
bound
inc
and
push
xor
jne
je
push
adc
push
add
push
je
jno
repnz
fcmovnu
jmp
cmp
inc
aaa
cmp
jae
cmps
aam
push
movs
mov
movs
aaa
add
lds
pop
adc
lods
sub
imul
push
pop
jb
lea
retf
outs
sbb
cmp
and
push
push
out
sti
mov
cmps
int3
cmps
in
ret
fwait
rol
frstor
jmp
or
mov
movs
(bad)
leave
cli
inc
cmp
outs
or
mov
jl
in
add
xchg
ret
push
xchg
and
cmp
jns
xchg
mov
push
imul
push
jns
dec
ds
lahf
(bad)
pusha
out
(bad)
cmp
xor
es
add
inc
adc
jl
gs
inc
or
dec
xor
xor
pushw
je
pop
cmp
push
imul
push
gs
jge
jae
ja
out
pop
movs
mov
xor
fdiv
mov
dec
adc
dec
pushf
or
jo
adc
(bad)
popa
sbb
xor
ja
sbb
out
test
fiadd
jle
push
ins
and
pop
push
xchg
add
fisubr
pop
and
dec
sub
sbb
ja
dec
and
pop
sbb
addr16
pop
push
inc
and
jle
push
push
je
bound
pusha
or
dec
and
inc
sbb
inc
in
jno
mov
(bad)
mov
into
fwait
icebp
mov
mov
shl
ror
popf
(bad)
cmps
cmp
sub
jbe
jae
in
adc
test
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
mov
mov
in
xchg
sahf
out
retf
and
jl
xchg
xor
push
pop
cwde
mov
or
xor
sub
(bad)
call
jae
jno
ins
and
xor
jae
push
or
push
inc
xor
dec
xor
pop
cmp
or
pushw
pop
xor
inc
inc
es
jno
push
sbb
js
pop
test
imul
jmp
push
pop
adc
or
inc
and
push
ss
sub
jbe
ja
push
adc
push
add
outs
or
jg
pop
and
dec
and
je
or
jmp
or
stos
loop
loopne
cli
lahf
out
(bad)
loopne
and
aas
push
adc
scas
out
loope
add
xor
pop
call
sbb
addr16
and
pop
sbb
dec
add
imul
pop
arpl
inc
cmp
xor
dec
add
push
aaa
jne
fs
adc
adc
jge
pop
ds
sub
inc
aaa
jg
push
imul
xorps
dec
pop
imul
adc
dec
pop
arpl
inc
cmp
xor
dec
add
push
aaa
jne
je
pop
dec
dec
out
daa
jl
test
cmp
mov
int3
xchg
push
cmp
data16
fbstp
icebp
cli
xchg
(bad)
jno
cmp
cmp
in
lock
sbb
addr16
pop
push
inc
and
jle
push
push
je
bound
pusha
or
dec
and
inc
sbb
je
pop
and
dec
sub
sbb
ja
dec
and
pop
sbb
addr16
pop
push
inc
and
jle
push
push
je
bound
pusha
or
dec
and
inc
sbb
je
pop
and
dec
sub
sbb
ja
dec
and
pop
sbb
addr16
pop
push
addr16
pushf
sti
jecxz
aam
sbb
inc
cwde
(bad)
cdq
adc
popf
icebp
shl
mov
mov
or
and
pop
push
cmp
adc
mov
ja
inc
push
jae
sbb
mov
test
hlt
jg
dec
jae
sub
jecxz
xlat
pop
xchg
(bad)
mov
stos
leave
mov
xchg
fistp
jmp
in
fnsave
out
lods
cmc
mov
shl
rol
out
cmps
retf
mov
xchg
xlat
pop
xchg
(bad)
mov
stos
leave
mov
xchg
fistp
jmp
in
fnsave
out
lods
cmc
mov
shl
rol
int
jl
push
stos
xlat
movs
push
(bad)
lods
dec
jmp
adc
lea
cmp
sbb
pop
jmp
sti
xlat
in
cmp
hlt
xchg
pop
stos
or
(bad)
pop
(bad)
sahf
not
arpl
call
mov
rcl
jmp
int
xlat
sahf
int
jmp
repnz
jmp
into
xchg
cmps
les
test
nop
cli
xchg
shl
in
les
std
cdq
fdivr
(bad)
mov
xchg
jmp
sahf
int
jmp
repnz
jmp
into
xchg
cmps
les
test
nop
cli
xchg
out
xchg
sar
aaa
cmp
cmp
xchg
cld
mov
das
cmp
dec
xor
and
popa
jo
push
push
inc
adc
mov
add
aad
pop
ret
xchg
loope
inc
or
outs
adc
mov
loopne
adc
ins
xor
rcl
mov
adc
mov
xor
xchg
sub
pop
xor
push
push
inc
adc
xor
dec
xor
pop
cmp
or
fs
xor
dec
or
je
outs
cmp
sbb
ins
and
add
jae
outs
es
xor
jno
push
push
inc
adc
xor
dec
xor
jnp
hlt
js
mov
sbb
sub
xchg
fisubr
xchg
(bad)
mov
mov
xchg
push
fild
and
loope
(bad)
cmps
jecxz
rol
call
mov
fld
fcmovnbe
mov
mov
mov
mov
fld
lods
out
cmc
out
pop
lods
cmp
stos
xor
mov
jge
cmps
jae
push
clc
pop
xchg
iret
add
jmp
cmc
xchg
cmc
add
jg
in
dec
pop
scas
js
mov
cld
test
ficomp
call
rcl
aam
sub
ja
imul
push
dec
push
loope
push
sbb
adc
inc
test
dec
icebp
loopne
mov
and
inc
jge
adc
aad
jnp
xor
outs
inc
add
mov
mov
cdq
add
dec
inc
xor
or
dec
jg
pop
aas
inc
sub
dec
xor
jbe
push
adc
outs
aas
dec
push
dec
sub
ja
pop
sbb
popf
call
int3
mov
push
cs
xor
pop
cmp
popf
repnz
lock
jmp
mov
xchg
ror
call
dec
cli
sbb
pop
xor
add
mov
mov
sbb
rcl
outs
pushf
ins
mov
out
sub
mov
xlat
sub
fdivr
inc
lea
in
addr16
fcmovu
push
fild
sbb
loop
cli
aas
in
arpl
jmp
sub
icebp
xchg
addr16
fdivr
ins
mov
adc
test
inc
mov
or
pop
cmp
xor
xchg
push
or
adc
jmp
xchg
sub
jecxz
lahf
mov
add
(bad)
jp
add
leave
call
push
push
das
popa
cmp
sub
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
xor
inc
pop
xor
pop
and
xchg
sbb
adc
dec
arpl
cli
imul
sahf
mov
and
inc
test
push
pop
fbstp
aam
push
fistp
rcr
outs
cmp
mov
sahf
cmp
and
sub
or
test
pop
lods
repnz
mov
(bad)
mov
nop
inc
sbb
push
add
mov
push
push
and
dec
xchg
push
mov
aaa
dec
repnz
mov
xor
(bad)
lods
mov
pusha
xchg
ret
fs
popa
leave
cdq
ds
inc
xchg
dec
loope
mov
and
mov
ins
sbb
loop
cmc
mov
cmc
xchg
hlt
cwde
jmp
jmp
movs
rol
repnz
call
mov
in
mov
pushf
aam
xlat
mov
retf
cmps
sbb
add
or
jg
push
mov
pop
sbb
imul
dec
in
pop
out
popa
cmp
xor
mov
jmp
pop
jne
test
aaa
loope
test
and
repz
enter
fdivr
pop
mov
ja
retf
das
sar
stos
mov
scas
xchg
dec
sub
mov
aaa
push
fld
pop
push
sbb
jle
stc
adc
repz
push
popf
jae
(bad)
scas
ja
icebp
xchg
js
clc
xchg
nop
pusha
or
push
scas
pushf
and
cdq
sub
popa
xchg
hlt
inc
push
or
pop
movs
fsubr
add
ror
push
out
or
xlat
inc
icebp
add
push
call
jp
sbb
cmp
mov
add
sbb
adc
popa
sbb
jno
dec
cs
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
pop
cmp
adc
push
sub
xchg
sti
pop
push
inc
xchg
test
jbe
out
add
mov
xchg
ja
clc
dec
mov
or
xchg
gs
push
pop
mov
xor
out
or
lods
imul
call
jmp
mov
pop
mov
popa
test
jbe
push
mov
add
adc
inc
mov
pushf
inc
pop
xchg
ds
stos
leave
inc
aam
xchg
mov
arpl
and
int3
test
iret
inc
je
push
loopne
test
cmps
pop
adc
out
cmc
xchg
lea
shr
and
ins
sub
popa
xor
pop
cmp
adc
cmp
popf
repnz
lock
out
cmps
retf
lods
out
mov
xchg
fimul
(bad)
fidivr
iret
mov
out
std
mov
int3
fwait
(bad)
mov
stos
in
fld
add
stos
popf
repz
sti
adc
aam
add
in
(bad)
scas
rol
pushf
and
xchg
and
ficomp
inc
test
(bad)
not
or
mov
ds
in
dec
aad
fst
test
cmp
test
fmul
mov
cmc
out
sub
jge
jo
aas
jne
sbb
mov
fisttp
lock
cli
sub
sub
stc
dec
(bad)
iret
cdq
test
shr
mov
mov
sbb
inc
dec
inc
and
push
test
push
neg
mov
arpl
jl
imul
shr
inc
fstp
add
popa
add
daa
fs
jno
or
add
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
imul
jge
xchg
loopne
jmp
cmp
mov
rcr
inc
sbb
cmp
cmp
xor
or
js
pop
xchg
cmp
(bad)
cmps
je
sub
mov
mov
xchg
fsub
sbb
in
out
in
cmp
aad
sbb
mov
or
lahf
jmp
out
jge
or
jnp
(bad)
ds
rcl
sub
fnstsw
or
dec
xchg
xor
ror
push
xor
mov
xor
mov
mov
jl
cmp
in
mov
out
jne
add
push
jb
ja
jg
inc
sub
pop
adc
sub
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
xor
imul
pop
mov
aad
jp
sub
jbe
call
jge
sub
xchg
pop
jbe
loope
add
retf
mov
movs
mov
lds
fbstp
pop
aam
outs
out
sub
jns
in
iret
mov
and
test
aas
ret
mov
lods
out
call
fwait
repz
xlat
mov
mov
repnz
outs
mov
(bad)
ins
mov
enter
xchg
call
push
jmp
and
xchg
sub
sub
ss
adc
inc
or
lods
add
ins
arpl
add
out
xlat
stc
mov
scas
int3
mov
xchg
iret
lods
(bad)
mov
jmp
mov
fadd
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
aam
out
xor
jmp
mov
daa
xor
mov
adc
and
cmp
jmp
aaa
cmps
xor
jne
sub
ins
sub
dec
xchg
repnz
loop
push
sbb
xor
and
dec
mov
fstp
clc
mov
pop
or
jmp
cmp
pop
and
add
sub
mov
in
pop
fistp
sub
and
cmps
and
cli
xchg
and
bound
jp
xor
outs
xor
ds
inc
jle
push
in
xchg
jp
sub
std
scas
aad
enter
push
stc
fwait
sti
nop
jecxz
(bad)
mov
fild
call
cdq
shl
call
iret
movs
leave
test
mov
rol
in
lds
clc
xchg
sbb
xchg
mov
repz
test
add
mov
mov
lods
ret
(bad)
lock
out
lds
movs
push
xor
(bad)
mov
xchg
not
xor
mov
addr16
test
dec
sub
or
xor
gs
je
mov
or
imul
xor
mov
xchg
cwde
imul
jo
cdq
add
cmp
xchg
mov
gs
push
xor
and
dec
cmp
add
icebp
in
enter
adc
cwde
push
xor
push
xchg
xlat
jbe
push
outs
(bad)
jnp
and
xor
xchg
into
or
in
mov
rcr
les
in
xchg
cld
xchg
int3
stos
call
adc
cdq
shl
loope
shl
repz
xchg
enter
icebp
cmps
in
not
rcr
mov
inc
sub
fwait
jae
ror
fadd
or
sub
push
pop
sbb
stos
cmp
mov
call
scas
xlat
xor
clc
lahf
push
out
sbb
ins
pop
dec
je
adc
xchg
lds
je
test
add
cdq
cwde
push
sbb
mov
ins
cmp
out
mov
fdiv
ret
xchg
sbb
inc
and
cmp
mov
or
mov
xchg
popa
rcr
test
push
adc
or
lock
test
push
stos
pop
das
xor
leave
sbb
mov
add
jne
push
outs
xor
js
push
sbb
arpl
outs
add
and
push
sub
xor
or
inc
add
dec
sbb
js
imul
pushf
repnz
push
pop
cmp
adc
pcmpeqw
outs
or
adc
jg
into
jbe
cmc
pop
push
fst
(bad)
or
add
ins
mov
xor
imul
nop
out
jno
xor
or
pusha
scas
inc
cmp
add
sbb
stos
rcr
sahf
cli
pop
mov
stos
xchg
mov
xchg
mov
ret
xchg
test
and
push
imul
cwde
jae
lds
(bad)
push
lahf
stc
inc
adc
mov
fist
jl
inc
fs
and
outs
outs
pop
and
or
add
mov
xlat
sbb
pop
mov
cdq
mov
pop
add
mov
dec
push
adc
jecxz
not
retf
mov
mov
les
xor
outs
and
sbb
jo
outs
es
sub
sub
inc
sbb
imul
cmp
cmp
adc
jl
jnp
arpl
inc
cmp
ja
dec
adc
push
and
xor
gs
out
mov
test
push
xchg
call
sub
xchg
jo
jle
fdivr
test
or
ret
add
xchg
inc
and
push
outs
aas
std
and
mov
js
neg
or
nop
inc
adc
jae
push
mov
popf
mov
cmp
out
ss
das
cmp
nop
jbe
test
adc
dec
and
js
out
pop
das
(bad)
loopne
ss
sbb
iret
jge
cmp
push
rcl
jg
adc
aas
add
ins
fbstp
mov
mov
ins
(bad)
test
sub
mov
lds
fisub
mov
jecxz
std
stos
sbb
ds
pop
pop
cmp
popa
push
outs
setl
mov
iret
movs
out
sbb
sub
or
std
sbb
and
(bad)
pop
add
test
push
xor
cs
push
lods
data16
sysexit
dec
mov
into
pushf
sub
call
jne
adc
jne
jmp
cmp
adc
push
test
mov
hlt
pop
pusha
int3
mov
mov
les
icebp
push
mov
arpl
sti
add
into
pop
lods
out
adc
push
add
mov
fdivr
xchg
sub
(bad)
mov
ja
dec
rol
mov
mov
mov
add
jp
sti
cwde
pop
mov
cmps
(bad)
add
popf
daa
adc
arpl
inc
jl
mov
iret
add
pop
jb
scas
out
add
push
dec
mov
fcmovb
sbb
jl
pop
adc
dec
sub
and
add
cdq
lock
call
pushf
cdq
mov
cmp
rcpps
(bad)
bound
ja
mov
and
mov
mov
pop
add
mov
cmp
adc
jle
jo
and
inc
adc
call
push
or
inc
or
ror
jle
ins
sbb
retf
xor
sbb
mov
or
pop
aam
rcl
mov
jne
add
and
lock
pop
sbb
scas
ret
pop
pop
push
cmp
dec
dec
ins
lock
jle
push
cmc
std
sahf
(bad)
outs
pop
cmp
add
clc
mov
enter
test
sbb
movs
ficomp
cmps
jnp
test
out
fs
xchg
pop
sub
xchg
shl
inc
sar
fcomp
push
push
mov
pop
addr16
jle
jg
dec
sub
inc
and
xor
mov
outs
adc
mov
cdq
push
ror
and
ret
das
outs
inc
xchg
jnp
fisubr
adc
aam
icebp
or
mov
cmp
push
ret
inc
aad
sub
icebp
xchg
inc
add
xchg
ins
stos
fimul
cld
sub
push
mov
and
dec
xchg
inc
cmp
sub
push
and
jnp
adc
loope
(bad)
xchg
push
xchg
repz
fcomp
mov
mov
dec
or
fist
mov
inc
pop
aam
jne
cmp
lods
iret
xchg
add
test
popa
add
test
add
or
inc
dec
mov
jnp
xchg
call
mov
aam
pop
repnz
pop
mov
cwde
ss
pop
test
call
and
clc
mov
mov
xchg
fidivr
repz
iret
std
lods
into
xor
cmp
jnp
popf
retf
pop
pop
pop
cmp
cmp
xchg
(bad)
fnstcw
int
lock
retf
fild
lds
inc
(bad)
jno
leave
test
in
pop
jmp
jb
sub
dec
xor
ss
out
push
in
xchg
gs
repnz
jno
add
xlat
push
push
(bad)
jb
or
push
dec
or
ficom
lds
pop
faddp
xchg
ja
inc
adc
mov
dec
into
clc
xchg
xor
in
pushf
pcmpeqb
inc
push
xor
iret
xor
in
pop
jmp
add
or
push
sti
fwait
pop
mov
loop
sub
xchg
fnsave
test
mov
clc
loop
sub
sti
jmp
push
ss
mov
jle
push
inc
and
cmps
in
cli
fwait
shl
xor
jl
xchg
and
aam
sbb
add
push
jae
mov
dec
cwde
mov
mov
adc
popf
and
outs
jb
pushf
(bad)
in
pop
adc
push
sbb
pop
adc
ror
mov
jae
ja
cmp
test
jb
mov
shl
int3
scas
test
outs
fisubr
and
fadd
push
add
jp
ret
adc
inc
repnz
int
jp
xor
fs
push
iret
mov
jg
test
xchg
cdq
out
test
push
dec
xor
popf
popa
push
pop
xor
data16
sub
call
ins
jg
test
xchg
lods
cmp
pushf
clc
out
daa
dec
sbb
ficomp
arpl
push
cmp
inc
add
cwde
dec
call
and
ins
icebp
xchg
or
ja
jnp
pusha
add
jns
pop
and
imul
sbb
dec
xor
enter
and
dec
nop
xchg
aam
sub
ds
xor
dec
stc
bound
scas
mov
out
push
mov
cmc
cmc
xor
rcr
push
cld
pusha
das
fidivr
(bad)
mov
int3
push
adc
mov
fwait
rcl
shr
sub
xor
(bad)
jo
sbb
pop
cmp
add
xor
jbe
in
push
or
ret
imul
jne
sub
mov
lea
pop
add
stc
icebp
mov
repnz
daa
imul
dec
jne
push
cmps
sbb
and
stos
bound
in
sbb
ds
mov
xchg
sbb
data16
rol
fiadd
jge
lea
mov
cld
jae
mov
mov
xchg
mov
push
and
and
push
sbb
push
inc
and
push
fidivr
clc
xor
gs
jp
mov
lods
mov
cmps
xor
mov
fst
sub
cmps
arpl
mov
xlat
mov
loope
sub
test
push
add
adc
jae
ss
popf
aam
scas
xchg
and
xor
sub
sub
add
inc
xlat
(bad)
loopne
ficom
xor
(bad)
mov
fidiv
shr
jecxz
and
inc
jnp
pop
(bad)
test
push
lahf
iret
pop
repnz
mov
mov
loop
mov
mov
jo
jbe
xor
cmp
dec
inc
mov
icebp
ret
inc
pushf
popa
in
movs
add
dec
and
or
inc
push
outs
mov
dec
cdq
inc
push
ins
sahf
imul
pop
stos
mov
pusha
inc
mov
repnz
(bad)
(bad)
cmps
cmp
daa
inc
add
outs
or
ja
jle
inc
sub
imul
pop
or
inc
mov
fwait
mov
or
fdiv
xchg
(bad)
clc
cmc
jecxz
add
imul
pop
out
movs
and
push
je
mov
xchg
iret
inc
mov
xrelease
mov
adc
dec
pop
and
lahf
int3
call
push
fsub
lea
mov
xchg
out
mov
add
mov
fwait
mov
and
ins
adc
push
dec
jo
dec
cmp
sbb
retf
je
inc
adc
mov
outs
fcmovnb
lods
jno
or
out
out
dec
or
dec
mov
imul
mov
out
test
fdivr
sub
scas
stos
retf
call
fistp
bound
mov
inc
xor
cmp
jae
inc
or
inc
cmp
push
and
adc
sub
push
xchg
xor
inc
arpl
mov
out
mov
jp
addr16
test
movs
cdq
retf
movs
and
cmp
mov
or
jmp
jns
ins
lea
cmp
bound
call
in
cmp
add
inc
lahf
shl
scas
jmp
sub
or
inc
or
cmps
in
sbb
mov
rcr
cdq
xor
cmp
ins
sub
jno
push
jb
add
mov
jg
push
jnp
push
lock
or
shl
sub
or
push
sbb
sub
lods
cld
shl
sbb
sub
dec
cmp
mov
dec
cs
nop
shl
pop
pop
dec
or
cmp
inc
adc
xor
arpl
mov
add
pop
adc
inc
adc
repnz
push
into
push
(bad)
and
stc
mov
call
jl
mov
dec
fs
dec
push
ret
sub
test
or
out
pop
sti
out
xor
push
sbb
xor
sub
and
push
jne
jae
(bad)
jmp
xor
xchg
in
or
setge
mov
adc
stc
push
cmp
fwait
clc
jg
ficomp
pushf
popf
add
cmp
ss
jo
js
std
mov
add
test
and
push
out
adc
push
jle
sbb
mov
cmp
mov
(bad)
(bad)
mov
clc
jo
cmp
mov
fwait
mov
pop
mov
cmps
push
test
xor
enter
out
xlat
retf
fisttp
or
sbb
clc
pop
mov
cmps
(bad)
sub
and
stos
xor
sar
xlat
inc
cmp
or
xchg
(bad)
xor
fsubp
or
mov
js
sub
popa
pop
xlat
inc
add
mov
imul
loop
inc
mov
fwait
sti
jne
das
pop
in
imul
popa
mov
imul
and
rcl
pushf
imul
lea
push
lea
cmp
add
test
adc
and
fs
mov
loop
mov
int
in
add
fwait
dec
cs
dec
mov
mov
in
mov
mov
ror
or
xchg
add
adc
push
pop
nop
jae
nop
daa
jae
cmps
mov
imul
call
repz
jmp
mov
fistp
leave
add
sti
jo
and
lods
inc
ds
call
(bad)
(bad)
lahf
loop
mov
jae
mov
fdivr
fmul
sbb
or
xchg
in
ficom
dec
mov
outs
xor
jmp
gs
dec
xor
jle
dec
mov
pop
dec
push
jge
scas
push
sbb
ss
lods
add
arpl
fisubr
xor
cmps
pop
clc
out
call
add
mov
mov
mov
jp
add
mov
sbb
mov
aas
aam
call
fwait
adc
push
cmps
popf
jmp
sub
mov
test
movs
jecxz
add
mov
sbb
mov
mov
gs
in
in
and
leave
retf
mov
sti
xchg
sahf
pop
ja
or
dec
or
cmp
dec
and
pop
or
sbb
pop
fs
or
push
dec
shl
int
dec
imul
cmp
ins
sti
push
mov
xchg
jp
xchg
jno
and
outs
dec
pop
(bad)
lds
icebp
xor
jl
pop
and
cmp
shl
aas
xchg
nop
test
shr
xor
or
or
stos
in
sub
xor
fstp
repnz
push
or
cmc
inc
mov
mov
jle
(bad)
(bad)
lock
pop
out
ror
pop
(bad)
(bad)
xchg
add
cmp
xchg
pusha
sahf
scas
cli
clc
sub
push
xchg
mov
repnz
adc
and
dec
push
pop
cwde
jge
inc
push
jmp
out
jnp
lods
pop
sbb
int3
xor
and
pop
jecxz
xchg
adc
cmc
call
pop
cmp
pusha
pop
adc
leave
pop
sar
sbb
xchg
jne
and
mov
mov
(bad)
mov
bts
stos
sbb
imul
mov
dec
out
and
add
jg
lods
ins
push
pushf
lea
test
adc
push
xor
xchg
sbb
ins
xchg
push
out
mov
js
cwde
ds
mov
call
(bad)
push
popa
dec
outs
repz
adc
stos
xlat
add
mov
fld
add
lods
shl
dec
adc
pop
jmp
ins
cld
sbb
inc
(bad)
clc
pop
ins
(bad)
dec
sub
add
aam
cmp
sahf
je
rcr
sbb
jmp
cmps
rep
xor
(bad)
fisubr
js
ror
push
push
xchg
enter
(bad)
mov
aam
pop
cmp
(bad)
adc
adc
sub
push
fcom
in
sub
sub
clc
mov
(bad)
cli
jae
repnz
cmp
cli
inc
retf
sub
mov
jnp
and
adc
out
in
aad
addr16
mov
push
mov
dec
jl
mov
movs
add
retf
out
aaa
jno
pop
xor
loop
or
cwde
mov
push
outs
fdivrp
push
pop
cmps
jg
sahf
inc
(bad)
push
loope
movs
cmps
xor
mov
jmp
xchg
fisttp
jle
push
jle
shl
shl
jge
div
sbb
pop
cmps
inc
and
or
cmp
gs
jb
ret
daa
into
fisttp
dec
aam
xor
lea
xchg
cmp
mov
fisubr
sbb
jno
mov
or
fnstcw
cmp
cmp
add
mov
mov
loopne
int
jo
cs
pop
mov
push
enter
pop
xor
mov
out
test
xchg
and
fwait
loope
imul
sbb
je
dec
push
or
movs
pop
pop
ins
adc
outs
sbb
ss
jbe
cmp
daa
cdq
icebp
aam
(bad)
push
jns
popf
repnz
jp
push
mov
mov
popf
fs
or
adc
mov
out
cmps
pop
mov
call
sbb
cmp
xor
adc
popf
call
sub
bnd
pop
and
cmp
out
add
jbe
mov
shl
rcr
jl
xor
imul
adc
jecxz
pop
outs
pop
mov
mov
cmp
xchg
iret
stc
cdq
pushf
sub
jle
xchg
gs
push
pop
rcr
movs
es
outs
rol
cmc
push
mov
dec
dec
pop
add
pop
std
xlat
iret
test
or
xchg
out
jo
fwait
aad
jmp
mov
jbe
enter
sub
cmp
or
out
jmp
cld
lods
loop
cmp
lds
xchg
xor
push
sub
aam
pop
pop
fistp
xchg
jbe
repz
jns
fldenv
and
push
jb
stos
sub
mov
rcl
das
xor
xchg
imul
test
push
or
and
cli
fsub
pop
mov
xor
pop
jle
inc
and
frstor
or
push
sbb
popf
pop
or
or
pop
cmp
adc
popa
pusha
fadd
mov
(bad)
shl
mov
imul
jbe
fwait
sbb
idiv
push
clc
dec
rcr
mov
ret
daa
xor
sbb
fsub
mov
xor
add
loopne
je
adc
loop
rdpmc
ja
je
pop
dec
mov
icebp
jns
pop
shl
xchg
(bad)
mov
fnstenv
sbb
popa
add
pop
and
and
or
push
push
sub
stc
rcr
(bad)
sub
mov
nop
adc
push
fsub
adc
sti
ror
xchg
mov
push
outs
in
adc
stos
imul
cld
fsub
rcr
mov
sub
mov
jae
popf
xor
test
pushf
mov
sbb
mov
stos
and
push
push
sar
fsub
(bad)
cwde
retf
int3
jns
out
sbb
mov
and
repnz
or
bound
xor
scas
jmp
sub
fsubr
call
xchg
call
movs
pop
mov
push
outs
cwde
push
push
repnz
into
pop
pop
test
aam
movd
pop
jecxz
fidiv
jno
imul
pop
mov
shl
or
popf
outs
xchg
dec
mov
or
test
cmc
or
movs
mov
out
aam
and
mov
dec
adc
enter
pushf
cdq
sar
ret
sub
(bad)
ins
fistp
mov
sbb
cmp
fwait
sbb
add
cmp
push
ds
dec
xchg
adc
xchg
cmps
call
call
adc
mov
push
pop
mov
mov
dec
enter
scas
xor
hlt
stos
lea
or
push
shl
jmp
jb
cmp
mov
add
xor
add
adc
adc
sbb
ret
xor
add
mov
adc
retf
data16
dec
dec
cmp
adc
dec
call
(bad)
into
pop
push
les
stos
jne
xor
ins
mov
sub
jns
in
inc
push
fs
pop
xor
or
cmp
data16
loop
mov
pop
jns
mov
test
stos
xchg
mov
mov
push
adc
jo
pop
inc
xchg
pop
push
inc
push
out
es
lods
hlt
mov
and
push
or
into
pop
and
dec
dec
xor
test
push
or
jo
cmc
jbe
mov
mov
cmps
shl
leave
into
cs
dec
xchg
jmp
push
fdivr
jbe
in
call
in
xchg
and
adc
sub
jg
dec
push
mov
sub
lods
xchg
mov
ja
sub
or
les
cld
mov
loopne
sub
add
push
xor
scas
sbb
xchg
mov
inc
mov
dec
cwde
mov
dec
movs
repz
test
ret
lds
push
icebp
adc
xchg
xchg
xor
aam
jno
sub
gs
mov
iret
sub
(bad)
inc
sub
sub
push
and
cmp
les
repnz
jnp
gs
sub
repnz
cmps
inc
inc
mov
aaa
mul
leave
in
call
cmps
mov
mov
add
fwait
enter
out
mul
in
sti
add
and
movs
sub
cli
int3
jno
(bad)
fs
ret
mov
dec
xchg
adc
imul
(bad)
sub
push
xchg
and
jge
fwait
xor
fidiv
xor
inc
mov
push
xor
adc
(bad)
pusha
mov
sub
cld
fist
pushf
adc
xor
add
or
xor
fs
jle
ds
and
xchg
loope
jae
mov
mov
ror
nop
hlt
push
dec
ja
js
adc
xor
jae
aam
daa
ja
pushf
test
outs
xor
dec
(bad)
retf
icebp
xchg
in
jge
or
xlat
pop
add
ja
loopne
mov
cmp
pop
cmp
int
or
push
xchg
fdivr
cs
call
sub
pop
mov
pusha
int
scas
jle
retf
adc
dec
push
jns
call
fisubr
das
in
mov
pop
adc
rol
adc
sub
aaa
dec
push
inc
test
mov
xor
das
out
ds
mov
add
(bad)
bound
push
mov
repnz
sahf
add
ja
(bad)
retf
mov
adc
sub
sub
sbb
and
add
in
ja
shr
lahf
pop
mov
mov
pop
fmul
dec
mov
pusha
mov
push
cmp
int3
xlat
aas
int
adc
sub
push
mov
lods
lods
sub
dec
test
psubsb
enter
mov
dec
add
cwde
pop
push
sub
arpl
sub
stc
mov
arpl
out
jmp
sbb
enter
movs
push
or
test
push
(bad)
push
movs
mov
imul
jmp
jle
dec
mov
xchg
jge
and
js
mov
pop
add
xchg
jl
jbe
dec
(bad)
jecxz
mov
scas
addr16
inc
dec
loopne
mov
push
scas
jecxz
cli
rcl
(bad)
shr
inc
std
mov
inc
jge
dec
mov
push
dec
pop
add
or
inc
and
sub
std
movs
jl
mov
cli
test
xlat
clc
gs
(bad)
mov
cmc
inc
xor
lods
shl
jbe
sub
sbb
outs
call
stos
shr
loop
jns
mov
js
xor
cli
adc
add
loop
cmc
mov
retf
mov
mov
stos
jmp
icebp
cwde
cmps
lods
xchg
xor
jmp
xor
push
aas
sbb
jle
pop
mov
stos
jnp
cmp
jmp
aas
ins
shr
sbb
test
repnz
inc
mov
sahf
in
pop
or
sbb
stos
add
fs
mov
push
xchg
sub
dec
repz
add
xchg
dec
hlt
cmp
xlat
test
std
aam
jmp
or
cmps
retf
or
add
sti
mov
push
test
pop
les
push
dec
test
cmp
push
bound
dec
xchg
test
jb
jne
sub
mov
sub
imul
adc
dec
mov
xor
fadd
fist
inc
mov
adc
cmps
jne
mov
lea
cwde
pop
mov
nop
adc
in
cmp
daa
loope
nop
out
cmp
fmul
or
test
sbb
psubusw
out
ds
aad
mov
lods
enter
jmp
test
fldcw
jp
mov
in
xchg
sar
mov
mul
mov
mov
ror
pusha
xor
add
jb
call
sbb
imul
pop
jmp
scas
mov
mov
mov
push
js
js
stos
xchg
jnp
pop
shl
outs
adc
(bad)
pop
test
popa
das
leave
push
call
inc
dec
imul
add
or
dec
pusha
int
sbb
cmp
retf
adc
xchg
mov
(bad)
cwde
cdq
les
cli
mov
dec
pop
push
or
or
xchg
fwait
inc
pop
cmp
push
in
push
cwde
mov
xor
dec
add
ds
(bad)
fidivr
cmp
pop
les
lds
add
jb
pop
ror
inc
(bad)
test
call
fcom
dec
push
sbb
jle
inc
inc
shr
mov
cs
outs
dec
pop
jle
mov
cmps
ds
mov
mov
cmc
mul
or
cwde
dec
imul
mov
shl
ins
stc
mov
stos
loopne
out
mov
jl
sub
je
je
bound
inc
fidiv
movs
daa
dec
xchg
jno
leave
inc
enter
add
aas
call
mov
jnp
lds
imul
adc
ret
add
or
aad
xchg
xor
ret
popf
pop
or
fidiv
sahf
(bad)
stc
cdq
pop
ja
iret
add
aam
mov
sahf
xchg
mov
(bad)
xchg
cld
jae
inc
mov
dec
js
inc
(bad)
cli
mov
mov
dec
push
jmp
or
xchg
jle
cmp
cmp
xor
jge
xchg
cmp
dec
jge
hlt
push
and
lds
pminsw
popf
retf
xchg
add
movs
popa
out
out
js
add
mov
and
icebp
or
repz
nop
cwde
in
je
adc
xchg
stos
repnz
lea
xchg
in
out
fdiv
inc
into
out
jecxz
xlat
(bad)
push
jns
sar
shr
test
cwd
int
(bad)
(bad)
sahf
mov
div
mov
repz
jmp
data16
int3
(bad)
sbb
mov
int3
xchg
cmp
or
js
push
fsubr
mov
call
fisubr
test
sub
push
aas
loopne
outs
shl
loope
mov
xchg
bound
jg
add
popa
inc
retf
cmp
mov
jmp
dec
push
sbb
fldenv
push
dec
js
mov
jo
mov
xor
xor
gs
xchg
cmps
scas
sbb
in
repz
jae
daa
mov
ret
jb
repz
aaa
or
add
mov
lds
pop
push
pop
adc
cdq
inc
inc
mov
out
pop
push
ja
and
xor
xchg
inc
jo
mov
push
xchg
int
aad
ins
xor
pop
into
push
pushf
xchg
mov
mov
mov
ficom
cli
lock
out
pop
add
jmp
jno
adc
mov
icebp
sub
mov
mov
push
ins
out
xchg
nop
mov
lods
or
div
xchg
xchg
movs
inc
push
stos
add
jmp
pop
xlat
jo
xchg
frstpm(287
sti
mov
es
push
jne
jle
add
imul
scas
les
das
movs
inc
icebp
or
nop
or
test
(bad)
bound
mov
lods
loope
inc
adc
or
lods
dec
test
mov
mov
ret
mov
fiadd
icebp
cwde
lods
sub
fdivr
and
in
jp
inc
jne
push
add
sbb
push
mov
jnp
(bad)
imul
ret
jmp
pusha
test
xor
jmp
arpl
jecxz
pop
dec
call
retf
or
movs
fs
push
cmc
xor
jp
pop
inc
js
jne
lar
repz
movs
daa
lahf
in
push
shr
je
jb
inc
in
psrad
(bad)
jle
mov
outs
das
(bad)
into
dec
xor
mov
imul
cmp
mov
je
mov
mov
sbb
js
mov
lock
jns
lahf
scas
jle
cli
xor
mov
inc
and
xchg
sbb
retf
cmp
sbb
jns
jecxz
mov
inc
pop
xchg
jo
dec
push
rol
les
adc
cmp
into
cdq
push
fs
ds
outs
mov
pop
push
mov
adc
lahf
push
cli
loopne
push
das
cmps
(bad)
adc
dec
adc
dec
adc
pop
jge
cmp
xor
pusha
sub
idiv
inc
lods
or
mov
push
mov
sbb
jge
push
cs
pop
inc
(bad)
pop
dec
mov
mov
mov
cmp
mov
into
or
jne
lds
dec
inc
ja
(bad)
ja
bnd
repnz
mov
jge
jmp
jno
push
pop
dec
mov
cmc
jnp
fimul
loopne
iret
fistp
and
bt
sbb
(bad)
inc
js
pop
sub
add
je
dec
xchg
(bad)
fiadd
mov
cmps
xor
push
addr16
test
ja
pop
jle
xor
out
(bad)
fwait
or
cmp
or
scas
imul
sbb
loop
loope
nop
xor
inc
clc
add
mov
or
and
add
lahf
sub
retf
(bad)
or
jnp
aas
push
test
lds
jmp
js
pop
adc
cmps
add
shr
adc
mov
pushf
pop
and
push
in
nop
cmp
mov
cli
add
add
jge
std
sub
push
cmps
leave
cmp
outs
(bad)
lahf
mov
add
xchg
retf
xchg
imul
cmp
fst
mov
lahf
xor
push
call
mov
fidiv
shr
std
sbb
sub
add
(bad)
cmp
sub
das
jge
mov
and
or
retf
mov
push
inc
fiadd
in
and
sbb
add
cmps
jae
leave
(bad)
jecxz
into
sbb
push
imul
rcr
push
pop
add
ins
div
jns
outs
xor
jp
or
aad
jo
add
das
pop
and
sub
shl
adc
(bad)
xchg
outs
mov
xchg
retf
(bad)
mov
inc
and
and
add
push
adc
xchg
sbb
and
loopne
popf
cmp
jle
xor
mov
sub
fmul
inc
sub
adc
adc
scas
sub
dec
shr
pop
cld
outs
mov
scas
lock
sub
outs
inc
aaa
cmp
out
enter
push
cmp
outs
add
xchg
push
add
icebp
cmp
jl
ds
add
jge
jle
sub
pop
stos
jae
mov
movs
(bad)
call
inc
movs
fs
mov
push
fisttp
and
out
or
cs
and
ret
xor
push
aam
ror
fwait
ja
xchg
popa
xchg
je
xor
inc
(bad)
jl
push
iret
push
into
push
or
push
mov
xchg
sbb
jmp
sbb
sub
je
and
push
adc
pop
adc
std
add
or
push
ret
and
xor
jb
dec
lods
popf
jp
call
mov
stos
jge
popf
scas
dec
cmps
retf
push
or
(bad)
pusha
stos
sahf
jle
push
or
scas
xchg
ins
(bad)
sub
inc
in
xor
jmp
jge
add
dec
cmp
dec
icebp
xor
repz
dec
test
cmp
sub
or
push
into
pop
mov
imul
ret
add
ds
cmp
movs
outs
mov
in
push
fmul
daa
pop
sbb
and
xchg
xchg
popf
xchg
data16
ins
xchg
int
into
push
mov
sti
dec
xchg
xchg
pop
retf
div
sbb
push
rcl
lods
je
outs
mov
shl
pop
adc
pop
cmp
scas
mov
dec
movs
pusha
mov
imul
lock
stos
arpl
in
cmp
push
mov
xor
cmp
add
and
movs
jo
sub
inc
aam
(bad)
xor
cs
dec
sub
cmp
dec
loope
cli
add
das
clc
pop
fstp
cli
jge
pop
retf
push
mov
adc
pop
cmp
push
cmps
push
cmp
and
pop
int3
xor
stc
cmp
out
xor
jmp
mov
out
mov
pushf
pusha
mov
popf
push
or
es
add
daa
(bad)
dec
mov
mov
xor
push
lock
xlat
push
mov
sbb
mov
xchg
neg
xchg
sahf
call
sub
int
push
cld
pop
mov
add
(bad)
pop
mov
daa
into
push
stos
enter
xchg
bound
dec
mov
fld
hlt
xchg
jo
inc
mov
test
nop
cwde
sahf
cwde
inc
fsub
mov
inc
mov
xchg
imul
aaa
enter
aam
adc
cmp
and
pop
lods
xchg
jbe
jecxz
psraw
pop
lods
lea
push
cmps
je
sahf
popf
mov
leave
ss
sub
push
test
sub
in
push
cmps
dec
les
cwde
pusha
mov
popf
lahf
push
or
(bad)
and
sub
ret
cmp
add
jmp
jmp
fsub
ret
and
les
leave
push
mov
mov
scas
pushf
arpl
xchg
push
mov
fs
outs
mov
mov
dec
aad
in
lods
imul
adc
(bad)
cmp
clc
nop
pop
mov
test
mov
data16
test
outs
mov
and
or
cld
add
dec
scas
push
cmp
imul
fld
adc
call
adc
(bad)
pop
push
sbb
dec
mov
in
das
adc
or
sbb
add
or
pop
add
pop
or
sbb
push
jmp
repnz
push
fnstenv
jae
dec
into
dec
test
dec
test
or
cld
pop
(bad)
cmp
sbb
push
fbld
adc
push
mov
jecxz
cmc
xor
mov
cmp
mov
fs
clc
add
jo
ja
mov
push
push
add
dec
mov
sub
and
aaa
leave
imul
out
ss
das
and
push
(bad)
das
call
jg
inc
lock
fstp
sar
and
in
daa
sbb
push
lods
dec
adc
or
pop
scas
inc
mov
shr
jmp
jl
jae
in
movs
mov
pusha
mov
inc
shr
sub
movs
jns
jo
mov
mul
repz
loop
loope
in
jbe
cwde
xlat
and
sbb
pop
ret
dec
sar
(bad)
and
push
movs
js
sub
xor
lock
leave
cmp
dec
scas
jg
nop
jl
es
(bad)
pop
fimul
xchg
gs
xchg
jg
and
inc
mov
mov
(bad)
aaa
hlt
pop
mov
cli
add
pop
out
mov
pusha
fstp
pushf
and
cmp
cmp
xor
sub
ret
aaa
outs
leave
aas
loope
xor
and
or
pop
(bad)
pop
les
cmp
lock
mov
mov
repz
cmp
aas
rcl
and
test
and
and
and
and
in
sbb
adc
jle
call
jge
arpl
push
cld
dec
fidiv
cmp
sub
and
lock
stos
imul
aaa
rcr
xchg
jne
mov
jno
xor
and
adc
aaa
retf
push
and
in
int
push
leave
aas
jecxz
mov
outs
fistp
sbb
xchg
popa
mov
int
stc
test
js
cmp
adc
ret
cs
outs
mov
lods
popa
shl
icebp
(bad)
les
mov
fsubr
icebp
inc
idiv
or
dec
cmps
inc
sub
loope
xchg
je
mov
gs
rcr
push
(bad)
mov
(bad)
pushf
aam
std
add
les
fsubr
push
(bad)
es
push
sub
les
popf
popf
xchg
fwait
push
movs
dec
xlat
mov
push
(bad)
pop
sar
loop
dec
rcr
aam
in
dec
shl
cwde
jp
xor
clc
dec
sti
dec
mov
mov
pop
std
cmp
out
push
stos
outs
mov
inc
lods
jae
xchg
imul
lds
lock
lods
ins
add
sbb
cmp
and
ss
pop
leave
and
pop
lds
add
ss
pop
pop
in
cmp
and
in
aad
push
cld
and
pop
push
stos
jnp
dec
lods
movs
fs
xlat
sub
in
push
int
(bad)
and
repz
mov
push
xchg
push
push
ja
jecxz
les
cmp
ss
pop
mov
outs
scas
mov
cmps
dec
mov
int
cmps
mov
dec
test
ja
jmpw
or
daa
in
movs
push
retf
pop
sub
pop
out
ss
xor
sub
cmp
leave
jns
dec
mov
outs
rcr
arpl
nop
mov
push
sub
inc
es
cmp
out
add
aaa
sbb
pop
mov
adc
or
call
sbb
sbb
ror
ins
mov
mov
pop
movs
jg
fs
out
cmp
div
jmp
(bad)
out
lods
push
cmps
jge
pop
cmps
inc
retf
xor
retf
and
add
in
(bad)
xchg
mov
mov
xchg
js
pop
mov
xchg
fidiv
repz
mov
jne
inc
out
or
sub
jno
(bad)
enter
jmp
ror
sbb
push
fbld
out
ret
test
adc
daa
cmp
sub
adc
mov
xlat
sub
push
loope
xor
pop
jmp
inc
xchg
ins
shl
dec
mov
mov
add
sbb
cmp
dec
lods
imul
iret
sub
cmc
cmp
cmp
adc
je
outs
mov
(bad)
push
cmc
or
xchg
js
add
ja
popa
(bad)
pop
(bad)
sub
sbb
pop
mov
push
adc
dec
mov
stos
movs
lea
push
pop
push
in
add
xchg
push
fisub
lea
popf
imul
sbb
cmp
sub
dec
mov
inc
adc
das
push
in
push
or
add
pop
fdiv
adc
repz
xchg
jnp
ins
movs
mov
push
mov
adc
ds
fdiv
adc
out
fsub
repz
sbb
and
cmp
cmp
or
pop
scas
(bad)
xchg
xchg
stc
das
icebp
push
loop
mov
jnp
rcl
aam
repz
mov
or
rol
into
push
mov
sub
adc
sub
push
lds
jmp
mov
add
aad
xchg
fs
rol
jl
lea
cmp
stc
pop
in
ds
int
int
jle
dec
(bad)
pop
adc
popa
fsub
repnz
mov
mov
sbb
add
or
fisttp
sub
loop
sbb
dec
mov
cdq
mov
scas
ins
sar
outs
xlat
cmp
sbb
or
fs
fiadd
loopne
sbb
mov
xchg
xchg
outs
int
and
jg
ins
mov
fisubr
or
pop
xor
xor
xor
jno
daa
sbb
push
fild
xchg
sahf
dec
fisub
sahf
xchg
inc
sbb
inc
cld
inc
test
push
in
push
jmp
mov
xchg
mov
lea
jnp
xor
imul
add
clc
aas
sub
jle
cmp
sbb
pop
shl
lahf
xchg
mov
fstp
clc
pop
ret
sub
sub
push
sbb
or
or
push
mov
retf
and
push
cmps
dec
mov
sub
rcr
pop
xchg
cmp
add
inc
test
pusha
rcl
xchg
lahf
popf
mov
(bad)
mov
loopne
aaa
loopne
or
jl
add
adc
add
xor
jb
xchg
pushf
nop
lahf
hlt
push
cmps
mov
arpl
mov
(bad)
and
add
lock
inc
fisttp
(bad)
push
mov
pusha
movs
cwde
outs
lods
iret
sub
push
leave
pop
shr
cmp
xor
call
sub
outs
repnz
or
pop
stc
pop
scas
dec
fisubr
fs
fwait
lock
ja
pop
test
mov
ja
xor
pop
movs
test
mov
sbb
or
inc
rcl
jbe
das
ins
(bad)
sub
pop
std
pop
mov
scas
jge
add
(bad)
adc
pop
scas
outs
cmps
mov
inc
cmps
jae
pop
sub
mov
sbb
push
mov
pop
rcr
xor
sub
pop
cmp
icebp
add
cmp
dec
mov
mov
into
and
arpl
test
aas
jecxz
into
xor
movhlps
pop
cmp
loop
icebp
add
sub
cmp
sub
and
sbb
cmp
sti
pop
shl
push
pop
mov
sbb
clc
cmp
add
pop
call
or
call
loopne
cld
add
pusha
fist
pop
fimul
xor
pop
mov
rcl
fadd
or
loope
sti
aas
jecxz
cli
and
cs
pop
in
cmp
mov
inc
mov
mov
mov
outs
iret
and
cmp
or
cmc
pop
leave
push
test
xlat
jns
push
mov
aad
adc
in
test
inc
leave
pop
(bad)
fist
neg
fwait
jae
pushf
jge
cwde
dec
sub
push
fstp
shl
test
cmp
xor
cmp
push
(bad)
and
rcr
js
jl
cdq
push
dec
xlat
cmps
stos
xchg
pusha
stos
ins
aam
sbb
cli
dec
mov
jae
ins
mov
test
fisub
jmp
clc
and
jl
sub
inc
sub
xchg
ja
outs
aad
call
test
inc
rol
ret
pop
fidiv
or
sub
sub
aas
lds
daa
xor
es
aaa
je
cmp
stc
push
mov
(bad)
rcl
xchg
gs
pushf
in
lock
loopne
retf
adc
arpl
cld
pop
scas
mov
cmp
retf
imul
test
lods
jb
jg
ins
mov
mov
xchg
inc
mov
lea
aad
por
out
xor
addr16
repz
jb
or
pop
mov
mov
nop
lods
ja
mov
pop
loope
(bad)
xchg
pusha
idiv
je
cmp
sub
jmp
cmc
add
sbb
mov
xor
inc
mov
cs
pop
mov
jae
or
out
push
cmp
(bad)
retf
and
fidivr
aaa
(bad)
pop
stos
xchg
sub
or
dec
ficom
dec
xchg
and
push
sbb
jmp
xchg
xchg
xchg
imul
mov
xor
(bad)
xor
lods
sahf
imul
aas
cld
xor
ins
stos
gs
sub
jmp
jne
rcl
out
mov
xlat
or
push
add
or
and
cmp
dec
mov
mov
test
mov
push
xchg
outs
fbstp
cld
inc
(bad)
xor
push
retf
daa
cld
add
push
cmc
push
shl
xchg
jle
xchg
cwde
xchg
jb
jle
les
jg
cwde
test
out
aas
sbb
cmp
xor
and
jno
inc
fsubr
loope
pop
icebp
and
sahf
mov
ins
test
mov
rol
ins
mov
xor
xor
jmp
jle
fs
int3
dec
mov
lea
dec
aam
int
or
test
std
pop
movs
arpl
adc
or
in
sti
das
and
and
inc
stos
jb
sub
out
inc
fdiv
out
push
sti
xor
cmp
push
mov
xchg
popf
pushf
call
jnp
jae
jle
jo
mov
cwde
outs
cmps
fwait
je
arpl
jg
imul
sub
ds
or
jnp
xor
cmp
mov
js
cmp
shl
outs
(bad)
pop
scas
jg
outs
wrmsr
retf
call
ja
xchg
xchg
xchg
outs
ret
inc
cmps
les
push
push
iret
dec
sub
in
push
stos
inc
sar
xor
dec
retf
and
push
mov
sub
add
push
xchg
iret
cmp
jmp
sub
push
mov
jge
nop
jo
push
adc
dec
xlat
pop
push
dec
stos
mov
inc
xlat
xor
add
dec
rcr
pop
mov
cmp
sbb
fsub
sbb
cwde
mov
retf
push
int
fstp
inc
mov
idiv
cmp
cmc
dec
mov
inc
into
cmp
xor
repnz
sub
out
sub
sbb
push
lds
popa
mov
out
leave
pop
enter
dec
enter
fdivr
dec
mov
ret
aas
mov
mov
mov
and
xor
inc
mov
jmp
add
(bad)
das
icebp
mov
popa
mov
mov
pushf
jl
jbe
aaa
pop
hlt
sub
stc
cmp
xor
in
sub
sbb
jecxz
neg
js
jae
mov
cdq
ins
mov
adc
inc
lods
pushf
mov
imul
mov
loop
aam
mul
rcl
or
push
sar
(bad)
push
mov
and
je
jb
rcr
xchg
dec
stc
sub
add
lock
mov
inc
mov
inc
test
push
mov
imul
cli
pop
jmp
aam
xor
and
pop
mov
mov
cs
or
pop
add
add
sub
adc
cs
push
push
shl
sub
and
push
call
imul
pushf
fwait
shr
sbb
jle
fs
mov
jbe
xchg
xchg
fwait
mul
or
out
sbb
and
pop
cld
cmp
cmp
jecxz
(bad)
pop
aas
in
or
or
aas
enter
push
lahf
jo
push
test
imul
shr
stc
sub
js
add
movs
gs
out
loope
lock
mov
jge
fs
std
xchg
lahf
inc
into
add
add
add
shr
dec
mov
cdq
ins
nop
dec
(bad)
push
out
dec
or
in
sub
std
push
in
sub
sbb
aas
jmp
mov
mov
mov
dec
test
pusha
lods
xchg
fld
push
fsubr
jge
sub
push
cli
test
ins
rcl
sbb
fs
icebp
psrad
cmc
test
jb
xchg
call
sbb
and
xchg
lahf
jge
outs
test
lea
daa
leave
inc
fist
loope
xchg
dec
movs
fwait
data16
ins
cmps
jns
imul
test
loop
lock
scas
test
cli
or
cmp
pop
adc
cld
pop
ror
movs
movs
jo
mov
nop
data16
lods
cdq
sar
jo
test
xchg
push
lock
fdivr
mov
mov
and
mov
lods
mov
mov
mov
sar
cmp
ds
loopne
out
mov
push
lods
xchg
jno
adc
sub
push
add
and
scas
arpl
imul
or
dec
xor
pop
mov
and
sub
and
and
cmp
pop
xor
sbb
dec
shl
psubd
pop
cmp
pop
cmc
and
test
adc
push
out
mov
sbb
cmp
ret
sbb
xor
pop
(bad)
adc
js
inc
mov
test
inc
stos
xchg
addr16
and
in
(bad)
aaa
out
ss
add
pop
nop
imul
test
fwait
clc
inc
lds
sbb
jmp
cwde
inc
in
push
adc
push
fstp
sbb
jo
xor
adc
xor
xchg
cmp
xor
aas
pop
cmp
fnstsw
std
sub
pop
mov
fidiv
enter
mov
sar
sbb
push
jb
pop
scas
imul
lea
mov
mov
lock
ds
dec
stos
leave
jl
push
adc
inc
mov
popa
stos
mov
jbe
call
leave
xor
inc
fstp
imul
xor
mov
(bad)
aas
in
add
stc
and
fistp
inc
rcr
inc
or
(bad)
and
and
push
xor
adc
inc
fisub
cmp
cs
add
pop
jecxz
lods
inc
sub
test
lds
shl
dec
movs
je
(bad)
push
scas
jnp
inc
retf
xor
xor
(bad)
sub
jmp
popf
dec
lock
cmp
pop
aam
cmps
xchg
xchg
inc
xchg
dec
sbb
cs
inc
jmp
std
es
loopne
mov
or
or
add
icebp
xchg
mov
mov
pop
fld
repz
addr16
mov
mov
mov
jmp
sbb
or
and
sub
push
mov
or
pop
fidiv
sti
shr
inc
or
pop
fcomp
cwde
cmps
jge
mov
xor
dec
scas
ins
mov
lock
mov
sar
sub
ins
(bad)
sub
cmp
xor
sub
sub
popf
inc
sar
out
leave
xor
and
and
iret
mov
mov
mov
ins
cmp
stos
mov
and
mov
mov
push
xchg
aam
lods
push
ret
lock
repz
cmps
jle
xchg
push
lea
and
adc
sbb
sub
movs
push
sub
(bad)
and
pop
mov
push
fisub
sbb
das
pop
pop
adc
cmp
dec
mov
repz
scas
inc
mov
inc
les
rcr
iret
pop
jecxz
mov
(bad)
or
aas
loope
(bad)
push
cmp
pop
mov
movlhps
push
shl
jge
pushf
into
jg
xchg
xchg
mov
sub
lds
lock
mov
mov
dec
or
fimul
jne
jns
pop
fstp
mov
pop
fcom
lods
jb
add
push
mov
lock
lock
dec
lods
mov
jnp
inc
jmp
cmp
cmp
mov
pop
mov
movs
jg
jg
xor
shr
rcr
jg
cs
push
mov
dec
fsubr
jae
fsub
das
(bad)
daa
in
mov
bound
dec
mov
popf
cdq
jo
xor
push
mov
mov
xor
or
lock
pop
xlat
push
test
jne
imul
pop
mov
or
(bad)
(bad)
xchg
js
xchg
or
test
xor
shl
leave
push
xor
xor
push
scas
push
mov
fwait
jp
pop
mov
cdq
dec
mov
enter
mov
cwde
lea
nop
ins
cmps
xchg
outs
(bad)
push
into
lods
cmps
mov
ja
mov
jp
dec
mov
scas
mov
adc
inc
mov
sti
push
cmps
mov
xchg
hlt
sub
cmp
push
mov
xlat
ds
and
sub
shl
shl
inc
or
sub
scas
shl
scas
into
mov
stos
cld
scas
fcmovbe
popf
inc
xor
xchg
cmc
cwde
call
add
cs
lock
and
ins
sub
int
xlat
(bad)
stos
leave
movs
add
rcl
ret
call
mov
sar
cs
xor
leave
ds
sbb
push
dec
(bad)
sbb
retf
call
jmp
jns
and
std
fwait
into
or
iret
mov
nop
dec
(bad)
hlt
call
push
jmp
int
out
fwait
mov
add
cmp
pop
lods
mov
mov
inc
outs
daa
dec
sbb
or
pop
adc
call
mov
xchg
lds
addr16
pop
sub
jnp
lods
fld
sbb
data16
mov
jg
xchg
test
es
adc
jge
xchg
les
shr
or
sbb
mov
dec
(bad)
sbb
pop
push
xor
add
js
jl
mov
mov
test
dec
push
jg
pop
dec
mov
test
cs
aas
dec
or
pushf
fistp
mov
hlt
xchg
aad
ret
jae
dec
adc
into
bound
push
ins
cmp
adc
add
jg
lods
retf
popf
fist
call
jecxz
dec
or
out
lods
int
lock
in
push
mov
or
xor
and
mov
gs
dec
adc
les
sti
xchg
mov
pop
cmp
loop
imul
sbb
mov
es
jo
push
in
jle
imul
and
sub
ds
pcmpgtb
stc
sub
ja
jns
push
aaa
xor
inc
das
pop
orps
imul
jno
mov
test
push
sub
and
inc
or
dec
push
je
pop
jns
ja
xchg
je
xchg
mov
inc
jp
fs
movs
shr
xchg
not
and
xor
jbe
push
xchg
fisttp
push
jge
jae
sub
pop
add
adc
mov
mov
xchg
push
adc
outs
shr
jg
inc
and
and
cld
cdq
fdiv
and
mov
lods
dec
and
pop
in
push
sbb
dec
fstp
mov
mov
xchg
mov
lahf
ror
pop
jmp
inc
sub
cmp
pop
sub
es
sbb
out
adc
cli
and
repnz
or
push
push
add
imul
or
and
outs
sti
lahf
jne
xchg
loope
jae
mov
popa
mov
aas
jbe
dec
adc
and
pop
shl
sar
stc
xchg
cli
sbb
not
xor
int
mov
scas
(bad)
mov
test
mov
add
push
retf
(bad)
lahf
les
aam
enter
mov
outs
sub
mov
retf
push
and
sti
or
sub
fldenv
(bad)
movs
in
mov
jmp
adc
dec
add
pop
xor
lock
adc
pop
ds
cmc
xchg
add
fwait
retf
jecxz
sti
(bad)
scas
ins
sbb
xchg
hlt
xchg
(bad)
arpl
cmps
xlat
adc
int
cdq
fiadd
ins
push
addr16
pusha
push
gs
test
push
jecxz
sub
sub
xchg
hlt
call
popf
jb
mov
fwait
jb
lods
call
fs
pop
sbb
das
inc
or
test
js
pop
add
mov
mov
loope
add
xor
inc
fld
fdiv
cmc
cmps
cli
add
jg
icebp
adc
dec
xor
scas
stos
leave
mov
retf
jb
jae
jnp
pop
or
adc
push
ficom
mov
test
mov
mov
stos
enter
fidiv
inc
sub
ds
loop
jecxz
cmps
push
or
inc
xchg
je
pushf
in
push
outs
pop
inc
or
sbb
push
outs
or
iret
fwait
rol
in
lods
(bad)
lods
rcr
mov
into
sub
push
loope
or
sub
mov
(bad)
or
jmp
(bad)
mov
mov
ss
daa
pop
push
daa
push
sbb
fmul
inc
cmp
pop
add
mov
mov
mov
mov
jnp
adc
and
pop
xchg
fisttp
sbb
emms
or
jo
ja
or
add
adc
pop
mov
std
inc
add
imul
repz
icebp
xor
sbb
ins
cs
push
push
pop
push
and
cmova
cmp
sbb
cmp
hlt
cdq
cmc
mov
js
cmps
ret
inc
sbb
mov
and
pop
mov
scas
fiadd
push
arpl
bound
xor
dec
add
retf
popa
sub
fidivr
fadd
jae
jbe
xchg
pushf
test
ret
mov
les
sbb
sub
or
push
xor
repz
pop
loop
stc
mov
xchg
fldcw
int
cmc
cwde
ret
mov
int3
scas
mov
dec
sbb
lods
mov
daa
jle
pop
loop
sbb
sub
jl
int
cld
movs
icebp
cmps
stc
loop
ret
or
jge
cmp
cmp
stos
call
sub
inc
(bad)
fild
(bad)
mov
jae
test
jo
iret
mov
not
fs
(bad)
pushf
clc
mov
scas
(bad)
in
cmp
dec
add
loop
fnstcw
push
in
mov
sbb
xchg
les
enter
jo
jo
retf
push
jle
push
dec
ds
xor
loope
stc
xchg
shl
jl
cmp
cmp
sub
(bad)
xchg
cmc
mov
pop
imul
push
jmp
mov
lock
icebp
mov
out
mov
lods
dec
fisubr
push
fs
cmp
lds
bound
dec
or
ins
push
push
sbb
lds
sbb
sbb
data16
pop
xor
xchg
lahf
movs
in
mov
mov
aaa
inc
adc
jae
cmp
inc
push
ja
into
mov
mov
ins
adc
imul
arpl
cmp
xor
shl
push
adc
and
xor
add
pop
in
test
mov
sub
js
hlt
jp
fwait
(bad)
mov
js
xor
cmps
into
mov
mov
div
mov
stos
(bad)
lods
enter
aaa
push
xor
cli
nop
sti
mov
ret
xchg
mul
ss
ins
xor
sub
pop
sub
cdq
loope
fistp
sbb
je
add
dec
cs
hlt
call
ins
repnz
push
jae
add
pop
xor
iret
loop
ret
mov
sbb
fdiv
out
adc
clc
xchg
test
mov
pushf
setno
mov
shr
lds
xor
and
sbb
push
cmp
test
cmps
fdiv
sbb
jae
cmp
rol
mov
shl
sbb
push
loope
call
jge
push
sub
addr16
cmp
push
and
pusha
in
push
adc
push
inc
or
imul
out
pusha
jecxz
lock
fs
jmp
ins
sbb
test
movs
ficom
jnp
and
pop
cmp
xor
jae
cwde
hlt
popf
xchg
lods
cmc
xchg
loope
sbb
pop
cmp
test
xchg
stc
xchg
rcr
mul
bound
scas
dec
or
inc
sub
dec
and
cld
xchg
fstp
mov
sub
ret
cmps
in
fild
or
xor
jmp
jmp
mov
pop
push
pop
push
sbb
push
fldenv
into
push
aas
pop
ds
lods
(bad)
sub
or
cdq
sti
xchg
pushf
(bad)
popf
outs
cmp
push
xor
idiv
(bad)
xchg
movs
stos
push
or
jle
sar
cld
jl
pusha
adc
dec
hlt
and
add
(bad)
cld
or
les
outs
add
aam
fdivr
mov
popa
and
daa
ficom
call
adc
sahf
test
sbb
cmp
fisttp
dec
sub
inc
(bad)
xchg
jae
push
aaa
pop
jecxz
or
xor
mov
push
jb
add
jo
js
(bad)
out
mov
data16
pop
aad
fistp
dec
sub
adc
pop
pop
push
cmp
pop
or
mov
in
in
std
mov
sahf
outs
lock
add
addr16
push
jb
jns
aad
rcl
sbb
push
out
ret
mov
mov
xchg
shl
pusha
lock
or
xchg
inc
call
or
or
sbb
out
mov
adc
sbb
jae
xchg
xchg
stos
mov
adc
xor
in
aad
sti
mov
fsubr
mov
mov
fbld
pop
out
jnp
imul
pop
mov
cmp
push
xor
and
sub
hlt
aas
pop
xor
cld
lods
int3
mov
int
and
dec
pop
ja
push
xor
pop
jg
jo
adc
out
jl
push
push
xor
cmp
mov
push
push
jp
fisubr
repnz
mov
mov
and
mov
mov
repnz
mov
fs
adc
inc
add
imul
hlt
xchg
neg
and
outs
daa
je
jns
popa
add
pop
je
push
aaa
sub
and
add
das
inc
cs
or
pop
push
pop
sub
in
xchg
hlt
push
inc
add
shl
cmp
lds
cmp
mov
or
push
test
sbb
dec
sub
ss
xor
cmp
add
rol
cmps
(bad)
cmp
(bad)
ins
mov
xchg
mov
leave
jns
popa
and
daa
fs
mov
inc
adc
loopne
jmp
cmps
sti
mov
mov
push
dec
movs
retf
stos
ror
aaa
and
test
sbb
loop
shl
nop
repnz
xchg
enter
add
mov
pop
or
cmp
inc
push
loope
xchg
jmp
mov
sahf
xchg
xor
inc
adc
in
call
and
cli
mov
and
jae
call
or
pop
adc
aad
fisub
sub
pop
ds
dec
sub
add
inc
xchg
mov
mov
xchg
cli
mov
xchg
ficomp
retf
mov
test
mov
inc
xchg
in
retf
xchg
fist
cs
sub
and
lods
hlt
addr16
cmp
stos
fdivr
bnd
std
pusha
or
std
call
or
inc
xor
test
or
dec
es
sub
push
sbb
cs
or
sbb
jmp
in
adc
push
jns
xchg
scas
(bad)
push
sbb
ins
loopne
push
sub
pop
test
movs
fnstsw
inc
sub
outs
cmp
push
fidiv
push
test
cmp
fstp
pop
sbb
ins
pop
les
std
pusha
sbb
push
or
add
dec
or
jmp
dec
xor
push
icebp
xchg
fs
jmp
inc
add
das
fs
jae
or
jnp
sub
int
ret
ins
sub
mov
push
mov
or
dec
or
hlt
xchg
shl
jl
and
add
xor
or
in
inc
test
cdq
push
cmp
xor
push
outs
add
int3
and
or
cwde
mov
mov
mov
add
cmp
bound
jnp
mov
or
jns
jp
jae
pop
inc
xor
xchg
stos
lock
(bad)
mov
das
push
jbe
xor
xor
dec
or
and
pop
sub
bound
jp
add
or
jle
jo
dec
sub
xor
fnstcw
not
mov
test
daa
dec
cmp
sub
sub
xchg
rcr
jecxz
cli
inc
out
aad
mov
sub
aad
push
dec
sub
inc
adc
and
pop
jecxz
cmc
mov
stos
lds
clc
outs
add
or
lea
mov
addr16
jle
mov
or
jl
push
(bad)
fimul
fild
data16
lock
les
jmp
lahf
mov
int3
scas
in
stos
fstp
add
sbb
lock
repz
fnstsw
ss
ds
sub
and
ret
mov
(bad)
cld
pushf
mov
pushf
stc
les
and
es
sub
xchg
mov
xor
xchg
clc
or
or
ins
xchg
ror
pop
pop
or
test
shl
in
hlt
xchg
sahf
sti
out
fs
aaa
cmp
popa
add
sub
mov
sbb
mov
xchg
clc
pop
jo
jne
push
nop
scas
jmp
pop
push
push
cmps
icebp
xchg
aam
(bad)
scas
dec
or
outs
cmc
popa
and
js
imul
(bad)
mov
xchg
push
sub
jge
jl
xchg
in
retf
mov
jecxz
into
nop
mov
fwait
and
inc
or
(bad)
mov
icebp
sbb
push
xchg
cmps
lock
out
or
jge
and
pop
cmp
call
jnp
icebp
xchg
sti
mov
repnz
jmp
shl
cs
aaa
inc
xor
push
stc
mov
xchg
(bad)
add
test
test
imul
inc
and
popa
adc
cmovns
jne
ror
js
out
ins
or
sub
xor
jle
gs
jp
movs
retf
mov
sar
sbb
xor
xchg
xchg
xor
out
or
xor
(bad)
mov
arpl
xchg
fimul
lea
mov
jmp
dec
ins
mov
xchg
cmps
fadd
mov
adc
push
dec
or
pop
cmp
sub
test
mov
dec
push
imul
call
xor
dec
stos
mov
aam
adc
jp
pop
add
xchg
mov
lods
iret
mov
(bad)
movs
mov
push
cmp
movs
rcl
dec
sbb
js
ins
cmps
popf
mov
sbb
dec
es
adc
imul
int
fcom
inc
adc
popf
cmc
outs
sbb
(bad)
fisttp
lahf
std
mov
repz
cld
lahf
repnz
leave
test
mov
xchg
dec
jmp
cmps
into
jp
enter
scas
jge
push
and
mov
mov
(bad)
call
mov
and
sbb
fidiv
mov
sbb
or
mov
fwait
lods
retf
jge
xchg
(bad)
loopne
test
icebp
mov
lods
mov
cdq
cmps
addr16
mov
or
jb
je
push
push
adc
(bad)
aaa
xor
arpl
jnp
cmp
dec
xor
lods
lods
mov
stos
int
dec
cs
ss
or
js
pop
cmp
loope
fldcw
push
push
leave
mov
mov
ins
add
pop
jae
sub
jnp
es
or
jle
cmp
cmp
sub
imul
or
dec
cmp
jmp
adc
ja
and
rol
cs
cmp
cmp
shl
(bad)
pusha
adc
cmp
sub
push
add
(bad)
and
jle
ja
(bad)
(bad)
ins
out
aaa
js
and
pushf
cmps
sar
imul
leave
mov
hlt
mov
mov
arpl
cs
xchg
mov
scas
rol
pop
movs
leave
stos
(bad)
mov
cld
sbb
and
push
cmp
and
mov
push
adc
popa
cmc
cwde
pushf
ds
sbb
cmp
push
test
std
mov
gs
test
fcomp
cwde
mov
pop
mov
nop
dec
in
not
out
mov
cmp
jno
and
mov
not
and
pop
scas
lods
cmps
out
mov
mov
icebp
or
fist
loop
test
xor
push
out
push
push
ds
ss
adc
fnstsw
shl
lds
inc
lea
push
lods
scas
ins
or
adc
ja
dec
cmp
jge
push
repz
out
mov
and
sub
fadd
dec
mov
xor
mov
or
sbb
pop
and
cmc
sub
cs
or
call
scas
jmp
jbe
jo
retf
add
xchg
aas
daa
jno
enter
dec
cmp
(bad)
aam
jno
sub
cmp
sub
bound
xchg
std
bound
and
inc
or
retf
xchg
leave
mov
int
jmp
into
pop
pop
jg
repnz
fimul
lock
jecxz
xchg
jmp
les
inc
(bad)
fs
jbe
dec
or
jl
add
dec
push
push
jecxz
or
js
inc
mov
test
inc
adc
pop
xor
add
jg
shl
test
and
pop
aam
aas
jl
mov
dec
push
dec
push
or
aad
cmps
iret
mov
fs
sub
popf
fild
aaa
inc
shr
add
sub
pop
jge
retf
jno
or
mov
mov
mov
fadd
punpckhbw
sahf
retf
arpl
jb
leave
outs
cmp
sbb
push
bound
push
aad
or
push
jmp
push
pop
loope
mov
sbb
loope
int3
je
(bad)
and
repnz
stos
rol
test
mov
outs
shl
dec
and
cs
jno
test
push
or
push
sbb
sbb
dec
add
call
jnp
jns
xchg
or
aad
adc
dec
out
mov
in
sbb
out
sub
inc
xor
and
pop
push
sub
in
int
or
and
inc
add
sahf
pushf
mov
icebp
inc
and
sub
sbb
(bad)
cwde
shl
mov
popa
out
mov
push
cmp
das
jl
pop
sbb
cmp
xchg
clc
add
gs
jno
scas
sar
fcomp
cs
sar
js
daa
pop
xor
hlt
or
fcomp
push
or
in
mov
push
jae
or
add
cdq
idiv
(bad)
lds
push
loope
movs
in
das
and
lahf
imul
and
push
(bad)
enter
pop
scas
cwde
enter
(bad)
mov
es
and
test
jns
xchg
shl
cdq
retf
add
xchg
mov
ficomp
adc
pop
sbb
pushf
neg
cmc
test
addr16
outs
or
(bad)
test
cwde
sar
jmp
stos
fisttp
in
nop
hlt
mov
scas
shl
out
out
push
pop
dec
push
and
push
sbb
add
dec
sbb
outs
sub
aam
pusha
or
dec
xorps
dec
pop
imul
imul
and
mov
xchg
cld
test
test
mov
imul
es
sub
pusha
add
push
cmp
inc
pop
bound
ins
ds
cmp
fisubr
repnz
call
lahf
xlat
mov
mov
or
adc
dec
add
and
dec
and
cmc
pushf
in
movs
shr
or
scas
jl
fstp
mov
mov
movs
aam
jmp
dec
clc
arpl
xor
jns
mov
mov
das
pop
adc
dec
movs
mov
xlat
arpl
les
push
xor
sub
cmp
add
xchg
push
add
xchg
hlt
mov
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
and
jne
cmp
mov
std
mov
jmp
mov
mov
cld
mov
les
jae
(bad)
sub
int
or
adc
arpl
scas
inc
sub
jae
sahf
cdq
retf
in
(bad)
idiv
jge
cmp
mov
enter
mov
clc
lods
(bad)
in
push
ins
(bad)
mov
pop
sub
lods
mov
adc
call
dec
cmp
div
mov
push
ins
stc
mov
movs
mov
inc
psrad
fdivr
(bad)
scas
xchg
hlt
sub
mov
xor
pusha
loopne
lods
loopne
and
fidivr
fstp
or
fwait
jae
aas
jbe
mov
imul
mov
and
inc
repz
mov
adc
mov
push
and
ja
ret
xchg
rcr
bound
js
(bad)
xor
jmp
cmp
(bad)
mov
aad
push
and
aas
idiv
sub
pushf
addr16
data16
mov
push
cs
inc
loope
mov
cmp
cmps
outs
sub
fs
test
ficomp
repz
mov
gs
popf
mov
or
and
push
(bad)
into
mov
cmp
push
cld
sahf
(bad)
mov
shr
dec
mov
jne
mov
lock
pop
sbb
mov
sar
aad
pushf
call
inc
add
movs
mov
pop
ss
xchg
inc
cs
adc
(bad)
mov
in
pop
pop
je
movs
xchg
frstor
shr
push
test
cmp
mov
mov
inc
repz
fwait
cmc
and
sar
(bad)
sbb
mov
jno
in
movs
js
lock
mov
mov
js
sbb
out
mov
cmp
push
mov
jge
jecxz
push
test
xor
inc
lods
in
es
mov
stc
mov
and
mov
sub
mov
stos
clc
pop
sub
pop
shr
or
leave
cmps
push
ficom
pop
inc
in
mov
sub
push
shl
cmp
inc
sbb
pusha
sbb
(bad)
mov
xor
jmp
scas
int
dec
shl
cmps
int
aaa
les
push
add
mov
mov
lods
jp
test
and
imul
aad
sbb
jge
mov
lock
dec
(bad)
mov
icebp
and
pop
les
jmp
cli
mov
pop
adc
jmp
adc
dec
push
jge
cdq
push
or
mov
std
push
sbb
retf
mov
add
in
inc
and
dec
mov
mov
retf
cdq
popf
enter
mov
iret
inc
add
and
in
cmp
test
stos
clc
fwait
out
sub
test
and
js
(bad)
dec
and
outs
cmc
test
sub
std
push
sbb
mov
out
dec
or
mov
xchg
lods
imul
push
add
outs
jmp
cmps
xchg
cmc
xor
enter
push
sbb
repz
or
mov
ret
xor
aas
leave
mov
in
xor
movs
frstor
dec
shl
shl
enter
fstp
adc
outs
shr
cld
inc
pop
add
stos
dec
sub
push
inc
and
ja
loopne
sbb
test
xchg
aaa
dec
in
mov
xchg
(bad)
in
push
daa
pop
xor
jne
mov
inc
retf
sahf
cwde
sti
and
push
leave
push
xor
add
leave
jne
icebp
test
mov
add
call
in
mov
jne
add
mov
pusha
and
inc
mov
lods
jp
adc
in
cmp
mov
leave
mov
cmp
imul
inc
mov
scas
jmp
cmps
leave
dec
sub
lahf
dec
and
cmps
test
jae
sbb
xchg
test
jo
mov
add
fwait
idiv
jo
call
add
mov
mov
xor
mov
mov
clc
xchg
gs
jge
aam
adc
arpl
jg
movs
jne
sar
cmps
cmp
xor
sbb
mov
popa
sub
into
stos
bound
in
xchg
cmc
xor
mov
repnz
sub
push
mul
shl
sbb
xchg
pop
xor
jp
lock
or
cmp
jmp
fwait
clc
pop
sub
inc
(bad)
mov
cmp
sahf
jnp
add
sbb
test
jbe
repnz
lods
mov
jmp
pop
lock
repz
mov
inc
daa
icebp
add
dec
or
dec
pop
jmp
popf
stos
rol
or
mov
mov
pushf
iret
or
les
inc
and
pop
push
jo
mov
mov
imul
inc
adc
outs
in
mov
test
mov
push
sbb
mov
mov
(bad)
mov
into
sub
test
lea
or
pop
rcl
mov
xchg
sub
icebp
dec
and
xor
or
add
jmp
js
push
cmp
test
xchg
call
in
xchg
fsub
jb
mov
add
out
jge
cmp
mov
cmps
int3
inc
and
inc
rol
fsub
lds
mov
and
enter
push
mov
push
push
loope
nop
repz
push
dec
cli
mov
fdiv
fbstp
jg
xchg
jp
in
xchg
test
jl
shl
xchg
(bad)
loopne
pop
rol
mov
add
mov
cmp
pushf
fwait
cli
sub
das
push
stos
shr
mov
pop
stc
mov
out
cmp
lea
pop
xor
pop
into
mov
stos
jmp
mov
mov
clc
emms
mov
push
cmp
mov
loop
mov
test
jmp
pop
loope
fs
sbb
mov
xchg
jb
pop
push
sub
sub
sbb
(bad)
loopne
bound
inc
les
test
pop
cmp
dec
retf
movs
mov
(bad)
sbb
popa
xor
stos
test
data16
inc
loopne
inc
cmp
xchg
jno
pop
pop
les
sub
call
scas
ror
jle
stos
js
sub
ficomp
pop
mov
es
mov
push
adc
cmp
or
das
ja
cld
and
jmp
imul
mov
les
mov
or
or
inc
into
lods
jp
cld
mov
cmp
jae
mov
sti
cmp
les
add
jmp
cli
xor
mov
mov
and
aam
inc
mov
inc
add
push
rol
aas
pop
mov
pop
shl
(bad)
ds
jae
push
push
jmp
adc
fild
cmp
retf
push
ds
fs
cmps
ins
aas
jecxz
mov
push
mov
jl
jmp
push
push
jae
cmp
das
rol
movs
xchg
cmc
pop
cs
sar
sbb
mov
call
call
mov
or
sbb
mov
mov
inc
clc
fwait
imul
test
jnp
mov
push
test
aad
xor
cwde
fwait
cli
and
sahf
mov
pop
xor
daa
sbb
xchg
call
les
mov
sahf
xchg
push
adc
das
jp
iret
and
call
shr
mov
pop
add
mov
cmp
mov
xchg
dec
sub
fstp
out
test
dec
sbb
inc
and
pop
mov
pop
fcom
aad
nop
enter
inc
or
pop
mov
xchg
mov
fs
sub
cmp
jo
(bad)
stos
mov
mov
movs
les
loopne
xchg
jmp
cmp
stc
push
pop
out
xchg
imul
lahf
icebp
or
movs
imul
fwait
cmps
in
cmp
pop
ret
fstp
mov
(bad)
fwait
cli
aaa
pop
ror
ror
sahf
fwait
out
dec
pop
sub
xchg
inc
daa
adc
fidivr
call
add
je
fwait
mov
jecxz
cs
arpl
or
mov
lock
shr
test
dec
sbb
jbe
pop
inc
test
cmp
(bad)
into
jle
push
push
mul
ret
stc
push
adc
push
scas
into
pop
xor
out
xchg
mov
jp
or
(bad)
pop
sub
and
ret
mov
shl
sbb
repnz
repz
mov
mov
call
xor
sub
(bad)
fsubr
dec
fnstsw
shl
add
add
inc
xlat
xor
adc
mov
das
inc
hlt
mov
jmp
and
jb
xor
mov
call
test
shl
(bad)
mov
fidiv
jb
fmul
adc
mov
arpl
(bad)
enter
push
pop
xrelease
add
aad
push
mov
ins
mov
aaa
pop
jecxz
aam
fs
clc
and
mov
daa
(bad)
leave
mov
icebp
inc
das
(bad)
(bad)
stos
rcl
in
mov
push
push
xlat
mov
sbb
movs
rcl
cmps
les
sub
cmps
jbe
retf
add
xchg
mov
pop
aas
(bad)
pushf
jle
sbb
in
xchg
popw
pop
jb
loope
sub
xchg
mov
pop
add
dec
mov
adc
aam
cmp
fs
jne
mov
sar
xchg
pop
dec
aad
cwde
int
sbb
ja
test
push
jmp
popf
div
push
xchg
pop
or
xchg
or
(bad)
jmp
adc
fs
dec
cmp
test
movs
je
sbb
out
jae
int3
pop
cmp
inc
out
jno
pop
cmp
mov
cmp
ja
mov
push
pop
repnz
xlat
mov
mov
ins
mov
outs
es
mov
dec
sub
jne
cdq
add
sub
mov
lahf
hlt
and
jmp
xchg
jmp
adc
ins
ret
mov
into
mov
ficomp
jmp
xchg
js
std
mov
fnstenv
mov
mov
sub
into
ja
in
outs
or
xor
mov
mov
stos
(bad)
ja
and
nop
add
jecxz
sbb
data16
and
stos
shl
fld
mov
mov
pop
xlat
mov
daa
adc
addr16
inc
mov
and
mov
pop
aas
sbb
iret
pop
and
fsub
pop
call
pushf
fs
sbb
mov
dec
clc
pushf
inc
and
or
xlat
mov
retf
int3
ins
cmp
test
lock
jle
fsub
imul
fnstcw
popa
int
jbe
retf
(bad)
lahf
fsub
inc
cmc
xchg
sub
push
in
mov
sti
sahf
int3
and
test
out
rcr
or
ficom
idiv
nop
cmc
pop
add
gs
mov
cmp
lea
sahf
popf
in
and
mov
xor
inc
int3
test
in
mov
inc
ret
xchg
cmp
(bad)
xchg
cwde
std
and
(bad)
lods
mov
jae
enter
and
sar
in
arpl
or
xchg
xlat
push
adc
test
adc
cmp
mov
in
dec
sub
jge
retf
imul
xor
xor
test
push
jne
inc
loope
mov
(bad)
jbe
sbb
and
cli
sub
or
ins
int
fldenv
cmp
rol
cli
xor
jno
pushf
mov
pop
xor
add
div
cli
scas
mov
je
enter
aaa
dec
sbb
in
push
sbb
int3
add
clc
pop
sub
test
hlt
inc
push
adc
xchg
sub
xor
mov
in
aaa
adc
and
add
adc
add
dec
sbb
and
mov
jns
nop
mov
cmp
push
sti
xchg
mov
cmp
mov
xchg
(bad)
and
dec
push
test
jg
sub
std
and
mov
shl
in
stos
mov
inc
and
fs
mov
stos
popf
aam
data16
mov
or
call
adc
stos
xchg
repnz
mov
sar
daa
int
outs
or
jns
in
scas
pusha
and
(bad)
dec
das
lds
cmp
lahf
mov
and
xchg
or
inc
test
pop
sub
inc
(bad)
lods
call
cmp
mov
push
iret
mov
dec
mov
mov
mov
shr
mov
add
or
inc
mov
push
aaa
sbb
sbb
fadd
add
and
lods
mov
jnp
loopne
xchg
ins
adc
pop
ret
sbb
inc
(bad)
xchg
jp
loopne
(bad)
fadd
jbe
adc
call
out
ds
jecxz
dec
and
test
xor
lods
sahf
xlat
dec
push
cmp
nop
xchg
div
adc
xchg
gs
jge
icebp
or
sar
hlt
cmps
mov
inc
or
(bad)
mov
loope
sub
jnp
fld
adc
ret
or
out
add
outs
stos
enter
adc
fist
fstp
xchg
jecxz
fs
and
jne
mov
les
mov
lock
les
popa
sbb
xchg
mov
or
sbb
mov
test
(bad)
pop
and
mov
(bad)
mov
cmps
retf
sub
lea
sbb
cmp
mov
or
call
mov
adc
mov
dec
sub
fs
pop
sub
jmp
mov
xchg
arpl
jmp
lods
jge
in
xchg
bound
adc
xchg
in
and
push
ret
nop
mov
inc
push
cmp
leave
cmp
mov
out
cmp
mov
xchg
inc
or
mov
(bad)
and
mov
loope
ins
inc
push
push
cmps
fistp
or
pushf
dec
sbb
ins
int
xchg
in
push
pop
into
stos
call
loop
ss
xchg
ins
das
adc
scas
out
jno
sti
gs
or
cli
mov
sub
pusha
or
sahf
cmc
popa
add
mov
mov
ss
ret
std
pop
cmp
test
mov
xlat
mov
pop
pop
mov
pop
or
jl
sbb
dec
sub
pushf
mov
mov
mov
test
add
out
inc
sub
pusha
mov
jbe
jmp
xchg
rol
xchg
inc
or
movs
mov
popf
mov
pop
and
test
out
sahf
jmp
push
xor
fidiv
retf
inc
sub
push
sbb
loop
sbb
cs
or
fsub
push
mov
and
imul
dec
mov
jns
cmp
(bad)
cmp
movs
ins
ud2
jnp
iret
pop
xor
xor
fimul
not
jb
movd
mov
sti
nop
inc
and
int
jnp
repnz
mov
mov
lock
mov
sub
ficomp
or
xor
mov
fild
xchg
imul
outs
sti
sahf
dec
adc
jae
loope
and
add
xchg
std
push
xor
add
js
xchg
xchg
fist
daa
jb
(bad)
push
xor
lods
outs
sub
int
nop
std
pop
adc
jnp
out
inc
and
(bad)
stc
sub
stos
jle
push
jp
retf
push
cmp
scas
arpl
push
imul
in
movs
xchg
(bad)
push
add
fidivr
mov
pop
cmp
stos
jecxz
and
jno
(bad)
xchg
int
js
cwde
cdq
aad
cs
mov
nop
outs
or
dec
and
push
into
mov
jp
test
ret
fsubr
push
lock
fnstenv
cmps
xchg
icebp
sahf
(bad)
pop
bswap
mov
mov
sub
inc
sub
xchg
mov
inc
das
shr
ret
jecxz
popf
(bad)
jge
sbb
loopne
dec
fnstcw
fsub
xchg
int
addr16
push
adc
mov
xor
stc
dec
pcmpgtw
mov
int3
scas
push
xor
mov
sbb
cli
sub
inc
enter
es
stos
mov
and
mov
xor
mov
jmp
inc
mov
inc
push
sbb
mov
fadd
lock
mov
in
push
int
xchg
call
xor
xchg
popa
add
push
adc
pop
aam
mov
push
inc
ret
cmps
xchg
cmc
cmp
cwde
jb
or
out
cmp
dec
mov
int
cmp
je
sti
cs
fdivr
in
xchg
mov
daa
inc
mov
jno
jmp
xchg
fadd
push
dec
mov
push
xor
lahf
and
sub
shr
mov
in
or
pushf
cdq
sti
je
mov
leave
jl
adc
fst
ja
sub
inc
stos
out
add
gs
jecxz
gs
sub
mov
imul
push
cmc
pop
adc
push
jecxz
xchg
lock
call
mov
outs
int3
cmps
mov
popf
xchg
in
and
jns
(bad)
pushf
mov
inc
aad
test
dec
or
inc
scas
out
adc
mov
jae
lock
pop
es
adc
into
jns
xor
ret
dec
adc
xchg
jno
ror
popf
jae
push
pusha
test
jbe
mov
pavgb
adc
into
ins
psadbw
xchg
jge
sub
aaa
sub
test
es
movs
mov
out
xor
mov
jl
xchg
mov
pop
pop
call
jns
loope
xor
ins
in
movs
and
outs
int3
lods
ja
or
shl
inc
iret
xchg
(bad)
fiadd
jbe
lods
nop
jmp
inc
sub
daa
dec
mov
dec
or
xchg
icebp
pop
adc
mov
icebp
xor
mov
std
dec
xor
xchg
in
mov
shl
mov
shl
cmps
les
in
mov
ret
js
call
dec
mov
movs
xchg
fimul
jecxz
mov
jnp
pop
adc
jle
int
xor
popa
jecxz
xchg
in
and
outs
or
sahf
mov
push
xor
cmp
fst
ss
mov
fstp
les
into
xchg
in
pop
xor
inc
enter
pop
imul
fsub
xchg
adc
int
or
and
ins
rcl
sub
fwait
xchg
lock
jae
test
mov
cmp
jne
mov
loopne
mov
jmp
(bad)
push
xor
and
xor
fcomp
mov
dec
sbb
ins
mov
jecxz
ds
sbb
mov
pop
aas
or
or
cwde
pusha
sbb
pop
stos
iret
pop
cmp
push
adc
lahf
cwde
fisttp
sbb
pop
fstp
mov
pop
daa
shl
mov
out
sub
subps
add
inc
aam
xchg
ss
repnz
dec
or
mov
std
jg
pop
cmp
push
adc
cli
fwait
or
scas
(bad)
jo
leave
lods
fadd
jmp
je
sbb
mov
jmp
or
inc
int3
test
dec
shl
scas
jmp
and
enter
dec
sub
inc
fmul
jecxz
mov
mov
sbb
mov
pop
jmp
movs
inc
pop
adc
and
xchg
xor
xchg
add
sti
xor
pop
mov
add
mov
pop
sub
loop
xor
xchg
loope
mov
shl
xchg
xor
inc
mov
mov
dec
jno
call
imul
push
test
fistp
cmps
sti
jnp
fadd
lds
movs
or
rcl
arpl
sub
mov
ret
icebp
sub
push
pop
cmp
loope
mov
daa
add
cmps
es
arpl
cmc
mov
push
in
add
mov
jecxz
aas
xor
ror
push
adc
adc
push
jge
sar
test
push
jp
pushf
jne
xor
nop
mov
cmp
mov
or
loop
pop
mov
mov
push
adc
call
fmul
aam
cmc
sub
cmp
add
gs
dec
xor
xchg
sbb
dec
gs
jmp
pushf
or
or
nop
dec
jmp
push
arpl
sub
dec
ss
xchg
pop
or
fmul
out
rcl
nop
push
fild
add
and
inc
lods
add
ret
add
sub
xchg
aaa
cdq
cmp
pop
jnp
test
in
push
mov
and
cmps
and
jge
cmp
adc
dec
mov
add
adc
pop
das
and
xchg
sub
xor
add
push
and
movs
(bad)
fcom
leave
scas
inc
ja
add
leave
call
jno
or
pop
cmp
cli
aad
cmp
add
pop
ja
lahf
dec
cwde
and
cmp
jo
push
push
add
and
les
loope
jge
popaw
dec
daa
icebp
jle
ret
or
aad
push
pushf
mov
dec
out
inc
aas
mov
mov
call
out
lds
sbb
jecxz
inc
xor
fist
push
and
aad
mov
add
xor
sub
mov
xchg
ss
ds
adc
lahf
ss
push
adc
aaa
aam
jecxz
cmp
add
test
pop
icebp
lods
test
rol
fdiv
adc
std
sub
(bad)
mov
cmp
and
push
sbb
test
fsubp
in
push
adc
lods
dec
sub
add
test
sbb
adc
outs
mov
mov
mov
mov
shl
pop
jg
mov
(bad)
cmp
xchg
xor
in
ds
stos
xchg
jae
push
dec
push
inc
cmp
xor
test
adc
repnz
add
add
(bad)
into
xlat
inc
iret
int3
rcl
jp
lea
adc
pop
mov
push
pop
add
icebp
xor
or
data16
or
mov
jmp
test
movs
mov
es
push
ds
push
es
pop
xor
out
in
adc
test
lods
pop
es
cmp
sub
sbb
dec
sub
lea
std
xchg
and
(bad)
ds
xchg
or
test
loop
imul
inc
rcr
fsubr
stos
(bad)
pop
aam
xchg
shr
jns
mov
push
jne
dec
fiadd
mov
dec
pop
mov
and
xor
stos
mov
pop
in
out
pop
rcl
xchg
adc
(bad)
push
or
cmp
enter
test
adc
retf
or
repz
dec
arpl
and
lods
test
clc
cmps
nop
imul
std
sbb
jmp
or
adc
jp
not
mov
jl
pusha
jge
call
ret
xor
or
add
xchg
mov
dec
cmc
push
cmp
mov
loop
and
ret
(bad)
pop
adc
sbb
mov
sbb
repz
or
mov
push
out
cwde
jg
loopne
inc
adc
jmp
(bad)
push
loope
in
cmp
(bad)
fild
adc
ss
inc
mov
push
hlt
sbb
stos
std
xchg
pop
stc
push
jg
scas
outs
jmp
clc
mov
jae
xlat
jecxz
(bad)
adc
pop
xor
outs
fidivr
sub
scas
xchg
(bad)
cmp
les
cmps
push
mov
cli
pushf
push
adc
aam
mov
pushf
call
(bad)
sets
fild
daa
xchg
cmp
out
lods
and
call
rcl
pusha
push
xchg
dec
(bad)
ins
xchg
mov
fiadd
movs
stos
add
aaa
hlt
outs
xchg
cwde
dec
mov
mov
cmc
dec
(bad)
jge
sahf
inc
test
and
int
mov
pusha
mov
je
add
pop
inc
inc
xlat
pop
lock
fdivr
push
push
adc
mov
(bad)
ss
dec
mov
or
jne
or
push
call
in
pop
fistp
adc
out
in
add
jbe
int
into
cmp
call
mov
adc
aas
xchg
push
add
enter
outs
aaa
add
pop
mov
lds
add
(bad)
jl
push
cld
sub
out
icebp
mov
inc
call
cmp
cli
xchg
xor
mov
push
(bad)
cdq
test
jne
retf
jbe
push
mov
aam
xlat
or
fild
push
adc
aas
imul
sub
pop
and
call
loope
dec
cmps
sbb
add
adc
shl
xchg
je
fdiv
inc
fnstenv
in
je
sbb
sub
scas
inc
js
ret
push
rcl
adc
pop
fwait
outs
les
pop
xor
pop
out
out
data16
adc
jae
arpl
mov
icebp
push
stos
and
mov
or
gs
scas
sub
pop
adc
cmp
pop
pop
adc
sub
push
and
cmp
adc
stos
rcl
loopne
xor
or
out
or
in
loopne
push
xchg
mov
pop
jmp
(bad)
iret
push
dec
cmp
fisttp
pop
dec
and
mov
in
fstp
inc
loop
mov
ret
loope
mov
idiv
es
pop
lods
(bad)
pop
adc
jl
jge
inc
enter
jmp
iret
add
into
push
jg
dec
test
pop
adc
cmp
mov
add
test
loopne
mov
sbb
cmp
and
adc
mov
lds
sbb
mov
aaa
and
daa
stos
xchg
test
jns
push
cmp
pop
and
ret
fldenv
pop
sub
xor
xchg
or
fistp
adc
sbb
sub
lods
lahf
push
or
(bad)
mov
mov
sub
xor
jmp
gs
mov
sub
int3
cmp
stos
scas
sub
pop
mov
(bad)
jecxz
dec
jle
mov
movs
retf
and
jae
jno
std
lds
xlat
stos
xchg
push
ja
or
inc
xor
add
xor
jne
mov
cli
add
sbb
das
mov
int
ror
mov
out
loope
sub
jbe
adc
mov
in
push
xchg
mov
sub
shl
xlat
push
mov
leave
into
sbb
sti
mov
mov
fidiv
loope
dec
and
arpl
mov
and
inc
or
jbe
cld
mov
push
aas
pop
push
pop
xchg
into
or
xchg
cld
pop
pop
cmp
xchg
dec
stc
pop
imul
clc
xchg
inc
cld
push
jo
test
bound
mov
jno
aas
push
mov
xor
jmp
xor
or
loope
cmp
cli
rcr
test
pop
lods
movs
cmp
ds
fidivr
(bad)
jae
xlat
mov
imul
jnp
shl
push
mov
shl
inc
hlt
jmp
inc
imul
sets
in
rcl
pop
mov
cli
mov
jecxz
push
test
cdq
dec
mov
cmp
inc
das
je
leave
loopne
pop
hlt
lds
retf
test
ss
add
push
inc
int
or
int
in
mov
push
inc
push
in
ret
lods
sbb
stos
dec
shl
jns
rol
and
sub
test
sbb
nop
and
push
push
test
and
rol
gs
push
inc
dec
cwde
push
sbb
sub
fisttp
hlt
test
sbb
scas
sbb
shr
add
mov
imul
scas
popa
mov
inc
push
push
xor
dec
shl
push
xor
daa
jns
adc
sbb
jge
(bad)
mov
inc
dec
sti
retf
fcomp
imul
dec
cs
jns
sub
es
cld
pop
and
jmp
push
push
or
cld
jle
add
fiadd
sub
lods
cmps
cmpxchg
mov
icebp
push
sub
sar
ja
call
pop
push
cs
test
outs
and
out
in
push
aam
jg
js
(bad)
fld
stc
popa
pop
or
movs
inc
cs
xchg
repz
iret
mov
icebp
cli
push
adc
pop
xchg
outs
aad
xor
pop
popf
or
push
or
add
repnz
sbb
fistp
pop
call
ins
or
test
xchg
xchg
sar
mov
movs
les
repz
adc
(bad)
cld
and
sub
fwait
pop
add
arpl
fstp
sbb
rcr
loop
adc
rcr
xor
lock
fdivr
mov
sbb
ret
les
push
cmp
fist
cmp
out
(bad)
sub
xchg
xchg
imul
sbb
mov
loopne
jns
xor
das
inc
sar
test
and
push
cmps
fdiv
mov
loopne
cli
out
das
and
xor
and
lock
ret
cdq
outs
cmc
sbb
popf
push
pop
mov
shl
nop
sti
mov
ficom
(bad)
jmp
es
imul
jo
mov
aam
cmc
push
call
fdivr
mov
sub
dec
xchg
and
push
push
mov
sbb
sbb
xchg
mov
and
loope
test
fisub
cmps
pushw
add
push
fistp
add
xor
jg
sahf
ret
dec
cmp
sar
inc
test
sbb
or
and
or
pop
int3
scas
dec
xchg
or
ss
pop
mov
call
fimul
jno
sub
cmp
sub
(bad)
jbe
push
jle
xor
out
dec
mov
add
es
in
int3
repnz
dec
lds
pop
fcmovne
sub
jge
or
mov
xor
cmp
pop
push
fist
fadd
out
mov
push
sahf
adc
jnp
mov
xlat
mov
jmp
jecxz
or
jmp
jge
mov
int3
es
jp
das
xor
lock
xor
push
cmp
cdq
cwde
imul
fdivp
jp
call
adc
sub
fsubrp
scas
mov
push
xor
cmp
pop
je
pushf
jo
shr
pop
in
push
cdq
push
cdq
sub
or
fisttp
sbb
cld
out
(bad)
pop
sar
out
push
inc
mov
inc
lock
push
push
in
add
jbe
dec
mov
push
push
xchg
sub
imul
nop
sbb
xchg
test
push
jmp
retf
xchg
ror
pop
jmp
movs
inc
mov
and
add
cmp
push
bound
(bad)
and
ret
mov
add
scas
loop
lods
push
push
mov
sub
in
jmp
pop
mov
loop
ds
cs
lds
adc
pusha
xchg
outs
(bad)
daa
fst
adc
inc
in
jg
jnp
lock
adc
mov
mov
or
jne
gs
sbb
mov
pop
ds
mov
jl
xchg
retf
dec
(bad)
adc
lock
xchg
lds
add
push
cmp
cmp
inc
loope
jno
(bad)
mov
sbb
xchg
(bad)
repz
xlat
xchg
or
and
add
and
mov
leave
retf
inc
mov
xor
sbb
pop
adc
test
out
jb
jae
mov
mov
mov
xchg
fst
neg
retf
dec
pusha
push
and
fst
in
js
or
or
arpl
not
inc
dec
icebp
fwait
mov
mov
cmp
bound
cmp
shr
outs
fsubp
lea
gs
jle
xchg
adc
xor
addr16
pop
retf
movs
xchg
test
repnz
std
jns
into
bound
or
add
inc
push
loop
jecxz
xchg
out
push
sub
add
mov
pop
into
hlt
repz
cmps
cwde
or
ret
mov
sahf
fs
mov
cmps
sbb
rol
mov
push
adc
jo
sub
cwde
shl
pop
cmps
shl
inc
mov
adc
sub
adc
push
test
aam
dec
out
push
jb
push
aam
xchg
jg
mov
inc
out
int3
jmp
sbb
pop
pusha
cdq
and
pop
(bad)
fcomp
sahf
sub
test
mov
outs
pop
pop
ins
sti
xor
pop
jae
dec
loope
dec
outs
int3
push
lea
jne
adc
rcl
retf
fldenv
and
cmp
outs
mov
xchg
mov
pop
js
inc
pop
popw
aas
sbb
pop
mov
pop
adc
imul
out
aaa
mov
mov
in
(bad)
inc
lods
and
mov
push
fsubr
aad
and
pusha
(bad)
out
pop
inc
jns
xor
mov
xchg
xchg
in
xor
pop
and
xchg
add
sbb
fidiv
out
cmp
add
adc
fstp
imul
test
std
loopne
je
call
pop
push
xchg
lds
(bad)
push
loopne
(bad)
push
into
or
gs
xlat
(bad)
mov
fisubr
adc
loopne
stos
or
sub
cmp
outs
jmp
ret
stc
sbb
fwait
sub
mov
xchg
retf
jnp
pop
data16
inc
aas
add
jmp
fst
nop
cmp
xchg
rol
movs
jmp
or
scas
mov
or
or
stos
movs
pop
repz
mov
add
cmp
pushf
test
pop
int
mov
sbb
sar
xchg
mov
cmp
add
xchg
inc
xchg
cmps
pop
lock
pop
add
pop
jle
mov
sbb
iret
pop
shr
mov
pop
inc
ins
(bad)
int
xor
retf
fistp
and
sub
xchg
jno
clc
int
loopne
dec
jo
cmp
(bad)
out
ins
dec
dec
pop
dec
aas
xor
cmps
hlt
or
imul
ss
mov
ins
dec
xchg
mov
dec
in
cmp
push
ja
shl
or
pop
mov
dec
leave
ror
dec
cmc
ins
daa
mov
call
mov
in
mov
xor
ins
or
sbb
xchg
add
pop
enter
test
leave
sbb
adc
mov
rol
test
jae
jl
dec
sub
inc
ss
(bad)
sbb
out
pop
pop
into
jnp
jns
mov
add
mov
sub
mov
fwait
les
es
push
dec
popf
sar
pop
das
xor
push
xchg
bound
lds
push
test
jmp
jno
add
dec
or
popf
test
push
lods
cmp
push
add
push
dec
in
push
mov
jecxz
cmp
nop
push
or
mov
xor
sub
cmp
xchg
mov
adc
retf
pop
dec
call
and
add
outs
pop
jp
(bad)
mov
pop
fld
ins
dec
sbb
and
sub
les
cmp
dec
into
int
call
and
inc
je
into
aas
mov
aas
or
ins
jecxz
add
jg
sahf
mov
pushf
jp
fistp
dec
iret
xor
lea
rcl
mov
movs
mov
xor
hlt
out
not
pop
iret
out
aam
lock
jmp
jne
bound
scas
je
add
sbb
add
(bad)
into
add
jae
sbb
jnp
add
sub
mov
adc
mov
rcl
dec
mov
add
jp
xchg
movs
inc
push
daa
adc
add
cmp
mov
sbb
cmp
xchg
lds
mov
leave
pop
scas
pop
mov
stc
or
xor
bnd
cmp
sub
push
mov
cmp
out
lods
shr
jp
inc
sbb
xchg
inc
cmp
push
cmp
(bad)
scas
data16
shl
xchg
pop
(bad)
loope
jl
idiv
test
mov
pop
scas
xchg
fcmovnb
psllq
inc
jae
cmps
jmp
lea
ret
jno
stos
adc
dec
xchg
fs
iret
loopne
pop
and
xchg
jmp
(bad)
jecxz
fwait
pop
pusha
jmp
jecxz
add
pop
add
inc
add
(bad)
in
aaa
ins
cmp
mov
retf
cmp
frstor
cmps
mov
dec
lahf
cmp
jg
leave
in
scas
push
sbb
cld
push
loop
cmp
icebp
lock
sub
in
adc
mov
scas
mov
in
xor
jbe
in
mov
jmp
sub
in
adc
loope
push
xchg
ret
add
push
loopne
and
add
shl
popf
mov
mov
ins
movs
lods
in
repz
out
ss
sar
hlt
ret
mov
cdq
scas
adc
test
sbb
or
mov
jno
sysexit
(bad)
and
sub
jge
shl
aad
fdiv
js
and
mov
iret
pop
fld
xchg
fadd
cmp
daa
xlat
sbb
(bad)
in
push
add
jo
cmp
xor
jnp
xchg
and
sub
fidivr
nop
outs
cmps
jmp
(bad)
mov
and
push
shl
stos
nop
dec
inc
imul
(bad)
sbb
je
popf
mov
cmc
in
lods
lods
cmp
pop
mov
add
loopne
lock
std
adc
push
in
bound
mov
dec
push
inc
inc
cmp
xchg
popf
sbb
push
ror
mov
xor
xchg
inc
repz
adc
xchg
mov
dec
mov
sbb
push
adc
mov
retf
test
push
push
and
repz
test
adc
xor
loopne
cmp
adc
ret
add
daa
cwde
add
je
xor
loop
(bad)
and
sub
mov
mov
fst
js
dec
fadd
add
push
jo
rcr
out
push
cmp
jg
out
push
fwait
lea
push
imul
push
xlat
cdq
(bad)
pop
mov
imul
xor
(bad)
arpl
inc
stc
dec
es
xchg
lock
cli
pop
pop
call
mov
hlt
mov
xor
ss
sti
movs
imul
xchg
movs
bound
icebp
mov
mov
cld
shr
pop
pop
sub
inc
dec
adc
mov
out
out
xlat
ret
pushf
cmc
int3
adc
loopne
dec
jb
push
repz
jp
int3
jmp
mov
jbe
retf
fcomp
jg
sbb
iret
mov
hlt
add
xchg
push
add
dec
sub
pop
cmp
imul
or
and
bound
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
and
arpl
inc
adc
jns
push
das
dec
or
addr16
adc
jle
inc
sub
cmp
adc
sub
dec
push
dec
sub
ja
pop
sbb
popf
call
int3
mov
push
cs
xor
pop
cmp
popf
repnz
lock
out
cmps
retf
lods
out
mov
xchg
fimul
(bad)
fidivr
iret
mov
out
std
mov
fild
idiv
in
out
cmc
mov
call
mov
scas
cli
mov
mov
xchg
aad
hlt
xchg
call
cwde
sar
jecxz
sti
lods
stc
stos
(bad)
lock
out
in
sti
mov
mov
(bad)
sahf
(bad)
test
movs
lock
retf
scas
jmp
mov
xchg
jmp
xchg
test
mov
rcr
enter
rcr
int3
test
mov
(bad)
xchg
icebp
mov
scas
loope
rcr
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fnstenv
loop
icebp
call
aam
hlt
mov
rcr
iret
test
jecxz
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
add
add
jp
push
xchg
mov
cmc
ins
jns
jb
pop
bound
inc
jno
gs
add
sbb
mov
pop
adc
xchg
add
jno
out
xchg
neg
scas
(bad)
shl
inc
rol
inc
mov
xchg
nop
mov
mov
pop
cmc
jg
retf
mov
pop
push
retf
cmc
in
mov
pusha
fwait
std
les
jle
xchg
push
mov
jmp
pop
ds
push
mov
data16
not
sbb
jp
(bad)
ret
sub
pop
ret
push
jns
fild
popa
fld
or
rol
pop
push
loopne
fiadd
xor
or
xlat
inc
xchg
jle
or
mov
js
add
bswap
sbb
sbb
fisttp
test
xor
mov
sar
pusha
shr
or
hlt
mov
fs
cdq
lahf
mov
sbb
lock
inc
jmp
dec
sbb
sbb
mov
jo
gs
xchg
in
mov
cmp
sbb
sbb
imul
sub
data16
out
mov
fdivrp
xor
pop
les
rcl
xchg
test
shl
mov
and
dec
xor
cmovne
jle
pusha
(bad)
lds
out
pop
add
loope
repnz
mov
jne
popa
or
sub
std
sbb
nop
jbe
fcomp
push
fisub
jae
movs
jp
sbb
test
sub
and
ret
pusha
or
cli
and
neg
push
lahf
ret
inc
xchg
psllw
ins
dec
xchg
jmp
in
pop
jmp
dec
cdq
test
cwde
neg
pop
fdiv
jecxz
bound
push
int3
pop
(bad)
cmps
call
mov
fld
shr
jp
repz
out
out
rsm
xor
retf
jmp
and
sahf
movs
mov
daa
mov
xchg
stc
(bad)
sahf
mov
pop
inc
add
lods
mov
jg
cdq
jp
and
lds
mov
fisttp
sub
in
cmps
xor
cmc
sub
sbb
inc
fld
push
les
out
rep
mov
and
xchg
lods
sahf
pop
inc
aas
loopne
and
neg
ds
std
loopne
or
(bad)
cld
ins
mov
lds
aas
inc
jp
push
mov
cmp
imul
jmp
std
idiv
sub
sub
and
adc
mov
pusha
cld
je
jne
aam
shr
sub
dec
call
js
mov
lahf
movs
mov
jecxz
jmp
inc
lahf
gs
sbb
mov
dec
dec
popf
push
stc
cs
xor
je
fdiv
mov
push
sub
xchg
fdiv
push
cmc
jns
push
adc
(bad)
aam
add
cmps
jnp
sbb
rol
mov
lahf
mov
or
ins
scas
sub
test
leave
jp
je
cmp
jb
inc
or
fdivrp
sub
das
pop
adc
ret
adc
lods
and
inc
or
fcom
mov
repnz
aas
xchg
leave
sbb
into
mov
(bad)
(bad)
std
pop
adc
stc
mov
jle
jno
ja
(bad)
dec
lods
push
push
sbb
sahf
pop
pop
fsubr
push
push
call
(bad)
shr
xor
(bad)
lods
cmc
ss
cmp
sbb
pop
jae
stos
mov
(bad)
test
cmp
dec
mov
push
jp
aas
sub
xchg
mov
inc
in
aas
lds
call
ret
arpl
cld
call
je
mov
fsub
inc
lds
sub
out
rcr
lods
add
call
jp
cmp
mov
jb
xor
cs
shl
jne
fwait
scas
fisttp
out
mov
jnp
adc
adc
or
loop
sub
pop
cmc
pop
hlt
adc
inc
xchg
push
lds
sahf
lea
sbb
and
jb
movs
jbe
and
sub
sub
loope
cmp
icebp
call
mov
xchg
popf
out
arpl
aam
mov
xbegin
mov
pop
pop
mov
dec
fcomp
in
fsubrp
push
add
jns
xchg
and
jecxz
gs
aad
push
and
xchg
lods
test
icebp
lods
int
push
xor
adc
cmp
cli
(bad)
scas
xchg
sbb
jno
or
cmp
leave
cdq
and
mov
push
daa
sub
jbe
stos
into
mov
dec
movs
movs
retf
xor
and
les
out
xchg
sbb
iret
gs
cmc
and
cmps
lahf
mov
mov
jo
sbb
pusha
imul
push
sub
dec
int3
pop
and
gs
imul
pop
xchg
jns
or
mov
cmc
adc
jmp
add
adc
mov
aam
cmp
loope
cmps
jl
sbb
xchg
add
stc
pop
shl
push
dec
and
dec
inc
dec
push
js
aad
pushw
hlt
(bad)
js
movs
adc
mov
(bad)
cmp
jno
jbe
imul
xlat
adc
inc
xchg
mov
cwde
aaa
push
in
or
test
fild
or
adc
and
rol
mov
repnz
and
icebp
pop
xor
xchg
xchg
mov
adc
loopne
ja
js
jmp
sub
mov
push
jnp
clc
sub
mov
shr
jmp
daa
loope
xor
dec
je
and
mov
push
mov
mov
fiadd
pusha
leave
push
or
and
fcomp
jge
push
(bad)
ja
mov
adc
xor
xor
in
cmovle
jmp
(bad)
xchg
retf
sahf
adc
lahf
inc
or
rcr
cs
pop
sub
xchg
sar
inc
sbb
pop
mov
cmps
and
dec
cmp
jno
call
cmps
ror
push
mov
mov
xor
mov
pop
inc
inc
xchg
loop
dec
sub
xchg
(bad)
jge
fwait
mov
std
sub
stc
stc
mov
push
ja
sub
stc
cmp
xor
and
inc
ss
jne
jp
xor
mov
fild
fidivr
xor
push
rcl
xlat
mov
inc
ds
and
mov
xchg
pusha
cmp
mov
jae
cdq
dec
fidivr
inc
xchg
mov
mov
pop
inc
lock
repz
not
push
int
xchg
sti
xchg
dec
lahf
shl
lds
shld
nop
call
xchg
xor
out
xchg
cmp
push
loopne
imul
dec
lods
mov
push
test
cmps
mov
mov
scas
stos
dec
test
dec
repnz
sbb
sub
or
push
xchg
add
cmp
inc
ret
push
scas
les
xor
xchg
add
xchg
jb
loope
hlt
in
adc
inc
test
dec
call
popf
mov
outs
xchg
(bad)
jne
sbb
(bad)
neg
and
xor
inc
rol
sbb
inc
push
addr16
stos
nop
and
inc
jp
pop
or
pop
mov
scas
sub
retf
stc
into
mov
nop
dec
mov
stc
add
dec
jb
jp
jp
inc
cmc
ret
lods
cmp
sbb
xchg
imul
out
dec
popf
push
imul
pop
mov
loope
jle
cdq
nop
push
sub
add
gs
mov
jle
adc
mov
in
movs
stos
mov
out
out
xor
pop
jg
leave
(bad)
lahf
movs
jl
pop
popf
int
xor
mov
push
test
outs
jge
aas
jge
sbb
jo
adc
test
mov
xchg
repz
mov
inc
jmp
scas
mov
cmp
into
pusha
xchg
pop
push
adc
fucom
inc
lahf
sbb
or
mov
addr16
inc
sbb
pavgw
bound
fisttp
and
add
jle
nop
mov
xor
fwait
dec
das
cmp
cmps
movnti
sbb
ret
arpl
call
inc
(bad)
lods
jnp
(bad)
fnsave
arpl
pop
add
push
cdq
inc
inc
xor
outs
loope
sbb
(bad)
retf
add
push
in
je
les
fucomip
mov
shl
xchg
xchg
dec
leave
hlt
ficomp
pop
aam
out
sub
dec
js
mov
cmp
clc
or
sub
sbb
cmp
sbb
push
fild
aam
fucomi
push
mov
out
nop
rol
mov
push
and
jl
(bad)
dec
and
stc
mov
jae
dec
outs
arpl
pushf
shr
xor
adc
mov
adc
push
rol
inc
imul
or
mov
out
pop
dec
fs
in
mov
daa
mov
and
int
mov
xor
add
pop
mov
or
mov
xchg
sbb
mov
dec
or
dec
xchg
ds
rcl
lar
xchg
xchg
push
aam
test
aaa
pop
jne
(bad)
sti
push
(bad)
pushf
loop
dec
adc
mov
xchg
sbb
aad
aaa
jns
cmp
adc
dec
pop
cmp
rol
pop
leave
out
in
(bad)
jle
adc
mov
ret
rol
enter
hlt
inc
outs
mov
ret
push
mov
jmp
and
xchg
rcl
mov
sbb
sub
or
mov
dec
fbld
or
push
push
and
je
ins
cld
push
call
add
scas
push
inc
in
push
int
cmp
movs
ins
daa
add
gs
clc
cmps
mov
pop
(bad)
(bad)
mov
cmp
fst
iret
popa
jg
sbb
fisubr
je
pop
mov
mov
mov
push
push
outs
jl
inc
push
xchg
dec
or
pop
add
inc
fidiv
push
aaa
cmp
sub
inc
push
pop
loopne
popa
(bad)
xor
dec
or
sbb
push
imul
ficom
xor
gs
mov
retf
enter
scas
inc
sbb
jnp
jo
push
rol
pushf
test
push
inc
sbb
aaa
dec
repz
int3
(bad)
xchg
in
gs
inc
mov
jb
mov
push
fiadd
xor
mov
mov
stc
test
sbb
mov
jnp
or
in
and
push
cmp
add
(bad)
mov
pop
jo
mov
mov
add
push
sahf
xor
push
fstp
je
push
and
paddd
mov
call
outs
into
mov
mov
adc
stos
add
into
dec
stos
addr16
mov
push
adc
leave
inc
jbe
ret
lods
push
scas
or
cmc
hlt
cmp
bound
mov
adc
sbb
cmp
xor
mov
push
sahf
sti
fld
int
fs
and
or
dec
scas
repnz
push
pop
xlat
or
adc
pop
and
jnp
mov
push
js
mov
(bad)
push
jecxz
test
cli
ret
xchg
sub
ret
inc
fwait
xchg
push
inc
and
mov
sti
jge
and
shr
push
(bad)
sar
jae
add
ss
xchg
icebp
pop
sbb
jmp
jb
xor
mov
cmp
out
xchg
push
adc
pop
pop
mov
shr
xchg
dec
arpl
mov
xor
je
mov
sbb
xor
out
out
ret
cmp
loop
mov
stc
(bad)
jmp
or
cmp
dec
xchg
mov
sub
lahf
mov
test
cmp
ins
(bad)
stc
push
push
jge
repz
cmp
stos
push
cmp
and
movs
or
or
inc
call
xchg
mov
mov
hlt
repz
movs
jbe
vlddqu
mov
not
in
inc
pop
cmps
mov
xor
fs
pusha
push
mov
loopne
fsubr
and
sub
pop
(bad)
mov
retf
mov
stos
pop
push
cmp
aam
sub
jge
pop
mov
imul
sbb
jb
arpl
mov
cmps
and
out
daa
pop
mov
les
icebp
sbb
and
sahf
dec
and
pop
cmp
jecxz
rcr
mov
xchg
xor
mov
jne
jp
mov
arpl
mov
jns
clc
retf
xor
enter
mov
cdq
dec
pop
jnp
dec
sub
xor
scas
cld
popf
adc
(bad)
pop
add
push
into
dec
fisubr
(bad)
xlat
jbe
loope
addr16
cmp
pop
stos
sbb
mov
sub
fidiv
and
(bad)
push
jecxz
or
clc
ss
inc
pop
jmp
cwde
(bad)
or
aaa
shl
int
int
mov
shl
gs
inc
popa
mov
inc
push
(bad)
mov
mov
add
sub
aaa
pop
jae
mov
jmp
mov
cmp
sub
inc
or
jo
push
xchg
jg
cmc
out
loopne
stc
and
frstor
xor
and
es
pop
arpl
repnz
push
int
push
push
fisubr
ret
and
jnp
mov
pop
pop
xor
xchg
sub
fcom
rcl
sub
cmc
outs
inc
mov
std
mov
retf
jmp
in
and
sbb
add
adc
mov
inc
inc
or
xchg
stos
sbb
iret
out
fwait
jae
xchg
or
push
mov
bound
loope
test
xchg
sbb
(bad)
mov
aam
adc
xor
scas
dec
fnsave
mov
pop
mov
mov
add
aam
push
pop
cmps
ins
inc
shr
xchg
sar
mov
adc
xor
imul
arpl
xchg
xor
gs
fsub
add
(bad)
in
inc
add
push
ja
das
push
xchg
xchg
repz
fcmovb
push
push
jae
dec
and
inc
out
pop
jp
and
aaa
ds
imul
mov
hlt
shl
jb
les
rcr
fistp
fnstsw
cmp
jp
mov
cmps
mov
imul
cmp
xor
adc
push
popf
cdq
ins
push
adc
ss
mov
xchg
xchg
push
dec
(bad)
jg
lods
fdivrp
xchg
fisub
adc
popa
dec
clc
scas
pop
mov
mov
mov
add
mov
or
jns
and
add
outs
mov
(bad)
aas
ror
mov
(bad)
aad
data16
shl
cmp
pop
(bad)
iret
into
lock
int
test
lock
cmps
cmp
lods
int3
dec
push
hlt
in
aaa
dec
adc
test
jge
inc
mov
bound
mov
repnz
sar
das
and
mov
jle
mov
into
aam
mov
push
pop
jecxz
sahf
nop
fsubr
into
xchg
bound
in
sti
mov
mov
retf
mov
cmps
imul
mov
push
or
test
and
adc
jb
add
out
movs
test
ror
jbe
mov
jb
nop
push
inc
ficomp
and
dec
xor
mov
or
xchg
push
lock
xor
sbb
inc
je
shl
js
arpl
xchg
xor
push
or
cwde
inc
imul
mov
ret
mov
cmp
cs
mov
scas
cmps
scas
xchg
popa
movs
dec
shl
sbb
inc
call
in
and
adc
adc
jne
sti
stos
mov
push
jne
out
inc
inc
ins
movs
(bad)
in
cmc
push
mov
aas
aad
lods
comiss
jmp
pop
retf
cmp
(bad)
dec
bound
and
cli
test
(bad)
sbb
inc
bound
mov
sub
fcom
out
popa
dec
movs
and
ror
dec
xchg
dec
test
xchg
cmp
int
dec
addr16
mov
pop
outs
(bad)
sbb
into
push
pop
mov
and
mov
pop
(bad)
sub
outs
fwait
mov
call
ja
test
enter
dec
sbb
sbb
sbb
data16
jne
test
fimul
mov
sbb
jnp
rol
aas
scas
mov
loopne
aaa
sub
xchg
jmp
lock
aaa
lea
out
mov
jne
test
enter
sti
cmp
aad
push
dec
and
int3
ds
mov
adc
xchg
mov
add
mov
ds
loopne
repnz
addr16
dec
retf
cmps
call
popa
pop
movs
pusha
xchg
stos
add
ret
dec
cmp
push
and
out
inc
dec
inc
shl
push
mov
xor
xchg
test
cs
out
xchg
shl
(bad)
dec
mov
inc
clc
mov
pop
inc
jae
sub
das
icebp
push
pop
and
inc
mov
arpl
sub
add
jmp
xlat
repnz
xchg
pop
and
in
mov
jno
inc
lock
out
pop
outs
sbb
scas
in
and
push
lds
outs
jbe
mov
jmp
test
jb
jnp
add
addr16
leave
jb
(bad)
adc
in
push
cmp
sar
popa
leave
push
(bad)
mov
sahf
pusha
push
xor
stos
setge
ins
pushw
xor
xchg
scas
jecxz
jo
es
push
retf
adc
popf
mov
lahf
lock
inc
jmp
mov
inc
pop
les
and
cld
mov
test
inc
xor
xlat
bound
pop
xor
jg
sahf
mov
mov
mov
loopne
mov
dec
adc
loopne
mov
repnz
xchg
pop
sbb
inc
mov
add
adc
(bad)
jmp
je
mov
dec
add
fmul
xor
and
mov
aaa
test
sub
jmp
sbb
xor
xchg
xchg
or
inc
mov
add
push
stos
inc
pop
in
stos
(bad)
outs
sahf
arpl
nop
(bad)
aad
aam
and
or
mov
lds
pop
(bad)
in
hlt
mov
cmp
mov
lock
cmp
rcr
cmp
xchg
les
and
add
call
pusha
jle
ret
adc
cwde
pop
ja
(bad)
mov
mov
icebp
and
out
adc
xor
add
xor
push
fdivrp
bound
inc
adc
lds
sub
stos
adc
std
sub
jne
mov
jl
and
mov
pop
fistp
jne
sub
sbb
pushf
stc
sbb
sub
clc
push
xchg
aas
ror
shufps
test
sbb
jnp
mov
test
mov
nop
jnp
in
cmp
jnp
test
pop
push
mov
sti
ror
dec
mov
jle
adc
pop
clc
(bad)
aam
pop
pop
jo
cmp
jno
mov
scas
mov
stos
retf
std
popa
out
push
aam
shr
fucomp
xchg
adc
loope
add
lea
ins
dec
pop
mov
xchg
cmps
loope
ficomp
jp
push
jmp
neg
add
xchg
sub
das
test
adc
aas
xchg
movs
push
add
mov
mov
popf
or
(bad)
(bad)
pop
push
rcl
sbb
dec
aam
or
scas
xchg
icebp
add
dec
fisttp
daa
push
jmp
dec
enter
push
inc
cdq
jns
cwde
push
jecxz
dec
cmc
xor
ins
sti
or
stc
ficom
or
fld
mov
stos
mov
mov
jbe
pop
fadd
push
(bad)
push
mov
test
mov
fs
or
fs
ror
sbb
sar
lahf
pop
cli
ret
add
sbb
push
ss
hlt
cld
pop
sub
pop
sbb
shl
xor
xabort
int3
daa
cmp
sub
stos
pop
js
sbb
jge
imul
mov
jne
inc
sbb
and
out
retf
int
mov
sub
sbb
cmc
mov
mov
xlat
add
fsubr
push
mov
nop
pop
mov
sti
std
adc
mov
pop
fsubr
retf
and
fs
ret
test
in
mov
stos
in
lahf
ins
pop
xchg
adc
push
jg
jl
mov
out
test
shl
pusha
ins
mov
jno
or
(bad)
add
scas
xchg
sub
dec
adc
sub
lahf
enter
data16
icebp
les
cmp
cmp
or
jge
pop
je
pop
(bad)
add
in
xchg
stos
iret
sti
and
ret
or
add
test
push
ins
aad
in
push
sub
iret
jecxz
jg
pop
sbb
lahf
aas
shr
iret
fstp
retf
fisttp
retf
mov
call
sbb
or
mov
out
dec
inc
or
pop
rdtsc
and
daa
adc
mov
pop
inc
test
push
dec
xchg
and
push
sbb
ins
jl
dec
(bad)
test
dec
push
fst
or
sbb
jge
push
add
inc
xor
or
cs
mov
test
jnp
fbld
cs
mov
js
or
inc
pop
xlat
lock
out
(bad)
mov
push
lahf
ja
cmp
add
and
loopne
push
outs
jle
pop
inc
dec
scas
call
or
gs
jecxz
leave
mov
mov
ins
ins
leave
into
or
cwde
pop
mov
or
add
pop
cmc
or
iret
scas
(bad)
icebp
add
loope
in
or
imul
ss
pop
dec
xor
cmps
repnz
retf
mov
pushf
sbb
fsub
(bad)
cmp
jle
dec
test
pop
push
push
push
in
or
push
push
cdq
into
dec
pop
pop
sahf
outs
dec
jp
test
cs
sub
popf
dec
sbb
xor
mov
out
popa
cmp
fst
and
fs
aas
mov
in
jg
or
test
cmps
mov
loop
clc
or
inc
jne
pop
outs
daa
xchg
fcomp
mov
(bad)
lods
push
test
push
cmp
inc
ins
jecxz
mov
xchg
xor
gs
arpl
add
inc
ins
push
and
retf
popa
out
loope
mov
test
dec
out
mov
icebp
outs
int3
jmp
daa
cmp
out
scas
push
xlat
shl
loopne
shl
or
pop
xchg
push
and
ss
cld
sbb
ins
stos
in
jp
dec
cld
movs
inc
movs
push
cmp
fld
jmp
mov
mov
mov
pusha
cmp
mov
adc
sar
arpl
xchg
sub
ins
pop
mov
test
mov
iret
mov
xor
test
sti
(bad)
dec
cld
les
loop
rdmsr
dec
loopne
fist
inc
pop
xor
jbe
jecxz
rol
dec
pop
xor
and
inc
iret
(bad)
cmp
sahf
call
loope
push
push
lea
push
mov
xchg
test
jae
push
ret
pushf
shl
(bad)
xor
add
bound
sub
inc
adc
in
outs
xchg
push
fdiv
push
cmps
jp
mov
dec
in
rcl
shr
ss
jno
inc
xor
cdq
and
test
data16
dec
sub
mov
in
xchg
inc
xor
scas
add
inc
push
adc
imul
test
cmp
cmp
mov
ret
das
add
dec
lahf
data16
rol
lea
xchg
fprem1
ja
out
data16
mov
xor
and
jg
mov
cmp
jle
div
lea
ss
enter
clc
sbb
adc
mov
mov
ror
bound
push
fcmovnu
push
jle
pop
xchg
ds
sub
cs
cmp
dec
push
daa
movs
scas
(bad)
retf
jmp
mov
sbb
(bad)
aam
out
add
inc
fs
fcomi
push
push
jl
push
scas
mov
push
repnz
sbb
loope
mov
mov
cmp
iret
jl
(bad)
xchg
xor
jmp
jbe
pop
outs
jge
stos
sub
mov
das
sub
test
dec
(bad)
adc
loopne
mov
add
aaa
xchg
mov
mov
mov
clc
(bad)
xor
xor
or
lds
mov
add
add
cmp
mov
sub
inc
mov
adc
je
mov
jno
cmps
jp
aaa
dec
into
in
stos
stc
xchg
shr
or
cld
jae
pushf
mov
out
xchg
pop
outs
pop
popa
test
cmps
xchg
sbb
and
mov
inc
outs
cdq
mov
inc
inc
(bad)
xchg
out
fisubr
movs
jbe
xchg
mov
jns
pop
xchg
mov
ret
leave
das
pop
dec
cmp
pop
jne
movs
lds
outs
movntq
out
aas
inc
inc
outs
xchg
mov
xor
ja
(bad)
cmp
ds
into
sbb
jne
repnz
std
scas
push
das
out
out
pmuludq
jp
arpl
retf
and
fisub
rcl
retf
test
mov
pop
fidiv
push
movhps
cmp
mov
and
pop
pusha
sbb
jg
dec
sub
ja
adc
not
imul
or
push
ficom
icebp
call
sbb
mov
stos
pushf
inc
pop
cwde
out
jne
pop
lods
adc
push
jae
mov
or
mov
in
aaa
mov
mov
je
test
jle
and
aaa
ror
mov
adc
sbb
ds
dec
shr
pop
or
ds
push
mov
jbe
icebp
iret
jg
inc
int3
push
push
retf
int3
int
mov
push
lods
in
call
mov
aad
cmps
push
sub
xor
fcomp
test
lahf
test
sbb
repz
stc
fmul
pop
pop
aaa
add
sahf
ins
scas
outs
inc
sub
in
std
movs
add
sub
and
cmc
bound
inc
mov
inc
hlt
jbe
mov
or
sahf
cmp
xor
cmp
cmp
or
mov
imul
pop
(bad)
test
fwait
cli
retf
pop
and
call
gs
push
mov
iret
sahf
or
dec
and
test
xchg
push
push
mov
cdq
pop
sub
int
push
in
shl
push
das
popf
mov
ret
mov
es
mov
data16
push
call
jmp
clc
cmp
lods
or
(bad)
sti
mov
adc
mov
shl
jg
pop
xchg
pavgb
xchg
mov
data16
repnz
aaa
and
jbe
push
lea
and
pop
sub
mov
(bad)
jo
mov
ins
inc
call
or
std
mov
inc
lea
adc
cli
sbb
jl
in
int3
pop
pop
or
push
jge
dec
sub
mov
fwait
xor
popf
xor
mov
loopne
adc
lods
cmp
or
mov
dec
jg
sub
shl
stos
pop
outs
jb
cmp
call
cmps
mov
pop
and
sub
mov
movs
jb
cmp
sbb
push
pop
pop
sbb
int3
xchg
cmp
and
jecxz
sar
ss
mov
xor
sub
popf
fst
mov
sbb
jle
loope
ret
ret
sub
sahf
fisubr
dec
retf
(bad)
cmp
jne
mov
pop
mov
push
xchg
stos
adc
les
jmp
sub
push
movs
int
adc
dec
adc
fsubr
push
inc
ins
popf
xchg
mov
dec
mov
pop
(bad)
call
sub
cdq
iret
sub
jno
xor
repnz
in
test
aam
ja
sub
sub
mov
fidivr
js
sbb
sub
cs
ucomiss
cmp
lock
scas
mov
sub
ja
ficomp
jp
xchg
int3
inc
xchg
popf
sub
and
call
dec
int
push
xchg
cld
test
xor
cmp
adc
stc
adc
test
mov
mov
mov
mov
inc
xchg
sub
inc
sahf
sbb
cli
mov
cmc
push
scas
jo
(bad)
cwde
jecxz
xchg
and
dec
cwde
stc
pop
jns
push
cmp
(bad)
add
rcr
daa
das
sub
int
dec
es
pop
jmp
(bad)
fldcw
stos
ins
jle
scas
adc
aad
adc
icebp
stos
xrelease
cdq
iret
scas
cmp
add
adc
popf
sti
retf
mov
movs
xor
inc
cmp
mov
jae
xchg
cmp
out
inc
xchg
ror
jbe
push
adc
fbld
ret
stc
das
popf
imul
cwde
sbb
iret
es
add
fucom
scas
enterw
adc
mov
daa
xchg
fiadd
loop
xor
int
lahf
fld
imul
add
push
ja
push
hlt
std
test
and
push
not
movaps
cmps
cwde
int3
add
cli
xlat
and
sar
shl
jbe
popf
jmp
ss
pop
cmp
idiv
loop
jne
daa
xor
rcr
neg
xchg
inc
xchg
mov
sbb
mul
mov
in
inc
out
mov
and
sti
lds
xchg
out
lea
push
xor
cs
push
fwait
in
mov
in
xchg
imul
dec
lea
or
mov
daa
push
inc
sub
in
repz
test
or
inc
pushf
fs
js
arpl
imul
jmp
xchg
mov
pop
shl
push
mov
retf
mov
std
cs
xlat
js
mov
test
xor
xor
cdq
nop
int
mov
push
cmp
int3
(bad)
xchg
es
cmps
arpl
add
imul
(bad)
sbb
inc
ror
(bad)
fnsave
mov
ror
arpl
and
xor
fs
pop
into
into
add
cld
ror
(bad)
jmp
add
mov
xor
and
stos
dec
(bad)
mov
call
push
in
imul
retf
cmp
sti
dec
(bad)
push
sub
shr
inc
dec
push
dec
out
mov
bound
aas
stos
jmp
aaa
rol
mov
adc
cmp
out
or
xchg
pop
inc
sub
ss
sbb
(bad)
ror
std
sbb
pushf
mov
repz
sub
mov
dec
popf
stc
xor
es
push
add
imul
loopne
cdq
loop
and
pop
mov
(bad)
sub
push
sub
std
and
dec
clc
cli
ret
and
aas
or
mov
inc
fsubr
arpl
fidivr
xchg
in
xchg
lods
ret
(bad)
sbb
jp
cmp
mov
(bad)
aad
pop
add
test
mov
(bad)
out
and
mov
rol
xchg
mov
or
jno
in
pop
mov
idiv
inc
xchg
call
mov
shl
es
push
mul
in
mov
pop
mov
test
loopne
add
push
scas
lods
inc
mov
dec
cld
xor
jae
ja
outs
xchg
mov
mov
scas
xchg
add
sub
int
add
into
aad
xchg
pop
mov
cmc
int
js
and
xchg
mov
xor
inc
je
adc
(bad)
dec
mov
sbb
sbb
sbb
sar
fs
xchg
daa
leave
dec
or
push
xor
xor
enter
cli
test
mov
xchg
push
dec
es
jmp
sub
das
mov
(bad)
adc
lods
iret
pop
pop
xchg
sub
pop
mov
std
jae
add
pop
fild
push
mov
(bad)
arpl
or
push
outs
aam
pop
fcomp
aad
cmps
arpl
call
xor
fsubr
arpl
xor
add
xor
cmp
mov
push
cwde
adc
(bad)
cs
lock
cmps
in
xchg
lock
iret
cld
cdq
js
cmp
in
mov
(bad)
pop
test
clc
cli
scas
out
dec
pop
mov
adc
repz
add
mov
cdq
dec
push
daa
popa
cmps
and
(bad)
std
iret
ds
sbb
or
daa
inc
icebp
hlt
outs
and
sbb
ret
ror
push
push
and
dec
add
int3
bnd
loopne
test
inc
and
inc
shl
or
xor
xor
retf
xor
jb
gs
das
lea
mov
xchg
sahf
(bad)
inc
sbb
sbb
pop
push
faddp
aam
movs
setle
ins
push
imul
lods
sub
mov
jne
loope
test
inc
das
cmp
mov
ins
sbb
jecxz
nop
addr16
xchg
mov
jno
xor
and
retf
xchg
(bad)
and
jmp
mov
pop
(bad)
idiv
pop
sub
les
fadd
pusha
mov
mov
and
and
mov
jbe
mov
jl
jnp
push
jo
jbe
shl
jmp
dec
retf
(bad)
leave
lds
arpl
outs
mov
fnstsw
jp
sub
cmp
and
loop
es
xchg
mov
xor
add
sbb
(bad)
and
sub
add
int3
ror
out
shl
sbb
aad
imul
ins
out
add
xor
bound
scas
and
dec
inc
jge
repz
addr16
fistp
cmp
sbb
cmp
xor
je
ds
imul
in
stos
or
cmp
test
cs
in
mov
aad
fiadd
mul
nop
jl
imul
push
ins
daa
gs
dec
xor
repz
lahf
jae
(bad)
sar
and
ficomp
mov
arpl
pushf
push
push
pop
mov
xor
mov
call
sbb
xchg
mov
popf
lods
loop
and
std
push
pop
arpl
fwait
in
arpl
mov
mov
xor
retf
sub
pop
mov
loope
into
(bad)
adc
xchg
(bad)
mov
xchg
mov
stc
xor
jmp
dec
daa
popf
mov
xor
sub
xchg
movs
adc
mov
pop
into
sti
sbb
sbb
in
add
fld
outs
adc
mov
loope
mov
mov
push
and
pop
xor
and
arpl
cmps
js
add
fucomip
xor
sbb
xchg
xchg
jl
sbb
into
lods
out
stc
inc
adc
push
add
movs
cmp
push
and
sub
adc
in
push
aam
addr16
les
xor
cmp
xor
sar
inc
pop
mul
jle
adc
sbb
xchg
les
call
sub
in
sbb
ja
inc
sbb
dec
mov
jge
fstp
push
mul
out
mov
dec
(bad)
and
sbb
jne
jae
push
repz
push
xchg
or
nop
cmc
mov
or
test
test
mov
inc
movs
add
jecxz
cdq
jne
dec
adc
jp
xchg
fidivr
mov
cmp
(bad)
sub
int3
mov
pop
mov
mul
call
test
es
mov
aas
jg
popf
sbb
adc
xchg
dec
dec
popa
cmp
sbb
sub
mov
sahf
push
mul
ja
inc
sahf
mov
div
adc
adc
dec
nop
bsf
bound
adc
jmp
lods
mov
dec
sub
add
add
push
int
je
std
inc
sub
jne
aam
mov
icebp
cli
mov
rcl
inc
or
cli
push
nop
add
out
pop
jns
hlt
xchg
adc
out
lods
sub
arpl
mov
jns
out
stc
jmp
lds
hlt
pushf
sbb
addr16
test
pusha
fdiv
shl
jmp
inc
stc
movs
xchg
stos
push
xchg
stos
mov
inc
(bad)
dec
mov
jbe
shl
pop
pop
cli
push
sbb
jmp
test
rcl
add
int3
cmp
into
jmp
xor
jl
lea
sub
jno
mov
push
or
jle
jmp
daa
push
jl
fsubr
(bad)
mov
push
mov
mov
pop
xchg
rcl
out
call
sahf
add
cmp
hlt
jle
fdivr
jne
push
adc
dec
je
pop
mov
mov
jae
mov
dec
fnstsw
sbb
pop
scas
jge
add
cmp
inc
call
int3
xchg
push
into
xchg
dec
cmp
pop
push
mov
sub
into
addr16
dec
or
pop
and
sbb
popf
jecxz
mov
in
push
jmp
push
dec
or
daa
mov
push
inc
(bad)
jge
jp
sbb
ins
test
lods
pop
leave
add
pop
fild
sar
xchg
sbb
mov
and
dec
push
mov
cmps
popf
in
mov
mov
(bad)
lahf
pop
sti
add
xor
imul
cld
popa
pop
xlat
mov
mov
push
mov
jp
dec
out
movs
call
movs
or
pop
mov
mov
in
(bad)
mov
and
mov
sub
ror
xchg
xchg
xor
cmp
fild
aas
cdq
and
or
pop
pop
lea
and
pop
lods
pop
repz
or
and
sub
out
inc
sub
mov
push
repz
add
popf
lahf
aam
sbb
sbb
pop
xor
mov
jecxz
imul
mov
popf
cdq
dec
pop
mov
loope
push
cmp
cmp
sub
pop
or
ficom
dec
sbb
jae
xchg
pop
mov
adc
popa
in
gs
xor
aas
push
pop
call
xor
fimul
movs
pusha
daa
leave
mov
shl
xchg
xlat
push
mov
and
jnp
movs
dec
jl
dec
mov
mov
cdq
inc
outs
mov
mov
push
pop
in
xchg
das
mov
fisttp
stos
repnz
int3
nop
jb
aad
ret
mov
fnstenv
(bad)
adc
in
pop
imul
and
popf
retf
pusha
mov
sub
adc
cli
xlat
dec
sub
inc
test
pop
dec
arpl
(bad)
ins
jae
stos
mov
sbb
std
sub
fisttp
fist
jns
sub
lock
cmp
and
pop
xor
call
jp
repnz
hlt
and
sub
inc
cs
pop
mov
retf
fcomip
push
mov
or
jbe
mov
xchg
push
sahf
cmp
fs
std
cld
jg
mov
jns
inc
xchg
cmp
retf
(bad)
rol
jmp
mov
outs
mov
pop
xchg
mov
out
(bad)
jmp
xor
dec
xchg
push
pop
push
cwde
sbb
or
adc
outs
mov
imul
inc
je
push
jo
jmp
loope
jmp
xchg
add
xchg
stc
xchg
jnp
inc
dec
pop
aaa
(bad)
mov
out
dec
pop
xchg
iret
loope
xor
mov
add
outs
repz
(bad)
xor
mov
repz
fdivp
mov
leave
(bad)
sbb
mov
bound
and
les
and
add
aam
dec
xchg
bound
mov
mov
jle
jno
mov
and
shr
mov
fs
fild
sbb
fwait
aaa
(bad)
dec
nop
push
cmp
jb
add
scas
jnp
lahf
fcomp
or
cmp
inc
repnz
int3
icebp
pop
inc
lds
sbb
xor
and
jb
jge
stos
clc
inc
fld
test
mov
ja
and
pop
(bad)
pop
add
int
mov
push
inc
(bad)
mov
fs
push
imul
iret
mov
jnp
sub
mov
push
xchg
add
cmp
pop
pop
lock
jbe
mov
sbb
mov
imul
pop
and
fwait
mov
rcr
and
lods
add
xor
xor
and
jmp
leave
pop
cmp
mov
es
pop
call
jmp
call
icebp
or
mov
push
pop
mov
mov
push
movs
pop
call
mov
jg
popf
or
mov
pop
fucomi
cmp
es
lahf
add
cs
inc
jmp
scas
jmp
hlt
inc
mov
and
pusha
in
cmp
inc
outs
inc
pushf
sub
jne
jp
sbb
iret
(bad)
jg
and
loopne
sbb
std
mul
cmp
jae
sub
ret
jo
mov
cmp
fld
ret
je
sbb
rol
dec
loope
xor
(bad)
sti
leave
(bad)
dec
rcl
lea
les
into
dec
xor
sbb
jne
mov
pusha
imul
scas
(bad)
push
dec
mov
fnstcw
mov
sbb
mov
add
inc
call
ds
sub
jmp
sahf
cmp
push
(bad)
jb
push
aad
dec
ins
imul
inc
xor
test
imul
mov
and
mov
ficomp
mov
add
and
stos
xchg
sub
dec
out
xor
and
jno
ins
mov
mov
jbe
call
xor
call
sbb
int3
shl
jo
cmps
mov
rcr
and
sbb
mov
enter
jne
xchg
sub
in
sbb
or
inc
push
xor
dec
xor
push
mov
pop
jge
jmp
sub
push
xor
adc
js
out
mov
lea
movs
pusha
jle
sub
cmps
pop
jnp
jns
add
mov
sbb
dec
inc
add
sbb
mov
iret
mov
add
mov
aam
loope
fisub
mov
xor
gs
(bad)
adc
leave
(bad)
xor
(bad)
mov
inc
int3
jne
xchg
push
and
stos
(bad)
xor
aad
imul
(bad)
imul
(bad)
mov
push
xor
test
add
ret
test
dec
cmc
pop
rcl
bound
mov
mov
outs
ret
in
es
xchg
jbe
push
test
mov
xchg
mul
popf
pop
add
and
inc
lods
jle
cmp
fmul
sbb
sbb
fld
sub
loop
(bad)
dec
je
inc
mov
or
(bad)
(bad)
pop
jge
imul
lods
cmp
das
retf
(bad)
cmc
pushf
cmp
and
pop
adc
ins
and
lock
aam
mov
inc
div
popf
out
out
stos
fcomp
bswap
cmp
mov
fcmovne
lea
test
mov
rcr
gs
hlt
data16
sbb
mov
int
fmul
adc
xor
inc
ja
xor
ret
xor
mov
pop
pop
lods
clc
cs
push
aas
mov
imul
mov
repnz
(bad)
and
aaa
xlat
lea
adc
rol
pusha
jge
inc
push
adc
test
jne
bound
pop
cmps
retf
mov
pop
cmp
mov
je
daa
adc
ss
(bad)
enter
lahf
int3
jge
leave
and
mov
inc
jle
clc
push
call
push
sbb
xlat
jmp
imul
jbe
les
test
xor
test
push
in
mov
popf
not
fcmovb
ror
div
ror
in
ret
pop
mov
or
rol
cs
outs
lahf
rcl
mov
adc
in
rcr
outs
outs
or
mov
push
add
sub
setbe
mov
sbb
inc
test
xor
ja
out
aas
inc
sbb
fs
mov
into
add
das
js
mov
pop
inc
push
enter
sbb
mov
aad
pop
jmp
(bad)
shr
xchg
or
out
push
dec
retf
shr
pop
push
push
test
xchg
push
sub
mov
xchg
mov
pop
push
inc
inc
(bad)
mov
xchg
jl
xor
movs
and
adc
add
out
(bad)
movs
js
lea
in
(bad)
icebp
mov
fistp
mov
sub
cmp
pop
mov
pop
rep
mov
iret
shr
js
loopne
fcom
adc
push
lahf
inc
push
out
mov
ds
jecxz
inc
fisubr
xchg
mov
and
bound
shl
(bad)
imul
in
push
dec
inc
mov
inc
pop
cmp
call
sub
cmps
push
adc
int
ins
cs
in
aam
in
mov
sub
adc
ja
sar
sbb
xor
gs
or
xchg
gs
and
push
outs
cmps
cmp
or
xchg
mov
sbb
cdq
pop
mov
pop
sbb
add
lds
pop
mov
ret
cmc
rcr
push
pusha
dec
sbb
(bad)
(bad)
aad
movs
xchg
pop
sbb
mov
sbb
jmp
clc
mov
mov
or
sub
xchg
int
retf
sbb
xchg
xor
enter
nop
pop
in
leave
cmp
xchg
inc
(bad)
cmc
xchg
adc
adc
popa
pop
inc
ror
cmps
mov
cmc
mov
push
push
xor
jle
ss
call
popa
repz
add
lea
outs
push
push
cld
repz
repz
sbb
fadd
retf
movs
jmp
out
or
sub
adc
in
hlt
pop
in
mov
(bad)
pop
cmp
dec
mov
cmps
cdq
sahf
(bad)
mov
ins
sbb
mov
cmps
push
out
hlt
dec
mov
je
jo
sbb
push
fisubr
mov
call
cdq
sub
xchg
das
or
and
lods
addr16
push
in
movs
test
push
xlat
and
mov
stos
cmp
popf
pop
push
xor
test
push
or
adc
dec
lahf
adc
mov
pop
test
call
pushf
je
pop
inc
push
adc
mov
cmp
retf
mov
adc
call
dec
scas
inc
and
pop
es
data16
pop
add
sbb
pop
pop
inc
ficomp
ss
or
mov
mov
jl
dec
mov
pop
repnz
ss
jne
sub
lea
out
sub
mov
fwait
xor
push
inc
stos
sbb
dec
mov
adc
jne
push
retf
cmp
lods
inc
or
arpl
(bad)
aaa
pop
cmp
mov
(bad)
lahf
fsubr
or
cli
jae
adc
ret
add
imul
gs
sbb
gs
mov
retf
push
in
ins
and
jecxz
push
mov
jmp
mov
or
cli
xchg
jb
sbb
sbb
and
arpl
and
lds
das
add
inc
inc
daa
xchg
bound
scas
test
pop
cli
xor
(bad)
jno
pop
sbb
out
(bad)
mov
je
mov
adc
push
mov
call
mov
(bad)
mov
xchg
mov
std
sbb
push
rol
test
jnp
das
inc
popf
mov
sub
mov
or
lods
loop
shl
icebp
dec
(bad)
xor
adc
jmp
mov
out
test
imul
pop
pop
cmp
inc
inc
and
push
cld
sub
xor
or
pop
add
mov
pop
aas
aam
sbb
cmps
sti
push
jg
or
cmp
add
retf
adc
mov
mov
cmps
call
pop
and
retf
scas
xor
dec
and
push
fcmovnbe
xchg
cs
and
call
xchg
clc
outs
pop
jb
iret
pop
sbb
mov
enter
lahf
aam
inc
fdiv
pop
in
call
mov
fs
inc
cmp
stos
ss
xchg
xchg
mov
addr16
add
gs
scas
aam
pushf
pop
call
add
sbb
mov
repnz
scas
pop
mov
stos
mov
fidivr
xchg
pop
and
retf
in
call
dec
jb
xchg
add
push
add
outs
jbe
sub
inc
sbb
mov
shl
mov
(bad)
sbb
out
jmp
or
std
fcomip
icebp
inc
out
push
in
dec
pop
jo
mov
mov
leave
leave
dec
add
jmp
(bad)
ror
mov
dec
and
imul
pop
xchg
fs
jne
sbb
ins
shl
test
mov
aas
(bad)
xor
jmp
enter
(bad)
inc
lahf
(bad)
jo
mov
sub
sub
sahf
cmp
mov
clc
sub
cli
je
daa
retf
mov
dec
jae
push
icebp
dec
dec
outs
xor
mov
cmps
inc
cmp
jnp
repz
in
movs
sbb
jbe
adc
pop
rol
mov
xor
das
(bad)
mov
mov
(bad)
pop
inc
or
sbb
ja
xchg
mov
data16
jg
dec
fistp
mov
jle
jg
dec
xchg
mov
add
icebp
bnd
clc
retf
jp
fbld
cdq
jb
inc
mov
sub
in
hlt
xlat
in
jmp
fs
sub
sub
repz
outs
jo
cmp
inc
dec
mov
(bad)
mov
xor
mov
retf
xchg
aaa
fs
adc
jnp
mov
sbb
cmc
call
(bad)
adc
sub
jae
daa
cmp
mov
retf
fimul
(bad)
jmp
in
in
adc
push
mov
push
ret
push
pushf
and
pop
jle
push
sub
jne
outs
pop
repz
test
data16
push
inc
dec
hlt
cmp
xor
rcl
idiv
dec
pushf
inc
cmp
sbb
cmp
cmp
sbb
or
add
fisub
jecxz
daa
jns
mov
ret
sub
pop
xor
cs
mov
es
add
test
jg
cmps
mov
fist
fcom
jge
xchg
imul
and
push
ret
data16
add
cmp
cmp
scas
jnp
cld
sar
inc
stos
je
ja
daa
add
dec
fisttp
jle
jno
pop
mov
cmps
ds
or
in
pop
push
outs
aad
sti
movs
jmp
sub
movs
out
cmp
sub
jo
xor
inc
div
adc
inc
adc
popf
lods
(bad)
push
dec
jae
jbe
dec
cmp
(bad)
ds
mov
div
into
and
mov
sub
(bad)
jbe
sbb
adc
call
push
mov
xchg
and
xor
mov
sar
lock
or
jl
dec
xchg
adc
xor
xor
aas
inc
je
push
push
fcomi
test
jno
mov
lea
js
stc
push
xchg
call
shr
(bad)
stos
jo
adc
pop
repnz
fld
call
clc
cmp
mov
mov
or
jge
(bad)
cli
xor
jecxz
mov
xor
daa
mov
add
xchg
aas
push
(bad)
cdq
fsubrp
sbb
xchg
je
mov
inc
pop
mov
es
(bad)
dec
mov
inc
es
(bad)
pushf
aad
xor
mov
adc
push
dec
das
mov
jl
adc
adc
and
inc
mov
cmp
rol
out
xor
mov
outs
pop
inc
mov
in
out
aad
lods
neg
icebp
sbb
cmp
ja
push
cmc
data16
jno
adc
xor
adc
jb
push
leave
mov
cmps
loopne
sbb
inc
push
data16
js
push
movs
jmp
sar
and
xor
xchg
pop
or
cli
data16
xchg
std
scas
outs
je
xchg
mov
pop
cmps
pop
std
mov
dec
jne
movs
cmps
or
fistp
jns
iret
mov
adc
jb
out
lods
jbe
mov
dec
int3
popf
mov
dec
inc
sub
imul
mov
(bad)
imul
sub
ds
xchg
push
in
mov
jae
add
lods
xchg
mov
xchg
imul
loop
(bad)
lock
dec
sbb
ror
sbb
push
rcl
aaa
(bad)
and
adc
(bad)
adc
pusha
push
push
add
mov
xchg
inc
jmp
push
leave
adc
outs
dec
outs
(bad)
leave
cmps
ins
mov
sbb
lods
ficomp
cmps
xchg
clc
fild
pop
jg
aad
stos
popf
jecxz
push
xchg
cmc
cli
out
in
shl
idiv
addr16
cmps
mov
mov
cmc
mov
mov
rcl
add
jl
(bad)
sbb
rol
mov
inc
sbb
or
pop
cmps
sub
or
xor
mov
pop
lods
sub
mov
inc
cmp
adc
stc
cmp
aad
sub
lods
hlt
std
cmp
test
xor
out
cmp
icebp
sbb
push
test
ret
ret
jae
push
mov
inc
or
mov
cmp
mov
test
out
xor
(bad)
in
scas
inc
mov
jne
ret
jnp
dec
jecxz
and
cmp
add
cli
mov
out
pushf
arpl
(bad)
push
es
add
pop
push
push
jb
jnp
dec
stos
or
mov
sub
pop
mov
stos
add
fisttp
out
out
sub
jne
or
ror
wbinvd
movs
ret
or
pop
outs
shl
and
cdq
ja
inc
push
and
loopne
(bad)
(bad)
stc
daa
movs
inc
fs
jne
add
lods
mov
aad
das
addr16
rcr
enter
jmp
in
lods
in
(bad)
and
lock
or
ins
repnz
pop
rol
bound
loope
iret
nop
dec
(bad)
fisttp
inc
pop
xor
xor
movs
cdq
mov
iret
mov
sbb
push
sti
mov
lods
ss
test
xlat
jbe
mov
cld
pop
inc
int
in
lea
push
add
sbb
cmps
mov
or
hlt
sahf
pusha
mov
rcl
jmp
je
xor
dec
cld
add
push
sub
iret
std
cwde
push
and
pop
pop
js
mov
pop
pusha
inc
jmp
pop
mov
mov
dec
outs
daa
pop
inc
mov
daa
lahf
jnp
mov
and
into
pop
push
retf
pop
or
pop
pusha
mov
dec
push
inc
push
enter
aam
sub
xchg
sbb
fsub
xor
int
adc
cs
enter
mov
inc
jns
jbe
sub
repnz
test
xchg
mov
push
jb
xchg
xchg
test
lock
xchg
shr
xchg
repz
enter
call
and
in
cmp
dec
sbb
ins
ja
push
xlat
(bad)
adc
idiv
stos
jns
pop
mov
inc
mul
push
pmullw
leave
sbb
jecxz
(bad)
xchg
pop
sbb
and
pop
push
inc
mov
ja
jbe
mov
mov
jns
stc
or
inc
and
add
cs
sti
dec
enter
mov
in
push
nop
out
sub
cmp
dec
retf
fcom
dec
push
mov
stos
dec
hlt
xchg
pop
sub
inc
xor
inc
cmp
push
adc
push
aad
movs
leave
adc
xchg
jns
out
les
cs
in
mov
mov
inc
mov
cmp
cmp
fld
jp
cdq
xchg
gs
push
call
fcomp
fwait
xchg
and
sub
adc
cmp
popa
(bad)
push
iret
jle
or
sub
push
sub
std
fs
inc
ret
jg
rcr
jb
add
sub
movs
nop
fild
xchg
pop
push
outs
es
mov
mov
inc
movs
or
nop
or
mov
ret
mov
inc
xlat
jmp
rcr
pusha
mov
out
mov
outs
xor
inc
or
das
das
add
aam
push
daa
int
jns
mov
pop
mov
dec
cmp
in
mov
dec
xchg
sub
and
mov
inc
push
addr16
fbstp
xchg
(bad)
popf
xchg
fisub
push
hlt
popf
int
loopne
pop
(bad)
mov
in
add
or
in
mov
xchg
pop
push
in
rcr
sbb
adc
lahf
mov
(bad)
mov
dec
or
loop
retf
jmp
ret
in
inc
cmc
lock
cmp
sbb
push
cli
jae
push
sbb
mov
inc
les
rol
push
pop
xchg
minps
mov
xchg
repnz
data16
mov
xor
cld
pop
xchg
stc
mov
fcmove
jae
mov
outs
xor
jmp
cmp
cmp
ds
ss
adc
inc
xchg
lods
xor
mov
xlat
and
rcr
and
ds
jecxz
enter
xor
pop
or
jbe
and
cmp
sbb
fisttp
dec
inc
mov
mov
jl
xchg
jg
retf
aaa
push
aas
adc
add
mov
imul
mov
stos
mov
pop
aas
fisub
cmps
jbe
(bad)
fcomp
(bad)
add
test
mov
mov
inc
xchg
xor
leave
ss
dec
ret
lea
xchg
rol
out
sub
addr16
mov
pop
daa
fbstp
fnstsw
add
mov
retf
mov
test
neg
mov
out
(bad)
xor
xchg
mov
mov
movs
cmps
mov
ds
mov
cmp
mov
adc
push
cmp
test
mov
and
in
daa
out
mov
iret
nop
jnp
push
push
adc
es
aaa
xchg
dec
mov
and
scas
iret
mov
add
arpl
out
cmps
cli
out
scas
ja
mov
cmp
adc
inc
(bad)
fnstcw
cli
call
sbb
retf
mov
fisttp
jae
and
xor
mov
or
push
mov
push
jae
and
mov
mov
and
mov
cwde
inc
sbb
or
dec
(bad)
xor
jns
dec
nop
popf
lds
enter
push
sahf
push
sub
out
cmp
inc
add
out
mov
pop
or
sub
push
xlat
dec
pop
fistp
adc
lock
mov
push
mov
retf
(bad)
fs
ja
xchg
pop
movs
mov
inc
arpl
(bad)
out
xor
test
cmp
jne
inc
sbb
mov
fld
mov
jno
retf
shr
jp
(bad)
std
mov
sbb
test
ins
sub
add
jl
mov
xor
adc
dec
sbb
mov
dec
xchg
mov
int3
push
icebp
inc
out
jns
pop
mov
sub
mov
push
rcr
inc
cmc
add
xchg
push
add
(bad)
sbb
mov
ret
dec
cmp
xor
repnz
and
in
aam
mov
sbb
rol
ror
repnz
ret
loope
mov
pop
lea
pushf
push
cmps
pop
and
sub
out
loope
mov
ins
test
and
arpl
push
mov
inc
mov
pminub
pop
idiv
in
inc
sbb
retf
clc
movs
div
xor
lock
mov
inc
mov
inc
fbstp
fcomp
xchg
push
mov
cmp
mov
fisttp
rol
add
mov
movs
test
xchg
xchg
(bad)
(bad)
sub
test
sbb
xchg
repnz
icebp
mov
mov
xchg
loop
in
pop
test
inc
mov
popf
ins
pop
inc
call
int3
sti
jmp
inc
rcl
xor
jae
das
pop
fdiv
pop
fsub
ins
stos
inc
xor
xor
sahf
fidiv
sbb
cmp
pop
sbb
adc
cmp
push
je
ins
(bad)
mov
icebp
xchg
test
ins
popa
jmp
outs
jno
pusha
push
popf
push
aam
ins
std
dec
outs
shl
mov
push
es
hlt
out
js
cmp
fsubr
movs
cmps
fcomp
mov
call
daa
out
movs
in
stos
ret
test
and
std
or
(bad)
fcmove
fadd
leave
mov
imul
pop
sub
mov
hlt
push
out
jmp
sbb
sub
jecxz
jle
cld
jae
push
pop
cmp
pop
pop
inc
lds
jne
add
pop
mov
stos
jmp
pop
dec
adc
sub
inc
or
inc
aas
push
sub
pop
sub
add
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
aas
inc
das
inc
cmp
dec
adc
clc
sub
push
jmp
imul
int
scas
dec
loop
shl
jmp
jmp
mov
out
cmp
pop
or
sbb
adc
jmp
mov
les
loope
cli
ins
mov
fcom
push
loopne
sbb
jmp
es
pop
add
or
mov
and
pop
pusha
imul
sahf
xor
pushf
push
inc
add
js
cdq
jae
loopne
cmps
aaa
test
and
push
sub
xor
cmc
cmp
lock
pop
pop
cld
sub
loop
and
sub
mov
imul
mul
lock
push
pop
xlat
mov
retf
stos
std
push
ror
mov
dec
and
push
inc
leave
pop
xor
push
inc
int
jecxz
mov
inc
adc
and
jl
mov
jae
bound
add
cmps
loopne
in
cmc
cmps
pop
je
inc
cdq
fs
push
and
xor
xor
outs
pop
and
inc
call
inc
imul
dec
pop
pop
repnz
xchg
les
rcl
retf
sahf
inc
aad
inc
fidivr
cmc
popf
cwde
dec
das
adc
mov
call
jne
adc
in
in
jmp
popf
mov
clc
push
and
pop
imul
shl
imul
cmp
sbb
xchg
jmp
cmc
xchg
les
in
pusha
jle
pop
ins
dec
dec
in
add
addr16
push
aas
pusha
cmp
sahf
fidivr
mov
out
pop
test
fstp
mov
fcomp
mov
push
sbb
test
cdq
sbb
jns
lahf
jl
cdq
cmp
mov
add
int
cmp
int3
xchg
lods
sub
mov
inc
rol
dec
fcom
xor
xor
mov
das
jge
jg
jp
jnp
push
jle
push
or
inc
xor
dec
sub
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
sbb
dec
sub
xor
ins
or
jbe
mov
mov
push
mov
inc
and
xchg
jle
mov
leave
jle
jp
adc
push
fild
aaa
aad
(bad)
retf
mov
jns
pop
sbb
pop
sahf
sbb
ins
stos
add
in
sbb
popa
sub
dec
mov
and
dec
and
mov
jns
push
push
xchg
push
mov
fsubr
or
adc
jge
sub
js
dec
std
sbb
sub
pop
out
push
into
cdq
pusha
mov
js
mov
xchg
mov
mov
fistp
cmp
pusha
(bad)
mov
jb
std
and
jne
or
stos
test
aaa
retf
mov
push
mov
mov
ins
add
adc
sub
inc
sub
mov
adc
mov
and
pop
pop
fs
inc
xchg
jno
arpl
dec
into
loopne
loop
(bad)
jae
push
pop
lods
test
es
xchg
jle
mov
mov
dec
and
fadd
sbb
sub
xor
mov
(bad)
pop
mov
push
mov
xor
mov
int3
mov
mov
add
pushf
lea
or
mov
leave
xor
mov
mov
sbb
jo
aam
in
dec
in
add
inc
pop
pop
xchg
mov
dec
hlt
ja
std
dec
mov
inc
into
ins
pushf
mov
or
je
inc
mov
and
xchg
mov
and
movs
xor
adc
in
mov
mov
adc
jne
ror
fcomip
or
jmp
(bad)
and
inc
inc
mov
xor
ret
dec
loope
dec
ret
retf
add
fwait
test
jbe
dec
outs
hlt
add
rcr
sbb
leave
inc
sbb
arpl
(bad)
jg
cmp
sub
test
les
out
cmc
xchg
call
mov
lock
xchg
into
xchg
xor
xchg
rcr
iret
test
jecxz
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jbe
dec
and
inc
add
xchg
in
inc
into
sub
adc
daa
add
or
retf
sub
jge
jp
or
hlt
pop
int
sahf
addr16
data16
cmp
adc
call
push
cmp
jge
dec
xchg
xchg
lea
or
or
data16
out
loopne
test
mov
(bad)
fild
sbb
aaa
leave
add
out
hlt
add
test
xchg
loope
(bad)
sub
int
sbb
push
(bad)
out
add
cmp
in
xor
adc
sub
iret
cmp
out
pop
aas
lock
pop
xor
xor
jmp
pop
fidivr
pop
or
ror
(bad)
shl
inc
mov
mov
(bad)
pop
sbb
adc
mov
pop
(bad)
xchg
cmc
add
dec
sub
add
dec
cs
dec
push
stc
mov
mov
cmp
push
cmps
scas
icebp
mov
popa
jl
add
gs
push
and
inc
aas
dec
dec
dec
xchg
ins
stos
mov
leave
stos
jae
outs
repz
xchg
cmp
movs
lock
push
sti
xor
add
jle
push
adc
mov
shl
out
xchg
in
dec
(bad)
in
xchg
outs
adc
call
add
and
and
arpl
loope
pop
xor
mov
or
lea
mov
push
ret
repz
ret
push
push
jne
ins
addr16
push
lahf
movs
cmps
das
adc
mov
cs
icebp
mov
jmp
jmp
mov
jl
sub
and
cmp
inc
or
push
xor
sub
psrld
retf
idiv
out
(bad)
fist
retf
movs
loop
xlat
lea
adc
push
sbb
test
mov
or
adc
sub
cmp
mov
mov
push
div
pop
out
das
cmps
movs
lods
and
add
aaa
aad
mov
mov
fsub
aam
cmc
(bad)
loopne
retf
mov
test
adc
inc
les
fldcw
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
or
mov
pop
fsubr
xor
cmc
aaa
and
xor
xchg
push
out
and
(bad)
sub
in
xor
adc
retf
and
jne
pop
mov
cmc
dec
mov
adc
xor
and
mov
(bad)
dec
stos
call
mov
fdiv
aaa
xor
(bad)
into
sti
sub
in
icebp
cmps
jmp
jno
and
inc
adc
adc
ins
or
push
pop
ins
pop
sub
lods
dec
sub
sar
jns
sbb
jge
xchg
movs
lahf
dec
out
cld
jl
imul
jp
es
hlt
sub
pop
loope
(bad)
pop
test
jne
lahf
mov
and
push
arpl
mov
movs
xchg
jp
call
dec
mov
pop
hlt
or
xchg
cld
cmp
mov
pop
jg
jae
sbb
xchg
ins
fiadd
in
and
push
inc
es
xor
push
test
add
vcvttsd2usi
rcr
cld
mov
pop
in
push
lods
mov
rcl
push
in
lods
mov
pop
and
push
cmc
stos
loop
nop
enter
imul
daa
sbb
mov
(bad)
mov
xor
jle
(bad)
push
sbb
push
or
sub
dec
aaa
jmp
adc
dec
aad
adc
xor
mov
add
div
mov
lea
jl
pusha
fs
outs
mov
lahf
pop
repz
mov
pusha
shr
lahf
lods
dec
jmp
shr
xor
push
icebp
cmp
ds
xor
inc
pop
cmp
outs
xor
lock
stc
push
popf
sbb
setl
jb
(bad)
call
jno
sahf
in
icebp
sub
lds
outs
xlat
imul
(bad)
mov
cmps
nop
mov
das
add
jbe
test
or
dec
out
pop
jecxz
(bad)
fisub
push
cmp
push
adc
jns
arpl
push
add
pop
xor
push
adc
or
bound
jns
pop
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
in
out
in
fild
out
lods
idiv
out
stc
call
retf
scas
fst
ret
mov
cmp
xchg
xchg
ins
add
ja
inc
loope
jmp
mov
inc
xchg
pusha
out
les
push
xlat
sub
dec
lods
inc
adc
mov
jbe
xchg
int3
cdq
(bad)
lods
pop
mov
jae
bound
push
xor
xchg
or
int
xlat
test
mov
stos
mov
fiadd
in
xor
pop
adc
pop
rcr
jae
push
dec
push
dec
sbb
xchg
fidivr
(bad)
or
sar
or
aas
cmp
daa
pop
mov
jecxz
mul
jnp
or
inc
xchg
daa
ret
jae
sbb
int
mov
sbb
and
dec
popf
es
jecxz
add
and
imul
mov
adc
int
jle
stc
xor
and
add
(bad)
adc
js
adc
test
mov
mov
pop
adc
jb
retf
pop
imul
leave
dec
mov
jmp
ja
sub
sub
shl
inc
pop
jl
xchg
es
jecxz
aam
sub
test
xchg
repz
jo
jb
sub
out
xor
idiv
inc
rcr
xor
push
les
inc
mov
adc
out
test
xor
scas
inc
mov
inc
mov
mov
mov
push
push
add
push
cmc
cld
push
repz
ret
pop
xor
mov
xchg
pop
jbe
inc
test
aad
retf
aas
fld
push
sub
jns
cmp
lds
xchg
repz
mov
jno
ss
div
(bad)
xor
xlat
or
adc
sub
pop
ret
sub
pop
fmul
adc
pop
movs
push
arpl
push
cmp
js
out
inc
mov
fdivr
dec
loope
inc
cli
ret
xchg
inc
repz
outs
sbb
xor
iret
jnp
icebp
dec
adc
mov
ja
sub
cmp
outs
add
retf
stos
call
mov
scas
cmc
mov
leave
lods
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
pop
popf
retf
xchg
call
into
mov
jmp
in
fst
xor
and
lock
sbb
cmp
jmp
sbb
shl
adc
cs
cs
sbb
les
les
aaa
ret
pop
hlt
dec
stos
jecxz
sar
retf
cmp
test
out
call
push
sahf
cmp
jg
ins
or
(bad)
xor
adc
pop
mov
mov
out
xchg
xchg
pop
pushf
cli
xchg
jmp
add
adc
(bad)
ss
add
(bad)
outs
test
sub
pop
mov
jns
cdq
xchg
jbe
mov
xchg
nop
jnp
xchg
push
lea
push
imul
cwde
or
mov
dec
mov
aad
imul
fsub
fimul
mov
ins
mov
sub
jmp
adc
add
or
xchg
push
stos
inc
sub
jl
ins
xor
fs
pop
ss
and
popa
das
pop
pop
adc
dec
or
add
dec
xor
enter
lods
push
bound
xchg
cmp
mov
shr
imul
sbb
xor
into
mov
out
xchg
addr16
cmp
repz
and
inc
mov
cwde
mov
stos
fdiv
enter
dec
xchg
cmps
or
jbe
push
(bad)
(bad)
mov
scas
nop
mov
enter
xchg
inc
arpl
cmp
fs
add
cmp
push
arpl
push
adc
inc
aaa
push
sub
and
add
stos
cmp
xor
or
aad
cld
fsubr
loope
sub
add
sbb
(bad)
dec
in
cwde
mov
adc
xlat
outs
(bad)
jne
in
arpl
ins
inc
rcl
fbstp
mov
ret
pop
and
mov
adc
inc
ds
sub
dec
adc
inc
pop
pop
pop
cmp
sbb
outs
or
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
jno
pusha
adc
inc
sub
push
adc
push
sub
sahf
jge
test
nop
push
scas
lea
(bad)
bound
push
lea
movs
mov
jmp
mov
int3
push
sbb
aam
ds
xor
xor
shr
sub
inc
and
cmp
or
gs
and
sub
and
cwde
in
mov
and
iret
pop
jmp
cmp
add
into
or
push
push
adc
push
add
das
mov
mov
je
mov
sub
cmps
jle
mov
mov
test
mov
in
adc
ins
lods
jge
adc
push
pop
inc
inc
and
cs
adc
mov
cmps
inc
fnstsw
mov
pop
mov
pop
nop
frstor
sbb
inc
and
add
and
sbb
dec
add
jg
pop
or
fidivr
loope
enter
mov
sbb
pop
inc
mov
mov
lods
fcom
xor
add
mov
xchg
lea
xchg
pop
xor
xor
hlt
push
jmp
cwde
addr16
cs
cmp
in
or
cmp
(bad)
bound
dec
enter
add
inc
add
mov
out
mov
test
add
cwde
cmps
mov
test
sub
pop
ins
cmc
js
nop
stos
xor
icebp
hlt
dec
push
mov
cmp
mov
std
pop
retf
loopne
mov
inc
adc
and
icebp
cwde
in
mov
xchg
fisubr
fstp
ds
sub
retf
retf
movs
int3
sub
clc
xchg
into
add
xchg
push
add
sbb
dec
sbb
ins
sbb
je
outs
sbb
jae
jp
and
push
sbb
jno
js
push
sbb
imul
outs
sbb
jno
je
jle
fs
cmp
sbb
je
outs
sbb
jno
jb
push
dec
sbb
outs
sbb
jnp
push
sbb
jl
imul
js
outs
sbb
jl
jno
outs
sbb
xor
outs
sbb
jno
jb
push
dec
sbb
outs
sbb
jnp
push
sbb
jl
imul
js
outs
sbb
cmp
sbb
imul
pop
sbb
jae
jp
push
sbb
jl
imul
js
outs
sbb
outs
sbb
and
imul
pop
sbb
jae
jp
push
sbb
jl
imul
js
outs
sbb
cmp
sbb
jno
jno
jb
push
push
sbb
jns
dec
sbb
jo
je
jae
jl
imul
jno
outs
sbb
xor
jno
jb
push
push
sbb
jns
dec
sbb
jo
je
jae
jl
imul
cmp
sbb
jl
outs
sbb
jne
js
jae
pop
sbb
je
jno
jl
jg
jno
js
and
push
sbb
imul
jne
js
jae
pop
sbb
je
jno
jl
jg
jno
js
and
cmp
sbb
jae
push
sbb
fs
push
sbb
push
jb
outs
sbb
imul
sbb
jno
js
and
jno
outs
sbb
xor
jae
push
sbb
fs
push
sbb
push
jb
outs
sbb
imul
sbb
jno
js
and
cmp
sbb
jno
js
dec
sbb
imul
and
cmp
sbb
dec
sbb
ins
sbb
push
sbb
js
pop
sbb
and
push
sbb
imul
push
sbb
js
pop
sbb
and
cmp
sbb
dec
sbb
imul
jae
push
sbb
js
and
jno
outs
sbb
xor
outs
sbb
outs
sbb
jae
push
sbb
js
and
cmp
sbb
jns
jno
js
dec
sbb
imul
and
cmp
sbb
jno
jb
push
dec
sbb
outs
sbb
jae
pop
sbb
jl
jae
jns
and
push
sbb
jno
jno
jb
push
dec
sbb
outs
sbb
jae
pop
sbb
jl
jae
jns
and
cmp
sbb
jl
jg
jno
js
jns
and
push
sbb
jae
jl
jg
jno
js
jns
and
cmp
sbb
jns
jns
js
jae
and
jno
outs
sbb
xor
jns
jns
js
jae
and
cmp
sbb
jae
push
sbb
fs
push
sbb
js
and
jno
outs
sbb
xor
jae
push
sbb
fs
push
sbb
js
and
cmp
sbb
jbe
js
dec
sbb
push
sbb
jno
outs
sbb
xor
jbe
js
dec
sbb
push
sbb
cmp
sbb
js
jle
push
sbb
dec
sbb
js
push
sbb
je
imul
dec
sbb
pop
sbb
jle
push
sbb
dec
sbb
js
push
sbb
je
imul
cmp
sbb
jb
outs
sbb
fs
and
outs
sbb
outs
sbb
fs
cmp
sbb
imul
outs
sbb
cmp
sbb
je
jb
jae
outs
sbb
jb
jae
imul
aas
sbb
imul
and
cmp
sbb
js
jle
and
cmp
sbb
pop
sbb
jo
jl
jae
jns
and
push
sbb
dec
sbb
push
sbb
xor
jo
jo
jl
jae
jns
and
cmp
sbb
gs
and
and
jle
imul
and
dec
sbb
jbe
and
outs
sbb
jb
push
sbb
sbb
popa
sbb
dec
sbb
pop
sbb
push
sbb
jno
jp
addr16
pop
sbb
jg
jl
addr16
push
sbb
ins
sbb
popa
sbb
sub
sbb
popa
sbb
sub
sbb
sub
sbb
sub
popa
sbb
jnp
je
jle
js
das
sbb
sub
gs
pop
sbb
pop
sbb
jl
popa
sbb
jo
je
jae
popa
sbb
sub
sbb
popa
sbb
sub
sbb
pop
sbb
dec
sbb
push
sbb
popa
sbb
sub
sbb
popa
sbb
sub
sbb
jg
pop
sbb
pop
sbb
popa
sbb
jl
jle
jo
ins
sbb
gs
pop
sbb
inc
sbb
dec
sbb
push
sbb
jg
pop
sbb
pop
sbb
sub
popa
sbb
sbb
adc
jo
jns
xor
js
sbb
sbb
jle
jne
jb
cmp
sbb
js
dec
sbb
jae
outs
sbb
outs
sbb
jb
jae
js
push
sbb
and
cmp
sbb
inc
sbb
pop
sbb
jns
js
jae
imul
outs
sbb
cmp
sbb
sbb
sbb
outs
sbb
ins
sbb
jl
imul
dec
sbb
dec
sbb
sbb
sbb
dec
sbb
inc
sbb
push
sbb
pop
sbb
push
sbb
sbb
sbb
jl
outs
sbb
xor
js
sbb
sbb
jl
imul
push
sbb
dec
sbb
jl
imul
cmp
sbb
cmp
push
aas
sbb
push
sbb
dec
sbb
pop
sbb
je
jle
outs
sbb
jb
jnp
imul
jns
jb
push
outs
sbb
push
sbb
imul
je
jb
jae
inc
sbb
jno
je
jle
je
js
outs
sbb
fs
js
jo
sbb
sbb
jno
js
push
sbb
sbb
fs
sbb
inc
sbb
dec
sbb
pop
sbb
inc
sbb
pop
sbb
dec
sbb
imul
inc
sbb
jno
je
jle
je
js
outs
sbb
je
jle
outs
sbb
jb
jnp
imul
jns
jb
push
outs
sbb
fs
js
jo
sbb
sbb
jg
jno
js
pop
sbb
sbb
push
sbb
inc
sbb
dec
sbb
push
sbb
dec
sbb
dec
sbb
jb
jnp
imul
inc
sbb
jle
outs
sbb
jb
jnp
imul
jns
jb
push
outs
sbb
push
sbb
imul
je
jb
jae
inc
sbb
jno
je
jle
je
js
outs
sbb
fs
js
jo
sbb
sbb
jg
jno
js
dec
sbb
jbe
push
sbb
sbb
push
cs
sbb
sbb
jnp
je
jno
js
sbb
sbb
js
gs
dec
sbb
pop
sbb
xor
js
sbb
sbb
jl
push
sbb
js
gs
outs
sbb
jne
jb
outs
sbb
js
gs
sub
jb
imul
xor
js
sbb
push
and
jg
je
js
jns
jno
jno
sbb
sbb
outs
sbb
outs
sbb
pop
sbb
jns
jno
js
outs
sbb
dec
sbb
dec
sbb
sbb
sbb
pop
sbb
ds
pop
sbb
pop
sbb
ds
pop
sbb
ds
pop
sbb
pop
sbb
ds
pop
sbb
ds
aas
sbb
pusha
sbb
cmp
xchg
mov
pop
xchg
push
jbe
xchg
jmp
mov
dec
add
std
xchg
adc
or
pop
daa
push
cmp
sbb
movups
sbb
syscall
sbb
adc
sbb
sbb
syscall
sbb
adc
or
sbb
syscall
sbb
or
sbb
sbb
syscall
sbb
or
adc
adc
adc
adc
cmp
cmp
sbb
sbb
sbb
add
sbb
add
cmp
sbb
sbb
sbb
pop
sbb
push
sbb
sbb
sbb
push
add
or
sbb
sbb
sbb
pop
pop
adc
add
adc
xor
add
sbb
add
or
pop
add
or
adc
sbb
add
adc
add
sbb
sbb
sbb
sbb
adc
add
pop
pop
sbb
cmp
adc
sbb
cmp
or
js
ins
jno
imul
sub
sbb
syscall
sbb
adc
or
add
or
add
or
add
sbb
adc
sbb
adc
or
sbb
or
cmp
sbb
adc
xor
jno
jle
imul
sbb
dec
js
dec
js
imul
sbb
push
push
xor
jo
push
sbb
push
xor
js
sbb
add
push
sbb
push
sbb
or
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
jl
sbb
imul
xor
outs
imul
xor
jb
jb
jb
outs
xor
jl
push
imul
jae
dec
outs
jb
jb
jb
divps
jl
js
inc
push
jae
imul
pop
je
ins
jb
js
inc
push
jae
imul
sbb
add
pop
sbb
sbb
sbb
pop
sbb
sbb
sbb
cmp
cmp
sbb
push
adc
adc
sbb
sbb
sbb
pop
sbb
cmp
xchg
sbb
adc
cmp
sbb
cmp
mov
cmp
test
sbb
mov
adc
sbb
sbb
sbb
sbb
cmp
sbb
sbb
sbb
sbb
js
sbb
je
cmp
pop
sbb
cmp
sbb
popf
test
sbb
sbb
add
sbb
pop
sbb
add
pop
sbb
add
setge
sbb
shr
sbb
adc
inc
cmovo
cmovo
adc
(bad)
adc
adc
js
pcmpeqb
pcmpeqb
pcmpeqb
pshufw
adc
sbb
sbb
adc
pop
adc
adc
ins
pshufw
add
sbb
sbb
adc
sbb
sbb
add
sbb
sbb
add
adc
sbb
adc
setge
pop
pshufw
sbb
inc
adc
inc
adc
sbb
cmp
sbb
push
cmp
sbb
setge
adc
popf
clc
sbb
adc
sbb
sbb
adc
sbb
sbb
sbb
adc
add
adc
setge
adc
adc
adc
sbb
pushf
or
cmp
push
or
adc
pop
adc
adc
sbb
adc
jo
inc
adc
or
cmp
cmp
xor
add
sbb
sbb
adc
sbb
sbb
outs
jl
push
jb
pop
gs
ins
imul
push
sbb
sbb
sbb
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
outs
pop
gs
jl
jae
jo
jle
outs
js
xor
jno
sbb
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
popf
sbb
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
sub
dec
sbb
pop
sbb
push
sbb
inc
sbb
pop
sbb
sbb
jecxz
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jl
outs
sbb
jno
js
push
sbb
jb
sbb
sbb
dec
sbb
jae
outs
sbb
imul
sbb
sbb
sbb
sbb
imul
pop
sbb
js
push
sbb
jb
sbb
sbb
sub
sbb
jg
sub
sbb
pop
sbb
js
pop
sbb
jle
outs
sbb
imul
sbb
sbb
sbb
pop
sbb
js
dec
sbb
outs
sbb
jae
sbb
sbb
xor
sub
sbb
push
sbb
js
outs
sbb
jno
push
sbb
js
sbb
sbb
ja
pop
sbb
inc
sbb
jle
jns
ja
jb
inc
sbb
jae
ja
push
outs
sbb
xor
js
sbb
sbb
push
sbb
jl
jno
pop
sbb
fs
jp
jne
imul
add
outs
sbb
je
jae
jl
jno
pop
sbb
js
jae
jl
jo
js
sbb
sbb
ja
pop
sbb
inc
sbb
jle
jns
ja
jb
inc
sbb
jae
ja
push
outs
sbb
xor
js
sbb
sbb
dec
sbb
jns
push
sbb
outs
sbb
jb
jae
sbb
sbb
sub
sbb
adc
sbb
js
jo
jg
jno
fs
js
outs
sbb
jb
jae
sbb
sbb
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
add
js
addr16
mov
sar
jmp
push
pop
or
das
hlt
push
mov
addr16
pop
retf
js
xchg
(bad)
(bad)
pop
add
cli
push
mov
fidivr
shl
cmp
movhps
repz
sti
sub
out
sub
in
add
push
frstor
icebp
or
sar
jp
(bad)
aad
js
pushf
je
xchg
fwait
dec
stos
into
xor
add
xor
cmp
inc
stc
es
pop
scas
xchg
test
fisubr
shl
test
mov
pavgw
(bad)
aaa
(bad)
push
mov
jmp
ss
xor
lock
adc
jne
jae
pop
mov
cmp
hlt
sub
push
stos
xchg
outs
(bad)
or
sti
sysret
pop
jmp
cmp
icebp
aas
lock
cmp
push
out
and
and
pop
mov
push
adc
ss
push
int3
xor
xor
das
ins
fild
int
adc
and
movups
add
xor
xor
and
pop
cmc
add
pop
ror
ret
sbb
sub
xchg
mov
and
pop
mov
addr16
adc
dec
xchg
cmp
adc
jp
pushf
ins
sub
adc
dec
std
xor
dec
daa
adc
sub
or
loopne
mov
sub
rcr
jmp
jl
neg
xor
sub
pop
or
loope
adc
xor
add
and
push
lods
dec
cmps
jo
arpl
cmps
fwait
jne
mov
mov
adc
or
cmp
repnz
sub
(bad)
push
and
aaa
out
in
dec
cld
xor
or
adc
(bad)
cmp
sub
in
jmp
sti
pop
mov
shl
or
add
leave
push
aam
pminsw
clc
xchg
ins
shr
or
pop
mov
ror
sub
and
out
inc
daa
imul
or
push
and
jmp
mov
fmul
cmp
dec
cmps
jnp
mov
jmp
mov
mov
xor
or
inc
enter
dec
cmc
shl
or
(bad)
adc
or
pop
mov
sahf
fs
ds
ror
mov
cmps
arpl
retf
sub
inc
ror
(bad)
sub
adc
cmp
std
add
loopne
sbb
mov
fwait
jp
cmp
xchg
jecxz
add
cdq
cwde
(bad)
pop
mov
xchg
ins
push
add
sub
idiv
adc
mov
mov
jg
push
enter
repnz
imul
cmc
cmp
rcr
pop
add
repnz
mov
and
pop
xchg
cdq
hlt
inc
sub
test
adc
sub
daa
or
inc
les
mov
movs
inc
mov
(bad)
xor
xor
xor
adc
xchg
dec
sar
enter
push
cmc
xor
lods
test
jecxz
pop
sbb
inc
shl
popf
jns
out
iret
ins
mov
add
cmp
sub
push
or
das
loopne
cmp
cmp
bnd
popf
mov
inc
clc
xchg
fs
mov
mov
mov
ins
mov
cmp
and
pop
scas
ja
lahf
fdiv
cmp
sub
mov
jnp
dec
std
lahf
mov
mov
fstp
cmp
(bad)
stc
jae
mov
inc
lods
arpl
mov
mov
adc
pop
fild
dec
mov
movs
push
xchg
test
iret
je
ins
mov
stos
push
lods
xchg
jmp
cmps
mov
or
int3
push
mov
shl
jmp
cmps
jo
das
retf
nop
jbe
mov
mov
sub
pop
adc
pop
scas
js
into
dec
fiadd
or
pop
sbb
unpckhps
push
cmps
xchg
outs
aad
imul
rol
or
ds
(bad)
arpl
fs
or
mov
fs
sbb
pop
aad
rcr
pop
mov
xlat
xor
and
sub
push
(bad)
ds
pop
mov
outs
ficomp
and
sub
add
aas
inc
cld
add
push
(bad)
xchg
mov
cmps
fwait
pushf
dec
int
xor
in
xor
out
aaa
hlt
or
cmps
mov
mov
jb
das
sti
dec
into
sub
in
pop
mov
aad
stos
push
inc
sub
iret
ss
pop
fsub
retf
jno
xchg
xchg
pushf
repnz
cmp
pop
lds
test
cmp
shl
popf
jnp
and
repnz
add
lods
jge
jge
pushf
dec
mov
sub
pop
sbb
je
jnp
pop
retf
inc
fisttp
inc
cld
push
gs
cmp
sub
or
div
pop
adc
sbb
mov
and
in
add
pop
sub
icebp
push
stos
xchg
ins
call
sub
or
xchg
sahf
jl
or
sar
arpl
das
adc
sar
push
mov
and
add
sub
mov
aad
xor
cld
adc
(bad)
sub
inc
js
fs
mov
cwde
xchg
dec
mov
popf
test
cmps
jp
inc
int3
xor
and
sub
pop
mov
outs
fisub
sub
sbb
sub
sub
mov
sar
adc
pop
aam
add
xchg
test
cdq
xchg
push
jns
adc
icebp
xor
cmp
es
sti
sub
mov
and
lea
pusha
sbb
call
loope
xchg
push
dec
(bad)
and
pop
aad
icebp
add
add
jo
jo
popf
pusha
mov
sahf
movs
jp
nop
bound
sbb
pop
lods
xchg
(bad)
xor
pop
mov
movs
nop
gs
xchg
cwde
fs
cmp
ror
inc
xor
jmp
(bad)
mov
mov
dec
ds
add
sbb
pop
mov
jae
push
cmps
jmp
jb
push
frstor
out
xor
dec
aad
mov
sahf
xlat
push
test
pop
aas
jecxz
fbstp
daa
adc
xor
xor
and
pop
mov
ins
aad
mov
sahf
lock
add
and
es
sti
push
mov
ss
push
(bad)
xor
cs
out
out
sti
cmp
mov
push
fimul
retf
in
cdq
ja
xor
pop
xchg
jg
ins
mov
add
push
mov
mov
into
pop
cmp
repz
pop
retf
and
dec
stos
push
jp
ja
ja
call
push
or
dec
fimul
cmp
cmp
push
mov
push
mov
cmp
das
add
in
or
push
fisttp
xor
pop
jmp
mov
ins
test
and
loopne
rcr
xor
add
test
iret
dec
scas
xchg
mov
xchg
jl
sub
aaa
jmp
movs
je
adc
push
fcom
xchg
jp
fisttp
shl
int3
sub
sbb
dec
out
stos
ins
cmps
dec
mov
cmp
xor
pop
shl
cld
dec
lods
jae
or
sub
cmp
add
xchg
xchg
imul
fnstcw
(bad)
jle
sub
push
mov
mov
lds
aad
repnz
jmp
add
dec
or
scas
js
loop
adc
ds
dec
(bad)
sub
pop
or
aaa
repz
dec
pop
adc
hlt
das
icebp
and
pop
mov
mov
dec
(bad)
push
sbb
and
jmp
jecxz
call
pop
xchg
jnp
cwde
pusha
mov
(bad)
and
cmp
pop
sbb
or
jnp
stc
jl
xchg
dec
fcomp
or
dec
mov
jne
cmp
sbb
xchg
xchg
jl
in
adc
xor
jle
pusha
mov
inc
repz
adc
adc
pop
mov
jge
clc
dec
mov
rcr
fldcw
cli
or
push
and
pop
(bad)
xchg
jle
add
cmp
xchg
inc
enter
shr
or
stos
gs
sbb
jecxz
out
mov
mov
jnp
cmp
loop
or
ja
jae
mov
fisttp
int
and
hlt
and
in
lods
dec
mov
mov
sti
add
and
loopne
sbb
push
fcomp
(bad)
xor
sbb
dec
lods
outs
enter
pop
adc
mov
fcom
add
dec
sar
out
fsub
adc
mov
pushf
(bad)
xor
lock
add
pop
nop
jb
sub
pop
loop
mov
mov
mov
daa
out
lahf
push
test
(bad)
or
jge
ins
add
jge
xchg
cwde
lahf
mov
mov
xchg
mov
ja
mov
pop
mov
pop
stos
jnp
jmp
xchg
js
nop
cmps
pusha
fdivr
inc
mov
lods
test
mov
push
push
lock
push
mov
fidivr
jbe
xchg
bound
xor
pop
in
and
ds
sub
mov
scas
jbe
jl
stc
or
cmp
sbb
add
ja
pop
int3
scas
mov
pushf
jge
push
jno
pop
int
(bad)
sub
int
std
push
mov
ficom
cmps
mov
jb
inc
leave
movs
jg
sub
and
and
scas
mov
sub
ds
inc
rcr
fidiv
pop
not
jmp
cmps
push
mov
(bad)
or
leave
sub
mov
mov
pop
xchg
pop
mov
jecxz
aam
scas
jne
test
sbb
loopne
repnz
(bad)
add
das
jmp
in
dec
mov
mov
mov
sub
std
pop
add
(bad)
movs
jns
fisubr
sub
cmp
push
xor
add
pop
out
sub
(bad)
mov
cmps
mov
mov
nop
fs
cmp
xor
aas
sti
sub
mov
jge
inc
mov
mov
scas
inc
das
(bad)
sub
or
adc
aaa
jmp
push
add
xor
xor
sub
push
stos
jp
jae
cs
sub
ja
xchg
push
mov
retf
pop
adc
xor
mov
test
ret
dec
pop
mov
mov
jmp
push
test
or
xchg
(bad)
push
mov
mov
mov
es
jle
or
and
push
push
add
cmp
dec
shl
adc
jle
sub
dec
lds
stc
daa
loopne
mov
rcr
call
mov
sbb
xor
pop
mov
mov
ja
pop
out
pop
movs
jb
cdq
mov
jbe
ss
pop
int3
or
aaa
lock
and
or
(bad)
popf
arpl
xchg
ins
(bad)
pop
test
cmp
xchg
xlat
push
or
cmp
fwait
mov
jl
push
cmp
fst
jg
mov
add
cmps
push
arpl
push
lock
(bad)
push
mov
mov
dec
mov
es
sub
int
fcomp
sub
fisubr
out
sub
daa
adc
int3
push
fstp
dec
rcl
pop
loopne
sbb
mov
mov
ficom
in
sbb
or
add
push
aad
aas
adc
aam
dec
mov
fwait
mov
jns
inc
and
shl
jge
add
inc
aam
fisttp
repnz
out
in
stc
add
push
leave
pop
iret
movs
pushf
dec
fild
into
sub
rol
retf
and
and
call
stc
inc
ror
ss
add
pextrw
add
mov
fadd
xchg
pushf
inc
retf
pop
stos
retf
ins
mov
cmps
cdq
xchg
ins
scas
sahf
bound
pmulhw
adc
mov
jge
clc
cmp
movs
inc
fcom
stos
call
or
ror
push
add
mov
mov
xor
xor
shl
loopne
movs
jp
call
adc
adc
ds
movs
pusha
cmps
scas
jns
inc
movs
nop
hlt
inc
fimul
mov
scas
inc
lods
xchg
dec
mov
and
sti
dec
xchg
movs
adc
pop
fstp
ins
mov
push
mov
pop
mov
int3
push
fcom
mov
ins
mov
jecxz
ficom
sahf
call
sub
cmp
dec
ret
and
inc
adc
sub
(bad)
pop
rol
lock
(bad)
inc
int
ret
xor
imul
cmps
jne
jg
call
and
sti
push
inc
mov
mov
adc
ds
test
(bad)
nop
rol
aas
cmp
dec
cmps
xchg
xchg
xchg
addr16
push
mov
and
mov
(bad)
sub
dec
sbb
ins
rdtsc
jmp
add
dec
cmps
(bad)
fdivr
(bad)
ins
fisttp
sub
cmp
je
inc
shl
adc
pop
aam
add
xchg
and
dec
int
scas
addr16
push
mov
hlt
dec
stos
addr16
mov
test
sub
cmp
pop
mov
movs
jp
outs
lods
mov
inc
mov
dec
movs
js
nop
cdq
ins
mov
mov
int
iret
push
cld
pop
fcom
cmc
xor
in
dec
sbb
sub
jo
push
pmaxsw
xlat
jp
jle
pop
(bad)
daa
dec
or
fistp
adc
and
pop
aas
cli
cmp
dec
in
cmp
sar
int
mov
test
out
sbb
cmp
push
test
lods
jae
inc
stos
test
pop
xchg
xor
or
fisubr
stc
or
pop
movs
xchg
mov
adc
inc
xlat
cmp
ror
xor
test
xchg
cmp
push
stos
outs
mov
loope
test
mov
das
repnz
(bad)
aaa
sbb
loopne
push
leave
push
mov
jl
inc
lods
shl
or
dec
mov
xchg
dec
ror
pop
sti
adc
pop
xlat
jl
cdq
mov
mov
mov
inc
adc
cmp
push
ret
xor
push
test
int3
sub
mov
les
pop
fldcw
or
(bad)
jne
popa
scas
inc
(bad)
and
ds
sub
push
outs
stos
xchg
ins
stos
dec
cmp
mul
enter
xor
dec
jae
and
or
aas
loop
push
jmp
outs
shl
in
(bad)
xor
ins
xlat
add
adc
mul
hlt
mov
xchg
cwde
mov
inc
movs
dec
xlat
xor
cmp
loope
mov
cmp
adc
jecxz
xchg
mov
shl
sbb
and
sub
pop
push
cli
xor
push
ret
push
rol
adc
sbb
std
or
sub
cmp
push
mov
sbb
push
mov
(bad)
dec
cli
add
int
pop
mov
push
mov
pop
pop
repz
repz
unpcklps
jge
inc
scas
xchg
inc
fsubr
les
jbe
cwde
lds
int3
cmp
fisubr
call
dec
(bad)
and
inc
shl
jg
mov
mov
mov
push
(bad)
add
inc
aam
jecxz
mov
cmp
cmc
sub
pop
cmc
push
xlat
dec
adc
and
in
stos
je
inc
fnstcw
push
shl
leave
and
pushf
gs
jae
popa
mov
and
loopne
sbb
popa
aam
clc
pop
adc
xchg
jg
popa
lods
jns
add
or
and
das
ret
cmp
dec
mov
inc
mov
xchg
inc
(bad)
inc
sbb
mov
xor
pop
fcomp
out
mov
scas
outs
fmul
pop
xor
push
test
mov
pop
(bad)
adc
xor
push
mov
mov
xor
xor
icebp
push
mov
jnp
push
pop
xor
inc
test
call
mov
or
push
out
ret
push
cmp
push
dec
inc
lods
xchg
jl
push
mov
mov
hlt
push
mov
imul
mov
pop
and
push
xchg
xchg
popa
movs
inc
(bad)
sub
push
out
jb
jno
outs
fldenv
arpl
pop
mov
jae
pop
fisttp
mov
dec
mov
fild
pop
movs
sahf
inc
fadd
ins
fdivr
sbb
ja
dec
mov
ret
push
(bad)
pop
fidiv
push
rol
jl
push
cmps
nop
sahf
inc
(bad)
outs
scas
outs
sbb
lds
pop
cld
pop
or
xor
inc
in
pop
mov
jnp
add
out
xor
and
pop
fisubr
inc
enter
sbb
dec
aam
sbb
xor
jnp
push
sbb
ss
loope
fcomp
mov
ins
shl
jle
push
aad
mov
int3
pop
mov
cdq
cdq
lahf
dec
daa
repz
or
sub
and
push
mov
pop
(bad)
xor
xor
inc
(bad)
and
pop
fcom
jmp
mov
leave
and
retf
xor
push
mov
test
shl
stc
pop
(bad)
cld
and
mov
push
add
mov
mov
aas
stc
dec
enter
scas
push
push
lods
push
scas
(bad)
xchg
xchg
xchg
inc
or
dec
fld
jecxz
iret
cmp
sub
sub
cmp
(bad)
dec
xlat
cs
mov
inc
or
cmc
or
push
lods
call
lods
inc
fild
(bad)
or
or
call
cmp
aaa
into
lea
shl
adc
pop
mov
shl
push
aad
les
idiv
jmp
push
repnz
fdiv
call
imul
or
or
sbb
call
and
shl
in
mov
jno
imul
or
ss
add
push
std
cmp
push
movs
loopne
hlt
add
out
and
and
and
jg
aaa
adc
ds
cmp
in
cmps
fild
mov
movs
jl
cwde
imul
mov
inc
cmps
(bad)
cdq
xchg
push
and
sub
dec
aam
cmc
psllq
inc
sub
pop
aam
in
or
and
repnz
xor
loop
adc
push
mov
mov
push
sub
test
in
out
cld
and
scas
push
and
loop
mov
mov
sub
cdq
inc
idiv
adc
add
loop
rcr
mov
stos
jno
adc
add
xor
push
xchg
aam
lods
bound
(bad)
xor
push
out
adc
add
or
adc
in
jle
pop
movs
ins
xchg
ins
(bad)
dec
lea
call
cmps
rcr
lea
sub
push
movs
out
fsubr
pop
idiv
xchg
xchg
dec
test
movs
mov
stos
pop
and
repnz
xor
mov
jle
push
and
push
scas
int3
mov
inc
(bad)
mov
xlat
pop
mov
std
sub
push
mov
cld
inc
fidivr
nop
dec
jmp
jecxz
sub
movs
data16
rcl
sbb
inc
mov
mov
lea
push
(bad)
push
mov
cwde
inc
xlat
push
test
dec
lds
jle
sub
add
sar
out
dec
mov
popf
mov
loopne
adc
retf
dec
mov
jg
xadd
jmp
mov
pop
in
inc
imul
test
jae
xor
call
sti
add
or
loope
push
lods
jge
ins
adc
jmp
test
jno
mov
dec
(bad)
sti
xor
pop
stos
call
xor
inc
xchg
or
dec
ror
sbb
retf
and
loop
fstp
push
mov
mov
and
add
adc
dec
movs
ja
jle
out
pop
xor
outs
fdivr
in
adc
pop
fstp
ja
inc
mov
repnz
cmps
popa
test
fbstp
cmp
ss
pop
sbb
dec
rol
xor
add
rcr
jb
por
fwait
mov
cmps
call
scas
outs
or
movs
jnp
jp
nop
ins
fstp
or
dec
aad
mov
rol
es
dec
fsub
(bad)
es
inc
cmp
shl
adc
sbb
arpl
dec
movs
mov
js
push
mov
scas
xlat
and
mov
retf
dec
test
mov
xchg
mov
jp
and
retf
and
outs
into
dec
shl
cmp
or
pop
out
jb
(bad)
cdq
lea
cmc
push
enter
sub
mov
fcom
push
or
idiv
gs
add
mov
mov
sub
sbb
push
xchg
push
shl
shl
stos
xchg
pushf
xchg
pusha
mov
cmp
pop
or
ds
jmp
add
xchg
push
add
inc
pop
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
in
out
in
fild
out
lods
idiv
out
stc
call
retf
movs
xlat
sahf
repnz
test
mov
in
cwde
int3
and
cmc
lods
out
(bad)
cmps
fidiv
stc
xchg
out
xchg
scas
lds
out
loopne
sti
cwde
ficom
fdivr
mov
rcr
mov
std
cwde
fdivr
shl
(bad)
jmp
repz
mov
xchg
fidivr
imul
fdiv
repnz
fidivr
jmp
pushf
stc
mov
retf
fnsave
sti
xchg
shl
in
fwait
leave
test
lahf
cld
mov
iret
mov
lock
out
out
sar
mov
cdq
loop
(bad)
mov
test
mov
lods
out
cld
xchg
cmc
mov
xchg
iret
or
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
test
stos
out
(bad)
neg
shr
scas
icebp
mov
fdivr
lds
neg
sar
enter
jmp
add
fdiv
jecxz
lock
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loope
in
cmp
xchg
ret
stos
enter
shl
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
jb
imul
je
dec
adc
push
pop
sub
dec
xor
pop
cmp
adc
dec
cmp
adc
inc
add
adc
push
add
push
xor
sbb
push
xor
dec
push
push
data16
sub
jp
jne
push
sbb
popf
aad
cli
mov
shr
xchg
fstp
jmp
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
add
xchg
push
add
jmp
in
push
fcomp
mov
outs
adc
inc
and
pop
or
enter
mov
push
les
jle
xchg
push
sub
jnp
pop
ja
jne
aam
out
sbb
xchg
push
sub
imul
rcr
sbb
(bad)
jb
aad
mov
push
add
jecxz
mov
and
jo
xchg
dec
aaa
or
sti
addr16
sub
xor
sbb
and
fistp
je
inc
jl
push
adc
dec
pop
xchg
std
scas
retf
lods
leave
xchg
stos
jmp
mov
and
pop
sub
fwait
ror
scas
loop
clc
xchg
in
adc
dec
sub
sahf
div
mov
std
mov
mov
(bad)
loop
loopne
idiv
push
jp
pushf
rol
lds
jmp
repz
(bad)
pushf
repz
sbb
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
ds
and
xor
jb
or
push
sar
adc
fadd
push
mov
fcom
jmp
pop
and
outs
mov
lock
not
jmp
imul
pop
lea
loop
or
cmp
dec
sahf
retf
cmps
(bad)
jecxz
fcomp
test
sub
adc
push
push
jnp
push
and
cmp
push
mov
dec
mov
adc
cmps
and
js
shr
sbb
hlt
dec
sub
xor
cmps
dec
cli
mov
arpl
pop
push
retf
or
mov
pop
mov
mov
sub
fst
loopne
aas
pop
popa
test
cmp
test
xlat
jmp
and
ins
mov
movs
adc
pop
sbb
ds
mov
mov
leave
loopne
pusha
mov
arpl
pop
push
xor
in
loope
push
sbb
dec
imul
jb
mov
fcmovb
scas
inc
cmps
push
inc
cmps
xchg
push
inc
lahf
inc
data16
adc
mov
call
sar
sti
into
movs
addr16
je
sahf
pop
jb
bts
pop
test
addr16
cmp
push
jp
jp
pop
sbb
push
add
pusha
add
pop
or
dec
das
dec
and
sbb
sbb
jg
data16
push
jne
push
sub
inc
and
jp
outs
or
out
mov
lock
ror
cmc
mov
repz
xlat
mov
fistp
int
(bad)
mov
out
fcom
(bad)
or
xchg
sub
push
gs
dec
mov
in
loope
jnp
call
jp
xor
dec
imul
sub
fs
das
mov
(bad)
sub
imul
adc
mov
cmp
or
out
das
fdiv
popf
or
add
sub
dec
das
test
not
or
mov
adc
inc
cmp
xlat
xor
mov
jp
(bad)
outs
das
retf
ins
outs
bound
add
in
jo
jne
icebp
adc
imul
adc
mov
inc
mov
adc
or
sub
fdivr
(bad)
paddb
stos
push
xchg
in
in
dec
xchg
push
(bad)
pop
dec
mov
mov
movs
or
mov
movs
cs
push
mov
outs
test
popa
push
lock
sub
add
pop
sub
mov
aas
jp
xlat
or
cld
pop
shl
inc
mov
mov
or
(bad)
jmp
mov
popa
bound
pusha
xchg
ret
in
cmps
hlt
xchg
push
jo
push
ret
ret
into
movs
xchg
in
inc
jne
or
jle
movs
inc
(bad)
call
and
mov
cmc
push
ret
and
les
and
jle
mov
cmps
retf
jecxz
add
adc
ror
sbb
xchg
mov
add
bound
pop
outs
outs
mov
adc
scas
push
xor
mov
xor
mov
cmp
mov
mov
loope
into
test
xchg
cmc
xchg
not
mov
rol
shl
nop
jmp
in
jmp
mov
cmp
pop
iret
inc
icebp
mov
lahf
and
fild
or
frstor
cmp
into
scas
ins
in
fs
js
nop
jl
(bad)
les
push
and
mov
inc
xor
outs
lock
stc
(bad)
pop
xor
inc
add
mov
xor
mov
hlt
xchg
icebp
or
dec
add
jne
test
sbb
mov
inc
mov
cmp
push
dec
cli
add
xor
out
in
dec
mov
jg
sub
dec
(bad)
xor
jmp
pop
cmp
pop
dec
add
(bad)
mov
enter
jmp
test
push
mov
repnz
mov
loope
nop
gs
test
mov
mov
mov
push
xor
inc
fbld
push
or
dec
add
retf
mov
cmp
or
mov
mov
je
and
fsubr
mov
ins
push
xor
repnz
mov
fisttp
sub
repnz
mov
movs
ficomp
jno
cmp
test
cdq
(bad)
push
jg
dec
ret
xlat
jne
pop
dec
call
sbb
xor
jecxz
mov
les
js
fisttp
mov
sti
cmp
sbb
aad
sbb
dec
ss
mov
jnp
rcl
inc
mov
jmp
cld
mov
loop
or
lds
mov
sbb
dec
jbe
fdiv
test
mov
repz
push
repz
pop
(bad)
mov
int
xor
push
adc
or
adc
push
pop
add
sub
ja
pop
adc
fs
jae
pop
pop
xor
ins
sub
outs
cmp
push
xor
mov
mov
xor
push
or
mov
int3
cmp
imul
hlt
icebp
dec
repz
xor
jge
ror
jns
xchg
aad
ss
test
or
push
xlat
dec
stc
mov
pop
push
mov
ja
mov
mov
pop
push
aad
push
(bad)
xchg
xlat
hlt
sub
xor
pusha
out
(bad)
js
aad
pop
shl
fnsave
rol
pop
hlt
mov
test
test
xchg
bound
or
sub
clc
xor
pop
sbb
sub
jmp
in
and
cmp
push
movs
retf
mov
mov
xchg
fbld
out
sub
in
pushf
sar
mov
int
mov
sub
test
jmp
mov
stos
ins
mov
ret
add
push
(bad)
push
daa
dec
mov
test
js
mov
xchg
xlat
jl
dec
jmp
ja
pop
test
pop
call
sar
push
sbb
fldenv
test
out
std
fwait
mov
sub
jae
or
cdq
fidivr
sub
sbb
mov
sbb
rcr
out
stos
sbb
sbb
fucomi
or
stos
inc
push
inc
dec
mov
sub
sbb
pop
jmp
cmp
outs
sub
jae
dec
ja
jne
mov
mov
lods
aaa
ret
mov
les
cmp
mov
mov
std
add
jno
mov
div
pop
pop
cmp
gs
and
dec
add
fsub
mov
into
call
clc
mov
adc
inc
das
push
ss
sbb
data16
pop
push
jge
bound
je
pop
sbb
add
fsubr
adc
gs
mov
sbb
(bad)
out
xchg
push
retf
xchg
cmc
loop
inc
movs
xchg
mov
loopne
cs
push
(bad)
xchg
shl
and
xor
les
retf
mov
loopne
std
inc
adc
scas
mov
js
fcom
daa
sti
and
cwde
mov
loope
or
data16
sahf
cmc
push
cmp
pop
xchg
test
cmps
dec
(bad)
jb
test
pop
dec
ins
cmp
and
push
out
cmp
aaa
out
sbb
retf
pop
xchg
mov
push
outs
icebp
pop
cmc
mov
test
test
and
inc
es
popf
repz
mov
lds
jg
aaa
sbb
or
jle
inc
or
jnp
push
sbb
add
adc
test
push
mov
mov
inc
xlat
call
jp
mov
mov
add
pop
div
mov
or
popf
rep
call
or
push
push
ins
cmp
mov
jmp
and
and
jmp
mov
jl
or
out
repnz
fldln2
mov
sub
pushf
fnsave
dec
clc
cs
xchg
nop
or
loope
scas
mov
add
cs
or
cmps
(bad)
inc
lock
test
sbb
adc
cmps
aaa
push
and
aad
dec
aas
inc
mov
cs
shl
xor
fcom
dec
jg
mov
cmp
mov
leave
jmp
pop
or
sub
outs
or
inc
or
mov
mov
jnp
fild
xor
cmp
push
xchg
and
arpl
xchg
cmp
ins
sub
xor
(bad)
fst
out
idiv
jmp
lods
div
stc
cdq
fdiv
(bad)
hlt
in
add
add
push
stc
mov
ret
arpl
xlat
dec
loope
pop
test
xor
mov
sub
popf
nop
adc
inc
cmc
sbb
jae
mov
mov
mov
dec
mov
fistp
mov
in
mov
and
and
inc
xchg
ins
out
xchg
pop
lds
movs
xchg
test
sbb
cmp
add
and
fdivr
mov
or
push
adc
loopne
ror
fimul
stos
xchg
rcl
and
popf
cwde
sar
fsub
cmp
call
xchg
sbb
pop
das
sbb
push
cmp
clc
or
ds
dec
mov
lds
or
cld
jns
sub
pop
and
in
mov
outs
movs
int
mov
push
test
xchg
bnd
movs
(bad)
and
xchg
ror
push
inc
push
ds
leave
jp
scas
jmp
js
test
aaa
outs
iret
sbb
call
je
call
xchg
jnp
out
sahf
fbld
loopne
xchg
test
pop
into
xor
mov
sahf
adc
inc
sti
cmp
cmc
dec
das
(bad)
in
pop
dec
or
push
push
push
stc
movs
(bad)
jbe
ds
jge
(bad)
iret
sbb
outs
and
mov
(bad)
push
inc
pop
fmul
popa
ins
mov
jmp
xchg
addr16
pop
push
scas
push
fst
test
mov
ret
mov
in
xchg
stos
dec
or
mov
fcom
imul
jae
stos
leave
(bad)
push
clc
stos
das
retf
js
(bad)
popa
out
pop
test
push
xor
mov
jg
sub
dec
sbb
dec
sub
inc
add
sbb
ins
add
cmp
arpl
jge
gs
ins
push
mov
mov
xor
jl
lds
mov
arpl
cmc
dec
adc
ins
in
pop
mov
mov
add
gs
js
scas
das
cmp
inc
and
pop
xchg
(bad)
adc
movs
sub
cmp
pushf
jb
mov
cmps
retf
call
adc
pop
adc
mov
push
adc
dec
push
outs
push
xchg
fisttp
or
ja
iret
xchg
xor
push
and
push
sbb
fidivr
cmp
pop
add
cmp
xor
add
add
pop
xor
xchg
shl
mov
push
popa
mov
cmp
rcr
nop
jae
sbb
jmp
aas
aam
adc
cmp
cdq
iret
dec
fld
sar
mov
cmc
and
test
je
cmps
stc
jns
jbe
and
inc
ds
sub
jae
dec
add
(bad)
cld
xchg
xchg
in
and
pop
arpl
and
xchg
jmp
inc
mov
or
jns
jge
add
aas
mov
pop
mov
mov
xchg
call
inc
cmps
sub
in
mov
daa
ins
into
xor
xchg
int
test
pop
pop
daa
jmp
or
and
ja
cdq
dec
and
jmp
sbb
sti
test
adc
mov
int3
pop
icebp
mov
fistp
adc
jbe
leave
adc
jns
jg
push
add
inc
mov
(bad)
mov
adc
out
sub
ficom
push
xchg
sbb
clc
ins
push
inc
adc
add
sub
xchg
into
cmc
push
jmp
ja
jae
jl
adc
addr16
pop
xor
inc
cmp
push
add
push
outs
or
pop
xor
cmp
pop
and
add
ss
or
push
pop
pop
fmul
mov
(bad)
pushf
dec
rol
movs
data16
mov
mov
iret
arpl
fnsave
or
in
xor
lods
rcr
lods
fistp
call
les
cld
xor
jnp
mov
jo
shl
dec
pop
(bad)
sub
test
je
test
inc
sub
and
inc
addr16
add
push
add
popa
and
leave
ins
push
cmp
mov
dec
mov
mov
outs
in
mov
mov
outs
cli
scas
test
sbb
xor
je
push
out
mov
jne
fstp
(bad)
sahf
pushf
jg
outs
cld
pop
loope
mov
xor
push
mov
add
jecxz
jmp
xchg
jbe
js
pop
std
mov
push
adc
pop
sbb
enter
enter
mov
repnz
add
and
fmulp
test
dec
jmp
jmp
add
mov
stos
scas
cdq
xor
ret
sbb
out
data16
adc
test
(bad)
sub
jp
cmp
test
jo
cmps
div
shl
sbb
xlat
scas
test
dec
jno
inc
jmp
outs
cmp
add
or
out
ins
or
pop
repz
push
scas
mov
sbb
enter
cmp
pop
inc
xchg
xchg
in
cmc
or
gs
mov
cdq
adc
pushf
mov
xchg
sub
pop
dec
mov
dec
push
(bad)
jne
push
popf
jg
outs
dec
fidivr
(bad)
jne
mov
repnz
cmp
sbb
and
icebp
xchg
(bad)
mov
mov
ror
mov
cld
xchg
xchg
fstp
cmc
mov
xlat
xchg
in
stos
enter
repz
add
shr
push
cdq
jb
test
dec
sub
jl
lahf
push
iret
mov
push
xor
push
xchg
push
inc
adc
inc
not
(bad)
xor
mov
in
or
sbb
inc
in
mov
shl
mov
cmp
dec
mov
push
cmp
popa
lock
push
add
jnp
arpl
aad
sbb
imul
sub
push
rcr
dec
fidiv
lock
aad
in
push
test
inc
fist
mov
jmp
dec
pop
jg
pop
push
int3
and
inc
stc
sub
pop
sub
pop
sub
icebp
xor
add
test
test
imul
jle
pop
adc
xor
sbb
jb
sub
div
adc
lock
add
and
or
sub
fwait
loopne
jmp
sbb
call
ins
push
adc
sub
pop
dec
lock
cmp
sar
daa
mov
jle
jmp
call
adc
and
mov
data16
jbe
outs
bnd
and
icebp
cmps
sar
xor
xor
daa
loop
mov
call
(bad)
pop
jmp
xor
and
mov
xchg
hlt
jmp
mov
mov
out
shl
repnz
pop
cmps
ret
test
(bad)
mov
lea
mov
(bad)
call
inc
or
dec
add
mov
mov
(bad)
and
hlt
mov
icebp
mov
leave
or
mov
int3
mov
out
inc
pop
imul
xchg
aam
in
mov
scas
clc
(bad)
aam
sti
sbb
es
es
and
js
dec
sub
cdq
(bad)
xchg
loop
cmc
xchg
aas
pusha
xchg
fiadd
adc
push
loop
push
mov
xrelease
aam
pop
or
daa
xor
test
test
ss
dec
or
and
imul
and
ins
push
mov
or
ss
mov
push
or
pop
cmc
xor
pop
mov
adc
mov
repnz
lock
adc
arpl
jle
test
lods
leave
std
aam
scas
popa
movs
mov
and
ins
add
in
adc
sbb
pop
mov
sub
or
push
stos
iret
lods
lahf
gs
mov
push
jb
sub
cmp
sub
cmp
ret
xchg
imul
xor
aad
mov
xchg
(bad)
ja
mov
or
loope
cmp
push
adc
cmovp
sbb
jg
adc
mov
and
(bad)
cld
xchg
pusha
inc
and
test
jns
pop
icebp
clc
mov
mov
pop
aas
xchg
inc
cmc
stos
enter
jo
es
fisub
ret
test
pop
ja
cmp
ins
sub
adc
mov
test
push
clc
sub
xor
cmc
mov
pop
pop
cmp
xchg
jo
shl
ins
pop
sbb
das
(bad)
fmul
xchg
inc
jp
inc
cmp
or
data16
jbe
dec
dec
stos
fist
ret
push
out
mov
rep
push
aad
std
xchg
pop
movs
scas
out
(bad)
sub
sbb
sbb
fild
inc
cmp
add
dec
add
mov
xchg
adc
xchg
in
push
adc
mov
mov
call
outs
cdq
fs
xchg
cmp
gs
xchg
test
inc
gs
(bad)
mov
fwait
xor
inc
pop
xor
and
arpl
inc
adc
subps
jns
push
sub
inc
pop
adc
add
ins
and
pop
aaa
ja
stos
and
popf
rol
cld
dec
adc
test
xor
mov
push
or
pop
hlt
sub
aas
inc
mov
cmc
jne
ror
jl
xchg
(bad)
mov
movs
test
jg
fild
leave
daa
sub
xchg
mov
mov
add
lea
cmp
call
or
repnz
aas
pop
test
out
or
xor
adc
and
cmovs
cld
jae
ss
lahf
(bad)
inc
scas
movs
leave
push
stos
enter
(bad)
imul
sub
daa
dec
sub
retf
xchg
cld
and
jbe
adc
push
(bad)
and
jp
cmp
adc
or
stos
test
inc
fistp
(bad)
je
scas
lds
mov
jmp
aam
nop
ins
in
mov
inc
aas
jg
cmp
pop
and
xor
into
dec
jle
cmp
mov
xchg
test
inc
or
imul
or
shr
fsub
std
and
add
cmps
rol
fbstp
pop
fwait
enter
test
data16
push
or
(bad)
cmps
mov
lahf
fadd
sub
stos
sti
xchg
stos
or
ins
sub
ret
mov
mov
xchg
jp
mov
push
push
jnp
sub
and
dec
inc
mov
add
jle
iret
xchg
fwait
repz
push
add
xor
popw
mov
add
adc
iret
push
add
in
jmp
dec
popa
add
xchg
push
add
test
push
dec
dec
popa
and
rol
mov
sbb
cmp
pusha
or
pop
pop
pushw
adc
or
sub
mov
dec
add
mov
or
push
int
fwait
jp
mov
cli
and
sub
outs
enter
retf
push
loope
push
jbe
fld
mov
imul
and
dec
jle
ja
or
inc
adc
or
fnstsw
mov
jg
xchg
mov
mov
std
push
test
movs
scas
push
push
into
sub
xor
jl
cmp
imul
retf
jnp
retf
xchg
jo
iret
sbb
aam
in
fisttp
cld
jge
push
pop
inc
daa
sub
jp
cmp
shl
xchg
jmp
xchg
sbb
outs
xor
dec
xor
sub
inc
jno
dec
sbb
int
(bad)
pop
test
jbe
or
hlt
push
mov
ja
xor
adc
cmps
add
xor
cdq
into
imul
pop
aad
xor
jmp
hlt
mov
out
bound
fsub
lods
mov
in
mov
jecxz
out
mov
pusha
aas
jnp
dec
add
inc
add
jp
pop
pop
pop
je
imul
and
dec
push
xchg
pop
nop
cld
movs
sub
scas
aas
ret
cdq
inc
or
xchg
xchg
movs
jmp
and
fidivr
fistp
cwde
dec
int
stc
mov
(bad)
fisttp
xchg
movs
jecxz
cmc
xchg
not
mov
stc
mov
xor
ins
or
data16
xchg
cld
in
loope
xor
imul
dec
(bad)
movs
mov
rcl
in
jo
jmp
sbb
or
out
sbb
lahf
cmc
lods
sbb
jbe
je
mov
test
mov
pusha
and
(bad)
xchg
lods
clc
fcmovnbe
icebp
xchg
pop
test
lock
imul
or
push
jmp
movs
test
dec
and
ret
push
rcpps
sbb
mov
pop
xor
pop
(bad)
xor
dec
push
loope
cmc
in
adc
push
or
arpl
add
and
push
adc
imul
mov
add
or
inc
adc
and
adc
inc
cmp
out
xor
push
loop
xchg
gs
fnstcw
dec
cmp
jo
pop
sbb
jns
mov
xor
xor
sbb
sahf
iret
pop
and
fsubr
fsub
clc
and
stc
mov
mov
out
clc
xchg
aam
cli
mov
fsub
jbe
imul
cmp
out
mov
mov
add
cmp
test
jno
dec
repnz
sub
out
jle
cmp
push
fcmovu
mov
jl
aas
ins
inc
xchg
loope
sbb
fistp
jmp
pop
jne
mov
or
cmc
mov
xor
(bad)
mov
sbb
outs
or
cwde
xor
jp
lods
cmp
xchg
fcomip
dec
pop
inc
lods
and
retf
xchg
shl
cmp
jmp
jo
fdivr
dec
cmp
hlt
popf
clc
call
jne
and
jb
ins
sub
dec
pop
push
add
and
je
push
sbb
pop
and
inc
sub
ins
adc
adc
imul
sub
int
aam
xor
pop
ja
mov
(bad)
adc
and
pop
mov
push
ja
mov
cmp
mov
stos
adc
cmc
mov
xchg
push
ror
push
mov
ss
cwde
jno
retf
pop
je
mov
cli
stos
cmp
inc
lea
inc
cmp
mov
cdq
call
push
push
push
push
popf
pop
adc
cli
pop
sbb
loope
sbb
dec
test
stos
fwait
data16
xchg
retf
cdq
fwait
addr16
sahf
dec
test
mov
outs
push
sbb
scas
idiv
clc
test
cmp
push
aaa
sbb
push
aas
enter
jle
cmps
int3
dec
cwde
(bad)
into
pop
mov
(bad)
test
shl
scas
fcom
(bad)
jl
push
stc
or
lods
and
movs
xor
movs
out
in
int
xchg
test
xchg
jnp
or
or
lock
xor
cdq
and
adc
dec
outs
sbb
aaa
xchg
sti
dec
(bad)
mov
mov
adc
retf
push
jl
push
ret
aad
nop
jmp
int3
fdivr
and
loope
push
cs
imul
call
ror
push
add
mov
mov
mov
or
jns
and
xchg
mov
add
loopne
iret
mov
icebp
out
es
pop
das
fsub
fdiv
sub
or
call
cmp
jg
cmps
fsubp
cmp
inc
inc
mov
jne
bound
jbe
dec
sub
cmp
inc
or
sbb
pop
cmp
pop
inc
pcmpeqw
imul
arpl
jp
push
sub
mov
mov
xor
test
icebp
jnp
pusha
xchg
jno
mov
data16
push
js
mov
data16
xor
hlt
sbb
push
sub
sub
(bad)
sub
push
mov
pop
cmc
or
movs
xchg
mov
cmp
pop
ds
jbe
xchg
(bad)
leave
add
jno
movs
inc
(bad)
jae
scas
mov
ss
test
mov
xchg
push
mov
test
(bad)
inc
int3
pop
add
pop
(bad)
cmp
jb
dec
stc
stos
cdq
ins
ds
jmp
dec
retf
arpl
mov
adc
jmp
arpl
pavgb
or
enter
sar
xor
xchg
gs
xor
in
sub
wrmsr
cld
je
sub
ins
daa
leave
push
lock
sahf
in
sahf
adc
js
and
cmc
fidiv
dec
jmp
ret
dec
daa
je
or
(bad)
dec
push
xor
leave
cmps
jne
in
jb
dec
sub
or
into
inc
mul
test
xchg
aas
jnp
xor
fmul
ja
and
sub
add
ss
fstp
mov
bound
cmp
mov
and
fdiv
mov
daa
es
js
ret
cmps
pop
scas
mov
in
cmp
pop
dec
aad
jmp
jnp
rol
xchg
cdq
mov
push
sahf
jb
mov
cdq
pop
xchg
repnz
jns
xchg
popf
fcomp
fs
push
cmp
out
cmps
cs
jne
mov
icebp
jae
and
cli
push
popf
(bad)
std
xchg
out
(bad)
into
xchg
fisttp
shr
out
(bad)
icebp
sahf
(bad)
pushf
lock
fnstenv
lock
out
cld
cdq
fst
aam
push
bound
cwde
jecxz
es
xor
sub
add
or
pop
sar
rol
push
cmp
jl
into
js
sti
jg
mov
push
jecxz
es
out
mov
mov
adc
push
cmp
push
cli
(bad)
inc
dec
mov
push
pop
xor
lds
mov
fistp
pop
loope
cli
adc
and
push
mov
cmp
jle
and
push
sub
adc
push
fnstenv
pop
pmulhuw
xor
push
push
push
mov
pop
sbb
and
sbb
imul
into
jbe
xor
inc
adc
out
sbb
stc
jne
bndstx
push
jmp
xor
adc
add
ss
std
jns
sub
repz
test
test
imul
or
dec
out
xor
push
cs
call
ds
adc
xchg
lock
mov
inc
hlt
dec
and
inc
push
xor
ja
push
std
mov
arpl
mov
nop
mov
cmp
sbb
xchg
mov
sub
(bad)
out
outs
(bad)
iret
jns
dec
icebp
pop
sub
jp
add
push
fsubr
xchg
fld
or
or
loope
lock
dec
pop
or
stc
rcr
into
sbb
mov
add
xchg
int
cmp
arpl
mov
push
fs
stos
cli
xchg
xor
mov
jns
cmps
mov
xchg
mov
jmp
push
aaa
test
push
aas
mov
sbb
jl
fbld
pop
add
aad
out
cmp
call
stc
rol
dec
jbe
scas
loope
pop
adc
xchg
sub
js
outs
pop
push
sub
pop
add
jbe
pop
pop
jl
add
ja
push
and
add
ins
push
inc
arpl
retf
lea
add
into
dec
adc
fist
and
xor
fsub
pop
das
retf
pop
jmp
xor
pop
fwait
xchg
cmps
sar
sub
push
xchg
outs
repnz
cmps
mov
test
jae
scas
mov
push
cmp
das
sub
lea
dec
shr
fstp
and
or
aad
add
dec
call
and
pop
out
mov
into
xor
jo
and
(bad)
enter
icebp
or
sub
lods
scas
ins
sbb
sar
cs
rcr
push
scas
mov
jne
scas
out
js
fadd
shl
dec
add
sbb
pop
loope
or
stc
js
xor
jae
adc
fdiv
loope
dec
add
pop
movs
test
mov
ins
jmp
dec
pusha
xchg
call
fdivrp
mov
rol
cmova
std
xchg
mov
jmp
xor
sub
call
mov
dec
cld
inc
and
dec
dec
sub
in
mov
icebp
pop
dec
pop
adc
popf
repz
mov
pop
pop
adc
fcomp
push
ret
in
mov
inc
pop
ss
fistp
sbb
mov
test
test
mov
fistp
inc
arpl
rcr
jo
mov
pop
cmp
shl
cmp
inc
jg
(bad)
fisttp
xor
shl
xor
(bad)
jl
fadd
dec
xor
jno
dec
push
(bad)
popf
shr
add
mov
out
ss
test
leave
cs
fisub
aaa
ja
mov
popa
aaa
xchg
add
clc
xchg
jmp
jecxz
out
cdq
sar
jecxz
sti
scas
(bad)
scas
aad
retf
cmps
fdiv
shl
mov
sar
push
jmp
rcr
out
xchg
fist
jmp
mov
stos
int
push
or
xor
mov
jecxz
out
call
les
sar
es
adc
fnstcw
out
pop
popa
xchg
nop
retf
add
out
repnz
ret
aaa
inc
imul
movs
rcr
and
(bad)
sbb
cs
sar
pop
cld
pop
in
pop
(bad)
mov
jns
sub
(bad)
mov
pop
mov
test
cmps
stos
in
outs
mov
lods
lahf
arpl
xor
sub
add
push
xor
imul
fs
test
mov
lock
fild
in
pop
ins
rol
sub
iret
pop
push
arpl
cmp
push
lahf
dec
movs
into
and
fcomp
daa
xor
out
call
ds
pop
cmp
and
arpl
pop
sti
call
or
mov
inc
ret
stos
mov
and
push
mov
jg
movs
out
addr16
rol
bnd
popf
cmps
arpl
add
pop
xchg
test
mov
cdq
mov
in
movs
cmps
xor
xor
adc
xchg
add
fbld
lea
xor
xchg
fxtract
and
pop
push
ret
shl
dec
sub
sub
sbb
ins
pop
push
cwde
(bad)
iret
mov
call
cmps
inc
in
and
jno
dec
dec
test
test
and
mov
out
daa
outs
jbe
lods
(bad)
stc
push
sub
scas
(bad)
scas
call
bound
cs
dec
push
and
bound
inc
adc
dec
das
imul
adc
add
outs
sbb
and
pop
sbb
popf
rol
fcomp
mov
xchg
ja
and
ss
push
add
cmp
cwde
das
push
push
adc
and
stos
loop
add
inc
call
pop
movs
mov
mov
sbb
push
mov
ins
push
les
ss
push
mov
ja
ret
push
push
cs
sub
es
addr16
xchg
push
sbb
es
div
daa
inc
shr
mov
jg
mov
and
jge
call
sahf
cmps
shl
xor
mov
fistp
jmp
mov
lods
std
das
(bad)
call
stos
mov
sahf
mov
and
ret
ja
in
and
dec
test
xor
shl
ds
inc
es
cdq
lds
lds
sub
js
std
clc
ds
test
dec
cs
sub
push
fist
lock
repnz
inc
jno
adc
nop
retf
jns
stc
mov
in
lea
and
inc
inc
sub
pop
mov
push
call
pop
sbb
xchg
(bad)
in
xchg
mov
push
cmp
lods
xor
cld
imul
aas
add
repz
sbb
xchg
mov
jecxz
or
fst
fsubr
or
xor
aad
pop
mov
in
adc
ja
mov
clc
add
cmps
mov
dec
call
cmp
xchg
sbb
popa
sbb
int3
xchg
call
cdq
js
mov
lods
mov
xlat
daa
xor
fdivrp
fdivr
call
rol
mov
stos
out
stc
call
les
mov
fiadd
sbb
js
aas
push
xor
xor
jo
ins
pop
daa
xor
ins
sub
or
push
sub
add
iret
fcomp
and
mov
and
cs
push
xchg
adc
push
push
and
jl
push
pop
jns
addr16
and
inc
es
cwde
shr
mov
pop
bound
lahf
in
loopne
mov
inc
int3
mov
jmp
adc
mov
jg
inc
sub
data16
pop
and
xchg
loop
jmp
pop
jae
or
aad
or
inc
inc
and
pusha
or
out
lock
xchg
sbb
sub
inc
das
xchg
pop
dec
push
pop
push
xor
add
int3
mov
movs
jmp
xlat
lods
(bad)
fiadd
mov
add
ins
add
bound
js
xchg
shl
call
stos
ret
test
(bad)
xchg
neg
scas
sbb
je
push
cdq
or
shl
xchg
adc
inc
dec
xor
fdivr
or
and
pusha
add
aad
fadd
pop
add
push
popw
jo
mov
mov
cmps
out
sahf
enter
rol
ss
jno
pop
ins
pop
pop
and
push
aas
inc
cmp
popf
out
scas
out
or
push
sbb
jg
xor
lods
sti
mov
dec
or
and
ins
ds
sub
jg
popa
daa
jg
jl
jno
arpl
js
jle
dec
pop
ds
pop
cmp
popw
inc
add
push
ss
cmp
push
and
pop
sbb
sub
cmp
adc
or
dec
xor
pop
xor
push
data16
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
pop
sbb
outs
or
jne
dec
xor
sub
pop
add
inc
cmp
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
out
lods
idiv
fdivr
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
loope
std
mov
stos
enter
cwde
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
push
xor
inc
pop
xor
push
das
inc
outs
add
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
loop
icebp
xchg
clc
mov
xchg
lds
out
(bad)
sahf
fcom
fidivr
out
in
cmp
fwait
retf
mov
(bad)
xchg
aam
not
pop
pusha
sub
dec
and
push
pop
or
es
add
popa
cmp
dec
cmp
bound
bound
inc
add
pop
add
jb
inc
or
inc
cmp
dec
and
jne
pusha
add
mov
mov
test
(bad)
cdq
push
mov
out
pop
pop
xor
and
cmp
adc
ja
jne
push
sub
xor
bound
jb
jns
dec
or
inc
or
sub
inc
and
dec
pop
sbb
pop
sub
pop
xor
sbb
inc
xor
dec
sub
dec
sub
pop
xor
js
popa
pop
cmp
arpl
bound
inc
or
js
jo
push
xor
inc
daa
inc
xor
imul
and
data16
push
cmp
dec
add
cmp
dec
sub
jne
outs
push
ins
sub
push
adc
jle
addr16
inc
add
and
pop
cmp
inc
add
push
xor
outs
aas
ins
adc
inc
aas
jno
dec
sub
push
xor
lahf
out
xchg
stc
(bad)
mov
cmps
idiv
enter
loope
neg
cld
nop
in
sbb
ss
pop
jge
push
sub
jge
pop
cmp
dec
and
or
cmp
sub
push
push
adc
arpl
jl
lahf
lock
repnz
jmp
jmp
mov
into
test
loope
lock
in
sub
(bad)
mov
fiadd
loope
enter
std
call
in
fidiv
loope
or
ret
mov
scas
leave
scas
int3
test
test
clc
call
fistp
mul
fidivr
call
call
(bad)
fcomp
icebp
cmps
jmp
fnstsw
shl
stos
into
mov
cwde
retf
mov
iret
and
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
pop
dec
adc
mov
mov
in
repnz
jmp
fnsave
repz
lods
fimul
cmp
cs
aas
pop
xor
and
cmp
and
xchg
push
add
imul
xor
cmp
pop
call
in
inc
xor
cs
pop
jg
ds
jmp
sub
cwde
(bad)
(bad)
mov
fmul
std
xchg
fcomp
xchg
(bad)
xchg
stos
shl
int
mov
aam
or
out
xchg
std
jae
in
pop
icebp
mov
lds
jne
fs
cmps
not
mov
jmp
ret
cmp
xlat
push
dec
push
jg
call
shl
mov
xor
jmp
aam
jnp
sub
or
pop
cdq
aad
scas
inc
sbb
jbe
dec
or
aad
fcomp
xlat
arpl
jecxz
mov
or
pop
imul
loope
les
dec
push
shl
xchg
enter
inc
ss
stc
mov
adc
int3
mov
mov
rcl
dec
adc
js
aam
test
jmp
repnz
mov
push
jno
xor
inc
aaa
dec
mov
xchg
adc
ins
sub
cs
les
test
push
icebp
inc
das
jbe
and
call
pop
mov
jmp
movs
fnstsw
jmp
xchg
cmc
xchg
(bad)
xchg
lods
dec
jnp
sbb
cmp
cdq
into
xchg
clc
(bad)
mov
nop
shl
pushf
inc
jecxz
push
leave
or
cdq
movs
aad
bound
and
and
cmp
jl
pop
inc
sbb
out
cdq
and
pop
jbe
or
ins
loope
shr
jne
add
icebp
inc
adc
xlat
mov
(bad)
mov
out
pop
adc
mul
sub
jbe
jge
int
xor
xor
outs
or
(bad)
mov
test
push
and
dec
xor
or
sahf
mov
xor
push
add
cdq
iret
mov
enter
sub
pop
adc
out
add
xchg
cmc
ja
jns
and
and
sbb
inc
out
mov
jmp
mov
imul
jp
inc
cmps
cmp
je
xchg
sar
mov
jle
push
cmp
dec
push
jle
add
hlt
outs
fwait
ds
cmc
xchg
fist
pop
add
lods
sbb
dec
adc
jmp
gs
xchg
add
out
lods
int
fstp
inc
jo
je
nop
(bad)
shr
mov
pop
adc
xor
sub
pop
pop
cmp
iret
out
cmps
inc
push
adc
imul
call
jo
arpl
jge
ins
das
inc
cmp
aam
mov
ins
or
jg
jl
or
adc
and
push
loopne
mov
push
sbb
cli
outs
scas
cmc
imul
sbb
mov
dec
sbb
clc
jnp
iret
clc
imul
(bad)
out
adc
shr
scas
jne
cmps
aad
repz
cmp
jbe
xor
inc
sub
dec
or
and
cmp
and
sti
mov
add
aam
retf
jns
scas
lods
fstp
cli
in
call
pop
adc
or
push
xor
mov
mov
xchg
lock
ss
dec
sbb
and
dec
movd
push
cmp
addr16
ret
xchg
enter
test
mov
mov
push
jmp
loope
retf
movs
aad
ret
xchg
int3
mov
mov
outs
xor
(bad)
push
sbb
dec
xor
cmp
pop
and
xor
xor
sar
js
das
mov
aam
out
aam
enter
cmps
inc
inc
sbb
push
adc
mov
cmp
inc
aaa
ror
and
scas
and
shl
jns
mov
sbb
add
pop
inc
mov
cmp
pop
mov
movs
call
call
add
adc
shr
aaa
aaa
pop
xor
mov
adc
cld
xchg
gs
loope
inc
mov
xor
enter
push
push
add
and
out
sbb
and
inc
sub
lahf
icebp
bound
cmps
retf
xchg
stos
dec
sub
add
fs
jbe
dec
or
or
push
inc
xor
fstp
cmp
inc
push
inc
(bad)
push
repz
sti
sbb
sbb
push
mov
icebp
mov
mov
dec
add
or
jbe
mov
dec
push
pop
add
pop
sub
pop
dec
add
adc
dec
sub
jns
fisub
inc
cs
mov
(bad)
fldcw
js
mov
push
ins
adc
hlt
mov
mov
mov
bound
pop
add
or
imul
scas
mov
leave
mov
neg
xlat
cwde
(bad)
call
push
out
fwait
pop
ss
push
repnz
push
std
pop
push
std
aas
sub
and
cmp
jnp
push
xor
outs
pop
popa
and
enter
aad
sar
(bad)
(bad)
mov
fcomp
mov
and
fstp
pop
xor
dec
adc
xlat
cmp
dec
(bad)
into
mov
int3
mov
xor
pop
cs
xor
inc
xor
push
sbb
dec
sbb
sbb
mul
rol
imul
outs
pop
push
push
clc
fwait
cli
cdq
std
xchg
jne
jmp
fisub
pop
bound
and
scas
retf
xchg
cld
xchg
mov
test
xor
jnp
mov
lds
push
xor
push
ss
pop
inc
sbb
push
aaa
and
cdq
cmps
inc
(bad)
mov
inc
or
pop
jb
and
enter
inc
mov
cmovl
jns
stc
mov
outs
mov
push
jmp
inc
movs
daa
jl
mov
fwait
neg
and
mov
shl
imul
cmp
ss
xor
imul
in
and
sar
sub
jo
stos
test
popa
inc
(bad)
fadd
mov
popa
xor
jae
jp
sub
push
cmp
adc
inc
das
pop
aas
das
shl
dec
add
mov
pushf
xlat
mov
mov
mov
into
add
test
outs
and
or
mov
mov
fwait
std
sub
cmp
sub
inc
ss
mov
mov
cmp
jle
inc
xrelease
bnd
xchg
jne
out
add
imul
aas
fcmovne
fs
sbb
push
adc
outs
(bad)
push
jl
push
sub
or
cdq
rol
clc
mov
mov
xchg
hlt
outs
pushf
add
and
rcr
xchg
fmul
inc
sbb
sbb
add
call
sti
sub
test
xchg
xor
ror
mov
mov
xor
xor
pop
jmp
dec
add
pop
jne
js
data16
pop
daa
es
loop
fist
test
fidivr
neg
dec
xchg
call
shl
mov
xchg
(bad)
sub
int3
sub
pusha
adc
call
je
xor
push
or
dec
adc
pop
push
push
stos
mov
sbb
and
ins
loope
fistp
inc
out
mov
or
cmps
es
or
mov
clc
sbb
lods
fnstsw
cmp
or
jnp
dec
sbb
jge
and
sti
in
mov
mov
pushf
cmc
outs
mov
jo
hlt
je
pop
push
push
mov
shl
jmp
lahf
mov
dec
repz
xor
and
out
pop
outs
cmp
or
jl
repnz
add
inc
add
loope
retf
sub
jle
xlat
cmp
jns
push
dec
or
jb
mov
xor
in
gs
dec
adc
retf
inc
out
push
and
(bad)
add
icebp
popf
std
push
mov
enter
or
ja
sbb
aad
int
mov
stos
mov
daa
ret
cmp
call
sbb
pushf
hlt
adc
sub
fidiv
pushf
shl
(bad)
xchg
retf
mov
xor
adc
enter
lahf
fwait
cmc
sahf
sar
mov
xchg
outs
xor
fwait
popa
in
aad
int
inc
lock
shl
rol
stos
shl
aaa
imul
sbb
cmp
mov
and
sub
jp
adc
jb
ret
adc
pusha
cwde
xchg
stos
data16
pop
and
aas
jp
je
bound
xchg
out
adc
movs
aam
loope
retf
test
pop
xor
imul
xor
pop
xchg
(bad)
cmps
rol
add
push
mov
ja
pop
xor
push
sbb
outs
push
pop
or
(bad)
lock
dec
sbb
pop
cmp
popa
adc
cmc
mov
inc
jmp
out
cmps
shr
dec
subps
inc
cmp
fwait
stc
push
or
shl
cmp
add
gs
mov
leave
dec
sub
iret
out
les
mov
sub
lock
adc
mov
sar
int
pop
es
or
jbe
mov
imul
xchg
fist
or
fstp
outs
mov
je
jge
and
jl
and
sti
rcl
add
fadd
pextrw
cmps
ret
mov
push
div
mov
das
and
ror
xchg
clc
mov
jp
bound
push
xor
xadd
pop
sub
mov
dec
mov
xchg
stos
icebp
jle
aas
inc
sub
mov
imul
jo
inc
xchg
mov
cld
mov
data16
mov
imul
mov
add
(bad)
popa
add
dec
xor
sbb
shl
mov
mov
adc
mov
aam
ficom
in
xchg
aam
int3
xchg
inc
scas
retf
stos
leave
lods
in
mov
cmc
mov
jmp
sub
outs
loop
lds
(bad)
mov
cmp
push
push
clc
aaa
sub
jno
jnp
dec
or
cmc
dec
adc
adc
xchg
repz
std
xchg
mov
movs
(bad)
xchg
jnp
leave
mov
aaa
pop
cmp
jle
push
stc
test
(bad)
xlat
mov
mov
mov
mov
sub
cli
fwait
leave
cs
mov
(bad)
mov
outs
adc
push
adc
bnd
cmc
inc
ss
push
cmp
jmp
fnsave
rcr
sar
sbb
cwde
inc
xor
iret
(bad)
adc
and
add
dec
out
sbb
stos
adc
ins
adc
and
repnz
fld
loopne
jp
inc
mov
mov
push
pusha
loope
rol
je
pop
repz
shl
fidiv
rcl
popa
out
cwde
jmp
popa
or
in
adc
jle
mov
ins
sub
push
or
jl
and
retf
clc
xchg
xor
int3
pushf
stos
push
hlt
xchg
(bad)
popa
xchg
or
stc
stos
fsub
dec
jmp
(bad)
xor
jg
imul
and
jno
ins
adc
lods
fstp
pop
loope
jp
mov
mov
ins
xor
jne
jle
xchg
int
fst
out
iret
xchg
rcl
ror
fstp
push
ja
js
pop
or
les
repnz
repnz
cs
cmp
inc
cmp
(bad)
mov
cli
mov
push
push
loopne
(bad)
adc
or
push
mov
push
cmp
or
(bad)
mov
movs
cli
sub
cmp
mov
sbb
jae
xor
fild
lds
sub
add
sbb
jne
cld
xchg
repz
imul
mov
push
dec
sub
xor
fdivr
and
punpckhwd
mov
or
or
arpl
test
movs
in
mov
and
dec
cmp
sub
dec
add
mov
dec
xor
inc
mov
jb
xchg
cld
jae
push
inc
sbb
adc
inc
push
xor
pop
mov
jmp
jne
adc
sub
leave
mov
test
stos
mov
push
sub
or
xor
jmp
ret
xor
dec
or
icebp
xchg
ret
and
mov
jb
adc
mov
pusha
jbe
sub
mov
or
cmc
adc
ss
arpl
inc
mov
mov
add
cmp
ins
and
xchg
fdiv
push
or
fadd
int
mov
cmp
lea
add
js
repnz
sti
test
sbb
jmp
mov
dec
add
cmp
shl
or
mov
xor
fnstsw
dec
loop
fcom
adc
fsub
ret
mov
inc
xor
mov
inc
xchg
push
loop
pop
or
js
dec
sbb
int
stos
dec
sub
cmps
(bad)
cmc
popf
retf
cdq
inc
jecxz
rcl
add
mov
ficom
dec
scas
ret
xor
fstp
mov
adc
dec
add
or
adc
cdq
(bad)
cmp
xlat
fsub
cmps
cld
mov
imul
pop
inc
mov
inc
sub
or
push
cmp
je
imul
loop
cmc
xchg
in
popf
pop
add
and
ds
retf
push
loopne
rol
outs
and
jmp
and
out
push
cmp
sbb
ja
cmc
jae
ret
sahf
pop
retf
mov
cwde
in
xchg
retf
test
cmovs
mov
or
movs
shl
iret
test
test
cs
mov
mov
dec
add
not
xchg
mov
scas
stc
sbb
inc
cmp
enter
or
pusha
and
sahf
aam
movs
push
add
dec
xor
add
rol
adc
clc
xchg
ror
jbe
pop
loopne
sar
inc
cmp
push
xor
sub
inc
and
pop
das
jnp
in
xor
retf
sbb
inc
movs
sub
jnp
push
pop
inc
sbb
ret
scas
std
mov
or
push
aaa
jl
xchg
jb
pop
sub
sbb
cld
mov
sub
push
dec
push
push
adc
loopne
inc
mov
outs
xor
or
mov
loop
aad
cmps
retf
mov
shl
mov
(bad)
mov
mov
pop
data16
or
mov
mov
dec
or
pop
out
int3
mov
mov
add
dec
add
pop
adc
std
imul
adc
push
test
mov
adc
ins
and
push
add
jmp
dec
mov
push
sub
sbb
lods
call
cmc
mov
or
inc
push
inc
(bad)
aam
test
loope
out
imul
es
xchg
shl
dec
xor
imul
sbb
add
cmp
push
add
adc
xor
and
pop
addr16
and
stc
mov
add
fst
jns
inc
cmp
jb
dec
movs
out
mov
lods
stc
mov
add
xchg
lods
ficomp
aam
cmc
pusha
adc
and
cmp
ret
mov
jb
inc
scas
add
out
bound
addr16
ficomp
shl
jne
into
jnp
pusha
sbb
cdq
hlt
test
add
mov
pop
sbb
aad
and
icebp
xchg
icebp
ins
xchg
adc
xor
sar
jmp
mov
push
adc
add
adc
sbb
cdq
out
gs
es
xchg
out
int
mov
mov
imul
xor
repz
xchg
rcl
dec
in
out
call
popa
sbb
mov
xor
jo
retf
rcl
out
scas
int3
sahf
inc
xor
shr
outs
das
pop
or
out
lods
retf
add
jecxz
leave
fwait
inc
sub
mov
cld
jge
jae
mov
xchg
rol
js
mov
mov
(bad)
cli
cwde
iret
aaa
and
jo
mov
mov
xchg
xlat
or
sbb
outs
and
jge
pusha
xchg
cmc
cmp
dec
and
or
mov
(bad)
stos
cmps
dec
in
push
or
lods
fiadd
inc
pop
and
rcl
cmps
ret
bound
icebp
jl
test
push
sub
sub
jl
test
leave
jb
sbb
cdq
adc
retf
xlat
mov
push
cmp
test
pop
into
xchg
mov
xor
test
inc
lods
mov
jno
call
cdq
rcl
cdq
icebp
adc
stc
mov
xchg
test
call
ins
or
xchg
mov
push
dec
xchg
mov
add
add
push
sub
jge
xchg
movs
dec
ret
lods
int3
cmp
bound
jp
xor
dec
call
test
adc
hlt
out
push
and
inc
adc
mov
pop
inc
add
iret
test
push
and
pushf
stos
js
adc
add
ror
call
jne
bound
fnstcw
pop
or
push
out
mov
xchg
lods
push
fidivr
sbb
push
xor
cmc
ja
cmp
push
lods
pusha
sub
jno
mov
lods
ins
mov
jg
push
mov
jle
jne
jo
inc
mov
add
and
inc
int
test
push
clc
mov
add
fwait
mov
mov
js
pop
dec
mov
gs
or
inc
cmps
xor
push
add
push
add
push
xor
rol
call
xor
and
xchg
sub
sub
adc
xchg
add
mov
xchg
push
outs
inc
adc
movs
aam
sbb
dec
adc
pop
push
repz
xor
pop
in
mov
fistp
pop
cmp
cmp
xor
push
pop
push
jmp
push
and
call
inc
ss
inc
pop
push
xor
ins
adc
sub
or
shl
fsub
mov
pusha
and
into
and
xor
jo
sbb
(bad)
push
adc
and
fwait
in
jns
int3
outs
aaa
jg
fistp
scas
sar
mov
sub
jo
out
xor
repz
push
pop
cdq
sahf
aam
idiv
pop
jb
and
cmp
mov
mov
add
jne
push
shl
xor
enter
(bad)
das
jg
inc
adc
xchg
fld
(bad)
rcl
or
sub
dec
sub
and
push
push
iret
cmp
data16
iret
xchg
jnp
int
cmps
dec
push
pop
cmp
dec
push
(bad)
enter
and
pop
out
jecxz
iret
xor
ins
sbb
pop
sbb
out
shr
clc
mov
fld
adc
dec
xor
mov
fimul
sub
mov
jb
gs
push
inc
ds
movs
imul
cwde
cli
or
ror
fistp
rol
fidivr
cmps
popa
gs
dec
cmps
cmps
movs
fidivr
mov
push
dec
xor
or
fmul
xchg
fs
xlat
mov
xor
nop
(bad)
and
sti
sub
sub
aad
jns
into
out
xchg
clc
xchg
cmp
push
cmp
aad
dec
sub
push
mov
inc
sbb
push
push
(bad)
mov
add
retf
cmps
lods
dec
sub
sub
jl
leave
sub
hlt
xchg
xor
ins
push
jnp
sub
retf
sbb
mov
mov
mov
or
xor
sbb
or
(bad)
dec
das
pop
call
jne
xchg
push
mov
scas
stos
fstp
jo
pusha
test
xor
xchg
cdq
scas
mov
mov
out
repz
inc
aas
sub
mov
mov
cwde
fld
ja
jo
mov
jae
fistp
pop
mov
call
jnp
xchg
cmps
movs
fild
loopne
loop
jb
sub
jb
ins
lods
sahf
mov
pop
sbb
cmps
rcl
in
dec
sbb
xor
pop
or
lods
in
push
jo
fld
jbe
lock
push
add
xchg
push
add
imul
or
mov
clc
aas
cmc
or
mov
outs
ja
inc
sbb
sbb
daa
cli
xor
mov
cmp
cmp
popa
les
jge
iret
or
dec
pop
jo
mov
adc
mov
in
adc
add
fadd
retf
aas
test
jb
jmp
shl
mov
fs
out
das
ja
mov
mov
rcr
adc
and
jmp
mov
stos
or
outs
ret
in
lea
dec
not
movs
sbb
jns
movs
fs
repz
aam
dec
loope
sub
popa
mov
lea
fsub
sbb
dec
test
inc
test
mov
sub
cmp
mov
ret
and
xchg
xchg
es
nop
dec
push
pop
retf
movs
dec
aas
jb
daa
or
jne
adc
fld
rol
out
data16
repnz
push
pop
sub
aam
xor
imul
test
jle
dec
push
sbb
leave
cmc
clc
add
popf
test
jl
cmp
add
repz
lods
fsubr
ret
sbb
sub
imul
enter
dec
jecxz
jge
push
cmp
jbe
(bad)
rcl
and
jle
inc
cmp
cdq
mov
or
and
or
rcl
cdq
pop
das
stc
fisttp
lods
xchg
in
mov
(bad)
iret
test
shl
fadd
shr
rol
mov
adc
cmp
test
mov
and
mov
dec
sub
dec
mov
jg
lahf
clc
mov
retf
in
push
mov
push
jg
stos
mov
mov
aas
stc
mov
cmp
lds
out
fnstsw
lock
test
(bad)
jb
enter
cmps
cli
mov
xlat
cmp
cmp
inc
sbb
pop
call
retf
xor
pusha
clc
outs
adc
(bad)
aad
push
jne
fld
or
hlt
jmp
xchg
das
popa
out
push
icebp
lahf
mov
(bad)
mov
lahf
stos
je
lods
push
xor
xor
and
popa
lea
fndisi(8087
dec
mov
jmp
fiadd
sub
sub
pop
dec
rol
bound
push
(bad)
shl
push
fisttp
and
mov
pop
aas
xchg
mov
push
dec
es
sbb
aad
mov
stos
scas
push
xor
add
jmp
into
adc
dec
sbb
ins
jb
(bad)
movs
sub
push
mov
ror
sbb
and
(bad)
cmp
aad
mov
inc
cmp
push
sub
xor
rcr
outs
mov
nop
xchg
add
xchg
xor
movs
jmp
sbb
stc
aas
outs
sbb
jmp
fs
and
push
cli
es
call
bound
lds
(bad)
cmp
(bad)
mov
jmp
xchg
jmp
xor
push
push
push
mov
cmp
cmp
imul
rcl
xchg
push
fisttp
inc
push
cmp
shl
xchg
sub
xlat
stc
xor
int
call
leave
cmp
test
push
adc
ins
xchg
adc
aaa
daa
inc
mov
hlt
stc
adc
lea
and
jno
ins
inc
add
js
and
mov
shl
push
call
out
xchg
int3
loop
movs
push
sbb
mov
cdq
ins
inc
mov
ins
sub
into
jno
jmp
scas
cmp
pop
ja
gs
adc
jge
mov
aas
jmp
mov
jmp
push
pop
ds
adc
cli
sub
ins
loopne
xor
cld
aam
in
fisttp
pushf
cmc
scas
cmp
xchg
pop
lods
imul
enter
(bad)
lock
jp
or
jmp
inc
inc
(bad)
ja
dec
xchg
adc
push
and
dec
ret
push
cmp
sahf
bound
xchg
ins
retf
inc
jmp
fxch
pop
aas
popa
dec
hlt
and
sub
xor
cmp
and
or
lods
call
add
call
push
add
inc
sti
xchg
jo
mov
pop
xor
in
xchg
jne
mov
inc
push
enter
or
bound
test
les
ds
imul
pop
fcomp
loopne
pop
inc
popf
sub
push
movs
cli
cli
xchg
stos
cmp
xor
cmp
inc
or
or
sbb
and
sbb
mov
cmp
sub
lock
xor
out
out
jmp
popf
repnz
jmp
adc
nop
mov
and
inc
rcl
rol
jmp
jnp
mov
cs
pop
in
mov
into
cld
mov
mov
ds
push
jmp
sub
test
jge
xchg
jmp
mov
add
pusha
inc
icebp
push
and
dec
ror
scas
repnz
ss
push
(bad)
jmp
mov
sub
add
push
in
pop
add
dec
aad
dec
dec
xor
pop
lock
ret
mov
add
push
test
out
div
pop
aaa
cli
push
loopne
outs
xchg
adc
adc
test
ss
add
and
mov
(bad)
cli
hlt
out
icebp
pop
es
fisub
push
mov
and
popf
pop
dec
push
bound
or
and
(bad)
repz
lea
(bad)
cdq
ret
push
xchg
add
dec
mov
dec
adc
aad
and
push
jne
sbb
mov
cmp
xlat
in
dec
scas
jo
sbb
jp
icebp
push
xchg
sub
or
mov
pop
loop
dec
test
sub
dec
add
stos
mov
mov
ret
inc
push
adc
dec
mov
sbb
shr
pop
iret
rol
fcmovnu
sub
pusha
jb
push
push
(bad)
mov
rcr
mov
push
add
retf
js
xor
pop
sahf
and
add
inc
aas
inc
lea
mov
mov
dec
stos
cdq
jle
out
(bad)
xor
jo
mov
jnp
push
xor
lods
dec
jnp
popf
xlat
cmc
stc
and
xchg
pop
movs
loop
fld
push
fistp
mov
out
or
xchg
repnz
out
movs
pushf
dec
sub
inc
shl
adc
jno
mov
xor
or
into
push
lock
add
sbb
inc
push
jl
push
fnstenv
mov
pop
gs
pushf
mov
ret
pusha
popf
jle
dec
xchg
adc
push
add
fst
les
ds
scas
arpl
jge
or
xor
ss
ja
push
xchg
loopne
jp
sub
(bad)
and
pusha
mov
adc
call
sti
les
xor
or
jo
sbb
inc
sub
retf
xor
retf
ss
js
adc
imul
pop
div
mov
or
in
stos
pusha
xor
lea
mov
pop
inc
ficomp
adc
xchg
or
fs
cwde
jp
cwde
lea
pushf
rol
bound
hlt
mov
push
test
or
fld
outs
and
out
mov
fiadd
into
adc
xor
pop
arpl
jbe
imul
pop
xchg
sub
fdivr
popf
mov
(bad)
dec
mov
mov
js
popf
jne
aad
mulps
sbb
cmps
aad
pushf
dec
test
adc
xor
rcl
jnp
cmp
cdq
sti
stos
mov
push
xor
cdq
stc
call
pushf
pop
sbb
mov
jge
in
hlt
push
mov
(bad)
inc
(bad)
in
add
inc
jb
sub
push
sar
push
lods
popf
and
mov
outs
inc
mov
push
mov
in
bound
fchs
mov
pop
xor
retf
mov
sub
ds
xchg
adc
inc
cmp
pop
dec
push
xor
inc
push
dec
stos
xor
pushf
nop
or
test
jmp
inc
in
jl
adc
jg
repnz
movs
loop
mov
xor
xor
push
jp
into
fwait
xchg
mov
jbe
rcr
aaa
mov
mov
test
pop
dec
lods
and
call
iret
jecxz
sahf
sub
sbb
mov
out
outs
xchg
cmp
and
retf
int3
mov
dec
sbb
dec
scas
and
std
mov
in
loope
stc
das
sub
pusha
inc
(bad)
out
fs
shr
popf
ja
ds
dec
sti
and
cwde
sub
out
pop
or
adc
ds
xchg
sub
in
mov
mov
cmp
jle
iret
pop
std
jmp
mov
cmp
icebp
fucom
les
jo
dec
inc
xchg
adc
and
(bad)
jl
mul
inc
scas
sbb
mov
jb
cmps
xchg
test
enter
ins
or
mov
jg
jge
xchg
or
movs
pop
sti
sti
frstor
loopne
jmp
mov
dec
inc
movs
fld
cwde
xchg
test
or
ss
cmp
and
into
or
mov
mov
je
mov
loop
ja
jg
in
stos
add
fs
stos
cmp
sub
int3
rol
ret
bound
xlat
pop
cmp
sub
out
push
shr
push
scas
xchg
arpl
aam
mov
in
adc
int
dec
mov
and
push
add
inc
test
xchg
push
mov
scas
adc
lock
dec
clc
dec
pushf
aad
pop
cdq
adc
pop
jle
scas
rcl
mov
inc
push
cld
(bad)
or
mov
pop
push
add
lahf
clc
mov
je
fdiv
pop
repnz
pop
dec
loope
sar
add
cdq
pushw
push
sub
jl
xchg
call
lods
aaa
jnp
dec
add
test
mov
(bad)
adc
xor
dec
dec
imul
push
repnz
mov
fbstp
pop
cmc
clc
rcr
dec
or
sub
inc
int3
out
ror
push
pop
or
call
hlt
jno
out
call
cmp
adc
out
shr
sbb
fdivr
int3
sar
ret
adc
in
add
and
mov
outs
cmps
xor
add
jns
pop
mov
call
mov
rol
xchg
xchg
push
add
adc
repz
ja
dec
bound
clc
inc
(bad)
push
sub
cdq
shr
lahf
adc
xor
scas
test
stos
sub
and
lock
xor
aad
int3
inc
lds
sub
pusha
xchg
xchg
int
pop
scas
push
pop
mov
fistp
into
cmp
jle
dec
and
xor
aas
sbb
adc
neg
inc
jl
or
pop
inc
xor
jmp
in
mov
test
and
dec
xchg
mov
retf
(bad)
dec
jbe
mov
jg
ins
dec
add
(bad)
mov
fild
sub
(bad)
stc
or
mov
aad
dec
cmc
pop
pop
js
pop
mov
pusha
sbb
or
xor
mov
mov
mov
jge
test
mov
ror
rcr
adc
cmp
ja
(bad)
jae
push
and
fwait
add
pushw
jae
add
sub
push
fcom
fidiv
mov
sbb
daa
scas
inc
ja
xchg
adc
cmp
ins
xlat
push
mov
test
jmp
xor
mov
sub
lea
push
sub
(bad)
daa
sub
ror
add
in
mov
cwde
ins
sbb
push
add
lahf
enter
mov
pop
cwde
inc
cld
xchg
cmp
push
rcr
call
lods
movs
dec
sub
jmp
pop
sub
xchg
pop
stos
sbb
cmp
pop
mov
rcr
loop
icebp
aad
mov
test
cmp
stos
sbb
cld
sbb
adc
dec
jg
aas
add
mov
xchg
lods
mov
out
push
push
rcl
mov
not
or
cmp
cmp
add
test
sub
dec
ficom
cmp
aam
and
adc
dec
jo
and
and
push
sbb
jo
push
push
and
xor
pop
call
stos
test
cmp
mov
gs
adc
add
pop
aam
ins
inc
movs
jns
dec
push
mov
jns
movs
addr16
(bad)
enter
ror
xor
bound
leave
adc
xor
shl
mov
xor
xchg
add
rcr
push
pop
inc
sbb
ins
ins
iret
dec
cmc
lea
mov
pop
sbb
in
nop
push
inc
in
rol
hlt
lods
cwde
mov
aas
jno
jmp
sbb
xor
pusha
sbb
push
adc
popf
test
js
lds
cmps
mov
xor
icebp
ror
clc
jbe
(bad)
and
shl
pop
rcr
cmp
add
jnp
pop
bound
xor
xor
sar
jns
sbb
and
movs
mov
mov
inc
jno
call
out
push
push
mov
call
or
lds
mov
sub
mov
push
jmp
test
inc
mov
sbb
call
add
cmp
xor
loopne
cmc
jmp
mov
add
push
je
inc
movs
iret
sahf
pushf
push
call
adc
ins
jmp
push
icebp
das
ja
adc
out
xor
out
lock
sub
lahf
pop
outs
lahf
outs
sbb
aad
sub
std
pop
push
adc
cmps
adc
inc
cwde
inc
fisub
cmps
aaa
gs
mov
scas
(bad)
in
cwde
jno
rcr
stc
rcr
add
inc
xchg
fs
or
lods
je
push
xor
pop
es
mov
push
das
inc
push
test
push
jae
stos
pop
push
jp
in
shr
lea
adc
jno
icebp
or
push
jge
jbe
repz
mov
xor
dec
fmul
jb
add
mov
es
dec
mov
data16
mov
scas
lods
out
mov
test
xchg
or
push
int3
mov
mov
fcmovnu
je
pop
adc
fdiv
or
add
pushf
push
ja
jle
rcl
xlat
shl
mov
sti
aad
in
outs
xchg
jae
not
dec
scas
outs
(bad)
jbe
jmp
dec
outs
jg
loopne
or
sub
or
ss
aas
mov
or
dec
adc
fs
in
into
mov
dec
mov
xor
std
push
and
sub
add
adc
ja
sbb
sbb
jne
icebp
inc
inc
imul
mov
dec
xchg
je
js
mov
or
loop
ins
repnz
mov
and
dec
ror
sahf
movs
das
push
pop
mov
add
ror
icebp
call
clc
inc
sbb
(bad)
cli
nop
mov
test
sahf
jp
jl
or
(bad)
ds
sub
lods
cld
inc
mov
into
in
push
dec
xor
int
mov
nop
jns
push
nop
fistp
jmp
mov
add
fild
call
dec
sbb
sub
dec
(bad)
call
(bad)
mov
mov
fsubr
add
shl
mul
pop
sahf
fisubr
pop
call
addr16
in
inc
xchg
out
popf
dec
loop
gs
aam
inc
pop
mov
mov
xor
sti
xchg
aaa
add
sbb
in
mov
xor
icebp
push
sbb
cld
loope
dec
inc
push
xchg
ds
pop
sub
jns
je
push
jo
call
xchg
sub
ret
loope
and
dec
mov
ss
(bad)
sbb
retf
mov
mov
cdq
mov
das
mov
call
jl
lods
sbb
mov
adc
rcl
mov
xor
adc
add
xor
test
jmp
ror
push
fidiv
cmps
call
fdiv
xchg
mov
cmp
xchg
jmp
jo
add
mov
push
xor
pop
shl
mov
jno
lods
xor
xchg
xor
or
jg
xchg
dec
and
xchg
xlat
xor
rcl
mov
jle
and
or
das
cwde
or
inc
fisub
sub
gs
out
lock
mov
and
arpl
jg
adc
push
cmovbe
mov
aam
test
cld
fldcw
jb
prefetcht2
jg
fisubr
arpl
test
lods
scas
clc
fist
popf
jge
and
cmp
and
xchg
leave
fcomp
lods
nop
test
(bad)
stc
nop
mov
(bad)
cmp
push
call
enter
sbb
fnstenv
mov
rcr
arpl
or
jmp
shr
fldcw
leave
mov
sbb
jl
enter
xor
std
push
sbb
lods
xor
cdq
and
lock
idiv
call
cmp
lods
adc
pop
clc
out
sbb
inc
xor
int3
and
and
shr
mov
push
sbb
movs
loope
aad
fs
mov
add
stos
cmp
mov
adc
js
inc
inc
push
neg
sub
popa
jb
ins
shl
xor
(bad)
jo
(bad)
call
lea
sub
not
jo
lods
push
cwde
daa
adc
jmp
(bad)
dec
or
retf
scas
pop
retf
gs
mov
in
pop
jae
sti
repnz
les
loope
xchg
repz
popa
pop
retf
push
adc
rol
push
or
and
or
inc
ja
inc
movs
or
jns
idiv
mov
stc
lds
imul
and
xor
cdq
mov
xor
gs
enter
push
xor
movs
xor
ficomp
cmp
xchg
sar
mov
xchg
pop
adc
dec
fild
lahf
mov
ss
fsub
push
adc
or
imul
mov
js
xchg
aas
add
or
add
dec
pop
jno
push
mov
das
add
mov
ins
cli
sub
sub
and
cmp
xchg
movs
gs
and
fiadd
sbb
fcmovbe
inc
mov
outs
xor
mov
es
pop
mov
add
pop
mov
stos
mov
mov
shl
mov
push
cmpps
mov
mov
ror
sub
pop
cdq
cld
or
xor
ror
and
xchg
fcom
inc
ror
aad
enter
fistp
xchg
push
push
push
jbe
sub
dec
mov
push
imul
pop
pop
mov
xchg
loopne
out
jle
(bad)
in
addr16
int3
jmp
call
or
mov
pop
cld
xchg
jg
sub
add
retf
stos
pop
pop
xchg
outs
mov
push
push
fxtract
imul
mov
pop
daa
mov
dec
cmc
jbe
(bad)
adc
dec
adc
repz
shr
mov
not
in
inc
pop
push
xor
jno
add
sbb
call
jo
add
add
xchg
push
add
jae
lods
sahf
xlat
dec
push
adc
mov
lods
aad
sbb
mov
shl
jno
movs
mov
or
test
sbb
ret
scas
popa
or
jnp
nop
mov
inc
mov
jge
jmp
pop
aam
bound
lock
or
fild
mov
push
(bad)
jmp
sbb
aaa
sbb
movs
sub
mov
add
rcr
xchg
mov
and
call
fist
xlat
mov
dec
cli
mov
mov
sbb
mov
pop
ficomp
push
add
pop
cmp
lods
xchg
aam
sbb
ficom
sti
sahf
jo
sub
fwait
data16
xchg
push
shr
dec
in
popf
mov
and
mov
popf
iret
inc
adc
mov
adc
test
xor
sti
sub
aad
adc
xchg
je
ror
iret
sub
cmp
test
push
ins
int3
(bad)
xchg
shr
dec
sub
mov
add
and
and
aam
add
lods
mov
xor
ror
push
enter
pop
sub
or
lea
cmps
mov
push
mov
cwde
fld
or
mov
imul
add
outs
sbb
cmc
jne
les
fnstcw
enter
pcmpgtw
xchg
xchg
aam
dec
test
jns
or
fsubr
lods
call
xchg
cli
pop
adc
pop
cmp
pop
lds
repz
xchg
jle
jmp
dec
mov
jnp
mov
rcl
nop
dec
push
adc
mov
cmps
mov
inc
aam
mov
call
aas
pop
jmp
dec
mov
push
lds
xchg
ret
pop
cmp
mov
in
test
(bad)
xchg
mov
sub
xor
test
cmp
icebp
ss
loope
mov
dec
sub
push
leave
stos
pushf
in
dec
and
fs
lock
jno
sti
mov
or
dec
not
add
jmp
pop
out
mov
cld
data16
push
mov
mov
out
(bad)
dec
(bad)
mov
xchg
fcomp
cvtps2pd
scas
popf
fsubr
cmp
mov
ja
in
mov
push
xor
js
lods
outs
sbb
jne
fld
loop
mov
inc
sub
xchg
mov
jbe
dec
and
push
retf
or
call
xchg
aam
pop
sbb
aam
aam
ss
lock
or
mov
fidivr
jbe
std
push
pop
not
shl
popf
cmps
in
or
fbstp
fistp
sbb
pop
aas
ja
not
adc
xchg
lds
jnp
call
pop
aas
cli
xchg
mov
je
cmp
mov
xor
movs
test
pop
fs
lods
or
sub
xchg
mov
dec
and
adc
pop
cmp
mov
enter
sbb
sub
adc
lock
mov
je
jecxz
es
mov
sti
push
gs
popf
bound
add
(bad)
aas
rcl
mov
inc
fnstenv
dec
test
cdq
retf
push
push
add
loop
pop
push
adc
sahf
push
cmp
retf
xchg
lahf
int3
daa
push
lds
and
cwde
mov
xchg
push
mov
add
mov
fst
shl
movs
fstp
add
push
push
rol
or
lar
shl
adc
int
add
push
aad
data16
in
mov
push
xor
jae
loope
aas
adc
fsubr
in
xchg
pop
xor
pop
push
in
cdq
jnp
retf
add
xchg
jle
fiadd
push
mov
and
stos
cmps
out
push
add
push
cmc
mov
not
xlat
scas
(bad)
out
sub
push
mov
inc
add
push
mov
mov
jne
xor
xor
enter
xchg
test
jae
or
mov
cld
jg
into
mov
out
push
rcr
fwait
mov
inc
add
cmps
mov
and
pushf
mov
push
cmp
jns
cmc
push
adc
dec
mov
pop
or
popf
aam
cmp
or
mov
inc
cmp
lahf
inc
or
call
push
push
retf
mov
add
xchg
inc
and
addr16
xchg
mov
mov
cmp
xchg
ins
and
ja
cli
imul
mov
scas
mov
xchg
jne
adc
(bad)
or
nop
arpl
sub
test
cmps
les
cmp
gs
lods
mov
push
mov
dec
sub
pop
cmps
jecxz
pop
shl
test
repz
daa
outs
jmp
shl
pop
pop
add
jb
xchg
and
movlps
mov
int
push
or
rcr
rcl
test
cs
loop
mov
cmp
int
pop
(bad)
aad
dec
cmps
sar
loope
mov
pop
cmp
cld
xchg
mov
ja
repnz
mov
cmps
jo
adc
repz
xor
lea
lahf
lahf
(bad)
xor
mov
push
jge
rol
pop
fmul
loopne
cmps
loopne
or
xchg
js
sbb
jne
mov
add
je
mov
fisub
pop
loopne
mov
mov
fldcw
jns
lods
push
clc
or
mov
and
clc
mov
push
ins
retf
mov
lock
adc
test
pop
adc
sub
je
xchg
test
es
mov
push
or
stos
scas
ficomp
and
aam
js
push
ins
scas
shl
push
mov
jbe
ret
mov
push
add
sahf
lods
iret
jns
jecxz
mov
mov
call
mov
in
mov
not
aad
dec
cmp
(bad)
mov
ret
cmp
cmps
mov
jae
(bad)
mov
jbe
jecxz
inc
sbb
mov
fild
pop
rcl
aam
das
and
ss
fwait
stos
fstp
push
jmp
mov
push
jne
mov
sub
pop
shr
mov
push
sub
push
push
jmp
mov
shl
cmps
les
shl
addr16
or
call
and
ins
leave
mov
and
cmc
cwde
mov
push
jbe
ret
es
sti
mov
es
xchg
mov
pop
fs
add
jns
les
adc
sbb
pushf
stos
enter
cwde
mov
xor
rol
hlt
lahf
arpl
in
mov
cmp
xchg
mov
mov
sbb
test
imul
movs
jo
xor
lahf
fs
push
je
xchg
ins
sub
outs
shl
mov
dec
es
(bad)
cmp
cs
inc
scas
retf
sbb
out
inc
(bad)
mov
out
test
sub
in
and
scas
mov
cdq
fmul
icebp
nop
mov
jno
int
pop
mov
jne
xchg
fwait
loope
imul
jne
cmp
mov
fdiv
test
das
jge
and
push
test
pop
sbb
pushf
mov
pop
cld
test
adc
inc
(bad)
mov
mov
cmp
clc
xchg
mov
sub
int3
dec
and
jl
xor
hlt
ins
push
aas
pop
movs
in
add
mov
enter
add
mov
sti
(bad)
push
pop
adc
lds
sbb
cdq
jbe
sub
idiv
jns
xlat
cmp
xchg
fmul
mov
dec
or
push
shl
jo
mov
fst
jmp
ins
ret
add
daa
dec
fidivr
mov
and
mov
and
sti
add
scas
int3
pop
cmp
jns
xchg
addr16
sbb
rcl
and
mov
mov
xor
cdq
mov
leave
outs
or
imul
sar
out
cmps
mov
bound
add
inc
iret
mov
movs
(bad)
out
and
movs
jl
pop
xor
push
cmp
cwde
loop
aaa
cmp
test
pop
xor
add
xchg
aam
pop
adc
jmp
pop
mov
push
lds
test
mov
xlat
mov
sbb
fistp
je
movs
cdq
ficom
push
fstp
and
sbb
inc
iret
lea
jo
movs
pushf
(bad)
jb
pop
push
jmp
fwait
xchg
in
dec
and
ds
sbb
mov
ror
movs
(bad)
dec
and
jge
int
adc
dec
fistp
xchg
stos
jecxz
aas
sar
icebp
dec
xor
stos
mov
inc
sbb
xchg
nop
in
adc
pop
mov
pushf
in
push
aas
sbb
in
push
push
pop
fdivr
hlt
mov
add
js
leave
dec
add
ins
(bad)
mov
icebp
test
ret
cmp
sub
inc
in
mov
jnp
call
(bad)
fbld
jne
mov
fstp
arpl
xchg
and
add
movs
addr16
cmps
call
and
movs
(bad)
cdq
jmp
mov
push
adc
dec
movs
not
sbb
jns
ror
cmc
xchg
sub
sbb
xchg
sub
ds
xor
xor
pop
mov
es
call
mov
mov
push
mov
je
sbb
mov
mov
xlat
scas
cdq
bnd
rep
lods
call
mov
mov
mov
pop
enter
add
in
cvtps2pd
stos
jl
adc
mov
jno
add
sub
jae
mov
cmp
mov
sbb
mov
aad
mov
pop
or
mov
das
data16
out
cmp
movs
outs
add
out
cmp
dec
jmp
ss
cmp
aad
dec
sbb
jnp
sar
stos
xchg
frstor
test
sub
mov
shr
stc
mov
xor
movs
int
sahf
(bad)
pop
push
retf
das
add
mul
inc
mov
sahf
lock
daa
sbb
fdiv
and
movs
imul
scas
stos
leave
js
repz
and
pop
retf
sbb
imul
inc
mov
add
sub
lahf
imul
inc
fnstsw
add
xchg
inc
cmps
repz
xlat
jbe
std
test
cmp
dec
adc
mov
in
xchg
mov
ins
test
dec
sub
mov
pop
into
lea
lods
sahf
retf
jb
sub
or
adc
mov
jp
icebp
xor
movs
mov
sahf
int
jg
lahf
call
enter
jb
mov
mov
das
les
adc
int
dec
out
cmps
jp
sbb
leave
lods
xchg
leave
pop
or
mov
jns
cmp
inc
fnstsw
and
xchg
movs
out
jl
sahf
mov
and
aad
or
pop
call
xor
lods
addr16
in
and
add
lods
popf
jmp
imul
push
cmp
mov
or
jg
ror
out
mov
and
call
retf
mov
movs
xchg
cmc
cmp
xchg
mov
pushf
mul
mov
ss
sub
jg
cmp
(bad)
jecxz
cmp
mov
hlt
mov
call
cmp
mov
xor
fnstsw
fisub
or
fbld
adc
xchg
(bad)
ficom
xor
test
es
(bad)
mov
add
cld
ss
hlt
mov
cmp
jp
popf
fmul
iret
xchg
ror
lods
xchg
jmp
sub
ins
retf
int3
inc
add
jb
movs
xchg
cli
and
popf
ins
add
repnz
and
imul
fidivr
in
cs
inc
repnz
xchg
ret
mov
xchg
pushf
clc
je
loop
xchg
mul
push
fbstp
movs
out
daa
or
movs
cdq
cli
cmp
cmc
pop
sbb
push
shl
mov
xchg
iret
dec
sbb
in
xchg
imul
jmp
das
push
data16
xchg
unpckhps
mov
cld
test
std
mov
daa
cli
add
sbb
loop
mov
arpl
adc
out
jb
add
cld
add
ret
or
mov
stos
push
lds
in
movs
jnp
repz
push
sub
popf
inc
es
add
cdq
test
add
fdivr
adc
fisttp
xchg
std
pop
sbb
test
in
jbe
push
inc
mov
mov
and
imul
adc
push
cmps
int
pop
lods
cmc
jo
push
jp
mov
ins
push
add
rol
or
mov
stos
jecxz
add
outs
not
add
push
or
cmc
dec
xor
and
(bad)
ja
sti
and
in
pop
int3
scas
xchg
jecxz
repz
cmp
inc
stc
mov
jmp
mov
fs
cmp
ret
mov
jecxz
outs
add
sub
add
xrelease
or
pop
or
fild
outs
(bad)
cmps
out
push
add
mov
sti
ins
push
push
push
cmps
loop
xor
mov
and
movs
into
cmp
(bad)
add
mov
leave
pushf
out
or
adc
sar
cmp
sub
pop
lds
out
mov
cmp
nop
cmp
dec
in
cmp
pop
mov
inc
ss
pop
test
and
dec
sti
cwde
jb
cmc
cwde
movs
iret
jns
loop
mov
cs
mov
cmp
clc
xor
mov
dec
sub
sub
mov
inc
std
scas
adc
push
stos
rcl
shl
ror
cmp
mov
popf
popf
iret
dec
sbb
stos
xchg
xchg
fsub
sbb
cdq
xchg
pop
and
jmp
jb
popf
mov
les
or
mov
cmp
dec
fcomp
mov
pop
or
xchg
mov
jmp
jns
(bad)
jb
xor
rcr
add
shl
inc
ret
(bad)
mov
and
js
rol
mov
cwde
mov
das
ins
loopne
mov
xchg
fnstsw
mov
inc
and
fs
popa
hlt
xchg
jns
add
mov
push
adc
je
test
ja
mov
push
push
test
ss
repnz
cmp
call
daa
inc
adc
mov
pop
test
xor
mov
retf
push
adc
mov
out
mov
pop
fidiv
lea
mov
add
movs
(bad)
cmc
daa
inc
pop
jb
lea
out
xor
mov
(bad)
adc
lock
cmp
mov
push
sar
sub
leave
fwait
addr16
add
jae
jecxz
test
push
sbb
pusha
fild
sub
mov
and
push
mov
inc
sub
sub
mov
pop
pop
or
loopne
and
imul
test
inc
ds
sar
repnz
dec
sub
popa
(bad)
test
jmp
retf
and
sbb
pop
xor
dec
sbb
mov
jecxz
mov
mov
mov
push
mov
js
call
iret
mov
and
js
rcr
cmc
xchg
fs
stos
mov
push
adc
pop
mov
mov
aad
and
xchg
xchg
and
jbe
mov
xlat
mov
loopne
xor
arpl
cmps
popf
out
jl
(bad)
aaa
push
sbb
jmp
inc
in
mov
popf
mov
shl
fcom
in
call
xor
js
pop
jae
mov
lods
enter
pop
movs
mov
jne
in
dec
push
aaa
jne
jecxz
adc
not
pop
push
jbe
mov
dec
xor
test
sbb
test
mov
shl
inc
movs
retf
pop
cmp
mov
dec
xlat
xchg
push
adc
call
cmp
out
pop
and
and
or
imul
test
cs
mov
push
mov
push
xor
jno
fstp
sub
leave
inc
push
adc
mov
icebp
cs
popf
mov
or
jae
std
test
jle
cmc
je
or
mov
xchg
and
nop/reserved
jmp
pop
or
xlat
mov
adc
std
test
sahf
imul
inc
push
enter
push
sbb
xchg
add
inc
mov
and
mov
sub
adc
dec
scas
out
sbb
dec
mov
dec
sub
dec
ret
mov
mov
or
ror
add
inc
mov
pop
push
out
xchg
mov
fwait
mov
xor
mov
icebp
mov
les
push
or
int
jg
cmc
dec
xor
jno
fdiv
out
xchg
jae
push
jnp
jmp
adc
jae
test
shl
adc
sbb
(bad)
dec
or
inc
jmp
sahf
arpl
aaa
pop
ror
test
or
adc
ins
repnz
arpl
pop
call
pop
pop
pop
inc
loope
jae
adc
js
lock
cs
imul
jo
jmp
iret
adc
popf
call
shl
cmp
test
xchg
inc
or
pop
fmul
add
cdq
popf
in
pop
mov
push
push
and
mov
xchg
sub
(bad)
mov
lods
popa
add
pop
stos
leave
outs
push
add
push
adc
inc
adc
inc
lods
into
push
hlt
mov
xlat
mov
or
mov
mov
jo
add
into
mov
pop
sbb
xor
jne
jmp
fbstp
push
pop
cmp
pop
push
jl
(bad)
mov
and
lds
outs
lods
(bad)
jg
adc
cwde
jno
stc
mov
cmp
scas
fnstcw
loope
lods
fadd
outs
mov
call
jns
or
push
out
mov
add
scas
ret
sub
aad
sub
pop
into
xchg
xchg
ret
cld
mov
loop
pusha
repz
mov
or
iret
inc
xor
fs
movs
jae
rol
sub
fs
lock
add
push
fldenv
loop
mov
xchg
std
push
xor
cmp
nop
outs
or
xchg
sub
xchg
cli
inc
sub
pop
leave
mov
aas
ins
mov
xlat
push
sbb
ins
fsub
cld
mov
das
neg
aad
push
adc
mov
add
call
jl
adc
cmp
or
mul
inc
stos
leave
dec
add
pop
ds
arpl
cli
cmp
xchg
mov
push
out
xchg
pusha
daa
sbb
sub
fs
add
jb
adc
xchg
popa
add
mov
add
push
std
nop
mov
or
retf
fld
scas
jecxz
prefetcht2
out
imul
ins
sbb
scas
je
cmp
out
je
add
scas
mov
ins
rcl
ret
scas
inc
or
jae
scas
bound
adc
add
mov
enter
jl
adc
les
dec
(bad)
lods
jb
pop
inc
cmps
out
ins
aas
add
mov
nop
mov
repnz
mov
xchg
stc
pop
cmp
mov
jns
les
sbb
cmc
xchg
cdq
neg
hlt
test
dec
movs
out
sbb
dec
scas
sti
pop
cmp
add
mov
call
fidivr
mov
aam
pop
adc
(bad)
push
cmp
stos
mov
xor
xchg
jae
les
fisttp
cmc
mov
and
sbb
and
in
push
sbb
fisttp
xor
mov
test
xchg
cmps
int
or
inc
mov
and
stos
fistp
jne
fsubr
dec
iret
mov
push
out
into
add
pop
into
mov
or
dec
and
pop
out
sahf
jl
adc
loopne
ja
in
and
cdq
jg
sub
xchg
movs
loope
dec
jmp
sti
ds
mov
cmps
scas
fisub
imul
jl
jmp
mov
outs
add
xchg
push
add
out
rol
ins
out
test
mov
popa
cmp
popa
add
adc
sbb
popa
add
adc
mov
sahf
jno
outs
cmp
stos
shl
mov
xor
hlt
arpl
inc
or
or
mov
nop
clc
fistp
shl
mov
pop
push
dec
cwde
retf
pop
cmp
fwait
shl
jmp
movs
into
dec
sub
mov
xlat
mov
mov
cmc
(bad)
jecxz
jecxz
(bad)
push
jg
nop
shl
icebp
xchg
les
std
lahf
fidivr
loop
leave
movs
fmul
retf
xor
out
xchg
call
inc
and
push
xor
dec
push
imul
sbb
jl
ins
adc
gs
jge
or
lds
adc
cmp
pop
push
push
and
sub
pop
(bad)
mov
cmp
inc
ss
in
cmp
js
dec
cmc
sub
in
rcl
dec
das
dec
test
call
mov
dec
in
add
retf
test
dec
add
cs
aas
pop
(bad)
mov
ins
cmp
dec
ficomp
add
sub
test
xchg
mov
inc
sub
add
adc
add
imul
bound
pop
cmp
pop
cmp
pop
ror
(bad)
bound
inc
das
push
cmps
mov
mov
pop
ss
push
adc
pop
adc
dec
aaa
push
sbb
push
ss
pop
dec
pop
sub
jo
pop
loop
icebp
cmps
cmc
(bad)
mov
xchg
fiadd
mov
mov
sbb
neg
mov
lds
or
or
pop
inc
cs
mov
fldenv
inc
or
pop
xor
aam
mov
mov
inc
loopne
jmp
xchg
cld
dec
or
ja
ins
add
sub
cmc
(bad)
in
stos
loop
fidivr
lds
mov
inc
cld
scas
fimul
adc
ds
sub
pop
xor
test
test
ja
inc
mov
(bad)
mov
test
pop
out
mov
xchg
fdiv
sub
hlt
lods
shl
xor
pop
sbb
xor
arpl
mov
mov
inc
hlt
xchg
test
or
sti
lahf
fisub
mov
mov
mov
stos
cdq
movs
popf
lds
mov
cwde
(bad)
aas
int3
lods
into
mov
bound
jle
adc
and
push
inc
or
xor
inc
and
sub
and
addr16
mov
xor
inc
and
inc
mov
jmp
jmp
sub
call
ficomp
push
aam
std
test
test
fbld
pop
add
and
ja
or
jae
fstp
(bad)
mov
lahf
fcom
cld
test
ss
add
push
rcr
sbb
dec
je
inc
es
pop
xchg
fldenv
out
test
mov
scas
jecxz
aad
repnz
jb
cmp
sbb
adc
mov
ds
add
cwde
leave
mov
adc
jno
lds
adc
add
ins
movs
rol
inc
cmp
jmp
pop
push
or
inc
cmp
jmp
add
daa
dec
mov
movs
loope
or
add
(bad)
call
pop
jecxz
mov
popa
mov
stos
loop
in
fnsave
jge
adc
(bad)
cwde
mov
lahf
rol
in
xchg
rcr
pusha
add
rcr
loopne
mov
mul
fsubr
out
dec
sub
inc
aaa
dec
pop
dec
adc
and
or
sbb
mov
jne
push
sbb
lock
cli
mov
cmp
dec
sbb
xor
dec
add
sbb
xlat
pushf
jmp
jmp
test
push
xchg
out
pusha
out
nop
call
push
mov
cli
mov
cmp
cwde
movs
cmps
clc
mov
or
imul
xchg
das
cs
xor
hlt
popf
iret
xchg
(bad)
sti
mov
stc
sub
dec
ss
dec
movs
les
bnd
cmp
sahf
(bad)
xchg
lods
test
dec
dec
sub
jge
or
(bad)
mov
sub
aam
aam
mov
add
or
leave
push
xor
xchg
fldenv
mov
push
dec
sbb
(bad)
mov
push
out
push
jae
jae
je
jge
jns
loop
retf
dec
add
jnp
aam
repz
(bad)
out
push
arpl
stos
scas
push
aas
push
sbb
add
and
xor
fistp
pushf
jmp
inc
cmp
sub
push
or
mov
sti
outs
das
sbb
in
loopne
adc
mov
mov
jo
dec
loope
into
xor
pop
cmp
mov
cld
xchg
ret
mov
adc
jle
xor
mov
xchg
ror
push
inc
mov
mov
mov
cld
jle
shl
pop
pop
aas
push
add
clc
jnp
jae
aas
and
sub
adc
jb
and
mov
mov
lods
fstp
hlt
xchg
jmp
jmp
(bad)
mov
mov
mov
aam
ss
test
or
aad
frstor
mov
xchg
div
push
rol
stc
mov
ret
das
push
int
scas
cs
aaa
inc
dec
lods
retf
repz
lods
std
mov
jle
lock
cdq
jnp
cmps
into
mov
jns
jbe
xlat
sub
cwde
(bad)
jp
inc
cmp
dec
stos
rcl
mov
out
addr16
popf
into
push
xchg
mov
daa
dec
out
and
icebp
(bad)
loope
lock
shl
xor
paddb
xor
in
lock
cmps
idiv
(bad)
mov
stos
out
pop
and
mov
jmp
loopne
(bad)
mov
mov
cmp
pop
xor
and
stos
jb
outs
call
movs
mov
mov
mov
push
sbb
in
in
xchg
rcr
xlat
popa
mov
mov
pushf
in
mov
into
test
lea
ins
out
cli
or
jo
ins
loope
imul
popa
out
push
data16
loopne
ins
and
inc
add
fwait
add
mov
addr16
mov
leave
xchg
cmps
ficomp
rcl
iret
mov
add
cmp
pop
aaa
dec
xor
sub
pop
hlt
mov
or
cmc
xchg
pushf
imul
add
push
cmp
jge
adc
movs
mov
lods
aad
cli
or
cwde
arpl
sbb
ja
sub
sbb
movs
jle
pop
adc
pop
outs
sub
lahf
(bad)
mov
mov
popf
mov
sahf
mov
call
sbb
mov
test
and
inc
xor
mov
lods
ret
cmps
call
(bad)
stos
in
(bad)
jmp
(bad)
mov
test
mov
mov
fcom
fidivr
hlt
mov
stos
mov
add
adc
push
inc
adc
cmp
adc
out
dec
push
push
retf
pop
add
pop
jge
je
rcr
cmc
xchg
pushf
cld
sub
push
popf
lock
outs
add
jb
jbe
leave
(bad)
lock
cdq
inc
pusha
or
mov
loopne
dec
mov
lock
sbb
js
(bad)
out
fwait
pop
mov
xchg
bnd
pop
jmp
enter
int
adc
(bad)
xchg
fmul
fstp
in
stc
mov
out
rcl
lds
mov
pop
call
in
pop
test
mov
inc
add
cwde
cli
xor
pop
add
mov
jp
rcl
cmps
cli
test
cmp
test
push
in
xor
fnstcw
in
cli
cwde
fbstp
int3
mov
js
pop
repz
mov
xchg
into
mov
gs
jl
jae
data16
xchg
fsubr
sub
mov
jle
and
jge
and
pop
aas
push
and
fstp
pop
ds
lock
retf
lods
(bad)
add
push
dec
xor
ins
xor
dec
ds
ins
scas
shl
xchg
mov
cmc
xchg
std
jne
das
sub
mov
bound
xchg
sti
xor
adc
adc
push
dec
or
test
sub
ss
push
xor
movs
jmp
mov
enter
outs
mov
(bad)
cdq
repnz
adc
lahf
retf
nop
div
test
fdiv
sar
and
add
mov
and
movs
cmps
inc
pop
inc
sub
pop
movs
mov
div
pop
cmp
mov
xor
push
adc
dec
fadd
add
shr
mov
xchg
(bad)
movs
fidivr
cwde
hlt
add
inc
xor
dec
sub
inc
ret
(bad)
mov
sahf
jge
(bad)
pushf
mov
cwde
ficomp
outs
in
inc
cmp
xor
jae
add
add
add
pop
sti
jno
pop
mov
cwde
fiadd
dec
adc
pop
scas
fisttp
mov
mov
xor
es
add
iret
scas
in
and
shr
adc
test
scas
mov
popf
in
mov
call
push
add
cli
xor
loop
sub
and
inc
punpckldq
jb
pushf
stc
and
repnz
enter
movs
shr
cmp
dec
(bad)
cs
xor
inc
out
fdivr
cmps
jl
shl
pop
jp
add
inc
pop
adc
test
xchg
cwde
shl
pop
add
retf
add
es
sub
push
or
ins
add
(bad)
mul
xchg
icebp
mov
outs
cmp
das
jp
sub
push
adc
pop
dec
sub
xor
dec
adc
push
dec
ss
test
ja
adc
(bad)
loope
jmp
push
lock
out
mov
inc
ret
dec
jmp
les
ja
test
cmc
inc
sub
and
jb
retf
mov
sahf
xchg
call
loope
test
xor
fiadd
shr
ins
retf
sbb
push
inc
push
inc
loop
jo
mov
rol
sti
fwait
arpl
cmps
(bad)
retf
fisttp
pop
jb
jbe
inc
inc
and
pop
xor
jge
pop
inc
inc
pop
pushw
push
xor
cs
sbb
inc
sub
imul
into
mov
xchg
retf
pop
(bad)
adc
test
xchg
nop
std
(bad)
shr
fbld
pop
push
pop
xor
sti
cwde
loop
int3
ins
stos
out
mov
pop
push
xor
ja
xchg
ret
inc
add
pop
pop
adc
les
(bad)
mov
pop
mov
adc
sub
add
jbe
and
add
mov
mov
jne
sub
or
loop
loopne
out
lahf
mov
mov
lods
cwde
aad
(bad)
push
in
push
movs
ror
mov
sar
out
loopne
jmp
pop
jno
add
(bad)
pop
aam
retf
fldcw
jbe
aaa
dec
and
sbb
and
push
jns
and
cs
pminsw
pop
jmp
jbe
(bad)
lea
stos
loop
std
popf
clc
popa
add
in
xchg
retf
clc
mov
lods
iret
mov
stos
leave
dec
loope
cmc
jno
mov
leave
jb
repnz
jmp
dec
adc
imul
dec
xor
aaa
add
inc
sub
pop
push
jnp
add
(bad)
(bad)
xor
pop
sbb
cld
mov
xchg
outs
add
sub
pop
sbb
push
pop
cmp
or
and
push
test
arpl
mov
xchg
xor
dec
jno
loopne
jns
pop
sub
test
xor
imul
or
loopne
int3
mov
mov
mov
mov
mov
arpl
mov
cmp
les
adc
lods
ret
push
lods
(bad)
cmps
shl
std
sbb
ins
cmp
adc
mov
nop
out
call
call
and
(bad)
fwait
clc
mov
xor
inc
mov
aas
ins
add
mov
push
inc
adc
dec
into
inc
cmp
dec
sub
add
mov
sub
push
sbb
cmp
and
mov
mov
aas
pop
or
push
add
pop
add
inc
jns
call
push
ret
test
xor
jae
sbb
mov
test
sti
mov
bound
ret
pop
sbb
adc
inc
sub
loop
fistp
scas
sti
mov
push
xor
adc
aam
cmc
inc
sub
mov
mov
mov
mov
mov
mov
iret
lods
(bad)
mov
(bad)
lods
mov
mov
rcl
xchg
out
(bad)
iret
xchg
xchg
xchg
mov
sbb
mov
nop
iret
pop
test
out
sar
fiadd
add
push
sbb
push
aas
and
in
mov
sub
in
(bad)
test
inc
cmp
and
cmp
aas
cmp
loopne
inc
adc
mov
jmp
iret
movs
fisub
pop
mov
or
push
aas
push
cmp
sub
mov
nop
ror
mov
fst
fs
or
add
mov
mov
xchg
fidiv
xchg
sbb
ret
ins
enter
xchg
cmc
mov
je
and
and
mov
popf
cmc
bound
pop
sbb
and
pop
jecxz
shl
sub
sub
outs
packssdw
sub
pop
dec
sbb
sub
popa
sbb
inc
push
pop
push
jmp
pop
and
inc
call
xor
or
enter
int3
rol
adc
jnp
push
xor
dec
sbb
push
cmc
xchg
ficom
fcom
call
xchg
sbb
addr16
outs
loop
out
mov
push
cmp
mov
cmp
outs
jecxz
rol
das
arpl
nop
mul
xchg
lahf
pushf
not
repz
imul
mov
hlt
nop
inc
repnz
pushf
icebp
(bad)
loope
out
adc
std
mov
nop
shl
(bad)
mul
ins
or
in
(bad)
out
sbb
std
mov
xchg
rol
int3
mov
push
and
push
sbb
ins
or
add
sub
mov
lods
enter
in
xor
xor
sub
leavew
mov
mov
out
pcmpgtb
es
or
pop
sub
int3
lods
inc
jmp
call
add
outs
ss
add
in
xchg
aam
inc
adc
enter
jp
adc
cmc
and
pushf
les
repnz
rcl
lds
or
xchg
dec
add
dec
loopne
popa
cmp
push
xor
cmp
and
push
inc
sub
leave
cmps
in
(bad)
nop
dec
mov
cmp
push
frstor
pop
jle
cmp
sbb
ins
push
cmp
push
sbb
jecxz
retf
popa
add
jg
pop
aas
add
dec
cmp
(bad)
mov
out
pop
push
pop
xor
(bad)
pop
and
in
xor
adc
mov
and
add
and
push
push
pop
cmp
pusha
xor
call
test
xlat
mov
mov
cmc
push
js
sub
pop
sbb
imul
push
outs
add
imul
push
ins
push
dec
push
mov
dec
xor
add
jbe
sbb
scas
les
inc
std
out
mov
adc
inc
or
iret
inc
adc
gs
pop
mov
inc
pop
dec
sbb
jmp
inc
cmovg
add
xchg
(bad)
mov
add
cs
inc
or
test
mov
add
jb
test
fisttp
mov
xlat
mov
mov
cli
xchg
out
mov
mov
ret
idiv
dec
fidivr
pop
pop
inc
xor
sbb
dec
or
pop
imul
dec
sbb
inc
daa
scas
jp
cmc
add
fwait
jecxz
int3
xchg
pusha
adc
cmp
ins
xor
das
and
and
inc
hlt
xchg
int
sar
ss
dec
and
dec
cmp
fcomp
add
dec
pop
sbb
popf
lds
retf
mov
sbb
cs
icebp
mov
int3
or
sar
int3
(bad)
cwde
dec
mov
xor
mov
ja
mov
int
jbe
cdq
in
movs
(bad)
lods
fimul
and
cmp
push
add
leave
push
mov
mov
jnp
arpl
jb
addr16
shr
xchg
mov
mov
mov
cmp
dec
pop
push
push
ds
pop
les
adc
outs
sub
or
pop
xor
jbe
cwde
fnstenv
jmp
xlat
dec
xor
or
mov
mov
and
stos
call
mov
xchg
shl
aas
pop
aaa
inc
es
sub
xor
push
push
sub
stos
rol
jecxz
push
pop
loop
dec
or
ficomp
adc
cmovnp
and
push
sub
mov
xor
sbb
sbb
lock
iret
mov
rcl
mov
test
aas
pop
cmps
lds
inc
sbb
push
loopne
sar
xchg
shl
pop
cwde
(bad)
(bad)
(bad)
mov
mov
cdq
(bad)
xchg
jecxz
clc
mov
fld
sbb
daa
sub
adc
adc
ss
retf
mov
(bad)
arpl
and
hlt
lods
scas
(bad)
fwait
(bad)
push
adc
movs
stos
mov
mov
sub
xchg
repnz
in
(bad)
lods
dec
mov
in
nop
lods
mov
aam
in
mov
mov
scas
push
pop
jae
ja
jae
aas
je
sub
mov
xchg
test
mov
xchg
inc
test
lahf
fcomp
adc
out
mov
out
sub
into
mov
sbb
mov
mov
push
ss
dec
sub
lds
pop
xor
sub
mov
mov
sahf
cld
xchg
retf
arpl
push
cmp
cs
sub
loope
test
xchg
ret
call
or
addr16
outs
mov
ds
xor
dec
div
mov
stos
int3
outs
jmp
les
in
stos
jmp
outs
adc
stc
mov
mov
(bad)
movs
test
xchg
movs
mov
sbb
add
dec
es
test
arpl
push
xor
fs
jg
pop
push
imul
stos
xor
js
test
sub
cmp
aad
stos
iret
nop
xlat
mov
test
test
cmp
mov
push
mov
sbb
rcl
jo
xchg
mov
push
push
in
adc
inc
or
mov
xchg
mov
imul
daa
jnp
mov
and
push
push
lock
cmc
push
sub
push
dec
xor
sbb
nop
mov
ficomp
xchg
mov
shr
mov
push
je
push
or
outs
cmp
aad
std
xchg
jl
push
int3
scas
xlat
mov
popf
icebp
mov
nop
shl
sbb
pop
outs
sub
mov
xchg
les
jl
add
pop
mov
xchg
into
ss
adc
cmp
push
jle
imul
inc
and
clc
jno
dec
fisttp
jb
dec
adc
pop
xor
int3
retf
cwde
fs
dec
adc
lds
push
pop
dec
mov
int
stos
les
add
dec
loop
shl
(bad)
mov
mov
mov
test
push
sbb
cmp
mov
test
or
shl
bound
pop
das
cs
out
xor
lods
scas
enter
jle
test
repnz
(bad)
hlt
outs
daa
dec
xor
or
jbe
hlt
test
xchg
lods
sahf
shr
sub
sub
mov
cmp
xor
add
xchg
push
add
push
and
xchg
ins
shr
or
neg
mov
push
mov
iret
push
mov
outs
shl
les
in
push
(bad)
pop
mov
jg
lahf
scas
mov
jl
dec
cmc
add
or
ret
popf
pop
imul
adc
imul
adc
xor
dec
mov
add
int
(bad)
mov
imul
mov
mov
dec
mov
jg
popa
mov
xor
pop
loop
cld
sub
and
pop
mov
inc
xchg
mov
ss
aas
hlt
ds
push
sar
jge
push
out
fnstsw
in
pop
adc
and
(bad)
imul
int
sti
xor
cmps
mov
pop
(bad)
ss
repz
pop
outs
les
sub
sub
or
sub
lds
dec
(bad)
cmc
aas
in
pop
mov
dec
int
mov
test
xchg
ins
xlat
test
int
(bad)
sub
mov
ins
adc
dec
aad
call
mov
mov
mov
mov
push
xchg
cmp
adc
pop
test
call
les
or
dec
fiadd
xchg
push
popa
(bad)
sbb
inc
mov
ficomp
pop
mov
xor
ss
and
adc
fistp
xor
es
jle
ss
call
mov
sbb
sti
ins
cmps
inc
mov
dec
add
sbb
add
js
inc
mov
rol
add
inc
rcl
lahf
inc
retf
cmp
push
push
aaa
in
push
mov
out
jb
jne
and
das
or
cmp
test
lds
push
mov
mov
mov
jp
push
xchg
ja
(bad)
inc
stos
jno
(bad)
fwait
inc
xlat
add
or
ret
mov
mov
retf
sub
xor
sbb
pop
mov
hlt
xor
dec
(bad)
pop
sbb
not
pushf
jae
maskmovq
test
mov
inc
test
das
add
push
and
mov
xor
mov
cmp
iret
inc
rcl
xchg
pusha
leave
dec
mov
fcomp
mov
imul
dec
int
iret
push
mov
aad
in
sbb
in
repz
jge
dec
sti
push
adc
repnz
sbb
(bad)
sub
xchg
(bad)
call
in
add
push
bnd
arpl
dec
mov
repnz
cmp
sbb
in
popa
enter
or
pop
mov
mov
bound
ins
retf
dec
fild
jmp
in
mov
lea
inc
movs
jl
cmps
push
popf
mov
xor
mov
mov
call
test
push
fdiv
je
pusha
mov
mov
cwde
mov
cmp
cmp
cs
dec
jmp
hlt
add
pop
repnz
fmul
push
fstp
push
cld
push
rcl
sbb
jnp
cwde
inc
int3
sub
and
les
rcl
mov
test
and
loope
or
push
mov
pop
mov
add
jmp
fiadd
adc
jl
ins
fist
sub
cmc
aaa
sbb
movs
xchg
jle
stos
jnp
ins
mov
jb
je
stc
push
jmp
clc
pusha
int
retf
xchg
lods
mov
bound
xor
xor
cmp
sub
ins
mov
xchg
addr16
jl
jno
(bad)
daa
stc
and
sbb
and
jg
jb
push
pop
xor
frstor
sbb
sti
dec
sbb
frstor
jecxz
pop
sbb
add
loopne
aad
scas
sub
mov
(bad)
daa
test
pop
shl
xor
sub
shr
push
sbb
sbb
mov
aad
mov
lds
shl
out
pop
retf
push
sbb
xchg
sub
jbe
pusha
movs
mov
cdq
outs
mov
test
cmp
sub
push
cmp
adc
ds
adc
pop
mov
ss
unpcklps
cmp
jo
lods
test
fwait
cdq
je
data16
push
hlt
cmps
mov
fwait
xchg
gs
dec
mov
jns
jb
xchg
mov
xchg
ins
mov
iret
and
inc
iret
sub
out
xchg
fnsave
push
add
in
xor
ds
sub
xor
and
pop
mov
es
fsub
and
dec
retf
push
mov
clc
pop
shl
cwde
jns
inc
les
jne
jno
popf
xchg
popf
cwde
xor
mov
cmp
pop
mov
aas
cli
(bad)
rdmsr
lock
push
jecxz
loope
push
push
data16
jnp
push
(bad)
cmp
not
sub
in
cmps
jns
popf
inc
rol
(bad)
das
cmc
push
jl
jnp
ss
outs
xor
xchg
push
jl
icebp
pop
loop
out
out
mov
cmp
addr16
inc
int
mov
and
inc
retf
xor
jp
daa
ss
enter
in
push
mov
cdq
pushf
movs
jns
inc
(bad)
pop
mov
add
push
(bad)
push
lock
es
shl
add
inc
das
sar
retf
inc
(bad)
sbb
daa
adc
adc
ss
pop
daa
add
dec
sbb
dec
xor
ret
aas
test
sub
mov
cli
push
(bad)
or
ds
enter
add
or
inc
movs
pushf
call
ds
and
xor
loopne
hlt
xor
or
dec
mov
xchg
xchg
inc
mov
xor
add
add
out
sbb
xor
pop
xchg
lahf
jle
popa
mov
adc
sti
adc
sub
mov
pop
fild
or
adc
push
(bad)
xchg
cdq
mov
push
daa
sbb
push
loop
push
dec
cld
ja
jae
mov
outs
xor
cli
xchg
stos
nop
mov
inc
int3
ds
in
int3
sub
inc
aam
inc
mov
jns
inc
jmp
push
or
push
fnstsw
sbb
call
cld
jle
jp
jne
xchg
addr16
jno
mov
add
sub
sub
aas
jecxz
mov
xchg
popa
(bad)
sahf
xchg
(bad)
and
push
mov
les
lahf
outs
mov
dec
fisttp
in
mov
xchg
pusha
mov
mov
stos
fwait
jb
ja
loopne
xlat
pop
fstp
push
or
xchg
lea
jle
jns
pusha
cmps
cmc
outs
mov
call
mov
outs
xchg
dec
aad
aad
outs
rcl
fcom
cmp
xor
aas
out
push
push
or
push
rol
sbb
xor
dec
mov
jne
or
sub
add
xchg
rol
out
pop
mov
lea
xchg
mov
pop
mov
popf
dec
mov
mov
shl
clc
add
fs
mov
aad
dec
fnstsw
leave
push
lds
loope
loope
sbb
or
sub
or
push
stos
outs
sbb
shl
(bad)
jo
fwait
jbe
inc
test
mov
mov
out
out
mov
cmp
fisubr
inc
in
(bad)
pop
lods
ja
mov
test
cmp
cli
add
jbe
outs
mov
push
cmps
nop
imul
stc
or
xchg
dec
leave
and
inc
scas
xchg
push
dec
sbb
call
stc
xor
xor
and
adc
hlt
or
jo
push
pusha
int3
xor
out
push
adc
stos
or
hlt
and
sub
icebp
add
and
dec
mov
je
add
adc
push
or
jmp
cdq
jp
xchg
mov
fwait
jge
pop
shl
loopne
mov
ror
dec
mov
ins
mov
enter
(bad)
and
push
sub
jmp
mov
movs
xchg
sahf
call
mov
iret
pop
mov
mov
xor
sbb
sbb
aaa
into
inc
mov
jecxz
lods
push
jo
inc
scas
inc
(bad)
cmp
or
adc
xchg
mov
mov
jge
pop
sbb
repnz
mov
lods
xchg
(bad)
es
cmp
dec
fadd
ds
shl
pop
mov
popa
retf
pop
xchg
mov
retf
push
test
xchg
dec
mov
js
mov
jne
call
lock
cmps
cdq
jb
icebp
and
push
test
xor
pop
mov
clc
dec
(bad)
push
mov
pop
rcl
pusha
les
(bad)
das
pop
jnp
fs
cdq
xchg
push
test
ins
aad
jns
aas
loop
in
push
xchg
imul
mov
xlat
and
push
mov
fld
and
mov
inc
rcl
es
(bad)
push
cmp
xor
sub
out
es
jo
ret
dec
ror
or
(bad)
dec
fisubr
pop
adc
movs
inc
fmul
sar
mov
scas
inc
mov
mov
ret
and
cmp
push
neg
aas
das
adc
dec
sbb
push
adc
xor
and
cmp
push
fisttp
sub
loope
xchg
dec
(bad)
jmp
div
add
add
add
jmp
fcom
mov
fnstcw
cli
pop
mov
rcl
inc
out
sbb
rcl
jl
dec
aad
adc
pop
add
mov
xor
call
push
ror
pusha
retf
xchg
out
inc
repnz
mov
lahf
inc
add
dec
out
cmp
ret
push
movs
(bad)
cwde
outs
mov
retf
adc
cld
dec
scas
movs
in
jp
sub
inc
rcl
xchg
push
fst
xor
or
pop
jmp
outs
mov
ret
cwde
jp
call
or
iret
push
test
xor
adc
dec
fsub
xchg
pop
out
xchg
mov
pusha
xor
mov
jns
add
sub
xor
xor
in
push
ficomp
data16
shl
mov
cmp
rcl
jne
push
movs
nop
push
in
dec
int3
push
jmp
mov
mov
ds
inc
mov
std
sbb
(bad)
dec
aad
adc
loope
adc
cmp
and
pop
mov
(bad)
cmp
inc
in
stos
jne
xchg
ins
xchg
cmps
jle
jno
(bad)
popa
shl
(bad)
ss
call
push
xchg
push
ds
out
rol
or
push
mov
cdq
imul
dec
mov
push
mov
test
popa
lods
lea
test
inc
stos
jg
add
leave
dec
fld
cld
add
adc
sbb
loopne
adc
jb
add
lods
imul
js
push
cmps
ins
movs
dec
(bad)
push
retf
push
mov
in
loopne
repz
push
jmp
xchg
fs
mov
mov
(bad)
(bad)
xchg
data16
hlt
js
push
movs
pushf
pusha
test
xor
cmp
add
movs
inc
sbb
fild
sub
sub
adc
xor
pop
loope
fstp
sbb
mov
sub
jp
push
mov
fnstsw
(bad)
xor
push
mov
adc
xlat
dec
aam
push
jmp
imul
into
sub
pop
sub
std
add
sbb
lds
ins
int
in
push
clc
sub
cmp
push
xchg
test
mov
lods
imul
cmp
push
mov
lods
dec
aam
fcom
add
push
es
retf
pop
repz
aam
mov
arpl
out
(bad)
cmp
jp
fcomp
cs
fs
test
pop
mov
lods
cwde
xlat
or
jns
xchg
sahf
jae
fcom
inc
fadd
xchg
cdq
dec
mov
mov
jg
je
cs
pop
stos
jl
pushf
jns
mov
int3
cmp
sbb
pop
aad
or
or
sar
mov
inc
retf
jecxz
std
sub
mov
mov
and
pop
cmp
adc
push
ret
aas
sti
xor
mov
movs
xchg
mov
mov
cld
jno
and
ds
popa
mov
addr16
neg
sahf
jle
pop
mov
xchg
pop
into
sub
ss
pusha
mov
inc
das
sbb
pop
mov
pop
mov
mov
and
pop
lds
daa
loope
loope
scas
mov
rol
jne
pop
test
sub
pop
stos
jge
outs
retf
je
imul
movs
jp
sub
sub
and
jb
or
or
jae
dec
and
dec
int
cmps
xlat
xor
das
repz
mov
lea
inc
fisubr
sti
inc
mov
mov
xor
inc
mov
inc
dec
mov
pusha
fidivr
ret
dec
mov
mov
xor
mov
mov
call
push
retf
test
dec
adc
out
int3
pop
fisttp
hlt
nop
ins
mov
iret
push
shl
cmc
xor
adc
syscall
icebp
mul
in
mov
dec
rcl
inc
mov
add
call
xchg
xchg
fwait
jns
sub
xchg
jb
test
mov
loop
cdq
outs
mov
push
add
aas
idiv
loope
rcr
(bad)
(bad)
jno
and
sub
ds
xor
xor
mov
(bad)
xchg
scas
xchg
in
pop
mov
cwde
lahf
jge
ins
add
adc
add
xor
call
fnstenv
xor
dec
fst
les
pop
push
pop
repnz
dec
stos
popa
mov
cmp
popa
(bad)
push
mov
leave
push
shl
add
test
and
sar
ror
xchg
dec
mov
add
add
aaa
out
fld
sub
push
adc
jmp
and
and
daa
loopne
xlat
das
retf
fimul
add
shl
sub
push
stc
aaa
adc
add
add
ss
dec
scas
imul
lock
add
push
ret
pop
jmp
adc
aaa
and
lds
pop
shl
bound
sub
sbb
int
test
pop
(bad)
daa
push
sbb
inc
ret
call
fwait
addr16
mov
es
scas
je
cmp
mov
ds
pop
ss
xor
or
xchg
out
in
push
into
pop
fbld
cli
aaa
pop
pop
xor
adc
jmp
inc
mov
sub
repnz
add
int3
shr
es
push
cmp
inc
ror
pop
adc
pop
adc
cdq
ja
test
inc
rol
in
sub
(bad)
imul
mov
dec
enter
jnp
xchg
dec
xlat
push
test
fcom
jns
ins
mov
adc
push
cmps
cdq
in
je
sub
pop
xchg
xchg
xchg
ins
scas
test
mov
dec
cli
cmp
xor
idiv
sub
cmp
lock
sub
xor
inc
fild
mov
and
fbstp
pop
aaa
push
into
inc
enter
mov
inc
in
add
pop
retf
lahf
nop
imul
sbb
xchg
dec
iret
xor
cmp
lahf
mov
push
hlt
cmp
dec
aam
fld
add
(bad)
adc
cmp
cmp
adc
push
pop
pop
not
in
ss
push
repnz
pop
int3
and
jmp
repz
mov
add
and
or
pop
jmp
sbb
push
clc
and
sti
push
lods
jns
stos
sahf
sahf
inc
test
inc
(bad)
add
and
fbld
leave
push
hlt
push
shl
pop
(bad)
xchg
xor
(bad)
fld
pminsw
imul
bound
std
cmp
push
adc
mov
popf
sahf
dec
rcl
loop
cmc
sub
(bad)
cmp
add
pop
fistp
ss
and
sub
push
mov
push
fistp
popf
push
leave
sub
hlt
sub
push
cmc
add
add
mov
xchg
push
test
adc
out
stos
(bad)
(bad)
daa
out
cmp
xor
mov
iret
pop
mov
loopne
test
mov
mov
outs
(bad)
sub
xor
xor
sbb
arpl
jno
ins
movs
arpl
inc
int
sub
sub
sub
and
sub
retf
cdq
xchg
push
pop
loope
adc
cmp
xor
es
iret
inc
stos
xor
and
not
xlat
push
int3
popf
pop
sahf
xchg
call
mov
(bad)
sbb
sub
cmp
aad
or
xor
inc
lds
ins
div
jp
stos
mov
mov
jp
(bad)
fwait
clc
push
adc
pop
out
cmp
div
adc
es
inc
mov
ss
adc
push
cmp
and
cmp
ins
jmp
pop
pop
dec
in
repz
mov
retf
data16
arpl
aad
scas
scas
lods
test
push
mov
dec
fstp
addr16
dec
movs
push
rcl
mov
hlt
jns
push
ror
cs
jbe
mov
jne
jbe
jno
inc
out
jne
xor
js
pop
out
popf
inc
inc
mov
sbb
cmp
or
data16
pop
les
js
inc
fisub
mov
or
sub
push
(bad)
xor
push
pop
sub
xchg
xchg
push
mov
retf
xor
push
mov
jno
dec
fcom
fwait
inc
(bad)
xor
pop
out
xor
push
jmp
mov
test
addr16
imul
shl
push
lods
aam
out
and
lods
xchg
jne
and
shl
inc
scas
jle
jle
call
jmp
xor
adc
push
ret
aas
cmp
inc
lds
das
add
add
das
pop
(bad)
arpl
pop
iret
dec
mov
inc
push
lds
fst
mov
fidiv
push
mov
xor
outs
es
inc
into
pop
mov
fst
mov
int
ret
add
cmp
je
popf
outs
sub
lock
sbb
and
sbb
test
pop
clc
xor
out
repnz
sub
sub
sbb
jmp
in
and
pop
mov
push
scas
dec
mov
fidivr
aad
lods
jo
ja
add
push
mov
dec
pop
nop
push
movs
addr16
out
xor
cmp
mov
mov
jg
ds
shl
push
fnsave
imul
mov
xchg
pushf
call
fist
clc
daa
or
out
nop
cmps
jg
inc
or
push
jmp
pop
call
and
sti
and
sbb
idiv
jecxz
pop
out
(bad)
push
mov
pop
xor
or
push
mov
rol
ret
cmp
inc
fsub
leave
and
(bad)
sahf
dec
add
(bad)
cwde
arpl
cmp
push
fmul
pop
iret
pop
(bad)
hlt
push
push
lock
and
loopne
adc
(bad)
xor
xor
jmp
shr
xor
push
pop
or
addr16
pop
(bad)
test
and
or
retf
push
mov
cmp
dec
xor
and
and
in
or
adc
xor
and
add
mov
jo
push
mov
scas
dec
mov
dec
stos
fs
dec
stos
fs
outs
test
call
(bad)
aas
in
out
loop
not
jb
test
bound
mov
mov
test
mov
mov
dec
(bad)
cmp
push
test
ins
fdivr
out
mov
pop
in
xor
into
dec
mov
push
loopne
out
sbb
xchg
daa
jb
jae
jle
xor
and
movups
ret
dec
neg
cdq
sar
mul
push
cli
add
and
or
push
loop
sbb
or
mov
xchg
inc
mov
cmp
xchg
add
cmp
hlt
das
repnz
sti
add
xor
mov
mov
dec
movs
xchg
ja
arpl
dec
repz
pop
mov
scas
std
xor
div
adc
cld
push
test
mov
adc
push
fnstcw
sbb
pop
mov
adc
jne
inc
mov
mov
stos
(bad)
lea
inc
mov
lds
pop
stos
popf
imul
outs
mov
jl
inc
and
sub
retf
movs
xchg
pushf
jnp
sub
or
push
stos
mov
push
test
jb
push
scas
xchg
popa
cmps
cwde
jno
int
scas
mov
xlat
jg
in
add
adc
xor
cmp
ss
adc
push
dec
mov
and
sbb
es
lahf
dec
enter
mov
mov
and
xchg
repz
xchg
(bad)
mov
es
inc
adc
push
ss
sub
popf
in
xor
popa
sbb
mov
(bad)
xchg
out
call
mov
mov
mov
out
rol
push
sbb
pusha
daa
push
aaa
jb
jbe
jns
ja
dec
and
pop
sbb
inc
or
pusha
adc
(bad)
stos
shl
enter
mov
xchg
stc
xchg
mov
xchg
ficom
xor
inc
sbb
add
jo
ja
hlt
fisubr
jb
addr16
stos
ror
retf
pop
add
jmp
cwde
movs
lods
sti
mov
test
push
gs
cmp
pop
and
into
mov
mov
popf
mov
inc
sbb
iret
test
pusha
out
retf
xchg
sub
push
ss
push
je
out
cwde
repnz
adc
mov
ret
sbb
inc
and
xor
das
mov
mov
adc
js
out
les
cmp
pop
push
jl
das
push
cmp
adc
ja
sub
adc
sbb
ins
mov
jbe
jl
and
and
cmp
add
jle
dec
in
cdq
int3
and
sbb
dec
sub
popa
movq
jle
inc
mov
cmps
int
or
scas
jnp
xor
xor
dec
push
ret
loope
fild
int
mov
popf
fsubr
sbb
fs
test
xchg
aam
dec
jns
xor
mov
loop
clc
mov
pop
jge
push
xor
pop
out
shl
and
cmp
inc
mov
sub
pop
jmp
xor
mov
mov
or
fld
popa
xor
push
inc
test
shl
push
je
js
xor
mov
or
jmp
and
or
dec
pop
adc
pop
push
xor
hlt
fs
jp
sub
pop
test
push
and
or
je
and
cld
mov
xchg
cld
xchg
bound
push
add
cmps
out
mov
push
sbb
cmp
xor
nop
mov
shr
push
xor
push
mov
(bad)
icebp
pushf
dec
sub
pop
xor
mov
mov
sbb
xor
(bad)
icebp
mov
xor
ret
jg
nop
(bad)
ins
mov
out
std
cmp
cmps
lds
arpl
jb
ins
push
jge
add
xchg
jmp
jns
mov
and
push
pop
jl
fs
test
mov
bound
jl
pop
cmp
clc
mov
xchg
jl
cmp
dec
cli
pushf
push
pop
and
or
xchg
outs
push
adc
fcmovnbe
mov
movs
sub
cmp
adc
loop
leave
mov
xchg
fldcw
aas
gs
sbb
inc
cmp
movs
loope
jp
pop
cmp
cmps
xchg
in
xchg
mov
outs
add
jmp
enter
out
int3
xchg
in
and
or
xchg
movs
cli
dec
adc
clc
stos
fisubr
or
sbb
cmp
shl
retf
xchg
fdiv
leave
pushf
fidivr
push
inc
add
icebp
pushf
std
pusha
dec
jno
pop
adc
dec
push
jp
retf
xchg
fadd
lods
iret
cmps
dec
and
sti
rol
in
sbb
or
sbb
enter
loop
sbb
xlat
test
mov
std
xor
jp
and
lock
cmc
bound
pop
mov
jg
pop
loopne
dec
add
xchg
mov
sub
shl
xchg
mov
push
mov
movs
sti
xchg
cmp
add
mov
sahf
shl
mov
pushf
ficom
push
cwde
mov
mov
pop
cmp
dec
adc
inc
pop
inc
aas
jns
sub
adc
inc
sub
in
xchg
imul
pop
push
sub
jle
inc
or
sti
and
sti
jb
xor
pushf
ret
scas
movs
ret
mov
mov
cvtpd2pi
cmp
dec
sub
mov
gs
mov
std
popf
mov
push
xchg
(bad)
fidivr
cmps
lds
xor
mov
bound
push
out
(bad)
in
in
out
fdiv
out
fisubr
ins
or
mov
ins
pop
inc
sub
pop
icebp
sahf
jmp
hlt
jns
dec
popa
sub
pop
sub
iret
jno
dec
cs
nop
mov
mov
push
add
loop
repz
aaa
popa
hlt
mov
push
sbb
(bad)
bound
push
out
add
dec
adc
es
movs
xor
addr16
outs
add
outs
in
scas
sti
mov
inc
and
pop
inc
sub
rcl
pop
mov
stc
mov
jbe
lock
repz
jbe
adc
add
xor
inc
add
push
sbb
outs
daa
dec
cdq
repz
fist
xor
ds
es
movntps
pop
ss
sub
test
test
test
sti
(bad)
fcom
mov
cmps
fidiv
xchg
sti
sub
shl
push
inc
and
dec
or
rcl
in
xor
aad
fisub
inc
out
mul
test
jns
js
mov
mov
mov
cmp
inc
or
dec
lods
xlat
mov
outs
or
and
int
fnsave
pop
sbb
aas
push
in
mov
push
xor
mov
stos
(bad)
mov
aam
mov
adc
pop
sbb
(bad)
jnp
dec
aaa
and
mov
push
cmp
ss
imul
nop
call
cmp
jo
icebp
mov
xor
push
inc
das
and
mov
mov
dec
outs
cmp
fisub
outs
push
jl
in
loop
lds
jmp
lds
retf
loopne
cld
push
in
dec
sar
gs
(bad)
adc
jbe
call
cld
dec
loop
dec
cmp
pop
cmp
xchg
cwde
fiadd
les
jecxz
call
xor
shr
in
cli
mov
fstp
aam
add
mov
movs
mov
inc
cmp
pop
out
loopne
rol
and
and
int3
data16
ror
and
push
dec
sub
movs
jecxz
call
pop
or
inc
sbb
pushf
call
push
xor
cmp
je
cwde
clc
or
sbb
or
js
ror
imul
pmulhw
mov
cmp
or
sbb
mov
popf
(bad)
inc
and
cmps
jmp
cvtps2pd
inc
(bad)
or
sub
xor
inc
lods
jmp
ror
adc
nop
add
dec
sti
mov
cmp
nop
rcl
adc
inc
or
push
adc
push
inc
pop
dec
cmp
cmp
hlt
inc
lahf
ret
call
pop
sbb
hlt
adc
(bad)
(bad)
pushf
mov
shl
out
test
and
pop
or
sub
rcr
mov
xlat
ins
push
jmp
pushf
fild
dec
pop
dec
push
gs
stos
in
mov
or
shl
jmp
imul
xor
jae
jns
nop
popf
ret
mov
sbb
paddw
pop
pop
add
push
sub
add
dec
loopne
retf
push
or
jno
sbb
sbb
push
sub
scas
aam
enter
pop
in
pop
ins
les
loop
retf
xor
push
les
jnp
jno
inc
cmps
sar
adc
sub
dec
xor
cli
and
shr
and
push
push
rcr
clc
mov
push
push
mov
mov
scas
int3
pcmpeqw
mov
stos
clc
nop
retf
xor
jecxz
pop
inc
ds
aas
add
cld
mov
push
xor
jg
pop
inc
cwde
in
xor
inc
add
jne
ja
push
or
dec
push
pop
stos
icebp
xchg
bound
cld
scas
int3
mov
js
mov
data16
jmp
subps
dec
loop
int3
mov
jp
dec
sub
push
add
dec
and
pushf
std
mov
dec
loop
shl
aas
pop
and
je
dec
xor
pop
ds
push
add
jp
enter
std
mov
pop
mov
add
xchg
(bad)
lods
bnd
gs
sbb
cs
call
imul
push
jl
jne
into
xchg
into
mov
out
jae
ja
push
scas
leave
test
xchg
clc
mov
cmp
sub
gs
adc
adc
or
ficomp
cs
add
out
mov
call
and
mov
mov
mov
jmp
jae
repz
or
cmp
cld
imul
scas
repnz
pop
adc
in
stos
leave
mov
or
ins
or
xchg
stc
call
pop
dec
ss
jl
repnz
and
cwde
mov
stc
sahf
lock
pop
cmp
pop
dec
aas
push
jmp
push
adc
gs
sub
mov
push
leave
mov
mov
lea
jp
and
popa
aaa
and
sti
imul
div
sub
jo
sbb
sbb
push
sub
jno
retf
xchg
fcom
dec
ss
xor
pshufw
sbb
dec
sub
inc
and
jge
and
pop
out
(bad)
cdq
adc
add
scas
ret
rcl
pop
sti
(bad)
ficom
ret
lea
mov
stos
mov
popf
pop
xor
and
push
mov
jecxz
movs
jl
pop
and
and
sub
sahf
cld
mov
xor
ss
dec
sbb
adc
in
popa
mov
ror
and
push
add
sub
mov
mov
ss
xor
inc
lahf
shl
pop
pop
lock
push
xchg
std
inc
or
mov
xchg
iret
xlat
add
dec
adc
outs
sub
ja
jnp
jns
and
pop
cmp
sbb
dec
sbb
and
shl
jmp
icebp
lahf
test
mov
xor
xchg
mov
mov
mov
push
xor
add
cdq
fnstsw
cdq
sbb
gs
cmp
jp
jo
jmp
add
dec
in
cmps
fsub
jp
dec
aaa
jne
imul
(bad)
mov
mov
movs
cmps
jbe
xor
pop
out
and
bound
inc
sub
out
inc
das
push
cmp
mov
sub
ins
mov
ins
adc
inc
sub
imul
cld
pop
push
dec
loope
jle
push
xor
fdivr
push
sub
cmp
sbb
adc
imul
jg
pop
sub
inc
out
and
sub
mov
fwait
xor
arpl
(bad)
cdq
fimul
push
js
xor
mov
popa
add
push
out
in
xchg
nop
shl
dec
pop
cmc
mov
(bad)
aad
stos
fbld
pop
sbb
rol
push
add
jmp
clc
mov
add
adc
test
or
inc
pop
div
lods
push
cs
sub
push
mov
pushf
in
or
fcom
sub
inc
push
dec
xor
call
sbb
in
enter
jle
inc
sbb
mov
scas
neg
imul
cdq
in
test
dec
or
fmul
call
mov
lods
ret
and
out
test
mov
ror
movs
fimul
jbe
push
xor
xchg
cdq
jmp
enter
cmp
mov
jle
and
shr
dec
pop
dec
sub
iret
xchg
repz
push
or
xor
push
sub
call
push
push
loope
frstor
push
push
dec
lea
sti
or
push
push
mov
and
dec
sub
mov
cdq
iret
mov
jg
ins
or
in
xor
dec
rcl
icebp
sahf
fmul
cmp
(bad)
mov
cmp
cs
sti
xor
or
pop
retf
popa
sbb
or
push
mov
inc
xor
test
mov
idiv
outs
sub
sub
mov
jae
jo
inc
cmp
test
scas
leave
outs
idiv
ja
imul
repnz
mov
repnz
and
(bad)
fs
inc
add
xchg
inc
cmp
jb
pop
sbb
dec
out
cwde
mov
(bad)
neg
fst
cmp
aaa
push
aaa
pop
cmp
xchg
fild
jb
jle
xchg
fidivr
mov
adc
dec
daa
pop
xor
data16
mov
test
dec
xor
xchg
cmc
mov
clc
xchg
les
mov
inc
out
mov
jns
push
and
jne
ja
cdq
addr16
sbb
out
rcl
es
lock
lods
jmp
mov
popa
lock
cmp
inc
adc
xchg
ror
jns
imul
sub
cmp
out
adc
sar
jo
pop
sbb
xchg
rol
pop
adc
inc
add
jo
pop
jmp
jecxz
push
loope
leave
xchg
jb
sub
les
mov
(bad)
test
imul
call
push
push
adc
mov
lahf
enter
lods
std
mov
inc
cmp
jne
jg
fisubr
and
cwde
repz
add
jle
int
frstor
ins
sub
mov
test
or
mov
cmps
fld
es
cmp
xchg
mov
scas
leave
mov
sbb
xor
xlat
mov
lahf
cmps
int
mov
push
dec
sub
mov
mov
test
ins
cmp
push
or
xchg
std
mov
dec
sub
jg
inc
das
jmp
aam
leave
add
test
clc
inc
aam
hlt
xchg
cld
fs
and
adc
pop
xlat
arpl
popa
cmp
adc
aad
xlat
ins
adc
xor
and
jp
sbb
sar
loop
ss
pop
imul
shl
enter
dec
test
inc
dec
das
push
cmp
mov
popf
ret
popa
movd
sub
ret
movs
clc
push
push
es
pop
or
sbb
aad
leave
mov
xchg
popf
ret
and
lahf
ficom
sbb
xchg
icebp
mov
lock
add
xor
pop
cmp
xchg
div
out
cld
mov
lahf
cli
xchg
int
xlat
js
pop
in
cmps
sti
or
pushf
std
pushf
(bad)
sahf
repz
in
mov
mov
mov
push
les
in
sar
jmp
(bad)
xchg
call
rol
shl
les
js
mov
and
into
or
push
mov
rol
mov
adc
call
dec
movs
call
push
push
inc
sub
sti
mov
cwde
jno
xchg
mul
push
push
scas
int3
xchg
leave
test
je
jnp
pop
cmp
test
xchg
hlt
fwait
(bad)
sbb
pushf
cli
xchg
gs
and
push
push
inc
aaa
bound
xor
xor
push
inc
sub
push
neg
lods
in
ret
cmp
ficomp
inc
subps
jae
enter
mov
mov
cmc
nop
(bad)
in
fisub
retf
imul
shl
aaa
jp
outs
mov
jno
nop
cli
lahf
test
mov
or
sub
mov
retf
and
repz
pop
or
dec
sbb
or
xchg
push
adc
dec
adc
inc
sub
sub
aad
add
push
and
jnp
aas
dec
sub
pop
imul
dec
add
in
dec
jecxz
fs
dec
das
jmp
push
sub
jl
jg
and
jl
test
add
pop
push
dec
sub
add
adc
inc
mov
xchg
clc
iret
adc
xor
jle
push
dec
daa
pop
add
ror
dec
adc
mov
bound
aaa
sub
jbe
xor
inc
cmp
dec
ss
(bad)
scas
movs
out
mov
fs
jmp
imul
pop
and
out
add
lods
push
cmp
cmp
call
jae
lods
(bad)
call
clc
arpl
inc
out
fistp
or
adc
fild
gs
fcomp
fwait
outs
pcmpeqw
mov
call
mov
pop
pop
pause
cli
mov
rol
lods
lds
push
push
inc
cs
add
push
inc
add
fist
imul
xchg
shr
xchg
mov
mov
(bad)
popa
es
fdivr
scas
or
xor
jb
out
or
cmp
mov
sahf
ror
int3
das
dec
sub
addr16
outs
or
push
xlat
mov
xchg
test
jno
push
sub
dec
add
jbe
outs
jmp
daa
pusha
ins
or
or
jp
loopne
enter
cmp
jecxz
jl
fs
xchg
xchg
div
mov
xchg
cli
mov
mov
es
xchg
rcl
icebp
test
mov
sbb
rcl
es
das
add
adc
pop
and
xor
imul
adc
aas
div
mov
stos
iret
adc
not
sbb
popa
pop
jbe
call
rcl
jl
mov
outs
or
jecxz
in
jp
sahf
aam
dec
cs
or
ss
jp
push
or
(bad)
or
and
inc
sub
fistp
dec
test
mov
out
xchg
fistp
int3
cwde
cmc
arpl
lahf
stos
xor
push
js
pusha
mov
dec
cs
ss
pop
jecxz
out
and
mov
push
cmp
pop
mov
mov
mov
and
gs
cmp
mov
into
mov
addr16
retf
mov
add
call
xor
test
mov
mov
push
xor
sub
mov
leave
push
cmp
push
ret
mov
fwait
inc
ret
mov
push
add
sub
(bad)
mov
xchg
std
ins
add
movs
fisub
ret
outs
sub
xor
pop
aas
dec
movs
loopne
aam
jb
imul
ret
mov
je
fisub
je
sub
xlat
inc
sub
add
mov
imul
fistp
into
mov
pop
loopne
inc
add
ja
icebp
fs
das
dec
sub
push
inc
loopne
xchg
shr
cmp
hlt
xchg
cli
popa
add
pushf
fbstp
xchg
xlat
xchg
cmps
mov
retf
mov
jbe
pop
push
aaa
dec
and
fld
sbb
inc
push
jo
dec
out
and
mov
hlt
pusha
in
mov
adc
push
ds
jmp
mov
mov
mov
mov
jle
add
push
xor
mov
fcomp
mov
dec
pop
popa
add
jae
cs
div
adc
cmps
ret
(bad)
loope
lock
into
xchg
repnz
stc
pusha
add
mov
arpl
push
xor
mov
ja
push
jo
mov
call
xchg
hlt
push
and
and
or
ins
sbb
(bad)
xchg
hlt
fwait
lods
call
pop
cmp
outs
fld
leave
mov
ja
mov
sar
aam
fcomp
int3
test
arpl
js
add
in
cmps
out
xchg
jecxz
mov
test
sbb
ss
in
popf
inc
pop
dec
sbb
sub
push
cmp
(bad)
loope
jmp
dec
sub
fwait
mov
retf
dec
sbb
aas
js
mov
lods
(bad)
loopne
repz
add
xchg
push
add
retf
push
or
lea
push
cmp
mov
jp
dec
test
enter
cmp
lods
cmc
sub
sbb
and
cld
bound
dec
or
xchg
xchg
mov
daa
dec
(bad)
fwait
stos
in
mov
mov
push
arpl
push
sub
pop
fidiv
call
mov
xchg
rcl
jmp
(bad)
jg
popa
mov
aas
cmp
inc
adc
inc
adc
cmp
inc
push
jns
(bad)
cmc
pop
add
add
jae
push
pop
cmc
xchg
pop
or
lea
stos
leave
xchg
push
addr16
jle
cmp
pop
add
adc
mov
mov
imul
test
add
or
push
icebp
add
inc
aaa
shr
fbstp
push
mov
fimul
sub
pop
jo
imul
call
cmp
cmp
outs
loop
mov
rol
sub
xor
push
ds
sahf
cmc
mov
pushf
aad
xor
(bad)
xchg
mov
repnz
sbb
and
mov
xlat
or
pop
cmp
loopne
in
xchg
imul
cmp
pop
xor
fcomp
addr16
test
jmp
leave
stos
ror
pop
jp
push
sbb
dec
out
(bad)
mov
data16
mov
dec
or
scas
into
lods
shl
js
arpl
repnz
mov
xor
fist
ror
push
imul
dec
add
push
out
jne
sub
stos
cmc
mov
and
push
(bad)
jmp
push
in
call
js
cdq
ficom
xchg
scas
mov
dec
das
push
loope
lods
mov
cmps
add
out
cmps
cmc
mov
in
int
dec
xor
mov
dec
sub
std
pop
push
outs
push
dec
push
pop
loope
fmul
xor
pop
adc
ins
test
out
xchg
lahf
fistp
aam
jge
and
addr16
adc
cmp
inc
sub
sbb
xchg
adc
stc
lods
dec
sub
xchg
add
add
jle
or
pop
pop
adc
mov
repnz
leave
rol
and
mov
cmp
lods
rol
sub
repz
sub
sbb
push
pop
cmp
adc
fsub
inc
sub
pop
inc
mov
pop
lea
ja
movs
dec
cmp
add
cmp
xor
or
xchg
int3
mov
loopne
lds
add
adc
dec
(bad)
or
stos
jbe
cmp
or
movs
into
xchg
fisttp
jg
pop
sbb
cmp
push
push
cmp
xchg
mov
es
mov
outs
stos
cmps
lds
xchg
les
sbb
sbb
cmp
or
cmp
cmp
xor
sub
sub
inc
scas
cmp
hlt
add
xchg
add
lds
sub
pop
in
xor
jp
popa
in
fs
cmp
add
inc
adc
jmp
sbb
test
gs
sbb
xchg
es
jne
sub
daa
jb
pop
add
add
inc
icebp
xchg
call
inc
sbb
iret
mov
aam
fwait
jecxz
and
and
aaa
fcomp
fsub
mov
sahf
mov
lea
jb
dec
mov
xchg
jl
cmp
aaa
pop
or
ins
mov
add
fist
imul
sub
jl
dec
out
cmp
mov
mov
mov
push
stos
xchg
scas
sti
push
addr16
pop
lock
jnp
sub
mov
mov
int3
mov
mov
in
mov
mov
xchg
lods
loopne
int3
sahf
mov
or
inc
mov
cmps
dec
aas
sbb
int
cmp
xor
iret
mov
popa
test
and
cdq
jecxz
inc
cmps
pusha
mov
cwde
ret
cwde
mov
xchg
loope
(bad)
es
or
xor
data16
jnp
sub
jbe
inc
fidiv
sub
addr16
push
pop
jae
lds
repz
mov
adc
mov
cmp
push
leave
stos
movs
mov
out
jb
jl
ins
adc
sub
das
or
js
or
call
aam
pop
pop
loope
shl
lahf
int
in
mov
cmp
dec
retf
test
dec
sub
aas
in
xor
movs
into
inc
pop
pop
sbb
mov
xchg
mov
(bad)
call
stc
sahf
push
adc
ja
lea
push
call
inc
addr16
addr16
jmp
out
fwait
leave
test
mov
mov
loop
sti
mov
mov
inc
sub
mov
shl
daa
jg
sti
call
xchg
stos
out
imul
xchg
cmc
(bad)
clc
mov
mov
mov
leave
call
test
sbb
pop
cmp
inc
arpl
adc
mov
mov
rcr
ds
retf
lods
mov
cmp
out
into
stos
ja
mov
mov
inc
ror
cmp
retf
test
pop
push
cmovge
sub
mov
mov
mov
adc
jne
mov
test
jmp
pop
arpl
jmp
xor
adc
jns
call
movs
sar
div
div
jae
dec
fist
int3
push
fcomip
(bad)
mov
add
dec
hlt
add
xor
push
xor
mov
fiadd
(bad)
lods
out
clc
mov
adc
mov
inc
mov
call
xchg
push
adc
mov
adc
pop
mov
stos
fiadd
push
sub
push
cmp
sar
add
mov
test
mov
xchg
inc
push
push
cmp
push
imul
adc
or
or
jae
push
add
push
push
repz
mov
scas
jae
ss
fs
push
loop
mov
mov
call
mov
icebp
xchg
lods
loopne
stc
loope
jle
pop
add
or
aas
mov
push
cmp
push
in
es
imul
test
add
jp
jno
lods
sar
mov
scas
(bad)
mov
leave
jae
add
bound
out
inc
xor
jo
fcomp
mov
(bad)
mov
je
sub
(bad)
push
cmp
inc
sbb
and
repnz
into
mov
xchg
fstp
inc
cmp
jg
adc
bound
dec
in
cmp
push
ror
ins
punpckhbw
aas
push
sub
cld
jmp
cs
cmp
inc
add
jl
std
loopne
imul
outs
adc
in
out
or
sub
inc
and
xor
dec
add
es
lods
movs
rol
xor
add
stc
mov
ss
cmp
ret
mov
loop
in
mov
lods
repz
sbb
and
inc
int
jae
jg
push
push
jae
jge
es
add
call
push
mov
dec
cmp
dec
adc
fwait
rol
pop
push
sbb
jbe
sub
in
cld
cmp
cmp
es
ins
mov
jns
and
fidiv
aaa
push
outs
adc
imul
(bad)
xchg
adc
daa
push
mov
inc
mov
cdq
rol
mov
mov
xchg
(bad)
mov
daa
sbb
mov
movs
sar
aaa
pop
adc
lock
popf
dec
xor
mov
add
jne
mov
mov
int
lods
mov
cdq
cmc
mov
js
sub
cmc
xchg
shr
dec
sub
ins
or
add
cmp
inc
pop
sub
push
push
push
and
popa
push
cmp
fs
add
or
sbb
aam
repnz
xchg
fstp
jne
jne
inc
movs
mov
lahf
(bad)
add
dec
xor
(bad)
xchg
fdivr
ret
xchg
push
pop
xor
ja
fimul
outs
ds
adc
xchg
fild
dec
cs
xor
in
cmps
repnz
out
mov
jae
pop
sbb
jp
sbb
mov
mov
xchg
fiadd
jns
jge
pop
in
mov
jg
push
inc
leave
fild
jnp
inc
or
cmp
inc
adc
ss
add
out
movs
loope
pop
sbb
and
push
mov
mov
xchg
dec
adc
clc
popa
dec
cmp
jp
push
sbb
hlt
mov
xor
pop
inc
and
jmp
or
add
ja
jmp
je
test
leave
mov
xchg
into
jo
test
sar
and
inc
cmp
dec
in
sub
dec
add
ja
outs
sbb
inc
sbb
pop
sub
inc
sub
jg
fld
or
call
in
test
mov
and
mov
push
xor
cmp
stos
mov
arpl
push
sub
add
fmul
xor
push
in
mov
loopne
(bad)
js
retf
cmps
fadd
add
dec
cld
fs
cwde
hlt
stos
fisttp
cli
es
push
xor
xchg
cli
xchg
jp
and
mov
and
sub
and
mov
adc
dec
or
pusha
and
aad
sbb
ins
sbb
ss
xchg
jmp
in
push
(bad)
out
sar
jmp
xlat
popf
mov
or
sar
int
sub
inc
repz
stc
mov
lods
shl
sub
sub
inc
aaa
jg
lods
lds
loope
jg
xor
loope
cwde
fnstsw
pop
sub
pop
fnstsw
pop
xor
sub
add
and
cs
(bad)
cli
xchg
jmp
inc
loopne
pop
and
sub
push
sub
pop
or
jb
and
adc
loopne
cmps
cmps
mov
jge
dec
loop
cmps
stos
in
retf
xchg
xchg
mov
imul
pop
das
and
sbb
pusha
aas
jbe
sub
dec
jmp
in
(bad)
std
or
das
push
push
inc
or
pop
je
cmp
pop
repz
shr
xor
int3
fs
imul
push
stos
stc
lea
aas
jbe
(bad)
mov
test
xor
or
fs
push
xchg
mov
mov
in
repnz
imul
pop
stc
ins
push
and
or
jae
dec
xor
push
aam
repz
iret
or
sbb
sub
dec
hlt
nop
stos
push
and
jae
xor
dec
das
aas
dec
xor
pop
test
adc
inc
push
cmp
push
sbb
mov
aam
fidiv
arpl
xchg
not
xor
lock
rcl
push
jae
shl
sbb
addr16
push
jmp
aad
test
ja
sahf
jae
pop
cmp
xor
push
or
mov
pushf
hlt
xchg
jmp
push
sub
lock
ds
imul
mov
push
imul
xor
in
enter
mov
cmps
fld
dec
xor
imul
xor
push
inc
ds
jg
push
dec
sbb
add
js
push
adc
sar
pop
ins
fnstenv
imul
mov
loope
shl
test
or
xor
lock
je
jnp
sub
add
shl
and
inc
sbb
aad
outs
cwde
fdivr
push
adc
xor
add
imul
push
add
in
iret
and
jle
push
xor
(bad)
jmp
adc
js
pop
cmp
sti
xor
icebp
sbb
sub
out
(bad)
(bad)
(bad)
xor
jmp
push
jo
ins
imul
dec
rsqrtps
push
neg
dec
push
jo
or
push
dec
or
push
cmps
lds
sar
sbb
or
in
clc
popa
sbb
mov
cwde
mov
jmp
add
sbb
xor
imul
pop
push
call
sti
xchg
jmp
rcr
sti
mov
cmp
ficom
retf
mov
bound
dec
stos
enter
cmc
or
icebp
pusha
xchg
les
push
adc
sub
jecxz
repnz
cmp
fisttp
jle
push
xor
jnp
fiadd
ins
out
(bad)
mov
push
mov
cs
or
push
cmp
push
cmp
cmps
mov
jae
and
jle
push
repnz
fs
outs
adc
addr16
adc
push
jae
lds
inc
sbb
lods
fstp
mov
sbb
inc
adc
add
and
jecxz
out
ror
out
(bad)
outs
sbb
fs
aam
jmp
xlat
cmp
mov
cmp
outs
std
clc
or
not
gs
adc
dec
and
mov
jno
pop
push
inc
mov
cdq
sar
loopne
imul
dec
cmp
dec
or
sti
(bad)
mov
mov
or
data16
mov
jl
mov
mov
gs
mov
mov
dec
xor
pop
(bad)
sbb
jge
inc
or
jl
in
repnz
mov
pop
jns
jge
stc
mov
retf
scas
cli
xchg
mov
cs
or
mov
mov
pop
cmp
xor
or
mov
pop
adc
stc
mov
gs
lock
in
cmp
sub
mov
or
jno
pop
test
aas
dec
sub
and
mov
jp
or
dec
mov
dec
in
(bad)
add
and
fdiv
jbe
push
out
cdq
dec
cmp
in
pop
sub
popf
repz
pop
aas
inc
mov
sahf
int3
xchg
test
push
sub
pop
dec
das
inc
cmp
pop
cmp
mov
mov
mov
sub
inc
(bad)
sbb
cmps
jb
push
jle
dec
xor
jmp
retf
add
and
cmc
fcom
ja
pop
pop
out
mov
dec
and
ds
cmp
dec
adc
loop
out
jg
add
jmp
test
int3
movs
dec
xor
inc
and
sub
test
mov
jnp
pop
ds
xlat
out
in
add
inc
das
dec
push
ja
ja
sub
ss
adc
lods
mov
pop
sub
shl
xchg
rcr
stos
xlat
xchg
bound
aas
push
xor
push
dec
jmp
jns
jle
data16
push
aaa
pop
loop
jae
pop
add
clc
cdq
cli
inc
sbb
xchg
jmp
pushf
iret
popf
les
pop
es
mov
inc
pop
jae
jnp
pop
push
pop
cmp
repnz
fiadd
xchg
call
inc
mov
add
sub
jl
outs
add
lds
jno
je
jp
push
fs
adc
outs
adc
pop
cmp
cmps
hlt
cmps
aad
int3
scas
aad
lock
cmp
push
cmp
sbb
jecxz
lds
jmp
movs
mov
cwde
out
cmps
retf
mov
xchg
ror
jecxz
adc
call
aas
push
xor
inc
punpckldq
jo
aaa
add
out
out
mov
mov
cmp
popa
adc
repz
jno
jg
pop
rol
daa
push
jmp
aas
jp
pop
imul
cmc
mov
cmps
jecxz
cmc
stos
sbb
dec
xchg
jmp
or
bnd
mov
mov
jmp
call
inc
shl
outs
sbb
mov
push
jnp
fmul
fwait
jg
addr16
call
and
jnp
imul
add
adc
mov
mov
das
inc
add
fcom
mov
push
xor
push
mov
adc
inc
pop
aas
jge
ins
aas
ins
sbb
ins
orps
stos
cdq
aaa
push
cmp
loop
(bad)
sbb
test
scas
shl
mov
mov
dec
xor
mov
addr16
push
xor
in
mov
push
ss
ss
pop
sbb
aad
fimul
sahf
clc
jnp
iret
lea
movs
cwde
cmp
imul
push
cmp
xchg
fidiv
cmps
sub
jp
jl
das
push
sub
and
in
retf
test
or
add
js
inc
adc
jl
sbb
dec
adc
push
push
jbe
jne
addr16
push
arpl
ins
ds
xchg
xchg
les
mov
movs
retf
mov
(bad)
imul
adc
push
dec
sub
xchg
rcr
loopne
int
ficom
xchg
cld
mov
pop
clc
adc
push
add
mov
call
jnp
adc
pop
sub
and
loopne
int
aad
xor
push
add
cld
mov
push
pop
jl
gs
and
call
xchg
test
jmp
rol
daa
je
push
sbb
jne
icebp
jno
xchg
dec
daa
fs
pop
icebp
and
add
aas
push
mov
jl
outs
cmp
push
add
ror
and
aas
pop
sbb
or
jne
ins
cs
mov
add
push
or
and
or
mov
xchg
bound
dec
sub
xor
ss
pop
in
jbe
add
out
cmps
lds
mov
bound
inc
jb
pop
adc
xchg
stc
mov
cmp
add
pushf
cld
mov
and
pop
mov
and
pop
int3
lahf
sar
fistp
iret
dec
lods
jmp
call
shr
xor
cdq
enter
xchg
jcxz
cli
inc
sub
jl
pusha
loop
outs
sub
add
inc
adc
mov
call
xor
adc
loopne
jp
pop
out
into
inc
(bad)
cmps
icebp
adc
in
iret
test
sahf
sti
jae
sub
and
fdivr
popf
inc
and
or
add
xor
jb
pop
add
pop
dec
sbb
pop
cmp
out
cmps
ret
xchg
shl
mov
xchg
ficom
push
xor
sub
fsub
lock
enter
mov
outs
adc
xor
xlat
pushf
cld
jns
inc
xor
and
or
jg
fs
xor
dec
add
push
cs
daa
inc
inc
xor
dec
xor
dec
punpckhdq
inc
jmp
adc
and
jmp
out
repnz
jb
inc
add
jmp
mov
movs
fistp
lock
outs
adc
jg
(bad)
aad
call
xor
scas
mov
and
xor
fmul
lods
iret
test
pop
xor
sub
aam
div
sub
or
mov
sub
pop
jle
imul
retf
mov
mov
inc
xchg
xchg
(bad)
nop
fst
push
mov
xchg
addr16
outs
cmovno
push
mov
push
xor
dec
pop
jge
dec
sbb
inc
pusha
movd
out
popf
movs
retf
jne
jp
push
sub
xor
adc
js
sbb
or
adc
das
dec
push
push
sahf
mov
fiadd
pop
cmp
or
jb
push
add
xor
jne
mov
lahf
(bad)
aaa
gs
loope
mov
ret
sbb
ds
ds
fmul
stc
mov
jo
out
xlat
mov
pop
pop
inc
cs
push
dec
or
push
test
sbb
inc
sbb
sub
mov
jecxz
add
or
jge
repnz
pop
sbb
xor
jno
test
or
repz
jmp
addps
pop
in
lods
int3
mov
ret
xchg
cmc
mov
push
jle
or
xor
xor
std
cdq
lds
lds
dec
add
ja
pushf
movs
(bad)
test
mov
mov
push
pop
pop
or
dec
xor
sub
pop
(bad)
mov
stos
(bad)
mov
jno
jb
outs
sub
fnsave
and
push
jae
shl
cmp
int3
sub
into
and
fnstsw
nop
cwde
outs
call
push
(bad)
fild
add
xor
loopne
iret
xchg
jmp
dec
enter
push
jle
data16
pop
jecxz
(bad)
sbb
mov
pop
or
xchg
popa
stos
jmp
je
pop
push
mov
in
adc
or
adc
mov
sbb
gs
push
cdq
cdq
in
dec
mov
daa
test
sti
fidiv
mov
inc
push
jge
js
mov
(bad)
cmp
addps
pop
inc
mov
shl
js
int
sar
enter
jp
mov
xor
sti
xchg
cld
and
pushf
sub
(bad)
pop
repz
cli
jae
les
mov
inc
adc
movs
sub
and
cmp
std
push
adc
add
(bad)
out
fcom
(bad)
mov
push
sub
addr16
or
imul
loopne
mov
cmp
in
outs
and
sbb
sub
mov
xor
mov
xchg
call
push
and
dec
mov
imul
jge
cmp
cmc
lods
leave
movs
ret
push
je
hlt
jmp
in
pop
iret
out
adc
dec
pop
scas
sbb
jne
pop
jb
jae
aam
ins
(bad)
sbb
lds
sbb
cld
(bad)
mov
cmc
fdiv
dec
popf
out
jl
adc
es
or
retf
xor
sub
(bad)
(bad)
iret
inc
cmp
fwait
gs
push
jmp
outs
pusha
push
add
out
stc
pushf
dec
sub
retf
or
mov
stos
fnstenv
pop
mov
dec
shr
and
repnz
xchg
sbb
gs
dec
mov
mov
adc
push
xchg
jp
mov
cwde
(bad)
mov
jb
dec
aaa
imul
push
mov
push
mov
nop
cmp
nop
jmp
lock
outs
cmp
push
push
mov
add
jle
cmp
jp
mov
repz
inc
mov
or
test
jmp
push
jg
jle
push
cmp
lds
(bad)
ror
aad
push
std
mov
mov
ja
add
out
inc
inc
sub
and
mov
lahf
test
test
popf
or
imul
mov
lahf
ds
inc
cmp
pop
adc
cld
movs
outs
call
lock
mov
scas
dec
ror
sbb
adc
cmc
cwde
mov
jno
mov
jo
icebp
faddp
or
test
add
loopne
xor
xchg
(bad)
outs
(bad)
xchg
lea
jp
mov
cmps
inc
stos
test
adc
push
push
(bad)
aad
popf
(bad)
and
fcomp
int
out
clc
jb
aas
lods
mov
fstp
popa
imul
ins
jno
push
dec
stos
pop
lea
or
xchg
dec
xchg
stos
pushf
jbe
bound
mov
(bad)
mov
mov
rcl
cmc
les
in
and
sub
mov
movs
push
cmp
div
jne
jno
popf
adc
das
jbe
mov
into
cmps
out
fsubp
outs
imul
push
test
or
inc
retf
pop
or
dec
mov
sbb
mov
dec
mov
shl
xchg
cmps
inc
mov
leave
pop
xor
pop
call
sub
cdq
mov
jne
xor
xchg
sbb
int3
jmp
xchg
movs
fdiv
push
in
push
lods
cmps
sub
aaa
or
push
out
mov
and
inc
mov
ret
xor
sbb
dec
nop
loopne
jg
jl
add
stos
stos
xor
jl
or
push
outs
retf
adc
out
mov
cmp
outs
clc
ins
push
loope
adc
jmp
test
add
dec
cmp
shr
mov
push
jmp
enter
rcl
xchg
push
repnz
nop
mov
pop
neg
jae
push
sbb
test
loop
pop
stc
pop
shr
jno
test
stos
mov
aas
aam
adc
out
in
fistp
out
fnstcw
(bad)
pop
out
inc
out
jo
xor
mov
dec
out
sbb
inc
and
push
ja
xchg
xchg
push
mov
pop
fldenv
out
mov
xor
fmul
sub
mov
inc
mov
push
shl
mov
pop
pusha
outs
mov
iret
pop
xor
clc
jecxz
inc
std
push
ss
ficom
(bad)
jecxz
arpl
xchg
push
sar
lahf
ds
mov
mov
xor
ss
int3
popa
xor
fnstenv
das
shr
das
ja
ficomp
push
pop
xor
fnsave
mov
popf
adc
int3
leave
int
pop
fisttp
adc
imul
sub
add
in
vmwrite
dec
je
out
out
and
pusha
aaa
push
cdq
shl
into
into
(bad)
out
mov
xchg
push
or
cmc
sbb
das
ret
xchg
push
mov
xchg
in
inc
test
mov
test
sti
dec
fisubr
loop
test
xor
push
cmp
push
int3
ret
sbb
mov
pop
add
das
fadd
push
fidiv
stos
add
pop
lods
cwde
push
das
sub
mov
inc
dec
xor
retf
inc
pop
jp
jmp
enter
fisub
add
movs
leave
mov
retf
mov
pusha
mov
and
inc
in
jmp
adc
mov
ficomp
inc
pop
into
(bad)
push
loopne
jno
jmp
xlat
mov
test
cld
push
ret
cmp
(bad)
adc
in
mov
cdq
out
or
fld
imul
lds
mov
mov
out
push
scas
xor
outs
into
call
scas
jmp
icebp
js
sbb
popf
inc
push
outs
fistp
jl
cs
jmp
push
call
mov
add
push
call
hlt
jmp
and
and
jge
fdiv
js
jmp
xchg
pop
or
mov
mov
xor
xor
push
sub
int3
cmc
imul
arpl
cs
je
fwait
jne
ins
mov
push
push
fimul
sbb
test
stos
xor
shl
sbb
lods
arpl
mov
push
mov
lahf
in
sub
lock
xchg
add
(bad)
call
cmp
mov
cwde
xor
test
loop
jb
call
shr
and
mov
out
jbe
rcl
sbb
(bad)
xor
mov
sub
sub
mov
in
jle
xor
enter
pop
mov
(bad)
jne
rcl
inc
sub
push
sub
pop
xor
mov
add
or
aad
xor
pop
cmp
ficomp
jmp
rcl
sbb
push
jecxz
cmp
mov
sub
mov
jg
pushf
mov
repz
jmp
test
mov
out
jae
out
stos
pop
cdq
call
icebp
inc
popa
pushf
xchg
push
push
xlat
sbb
(bad)
mov
jmp
sbb
add
xor
dec
or
and
push
mov
and
(bad)
(bad)
aas
jae
push
jno
or
cmp
mov
mov
xor
fsubr
or
jbe
add
test
(bad)
xchg
sbb
pop
popa
movs
das
xor
cmp
mov
popf
or
call
ja
push
gs
adc
pop
les
into
js
mov
add
stos
out
jmp
sti
mov
mov
fcmove
std
jbe
pop
imul
and
cwde
push
cwde
xor
dec
push
jns
aaa
loope
pop
stc
inc
pop
pop
into
inc
pop
or
aaa
mov
loopne
and
inc
repnz
add
cmp
mov
into
dec
push
dec
stos
xlat
mov
jbe
icebp
out
adc
addr16
mov
mov
mov
ins
fld
xor
mov
test
leave
add
(bad)
mov
mov
inc
(bad)
pusha
enter
jp
arpl
stc
mov
mov
sub
in
add
mov
cmp
sbb
xor
jmp
cmps
sbb
les
sbb
sbb
xor
scas
mov
xchg
cdq
mov
pop
adc
fnstsw
push
(bad)
cwde
mov
in
sar
shr
in
push
jnp
xlat
les
jb
mov
iret
scas
std
imul
add
aas
(bad)
sbb
cmc
sub
mov
test
icebp
dec
scas
js
dec
lahf
scas
dec
mov
pop
dec
aaa
adc
(bad)
xor
inc
push
in
fiadd
call
jbe
retf
push
dec
xlat
fs
mov
jp
mov
es
inc
cmp
inc
add
sahf
loop
pop
jo
lea
or
shr
aad
pushf
xor
(bad)
sbb
rcl
lods
or
adc
sbb
cmp
into
push
out
jbe
ss
test
mov
retf
push
or
(bad)
fimul
mov
hlt
mov
push
pop
in
(bad)
xor
das
in
aam
jo
dec
cmp
cld
mov
pusha
cmp
jae
xor
out
in
call
fadd
jmp
dec
xchg
xchg
pop
sti
pop
cmp
cmc
mov
push
dec
jmp
adc
cmp
aam
jbe
xor
(bad)
mov
(bad)
xchg
mov
mov
mov
icebp
and
stos
mov
add
rcl
nop
pop
mov
pop
sub
out
pop
jg
(bad)
xchg
ins
lods
push
aaa
jno
enter
mov
cmps
je
je
sbb
add
int3
sti
iret
cmp
push
xchg
test
cmps
out
jb
fnstcw
sbb
movs
ret
xor
or
add
xchg
adc
sbb
xor
lock
scas
push
int
outs
ss
sub
das
ss
sub
jp
and
push
sub
mov
jecxz
cdq
push
cmc
xor
lds
fwait
mov
inc
in
leave
and
mov
in
repnz
push
dec
scas
add
icebp
push
cmps
pop
adc
repz
or
cli
pusha
push
adc
or
adc
aas
addr16
xor
push
dec
jp
adc
jae
mov
ja
imul
mov
scas
push
test
mov
(bad)
adc
test
pusha
and
xor
cs
push
xor
(bad)
sti
or
(bad)
gs
adc
leave
mov
adc
jbe
jae
pop
xor
sub
cmp
inc
or
ins
shl
xchg
inc
sti
pop
cmp
cld
adc
cmp
inc
adc
pop
in
or
cmp
sbb
pop
sar
daa
jl
push
call
sbb
jp
scas
jmp
stos
add
jecxz
xlat
pop
dec
jno
out
es
in
ds
inc
cwde
stos
imul
gs
aas
lea
(bad)
mov
pop
inc
jae
jbe
jle
and
xor
mov
repnz
out
stos
push
xchg
ret
cli
jg
xor
mov
aaa
imul
cmp
cdq
mov
ret
xchg
test
cwde
lods
mov
or
stos
sar
cmc
call
push
sub
xor
scas
les
xchg
dec
push
mov
sbb
out
add
jo
cmp
outs
rol
daa
sbb
inc
call
shl
inc
ss
ret
cmp
outs
ins
popf
push
lock
mov
push
lock
push
sbb
jne
pop
(bad)
push
push
int
cld
fnstenv
xor
inc
sahf
mov
push
push
and
mov
lea
retf
lods
ret
jbe
and
push
jns
mov
dec
lahf
adc
mov
cmp
out
dec
dec
gs
sbb
cli
sub
push
and
dec
fbld
push
scas
mov
mov
lock
cwde
push
enter
mov
pop
lds
(bad)
jg
shr
push
mov
leave
scas
push
(bad)
fcmove
aam
lock
push
xlat
pop
push
shr
mov
js
push
push
scas
out
dec
push
cmp
push
inc
std
push
in
stos
jne
ret
adc
sahf
pop
inc
sbb
jp
stc
ins
dec
mov
pop
mov
pop
stos
dec
or
aas
and
loopne
in
(bad)
aaa
mov
or
mov
inc
lea
xchg
sbb
jp
inc
fcmovnu
fs
cmps
jg
mov
call
fwait
push
mov
lahf
ja
push
(bad)
jnp
pop
test
mov
mov
xor
in
imul
mov
xchg
into
ficom
call
ret
lea
or
jb
fwait
pop
lods
sub
scas
and
out
aad
pop
push
push
sbb
arpl
xchg
pusha
stc
paddb
in
lock
mov
mov
aas
jl
dec
jae
rcl
adc
jo
test
mov
into
and
xchg
add
call
out
std
pop
sbb
bnd
jae
loopne
fs
mov
adc
(bad)
fdivr
mov
sub
cmp
inc
aam
pop
adc
test
mov
cmp
jp
inc
leave
sub
add
mov
cmp
xor
je
xchg
jmp
xchg
mov
jnp
pop
or
mov
pop
clc
or
hlt
stc
adc
ret
xor
in
jns
(bad)
jle
aas
adc
jns
(bad)
cmp
jno
aad
imul
data16
dec
rcr
scas
movsx
push
dec
pop
les
jbe
test
and
addr16
dec
push
pusha
add
cmps
into
push
stos
pop
adc
pop
mov
(bad)
leave
ud1
xor
stos
in
sar
lock
mov
jmp
push
inc
ficom
sub
mov
cmp
aaa
cld
cld
jmp
and
cli
out
icebp
(bad)
mov
mov
outs
sbb
cmp
neg
xor
outs
fadd
aad
rcr
mov
and
in
sbb
cmps
fwait
add
add
cdq
jnp
cmps
dec
call
xlat
jnp
data16
cmp
aam
mov
cs
sub
js
js
sbb
jl
dec
fs
frstor
mov
pop
test
inc
pop
shl
dec
sub
mov
push
movs
shl
mov
test
fldcw
mov
xor
push
mov
mov
mov
jmp
test
xor
xchg
add
push
pusha
and
or
mov
ror
sahf
mov
xchg
pushf
cwde
jbe
push
or
aas
ja
xchg
imul
sub
loop
sahf
shl
mov
into
or
lods
mov
sbb
jo
or
push
pusha
shl
gs
jmp
inc
sbb
mov
push
xor
pop
ins
push
(bad)
in
clc
in
pop
xchg
sahf
fisub
mov
pop
sub
pop
lahf
and
jno
or
dec
retf
repnz
stc
jle
fisubr
or
aad
stos
mov
stos
dec
add
je
mov
mov
and
add
mov
pop
mov
xchg
adc
and
icebp
je
sti
movs
and
mov
pusha
pop
(bad)
lds
mov
or
rcr
mov
daa
or
xchg
call
mov
mov
(bad)
btr
jmp
retf
or
adc
adc
outs
push
push
pop
cwde
ins
push
mov
pop
xchg
inc
adc
or
mov
(bad)
dec
hlt
outs
and
div
call
fcom
not
sub
and
pop
dec
iret
push
stos
retf
loop
test
sub
iret
mov
jbe
fmul
mov
js
into
inc
mov
and
inc
imul
mov
or
movs
scas
jns
loop
jg
adc
or
sbb
fisub
jl
cmp
ds
sbb
pop
jg
pop
mov
xor
ficomp
cmps
xor
pop
fcomp
es
mov
or
retf
cmp
(bad)
movs
cmp
ja
push
in
(bad)
nop
fwait
add
mov
inc
(bad)
xchg
cmp
(bad)
pop
inc
out
pop
adc
cmps
sub
mov
sbb
call
rcr
mov
jns
push
jns
lods
ror
ja
add
push
(bad)
mov
jecxz
das
das
mov
inc
xor
dec
in
or
mov
stos
fnstsw
shr
push
mov
dec
ja
cdq
mov
fistp
sbb
xchg
stc
cli
jnp
ins
aam
inc
jbe
fcom
jp
lahf
xchg
push
add
and
sub
in
dec
jmp
mov
(bad)
cmp
cs
sbb
mov
cmp
pop
outs
add
add
pop
add
bound
mov
push
mov
mov
pop
add
push
mov
in
pushf
xor
xchg
call
sub
shl
pop
iret
mov
jnp
pop
mov
int
stos
fwait
jnp
mov
cwde
fdivr
mov
xchg
pop
outs
mov
mov
int
sub
jmp
daa
ss
leave
add
(bad)
jne
movs
pop
mov
jns
mov
push
ja
xor
pop
retf
push
mov
push
and
and
cmp
test
in
cwde
rcl
sar
jns
test
lea
inc
and
(bad)
ss
mov
les
or
mov
or
xchg
movs
sbb
ins
sub
pop
mov
cdq
pop
ins
cmc
adc
std
xchg
adc
xchg
xchg
test
mov
adc
jns
and
lds
mov
sbb
enter
cdq
outs
aaa
loopne
(bad)
loopne
and
adc
xchg
xchg
sub
xchg
xchg
in
bound
arpl
lods
push
pusha
mov
outs
pop
loopne
sub
adc
mov
cmps
fstp
inc
jl
mov
gs
push
retf
out
push
inc
ret
lods
pushf
and
gs
add
add
xor
mov
scas
repz
in
add
sbb
xchg
jne
ret
(bad)
daa
push
retf
aas
into
jmp
add
push
add
mov
pop
or
stc
inc
and
pop
or
adc
push
inc
mov
cmp
rol
sbb
mov
clc
mov
sub
ins
or
retf
mov
retf
xchg
aaa
iret
adc
push
mov
mov
cdq
sar
mov
pop
std
sub
inc
outs
pop
push
add
inc
aas
dec
sar
leave
xchg
mov
mov
xor
retf
add
sbb
dec
int3
imul
fs
lods
add
jnp
es
push
cmp
xor
fild
push
inc
shl
xchg
es
jp
or
mov
mov
xor
jmp
pop
shr
xchg
sbb
adc
adc
mov
int3
fdivr
in
rcl
inc
mov
adc
jge
push
bound
xchg
lahf
sub
dec
test
or
adc
ins
add
push
push
push
pop
mov
outs
dec
jne
lds
pop
add
mov
push
add
std
and
jne
push
mov
(bad)
ret
sahf
mov
int3
jp
pop
sub
xchg
stos
rcl
js
xor
xor
mov
mov
xchg
(bad)
lahf
xchg
stc
mov
and
add
mov
lahf
stos
loopne
(bad)
mov
jge
cdq
neg
push
or
mov
mov
xchg
stos
nop
in
test
test
push
inc
and
addr16
mov
fnstenv
lock
fild
inc
out
je
sbb
in
int
call
hlt
mov
dec
loop
clc
push
loope
mov
cmp
cmp
loope
cmp
fs
ins
adc
mov
outs
pop
pop
shl
xor
jge
push
jne
fs
das
pop
sbb
or
sbb
out
xor
call
add
xchg
fisub
aaa
int
(bad)
mov
scas
aad
mov
test
scas
cli
mov
fmul
dec
xor
cs
sti
call
xchg
loope
int3
xchg
fwait
(bad)
mov
cmp
pop
ss
pop
jg
mov
sub
popf
sar
push
sbb
jp
jp
push
dec
sbb
jp
es
push
mov
xor
jp
cmp
adc
cmp
jns
jo
add
stos
shr
ficomp
sbb
inc
adc
jns
pop
add
mov
xchg
je
(bad)
test
sub
je
pop
sub
cmp
mov
scas
mov
imul
cdq
cmc
mov
mov
into
(bad)
in
fisttp
jmp
push
sub
retf
pop
ins
and
or
and
daa
pop
out
gs
aas
jae
jne
pop
dec
imul
push
xlat
test
mov
sbb
sti
call
pop
wrmsr
pop
add
aas
cmps
(bad)
movs
(bad)
mov
mov
add
dec
sbb
and
jecxz
retf
xchg
fild
xchg
push
in
fbld
dec
or
popa
xor
push
sbb
jae
inc
xor
push
and
pop
push
jnp
pop
test
inc
push
push
sbb
jae
inc
xor
jb
sub
mov
mov
push
jne
pop
aaa
mov
inc
xor
push
push
cmp
inc
rol
jmp
xor
pop
aad
fst
ins
xchg
cli
mov
fidivr
retf
mov
jbe
dec
loop
leave
call
and
jge
dec
pop
push
sub
xor
push
and
cmp
mov
dec
add
aaa
aaa
shl
ins
out
jmp
int
rol
repz
jnp
add
outs
daa
dec
adc
cmps
(bad)
scas
shl
jge
lods
out
mov
mov
arpl
in
ja
fnstcw
adc
ja
cmp
nop
and
imul
xchg
xor
inc
and
sub
les
imul
fwait
clc
call
adc
mov
mov
mov
inc
icebp
scas
enter
scas
inc
and
dec
or
jnp
jp
pop
adc
out
mov
movs
movs
ror
push
inc
and
hlt
pop
aas
jp
add
(bad)
pushf
(bad)
dec
adc
pop
loope
das
pop
push
dec
sub
mov
mov
cwde
arpl
jae
mov
xchg
loope
or
sub
(bad)
icebp
xchg
sar
mov
ds
sar
inc
mov
jp
imul
cmp
inc
movd
pop
call
repnz
stos
out
lds
adc
popf
pushf
repz
out
adc
sub
xor
cmps
jmp
shl
mov
xchg
sar
add
stc
cs
or
pop
pop
out
fimul
cdq
fdiv
mov
cmps
and
and
pop
repz
jne
fs
(bad)
xchg
jecxz
fdivr
jns
push
sbb
cmp
fcomp
rcr
xor
and
pusha
jecxz
les
pop
jns
pop
add
sub
mov
or
jns
add
mov
test
in
mov
imul
cmp
sbb
or
outs
sbb
inc
into
xchg
fst
ss
lock
fs
scas
iret
lods
mov
ss
inc
cmp
ret
movs
out
jg
mov
cdq
imul
xchg
mov
mov
xor
cmp
out
loope
retf
mov
push
sbb
fidivr
jae
fisub
iret
test
in
stos
add
ja
ins
aas
dec
sbb
and
dec
adc
inc
add
jne
jnp
and
dec
cmp
jnp
pop
add
mov
jle
push
cs
or
sbb
pop
shl
xchg
cld
or
out
mov
mov
xchg
fdivr
and
sbb
jne
cld
loope
ret
xchg
ror
test
xchg
les
lds
inc
push
icebp
pusha
sbb
inc
das
dec
or
loop
ret
(bad)
in
xchg
mul
leave
(bad)
popa
loope
out
(bad)
loopne
pop
js
or
inc
stos
repz
push
in
xchg
fdivr
cdq
(bad)
popa
pop
pop
fisub
dec
sbb
and
pop
adc
ins
and
pop
loopne
out
cmc
nop
sar
push
loopne
adc
dec
adc
or
adc
ss
cmps
retf
popf
cld
outs
lds
test
push
ins
inc
or
ss
inc
sub
pop
and
or
jbe
addr16
stc
mov
and
jg
mov
inc
and
cmp
adc
mov
mov
mov
(bad)
(bad)
and
retf
mov
rcr
jle
test
imul
adc
sub
cmp
pop
cmp
jns
js
pop
ret
mov
test
mov
nop
fdivr
jmp
repz
scas
stos
mov
aas
daa
data16
cmp
pop
xor
dec
out
stos
(bad)
and
arpl
dec
adc
inc
mov
inc
or
stos
rcl
push
out
iret
mov
bound
loopne
jp
fs
jg
and
inc
add
iret
mov
scas
call
ret
mov
cmp
mov
les
mov
call
stos
xlat
cmp
sub
pop
bnd
push
call
int3
test
xchg
sti
nop
shl
push
aad
aas
dec
pop
sub
int
fcom
fadd
xchg
imul
push
xchg
(bad)
mov
mov
add
in
in
or
mov
fwait
loope
popa
xchg
cmc
mov
pusha
xor
mov
xor
daa
pusha
mov
sbb
push
inc
push
jl
inc
cwde
fiadd
cdq
inc
cmps
adc
cmp
pop
mov
(bad)
xchg
cld
inc
xor
dec
adc
mov
xchg
rol
push
xor
cmps
jecxz
(bad)
mov
js
gs
mul
push
sbb
out
cmps
cmc
lods
dec
fwait
and
sar
popf
fadd
or
je
imul
or
inc
jmp
jno
addr16
stc
(bad)
lds
push
(bad)
stos
shl
mov
shr
xchg
(bad)
xchg
mov
mov
push
or
aaa
js
outs
cmc
dec
add
mov
mov
pushf
push
hlt
sbb
in
sahf
retf
(bad)
(bad)
dec
sub
sub
enter
xchg
je
dec
das
(bad)
jo
leave
jns
movs
test
fnop
mov
scas
int3
mov
pop
sbb
sub
imul
adc
mov
sbb
mov
cmps
nop
shl
addr16
(bad)
test
(bad)
enter
push
gs
(bad)
in
mov
lahf
(bad)
push
push
mov
sbb
fcmove
scas
jmp
xor
adc
retf
popa
sbb
ret
into
mov
lods
rcr
test
xchg
stc
addr16
in
mov
add
jae
jl
outs
or
mov
push
inc
push
enter
(bad)
lahf
stos
mov
adc
sub
xchg
hlt
xchg
cmps
mov
scas
jl
arpl
push
and
adc
dec
repnz
test
add
and
out
test
test
pop
xor
dec
fstp
test
cdq
js
aaa
inc
adc
mov
cmps
push
pop
jb
dec
push
inc
sub
out
repz
shl
cld
xchg
imul
dec
ffreep
lahf
(bad)
xchg
jne
nop
fdivr
shr
ror
or
pop
or
jae
cmp
dec
or
and
pop
jne
jnp
mov
and
outs
pop
xor
xchg
ret
jp
mov
xchg
stos
mov
pop
daa
dec
sub
pop
aas
daa
dec
xor
jge
pop
xchg
xchg
aad
mov
mov
imul
pop
jmp
mov
jl
mov
aam
shr
and
xchg
movs
push
iret
movs
into
push
pop
push
dec
clc
or
in
movs
shl
sub
gs
loop
test
sbb
add
fnstcw
dec
cmp
stos
or
jl
enter
mov
xchg
into
lea
sub
outs
ss
adc
dec
das
es
push
ds
sbb
(bad)
aad
stos
(bad)
enter
inc
adc
jge
daa
inc
cmp
jae
and
cmp
sub
ss
rcl
addr16
shr
jge
int3
or
aas
outs
and
pop
(bad)
mov
mov
mov
jl
mov
jo
gs
jb
fadd
cmps
out
xchg
shl
jbe
and
sub
or
and
pop
add
fnstenv
push
add
cmp
sub
inc
out
xchg
clc
outs
adc
mov
scas
fcomp
call
shl
ins
xor
in
std
xchg
mov
aaa
xchg
call
fs
adc
inc
add
pop
pusha
sub
ja
jl
repz
cmp
sbb
dec
push
push
pop
loop
xor
xor
jo
jns
jl
(bad)
(bad)
loop
dec
and
sbb
jle
add
pushw
inc
and
xchg
loop
movs
mov
jnp
jmp
mov
popa
sub
cmp
inc
cmps
jmp
lahf
xlat
mov
mov
out
(bad)
xchg
ins
pop
add
jne
fisub
sbb
sti
fidivr
lods
cmps
pop
sub
jbe
cwde
fist
or
sbb
cmova
dec
sti
cmps
out
sub
pop
fnstsw
sub
loopne
imul
mov
dec
sbb
aad
cli
xchg
inc
or
movs
iret
scas
shr
sbb
mov
mov
out
xchg
out
(bad)
into
sub
outs
jnp
cmp
ret
stc
xchg
aad
popa
out
cmps
cmc
lods
adc
ss
mov
dec
or
repnz
pop
sbb
cwde
std
test
sahf
rcl
cmps
les
rcr
inc
jns
iret
movs
into
cmp
push
(bad)
(bad)
cdq
mov
xchg
cli
mov
xchg
mov
xchg
cld
ss
push
push
sbb
cmp
push
shl
loope
fsub
test
sbb
xchg
sar
repnz
mov
mov
inc
push
ds
xor
push
sti
mov
bound
repnz
stos
shl
and
xor
xor
in
out
lea
xlat
mov
jb
pop
in
out
cmp
inc
lock
jne
scas
mov
jns
imul
inc
sub
inc
sub
imul
fwait
jns
push
(bad)
jg
push
xchg
fdivr
pop
cmp
lods
(bad)
mov
jecxz
(bad)
mov
adc
pop
xchg
div
lods
(bad)
mov
dec
pop
push
inc
xor
jle
jne
aas
dec
sbb
shl
pop
imul
cmp
dec
or
mov
pop
or
and
mov
sub
(bad)
int3
test
fs
inc
adc
push
dec
add
cmp
jl
imul
fidivr
fild
mov
adc
push
mov
mov
scas
(bad)
fs
gs
sbb
add
push
pop
adc
xor
data16
bound
dec
sbb
sub
daa
and
xor
jnp
cmp
xor
retf
and
jl
bound
jae
cmp
jp
add
pushf
bound
std
mov
or
add
jo
xor
dec
aam
stc
(bad)
in
adc
mov
xchg
clc
and
sub
jmp
push
je
sub
pop
sub
cmp
fwait
xor
inc
mov
pop
je
nop
ficomp
add
loopne
mov
scas
fstp
fist
leave
mov
jecxz
aam
or
xchg
fnstenv
lods
cs
jno
dec
in
repnz
mov
mov
cwde
adc
retf
scas
sar
ins
minps
inc
push
jle
outs
add
jae
imul
or
jecxz
lds
or
daa
jp
mov
jo
xchg
repnz
retf
inc
cmp
mov
das
jp
sbb
scas
inc
cmp
sub
retf
sti
xchg
mov
mov
aas
stc
xchg
sub
aad
fdivr
inc
daa
dec
add
adc
sub
adc
pop
add
push
sbb
nop
fwait
loopne
icebp
(bad)
leave
xor
sbb
hlt
leave
call
js
mov
cwde
cld
les
xor
mov
lahf
scas
xchg
les
add
push
xor
es
and
add
and
push
dec
cmc
test
ins
add
(bad)
mov
mov
ret
cmc
xchg
repz
sub
(bad)
xchg
fidivr
add
ret
dec
mov
into
jns
push
mov
xchg
clc
or
inc
in
cmp
or
mov
xchg
lahf
cmp
push
in
sub
cdq
sar
mov
jae
in
jb
sbb
out
jp
loope
daa
xor
mov
adc
pop
sub
pop
sub
aam
test
bound
jp
or
pop
sub
sub
arpl
je
shl
fwait
in
mov
lahf
inc
aaa
push
adc
ret
and
cmp
inc
scas
jmp
cmc
mov
sub
xchg
mov
aaa
push
adc
es
inc
add
pop
scas
cmp
jge
pushf
out
leave
mov
(bad)
(bad)
jmp
mov
xor
sar
xor
dec
push
push
xlat
lds
ja
push
cmp
jo
and
mov
sahf
(bad)
(bad)
fstp
aas
inc
fwait
adc
xor
pop
pop
and
gs
(bad)
jbe
jb
clc
mov
mov
mov
push
jno
push
jmp
fmul
push
sbb
jmp
cld
mov
xchg
jge
push
and
repnz
push
inc
sbb
and
add
dec
(bad)
(bad)
imul
mov
mov
outs
aaa
jle
jg
stos
into
repz
in
lods
call
repz
cli
xor
adc
push
loopne
loope
mov
lahf
in
mov
dec
or
inc
xor
pop
sub
xor
xor
(bad)
mov
and
pop
jecxz
out
movs
mov
pop
xor
rcr
xor
pop
sbb
or
cwde
out
in
call
pop
test
(bad)
cmc
fwait
mov
sbb
lods
sar
sbb
or
dec
out
push
inc
movsx
daa
or
lock
out
(bad)
cli
jg
dec
and
cmp
ja
jmp
(bad)
mov
rcl
ret
lods
shl
(bad)
loope
repz
mov
cvtdq2ps
mov
test
add
aaa
jo
pop
push
mov
test
mov
sub
jmp
mov
nop
sub
or
add
mov
mov
pop
push
dec
and
pop
sub
mov
stos
repz
mov
jle
jge
pop
add
cmps
out
mov
bound
mov
ins
sub
int
rol
outs
add
ficom
pop
xor
pop
add
out
xchg
stc
data16
pop
scas
aam
lahf
fdivr
daa
push
add
cmp
rol
dec
ss
add
js
and
cmc
(bad)
stc
lods
loopne
fdivr
icebp
lahf
(bad)
jb
call
mov
mov
or
xchg
aam
std
sub
dec
or
icebp
call
mov
stos
in
movs
(bad)
imul
add
loope
loopne
ja
pop
loop
outs
add
daa
imul
fs
movs
loopne
neg
dec
cmp
mov
and
or
aaa
popa
sbb
xor
jnp
jnp
xchg
fbstp
repz
and
add
call
ficom
enter
loop
jecxz
ror
push
les
icebp
lahf
cld
sbb
je
out
mov
bound
dec
push
push
or
shl
int3
mov
mov
inc
adc
in
mov
mov
inc
in
shr
xchg
fdiv
or
ja
pop
xchg
fdivr
adc
dec
xor
in
dec
jmp
or
jbe
push
sbb
les
ins
sbb
dec
in
fwait
leave
mov
push
push
mov
mov
cmc
call
in
mov
or
retf
(bad)
lds
ja
mov
or
in
pop
in
or
pop
loopne
cmc
fs
sti
mov
xchg
or
and
icebp
std
mov
repnz
dec
movaps
js
add
out
(bad)
mov
xchg
rol
pop
push
cmp
xlat
mov
mov
stos
fild
jg
sub
sahf
jmp
cld
dec
sbb
ins
mov
inc
sub
jg
sbb
add
sbb
mov
xor
inc
cmp
mov
cld
jae
ins
or
sbb
fist
jo
loop
aad
lods
fdiv
lods
ret
scas
fstp
jg
pop
sbb
cli
jbe
lahf
iret
xchg
not
fstp
inc
or
sbb
xchg
lds
mov
leave
push
jmp
inc
adc
dec
mov
xchg
les
push
xor
push
aaa
and
push
pop
inc
ds
in
mov
nop
fchs
call
(bad)
les
fnstsw
inc
sub
fwait
dec
and
jne
xor
and
inc
not
in
xchg
imul
std
xchg
shr
dec
cmc
mov
mov
add
inc
adc
mov
test
cmovno
and
push
or
push
je
pop
sub
push
in
jmp
pop
outs
sub
(bad)
out
cld
sub
mov
cdq
movs
fist
aaa
push
pop
out
clc
xor
out
xchg
mov
sub
sbb
fnsave
rcl
mov
sub
pop
ds
fs
dec
lods
aad
fidivr
pusha
or
mov
or
push
sub
or
rol
arpl
je
pop
ror
push
push
xor
push
jmp
cmovs
push
loopne
stc
inc
cmp
mov
mov
mov
inc
push
jle
(bad)
out
(bad)
mov
mov
mov
pop
scas
cmp
and
dec
pop
push
push
mov
scas
call
popa
push
(bad)
jge
adc
add
xchg
xchg
test
xchg
fnstcw
stos
out
fwait
jecxz
in
(bad)
pushf
clc
jp
jne
push
cli
mov
mov
xor
(bad)
(bad)
in
lods
mov
frstor
shl
outs
sub
mov
jae
test
(bad)
sar
dec
cmp
jnp
out
mov
mov
mov
stos
adc
inc
push
push
sbb
aam
(bad)
mov
xor
arpl
(bad)
cmc
mov
in
mov
cdq
fidivr
popa
add
lods
jmp
les
or
imul
push
add
xor
xchg
cmc
(bad)
push
(bad)
fdivr
gs
xchg
inc
add
fst
gs
(bad)
movs
outs
lahf
fst
sbb
fisttp
(bad)
ss
aam
int3
sahf
rcr
push
push
adc
cmp
pop
cmp
cmp
leave
pop
add
mov
sbb
mov
mov
xchg
add
mov
add
xor
lods
es
es
inc
pop
xchg
push
add
push
adc
jle
push
mov
fidiv
mov
ret
cmps
in
movs
xlat
test
movs
out
lea
xchg
cli
add
fsub
nop
pop
sbb
add
mov
mov
jge
adc
push
xor
fstp
jo
retf
sahf
lahf
mov
or
inc
xor
mov
mov
mov
lods
jo
xchg
in
push
xor
pop
jmp
mov
test
cdq
push
or
stc
stos
stc
iret
adc
push
push
loop
in
rcl
dec
test
(bad)
cs
add
retf
sbb
inc
loop
adc
std
popa
es
retf
cs
pop
je
test
lea
add
jno
pop
or
add
pusha
jo
jle
sub
jno
out
test
cdq
jg
mov
jl
mov
xchg
sub
add
clc
call
test
mov
test
cmp
(bad)
cmp
nop
std
or
addr16
in
push
pop
cmp
je
mov
in
leave
mov
cli
xchg
jge
add
sti
xchg
int
push
popf
enter
sbb
loope
in
jno
dec
xchg
push
popa
push
lock
je
jb
add
call
scas
inc
cmp
arpl
jb
cmovnp
retf
sbb
nop
fnstsw
pop
loop
stc
scas
cmps
lds
repz
fdivrp
in
std
adc
test
leave
(bad)
out
(bad)
sub
dec
(bad)
sbb
cmp
pushf
aam
ins
test
clc
or
and
sbb
test
mov
dec
add
cmp
pushf
(bad)
fild
mov
cmc
xchg
stc
push
xchg
jecxz
mov
cmps
pop
ja
push
pop
sbb
shl
lods
into
push
or
retf
xchg
hlt
cdq
sub
xchg
jmp
inc
jp
arpl
je
pop
push
or
mov
jmp
call
jno
pop
pop
add
xor
adc
mov
test
div
mov
add
inc
sub
pop
sbb
enter
fisub
daa
bound
js
les
fbstp
jmp
icebp
mov
push
mov
jo
mov
pop
and
retf
xchg
pop
jmp
stc
adc
or
in
clc
mov
sub
pop
cmp
loop
out
movs
call
jmp
daa
dec
xchg
sub
cld
xchg
push
xor
dec
sbb
jbe
xchg
aam
stc
cmp
push
cmp
push
adc
repnz
cmps
lds
mov
xchg
jns
push
or
mov
adc
push
inc
adc
mov
xchg
icebp
mov
adc
add
repnz
sbb
xlat
test
mov
mov
pop
and
ficom
mov
jmp
pop
or
cld
or
fidiv
ret
mov
aam
push
add
das
cmp
fs
dec
sub
cli
nop
sti
mov
rol
jno
arpl
dec
or
or
call
xor
rcr
push
ss
movs
icebp
mov
popa
add
cwde
ja
popa
sbb
mov
inc
adc
cmc
sahf
cld
mov
push
call
or
jnp
jle
rcl
mov
stos
leave
xor
inc
test
and
loope
movs
xlat
xchg
int
dec
out
call
shl
pop
or
push
outs
add
sub
mov
push
push
hlt
mov
fcom
and
sub
push
sbb
(bad)
mov
dec
sbb
lods
fnstenv
push
das
inc
stos
shl
pop
xor
push
adc
out
arpl
jb
jae
movs
mov
fnstsw
sbb
pop
cmp
hlt
xor
dec
and
pop
add
aas
ins
sbb
call
clc
xchg
daa
cmp
outs
add
xchg
pop
out
mov
sub
pop
jo
push
aaa
dec
das
jmp
push
cwde
test
xchg
sti
nop
push
xor
or
push
es
add
(bad)
and
mov
xor
xor
push
(bad)
(bad)
into
jno
push
mov
and
jmp
push
jg
mov
mov
pop
xor
daa
gs
scas
hlt
xchg
in
and
push
mov
popf
in
lods
in
ins
das
(bad)
mov
sbb
mov
xchg
dec
xor
mov
xchg
fidiv
inc
test
jge
jl
xchg
fstp
stos
out
lea
pop
push
and
jge
(bad)
popf
mov
push
adc
push
sub
sub
jp
jne
sbb
push
cmp
je
clc
jae
ja
fcom
push
inc
and
inc
aas
push
and
and
sub
pop
xchg
les
inc
daa
cmps
lds
push
cmp
dec
sar
shr
or
jbe
jae
(bad)
mov
les
lock
push
inc
mov
dec
add
shl
sub
add
jae
(bad)
push
cmp
jo
jmp
and
retf
mov
dec
add
imul
push
push
and
pop
sbb
inc
xchg
les
push
repz
cdq
fadd
push
clc
bound
ins
cs
xor
xor
jmp
mov
rcr
daa
dec
test
xchg
sub
push
mov
stos
loop
ror
pop
sbb
cmp
nop
fcomp
push
enter
xlat
inc
push
bound
jnp
es
iret
xchg
int3
mov
loop
lods
shl
or
ret
mov
sub
jb
imul
cdq
pop
pop
aas
inc
mov
jnp
pop
xlat
mov
mov
out
call
and
repnz
inc
add
push
adc
std
mov
inc
xor
mov
ficomp
inc
xor
out
xchg
xchg
mov
cwde
dec
cmp
rcpps
mov
add
loopne
repz
addr16
adc
jnp
jp
pop
call
jbe
movs
fwait
mov
pushw
jmp
lds
and
retf
push
dec
sub
daa
or
cld
test
or
push
dec
adc
fbstp
pop
cld
xchg
mov
in
and
jge
xchg
mov
in
int
imul
into
pushf
call
xchg
cwde
shl
add
fsub
push
cli
nop
add
cs
fist
pop
fstp
inc
sub
out
ss
xor
mov
sub
pop
bound
ret
lahf
std
mov
xor
sbb
ins
push
inc
mov
pop
adc
jecxz
int3
or
adc
xor
or
pop
push
jnp
repz
(bad)
iret
xchg
and
test
mov
add
sub
popa
icebp
and
pop
sbb
call
cmps
les
mov
fiadd
jnp
outs
or
das
outs
shr
mov
aas
ins
retf
bound
jnp
pushf
mov
xor
pop
ds
sub
mov
stc
fwait
add
push
add
call
mov
pop
out
and
out
icebp
mov
out
xchg
addr16
cmp
repz
std
mov
push
js
xchg
dec
aas
inc
and
or
jnp
or
xlat
mov
cmp
add
add
mov
cmps
retf
mov
adc
pop
xchg
cdq
cli
inc
push
data16
or
mov
push
aaa
push
mov
pop
xor
mov
push
add
mov
inc
push
xor
outs
test
sbb
fsubr
les
ja
ins
xor
push
gs
pop
pop
stos
into
stos
xchg
in
and
inc
ss
sub
dec
rol
jp
movs
loop
push
adc
je
pop
ds
and
loopne
loopne
(bad)
xchg
iret
pop
ud1
pop
ror
or
inc
sub
aad
lds
push
push
or
inc
and
mov
xchg
hlt
pop
ds
pusha
mov
imul
das
pushf
fcom
mov
es
dec
adc
or
fs
mov
xor
ss
mov
mov
lods
ret
aaa
add
xchg
jno
inc
stos
jecxz
loop
push
sbb
les
mov
and
add
jo
add
icebp
test
pushf
call
js
in
mov
sbb
retf
sub
imul
sar
aas
dec
push
cdq
jecxz
(bad)
adc
lods
aad
pop
aas
in
popf
sub
pusha
or
retf
jnp
jp
or
adc
mov
mov
xchg
xchg
mov
and
inc
rol
pop
cmp
sub
(bad)
mov
test
adc
fsub
xor
paddb
test
idiv
pop
or
ret
mov
mov
dec
and
sub
cld
imul
jmp
sahf
int3
add
cmps
lds
adc
out
add
mov
mov
in
xchg
fimul
std
pop
cmp
push
lahf
(bad)
add
mov
inc
add
and
mov
pusha
mov
adc
call
jl
out
sub
jmp
add
push
sub
(bad)
int3
test
dec
xor
into
fisub
je
sbb
movs
int3
and
push
add
mov
push
int
jnp
aam
leave
cmp
sub
mov
dec
sbb
mov
inc
imul
xchg
bound
pushf
mov
lods
aam
pop
hlt
push
sbb
mov
sbb
repnz
test
out
fild
inc
add
into
inc
pop
inc
xor
mov
lock
shl
sbb
int3
and
dec
cs
xor
mov
lods
dec
sub
push
leave
cs
xor
cmp
mov
dec
mov
sbb
out
mov
xchg
ret
xor
push
xor
dec
mov
mov
daa
call
out
enter
packssdw
xchg
inc
bound
mov
dec
in
jle
fs
out
push
popa
iret
lods
(bad)
mov
cmp
mov
fs
xchg
xchg
(bad)
mov
les
in
sub
inc
pop
call
enter
jb
sbb
repnz
sub
out
jge
pop
and
out
or
loope
nop
enter
dec
jecxz
(bad)
mov
outs
cld
daa
dec
sub
test
and
jns
jnp
pop
add
push
add
outs
addr16
and
and
mov
repz
out
cmps
retf
add
aam
fild
push
jbe
mov
xchg
cmc
add
js
xchg
jmp
test
xchg
cld
or
xor
imul
push
iret
lods
jmp
xor
pop
mov
sahf
hlt
lahf
fdivr
iret
call
or
cs
inc
and
pop
sub
mov
dec
adc
outs
push
jne
adc
loopne
shl
ins
ds
push
repnz
dec
sbb
xlat
jae
mov
out
push
sub
mov
xchg
fmul
jae
out
lods
enter
cmp
xchg
dec
push
loope
cmp
sub
lods
mov
das
inc
cmp
into
and
add
push
stos
(bad)
jbe
shl
cmp
ds
pushf
lea
inc
loopne
out
ror
xchg
addr16
pop
pop
xor
sub
les
scas
out
jne
stos
out
inc
sub
mov
add
neg
and
push
sahf
shr
stos
in
mul
int3
pusha
mov
mov
lods
outs
add
pop
xor
add
(bad)
mov
stos
enter
sbb
jns
scas
fs
xor
into
std
push
adc
(bad)
fcom
arpl
cmp
inc
add
aam
stc
imul
cmp
cmp
icebp
xchg
fsub
data16
dec
push
in
xchg
and
pop
xor
push
mov
pop
fstp
jge
xor
sbb
mov
jmp
cmp
mov
cmp
jnp
mov
call
retf
stos
leave
movs
pop
out
jge
fs
mov
sbb
xor
adc
out
xchg
ficom
js
jg
(bad)
dec
gs
mov
sahf
fmul
inc
addr16
ds
sahf
xlat
jge
xchg
out
call
fidiv
enter
jle
neg
dec
das
push
pop
and
fidiv
jge
jmp
add
stos
in
cmp
sbb
icebp
out
jg
inc
cmp
xchg
mov
inc
lahf
ret
push
loope
clc
push
out
pop
aam
pop
xor
ss
pop
inc
cmp
ja
and
push
add
mov
arpl
iret
mov
repnz
ror
jae
pop
outs
cs
inc
mov
frstor
stos
repnz
data16
test
push
and
sar
inc
add
out
push
inc
xor
stos
shl
and
dec
sub
mov
bound
pop
push
or
leave
test
and
cmp
sub
pop
cmps
rcl
pushf
in
push
in
push
mov
pop
pop
pop
aas
pop
sbb
push
xor
dec
mov
sub
imul
mov
loop
sti
cwde
jae
loopne
leave
mov
(bad)
mov
cmps
xlat
lahf
repnz
adc
cmp
loopne
mov
test
mov
pop
jns
adc
scas
inc
fsub
and
jmp
addr16
fiadd
inc
push
pause
std
loop
and
clc
mov
aas
push
jg
ficomp
popa
(bad)
xchg
movs
test
lea
fistp
sbb
movs
shl
imul
and
je
jp
les
(bad)
sub
(bad)
(bad)
jecxz
cs
into
sbb
inc
sub
jle
cli
push
adc
outs
cmp
inc
or
cli
cli
fwait
stc
or
add
mov
add
retf
add
dec
mov
jne
jge
inc
or
pop
ds
out
lahf
xchg
out
fimul
in
ret
mov
nop
fsub
in
xchg
cmp
fwait
clc
adc
test
xchg
fs
adc
pop
adc
jp
xor
retf
loop
les
or
inc
clc
(bad)
add
aad
mov
out
mov
test
xor
neg
pop
cmps
add
pop
or
mov
or
hlt
mov
sti
mov
sbb
addr16
ret
jns
jbe
ror
inc
ret
das
ins
or
xchg
std
ins
ds
or
(bad)
mov
xchg
hlt
or
and
or
cmps
in
cmc
daa
jne
jg
push
cld
lahf
or
repnz
call
mov
leave
sti
sahf
mov
add
scas
jecxz
sub
(bad)
mov
inc
mov
dec
es
mov
pushf
xchg
stos
daa
outs
icebp
pop
sub
clc
icebp
mov
fnstcw
cmp
ficomp
jge
mul
jns
popa
es
mov
popf
sub
inc
cmp
(bad)
mov
inc
shr
imul
mov
pusha
inc
cmp
push
(bad)
lods
jo
popf
sar
xchg
imul
or
fidiv
outs
cmp
dec
xor
sbb
push
test
xor
sahf
sbb
cmps
cmc
adc
mov
fwait
xor
movs
adc
test
mov
pop
cmp
mov
xchg
icebp
xor
or
mov
dec
(bad)
sub
cld
jno
mov
xchg
fld
fstp
inc
das
dec
sub
iret
and
ins
das
cli
mov
mov
mov
addr16
or
cmps
fdivp
fwait
enter
jnp
stc
lea
mov
inc
pop
icebp
mov
xchg
adc
mov
cwde
jne
mov
outs
mov
push
xor
scas
or
es
sub
(bad)
xchg
mov
pop
push
add
in
adc
ss
cmp
mov
push
fist
pop
cmc
mov
xchg
shl
test
mov
dec
and
xor
xchg
data16
and
test
cmovae
ins
cmps
out
mov
lods
pop
xor
pop
das
fisttp
add
push
mov
lods
or
outs
sbb
pushf
in
jmp
fs
dec
and
jg
icebp
xchg
(bad)
mov
xchg
lds
or
xchg
sbb
ins
or
xor
jne
pop
shl
or
jg
gs
xchg
les
pusha
push
cmp
xchg
mov
test
sahf
icebp
mov
inc
retf
add
jp
lds
mov
imul
adc
aam
or
(bad)
xchg
jmp
mov
jno
out
or
push
cmp
cmp
iret
mov
stos
repz
movs
lock
mov
dec
aaa
pop
cmp
sub
clc
xchg
or
adc
push
add
mov
in
loope
pop
fdiv
push
hlt
xchg
sti
nop
push
xor
xor
mov
aam
push
push
cmc
cwde
push
es
sub
scas
aad
jp
out
jb
push
inc
mov
pushf
neg
jecxz
movs
stos
or
jg
in
jmp
dec
ss
addr16
gs
inc
das
ins
or
movs
in
or
cmp
dec
sub
mov
cmc
out
and
out
cld
mov
ds
push
adc
adc
mov
cdq
jp
ins
or
das
push
cmp
adc
push
mov
popf
in
jns
ja
dec
movs
movs
call
inc
sbb
dec
mov
es
std
mov
pusha
xchg
(bad)
pop
loop
repz
in
mov
sahf
jl
and
lods
mov
xchg
cmc
sbb
adc
int3
cmps
int
jmp
nop
lods
adc
inc
push
dec
sub
sahf
stc
pop
push
jnp
mov
mov
out
mov
(bad)
(bad)
fcom
jg
test
or
lods
aad
fisub
cld
sbb
dec
sub
xchg
mov
sbb
mov
test
shl
cld
pop
aaa
je
jecxz
cwde
pop
lds
xor
inc
arpl
cmp
outs
pop
addr16
aad
lock
or
bound
add
cmp
sbb
fstp
jb
mov
pop
sbb
jae
dec
jmp
mov
scas
in
mov
xchg
std
scas
test
out
(bad)
ret
ret
test
cmp
fs
mov
sub
mov
and
imul
mov
mov
mov
aaa
push
cmp
icebp
ror
and
loope
aad
clc
fist
dec
push
imul
loope
(bad)
mov
fcom
adc
sub
loop
neg
mov
ret
pop
ficomp
aam
and
ss
icebp
stc
adc
pop
push
fcomp
dec
add
pop
push
jl
in
shl
(bad)
std
push
pop
add
push
fld
mov
fistp
imul
push
rcr
mov
adc
mov
push
pop
and
sub
aad
inc
pop
out
push
jnp
add
add
xor
pop
inc
pop
cmp
add
xchg
dec
in
in
jle
outs
inc
out
(bad)
ficom
arpl
and
std
xchg
cld
aas
pop
outs
pop
jp
stos
(bad)
imul
mov
cmp
pop
iret
mov
mov
sahf
sti
mov
rcl
js
and
inc
pop
gs
aam
inc
cmp
push
ss
gs
pop
hlt
aam
sbb
jo
popw
fs
add
dec
repz
fild
fsubr
sahf
add
and
dec
cmp
in
imul
xlat
adc
imul
in
sub
dec
add
jge
aad
and
jmp
ret
sub
and
in
cmp
pop
cli
test
fnstenv
ins
out
mov
nop
call
int3
xchg
jae
ds
test
jno
jbe
mov
dec
int
mov
mov
or
mov
movs
mov
fcom
or
xor
ss
fisub
les
ins
mov
sub
fbstp
(bad)
call
lahf
mov
and
mov
add
add
js
ja
inc
int
sbb
daa
sub
xor
sub
jae
push
inc
test
adc
push
adc
push
std
jo
jle
je
and
xchg
jae
jge
jp
xchg
pusha
add
cld
ss
lods
jne
mov
into
addr16
xor
push
stc
das
(bad)
ss
or
pop
adc
push
fisubr
mov
hlt
cwde
movs
mov
popf
lds
scas
lea
jbe
or
push
mov
mov
mov
stos
jno
dec
into
sub
or
or
adc
push
add
scas
mov
rcl
adc
das
ret
push
add
aaa
or
sub
cwde
stos
mov
fwait
js
scas
pushf
dec
(bad)
aaa
in
jmp
pop
das
push
sbb
xchg
test
lods
cli
data16
jo
cdq
push
mov
jge
and
lahf
(bad)
xchg
cwde
sar
lock
push
movs
inc
push
(bad)
and
dec
ficomp
sar
loope
test
mov
repnz
push
cmps
dec
xlat
and
cmp
or
clc
push
cld
inc
cmp
sbb
push
in
jns
scas
test
fisubr
jbe
arpl
data16
das
and
adc
dec
out
xchg
js
push
psubd
push
test
push
pop
std
dec
out
mov
pushf
jbe
sar
in
pop
cmps
dec
shl
and
jl
mov
cmps
pushf
inc
xchg
das
add
sbb
pop
idiv
pop
lock
adc
fidivr
mov
jmpw
fistp
stos
test
mov
mov
pusha
lds
jmp
out
push
retf
jno
ins
add
(bad)
pop
leave
xchg
rol
mov
mov
push
mov
adc
iret
and
mov
jb
xchg
bound
and
push
mov
in
bound
adc
inc
push
pop
idiv
imul
xor
lds
pop
fcomp
popf
fs
jl
mov
jb
fisub
sbb
add
xor
mov
dec
int3
push
xlat
dec
add
sub
dec
xor
inc
test
lea
imul
clc
fs
inc
test
repz
cmp
(bad)
add
or
push
int3
push
cli
inc
rol
call
or
scas
sar
adc
xchg
mov
cli
xchg
movs
cwde
(bad)
mov
and
cwde
leave
jb
nop
lea
xchg
cmps
scas
mov
sbb
push
adc
xor
(bad)
ds
out
sub
je
(bad)
daa
adc
ss
arpl
jo
push
mov
hlt
push
in
ror
jo
push
mov
sub
push
xchg
test
lods
scas
xchg
rcr
std
pushf
mov
(bad)
pop
shl
pop
out
or
cmp
das
push
out
add
data16
sbb
pop
mov
mov
(bad)
(bad)
pop
sbb
out
gs
pushf
lahf
aad
repnz
leave
ins
adc
cmp
push
rcr
out
jo
lods
jnp
dec
test
push
and
inc
out
(bad)
lds
pop
or
xor
cli
pop
in
xor
adc
shl
sbb
or
pop
in
mov
mov
(bad)
fnstenv
sbb
ss
outs
ficomp
xchg
jp
add
pop
neg
fs
into
cmp
das
or
jge
inc
sbb
or
jle
xchg
xchg
push
in
rol
dec
add
and
add
jno
jg
jle
jb
inc
mov
sub
or
xor
push
in
cmp
dec
mov
cmps
inc
clc
es
jmp
mov
jmp
sbb
sub
xlat
push
inc
jmp
xchg
into
sub
and
adc
jle
outs
into
cmp
adc
daa
sub
push
fisttp
sbb
or
pop
mov
daa
push
hlt
popf
mov
fs
xchg
arpl
daa
cli
add
aad
mov
mov
jp
cmp
pop
jecxz
mov
popf
mov
cmc
inc
test
mov
mov
and
pop
out
(bad)
xchg
cwde
arpl
pop
les
jae
pushf
jp
and
xchg
mov
outs
scas
inc
fimul
ja
dec
add
dec
mov
mov
push
xchg
pop
cmps
cmps
ins
test
rol
adc
push
jmp
mov
mov
mov
popf
xchg
dec
fimul
std
xchg
mov
nop
inc
shr
pop
xchg
outs
movs
ins
les
adc
loop
loope
push
lock
mov
retf
inc
fisttp
repz
sub
cmp
push
mov
scas
fstp
jle
in
stc
mov
js
fild
adc
pop
or
mov
lahf
aad
mov
sbb
push
call
sub
das
and
sbb
add
mov
xchg
imul
adc
sti
xchg
push
xchg
jnp
call
outs
test
xchg
mov
jp
imul
push
mov
adc
jmp
dec
scas
outs
movs
mov
jmp
push
sbb
push
sbb
in
ret
les
mov
nop
mov
mov
jae
jg
popf
fld
jecxz
sbb
or
dec
ficomp
popf
mov
iret
push
pop
pop
scas
jno
xchg
inc
fiadd
sbb
(bad)
mov
fild
hlt
imul
or
mov
cdq
fild
das
div
jmp
stc
cmp
and
and
jg
dec
sbb
cs
int3
inc
les
aas
lds
or
adc
pop
stc
daa
xor
imul
mov
stos
outs
mov
scas
jb
jp
and
pop
std
push
mov
(bad)
xor
add
sub
or
clc
push
pop
push
sbb
pop
test
(bad)
cmp
loopne
stc
jnp
adc
int3
push
in
xor
sbb
sar
jmp
xchg
cwde
dec
cmps
jno
xor
aas
int3
pop
cmps
inc
mov
adc
loope
adc
and
sahf
jnp
inc
xlat
inc
shl
aas
stc
pop
test
sahf
imul
sbb
aaa
and
sub
dec
enter
fild
out
fcom
dec
mov
xor
repz
cmp
cmp
cmp
or
or
adc
pop
sbb
ss
adc
push
fist
mov
sbb
push
sbb
pop
out
and
push
sub
push
mov
jno
fs
inc
mov
clc
push
scas
bound
ins
std
pop
stos
xchg
arpl
inc
lods
jb
movs
jnp
xor
std
popf
scas
test
(bad)
iret
inc
repnz
repz
loopne
out
dec
leave
and
sbb
sbb
lds
xchg
scas
retf
jns
cwde
mov
lea
outs
and
js
jg
or
push
cli
mov
mov
xchg
xchg
data16
rcl
mov
mov
sub
or
adc
push
and
jle
cdq
aad
call
mov
mov
sub
dec
mov
rol
fstp
(bad)
test
jg
push
(bad)
aaa
jmp
ins
pop
xor
sub
daa
and
cmp
push
sbb
push
fadd
aam
out
jl
inc
jmp
shl
loopne
loop
call
fisub
adc
and
je
xchg
js
lahf
dec
mov
fbld
jbe
push
or
sub
neg
sub
pop
mov
mov
xlat
xchg
test
scas
mov
(bad)
add
cmc
sub
push
pop
sti
xchg
(bad)
jae
imul
sahf
fs
mov
sbb
cmp
xor
push
mov
push
sahf
inc
fdivr
adc
loop
push
and
iret
push
mov
mov
ins
add
add
sub
sbb
cmps
inc
jmp
sbb
add
aas
aas
push
in
jl
pop
fimul
cs
pop
(bad)
call
sbb
adc
ficomp
pop
(bad)
and
adc
adc
xor
jle
outs
add
pop
and
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
lods
(bad)
mov
mov
out
mov
xor
aad
(bad)
lods
out
mov
nop
(bad)
(bad)
lods
into
mov
movs
loope
sti
xchg
hlt
xchg
cli
mov
scas
xlat
mov
jmp
pop
dec
push
pop
sbb
sbb
sbb
sbb
xor
das
sub
sbb
icebp
adc
sbb
add
dec
imul
sbb
sbb
sbb
mov
sbb
dec
push
pop
sbb
sbb
sbb
jg
sbb
sbb
dec
mov
sbb
cs
sbb
sbb
sbb
xor
sbb
sbb
sub
sbb
sbb
pop
sbb
sbb
sbb
adc
sbb
sbb
sbb
sbb
sbb
push
sbb
out
sbb
sbb
sbb
pop
sbb
sbb
pop
sbb
sbb
sbb
adc
adc
adc
sbb
pop
sbb
pop
sbb
adc
sbb
sbb
sbb
pop
sbb
sbb
sbb
sbb
pop
sbb
sbb
adc
sbb
adc
sbb
sbb
sbb
sbb
sbb
pop
sbb
pop
sbb
pop
sbb
adc
nop
sbb
adc
sbb
sbb
sbb
pop
sbb
sbb
mov
sbb
inc
pop
sbb
sbb
sbb
pop
sbb
pop
sbb
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sbb
pop
sbb
sbb
push
sbb
push
sbb
sbb
sbb
sbb
adc
gs
sbb
sbb
sbb
add
sbb
sbb
push
sbb
sbb
sbb
xor
sbb
sbb
and
sbb
sbb
daa
sbb
pop
sbb
lea
test
sbb
sbb
sbb
sbb
adc
sbb
or
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
cmp
sbb
sbb
inc
cmp
sbb
sbb
jge
sbb
add
sbb
xchg
cmp
push
adc
sbb
mov
sbb
xor
cmp
push
adc
sbb
leave
cmp
push
adc
sbb
icebp
cmp
pop
pop
call
sbb
sbb
pop
neg
cmp
sbb
loope
jno
pop
sbb
sbb
pop
ins
sbb
sbb
sbb
pop
sbb
sbb
pop
popf
sbb
sbb
add
sbb
sbb
pop
xchg
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
pop
or
sbb
sbb
sbb
sbb
sbb
jno
sbb
sbb
sbb
sbb
pop
stos
sbb
sbb
sbb
adc
sbb
lock
xchg
ss
sbb
adc
sbb
call
mov
xor
sbb
adc
sbb
in
mov
xor
add
adc
sbb
lock
sbb
sbb
fstp
sbb
jge
push
iret
sbb
sbb
jge
push
iret
sbb
sbb
jge
push
iret
sbb
sbb
jge
push
iret
sbb
sbb
jge
sbb
sbb
sbb
jge
sbb
sbb
sbb
jge
sbb
sbb
sbb
jge
sbb
sbb
sbb
jge
sbb
sbb
sbb
jge
sbb
xor
sbb
sub
movs
xor
sbb
sub
leave
xor
sbb
sub
sbb
sbb
sbb
sbb
pop
sbb
pop
sbb
pop
or
pop
sbb
pop
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
lock
lock
lock
lock
lock
lock
lock
lock
and
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
push
sbb
push
sbb
xchg
sbb
sbb
add
call
sbb
jne
xor
xor
std
sbb
sbb
pushf
sbb
add
lock
lock
push
pop
lea
popw
test
mov
sbb
fwait
pop
hlt
sbb
hlt
sbb
in
sbb
lods
sbb
in
int
mov
adc
std
adc
in
adc
lock
jecxz
mov
adc
sbb
sbb
add
dec
adc
sbb
xlat
pop
aam
jbe
xchg
sbb
sbb
movs
sbb
cmp
mov
enter
lock
rcl
aam
sti
adc
pop
hlt
sbb
hlt
sbb
aam
add
sbb
pop
or
hlt
pop
dec
sbb
pop
in
pop
dec
sbb
pop
call
pop
out
fcomp
pop
sbb
pop
pop
push
fcomp
in
sbb
inc
sbb
pop
adc
cmp
stos
pop
ins
sbb
push
push
aam
lock
jns
add
movs
sbb
movs
sbb
dec
sbb
pop
stos
sbb
cmp
int3
sbb
int3
sbb
int3
sbb
dec
sbb
push
and
and
xor
pop
push
and
and
or
push
push
lods
sbb
movs
sbb
ins
sbb
push
inc
push
xchg
sbb
push
mov
push
mov
sbb
lock
sti
push
ins
push
cld
sbb
les
mov
push
mov
push
mov
sub
cmps
push
lods
sbb
sbb
pop
adc
push
movs
sbb
sbb
lea
in
push
movs
sbb
les
adc
push
aam
not
pop
sbb
sbb
adc
sbb
in
sbb
aam
push
adc
pop
cld
sbb
adc
sbb
or
mov
sbb
add
adc
sbb
sbb
adc
adc
pop
in
sbb
adc
sbb
popf
adc
sbb
sbb
adc
sbb
sbb
adc
sbb
mov
and
in
sbb
adc
sbb
adc
add
les
dec
sbb
lock
lock
lock
lock
lock
lock
add
scas
sbb
test
xor
xor
pop
sbb
pop
sbb
pop
sbb
pop
sbb
push
sbb
jle
push
sbb
push
sbb
sahf
sbb
ss
push
sbb
sbb
sahf
sbb
xchg
sbb
mov
sbb
sbb
mov
sbb
sbb
mov
sbb
sbb
ficomp
ficomp
std
sbb
add
mov
stc
movs
iret
sub
cmp
movzx
daa
aad
jle
fisttp
or
add
pushf
mov
add
mov
cmp
ror
xor
mov
cmps
test
dec
xchg
iret
push
gs
and
sti
inc
dec
scas
es
ret
loope
or
pop
call
cmc
pop
aam
test
pop
jp
push
repnz
mov
sbb
mov
sub
pop
add
mov
sbb
mov
ins
loop
or
jbe
(bad)
call
hlt
sbb
lds
rol
sar
jle
ret
add
xchg
pop
in
out
mov
sbb
xchg
cwde
mov
mov
(bad)
test
mov
mov
push
xchg
pop
fistp
rcr
jne
sbb
mov
es
mov
xor
pop
outs
push
jp
mov
ds
ret
add
adc
repz
jle
mov
sbb
stc
ins
cmp
mov
push
dec
jno
mov
sbb
(bad)
aam
xchg
arpl
lods
movs
push
sbb
mov
sub
fsubp
lds
fwait
mov
sub
(bad)
popf
push
pop
xchg
jl
shl
sbb
fist
jl
into
mov
(bad)
sbb
out
and
push
dec
lahf
ss
(bad)
dec
cmps
jg
pop
leave
add
cli
test
loopne
shl
ds
pop
repnz
fld
sbb
loopne
pop
push
leave
sbb
daa
je
or
xchg
aaa
(bad)
jne
ja
or
ja
sbb
jne
test
inc
fisubr
cmps
stc
inc
int
mov
mov
xor
mov
sbb
stc
xor
mov
daa
imul
xchg
mov
cwde
and
movs
xor
(bad)
lods
(bad)
and
xor
push
xor
xor
in
jb
sub
rol
dec
push
or
and
push
aaa
adc
les
lods
pushf
ja
clc
dec
rcr
sbb
out
icebp
mov
mov
or
xor
sub
aam
mov
mov
jbe
pop
jmp
inc
ins
mov
jmp
test
dec
xor
add
xchg
in
inc
mov
xor
pop
mov
mov
jns
push
pop
xor
(bad)
dec
je
adc
aam
loopne
outs
cmp
push
call
imul
cld
aam
jmp
fnclex
xor
repz
lea
mov
sbb
lods
adc
jb
out
mov
xor
dec
xchg
pop
adc
leave
fldcw
neg
sub
dec
ins
scas
adc
cmps
(bad)
retf
inc
iret
jle
pop
mov
scas
jge
jns
mov
xlat
mov
outs
sbb
test
cmp
popf
mov
bound
fscale
scas
loope
iret
add
fs
or
sbb
aam
dec
mov
ja
sub
loop
ret
into
sahf
dec
jmp
nop
outs
lods
lea
sub
pop
ds
scas
daa
xchg
inc
adc
shr
push
(bad)
jbe
mov
aas
icebp
hlt
xlat
ds
cmps
mov
cmp
scas
or
mov
inc
repz
inc
mov
enter
mov
ins
stc
dec
pop
enter
mov
pop
(bad)
outs
test
jl
sub
jb
inc
xchg
or
hlt
mov
and
lds
sub
jmp
mov
repnz
mov
pusha
cmc
push
iret
inc
dec
jmp
xchg
repz
pop
cmp
sti
mov
jbe
push
jle
daa
inc
push
sbb
pusha
xchg
lods
or
js
clc
ret
loopne
push
cmc
pop
mov
loope
xor
inc
mov
ins
cmp
stc
inc
add
cs
int
sbb
sub
mov
pushf
cld
shl
test
push
xchg
pop
(bad)
push
dec
adc
xchg
aas
add
mov
(bad)
test
(bad)
xchg
pminub
leave
mov
inc
pop
jno
push
cli
enter
xor
in
jmp
iret
sbb
mov
movs
and
in
cmps
jbe
(bad)
das
ja
inc
into
pushf
cmps
xor
pop
pop
push
mov
xlat
jns
(bad)
imul
mov
ret
in
adc
push
mov
and
nop
and
dec
movs
pop
dec
lds
jl
add
mov
dec
ret
sar
mov
loop
sub
inc
fdiv
push
sub
jg
xchg
addr16
aas
push
fwait
mov
out
loop
dec
mov
dec
loop
sub
and
ins
ds
not
sub
jge
cmp
add
cwde
sbb
(bad)
xor
xchg
cmp
sbb
daa
(bad)
mov
sub
adc
imul
mov
xlat
es
movs
add
(bad)
dec
scas
cld
inc
call
out
popa
push
mov
sub
push
or
push
push
clc
inc
xor
sbb
xor
rol
outs
or
inc
sub
ror
pmulhuw
or
pusha
mov
cmps
repnz
sbb
fld
imul
loop
dec
xchg
hlt
cs
mov
xor
xchg
push
das
test
push
jecxz
mov
out
push
outs
pop
stc
pop
cmc
ret
clc
adc
js
push
std
inc
popf
arpl
sub
dec
inc
jmp
cld
loop
mov
pop
out
sbb
sbb
icebp
retf
mov
push
adc
sub
out
dec
sbb
dec
push
js
mov
push
ret
jecxz
mov
mov
dec
ret
mov
inc
(bad)
ror
(bad)
jmp
jbe
inc
popf
jmp
ret
dec
cwde
int3
pop
(bad)
fwait
mov
push
cmp
outs
sub
aaa
and
cs
retf
in
or
shr
xor
adc
(bad)
dec
arpl
and
mov
xor
dec
(bad)
mov
data16
js
jo
sub
add
sub
leave
pop
adc
call
and
add
loop
aaa
xor
pop
out
sub
pop
rcr
out
xor
fldcw
loop
data16
sbb
mov
push
dec
xchg
mov
imul
(bad)
mov
lds
out
fisttp
lds
shl
call
push
mov
sbb
enter
movq
jp
sub
(bad)
fiadd
fs
stc
mov
nop
mov
mov
test
cmps
sbb
pushf
cmovs
ins
gs
xchg
inc
nop
fnstcw
not
(bad)
imul
int
hlt
mov
leave
movs
outs
cmp
movs
(bad)
push
ret
inc
sub
out
xchg
int
xor
adc
fisttp
lods
sti
dec
les
cmp
mov
movs
mov
rcr
icebp
arpl
in
pop
inc
rcr
cmp
xchg
cmp
pop
out
add
sub
mov
jb
in
jne
lods
sbb
jns
or
test
scas
add
jg
fsub
mov
(bad)
out
es
mov
shl
test
ds
or
xor
sbb
ss
push
in
inc
jmp
(bad)
jo
mov
adc
dec
cmc
xchg
dec
xchg
lea
push
cmc
lds
adc
cld
xchg
mov
mov
cmc
jecxz
dec
ror
leave
jnp
push
mov
inc
inc
pop
push
shl
fsub
xchg
add
push
sub
or
and
outs
mov
inc
test
jne
ins
lahf
das
test
mov
jnp
int
sbb
scas
push
scas
in
shl
dec
ss
jo
mov
push
xor
outs
pop
jecxz
cld
cdq
call
push
fadd
stc
mov
xor
push
enter
(bad)
pop
inc
rol
retf
mov
movs
out
cwde
lock
inc
push
fldenv
jbe
in
test
pop
pop
arpl
inc
pop
or
test
pop
inc
int3
cmp
jo
loop
mov
jns
cld
or
and
test
cmp
mov
mov
test
xor
mov
cmps
das
dec
sub
mov
xchg
pop
adc
imul
and
jle
(bad)
js
not
inc
cs
and
mov
xchg
ret
mov
outs
adc
mov
dec
or
pop
je
and
sbb
jnp
ret
jns
fcomp
xchg
lock
shr
pop
mov
xor
and
(bad)
shl
ficom
jge
pop
outs
jnp
ja
das
loop
int3
enter
ins
pop
sbb
lahf
rcl
arpl
clc
xchg
out
into
add
test
jl
jmp
loopne
jae
mov
add
sbb
xor
mov
xchg
dec
shr
push
add
dec
aaa
das
(bad)
(bad)
mov
(bad)
push
add
dec
out
sub
xchg
mov
push
sbb
dec
mov
and
inc
and
or
mov
mov
in
mov
and
pop
fdivr
jbe
mov
or
mov
and
ds
push
sti
frstor
loopne
pop
(bad)
aam
retf
aaa
or
fdivp
xchg
sbb
xor
aad
inc
mov
or
repnz
(bad)
xchg
data16
xchg
scas
pavgb
ret
bnd
call
pop
pop
or
iret
xchg
and
fcmovnb
xchg
std
in
add
sub
and
mov
pop
fucomip
popf
inc
add
or
cmp
mov
sbb
test
test
or
adc
xchg
arpl
loop
inc
(bad)
jle
mov
pop
push
test
mov
dec
lods
in
mov
mov
cs
lods
adc
out
sti
jae
inc
adc
dec
rcl
int
lods
cmp
dec
(bad)
jp
fdivr
mov
fcomp
out
neg
add
sub
sahf
jns
lahf
add
ja
add
mov
push
popa
cld
cli
or
push
repz
mov
je
call
mov
sub
xor
push
mov
rcl
push
fnstsw
stc
inc
fiadd
pushf
add
inc
ret
(bad)
dec
lock
add
iret
pop
icebp
out
sbb
cmp
cld
cdq
mov
push
jg
inc
or
lods
into
out
ins
sub
sar
jmp
retf
aas
(bad)
cli
pop
push
rol
lods
iret
movs
leave
or
lods
mov
mov
inc
cwde
cmp
mov
mul
retf
pop
jge
pop
in
inc
mov
ret
xchg
mov
cmc
xor
xor
push
inc
pop
lock
add
fisub
pop
mov
pop
retf
inc
xor
mov
je
add
nop
sub
sub
or
mov
dec
les
clc
mov
jl
jnp
mov
inc
inc
lods
inc
or
adc
int
stos
repnz
xchg
or
int
dec
sti
out
push
sbb
adc
cli
pop
and
mov
xchg
pop
mov
imul
mov
adc
repnz
out
call
push
xchg
xor
neg
aaa
add
pop
dec
stos
jnp
or
cs
and
dec
icebp
jns
cmp
aad
(bad)
sbb
sub
ss
popf
cli
out
into
sahf
test
ret
repz
(bad)
imul
pop
mov
adc
cmp
sub
popa
xchg
xchg
mov
test
cmps
and
xor
pop
inc
xchg
jbe
adc
adc
push
fst
jmp
cmp
sbb
xlat
(bad)
jle
pop
clc
scas
ins
shr
fs
call
mov
(bad)
adc
bound
aam
dec
push
std
lock
or
dec
pushf
out
add
sar
pop
jo
es
push
dec
lods
iret
stos
and
xchg
mov
mul
inc
je
ret
adc
xchg
add
nop
pop
in
dec
popa
rol
test
mov
sub
hlt
ins
mov
(bad)
test
inc
mov
loope
jmp
js
ins
jns
data16
das
mov
jge
xchg
je
add
xor
jmp
out
fsubr
jle
xchg
xor
jge
fwait
or
neg
adc
push
fbstp
je
(bad)
into
leave
in
jg
or
cmp
sub
cmp
pop
mov
(bad)
cwde
in
mov
xchg
fcomp
mov
adc
es
pop
push
out
xor
fnstcw
int3
leave
dec
mov
test
popf
push
movs
and
inc
retf
rcl
and
push
sub
xchg
push
push
daa
pop
push
add
shl
mov
aam
pop
jl
and
cdq
div
lods
sub
in
or
add
test
movs
mov
jns
jmp
push
shl
imul
and
sub
test
movs
leave
cmps
cmp
jbe
dec
sub
mov
repnz
cmp
int3
nop
imul
iret
loop
stos
sub
dec
shl
ror
mov
add
stos
jns
out
lods
test
adc
repz
adc
das
inc
dec
std
pop
xchg
add
ins
outs
ret
iret
mov
push
out
cmp
pop
mov
xchg
test
mov
int
mov
(bad)
xor
mov
ins
imul
div
mul
clc
fsub
inc
lods
outs
ins
xchg
or
and
sbb
cwde
push
lahf
hlt
dec
xor
fidiv
or
mov
sti
xor
adc
jp
jmp
inc
pop
sbb
mov
mov
and
dec
sub
cli
(bad)
jmp
lahf
cmp
addr16
lock
aad
in
mov
or
inc
cmp
sub
mov
sbb
mov
cmps
sbb
dec
push
cld
pushf
jno
xlat
out
pushaw
out
xchg
in
cmc
inc
cmps
jl
pop
movs
and
retf
mov
xchg
jae
push
push
and
or
jmp
cwde
mov
loop
out
mov
mov
xchg
and
cmp
rcl
or
aaa
dec
xor
repz
cmp
dec
inc
jns
or
mov
imul
adc
sub
rcr
jnp
inc
mov
dec
loopne
fs
and
popa
lahf
in
imul
jp
xchg
je
inc
mov
retf
add
ret
in
mov
popa
js
(bad)
sbb
xor
daa
mov
pop
add
lock
loopne
push
xor
jecxz
push
or
js
cwde
sbb
mov
jb
arpl
call
enter
xchg
mov
or
add
push
lock
lods
mov
test
arpl
or
inc
push
pop
loope
or
push
dec
inc
and
fdivr
ins
xor
inc
push
xchg
ret
jae
add
cmp
push
jmp
push
add
out
sbb
add
xchg
mov
xchg
shl
adc
movs
out
adc
xor
lods
lods
push
out
xlat
or
loop
xchg
leave
das
mov
or
cmp
mov
sar
and
mov
icebp
popa
jle
add
ds
push
mov
adc
ffree
ret
in
pop
dec
das
stos
scas
dec
jae
xor
sub
mov
mov
push
repnz
ficom
mov
lahf
popf
adc
nop
leave
jg
push
inc
(bad)
and
push
add
movs
mov
jno
dec
pusha
or
mov
push
mov
mov
aam
sar
fwait
int3
shr
inc
bound
shr
shl
mov
ds
fcom
shr
lods
shl
or
aad
sbb
in
xor
into
sahf
add
cmp
add
push
in
stos
shl
inc
dec
xlat
int
mov
cmps
repz
lahf
dec
jg
lds
inc
movs
push
xchg
xchg
mov
je
adc
(bad)
rcr
inc
scas
mov
adc
sbb
outs
retf
mov
sub
mov
mov
jge
mov
daa
sub
mov
jmp
mov
sbb
cmp
rcl
cwde
mov
cli
mov
rcr
cmp
(bad)
ds
xchg
cli
pop
mov
pop
inc
mov
xor
gs
(bad)
fstp
pop
(bad)
add
inc
ja
jp
dec
lds
call
sahf
fisub
mov
xor
and
inc
or
push
pop
daa
ja
mov
fldcw
adc
push
rcl
popf
jb
cmp
pop
adc
sbb
mov
retf
nop
ins
inc
pop
mov
mov
movs
out
mov
sbb
mov
in
adc
mov
(bad)
clc
xor
push
inc
jo
sub
mov
dec
pop
inc
imul
sbb
mov
lods
adc
loop
scas
pop
jne
pushf
mov
cs
dec
push
cdq
test
sub
(bad)
mov
enter
mov
icebp
jmp
loopne
cmp
push
pop
lods
xchg
stos
int
xchg
inc
or
pop
and
ret
ja
out
nop
pushf
fidiv
rol
pop
jge
cs
bound
dec
and
cmp
(bad)
iret
jnp
mul
je
xor
test
retf
mov
pop
dec
loope
ret
ss
dec
jmp
fsubr
bound
retf
scas
push
sbb
(bad)
mov
pop
xchg
inc
cs
aaa
or
shl
dec
pop
xor
xor
adc
js
lahf
dec
cdq
xor
into
lods
cli
xchg
cdq
das
cld
int3
cmps
mov
popa
and
aam
mov
sti
leave
jns
and
stos
mov
(bad)
and
jl
xchg
adc
fs
stc
jp
jl
dec
jns
or
push
ja
or
xor
xlat
in
pop
add
repz
jmp
je
ds
mov
cmp
xchg
mov
mov
call
pop
and
out
cmc
xchg
jo
fcomp
push
sub
xchg
leave
retf
ror
jg
int
pop
cmp
push
repz
dec
jnp
(bad)
arpl
sbb
dec
jmp
popa
cli
xchg
and
cmc
add
scas
shl
xchg
loop
mov
test
gs
nop
push
stos
ja
mov
ja
call
push
cwde
dec
int
out
js
imul
dec
and
sbb
mov
inc
and
pop
or
fstp
mov
jne
or
lods
or
ins
add
iret
mov
jno
cwde
jbe
xchg
std
pop
aaa
fst
repz
loopne
cwde
push
jbe
or
inc
add
leave
gs
fidiv
pusha
jg
scas
dec
inc
dec
jp
add
pop
addr16
pop
inc
fwait
(bad)
mov
je
(bad)
hlt
adc
mov
dec
js
pop
repnz
mov
fdecstp
inc
mov
out
xchg
je
das
mov
ins
sub
inc
fidiv
cmp
inc
dec
jae
hlt
popa
imul
das
lea
mov
inc
mov
(bad)
fcomp
xchg
push
mov
sub
adc
(bad)
pusha
mov
pop
jp
(bad)
xor
mov
jmp
lock
sub
ja
jnp
fcomp
pop
js
out
pop
(bad)
jnp
inc
mov
push
(bad)
in
mov
mov
ret
add
scas
mov
call
stos
inc
mov
imul
mov
(bad)
(bad)
stos
adc
adc
rcr
mov
lods
mov
xlat
jno
sbb
test
fiadd
pop
dec
push
push
arpl
mov
retf
retf
pop
les
aad
xchg
retf
add
sar
or
and
cs
test
and
push
or
mov
cmc
fmul
mov
mov
sti
adc
and
loope
cmps
call
in
jle
test
mov
ror
ins
xchg
mul
push
and
sbb
and
in
mov
push
retf
sub
iret
sub
fwait
xchg
lea
scas
jg
int3
imul
iret
xlat
and
pop
dec
leave
popf
in
or
mov
sbb
push
xchg
jb
jbe
jb
int3
int3
inc
ins
mov
cmp
(bad)
(bad)
cmps
inc
sub
jb
ins
fimul
lods
dec
or
push
push
int3
ins
mov
leave
jmp
mov
cwde
int3
cwde
js
cmp
(bad)
ficomp
(bad)
sbb
cmp
push
leave
leave
cmp
jno
push
(bad)
hlt
jns
jno
mov
inc
setg
pop
adc
jp
jb
into
pop
mov
cld
sub
cld
push
push
shr
(bad)
mov
js
retf
adc
in
movs
fst
push
push
jecxz
or
dec
shl
inc
es
inc
and
mov
loopne
(bad)
pop
(bad)
das
and
into
lock
jbe
in
shl
mov
cmps
add
int
xchg
hlt
ds
hlt
sub
jmp
jmp
out
add
outs
jecxz
dec
xor
xchg
aam
push
lock
lahf
daa
fisttp
mov
cwde
jne
push
xchg
or
jecxz
retf
push
hlt
pop
xor
adc
dec
inc
mov
jecxz
mov
or
pop
fdiv
lea
mov
idiv
mov
mov
jle
frstor
mov
push
mov
xchg
jle
retf
inc
jne
inc
das
jbe
push
pop
arpl
push
les
pop
cmc
mov
out
add
and
mov
sbb
mov
(bad)
dec
pop
sbb
xor
or
xor
pop
cmp
adc
xor
xchg
sahf
cmp
sbb
or
(bad)
(bad)
xlat
pop
mov
sahf
lea
sbb
popf
call
mov
pop
push
jl
scas
nop
int3
je
lods
ffree
add
xlat
repz
pop
aaa
fistp
mov
jge
imul
pop
xlat
in
mov
mov
out
mov
lahf
movs
or
dec
out
sub
jne
pusha
xchg
sbb
pop
sbb
retf
in
lds
mov
hlt
arpl
mov
in
push
repz
stos
sub
push
stc
in
leave
mov
retf
dec
cmc
lahf
pop
adc
int3
pushf
or
push
jle
adc
push
test
cli
fldcw
ins
bound
jb
pop
movs
dec
mov
cs
les
pop
test
xlat
inc
lods
stc
inc
rcl
pop
fadd
dec
xchg
scas
mov
jg
(bad)
pop
and
(bad)
clc
push
rcl
imul
push
test
push
shl
bound
lods
xchg
call
loopne
inc
xor
scas
jp
xchg
jns
gs
cld
cmp
das
icebp
hlt
into
xchg
and
and
jo
fsubr
or
out
(bad)
adc
sbb
clc
push
lahf
push
xchg
(bad)
jns
xchg
daa
fadd
popf
cwde
dec
jno
sti
aad
(bad)
hlt
loop
sbb
sar
push
fst
or
stc
dec
(bad)
push
sub
push
ret
add
ret
mov
mov
mov
jp
lods
jns
mov
mov
leave
fisubr
xor
add
loope
xlat
mov
mov
jge
aam
jle
push
sbb
jmp
enter
adc
(bad)
into
push
jo
push
xor
sub
push
xchg
fidivr
ret
ret
jbe
sbb
xchg
into
push
(bad)
xchg
sti
cmp
test
call
scas
in
xor
push
mov
je
mov
shl
jne
aad
stos
pop
pop
add
inc
and
lock
jp
repnz
dec
enter
std
imul
loope
scas
mov
leave
in
aaa
mov
jg
jno
loopne
rcl
cwde
mov
cmp
and
xchg
fadd
lods
mov
mov
xchg
mov
dec
lahf
push
lahf
inc
jno
or
repnz
inc
xchg
mov
or
shl
dec
adc
mov
dec
xor
iret
xor
jg
xchg
(bad)
dec
not
mov
nop
std
jg
xchg
ret
jnp
and
mov
xor
cmps
dec
test
xor
call
lea
imul
xchg
je
stos
and
jae
mul
push
jl
jae
shl
jbe
jecxz
push
(bad)
mov
aaa
test
repz
enter
into
popa
dec
data16
dec
shr
sbb
jo
mov
cdq
daa
xchg
popf
nop
arpl
out
xchg
xor
std
xchg
inc
xor
outs
push
push
imul
mov
fcmovnbe
(bad)
gs
adc
rcr
add
and
call
mov
ret
cmc
in
ficom
clc
fist
push
rol
int
fcomp
inc
movs
aaa
mov
les
push
inc
cmp
retf
mov
xchg
sub
push
ds
out
das
jbe
aas
or
(bad)
out
enter
repz
mov
fimul
addr16
inc
cwde
sub
mov
mov
pop
imul
add
adc
jns
jno
add
jno
and
fwait
and
mov
sbb
push
push
in
sti
jne
imul
push
setl
mov
call
cmps
xor
and
pop
(bad)
cmps
out
xchg
pusha
aam
sahf
sub
and
jmp
dec
ins
imul
cmp
push
xchg
sbb
dec
push
in
(bad)
fist
aas
jae
dec
int
movs
dec
push
xor
lods
inc
add
das
ja
fst
and
jns
cmps
sub
icebp
jmp
add
push
and
inc
sbb
mov
add
sub
fld
adc
mov
add
fld
push
mov
lock
lods
jbe
mov
cmps
xchg
bound
dec
mov
cmp
lea
or
leave
xchg
jb
sbb
mov
cmp
xor
or
mov
lea
in
inc
and
test
dec
lods
ds
inc
test
or
dec
adc
cli
jle
and
ret
hlt
adc
movnti
adc
sbb
test
das
repnz
shl
xchg
ficom
add
pop
in
mov
lods
fadd
adc
inc
retf
xlat
sbb
inc
repnz
mov
push
mov
mov
push
mov
fnstcw
and
dec
outs
inc
push
inc
dec
mov
mov
test
(bad)
imul
dec
fwait
jp
push
push
test
or
jno
mov
mov
(bad)
add
test
push
sub
movs
shl
adc
jmp
repnz
fsub
lods
mov
outs
(bad)
sbb
push
pop
loope
or
mov
and
ins
scas
(bad)
jmp
xchg
jb
ror
cmp
fisttp
ins
sub
inc
shr
daa
fsubr
bound
cmp
mov
sub
jne
stos
outs
sub
cmc
and
push
push
ins
xchg
ss
sbb
fcmovnu
fnsave
adc
ins
arpl
ror
push
pop
mov
or
jge
aas
cmp
pop
movs
ret
arpl
push
mov
mov
popf
jo
push
retf
outs
push
pop
imul
ja
lods
sub
cmps
dec
retf
lea
cld
fcmovne
mov
fstp
loop
cmp
mov
sub
mov
dec
pop
(bad)
test
add
inc
cmp
shl
xor
sbb
int3
leave
pop
lock
pop
mov
dec
ins
add
add
bound
daa
dec
pop
push
pop
aaa
fldz
pushf
mov
(bad)
mov
xchg
and
sub
cmc
mov
jae
data16
mov
enter
xchg
xor
cdq
scas
push
mov
ss
jp
inc
test
mov
fcmove
sbb
cmps
jo
cld
cmp
repz
sbb
add
sar
and
mov
das
xchg
mov
int3
or
retf
sub
mov
jle
jle
or
repnz
cmp
xchg
jno
es
and
int
sti
into
leave
adc
sub
test
or
xchg
mov
sub
jae
cmp
mov
xor
cld
push
call
ss
mov
mov
inc
pop
out
ret
arpl
sbb
inc
mov
cmp
jmp
mov
cmp
retf
jmp
mov
pushf
cmc
jmp
hlt
out
mov
rcr
sbb
adc
test
clc
xchg
scas
jg
mov
cmps
mov
or
jae
adc
xchg
das
mov
jo
jb
mov
js
mov
xchg
cmp
pop
sub
shl
in
xchg
out
arpl
daa
jnp
or
dec
mov
sahf
mov
bound
hlt
stos
inc
(bad)
jmp
ins
pushf
out
xor
and
mov
ss
mov
icebp
loop
jecxz
inc
fsubr
(bad)
jmp
fwait
pop
or
loopne
rol
sub
and
cmp
pop
xor
aaa
mov
unpcklps
stos
jb
imul
inc
pop
jle
xor
(bad)
jmp
xor
cmp
push
movs
popa
sub
fld
int3
movs
cmps
xor
movaps
out
pop
dec
xchg
psubw
sub
outs
add
gs
jne
(bad)
push
mov
and
push
dec
inc
hlt
xor
add
add
dec
inc
or
jecxz
sbb
out
jbe
in
cmc
pushf
out
xor
outs
fnstenv
gs
rol
mov
pop
jae
inc
loopne
sub
imul
push
and
add
jge
ja
ret
and
ret
das
ins
and
jecxz
shr
jae
cld
sbb
mov
popf
or
jmp
cmc
lods
xlat
add
sbb
lock
jb
std
cmp
mov
iret
pop
sub
xchg
(bad)
sahf
pop
outs
mov
arpl
retf
loope
push
enter
dec
adc
fxch
mov
pop
xor
add
(bad)
repnz
mov
and
add
dec
loop
push
es
lods
out
ins
bound
jns
pop
sti
enter
jae
movs
sbb
loop
adc
ss
arpl
cmp
mov
inc
push
or
mov
sbb
mov
sbb
minps
iret
push
retf
stos
mov
movs
inc
(bad)
adc
sub
mov
ret
push
mov
mov
cmc
xchg
xchg
and
xchg
jmp
cmc
add
sahf
idiv
xor
adc
jae
pop
loopne
or
add
push
mov
bound
call
retf
push
dec
rcr
(bad)
cmp
daa
xchg
repz
mov
rcr
sub
loop
mov
retf
xlat
or
push
or
push
call
pop
outs
dec
stos
sub
mov
mov
aaa
push
lods
inc
in
push
push
sub
test
inc
push
sub
mov
ins
jne
stos
test
int3
movs
mov
sar
adc
mov
inc
jg
xor
shl
ror
sub
data16
mov
(bad)
sub
add
and
ja
jne
mov
sbb
fs
lea
sub
and
in
sub
pmaxsw
add
das
cmp
pop
mov
lds
test
ja
jge
inc
add
je
adc
(bad)
stos
inc
jae
das
fnstcw
cmc
sub
mov
test
adc
xor
js
sahf
fld
data16
cmps
scas
sbb
inc
xor
sub
in
adc
(bad)
je
xor
add
sbb
jp
sub
xor
and
(bad)
mov
sbb
push
imul
cmp
mov
stos
aaa
mov
icebp
or
ins
dec
mov
push
pusha
mov
push
jbe
xlat
mov
ds
inc
pop
sub
rcl
or
out
je
out
jnp
jp
push
add
and
stc
ins
cmps
or
popf
or
add
ins
push
xchg
das
mov
mov
das
xchg
add
mov
jg
daa
popa
jbe
loop
sub
adc
adc
neg
cs
ins
popa
dec
(bad)
mov
jle
xchg
test
and
scas
(bad)
test
or
adc
in
pop
cdq
lahf
call
jbe
js
loope
fwait
es
inc
cld
adc
mov
jp
mov
lahf
fs
popa
jg
add
sbb
xchg
ins
sahf
fwait
sbb
fmul
retf
cld
je
mov
lea
sbb
neg
push
jnp
xor
mov
dec
rcr
dec
es
jnp
nop
dec
cmp
mov
iret
ret
sahf
adc
aaa
jl
dec
add
jo
inc
jecxz
inc
jno
dec
pop
out
mov
gs
xchg
mov
mov
mov
mov
sub
adc
fdivp
sbb
test
add
ss
sub
popa
scas
sub
es
call
and
inc
outs
inc
cdq
inc
out
push
xor
sar
or
sbb
mov
adc
jno
push
adc
jns
push
cmp
add
cmp
inc
xchg
inc
mov
popa
mov
(bad)
cld
scas
mov
les
fadd
not
adc
inc
clc
retf
sahf
adc
pop
and
pusha
pop
adc
rcr
repz
push
data16
add
and
mov
cmp
bndstx
mov
in
add
sbb
inc
cmps
adc
scas
pop
sbb
je
mov
(bad)
out
(bad)
outs
lods
mov
xchg
leave
shl
fs
push
pop
or
imul
jbe
xor
outs
retf
movs
adc
sahf
ins
mov
inc
addr16
lea
mov
xchg
mov
push
mov
lea
add
mov
jns
xor
push
pushf
out
out
and
ins
retf
fmul
jns
call
addr16
push
pop
and
movs
pop
jns
sbb
sbb
jne
in
mov
mulps
push
pop
rcr
imul
inc
mov
adc
enter
outs
or
cmp
mov
and
add
mov
cld
arpl
outs
mov
adc
mov
retf
or
xchg
xchg
mov
xor
push
adc
jne
dec
mov
sbb
clc
neg
sub
pop
mul
jb
dec
or
sbb
sbb
shl
std
pop
dec
add
mov
in
adc
(bad)
out
cmc
jle
mov
push
fstp
(bad)
(bad)
pop
sbb
js
fsub
push
repz
or
aas
fild
sbb
pop
mov
add
jmp
cs
dec
into
sbb
fsub
movs
adc
fst
add
test
or
clc
sbb
(bad)
(bad)
(bad)
arpl
sti
cmp
sub
pop
and
test
pop
clc
cli
xor
hlt
fstp
dec
test
les
stos
mov
cmc
adc
leave
(bad)
shl
test
or
cwde
sbb
arpl
ins
mov
or
js
cmps
sub
sbb
mov
cmp
cs
or
cmc
mov
sub
mov
sub
xchg
inc
xchg
and
adc
pop
dec
dec
sub
jne
lods
and
add
repz
shr
aam
jnp
push
aaa
mov
js
jnp
pop
les
jmp
push
rcl
bound
sar
xor
fadd
arpl
jp
arpl
pop
mov
and
pop
das
inc
addr16
add
movs
mov
xor
mov
pop
inc
pop
push
cmc
jl
clc
(bad)
jbe
push
retf
push
jp
out
inc
add
inc
jbe
inc
xchg
add
fild
out
push
jne
inc
or
rcr
fs
push
mov
jg
gs
scas
mov
inc
sbb
xor
cmp
add
pop
xor
add
jmp
lahf
cmp
jl
in
mov
fnstenv
or
cmp
inc
sti
inc
not
aas
pushf
(bad)
mov
jns
test
push
cmp
cld
mov
imul
fld
pop
pop
dec
les
out
jnp
movs
repnz
sti
add
rol
mov
mov
iret
retf
hlt
xor
in
mov
je
scas
mov
dec
jne
adc
repz
adc
test
movs
fnstenv
sbb
div
aaa
adc
stc
rcr
inc
sti
data16
add
cli
clc
pop
inc
in
xor
push
lods
push
data16
out
sbb
ins
dec
ja
or
push
dec
out
push
jmp
jp
xor
sti
xlat
sub
sub
cmps
cmc
pop
cmp
push
and
pop
into
dec
cwde
or
and
jb
lods
scas
fst
imul
sub
loope
push
stc
adc
push
int3
and
shr
jno
inc
cmps
das
push
outs
stc
in
imul
sbb
popf
mov
xor
imul
adc
adc
dec
push
add
sti
sbb
push
cmp
in
fisub
and
xor
in
mov
(bad)
movs
inc
pusha
xor
mov
mov
addr16
dec
adc
sub
pop
fcmovne
imul
dec
movs
cwde
adc
and
retf
int
cmps
pop
out
int
push
and
and
inc
mov
call
cmps
cmps
jp
sbb
inc
shl
shl
imul
movs
add
sub
aas
int
lea
mov
cld
ret
mov
idiv
dec
or
mov
and
gs
scas
mov
into
mov
jle
nop
xchg
xor
adc
leave
cwde
test
jl
xchg
je
push
cdq
sub
cmp
int3
bound
push
sbb
or
jo
inc
pop
imul
push
(bad)
in
inc
sar
cwde
add
mov
sbb
shl
in
imul
mov
dec
adc
arpl
aam
jmp
pushf
or
mov
xor
pop
rol
ins
stos
xchg
sahf
stos
int
into
jp
or
push
mov
adc
out
add
jmp
aad
adc
mov
ss
jae
inc
xchg
leave
fiadd
inc
sub
movs
sub
xchg
dec
leave
int
jmp
pop
dec
dec
jp
pop
jnp
mov
mov
sub
xor
mov
call
push
in
jp
jns
xor
xchg
mov
dec
mov
jnp
jne
dec
ss
dec
nop
adc
in
push
sbb
lock
mov
and
addr16
out
jo
jmp
dec
lods
and
xor
jbe
jle
dec
xlat
addr16
das
push
dec
mov
leave
jno
jecxz
ror
xor
pusha
jno
inc
mov
jp
sbb
es
and
cdq
mov
fimul
into
cmp
cwde
sub
push
dec
jmp
jo
and
pop
mov
ins
retf
adc
sub
ins
xchg
fidivr
lock
pop
fistp
mov
dec
inc
nop
push
cmp
mov
adc
int3
sub
pop
jle
arpl
fdivrp
in
clc
std
sbb
xchg
lock
fwait
inc
mul
popf
push
cdq
ins
dec
gs
mov
clc
in
ret
aam
bnd
xchg
(bad)
jmp
retf
pop
outs
xor
ss
rcl
mov
and
idiv
repnz
pause
jecxz
inc
sti
fidiv
xchg
scas
nop
imul
sub
sbb
push
and
mov
dec
mov
mov
sub
push
cwde
mov
into
dec
out
or
iret
pop
loope
or
sbb
jg
dec
nop
movs
mov
dec
sbb
mov
sbb
or
aam
icebp
test
dec
xor
push
aas
dec
add
js
push
xor
sub
repnz
in
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
scas
(bad)
movs
sar
icebp
mov
cmps
inc
test
dec
mov
jb
fistp
push
xor
and
arpl
mov
add
cmp
aas
pop
or
lods
rol
xchg
repz
(bad)
(bad)
movs
aad
into
xchg
push
add
push
pop
add
and
jnp
ja
hlt
adc
ret
cmc
lods
sbb
sub
jl
jnp
js
dec
adc
test
cmps
xchg
xor
push
lods
outs
out
es
sahf
lods
fstp
call
dec
out
cli
jns
imul
fimul
pop
call
gs
adc
cmp
gs
mov
aam
or
outs
lods
jle
or
sahf
jle
stc
aaa
push
pop
cmps
push
cmp
pop
add
aas
dec
leave
pop
add
pop
mov
add
sahf
cld
or
add
dec
and
inc
sub
jnp
xchg
int3
movs
pop
inc
add
pop
xchg
sti
mov
test
lds
add
shl
mov
repnz
out
lds
xor
sbb
xchg
int3
dec
mov
dec
movs
fcom
push
mov
pop
ret
fistp
fdiv
out
cmp
movs
mov
jecxz
adc
adc
push
out
pop
int3
mov
dec
adc
xlat
push
div
push
lock
sub
push
add
test
test
loope
sti
in
sbb
outs
(bad)
ret
xlat
loope
cli
sar
stos
lods
das
ds
pop
fnstcw
cmp
jle
fwait
int3
mov
sbb
sahf
sbb
add
test
dec
sub
inc
stos
dec
cmps
inc
sahf
push
cdq
sbb
in
stc
or
mov
fisttp
fnstenv
jmp
dec
jmp
push
xor
mov
lock
or
lds
iret
je
(bad)
jg
add
push
push
scas
cmp
xor
loop
xchg
sbb
add
call
int3
test
mov
int
call
mov
rcr
sub
inc
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
arpl
jbe
xlat
inc
add
into
cmp
inc
mov
add
push
mov
hlt
add
call
stos
pushf
xchg
mov
xchg
mov
mov
sub
outs
add
cmp
adc
push
ds
or
dec
ss
add
aad
nop
test
xchg
or
imul
inc
daa
pop
sub
jge
jne
ja
mov
mov
or
shl
clc
ds
add
out
cmp
into
pop
push
hlt
pop
adc
cs
or
fsub
cmp
adc
call
pop
mov
jmp
adc
dec
mov
fnsave
in
mov
fisub
push
pop
movs
fwait
cld
das
sti
sahf
addr16
scas
js
or
test
loope
jp
fiadd
ret
mov
cdq
xchg
int
fistp
dec
sub
push
or
cmp
jge
pop
sbb
add
push
call
xchg
lock
daa
fdivp
xor
call
sub
inc
cs
pop
ins
aaa
mov
xchg
dec
lea
repnz
int3
cmp
add
popa
mov
sub
pop
pop
fistp
cld
ss
mov
sub
cs
mov
adc
in
xchg
imul
jns
pmaxsw
pop
test
mov
jbe
adc
and
data16
(bad)
(bad)
or
add
push
repz
jl
test
ins
test
and
jae
push
sub
and
xchg
xchg
sti
mov
sbb
push
jns
push
or
dec
and
cs
daa
jge
inc
es
xor
push
jae
jne
push
xchg
adc
in
ror
mov
in
loopne
sti
mov
inc
jg
push
cli
inc
inc
sbb
add
push
jge
imul
hlt
popf
xchg
inc
test
sub
jbe
inc
lods
jo
jecxz
sbb
arpl
js
add
pop
cmp
ins
push
popf
out
cmps
lds
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loopne
repz
pop
sahf
lds
mov
(bad)
inc
lods
push
(bad)
pusha
mov
fnstcw
sub
adc
adc
or
call
fisttp
lock
js
imul
and
push
sbb
ins
cmp
pop
cmp
sbb
add
out
std
(bad)
test
imul
cs
inc
pop
adc
cli
xchg
stos
in
popa
leave
add
out
sub
adc
jmp
aas
out
adc
rdmsr
ror
cmp
adc
shl
icebp
sbb
jmp
xor
cmp
fstp
xor
or
adc
rol
mov
xor
mov
xchg
sub
sti
add
mov
fdivr
pop
push
shr
out
out
or
xor
mov
xchg
call
inc
aas
popf
lds
in
xchg
call
in
sbb
cmp
lock
xor
lds
mov
loop
fsubr
imul
imul
sbb
cli
or
push
dec
test
sbb
(bad)
fadd
mov
scas
fs
(bad)
cmp
mov
call
retf
xchg
test
mov
cld
dec
xchg
out
jp
stc
jae
sbb
sub
fs
popf
stos
sub
and
fwait
mov
pop
aam
mov
sbb
push
jns
ins
add
or
and
dec
or
add
adc
and
dec
add
daa
lahf
in
test
add
in
rol
fidiv
dec
or
jle
pop
adc
cs
enter
fidiv
sbb
shl
sbb
xchg
add
fcom
adc
mov
rcr
xor
movs
mov
sub
cmp
cmp
cmp
sub
jb
imul
push
sbb
sub
add
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
repnz
sbb
sbb
jno
icebp
inc
cmps
xchg
mov
repz
sahf
mov
mov
dec
mov
pop
lods
fidiv
leave
call
jl
xchg
jle
mov
adc
mov
adc
sar
(bad)
aam
clc
fadd
add
pop
xor
fwait
out
jmp
xlat
mov
fisubr
test
and
push
mov
es
shl
mov
int
(bad)
mov
sar
movs
das
loopne
pop
adc
out
pusha
scas
inc
std
jecxz
aaa
shr
aas
iret
cmp
hlt
or
push
sbb
cmp
call
or
or
ret
push
loope
inc
jne
cdq
out
stc
pop
movs
std
push
mov
sub
inc
stos
inc
or
pop
inc
retf
shl
dec
cmps
popf
clc
sub
addr16
pop
out
loop
mov
push
icebp
nop
fwait
push
loopne
loope
xchg
lahf
les
mov
sub
inc
daa
lahf
hlt
mov
dec
cmovae
mov
test
repnz
jb
cwde
test
(bad)
mov
pop
cmpxchg
fcmovu
(bad)
jecxz
mov
add
push
jmp
gs
aam
popa
mov
pop
xchg
mov
shl
adc
cmps
imul
and
cli
or
icebp
sub
jns
aam
adc
add
xlat
jae
mov
mov
call
movs
movs
xor
pop
fwait
xchg
stos
dec
ror
iret
jb
sbb
pop
sar
push
lds
ss
shl
mov
mov
mov
sbb
ins
push
adc
and
inc
dec
pop
and
jp
push
outs
or
adc
das
mov
test
pop
xchg
add
loopne
retf
sbb
jae
cs
sar
retf
inc
sbb
dec
vhsubps
stc
inc
jmp
inc
sbb
dec
sbb
pusha
ret
out
out
adc
add
push
lahf
xchg
xchg
pop
fsubr
retf
lahf
and
xor
lahf
(bad)
add
aaa
xchg
retf
test
xchg
cld
test
cdq
lock
fst
retf
mov
jmp
ret
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
sar
mov
ret
sbb
das
retf
xor
mov
jne
outs
jmp
ss
mov
add
pusha
movs
inc
cli
adc
dec
mov
dec
stos
xchg
mov
inc
push
cmp
jae
lea
ret
cmps
sbb
clc
sbb
idiv
iret
fcmovnbe
fisttp
jmp
(bad)
push
jmp
xchg
cmp
jle
jnp
jnp
xchg
sbb
ins
outs
adc
jno
jmp
mov
pop
out
cmp
ss
sub
adc
inc
nop
pop
test
push
scas
mov
xchg
and
mov
jae
je
and
(bad)
jae
fs
aas
pop
fcom
jbe
cmp
jl
adc
jg
lock
pop
cmp
push
cmp
xor
lahf
movs
xchg
inc
sbb
add
mov
aad
repnz
xchg
out
neg
xor
bound
je
xor
call
xchg
xor
mov
pop
inc
mov
fs
(bad)
aas
iret
add
loop
or
popa
mov
adc
sbb
jg
ret
mov
jne
jb
or
cmps
inc
fld
fldenv
mov
add
popf
mov
or
cwde
enter
lods
stos
mov
hlt
inc
jb
data16
inc
test
addr16
dec
out
or
leave
popa
shl
js
loopne
clc
(bad)
jg
or
push
js
sahf
xor
ss
add
or
outs
les
je
pop
pushf
out
leave
test
test
pop
mov
xchg
mov
mov
push
mov
enter
mov
adc
or
js
xor
fld
mov
xchg
cwde
inc
(bad)
sahf
push
adc
add
sbb
fisubr
shl
jle
dec
int
inc
(bad)
dec
inc
in
ja
test
and
sub
fidivr
cld
mov
data16
push
inc
or
jo
jle
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
retf
stos
ret
mov
xor
or
pop
iret
add
icebp
add
retf
cmps
dec
loop
in
push
bound
inc
adc
mov
xchg
or
xor
lods
call
add
sbb
pop
mov
les
cmps
lahf
test
pop
das
pop
adc
inc
push
or
repnz
addr16
lods
je
xchg
inc
mov
mov
icebp
xchg
mov
psadbw
cmp
fild
rcl
sub
cmp
clc
push
pop
jmp
retf
ja
das
jecxz
test
xor
inc
fstp
add
into
mov
repz
sbb
inc
out
loop
jg
mov
pop
sub
add
dec
or
out
popa
(bad)
mov
jne
cli
pop
sub
cmp
dec
pop
or
movs
xlat
cwde
sbb
or
rol
cmp
push
xor
jg
jbe
cmp
dec
cmp
dec
and
jne
dec
data16
hlt
loop
(bad)
cmp
add
retf
idiv
stos
in
fild
(bad)
loope
mov
mov
jne
or
daa
adc
scas
ja
in
xor
test
mov
add
pop
scas
cwde
into
push
out
lahf
jno
adc
xchg
xchg
xchg
pusha
sbb
xor
sbb
jecxz
(bad)
ret
loopne
(bad)
dec
rcl
mov
fst
xchg
xor
les
mov
(bad)
lahf
push
repnz
mov
(bad)
daa
push
test
ror
cld
retf
stc
test
ins
dec
add
jbe
pop
das
bound
fidivr
sub
jo
jno
arpl
push
ss
sub
pop
pop
dec
and
out
ror
test
aam
inc
out
inc
std
cli
ja
sbb
sub
adc
loop
imul
jmp
sti
dec
xchg
mov
dec
repnz
mov
pop
cmp
inc
add
mov
pushf
in
mov
mov
out
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
js
pop
and
popf
cli
mov
scas
sti
stos
fisttp
mov
mov
je
fisubr
sub
aaa
xor
pop
(bad)
adc
outs
mov
sub
adc
iret
daa
cmp
aaa
ds
push
and
sub
into
add
and
pop
es
pop
mov
test
push
nop
xchg
fcmove
mov
(bad)
(bad)
xchg
in
(bad)
sbb
sub
cmp
movs
cli
rol
(bad)
sar
ror
(bad)
cmps
call
je
sahf
inc
jns
sub
aaa
fldenv
sub
sbb
in
cmp
mov
clc
sub
aam
int
mov
inc
stos
pop
lds
ins
stos
gs
push
mov
xchg
jne
push
sbb
xor
jnp
pop
idiv
in
ja
fs
dec
xor
les
les
mov
mov
jno
data16
push
xor
push
neg
xor
cmp
push
sbb
push
bound
jl
pop
push
mov
enter
pushf
or
cmps
xor
mov
lahf
jmp
es
jb
int3
pop
loop
ret
xchg
pusha
mov
cmp
(bad)
fdivr
dec
add
or
scas
jg
les
and
cmp
cmp
and
jge
or
xlat
or
and
imul
mov
mov
cdq
sub
adc
cs
(bad)
sbb
add
arpl
sti
dec
mul
inc
test
in
and
and
sbb
in
or
clc
cs
jmp
jno
(bad)
jecxz
call
sbb
test
sub
daa
inc
add
movs
out
(bad)
pop
or
ret
sbb
add
push
rcr
adc
scas
scas
stos
cmp
and
test
(bad)
imul
push
jmp
push
int3
or
ds
retf
ror
or
dec
xchg
jecxz
lock
repnz
retf
test
fild
jmp
call
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
cmp
push
pushf
sti
xchg
push
js
loopne
mov
lods
pushf
jl
and
pop
mov
xor
in
clc
dec
scas
dec
sbb
and
adc
pop
cmp
cmp
sar
add
xchg
push
add
cmps
out
mul
in
sbb
retf
mov
or
mov
xor
or
push
ret
jg
adc
adc
je
sbb
add
jne
div
or
or
push
(bad)
mov
xchg
test
pop
cs
xor
sbb
cmp
jno
push
pop
dec
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
push
add
int3
mov
pushf
jmp
les
in
in
dec
shl
sub
add
fiadd
or
cmp
rcl
(bad)
and
aam
sar
std
dec
cmps
popa
std
ds
lods
je
and
add
mov
punpckhbw
ins
pop
cs
pop
daa
pushf
cmc
lods
div
daa
inc
cmp
adc
xor
js
outs
or
xchg
jg
inc
addr16
jae
jp
dec
inc
addr16
mov
fidiv
test
es
pop
loopne
cmc
inc
mov
imul
dec
fild
inc
sti
and
ins
cmp
enter
repz
push
fcmovb
sbb
loopne
cwde
dec
cmp
adc
arpl
in
inc
lods
jl
or
xchg
cdq
imul
dec
lods
inc
add
and
shl
fsubr
sub
push
es
dec
sub
pusha
or
jo
inc
ds
pop
add
pop
and
pusha
aas
jae
jno
jae
arpl
push
jns
mov
ret
outs
sti
inc
and
cmp
int3
cmp
shl
in
xchg
fcmovb
scas
stc
int3
sub
imul
xor
(bad)
pushf
or
in
(bad)
shl
dec
into
pop
loop
sbb
stos
jb
hlt
pop
adc
popa
or
jns
mov
mov
aaa
ror
in
ja
iret
push
xlat
sbb
(bad)
adc
and
xchg
mov
fs
sbb
stc
test
out
mov
leave
xchg
sahf
lds
in
mov
mov
in
aad
ror
mov
cmp
add
add
inc
aas
push
sub
cmp
or
lahf
test
inc
out
cmp
enter
mov
xlat
ins
inc
ret
popa
jg
jae
test
sar
mov
mov
mov
je
jnp
pop
popa
adc
inc
and
jmp
cdq
fst
(bad)
cmps
les
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
sub
inc
aaa
jnp
gs
outs
sub
pop
or
sub
retf
jns
push
in
sbb
inc
mov
jno
jae
adc
inc
(bad)
pop
(bad)
sub
mov
mov
pusha
mov
dec
lods
mov
push
or
jno
pop
push
inc
pop
pop
xor
pshufw
or
shl
mov
scas
jmp
inc
add
pop
xor
and
dec
cmp
pusha
add
dec
add
adc
sub
pop
bnd
jae
and
push
mov
cdq
pop
mov
pop
mov
cmp
xlat
das
jecxz
mov
hlt
sub
jne
fadd
cmps
out
clc
cmp
xchg
jp
aam
leave
mov
ror
mov
in
sub
jns
int3
xor
call
mov
jmp
mov
inc
sub
dec
add
push
add
mov
sti
scas
cli
stos
fmul
pop
dec
mov
mov
mov
cmp
loop
sbb
mov
mov
adc
arpl
inc
xor
add
test
lods
xchg
outs
xor
iret
popf
jp
aam
push
push
outs
and
jge
daa
cld
xchg
jl
lock
les
jmp
mov
hlt
push
push
mov
xor
mov
dec
aam
jbe
or
pusha
cmc
pop
adc
shr
add
cmp
dec
mov
sahf
sbb
add
adc
popa
cmp
add
add
pop
sub
ss
push
outs
arpl
inc
cs
dec
daa
inc
mov
aas
xchg
cmp
push
xor
dec
sub
pop
adc
and
mov
xchg
sahf
jmp
in
(bad)
pop
retf
pop
int
rcl
retf
push
sar
gs
aas
add
mov
out
dec
sbb
push
in
ret
popa
jmp
jg
add
push
mov
adc
pusha
add
push
xor
inc
cs
cmp
jo
ja
gs
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
loopne
inc
xlat
xchg
shl
ret
xor
jl
dec
push
fnsave
sub
and
(bad)
cmp
loopne
and
add
inc
sbb
aas
cmp
ss
adc
enter
push
int
movs
xchg
pop
or
adc
jae
inc
xor
lahf
repnz
mov
pop
jp
pop
sbb
ds
sub
pop
pop
xchg
ins
fwait
push
mov
mov
bound
dec
jbe
popf
call
add
div
das
add
pop
lods
je
add
cdq
push
mov
xchg
push
cmp
jge
pop
sbb
or
retf
sub
(bad)
adc
in
xor
out
pop
test
and
fsubr
fcmovbe
rcl
(bad)
aaa
pop
fsub
jnp
jbe
in
inc
fiadd
dec
int
dec
mov
or
add
daa
dec
retf
cs
and
mov
mov
push
xlat
cdq
sub
ds
pop
das
data16
dec
and
dec
aaa
fs
outs
xor
pop
or
cmp
imul
lods
ror
ret
and
mov
jbe
pop
xor
fs
imul
jbe
aam
cmps
in
stos
in
xor
scas
jne
in
out
and
mov
push
test
fs
fnsave
repnz
adc
ins
in
push
add
fstp
adc
pop
lock
jns
adc
int3
or
sbb
add
enter
sbb
leave
adc
xlat
scas
into
mov
stc
mov
mov
cmp
sbb
dec
es
(bad)
(bad)
lea
cdq
in
mov
addr16
sbb
das
test
sbb
pop
mov
xchg
aas
stc
sbb
inc
shl
ins
data16
cdq
xchg
jmp
xchg
cdq
mov
mov
adc
add
pop
mov
xchg
daa
add
mov
and
xor
cmp
add
retf
test
mov
scas
out
lods
out
sbb
cmp
push
dec
add
inc
xor
inc
or
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
xor
xor
pop
pop
aaa
pop
sbb
cdq
cli
cmps
jb
add
dec
cmps
jge
cmp
dec
test
xor
add
int
add
and
push
sti
sub
jg
dec
out
push
lds
data16
add
jl
gs
ds
jne
push
mov
pusha
addr16
sub
arpl
push
inc
and
xor
ss
and
dec
punpckldq
jne
popa
daa
jnp
push
push
sbb
and
les
fs
pop
test
dec
mov
push
mov
fs
fwait
popf
push
mov
arpl
dec
mov
lea
fcomp
enter
neg
mov
jg
add
inc
sub
jns
aam
mov
push
xchg
xor
mov
sbb
movs
inc
add
dec
jecxz
pop
push
fcom
out
dec
mov
fs
jg
inc
or
dec
and
sbb
xor
sub
aas
jbe
jbe
jae
inc
cmp
jl
scas
push
leave
jnp
push
xchg
(bad)
pop
mov
popf
push
popf
dec
cmc
pop
mov
pop
xor
sbb
or
dec
cmp
ds
jne
xor
lea
dec
mov
push
(bad)
repz
xor
push
movs
iret
and
lea
inc
mov
stos
shl
clc
xor
or
addr16
push
and
aad
jmp
mov
pop
sub
fdiv
or
lds
adc
adc
ins
xlat
ret
jb
push
cmp
fstp
add
pop
dec
jnp
mov
xchg
into
(bad)
int
test
call
frstor
addr16
dec
test
adc
in
mov
popa
test
in
xchg
cdq
inc
loopne
js
popf
ds
das
mov
pop
jo
cmp
add
jl
dec
imul
inc
sbb
test
mov
stos
jl
dec
pop
add
rcl
fild
mov
lds
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
cmp
pop
or
pop
aas
ja
pop
sbb
xor
mov
out
mov
add
jle
aas
in
call
dec
std
sbb
rcr
dec
mov
add
dec
sahf
pusha
in
pop
mov
dec
mov
fs
cdq
fld
aaa
fiadd
stc
in
cpuid
dec
pop
jo
das
movs
jecxz
or
jbe
inc
sub
ins
add
inc
mov
(bad)
jno
push
lods
ins
fiadd
cli
push
fld
loopne
xor
add
push
mov
jbe
push
(bad)
sbb
dec
popf
fs
dec
call
fidiv
lahf
mov
lods
cwde
push
mov
ins
mov
dec
popa
jmp
inc
sbb
xor
jmp
in
push
dec
fisub
pop
test
(bad)
fnstcw
scas
ja
div
or
xchg
out
das
clc
mov
sbb
int3
adc
jmp
jb
daa
sub
ss
add
icebp
aas
rcr
ds
inc
jge
data16
mov
push
sub
ins
movq
addr16
test
hlt
push
nop
(bad)
xor
repnz
mov
iret
mov
enter
stos
jae
retf
daa
jmp
sbb
call
inc
(bad)
pop
pop
sbb
sbb
cmovp
push
shl
std
add
dec
sbb
xchg
push
cmp
xor
push
repz
sub
dec
icebp
or
pop
xchg
adc
add
pushf
test
xor
shl
clc
pop
shr
(bad)
call
xlat
jecxz
in
sahf
mov
or
fistp
movs
mov
sbb
adc
sbb
xor
adc
dec
and
push
scas
inc
adc
xchg
call
push
hlt
fs
mov
ins
iret
xchg
push
shr
into
cdq
cmp
cld
ins
lock
add
push
sar
pop
idiv
dec
cmc
jecxz
test
ret
jmp
ror
cmp
aaa
ds
movs
or
sub
xor
ja
inc
push
push
cmp
pop
inc
or
or
mov
dec
fcomp
clc
movs
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
(bad)
mov
(bad)
test
out
(bad)
push
jecxz
cs
popa
(bad)
popa
clc
adc
adc
add
retf
or
jmp
pop
mov
mov
xor
hlt
adc
(bad)
aas
into
sahf
push
stos
movs
jp
mov
popf
test
mov
fild
add
adc
test
sbb
sub
into
sbb
daa
das
ret
into
xor
add
inc
mov
lock
dec
movs
ror
jle
ja
sub
inc
mov
bound
call
or
popa
mov
lods
arpl
jne
test
(bad)
je
fist
lock
mov
push
outs
push
push
xchg
gs
outs
mov
cdq
cdq
stc
add
jp
lahf
div
into
scas
xchg
addr16
and
xor
push
mov
popa
test
or
ss
iret
pop
loope
sbb
mov
mov
out
arpl
dec
fdiv
ins
hlt
pop
aam
sub
fdivr
push
lods
dec
enter
pop
lods
in
xor
test
std
sahf
mov
ins
aam
push
movs
mov
dec
xor
xor
cmps
jg
std
add
mov
mov
fistp
mov
pop
mov
inc
fild
rol
mov
or
sbb
(bad)
push
out
adc
or
data16
cmc
inc
ret
pop
ror
or
cmp
push
sbb
popf
cmp
adc
fs
rcr
mov
add
data16
addr16
fcomp
jge
add
retf
xor
jns
shl
movs
inc
jle
push
(bad)
fucomi
push
jmp
ret
jbe
jecxz
mov
jmp
bnd
xchg
movs
or
xor
jecxz
xchg
mov
add
xor
xlat
fs
int
sbb
push
test
mov
jb
mov
daa
inc
cmp
inc
pop
pop
ja
fwait
cmc
nop
clc
mov
nop
jmp
jmp
xchg
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
pop
or
and
js
push
adc
rol
js
sub
jge
ja
adc
dec
add
xchg
sbb
cmps
inc
neg
not
inc
les
div
in
pushf
dec
pushf
mov
nop
xchg
pop
mov
dec
lods
mov
mov
jns
call
jnp
mov
mov
dec
mov
cdq
outs
fmul
sbb
call
rol
push
cld
or
dec
scas
push
in
out
mov
in
push
jecxz
call
jns
adc
(bad)
sbb
iret
sub
in
push
cmp
pop
repnz
jge
jle
xor
jae
push
enter
inc
mov
adc
pop
mov
in
mov
repz
repz
mov
jg
adc
xchg
imul
push
call
gs
add
jle
jl
les
push
lods
dec
sbb
push
out
and
inc
sub
adc
das
pop
fisubr
ja
gs
sub
aas
jl
jns
jnp
mov
mov
mov
dec
stos
retf
fdivr
sbb
outs
sbb
xor
push
pop
cli
sqrtps
and
xor
stc
sub
and
cli
daa
js
sub
mov
jl
jbe
loopne
jp
sub
mov
cmp
(bad)
mov
mov
add
xchg
jae
mov
mov
xchg
cmp
ret
data16
gs
outs
hlt
in
sbb
cdq
add
(bad)
or
xor
neg
aas
sub
inc
jmp
imul
jg
pop
ss
mov
sbb
or
and
jne
out
push
out
pop
std
pop
add
mov
std
dec
in
pop
jecxz
cmp
dec
imul
dec
rcl
cmps
mov
mov
push
in
jnp
outs
fs
inc
(bad)
push
ja
fs
mov
mov
ins
ins
shl
shl
jmp
addr16
cwde
cmp
adc
addr16
stos
test
dec
xchg
adc
(bad)
cs
repz
mov
mov
jmp
lds
xlat
(bad)
out
xchg
(bad)
sahf
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
js
ins
or
add
xor
inc
cmp
pop
mov
sub
je
dec
cld
push
int3
addr16
push
mov
pushf
jg
fst
(bad)
push
mov
inc
or
lods
xchg
xchg
jns
(bad)
addr16
mov
mov
iret
xor
dec
and
or
int
sub
aaa
sbb
cmp
in
and
out
adc
add
xchg
push
add
stc
sbb
sub
or
scas
data16
and
push
cs
adc
int
ret
mov
in
icebp
out
outs
stos
mov
mov
pop
jb
or
push
dec
pop
cdq
(bad)
jp
dec
arpl
mov
ds
or
dec
push
sbb
into
out
xor
mov
arpl
mov
ret
add
xchg
retf
(bad)
xchg
adc
mov
cmp
(bad)
stc
arpl
test
cwde
imul
je
ds
xchg
jns
and
out
add
out
dec
mov
push
inc
jmp
cli
ficom
or
push
mov
lea
adc
mov
adc
mov
xchg
add
cmp
push
scas
sbb
sbb
inc
or
mov
push
(bad)
std
pop
push
adc
lds
(bad)
jecxz
test
popf
test
shl
aam
or
lea
fcomp
mov
js
mov
dec
stos
mov
test
pusha
(bad)
cmp
jns
loopne
ss
shl
fstp
jle
inc
(bad)
fistp
mov
dec
mov
popf
mov
adc
mov
pushf
pop
inc
(bad)
cli
iret
add
jge
jae
mov
scas
outs
loop
js
adc
cmp
cdq
cld
retf
xchg
fyl2x
and
adc
retf
mov
xor
pop
inc
inc
xor
fwait
scas
push
and
stos
iret
mov
adc
ss
mov
push
inc
fsubr
xchg
mov
aam
imul
dec
dec
movs
mov
xchg
or
pop
popf
or
jb
pop
ins
sbb
sub
sub
mov
jmp
xor
dec
sub
ds
test
inc
dec
cmp
pusha
add
leave
das
cli
jle
xchg
pop
jnp
xor
inc
leave
and
and
pusha
pop
in
(bad)
jo
in
cmp
addr16
sbb
out
mov
cmp
cmp
retf
test
stc
mov
inc
into
aad
into
add
movs
mov
stos
cmps
cmps
jle
cmps
retf
sbb
in
cwde
add
dec
stos
int3
leave
sub
gs
mov
or
cmp
es
xchg
xchg
pop
sub
jmp
sub
xchg
xchg
adc
xor
mov
cmp
ins
aaa
fcmovne
sub
ins
fnstcw
or
loope
cmp
mov
mov
jo
stos
clc
stc
int
popa
mov
pushf
hlt
sub
scas
outs
inc
sbb
jg
nop
pop
lahf
popa
mov
into
(bad)
mov
in
cmp
out
mov
xor
cmp
xchg
xor
in
jo
repnz
inc
ja
dec
sbb
aam
aas
fwait
lea
in
dec
jmp
sub
push
inc
add
call
(bad)
cmp
loopne
sub
jae
lea
cs
jns
cmp
mov
shl
jl
dec
xor
xor
or
stc
mov
jb
jae
rcr
and
mov
pop
inc
xor
push
jnp
and
dec
in
cmp
jns
push
ret
add
and
ret
pusha
push
or
adc
lds
and
shl
xchg
ret
mov
xchg
cs
rcr
fidiv
sub
mov
dec
loop
ins
repnz
add
enter
leave
neg
addr16
cmc
jb
popa
push
cmp
out
sbb
enter
repnz
shr
add
test
icebp
test
jne
jg
inc
(bad)
push
inc
repz
leave
test
(bad)
pop
adc
push
push
nop
mov
jmp
mov
nop
mov
mov
pop
mov
in
add
xchg
test
pop
cmp
dec
addr16
mov
jne
mov
mov
and
aad
mov
hlt
popa
aad
cmp
call
aam
sbb
sbb
jb
mov
pop
out
iret
fmul
jo
jne
mov
sbb
cmp
mov
and
mov
lods
pusha
xor
sub
nop
xor
mov
sub
ror
sub
cmp
mov
xchg
jecxz
sar
or
and
movs
es
jg
mov
inc
jecxz
jb
lods
mov
loope
bound
test
daa
cmp
adc
rol
sahf
or
or
add
mov
dec
mov
adc
loope
sbb
push
jle
jb
mov
mov
imul
and
(bad)
mov
mov
mov
popf
push
loop
les
add
scas
loopne
mov
je
fdivr
xchg
push
jg
sbb
outs
dec
mov
cmovae
or
scas
push
add
inc
dec
in
sbb
push
mov
xor
mov
scas
jp
je
and
push
pop
ret
cmps
add
mov
pop
scas
es
and
fincstp
adc
jno
imul
add
pop
popf
cmp
push
(bad)
js
test
push
jo
xchg
les
dec
xor
mov
imul
lea
shl
or
or
xor
mov
repz
aas
xlat
cmc
mov
inc
xor
xlat
adc
scas
sbb
push
mov
test
cld
aaa
or
push
push
enter
(bad)
dec
bound
sahf
dec
fdiv
cmp
loop
cmc
stos
scas
cmp
stos
js
jo
js
iret
adc
in
not
xchg
data16
add
test
std
cmp
retf
rcr
pop
dec
outs
loope
and
xchg
push
or
bnd
pop
sbb
test
mov
jns
xchg
push
ret
ret
xor
retf
sub
adc
sub
cmp
cmp
aas
adc
sub
mov
aad
dec
cmp
fs
push
mov
pop
mov
sti
out
dec
cmp
add
sbb
loop
push
push
push
sub
std
sar
sahf
pop
or
test
outs
dec
icebp
jne
mov
fs
outs
pop
lea
xchg
(bad)
pop
jne
inc
imul
sahf
mov
test
and
data16
push
shr
add
outs
mov
dec
mov
pusha
adc
pop
sub
and
call
jl
push
scas
mov
sahf
add
dec
xlat
icebp
sub
mov
push
push
mov
cmp
adc
cmp
xor
cmp
popa
mov
aad
fs
outs
pop
adc
pop
loop
cli
sub
push
aam
fadd
cwde
mov
stos
mov
into
out
jmp
hlt
mov
sbb
aas
lods
pushf
dec
push
push
call
stos
leave
jae
out
or
add
xor
ins
mov
mov
out
dec
cmc
push
cmp
sub
xchg
and
xchg
or
and
pop
scas
ret
fdivr
push
ds
add
inc
xchg
(bad)
test
add
cmps
add
xchg
out
out
out
xor
push
xchg
test
sbb
out
popa
outs
xor
jle
ins
out
sbb
jl
sub
mov
mov
jmp
xchg
adc
dec
inc
fild
or
jmp
add
jmp
pop
ins
pop
jbe
mov
adc
or
fwait
xchg
sbb
cmp
mov
add
cmps
jbe
sbb
pop
and
push
sub
ds
enter
adc
push
fwait
stos
inc
sbb
pop
outs
or
lds
adc
mov
sbb
test
ds
jne
cs
mov
ds
xchg
data16
push
out
sbb
adc
push
fs
mov
sar
dec
mov
hlt
sahf
jbe
jge
sub
outs
je
mov
xchg
pop
or
cmc
pop
mov
or
push
cmp
(bad)
mov
(bad)
adc
leave
inc
dec
jne
fimul
lea
neg
in
(bad)
ja
push
add
dec
ret
fidivr
ins
xchg
or
das
xlat
jnp
sbb
clc
call
pop
fwait
loopne
xchg
imul
or
leave
adc
sbb
test
mov
mov
outs
neg
add
popf
sbb
faddp
lea
or
into
call
cmp
mov
pop
sbb
mov
call
xor
and
ins
popf
add
pop
aad
fstp
sbb
push
(bad)
add
adc
nop
rcl
mov
outs
xchg
xchg
ror
adc
cmps
iret
imul
sar
aam
sbb
pushf
sbb
das
mov
xor
jnp
push
sar
mov
cs
pusha
inc
or
cmp
sbb
mov
fsub
call
cld
popf
ins
shl
and
lea
sub
jmp
push
xchg
fwait
adc
and
cmp
ret
xor
mov
push
in
mov
stos
cmp
cmp
jg
cmp
js
pushf
and
mov
and
or
jne
mov
sub
fldcw
hlt
cmp
mov
and
mov
cs
and
mov
test
(bad)
repnz
gs
mov
jno
int3
mov
enter
inc
pop
mov
jmp
(bad)
dec
sahf
inc
movs
cwde
retf
fild
ins
mov
adc
test
arpl
gs
xor
xchg
test
sahf
in
add
pop
sub
pmullw
pop
cld
or
lds
(bad)
fwait
push
cmp
cmp
out
and
arpl
push
shr
pop
pop
fiadd
loop
inc
pushf
sub
cmp
inc
push
mov
sbb
adc
push
ins
shr
pushf
add
mov
add
inc
or
or
daa
mov
push
test
add
pop
cmp
fist
xor
lahf
xor
mov
cmps
mov
retf
test
jmp
push
jmp
retf
aam
sub
mov
and
and
and
sti
sub
repnz
jns
inc
lods
pop
push
push
rcr
fcomp
and
push
push
cwde
jecxz
xor
int3
out
inc
mov
push
loop
ja
or
mov
std
lahf
jbe
mov
mov
push
adc
mov
ret
add
retf
sahf
and
aas
les
sub
les
mov
pop
cwde
add
push
mov
xchg
ret
fisubr
add
adc
jmp
xchg
cmc
mov
std
pop
cmp
mov
sub
cdq
mov
jl
mov
pop
ret
and
and
jge
pop
push
mov
xchg
ret
out
loopne
lea
cmps
(bad)
fild
xor
or
add
lods
add
pop
mov
inc
push
cmp
clc
inc
ds
cmps
inc
push
sbb
fistp
test
clc
adc
inc
inc
xchg
pop
ret
jbe
shl
mov
xchg
jl
or
xchg
dec
xlat
pop
jge
xchg
xlat
out
clc
in
cwde
or
dec
fistp
and
pop
push
mov
icebp
sub
int
retf
dec
cmp
fs
stos
iret
cmc
xor
mov
pop
mov
shr
call
cmp
pushf
stos
mov
push
or
cdq
sbb
imul
cmp
call
imul
rcl
int
aaa
pop
xor
fs
add
push
adc
xor
je
outs
cmp
ret
jmp
add
out
out
sbb
add
or
nop
and
cmp
cld
jae
ret
xor
ss
add
sbb
outs
xchg
xchg
mov
test
and
xchg
adc
imul
fist
jmp
push
test
fadd
adc
mov
sti
(bad)
pop
mul
int
inc
sbb
(bad)
loopne
fimul
imul
mov
fmul
lds
loop
xchg
sub
add
pusha
fdiv
aam
push
call
rcr
pop
(bad)
addr16
inc
pop
pop
aad
sbb
stos
jp
out
cld
dec
adc
ret
add
stos
pop
dec
sbb
jb
stos
cld
outs
lea
loop
pop
jo
icebp
inc
jns
mov
pop
outs
mov
dec
cmp
xchg
adc
arpl
xchg
aas
or
and
dec
sub
aaa
lahf
push
sub
sub
(bad)
loopne
data16
das
cmp
out
sti
mov
adc
cs
test
mov
les
icebp
jmp
ss
ins
sbb
(bad)
data16
mov
shl
or
cmp
dec
neg
jge
mov
dec
call
push
cmp
les
out
xchg
in
ds
aaa
enter
push
adc
dec
ja
popa
push
inc
shl
(bad)
in
pop
int
push
cli
(bad)
push
out
and
push
mul
jg
and
daa
mov
nop
jmp
add
loope
ret
xchg
mov
bound
iret
push
cmp
imul
ins
and
fs
mov
pop
test
xor
sbb
mov
xor
arpl
popf
mov
pop
jmp
push
(bad)
cdq
aam
inc
out
push
sbb
cmp
mov
jle
xor
pusha
push
movs
sbb
(bad)
fist
shl
mov
ret
(bad)
sub
es
ret
jnp
bound
stos
test
lods
mov
xchg
mov
xchg
add
popf
loop
push
or
mov
pop
xchg
test
pushf
cmps
push
lods
mov
add
stos
dec
pop
das
outs
stos
out
ret
adc
xchg
cmp
adc
test
pop
sbb
es
or
icebp
push
sub
push
fisub
push
aaa
or
jmp
mov
pop
or
lods
std
popf
mov
stc
mov
call
cmp
jp
adc
sbb
into
in
sbb
nop
sbb
jl
jp
push
movs
push
and
xchg
aad
(bad)
fst
push
jmp
hlt
es
adc
out
mov
(bad)
xchg
call
nop
dec
sbb
int3
retf
mov
loope
adc
add
xor
jecxz
xchg
repnz
aad
sbb
jmp
hlt
(bad)
fist
pop
push
jns
inc
popa
ds
jmp
(bad)
cmp
lea
sub
movs
xchg
push
adc
hlt
js
or
cmps
and
jmp
sbb
retf
inc
call
sub
cmp
xor
rep
add
ss
lods
mov
call
dec
stos
je
bound
cmp
pop
leave
rcl
push
mov
gs
mov
ss
push
out
dec
call
push
cwde
test
or
loopne
dec
xchg
mov
or
retf
adc
add
cmp
jl
sub
jmp
es
mov
lods
loop
rcl
test
mov
ss
xchg
mov
ror
cmp
inc
mov
cmc
leave
daa
mov
retf
fwait
sbb
retf
pop
mov
adc
ja
aam
mov
loop
jmp
or
(bad)
xor
fdivr
fmul
jp
inc
inc
movs
or
les
add
clc
jno
pop
call
push
push
lds
push
push
lods
rcl
sbb
mov
mov
rcl
cld
jge
and
ins
xor
add
int
cmp
sbb
icebp
mov
and
test
jnp
sbb
iret
outs
mov
xor
movs
xchg
call
jnp
and
and
adc
inc
mov
arpl
ins
xchg
mov
xchg
scas
nop
sbb
or
pop
cmp
ss
inc
xchg
rcr
lods
test
sub
cmp
(bad)
mov
int
rcr
jno
fucom
or
fbstp
push
aad
jp
inc
jno
sub
gs
(bad)
and
jmp
push
adc
sbb
pop
mov
or
movs
imul
or
popf
out
inc
int
inc
data16
xlat
mov
(bad)
bound
mov
mov
imul
ret
sbb
out
das
rcr
sub
les
xor
pop
(bad)
ja
xlat
push
dec
cmc
(bad)
jmp
inc
in
mul
gs
sbb
pushf
inc
in
ficom
sub
stos
int3
pop
pop
and
fldenv
pop
loop
mov
scas
or
in
loope
sahf
mov
mov
data16
xor
mov
in
fisubr
mov
jns
loopne
popa
mov
out
loop
dec
loopne
call
cs
out
jg
rol
movs
pop
xor
mov
inc
mov
sub
pop
jg
or
int3
xchg
inc
mov
in
add
pop
jmp
shl
fcomp
cli
jmp
imul
ins
sub
mov
push
add
jecxz
mov
dec
push
jno
aaa
fdivp
inc
es
xor
clc
mov
ror
mov
pop
out
dec
push
loop
scas
fdiv
push
sub
add
aas
cmc
mov
or
stc
jae
add
cmp
js
inc
dec
push
pop
cbw
stos
jo
pop
dec
ins
pop
cmps
aas
out
cld
bound
mov
iret
dec
cmp
fwait
aas
push
pusha
cld
mov
mov
pop
pop
retf
iret
xlat
dec
jae
cmp
sbb
inc
shr
xchg
jl
mov
and
fdivr
arpl
xchg
lahf
cmp
sti
stos
lods
push
fild
add
call
add
cmp
retf
mov
sub
outs
popf
es
mov
jmp
in
mov
sbb
iret
xor
imul
mov
sbb
add
mov
mov
inc
(bad)
(bad)
mov
dec
ss
adc
cld
iret
int3
sbb
dec
push
stos
je
xchg
jmp
data16
shr
arpl
in
or
mov
in
xor
mov
int
shr
lods
add
cmp
and
dec
jg
push
pop
dec
dec
loopne
int
(bad)
push
aaa
out
out
stos
fisub
clc
xchg
or
xchg
icebp
xor
js
xor
mov
fisub
ret
repnz
xchg
cmp
inc
and
mov
mov
inc
(bad)
repnz
xchg
and
cmps
sub
or
retf
fiadd
out
les
or
inc
iret
sti
xchg
pop
fs
or
inc
imul
sub
push
mov
rcr
repnz
sbb
xchg
add
test
xor
inc
or
sahf
jmp
pop
div
loope
clc
fwait
sbb
push
sbb
jl
jno
sub
ja
dec
scas
shl
pop
fsubr
(bad)
outs
outs
repz
gs
mov
mov
loope
ret
mov
ins
lock
dec
es
test
movs
push
cmp
dec
not
sub
mov
dec
mov
aam
and
adc
xor
or
stc
xor
pop
xor
movs
jg
iret
mul
push
test
cmp
xchg
loop
pop
and
add
cmp
pop
lock
aam
or
cmp
and
cmp
pop
or
stc
dec
stos
sahf
jae
out
mov
(bad)
fsubr
dec
test
push
fld
push
hlt
cmp
repz
leave
dec
fidiv
arpl
(bad)
aad
push
mov
and
and
or
adc
aaa
leave
pop
mov
retf
and
and
icebp
dec
test
shl
idiv
jmp
test
pop
ror
or
(bad)
mov
int
out
or
xchg
pop
mov
mov
je
addr16
(bad)
cmp
mov
outs
(bad)
push
out
cmp
and
lods
sahf
xchg
gs
ins
mov
(bad)
push
fst
data16
inc
mov
xchg
cld
sub
push
mov
scas
jbe
gs
bound
and
dec
mov
icebp
shr
cmps
fwait
test
or
iret
push
cmps
mov
dec
fstp
fidiv
out
fisttp
dec
cld
add
repnz
ds
shr
scas
jle
jbe
push
mov
push
adc
std
sub
cmp
or
cmp
dec
fbstp
(bad)
and
xor
mov
call
sub
dec
fist
in
mov
fs
push
sbb
mov
fisubr
jae
pusha
fstp
ja
nop
cdq
sahf
bound
data16
push
dec
fiadd
(bad)
ds
sbb
sbb
xor
das
pop
adc
sub
adc
sbb
or
aad
retf
jb
push
cs
xor
or
or
mov
sub
retf
or
daa
adc
cld
add
jecxz
cld
adc
int3
daa
loop
mov
cli
push
mov
dec
test
jb
nop
js
xor
jp
jl
xchg
xchg
lahf
sahf
(bad)
lahf
cdq
xchg
xchg
je
jle
dec
cmp
ret
cs
ret
push
fnstcw
cdq
inc
mov
push
or
dec
xchg
mov
xchg
xchg
lahf
popa
cli
sub
and
loope
out
push
fist
xchg
lahf
pushf
mov
cmp
or
loop
cmp
sbb
cmp
pop
cmps
mov
test
xchg
sbb
mov
and
mov
sbb
lahf
jo
and
fidiv
jmp
int
pop
loop
cmps
push
dec
mov
and
jbe
cmp
loop
mov
pop
ret
and
shr
xchg
xchg
inc
xchg
jg
mov
cwde
inc
enter
ins
mov
scas
jg
xchg
lods
ins
mov
inc
lods
jp
mov
or
and
mov
cmp
add
sub
ror
rol
xor
das
(bad)
dec
int
repnz
popf
scas
call
dec
xlat
push
fidivr
push
or
or
mov
mov
je
push
fstp
sbb
dec
scas
push
inc
fidivr
std
xor
mov
inc
lods
js
jns
imul
xchg
outs
stos
stos
sahf
jle
addr16
pop
(bad)
call
mov
mov
sub
out
mov
and
and
hlt
aas
sbb
mov
pop
aad
jmp
add
or
clc
dec
mov
mov
mov
xor
ds
pop
sbb
push
add
xor
hlt
pop
shl
push
cld
or
add
(bad)
cmp
pop
mov
pop
sbb
daa
in
shr
lds
call
ret
pop
fidiv
push
imul
mov
fstp
xor
inc
call
push
or
pop
sbb
dec
stos
clc
imul
mov
dec
div
idiv
push
mov
push
aad
pop
adc
pop
scas
jl
xlat
inc
fmul
dec
loop
fist
pop
retf
gs
cmp
imul
add
or
pop
shr
hlt
and
jl
or
stc
dec
test
jb
in
aam
out
sbb
out
aas
icebp
push
mov
in
adc
inc
out
mov
xchg
nop
lahf
mov
cmp
imul
rol
repz
je
xchg
ins
mov
retf
xor
xor
loop
cli
mov
stos
jge
and
and
cmp
icebp
or
cmova
xor
ja
and
das
call
lds
or
sbb
shl
push
data16
test
pop
fnsave
out
ss
sbb
mov
fcom
inc
fdivr
ins
lods
out
pop
mov
imul
push
xor
cs
add
loop
movs
mov
push
mov
xchg
imul
mov
and
jecxz
pop
add
add
pop
stos
call
das
dec
jecxz
mov
fisubr
test
push
mov
cmps
mov
lea
cmp
dec
movs
xchg
jl
loop
shr
std
aas
(bad)
and
jb
push
fistp
das
icebp
sub
dec
int3
mov
mov
stos
mov
fisub
inc
retf
xchg
and
or
and
bound
xchg
sahf
dec
fisttp
ss
push
loop
add
les
neg
jle
dec
test
rol
cmp
add
in
sti
aas
in
dec
cmps
jne
sar
shl
call
popa
mov
xchg
xchg
jno
xchg
ins
test
gs
cmc
cs
push
int
(bad)
xor
add
sbb
inc
repz
loop
add
dec
mov
imul
pop
mov
mov
inc
cmp
pop
stos
inc
les
in
add
adc
jmp
jmp
fstp
dec
mov
cld
pop
loope
or
sti
xchg
(bad)
xchg
bound
int
jecxz
xchg
xchg
mov
dec
mov
sub
xor
push
lds
add
pop
jmp
push
add
jecxz
test
stc
sub
loopne
mov
mov
jae
jae
xchg
jge
jns
push
scas
jo
call
repz
enter
mov
scas
out
out
cmp
pop
movs
xchg
int
mov
lahf
jge
clc
sub
(bad)
ds
sub
loopne
inc
dec
into
pop
movs
imul
push
(bad)
pop
mov
push
add
cli
and
pop
mov
cdq
dec
mov
stos
cwde
bound
inc
retf
and
lahf
xchg
sti
xor
push
shl
out
std
daa
in
js
cmp
ror
sub
or
cmps
mov
dec
or
cmp
sti
and
adc
in
cmp
push
(bad)
sub
add
cld
movs
mov
outs
add
mov
int3
xor
xor
xor
mov
push
fbld
adc
ret
add
imul
(bad)
and
adc
push
rcr
dec
(bad)
sub
xor
es
repz
dec
mov
jp
sub
clc
or
mov
aad
out
dec
aam
mov
lds
(bad)
dec
in
pop
(bad)
movs
jge
jne
ja
xchg
cwde
imul
adc
pop
neg
jns
ds
add
repz
sbb
xor
dec
aad
test
sub
and
loopne
imul
inc
scas
jl
push
dec
pop
addr16
pop
fmul
and
and
push
int3
add
pop
out
cmp
dec
scas
jg
and
push
lock
cs
or
in
dec
retf
imul
mov
cwde
test
jge
mov
cmps
cmps
gs
es
call
cmp
aaa
loope
loope
or
push
pop
sub
and
cmp
wrmsr
add
jle
cmp
dec
(bad)
xchg
movs
push
test
rcr
xchg
mov
nop
(bad)
jmp
jp
xchg
cmp
gs
pop
icebp
push
movs
jl
data16
pop
mov
in
cmp
(bad)
sub
in
pop
jecxz
retf
cwde
loop
(bad)
cmp
sub
or
(bad)
jo
call
enter
mov
mov
mov
dec
ret
and
daa
ret
inc
lds
sbb
or
inc
pop
ret
popa
imul
les
adc
mov
mov
xchg
ins
cmps
jge
dec
int3
push
ror
aaa
and
jno
xchg
xchg
push
mov
jb
push
aad
(bad)
(bad)
dec
fstp
xchg
popf
mov
jbe
mov
push
pop
mov
push
push
xchg
ja
jno
mov
jo
dec
mov
xchg
sahf
dec
sar
paddb
in
jg
and
adc
neg
push
cmps
jno
dec
rcr
test
jae
js
add
and
dec
fld
pop
mov
cmp
pop
ficomp
pop
les
push
sti
sub
push
mov
xchg
outs
les
inc
mov
test
mov
scas
js
inc
ficom
in
push
mov
mov
mov
loopne
ret
dec
stos
xchg
data16
jno
bound
lods
sahf
inc
adc
sbb
and
aas
leave
xor
das
push
js
fidiv
jnp
call
sub
mov
jl
add
out
xchg
xchg
ins
mov
stos
xchg
gs
call
xor
adc
adc
cmp
push
retf
movs
mov
call
mov
popf
jae
outs
push
adc
push
jmp
xchg
cwde
dec
cmps
popf
jns
pop
mov
int3
and
retf
pop
fcomp
xchg
sahf
xchg
inc
ret
push
adc
cld
pop
mov
repz
sub
pop
sbb
call
pusha
sbb
div
adc
movs
inc
les
jmp
ins
add
loopne
mov
mov
jecxz
push
loopne
fdivr
test
or
call
lds
(bad)
ss
adc
xor
add
sub
outs
mov
nop
inc
(bad)
dec
xchg
push
int
out
(bad)
push
mov
(bad)
pop
aas
out
shl
rcl
repz
fdiv
out
and
push
idiv
push
jnp
test
or
push
(bad)
push
mov
js
sub
pop
leave
and
pop
mov
les
mov
fisub
mov
call
nop
xor
add
(bad)
adc
jecxz
jmp
or
pop
mov
sbb
sub
adc
mov
stos
jg
jle
scas
imul
out
cwde
imul
dec
(bad)
cmp
test
mov
lea
pushf
fild
imul
add
std
or
ss
push
stos
inc
in
rcl
rcr
xor
and
retf
movs
shl
cld
sahf
inc
test
fwait
arpl
jo
ja
popa
les
leave
call
add
and
pop
cmp
and
or
push
sbb
adc
xor
add
aaa
cli
and
fcomp
dec
rcl
push
sbb
retf
icebp
pop
push
ror
jp
jae
pop
ret
inc
test
fsubr
ret
inc
ficomp
inc
movs
jge
sbb
pop
mov
jnp
jmp
and
daa
jmp
push
loopne
pop
(bad)
das
icebp
cmp
sar
and
pop
sbb
cmp
sub
es
and
and
push
mov
push
sub
xor
sub
fistp
mov
jp
jno
mov
xchg
jo
outs
test
mov
das
or
je
jbe
xchg
outs
mov
xlat
and
clc
add
xor
xor
mov
cmp
cmp
and
dec
fist
sub
xor
sub
pop
mov
xchg
ins
retf
jne
inc
test
cmp
cmp
pop
movs
jp
jle
jp
sub
jmp
push
jmp
jg
inc
mov
jbe
scas
ins
xor
lds
dec
mov
jg
outs
mov
cmp
aas
ret
dec
lock
or
or
xor
inc
fldcw
icebp
pop
mov
mov
inc
fld
and
mov
inc
jmp
cli
pop
push
cmp
pop
retf
push
aam
aam
addr16
mov
sbb
push
mov
pop
lea
dec
mov
scas
je
xchg
bound
xchg
dec
fdivr
adc
repnz
rcl
jno
leave
jle
jge
xchg
lods
xchg
pushf
xchg
mov
fld
stc
cmp
in
sti
ds
movs
imul
cld
and
and
and
xor
sbb
cmp
mov
mov
lds
or
adc
aas
jmp
adc
dec
push
loopne
ror
mov
or
sbb
cmp
sub
aas
push
std
sub
pop
mov
sbb
stos
pushf
imul
jae
lea
data16
out
adc
pop
lds
sub
add
cli
push
and
dec
or
mov
jno
pop
mov
fwait
imul
sbb
add
in
scas
mov
cmp
or
das
shr
std
dec
iret
xor
sub
loopne
in
or
add
cmp
jne
xor
call
shl
aad
data16
xchg
pusha
mov
cmp
pop
fild
pop
stc
cmp
loope
xlat
and
cmc
and
adc
or
dec
scas
mov
daa
or
pop
shl
jmp
mov
cmp
aas
(bad)
dec
in
stc
add
out
aas
sti
sub
shl
iret
aaa
push
jmp
sahf
xchg
pushf
sbb
lahf
dec
leave
sub
push
lock
stos
imul
cmp
jne
nop
arpl
push
movs
xchg
adc
popa
rcl
pop
repz
push
out
xor
cmp
cmp
aaa
out
sbb
pop
sbb
jle
xchg
push
mov
mov
stos
js
dec
scas
popa
fisttp
(bad)
push
mov
sub
inc
fisubr
hlt
ds
push
cmp
cmp
pop
mov
cmps
cwde
jb
add
cmp
xor
mov
stos
bound
dec
mov
lods
inc
out
xor
ss
pop
sub
lock
test
fisub
icebp
sub
xchg
mov
gs
add
shl
or
inc
(bad)
pop
ret
cmp
cmp
xor
sub
sbb
ds
and
or
push
cmp
and
adc
sbb
stc
movnti
mov
fnstsw
sbb
push
fidivr
hlt
add
stc
jmp
sbb
and
popa
(bad)
sub
push
xchg
xchg
bound
ins
and
and
pop
test
xchg
jo
sub
sbb
into
push
mov
bound
sbb
mov
mov
mov
fbld
test
add
xor
push
mov
gs
push
mov
cmp
out
aaa
loope
mov
pop
stos
leave
jbe
fwait
push
outs
mov
stos
call
mov
(bad)
pop
movs
jne
sub
dec
iret
and
xor
xchg
jmp
sbb
and
adc
xchg
jbe
inc
test
fiadd
arpl
dec
lods
pushf
jno
fs
(bad)
inc
cmps
xchg
call
outs
xchg
jmp
fimul
or
dec
mov
inc
cmps
mov
mov
scas
addr16
add
jecxz
or
popa
ret
test
cmp
xor
xor
push
cmp
mov
pop
lods
fs
jg
sub
pop
push
aas
sbb
xor
inc
shl
std
sub
adc
sub
std
and
pop
scas
mov
lods
xchg
mov
ins
(bad)
not
stc
adc
add
lods
xchg
xchg
xchg
outs
mov
pop
les
pop
fstp
mov
mov
fldenv
xchg
cdq
cwde
jne
jae
add
lea
inc
stos
imul
cvtps2pi
or
add
pop
enter
fdiv
std
add
or
mov
nop
pusha
ficom
xchg
test
inc
in
push
movs
data16
and
push
loopne
in
push
rcl
popf
jnp
and
in
add
cmp
test
(bad)
push
sar
push
cmps
arpl
and
dec
int3
push
(bad)
inc
adc
das
iret
push
movs
nop
pushf
inc
les
retf
dec
mov
xchg
imul
xor
and
push
mov
cmp
push
push
or
inc
not
imul
fild
loope
mov
dec
int
add
das
not
add
bswap
dec
xor
sbb
ss
and
in
repnz
push
scas
inc
into
pop
sbb
pop
mov
nop
inc
les
dec
mov
mov
mov
scas
jnp
jo
call
sbb
jecxz
arpl
add
push
fld
ficom
imul
jmp
(bad)
and
push
loope
adc
cmps
ins
shl
sti
xor
loop
push
fadd
sbb
adc
and
aas
push
sti
aas
or
aad
push
inc
leave
inc
mov
sub
cmps
imul
and
inc
shl
inc
retf
push
mov
div
int3
ds
dec
xchg
and
cmp
(bad)
xor
pop
mov
fidivr
jb
fwait
mov
push
mov
inc
ror
stos
(bad)
stos
mov
cmc
cmp
pop
cmps
ins
sar
jno
adc
inc
rol
ror
fmul
jg
js
push
int3
push
pusha
mov
fmul
loopne
retf
or
daa
adc
pop
fistp
jb
mov
mul
idiv
add
nop
mov
mov
inc
retf
add
sub
lsl
idiv
jns
jp
pop
cmc
pop
out
or
sbb
pop
mov
lds
and
cmp
aaa
jecxz
rcl
mul
sbb
gs
nop
mov
cmc
push
scas
dec
leave
imul
add
dec
shl
adc
xlat
jbe
ins
enter
and
cmp
and
inc
fst
outs
ficomp
and
aas
xor
pop
mov
(bad)
xor
pop
cmps
mov
sub
add
dec
mul
xchg
xchg
xchg
dec
fiadd
jmp
cmp
loop
(bad)
pop
mov
(bad)
fisttp
outs
mov
mov
into
push
scas
dec
stos
outs
mov
cld
pop
test
outs
stos
nop
popf
mov
into
push
mov
jae
mov
jle
push
adc
dec
fistp
mov
stc
cmp
push
adc
push
rol
add
sbb
push
sbb
or
pop
scas
add
(bad)
lahf
mov
jbe
les
gs
rcl
jns
popf
imul
test
sbb
inc
test
stos
sahf
pusha
(bad)
xor
mov
pushf
(bad)
(bad)
fidivr
out
(bad)
push
iret
dec
fstp
xor
pop
fidiv
int
(bad)
pop
pminsw
cld
cmp
out
dec
shl
in
scas
(bad)
dec
fmul
adc
hlt
es
pop
leave
sub
xor
cmp
cmp
call
inc
fnstsw
lds
jmp
loop
loop
popa
shl
rol
adc
sbb
push
xor
sbb
out
ret
and
push
mov
mov
lds
xchg
test
sub
adc
jl
jbe
pop
mov
sbb
sbb
std
and
xor
adc
jno
mov
mov
mov
les
test
dec
scas
mov
daa
in
jmp
pop
fiadd
fs
lods
push
pushf
xchg
mov
je
mov
mov
shl
test
mov
test
les
adc
dec
enter
mov
xchg
std
add
pop
into
xor
cmp
cwde
lahf
dec
mov
pop
clc
push
fmul
dec
aam
add
adc
(bad)
or
or
or
push
xor
inc
aam
test
arpl
pop
mov
pushf
leave
and
cmp
sub
jb
pop
shl
(bad)
jno
(bad)
lods
lods
imul
ret
aas
adc
cmp
cmp
pop
fstp
xchg
xchg
jg
push
daa
cmp
push
sub
call
lahf
arpl
or
inc
fld
ret
and
and
sti
or
add
sub
and
xor
push
loop
adc
push
mov
es
out
stos
cwde
xchg
push
pop
mov
add
sbb
ss
add
push
daa
push
clc
adc
and
xor
push
stos
dec
mov
leave
push
scas
bound
inc
shl
push
jge
das
loope
mov
mov
pusha
leave
push
out
xor
xor
es
(bad)
fstp
mov
out
pop
scas
arpl
jle
inc
int3
push
cmps
xchg
jp
sub
das
cli
cmp
stc
xor
sub
push
shl
push
fimul
loope
mov
push
add
push
hlt
and
pop
fstp
push
mov
(bad)
mov
mov
ins
add
xchg
push
add
pop
aas
and
das
outs
adc
push
push
jb
jne
lods
aam
mov
stos
push
jne
mov
cld
xchg
stc
jne
jl
ret
nop
fst
sti
mov
arpl
push
iret
xchg
dec
add
and
pop
add
inc
or
push
call
cmp
xor
and
push
or
sub
out
inc
sub
dec
or
cmp
cld
pushf
out
fcom
imul
adc
icebp
call
xor
jl
fs
push
loopne
mov
xchg
movs
leave
xchg
mov
cs
cmp
bound
inc
in
movs
jle
or
lds
icebp
cdq
imul
mov
scas
rcl
js
mov
call
imul
mov
scas
retf
and
jmp
pminsw
pusha
sbb
fwait
jecxz
ret
ret
fwait
ror
pop
and
repz
(bad)
out
fimul
dec
sahf
sti
mov
sub
inc
aas
pop
mov
and
push
inc
sub
es
cmp
sbb
mov
pop
pop
cmp
jmp
sub
inc
loop
icebp
cwde
repz
ins
aas
push
or
inc
and
mov
mov
sbb
jno
outs
sbb
jae
mov
xchg
mov
shr
mov
ficomp
cmp
xchg
dec
or
add
clc
mov
es
cmp
ja
pop
out
shl
call
jp
pop
in
lds
and
mov
stos
out
mov
jne
inc
sar
xchg
fidivr
add
pop
aaa
aaa
daa
dec
push
jno
sbb
inc
adc
ja
push
aas
jns
and
or
push
loopne
jecxz
call
inc
adc
clc
stos
fist
lock
dec
sub
sub
dec
das
inc
push
imul
inc
sbb
mov
mov
add
inc
cmp
pop
add
lds
out
test
xchg
rcr
push
dec
es
add
fisubr
pop
add
and
add
push
sub
dec
or
fild
xor
cmps
in
clc
test
ret
test
mov
inc
(bad)
test
mov
or
ret
jle
sub
sub
sbb
inc
sub
push
call
inc
jecxz
sub
pop
stc
call
push
sub
dec
add
inc
or
ins
and
xchg
test
adc
pop
push
es
xor
sub
loopne
cmp
or
(bad)
push
xor
add
inc
sbb
shl
ins
out
xor
lahf
cdq
xchg
pop
fbstp
add
sub
ja
add
inc
and
pusha
sub
std
popa
mov
jo
xchg
push
test
dec
pop
dec
(bad)
xchg
aad
mov
int3
mov
stos
enter
sub
mov
pop
sbb
xor
dec
xor
adc
jnp
dec
es
dec
and
and
push
cmp
jle
pop
mov
xor
js
movnti
or
mov
jns
pop
or
inc
ss
mov
cmp
pop
sbb
jnp
xchg
sar
pop
imul
xchg
xor
dec
mov
pop
sub
es
nop
lds
adc
ja
(bad)
mov
push
(bad)
xchg
jmp
jnp
and
dec
rol
pushf
out
ret
lahf
sti
mov
push
cmp
cwde
xchg
mov
mov
into
xor
xor
sbb
stos
push
sub
sub
mov
mov
dec
cmp
jns
jne
ja
popf
mov
repnz
add
push
or
inc
mov
xchg
inc
adc
sub
aas
and
push
or
imul
xchg
bound
inc
ss
shr
data16
push
(bad)
lds
pushf
test
mov
inc
enter
or
and
adc
push
add
mov
xchg
(bad)
mov
mov
data16
push
adc
push
pusha
jecxz
shl
outs
add
and
adc
inc
xchg
mov
cli
sahf
or
mov
sub
xor
scas
pop
push
add
push
das
daa
dec
fnstcw
fnstsw
xor
ja
cmps
inc
mov
loopne
shl
add
jno
cmp
mov
cwde
mov
fstp
outs
adc
call
daa
dec
es
push
pop
mov
out
add
xchg
in
push
sub
and
arpl
inc
or
and
or
push
or
pop
cld
mov
into
pusha
push
gs
adc
sti
sbb
push
pop
dec
adc
outs
in
inc
adc
push
out
mov
xchg
mov
neg
stc
mov
mov
mov
mov
popf
frstor
repz
in
sub
in
mov
sub
out
cwde
test
or
push
xor
add
out
imul
pop
mov
or
aad
ror
test
add
mov
gs
cmps
cld
mov
xchg
pop
jmp
std
pusha
xor
ficomp
inc
xor
xchg
cld
mov
mov
aam
push
pop
sbb
cmp
dec
sub
jmp
and
or
ja
sub
dec
test
sbb
scas
cli
xor
and
pop
loope
pushf
cli
test
into
mov
mov
or
jb
and
dec
sbb
push
(bad)
jno
fs
adc
xchg
lahf
retf
lahf
bound
inc
add
and
inc
(bad)
cwde
ror
mov
fstp
into
(bad)
pop
xor
out
inc
or
jnp
inc
xor
and
push
test
aad
sub
rcr
mov
jge
push
and
ins
pop
pop
dec
pop
cmp
cmp
pusha
loop
repz
daa
ret
add
shr
pusha
add
add
and
or
jmp
cmc
mov
xchg
dec
std
test
scas
xchg
mov
mov
sub
xchg
popa
adc
sbb
dec
sub
icebp
call
(bad)
mov
mov
adc
loopne
adc
ins
add
ss
push
icebp
mov
mov
dec
fst
lods
shl
adc
mov
mov
sbb
xchg
lds
(bad)
mov
or
mov
cwde
mov
neg
mov
retf
adc
lea
out
mov
cmps
mov
cld
pop
xor
cmp
adc
mov
scas
idiv
pop
pop
gs
inc
arpl
inc
and
sub
push
sbb
dec
rcl
mov
adc
imul
push
pop
in
repnz
icebp
pushf
in
movs
fwait
loopne
loope
fcomp
inc
loope
into
mov
xchg
fdivr
inc
sub
pop
mov
les
retf
mov
xchg
fist
adc
adc
dec
sub
jp
pusha
xor
pop
adc
dec
stos
int
jmp
aas
push
adc
push
adc
pop
adc
jb
jnp
mov
inc
in
jmp
adc
adc
in
aam
fmul
jno
stos
mov
sbb
div
jbe
pop
ror
mov
retf
mov
inc
and
jno
jl
mov
pop
js
sub
adc
shl
push
push
push
fnstsw
arpl
sub
mov
xor
std
jbe
push
loopne
aad
adc
ret
sahf
cld
or
data16
div
leave
popa
std
rcr
xlat
scas
cmp
dec
dec
sub
pop
cmp
add
repnz
test
add
pop
sbb
push
add
in
dec
aas
jge
cmp
fadd
mov
test
cwde
pop
clc
sub
aad
in
mov
or
jp
jge
mov
mov
xchg
movs
test
pushf
(bad)
jns
pop
add
ss
xor
repz
and
jmp
in
(bad)
hlt
inc
adc
jg
pusha
or
push
aam
rep
xchg
xchg
mov
loope
loopne
sbb
outs
pop
mov
xchg
fisubr
jns
push
dec
cmp
xor
clc
shl
sbb
xor
jae
inc
push
dec
ror
out
mov
ds
loop
pop
jns
js
or
cli
nop
rol
dec
cmp
fdivr
in
(bad)
jg
mov
jmp
les
test
ror
dec
sub
inc
test
sub
popf
aam
jl
scas
loopne
(bad)
mov
pusha
or
das
and
xor
pop
or
jb
and
jge
jge
xor
outs
hlt
fist
scas
jge
nop
loopne
(bad)
xor
dec
loopne
jmp
icebp
cmp
gs
daa
add
cdq
hlt
call
scas
mov
or
adc
mov
push
xlat
mov
mov
out
xchg
(bad)
xor
jg
js
pop
push
sub
pop
pop
inc
push
retf
cwde
enter
stos
rol
jae
pop
sbb
adc
and
dec
in
test
mov
mov
xor
nop
cli
lahf
mov
imul
pusha
sbb
dec
cmp
jne
test
sub
js
add
fistp
jle
cs
(bad)
mov
cli
sahf
xrelease
std
xchg
retf
jae
popa
cmp
adc
or
mov
arpl
or
outs
push
pop
mov
in
xchg
xchg
mov
mov
jge
jae
rcl
sub
ins
and
add
push
and
outs
xor
out
test
mov
stc
xchg
cld
inc
mov
(bad)
in
push
cmp
enter
xor
adc
xor
js
in
inc
sub
inc
cmp
sbb
cmp
push
les
ins
sbb
inc
adc
mov
or
mov
dec
ds
push
sub
test
push
cmp
push
cmp
jg
inc
pop
bound
js
bound
inc
cmps
mov
xor
mov
pop
inc
cs
add
js
lock
jge
inc
loop
sti
cdq
jecxz
pop
mov
jecxz
repnz
lods
inc
fcomp
xchg
loope
popf
pop
mov
sti
cdq
loope
add
mov
int
les
dec
loop
movs
dec
or
cs
and
in
div
rcl
sbb
daa
jae
sub
lods
in
leave
mov
rcr
jmp
pop
pop
cmp
push
repz
rcr
pop
xor
push
pop
inc
mov
inc
pop
push
mov
ret
shl
dec
add
test
jle
inc
or
push
ficomp
pushf
into
mov
mov
push
jne
xchg
cli
xchg
in
mov
fwait
std
cs
jg
cmp
sub
jg
or
dec
or
sub
dec
and
or
inc
fidivr
jnp
push
mov
int
std
and
sub
and
and
and
aas
pop
ret
adc
xor
xchg
sbb
call
or
xor
push
std
xchg
cli
dec
fcom
pop
or
add
sub
and
jbe
gs
cmp
jecxz
stc
popf
movs
jno
ins
xor
jmp
stc
stos
clc
jnp
add
push
dec
stc
push
(bad)
in
xchg
rcl
aam
adc
jae
and
cs
inc
les
in
mov
pushf
dec
or
int3
pushf
arpl
pusha
sbb
sar
bound
pop
xor
dec
cmovbe
pop
add
cmp
pop
sbb
dec
(bad)
pop
aad
repz
sahf
rol
mov
mov
or
xchg
mov
shl
xor
add
je
push
cmp
sub
pop
xor
pop
add
cs
aaa
push
adc
ret
pop
cmp
and
pop
sbb
mov
mov
mov
push
inc
dec
xor
jnp
je
adc
and
sbb
pop
xor
sbb
push
test
push
xor
push
in
sbb
pop
adc
xchg
(bad)
jmp
jmp
arpl
cmc
inc
xor
int
clc
sub
jge
sbb
cmps
dec
sbb
cmp
pop
pop
push
ss
mov
cmps
int
(bad)
mov
cwde
xchg
mov
mov
inc
adc
out
pop
daa
inc
or
sub
and
xor
les
out
lods
xlat
bound
cwde
inc
(bad)
mov
pop
pop
das
dec
stos
mov
xchg
mov
outs
push
add
jns
(bad)
sti
mov
frstor
icebp
mov
fwait
ret
pop
cmps
out
add
loop
les
out
push
jns
dec
push
bound
xor
sub
test
pop
adc
stos
leave
mov
pop
aas
dec
and
aas
je
outs
out
ins
jge
pop
push
xor
dec
sbb
cs
loope
rcl
mov
dec
and
mov
cwde
rol
cmps
sar
jmp
mov
push
loope
mov
and
add
inc
mov
stos
out
out
ret
cmp
dec
sub
jge
pop
and
arpl
dec
adc
xchg
mov
inc
es
xchg
cli
cwde
sti
xchg
out
enter
int3
scas
in
mov
hlt
cmps
ror
das
add
call
cmp
aas
retf
push
xor
inc
pop
cld
pop
or
sub
and
sub
push
add
dec
inc
xor
and
in
pop
jne
js
test
jecxz
lock
cdq
fisub
cs
and
cmp
and
dec
push
jmp
and
daa
aas
or
jge
xchg
jb
test
int3
xchg
mov
fs
fstp
clc
xchg
mov
pusha
xor
sub
mov
xchg
div
test
into
mov
mov
xchg
fmul
imul
sbb
jne
movs
(bad)
mov
repz
fisttp
sub
inc
ds
lds
push
or
in
add
fisubr
push
add
pop
lods
mov
sbb
jne
mov
mov
and
icebp
mov
scas
xlat
pop
fmul
inc
or
ss
cmps
(bad)
mov
lds
dec
fist
add
pop
add
add
dec
mov
cld
jnp
outs
or
adc
inc
adc
outs
and
fwait
jge
pop
sub
leave
imul
mov
dec
or
xchg
into
mov
inc
add
push
aas
pop
add
ja
in
inc
hlt
xchg
fst
fstp
lods
into
mov
in
fs
mov
or
out
outs
xor
pop
add
ss
dec
jmp
ss
adc
jnp
hlt
call
cmps
dec
jmp
int
ficomp
mov
adc
cmp
clc
xchg
in
dec
mov
inc
cmps
out
mov
not
call
cmp
xor
out
shl
call
adc
movs
loop
loope
neg
stc
aaa
push
inc
add
cmp
dec
popa
xor
pop
imul
sti
cwde
mov
sti
jge
sbb
cdq
shl
dec
cmp
push
std
cmp
and
sti
sahf
fiadd
leave
mov
call
jmp
(bad)
jecxz
and
and
cmp
and
dec
(bad)
jp
sbb
(bad)
out
outs
ret
mov
call
cmp
lock
in
stos
push
lock
sahf
dec
(bad)
scas
shr
xchg
ret
mov
stc
lea
int3
pushf
rol
mov
sbb
lds
pushf
iret
popf
out
sub
(bad)
cmc
popf
mov
sbb
xchg
retf
mov
push
sbb
and
jnp
(bad)
xchg
movs
test
retf
popf
fcom
fadd
jnp
jge
dec
icebp
push
pop
dec
loopne
daa
add
push
ret
retf
inc
and
push
jmp
in
scas
cld
rol
pop
pop
add
add
ins
add
push
xor
inc
and
ds
adc
xor
inc
aas
or
arpl
ds
xor
dec
sbb
addr16
iret
(bad)
fcom
stc
call
aad
dec
sub
cmp
inc
push
push
add
pop
daa
inc
add
mov
jno
dec
ds
arpl
bound
and
inc
adc
icebp
popf
inc
out
icebp
sahf
ret
pop
mov
scas
repnz
mov
shr
les
cli
test
pop
call
mov
daa
sub
sub
mov
inc
push
pop
or
test
xchg
les
fs
cmp
push
xor
add
mov
dec
nop
int3
(bad)
(bad)
cdq
fild
std
mov
and
sahf
cli
mov
xchg
clc
cdq
shr
add
js
jge
je
adc
fistp
stos
aam
or
pop
adc
sub
pop
or
fistp
sub
sub
dec
sti
pusha
loop
mov
mov
fnstcw
(bad)
pusha
cmp
dec
add
jno
(bad)
cld
mov
pop
es
push
jns
dec
or
xor
aaa
adc
nop
std
aaa
inc
adc
inc
jmp
mov
mov
lds
xchg
les
iret
mov
cwde
xchg
bound
pusha
sbb
lods
int
dec
or
cmp
(bad)
cmps
fidivr
sbb
and
add
cmp
lahf
and
pop
cmp
cmp
sahf
std
mov
push
dec
das
dec
xor
outs
add
mov
jl
pop
or
and
mov
add
ja
pop
fist
mov
mov
jp
and
mov
rol
and
rcl
ficomp
inc
pop
or
ins
mov
out
xchg
jmp
fwait
xchg
push
cmp
xchg
mov
stos
(bad)
call
fst
cmps
retf
jmp
test
test
mov
aad
int3
lods
fdivr
aas
jbe
pop
loope
gs
lock
xchg
stc
xchg
inc
jae
imul
and
aad
ret
mov
xchg
sub
shr
mov
movs
xchg
hlt
fwait
sub
jo
sub
xchg
in
pusha
or
outs
sub
add
pusha
sbb
(bad)
popf
out
fiadd
stc
mov
retf
cmps
ficom
sub
adc
push
loop
rcr
int
dec
and
test
jp
ins
add
lods
jnp
test
pusha
jmp
repnz
mov
(bad)
stos
jge
xchg
dec
sub
push
push
shr
cmp
pop
mov
sti
call
fdivr
mov
cmp
gs
inc
or
and
ss
push
arpl
xchg
dec
es
push
call
fdivr
xor
pop
lea
or
inc
or
mov
ret
and
xchg
xchg
fstp
lds
push
pop
ss
cs
inc
and
js
lock
add
pop
pop
push
or
pop
jp
mov
(bad)
movs
fnstcw
add
(bad)
lods
out
(bad)
aad
dec
jle
pop
sbb
popa
ror
out
hlt
xchg
cli
mov
dec
or
mov
out
mov
or
out
or
cmp
fistp
pop
cmp
arpl
bound
push
mov
push
pop
and
jae
inc
sub
ror
dec
inc
adc
dec
das
push
aam
(bad)
mov
mov
sbb
inc
aad
sahf
fcom
xor
and
jl
mov
dec
nop
clc
mov
bound
inc
std
jecxz
sti
xor
jecxz
(bad)
sahf
int3
mov
add
std
cwde
fsubr
xchg
out
mov
shl
cli
sub
bound
push
cmp
sbb
dec
loope
hlt
scas
inc
inc
or
dec
sbb
push
fiadd
push
add
adc
ja
dec
jge
dec
and
push
push
popf
stos
and
xchg
mov
aas
iretw
cld
dec
push
mov
xchg
mov
(bad)
mov
(bad)
repz
cmp
sub
xor
sub
lods
xor
dec
xchg
nop
out
xchg
loopne
test
mov
or
dec
add
xor
clc
fmulp
pop
repz
sti
push
dec
push
jae
mov
or
or
mov
sub
push
ret
xchg
dec
and
daa
out
or
mov
mov
iret
add
popf
xor
and
push
(bad)
jbe
repnz
dec
imul
shl
imul
sbb
pop
mov
mov
fs
fisubr
xchg
movs
lahf
xchg
shr
arpl
pop
stos
(bad)
scas
sti
cmp
ret
push
mov
inc
dec
mov
pusha
ror
jbe
jle
in
aas
push
add
(bad)
fs
inc
in
arpl
jns
dec
test
data16
dec
pusha
in
lock
or
jecxz
jmp
aam
sbb
mov
call
lds
jbe
mov
das
popf
mov
and
xchg
or
xchg
sbb
mov
push
fscale
cmps
jp
add
arpl
mov
(bad)
test
dec
sahf
sbb
int3
adc
movs
push
mov
imul
outs
xor
cmp
test
pop
xor
popa
repz
jo
add
leave
out
adc
fsubr
sub
adc
lahf
fwait
dec
jl
inc
(bad)
sbb
cmps
mov
loopne
push
xor
stos
adc
hlt
push
fwait
loop
ins
(bad)
std
loope
xor
pop
mov
pop
aaa
test
imul
fnstenv
xchg
sub
sub
mov
ret
out
into
stc
data16
cmp
mov
sbb
and
ins
mov
fist
jmp
cld
ja
outs
pushf
xlat
cmps
xor
cmps
jmp
test
stos
cmp
fwait
xchg
cli
mov
xchg
xor
cdq
loop
nop
in
adc
cmp
fdiv
sub
imul
mov
in
push
sbb
jno
loop
pop
mov
movs
(bad)
sub
mov
fwait
mov
add
loopne
and
inc
aaa
jo
sbb
pop
inc
jl
jl
xor
ss
dec
(bad)
sar
out
div
outs
xchg
pop
pop
xor
or
(bad)
stos
inc
cmps
cmp
data16
aad
leave
or
dec
add
mov
aad
cli
xchg
push
sub
add
daa
push
scas
lods
repnz
add
movs
mov
sbb
ror
cmc
jbe
sahf
add
mov
les
retf
sbb
test
mov
and
sub
call
sbb
aaa
pop
jb
sbb
fstp
jl
ins
push
sub
imul
jne
aaa
rol
(bad)
and
sub
dec
xor
jp
xor
mov
pusha
dec
or
jbe
lock
dec
retf
adc
mov
inc
iret
adc
fnstenv
frstor
fcomip
fiadd
push
dec
imul
outs
and
scas
(bad)
pop
pop
mov
repnz
arpl
mov
das
mov
sbb
movs
push
aam
jle
adc
lsl
cmp
js
in
sahf
out
ret
mov
mov
mov
adc
fisttp
add
xor
outs
mov
lods
mov
ds
xchg
push
add
jmp
js
outs
int3
(bad)
jmp
mov
xlat
clc
inc
stc
add
adc
cwde
jnp
les
push
inc
rcr
addr16
arpl
clc
(bad)
mov
cmps
xor
hlt
and
mov
and
cmp
or
mov
icebp
rcl
lahf
dec
jecxz
jnp
ss
nop
cmp
popf
leave
sub
adc
mov
sub
xchg
repz
mov
mov
xchg
aaa
jne
push
jecxz
jnp
mov
mov
sbb
test
fbstp
xor
das
push
arpl
cld
xlat
lahf
add
mov
dec
or
leave
pusha
inc
fcmovbe
(bad)
jmp
in
fstsw
push
fwait
dec
or
inc
retf
int
push
mov
pushf
sub
mov
sbb
call
mov
xor
mul
xlat
fs
fldenv
sub
pop
push
nop
push
sub
pusha
test
xchg
xor
sbb
popa
je
das
mov
ins
ror
jne
out
nop
in
scas
imul
div
movs
out
sub
add
sub
jp
mov
aad
fcom
mov
fsub
pop
ror
mov
or
cmp
je
aam
gs
xchg
(bad)
fcomp
pop
iret
mov
push
jns
int3
mov
sahf
mov
lahf
iret
mov
std
mov
sbb
push
(bad)
aas
mov
ins
xor
outs
push
leave
mov
ins
jno
pop
mov
push
jmp
cmp
cwde
sub
jp
popa
dec
xchg
fwait
xchg
pop
fmulp
sbb
mov
xchg
adc
dec
arpl
jns
cwde
sahf
fcom
jl
shl
mov
out
cmp
cmc
push
cmp
sub
sub
in
mov
add
dec
(bad)
rol
and
mov
pusha
dec
cmc
fiadd
lods
pop
push
das
dec
arpl
and
inc
outs
mov
pop
jle
add
cmp
jle
cmps
pusha
test
cwde
add
xor
fpatan
daa
jnp
or
pop
mov
sbb
pop
sti
push
dec
and
out
push
cmc
lds
mov
imul
aam
out
jbe
adc
mov
mov
sbb
into
int
mov
ret
adc
push
pop
push
int
out
and
xor
(bad)
(bad)
clc
cmps
sbb
loope
out
movs
inc
pop
fsub
dec
xlat
je
jmp
int
pop
(bad)
stc
rcr
aas
in
stos
out
arpl
ins
xor
hlt
jbe
sbb
repz
add
popf
mov
sbb
push
out
dec
sahf
and
xlat
jo
bound
cmp
push
mov
lods
aad
mov
(bad)
mov
dec
cmps
mov
pop
dec
in
dec
lock
shr
pusha
fdivp
pop
mov
ret
aam
xor
push
in
sub
mov
cmp
dec
adc
or
lods
xor
mov
pop
ins
or
imul
push
add
fadd
(bad)
mov
iret
adc
or
cmp
popa
mov
ins
jnp
and
cmp
in
dec
fcomp
nop
xchg
pop
add
outs
fist
popa
stos
cmps
icebp
mov
shl
xor
outs
inc
dec
popf
ins
jge
pop
in
adc
cmp
lahf
out
pop
jge
dec
mov
mov
cmovne
dec
add
sbb
ret
push
or
add
xor
inc
lea
gs
hlt
mov
sbb
push
test
adc
sbb
xor
add
arpl
xchg
cmps
retf
mov
adc
arpl
nop
dec
sti
outs
idiv
mov
jl
popf
stos
sahf
ror
pop
or
sbb
test
mov
sub
inc
and
mov
jmp
mov
mov
mov
aam
pop
jnp
retf
sbb
rol
mov
ins
inc
xchg
fadd
push
test
cld
inc
ds
pop
mov
outs
mov
cwde
xchg
js
mov
mov
inc
jmp
push
xchg
(bad)
jno
daa
xchg
jae
adc
pop
sti
mov
cmp
outs
lods
shl
jecxz
out
sub
daa
loopne
mov
xor
jle
mov
movhps
shl
inc
pop
add
int3
in
(bad)
fnstcw
jl
sub
iret
and
cs
push
push
cdq
jnp
cmps
cmp
xor
adc
cmp
adc
inc
cmp
call
movs
or
(bad)
mov
xchg
ret
xor
leave
mov
es
and
imul
int3
mov
sbb
inc
jnp
xchg
ret
pop
mov
arpl
xchg
hlt
xchg
add
loope
not
(bad)
mov
loopne
mov
push
inc
mov
push
dec
pop
mov
mov
xor
iret
xchg
iret
xchg
xchg
(bad)
fmul
mov
push
mov
jbe
(bad)
and
xchg
pop
popa
mov
xor
pop
loop
pushf
shl
std
stos
mov
pop
cmp
push
inc
inc
pop
and
push
xlat
jbe
pushf
xchg
jno
cmps
ret
rcr
jg
adc
inc
inc
push
(bad)
cmp
rep
ja
pop
hlt
int3
aaa
dec
stos
mov
retf
inc
or
retf
or
mov
cmp
xor
jnp
retf
aas
xchg
ins
sub
xchg
inc
mov
stos
mov
cmc
div
dec
xor
cmps
enter
repz
ins
push
mov
lods
js
xchg
lahf
in
sub
lock
pop
dec
stos
jg
dec
loop
aam
ins
push
mov
in
or
mov
mov
push
dec
xor
retf
sub
scas
mov
enter
jecxz
add
lds
add
jnp
or
loopne
push
fdivr
xor
or
test
mov
outs
inc
aas
sub
lea
fnstenv
call
xchg
and
div
mov
jae
lea
aad
in
out
outs
and
sub
pusha
push
mov
imul
push
adc
les
jl
je
stos
mov
jns
or
dec
add
push
out
fst
(bad)
leave
nop
pop
pop
add
sbb
clc
fsub
dec
dec
add
xchg
xchg
push
clc
int3
sub
push
dec
fdiv
xor
xchg
pop
outs
enter
inc
adc
repz
in
pusha
jnp
aam
neg
popf
jecxz
xchg
xchg
(bad)
shl
or
int
add
(bad)
arpl
outs
xchg
jb
(bad)
xlat
push
mov
mov
push
or
or
enter
pop
sbb
dec
retf
shl
jg
icebp
fs
pop
jnp
ins
ss
and
ins
jp
xchg
out
jge
dec
xchg
mov
sub
adc
xor
and
inc
xchg
int3
ins
js
in
shl
icebp
out
ja
inc
mov
dec
xor
xchg
push
sti
(bad)
cmp
xchg
add
dec
pop
jns
outs
cmp
ficom
inc
retf
(bad)
cmps
pop
jns
(bad)
fadd
adc
sbb
push
pop
retf
mov
mov
sub
int
test
fs
lock
pop
mov
push
aad
inc
out
es
push
pop
jge
pop
adc
stc
lods
leave
aad
dec
mov
shl
and
sub
mov
or
mov
jmp
cmp
retf
shl
dec
iret
push
inc
sar
pop
push
mov
xchg
lods
jmp
xchg
imul
xor
daa
inc
(bad)
cmp
je
adc
gs
(bad)
(bad)
push
lds
aaa
pop
fsub
(bad)
sbb
ins
add
stc
adc
xchg
jo
and
add
push
mov
out
jne
retf
je
jnp
out
int3
js
das
popf
scas
sahf
shl
sbb
popa
adc
(bad)
hlt
adc
pop
sub
in
push
mov
lods
retf
ins
dec
call
jnp
cmps
jmp
je
push
lock
xchg
mov
ja
les
gs
mov
mov
add
jbe
clc
call
(bad)
adc
das
mov
pop
mov
adc
mov
aad
outs
or
push
rcr
mov
jne
jns
js
or
or
or
add
nop
sub
pop
imul
xor
jmp
imul
(bad)
and
cmps
mov
aas
cdq
mov
xlat
inc
dec
data16
mov
push
push
iret
and
xchg
dec
inc
add
movs
xchg
push
aad
dec
addr16
ss
jno
push
and
cmp
imul
enter
enter
imul
push
push
mov
sbb
and
call
(bad)
mov
and
cmp
and
jne
sbb
mov
ins
cdq
fdivr
(bad)
cmp
and
mov
iret
lods
or
shl
push
mov
pop
ror
mov
in
ret
push
sub
xor
jp
or
or
push
mov
shl
arpl
xor
push
jecxz
mov
fld
xor
cmp
bound
dec
jg
mov
push
xchg
out
mov
xchg
jecxz
in
enter
jmp
sahf
mov
mov
inc
xchg
shr
mov
std
scas
stos
mov
mov
stos
das
inc
mov
outs
mov
mov
pop
out
or
dec
xchg
test
fdiv
inc
pusha
jns
stos
pop
or
jmp
outs
iret
loop
stos
inc
jno
into
in
pop
idiv
mov
add
or
mov
sbb
cs
nop
rol
iret
mul
fcomp
mov
jb
sub
(bad)
inc
cli
cmps
std
mov
jae
(bad)
stos
pop
test
mov
loopne
shl
dec
push
sti
and
xchg
shr
cli
or
rcl
ins
pop
aaa
and
inc
ds
xor
push
fnsave
jmp
sahf
pop
mov
movs
lock
adc
pop
xor
dec
fwait
enter
outs
xchg
ja
dec
icebp
cmp
popf
in
cs
aam
(bad)
dec
pop
pusha
lds
pop
shr
ds
in
inc
and
adc
popa
repnz
lods
sar
mov
mov
test
loope
and
cs
mov
mov
jae
lods
pushf
and
mov
sub
in
mov
cmps
lea
pusha
pop
xor
fdivr
or
jg
pop
(bad)
idiv
movs
stos
xchg
cmp
pop
out
jae
mov
rcr
add
xchg
mov
or
mov
in
mov
sar
ror
in
loope
outs
ficom
(bad)
out
mov
mov
add
movs
mov
aas
push
gs
out
movs
fld
cmps
sti
test
out
popa
mov
pop
cli
mov
or
fdivr
xor
scas
xor
push
retf
cs
fisttp
jmp
mov
pop
adc
shr
xor
jo
cmp
xor
imul
adc
inc
add
add
mov
movs
out
xor
dec
sub
and
push
outs
fdiv
dec
movs
xchg
inc
cmp
scas
cmp
pop
push
scas
(bad)
daa
inc
mov
push
push
rcl
push
push
popa
inc
add
or
ins
mov
push
or
cmp
shl
mov
xchg
mov
stos
add
sti
mov
xchg
test
add
fcomi
sbb
imul
mov
loope
pop
pop
in
mov
xchg
push
(bad)
or
shl
stc
ss
add
cmp
aad
push
sub
push
es
mov
aas
push
xchg
xchg
inc
xchg
cmp
(bad)
mov
and
push
or
sub
int3
retf
es
add
xor
icebp
pop
add
test
fistp
dec
xor
fdivp
into
sub
add
adc
rcr
call
inc
pusha
in
dec
stc
push
xor
(bad)
xor
dec
sub
push
jnp
mov
cs
fs
hlt
cs
es
push
fs
jmp
ss
imul
inc
cmp
fimul
in
test
cmp
pop
aam
or
pop
je
push
or
and
mov
lea
jmp
pusha
mov
cmp
mov
inc
and
xor
mov
movs
mov
ins
add
cli
mov
retf
sub
(bad)
xor
push
sub
ins
push
add
pop
enter
and
test
les
jae
push
lods
imul
xchg
addr16
adc
retf
dec
(bad)
fisttp
iret
scas
daa
hlt
xchg
cmc
sbb
xchg
pop
cmps
in
(bad)
jl
aad
ss
mov
cmp
repnz
or
mov
inc
add
dec
pop
jmp
jnp
mov
sar
icebp
fmul
sbb
lahf
cmp
arpl
mov
mov
dec
dec
jo
mov
jmp
lods
retf
adc
pop
enter
iret
rcr
inc
adc
cdq
pop
hlt
xchg
leave
adc
cmps
clc
test
jl
or
nop
hlt
mov
jns
ret
nop
sub
cs
and
and
(bad)
movs
pop
inc
pop
outs
fst
sbb
mov
rcl
add
int
ins
pushf
in
jl
std
xchg
inc
inc
xchg
push
xor
mov
sti
xor
pop
xchg
stos
or
jno
(bad)
and
repz
mov
cmps
or
sti
scas
fwait
mov
fsub
daa
add
leave
or
cli
xor
add
sbb
xchg
int
aad
adc
imul
mov
mov
(bad)
ja
psrlq
xchg
and
mov
pop
ficom
xor
push
fstp
add
fcmovbe
sbb
xchg
add
push
sti
dec
scas
ret
outs
xchg
daa
xchg
ins
cmp
mov
cli
call
pop
jmp
and
retf
xchg
test
idiv
leave
sbb
jg
jns
and
xor
and
fld1
inc
or
xchg
(bad)
push
or
(bad)
das
jmp
xchg
sub
icebp
arpl
cs
sub
adc
ins
out
cmp
ja
mov
stos
xor
add
sbb
or
lea
test
add
jb
cs
aas
cmc
xlat
jb
jg
mov
int
sub
dec
cwde
ret
mov
mov
pusha
inc
mov
and
xlat
mov
int3
pop
clc
fs
or
jle
push
fbld
push
jmp
aad
adc
xor
les
pop
jne
outs
dec
and
aam
std
push
in
sbb
mov
dec
in
bound
sbb
cmp
cmps
imul
ins
stc
jb
lock
cmc
jnp
imul
xor
dec
cs
rcl
inc
cmp
pop
cwde
inc
data16
sar
arpl
xchg
xchg
mov
out
fild
aam
sub
and
cmp
bt
dec
dec
ret
cld
repnz
pop
ins
xchg
ret
add
retf
fiadd
add
add
dec
loop
mov
sbb
sub
sub
adc
bnd
sub
ret
adc
(bad)
mov
in
pop
inc
jo
retf
hlt
sub
imul
and
jl
add
jns
and
or
cmps
push
loop
out
push
div
push
mov
add
xor
lods
loopne
stos
sbb
daa
ret
jb
sub
dec
inc
sub
adc
retf
push
mov
dec
mov
mov
xor
test
std
inc
dec
push
jecxz
cwde
mov
fs
scas
xor
call
aaa
fsub
pop
sub
(bad)
hlt
inc
and
(bad)
jnp
jbe
jle
test
repnz
lahf
mov
push
repnz
in
and
test
adc
mov
and
rcl
jp
bound
enter
test
sub
pop
inc
push
jg
adc
mov
js
push
cmp
mov
aas
xchg
aam
std
stos
pminsw
in
pop
test
test
or
imul
in
sbb
cmps
or
inc
pop
arpl
xchg
jb
nop
aaa
imul
dec
cmp
xor
das
xchg
xchg
inc
imul
xchg
sub
jae
pop
adc
pop
mov
lea
and
ror
jo
push
adc
les
pop
xor
mov
aaa
mov
cmp
jle
pop
es
das
pop
mov
dec
(bad)
(bad)
popf
dec
push
jle
inc
cmps
mov
mov
sbb
mov
xchg
ins
pushf
shl
maxps
aaa
xchg
ret
dec
fmul
clc
add
cld
aam
adc
inc
xchg
ins
adc
call
cmps
jmp
aam
(bad)
xlat
cmp
outs
or
and
(bad)
push
fcomp
pop
mov
mov
mov
xlat
lahf
clc
(bad)
movs
jb
sub
xchg
mov
gs
xchg
enter
xor
jg
adc
imul
and
sbb
int
mov
mov
sbb
mov
inc
pop
and
shr
inc
imul
dec
push
std
ror
pop
or
pop
jb
jecxz
test
repnz
lods
cli
loop
in
arpl
and
adc
fistp
mov
and
inc
mov
pop
mov
add
pop
inc
nop
out
fs
stos
shr
xor
ins
push
(bad)
pop
cmp
push
jp
dec
mov
mov
int
call
or
sub
test
sub
std
arpl
out
imul
adc
imul
cli
adc
out
xchg
mov
cwde
mov
or
push
ins
adc
and
fiadd
cld
test
aaa
repz
cmps
fidiv
add
aad
hlt
mov
in
cmp
imul
sub
push
add
ficom
inc
cli
(bad)
push
push
push
pop
dec
mov
pusha
mov
pop
cmp
sti
xchg
(bad)
fdivr
mov
or
sub
retf
push
or
mul
and
sub
std
sbb
mov
pop
ret
push
sbb
enter
nop
retf
int
hlt
adc
call
frstor
jle
jbe
gs
adc
xor
in
xchg
or
mov
mov
mov
and
call
ret
fld
movs
shl
push
jmp
add
jo
and
fdivr
aas
cld
ficomp
dec
sbb
and
hlt
mov
sub
jns
jp
add
sub
ins
xor
in
xor
inc
ss
shr
sub
imul
out
(bad)
mov
scas
loop
rol
sbb
enter
mov
les
test
xchg
imul
mov
xor
dec
sub
adc
jnp
cli
popa
xor
mov
xchg
loop
dec
xchg
div
jle
mov
xchg
mov
nop
test
mov
mov
xchg
fistp
das
daa
push
out
push
sbb
and
sub
cmp
repz
fwait
sar
jl
push
push
sbb
dec
das
push
add
adc
xchg
call
lock
mov
add
push
psubw
out
std
add
jle
mov
fnstenv
jmp
pop
mov
sub
repz
xor
cmp
pop
cld
cmp
fadd
adc
xor
sub
(bad)
in
test
xchg
sti
mov
aas
mov
ret
fwait
mov
pop
add
adc
xor
cmp
pop
test
jb
imul
ror
or
hlt
pop
rcl
jne
ins
stc
dec
test
jb
test
jge
inc
in
pop
or
jbe
dec
loop
sbb
and
sbb
cs
cmp
mov
mov
adc
xor
(bad)
jb
and
push
cmp
or
jo
pop
add
pop
or
sub
pop
sbb
jbe
call
aaa
push
add
and
imul
int
aam
int
loopne
retf
sub
in
test
sub
sar
lock
les
les
fnsave
addr16
js
jge
pop
push
inc
add
pop
sbb
jg
ins
out
(bad)
loopne
fcom
stos
jmp
(bad)
or
test
(bad)
les
call
add
int3
xchg
fisttp
lds
jmp
test
mov
in
mov
stos
(bad)
mov
xchg
icebp
mov
lods
repnz
(bad)
mov
lods
fldcw
aas
push
xor
or
xlat
cmp
mov
scas
aad
scas
cli
fs
adc
jae
jae
xchg
div
das
dec
sub
xchg
cli
push
adc
pop
cmp
cmp
ss
jmp
nop
aad
in
mov
push
push
aas
inc
sbb
loop
shl
pop
inc
sbb
and
jae
ins
sbb
ds
sub
adc
adc
ds
in
(bad)
lods
scas
frstor
push
loope
je
(bad)
in
mov
pusha
sbb
in
and
jno
jno
push
sbb
hlt
enter
fdivr
int
les
pusha
sub
pop
out
mov
clc
addr16
push
and
rol
into
(bad)
fcomp
mov
punpcklwd
xchg
jp
and
dec
add
mov
mov
scas
out
(bad)
mov
scas
aam
in
mov
stos
cld
loop
mov
xchg
ret
mov
fadd
out
mov
cwde
int3
xchg
cmc
or
jb
push
add
das
push
sbb
adc
pop
or
mov
pop
xor
dec
(bad)
aad
aam
(bad)
xchg
sar
std
or
inc
lea
inc
add
inc
xor
lahf
fs
xchg
xchg
stos
clc
test
or
imul
in
mov
fisttp
dec
add
jmp
mov
je
xchg
out
cmps
into
mov
mov
xor
push
ins
push
jne
dec
add
push
outs
add
jae
push
pmaddwd
jnp
es
adc
push
das
jg
push
add
add
jbe
ins
or
jp
inc
add
inc
push
inc
add
int
(bad)
arpl
jle
mov
xchg
xor
mov
rol
arpl
xchg
mov
scas
aam
ficom
into
lods
(bad)
mov
(bad)
call
ret
fs
sub
push
stc
lahf
repnz
les
push
rcr
into
mov
cwde
ret
xchg
stc
popf
into
xchg
jnp
sub
fmul
(bad)
mov
lock
in
mov
xchg
ret
mov
out
mov
popa
cmp
inc
ds
or
dec
cs
cmp
xor
mov
mov
ror
adc
jge
lods
xlat
cmp
(bad)
scas
retf
mov
sub
je
jne
pop
loope
mov
leave
mov
mov
xchg
retf
xchg
mov
cmps
movs
rcl
iret
push
mov
ja
jne
jne
push
movq
js
jno
daa
retf
jae
bound
dec
comiss
cmps
cmc
mov
mov
jo
push
pop
inc
pop
inc
cmp
pop
or
shr
out
test
dec
xor
mov
popa
xor
pop
add
pop
sbb
mov
test
mov
shl
fwait
cld
test
mov
cmp
dec
add
neg
aam
mov
sbb
js
jle
outs
cmp
pop
adc
dec
cmp
jge
movs
les
adc
lds
addr16
adc
ja
sbb
aaa
sub
dec
xor
cmps
lods
inc
repz
mov
sub
enter
push
dec
mov
mov
jbe
fmul
mov
xchg
test
mov
sbb
pop
xor
adc
mov
xchg
std
mov
pop
or
jno
cmovg
cs
bound
pop
or
mov
inc
cld
mov
aam
xlat
cmp
and
or
in
lds
lods
cld
mov
data16
ds
jmp
outs
adc
loope
adc
mov
outs
push
(bad)
imul
push
xor
outs
das
push
scas
cmp
push
xchg
popf
fmul
mov
lahf
scas
enter
out
and
xchg
in
xchg
jl
retf
adc
add
jl
cli
sub
pop
add
frstor
dec
aas
neg
rcl
xchg
retf
pop
cmp
xor
ds
inc
sub
clc
sub
(bad)
mov
int
sbb
dec
test
ds
out
or
jp
ror
aam
mov
pusha
dec
sub
pushf
ficom
mov
shr
sbb
iret
mov
iret
stos
in
mov
pushf
std
bound
jg
pop
xor
or
lahf
xor
and
sbb
inc
mov
inc
add
mov
push
add
xor
pop
and
mov
mov
into
lods
fiadd
loope
loop
stos
enter
fidiv
jmp
mov
xchg
jno
out
(bad)
mov
jle
pop
xor
fistp
les
dec
adc
and
adc
lock
test
xor
mov
mov
mov
iret
and
fs
add
sub
out
jne
pop
sub
leave
scas
pop
cmp
sub
push
xor
mov
jo
inc
or
jns
pop
or
mov
pop
pop
push
xor
inc
sub
jg
fdivr
pop
cs
or
jp
sbb
jno
or
inc
punpckldq
mov
repz
add
retf
popf
iret
cmp
imul
xor
pop
(bad)
icebp
(bad)
sbb
bound
js
dec
pop
imul
sar
dec
aaa
pop
out
(bad)
loopne
fsub
jb
pop
call
ins
sbb
shl
das
push
cmp
jmp
fs
inc
lds
and
or
sahf
xlat
mov
and
push
cmp
outs
es
aaa
jmp
ret
cmps
call
inc
fcom
xor
jbe
mov
mov
pusha
sub
pop
mov
xchg
out
mov
cmp
loopne
loop
ret
add
adc
shl
sbb
lock
and
add
call
ss
loop
dec
adc
mov
push
xor
pop
bound
js
jnp
adc
neg
pusha
mov
sub
or
mov
mov
inc
cmp
mov
sbb
sbb
xor
dec
add
inc
push
gs
outs
dec
add
inc
sub
dec
sbb
push
daa
jbe
pop
and
inc
sub
jns
js
jbe
inc
sub
push
sbb
xor
inc
adc
pop
sbb
arpl
jns
xchg
call
lock
mov
fnstcw
mov
out
test
hlt
mov
aam
ror
mov
mov
retf
add
cmp
push
in
int
fld
ins
sub
ja
jne
push
pop
jb
idiv
cmp
dec
call
inc
and
cmps
les
aaa
and
sub
in
mov
pop
jne
jg
xchg
cmc
(bad)
out
jmp
fdivr
cmps
repz
(bad)
in
mov
scas
shl
sub
(bad)
cmps
in
mov
mov
and
dec
cmp
dec
xor
pop
pop
jp
jle
pop
cmp
mov
into
mov
xchg
div
out
xchg
sub
mov
xor
push
sub
xor
jb
inc
daa
inc
sub
xchg
in
xchg
xchg
cli
mov
stc
lods
in
pop
jne
jg
mov
icebp
pushf
in
test
fidiv
mov
or
(bad)
mov
sar
fnstcw
repnz
dec
mov
pop
sbb
je
repz
cld
arpl
ins
add
int3
lahf
int
jo
popa
sbb
shl
and
into
test
imul
sbb
cmp
inc
or
and
dec
cmp
mov
mov
test
les
popf
fistp
fldcw
stc
mov
and
adc
outs
sbb
cmp
daa
dec
xor
outs
push
jbe
push
cmp
jg
sub
ins
add
push
aaa
push
cmp
inc
cmp
jg
pop
es
xor
test
xchg
sahf
rcr
cwde
stc
call
sbb
jle
jge
jg
and
push
xor
jp
pop
sub
sub
sub
sbb
pop
adc
mov
es
add
out
std
xchg
jbe
jne
push
(bad)
cli
nop
sti
mov
xor
mov
loopne
rcr
sar
jae
and
adc
fnsave
fs
jno
aam
gs
pop
je
in
cdq
cmp
jae
mov
xchg
inc
aaa
enter
jp
dec
cs
int
(bad)
mov
stos
cli
popa
cmp
or
ret
test
test
mov
add
sbb
jle
push
sbb
int3
imul
loope
rol
xchg
test
daa
add
pop
push
xor
sub
sbb
arpl
pusha
mov
push
pop
sbb
or
pop
lock
lahf
(bad)
addr16
jle
pop
push
dec
sbb
cmp
jp
icebp
xchg
lods
dec
imul
mov
fdiv
loop
adc
(bad)
(bad)
js
xlat
adc
adc
out
shr
fstp
xchg
xchg
xchg
xor
fcomp
leave
call
mov
js
loope
(bad)
in
popf
dec
or
hlt
xor
fild
sbb
pop
jbe
in
jg
fs
mul
test
test
xchg
repz
cld
lahf
test
mov
ror
fnstsw
fsubr
outs
and
pop
cmp
push
or
inc
xor
dec
xor
and
pop
and
dec
and
jb
popa
or
push
jns
jl
and
push
cmp
pop
add
pop
push
jg
ins
mov
cmp
push
xor
mov
mov
xor
mov
outs
movs
jno
imul
fisttp
mov
fstp
cmp
xchg
sar
xchg
inc
mov
in
scas
jmp
dec
cmp
das
and
out
in
mov
xchg
jmp
mov
data16
jmp
ja
cmc
pushf
test
fadd
push
add
mov
cmp
fiadd
lock
(bad)
lahf
int3
ins
sahf
cmp
cdq
leave
adc
cmp
xor
aam
fsubr
ss
sub
jb
jnp
int3
fld
xchg
ficomp
sub
je
sbb
es
inc
xor
jae
jae
rcl
(bad)
xchg
int3
test
sqrtps
and
adc
mov
jne
push
sbb
loopne
jbe
push
stc
into
cmps
fldenv
sbb
adc
(bad)
shl
inc
add
xchg
jne
push
out
push
jo
ja
dec
cmp
icebp
xchg
xchg
clc
popa
mov
and
mov
pop
pop
lock
retf
jno
fmul
dec
aaa
mov
push
sub
sbb
sub
(bad)
or
ror
mov
pop
arpl
xor
aas
push
or
sbb
pop
(bad)
lahf
cmp
jecxz
in
fwait
scas
dec
mov
mov
cmp
sbb
imul
hlt
xchg
xor
enter
xchg
aam
lods
int
mov
addr16
mov
(bad)
out
test
jo
or
and
retf
dec
or
or
jnp
outs
sbb
in
(bad)
mov
xchg
test
jne
in
leave
xchg
js
sbb
sbb
fld
fistp
popa
or
cmp
sbb
call
ins
mov
cmc
add
xchg
cmps
cld
push
les
(bad)
imul
sbb
je
and
enter
dec
dec
xor
push
or
add
xor
push
or
sbb
pop
mov
scas
aam
std
loop
mov
sbb
test
mov
sub
clc
xchg
cli
and
rcr
push
and
push
inc
adc
mov
sub
jge
pop
cs
adc
pop
mov
and
movs
fisub
stos
(bad)
sbb
jbe
sub
int3
test
adc
pop
cmp
es
ss
fadd
mov
cmc
mov
sub
dec
add
jmp
fist
xor
int
cwde
aad
cmps
data16
out
or
jg
sbb
std
test
cdq
push
xchg
in
arpl
mov
push
add
fldenv
arpl
jge
push
lahf
fild
iret
adc
jo
jae
jae
rcr
sub
idiv
bound
pop
pop
jnp
fisttp
and
jmp
ret
scas
lods
push
stos
dec
push
adc
inc
cdq
loop
aad
mov
test
jb
jnp
add
mov
push
(bad)
call
enter
nop
in
test
push
mov
(bad)
neg
jns
mov
pop
cmps
mov
xchg
imul
add
out
mov
int
stos
addr16
or
cmps
dec
inc
adc
and
inc
xor
nop
xor
daa
outs
pop
pop
adc
in
shr
cmc
call
or
mov
xlat
call
cmc
stc
mov
dec
or
xchg
mov
xchg
jnp
mov
les
(bad)
fdiv
fsubr
pop
inc
and
jnp
pusha
sub
das
inc
sbb
hlt
xchg
stc
sub
pop
push
sbb
adc
pop
jecxz
inc
imul
and
movs
(bad)
xchg
jno
jo
xchg
int
xlat
addr16
(bad)
call
mov
jl
inc
mov
inc
mov
adc
jg
clc
addr16
outs
xor
in
cdq
mov
out
xlat
mov
rcr
mov
mov
ja
cs
iret
fs
aas
(bad)
and
dec
movs
into
mov
aas
xor
rcl
aaa
ss
in
movs
push
mov
cmps
int3
test
nop
jl
arpl
jns
fimul
mov
jb
and
xchg
lds
out
mov
cwde
inc
icebp
mov
aas
repz
dec
into
mov
sub
xor
int3
scas
jmp
add
push
jne
inc
lods
pop
add
or
dec
or
cld
mov
test
fild
sub
jecxz
cmc
xchg
fld
loopne
inc
into
mov
mov
mov
cmp
push
add
cmp
jbe
mov
sbb
and
fstp
or
mov
adc
jp
rcr
mov
jp
stc
jae
and
sti
sub
push
jmp
or
dec
sbb
movs
iret
xchg
cmc
outs
lahf
and
cmp
sbb
inc
mov
add
jnp
sbb
mov
mov
(bad)
dec
sbb
mov
adc
push
add
dec
or
push
dec
sub
xchg
mov
call
int
mov
push
jae
jl
add
mov
sbb
mov
addr16
jnp
jbe
xchg
stos
mov
imul
fcom
jmp
hlt
mov
pop
jmp
inc
and
pop
sbb
cs
add
xor
in
jns
inc
cmp
mov
inc
cmp
sub
push
xor
jb
loop
xchg
jne
pop
xchg
popa
sbb
sar
jo
jo
xor
push
cmp
out
iret
sbb
mov
and
and
das
push
push
js
pop
add
xor
popa
or
push
sbb
icebp
mov
mov
xor
pop
jnp
sub
mov
jmp
retf
scas
stos
dec
add
dec
xor
sar
popf
fcomp
jns
out
in
cwde
test
adc
mov
gs
daa
pop
pop
pop
or
sbb
jno
push
jl
es
cmp
leave
cmp
push
sbb
add
xchg
push
add
cmp
stc
cmp
or
adc
push
mov
cs
stc
mov
cmp
mov
pushf
fwait
cmc
inc
and
sbb
retf
push
adc
movs
mov
mov
stos
out
xor
imul
popf
xchg
cmp
iret
dec
aaa
retf
mov
repz
(bad)
push
shr
imul
xchg
fild
shl
mov
pop
and
push
pop
sbb
popa
(bad)
sahf
dec
sbb
mov
mov
cli
sub
sbb
push
nop
std
cmp
loop
jno
lahf
inc
adc
pop
mov
outs
scas
jmp
pop
adc
popf
addr16
adc
cwde
inc
adc
xchg
jns
lds
mov
xor
shr
pop
mov
dec
and
mov
adc
cld
cmp
movs
dec
das
push
shl
aam
inc
or
sbb
nop
dec
sbb
cdq
inc
or
ins
or
mov
xchg
loop
and
test
fwait
shl
je
out
sub
cmps
rcr
xchg
repz
das
aad
cdq
loope
push
adc
fimul
pop
stos
fistp
je
clc
or
sar
pop
xlat
mov
nop
std
xor
sub
inc
pop
adc
fstp
repz
enter
sbb
fisub
dec
mov
add
shl
mov
mov
mov
aaa
push
jmp
ja
push
fs
call
rol
shl
xchg
iret
or
xor
ror
mov
stos
das
and
push
ror
or
inc
add
mov
jge
(bad)
cmp
add
repnz
mov
and
jle
sbb
jge
adc
mov
lea
jne
push
and
push
test
bound
imul
daa
imul
sbb
mov
sar
xchg
mov
fistp
popf
repz
cmc
js
inc
cmp
cmp
sbb
lods
cld
lods
fcom
clc
mov
into
mov
mov
jge
dec
and
sbb
ins
adc
jle
jbe
jl
movs
mov
movs
les
enter
mov
mov
push
push
inc
and
or
imul
cmp
and
jge
popa
or
dec
movs
bnd
push
pop
es
leave
scas
mov
and
pushf
mov
mov
adc
push
test
or
inc
sbb
mov
add
jo
inc
mov
dec
adc
and
jno
popa
add
pop
cmp
pop
xchg
clc
call
and
xchg
and
test
bound
or
addr16
push
in
bswap
lods
retf
xor
outs
je
dec
ss
adc
pop
icebp
mov
sub
xor
lahf
in
clc
or
sbb
inc
xor
imul
xor
dec
xor
pop
loope
sar
test
xchg
jmp
imul
push
rcpps
dec
sub
mov
pop
or
fstp
dec
mov
inc
ss
cmc
xchg
inc
pop
add
movs
aad
bound
repnz
ret
mov
popa
add
or
loop
jne
add
adc
or
inc
xchg
xchg
mov
mov
cmp
pusha
adc
ins
aas
xor
xchg
(bad)
lods
stc
cwde
out
shl
cmp
jo
push
out
and
pop
jecxz
int
cld
mov
adc
inc
adc
lock
mov
stos
jecxz
out
call
ins
or
sar
xor
and
push
fmul
inc
xor
jb
inc
stos
clc
pusha
clc
xchg
enter
cs
scas
fnstenv
jge
pusha
adc
mov
nop
(bad)
nop
jae
xchg
les
aad
mov
mov
scas
cmp
jbe
(bad)
stc
mov
outs
push
sub
xor
dec
xor
cmp
jg
ja
data16
out
mov
call
jnp
jns
outs
cmp
out
xchg
(bad)
ins
xor
jbe
jg
add
push
idiv
inc
xor
pop
sbb
pop
or
in
and
jp
cmps
std
push
in
repz
shl
call
pop
retf
nop
cmc
mov
or
mov
jle
jne
xchg
dec
mov
and
cs
in
lods
fistp
das
sti
inc
xor
psubsb
sub
aad
xor
dec
xor
add
arpl
jmp
test
bound
push
mov
fstp
mov
push
pop
movs
adc
leave
mov
call
scas
rol
(bad)
hlt
xor
loopne
(bad)
ret
xor
fsub
outs
push
outs
neg
leave
test
(bad)
(bad)
outs
and
dec
sub
mov
mov
ins
repnz
mov
test
(bad)
dec
pop
adc
jns
into
push
jns
das
cmps
rcr
xchg
or
jp
pop
and
mov
retf
popf
push
jno
and
pop
cmp
loopne
call
mov
mov
push
fs
push
push
jp
pop
ss
cmp
xor
xchg
retf
sahf
js
fstp
jno
outs
or
inc
pop
ja
add
mov
test
clc
mov
adc
or
adc
mov
(bad)
xchg
fiadd
cmp
push
mov
(bad)
inc
sub
imul
fnstenv
pop
xchg
movs
inc
ins
cmp
jbe
dec
add
adc
outs
or
cmp
sbb
mov
ds
jbe
es
dec
out
rcr
les
push
push
call
inc
scas
ds
inc
loopne
rol
mov
cmp
xor
xchg
outs
and
push
repnz
sbb
test
movs
test
add
or
movs
sbb
pop
jmp
inc
das
dec
add
stos
fstp
dec
or
fild
outs
push
pop
push
dec
bound
sbb
fist
mov
sub
mov
idiv
test
add
call
sub
xor
cmc
and
and
in
(bad)
xor
test
inc
and
sub
inc
sbb
into
fs
mov
xchg
clc
popf
fisttp
icebp
push
pop
jnp
cmps
fstp
jecxz
rol
push
(bad)
cmp
and
popf
ret
fwait
test
sahf
clc
sub
push
cld
cdq
fisttp
loop
mov
xchg
mov
adc
push
in
push
fisub
jo
popf
jmp
mov
(bad)
out
xlat
mov
mov
or
gs
add
dec
sub
inc
or
ret
fst
aam
shl
je
push
in
or
dec
in
popa
xor
jno
daa
push
nop
(bad)
enter
add
dec
cmp
jne
cmp
push
xor
lods
fcom
mov
push
jmp
lock
jo
sub
cmps
dec
shl
xchg
ret
ret
mov
hlt
add
fld
jae
cmp
pop
xor
xor
ja
xor
das
inc
adc
add
in
aam
fisubr
enter
add
jne
mov
push
out
rol
xchg
xchg
retf
sub
inc
aaa
jg
lea
(bad)
call
rcl
sbb
push
jmp
(bad)
mov
call
push
sbb
icebp
fwait
imul
jae
imul
leave
mov
inc
mov
xchg
in
stc
jp
jae
mov
mov
cdq
clc
mov
lods
fdivr
push
fmul
mov
and
je
nop
(bad)
and
jae
jbe
pop
gs
add
imul
push
sub
pushf
sti
imul
add
sub
dec
out
jl
lock
mov
fadd
aas
push
mov
dec
push
retf
out
mov
jno
push
sbb
jl
rcl
pop
mov
stos
jecxz
cwde
icebp
scas
loopne
imul
ss
cmp
xor
jo
jnp
inc
scas
push
sbb
inc
adc
jae
(bad)
icebp
xchg
test
lods
ret
mov
lahf
jo
shr
leave
jnp
pop
sbb
fs
sub
mov
pop
das
dec
and
xchg
popa
cmc
cmps
jmp
popa
xchg
mov
push
aas
sub
push
in
dec
add
xchg
xchg
mov
xchg
scas
ret
mov
fistp
dec
std
bound
inc
aaa
sti
cmp
cmp
dec
cmp
inc
sbb
sbb
xor
cs
pusha
mov
cli
sbb
data16
jge
adc
xchg
mov
cmp
dec
cmp
jmp
les
xchg
sti
xchg
ret
pusha
sub
hlt
jne
jnp
push
cmp
xchg
mov
popf
cmp
xchg
add
or
dec
push
ins
loop
lock
mov
repnz
mov
mov
mov
daa
and
iret
bound
mov
repz
out
stos
fcomp
xchg
hlt
fs
jle
or
push
jp
cmp
popa
or
sub
adc
cs
repnz
or
clc
pop
add
loope
and
loope
inc
test
sub
(bad)
jp
cmp
and
dec
adc
adc
js
(bad)
retf
or
jo
pusha
adc
mov
popf
inc
fist
aad
outs
popf
test
(bad)
scas
icebp
lods
int3
les
jbe
cmp
aam
dec
test
pop
dec
mov
push
and
int3
test
xchg
xlat
mov
sub
jp
dec
cmp
push
dec
cmp
and
jmp
test
fnstcw
call
pushf
scas
ficomp
daa
push
call
leave
test
add
mov
jle
dec
mov
ja
call
push
mov
xchg
(bad)
(bad)
loope
sbb
out
int3
pusha
adc
shl
mov
sub
pop
aas
and
xchg
(bad)
mov
cmp
cmp
and
dec
aas
(bad)
mov
outs
mov
mov
cmp
pop
add
js
fisttp
movs
inc
xor
stos
fisub
retf
pop
stos
iret
mov
inc
sbb
sub
jne
outs
add
and
(bad)
stos
ret
scas
aad
stc
mov
movs
sti
outs
cmp
pop
add
add
inc
and
sub
int
(bad)
cmp
jmp
pop
arpl
and
call
enter
sahf
movs
rol
rcr
dec
or
sub
mov
pop
xor
xchg
xchg
dec
or
adc
xchg
jmp
ja
mov
mov
xchg
fisubr
or
dec
add
leave
mov
add
(bad)
mov
stos
stc
jecxz
int
fist
sbb
sar
jo
push
and
into
xchg
cli
mov
dec
jmp
and
xor
ds
add
pop
or
in
add
add
inc
sbb
aad
ror
lea
stos
enter
mov
arpl
movs
ja
cs
xchg
(bad)
xchg
test
jge
cdq
retf
ret
mov
mov
add
fiadd
shl
into
cmp
hlt
jns
pop
add
sub
icebp
cwde
retf
jb
ror
fidivr
jo
lock
adc
mov
pop
adc
push
movs
mov
lahf
stos
fstp
ds
aas
into
xchg
or
ins
jmp
das
inc
stos
movs
ret
aaa
inc
adc
int
sub
sub
jg
jne
or
push
jmp
xor
jne
push
add
stos
fidivr
xchg
clc
push
ins
out
xor
int
pcmpgtw
add
fs
fisttp
cmps
fadd
test
pop
or
bound
jns
mov
dec
cmp
xchg
iret
xor
cs
in
fstp
dec
add
jp
dec
sbb
les
mov
push
push
cld
xor
dec
add
fsubr
test
cmp
js
or
cmp
sbb
shl
dec
add
and
cmps
fiadd
xor
push
sahf
sub
or
pop
push
add
fistp
add
pop
mov
mov
dec
outs
add
not
mov
loopne
xor
jb
mov
fs
(bad)
ins
sbb
adc
mov
mov
xchg
scas
shl
in
cmp
sub
mov
mov
stos
mov
mov
mov
mov
call
(bad)
mov
jmp
pushf
mov
scas
into
test
mov
ret
xchg
fist
ret
mov
test
mov
cdq
stc
jbe
inc
adc
aam
mov
movs
les
cmps
jmp
imul
mov
push
fidiv
sti
mov
in
pop
mov
push
jb
outs
loope
mov
mov
idiv
ret
cmp
xchg
mov
jno
outs
or
repz
cmp
inc
or
mov
ds
cmp
iret
leave
lods
std
sub
pop
loop
mov
add
push
sbb
and
pop
pop
pop
sbb
in
mov
js
push
add
add
lods
fistp
jb
inc
xchg
jbe
outs
sbb
sub
jle
mov
push
cmp
not
jp
inc
pop
pop
cmp
retf
aam
add
dec
sub
pop
add
jecxz
shr
and
stc
out
fmul
inc
or
out
cmp
pop
out
in
test
mov
pop
dec
cmp
cmp
jl
xor
jp
or
dec
aaa
hlt
rcl
imul
loopne
mov
adc
sub
inc
aas
jge
jae
popa
and
push
cmp
jle
mov
mov
mov
repz
push
scas
int
xor
adc
xor
xchg
inc
add
push
sbb
and
jp
bound
add
dec
adc
push
mov
fwait
int3
or
nop
retf
(bad)
(bad)
lods
mov
mov
or
and
daa
push
bswap
sub
xor
fcom
popf
mov
mov
sar
loope
ins
loop
sti
setg
daa
mov
mov
xchg
jecxz
sar
jmp
dec
push
push
cmps
in
mov
test
cmp
mov
xor
not
call
(bad)
popf
stos
mov
jb
cdq
fsubr
dec
cmp
cmps
fwait
hlt
bound
test
out
mov
fdivr
neg
mov
fild
ins
mov
out
jmp
sbb
jns
cwde
retf
ds
mov
sub
ror
mov
loope
lds
ror
mov
mov
dec
or
cli
pop
jbe
inc
aaa
inc
loop
retf
stos
rol
mov
and
stos
not
xchg
xor
loope
pop
mov
xchg
fisub
push
push
dec
xor
js
pop
jmp
(bad)
rcr
mov
stc
mov
mov
push
ja
mov
div
or
adc
and
std
popa
push
dec
sub
pop
cmp
pop
xor
ds
add
and
into
mov
std
xchg
xlat
cwde
(bad)
or
or
and
push
xor
retf
lds
mov
xchg
cld
or
jle
and
into
test
xchg
lahf
out
ret
lods
sti
add
popa
adc
cmp
jno
adc
add
mov
outs
or
rcr
pop
cmp
pop
and
sub
rcl
dec
sbb
mov
jge
push
stc
add
add
loope
stos
clc
mov
ins
sbb
sub
neg
mov
jb
bound
(bad)
icebp
scas
hlt
and
not
dec
pop
aaa
fdiv
leave
mov
inc
xor
sbb
shl
xor
in
movs
(bad)
adc
push
xor
dec
or
dec
cmps
adc
out
cmps
jno
fsubr
outs
adc
fiadd
(bad)
idiv
jecxz
fisttp
cmp
and
add
and
movs
icebp
jl
jl
movs
retf
imul
punpckhbw
out
repnz
cmp
lock
out
fstp
daa
mov
xchg
aaa
xor
mov
mov
into
movs
fld
pop
xor
push
loopne
mov
or
cld
xchg
mov
push
scas
retf
sahf
jle
ja
pop
or
test
pop
xchg
hlt
xchg
xchg
(bad)
mov
rol
pop
push
adc
and
or
inc
xor
sub
out
imul
aaa
and
les
add
jge
jg
ds
cdq
cli
push
xor
inc
scas
mov
lea
inc
pop
and
test
xor
cli
mov
sub
pop
pushf
fidivr
cli
xor
adc
push
pop
cmp
je
addr16
(bad)
mov
add
mov
addr16
ds
cmp
popa
add
and
popf
jmp
inc
ss
push
jp
mov
sub
ficom
gs
inc
or
jge
sub
xchg
int
clc
xor
push
repnz
push
adc
clc
test
xchg
mov
pop
adc
leave
xchg
fisttp
gs
mov
xchg
mov
(bad)
clc
out
mov
bound
lods
fld
jo
xor
jg
das
cmc
mov
test
mov
mov
and
and
pop
or
shl
fstp
xlat
daa
pop
adc
xor
pushf
in
clc
fwait
cli
mov
add
push
or
cwde
movs
(bad)
xchg
retf
imul
mov
mov
jb
(bad)
xchg
jae
das
push
ds
ss
mov
adc
jle
jp
test
(bad)
les
mov
shl
icebp
push
mov
in
mov
shl
test
mov
mov
out
leave
mov
shl
inc
sbb
jns
sbb
int
test
mov
xor
retf
lods
fsubr
mov
jae
out
mov
jae
mov
xchg
inc
dec
cmp
mov
rcr
mov
into
or
std
outs
out
test
mov
dec
ss
adc
dec
movaps
jo
and
bound
arpl
dec
and
std
les
inc
out
popa
sbb
add
scas
sub
mov
loop
ror
xchg
aam
and
fcomi
mov
cmp
pop
push
dec
mov
jb
cld
sub
cs
adc
(bad)
mov
iret
mov
fbstp
xor
test
popa
add
push
or
dec
xchg
int3
mov
mov
pop
jne
dec
mov
mov
imul
or
xchg
xchg
mov
mov
stos
jecxz
adc
add
mov
lods
cmps
clc
mov
(bad)
xlat
pusha
add
jmp
repz
jle
or
jno
jns
xor
mov
push
jle
dec
mov
stos
mov
in
addr16
scas
add
or
xchg
xchg
gs
cmps
adc
in
lock
test
and
jp
dec
test
push
cmp
dec
mov
test
xchg
(bad)
mov
test
or
stc
push
in
pop
ds
out
lods
cld
add
and
rol
bound
js
xchg
(bad)
mov
bound
or
mov
and
cmp
mov
pop
aaa
mov
xor
enter
sbb
ret
cmps
lods
inc
push
add
or
xlat
add
ja
inc
pop
shl
pop
aas
jns
daa
jo
pcmpgtd
cmp
rol
es
jns
inc
cmp
out
lods
stos
icebp
cwde
cld
(bad)
jno
mov
add
xchg
push
add
sbb
add
push
or
add
add
fs
and
int3
mov
jl
fisub
mov
fwait
test
lods
aad
mov
sbb
ja
xor
pop
adc
mov
out
in
cwde
sub
in
or
cmp
cmp
push
mov
call
or
leave
xor
aas
jge
in
dec
rol
jb
add
movups
loop
test
push
out
xor
lods
xchg
mov
xchg
mov
pop
jne
adc
add
xor
retf
and
push
imul
ja
icebp
cli
mov
pop
fstp
in
nop
lock
jbe
adc
or
mov
push
and
rol
aam
xchg
pop
aam
jne
and
mov
imul
ss
imul
pop
sti
int3
pop
add
mov
pusha
jle
lock
dec
pop
xchg
and
repnz
mov
add
mov
cmp
test
cmc
add
nop
repz
push
mov
ret
mov
ss
daa
fwait
hlt
hlt
adc
jnp
jns
and
jge
loope
leave
js
int
sub
sbb
je
sar
inc
lods
loope
in
cli
int3
movs
stc
nop
int
or
mov
or
shr
je
loopne
test
loopne
sbb
mov
and
mov
sbb
pop
dec
retf
add
or
js
jb
shl
push
movs
imul
test
or
ficom
lods
push
jp
xchg
daa
and
aam
sub
xor
out
mov
adc
sbb
sbb
dec
mov
jb
jae
pop
xor
jg
and
test
out
add
(bad)
jb
bound
fmul
mov
arpl
xor
xchg
xchg
outs
mov
mov
mov
cld
test
in
pushf
call
mov
pushf
ret
sbb
inc
daa
xchg
or
xchg
dec
mov
sbb
dec
popf
movs
popa
neg
fnstsw
push
xor
cmc
js
div
mov
dec
sbb
ja
cs
jo
push
jecxz
xchg
mov
jnp
pop
movs
mov
push
cmp
sti
and
and
int3
xchg
mov
nop
or
and
mov
push
mov
fmul
pop
mov
pop
ins
mov
movs
ds
pop
fxch
or
mov
sbb
sti
mov
fidiv
fidiv
mov
sbb
(bad)
jmp
call
mov
xchg
in
mov
in
out
or
xlat
ret
cli
sub
dec
and
(bad)
sbb
mov
inc
retf
data16
cmp
jo
xor
push
or
ror
ret
adc
or
push
into
adc
mov
xor
or
movs
fld
cmp
stos
add
mov
out
clc
or
push
jb
cwde
std
or
je
dec
push
retf
add
je
rcl
mov
mov
out
shr
push
retf
pop
push
imul
adc
xchg
es
sub
call
adc
push
xchg
mov
ja
xor
(bad)
mov
and
data16
jo
pop
cmc
jmp
les
inc
ror
fadd
jns
mul
add
mov
movs
sti
scas
in
adc
test
aad
sar
test
dec
xchg
rcl
fwait
and
push
add
and
jp
sahf
xor
js
sub
std
jl
jecxz
pop
pop
inc
or
fdivr
bound
lods
ja
movs
imul
aad
repz
sbb
imul
xchg
outs
movs
aad
retf
lods
mov
dec
jo
idiv
cld
inc
call
sar
add
mov
mov
retf
inc
dec
dec
and
test
hlt
imul
jecxz
cli
and
xor
inc
jne
adc
push
test
scas
cmp
shr
mov
lock
retf
cmp
(bad)
sar
ret
stos
repz
ss
xor
fs
xor
add
dec
mov
jmp
cwde
or
push
test
movs
push
jg
and
ret
sub
(bad)
fucomi
inc
adc
push
sbb
cmp
inc
movs
movs
pop
sbb
push
jns
movs
jno
stos
leave
push
inc
adc
arpl
cld
int
mov
xchg
in
es
dec
jecxz
mov
outs
jns
inc
xchg
or
es
or
and
movs
jns
push
dec
and
scas
xchg
aaa
cmp
sub
push
mov
ss
mov
sub
jb
sub
xchg
outs
leave
mov
or
add
pushf
mov
imul
sub
cs
test
dec
std
loop
je
and
in
adc
jbe
shl
mov
pushw
stos
add
push
and
mov
or
fmul
nop
inc
sbb
jae
mov
jmp
cld
sub
clc
fwait
mov
aas
outs
or
push
push
lds
icebp
cmps
push
pop
call
ret
sub
lock
sub
movs
mov
adc
(bad)
repnz
outs
pcmpgtd
in
mov
enter
(bad)
sub
not
xchg
in
cli
inc
inc
jmp
outs
mov
sahf
ja
fsubrp
mov
adc
(bad)
popf
push
dec
lock
aas
fdivr
imul
outs
mov
sub
adc
mov
adc
sub
add
jge
mov
mov
mov
jle
xchg
cwde
int3
inc
mov
sub
mov
pop
ins
jns
cwde
cmp
cmp
xchg
cld
and
push
les
cmc
dec
and
push
adc
sbb
mov
jne
(bad)
xchg
fs
and
mov
pop
call
arpl
dec
push
inc
or
inc
push
jbe
fidivr
int
mov
out
push
mov
(bad)
gs
or
mov
pop
fstp
dec
xchg
lods
mov
mov
push
xchg
mov
pushf
(bad)
call
inc
jecxz
mov
popa
int3
xchg
leave
add
lds
in
dec
and
fwait
jne
js
daa
mov
or
and
into
ret
xchg
pop
fucomip
sbb
hlt
int3
cvtps2pi
mov
xchg
fld
(bad)
das
scas
aad
mov
aam
mov
out
sub
push
fstp
or
(bad)
lds
mov
test
loop
jmp
call
ins
mov
arpl
mov
add
mov
iret
dec
in
jmp
pop
nop
xchg
cmps
cmp
stos
jmp
ret
mov
(bad)
std
out
cld
xor
push
mov
lods
jno
pop
mov
dec
inc
pop
test
scas
pop
addr16
mov
mov
cmp
fisubr
jp
xchg
jbe
rcr
test
sbb
xor
call
and
popa
jno
retf
xchg
and
sbb
add
xchg
jo
fwait
jo
fsub
out
jo
outs
movs
xchg
cmp
fs
into
mov
and
test
mov
(bad)
xchg
ret
fldenv
ins
fmul
mov
dec
(bad)
add
mov
jecxz
test
stos
into
mov
add
mov
xchg
lock
loopne
inc
repnz
daa
push
test
js
out
jno
in
add
pop
cmp
add
pushf
sbb
int3
es
test
push
sbb
xchg
sbb
cmps
cwde
dec
fisttp
jle
(bad)
in
sbb
test
sbb
ds
jno
or
imul
cmp
pop
rcr
leave
nop
retf
movs
sti
xor
dec
mov
in
adc
xor
(bad)
(bad)
dec
xchg
hlt
test
mov
dec
jns
or
fidiv
scas
sbb
pop
(bad)
fistp
pop
ret
inc
ret
loop
into
lods
jno
jb
push
mov
add
cmp
pop
lods
retf
inc
aaa
jle
out
or
fcomp
(bad)
imul
daa
sub
ror
cdq
div
mov
sti
push
repnz
and
rcl
pop
push
cld
fldenv
outs
add
iret
lods
and
and
or
out
ss
and
xchg
xchg
mov
daa
jecxz
push
imul
push
mov
pop
lods
repnz
xchg
jmp
sti
push
dec
and
addr16
shl
call
dec
and
repnz
in
bound
pop
jmp
adc
xor
push
push
lods
das
or
push
ds
js
pop
and
fs
jb
cmp
ins
mov
movs
loop
js
sub
sbb
call
or
adc
jge
xor
or
add
xchg
adc
mov
loop
repz
call
push
imul
jmp
movs
jae
fwait
cmp
lods
add
jmp
inc
div
shr
sahf
retf
mov
cmp
neg
imul
rol
jmp
sbb
add
in
pop
fadd
sbb
es
jg
stos
jns
pop
jp
push
mov
inc
mov
int
jge
cmp
(bad)
into
out
adc
push
push
int3
clc
icebp
adc
fwait
pop
sbb
sub
mov
test
mov
fistp
jecxz
addr16
or
push
andps
mov
adc
popa
xchg
fimul
(bad)
mov
lods
retf
ror
adc
clc
cmps
mov
shr
push
imul
push
loopne
push
leave
retf
mov
cmp
push
dec
in
or
push
mov
ins
lods
xlat
mov
pop
in
mov
jecxz
call
pop
(bad)
xor
nop
fcomip
(bad)
push
push
loopne
cmp
xor
pusha
sbb
movs
cdq
ins
(bad)
call
data16
pushf
adc
mov
cmc
lock
int
icebp
push
push
dec
mov
xchg
neg
pop
aad
mov
add
imul
sub
dec
mov
inc
movs
cs
push
and
and
sahf
push
xchg
aad
push
xchg
xor
adc
jno
mov
push
inc
div
jge
cmps
sub
outs
retf
jnp
es
stos
adc
mov
push
es
mov
sbb
out
mov
and
cs
sub
in
cdq
out
xchg
ins
cmp
aam
into
cmp
aaa
cli
daa
or
cdq
les
sub
mov
and
sub
retf
pop
xor
jmp
push
mov
sbb
fild
mov
inc
jg
sub
mov
jb
dec
adc
loope
cmps
test
xor
int
scas
adc
fcmovb
in
fiadd
inc
cmps
sub
mov
sub
add
cmp
jno
cmp
lods
shr
push
dec
sub
inc
mov
mov
jl
popa
inc
cmp
xchg
test
inc
fnstcw
imul
call
mov
movs
or
xor
dec
jmp
dec
pushf
sub
sbb
dec
xor
movs
sahf
movs
pop
ror
jns
cmp
mov
jnp
xor
jae
jl
in
int
lods
sub
add
push
test
pusha
and
sub
inc
ret
mov
gs
repz
jl
frstor
call
mov
cmc
dec
cwde
mov
stos
inc
(bad)
push
gs
jecxz
clc
pop
xchg
out
cmp
mov
mov
and
sti
adc
imul
xchg
dec
fistp
ret
aaa
sub
(bad)
cli
push
pop
jmp
sbb
jb
inc
cmp
ins
mov
xchg
cli
xor
sub
cs
add
jns
loop
sub
pop
jne
xlat
pushf
jns
jg
retf
pop
adc
shr
adc
sub
lock
je
arpl
sub
out
scas
sub
pop
pop
dec
in
(bad)
pop
popa
pop
push
mov
adc
sar
mov
jbe
pusha
sub
(bad)
mov
retf
push
jno
repz
sub
(bad)
fbstp
std
jbe
jnp
add
mov
sbb
dec
cmp
loopne
cmp
lods
ret
jb
repz
ret
and
fcomp
or
xchg
fcom
jae
inc
(bad)
aam
test
(bad)
std
fwait
rol
push
jne
mov
prefetch
inc
mov
cld
xchg
sub
add
inc
fimul
jb
xchg
icebp
or
cld
mov
repnz
dec
and
dec
enter
xchg
bound
das
shl
ret
outs
das
adc
xor
and
aas
fdivr
mov
add
(bad)
xor
(bad)
lahf
pop
mov
leave
sub
push
rcl
(bad)
xor
inc
xor
int
xchg
fldcw
adc
ds
push
hlt
repz
leave
or
mov
enter
lahf
(bad)
jmp
lock
out
aas
xchg
das
lods
stc
imul
add
(bad)
(bad)
cmp
cmp
inc
rcl
aas
xor
(bad)
lods
add
in
test
scas
call
xchg
int
mov
lods
aas
cmp
xlat
cdq
mov
int
dec
mov
push
es
and
pusha
jno
imul
imul
mov
icebp
arpl
xchg
call
out
lea
jmp
xchg
fsubr
ins
ret
scas
push
add
add
(bad)
xchg
stos
adc
dec
mov
pop
aaa
push
ins
push
pop
repnz
mov
in
inc
ja
xchg
clc
out
or
mov
retf
enter
or
gs
sbb
pop
(bad)
loopne
jmp
push
fst
dec
xlat
mov
in
in
pusha
pushf
cmp
cdq
mov
adc
outs
jns
sub
and
jl
ror
xor
xchg
repnz
add
fs
push
hlt
int
sbb
mov
jnp
mov
cmp
dec
stc
inc
and
jp
faddp
push
jg
lds
outs
mov
jg
daa
enter
in
sahf
scas
aam
leave
pop
(bad)
mov
sbb
cwde
rol
xchg
lods
clc
nop
mov
mov
rcl
movs
dec
mov
pop
aam
cmp
aam
or
daa
cmp
bound
xor
mov
mov
pushf
xlat
xchg
ret
jno
ds
pop
ds
cli
fwait
add
push
das
mov
xor
in
leave
inc
lods
push
call
fst
sbb
sub
sbb
leave
enter
pushf
shl
mov
div
xchg
aam
mov
inc
add
sahf
in
ins
mov
into
cld
xor
inc
cmps
(bad)
dec
cmp
xor
sub
fwait
pop
gs
jnp
outs
jge
fwait
mov
data16
push
inc
out
jp
ret
std
in
xchg
pop
fist
cmc
and
mov
push
aad
add
sub
sub
push
adc
sbb
add
in
repnz
and
sbb
cmp
pop
lahf
int
push
retf
je
scas
je
sbb
jmp
pushf
aad
pop
add
jl
cmp
cdq
add
shl
inc
fadd
repnz
lahf
cmovo
hlt
xor
nop
cmps
jl
jne
fidiv
or
or
loope
and
inc
inc
push
daa
jg
ds
cmps
mov
imul
into
adc
push
jmp
mov
unpcklps
mov
icebp
mov
mov
jne
cmp
push
fwait
mov
fisub
movs
ror
fcomp
sub
(bad)
jno
std
push
mov
idiv
(bad)
repnz
adc
inc
adc
ficom
fnstcw
xor
retf
sub
mov
add
cmp
aam
addr16
xlat
pop
mov
xchg
xor
pop
jns
rcr
cli
jge
push
std
and
enter
fnstsw
mov
cmp
and
ror
mov
leave
add
push
fucom
push
xor
out
pop
mov
xor
sahf
(bad)
mov
push
mov
data16
rol
sub
cmp
daa
push
fst
cwde
pop
add
cmp
or
pop
dec
and
fdivr
cmp
sub
std
dec
push
js
xchg
mov
mov
pop
adc
out
xchg
(bad)
into
fsubr
mov
or
cwde
ret
jbe
lods
shr
jae
jo
shl
sbb
adc
mov
shl
mov
outs
add
hlt
pop
push
jb
ror
ror
shl
movs
cmps
jecxz
jb
cmps
xchg
inc
loop
hlt
movs
jmp
stos
xlat
jp
sub
dec
cmp
xor
in
lea
xchg
add
iret
add
into
cli
dec
inc
xor
add
mov
xor
stos
cmps
pop
push
sub
popa
or
aam
xchg
pop
shl
jecxz
sub
jbe
daa
lock
mov
or
out
mov
sti
mov
sub
test
sub
cmp
dec
cld
mov
stc
mov
out
adc
psubsw
add
mov
daa
scas
imul
push
xchg
push
or
test
push
push
and
dec
cld
ficomp
dec
nop
inc
iret
lods
sbb
inc
popa
jp
jp
add
ret
(bad)
or
push
aam
dec
shl
imul
mov
shl
movs
mov
in
inc
popf
and
sbb
sbb
ins
adc
test
dec
adc
mov
into
push
in
movs
and
in
popf
test
mov
xchg
lods
adc
fmul
adc
dec
mov
jp
adc
xchg
cmp
xchg
rcr
(bad)
fs
or
repnz
pop
fbld
adc
movs
lods
ss
mov
xchg
push
push
nop
mov
pop
test
jp
ret
verw
popa
ss
mov
cmp
call
jmp
inc
xor
div
inc
clc
push
std
out
cmp
mov
jns
xor
fsubr
popf
imul
push
push
aas
lock
enter
aad
pop
dec
adc
sub
push
mov
(bad)
loopne
inc
test
fisub
pusha
xchg
cs
into
pop
cli
test
mov
inc
pop
test
lds
cli
cmp
sbb
fs
test
jmp
xchg
xchg
xchg
ret
or
and
push
repnz
out
jo
es
fcmovnu
fst
or
and
rol
cwde
out
out
fnstsw
iret
xor
mul
adc
mov
mov
add
or
adc
lahf
loop
add
icebp
or
arpl
push
call
jno
nop
and
jmp
mov
pusha
adc
imul
scas
fsub
rcl
repnz
out
lahf
sub
dec
test
xchg
addr16
mov
lods
sbb
cwde
fld
jge
jb
dec
ins
mov
cmp
out
pop
das
add
addr16
mov
nop
stos
mov
pop
cli
mov
push
ret
or
push
mov
mov
push
adc
mov
jecxz
cmp
xchg
out
cs
and
ja
cmp
mov
ins
out
fdivp
xchg
fnstcw
std
xchg
add
movups
xor
adc
das
dec
and
and
pop
test
mov
fucom
add
aaa
retf
mov
push
jb
inc
in
sbb
je
aaa
lahf
(bad)
adc
xchg
js
dec
mov
adc
dec
jns
push
test
or
add
test
stos
sub
repz
loop
inc
xchg
cdq
fisubr
stos
icebp
xlat
xchg
inc
push
xchg
into
(bad)
cld
xor
fsubr
xor
stc
jo
in
fisttp
test
nop
dec
lock
sub
ret
mov
push
pop
(bad)
mov
add
jle
adc
out
(bad)
jae
mov
imul
movs
mov
dec
pop
movs
or
pop
clc
sub
rcr
into
leave
inc
rcl
sbb
in
adc
xchg
xchg
out
adc
in
fsub
repnz
mov
sub
mov
aaa
push
(bad)
mov
cmp
push
mov
inc
pop
and
pop
sbb
dec
or
mov
inc
movs
fild
jle
js
pop
bound
push
cmp
and
add
sar
xchg
arpl
fxch
push
int
xor
out
div
pushf
fcomp
or
shr
stos
test
hlt
jo
ror
or
push
scas
loope
mov
dec
mov
pop
sub
inc
js
outs
or
loope
push
es
out
mov
xlat
adc
lods
inc
sahf
jecxz
sub
pushf
loopne
test
add
sbb
or
cmp
jp
clc
push
mov
cmp
or
mov
aam
loopne
sub
fnstsw
dec
daa
push
xor
out
jne
mov
xor
or
pop
daa
arpl
push
call
rcr
mov
xchg
or
or
push
mov
jp
mov
push
loopne
lods
mov
jecxz
jo
aaa
in
mov
xor
std
pop
repnz
adc
jg
pop
test
mov
icebp
bound
shl
mov
out
sbb
add
das
or
pop
push
mov
call
adc
into
int
cmp
lahf
inc
rcr
fldcw
pop
leave
dec
(bad)
int
lods
jns
fist
mov
mov
gs
fist
in
(bad)
(bad)
in
fist
iret
fwait
pop
popf
in
xor
lds
and
movs
stc
xchg
scas
in
add
fisttp
fcom
aaa
std
xchg
push
mov
es
cmp
cbw
xlat
inc
inc
jne
fld
pop
jmp
pushf
or
ret
pop
(bad)
sub
ret
fcomp
sbb
jae
test
out
int3
mov
in
and
pop
(bad)
out
mov
sti
shr
add
retf
pusha
sbb
(bad)
ret
(bad)
and
lods
int3
mov
es
pop
xchg
and
mov
mov
jnp
and
in
xchg
into
pop
out
push
xor
inc
stos
fisubr
pop
mov
(bad)
fxam
inc
not
dec
inc
scas
pop
outs
out
outs
outs
(bad)
mov
aad
fdiv
retf
or
push
cs
inc
loop
inc
scas
pop
xchg
dec
mov
out
push
jle
and
add
ss
gs
clc
int
sar
push
fwait
adc
mov
out
icebp
icebp
push
inc
(bad)
jmp
int3
js
cmp
xor
xlat
xchg
add
jg
sub
ins
test
mov
call
ret
aas
cs
lods
cmps
dec
sub
pushf
test
jmp
cmp
xchg
mov
pop
cld
inc
dec
gs
pop
je
or
jae
and
retf
fstp
lods
cmp
ins
xor
mov
ja
loop
jg
add
fistp
xchg
jmp
stc
pop
adc
mov
push
sub
mov
inc
add
push
sbb
jo
call
nop
jmp
adc
jp
mov
iret
repz
inc
cmps
push
xchg
xor
xchg
adc
add
rcl
fwait
out
push
mov
xchg
sbb
jmp
repnz
pop
fcmovne
inc
mov
int3
push
idiv
jbe
in
lock
xor
aaa
inc
pop
aam
mov
shl
mov
xor
mov
dec
fisubr
leave
bound
scas
pop
lahf
sbb
add
test
push
retf
or
(bad)
div
adc
add
xor
or
loopne
mov
add
into
lods
jmp
out
push
mov
into
cs
sbb
cmp
cmp
sub
cmp
xor
push
cwde
shl
int3
cmp
push
ins
jmp
ret
jge
sbb
popa
sbb
ret
fld
inc
xor
stos
jp
xlat
adc
adc
inc
je
cli
ja
inc
aas
mov
jecxz
dec
lds
call
aad
dec
push
(bad)
adc
dec
or
dec
test
adc
jmp
jecxz
cmp
jmp
xchg
cmp
push
xchg
mov
mov
sub
jbe
enter
aad
jge
sbb
dec
and
push
test
lahf
data16
loope
sub
mov
jl
inc
cmp
mov
bound
push
(bad)
loopne
lahf
repnz
mul
xchg
pop
cmp
adc
stos
(bad)
xchg
sbb
mov
sub
dec
xor
jnp
movs
shl
xchg
gs
test
lock
sbb
sub
push
sar
cmp
out
inc
push
jne
mov
push
or
ret
mov
push
xchg
cmps
jb
sar
icebp
sbb
movs
add
cli
adc
ds
movs
ins
repnz
imul
bound
add
int3
jge
add
mov
cmp
and
mov
sar
jbe
pop
jbe
cmp
sbb
hlt
test
arpl
cmc
fmul
xchg
fstp
leave
enter
cmps
xrelease
xor
mov
cwde
retf
cmps
fwait
dec
mov
inc
shr
scas
fild
cmp
pop
aas
cdq
or
leave
mov
retf
pop
xchg
push
and
adc
jmp
cmps
dec
cmp
push
es
ret
rdtsc
call
inc
xchg
dec
push
iret
add
mov
fidivr
pop
loope
push
arpl
add
in
fdivr
in
inc
and
xor
mov
jno
xchg
fbstp
or
fstp
mov
cmp
and
out
pop
inc
xor
das
push
pop
rol
cmps
inc
and
xchg
cmp
inc
and
push
(bad)
push
aaa
jg
test
push
test
test
aam
outs
push
fs
dec
fistp
test
sub
push
call
lahf
dec
daa
repz
add
ja
call
or
dec
ss
fadd
std
inc
sbb
jg
(bad)
push
dec
adc
clc
add
mov
fbstp
add
fwait
scas
es
call
inc
and
jge
mov
mov
mov
push
jns
dec
push
arpl
and
jno
jo
neg
mov
(bad)
pusha
movs
jno
test
cmc
bound
stc
das
leave
mov
cmps
mov
retf
in
aad
popf
rcl
xor
mov
mov
das
jp
enter
shl
sub
shr
cmp
ds
bound
sub
ret
out
mov
mov
push
sub
mov
inc
into
push
in
and
test
scas
(bad)
or
xor
in
repnz
jno
fcomp
scas
sub
xlat
in
ss
daa
js
popa
inc
xor
adc
out
call
sbb
popf
dec
hlt
mov
xor
mov
fsubr
out
jmp
imul
inc
int3
and
push
push
push
cmps
and
pop
test
mov
outs
mov
ret
lods
sub
iret
sbb
sub
retf
jl
fldenv
pop
fstp
(bad)
push
or
xchg
cmps
pop
aad
sbb
push
movs
cld
pop
jle
outs
dec
shl
movs
gs
dec
loopne
xchg
jp
cmc
jns
dec
loop
int
jnp
fcom
jnp
or
or
ja
sbb
jle
dec
jle
pop
jmp
and
sbb
and
xchg
pop
lods
sbb
ror
ror
pop
loopne
ret
imul
test
xor
call
and
push
fs
add
iret
mov
xor
out
pop
add
fsub
lds
jae
sahf
out
and
sbb
ss
and
dec
test
mov
and
cli
sub
push
iret
push
pop
sbb
push
mov
jmp
imul
pop
jg
and
jl
fninit
ret
and
in
icebp
pop
aam
lods
js
dec
pop
pop
dec
lahf
mov
pusha
jns
retf
movs
or
cmp
cmp
jne
inc
xchg
pop
pop
inc
cli
and
mov
in
ins
call
sbb
fwait
mov
mov
mov
enter
push
in
push
fist
push
nop
rol
sub
ins
daa
iret
fstp
add
retf
popf
retf
inc
int3
adc
clc
aam
xor
inc
xchg
les
loopne
mov
jbe
daa
or
mov
mov
mov
add
(bad)
mul
sub
fcmovnu
retf
pinsrw
sub
mov
xchg
dec
cmp
sbb
cmp
mov
aaa
push
jae
shr
sbb
jo
cwde
mov
push
popf
(bad)
bound
dec
(bad)
mov
(bad)
inc
inc
xchg
in
inc
cmps
arpl
imul
test
shl
and
jbe
jb
xchg
adc
push
inc
out
enter
xchg
test
inc
push
pop
jne
push
cdq
scas
cmp
inc
ss
mov
jge
push
or
movs
neg
sbb
sbb
call
sub
cmp
hlt
cmp
or
cwde
mov
movs
push
in
call
jecxz
lds
or
mov
xor
and
jmp
fistp
mov
addr16
pop
icebp
daa
stc
sub
mov
sbb
jmp
pop
dec
rep
movs
push
pop
lods
add
cmp
imul
dec
push
arpl
pop
cmp
dec
jns
mov
add
movs
cmp
loop
scas
or
cld
call
pop
jbe
outs
jnp
jg
sbb
push
movs
retf
adc
imul
mov
mov
call
cwde
adc
call
pop
sbb
mov
mov
push
pop
sbb
aaa
retf
jge
add
stos
inc
in
ret
cmp
mov
jo
xor
jle
mov
in
jo
cmp
and
dec
faddp
jnp
push
and
aam
inc
push
ror
jmp
xchg
call
fisub
pmuludq
retf
sbb
retf
add
pop
jne
mov
jo
ds
sahf
mov
jle
push
sub
mov
outs
test
ret
fcom
rcr
stc
mov
jae
out
adc
rcr
rol
mov
push
xchg
or
pop
cmps
jo
xlat
sbb
int
popf
dec
outs
sub
cmp
push
pop
mov
ds
pop
pushf
inc
add
jp
sbb
les
sbb
adc
data16
xor
fs
data16
push
pop
shl
sbb
mov
fmul
mov
stc
xchg
mov
std
scas
mov
adc
out
cmps
adc
and
xchg
fnsave
add
lahf
dec
cmps
scas
dec
pop
mov
xor
cdq
inc
and
xchg
push
or
test
outs
jmp
int3
pop
or
push
cmp
or
dec
or
leave
ins
jae
sahf
cs
mov
les
inc
shl
jge
ds
push
ja
rcr
sbb
sub
dec
sbb
dec
(bad)
xlat
outs
sbb
pop
das
xor
mov
sub
push
add
push
loopne
rol
mul
mov
das
mov
stos
lock
inc
xchg
in
pop
or
add
ret
sbb
out
or
(bad)
mov
or
aad
into
or
pop
or
mov
sbb
add
mov
xchg
sub
adc
jp
lds
lods
cmp
lea
psrld
mov
cmp
mov
out
add
aam
fisubr
in
lock
cmps
dec
out
neg
(bad)
mov
clc
inc
mov
jb
pusha
(bad)
sub
mov
push
(bad)
adc
sub
pop
stos
inc
inc
fisttp
mov
movs
jl
leave
mov
jmp
mov
(bad)
outs
push
arpl
mov
pop
push
adc
jbe
push
or
(bad)
jge
xor
mov
mov
div
pop
scas
(bad)
pop
cmp
fisub
out
dec
jl
jg
xor
jecxz
inc
sti
adc
xchg
push
stc
movs
adc
loope
pop
push
inc
pop
sub
xchg
ja
push
aad
mov
es
push
test
hlt
cmp
cdq
arpl
movs
xchg
push
fiadd
sbb
jns
lahf
jg
std
sar
dec
test
fldenv
inc
jmp
push
xlat
fwait
inc
or
jge
mov
div
(bad)
aad
loope
mov
sub
scas
push
ins
or
push
ds
mov
mov
cmc
test
pop
ret
push
popa
(bad)
mov
sbb
inc
pop
mov
or
and
sub
inc
nop
ins
pop
test
dec
mov
in
add
xor
push
jmp
xor
mov
icebp
sub
inc
int3
push
sbb
mov
dec
enter
daa
pop
jne
xchg
dec
mov
popa
adc
xchg
mov
cdq
dec
fisub
cli
ficomp
jge
idiv
and
ss
fsub
pop
adc
std
sub
jmp
fst
movs
jb
ja
push
push
fxch
sbb
int
loope
ds
mov
not
cmp
or
inc
shl
sub
mov
imul
lahf
push
and
mov
out
loopne
cld
cmc
mov
nop
push
adc
dec
add
add
mov
lahf
rcl
cmps
add
xchg
mov
pop
in
push
int
retf
das
xlat
pushf
xor
ss
test
xor
jmp
xor
repz
(bad)
mov
dec
fnstcw
(bad)
and
int
repnz
(bad)
clc
xor
push
sbb
outs
lds
dec
dec
adc
popf
movs
dec
sub
add
scas
dec
(bad)
dec
and
in
jno
cmp
mov
in
adc
inc
mov
outs
outs
inc
into
(bad)
xchg
xchg
add
loop
push
adc
mov
int3
outs
and
dec
imul
inc
dec
mov
pop
(bad)
fadd
stc
jnp
add
mov
sub
fistp
mov
aas
loopne
popf
jg
mov
sub
lds
mov
ins
inc
mov
or
jp
mov
repnz
fmul
jmp
adc
dec
jecxz
retf
imul
xor
fiadd
jno
and
adc
stos
jae
repz
sbb
xchg
jle
idiv
repz
pop
push
jo
in
enter
out
cli
loop
adc
ja
ja
nop
cwde
jnp
inc
sbb
push
xchg
push
cmc
or
mov
sub
out
push
fst
jns
xchg
into
mov
not
fucomp
mov
mov
shl
or
jle
pop
xor
aam
sbb
daa
mov
add
push
sar
sbb
in
fcmovne
scas
shl
in
add
jae
es
push
jne
and
in
frstor
pop
mov
cmp
adc
int3
bound
rcr
jae
rep
or
icebp
dec
dec
inc
add
pop
mov
cmp
rcl
aad
sub
pop
inc
je
in
sub
sub
push
stc
pop
(bad)
xchg
jbe
outs
lea
loope
add
mov
stos
fmul
cmp
sbb
loope
cmp
out
lods
ss
popf
cli
mov
xor
in
call
call
test
cmp
dec
add
movs
push
adc
icebp
test
les
cmc
mov
cwde
jbe
xchg
jge
jne
es
out
xchg
ds
fs
or
cmp
or
sub
push
movs
icebp
dec
sub
xor
or
jmp
jb
jmp
and
xor
mov
ds
or
inc
xchg
cmp
jmp
fcmovb
(bad)
shr
mov
inc
das
adc
inc
inc
mov
push
rcr
ret
jmp
mov
push
push
sti
mov
xchg
xchg
sti
mov
fwait
jmp
pop
in
adc
pop
fpatan
mov
jg
and
jp
or
and
adc
pushf
and
sbb
ins
adc
inc
adc
in
cmc
fmul
jp
je
mov
add
cld
add
xchg
mov
aad
push
add
int3
pop
inc
or
cmp
jge
inc
or
cmp
and
pop
cmp
(bad)
hlt
in
jb
push
mov
ja
xlat
dec
xlat
push
mov
or
and
lahf
push
out
inc
mov
les
(bad)
sbb
nop
push
stos
mov
imul
(bad)
xor
inc
in
mov
push
mov
loopne
das
cmp
lock
mov
inc
lods
dec
std
loope
push
mov
sub
push
add
xor
mov
sahf
aas
ret
fld
sbb
sub
sbb
in
rcl
mov
mov
rol
xchg
pop
cs
cmp
push
mov
imul
fisub
aam
loope
sbb
dec
cmp
nop
mov
jo
inc
inc
in
mov
pop
sub
add
lahf
sub
mov
rol
xor
mov
stc
call
cmp
jmp
rcr
xlat
sub
shl
loope
mov
in
clc
cdq
pop
cs
push
(bad)
cmp
sbb
popa
push
cwde
add
and
(bad)
movs
adc
jno
sbb
mov
or
ret
inc
retf
mov
mov
jg
sbb
add
or
add
ret
aaa
int3
mov
stos
push
ins
push
and
jmp
inc
(bad)
jmp
ja
push
or
xor
stos
loopne
arpl
jno
addr16
daa
jmp
dec
imul
add
mov
push
repnz
lahf
sbb
std
mov
sbb
fwait
les
or
push
stc
cmps
fild
and
push
xor
mov
pop
icebp
push
push
rcl
inc
push
sar
and
xor
adc
neg
cmc
jle
adc
jne
jmp
mov
push
sub
shl
leave
jnp
inc
sbb
adc
cmp
cmp
xor
xor
push
sub
cs
leave
push
jae
lds
ss
ss
out
cmp
jb
xchg
js
cdq
cli
inc
je
test
iret
or
repz
lock
fbstp
xchg
lea
mov
imul
push
mov
mov
jecxz
std
push
retf
mov
lods
xchg
mov
push
ret
dec
pop
mov
and
jmp
(bad)
adc
loop
adc
xor
mov
pop
push
mov
jbe
cwde
and
mov
pop
shr
std
jmp
js
jg
mov
test
jne
lods
cmp
xchg
imul
ret
dec
xchg
xchg
mov
inc
xchg
jne
adc
test
or
and
adc
outs
add
ins
cmp
push
inc
push
sub
bound
int3
scas
cmp
jle
jne
js
jbe
mov
popa
jo
fwait
sbb
push
xor
push
mov
cmps
(bad)
fsubrp
nop
fcomp
into
call
dec
or
cmp
pop
std
cmp
dec
pop
fs
jl
jb
push
xor
inc
and
das
mov
and
pop
inc
sbb
and
mov
mov
ss
test
lods
in
jb
ja
sti
xchg
out
mul
fwait
xor
push
jg
test
movs
aas
mov
mov
clc
inc
sub
sub
and
in
mov
fld
mov
add
int
std
jns
adc
gs
xchg
stos
out
or
adc
not
xor
inc
pop
gs
mov
out
sub
add
je
xchg
imul
jbe
jo
std
lahf
sbb
mov
outs
dec
sahf
mov
movs
and
sub
arpl
ja
cdq
leave
fcomp
in
imul
aam
(bad)
lods
out
mov
xchg
fmul
xlat
lods
iret
mov
(bad)
idiv
or
add
push
ins
adc
push
jnp
dec
cmp
gs
xor
mov
retf
sbb
jge
mov
vpmulhuw
je
in
sbb
mov
retf
sbb
lea
mov
xor
jbe
mov
jae
test
pushf
push
mov
pop
pop
jb
mov
cmps
test
mov
fdiv
jbe
mov
mov
sub
and
sbb
ja
mov
jo
mov
jnp
mov
sti
shl
mov
mov
inc
icebp
lahf
pop
mov
daa
imul
je
push
sbb
and
dec
and
ja
gs
dec
sub
xchg
xor
add
icebp
(bad)
int
adc
mov
fldenv
gs
test
mov
and
mov
sub
mov
add
js
xchg
repnz
sub
cmc
cld
inc
add
out
sbb
test
(bad)
in
imul
jbe
pop
das
mov
clc
aam
inc
and
imul
(bad)
retf
pop
jl
cli
fnsave
pop
daa
gs
and
adc
jns
or
push
imul
sbb
sub
movs
xlat
mov
cld
popa
sub
cmps
(bad)
loope
push
jnp
mov
sti
mov
fisttp
clc
mov
nop
repnz
test
mov
mov
rcr
(bad)
xchg
into
mov
and
out
(bad)
xor
mov
in
adc
arpl
retf
mov
std
mov
push
adc
(bad)
into
mov
mov
cmp
cpuid
rcl
cli
enter
push
out
adc
aad
adc
xchg
fcmovu
adc
ja
pause
or
pushf
(bad)
mov
es
push
imul
sub
cwde
enter
mov
int3
in
adc
xchg
mov
stos
(bad)
mov
loope
loop
into
xchg
shl
inc
idiv
call
(bad)
fild
leave
mov
mov
add
mov
movs
int3
test
xor
push
aad
aad
or
pop
inc
(bad)
jmp
ffree
sbb
sbb
sbb
mov
shl
test
mov
iret
gs
dec
adc
outs
sbb
test
das
push
push
inc
cmc
nop
cmc
les
xchg
ins
inc
sahf
int3
mov
pop
inc
stc
stos
(bad)
sbb
pusha
cmp
ds
dec
lahf
stos
(bad)
(bad)
iret
mov
mov
mov
mov
shr
xor
dec
pop
jbe
mov
cmp
dec
sbb
push
sbb
jo
push
gs
imul
ds
sub
add
and
popa
xor
pop
cmp
xor
pusha
sti
mov
cld
jb
nop
add
push
push
shl
pusha
call
fmul
icebp
dec
sub
loop
mov
test
push
inc
inc
ins
cmc
lods
add
inc
and
adc
xor
aas
mov
and
imul
and
sub
pop
xor
popa
sbb
pop
ins
fidivr
jge
loop
push
mov
xor
push
inc
or
test
repnz
ret
test
(bad)
neg
into
mov
cld
mov
fimul
push
jecxz
loope
cld
mov
mov
les
je
jmp
pop
sbb
xchg
xchg
sbb
push
arpl
mov
or
dec
sub
xchg
movs
aam
push
and
inc
jbe
mov
push
mov
enter
(bad)
sar
cmp
adc
xlat
pusha
sbb
cmp
jle
adc
pop
xchg
fistp
popf
and
dec
inc
arpl
jg
adc
adc
sbb
mov
fdivr
xchg
mov
lock
sahf
sti
mov
fisttp
clc
mov
nop
repnz
test
mov
mov
cmps
int3
cmps
in
ret
fwait
rol
frstor
jmp
or
xchg
test
call
pop
adc
fld
jg
or
ror
adc
popf
sbb
popf
retf
cmps
xor
mov
fs
mov
push
cmp
sub
addr16
push
adc
cmp
and
mov
and
mov
std
pusha
sub
int
adc
bound
bound
imul
mov
pop
sbb
jno
imul
aas
inc
sub
jp
pusha
xor
pop
cmp
and
sub
imul
pusha
sub
push
cmp
sbb
dec
sbb
imul
imul
ins
ret
daa
sub
inc
cld
test
cmp
cmp
(bad)
out
mov
outs
jp
mov
leave
repnz
rol
jp
xchg
es
sub
sbb
mov
dec
or
push
push
ins
call
outs
jo
mov
(bad)
xchg
iret
cmps
sub
dec
cmp
jp
jl
push
add
(bad)
(bad)
sahf
xlat
test
mov
rol
fwait
cli
cdq
hlt
test
mov
(bad)
mov
fmul
std
mov
xchg
test
leave
mov
xlat
test
mov
rcr
mov
rcr
pop
mov
int
push
pop
xchg
mov
add
jmp
dec
out
test
repz
lahf
sub
mov
add
push
dec
pop
jg
jne
xor
pop
push
xchg
mov
xor
sub
lock
xchg
and
push
rol
ins
jno
mov
add
mov
test
fdivr
call
mov
mov
idiv
shl
ret
popf
repz
icebp
pushf
in
movs
leave
mov
mov
xchg
aam
lds
retf
xchg
fdivr
call
mov
mov
idiv
ror
in
pop
imul
push
scas
int
sti
(bad)
fcmovnu
int
add
stc
retf
lahf
cld
fcmovnb
(bad)
retf
leave
out
push
xchg
sub
dec
inc
push
popf
les
aam
out
push
(bad)
mov
mov
ins
ret
adc
pusha
pop
inc
ret
nop
push
cmp
fcmovbe
xchg
enter
leave
mov
in
ret
sbb
mov
lahf
in
ror
mov
out
hlt
lahf
fdivr
jmp
retf
lahf
std
mov
enter
leave
mov
in
ret
sbb
mov
lahf
in
ror
mov
out
hlt
lahf
fdivr
jmp
pop
cli
jb
mov
iret
ror
and
bound
mov
mov
div
xchg
(bad)
adc
sbb
out
mov
mov
fistp
outs
ss
int3
mov
mov
push
add
mov
adc
sbb
call
jge
test
int3
sahf
jmp
xchg
cmps
lds
int3
test
xchg
sti
nop
shl
in
lds
cld
cwde
fnstsw
(bad)
mov
xchg
jmp
jmp
sahf
jmp
xchg
cmps
lds
int3
test
xchg
sti
nop
shl
in
lds
cld
cwde
fnstsw
(bad)
mov
xchg
jmp
jmp
sahf
jmp
cwde
fwait
stc
retf
dec
call
imul
mov
popf
sbb
pop
outs
cmps
mov
push
push
test
mov
scas
out
(bad)
movs
fnsave
in
icebp
fwait
lock
xchg
int3
test
test
movs
jmp
pushf
clc
mov
retf
cmps
(bad)
sahf
repz
mov
lods
out
mov
lods
dec
call
cmps
pop
ss
xor
sub
jno
xor
push
pcmpeqd
imul
lahf
std
test
or
jp
inc
cmp
add
pop
maxps
jle
push
stos
enter
jecxz
stc
push
aaa
push
xor
fs
cmp
dec
push
pop
or
pop
or
pop
pop
sbb
add
outs
add
sub
rcl
mov
mov
test
fs
jg
lock
dec
push
adc
ins
and
dec
sub
jne
pop
sbb
imul
ds
sub
imul
sub
push
sub
inc
and
jge
jb
jl
inc
sub
push
adc
ins
and
dec
sub
jne
pop
sbb
imul
ds
sub
imul
sub
push
sub
inc
and
jge
jb
jl
inc
sub
push
adc
in
movs
mul
cmp
jno
out
in
clc
mov
movs
push
gs
add
push
and
pop
daa
inc
add
dec
sub
pusha
add
sar
fimul
cwde
loop
(bad)
imul
es
cmp
xlat
pop
xchg
shl
pop
cmp
pop
or
and
sahf
hlt
cmps
ret
sbb
jbe
cs
or
pusha
cmp
hlt
xchg
cli
xchg
inc
add
test
pop
or
cwde
aam
jns
data16
jge
xchg
outs
nop
dec
(bad)
and
inc
rcr
jp
ficom
cmp
cld
js
inc
fisub
lock
sti
sub
adc
jnp
jb
push
in
xchg
fcom
xchg
gs
outs
mov
xchg
test
dec
lds
adc
sbb
adc
iret
aaa
jecxz
xor
inc
loope
aaa
stc
inc
cld
inc
not
push
in
mov
fidiv
shl
in
cmp
or
loopne
add
out
test
mov
dec
mov
gs
sahf
fst
lds
fisub
pop
jmp
stos
or
jo
pop
(bad)
push
mov
stos
js
xchg
test
lds
shl
das
repnz
enter
push
cs
ret
(bad)
mov
js
jle
sbb
fidivr
dec
mov
push
fist
or
xor
pusha
shl
clc
jb
test
mov
idiv
mov
add
in
and
rcl
stc
cs
mov
mov
cmp
jo
cmps
les
cli
xchg
stc
mov
fisttp
ret
jbe
or
leave
pop
ficomp
cdq
mov
test
pop
mov
test
scas
(bad)
sahf
mov
dec
ror
cmp
xor
push
add
bound
call
jge
push
mov
or
pop
in
sub
dec
into
call
pop
ss
sub
xor
mov
mov
jl
jo
and
dec
add
jl
pop
movs
dec
out
dec
mov
cmp
add
call
inc
cmp
es
mov
bound
in
add
loope
fbstp
out
(bad)
mov
mov
mov
jge
mov
dec
shl
push
mov
cdq
lock
xchg
rcl
jmp
retf
pop
mov
cmps
cmps
shl
in
xchg
call
mov
mov
enter
retf
mov
sar
add
sub
push
dec
xor
jne
adc
fnstcw
test
popa
or
es
daa
jne
mov
fwait
loope
les
les
inc
jecxz
in
in
cwde
(bad)
mov
repz
vpand
test
pushf
jmp
sbb
push
ins
or
push
sub
adc
xchg
lock
ret
mov
ss
fsubr
les
loop
icebp
lea
sbb
jno
pop
les
shr
push
add
stos
lds
xor
and
iret
xchg
popf
mov
je
cmp
fs
lahf
mov
out
xlat
jo
cmp
and
push
fnstenv
dec
int
adc
pop
add
pop
cmc
mov
jge
cmp
add
out
pop
(bad)
mov
arpl
cwde
sbb
dec
xchg
ins
mov
add
push
rcl
in
cmc
xchg
retf
mov
mov
nop
lock
in
in
hlt
xchg
mov
ficom
fidivr
ficom
cmp
and
div
add
dec
jmp
mov
loop
std
push
neg
pop
or
fnstcw
push
out
cmp
and
xor
inc
in
mov
mov
std
(bad)
cld
mov
inc
or
icebp
fucomi
(bad)
mov
sub
das
push
sbb
add
jge
pop
mov
pop
adc
inc
cmp
cmp
or
adc
push
addr16
lds
mov
call
scas
adc
inc
pop
adc
inc
ds
sub
imul
push
xor
jl
push
fild
pushf
mov
pop
adc
(bad)
jno
es
mov
mov
(bad)
loop
mov
mov
out
imul
and
sub
push
sbb
dec
das
ins
xor
in
shr
imul
sbb
sbb
dec
shl
(bad)
xchg
mov
mov
ficom
jecxz
ret
mov
mov
test
cmc
mov
mov
xchg
mov
fldcw
xor
add
jge
fs
movs
mov
sbb
sbb
sub
inc
and
adc
jg
inc
sub
push
adc
outs
es
push
cmp
jl
rcr
retf
imul
add
push
inc
cmps
mov
mov
pop
adc
xor
inc
daa
dec
cmp
addr16
pop
adc
xor
data16
inc
ds
add
jb
dec
push
adc
ds
std
ins
fild
outs
in
cmp
cmp
js
ins
pop
ins
das
dec
or
dec
sbb
push
ins
add
dec
push
sahf
sbb
mov
stos
ret
add
jg
sahf
leave
mov
cmps
in
shr
mov
xchg
mov
sbb
jae
bound
arpl
inc
push
ins
pop
jne
jnp
pop
cmp
popa
cmp
test
cmc
mov
and
ins
push
inc
cmp
push
cmp
sub
in
inc
hlt
mov
popa
retf
push
cmp
inc
(bad)
push
je
jp
pop
cmp
dec
sub
arpl
xchg
enter
icebp
aam
out
lods
sbb
dec
add
sahf
test
jns
jg
nop
ret
mov
loopne
int
adc
inc
add
jae
outs
es
xor
jno
push
push
inc
push
push
push
add
stos
rol
test
xchg
mov
in
ins
aaa
cmp
cmp
icebp
push
aam
inc
xor
inc
sub
jle
ins
pop
inc
and
jb
jae
push
push
jge
dec
cmp
or
sub
pcmpgtd
ins
pop
and
dec
add
pop
cmp
pop
ss
dec
push
adc
push
adc
push
ss
gs
push
jb
jl
pop
aas
inc
sub
inc
ss
imul
sub
pop
dec
push
push
jae
push
dec
pop
arpl
outs
add
jne
addr16
cmp
jnp
jp
sub
jmp
xchg
mov
mov
mov
jno
push
sub
ins
cs
push
push
jmp
call
int
ret
mov
loopne
clc
lods
out
cmps
out
mov
mov
mov
(bad)
retf
mov
aad
xchg
in
(bad)
pop
ja
jge
push
pop
xor
lahf
enter
add
xchg
repnz
(bad)
mov
adc
mov
mov
mov
sbb
fwait
repnz
loopne
sar
jbe
popf
shr
xchg
xlat
movs
sbb
dec
es
and
gs
ja
push
sub
addr16
pusha
es
pop
or
pop
sub
inc
sub
ret
fmul
repz
mov
rcl
enter
clc
stos
stc
mov
cld
fimul
loop
in
cmp
leave
xchg
popa
add
stos
int
movs
sbb
popa
and
pop
add
and
js
push
es
push
xor
or
ins
cmp
inc
or
or
popa
daa
jle
pop
adc
popa
xor
ja
jo
popa
cmp
mov
repnz
sub
or
popf
sahf
cmp
or
pop
ret
xchg
mov
jb
outs
(bad)
pop
push
push
lock
cmps
mov
ja
sub
or
push
mov
pop
in
add
xor
out
inc
in
test
jmp
add
inc
mul
push
fdivr
push
and
push
mov
push
push
or
imul
sub
xor
cmp
jecxz
push
neg
test
enter
and
(bad)
movs
pushf
mov
jp
adc
sbb
dec
out
mov
cdq
inc
push
add
xor
lds
dec
jmp
in
inc
in
test
push
lds
xlat
jp
cmps
cmps
lods
pop
mov
push
sbb
or
imul
sub
or
pop
adc
in
and
sti
sbb
stc
stos
pushf
pop
dec
bnd
lods
and
hlt
pop
cmc
je
adc
add
mov
outs
leave
push
xor
and
not
and
cmp
pushf
xchg
mov
dec
or
sbb
pop
call
test
ja
push
or
adc
je
imul
loop
lds
xlat
ds
out
call
adc
in
and
and
not
test
cli
jg
adc
push
mov
jl
pop
cmp
sub
jae
jb
xchg
mov
mov
add
or
cdq
pushf
fwait
mov
sub
and
pop
icebp
dec
jmp
xchg
jle
push
sbb
inc
out
in
mov
pop
sub
or
pop
cli
jg
xchg
xor
pop
(bad)
xor
bound
ja
int3
sbb
inc
pop
sub
and
and
aad
xchg
stos
mov
adc
cmp
arpl
popf
iret
fstp
scas
(bad)
mov
(bad)
mov
pop
fs
push
and
add
cld
mov
(bad)
icebp
test
mov
not
retf
mov
scas
les
dec
or
adc
dec
jmp
mov
sar
and
sar
and
mov
push
xor
push
fistp
mov
pop
jmp
or
lahf
stc
mov
inc
sub
xor
jp
push
sub
ds
sub
sbb
xchg
(bad)
mov
mov
mov
inc
pop
pop
xor
ds
add
ja
xchg
in
std
mov
clc
fiadd
and
clc
jge
adc
ds
in
push
not
sbb
enter
and
or
jbe
sar
mov
mov
lds
sbb
inc
shr
ds
(bad)
jge
test
cli
jge
fimul
fiadd
popf
fisubr
pop
fld
push
inc
ss
jl
inc
aaa
pop
pop
xchg
and
or
inc
adc
xchg
in
push
mov
arpl
mov
sbb
push
jmp
arpl
pop
pop
out
dec
push
inc
push
loope
movs
mov
stos
jne
jmp
pushf
sub
vshufpd
sbb
bound
retf
jno
es
dec
sub
(bad)
jecxz
add
dec
gs
mov
ror
xchg
pop
loope
cli
dec
jae
sar
mov
cmp
inc
inc
dec
xchg
fs
cld
xor
sbb
test
push
jmp
dec
cmp
cmp
sbb
fsubr
cmc
cmp
cmp
fstp
sbb
dec
(bad)
xchg
add
retf
popa
xchg
xchg
sbb
outs
xchg
ss
outs
cmp
stos
mov
imul
out
popf
inc
dec
das
dec
mov
inc
std
xor
cmp
mov
jle
ds
push
fldcw
hlt
sub
mov
test
pop
cdq
xor
cmps
test
loop
(bad)
ror
inc
inc
leave
shl
fild
push
cwde
jecxz
mov
adc
jo
inc
ds
xchg
std
jae
cmp
cwde
jne
sbb
sub
push
cmp
xor
mul
imul
push
or
add
pop
nop
mov
lods
dec
nop
jl
inc
cld
iret
sbb
arpl
arpl
cld
dec
sub
gs
add
stos
iret
pop
dec
bound
or
fld
dec
inc
jl
retf
jb
arpl
call
(bad)
das
adc
ret
loop
sbb
inc
std
cmc
xor
xor
retf
mov
xchg
jno
xchg
lea
ss
add
(bad)
loopne
sub
pop
test
fnsave
or
loop
xchg
pop
neg
push
xor
push
cld
add
mov
fwait
and
(bad)
iret
stc
adc
dec
arpl
data16
push
hlt
(bad)
xchg
je
inc
test
sbb
fdiv
mov
out
sub
jnp
aas
inc
daa
adc
js
add
loope
push
jns
xor
sub
call
xchg
xlat
jp
repnz
nop
xchg
dec
arpl
retf
mov
fwait
or
inc
mov
xor
and
mov
inc
lds
cmp
push
into
daa
mov
pop
add
cmps
jp
enter
xchg
adc
cmp
jne
xor
lods
and
in
pop
dec
shl
push
and
bound
pop
imul
dec
nop
mov
scas
cmp
pop
xor
jg
xor
sub
sub
wbinvd
mov
xchg
add
or
aas
gs
in
or
(bad)
sbb
sbb
cdq
ror
sub
or
loop
mov
mov
sbb
xchg
arpl
(bad)
fimul
stc
cmps
cmp
aaa
inc
pop
iret
cdq
out
cmc
jge
push
mov
cwde
dec
cmp
popf
sbb
aaa
and
inc
out
fcmovbe
jmp
xchg
adc
(bad)
mov
jmp
(bad)
fimul
ins
sub
xchg
add
xor
test
and
jecxz
dec
pop
cmp
sub
fdivp
imul
and
xor
int3
lahf
cmp
mov
mov
les
xor
(bad)
jae
cmps
outs
sub
pop
ds
or
dec
cmps
(bad)
loope
adc
cmps
push
int
int3
pop
in
fsubr
pushf
mov
push
or
jmp
movs
inc
jp
outs
fwait
fwait
or
dec
sbb
std
fld
outs
call
sahf
aam
loop
cmp
dec
pop
ror
cmp
movs
mov
imul
lds
cmp
add
aas
dec
ficomp
popf
xchg
mov
hlt
addr16
push
inc
cmp
imul
and
pushf
arpl
and
adc
mov
jl
push
ret
ins
ins
xor
sub
sbb
ins
cdq
inc
xchg
retf
loope
addr16
ret
lods
retf
ror
xor
or
inc
movs
scas
jae
jo
push
adc
push
enter
cdq
sub
aaa
xor
xchg
imul
rcr
cld
or
aaa
cmp
adc
mov
stos
loope
jl
push
xchg
push
xchg
shl
pop
push
movs
cmps
mov
jo
rcr
gs
ins
in
jbe
sbb
aad
retf
movs
xchg
jmp
dec
sub
mov
mov
mov
pop
adc
cmp
aad
mov
dec
cs
and
jp
sbb
retf
push
or
test
out
clc
lahf
es
outs
or
jp
mov
sbb
xchg
sbb
inc
mov
sub
iret
bswap
cmp
ss
jbe
outs
das
(bad)
imul
js
sub
sbb
popa
cmps
jnp
pusha
mov
cmps
sub
sub
stos
mov
mov
repz
inc
and
movs
and
push
cwde
iret
jns
sub
aaa
(bad)
cmps
mov
test
xor
loopne
rol
push
sbb
and
popf
lds
add
mov
add
inc
outs
xlat
iret
dec
pop
sub
jae
jp
test
fadd
cmp
mov
sbb
xchg
adc
out
and
cmovle
cli
cs
outs
dec
jmp
int3
retf
int
popa
push
fnstsw
out
nop
nop
pop
xchg
mov
std
jmp
jo
inc
aam
xchg
ret
sahf
test
push
retf
dec
push
pop
xchg
rol
adc
pop
sub
mov
jl
sub
das
sbb
dec
pusha
mov
cmp
in
in
test
sar
xchg
shr
shl
add
repz
loopne
js
sbb
sub
fisubr
push
or
cmp
add
in
hlt
ins
rol
daa
je
cmp
cmp
cli
(bad)
loope
and
enter
dec
push
mov
fwait
bound
inc
sbb
pushf
mov
push
int
or
movs
push
clc
movs
jle
or
xchg
mov
outs
adc
loop
outs
pusha
pop
adc
arpl
sbb
pop
test
xchg
or
test
and
dec
popa
test
in
js
xor
fsubr
inc
mov
push
xchg
cld
shl
(bad)
imul
push
neg
push
mov
pop
mov
dec
enter
out
ja
rcl
jp
add
xlat
and
repnz
xchg
or
adc
adc
fsubp
cmp
push
(bad)
mov
sbb
pop
xchg
jmp
in
outs
mov
jecxz
icebp
cmp
lods
inc
push
dec
mov
dec
lods
push
xchg
dec
aaa
stos
jecxz
adc
pop
add
rcl
maxss
(bad)
cs
sbb
sbb
js
fist
ret
test
and
inc
sbb
xchg
dec
retf
repnz
adc
shl
add
xor
pop
sbb
mov
movs
test
cmps
hlt
in
mov
ror
ja
dec
ret
test
push
push
mov
cmc
out
pop
int3
adc
imul
lahf
out
shl
les
leave
stos
shr
cdq
sbb
aam
test
sbb
and
int
cs
dec
dec
push
das
and
cld
sub
sahf
dec
inc
adc
cmp
ror
inc
xchg
jg
mov
js
jl
sbb
mov
cld
in
sub
call
push
loopne
mov
or
lea
aad
jb
jnp
outs
push
xchg
adc
mov
iret
into
bound
sbb
push
xchg
and
test
inc
add
xor
sub
arpl
push
cs
push
dec
sbb
jae
and
test
push
jns
and
mov
fs
push
mov
shr
clc
hlt
lods
jp
mov
shr
cmp
test
inc
cmc
push
(bad)
xchg
mov
stos
ins
sahf
stos
mov
push
xor
push
movs
push
popf
dec
scas
add
add
int3
mov
pop
or
in
dec
sbb
lods
jo
xor
imul
das
cmp
push
add
mov
lahf
jae
lahf
movs
in
xchg
adc
push
sti
shl
jb
arpl
jne
rol
xlat
sub
xchg
mov
in
pop
scas
jns
(bad)
mov
jmp
aaa
enter
in
and
or
sub
into
mov
rcl
aaa
or
stos
xor
mov
push
dec
js
mov
push
sbb
xchg
mov
or
dec
iret
add
ins
mov
pop
arpl
bound
imul
das
loop
mov
xchg
and
in
lods
fxch
loopne
popf
mov
or
pop
sti
xchg
loop
push
pop
jge
xor
sub
or
mov
dec
aad
loope
and
push
xchg
movsx
lods
call
jno
and
add
ins
rcl
ds
sti
inc
mov
repnz
add
adc
stos
jl
test
dec
or
int
and
jnp
jecxz
push
mov
and
jmp
sbb
mov
icebp
out
lods
mov
iret
mov
mov
xor
mov
sar
mov
aad
out
inc
cld
cmp
jl
dec
mov
idiv
jge
dec
mov
mov
sub
sub
xor
adc
std
fnstsw
adc
add
jns
into
outs
xchg
dec
mov
mov
adc
call
(bad)
iret
push
icebp
jg
pop
inc
lods
mov
mov
xchg
leave
test
pop
lahf
outs
cmp
inc
fldenv
cmp
or
pop
dec
lahf
inc
or
int
test
daa
call
pop
je
sub
es
lds
test
lea
push
sbb
adc
bnd
pop
dec
sub
mov
dec
frstor
in
jno
repnz
aas
std
and
push
repnz
sub
call
sbb
jae
adc
sub
test
mov
xor
fdiv
xchg
add
or
ja
xor
iret
sbb
push
mov
out
mov
add
mov
pusha
jo
shl
pop
sub
and
enter
push
or
jmp
popf
adc
aam
jbe
ret
fnsave
mov
jne
test
retf
jne
ret
inc
jle
jo
mov
mov
mov
cmp
xchg
jecxz
cmps
jg
or
inc
jecxz
cmc
sub
push
ret
imul
rcr
and
sbb
pushf
inc
(bad)
bound
test
xchg
mov
mov
adc
mov
call
xchg
cmp
cmp
(bad)
adc
dec
rcl
push
mov
adc
cld
xchg
mov
push
cmp
aad
mov
adc
in
mov
mov
retf
jns
or
cdq
inc
adc
or
mov
scas
stos
add
scas
xchg
mov
push
mov
sbb
sub
adc
out
in
or
or
aad
and
inc
sbb
ds
and
mov
xor
lds
mov
cmp
jo
imul
cmps
pushf
sub
(bad)
jle
jecxz
lahf
repnz
out
mov
inc
repz
fcmovb
mov
dec
dec
pop
pop
(bad)
jo
pop
or
jae
test
sub
gs
in
jb
jg
add
pop
mov
fadd
das
sub
dec
imul
leave
or
cmp
iret
jae
stc
jno
dec
pop
retf
js
dec
push
iret
cdq
lds
fs
dec
lahf
fistp
pop
data16
lahf
retf
xchg
sahf
ret
cs
(bad)
xor
mov
test
lahf
xchg
fnsave
fldenv
mov
mov
pop
daa
or
repz
retf
or
xchg
pop
lds
stos
or
dec
push
jbe
jbe
int3
test
addr16
mov
fstp
lods
mov
xor
aam
inc
fcmovnu
mov
call
xor
cmp
ins
dec
cwde
and
mov
shr
test
cmps
jnp
inc
xor
push
sbb
ror
mov
mov
test
movs
or
jno
push
xor
mov
jae
add
scas
push
push
pop
fimul
rol
mov
adc
in
inc
pop
mov
sbb
lock
movs
mov
cs
sbb
mov
cmp
retf
icebp
sub
in
sbb
ret
mov
dec
imul
sub
loopne
scas
ins
ins
dec
add
in
mov
dec
xchg
ds
mov
lahf
dec
dec
test
xor
mov
xchg
ja
fimul
xchg
dec
sbb
ret
stos
lock
outs
inc
pop
cmp
out
xor
lods
push
cdq
xor
or
xchg
loope
fdivp
repnz
cmp
cmp
movs
cmp
in
sub
rcr
mov
ja
sti
cmp
ja
shr
fldenv
fs
sbb
and
lock
xor
adc
loop
push
ret
fwait
(bad)
xor
add
mov
fwait
dec
xor
lods
push
call
aad
mov
sti
popa
and
icebp
sbb
repz
ss
shl
hlt
outs
mov
jbe
fsubr
pop
push
stos
push
inc
out
xchg
rcr
rcl
mov
fst
leave
aas
dec
mov
gs
mov
cwde
ins
cli
mov
mov
scas
xchg
out
arpl
xchg
pop
push
mov
add
fadd
psubusw
sub
mov
dec
cmp
pop
rcl
in
fist
and
add
je
fs
xor
add
pusha
inc
dec
pop
loop
mov
adc
sbb
scas
mov
shl
push
neg
ret
retf
test
mov
sar
sbb
xlat
mov
aas
sub
daa
repz
(bad)
sub
sahf
ret
pop
cmp
sbb
jmp
dec
(bad)
mov
hlt
pop
loope
jmp
adc
xchg
mov
jecxz
lahf
in
mov
mov
xchg
mov
jmp
loope
mov
cmp
imul
xor
mov
(bad)
cmps
jmp
mov
jg
and
adc
movs
cmp
iret
mov
jno
push
loopne
mov
adc
or
mov
retf
je
(bad)
fdivr
push
lods
jae
push
mov
cmp
add
call
fwait
pusha
fwait
inc
mov
lods
sahf
xor
loopne
int3
push
and
pop
inc
push
cmp
cmp
jns
dec
imul
into
in
push
test
ins
push
push
sub
leave
xchg
pop
add
cli
mov
xor
test
shl
imul
add
jno
mov
mov
std
lahf
dec
aam
add
stc
mov
push
not
adc
and
ror
xchg
imul
mov
nop
fcmovne
inc
fdivr
adc
das
push
xor
cmp
pop
pop
sbb
adc
mov
jbe
into
dec
mov
add
xchg
ins
mov
cmc
call
cmp
sti
les
or
ja
sar
call
pushf
and
pop
pop
out
fsub
mov
nop
retf
inc
test
inc
jne
mov
stc
(bad)
fisttp
pusha
test
inc
jmp
outs
mov
aam
stc
in
and
cmp
push
fidivr
pop
mov
outs
test
sahf
mov
xchg
pop
mov
inc
xchg
inc
out
call
cmp
stc
adc
or
mov
mov
imul
fcomp
mov
mov
push
adc
fdiv
repz
(bad)
rcl
pop
lods
(bad)
pop
jnp
xor
mov
lods
rcl
adc
int3
cmp
sbb
outs
push
sbb
sbb
inc
pop
add
mov
mov
(bad)
mov
xor
iret
lock
dec
ins
shr
push
mov
in
sub
mov
jmp
pop
shl
retf
and
int3
mov
loope
dec
ds
jmp
pop
inc
imul
sub
aaa
dec
push
(bad)
mov
jle
in
fwait
dec
(bad)
jmp
inc
jmp
mov
or
call
shl
fwait
test
and
pcmpeqw
sbb
daa
out
push
and
jo
jmp
or
inc
push
sti
sub
inc
inc
call
and
jg
sbb
ret
xchg
fsubr
jb
aas
aas
repz
dec
(bad)
mov
adc
jne
inc
cdq
(bad)
xor
movs
cli
dec
aam
or
xchg
pop
(bad)
push
aaa
out
iret
push
jbe
data16
sbb
setno
and
test
cdq
cmp
add
xor
sub
leave
adc
iret
inc
push
fcmovu
or
cmp
mov
test
je
adc
lea
xor
dec
fld
repz
pop
je
call
ss
or
xchg
lods
dec
shl
cmps
gs
fbld
and
jge
dec
jge
mov
jbe
pop
dec
rcl
push
sub
int3
mov
sar
dec
xchg
mov
sub
in
(bad)
jbe
ds
ret
(bad)
jb
loope
add
or
std
inc
xor
adc
inc
add
pop
sti
jp
sbb
mov
cmp
sbb
inc
pusha
sbb
xchg
cmp
mov
add
imul
lock
out
or
inc
push
add
cmp
repz
rcr
adc
jp
mov
(bad)
out
adc
ins
inc
sub
sbb
ret
aaa
fld
pop
fild
ja
jle
dec
add
lea
xchg
call
sbb
dec
dec
pop
mov
mov
pusha
xor
mov
movs
sti
scas
hlt
fsubr
(bad)
mov
mov
test
cmps
test
lea
pop
mov
jmp
fdivrp
les
inc
mov
xor
bound
popa
sahf
sub
mov
push
mov
(bad)
lods
inc
retf
mov
cs
pusha
mov
int
or
fdivr
cmp
mov
gs
scas
in
add
jge
mov
xchg
mov
call
ret
dec
popa
sub
cs
sar
cs
adc
and
sbb
dec
aaa
mov
aam
pop
fnstenv
cld
sbb
mov
mov
adc
in
clc
fdivr
jmp
add
pop
sbb
cmps
popa
int3
lock
xchg
ins
je
jl
out
sbb
add
add
and
ret
bound
(bad)
movs
cmc
dec
movs
push
sbb
sub
push
xor
jmp
and
(bad)
pop
pop
(bad)
leave
in
jne
(bad)
clc
pop
jl
jl
lods
daa
das
int3
dec
cmp
movhps
aaa
pop
push
pop
clc
movs
lods
rol
stos
cmps
or
xlat
leave
adc
push
dec
pop
cmps
inc
stos
scas
dec
cs
push
dec
push
sbb
scas
adc
sbb
dec
cwde
clc
ja
pusha
xchg
mov
push
adc
scas
clc
push
xchg
xor
and
fimul
stc
xchg
int3
xchg
outs
push
popf
out
mov
test
mov
rcl
not
retf
mov
in
cli
lods
sti
stos
(bad)
out
mov
add
adc
push
jge
pop
aas
jo
or
push
jae
push
sbb
pop
and
inc
sub
jbe
bound
dec
sub
jb
ins
sbb
popa
adc
push
sub
xor
imul
sbb
inc
add
pop
or
addr16
jns
dec
push
pushf
fstp
sbb
and
inc
and
pop
inc
sbb
push
sbb
aas
ja
imul
cmp
pop
adc
or
bound
sub
push
pop
jns
pop
sbb
add
or
mov
out
clc
mov
ror
test
mov
aam
jmp
cmc
cdq
in
test
(bad)
rcr
stc
xchg
call
mov
jecxz
cli
scas
cld
xchg
mov
ret
xchg
ret
scas
into
mov
xchg
aad
repz
in
out
in
fdiv
mov
lahf
sar
xchg
repnz
cdq
fidivr
shl
push
xor
sub
pop
or
or
inc
pop
es
and
lahf
loope
jmp
sahf
into
cdq
out
mov
xchg
in
(bad)
mov
scas
leave
mov
mov
out
repnz
aad
jmp
xchg
ret
cdq
hlt
lods
out
cli
call
es
ds
aaa
jbe
dec
or
jb
push
sub
jge
pop
cmp
or
inc
daa
pop
sub
cmp
sbb
pushf
retf
mov
fstp
lock
cli
call
sar
xor
jmp
(bad)
jmp
(bad)
stc
mov
(bad)
xlat
fwait
lds
cmc
xchg
rcl
shr
cmc
mov
(bad)
into
movs
out
repz
repz
scas
loope
call
loopne
aam
std
xchg
hlt
mov
xchg
enter
out
mov
nop
out
ret
mov
loope
sti
lods
ret
mov
(bad)
leave
xchg
aad
iret
mov
stos
retf
test
movs
jecxz
hlt
xchg
not
in
loop
ret
adc
les
in
ror
lods
enter
lock
mov
test
mov
(bad)
xchg
icebp
test
mov
mov
fcom
std
call
movs
jmp
mov
les
(bad)
xchg
shl
clc
mov
fwait
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fidiv
out
(bad)
xchg
(bad)
mov
jmp
mov
ret
sbb
add
push
cmp
jge
pop
pop
inc
push
pop
or
sub
jg
pop
or
push
sub
jo
bound
dec
sub
jno
push
jne
outs
or
adc
cmp
xor
pop
sub
jb
jae
push
or
addr16
add
pop
adc
dec
xor
push
cmp
pushf
out
out
std
mov
stos
clc
mov
scas
iret
mov
fdiv
mov
out
sar
mov
cwde
sbb
cmp
push
aaa
dec
and
dec
cmp
sbb
push
push
sbb
push
or
pusha
daa
inc
cmp
push
cmp
push
and
ds
sub
pop
push
jl
pushf
clc
mov
fnstenv
cli
xchg
jmp
sahf
int3
fwait
jmp
(bad)
les
mov
mov
cli
xchg
shl
adc
popf
stc
mov
fisubr
scas
shl
in
(bad)
scas
aam
leave
movs
fdiv
(bad)
shr
mov
scas
(bad)
scas
aam
leave
movs
fdiv
(bad)
std
(bad)
neg
(bad)
loopne
ret
mov
in
lock
repnz
in
cld
and
inc
or
add
push
adc
pop
aaa
push
cmp
dec
xor
ja
dec
adc
dec
xor
mov
jmp
test
(bad)
out
into
movs
jecxz
(bad)
scas
stc
mov
xchg
repz
fist
rcr
rcr
xchg
stc
and
(bad)
std
mov
dec
aaa
lahf
int3
test
scas
jmp
fidivr
sbb
jno
pushf
enter
add
jp
jo
dec
sub
pop
xor
inc
das
inc
pop
pushf
fadd
fst
sbb
cmp
inc
pop
cmp
gs
push
adc
add
js
push
adc
ss
sub
and
popf
icebp
scas
les
repnz
out
call
retf
fnstsw
repnz
clc
mov
rol
not
shl
(bad)
cwde
test
pop
adc
add
sub
je
push
adc
jle
jne
fs
aaa
pop
aaa
jno
push
or
inc
xor
xor
jg
popa
or
imul
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
dec
xor
push
cmp
pushf
out
out
std
mov
test
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
imul
inc
add
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
movs
fsubr
(bad)
movs
fdiv
in
(bad)
scas
fimul
sti
lods
retf
mov
pushf
in
mov
mov
cmc
cwde
aam
repnz
jmp
in
ror
(bad)
retf
mov
mov
lods
shr
mov
test
mov
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
mov
fstp
into
test
fwait
not
lds
ror
rcr
in
rcr
retf
movs
shr
add
sbb
or
pop
adc
push
pusha
push
jge
arpl
push
sub
ins
sub
pusha
sub
or
pop
ds
dec
or
jae
imul
inc
sub
inc
push
push
cmp
push
inc
or
jb
js
push
xor
inc
pop
xor
das
inc
outs
add
sbb
inc
xor
dec
ss
adc
or
jle
inc
sub
push
adc
jo
push
inc
adc
dec
sub
inc
pop
fs
jae
imul
inc
das
outs
add
dec
cmp
inc
cmp
push
sub
jns
jp
dec
and
pop
sbb
imul
xor
dec
add
jne
jne
jg
inc
sub
aas
push
push
jb
gs
jg
pop
push
jl
addr16
inc
add
push
aaa
push
cmp
popf
in
loop
mov
mov
cmc
mov
push
ins
sbb
xor
es
push
and
outs
cmp
push
xor
sub
pusha
sbb
adc
pop
sub
push
add
ins
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
arpl
inc
cmp
pop
sbb
dec
cs
pop
cs
pcmpeqd
je
push
pop
dec
add
outs
xor
dec
cmp
sbb
arpl
ss
or
jae
pop
cmp
sub
push
push
sbb
bound
push
aaa
push
sub
pushf
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
loopne
std
cdq
jecxz
call
lods
xlat
mov
repnz
lods
fimul
sti
lods
retf
lahf
repz
xchg
mov
jmp
les
lds
clc
sahf
aad
retf
cmps
rcr
cld
mov
scas
(bad)
scas
out
test
fwait
int3
sahf
iret
mov
scas
iret
mov
nop
fdivr
loopne
jmp
stos
ret
mov
rol
repnz
nop
in
xchg
cli
xchg
lock
jmp
mov
xchg
int
fadd
ret
mov
in
mov
sahf
stc
xchg
sti
test
fsub
stc
mov
iret
and
cmc
lods
in
rcr
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
and
jle
ins
or
pop
aaa
dec
daa
dec
pcmpgtw
jns
arpl
inc
or
jle
dec
or
jl
jle
popf
aam
ret
test
and
clc
mov
mov
xchg
fnstenv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
stc
call
shl
shl
mov
movs
les
neg
pushf
into
lahf
jmp
cdq
push
xchg
sbb
dec
push
and
jns
push
add
sub
je
pop
sbb
push
xor
dec
push
push
data16
sub
jp
jne
push
sbb
popf
aad
cli
mov
shr
xchg
fstp
jmp
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
xor
pop
pop
sub
cs
inc
cs
xor
adc
xor
jg
push
add
pop
xor
pop
pop
sub
cs
sub
jb
push
adc
push
add
imul
inc
and
pop
adc
push
inc
and
stc
scas
sbb
push
xor
imul
dec
and
dec
or
jo
push
dec
pop
dec
sub
and
sbb
jae
push
xor
jge
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
popf
in
sbb
cmp
pop
inc
pop
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
and
jle
ins
or
pop
aaa
dec
daa
dec
pcmpgtw
jns
arpl
inc
or
jle
dec
or
jl
jle
popf
aam
ret
test
and
clc
mov
mov
xchg
fnstenv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
(bad)
sahf
cld
nop
jecxz
(bad)
mov
fild
call
cdq
shl
loope
shl
repz
xchg
lds
in
call
scas
shl
xchg
xchg
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
fild
mov
loopne
jecxz
sti
mov
mov
std
cmps
jmp
mov
nop
in
movs
out
test
mov
aam
call
mov
int3
cdq
out
mov
xchg
out
(bad)
cmps
(bad)
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
mov
xchg
shl
lds
call
sahf
int3
cdq
in
mov
leave
and
ret
mov
retf
movs
into
cmps
out
stc
mov
fist
out
test
mov
aam
call
fdivr
stc
mov
xchg
hlt
mov
fst
fistp
shr
retf
xchg
shl
jb
pop
push
jg
push
push
sub
imul
sbb
add
jbe
push
and
popa
cmp
dec
cmp
arpl
bound
inc
cmp
push
add
push
sub
pusha
sbb
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
jb
imul
je
dec
adc
push
pop
sub
dec
xor
pop
cmp
adc
dec
cmp
adc
inc
add
adc
push
add
push
xor
sbb
push
xor
dec
push
push
data16
sub
jp
jne
push
sbb
popf
aad
cli
mov
shr
xchg
fstp
jmp
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
add
pop
xor
pop
and
dec
or
jle
lahf
iret
mov
push
xor
outs
and
popf
in
loope
rcr
xchg
cmc
mov
(bad)
mov
stos
cli
mov
mov
xchg
div
shr
xchg
call
scas
icebp
mov
fdiv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
(bad)
sahf
cld
nop
jecxz
(bad)
mov
fild
call
cdq
shl
loope
shl
repz
xchg
lds
in
call
scas
shl
xchg
xchg
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
mov
xchg
shl
lds
ror
mov
int3
test
mov
or
imul
jge
pop
push
inc
or
ins
xor
mov
leave
cmps
shl
mov
mov
ret
lods
sbb
lahf
hlt
mov
mov
mov
jmp
loopne
shl
adc
repz
test
fdiv
cmc
xchg
out
test
stos
into
mov
cwde
les
call
nop
out
xchg
sti
xchg
not
int
pop
jne
imul
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
arpl
inc
add
dec
sbb
jno
jno
push
sbb
and
inc
sub
jae
arpl
dec
sub
xor
ins
sbb
pusha
adc
xor
pop
aas
inc
sub
xor
or
dec
push
push
sbb
imul
push
sbb
xor
inc
and
bound
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
and
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
les
jno
sub
and
jle
mov
sbb
int3
ds
jmp
out
and
ja
aam
call
jge
jmp
cmc
fsub
lods
mov
adc
pop
lods
add
add
aaa
mov
(bad)
sahf
pop
cmps
in
loope
movs
retf
xchg
xchg
lods
pushf
push
mov
jecxz
mov
xor
mov
pop
std
out
push
aad
xor
in
mov
adc
aad
cmp
and
push
add
scas
add
xchg
dec
in
cmps
int3
ror
xchg
lock
outs
pop
mov
dec
out
hlt
jmp
(bad)
fstp
sahf
cmp
mov
and
mov
(bad)
scas
mov
or
mov
fdivr
fsub
fs
adc
cdq
inc
enter
shl
xchg
les
ret
push
xor
inc
ja
push
xor
and
mov
xor
outs
or
jg
xor
dec
fwait
leave
cmp
cmp
cmps
retf
adc
pop
es
fsub
jg
aas
pop
std
mov
push
test
jge
(bad)
or
sti
inc
icebp
cmps
sub
dec
movs
xchg
(bad)
cmps
out
mov
fnsave
retf
gs
pop
dec
push
adc
cmc
jbe
enter
sub
ret
imul
push
cmp
mov
mov
jmp
sub
leave
mov
or
xchg
mov
adc
sahf
sbb
es
xchg
jecxz
jecxz
cmps
ret
xchg
push
pop
add
pop
repnz
dec
inc
push
arpl
mov
out
or
xchg
or
add
xor
mov
shl
adc
addr16
ror
xchg
xor
loope
xchg
lahf
fs
fnstsw
popf
(bad)
inc
test
add
inc
dec
jge
pop
into
jbe
jbe
and
mov
(bad)
aad
je
mov
shl
push
(bad)
(bad)
cmp
and
sbb
and
retf
mov
icebp
jmp
push
cmps
dec
sbb
cmc
sbb
mov
pop
dec
test
bound
jno
dec
leave
or
fsubr
push
outs
cmps
popf
sar
imul
jno
jbe
mov
add
mov
xchg
aad
cld
mov
add
sub
pop
mov
pop
test
add
ret
movs
pop
add
sub
sbb
push
mov
mov
xor
or
and
adc
push
outs
xchg
(bad)
fild
data16
pop
jnp
add
xor
jp
outs
xchg
(bad)
mov
lds
aam
jns
sub
sbb
ret
sub
add
mov
push
add
daa
jmp
inc
mov
adc
inc
mov
dec
fisubr
fisubr
jnp
test
addr16
push
jb
mov
xchg
push
adc
retf
enter
mov
lahf
pop
dec
xchg
jbe
jae
out
aad
jmp
dec
adc
jecxz
add
xchg
sub
mov
pop
cmp
pop
repnz
jmp
mov
mov
out
jbe
pop
repz
in
cmc
xor
repnz
jo
mov
mov
push
mov
shr
ja
in
mov
ins
sub
mov
mov
jae
and
les
xor
or
dec
xor
test
add
push
outs
sbb
stc
out
scas
call
imul
xchg
mov
in
mov
ins
loop
mov
test
fmul
stc
outs
mov
outs
inc
pop
push
mov
fld
push
jmp
inc
mov
mov
xchg
cs
retf
dec
pop
js
rol
push
jecxz
(bad)
cmc
jle
cs
jns
jo
inc
stos
or
shr
mov
dec
jle
mov
xchg
push
mov
into
xor
das
mov
sahf
jecxz
les
fsubr
ds
js
mov
data16
sub
std
shl
add
push
pusha
in
xchg
push
mov
add
scas
jne
xchg
push
rol
pop
les
mov
adc
mov
push
add
aas
add
add
cmp
pop
sub
ret
js
aad
inc
int3
and
mov
das
or
iret
jbe
leave
mov
data16
icebp
daa
push
xor
xor
scas
fidiv
js
pop
dec
dec
jmp
jmp
sbb
cmc
inc
pop
jle
cs
sub
jmp
jecxz
push
xchg
icebp
mov
jle
adc
gs
iret
mov
fiadd
shl
ror
pop
in
jae
xchg
xchg
rol
or
stos
jno
jmp
ins
inc
leave
out
sahf
test
dec
mov
adc
sbb
pop
cmp
arpl
popa
mov
or
js
or
cmp
pop
ret
and
in
inc
jo
or
cli
arpl
(bad)
out
cmp
pusha
arpl
rep
fcmove
sbb
adc
mov
xchg
inc
jns
stc
imul
pop
int
aam
aad
aas
ror
jp
dec
cmp
aam
hlt
dec
push
jne
in
lock
add
mov
int
jge
outs
push
in
dec
pop
das
sub
mov
stos
or
in
dec
xor
stos
push
add
push
in
shl
mov
test
sub
xchg
push
push
sbb
add
ret
(bad)
out
xor
ja
pop
inc
(bad)
popa
arpl
push
mov
xchg
ret
cmp
mov
add
int
scas
(bad)
clc
jmp
cmp
push
jmp
dec
fstp
xor
push
fwait
je
sbb
enter
ja
mov
push
adc
pop
adc
lock
stos
loop
pop
aas
xchg
push
loop
test
or
push
push
js
test
xchg
mov
fidiv
dec
(bad)
out
and
and
push
xchg
scas
dec
xchg
jbe
shld
rcr
(bad)
mov
and
jo
idiv
xlat
jle
in
fadd
sub
pop
pop
das
stc
mov
movs
imul
mov
cmps
fldcw
(bad)
jae
jmp
jmp
sti
and
dec
test
inc
repz
enter
shl
cdq
(bad)
out
xor
jge
inc
mov
sbb
xor
lods
inc
pop
clc
mov
ds
cli
jnp
mov
mov
mov
(bad)
clc
xor
xor
sbb
aaa
retf
cdq
or
pop
mov
fiadd
xchg
cmp
xchg
and
movs
xor
inc
mov
or
int
fidiv
out
je
mov
cld
enter
push
add
iret
scas
leave
inc
stc
inc
sub
inc
and
out
popf
addr16
in
sbb
les
test
lods
add
jno
add
xor
mov
inc
cdq
aas
es
adc
and
mov
cmc
inc
mov
mov
mov
push
xchg
mov
xor
leave
movs
mov
sbb
jo
push
cmp
push
sbb
mov
jbe
dec
jb
daa
pop
popf
mov
and
idiv
stos
pop
jnp
sbb
xchg
jmp
fs
sub
int
call
ja
fisubr
pop
or
mov
pop
push
out
jb
imul
mov
arpl
mov
push
fs
out
xchg
dec
mov
stc
test
mov
mov
pusha
nop
in
into
dec
loopne
push
leave
sbb
jo
push
(bad)
daa
jmp
and
jns
mov
jecxz
icebp
push
fidivr
call
inc
mov
int3
mov
hlt
les
xor
mov
sbb
repz
aad
fwait
and
hlt
test
cmp
loope
jl
ds
aad
xchg
adc
jp
clc
ret
xchg
cmp
pop
dec
out
xchg
jns
ret
int
push
mov
cmps
scas
fnstcw
adc
mov
adc
adc
sub
cmc
pusha
push
push
xchg
jge
loop
sbb
mov
mov
and
mov
push
xchg
scas
jb
pop
fbld
cmp
xor
inc
adc
cwde
mov
dec
xlat
dec
xchg
lahf
adc
jge
jbe
xchg
cmp
popa
scas
sub
int3
mov
pop
or
lahf
sub
cdq
mov
pop
pop
pop
add
repz
dec
or
xor
and
pusha
xor
sbb
mov
ja
or
stc
push
xchg
in
lea
shl
int
mov
jbe
(bad)
das
inc
sub
icebp
inc
xor
xchg
mov
jo
jnp
shr
cmp
jne
sub
dec
lea
or
mov
ins
retf
cld
add
jae
jae
push
xchg
pop
fnstenv
aad
push
je
mov
dec
rcl
loopne
inc
prefetch
jge
lock
and
adc
sbb
sub
fiadd
(bad)
xlat
in
pop
xchg
cmc
lahf
lods
fisubr
loopne
jmp
push
mov
or
pop
(bad)
aam
push
pop
jmp
sti
or
and
imul
xchg
jnp
mov
cmp
cmp
cwde
sbb
in
pop
and
ret
jno
(bad)
aad
add
fimul
cwde
ret
rcr
sbb
mov
push
call
mov
scas
loope
(bad)
mov
mov
xor
ins
pop
les
out
cmp
xchg
test
lds
sub
cmc
add
pop
xor
bound
and
inc
adc
jns
adc
xchg
sub
mov
cmc
mov
dec
movs
mov
mov
sub
pop
mov
sbb
sbb
lods
(bad)
mov
pop
mov
outs
out
xchg
sti
and
mov
frstor
or
dec
cli
mov
pop
mov
cmp
xchg
ret
adc
je
jb
shl
mov
mov
jo
adc
ret
je
pop
push
adc
lds
jnp
mov
outs
mov
push
push
and
cmps
sub
push
inc
xor
pop
call
in
sbb
inc
sub
aaa
xor
xor
mov
mov
imul
hlt
adc
xchg
lods
push
repnz
call
leave
adc
and
fs
clc
fwait
cmp
inc
jg
cli
xchg
arpl
int
or
mov
or
cmp
sub
jmp
xchg
ja
cmc
fmul
fwait
icebp
or
addr16
popa
movs
jmp
into
adc
hlt
mov
gs
mov
int
js
leave
cwde
mov
sahf
sub
clc
xchg
pop
mov
test
jge
cmp
inc
or
out
dec
or
mov
sbb
adc
gs
cmp
test
pop
imul
mov
dec
out
cmp
into
movs
test
mov
retf
add
pop
mov
jno
jge
les
out
imul
scas
sub
ins
and
jne
cdq
adc
dec
push
iret
xor
mov
dec
pop
mov
sub
stc
aas
xor
loope
pop
es
mov
pop
pop
inc
push
mov
mov
pop
xchg
mov
mov
xlat
dec
ins
sub
aad
mov
sub
inc
rcr
jecxz
sbb
ror
push
dec
aad
xor
mov
push
or
fsubr
pop
sbb
(bad)
outs
sub
test
aaa
adc
and
cmp
cmp
add
loope
jmp
(bad)
sub
and
mov
in
jg
xor
mov
test
(bad)
in
xor
fwait
pop
and
inc
sub
cdq
cmp
sbb
and
or
inc
addr16
mov
fisttp
retf
cmp
stos
(bad)
cli
xchg
ror
sub
fmul
jo
dec
push
inc
dec
jmp
fs
fiadd
pushf
lods
cmps
adc
dec
sbb
lea
mov
fistp
pop
mov
out
and
loopne
add
nop
pop
out
pop
xor
into
fnstenv
adc
cmp
jge
retf
ins
and
sub
gs
std
int
rol
pusha
cwde
xor
mov
jecxz
add
leave
push
push
int3
jge
add
and
sbb
add
mov
xchg
mov
fisttp
dec
pop
cli
pop
iret
jg
and
push
hlt
adc
mov
mov
lock
or
cdq
out
fdiv
cld
xchg
or
aad
jnp
add
sub
sahf
sbb
aad
xor
addr16
scas
repnz
mov
lea
and
arpl
aam
pop
int3
daa
(bad)
mov
sub
push
jg
mul
fs
mov
pop
mov
stc
push
in
loopne
push
std
sbb
sbb
(bad)
imul
ds
lea
fimul
rcl
pop
xchg
ss
xchg
adc
jmp
or
loopne
jmp
cmp
jbe
cmp
jmp
cmp
dec
jns
push
cmps
test
sti
cmp
scas
add
add
xor
vmulps
sbb
fdivr
ss
shl
lock
cmp
xor
dec
mov
pop
jmp
bound
jl
push
clc
cmp
mov
xchg
mov
mov
leave
jg
lahf
adc
mov
in
xchg
dec
or
dec
jne
adc
xchg
out
mov
pop
jns
mov
add
sbb
mov
cdq
sbb
jno
adc
inc
stc
cmps
push
push
dec
xchg
(bad)
xor
stc
fidiv
mov
xor
mov
xlat
push
mov
mov
iret
jne
mov
int3
mov
scas
sbb
jge
sbb
popa
sbb
arpl
outs
mov
or
mov
ins
mov
ins
iret
cmc
jno
mov
pop
bound
sti
dec
(bad)
xchg
loope
(bad)
jae
pop
adc
mov
test
cli
movs
ds
xorps
jg
mov
stos
fdivr
loope
push
shl
mov
xor
dec
dec
dec
push
cmp
add
mov
inc
sbb
js
div
mov
jae
fadd
mov
(bad)
ficom
mov
aad
(bad)
stos
(bad)
xchg
arpl
fadd
push
xor
mov
pop
inc
gs
mov
jns
ins
jno
adc
jns
test
fs
retf
jns
popf
xor
or
and
out
shl
jb
movs
inc
xlat
xor
int
pop
lds
xchg
icebp
xor
inc
xor
fnstcw
adc
mov
nop
and
push
sub
fld
push
mov
and
pop
and
cmp
stos
aam
lds
sbb
int3
imul
enter
dec
into
iret
pop
push
ins
xor
imul
xchg
mov
inc
sti
add
sub
mov
sti
dec
repnz
ins
pop
mov
enter
add
pusha
repnz
ret
fld
pusha
mov
into
out
mov
add
pop
mov
pop
and
add
call
repz
xchg
adc
cmp
pop
jp
or
mov
push
iret
adc
fwait
lods
or
mov
xlat
push
loop
mov
packsswb
jmp
imul
push
and
jg
mov
aas
mov
add
sbb
in
data16
dec
aaa
xor
or
jo
test
mov
dec
sbb
mov
mov
test
xchg
jae
or
mov
sub
push
int
icebp
mov
pavgb
cmps
(bad)
fwait
test
xchg
jae
inc
out
adc
cmp
inc
sti
fwait
jb
jbe
cmp
dec
and
xor
sbb
fsub
in
je
in
mov
pop
cmp
sbb
adc
enter
pop
pop
mul
jns
scas
hlt
xchg
xor
xchg
mov
in
mov
inc
adc
adc
sub
push
outs
imul
clc
pop
cmp
cmps
jmp
loop
xor
popa
inc
dec
repnz
pushf
je
adc
sub
addr16
popf
pop
imul
and
dec
mov
sahf
adc
push
mov
cmps
mov
stc
mov
push
dec
fadd
test
call
inc
lods
ins
inc
add
cmp
stos
lods
and
andnps
cmp
or
push
adc
mov
adc
jmp
sbb
dec
(bad)
scas
das
mov
shl
jecxz
cmps
sbb
mov
cld
add
or
outs
xchg
jmp
inc
cli
cmp
sbb
out
mov
push
and
retf
loope
jno
pop
dec
sbb
push
cmp
lods
push
or
and
cmp
mov
fisubr
adc
test
dec
call
(bad)
cs
push
pop
or
retf
loopne
jg
clc
and
popa
pushf
ret
bound
sub
pop
(bad)
hlt
xlat
movs
mov
jg
inc
movs
dec
call
sti
popw
jnp
mov
fist
out
loop
ret
daa
data16
(bad)
pop
bound
inc
cli
dec
jmp
fwait
nop
stc
push
ins
cli
(bad)
loop
add
mov
int3
xchg
call
js
rcl
adc
push
add
pop
and
or
dec
sub
or
inc
xchg
dec
jg
dec
jmp
das
(bad)
aas
rol
ficomp
xchg
fiadd
repnz
imul
or
cmp
or
jl
cwde
or
popf
adc
mov
push
sbb
cmc
test
lahf
call
fs
js
retf
jbe
sbb
test
test
sub
clc
hlt
imul
rcl
sbb
and
leave
xchg
xlat
call
or
and
cs
and
leave
pop
stos
int
push
xchg
bnd
enter
xor
jg
ja
fstp
add
xor
leave
mov
aam
jno
sub
ds
aad
jl
inc
test
and
add
jb
cmp
mov
mov
inc
and
les
and
out
add
mov
retf
jno
loope
data16
sub
dec
pop
cmp
mov
popf
mov
push
clc
dec
adc
pop
rcr
iret
icebp
movs
iret
mov
mov
mov
or
or
push
dec
sub
(bad)
mov
daa
sub
mov
push
shr
inc
popa
movs
jne
das
xchg
xor
inc
fimul
shr
cld
ins
test
in
mov
cmp
call
dec
enter
icebp
pop
push
into
pop
cmp
test
or
popf
fistp
mov
cdq
aad
in
add
out
and
xor
pop
xchg
mov
mov
push
in
dec
xor
and
pop
ficomp
dec
or
ret
jnp
ja
sahf
out
xchg
(bad)
push
loope
leave
xor
inc
push
adc
jl
mov
inc
rcr
push
and
daa
xor
aad
dec
iret
inc
cmovp
mov
pop
ja
mov
call
pop
dec
xchg
out
push
add
(bad)
movs
loopne
shl
jl
popf
xchg
repz
pop
outs
in
cld
sub
push
repz
int3
popf
xor
inc
cmps
dec
cmp
into
and
les
in
and
and
movs
jne
sub
jae
aam
in
inc
movs
out
jmp
mov
stos
push
mov
cmp
add
xlat
jle
repnz
pause
jl
jle
js
cmps
push
mov
inc
pop
or
xor
bound
sbb
xchg
pop
mov
movs
pop
cmp
mov
cmp
je
scas
mov
mov
sti
pushf
add
xchg
push
add
add
xchg
adc
sbb
sbb
push
sbb
xor
ret
sbb
sbb
or
ins
or
or
neg
sbb
xchg
or
sbb
xchg
or
outs
fcom
sbb
sbb
or
adc
sbb
sbb
or
jb
sbb
sbb
(bad)
sbb
xor
push
add
sbb
add
mov
sbb
sbb
and
or
outs
loopne
sbb
sbb
dec
xor
push
push
or
add
xor
jb
sbb
sbb
push
outs
mov
sbb
sbb
sbb
inc
xor
pop
or
xor
or
xor
or
or
xor
xor
cmp
add
or
xor
or
xor
or
or
xor
xor
cmp
sbb
xchg
adc
sbb
leave
sbb
add
push
add
add
xor
jb
sbb
sbb
add
adc
sbb
sbb
inc
xor
or
add
push
or
add
and
sbb
sbb
xchg
cmp
sbb
push
xchg
add
sbb
xchg
add
outs
loopne
sbb
sbb
adc
add
cmp
pop
cmp
dec
or
outs
adc
cmp
adc
add
sbb
and
add
or
cmp
adc
add
sbb
push
or
outs
or
cmp
push
or
or
pop
cmp
outs
add
push
sbb
sbb
(bad)
sbb
xor
popf
adc
sbb
xchg
adc
sbb
add
dec
sbb
or
sbb
sbb
sbb
sbb
xchg
or
cmp
add
dec
sbb
or
sbb
sbb
sbb
sbb
xchg
or
cmp
or
outs
dec
or
sbb
sbb
arpl
sbb
xchg
or
cmp
or
outs
jno
sbb
sbb
sbb
sbb
xchg
or
cmp
add
sbb
or
sbb
sbb
arpl
sbb
xchg
or
cmp
pop
xor
popf
sbb
sbb
xchg
adc
sbb
cmp
jecxz
add
dec
sbb
sbb
or
or
sbb
jb
sbb
arpl
sbb
adc
xor
cmp
add
xor
push
aas
or
jb
sbb
xor
cmp
ret
sbb
sbb
sub
sbb
sbb
adc
sbb
sbb
adc
sbb
sbb
push
sbb
sbb
adc
sbb
inc
sbb
pop
dec
xchg
stos
or
ja
jae
ja
lds
pop
dec
adc
inc
pop
dec
adc
inc
mov
adc
mov
adc
xchg
stos
inc
mov
cmp
retf
cmp
inc
test
adc
pop
dec
xchg
stos
or
xor
pop
dec
aaa
sbb
push
sbb
adc
nop
sbb
xor
xor
ret
adc
xor
adc
ret
sbb
sbb
sbb
push
sbb
sbb
or
sbb
sbb
sbb
xor
ss
xor
pop
sbb
sbb
sbb
sbb
xor
adc
ret
sbb
sbb
sub
sbb
sbb
pop
xor
aaa
push
sub
sbb
or
inc
sbb
sbb
sbb
and
jg
sbb
sbb
jle
sbb
sbb
sbb
mov
xor
or
adc
ins
jb
sbb
or
ret
xor
jnp
sbb
cmp
and
adc
and
sbb
adc
or
xor
ret
sbb
add
sbb
or
sbb
sbb
sbb
sub
sbb
or
movs
or
sbb
or
pop
aaa
push
sub
sbb
or
ror
sbb
or
pop
aaa
push
sub
sbb
or
ror
sbb
jecxz
aaa
push
or
push
popf
adc
adc
pop
xor
aaa
push
sub
sbb
or
adc
sbb
adc
sbb
sbb
je
sbb
sbb
inc
push
sbb
or
and
sbb
sbb
or
sbb
jecxz
pop
sbb
int
sbb
sbb
sbb
nop
sbb
sbb
or
ins
push
xor
push
pop
sbb
sbb
sbb
arpl
sbb
nop
xor
outs
jae
sbb
and
push
pop
sbb
add
retf
xor
push
push
cmp
nop
pop
sbb
or
or
xor
or
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
sbb
sbb
add
bndldx
nop
xor
outs
jae
sbb
or
or
sbb
sbb
xor
or
sbb
sbb
or
add
xor
push
nop
add
xor
push
or
sbb
sbb
or
cmp
add
xor
sbb
xor
push
or
sbb
sbb
sbb
or
cmp
add
xor
sbb
adc
sbb
sbb
sbb
sbb
sbb
nop
xor
outs
jae
sbb
cmp
retf
push
or
retf
xor
push
adc
or
or
push
pop
push
push
and
sbb
jb
sbb
or
add
sbb
or
add
retf
xor
push
or
or
jg
or
(bad)
or
nop
pop
sbb
sbb
or
or
xchg
stos
xor
nop
sbb
or
retf
or
or
xchg
stos
nop
xor
outs
jae
sbb
adc
or
retf
xor
or
movs
add
adc
xor
outs
jae
sbb
add
push
or
push
push
or
or
and
loop
or
xor
push
adc
sbb
sbb
add
or
pop
nop
xor
outs
jae
sbb
pop
add
sbb
sbb
sbb
push
adc
or
retf
xor
or
sbb
sbb
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
popf
push
sbb
cmp
push
add
sbb
adc
pop
xor
cmp
sbb
sbb
pop
push
add
add
sbb
jb
sbb
sbb
add
sbb
popf
push
sbb
sbb
xor
adc
ret
push
or
xor
ret
pop
or
adc
sbb
sbb
sbb
fistp
sbb
sbb
push
sbb
nop
xlat
repnz
mov
outs
imul
jb
outs
jle
outs
xor
outs
jb
outs
jle
dec
js
jns
outs
xor
outs
jno
jg
cmp
je
jae
sub
sub
xor
push
js
imul
push
push
js
dec
jb
js
and
sub
sub
sub
sub
and
outs
imul
jb
outs
jle
outs
xor
jae
je
js
js
jb
outs
jle
dec
js
pop
sbb
sbb
sbb
pop
pop
dec
adc
sbb
sbb
jl
je
jae
jnp
je
jno
js
sbb
sbb
nop
push
aad
or
pop
sub
push
dec
pop
pop
inc
pop
arpl
jp
arpl
push
dec
sub
je
jnp
jne
dec
and
pop
sbb
gs
sub
pop
cmp
adc
push
pusha
and
in
xchg
cli
in
xchg
sbb
movs
hlt
jb
out
test
fild
adc
dec
cmps
outs
mov
xchg
call
adc
and
jmp
fiadd
or
push
pop
outs
daa
dec
xor
jo
test
mov
loopne
mov
sub
inc
and
push
push
cmp
jbe
ins
push
inc
xor
push
jle
inc
adc
inc
jo
mov
into
scas
int3
mov
es
out
mov
xchg
fimul
aad
int
ret
stos
out
mov
call
scas
lds
mov
stos
mov
pop
adc
bound
je
xchg
imul
ss
aaa
je
mov
(bad)
xchg
fidivr
(bad)
mov
fs
mov
cli
cmc
arpl
dec
cs
xor
cs
pop
adc
push
add
xor
pop
ja
push
sub
push
or
push
sub
inc
and
jl
jae
jge
inc
sub
push
adc
ins
and
and
push
xor
jl
outs
add
outs
pop
push
cmp
inc
add
push
push
adc
dec
xor
pop
cmp
sub
add
jp
inc
inc
add
adc
push
cmovbe
xchg
cmps
call
popf
stc
mov
retf
jg
push
mov
mov
mov
xor
pop
cli
pop
mov
inc
aaa
pop
sub
ja
jbe
push
adc
push
ret
outs
(bad)
cmp
es
sbb
cmp
ds
and
imul
das
dec
push
push
push
add
and
pop
and
dec
sub
mov
js
jbe
dec
and
pop
sbb
das
jl
pop
jg
dec
xor
pop
cmp
fs
adc
nop
dec
sub
sub
jns
js
mov
arpl
add
mov
jmp
nop
loopne
lds
fadd
jmp
cdq
shl
xchg
call
(bad)
fs
enter
and
push
sbb
and
jmp
ror
in
rol
push
loope
pop
cmp
add
fsub
mov
and
gs
mov
xor
inc
adc
lods
(bad)
mov
mov
jl
fwait
cmc
(bad)
out
add
push
data16
rcl
leave
stos
fisttp
test
xchg
inc
cs
cmp
push
cmp
cmc
sbb
jns
jb
(bad)
sti
scas
call
adc
fiadd
dec
xor
mov
xchg
fadd
dec
push
dec
cmp
(bad)
cmp
stos
lahf
std
mov
dec
and
jmp
or
imul
or
xchg
test
pop
push
ja
dec
add
(bad)
mov
jae
retf
nop
repz
mov
loop
lds
xor
xchg
jmp
adc
xor
cmp
jbe
adc
fidiv
(bad)
cmc
mov
lahf
lds
pop
or
xor
popa
sbb
xchg
rol
out
mov
sbb
int
fmul
clc
call
xor
dec
add
push
cmp
das
push
add
pop
dec
xor
pop
push
scas
jmp
imul
add
out
out
jl
imul
cmp
fidivr
out
mov
cmps
fisub
ins
or
push
adc
lock
xchg
pushf
clc
lahf
jnp
gs
add
retf
dec
loope
pcmpeqw
pop
adc
fcom
and
mov
xchg
fdiv
cmp
cmp
clc
pusha
and
rcl
dec
and
sub
out
xchg
rcl
jns
jae
jae
mov
lods
repz
arpl
mov
icebp
cwde
(bad)
clc
mov
or
push
iret
push
or
jnp
out
jmp
adc
dec
or
mov
sahf
test
adc
in
out
cmps
ret
xchg
cld
popf
les
ins
push
int3
mov
jb
pop
adc
xor
enter
or
and
sub
sub
sbb
and
pushf
leave
test
jae
test
push
mov
out
inc
sub
rol
xlat
mov
add
(bad)
in
adc
xlat
bound
fsub
ja
pop
es
test
mov
outs
or
adc
jle
fistp
jbe
outs
adc
pop
sbb
mov
mov
pop
and
xor
cwde
fiadd
push
push
inc
sbb
cld
orps
sub
or
push
cmps
xlat
mov
mov
es
mov
dec
or
dec
adc
jne
cmp
push
push
jmp
cmp
jmp
test
aaa
pop
cmp
adc
jns
call
and
mov
mov
or
and
in
pause
rcl
call
(bad)
xchg
fisttp
jb
iret
sbb
pop
adc
fs
mov
mov
jmp
int
mov
dec
xor
inc
cmp
pop
scas
cmps
out
cmp
mov
mov
imul
or
mov
fistp
and
sbb
in
and
push
or
lds
enter
leave
stos
sar
pop
sbb
icebp
jno
pop
or
inc
push
pop
adc
push
ss
cmp
inc
xor
mov
out
popa
and
cmp
push
sub
adc
or
repnz
ins
jmp
mov
pop
push
pop
cmp
jno
pop
out
fistp
je
fwait
icebp
sahf
dec
cmovge
adc
jbe
fst
jb
jle
dec
out
repz
lods
out
mov
add
inc
adc
dec
sbb
sbb
inc
(bad)
or
pop
xor
and
jmp
loop
(bad)
push
pop
int
sub
sbb
cli
xchg
cmps
call
fs
push
pop
dec
daa
inc
xor
add
inc
add
inc
jecxz
imul
cdq
sar
js
and
mov
stos
aad
(bad)
mov
jle
inc
aaa
dec
in
(bad)
cmc
popf
or
dec
push
mov
out
hlt
popf
xchg
mov
loope
clc
popf
in
cld
mov
pop
call
mov
icebp
sub
xor
(bad)
mov
mov
mov
adc
cs
sub
ins
movs
lds
gs
jge
call
in
dec
sub
jne
neg
cdq
rol
xor
jne
dec
push
je
fs
(bad)
jbe
imul
rcr
aas
iret
addr16
repnz
jns
ja
das
inc
cmp
mov
ins
das
ja
add
add
pop
cmp
rol
pop
cmp
push
cmp
adc
pop
ins
push
inc
aaa
and
iret
call
xor
adc
cwde
repnz
mov
ins
sbb
pusha
mov
jp
cdq
clc
or
mov
mov
mov
jl
push
inc
and
ret
xchg
test
sub
in
sub
adc
mov
enter
out
mov
cwde
mov
js
retf
popf
cmc
adc
push
clc
stos
ficom
es
xor
shr
mov
sub
mov
mov
cdq
sar
ins
sub
(bad)
retf
cwde
cli
mov
mov
in
cmps
int
into
mov
hlt
mov
mov
adc
push
jns
mov
les
xor
fild
xor
push
lds
jo
sbb
das
js
add
pop
sbb
outs
jecxz
das
dec
jmp
fidiv
inc
or
pop
sub
into
mov
int3
pop
sub
mov
nop
in
test
dec
push
pop
xchg
rol
dec
sub
shl
js
jns
in
popf
aad
jnp
mov
mov
and
jno
ret
cdq
cli
and
popf
mov
hlt
mov
xchg
icebp
fwait
lock
xlat
mov
xchg
mov
stos
aam
outs
pop
jns
mov
jbe
fnstcw
xchg
mov
adc
dec
hlt
nop
lds
sub
dec
scas
neg
and
ja
sbb
pop
push
inc
fbld
dec
adc
in
and
stos
fdiv
pusha
add
adc
jno
repnz
pushf
fistp
cmps
inc
(bad)
xchg
jmp
xchg
nop
cmc
mov
or
mov
push
or
sbb
fnstsw
inc
cs
or
scas
movs
lock
add
and
gs
repz
sub
adc
aad
aam
into
sub
inc
fsub
adc
retf
add
je
jne
pop
cwde
iret
xchg
mov
xor
push
cmp
scas
(bad)
xchg
icebp
(bad)
loope
jmp
jecxz
enter
push
jns
scas
out
in
sahf
inc
push
jne
jno
repz
add
stc
xchg
in
push
or
cli
jge
xor
pop
mov
xchg
test
into
mov
lahf
test
inc
shr
jp
imul
dec
out
mov
fidiv
test
daa
pop
sbb
into
aad
xlat
push
mov
lods
(bad)
or
sub
mul
or
cmp
sub
jne
fwait
out
mov
call
loope
out
xchg
jb
jmp
jmp
fiadd
xchg
mov
push
ins
sub
sar
das
pop
pop
jmp
push
neg
imul
mov
test
lods
into
push
jno
or
and
cwde
repnz
mov
dec
jecxz
push
sbb
or
inc
or
(bad)
and
pop
xor
out
fs
fmul
inc
sub
mov
cmps
(bad)
pslld
dec
sub
je
push
mov
aaa
jnp
push
lods
sar
push
sbb
daa
lock
repz
cmps
out
push
add
leave
xchg
mov
std
fwait
sar
dec
daa
dec
adc
es
xchg
loopne
(bad)
push
ds
sbb
ret
movs
leave
pop
ins
sbb
test
inc
or
xchg
ret
popf
sub
mov
ja
mov
mov
ja
xor
es
pop
adc
cmp
mov
pop
cmps
aam
fidiv
inc
pop
adc
imul
xchg
in
shl
cmp
xchg
shl
push
sub
leave
mov
movs
shl
jno
push
jmp
(bad)
inc
aam
popa
mov
xchg
scas
repz
jg
cmp
dec
xor
popf
ins
cmp
pop
stos
fnstenv
push
inc
add
xchg
push
add
jo
mov
inc
adc
xchg
sar
sbb
jns
int3
pop
cs
sbb
retf
cdq
mov
jnp
daa
inc
ror
push
pop
xor
inc
std
test
mov
test
cdq
jecxz
xor
jl
popf
mov
dec
das
adc
(bad)
pusha
int3
(bad)
mov
jno
cs
mov
les
add
jo
or
test
cmp
fs
mov
add
ins
mov
loop
bound
cmc
dec
sbb
mov
jp
scas
mov
pop
sbb
jno
loope
dec
scas
out
push
mov
add
lods
test
cmp
lods
movs
mov
sub
loopne
outs
lods
into
inc
xor
push
stos
call
push
loop
mov
cwde
bound
sbb
jnp
int
xor
xor
fcom
scas
xchg
neg
clc
fwait
arpl
retf
daa
lds
mov
ds
jl
jmp
pop
cmp
call
push
rcr
ss
or
iret
mov
jnp
pop
jge
stc
add
ret
and
loope
aas
call
mov
mov
xchg
dec
das
sbb
or
inc
push
ins
scas
call
in
or
push
cmp
mov
fwait
jb
push
dec
mov
cmps
enter
outs
pop
das
dec
scas
ret
cwde
shl
and
loope
leave
cmp
loopne
pop
lock
enter
xchg
fidivr
push
jl
rcr
jae
xlat
dec
sub
scas
rcr
not
ret
sahf
and
and
mov
xor
mov
push
(bad)
xchg
fdiv
sub
mov
cmovbe
push
repz
mov
jmp
test
xchg
retf
sub
xchg
sahf
cmp
stos
inc
sub
mov
xchg
(bad)
cmp
sar
jbe
sub
lea
call
mov
aam
addr16
adc
shr
fs
shl
pusha
fistp
ja
cmp
test
loopne
ins
stos
jecxz
xor
(bad)
sub
xchg
pushf
aad
aas
loopne
mov
push
sahf
mov
mov
int3
mov
pxor
inc
and
mov
add
arpl
cld
and
lock
dec
idiv
popf
cld
and
xor
xor
and
fldenv
jmp
sar
push
fnsave
dec
add
mov
cs
pop
ficomp
neg
push
push
jnp
sahf
addr16
inc
adc
add
push
mov
cmp
xchg
dec
and
mov
cwde
rol
addr16
popf
aam
mov
mov
pop
pop
jecxz
push
out
mov
pushf
jl
hlt
mov
mov
das
std
sahf
addr16
shr
popa
mov
popf
iret
outs
cmp
push
ss
push
cmps
jecxz
pop
(bad)
mov
sub
xchg
leave
dec
sub
inc
test
dec
cmp
push
fisub
adc
adc
mov
adc
loopne
adc
mov
mov
push
sbb
movs
(bad)
mov
xchg
bound
out
into
mov
movs
gs
add
mov
sub
in
imul
add
dec
int3
scas
jp
rcr
(bad)
cmps
jnp
adc
mov
popf
lds
ins
lods
fmul
test
cmp
leave
push
daa
adc
ret
jmp
mov
js
ror
jbe
enter
ret
or
cli
es
mov
sbb
aad
mov
scas
enter
ja
xchg
jmp
push
pop
cmp
push
mov
and
mov
mov
ds
sbb
adc
pop
retf
scas
fistp
and
sbb
fdiv
sbb
ror
imul
cmp
cmp
movs
jp
enter
aaa
push
(bad)
mov
jecxz
fs
xchg
push
bndldx
test
add
inc
rol
push
and
aam
sbb
dec
sub
cmps
fwait
test
push
cmp
jle
cmps
xchg
cmps
cli
and
mov
cs
out
mov
(bad)
int
adc
lods
jg
sbb
in
and
xor
(bad)
dec
xor
test
scas
(bad)
xor
jmp
in
cdq
(bad)
shr
sbb
test
in
mov
cs
mov
mov
loop
jns
push
jne
loopne
adc
add
mov
inc
cs
cli
xchg
xchg
repz
pop
pop
inc
mov
pop
add
mov
jg
push
and
mov
inc
stos
stc
push
add
cmp
mov
xchg
hlt
adc
movs
inc
cmp
pop
xchg
hlt
addr16
repz
(bad)
lods
pushf
fist
push
ins
aad
push
ret
add
mov
sti
jle
loope
mov
and
repnz
mov
or
mov
mov
pop
push
jmp
test
(bad)
sub
mov
clc
sub
pause
jae
cli
xchg
xchg
clc
xor
add
push
add
mov
ja
fidivr
lock
in
mov
ret
jo
loopne
jge
dec
pop
xor
pop
leave
mov
mov
push
pcmpgtw
ficom
adc
mov
pop
cmp
mov
scas
iret
push
cmp
mov
jbe
jmp
xor
mov
rcr
aam
data16
(bad)
out
fldcw
rcl
adc
and
xchg
inc
or
fnstcw
xchg
push
ins
ret
cmp
mov
repz
int
adc
dec
shr
rcr
rcl
mov
jns
adc
mov
or
sahf
jae
sbb
jle
icebp
adc
les
dec
mov
mov
xchg
(bad)
cmp
(bad)
in
push
pusha
stos
enter
jl
shl
jno
enter
(bad)
sti
mov
jmp
mov
pop
and
aas
push
rcr
fidivr
movs
sar
jae
clc
aas
js
ret
push
xor
test
cmp
jb
retf
and
nop
outs
cmp
cs
mov
cli
xor
add
imul
jle
jg
loope
jae
sbb
out
push
xor
fwait
fs
push
dec
and
xchg
jae
ret
xor
pop
sti
scas
xchg
hlt
cmp
cmc
cmp
jmp
push
pop
rcr
fnstsw
mov
(bad)
dec
or
add
loop
push
lods
fnstsw
push
aad
dec
or
js
mov
or
out
pusha
into
xchg
or
int
sub
jp
(bad)
push
or
mov
in
pop
jmp
addr16
movs
push
ds
adc
inc
sub
stos
ja
loope
pushf
into
pop
or
xchg
data16
mov
pop
cmp
lods
bound
inc
sbb
imul
push
repnz
push
call
xchg
fstp
popa
sbb
xor
(bad)
pop
or
mov
pusha
retf
cmp
or
scas
jle
call
jno
ret
inc
cmc
mov
adc
cmps
push
cmp
movs
jne
aas
push
std
xchg
gs
scas
fwait
shl
bound
stos
mov
add
adc
mov
cmps
nop
cmc
mov
push
pop
shl
mov
sub
rcr
mov
mov
cmp
adc
dec
mov
and
int3
sub
mov
inc
aas
jmp
jge
mov
in
push
push
and
push
mov
xor
bound
test
xor
les
dec
mov
ror
or
pushf
jb
or
add
mov
cmp
xchg
mov
fstp
cmc
mov
cld
sub
mov
push
ds
adc
pop
fstp
jmp
bound
push
pop
cmp
xchg
mov
push
sub
mov
cmp
enter
stos
test
jnp
fstp
and
mov
jl
add
lahf
cld
cmp
fild
outs
cmp
popa
mov
lods
cmc
or
jecxz
ss
js
nop
lahf
in
ror
imul
jg
jmp
pushf
push
dec
repz
repz
inc
sbb
in
push
sub
call
in
xchg
loope
cdq
retf
into
and
mov
cs
mov
and
mov
cmp
xchg
int3
cmp
scas
fisttp
sub
jae
mov
fisttp
out
les
fbstp
sub
push
and
and
and
movs
aad
sti
xchg
int
arpl
jmp
cld
pop
cmp
inc
mov
repz
xchg
xchg
outs
add
popf
dec
adc
popf
scas
(bad)
jnp
lock
jecxz
jo
punpcklwd
in
pop
ins
test
mov
pop
jl
retf
add
xor
sbb
aas
inc
fnsave
xchg
les
test
pop
pop
jno
(bad)
mov
mov
out
or
imul
push
stos
out
aas
inc
fnstcw
cmp
push
push
inc
lods
(bad)
sti
pop
adc
cwde
ins
sub
outs
into
lods
jns
sbb
test
jl
int3
push
adc
mov
cmp
mov
sub
test
push
dec
sub
inc
mov
inc
cmp
fld
cmps
jmp
push
xor
nop
push
adc
fdiv
jge
or
in
aam
aas
adc
xor
cmps
retf
mov
xor
sub
mov
push
sub
mov
cs
shl
shr
add
inc
lods
into
pop
cmp
scas
ins
sub
mov
pop
fsub
sbb
test
pop
loope
jge
inc
add
mov
mov
xchg
(bad)
in
ins
mov
movs
inc
adc
push
add
ins
adc
je
ret
mov
sbb
call
in
outs
adc
adc
test
div
pop
pop
jl
hlt
sub
mov
dec
mov
push
push
pop
inc
mov
mov
pop
adc
lods
inc
cmp
movs
jnp
sbb
addr16
add
xchg
adc
fidivr
shr
scas
out
adc
lea
cmp
fwait
jne
retf
hlt
aaa
jo
mov
hlt
xchg
bound
call
repz
sub
mov
es
jl
shl
lds
(bad)
mov
int
xchg
icebp
push
or
fwait
xlat
and
test
dec
sub
dec
into
mov
call
xchg
mov
test
push
ins
aad
data16
xchg
jecxz
fidivr
push
pop
and
das
cld
xchg
xchg
cmc
cmp
fmul
sti
mov
in
mov
xor
ret
pop
sbb
adc
idiv
jbe
cld
and
mov
leave
pop
and
lods
les
mov
arpl
xchg
gs
scas
cwde
shl
mul
ror
inc
shr
fld
(bad)
(bad)
lahf
ja
jmp
pop
std
cdq
mov
cdq
cwde
call
mov
mov
jecxz
arpl
lock
stos
retf
clc
mov
xor
xchg
js
aas
addr16
es
pop
sbb
xor
mov
ret
jmp
popa
lods
in
lds
lock
mov
push
sbb
mov
lods
push
cmp
mov
mov
xchg
test
dec
sub
mov
xchg
(bad)
cmp
pop
jecxz
je
pop
or
mov
lahf
(bad)
and
into
inc
es
and
mov
scas
xchg
lock
inc
xor
sbb
sahf
push
mov
test
das
inc
(bad)
leave
xor
xchg
dec
sub
mov
sahf
stos
les
cli
mov
sbb
lds
dec
mov
call
scas
(bad)
cwde
stc
ds
enter
adc
mov
xor
aas
js
ret
xor
mov
or
jne
cld
or
pop
add
out
push
jecxz
and
mov
inc
fisub
add
(bad)
fdiv
inc
mov
aas
inc
pop
inc
fidivr
shl
(bad)
jge
add
imul
mov
xor
sahf
popa
sbb
mov
int
call
pop
iret
mov
inc
jmp
test
xchg
pop
aad
mov
dec
das
out
lea
xchg
mov
retf
inc
aas
ret
repz
add
mov
inc
icebp
xchg
sahf
lock
pop
mov
or
mov
xchg
div
push
hlt
mov
nop
icebp
push
imul
jecxz
addr16
fwait
dec
adc
sahf
push
xchg
mov
cmp
pop
cmp
mov
or
out
ds
dec
les
sbb
out
imul
push
int3
test
movs
mov
clc
and
xchg
and
mov
add
es
int3
(bad)
jge
movs
jne
ins
in
inc
xlat
sahf
mov
jo
sub
test
sbb
mov
loop
and
push
pop
adc
ins
sub
adc
popa
lods
fld
push
fst
adc
mov
xchg
dec
sub
mov
std
test
je
fst
out
mov
pop
inc
mov
add
int3
mov
ficom
jbe
push
cmp
cmps
push
sub
dec
cmps
in
ins
mov
fidiv
jecxz
(bad)
enter
adc
pop
jl
lds
imul
gs
mov
int
sar
cld
sahf
xchg
cli
or
shr
jge
cld
or
lea
addr16
bound
pop
jle
loop
jg
into
push
es
test
pop
push
jne
dec
pmuludq
pushf
push
inc
mov
mov
xor
push
movs
test
stos
loop
jge
clc
add
retf
cmp
mov
pop
dec
mov
and
mov
pushf
inc
and
inc
daa
out
lahf
xlat
(bad)
mov
cmc
daa
outs
cmps
hlt
ss
call
(bad)
arpl
mov
sub
lea
fisubr
mov
pop
sub
mov
jno
(bad)
movs
outs
add
gs
ss
and
xchg
sahf
(bad)
fiadd
sbb
inc
shr
jb
jmp
dec
sbb
ins
scas
fidivr
jne
jg
in
push
xor
jnp
mov
retf
cmps
ficom
ror
shr
in
movs
je
inc
test
mov
cmp
push
mov
js
repnz
(bad)
mov
jecxz
dec
les
sbb
loopne
adc
push
add
jnp
inc
lds
mov
mov
add
mov
mov
dec
or
cmp
cmp
mov
lea
je
loopne
fs
cmc
mov
fistp
mov
push
cmp
sub
pop
mov
mov
cmp
pop
xor
out
sahf
dec
daa
sar
stc
mov
lahf
xchg
(bad)
cmp
mov
xlat
pop
sbb
div
jle
les
pop
jmp
mov
jne
leave
mov
cmp
or
(bad)
fwait
jmp
cmp
sbb
sub
in
xor
lea
inc
sub
adc
data16
fisttp
fisub
nop
call
loop
outs
lods
out
push
loop
imul
xchg
mov
scas
jns
int
inc
and
lea
icebp
mov
xchg
inc
daa
adc
lods
call
in
jns
popa
cmp
aas
shl
loopne
jg
retf
and
fmul
mov
(bad)
push
xor
xchg
test
pop
and
test
into
xchg
inc
adc
repz
test
pop
cmp
or
mov
stos
jmp
repz
add
mov
mov
ins
add
or
jecxz
xor
mov
retf
sbb
(bad)
call
push
outs
(bad)
mov
mov
test
sub
jae
loopne
add
sti
adc
movs
mov
sub
or
retf
mov
test
add
jo
jg
icebp
and
mov
prefetcht2
out
mov
mov
xchg
(bad)
es
fdivr
inc
cmp
sub
dec
loop
jbe
or
mov
sti
es
fistp
femms
dec
fcomp
mov
ret
nop
aad
push
sbb
test
dec
add
jo
mov
movnti
jne
into
mov
das
or
mov
cwde
call
cmp
je
sahf
sahf
retf
and
test
mov
mov
ins
int3
cmps
mov
scas
movs
mov
jno
adc
std
xchg
(bad)
mov
fnsave
scas
in
dec
add
cs
jmp
inc
loopne
(bad)
scas
lds
add
mov
fcomp
stc
mov
out
adc
xor
shl
jnp
lahf
mov
dec
sub
sahf
jge
cld
mov
lds
arpl
in
mov
mov
mov
xor
jmp
imul
call
cmp
test
jmp
stc
aas
inc
aad
js
gs
test
stc
push
add
mov
outs
xchg
mov
das
dec
mov
mov
ss
movs
aam
push
fdiv
mov
sbb
mov
adc
fcom
retf
cmps
ja
(bad)
mov
mov
jp
out
call
pop
cmp
jge
in
push
ds
nop
fistp
fmul
fidivr
push
sub
fdiv
or
adc
adc
(bad)
and
scas
js
add
out
and
add
imul
xchg
dec
add
pushf
(bad)
cmp
lods
call
adc
neg
mov
mov
fwait
adc
mov
push
cmp
dec
aam
xchg
shl
ret
outs
or
addr16
mov
xchg
idiv
push
add
adc
out
xchg
neg
jmp
push
clc
pop
ds
cmp
lods
into
dec
aas
sbb
add
ins
mov
mov
mov
in
inc
fstp
emms
(bad)
out
das
adc
std
push
and
sbb
or
stos
jno
pop
jl
hlt
and
add
sbb
push
fistp
leave
pop
and
pushf
outs
add
test
retf
scas
in
cmp
push
lds
lds
mov
(bad)
xchg
int3
adc
cmp
imul
xchg
nop
icebp
xor
nop
popa
sbb
mov
push
or
movs
data16
mov
rol
fldcw
dec
retf
or
fistp
ret
cld
sub
stc
add
cmps
je
jmp
jge
int3
xor
add
call
outs
mov
ss
push
push
pop
jge
hlt
add
hlt
dec
sbb
mov
clc
pop
cmp
push
fcomp
test
jnp
int3
mov
and
jge
jmp
repnz
in
jne
ds
shl
les
fisttp
iret
lods
sahf
xlat
dec
or
int
jbe
adc
fist
pop
mov
sub
call
ret
ins
push
and
test
jmp
(bad)
data16
and
scas
jecxz
and
pop
and
adc
popa
call
clc
fwait
out
outs
and
sub
mov
jnp
test
sub
mov
push
fimul
and
fst
bound
cwde
pushf
not
outs
sbb
mov
xor
(bad)
jb
out
lea
aam
arpl
cmps
ficom
std
sahf
mov
cwde
imul
ds
neg
mov
xchg
xchg
jmp
jge
mov
pop
cmp
loopne
xchg
dec
psubb
push
add
out
daa
push
icebp
ror
jle
inc
fwait
inc
scas
or
jmp
mov
pop
jg
push
fstp
mov
mov
sbb
cmps
pop
jmp
mov
pop
push
jb
in
jle
sub
ja
sub
jae
fmulp
jbe
pushf
push
cmps
sub
jg
pop
jb
or
movs
xchg
mov
fnstcw
xchg
jnp
pop
jg
inc
mov
sbb
push
into
cmc
cwde
sbb
dec
jae
xor
jg
aas
mov
movs
stos
push
push
movs
into
xor
enter
and
ficomp
push
jmp
mov
mov
jmp
into
in
pop
xor
ret
add
mov
stc
mov
push
pusha
add
rcl
ret
cdq
outs
pop
jecxz
repz
sub
pusha
mov
ds
sub
xchg
loop
call
inc
icebp
inc
les
das
stc
outs
jnp
dec
cmp
fdivr
out
daa
movs
inc
or
xor
cmps
pop
mov
jp
push
(bad)
out
sbb
int3
mov
push
push
inc
xor
add
jmp
lods
mov
(bad)
pop
mov
div
cld
std
xor
clc
mov
or
jge
lds
stos
xor
push
in
cmp
and
cmp
rol
sub
(bad)
jmp
shr
cmps
adc
cmp
adc
cmp
mov
rcr
in
xchg
test
or
adc
shl
int
inc
cmp
jge
jle
in
in
dec
sbb
jle
xor
ins
inc
xchg
out
jmp
mov
pop
fcmovbe
gs
adc
test
sub
scas
sbb
leave
inc
dec
and
rcl
or
mov
sub
or
sbb
sub
rcr
or
(bad)
retf
sub
fwait
(bad)
push
mov
or
cs
out
xchg
inc
add
call
nop
lea
jp
call
push
scas
xlat
mov
pusha
in
leave
mov
dec
in
popf
and
rcl
sub
mov
test
cmp
mov
lods
pop
jle
test
aaa
xlat
movs
lock
(bad)
mov
inc
push
xor
ss
mov
pop
sub
ret
ret
mov
jo
pop
xor
ds
or
adc
adc
gs
push
xchg
(bad)
fxch
test
clc
pop
and
dec
adc
paddb
test
xor
dec
jo
enter
in
jp
lds
lods
pop
mov
push
mov
jbe
or
test
ret
shl
cwde
mov
outs
inc
and
ret
fsub
call
ds
sub
sbb
test
fs
ffreep
mov
lds
sti
repz
sub
jbe
jcxz
call
out
mov
add
call
int
xchg
popa
mov
(bad)
and
mov
mov
addr16
std
fadd
jbe
jo
jmp
loopne
(bad)
in
cwde
push
bound
jp
retf
out
mov
and
jae
pop
push
jmp
adc
iret
mov
and
sub
or
xor
sar
sub
inc
int3
sbb
or
push
mov
or
inc
or
jge
push
ds
xchg
pop
sbb
cmc
loopne
iret
movs
add
xchg
das
(bad)
ss
jbe
mov
pop
cwde
movs
mov
mov
mov
dec
xchg
(bad)
test
add
lods
es
mov
mov
sti
xlat
neg
sub
in
enter
sbb
imul
mov
retf
cmp
cld
out
inc
sbb
push
repz
outs
dec
fwait
call
(bad)
les
out
pop
cmp
inc
or
mov
movmskps
xor
js
arpl
in
stos
mov
pop
pop
fadd
cmps
dec
xor
jg
inc
scas
mov
call
imul
iret
inc
loope
inc
ds
push
mov
mov
arpl
std
pop
mov
ss
repnz
cli
idiv
lds
scas
dec
sub
inc
pusha
(bad)
xchg
ja
pop
(bad)
lods
(bad)
push
cs
inc
xchg
pushf
cmp
shl
adc
dec
cmp
push
pop
fdiv
jae
dec
mov
imul
div
in
mov
ins
mov
test
mov
xchg
and
sub
sub
(bad)
cmp
sub
push
pop
mov
mov
fwait
in
push
mov
dec
sub
in
jae
ins
lods
lods
aad
(bad)
cmps
cmps
push
pop
mov
mov
add
mov
(bad)
stc
jmp
test
enter
shl
pushw
mov
movs
in
montmul
cmps
inc
call
lods
inc
ret
pop
dec
retf
(bad)
pop
sbb
ins
xchg
cmp
in
fadd
ret
mov
test
fld
xor
out
(bad)
rol
loop
mov
aas
lahf
fneni(8087
or
and
neg
fist
aaa
add
loopne
jno
shl
xor
cmps
xchg
inc
ror
push
cld
fisttp
sbb
sti
fwait
ret
push
imul
cs
push
and
in
sbb
or
data16
dec
retf
fnstenv
pop
test
popf
xor
mov
cli
cmp
stos
(bad)
gs
popa
ins
mov
into
and
mov
mov
pusha
xlat
into
inc
and
sbb
xor
xchg
adc
push
add
je
fbstp
add
jns
daa
and
cmp
in
cmps
adc
in
jmp
push
push
push
lods
xor
std
aaa
mov
shl
mov
push
cmps
mov
mov
xor
push
and
outs
test
clc
fcom
test
push
shr
fxch
movs
test
inc
lahf
jne
or
(bad)
jmp
bound
pcmpgtw
jge
pop
imul
leave
add
xchg
push
loop
xchg
popf
mov
mov
sbb
and
int
mov
pop
pop
out
dec
clc
jno
repz
(bad)
ret
jo
(bad)
pop
cmp
enter
push
dec
adc
sahf
push
mov
not
or
mov
test
fcmovu
ror
test
lea
fld
int3
inc
xchg
add
fidiv
mov
gs
mov
aas
je
push
stc
cwde
cwde
mov
repnz
dec
mov
lds
ffreep
ss
push
bnd
mov
dec
outs
out
nop
or
mov
arpl
dec
mov
rcr
(bad)
ffree
repnz
sbb
movs
dec
push
mov
or
loopne
fcmovnb
mov
mov
mov
inc
nop
arpl
cmp
fisub
push
jge
sar
retf
push
and
sbb
cmp
jmp
cmp
and
jecxz
repnz
jecxz
inc
xor
es
mov
hlt
mov
dec
and
mov
xchg
retf
ficom
cdq
mov
pop
and
dec
sub
mov
push
popf
not
mov
ret
or
and
lds
jle
cmp
aas
xchg
mov
les
sub
scas
sub
mov
push
out
jp
jecxz
sub
sub
bound
retf
sub
push
mov
push
xor
pop
xchg
mov
jmp
dec
cmp
adc
jg
into
lods
int
adc
xchg
mov
mov
fs
mov
and
cld
in
mov
push
out
xor
sbb
pop
enter
ds
movs
fmul
mov
and
xchg
cld
mov
dec
cld
jle
cmps
sti
mov
adc
add
cmc
ror
cmp
sbb
imul
lea
(bad)
imul
shr
call
jmp
pop
and
ds
sbb
or
or
and
add
inc
dec
push
imul
daa
ret
scas
fbstp
xchg
inc
sub
jecxz
mov
dec
add
das
test
add
sub
cli
sub
pop
pop
movs
sbb
loopne
into
dec
ja
add
adc
sub
xchg
jbe
mov
dec
iret
xchg
mov
aad
pusha
xor
dec
push
jae
cld
push
lds
imul
into
mov
imul
xchg
not
(bad)
test
mov
adc
movs
mov
and
dec
pop
xor
xor
jle
xor
loopne
(bad)
mov
imul
jle
mov
push
sbb
dec
pop
adc
mov
pusha
cmps
lods
mov
pop
fadd
mov
fnsavew
mov
pop
push
add
stos
or
cli
jne
imul
or
pop
sub
sub
(bad)
stos
or
mov
arpl
pop
js
ror
arpl
fs
aas
push
cwde
jge
das
add
aas
les
push
pop
jne
rcr
dec
mov
(bad)
push
dec
mov
pop
dec
cwde
pop
mov
(bad)
push
popa
pop
icebp
call
xor
mov
test
xchg
mov
sbb
aam
(bad)
mov
sbb
movs
imul
leave
(bad)
dec
cmp
mov
adc
mov
push
rol
adc
fwait
xor
pop
or
inc
scas
cmp
jecxz
jmp
push
mov
add
xor
and
hlt
ins
cmp
mov
add
loope
mov
push
xchg
jbe
dec
inc
xor
push
adc
(bad)
rcr
cmc
push
jbe
push
push
mov
inc
cmp
scas
mov
cmps
and
(bad)
ss
and
jmp
xchg
adc
jbe
adc
push
dec
xchg
pop
sub
lods
xor
sub
sbb
or
fsubr
or
lds
pop
mov
ror
rol
stos
scas
call
ds
mov
(bad)
push
frstor
xchg
and
xlat
inc
mov
push
inc
in
ja
or
xchg
xchg
fldenv
cmp
jmp
jge
and
pop
pop
loop
or
(bad)
(bad)
or
fbld
addr16
xchg
out
cmp
ja
fadd
add
xor
idiv
fiadd
(bad)
xchg
push
fcmove
icebp
jle
add
mov
(bad)
push
icebp
pushf
mov
icebp
bound
ins
or
sub
mov
rcr
and
mov
dec
das
sahf
in
dec
neg
retf
xor
repz
call
imul
add
retf
cmp
pop
push
pop
add
adc
mov
test
imul
mov
(bad)
dec
mov
aaa
xchg
mov
pcmpgtb
outs
int
in
call
jmp
push
(bad)
js
dec
push
imul
test
cmp
into
icebp
add
je
ret
cmp
pushf
mov
mov
mov
sbb
push
aas
and
mov
mov
sti
rcl
jne
pop
xchg
push
rcl
mov
sub
jecxz
aas
xchg
and
pop
adc
mov
in
mov
cmp
xchg
lods
sub
call
adc
cmps
in
sti
mov
jle
mov
out
movs
and
jb
rcl
add
outs
mov
pop
mov
cmp
daa
mov
icebp
sub
inc
mov
mov
or
test
fsub
cmps
push
sub
ds
out
les
loopne
jb
repz
sub
fild
adc
or
enter
jno
test
outs
jbe
xor
scas
jo
pop
cli
bswap
or
mov
cdq
add
fs
into
push
pop
add
inc
loope
xlat
aaa
xchg
inc
mov
push
aam
inc
inc
sub
pop
cmc
ror
(bad)
repnz
lahf
xor
test
stos
imul
into
inc
ror
hlt
dec
popa
arpl
jmp
arpl
xchg
xor
test
dec
mov
sbb
lods
push
or
fistp
push
cmp
pop
pop
or
call
ins
pextrw
and
mov
adc
xchg
xlat
adc
cmp
inc
adc
cmps
(bad)
repz
xchg
loop
xchg
les
jb
jns
pop
pop
sar
sub
push
(bad)
fstp
ja
push
adc
clc
mov
sub
add
inc
sub
or
sub
rol
xor
lea
dec
icebp
fcomp
sbb
js
mov
mov
push
sbb
push
loope
nop
mov
cmp
xchg
cmp
sub
or
(bad)
cmps
ins
mov
in
in
ret
repz
xchg
icebp
pop
pop
loop
cmp
iret
xchg
icebp
aam
mov
sbb
call
mul
mov
shr
mov
add
fld
fwait
sub
sbb
inc
push
(bad)
xchg
popa
fld
outs
mov
loopne
inc
dec
idiv
and
loop
into
scas
retf
or
lods
jo
and
add
pop
lods
adc
inc
ja
pusha
cmps
push
lahf
dec
xchg
dec
adc
in
ret
in
imul
test
sub
sbb
call
sub
dec
loope
xchg
inc
sub
mov
inc
sbb
loop
pusha
pop
push
xchg
jo
lock
push
fidivr
mov
and
aam
xor
or
imul
ins
mov
cmp
push
mov
lahf
mov
pop
xchg
outs
xchg
in
loope
adc
sbb
ror
inc
xor
inc
mov
mov
jge
sub
and
xlat
xor
ins
dec
mov
jle
mov
cdq
and
test
lea
fnstsw
dec
lock
sbb
stos
test
out
mov
mov
sbb
add
into
pop
mov
pushf
and
or
inc
call
jp
push
xor
rcl
inc
cld
test
mov
push
(bad)
push
nop
cld
mov
out
daa
inc
xlat
add
mov
add
mov
or
adc
(bad)
aas
pop
xor
xor
dec
adc
dec
pop
fbld
pop
pop
mov
push
mov
add
loop
popa
jb
nop
add
mov
push
dec
adc
inc
mov
aas
loope
mov
in
fwait
call
ss
or
loope
aad
fnstenv
xor
push
mov
mov
pop
mov
or
sbb
loope
test
jb
and
outs
loop
sub
xor
daa
dec
push
sbb
mov
mov
fs
inc
outs
mov
cmp
inc
mov
std
adc
inc
cdq
xchg
and
lea
fidivr
inc
adc
mov
aam
cmp
push
data16
test
jg
stos
loopne
mov
inc
cmps
or
push
lahf
addr16
jge
aas
dec
loop
(bad)
mov
xor
fisubr
mov
outs
and
js
test
jmp
fs
jae
sub
push
jmp
ficomp
dec
(bad)
lea
inc
jbe
xchg
les
loopne
mov
iret
stos
pushf
loope
xor
outs
pop
bt
dec
push
into
xchg
pop
cmp
jns
ins
push
xor
push
sub
pop
sar
cmp
xor
out
xchg
pop
dec
add
jl
mov
push
fcomp
gs
scas
sar
stos
ds
inc
or
pop
xor
mov
out
mov
addr16
nop
mov
in
dec
out
ficom
out
ret
mov
mov
mov
and
or
rol
ret
inc
adc
not
in
sub
mov
loop
mov
cs
in
mov
in
xchg
xor
ret
jno
fs
push
int
dec
pop
rol
aas
jbe
fmul
fdiv
ss
mov
sub
mov
xchg
pop
xor
hlt
ins
dec
addr16
mov
mov
and
mov
fdiv
lods
inc
mov
test
xchg
test
push
add
inc
leave
push
mov
pop
stc
sub
and
dec
mov
mov
mov
call
mov
dec
(bad)
xchg
lea
and
fistp
dec
push
scas
(bad)
cli
f2xm1
mov
fisub
pop
es
pop
cmp
push
fwait
imul
xchg
inc
call
arpl
mov
pop
cmp
pop
in
cli
(bad)
sahf
lods
in
jp
into
pop
mov
shl
inc
stos
dec
mov
add
div
fstp
push
xlat
(bad)
cdq
cmp
pushf
ja
xchg
fisttp
sub
(bad)
je
jp
dec
sub
cmp
ret
jg
mov
pop
or
cli
imul
dec
fsub
inc
leave
mov
test
xor
call
jnp
add
aas
(bad)
pop
jg
imul
adc
popf
popf
dec
add
mov
movs
mov
sbb
push
cs
and
and
clc
into
jb
ret
sbb
sub
popa
fs
addr16
fidivr
xor
pushf
pop
out
rol
sahf
test
or
hlt
fisttp
inc
out
jmp
outs
inc
adc
or
inc
jge
fcomip
jecxz
mov
or
jmp
(bad)
push
ret
dec
cli
mov
sbb
inc
pop
fild
and
mov
jne
pop
add
push
sbb
lds
xor
add
and
in
xor
aaa
js
outs
sub
addr16
mov
jbe
push
aad
daa
push
mov
retf
pop
enter
xchg
adc
fisttp
pop
jns
inc
mov
xchg
aad
pop
jmp
dec
fwait
mov
in
scas
in
add
aad
enter
int
mov
movs
iret
push
ret
adc
xchg
loopne
scas
fsub
(bad)
mov
dec
arpl
pop
fmul
shr
cmps
dec
movs
aas
retf
mov
jbe
inc
leave
mov
push
push
dec
xlat
jmp
inc
pop
xlat
xchg
jne
jne
aas
je
mov
sbb
jo
or
pop
stc
mov
dec
lock
cli
stos
push
retf
hlt
inc
mov
icebp
or
add
sub
jmp
mov
mul
sbb
jb
sbb
imul
cmps
xor
repnz
xchg
in
call
xchg
shl
xor
shl
call
mov
sub
mov
push
or
adc
xchg
push
fld
push
pop
xchg
mov
mov
addr16
sub
inc
fcomp
je
imul
dec
cmc
add
mov
(bad)
unpcklps
ss
mov
data16
mov
mov
or
mov
mov
leave
int
outs
(bad)
xchg
lea
in
loope
lods
(bad)
fdiv
loopne
cmp
inc
xchg
inc
shr
mov
ins
lods
outs
mov
ss
retf
aas
les
movs
jbe
sbb
shl
dec
lahf
repnz
rcr
mov
and
adc
lods
fstp
fdiv
adc
inc
imul
out
jg
mov
cmps
push
push
mov
cmps
inc
pop
call
aaa
std
(bad)
xor
mov
push
not
xchg
sub
shl
mov
and
sbb
sub
mov
outs
les
(bad)
addr16
fnstcw
jo
loop
scas
jle
sbb
and
das
out
div
sbb
fistp
add
retf
cs
enter
sub
or
sub
or
fild
pop
(bad)
cmp
and
in
cmp
mov
jb
das
repz
lock
add
neg
sub
cmp
push
and
pop
wbinvd
out
icebp
fwait
mov
xchg
cdq
retfw
push
mov
push
xor
pop
sbb
call
xor
sahf
dec
mov
popa
test
leave
or
out
jmp
jmp
adc
outs
xchg
pop
xlat
sub
cmp
xor
sbb
adc
or
push
std
pop
mov
and
dec
mov
es
sub
mov
ss
dec
mov
test
xchg
adc
and
cmp
int3
and
cmp
ds
pop
in
adc
mov
mov
scas
inc
fstp
dec
cmps
jp
ins
mov
ret
fwait
xchg
in
int
aam
xchg
push
shr
sbb
popa
fsubr
add
pop
(bad)
out
pop
mov
mov
dec
aam
addr16
leave
add
retf
xor
push
lods
dec
pop
dec
fisubr
or
cmc
xor
pop
fidiv
(bad)
sub
push
inc
pushf
lea
adc
in
into
dec
mov
mov
ds
xor
cmp
mov
mov
daa
in
dec
fst
inc
and
clc
das
cmc
and
es
ret
and
add
dec
cmps
js
xchg
outs
xchg
fs
scas
popa
fsubr
sbb
xor
inc
hlt
cmp
das
adc
mov
jns
jl
(bad)
jg
inc
fld
adc
aaa
retf
jle
xor
out
cmp
pop
mov
lea
cmp
stos
stos
outs
mov
mov
aam
call
into
dec
mov
int
mov
jmp
mov
push
mov
cwde
outs
in
xor
cmp
aas
iret
add
out
add
add
push
cld
push
adc
dec
rcl
inc
mov
ret
xor
sub
jnp
jle
push
aas
retf
jmp
jl
xchg
inc
retf
xchg
test
fdiv
xor
xor
sub
sub
fimul
fs
in
push
fadd
lds
retf
sub
xor
xor
adc
dec
aad
retf
es
ror
mov
fnstsw
jl
jle
add
add
jge
ins
sbb
iret
push
mov
mov
pop
mov
jbe
push
les
cs
(bad)
adc
in
shr
sub
sar
push
sbb
and
push
fist
int
mov
mov
lods
xchg
fs
(bad)
iret
add
adc
adc
pop
sar
push
mov
rcl
sahf
nop
fs
leave
add
pop
mov
retf
je
jae
pusha
xlat
pop
test
xor
mov
rol
mov
ins
mov
aam
(bad)
cmp
ins
xchg
je
imul
pop
mov
pop
fsubr
ds
adc
mov
scas
push
pop
or
mov
fcom
and
or
xor
in
pop
fidiv
stc
and
gs
xchg
xchg
lahf
imul
out
push
iret
daa
jmp
push
retf
push
ficom
rcl
xchg
gs
xchg
xchg
inc
fild
int
mov
xchg
xchg
xchg
inc
fiadd
arpl
push
sub
iret
sub
loope
icebp
mov
(bad)
jmp
mov
lds
movs
xchg
cwde
xchg
mov
cwde
push
mov
cmp
jbe
xchg
mov
bound
pop
or
out
das
loope
or
stos
jnp
je
pushf
jno
inc
scas
gs
in
or
jo
pop
nop
pusha
(bad)
cmp
inc
xchg
mov
push
cmps
jp
inc
aam
rcl
xchg
mov
fidivr
adc
adc
push
mov
sbb
xor
mov
dec
xlat
or
xor
or
cmp
push
fcom
in
sbb
xchg
enter
outs
lods
mov
fld
out
ss
cmps
xchg
bound
pop
jecxz
clc
dec
lods
ja
inc
retf
add
call
mov
in
pop
mov
inc
ficom
outs
mov
out
sub
loope
(bad)
int3
adc
das
jecxz
ficom
test
pushf
dec
leave
and
xchg
mov
ja
pop
mov
les
sub
mov
stos
bound
push
imul
nop
mov
popa
test
into
pop
(bad)
movs
test
outs
movs
inc
aad
stos
jle
pop
or
mov
add
aaa
repnz
mov
repnz
xor
retf
es
stc
pop
lods
xchg
ins
scas
inc
test
pop
leave
pop
mov
fwait
bound
jo
inc
fiadd
movs
sahf
(bad)
dec
fisttp
pop
mov
test
push
sub
or
adc
jbe
dec
test
inc
into
pop
scas
mov
sub
or
jne
mov
xor
xor
jb
mov
popa
(bad)
push
fcomp
cmp
push
loop
mov
in
sti
push
sbb
mul
leave
push
dec
xlat
pop
test
xor
pop
pop
cmc
sub
push
sbb
push
pop
cmc
xchg
bound
jg
jne
xchg
data16
inc
mov
dec
cmp
cld
adc
das
loopne
test
aam
xlat
dec
test
cmp
sub
or
mov
movs
fs
mov
mov
pop
(bad)
push
cmps
shl
push
sar
push
sbb
repnz
lock
inc
adc
xor
sbb
out
loope
je
es
pop
ficomp
addr16
data16
jecxz
fistp
sbb
inc
repnz
pop
mov
xor
pop
mov
jns
jb
inc
fld
je
(bad)
dec
mov
mov
outs
ficomp
outs
mov
push
adc
(bad)
and
rol
shl
repnz
sbb
sbb
(bad)
add
clc
pop
leave
push
ret
push
ret
fwait
xchg
jb
ja
adc
das
jmp
enter
aas
xlat
cmp
mov
daa
or
adc
dec
out
pop
mov
movs
popf
mov
cmps
lea
push
aam
ds
aas
stc
dec
int3
add
mov
inc
mov
dec
xlat
inc
mov
bound
clc
and
aaa
or
pop
je
pop
xchg
gs
mov
movs
lahf
imul
add
xlat
dec
mov
(bad)
pop
mov
nop
push
fadd
add
cmp
push
stc
or
cmp
shl
nop
gs
mul
adc
push
xor
into
xor
sub
fst
loop
mov
test
jl
ins
cmc
cs
leave
dec
stos
jnp
loopne
cli
dec
in
or
lock
sbb
mov
or
cdq
repz
or
inc
mov
mov
test
dec
aad
mov
stos
jb
fwait
jb
xor
mov
scas
inc
lds
adc
and
or
push
and
inc
mul
jecxz
mov
or
dec
test
loop
push
add
sub
ss
push
(bad)
xchg
xchg
outs
mov
outs
cld
push
xchg
inc
mov
das
sbb
push
add
aam
loop
adc
jle
jb
xor
ror
inc
lock
std
cs
les
sbb
sbb
cmp
ds
inc
mov
jge
popa
sub
xor
dec
ficom
scas
xchg
ins
pop
jecxz
aam
sub
adc
inc
mov
sub
das
cmc
aaa
push
sbb
jl
jns
jae
(bad)
je
mov
lea
mov
cwde
push
(bad)
sub
adc
or
sbb
pop
mov
jg
sahf
ja
mov
mov
shl
push
retf
xor
pop
fld
jbe
aaa
loope
mov
test
xchg
jo
jbe
push
cmp
cmp
(bad)
cmp
cmc
dec
mov
mov
call
sahf
nop
xchg
push
fwait
jb
cmp
jmp
fild
mov
xor
xor
cmp
push
mov
ficomp
sbb
push
fidiv
sbb
sbb
dec
scas
imul
jmp
jbe
mov
mov
mov
adc
mov
sahf
xchg
lea
vmptrst
dec
pop
aam
cmp
xchg
xchg
arpl
std
cmp
xor
fstp
xor
sub
dec
psubsw
out
repz
pop
adc
adc
or
in
mov
aaa
retf
and
mov
mov
xchg
jl
and
add
jae
dec
add
ja
adc
adc
ds
dec
cld
add
repnz
pop
leave
cmp
cmp
iret
pop
scas
nop
push
pop
rcl
dec
lods
ins
adc
ds
pop
mov
mov
aad
fmul
jmp
js
call
sahf
(bad)
cdq
imul
pop
sti
push
mov
and
dec
mov
and
out
pop
in
out
loopne
adc
rcr
bound
je
adc
gs
mov
pop
ud0
lahf
jo
push
aad
les
cli
cs
or
stos
nop
inc
fiadd
enter
sub
pop
test
test
arpl
inc
stos
jl
xchg
push
shl
jmp
ret
test
pop
fild
in
adc
xor
aas
repnz
cli
jo
popa
mov
mov
inc
(bad)
and
sub
xor
push
movs
fdivr
outs
mov
ins
cmc
inc
mov
jmp
pop
dec
sbb
push
add
pop
idiv
(bad)
and
out
test
pushf
lea
jle
inc
mov
or
out
add
repnz
pop
sbb
adc
xchg
dec
xchg
xchg
cwde
inc
add
xchg
arpl
cmp
and
pop
lods
pop
jb
jp
fwait
mov
sub
shl
cld
sub
adc
push
sub
mov
pop
mov
arpl
pop
fidivr
les
add
fwait
mov
sbb
cld
pop
stos
mov
jle
push
ret
and
sub
push
fldcw
adc
dec
movs
imul
xlat
push
mov
or
push
fidiv
adc
add
cmp
imul
shl
stc
pop
adc
or
and
addr16
sbb
ins
fld
in
adc
pop
shr
inc
test
push
inc
xchg
push
fmul
jmp
js
call
push
aad
rol
sbb
pop
adc
pop
fbld
xor
sub
adc
in
cmp
pop
aam
loop
bound
les
mov
push
cmps
jb
loop
fidiv
retf
inc
shr
push
adc
cwde
xchg
stos
dec
mov
test
aam
retf
and
or
sbb
sbb
push
xchg
in
cmps
shl
retf
ss
and
mov
cwde
cwde
mov
shr
shr
int3
cdq
ins
mov
mov
jns
jae
dec
daa
out
aam
inc
pop
test
pushf
jb
shl
sti
xor
pop
(bad)
mov
mov
xchg
cli
pop
sbb
jmp
sbb
dec
mov
jae
clc
and
dec
retf
daa
out
add
or
inc
mov
xor
es
sti
emms
mov
jno
je
xchg
jp
xor
int3
jg
pop
adc
pop
jmp
adc
nop
test
(bad)
aas
stc
cs
or
call
mov
out
add
sub
pop
test
inc
mov
aam
mov
sub
push
adc
adc
cwde
addr16
mov
or
and
jno
inc
fsub
sbb
jb
mov
popa
xchg
jae
call
pop
mov
mov
inc
shl
in
add
mov
jg
xchg
ins
xlat
cmp
sub
inc
retf
les
and
cmp
das
(bad)
daa
ret
inc
retf
sub
or
ins
out
jge
jbe
ins
fldenv
arpl
inc
pop
sbb
inc
fisub
xor
rcr
dec
fidivr
leave
xor
sub
push
ins
cld
dec
cmc
cmp
cmp
and
push
or
sahf
popa
mov
fcom
xchg
repnz
loop
lods
pusha
xchg
outs
movs
xchg
mov
in
add
pop
mov
cwde
inc
scas
outs
aam
and
int
repnz
inc
mov
test
add
les
sbb
inc
or
pop
loope
lock
adc
dec
fstp
pop
jmp
cmp
jne
cmp
add
cld
push
retf
jns
cmp
aaa
ret
ds
(bad)
cmp
xchg
test
mov
xchg
jbe
jp
push
call
xchg
cmps
mov
(bad)
push
retf
not
push
mov
lods
xchg
imul
lods
js
mov
fs
add
cmp
push
movs
loope
movs
jle
dec
xlat
push
mov
je
ss
xor
out
and
(bad)
int3
push
ret
mov
(bad)
pop
mov
aas
jecxz
mov
cmps
call
dec
das
jmp
ret
sub
xor
daa
call
mov
lahf
ins
mov
pop
cmps
jg
movs
jge
inc
sar
loopne
sbb
sub
dec
mov
test
test
fild
dec
mov
call
inc
into
pop
test
pop
cmps
push
outs
retf
jno
jno
popa
fisttp
or
sub
dec
fistp
and
pop
std
add
jb
jbe
cdq
inc
movs
gs
and
loopne
test
mov
xor
or
push
mov
popa
fidiv
call
cmp
cmps
dec
retf
pop
fcomp
add
sub
jle
js
sub
pop
mov
mov
add
(bad)
push
fcomp
xor
sub
hlt
pop
mov
lods
xchg
fwait
jb
nop
push
and
pop
hlt
es
sub
jmp
stos
imul
jbe
dec
mov
jo
mov
popf
dec
int3
daa
shl
fidiv
jmp
bswap
pop
mov
ins
aam
and
dec
stos
xchg
cli
push
mov
or
call
ins
icebp
push
fisub
test
aam
sar
dec
shr
adc
and
or
in
(bad)
cld
push
stos
jbe
aas
pop
cmp
cmc
inc
mov
cwde
mov
movs
nop
addr16
fldenv
loope
in
adc
loop
push
out
pop
mov
fstp
adc
scas
xchg
pusha
add
lock
mul
add
bswap
push
jp
arpl
pop
mov
shl
mul
sub
sub
mov
pop
mov
mov
push
movs
jnp
popa
int
out
iret
pop
scas
xchg
inc
mov
add
or
sub
cmp
sbb
push
ret
add
loopne
shl
add
jl
pop
xchg
lahf
inc
mov
mov
jae
nop
inc
aad
or
scas
fbstp
(bad)
pop
movs
inc
retf
pop
mov
add
into
and
adc
ins
(bad)
pop
push
shr
(bad)
push
mov
xchg
popa
fsubr
lea
inc
cmps
outs
mov
pop
mov
jnp
call
mov
mov
push
fwait
push
mov
enter
das
or
loop
lds
(bad)
ds
pop
lods
push
lods
xchg
sar
stc
xor
aaa
enter
or
cmp
lods
mov
das
(bad)
sub
or
sub
xor
xor
cmps
cmps
push
xchg
xchg
(bad)
sahf
fnstenv
cld
sub
sbb
xor
cmp
jge
xchg
lahf
pusha
stos
(bad)
movs
(bad)
lea
pusha
fstp
xchg
push
movs
jo
popf
jb
adc
inc
fimul
inc
mov
jne
jl
pushf
inc
shr
jbe
add
pop
repnz
mov
ds
xor
add
movs
jns
nop
mov
aad
call
mov
std
dec
stos
jge
jne
pushf
push
inc
aaa
repnz
and
inc
test
clc
dec
lea
sahf
jno
jge
in
pop
sbb
addr16
inc
neg
pop
jb
cmc
inc
lods
outs
cmps
imul
add
out
sub
test
je
adc
push
sbb
pop
mov
fwait
mov
sub
adc
out
fild
int3
cmp
jge
xor
or
repz
enter
sub
pop
ss
cmp
cmp
inc
mov
and
push
out
enter
sub
sub
push
clc
adc
or
cmc
pop
int3
es
adc
jns
jnp
(bad)
xchg
xchg
or
lock
cmp
pop
sbb
push
xor
and
pushf
mov
leave
push
in
lea
pushf
test
ss
pop
repnz
lods
inc
mov
and
or
out
lea
jge
jae
jge
inc
mov
xor
into
cmp
cdq
retfw
jge
push
mov
sbb
push
mov
ins
sar
das
dec
aam
adc
dec
lock
or
adc
lock
xchg
jp
add
xchg
outs
adc
pop
test
sahf
outs
and
mov
scas
mov
cmp
hlt
inc
mov
add
div
into
scas
addr16
jb
jns
gs
ins
test
inc
fldcw
std
add
pop
lods
scas
jl
dec
into
pop
(bad)
pusha
into
inc
aad
add
and
mov
inc
cmps
push
ds
push
xlat
and
or
add
ret
pop
and
das
and
std
pushf
call
pop
mov
fs
inc
ret
ins
mov
repz
int3
or
sub
dec
ret
and
and
out
fst
sbb
adc
push
shl
cld
xor
retf
cmp
pop
mov
dec
sbb
pop
push
call
push
sub
add
sub
loop
imul
fsub
dec
movs
ja
sbb
ins
xor
mov
nop
jl
jbe
imul
fwait
call
ins
jmp
jmp
in
pop
mov
jl
adc
sbb
pop
int
jecxz
rcr
jno
or
or
loopne
call
cmp
cmps
jo
add
lahf
pusha
mov
ret
inc
mov
mov
lods
mov
mov
adc
and
inc
fidiv
jmp
pop
push
or
adc
or
push
fmul
mov
sar
pop
cmps
xchg
inc
sti
and
cmp
dec
ror
cmp
pop
fcom
repz
scas
pusha
fidivr
lahf
jo
jne
xchg
jae
das
push
int3
sub
add
dec
retf
sub
(bad)
dec
scas
(bad)
sbb
inc
mov
fist
ins
add
hlt
or
movs
nop
ins
and
pop
(bad)
cmp
sub
ss
push
(bad)
mov
js
in
push
mov
fdivr
sbb
pop
fisttp
add
or
icebp
cmp
cwde
xchg
bound
jg
ss
daa
pop
int
rcl
ror
cdq
cwde
jno
jmp
push
sbb
sbb
xor
test
imul
lea
add
sbb
cmp
das
sbb
cmp
add
in
mov
dec
xlat
pop
ror
or
cmp
jbe
xchg
dec
(bad)
cmp
icebp
sub
sub
add
sbb
ret
pop
ss
push
test
mov
add
xor
inc
clc
sub
xor
push
xor
adc
aaa
sbb
push
or
adc
in
popa
mov
xchg
dec
mov
cmp
mov
jne
xor
inc
enter
sbb
push
movs
addr16
and
cmp
jge
sahf
cwde
xchg
xor
sub
hlt
xor
mov
loopne
cmc
xchg
lea
mov
stc
dec
mov
outs
mov
enter
push
test
push
leave
adc
sti
test
das
adc
das
out
dec
mov
or
cmp
xor
lock
jl
cmp
(bad)
dec
fiadd
xchg
call
fimul
jp
sahf
shl
add
sbb
xchg
nop
fidivr
adc
das
cli
add
cmp
pop
mov
mov
mov
jge
popf
nop
arpl
add
xchg
push
add
push
xor
mov
sahf
pop
dec
mov
repz
mov
pop
inc
loop
adc
push
sbb
or
in
test
jb
neg
(bad)
pop
div
outs
mov
popa
xor
mov
test
pushf
lds
mov
out
jg
into
int3
mov
push
xor
pop
push
ins
push
xchg
test
xor
ret
dec
jne
mov
je
les
bound
mov
jge
std
test
jne
aad
inc
cli
mov
inc
adc
stos
pop
call
call
jmp
arpl
int3
repz
jge
inc
dec
ret
popa
push
(bad)
repz
lock
outs
mov
out
loop
ret
inc
(bad)
shl
mov
int
test
adc
sub
sub
mov
sbb
cld
push
xor
out
xor
das
mov
pop
outs
pop
fst
mov
xchg
inc
xor
lock
mov
jae
or
jbe
pop
ins
outs
xchg
rol
adc
push
call
push
adc
cdq
pusha
or
lahf
call
adc
dec
adc
push
pop
aam
cmpxchg
adc
jmp
(bad)
dec
add
mov
test
div
stos
xchg
test
cmc
(bad)
std
mov
and
fs
(bad)
push
lea
mov
mov
ret
dec
hlt
mov
das
and
mov
xlat
int
cmc
(bad)
xchg
test
jmp
xor
mov
out
add
inc
xchg
mov
push
push
or
mov
shl
fdiv
lock
xchg
bound
add
or
outs
dec
sub
pop
mov
nop
dec
add
jne
mov
adc
ret
lods
jno
mov
push
pop
xor
inc
retf
add
push
out
xor
clc
loopne
retf
jp
in
xchg
aad
cli
(bad)
neg
xor
in
in
cmp
mov
xor
sbb
imul
mov
mov
rcl
mov
sub
iret
push
push
ja
movs
inc
lods
dec
or
in
pop
sahf
loope
push
jge
lods
popf
ret
int
test
xchg
sar
loopne
pop
mov
int
sub
fidiv
ds
bound
loope
adc
inc
je
loop
xor
pop
push
dec
pop
jbe
mov
push
mov
mov
dec
das
into
stos
sbb
mov
outs
add
mov
sahf
mov
xlat
retf
jmp
cmp
mov
mov
imul
pop
push
iret
cmp
and
sub
(bad)
xor
icebp
sbb
int
retf
mov
add
push
rcl
mov
and
and
inc
and
mov
xchg
lods
test
mov
icebp
icebp
and
into
out
pop
into
add
scas
mov
mov
dec
ret
fsubr
jbe
inc
dec
sbb
jge
inc
lods
test
xor
clc
ins
xor
sahf
daa
pop
dec
inc
push
(bad)
push
mov
and
js
lods
jno
mov
and
cmp
lock
cld
or
xor
int
gs
bound
xor
cmp
push
mov
mov
les
rcr
xchg
movs
jo
cmc
add
xor
ins
test
jecxz
mov
outs
jae
repz
movs
sahf
xchg
cdq
push
or
mov
scas
pop
and
je
aaa
sbb
je
(bad)
adc
ins
mov
add
and
jmp
ja
pushf
arpl
or
or
inc
(bad)
lock
aad
arpl
repz
stos
sbb
hlt
pop
(bad)
imul
gs
es
push
pop
jb
loopne
out
lds
jmp
jecxz
out
sub
jle
movs
repnz
push
push
rol
push
jns
(bad)
and
jmp
popa
leave
mov
outs
add
push
mov
or
adc
rcl
xchg
mov
fild
push
adc
cld
jne
(bad)
(bad)
jae
cli
icebp
fnstenv
repnz
dec
pop
(bad)
sub
pop
call
xchg
pop
xchg
push
sub
or
xor
fstp
push
jp
sub
sbb
aaa
sbb
fstp
inc
inc
mov
iret
dec
neg
cdq
sti
sub
cld
adc
icebp
jecxz
mov
cmp
out
cmps
dec
or
loope
sub
push
out
jp
fild
popf
addr16
popf
in
loop
stc
out
inc
inc
inc
add
(bad)
pusha
scas
xchg
out
mov
jmp
push
jo
retfw
cmp
ja
das
xchg
xor
(bad)
iret
mov
rol
cs
adc
inc
cdq
mov
mov
pop
test
or
imul
cmp
stos
jmp
jbe
inc
(bad)
cmp
mov
xlat
int
push
in
jmp
jmp
scas
adc
xor
stos
dec
mov
sbb
out
dec
lahf
mov
cld
xchg
gs
mov
stc
sub
jb
jmp
dec
adc
pop
fxch
and
mov
add
add
loop
pop
push
call
jo
push
je
sbb
adc
pop
add
inc
imul
mov
mov
(bad)
push
add
pop
push
sbb
inc
sbb
push
pop
jle
mov
loop
stc
add
(bad)
pop
outs
xor
gs
cmp
cld
test
jle
scas
repz
call
pusha
icebp
f2xm1
retf
stos
push
pop
icebp
pusha
ins
inc
and
push
jns
xchg
cmp
into
call
bnd
lds
es
ficom
mov
nop
cmp
lahf
push
or
pusha
out
add
pop
xlat
cmps
stc
dec
jle
push
mov
retf
pop
add
shr
(bad)
(bad)
dec
mov
call
daa
xchg
mov
aad
jecxz
jno
in
mov
dec
xor
dec
mov
(bad)
fidiv
mov
(bad)
lock
fs
mov
out
mov
mov
jnp
repnz
sub
aad
sti
loop
inc
jle
loope
leave
or
in
xchg
js
push
mov
cmc
jbe
movs
jmp
ja
xchg
xchg
push
(bad)
jnp
sahf
adc
ret
movs
lahf
push
mov
sub
fistp
xchg
pop
vmovaps
movs
ins
add
push
movs
adc
mov
test
and
push
leave
ficom
jge
(bad)
push
adc
ret
std
or
xlat
lods
cld
cmp
cmps
fbld
clc
mov
scas
adc
push
sub
fsub
inc
sub
jmp
fsub
mov
add
mov
js
mov
sti
push
pusha
mov
call
es
sbb
outs
out
les
mov
into
jne
mov
mov
mov
ret
dec
ins
mov
mov
out
xchg
cmp
in
imul
loop
inc
jmp
ins
sbb
push
bound
leave
iret
stc
bound
das
fbstp
jo
ins
push
call
cli
sbb
test
jmp
loopne
dec
(bad)
adc
inc
loope
iret
cwde
sub
add
sbb
(bad)
repz
sbb
pop
cli
xor
mov
and
jne
ins
test
dec
jb
xlat
sub
retf
stc
jmp
push
dec
xor
push
mov
fs
mov
int
pop
lock
(bad)
retf
mov
xor
mov
cli
inc
into
pop
mov
sbb
bound
and
xchg
and
(bad)
and
sahf
jne
pop
adc
xchg
ret
addr16
repnz
mov
add
out
nop
out
pop
sbb
dec
mov
inc
test
arpl
sar
pop
test
pop
(bad)
in
inc
fisttp
and
mov
(bad)
das
pop
in
test
pushf
data16
(bad)
les
imul
arpl
mov
xor
fwait
inc
std
mov
mov
xchg
mov
pop
sbb
pop
or
jo
mov
xlat
mov
push
fdivr
sub
sbb
mov
pusha
inc
in
in
mov
xchg
and
mov
out
adc
or
lods
inc
jp
movs
lahf
vandnps
xor
or
jge
stc
inc
and
popa
ds
test
jnp
dec
and
movs
jp
push
gs
jmp
mov
xor
cdq
jmp
fstp
mov
or
push
popf
sub
xor
inc
pop
and
in
popf
ins
(bad)
jo
out
pop
int
push
adc
jns
cwde
mov
pop
test
not
(bad)
cmp
or
adc
cld
stos
fild
or
stc
or
arpl
test
dec
arpl
test
push
mov
mov
xchg
loope
cmp
int3
imul
mov
addr16
jne
adc
pop
lock
pusha
dec
xchg
mov
cmp
loope
gs
lods
jecxz
add
imul
addr16
sbb
mov
ja
dec
leave
dec
adc
or
lods
rcr
fld
rcl
scas
out
ins
inc
mov
sub
jg
popa
pop
dec
push
jl
sbb
fidivr
loop
sbb
add
cmp
lods
or
xchg
cmp
mov
int3
lods
inc
jo
ficom
xchg
pop
mov
out
loop
gs
dec
mov
imul
bound
xor
inc
pop
or
or
ror
rcl
fsub
adc
push
shl
cmps
push
(bad)
jbe
lea
or
xlat
mov
cmc
push
pop
loopne
sub
leave
dec
cmp
jle
repz
push
dec
and
repnz
aaa
mov
cmc
cs
push
xchg
and
adc
add
ja
fs
outs
rcr
fbstp
pop
pop
daa
jp
scas
das
xchg
and
lock
cmps
adc
pop
cmps
sbb
out
cmp
pavgw
aas
xor
les
rcl
dec
sbb
fldl2t
fldenv
adc
call
out
push
imul
stos
out
pop
jl
dec
iret
test
shl
je
lock
aam
scas
retf
repnz
jl
sub
sti
pop
pop
pop
mov
(bad)
xor
adc
(bad)
call
cmp
into
in
ss
mov
mov
movs
popf
aaa
movs
jmp
jno
ret
xor
jl
jle
jno
mov
in
cmps
ins
repnz
or
sbb
add
and
jae
int3
(bad)
fdiv
jmp
mov
popf
mov
pop
lods
or
mov
push
rol
cmp
lods
mov
xor
bndstx
mov
cs
nop
or
mov
retf
js
pusha
pop
inc
lea
cmp
inc
ins
dec
sub
lds
call
xchg
hlt
outs
and
xchg
into
cmova
out
push
xor
mov
jge
and
and
jecxz
loopne
(bad)
ja
jns
pop
and
pop
and
or
pop
aam
mov
lods
pop
rcl
jae
jg
fisttp
aaa
xor
jmp
mov
jo
movs
sub
inc
and
mov
jb
not
sbb
mov
and
mov
pop
sbb
push
or
rcl
xchg
lea
out
cmp
push
es
fst
adc
test
adc
mov
jb
addr16
popf
out
jmp
sub
shr
loop
cmp
push
jo
jo
ins
inc
test
jne
sub
cli
bound
cmp
fxch
ret
clc
cmc
add
mov
shl
jge
cs
jg
popa
mov
sbb
pop
pop
pavgw
adc
popf
pop
jg
push
inc
js
daa
mov
and
sbb
dec
shl
inc
ret
dec
add
loope
and
push
cmps
jno
push
sub
jo
jl
mov
ret
ror
test
push
into
arpl
xchg
jg
dec
not
push
push
out
pusha
test
out
(bad)
sti
mov
mul
jnp
xchg
sbb
jl
dec
push
dec
sbb
sahf
cwde
mov
or
outs
lods
dec
test
sbb
je
(bad)
imul
add
jno
or
les
add
test
pop
mov
popa
xor
movs
jns
ficom
add
sar
mov
es
jmp
out
je
push
cmp
jno
test
fisttp
movs
mov
mov
fsubr
sbb
jmp
jecxz
movs
fwait
sub
dec
push
push
fiadd
pop
fild
mov
sub
or
sar
sbb
fwait
mov
shl
mov
ret
out
imul
sub
jno
(bad)
jmp
pop
in
out
nop
es
adc
sbb
mov
mov
scas
and
shl
dec
sbb
xchg
add
mov
test
ret
cmp
(bad)
push
sbb
sbb
push
push
(bad)
(bad)
sbb
jo
add
ins
sub
(bad)
rcl
pop
jp
jmp
test
ins
sub
jo
cmp
mov
fisttp
jbe
push
xchg
pop
lds
pop
call
aas
push
iret
adc
add
into
mov
js
in
or
cmp
popa
rol
fwait
dec
cmp
arpl
add
xchg
push
inc
sub
in
xor
daa
addr16
test
jg
movs
rcr
lahf
pop
gs
fidiv
and
sbb
and
stos
inc
not
popa
mov
sub
pop
pop
mov
pop
cmc
dec
lock
ror
pop
fucomi
or
xchg
mov
sar
sub
mov
outs
inc
aam
fisttp
cmp
stos
dec
(bad)
sub
gs
call
inc
jb
sti
lods
shl
push
and
xor
cwde
dec
adc
xor
mov
jecxz
cmp
(bad)
push
imul
jae
pop
das
push
mov
mov
dec
add
retf
add
fwait
push
fnsave
xchg
add
fstp
cs
pop
lea
in
stos
xor
xchg
mov
out
sub
aam
sub
cwde
sti
movs
mov
fwait
push
push
fmul
jb
add
mov
push
push
push
add
fbstp
das
cmps
cmp
mov
js
jl
ins
scas
shl
push
in
scas
pop
addr16
inc
stos
(bad)
iret
mov
mov
jbe
es
aam
inc
mov
cmp
pop
in
cmp
dec
in
mov
in
in
lahf
mov
ror
loope
sbb
inc
mov
(bad)
rol
(bad)
lock
push
cmps
test
loope
pop
nop
mov
adc
xchg
sbb
fist
stos
cs
sbb
popa
inc
inc
adc
jge
psrld
bound
jg
sar
and
mov
fist
inc
cdq
imul
sahf
mov
jmp
je
popa
test
jae
int3
mov
aam
mul
pop
inc
(bad)
mov
cmp
mov
aam
jo
jne
add
jno
out
rcr
stos
test
frstor
test
mov
cmp
and
jmp
or
lods
jmp
stc
shr
stos
xchg
sbb
dec
cdq
mov
aas
ja
push
and
jb
mov
inc
inc
mov
movs
(bad)
sahf
or
sar
dec
and
inc
enter
fwait
mov
jb
sbb
dec
icebp
cmp
fldcw
js
dec
int3
adc
fmul
sub
cmps
outs
neg
add
dec
(bad)
shr
mov
mov
sbb
jg
hlt
in
js
icebp
fucomi
push
fcom
sbb
sar
shr
xchg
sub
inc
push
or
adc
nop
mov
adc
es
mov
adc
add
gs
or
scas
mov
inc
push
hlt
jnp
adc
push
jnp
fistp
sbb
jmp
cmp
xor
or
ins
jae
jge
jb
cwde
iret
ffree
jmp
loop
jl
cmp
retf
stos
mul
cdq
mov
test
(bad)
mov
mov
jmp
out
mov
loope
ror
enter
fild
repz
mov
jmp
shl
ja
lea
stos
inc
loopne
push
mov
cld
fsubr
imul
into
cmp
xchg
sub
out
push
mov
(bad)
aaa
and
es
mov
mov
jp
aaa
add
fsin
(bad)
sbb
popa
pop
cmp
pop
pop
pop
js
(bad)
imul
jns
add
pop
imul
sbb
retf
outs
mov
jnp
call
pusha
pop
xchg
outs
and
or
cmp
das
jle
jo
jns
sbb
inc
mov
pop
jbe
jg
push
or
popa
cmp
(bad)
jb
xor
ins
mov
test
dec
mov
sub
sbb
dec
cmc
and
sub
sbb
mov
jmp
in
adc
iret
fld
out
dec
cmc
jno
stc
clc
jno
fldenv
test
xchg
push
int3
test
aam
clc
adc
pop
and
jne
or
inc
cdq
addr16
daa
push
jle
call
lods
lds
mov
xor
push
hlt
mov
jnp
daa
push
cmp
repz
jnp
xor
jns
xor
stos
arpl
mov
mov
jge
out
push
fs
imul
pop
clc
cmc
sar
push
jle
daa
push
jl
or
dec
xchg
or
pop
cmp
shl
jl
lds
adc
push
push
add
mov
hlt
fstp
retf
mov
icebp
ss
xor
sbb
pusha
or
or
inc
loope
movs
mov
sahf
mov
jecxz
ds
inc
(bad)
cmp
pop
jmp
jne
cdq
add
pushf
mov
cmp
add
jle
dec
and
xchg
fdiv
jecxz
outs
and
les
jae
adc
outs
mov
sub
or
dec
pop
xchg
push
push
xchg
fld
fimul
xor
and
cmp
(bad)
or
retf
cwde
sbb
mov
sti
test
aad
xor
add
xchg
mov
xor
(bad)
jmp
inc
dec
ja
ds
jmp
js
loope
arpl
push
jbe
xlat
mov
or
jnp
(bad)
iret
(bad)
sar
leave
rcl
mov
movs
jecxz
(bad)
(bad)
jne
push
fs
pop
jo
xchg
xor
cmps
enter
push
fisttp
loop
dec
clc
push
xor
sahf
sub
rcl
stc
imul
sbb
leave
jmp
push
and
pop
js
rol
test
inc
sbb
into
xchg
mov
xor
sahf
sub
into
shr
retf
inc
int3
dec
xchg
pop
xchg
(bad)
mov
jmp
xor
sbb
mov
jmp
les
pop
push
push
add
or
push
rcl
movs
je
ret
ffree
sbb
icebp
jmp
jg
push
sahf
jne
dec
fsubr
mov
out
test
into
xchg
(bad)
push
xchg
adc
lods
aaa
xchg
mov
xor
ret
lock
gs
rol
jno
add
mov
cmp
jae
mov
cmc
ds
jecxz
sti
inc
div
xchg
xchg
mov
mov
push
pop
xchg
and
dec
mov
rep
(bad)
dec
dec
cmps
inc
cli
add
sub
(bad)
(bad)
mov
inc
jge
dec
mov
mov
arpl
cs
xor
xchg
push
add
dec
add
inc
cmp
dec
and
jnp
imul
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
cld
mov
mov
(bad)
xchg
cld
mov
sar
retf
cmps
std
mov
int3
mov
(bad)
mov
ror
test
out
stc
xchg
icebp
(bad)
jecxz
les
div
(bad)
or
shl
test
mov
mov
enter
xlat
fisttp
clc
mov
mov
nop
clc
cwde
cli
xchg
loopne
sar
mov
xchg
les
aam
aad
hlt
nop
jmp
out
in
fild
out
lods
idiv
out
stc
call
retf
movs
xlat
sahf
repnz
test
mov
in
cwde
int3
and
cmc
lods
out
(bad)
cmps
fidiv
stc
xchg
out
xchg
scas
lds
out
loopne
sti
cwde
ficom
fdivr
mov
rcr
mov
std
cwde
fdivr
shl
(bad)
jmp
repz
mov
xchg
fidivr
imul
fdiv
repnz
fidivr
jmp
pushf
stc
mov
retf
fnsave
sti
xchg
shl
in
fwait
leave
test
lahf
cld
mov
iret
mov
lock
out
out
sar
mov
cdq
loop
(bad)
mov
test
mov
lods
out
cld
xchg
cmc
mov
xchg
iret
or
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
mov
mov
in
mov
nop
fidiv
mov
xchg
aad
shl
rol
xchg
repz
clc
mov
test
(bad)
mov
fiadd
idiv
loope
loopne
(bad)
mov
mov
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
cs
cmp
imul
daa
ja
push
push
inc
es
aas
jnp
dec
or
popf
call
in
sub
iret
mov
cwde
retf
mov
cld
mov
nop
in
xchg
hlt
xchg
not
in
cmp
fwait
enter
retf
mov
xchg
fnstcw
sub
sar
loopne
xchg
xchg
shl
iret
movs
jecxz
cli
xchg
icebp
mov
xchg
aad
ret
and
cmc
mov
fdiv
rol
lahf
out
mov
repz
int
fmul
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
pop
ss
push
jp
popf
xlat
xchg
fisttp
cld
mov
mov
(bad)
loop
loop
stc
mov
mov
retf
xchg
aam
xlat
fmul
stc
mov
mov
nop
sti
xchg
icebp
cdq
call
lods
jmp
test
fld
call
sahf
repz
jmp
scas
les
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
movs
(bad)
mov
in
mov
lahf
sti
fwait
icebp
add
int3
mov
idiv
ret
mov
mov
cld
pushf
clc
xchg
out
les
ror
fimul
jmp
mov
in
cld
xchg
div
ret
nop
out
loop
not
mov
mov
in
repnz
aam
in
mov
lods
sti
mov
xchg
repz
mov
fdiv
not
retf
mov
xchg
(bad)
xchg
sbb
jl
jl
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
lahf
aad
enter
int3
mov
loopne
mov
in
ror
xchg
shr
fld
or
gs
daa
je
push
adc
add
pop
xor
inc
xor
outs
pop
outs
sub
add
adc
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
sub
inc
or
or
popf
stc
mov
repnz
in
in
out
cdq
sar
mov
retf
scas
xlat
mov
mov
xchg
repnz
xchg
mov
mov
lock
aam
rcl
mov
test
stos
call
mov
push
cmp
push
or
inc
aaa
pushf
shl
les
or
pop
ss
pop
xor
pop
push
cmp
sbb
addr16
imul
xor
jns
popf
(bad)
test
cmps
in
mov
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
into
lahf
int3
mov
fcomp
repz
call
cld
xchg
cmc
mov
xchg
retf
mov
fidivr
icebp
mov
scas
ret
fnstsw
(bad)
xchg
cld
mov
sar
retf
cmps
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
sub
pop
pop
inc
push
pop
or
sub
jg
pop
or
pop
aas
pop
sub
push
xor
jge
jne
push
sbb
pop
sbb
ja
outs
add
(bad)
mov
(bad)
mov
nop
std
mov
xchg
icebp
mov
scas
out
cli
fwait
loop
out
mov
xchg
aad
std
xchg
(bad)
mov
int
in
stc
xchg
jmp
cmps
(bad)
mov
int
call
mov
test
ret
xchg
repz
lahf
aad
leave
cmps
(bad)
cmps
lds
test
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
and
arpl
inc
adc
jns
push
das
dec
or
addr16
adc
jle
inc
sub
cmp
adc
sub
dec
push
dec
sub
ja
pop
sbb
popf
call
int3
mov
push
cs
xor
pop
cmp
popf
repnz
lock
out
cmps
retf
movs
loope
(bad)
sahf
(bad)
test
movs
lock
retf
scas
jmp
mov
xchg
jmp
xchg
test
mov
rcr
enter
rcr
int3
test
mov
(bad)
xchg
icebp
mov
scas
loope
rcr
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
cld
scas
inc
loope
call
mov
mov
test
mov
cwde
in
test
iret
pushf
jmp
not
fcomp
mov
loope
shl
les
jecxz
ret
mov
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
in
in
lahf
sar
sbb
inc
xor
dec
xor
pop
xor
data16
sbb
push
ds
pop
ins
sub
gs
popa
cmp
dec
push
outs
adc
jne
gs
cmp
jp
pop
add
dec
ds
inc
cmp
push
aaa
ins
push
jo
jnp
jbe
dec
and
inc
add
and
jle
push
add
push
xor
pop
adc
or
bound
js
pop
and
sbb
data16
pop
or
pop
cmp
sub
jns
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
add
jl
imul
pushf
xchg
mov
xchg
push
addr16
add
cmp
push
mov
fisubr
adc
repz
sbb
sahf
mov
cwde
inc
xlat
cmp
add
cmp
xor
pop
int3
mov
sbb
rcl
jg
push
shl
loop
dec
aam
icebp
xor
or
mov
adc
inc
mov
sbb
test
stos
jne
jg
mov
inc
mov
mov
inc
xchg
jne
adc
jmp
ret
and
call
daa
or
rcr
mov
and
cmp
cmp
dec
retf
mov
inc
icebp
cs
xor
pop
mov
jmp
clc
lods
test
fadd
fs
jae
mov
fsub
or
mov
add
sbb
ror
in
cli
and
inc
stos
js
xor
push
lods
(bad)
dec
mov
adc
mov
les
push
in
pop
(bad)
and
daa
sbb
sbb
pop
mov
lods
jge
(bad)
xchg
jae
adc
or
ret
daa
repz
(bad)
dec
fild
push
call
outs
int3
pop
fdivr
lods
dec
mov
cwde
test
mov
adc
add
frstor
sbb
out
cld
add
pop
or
pop
sbb
push
adc
aad
test
xchg
xchg
pusha
and
lds
mov
fnstcw
sub
ss
aas
shr
(bad)
pop
jp
jno
cmp
sub
fidivr
loopne
dec
std
pop
test
popa
cmps
jbe
arpl
mov
lock
mov
lods
jge
jb
ficom
jae
pusha
aam
leave
push
or
cmp
in
aad
mov
ret
sub
sbb
das
adc
pop
aad
adc
das
sbb
xor
clc
sub
push
cld
inc
clc
dec
adc
dec
test
ror
adc
xor
sub
in
pop
stos
outs
(bad)
pop
add
aad
test
cmp
cmp
push
cmps
test
push
add
sbb
imul
adc
jecxz
out
out
cs
fbstp
jmp
ds
ror
and
push
sub
add
ds
sbb
push
mov
shl
dec
mov
cdq
data16
retf
dec
icebp
add
psllw
in
ds
pop
dec
mov
inc
fidiv
out
lea
rcl
lea
cwde
addr16
cmp
jp
popf
inc
into
inc
lds
or
dec
fsubr
movups
aaa
lock
and
pop
fld
retf
sahf
(bad)
rcl
and
jae
inc
mov
sub
cmp
or
int
sbb
ja
push
mov
jb
mov
push
fadd
push
outs
(bad)
es
cmp
push
nop
ins
mov
push
xor
aaa
mul
pmulhw
adc
pop
pop
sbb
loopne
call
ret
xor
cmp
ss
lods
inc
int
mov
in
dec
stc
cmp
out
dec
scas
push
inc
mov
adc
jge
jge
xchg
dec
fistp
ss
in
test
jg
in
ss
stos
jo
das
lds
jg
pop
mov
mov
les
icebp
sub
pop
scas
inc
fnstsw
int
mov
cli
pop
scas
outs
test
ror
jecxz
mov
(bad)
pop
and
push
mov
mov
in
mov
div
jb
js
test
xlat
sub
inc
shl
call
fisubr
jmp
ret
ins
(bad)
es
pop
mov
rcl
call
mov
dec
mov
inc
fild
cmp
xor
push
loop
or
adc
loope
xchg
cs
in
call
mov
mov
(bad)
pop
(bad)
ss
shl
inc
cmps
test
fstp
das
in
xor
out
(bad)
sub
dec
mov
xchg
out
and
cli
or
xchg
stos
push
mov
fcomp
call
push
mov
mov
and
jno
outs
int
mov
sar
stos
popf
lods
popa
shl
rol
xor
sub
ror
mov
jl
lea
add
enter
pop
iret
pop
cmps
jae
fsubr
pop
shl
ret
call
and
cmp
mov
mov
shr
push
cmp
or
ins
jmp
lods
xchg
mov
fimul
retf
je
dec
idiv
loopne
fcomp
dec
scas
mov
into
je
and
push
cli
pop
std
push
mov
(bad)
push
or
push
mov
fistp
rcr
shl
adc
int3
and
loope
test
xchg
pop
leave
push
cmp
lds
ret
push
cld
pop
mov
ss
adc
xor
cli
add
sub
push
scas
cmp
int3
xor
pop
jmp
mov
sub
push
fstp
addr16
jmp
adc
and
lods
shr
adc
daa
xor
xchg
xchg
cmps
pushf
mov
cmp
push
loop
clc
das
jecxz
cmp
fsub
push
adc
jae
cmp
loop
mov
or
add
in
adc
or
dec
shr
in
fistp
push
mov
mov
xchg
ins
shl
mov
pop
aaa
or
push
mov
mov
or
dec
mov
shl
das
leave
xor
in
adc
sub
xchg
push
stos
jge
ins
mov
sub
cmp
dec
sar
in
jb
arpl
sub
ss
int
rcl
jae
ins
xchg
dec
retf
pop
fimul
fdivr
pop
repnz
mov
push
stc
sub
jmp
adc
xchg
push
jns
fimul
cmps
push
mov
bound
jmp
dec
fisub
or
inc
mov
aam
out
sbb
loopne
add
push
push
jecxz
xor
and
or
dec
mov
out
push
mov
es
pop
movs
fld
push
sub
pop
xchg
and
shl
dec
shl
out
ds
and
ss
jo
ja
xor
sbb
les
je
das
call
mov
retf
pushf
mov
xchg
ret
push
mov
rcr
jp
cwde
pusha
adc
cmp
loopne
lods
lods
imul
inc
add
dec
xor
push
and
jmp
adc
push
test
dec
fstp
mov
inc
(bad)
dec
stos
jne
push
sbb
dec
shl
in
or
pop
mov
movs
loope
(bad)
sbb
xor
ins
stos
dec
in
xor
pop
fcomp
xor
mov
dec
loope
push
in
adc
aad
adc
or
dec
mov
mov
cmp
xor
inc
lds
adc
push
out
sub
sbb
sub
lods
bound
mov
xor
loopne
xor
sub
inc
cmps
call
sub
mov
xchg
jge
(bad)
xlat
and
jle
cmp
icebp
es
rol
mov
or
add
cmp
xor
pop
aam
lock
test
scas
lahf
jg
outs
mov
gs
icebp
pop
(bad)
cmc
inc
xchg
sub
test
int3
dec
fnstcw
add
xchg
inc
mov
inc
retf
pop
and
push
xchg
xchg
lahf
ins
mov
mov
int
add
cli
push
test
adc
ficomp
xchg
hlt
pop
cmps
jne
xchg
xchg
inc
int3
mov
mov
mov
lea
jecxz
inc
call
cld
pop
fnsave
leave
dec
mov
test
add
xor
mov
adc
push
mov
mov
add
cmc
pop
mov
or
cmp
pop
mov
xchg
pusha
mov
add
icebp
pop
mov
pop
into
daa
in
sub
ret
dec
xlat
sub
push
stos
inc
mov
ins
mov
(bad)
pop
fisub
call
sub
psubb
movs
inc
mov
icebp
or
out
cmps
retfw
and
ins
add
lods
outs
mov
mov
push
stos
dec
sbb
out
cmc
jg
ja
and
add
pop
aaa
sbb
dec
lods
jl
push
les
loop
paddb
add
cmp
ret
xor
xor
mov
xchg
jae
pop
invd
push
sub
dec
movs
(bad)
outs
mov
pop
or
sub
ss
jmp
movs
sahf
jle
push
repnz
lock
add
xor
push
int3
sub
sbb
sub
jmp
retf
sahf
mov
sbb
dec
aam
add
popa
mov
mov
cmp
call
arpl
imul
ja
sahf
inc
aam
test
test
cmp
push
xor
xor
unpcklps
sub
cmp
mov
inc
(bad)
push
shl
or
mov
fld
and
mov
les
outs
mov
xchg
aam
cmp
loopne
cs
call
adc
add
cld
xor
cmp
pop
pop
shl
cmp
push
(bad)
cld
cmp
sbb
(bad)
push
mov
mov
test
test
or
sub
sub
and
cmp
or
dec
retf
ins
mov
fidivr
sub
ret
add
or
jns
xor
ret
retf
in
dec
into
mov
rol
add
les
sahf
cwde
int
in
or
out
sub
mov
mov
mov
cmp
adc
push
fdivr
inc
fldcw
adc
pop
xchg
icebp
pop
movs
push
mov
jmp
jge
jp
cdq
inc
mov
hlt
sub
adc
ds
out
push
mov
lods
xchg
mov
call
mov
sbb
cmp
and
and
sbb
sbb
xchg
xchg
arpl
inc
cmc
jge
ja
mov
xchg
mov
shr
mov
aam
mov
ins
fld
xchg
call
adc
retf
or
xor
inc
xlat
pop
(bad)
sub
das
loopne
lds
mov
mov
jmp
ret
(bad)
mov
mov
sahf
xchg
cmp
and
sbb
mov
rol
fst
sbb
icebp
and
add
shr
cwde
popf
xchg
ror
jo
test
cmp
add
cmp
popf
xchg
inc
mov
scas
les
adc
xor
call
adc
call
test
js
arpl
dec
mov
cmp
xchg
pop
retf
jbe
dec
(bad)
inc
mov
add
retf
div
add
push
stos
popf
arpl
sub
hlt
xor
jne
mov
icebp
cmp
and
in
pop
stos
cmp
es
and
sbb
pop
mov
cmp
sub
and
les
scas
jge
imul
pop
test
mov
mov
test
cs
or
xchg
mov
ror
loope
mov
inc
cmps
out
das
(bad)
and
pop
sti
pop
mov
bound
icebp
add
aaa
dec
xor
add
jmp
cmp
xor
cmp
or
dec
fimul
(bad)
add
out
and
add
cmc
cmp
xor
sub
or
pop
lods
xchg
imul
std
cs
mov
aam
out
movs
mov
(bad)
fist
xchg
mov
loopne
fsub
js
ins
scas
imul
add
jg
jmp
mov
aaa
lds
xor
and
idiv
lods
sbb
ss
pop
push
jecxz
adc
loopne
adc
push
or
sub
pop
fadd
(bad)
popf
mov
mov
mov
inc
scas
ja
les
adc
sub
add
jae
inc
stos
jecxz
loope
fisubr
push
in
repnz
addr16
push
xchg
je
xor
out
cmp
xor
and
ret
push
aad
aad
fsub
push
scas
jle
mov
mov
jle
ss
sub
pop
lods
jl
pusha
adc
pop
out
and
sbb
ret
and
aas
in
jnp
jmp
and
sub
push
or
adc
js
jg
mov
mov
inc
test
sar
mov
xchg
(bad)
dec
iret
pop
mov
mov
jo
test
popa
aam
clc
sub
jg
jns
rcl
(bad)
pop
int
loop
shl
sahf
fwait
sahf
outs
fld
push
std
and
jno
aas
sbb
in
enter
cdq
lods
arpl
and
imul
pop
rdpmc
adc
fst
pop
(bad)
sub
or
pop
fstp
push
les
fst
inc
in
les
push
or
mov
stc
lea
and
pop
mov
fnstenv
adc
xor
add
loope
mov
jns
pop
lods
test
daa
sub
enter
sti
push
enter
ret
jmp
in
fstp
pop
shl
push
push
(bad)
sub
out
push
sub
ds
sub
fidiv
cwde
fisttp
and
dec
iret
js
aaa
aaa
sbb
sbb
out
arpl
push
into
pop
fsub
jb
inc
stos
mov
mov
jg
push
lds
mov
add
dec
lds
pop
and
pop
stc
xor
call
dec
shl
dec
retf
mov
div
sub
mov
test
add
jl
and
pop
rcl
fist
xchg
or
fwait
cmc
sub
cmp
sar
js
nop
ins
ret
and
dec
aad
aas
lock
shr
into
xchg
or
fmul
icebp
pop
xchg
rcl
mov
rcr
inc
test
shl
sbb
sub
push
fldcw
adc
cld
cmp
pop
mov
addr16
and
je
fwait
cwde
pushf
cwde
nop
(bad)
fisub
test
test
push
rcl
push
mov
cdq
mov
jae
cdq
mov
jg
ins
sar
gs
mov
push
mov
out
pop
or
add
or
(bad)
push
out
xchg
mov
mov
jno
adc
sbb
push
in
into
and
fldcw
add
pop
cmp
sub
cs
mov
popa
sub
jmp
push
add
es
mov
mov
xchg
jl
xor
rol
inc
ficom
mov
xchg
add
xchg
mov
push
jns
lods
arpl
cmp
movs
xchg
mov
mov
mov
sti
and
push
cmps
mov
xchg
mov
dec
xor
pop
cmps
xchg
fwait
xchg
imul
push
retf
pop
sar
mov
mov
fsubr
call
pop
shl
in
inc
int3
aaa
sub
jns
jne
mov
std
pop
aaa
push
adc
sub
ud2
popa
shl
sbb
getsec
add
icebp
dec
(bad)
push
iret
jl
nop
test
fldcw
inc
ror
push
test
jno
push
test
jb
and
outs
enter
les
sbb
jmp
mov
stos
xchg
mov
data16
jns
aas
jecxz
iret
inc
ret
ins
cs
inc
ror
fcom
popf
lods
fs
fdiv
in
pop
(bad)
js
popa
(bad)
outs
mov
inc
cmp
hlt
je
inc
stos
ins
fst
cdq
mov
rol
fisubr
popf
jo
je
and
push
stos
pushf
xchg
test
push
pop
out
mov
popa
std
inc
icebp
push
lock
rol
inc
cmp
pop
fbstp
pop
hlt
push
les
xchg
imul
add
xor
cmp
sub
push
mov
std
es
dec
shl
sbb
fild
push
push
in
rcl
push
repz
adc
jnp
lahf
nop
and
(bad)
pop
stos
data16
in
pop
aam
into
dec
cmc
push
int3
dec
add
xor
dec
in
and
cmp
mov
xor
in
inc
into
jge
jle
mov
std
adc
xor
scas
cwde
mov
cld
sub
lahf
gs
and
mov
or
dec
lock
icebp
sub
call
mov
lock
das
sbb
inc
lds
popa
test
or
push
cmc
sub
or
pop
pop
pop
gs
stos
bound
neg
ins
scas
ficom
std
or
pop
fld
jae
ins
xchg
sub
cmp
dec
or
rcl
pop
(bad)
jg
cmp
sub
push
add
xor
stos
mov
cmps
mov
cmp
pop
or
call
popf
arpl
pop
(bad)
ss
or
adc
jo
mov
xor
and
jmp
mov
test
xchg
icebp
push
(bad)
push
stos
mov
jle
sahf
push
inc
lock
and
mov
(bad)
outs
in
pop
(bad)
push
bound
mov
jb
js
xor
jne
dec
scas
xchg
scas
mov
xchg
(bad)
retf
pop
retf
sub
pop
ret
outs
aam
les
dec
rol
mov
mov
(bad)
inc
in
cmc
push
lods
nop
mov
ret
xor
sbb
push
jmp
sar
popa
stc
aaa
pop
or
add
xor
les
push
stos
sahf
jp
fwait
mov
fwait
mov
fidiv
ror
jp
dec
cld
push
rol
jl
dec
repnz
xor
shl
cmp
cs
fstp
js
js
out
dec
fcom
sub
pop
mov
shl
add
daa
je
xor
je
xchg
lahf
jg
ins
stos
jne
in
xor
adc
push
out
mov
cmps
fwait
ins
mov
test
add
out
ror
xor
pop
mov
dec
mov
test
pusha
mov
sar
das
sbb
mov
cmps
jbe
psrad
cmp
sbb
rol
jecxz
sbb
jmp
rcl
pop
test
or
adc
xchg
xchg
jo
and
xchg
jne
jbe
aas
retf
and
daa
out
xchg
arpl
mov
call
into
mov
stos
xchg
dec
(bad)
pop
adc
xor
push
adc
lds
adc
push
fadd
pop
mov
dec
fisttp
popf
addr16
imul
icebp
pop
push
outs
jmp
or
ret
adc
popf
xchg
mov
pushf
xchg
arpl
pop
movs
test
inc
(bad)
sahf
push
jp
cmp
cs
pop
repnz
stc
pop
out
in
cwde
push
ficom
xor
xchg
mov
push
fsubr
pop
(bad)
and
pop
out
popa
retf
ss
inc
leave
daa
std
adc
jmp
pop
ret
sub
ja
cmp
xchg
xchg
ja
shl
popa
aad
push
or
cmp
stc
pop
cmps
jnp
cmp
sub
sahf
cdq
push
xor
jmp
aad
(bad)
jmp
out
pop
mov
popf
enter
inc
mov
xchg
std
daa
jmp
out
cmp
xor
mov
call
test
push
mov
leave
dec
les
xchg
xchg
ja
and
and
ins
sub
(bad)
jbe
dec
retf
cmp
pop
stos
jg
cmps
mov
mov
pusha
ror
sbb
jg
ja
fadd
xchg
mov
sub
jmp
pop
out
sbb
and
loopne
push
push
fiadd
pop
mov
mov
ins
xor
pop
mov
mov
add
pop
xlat
or
jmp
call
inc
es
cmp
push
sub
adc
push
mov
mov
xchg
cdq
je
sbb
les
sbb
pop
int3
inc
int3
push
retf
sbb
ja
push
xor
sbb
les
inc
stos
mov
mov
jae
lahf
push
pop
dec
mov
and
ret
jp
xchg
mov
xor
cmp
and
fisubr
adc
xchg
lods
mov
ins
ror
mov
xchg
mov
rcl
sub
pop
sbb
repnz
sub
mov
xor
xor
adc
ja
push
test
mov
iret
push
(bad)
and
mov
popa
mov
js
and
mov
inc
scas
jno
and
gs
jl
pop
or
pop
pop
sub
sbb
test
in
jp
daa
cmp
test
xlat
mov
lahf
(bad)
jns
jae
push
cmp
pusha
out
inc
(bad)
fisttp
popa
sbb
aas
xor
aam
sar
outs
sar
pop
and
je
imul
dec
out
push
ds
and
mov
dec
fild
popf
lock
sbb
loope
out
(bad)
loopne
fdiv
mov
(bad)
(bad)
push
(bad)
and
ret
rol
xor
cs
retfw
fimul
shr
int
mov
pushf
loope
les
xor
das
inc
out
in
(bad)
int
adc
cmp
mov
dec
fcom
or
sub
inc
jmp
adc
jno
sbb
push
pop
int3
jle
movs
test
pop
fs
jne
jbe
push
jo
cdq
add
pusha
xor
push
and
mov
fdiv
mov
sbb
push
aam
sti
mov
mov
std
scas
lds
push
cmp
add
aad
les
jno
jae
sbb
xchg
push
add
shr
and
add
push
cmp
dec
and
ins
jmp
into
scas
xchg
mov
jae
daa
adc
jl
gs
push
pop
or
data16
mov
stos
leave
mov
mov
and
mov
dec
rcl
cmps
test
inc
and
sahf
in
(bad)
lods
iret
movs
lea
sub
shl
mov
xchg
mov
or
ins
in
mov
ror
xchg
mov
lods
in
aam
xor
and
jbe
push
cmp
cmp
hlt
gs
inc
or
jns
sub
jo
jo
bound
popa
sbb
pop
ds
addr16
jns
inc
aas
push
or
dec
daa
push
ds
and
xor
push
outs
es
pusha
and
inc
push
je
xor
pop
pop
ret
inc
in
mov
mov
imul
aas
push
aad
fmul
jae
jae
cmp
sbb
ins
shl
jb
jnp
push
add
push
inc
(bad)
cmp
js
inc
pop
xchg
shr
lods
xlat
sahf
in
neg
add
jbe
outs
or
adc
sbb
pop
and
jne
mov
(bad)
mov
adc
mov
mov
mov
sbb
fwait
repnz
lods
stos
test
push
std
jl
sbb
or
fwait
mov
ror
cmp
(bad)
sbb
fistp
(bad)
(bad)
test
add
pop
or
pop
sub
inc
sub
ret
fmul
repz
mov
out
(bad)
cmc
fwait
cli
cdq
hlt
test
mov
(bad)
mov
fmul
std
mov
xchg
test
ret
mov
pop
or
sub
dec
repz
repz
sahf
cdq
cli
inc
in
push
xor
cmp
sti
mov
push
retf
jge
and
pop
std
mov
dec
loope
push
gs
ja
push
and
mov
test
fst
lds
xchg
xchg
mov
repnz
lahf
cld
xchg
mov
sar
call
mov
fimul
hlt
mov
mov
not
das
and
mov
xchg
xchg
aad
aam
xor
out
stos
mov
add
ss
fnstsw
xchg
(bad)
imul
jge
inc
cmp
jns
pop
cmp
dec
das
inc
xor
outs
add
push
sbb
outs
cmp
outs
or
add
inc
cmp
push
cmp
ins
adc
jo
popa
xor
sti
xchg
xlat
nop
out
fnstsw
loopne
hlt
cwde
sbb
jnp
pop
retf
mov
sbb
cmp
stos
mov
imul
and
js
push
test
out
or
sbb
popf
jmp
(bad)
mov
aad
int3
scas
jmp
fwait
cmc
xchg
neg
fnsave
ret
nop
ret
scas
int3
mov
xchg
fidivr
add
imul
adc
xor
push
adc
adc
or
inc
loope
loopne
test
push
sub
xor
and
jg
stos
mov
ds
inc
std
xchg
add
pop
xchg
cli
test
mov
xchg
fdivr
call
mov
mov
idiv
shl
ret
popf
repz
icebp
pushf
in
movs
leave
mov
mov
mov
ficom
cmp
xchg
test
jg
ins
cmp
pop
and
iret
xchg
popf
mov
add
in
stos
(bad)
mov
and
cmc
inc
xlat
test
rcr
push
xor
jno
arpl
dec
cs
xor
cs
pop
adc
push
add
pop
xor
pop
or
jb
push
push
dec
pop
push
push
jb
imul
adc
push
adc
or
adc
jbe
jbe
jl
imul
inc
int
adc
xor
data16
call
push
std
dec
and
or
jo
gs
mov
pop
cld
jns
adc
jbe
mov
lea
ror
repnz
jmp
repnz
xlat
sahf
cli
mov
leave
movs
aam
icebp
mov
mov
scas
in
mov
scas
cld
mov
xchg
repnz
lods
in
vpand
test
lea
ins
and
outs
and
jno
mov
fmul
int3
fnsave
xchg
xchg
mov
rol
xor
arpl
inc
retf
cmps
mov
and
and
jmp
mov
in
and
add
push
and
and
pop
xor
jge
jb
jl
inc
sub
push
adc
ins
and
dec
sub
jne
pop
sbb
imul
ds
sub
arpl
ins
aaa
jo
cmp
and
sub
cld
test
loopne
cmp
push
pop
ss
push
popf
fidivr
(bad)
mov
pop
(bad)
jg
sbb
inc
out
dec
in
xor
ja
or
pusha
sti
mov
cmps
mov
inc
out
add
adc
pop
sub
pusha
adc
push
ss
gs
push
jb
jl
pop
aas
inc
sub
inc
ss
imul
sub
adc
ins
pop
xor
or
dec
pop
cwde
mov
xchg
ss
xchg
push
inc
and
jo
jo
enter
sub
je
inc
cmp
je
bound
xor
outs
pop
xor
cmp
sub
push
ins
or
dec
sub
ins
add
adc
jp
pop
retf
mov
(bad)
(bad)
mov
mov
in
mov
xor
xlat
scas
lds
fisttp
aam
int3
mov
cmps
adc
push
sub
mov
dec
and
jo
jo
enter
sub
fisubr
dec
aaa
mov
or
mov
out
mov
sub
or
inc
xor
and
adc
je
xchg
jmp
scas
out
mov
pop
dec
xor
jecxz
cmc
xchg
mov
frstor
rcr
mov
enter
repz
cld
lahf
repnz
fbstp
xor
push
sbb
(bad)
retf
fidivr
xor
sub
scas
fdivr
push
add
xchg
icebp
mov
mov
pop
jmp
repnz
lahf
test
and
add
call
repnz
dec
(bad)
mov
fdiv
push
sub
test
fst
lds
xchg
xchg
mov
repnz
lahf
cld
mov
cli
xchg
in
push
ss
xchg
out
pop
fist
xor
xchg
icebp
in
aas
pop
mov
jae
dec
cmp
(bad)
mov
cld
inc
and
adc
and
push
cmp
sbb
inc
iret
and
jge
pusha
sar
mov
shl
cld
mov
fimul
cld
sahf
fst
lds
mov
mov
mov
(bad)
nop
shr
jmp
jnp
dec
daa
lahf
stc
mov
inc
sub
xor
jp
push
sub
ds
cs
add
add
popf
stc
fld
test
inc
and
jbe
test
imul
dec
adc
push
pop
sub
push
sub
inc
and
jg
jo
jle
inc
sub
push
adc
daa
je
es
dec
add
or
into
mov
mov
icebp
mov
fist
sti
vphadddq
int
pop
push
push
je
xor
pop
jp
jb
jno
dec
cmp
dec
pop
and
or
and
dec
rcr
sub
sbb
push
push
inc
and
jge
jb
jl
inc
sub
push
adc
ins
and
dec
sub
jne
pop
sbb
imul
ds
pop
sub
cmp
pop
jno
fstp
loopne
not
jecxz
inc
cs
xor
loopne
cmc
push
sub
or
outs
jmp
(bad)
int
mov
lock
sbb
or
fidivr
into
jb
popf
test
push
cmp
pop
add
push
dec
cmp
inc
cmp
push
xor
outs
add
outs
push
push
cmp
inc
add
aaa
fs
pop
dec
and
and
mov
iret
mov
xlat
mov
(bad)
mov
adc
js
push
hlt
push
dec
pop
fistp
xor
sub
pop
shr
and
fidiv
ins
lds
mov
push
sub
inc
and
jge
jb
jl
inc
sub
push
adc
ins
and
dec
sub
jne
pop
sbb
popf
jmp
mov
sti
mov
repz
and
in
iret
mov
rep
rol
fimul
xchg
out
fdiv
stos
int
les
mov
les
rep
ret
aam
(bad)
cmps
retf
lahf
out
out
rol
mov
pushf
out
ret
mov
stos
leave
mov
mov
in
neg
stos
repnz
xchg
cmps
adc
or
dec
pop
and
jbe
jl
fwait
les
mov
xchg
enter
and
inc
pop
ss
jns
pushf
jmp
sbb
ja
sbb
call
add
fild
cmp
lahf
int3
sahf
jmp
xchg
cmps
lds
int3
test
xchg
sti
nop
shl
in
lds
cld
cwde
fnstsw
(bad)
mov
xchg
jmp
jmp
sahf
jmp
pop
jecxz
les
int
call
aaa
mov
movs
cli
stos
fisttp
mov
into
mov
cwde
hlt
mov
sahf
(bad)
mov
inc
cmp
push
push
xor
imul
cmp
popa
and
and
xchg
fdivr
mov
ins
adc
jecxz
pop
sub
ins
ss
fnstsw
jns
les
inc
aam
out
je
dec
movs
jp
popf
xchg
mov
push
frstor
xchg
fwait
jb
xchg
jg
aam
inc
mov
jbe
or
sbb
loopne
adc
push
push
xor
sub
in
mov
ins
mov
xlat
push
sbb
lahf
ins
enter
push
mov
sar
fs
push
jmp
iret
xchg
xchg
test
dec
mov
jb
shl
cli
aaa
les
cmp
xor
jmp
into
push
int3
xor
dec
into
pop
mov
das
or
es
xchg
fnstsw
int
jmp
std
push
cmp
push
lea
sbb
xor
and
sbb
push
mov
ins
fsub
les
jmp
push
retf
dec
mov
jmp
repz
push
loope
das
in
cmp
and
adc
xchg
mov
lods
ins
mov
push
ficom
cmp
push
iret
js
mov
mov
xor
test
nop
repnz
dec
or
push
adc
mov
pop
xor
call
mov
pop
or
xchg
jmp
into
xchg
repnz
cld
pop
test
mov
in
mov
mov
xchg
outs
mov
and
cmp
add
(bad)
inc
iret
pop
mov
js
fwait
xchg
pushf
stos
int
mov
mov
gs
jl
outs
cld
pop
mov
push
or
inc
sbb
jns
xor
test
mov
popa
fidiv
aas
lds
ja
jle
sahf
mov
xchg
push
stos
imul
adc
cmp
cwde
in
stos
fidiv
outs
mov
pop
lods
push
mov
mov
outs
rcl
pop
push
xor
dec
sub
dec
sub
push
adc
jle
sub
push
fmul
sbb
dec
or
(bad)
sbb
(bad)
cmp
cmp
les
xor
and
jne
jp
je
dec
and
pop
jmp
lahf
retf
popf
cld
mov
stos
lds
cmp
and
nop
ret
xchg
jmp
cs
test
jno
pop
cmp
daa
dec
sbb
inc
aas
pop
sbb
jb
push
sbb
inc
cs
push
xchg
leave
mov
mov
sbb
cs
xor
inc
and
out
in
mov
or
sbb
outs
pop
cmp
or
popf
lock
out
(bad)
mov
stos
loop
cli
aam
(bad)
scas
int
shl
dec
enter
and
outs
fstp
(bad)
stos
xchg
add
push
jnp
fwait
nop
mov
outs
mov
sbb
into
push
xchg
dec
inc
pop
push
xor
xor
dec
jmp
adc
cmp
jne
push
fild
push
adc
jne
pop
loopne
scas
xchg
mov
cmp
adc
jnp
outs
ret
nop
stos
mov
xor
adc
inc
pop
aaa
dec
xchg
fs
and
and
aad
lds
(bad)
mov
sbb
pusha
pop
imul
lahf
xlat
or
pop
ret
jg
sbb
xor
mov
xchg
cdq
out
mov
out
push
push
ficom
mov
scas
xchg
jmp
(bad)
test
es
pop
in
stos
scas
mov
push
fist
xor
inc
aas
jno
pop
cld
xchg
mov
jp
fwait
shl
outs
sub
pushf
mov
cmp
pop
pop
sub
cmp
push
push
js
lea
loope
or
bound
or
sub
jg
les
xchg
mov
test
push
cmp
dec
and
add
in
(bad)
lods
iret
movs
lea
sub
shl
mov
xchg
mov
mov
aad
in
sti
aad
les
mov
and
push
xor
sub
je
jne
inc
cmp
sub
div
inc
repnz
or
dec
and
imul
int
aam
int
call
call
into
mov
test
pop
add
cwde
into
lods
xchg
mov
sti
pop
fiadd
sbb
jecxz
mov
loopne
pop
or
push
dec
adc
retf
mov
mov
icebp
xchg
dec
rcl
out
mov
mov
fild
mov
mov
inc
sub
adc
dec
(bad)
pop
iret
mov
mov
and
mov
mov
std
xchg
aad
repnz
jecxz
loop
xlat
(bad)
jmp
fdiv
push
and
inc
add
xor
sbb
pop
(bad)
test
inc
cmp
ds
pop
cmp
add
js
pop
sbb
or
fwait
repnz
mov
fstp
ss
cmp
mov
mov
xchg
mov
sar
mov
mov
mov
test
cmc
adc
movs
in
cmp
div
sub
mov
loop
pop
mov
sub
adc
pop
clc
call
push
push
gs
cmp
ins
sbb
bound
jp
je
push
aaa
dec
and
xor
ss
cmp
push
inc
sbb
jnp
dec
cmp
inc
imul
pop
daa
push
jge
pop
push
add
push
push
push
cmp
jo
push
sbb
cmp
dec
es
push
jae
popa
or
pusha
xor
mov
sbb
(bad)
loopne
lods
arpl
xchg
fld
sbb
add
jns
mov
add
ja
jns
inc
sub
ds
push
jae
imul
push
dec
sub
inc
sub
add
push
cmp
cwde
aad
rol
icebp
test
mov
cmp
cs
xor
outs
add
push
sbb
outs
cmp
outs
or
add
inc
cmp
push
cmp
ins
adc
jo
popa
xor
inc
cmp
into
stos
out
int
jmp
or
dec
ds
ins
or
cli
and
and
cmp
pop
aaa
inc
iret
mov
ficomp
mov
int
loopne
(bad)
mov
into
xchg
xchg
repz
retf
test
and
pop
xor
pop
dec
es
test
mov
xchg
repnz
shr
(bad)
movs
repz
mov
mov
sbb
pop
fstp
scas
(bad)
mov
sar
fidiv
xor
lock
(bad)
inc
mov
fadd
cdq
adc
jne
jo
imul
adc
dec
push
xor
es
sub
stos
retf
cmps
cmc
stos
retf
movs
std
xchg
hlt
xchg
adc
inc
add
sar
mov
(bad)
out
mov
scas
cld
mov
pause
sbb
push
xor
push
dec
cmp
and
int3
mov
clc
xchg
jmp
fst
mov
rcr
mov
mov
shr
sbb
(bad)
xchg
rol
rcr
mov
mov
xchg
xchg
repnz
xchg
fidiv
inc
retf
or
xor
push
repnz
call
sub
sub
push
ret
jns
mov
xchg
fwait
ret
dec
aas
sub
pcmpeqb
push
fidiv
outs
sar
cs
rcl
mov
push
ja
xor
push
pop
clc
inc
out
mov
mov
outs
in
ss
shl
jae
push
adc
loope
int3
test
push
out
add
inc
push
xchg
leave
mov
mov
stc
mov
xor
jp
mov
push
js
pop
xor
imul
loope
xchg
add
and
mov
cmp
adc
je
jns
mov
nop
bound
cmp
sbb
mov
dec
shl
add
arpl
jge
test
xchg
test
imul
jecxz
mov
lock
sub
sub
dec
rcr
xchg
call
loope
(bad)
test
xor
cdq
cdq
ror
std
outs
loopne
cmp
pop
adc
hlt
push
repnz
mov
loopne
aaa
loop
sar
(bad)
dec
and
ficomp
test
jmp
fadd
cdq
mov
outs
sub
add
imul
mov
pop
jmp
repnz
lahf
test
and
add
call
jmp
(bad)
mov
cwde
inc
add
popa
lahf
cmp
cmp
dec
loope
sahf
mov
in
int3
outs
sub
xor
ins
fisttp
test
mov
call
xchg
push
cli
pop
sub
test
jo
pop
int
mov
rcr
push
cs
call
sbb
push
jmp
mov
fld
and
aaa
push
lock
pop
sti
inc
jmp
vmread
je
or
inc
pop
pop
ss
add
ror
aaa
loop
sar
(bad)
dec
and
push
jge
and
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
rol
and
xchg
lods
inc
clc
xchg
into
sbb
loop
cwde
pop
cmps
movs
mov
sti
jp
jbe
dec
sub
jne
and
clc
mov
inc
xor
pop
out
call
(bad)
movs
into
mov
xchg
ins
jmp
adc
imul
mov
call
adc
outs
sbb
jge
inc
sahf
add
dec
mov
sbb
push
cmp
aam
(bad)
cmps
cli
sub
sub
jb
inc
mov
shl
imul
push
popf
cmp
or
or
int
push
ins
sbb
sub
call
ds
dec
or
iret
stc
mov
add
add
js
shl
ins
xchg
push
dec
sbb
and
jb
xchg
std
sbb
iret
mov
jae
cmps
cli
pushf
push
pop
jae
mov
sahf
enter
or
xchg
mov
stos
lods
retf
test
stos
lock
outs
push
outs
pop
and
inc
or
popa
jmp
inc
xor
sub
jl
sar
sub
mov
mov
shl
sbb
sbb
in
xor
dec
xor
retf
jo
outs
das
inc
adc
fistp
js
inc
sbb
pop
or
imul
jle
sub
das
inc
stos
movs
ret
jge
test
mov
xchg
jmp
ins
cmp
inc
out
out
enter
inc
scas
dec
cmovnp
jb
inc
movs
sub
scas
and
and
pop
ror
mov
jmp
dec
sbb
imul
repz
neg
xchg
pop
cwde
fistp
jl
jnp
and
xchg
bnd
or
push
in
add
stc
mov
(bad)
daa
into
xchg
retf
push
in
adc
mov
or
mov
xchg
add
rcr
popa
xor
ds
add
adc
shl
push
mov
sub
sub
stos
push
sbb
(bad)
out
sub
xchg
aam
(bad)
mov
rol
bound
shl
or
outs
loop
mov
xor
cmps
lods
inc
mov
mov
iret
mov
rcl
into
imul
adc
shl
jecxz
pop
loopne
fstp
bound
dec
or
call
out
jnp
cmp
daa
gs
mov
xor
add
fimul
neg
mov
in
out
xchg
test
mov
iret
mov
mov
aas
pop
push
not
jg
(bad)
hlt
cmp
ss
bound
jge
out
add
ja
popf
(bad)
xlat
mov
scas
hlt
mov
mov
sub
pop
pop
inc
(bad)
jle
push
cmp
ror
inc
and
into
jp
dec
in
cmps
mov
cmps
icebp
jne
push
cmp
inc
sub
aaa
dec
cmps
dec
xor
call
mov
or
push
add
sbb
xchg
push
cmp
neg
pop
xor
repz
cwde
retf
dec
mov
inc
cmp
gs
out
xchg
shl
mov
inc
loope
mov
popa
stos
and
dec
mov
(bad)
xchg
sar
hlt
or
mov
shl
jl
sar
inc
sbb
add
ins
or
daa
push
adc
sbb
out
mov
ja
mov
add
jl
pop
sbb
jo
push
sbb
leave
in
(bad)
ficomp
sbb
or
rcr
push
imul
loope
add
or
push
dec
mov
dec
mov
mov
es
push
pop
jmp
dec
add
(bad)
movs
shl
mov
add
adc
aam
sub
out
xchg
retf
mov
mov
popa
xchg
mov
jae
dec
cmps
pop
adc
fs
mov
imul
call
mov
dec
scas
aad
mov
inc
and
jbe
and
dec
add
enter
push
mov
xchg
shr
mov
mov
adc
imul
call
inc
jecxz
jmp
mul
add
mov
xchg
leave
cmp
loopne
lock
push
xor
and
int3
(bad)
in
loop
test
test
adc
jmp
sbb
neg
stos
mov
fisttp
inc
lea
xor
sub
mov
mov
xchg
leave
cmp
(bad)
push
pop
ins
sub
pusha
jno
inc
pop
pusha
or
jg
inc
pop
dec
cmp
lahf
repz
ret
data16
shr
stc
mov
cmp
sar
mov
pop
in
cmp
pop
sub
push
cmp
jnp
and
mov
pusha
mov
cmps
mov
scas
call
stc
ins
mov
enter
in
jle
jl
cs
sub
xchg
addr16
sti
xor
mov
mov
int
dec
dec
sbb
stos
jb
pop
xor
jb
xchg
shl
out
ss
xor
jo
sub
in
mov
es
mov
leave
stos
div
jb
dec
repz
stos
push
sub
jbe
inc
sbb
adc
push
add
sub
loope
or
daa
inc
loopne
mov
xor
je
cld
sub
jmp
aam
ficomp
jnp
xchg
cmps
dec
movs
enter
mov
lds
dec
xor
adc
outs
xor
pop
push
in
push
push
daa
push
sbb
dec
push
jo
inc
test
add
cmp
mov
xor
and
lahf
inc
add
(bad)
aad
out
xchg
cmc
bound
jae
cdq
cmps
push
mov
leave
mov
or
xchg
enter
jmp
dec
xchg
sub
inc
das
push
or
adc
dec
ss
jge
test
in
shr
iret
or
(bad)
pop
sub
and
sub
push
hlt
pop
sbb
sbb
ds
scas
xor
lods
fldl2e
jmp
jmp
xor
call
push
xor
pop
popa
mov
add
les
sbb
loopne
int
test
jp
pop
pushf
sub
add
ss
jne
jns
jne
fdiv
(bad)
out
mov
lods
into
xchg
lods
inc
pop
xor
pop
gs
xchg
loope
shl
ret
add
stc
sbb
das
mov
and
scas
and
imul
mov
sti
xchg
inc
jg
inc
push
das
in
in
cmp
push
push
xor
add
inc
sub
int
mov
jb
jp
push
outs
cmp
retf
xor
test
or
into
iret
test
pop
sbb
push
xor
pop
sti
outs
popf
clc
jp
push
dec
or
call
cmps
idiv
mov
or
icebp
cwde
in
or
inc
sbb
fcomp
cld
js
dec
adc
and
mov
cmc
out
sbb
sbb
ds
popf
clc
pushf
shl
xchg
(bad)
or
and
mov
cmp
cmp
hlt
mov
pop
es
push
push
cmp
test
sbb
out
fnstcw
lahf
in
cmc
cmp
(bad)
mov
icebp
(bad)
jmp
in
adc
es
mov
add
test
test
jp
ja
sub
xchg
stc
push
xchg
lods
dec
rol
cmp
jne
push
adc
dec
adc
out
leave
xchg
dec
pop
pop
jge
and
dec
xor
or
add
xchg
popf
lods
push
or
push
adc
add
test
xor
in
clc
sbb
in
clc
add
dec
or
fimul
mov
stos
aad
mov
adc
pop
jmp
test
mov
jae
aas
xor
dec
xor
sbb
push
aaa
inc
add
je
es
stos
int3
add
pop
mov
fs
test
lods
repnz
repz
push
cmp
jle
mov
xor
mov
pushf
retf
inc
push
jno
xor
mov
and
sbb
mov
mov
mov
adc
jno
int
mov
inc
inc
daa
sub
dec
pop
dec
xor
retf
pop
add
pop
retf
xor
pop
call
icebp
loopne
cmps
fsubr
fnsave
push
cmp
mov
adc
jmp
aam
ja
hlt
xor
in
jp
lock
sti
mov
and
or
jo
pusha
or
push
bswap
jmp
jnp
and
add
or
adc
nop
cmc
xchg
jle
cs
pusha
mov
mov
mov
shl
in
lds
outs
adc
dec
cmp
inc
adc
adc
mov
imul
mov
adc
ss
adc
or
xor
dec
add
aam
adc
pop
cmps
jp
dec
stos
ficom
push
cmc
lods
mov
jae
inc
add
and
imul
es
mov
popf
and
mov
test
xchg
(bad)
mov
aam
into
or
(bad)
mov
xchg
stos
dec
cmps
int
fild
fild
sub
data16
imul
and
push
fstp
dec
push
gs
inc
add
and
icebp
xor
push
cmovo
sub
adc
xor
push
lock
jl
out
fucom
adc
lds
mov
xchg
(bad)
stos
into
stos
test
add
cmp
cmp
jle
das
cld
mov
xor
test
xor
cmp
cmp
xchg
and
inc
jmp
lock
pop
aas
push
mov
mov
jcxz
sbb
jmp
mov
bound
push
adc
stos
mov
sahf
mov
aaa
and
(bad)
xchg
mov
mov
sbb
retf
les
ja
int
mov
and
pop
and
inc
or
mov
xor
jecxz
rcl
jmp
pop
cmp
pop
mov
mov
pushf
inc
retf
cdq
mov
mov
sbb
mov
mov
xchg
mov
push
dec
sub
or
pop
in
fwait
std
ss
cmp
cmp
pop
mov
rcl
push
call
(bad)
pop
or
enter
js
jno
imul
frstor
outs
(bad)
jne
es
int
xchg
out
mov
ss
ret
das
xor
dec
das
push
scas
mov
or
mov
ja
mov
cmp
cld
pusha
clc
xchg
imul
dec
push
arpl
jno
sub
ins
or
push
push
add
imul
and
pop
push
dec
cmp
xchg
cmps
aad
repnz
mov
retf
scas
stos
push
mov
hlt
(bad)
lock
ins
cmp
adc
adc
or
pop
aaa
aad
pop
push
pop
or
xchg
shl
mov
xchg
std
sbb
arpl
ret
out
bound
adc
ds
es
sbb
pop
or
add
push
repz
or
cli
or
inc
scas
fdiv
xor
das
lds
inc
add
out
sub
icebp
arpl
add
dec
sub
dec
and
cli
xchg
mov
sub
or
(bad)
jmp
jns
jns
out
nop
pusha
mov
cmps
ror
cs
test
xor
jo
shl
jns
ins
adc
aas
inc
jecxz
jbe
mov
(bad)
in
gs
dec
or
mov
(bad)
pop
sub
loopne
rcr
int
fld
not
movs
jnp
ret
mov
ret
ss
enter
inc
stc
data16
repz
sub
into
(bad)
sti
fwait
(bad)
adc
sti
rcr
mov
mov
inc
sub
es
xor
es
inc
sbb
stos
aad
imul
mov
in
mov
sub
in
mov
add
pop
sbb
icebp
clc
lea
cld
mov
out
sbb
jg
ja
sbb
dec
cmp
inc
mov
movs
iret
mov
adc
mov
jae
pop
adc
push
mov
xchg
jo
int3
in
shl
xlat
sub
mov
(bad)
lahf
aad
ins
pop
inc
out
arpl
push
lahf
mov
xchg
mul
std
(bad)
add
out
nop
mov
test
ins
mov
jmp
pop
jbe
pop
mov
sbb
out
test
xor
ficomp
mov
mov
pushf
les
test
aaa
out
pop
pop
jmp
fs
add
or
xchg
les
pop
sbb
das
push
sub
inc
and
or
out
test
mov
xchg
out
mov
in
scas
aam
or
xchg
iret
mov
xchg
ror
clc
push
cmp
adc
add
bound
adc
cmp
push
adc
xor
dec
mov
enter
mov
enter
mov
das
inc
or
dec
mov
pop
sti
xchg
stc
xchg
les
add
xor
push
jns
cdq
retf
inc
push
out
pop
jmp
loop
mov
leave
xor
xor
push
sbb
out
out
mov
scas
repnz
fldcw
xchg
sub
xor
xor
(bad)
cwde
shr
xchg
pop
or
outs
call
dec
mov
retf
adc
call
lds
add
jle
movs
in
movs
les
inc
xor
inc
add
push
es
mov
ins
jmp
retf
scas
stos
dec
cmp
arpl
mov
sbb
retf
fidiv
int
hlt
sbb
in
xchg
repnz
sub
cli
add
stos
inc
pop
xor
adc
ret
aaa
push
pop
(bad)
scas
fisub
push
adc
dec
lods
js
jne
js
jp
sub
mov
icebp
mov
enter
mov
outs
adc
jnp
xor
pop
out
cmp
in
int
ficomp
ds
cdq
lds
retf
mov
stos
repz
xchg
or
test
(bad)
fidivr
(bad)
cmps
enter
ins
call
xchg
les
shl
and
jno
mov
stos
cmps
mul
xchg
les
push
adc
js
dec
jecxz
mov
mov
jmp
stos
les
dec
adc
popa
cmp
jecxz
push
push
out
mov
jmp
push
inc
sub
or
fldenv
cs
mov
jg
jg
cmp
sub
dec
sub
ds
loopne
and
loop
(bad)
mov
aam
jmp
ret
sahf
retf
lods
movs
hlt
popa
loope
lds
inc
mov
test
dec
push
jg
repz
jecxz
stos
dec
ja
push
dec
push
push
sbb
in
sbb
mov
fstp
cmc
cdq
cmps
retf
sub
(bad)
movs
cli
ja
jge
and
mov
adc
mov
xchg
pop
jge
data16
inc
add
and
hlt
inc
xor
pop
mov
scas
icebp
call
fwait
jge
ret
outs
add
mov
test
aam
sar
outs
loopne
adc
inc
mov
pop
pop
mov
cmp
ficom
shr
shl
shl
push
or
adc
enter
inc
sbb
movs
enter
mov
xchg
imul
push
adc
push
dec
emms
adc
push
add
inc
or
mov
fadd
stos
into
loop
sti
test
adc
mov
push
mov
(bad)
cmc
arpl
pusha
or
jb
outs
or
ins
ds
sbb
dec
cmps
lock
mov
xchg
stos
dec
pop
adc
push
jne
and
movs
jmp
idiv
popf
stc
mov
add
jp
test
scas
cmc
sbb
jne
int
push
iret
movs
frstor
push
out
outs
jns
push
fs
hlt
adc
cmp
adc
or
jg
or
out
mov
sahf
(bad)
popa
push
pop
pusha
sub
leave
mov
(bad)
test
inc
add
je
push
sbb
inc
sbb
pop
add
call
xchg
fdivr
cmp
out
test
xchg
mov
pusha
sbb
lock
cdq
and
push
ja
xchg
fdiv
cdq
shl
arpl
push
mov
inc
bound
imul
jl
icebp
test
enter
icebp
xchg
inc
es
cli
cdq
ins
sbb
test
jg
push
inc
mov
dec
sbb
or
mov
mov
rcr
test
icebp
es
and
mov
outs
or
xchg
mov
jno
inc
xor
sahf
aam
aad
(bad)
or
rol
xchg
jno
xor
in
mov
test
mov
scas
leave
mov
pop
jbe
and
jl
push
sbb
adc
dec
add
rsqrtss
inc
ss
push
jle
shl
and
cs
jecxz
repz
hlt
mov
popa
cmp
cs
or
in
movs
retf
mov
les
pop
push
dec
adc
gs
loop
xor
psrld
push
and
mov
inc
add
shr
xlat
mov
and
inc
jp
outs
neg
das
and
and
cmc
mov
xchg
rol
inc
or
dec
sub
out
pop
jnp
push
adc
mov
mov
sub
inc
and
int3
(bad)
mov
push
cmp
push
and
and
add
pop
xchg
pop
ja
jns
ds
or
jmp
cmp
pop
ss
mov
test
ds
sbb
shr
pop
xor
retf
repnz
xchg
sti
add
mov
stos
enter
mov
cmp
mov
fs
(bad)
aam
rcr
inc
adc
shl
jmp
pop
or
cmc
imul
adc
push
fwait
cmp
dec
add
das
and
out
xchg
sti
addr16
adc
jg
pop
or
sbb
outs
sbb
pop
adc
(bad)
loopne
mov
xchg
mov
inc
les
imul
in
stc
pusha
hlt
jbe
popf
mov
cwde
mov
sbb
cs
mov
xchg
and
out
mov
adc
pop
adc
or
add
adc
add
push
les
cdq
cmps
xchg
mov
pushf
fbstp
xchg
scas
pushf
xchg
test
fsubr
jmp
jb
cmp
dec
adc
cs
xor
sub
push
adc
sub
push
adc
pop
imul
imul
nop
mov
dec
in
inc
push
add
cmp
push
push
out
out
lods
in
mov
clc
mov
mov
jnp
xchg
std
pushf
int
xor
jae
out
xlat
push
sbb
mov
mov
cwde
cld
xchg
jge
add
push
cmp
xor
pop
shl
popa
adc
pop
out
inc
jmp
push
dec
jmp
imul
mov
cmp
fistp
sub
mov
aad
lods
in
mov
cwde
std
mov
or
inc
adc
retf
mov
push
sub
mov
mov
add
push
fld
lock
popa
adc
test
push
iret
mov
stos
mov
push
push
mov
ja
jae
mov
call
pushf
pop
and
add
xor
dec
(bad)
sub
fnstenv
popf
cmc
push
enter
out
mov
and
fdivr
jne
sub
and
ds
in
retf
pop
push
push
aas
dec
ror
xchg
lock
jbe
lods
imul
hlt
xchg
inc
jp
push
cli
(bad)
out
sbb
inc
scas
adc
push
push
mov
or
cld
imul
sbb
jle
fdivr
pop
(bad)
lods
mov
xchg
sti
jae
push
add
push
sbb
sub
out
inc
lds
fadd
ror
cmp
data16
(bad)
jno
sbb
jmp
xchg
lock
mov
imul
ds
mov
ds
or
and
cmp
sub
aaa
dec
cmp
out
daa
dec
adc
pushf
into
xchg
lds
inc
pop
pop
push
push
or
jns
dec
bswap
xchg
popa
adc
push
push
inc
out
pop
or
js
imul
jae
(bad)
pop
add
and
outs
or
push
add
xchg
push
add
push
or
imul
jg
ins
push
je
imul
adc
ror
cmps
jecxz
leave
pop
jg
jno
dec
and
or
pop
js
bound
fld
jb
or
add
lea
daa
pop
xor
or
hlt
adc
sbb
xchg
test
dec
xor
dec
retf
outs
daa
je
pusha
xor
retf
and
imul
out
push
mov
cwde
rcl
cmp
push
or
sti
lahf
(bad)
data16
jne
sub
adc
pop
in
mov
ins
aas
dec
mov
lods
(bad)
mov
inc
cmp
sbb
push
xor
aad
and
test
loop
cld
sahf
mov
push
push
ja
jns
push
pop
aas
push
ds
inc
add
movs
push
dec
sub
push
nop
iret
mov
bound
ins
sbb
push
(bad)
shr
or
adc
and
outs
into
nop
(bad)
lahf
jb
outs
daa
sub
cdq
fidivr
cmp
sbb
or
push
ins
sbb
lahf
repnz
(bad)
ss
xor
inc
pop
inc
aas
push
sahf
in
mov
rol
dec
icebp
mov
or
rcl
xchg
lock
in
test
xchg
cli
pushf
fdiv
jno
mov
adc
popa
pop
je
mov
jb
dec
das
leave
test
mov
ds
in
sub
retf
sahf
sar
dec
jmp
ins
add
mov
cs
push
gs
loopne
fisttp
xor
sahf
sub
pop
jmp
stc
(bad)
xchg
(bad)
mov
sti
add
adc
into
cld
jg
pop
shl
pusha
pop
addr16
pop
jg
out
xchg
div
xchg
add
sbb
mov
lods
cs
sub
jecxz
dec
sbb
and
lds
inc
add
push
ds
test
outs
add
mov
mov
test
retf
test
sbb
rcr
jb
dec
adc
dec
or
shl
mov
ret
inc
packssdw
push
outs
jmp
les
loopne
rcl
ins
push
inc
and
or
(bad)
lds
and
or
jp
jns
pop
push
cmp
push
add
push
fdiv
xor
add
adc
inc
and
mov
test
enter
mov
mov
mov
arpl
inc
push
inc
cmp
dec
add
mov
mov
gs
fiadd
push
or
fs
inc
and
ret
mov
call
mov
int
jmp
xor
pop
pop
dec
pop
push
xor
popa
add
pop
sbb
jae
pop
sbb
or
jne
cwde
fsub
ret
sub
jecxz
sub
jp
jnp
jnp
popa
add
retf
lock
lock
test
inc
cmp
shl
push
mov
or
xor
jg
push
loope
les
push
jg
mov
mov
xchg
adc
push
cmp
mov
nop
mov
push
xor
push
xor
test
mov
and
jno
test
mov
jecxz
pushf
call
pop
aaa
data16
scas
idiv
jnp
pop
adc
stos
in
in
xchg
shl
out
lahf
xchg
inc
mov
cmps
mov
xchg
rcl
jle
jo
and
jmp
pop
cmp
push
add
jno
data16
dec
rcl
fst
aad
enter
push
jp
push
aaa
sub
fnstsw
mov
pop
and
xor
fild
xchg
shr
mov
sbb
dec
and
cmp
push
sbb
popa
adc
test
(bad)
out
repz
leave
sub
add
ds
jb
mov
cli
mov
mov
mov
scas
jmp
adc
jo
popa
xor
add
inc
sbb
ja
push
sub
dec
cmp
add
fldcw
or
pop
and
push
inc
and
popw
fs
sbb
adc
dec
push
jg
stos
leave
cmp
ins
in
xchg
leave
bound
ins
mov
call
cdq
ficom
(bad)
pusha
and
fbstp
loopne
sub
dec
pop
pop
fild
or
ret
jp
xchg
jmp
push
scas
les
cmc
bound
inc
cmovbe
repnz
mov
call
cmp
jns
mov
jp
jnp
pop
adc
ret
mov
dec
xor
adc
stc
sbb
xchg
cmp
jae
inc
or
je
mov
retf
test
mov
les
je
push
xor
ins
sbb
sub
pusha
add
imul
xchg
stc
xchg
fs
mov
xor
inc
push
push
xor
mov
call
call
sbb
inc
daa
mov
in
movs
retf
mov
sbb
jg
mov
xchg
es
mov
inc
or
or
fld
push
aaa
jne
cmp
das
jp
add
ret
pushf
clc
mov
neg
sub
lods
out
mov
or
pop
pop
cmp
arpl
inc
add
fwait
(bad)
lods
shl
into
push
aad
les
push
jb
inc
es
daa
inc
cmp
cmps
out
repz
and
sub
fmul
mov
movs
jg
nop
(bad)
jno
lea
cmc
mov
xchg
popf
fwait
enter
and
pusha
mov
ficomp
into
mov
scas
fistp
jle
pop
inc
(bad)
mov
add
scas
jmp
sbb
cwde
loopne
or
jbe
inc
or
pop
cs
dec
xor
lods
and
call
stos
cdq
repz
retf
test
inc
or
or
sti
sar
stc
xchg
rol
xor
adc
call
push
pop
stc
mov
faddp
jnp
pop
fiadd
adc
mov
dec
push
inc
and
mov
sbb
dec
and
dec
dec
add
push
xor
push
sbb
add
jno
pop
ss
sub
std
scas
fcmovnb
lea
sbb
ja
push
xor
cmp
sub
xor
and
imul
sahf
retf
mov
js
aam
mov
xchg
jmp
out
mov
sub
retf
scas
in
dec
sbb
dec
pop
push
cmp
stc
mov
and
dec
add
das
mov
xchg
mov
xor
mov
and
retf
and
sub
dec
xor
mov
ss
push
dec
je
push
mov
mov
and
mov
mov
test
sbb
push
xor
jp
push
and
pop
cs
sub
nop
std
arpl
movs
cmp
sbb
xchg
into
xchg
(bad)
retf
adc
or
mov
int
jl
or
cmc
mov
dec
adc
jl
push
push
jge
jae
lods
pop
sub
jno
test
mov
add
adc
not
scas
int
jle
pop
and
mov
jo
pop
fwait
loope
sbb
sbb
mov
jb
test
pop
sub
loope
cdq
(bad)
mov
pop
lahf
repnz
pop
jge
stos
call
mov
push
adc
add
cmp
or
imul
test
xchg
and
xchg
rcl
cli
mov
loope
scas
out
lahf
and
sbb
cs
rcr
jne
adc
nop
ret
xchg
mov
test
scas
retf
sar
(bad)
stos
sar
and
push
or
add
xor
div
hlt
mov
idiv
sahf
std
call
pop
jp
jbe
sbb
jp
sub
dec
jmp
mov
outs
lods
cmp
std
jo
push
ins
jl
gs
add
and
cmps
sub
cmps
fnsave
sub
inc
or
jae
jne
pop
inc
xor
ds
lds
hlt
xor
cmovbe
movs
fild
adc
addr16
mov
mov
shl
push
inc
in
mov
(bad)
sub
ror
push
(bad)
sar
cld
mov
aam
(bad)
sbb
test
xor
push
sbb
xchg
rcl
xor
mov
test
cdq
loope
add
mov
out
jecxz
stc
xor
inc
cs
mul
stos
iret
inc
and
cs
ficomp
push
rcl
aas
sub
pop
jge
jl
jecxz
int3
mov
lods
push
xor
cmp
sub
fisub
ds
stos
fisttp
mov
test
jmp
ret
jmp
(bad)
in
xchg
lock
movs
mov
xor
in
in
mov
clc
xchg
push
and
push
add
sbb
and
arpl
xchg
stc
mov
mov
cdq
fild
fcom
or
popf
cld
inc
sub
adc
xor
imul
icebp
test
cmp
and
(bad)
mov
inc
or
pop
cmp
push
push
push
cmp
cld
xchg
and
sbb
dec
cmp
sbb
jnp
pusha
and
pusha
xor
pop
and
inc
and
dec
pop
jge
pusha
xchg
mov
xchg
shl
in
hlt
bound
inc
adc
inc
xor
movs
shl
das
push
cmp
cmp
xor
pop
pop
jge
gs
sub
inc
add
cdq
xor
aas
push
gs
pop
ins
ins
aas
ins
aam
int
fidivr
fdiv
xchg
inc
ret
jl
pop
mov
retf
sbb
fidivr
stc
xchg
and
leave
cmps
rol
rcr
inc
and
sub
or
xchg
popa
xor
sbb
add
test
and
mov
xor
mov
gs
add
push
movs
adc
dec
or
pop
mov
cdq
rcl
js
pop
dec
sbb
push
jl
loopne
int
add
mov
or
cmp
inc
push
pop
jae
pop
cmp
inc
and
ja
test
mov
xchg
inc
xor
dec
sbb
(bad)
shl
outs
int
cmp
dec
cmp
sbb
push
int
cld
mov
(bad)
sti
scas
lock
add
sti
mov
fnstsw
push
outs
es
jl
out
cld
fidivr
sbb
push
and
jg
xchg
fbstp
mov
loope
push
push
xor
push
cmp
adc
inc
sub
jne
pusha
cmp
add
std
into
pushf
call
sbb
pop
jne
sub
pop
sub
pop
inc
and
pop
adc
mov
inc
sub
dec
add
inc
push
ret
fdiv
imul
mov
stos
aaa
jp
ins
and
sub
sub
mov
sbb
jnp
jne
pop
sti
scas
shl
loopne
retf
ja
sbb
cmps
rcl
mov
xchg
jno
sub
mov
aam
(bad)
inc
xor
inc
sub
pop
add
add
enter
fstp
ss
cli
xor
dec
pop
dec
cmp
jb
inc
and
mov
(bad)
adc
push
aaa
je
adc
adc
nop
popa
mov
std
loop
iret
xchg
inc
bound
arpl
sub
inc
xrelease
nop
fnstcw
and
cmp
sub
call
enter
pop
add
cs
das
dec
pop
push
mov
push
aaa
dec
pop
out
mov
xchg
lods
push
jne
inc
add
test
mov
pop
ja
sbb
int
fst
inc
push
cs
fst
adc
outs
lock
push
and
push
add
fmul
(bad)
xor
lods
aad
mov
xor
adc
push
fisttp
mov
sti
mov
(bad)
out
js
jnp
in
xchg
cld
mov
lods
inc
push
inc
adc
sub
or
pop
push
inc
and
ret
mov
adc
pusha
add
or
pop
dec
and
mov
mov
xchg
xor
inc
mov
pop
fwait
icebp
mov
test
test
mov
mov
mov
outs
or
daa
dec
pop
ins
add
(bad)
neg
int
mov
sti
mov
pushf
inc
mov
pop
pop
xor
add
idiv
pop
adc
std
xchg
shl
popa
or
inc
cli
lods
jmp
sub
xchg
repz
stos
les
jae
into
repz
cdq
rcr
sbb
jne
ins
adc
sbb
lods
or
jns
adc
lods
in
mov
outs
daa
rcl
and
lods
out
(bad)
cmc
add
ins
idiv
mov
nop
enter
sbb
add
and
inc
sub
and
sub
xchg
aam
into
xchg
sub
push
jnp
mov
es
sub
push
daa
outs
add
cs
or
mov
test
mov
test
mov
mov
mov
shl
jge
dec
sub
mov
mov
pop
mov
lods
mov
ds
pop
xchg
cmps
call
nop
addr16
int
mov
fsubr
(bad)
mov
in
sbb
jbe
push
adc
pop
push
xor
sbb
push
cmp
(bad)
outs
cmp
push
sbb
jp
sbb
outs
or
sub
mov
xchg
shr
inc
cmp
retf
lahf
mov
or
sub
shl
repnz
addr16
adc
jo
aas
pop
es
sbb
mov
(bad)
fidivr
test
xchg
lock
mov
pushf
leave
mov
lahf
mov
shl
pop
jb
cmp
sbb
inc
stos
cmps
repz
data16
lahf
icebp
bound
pop
jnp
push
sbb
jge
jns
push
dec
sub
daa
bound
ret
mov
outs
pop
shl
call
(bad)
mov
mov
sti
popa
add
test
(bad)
iret
movs
or
jae
daa
jne
and
dec
sub
das
dec
push
inc
cmp
sub
ss
and
shl
mov
dec
or
xor
push
dec
ds
and
(bad)
cmc
lahf
into
(bad)
aam
ds
mov
lods
jmp
aam
into
mov
cmp
cmp
push
ss
mov
leave
lahf
xlat
mov
inc
aas
push
or
jge
push
dec
aaa
pop
push
dec
or
scas
jecxz
enter
and
das
inc
daa
pop
aaa
xor
jecxz
lds
add
jnp
jno
mul
dec
add
pop
cmp
std
popw
jne
xchg
repz
mov
fsub
or
dec
pop
or
sar
adc
jp
mov
cmps
xlat
mov
sbb
push
xchg
lds
mov
loope
mov
mov
xor
mov
mov
mov
sbb
push
ja
xchg
out
shr
retf
lahf
(bad)
test
stos
fisubr
inc
sbb
push
aaa
push
xchg
cld
mov
mov
out
mov
xchg
test
lds
jg
xchg
stc
fbstp
stos
out
mov
data16
out
mov
test
nop
xchg
sar
nop
rol
pop
add
xlat
pusha
adc
cmp
or
dec
xor
push
jg
adc
inc
pop
jp
sub
push
sbb
add
imul
jl
imul
mov
jecxz
xlat
xchg
add
es
sub
leave
mov
push
add
sub
cmps
stos
jmp
add
sub
pop
push
dec
sub
outs
or
leave
mov
mov
call
xor
jl
push
cmp
hlt
bound
ins
repnz
imul
push
pop
inc
pop
inc
nop/reserved
dec
or
ret
sar
addr16
(bad)
outs
es
sar
push
jl
jb
lods
jmp
pusha
add
push
outs
loope
ss
loopne
or
retf
ins
adc
dec
cs
adc
inc
sbb
pop
xor
and
lods
call
aaa
cmp
xor
rcl
jnp
and
cmp
push
mov
std
movs
lock
scas
mov
push
sbb
icebp
inc
add
mov
std
inc
sub
gs
mov
movs
iret
xchg
fisttp
in
and
lock
les
adc
sub
cmp
int3
inc
or
push
or
test
adc
add
test
loop
int
add
dec
add
into
jmp
es
jb
adc
push
fistp
pop
into
imul
xchg
aam
xlat
xchg
icebp
xchg
stos
retf
test
out
xchg
test
mov
rcr
mov
mov
imul
aad
add
jmp
dec
and
nop
ror
aas
jae
loop
(bad)
popa
add
bnd
popa
add
std
xchg
aam
rcr
mov
and
je
xor
bound
out
in
add
and
aas
ja
dec
cmp
pop
add
fcom
push
aaa
push
rcl
xchg
and
mov
ja
sbb
pusha
and
loopne
jae
inc
ds
inc
sbb
pop
cmp
and
and
cld
mov
scas
imul
dec
sbb
aas
jl
cmp
push
inc
sbb
imul
retf
repnz
and
clc
xchg
stc
dec
sub
xchg
fisttp
mov
fwait
push
push
sub
call
test
and
mov
mov
sub
in
ret
daa
pop
xor
mov
dec
push
shl
adc
cmc
xchg
js
scas
int
or
ins
adc
xor
cmovl
stos
(bad)
jle
stos
leave
and
push
ins
adc
clc
mov
mov
mov
clc
mov
loop
add
repnz
ss
mov
mov
adc
push
sbb
mov
push
sbb
pop
ins
sar
inc
add
or
cmp
jp
inc
in
push
je
mov
cmps
hlt
xchg
fdiv
jne
push
push
cmp
inc
(bad)
mov
xor
clc
and
cmp
inc
(bad)
pop
add
add
cmp
push
adc
sub
leave
mov
enter
fidivr
scas
sub
pop
add
adc
retf
mov
cdq
fist
jge
add
hlt
mov
xor
arpl
loop
xchg
(bad)
mov
lahf
icebp
push
dec
push
(bad)
mov
xlat
in
mov
sti
pushf
fld
movs
mov
(bad)
scas
push
add
sub
dec
sbb
mov
movs
ja
xchg
icebp
or
mov
xor
jg
outs
rol
cmc
xchg
jmp
aas
or
jae
not
popa
mov
push
or
jge
lods
aam
icebp
pop
cmp
fdiv
lods
ror
pop
pop
out
mov
pop
cmp
mov
stc
cwde
pop
xor
or
jg
jne
push
jae
popa
xor
jle
js
bound
or
sub
sbb
fnstcw
dec
fisttp
retf
and
pushw
bound
imul
sahf
repz
jl
les
(bad)
movs
loop
jge
pop
shr
sub
ds
sbb
mov
outs
int3
scas
std
and
mov
lods
aam
inc
xor
call
sbb
sbb
mov
mov
add
xlat
sub
test
mov
cmp
inc
adc
in
mov
add
shr
call
jg
(bad)
jmp
sub
clc
mov
xchg
stc
cwde
sti
cmp
xor
pushf
neg
sahf
sti
mov
call
push
mov
push
sbb
add
mov
mov
push
add
adc
aam
icebp
es
xor
dec
fs
sbb
xchg
movs
xchg
cld
mov
cs
push
sbb
and
test
(bad)
scas
add
xchg
push
add
pushf
dec
sbb
ror
add
jge
jg
adc
nop
enter
push
or
cmps
shr
(bad)
mov
scas
repz
dec
fstp
(bad)
mov
xor
ins
or
ds
add
fcomp
idiv
push
and
jmp
xor
cli
xchg
(bad)
mov
test
jb
or
xor
cs
sbb
cmp
jle
loop
shl
or
packssdw
jmp
jo
mov
xor
xor
popa
outs
adc
pop
adc
dec
bound
jle
stos
mov
cmp
inc
cmp
inc
loopne
call
xchg
neg
ja
mov
mov
lds
je
jno
push
jl
jns
xchg
in
shr
lods
hlt
lods
repz
les
and
dec
sub
sar
popf
in
mov
inc
xor
out
sahf
enter
cdq
aam
(bad)
cmp
xchg
jmp
or
push
or
ins
dec
pop
std
cmp
or
std
mov
inc
and
or
sbb
inc
adc
lods
(bad)
xchg
in
fs
push
cmps
xchg
mov
mov
mov
mov
mov
inc
xchg
jmp
xlat
mov
xor
pop
and
fwait
inc
and
das
hlt
xor
jno
test
test
bound
push
test
retf
lahf
fsub
mov
imul
std
xchg
mov
neg
cmp
sbb
push
fwait
jmp
test
mov
xor
inc
test
int
iret
mov
inc
and
or
sub
or
or
cmp
mov
inc
sub
cld
push
lods
popf
jns
xor
inc
mov
cmp
inc
sti
and
or
retf
shr
xadd
loopne
mov
dec
mov
movs
mov
mov
inc
pop
or
cmp
(bad)
and
nop
sbb
xor
and
ss
jmp
add
aaa
add
push
xor
or
add
and
in
shl
dec
fldenv
push
stc
and
or
hlt
add
pop
test
mov
ror
sub
addr16
jg
add
mov
js
test
test
mov
adc
xor
cld
cmp
retf
call
push
pop
pop
rcr
dec
test
inc
adc
out
jnp
pop
movs
push
stos
arpl
rcr
sub
mov
enter
sbb
cld
aaa
pop
cmc
push
iret
popf
mov
sub
sbb
nop
mov
pop
adc
mov
test
mov
and
lock
ror
aam
fs
test
movs
in
mov
lods
aad
fidivr
jecxz
loop
cmps
popf
js
fwait
jp
jno
jno
mov
push
push
loop
clc
ins
idiv
fwait
mov
dec
shr
ror
or
ss
fmul
push
add
push
stos
js
popa
(bad)
pop
lods
fsubr
pop
mov
sbb
cdq
test
jnp
pop
pop
jnp
imul
(bad)
cmp
retf
xor
pop
call
jmp
xchg
mov
push
loope
int3
sub
jnp
jno
cli
mov
imul
cmps
jnp
jge
jnp
popf
outs
mov
test
cmp
ss
xor
and
jg
jne
jle
inc
add
loop
repz
pushf
cdq
js
ss
cmp
loope
mov
dec
sub
push
les
adc
xchg
loopne
jmp
arpl
inc
packssdw
dec
xor
or
cmp
and
inc
sbb
pop
cmp
xor
mov
repnz
lock
rcr
into
les
jl
loopne
stc
jb
add
jmp
sbb
(bad)
(bad)
loop
lock
push
add
push
push
push
sub
sti
fs
gs
imul
or
jge
inc
daa
pop
cmp
adc
push
sub
dec
and
repz
cwde
ror
xchg
sahf
fst
lds
xchg
inc
push
je
sub
pop
not
rcr
and
pushf
sbb
ficomp
cmp
ficomp
cld
test
fst
lds
rcl
neg
ss
jne
add
aas
sub
aad
add
dec
inc
jne
mov
pop
mov
inc
adc
push
sub
sub
jle
xchg
es
sub
sbb
ja
jns
clc
mov
call
push
(bad)
stos
repz
xchg
xlat
rol
inc
or
fisttp
jg
jmp
das
outs
jge
lods
sar
test
out
push
inc
jg
mov
out
repz
in
and
ja
mov
test
ror
sub
imul
ret
sbb
dec
and
popa
sbb
xchg
fisttp
or
ds
inc
sahf
movs
ror
xchg
stc
mov
jle
or
cmp
pop
push
sub
data16
aas
pop
pop
das
dec
and
jp
jb
jne
je
adc
mov
cmp
jno
push
retf
and
cwde
mov
and
call
dec
or
je
push
or
leave
mov
xchg
in
jecxz
scas
jmp
adc
punpckhdq
xchg
pop
jmp
add
jns
ss
leave
(bad)
in
icebp
clc
push
push
push
sbb
test
pop
in
imul
pop
cmp
push
and
addr16
xchg
or
mov
add
fld
add
nop
and
outs
das
mov
push
xor
ins
div
mov
popf
mov
ret
mov
aam
retf
adc
sub
add
xor
lahf
int3
mov
jge
xchg
push
retf
mov
int3
dec
fdiv
in
or
ins
or
sbb
jns
push
adc
dec
cmp
and
push
or
push
sub
jge
jae
jle
mov
lods
pop
out
sbb
or
inc
xchg
mov
push
retf
jl
pop
cmp
pop
out
nop
xchg
test
inc
ret
jo
cli
push
or
add
je
nop
mov
mov
sub
jae
mov
fwait
add
and
mov
and
jnp
sbb
sbb
or
push
retf
inc
sub
clc
jg
push
fnstcw
fiadd
inc
sub
mov
rol
mov
mov
and
mov
pushf
aam
lds
ss
test
pop
stc
xchg
imul
and
popa
or
inc
cmp
cmp
pop
adc
mov
mov
mov
pop
adc
clc
lods
add
nop
in
retf
push
test
iret
ja
bound
arpl
xchg
xchg
ss
and
xchg
aaa
test
mov
mov
jnp
inc
push
ja
mov
pop
dec
adc
xlat
(bad)
cld
jns
repz
fstp
adc
jge
jg
(bad)
call
jecxz
jmp
jbe
in
adc
sub
popa
jae
xchg
repz
xor
(bad)
sahf
sbb
xor
test
aad
xor
js
pop
adc
pusha
add
jle
popa
and
movs
leave
ret
cmp
xor
dec
push
popa
or
inc
jp
mov
scas
push
loopne
adc
pop
pop
(bad)
bound
jnp
pop
pop
jae
push
sub
and
pop
adc
inc
inc
jnp
xor
sahf
int3
lds
sbb
inc
pop
ins
and
pop
repnz
xlat
mov
lods
jmp
mov
cdq
jmp
push
dec
or
cdq
retf
mov
leave
and
ret
mov
retf
xchg
std
xchg
aad
repnz
jecxz
loop
ret
(bad)
ins
pop
jne
sti
pushf
fnstcw
cmovle
imul
cli
mov
cwde
retf
movs
(bad)
popf
(bad)
mov
or
add
xchg
(bad)
fstp
jmp
ficom
(bad)
cmps
les
out
mov
mov
pop
test
xlat
rol
(bad)
repnz
push
mov
ret
push
dec
cmp
xchg
mov
test
mov
mov
out
hlt
lahf
fdivr
jmp
retf
lahf
std
mov
push
pop
rcl
jmp
retf
mov
jo
test
stos
push
loop
sbb
xor
call
idiv
adc
jg
data16
or
dec
xor
pop
xor
gs
jnp
rcl
mov
pushf
cmc
(bad)
imul
push
call
sub
or
jle
retfw
mov
jae
mov
inc
dec
gs
cdq
cmc
shr
retf
cdq
lock
jmp
pushf
clc
mov
retf
cmps
(bad)
mov
lds
jnp
stos
int
repz
outs
and
fldenv
jnp
sti
or
lds
jp
pop
pop
xchg
mov
bound
test
mov
ret
xchg
mov
xchg
int3
test
test
movs
jmp
jmp
pop
cmp
loopne
out
xchg
sti
fdiv
sahf
shr
push
xchg
or
in
sar
in
dec
and
xchg
in
loopne
sub
movs
rcr
inc
or
add
pop
push
fs
adc
sar
jg
pop
cmp
ja
cwde
pop
neg
fcom
and
fwait
test
mov
jg
jae
mov
retf
xlat
mov
jle
pushf
hlt
xchg
(bad)
ret
mov
mov
shr
cmc
adc
out
xchg
sbb
movs
jecxz
jnp
jp
jmp
aam
ds
push
ins
das
mov
in
adc
fsub
test
cmps
jmp
ret
mov
test
cmps
sbb
dec
and
ja
pop
pop
sub
dec
add
mov
int
push
xor
(bad)
jle
dec
xchg
rcl
data16
inc
test
ja
dec
pcmpeqb
cmps
aad
loope
xor
push
xor
cmp
jle
sub
sub
lods
fwait
sti
mov
sbb
and
adc
inc
es
pop
jnp
std
fcomip
imul
sub
pop
cmp
es
sub
xchg
stos
ror
sar
scas
loope
fbstp
push
push
jl
push
daa
ja
push
bound
xchg
icebp
mov
dec
push
push
xor
dec
xor
mov
into
xlat
(bad)
cmp
and
ror
inc
or
add
sahf
dec
out
cmps
mov
hlt
cwde
mov
fsub
cmp
xor
push
aas
jb
jb
dec
ds
(bad)
adc
imul
pop
sub
jg
adc
and
pop
dec
and
cwde
sbb
test
mov
and
xchg
mov
aaa
lock
ss
and
dec
not
mov
test
xchg
xlat
test
(bad)
fsub
nop
int3
test
push
sub
push
sub
pop
outs
add
inc
add
inc
cmp
adc
lea
ds
out
pop
or
mov
idiv
inc
out
add
push
push
push
sub
xor
push
xchg
mov
jmp
or
imul
push
aas
inc
jae
loop
jmp
dec
inc
jp
mov
jmp
aaa
arpl
xchg
or
inc
jle
lods
mov
adc
jl
sub
push
das
adc
inc
es
cmp
pop
add
jne
push
cli
push
cmp
arpl
jecxz
fldcw
xchg
pop
pop
call
lahf
push
in
out
cli
popa
gs
push
out
xor
dec
cdq
mov
pop
stc
mov
dec
out
mov
dec
out
or
das
push
adc
sbb
cmp
ins
or
sbb
inc
icebp
push
cmp
dec
add
mov
lods
push
(bad)
jae
mov
std
ror
mov
add
jno
xchg
enter
popw
retf
data16
and
rol
ins
scas
outs
push
popf
push
mov
mov
and
jb
xchg
sub
push
pop
dec
push
push
das
xlat
jb
ja
test
mov
das
mov
mov
int
lds
test
test
movs
cvtdq2ps
jbe
in
mov
lods
mov
imul
rcl
into
int
sub
push
dec
adc
mov
fist
and
mov
xchg
mov
fstp
in
add
fs
inc
sahf
int3
mov
pop
inc
stc
stos
(bad)
sbb
pusha
cmp
ds
dec
lahf
stos
(bad)
(bad)
iret
mov
mov
mov
mov
shr
xor
dec
pop
ja
mov
ja
push
adc
push
add
outs
or
push
push
push
popf
fist
xchg
sub
hlt
sahf
std
leave
jno
add
test
push
jnp
sbb
sub
mov
inc
dec
jl
test
jmp
xor
scas
jnp
and
lahf
out
cmps
retf
mov
xchg
xlat
pop
xchg
(bad)
mov
stos
leave
mov
xchg
dec
je
icebp
int3
fwait
loop
or
pop
inc
popf
fcomp
(bad)
retf
pushf
sub
pop
movs
scas
jmp
in
sbb
xor
mov
xchg
(bad)
mov
xchg
lock
call
les
stos
into
mov
popf
into
pushf
call
test
pop
mov
(bad)
(bad)
jmp
mov
dec
and
adc
(bad)
mov
xchg
fdiv
out
lods
hlt
mov
shl
stc
mov
or
(bad)
and
mov
jg
outs
cmp
popa
sbb
ja
push
xor
and
dec
cmp
popa
and
pop
adc
adc
popa
add
lods
fisub
daa
outs
repnz
jnp
dec
pop
pop
add
cmp
mov
retf
test
mov
nop
call
bound
jae
jo
push
sbb
push
cmp
push
jg
jle
pop
sbb
pop
or
addr16
sbb
adc
arpl
mov
cwde
pusha
dec
xchg
xlat
sti
mov
xor
and
ins
dec
dec
jns
icebp
mov
in
jmp
mov
popf
into
pushf
call
mov
test
movs
(bad)
mov
into
xchg
xchg
stc
xchg
shl
xchg
(bad)
mov
xchg
lock
call
jge
sbb
popa
or
(bad)
ja
icebp
mov
mov
xor
push
test
jbe
in
in
call
mov
iret
mov
in
int
jmp
xchg
hlt
mov
stos
loop
ret
mov
clc
clc
sahf
mov
movs
mov
lods
pop
in
cmps
adc
test
and
mov
loopne
aas
xor
call
cmp
jno
jno
inc
xor
push
push
arpl
mov
mov
into
mov
popf
into
pushf
call
mov
test
movs
(bad)
mov
into
xchg
xchg
sbb
inc
push
fs
ret
mov
ds
inc
sahf
movs
ror
xchg
stc
mov
mov
jne
(bad)
pop
or
add
adc
lea
cs
daa
mov
xchg
in
adc
dec
sub
add
push
jo
jb
outs
daa
dec
xor
jo
push
das
xlat
ins
fcmovne
retf
ins
or
xor
inc
dec
pushf
movs
retf
fcmovnb
fwait
loop
xor
popf
cmp
ja
adc
xchg
mov
imul
fnstenv
mov
dec
or
leave
lahf
repz
popf
cmps
sbb
add
xchg
ja
bound
arpl
inc
pop
pop
push
inc
pop
arpl
push
dec
dec
jle
ins
dec
cwde
into
mov
cwde
sub
dec
inc
jp
xchg
in
into
(bad)
sahf
cld
cmps
cmp
and
std
fdiv
add
daa
aas
outs
lea
push
mov
in
cs
aaa
sbb
jnp
inc
pop
daa
imul
adc
jp
jl
ror
push
cmovbe
lock
add
jl
mov
iret
loop
sub
mov
add
fs
sti
mov
out
les
in
mov
fcom
loop
jmp
pushw
jo
jb
mov
data16
bound
imul
daa
or
ja
mov
popa
jge
mov
hlt
inc
cs
xor
dec
cmp
sub
outs
or
pop
xor
inc
ss
addr16
xlat
stos
call
arpl
cwde
cli
mov
icebp
fbld
jae
repz
xlat
jge
fdiv
popa
test
fbstp
jl
ret
xchg
sti
add
fwait
test
xlat
call
mov
mov
lds
push
jae
dec
daa
je
outs
xor
iret
test
jnp
bound
in
mov
mov
xor
jmp
jecxz
int
call
movs
scas
in
aam
outs
cmp
jb
ds
mov
or
dec
call
loop
out
test
fst
adc
popa
add
sbb
push
call
rol
jnp
aam
in
cmp
push
mov
sub
xor
dec
jno
adc
push
fs
xor
pushf
hlt
into
pushf
icebp
mov
cmp
loope
add
or
test
lods
(bad)
mov
sbb
sub
ja
imul
sbb
imul
and
scas
ret
test
scas
lock
aam
iret
lods
pop
jg
popf
pop
aam
add
call
dec
dec
retf
mov
dec
mov
sub
repnz
out
cmp
inc
das
ins
std
je
jl
cwde
ret
stos
in
sar
sub
test
mov
(bad)
in
add
inc
cmp
inc
aas
pop
and
cmp
mov
ret
push
and
aad
sub
icebp
ret
popa
cmp
and
dec
in
push
pop
outs
cmc
push
sbb
outs
add
out
arpl
ins
aam
loop
repz
int
repnz
in
jecxz
mov
movs
jmp
test
push
sbb
inc
cmp
inc
das
push
sbb
or
xchg
icebp
ret
(bad)
js
je
retf
(bad)
out
sahf
cmc
lods
xor
inc
dec
outs
or
fwait
popa
cmc
mov
ret
push
not
fld
sahf
(bad)
sub
jg
fstp
pop
ins
mov
shl
pop
jb
pop
(bad)
mov
dec
popf
inc
sub
xor
loope
scas
cmc
shl
mov
das
xchg
add
mov
sub
ins
cmc
fwait
add
cmp
and
mov
test
push
inc
leave
inc
xor
sub
fs
push
lock
cmp
pop
or
sbb
imul
retf
gs
je
sub
sub
sbb
jae
jae
cmc
mov
fistp
fsubr
jae
push
cli
xchg
sbb
sub
jecxz
xchg
outs
xor
push
pop
data16
adc
pop
cmp
pop
jecxz
mov
lods
loopne
repnz
ficomp
out
or
add
inc
sub
xor
(bad)
int3
dec
push
push
ficom
push
push
lahf
clc
out
sub
inc
pop
jno
mov
ins
dec
cwde
sbb
push
repnz
xor
cli
fsubr
jg
mov
push
and
popf
enter
mov
out
and
dec
add
aaa
pop
and
xor
or
jno
sub
dec
sub
sub
sub
push
sbb
cmp
retfw
push
(bad)
fidivr
lods
aaa
or
jl
pop
sub
sub
fisub
push
out
add
xchg
mov
or
inc
dec
and
mov
cmp
xchg
repnz
pop
or
xchg
dec
xchg
mov
sub
lock
cmp
push
test
sub
xchg
and
int
and
iret
fbstp
ins
sti
fwait
push
xlat
inc
sub
adc
fisttp
fistp
adc
test
out
out
sti
addr16
xor
add
xchg
push
add
add
dec
test
push
sbb
ins
(bad)
xchg
dec
cs
shr
je
aad
adc
cmp
push
add
sub
sti
mov
imul
lods
inc
sub
pop
scas
in
dec
push
les
pop
gs
stos
retf
dec
and
dec
push
data16
push
xor
mov
mov
mov
cmps
enter
mov
push
pop
xor
scas
popf
fist
cmp
out
sub
mov
dec
aaa
shl
mov
pop
(bad)
fwait
dec
adc
inc
mov
ror
arpl
call
neg
repnz
xchg
mov
and
int3
jp
out
arpl
in
xchg
mov
mov
leave
lods
mov
sub
dec
in
xchg
add
outs
repz
(bad)
jecxz
adc
jne
mov
ss
xchg
outs
cmp
pop
and
mov
xchg
xchg
pop
adc
outs
cld
xchg
jne
jmp
pop
sti
adc
dec
cmp
or
popf
mov
jle
lds
mov
fld
push
call
dec
mov
ins
scas
fidivr
jb
xchg
adc
(bad)
dec
shl
add
pop
rcr
(bad)
mov
and
cmp
pusha
add
pop
fst
scas
retf
jecxz
xchg
loop
adc
inc
icebp
mov
aam
sub
test
sti
add
add
(bad)
les
test
jle
xchg
mov
xchg
mov
xor
xor
test
adc
lods
mov
es
les
lahf
icebp
pop
cmp
mov
jecxz
mov
xchg
xchg
sar
fnstcw
dec
xor
add
imul
adc
mov
fldcw
aas
js
mov
sbb
int
inc
lds
or
lahf
cld
dec
cs
mov
adc
and
lds
xor
xchg
mov
push
xor
xchg
adc
mov
add
scas
test
mov
adc
xchg
lahf
fimul
enter
sub
fiadd
sub
fimul
fisub
loope
data16
and
fistp
in
(bad)
int
dec
mov
inc
adc
mov
cli
push
sbb
push
in
xchg
(bad)
in
push
cmp
inc
repz
dec
scas
std
inc
xor
xchg
push
xor
jle
mov
mov
mov
int
xchg
(bad)
jne
cmp
and
jg
cmps
jae
cmp
jmp
cmps
ret
out
mov
or
sahf
call
jmp
mov
xchg
jle
jmp
aad
jno
add
jmp
jg
sbb
ins
aas
adc
inc
cmp
mov
ss
neg
mov
pop
leave
mov
sbb
lahf
xchg
mul
inc
hlt
mov
jo
sbb
sub
fiadd
mov
xchg
dec
sub
push
jecxz
xchg
cmc
dec
cmp
xor
pop
rcl
lds
pop
push
push
jle
shl
int3
test
ror
push
(bad)
fmul
push
sbb
inc
rcl
pop
les
push
jl
int
and
ja
popf
(bad)
fidivr
std
pop
sbb
arpl
mov
ds
aad
xchg
jo
sub
lods
sub
ins
add
cmp
int3
mov
sbb
xor
in
sbb
test
shl
outs
stos
retf
and
jl
cmp
aad
outs
retf
mov
add
sti
lahf
push
xor
cmps
les
sub
enter
cmps
mov
int3
data16
push
into
mov
lahf
mov
push
xchg
jg
in
(bad)
sti
inc
or
popa
fcomp
call
or
in
pop
pop
in
scas
data16
xor
aad
dec
(bad)
movs
cmps
out
xor
jbe
fidivr
repnz
stos
xchg
rol
dec
out
xchg
mov
je
or
sbb
dec
enter
pop
inc
(bad)
mov
mov
pop
or
cdq
xchg
jnp
and
jnp
test
jl
loope
mov
inc
or
clc
mov
les
cmp
mov
aad
fwait
leave
jp
xor
xchg
js
call
sub
stos
sahf
(bad)
inc
cmp
add
int
cdq
in
daa
imul
fstp
jmp
add
cmc
cmps
adc
jae
aam
(bad)
(bad)
xchg
fs
dec
sar
mov
inc
and
(bad)
xchg
mov
pop
adc
jmp
xor
mov
ins
lods
(bad)
arpl
cmp
mov
cmp
(bad)
xchg
fcom
push
retw
mov
sbb
movs
mov
cmp
jmp
mov
push
jmp
xor
jmp
(bad)
fstp
jmp
xor
mov
xchg
sti
dec
add
push
mov
das
dec
mov
lahf
int3
pop
sub
stos
xchg
out
and
mov
leave
jnp
add
mov
pop
out
lods
arpl
push
pop
cmps
cmc
sub
les
(bad)
mov
mov
lods
aad
dec
mov
scas
popa
adc
ret
test
jne
shr
(bad)
stos
xchg
sti
dec
or
jl
mov
loop
xchg
repz
data16
xor
mov
jg
lds
push
(bad)
sahf
(bad)
fdiv
inc
mov
adc
repnz
sub
pop
in
mov
cmps
data16
push
movs
div
cmp
mov
outs
push
push
ja
mov
cmp
jae
scas
pusha
add
es
fcom
or
pop
stc
xchg
test
jge
cmp
jne
nop
mov
lods
jbe
xor
mov
xlat
jne
sbb
into
scas
xchg
(bad)
ds
cmps
inc
sub
jne
xor
das
loopne
mov
mov
mov
jle
adc
repz
adc
outs
jmp
xchg
icebp
imul
mov
xor
mov
adc
inc
retf
and
push
fld
mov
push
sub
scas
xchg
dec
sub
aad
dec
cmp
push
hlt
sahf
mov
push
mov
sub
iret
lods
jnp
out
outs
sub
cwde
movs
les
xchg
mov
sub
out
pop
or
mov
sbb
push
xor
ja
adc
stos
rcl
jg
xchg
jle
enter
in
xchg
fsub
arpl
jge
cwde
xchg
jmp
pop
or
nop
jmp
pop
xor
je
fidiv
pop
in
mov
es
inc
adc
ins
not
jbe
repnz
shl
jmp
inc
mov
jg
repnz
xchg
repnz
and
retf
push
hlt
cdq
mov
cmp
(bad)
push
pop
mov
fwait
nop
bnd
int
mov
jb
xor
sbb
add
mov
push
and
lods
mov
pop
mov
dec
and
ins
int
popf
lock
jmp
cmp
dec
fidivr
sbb
add
call
lods
cmc
inc
pop
jmp
pop
lods
jmp
or
mov
movs
mov
add
stos
jmp
rol
fidivr
out
cmps
(bad)
jne
xor
sub
imul
pop
dec
sbb
jecxz
push
shl
les
cmps
cwde
fidiv
jnp
mov
int3
scas
mov
mov
call
fisub
loopne
xchg
lds
das
arpl
popa
iret
lods
xchg
cld
pop
cmp
mov
pop
push
stos
call
mov
jne
pop
jge
out
pop
sbb
push
xchg
mov
xor
xchg
popf
clc
dec
adc
mov
sar
int3
mov
or
mov
and
jl
out
sub
sbb
lods
test
or
xchg
jne
in
mov
pop
sbb
fstp
icebp
mov
push
sbb
in
bound
push
pusha
stc
call
sub
repz
aam
pop
pop
push
and
ins
ror
dec
jecxz
mov
pop
and
xchg
imul
xor
iret
push
adc
test
ret
mov
push
cmp
dec
jecxz
popf
aam
or
xchg
lock
add
inc
daa
aaa
pop
repnz
mov
adc
test
cdq
ins
sub
inc
mov
jns
add
lea
movs
fldcw
pusha
aam
(bad)
ins
xchg
mov
pop
cmp
mov
mov
js
out
mov
xor
inc
mov
push
sub
cmps
lods
leave
and
xchg
cmps
lds
sbb
jmp
or
loope
outs
cmp
pop
cmp
lods
aam
inc
fnstenv
adc
push
push
mov
inc
ret
test
jb
movs
xor
inc
sar
arpl
push
push
push
inc
shl
jne
jmp
push
lods
aad
cs
test
push
push
dec
mov
inc
and
push
stos
les
int
and
push
hlt
mov
xchg
imul
dec
fnstsw
rcl
sahf
(bad)
lds
shr
xchg
mov
daa
imul
push
test
push
ins
repz
nop
nop
fnstcw
push
pop
aam
jns
lds
retf
fst
push
(bad)
cmps
cmps
hlt
jb
add
mov
or
aaa
out
push
or
xchg
fcomp
(bad)
xchg
xchg
icebp
sub
pushf
bound
pop
addr16
lods
ins
add
in
xor
inc
rol
test
dec
fnstsw
shl
sub
in
gs
(bad)
addr16
or
in
aaa
pop
sbb
loop
xor
(bad)
lods
je
jecxz
jnp
and
sbb
addr16
push
neg
mov
test
and
repnz
inc
shl
inc
cmp
(bad)
jb
adc
out
cs
rcl
je
movs
push
cmp
and
jo
loope
outs
daa
cmp
(bad)
fimul
in
data16
loopne
jle
loopne
int
fs
outs
mov
xchg
sbb
lahf
mov
push
push
shl
jns
loop
push
in
xchg
mov
loopne
or
mov
xchg
outs
push
in
sar
repnz
jge
push
inc
aad
popa
adc
mov
dec
cs
cmp
xchg
popa
or
push
mov
and
loopne
xor
mov
add
mov
xor
lea
jbe
fild
jb
xchg
push
das
add
dec
enter
push
es
cmp
imul
adc
sbb
push
lock
out
cmp
test
sub
(bad)
outs
aaa
loopne
xchg
jecxz
adc
pop
in
stos
mov
add
mov
sub
mov
cmp
call
lock
mov
jne
rol
popf
nop
fadd
sbb
fidivr
cmp
retf
push
das
les
shr
cmps
arpl
or
xchg
inc
sti
scas
test
push
xor
loopne
xor
pop
and
imul
mov
inc
fcom
push
jb
pushf
mov
dec
sub
test
or
call
fwait
into
ss
fidivr
add
fidiv
pop
idiv
sbb
leave
das
pop
(bad)
mov
out
push
adc
ja
mov
stc
xor
fld
ins
movs
into
fsubr
in
movs
xchg
nop
lds
inc
shl
sbb
in
bound
je
cmps
xchg
ret
mov
mov
(bad)
loope
adc
xchg
(bad)
loopne
bound
mov
std
add
out
jno
scas
pusha
and
add
lds
adc
sbb
mov
pop
adc
ja
aam
ins
int
je
es
aam
sub
xor
pop
mov
sahf
xlat
inc
pop
adc
int3
imul
dec
ss
outs
fdiv
stos
rcr
dec
xlat
test
loope
bound
or
enter
xchg
ret
rol
pop
jecxz
fs
lock
inc
or
sub
adc
jo
call
inc
sbb
mov
mov
mov
sbb
or
jb
lahf
mov
or
jns
rcr
mov
jle
xor
mov
sbb
jmp
xor
jg
std
cmp
or
push
jecxz
imul
inc
sbb
aam
sbb
pushf
mov
cmp
mov
cdq
mov
mov
push
or
mov
adc
inc
(bad)
movs
bound
fcomp
call
and
xchg
mov
mov
or
fld
repz
mov
push
xor
sub
xlat
arpl
sub
fcomp
adc
pop
not
ficomp
(bad)
mov
(bad)
jne
add
scas
test
je
out
xchg
add
pop
mov
pop
(bad)
mov
fisub
pop
sbb
sub
xchg
jg
and
and
inc
cmc
xchg
ins
add
scas
jbe
sbb
cmps
sbb
(bad)
test
add
shl
inc
scas
shr
pop
movs
enter
mov
lds
jmp
ja
rcl
sbb
mov
dec
sub
fild
js
mov
rol
mov
sbb
lock
xlat
jne
call
or
mov
aas
sar
push
into
mov
or
fs
cmp
xor
(bad)
pushf
cwde
test
fisubr
adc
int
popa
stos
(bad)
jp
or
mov
aaa
ret
mov
fcom
xchg
fwait
ret
pop
bswap
mov
adc
jecxz
repz
cmp
xchg
pusha
adc
test
and
jne
jecxz
push
jecxz
je
mov
pop
lock
mov
out
push
xor
cmps
aam
cmps
(bad)
jge
loopne
jb
cli
sbb
fwait
cmc
xor
add
dec
or
popa
mov
xchg
pop
test
push
cmp
(bad)
in
mov
mov
xchg
push
mov
test
test
xor
mov
jp
xchg
cmp
sub
data16
mov
and
mov
xor
mov
loop
cwde
fisttp
es
retf
sbb
jb
nop
test
mov
(bad)
adc
rol
outs
lods
rcr
jb
aad
(bad)
jmp
push
cmp
(bad)
shl
jnp
jge
mov
xor
leave
mov
stos
jmp
mov
js
pop
cmp
xchg
test
push
dec
in
mov
popa
add
mov
fcom
xor
xlat
and
scas
jb
lock
cdq
repz
ret
fisttp
fst
test
xchg
mov
or
fidivr
std
mov
sbb
dec
adc
ret
cmp
dec
or
push
idiv
add
xor
inc
push
retw
add
imul
sbb
dec
lods
loope
das
sbb
cmp
mov
mov
dec
fist
shl
mov
pop
or
mov
mov
div
adc
in
add
fwait
xchg
pop
cmp
jne
push
jnp
fld
push
mov
popf
iret
dec
sbb
cmp
cli
pop
and
inc
or
in
xchg
out
mov
jne
or
cdq
jnp
call
dec
sti
mov
xor
in
push
cld
mov
xlat
xchg
les
sbb
jmp
jg
sub
shr
sahf
mov
dec
nop
fmul
adc
push
leave
cmps
nop
repz
jle
ret
sbb
bnd
in
adc
inc
shl
out
xchg
arpl
sbb
lea
push
retf
retf
and
movs
mov
shl
cmp
mov
icebp
mov
(bad)
inc
aam
adc
outs
div
push
jae
lahf
mov
dec
(bad)
sahf
inc
push
out
fwait
jo
hlt
mov
adc
movs
je
or
mov
lahf
fsubr
imul
mul
push
pop
retf
push
adc
mov
jns
scas
popa
cmp
dec
fild
jmp
outs
iret
lods
ins
sbb
jns
loope
xchg
fadd
or
loopne
arpl
xchg
stos
out
daa
pop
std
pushf
sub
push
aas
push
jae
xchg
xchg
sar
lods
loope
sub
inc
mov
movs
jge
sbb
sahf
lods
(bad)
jle
or
into
xchg
rol
cli
mov
push
es
cmc
xchg
movs
leave
sub
ficom
jb
popf
lahf
int3
add
mov
and
xor
push
fidivr
ds
mov
sub
lods
jbe
in
jp
cmp
fist
cmp
lds
cmp
movs
jnp
(bad)
mov
in
pop
xchg
jmp
cwde
cli
push
cmp
mov
cmp
jp
leave
mov
movs
fdivr
imul
add
mov
push
aaa
add
clc
and
in
push
sub
dec
shr
(bad)
jnp
aas
jl
call
imul
fdiv
(bad)
push
enter
dec
and
pop
push
xacquire
inc
lods
enter
jb
sar
xchg
imul
mov
jns
jecxz
test
stos
lahf
fisubr
push
mov
sub
scas
push
add
loop
mov
cmp
rol
cmp
push
mov
je
lods
ja
in
cmp
dec
push
jecxz
mov
movs
stos
loop
adc
outs
cmps
(bad)
outs
add
mov
loope
xchg
iret
xor
adc
jnp
push
jl
xchg
ins
push
push
and
dec
push
sbb
mov
out
push
push
jge
mov
repnz
dec
stc
sbb
call
dec
aaa
lds
cmp
cmps
cdq
jmp
enter
ss
mov
and
(bad)
pop
sbb
mov
sbb
xchg
xchg
std
sub
mov
xchg
mov
pop
sbb
jae
xchg
mov
popa
fbstp
sbb
and
mov
int
stos
out
xor
movs
popf
lock
in
xchg
jae
or
(bad)
fsub
int
(bad)
cmc
or
jmp
lods
fnstsw
push
mov
gs
js
xchg
(bad)
cmc
sub
sar
scas
lds
and
mov
std
jbe
(bad)
mov
popa
add
push
mov
mov
stos
cdq
sar
imul
pop
xchg
fld
pop
and
nop
mov
pop
call
lods
fimul
or
xchg
repnz
mov
cdq
mov
dec
and
sub
out
mov
dec
cs
jp
repz
push
mov
js
mov
retf
cmps
jmp
push
xor
xchg
mov
inc
xor
aaa
je
xchg
sbb
in
sbb
jae
cmps
cdq
fdiv
adc
fadd
pop
and
test
or
sbb
dec
sbb
pop
leave
cmps
mov
dec
cmp
inc
(bad)
lods
push
cwde
ja
enter
push
xor
lds
push
jne
cmp
fisttp
pcmpeqw
mov
jl
call
fs
xor
add
dec
(bad)
test
sub
(bad)
push
sbb
push
out
cdq
sar
loope
mov
xchg
mov
dec
push
adc
mov
mov
aad
inc
stc
mov
popa
xor
outs
(bad)
movs
push
adc
cdq
mov
jmp
movs
rol
mov
in
push
sbb
ins
or
test
and
lods
mov
push
cmp
pop
in
scas
mov
cs
add
cmp
inc
daa
push
arpl
mov
ret
je
adc
lds
jnp
jecxz
sbb
test
ins
adc
mov
inc
add
or
repnz
push
add
fimul
adc
fdiv
sub
fbld
push
add
rcl
mul
mov
mov
jmp
mov
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
idiv
jmp
mov
stos
push
(bad)
mov
repnz
cld
mov
test
div
test
stos
shl
inc
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
dec
sub
ss
ins
ds
lahf
shl
jecxz
les
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
leave
mov
mov
pause
std
(bad)
lds
div
rol
mov
call
mov
call
(bad)
fild
mov
(bad)
pusha
or
ss
and
data16
push
add
and
cmp
inc
add
outs
pcmpeqd
jns
jnp
inc
das
push
aas
pop
sbb
popa
sub
and
pop
sub
inc
and
jg
je
jp
inc
sub
add
dec
or
xchg
ret
xchg
repz
cwde
fdivr
leave
mov
sbb
dec
sbb
push
and
imul
mov
mov
mov
ret
call
(bad)
out
(bad)
neg
shr
mov
mov
enter
out
call
lods
xlat
sub
int3
(bad)
aam
into
arpl
inc
or
jae
jge
pop
cmp
daa
dec
cmp
or
int
into
mov
mov
movs
mov
(bad)
pusha
or
ss
and
data16
push
add
pop
and
dec
sub
je
jnp
jne
dec
and
pop
sbb
gs
sub
pop
cmp
adc
push
pusha
add
jg
pop
and
pusha
add
push
and
pop
and
dec
sub
je
jnp
jne
dec
and
pop
sbb
gs
sub
pop
cmp
adc
push
pusha
add
jg
pop
and
pusha
add
push
and
pop
and
dec
sub
je
jnp
jne
dec
and
pop
sbb
gs
sub
pop
cmp
adc
push
pusha
add
jg
pop
and
pusha
add
push
and
pop
and
dec
sub
je
jnp
jne
dec
and
pop
sbb
gs
sub
pop
cmp
adc
push
pusha
add
jg
pop
and
pusha
add
push
and
pop
and
dec
sub
je
jnp
jne
dec
and
pop
adc
and
mov
mov
dec
or
cmp
test
xchg
mov
and
pop
pop
inc
test
pop
xor
sbb
es
repz
repnz
fild
and
push
rcl
sbb
mov
test
push
pop
push
and
jp
popf
mov
ss
es
or
scas
sar
jp
pusha
sub
movs
rol
adc
addr16
in
xchg
mov
aaa
jns
xor
adc
loop
mov
xchg
hlt
dec
and
adc
add
and
and
dec
rcr
mov
sbb
mov
mov
sub
ss
movs
(bad)
mov
(bad)
pop
js
mov
mov
sbb
dec
sbb
test
xchg
push
ja
and
dec
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
das
pop
adc
push
xor
push
adc
(bad)
daa
imul
xor
popa
or
jb
dec
or
inc
adc
add
dec
pop
bound
inc
cmp
and
jp
push
cmp
push
add
push
dec
aaa
popf
shl
retf
mov
lea
jns
jnp
dec
and
push
adc
jbe
ins
cmp
push
sub
dec
or
popf
call
shl
dec
pop
inc
xor
inc
ds
adc
cmp
outs
add
sar
bound
ja
push
add
pop
cmp
dec
add
sbb
outs
add
dec
ss
xor
push
or
jp
pop
or
bound
inc
daa
pop
sub
cs
cs
pcmpeqd
jb
push
adc
pop
or
add
push
adc
dec
sub
push
sbb
outs
add
pop
sbb
or
jb
data16
sbb
jbe
push
and
push
sbb
pusha
or
push
data16
adc
push
ins
adc
outs
or
dec
and
ja
dec
and
xor
adc
jo
sub
push
cs
or
pop
cmp
outs
setge
cmps
retf
movs
loope
(bad)
sahf
(bad)
test
cmps
in
mov
in
shl
cmps
out
xor
in
test
iret
pushf
jmp
not
out
mov
(bad)
mov
xchg
out
xchg
scas
retf
xchg
rcl
mov
test
mov
in
sti
lods
ret
mov
fld
in
retf
mov
xchg
fidiv
xchg
cli
test
frstor
fwait
int
lds
rcl
out
and
jmp
test
and
push
es
cmp
push
xor
or
sbb
jnp
jge
gs
and
pop
adc
sub
jnp
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jns
outs
pop
outs
cs
or
dec
adc
pusha
cmp
xor
ja
arpl
xor
push
sub
and
push
cmp
outs
adc
xor
pop
cmp
sub
dec
ds
pcmpgtd
cmp
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
and
inc
and
push
xor
pusha
or
sbb
sub
dec
adc
popw
inc
add
push
aaa
push
xor
jns
dec
das
outs
ss
js
push
sbb
outs
sub
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
(bad)
jecxz
cli
xchg
icebp
mov
xchg
aam
ret
and
clc
mov
mov
(bad)
rcr
mov
xchg
repnz
dec
rcl
repnz
shl
clc
sub
out
mov
neg
jecxz
jecxz
std
mov
test
mov
aam
(bad)
mov
movs
out
mov
fistp
fcom
jmp
into
scas
sar
in
in
and
xchg
ror
rcr
retf
scas
fcom
lds
cmc
adc
inc
rcr
retf
movs
shr
add
loope
lock
cmc
mov
stos
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
push
inc
or
js
bound
js
dec
push
pushf
fdiv
in
pushf
(bad)
mov
(bad)
xchg
enter
in
(bad)
pushf
loopne
hlt
mov
jmp
mov
in
ret
call
shl
(bad)
neg
std
xchg
in
in
std
mov
fimul
stc
mov
xchg
repnz
mov
xor
stos
jmp
retf
xchg
(bad)
lods
sti
mov
test
shl
iret
mov
loope
mov
in
ror
shl
lds
sbb
imul
jns
pop
cmp
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
idiv
jmp
(bad)
cwde
sar
sbb
fdivr
loop
shr
fadd
loopne
les
loopne
std
xchg
out
mov
(bad)
shr
pop
add
inc
xor
inc
cmp
inc
and
inc
sub
dec
xor
adc
push
pcmpgtw
jbe
push
cmp
pop
or
sub
inc
sub
arpl
jge
cdq
sar
popa
add
data16
dec
sub
daa
push
sbb
adc
push
bound
push
push
sbb
pop
adc
sub
sub
retf
stos
jmp
loopne
stc
mov
xchg
hlt
mov
fst
retf
mov
loop
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
lds
in
out
idiv
call
mov
push
xor
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
addr16
add
inc
or
sub
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
(bad)
mov
aad
les
shl
xchg
jmp
fwait
sar
out
(bad)
mov
mov
nop
fistp
into
mov
xchg
(bad)
cdq
hlt
cwde
jmp
into
mov
mov
rol
fbld
out
call
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
inc
and
jg
push
or
add
inc
inc
sub
adc
xchg
lock
fscale
out
mov
and
ret
mov
inc
adc
push
movs
loop
div
xchg
daa
mov
ins
push
push
sar
sub
imul
ret
xchg
jp
mov
stos
jl
cmps
xor
or
or
mov
xor
ret
out
cmps
int3
or
sub
iret
or
addr16
xor
xor
(bad)
out
ror
dec
sub
fsubr
xchg
ror
out
shl
fwait
loop
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
inc
adc
dec
das
imul
in
push
pop
xor
xchg
outs
push
out
jae
int3
cmp
call
fisttp
mov
test
mov
int3
or
out
push
outs
(bad)
inc
ficomp
pop
sbb
jmp
sbb
or
xchg
sbb
std
pop
adc
inc
std
add
out
daa
pop
xor
push
xor
xor
mov
rcl
mov
enter
lahf
inc
cmp
pop
jbe
add
cmps
not
fcom
push
leave
xchg
daa
inc
jmp
pusha
add
mov
add
ret
fidiv
xor
cmp
lods
call
int3
mov
jmp
ret
mov
lods
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
push
add
movs
jge
je
jmp
jecxz
sbb
or
test
push
in
cmc
add
in
xor
or
(bad)
aad
or
mov
inc
retf
es
ret
inc
mov
imul
imul
xor
sbb
pusha
rcr
jp
and
pop
shl
out
add
out
aam
adc
adc
add
push
jle
jno
es
mov
ror
sti
sub
push
pop
sbb
bound
ja
dec
inc
cmps
popa
mov
mov
or
add
ret
dec
shl
and
push
add
sub
pop
(bad)
xor
ss
mov
call
or
push
add
sub
sbb
dec
fldenv
jae
mov
jo
call
shl
adc
xor
pop
push
pop
pop
lock
pop
xor
jecxz
sbb
jmp
and
xor
and
jmp
push
xor
dec
mov
mov
pop
mov
dec
movs
cwde
sahf
test
adc
lock
sbb
std
push
int
rcl
iret
push
and
jmp
cli
cmp
dec
stos
mov
data16
aam
std
inc
repz
jne
cmp
call
add
hlt
shl
mov
outs
lods
inc
fst
mov
dec
test
call
adc
cwde
jns
ins
mov
lock
adc
cmp
dec
icebp
cmp
xor
inc
fidiv
int3
and
jmp
les
push
shl
out
(bad)
dec
mov
mov
mov
rol
and
out
out
das
jecxz
mov
addr16
and
xchg
outs
mov
adc
nop
mov
icebp
push
rol
sub
push
mov
les
nop
outs
xchg
dec
shl
sbb
dec
movs
bound
jne
and
sti
and
out
add
in
(bad)
cmp
mov
fs
push
mov
mov
popf
arpl
inc
out
fist
jo
daa
or
ds
test
mov
inc
ret
xor
daa
cmp
in
neg
dec
shl
cli
dec
mov
outs
sub
int
xchg
mov
call
xlat
push
movs
jae
cdq
jns
nop
sahf
scas
cwde
outs
fiadd
aad
mov
mov
iret
sub
cmps
imul
pop
cmp
add
push
cmps
xchg
call
sbb
adc
es
add
es
add
and
jo
xchg
inc
or
pop
mov
pop
lods
xchg
imul
outs
mov
(bad)
imul
or
movs
mov
push
xor
adc
daa
sbb
aas
(bad)
push
xchg
and
push
xor
xor
loopne
push
out
add
mov
test
out
mov
leave
pop
cmps
loope
leave
add
push
cmps
imul
mov
call
mov
retf
dec
fadd
and
jo
jle
add
clc
add
jle
cwde
aam
fbstp
jmp
cmp
in
inc
std
cs
or
sbb
mov
mov
mov
cmc
pop
fist
push
test
inc
cs
push
test
das
retf
inc
sar
in
das
sar
mov
(bad)
cmp
jge
imul
pop
cli
add
jo
jns
jns
popf
popa
lods
cmps
xchg
ins
mov
jmp
in
pop
mov
mov
add
aaa
idiv
or
add
jns
jo
sub
dec
cmps
bound
hlt
xor
pop
mov
lods
jbe
out
add
xor
out
xor
cmp
add
dec
mov
mov
cld
or
mov
jb
xchg
sbb
pop
mov
ficom
dec
stos
jnp
sahf
(bad)
dec
(bad)
in
ins
mov
dec
rol
cmp
(bad)
pushf
inc
neg
inc
mov
clc
or
cmp
sub
pushf
inc
mov
adc
xor
xor
loope
in
sar
ins
mov
mov
xor
ret
idiv
clc
xor
mov
mov
xchg
addr16
push
adc
add
jmp
mov
mov
aam
dec
stc
and
cmp
cmp
ud0
cld
inc
ror
add
mov
add
push
aaa
into
cmp
xchg
inc
lods
jae
jne
idiv
or
adc
pop
(bad)
sub
dec
fdiv
out
cmp
push
fsub
pop
sub
idiv
loop
mov
mov
lods
jns
pushf
js
sub
scas
call
mov
mov
mov
test
stos
js
outs
stos
call
fsubr
add
dec
ror
bndstx
hlt
ss
jp
repnz
test
or
xchg
push
arpl
and
ss
push
add
jo
aas
adc
add
push
jmp
xor
out
xor
movs
pushf
mov
test
mov
inc
enter
jmp
in
lods
inc
ret
mov
into
xor
into
add
sbb
pop
cmp
es
mov
retf
test
cmp
xchg
inc
xchg
add
test
cwde
xchg
xchg
mov
movs
popf
pushf
test
stc
cs
shl
cli
pop
lods
jno
mov
sahf
cld
inc
dec
add
sar
shl
pop
adc
push
xchg
les
loop
ret
cmc
cmp
push
mov
mov
adc
jl
bound
sub
add
ins
call
jae
mov
pushf
xchg
arpl
das
loopne
stos
mov
popf
mov
ret
pop
stos
push
and
dec
aad
loopne
cmp
push
xchg
mov
mov
push
int
push
aam
cld
pop
iret
ss
cmp
adc
push
fsub
ins
mov
mov
jns
inc
shr
loopne
jp
add
jno
addr16
push
fsub
adc
ins
shl
std
pop
push
ins
mov
aam
test
pop
test
dec
test
hlt
push
cmp
mov
call
out
dec
xlat
or
adc
pop
mov
push
sub
push
mov
ror
xor
ja
lahf
inc
fcomp
add
iret
pop
mov
ss
adc
dec
mov
and
inc
rcl
test
jge
data16
data16
xchg
lahf
mov
dec
xlat
xchg
test
rcr
dec
retf
test
mov
cmps
inc
xchg
dec
test
test
add
pop
out
dec
aam
in
mov
xchg
pushf
push
dec
mov
imul
push
ret
ja
ins
mov
outs
shl
int3
cmps
jge
js
sub
clc
jae
inc
daa
lock
adc
aas
call
in
dec
ror
out
mov
lods
mov
lods
(bad)
pop
rcl
lahf
push
push
mov
jne
push
out
and
les
pusha
cmp
and
pop
test
cmps
push
pusha
xchg
pop
xor
push
lock
add
cmps
xchg
push
loope
(bad)
dec
sti
aaa
icebp
pop
fiadd
(bad)
jg
jbe
xchg
ins
fisttp
push
pop
fcom
out
cli
add
loop
jecxz
(bad)
pop
mov
ss
fst
popf
mov
and
pop
stos
ins
stos
dec
mov
mov
jns
adc
sbb
adc
cmp
xor
push
xor
inc
or
pop
lock
xor
aaa
push
sub
fsubr
or
jecxz
mov
arpl
add
push
out
scas
jp
gs
ins
mov
sub
cmp
pop
(bad)
and
pop
shl
in
aaa
sub
add
or
sar
int3
sub
or
sbb
leave
sub
xor
add
push
aad
psubsw
cmps
xchg
inc
ror
movs
lahf
arpl
pop
fisub
dec
or
mov
lds
cmp
sub
test
dec
(bad)
scas
mov
test
mov
push
pop
mov
fiadd
dec
lods
push
mov
cmps
bound
loopne
arpl
xor
inc
fimul
sub
adc
adc
add
jmp
pusha
mov
ficomp
dec
fist
mov
rol
pop
int3
sub
add
in
mov
cmp
pop
fiadd
loop
cli
cmp
pop
jg
jp
jge
je
jp
ficom
push
shr
xor
hlt
daa
pop
into
and
ds
rcl
xchg
mov
and
adc
xor
repz
mov
iret
push
mov
mov
inc
stos
imul
pop
shr
in
pop
scas
in
sub
enter
sub
lds
out
xor
xor
dec
mov
adc
sbb
inc
cmps
imul
jne
jae
inc
movs
jo
(bad)
xchg
dec
cmc
xor
dec
cs
sub
and
jle
cmp
push
mov
push
mov
xchg
jae
push
sbb
aas
out
mov
cmp
loop
push
push
icebp
add
and
inc
(bad)
push
ret
pop
mov
xor
xor
adc
sahf
jae
sub
or
clc
aas
cmc
and
retf
jmp
add
ss
or
sbb
xor
pop
cmps
inc
fstp
pop
mov
jno
push
int
cli
xor
xchg
gs
jno
jle
xchg
jb
mov
or
pop
sub
dec
fld
and
out
dec
fisttp
cmp
and
mov
inc
mov
js
cs
mov
iret
jnp
xor
sub
jb
ins
retf
dec
cmps
inc
sub
cs
and
xor
or
xor
xor
pop
ficom
and
mov
iret
pop
int
mov
jno
sti
sub
cmp
jge
ins
ficomp
and
jmp
je
cdq
scas
mov
pop
mov
in
cmp
push
aam
mov
jns
xchg
fs
test
xor
sti
pop
mov
cmp
sub
add
daa
or
(bad)
pop
lods
imul
adc
std
jbe
popa
(bad)
sub
sbb
push
int
sub
cmp
cmps
xchg
mov
in
cs
dec
int
subps
or
or
or
sbb
pop
mov
pop
lds
add
out
pop
test
lock
enter
add
sbb
xlat
aaa
push
psubq
out
mov
xchg
scas
movs
iretw
and
ds
dec
(bad)
xor
push
pop
mov
movs
xchg
inc
mov
je
jmp
ret
and
or
push
sub
jmp
test
call
add
dec
(bad)
push
sub
sbb
push
cld
pop
cmp
jo
cmps
ins
aad
stc
add
repnz
mov
cmc
pop
repnz
shr
fld
sbb
lock
push
out
dec
pop
lds
fwait
mov
inc
jmp
sub
fbld
leave
and
xchg
xchg
fnstenv
imul
inc
mov
js
or
add
jb
push
loopne
mov
(bad)
aam
and
arpl
push
ror
inc
stos
add
mov
mov
push
mov
scas
aam
neg
cmp
add
xor
xor
je
bound
lods
mov
push
fnsave
jg
pop
xchg
sbb
pop
shr
pop
add
(bad)
sub
bound
jno
jbe
mov
aas
jmp
add
test
mov
fimul
or
shl
sbb
ds
cmp
neg
ja
dec
fcom
mov
call
pushf
mov
shl
sbb
xor
sub
jmp
jne
dec
fsubr
cmp
nop
push
sub
(bad)
pop
shl
hlt
mov
jb
sub
sti
inc
out
pop
cmps
xchg
outs
shl
call
mov
mov
and
mov
mov
fwait
js
lahf
bound
lahf
fwait
sahf
push
adc
sub
call
and
dec
iret
xor
push
cmps
inc
aad
or
pop
stos
mov
icebp
xor
jecxz
iret
push
adc
add
push
sbb
push
(bad)
sti
add
xor
fwait
out
inc
test
lods
jno
aas
cld
sub
dec
rcl
jle
adc
add
or
and
shl
stc
or
add
es
adc
add
inc
mov
and
call
push
adc
aad
test
movs
mov
mov
jl
(bad)
outs
fadd
add
mov
mov
mov
ds
xor
inc
mov
out
movs
jnp
inc
fisub
push
or
in
and
pop
lods
nop
jle
stc
jo
xchg
dec
(bad)
push
cld
pop
mov
imul
iret
dec
mov
cmp
push
(bad)
mov
pushf
arpl
add
loop
shl
ret
jg
jo
inc
das
adc
shr
adc
cld
or
mov
cwde
jbe
(bad)
std
sub
pop
out
out
add
pop
mov
xchg
jbe
out
ds
cmp
xor
out
int3
pop
aad
lods
outs
sbb
or
ror
sbb
adc
push
cmps
loop
fstp
inc
sbb
out
add
std
(bad)
cmp
push
mov
aad
aaa
repnz
dec
rol
fild
dec
adc
fimul
sar
pop
mul
pushf
dec
mov
inc
lds
and
pop
adc
loop
xlat
inc
mov
fnstsw
jp
jb
imul
mov
mov
fbld
xor
aad
in
or
lods
fwait
pusha
mov
cmps
bound
lods
ins
and
sbb
and
aaa
repnz
cmc
dec
fistp
clc
xor
dec
fdiv
pop
test
push
shl
push
mov
mov
cmps
lds
fs
test
inc
mov
mov
daa
push
pop
xor
pop
movs
imul
xor
add
xor
cmp
pop
mov
leave
dec
(bad)
inc
shr
lds
sbb
cwde
jg
jp
outs
fnsave
push
xlat
sub
and
xor
add
in
dec
add
sbb
push
adc
push
shl
sti
cmp
psubd
lock
iret
push
or
hlt
sub
in
fild
adc
icebp
sub
add
ins
mov
mov
rcl
in
ror
adc
pop
mov
push
sbb
scas
cwde
popf
(bad)
lds
mov
mov
fwait
inc
scas
inc
lods
into
cmp
out
dec
jmp
(bad)
push
xchg
jae
sub
dec
fisttp
std
es
aas
push
adc
adc
pop
xchg
imul
lock
and
mul
adc
mov
inc
xlat
and
add
imul
adc
mov
ins
call
in
xor
push
xor
sbb
imul
xor
push
mov
push
(bad)
ins
xchg
jnp
js
jne
popf
test
ins
mov
(bad)
mov
jg
inc
repnz
inc
mov
jg
aas
dec
lods
mov
jb
xchg
cdq
pushf
lods
jae
sbb
push
adc
jecxz
sar
ds
repnz
pop
cmp
sub
pop
mov
xor
das
or
sub
psubw
ror
in
jecxz
(bad)
data16
mov
push
mov
scas
cld
push
stos
fwait
mov
inc
stos
jle
fs
sbb
cmp
mov
mov
movs
inc
ficomp
xchg
fwait
mov
xor
pop
movs
iret
push
xlat
or
push
stos
or
add
dec
fild
sbb
pmulhuw
sti
pop
mov
xor
sub
aaa
push
retf
push
adc
in
in
dec
ror
jno
pusha
jmp
scas
pushf
jno
popa
(bad)
sub
adc
add
call
push
sub
push
stos
pushf
jns
mov
or
inc
mov
mov
pusha
mov
fild
pop
pop
push
or
aas
in
push
adc
or
cmp
daa
call
dec
ss
xor
cmp
aas
shl
in
cmps
test
stc
jp
mov
test
xlat
daa
ret
and
out
(bad)
xor
sub
adc
pop
scas
xchg
jo
and
xlat
and
lds
lods
inc
fisub
pop
sbb
aaa
ret
push
lods
cdq
cld
dec
mov
mov
lods
dec
iret
push
sbb
mov
dec
xlat
sub
pop
cmp
stc
pop
mov
xchg
jno
pushf
xchg
fwait
jge
jno
dec
mov
push
push
sbb
dec
mov
call
lods
mov
das
les
loop
sbb
out
aaa
out
pop
fild
(bad)
aas
adc
add
fwait
dec
rcr
test
(bad)
je
xor
ret
rcr
imul
push
xchg
xor
dec
fisubr
into
xor
jge
or
(bad)
xchg
jmp
adc
push
inc
and
push
nop
pushf
mov
mov
retf
xor
jge
xor
jmp
stc
or
pop
mov
sbb
rcr
shr
xor
leave
and
out
sbb
xor
inc
fidivr
cdq
mov
dec
xor
sub
adc
jmp
inc
cmp
cmp
aas
jecxz
sbb
jmp
out
lods
mov
cmp
pop
xchg
jno
pushf
popf
outs
sub
and
xchg
dec
sub
add
jge
or
mov
fldenv
in
stos
dec
scas
ins
mov
cmps
ins
fdivr
loopne
sbb
push
shl
aas
leave
xor
cmp
pop
sbb
(bad)
cmp
push
mov
mov
sub
jg
xchg
xor
xchg
xor
xor
jmp
outs
cmps
jl
push
aam
pop
mov
xchg
xchg
jl
push
retf
push
xor
test
xadd
sar
test
enter
clc
sub
daa
movntq
popa
fbstp
mov
push
mov
sti
sub
adc
or
push
xchg
mov
lahf
rcr
pop
mov
je
popf
ja
jge
inc
mov
test
pusha
fild
pop
or
jmp
clc
sub
cmp
and
lds
jmp
mov
pop
sbb
xor
cmp
aaa
ret
ja
xchg
cmps
popf
xchg
pusha
mov
jge
cmp
mov
iret
push
cmps
js
shl
stos
nop
pushf
dec
aad
sbb
cmp
push
pmulhuw
lock
adc
int3
xor
pop
cmc
or
sbb
xchg
ins
iret
dec
mov
xchg
jge
xor
into
push
ficomp
out
dec
fcomp
inc
shr
retf
and
inc
int3
push
xchg
xchg
xlat
sub
mov
cdq
pushf
stos
ja
mov
push
sbb
retf
mov
inc
icebp
xor
daa
adc
or
rcr
mov
pop
test
cwde
jge
inc
or
push
mov
je
sub
ins
xchg
dec
aam
cmps
inc
add
sbb
xor
cmc
sub
int
iret
xor
mov
jbe
and
scas
fwait
push
stos
popf
outs
ror
jl
xchg
sbb
sub
xor
pop
mov
imul
dec
sub
cmp
das
in
pop
rcr
aas
sbb
pminsw
in
push
hlt
and
inc
mov
nop
lds
clc
sub
inc
retf
es
sub
sub
movs
nop
inc
mov
jp
ins
mov
stos
xchg
cmps
scas
jne
xchg
add
shl
call
out
out
inc
sar
std
dec
shl
popf
test
popf
lea
fsub
enter
add
xor
adc
gs
pop
or
jg
xchg
mov
mov
js
mov
sti
inc
(bad)
or
das
out
and
jg
pop
retf
pop
sbb
jecxz
fild
jg
shl
imul
out
cmc
inc
cmp
mov
inc
or
or
adc
in
ss
ss
xor
mov
(bad)
and
loope
push
cld
mov
stos
jl
popf
fs
mov
pushw
jmp
sbb
in
sub
in
mov
out
push
(bad)
mov
(bad)
xor
inc
neg
pop
add
(bad)
mov
lds
push
cmp
xor
dec
mov
jecxz
out
pop
fadd
stos
dec
mov
lea
pusha
rcl
ins
mov
sbb
das
add
ret
hlt
push
(bad)
xor
cdq
movs
jp
xchg
imul
fstp
jge
shl
push
add
icebp
sub
adc
hlt
pop
lods
inc
(bad)
xor
or
ds
cmp
jno
inc
scas
ret
and
cmp
push
clc
dec
stos
outs
scas
add
xchg
push
add
ja
out
iret
movs
cmp
lock
and
test
ds
xchg
clc
add
inc
movs
loope
lock
push
cdq
cmc
mov
sub
dec
sub
mov
popf
icebp
sub
rcl
jle
jo
int
sar
jmp
pop
(bad)
mov
mov
pop
cld
cdq
fst
(bad)
mov
dec
xor
mov
xchg
push
add
jmp
sbb
mov
xchg
outs
add
out
cdq
sar
fld
fnstsw
dec
or
pushf
in
(bad)
outs
cmp
icebp
xchg
push
aaa
je
loope
inc
loop
in
mov
dec
and
mov
popf
neg
cmp
jmp
nop
in
movs
out
or
push
mov
popa
pcmpeqd
push
sbb
out
mov
sbb
inc
mov
mov
push
mov
jo
pop
mov
imul
sbb
push
xor
mov
jne
aad
lock
popf
leave
call
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
(bad)
sahf
(bad)
test
mov
stos
in
mov
(bad)
sahf
cld
(bad)
(bad)
mov
fnsave
in
cli
stos
fimul
stc
mov
xchg
out
xchg
(bad)
sahf
sti
xchg
loopne
cld
xchg
xchg
mov
cmc
adc
cld
sbb
dec
sub
sub
shl
xchg
std
mov
cmps
mov
ins
sbb
inc
and
and
pusha
sub
dec
and
jg
dec
or
popa
add
ja
push
and
gs
outs
cmp
inc
pop
addr16
xor
sbb
dec
and
xor
push
cs
das
push
dec
push
push
add
jb
push
cs
or
and
mov
test
clc
pushf
fnstcw
movs
jmp
out
mov
sbb
dec
pop
cmp
jl
push
sub
push
push
xor
jne
imul
ds
or
and
inc
xor
or
push
adc
xor
cmp
push
sbb
sub
adc
inc
cmp
jno
push
(bad)
cs
push
sbb
lahf
fisttp
fdivr
jmp
test
mov
(bad)
fist
jmp
ret
mov
(bad)
lods
in
repz
(bad)
mov
into
call
rcl
ret
fnstsw
mov
int
fadd
cdq
loop
ret
scas
retf
mov
mov
loope
in
cmp
xchg
les
and
inc
ds
es
and
pop
setge
mov
pop
ds
pop
inc
adc
retf
popf
(bad)
mov
into
fidivr
fbld
ret
(bad)
fld
into
mov
call
sti
mov
xchg
loope
loopne
std
mov
rol
cmc
mov
shl
jmp
mov
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
in
out
in
fild
out
lods
idiv
out
stc
call
retf
movs
xlat
sahf
repnz
test
mov
in
cwde
int3
and
cmc
lods
out
(bad)
cmps
fidiv
stc
xchg
out
xchg
scas
lds
out
loopne
sti
cwde
ficom
fdivr
mov
rcr
mov
std
cwde
fdivr
shl
(bad)
jmp
repz
mov
xchg
fidivr
imul
fdiv
repnz
fidivr
jmp
pushf
stc
mov
retf
fnsave
sti
xchg
shl
in
fwait
leave
test
lahf
cld
mov
iret
mov
lock
out
out
sar
mov
cdq
loop
(bad)
mov
test
mov
lods
out
cld
xchg
cmc
mov
xchg
iret
or
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
test
stos
out
(bad)
neg
shr
scas
icebp
mov
fdivr
lds
neg
sar
enter
jmp
add
fdiv
jecxz
lock
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loope
in
cmp
xchg
ret
stos
enter
shl
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
ins
add
pop
pop
ss
sbb
sub
pop
or
pop
cmp
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
jno
gs
pop
xor
jge
pop
pop
inc
push
pop
or
push
push
jne
push
sub
sub
jo
pusha
or
imul
imul
cmp
push
xor
imul
pop
sub
cmp
adc
sub
dec
push
dec
sub
jbe
push
adc
add
retf
mov
call
fmul
stc
mov
xchg
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
ins
add
(bad)
mov
fild
sti
mov
test
mov
sar
in
cmp
sti
mov
(bad)
xchg
mov
leave
and
les
rcr
iret
movs
loope
lock
(bad)
lahf
ficom
ret
fnstsw
les
ror
mov
mov
and
les
rcl
stc
lahf
fadd
sti
mov
test
(bad)
mov
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
retf
cmps
ret
cdq
not
std
xchg
xchg
mov
or
sub
jle
pop
or
push
sub
ja
popf
icebp
lods
retf
mov
xchg
rcl
mov
test
mov
in
sti
lods
ret
mov
aad
ror
test
shr
fisub
and
test
lahf
iret
mov
fistp
repz
clc
call
iret
(bad)
in
clc
mov
dec
xor
pop
sbb
je
push
popw
fs
pop
sub
ins
sub
push
dec
adc
adc
ins
cmp
jbe
ins
add
add
adc
push
add
push
sub
and
fs
jae
outs
add
sub
inc
adc
jns
push
cs
or
bound
jp
jno
arpl
push
cmp
inc
add
xor
pop
push
jge
pushf
stc
mov
retf
cmps
rcr
cld
mov
scas
(bad)
scas
out
test
fwait
int
and
dec
adc
call
jno
(bad)
cmp
xchg
mov
in
ret
sub
push
dec
stos
and
pop
sti
push
out
(bad)
sti
gs
(bad)
sub
fisub
ret
popf
mov
sub
mov
mov
aaa
call
jmp
xor
retf
fisub
std
sbb
div
test
stos
inc
arpl
sub
ins
jno
sbb
push
das
sbb
iret
std
fnstenv
jns
xchg
mov
push
inc
add
int
fstp
pop
cwde
jo
inc
callw
pop
pop
cmp
xor
ds
test
jp
jo
test
std
xor
pop
cs
mov
in
add
jg
into
leave
push
cmc
and
scas
into
mov
mov
aaa
fldenv
ret
cmp
inc
into
inc
mov
pop
rol
dec
je
or
movs
pop
xor
and
push
je
jmp
sbb
push
jle
hlt
cdq
scas
cli
mov
jg
mov
iret
mov
outs
outs
out
pop
sub
stos
nop
inc
inc
push
xchg
(bad)
jns
dec
inc
adc
add
or
pop
test
dec
aam
pop
stc
mov
mov
into
retf
mov
xor
ja
adc
test
enter
cmps
dec
lods
pop
adc
mov
xor
sub
pop
pop
sbb
add
movs
sub
enter
iret
mov
mov
rcl
jbe
dec
pushw
dec
jns
shr
push
and
dec
in
cmp
mov
(bad)
pushf
cmp
jmp
xor
cmp
dec
jb
inc
xchg
int3
inc
bnd
scas
xor
cli
jle
stos
retf
mov
or
(bad)
pushf
ror
out
call
sbb
les
add
imul
push
(bad)
dec
dec
cmp
(bad)
cmp
retf
lahf
cmp
xchg
arpl
mov
cmp
xchg
fwait
lahf
mov
pop
push
test
shr
das
adc
pop
cmp
or
pushf
adc
call
out
inc
std
push
(bad)
ins
or
xchg
call
inc
(bad)
cmp
jns
mov
xchg
jnp
sbb
sub
clc
icebp
push
std
dec
mov
mov
add
cmp
addr16
aad
xor
push
inc
gs
add
jno
call
(bad)
pop
scas
mov
sbb
adc
sahf
aam
inc
add
shr
out
inc
dec
int
cmps
movs
adc
retf
adc
arpl
fwait
dec
mov
gs
test
push
sub
xor
ins
lods
imul
cmp
cmp
add
add
movs
repz
pusha
push
xor
inc
jo
and
pop
xchg
test
mov
es
(bad)
jne
push
pop
(bad)
jne
rol
push
popf
lods
loope
mov
lahf
and
adc
mov
and
outs
js
sub
jmp
(bad)
dec
or
scas
xlat
cmps
and
lock
mov
arpl
jbe
mov
push
je
push
stc
(bad)
in
mov
mov
mov
xor
mov
jp
ds
jnp
adc
stos
shl
ficomp
fistp
jae
mov
add
mul
repnz
jo
mov
test
int3
push
shl
ins
dec
ret
popa
das
test
pop
mov
pop
ret
dec
data16
jecxz
xchg
mov
repnz
add
sbb
stos
hlt
aaa
mov
call
push
mov
test
fst
(bad)
js
neg
xchg
frstor
cwde
cmp
adc
mov
push
in
pushf
in
push
pop
cmp
cmp
repz
mov
xor
dec
das
in
xor
movs
scas
stos
std
or
cmp
xchg
xchg
inc
adc
push
fnsave
fimul
imul
adc
cld
xchg
sbb
inc
fisub
xchg
xor
or
cdq
or
add
mov
clc
or
in
scas
aam
sahf
es
repz
nop
mov
cmp
fisttp
pop
pop
mov
pushf
call
cmp
daa
mov
lds
or
cmps
je
repz
retf
push
or
fmul
xchg
jmp
mov
xchg
or
shl
push
inc
inc
or
bound
adc
and
scas
cmps
mov
popf
lock
sbb
mov
adc
jo
js
popa
cmp
jecxz
push
repnz
xchg
mov
loopne
mov
and
aad
popa
test
inc
dec
test
or
aas
popa
cmps
jb
dec
cli
jo
push
fimul
sub
sub
into
mov
ss
ror
mov
in
ret
ss
pop
mov
leave
shl
sahf
pop
mov
es
(bad)
pop
sbb
hlt
pop
or
add
xchg
jg
or
push
add
mov
lea
sub
sbb
adc
hlt
jmp
loope
mov
inc
and
pop
xor
mov
pop
or
mov
lea
mov
and
ins
mov
(bad)
mov
cld
mov
jle
loope
jbe
daa
(bad)
popa
lods
ds
mov
push
sbb
jmp
outs
or
addr16
or
or
icebp
outs
fidivr
cmp
pop
test
sub
fcmovnbe
sbb
cmp
bound
retf
jmp
add
mov
mov
xchg
and
and
inc
es
aaa
mov
xchg
sub
(bad)
daa
in
pop
fdiv
inc
sub
sub
mov
pop
shl
mov
mov
daa
retf
xchg
movs
outs
mov
jg
sbb
popf
sahf
aam
out
sbb
js
js
enter
jmp
and
(bad)
out
push
into
cmp
mov
mov
retf
pop
push
sbb
mov
add
mov
std
repz
aad
xor
fnsave
xchg
add
mov
(bad)
cmp
xchg
jmp
xchg
mov
aas
and
xchg
ja
inc
push
mov
retf
push
add
dec
push
icebp
lock
mov
aad
call
pop
fcmovb
inc
jge
mov
fcmove
int3
add
icebp
ins
sub
adc
enter
cmp
enter
ret
jp
inc
jae
jae
pop
mov
aas
dec
retf
jle
(bad)
movs
or
mov
retf
and
jle
cmp
push
mov
push
(bad)
mov
push
jae
dec
sub
or
in
scas
sub
jmp
mov
(bad)
sub
in
scas
cmp
test
lock
nop
adc
(bad)
jl
retf
or
(bad)
fidivr
mov
sub
jge
imul
mov
ret
dec
sub
adc
mov
mov
mov
pusha
in
and
and
cld
lods
lds
into
jecxz
xor
xchg
je
int
inc
xor
stc
cmps
mov
pop
scas
sbb
in
xor
add
mov
jge
scas
dec
call
frstor
push
adc
xor
imul
stos
xor
jo
adc
add
leave
lock
adc
add
div
dec
cmp
mov
mov
push
adc
call
es
add
pop
arpl
fistp
jbe
into
in
jg
imul
cmps
pusha
sbb
ret
loop
jnp
pop
jb
mov
dec
stos
test
fidivr
mov
jb
(bad)
xchg
call
adc
and
stc
aam
out
repnz
jle
iret
mov
pop
inc
mov
scas
pop
sbb
mov
push
add
jae
aas
dec
add
scas
sub
sub
mov
fldcw
sub
stc
pop
or
(bad)
das
sub
and
dec
pop
push
mov
int
test
es
rol
push
and
lds
kortestb
mov
mov
sub
or
inc
addr16
gs
adc
add
mov
ret
sbb
or
push
movs
cmp
popf
iret
inc
push
addr16
dec
(bad)
ficomp
sbb
xchg
hlt
stos
push
sub
fsubrp
pop
in
aaa
jg
xor
mov
mov
sub
call
icebp
pop
jnp
mov
cli
icebp
add
push
push
jl
and
adc
aas
push
psubw
xor
adc
das
jnp
imul
cs
in
pop
cmc
xor
and
movs
pop
sbb
inc
pop
add
ds
jmp
aad
and
mov
(bad)
jo
aaa
mov
cdq
dec
mul
jne
sti
and
adc
pop
xchg
mov
ret
dec
lds
adc
pop
add
enter
xchg
(bad)
xor
jmp
cs
test
ss
jns
shl
pop
push
int3
aam
jbe
pop
add
aas
ret
mov
sub
xor
lds
das
cld
ins
mov
das
std
and
jp
fs
leave
sbb
enter
adc
leave
and
push
in
jg
fist
in
call
cwde
cmp
stc
imul
arpl
xchg
push
push
rol
xchg
hlt
or
lahf
loop
jp
xor
xor
pusha
pop
popa
jl
pusha
dec
(bad)
sub
movs
mov
inc
pusha
dec
retf
mov
or
jmp
sar
jmp
mov
mov
dec
mov
cmp
xchg
pop
xor
out
cld
aam
bound
lahf
in
das
sbb
loope
shl
bound
aaa
in
pop
mov
sbb
lods
inc
cmpps
inc
into
push
and
ins
test
push
mov
push
mov
or
cwde
xchg
mov
ins
dec
mov
pusha
sti
repnz
pop
xchg
jp
cmp
inc
mov
lahf
pop
fidiv
push
enter
mov
inc
ja
inc
xor
pop
stos
and
cmps
add
cdq
les
test
(bad)
test
idiv
nop
jmp
shl
shl
cmps
out
sub
je
inc
xchg
outs
aam
and
jbe
enter
push
je
xchg
adc
sub
sbb
xchg
mov
loope
imul
lock
mov
pop
push
push
sub
gs
push
sbb
fisubr
je
mov
cli
dec
fbstp
sbb
push
fisubr
dec
xchg
shl
mov
sbb
repnz
pop
push
sub
in
sbb
jge
call
add
(bad)
call
xchg
or
sbb
cli
sbb
addr16
loopne
xchg
inc
(bad)
adc
scas
daa
mov
ins
jb
pop
inc
ja
mov
push
sbb
and
mov
loop
leave
push
sbb
rcr
dec
pop
loopne
int3
jno
jno
dec
(bad)
push
adc
jl
mov
mov
mov
xlat
mov
xchg
and
mov
sbb
or
clc
out
in
jmp
cmp
movs
sar
add
sti
inc
inc
mov
and
mov
cld
lea
pusha
jmp
xchg
mov
sbb
mov
rcr
lods
xor
xlat
pop
or
lods
into
xor
dec
jno
data16
jmp
dec
jbe
mov
icebp
fdiv
addr16
cli
mov
out
xchg
mov
es
mov
arpl
popa
and
ret
push
adc
cmp
adc
mov
dec
adc
retf
les
adc
ins
retf
or
adc
jl
je
push
jmp
and
mov
pop
jns
adc
test
sub
pop
mov
xchg
arpl
cmp
mov
pop
call
mov
inc
mov
pop
outs
fnsave
mov
xor
popf
push
jne
pop
mov
shr
test
xchg
add
aam
adc
in
int3
cmp
push
movs
sti
mov
sbb
dec
jmp
(bad)
jae
shr
fbld
icebp
cli
mov
push
and
hlt
xor
(bad)
test
repz
fisttp
mov
cmp
xchg
rcl
push
pusha
dec
shr
cli
lock
xchg
(bad)
pop
push
call
call
repnz
repz
mov
lods
mov
in
imul
ins
leave
ss
xchg
les
cdq
retf
cmps
pop
jnp
adc
test
cld
push
out
fsubr
dec
cmp
stc
ret
sub
fs
xor
sar
pushf
push
mov
push
and
test
mov
adc
sub
and
mov
dec
clc
rcr
cmp
xchg
push
leave
(bad)
push
in
je
jae
adc
clc
pop
mov
sub
or
fdivr
hlt
or
xor
jmp
push
dec
mov
pushf
mov
out
jo
jae
pop
pop
retf
add
call
jmp
adc
shl
sbb
test
retf
mov
fs
adc
aad
jno
xchg
mov
mov
lods
clc
test
pop
(bad)
dec
cld
and
xchg
add
mov
or
mov
retf
mov
ds
push
test
jnp
xchg
mov
call
pop
addr16
pmuludq
daa
pop
jmp
push
inc
(bad)
out
fnstenv
out
imul
jnp
push
sbb
pushf
mov
sub
fs
cld
and
int
mov
clc
and
out
push
and
pop
sub
je
push
and
adc
cmp
or
xor
fistp
mov
pop
sbb
or
mov
push
cmp
push
xor
or
sub
ja
outs
lock
cmp
sbb
dec
cmp
jecxz
inc
mov
movs
pusha
push
dec
outs
lock
pop
fadd
lea
stos
loopne
cs
or
mov
push
paddusb
jmp
rcl
popf
xor
fwait
or
ss
adc
(bad)
mov
push
ret
(bad)
dec
jno
push
(bad)
popf
or
mov
test
movs
sbb
and
or
cli
retf
and
cwde
cmps
movs
sub
jno
pop
imul
push
outs
jp
pop
xchg
test
pusha
leave
sbb
and
xor
or
fstp
add
inc
rol
fsub
repnz
push
out
pop
mov
jno
pop
xor
dec
test
ret
data16
mov
mov
hlt
test
add
push
pop
jns
jp
push
cmp
inc
js
add
xor
push
addr16
(bad)
jmp
arpl
ror
add
stc
mov
imul
into
int
fisttp
mov
scas
jl
popf
push
and
jo
(bad)
rcl
pop
je
cdq
pop
or
ret
jl
or
iret
xchg
sar
push
adc
data16
jmp
xchg
inc
sahf
rcl
call
mov
stos
retf
retf
stos
mov
rcl
cmp
rol
inc
gs
adc
(bad)
cmp
popf
pusha
int
mov
ins
outs
mov
sbb
xor
int
pop
dec
mov
int
fwait
and
dec
pop
gs
push
mov
xchg
push
and
mov
cmp
pop
daa
sbb
xlat
iret
sub
jnp
dec
and
jg
jne
mov
scas
scas
push
in
push
fsub
mov
ins
mov
or
push
sub
sub
cmps
push
cdq
call
es
pop
ds
mov
fbld
adc
out
fistp
aas
jg
xchg
jno
cmps
ins
xchg
mov
lea
and
inc
(bad)
push
mov
sub
mov
cmp
shl
push
js
jmp
push
int
movs
repz
in
xchg
out
pop
fiadd
outs
fldcw
cmp
adc
(bad)
hlt
dec
add
mov
inc
enter
push
mov
lahf
xchg
mov
jo
mov
pop
sub
lods
(bad)
lea
jbe
pushf
mov
(bad)
jmp
nop
mov
pusha
push
adc
mov
mov
cmc
and
add
mov
pop
mov
or
arpl
mov
ja
fmul
sub
xchg
push
mov
daa
je
nop
(bad)
fwait
dec
call
xor
sbb
mov
inc
out
int3
add
cmp
xor
arpl
cmps
xchg
inc
loop
cmp
or
ret
daa
and
push
mov
pop
push
gs
loop
mov
retf
sbb
mov
out
ror
mov
daa
pop
sbb
cmps
jl
rcr
mov
retf
aaa
sbb
cmp
and
leave
mov
leave
call
(bad)
repnz
sbb
jmp
add
mov
rcr
outs
cmp
xchg
cmp
leave
or
lods
(bad)
popa
cmp
jp
rol
popa
sahf
adc
scas
add
mov
repnz
sub
ins
ret
js
fstp
cwde
test
sahf
jge
push
and
stc
xchg
test
mov
jbe
inc
jo
add
repz
das
mov
jmp
ret
imul
xchg
ret
cli
and
loope
hlt
sub
push
movs
cld
cmp
push
retf
in
jmp
retf
out
out
mov
sbb
daa
idiv
xor
sub
jmp
sub
push
arpl
push
repz
(bad)
frstor
sbb
lods
push
add
inc
test
or
sbb
cmps
retf
add
or
rcr
adc
sbb
dec
iret
mov
jbe
and
jb
cmp
xor
call
mov
sub
(bad)
in
cmc
ret
cdq
test
sbb
add
imul
pop
xchg
ffree
adc
push
test
adc
pop
push
data16
in
mov
jo
stos
test
in
pop
push
mov
icebp
sbb
rcr
xchg
frstor
dec
sbb
fwait
out
in
sub
lock
sbb
imul
or
repnz
pusha
pop
sbb
sbb
das
mov
cmp
dec
jmp
mov
lods
vrcpps
mov
scas
loope
lds
scas
adc
out
pop
cli
repnz
repz
xchg
retf
dec
pop
mov
mov
jnp
js
cmps
out
sbb
data16
adc
sbb
ja
popa
nop
mov
jae
retf
aaa
and
(bad)
je
push
jecxz
lahf
sahf
inc
or
inc
cmps
push
leave
pop
push
cmps
sub
dec
sub
mov
pop
push
ret
push
shl
mov
push
ret
jno
iret
pop
shl
lea
xchg
dec
push
cmp
jns
xchg
cmp
and
push
cmp
ins
ss
stos
stos
in
sub
xchg
dec
or
push
loope
mov
and
lods
int3
lahf
push
mov
fiadd
ins
and
inc
lods
or
std
mov
scas
jb
xchg
loope
into
(bad)
loopne
and
mov
out
mov
dec
xchg
sbb
jle
cmp
dec
or
pop
lods
push
inc
xchg
dec
xor
int
adc
retf
gs
ins
aad
cmp
mov
or
sub
dec
aam
stc
jnp
cmp
mov
push
xchg
jmp
outs
in
and
arpl
cmps
inc
clc
mov
mov
add
xchg
push
add
es
into
lods
out
movs
jg
inc
cmp
int3
xchg
clc
dec
add
jecxz
stc
pushf
mov
adc
inc
cmp
call
xor
out
mov
pop
aaa
and
out
mov
mov
dec
or
ss
ret
cmps
fidiv
jecxz
jo
pop
or
outs
rol
ret
iret
fdivr
idiv
jne
inc
inc
sub
or
cmp
ja
push
jecxz
movs
pop
pop
adc
fbld
or
inc
adc
inc
adc
jae
jb
into
pop
test
int
aam
mov
into
int
sar
adc
mov
xchg
fst
daa
es
cmp
sub
jg
cmp
push
in
(bad)
clc
inc
cs
arpl
rcl
lds
cs
inc
pop
(bad)
cmps
mov
nop
repz
jg
movs
push
or
jns
into
ficomp
lods
je
dec
xor
mov
adc
and
push
mov
int3
pushf
mov
jne
daa
(bad)
sub
and
out
push
test
mov
xchg
adc
pop
jmp
imul
mov
jne
jns
pop
push
sbb
and
mov
mov
mov
mov
mov
idiv
pcmpgtb
xchg
std
mov
push
iret
hlt
cmps
jmp
fidivr
cld
push
cmp
push
daa
outs
add
mov
movs
iret
add
cmp
inc
daa
inc
out
inc
dec
xor
fist
and
scas
idiv
sbb
in
lock
pop
aaa
mov
or
hlt
mov
stos
inc
dec
mov
mov
arpl
data16
inc
add
jns
cmp
mul
push
add
arpl
inc
jmp
xor
push
cmp
pop
aaa
je
popf
lds
in
in
or
mov
fwait
mov
arpl
sub
push
loop
(bad)
mov
popf
in
or
xor
les
in
int
dec
cli
mov
rol
sub
and
cmps
int3
test
push
pop
in
lds
mov
mov
mov
xchg
fbld
leave
stos
rol
(bad)
std
mov
(bad)
mov
xor
push
cmp
stos
fisub
repz
inc
call
xchg
call
loopne
retf
mov
test
cmps
(bad)
ins
lock
in
and
add
lods
(bad)
mov
retf
jbe
add
jns
jge
dec
or
ins
adc
data16
jl
inc
xchg
dec
xor
push
idiv
lock
ja
pop
sub
daa
dec
sub
int3
jecxz
sti
mov
cld
mov
xchg
popa
cmc
mov
xor
sub
loop
imul
mov
dec
adc
lea
test
loop
jmp
add
xor
push
pop
cmp
call
pop
loopne
int3
and
sbb
out
(bad)
inc
sbb
in
hlt
mov
imul
cmp
or
daa
fs
jp
mul
hlt
and
sbb
outs
call
data16
not
sub
cmp
pop
mov
jmp
ret
fwait
pop
js
jo
jl
mov
cwde
jp
pop
or
push
pop
push
push
fs
cmp
jne
inc
pop
dec
cmp
adc
cmp
out
and
xor
cld
mov
mov
(bad)
mov
hlt
pushf
jae
push
and
call
cmp
add
jg
arpl
xchg
std
(bad)
jecxz
neg
cmp
loop
jmp
cli
xchg
inc
lods
cld
mov
xchg
mov
(bad)
clc
mov
push
inc
sub
cmp
es
and
stos
rcr
adc
pop
das
outs
lods
loopne
jecxz
jle
pop
adc
jns
movs
(bad)
push
push
inc
cmp
xor
dec
adc
cwde
std
test
adc
xor
push
adc
addr16
mov
popa
sbb
test
pop
jmp
ror
movs
mov
in
add
push
push
sub
aas
lds
push
aaa
pop
cmc
(bad)
jecxz
test
add
xor
xor
es
push
xor
cmp
mov
sbb
and
pop
fnstcw
scas
inc
ss
sbb
pop
inc
or
xchg
fadd
outs
xor
pop
sbb
mov
xor
xor
mov
lods
bnd
dec
cmp
xor
rcr
shr
mov
inc
sbb
ja
aas
jmp
mov
imul
aad
sahf
dec
es
loopne
cdq
adc
in
(bad)
xchg
leave
sub
lds
or
or
out
mov
add
pop
loope
jbe
lods
(bad)
lods
cmps
(bad)
push
sub
bound
inc
das
sub
pop
fisttp
push
xchg
dec
push
pop
adc
push
jno
jg
push
mov
addr16
adc
sbb
dec
or
les
dec
add
fadd
jg
inc
jmp
pop
ss
push
or
inc
adc
pop
dec
sub
mov
cmps
out
cld
xchg
fidivr
cli
nop
mov
sub
sub
iret
lods
jmp
xchg
hlt
cdq
daa
ins
add
add
cmp
jns
pop
cmovae
jne
push
push
jp
pop
fidiv
sbb
in
mov
scas
cld
mov
ins
dec
data16
ret
add
xor
daa
push
loopne
rcl
test
jmp
repz
jmp
dec
sub
ins
sub
xor
sbb
lods
(bad)
mov
fadd
xor
pop
add
xor
int
jne
(bad)
int
xor
in
cwde
fisttp
mov
lods
icebp
xor
(bad)
lods
jge
xchg
fisub
pop
ret
test
xchg
test
ins
cmp
xchg
lds
and
add
inc
cmc
lahf
hlt
bound
pop
adc
fistp
adc
mov
dec
cs
adc
jae
push
loope
aam
rcr
loop
add
xor
and
dec
mov
(bad)
out
sti
popf
cmp
xchg
mov
mov
(bad)
xor
or
push
ds
aad
sbb
es
xor
sub
js
addr16
xor
add
dec
sub
sbb
and
jge
inc
push
push
cmp
jns
int
mov
mov
(bad)
out
jmp
test
adc
mov
rcr
push
addr16
push
mov
scas
fstp
fidivr
mov
pop
jge
pop
jmp
mov
(bad)
mov
jne
jb
fsubr
jg
push
push
xor
sbb
pop
pcmpgtw
movs
mov
and
jnp
mov
sbb
cwde
mov
addr16
jg
inc
sbb
pop
and
cld
or
mov
inc
mov
mov
mov
loop
cli
cwde
add
daa
jb
pop
daa
mov
or
push
xor
cmc
sahf
fisttp
push
jmp
pop
cs
and
lock
(bad)
ficom
imul
inc
or
outs
add
pusha
cmp
dec
jmp
inc
add
out
or
pop
inc
sub
push
loopne
cld
mov
dec
add
bound
dec
xor
jecxz
loope
repz
imul
scas
out
jmp
idiv
mov
cmp
retf
lds
shl
pusha
xor
rcl
shr
jnp
mov
inc
mov
xchg
mov
mov
xchg
(bad)
add
pop
jmp
fmul
mov
bound
jl
inc
or
dec
add
inc
sbb
push
xor
xor
dec
ffreep
mov
vrcp14ss
cmp
aaa
imul
(bad)
mov
and
push
test
cmp
jg
pop
loop
dec
dec
loop
fist
jle
push
add
inc
cmps
fsubr
ret
mov
xchg
in
lods
shr
popa
sbb
push
jl
add
fs
in
cmp
sbb
push
rdmsr
cmc
or
dec
and
ins
sbb
loopne
mov
test
mov
inc
rcr
cmp
push
cmp
movs
jne
push
xor
jp
mov
cmp
push
js
jp
es
retf
test
fwait
clc
cmp
adc
data16
sub
ja
jb
jle
pop
pop
add
and
and
movs
std
sub
clc
adc
jp
pop
push
sbb
pop
sub
xchg
jb
pop
rcr
mov
sahf
lahf
out
cli
stos
stc
mov
test
in
leave
mov
lock
xchg
int3
test
ds
addr16
aam
ret
ret
xchg
in
xchg
dec
cs
xor
jns
pop
xchg
mov
stos
iret
mov
nop
(bad)
popf
(bad)
xchg
jecxz
pop
and
push
aaa
jne
xor
push
push
dec
sub
jbe
icebp
mov
out
shr
pop
xor
test
push
cmp
enter
add
aas
push
xor
xor
jl
xchg
stos
test
imul
mov
sub
out
cmp
pop
ss
mov
add
aas
push
ds
cmp
pop
sbb
push
sbb
movs
icebp
inc
loopne
mov
push
in
xchg
repnz
cdq
jo
or
xor
test
test
mov
loope
out
jns
add
xchg
clc
adc
dec
cmp
sub
jb
or
pop
sbb
xor
or
jp
pushf
fsubr
test
xor
push
xor
lods
jge
test
cmp
in
pop
push
push
dec
in
mov
cmovno
xor
shl
fisubr
pop
jmp
mov
cwde
shr
pop
push
inc
adc
sub
mov
fwait
xor
xchg
movs
shl
bound
gs
cmc
leave
test
mov
pop
punpcklwd
arpl
pop
inc
mov
cmps
(bad)
mov
cwde
push
inc
add
aaa
pop
and
mov
lods
bnd
data16
ds
(bad)
mov
lods
out
les
add
add
out
repz
sbb
inc
lds
call
jle
cmp
test
xchg
or
dec
mov
mov
mov
sti
mov
mov
(bad)
sub
fldenv
inc
sbb
mov
push
(bad)
cmp
ins
mov
xchg
popa
adc
jbe
xchg
repz
adc
pushf
leave
test
jl
stc
das
leave
nop
repnz
xor
imul
clc
pusha
rcl
cmps
les
mov
jp
fnstenv
mov
xchg
loope
lds
pop
or
cmp
sti
fwait
mov
pop
adc
mov
xchg
xlat
or
jecxz
sar
in
lds
cs
cmp
xlat
mov
and
(bad)
cmps
cmc
movs
ins
popf
int3
and
dec
or
pop
ds
sub
cmp
and
xor
inc
push
xor
pop
out
shl
hlt
cwde
sar
mov
jge
and
push
mov
cwde
stc
call
clc
popf
sbb
cmps
cmc
mov
xchg
fidivr
iret
mov
scas
shl
repz
repnz
xchg
into
outs
test
mov
push
push
add
cli
sub
fcmovbe
cmps
out
mov
jg
fistp
mov
inc
popf
inc
push
data16
xor
outs
es
clc
mov
mov
pop
out
into
xor
imul
ret
xchg
sbb
test
mov
or
adc
jg
mov
mov
rcr
mov
pop
and
sub
jbe
pop
clc
dec
xor
je
imul
out
mov
fwait
in
cmp
mov
jle
mov
scas
ret
mov
mov
add
jnp
outs
sub
cmps
retf
sahf
lock
repz
adc
les
das
dec
test
mov
in
scas
into
mov
movs
retf
repz
jo
jae
and
pusha
cld
(bad)
mov
cdq
(bad)
aaa
fadd
cs
sbb
dec
sub
call
out
call
mov
popf
movs
fisttp
jns
ins
aad
std
imul
lea
js
adc
push
jecxz
sar
and
jg
inc
sub
adc
fwait
ror
stos
mov
js
dec
scas
int
lds
cmc
(bad)
in
mov
es
out
mov
scas
icebp
imul
or
push
pop
ds
jge
or
jl
push
xor
stos
loope
xor
and
jno
jbe
ja
push
out
sub
mov
nop
repz
lods
jmp
mov
stos
shl
pop
fnstsw
push
adc
xor
ror
inc
and
dec
or
adc
mov
loop
icebp
fwait
dec
in
mov
test
retf
mov
mov
scas
int
lds
dec
and
ret
ja
jle
pop
rep
out
fnstcw
pop
stos
enter
adc
dec
cmp
push
adc
add
xor
adc
jb
fsub
mov
pusha
pcmpeqd
cdq
aam
jns
jnp
pop
outs
daa
jne
inc
mov
push
cmp
pop
shl
sti
jle
jmp
scas
iret
pushf
into
mov
xchg
dec
mov
mov
test
mov
mov
inc
cs
or
adc
inc
sbb
dec
xor
in
jne
jg
jno
xor
jne
push
push
dec
or
sub
pop
adc
xor
into
stos
out
bound
jge
popf
cmps
mov
cmp
xchg
sbb
js
inc
add
jp
and
cmp
or
inc
test
jp
dec
ds
sbb
fimul
jno
pop
jecxz
sbb
mov
outs
daa
jle
or
jmp
add
jne
inc
xor
out
cli
xchg
std
test
outs
xor
dec
out
jae
jo
inc
and
pop
and
je
and
and
dec
adc
sbb
jb
xchg
lahf
mov
mov
test
imul
sbb
bound
js
inc
cld
inc
adc
dec
xor
je
xchg
ja
dec
mov
imul
(bad)
pushf
aad
fcom
jmp
scas
rcr
inc
add
push
sub
inc
pop
(bad)
call
push
int
out
or
mov
cwde
inc
das
dec
cmp
xchg
fbstp
lock
stos
rcl
xchg
aad
not
sahf
out
jmp
cmps
fbstp
sub
dec
imul
and
sub
mov
lods
inc
cmp
and
jne
inc
add
sub
push
mov
scas
(bad)
(bad)
fiadd
pop
add
cld
add
or
mov
scas
sar
repz
dec
cmp
test
inc
add
lahf
int
aas
jne
push
push
(bad)
mov
xchg
retf
arpl
jno
xchg
out
mov
cdq
ret
xchg
cmp
cmp
clc
mov
call
push
push
jae
jle
dec
ret
fwait
shr
sub
cmps
loopne
daa
pusha
adc
addr16
push
push
mov
imul
push
xchg
repz
inc
mov
fidiv
add
fdiv
push
add
add
sub
cmps
(bad)
std
mov
outs
aaa
and
pop
sbb
push
push
pop
push
cmp
(bad)
(bad)
jmp
jge
in
(bad)
lock
pop
xor
pop
fisttp
sub
das
dec
adc
pop
or
loop
into
mov
popa
ss
es
or
retf
mov
add
or
shr
sub
out
mov
inc
loopne
lods
xchg
fstp
adc
dec
xor
pop
or
test
xchg
retf
movs
leave
inc
push
jae
sub
xchg
ret
test
cdq
lds
cmp
sbb
xchg
(bad)
pusha
sbb
loop
in
jge
cwde
loop
mov
mov
in
push
sub
enter
mov
aad
int3
js
je
shl
jb
fbstp
mov
jbe
dec
cmp
push
cmp
pop
add
jne
ja
dec
sub
scas
(bad)
imul
mov
mov
jmp
out
adc
mov
fs
fcomp
daa
inc
adc
mov
in
jbe
mov
fidivr
aaa
dec
adc
xchg
shl
aad
adc
xor
mov
stos
(bad)
mov
and
(bad)
mov
sti
add
stos
mov
popa
pop
push
and
and
push
pop
ds
cmp
cs
sbb
jb
aaa
cmp
jne
jno
cmp
adc
pop
sub
push
cdq
out
cmps
int
inc
sub
push
mov
cwde
(bad)
repnz
test
cmp
mov
mov
ret
test
xchg
inc
test
adc
mov
out
push
jle
inc
xor
in
sti
xchg
cld
test
loope
mov
enter
std
pusha
cvtdq2ps
call
mov
in
sub
xor
jmp
jmp
and
es
loop
(bad)
scas
stos
int
out
imul
imul
daa
inc
push
and
pop
es
fdiv
test
ror
mov
push
aaa
push
sub
mov
xchg
mov
sti
call
mov
jmp
dec
xor
js
pop
sbb
(bad)
loop
popa
or
push
in
ret
jecxz
loop
ret
(bad)
in
xchg
hlt
mov
jmp
or
add
rol
xchg
ror
ss
pop
cmp
mov
sub
jle
dec
or
das
pop
ret
mov
loopne
inc
push
jbe
outs
aad
enter
mov
jmp
shl
cmp
cld
sahf
fild
mov
mov
jo
jae
add
gs
das
push
xor
shr
push
outs
in
ss
mov
bound
out
loopne
iret
mov
inc
sub
daa
repz
cmp
dec
in
bound
dec
cmp
call
pop
dec
aas
jo
into
mov
(bad)
hlt
mov
xchg
retf
es
pop
or
pop
adc
sbb
leave
ins
adc
mov
cmp
jno
mov
bound
arpl
jg
jg
pop
cmp
add
pop
mov
lods
aam
cmp
lods
leave
push
add
loopne
rcr
mov
dec
xor
xchg
fdiv
pop
sbb
ds
inc
daa
addr16
repz
(bad)
dec
cmovs
xchg
call
mov
test
cmp
sub
icebp
pusha
ss
ret
imul
cwde
cld
imul
add
ins
pop
jge
hlt
sub
(bad)
mov
mov
add
push
ss
out
(bad)
jne
push
jae
test
push
loope
outs
out
mov
pop
ret
push
push
out
popf
not
not
push
adc
xor
jae
pop
or
imul
fiadd
xchg
in
test
mov
jae
push
add
les
jge
stc
popf
clc
cmp
outs
adc
lods
int3
mov
push
pop
fstp
adc
inc
cmovb
fistp
jbe
retf
sbb
pop
dec
pop
(bad)
in
lods
(bad)
ja
int3
mov
clc
and
inc
cmp
mov
cdq
fistp
(bad)
and
mov
xchg
xchg
shr
jnp
pop
or
loope
inc
cmp
jno
fcomp
push
cmp
sbb
fadd
jo
sbb
xor
in
inc
or
add
dec
adc
add
repnz
pop
dec
cmp
push
add
inc
lods
jbe
push
add
mov
in
retf
mov
jl
gs
ins
(bad)
pusha
cmp
jge
aas
jbe
push
xor
ds
mov
inc
and
jo
jno
movs
jmp
popf
rol
hlt
mov
jmp
hlt
cmps
rol
fisttp
ins
push
add
or
jle
pop
push
cmovge
push
jnp
mov
test
inc
adc
daa
pop
xor
cmps
xlat
pushf
call
repnz
test
test
jge
push
cmp
cld
sahf
fild
and
mov
rcr
cmp
mov
ret
das
in
leave
lods
ins
fcom
sub
pop
adc
ficomp
std
ret
loopne
push
push
lahf
hlt
leave
int
loop
xor
cmp
loope
xchg
in
mov
mov
mov
(bad)
retf
cwde
xchg
ds
lock
add
pop
ds
jp
sub
cld
xchg
int
in
add
inc
shl
dec
cmp
int
jns
repnz
add
or
xchg
aas
mov
mov
mov
sahf
lock
retf
push
mov
sbb
jnp
add
sbb
xchg
xchg
push
cmc
or
lods
popa
mov
inc
pop
or
add
sbb
loop
pop
aas
(bad)
mov
lock
jl
les
dec
addr16
pop
mov
sub
or
ret
jo
push
pop
mov
jl
push
inc
out
mov
aaa
xchg
test
mov
push
inc
inc
fdiv
jne
sti
ja
sub
add
inc
mov
call
mov
cmc
pusha
ds
jo
cli
cmp
mov
jne
in
sbb
test
and
fcomp
and
xchg
addr16
or
jle
mov
sub
mov
jne
push
xchg
imul
pop
dec
push
mov
mov
mov
movs
xchg
cmp
(bad)
adc
mov
icebp
pushf
xor
outs
call
cmp
stos
in
mov
fiadd
mov
xor
xor
jl
dec
or
fistp
jmp
fldcw
fs
fwait
sub
push
adc
enter
mov
add
out
mov
repz
xchg
jmp
pop
mov
sub
popa
inc
pop
outs
pop
push
push
mov
test
push
jmp
cmps
hlt
sar
aas
sub
in
push
lods
fldcw
sub
mov
repnz
cwde
cmp
mov
(bad)
jecxz
call
sbb
push
ret
retf
imul
push
ror
xlat
jne
ret
mov
dec
fs
(bad)
or
push
pop
or
ins
mov
adc
mov
aad
jmp
add
jl
movs
or
lahf
and
sbb
jl
jmp
por
(bad)
inc
sub
cmps
pop
sbb
xor
sbb
cmps
pop
imul
xor
sub
(bad)
fisttp
neg
pop
ss
mov
push
ret
jmp
mov
sbb
inc
fld
jecxz
mov
add
repz
rcr
mov
out
adc
int3
mov
std
pop
cmp
(bad)
xchg
xlat
mov
mov
call
dec
push
push
leave
stc
add
sbb
(bad)
cmc
cmps
mov
loope
aas
test
jge
rcr
out
dec
mov
push
mov
in
call
jp
pop
fs
sbb
push
xlat
repnz
fsubr
lods
add
arpl
mov
jno
xor
pop
jb
pop
pop
cmps
push
jecxz
pop
dec
call
pushf
mov
mov
sbb
ret
jbe
ficomp
aaa
or
cld
(bad)
int
(bad)
mov
call
call
sbb
ret
shl
xor
mov
js
movs
cmp
(bad)
push
sar
nop
in
pushf
jmp
ffree
and
aas
jg
dec
fsubr
clc
xchg
xchg
mov
xchg
cmp
loope
fisubr
jns
sub
shl
xor
mov
daa
jne
repnz
jbe
inc
sbb
mov
retf
fnclex
enter
sbb
cld
jo
lea
mov
or
daa
dec
fs
loopne
les
cmps
sub
pop
lahf
sub
dec
push
xchg
(bad)
jecxz
fnstenv
movs
gs
jns
lds
or
sub
(bad)
lds
xchg
mov
adc
sbb
ss
mov
test
dec
push
mov
ret
(bad)
fcmovu
sbb
(bad)
je
popa
fs
sbb
cs
xchg
inc
cmc
ret
dec
in
dec
add
and
pop
ss
imul
jge
fild
frstor
adc
push
push
(bad)
cld
add
stos
pushf
push
add
gs
test
imul
dec
and
std
jnp
adc
cmp
pop
pop
int3
retf
sbb
lods
je
loop
lahf
inc
leave
jg
mov
fbld
lods
jmp
cs
into
aam
and
and
mov
pop
push
(bad)
mov
mov
(bad)
push
pop
test
fmul
vcmpsd
or
or
sbb
or
retf
ds
aaa
clc
cdq
fwait
cmp
mov
nop
pusha
jb
pop
imul
daa
adc
and
icebp
push
xchg
inc
repz
jno
enter
jp
sbb
push
cmps
mov
outs
call
fdivr
fwait
mov
add
xchg
mov
pop
(bad)
adc
mov
addr16
sbb
dec
in
xchg
arpl
or
dec
cmp
stos
ds
scas
dec
mov
push
cmp
and
inc
ins
rcr
popa
jb
sbb
lods
cmp
in
jo
pop
pop
mov
adc
rol
fwait
xchg
push
mov
sub
(bad)
or
and
(bad)
push
scas
addr16
clc
xor
jg
mov
pushf
push
addr16
in
pop
lods
int3
cmps
into
mov
xor
cmp
out
jge
cmp
aad
pop
xor
out
mov
cmp
cli
leave
ret
das
daa
adc
outs
(bad)
cwde
jns
xchg
mov
push
dec
pop
mov
call
fmul
mov
es
push
lock
hlt
push
xchg
leave
pop
les
rol
call
cmp
nop
mov
dec
inc
and
add
or
pushf
add
and
jae
push
or
rcr
inc
xor
cmp
jae
add
ja
or
out
mov
sub
mov
fisttp
xchg
inc
push
mov
imul
mov
xchg
adc
leave
jne
mov
mov
(bad)
pop
xchg
xchg
cmps
repnz
sar
adc
mov
hlt
jg
imul
mov
movs
mov
int
xchg
push
jg
mov
rol
imul
mov
pop
int
ins
fwait
cld
out
mov
add
call
mov
mov
aam
and
loope
or
cmps
enter
stos
movs
fstp
and
fmul
outs
cli
std
dec
jge
push
stos
mov
mov
mov
inc
hlt
shl
mov
loop
fidivr
jmp
mov
push
retf
sub
mov
and
(bad)
sbb
push
enter
js
aaa
jge
outs
inc
fcomp
cmps
pop
in
jne
xor
push
adc
xchg
mov
addr16
xchg
ja
jne
or
js
les
mov
(bad)
xor
ja
lds
mov
jp
into
mov
clc
mov
not
mov
mov
inc
aaa
cmps
lods
xchg
adc
cwde
jns
repz
push
sbb
gs
dec
ins
aas
sbb
or
(bad)
ins
div
sahf
cmps
jo
gs
(bad)
in
inc
cmc
jne
iret
jb
or
(bad)
stc
cmps
stos
in
jno
pop
sub
rcr
sahf
sub
jmp
dec
dec
mov
stos
dec
call
into
push
in
xor
and
push
cmp
adc
pop
or
(bad)
stc
and
cdq
jge
test
mov
sbb
xor
mov
pop
xchg
dec
(bad)
lods
repz
dec
xor
xchg
pop
sbb
push
mov
pop
sti
sbb
xor
jae
out
sti
pop
and
xchg
mov
shr
push
sub
or
jg
xchg
cmc
aam
stc
add
adc
mov
push
cmps
jne
add
retf
dec
xchg
xchg
dec
cld
aas
or
bound
and
adc
or
cmp
and
adc
sbb
test
dec
retf
stc
push
cdq
jmp
jne
mov
popf
inc
shl
jle
dec
add
out
and
(bad)
or
lea
or
inc
dec
clc
push
sub
jp
jb
adc
jle
xor
adc
xchg
movs
pop
or
test
fucom
pop
mov
and
in
aad
inc
fdivr
shr
inc
and
inc
push
push
inc
xchg
sub
mov
mov
test
pop
rol
aad
in
dec
cli
sahf
mov
fldcw
xor
or
fwait
add
mov
out
add
aam
rcr
test
cwde
push
cld
(bad)
adc
stos
or
mov
cmp
sbb
and
sub
xchg
pop
jmp
lods
push
js
pop
pop
jae
mov
xadd
sahf
sbb
jle
mov
xor
test
sub
andps
push
pop
repnz
mov
fild
and
mov
and
pop
sub
in
xchg
lods
push
pop
mov
int3
and
out
push
rcl
es
pop
inc
adc
cmp
xchg
or
arpl
push
jmp
and
push
push
sbb
mov
addr16
sub
jmp
cmps
fisttp
dec
retf
or
enter
push
pop
inc
ja
mov
scas
cmp
out
aam
xor
repz
(bad)
mov
push
ret
test
mov
mov
test
js
xor
inc
cmp
mov
add
pop
cmp
pop
inc
pop
mov
fsubr
jmp
fwait
cwde
out
in
push
cwde
and
inc
xchg
punpcklbw
retf
mov
fcomip
leave
xchg
aaa
sahf
shr
inc
(bad)
sbb
fidiv
pop
jecxz
(bad)
xor
dec
sbb
fmul
les
cmp
cld
pop
outs
dec
rcr
mov
inc
cmps
(bad)
sbb
in
out
jmp
xchg
mov
mov
push
add
push
jbe
dec
cwde
loopne
or
mov
test
jg
mov
push
in
cmp
sbb
add
cmp
call
in
adc
jg
xor
nop
jmp
aas
int
jne
je
mov
cld
cmps
repz
cdq
adc
pop
push
pop
scas
xor
dec
xchg
inc
jbe
mov
xchg
jecxz
arpl
dec
(bad)
sub
sbb
popf
pusha
enter
xchg
rol
loop
mov
xor
ds
fs
sub
aad
mov
movs
das
not
es
mov
push
fst
in
push
mov
nop
es
test
shufps
cmp
sbb
pop
cmp
fisttp
loopne
cmp
sub
push
and
aad
cmp
fcom
cmp
pop
xchg
sub
das
pop
pop
fsubr
cmp
or
push
fild
sti
jg
pop
jmp
daa
sahf
rcl
pop
mov
out
addr16
call
sar
and
fdivrp
hlt
addr16
stc
imul
aas
test
out
(bad)
add
jmp
push
push
cld
cmc
sbb
add
inc
jnp
cmc
mov
push
ins
sub
dec
imul
ss
push
push
test
add
outs
adc
cwde
pop
mov
fisub
mov
xor
sbb
pop
pop
lods
gs
cs
mov
bound
push
or
cmp
cmps
mov
and
or
xchg
xchg
pop
inc
mul
lods
dec
mov
addr16
test
out
push
outs
pop
lahf
loopne
fdivr
jmp
test
(bad)
nop
cli
push
fs
jecxz
pushf
xor
mov
fwait
sub
repnz
cmp
mov
mov
add
cmp
jmp
out
aas
push
ffree
xlat
sti
outs
jmp
sahf
rol
lahf
cmp
into
pop
dec
and
sar
add
nop
xchg
repnz
xor
into
xor
es
dec
bound
jno
cmp
cmp
dec
sbb
or
call
rcl
(bad)
das
add
inc
fidivr
in
dec
adc
out
and
push
push
pop
gs
int
or
xor
fcom
mov
hlt
outs
cmp
cld
mov
dec
hlt
sbb
mov
cmp
sbb
mov
sbb
push
fld
inc
outs
mov
push
aaa
popa
mov
xchg
pop
(bad)
repnz
mov
ret
aam
jp
aam
xor
mov
sub
sti
jns
sbb
leave
add
xchg
shr
js
or
or
repnz
and
pop
dec
popf
sti
cld
cs
hlt
fsub
dec
add
pop
add
repz
xchg
fild
inc
nop
cld
(bad)
jmp
out
pusha
xor
bound
sub
clc
(bad)
and
mov
sub
push
adc
push
popf
push
test
stc
pop
ss
jp
in
sub
enter
and
sbb
mov
fcomp
cmps
fwait
out
lds
dec
jnp
fimul
xor
add
test
aas
es
or
lods
in
jl
repz
and
adc
fisttp
aaa
ins
mov
dec
push
mov
lock
add
mov
dec
arpl
mov
(bad)
call
push
cli
hlt
clc
out
xor
repz
push
push
and
aam
nop
je
nop
mov
and
push
jns
pop
iret
pop
pushf
clc
imul
and
mov
sub
xchg
sub
pop
fsub
dec
sub
paddsb
stos
outs
adc
jo
hlt
into
sahf
pop
pop
test
cmc
stos
in
mov
sub
mov
jae
sahf
sub
fcom
jl
test
outs
nop
pusha
stos
in
std
stc
icebp
mov
inc
(bad)
mov
add
and
retf
enter
lea
lea
popa
sbb
jmp
add
mov
dec
in
les
rcl
sbb
add
call
or
mov
mov
stos
loope
mov
das
cwde
sahf
inc
js
fadd
push
xlat
mov
repnz
sbb
mov
dec
push
pop
ror
in
aam
push
das
xlat
sbb
pusha
inc
les
scas
jp
imul
add
mov
push
int3
clc
fmul
jmp
pop
mov
jns
cli
cs
mov
sub
sahf
inc
lock
sub
pop
cli
fisttp
dec
and
out
ja
dec
add
mov
mov
inc
test
pop
leave
push
sbb
and
mov
xchg
ja
push
lods
jp
push
push
mov
aad
lock
sbb
mov
ds
rcl
pop
inc
rol
loopne
cmp
and
cld
push
cmp
adc
daa
cli
in
ss
(bad)
sbb
or
mov
cmp
inc
sbb
dec
xchg
out
retf
cld
test
lds
sbb
add
xchg
fsub
inc
stos
movs
into
sbb
xor
lds
mov
xor
pop
mov
mov
arpl
addr16
mov
fistp
retf
rol
popf
loope
lahf
stc
dec
pop
mov
dec
dec
scas
adc
xchg
movs
pop
xchg
pop
jmp
call
fwait
out
inc
push
cmps
ds
(bad)
sar
mov
push
mov
loope
cmp
ror
push
fnstsw
inc
adc
mov
cmp
and
push
xchg
scas
mov
cmp
ins
fldenvw
add
shl
scas
(bad)
outs
mov
add
xchg
cmp
mov
dec
inc
dec
adc
das
or
ja
xchg
xor
inc
test
adc
mov
arpl
fxch
cmp
or
mov
pusha
add
shl
clc
pop
push
fnstenv
ja
jle
push
push
lods
(bad)
fwait
(bad)
jmp
rcr
pop
cdq
push
sbb
lock
jg
dec
or
out
(bad)
cmp
mov
dec
mov
pop
(bad)
lea
ret
je
push
loop
jbe
jecxz
mov
add
in
std
inc
retf
iret
pusha
sahf
mov
cmps
adc
push
inc
cwde
push
add
or
(bad)
mov
dec
add
or
sahf
bound
push
push
in
pop
mov
cwde
hlt
cld
cmps
jl
mov
xor
outs
push
pop
rcr
jns
scas
pushf
dec
jo
dec
sbb
in
xor
in
pop
cs
test
retf
cmp
jnp
into
movs
and
add
adc
sub
lods
inc
dec
mov
or
mov
(bad)
in
sbb
push
dec
loope
or
cdq
sub
xor
retf
shl
jl
dec
cwde
jbe
in
leave
daa
into
add
or
loopne
push
fldcw
jnp
rcr
pop
push
(bad)
cld
leave
(bad)
mov
push
and
retf
sti
or
mov
xchg
icebp
into
jno
scas
sbb
mov
ffreep
add
rol
(bad)
out
mov
mov
xor
and
sub
aam
xlat
jbe
aaa
xchg
outs
arpl
jne
jecxz
ret
sub
add
pop
push
addr16
or
xchg
test
leave
mov
(bad)
push
mov
(bad)
sub
sbb
xor
mov
or
xor
shl
jnp
xor
fld
add
add
push
add
adc
xchg
xchg
mov
and
xchg
lods
fisubr
adc
mov
jnp
mov
or
test
xor
xor
jbe
nop
and
add
(bad)
push
popa
(bad)
retf
or
call
retf
loopne
xor
and
test
mov
(bad)
jge
inc
sub
js
mov
scas
test
into
sbb
inc
out
mov
push
test
cs
call
fisubr
jmp
dec
pusha
rol
pop
inc
lods
mov
retf
ss
adc
(bad)
cmp
xchg
sub
jne
cdq
mov
jns
mov
leave
push
loop
sbb
cdq
lahf
fisttp
cmp
aad
repz
jno
lds
jg
icebp
add
jae
outs
mov
pushf
mov
out
or
sub
xlat
dec
cmp
aam
(bad)
adc
cld
(bad)
adc
scas
xchg
and
mov
mov
js
add
and
mov
or
in
int
ins
cmp
je
dec
lahf
jns
outs
inc
mov
enter
(bad)
rcl
add
retf
cli
jle
ret
fmul
cmps
shl
mov
dec
and
or
cmp
stos
pop
ror
aaa
adc
ins
xchg
cmp
enter
sar
sti
cli
add
push
movs
clts
sbb
sbb
fimul
out
cmp
pop
push
jae
test
push
mov
add
arpl
daa
jae
sub
rol
shl
mov
jmp
sbb
stos
lahf
jl
fwait
inc
les
fidivr
cdq
fwait
jo
pop
mov
sbb
jmp
pop
(bad)
xor
jg
lahf
inc
mov
cmp
xor
mov
call
jnp
jmp
in
mov
sbb
jo
dec
add
sub
xor
or
icebp
in
aaa
imul
xor
lahf
jns
aam
mov
mov
or
mov
in
outs
aas
lahf
gs
es
js
stos
mov
mov
push
push
mov
sbb
pop
or
aaa
shl
jno
stc
stc
aad
and
or
jb
inc
aas
dec
push
sbb
push
cmp
(bad)
loopne
repz
cmp
xor
jnp
mov
sbb
call
push
mov
push
xchg
cmp
xor
adc
in
lods
jbe
aad
push
xchg
mov
mov
into
jno
sar
in
inc
sub
js
pop
add
xchg
push
add
mov
(bad)
xlat
xchg
lock
pop
ins
and
push
xor
add
push
jb
pop
aaa
ja
fwait
retf
mov
mov
xchg
enter
mov
test
mov
bound
cwde
aad
jmp
out
clc
mov
cwde
cmc
xchg
mov
aaa
pop
sub
outs
push
cmova
sub
and
inc
and
jno
push
push
jbe
imul
inc
cmp
bound
jle
pusha
sub
ins
adc
push
ins
and
cmp
das
pop
adc
arpl
inc
and
xor
movs
sbb
sub
je
ins
or
inc
sub
dec
add
ins
pop
push
push
pop
push
jg
push
dec
aas
push
push
imul
and
pusha
pop
pop
inc
push
inc
sub
ss
sub
or
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
jbe
jnp
pop
cmp
jb
addr16
jns
push
dec
or
inc
or
cmp
or
jge
inc
cmp
ss
pop
or
sbb
jns
push
push
dec
pop
inc
sub
dec
pop
inc
pop
push
jb
push
xor
sub
push
or
push
cmp
or
inc
or
ss
and
jp
inc
and
dec
or
jne
xor
push
or
cmp
gs
ins
add
inc
ds
sar
enter
shl
sub
sar
mov
lods
jecxz
idiv
sbb
push
jle
dec
es
jno
pop
pop
sub
push
adc
popf
shl
dec
add
jmp
aad
repnz
xchg
enter
jmp
fimul
lods
leave
cmps
clc
test
fcmovu
mov
xchg
dec
adc
adc
pop
cmp
inc
add
sbb
stc
stos
retf
or
loop
in
mov
mov
loopne
jecxz
sar
enter
lods
lock
stc
cmps
rcl
push
xor
js
bound
inc
es
cmp
dec
sbb
sahf
stc
mov
xchg
int
push
jp
dec
and
ja
or
dec
push
jge
jo
and
arpl
pusha
add
add
xor
cmp
sub
or
ja
pushf
imul
not
sub
dec
cmp
jae
jae
inc
or
jle
push
pusha
(bad)
push
ins
cmp
add
jg
push
adc
pcmpgtd
inc
and
ins
sbb
push
xor
imul
cmp
jge
pusha
ds
pop
adc
xor
cdq
lock
out
les
aaa
sub
outs
pop
xor
adc
lock
hlt
lods
sti
mov
mov
movs
lock
rol
fwait
hlt
xchg
cli
test
mov
in
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
popf
lock
xchg
enter
sbb
mov
hlt
(bad)
push
jle
push
push
jns
push
or
outs
xor
pushf
stc
mov
sar
jecxz
repnz
rep
retf
mov
xchg
xchg
mov
int3
test
jb
jle
inc
cs
xor
sbb
cmp
jbe
dec
sbb
dec
sub
inc
cmp
and
inc
sub
jnp
imul
adc
pop
pop
ds
push
pop
jbe
data16
jnp
pop
and
bound
inc
sbb
dec
cmp
inc
cmp
cmp
pusha
or
push
cmp
imul
sub
dec
sub
popa
cmp
in
and
retf
fnsave
mov
stos
in
sar
and
pop
cmp
push
or
cwde
repnz
mov
fimul
(bad)
mov
aam
enter
leave
mov
loope
mov
call
shl
clc
xchg
adc
jne
je
inc
pop
dec
add
pop
or
push
push
outs
add
xchg
dec
xlat
xchg
sbb
arpl
pusha
add
push
jo
push
jnp
arpl
pop
cmp
push
sub
jge
dec
pop
pop
aas
ins
sbb
gs
sub
call
(bad)
mov
mov
iret
xchg
fidivr
out
mov
loopne
repz
out
stc
ficom
jecxz
test
inc
sub
aaa
jl
inc
xor
jno
dec
movq
jp
dec
ds
and
jle
dec
sub
pop
cmp
inc
or
ins
xor
es
push
jnp
pop
adc
outs
add
addr16
and
push
or
arpl
push
cmp
arpl
js
inc
add
or
pop
push
xor
adc
xor
call
xchg
fsubr
das
inc
sub
jnp
push
xor
inc
adc
lahf
int
int
call
xchg
cli
call
fidiv
nop
std
mov
xchg
repz
fst
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
pusha
push
inc
and
xor
xchg
hlt
or
icebp
loop
clc
push
mov
mov
loopne
int
out
xchg
dec
aad
int3
pop
mov
retf
js
dec
pushf
inc
jo
lods
inc
mov
test
stc
jecxz
add
or
sbb
daa
scas
and
fxtract
and
stc
and
push
jae
push
fbstp
in
aas
mov
test
jns
push
arpl
in
(bad)
cmp
inc
xchg
xor
or
or
mov
and
inc
mov
sbb
mov
xor
dec
popa
mov
sub
fdivr
iret
call
shufps
pop
sti
sub
(bad)
sti
mov
xchg
sahf
and
inc
xchg
jg
test
ins
mov
mov
xor
rcr
in
adc
in
in
sub
or
hlt
repz
adc
jmp
cmc
or
jmp
adc
in
xlat
adc
clc
push
cmp
pop
mov
dec
mov
adc
enter
xchg
add
pop
mov
sbb
retf
cmp
pop
imul
(bad)
aas
fisttp
sbb
loopne
cli
cmp
scas
pop
cld
cmp
inc
mov
jmp
mov
add
and
punpckldq
cmp
or
dec
xchg
daa
lods
inc
mov
jns
xor
add
cmp
add
or
les
lock
enter
aam
or
adc
sub
or
dec
movs
xor
pop
popf
mov
addr16
in
pop
jno
push
outs
aam
mov
xor
push
(bad)
js
pop
test
bound
mov
and
lahf
dec
call
or
ret
pop
xchg
pop
nop
jge
movs
push
cdq
ins
xchg
dec
mov
outs
xchg
or
sub
in
bswap
enter
(bad)
(bad)
leave
and
sar
jecxz
lock
clc
mov
fisttp
pause
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
aaa
pop
ss
push
add
sbb
pop
or
mov
ds
int
mov
stos
mov
stos
mov
or
out
sbb
es
cmp
adc
(bad)
xor
sbb
or
outs
movs
je
ret
ss
fistp
sub
cli
cmp
movs
mov
lds
popa
lock
mov
outs
mov
jns
mov
ficomp
mov
jne
add
pop
enter
scas
jnp
push
aam
xchg
pop
fisub
dec
ret
outs
movs
jl
std
or
jmp
call
iret
dec
cld
push
popf
cmp
int3
xor
jecxz
push
xchg
out
repnz
call
pusha
cmps
mov
stc
mov
sbb
xchg
dec
test
inc
into
mov
jbe
add
(bad)
inc
shl
sub
mov
dec
int3
cmp
mov
or
push
jg
and
cmp
into
dec
adc
xor
sub
inc
xor
mov
inc
ror
or
or
push
mov
jne
cmps
xchg
fwait
test
sbb
daa
inc
retf
mov
adc
std
mov
sbb
inc
lods
lahf
ret
pop
mov
cmp
mov
popa
in
jno
mov
mov
jecxz
adc
inc
in
sub
(bad)
call
sbb
dec
adc
pushf
mov
aam
popf
test
dec
loop
xor
rol
repz
jecxz
pop
sbb
imul
xor
shl
ja
in
sbb
ja
add
or
cmp
call
adc
ins
stc
ds
into
loopne
(bad)
adc
and
ins
sbb
arpl
sti
jae
xor
pop
mov
mov
jmp
imul
gs
imul
pop
jmp
sub
pop
mov
popf
ins
out
xchg
push
inc
movs
jle
sahf
icebp
sub
mov
mov
(bad)
cwde
into
lahf
iret
mov
push
xor
imul
dec
cs
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jno
push
sbb
pop
pop
cs
pop
xor
dec
push
ss
(bad)
sub
ret
push
mov
push
xchg
pop
rol
shl
adc
xor
frstor
or
push
sbb
cmp
fidiv
stc
add
cmp
adc
fldcw
cmp
adc
into
or
in
cld
add
int
loopne
mov
aam
icebp
outs
movs
jo
adc
dec
scas
push
cmc
xor
push
cwde
ja
and
pop
mov
retf
and
inc
aad
lea
aas
in
dec
mov
aam
add
es
ds
push
sub
adc
leave
push
adc
adc
fimul
int3
push
clc
adc
push
mov
iret
repnz
fiadd
lds
or
addr16
psrad
push
inc
shr
pop
aam
push
xlat
ss
sbb
movs
lahf
bound
in
add
add
(bad)
xor
jmp
pop
mov
or
js
stos
call
jl
add
mov
mov
movs
imul
cmc
xor
xchg
outs
adc
stc
imul
mov
and
bound
ret
cmp
dec
jl
pusha
out
mov
and
xchg
fwait
push
sbb
and
mov
frstor
aam
pusha
mov
jle
retf
jnp
clc
or
push
es
sbb
aas
(bad)
pop
xlat
push
xor
mov
and
enter
sbb
fild
push
out
sbb
sub
out
in
dec
sbb
pop
lock
inc
call
pop
into
ret
mov
mov
mov
dec
loopne
xchg
pushf
mov
cmp
and
pop
les
add
shr
out
addr16
push
cmp
add
cmp
add
mov
xchg
cwde
mov
or
mov
mov
call
je
clc
and
fcom
sti
dec
fcomi
push
out
bnd
stc
inc
loopne
pop
sti
cli
pop
icebp
pop
sub
push
ror
sbb
ins
ss
imul
or
data16
pop
cmp
inc
or
ins
add
pop
add
inc
xor
xor
dec
sub
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
out
xchg
fcomp
not
call
pop
cmc
pop
in
mov
push
push
shr
call
cli
and
(bad)
aaa
bswap
cmp
int3
and
stc
adc
shr
mov
sbb
pop
lds
hlt
jnp
lahf
mov
movs
ficom
jmp
xor
popf
imul
push
loop
jl
mov
mov
mov
imul
fcom
data16
cmp
push
jmp
xchg
shr
or
cmp
cli
cmp
cmc
sub
adc
ret
test
sbb
jne
push
enter
lea
adc
jbe
arpl
cmp
inc
cdq
inc
shl
in
shl
lock
in
xor
dec
xor
cmp
pop
add
push
stos
outs
loopne
sub
aam
addr16
jmp
ret
aam
ins
mov
jno
ret
cmp
call
inc
mov
inc
fiadd
fldenv
xchg
int
icebp
cmps
jne
popf
pusha
mov
pop
test
dec
mov
and
test
lea
cwde
ins
mov
add
bound
and
push
ins
mov
sub
cmp
xchg
sub
pop
inc
lds
inc
into
cmp
les
test
outs
movs
shl
push
sti
push
out
jmp
pusha
and
fs
hlt
inc
stos
mov
mov
(bad)
push
cmc
out
sbb
cdq
scas
dec
std
dec
outs
retf
lds
out
mov
aas
sub
movs
cmps
mov
jnp
test
int
popa
rcr
or
retf
dec
jl
inc
outs
retf
gs
xor
out
push
into
or
adc
and
dec
imul
(bad)
enter
dec
xchg
cmp
or
pop
jbe
inc
xor
enter
push
mov
fsubr
pop
leave
loope
ret
sub
loope
retf
mov
(bad)
icebp
xchg
(bad)
mov
out
mov
les
jmp
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
pusha
cmp
ds
adc
arpl
pop
sub
cdq
sbb
pop
fwait
push
xor
push
dec
aad
lock
fistp
psraw
ds
jecxz
sub
add
jno
sub
ja
dec
clc
sbb
xor
push
mov
mov
fnstsw
adc
int
pop
nop
outs
jecxz
in
jnp
imul
push
hlt
xor
dec
lea
jmp
inc
icebp
adc
jge
dec
out
jmp
cmps
jge
unpcklps
shl
sub
add
mov
jg
lahf
mov
mov
ins
(bad)
cmps
inc
mov
arpl
adc
inc
lahf
inc
adc
cmp
cmp
dec
(bad)
scas
cmp
jge
or
mov
das
enter
rol
sbb
push
fistp
ret
test
ss
mov
inc
mov
or
cdq
sti
aaa
hlt
pushf
xchg
jno
(bad)
pop
pop
lock
imul
mov
dec
and
loopne
xchg
ja
stc
or
sbb
mov
imul
hlt
mov
sti
(bad)
jp
sbb
test
xchg
add
pushf
inc
call
into
and
xor
pop
fdiv
mov
push
mov
mov
sbb
popf
jp
hlt
daa
stc
xchg
movs
dec
mov
bound
mov
lahf
mov
sub
(bad)
pop
repz
(bad)
fsub
mov
push
clc
ins
jo
outs
(bad)
sahf
xchg
jg
clc
dec
jae
dec
jbe
pusha
jbe
fs
jge
ret
in
inc
push
dec
inc
leave
pushf
dec
out
arpl
pop
popa
inc
nop
mov
push
das
aam
in
imul
inc
repnz
jns
call
pop
cmps
xchg
fist
xchg
xchg
daa
das
adc
mov
test
cmp
xor
mov
add
add
or
movs
ror
jo
shl
or
aas
lods
aam
lahf
jg
sbb
js
ins
cmp
jl
pusha
xor
push
and
daa
inc
sub
adc
or
arpl
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
add
xchg
push
add
jl
push
fld
or
aaa
ss
add
xor
inc
sti
and
cmc
dec
xchg
test
adc
and
sbb
pop
mov
xchg
test
fsubr
adc
ds
dec
mov
clc
push
jmp
and
in
pop
mov
push
cmps
jno
jg
pop
out
shr
stos
jecxz
lods
inc
test
jl
ins
xlat
and
adc
sbb
jl
pop
test
xchg
sub
pop
int
adc
sub
sub
sub
loop
or
sbb
pop
lods
call
clc
push
out
cmps
xchg
inc
retf
aaa
in
lock
xor
inc
lods
ins
ror
fnsave
leave
pop
fldcw
or
dec
ficom
imul
sahf
cmc
inc
fidivr
imul
ret
cmp
dec
lods
xchg
popf
dec
movs
jo
nop
xchg
popf
in
pop
ficomp
dec
mov
(bad)
aaa
icebp
pop
movs
jae
dec
mov
sub
add
mov
ja
jo
mov
cmp
jmp
cmp
cmp
add
in
(bad)
outs
shl
leave
push
cmps
test
ins
lods
sub
push
jg
test
aaa
jmp
imul
nop
inc
fidivr
jecxz
sbb
lahf
(bad)
iret
push
leave
outs
mov
arpl
cmp
fidivr
iret
sub
and
shl
enter
arpl
jl
addr16
out
imul
test
stos
jge
xchg
stos
mov
jb
jne
nop
jnp
daa
call
or
and
cmp
push
xor
daa
xor
daa
not
cli
cmp
out
ja
cmp
dec
mov
movs
push
xchg
mov
sub
or
lods
sahf
dec
xchg
jo
call
and
or
pop
ret
xor
in
fadd
xchg
push
fld
por
test
pop
xchg
pop
or
xor
imul
jae
dec
xlat
and
pop
ret
sbb
and
inc
dec
mov
cwde
bound
repnz
cli
pop
movs
pushf
inc
mov
jg
leave
and
ret
dec
shl
les
mov
aas
pinsrw
add
mul
sti
mov
jns
push
hlt
add
pop
mov
or
pop
lods
xchg
push
mov
mov
xlat
dec
stos
addr16
ins
int3
pop
sti
pop
test
hlt
sub
cmp
cmp
out
aad
hlt
add
jmp
inc
out
jge
inc
mov
xchg
sahf
data16
adc
or
out
push
cmps
jnp
mov
dec
mov
jge
and
jl
mov
sahf
(bad)
and
or
int3
add
aaa
pop
(bad)
adc
popf
dec
iret
push
mov
pop
fnstsw
(bad)
sub
sub
pop
out
inc
fisttp
cmovbe
cmp
push
rcl
mov
xchg
pushf
fstp
popf
imul
rcr
cdq
popa
lds
jbe
xchg
clc
pop
mov
stc
adc
aas
jmp
fldcw
adc
pop
sbb
cmp
add
test
dec
lods
ins
mov
dec
movs
jno
inc
mov
adc
sbb
and
outs
add
repz
xor
clc
push
mov
mov
mov
daa
or
jmp
jg
xchg
jne
imul
dec
nop
mov
jbe
ins
xchg
jno
push
(bad)
ret
inc
into
push
fisub
xchg
aad
xlat
sub
sub
push
xlat
push
stos
arpl
daa
sub
and
pop
cld
add
inc
iret
das
in
ins
adc
adc
call
cld
or
push
mov
outs
mov
lods
xchg
jnp
inc
rol
pop
(bad)
push
(bad)
and
cmp
adc
out
xchg
inc
cmp
jae
je
jg
or
jb
ja
and
and
push
or
(bad)
js
xor
int3
push
xlat
pop
pop
inc
add
dec
xlat
pop
xor
pop
ficom
cld
addr16
add
std
pop
fst
nop
sbb
adc
or
push
shl
les
cli
and
cwde
cdq
xchg
ins
lds
imul
adc
adc
jecxz
jbe
inc
fild
imul
mov
jp
xor
sub
add
and
popf
mov
xchg
mov
mov
data16
and
retf
jne
push
mov
lock
outs
mov
pop
mov
inc
(bad)
push
ficom
push
jne
jns
sbb
repz
ror
psllq
add
sbb
sbb
sbb
les
cmp
cmp
sub
pop
lds
out
dec
fisttp
xchg
mov
movs
cdq
xchg
lahf
cdq
popa
or
add
adc
pop
scas
dec
mul
or
or
sbb
inc
retf
ja
xor
push
or
jmp
das
clc
or
cmp
dec
loopne
call
xchg
or
ret
push
test
jnp
imul
inc
lods
ins
shr
add
fild
add
or
jecxz
pop
pop
out
pop
cmps
jns
inc
fisttp
pop
mov
fidivr
out
cs
idiv
cld
pop
mov
and
cli
push
call
ins
stos
test
mov
jle
data16
sub
dec
mov
jge
or
or
pop
retf
scas
mov
inc
mov
imul
stc
das
cli
and
push
ror
pushf
push
les
add
cwde
pusha
mov
and
inc
mov
test
mov
lods
pushf
lahf
cwde
jg
outs
hlt
sub
sbb
add
(bad)
pop
dec
cld
ss
fiadd
mov
inc
mov
fld
add
clc
push
mov
adc
add
aas
jl
addr16
cdq
jo
xchg
cdq
sti
daa
adc
dec
icebp
cmp
add
jbe
jle
pop
fld
push
iret
pop
mov
addr16
and
cs
mov
scas
inc
(bad)
dec
fstp
push
sbb
out
xor
sub
push
mov
lds
in
sbb
iret
pop
lds
jl
xchg
imul
pop
cmp
inc
mov
adc
test
jo
gs
cdq
pusha
les
mov
lods
push
push
std
adc
loopne
add
sbb
add
out
cli
pop
mov
aad
in
mov
loopne
push
lock
xor
ret
push
mov
test
jecxz
xchg
movs
jbe
sbb
mov
jno
cmps
inc
fistp
fwait
lahf
inc
xchg
loope
pop
repnz
and
shr
xor
xor
dec
int3
dec
mov
icebp
inc
into
ss
cmp
adc
dec
jmp
neg
inc
fistp
je
inc
std
sub
sub
clc
dec
mov
jo
jns
jle
xchg
mov
js
arpl
adc
add
(bad)
cmp
aaa
adc
or
or
out
mov
dec
sub
add
dec
in
out
xor
aaa
jne
sub
es
pop
mov
and
jbe
imul
arpl
sbb
dec
shr
adc
enter
pop
and
cli
and
sti
or
in
add
cmp
or
hlt
dec
mov
sbb
sbb
in
inc
aad
out
add
push
fcomp
inc
mov
inc
leave
jle
inc
fst
fs
push
ret
mov
mov
mov
xchg
mov
push
or
adc
pop
in
jp
xchg
mov
mov
sub
je
jne
and
sbb
cmp
pop
lods
jo
inc
xlat
sub
pop
mov
xchg
fwait
dec
xchg
pop
(bad)
or
sbb
cmp
dec
rcr
xor
add
loopne
in
aaa
std
cs
pop
add
push
mov
sbb
int3
cs
mov
add
out
and
pop
mov
das
loope
mov
add
adc
es
fld
sti
cmp
dec
out
out
ret
test
fnsave
in
mov
xor
or
sub
cld
adc
jecxz
ret
into
push
mov
add
push
(bad)
pop
mov
or
out
ins
mov
stos
xchg
popa
mov
mov
mov
or
cmp
sub
xchg
popf
sahf
jae
sahf
sub
mov
mov
jp
inc
movs
imul
arpl
xor
or
sbb
shr
cmp
xor
and
cmc
and
pop
cmp
in
std
xor
xor
sub
add
inc
mov
popa
or
sbb
fstp
inc
fldenv
in
pop
leave
sub
push
sar
pop
ficomp
push
mov
mov
into
lods
imul
xlat
cmp
cld
pop
mov
mov
movs
pusha
cmps
mov
mov
inc
mov
lds
cmc
cs
(bad)
pop
stos
cwde
inc
retf
sub
(bad)
pop
cmps
jbe
and
inc
(bad)
and
jnp
push
add
cmp
aaa
or
xor
xor
aaa
sti
push
xor
pop
fldenv
mov
movs
jbe
add
cmp
sub
stos
jno
sbb
xor
jge
xor
pop
mov
sub
and
jnp
push
aam
div
outs
mov
xchg
inc
mov
xchg
jg
sahf
ins
enter
dec
cmc
or
in
mov
repnz
sub
and
jecxz
jmp
rol
adc
pop
sbb
imul
shr
push
test
jle
ss
iret
cmp
ss
icebp
add
jo
dec
mov
mov
cwde
inc
mov
xchg
lea
aaa
std
mov
jbe
nop
jge
jno
js
retf
push
lods
cwde
fwait
jg
xchg
inc
xlat
and
push
fdiv
push
add
ss
add
das
or
imul
jl
pop
clc
push
imul
hlt
and
pushf
xchg
lea
ss
aad
loopne
sbb
or
cmp
inc
test
mov
mov
imul
xor
xchg
inc
mov
xchg
push
jns
add
push
fdiv
int3
cs
push
hlt
add
push
mov
sub
pop
jmp
int
clc
pcmpeqw
ret
pop
cmps
fs
fdiv
aad
stos
je
(bad)
pop
cmp
movs
pusha
clc
or
pop
push
lods
inc
scas
inc
fcomp
pop
xor
inc
mov
(bad)
mov
addr16
sar
ror
ret
push
leave
dec
jmp
out
fld
les
adc
adc
push
scas
test
jmp
data16
sbb
sbb
inc
mov
fisttp
outs
sar
sbb
sar
pop
mov
xchg
cwde
push
shr
enter
fisubr
adc
mov
retf
xor
cmp
aad
repz
pop
(bad)
push
aam
sbb
sub
push
fdivr
lea
adc
es
inc
out
add
ret
mov
mov
shr
leave
and
inc
mov
jns
mov
cmp
aaa
inc
adc
shl
mov
cmc
inc
mov
cmps
inc
mul
in
rcr
in
out
cmps
jg
jge
mov
(bad)
lds
mov
fst
out
es
(bad)
in
jle
aas
lock
mov
(bad)
call
or
rol
mov
xor
sub
xor
je
jno
jo
add
retf
es
stos
jo
nop
xchg
sar
sar
adc
pop
mov
sub
pop
xchg
retf
dec
fist
mov
(bad)
iret
cmp
push
mov
(bad)
pop
rol
jg
push
mov
ret
push
mov
inc
shl
pop
repz
lahf
jnp
inc
out
add
ja
cs
xor
(bad)
enter
push
rcl
stos
jp
inc
mov
adc
mov
imul
sbb
push
stos
ins
retf
cs
pop
stos
lea
mov
mov
outs
aad
loop
fdivr
ja
push
fmul
hlt
pop
mov
ficom
arpl
adc
pop
or
or
xor
jge
jo
push
mov
dec
mov
mov
ds
pop
sbb
xor
inc
cmps
out
dec
mov
js
xchg
dec
ficom
ins
movs
jno
mov
adc
sbb
pop
shr
add
push
mov
sbb
push
(bad)
jno
retf
inc
aad
test
mov
and
pop
cmc
sub
add
pop
pop
addr16
pop
fmul
es
push
sar
in
push
clc
sub
cmp
nop
push
(bad)
and
sub
iret
push
mov
iret
add
ret
aaa
lock
jmp
mov
jl
ins
test
inc
test
xchg
sahf
mov
dec
movs
jb
dec
cmps
js
inc
mov
aaa
rol
pop
mul
sub
and
aaa
push
icebp
xor
and
enter
ins
adc
mov
mov
mov
outs
fstp
mov
mov
add
in
pminsw
cld
and
xor
cmp
inc
mov
xor
adc
out
pop
mov
loop
rcl
shl
add
and
pop
add
push
adc
add
sub
xor
jg
add
jb
dec
mov
arpl
cmp
cmps
outs
mov
jge
lea
dec
or
loopne
in
inc
xchg
clc
pop
cmps
xchg
scas
pusha
mov
and
push
mov
adc
dec
cmps
div
hlt
daa
stc
dec
rcl
int3
xor
fimul
inc
and
jge
push
ret
pop
cld
sub
leave
sub
jge
push
fcom
test
push
mov
xchg
jae
call
test
cwde
jbe
xchg
js
push
push
rcl
addr16
hlt
xchg
lods
push
mov
or
hlt
and
push
int3
cmp
int
leave
add
mov
jns
fs
pop
mov
fcom
daa
loop
or
or
push
push
sbb
(bad)
pop
jmp
mov
add
shr
or
push
fdiv
imul
jo
gs
ret
cmp
rol
push
dec
mov
outs
cmps
jp
fwait
pusha
sub
push
lock
adc
push
or
std
sub
add
sbb
cmp
jmp
enter
jle
dec
test
lea
pop
movs
pusha
rcl
add
cmp
cmp
test
outs
mov
push
fst
cmc
pop
test
mov
arpl
pop
out
xor
aas
into
push
aam
jge
ja
jb
or
cmp
adc
and
add
dec
fbld
mov
sub
mov
popf
mov
dec
fistp
sub
sbb
jns
push
aam
out
or
lock
add
xor
adc
push
sbb
adc
call
add
clc
push
sbb
shl
add
repz
add
lock
pop
mov
mov
(bad)
ins
mov
and
aaa
in
add
psubq
xchg
(bad)
cmp
add
cs
inc
(bad)
ds
push
std
cmp
adc
xor
add
int
fimul
and
push
stos
mov
cmp
pop
xchg
pop
mov
popf
lahf
xlat
dec
movs
jle
jns
jae
das
jl
cmp
pop
sti
mov
movs
jnp
arpl
mov
jbe
jnp
cmp
cli
pop
cs
ds
cmp
and
pop
iret
sub
add
push
das
adc
or
out
aam
push
leave
call
dec
mov
mov
scas
lahf
arpl
ret
pop
fstp
dec
mov
push
fisttp
repnz
out
les
dec
mov
xchg
dec
mov
fnstsw
clc
pop
mov
cmps
je
xchg
sub
xchg
sub
push
fcom
pop
int3
push
dec
xchg
push
callw
or
std
add
add
and
push
stc
not
sbb
push
mov
imul
jns
mov
push
(bad)
push
stos
jne
fwait
inc
shl
int3
or
push
in
add
xor
inc
jmp
and
add
ret
(bad)
ds
aaa
add
sub
push
retf
push
or
pop
test
jle
or
sbb
jo
and
jmp
ja
and
xor
push
fcom
pop
adc
cmp
add
push
(bad)
mov
mov
jno
jae
cs
cs
out
movs
jae
and
pop
push
enter
dec
fld
adc
pop
stos
gs
jecxz
in
jge
or
adc
(bad)
dec
sar
lea
mov
(bad)
pop
mov
int
movs
xchg
push
and
push
xor
push
(bad)
cmp
or
out
push
fsub
jecxz
lods
popf
popf
jnp
jg
sbb
add
push
adc
or
dec
leave
inc
mov
stc
outs
mov
outs
xchg
pusha
mov
(bad)
fdivr
inc
int
cld
dec
mov
fisttp
pop
mov
mov
and
pop
fsubr
pop
push
inc
fistp
sbb
or
ja
inc
mov
dec
(bad)
dec
mov
es
scas
mov
push
xchg
popf
cdq
xchg
jo
ret
and
xor
xor
push
adc
sub
sbb
pusha
mov
dec
xchg
xchg
and
and
out
mov
jne
pusha
lods
je
xchg
fs
mov
or
and
data16
push
test
push
sub
into
push
mov
lahf
inc
test
rcr
fidivr
inc
aam
retf
xor
push
adc
dec
xchg
cmp
es
adc
enter
and
ret
fiadd
sbb
jae
push
cmp
xor
stc
adc
add
or
mov
xchg
fadd
(bad)
and
push
mov
xlat
aaa
shr
pop
mov
xlat
xor
xor
push
cmp
xchg
inc
enter
jg
jae
push
sbb
sbb
dec
mov
push
out
pop
movs
push
(bad)
jmp
retf
(bad)
xor
push
int
hlt
ud0
dec
xor
lods
cdq
sar
xor
push
push
lock
ss
cmp
push
or
pop
mov
mov
mov
push
pop
jecxz
clc
pop
mov
jp
les
cld
dec
lods
dec
mov
inc
aad
jmp
mov
gs
add
or
sbb
nop
addr16
add
add
inc
ret
push
stos
jge
add
lock
mov
jno
imul
pop
shl
push
mov
pop
mov
(bad)
and
sub
inc
mov
imul
xchg
nop
(bad)
adc
jmp
aaa
rcr
and
fcomp
add
out
outs
aad
xchg
nop
mov
cmp
and
xchg
js
das
loopne
or
push
aam
loope
or
(bad)
cmp
sbb
dec
sub
cld
xor
jmp
pop
mov
ins
mov
in
es
int3
xor
sbb
dec
stos
ins
ficom
jb
xchg
les
and
xor
push
mov
cmps
xchg
je
push
lods
xchg
lock
das
add
jecxz
(bad)
pop
retf
push
mov
xchg
addr16
or
dec
xchg
jle
pop
stos
nop
popf
in
aam
push
pop
lds
mov
test
add
es
cmp
ins
mov
outs
and
mov
mov
test
mov
add
sbb
jmp
cmp
imul
dec
jmp
xor
sbb
mov
lods
dec
aad
enter
xchg
push
mov
test
lds
push
fstp
cmp
cmp
and
cmp
lods
jne
inc
fcomp
addr16
xchg
data16
or
(bad)
and
jmp
icebp
sub
sbb
xchg
cwde
inc
mov
pop
fld
or
aas
repz
pop
mov
mov
jnp
push
mov
mov
xor
mov
(bad)
imul
out
fst
add
sbb
inc
mov
aam
xor
in
adc
pop
test
out
push
(bad)
and
sub
xchg
mov
or
loope
pop
stos
jns
push
out
fisubr
daa
test
out
cmps
xchg
lods
jno
mov
add
cmp
cmc
es
call
imul
push
stos
jl
inc
mov
retf
sub
test
jne
mov
mov
xchg
jbe
jb
or
out
rcl
adc
sbb
add
push
mov
inc
shr
pop
loope
(bad)
add
adc
repnz
hlt
or
outs
cmc
pop
test
push
lds
in
ss
jle
push
mov
pusha
sar
and
mov
fmul
adc
es
jns
jns
ins
int
cmc
push
stos
jae
xor
xor
sub
push
add
cmps
pop
(bad)
(bad)
jnp
mov
sub
pop
in
iret
(bad)
lods
mov
and
je
pop
adc
jmp
pop
in
or
push
test
shl
sti
mov
fwait
sbb
jnp
cmc
cli
mov
push
jl
hlt
jbe
aam
dec
cmp
pop
rol
inc
push
mov
stc
icebp
rcr
mov
sbb
jb
inc
inc
add
sbb
rcr
imul
(bad)
mov
jp
loope
sti
stos
mov
add
push
sbb
outs
cmp
test
rcr
xchg
and
push
in
xor
fstp
or
push
(bad)
xchg
shl
dec
or
loopne
arpl
push
mov
cmc
fist
maxps
add
adc
jb
xor
xchg
xchg
dec
ins
pop
into
into
add
sub
and
ds
stc
stos
test
add
aam
in
push
sub
fs
stos
es
ret
jp
pushf
in
and
call
and
sbb
call
ins
sbb
mov
cwde
cmp
add
in
jno
pop
addr16
lods
lods
add
cld
mov
clc
add
inc
ret
sar
cmp
rcl
and
lods
in
icebp
enter
cld
inc
arpl
mov
iret
sar
out
xchg
jb
outs
mul
pop
or
adc
movs
push
pushf
jne
lock
sub
adc
call
dec
arpl
out
(bad)
fnstenv
arpl
loop
push
(bad)
cmp
xchg
sti
push
fdiv
test
sub
dec
cmp
stc
in
(bad)
in
mov
retf
bound
push
cmp
inc
inc
mov
push
jl
fcom
int3
ffree
push
imul
arpl
pop
in
mov
inc
add
clc
fisub
in
mov
xchg
mov
push
push
ret
test
mov
fcom
pop
dec
test
pop
add
loopne
jbe
push
das
add
inc
daa
sbb
stc
stos
mov
inc
shl
leave
or
popa
in
in
sub
aad
mov
data16
popf
in
(bad)
push
cmp
call
out
dec
adc
jecxz
add
add
push
mov
mov
int3
out
mov
fimul
pop
add
movs
cwde
mov
repz
add
leave
mov
aaa
dec
jo
sbb
aam
test
pop
mov
mov
push
jp
aaa
jmp
rcr
cmp
and
aam
cmp
sbb
dec
mov
retf
inc
mov
mov
cwde
test
dec
add
mov
loop
out
and
push
jp
(bad)
outs
jbe
push
(bad)
aam
imul
stc
xchg
mov
push
fimul
aad
or
xchg
push
jo
cdq
rcr
sub
clc
and
jns
pop
push
sbb
(bad)
jns
rcr
addr16
lods
loope
rcr
dec
cli
adc
xor
push
push
mov
in
add
mov
add
push
sub
sbb
mov
clc
mov
ror
cmp
cmp
popa
jae
cmp
icebp
mov
and
push
push
out
seto
pop
cmp
pushf
lods
cli
xchg
jmp
aaa
cmp
popa
scas
dec
adc
jmp
cmps
sahf
(bad)
pop
mov
add
fisttp
loop
loop
dec
rcr
repnz
xchg
push
scas
repz
icebp
mov
cmp
fist
in
retf
jo
cmps
jmp
ins
or
fstp
jae
mov
(bad)
dec
adc
ss
cmp
stos
jb
sub
call
mov
inc
inc
fwait
pop
sub
fbld
out
mov
push
mov
sbb
cmp
imul
sub
mov
icebp
mov
xchg
(bad)
cmp
nop
neg
lar
popa
mov
xchg
mov
sbb
sti
aaa
and
jne
cmc
pop
sbb
mov
push
adc
sbb
inc
les
out
xchg
shr
pop
xor
mov
adc
jmp
or
loop
push
popa
push
sub
jg
fwait
adc
js
loop
inc
jecxz
mov
ficomp
neg
pop
movs
push
cmp
lods
pop
add
retf
pop
xchg
aam
shl
push
jns
add
loopne
jbe
(bad)
push
inc
mov
fnstsw
daa
int3
mov
ss
jg
adc
call
ror
addr16
cmc
movs
out
jl
jg
xor
pop
fisub
xchg
add
xchg
pop
lea
jae
push
xchg
dec
xchg
jbe
out
sub
daa
ds
imul
outs
adc
scas
test
sub
cld
fst
adc
pop
and
inc
sbb
inc
or
push
or
lods
outs
cdq
mov
daa
xchg
add
add
retf
pop
and
and
fidivr
shl
adc
lods
sbb
call
fistp
pop
push
mov
mov
(bad)
jmp
mov
stos
loopne
xor
jne
sbb
pop
cmp
imul
(bad)
call
loop
push
cld
sub
ds
not
jg
repz
into
xchg
push
mov
outs
js
cld
rcl
pop
sub
in
out
repz
pop
jae
bound
xor
sub
xor
mov
mov
push
push
sub
loope
xor
sub
mov
les
loop
mov
or
jb
scas
cld
scas
movs
and
(bad)
out
test
cli
jo
addr16
in
xchg
push
mov
and
add
stc
mov
sub
mov
das
xor
shl
vzeroupper
test
cmp
jg
pusha
aam
inc
push
outs
enter
sahf
and
mov
out
fisub
fwait
(bad)
inc
icebp
sub
shr
call
pop
adc
pop
inc
mov
loop
push
pop
cs
mov
sar
mulps
and
mov
xchg
cmc
lods
cdq
dec
fs
mov
jge
and
out
call
ins
push
pushf
jecxz
mov
mov
sub
pop
jnp
xchg
or
pop
or
rcl
inc
sub
dec
sub
pop
ja
stc
jl
and
mov
fs
cdq
cld
repz
dec
clc
inc
jo
scas
retf
enter
lods
je
cmp
retf
mov
jl
dec
pop
mov
jge
mov
adc
push
jae
and
ins
ja
jmp
into
imul
icebp
fmulp
sahf
outs
push
cmp
mov
jne
aaa
imul
test
cs
pop
out
stos
in
cmp
pop
jns
dec
ret
cwde
push
rcl
retf
cmp
sub
adc
lock
imul
ficom
in
inc
test
push
mov
mov
mov
sub
gs
popf
mov
inc
xchg
ret
dec
pop
les
shl
jmp
dec
jmp
stc
pop
and
clc
(bad)
push
outs
jo
cdq
(bad)
mov
push
pop
adc
jns
mov
arpl
mov
hlt
mov
push
dec
push
mov
and
sub
lods
stos
sub
mov
test
mov
adc
and
cmps
adc
adc
jmp
int
jae
sub
jg
sar
ror
pop
or
fld
dec
jg
fdiv
mov
inc
sub
cmps
sti
fcmove
mov
cli
outs
sub
and
imul
adc
retf
push
mov
jb
lea
jae
pop
pop
(bad)
or
cmp
sahf
in
mov
adc
loop
push
pop
dec
or
outs
add
jp
xchg
bound
jns
test
dec
xor
pusha
mov
cmp
pop
adc
std
pop
fucom
push
mov
call
mov
push
stc
stos
les
test
push
lea
test
cmps
enter
iret
mov
add
push
xor
xchg
rcl
cmp
pop
pop
lahf
sub
popf
movs
inc
sub
pop
or
jae
in
cmp
cdq
sbb
int
arpl
cmp
cmp
xchg
jo
cmp
jnp
loop
test
pop
repz
out
xor
aas
cmp
fsub
adc
cld
repnz
out
adc
adc
push
push
xchg
push
push
push
stc
lahf
sbb
mov
sub
sahf
enter
(bad)
cwde
sbb
and
jbe
jmp
rcr
mov
scas
cmps
inc
pop
push
pop
call
sbb
sbb
test
inc
or
add
push
xor
ret
cmp
sbb
mov
mov
outs
jo
fcomp
stc
test
lds
sahf
cmp
mov
cwde
clc
push
scas
inc
shr
jnp
fist
sub
mov
sub
(bad)
and
lds
stc
push
dec
sar
jo
jns
and
sub
sub
in
fstp
icebp
dec
cli
loopne
and
cmp
add
sub
dec
imul
popa
pop
cli
(bad)
dec
mov
nop
lods
dec
rcl
(bad)
aad
push
ins
jp
ja
inc
mov
adc
dec
pop
mov
dec
mov
out
fdivr
mov
jecxz
jmp
cmp
mov
aam
ror
rcl
mov
push
jl
xor
xchg
addr16
inc
sbb
iret
out
movs
rcr
pop
test
xor
bound
mov
stc
mov
xchg
cmps
sub
xor
ins
lahf
xor
idiv
bound
es
mov
(bad)
(bad)
push
add
repz
jns
scas
jl
icebp
xchg
scas
gs
addr16
mov
data16
(bad)
mov
sbb
push
mov
sbb
aaa
ficom
lahf
ret
add
inc
or
mul
mov
cld
pop
dec
cmc
cmc
inc
jmp
outs
cmp
dec
jg
fdiv
or
dec
call
ror
and
out
sbb
push
sbb
or
mov
das
dec
xlat
ins
xchg
fisttp
push
sub
adc
mov
sub
push
stos
dec
lods
mov
or
and
dec
imul
cmp
imul
xor
outs
add
inc
pop
fst
in
add
dec
mov
mov
jne
cmp
jg
mov
fistp
ret
jbe
push
add
stos
inc
jp
rcr
inc
imul
mov
mov
ins
mov
jae
in
aad
mov
sub
pop
inc
add
cmp
jg
mov
sbb
sub
stc
cs
clc
adc
data16
cwde
cmp
adc
and
jne
aas
dec
movs
mov
mov
loope
jb
stc
mov
pminub
push
cli
pop
dec
lahf
repz
push
gs
popf
and
sbb
hlt
xlat
mov
pop
mov
ja
mov
std
xchg
into
mov
in
push
cmp
jno
in
dec
sbb
sti
ja
xchg
cmp
inc
xchg
mov
mov
aas
push
lds
fs
sub
sub
(bad)
push
adc
mov
ror
adc
push
inc
inc
xchg
test
and
dec
mov
sahf
retf
stos
(bad)
push
test
adc
and
repnz
sub
add
push
cmp
call
mov
inc
pop
div
sahf
(bad)
pop
sub
hlt
adc
cmp
dec
iret
add
pushf
fsubr
int
jge
or
push
(bad)
cmp
pushf
(bad)
ins
hlt
mov
(bad)
mov
push
or
mov
jb
inc
loopne
scas
loope
and
ficomp
and
cmp
mov
adc
dec
outs
in
jnp
fnsave
test
fcmovb
xchg
inc
or
pop
cld
xchg
rcr
push
fs
in
jb
sub
std
push
stos
(bad)
mov
clc
cwde
test
test
mov
and
mov
cmp
sub
or
(bad)
mov
pop
push
es
xor
mov
xor
hlt
mov
pop
iret
fcomp
bound
popf
xchg
sub
and
scas
iret
mov
pop
ret
xchg
mov
mov
push
sub
pushf
jns
dec
xor
mov
rol
xor
imul
inc
mov
inc
adc
imul
mov
loopne
lods
push
sbb
dec
sub
cmps
adc
out
jbe
adc
dec
push
mov
adc
addr16
lahf
scas
mov
call
scas
sub
out
cwde
dec
icebp
je
fisttp
xor
addr16
shl
repz
fwait
dec
dec
in
xchg
mov
jp
push
adc
ret
mov
or
jle
ja
js
test
lea
sbb
ja
mul
addr16
in
pusha
mov
outs
or
addr16
(bad)
mov
retf
call
jg
in
iret
sub
jecxz
mov
jmp
push
sbb
loopne
add
sbb
mov
js
aam
sbb
mov
sub
sub
aaa
and
fstp
jp
sub
xchg
xor
icebp
pop
jno
add
adc
cmp
inc
dec
adc
sar
(bad)
sub
xor
cmp
imul
std
xchg
movs
in
in
js
sbb
or
xchg
add
std
arpl
mov
popf
shr
sbb
stos
add
push
dec
pop
mov
pop
(bad)
leave
xor
or
pusha
enter
and
lea
jbe
add
es
and
pop
mov
dec
out
add
sub
xchg
pop
call
and
jmp
imul
iret
jno
push
fimul
dec
loope
scas
les
inc
data16
call
hlt
arpl
call
or
stc
mov
int
enter
nop
cld
das
add
mov
push
mov
in
mov
cmp
pushf
add
pusha
mov
cmp
mov
dec
test
pop
mov
loop
test
popa
or
repz
mov
mov
dec
(bad)
outs
sub
data16
hlt
lea
ins
fnstcw
push
cmp
xor
repz
jns
sub
jne
add
cmp
gs
scas
mov
jl
sbb
in
mov
jge
sahf
add
cwde
sub
xchg
sub
or
sub
pushf
std
sub
pop
or
in
(bad)
retf
mov
xchg
xor
push
inc
and
pop
ins
pop
arpl
aaa
scas
gs
push
neg
adc
jg
push
fstp
push
js
or
sub
mov
xlat
fwait
stos
cli
push
dec
add
test
mov
inc
aam
inc
cmp
fdivr
xor
jnp
pop
cmp
mov
adc
push
mov
or
fs
adc
shl
adc
adc
test
cmp
ret
jl
(bad)
in
xchg
push
in
cmp
nop
aam
xchg
sahf
sbb
inc
popa
popf
xchg
daa
adc
xchg
cld
xor
ins
mov
pop
std
retf
out
xlat
inc
and
jg
mov
cmc
imul
and
or
pop
and
stos
push
das
pusha
xchg
fisttp
rcl
repz
ja
xchg
ret
push
inc
dec
sub
adc
retf
pop
psrlw
jle
adc
hlt
nop
jecxz
adc
fisub
xchg
mov
jmp
test
sub
cmp
ja
mov
jp
inc
pop
xor
push
cwde
(bad)
or
mov
pop
iret
inc
call
retf
ss
test
adc
(bad)
(bad)
xor
and
les
cdq
push
shr
xchg
movs
fisubr
sub
mov
mov
jo
mov
leave
popa
pop
xor
iret
cdq
jg
fs
sub
adc
cmp
jp
ret
push
sub
pop
push
pop
call
push
gs
mov
mov
ss
out
test
sahf
pop
in
or
mov
mov
addr16
or
add
fnstsw
xlat
lds
arpl
mov
repz
add
mov
in
pop
movs
push
jns
adc
dec
je
fst
cmp
add
ins
cmp
cwde
mov
mov
ins
cmc
add
test
std
out
test
(bad)
loop
ror
in
lods
mov
and
pusha
imul
and
iret
mov
jg
push
aaa
icebp
mov
call
mov
aam
cli
stos
dec
sub
aad
(bad)
ds
inc
jmp
pop
mov
lods
das
test
popa
test
jno
mov
jbe
jno
rcr
push
xlat
inc
cli
sbb
test
or
repz
loopne
push
pop
sub
mov
xor
arpl
mov
fbstp
aad
daa
jge
cmps
push
adc
daa
bnd
push
cmp
shl
inc
or
mov
push
cmp
and
ja
or
jmp
fdivr
sbb
movd
jb
dec
jno
mov
not
out
or
loopne
mov
test
mov
repz
fiadd
push
jo
sbb
iret
add
push
cmp
rcr
in
add
jnp
jb
nop
mov
mov
fbld
lods
rcl
mov
clc
pop
jmp
push
push
sbb
jbe
sbb
push
push
int
xchg
cmp
icebp
xchg
mov
push
cmps
scas
outs
or
ins
xor
lods
fsubr
js
iret
retf
mov
push
adc
test
jle
movs
sub
jecxz
sub
hlt
(bad)
cs
ins
jne
stc
mov
mov
(bad)
mov
jmp
pop
mov
dec
les
jmp
jmp
pop
sbb
dec
dec
adc
rol
and
adc
ficom
movs
pop
(bad)
adc
sub
jne
push
xlat
inc
call
call
je
and
mov
div
hlt
xchg
rol
ret
add
int
add
jne
data16
push
inc
mov
jo
adc
cmp
inc
adc
ss
les
in
stc
jno
cmp
jmp
xor
jmp
fcom
loopne
or
aam
mov
pop
ret
loop
jge
jmp
sbb
rol
xor
sbb
pusha
or
adc
sbb
mov
pop
pop
inc
mov
jp
sbb
xchg
leave
xor
pop
cwde
lds
mov
lods
sub
add
addr16
in
lds
xor
(bad)
out
jb
loope
add
cs
test
xchg
push
adc
inc
push
out
jg
pop
pop
(bad)
rcl
adc
lds
rcr
out
mov
retf
mov
fdiv
mov
mov
(bad)
xchg
dec
(bad)
mov
into
call
repnz
movs
xor
inc
scas
xor
mov
push
loopne
cmps
xlat
mov
bound
sbb
push
in
fstp
pop
inc
je
call
mov
or
cmc
pop
retf
mov
loop
adc
div
cmp
and
jmp
pop
and
mov
add
mov
mov
mov
dec
or
push
ins
sar
loop
frstor
cmp
ficom
pop
cdq
fwait
inc
or
jg
stc
push
push
push
adc
pop
mov
bound
xor
xchg
and
mov
mov
retf
mov
in
les
shl
mov
push
add
ja
push
mov
outs
xchg
test
push
mov
jnp
adc
repnz
sbb
jnp
push
sar
test
cmps
popf
mov
xchg
fadd
add
jae
sbb
push
adc
pop
rdpmc
std
outs
enter
ins
ret
sti
push
mov
(bad)
fsubr
(bad)
popa
in
and
push
pop
adc
push
jmp
in
jg
stc
dec
std
std
jne
adc
and
call
pusha
xlat
sbb
in
lds
xor
add
daa
sub
pop
sbb
ins
or
js
jbe
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loope
in
cmp
xchg
ret
stos
enter
shl
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
jb
imul
je
dec
adc
push
pop
sub
dec
xor
pop
cmp
adc
dec
cmp
adc
inc
add
adc
push
add
push
xor
sbb
dec
das
dec
and
gs
jbe
push
xor
imul
inc
movs
mov
lods
xchg
inc
xlat
ins
sub
add
into
mov
cmp
cld
sub
add
movs
inc
(bad)
cmp
push
mov
loop
sbb
fmul
add
sub
push
out
xor
xchg
pop
scas
lea
mov
leave
pusha
sub
lock
stos
inc
clc
jecxz
repnz
stc
sub
jge
add
dec
adc
jmp
push
add
mov
test
cmp
shr
jecxz
mov
inc
lahf
dec
aam
in
jbe
dec
jmp
push
call
and
enter
adc
dec
rol
ins
sub
push
pop
repnz
scas
inc
xor
pop
cmp
add
es
xor
or
int3
cmp
mov
push
aam
imul
cmps
push
clc
xor
cld
add
push
add
jecxz
dec
mov
mov
xchg
outs
leave
mov
or
icebp
mov
ror
mov
mov
test
scas
jbe
cli
add
arpl
stos
jns
push
idiv
adc
shl
sbb
inc
sub
or
leave
sub
or
aaa
dec
mov
fiadd
mov
jnp
gs
bound
push
shr
test
mov
jp
stc
jle
cvtpi2ps
lods
mov
shl
movs
mov
out
mov
mov
pusha
popf
xchg
lods
xor
push
mov
call
and
enter
retf
sbb
pusha
cli
push
cdq
fst
fldcw
pop
sub
dec
clc
or
xor
js
or
pop
jnp
dec
xchg
mov
mov
es
popa
sbb
cmp
jnp
push
(bad)
jno
push
xor
sar
pop
das
or
fwait
lea
dec
push
xchg
inc
nop
aaa
inc
push
adc
add
ins
or
fidiv
fisttp
shr
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
in
(bad)
mov
stc
xchg
out
mov
test
sub
add
shl
stos
jno
sbb
cmp
aaa
or
sub
mov
cld
adc
out
xor
mov
push
lds
mov
push
cmps
xchg
cmps
pop
mov
popf
jns
cs
xor
aaa
add
and
aad
fdivr
(bad)
mov
xchg
movs
push
mov
mov
mov
(bad)
movs
arpl
jl
clc
sbb
call
call
pop
lock
push
dec
les
ins
(bad)
fs
ss
mov
ja
gs
mov
dec
mov
xchg
add
(bad)
dec
aam
mov
push
mov
add
stos
js
iret
sub
mov
test
mov
addr16
dec
mov
imul
sti
popa
mov
and
adc
adc
inc
push
or
mov
inc
mov
add
cmp
cmp
sbb
(bad)
mov
sub
icebp
xor
into
and
shl
mov
push
loopne
and
xor
ret
pop
cmp
mov
push
push
stc
add
mov
jb
jo
or
ds
call
mov
int3
pop
or
fild
test
and
dec
pop
es
jp
pop
loop
push
je
out
ja
call
mov
dec
mov
dec
loope
sbb
mov
pop
test
dec
data16
ja
clc
inc
test
popa
ins
loop
cdq
test
xchg
xchg
mov
jmp
xor
sub
xor
les
out
(bad)
sti
inc
(bad)
stc
outs
out
add
(bad)
sbb
push
cmp
mov
mov
adc
stos
mov
movs
mov
push
sbb
pusha
xchg
lods
mov
(bad)
fisttp
and
inc
leave
std
dec
rol
popa
int3
adc
aaa
mov
ins
xchg
inc
mov
arpl
inc
adc
or
jb
push
das
dec
or
popf
inc
lock
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
daa
inc
xor
pop
push
and
popf
les
or
push
sbb
ds
add
dec
icebp
cmp
pusha
test
pop
retf
inc
leave
cmp
rcl
aad
lods
inc
cmc
sbb
dec
movs
dec
hlt
sbb
xor
adc
icebp
pop
iret
jecxz
or
add
cmp
push
mov
sbb
sbb
and
ret
and
dec
rol
stc
outs
stos
push
jmp
jbe
sub
xchg
jbe
mov
stos
cmps
inc
adc
fild
sti
push
call
call
in
or
call
inc
xchg
cmp
cdq
jno
xchg
data16
jle
dec
push
pop
dec
into
pop
or
sub
adc
xchg
sar
int
inc
mov
xor
sub
jecxz
jp
fisub
repz
fwait
inc
fisub
xchg
retf
test
imul
dec
ss
cs
shr
mov
xchg
dec
xchg
rcl
sti
or
mov
in
pop
lods
ficomp
daa
enter
cli
add
lods
call
stc
lahf
mov
or
test
mov
sub
xchg
mov
push
icebp
sahf
inc
xlat
lahf
push
hlt
and
xchg
fwait
push
pop
sbb
ficomp
fdivr
enter
call
inc
rcr
xchg
sbb
stc
addr16
jae
pop
cs
popa
enter
shl
fdivr
or
fcmovnb
inc
adc
cmp
xor
pop
(bad)
mov
repz
mov
push
in
xchg
movs
xlat
sbb
push
(bad)
push
xor
int
test
jecxz
and
rdpmc
pop
jbe
ins
ins
sbb
(bad)
arpl
cmc
push
sbb
or
inc
sar
addr16
call
push
aaa
xlat
jb
test
pop
jmp
cmp
and
movs
mov
addr16
ja
jo
sbb
mov
mov
gs
cmp
pop
pop
jg
dec
das
inc
and
pusha
or
gs
jno
push
jne
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
ins
cmp
gs
jnp
dec
push
addr16
cli
pop
or
pop
in
lock
xchg
imul
cld
fs
push
int
sbb
cmp
int
and
xor
in
xor
pop
and
lock
sbb
xor
xlat
and
stc
daa
cmp
push
cs
push
jmp
push
adc
cmps
js
xor
call
dec
lds
ins
lea
loope
mov
dec
xchg
push
neg
test
mov
movs
mov
xchg
movs
dec
mov
push
or
outs
mov
retf
or
push
mov
imul
mov
add
push
loopne
sub
loope
test
test
(bad)
ss
xchg
cld
cmp
mov
aad
xchg
fisub
mov
inc
daa
add
std
cmp
mov
pop
js
cmp
push
jae
xor
dec
lods
inc
adc
inc
das
std
sub
inc
sub
out
xchg
inc
adc
push
and
lea
mov
xor
nop
jge
pop
stc
test
and
mov
cmp
mov
leave
mov
ss
xor
lahf
inc
sub
or
call
lods
inc
mov
imul
xchg
shl
mov
out
cdq
gs
retf
lds
xchg
mov
hlt
cwde
cmp
and
stos
xor
sub
mov
xchg
pop
xlat
inc
jae
cmp
scas
xchg
daa
cmp
pop
hlt
clc
inc
enter
mov
mov
iret
jns
xchg
fdiv
jb
pop
ss
nop
mov
or
cmp
xor
jno
adc
cmp
je
mov
mov
or
mov
jno
call
lea
fwait
mov
into
pushf
add
fdiv
add
sub
mov
loopne
mov
(bad)
imul
bnd
clc
inc
movs
dec
lods
loope
stos
int
lods
jmp
mov
test
lods
into
mov
mov
in
mov
xchg
fdiv
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
daa
inc
xor
arpl
sahf
fbstp
movs
data16
ret
jle
dec
retf
bound
fbld
into
popf
pop
mov
popf
gs
pop
mov
xor
jmp
fistp
into
dec
lods
lahf
mov
ds
sub
mov
mov
jl
mov
xchg
inc
mov
jo
push
shr
int
je
fldcw
adc
and
jno
cdq
or
adc
dec
stos
addr16
stc
push
scas
js
xor
lahf
pop
scas
mov
sub
jl
mov
test
jno
push
loope
cli
push
sub
add
sti
es
enter
enter
mov
dec
fsubr
push
fisubr
pop
mov
fs
enter
call
mov
inc
cmps
(bad)
and
fwait
call
jo
cld
and
xchg
idiv
addr16
ins
mov
adc
hlt
popa
mov
jae
ss
cmp
dec
loope
cmps
mov
arpl
sbb
xchg
lahf
push
std
push
jle
dec
pop
push
enter
mov
call
xlat
and
lahf
xchg
call
sub
fnstcw
add
mov
movlhps
xchg
xchg
imul
test
push
aad
stos
nop
mov
pop
frstor
bound
or
mov
add
lds
jbe
lea
ret
cwde
inc
jecxz
js
call
aas
xor
les
sbb
add
jbe
cli
imul
inc
lock
sub
ss
cmps
xor
pop
stos
test
jmp
(bad)
repz
or
jo
dec
(bad)
mov
pop
hlt
push
add
sbb
mov
cmp
cmp
mov
inc
in
(bad)
(bad)
jg
cli
xchg
add
or
jbe
in
(bad)
stc
loopne
cmc
cld
pop
test
sbb
add
dec
test
and
ins
and
push
cs
push
xor
ins
add
ja
push
adc
pop
or
sub
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
std
mov
mov
sub
xor
push
(bad)
sub
sahf
jne
mov
mov
fnstenv
popa
push
aam
shr
cmp
cmp
sbb
lods
imul
mov
mov
mov
outs
mov
jp
mov
jl
lods
pop
test
fidiv
inc
sti
adc
std
adc
inc
stos
data16
cmp
adc
push
xor
and
rcr
cmp
shl
push
jmp
inc
out
retf
dec
rol
jmp
cld
aaa
rcl
shl
or
xor
cmc
adc
jmp
sub
cmp
fld
sbb
sti
daa
xchg
daa
cdq
or
and
pop
push
in
cmp
mov
or
mov
int3
mov
inc
int3
push
das
or
fs
adc
ror
xchg
dec
scas
sar
out
push
iret
dec
fld
sar
pushf
ja
test
mov
cwde
je
cli
aaa
and
cmp
ror
push
push
add
pop
dec
mov
stos
mov
jnp
aam
mov
pop
test
lea
xor
in
or
or
aaa
dec
lds
pop
sbb
dec
sub
and
lahf
fisubr
loopne
adc
lods
jo
pop
sbb
ficom
mov
imul
mov
outs
mov
cmc
dec
sbb
inc
loope
data16
call
test
pop
js
sahf
das
pop
les
push
and
aaa
fild
add
pop
lahf
xchg
test
push
clc
not
pusha
loopne
popf
mov
dec
in
jae
push
cli
push
je
data16
sub
mov
xor
ins
cli
icebp
ins
cmc
sti
dec
sbb
fst
loop
cwde
stos
mov
icebp
inc
xchg
fild
add
adc
cmp
jae
pusha
imul
cld
dec
sbb
mov
lahf
sbb
add
cdq
ret
test
call
into
and
mov
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
and
arpl
inc
adc
jns
push
das
dec
or
popw
jns
jbe
jne
dec
pop
and
sub
je
adc
jl
dec
stc
or
inc
add
sti
js
outs
retf
and
jl
push
adc
outs
mov
adc
jns
sub
jl
dec
lds
sar
outs
clc
or
push
test
bound
push
popf
jle
loop
and
cmp
out
cmp
hlt
adc
jb
sub
ins
mov
push
(bad)
push
cmps
imul
sub
push
xor
xor
in
cmp
sub
retf
jmp
cmp
pop
repz
jmp
sub
sub
iret
cmp
test
les
cmp
or
retf
or
fcomp
sub
adc
xchg
scas
jle
mov
pop
pop
cwde
jb
rcl
cli
pop
lods
test
sub
add
jnp
stc
adc
xchg
int
out
pusha
mov
push
test
push
mov
shl
aad
jl
int
test
push
dec
aam
add
pop
add
add
dec
sub
pop
xor
xor
xchg
stos
bound
call
pop
mov
mov
mov
les
int3
lahf
jp
in
xor
movs
push
rcl
cmps
xchg
jo
jecxz
jge
js
adc
stos
inc
mov
dec
cmps
retf
ss
inc
fldenv
sti
mov
mov
push
fdivr
aaa
cmp
rol
fcomp
mov
add
adc
xchg
sub
test
cmp
ja
jmp
push
mov
add
xchg
xor
pop
jbe
cdq
xor
ficomp
adc
or
sub
call
sahf
and
das
int
sar
push
out
inc
pop
rcl
mov
pop
ins
out
dec
inc
std
push
mov
adc
add
sub
cmps
mov
sti
push
into
div
mov
mov
mov
inc
loopne
(bad)
mov
iret
loope
xchg
cmc
mov
mov
into
scas
shl
in
repnz
into
lahf
in
(bad)
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
test
stos
out
(bad)
neg
shr
scas
icebp
mov
fdivr
lds
neg
sar
enter
jmp
add
fdiv
jecxz
lock
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
cmp
js
dec
sbb
dec
sub
inc
cmp
cmps
jno
and
js
jo
or
add
xchg
push
add
daa
or
cld
imul
pop
sbb
daa
(bad)
fadd
xchg
in
stos
lods
sbb
sub
into
ins
or
add
dec
or
and
xchg
cmp
fdiv
push
and
ja
dec
fld
sti
iret
and
dec
push
and
inc
xor
dec
push
pop
pop
push
es
push
cs
sub
(bad)
fsubr
(bad)
sub
push
mov
mov
lahf
adc
pop
das
mov
sahf
add
push
lea
stc
in
pop
cmp
and
fld
mov
jmp
push
fst
stc
call
mov
push
stos
aad
jae
ins
daa
xchg
in
cli
cli
stos
pop
fs
push
or
mov
idiv
imul
xchg
mov
pop
movs
push
sub
hlt
push
inc
xor
adc
jl
ds
(bad)
cmc
repz
inc
imul
lock
data16
sahf
int3
dec
retf
test
mov
sub
xchg
(bad)
mov
push
es
gs
dec
add
js
lods
or
mov
iret
lock
(bad)
xchg
out
loopne
adc
movs
(bad)
in
das
pop
sub
cmp
adc
push
xor
inc
ds
adc
pop
or
in
call
pop
and
sbb
pop
inc
ins
pushf
clc
movs
in
xlat
xchg
cmps
repnz
pop
pusha
mov
jno
fidivr
ret
inc
adc
call
fmul
sbb
push
or
icebp
cmp
push
sbb
inc
sub
nop
out
test
and
push
out
sbb
jno
xchg
xlat
xchg
mov
gs
repz
mov
fmul
mov
mov
xchg
pop
jns
sbb
jp
jbe
dec
adc
jns
push
push
mov
xor
xchg
cmc
jbe
pop
push
pop
call
jge
out
pop
fnstsw
mov
iret
cwde
shr
add
sub
cld
mov
adc
dec
imul
(bad)
sbb
dec
cmp
adc
xor
xchg
jno
and
xor
sbb
jge
imul
dec
daa
dec
pcmpgtw
mov
or
xor
addr16
js
mov
lahf
jmp
and
repnz
lock
(bad)
cmp
aam
inc
add
mov
jmp
jmp
es
ret
fwait
out
jns
test
stos
mov
sub
mov
jno
pop
xchg
sar
and
out
repnz
add
mov
sub
pop
repz
lea
cmp
inc
jb
sub
jb
push
(bad)
stc
xchg
fldcw
pop
push
ret
(bad)
(bad)
test
ja
rol
push
add
cwde
cmps
xchg
ss
dec
jo
ds
xor
jecxz
xchg
pop
(bad)
mov
(bad)
xor
lods
inc
sbb
movs
stos
aad
and
and
sbb
fs
mov
xor
daa
and
jno
mov
xor
arpl
push
xor
or
ins
and
pusha
add
push
cmp
xchg
(bad)
cmp
aaa
jns
lods
mov
ds
lea
mov
cmp
jge
fadd
inc
cdq
xchg
cmps
int
jae
xchg
inc
iret
popf
clc
(bad)
pop
xor
inc
add
lea
outs
out
call
shl
idiv
mov
out
and
int3
test
pushf
test
mov
xor
push
or
cmp
mov
jge
mov
jp
pop
ja
in
inc
dec
and
les
cmp
adc
xchg
cmps
mov
xchg
jecxz
fwait
add
and
ret
dec
adc
xchg
call
(bad)
sbb
jns
(bad)
xchg
push
test
xchg
pop
mov
gs
es
xor
bound
arpl
clc
pushf
or
mov
cli
xor
and
dec
(bad)
arpl
test
sbb
mov
fcomp
loopne
fmul
mov
test
cwde
icebp
xchg
loopne
repz
addr16
in
fld
push
jle
loop
lock
popa
popf
in
jmp
iret
cmp
xchg
dec
sbb
adc
pop
popa
xchg
clc
into
retf
adc
and
(bad)
sub
ins
ds
repz
js
and
sbb
sub
mov
push
sbb
mov
dec
imul
jae
push
dec
fwait
push
imul
jmp
xchg
jp
push
inc
sub
icebp
mov
aas
(bad)
movs
icebp
adc
imul
nop
jmp
int
mov
and
push
ss
sbb
push
mov
mov
push
bnd
jecxz
fisttp
or
sub
(bad)
mov
fidivr
pop
push
and
jnp
jns
push
add
push
xor
pop
push
jle
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
dec
add
inc
aas
push
xor
dec
add
jp
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
outs
adc
je
push
xor
inc
push
bound
jne
outs
cmp
sbb
imul
adc
add
(bad)
mov
xor
and
jl
dec
add
inc
xor
dec
add
sbb
jne
pusha
sub
add
gs
adc
dec
xor
push
ss
push
sub
push
xor
jp
ins
sbb
sahf
out
ret
push
xor
inc
and
js
addr16
pop
xor
and
push
push
je
gs
push
outs
daa
inc
ds
sub
dec
add
jnp
dec
das
push
adc
sbb
jo
push
xor
and
dec
xor
adc
outs
sub
add
adc
ss
jbe
dec
add
jge
push
push
outs
and
jge
dec
and
jmp
xchg
int3
and
mov
sbb
and
inc
sub
jg
xor
inc
or
outs
daa
imul
dec
sub
jnp
imul
sub
pop
adc
pusha
aaa
jp
arpl
inc
or
inc
cmp
push
cmp
push
sub
imul
push
push
pop
push
pop
or
and
jg
push
xor
inc
es
aaa
jle
ja
ja
dec
or
dec
sbb
ins
or
push
sbb
push
sub
inc
sub
jns
push
xor
sub
xorps
js
pop
push
push
sub
jae
jle
inc
sub
pop
adc
sub
cmp
inc
or
and
jl
dec
or
popf
(bad)
pushf
repz
out
lods
retf
mov
xchg
xchg
mov
lds
jmp
fdiv
out
mov
shr
rcl
(bad)
(bad)
mov
mov
(bad)
cdq
int
retf
fnstsw
in
stos
retf
fdivr
sti
nop
hlt
mov
xchg
les
in
xchg
in
movs
out
mov
scas
(bad)
mov
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jle
jo
dec
cs
cmp
push
and
ins
add
pop
pop
adc
jp
add
push
sbb
pop
es
and
sub
adc
or
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
and
push
cs
or
addr16
jle
ins
or
aaa
dec
es
push
push
ins
es
push
cmp
inc
push
and
push
xor
dec
push
push
pusha
add
jae
jae
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
ss
sub
pop
cmp
or
push
popf
in
cmps
lds
fadd
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
xor
dec
push
inc
and
cmp
inc
xor
imul
sub
push
sbb
xor
popa
add
ins
sub
xor
push
adc
jle
pop
add
inc
xor
cmp
sbb
outs
(bad)
pop
jns
ja
dec
daa
pop
xor
jne
imul
push
xor
push
inc
pop
pusha
sbb
push
imul
ins
or
push
add
outs
pop
cmp
sbb
push
or
push
xor
pop
sbb
popf
into
mov
stos
enter
(bad)
fist
loopne
sti
mov
mov
(bad)
sahf
(bad)
test
mov
loope
out
(bad)
cmps
fidiv
shr
scas
icebp
mov
fdivr
leave
(bad)
pushf
cli
xchg
loope
sar
xchg
fmul
shr
loopne
les
out
mov
rcl
jmp
add
out
mov
les
aam
repnz
idiv
(bad)
mov
jmp
mov
mov
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
pop
ds
test
stos
faddp
mov
nop
das
imul
fbld
xchg
sbb
addr16
add
scas
cld
lds
outs
inc
cmp
mov
rcr
je
(bad)
(bad)
sahf
int3
fld
adc
xor
(bad)
mov
xchg
cs
das
outs
inc
add
adc
movs
fnstcw
push
bound
mov
mov
jne
cmps
hlt
mov
sahf
cmp
push
dec
sub
xchg
icebp
lahf
out
jecxz
lock
cmp
pop
jg
popf
into
neg
nop
repnz
sub
jp
js
mov
mov
add
inc
xor
das
mov
xchg
xlat
fstp
dec
das
mov
mov
xchg
sub
ss
mov
nop
imul
pop
xor
push
fsub
add
push
dec
cmp
lahf
shl
add
push
cmp
inc
add
jge
addr16
inc
and
or
push
js
jp
addr16
inc
cmp
js
pop
pop
dec
sbb
inc
cmp
push
xor
ins
add
ins
sbb
inc
add
jge
addr16
inc
and
or
push
js
jp
addr16
inc
cmp
js
pop
pop
dec
sbb
inc
cmp
push
xor
ins
add
ins
sbb
inc
add
jge
addr16
inc
and
or
push
js
jp
addr16
inc
cmp
js
pop
pop
dec
sbb
inc
cmp
push
xor
ins
add
ins
sbb
inc
add
jge
addr16
inc
and
or
push
js
jp
addr16
inc
cmp
js
pop
pop
dec
sbb
inc
cmp
push
xor
ins
add
ins
sbb
inc
add
jge
addr16
inc
and
(bad)
pop
jg
jne
imul
or
jo
push
inc
adc
js
dec
or
dec
cmp
dec
es
sbb
adc
jno
pusha
xor
inc
or
jg
jbe
dec
das
push
cmp
pop
sub
je
ins
sub
add
outs
cmp
ins
or
add
dec
xor
pop
xor
push
sub
push
xor
arpl
pusha
sbb
pop
and
dec
cs
jb
and
ret
xchg
(bad)
xchg
(bad)
mov
test
mov
sahf
fidivr
(bad)
mov
xchg
in
xchg
scas
leave
mov
xchg
mov
stos
in
call
test
rcr
shl
in
cwde
rcr
jmp
leave
stos
int
rcr
ret
lahf
hlt
popf
fnstcw
sbb
popw
inc
add
sub
pop
ss
and
sub
push
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
sbb
xor
add
outs
pop
push
cmp
inc
add
jg
gs
inc
push
pop
cmp
data16
dec
push
ins
adc
sbb
gs
jp
pop
add
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
add
xchg
push
add
mov
in
push
imul
cmp
add
push
cmp
xor
shl
and
xchg
aad
(bad)
ins
pop
ins
mov
dec
adc
dec
mov
aas
loopne
(bad)
xchg
mov
mov
xchg
sti
mov
test
xchg
mov
int
sbb
sbb
lods
rol
mov
shl
sbb
imul
sub
dec
adc
out
(bad)
mov
cmp
cmp
outs
xchg
std
jle
in
lds
push
jno
outs
movs
popf
stc
mov
fdiv
icebp
sahf
mov
lods
hlt
lahf
sar
sti
scas
loop
movs
mov
fisub
(bad)
mov
cmps
mov
inc
or
jb
or
shl
mov
or
push
push
xor
mov
out
push
xchg
cmc
mov
lods
stos
dec
sub
test
xchg
xor
mov
scas
ret
dec
sub
jb
pop
push
sub
pop
sbb
inc
sub
nop
dec
mov
xchg
les
cmc
mov
lahf
xchg
lock
jle
add
sbb
out
mov
ja
jbe
push
inc
push
jle
add
jmp
cs
adc
pop
cmp
jp
test
cwde
sbb
jae
jg
mov
fs
jl
mov
mov
xchg
cdq
repz
(bad)
ins
xor
(bad)
aam
rcl
cmp
jmp
popa
sub
pop
inc
add
cmp
jge
dec
lods
fwait
xlat
mov
mov
cmp
sbb
jle
sbb
(bad)
push
jle
jg
sub
push
cs
jecxz
cmp
sbb
jle
movq
and
dec
push
imul
rcr
add
jnp
jp
movs
fistp
dec
inc
in
mov
lods
into
mov
sub
fisub
js
ja
dec
cmp
fst
cmp
adc
jle
push
jbe
pop
in
movs
adc
inc
aaa
out
pop
and
push
xor
sub
adc
out
pop
sbb
mov
ret
mov
cmp
mov
xchg
mov
pop
sbb
add
js
bound
xchg
mov
lds
mov
loopne
shl
(bad)
cmc
fwait
cli
je
mov
dec
(bad)
mov
sub
adc
outs
adc
stos
enter
jecxz
(bad)
mov
lods
js
mov
jno
sub
dec
or
outs
push
ins
mul
ins
fisub
push
or
and
push
sbb
data16
ja
or
inc
es
and
scas
idiv
xlat
mov
fnstenv
mov
stc
call
fmul
ins
cmp
add
jbe
jo
push
aaa
dec
daa
ret
pop
xor
cmp
outs
add
cs
dec
xor
cmp
es
xor
jns
ja
dec
and
rcl
jae
ja
gs
inc
sbb
mov
xchg
hlt
nop
rol
mov
mov
mov
std
lods
fstp
fist
xor
xchg
cld
mov
add
shl
stos
mov
sbb
sar
adc
xchg
ficomp
fsub
aam
into
data16
pop
pop
lock
sti
bound
out
sub
fmul
rcl
jbe
jo
fisub
ins
mov
sahf
shl
dec
out
pushf
fldenv
push
push
xor
sub
sahf
cmps
jns
sahf
cmc
mov
add
adc
add
push
push
aas
pop
pop
sbb
pop
xor
idiv
pop
pop
dec
mov
sub
push
sbb
adc
xor
sbb
inc
sub
or
xchg
fcom
ficomp
out
rcl
repz
mov
cmp
fs
sbb
inc
pop
lds
outs
adc
xor
sub
icebp
adc
inc
sub
pop
sbb
pop
mov
mov
lahf
dec
test
dec
jg
gs
push
out
cmc
js
fistp
inc
or
gs
sbb
or
movs
retf
(bad)
fst
shl
movs
pusha
inc
adc
aas
pop
push
sub
push
mov
nop
bnd
sbb
(bad)
adc
test
mov
dec
sbb
jbe
gs
inc
or
imul
fldcw
int
jmp
sti
lods
shr
inc
add
je
jg
sbb
push
adc
lock
out
push
add
jle
pop
adc
das
sub
mov
pop
pushf
les
je
outs
or
push
pushf
mov
mov
aas
ja
jge
inc
add
or
xor
inc
sub
pop
mov
xchg
mov
xor
jnp
push
leave
push
pop
jp
arpl
jp
pusha
sub
(bad)
out
xchg
stc
push
ss
cmp
mov
mov
pusha
mov
mov
arpl
pop
add
mov
cmps
int
test
cmps
into
xchg
sbb
dec
lea
push
loopne
shl
enter
div
push
adc
pop
dec
adc
pop
adc
dec
adc
push
xor
(bad)
jmp
int3
xor
out
xor
mov
popf
movs
ins
ja
jbe
push
xchg
je
ins
das
je
cmp
add
adc
add
call
out
imul
mov
call
cmp
cmp
mov
sub
shl
call
jmp
mov
xchg
shl
rol
lds
jmp
(bad)
mov
ins
sub
jnp
ins
adc
add
and
es
je
ja
add
or
cmp
les
std
lahf
mul
push
jl
pop
loope
mov
(bad)
mov
scas
(bad)
add
cdq
fadd
mov
jnp
dec
jbe
add
xor
movs
fiadd
retf
xchg
cmps
retf
(bad)
iret
mov
xor
add
pop
ds
sub
xor
adc
fidivr
js
push
cmp
xchg
fmul
shr
xchg
arpl
jl
jle
arpl
add
and
inc
fst
mov
lods
rcr
mov
xchg
nop
jmp
data16
pop
minps
xor
inc
adc
test
sbb
jmp
xchg
jg
retf
sahf
(bad)
mov
ror
dec
add
xor
xchg
aam
ror
fist
loopne
fist
sar
jae
addr16
mov
sub
mov
cmp
sub
adc
jle
imul
push
cmp
(bad)
add
xchg
jmp
and
mov
out
cmps
rcr
sahf
clc
aaa
cmc
mov
not
std
fstp
jl
push
scas
dec
and
sbb
popf
aam
fnstenv
jmp
out
jmp
xchg
popa
add
and
sub
(bad)
nop
icebp
xchg
shr
lahf
out
jno
fistp
jmp
test
or
xchg
cmc
xchg
ror
popf
popa
or
in
loop
repz
jo
adc
inc
cs
arpl
dec
add
pop
push
pop
cmp
dec
push
lds
dec
sbb
jp
arpl
sub
test
pop
cs
adc
imul
outs
xor
ss
cmp
ss
sub
sbb
pop
sbb
sbb
sbb
push
pop
sbb
cs
cmp
data16
xor
dec
mov
out
adc
enter
sub
jb
je
jo
push
xor
arpl
inc
bswap
clc
stos
stc
xchg
jg
loope
std
mov
fsub
dec
and
and
push
cmp
loopne
mov
mov
out
inc
jne
js
xor
or
inc
add
fs
fs
inc
out
cmp
aam
(bad)
js
inc
add
mov
cdq
(bad)
xchg
int3
mov
jmp
test
stos
int3
add
fwait
cmc
cwde
les
add
mov
xchg
cmps
(bad)
scas
fdivr
stos
into
xchg
fist
mov
test
repnz
imul
xor
movq
lods
retf
xor
inc
mov
enter
xchg
gs
aad
cli
fs
cld
popf
lock
stos
mov
or
push
push
in
dec
xor
cmp
inc
aas
push
cmp
jbe
in
xchg
jmp
mov
cwde
fisub
cmc
xchg
out
and
test
iret
lea
pushf
shl
or
pop
cmp
dec
es
test
call
cmp
scas
loop
std
adc
popf
stc
mov
popf
repz
fcomp
jns
push
cmp
or
dec
add
cmp
jge
addr16
mov
pop
cmp
dec
sbb
rcl
inc
aaa
(bad)
fnsave
out
mov
loope
xchg
fstp
out
ror
gs
neg
mov
jle
pushf
mov
(bad)
xlat
sbb
mov
and
cld
fs
jl
inc
xchg
lods
clc
cmp
push
cmps
mov
mov
hlt
mov
jl
jge
sub
xor
repnz
clc
pushf
(bad)
neg
stos
(bad)
mov
(bad)
mov
lods
fimul
idiv
cmc
xchg
jmp
fldcw
js
jnp
in
mov
push
add
mov
sbb
outs
or
cld
mov
enter
xor
jl
pop
sbb
imul
cmps
pop
cmp
jp
mov
mov
in
rcr
rcr
xor
loop
(bad)
mov
inc
push
push
adc
jecxz
cli
popf
jmp
push
ss
cmp
jns
fs
aaa
and
inc
add
loop
cld
push
sbb
cmp
aad
xchg
dec
add
inc
cs
or
imul
adc
push
sub
push
ss
cs
movs
ja
dec
sub
jno
pop
lods
mov
mov
mov
enter
call
push
ss
shr
push
or
pop
pop
iret
iret
lahf
fld
xlat
mov
shr
movs
out
iret
mov
mov
nop
shl
imul
dec
sub
cmovbe
je
jle
loope
(bad)
fs
mov
mov
dec
das
push
mov
sahf
test
cs
das
jp
inc
loop
rol
movs
enter
cmc
fwait
out
ss
cmp
outs
call
pop
or
fs
adc
add
outs
pop
data16
xor
jb
pop
add
xor
push
das
dec
or
mov
mov
fidivr
push
push
pop
adc
jo
dec
dec
das
push
mov
ret
mov
xchg
dec
cwde
std
mov
scas
sar
hlt
xchg
fist
(bad)
mov
mov
jb
aam
retf
mov
lods
out
xor
stos
(bad)
mov
mov
fbld
and
jns
push
push
daa
in
xor
inc
clc
rcl
mov
mov
aaa
pop
aaa
out
add
out
jne
jne
int3
pop
dec
sub
ret
mov
movs
int3
pop
add
pop
dec
jecxz
loop
rcl
daa
pop
mov
arpl
inc
packssdw
jmp
dec
mov
stc
mov
push
xor
js
dec
cmp
call
pushf
fldcw
inc
add
sub
or
mov
sbb
pusha
cmovs
adc
popf
std
sahf
stc
jne
fs
jl
push
cmp
cmp
jg
inc
cvtps2pd
push
and
xor
cs
adc
sbb
add
jp
xor
and
daa
dec
sti
mov
ins
or
cmps
mov
and
dec
xchg
push
cmp
mov
cmps
retf
fmul
ins
xor
pop
lock
aas
pop
es
add
je
outs
add
xchg
dec
sub
xor
inc
lods
inc
or
push
sti
mov
mov
ret
mov
xlat
stos
sahf
outs
pop
jge
enter
inc
xor
fs
call
mov
xlat
mov
add
cmp
fdiv
pop
and
pop
cmp
fs
dec
sub
ds
pusha
in
mov
adc
adc
pop
sub
and
stc
cwde
call
rcl
or
test
push
inc
add
sub
jns
jl
push
adc
sar
dec
sbb
inc
mov
add
neg
sub
jae
pop
mov
leave
add
inc
pop
neg
cdq
inc
push
pushf
repz
aam
mov
(bad)
out
inc
scas
shl
add
js
mov
mov
cdq
xchg
js
mov
mov
dec
aam
ficomp
push
test
mov
add
sub
daa
cs
addr16
sbb
shr
shr
shl
out
(bad)
into
mov
fild
jmp
pop
je
jbe
cmc
in
ret
mov
xchg
test
or
pop
adc
or
cli
pop
ret
lods
int3
mov
aad
adc
dec
outs
daa
je
pop
test
inc
cmp
and
jge
inc
ss
mov
mov
lds
les
arpl
stos
jecxz
stos
mov
outs
jge
dec
mov
or
cli
test
mov
cmp
xchg
div
mov
mov
movs
pop
push
inc
adc
in
cwde
int
retf
bound
push
leave
or
pop
xor
push
and
inc
xor
outs
lods
push
sbb
push
cld
mov
xchg
lods
jmp
shr
scas
shl
movs
into
inc
add
add
pop
xor
es
ds
and
sbb
jno
jmp
inc
mov
xchg
cmps
stc
pop
jne
ins
adc
retf
xchg
fild
adc
cli
mov
test
ror
fsub
cmp
adc
push
push
sub
sbb
icebp
(bad)
out
aad
nop
mov
jo
pop
and
inc
packssdw
sbb
push
cmp
jle
ins
add
in
in
cwde
int
loop
es
dec
or
inc
push
ins
add
xchg
jmp
scas
idiv
ins
adc
push
xchg
push
push
je
inc
and
push
jle
pop
and
and
ss
dec
xor
push
stos
in
mov
pusha
push
adc
mov
sbb
mov
xchg
ret
mov
xor
mov
or
or
ss
and
jp
pop
or
push
pop
in
daa
dec
adc
xor
push
cmp
in
mov
adc
rcl
into
mov
cwde
out
test
fwait
cli
xor
lock
and
inc
mov
ja
push
or
addr16
inc
cmp
push
(bad)
push
sbb
pop
mov
dec
add
sub
mov
cwde
fcomp
mov
push
in
hlt
lods
movs
mov
nop
jbe
outs
aaa
and
std
sbb
xchg
repz
je
aad
les
pop
or
inc
or
repnz
xlat
bound
dec
stos
and
jp
adc
es
or
ficom
test
cli
mov
mov
adc
add
sub
pop
add
push
sbb
xchg
jae
jb
pop
cmp
dec
and
xor
aas
jo
and
fadd
pusha
daa
jb
mov
sub
bound
loope
lock
mov
sti
adc
clc
pushf
frstor
mov
das
mov
add
push
fimul
std
add
or
mov
(bad)
loopne
fcomp
loopne
gs
xor
inc
push
jo
dec
push
inc
daa
dec
sub
aas
and
retf
popf
fld
and
pop
dec
push
jp
je
jns
retf
mov
xchg
inc
mov
push
adc
out
mov
xchg
rcr
sbb
dec
adc
retf
ss
cmps
rcl
ficomp
movs
in
mov
jnp
cmp
bound
loopne
outs
jo
jle
push
js
jmp
test
xchg
mov
jmp
loope
(bad)
outs
cmp
sub
cs
sub
jecxz
cmp
movs
out
shl
cmp
std
pop
jl
push
sbb
in
lock
xor
daa
pop
sbb
loopne
icebp
cmps
cld
xchg
scas
fidivr
or
and
icebp
pushf
int
int3
(bad)
mov
test
stos
je
cmp
push
lods
sub
cmp
div
dec
and
push
mov
cmp
ja
and
xor
pusha
daa
dec
sub
xor
ins
sbb
ficomp
cmc
(bad)
push
pop
dec
ss
or
add
push
add
je
jge
sub
pop
ss
(bad)
mov
push
gs
scas
out
retf
stos
retf
test
push
and
or
(bad)
mov
xchg
in
retf
test
mov
mov
mov
cmps
jne
add
xor
dec
add
jp
fnstsw
xor
dec
sub
hlt
mov
push
arpl
pop
adc
adc
shl
inc
popa
movd
and
dec
push
pop
add
push
sbb
in
loop
rcr
cmps
lea
inc
sub
push
fs
sti
xchg
cli
mov
jns
xor
ja
mov
xchg
and
sbb
sub
dec
sub
pop
adc
pushf
fist
sbb
fistp
and
add
scas
leave
jae
ret
nop
enter
imul
test
arpl
pop
jecxz
or
rcr
cmp
gs
nop
aad
ret
xlat
mov
call
in
push
and
and
in
enter
int3
gs
imul
ret
sbb
inc
daa
gs
add
mov
adc
and
xor
fs
jae
aaa
jne
push
sbb
inc
add
pop
repnz
sar
adc
cli
and
test
mov
fisub
repnz
fldenv
retf
data16
jno
and
push
adc
retf
mov
pushf
popf
pop
cmp
das
xchg
inc
sub
and
imul
push
dec
push
push
sbb
pop
cmp
push
jns
jno
and
test
(bad)
cli
outs
or
add
scas
dec
pushf
repnz
hlt
or
call
lahf
retf
addr16
scas
mov
shl
push
xor
cmp
and
lds
repz
sbb
mov
mov
repz
icebp
pusha
std
xchg
push
sahf
addr16
jbe
and
inc
xor
std
mov
or
sub
inc
mov
(bad)
mov
jmp
out
jbe
ffree
mov
adc
dec
or
and
adc
iret
loopne
mul
movs
jecxz
sbb
pushw
jp
mov
test
xor
jmp
dec
add
or
aam
mov
outs
mov
out
(bad)
into
mov
and
or
mov
sahf
xlat
ins
dec
jecxz
ficom
lock
cmp
dec
and
mov
mov
dec
cmp
push
movs
out
rcr
xor
shr
stc
mov
xor
jae
push
sbb
arpl
out
xchg
xor
jae
mov
and
xor
push
push
xor
mov
adc
adc
jb
fwait
cld
xor
(bad)
dec
das
shl
mov
popa
xor
dec
sub
mov
sbb
sub
adc
fisttp
adc
push
retf
imul
jle
add
push
out
xchg
loopne
xchg
repz
add
and
pop
push
and
pop
mov
jne
xor
aaa
enter
lods
inc
or
mov
fcomp
xor
pusha
cmps
cli
scas
push
xor
or
jecxz
lds
inc
or
inc
xor
mov
ss
lahf
mov
dec
xor
shl
pop
jl
jae
push
push
or
push
cs
sub
cld
xor
cmp
pop
sbb
cmp
fdiv
fwait
rol
jle
push
adc
jns
push
jno
ja
mov
ja
loop
clc
popf
mov
call
jle
pop
add
fs
fstp
dec
or
cdq
retf
jne
and
stc
mov
adc
xchg
cli
push
cmp
mov
sahf
cmc
shl
inc
outs
jge
mov
std
jae
xchg
add
imul
and
add
and
inc
pop
outs
and
movs
ret
mov
dec
(bad)
mov
mov
dec
adc
gs
imul
ds
sub
add
and
popa
xor
pop
cmp
dec
or
jle
jl
popa
sub
cmp
dec
sbb
push
sbb
jo
push
gs
imul
ds
sub
xchg
fsubr
xchg
or
inc
push
jp
jle
mov
xchg
adc
cld
lods
push
out
adc
fmul
rcr
and
popf
xchg
mov
inc
sti
xchg
or
popa
pop
pop
dec
stc
mov
sbb
out
jne
jno
sti
mov
addr16
mov
fucomip
xchg
into
cmps
and
push
sub
adc
(bad)
stos
jmp
test
or
imul
gs
enter
rol
sahf
out
cmps
retf
mov
mov
xchg
(bad)
mov
xchg
(bad)
mov
stos
enter
fidivr
jmp
mov
hlt
mov
shl
mov
lods
out
lock
and
jns
ins
adc
es
cmps
int
and
cli
cdq
cld
iret
popf
repnz
pop
and
aaa
movs
scas
out
xlat
iret
dec
sbb
cmovno
stc
or
or
jo
jg
jp
inc
aaa
mov
sahf
sbb
add
dec
push
imul
pop
fadd
jbe
or
dec
jle
inc
aaa
ficom
cs
fcmovu
adc
lahf
or
mov
mov
or
sub
push
sub
inc
and
jge
jb
jl
inc
sub
push
adc
ins
and
dec
sub
jne
pop
sbb
imul
ds
sub
loope
mov
xor
push
xchg
mov
mov
gs
outs
aaa
mov
mov
std
arpl
xchg
sub
gs
jno
mov
and
sahf
stc
loope
xor
cld
pushf
pop
mov
ds
aaa
sub
aad
fwait
loopne
pop
stc
pushf
stc
enter
push
push
and
mov
xchg
out
adc
jle
lods
into
lods
test
and
aad
jmp
sbb
(bad)
mov
cwde
jmp
ja
imul
mov
jecxz
push
sub
xchg
clc
xchg
shl
out
(bad)
mov
xchg
icebp
mov
fidivr
mov
nop
call
(bad)
aad
iret
popf
jmp
stos
and
cmps
xor
push
push
test
or
arpl
rcr
sbb
jge
lods
mov
ret
aaa
addr16
fbld
fdecstp
xor
pop
loopne
psubusb
jo
adc
cmp
inc
add
outs
mov
iret
sbb
add
push
mov
int
outs
add
jae
inc
das
lods
movs
shl
mov
inc
inc
xchg
mov
sub
faddp
jge
jp
mov
inc
inc
je
push
cmp
push
daa
outs
add
jnp
pop
pop
inc
push
pop
(bad)
bound
jnp
pop
pop
jae
push
sub
and
pop
adc
mov
inc
inc
jecxz
sbb
inc
test
or
mov
cli
mov
cmp
xor
sti
xchg
loop
enter
pop
ret
cmps
add
xchg
cmc
mov
push
mov
jg
movs
scas
in
aam
outs
cmp
jb
xchg
(bad)
sahf
sbb
out
mov
pop
fld
or
jp
ins
out
out
xchg
int
xor
inc
pop
push
lea
mov
inc
add
rcl
lds
or
data16
nop
repz
jae
add
inc
xor
mov
int3
mov
cmps
jecxz
stc
xchg
not
aad
aam
repnz
mov
int
call
into
xchg
add
popf
in
cmp
jge
je
mov
add
mov
mov
pop
cmp
sbb
mov
int
xchg
fisubr
xchg
mov
scas
xor
popa
sub
aad
push
mov
fiadd
call
movs
add
xchg
(bad)
mov
sub
bound
fwait
add
outs
cmp
jns
(bad)
and
xchg
add
adc
aam
push
xchg
sub
xor
jl
pop
pop
nop
fcomp
mov
jle
mov
retf
push
lods
jmp
fnstcw
test
mov
mov
inc
xchg
sti
sbb
inc
xor
add
cli
xchg
push
stos
lods
fdiv
icebp
mov
mov
call
add
dec
inc
push
jno
(bad)
fidiv
imul
mov
lods
or
sub
and
popa
xor
jge
pop
pop
das
jge
push
or
xchg
psllq
jle
fist
js
leave
sbb
jge
js
jecxz
sbb
scas
aam
cmps
cmp
mov
push
add
jbe
sar
into
lods
test
and
aad
call
les
or
movs
(bad)
mov
fs
cli
sti
cdq
imul
test
inc
adc
jecxz
out
and
xchg
stos
retf
push
sbb
popa
or
(bad)
ja
icebp
mov
mov
xor
pop
inc
(bad)
mov
loopne
mov
xor
mov
xchg
in
mov
cmps
(bad)
fdiv
mov
fidivr
jecxz
(bad)
xchg
in
(bad)
mov
push
jl
je
pop
pop
sub
push
or
pop
push
cmp
dec
and
ins
pop
ss
outs
ds
xor
(bad)
movs
leave
stos
cmp
jg
jp
popf
jmp
ins
sub
pop
cmp
xor
addr16
jne
pop
cmp
gs
retf
iret
imul
stos
cmp
outs
aas
movs
mov
les
mov
test
jo
sbb
lods
into
ret
loopne
cli
mov
mov
cwde
jmp
inc
adc
push
jns
pop
or
cmp
and
push
sahf
hlt
lods
sar
mov
fisub
retf
cmps
xlat
mov
dec
mov
mov
rcr
(bad)
fst
in
icebp
mov
stos
dec
mov
jmp
shl
push
xchg
xchg
mov
pop
add
(bad)
fild
leave
mov
mov
push
xchg
push
pop
xchg
stos
ret
mov
jo
jg
ja
mov
into
sbb
or
outs
std
xchg
sbb
in
xor
sbb
mov
xchg
adc
inc
and
leave
int
leave
adc
inc
push
imul
pop
adc
inc
ss
sub
dec
cmp
es
daa
cmp
push
cmc
(bad)
repnz
rcl
shr
loope
cmc
cdq
shl
test
fmul
loop
ret
mov
mov
in
and
mov
adc
dec
pushf
or
jb
or
mov
hlt
mov
loopne
push
pop
sbb
inc
jmp
fcom
sbb
push
dec
xchg
stos
call
or
dec
sub
repz
ror
sbb
hlt
scas
push
mov
icebp
mov
pop
cmp
cdq
test
(bad)
cli
test
frstor
fst
in
sbb
addr16
cmp
adc
pusha
es
and
jns
push
pop
push
sub
je
imul
in
(bad)
mov
mov
xchg
leave
mov
xchg
inc
sbb
inc
ss
xor
cwde
rcr
pop
sub
mov
mov
retf
cmp
or
and
mov
mov
mov
stc
sar
std
test
inc
jmp
es
out
imul
fiadd
jl
jno
inc
inc
push
fstp
imul
sbb
pop
adc
dec
sbb
sub
imul
or
pop
xor
cmp
popf
icebp
test
mov
inc
ss
shr
mov
out
leave
mov
imul
ret
inc
or
arpl
imul
pusha
sbb
ja
inc
sbb
inc
sub
dec
dec
mov
mov
popa
out
mov
cmps
aam
loopne
jle
jns
sbb
adc
xchg
rcl
sbb
jge
sbb
sbb
or
in
push
mov
sbb
and
dec
sub
stc
mov
aad
xlat
scas
push
repnz
cmp
xor
xchg
fnsave
aam
in
mov
xchg
sar
cli
mov
mov
and
not
repz
out
mov
sbb
dec
and
jecxz
not
lds
imul
mov
movs
fnstenv
mov
sbb
pop
data16
aaa
pop
or
gs
pop
jns
sbb
aad
sbb
(bad)
sbb
inc
call
shl
int
in
and
repz
sub
dec
jg
inc
xor
mov
adc
je
pop
push
jp
jmp
push
bound
pushf
not
loope
sar
call
cmp
push
xor
push
pusha
cmp
push
pop
dec
dec
jmp
or
sub
push
sub
pop
fisub
fdivp
fs
cmp
mov
jmp
add
test
mov
(bad)
pushf
lock
ds
and
aam
retf
mov
fbstp
mov
dec
adc
jb
inc
sub
jmp
pushf
int3
xor
adc
dec
xchg
sar
xchg
or
dec
pop
jge
jg
mov
xchg
aaa
retf
mov
in
xor
sbb
xchg
fnstsw
push
xchg
fimul
call
and
aas
aam
repz
imul
sahf
retf
xchg
sbb
cdq
sbb
sahf
repz
sar
mov
repz
das
mov
(bad)
(bad)
fsubr
movs
in
sbb
imul
(bad)
mov
aas
push
xor
cwde
sub
scas
enter
jb
jle
lock
arpl
push
sbb
or
cdq
(bad)
lods
(bad)
ffreep
div
xchg
and
imul
rcl
pop
gs
mov
adc
jecxz
out
and
xchg
stos
retf
push
sbb
imul
fwait
xchg
fwait
shl
cmps
cmps
enter
repz
in
popf
imul
sub
pop
push
add
pop
and
sub
sbb
push
jp
inc
and
push
or
sub
adc
aad
pop
mov
jecxz
in
std
xchg
loope
loopne
repz
loopne
sbb
dec
and
(bad)
mov
push
pop
pop
xchg
mov
mov
push
leave
mov
lods
loopne
std
mov
mov
mov
fisubr
addr16
ficomp
aas
fstp
adc
cmc
loope
adc
movs
mov
mov
mov
in
fistp
cmp
mov
daa
inc
mov
call
les
push
push
cmp
push
adc
pop
inc
and
and
pop
add
pop
sub
adc
pop
sub
inc
ds
sbb
pusha
cmp
outs
or
(bad)
mov
mov
jnp
and
xor
adc
arpl
inc
and
lahf
aas
inc
es
xor
lahf
iret
fwait
in
sbb
fs
xchg
idiv
mov
xchg
xchg
cmc
mov
mov
xchg
mov
rcr
jmp
mov
std
jns
cwde
sub
dec
inc
outs
repz
clc
sar
mov
add
popa
jmp
mov
(bad)
in
outs
sbb
jecxz
add
pop
movnti
and
lds
pusha
int
xor
push
cmp
adc
jg
pusha
jmp
add
jg
jns
cdq
ret
xchg
sub
scas
lahf
fild
ror
sbb
add
or
xor
jge
jge
outs
add
jge
outs
pop
add
cmp
inc
cmp
jns
push
xor
dec
and
jp
ins
push
imul
ds
sar
int3
lods
(bad)
mov
mov
sbb
inc
cmp
imul
mov
cli
gs
sahf
and
dec
inc
data16
and
icebp
mov
test
mov
cli
outs
punpckhbw
add
dec
test
add
push
sbb
inc
pop
push
dec
xor
je
pusha
repnz
xor
bound
neg
inc
icebp
jb
pop
int
pop
dec
rcl
mov
stc
and
push
jb
imul
dec
adc
mov
cmps
in
lock
repz
iret
mov
cmp
lahf
loopne
not
sbb
xor
inc
pop
sub
jb
data16
pop
adc
pusha
sub
dec
es
cmp
push
adc
pusha
xor
adc
jmp
or
es
cmps
shr
imul
ds
dec
xchg
mov
xchg
in
inc
or
jg
outs
fbstp
jp
ins
sub
shr
hlt
jbe
jle
push
movs
ror
out
push
in
mov
dec
loop
int
rol
shr
dec
xor
inc
and
cli
mov
lods
loop
cmc
sahf
repz
(bad)
xchg
sbb
fs
and
jns
imul
icebp
lahf
in
cld
xchg
mov
cld
scas
cli
xchg
xchg
xchg
in
movs
jmp
popf
out
xchg
aam
dec
sub
jo
imul
in
clc
dec
push
mov
call
repz
xchg
leave
mov
xor
ins
fidivr
jge
loop
push
mov
xor
push
inc
or
inc
call
mov
(bad)
out
hlt
and
imul
sti
push
sbb
pop
sbb
push
xor
pusha
sub
pop
inc
inc
dec
pop
and
push
add
pusha
sub
push
movq
push
sub
pop
cmp
inc
add
dec
and
xchg
loop
push
jp
lahf
rcl
les
aam
into
mov
sub
dec
adc
adc
imul
outs
adc
cwde
and
and
inc
add
inc
xchg
and
or
bound
mov
test
add
xor
ins
ins
(bad)
xchg
(bad)
rcl
aam
pop
pop
cmp
stos
enter
ror
mov
mov
test
cwde
call
sahf
lahf
mov
mov
gs
xchg
imul
stos
sbb
das
inc
pop
xor
js
addr16
push
add
lahf
shr
mov
mov
xchg
in
mov
mov
xchg
jmp
hlt
fld
xchg
into
mov
out
sbb
jb
push
dec
add
aad
ret
mov
cmps
call
adc
jp
loopne
or
arpl
jp
jmp
sub
scas
enter
outs
inc
inc
jb
cld
mov
dec
daa
ja
out
xchg
sbb
int
or
das
bound
jnp
movs
mov
xchg
xchg
mov
pop
fisttp
shr
or
in
adc
jp
jl
mov
mov
stos
icebp
test
mov
jmp
fs
das
sbb
push
xor
inc
fsub
shr
sub
ins
xchg
jno
fstp
cmps
out
movnti
popa
inc
shr
cmp
ins
push
dec
mov
lods
not
push
adc
call
data16
daa
or
sahf
(bad)
leave
inc
or
fimul
jl
hlt
mov
sti
inc
pop
pop
pusha
(bad)
mov
cmc
inc
sub
push
in
out
fcmovb
xchg
jmp
pop
cld
fwait
dec
arpl
lahf
int
push
cmp
lods
popa
hlt
and
add
sub
sub
jle
xor
and
out
scas
fwait
(bad)
xchg
mov
(bad)
shl
jae
xchg
stc
dec
in
xlat
jnp
test
sub
loopne
adc
push
clc
push
sub
repnz
sbb
aad
pop
in
sbb
and
int
cmp
inc
dec
jge
xchg
out
xor
adc
jmp
push
movs
lods
ret
ror
xchg
jmp
mov
jbe
mov
daa
inc
pop
in
push
xchg
push
ror
repz
in
pop
lods
xchg
mov
stos
mov
sbb
push
xor
xor
pop
xor
imul
xor
inc
adc
pop
sub
dec
sub
xchg
lods
mov
repnz
cwde
mov
fbld
mov
leave
scas
mov
mov
shl
add
sbb
push
jmp
sbb
jmp
sti
xlat
in
cmp
hlt
xchg
pop
stos
or
(bad)
pop
(bad)
sahf
not
arpl
call
mov
shl
jo
sahf
adc
pushfw
mov
lods
sub
fsubr
xchg
mov
adc
sbb
imul
pusha
pop
inc
popf
cwde
movs
jmp
jmp
shl
add
sub
jae
jp
push
stc
jnp
popf
xchg
test
scas
test
stc
call
and
jecxz
rol
hlt
jl
arpl
cmp
inc
xor
and
sbb
pop
cmp
es
repz
add
ins
iret
dec
xor
jp
(bad)
fisttp
ins
mov
cmps
jmp
push
movs
lods
ret
ror
xchg
jmp
mov
jbe
mov
daa
inc
pop
arpl
mov
movs
fidiv
xor
sbb
jb
mov
(bad)
cld
inc
add
xchg
int3
xchg
lods
mov
repz
aam
out
arpl
xchg
push
pop
and
mov
xor
adc
dec
pcmpgtb
push
cmp
popa
cmp
mov
mov
push
call
mov
pop
adc
dec
sbb
and
push
and
or
sub
xor
sub
pop
sub
je
xor
pop
push
or
pop
cmp
daa
push
xor
xor
pop
xor
imul
loope
outs
adc
push
xor
mov
pop
or
sub
popa
and
fadd
jp
hlt
mov
(bad)
pop
jmp
ret
outs
or
push
inc
ss
add
mov
dec
imul
pop
jle
xchg
push
(bad)
pop
inc
cdq
fcomp
retf
into
pusha
xor
sub
push
fwait
inc
cmp
xchg
les
mov
retf
mov
retf
push
sub
adc
inc
shl
jns
xor
xchg
mov
(bad)
mov
popa
hlt
and
add
sub
sub
jle
xor
and
out
scas
fwait
(bad)
xchg
mov
(bad)
shl
test
arpl
mov
loopne
cs
cmp
bound
(bad)
cmps
add
outs
or
xchg
mov
add
jmp
dec
out
test
repz
lahf
sub
mov
lods
hlt
mov
shl
in
sbb
push
pop
outs
sti
xchg
add
add
pop
repz
push
in
xchg
shl
add
sbb
push
loop
mov
lods
cld
mov
mov
shl
xchg
test
imul
in
retf
dec
fcom
jecxz
leave
mov
jae
mov
inc
out
sbb
les
imul
sub
jbe
push
xor
inc
xchg
fdiv
pop
gs
dec
inc
lock
pop
xchg
fst
and
inc
dec
imul
(bad)
iret
jge
test
pop
packsswb
xchg
imul
jno
jno
sti
outs
or
dec
daa
dec
punpckhdq
jo
jnp
sti
into
repz
test
and
mov
fcomp
call
push
cmp
sbb
jo
mul
push
cli
pop
out
call
iret
inc
int3
test
rcr
xchg
std
je
popf
sar
test
ins
enter
stc
pusha
add
push
cmp
and
and
fisubr
enter
xor
sub
scas
shl
sub
call
lock
inc
shl
daa
xor
pop
into
pop
cmp
inc
dec
js
pusha
pop
sbb
into
jmp
out
cmp
sub
das
mov
lea
cmc
inc
jecxz
mov
mov
arpl
cmp
fst
in
fs
adc
call
idiv
call
call
and
adc
inc
sbb
sub
mov
pop
mov
cmp
xchg
jnp
repnz
out
adc
icebp
sar
adc
sbb
jle
xor
mov
in
xchg
mov
fild
jnp
cli
movs
and
mov
repnz
clc
pop
mov
ret
ins
pop
inc
dec
or
push
push
sti
pop
fisubr
aas
imul
sar
push
cmps
add
push
mov
ins
rol
mov
mov
mov
arpl
cmp
push
jl
xchg
(bad)
shl
retf
(bad)
outs
stos
stc
iret
xor
xchg
pop
add
arpl
loop
cs
js
fdivr
sub
mov
or
push
add
mov
ret
xor
ins
pop
cmc
mov
sub
pusha
loop
xor
cdq
call
or
adc
xchg
inc
mov
inc
dec
movs
jg
push
jg
sbb
popa
out
fcom
fsub
sub
jns
push
xchg
popf
and
jno
push
lods
sub
adc
add
test
add
add
mov
mov
mov
lock
pop
xlat
stc
lea
je
mov
dec
(bad)
mov
jae
aad
fdivr
push
inc
movs
and
pusha
mov
pop
add
xchg
sub
retf
js
jb
ret
xchg
push
enter
adc
cmp
enter
out
(bad)
clc
in
aam
jbe
std
dec
fs
call
push
int3
fiadd
sub
je
mov
pop
aam
push
(bad)
ret
xchg
(bad)
addr16
sar
test
jnp
pop
mov
sbb
clc
jle
es
and
xchg
dec
lods
cmp
fist
add
push
sub
sbb
aas
sbb
add
cli
test
es
repz
mov
jg
int3
dec
jecxz
test
cmp
mov
sbb
sub
mov
sbb
aas
pop
mov
aam
pop
jae
sbb
call
hlt
push
leave
xchg
iret
inc
or
adc
inc
xor
or
jl
jne
std
in
dec
pop
out
adc
xchg
lahf
jl
out
mov
adc
jp
fisttp
lahf
stos
dec
imul
jmp
add
dec
ja
mov
adc
sub
add
sub
retf
jp
enter
test
mov
inc
lods
dec
movs
cmp
mov
(bad)
(bad)
mov
mov
(bad)
cmp
fiadd
inc
sbb
mov
inc
fs
dec
loop
xchg
test
push
call
iret
push
mov
inc
nop
pop
push
out
pop
fcmovnb
das
aas
pop
cmp
(bad)
xor
cdq
ror
cmp
aam
sbb
ja
inc
add
loop
sub
ret
mov
jne
test
lds
xor
mov
test
shl
push
pop
push
test
cld
xor
lahf
push
mov
mov
fxch
and
cmp
test
xchg
mov
adc
add
das
popf
pop
stos
jo
mov
adc
fisubr
adc
jmp
or
adc
in
int3
dec
dec
and
cdq
test
test
sbb
pop
xchg
mov
sub
or
jp
add
and
pop
mov
push
push
(bad)
jmp
jmp
(bad)
inc
sbb
mov
adc
iret
adc
push
xor
push
retf
pop
jno
fisubr
cli
enter
nop
and
xor
sar
or
lds
mov
sbb
xor
jne
cmp
loopne
mov
movs
ja
int3
call
call
stos
(bad)
call
cmps
mov
call
lds
and
cmp
inc
int3
jmp
lods
adc
in
sbb
lea
mov
push
jecxz
cmc
jo
das
jno
fwait
cmp
sbb
std
mov
lahf
mov
(bad)
vmread
jno
mov
pop
mov
xchg
sub
dec
and
and
mov
test
jae
int
ins
inc
fist
dec
mov
imul
or
xchg
test
pop
jge
pop
mov
idiv
push
push
jae
cwde
add
adc
fdivr
addr16
xor
ret
xchg
mov
fadd
mov
lock
inc
xlat
jne
mov
loope
jmp
outs
loop
arpl
retf
jg
xor
arpl
xchg
jmp
cs
mov
pop
std
scas
stos
and
leave
arpl
mov
div
xchg
imul
scas
pop
mov
lods
pop
jmp
jo
xor
sub
push
pop
ss
adc
mov
test
adc
mov
test
mov
ret
adc
fadd
sub
push
fs
add
mov
enter
add
fadd
or
push
or
push
mov
enter
ja
sbb
sbb
xlat
js
pop
movs
add
cmp
push
dec
cld
jl
xchg
aam
fadd
sar
ins
dec
mov
cmps
rol
sub
sub
mov
cmps
or
sbb
popf
cwde
mov
(bad)
push
push
fisub
xchg
xchg
(bad)
out
aas
sti
sbb
dec
inc
mov
rol
xor
xchg
jle
push
cmp
lock
test
lds
nop
dec
or
pop
mov
call
jo
aas
jbe
cmp
adc
ret
xor
push
or
dec
lods
ins
mov
mov
push
cwde
pop
fs
pop
es
xchg
repnz
push
mov
ret
aad
pop
out
inc
and
push
pop
xor
jecxz
arpl
je
or
pop
sub
pcmpgtb
dec
jl
add
cmp
xor
fmul
jp
mov
mov
(bad)
push
shr
add
mov
mov
adc
fcom
add
bound
hlt
pop
push
and
stos
pusha
mov
sbb
push
stos
movs
bound
popa
push
and
sbb
mov
sub
stc
sub
iret
test
gs
mov
cwde
test
push
add
cld
add
xchg
stos
xchg
fistp
sbb
ret
dec
rol
cld
push
js
in
sar
loope
nop
lock
outs
or
mov
neg
fist
mov
adc
ficomp
jmp
leave
outs
loop
mov
push
inc
in
push
or
outs
mov
je
jmp
and
add
ret
rcr
fs
frstor
mov
lock
call
xchg
sub
pop
cmps
aad
push
fisub
ror
push
cmp
pop
pop
mov
cdq
cs
add
test
pop
sbb
aas
mov
sbb
cmc
mov
ficomp
xlat
test
mov
(bad)
out
sbb
lods
imul
out
pop
or
sbb
pop
(bad)
cmps
enter
mov
add
xor
fidiv
mov
fsubr
mov
imul
daa
mov
sbb
scas
ficomp
sbb
mov
pop
sbb
add
das
cmc
les
and
lock
aas
mov
adc
stc
add
movs
ds
jp
adc
cmps
lods
jnp
out
retf
aaa
cmp
sub
pushf
gs
dec
and
pop
xchg
push
hlt
push
sar
sub
mov
dec
mov
cs
dec
adc
fs
mov
hlt
jecxz
into
retf
ja
bound
aad
int
fcmovu
or
mov
test
jmp
sub
rcr
retf
shl
adc
jae
jecxz
jmp
sub
les
and
repnz
pop
ror
js
rep
jp
xchg
sbb
or
loope
icebp
sub
jo
stc
rcr
js
jno
xor
mov
push
adc
and
cli
cwde
not
and
dec
cmp
jmp
pop
mov
pop
pusha
push
xor
cmp
cdq
mov
mov
jno
jo
jle
and
jnp
mov
in
xchg
in
push
xchg
and
pushf
mov
retf
lock
mov
popf
adc
(bad)
mov
jecxz
into
lds
pop
jmp
ss
outs
sub
lds
or
xchg
mov
retf
fdiv
and
jg
cs
adc
push
push
fmul
xchg
mov
fwait
jmp
jl
retf
cld
add
sbb
add
sahf
jle
push
pusha
fistp
lea
stos
mov
aaa
ja
cmp
xchg
aas
or
and
jl
add
sub
push
popa
cmc
fcomp
inc
jp
push
or
add
and
mov
jp
mov
cmps
clc
mov
mov
repnz
in
dec
pushf
and
outs
test
popa
lea
xchg
push
fldenv
cmp
pop
jb
push
fidivr
repz
ret
out
call
addr16
cli
imul
(bad)
push
push
mov
ftst
(bad)
je
iret
hlt
sbb
xlat
or
cdq
or
mov
retf
and
(bad)
jmp
xor
add
aas
fwait
cmp
mov
cmp
(bad)
pop
icebp
mov
inc
pop
leave
sbb
int3
mov
aaa
nop
mov
jmp
out
mov
or
int3
add
jp
mov
fwait
or
mov
add
mov
test
adc
pop
pop
stc
enter
lock
aaa
jge
cmp
cld
adc
mov
in
sbb
int3
(bad)
(bad)
ins
sub
ret
cmp
mov
div
rol
lods
cdq
pop
scas
call
(bad)
popf
test
dec
jmp
cmp
dec
dec
cmp
in
sbb
mov
jae
sub
loopne
inc
pop
out
pop
rcl
mov
mov
dec
das
cli
jmp
xor
sbb
xchg
cmps
outs
enter
lds
pop
pop
dec
mov
cmc
add
movs
repz
mov
mov
ss
out
out
cmc
pop
xor
stos
imul
(bad)
jb
ret
jg
xchg
ss
les
nop
jg
jno
in
dec
mov
jecxz
nop
jmp
nop
idiv
dec
pop
pushf
jae
mov
sub
(bad)
inc
stos
jmp
gs
shl
or
fnstenv
mov
cmp
xchg
gs
popf
in
xor
test
xor
ss
dec
pop
sub
cs
fdivr
mov
fnstsw
cmp
sbb
test
jno
inc
xchg
or
jns
in
mov
jae
push
shl
movhps
dec
outs
xchg
rcl
sub
pop
mov
mov
lods
add
pop
(bad)
daa
stos
sub
cmc
out
retf
jns
fs
dec
aas
sub
mov
mov
popf
das
add
xor
iret
mov
pop
adc
cmp
fdivr
cmps
fnstenv
movs
cwde
add
dec
xor
mov
adc
push
(bad)
push
jo
xchg
mov
sti
xchg
and
mov
adc
fidivr
pop
mov
int3
add
cld
pusha
adc
mov
sub
int3
pop
inc
push
xor
inc
test
dec
cmps
mov
mov
dec
dec
adc
in
test
pop
sbb
test
add
xor
call
mov
lds
mov
pop
pop
gs
mov
arpl
rol
jge
loopne
scas
mov
jno
inc
adc
mov
sub
mov
dec
sub
sbb
jl
jo
adc
std
nop
cdq
sub
scas
out
call
cmp
push
mov
cmc
(bad)
scas
in
xor
mov
iret
sbb
pop
sub
push
adc
jno
ret
dec
ins
push
cmp
lods
and
inc
fidivr
adc
scas
mov
mov
add
mov
arpl
stc
adc
(bad)
pop
push
fld
call
fiadd
or
mov
jae
jl
sbb
call
idiv
(bad)
sbb
ja
adc
push
xchg
clc
inc
sahf
fs
imul
xchg
shl
and
and
sub
push
mov
mov
lahf
fs
std
and
push
into
xchg
int3
add
mov
and
pop
adc
ins
dec
or
lahf
sti
das
cmp
jno
inc
jb
or
test
daa
mov
add
jg
in
and
sub
mov
loope
cdq
cmp
mov
repnz
push
jg
jg
mov
xchg
aaa
out
cmp
jne
xlat
dec
inc
mov
jb
pop
bound
and
mov
pusha
mov
jmp
xlat
loop
(bad)
popf
push
scas
adc
xchg
xchg
gs
xor
outs
sbb
push
rcl
adc
pop
push
inc
fptan
adc
cmp
and
cmp
mov
stos
inc
sub
xor
int3
lods
mov
mov
dec
sub
pop
scas
fsubr
cmps
test
fisubr
sub
into
cmp
pop
or
test
xor
fwait
out
or
popa
shl
pop
mov
sbb
mov
mov
int
xchg
or
fs
mov
cmp
es
rcr
(bad)
push
mov
cmp
(bad)
pop
cwde
arpl
push
enter
prefetchwt1
add
call
pop
icebp
cs
dec
push
or
mov
mov
aam
ret
xchg
xor
ins
add
test
jmp
cmp
mov
xor
xchg
jl
js
shl
fadd
scas
and
mov
add
outs
es
(bad)
pop
pop
repz
add
sti
test
mov
mov
or
xchg
(bad)
and
add
pop
xchg
or
jle
sub
les
mov
push
xchg
jo
mov
sbb
icebp
push
je
or
dec
xchg
add
xchg
mov
add
or
push
ds
out
sbb
fistp
dec
ror
mov
cmp
lahf
push
pusha
loop
push
adc
stos
and
repz
out
ss
lahf
retf
mov
xchg
aam
cdq
jbe
inc
fnstcw
stc
pop
sbb
pop
sbb
and
mov
(bad)
or
enter
aaa
and
fld
or
sub
es
(bad)
loop
xchg
(bad)
neg
adc
xor
pusha
mov
xchg
fsubr
ins
xchg
lds
test
mov
bnd
cmc
out
fs
jp
repz
jns
cmp
push
fst
data16
cmp
xor
in
sub
xchg
dec
xor
jecxz
xor
rcr
mov
xor
rcl
ins
dec
sti
sub
jo
sbb
mov
xchg
xchg
test
cmp
int
cmp
gs
cmps
daa
mov
leave
call
ret
ins
add
xchg
jno
test
pop
lds
mov
repnz
sub
popa
test
not
outs
sbb
dec
psllw
dec
data16
sub
test
sbb
jno
cmp
cmc
stos
xchg
loop
jge
cwde
xchg
dec
fidivr
jno
jnp
arpl
add
loope
mov
sbb
add
and
or
fdiv
ja
and
pop
push
jnp
fidivr
enter
cmp
sub
add
jmp
popa
sub
mov
xor
inc
mov
jae
jbe
sbb
xor
add
sbb
dec
pop
icebp
repnz
(bad)
push
pusha
outs
xor
cmps
pop
fidiv
cmps
sbb
mov
mov
lods
mov
inc
lahf
mov
outs
retf
sbb
(bad)
in
retf
ror
test
int
cmp
repz
and
xchg
and
pop
push
cld
cmp
retf
inc
sar
or
(bad)
fidiv
mov
push
jmp
xor
mov
mov
sub
adc
popf
xor
lods
xchg
jbe
enter
dec
xchg
mov
or
(bad)
cmp
cmp
daa
repz
inc
push
push
jecxz
das
mov
lods
and
dec
cdq
out
loope
adc
inc
dec
repnz
xchg
test
cs
jl
iret
push
(bad)
sbb
push
cmps
pavgb
jp
cmc
int3
out
xor
div
mov
das
sbb
inc
daa
daa
enter
cmp
dec
test
sub
or
in
jp
les
adc
adc
add
sub
or
jne
repnz
(bad)
jnp
add
cmp
(bad)
mov
test
inc
aad
xchg
pop
retf
push
cmps
sti
inc
stos
pop
enter
push
mov
in
lock
dec
mov
gs
push
push
mov
dec
pop
mov
adc
neg
cmp
add
or
ret
mov
cld
fdiv
push
pop
es
data16
jle
mov
rcl
sbb
cmp
and
or
inc
xor
retf
sti
xchg
mov
dec
(bad)
mov
inc
cs
retf
int
or
push
jg
pop
(bad)
in
mov
or
push
mov
sub
mov
clc
rcl
push
mov
stos
das
gs
test
stos
je
fdiv
imul
loopne
mov
cwde
jmp
xlat
sub
mov
mov
repz
call
scas
inc
scas
inc
test
adc
dec
bound
sbb
popa
int
xchg
jae
jmp
xchg
mov
jnp
call
std
inc
fdiv
cs
mov
or
mov
es
(bad)
adc
xchg
or
xchg
xchg
cwde
push
inc
jno
sar
ror
pop
cmps
outs
fstp
fld
out
(bad)
out
sbb
jge
es
in
mov
ss
and
mov
stos
dec
ins
call
fxtract
pop
lock
fiadd
mov
jmp
adc
inc
scas
mov
(bad)
popf
mov
fist
lods
adc
xor
bound
mov
clc
adc
jle
je
stos
cmp
mov
cmps
inc
add
(bad)
(bad)
nop
sub
or
xlat
out
xchg
push
ja
movs
bswap
push
inc
nop
repz
cmp
sar
mov
jmp
jno
mov
popa
dec
sub
out
lahf
das
jno
pusha
add
sti
mov
ficom
fwait
cmp
daa
push
xor
jl
inc
pop
push
sbb
cmp
aam
test
mov
cmp
jmp
mov
shl
mov
arpl
lock
mov
xor
cwde
cmp
cmps
in
in
push
mov
add
mov
loop
sub
xchg
(bad)
call
ins
lock
fiadd
shr
pop
cdq
xor
sub
retf
aas
mov
sbb
(bad)
cdq
jbe
cld
mov
add
xchg
aam
stc
xchg
adc
add
jle
repnz
fnstcw
dec
gs
iret
lods
add
add
xor
data16
(bad)
fldcw
enter
xchg
push
add
mov
loope
shl
lahf
adc
cdq
jb
xchg
xchg
aas
jl
jmp
and
int3
pop
ss
mov
xor
sub
or
and
lahf
push
mov
xor
mov
fidivr
movs
movs
mov
sub
sub
popf
inc
cmp
mov
into
call
mov
fisub
sahf
cs
outs
xchg
cmp
bound
repz
jnp
cmp
or
stc
jbe
dec
rcl
dec
ret
cmp
and
pop
scas
pop
js
div
out
mov
pop
xor
test
ficomp
dec
fidiv
inc
sub
cmc
les
cmc
sar
imul
dec
out
frstor
sub
inc
scas
in
sahf
shl
xchg
xchg
lock
jmp
mov
jmp
xor
xchg
pushf
mov
stc
sub
popf
inc
ins
mov
mov
cmps
arpl
mov
pop
push
push
xlat
jle
sub
fs
sbb
mov
inc
jne
mov
iret
int
loop
jnp
add
xchg
sbb
jns
sub
mov
dec
clc
jge
movs
loope
or
xchg
cdq
fdivrp
and
dec
in
and
cmc
int
jg
and
inc
lea
mov
inc
out
cmc
inc
ret
stc
add
adc
jl
adc
loope
leave
movs
jl
(bad)
or
cmps
jle
icebp
push
mov
std
add
or
mov
sub
aas
jmp
mov
(bad)
cmp
ja
std
dec
and
mov
test
mov
bnd
jb
loope
pop
mov
(bad)
push
fisttp
cli
mov
mov
add
inc
and
mov
int3
jg
mov
test
sub
lea
cmc
and
lds
mov
and
xor
jns
xlat
cli
push
mov
add
cmps
and
stc
jmp
xchg
push
sbb
outs
push
arpl
mov
and
xor
or
jp
xchg
mov
dec
mov
movs
gs
out
jp
mov
(bad)
ja
xor
sbb
movs
dec
dec
or
adc
ret
and
inc
or
xlat
adc
adc
or
in
jmp
push
xlat
xchg
test
or
sub
xchg
pop
in
(bad)
in
push
dec
jecxz
dec
jecxz
mov
sbb
adc
cmps
add
pop
in
cmp
(bad)
pop
jmp
pop
rol
dec
stos
and
pop
jbe
mov
imul
imul
adc
cmc
dec
inc
pop
inc
bound
movs
push
or
pop
aaa
push
lock
into
inc
(bad)
jmp
and
inc
stos
jp
bound
push
jnp
cmps
mov
mov
hlt
leave
push
and
xor
pop
daa
int
jmp
push
test
lds
ret
mov
stc
mov
push
cdq
and
jbe
cli
cmc
inc
add
add
jge
xchg
push
(bad)
jl
adc
jo
outs
cmp
scas
pop
out
scas
call
mov
std
popf
mov
lea
cmc
fmul
jbe
rol
cmps
mov
mov
jb
and
imul
pop
popf
xchg
push
cli
ret
add
or
mov
ja
inc
jbe
out
repz
cmp
sub
ss
inc
lods
jbe
jns
dec
push
clc
call
cmps
mov
pop
or
imul
fistp
xchg
xchg
icebp
das
mov
cmps
xchg
mov
retf
shr
mov
dec
out
loopne
scas
cld
popa
add
mov
and
shl
mov
jp
test
aad
lock
nop
xchg
es
cdq
je
add
pop
jmp
pusha
(bad)
lahf
or
adc
lods
shl
bound
xchg
mov
pop
mov
xchg
mov
pusha
mov
sub
icebp
fisub
xchg
push
push
pop
sti
push
inc
mov
mov
or
jno
arpl
dec
dec
cli
retf
jp
leave
pop
out
xor
sub
cli
and
mov
inc
cld
jmp
xchg
(bad)
clc
fs
(bad)
loop
sbb
ret
clc
cmps
push
inc
mov
dec
test
idiv
popa
push
sub
lods
enter
add
push
add
add
lods
stos
test
mov
mov
dec
or
fstcw
mov
adc
fwait
jnp
stos
cmp
js
stos
(bad)
push
cmp
jmp
(bad)
xchg
aam
sti
movs
push
(bad)
jl
fimul
dec
inc
cld
das
leave
outs
cmp
adc
xor
fs
sahf
xchg
cmc
out
fsubr
xor
rol
das
mov
nop
and
jae
test
test
jl
inc
mov
outs
sub
data16
std
cld
loope
cs
hlt
pop
scas
cmp
test
mov
or
push
pop
dec
adc
rcr
imul
adc
pop
cli
movs
out
aaa
jmp
xchg
pop
pop
sahf
js
mov
js
in
mov
push
sti
xchg
shr
lods
and
sbb
cmp
jno
mov
dec
sub
xor
sub
ret
sbb
outs
adc
scas
lods
fistp
mov
push
sti
aad
inc
cdq
dec
push
in
out
loopne
cmp
mov
imul
mov
in
ds
xchg
(bad)
fisttp
jnp
retf
imul
stos
in
fmul
idiv
dec
jae
in
in
outs
shr
(bad)
inc
mov
ss
mov
call
mov
adc
pop
sar
inc
mov
std
push
(bad)
mov
stos
call
lea
sub
ucomiss
xor
dec
(bad)
mov
push
add
jne
add
das
sub
cmp
mov
outs
hlt
or
pop
(bad)
outs
pop
out
inc
pop
mov
jnp
sbb
int
repnz
sbb
das
or
stos
cmp
cmc
inc
pop
and
adc
jge
sahf
and
(bad)
jmp
jg
and
stc
xor
or
mov
retf
jmp
rcl
jecxz
sti
push
push
gs
enter
retf
bound
and
push
call
push
loope
cmps
xchg
cmp
pop
pop
imul
xor
jo
scas
pop
add
mov
xchg
cmp
ds
mov
popf
int3
and
mov
adc
rol
(bad)
int
jecxz
mov
mov
(bad)
jle
(bad)
dec
cmp
(bad)
adc
out
loop
push
jnp
repnz
xchg
pop
inc
or
xchg
sub
fistp
lds
and
inc
xchg
(bad)
popa
out
pop
les
jns
mov
in
push
xor
lock
int3
repz
scas
sbb
inc
fldcw
(bad)
xor
adc
cwde
out
sbb
dec
mov
fistp
das
cmc
jge
pop
jo
inc
int
xchg
mov
push
fs
pushf
inc
fs
sub
push
cmp
dec
jns
pop
popf
fidiv
stos
mov
pop
shr
xor
mov
and
adc
ins
mov
sti
push
rcr
xor
inc
movs
mov
cmps
outs
test
call
out
add
repnz
xchg
sub
sti
cmc
add
and
je
out
mov
std
xor
lods
xor
sub
add
sbb
jg
jnp
mov
sar
sbb
pop
lds
clc
fist
pop
xchg
sbb
sub
mov
shr
add
aas
(bad)
out
mov
xchg
add
and
int3
movs
pop
pop
movs
es
fst
(bad)
adc
mov
add
paddq
movs
fdivr
gs
mov
dec
shr
cmp
mov
jmp
shl
retf
imul
or
sub
ins
(bad)
mov
(bad)
mov
movs
cmp
clc
pop
jnp
repz
cli
repnz
xchg
dec
add
clc
pop
sti
aas
rol
daa
mov
test
js
inc
lahf
push
jecxz
ret
xor
mov
outs
lods
push
sbb
sahf
sbb
movs
movs
loopne
mov
int3
in
scas
mov
pop
movs
push
stc
xchg
nop
shl
fcomp
dec
xchg
call
sub
frstor
aas
call
jg
dec
pop
cmp
cli
mov
mov
inc
je
outs
push
lea
ds
xchg
mov
mov
inc
xchg
ret
adc
push
cdq
adc
xlat
ror
push
pop
test
shl
stos
jno
jp
dec
mov
je
xchg
jmp
jg
test
lock
jmp
test
fist
adc
mov
mov
sti
push
dec
add
jge
cld
es
ins
cmps
popf
jp
pop
adc
nop
lock
mov
mov
(bad)
jne
sahf
and
pop
loopne
sub
fidivr
jecxz
mov
pop
mov
sbb
cmps
in
test
out
jne
jne
ins
nop
cmp
test
push
pop
jle
cli
lock
mov
stos
sti
mov
imul
pop
pop
dec
add
sbb
jg
dec
scas
or
call
xlat
mov
pop
(bad)
mov
push
jp
popf
not
out
and
mov
out
mov
or
jno
sbb
pop
lea
outs
scas
outs
lods
mov
lahf
rcl
in
xchg
call
out
loopne
sbb
mov
mov
test
and
movs
fwait
sar
shr
inc
push
test
dec
pop
sbb
(bad)
and
jp
xor
std
xchg
in
mov
dec
cmp
inc
or
dec
cmp
jb
xchg
dec
xchg
idiv
sub
repnz
pushf
fs
mov
sub
mov
std
test
sahf
inc
xchg
cli
dec
jno
dec
and
adc
(bad)
pop
aas
dec
push
lock
clc
push
mov
dec
jo
aam
retf
dec
mov
pop
retf
pushf
cmp
(bad)
mov
lock
or
xchg
sbb
sbb
or
xor
add
or
neg
out
xor
scas
push
call
cmp
clc
and
fidiv
test
jmp
sub
jge
inc
mov
ror
xor
sbb
sahf
jb
pop
sti
mov
xchg
jp
out
sub
mov
xchg
jmp
das
fisttp
mov
shl
fs
scas
or
pusha
xchg
or
jne
clc
mov
ds
ins
inc
xor
jp
(bad)
add
in
jo
pop
es
add
or
push
and
sub
cdq
mov
pop
sub
jbe
pop
stos
clc
jno
pop
repnz
(bad)
(bad)
(bad)
xchg
(bad)
mov
mov
mov
ins
daa
lds
(bad)
adc
out
sbb
mov
sub
dec
das
dec
xor
adc
xchg
or
in
add
cdq
por
mov
mov
add
fwait
gs
mov
out
mov
mov
fwait
test
dec
loop
sti
sub
sar
mov
mov
bound
xchg
(bad)
stos
cs
aam
fidiv
pop
xchg
sub
les
mov
lds
test
jmp
repnz
push
(bad)
fnsave
xor
and
push
nop
nop
dec
mov
(bad)
popf
add
das
mov
push
or
pushf
mov
pop
jno
jae
bound
ret
jnp
dec
xchg
popf
mov
adc
(bad)
sub
cmps
cli
pop
(bad)
retf
ins
icebp
pop
rol
pop
out
sub
ret
or
push
jmp
cmps
nop
pop
cwde
retf
jmp
pop
inc
mov
or
test
sbb
repnz
movs
inc
sti
push
push
or
pop
hlt
cmp
mov
add
stos
imul
out
enter
jnp
sbb
fst
cmp
in
and
cmp
add
and
mov
test
cmp
mov
or
(bad)
dec
push
sub
fnstenv
ins
xor
and
in
mov
cmp
aas
sahf
in
cmp
jmp
inc
sbb
fisub
cli
fsubr
inc
jno
push
add
mov
pop
lods
xchg
jnp
mov
mov
mov
xor
cmps
imul
dec
arpl
xlat
test
xor
inc
lods
(bad)
pop
mov
push
adc
shr
aas
frstor
xchg
push
retf
sbb
inc
fidiv
movs
jae
bnd
sub
bound
(bad)
aad
dec
int3
xchg
mov
and
push
pop
lahf
enter
(bad)
jno
jle
pusha
mov
in
aam
es
movs
aas
add
fsub
or
int
jle
cmp
movs
inc
pop
xor
iret
mov
sbb
lds
pop
je
dec
(bad)
sbb
add
jg
repz
mov
mov
cdq
jno
mov
mov
mov
adc
jecxz
xchg
push
daa
lods
jmp
mov
call
ja
pop
push
ret
jg
xlat
in
or
in
jge
jecxz
push
xchg
add
xor
pop
or
fsub
dec
cdq
sbb
jb
xor
mov
inc
mov
jnp
pop
sbb
dec
inc
lods
pop
imul
les
xchg
mov
cmp
cmp
sbb
fwait
lahf
popf
movs
into
dec
clc
movs
imul
cmp
test
cdq
sub
cmp
(bad)
jns
icebp
mov
ror
mov
inc
xor
mov
ret
or
dec
jns
mov
sbb
retf
cwde
mov
retf
xchg
xlat
add
retf
adc
sub
(bad)
sbb
jne
mov
cmp
into
push
icebp
fistp
sub
pop
es
stos
sbb
or
add
int
push
inc
dec
dec
pusha
jo
arpl
es
shr
xchg
outs
fstp
mov
mov
push
and
fs
out
xchg
(bad)
sub
jg
pop
rol
cli
dec
cmp
and
out
cmp
aad
mov
popf
ret
cmps
push
and
clc
xor
lock
mov
ds
cli
int
call
mov
xchg
pop
xchg
dec
stos
cmc
push
push
or
jmp
rcr
rcl
movs
cmp
xor
pop
cmp
mov
sahf
inc
scas
cmp
add
cmp
fidiv
sub
cmp
fadd
lahf
arpl
push
sbb
mov
xchg
sbb
lea
mov
stos
(bad)
in
push
and
gs
sar
fmul
adc
loope
mov
stos
push
int
nop
fistp
sub
or
imul
sti
mov
mov
and
repz
ins
mov
jp
lea
loopne
adc
push
dec
retf
cmps
xchg
call
sub
dec
pop
adc
aaa
sbb
cmp
loopne
loope
aas
rcr
sub
cld
xchg
mov
mov
fld
imul
sbb
mov
adc
aam
push
push
or
lods
dec
xlat
xchg
lahf
cmp
int3
leave
adc
push
xchg
or
arpl
out
sub
xchg
int
test
fldenv
dec
sbb
xlat
cli
xor
cld
in
pop
imul
out
ja
sub
cs
mov
adc
jmp
ja
and
xchg
test
es
mov
cs
jg
out
jns
popf
clc
into
repnz
mov
lock
repnz
xchg
aaa
pop
mov
div
hlt
jo
jbe
or
fstp
mov
mov
add
(bad)
lods
ret
push
pop
cmp
adc
aad
in
outs
add
push
push
es
loopne
mov
adc
pop
push
mov
int3
cld
add
jae
jb
test
repnz
pop
xlat
xor
in
mov
and
jecxz
ror
or
jbe
mov
inc
fwait
mov
sahf
cmp
or
nop
jg
test
cld
enter
sbb
in
xchg
pop
retf
fadd
xchg
in
push
xchg
dec
push
push
out
clc
leave
xlat
movs
pop
mov
and
aas
idiv
fsubr
pop
lea
pop
(bad)
xor
push
mov
aaa
rol
cdq
jmp
dec
sbb
inc
add
cmp
cld
shl
cld
pop
cmp
jnp
test
add
and
hlt
ja
and
pop
mov
sub
adc
lods
mov
adc
inc
jle
dec
addr16
and
js
push
nop
addr16
dec
mov
mov
repnz
pop
sub
xor
sbb
or
jns
jmp
sub
fnstenvw
aam
adc
pop
movs
mov
cmp
daa
dec
std
cli
push
lds
adc
push
fcomp
cld
enter
mov
mov
cmp
(bad)
pop
adc
xchg
call
fbstp
repz
test
sbb
push
fstp
xchg
pop
ret
jle
cmp
mov
inc
jae
adc
jmp
sbb
cmp
push
inc
call
xchg
ins
test
prefetch
mov
sub
pop
lea
mov
and
cdq
push
mov
pop
sbb
mov
jne
xchg
call
jo
stos
sbb
nop
cmps
jl
stc
loope
scas
dec
mov
jbe
test
xchg
dec
pop
jg
mov
ss
out
nop
inc
iret
mov
iret
(bad)
dec
gs
movs
scas
mov
sub
push
push
mov
mov
push
or
push
jge
xchg
les
add
mov
dec
mov
cs
dec
test
add
add
inc
popf
les
retf
aaa
push
and
data16
inc
out
mov
push
lods
push
inc
ja
rol
mov
lock
and
cmovbe
xor
stos
in
daa
xlat
inc
cmp
cmps
sbb
xor
push
mov
dec
add
jge
int
out
jge
xor
mov
mov
nop
sub
call
aad
push
sbb
push
xchg
shl
out
sahf
fwait
into
push
or
ret
out
jb
mov
es
test
movs
ins
xchg
test
ds
sbb
fwait
scas
call
sbb
sub
pop
sub
mov
mov
jmp
mov
cmp
mov
aad
hlt
inc
repz
pop
popa
mov
mov
xlat
mov
mov
dec
dec
dec
mov
into
adc
fcom
add
add
scas
cmps
jmp
adc
or
adc
push
and
pop
xor
mov
jmp
push
das
inc
adc
retf
jne
mov
push
sti
mov
outs
push
sub
neg
add
xchg
push
fs
and
lods
mov
cdq
stc
shl
cmp
jmp
sbb
push
mov
push
sbb
fadd
xor
pusha
and
mov
ja
sbb
retf
sub
add
mov
mov
push
mov
shl
jnp
and
int3
scas
imul
movs
adc
adc
movs
shr
aam
inc
xchg
jnp
xchg
inc
out
jne
jno
(bad)
and
sub
movs
and
mov
inc
test
sbb
pop
loope
das
and
mov
nop
jne
data16
mov
fcmove
je
xor
and
add
(bad)
xchg
lock
mov
in
loope
jne
pop
ds
sub
ins
sub
mov
loopne
(bad)
lods
pop
loope
sub
repz
leave
mov
pop
push
xlat
cdq
push
sbb
aad
and
(bad)
push
xchg
shr
ds
das
fisttp
pop
adc
repz
fxch
mov
(bad)
pop
add
xchg
xchg
scas
rcl
pop
or
les
and
pusha
pop
cmp
push
or
sbb
ret
cmps
add
adc
jne
stc
mov
mov
inc
sbb
add
imul
add
push
cmp
xchg
lahf
out
xchg
les
repz
sti
ins
sub
jp
je
pop
sub
repz
mov
movs
cld
scas
scas
cld
dec
add
and
hlt
mov
pusha
movs
mov
jne
mov
pop
adc
icebp
xchg
jbe
cmp
shl
ret
xchg
dec
cmp
(bad)
nop
and
pop
(bad)
repz
out
jg
push
pop
mov
push
cmp
xlat
cmp
jo
jle
or
mov
mov
inc
push
inc
das
movs
call
out
shr
lahf
(bad)
fwait
stos
aam
pop
sub
lahf
lds
sub
sbb
sub
cmps
aam
out
call
aas
xchg
sbb
cmp
inc
ss
pop
and
in
maxps
jo
jo
pop
repz
movs
jecxz
inc
sub
(bad)
stos
iret
lods
(bad)
(bad)
dec
aas
je
or
xor
jne
lahf
icebp
mov
pop
push
cmp
dec
or
je
or
mov
xchg
aam
movs
shl
jmp
std
cwde
cmps
(bad)
js
pop
jge
jl
fwait
into
data16
push
out
enter
mov
sti
push
stos
aad
push
add
sub
clc
mov
mov
into
fcomp
or
in
mov
or
jl
sbb
ds
add
fdivr
shl
int3
in
jmp
fwait
jmp
jb
pusha
cmps
leave
mov
and
mov
popf
jg
std
scas
lds
hlt
mov
or
fwait
cmc
add
pop
pop
xor
call
cld
xchg
scas
fwait
ret
jmp
add
jmp
jge
pop
adc
movs
test
inc
pop
pop
cmp
mov
jmp
lock
call
movs
jmp
dec
loop
jnp
pop
and
das
push
xor
mov
lods
int3
cmps
lock
sahf
mov
dec
add
push
dec
pop
cmps
fsub
push
add
or
ins
or
or
mov
loope
(bad)
movs
retf
mov
das
pop
and
and
es
push
add
daa
ins
or
push
outs
add
or
neg
and
ret
test
ins
sub
aad
adc
push
adc
lods
pop
cmovae
(bad)
gs
add
cdq
in
jecxz
(bad)
call
pop
cmp
mov
pop
adc
icebp
or
xor
and
into
xchg
push
cmp
rcl
or
inc
and
push
daa
bound
xchg
movs
mul
jg
jp
dec
or
ja
cmc
lahf
in
mov
xchg
ret
nop
rol
and
repz
iret
popf
ror
mov
jb
jge
pop
add
pop
cmp
mov
loopne
int
in
hlt
scas
fisttp
or
jns
popf
jnp
mov
dec
jmp
inc
ret
jecxz
int
jno
jns
dec
sar
sub
retf
lods
int3
pop
aas
fist
stos
icebp
test
mov
pop
cs
pop
call
xchg
mov
sub
cmps
out
add
mov
adc
xchg
cmp
outs
jbe
(bad)
mov
cdq
fstp
xchg
cld
xchg
and
retf
sbb
add
mov
test
ja
dec
pop
fist
adc
inc
sbb
xchg
(bad)
scas
out
mov
pop
and
adc
mov
mov
or
xchg
(bad)
imul
scas
ret
into
mov
mov
clc
xor
pop
cmp
xor
popa
cmp
push
call
add
mov
neg
mov
scas
jmp
ret
mov
mov
fmul
aad
les
addr16
fs
push
lahf
cmps
iret
adc
mov
scas
stos
int3
mov
cwde
fld
pop
jmp
rcr
push
or
test
xchg
mov
inc
add
sbb
movs
cmps
in
mov
jl
mov
loope
cmp
pop
inc
int3
xchg
stos
(bad)
push
pop
push
xor
pop
mov
xchg
les
jg
pop
inc
xor
xchg
inc
cmp
lahf
and
imul
push
sbb
sahf
pop
(bad)
mov
jmp
lock
fld
(bad)
xchg
push
out
shr
(bad)
cmp
xchg
retf
mov
cmp
adc
(bad)
popa
popf
movs
cli
test
mov
mov
lahf
inc
cmp
xchg
jecxz
ins
sub
push
adc
addr16
(bad)
mov
outs
loop
xor
jecxz
test
(bad)
jb
inc
(bad)
loopne
mov
call
xchg
mov
pop
or
sub
in
aad
mov
call
sub
and
xchg
(bad)
mov
fdivr
call
mov
mov
jo
bound
das
and
jae
cmp
jns
and
test
xchg
cmc
xchg
jae
inc
add
pop
sbb
and
jl
ins
adc
jns
push
(bad)
jp
pushf
retf
loope
iret
xchg
xor
and
cmps
aad
retf
xchg
jae
push
add
in
adc
xor
jae
data16
cwde
imul
add
adc
mov
call
mov
pop
cmc
popf
jg
lods
shl
xor
pop
bound
ins
cmp
es
ret
add
pop
leave
mov
dec
sub
test
mov
add
xor
inc
or
ins
loopne
or
outs
or
into
jnp
pop
sar
mov
hlt
jne
jb
(bad)
pcmpgtb
or
mov
cmps
out
clc
jl
fs
adc
cmp
jno
cdq
fimul
push
sub
pop
dec
mov
outs
sub
(bad)
lods
stc
je
inc
test
aad
stos
iret
in
add
sub
jno
jmp
int3
mov
jo
jg
xor
ss
sub
xor
mov
retf
mov
cmps
jmp
push
push
addr16
xor
push
add
pop
cmp
and
jp
or
mov
jge
pop
sub
out
adc
dec
cld
jbe
jge
js
jg
gs
(bad)
dec
or
xor
inc
inc
add
push
sbb
pop
pop
imul
es
dec
xor
into
test
lods
int3
test
dec
das
cmc
jl
pop
cmp
lds
mov
dec
aaa
dec
sub
xchg
retf
mov
sbb
mov
adc
cmp
inc
xchg
(bad)
mov
cwde
(bad)
xor
push
xchg
mov
lahf
scas
repnz
push
push
retf
mov
sub
or
(bad)
mov
push
jno
test
sub
and
data16
jg
cmc
test
push
mov
out
mov
fnstcw
pusha
ret
popf
xor
jae
mov
xor
ja
sub
jmp
int
mov
(bad)
lods
mul
inc
and
jae
leave
xchg
ret
push
ficom
push
in
fld
sub
outs
xchg
test
jmp
push
sbb
xchg
xor
sub
scas
xlat
fs
or
imul
or
jmp
clc
adc
out
xor
or
or
mov
xchg
mov
retf
imul
pushf
repnz
test
sub
xor
xchg
mov
cmp
sub
out
sbb
lods
mov
fstp
scas
(bad)
add
jns
nop
lock
jmp
cdq
stos
xchg
(bad)
cwde
cli
mov
sub
icebp
or
jae
dec
xchg
sbb
jmp
dec
adc
inc
sbb
push
ficom
inc
or
jae
fld
jno
jne
in
xchg
rcr
gs
inc
pop
and
cmp
(bad)
outs
xor
outs
jecxz
into
mov
cmp
push
pop
mov
mov
js
pop
div
cmp
jmp
movs
(bad)
fwait
hlt
ficom
mov
mov
dec
in
shl
cmp
scas
mov
mov
mov
cmps
loope
fisttp
clc
sub
add
sbb
in
adc
mov
or
add
push
sbb
je
jne
push
xchg
(bad)
ss
jmp
icebp
pushf
mov
popf
jl
pop
and
std
push
and
dec
cmps
(bad)
fiadd
push
out
xchg
ror
sbb
mov
sahf
cmps
out
pop
pop
sub
dec
sub
mov
push
add
inc
loop
jle
jl
adc
cmp
retf
out
mov
popf
fsub
and
jecxz
mov
cmps
movs
into
mov
add
je
imul
je
adc
cmp
loopne
ss
inc
cmp
jb
xchg
mul
mov
out
imul
jo
mov
mov
mov
pushf
cmc
mov
retf
mov
imul
aaa
inc
add
add
xor
xor
pop
push
xchg
mov
mov
mov
fwait
mov
inc
adc
mov
adc
scas
jecxz
movs
cld
ins
or
ins
and
push
fidivr
pop
fimul
and
data16
sbb
jl
dec
add
jp
xor
sahf
ret
daa
ins
in
loop
pusha
add
imul
cmps
fsubr
jnp
call
jno
pop
loopne
in
mov
in
(bad)
int3
rcr
sbb
add
xchg
test
cmp
ins
sbb
dec
push
arpl
stos
into
mov
cld
add
movs
mov
push
add
push
or
cmp
gs
in
test
bound
dec
adc
cmp
cmc
pop
add
je
out
(bad)
pop
adc
and
dec
aam
jge
sahf
std
pop
aas
cld
jne
jg
neg
xchg
jbe
je
or
aam
std
aas
push
pop
adc
es
mov
hlt
test
xchg
not
ficomp
or
pop
(bad)
in
push
sbb
fldcw
int
xor
fs
shl
pop
and
xchg
mov
mov
pop
adc
iret
popw
cs
xor
test
fwait
rol
repnz
lahf
dec
push
pop
xor
fs
cmp
jg
inc
jb
std
inc
or
(bad)
frstpm(287
inc
aaa
push
gs
je
cdq
daa
pop
push
pop
pop
add
inc
or
xor
retf
jmp
out
sub
push
add
inc
and
retf
sub
ret
mov
dec
es
in
stos
into
movs
out
cmc
test
xchg
mov
js
outs
jecxz
int
call
push
push
jbe
lahf
ja
xchg
aad
stos
dec
pop
pop
(bad)
inc
add
in
jnp
sub
les
cdq
icebp
mov
dec
and
call
dec
cmp
inc
xor
xor
clc
push
fsub
sbb
mov
push
loop
add
mov
rcr
or
retf
xor
out
fild
push
jmp
iret
(bad)
test
dec
xor
ss
cmp
xor
dec
call
push
jl
ret
lods
jmp
xor
in
sbb
cmp
pusha
scas
(bad)
mov
call
pop
jbe
pusha
adc
push
mov
xor
lea
add
cmps
(bad)
mov
out
test
mov
in
lods
fbld
adc
sub
xor
and
pop
sbb
sahf
aam
call
mov
jns
cmps
arpl
je
push
add
repz
imul
inc
push
add
sbb
mov
cmps
dec
repnz
push
call
sub
cdq
cli
jecxz
xchg
stos
fidiv
pop
adc
mov
mov
pop
or
repnz
fld
and
sbb
sub
call
jmp
xchg
cld
xchg
lds
dec
das
pop
ja
mov
movs
out
mov
jo
les
or
fmul
in
mov
sahf
sbb
or
jo
xchg
lods
pop
sub
push
push
movq
xor
cwde
fdiv
inc
add
inc
adc
mov
test
imul
add
sub
scas
xlat
mov
mov
cmps
stos
shl
leave
mov
xchg
fmul
(bad)
cmp
out
iret
fwait
out
jae
mov
xchg
arpl
mov
mov
pop
loop
pusha
loop
jl
imul
mov
int
arpl
jle
mov
and
cmp
mov
and
les
pop
loope
ds
push
or
push
in
xchg
add
mov
dec
cmp
dec
or
dec
out
jmp
jmp
xor
jmp
jl
dec
cs
add
pop
or
xchg
cmp
sub
ss
aad
push
and
(bad)
outs
or
inc
mov
out
push
pop
pop
lea
xor
sahf
sti
in
out
add
fidivr
add
std
int3
cwde
ret
mov
push
ss
inc
inc
add
icebp
nop
retf
cdq
sub
ins
pop
jge
add
pop
pop
jg
or
jbe
lahf
clc
jns
xchg
hlt
(bad)
jae
jno
pop
pop
out
sti
popa
es
outs
lds
cli
mov
xchg
(bad)
mov
sub
add
lods
hlt
mov
mov
mov
aas
outs
push
jmp
imul
or
sub
jo
jp
sub
jns
pusha
aas
inc
scas
mov
movs
scas
cmps
popa
loopne
leave
mov
pop
jg
repnz
xor
imul
call
xor
push
adc
mov
pop
xor
repz
leave
fwait
stos
shr
mov
pushf
fwait
movs
pop
sbb
sbb
adc
dec
aas
inc
and
jl
pop
push
(bad)
retf
cdq
dec
xor
out
pushf
cmp
inc
std
jo
js
push
int3
mov
pop
xor
das
and
fistp
scas
out
dec
and
inc
aam
jae
pop
and
or
fisubr
or
push
add
int
xlat
add
push
cmp
jo
pop
or
adc
inc
xchg
retf
enter
js
call
sahf
cmp
sub
and
adc
jle
mul
or
xchg
sub
xchg
retf
dec
out
out
lea
and
cdq
ret
mov
sub
add
pop
cmp
and
stc
cwde
ret
test
lahf
or
xor
or
je
push
mov
int
sbb
les
pop
adc
mov
ret
mov
sub
ss
cmp
fwait
cmps
(bad)
stos
shr
inc
pop
push
sub
lods
sub
push
xor
out
out
jmp
or
js
ins
out
adc
sub
and
(bad)
sub
push
mov
mov
or
jb
mov
xor
cwde
mov
mov
jnp
nop
aaa
sub
ds
xor
mov
icebp
sub
xor
and
push
jge
nop
icebp
lahf
mov
push
jg
push
stc
push
mov
mov
fld
fsubr
pop
pop
loope
push
int3
dec
xor
add
xchg
icebp
mov
or
mov
cmp
enter
add
sahf
(bad)
mov
into
movs
daa
jl
mov
xchg
and
jle
pop
cmp
mov
loop
loope
gs
arpl
xor
dec
and
leave
push
loopne
fld
loopne
ficom
out
xchg
(bad)
mov
ret
adc
sbb
retf
push
push
pop
cld
xchg
dec
add
cmps
loopne
repnz
or
fld
in
lea
jae
pop
and
mov
jns
addr16
das
pop
sub
mov
repz
dec
sbb
push
sbb
sbb
in
(bad)
clc
mov
mov
xlat
popf
lds
je
sahf
jbe
arpl
pop
or
push
xor
or
xor
sub
or
pop
lds
push
mov
or
jne
in
cmp
xchg
inc
xchg
mov
pop
pop
xor
mov
jnp
push
pop
or
sub
push
loop
fisttp
dec
sub
inc
test
aam
cmc
(bad)
lds
sbb
inc
shl
sbb
shr
hlt
mov
ret
sbb
pusha
push
aas
cmp
xor
addr16
fmul
pop
cmp
xor
cmps
aaa
cmc
pusha
add
lds
fsubr
je
sub
inc
or
dec
and
add
xchg
jnp
inc
and
add
ja
xor
(bad)
or
add
cmp
outs
dec
adc
arpl
fs
(bad)
icebp
ins
or
js
adc
into
dec
loop
hlt
mov
(bad)
ror
push
daa
xchg
fdivr
xor
scas
cld
mov
jno
lahf
std
stos
std
dec
out
xchg
in
mov
and
dec
pop
add
lods
enter
adc
outs
add
xor
sbb
dec
or
jle
mov
bound
inc
or
mov
lahf
xlat
jns
(bad)
mov
movs
call
repz
dec
add
call
clc
sbb
or
jo
jle
xchg
push
push
or
push
into
cdq
scas
ins
out
fwait
mov
jae
ins
sbb
inc
mov
fstp
gs
mov
xchg
push
fild
sub
pop
or
mov
and
or
dec
pop
or
adc
leave
sbb
popa
jecxz
push
sti
xchg
scas
aad
push
adc
lods
scas
out
jecxz
mov
adc
adc
outs
or
loopne
out
adc
pop
adc
inc
cmp
sbb
push
dec
mov
in
xchg
hlt
push
mov
out
punpcklwd
es
mov
ss
push
xchg
test
test
push
mov
movs
mov
mov
sub
pop
xor
mov
mov
in
dec
push
push
xor
mov
mov
dec
add
pop
push
mov
or
leave
scas
enter
inc
and
push
es
nop
call
mov
ja
xchg
neg
jno
inc
mov
sub
mov
mov
aam
sub
loope
clc
add
(bad)
enter
stc
mov
push
add
push
xor
in
stos
jecxz
hlt
out
aam
(bad)
in
into
stos
adc
xchg
les
xor
jbe
and
test
popa
add
retf
push
sbb
inc
sbb
test
push
jb
outs
call
lahf
jg
pop
and
push
pop
adc
imul
(bad)
(bad)
test
dec
sub
add
loop
int
call
test
jbe
arpl
outs
or
mov
test
cmp
outs
dec
cs
sahf
outs
or
add
addr16
sub
sbb
pop
sub
add
stos
ins
cs
sets
pop
jg
adc
jo
repz
cmp
bound
sahf
rcl
gs
fnstsw
aaa
mov
lods
ret
leave
stos
push
daa
xchg
sar
push
dec
sbb
in
jne
pop
adc
aad
arpl
shr
cdq
(bad)
pop
dec
bound
dec
add
xor
cwde
mul
mov
bound
inc
sub
(bad)
js
pop
adc
(bad)
nop
sub
lock
or
out
loope
or
mov
fwait
icebp
stos
clc
mov
mov
test
test
jnp
ret
movs
aad
jmp
ret
mov
jnp
dec
add
mov
adc
fwait
sti
call
in
mov
in
mov
inc
sub
fwait
stc
mov
out
mov
mov
outs
add
dec
or
js
inc
mov
or
push
sbb
push
sub
in
jnp
dec
out
dec
sub
add
sub
push
push
adc
add
inc
push
fs
push
in
sbb
cmps
int
sbb
dec
mov
pop
or
mov
icebp
pop
cmp
inc
jmp
jg
xor
mov
sub
xchg
imul
jle
pop
sbb
stos
xchg
repz
jae
sbb
jnp
or
push
xor
xchg
mov
push
inc
adc
push
adc
inc
cmp
mov
cmc
cmps
xor
(bad)
les
ret
hlt
cmp
out
jle
xor
fiadd
not
int3
mov
or
push
sbb
inc
icebp
xchg
sahf
mov
fisubr
adc
data16
cmp
jo
in
data16
mov
xor
les
js
idiv
inc
shl
shr
fild
mov
pop
lds
cli
cdq
xor
jno
push
pop
fcom
bound
repnz
jl
cmc
mov
jmp
ss
scas
je
sar
test
leave
test
jle
mov
jmp
jns
loopne
xor
aaa
fimul
stos
jecxz
pop
sbb
in
pop
sbb
in
jge
xorps
sahf
jge
adc
leave
lahf
fmul
push
(bad)
push
jnp
retf
pop
pop
sbb
cmps
xchg
ret
or
adc
inc
sbb
xlat
mov
(bad)
lods
mov
loope
aas
or
xrelease
call
cmps
(bad)
push
cmp
dec
or
mov
enter
stc
mov
fsubr
pop
jle
clc
add
stos
jo
jmp
xchg
iret
cs
lods
sub
adc
jge
mov
out
sub
pop
hlt
sahf
lods
out
pop
sbb
jne
cdq
xchg
ret
push
xor
cwde
imul
dec
fbld
scas
out
pop
loop
jb
ror
xchg
es
in
and
and
test
scas
outs
add
pop
mov
jo
or
xor
test
sbb
mov
ficom
pop
jb
mov
add
(bad)
and
pop
aaa
push
ins
(bad)
cmps
aad
fwait
icebp
cmp
into
mov
or
stos
fwait
clc
sub
shl
push
in
xor
ret
in
mov
out
mov
in
jno
xor
mov
icebp
xor
mov
pop
fmul
fcom
adc
pusha
cmps
fild
ds
int
push
adc
mov
and
lods
iret
fwait
jmp
stc
cmp
loopne
or
xchg
sti
scas
mov
in
jg
out
xchg
xchg
idiv
push
enter
daa
dec
cmps
ret
inc
pop
cli
test
xchg
sub
dec
shr
or
(bad)
(bad)
mov
sbb
mov
and
add
mov
jge
lods
and
ja
ror
sar
call
ss
movs
iret
and
out
dec
add
pushf
xchg
(bad)
jp
push
ins
iret
xchg
cmps
push
jmp
out
int
mov
ss
int3
mov
lahf
mov
xor
aad
imul
ins
aad
jnp
pop
dec
mov
xchg
imul
pop
cmp
cmps
dec
add
(bad)
mov
ss
adc
pop
cmp
lahf
mov
sub
iret
jne
jmp
sbb
push
and
xor
stos
popa
and
dec
repnz
or
pusha
retf
daa
pop
cmp
mov
mov
jae
pushf
arpl
in
fnstcw
lods
(bad)
pop
sbb
mov
sub
pusha
adc
cs
test
cmp
xchg
fcomp
aad
lahf
int3
and
xchg
cmps
mov
ss
shl
cdq
repz
enter
xchg
mov
(bad)
and
iret
jne
and
jmp
fiadd
retf
fcomp
movs
mov
jge
add
lods
call
rcl
jecxz
mov
or
popw
pop
xor
mov
mov
push
or
mov
mov
add
out
lea
xchg
push
ds
xchg
mov
dec
or
ret
daa
inc
not
call
imul
add
mov
shr
adc
stos
and
mov
test
jbe
les
sbb
cmps
cdq
int3
cmp
mov
sub
mov
lds
add
jle
sbb
jge
mov
daa
imul
into
sub
not
ins
(bad)
mov
xchg
(bad)
push
add
jno
mov
std
test
out
xchg
ins
push
adc
adc
imul
sahf
cld
xor
stos
mov
and
xchg
xchg
sar
or
mov
mov
idiv
jge
cli
inc
and
mov
dec
mov
dec
sbb
sub
imul
imul
mov
add
in
imul
and
and
popf
(bad)
loopne
add
dec
out
test
mov
pop
adc
jo
clc
inc
and
outs
or
xchg
call
push
fcomp
sub
leave
jp
ret
mov
xchg
popa
(bad)
mov
sub
xchg
imul
arpl
pop
xor
les
pop
xor
call
call
xor
xchg
inc
or
adc
xchg
test
imul
int
mov
sub
inc
jp
in
pop
loope
test
ss
(bad)
mov
(bad)
out
lods
outs
sub
mov
dec
sub
jb
mov
cdq
hlt
xor
(bad)
sub
cld
dec
push
out
mov
inc
scas
retf
fnsave
cs
iret
movs
xchg
sar
cmp
inc
in
mov
pop
pop
call
and
jnp
mov
stos
mov
xchg
xchg
dec
xor
pop
cmp
je
jmp
cmp
inc
into
movs
inc
push
push
push
mov
push
shl
leave
mov
dec
scas
out
sub
cdq
addr16
cmps
sahf
int
fst
shl
xchg
jecxz
and
stos
push
adc
in
psubsb
mov
jo
jmp
xchg
cmc
aas
push
aam
mov
cdq
popa
cmp
mov
sbb
add
jo
in
add
mov
fadd
jne
stos
mov
cdq
stos
leave
and
rcl
sbb
sbb
jecxz
adc
outs
mov
pop
ins
aam
(bad)
jmp
and
mov
sbb
fcomp
dec
pop
enter
in
xchg
rol
les
mov
or
xchg
int3
pop
or
push
cs
sub
xchg
movs
(bad)
popf
in
push
aas
cld
xchg
fs
jecxz
mov
jne
clc
lods
lods
iret
pop
cmp
scas
jnp
retf
mov
add
inc
int
mov
push
rcr
loopne
add
adc
movs
(bad)
dec
and
lds
leave
mov
pop
mul
pop
adc
data16
sbb
mov
aas
loope
imul
(bad)
lods
ins
sub
jb
movs
push
cmp
jge
test
cmp
pop
mov
push
push
fnstsw
cmovp
test
fiadd
pop
pop
std
test
cmp
stc
inc
adc
fwait
inc
or
pop
icebp
mov
or
pushf
fdiv
mov
dec
rol
xchg
nop
repz
xor
movs
push
in
and
push
cmp
(bad)
mov
out
xchg
stos
in
jns
in
movs
retf
jno
jecxz
pushf
icebp
cmp
stos
call
sbb
in
mov
add
mov
jae
jmp
mov
lds
adc
clc
cmp
lods
gs
pop
inc
ficomp
mov
push
or
in
pop
pop
in
xchg
popf
cld
cmp
sti
cmp
lods
leave
cmp
xchg
adc
je
hlt
sub
mov
ret
mov
fbstp
rcr
in
push
jecxz
xchg
rcl
(bad)
popa
or
mov
out
jp
sbb
add
or
sbb
pop
shl
ja
repz
in
dec
sbb
push
test
pop
jne
cmp
push
cmp
mov
(bad)
fwait
mov
dec
sbb
dec
mov
mov
pop
stos
enter
lea
push
jmp
scas
movs
(bad)
push
xor
push
mov
stos
pop
jns
push
jne
mov
mov
xchg
in
push
adc
dec
and
xchg
xor
pop
in
mov
jge
push
pop
rol
cmps
lds
jle
popf
xchg
out
jp
or
mov
cmp
repz
pushf
stc
outs
aaa
jmp
xchg
jecxz
xor
test
nop
mov
inc
and
in
dec
or
push
iret
xchg
xchg
mov
cmp
int3
dec
xor
test
mov
ins
fadd
aad
imul
pop
cmp
mov
in
fs
(bad)
xchg
shl
imul
inc
or
sub
push
in
movs
jg
and
retf
and
test
ret
mov
jbe
add
lods
into
outs
push
jecxz
mov
pop
sbb
mov
and
(bad)
aaa
leave
mov
jae
cld
and
mov
mov
jp
ret
call
push
shl
hlt
xchg
scas
fimul
(bad)
fnsave
into
xchg
stc
lods
shl
fistp
pop
jp
xchg
popa
sbb
pop
test
pusha
cmp
pop
sub
loope
clc
cmp
mov
add
sti
xchg
mov
(bad)
lds
mov
in
mov
dec
sub
pusha
sbb
imul
dec
test
jle
ret
mov
sub
mov
cmps
retf
ja
loopne
(bad)
int
dec
fisttp
mov
push
sbb
dec
out
arpl
and
shl
stc
pushf
push
or
fisubr
jmp
arpl
xchg
imul
ins
retf
enter
cwde
lods
clc
sub
lods
into
dec
add
jg
ror
pushf
mov
push
xchg
imul
jo
lock
jecxz
add
jne
jmp
std
ds
mov
ja
aas
jl
rcr
mov
leave
stos
xchg
fisub
bound
jle
(bad)
xor
mov
add
mov
add
rcl
jo
push
gs
cmp
xchg
adc
push
sbb
fmul
and
mov
push
retf
push
add
jb
mov
add
mov
pop
aaa
les
push
jl
leave
ja
ds
mov
pop
fs
jge
mov
jmp
gs
sbb
jmp
and
mov
iret
dec
and
and
cmc
xor
xchg
or
jb
(bad)
(bad)
xchg
shl
adc
enter
sub
mov
add
scas
mov
out
sbb
enter
call
test
push
rcr
mov
add
sub
jl
push
ins
cli
lahf
dec
push
in
mov
leave
mov
sub
jg
into
or
imul
mov
or
icebp
cmp
pushf
jl
cld
test
push
sbb
push
loopne
and
mov
pop
xor
pop
xchg
int3
push
add
or
in
cwde
cld
sub
mov
es
test
push
xchg
mov
mov
loopne
daa
cs
mov
pop
xor
test
jae
ret
cmp
cld
and
scas
nop
fsub
cmp
dec
fnsave
cld
xchg
xchg
dec
ds
cdq
mov
xchg
xchg
icebp
inc
push
xor
dec
out
cmp
add
mov
inc
or
dec
sbb
inc
and
lahf
pushf
jmp
(bad)
loop
fs
test
add
fistp
xor
lods
mov
or
cmc
lea
lods
jle
adc
mov
aam
mov
jbe
or
sub
imul
or
inc
fist
and
pop
mov
fistp
out
and
iret
stos
mov
mov
push
pop
mov
pop
cmp
popf
in
push
cmp
pop
ficomp
xchg
jne
add
in
sbb
movs
jle
pop
aas
sar
out
test
in
pop
fist
loope
jle
xor
cmps
pusha
or
dec
or
mov
jbe
in
mov
push
adc
push
mov
dec
and
das
inc
mov
pop
add
movs
mov
scas
mov
jle
call
nop
cli
dec
or
movs
in
inc
adc
cli
sub
std
or
jecxz
dec
mov
test
fild
jae
mov
pop
jge
mov
jle
les
inc
ficomp
jmp
addr16
xor
mov
sbb
mov
shl
fwait
out
and
test
and
cmp
popf
fiadd
ror
mov
push
idiv
iret
scas
xchg
sti
pop
adc
lea
scas
fisttp
cmps
fdiv
or
repz
mov
dec
iret
mov
cli
mov
ja
xor
shl
shr
stos
jecxz
dec
sar
in
mov
cmps
fsub
pusha
not
not
mov
cmp
out
push
sbb
lods
mov
pop
cmp
jge
mov
in
lea
jns
fistp
adc
mov
inc
aas
adc
int
xor
test
push
jnp
movs
ins
cmp
cdq
call
aam
or
inc
fsub
mov
fdivr
int3
mov
cmc
mov
aam
ins
movs
retf
cmp
fisttp
jecxz
jp
xor
xchg
(bad)
stos
jne
sti
and
test
sbb
ror
cld
mov
sti
dec
or
cmp
cmp
pop
cli
mov
mov
sub
mov
jo
cli
and
or
out
push
not
xchg
jne
enter
pop
cmp
and
fild
addr16
pop
mov
js
rol
or
adc
pop
mov
inc
loopne
mov
jbe
pop
inc
cmc
cmps
pusha
adc
mov
mov
xchg
gs
sub
and
jge
jmp
xchg
ret
push
lds
in
xchg
nop
icebp
add
mov
daa
pop
movs
into
add
lods
jmp
pop
push
fsub
out
lea
sub
cdq
mov
push
rol
jbe
std
imul
int
mov
mov
inc
sub
call
mov
or
mov
xor
arpl
xor
mov
jg
pushf
mov
inc
psadbw
lods
or
xor
xchg
mov
dec
and
lea
(bad)
ja
push
pop
int
popf
rcr
test
ret
dec
daa
pop
je
imul
ja
hlt
pop
sbb
cmps
fs
inc
and
cdq
loope
inc
sbb
jle
pop
je
cdq
mov
or
test
dec
sbb
jmp
sbb
pop
mov
xor
aam
cmp
dec
sub
(bad)
mov
jmp
pop
retf
mov
in
ins
add
dec
dec
icebp
mov
cmp
arpl
mov
retf
push
xor
jge
mov
in
(bad)
fbstp
movs
into
dec
das
xor
inc
xor
add
mov
inc
and
or
xor
pop
adc
dec
loope
test
bound
push
data16
mov
and
cmps
mov
xchg
dec
adc
mov
out
imul
jle
ret
cmp
int3
bound
in
movs
test
daa
jb
int
sub
jle
ret
sahf
out
pop
lods
shl
inc
sar
out
aam
mov
into
sub
fld
pop
cmp
je
pushf
fdiv
into
xchg
adc
ret
pop
aas
das
mov
rcl
mov
pop
fmul
sbb
mov
jo
out
push
xor
data16
sub
push
sbb
gs
and
leave
sub
enter
daa
sbb
test
pushf
les
stc
lea
loopne
and
arpl
stos
test
xor
repz
xor
ja
add
mov
ja
add
push
push
jae
xor
mov
sub
xor
ins
mov
jl
shl
mov
aaa
je
jmp
rol
or
xchg
sahf
out
pop
(bad)
stos
js
cli
sbb
sub
movs
fisttp
out
mov
in
arpl
add
leave
movs
ins
pop
aaa
je
mov
(bad)
fist
pop
and
mov
ds
jne
sahf
pusha
cmp
mov
or
xlat
aaa
cld
mov
nop
std
dec
add
pop
in
xchg
pop
dec
lds
jmp
mov
sub
outs
shl
scas
call
stc
pop
cmp
push
push
cs
outs
sar
mov
sub
pushf
inc
adc
jae
stos
imul
data16
cdq
mov
sub
cmps
pusha
or
in
scas
mov
xor
adc
push
test
pop
pop
add
fnstcw
push
outs
scas
lds
dec
mov
mov
fmul
in
stos
cmps
ret
sub
mov
xchg
cld
dec
and
push
mov
or
adc
mov
scas
cs
mov
int3
inc
pop
sbb
stos
xchg
fisubr
sbb
es
neg
mov
push
cmp
lods
mov
push
sbb
leave
stos
call
movs
fwait
cli
adc
nop
call
retf
das
add
mov
out
xchg
lock
call
pop
adc
cdq
imul
dec
push
pop
fs
icebp
pop
pop
or
sahf
jmp
dec
icebp
mov
repnz
data16
test
push
sbb
dec
aam
inc
and
sbb
mov
adc
mov
cdq
fisttp
or
mov
fldenv
xchg
lahf
out
dec
mov
mov
loope
and
pop
mov
mov
sub
into
and
stos
gs
das
inc
fnstsw
fnsave
iret
xchg
push
pop
mov
sub
mov
or
cmp
pop
or
pop
(bad)
sahf
xlat
xchg
jne
enter
sub
int
pop
cmp
push
je
std
pop
push
std
mov
xor
pop
ds
call
nop
icebp
punpckldq
and
inc
and
out
xor
sbb
(bad)
and
shl
stos
rcl
test
fmul
inc
(bad)
movs
scas
out
or
cld
das
addr16
mov
sub
jbe
xchg
inc
pop
out
call
stos
into
ds
lock
fs
sbb
mov
retf
mov
add
inc
or
cld
sahf
dec
add
push
fisub
xchg
ficomp
out
test
pop
adc
mov
inc
cmp
hlt
xchg
out
dec
stos
enter
lock
and
dec
repnz
xchg
mov
push
out
lea
sbb
adc
mov
add
jmp
add
lock
retf
cmp
mov
push
cmc
mov
(bad)
and
nop
popa
xor
push
push
xor
dec
push
push
sub
cmp
ja
adc
inc
sbb
les
jmp
mov
mov
mov
pop
test
mov
ins
and
mov
bound
sbb
push
push
sbb
mov
fcom
cmc
xchg
jge
sbb
aaa
inc
lods
shl
pop
push
ficomp
add
pop
es
mov
inc
and
mov
sub
int
pop
cli
mov
lds
mov
add
xchg
push
mov
push
dec
xchg
minps
mov
sbb
outs
mov
xchg
sub
outs
pop
in
xchg
imul
push
push
xor
sbb
in
and
xchg
xchg
test
cli
xchg
addr16
dec
pop
enter
and
inc
mov
adc
jmp
pop
es
pop
cld
cwde
mov
or
test
adc
inc
fmul
fisttp
std
mov
cdq
rcl
rol
jae
js
test
mov
jp
daa
outs
or
mov
movs
rcr
cmc
inc
or
jecxz
shl
ss
cmp
inc
cmp
jl
inc
sub
iret
xchg
mov
mov
mov
es
sub
or
xor
loope
push
jle
push
stos
int3
cmps
in
jbe
inc
push
push
and
cli
cdq
jecxz
into
add
dec
ss
mov
xchg
mov
in
(bad)
add
fnstenv
pop
sub
nop
repnz
cld
addr16
std
jnp
push
cmp
or
leave
gs
dec
out
ins
sub
push
push
push
jecxz
fstp
ret
inc
adc
cmp
aaa
jo
popa
fidivr
clc
mov
mov
iret
lea
ds
ins
or
xchg
xchg
std
sahf
repz
sbb
cmp
inc
test
xor
pop
cmp
jo
push
or
adc
dec
in
adc
push
adc
xor
lahf
std
mov
les
xlat
jne
jecxz
loop
jmp
xchg
sub
(bad)
stos
rol
scas
rol
data16
mov
mov
add
aas
sahf
(bad)
pop
adc
mov
add
add
sbb
adc
cmp
rcr
in
adc
cmp
push
ds
fimul
inc
cmps
movs
lods
dec
add
pop
cmps
imul
aaa
int3
popa
cmp
pop
pop
push
ret
and
push
imul
and
stc
inc
adc
push
scas
int3
mov
fwait
mov
jl
jle
sbb
mov
div
push
push
push
shr
mul
fadd
movs
mov
call
in
mov
cmc
xchg
cli
ja
jmp
sbb
lock
ror
push
jmp
mov
sahf
xchg
rcr
call
dec
rol
inc
or
fcmovbe
adc
sub
popa
cs
adc
loop
sbb
rol
cdq
dec
mov
xchg
jne
pop
push
jne
out
pushf
clc
xchg
jg
mov
pop
sub
pop
data16
jle
scas
icebp
xchg
(bad)
xchg
loope
dec
xor
je
add
push
jle
adc
jb
pusha
div
adc
push
push
retf
outs
sub
not
(bad)
icebp
mov
inc
adc
aam
(bad)
xor
jge
push
rcr
add
stc
sub
mov
hlt
adc
mov
dec
adc
sbb
jle
imul
in
pop
push
jp
and
stos
leave
nop
sub
pop
lods
(bad)
mov
xchg
aad
dec
or
add
adc
or
std
mov
arpl
test
sahf
clc
xchg
rcr
mov
jmp
(bad)
xor
xchg
scas
lock
inc
sbb
jae
aam
cld
addr16
cmp
pop
sbb
nop
xchg
sti
mov
in
clc
fwait
test
popf
lods
clc
mov
arpl
jo
addr16
fadd
dec
or
push
jl
and
and
outs
mov
and
xor
into
pop
sar
inc
xor
and
adc
lea
aas
nop
sti
pusha
pop
and
fstp
(bad)
xchg
stos
cwde
ins
das
ja
add
adc
dec
adc
jae
out
and
outs
add
das
ja
pop
pop
dec
out
lea
loop
inc
pop
outs
xchg
aaa
add
and
cmovge
or
hlt
aaa
jo
sub
out
xchg
clc
addr16
pcmpgtb
pop
jmp
popa
add
dec
or
push
sbb
jge
push
test
sbb
sub
out
(bad)
xchg
fistp
aam
hlt
call
mov
ins
ss
xor
or
js
mov
add
adc
add
push
inc
sbb
push
adc
sub
test
imul
push
pop
in
mov
(bad)
loopne
mov
movs
jecxz
into
xchg
mov
and
pusha
push
and
jae
cmps
fbstp
in
cli
pop
out
ror
dec
mov
aaa
push
sbb
xor
add
inc
shl
or
jmp
dec
sbb
inc
mov
xchg
sar
loop
shl
hlt
mov
push
and
retf
outs
push
cmp
dec
add
ret
mov
xchg
jmp
out
jne
cdq
rol
adc
jmp
sub
push
push
adc
in
fidivr
mov
mov
inc
add
sbb
cmp
inc
aas
pop
ror
mov
mov
xor
dec
cmp
and
xor
das
inc
icebp
xchg
dec
push
push
jae
imul
inc
and
outs
sub
push
xor
xchg
mov
(bad)
loopne
repnz
fidivr
mov
loope
les
inc
and
inc
daa
inc
sub
jl
outs
add
ficom
jg
addr16
outs
or
pusha
push
ins
punpckldq
pop
xor
dec
sbb
cmp
dec
cld
mov
test
sahf
cld
test
mov
xor
sub
add
dec
cmp
and
push
lods
in
mov
push
push
scas
enter
mov
mov
into
xor
outs
fnstsw
je
call
ss
adc
jnp
push
xor
jmp
ja
jns
add
sahf
lds
mov
mov
scas
jg
repnz
fldenv
out
(bad)
test
mov
inc
test
xchg
int
adc
push
push
retf
or
inc
movs
mov
sbb
jecxz
leave
outs
retf
ss
imul
or
add
mov
movs
iret
call
mov
test
and
sub
cwde
cmc
test
pushf
in
in
sbb
and
adc
retf
push
mov
stos
pop
pop
jp
dec
std
sahf
sbb
jg
add
stos
in
scas
mov
jmp
(bad)
xchg
pop
pop
pop
aas
push
das
mov
popf
clc
mov
popa
mov
xor
pop
add
xlat
mov
xchg
mov
fild
push
or
sbb
retf
mov
mov
xor
dec
sub
cmp
cwde
cmc
(bad)
jmp
(bad)
movs
les
mul
movs
loope
(bad)
xchg
outs
out
and
fild
jecxz
sbb
jbe
out
(bad)
push
pop
pop
and
sbb
inc
mov
daa
call
test
pusha
daa
outs
adc
test
inc
xor
and
out
xor
push
pop
adc
neg
sub
and
gs
adc
or
inc
cmp
test
(bad)
fnstsw
jnp
inc
and
and
sub
xlat
scas
shr
adc
pop
xchg
fmul
fcmovbe
mov
mov
inc
fisubr
js
rol
imul
or
nop
stos
out
jb
inc
aas
pop
cmp
lods
inc
pop
xor
dec
xchg
(bad)
mov
push
mov
stos
imul
ret
imul
icebp
jb
xor
stos
shl
add
add
jecxz
fst
iret
lods
jno
icebp
xor
lahf
cmps
(bad)
daa
pop
movs
rol
jo
add
fidiv
cmp
imul
or
pop
ficom
jne
jmp
mov
stos
rol
arpl
and
call
(bad)
les
in
xchg
sti
pusha
mov
or
xchg
sar
fld
lods
in
pop
nop
aad
aad
fnstsw
fidiv
ss
popf
int3
pop
push
add
pop
adc
xor
imul
adc
loop
jmp
repz
in
popf
fist
(bad)
stc
sub
bound
add
inc
cs
xor
jmp
or
das
push
push
out
aaa
pop
cmp
cmp
pop
idiv
mov
sub
sbb
push
jl
daa
push
mov
scas
frstor
(bad)
lock
popf
mov
dec
lds
iret
jmp
call
lahf
shr
and
clc
mov
push
pop
sub
jle
outs
movs
leave
lods
call
mov
mov
xchg
mov
and
(bad)
jl
pop
sbb
push
(bad)
mov
pop
jl
inc
icebp
and
sub
(bad)
xchg
int3
xchg
movs
fist
cld
mov
in
test
ss
xor
fs
adc
dec
out
jns
inc
and
inc
or
in
jns
ja
hlt
stc
sub
push
or
inc
xchg
call
xlat
xchg
fdivr
xchg
lds
je
jbe
push
sbb
ret
test
and
cmp
add
popf
hlt
mov
les
shr
xchg
rcr
or
pop
adc
sti
xchg
aad
imul
retf
lahf
les
inc
and
cmp
sub
inc
add
dec
add
jp
je
push
enter
iret
xchg
cmc
xchg
xor
out
out
fstp
pop
adc
dec
sbb
data16
xlat
nop
fld
dec
sub
out
sbb
or
sahf
xlat
test
mov
sub
hlt
mov
adc
fnstsw
lods
hlt
mov
outs
pop
sbb
mov
popa
xlat
sub
sub
inc
loop
fsub
or
add
sbb
dec
add
jno
pop
add
fadd
mov
rcl
iret
call
push
shl
in
xchg
aam
retf
xchg
fimul
pop
jae
push
sbb
test
cld
xchg
fwait
hlt
lahf
cmps
sbb
push
and
adc
cmc
mov
lahf
ficom
dec
iret
lods
movs
or
fistp
in
movs
rcl
dec
or
in
test
mov
movs
int3
jmp
icebp
cmp
and
add
mov
lahf
imul
les
lods
sar
fs
push
xlat
jmp
les
pusha
loop
cmc
xchg
mov
sub
movs
out
push
inc
pop
imul
pop
cmp
je
fisubr
call
jge
mov
push
cmc
xchg
aam
ins
imul
into
mov
mov
and
(bad)
stos
(bad)
mov
fwait
(bad)
mov
adc
and
nop
cli
xchg
(bad)
mov
jmp
dec
xor
ret
sub
and
enter
loope
xor
into
mov
cmp
loope
aam
mov
imul
xor
mov
mov
inc
push
add
je
xor
outs
jmp
in
xchg
or
cmp
outs
out
xor
cmp
arpl
loopne
mul
jg
iret
js
popa
adc
jno
sub
sbb
push
pop
adc
or
mov
imul
cmp
loope
xor
dec
(bad)
and
and
rcl
ja
cmp
adc
test
std
test
popa
sbb
fst
nop
sti
cwde
fwait
call
adc
clc
push
inc
adc
inc
adc
sti
call
inc
sub
enter
movs
jmp
clc
pusha
sub
popf
repz
cmc
or
cmps
retf
jmp
jp
ret
mov
call
icebp
xchg
neg
jae
push
sbb
add
pop
sbb
mov
push
sub
lods
shl
rol
or
pop
jmp
adc
mov
mov
xchg
shl
sahf
fld
jae
pop
cli
fldenv
adc
ins
adc
add
(bad)
push
cmp
pop
call
imul
in
leave
test
cmp
nop
rcl
sbb
shl
adc
sub
dec
push
loop
stc
lods
lds
ins
xor
mov
cmp
(bad)
pop
sbb
xor
imul
lock
stos
inc
push
dec
sub
cld
lahf
clc
je
jns
fistp
inc
xor
call
mov
or
xor
aas
and
int3
push
jg
sbb
mov
int
in
scas
mov
mov
jne
(bad)
jo
bound
daa
nop
test
mov
xchg
jmp
into
xchg
inc
sub
lods
fstp
stc
inc
add
scas
cld
mov
repnz
jbe
shl
adc
packssdw
iret
dec
sbb
mov
fmul
dec
bound
pusha
or
mov
jo
hlt
sbb
adc
and
(bad)
pop
and
cmp
pop
mov
pop
xor
scas
popa
jno
jo
push
lds
jge
icebp
xchg
sar
dec
ds
jnp
daa
adc
ja
mov
jmp
adc
sbb
jmp
xor
sbb
xchg
mov
addr16
add
jmp
nop
add
dec
pop
aaa
xor
xor
hlt
mov
mov
xchg
cmc
lods
jmp
inc
sbb
mov
test
cmps
in
in
mov
dec
sbb
cwde
shl
fwait
mov
cs
mov
je
xor
add
mov
scas
sar
push
adc
lahf
repnz
mov
fistp
fsubr
pop
adc
and
and
add
mov
jmp
jle
jg
and
retf
test
mov
enter
sbb
pop
in
(bad)
mov
imul
mov
sub
rcr
es
xor
rcr
cmc
js
pusha
xor
push
sbb
xchg
hlt
cdq
push
jl
jb
mov
lods
fbld
dec
cs
add
inc
or
jmp
movs
fdivr
repnz
out
lods
scas
lods
mov
loop
les
adc
pushf
cmps
test
cmps
mov
ror
mov
arpl
dec
adc
push
jmp
sbb
out
xchg
cmp
jae
jae
std
(bad)
mov
bound
test
cmps
out
xchg
fst
sub
sbb
jmp
mov
out
(bad)
nop
jmp
jo
lahf
pusha
add
push
adc
enter
inc
cmp
mov
jns
mov
inc
inc
cmp
and
cwde
(bad)
daa
jae
add
ins
adc
ss
sub
adc
pop
adc
std
outs
ss
(bad)
xchg
xchg
lods
cmp
dec
sbb
sbb
mov
adc
jg
(bad)
mov
mov
xchg
mov
mov
rcl
mov
sub
cmp
push
jecxz
mov
(bad)
mov
mov
pop
cmp
add
push
jecxz
or
dec
sbb
adc
addr16
and
add
or
cmc
mov
xchg
cli
cdq
fsubr
ins
or
pop
imul
or
pop
in
in
mov
inc
or
in
scas
retf
cwde
ror
adc
(bad)
xchg
stc
mov
mov
adc
xchg
out
xchg
(bad)
lahf
rol
test
imul
or
aas
pop
es
sub
iret
xchg
cwde
shr
cmps
hlt
mov
inc
aas
sub
imul
add
pusha
add
into
scas
movs
shl
pop
jecxz
addr16
sbb
repnz
(bad)
mov
ins
sbb
out
mov
mov
les
lods
fst
scas
mov
and
adc
retf
fild
jmp
pusha
adc
xor
sbb
ret
mov
push
pop
mov
ins
xor
and
addr16
(bad)
dec
cmp
inc
daa
dec
add
push
sub
inc
das
loopne
pushf
iret
imul
lock
neg
in
loopne
int3
mov
jb
outs
or
aaa
call
arpl
(bad)
mov
test
xchg
cmps
ror
xchg
mov
jp
sub
lods
jmp
int3
lea
sub
mov
leave
mov
fstp
push
mov
jae
jbe
jne
and
call
fiadd
mov
xchg
into
jg
push
xor
pop
sbb
popf
cld
lahf
hlt
ins
mov
movs
ror
sub
pusha
sub
pop
clc
xor
jb
pop
add
pop
cmp
or
leave
jns
mov
push
jne
add
mov
cli
cdq
ret
dec
push
cmp
jl
xchg
fisttp
inc
cs
or
and
xchg
(bad)
xchg
xchg
(bad)
int
inc
sbb
pop
push
inc
sub
pop
sbb
cmp
add
adc
je
push
adc
mov
cmp
addr16
pop
cmp
dec
cmp
sbb
test
push
add
jno
pop
bound
jmp
fldenv
xchg
cli
cwde
sti
xchg
mov
sub
shl
pop
pop
or
cmp
pop
pop
jae
pop
jg
jo
jle
inc
adc
outs
cmp
pop
adc
pop
push
cmp
jp
pop
xchg
aad
repnz
mov
or
xlat
(bad)
imul
jg
shl
aad
fidivr
adc
imul
int3
lahf
int
out
fadd
das
push
xor
sti
mov
test
ret
xor
and
push
jge
call
pushf
int3
fnstcw
xchg
cwde
fstp
gs
inc
div
nop
jmp
popf
aam
(bad)
mov
cs
(bad)
rcl
inc
push
pop
cmp
les
cli
fwait
clc
arpl
daa
or
cld
mov
mov
arpl
ja
outs
ss
ficomp
iret
xchg
in
sahf
out
out
rcl
or
outs
sbb
mov
jle
jl
adc
dec
xor
push
sub
icebp
xchg
push
test
test
pop
jo
(bad)
nop
jmp
and
xor
add
mov
popf
in
lea
sahf
fstp
mov
or
pop
cmp
dec
or
mov
cmp
xlat
mov
mov
and
adc
imul
icebp
inc
movs
popf
jle
dec
push
jae
call
mov
scas
jns
ja
push
push
data16
fbld
jecxz
mov
or
sbb
inc
and
jl
jecxz
in
popf
mov
test
xchg
jl
pop
or
movs
jge
mov
xchg
mov
rol
lods
into
xchg
popa
das
je
je
mov
lods
aad
les
or
adc
les
mov
outs
loopne
loope
jbe
ins
or
in
cs
add
fdivr
cmps
mov
loopne
out
dec
stos
ins
jmp
repz
dec
or
pop
sti
mov
sbb
add
cld
inc
add
imul
push
inc
xor
xchg
jmp
lock
sti
mov
sbb
and
out
jmp
dec
and
div
pop
pop
cmp
ja
sub
add
jne
(bad)
jns
imul
inc
std
arpl
jge
popa
daa
outs
adc
ficom
shl
cmp
imul
call
jae
shl
inc
cmp
add
out
adc
ss
repnz
stos
jnp
lods
loope
(bad)
data16
mov
test
push
sub
or
jg
es
mov
mov
jg
ins
push
ja
lods
in
cdq
retf
mov
imul
ret
outs
test
fisttp
out
int
mov
add
inc
loop
xor
sbb
sub
dec
cmp
cmp
jbe
adc
push
pop
jae
pusha
add
test
mov
in
fdiv
stos
jmp
xor
and
jle
pushf
ret
stos
daa
pop
ss
daa
sub
xlat
jb
push
adc
imul
mov
dec
adc
add
gs
fsubr
push
ds
jp
data16
loop
mov
test
jecxz
or
inc
das
inc
or
mov
add
xchg
push
add
pop
cmps
fdiv
jecxz
in
leave
test
add
xchg
mov
nop
in
sub
leave
(bad)
popa
leave
pop
cmp
call
pop
mov
loop
nop
ret
jp
fisub
out
push
cmp
add
jge
out
and
test
aad
mov
fidivr
xlat
outs
loop
cwde
mov
sahf
push
and
jb
imul
pusha
push
inc
and
push
sub
bound
arpl
inc
cmp
cs
pop
or
popw
rcl
sbb
xlat
inc
cli
lods
adc
test
xor
and
mov
(bad)
mov
inc
shr
and
sti
call
xchg
sub
pop
in
fwait
sub
cs
movs
add
cmp
dec
jns
and
sub
jge
push
sub
inc
sub
pusha
sbb
pop
cmp
pop
inc
pop
popf
retf
sbb
sbb
add
lahf
loop
leave
daa
loopne
cmps
mov
mov
mov
or
aam
push
lock
shl
xor
mov
pop
test
(bad)
hlt
dec
push
and
ins
pop
and
ja
js
inc
push
xor
call
sbb
push
ss
pusha
sub
jp
arpl
imul
das
jge
inc
and
ss
push
jp
bound
pusha
pop
cld
ja
loop
das
push
jne
bound
pushf
das
test
push
in
xchg
js
adc
test
sti
and
adc
and
ja
inc
mov
sbb
call
jg
mov
xchg
frstpm(287
frstor
shrd
in
hlt
mov
sbb
sar
adc
(bad)
mov
imul
xor
sub
inc
pop
sbb
jae
push
cmp
dec
adc
dec
aas
bound
jl
sahf
fisttp
cmps
dec
sar
xchg
lods
jmp
push
retf
pushf
xchg
out
jnp
adc
sub
ja
jns
xchg
push
inc
in
xchg
pusha
adc
dec
or
dec
jecxz
jb
push
jb
push
into
xchg
and
xor
retf
movs
std
(bad)
repnz
cmps
les
sbb
push
popf
retf
xchg
cdq
cli
mov
das
inc
mov
stos
call
xchg
fwait
call
jb
(bad)
push
mov
lods
xlat
pop
mov
outs
cmp
cld
pusha
das
loope
and
xchg
mov
xor
mov
jge
enter
ds
fisubr
daa
stos
push
mov
in
cmp
ja
stos
and
inc
cdq
xchg
sbb
and
add
sub
mov
pop
loop
inc
(bad)
cwde
lds
repz
in
sub
mov
test
cmc
sub
pop
or
inc
(bad)
or
inc
add
pop
dec
(bad)
daa
data16
mov
ja
rcl
clc
das
ins
and
sbb
sahf
adc
test
pop
into
bound
mov
retf
jb
mov
jmp
cmp
lds
arpl
jb
ins
sbb
pop
xchg
push
push
lds
gs
aam
repnz
push
clc
pop
clc
pushf
xor
das
jg
pop
sbb
cmc
cwde
cmc
push
scas
test
stos
(bad)
nop
into
mov
dec
sbb
add
lock
mov
out
jl
xor
lahf
(bad)
jo
shl
data16
cmc
cmp
fbstp
xchg
fisttp
lock
ds
dec
sub
pop
ds
popf
xor
aad
sub
sbb
xchg
popa
and
and
push
xchg
ins
add
xchg
jae
fist
mov
leave
cmp
and
(bad)
das
pop
cmp
cmp
jge
dec
jo
cmp
xor
add
jb
or
movs
out
add
xor
push
mov
mov
jp
data16
xor
inc
lahf
push
sbb
sub
push
mov
ins
or
push
push
xchg
inc
cwde
xlat
add
mov
test
cmp
pop
adc
imul
jae
sbb
and
bound
dec
mov
fs
ret
lds
xchg
add
or
and
and
mov
(bad)
mov
sbb
dec
ins
jae
rol
ss
xchg
push
mov
movs
fnstcw
repnz
add
dec
cmp
(bad)
fcmovnb
das
cld
cdq
or
cmp
pop
pop
int
adc
adc
push
mov
cs
or
or
dec
cmps
inc
cmc
call
je
rol
mov
shl
sbb
add
mov
add
inc
add
cdq
xor
popa
xor
jge
add
push
cmp
dec
add
mov
xor
bound
fnstcw
cdq
dec
repz
aam
ss
arpl
fisub
mov
push
gs
add
dec
call
dec
or
mov
mov
jl
xor
and
call
enter
and
xor
xchg
aad
or
push
ret
mov
mov
enter
stc
pop
adc
pop
bound
jne
push
js
push
push
xchg
cmp
xchg
sbb
jp
xor
sub
mov
popf
pop
jno
and
aad
mov
aas
push
inc
pop
jg
mov
xchg
out
rcr
mov
inc
push
and
cs
cmps
xor
add
cmp
test
mov
lods
movq
ins
imul
pop
jno
jno
push
push
jp
jbe
xchg
pop
mov
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
ret
nop
cld
xchg
xchg
fcomp
sti
test
mov
mov
loop
int3
mov
into
mov
cmps
sti
scas
stc
cmps
int3
call
int3
mov
cwde
repnz
sub
retf
movs
jecxz
cld
mov
cmp
jb
push
adc
sub
push
sub
and
imul
enter
shl
fwait
sbb
or
ins
and
push
cmp
adc
push
and
pop
and
jg
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
ins
or
push
add
outs
and
push
adc
jg
or
popa
adc
jge
je
dec
or
inc
or
cs
stc
mov
out
mov
cwde
clc
xchg
cli
test
fsub
(bad)
sahf
sar
out
clc
mov
retf
fnsave
enter
sbb
pop
and
dec
jge
and
stc
fdiv
retf
mov
jmp
repz
push
dec
pop
cmp
cmp
xchg
out
sbb
mov
sub
and
lahf
shl
inc
and
inc
jge
pop
sbb
sar
int
scas
jmp
pop
cmp
push
sub
in
test
mov
mov
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
xchg
jecxz
cld
sahf
out
ret
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
les
loop
sti
cwde
loop
(bad)
mov
scas
int
fstp
loope
repz
fstp
in
cwde
int
loop
cli
mov
iret
mov
neg
rol
mov
mov
sahf
fisttp
adc
dec
xor
push
adc
outs
es
pop
or
pop
cmp
jo
popw
or
pop
and
and
add
push
add
jo
pop
es
add
push
jo
jnp
ja
dec
daa
pop
xor
jne
imul
dec
sub
je
pop
sbb
ins
or
add
push
das
inc
cs
push
or
sub
push
adc
cmp
or
addr16
pop
xor
dec
or
ja
ins
aas
dec
push
push
xor
outs
daa
inc
push
fs
adc
ins
and
jb
push
or
pusha
cs
loop
(bad)
aad
lock
push
push
xchg
mov
mov
js
pop
and
in
leave
mov
and
cmp
xchg
icebp
xchg
int3
xchg
jmp
inc
jo
jle
push
xor
inc
es
aaa
jle
gs
fs
popa
sub
pop
add
jbe
push
adc
fs
add
pop
ss
dec
adc
pop
cs
pop
and
sbb
inc
and
pop
jne
mov
jae
mov
or
scas
dec
xchg
dec
sbb
scas
xchg
cli
loop
push
pop
test
imul
es
test
mov
cmc
fwait
repz
xchg
(bad)
jmp
sti
xor
aam
inc
iret
pop
adc
dec
and
call
out
push
repz
xor
enter
icebp
xchg
iret
movs
jecxz
sti
stos
clc
(bad)
aad
das
stos
add
test
cdq
cmc
sbb
les
jmp
or
lea
adc
push
xlat
lea
lea
pop
aam
xchg
ficom
jnp
arpl
imul
or
fs
push
popf
repnz
in
lahf
ror
pusha
mov
add
push
cmps
(bad)
cmp
aad
arpl
jno
xor
mov
sub
mov
and
push
cmp
ins
add
daa
mov
gs
(bad)
out
loope
cmp
xchg
out
aaa
xor
and
lock
inc
out
mov
dec
call
pushf
cmps
jae
pop
mov
or
ins
jbe
cdq
loop
cmp
inc
sub
inc
sub
dec
xchg
xchg
(bad)
icebp
pop
ret
dec
repnz
mov
inc
xchg
mov
les
cmps
ficom
add
sbb
mov
frstor
outs
fs
push
movs
ja
mov
mov
(bad)
sub
inc
push
nop
(bad)
repnz
fs
dec
add
aas
retf
movs
and
data16
sbb
sbb
iret
mov
repnz
popf
loope
sub
enter
dec
dec
push
popa
and
aad
ins
push
xchg
push
sbb
cmp
dec
fldenv
rol
push
mov
dec
dec
push
cli
in
movs
cmp
inc
sub
cwde
aam
jecxz
push
fwait
add
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
sti
fwait
jecxz
(bad)
mov
movs
ret
fbstp
(bad)
jmp
dec
cmp
daa
pop
cmp
jle
js
dec
cs
fs
data16
jns
(bad)
fimul
mov
or
sub
ins
pop
pop
sub
ds
sbb
outs
and
push
add
daa
inc
add
outs
push
jo
sbb
push
jg
push
pop
inc
or
addr16
or
dec
or
inc
add
push
jns
pop
sub
push
dec
adc
jl
push
sub
inc
and
adc
jg
inc
sub
push
adc
outs
es
push
push
dec
sub
jbe
pop
push
jl
push
push
sub
push
dec
adc
jg
push
sub
inc
and
jl
jae
jge
inc
sub
push
adc
ins
and
and
push
xor
sbb
push
push
aas
push
sub
push
or
jp
push
das
push
adc
sbb
ins
or
cmp
add
data16
jbe
push
ret
test
mov
mov
call
push
cmp
inc
icebp
inc
push
pop
pop
inc
push
bound
xchg
mov
mov
mov
inc
sub
es
push
or
inc
fimul
mov
not
cmps
fisttp
sub
test
sub
cdq
test
aas
js
call
retf
mov
push
or
sub
push
dec
sbb
das
push
adc
and
jns
pop
sbb
pop
or
push
jl
pop
adc
sub
mov
xchg
fbstp
ficomp
mov
aaa
push
not
dec
aaa
pop
cmp
sub
imul
std
cwde
dec
adc
lods
imul
pop
gs
sub
jbe
fs
sub
arpl
into
ss
rol
je
ror
or
pop
sbb
outs
cmp
rcl
mov
lds
push
xor
call
adc
or
sub
shl
mov
push
sub
xchg
push
mov
mov
xchg
test
arpl
arpl
add
mov
jb
sbb
cs
mov
dec
and
iret
xchg
jmp
pop
mov
pop
sbb
adc
or
shl
dec
sub
imul
jbe
clc
mov
loope
arpl
mov
fnstsw
arpl
or
xchg
xchg
push
movs
in
dec
or
dec
jmp
leave
movs
outs
daa
out
xchg
arpl
cmp
clc
daa
je
movs
addr16
test
js
mov
and
je
enter
lods
imul
push
add
bound
mov
xor
dec
mul
mov
xchg
jne
add
shl
inc
mov
adc
xor
dec
loope
mov
dec
push
pop
cmp
push
sbb
jl
jl
mov
mov
stos
imul
xchg
xor
mov
push
push
adc
cld
push
add
dec
test
pop
cmp
lods
leave
test
movs
popa
sub
xchg
bound
jmp
js
sub
fsubr
xchg
(bad)
add
int3
scas
jle
in
jmp
pushf
icebp
ss
ficomp
mov
cmp
sub
fstp
sbb
imul
cmp
sub
mov
in
add
loope
cld
mov
outs
add
jp
out
add
inc
hlt
mov
jge
cmc
mov
or
push
jnp
icebp
emms
nop
sti
das
dec
mov
xor
icebp
xchg
xchg
cmc
cmp
mov
ins
pop
dec
movlps
cmc
xchg
inc
adc
pop
aad
data16
call
outs
mov
outs
mov
jnp
iret
xchg
inc
adc
push
leave
test
xlat
aaa
push
sar
jno
and
ins
push
dec
cmps
out
xor
xlat
add
loop
push
sbb
rol
jmp
bound
call
mov
or
jle
mov
xor
mov
or
mov
fild
ds
mov
pop
or
pop
adc
push
movs
fdivr
jb
out
push
cmp
mov
ss
movs
mov
dec
das
dec
sub
test
mov
movs
out
fs
clc
daa
jb
rcr
adc
jo
rcr
jbe
or
mov
xor
js
or
je
test
mov
cmp
retf
daa
dec
clc
mov
dec
sbb
inc
mov
or
data16
cdq
movs
leave
imul
xor
retf
xchg
mov
or
mov
mov
repnz
sar
ja
lahf
call
(bad)
aad
mov
cmp
jae
mov
mov
stc
cli
sahf
xchg
jge
pop
in
pop
fst
call
jle
mov
pop
(bad)
and
pop
mov
add
sub
push
add
inc
mov
aad
jmp
(bad)
xchg
jns
jne
sub
test
nop
mov
(bad)
sub
add
sub
and
push
mov
jge
sbb
pop
lods
inc
fisttp
call
leave
data16
jp
test
mov
inc
mov
xor
ss
mov
jns
shl
jmp
into
jge
push
prefetch
cs
add
cs
dec
out
pop
fidiv
xchg
push
outs
mov
int
in
in
imul
xchg
inc
sbb
rcr
pop
repz
fs
sub
lods
outs
mov
cmp
(bad)
add
xor
push
jbe
cmp
inc
aas
dec
out
call
imul
enter
fdivr
or
das
icebp
inc
cmps
iretw
push
cli
push
div
ret
and
inc
mov
mov
xlat
or
push
sar
add
xor
imul
pushf
xchg
imul
aaa
shl
scas
mov
sbb
inc
add
aas
push
out
mov
cwde
(bad)
dec
call
sbb
pop
rcr
(bad)
dec
xchg
pop
dec
push
jb
cmp
pop
pop
inc
or
inc
push
xor
sbb
lea
outs
mov
leave
and
push
fadd
sub
pop
adc
cmp
imul
popf
outs
(bad)
push
mov
fsubr
les
ja
ss
sbb
adc
pop
mov
fidivr
sbb
push
div
arpl
popa
in
jl
pop
add
pop
lds
xchg
push
stos
pushf
lods
jo
popa
mov
or
jmp
xchg
push
push
movs
fwait
data16
xor
in
and
inc
retf
push
mov
cmp
loop
fnstsw
cdq
mov
loop
mov
aaa
push
cmp
cmp
adc
cs
and
cmp
add
cli
jae
sub
dec
(bad)
push
mov
mov
enter
leave
push
and
ins
sar
xchg
fstp
inc
shr
push
sbb
pop
mov
inc
mov
sar
jmp
pop
sbb
add
and
inc
fst
pop
shr
sbb
pop
aad
add
add
or
in
adc
stc
cmp
push
push
cmp
push
stc
jge
pop
add
inc
sbb
les
sub
cli
and
es
pop
mov
pop
pop
mov
bound
(bad)
aad
movs
(bad)
shr
loop
or
hlt
inc
lds
out
add
das
add
xchg
push
add
xchg
xchg
mov
stos
fisubr
and
outs
pop
ja
inc
xor
jg
pop
push
rol
mov
lahf
clc
xor
inc
movq
inc
das
jg
or
ja
xchg
imul
mov
xchg
push
stc
test
sbb
adc
mov
add
aaa
pop
cmp
sbb
add
sbb
mov
fisubr
push
fstp
in
or
pop
xor
xchg
cmp
div
xchg
std
jmp
test
dec
ss
xlat
mov
fbld
inc
push
push
pop
inc
fwait
les
in
add
and
out
cdq
retf
rcl
iret
outs
add
push
push
ss
je
ret
call
fiadd
cmc
loopne
xor
inc
loopne
mov
cmps
cmps
fmul
sbb
fcomp
sub
xor
pop
mov
push
add
repz
(bad)
repnz
repz
xchg
(bad)
mov
mov
test
and
nop
icebp
outs
call
cmps
(bad)
mov
jmp
and
into
mov
xchg
jle
popf
ret
call
push
pop
or
fild
push
mov
data16
out
or
sbb
inc
inc
jmp
mov
fldenv
fnstcw
adc
pop
out
fs
outs
cmp
xor
mov
dec
adc
push
mov
popa
out
lods
stos
inc
sbb
dec
jb
es
push
pop
pushf
iret
mov
or
cli
jne
adc
add
add
pop
add
dec
pop
push
in
push
or
mov
std
lahf
test
xchg
nop
stc
xchg
sti
ds
nop
clc
mov
xchg
enter
test
push
shl
cli
(bad)
lds
rol
or
repz
mov
mov
lods
lds
mov
push
add
int
out
movs
pop
outs
cmovb
movs
push
jbe
fbld
test
mov
push
inc
mov
shl
adc
cmp
cmp
outs
in
ror
add
cwde
mov
sub
mov
int3
test
xchg
cmps
shr
aam
mov
mov
dec
xor
xor
fbld
push
push
sub
bound
fadd
call
lods
rcl
xlat
mov
test
xchg
sub
adc
(bad)
(bad)
std
mov
scas
leave
mov
cdq
fisttp
jnp
pushf
(bad)
xchg
cli
test
sbb
push
xor
ror
(bad)
xor
aas
div
dec
sub
das
push
psubd
xor
out
pop
add
and
adc
sbb
fadd
cmp
jmp
retf
adc
push
mov
and
and
xor
fidivr
inc
mov
jns
xchg
daa
loopne
fisubr
pop
movs
ja
sub
mov
or
xor
inc
cmp
test
mov
xchg
int3
adc
push
js
jge
lahf
cld
xchg
movs
inc
shr
ret
mov
xchg
(bad)
imul
dec
cmp
jmp
js
and
jne
dec
in
mov
adc
pop
xchg
(bad)
xchg
adc
xchg
int3
mov
dec
(bad)
in
les
cmp
xor
jne
dec
mov
mov
jl
push
dec
popf
loop
jns
leave
pop
ins
aas
mov
lea
pushf
les
test
jecxz
fcom
jno
bound
sbb
jno
xor
pop
mov
dec
adc
jns
jae
cmp
(bad)
ret
mov
adc
mov
xchg
lds
jge
das
sub
int3
mov
add
mov
ds
test
sbb
test
inc
es
fcomp
jb
in
xor
outs
xchg
retf
stos
leave
lods
in
mov
fisubr
retf
mov
cmp
push
add
and
jp
inc
add
in
mov
imul
xchg
retf
xor
mov
push
sbb
mov
imul
cmp
pop
add
mov
push
frstor
push
pop
xor
sub
sti
xor
nop
imul
loopne
inc
xor
hlt
stos
out
mov
dec
and
in
fidiv
mov
sbb
jbe
stos
rcr
aaa
jo
ins
sbb
sbb
shl
aas
sar
pusha
pop
inc
or
in
lods
mov
enter
push
in
and
sub
jp
mov
scas
mov
popa
(bad)
scas
mov
dec
sub
cmp
test
outs
adc
(bad)
pushf
sar
push
cmp
push
repnz
(bad)
dec
add
push
adc
lods
mov
pushf
aad
shl
arpl
push
scas
add
ins
cmp
fwait
rol
mov
xchg
test
stc
and
or
push
inc
xor
daa
inc
push
dec
in
sbb
fdivr
mov
pushf
(bad)
mov
cmp
cmc
mov
or
jmp
cmp
div
and
or
mov
inc
or
fs
or
xor
sub
inc
lea
or
lds
lods
leave
pop
fiadd
and
pop
xor
out
push
sbb
int3
icebp
cwde
ror
(bad)
ss
jmp
lods
fild
enter
out
or
repnz
scas
ret
mov
std
adc
jae
inc
cmps
jno
addr16
xchg
(bad)
imul
rol
retf
or
lods
ror
or
pop
repnz
mov
in
js
sbb
cs
sbb
rol
arpl
gs
(bad)
dec
pop
mov
sbb
push
jns
ds
cmp
xlat
sbb
pop
adc
loopne
lods
scas
aad
movs
js
pop
jle
clc
or
in
add
push
xor
push
iret
xchg
lds
sahf
fisub
xor
outs
or
out
ins
movs
in
call
loop
cli
sbb
cmp
rcl
(bad)
mov
call
scas
jb
cmps
push
lahf
fstp
sbb
mov
sahf
cld
pushf
mov
nop
pop
jae
jnp
shr
sbb
push
push
xor
out
mov
xchg
int
mov
imul
pop
mov
pop
jne
retf
cmc
mov
stos
mov
inc
mov
pop
pop
xchg
dec
sbb
aam
retf
mov
mov
xor
jecxz
sbb
add
out
pop
pop
xchg
push
sbb
out
mov
in
(bad)
xchg
(bad)
fwait
(bad)
xor
scas
repnz
mov
jg
lahf
mov
dec
cmp
cmp
in
mov
or
xchg
call
arpl
adc
xchg
xchg
mov
cld
sbb
cmp
les
fsub
test
mov
mov
mov
mov
sbb
sbb
dec
xor
jmp
idiv
ret
aam
jg
xor
or
je
sbb
inc
xor
adc
inc
mov
dec
or
dec
aas
rcl
daa
jno
xor
bnd
add
mov
pop
inc
daa
inc
sbb
mov
mov
rcl
ins
mov
push
cmp
aaa
mov
or
loope
shl
and
pop
aaa
ss
push
retf
(bad)
lods
xlat
loopne
popf
lds
cmps
push
test
mov
mov
pop
add
or
ret
or
stos
pop
pop
das
ret
xacquire
out
test
inc
and
icebp
add
mov
arpl
sar
xor
stos
mov
mov
jb
xchg
lock
repnz
hlt
bound
push
sub
pop
cmp
xcrypt-cbc
cmps
shl
test
out
fs
xor
cmp
stos
int3
or
mov
or
pop
pop
jo
xchg
mov
dec
aas
leave
repnz
xor
mov
push
cmp
push
cmp
out
gs
push
pop
pop
sbb
call
fsubr
aas
pop
clc
fwait
loope
inc
mov
leave
es
repnz
fmul
xor
enter
ror
pop
add
or
mov
outs
add
dec
sbb
sbb
mov
add
mov
dec
push
pop
sbb
in
xchg
call
add
pop
ret
inc
test
retf
mov
or
inc
mov
movs
call
loope
cs
jno
imul
fld
sqrtps
adc
jg
movs
(bad)
mov
call
mov
test
xor
pop
pop
pop
pop
or
sete
inc
(bad)
hlt
test
out
push
jmp
xchg
call
ret
mov
rol
bound
sahf
test
fs
out
loopne
clc
push
xor
mov
push
fild
pop
out
cmps
leave
test
scas
xlat
sahf
inc
or
sbb
bound
xchg
fmul
push
cmp
neg
jl
inc
adc
mov
mov
fbstp
jae
aas
dec
add
pop
clc
movs
cmc
test
ror
daa
cmps
adc
jl
add
or
lahf
and
lods
lods
into
add
or
push
dec
mov
inc
adc
adc
jae
inc
and
ficomp
(bad)
add
jg
in
enter
fnsave
je
push
pop
push
rcr
dec
sbb
push
add
and
or
sbb
fs
in
xor
cs
sbb
(bad)
fidivr
rcl
xchg
int
hlt
mov
xor
das
pop
xor
aaa
cld
out
cdq
sar
inc
pop
ins
bswap
inc
sbb
and
push
add
mov
ret
and
fild
dec
push
push
pushf
and
sub
sub
mov
test
ins
mov
cdq
div
mov
je
adc
jo
arpl
push
xor
jno
jp
sbb
retf
gs
aad
mov
sar
arpl
and
cmps
in
fimul
jo
mov
jecxz
fmul
imul
push
gs
(bad)
lods
les
cmp
neg
inc
in
cld
pusha
lea
cmp
rcl
mov
call
dec
pop
hlt
retf
scas
inc
iret
xchg
retf
mov
mov
pop
ffree
mov
jmp
leave
pushf
push
jb
and
das
push
pop
jg
aad
xchg
into
xor
call
sub
jns
idiv
out
imul
dec
or
ja
xor
add
loop
mov
jnp
push
xor
daa
(bad)
shl
lods
cld
pop
jp
js
push
cmp
pop
mov
stos
push
inc
and
ins
cmp
xor
jg
sbb
sub
push
push
pop
into
and
dec
xor
inc
add
mov
clc
mov
iret
jns
push
data16
mov
pushw
cmp
iret
xchg
mov
imul
into
repz
std
mov
sub
sbb
lods
std
sbb
add
cmp
cmp
add
push
push
sub
leave
popa
or
lods
mov
xchg
xlat
mov
sbb
push
or
xor
popa
sbb
mov
xor
cli
arpl
aam
loop
jne
add
xchg
pop
add
ja
jmp
test
add
xchg
cmp
sar
pop
or
movs
push
push
test
mov
mov
xchg
ror
fnstenv
daa
(bad)
ja
arpl
inc
mov
cmc
outs
or
sahf
aad
ret
sbb
out
mov
popa
push
mov
fnsave
repz
ret
fcomp
int
pop
pushf
mov
push
mov
out
mov
add
or
dec
or
(bad)
outs
loop
push
add
imul
iret
(bad)
stc
add
sbb
les
pop
sub
and
xor
push
mov
jecxz
mov
push
sbb
push
sbb
and
outs
loope
inc
mov
(bad)
repnz
enter
outs
push
xor
jns
popa
push
jne
or
xor
jp
cmp
jnp
sub
rcr
cmp
push
cmp
vmread
xchg
mov
jg
cli
fs
lods
stc
cmp
js
call
and
xchg
leave
cmp
push
xor
retf
cmp
out
mov
call
cmp
imul
mov
in
repz
int3
xchg
jbe
mov
sub
or
sbb
jno
pop
and
cmps
cld
ins
call
rcr
test
push
and
cmps
inc
and
adc
jmp
add
sbb
xor
and
mov
sub
add
or
scas
pushf
fild
mov
jns
push
and
adc
cmovl
push
mov
push
adc
push
out
cli
push
retf
or
jo
(bad)
repnz
outs
xlat
test
mov
scas
aad
test
ret
sbb
fwait
int
std
mov
xchg
ds
fwait
xchg
sub
xor
les
xchg
movs
mov
into
mov
and
cmp
(bad)
fidiv
push
xor
xor
inc
pop
cld
mov
mov
fisub
xchg
(bad)
mov
and
inc
out
les
and
mov
sub
jmp
cwde
pop
add
pop
adc
inc
and
jno
pushf
cld
data16
les
repz
mov
pushf
in
or
dec
pop
loopne
movs
ins
mov
movs
fild
call
push
hlt
xor
mov
add
stos
dec
sub
inc
and
pop
xor
mov
xchg
inc
aad
(bad)
push
inc
pop
test
out
cmps
fild
mov
test
aad
loop
sti
sbb
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
retf
retf
imul
xor
jbe
and
rol
dec
or
sub
add
xchg
fsubr
and
sub
stos
fsub
inc
add
fimul
pop
mov
or
ins
adc
icebp
imul
mov
cwde
retf
ss
ins
cmp
lea
pop
push
xor
and
scas
push
fs
aaa
xor
mov
jne
rcr
adc
or
dec
cmp
ds
out
jmp
adc
jae
and
mov
test
lahf
leave
sbb
mov
lods
push
into
mov
sbb
cli
push
daa
inc
xchg
jge
cli
push
dec
ss
adc
mov
inc
xchg
pop
xor
pop
or
out
cmps
into
mov
and
dec
mov
or
pop
or
daa
xlat
mov
aad
(bad)
fwait
dec
adc
xchg
into
bound
dec
cmp
out
mov
adc
ret
addr16
nop
rcr
ret
cmps
fstp
add
test
fdiv
push
ud0
fisttp
xchg
out
xchg
fisttp
jmp
inc
or
es
clc
jno
ins
out
fucom
arpl
out
or
mov
mov
and
adc
mov
xchg
mov
adc
xlat
cmp
(bad)
fcom
mov
cmp
mov
rcr
mov
lahf
fstp
into
lods
fnsave
shr
dec
sub
pusha
or
pop
push
es
mov
cdq
stc
call
clc
ja
jo
jmp
sbb
test
pop
or
ret
mov
push
jns
mov
repz
shr
adc
push
mov
xor
inc
jecxz
ret
icebp
popa
or
movs
mov
push
sahf
int
and
dec
or
xor
sub
dec
mov
adc
(bad)
rcl
out
push
daa
dec
cmp
inc
outs
adc
cdq
stc
(bad)
icebp
mov
mov
adc
js
push
mov
sbb
sub
mov
test
popa
xchg
mov
cwde
dec
cmc
mov
or
xchg
adc
sub
cmp
(bad)
jae
sub
scas
ficomp
mov
xor
daa
retf
popa
cmp
popf
scas
retf
adc
jg
pop
sbb
fsub
popa
pop
inc
adc
fiadd
pop
xor
jl
jns
cmp
inc
sbb
out
es
aas
dec
adc
mov
mov
call
mov
shr
dec
adc
cwde
pop
cs
icebp
mov
mov
push
ja
lahf
pop
popf
lods
jp
rol
sbb
jg
in
cmp
aam
cmp
jp
inc
cs
xor
add
sahf
(bad)
mov
pushf
cmps
retf
adc
(bad)
iret
mov
outs
out
stos
dec
rcr
sub
mov
cld
outs
adc
pop
loopne
iret
mov
test
adc
ret
fdivr
dec
lahf
fiadd
jg
inc
adc
je
bound
push
call
mov
xchg
data16
dec
xor
jns
pop
push
dec
(bad)
lods
(bad)
movs
arpl
inc
iret
and
jmp
jl
addr16
dec
sti
mov
mov
mov
cli
xchg
retf
jbe
gs
xor
add
push
retf
add
jbe
xor
and
in
sti
dec
iret
data16
xchg
mov
dec
adc
add
push
sub
loope
pop
add
pop
sbb
loop
sbb
push
xor
(bad)
jbe
mov
jbe
cwde
xchg
jno
jbe
inc
xlat
data16
inc
mov
ficomp
psadbw
xchg
pop
push
sub
adc
push
or
in
xor
aas
std
pop
in
jno
cmp
push
repnz
cmp
push
in
mov
jle
jg
popf
mov
stos
inc
mov
retf
add
push
rcl
adc
loop
int3
dec
xor
mov
lahf
xchg
scas
fld
popa
aam
mov
sbb
sbb
push
(bad)
pop
ficom
xchg
mov
xchg
retf
mov
mov
aas
ds
xor
gs
js
imul
data16
cmp
mov
mov
lods
in
lock
xlat
test
dec
lods
mov
movs
jo
adc
and
cmp
pop
mov
scas
idiv
xchg
mov
lods
jmp
xchg
hlt
cdq
jmp
mov
xchg
ror
loopne
iret
mov
nop
fnstcw
in
mov
xchg
(bad)
jmp
mov
retf
lods
jmp
inc
mov
arpl
bound
pop
push
jp
sti
cwde
loop
daa
outs
or
lods
aad
fidivr
std
xchg
cld
mov
and
mov
cmps
pop
cmp
inc
cmp
mov
fldenv
inc
sbb
xlat
movs
icebp
mov
push
aas
jp
pusha
(bad)
pushf
call
bound
inc
aas
push
ds
pop
push
dec
sbb
cmp
cmp
push
jnp
fsub
popf
lock
(bad)
into
stos
jmp
mov
xor
into
mov
movs
loope
sti
xchg
hlt
fwait
test
lahf
cli
mov
aad
int3
scas
aad
lock
call
mov
js
pop
pop
dec
sbb
inc
aas
pop
sbb
jb
imul
xor
and
push
add
je
pop
and
dec
sub
movs
enter
xlat
lahf
repnz
mov
mov
stos
loop
jecxz
ror
fstp
out
xor
fisub
les
dec
sub
pop
sbb
outs
adc
ins
and
jae
push
sub
cmp
dec
push
gs
jge
jae
pop
cmp
sub
inc
xor
adc
pop
sbb
gs
sub
pop
aas
js
push
adc
gs
or
pop
and
inc
sbb
push
and
pop
and
dec
sub
or
dec
add
push
xor
push
push
jb
inc
xor
pop
sbb
add
jbe
js
lock
sub
dec
push
jp
fs
pop
pop
cmp
in
clc
les
jo
addr16
sbb
inc
out
fld
mov
mov
aad
lock
push
add
or
cmp
das
dec
pop
das
add
jp
pop
adc
aas
push
sbb
add
sbb
div
adc
or
jp
sub
cmp
and
xor
inc
sbb
add
shl
sub
add
fadd
or
and
retf
ret
iret
and
test
pop
mul
pop
cli
ds
loope
pop
std
adc
ret
xor
sbb
movs
cmp
push
nop
jo
mov
ret
cdq
jg
mov
mov
imul
mov
push
stos
add
scas
inc
push
dec
cmp
call
jne
pop
mov
js
sub
bound
pushf
push
adc
mov
loopne
leave
mov
mov
push
mov
mov
jbe
fiadd
(bad)
(bad)
fidivr
retf
int3
and
scas
dec
sub
or
pushf
ret
pop
movs
sar
rcr
mov
push
movs
mov
clc
pusha
and
nop
cli
cmp
mov
dec
lods
jne
adc
pop
mov
sub
movs
jne
int
cmps
int
test
dec
(bad)
lds
nop
jae
aam
scas
jmp
inc
xor
push
add
pop
cmp
cmp
mov
inc
lods
inc
pop
call
cs
xchg
jg
or
xor
sbb
adc
push
lock
mov
inc
ret
jg
hlt
dec
call
scas
mov
popf
and
sub
push
mul
jae
clc
inc
sbb
sbb
js
loop
clc
icebp
dec
adc
mov
mov
xchg
dec
jmp
pop
cdq
mov
pop
shl
fnsave
cmp
xor
mov
xor
fidiv
or
xor
cmps
ficomp
aad
sbb
int
retf
idiv
(bad)
pop
adc
xor
xchg
push
adc
adc
cmp
push
jnp
je
inc
sub
xor
inc
divps
jl
data16
adc
sbb
pop
and
dec
and
jno
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
sti
call
ret
mov
leave
stos
(bad)
cmp
push
sti
push
xchg
or
bound
inc
(bad)
pusha
loop
cli
dec
lods
dec
adc
pop
in
or
je
cmp
ja
pop
(bad)
or
push
lods
pushf
xchg
ins
(bad)
mov
jp
mov
mov
nop
mov
mov
xchg
pop
hlt
das
ret
dec
loop
jmp
inc
mov
jbe
dec
mov
xor
in
push
cmps
(bad)
sub
popf
jne
fsub
sbb
enter
(bad)
ins
lods
xchg
mov
(bad)
lea
xchg
ja
fdivr
in
nop
out
cmp
shl
sub
add
fadd
mov
jns
dec
icebp
adc
aas
sti
aam
enter
sti
add
push
(bad)
and
dec
cmp
cmp
adc
out
xchg
fwait
fs
push
inc
(bad)
xor
ins
cmp
mov
scas
out
iret
mov
dec
sub
push
push
push
and
add
or
pop
dec
scas
bound
jg
out
cmp
and
and
(bad)
xor
test
rol
pop
scas
inc
push
repz
push
sar
iret
cmp
repnz
outs
movs
outs
loope
int3
mov
mov
inc
lods
jmp
call
push
(bad)
mov
int
mov
or
stos
nop
jl
or
stos
pusha
mov
arpl
push
fild
out
mov
pushf
push
ds
mov
movs
mov
addr16
jo
sahf
push
shl
xlat
jbe
mov
xchg
fadd
retf
loope
and
inc
jmp
out
jmp
add
add
mov
out
jmp
ss
jnp
cmp
or
enter
pop
cmp
aam
adc
repnz
test
outs
cld
outs
(bad)
mov
scas
mov
movs
mov
scas
xchg
cmp
or
jl
imul
xor
or
scas
mov
leave
mov
mov
movs
call
xchg
in
movs
(bad)
mov
retf
movs
into
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
sbb
or
bound
and
dec
scas
popf
pop
mov
dec
mov
mov
jae
push
enter
psubw
and
loope
adc
js
(bad)
int3
xor
push
fcom
mov
dec
outs
mov
addr16
(bad)
xchg
dec
ins
mov
aaa
push
(bad)
sti
and
jne
sub
cmp
and
loope
pmovmskb
call
sbb
std
push
xchg
sub
jmp
pop
js
xchg
push
test
jne
mov
mov
test
inc
mov
imul
xor
xchg
push
test
sub
scas
outs
cmp
xor
lock
jbe
cdq
stc
sub
popf
inc
fisub
lahf
shr
int
(bad)
sub
cdq
fisub
sbb
jge
sbb
(bad)
les
and
xor
dec
ins
out
sub
mov
mov
mul
in
test
mov
xchg
xchg
jl
mov
mov
jbe
jmp
movs
mov
inc
cli
or
loope
mov
adc
cmp
sub
dec
call
sub
out
cmp
aas
push
or
mov
sbb
pop
and
push
imul
sbb
test
mov
xchg
sbb
mov
inc
xchg
fimul
scas
mov
mov
js
inc
pushf
mov
inc
sbb
cwde
test
xchg
lods
cmp
pop
inc
sbb
mov
mov
sub
es
adc
leave
pop
retf
aas
fist
cld
cmp
sti
adc
mov
jl
leave
and
push
push
add
pop
inc
mov
pop
mov
inc
nop
outs
sub
xchg
inc
cli
dec
xchg
scas
mov
pop
call
xor
jmp
jle
out
arpl
in
sbb
imul
jg
stc
dec
(bad)
or
clflush
pop
neg
(bad)
cmc
mov
and
icebp
mov
repz
ror
rcr
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
je
outs
or
adc
jnp
push
sub
inc
daa
jns
stc
push
mov
pop
xchg
jnp
push
hlt
jno
arpl
cmp
inc
and
fnsave
xchg
xchg
jg
mov
mov
imul
test
dec
jl
cli
and
rol
cmps
sub
stos
cmp
push
aam
int
out
sti
scas
cmp
jp
mov
pop
dec
pusha
inc
retf
pusha
test
jno
jne
pop
test
nop
add
sbb
push
cwde
or
sti
sbb
div
cmp
pop
pusha
fisub
test
push
stos
mov
lea
sar
jp
xor
jbe
inc
cld
and
jo
push
hlt
cmp
mov
mov
in
stos
sbb
mov
sub
popa
fisttp
ins
mov
push
out
inc
retf
pop
cmp
pop
cmp
push
adc
cs
mov
adc
add
mov
(bad)
outs
inc
ja
and
pop
inc
push
mov
fmul
mov
jo
inc
cmps
cmp
in
and
push
int3
push
mov
pop
sub
adc
aam
popf
add
jecxz
pop
bound
popf
cwde
mov
adc
jmp
push
xlat
sub
or
and
pop
or
sub
outs
daa
call
imul
pop
rcr
sbb
sete
mov
idiv
sub
stos
mov
xor
dec
jbe
pushf
push
in
inc
xchg
fisttp
scas
mov
movs
cmps
pop
shr
mov
xchg
xchg
push
call
cwde
inc
xor
inc
jp
mov
mov
dec
cdq
pushf
fs
pop
sar
les
xchg
xor
xor
adc
and
adc
stos
push
pop
cmps
and
xor
push
push
lods
fidiv
inc
outs
sar
push
xchg
mov
dec
clc
dec
cwde
test
pop
hlt
push
cmp
(bad)
jbe
or
cmp
cli
std
jl
cmp
sub
arpl
bound
push
ins
adc
imul
sub
cmp
push
and
js
data16
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
sub
aas
push
adc
push
pop
push
jb
mov
mov
frstor
cwde
xchg
ja
cmps
outs
mov
popf
arpl
xor
lds
shl
sbb
mov
lea
(bad)
call
mov
pop
sbb
add
sbb
pop
test
dec
mov
fidiv
cmps
cmp
int
das
mov
jmp
loop
(bad)
lods
pop
pop
dec
mov
test
pop
les
push
mov
push
ret
jecxz
adc
(bad)
sar
or
adc
fdivr
call
jbe
inc
scas
mov
(bad)
int3
xor
jns
dec
lds
aad
xchg
jo
sub
inc
xchg
xor
inc
xchg
inc
shr
imul
jnp
cmp
sbb
clc
add
push
add
retf
ja
sti
pop
xor
sti
pusha
mov
jge
jnp
push
icebp
outs
mov
cdq
sbb
dec
push
sub
cmp
(bad)
push
xchg
mov
cmps
mov
test
inc
test
outs
push
(bad)
cmp
sub
jecxz
repz
hlt
adc
fst
ds
ds
dec
inc
and
lds
or
jmp
xchg
pop
jecxz
jl
(bad)
mov
add
ss
retf
and
adc
aam
jno
jb
sbb
scas
dec
lea
(bad)
adc
cld
dec
out
jle
in
jg
clc
dec
std
std
jne
push
add
mov
and
jg
clc
push
jecxz
dec
loope
jns
jmp
adc
fwait
pop
adc
fs
cmc
shl
jl
add
jmp
lahf
call
out
in
or
pop
add
div
adc
mov
cmp
pushf
daa
lahf
dec
mov
adc
fcomp
(bad)
dec
std
loopne
repz
aam
retf
or
xor
neg
cmp
mov
xor
adc
int3
jb
sbb
or
cmp
mov
add
push
and
push
inc
daa
fwait
test
cmp
imul
xor
inc
and
jb
pop
pop
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
imul
push
dec
aas
push
adc
jp
jbe
dec
mov
xor
dec
xchg
push
cld
sub
push
popf
jno
and
popa
test
out
and
sub
fidiv
add
or
loope
cld
xor
pmuludq
pop
addr16
sbb
pop
scas
mov
sbb
dec
sub
push
pushf
ss
mov
std
or
retf
or
leave
cmp
loop
loope
sbb
or
inc
push
ja
dec
dec
(bad)
daa
into
sub
bts
pop
or
sti
adc
daa
lods
jb
push
rol
ss
nop
imul
std
push
mov
arpl
ja
ja
and
(bad)
sbb
jno
imul
js
jb
jbe
mov
adc
retf
ss
jno
or
mov
fild
push
jae
fwait
rcl
cdq
xchg
rcl
push
mov
call
sti
xor
dec
inc
push
mov
mov
mov
pop
inc
jb
push
xchg
mov
add
jecxz
ficomp
add
sub
mov
out
mov
jmp
(bad)
push
test
push
lods
outs
jns
fist
mov
add
cwde
ins
leave
mov
mov
xchg
bound
jge
or
ret
aas
jo
and
fnsave
dec
int3
cmp
xchg
pop
adc
xor
imul
pushf
jns
hlt
pushf
inc
retf
push
ins
sar
mov
inc
jmp
jmp
inc
loopne
fs
jbe
loopne
and
pop
add
mov
out
or
pushf
dec
in
dec
xor
je
jmp
(bad)
adc
jge
or
cmp
dec
lods
dec
imul
push
cwde
xor
aam
std
fdivr
clc
movs
inc
imul
sub
inc
movs
sbb
or
je
out
push
int3
dec
gs
ja
out
call
or
adc
fs
popf
pop
(bad)
mov
jne
dec
lahf
mov
mov
cmps
sub
cld
cmp
call
fild
aad
repnz
mov
fdiv
out
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
jmp
(bad)
fisttp
pop
stos
mov
jecxz
scas
inc
in
aam
mov
fs
or
bound
jns
push
repnz
in
cmps
jle
cmps
loopne
or
ret
adc
pop
in
sahf
xchg
sub
inc
mov
xor
cmp
adc
je
out
cmc
sbb
ret
or
cmp
push
test
ins
mov
pusha
lahf
jge
or
xor
out
xor
clc
dec
aad
add
pop
out
sbb
lock
out
pop
lods
jo
sbb
adc
retf
sub
repz
out
adc
aam
sub
adc
adc
or
inc
cmps
fnstcw
iret
mov
test
add
jmp
scas
jnp
sub
fwait
fwait
mov
mov
(bad)
out
shr
mul
xor
es
gs
lods
or
sbb
push
sbb
xlat
sub
out
ror
das
sti
xor
jmp
cmp
xchg
inc
cld
push
mov
lods
inc
push
loopne
add
dec
adc
add
push
add
dec
or
and
stc
and
into
push
mov
pop
mov
xor
sar
push
mov
in
clc
scas
push
cwde
add
pop
pop
jmp
push
div
push
neg
cmp
int3
inc
retf
ret
loope
cmc
clc
jne
hlt
outs
(bad)
mov
dec
mov
push
xchg
xchg
test
pop
sbb
jp
sbb
les
xchg
mov
inc
imul
imul
xor
daa
loope
and
into
jb
add
adc
sbb
lea
test
adc
xor
(bad)
jno
mov
data16
mov
mov
fld
inc
push
mov
pop
lahf
test
loope
in
outs
jmp
jnp
push
cmp
out
daa
int3
cli
(bad)
std
mov
mov
lahf
repz
mov
mov
fnstenv
loop
sti
test
test
stos
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
pop
ins
cmp
push
dec
aas
pop
sbb
push
sub
loop
xchg
xchg
mov
and
mov
mov
cmp
fs
dec
adc
adc
shl
sub
push
jmp
sbb
push
xchg
popa
shl
into
inc
(bad)
or
and
std
and
shr
push
xor
push
jno
cmp
and
adc
add
imul
xor
add
pop
out
sub
inc
call
pushf
fidivr
call
jnp
or
and
pop
shl
push
out
aas
sub
and
sti
and
repnz
test
push
imul
adc
cs
ins
fld
shr
(bad)
sahf
lahf
push
or
xor
ins
xor
aas
cs
add
(bad)
sub
adc
test
cmp
xor
or
test
fild
leave
cwde
mov
sub
aas
or
push
dec
xchg
adc
js
and
cs
xchg
data16
push
push
cli
imul
mov
adc
(bad)
sub
xchg
push
mov
sbb
pop
es
add
push
sbb
adc
mov
ins
mov
cmp
xor
imul
iret
iret
cmp
loopne
fistp
aas
sub
mov
push
(bad)
lds
ret
jns
ret
(bad)
bound
and
xor
push
add
retf
hlt
stos
pop
ds
cmp
pop
aaa
inc
adc
push
jp
pusha
xchg
jmp
fsub
mov
mov
dec
cmp
mov
xchg
(bad)
sahf
xlat
scas
push
jb
imul
adc
repz
repz
fcmovbe
mov
iret
imul
mov
mov
push
pop
adc
xchg
push
aaa
add
pop
cmps
ror
out
xor
and
xor
lahf
into
not
mov
adc
jo
inc
mov
gs
je
and
and
pushf
in
mov
sub
lods
in
dec
out
mov
fst
shl
outs
or
rcl
js
or
jns
and
ins
call
scas
leave
sbb
mov
cmp
mov
lahf
sti
mov
sbb
adc
xor
ret
div
(bad)
xchg
lock
ficom
add
xchg
push
addr16
dec
add
adc
ins
sbb
leave
push
mov
js
mov
or
sub
ss
push
sub
stos
jmp
stc
adc
retf
adc
and
xchg
rol
aaa
push
xchg
fidivr
retf
(bad)
in
xchg
retf
push
and
out
out
ins
div
xchg
fcmovu
icebp
xchg
aam
imul
cdq
mul
inc
out
sar
popf
fbld
mov
mov
and
push
pop
aad
lods
int
ja
dec
aaa
dec
(bad)
sahf
push
push
or
jp
or
jo
push
inc
and
ret
mov
xor
xor
sub
mov
je
out
clc
pushf
fnstcw
gs
dec
cmp
js
leave
stos
loop
jecxz
ret
sub
xchg
inc
sub
outs
add
test
mov
nop
call
mov
push
add
jge
pop
adc
mov
xor
mov
sti
pop
dec
or
push
mov
into
and
jecxz
cmp
ror
xor
adc
jb
push
ffreep
test
dec
xchg
cli
sub
shl
mov
scas
frstor
push
xor
stos
enter
xor
cmp
fs
add
ins
sbb
sub
ds
fisttp
lock
jne
enter
mov
cdq
retf
retf
mov
loop
and
daa
push
mov
in
fnsave
lods
or
dec
sbb
mov
imul
fistp
stc
popf
scas
test
lds
cmps
xlat
mov
pop
stos
mov
test
repz
and
jp
inc
add
jp
pusha
jae
bound
test
aas
inc
ds
loop
out
mov
lods
dec
jo
jbe
es
adc
push
(bad)
out
dec
int
xchg
test
in
cli
xchg
test
mov
and
cmp
lods
icebp
mov
xchg
cmc
mov
mov
std
xchg
repnz
and
jle
adc
and
add
je
ins
push
fnstcw
inc
pop
push
and
inc
ins
or
nop
xlat
sahf
cli
mov
push
pop
ins
les
or
(bad)
into
ins
push
pusha
add
jg
mov
xchg
fiadd
repz
das
dec
sbb
jp
xchg
test
fwait
icebp
dec
add
or
ins
out
inc
pop
arpl
inc
cmp
xor
jmp
lock
xchg
jg
ds
sbb
jl
dec
and
mov
cmps
pop
loopne
xor
sbb
dec
xor
pop
cmp
cmp
and
lds
jbe
sbb
mov
xor
pop
jb
scas
ret
dec
adc
mov
mov
or
jns
sub
jle
test
cmps
aam
push
add
mov
sbb
mov
repnz
out
(bad)
into
sbb
arpl
js
bound
inc
adc
inc
and
adc
or
gs
in
fwait
rcl
or
pop
std
mov
test
dec
sub
int3
mov
xchg
stos
(bad)
jmp
inc
daa
gs
xlat
xor
push
in
add
pop
xor
pop
xchg
fisub
sub
ds
push
dec
cmp
cmp
cmc
fwait
retf
rcr
movs
in
add
test
sub
or
push
xor
sbb
pop
mov
mov
mov
lods
hlt
mov
mov
test
mov
aaa
pop
sub
aam
mov
pop
sbb
lea
xor
add
jmp
pop
cmp
xor
push
cmp
jne
ins
mov
outs
sbb
mov
xchg
mov
dec
add
push
scas
enter
xlat
std
mov
ins
shufps
cmp
inc
mov
rcr
fnstcw
add
push
inc
imul
fnstcw
fidiv
sbb
fisttp
stos
and
xor
arpl
pusha
add
jg
mov
lds
mov
iret
adc
popf
inc
xor
cs
fdiv
in
scas
pop
adc
push
xchg
cwde
sti
xchg
repz
mov
mov
push
xor
inc
and
icebp
xchg
ror
clc
mov
push
cmp
mov
lock
sbb
popf
stc
lods
inc
cmp
loop
fstp
push
add
mov
ds
xchg
fcomp
and
shl
jb
gs
or
ret
xchg
mov
mov
cmps
jmp
test
(bad)
mov
leave
shr
jnp
cmc
mov
cmc
lods
sbb
adc
xchg
fdivr
in
test
cli
fwait
jecxz
repnz
pop
dec
add
push
or
adc
outs
loopne
in
sbb
push
sub
adc
mov
sbb
or
push
xor
mov
and
inc
sub
adc
jmp
pushf
ret
mov
push
xor
inc
daa
dec
lahf
xlat
pop
and
jo
in
fsubr
xchg
jl
cli
pushf
or
jl
lods
shl
pop
sbb
nop
(bad)
mov
mov
stc
push
and
mov
add
xchg
cli
stc
ins
das
ja
ins
aas
dec
inc
movhps
jbe
pop
out
mov
jnp
std
xor
fstp
stos
in
mov
mov
mov
mov
mov
enter
and
inc
das
inc
sbb
inc
jo
sbb
call
mov
add
fbstp
pop
inc
push
dec
pop
imul
adc
scas
xchg
cmps
std
mov
cwde
repz
fidiv
xchg
retf
pushf
jmp
mov
xchg
cmps
(bad)
add
and
cwde
std
mov
cmp
fadd
test
xor
cmp
shr
adc
cmp
jns
mov
adc
fisttp
(bad)
int3
mov
movs
iret
mov
stos
push
sbb
lds
loop
loope
sub
mov
mov
into
popf
clc
mov
pop
or
jp
mov
je
push
aas
push
xlat
arpl
jg
pop
and
(bad)
and
mov
mov
mov
xchg
fistp
ds
xor
jnp
or
outs
aaa
jle
mov
cdq
sti
mov
xor
daa
clc
cwde
adc
jle
pop
adc
jne
pop
and
daa
retf
int
movs
xlat
mov
sub
add
test
sbb
mov
aad
hlt
xchg
out
or
movs
mov
stos
(bad)
mov
xchg
rcl
cmc
inc
adc
and
sub
push
lds
cs
dec
jp
mov
push
(bad)
(bad)
jmp
jno
adc
jb
jae
pop
add
push
sbb
hlt
(bad)
in
mov
nop
fld
gs
imul
mov
or
mov
cld
mov
fwait
clc
xchg
sbb
cmp
inc
add
mov
inc
mov
popf
push
and
dec
or
pop
ins
mov
stos
ror
lahf
(bad)
test
mov
jbe
jbe
es
in
pop
jl
popa
sub
retf
cs
jge
sbb
jbe
add
pop
popa
and
fld
push
ss
cmp
lahf
cli
xchg
fs
mov
push
pop
jns
clc
mov
outs
ret
or
lds
fcomp
mov
or
bound
mov
or
and
jge
jl
add
out
ficom
aas
pop
push
xor
sub
inc
sub
pop
jae
inc
retf
cdq
retf
nop
(bad)
sub
xor
mov
xor
xor
jecxz
imul
retf
lahf
shr
push
ss
stc
into
mov
and
pop
movs
mov
cdq
cs
or
xchg
adc
ins
add
inc
daa
mov
lds
push
push
aaa
inc
mov
enter
ja
lods
int
repnz
ds
sub
jmp
hlt
out
stos
stc
stos
scas
cli
xchg
cmp
xor
repnz
sbb
jne
lea
or
sbb
lahf
(bad)
mov
fisub
xor
adc
ret
imul
icebp
mov
push
scas
int3
in
movs
cmc
mov
ja
call
add
aam
icebp
mov
push
xor
push
aaa
dec
and
inc
aas
jl
pusha
cmp
mov
xchg
or
jnp
jno
pop
or
push
(bad)
push
cmp
stc
mov
aad
jecxz
das
dec
aaa
mov
cmc
xchg
cmp
dec
and
fisub
shl
nop
call
pop
imul
shl
mov
mov
mov
loope
xlat
(bad)
pusha
adc
dec
xor
shr
cld
mov
ret
jne
pop
bound
dec
or
jp
pop
in
sbb
inc
daa
bound
js
sbb
sub
je
test
mov
test
in
sbb
ins
out
mov
sahf
repz
add
pop
xorps
and
clc
mov
iret
jns
jbe
push
adc
jl
jno
pop
aaa
push
jne
jl
in
pop
or
pop
es
adc
pop
aas
pop
call
and
cmps
cmc
cmps
rol
lock
in
xchg
retf
stos
xchg
mov
mov
mov
push
adc
es
push
pop
inc
iret
mov
mov
xchg
mov
push
enter
sub
ror
cmp
push
push
adc
sbb
addr16
cmps
fbld
or
bound
push
push
(bad)
movs
loop
push
(bad)
addr16
mov
add
push
jge
pop
sbb
pop
pop
je
jl
and
mov
not
repz
in
fdivr
push
pop
push
pop
mov
outs
sub
ins
ret
jle
pusha
sbb
jno
aad
stos
repz
imul
scas
int
(bad)
mov
stc
and
push
inc
and
jae
xlat
mov
and
retw
mov
retf
mov
push
sbb
popf
lds
push
sub
inc
out
data16
(bad)
in
adc
sub
dec
pop
loop
mov
xchg
(bad)
in
sbb
outs
add
lea
sub
outs
aaa
jle
imul
jb
cwde
std
mov
cmp
mov
daa
inc
lods
push
push
jl
shl
icebp
xchg
scas
enter
loop
(bad)
int
sub
dec
adc
outs
add
ins
shl
(bad)
in
xchg
cli
fwait
clc
xchg
dec
push
ds
rol
xor
push
and
mov
push
ds
out
xor
test
mov
adc
jmp
loope
mov
fwait
shr
inc
adc
fist
rcr
and
pop
dec
and
fiadd
inc
push
ins
push
loope
xor
add
popa
loope
adc
pusha
or
outs
aaa
mov
jmp
mov
xor
inc
outs
jecxz
pop
rol
outs
lds
retf
neg
ins
sbb
or
lods
jo
jo
icebp
and
rol
sub
or
repnz
idiv
cmp
imul
ret
mov
pop
outs
das
adc
xor
pop
xor
enter
ret
xchg
scas
std
out
push
or
or
cmp
jbe
iret
mov
lds
dec
push
mov
pusha
xor
pop
fnstenv
push
adc
les
cld
xchg
movs
sar
or
test
pop
and
xchg
mov
retf
lahf
out
dec
or
mov
ins
ds
call
adc
mov
and
mov
mov
icebp
mov
int
lahf
shl
emms
sbb
jbe
mov
sub
cmp
popf
aad
into
push
jae
jae
(bad)
movs
inc
or
or
jbe
dec
and
out
push
push
cdq
mul
pushf
fidivr
push
xor
bound
pop
sar
data16
inc
mov
mov
pop
or
mov
lahf
out
cmps
retf
push
imul
sub
ds
sbb
mov
cwde
add
fs
test
mov
jbe
mov
nop
ret
xor
repz
pop
and
and
xchg
sti
mov
or
jb
ret
sbb
mov
ja
push
je
push
cmp
pop
cmp
out
ret
pop
pop
mov
push
and
sub
xor
or
es
sub
shl
data16
bound
inc
push
loope
popf
inc
mov
daa
inc
cwde
xchg
fidiv
iret
xchg
int
(bad)
test
lahf
cld
icebp
cmp
test
gs
(bad)
xor
mov
(bad)
cmc
mov
shl
out
mov
not
inc
xor
dec
or
jecxz
jecxz
cmp
shl
ds
sub
jl
inc
sub
push
jae
bound
dec
push
pushf
xchg
lock
call
jge
pop
xor
pop
les
mov
ins
push
push
ret
sar
iret
xchg
ja
mov
call
loop
push
xor
push
je
mov
xor
arpl
mov
ins
sti
mov
mov
test
mov
jne
jbe
mov
mov
mov
scas
dec
loop
ss
push
sbb
imul
popa
push
je
add
or
mov
jo
push
jo
test
inc
xor
loopne
in
mov
xchg
ror
xor
or
jo
sub
mov
das
inc
xor
pop
ds
jge
adc
mov
lahf
fnstsw
fs
jb
rcr
pusha
cmp
adc
loope
cmp
xchg
pop
cmp
aas
push
sub
lods
cli
mov
xor
push
xor
push
pop
or
mov
test
mov
adc
ret
bound
inc
loopne
sbb
test
fcmovnb
mov
mov
xchg
lea
push
sbb
loop
aas
aas
daa
and
dec
mov
mov
movs
les
inc
(bad)
pushf
fdivr
mov
mov
jo
jo
lods
aad
stos
leave
fwait
popf
fidiv
mov
enter
cmp
xchg
in
in
ret
aaa
pop
and
mov
or
and
ins
pop
loope
loope
shl
push
ficom
cmp
xchg
enter
dec
xchg
fstp
adc
push
xor
mov
xchg
aad
sub
inc
xchg
mov
mov
popa
xchg
mov
add
iret
stos
out
mov
push
fwait
leave
fwait
out
mov
and
aam
ror
dec
aaa
pop
fidivr
or
jbe
xor
jnp
retf
fdiv
dec
add
imul
adc
(bad)
je
in
int
icebp
mov
mov
lds
mov
call
lods
jmp
xchg
imul
fnsave
dec
and
outs
sub
nop
mov
gs
lea
dec
and
out
out
push
aad
pop
or
js
mov
fstsw
scas
out
repnz
push
pop
xor
mov
pop
jne
jnp
pop
popf
in
cmp
adc
arpl
or
cmc
xchg
shr
lods
dec
xor
dec
imul
icebp
mov
cmps
jmp
repnz
cmp
jmp
xchg
cld
bound
jl
xchg
stc
sub
adc
xchg
inc
adc
push
sub
xchg
fdivr
dec
cs
jmp
shr
fwait
in
mov
add
jl
xchg
loop
cmps
retf
mov
call
lds
add
jmp
sti
arpl
call
loopne
inc
(bad)
mov
jg
imul
sbb
into
xchg
nop
enter
jmp
test
shl
fcom
mov
rcl
mov
lods
icebp
xchg
xor
lahf
(bad)
mov
xchg
in
in
(bad)
call
sub
push
push
dec
pop
push
push
jb
les
outs
xor
mov
cwde
inc
and
pop
push
jnp
push
adc
add
jb
inc
(bad)
push
je
jp
push
sbb
dec
xor
and
mov
fild
adc
dec
xor
data16
daa
inc
cmp
adc
mov
cld
mov
or
jb
fstp
sub
pop
data16
outs
xchg
repz
pop
adc
ins
or
sbb
ss
xchg
push
pushf
icebp
mov
stos
mov
test
mov
mov
add
adc
sbb
imul
pushw
aam
sar
mov
cmps
retf
cmp
imul
in
imul
adc
jne
fcomip
stos
mov
stos
into
test
xor
bound
inc
cmp
push
dec
cmp
sub
lahf
aam
into
pushf
call
push
sbb
push
adc
jne
retf
cmps
xlat
outs
xchg
repnz
jl
rcr
sahf
retf
cdq
xor
outs
daa
inc
push
leave
mov
jno
sbb
jne
aam
icebp
mov
mov
mov
fstp
call
je
push
pop
in
les
push
and
inc
mov
scas
push
sbb
xor
dec
cs
xchg
in
retf
cmp
sbb
call
add
ja
push
sub
jmp
xchg
xchg
les
pushf
les
dec
sub
pop
es
jbe
ja
dec
and
(bad)
cld
popa
loop
into
bound
je
and
pop
sbb
fidivr
xlat
movs
cld
xchg
cmp
lds
inc
push
mov
push
push
sbb
fsub
adc
jnp
and
adc
jl
pop
push
jno
imul
sub
cmc
sbb
sub
xor
inc
outs
cmp
mov
shl
push
lds
add
pop
inc
push
bound
push
dec
sub
loop
mov
les
inc
sub
fild
push
inc
and
and
push
and
xchg
dec
es
push
imul
popf
into
mov
dec
sub
retf
mov
mov
mov
jno
push
adc
push
dec
sbb
push
lods
shl
xor
push
sbb
or
dec
loope
inc
loope
xor
mov
or
xchg
xchg
clc
pop
jp
pop
push
dec
sbb
cmp
sub
mov
int
push
xor
push
jecxz
neg
jne
push
in
enter
outs
and
pop
ds
rcl
lock
(bad)
out
test
and
jno
dec
aas
push
ret
sahf
cld
inc
pop
jae
add
jbe
and
in
xchg
call
xchg
les
sub
inc
mov
movs
retf
and
les
ins
cs
jecxz
loop
inc
adc
inc
add
imul
xlat
test
jp
push
xor
gs
mov
add
xchg
push
add
loop
das
push
pop
ins
or
cmp
mov
(bad)
lods
lds
xchg
mov
les
jno
mov
stos
mov
dec
adc
push
dec
fisubr
xchg
jb
stos
retf
jle
pop
sub
mov
clc
xchg
movs
aam
fld
sub
dec
stos
aam
into
mov
call
mov
mov
je
mov
mov
xchg
cmc
or
adc
or
pop
mov
sub
dec
out
add
and
fs
jl
lds
pop
es
sub
sbb
add
enter
inc
fild
cmp
sbb
inc
add
loopne
push
dec
and
jb
retf
adc
mul
dec
int
neg
(bad)
jbe
mov
data16
inc
fsubr
xor
movs
xchg
mov
inc
add
out
sbb
jno
mov
xchg
cli
je
js
out
xor
add
mov
sbb
inc
(bad)
adc
push
add
xchg
lods
repnz
into
pusha
xor
and
inc
or
and
ja
cmc
pop
cmp
imul
bswap
jb
ja
iret
cdq
stc
sub
jbe
data16
fst
mov
mov
add
mov
shr
xor
jbe
jle
cwde
xchg
(bad)
test
std
mov
bound
jns
xor
pop
or
adc
(bad)
jo
stos
loop
jmp
sub
add
int
aaa
push
sbb
pop
add
pop
in
sar
adc
mov
mov
or
shl
leave
adc
cmps
aad
aam
push
adc
xor
sub
je
pop
loop
aad
push
jge
inc
ss
ins
add
inc
or
lock
push
ss
push
push
cmp
push
xor
dec
cmp
sbb
dec
pop
(bad)
imul
arpl
ret
inc
sub
push
pop
and
xor
push
mov
leave
mov
jg
outs
repnz
les
pusha
icebp
xchg
in
xchg
aas
add
pop
or
or
out
in
pushf
js
in
xchg
ret
scas
in
mov
pop
push
or
xchg
aad
dec
fild
repnz
jne
add
and
and
es
and
add
push
push
push
jo
stos
push
dec
sub
fwait
cmc
xchg
std
js
mov
pop
push
inc
sbb
repnz
test
xchg
fstp
mov
call
and
cmc
movs
ror
xchg
cmp
std
pushf
cld
jns
pop
ss
pushf
fdiv
rcr
aam
and
loopne
not
sub
dec
es
inc
push
out
(bad)
jl
loop
sub
xlat
(bad)
lds
mov
ins
add
adc
imul
jne
dec
sub
daa
outs
add
adc
adc
jnp
pop
jmp
call
sbb
jle
dec
or
rol
jmp
out
xchg
call
nop
test
pop
(bad)
cmp
add
inc
and
stos
mov
mov
mov
mov
jo
sub
adc
jg
call
mov
adc
push
or
inc
sbb
dec
mov
test
pop
shr
mov
xchg
mov
push
cmp
ins
adc
mov
cdq
das
dec
xor
call
(bad)
das
aad
into
push
jbe
pop
sub
xchg
aad
rol
test
mov
xchg
into
xchg
xchg
ror
shr
mov
mov
adc
and
push
cmp
mov
loop
ret
push
ins
mov
dec
adc
dec
shl
mov
sbb
loopne
xor
ret
xchg
inc
add
js
mov
shl
in
in
ror
rcl
mov
inc
fbstp
mov
or
dec
jnp
pop
push
into
mov
data16
(bad)
div
pop
push
ret
ja
mov
xchg
mov
jmp
sahf
int3
ins
sub
xor
push
scas
shl
mov
fst
push
mov
xchg
pushf
stos
into
lods
into
nop
mov
xchg
outs
ret
lods
into
sahf
jl
xchg
rcr
cld
dec
xor
das
cmp
xor
and
dec
adc
xor
inc
sbb
jecxz
imul
popf
cmc
inc
jmp
push
cmp
pop
pop
jle
and
(bad)
repnz
retf
and
movhps
imul
aad
out
test
sbb
push
or
jo
sbb
mov
inc
std
mov
test
not
jg
cmps
push
sub
into
mov
mov
idiv
inc
fnstcw
(bad)
loopne
jmp
mov
stos
(bad)
push
aam
add
out
loop
(bad)
mov
pop
cmp
sbb
push
mov
xchg
hlt
mov
jae
sar
test
add
scas
xlat
mov
push
mov
mov
ss
sbb
mov
dec
sar
jo
jle
ret
js
outs
or
pop
push
inc
adc
stos
pop
sub
shl
ja
inc
cmp
cs
movs
out
(bad)
xchg
mov
xchg
push
jo
jnp
xor
push
mov
mov
dec
and
repnz
adc
and
push
ss
sbb
mov
xchg
cmps
popf
rcl
push
dec
or
xor
pushf
std
fs
jecxz
mov
sbb
sbb
jmp
mov
dec
xor
jae
inc
mov
mov
rcl
lock
in
xlat
mov
mov
mov
mov
adc
xchg
shl
mov
jle
jo
and
cmc
xchg
inc
inc
xor
push
je
data16
pop
push
xor
sub
sub
inc
pop
pusha
pop
dec
add
pop
sbb
push
or
neg
test
cmp
cs
mov
adc
hlt
popf
(bad)
movs
loop
int
jmp
mov
js
cdq
rol
popa
cmp
jl
xchg
add
in
in
or
push
sbb
or
popa
div
loopne
dec
retf
cmps
test
sbb
xor
fs
sub
lds
cmp
fs
mov
mov
std
jae
jb
ss
and
dec
sub
inc
or
push
adc
jno
jp
sub
pop
scas
popf
mov
test
and
inc
daa
and
outs
daa
inc
cld
pushf
int3
and
push
sub
mov
add
int3
mov
and
inc
adc
out
inc
add
(bad)
sub
inc
cmps
xchg
ret
mov
push
or
adc
and
in
ret
push
outs
add
add
pop
sbb
ss
call
xchg
jo
xchg
lock
pop
imul
test
in
test
or
das
inc
pop
push
add
pop
cmp
(bad)
neg
ins
sub
xor
pop
adc
pop
push
arpl
push
adc
sbb
ret
xchg
mov
ins
cmp
xchg
icebp
sahf
call
dec
cmp
inc
sbb
jg
jns
adc
cs
sbb
cli
cdq
jecxz
stos
xchg
mov
jecxz
movs
repz
call
mov
inc
fbld
cs
js
mov
xchg
movs
mov
cvtps2pd
dec
sub
add
sub
and
sub
sbb
sbb
dec
push
ss
cld
cdq
test
out
mov
sbb
pop
cmp
je
imul
inc
sub
inc
in
mov
adc
(bad)
mov
in
mov
jle
and
ss
aaa
jp
mov
mov
movs
scas
xor
dec
push
aas
das
push
adc
movs
iret
scas
fidivr
(bad)
xchg
les
loopne
mov
sbb
pop
adc
sub
or
push
cli
xchg
retf
mov
ret
into
lods
fmul
and
aas
pop
test
call
pop
js
xchg
icebp
mov
mov
mov
fist
xor
aas
ins
sbb
(bad)
movs
mov
mov
je
movq
mov
add
sub
loope
clc
call
mov
push
lods
enter
test
mov
push
sbb
adc
(bad)
mov
sub
or
mov
adc
dec
ss
xchg
in
and
(bad)
(bad)
into
add
lds
movs
test
fst
xchg
pop
cmp
dec
jmp
push
repz
pusha
jmp
cmc
xchg
in
xor
(bad)
adc
dec
cmp
mov
div
jg
and
call
mov
fisubr
stos
stc
fwait
inc
push
inc
cmp
cmp
pop
add
jp
push
ds
or
mov
mov
mov
add
and
and
(bad)
jecxz
imul
add
iret
test
mov
xor
ds
loope
retf
clc
fwait
clc
lahf
fmul
xor
add
int3
ja
xchg
xchg
or
xor
pop
xor
jo
(bad)
call
ret
xchg
cli
mov
cdq
fist
sub
xor
addr16
and
add
jge
cdq
stc
sub
mov
dec
shl
fidivr
push
add
sub
jnp
push
fsub
mov
mov
lea
xchg
call
ins
mov
xchg
mov
mov
aad
add
pop
add
xor
jge
dec
jcxz
int3
lea
out
push
mov
jb
jbe
rcr
jns
rcr
mov
adc
sbb
push
or
inc
or
dec
clc
in
mov
call
rol
add
jo
push
out
add
add
inc
ret
mov
test
mov
mov
(bad)
loop
call
(bad)
or
ins
adc
sub
rcl
dec
adc
shl
add
test
mov
gs
cmp
push
cmp
lahf
sti
add
dec
ss
je
pop
sbb
add
jle
dec
pop
imul
ret
scas
mov
icebp
inc
xor
test
push
sbb
das
iret
call
lahf
imul
fwait
mov
mov
call
aaa
adc
pop
cmp
ins
sub
mov
popf
mov
loopne
jecxz
lods
jmp
jo
push
out
push
andps
stos
jecxz
mul
inc
or
aaa
popf
out
mov
add
pop
loop
iret
movs
lods
push
sar
call
cld
outs
add
or
cwde
call
mov
mov
sbb
out
int
mov
fwait
shl
mov
jp
push
sbb
mov
cmps
(bad)
cwde
(bad)
cmp
arpl
cdq
stc
adc
fst
push
dec
mov
sbb
push
xchg
or
sub
jl
in
sub
aad
(bad)
test
bound
pusha
xor
fnstcw
fst
mov
movs
mov
mov
and
add
in
sbb
addr16
outs
sub
and
push
hlt
mov
nop
call
adc
xchg
daa
push
push
dec
sbb
out
dec
xor
js
shl
fiadd
ins
push
inc
adc
push
data16
sub
shr
xor
fs
mov
out
rcr
mov
movs
mov
dec
sbb
aas
xor
(bad)
aad
(bad)
xor
dec
sub
xchg
jmp
hlt
mov
pop
add
js
sub
outs
push
sbb
sbb
inc
xor
inc
sub
cmp
add
xor
pop
sub
cli
jb
ins
push
imul
outs
jmp
dec
add
xchg
les
sbb
inc
and
jmp
out
mov
sub
sub
jns
cs
data16
aad
enter
fnstenv
and
and
xlat
lods
iret
mov
push
dec
push
mov
ret
pusha
outs
sub
cmp
jmp
or
push
sar
popf
lock
jl
fdivr
mov
test
jb
inc
and
test
sahf
(bad)
ja
mul
ja
push
fild
inc
and
out
fistp
mov
mov
inc
adc
xlat
mov
or
mov
mov
rcr
pop
sbb
push
cmp
outs
or
out
mov
mov
repnz
jecxz
rcr
cmps
aad
cmp
(bad)
cmps
les
pop
xor
ds
cdq
repnz
in
jo
inc
mov
or
push
ret
mov
cwde
repnz
add
push
icebp
inc
sbb
das
dec
or
sub
ror
test
loopne
repnz
fiadd
sbb
pop
out
adc
fstp
add
or
inc
das
push
jecxz
mov
cmp
xor
push
adc
or
ja
pusha
add
icebp
popa
lock
ins
mov
lds
xchg
hlt
mov
popf
xchg
jbe
jle
jo
aaa
loop
hlt
mov
mov
jae
dec
xor
push
loopne
add
jbe
adc
test
add
jmp
mov
sub
mov
in
adc
outs
mov
xor
gs
mov
cwde
fcom
pop
out
sbb
push
and
stos
imul
pop
sub
rol
fwait
shl
cmp
aaa
dec
add
jmp
push
and
and
ins
cmp
aam
inc
and
or
ds
and
xor
push
dec
aas
push
in
jg
enter
in
fwait
stc
popf
rcl
lock
ret
adc
outs
adc
xchg
fadd
test
out
cmp
push
jo
inc
or
inc
or
cwde
sti
and
(bad)
neg
into
push
mul
push
pop
retf
jle
aam
push
mov
jmp
in
add
push
add
mov
pop
cs
inc
xor
cmp
pusha
add
mov
or
and
(bad)
pcmpgtw
in
mov
shr
aaa
push
cmp
pop
add
mov
jb
inc
cmovle
jle
loop
shl
ror
rol
fs
xchg
(bad)
or
and
sbb
inc
xor
lds
imul
aad
nop
test
jb
dec
xor
mov
mov
push
jb
or
dec
sbb
scas
fimul
pop
sbb
imul
fild
cmp
mov
push
cmovp
xchg
loope
and
call
adc
and
and
inc
and
push
ja
or
jp
push
jno
inc
or
mov
mov
retf
mov
scas
push
sbb
arpl
fiadd
push
adc
jnp
dec
and
jnp
rcr
popf
lds
mov
les
xor
sti
xchg
int3
iret
mov
jne
mov
les
fld
jae
jae
shr
jb
pop
cmp
imul
cs
push
sub
sbb
jp
pusha
push
inc
adc
cli
xchg
out
test
lods
enter
sahf
shl
and
scas
(bad)
xchg
movs
into
mov
cld
sub
push
(bad)
call
ins
sub
cmp
and
into
test
push
mov
mov
lea
xchg
div
xchg
cmps
rcl
(bad)
bound
inc
je
pop
sub
iret
xchg
lods
mov
gs
in
bound
inc
pop
in
rol
ins
push
jbe
add
aam
jo
jns
(bad)
test
into
lea
jecxz
jmp
rcl
nop
xchg
xlat
mov
mov
jge
inc
sbb
fisub
(bad)
add
inc
sub
add
dec
loop
js
pop
and
rcr
retf
addr16
adc
scas
leave
outs
add
jmp
in
(bad)
stc
adc
inc
pop
cmp
in
cli
mov
push
sbb
mov
mov
xchg
mov
add
adc
jp
pop
jmp
lods
iret
mov
mov
pop
and
mov
mov
(bad)
frstor
movs
dec
and
sub
inc
out
movq
mov
stos
repz
cmp
fcmovu
pusha
sub
imul
lahf
xlat
mov
add
mov
in
mov
adc
sbb
or
push
in
jb
pop
test
in
shl
jl
dec
mov
jp
push
xor
adc
pop
sbb
in
nop
test
jb
push
jl
lea
jo
pop
xor
add
stos
(bad)
mov
push
or
(bad)
fwait
out
mov
mov
fcom
xor
adc
pop
rcl
sub
sbb
jne
pop
adc
mov
imul
ins
mov
pop
or
add
push
inc
jmp
mov
aas
push
sbb
ins
sub
repz
jge
jge
adc
xlat
mov
sub
scas
xchg
(bad)
mov
sbb
cmp
repz
cmp
cdq
hlt
imul
adc
pop
pop
loop
sub
sub
cs
movd
fidiv
sub
out
inc
adc
in
movs
rol
jmp
retf
mov
sahf
inc
and
and
sub
pop
mov
xchg
fadd
push
ss
sub
push
pusha
and
cmp
cwde
retf
stc
cwde
loop
rcr
mov
or
mov
cwde
fist
not
popf
aam
ret
and
push
std
sar
cmp
xor
dec
push
outs
(bad)
stos
shl
movs
fnsave
add
xor
std
xor
inc
cmp
frstor
cmps
xor
mov
aam
push
push
jecxz
fnsave
xchg
xchg
dec
or
jnp
jne
xor
aas
push
push
repz
in
scas
enter
imul
xchg
fmul
int
fstp
in
mov
gs
es
arpl
repz
retf
mov
popf
shr
dec
add
loopne
jb
mov
(bad)
in
pop
or
(bad)
adc
dec
cs
sbb
ds
cmp
pop
mov
lds
adc
mov
cmps
sbb
push
stc
das
pop
push
inc
aaa
push
sbb
sub
mov
gs
push
sbb
adc
fidivr
test
aas
inc
loop
fld
mov
data16
xchg
fstp
daa
cmp
xchg
lock
and
mov
inc
or
mov
ror
fidivr
cmp
pop
xor
arpl
jb
mov
jg
xor
aas
cli
inc
adc
mov
outs
adc
push
fs
arpl
xchg
ins
cmps
sti
cmps
ror
lock
fld
pop
xor
cmp
shr
(bad)
into
mov
ret
cmp
xchg
ret
mov
je
rcl
jmp
adc
cmp
dec
add
mov
add
push
in
aad
repz
popf
mov
mov
cmp
add
pop
adc
adc
inc
pop
jno
inc
cmp
fisub
xchg
test
jno
sub
sbb
daa
jb
jns
inc
neg
push
sbb
and
jne
jge
jl
pop
std
movs
cld
data16
sbb
outs
push
bound
daa
pop
aas
pop
cmp
mov
push
ins
and
jg
push
shl
jb
add
xchg
push
add
mov
sbb
mov
leave
fild
dec
pushf
movs
xchg
and
xchg
pop
xchg
gs
icebp
cmps
push
aad
fnsave
xchg
rcr
and
add
inc
pop
cli
mov
jmp
stos
popf
inc
ret
outs
push
jmp
gs
dec
cmp
or
sub
and
je
jno
cmps
(bad)
mov
xor
and
cmp
ds
inc
ss
cmp
scas
or
movs
fnstsw
inc
fs
loope
in
xor
ret
int3
jp
mov
ror
xchg
idiv
adc
lods
pushf
stos
push
icebp
je
xor
xor
jl
jmp
cld
aad
mov
or
ss
jle
pop
ror
dec
jp
movs
sti
pop
push
stc
not
mov
inc
fistp
arpl
rcr
aas
mov
jle
pop
push
imul
or
or
sub
aam
je
cwde
sub
hlt
cli
push
out
or
test
div
ss
(bad)
mov
rcl
shl
cmp
repz
sub
xor
lods
ret
jmp
pusha
jmp
into
mov
sub
inc
add
or
adc
push
fs
sbb
mov
and
push
(bad)
dec
sbb
mov
movs
cdq
mov
jg
loopne
lods
outs
pop
pop
or
sbb
jnp
scas
repz
arpl
(bad)
stos
out
mov
cwde
or
or
fldenv
xchg
ins
cwde
pop
push
mov
sub
addr16
ret
sub
mov
jmp
out
or
(bad)
mov
adc
dec
xchg
dec
ins
sbb
adc
jmp
sub
(bad)
jnp
sub
outs
ja
sbb
mov
xchg
inc
(bad)
rcl
sub
add
into
rcr
xor
jmp
dec
outs
jne
shr
popa
cmps
fwait
adc
gs
popa
and
mov
jg
cmp
scas
mov
xchg
ds
xchg
loop
imul
sub
shl
jbe
jae
in
ret
adc
ss
lods
push
iret
scas
fs
repnz
and
push
in
cmp
sub
cmp
mov
inc
daa
add
fcmovb
push
mov
inc
loopne
lods
jg
outs
shl
jg
sub
sub
sbb
retf
xor
cmp
popa
push
outs
dec
add
outs
aad
out
xor
pop
sbb
inc
(bad)
pop
movs
mov
sbb
and
cmps
mov
ins
and
adc
pushf
je
(bad)
push
cwde
push
inc
lods
std
(bad)
mov
ret
int
push
pop
es
cmp
call
push
pop
xchg
jno
push
in
test
iret
or
cmps
in
sbb
cmps
addr16
aas
and
shr
jae
push
pusha
ss
push
ret
mov
fbstp
sbb
outs
daa
adc
ins
sbb
aaa
inc
hlt
lea
mov
pop
icebp
pusha
xchg
add
sub
push
dec
dec
or
mov
jg
pop
jno
std
scas
arpl
dec
pop
push
movs
lahf
aaa
es
aaa
fsub
retf
data16
js
cmps
pop
cmp
adc
mov
call
int3
xor
add
movs
hlt
shl
jnp
mov
and
fwait
push
in
or
cwde
adc
xor
fdivr
adc
add
cwde
cwde
dec
mov
or
cdq
repnz
push
cmp
jno
addr16
test
sub
in
enter
movlps
mov
ss
fdiv
movs
adc
ror
push
iret
mov
aad
pop
les
aam
xchg
mov
mov
mov
cmp
adc
ins
out
or
(bad)
ret
std
int3
(bad)
stc
and
arpl
retf
sub
lock
adc
out
jp
mov
pop
cmp
hlt
or
sub
xor
add
sbb
or
xchg
xor
loop
sbb
pop
scas
call
aam
jbe
xor
sbb
js
(bad)
mov
and
in
add
jo
cdq
fld
xchg
repnz
push
xchg
jae
sub
test
push
or
out
push
call
sbb
pop
iret
mov
pop
sub
repnz
in
ins
ret
or
out
cdq
out
outs
adc
mov
mov
mov
loope
and
fimul
popf
mov
stc
pop
lea
cmp
xor
sbb
in
out
dec
pusha
pop
mov
sub
xor
int
ds
jno
adc
fcom
shl
iret
icebp
inc
xchg
mov
mov
ret
jae
lahf
fwait
mov
jbe
fwait
gs
mov
adc
mov
rcl
fsubr
ss
out
mov
cs
cmp
das
hlt
jnp
push
adc
xor
xchg
sbb
(bad)
jp
push
es
mov
in
(bad)
stc
xor
jecxz
sahf
add
movs
jae
or
push
ret
call
and
add
or
scas
mov
mov
fcomip
stos
push
xchg
sbb
call
xchg
mov
cmc
cli
inc
ret
push
pop
imul
or
or
pop
cdq
cmp
xlat
stc
into
inc
aaa
fwait
adc
shl
sub
mov
and
inc
(bad)
enter
dec
loop
inc
bound
push
lea
repnz
stc
adc
cld
or
shr
aam
icebp
sbb
movs
pop
clc
jle
movs
xchg
out
bound
dec
outs
ficomp
repz
in
jmp
add
in
call
sub
inc
push
push
xor
add
pushf
xor
(bad)
push
push
ins
xor
dec
xchg
stos
cmp
inc
movs
sbb
dec
pop
not
xchg
retf
jns
pop
or
call
dec
(bad)
loopne
cmp
das
loopne
dec
outs
retf
test
jg
adc
ins
call
mov
push
movs
sub
cmps
add
or
or
call
enter
adc
(bad)
mov
pop
xor
cmp
dec
mov
cmp
clc
and
or
and
xor
mov
xchg
pop
fistp
inc
dec
sbb
(bad)
cmp
aaa
sub
cld
mov
adc
movs
pop
inc
movs
fistp
mov
sbb
mov
loopne
mov
push
push
popa
test
sar
jge
fst
inc
push
xchg
movs
sbb
cs
push
sub
mov
jmp
push
jb
push
push
jns
pop
cmp
jb
mov
cmps
add
mov
test
dec
out
leave
sbb
push
dec
ss
sbb
retf
sub
imul
aaa
jno
test
arpl
(bad)
scas
rcl
xchg
mov
jmp
into
push
push
dec
dec
push
repz
mov
out
mov
out
mov
sub
xor
and
into
or
movs
lods
out
repnz
aam
ret
inc
jns
add
scas
outs
dec
cmp
push
adc
lods
out
push
sub
mov
and
repnz
xchg
pop
sti
(bad)
enter
imul
daa
ins
leave
stc
out
out
enter
or
loop
xchg
(bad)
push
inc
aaa
outs
mov
jo
or
lahf
add
push
(bad)
retf
cmp
xor
shr
out
leave
and
mov
and
xchg
jo
xchg
stc
inc
add
jge
cmps
popf
(bad)
cli
adc
int
xor
stc
repz
mov
fwait
mov
test
cs
jmp
push
jno
push
test
push
inc
cwde
dec
xchg
cld
or
test
imul
fdivr
les
xor
dec
inc
jno
repnz
andps
mov
cmp
inc
rcl
int3
push
mov
sub
sbb
fiadd
sub
imul
call
arpl
xor
das
dec
add
mov
out
pop
push
mov
dec
idiv
mov
(bad)
dec
cld
aas
mov
cdq
xor
loop
sbb
in
and
test
clc
inc
jbe
rol
scas
jnp
mov
push
stos
and
jb
ja
and
cld
push
(bad)
dec
jle
stos
cmp
clc
(bad)
and
inc
jl
mov
jbe
mov
push
sbb
or
push
out
test
loope
dec
inc
jmp
jge
mov
add
mov
bnd
sub
xchg
rcl
ret
sahf
pushf
pusha
test
aaa
jae
(bad)
add
sub
push
jnp
push
mov
cmp
lock
and
mov
dec
pop
stc
xchg
sub
addr16
cmp
icebp
nop
pop
enter
jne
push
mov
jo
jns
inc
fwait
mov
das
dec
lock
je
cmp
retf
jo
and
xor
jbe
mov
(bad)
fdivp
fstp
cmp
sbb
rcr
mov
mov
dec
jnp
and
jp
or
lods
push
sub
add
and
cwde
movs
imul
lock
mov
cmp
int
pop
xlat
sbb
iret
mov
adc
sbb
jbe
outs
mov
scas
mov
ins
jmp
ror
(bad)
mov
loope
repz
repnz
push
sub
add
push
icebp
pop
rep
pop
dec
rcr
ret
mov
sub
ins
xchg
aam
leave
addr16
call
sbb
ret
pop
rcl
and
sbb
sub
mov
push
push
repz
lds
sub
add
mov
scas
xor
ins
pop
(bad)
xor
push
xchg
add
push
push
xchg
sub
and
aad
jmp
(bad)
sbb
lods
sahf
ins
pop
fmul
mov
and
inc
dec
inc
sbb
lds
xchg
(bad)
or
push
dec
hlt
test
xor
data16
leave
jge
or
push
jl
cmps
jnp
mov
xor
adc
adc
(bad)
fcom
mov
sub
mov
jle
test
inc
push
cmps
in
jo
cmp
xlat
mov
rol
fld
jne
sar
add
(bad)
cmc
cmp
test
fs
mov
push
and
inc
dec
movs
es
adc
icebp
push
cmp
and
jecxz
inc
push
xchg
push
mov
mov
in
xchg
(bad)
in
jmp
sub
mov
loopne
popf
repz
hlt
mov
inc
add
xchg
and
jo
mov
std
fnstenv
xlat
pop
lea
mov
xchg
adc
mov
cdq
add
and
add
mov
imul
xor
enter
xchg
hlt
ja
jnp
xchg
and
xchg
push
inc
cwde
xchg
popa
lds
add
bound
(bad)
arpl
int3
js
sub
icebp
inc
pop
sub
dec
pop
add
cmp
aas
scas
fisub
out
dec
jmp
out
cmp
sub
dec
mov
aad
aaa
outs
jp
dec
and
jmp
int
(bad)
jmp
sbb
rcl
inc
xchg
sbb
cld
cmp
jne
push
sar
cmps
mov
mov
jns
cmps
call
inc
sbb
push
fist
push
enter
sub
arpl
sub
sbb
sti
hlt
lea
(bad)
dec
jg
jbe
iret
or
ds
pop
and
out
stc
mov
lock
add
ins
or
ret
call
mov
(bad)
cld
in
push
rol
cwde
xlat
call
xchg
cmp
(bad)
js
fnstenv
mov
and
jae
ficomp
dec
jl
push
aam
dec
jb
mov
fcom
cmc
mov
retf
cmp
test
stc
call
clc
xor
or
jno
dec
jle
jns
scas
dec
mov
in
(bad)
jb
xchg
ret
xor
push
xchg
ins
xchg
or
retf
imul
ins
jge
retf
mov
rcl
pop
cmps
sub
lods
frstor
cmp
add
dec
cdq
sbb
jnp
pop
or
mov
addr16
pusha
push
call
cwde
or
and
ret
shl
sub
push
repz
ins
xchg
jmp
ror
sbb
and
div
add
imul
add
cmps
xchg
dec
sbb
data16
cmp
or
push
movs
fild
adc
pusha
cld
or
inc
and
jp
lock
cmp
fisttp
fstp
mov
inc
aam
ss
jae
test
or
movs
pop
shr
ins
movs
aam
repz
call
rcl
je
rol
scas
movs
lods
and
sahf
inc
push
and
loope
daa
jmp
(bad)
inc
popf
xor
push
aam
(bad)
jle
mov
mov
fldenv
fild
ds
fwait
out
pop
xchg
dec
mov
mov
fldcw
jmp
sbb
movs
nop
mov
xor
xor
enter
xor
in
mov
xchg
inc
xor
ret
addr16
sub
dec
mov
mov
ret
es
das
out
sub
ss
je
fdivr
mov
inc
dec
sub
aaa
icebp
jg
stos
or
sbb
fisttp
xchg
jnp
sub
lea
cmp
xor
xor
jmp
mov
call
mov
or
dec
cli
cmp
push
sub
mov
fwait
mov
shr
or
sbb
shl
out
call
rol
int3
dec
mov
shl
adc
addr16
scas
stos
mov
enter
adc
in
movs
cmp
and
arpl
add
das
push
nop
xor
jae
push
mov
xchg
pop
stos
inc
add
sbb
sbb
dec
fxch
pop
adc
stos
mov
or
test
inc
jge
sub
and
xor
jmp
xchg
mov
mov
inc
lods
mov
scas
sahf
(bad)
stos
ds
out
and
pop
and
inc
icebp
stc
inc
addr16
call
xlat
mov
repz
mov
pop
sub
sub
cmp
fcmovnu
cmp
sahf
pop
mov
and
inc
bound
(bad)
sub
xchg
and
loop
or
lds
loop
push
xchg
xchg
inc
inc
ja
mov
and
push
loop
pop
dec
sbb
nop
pop
in
inc
sub
je
sbb
pop
popf
mov
test
(bad)
ja
push
inc
mov
mov
aad
jle
cmp
cmc
cmps
push
cmp
test
push
xlat
pop
(bad)
loopne
lea
jno
loop
mov
cmc
jg
ror
push
jmp
imul
movs
sbb
ins
push
add
ss
pusha
pop
scas
jmp
into
jne
or
add
enter
inc
shr
retf
les
in
loop
adc
pop
ret
shl
dec
(bad)
int
mov
dec
xor
out
ins
ja
ins
aam
mov
xlat
xchg
xor
popf
aas
or
mov
les
adc
das
xchg
cmp
bound
mov
or
(bad)
fcomp
xchg
pop
xchg
sub
cwde
inc
jbe
mov
mov
jmp
sbb
movntq
out
rcl
jns
jg
push
dec
sbb
sar
sbb
adc
xchg
or
xor
in
mov
cmp
xor
(bad)
mov
push
adc
push
(bad)
loopne
push
push
xchg
aaa
ficom
push
and
sbb
jo
or
clc
jp
xchg
in
imul
js
pop
or
aas
loope
cmps
and
add
sub
inc
mov
jmp
shr
inc
(bad)
mov
ins
int3
jecxz
outs
add
mov
hlt
test
add
xchg
mov
loope
fnstcw
dec
jbe
inc
mov
je
xchg
sbb
or
xchg
adc
xchg
(bad)
sbb
jmp
test
mov
mov
pop
lock
push
inc
mov
retf
or
and
mov
lds
out
mov
jp
ss
ins
sub
push
mov
mov
adc
je
push
mov
jne
xor
inc
fiadd
mov
mov
sahf
sbb
repnz
sbb
mov
add
inc
add
adc
rcl
dec
mov
mov
lds
mov
or
pop
iret
and
mov
mov
test
mov
mov
(bad)
ins
xchg
mov
push
pop
dec
sbb
sub
arpl
xchg
(bad)
or
and
icebp
ja
dec
jbe
inc
and
adc
jno
into
popf
and
pop
inc
aaa
lods
aas
inc
inc
retf
push
cdq
jmp
dec
sub
push
ret
imul
cmc
adc
push
mov
add
pop
cli
in
mov
stos
stos
je
(bad)
cli
in
mov
xchg
push
out
repz
inc
pop
faddp
push
vorpd
rcl
or
out
mov
push
rcr
sbb
aad
retf
int
pop
aam
sub
stos
ins
fdiv
(bad)
mul
mov
int3
or
xor
movs
rol
(bad)
pop
and
sub
and
pop
mov
movs
hlt
or
pop
adc
pop
or
out
pop
jl
gs
iret
add
push
sub
lea
push
fsubr
pop
pop
fwait
aam
iret
out
repnz
push
push
sub
pop
dec
jg
sbb
cs
cmp
push
mov
mov
pop
xchg
lea
cli
mov
popa
xor
jmp
mov
mov
mov
les
out
dec
cmps
add
(bad)
ins
dec
gs
ins
out
pop
test
in
inc
aaa
lods
daa
aam
pushf
pop
jne
inc
cwde
pop
add
xchg
aad
sbb
xchg
in
ret
or
cmc
ins
dec
imul
pop
lahf
in
loop
rol
dec
mov
mov
retf
movs
or
fdivr
fs
sbb
outs
pop
fcmovbe
sub
aas
cwde
stos
shl
xor
gs
retf
jmp
jp
idiv
loope
scas
ror
stos
xchg
add
sub
sub
xchg
ror
ja
(bad)
clc
dec
add
scas
fist
and
adc
test
aaa
pop
push
pushf
dec
xchg
or
mov
push
std
mov
call
xchg
jl
mov
es
clc
popa
dec
jp
scas
outs
xchg
je
sbb
dec
daa
pop
jp
leave
aad
mov
jbe
sbb
push
or
bound
daa
push
cmp
dec
cdq
or
adc
lods
lea
fiadd
mov
jb
jmp
push
fist
mov
icebp
xlat
outs
loopne
cmp
xor
fs
hlt
add
jg
jle
mov
xchg
cld
fcmovnu
shl
cmp
push
sbb
and
sub
rol
fiadd
sbb
ret
push
jne
push
jb
xchg
pop
scas
or
or
jge
(bad)
enter
addr16
xchg
rcr
(bad)
push
xor
movs
lods
icebp
js
adc
das
inc
jne
call
dec
shl
sahf
push
inc
cmp
cmp
xor
mov
mov
push
scas
dec
push
xchg
inc
sbb
and
les
dec
jmp
les
push
aad
cmp
pusha
loop
imul
int3
add
ss
push
adc
and
and
adc
sub
and
not
sar
and
arpl
jg
pop
ret
and
mov
cmp
jecxz
pop
lods
push
in
call
jns
cmp
ret
lock
retf
pop
mov
stos
outs
cld
push
inc
and
cmp
pop
lock
jmp
sub
xor
sbb
mov
push
call
push
jmp
xor
dec
mov
mov
mov
push
sub
(bad)
stc
xor
addr16
out
(bad)
div
mov
arpl
xor
pop
out
and
sub
cwde
xor
icebp
test
pop
xor
cmp
xchg
(bad)
out
sbb
fdiv
jg
dec
sbb
jmp
jle
cmp
dec
mov
jge
jns
cmp
dec
mov
dec
(bad)
in
fstp
aaa
push
cwde
push
add
mov
(bad)
call
inc
mov
sub
mov
ret
clc
mov
push
inc
shl
mov
pop
jbe
xor
arpl
mov
jmp
arpl
out
jb
ficom
xchg
jbe
rcr
add
inc
sbb
mov
and
mov
mov
test
(bad)
add
loope
mov
ja
fmul
sbb
xchg
xor
ret
inc
fsubr
dec
scas
mov
sub
jae
(bad)
or
dec
pop
pop
jg
mov
mov
movs
add
xor
sbb
pop
jmp
push
xchg
(bad)
dec
jo
(bad)
jne
test
movs
out
pop
aas
inc
arpl
mov
outs
stos
jmp
adc
dec
dec
lds
cs
cmp
out
adc
cli
movs
icebp
pop
je
mov
jp
outs
xor
mov
adc
add
push
xor
lea
imul
movs
mov
inc
icebp
nop
jmp
sbb
icebp
dec
jae
mov
iret
push
ds
ja
popa
jno
inc
push
inc
jne
and
(bad)
push
int
xor
(bad)
retf
jmp
and
inc
scas
jnp
or
idiv
adc
arpl
adc
sub
in
adc
jo
lahf
lea
in
mov
mov
addr16
pop
jmp
lock
xchg
push
push
sub
and
cdq
mov
xchg
jo
pop
xor
(bad)
adc
sbb
and
sub
dec
fild
ret
pushf
test
mov
mov
dec
xor
es
xchg
inc
je
adc
repnz
stos
cmp
mov
adc
je
das
xchg
pusha
xchg
movs
push
cmps
jmp
dec
in
push
mov
pop
repz
nop
ins
mov
retf
stos
push
lds
cmp
leave
push
xlat
je
jae
fisttp
rcr
mov
push
sub
adc
ret
aas
fiadd
jp
(bad)
movs
jl
sbb
cmp
jecxz
push
or
or
mov
jb
mov
fstp
js
jmp
jp
stc
fisubr
out
test
stos
pop
cmp
fucomp
lock
mov
xor
sets
out
in
in
aam
push
mov
call
sbb
imul
mov
inc
xchg
and
jmp
frstor
or
sahf
add
add
dec
xor
mov
xchg
mov
inc
or
dec
mov
mov
pop
sbb
popa
inc
int3
(bad)
mov
cli
sbb
and
cs
push
das
loop
sbb
scas
jnp
imul
inc
xor
stc
test
nop
pop
imul
call
cmp
lea
fisttp
and
and
push
jge
fistp
mov
push
out
cli
jmp
push
pop
shl
leave
bound
mov
(bad)
and
add
out
pop
repz
pop
(bad)
clc
test
push
fs
and
sahf
xor
ret
lock
mov
mov
cmp
and
movs
mov
mov
aad
mov
sahf
push
xor
adc
dec
out
sub
xchg
cvtpi2ps
cld
pop
popa
jbe
outs
push
cld
(bad)
mov
test
push
lock
scas
xchg
or
test
aas
mov
mov
sbb
jp
movs
cmc
imul
xchg
fidiv
sub
adc
test
and
xchg
or
push
bound
das
inc
xor
cmps
or
mov
adc
and
cmp
dec
sub
(bad)
(bad)
mov
popf
sub
and
popa
retf
sub
jecxz
pop
fwait
jne
int
sbb
cwde
imul
into
jmp
jle
adc
(bad)
sbb
pop
pop
mov
and
mov
xchg
cmc
pop
call
xchg
mov
(bad)
push
jbe
cmp
and
jl
aaa
mov
loop
(bad)
inc
pop
and
xchg
or
sbb
jb
aam
pop
lahf
aaa
rol
and
hlt
push
jnp
cs
pop
dec
dec
mov
add
sti
lea
lahf
mov
dec
clc
in
aaa
mov
popf
sub
inc
loop
dec
mov
ficomp
jle
out
stc
dec
aad
sti
addr16
ret
mov
pop
aad
dec
fisubr
cdq
repz
mov
fisub
inc
jg
mov
pushf
push
cmps
ja
add
inc
(bad)
inc
shl
push
jns
js
ja
add
rol
cwde
dec
sub
cmp
stos
dec
js
jmp
in
stos
and
sub
xor
inc
inc
adc
data16
xchg
(bad)
ffreep
pop
push
shl
ror
test
out
add
inc
addr16
push
mov
add
out
lods
icebp
or
mov
dec
adc
adc
stos
mov
or
in
push
ds
fisttp
sbb
inc
shl
pop
mov
xlat
sub
or
mov
bound
mov
push
test
(bad)
jnp
mov
in
sub
dec
push
pop
in
ins
lock
cmp
jo
iret
cmp
lods
sub
in
or
dec
pop
mov
or
test
add
movs
mov
gs
xchg
adc
(bad)
or
add
jge
mov
jne
and
cmp
inc
add
in
inc
sbb
outs
xchg
lods
xchg
pop
fst
sub
lock
xor
jmp
mov
pop
add
or
pusha
mov
push
jle
inc
pop
lods
sbb
lds
fld
jbe
adc
je
sub
pop
shl
mov
test
jb
imul
jb
(bad)
push
stos
mov
jnp
outs
je
adc
mov
adc
xor
dec
jo
out
imul
test
dec
retf
push
push
call
dec
addr16
cmps
rol
xchg
push
sub
lahf
push
inc
pusha
in
mov
adc
outs
push
clc
jmp
and
add
dec
jae
jecxz
mov
mov
outs
aam
or
stos
dec
and
call
adc
popf
mov
sub
fwait
fwait
les
sbb
and
jmp
mov
out
mov
imul
and
(bad)
int3
inc
xchg
jg
icebp
xchg
inc
cmp
push
repz
mov
addr16
(bad)
inc
dec
mov
es
dec
dec
dec
sub
sahf
mov
inc
mov
in
daa
int
mov
les
call
and
mov
add
das
or
fmul
ins
mov
jge
inc
mov
aam
shl
xchg
mov
lods
popf
cmp
enter
dec
je
out
outs
mov
popa
mov
call
xchg
push
or
xchg
inc
inc
inc
pop
popa
xlat
jge
aam
nop
cld
xlat
mov
cmp
lds
sbb
push
jge
(bad)
stos
js
ins
in
push
repnz
inc
sbb
jecxz
push
dec
iret
adc
loopne
push
xchg
push
inc
jns
push
mov
test
push
mov
(bad)
sub
hlt
or
pop
cli
in
jge
cmps
dec
pop
mov
mov
icebp
fld
jb
cs
scas
fdivr
rol
mov
lods
and
popf
add
sbb
retf
mov
call
mov
inc
or
out
jmp
mov
je
sbb
ret
xchg
mov
dec
mov
inc
inc
test
gs
fcomip
push
pop
js
cmp
xchg
or
pushf
mov
sti
push
mov
xor
mov
ret
mov
or
pop
inc
ror
loopne
pushf
mov
lods
aad
or
cwde
and
sahf
pusha
shr
call
sub
pop
mov
push
addr16
and
mov
xor
inc
cmp
cmp
adc
fs
add
enter
xchg
mov
mov
sub
push
aad
xchg
xchg
lods
leave
dec
mov
leave
data16
pop
pop
cmps
mov
jle
push
scas
dec
out
fst
xor
add
pop
stos
mov
in
aad
or
fnstsw
iret
mov
es
or
pop
mov
xor
jae
outs
aam
loopne
mov
inc
popa
ficom
into
fstp
cli
inc
lahf
les
es
imul
xchg
sahf
or
pop
jns
mov
lods
lahf
retf
mov
or
fld
sbb
inc
push
or
inc
shl
sub
mov
sub
mov
xchg
cmp
popa
imul
test
data16
ror
lds
aam
std
mov
out
cmp
xchg
(bad)
in
sub
(bad)
out
bound
lods
loope
cmc
xchg
test
add
cmc
and
adc
lahf
outs
cmp
sbb
mov
jnp
lods
mov
lock
jno
loopne
inc
gs
sbb
mov
out
lods
lahf
sub
repnz
mov
lahf
icebp
fisub
cwde
dec
sbb
adc
test
mov
add
jg
or
xor
sbb
pop
aam
push
adc
jmp
add
mov
xchg
pop
ins
sbb
add
mov
sub
add
loope
cli
lds
mov
into
push
or
mov
mov
jmp
jns
push
pushf
xlat
dec
dec
sti
pop
in
out
mov
mov
jge
mov
sahf
stc
mov
sbb
cmc
cmp
push
iret
mov
cmp
or
rol
fstp
mov
pop
in
sti
inc
std
jno
mov
test
pop
scas
dec
in
sti
inc
jno
imul
lea
ret
(bad)
pusha
data16
inc
movs
dec
fild
dec
popa
imul
popf
cmp
push
test
xor
aas
cmc
and
mov
xchg
jne
mov
cli
fmul
movs
sbb
cwde
sub
jmp
fnsave
or
inc
and
inc
or
xchg
or
ret
fidiv
(bad)
aaa
daa
sub
mov
loop
xor
sahf
cli
icebp
or
scas
dec
shr
push
push
aam
adc
fsubr
out
lods
jecxz
xchg
mov
movs
loopne
inc
cdq
stos
push
movs
adc
in
xor
adc
cld
sub
jno
mov
call
adc
(bad)
and
jg
push
dec
rcl
and
fs
sbb
cld
or
fstp
inc
jmp
and
inc
jbe
out
(bad)
or
adc
mov
test
mov
jle
(bad)
stos
rol
aad
test
dec
test
test
xchg
stos
adc
xor
push
int3
dec
mov
cli
pop
(bad)
icebp
sbb
or
rcr
dec
fs
and
shr
inc
mov
inc
ins
js
adc
mov
dec
mov
in
xbegin
push
loopne
sbb
sub
inc
push
fld
repnz
call
icebp
adc
sub
out
push
pop
mov
push
xchg
pop
mov
int3
sbb
inc
xchg
sub
inc
cdq
fs
mov
cmps
mov
out
add
fadd
push
push
jnp
inc
int3
mov
je
push
mov
mov
pop
xchg
inc
mov
pop
fimul
movs
xchg
in
xlat
pop
imul
lods
fwait
jmp
inc
enter
push
mov
loopne
(bad)
cmp
pop
loop
jp
dec
lods
aad
sahf
inc
(bad)
dec
stc
dec
lds
movs
jge
or
call
jl
dec
mov
out
ficomp
add
data16
sub
dec
mov
scas
and
and
or
clc
addr16
jge
mov
out
popf
lods
adc
and
jno
cdq
mov
int
pop
or
cmps
loopne
clc
fucomip
dec
test
add
mov
pop
loope
xor
sbb
loope
ror
aad
fimul
sti
pop
sub
loop
pop
cld
sub
clc
mov
clc
sbb
cmp
scas
(bad)
mov
inc
cmp
shl
xchg
cmps
repz
push
dec
shr
add
inc
sub
out
xor
pusha
das
cld
cs
inc
out
pop
jnp
mov
arpl
pushf
adc
nop
jns
ja
test
stos
in
out
xchg
xor
or
retf
or
cmp
test
mov
inc
pop
push
mov
pop
lods
aas
mov
dec
arpl
jmp
jnp
adc
rcr
xor
retw
push
add
sti
test
adc
ret
dec
out
(bad)
mov
dec
cli
mov
dec
fdivr
pop
stos
xor
push
(bad)
push
sbb
aad
enter
shl
aaa
int3
dec
out
jo
sbb
test
arpl
stc
pop
cli
mov
(bad)
lahf
push
pop
(bad)
dec
dec
fisttp
dec
out
aaa
sub
sub
shl
cmp
cdq
inc
mov
jp
sbb
mov
rol
mov
push
sti
repnz
nop
push
call
and
je
add
xor
out
shl
sub
mov
mov
xchg
in
mov
pop
in
cmp
cdq
xchg
into
fist
test
or
add
push
cmps
scas
pop
aam
lock
test
in
push
icebp
jb
pop
pop
ret
addr16
adc
push
fwait
jo
jnp
or
inc
push
shl
sar
sub
out
aad
inc
cmp
pop
inc
mov
ins
cmp
ror
pop
ins
push
repnz
int3
stos
or
(bad)
or
jecxz
hlt
pop
cld
loopne
add
sub
addr16
addr16
data16
cdq
dec
inc
xchg
sub
int
mov
or
jo
fs
xor
stc
popa
jnp
fisubr
daa
or
scas
les
inc
mov
shr
mov
iret
shl
cmp
repnz
or
or
std
pop
fisubr
cwde
repz
or
shl
leave
aas
xor
rep
ss
mov
icebp
cmp
xchg
push
push
shr
push
hlt
icebp
aam
push
fdivr
and
pushf
push
push
stos
(bad)
repz
mov
jmp
ins
leave
and
or
mov
xchg
pop
iret
add
push
in
clc
cmps
out
jne
sti
add
jns
frstor
arpl
and
in
je
loop
scas
(bad)
sar
pop
xchg
out
rcl
stc
in
sub
xor
idiv
loope
gs
push
adc
mov
mov
(bad)
adc
mov
mov
jne
inc
adc
mov
iret
fild
in
mov
push
mov
dec
or
cli
adc
std
xor
inc
out
fadd
dec
(bad)
leave
sbb
jns
and
jp
and
mov
stos
icebp
ins
sbb
xor
cmove
outs
push
call
and
rcl
mov
cli
mov
mov
mov
stos
repz
out
call
outs
mov
shl
add
ss
add
out
pop
xor
loope
int
rcr
dec
fdiv
sub
jb
mov
fsub
rol
lods
icebp
add
adc
sub
lods
lds
loopne
inc
test
sub
jmp
fiadd
es
aam
add
xchg
fidiv
or
retf
adc
mov
jecxz
jp
mov
je
dec
inc
jmp
push
mov
lahf
pop
jmp
sbb
jmp
sbb
adc
sahf
lods
lock
int3
or
pusha
inc
jo
xor
popa
sub
pop
retf
cmp
and
mov
dec
or
out
iret
and
sub
or
shl
cs
outs
gs
push
pop
adc
in
and
test
scas
dec
mov
jle
add
inc
jb
sbb
test
jmp
jle
cmps
lea
mov
mov
jns
or
and
call
pop
mov
mov
xor
dec
inc
call
nop
dec
retf
lds
adc
lds
pop
inc
push
retf
pop
mov
and
shl
adc
sbb
jp
jecxz
fcomip
lods
call
dec
jb
mov
iret
mov
and
jp
stos
mov
mov
aas
mov
jbe
xchg
xchg
and
push
movs
cmp
sub
jnp
lods
or
mov
cmps
mov
sub
mul
sbb
mov
into
pusha
gs
(bad)
loope
or
sbb
jecxz
les
dec
sbb
inc
rep
inc
adc
push
add
inc
pop
mov
mov
mov
push
in
test
test
ret
fidivr
xor
or
push
pushf
inc
sub
rcr
lea
push
cld
adc
cld
mov
ficomp
add
popa
in
xchg
adc
sbb
jnp
adc
fild
rcl
fidiv
mov
mov
push
into
xchg
inc
or
loopne
stos
jb
pop
xor
and
jg
(bad)
push
aad
mov
cwde
setb
mov
(bad)
retf
addr16
inc
into
xchg
and
xor
sbb
cli
pusha
jbe
push
rcl
mov
test
jmp
pop
iret
in
add
sub
jmp
bound
sbb
stos
jbe
call
fistp
ds
stc
pop
or
cmc
inc
cli
xor
sti
adc
mov
xor
outs
into
fstp
cmp
popa
stos
into
out
xor
inc
sbb
mov
push
push
sbb
mov
add
popf
jns
xchg
pop
mov
outs
rcr
jae
imul
mov
(bad)
add
dec
inc
lods
popa
xor
pop
jge
mov
xor
in
cmp
jmp
mov
gs
jl
xor
fdiv
sub
adc
and
mov
and
pop
dec
mov
add
xchg
mov
sbb
push
adc
lea
xchg
pop
stos
jmp
test
xchg
das
xchg
add
les
sub
rol
mov
sbb
dec
je
scas
call
pop
mov
fisubr
je
or
sbb
push
pop
push
lahf
das
add
dec
fisubr
and
aaa
addr16
aam
pop
cli
clc
xor
or
mov
push
push
push
jne
sub
in
xor
mov
ds
outs
std
cwde
jno
(bad)
mov
sub
les
mov
mov
or
not
in
cwde
adc
xor
adc
in
mov
push
je
cmp
sbb
mov
sub
xchg
enter
icebp
add
into
and
es
jns
xchg
cmps
in
xchg
ss
push
mov
sbb
and
jmp
sub
adc
add
jp
popf
add
cli
jmp
pop
(bad)
mov
or
in
cmp
inc
lea
push
inc
sbb
inc
mov
loop
js
sub
mov
idiv
daa
adc
arpl
dec
jae
or
jne
pop
xchg
mov
psubw
mov
jbe
adc
add
dec
and
sub
cmp
icebp
cmps
stos
pop
add
adc
fisubr
ins
(bad)
pop
into
mov
pop
into
inc
xchg
push
mov
jmp
fstp
bound
push
xchg
call
(bad)
rcr
dec
cmp
dec
(bad)
imul
jne
mov
test
push
pop
mov
push
ins
jne
xor
data16
adc
retf
adc
aad
jl
sub
cmp
cmps
inc
sub
cmps
sbb
push
mov
daa
sti
push
test
into
xchg
ss
xor
frstor
pop
(bad)
out
cmc
jecxz
psrld
neg
push
pop
icebp
shr
pop
(bad)
out
push
pop
xor
push
cmp
neg
ret
push
cmp
push
out
dec
adc
gs
mov
add
or
push
dec
mov
push
fisub
data16
jo
cmp
popf
stos
xor
fimul
call
out
popf
mov
cmp
sub
pop
add
mov
fst
das
xchg
fsub
lds
push
stos
in
rcl
sbb
retf
adc
cmp
and
xchg
movs
nop
or
lods
jno
and
imul
shl
push
jmp
int
neg
and
lods
xor
cmps
es
ret
fst
dec
sub
dec
jb
jg
fs
cmps
mov
pop
adc
push
pop
sub
mov
mov
iret
call
int3
sub
in
inc
fld
clc
sbb
fadd
cmp
add
fcomp
jp
cmp
outs
xor
out
shr
jno
adc
dec
into
fstp
fistp
push
pop
div
and
mov
lods
mov
pop
jne
add
lea
push
call
cdq
pop
ins
inc
sub
mov
jmp
rcl
out
stc
push
dec
pop
stos
xchg
ds
cmps
(bad)
push
xchg
sub
rcl
movs
dec
pop
sar
data16
imul
sbb
test
test
mov
movs
mov
ins
jnp
loope
and
adc
add
push
rcl
mov
lods
mov
imul
inc
xlat
add
push
inc
jmp
mov
popa
inc
mov
cli
jecxz
xor
pop
xchg
cdq
cld
cli
push
cmp
mov
shl
repnz
loopne
sti
mov
sub
(bad)
and
adc
inc
xor
fld
adc
xchg
xchg
outs
pop
add
pop
jo
sbb
out
xchg
pop
jo
sub
jl
cmps
xchg
retf
jno
and
fcom
mov
cmp
test
sar
adc
(bad)
jne
jge
fisttp
xlat
sahf
sub
mov
(bad)
xor
push
jmp
dec
call
clc
pushf
dec
fbstp
inc
fwait
lahf
push
(bad)
call
sbb
test
out
ins
movs
mov
cmp
call
sbb
out
jmp
or
cmps
mov
inc
sub
ins
add
xor
dec
loope
add
mov
loop
movs
dec
pusha
sub
mov
sbb
pusha
ds
std
cmp
outs
pop
sub
(bad)
daa
pushf
lahf
mov
(bad)
leave
mov
jnp
jmp
xchg
or
xchg
push
stos
mov
push
adc
mov
ret
jo
inc
ins
dec
jp
movs
ss
imul
xor
sbb
sub
xchg
or
sbb
in
sbb
or
std
nop
or
mov
cmp
and
xchg
test
loop
in
out
sub
pop
dec
and
cmp
xor
fnstcw
and
fadd
shl
into
test
loop
push
or
push
sbb
sbb
add
or
fild
shl
push
sbb
dec
gs
loop
jbe
pusha
cdq
jecxz
iret
test
add
push
cwde
and
mov
pop
jl
shr
cmp
vpsraw
dec
cwde
aas
bound
or
add
repz
repz
pop
fisubr
mov
mov
add
stos
scas
nop
call
repz
mov
std
pop
test
inc
push
xor
dec
sbb
test
push
push
lods
xor
cmp
loop
sbb
repz
adc
sub
lds
xchg
mov
and
xchg
add
mov
test
lock
xor
call
mov
adc
sub
jbe
sbb
cmc
mov
das
lahf
dec
mov
push
mov
and
std
cmp
shl
adc
dec
icebp
cmp
call
jge
sbb
(bad)
loop
ins
scas
xchg
xor
fnsave
jmp
jmp
add
dec
or
bnd
inc
test
mov
out
inc
mov
ret
pushf
aaa
ds
and
pop
enter
ret
mov
lods
imul
add
loop
shr
and
mov
pop
pusha
into
push
sbb
js
dec
shl
test
nop
mov
stc
scas
push
outs
sub
neg
popfw
push
sbb
cmp
or
mov
jnp
jmp
fnstenv
stos
mov
and
mov
cmp
(bad)
aaa
cli
aaa
pop
fidiv
cld
lds
push
out
out
jns
mov
fisttp
sub
add
sbb
cmp
(bad)
(bad)
jmp
pop
scas
push
dec
jecxz
or
ja
sti
jb
jb
adc
jmp
popa
cmp
jbe
int
cwde
cmp
jp
(bad)
test
inc
rcr
je
not
aam
mov
mov
or
test
push
xchg
imul
lock
jo
fmul
xor
jecxz
div
imul
stos
mov
add
div
fst
hlt
add
fwait
mov
sub
(bad)
mov
repz
dec
fwait
jmp
ror
jp
shr
mov
jmp
mov
sub
or
imul
cmps
ins
xchg
dec
shl
sbb
adc
cmp
dec
stc
xchg
push
fisttp
adc
jmp
clc
and
pop
fstp
xor
add
sar
adc
or
inc
retf
sbb
shl
pop
push
lahf
pop
das
and
jmp
es
mov
out
ds
push
out
adc
xor
jb
pop
arpl
arpl
imul
mov
hlt
out
jmp
ret
and
pushf
jg
cmp
pop
je
rol
addr16
and
jae
cwde
addr16
test
dec
pop
repnz
sub
scas
push
mov
inc
movs
mov
jne
ficom
int3
mov
leavew
add
setne
sahf
mov
mov
xchg
ss
jl
pop
mov
(bad)
mov
retf
and
xor
push
jmp
out
sbb
int
lea
and
sbb
push
inc
popa
push
mov
in
xor
xor
mov
jo
lods
jae
adc
mov
mov
inc
das
outs
mov
(bad)
sbb
addr16
jno
das
add
pop
sbb
mov
pop
and
pop
inc
arpl
popf
adc
add
std
iret
or
shl
gs
push
jle
xor
mov
xchg
push
fsubp
push
push
fnstsw
push
jmp
mov
mov
retf
dec
pop
mov
(bad)
icebp
dec
xor
fwait
ja
inc
mov
cmps
sbb
mov
daa
arpl
sbb
mov
cmp
dec
push
bound
fwait
enter
add
outs
mov
test
lea
xchg
retf
popf
cli
aad
xchg
fmul
pop
dec
sub
add
scas
jecxz
cmp
(bad)
adc
pop
mov
push
jp
push
jno
push
nop
jbe
xchg
imul
xchg
mov
in
loop
(bad)
into
(bad)
stc
loope
xor
jns
lods
and
int3
rol
push
mov
fisttp
and
inc
and
clc
sbb
mov
out
out
scas
mov
xor
(bad)
lock
add
cmp
das
lock
lock
fs
sbb
gs
stos
sbb
mul
mov
dec
popa
inc
(bad)
xchg
xlat
xacquire
and
dec
(bad)
leave
sub
imul
jl
iret
pop
aaa
pop
cmp
mov
inc
(bad)
push
pop
(bad)
cmp
(bad)
cmp
retf
movs
stos
add
jae
loopne
and
add
cdq
outs
mov
(bad)
jge
repnz
lock
and
(bad)
adc
repnz
xor
xor
pop
das
jmp
jo
and
and
push
stos
cmp
jp
imul
inc
push
inc
retf
xor
pop
js
stos
shl
sub
pop
mov
out
pusha
mov
retf
push
div
and
xchg
in
jb
mov
sbb
or
repnz
dec
jo
sub
cdq
rcr
fadd
iret
jmp
sub
adc
int3
repz
fisub
pop
movs
(bad)
stc
cli
repnz
movs
(bad)
inc
popa
mov
jbe
retf
jns
adc
fisub
inc
push
adc
sub
(bad)
jecxz
ds
inc
or
ficomp
jo
cwde
push
or
xor
mov
lock
test
bound
in
pop
fidiv
pop
jge
add
or
or
fisub
test
push
mov
or
mov
sbb
dec
fwait
std
add
imul
and
test
sub
repnz
rcr
pop
and
jo
push
mov
adc
push
iret
fstp
stos
and
ja
popf
adc
xchg
out
mov
fistp
push
xchg
jmp
xor
out
add
das
cmp
jmp
ret
jno
dec
enter
mov
cli
and
and
dec
jmp
inc
pop
cwde
xor
leave
adc
daa
(bad)
pop
in
xchg
sub
adc
and
cdq
sub
xor
inc
cmp
pop
gs
in
inc
dec
jae
push
sub
test
(bad)
bound
or
(bad)
ins
lock
adc
jp
inc
mov
pop
loopne
inc
xchg
xor
shr
rol
mov
pushf
sahf
dec
out
test
stos
aaa
pop
fild
dec
shl
sbb
(bad)
mov
fucomi
cmp
test
push
xchg
repz
inc
int3
shl
lods
sub
inc
pusha
inc
cwde
xor
sub
pop
movs
jo
stos
sub
lock
arpl
jnp
(bad)
or
jo
in
dec
ds
mov
stos
push
test
add
adc
jg
ror
rcl
ins
stos
xchg
inc
cmps
cmps
ror
outs
inc
mov
js
call
ins
dec
mov
frstor
dec
fistp
movs
loopne
nop
sub
or
sti
sbb
popa
cli
scas
xor
cmps
mov
ds
imul
(bad)
lock
mov
inc
lods
mov
mov
cmp
lock
test
add
pop
push
enter
cmp
mov
or
jo
dec
jo
mov
cwde
xor
das
stos
es
rcl
xor
aaa
xchg
gs
inc
add
outs
(bad)
shl
adc
jle
stos
ror
add
fwait
xlat
test
pop
mov
imul
mov
popa
test
addr16
inc
or
and
mov
mov
call
adc
jmp
mov
ret
std
je
in
gs
adc
xchg
xchg
hlt
dec
repnz
rcr
ds
jae
inc
leave
push
retf
mov
mov
ins
arpl
ins
shl
inc
jo
gs
jo
shl
mov
xor
lahf
jge
aad
xlat
xor
adc
cdq
xchg
sahf
je
int
(bad)
cmp
adc
dec
std
add
rol
mov
xchg
movs
or
sti
mov
add
fimul
pop
inc
mov
pop
dec
jge
retf
and
shl
jne
aam
jo
jo
sbb
popa
push
pop
adc
(bad)
push
in
jle
fbld
jnp
test
xor
ins
ja
push
into
aam
mov
push
arpl
out
xor
aam
jo
loope
dec
pushf
leave
sar
popa
adc
cli
inc
(bad)
inc
mov
adc
fdiv
int3
dec
mov
push
fcmovb
aaa
sub
cmp
inc
add
adc
xor
mov
push
inc
jl
in
sbb
or
jle
test
es
call
pop
sbb
int3
dec
sti
pop
pop
jbe
xchg
lock
jge
add
push
pop
enter
cmp
out
and
pop
lock
and
inc
cmps
xchg
cmp
jecxz
mov
addr16
mov
mov
mov
sar
(bad)
mov
mov
adc
pop
fisubr
jmp
inc
cwde
stos
xor
fs
int3
leave
dec
int3
xrelease
sbb
and
fmul
shl
daa
js
lods
push
call
dec
push
push
mov
leave
dec
fadd
jmp
stc
sbb
outs
xchg
movs
gs
push
pop
das
aad
dec
ja
gs
cmp
adc
mov
lahf
add
or
out
in
adc
leave
sub
ins
and
add
jle
dec
pushf
test
sti
or
dec
aam
retf
inc
sub
loope
out
loop
sbb
sbb
stc
xor
mul
jmp
mov
jb
cmp
add
push
mov
jle
and
mov
repnz
(bad)
pop
(bad)
arpl
add
stos
jo
jmp
pop
shr
or
inc
movs
stc
out
pushf
es
ja
jg
mov
push
dec
loope
rcl
test
shl
sbb
cmp
adc
push
out
xchg
adc
push
adc
sbb
sti
cld
les
mov
cld
pop
mov
and
es
outs
mov
fisttp
(bad)
xlat
shr
in
mov
sbb
das
inc
fcomip
call
ds
adc
clc
lds
ins
std
js
jecxz
jp
aaa
adc
aas
cmps
in
dec
neg
sub
mov
jno
jnp
aas
adc
inc
inc
and
xor
call
mov
es
jae
push
dec
inc
fist
imul
mov
and
ficomp
pop
arpl
aam
outs
or
(bad)
sbb
xor
add
inc
mov
add
push
lea
dec
add
cmp
mov
and
mov
inc
dec
dec
shl
(bad)
mov
mov
pop
inc
fmul
out
cmc
jne
icebp
mov
ret
push
xchg
dec
and
dec
in
or
jg
test
xchg
adc
fmul
and
movs
lods
xor
bnd
sub
mov
inc
mov
add
sbb
jge
sub
or
(bad)
jae
sbb
loopne
stc
mov
cmp
jecxz
fsubr
cmp
jno
test
lock
rcr
in
or
push
mov
sub
ds
mov
dec
or
and
inc
sbb
addr16
xchg
test
loop
push
pop
pusha
push
mov
adc
scas
and
inc
xor
ror
vmread
inc
sbb
out
adc
inc
sub
mov
stc
leave
push
pop
iret
in
(bad)
xor
mov
jae
popa
or
push
xor
test
(bad)
pop
push
in
sbb
clc
not
xchg
xlat
in
lods
or
inc
aaa
mov
retf
icebp
mov
les
xlat
loopne
sbb
(bad)
and
push
mov
adc
rcl
test
adc
inc
jecxz
xor
in
push
fs
add
mov
xchg
xor
lahf
push
pop
push
shl
ja
sbb
ins
jecxz
jb
xchg
sbb
mov
fisttp
inc
and
cmp
retf
pop
pusha
movs
mov
out
std
fild
or
es
sub
mov
lea
repnz
mov
jnp
push
add
lds
cmp
pop
ss
outs
punpcklbw
call
stos
mov
aam
out
xchg
je
or
jmp
inc
fcom
es
lea
ds
fldlg2
lahf
mov
js
rcl
outs
shl
sub
dec
enter
mov
mov
test
popa
mov
out
out
gs
pop
adc
push
push
cmp
xor
cmp
pop
push
cmp
mov
sub
(bad)
in
stos
in
ins
sti
scas
das
sub
add
bound
icebp
in
add
jg
mov
nop
loop
cmp
(bad)
sub
mov
adc
pop
and
ja
in
cmp
or
test
xchg
jns
mov
mov
cmp
xchg
adc
frstor
sbb
jns
lods
inc
cmp
mov
cmps
or
ja
lods
adc
ins
mov
jl
imul
cmp
push
arpl
aam
mov
lds
mov
gs
mov
inc
push
mov
lods
xor
stos
dec
daa
sbb
push
cmp
push
push
xor
xchg
xchg
add
mov
out
inc
push
cmps
cmp
cdq
push
xchg
rcl
ss
clc
inc
inc
mov
xor
pop
or
xchg
inc
xchg
out
jle
iret
aad
push
fimul
sbb
mov
in
aaa
mov
(bad)
retf
add
dec
cmp
pusha
push
stos
dec
xchg
cld
xchg
dec
dec
je
bound
add
sub
mov
jl
movs
sbb
and
out
enter
clc
imul
(bad)
test
les
lods
neg
dec
mov
jb
cs
or
jg
shr
xor
add
movs
push
pop
and
mov
jnp
call
push
lds
outs
retf
fcomi
push
leave
hlt
jmp
sub
add
add
cmp
jno
mov
lock
mov
sar
retf
or
popa
inc
xchg
mov
int
cmp
push
test
add
imul
sahf
shr
add
les
mov
adc
int3
(bad)
fdivrp
addr16
das
push
push
pop
int
lock
lahf
sbb
pop
das
loope
ss
pop
mov
xchg
leave
add
jnp
aaa
sahf
jnp
push
ret
rcl
mov
fldenv
jp
add
mov
aad
shl
jmp
mov
jmp
aaa
hlt
fs
sub
push
mov
aad
add
fsub
(bad)
test
aaa
das
sbb
ret
mov
inc
addr16
jmp
add
cli
pop
mov
dec
inc
or
cdq
xor
and
(bad)
test
mov
add
dec
out
jbe
test
aad
adc
cmp
data16
mov
jge
mov
mov
pop
jle
jno
repnz
push
mov
enter
sub
inc
and
out
lods
int
out
fs
test
cwde
enter
mov
pop
or
in
sub
das
fidivr
in
int
lds
jmp
add
xchg
push
add
test
or
cwde
mov
ror
xchg
mov
pop
adc
dec
cli
adc
fwait
jecxz
push
and
sub
dec
shl
jmp
pusha
xchg
clc
and
loop
mov
dec
daa
rol
lahf
adc
push
loopne
mov
jno
int3
mov
sub
jp
lock
int
pop
mov
pop
push
int
bound
adc
xor
imul
and
mov
les
dec
mov
sahf
retf
xor
xchg
pushf
aad
arpl
mov
sub
jnp
adc
inc
fsubr
scas
xchg
neg
jmp
xor
ret
shl
ss
cmc
sub
movs
(bad)
push
xor
pop
movs
loope
push
jmp
je
into
jnp
leave
lods
pushf
les
push
cli
mov
pop
ins
mov
xor
loope
xor
js
scas
mov
xor
xchg
addr16
push
push
cli
cdq
fwait
stc
pop
adc
inc
and
xchg
mov
scas
mov
add
(bad)
xchg
jle
shl
cmp
xchg
sub
ja
cdq
outs
daa
in
jnp
pop
cmp
pop
scas
out
adc
ja
and
mov
ror
rcr
cld
cwde
fs
pop
imul
cmp
dec
paddb
out
ins
push
add
mov
sub
add
fwait
(bad)
push
or
mov
(bad)
daa
imul
cmps
lds
dec
(bad)
movs
mov
dec
and
inc
pop
push
inc
scas
cld
jns
xor
jne
popf
movs
loope
or
jnp
int
add
(bad)
lods
gs
mov
mov
dec
xor
or
test
mov
sar
mov
push
test
sbb
gs
daa
outs
int3
mov
and
dec
aad
call
fmul
imul
cmp
mov
femms
fs
inc
pop
in
movs
gs
add
push
test
inc
add
push
call
and
inc
and
inc
rol
push
sub
pop
movs
rcr
push
loope
mov
inc
sub
pusha
aam
mov
outs
es
xor
nop
jne
(bad)
mov
mov
inc
movhps
mov
loop
xlat
mov
aas
js
mov
pop
shl
cmp
lock
aam
add
jl
mov
imul
data16
aas
idiv
shl
int
sub
imul
jmp
fistp
jns
in
inc
or
mov
pop
loop
sahf
cld
jns
ret
idiv
aaa
sar
les
pop
mov
push
inc
fldenv
cmps
lds
dec
shl
fbstp
rcr
fstp
jns
(bad)
mov
mov
movs
fwait
inc
repz
sti
xor
outs
mov
push
aas
ss
rol
dec
scas
sti
js
dec
cs
pop
retf
mov
xchg
mov
sub
ret
(bad)
mov
sbb
mov
stc
popf
(bad)
out
sub
lea
xchg
add
cmp
pop
inc
fimul
xchg
fsub
test
lock
mov
cmp
movs
mov
sahf
mov
dec
sub
sahf
dec
es
test
rol
pop
jge
in
adc
cwde
fwait
cli
and
mov
dec
and
pop
mov
outs
out
mov
fistp
aas
pop
stos
fisub
dec
push
je
sahf
addr16
xchg
rcl
xchg
inc
or
addr16
pusha
sar
mov
cld
and
ins
ror
pop
gs
xchg
icebp
and
sar
mov
pop
adc
mov
aam
test
pop
sbb
popa
test
aaa
pop
icebp
mov
mov
push
or
mov
push
sub
mov
loopne
adc
outs
mov
jns
fnstsw
iret
lea
loope
aaa
lds
inc
aas
loop
movs
leave
sub
fstp
cmp
sub
aad
push
aad
and
or
outs
add
xchg
lods
(bad)
fld
call
mov
in
jno
in
xchg
test
js
rep
xchg
sar
xchg
fidiv
dec
(bad)
xchg
jae
lds
xchg
out
sub
xchg
pushf
fild
push
sub
mov
rol
ins
mov
inc
sub
lods
jne
pop
xor
adc
xor
test
dec
sub
in
mov
jbe
neg
sbb
fist
loope
xchg
lock
or
mov
adc
ds
xchg
mov
pushf
les
push
pop
and
mov
push
clc
call
outs
add
inc
mov
mov
test
mov
clc
cdq
pusha
or
jo
out
mov
retf
out
inc
or
jb
jecxz
scas
rcl
movlps
mov
sub
test
out
jg
mov
and
jp
adc
cmp
jne
mov
in
gs
adc
int
jecxz
cmp
add
jecxz
adc
push
mov
outs
mov
mov
inc
neg
cdq
arpl
lock
lods
enter
iret
jno
push
data16
mov
cli
mov
jmp
call
out
(bad)
popf
lock
in
push
or
mov
adc
cdq
jb
in
mov
out
xchg
test
std
cmp
shr
pop
cmp
xchg
popf
aam
es
inc
sti
call
sub
std
cwde
jge
es
xchg
call
xor
jne
fsub
inc
mov
mov
enter
push
dec
mov
cmps
jbe
out
xchg
mov
xchg
mov
inc
sub
fadd
jmp
jp
iret
and
les
repnz
rcl
in
mov
clc
mov
fsubr
jmp
scas
ret
xor
push
jge
mov
or
aaa
add
pop
les
fild
inc
add
adc
jmp
jg
add
xchg
movs
fnstsw
and
movs
in
jo
and
mov
std
mov
add
mov
xchg
xchg
cld
cmp
mov
ficom
leave
and
repnz
pop
hlt
xchg
lahf
std
gs
pop
sar
(bad)
iret
mov
sbb
test
imul
inc
cmp
mov
sar
int3
xor
call
jns
loope
and
jno
out
gs
mov
lods
jns
adc
mov
mov
test
(bad)
retf
xchg
cmp
mov
test
push
adc
movs
imul
out
mov
jb
leave
dec
add
jmp
dec
adc
test
or
adc
bound
repnz
mov
mov
int3
(bad)
mov
pushf
aad
jne
xchg
ins
push
in
imul
mov
adc
imul
xchg
add
pusha
pop
jnp
mov
loope
cmp
xchg
dec
es
movs
(bad)
into
jg
adc
mov
test
adc
and
aad
mov
cwde
repz
loopne
test
jg
out
cwde
loop
jl
into
ds
sbb
mov
sti
xchg
pusha
and
mov
adc
jl
repnz
add
ret
pcmpgtb
call
push
push
xlat
lods
popa
cmp
ret
data16
arpl
popa
test
pop
sbb
lods
mov
jbe
mov
int3
js
adc
xlat
push
cmp
push
frstor
sbb
xchg
jp
push
dec
push
fs
xchg
mov
dec
sub
mov
cmp
mov
mov
imul
int3
pop
and
xchg
mov
dec
neg
xor
mov
std
arpl
or
aad
sub
dec
sar
repnz
shr
jge
test
push
out
mov
pop
aas
repnz
xchg
fsub
pop
lock
push
stos
outs
sbb
mov
push
pop
inc
aad
test
xchg
call
lds
push
pop
jmp
xchg
icebp
and
xchg
mov
inc
cld
mov
adc
jo
cs
aam
adc
call
lahf
icebp
push
ins
lods
fstp
add
xchg
lods
inc
adc
or
pop
mov
dec
sub
xor
fidivr
stos
fbstp
jg
jmp
dec
and
push
daa
in
xchg
fstp
ins
mov
movs
movs
in
pop
inc
into
mov
in
jle
push
sbb
fwait
mov
dec
sub
dec
mov
sbb
jb
not
sbb
leave
push
cmp
(bad)
xchg
xlat
jnp
adc
adc
(bad)
xchg
lods
into
cmp
aam
mov
pop
aas
in
test
inc
cmp
stos
xchg
mul
jp
mov
push
inc
and
ins
leave
cmps
mov
push
and
(bad)
lods
mov
call
not
mov
cli
mov
adc
js
leave
jl
add
cmp
add
sub
outs
sub
jb
lea
adc
or
arpl
xchg
mov
jns
enter
push
or
cld
inc
xor
mov
jl
adc
(bad)
pop
cmp
xchg
inc
sub
std
mov
loopne
test
es
movs
in
aaa
jb
(bad)
xor
out
sbb
xchg
inc
push
hlt
cmps
xor
fld
adc
adc
es
xchg
stc
ss
jmp
xor
or
loope
sbb
call
cmc
lea
lds
pop
jge
in
xor
pop
leave
cmps
mov
test
xchg
cmp
fisttp
sbb
out
xor
mov
les
or
test
add
les
ret
call
or
(bad)
mov
xchg
fiadd
push
int3
cdq
pushf
call
pop
dec
pop
pop
stos
sar
jmp
cdq
mov
and
fild
mov
cwde
scas
call
lods
ret
push
sbb
lods
cwde
fist
sbb
mov
sub
xchg
dec
sar
scas
mov
pop
sbb
sub
cli
jnp
iret
lods
pushf
repnz
(bad)
jge
pop
mov
outs
movs
(bad)
pop
adc
dec
ret
mov
int3
test
movs
fwait
lock
and
arpl
stos
jl
sub
jo
push
pusha
mov
sub
mov
jecxz
sahf
xlat
jae
or
test
adc
movs
ins
sub
cdq
fs
xchg
in
push
cmp
jnp
stc
pop
push
adc
das
push
mov
(bad)
sahf
std
inc
xor
aas
jl
xchg
mov
jle
mov
out
dec
push
das
push
mov
retf
and
pop
add
push
mov
xchg
lock
adc
ret
addr16
hlt
cdq
mov
jle
loope
mov
and
or
aas
shr
jmp
(bad)
test
int3
ds
mov
add
xchg
popf
fidivr
pop
mov
and
(bad)
and
mov
in
add
dec
xchg
push
inc
cmc
mov
push
pop
fcomp
aaa
pop
xlat
lahf
mov
cwde
jnp
sbb
xor
fisub
cmp
outs
les
or
jae
leave
add
cld
das
jp
lods
arpl
sbb
jmp
mov
inc
movups
stos
mov
and
mov
fidivr
ja
mov
or
cmp
js
aad
cmp
xchg
lock
loope
push
jg
xchg
push
mov
clc
cmp
cmp
adc
jmp
pop
pop
iret
stos
cmps
les
xor
mov
(bad)
sub
mov
sti
dec
add
lods
dec
push
add
rol
mov
cmp
jo
mov
mov
dec
shl
and
dec
mov
and
in
sbb
imul
ficomp
out
cmp
inc
and
dec
retf
aaa
cmp
(bad)
dec
or
jl
mov
mov
div
leave
jbe
sbb
mov
lock
fbstp
pop
idiv
icebp
xchg
ins
xor
pusha
(bad)
mov
xlat
imul
outs
enter
dec
and
jp
fistp
test
test
cmp
fdivr
xor
cld
and
movs
inc
cmp
stos
mov
jecxz
pop
fst
nop
hlt
pushf
dec
xchg
mov
aas
push
aam
inc
push
push
dec
iret
xchg
loope
mov
inc
and
jle
out
push
cs
xchg
sti
xor
cmps
jp
jmp
inc
push
stc
stos
xor
sub
push
out
xor
pop
cmp
mov
out
lods
ins
cs
jbe
mov
int3
pop
sbb
popf
mov
pop
xor
pop
ret
mov
mov
pop
mov
cmps
lods
leave
aas
pop
call
ret
push
out
lods
xchg
aam
jno
mov
in
popf
jmp
loopne
call
fimul
in
xchg
arpl
mov
(bad)
pop
and
mov
aaa
pop
pause
mov
xor
jle
rcr
sbb
std
jge
sbb
mov
push
les
ret
mov
fstp
dec
mov
mov
data16
mov
cli
mov
jmp
push
mov
cmp
loopne
jne
ret
repnz
xchg
fiadd
sti
nop
inc
and
push
rol
push
retf
push
xor
xchg
mov
jbe
out
inc
add
ficom
mov
mov
call
jle
movs
xchg
cli
jbe
les
das
out
mov
nop
lods
ret
xchg
test
jne
leave
sub
cli
xor
aam
lahf
std
inc
rdmsr
ja
jmp
emms
(bad)
in
xor
iret
pushf
fwait
out
jb
out
xchg
cwde
fistp
pop
shl
test
popf
scas
in
outs
daa
repnz
and
les
push
mov
ja
les
cmc
and
inc
and
jbe
adc
mov
repnz
into
lods
dec
sub
dec
retf
jmp
dec
repnz
mov
mov
in
daa
jg
lods
xchg
xchg
fisttp
add
jecxz
xor
mov
lea
dec
cmps
out
daa
jne
jmp
outs
sub
xchg
mov
push
cmp
je
leave
lods
fiadd
rcr
packssdw
add
dec
aad
xchg
cld
add
sbb
(bad)
stos
fwait
clc
and
hlt
sub
rcl
fs
pop
mov
sub
xchg
ja
push
dec
repnz
stos
cwde
idiv
std
lea
scas
jg
das
data16
mov
push
push
push
inc
out
xchg
cmc
add
xchg
fisttp
or
test
adc
xchg
in
add
ins
push
call
adc
movs
jb
adc
movs
or
or
push
jnp
jmp
ins
adc
push
sbb
imul
loop
adc
ins
mov
xchg
xchg
pop
fs
push
cmp
adc
push
rcl
jae
int
lahf
(bad)
adc
popf
arpl
add
in
push
cmp
movs
mov
pop
and
test
mov
in
jl
(bad)
outs
pop
clc
xchg
arpl
push
push
div
dec
not
adc
mov
scas
out
and
xchg
sahf
sti
sub
iret
pushf
inc
xor
call
sar
mov
fs
sbb
in
jl
adc
xchg
dec
das
sbb
repz
add
jns
shl
stos
imul
es
mov
cmp
mov
mov
imul
dec
fcom
mov
or
jp
stos
jns
or
popf
mov
pusha
imul
adc
stos
je
cmp
or
js
add
jo
retf
fmul
xor
es
(bad)
mov
sub
mov
xor
sbb
mov
(bad)
ins
sbb
movs
fidiv
jo
into
and
leave
dec
cs
popa
or
push
xlat
xchg
mov
jl
call
das
push
clc
aaa
push
jmp
mov
pop
and
jo
mov
push
and
inc
xrelease
cmp
pop
shl
mov
mov
mov
pop
cmp
jg
aam
push
in
mov
nop
stos
shl
movs
cld
dec
sbb
mov
les
lods
into
inc
sub
xchg
push
sbb
shr
imul
xchg
fimul
retf
sub
inc
sub
inc
sbb
leave
inc
daa
add
out
push
xchg
and
jo
nop
and
dec
hlt
cdq
xchg
sti
xor
iret
cmovbe
enter
sbb
je
sub
loopne
inc
lock
jbe
cmc
lods
mov
jno
ror
cmps
lds
push
stc
call
xlat
xchg
outs
sub
stos
nop
ret
out
mov
dec
add
dec
jmp
pop
lock
inc
and
bound
dec
mov
pop
adc
xchg
add
ss
fs
outs
or
ins
push
cmp
rcl
adc
inc
and
jno
int3
dec
xor
push
sbb
jnp
retf
sub
ja
or
outs
fidivr
cmps
int
sub
mov
sub
mov
and
mov
jp
into
mov
rcr
fidivr
dec
cmp
jae
les
jecxz
arpl
mov
xchg
mov
jb
push
push
out
jno
xor
sti
cdq
popa
sub
pop
shr
adc
call
int3
lahf
js
int
(bad)
idiv
jns
cwde
mov
add
scas
mov
cmp
enter
pop
int
fisttp
mov
mov
out
and
out
pop
and
push
(bad)
mov
in
cdq
mov
dec
shl
jns
fsubr
inc
mov
jno
int3
mov
add
movs
(bad)
out
add
out
cmps
jno
sbb
into
pop
xor
dec
mov
and
mov
cmps
(bad)
ins
int
fdivr
adc
mov
inc
add
dec
test
pop
or
push
jae
repnz
mov
cmp
ins
icebp
xchg
xchg
and
lods
test
push
das
in
call
shl
push
int3
mov
les
xchg
rol
mov
inc
or
cmps
mov
xor
xchg
imul
inc
test
pop
push
out
xchg
and
gs
scas
push
jecxz
mov
inc
cs
inc
xchg
fist
loope
and
cmp
inc
rcl
cmc
cwde
lahf
xlat
outs
pop
push
ins
cli
lahf
dec
adc
mov
loope
xchg
aam
inc
shl
in
push
cmp
xchg
sbb
mov
mov
scas
out
inc
out
cmps
sahf
out
pop
cmps
ret
pop
add
push
aam
popa
sub
sub
call
lahf
repnz
and
jge
dec
call
aas
in
mov
jb
test
xchg
(bad)
push
xor
mov
aam
cmp
push
lds
(bad)
in
cmp
add
lods
inc
sub
div
stc
lods
fdivr
push
pop
iret
mov
(bad)
push
cmp
jbe
enter
xor
adc
jp
mov
aaa
push
(bad)
mov
movs
leave
inc
sub
in
push
mov
in
inc
pop
pop
outs
aam
mov
sub
std
and
dec
sbb
sbb
or
mov
lds
mov
dec
push
sub
mov
mov
jle
out
adc
fidiv
shl
pushf
inc
(bad)
sbb
retf
push
xor
xchg
test
push
and
ret
sub
ja
cld
test
add
int
sub
pushf
mov
call
push
and
mov
mov
mov
imul
sbb
aaa
push
movs
in
inc
add
jp
pop
adc
jb
jecxz
add
xchg
push
add
loope
mov
fild
sbb
jmp
sbb
cmp
sub
shl
add
xor
fiadd
jge
jae
test
and
jae
data16
sub
sub
pop
movs
fild
ss
cmp
xor
cmp
dec
add
add
dec
test
mov
or
aas
cli
or
xor
xor
sbb
pop
movs
test
inc
adc
in
mov
add
xor
pop
fdivr
pop
shr
daa
or
and
push
ss
or
sbb
ds
(bad)
and
pop
mov
pushf
pushf
js
inc
cmp
dec
mov
dec
into
pop
fdivr
jns
inc
into
ds
stos
nop
dec
xchg
pop
mov
mov
add
inc
rcr
pop
xlat
mov
dec
cmp
push
fisttp
pop
mov
adc
sub
cmp
sub
dec
idiv
mov
sahf
mov
jne
aam
call
cwde
movs
fwait
mov
test
test
addr16
pop
and
pop
in
dec
fimul
aam
lods
push
and
cmp
loope
int
test
out
pop
cld
dec
ror
dec
cmc
pop
iret
jg
inc
fbstp
jp
mov
cmp
jmp
pop
movs
mov
hlt
sub
push
movs
xchg
jmp
repz
jmp
dec
int3
sub
in
adc
inc
iret
push
pop
cmp
or
xor
jae
aaa
cmp
test
jnp
pop
test
mov
dec
retf
sub
leave
sub
nop
gs
sahf
dec
mov
mov
adc
sbb
pop
test
retf
scas
add
mov
fidivr
les
ds
mov
imul
ja
ss
gs
test
fwait
stos
mov
ret
lahf
or
pop
sti
jg
movs
and
or
pop
fstp
inc
icebp
pop
ret
outs
mov
test
popa
mov
in
clc
lods
test
mov
ins
test
test
cmp
push
ficomp
mov
lds
dec
rcl
sbb
movs
push
xchg
push
dec
cmps
pushf
mov
sbb
push
mov
jnp
push
adc
pop
mov
jae
inc
mov
in
pop
fmul
dec
xchg
imul
push
idiv
sti
inc
iret
daa
not
jmp
sbb
and
leave
cs
loope
lds
jmp
lds
mov
and
and
sbb
call
xchg
xchg
dec
(bad)
das
aam
xchg
sahf
test
scas
outs
cmp
sub
test
ret
push
cmps
inc
iret
pop
scas
arpl
pop
icebp
pop
or
arpl
push
shr
sbb
and
adc
pop
sar
aad
cld
es
stos
nop
mov
mov
movs
jne
in
leave
push
int3
inc
(bad)
push
loop
or
and
in
and
adc
and
sub
push
(bad)
dec
rol
add
dec
xlat
aas
jmp
repnz
sbb
sub
or
jo
inc
(bad)
xor
and
xor
loopne
sbb
jo
jp
xchg
gs
or
icebp
add
icebp
adc
jge
or
dec
xchg
xchg
shl
dec
rol
movhps
jmp
or
add
sub
push
dec
lods
ins
mov
into
jbe
jne
push
psubq
adc
ror
cmp
icebp
xor
les
sbb
add
and
cmp
xchg
imul
ja
dec
movs
je
cdq
push
and
out
rcl
test
push
jmp
out
fidiv
jl
js
jae
imul
arpl
jo
imul
sbb
mov
lods
jp
ins
mov
out
push
cmps
jl
mov
aam
repz
mov
inc
and
xor
dec
(bad)
push
leave
ins
push
es
das
call
mov
mov
xor
xchg
mov
xchg
xchg
push
mov
sahf
xor
test
test
mov
popf
fs
cmp
xor
sbb
in
dec
fadd
daa
outs
rcl
fld
fs
in
jg
rol
pop
stc
mov
fisttp
dec
stc
js
jnp
pop
push
fnstcw
retf
push
cmc
and
push
iret
pop
fidivr
mov
inc
stos
mov
fadd
pop
ds
loopne
stc
sub
test
mov
mov
daa
or
aad
xlat
inc
not
fisttp
test
mov
inc
ficomp
mov
pop
cmps
jg
outs
retf
jne
cdq
fwait
dec
(bad)
xchg
arpl
xor
js
cmp
cmp
pop
aad
mov
test
scas
mov
jmp
sbb
or
push
or
cmp
xor
in
adc
lock
scas
std
jns
popf
push
stos
popa
int
or
icebp
add
aas
imul
push
aad
ret
sti
sub
adc
mov
xlat
mov
mov
jno
jp
jle
aas
or
xchg
test
mov
test
hlt
ds
inc
test
cmp
cmp
icebp
pop
cmp
inc
retf
in
mov
daa
test
jp
xor
xchg
adc
xor
or
aas
ror
add
add
add
xor
mov
fwait
inc
aad
sbb
arpl
adc
sbb
(bad)
pushf
mov
mov
out
dec
std
and
push
scas
jno
xchg
dec
aad
popa
cli
inc
(bad)
pop
adc
mov
test
sar
imul
in
mov
addr16
and
add
sub
sbb
shl
sbb
cmp
hlt
or
jnp
mul
or
sbb
das
test
xchg
ins
lock
cmp
mov
imul
mov
pop
fsub
imul
jbe
aaa
loop
test
ret
push
mov
call
push
sar
in
sub
and
and
cld
pop
mov
daa
or
mov
lds
jp
pop
rcr
es
sub
sbb
jp
xor
sbb
shl
hlt
adc
pop
call
push
pop
ds
cs
add
dec
fldenv
xor
xor
xchg
int
adc
int
(bad)
sub
cmp
jg
jno
arpl
mov
jae
outs
fbld
fcom
jge
pop
jmp
or
das
lock
movs
enter
sub
jge
inc
in
or
les
jge
push
cld
and
les
xor
or
dec
ret
pop
aas
out
jmp
das
push
add
adc
inc
into
inc
idiv
lea
je
inc
xlat
cmp
push
ror
xor
sub
into
push
mov
inc
aad
sbb
push
or
cmp
jecxz
aaa
sbb
loope
cli
adc
add
push
mov
pusha
mul
jecxz
sub
adc
xor
push
repz
dec
cmp
sub
sub
or
push
ficomp
jge
mov
fdivr
mov
stos
xchg
hlt
outs
fild
inc
out
pop
call
dec
(bad)
inc
fidivr
push
fsubr
inc
int
aad
loopne
cmc
dec
fisttp
test
cmc
and
inc
in
aaa
add
sbb
push
pop
xor
clc
inc
fcomp
and
sbb
jns
rol
pop
(bad)
jne
movs
xchg
adc
call
dec
in
aaa
out
hlt
sub
jp
je
jmp
ins
cld
dec
mov
or
sbb
xor
adc
ds
dec
rcr
stos
jle
dec
neg
cmp
jp
inc
jmp
push
rdmsr
sub
jo
mov
and
fst
and
stos
xchg
mov
xor
and
or
xor
mov
jmp
cmp
or
add
push
(bad)
push
stos
xchg
mov
xchg
fwait
mov
sub
jns
mov
ins
int
mov
sub
mov
je
arpl
xor
out
test
cmps
lods
xchg
mov
rcr
and
or
push
in
dec
leave
jne
pusha
cld
inc
jmp
jo
or
in
rol
scas
mov
mov
loope
mov
leave
jnp
pusha
(bad)
inc
ror
jo
ds
ja
inc
retf
xor
adc
ds
xor
add
sbb
push
std
pop
fistp
mul
add
and
mov
call
je
jno
xor
out
daa
movups
xor
add
pop
ret
jne
mov
sub
adc
push
movs
inc
les
pop
or
inc
icebp
sub
popa
movs
pusha
aad
int
cli
jge
push
fidiv
pop
leave
inc
hlt
jbe
inc
retf
jnp
jp
in
out
dec
repnz
pop
cmps
fld
ja
xchg
dec
idiv
clc
es
xchg
nop
cmps
mov
(bad)
xlat
pop
(bad)
daa
pop
sbb
xor
cmp
aad
rcl
shl
std
aas
(bad)
xor
cs
call
outs
fist
pop
stos
jo
jecxz
retf
and
cmp
pop
mov
es
jns
je
sub
pop
cmps
dec
retf
push
fidiv
push
scas
mov
test
jl
cmp
dec
push
sub
or
jecxz
fiadd
jbe
inc
icebp
and
loop
sbb
loop
iret
popf
lods
and
adc
inc
lds
popa
aad
(bad)
pop
jmp
push
stos
fisttp
push
jmp
cmc
pop
ror
stc
dec
in
dec
aad
ror
sub
or
jecxz
sub
in
pop
test
mov
pop
add
cmp
cmp
cmp
loope
mov
(bad)
frstor
or
push
adc
dec
mov
test
sti
jb
sub
(bad)
je
call
test
dec
mov
data16
dec
stc
dec
out
jl
inc
(bad)
inc
shl
cdq
mov
mov
mov
mov
cdq
push
and
mov
mov
push
lock
lods
call
xchg
arpl
and
leave
jne
dec
icebp
push
retf
jo
cwde
mov
movs
js
das
adc
es
xchg
imul
call
adc
in
fadd
ss
fimul
sahf
popf
popf
mov
jne
pushf
popf
mov
jg
push
scas
(bad)
jl
dec
leave
je
mov
movs
movs
mov
stc
inc
dec
dec
test
lock
jge
push
sar
repnz
int
(bad)
ja
jns
xor
rdmsr
push
pop
add
out
cmps
mov
inc
test
cdq
lods
outs
inc
jge
mov
push
xchg
test
fwait
mov
iret
and
adc
pop
sbb
pop
jecxz
fistp
sub
xor
push
(bad)
outs
int
sar
xchg
ja
dec
into
pop
fiadd
fldenv
sbb
or
neg
and
add
push
xor
cmp
and
jl
pop
jmp
or
cmp
cmp
dec
in
dec
retf
nop
mov
xor
or
das
cmp
sbb
cmp
aaa
push
sbb
and
sub
loop
sbb
xor
adc
add
sub
add
xor
or
lock
or
imul
ficomp
ins
(bad)
pop
lds
jae
cmp
xor
sub
or
clc
inc
(bad)
push
ret
jl
outs
div
sub
push
jecxz
fnstcw
sub
sbb
push
retf
jnp
fwait
popf
mov
push
mov
inc
hlt
je
js
ins
aad
xor
or
adc
jmp
push
jmp
push
aas
or
push
add
mov
int3
push
shl
adc
xor
xor
mov
inc
lock
(bad)
xor
adc
jns
pusha
into
push
test
cmps
test
mov
test
es
add
xor
push
sti
sub
sbb
pop
jmp
jno
and
cmp
cmp
ins
out
push
fcomp
pop
stc
and
xor
in
retf
dec
repnz
cmps
mov
mul
cmc
jne
mov
jo
sub
leave
push
movs
adc
loop
aaa
or
xor
daa
sbb
retf
inc
in
pop
lods
xchg
outs
sti
mov
mov
push
cli
dec
xlat
jne
and
adc
in
ss
out
push
stos
xchg
call
xor
les
dec
xor
dec
jmp
push
pop
adc
pop
push
pop
cmp
sti
inc
rol
pop
fadd
jge
and
adc
add
jecxz
pop
xor
adc
cmp
xchg
xchg
popf
xchg
jb
jae
add
sbb
cmp
pop
xor
jnp
stos
mov
lods
lods
xchg
mov
pop
ret
pop
ret
pop
enter
xchg
mov
movs
(bad)
cmps
mov
in
push
fist
and
jmp
cmp
cmp
enter
sub
out
cmc
inc
call
js
movs
fwait
mov
mov
outs
lock
in
(bad)
js
jl
dec
jmp
cmps
sahf
mov
ja
ja
push
loopne
cmps
xchg
inc
out
pop
sbb
and
mov
pop
fistp
shr
jp
js
js
jbe
inc
ficom
jg
mov
mov
ins
shr
imul
push
fidiv
loopne
mul
pop
clc
adc
cmp
aad
fidiv
inc
mov
jp
xchg
xchg
cmp
jbe
push
mov
leave
xor
pop
add
push
mov
mov
mov
inc
test
xchg
jbe
inc
aad
pusha
mov
test
shl
daa
call
jno
sub
pop
cmp
pop
or
out
push
fild
xor
loop
cmc
gs
cmp
add
cmp
cmp
sar
repz
enter
cmp
adc
or
pop
repnz
mov
test
test
enter
loopne
loopne
xor
pop
lock
xor
jo
gs
rol
mov
xor
xchg
jne
xchg
popa
std
sub
push
aas
sbb
(bad)
cli
outs
in
fnstsw
jne
ins
test
mov
lods
popa
(bad)
imul
cdq
cwde
mov
jmp
cmp
push
shr
mov
xchg
push
push
shr
or
pop
shl
push
cli
jb
mov
xchg
xchg
movs
mov
cmp
jg
inc
stos
mov
and
add
cmp
sub
adc
sbb
shl
adc
loopne
into
cs
sbb
iret
jl
dec
retf
je
push
push
in
pop
(bad)
pop
int3
pop
shl
sbb
loope
in
mov
xchg
xchg
cmps
mov
arpl
and
jmp
push
hlt
push
(bad)
push
movs
nop
pushf
xchg
mov
daa
invlpg
test
or
call
clc
sub
inc
in
jb
das
push
sbb
adc
arpl
outs
fldcw
and
dec
cld
and
cli
dec
clc
dec
stos
mov
xchg
mov
fild
pop
mov
pop
retf
push
shl
adc
cmp
sbb
leave
jo
sub
pop
retf
gs
sbb
ins
repz
mov
mov
xchg
mov
mov
loopne
pop
adc
sub
jae
arpl
dec
int
mov
mov
jb
jnp
mov
mul
or
(bad)
pop
stos
fwait
mov
lods
mov
repz
shl
add
xor
(bad)
and
out
pop
sti
pop
mov
daa
or
or
dec
cli
sub
sub
push
cmps
popf
pusha
shr
push
xor
pop
push
push
add
push
cmp
dec
in
and
sub
les
or
aaa
pop
aaa
adc
jmp
retf
pop
iret
inc
repnz
add
jecxz
sbb
loopne
xor
mov
dec
push
loopne
int
fiadd
dec
in
xlat
daa
push
adc
or
jmp
ror
dec
cld
push
(bad)
popf
mov
cwde
test
mov
mov
xchg
and
adc
out
shl
dec
in
and
movlps
push
adc
jl
pop
cmc
daa
sub
out
shl
lock
call
sti
xor
cmp
cmp
das
loopne
mul
sub
jle
outs
sar
js
das
sub
adc
cwde
(bad)
pushf
je
stos
(bad)
mov
cdq
outs
mov
addr16
xchg
cmp
rol
pop
stos
call
inc
mov
push
pop
clc
pop
scas
mov
imul
loopne
(bad)
jbe
and
pop
aas
push
jmp
push
(bad)
jmp
sub
jmp
rol
jo
sub
sti
mov
mov
push
cli
dec
xlat
jne
and
sub
adc
xor
push
xlat
jle
dec
xlat
dec
scas
fstp
sbb
das
stc
dec
stos
inc
test
pop
retf
and
add
add
and
inc
cmp
pop
inc
scas
jae
inc
mov
fmul
out
ins
adc
ins
stos
call
push
das
sbb
inc
(bad)
icebp
pop
into
dec
icebp
and
push
push
pop
shl
adc
cs
cmps
(bad)
in
idiv
jmp
mov
mov
data16
inc
movs
mov
ficomp
cmps
xchg
fwait
mov
sub
xor
push
(bad)
pop
repz
out
mov
dec
aam
nop
sahf
inc
mov
mov
mov
jp
ds
push
cld
imul
ret
mov
sahf
outs
mov
mov
mov
xor
pop
mov
pop
cs
xor
add
sbb
dec
enter
jecxz
loope
adc
jg
cmp
inc
sar
out
out
shl
add
xchg
arpl
adc
or
and
outs
loop
add
retf
dec
shl
adc
pushf
jae
and
jmp
std
add
xor
cmp
xor
sub
pop
xchg
xchg
cmp
sbb
push
cmps
inc
fldcw
(bad)
mov
ins
mov
lea
mov
sbb
in
push
icebp
dec
in
dec
mov
and
and
mov
test
dec
(bad)
das
inc
and
sub
loopne
mov
add
es
cmps
imul
pop
loop
mov
mov
pop
mov
leave
push
mov
cmp
sbb
sti
add
jmp
sub
adc
sub
jb
xor
das
or
xor
shr
cmp
push
pop
(bad)
push
sub
inc
mov
int
ret
cdq
jns
jnp
or
push
sbb
std
inc
fst
test
clc
dec
scas
mov
popa
fimul
dec
cmps
ins
adc
out
sub
sbb
ror
ins
mov
jb
js
fdivr
pusha
fisubr
jecxz
stc
and
xor
daa
cmp
sub
data16
pop
scas
js
daa
test
aas
jl
mov
outs
mov
mov
je
xchg
addr16
lea
in
daa
push
adc
dec
fisttp
ds
jmp
jae
ins
fcomp
ds
ss
push
xor
sbb
fadd
sbb
imul
in
dec
into
xor
push
rcr
add
push
add
dec
fnstsw
leave
pop
aad
or
cmp
in
push
fadd
jecxz
movs
arpl
mov
mov
or
fisub
jns
jb
sub
sbb
in
push
aad
movs
test
adc
pop
sbb
push
test
pop
mov
pop
mov
scas
xchg
inc
out
push
rcr
es
test
pop
sti
inc
mov
shl
cld
push
lock
and
call
(bad)
push
int3
mov
sub
rcr
cwde
xchg
sbb
mov
aad
lds
sbb
aad
std
pop
mov
shl
sbb
pmuludq
int3
inc
sub
out
cmp
in
popa
int
jecxz
mov
rcl
jno
call
and
add
and
push
mov
push
cmps
call
out
xor
adc
retf
push
push
ja
mov
ins
xor
call
and
gs
ds
daa
sti
and
cmp
xor
jnp
dec
ficomp
jnp
and
out
and
push
repnz
int3
dec
mov
aad
popf
arpl
movs
outs
fldenv
cmp
test
scas
cmps
jl
jge
pusha
lods
fwait
imul
add
xchg
push
add
or
pop
or
or
mov
mov
out
pop
or
cwde
mov
mov
mov
inc
retf
cmps
int
test
inc
pop
loopne
dec
out
push
scas
xchg
push
dec
ret
fist
fld
test
push
mov
in
jle
inc
movs
mov
ret
push
cmps
mov
cmc
sahf
mov
cmp
int
pop
jecxz
jno
push
inc
adc
scas
and
repz
sub
scas
pusha
jns
dec
jbe
dec
jne
or
add
mov
out
mov
xchg
into
neg
test
cmps
call
and
cdq
push
adc
and
lea
xchg
add
and
(bad)
int
and
aad
add
inc
addr16
call
pushf
or
call
xor
mov
xchg
fsubp
cmp
mov
loop
xor
mov
sbb
test
(bad)
pop
pop
mov
sbb
jmp
and
adc
aas
push
ins
test
std
sub
stos
jg
(bad)
push
push
mov
pop
test
int3
(bad)
or
in
sbb
xcrypt-ecb
cmps
dec
or
sub
nop
dec
pop
mov
mov
lds
pop
xor
pop
adc
ds
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
es
push
sub
and
dec
pop
sbb
jb
lahf
leave
mov
aam
leave
lods
sbb
xchg
jp
xchg
inc
ret
xchg
daa
adc
cmc
push
jmp
xchg
aad
loop
dec
mov
fiadd
test
xchg
js
jl
fs
hlt
jp
iret
dec
adc
or
maxps
jbe
fistp
scas
leave
lock
pop
sbb
scas
popa
or
inc
jmp
and
shl
push
std
ds
push
adc
xchg
cmp
sub
push
jb
mov
in
xchg
inc
aad
xchg
xchg
lods
sub
rcr
imul
xor
jo
(bad)
jge
push
test
sbb
stos
retf
(bad)
cmp
jg
sub
loop
push
mov
cdq
(bad)
gs
sub
enter
adc
or
and
sbb
sub
das
in
scas
inc
pop
add
jle
add
(bad)
push
stc
pop
rcr
scas
rcl
mov
out
lock
cdq
jb
xor
sub
lds
retf
jle
xor
pop
push
sub
xor
std
inc
(bad)
cmp
in
xor
loope
test
test
cmps
retf
ins
add
mov
jno
mov
xchg
fnstenv
mov
iret
lahf
mov
dec
fdivr
ss
imul
fs
stos
mov
gs
jae
add
add
inc
in
dec
adc
mov
stc
inc
iret
cmps
ror
cmp
xchg
jl
push
mov
in
pop
dec
push
or
jge
pop
les
xchg
or
int3
jae
test
xchg
add
mov
out
sar
ss
movs
add
popa
cmp
bnd
ss
(bad)
(bad)
sti
cdq
mov
xchg
cwde
sbb
sub
int
or
cs
cmps
adc
pop
push
jmp
pushf
fs
clc
imul
out
test
(bad)
dec
shl
mov
jno
sahf
ins
jo
mov
ret
fs
(bad)
aaa
jge
mov
push
std
jnp
mov
sbb
je
mov
in
xor
shr
je
cmps
sahf
mov
call
mov
sub
push
test
fxch
cmp
pop
cmp
or
mov
lea
test
in
pop
jmp
or
mov
push
lds
movs
jne
les
sbb
ficomp
fild
movs
mov
or
fucomip
add
test
(bad)
sbb
cld
ret
push
in
out
push
mov
xchg
fisubr
sbb
inc
sub
dec
or
and
jne
jp
je
dec
and
push
adc
push
push
dec
and
jge
inc
cmp
and
adc
mov
or
jno
iret
sbb
push
stc
pop
loope
or
xchg
test
sub
mov
scas
jne
mov
xor
rol
xor
popf
mov
js
imul
and
int
loope
icebp
ja
stos
mov
mul
lods
pop
lods
mov
test
lock
adc
inc
mov
outs
stos
mov
sbb
movs
xchg
cmp
fstp
jmp
inc
(bad)
jb
hlt
imul
test
retf
(bad)
jae
ret
retf
jno
out
add
cs
jns
adc
stos
dec
test
inc
add
cmp
cmps
jno
in
push
push
cmp
xor
pop
iret
add
mov
push
or
dec
in
pop
not
inc
fbld
push
add
jp
add
mov
mov
rcr
fidivr
rol
cmps
xchg
inc
add
ret
imul
inc
ret
jns
mov
(bad)
retf
mov
(bad)
xchg
cdq
outs
adc
leave
inc
fistp
js
cmps
mov
add
jp
push
sbb
stos
mov
inc
xchg
std
inc
into
ss
pusha
iret
pop
in
mov
jne
mov
jp
out
clc
jmp
lock
pop
push
and
xor
push
inc
in
das
add
sahf
test
mov
movs
scas
mov
dec
xlat
std
ins
enter
adc
nop
sbb
mov
or
inc
jns
dec
dec
movntps
pop
xor
dec
cmc
ja
cld
jno
in
push
pop
aas
test
into
xchg
mov
push
shl
mov
shr
jmp
pop
dec
pop
xor
hlt
and
pop
and
aaa
mov
jle
sar
in
xchg
mov
cmp
nop
or
je
inc
ret
call
sub
jnp
mov
push
cmps
(bad)
ror
cmp
inc
stc
in
cmp
mov
fist
push
in
jge
fild
jg
test
sti
shr
xlat
or
jns
shr
add
xchg
mov
push
sar
(bad)
and
push
sbb
push
dec
fs
jb
fcmovnb
daa
push
push
mov
sub
stc
add
unpckhps
xor
iret
popf
xor
xchg
push
adc
mov
push
mov
mov
mov
lds
out
into
test
cwde
lock
repnz
jmp
mov
nop
int
fmul
leave
mov
test
movs
jecxz
cmc
xchg
not
iret
mov
add
pop
sub
push
daa
jle
jae
mov
shl
repnz
es
scas
mov
test
pop
and
and
fcom
sbb
pop
call
push
out
icebp
push
jmp
add
or
ins
sbb
and
fmul
int
stc
or
aaa
mov
in
repz
sub
fisubr
push
mov
ds
jl
(bad)
mov
mov
mov
add
js
xchg
xchg
loop
inc
(bad)
xchg
scas
xor
and
adc
mov
lods
push
ret
mov
or
jno
stos
mov
div
mov
mov
xchg
popf
mov
popf
or
cwde
mov
popf
xchg
mov
mov
test
pop
sbb
xchg
fldcw
movs
mov
(bad)
enter
loopne
retf
push
in
mov
adc
aaa
add
push
shl
inc
push
sbb
sbb
js
push
scas
xlat
jg
shl
mov
(bad)
push
mov
push
movs
test
ins
iret
and
in
pop
jmp
out
shl
dec
iret
pop
retf
jbe
mov
dec
or
retf
fs
pop
les
cmp
stos
jg
push
xor
jecxz
xchg
rol
enter
mov
xchg
ins
pushf
add
(bad)
iret
jmp
mov
inc
xlat
shr
inc
out
inc
xabort
rep
test
je
sub
or
mov
sub
mov
ds
(bad)
sbb
pushf
test
cmp
ja
out
jnp
jns
push
cs
cmps
mov
or
cdq
mov
clts
adc
mov
dec
ret
sti
inc
repnz
xchg
mov
jmp
sub
daa
(bad)
fadd
jecxz
jp
jbe
pop
loop
jp
repz
les
sub
cld
stc
mov
imul
rol
inc
mov
jb
xchg
imul
add
push
loopne
sub
mov
dec
(bad)
jl
out
aaa
mov
xchg
ins
adc
test
out
and
nop
or
jne
mov
xor
popa
inc
lods
stos
xor
jbe
mov
and
js
mov
scas
jle
mov
cli
int
adc
mov
xor
imul
stc
add
movs
jp
stc
sub
dec
aad
aaa
into
popf
adc
imul
lahf
jl
fnstsw
pop
ja
rol
dec
popf
lahf
(bad)
adc
or
or
inc
add
sbb
cmp
or
add
inc
aas
push
xor
dec
add
adc
xor
sbb
punpckhbw
arpl
je
popa
or
adc
xor
jle
xchg
cs
xor
mov
lahf
sub
cmp
pop
dec
mov
xchg
bound
mov
and
pop
in
pop
lds
add
int
or
and
enter
and
cld
sub
fistp
test
sub
xor
(bad)
dec
adc
jg
(bad)
xor
inc
popf
lahf
mov
cwde
mov
pop
push
mov
xor
adc
xchg
fnstenv
in
pop
iret
ins
cdq
mov
das
loopne
xchg
jb
or
pop
xlat
inc
out
add
hlt
push
jmp
inc
(bad)
aam
push
iret
outs
movs
mov
icebp
out
sub
sub
jmp
lods
scas
js
dec
fistp
enter
(bad)
pop
test
mov
out
pop
cmps
(bad)
dec
xlat
jno
push
sbb
mov
stos
mov
pop
or
mov
das
xor
les
add
sub
adc
jp
add
cli
and
xor
sbb
sbb
cdq
mov
xchg
xchg
pusha
stc
push
mov
mov
test
repz
mov
sbb
loopne
scas
inc
or
cmp
or
dec
(bad)
or
sub
jge
add
daa
dec
jmp
sbb
popf
mov
inc
repnz
mov
retf
jo
or
stc
test
inc
outs
in
and
xor
adc
jg
leave
push
jo
sub
lahf
scas
cdq
cmp
cmp
add
or
rcr
xor
jae
pop
dec
sbb
cwde
mov
out
je
fild
xor
sub
mov
fwait
mov
cmp
xchg
cmp
ss
enter
xor
pop
in
outs
enter
daa
fwait
mov
out
pop
shr
je
push
jecxz
data16
dec
in
stos
rol
or
movs
mov
cmp
mov
jae
shr
cmp
(bad)
out
xor
xor
aam
pop
cmc
ins
inc
shl
mov
mov
ficom
loope
xchg
lahf
or
popf
aas
hlt
cmp
nop
and
cmp
cs
int
out
pop
cmp
(bad)
adc
push
inc
mov
das
sti
pusha
jns
lds
pop
aas
mov
sub
iret
xchg
xor
push
int
pushf
fs
push
adc
jae
sti
pop
or
jns
sbb
mov
pop
xor
push
sbb
xchg
(bad)
sbb
popf
and
push
xchg
pusha
call
and
xchg
ins
adc
and
mov
rcl
jmp
mov
fwait
repz
xchg
lds
in
clc
xchg
rcr
shl
xchg
cmc
cwde
shl
cmps
retf
xchg
aam
lds
cmp
jl
or
into
jl
cmp
push
jnp
mov
jl
mov
pop
lods
xchg
pusha
lahf
fwait
mov
cmc
jnp
mov
sub
adc
and
movs
mov
imul
jno
sbb
and
dec
sbb
push
hlt
loopne
pop
fcomp
push
stc
bound
cdq
dec
movs
movs
pop
mov
jle
call
je
inc
popf
imul
aam
mov
lods
jle
mov
mov
xor
inc
mov
scas
dec
mov
stos
push
push
mov
addr16
or
and
sub
(bad)
jge
sub
pop
jae
jne
inc
jg
inc
lock
mov
dec
xlat
inc
imul
sub
adc
loop
pop
retf
and
pmaddwd
ja
jns
cmps
fwait
sahf
mov
push
mov
or
xor
push
out
cdq
push
(bad)
dec
cmps
mov
dec
push
in
cmp
arpl
lahf
dec
cmc
and
push
ret
and
push
in
into
pop
rol
fisub
in
cmps
gs
or
or
subps
sub
and
iret
or
xor
push
stc
(bad)
add
arpl
and
add
inc
int3
pop
in
test
stos
mov
cdq
int3
jae
dec
popa
outs
dec
fs
push
hlt
sub
add
push
push
xlat
pop
push
jmp
and
jecxz
ins
mov
mov
aaa
mov
adc
pop
and
fwait
aaa
add
int3
ja
out
xlat
mov
cmp
inc
dec
in
inc
(bad)
aad
jb
pop
fs
pop
iretw
jge
aad
mov
test
jo
aaa
xchg
xchg
mov
sbb
cmp
mov
ja
xlat
daa
mov
mov
push
in
shr
cs
popa
ret
dec
les
out
js
out
xchg
call
mov
jb
adc
fsubr
mov
push
cdq
into
adc
imul
fistp
xor
pop
arpl
dec
test
ret
adc
mov
add
xor
fidiv
xchg
in
add
dec
jg
or
pusha
lahf
popf
cmp
outs
jg
mov
mov
xchg
outs
int3
sbb
lahf
das
out
jno
jl
fadd
fs
in
pop
in
sbb
dec
nop
push
push
in
mov
mov
xchg
movs
pmulhuw
jae
(bad)
mov
jae
xchg
hlt
pusha
pushf
pushf
add
pop
je
mov
mov
pop
ja
arpl
dec
sub
and
add
pop
jg
popa
and
dec
sub
pop
xor
test
mov
retf
fwait
retf
mov
cdq
fmul
shl
int
fbstp
and
add
mov
aam
icebp
scas
call
cld
cmps
sbb
mov
cmps
add
adc
(bad)
mov
repnz
or
add
inc
push
jno
dec
push
sub
push
je
mov
int
stos
in
mov
mov
(bad)
movs
sbb
inc
sub
add
adc
or
cmp
int3
fmul
retf
mov
xor
push
dec
push
dec
and
jp
jae
popa
daa
mov
adc
xchg
in
fisub
jmp
mov
sti
fild
pusha
daa
mov
stos
sbb
xor
aaa
nop
sbb
repz
lods
in
retf
cmp
jecxz
out
(bad)
mov
sbb
mov
fnsave
inc
es
sub
pop
dec
jnp
dec
jl
push
xor
sbb
data16
pop
sub
dec
inc
inc
pop
jge
and
inc
pop
pop
punpckhwd
outs
ds
icebp
mov
mov
adc
adc
cmp
or
inc
push
sub
fisubr
out
mov
out
lods
sbb
xor
sub
push
pop
test
mov
in
sbb
loop
jmp
clc
movs
adc
push
sub
xlat
(bad)
scas
sbb
call
jnp
xor
sub
push
push
cdq
pop
dec
inc
pop
das
pusha
and
and
inc
and
and
daa
lahf
sti
movs
sbb
or
pop
push
pop
and
or
push
ss
(bad)
mov
cmp
ret
std
nop
adc
rol
scas
sbb
or
jge
imul
add
or
sbb
sahf
iret
xchg
adc
jne
jle
and
adc
mov
scas
push
js
pop
pop
cmp
sub
shl
xchg
or
in
ds
aas
ins
and
push
dec
dec
or
sub
sub
pop
sub
mov
cmp
inc
pop
es
out
lods
shl
ja
jg
and
xor
js
xchg
shl
jns
gs
or
add
and
push
jbe
ds
(bad)
fst
mov
movs
sti
lods
sbb
mov
xlat
int
hlt
mov
test
lahf
lds
shr
sbb
imul
cmp
jge
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
in
out
cmc
mov
call
mov
scas
cli
mov
mov
xchg
aad
hlt
xchg
call
cwde
sar
jecxz
sti
lods
stc
stos
(bad)
lock
out
in
sti
mov
mov
(bad)
sahf
(bad)
test
movs
lock
retf
scas
jmp
mov
xchg
jmp
xchg
test
mov
rcr
enter
rcr
int3
test
mov
(bad)
xchg
icebp
mov
scas
loope
rcr
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
jbe
pushw
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jg
outs
push
push
aas
inc
das
inc
pop
popf
fld
jmp
add
fdiv
loop
lock
stc
mov
xchg
lds
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
push
add
es
sahf
pop
ja
dec
ss
mul
sub
test
dec
jns
xchg
fs
add
dec
jbe
mov
adc
inc
xchg
adc
int
dec
or
imul
mov
stc
cmp
lock
pushf
out
arpl
mov
out
sbb
scas
test
cwde
sbb
cmp
idiv
fidivr
pop
call
inc
jmp
aas
push
adc
jne
leave
mov
in
inc
sub
div
ins
pop
mul
stos
sbb
mov
(bad)
hlt
sub
mov
not
add
and
iret
fxch
iret
add
pop
sbb
sub
cmp
push
mov
fdivrp
mov
push
mov
jmp
sar
mov
push
push
das
dec
lods
push
mov
stos
fcomp
dec
retf
sub
mov
scas
not
sbb
add
xlat
shl
cmp
stos
xlat
pop
int
aam
dec
movs
dec
xchg
push
mul
ja
sbb
sub
mov
fnstsw
das
adc
int3
or
pop
mov
mov
scas
mov
fdiv
add
push
xchg
and
adc
sti
adc
aad
push
cwde
in
lods
sbb
and
fs
and
adc
add
int
mov
sbb
out
repz
xlat
cmp
iret
call
add
into
into
jno
and
(bad)
inc
outs
cmp
int3
sbb
inc
shr
jmp
fisttp
cmps
cmc
imul
and
mov
push
stos
lods
cmc
jnp
pop
lea
xchg
mov
xchg
sar
push
xchg
std
(bad)
scas
gs
icebp
sbb
mov
xor
dec
xor
rol
push
out
aaa
lock
mov
adc
je
xor
cmp
call
test
push
jnp
pop
sbb
pop
cmp
scas
inc
fidivr
out
sub
or
xor
ret
push
aaa
in
add
inc
sar
jae
ffreep
fdiv
in
xchg
je
dec
and
test
xchg
sbb
out
out
xchg
or
ret
adc
push
lock
inc
cs
mov
pop
dec
loop
aam
cmp
push
add
movs
in
(bad)
inc
ss
(bad)
push
pop
mov
dec
dec
add
sub
mov
call
std
cs
mov
xor
outs
jbe
sub
or
data16
sub
inc
jg
cmp
cli
adc
or
or
jmp
add
xlat
cmc
mov
scas
sti
dec
ss
cmp
jns
mov
adc
in
inc
xor
rcl
push
fwait
push
loopne
jne
jle
pop
retf
lds
int
into
mov
repz
shl
cmp
adc
loope
cmp
pop
cmps
cmp
ret
mov
addr16
push
dec
inc
add
xchg
js
das
retf
jg
or
repnz
sbb
jne
fisttp
in
xchg
sub
std
inc
cmp
mov
mov
(bad)
push
push
dec
xor
dec
fsubr
add
rcr
xchg
in
repz
pop
dec
xlat
cmp
push
in
(bad)
and
neg
xor
jge
sub
repz
rcl
adc
stos
jle
aam
retf
shl
xchg
dec
jp
in
push
lods
stos
pop
pop
aaa
pop
clc
loopne
arpl
sub
enter
pop
leave
out
aam
add
mov
and
test
loope
or
mov
ja
loopne
imul
push
sub
cmps
jnp
sub
movs
xchg
jecxz
pop
xor
stc
dec
outs
mov
ja
shl
in
inc
inc
push
and
(bad)
pop
inc
jg
call
retf
shr
and
gs
scas
sub
xchg
jl
addr16
das
mov
mov
(bad)
ret
jge
nop
fstp
xor
inc
xchg
cmp
xchg
push
mov
push
push
xor
pop
dec
adc
mov
nop
xor
lods
dec
ins
loop
mov
test
sbb
fisubr
daa
cmp
mov
cwde
xlat
sbb
xchg
inc
xor
or
je
(bad)
ja
xchg
xchg
jmp
out
test
movs
out
inc
adc
das
mov
mov
add
pop
jb
sub
out
addr16
je
push
idiv
fmul
rcl
or
inc
adc
or
ror
mov
mov
or
(bad)
mov
or
retf
mov
cld
xchg
adc
je
pop
cmp
arpl
out
ja
rcr
ins
push
inc
cmp
es
into
das
test
out
push
inc
fld
imul
dec
add
cmp
xor
lock
push
repz
sub
mov
std
xchg
push
adc
mov
call
dec
ds
das
xor
cmp
pop
jge
fsubr
mov
dec
pop
outs
neg
js
jp
stc
cwde
int
xor
scas
push
mov
pop
or
imul
sbb
sti
(bad)
(bad)
clc
pop
or
inc
dec
lods
(bad)
loopne
imul
push
into
std
leave
ins
mov
ss
adc
outs
mov
or
sbb
and
jmp
jae
cmps
icebp
(bad)
mov
inc
ror
outs
loope
fcom
int
mov
add
cdq
inc
je
mov
push
das
out
fwait
push
xchg
and
repnz
inc
xor
lods
dec
addr16
sbb
mov
dec
clc
mov
cmp
jbe
in
addr16
or
xchg
lahf
bound
(bad)
xchg
or
dec
cld
pop
mov
jo
jmp
jecxz
loopne
jno
enter
xchg
adc
aas
stc
xchg
cmp
pusha
xchg
in
retw
push
fucomi
pop
inc
je
pop
add
daa
sub
cmp
sub
mov
movs
xor
aam
xor
iret
mov
sbb
lock
pop
(bad)
xchg
push
lods
dec
jnp
sbb
cmps
add
test
push
xchg
mov
ins
dec
sub
enter
push
and
pop
or
ins
popa
pop
adc
mov
addr16
(bad)
jmp
mov
jnp
gs
aas
pop
add
(bad)
enter
xchg
add
mov
stc
add
jmp
pusha
js
out
je
ss
ret
out
movs
test
mov
push
jmp
jl
arpl
test
fst
ja
push
sub
mov
arpl
cmp
pop
repz
sub
stos
xchg
dec
jmp
fdiv
popa
mov
jns
outs
stos
movs
fsub
rol
sbb
sbb
test
adc
jae
sub
mov
dec
mov
test
dec
push
popf
sbb
cmp
pop
or
jne
pop
(bad)
(bad)
not
test
std
cmp
add
jo
les
popa
mov
ret
add
mov
xchg
out
inc
push
mov
mov
inc
jecxz
sar
retf
xchg
push
shl
jne
outs
jp
mov
mov
pop
in
adc
ja
jmp
sbb
xchg
mov
mov
push
sbb
sub
or
lods
cmp
shl
dec
es
pop
nop
and
push
inc
adc
mov
fisubr
sbb
ja
lds
mov
and
sbb
mov
sbb
call
sahf
int
and
jmp
inc
xchg
push
inc
into
mov
ror
add
fidivr
xor
jmp
out
mov
xor
ins
sub
out
pushf
fidiv
push
mov
adc
mov
imul
xchg
mov
pop
fmul
fidiv
iret
mov
mov
sub
test
push
adc
jle
or
js
dec
push
cmp
xchg
ret
cld
pop
mov
cmp
fnstcw
xor
cwde
sub
icebp
xor
gs
inc
inc
dec
outs
push
into
movs
add
pop
fcomp
(bad)
imul
sub
and
add
xchg
mov
jg
cli
pop
adc
and
shl
inc
enter
mov
lahf
out
adc
hlt
call
ins
pop
(bad)
imul
push
inc
and
adc
push
sbb
lods
sbb
xor
leave
jae
cli
pop
push
jbe
sub
mov
mov
jp
mov
ins
(bad)
jle
lods
stc
mov
out
sub
arpl
imul
shl
add
mov
sbb
cmps
jmp
in
push
pminub
sub
ffreep
aas
outs
add
ins
ins
movs
mov
rcl
scas
cmp
sbb
sbb
xchg
jae
dec
pop
mov
xchg
lods
lock
mov
push
es
test
(bad)
cmc
fisub
fbstp
in
jg
and
add
cmp
pop
movs
loop
(bad)
xchg
cmc
scas
scas
push
leave
push
jmp
arpl
mov
jae
(bad)
fldz
xchg
mov
mov
dec
lahf
cmps
jnp
sub
inc
jmp
or
mov
pop
dec
fld
adc
into
mov
mov
test
cmp
jne
outs
outs
test
jg
sbb
push
call
mov
sti
ret
or
push
xchg
jecxz
sub
inc
push
outs
add
adc
jo
fs
adc
mov
in
in
cmp
pop
add
lds
inc
push
ror
sub
mov
je
fsub
je
xchg
(bad)
int3
jg
mov
mov
les
xor
mov
cmps
ret
or
fmul
rol
add
sbb
loope
int3
push
jnp
call
adc
mov
ss
rcl
adc
cmp
pop
dec
ins
and
fcomi
sub
jl
push
shr
stc
pop
fisttp
fst
mov
xchg
hlt
mov
jne
sahf
xchg
fsub
and
or
ja
je
xor
loope
fadd
or
cwde
cwde
and
pop
xchg
(bad)
mov
mov
pop
dec
mov
cmp
mov
out
fmul
mov
mov
pushf
xlat
mov
pop
sub
pop
loopne
sbb
shr
and
mov
and
movs
arpl
fisttp
scas
ins
dec
push
inc
aam
xor
jl
xor
xchg
mov
enter
mov
mov
sbb
pop
pop
xchg
push
popa
pop
test
popa
cmc
adc
fsubr
pop
jecxz
lea
adc
xchg
icebp
imul
pop
fwait
mov
enter
fld
outs
cmps
es
jnp
out
or
xor
or
jnp
cmp
push
std
outs
rcr
call
mov
movs
mov
std
or
div
ret
adc
adc
data16
sub
in
and
scas
enter
je
mov
adc
jge
jmp
dec
mov
pop
movs
(bad)
test
in
cmp
stc
mov
add
retf
inc
cmp
shl
out
cwde
adc
mov
push
mov
mov
ds
and
push
ins
xor
loopne
retf
call
cmc
sub
push
ja
add
gs
jecxz
pop
dec
push
addr16
sub
mov
out
shl
adc
inc
ror
cmp
retf
dec
retf
push
sub
add
ret
pop
xor
retf
aad
arpl
fidivr
sub
mov
cwde
xor
lods
pushf
dec
sbb
sub
or
std
pop
int
push
and
or
xchg
nop
sahf
pop
jecxz
(bad)
cmps
mov
sbb
push
out
lahf
cmps
xchg
add
(bad)
and
(bad)
jmp
loop
xchg
icebp
scas
aas
sbb
or
out
retf
push
mov
ror
push
out
adc
outs
popf
(bad)
sub
sub
jae
mov
mov
dec
cmc
(bad)
popa
mov
xor
xor
adc
ja
mov
stc
test
fisub
xor
je
mov
(bad)
xchg
fimul
sbb
lahf
xor
(bad)
push
mov
sbb
int
mov
out
jmp
push
cli
add
jg
add
sbb
jg
adc
dec
mov
push
data16
clc
cmc
or
lahf
aad
js
cmps
in
mov
imul
stos
aad
jp
sbb
mov
rcl
and
sbb
inc
fcomp
cli
scas
retf
push
inc
or
and
and
or
cwde
xor
sbb
loop
push
cwde
(bad)
sahf
jae
inc
xchg
call
fistp
je
pusha
enter
(bad)
jb
cdq
pop
or
dec
xchg
or
pushf
stc
imul
mov
inc
sub
jle
scas
dec
xchg
mov
fdivr
xor
mov
cmp
cdq
jae
xor
jo
inc
icebp
hlt
push
sbb
push
rcl
and
add
mov
lds
jmp
inc
repnz
adc
jl
popa
stos
nop
(bad)
jmp
in
test
xchg
cmp
and
test
ja
pop
jnp
call
push
pushf
inc
mov
mov
cmc
(bad)
cld
mov
cdq
or
pop
inc
mov
dec
lods
cwde
cmp
xor
mov
mov
daa
clc
pop
retf
cli
scas
outs
or
and
mov
xor
dec
cs
clc
or
out
out
(bad)
or
loope
mov
arpl
leave
imul
jae
aam
lahf
dec
out
sub
imul
jno
jecxz
pop
(bad)
ds
adc
(bad)
int3
(bad)
push
add
iret
sub
xor
jp
pusha
scas
mov
mov
adc
dec
add
mov
daa
sub
fwait
pop
ja
cmps
test
inc
add
(bad)
ret
xchg
call
imul
ins
xchg
xchg
mov
dec
jnp
shr
das
push
inc
fwait
nop
dec
xchg
inc
pop
aas
xchg
mov
xor
out
pop
sbb
sti
pop
mov
(bad)
push
mov
inc
enter
fadd
imul
push
pop
xchg
ins
arpl
xchg
pop
cmps
cmc
stos
and
mov
jecxz
cwde
jb
sub
aam
fucomi
ret
add
cli
push
mov
xor
inc
jp
ins
jmp
jne
scas
ficom
call
fwait
dec
popf
hlt
pop
or
fld
movs
dec
push
push
jnp
hlt
dec
mov
call
div
jmp
ins
jg
outs
adc
cmp
frstor
mov
(bad)
push
in
and
(bad)
jmp
scas
xor
and
pushf
adc
cmp
or
adc
cmp
cdq
and
jg
push
push
push
pop
xlat
or
(bad)
fild
cli
mov
xchg
push
ds
mov
sbb
bound
test
inc
fimul
dec
pushf
or
mov
inc
cmps
stc
pop
push
and
das
adc
jbe
add
test
cmc
mov
bound
and
or
pop
mov
cmp
fwait
pop
(bad)
adc
jmp
icebp
push
xchg
sbb
pop
lock
jp
loop
push
dec
dec
scas
pop
movs
dec
outs
mov
outs
call
add
mov
add
movs
std
ja
push
test
(bad)
xor
lock
or
mov
add
dec
lds
and
mov
int
sub
xchg
(bad)
mov
and
shl
std
sahf
out
scas
mov
outs
jg
inc
mov
xchg
cmp
xor
pop
push
outs
lahf
nop
retf
sub
int3
(bad)
mov
loopne
pop
lahf
call
ror
adc
in
cwde
pop
jp
movs
test
jne
ficom
cmp
imul
adc
aam
mov
adc
leave
int3
stos
enter
sub
and
loop
mov
fwait
call
or
int
icebp
push
test
mov
jp
xchg
sbb
add
lea
add
jbe
push
pop
test
idiv
jb
movs
cmp
mov
loop
adc
mov
int
test
ffree
pop
or
ror
fmul
sbb
inc
inc
jmp
jo
fdiv
xor
and
into
ret
nop
lods
iret
mov
ret
fldcw
push
daa
leave
sti
dec
dec
out
fisttp
xchg
push
mov
add
and
mov
mov
test
les
imul
inc
mov
jae
ret
or
jo
cmp
add
mov
addr16
dec
sbb
into
std
daa
int3
mov
outs
dec
repnz
mov
push
mov
or
xchg
imul
dec
(bad)
in
leave
out
loop
sar
mov
xor
inc
popf
in
call
outs
mul
xchg
and
push
test
std
cmp
fcomp
cmp
cdq
das
out
mov
sub
xchg
mov
repnz
xor
xor
out
sbb
add
fs
(bad)
add
dec
mov
daa
sar
push
sbb
mov
push
sub
lods
pop
mov
adc
inc
push
por
enter
test
mov
mov
sahf
hlt
mov
push
mov
(bad)
pop
mov
add
inc
push
sub
fidiv
mov
add
lock
pusha
inc
loope
adc
fcom
pop
pop
mov
mov
mov
aas
loope
repnz
adc
pop
dec
sbb
scas
retf
push
popa
scas
inc
je
jg
lock
cmp
push
or
stos
int
icebp
sub
(bad)
jns
loop
cmp
gs
mov
(bad)
pop
fimul
adc
mov
ret
push
jno
mov
out
in
pop
icebp
mov
mov
(bad)
xchg
aad
adc
inc
sar
sbb
push
xor
push
xchg
or
or
or
ss
sub
sub
nop
scas
out
mov
fadd
mov
rol
dec
and
sub
xor
test
movs
sbb
mov
inc
jne
outs
add
outs
pop
scas
sahf
dec
test
(bad)
outs
mov
test
jae
out
sbb
pushf
test
repz
lahf
out
inc
mov
xchg
push
ret
(bad)
adc
dec
sbb
in
sbb
(bad)
push
lahf
jmp
in
dec
pop
xor
adc
sub
es
test
in
cmp
push
scas
pop
and
pop
jns
inc
(bad)
clc
dec
pop
mov
leave
test
outs
cwde
sar
pop
pop
call
(bad)
jg
mov
inc
sti
loop
jle
mov
mov
jb
ins
stos
sahf
imul
out
inc
sti
mov
xchg
jl
mov
or
cwde
inc
shr
fdiv
mov
xchg
jo
xor
dec
out
jmp
sub
aas
pop
clc
or
adc
or
mov
(bad)
pop
pop
daa
push
addr16
or
xchg
das
or
icebp
push
out
xchg
int3
dec
sahf
mul
mov
fdiv
xor
(bad)
(bad)
je
fwait
je
sub
movs
cli
mov
push
test
add
and
sub
xchg
std
(bad)
out
mov
adc
xor
cmp
aam
push
pop
and
out
iret
test
mov
jb
push
jo
jmp
aas
jg
inc
mov
pop
pusha
mov
pushw
xor
pop
mov
pop
mov
jns
adc
arpl
push
adc
cli
pusha
adc
mov
div
cmps
shr
adc
sbb
or
cmps
aam
dec
adc
lds
jne
xor
mov
mov
and
lock
lods
mov
sub
mov
les
dec
in
sub
mov
test
mov
xchg
je
js
fidiv
xor
pop
adc
and
pushf
mov
dec
lahf
jmp
or
mov
xchg
dec
push
fist
jle
inc
adc
jo
das
fidivr
and
xor
jg
inc
mov
shl
jge
sbb
dec
or
xor
xlat
aas
sub
dec
mov
or
dec
adc
out
test
mov
mov
outs
mov
jle
outs
sbb
adc
aad
inc
mov
pop
out
aaa
mov
sbb
push
push
in
adc
mov
pop
push
aas
push
xchg
ins
sbb
fidiv
fldcw
jbe
mov
xchg
push
mov
ja
out
gs
std
mov
je
dec
sbb
cmp
or
pop
ds
lods
push
jb
xchg
std
bound
out
cdq
pop
jl
jg
xor
jmp
sahf
push
jbe
push
and
in
xchg
(bad)
gs
pop
xchg
call
imul
and
push
jl
js
sub
mov
adc
mov
out
rcr
sbb
dec
daa
sub
and
sub
test
fisttp
add
call
add
dec
call
sbb
scas
adc
mov
push
adc
fnstsw
movs
aas
jg
pop
in
outs
dec
andps
imul
gs
lods
movs
cmc
xor
jge
pop
adc
xlat
cli
popa
es
pop
fist
jg
push
imul
aaa
sub
adc
cmp
pop
and
xor
shl
imul
out
call
out
xchg
push
jmp
addr16
mov
fs
rcr
imul
sub
and
jnp
test
(bad)
xor
cs
iret
mov
mov
mov
jns
jecxz
test
jo
xor
mov
and
inc
test
cmp
jge
enter
out
in
xchg
fild
ins
xor
and
dec
push
ret
pop
jle
test
sbb
fldenv
jo
pop
cmp
fisub
jns
and
(bad)
in
in
mov
xor
fstp
sbb
js
xor
sar
mov
xchg
enter
fidivr
mov
push
mov
xor
int
push
(bad)
rol
mov
inc
es
lds
xor
inc
ss
jmp
aad
sbb
sar
fisttp
jg
cs
pop
std
mov
xchg
xor
sub
(bad)
cmps
fistp
mov
call
js
push
push
cld
fistp
xor
clc
xor
repnz
je
inc
add
sub
cdq
clc
pusha
pop
dec
das
je
loop
cmps
dec
dec
add
dec
xor
bound
je
pop
rdmsr
(bad)
pop
jge
jne
mov
sbb
ins
adc
cmp
sub
add
sbb
popf
aam
dec
vmread
xchg
lds
and
ins
cmp
inc
bound
push
mov
out
sub
outs
das
push
sub
ret
pop
cmp
loope
shl
xchg
fcom
xor
popf
std
sbb
retf
mov
or
mov
xor
call
callw
or
sbb
fwait
loope
int3
adc
jl
mov
jmp
and
mov
mov
stos
mov
mov
(bad)
gs
or
sub
dec
xor
(bad)
aam
sub
push
mov
lds
addr16
aad
dec
loope
jmp
jecxz
jl
lahf
mov
inc
pop
sub
popa
add
push
mov
fwait
jne
pop
mov
mov
adc
fistp
and
pushf
scas
push
out
in
(bad)
lock
inc
push
jbe
aaa
dec
jecxz
ja
jns
adc
pop
in
inc
rol
daa
dec
push
lock
aas
pop
in
(bad)
and
imul
push
in
cmp
dec
adc
daa
jo
jbe
and
push
xor
mov
pop
dec
mov
imul
sub
sahf
les
pop
or
bound
dec
cmp
dec
stos
call
cmps
push
and
fstp
nop
je
sbb
push
mov
fdiv
jmp
mov
mov
xchg
test
mov
mov
shl
and
push
push
mov
dec
mov
imul
jne
sete
xchg
mov
mov
ret
dec
out
jmp
inc
add
repz
lods
(bad)
xor
pop
add
call
dec
mov
lods
aam
lock
lds
aaa
fmul
push
sbb
mov
xor
inc
loopne
pop
test
mov
inc
xor
sub
retf
mov
mov
arpl
sbb
pop
aas
jle
in
int
clc
addr16
nop
mov
dec
cmp
add
mov
pusha
mov
loop
lds
or
data16
xchg
fld
cwde
xchg
int3
fwait
dec
push
and
outs
or
jnp
mov
in
into
push
or
hlt
pushf
fmul
int
pop
xor
mov
push
mov
push
imul
in
inc
or
popf
jnp
imul
lods
sti
out
push
inc
stos
add
push
repnz
clc
xchg
fcom
mov
cs
push
push
cmp
mov
sbb
mov
shr
add
add
mov
xor
sub
sbb
fsubr
inc
mov
data16
add
(bad)
adc
lds
dec
fidivr
scas
lds
pusha
mov
xchg
mov
jne
add
xchg
popa
and
adc
cli
adc
arpl
or
jp
(bad)
xor
in
xor
xchg
push
ins
lods
out
xor
rcr
mov
and
repnz
icebp
dec
sub
je
icebp
push
jbe
sti
and
inc
adc
inc
ficom
mov
pop
cmp
pushf
ins
push
ss
mov
push
ds
mov
sub
dec
cmp
xchg
stc
sbb
pop
(bad)
call
popf
jmp
adc
xor
lea
mov
lahf
fnstsw
jb
pushf
xchg
(bad)
sub
cmp
ins
adc
in
sub
pop
adc
inc
mov
and
cli
add
iret
xor
pop
ss
push
lods
fmul
gs
je
cld
dec
add
arpl
xchg
inc
or
cmps
movs
fadd
neg
stos
shl
mov
lods
(bad)
mov
dec
or
loop
jle
jno
inc
daa
sub
lahf
(bad)
lods
cmps
in
and
and
mov
stc
inc
and
mov
push
xor
scas
dec
push
sbb
aam
sbb
data16
stos
rcr
add
movs
dec
daa
repnz
mov
pop
rol
cli
das
jp
(bad)
xor
xchg
popa
and
mov
dec
out
aam
jo
lds
mov
aaa
dec
cmp
pop
std
lahf
(bad)
test
sahf
repz
or
(bad)
push
add
es
mov
mov
and
mov
repz
leave
and
cmp
icebp
xchg
mov
push
cmp
sub
retf
mov
sahf
xlat
cmp
repnz
mov
dec
ss
cwde
outs
add
push
test
mov
mov
push
sbb
xchg
imul
dec
sub
mov
dec
aam
sahf
xlat
cmp
fidiv
and
mov
(bad)
mov
xor
nop
jno
inc
sub
jle
jmp
retf
push
adc
cmps
lds
dec
fstp
scas
les
pusha
mov
pop
adc
mov
aad
addr16
mov
jno
dec
add
xor
push
repz
mov
test
adc
xchg
mov
jnp
fcomp
inc
call
mov
mov
fcom
test
mov
(bad)
int3
lahf
jp
retf
in
jnp
push
xor
push
sbb
aam
ja
loope
push
adc
push
or
fiadd
dec
fstp
out
inc
xlat
scas
je
into
stos
mov
dec
sbb
mov
loope
popa
es
xor
push
aaa
pop
push
gs
out
fs
and
push
loop
movs
icebp
pop
cmp
lds
mov
jl
adc
mov
movs
cli
test
aad
lods
jmp
push
xor
mov
mov
dec
or
mov
inc
adc
mov
sbb
sbb
rcl
stos
imul
jl
loop
push
xchg
test
mov
mov
or
dec
push
jl
mov
repz
jno
rol
ficom
mov
xor
add
pop
hlt
cmps
aad
popf
rcr
mov
xor
adc
sti
mov
(bad)
fisttp
push
ror
cmc
jbe
dec
add
cmp
hlt
xchg
mov
adc
pop
and
xchg
aad
mov
in
pop
push
data16
sub
outs
es
int3
cdq
imul
xor
mov
xchg
call
pop
cld
movs
scas
std
(bad)
sti
sahf
shr
push
out
lods
enter
xor
xor
test
mov
(bad)
jp
inc
or
push
mov
jno
fld
dec
fdiv
fwait
lock
rep
cmps
hlt
push
and
test
scas
retf
xor
mov
or
ja
ret
dec
or
jo
pop
in
leave
stos
fidivr
test
js
cmp
bound
pop
icebp
mov
and
mov
call
retf
mov
xchg
rcl
mov
push
inc
mov
adc
xchg
clc
aas
ja
mov
dec
adc
scas
data16
mov
xor
inc
xlat
mov
stc
xor
sbb
stos
inc
sub
cmps
ins
das
jmp
adc
test
inc
or
pop
scas
xlat
popa
add
pop
dec
jmp
lock
cwde
(bad)
and
jg
icebp
pushf
mov
clc
dec
add
scas
inc
adc
mov
test
jnp
xchg
fwait
shl
pop
(bad)
add
mov
fisub
pop
mov
and
cmp
cmps
mov
outs
add
adc
ins
aas
in
mov
ror
sbb
rcr
(bad)
mov
nop
in
fstp
sub
sub
pop
sbb
xlat
cmps
cdq
hlt
push
ins
lods
out
cmp
test
adc
rcl
in
mov
into
pop
aaa
sti
mov
inc
xor
jno
push
adc
pop
sbb
in
retf
test
jo
lds
ins
cs
pop
sub
jmp
and
test
fwait
sti
fs
jo
stos
out
xchg
mov
ds
jnp
ja
dec
or
iret
ds
sub
shl
mov
xor
xchg
dec
xor
pop
add
(bad)
out
xchg
push
dec
ss
mov
mov
setnp
and
es
push
jo
jae
jecxz
fwait
pusha
retf
stos
call
jp
add
fsub
sub
in
mov
mov
cmp
xchg
push
es
sub
out
dec
add
loope
(bad)
fs
call
fbld
jne
push
pop
dec
out
and
je
pop
sbb
sub
sar
add
push
add
xor
ins
pop
mov
cmc
add
call
mov
and
add
fistp
inc
sbb
scas
cmp
enter
shl
adc
iret
push
stos
mov
test
sub
jmp
mov
rcl
push
sub
sub
jno
mov
mov
arpl
arpl
xchg
inc
sbb
test
fld
and
or
push
or
jmp
pop
cmp
pushf
ds
loope
and
bound
jmp
(bad)
sar
mov
cdq
jl
sbb
icebp
in
mov
or
ds
or
pop
add
pop
jmp
lods
je
xor
add
cmp
std
out
xchg
jbe
outs
in
lods
pop
fwait
rol
fst
aam
pop
neg
or
ret
adc
rol
jmp
inc
cmp
sbb
and
or
(bad)
adc
add
push
pop
push
or
sub
shr
cmp
or
int
test
mov
and
add
scas
xlat
jo
pop
in
adc
inc
es
push
into
call
and
lds
loop
or
adc
xchg
(bad)
and
jae
pop
loope
(bad)
ins
lods
adc
dec
add
xchg
adc
xchg
xlat
mov
pop
sbb
(bad)
iret
scas
movs
in
fimul
cmp
outs
xor
into
mov
ret
cmp
dec
and
hlt
les
pop
xchg
cmp
fsubr
and
push
sbb
ret
xchg
movs
rcr
test
mov
push
or
sub
movs
icebp
adc
xchg
jge
jo
lods
(bad)
xor
push
add
ds
sbb
clc
mov
jo
xor
push
pshufw
jo
inc
add
aaa
std
ret
popf
push
arpl
repz
stos
addr16
test
adc
scas
aad
sub
jns
call
imul
mov
pop
xor
(bad)
xchg
hlt
add
(bad)
xor
cmp
dec
adc
sub
ret
or
inc
sub
jle
sbb
mov
addr16
sbb
sub
push
mov
pop
scas
cmps
icebp
jno
(bad)
ins
das
push
sbb
push
xchg
lock
add
dec
xor
jle
sbb
inc
push
je
mov
xchg
shr
push
sbb
and
cmp
inc
adc
stos
les
dec
sub
fstp
test
imul
push
or
push
cmp
call
cmp
shl
arpl
cmps
fwait
std
mov
stc
arpl
ins
sub
pop
add
out
es
adc
in
and
add
mov
xor
ins
add
neg
mov
bound
cli
xchg
pop
cs
add
sbb
mov
outs
add
add
repz
in
nop
lock
movs
jo
sub
dec
xor
or
or
mov
xchg
aam
movs
stc
mov
repz
add
xchg
(bad)
cld
out
cmp
push
mov
pop
jae
in
rcl
shl
scas
cmc
pop
les
addr16
popf
xchg
shl
mov
je
push
scas
pop
xor
test
pop
add
pop
test
test
mov
sub
cmc
in
pushf
pop
je
scas
lods
fimul
imul
inc
pop
pop
sbb
jge
fimul
pop
cli
imul
ret
test
cmp
sub
addr16
xor
outs
outs
or
dec
adc
mov
sbb
scas
retf
gs
(bad)
lods
jmp
stc
cdq
(bad)
stos
shl
pop
and
inc
xchg
fisttp
mov
push
pusha
sbb
jbe
jb
adc
jge
retf
gs
cli
mov
pushf
ret
xchg
fcom
dec
lods
ins
jecxz
pop
adc
mov
loop
imul
xchg
in
test
movs
fbstp
mov
cdq
cmc
ins
mov
rcl
dec
sbb
gs
mov
pop
add
popf
cli
sbb
jbe
aas
js
aam
mov
add
mov
pop
pop
push
mov
les
inc
lea
fcomp
dec
sbb
mov
test
mov
std
cmp
les
cmp
jns
jo
mov
popf
call
in
sub
adc
arpl
pushf
mov
nop
rol
jge
ins
arpl
mov
aaa
leave
xchg
aam
int3
sahf
mov
loope
ins
or
(bad)
out
push
cmp
rcl
pushf
cli
push
out
mov
outs
lock
and
and
jge
sahf
jo
sub
das
sbb
xlat
aaa
jp
mov
xchg
imul
daa
push
mov
xchg
aam
retf
fstp
pushf
ror
jno
mov
sbb
push
add
mov
iret
xchg
shl
xor
push
sbb
nop
mov
arpl
clc
push
cs
sub
aad
push
call
add
daa
ins
push
mov
in
sbb
rcr
mov
adc
arpl
bound
fst
mov
push
mov
push
pop
and
movs
outs
(bad)
fwait
dec
ret
cmp
out
sbb
mov
sub
dec
lods
es
push
and
pop
mov
pop
jmp
shl
xchg
mov
mov
cmp
shr
ret
lea
fst
lds
aaa
add
sahf
pop
cmp
int
loop
or
fwait
stc
push
in
in
add
pop
adc
test
mov
out
pop
movs
fld
repz
dec
mov
mov
push
push
cld
jae
rol
hlt
adc
js
mov
jo
inc
nop
mov
lods
into
or
xchg
clc
nop
scas
dec
and
push
ins
repz
pushf
stc
xchg
aad
enter
and
pop
lahf
jne
inc
in
mov
call
arpl
pop
mov
pop
xchg
and
popa
or
cmp
pop
cmp
inc
sub
jecxz
fist
ins
movs
add
or
pushf
ret
mov
(bad)
mov
cmp
enter
push
(bad)
nop
fcomp
mov
xchg
cld
gs
pop
repz
mov
arpl
in
add
test
mov
ins
lods
cmp
in
jbe
xchg
add
cld
mov
adc
or
dec
xchg
dec
pop
dec
push
cs
cmps
sub
adc
jmp
push
js
push
fucomip
cdq
cli
mov
cmp
xor
mov
adc
cmps
pop
jp
inc
adc
dec
and
cs
loop
rcr
mov
mov
(bad)
mov
push
dec
sbb
nop
retf
xchg
je
add
in
xchg
mov
mov
arpl
dec
add
cli
add
(bad)
and
mov
mov
int
jl
adc
aam
dec
jle
xor
sar
out
mov
les
icebp
loopne
xor
jle
mov
popa
xor
xchg
les
stos
pop
fwait
enter
mov
push
sti
retf
ror
into
mov
xchg
stos
fiadd
pop
movs
lods
dec
mov
add
mov
push
mov
mov
test
cwde
out
sub
loope
fiadd
jbe
push
arpl
test
cmp
ret
mov
outs
in
adc
ror
retf
shr
and
pop
loopne
icebp
ins
xchg
sub
dec
lods
add
and
cmp
jle
sti
sub
jb
lods
in
push
neg
mov
push
nop
mov
push
stc
cmp
add
dec
xor
les
jle
cwde
jno
or
sub
leave
cdq
dec
rcl
xor
out
jecxz
rol
add
mov
hlt
mov
lds
xor
push
adc
das
and
mov
add
and
or
cmp
jb
and
hlt
popa
loopne
add
xchg
push
add
add
mov
jno
ins
add
inc
mov
in
push
add
and
mov
xor
(bad)
out
jmp
(bad)
jge
retf
(bad)
add
aaa
jle
cli
push
jbe
inc
pop
jp
mov
pusha
mov
push
stos
stc
jge
sbb
and
sub
pop
jmp
lea
leave
sbb
mov
je
aas
jp
out
jno
in
adc
ret
pop
ds
xor
ficom
mov
in
dec
shl
jmp
test
jae
or
jmp
test
and
pop
sbb
mov
cli
and
mov
loopne
(bad)
jmp
push
mov
push
das
ins
add
lods
retf
hlt
xchg
jne
ret
xchg
sub
or
fidivr
loope
jae
(bad)
mov
xchg
cmc
add
rcr
xor
mov
outs
daa
push
push
add
cmp
hlt
cmp
mov
or
lock
inc
and
push
mov
mov
sub
int3
push
adc
mov
icebp
mov
retf
cmps
dec
es
idiv
push
inc
fimul
gs
mov
mov
data16
cs
adc
mov
push
shl
push
hlt
call
jnp
pop
sbb
inc
mov
inc
or
in
or
arpl
mov
sub
pushf
popf
in
push
cmp
mov
mov
pushf
shl
cmps
ficomp
ret
scas
jp
into
mov
cmp
xor
jb
call
push
xor
test
in
inc
sub
mov
dec
sbb
mov
stos
mov
mov
mov
mov
cmp
mov
add
shr
lods
iret
popa
(bad)
(bad)
movs
aam
outs
sub
pop
adc
cmps
mov
lahf
dec
push
bound
sub
push
sbb
test
hlt
ss
mov
mov
or
movs
scas
ret
xchg
in
jge
xor
or
xor
nop
hlt
pushf
inc
sub
shl
add
push
icebp
mov
sbb
add
inc
and
rcr
out
ja
sbb
call
sbb
mov
or
dec
or
mov
push
push
xor
fisttp
imul
mov
mov
xchg
jmp
sub
mov
pop
or
mov
fisttp
icebp
mov
or
nop
stos
les
outs
sar
cmp
adc
dec
les
in
test
gs
cmps
cdq
loope
push
test
dec
adc
xchg
ins
sbb
jg
xchg
icebp
jno
cmp
cmp
jne
cld
or
push
loope
mov
jge
popf
movs
fcomp
add
jae
iret
xchg
dec
sbb
add
pop
cmp
xchg
leave
cmps
mov
fs
popa
sbb
lahf
imul
and
mov
jecxz
shl
pop
aam
inc
sub
xchg
loope
pop
push
push
in
cwde
jl
(bad)
mov
xchg
hlt
mov
cmp
push
fnsave
lock
mov
test
js
adc
sar
mov
call
jge
call
inc
and
mov
sar
sbb
or
dec
mov
push
aaa
out
ins
sub
or
nop
jg
les
fwait
outs
adc
movs
pusha
add
jg
mov
sub
xchg
fs
xor
es
pushf
and
xor
scas
xlat
mov
mov
inc
and
pop
sub
adc
inc
and
jb
fld
dec
retf
mov
xor
std
push
sbb
mov
cdq
sti
and
dec
clc
cdq
arpl
jmp
cmps
fwait
ret
das
jl
mov
movs
jecxz
cmp
sub
(bad)
mov
add
test
fwait
jbe
sbb
std
mov
and
stc
or
inc
repz
sub
sub
test
add
aam
pop
mov
or
dec
mov
dec
cmc
xchg
mov
inc
daa
fcomp
jmp
ins
pop
loopne
add
or
dec
stc
lods
mov
add
xchg
imul
fist
cmp
inc
rcr
push
stos
shl
pusha
jmp
data16
popf
stos
leave
pusha
adc
test
mov
das
jge
popf
(bad)
out
add
rcr
cwde
stc
inc
das
cli
mov
test
adc
pop
ds
mov
sbb
sbb
xor
daa
into
movs
jge
iret
lea
push
fnstcw
xchg
xlat
pop
es
lahf
mov
adc
pop
mov
pop
pop
icebp
mov
(bad)
mov
add
mov
ds
sbb
out
cmp
lea
jno
mov
mov
push
jle
shl
dec
scas
out
adc
mov
scas
xchg
lds
dec
or
and
scas
mov
lea
ficomp
or
int
push
adc
(bad)
lahf
outs
sub
test
leave
dec
xor
in
lods
cmc
push
sub
mov
add
xchg
mov
cmp
fcom
inc
cmp
mov
inc
pop
arpl
xor
sub
call
shr
xor
jnp
lahf
call
(bad)
daa
dec
sub
out
sbb
inc
fbstp
sar
pop
test
ja
cmp
ins
push
jnp
sub
minps
dec
leave
stos
inc
and
cmp
sub
mov
add
xchg
dec
adc
pushf
mov
xchg
fnstsw
pop
sbb
cmps
(bad)
out
add
add
pop
ret
lock
add
pop
test
add
loop
shl
je
test
inc
push
push
sub
jnp
into
add
aam
xor
pop
sub
stos
fistp
aam
dec
cmp
pop
pcmpgtw
mov
movs
jnp
or
ficomp
pop
sbb
push
jmp
test
bound
sub
cli
xchg
mov
(bad)
push
and
xchg
mov
add
mov
(bad)
das
inc
test
mul
fidivr
jl
pop
push
das
dec
fdiv
scas
les
pop
mov
dec
pop
shl
outs
or
pop
retf
movs
push
dec
adc
cmc
mov
ds
xchg
scas
sti
dec
das
hlt
xchg
xchg
fst
or
sar
xor
rcl
push
jae
pushf
sahf
int
pop
test
pop
and
stos
test
pop
cmp
fwait
fwait
clc
or
mov
aam
sahf
xlat
pop
or
push
xor
pop
rol
push
out
cmps
lahf
out
adc
jge
lock
enter
sbb
mov
pusha
or
outs
mov
into
adc
mov
imul
sar
cmps
bound
jo
ins
or
mov
cmps
jmp
adc
aad
inc
shl
mov
call
push
adc
sahf
xchg
hlt
add
sbb
jnp
leave
sub
xchg
int
or
xchg
inc
and
mov
pop
jb
fbld
pusha
mov
dec
add
cwde
in
xchg
arpl
in
jae
rol
aad
cwde
loopne
push
and
or
mov
and
push
dec
stos
iret
ss
sar
stos
(bad)
sub
fcomp
cwde
retf
stc
call
add
(bad)
sub
mov
and
retf
rcl
out
addr16
sahf
dec
sub
xchg
popf
(bad)
cmp
ficomp
lock
ret
dec
sbb
call
shr
xor
iret
inc
sub
xchg
aas
pop
push
es
ficomp
xor
mov
cmp
add
push
inc
mov
pop
jmp
fcom
sbb
ret
lods
call
adc
rcr
cmps
dec
and
call
les
rol
or
xchg
gs
lahf
fwait
cli
or
lds
lea
xchg
jge
in
jo
sar
test
adc
clc
pop
xor
fwait
addr16
jno
xchg
ja
std
test
out
or
lahf
sti
xchg
pushf
in
push
lods
rcl
ins
mov
or
ins
adc
jmp
stc
or
dec
test
dec
sub
hlt
cdq
xchg
(bad)
sub
icebp
dec
add
pop
jl
imul
sub
xchg
xchg
fisub
ror
call
inc
add
xchg
mov
jae
in
cdq
jmp
jae
int
xlat
jno
pushf
fwait
into
and
jnp
xlat
addr16
pop
jle
std
cmp
mov
cdq
iret
add
xchg
inc
adc
test
sbb
repz
call
or
jmp
fst
in
add
xchg
sahf
std
ja
loopne
inc
sar
inc
adc
mov
lea
jecxz
addr16
pop
das
adc
les
mov
(bad)
popf
xchg
cmc
outs
lods
jmp
push
cmp
scas
pushf
stc
sub
(bad)
fnstsw
stos
in
pop
cmp
mov
fst
pop
and
mov
arpl
sub
pop
clc
mov
ins
add
sbb
stos
enter
and
pop
out
xchg
cmps
loopne
std
push
jle
mov
les
lahf
(bad)
jge
or
cmc
xchg
aam
mov
stc
aas
pop
jmp
adc
mov
ror
stos
out
push
xor
mov
nop
jno
neg
(bad)
mov
fmul
mov
cmovp
mov
push
repz
xlat
lahf
bnd
fisttp
ins
fiadd
jns
ss
rcl
imul
jge
les
mov
ret
fstp
jnp
les
(bad)
dec
xor
cmps
mov
pop
add
stos
pushf
call
mov
sub
cmp
movs
ins
sbb
xchg
push
adc
mov
sbb
into
push
aaa
push
sbb
push
fisub
cwde
shl
pop
stos
shl
lods
hlt
xor
mov
pop
sbb
sbb
fld
cmovl
jle
retw
jecxz
and
jge
mov
rol
ss
xor
dec
add
cwde
std
inc
sbb
mov
iret
cs
xlat
lods
xchg
shl
int3
scas
mov
mov
fbld
xor
fwait
xchg
xor
mov
dec
ret
retf
xor
out
pop
inc
and
mov
and
fcom
jge
mov
xor
mov
dec
push
sub
lods
test
mov
push
shl
pop
and
xchg
ja
(bad)
sahf
adc
scas
stos
mov
int3
sub
mov
je
sub
outs
cmp
jne
into
xchg
loopne
inc
fist
inc
and
test
push
sbb
sahf
ins
sub
je
mov
mov
and
xchg
push
adc
movs
imul
mov
lds
jb
fist
loop
arpl
call
stc
lea
inc
cmc
xchg
popf
repz
push
fsubr
lock
mov
gs
in
jo
(bad)
xchg
gs
jns
shr
fild
jl
adc
lds
pop
sbb
mov
jno
or
fcom
pop
cmp
push
into
xchg
mov
inc
cli
mov
lock
cmp
pop
iret
xchg
xchg
lds
pop
adc
push
jecxz
fnstsw
or
add
(bad)
dec
and
push
retf
mov
xor
(bad)
ja
or
mov
mov
add
retf
push
sub
jne
cmp
mov
jmp
fdivr
mov
inc
fstp
mov
pop
or
mov
pop
leave
mov
sbb
dec
xor
inc
push
clc
stos
(bad)
stc
and
int3
push
adc
out
jo
adc
mov
xor
lods
shr
into
lea
movs
inc
pop
shl
into
pop
daa
stc
cwde
pushf
icebp
aaa
jg
dec
xor
cli
mov
add
push
and
add
iret
mov
je
ds
xchg
xchg
ret
das
xor
inc
mov
sub
push
mov
or
cmps
bound
stc
add
cdq
rol
test
retf
fnstenv
jo
test
rol
mov
cmp
retf
clc
mov
sub
and
imul
je
sti
mov
xor
mov
pop
retf
test
cmps
xlat
lahf
shl
dec
retf
mov
repz
outs
and
sbb
sar
into
movs
xchg
lock
ds
scas
fidiv
jle
in
cmp
imul
inc
xor
mov
into
aaa
jle
icebp
add
cmps
dec
sub
push
xor
shr
dec
iret
mov
mov
add
mov
and
out
push
mov
jle
rcr
(bad)
scas
fstp
jmp
in
push
xor
push
adc
scas
iret
pop
xor
call
shl
inc
xchg
ins
pop
loope
nop
hlt
and
mov
pop
out
dec
and
das
ins
mov
pop
adc
inc
and
sahf
jl
lds
mov
push
push
out
hlt
js
cmps
mov
adc
(bad)
and
add
pusha
add
mov
shr
xchg
fiadd
push
jmp
fwait
clc
xor
div
jae
std
add
(bad)
push
inc
and
dec
movs
not
sbb
test
mov
xchg
in
xor
fwait
bound
clc
mov
pop
dec
scas
int3
push
xor
xor
mov
ds
fnstenv
(bad)
ficom
loop
inc
cmp
mov
lock
cdq
not
popf
xchg
std
aaa
je
sar
adc
adc
fidivr
fsub
fld
fst
adc
stos
leave
pop
xor
cdq
push
fstp
jmp
addr16
mov
and
inc
cmps
out
xor
lods
xchg
imul
jno
clc
pop
sub
mov
cwde
cld
sub
mov
push
fnstcw
push
add
jno
rol
dec
rcl
ficomp
loopne
pusha
or
cdq
inc
sbb
test
dec
xor
mov
or
or
popa
sub
or
push
mov
push
out
ins
sub
sub
into
and
(bad)
inc
mov
xor
out
mov
mov
scas
int3
pop
aas
pop
jge
aam
dec
lds
mov
jmp
adc
push
aam
mov
mov
dec
and
xor
jge
cwde
pushf
out
push
(bad)
mov
aad
jg
inc
or
daa
in
ins
aas
repz
lods
iret
and
cli
add
sbb
sahf
fstp
(bad)
sti
and
rol
popf
inc
and
mov
fdiv
jge
push
pop
lods
jmp
jp
adc
sahf
fs
sahf
xchg
hlt
add
jmp
repnz
xchg
shl
mov
call
rcl
movs
js
loope
cwde
repnz
ds
inc
cmps
repz
scas
sahf
xlat
mov
jl
movd
shl
dec
mov
sub
repnz
and
lods
ins
push
out
mov
push
xor
cdq
clc
jbe
scas
xchg
stc
sub
mov
sbb
lds
fnstsw
mov
pushf
movs
mov
add
cmps
jg
ret
cmps
xchg
iret
daa
je
mov
fistp
mov
and
in
or
hlt
xchg
mov
in
pusha
add
xor
stos
jg
sbb
aam
add
fwait
pmaddwd
fisubr
nop
xlat
pop
jae
xor
jl
test
movs
enter
mov
pop
sbb
mov
xor
jbe
lds
and
call
mov
out
push
mov
scas
out
ja
jmp
push
fdiv
stos
shl
pop
ret
nop
mov
lods
jmp
sub
jae
aam
dec
shl
add
inc
rcr
push
call
mov
push
xor
xchg
mov
cmps
mov
cmp
in
cmp
pop
(bad)
mov
outs
or
repnz
xchg
jb
xor
sbb
dec
mov
push
xor
stos
jae
xor
in
mov
cmp
lock
inc
rol
xchg
jmp
jge
mov
pop
cmp
ja
and
push
cmp
out
jne
out
imul
mov
popf
mov
push
leave
xchg
mov
jle
adc
or
ret
loopne
push
aas
dec
retf
cmps
xchg
stc
jg
sbb
xchg
and
das
push
mov
in
adc
imul
fidiv
and
sbb
mov
xor
stc
and
add
adc
mov
inc
mov
mov
push
inc
(bad)
xchg
xchg
fisub
push
xchg
ds
ret
mov
(bad)
pop
and
mov
stos
les
shl
push
adc
cmps
push
fidiv
push
leave
stos
pusha
sub
mov
(bad)
mov
std
xchg
and
shl
fistp
dec
cs
addr16
nop
mov
mov
das
ins
std
mov
dec
mov
lahf
pusha
sub
mov
imul
cmps
retf
in
scas
shl
jns
or
inc
and
pop
and
xlat
mov
xor
jbe
fsubr
imul
fst
inc
test
(bad)
out
ds
push
add
push
ins
push
es
and
stos
enter
popa
test
cmp
adc
sbb
dec
or
aaa
enter
lock
sahf
(bad)
pop
and
pushf
push
xor
or
sbb
add
movs
sar
neg
sar
sub
pop
or
mov
jno
cmp
test
add
(bad)
mov
or
fnstsw
dec
xchg
pop
and
mov
add
fisub
push
mov
mov
add
inc
adc
mov
sbb
daa
pop
fdivr
popa
sbb
jge
(bad)
or
fisubr
add
push
fs
sub
jbe
into
cs
rcl
mov
push
add
cdq
mov
pop
inc
add
imul
ins
push
imul
xchg
mov
scas
aad
rol
daa
inc
lods
ret
out
lahf
je
adc
cmc
jo
xor
mov
sbb
out
cmps
jl
add
inc
punpckldq
mov
xor
test
(bad)
mov
(bad)
fst
int3
test
add
add
popf
not
es
jmp
mov
pop
in
mov
inc
sub
mov
repnz
inc
sbb
cmps
test
pop
pop
out
jae
in
mov
adc
and
fs
xor
ret
cmp
aam
rol
cli
mov
adc
cmp
xchg
popa
sbb
mov
mov
shl
daa
pusha
stos
into
mov
hlt
xor
mov
scas
out
jnp
lods
fwait
clc
sub
icebp
dec
or
stos
(bad)
push
pop
loope
sahf
cmc
and
or
mov
retf
pop
daa
icebp
mov
add
xchg
in
pop
mov
ja
jmp
add
cwde
cdq
int3
sub
mov
sub
mov
jae
loop
mov
pop
xor
jle
div
and
mov
xchg
repz
aas
cli
xchg
cwde
sti
ds
stos
(bad)
and
xchg
sahf
fsubr
pusha
mov
outs
and
xchg
cmp
(bad)
mov
sub
les
dec
xchg
or
add
push
mov
xchg
dec
int3
daa
dec
aad
addr16
in
scas
int
inc
mov
add
mov
fist
push
les
cmps
jno
jmp
mov
and
shl
cmp
jmp
outs
test
and
movs
lahf
cld
cs
test
add
xchg
push
add
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
inc
daa
inc
sub
ins
adc
adc
ins
ss
je
push
pop
jo
inc
cmp
ds
xchg
jle
shl
sub
mov
nop
cmps
push
aaa
retf
pop
xchg
rcl
or
pushf
pop
fcom
pop
pushf
bound
jnp
lds
mov
(bad)
pop
pop
cmp
pop
(bad)
dec
or
mov
sub
stc
out
and
mov
ficom
pop
test
imul
push
cmc
ss
xchg
test
lahf
je
mov
or
xchg
test
mov
mov
movs
push
mov
aas
loope
iret
and
xchg
lock
xchg
mov
stos
ja
fucomp
cmp
mov
lods
dec
mov
fcomip
inc
sub
scas
dec
mov
cmp
das
adc
rol
adc
dec
jne
mov
cwde
dec
ss
enter
mov
pusha
es
movs
ja
push
mov
inc
sbb
adc
inc
mov
test
fistp
pop
cmc
outs
fwait
int
stc
mul
retf
xor
daa
scas
into
addr16
sbb
inc
pusha
or
cmp
(bad)
sub
aas
inc
les
das
(bad)
scas
rcl
shl
xchg
clc
ss
cmps
in
pop
mov
push
sbb
push
jp
or
(bad)
mov
repnz
push
pop
jmp
arpl
pop
jecxz
push
sbb
aam
leave
mov
mov
(bad)
mov
cmp
(bad)
movs
fdiv
fsub
int
call
mov
test
mov
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
cwde
fdivr
retf
(bad)
neg
lock
xchg
jbe
or
mov
(bad)
loop
pop
mov
ret
daa
pop
mov
inc
mov
cli
add
(bad)
mov
jmp
dec
and
jl
in
add
out
inc
mov
xchg
fdiv
or
mov
cmps
sbb
mov
lahf
outs
xor
or
aad
imul
js
enter
stos
push
js
enter
adc
movs
fisubr
jmp
pop
mov
rol
loop
test
enter
pop
add
fs
xchg
hlt
(bad)
mov
jbe
nop
shr
mov
ja
stc
mov
stos
ficomp
sbb
jge
push
push
dec
and
add
inc
or
and
jmp
shl
rcl
mov
cmp
outs
jb
or
ja
or
jne
push
xor
leave
mov
in
pusha
imul
or
and
call
aam
mov
dec
xor
sub
fwait
retf
dec
out
adc
add
enter
mov
je
pop
jmp
movs
mov
pandn
out
outs
sub
xor
push
stc
jnp
push
pop
push
cmp
fidivr
lock
icebp
sahf
stc
xchg
sti
mov
xchg
in
in
std
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
hlt
mov
int3
scas
(bad)
mov
mov
mov
xchg
lock
cmp
outs
scas
retf
fld
(bad)
mov
shl
cmp
int
inc
sbb
mov
imul
popa
cmps
lods
pop
add
cmp
rcl
xchg
scas
pop
push
stc
jns
cld
cmp
rol
movs
mov
popf
clc
add
enter
movs
ins
hlt
pop
jl
mov
call
outs
mov
xchg
pusha
push
out
pop
or
push
cmps
(bad)
(bad)
jmp
test
xchg
out
mov
xchg
data16
mov
push
in
xchg
imul
rol
pop
push
lock
xor
sub
ins
adc
pop
ds
test
or
pop
cmp
dec
pop
dec
mov
les
(bad)
xor
and
out
or
push
ja
sbb
lods
out
pop
xchg
mov
jmp
call
and
jnp
fwait
das
inc
ret
adc
pop
mov
dec
out
div
repz
call
bound
cmp
xlat
cdq
add
data16
test
pop
and
repnz
loope
xchg
pop
mov
popf
mov
dec
sub
cmps
enter
add
pop
jb
or
and
jmp
pop
mul
add
jge
pop
es
daa
addr16
add
adc
ins
and
pop
xor
aaa
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loopne
jmp
mov
clc
mov
dec
cmp
and
ja
(bad)
sub
inc
or
push
mov
mov
out
inc
mov
out
test
and
xchg
in
push
clc
lea
popf
dec
adc
push
call
push
sub
push
mov
and
(bad)
mov
jo
sub
mov
out
mov
test
sbb
xchg
jb
xor
ins
xchg
es
(bad)
mov
mov
push
jne
mov
cs
xchg
test
fnstenv
add
xor
in
pop
aas
inc
leave
cmp
ss
mov
mov
cwde
call
ja
jp
pop
lds
push
aad
imul
cmp
les
outs
push
loope
inc
daa
or
nop
ret
movs
call
inc
rcr
cmp
adc
test
dec
mov
sbb
loop
xor
adc
sbb
mov
dec
pop
(bad)
cdq
mov
cmp
mov
push
call
popf
add
or
fwait
jmp
imul
push
push
push
add
out
mov
jmp
fbstp
out
test
inc
ja
push
es
popf
mov
cmp
or
test
cmp
push
ins
daa
xor
dec
sbb
lea
in
loopne
lock
cwde
(bad)
mov
fisttp
(bad)
mov
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
jg
push
pop
jp
pop
pop
sub
inc
sub
inc
xor
ficomp
(bad)
sub
test
cmovno
and
ja
in
ds
stos
popf
or
jae
in
add
xlat
xchg
push
jmp
repz
fcomp
pop
inc
xlat
push
test
adc
les
fimul
in
shl
inc
lock
xchg
shl
add
in
ins
loopne
dec
sbb
dec
mov
ins
pop
rcr
sar
hlt
mov
add
daa
imul
mov
ret
dec
pop
push
test
or
sub
out
fs
into
mov
imul
push
call
jnp
fdivr
inc
lods
retf
mov
mov
gs
mov
inc
cmp
shl
clc
or
bound
stos
push
inc
pop
dec
retf
sbb
push
jg
adc
iret
mov
stos
xor
outs
push
xor
(bad)
rcl
adc
lea
inc
xchg
inc
out
jl
dec
mov
cdq
xchg
sub
ja
aaa
xor
aad
stos
fistp
push
in
xchg
icebp
inc
out
mov
mov
ja
pop
(bad)
cmc
adc
fstp
in
jnp
ds
in
xor
pop
sbb
popf
sti
mov
les
repz
call
xchg
lock
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
rcr
cmps
(bad)
mov
icebp
xchg
push
lahf
lock
je
add
xchg
into
xchg
push
pop
xchg
lods
push
aaa
out
sahf
jne
leave
outs
and
adc
movs
inc
icebp
sbb
add
je
rol
cmp
cmp
push
xor
xor
retf
mov
popf
into
ss
nop
repnz
and
test
les
push
mov
push
jecxz
and
cmp
or
outs
nop
mov
mov
push
cmc
call
add
js
lds
and
xchg
(bad)
sub
(bad)
in
dec
mov
mov
pop
movs
fcom
inc
(bad)
fwait
ret
dec
cmp
sar
loop
mov
fild
xchg
dec
das
ins
fimul
pop
push
sbb
rcl
adc
mov
xor
jmp
push
pop
(bad)
cmp
and
adc
sbb
lods
into
das
rcl
popa
cdq
aad
in
lods
mov
push
pop
iret
inc
and
pop
bound
cmp
cli
out
mov
test
mov
inc
mov
dec
ret
in
mov
push
cwde
jmp
(bad)
out
test
jae
out
push
shl
mov
pop
pop
sub
movs
fild
or
jl
or
push
push
jno
int3
push
sbb
mov
jmp
push
(bad)
retf
mov
call
rol
lock
out
mov
xor
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
ds
sub
inc
xor
push
cs
data16
aas
push
das
retf
icebp
sub
hlt
xchg
outs
retf
es
xchg
mov
and
inc
cmps
in
sub
cmps
dec
aad
jne
ficomp
push
mov
dec
xor
jbe
sti
or
shr
mov
fimul
cmps
mov
pop
repnz
mov
aas
add
or
cmps
mov
mov
mov
shl
jmp
and
and
movs
outs
xor
push
fyl2x
push
int3
mov
fidivr
push
scas
jbe
arpl
push
sub
int3
cmp
(bad)
ficom
shl
sbb
adc
xchg
cli
xor
pusha
sbb
loope
enter
test
mov
mov
enter
test
test
or
stos
loop
mov
cli
fwait
inc
sub
jb
fidivr
add
mov
inc
ficomp
sbb
popa
sbb
fnsave
shl
ds
ins
sar
hlt
inc
pop
mov
jle
popa
pusha
or
sub
sahf
sahf
mov
popf
shr
xor
hlt
dec
push
fnstsw
fbstp
xor
add
fldcw
adc
cmp
mov
mov
pop
neg
inc
les
sub
(bad)
sti
leave
lods
call
xchg
push
ds
push
or
inc
aaa
popf
shl
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
repz
xlat
cdq
push
ret
(bad)
loop
repz
call
arpl
(bad)
jnp
(bad)
in
js
sub
gs
std
add
retf
mov
ds
inc
test
pop
repnz
push
mov
jg
fidiv
loope
dec
test
mov
cmp
sbb
ss
or
cwde
push
mov
sbb
fldcw
mov
push
adc
inc
xchg
shl
xchg
in
or
loopne
inc
stc
sbb
scas
push
cmp
outs
lods
aam
or
cmc
mov
mov
push
sbb
mov
xchg
popf
dec
sbb
dec
add
cmp
fs
jge
jae
mov
lods
test
and
aaa
dec
cmp
sti
cwde
sbb
dec
fbstp
sbb
add
dec
or
xor
in
jae
adc
movs
out
sub
loopne
in
out
xor
(bad)
jo
xchg
test
jbe
cmovb
and
aas
fidivr
aas
push
mov
sahf
scas
sub
ins
cdq
sar
rol
push
or
mov
fild
or
adc
cmps
test
jle
or
mov
sahf
lea
jae
add
xchg
jge
lock
mov
dec
sbb
and
inc
or
sbb
sar
es
test
movs
jmp
cli
xchg
xlat
cwde
stc
mov
enter
test
mov
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
sub
stc
lahf
fild
out
fdivr
push
es
stos
jp
sbb
test
sar
fimul
cmp
mov
xchg
lods
push
xor
cmp
loop
inc
add
mov
(bad)
shr
fbld
ds
(bad)
enter
lods
jb
sbb
xchg
and
out
mov
xor
and
ja
fisubr
xor
mov
add
sub
mov
aaa
jl
adc
test
out
aaa
in
int
int3
mov
or
aam
push
push
mov
hlt
mov
sahf
sbb
jg
outs
adc
jae
shr
push
fsub
cs
pop
out
jbe
mov
and
mov
fist
clc
sub
bound
out
es
push
shr
mov
dec
das
gs
xchg
and
jle
add
adc
outs
lock
pop
and
push
adc
jmp
scas
mov
dec
retf
out
cmp
fbld
add
jmp
(bad)
sub
shr
push
adc
pop
loope
mov
imul
mov
inc
in
or
ja
cmp
call
sub
jnp
push
pop
push
into
scas
pop
mov
fdiv
xlat
or
std
sahf
fisttp
fdivr
sahf
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
mov
(bad)
mov
xchg
jmp
in
ret
adc
leave
call
push
push
mov
mov
mov
cmps
pusha
repz
mov
pushf
fcmovb
aaa
movs
sar
mov
cdq
in
add
loop
stc
movs
icebp
test
mov
not
xchg
idiv
mov
(bad)
adc
fldcw
test
pop
xor
mov
test
mov
sbb
add
ror
sar
xchg
gs
je
bndldx
inc
scas
imul
rcr
inc
shl
push
(bad)
and
dec
sub
or
jp
inc
xor
inc
sbb
dec
xor
inc
sub
ror
int
jnp
jg
adc
mov
sbb
push
(bad)
bound
jecxz
push
ins
shr
push
cmp
pop
aaa
inc
mov
sub
das
pop
enter
jecxz
add
imul
xchg
mov
cmp
in
mov
mov
mov
xchg
mov
xchg
dec
ficomp
dec
xor
das
dec
xor
dec
jle
fs
and
xchg
push
inc
ja
push
xor
mov
loopne
push
aad
mov
jno
xor
shl
cmp
ret
push
shr
mov
pop
jbe
add
and
push
xor
push
sbb
arpl
dec
sub
fs
outs
push
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
sbb
add
jmp
xchg
sbb
aaa
ja
xchg
dec
add
dec
mov
es
call
dec
sub
sahf
imul
popa
mov
dec
sbb
xchg
or
sub
jge
cmp
jns
xchg
test
mov
push
sahf
add
add
pop
dec
cdq
cmp
sub
inc
mov
mov
mov
js
fisubr
cmp
enter
out
lods
das
shl
retf
pop
stc
adc
in
pop
add
and
push
fstp
push
mov
add
mov
loop
and
mov
pop
sub
xor
or
jne
mov
ins
push
jbe
fldenv
(bad)
inc
sub
and
lock
xor
cli
mov
pop
mov
fst
xor
mov
pop
ficom
sub
sub
add
fs
mov
cmc
push
test
ficom
sti
push
ja
and
iret
mov
add
dec
sub
xor
xchg
sbb
mov
loopne
sti
test
lea
push
repz
pop
pushf
out
sub
sub
xor
mov
ficomp
sub
call
xchg
fisttp
shl
loope
(bad)
stos
lds
out
out
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
sar
mov
mov
repz
fild
stc
jo
(bad)
add
sbb
mov
ins
out
jl
mov
mov
cmps
setnp
sbb
mov
push
stos
gs
sbb
sbb
add
xchg
push
add
fwait
mov
daa
push
call
imul
data16
sub
sbb
sbb
dec
inc
and
in
out
and
add
jb
and
push
and
sbb
lds
jae
(bad)
sbb
push
cmps
jne
push
mov
int
stos
js
addr16
xor
lea
mov
mov
add
inc
sub
dec
iret
add
repnz
mov
mov
dec
ret
sbb
lods
test
jp
xor
mov
jle
loop
push
out
inc
sbb
fisttp
fst
retf
xchg
mov
adc
fxch
ja
adc
lods
loope
rcr
jno
jmp
dec
sbb
sbb
int3
dec
and
mov
arpl
js
mov
add
jmp
int
mov
outs
shr
add
add
sti
rcr
iret
dec
jne
cmp
stos
xchg
add
inc
sar
(bad)
icebp
cdq
mov
das
or
adc
pop
cmps
sub
iret
jmp
push
mov
push
mov
mov
inc
xchg
imul
cmp
jmp
push
mov
in
cs
mov
arpl
dec
movs
scas
lds
lods
sub
inc
inc
pushf
nop
sub
jb
mov
xor
dec
jne
add
adc
inc
jl
call
and
jne
outs
cli
jmp
loope
and
cmps
inc
pop
mov
jb
aad
aaa
inc
push
inc
jbe
cmps
pop
stos
mov
loop
jle
stos
ss
js
mov
xor
cmps
jmp
dec
hlt
ret
movs
fild
clc
xchg
out
xchg
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
mov
scas
cld
xchg
xchg
mov
sub
dec
and
imul
outs
add
xlat
cmp
pop
out
lock
xchg
cwde
fsubp
inc
or
add
movs
ja
cmp
iret
push
ds
fisttp
add
stos
jo
mov
ret
or
push
loope
xor
cmp
stos
xchg
cmp
ins
test
xor
jecxz
or
and
(bad)
fild
jae
inc
xchg
stos
jnp
push
in
retf
dec
adc
dec
adc
inc
sbb
loope
es
jle
out
inc
imul
inc
or
dec
jmp
into
daa
sub
js
icebp
jge
rol
mov
push
in
push
cmps
and
ins
or
cdq
imul
and
sbb
(bad)
mov
shl
shl
lds
test
jb
jle
lods
mov
test
lea
fistp
aam
lods
jnp
je
arpl
pop
mov
jmp
les
mov
ret
call
adc
jb
pusha
xchg
dec
movs
pushf
dec
ficomp
movs
inc
call
cmp
mov
es
jne
adc
cli
pop
mov
jnp
int3
ins
mov
mov
imul
dec
(bad)
or
into
popa
shr
sub
pop
fdiv
and
push
push
in
or
aaa
xchg
and
(bad)
pop
idiv
sub
pusha
or
into
jne
add
jmp
jo
add
push
aaa
lods
iret
jno
rcl
and
repnz
jne
jmp
cli
mov
mov
pop
mov
pushf
arpl
dec
jno
and
xchg
and
push
push
push
or
jmp
pushaw
or
out
pop
sbb
adc
stos
jle
scas
push
pop
ficom
aam
cmp
loopne
jns
push
and
cmp
in
inc
(bad)
hlt
pushf
popf
or
jecxz
mov
cmovg
ror
jecxz
repnz
sbb
add
xchg
and
xchg
daa
sbb
(bad)
dec
repz
xchg
xor
lea
std
ins
js
retf
sbb
xchg
pop
cmps
mov
ret
xchg
call
xchg
pushf
rol
sbb
cmp
jno
cdq
int3
(bad)
xor
(bad)
popa
mov
sti
aaa
jnp
lea
fnstenv
mov
lock
test
cmp
pop
xor
cmp
inc
inc
mov
mov
and
sub
test
and
outs
in
or
mov
cmp
rcl
sub
mov
clc
cs
xchg
aam
pop
add
push
call
dec
aas
imul
or
dec
sub
pop
push
jp
push
cmp
sbb
dec
sbb
bound
dec
xor
pop
ds
ja
jno
adc
inc
and
addr16
jns
ja
cs
mov
ins
xchg
pusha
test
xor
jne
retf
xchg
sub
das
(bad)
pop
pop
aam
fist
or
cmps
ja
add
add
pop
sbb
xor
fst
push
or
in
push
add
and
jo
scas
adc
cmp
ret
cmc
adc
add
push
mov
addr16
shl
movs
jnp
add
and
imul
fistp
cmc
sub
fisubr
xor
xor
and
mov
loopne
bswap
es
mov
out
pop
loope
adc
xchg
xlat
pop
pop
add
pop
idiv
xor
jl
sahf
adc
xor
sbb
inc
hlt
or
sub
add
push
adc
icebp
cdq
lea
adc
out
outs
mov
mov
stos
jne
inc
(bad)
je
sub
es
fsub
enter
mov
bound
sti
xchg
inc
ja
sub
mov
aad
mov
(bad)
jmp
mov
jl
xchg
add
lea
push
test
jp
mov
jo
push
xchg
fsubr
mov
inc
jmp
icebp
add
cs
jmp
xor
xor
mov
xchg
cdq
jns
xor
sub
sub
push
mov
jmp
js
idiv
lock
xchg
repz
aad
inc
out
cmc
jns
out
cmps
pop
shl
xchg
inc
inc
shl
ficom
xchg
push
icebp
add
int
dec
sahf
loop
retf
mov
imul
dec
jle
outs
push
bound
adc
push
faddp
xor
movs
rcl
ret
or
cmc
mov
jge
and
cmps
dec
mov
xor
xchg
movs
cmps
aaa
push
repnz
lds
fcom
xchg
xor
cmp
test
hlt
mov
leave
daa
lods
jo
enter
mov
retf
xor
cwde
jne
repz
fwait
sub
mov
fcom
xor
sub
shl
mov
loope
push
icebp
(bad)
jecxz
xor
sub
das
je
pop
xchg
xchg
mov
xchg
dec
das
mov
mov
cmps
xchg
mov
cli
sbb
mov
lods
adc
popa
xor
jg
jle
ss
inc
mov
ficomp
out
bound
mov
aas
cmps
jnp
repz
popa
aam
and
jno
rol
in
xchg
das
sbb
jns
ror
adc
push
inc
movs
loopne
ret
test
mov
fnsave
out
mov
fidivr
mov
(bad)
loop
fidiv
les
jmp
sbb
push
jbe
bound
dec
and
addr16
jae
into
add
xor
xor
xchg
pushf
mov
lahf
mov
rcr
sahf
mov
nop
xchg
ds
popa
or
push
cld
mul
aaa
movs
cdq
mov
jg
(bad)
loope
aaa
test
es
jo
jge
stos
pop
inc
xchg
inc
mov
jb
mov
mov
fst
in
mov
mov
frstor
jmp
cmp
fisttp
dec
mov
test
dec
je
cdq
jns
mov
mov
inc
cli
jge
sti
jl
mov
sahf
outs
jmp
cmp
jo
mov
mov
sub
dec
fs
cwde
iret
fcomi
xor
push
jmp
outs
cmps
data16
rol
mov
jne
dec
or
push
pop
mov
push
loopne
xchg
push
(bad)
sub
sbb
mov
cdq
cmp
sbb
lahf
and
add
push
mov
push
ret
push
jge
lods
jo
cld
cmp
push
rcl
pop
jle
mov
mov
xlat
add
mov
not
cmc
js
or
rcr
out
mov
dec
fld
pusha
loop
cmps
fnstsw
scas
push
inc
jne
fs
loope
pusha
pop
pcmpgtb
jp
push
add
rcr
in
push
inc
rdpmc
pusha
repnz
and
or
sub
mov
push
popa
xchg
push
cdq
iret
adc
rcr
lods
cs
mov
repnz
dec
pop
fist
xchg
je
icebp
out
adc
ins
pop
rcr
mov
ja
inc
xor
and
adc
fs
daa
in
adc
xor
scas
sub
adc
fsubr
pop
inc
sbb
lahf
push
(bad)
retf
sbb
movs
adc
jmp
xor
adc
xchg
fbld
mov
sbb
(bad)
inc
jo
dec
popa
cmp
ds
xor
or
mov
mov
and
pop
push
fisttp
sar
lods
mov
jnp
xchg
ja
add
jmp
test
into
sub
out
out
or
mov
into
cmp
jge
mov
lds
in
cmp
cmp
cmc
adc
ffreep
adc
push
mov
cdq
dec
and
cmps
cmc
enter
shl
dec
push
mov
xor
imul
scas
xchg
fst
in
bound
xor
xor
xchg
sbb
mov
mov
(bad)
fstp
aas
sub
dec
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
imul
sbb
dec
sub
cmp
imul
clc
xchg
sbb
xor
imul
mov
mov
push
imul
pop
enter
imul
pop
movs
mov
pop
jmp
and
movs
jb
int
loop
jge
sbb
call
xchg
retf
repnz
push
int
std
jecxz
ret
adc
push
out
lds
ret
mov
adc
pop
cwde
pushf
mov
ret
jl
push
sub
cmp
cdq
cmps
jg
fwait
xor
mov
jecxz
push
rcl
inc
ins
rcl
mov
pop
(bad)
jl
lods
test
cmp
fmul
test
push
jg
jns
dec
inc
sti
xor
and
push
test
adc
jmp
dec
retf
or
adc
xchg
mov
mov
xor
pushf
mov
aam
mov
push
mov
mov
iret
jg
iret
or
dec
ror
fdiv
adc
nop
jne
outs
ret
adc
push
in
push
mov
pop
int3
add
adc
push
pop
lds
push
hlt
pop
fistp
fs
and
je
inc
in
dec
movs
scas
mov
or
data16
and
and
sub
ret
and
or
in
pop
movs
mov
push
lock
aad
test
jg
daa
cmp
or
cmp
loope
inc
repnz
ins
icebp
push
inc
jmp
push
stc
and
sti
lods
sbb
dec
sub
add
iret
mov
xor
mov
fwait
adc
sub
xchg
sub
pop
pop
aam
imul
push
dec
mov
jno
pmaddwd
call
movs
mov
or
stos
jp
xor
pop
push
sub
mov
popf
xlat
inc
push
retf
je
or
or
sub
loope
pop
in
jae
or
nop
push
push
cdq
lds
dec
cmp
(bad)
out
and
push
mov
mov
loopne
push
hlt
ins
pusha
mov
add
push
jno
(bad)
add
dec
or
xchg
mov
les
xchg
inc
shl
pop
hlt
scas
cmp
sbb
add
frstor
xor
pop
mov
mov
cmp
sbb
stc
into
xor
cmp
pop
push
mov
cld
jne
mov
fistp
cmp
pushf
mov
shl
and
sub
movs
mov
mov
jmp
push
push
mov
or
push
mov
leave
xor
xchg
stos
inc
(bad)
sahf
pop
movs
ins
or
push
xor
xor
bound
jo
jns
push
adc
imul
inc
es
sub
sbb
outs
cmp
add
sbb
ss
jae
dec
add
jno
jnp
pop
cmp
data16
pop
imul
movzx
push
mov
push
test
push
fwait
sub
push
xchg
xchg
cmp
xchg
sahf
mov
pop
in
or
mov
mov
mov
jne
mov
repz
scas
dec
mov
test
fisttp
cmp
cli
jg
add
add
jg
aas
add
in
and
xor
jno
fidivr
rcl
rcl
fisttp
int3
jle
in
adc
xchg
dec
int
cmp
pop
js
mov
repz
mov
test
mov
ins
shr
(bad)
pop
or
and
jae
mov
in
aas
sbb
sbb
xchg
mov
loope
mov
out
std
jge
jg
ins
mov
pusha
mov
dec
xchg
mov
idiv
add
aas
sbb
jmp
jbe
sub
movs
add
xor
jae
dec
iret
push
stos
fdiv
cmps
mov
mov
fstp
addr16
xor
rol
rcl
add
enter
(bad)
unpcklps
add
cmp
pop
out
and
mov
jl
push
or
(bad)
jge
pop
cmc
and
xchg
and
jle
xor
push
in
nop
imul
jmp
dec
or
pop
iret
jo
mov
xor
stc
xchg
mov
movs
test
mov
or
pop
les
mov
jmp
cmc
cs
(bad)
inc
xchg
test
sahf
mov
mov
or
fldenv
push
jp
jbe
add
lods
cmp
outs
xor
ret
mov
pop
sub
mov
pop
cmps
mov
xor
pop
jge
dec
pop
adc
fnstsw
sbb
push
and
call
or
popa
in
jae
lds
or
jno
dec
pop
jmp
inc
push
xor
push
and
mov
div
gs
add
pushf
xor
pop
cmps
movs
add
dec
je
shr
cmp
fistp
fnsave
mov
cmps
je
ror
push
mov
push
movs
adc
dec
cmps
fild
push
arpl
je
mov
mov
cmp
mov
sub
(bad)
push
icebp
xor
push
mov
ds
je
push
cmp
xchg
fs
enter
inc
repz
daa
xor
mov
loope
cwde
inc
or
add
push
adc
ss
pop
mov
(bad)
lds
sti
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
clc
mov
stos
retf
mov
lock
imul
cmp
jo
ins
pop
or
jge
bound
scas
daa
hlt
inc
mov
inc
xchg
xchg
stos
inc
jmp
fwait
mov
mov
push
outs
popf
jo
pop
or
int
and
jmp
pop
xchg
outs
jecxz
jmp
ins
leave
ins
lahf
mov
out
pop
push
imul
cmp
fs
cmp
pop
lahf
arpl
ds
push
test
rcr
fdiv
in
(bad)
cmp
fwait
xchg
cmc
push
clc
inc
xchg
xchg
ficomp
or
scas
popf
test
js
ja
ret
adc
cmp
stc
es
mov
jno
xchg
(bad)
(bad)
mov
mov
add
inc
in
cmp
enter
cmp
xor
ins
sbb
mov
xchg
ins
repnz
test
mov
cmp
push
out
fild
adc
div
es
fidiv
sub
in
js
pop
lds
(bad)
dec
mov
adc
jge
push
sbb
repnz
fsubr
xor
test
xor
int
out
out
jns
std
jns
sar
(bad)
jbe
aad
(bad)
into
je
fstp
mov
call
jbe
js
dec
or
into
mov
ja
inc
out
inc
lods
stos
mov
fisubr
inc
pop
test
xor
shl
das
sbb
pop
jge
add
mov
and
xchg
push
sub
sub
or
xor
sub
jmp
jbe
out
mov
jbe
std
inc
fmulp
jo
lds
xlat
gs
mov
aaa
stos
mov
add
jl
push
or
in
call
push
inc
sbb
stc
dec
sar
ins
enter
out
nop
mov
add
or
pop
push
bnd
sbb
pop
sub
or
push
jmp
and
mov
ja
in
mov
dec
inc
mov
in
add
aad
and
inc
jns
scas
xor
xchg
add
mov
les
jp
lds
scas
jb
(bad)
(bad)
xlat
icebp
add
xchg
jge
aam
inc
lea
jecxz
add
add
pop
push
lea
lock
jnp
ret
jmp
das
push
xchg
dec
cmp
imul
cmp
sub
inc
jno
scas
xor
mov
out
cmp
push
ja
lods
add
mov
repz
das
xor
pop
jae
std
les
dec
xchg
fucomi
pop
sbb
jb
xchg
adc
jle
xchg
push
sbb
dec
xor
push
xor
mov
movs
sar
mov
cdq
loop
(bad)
mov
test
mov
rcl
retf
lods
jecxz
stc
mov
xchg
repnz
mov
into
mov
outs
mov
push
outs
int3
jo
mov
js
mov
add
mov
xchg
xchg
stos
inc
cld
fs
je
fidivr
pusha
mov
loop
xor
sti
and
fild
sbb
in
dec
std
loop
imul
cs
shl
add
jge
loopne
aaa
scas
jno
sbb
aaa
shl
repnz
fisttp
or
sub
add
pop
sbb
inc
adc
test
out
test
mov
std
hlt
xor
ret
sbb
mov
fild
in
mov
(bad)
sahf
test
cmps
ja
sahf
in
(bad)
inc
out
adc
cmc
data16
enter
sbb
ds
push
iret
cmp
mov
in
xor
fistp
data16
mov
add
xchg
mov
sbb
hlt
cmp
inc
xlat
xchg
mov
inc
cmps
int
mov
outs
mov
stos
mul
xchg
mov
fmul
stos
mov
jg
aam
mov
pop
xchg
mov
jle
lds
mov
mov
push
mov
jl
ficomp
iret
inc
test
push
pop
mov
mov
sahf
pop
push
mov
cmp
cmc
cmps
mov
push
push
cmc
scas
lods
xchg
or
xor
dec
jo
pop
pushf
movs
mov
push
out
mov
sahf
imul
mov
cwde
aaa
and
mov
ja
imul
(bad)
imul
in
pop
inc
jecxz
push
cli
and
loopne
mov
fcom
je
retf
inc
aam
pop
or
lods
test
movs
mov
inc
repz
xlat
jns
std
jle
sbb
mov
xchg
cmp
push
xchg
frstor
sbb
mov
adc
push
rcr
pop
imul
dec
cli
jnp
push
ret
mov
add
(bad)
pop
call
lea
fs
mov
gs
movs
test
push
push
cwde
inc
push
movs
jl
call
sar
cmp
jle
shl
push
cli
ror
dec
imul
push
cdq
inc
cld
out
push
cwde
inc
out
(bad)
sub
mov
cmp
pop
push
lods
add
jb
fdiv
inc
or
add
xlat
jl
cmp
or
jecxz
stos
jns
and
ins
in
aaa
sub
pop
jecxz
aam
fiadd
cs
sbb
cmp
adc
arpl
pop
cmc
(bad)
retf
mov
arpl
xlat
imul
mov
inc
(bad)
in
(bad)
mov
fld
jmp
pop
shr
push
xor
dec
out
movs
sbb
push
push
and
pop
cmps
push
movs
and
psubb
enter
sbb
out
xchg
ffree
iret
mov
xchg
or
loop
mov
add
inc
sub
in
sar
sahf
mov
scas
lods
sbb
fsub
icebp
data16
jnp
stos
mov
aaa
daa
cmp
pop
jmp
ins
xlat
(bad)
jle
push
and
nop
mov
jns
imul
adc
adc
mov
fistp
loope
xchg
pusha
aas
(bad)
or
fcomp
sbb
mov
push
push
xchg
gs
leave
out
jmp
cmp
pop
jecxz
sub
push
addr16
ins
es
inc
pop
and
popa
cs
dec
and
jne
mov
or
lods
push
jl
lods
adc
and
inc
xor
jp
pop
ja
dec
jb
xchg
int
lds
mov
out
xor
mov
mov
dec
inc
xchg
mov
xor
push
mov
ds
mov
mov
inc
pop
push
aas
inc
or
jns
push
adc
add
lds
icebp
mov
scas
jmp
sbb
dec
and
dec
sub
jae
bound
outs
das
inc
add
push
xor
adc
ins
mov
xchg
sub
dec
mov
push
xchg
xchg
or
jae
imul
inc
adc
jle
add
fnstcw
cmc
sub
and
xor
ret
mov
jb
xchg
mov
jle
nop
push
mov
ret
xor
inc
aas
mov
mov
int
jo
mov
or
(bad)
xor
adc
loopne
les
lock
in
in
das
fst
lock
loope
sub
jle
sbb
popa
mov
sub
xor
or
sub
mov
das
movs
mov
scas
dec
mov
mov
jge
mov
mov
jg
mov
dec
or
call
retf
push
cli
jnp
mov
cdq
aam
xchg
fdiv
(bad)
cdq
rcr
enter
jbe
test
mov
stos
out
push
mov
arpl
mov
mulps
ja
dec
daa
inc
xor
or
and
loop
xchg
push
xchg
sub
ja
cdq
sbb
mov
std
lods
lds
add
ret
dec
add
and
sub
fsubr
(bad)
pop
inc
lds
push
pop
dec
into
push
ucomiss
(bad)
leave
ds
shl
inc
repnz
jmp
fdiv
loope
mov
dec
jno
jl
add
mov
gs
clc
jae
jmp
and
out
xchg
mov
mov
fisttp
cli
xchg
movs
cmc
mov
movs
out
mov
dec
loopne
sahf
add
xchg
jb
sti
fnsave
retf
sti
(bad)
fdiv
sub
or
mov
int3
jnp
adc
and
bound
push
dec
imul
call
cwde
ror
sbb
call
mov
test
mov
call
mov
dec
aad
inc
(bad)
nop
lea
xor
(bad)
mov
mov
(bad)
cld
iret
xor
mov
jns
push
into
vpshaw
adc
retf
pop
pop
fadd
dec
ja
ror
js
(bad)
xchg
stos
add
pop
add
sahf
test
fxch
fdiv
leave
in
test
and
mov
shl
in
jmp
mov
mov
out
ret
int
loop
mov
enter
repz
sbb
and
mov
repnz
out
cli
cmp
(bad)
cmc
jb
aam
xor
call
in
pop
in
sub
mov
adc
dec
dec
imul
xchg
in
sbb
imul
add
push
cmp
pop
daa
imul
cmp
bound
add
shl
retf
pop
or
lods
mov
xor
ins
cli
adc
inc
fwait
xchg
aad
or
mov
mov
clc
add
jp
popf
mov
jmp
push
xor
xchg
push
ret
fsub
sbb
push
mov
jae
push
fs
mov
aad
lock
outs
xchg
outs
jle
mov
je
ja
sub
adc
mul
push
push
cwde
push
rol
pusha
inc
in
outs
movs
(bad)
jmp
ficom
or
je
adc
jecxz
icebp
mov
xchg
dec
cmps
ficomp
hlt
inc
xchg
adc
mov
fbstp
push
adc
mov
mov
xchg
retf
ficom
mov
clc
pushf
lahf
gs
add
inc
dec
push
push
push
adc
jnp
xchg
add
dec
mov
or
dec
pop
pop
and
inc
sbb
add
stc
retf
es
ror
sub
jns
dec
in
aam
out
xchg
aad
aad
or
xchg
mov
inc
shl
push
clc
and
xchg
mov
ins
out
mov
pop
fsubr
add
sub
sub
push
out
fs
mov
sbb
test
test
cmp
mov
pop
je
push
mov
jle
push
aad
lods
xchg
pop
(bad)
lahf
xchg
add
shl
dec
and
inc
cmp
inc
xchg
mov
mov
(bad)
(bad)
jne
jmp
jmp
ret
stos
stc
mov
mov
mov
scas
(bad)
lds
ins
mov
pusha
xor
xchg
jmp
push
aam
jae
mov
cmp
in
sub
sbb
cli
stc
nop
lods
or
adc
push
(bad)
cmc
jle
call
sbb
lea
fcomp
ret
mov
mov
test
pop
push
lods
lahf
xlat
retf
add
lods
imul
cmp
in
sub
in
or
mov
adc
cdq
lahf
es
and
aas
jnp
jl
xchg
inc
fld
inc
sti
fst
cld
nop
cli
scas
lds
loop
sbb
jp
jns
xchg
(bad)
sahf
hlt
mov
sub
lock
in
repnz
ins
dec
fild
fnstsw
rcr
mov
test
inc
xlat
jo
rcr
adc
push
add
add
addr16
cmp
mov
out
scas
in
mov
fidivr
(bad)
lahf
out
in
out
sahf
sar
sbb
inc
sub
inc
push
dec
das
pusha
cmp
xor
pop
pop
ss
push
jne
push
cmp
jl
fwait
popf
jns
jbe
enter
pop
sahf
sub
and
dec
cdq
arpl
das
dec
test
das
jmp
data16
sbb
sub
mov
add
mov
mov
xchg
mov
pop
stos
cmp
or
in
jae
sub
mov
xchg
push
data16
sub
cmp
dec
jp
call
inc
jg
out
aad
retf
mov
icebp
sub
mov
ret
add
and
jns
mov
mov
sub
mov
jns
mov
(bad)
cmp
js
dec
mov
fwait
push
and
movs
fstp
mov
daa
rcl
in
fld
xor
or
push
jecxz
into
cmp
clc
outs
sub
popf
shr
cwde
dec
in
and
arpl
dec
add
ret
mov
mov
push
sub
pushf
pop
stc
push
test
dec
ja
jne
add
cwde
adc
out
xor
push
ins
cli
xor
xor
jbe
xchg
aam
mov
push
mov
jo
cmps
mov
jecxz
movs
stos
lea
es
fsub
sub
xor
add
mov
dec
jmp
faddp
vpmacsswd
lahf
sbb
xor
cmps
pop
ds
adc
xchg
lods
call
out
imul
add
and
ds
push
push
xor
jge
in
mov
and
or
outs
pop
push
add
popw
jle
mov
(bad)
aam
ins
or
mov
xchg
and
add
push
js
dec
imul
arpl
jns
push
aad
cmps
add
ds
cld
daa
mov
mov
and
repz
ds
cmp
stc
inc
ret
in
xor
sbb
jns
loope
and
jle
shl
mov
in
pop
inc
ja
movs
pop
test
adc
popa
inc
mov
jbe
mov
and
cmp
xchg
jmp
mov
mov
xchg
push
jbe
jb
mov
mov
dec
sub
mov
cld
mov
frstor
sar
mov
(bad)
out
mov
aas
mov
fmul
inc
inc
mov
mov
add
xor
das
pop
js
ret
out
sbb
and
stos
jle
imul
pop
dec
mov
sbb
inc
imul
arpl
push
adc
gs
jg
pop
or
cmp
xor
je
pushf
(bad)
pushf
repnz
pop
pop
xor
push
xor
push
inc
daa
pushf
sti
mov
pop
stos
inc
mov
lock
cmp
push
in
adc
js
dec
xchg
mov
jo
fisttp
call
or
fsub
jle
lock
jmp
sti
loope
out
cmc
xchg
into
iret
mov
and
(bad)
clc
icebp
cld
sbb
cmp
lea
lods
sbb
and
sbb
mov
jbe
xchg
add
loop
cmps
xor
repz
stos
iret
hlt
fadd
and
pop
popf
arpl
les
inc
adc
push
push
xchg
mov
adc
or
ins
mov
mov
test
push
add
pusha
sbb
dec
push
cmps
push
test
xchg
(bad)
push
cmp
sti
(bad)
sar
sub
xor
pop
dec
cli
or
or
frstor
imul
es
jmp
xor
loop
stc
or
jae
imul
xchg
call
loope
out
adc
jmp
mov
test
(bad)
dec
jg
ds
inc
inc
cwde
and
call
out
(bad)
mov
loop
pop
das
in
mov
mov
mov
mov
and
push
fnstenv
cmp
inc
fmul
dec
cli
or
cmp
push
sub
cmp
ja
inc
fs
addr16
xor
mov
lds
stc
je
iret
mov
mov
mov
ins
inc
unpckhps
(bad)
movs
stos
call
inc
fiadd
mov
mov
je
frstor
test
jo
bound
push
and
mov
imul
ds
lahf
cmp
(bad)
mov
mov
test
jl
popf
(bad)
sahf
xchg
xchg
cmp
xchg
add
das
xchg
mov
adc
addr16
jg
push
(bad)
scas
movs
mov
jmp
mov
and
test
jmp
pushf
jle
(bad)
ins
push
lea
jns
scas
adc
ins
dec
(bad)
cmp
xchg
xor
fs
ror
or
add
sub
mov
cmc
mov
scas
ret
mov
pop
xchg
(bad)
or
sbb
ss
jns
xchg
(bad)
lods
sbb
xchg
aas
outs
or
outs
pop
cmp
fwait
lock
sub
out
mov
outs
push
jl
mov
out
dec
fld
xchg
aad
or
rol
lods
enter
ins
fist
ret
xchg
cmp
push
fnstsw
mov
mov
dec
mov
jne
dec
adc
push
and
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
and
push
pop
inc
and
cmp
jne
popf
stc
xchg
test
out
clc
fld
cmp
and
xor
ret
js
or
and
vcvtps2pd
cmp
push
jae
out
inc
imul
inc
or
push
add
dec
sbb
push
(bad)
mov
daa
dec
adc
push
and
and
inc
and
and
push
cmp
dec
or
ins
adc
arpl
dec
dec
xchg
sub
bound
inc
pop
dec
ins
push
dec
push
xor
pusha
add
scas
dec
cmps
lods
mov
retf
mov
pushf
ss
jo
mov
sbb
xchg
xor
push
mov
outs
test
cmp
out
xor
mov
je
cmps
sar
cmp
stos
sbb
mov
push
movs
xchg
addr16
into
pop
ret
sub
mov
push
test
inc
ficomp
mov
arpl
mov
stos
adc
fwait
ds
pop
lods
(bad)
sahf
loop
icebp
fdivrp
(bad)
fcomp
icebp
fisubr
cmp
fwait
out
retf
pop
mov
mov
jae
imul
and
jecxz
xchg
jb
cmp
nop
in
stos
push
test
push
fimul
(bad)
fdiv
mov
push
out
imul
mov
mov
fstp
push
fidivr
stos
lods
imul
sbb
dec
pusha
inc
imul
aas
add
fwait
retf
call
and
ss
inc
push
adc
fs
xchg
mov
mov
inc
dec
mov
dec
and
inc
xor
adc
pop
jp
js
fdivr
mov
lods
lds
aam
jmp
aad
fdivrp
in
test
xchg
inc
ficom
bound
xor
(bad)
in
mov
xor
jae
mul
stc
jp
enter
(bad)
(bad)
cmp
adc
pop
and
dec
icebp
ja
lds
retf
es
sti
xor
push
mov
jecxz
push
pop
xchg
pushf
adc
jnp
xor
mov
or
pusha
lock
mov
out
pop
scas
bound
mov
aam
ret
xlat
mov
mov
mov
xor
jg
mov
inc
push
add
dec
sbb
pop
xor
mov
in
pushf
xlat
mov
mov
mov
test
fnstsw
push
xchg
jo
mov
es
in
lea
shl
jbe
mov
pop
lods
lods
cmp
mov
inc
pushf
xchg
fucomp
pop
pop
cdq
jo
mov
stos
xchg
rol
test
mov
sbb
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
cmp
push
xor
test
mov
fimul
repnz
xlat
cwde
(bad)
mov
movs
retf
enter
loop
ja
pusha
mov
mov
adc
ins
adc
or
jns
add
arpl
push
mov
out
xchg
cmp
pop
xor
pop
push
xor
pusha
pop
xor
and
inc
add
icebp
mov
scas
ret
std
mov
push
repnz
pop
vmovntps
mov
fwait
and
cmp
xor
cmp
add
sub
xlat
cdq
repz
(bad)
or
xor
push
jmp
push
out
dec
movs
scas
das
sbb
inc
loopne
add
fmul
in
inc
(bad)
out
mov
lahf
cmp
pop
popf
sbb
sbb
mov
ja
add
xor
cmp
dec
movs
pushf
fsubr
ficomp
enter
popf
ins
loope
test
jle
ror
and
sub
mov
add
inc
pop
sub
jbe
bound
dec
es
sti
cmps
lock
test
cmps
std
mov
test
leave
sbb
sbb
sar
jle
fucomip
or
pushf
data16
xchg
cmp
jae
iret
xor
cmp
push
rcr
inc
(bad)
xchg
mov
jbe
sub
cld
add
dec
sub
retf
jo
pop
xor
sar
dec
adc
les
int3
xchg
sub
js
pop
call
inc
sti
ja
loop
and
xor
sbb
aad
arpl
pop
inc
out
push
and
sub
mov
xor
jno
imul
jae
dec
push
or
cmp
xor
cmp
inc
add
xor
xor
or
rol
(bad)
aas
sti
dec
mov
test
call
mov
scas
and
and
inc
inc
jle
cmp
cdq
mov
mov
lock
into
leave
outs
enter
sbb
xor
push
(bad)
xlat
jp
push
movs
adc
das
addr16
pop
js
jb
xor
push
test
fprem
inc
loop
ss
inc
mov
fbld
inc
pusha
mov
jecxz
cmp
pop
pop
stos
(bad)
dec
push
aam
fs
push
hlt
xchg
sub
mov
adc
dec
push
das
pusha
cmp
xor
in
mov
out
mov
mov
nop
sbb
inc
cmp
inc
jo
add
test
mov
inc
xchg
adc
mov
xchg
adc
mov
loopne
and
or
(bad)
or
xor
inc
out
iret
add
mov
sbb
sub
dec
out
sbb
cmp
call
fcomp
repz
cld
sahf
repnz
loop
les
jmp
xchg
xlat
xchg
repz
lods
call
scas
shl
repnz
adc
push
pop
mov
test
ret
fsub
stos
into
cmp
pop
mov
adc
xchg
pop
movs
mov
loopne
xor
xchg
push
(bad)
xchg
dec
cld
jbe
ja
sub
enter
sbb
dec
pop
inc
push
or
jp
ins
ds
cmp
inc
pop
or
mov
dec
and
adc
data16
pop
sub
push
adc
dec
adc
or
addr16
out
sub
fist
cmp
scas
js
mov
push
sub
mov
xchg
xchg
enter
stos
cwde
mov
ds
pop
and
lods
dec
lock
test
dec
push
aas
int
stos
dec
out
test
or
ins
(bad)
or
push
lock
and
enter
sub
or
pop
adc
add
mov
loopne
ret
mov
stos
rcr
xlat
fimul
shr
mov
cwde
adc
out
jmp
les
pop
stos
xor
xor
or
xor
stos
ins
push
add
pop
icebp
cs
add
add
(bad)
je
or
push
call
out
adc
rcl
in
in
xor
ret
push
jle
je
xor
shl
std
jae
rcr
sbb
out
nop
mov
cmp
push
daa
push
cli
iret
bound
cmps
mov
js
into
ins
ror
add
aam
into
xchg
(bad)
mov
loop
aad
in
hlt
call
mov
stos
div
call
jp
ja
jp
jnp
push
sub
test
pushf
mov
pushf
fmul
ret
mov
lds
push
stc
retf
sti
xchg
lods
or
mov
mov
jle
sti
fwait
mov
call
xchg
xor
lea
cmps
add
and
pop
push
mov
test
(bad)
push
out
loope
dec
push
mov
adc
(bad)
fcom
mov
push
test
test
retf
cmps
aad
retf
mov
or
ret
xchg
mov
pushf
clc
mov
push
popf
movs
sub
js
test
sub
and
push
sbb
verw
or
js
fisub
pop
push
cmps
ror
push
jo
(bad)
into
pop
pop
mov
xchg
sar
sbb
and
and
cdq
lods
xor
lea
in
cmps
add
xchg
push
add
repz
out
mov
clc
xchg
stc
mov
and
push
loop
stos
out
test
fadd
or
pop
and
xor
jne
repnz
jmp
repnz
ror
or
jl
cmp
test
into
and
dec
push
inc
and
(bad)
loope
jecxz
push
add
loop
ret
mov
scas
shr
push
je
jl
iret
mov
out
cli
pushf
fiadd
ss
bound
dec
add
xor
inc
and
fstp
add
sub
js
pop
or
cmovs
and
mov
mov
test
mov
sahf
xlat
mov
cmps
mov
jge
addr16
outs
inc
jns
ins
pop
ins
bound
dec
cmp
or
jb
jge
in
outs
push
js
jp
fs
jno
arpl
dec
das
ins
cs
dec
sub
test
mov
stos
leave
mov
pop
cmp
ins
add
retf
test
cmp
inc
cmp
sbb
mov
mov
mov
pop
adc
xor
pop
cmp
xchg
repnz
in
movs
imul
sbb
aas
ins
sbb
sbb
xor
pop
cmp
cmp
inc
xor
ins
push
loopne
retf
mov
cwde
enter
fwait
clc
and
in
pushf
cmps
les
fdiv
call
test
pop
pushf
fdivr
stc
ins
fnstcw
loop
lds
fdivr
xchg
ret
call
sbb
dec
add
jl
retf
mov
scas
out
in
js
pusha
sbb
ja
lds
enter
imul
sub
outs
sbb
arpl
inc
add
push
std
nop
loopne
retf
mov
mov
xchg
xlat
pop
xchg
xchg
into
mov
cmps
jecxz
stc
xchg
cmc
xchg
sub
mov
adc
push
add
mov
xchg
rcr
push
xor
push
sbb
cdq
repz
fstp
ins
sbb
sbb
mov
call
in
pushf
aam
(bad)
lods
mov
rol
std
xchg
mov
pop
aaa
push
cmp
aas
push
sub
imul
in
cli
dec
push
xor
pop
loop
iret
scas
iret
lods
shl
scas
retf
cwde
ficom
out
jg
mov
test
jmp
lods
xbegin
pop
or
test
stos
les
out
xchg
(bad)
xchg
(bad)
mov
sub
scas
std
mov
xchg
repnz
out
scas
out
(bad)
movs
frstor
push
xor
push
jbe
test
mov
lea
ficomp
js
jnp
jmp
ins
or
cmps
cld
mov
mov
xchg
sub
jmp
leave
stos
(bad)
mov
dec
or
adc
sub
and
dec
sub
in
sub
ins
fcomp
jg
outs
add
inc
or
jg
into
lods
aam
fstp
push
cmp
jne
repz
aam
xchg
mov
retf
push
(bad)
int
in
ret
je
nop
lds
mov
xchg
test
stc
xchg
add
outs
adc
xor
push
push
in
aaa
pop
ss
push
jnp
mov
inc
out
xchg
jmp
pop
jl
popa
sub
lods
xor
push
or
sbb
dec
sbb
inc
and
mov
xchg
in
and
retf
jle
pop
and
fs
jg
pop
cwde
mov
rcl
xchg
clc
mov
add
and
aam
cmc
mov
xor
or
loope
std
mov
cmps
int
cmps
rol
cmps
jmp
jg
call
adc
push
ins
sub
adc
push
jnp
movs
jecxz
into
mov
mov
ret
inc
sub
dec
sbb
(bad)
mov
stos
leave
mov
pop
fstp
pop
mov
mov
mov
fld
mov
(bad)
mov
(bad)
in
xchg
inc
test
jns
fimul
sbb
mov
movs
loope
clc
mov
sbb
jne
cwde
std
mov
mov
xchg
repnz
lods
or
imul
xlat
push
dec
ss
cmp
sbb
pop
or
xlat
mov
xchg
fidivr
jecxz
in
bound
outs
(bad)
out
and
push
sbb
cs
cmovge
inc
or
push
imul
cmp
ins
leave
test
pushf
(bad)
mov
xchg
cld
popf
ret
push
cmp
inc
add
pop
rcr
iret
scas
push
dec
push
bound
dec
ds
in
stc
mov
dec
sub
xor
adc
inc
mov
cmc
xchg
mov
mov
mov
bound
js
bound
(bad)
push
xor
xchg
dec
sub
dec
loopne
cmp
dec
add
and
pushw
jge
sub
xlat
mov
mov
scas
in
or
imul
sub
es
pop
lock
icebp
or
dec
push
push
pop
jno
out
xor
ins
and
add
fnstsw
jp
jnp
pop
sbb
sbb
clc
lods
loope
stc
fs
outs
add
stos
ficom
mov
cwde
ror
test
scas
int
pop
mov
hlt
xchg
vprotd
mov
stos
aas
adc
jle
pop
ds
add
or
pop
pop
neg
ins
pop
sub
push
sub
cmc
xchg
shl
movs
aam
icebp
mov
lea
out
cld
mov
mov
fidivr
pop
ss
xor
cs
inc
add
(bad)
jne
push
push
dec
sub
sbb
ror
add
push
sub
clc
mov
push
inc
aas
and
call
mov
push
fs
mov
inc
mov
or
xchg
out
(bad)
retf
mov
adc
inc
stc
popa
or
inc
or
lods
dec
dec
pop
adc
pop
arpl
dec
add
jle
mov
retf
xchg
fistp
mov
leave
movs
fs
sbb
pop
cmp
jg
pop
adc
pop
cmp
push
adc
ficom
les
push
inc
loop
xor
rcr
dec
imul
sbb
jge
push
pop
jo
pusha
or
add
push
and
fdivr
retf
pop
sbb
or
push
(bad)
in
mov
in
(bad)
pop
dec
push
inc
and
jge
jp
jae
dec
and
iret
data16
push
jecxz
inc
dec
sbb
ins
retf
jg
pop
and
dec
shl
push
sub
push
mov
mov
sub
ficomp
cmps
retf
mov
mov
sbb
ins
sbb
sbb
mov
scas
int
(bad)
dec
cmp
jge
(bad)
push
xor
bound
gs
lds
cli
shr
dec
xor
xor
mov
cdq
repz
fdivr
es
add
movs
in
mov
scas
addr16
mov
arpl
inc
sbb
(bad)
mov
xchg
icebp
out
sub
jne
jns
inc
xor
ins
add
jmp
push
jnp
jnp
dec
shl
dec
dec
ss
cmp
inc
cmp
outs
add
test
pop
dec
cmp
daa
stos
in
movs
rol
idiv
int
jmp
push
aaa
dec
sub
imul
sbb
dec
shl
xor
inc
adc
sub
and
push
pusha
add
jl
fs
mov
xchg
ror
pop
adc
ud2
jmp
das
in
xor
aad
fldcw
add
rol
cmps
fdivr
xchg
jmp
in
jmp
pop
xor
mov
xchg
lds
or
sub
inc
and
add
ins
sbb
ss
push
or
pop
imul
adc
cwde
outs
or
push
cmp
es
push
jae
or
(bad)
sahf
xlat
test
mov
push
pop
push
jb
stos
sar
movs
mov
enter
outs
sbb
arpl
es
dec
push
ins
adc
push
xlat
xchg
lock
mov
add
test
mov
sar
sub
sub
cld
sahf
fst
mov
retf
mov
cmc
(bad)
(bad)
stc
lods
loopne
sti
adc
mov
push
xchg
scas
ficom
xor
dec
add
pop
xlat
fst
out
ss
sub
and
mov
push
dec
das
mov
scas
std
scas
fisttp
ins
and
xor
pusha
or
cmp
daa
outs
movs
adc
push
push
xor
mov
push
inc
sub
push
mov
mov
fstp
mov
test
push
pop
addr16
hlt
mov
(bad)
into
test
push
ds
aas
dec
push
push
xor
in
std
imul
test
mov
xor
sbb
inc
int3
sub
or
jge
cwde
mov
lods
aam
fistp
push
inc
xor
jl
pop
adc
add
ja
jne
imul
mov
call
jecxz
sti
xchg
dec
or
jge
call
(bad)
jns
mov
xchg
fisttp
(bad)
sbb
push
cdq
cmc
(bad)
out
int
das
adc
jno
push
add
movs
mov
into
lods
iret
mov
movs
int3
(bad)
mov
inc
and
das
add
pop
cmp
push
outs
daa
dec
xor
pop
and
ds
ja
xchg
jge
gs
inc
push
push
addr16
jno
jae
outs
adc
js
push
cmp
or
jge
gs
js
clc
mov
nop
repz
dec
xor
or
cdq
fstp
aaa
lods
clc
mov
lods
int3
mov
dec
push
ins
adc
sbb
sub
jae
jae
scas
mov
popf
into
pushf
jmp
ficomp
ja
js
jbe
dec
mov
loop
retf
stos
jg
xchg
cmps
jmp
into
lods
aad
das
hlt
sahf
out
cmps
retf
mov
ins
(bad)
fld
out
mov
aam
clc
call
leave
movs
fnsave
ins
and
inc
sbb
imul
push
xor
or
cmps
in
ret
ins
and
push
xor
mov
stos
enter
xchg
(bad)
mov
das
jl
pop
repz
and
dec
retf
push
sub
and
push
and
mov
(bad)
pop
mov
iret
lods
sub
mov
call
xor
push
retf
sahf
int
sub
xor
dec
or
ss
imul
jae
data16
es
push
pop
dec
push
imul
icebp
call
adc
push
cmp
retf
cs
je
ins
sub
inc
and
stos
jno
ins
and
jnp
pop
add
sub
push
adc
imul
inc
cmp
pop
shl
jns
js
pop
adc
out
test
cmps
enter
jns
rcl
test
dec
add
jnp
push
dec
sub
pop
aas
pop
xor
fs
sbb
jge
fs
enter
idiv
fnstsw
and
bound
dec
push
test
test
movs
repnz
cmp
xchg
stos
out
(bad)
cmc
inc
into
mov
scas
out
lock
xlat
xchg
lock
mov
mov
inc
into
mov
xchg
cld
bound
or
lods
sar
mov
lods
dec
or
and
adc
gs
push
ss
and
push
and
and
fs
sub
xchg
in
sar
jno
push
lods
aam
idiv
jecxz
out
imul
les
or
into
mov
rcl
out
pop
cmp
inc
adc
into
movs
out
rcr
cwde
out
repz
sub
sbb
xor
push
cmp
dec
or
xchg
scas
or
jb
jge
out
push
cmp
ds
and
pop
xor
jg
popf
inc
pop
inc
xor
cmps
rcl
sbb
int3
mov
movs
jge
pop
sbb
pop
(bad)
push
add
xor
mov
add
jb
bound
inc
aas
push
aas
jl
xchg
retf
xor
jb
icebp
mov
fnsave
in
out
out
rol
inc
or
pop
js
push
adc
gs
lahf
in
ins
mov
lds
clc
call
sbb
loop
push
(bad)
jecxz
icebp
call
stc
(bad)
fst
mov
xchg
hlt
push
lods
int
ret
mov
xchg
pusha
adc
pop
push
inc
push
ror
ret
fidivr
jmp
jbe
gs
(bad)
pushf
fild
xor
into
mov
ret
pop
and
dec
es
(bad)
out
xchg
std
xchg
aad
repz
loop
jecxz
ret
mov
movs
in
mov
lods
aad
cmp
inc
or
loop
or
cmp
pop
jnp
bound
jnp
pop
js
shl
jbe
mov
pushf
mul
push
rcr
sub
dec
push
inc
and
leave
cmps
(bad)
movs
enter
jbe
ja
push
adc
pop
push
jp
arpl
jl
or
bound
jg
aas
aad
leave
sub
add
push
push
or
xchg
fistp
push
xor
dec
rcl
push
ins
pop
dec
cs
ret
mov
mov
scas
jecxz
neg
fdivr
rcr
mov
je
test
mov
scas
int
clc
popf
fdivr
fisubr
idiv
push
adc
push
push
jb
adc
or
add
data16
fs
out
xchg
(bad)
xchg
(bad)
mov
mov
in
ret
xchg
fnstcw
xor
(bad)
in
inc
and
call
push
mov
in
mov
nop
ins
sub
pop
cmp
xor
dec
or
stos
clc
xchg
(bad)
enter
ror
mov
xchg
mov
xchg
icebp
mov
cmp
mov
int
push
sbb
and
pop
jb
dec
daa
pop
ss
test
int
pop
loope
into
mov
xchg
fucomip
and
cdq
pop
repnz
out
out
iret
pusha
add
dec
cmp
cmovs
and
push
jg
jno
dec
and
int
shl
xor
out
(bad)
hlt
xchg
add
dec
or
jg
mov
retf
sub
std
xchg
test
cwde
ror
jb
push
add
mov
and
inc
dec
jecxz
loop
ret
mov
test
push
or
inc
sub
fild
icebp
mov
ret
lahf
ja
movs
(bad)
mov
pop
push
cmp
inc
add
push
or
push
inc
xor
lods
iret
mov
stos
out
and
jl
jle
sbb
pop
sbb
adc
sub
push
sub
int
loope
(bad)
mov
mov
jne
(bad)
xchg
int3
test
test
arpl
arpl
push
xor
inc
and
inc
das
inc
or
xor
adc
arpl
std
or
pusha
add
and
push
outs
add
mov
arpl
dec
aaa
push
inc
icebp
xchg
shl
mov
jmp
enter
cld
pushf
out
ret
mov
pop
mov
leave
mov
aam
repz
pop
or
jp
push
(bad)
jl
jb
push
ss
lock
jg
inc
sub
add
out
hlt
cmps
test
test
stos
shl
sub
enter
fidiv
bound
js
pop
or
inc
daa
pusha
sub
sbb
push
fs
addr16
add
pop
dec
cmp
cmp
outs
es
pop
gs
loopne
addr16
pop
xor
jns
in
(bad)
mov
mov
sub
pop
pop
adc
aad
ret
mov
pusha
sbb
pop
ds
sti
test
mov
xchg
jmp
aaa
inc
mov
mov
out
or
pop
adc
loopne
ror
(bad)
movs
fnsave
aaa
pop
and
xor
cs
adc
cmp
inc
push
dec
sub
sub
aam
pushf
neg
jmp
lock
rol
sub
push
outs
add
xchg
shl
mov
call
in
scas
int3
mov
mov
fisub
jnp
imul
mov
rcl
ja
imul
(bad)
in
int3
test
pop
cs
push
das
inc
pop
mov
loope
fs
xor
inc
mov
scas
idiv
stos
enter
(bad)
add
(bad)
jl
imul
fnstcw
idiv
inc
adc
fdiv
les
push
and
es
mov
jbe
ins
add
push
and
jge
jg
or
pop
or
jmp
jno
repnz
test
mov
mov
ins
pop
inc
and
ret
jecxz
loop
ret
mov
adc
(bad)
bound
leave
dec
sub
jle
push
and
cmp
ret
xchg
fidivr
js
pusha
sbb
jns
push
dec
and
pop
sbb
mov
scas
std
mov
xchg
ficomp
(bad)
js
push
xor
(bad)
mov
cli
inc
or
dec
aaa
pop
call
nop
jmp
sbb
or
mov
xchg
repz
mov
and
sahf
out
out
shl
pop
adc
in
ror
dec
sub
jl
cmp
pop
sbb
gs
cmp
dec
sub
fwait
(bad)
mov
mov
fnsave
lods
push
xor
fbstp
gs
or
test
push
es
pop
mov
and
mov
scas
ret
mov
retf
mov
push
add
xor
retf
test
push
or
push
cmp
popa
sub
and
jp
bound
mov
int3
test
sar
movs
mov
xchg
(bad)
mov
xchg
movs
add
push
ins
add
push
sub
mov
and
ja
outs
sub
jno
imul
lods
aam
aad
repnz
dec
add
jbe
ins
jecxz
cdq
ficom
repz
icebp
pushf
in
stos
mov
sub
dec
sbb
aam
hlt
mov
dec
imul
sbb
(bad)
out
lahf
xlat
mov
jno
imul
and
cs
aaa
push
adc
fidiv
fs
ds
sub
add
and
dec
sbb
push
inc
mov
push
jne
rcl
stos
inc
test
mov
mov
sub
or
and
pop
addr16
test
sahf
int3
mov
dec
cmovbe
gs
ret
mov
mov
mov
icebp
jmp
jmp
movs
rcl
push
sbb
pop
and
adc
inc
sub
xlat
not
les
cmp
inc
add
jnp
je
jns
adc
ins
pop
dec
das
stos
dec
add
add
mov
scas
out
les
std
(bad)
retf
cmps
adc
mov
iret
mov
js
popa
mov
or
pusha
sub
pop
xor
das
inc
ss
popa
add
pop
sbb
outs
pop
jns
jnp
gs
add
inc
sub
jno
jno
push
sbb
jne
push
xor
(bad)
test
cmps
(bad)
sahf
lock
arpl
inc
pop
pop
adc
mov
fild
sub
and
xchg
fidiv
pushf
movs
std
mov
mov
xchg
push
cmp
and
sub
pop
jb
jge
jae
dec
fsubr
retf
xchg
sysret
push
and
and
cmp
imul
add
and
pop
dec
sbb
cmc
xchg
in
mov
xchg
ret
mov
mov
mov
jo
push
dec
push
push
sub
clc
call
hlt
cdq
aas
mov
sahf
sti
mov
xor
fs
cs
mov
test
dec
and
add
xchg
push
add
fisub
stos
pop
stos
movs
ret
(bad)
retw
(bad)
sub
mov
xor
sti
mov
sbb
sbb
add
(bad)
mov
shl
stos
mov
cmp
leave
in
dec
shl
dec
mov
sti
add
jp
mov
fsub
cmp
shr
mov
(bad)
pop
mov
(bad)
bound
cmp
loop
test
push
and
in
cs
pop
cwde
mov
add
dec
retf
ss
cdq
in
hlt
dec
jmp
xchg
ficomp
and
pop
xchg
fiadd
sbb
inc
mov
mov
in
fisttp
pop
xchg
shl
mov
scas
add
xchg
pop
sbb
arpl
and
sbb
mov
adc
ret
std
ror
cs
sub
leave
les
inc
rcl
pop
pop
jmp
mov
stos
jno
sbb
imul
call
into
nop
bnd
es
mov
cmps
adc
or
aaa
fldenv
sbb
hlt
scas
call
push
xchg
or
pop
ss
sub
push
add
mov
push
xchg
adc
int3
mov
jecxz
add
dec
mov
dec
mov
push
inc
in
cmp
xchg
jns
out
outs
and
rol
cdq
repnz
sub
pop
inc
adc
stos
fdiv
(bad)
fucomp
jbe
pop
or
mov
and
jp
test
or
inc
mov
rcr
cmovle
cwde
cdq
jbe
and
push
test
shl
or
sti
ins
mov
push
std
dec
jecxz
cld
std
sbb
fdivr
add
mov
mov
mov
neg
fs
lods
ror
adc
(bad)
cmp
jge
outs
jge
rcr
and
int3
and
ret
std
sbb
out
sub
jns
add
xchg
fs
aam
cmp
hlt
fs
ficomp
popf
xchg
mov
daa
inc
dec
or
mov
xchg
mov
ror
xchg
mov
cli
ja
push
cs
jno
daa
repnz
pop
cs
adc
sahf
rcr
jns
dec
adc
lahf
popa
pop
test
stc
jle
sub
outs
pushf
shl
inc
xchg
mov
inc
xchg
mov
sub
call
sti
out
add
fmul
mov
jecxz
dec
retf
sbb
arpl
add
push
lahf
xchg
dec
mov
lods
retf
cmp
(bad)
xor
adc
sub
retf
sub
xor
nop
stos
inc
icebp
daa
xchg
mov
test
jo
adc
(bad)
pop
mov
cmp
sbb
je
in
imul
adc
adc
stc
into
lahf
and
imul
push
repz
loope
popf
cmp
sub
ss
inc
cs
sbb
ins
test
jae
adc
cmps
mov
xlat
mov
popf
stc
movsx
adc
(bad)
jle
jns
xchg
cmp
ss
push
adc
lods
jl
pop
push
cmp
jecxz
inc
fs
repz
mov
ja
cmp
xchg
cmp
daa
xchg
(bad)
jae
inc
pop
cmp
dec
jmp
dec
sub
(bad)
call
and
adc
shr
jp
push
dec
pop
mov
jle
push
mov
bound
ret
(bad)
fild
mov
out
mov
cdq
ss
jbe
arpl
mov
xchg
ins
add
fdiv
mov
xchg
dec
mov
and
push
mov
xor
dec
xlat
xchg
rcl
push
push
sub
int3
lods
or
and
or
mov
stos
jbe
lock
sub
mov
daa
jae
es
mov
ds
enter
mov
jmp
out
adc
jge
and
sub
test
popf
and
ror
xchg
mov
lahf
push
mov
dec
lahf
sbb
ds
test
or
adc
out
or
(bad)
aas
sub
scas
mov
shr
add
add
mov
xlat
xchg
mov
xchg
icebp
xchg
shl
stos
pop
xchg
sbb
loope
pop
and
mov
add
shr
xchg
loopne
aad
sub
pop
mov
inc
lods
jb
dec
mov
jle
mov
xchg
adc
dec
jo
xor
dec
arpl
fimul
data16
adc
pop
push
ret
test
or
xor
mov
rol
dec
sub
xchg
aaa
arpl
push
fdivp
add
jmp
or
add
mov
mov
ror
lods
jle
stos
gs
imul
scas
and
jnp
repnz
popa
outs
fs
retf
and
adc
fnsave
idiv
xchg
cmp
mul
popa
mov
popa
stc
push
stos
icebp
jg
jmp
fs
add
cmc
mov
ins
and
cmc
adc
daa
je
and
pop
dec
sti
pop
sub
pop
mov
clc
pop
test
add
(bad)
(bad)
idiv
cld
push
push
push
jmp
call
push
cmc
push
jmp
jl
push
cs
dec
bound
lods
ins
and
add
mov
push
fsub
pop
add
inc
inc
inc
inc
dec
inc
xor
xchg
out
cs
cdq
push
outs
jp
xor
fwait
lea
stos
adc
jns
aad
push
and
or
add
jns
add
outs
sbb
outs
lds
jnp
aam
cmp
and
jmp
pop
enter
jo
fdiv
aas
jle
dec
pop
out
fidivr
rcl
dec
jle
scas
adc
std
mov
mov
test
stos
sti
cmp
das
adc
cmp
arpl
adc
push
ret
test
add
jo
jmp
enter
stos
add
xor
js
xor
inc
rcr
dec
xchg
and
inc
ja
xchg
sub
xor
loope
pop
stos
retf
dec
lods
jmp
push
mov
xchg
fisttp
imul
imul
jnp
and
or
iret
pop
std
jmp
xlat
scas
pop
dec
push
jnp
dec
sub
aaa
cmp
jbe
jge
pop
imul
xchg
dec
jne
jns
repz
pop
push
cmc
loopne
fcmovb
pop
pop
mov
mov
lds
enter
push
sbb
jbe
jge
inc
fld
and
sub
outs
dec
into
aaa
adc
add
(bad)
and
mov
cmps
jmp
fs
call
call
sub
push
mov
xor
and
mov
xchg
jo
adc
cli
lock
neg
cwde
cmp
iret
xchg
hlt
mov
sbb
mov
xchg
jne
xchg
and
push
and
in
into
sbb
inc
mov
push
jecxz
es
sbb
sbb
and
lock
push
dec
push
clc
xchg
sti
outs
js
xchg
(bad)
std
inc
dec
mov
shr
aaa
xchg
xlat
cmp
repz
and
addr16
outs
mov
arpl
test
scas
cmp
xchg
arpl
mov
cdq
ret
jp
xor
sub
sub
inc
outs
hlt
test
jg
and
sahf
dec
rcl
mov
cmp
pop
sar
xor
add
test
pop
sbb
add
loop
pop
sub
inc
loope
and
fdiv
inc
push
not
or
mov
or
add
xchg
mov
pop
cwde
or
ja
xchg
jecxz
in
mov
cld
mov
adc
dec
jp
add
ret
inc
clc
mov
mov
cmc
rcr
or
test
mov
hlt
mov
or
cdq
je
int
fsub
sbb
shr
mov
fiadd
iret
pop
xor
xchg
pop
in
push
jo
rcl
push
jg
inc
xchg
adc
ret
clc
int3
fmul
xchg
or
mov
es
mov
mov
clc
and
push
sub
dec
inc
test
mov
fst
popa
jno
pop
movs
xor
shl
std
movs
or
mov
std
std
pushf
adc
inc
icebp
fnstenv
ror
jp
push
repz
push
sbb
cmp
inc
add
xchg
sbb
movs
cmp
mov
icebp
or
and
mov
or
ret
movs
icebp
lods
adc
mov
pushf
xor
icebp
inc
ficomp
fbld
(bad)
push
fmul
push
shl
push
add
pextrw
and
push
clc
or
retf
int3
pop
sbb
mov
xchg
(bad)
cmp
xchg
leave
jb
repz
inc
jp
add
inc
inc
fsubp
cmp
jne
out
pusha
int
ja
ja
repz
mov
mov
(bad)
adc
inc
fild
in
jo
add
jge
cwde
xlat
push
daa
lods
and
xchg
push
mov
push
call
fistp
sbb
push
xor
mov
cld
add
call
mov
ss
gs
and
cmc
and
and
iret
dec
add
mov
nop
mov
mov
jbe
mov
inc
push
adc
ja
mov
scas
or
xchg
cmp
push
or
sbb
xchg
and
call
xchg
cwde
cmp
das
jae
inc
jmp
jecxz
mov
mov
push
into
add
aaa
fincstp
jecxz
lahf
test
outs
mov
cwde
xor
loopne
scas
pop
out
ret
inc
std
push
mov
bound
xor
das
xor
ins
das
sub
ins
dec
retf
dec
rol
not
pop
fisubr
xchg
imul
aam
neg
inc
addr16
or
xchg
outs
jno
xor
push
out
mov
cmp
aam
and
dec
jno
pop
data16
icebp
jmp
cmc
cld
pop
push
cmp
add
and
ins
fisttp
movs
test
aas
mul
mov
aas
rol
mov
neg
xor
push
popf
dec
ja
xchg
push
cmc
adc
xor
jb
jbe
stos
jae
std
lds
leave
lods
sti
les
out
outs
int3
cmp
push
jp
cdq
shl
fnstsw
jmp
dec
cmp
test
dec
adc
test
outs
lock
lea
jmp
scas
xchg
xor
cli
in
mov
dec
js
xor
push
sub
paddb
data16
cli
xor
and
xchg
fdiv
out
sar
dec
repnz
mov
in
fdecstp
push
in
icebp
adc
add
stos
mov
(bad)
loope
repnz
dec
sbb
mov
pop
ja
add
and
jg
xor
call
jne
mov
je
xchg
inc
push
jnp
data16
lahf
cdq
movs
pop
aam
inc
jmp
adc
pop
ret
pusha
push
and
jecxz
xor
retf
pop
cld
cmp
inc
mov
(bad)
daa
cmps
fisub
jmp
sub
stos
jle
nop
outs
mov
imul
pusha
retf
ins
jne
das
fbstp
sbb
pop
gs
les
dec
sti
inc
inc
int3
add
jge
fidiv
push
cmps
or
out
aas
mov
test
cmps
and
sti
imul
add
mov
fidivr
or
movups
enter
mov
mov
jmp
sbb
cmp
(bad)
mov
push
aas
jae
sti
fstp
aaa
add
mov
xor
fidivr
add
jo
xor
inc
adc
sbb
mov
add
sub
and
fild
mov
aas
inc
jle
adc
js
xchg
jl
inc
leave
sbb
jmp
(bad)
nop
loopne
icebp
shl
cmp
icebp
sub
fnstenv
test
add
loope
jne
mov
inc
pop
xchg
stc
mov
mov
pushf
add
in
les
call
cs
fld
jns
ret
(bad)
mov
sub
mov
neg
fbstp
clc
dec
jae
je
iret
mov
or
xchg
cmc
pop
and
mov
test
add
mov
(bad)
stos
fcomp
(bad)
popf
mov
push
jle
jle
test
push
mul
cmp
xchg
loopne
cld
mov
je
outs
push
dec
popf
jmp
dec
aas
push
fwait
aas
xor
dec
ja
sub
fucomip
les
cmp
add
cmp
stos
sub
loope
je
int
adc
cwde
pop
(bad)
cmp
aaa
neg
js
cwde
xchg
mov
repz
push
sbb
sub
jecxz
jg
push
or
or
mov
xchg
jmp
sbb
adc
inc
das
movs
mov
cmp
rcr
sub
push
add
add
xchg
sub
es
mov
jo
mov
jo
jge
xchg
dec
aad
jnp
cld
fisttp
gs
js
xor
lock
pop
xor
add
mov
not
addr16
scas
mov
push
cdq
mov
cmp
mov
in
les
mov
fdiv
pusha
cwde
ret
aad
dec
xor
arpl
mov
jnp
xchg
and
les
dec
sar
ins
xchg
div
add
jns
sbb
or
ror
pop
fcmovnb
adc
xchg
mov
cmps
stc
std
and
cmc
xchg
jb
xchg
sbb
jmp
cwde
call
cwde
push
xor
xor
ja
push
ds
nop
mov
aaa
add
cmps
sub
or
in
jnp
add
(bad)
mov
xor
stos
dec
cmp
pop
add
mov
pop
lods
pop
or
ins
push
and
inc
jmp
mov
xchg
shr
mov
sub
sub
xchg
div
pop
sti
dec
push
rol
mov
ins
dec
icebp
lahf
xor
mov
dec
or
and
(bad)
pusha
cmp
jns
xor
loopne
sahf
ins
adc
inc
jecxz
arpl
popf
movs
jge
xor
stos
mov
daa
and
mov
inc
mov
sahf
hlt
mov
daa
cmp
dec
dec
scas
and
mov
jmp
xchg
mov
cmp
jmp
shl
out
mov
pop
mov
ins
ror
jmp
retf
pop
mov
(bad)
pop
popa
daa
ds
test
dec
and
shl
adc
or
loope
dec
pop
cld
retf
pop
add
out
scas
out
xchg
push
cwde
xchg
addr16
fadd
dec
add
outs
xchg
aaa
sub
push
mov
inc
jae
test
mov
dec
adc
mov
in
cmp
inc
adc
dec
gs
sbb
movs
push
daa
stc
push
cmps
inc
popa
push
push
mov
out
js
hlt
repnz
add
cs
cmp
dec
int3
sub
push
enter
inc
xor
imul
fwait
nop
or
dec
(bad)
data16
sub
pop
ret
jae
dec
cdq
sub
arpl
or
or
hlt
xor
call
aad
inc
adc
xor
cwde
imul
xchg
and
(bad)
in
xchg
inc
dec
arpl
jmp
sub
(bad)
xchg
pusha
in
fs
rcl
fs
dec
ja
xchg
call
sbb
cmp
jge
xor
rcr
ins
xchg
mov
out
push
call
adc
jmp
jecxz
push
fild
sbb
sub
sub
mov
push
pop
jecxz
mov
push
mov
cmps
div
pushf
xlat
scas
push
sbb
in
push
repnz
clc
test
outs
cli
xchg
dec
cmp
mov
mov
inc
mov
push
push
sub
fs
sub
fisttp
xchg
sar
push
jl
lods
mov
dec
and
std
mov
popf
hlt
scas
les
aaa
repz
pop
ja
fwait
xchg
jo
cmp
push
shl
xchg
add
ss
cmps
inc
add
or
loope
call
jo
scas
jmp
add
in
mov
sti
xchg
adc
add
sub
scas
iret
xor
xlat
sub
mov
push
mov
jae
inc
icebp
sbb
jmp
cmp
jno
loope
ins
mov
jle
int
push
cmp
stc
pushf
dec
xchg
sahf
xchg
inc
ret
and
adc
or
sub
mov
or
call
add
dec
shr
lds
add
push
push
fld
arpl
bts
dec
add
in
cmp
stc
dec
pop
ss
dec
ja
lods
mov
scas
les
daa
sub
loope
add
shl
mov
push
ficom
xchg
mov
fwait
xrelease
and
xchg
call
mov
cmc
int3
popf
retf
and
adc
and
push
cmc
add
lahf
cmps
sar
mov
jne
fsub
fidivr
ss
dec
pop
pop
imul
add
test
xor
scas
cmp
hlt
xchg
ins
mov
outs
int3
mov
or
jmp
inc
sbb
mov
mov
outs
jp
retw
cs
jmp
icebp
shl
xchg
cmp
clc
sbb
nop
iret
mov
mov
adc
gs
loop
adc
mov
ins
int3
(bad)
pop
mov
shl
cmp
sub
push
jae
push
pop
ins
int
dec
add
adc
cmp
pop
clc
call
movs
or
inc
and
inc
or
jo
aam
add
cli
pop
loop
rcr
mov
mov
sbb
push
mov
hlt
sub
mov
in
push
cli
inc
sub
sbb
dec
xor
lods
sub
adc
loopne
push
sbb
xor
add
mov
repnz
sub
into
pop
add
push
in
icebp
xchg
pop
dec
or
mov
mov
push
neg
add
pop
xchg
mov
ja
sub
sbb
loope
(bad)
in
psrlw
sbb
add
out
jns
cmp
out
xchg
xor
pop
mov
add
mov
pop
push
cmp
dec
push
outs
enter
test
add
aas
out
sbb
xchg
cmp
std
shl
mov
scas
(bad)
cli
ficom
leave
xchg
dec
ja
jecxz
pop
push
(bad)
iret
dec
arpl
in
jb
neg
sbb
popa
push
sti
scas
test
test
jecxz
inc
hlt
mov
mov
push
sub
jbe
je
fucom
mov
das
mov
adc
aam
mov
fmul
idiv
adc
imul
mov
leave
xchg
mov
or
call
dec
pop
cmp
scas
loope
imul
int
mov
dec
pusha
add
cmc
(bad)
cs
sub
push
and
gs
mov
add
or
pop
int
mov
scas
movs
loop
mov
jmp
and
add
addr16
jnp
or
lds
push
(bad)
fadd
leave
mov
mov
ins
lods
mov
cwde
cmps
adc
mov
inc
pop
shl
test
mov
jns
mov
mov
and
imul
mov
xor
or
pop
mov
pop
jmp
int3
loop
scas
iret
shl
mov
ficom
or
pop
add
fadd
lock
xchg
push
pop
(bad)
out
adc
dec
pop
andnps
cld
push
and
out
jecxz
call
sbb
cmp
ins
dec
pop
cmp
in
ins
mov
clc
mov
adc
adc
inc
ja
(bad)
dec
and
sub
(bad)
or
pop
fld
xchg
mov
push
pop
jb
ins
jle
ins
or
daa
fild
dec
xchg
repz
and
xchg
jae
ins
cld
in
push
push
ins
ror
dec
inc
jecxz
cmc
jae
fimul
or
aas
cmp
into
cld
(bad)
loopne
pop
in
xchg
jge
cmp
mov
and
test
ins
loope
xchg
push
sbb
imul
fsub
mov
xor
ja
int3
or
push
mov
aad
les
fwait
pop
xor
ret
sub
adc
rcl
cmc
cmpxchg
rcl
adc
fcom
call
or
in
imul
les
stc
add
stos
add
jle
ds
scas
out
cwde
dec
mov
jg
cld
pop
mov
shl
outs
rol
xlat
popa
rcl
mov
add
aad
hlt
imul
and
fwait
dec
push
push
pop
es
xchg
dec
dec
mov
das
pop
scas
add
sub
dec
loop
sbb
retf
in
rcl
add
loopne
dec
xor
push
mov
push
(bad)
push
jmp
jne
ins
push
cmc
fs
mov
or
dec
(bad)
mov
mov
ret
mov
scas
movs
add
xor
addr16
add
mov
repz
lods
xlat
inc
fsubr
sahf
sti
aam
stos
(bad)
mov
pusha
gs
push
jp
push
xor
mov
inc
sbb
inc
out
fcom
sub
xchg
shl
mov
test
stc
(bad)
mov
shr
mov
cmp
jge
rol
das
bound
cmp
jge
push
frstor
ret
fs
and
(bad)
outs
push
es
adc
inc
fmul
loope
add
jmp
dec
(bad)
or
pop
test
es
in
(bad)
mov
mov
push
mov
and
mov
in
enter
xchg
sub
movs
fucomip
push
fldenv
jle
mov
and
xor
dec
mov
xor
outs
cmp
loop
ins
sbb
xchg
inc
and
cmp
cmp
or
enter
pop
js
mov
sub
mov
dec
inc
dec
test
cmps
jmp
adc
push
imul
sub
repnz
pop
test
push
pop
cmp
jmp
lock
movzx
in
popa
mov
dec
mov
jmp
les
mov
adc
rcl
push
cmp
adc
out
cmp
and
fcompp
dec
iret
int
int
fs
(bad)
shr
mov
push
mov
lods
icebp
adc
dec
sbb
out
mov
mov
fwait
pushf
dec
test
inc
enter
das
mov
repnz
push
movs
aam
lds
iret
je
pavgw
js
enter
push
(bad)
sub
(bad)
fadd
adc
loopne
pushf
dec
fwait
push
sbb
xchg
or
rol
popa
xchg
ja
sbb
(bad)
stc
pushf
dec
pop
cmps
inc
xor
(bad)
mov
adc
or
daa
adc
pop
jmp
fidiv
xor
xor
int3
xor
call
mov
push
inc
mov
enter
inc
js
sbb
enter
jle
mov
pop
movs
push
js
mov
out
push
stc
call
mov
push
cdq
out
test
call
mov
loopne
fs
loopne
pop
es
cmps
sbb
fsub
push
push
pop
ret
movs
bound
jecxz
lds
add
cmp
mov
add
jmp
loope
adc
(bad)
les
cld
jne
or
out
inc
fld
or
js
push
int3
dec
or
mov
movs
add
mov
fstp
mov
fmul
mov
stos
jb
xor
sbb
outs
or
jbe
xor
and
or
sbb
or
sbb
les
mov
or
pop
js
lods
jae
lahf
test
xor
adc
pop
cmp
clc
push
es
outs
std
fmul
lock
jg
jbe
in
mov
gs
aaa
fdivrp
dec
mov
iret
aam
out
fs
push
push
dec
out
pop
mov
adc
xchg
cs
jae
cld
or
mov
jbe
jge
adc
loope
icebp
jge
mov
dec
(bad)
xor
aas
push
lea
outs
sbb
ret
test
cmp
in
pusha
mov
mov
xlat
out
lods
mov
aaa
and
dec
mov
mov
push
jp
cs
test
push
push
sub
xchg
jl
mov
and
inc
mov
xor
or
fstp
in
cmp
retf
jmp
repnz
push
lods
cmp
cmp
adc
shl
pusha
stos
cmp
push
pop
cli
inc
sbb
out
inc
cmc
xlat
adc
or
dec
or
jl
mov
lods
(bad)
sub
loop
mov
bound
add
mov
icebp
cmp
jb
aas
bound
sbb
in
or
iret
xlat
cli
sar
jg
inc
stos
mov
or
xchg
jo
inc
pop
or
aam
fmul
test
enter
sub
lea
jb
add
dec
js
or
pop
out
ins
fidiv
es
loop
jg
jnp
aaa
adc
daa
inc
push
loopne
leave
or
pusha
je
fld
aas
lahf
retf
bound
test
shl
jmp
mov
sbb
xor
inc
sbb
sub
dec
lahf
shl
cs
dec
push
div
jno
ins
xor
add
call
daa
lods
cmp
inc
push
fistp
test
mov
repnz
popa
repz
bound
pop
je
fisubr
cmp
call
add
jne
mov
fidivr
xor
not
cmps
out
call
addr16
fldcw
add
xchg
shr
push
sysexit
fs
dec
mov
enter
sub
in
stos
loop
push
add
xchg
pop
sbb
xchg
sti
aas
pusha
or
ins
xchg
sahf
inc
fisub
sar
xchg
add
pop
jl
test
repz
cld
add
and
cmp
fnstsw
adc
xchg
mov
fcmovbe
dec
and
loopne
lods
popf
test
in
push
lock
or
dec
push
leave
clc
add
aad
daa
pop
cli
sbb
(bad)
adc
repnz
xor
mov
leave
push
jp
or
mov
mov
pusha
or
(bad)
mov
mov
movs
sti
out
icebp
jmp
sbb
mov
jg
dec
xor
ror
dec
mov
out
mov
movs
repnz
sub
mov
rcr
loop
pop
dec
push
aas
mov
jns
jg
into
stc
jmp
push
das
push
(bad)
retf
stos
push
ins
push
outs
jno
xchg
sbb
vpshuflw
jns
fld
xor
clc
or
mov
push
movs
lods
inc
jnp
pop
ins
fidiv
mov
or
fldcw
inc
xor
aas
(bad)
test
add
pop
mov
xor
ret
cmc
sbb
outs
loop
dec
dec
or
mov
stos
sub
adc
out
jmp
shl
jecxz
aam
xchg
std
scas
jg
xchg
cdq
mov
add
push
fisubr
ret
jb
or
push
jnp
xchg
inc
test
in
xchg
fimul
xor
idiv
retf
(bad)
scas
add
in
fnsetpm(287
inc
inc
lds
retf
mov
rcl
scas
push
mov
sub
gs
mov
xor
jp
sub
(bad)
in
inc
mul
mov
push
dec
mov
cmp
je
(bad)
dec
mov
(bad)
mov
popf
sbb
mov
mov
mov
jno
sbb
adc
xchg
jns
mov
fisub
(bad)
outs
cmp
push
ins
mov
mov
or
and
mov
icebp
imul
pop
or
test
icebp
pop
iret
cmp
mov
jns
out
call
inc
test
js
pop
test
(bad)
adc
int3
aam
hlt
(bad)
mul
daa
loopne
jmp
fidiv
adc
lahf
pop
mov
push
add
mov
or
adc
xchg
adc
ret
jge
sbb
push
add
sub
pop
retf
jbe
aam
fisub
aaa
sbb
test
repz
lods
mov
inc
jmp
stos
addr16
jl
sar
push
jle
mov
mov
xchg
pop
or
sub
jmp
out
mov
addr16
pushf
out
dec
icebp
push
fcom
adc
jle
movs
imul
fnstsw
add
fild
out
pop
push
lock
dec
les
jbe
imul
or
dec
adc
pop
fistp
xor
mov
fmul
iret
pop
mov
imul
pop
xor
jo
popa
stos
mov
sbb
test
lahf
cmp
cmp
sbb
dec
scas
jbe
jae
push
std
lea
dec
out
or
and
in
xchg
and
cwde
pop
pushf
add
in
loope
ins
fidiv
jns
and
cmps
mov
imul
mov
mov
out
aaa
and
retf
outs
dec
pop
out
inc
fdiv
jmp
ins
adc
mov
cmp
icebp
push
add
mov
inc
pop
push
xlat
jge
pusha
xchg
(bad)
cli
jge
pop
jge
leave
daa
neg
iret
mov
sbb
push
jmp
adc
lods
xlat
push
jp
out
cmp
jae
mov
lods
pop
push
lahf
fst
and
or
mov
sub
into
pop
jns
cdq
dec
xchg
mov
mov
pop
sub
imul
(bad)
cmp
(bad)
out
xor
icebp
mov
int
and
stos
shr
(bad)
iret
sbb
in
icebp
in
push
test
inc
das
xlat
sub
add
(bad)
and
pop
ret
adc
push
lods
xchg
cmp
or
or
mul
clc
gs
sbb
stos
pop
or
movs
or
or
jne
pop
jns
push
bnd
sub
inc
cmp
fdivr
mov
lods
scas
xlat
cld
test
xchg
sbb
or
inc
rcr
adc
fidiv
and
pop
or
pop
fs
pusha
int3
pop
test
mov
add
push
xchg
stos
xchg
inc
dec
arpl
lods
test
icebp
stc
lea
sti
(bad)
or
dec
or
xchg
mov
call
jg
call
push
adc
xchg
push
ins
cmp
mov
(bad)
push
sahf
cld
jno
mov
ins
fdivr
hlt
sbb
and
cld
dec
outs
sbb
or
and
xor
mov
dec
xor
lock
cld
mov
dec
and
jle
inc
imul
(bad)
fadd
loop
pop
push
xchg
imul
mov
jno
sbb
and
test
ja
sub
fstp
cmp
sub
xchg
cmp
sbb
sar
(bad)
mov
lock
sub
mov
ss
push
call
(bad)
jno
cli
stos
shl
xor
push
push
adc
imul
lock
dec
sub
cmps
test
adc
fisub
dec
xor
test
inc
and
sbb
sub
(bad)
ja
mov
or
cmps
xor
dec
or
or
and
dec
jb
je
rcl
dec
cmp
pop
std
pop
jo
ins
aad
mov
iret
stos
das
xlat
mov
fmul
sub
das
and
push
icebp
(bad)
mov
stos
out
lock
test
repnz
xor
fstp
cmp
imul
arpl
push
std
shl
das
enter
pop
outs
xor
inc
adc
mov
lock
cmp
in
jnp
and
in
sbb
fbld
push
push
add
ret
sub
add
ret
pop
pop
in
fdiv
jmp
lahf
sub
sbb
in
mov
sub
add
sub
push
pop
mov
pop
outs
fwait
pop
mov
shl
mov
xlat
mov
inc
sahf
cmp
xor
iret
(bad)
sti
int3
nop
fbstp
cmp
xchg
outs
sub
jecxz
mov
sbb
xor
daa
dec
inc
in
jg
(bad)
lahf
xchg
out
gs
sbb
iret
fst
jbe
das
sbb
cmp
leave
retf
or
ficom
pop
sub
clflush
sbb
(bad)
fwait
pushf
fwait
push
jmp
xchg
sub
cmp
dec
in
cmp
aam
dec
xchg
lock
mov
lods
pop
jecxz
mov
cmp
sub
scas
jnp
mov
mov
xor
mov
dec
dec
cld
pop
ins
aam
stc
mov
mov
shl
inc
call
xor
leave
fcos
fcomip
shl
mov
sub
cdq
inc
mov
neg
fisubr
stos
div
cmp
sub
in
cmovbe
jns
mov
icebp
bound
and
out
inc
push
push
xlat
mov
push
jo
(bad)
xor
retf
mov
xchg
push
xor
dec
jb
mov
test
icebp
and
and
push
adc
pop
mov
jmp
scas
xor
jmp
pusha
sub
mov
jbe
bound
stos
in
ja
int
push
retf
pop
aas
cmc
icebp
movs
leave
mov
out
xchg
xchg
pop
sub
push
mov
inc
mov
sbb
mov
outs
push
mov
pop
dec
or
loop
cmp
cmp
stos
inc
cli
push
mov
cmps
inc
aaa
cmp
pop
push
cmp
sbb
xchg
and
jae
jae
jae
cld
jno
stos
jmp
jecxz
add
add
sbb
xor
scas
sub
(bad)
sub
adc
lock
nop
jnp
dec
call
or
out
sub
cmp
sub
sub
pop
das
sub
mov
xchg
nop
mov
es
add
icebp
xor
jl
ficom
retf
sub
dec
in
hlt
in
mov
xchg
pop
pop
xor
in
mov
arpl
in
ror
mov
xlat
cld
sbb
xchg
xor
sbb
int
pop
mov
adc
inc
xor
stos
adc
or
inc
pop
pop
out
in
pop
push
scas
xchg
jb
fmul
sbb
movhps
loop
loop
nop
cmp
push
test
aas
(bad)
(bad)
jnp
jae
mov
int
aad
mov
fs
in
pop
push
repnz
mov
shl
gs
adc
sub
(bad)
sar
test
stos
add
imul
enter
inc
mov
fisubr
inc
(bad)
xchg
mov
dec
mov
jmp
pavgb
ret
sahf
xchg
jae
leave
sbb
ror
jmp
scas
mov
retf
das
jmp
add
jo
retf
sub
cwde
push
loopne
xor
sbb
dec
xor
nop
pop
test
call
cli
(bad)
push
xor
add
in
or
xchg
jp
ss
dec
fwait
jns
or
popf
js
ret
jmp
mov
pop
lea
mov
loop
aam
sbb
sub
or
adc
add
(bad)
mov
mov
jne
cli
test
xor
cmp
adc
clc
sub
xlat
cwde
stc
inc
(bad)
leave
lahf
xor
int3
jge
cmp
test
xchg
sub
sub
jnp
jnp
hlt
cwde
out
xchg
sub
mov
mov
add
push
(bad)
jg
pusha
sti
movs
lahf
mov
fnstcw
sti
pusha
pop
xchg
ja
dec
pushf
and
iret
ins
hlt
jmp
mov
xor
fstp
lock
push
test
addr16
fnclex
(bad)
xor
fld
sbb
xchg
sub
ins
jle
retf
xchg
dec
and
xlat
xor
es
ja
lds
out
out
int
xor
and
pushf
adc
sbb
bound
mov
clgi
lds
mov
mov
scas
mov
mov
es
dec
in
loop
push
xor
xchg
sbb
jo
fwait
jg
push
test
mov
into
in
je
mov
fild
pop
jnp
(bad)
ror
mov
repnz
inc
enter
mov
pop
cmp
mov
aam
mov
aam
retf
sbb
or
into
stos
push
or
int
push
jb
shl
repz
lods
pushf
int
jns
mov
idiv
shl
xchg
adc
and
mul
push
push
jae
loope
int
out
push
pop
pop
call
movs
scas
(bad)
and
inc
adc
or
cmp
dec
scas
int3
jecxz
movs
sbb
mov
sbb
mov
adc
mov
das
cwd
and
lods
mov
or
ret
add
fwait
dec
or
mov
sub
push
xor
gs
cwde
push
mov
not
and
pop
outs
aad
jp
mov
nop
cmp
mov
mov
push
push
ror
mov
xor
lds
push
popa
movaps
mov
xchg
jge
add
daa
in
daa
neg
cmps
fadd
sti
repnz
test
les
cmc
loopne
rcr
inc
add
(bad)
mov
pop
mul
jnp
sbb
aas
mov
mov
cmp
lods
call
and
nop
pop
sbb
iret
fwait
or
loope
inc
sti
jmp
mov
adc
sub
lahf
fwait
lods
push
inc
retf
icebp
int3
pop
scas
repz
std
arpl
call
mov
sub
in
or
lods
pop
sar
mov
pop
sbb
jno
add
jbe
stos
shl
dec
or
jne
rcl
xorps
(bad)
data16
(bad)
add
cli
ins
adc
pop
sbb
adc
lods
enter
repnz
xchg
mov
lock
retf
and
jge
cmp
pop
mov
daa
test
sbb
imul
(bad)
sahf
stos
jo
shl
in
mov
ds
add
daa
and
push
add
(bad)
das
pop
xchg
push
icebp
in
xchg
sbb
ins
std
dec
retf
lea
cld
pop
jmp
push
(bad)
fldenv
psllw
fisttp
call
mov
and
jmp
mov
cmp
add
push
vpacksswb
and
and
popf
in
inc
pusha
mov
pop
std
jg
js
mov
and
push
push
imul
ins
fld
pop
xchg
lahf
je
dec
or
sub
je
pop
retf
pop
fisub
test
sbb
or
jmp
mov
mov
inc
xchg
pusha
xchg
ins
test
push
xor
and
mov
mov
xchg
cmp
or
mov
dec
and
cmp
imul
xchg
test
jge
xor
(bad)
call
lods
add
jg
push
fwait
cli
repnz
sub
lods
pop
pop
fxch
dec
test
jne
movs
sbb
clc
adc
sbb
fisub
stos
sti
jmp
mov
adc
jb
xor
push
addr16
sbb
sbb
(bad)
sub
retf
cmpxchg
in
mov
pusha
cmp
pop
push
addps
sub
push
jno
mov
dec
jg
mov
ret
and
repnz
mov
cli
mov
add
ror
xchg
jle
add
xchg
push
add
cli
das
sbb
add
out
jno
ins
mov
mov
fmul
cmovbe
pop
scas
dec
(bad)
jnp
mov
aam
scas
jle
fs
mov
call
and
ret
push
test
push
add
shl
in
add
and
ds
out
mov
cmp
xchg
add
push
jl
jp
jl
ss
dec
xor
aad
push
jecxz
fldenv
mov
xchg
pusha
enter
test
enter
stc
adc
test
or
aas
hlt
adc
push
fiadd
out
dec
call
movs
cmps
xchg
xchg
fwait
fwait
outs
mov
jo
pushf
xchg
push
mov
mov
aam
sbb
xchg
ins
mov
movs
test
test
dec
aad
add
push
push
sbb
dec
scas
cwde
mov
std
push
out
movs
push
(bad)
cmp
popa
mov
xchg
xor
ficom
mov
xor
in
xor
or
loope
loopne
mov
ins
mov
js
fs
add
dec
fisub
mov
sub
pop
repz
mov
in
cmp
sub
and
jne
cdq
repz
adc
les
add
test
ror
movs
ins
xchg
data16
sub
adc
and
test
mov
movs
in
sub
add
add
out
aad
cmc
mov
enter
push
and
cmp
stc
add
xor
adc
dec
xor
push
mov
test
mov
sub
out
mov
mov
call
xchg
test
add
call
pop
retf
jo
out
cmp
jbe
jg
bound
clc
dec
stos
mov
push
cmc
push
xchg
and
pop
adc
ss
adc
out
test
gs
jecxz
rcr
mov
xchg
outs
stc
cmp
or
sbb
dec
aam
or
sbb
pop
scas
std
cmp
idiv
push
jmp
push
stc
push
or
sbb
loop
paddw
push
(bad)
pusha
adc
and
or
daa
sbb
cmp
pop
call
inc
mov
mov
xor
cmp
sub
mov
cmp
idiv
in
sbb
push
(bad)
xlat
jnp
das
sti
add
inc
mov
ja
sbb
push
retf
or
xor
or
push
xor
cld
cmp
sbb
or
push
lods
outs
mov
lods
js
cmc
and
into
pop
or
out
gs
jmp
mov
lods
push
mov
sbb
jbe
pop
mov
out
sub
xor
ds
iret
push
xlat
and
xor
(bad)
daa
in
scas
push
ror
ins
mov
push
xlat
sub
jno
inc
test
push
push
push
hlt
ds
jg
cwde
retf
imul
or
lahf
bound
xchg
mov
pusha
scas
mov
mov
mov
push
jne
mov
out
or
cmc
and
stos
xchg
inc
mov
sbb
dec
cli
cmp
inc
rcl
inc
lods
fwait
cwde
dec
shl
or
hlt
push
enter
cmp
mov
loop
adc
add
pop
retf
jp
fwait
jb
lahf
je
xchg
push
mov
enter
mov
je
jp
push
add
hlt
ss
sbb
ret
lahf
gs
xor
push
arpl
neg
sbb
popa
jmp
fld
cmp
fbld
cmp
jae
pushf
outs
mov
xor
jae
jns
cld
and
cmp
pop
fdiv
jno
add
dec
test
mov
mov
(bad)
mov
or
pusha
mov
shl
pop
clc
jnp
cmp
movs
mov
and
inc
xlat
pop
cmp
and
hlt
and
lods
jle
inc
mov
and
push
sub
cmp
add
call
into
ds
sub
cmp
xchg
shr
xor
and
psrad
add
jo
xchg
jp
imul
jae
jp
dec
or
mov
test
cmp
or
out
sub
popf
inc
test
rcr
mov
aaa
loop
repz
inc
lock
jmp
cmc
and
push
push
jmp
loopne
enter
les
sub
pop
movs
(bad)
dec
iret
lock
sub
pop
mov
inc
test
inc
add
push
fldenv
xchg
mov
call
mov
jae
adc
sbb
sbb
scas
js
cmc
das
cli
xor
dec
fiadd
std
mov
jno
test
mov
in
add
adc
sub
sar
sti
pop
mov
ds
(bad)
add
dec
or
sub
stos
mov
mov
jo
add
loopne
loopne
adc
mov
cmps
jle
sti
and
aad
adc
xor
lds
cli
and
mov
inc
rol
xor
pop
fistp
ss
pop
fstp
pop
out
pop
lods
sahf
outs
fstp
out
cmp
das
cmc
xchg
fadd
adc
mov
jne
push
(bad)
daa
sbb
cmp
push
mov
mov
hlt
aaa
jecxz
out
in
int3
xor
rcl
fisub
pop
sbb
push
sub
sbb
xor
push
(bad)
xor
push
stc
and
clc
pop
shufps
push
inc
mov
iret
lock
in
stos
test
add
adc
aaa
std
push
ficom
push
fsub
retf
push
lods
inc
sar
dec
mov
add
cs
push
test
mov
jmp
idiv
jns
push
in
std
push
sbb
loop
ss
push
fnstcw
push
ret
mov
mov
push
mov
pop
mov
lods
xchg
imul
sub
es
mov
cmp
cmp
adc
and
pop
movs
inc
out
sub
jmp
mov
sbb
adc
pop
aam
adc
add
iret
dec
or
add
out
add
sar
and
cdq
ror
jbe
nop
sahf
push
mov
shl
inc
mov
sbb
adc
cs
loop
stc
sub
inc
(bad)
xor
out
pop
mov
jge
jnp
lea
shl
pop
inc
pop
push
out
fiadd
push
sub
ret
xor
xchg
sub
jge
jl
jbe
(bad)
lahf
gs
sahf
call
les
push
pop
sar
and
and
mov
mov
test
and
and
and
push
(bad)
in
pop
sbb
addr16
add
ja
arpl
inc
mov
out
inc
mov
imul
popf
gs
in
mov
fmul
in
sbb
push
cld
or
jmp
mov
inc
xchg
dec
lods
jno
inc
int3
cs
dec
ror
add
cmp
ds
pop
fld
into
xchg
test
sub
cmp
jmp
sub
or
nop
xchg
lahf
lahf
push
ss
xor
or
or
fld
jmp
clc
and
jno
pop
int
cld
sub
mov
dec
imul
dec
mov
mov
ja
sahf
cdq
fadd
and
or
(bad)
out
ds
daa
sbb
dec
lds
fwait
pusha
fsubr
push
cmps
xchg
imul
xchg
jp
fwait
jb
lahf
je
xchg
push
mov
enter
jno
and
push
xchg
dec
mov
jge
sub
cmp
test
xchg
cdq
pushf
arpl
aaa
lds
dec
mov
les
fldenv
adc
out
or
jb
cdq
popa
test
cmp
(bad)
sub
stos
jl
out
sbb
test
in
xor
das
ret
dec
mov
lock
adc
and
mov
push
movs
inc
ficomp
push
in
sub
loopne
shl
cmp
sub
daa
outs
xlat
cmp
or
and
cmp
dec
mov
shl
jmp
in
ds
or
nop
lods
imul
jp
xchg
jns
mov
mov
pop
out
ds
xor
(bad)
xor
pop
rol
or
jecxz
mov
mov
sahf
sar
jns
add
test
and
cmp
mov
mov
aaa
paddb
in
xor
pop
fsub
shl
sbb
scas
ins
mov
push
test
pop
cmp
cmp
inc
mov
jae
xchg
push
push
(bad)
xor
sub
sbb
pop
mov
cdq
jge
call
sbb
inc
xchg
mov
inc
fnstenv
lds
pop
test
cmps
lahf
mov
lods
inc
fidiv
fisttp
add
cmp
aaa
sub
sbb
mov
std
sub
nop
mov
aad
stc
cs
cmp
push
push
xchg
data16
pop
test
lahf
popa
rol
jne
jae
pusha
scas
mov
inc
mov
loopne
mov
add
push
jmp
repz
xchg
push
aas
jmp
jbe
jge
leave
push
shl
dec
rcl
jge
or
or
enter
ret
pop
scas
ja
hlt
or
out
inc
in
and
cli
push
mov
mul
pop
out
push
mov
adc
lea
cmp
in
test
in
ficom
push
fisub
shl
test
ins
mov
nop
(bad)
pusha
ficomp
lea
sbb
mov
retf
cs
or
push
mov
xchg
outs
cmp
mov
into
push
mov
ret
xor
out
dec
mov
js
xchg
(bad)
cmp
es
mov
bswap
add
sahf
dec
fsub
pop
repz
mov
mov
call
call
mov
jmp
mov
xor
or
add
dec
test
add
push
aad
pop
(bad)
pop
test
cld
cmp
scas
pusha
mov
xchg
lea
sub
xchg
jnp
pop
mov
fimul
cdq
cdq
xchg
aaa
add
add
movs
jno
xchg
xor
sub
add
pop
stc
pop
cmps
mov
cmp
(bad)
or
adc
inc
adc
adc
xchg
fs
jp
rol
mov
mov
sub
adc
popa
movs
jle
inc
int3
pop
les
mov
push
lods
push
mov
test
jno
jg
pop
shl
inc
in
jmp
adc
out
xor
xor
dec
lods
push
fst
mov
dec
mov
movs
jg
call
dec
frstor
or
mov
inc
movs
in
xor
and
inc
int
mov
stos
test
ins
ds
dec
cmps
inc
imul
adc
pop
cmps
push
test
mov
aas
loope
mov
dec
mov
push
test
or
stos
retf
jno
jge
jbe
fs
pop
jmp
inc
leave
or
mov
ins
mov
(bad)
out
frstor
sbb
xor
outs
rcr
(bad)
mov
retf
jle
add
cli
or
cli
lahf
outs
rcr
and
xor
fild
sub
or
dec
into
dec
es
les
shl
dec
mov
sbb
sahf
xchg
sahf
fnstcw
lds
ins
mov
jne
test
push
fld
jmp
dec
fldcw
arpl
ja
mov
fnstsw
inc
rol
push
sbb
into
lods
inc
int
in
xor
add
jge
aaa
out
das
push
adc
les
push
call
repnz
ins
movs
mov
rol
push
xlat
pop
aam
fidiv
inc
and
dec
cmps
xor
and
cmp
pop
cmp
push
stc
inc
shl
xchg
outs
int
stos
xchg
xchg
sub
mov
jmp
fwait
arpl
lea
push
test
loopne
jmp
and
ss
inc
icebp
mov
mov
mov
fidiv
push
sbb
jl
jbe
and
loop
sub
adc
adc
mov
jl
js
cdq
imul
in
xor
push
rcr
pop
sar
push
or
cmp
loope
sbb
jmp
add
sub
stc
and
push
xlat
and
pop
enter
aas
in
loopne
or
adc
push
cmps
adc
outs
ret
pop
mov
loop
sar
xchg
xchg
xchg
lods
test
pushf
ins
xor
loop
into
es
in
pop
mov
jns
xor
jecxz
adc
in
push
mov
cwde
push
jne
dec
repnz
adc
push
fist
dec
out
sub
pop
fild
out
sub
out
sbb
cmp
adc
inc
int
mov
mov
out
push
fbld
xchg
xchg
adc
sti
or
and
pop
ret
pop
rcr
adc
dec
ficomp
cmp
sub
sti
push
cmps
ror
jl
jae
pop
cmps
lea
and
ins
(bad)
jle
adc
dec
fcom
scas
xchg
xchg
int3
jge
pushf
lods
mov
mov
jb
push
mov
in
fnstcw
shl
fild
pop
xor
push
mov
lock
pop
rcl
test
xchg
mov
mov
jns
jo
inc
into
es
dec
jo
xor
je
data16
arpl
add
or
pop
adc
or
ret
jecxz
mov
test
inc
sti
dec
aad
sar
lods
arpl
inc
or
dec
ret
and
cli
inc
hlt
jge
and
or
stos
mov
test
push
or
adc
jecxz
mul
push
adc
inc
int3
inc
leave
fs
jle
ss
daa
in
push
fild
sbb
or
or
push
in
pop
lods
mov
push
js
shl
(bad)
and
and
jmp
cmp
add
jmp
mov
les
jle
xchg
mov
icebp
ins
jmp
inc
jmp
ins
fld
ss
and
cs
mov
imul
loop
movs
data16
repz
fild
jge
mov
repz
jbe
pop
(bad)
sub
fs
das
sbb
sub
adc
cmp
sub
adc
das
or
pop
shl
cmp
int
int3
addr16
cmp
pop
cmps
call
add
add
enter
cmps
mov
jle
test
call
test
jbe
outs
mov
pop
test
mov
xchg
ins
test
movs
adc
cmc
fs
sub
mov
pop
iret
data16
mov
and
out
jl
and
pop
xlat
dec
sar
(bad)
or
pop
cld
dec
repnz
neg
sub
jmp
retf
add
cmp
and
and
add
jecxz
loope
cmc
push
clc
jg
jbe
pop
(bad)
js
arpl
xchg
sbb
pop
int
(bad)
sub
jmp
aam
add
sti
push
lds
xchg
arpl
inc
in
pop
fiadd
pop
cld
dec
(bad)
xchg
rcl
and
sbb
sub
repz
stc
dec
repz
stc
cmp
and
inc
repz
in
das
push
pop
(bad)
xor
fbstp
mov
fld
dec
sti
sub
stos
xchg
call
fild
jle
inc
in
je
pushf
xchg
ja
push
fbld
cmp
adc
pop
in
mov
dec
jmp
push
xor
out
dec
or
imul
dec
les
outs
mov
cmp
inc
movs
xchg
and
fistp
cdq
inc
mov
fiadd
xor
ror
lods
jp
enter
sub
jge
jnp
js
imul
sub
pop
mov
fisub
add
and
jb
or
(bad)
push
(bad)
fidiv
(bad)
jns
inc
movs
push
or
icebp
pop
push
adc
in
adc
aaa
adc
pop
aam
jecxz
sbb
dec
shl
jmp
shl
in
push
fadd
lds
sbb
cmp
lahf
jns
jae
cwde
mov
inc
fiadd
stc
jns
jne
bswap
adc
adc
daa
retf
mov
out
inc
cld
jg
sub
cmp
add
add
sbb
sub
sub
inc
repnz
(bad)
dec
aad
ss
in
sar
(bad)
jbe
imul
push
std
xchg
lods
cdq
push
cmp
sbb
lock
pop
call
jle
int3
inc
mov
comiss
cmp
retf
lds
pop
mov
lahf
lahf
jne
push
je
repnz
fmul
pop
mov
hlt
pop
ret
out
xor
enter
mov
mov
test
idiv
loope
sbb
dec
mov
mov
lods
(bad)
jp
jl
fwait
push
mov
call
sbb
mov
lock
pop
ds
pop
sbb
mov
jge
movs
jne
dec
fisttp
and
sbb
mov
push
inc
lds
jb
dec
retf
pop
stos
xchg
jns
imul
sahf
arpl
das
movups
lds
jnp
out
fiadd
loopne
mov
jge
xor
cmp
mov
xchg
outs
mov
pop
add
add
xor
pop
lods
inc
mov
pop
aam
mov
(bad)
sub
push
ficomp
fldcw
inc
stos
js
xor
pusha
mov
and
push
xor
xchg
sahf
xchg
nop
inc
sti
and
jl
and
xchg
stos
cmp
lods
xchg
inc
and
sub
sbb
jmp
dec
xor
cmc
dec
mov
cmp
push
xlat
pop
cmp
rcl
rcl
jo
mov
test
stos
cdq
sti
inc
(bad)
cmp
xor
add
adc
xchg
jo
pop
test
iret
sar
data16
fldenv
leave
mov
cmc
pop
mov
and
dec
scas
mov
jge
inc
test
push
test
push
shr
das
add
or
loopne
std
daa
out
add
sub
hlt
pop
add
sbb
pop
cmps
mov
stos
xchg
sar
xor
daa
pop
cmp
in
lds
xor
dec
fild
add
cmp
adc
mov
xlat
jns
ficomp
push
iret
jg
ins
cld
movs
mov
(bad)
mov
out
jae
dec
(bad)
inc
call
push
dec
ror
jb
loop
adc
mov
inc
fsubr
push
sti
dec
iret
je
mov
dec
jmp
sar
int3
lahf
xchg
mov
xchg
mov
test
push
adc
xchg
in
pop
std
pop
retf
xor
and
dec
retf
outs
movs
xchg
xchg
fimul
dec
ret
jl
imul
cmc
sub
cmc
je
pop
into
xchg
push
shl
sbb
adc
out
dec
or
add
sbb
or
cmp
pop
loope
cdq
mov
push
mov
pop
std
mov
pop
retf
mov
aam
stos
cwde
imul
mov
stc
jge
xchg
pop
aas
xor
pop
enter
sbb
sbb
jge
inc
mov
sbb
adc
jge
scas
xchg
mov
popa
retf
inc
mov
in
out
out
push
ficom
pop
retf
jo
fs
dec
rcl
dec
fisttp
cwde
arpl
xor
ins
(bad)
addr16
inc
ret
push
cmp
and
out
push
mov
in
mov
or
push
loope
bound
push
scas
js
(bad)
sub
jecxz
mov
cmp
sbb
jmp
pop
fst
jae
push
dec
movs
fsub
cmp
(bad)
mov
movs
call
xchg
arpl
dec
mov
add
adc
push
stos
xchg
gs
fsub
dec
retf
sub
add
add
cli
push
cmps
sahf
cwde
int
mul
jmp
retf
push
(bad)
xor
cs
ror
aaa
sbb
in
test
mov
aam
cmps
outs
mov
sbb
(bad)
add
popf
jmp
add
and
dec
fist
in
ret
xchg
mov
jnp
xor
stc
xor
push
enter
dec
retf
cmp
add
inc
shl
cmc
mov
xchg
enterw
test
ret
pop
sar
pop
ret
xor
in
ror
add
test
mov
test
xlat
and
pop
test
xor
or
xor
and
test
(bad)
dec
ror
dec
add
xchg
push
add
and
lahf
ins
rcl
div
outs
inc
adc
push
and
sbb
mov
push
outs
jo
mov
call
mov
(bad)
mov
and
adc
mov
pop
xchg
mov
sbb
enter
lock
cmp
mov
push
jmp
or
or
jge
popf
ficom
test
or
ficom
jle
movs
add
mov
inc
pop
rcr
dec
mov
mov
inc
cmp
jle
in
pop
sub
push
sti
lock
adc
cli
test
scas
out
sub
in
pop
je
push
addr16
jle
xchg
adc
loope
inc
call
cmp
add
ss
and
lods
pop
outs
not
mul
add
into
dec
hlt
ds
cli
and
adc
repnz
ret
aad
cmp
shl
mov
pop
test
mov
stos
fsubr
inc
nop
push
mov
mov
xlat
or
rcl
arpl
outs
sub
adc
and
(bad)
adc
push
not
dec
xchg
popf
call
fucom
rcl
jae
sbb
(bad)
mov
adc
popf
cmc
xor
sti
mov
fbld
or
lods
sbb
xor
sub
fisubr
inc
sub
es
xor
mov
mov
in
sub
(bad)
fisub
push
jle
xor
loop
inc
add
shl
out
jns
cmc
inc
inc
xor
xchg
pop
mov
adc
stos
add
dec
daa
popf
adc
jp
fsubr
ds
sar
cmps
jp
jg
inc
into
jmp
je
outs
fmul
das
fcomip
xlat
popa
cld
imul
jg
push
(bad)
enter
sub
mov
arpl
pushf
sbb
(bad)
push
fdivr
pop
imul
and
jbe
repz
pop
aad
iret
dec
mov
xor
vsubps
dec
sahf
jno
vucomiss
ins
and
dec
jle
ret
or
stos
aad
(bad)
push
sbb
ds
dec
enter
pop
jle
fcom
pop
rcr
es
jp
xchg
stos
dec
dec
sub
sub
mov
or
loop
ja
ret
ret
mov
push
push
gs
xor
pop
or
and
pop
jae
inc
loope
mov
stc
ins
inc
mov
pop
dec
mov
js
shr
es
test
mov
and
push
hlt
jg
push
and
js
das
push
icebp
mov
fiadd
dec
jne
or
fst
add
and
dec
cmps
(bad)
xchg
cmp
and
repz
loop
mov
loope
lahf
pop
cmc
mov
jnp
cwde
push
cmc
jnp
cld
dec
loopne
add
out
jg
push
aaa
xor
jl
add
imul
repz
xchg
int3
sub
or
push
jp
jp
cmps
jl
addr16
icebp
sub
push
mov
or
fwait
pop
div
cmps
inc
cli
(bad)
je
inc
xchg
aaa
repz
fild
fwait
out
jno
lahf
es
jl
test
fld
adc
pop
fisttp
es
test
stos
(bad)
rol
retf
(bad)
cs
add
push
jb
jne
cmp
(bad)
dec
(bad)
add
xor
mov
je
sbb
mov
out
inc
imul
mov
inc
lock
add
push
inc
add
data16
rol
shr
(bad)
mov
cmp
cmps
sbb
and
pop
out
cmp
jb
push
inc
int3
fsub
add
retf
pushf
inc
das
jns
daa
jbe
mov
jle
cmp
test
loopne
data16
add
mov
mov
lea
xor
sbb
inc
fild
mov
test
daa
popa
loope
hlt
xor
mov
push
push
js
cmp
add
jp
mov
rcr
pusha
push
call
ret
push
and
(bad)
jne
cmp
add
cwde
(bad)
jl
pop
pop
mov
mov
fst
fs
ins
xor
lahf
call
xor
(bad)
dec
jl
push
loopne
xchg
push
pop
ret
jnp
mov
or
jge
push
push
(bad)
fsub
adc
pushf
enter
ror
ins
jnp
(bad)
adc
(bad)
or
test
mov
jns
in
out
dec
dec
(bad)
or
sbb
sbb
cdq
pop
imul
je
xlat
cmp
inc
es
or
mov
xchg
fwait
push
fwait
(bad)
and
daa
outs
mov
inc
jae
addr16
jae
sahf
fld
mov
or
sub
imul
outs
addr16
stc
je
xor
ret
mov
fsubp
cmp
xor
or
pop
test
cmp
fidiv
addr16
mov
(bad)
mov
cmp
mov
cmc
rcr
cmp
jae
rcr
push
leave
inc
cs
xor
pop
gs
std
adc
(bad)
shl
(bad)
sar
out
and
dec
loop
xchg
fisub
outs
mov
push
add
inc
jnp
mov
(bad)
mov
push
inc
loopne
jo
lahf
mov
add
mov
and
jae
test
enter
adc
bnd
rcl
add
inc
jno
adc
and
pop
addr16
and
retf
hlt
gs
mov
xor
xchg
jno
push
cmc
outs
jl
imul
xor
xchg
inc
lahf
imul
lods
test
pop
imul
inc
xchg
pop
into
xor
inc
xor
inc
jl
ja
mov
rcl
shl
or
aad
or
sahf
inc
mov
lds
(bad)
jo
cmp
jno
into
cmp
push
loop
pop
fcomp
dec
rcr
push
leave
push
clc
inc
xchg
dec
inc
push
sub
inc
or
les
je
xchg
xchg
iret
mov
jp
inc
call
outs
test
pop
fisub
fisub
push
xor
fisttp
jns
lahf
xchg
pusha
sub
pop
mov
dec
mov
and
mov
imul
push
push
or
outs
call
jbe
nop
mov
mov
and
adc
sar
push
sub
rcl
sbb
aad
out
push
icebp
cdq
(bad)
in
add
int
inc
loop
cdq
out
push
outs
mov
js
enter
jnp
dec
inc
jns
js
out
(bad)
and
stos
das
xor
jg
bound
jmp
in
mov
jl
mov
push
fistp
je
cmp
int3
cli
xor
mov
lahf
sbb
loope
stos
pop
push
or
jle
inc
(bad)
lea
movs
or
sub
gs
sar
add
jno
push
xchg
shr
jle
mov
cmp
cld
pop
pop
call
cld
push
jmp
sbb
mov
pusha
loopne
mov
cmp
jbe
repnz
cmc
inc
mov
dec
xchg
add
mov
cmp
pop
push
xor
fwait
imul
and
adc
shr
mov
xor
lahf
dec
and
test
fst
xor
jmp
pop
adc
das
xor
cmp
fbstp
sub
push
add
mov
int3
icebp
hlt
adc
adc
sbb
mov
xchg
mov
nop
test
inc
adc
sub
inc
bound
mov
les
xor
fadd
loopne
xchg
dec
ja
(bad)
sbb
and
pop
ja
std
outs
les
and
sbb
dec
sti
inc
in
xor
cmp
jg
and
push
pop
stos
dec
in
aad
cwde
sti
inc
xchg
adc
neg
mov
cmp
inc
addr16
leave
pop
das
pushf
xchg
dec
add
addr16
mov
imul
nop
jle
movs
xor
push
xor
cmp
mov
xchg
jmp
push
ret
sbb
or
push
xlat
xor
mov
xchg
adc
pop
cmp
dec
dec
push
nop
adc
les
(bad)
rcl
or
inc
and
sbb
icebp
mov
mov
cmps
jp
pop
xchg
aad
aaa
push
outs
xchg
shl
(bad)
es
jecxz
dec
mov
pusha
inc
add
add
cmp
or
lds
pop
dec
pop
mov
js
xchg
sbb
mov
cmp
dec
retf
pop
dec
mov
add
push
in
sbb
dec
scas
das
call
inc
lods
mov
jae
test
imul
int3
aam
add
test
js
add
retf
add
sbb
mov
sti
adc
aaa
icebp
lds
mov
ja
sub
mov
push
jle
mov
loop
out
(bad)
addr16
jnp
add
hlt
adc
lahf
xchg
push
add
jb
fnstsw
and
rcl
mov
call
pop
(bad)
outs
out
mov
pop
sub
cmp
adc
add
mov
inc
test
shl
ror
mov
mov
adc
adc
pop
out
or
leave
mov
ret
mov
addr16
jle
jg
shl
imul
lahf
aam
(bad)
(bad)
inc
dec
xor
leave
fisub
cmp
fidiv
and
mov
int
dec
in
jge
cmp
pop
ds
fwait
adc
aaa
adc
movs
sbb
adc
mov
and
and
add
inc
fsub
in
xchg
jno
mov
test
bound
sbb
mov
jle
and
stc
daa
cmp
dec
mov
jb
or
inc
mov
lods
or
sbb
push
dec
frstor
push
cmps
pop
ja
sub
and
jnp
je
xchg
push
and
(bad)
add
daa
push
mov
mov
xor
out
cwde
lahf
mov
push
adc
stos
jle
xchg
fild
xchg
inc
es
xchg
xor
rcr
cmps
stc
cmps
xchg
adc
push
pop
mov
mov
push
mov
icebp
dec
jns
sub
dec
fsub
outs
fs
(bad)
pusha
mov
nop
mov
xchg
mov
cld
xchg
push
mov
int3
cdq
data16
scas
xor
mov
in
or
push
cmp
shl
es
sub
cmp
sahf
or
cmp
movs
ja
fcomp
repnz
xor
(bad)
fisubr
shr
xchg
ja
movs
mov
and
push
clc
push
dec
sub
dec
fistp
(bad)
fmul
sbb
cmp
mov
les
(bad)
xchg
xchg
jnp
xchg
nop
push
movs
mov
stc
xchg
dec
sub
imul
lods
pop
inc
popf
das
rcr
ffree
mov
adc
fisubr
ds
inc
stc
mov
push
cdq
pop
push
jge
sub
dec
jb
mov
fstp
jno
push
(bad)
icebp
dec
mov
push
fdivr
shl
and
mov
dec
pop
movs
loopne
xlat
mov
inc
movs
test
movs
mov
cmp
lahf
daa
das
retf
mov
push
icebp
xlat
or
lds
mov
popf
inc
sub
dec
pusha
push
xor
loop
fwait
ret
and
adc
lods
pop
jno
mov
inc
es
jp
movs
cmp
(bad)
push
mov
cmp
aam
loopne
xor
mov
pusha
fldenv
jl
mov
and
cmps
jns
mov
or
test
popa
push
cmp
mov
es
into
call
ins
lods
(bad)
cmp
dec
jo
mov
pcmpgtw
aaa
mov
or
sbb
xor
fsubr
mov
mov
xor
xchg
sbb
jno
or
in
xor
movs
xchg
lods
xor
xor
jns
dec
xchg
dec
push
add
adc
stc
mov
je
push
pushf
and
leave
sub
sbb
sahf
fwait
sbb
in
in
dec
(bad)
xor
mov
div
int3
dec
popf
setl
cld
xor
cmp
dec
lock
and
(bad)
or
inc
cli
ss
xor
sbb
pop
(bad)
addr16
xchg
or
aas
add
jl
neg
mov
fmul
xchg
ds
retf
pop
aam
and
and
vrsqrtss
pop
xchg
sbb
mov
lds
push
pop
dec
mov
popf
outs
cld
or
sub
sar
dec
popf
dec
rcr
iret
or
out
push
jp
mov
and
sub
push
lahf
sub
xchg
cwde
enter
aas
sbb
xchg
(bad)
cmp
mov
push
pushf
adc
nop
mov
mov
mov
mov
xor
mov
xchg
add
cmps
clc
and
leave
jns
mov
stos
pop
push
jge
and
mov
mov
ja
test
stos
ins
cwde
inc
dec
push
nop
call
fcmovnbe
aaa
cs
out
arpl
adc
out
fs
adc
inc
sbb
jae
arpl
js
mov
or
mul
out
(bad)
mov
std
jmp
imul
mov
jns
into
jle
popf
lds
movs
nop
hlt
push
aad
mov
xchg
and
and
jno
mov
jae
ret
adc
cmp
dec
jne
movs
mov
stos
shl
mov
push
dec
loope
mov
sar
cmps
in
aad
not
stc
aad
sbb
ins
outs
aaa
sbb
push
inc
cwde
(bad)
fwait
dec
add
mov
sub
push
mov
cli
push
repnz
and
in
pop
jno
aaa
cmp
xor
iret
fimul
mov
std
sub
jo
lock
ss
push
dec
gs
push
cmp
inc
jle
into
mov
jo
pop
cli
sar
pusha
adc
sti
cmp
outs
inc
mov
arpl
cwde
dec
or
sbb
jg
in
or
cmp
int3
rcl
scas
and
(bad)
cli
lods
dec
ficomp
add
dec
cmp
inc
inc
and
inc
jne
pop
pop
add
fs
ret
sub
in
inc
xor
dec
jl
lea
dec
pop
inc
sbb
jb
cld
push
jb
or
and
imul
les
push
pop
dec
sbb
int3
add
stos
into
fmul
dec
ins
xor
repnz
mov
add
pusha
into
mov
pop
ja
mov
data16
out
test
mov
out
dec
push
cld
in
iret
iret
mov
rol
jo
jo
std
cmps
and
shl
mov
cmp
adc
outs
dec
jl
mov
xchg
ret
mov
pop
hlt
repnz
jo
icebp
ss
iret
push
cmp
fsubr
mov
jg
pop
sub
dec
ins
mov
mov
test
and
aam
pop
jne
sbb
fisub
arpl
cmp
pop
inc
loopne
mov
mov
imul
cmc
push
cmp
scas
test
addr16
(bad)
jg
push
sbb
jb
daa
mov
das
mov
xor
jmp
cli
xor
pop
jmp
adc
pop
fnstenv
mov
adc
lods
xchg
mov
xchg
add
stc
xor
test
pop
fild
(bad)
fnstsw
test
and
sub
out
or
push
inc
fadd
mov
addr16
xor
or
ja
jp
pop
sub
(bad)
jmp
imul
ins
pop
xor
iret
in
cwde
xor
mov
inc
jns
je
push
or
jne
or
sbb
push
ficom
fistp
dec
inc
add
mov
push
cmp
adc
sar
arpl
call
cmp
inc
daa
sub
xlat
inc
sub
dec
ins
mov
js
jae
cmp
pop
ret
cmp
loopne
mov
stos
scas
dec
hlt
mov
in
mov
jne
sbb
jmp
dec
add
(bad)
dec
lea
cmc
mov
imul
outs
xlat
add
imul
std
add
(bad)
mov
push
dec
movs
je
out
cwde
adc
push
scas
mov
stos
out
pusha
and
js
pop
push
sbb
push
mov
pop
out
adc
push
and
stos
xchg
popf
or
movs
das
xchg
test
mov
pop
outs
push
pop
int3
jecxz
pop
fsub
mov
cmp
not
xor
dec
mov
test
shr
test
movs
stos
in
mov
stc
inc
add
xchg
div
jne
jns
call
add
add
xchg
neg
adc
ret
xor
in
cs
fbstp
cmp
or
jmp
shl
enter
add
imul
cmp
movs
push
dec
pop
mov
xlat
add
cmp
ja
xor
pusha
pop
pusha
jae
cwde
std
mov
pop
rcr
emms
jne
ins
and
add
es
push
sbb
pop
aaa
or
rcl
rcr
pop
iret
add
retf
sub
aaa
add
inc
test
in
add
pop
fnsave
rcr
repz
pop
scas
(bad)
aaa
xchg
sbb
js
mov
aas
cmps
ja
adc
repnz
int
inc
aam
push
jb
jmp
mov
mov
adc
loop
dec
ins
cmp
popf
pop
mov
cmp
or
xor
mov
adc
outs
(bad)
sbb
test
and
fisub
out
scas
sub
push
push
jbe
push
mov
add
dec
dec
cmps
shl
shl
icebp
mov
xchg
adc
add
add
adc
out
inc
mov
mov
data16
add
nop
dec
jge
push
pop
push
mov
adc
mov
ds
xor
or
test
jo
xchg
dec
aam
repz
push
mov
fldcw
idiv
and
stc
sbb
sub
fst
jb
adc
xor
cmps
rcl
xchg
arpl
lock
xor
std
adc
div
std
(bad)
cdq
sub
rcr
and
fadd
or
imul
retf
aam
test
fwait
or
outs
or
push
inc
inc
dec
mov
lds
pop
xchg
cli
sub
repnz
push
mov
ja
dec
pop
movs
inc
pop
call
pop
(bad)
call
pop
sub
shr
pop
ret
xlat
ds
xchg
mov
addr16
mov
inc
out
inc
out
in
retf
fsubr
jmp
(bad)
sbb
cld
cmp
int3
mov
js
shl
inc
jne
cmps
adc
mov
retf
lahf
push
jo
cmps
mov
push
sbb
stos
popf
sbb
cmp
loopne
push
sahf
dec
mov
aaa
movs
mov
loopne
or
mov
or
lods
push
jl
repz
adc
iret
aas
shr
lds
in
or
dec
mov
pusha
lods
jo
mov
stc
mov
dec
popf
cmp
icebp
ss
dec
aaa
xor
in
dec
cmc
cmp
das
mov
mov
test
xchg
es
call
mov
mov
(bad)
jle
jecxz
inc
loope
add
sub
add
fsub
aam
loop
inc
(bad)
shl
out
std
test
movs
push
leave
xchg
inc
test
xchg
jecxz
xchg
sbb
push
inc
mov
mov
jne
ins
xor
out
(bad)
jmp
xor
in
sti
add
xchg
push
add
jno
cmp
cli
popa
mov
push
and
sbb
push
dec
adc
pop
jnp
dec
adc
inc
test
push
cmp
xchg
xchg
enter
hlt
js
inc
(bad)
test
test
les
cmps
(bad)
movs
fiadd
and
push
mov
dec
push
jo
mov
pop
stos
pushf
xchg
icebp
mov
mov
retf
pop
dec
add
retf
inc
aad
sbb
pop
imul
add
mov
jmp
in
xor
stos
repnz
inc
xchg
cmc
xor
inc
fstp
and
clc
cwde
movs
xchg
(bad)
and
dec
xor
push
shl
rcr
lds
jne
or
pop
pop
ins
mov
add
sub
cmp
jl
pop
sbb
dec
mov
cli
inc
push
cmp
ret
jg
push
xor
adc
loopne
or
mov
lods
rcr
aam
dec
cmp
dec
sub
pop
ret
xchg
jne
lock
call
jno
mov
scas
shl
ret
pop
mov
adc
inc
or
pop
add
pop
cmp
fadd
mov
inc
and
icebp
rol
jp
data16
or
cmp
mov
sbb
(bad)
fmul
ins
or
ss
scas
dec
cmp
pop
fistp
cmp
loopne
retf
test
xor
jns
pop
cmp
(bad)
movs
mov
inc
add
jb
fstp
sbb
sbb
ins
sbb
pop
xor
fstp
xor
and
push
shr
xchg
popa
adc
(bad)
sahf
fmul
je
pop
sub
(bad)
(bad)
jmp
aam
movs
retf
test
mov
aas
pop
add
xchg
repz
gs
sub
pop
xor
push
xor
jne
fwait
ret
mov
imul
push
jg
and
push
ss
and
cmp
dec
sub
push
mov
test
fs
add
push
pop
cmovs
data16
mov
aas
pop
sbb
stc
repnz
pusha
adc
push
inc
and
and
loopne
hlt
sub
jns
inc
les
es
sub
sahf
clc
popf
stos
aad
icebp
popa
aaa
dec
daa
push
loope
mov
mov
stos
cmps
adc
ins
push
and
inc
sub
push
push
jae
aaa
jle
cwde
in
mov
and
call
test
stos
aam
mov
sbb
pop
aaa
inc
cmp
call
push
push
aas
inc
sub
dec
ds
aas
dec
push
xor
mov
mov
push
ds
shr
xor
sub
adc
pop
fcom
xchg
inc
add
push
push
out
adc
ins
vmwrite
cmp
icebp
mov
jle
test
clc
jg
(bad)
inc
adc
ss
jmp
sti
sbb
push
xor
std
test
mov
inc
xor
inc
stos
ror
cld
mov
mov
test
add
sub
iret
mov
mov
mov
jl
xchg
(bad)
jbe
arpl
add
mov
stos
fsubr
fs
mov
mov
in
xor
cmp
outs
sbb
loop
jb
and
and
repnz
and
dec
adc
xor
push
jl
mov
xchg
repnz
xor
jnp
data16
sub
dec
es
jge
push
xor
out
sub
jo
jnp
je
cmp
add
pop
pop
inc
or
(bad)
jl
pop
sbb
mov
xchg
mov
das
xor
test
inc
hlt
test
pop
scas
or
sti
mov
push
gs
aad
shr
loopne
call
int
aad
push
push
cmp
dec
int
int3
jp
mov
fwait
(bad)
jb
fdivr
fwait
std
and
xchg
sti
jno
mov
rol
push
jmp
cmp
les
inc
aas
pop
jecxz
out
inc
aas
push
sub
in
les
in
repz
adc
clc
xchg
xchg
ficomp
cmp
dec
sbb
nop
jmp
clc
or
pop
and
les
sub
aad
(bad)
popa
add
and
pop
mov
xor
popf
std
nop
out
mov
add
(bad)
fcom
jbe
jno
cli
mov
popf
mov
push
xlat
push
cmp
retf
sahf
int3
outs
add
stos
ret
push
xor
xor
sbb
stos
test
lds
add
out
enter
jbe
pop
add
push
push
jnp
(bad)
mov
into
gs
xor
and
jb
sub
push
adc
daa
adc
sbb
inc
cmp
xchg
xchg
mov
dec
in
dec
pop
je
test
or
jae
icebp
mov
cs
jg
adc
sbb
data16
and
and
ds
xor
push
or
imul
or
sub
cwde
movs
(bad)
mov
ret
imul
mov
xchg
sar
xchg
ins
push
dec
aaa
xor
mov
jmp
add
fist
inc
lods
leave
mov
arpl
inc
sub
sub
mov
mov
mov
adc
aas
loope
push
jle
xor
push
adc
inc
fdiv
cmp
push
jecxz
dec
das
push
adc
in
mov
into
stos
call
minps
rcr
sti
add
test
movs
iret
movs
cmps
ret
sbb
or
shl
dec
out
lock
push
cdq
std
nop
push
pop
pop
or
or
stc
sahf
dec
or
popa
add
jl
mov
and
jae
pop
sub
out
daa
outs
or
nop
cli
cdq
clc
jo
loop
inc
inc
out
and
mov
or
sbb
out
(bad)
loopne
fnsave
pop
jmp
enter
push
dec
pop
js
in
outs
push
jnp
cwde
inc
daa
and
jns
mov
and
ja
cs
mov
clc
push
and
inc
mov
cwde
sti
test
scas
add
xchg
out
xchg
sti
or
push
add
mov
adc
clc
scas
inc
adc
cmp
pop
or
adc
pusha
or
dec
sub
lock
sar
pop
lods
into
mov
jo
xchg
popf
icebp
nop
mov
dec
daa
dec
punpckhdq
jbe
lods
mov
pop
cmp
and
sub
mov
inc
sub
and
cmp
mov
or
aaa
pop
sbb
fbld
scas
out
clc
jle
mov
icebp
mov
lods
lds
(bad)
int3
xor
add
stos
sar
jo
and
mov
movs
stc
xchg
jmp
jmp
mov
les
jmp
pop
push
cmp
jnp
inc
aad
sub
mov
inc
aaa
inc
fcmovnb
lods
(bad)
xchg
fstp
scas
cli
mov
xchg
cmc
pop
adc
pusha
mov
mov
mov
scas
int3
sahf
retf
xchg
ja
data16
test
lods
mov
add
ja
inc
sub
pop
iret
stos
jmp
sub
es
mov
pop
cmp
jno
je
mov
test
and
ds
or
jbe
jno
and
out
fidivr
mov
popa
(bad)
lods
mov
adc
push
dec
adc
imul
loop
les
icebp
xchg
fistp
jnp
popa
psubsb
push
add
and
pop
sbb
dec
jmp
test
das
and
and
imul
cli
mov
mov
push
inc
and
xor
pop
jecxz
cld
push
dec
sub
cmp
retf
ja
int
aad
in
nop
and
(bad)
lods
add
add
ss
imul
cmp
test
mov
stc
arpl
mov
out
xchg
(bad)
dec
rol
rol
aam
into
dec
sub
inc
adc
jnp
jl
lds
jns
jle
push
dec
loopne
das
push
pushw
xchg
repnz
push
icebp
xchg
(bad)
mov
addr16
and
pop
sti
bound
inc
cmp
lds
mov
call
jmp
retf
xchg
fcomp
cmp
and
pop
jmp
mov
jecxz
repnz
cmp
jmp
sub
dec
sbb
cmp
das
push
arpl
gs
dec
pop
push
pop
xor
ins
cmp
xchg
retf
mov
push
adc
scas
(bad)
test
in
xor
push
sbb
or
sar
mov
lods
ror
mov
sub
push
dec
pop
sub
jb
jo
in
ret
scas
mov
mov
xchg
jmp
cmp
xor
sbb
sub
push
in
xchg
repnz
sub
cmc
lahf
hlt
test
mov
mov
ss
sub
movs
jmp
xor
js
mov
cmp
test
and
(bad)
loopne
and
and
aaa
push
sbb
adc
rcl
mov
call
cmc
xchg
(bad)
in
mov
outs
pop
js
and
lock
sub
add
jnp
ins
out
(bad)
(bad)
imul
mov
mov
xchg
or
adc
scas
in
xchg
sahf
std
pusha
add
jmp
push
loop
(bad)
js
push
and
dec
push
bound
inc
adc
dec
and
(bad)
xchg
jmp
enter
push
sbb
repnz
jmp
loope
popa
das
pop
lods
dec
lock
(bad)
imul
sub
adc
and
cmps
call
add
loop
les
and
jns
adc
and
les
mov
mov
jl
dec
adc
pop
sbb
mul
sahf
ins
ficomp
out
popa
bsf
and
jle
es
pusha
or
jl
iret
inc
sub
std
jne
dec
xor
pop
aaa
pop
aas
ins
sub
icebp
and
jge
pop
and
pop
xor
(bad)
imul
fwait
stos
(bad)
jb
out
lds
pop
and
sar
aaa
pop
in
je
(bad)
test
mov
xchg
clc
xor
push
xchg
push
cli
mov
mov
cmp
aaa
jno
ja
jle
lock
loop
int3
pushf
ret
popw
jle
pusha
jmp
or
pop
sub
sub
scas
rcl
movs
mov
inc
sub
cmps
rcl
adc
sub
sub
daa
inc
aaa
arpl
jge
xchg
lods
enter
push
inc
imul
and
imul
push
pop
add
push
cmp
jmp
push
add
push
loop
pushf
(bad)
mov
push
(bad)
or
cmp
push
cmp
pop
loope
hlt
test
call
pusha
adc
xchg
ret
popa
pop
icebp
pop
sbb
aas
gs
fiadd
mov
nop
imul
sar
or
movs
sti
mov
xchg
fsub
sbb
dec
cmp
cmps
into
mov
lods
repz
fsubr
je
and
adc
lods
jmp
and
daa
pop
cmp
xchg
clc
mov
repnz
ror
call
loop
into
xchg
mov
jo
push
jle
int3
idiv
cmp
out
mov
cmp
dec
xchg
(bad)
xchg
fsubr
pop
sbb
add
shl
outs
ss
cmp
inc
sbb
jnp
imul
mov
pusha
(bad)
mov
and
scas
jmp
jb
mov
mov
lahf
neg
int
in
inc
sbb
or
push
gs
cmp
xor
out
pusha
push
ja
sbb
(bad)
retf
fwait
cmc
mov
push
xor
loop
inc
aam
and
and
push
adc
not
xchg
or
bnd
iret
scas
mov
js
adc
and
imul
in
jg
cmps
out
(bad)
(bad)
mov
jle
sahf
fstp
jge
xchg
fiadd
push
pop
cmp
push
jbe
test
pop
add
jo
dec
xor
daa
add
prefetch
sub
push
lahf
(bad)
mov
push
pop
ins
or
out
or
loop
idiv
in
mov
lahf
mov
cwde
ret
adc
js
jge
pop
sub
sahf
movs
retf
xchg
and
es
daa
sbb
dec
adc
push
test
mov
push
sbb
push
call
add
pop
sub
xor
mov
or
push
add
push
pop
pop
aas
jl
in
cmc
das
jge
sub
es
leave
cmp
popa
xor
inc
sub
popf
mov
mov
outs
daa
pop
and
out
out
aad
or
xor
and
xchg
rcr
adc
fwait
(bad)
mov
fisttp
aas
and
jg
pop
loopne
jp
pop
cs
loopne
int3
mov
bound
inc
cs
cs
cmps
lds
xchg
lods
call
push
imul
xor
push
cmp
pop
jb
jl
mov
cmps
retf
cmp
ret
test
mov
int
fcomp
mov
test
mov
mov
xchg
mov
push
adc
js
jp
pusha
repnz
fdivr
jns
and
jecxz
les
jb
xchg
cld
daa
dec
xor
push
aas
push
mov
(bad)
bound
adc
jle
pop
cmp
push
or
and
std
fwait
div
sbb
sbb
jbe
push
loope
lods
fild
jb
push
xchg
xchg
movs
popa
cmp
(bad)
cld
outs
xor
pop
dec
fnsave
mov
inc
xor
jb
enter
push
jnp
sub
pop
test
mov
cdq
cmp
retf
xchg
dec
dec
call
adc
xor
ins
push
imul
and
push
aas
xchg
ficomp
jge
mov
mov
jbe
xchg
sti
cdq
ficom
popf
cld
lahf
clc
jbe
imul
sbb
enter
loopne
aaa
sub
jle
jo
gs
xchg
clc
popf
mov
dec
sub
dec
lea
xor
inc
sub
xor
mov
mov
(bad)
cmc
mov
mov
cmp
cs
push
jp
or
ins
loopne
test
arpl
inc
daa
jae
cs
inc
sbb
daa
and
js
mov
pushf
dec
sub
aaa
sub
pop
(bad)
cmps
(bad)
lods
push
aaa
dec
push
pop
adc
mov
mov
nop
icebp
cmp
sbb
(bad)
les
imul
scas
int3
call
movs
call
mov
es
sbb
push
lods
fld
ins
in
push
cs
das
ins
or
pop
repz
add
imul
sbb
cmp
inc
ss
jl
bound
mov
into
mov
mov
cwde
(bad)
jnp
in
in
or
jp
popa
xchg
retf
cdq
sti
xchg
pop
jnp
imul
xchg
rcl
and
or
ins
or
xchg
mov
or
add
mov
jne
outs
sbb
jns
pop
sbb
mov
imul
cdq
sti
mov
mov
mov
cmp
out
sub
sub
and
push
jle
imul
xor
ret
lods
aam
cmp
pop
add
push
push
or
in
add
and
xchg
mov
xchg
mov
adc
stc
xchg
fdiv
sbb
jns
jae
out
jne
inc
das
rol
lods
out
nop
mov
pop
push
pop
sti
jnp
movs
lock
fbld
mov
xchg
icebp
adc
ja
push
cli
mov
mov
js
pop
xor
pop
cmp
addr16
xchg
jmp
push
adc
jns
xor
adc
sbb
sub
push
cmp
ins
jmp
sbb
cmps
(bad)
mov
and
and
jg
mov
std
xchg
fistp
push
push
lods
inc
sub
add
sbb
loopne
pop
sbb
push
fwait
mov
clc
xchg
outs
sub
or
xchg
lds
imul
and
out
(bad)
in
(bad)
jae
enter
jmp
add
imul
cmp
jns
dec
adc
dec
ret
shl
or
push
dec
loop
(bad)
xlat
sahf
(bad)
xchg
lods
mov
rcl
mov
sub
stos
sar
dec
(bad)
sbb
pop
and
push
sbb
push
pop
push
sbb
xor
mov
add
dec
sub
cmp
and
cld
dec
sub
es
test
mov
xchg
inc
or
sub
dec
in
mov
and
jl
jo
jle
out
cmp
ret
sti
mov
xchg
fistp
sub
inc
cmp
jb
mov
xchg
test
push
push
push
and
pop
and
and
jmp
xor
clc
pop
and
mov
nop
(bad)
fwait
jmp
(bad)
mov
mov
fild
shr
jb
int
adc
loop
sub
pop
lock
js
mov
xchg
mov
jnp
adc
pop
or
pop
aas
shl
or
cmp
pop
fistp
outs
adc
and
pushf
rol
mov
mov
ret
xlat
mov
sub
not
imul
ficom
rdmsr
and
pop
mov
adc
pop
adc
ja
lods
aam
sti
mov
adc
outs
mov
or
add
push
sbb
dec
sbb
push
xor
adc
pusha
push
imul
mov
mov
sub
jge
imul
inc
daa
dec
cmp
imul
adc
(bad)
mov
xchg
and
push
das
push
sbb
push
dec
das
aas
mov
mov
dec
mov
movs
stos
int
gs
std
mov
addr16
xchg
in
jne
jnp
xchg
pop
push
cmp
sub
inc
sub
push
cmp
sub
adc
test
mov
popf
ror
add
inc
xor
xchg
ret
push
adc
daa
pop
int3
cdq
aad
in
xchg
fld
in
(bad)
neg
mov
mov
and
mov
ret
sub
xchg
neg
and
adc
and
test
sti
cwde
cld
mov
(bad)
retf
mov
jo
imul
mov
cmps
lods
dec
push
bound
pop
cmp
xchg
mov
cmc
lahf
push
jo
dec
loopne
mov
pop
pop
push
xor
or
pop
das
neg
or
push
xor
xor
jb
imul
jno
outs
sysenter
cmc
mov
lea
pop
cmp
js
xchg
test
inc
add
movs
call
cld
mov
inc
outs
or
cmovp
pop
xor
jno
xchg
fnstsw
mov
mov
popf
shl
mov
push
arpl
scas
jle
movs
iret
nop
ret
mov
sahf
shr
sub
push
add
les
jb
ficomp
cmp
sahf
in
adc
jns
xchg
rol
bound
add
jge
sbb
or
xchg
and
pop
mov
mov
jbe
test
stos
rol
inc
or
rol
inc
xor
call
xchg
aaa
push
sub
xchg
fbstp
cs
outs
or
fst
sub
or
fcom
lock
stos
stos
sar
mov
jmp
xchg
ret
mov
int
jecxz
out
scas
sti
arpl
pop
sub
pop
xor
push
push
sbb
call
pop
cmp
push
xchg
xchg
cld
and
sbb
sbb
stos
mov
jno
mov
adc
pop
cmp
repnz
stc
nop
clc
mov
jmp
mov
dec
push
dec
xor
push
addr16
inc
lods
lods
retf
mov
mov
adc
and
pop
add
out
scas
out
shr
js
jle
addr16
adc
push
loop
out
dec
jnp
arpl
(bad)
stc
xchg
jae
mov
ret
nop
push
xor
xor
je
sub
sahf
dec
or
mov
inc
or
les
cmp
dec
sub
inc
pop
add
xchg
push
add
mov
add
retf
mov
jne
cmp
mul
mov
addr16
shl
stos
fisubr
adc
or
pop
push
aas
leave
cdq
in
xchg
mov
dec
or
ret
fidivr
inc
or
arpl
dec
xchg
mov
ss
movs
retf
mov
mov
daa
push
in
and
push
jecxz
fsubr
hlt
mov
test
cmp
outs
push
inc
sub
int3
or
in
jmp
dec
jmp
adc
jmp
jmp
arpl
dec
cs
subps
out
retf
test
mov
mov
xor
push
cmp
(bad)
into
ins
add
dec
sbb
adc
(bad)
fwait
mov
outs
repz
emms
sbb
sbb
repz
jb
ins
sti
cdq
(bad)
nop
sub
bound
jns
jae
jl
shr
cmovge
cmp
push
add
push
or
hlt
jne
mov
xchg
arpl
mov
and
hlt
in
or
push
cmp
pop
cmp
lahf
cmc
sahf
stos
mov
movs
in
test
into
lods
icebp
das
jnp
pusha
out
adc
rcr
repnz
dec
pop
and
cmp
adc
loope
out
(bad)
xlat
sub
stc
mov
popa
mov
test
mov
cld
mov
mov
sub
lds
xor
inc
and
pop
push
pop
sub
ins
rcl
jbe
mov
scas
aam
and
rcr
(bad)
lods
into
addr16
pop
fdivr
pop
sbb
and
icebp
xchg
mul
mov
das
sub
cmc
or
rcl
rol
shl
xchg
mov
loope
clc
push
movs
in
(bad)
jae
pop
aaa
dec
sbb
pop
xor
cmp
push
or
xchg
aam
pop
push
xor
push
cmp
add
int3
iret
xchg
retf
pop
sub
bound
dec
or
aad
fidivr
aaa
push
pop
cmp
xchg
(bad)
mov
nop
pop
test
mov
xchg
enter
jb
jb
sub
jnp
mov
sub
daa
out
mov
scas
ror
fistp
jp
imul
sub
adc
mov
inc
rcl
cwde
neg
gs
jmp
bnd
dec
aas
xor
sub
jno
inc
scas
into
mov
nop
dec
loope
loope
movs
mov
jae
or
pop
xor
mov
cmc
test
iret
jns
jnp
pop
in
test
sub
mov
mov
scas
fistp
push
in
js
icebp
xchg
rcr
icebp
pcmpeqd
xor
adc
jne
pop
sub
into
mov
mov
fwait
jmp
mov
ret
aas
sub
stos
adc
lahf
inc
shl
push
out
pop
cmp
stc
mov
xchg
stos
stos
shl
das
jbe
push
mov
retf
test
addr16
pushf
in
retf
outs
sub
xor
mov
psrlw
push
stc
mov
sbb
(bad)
loopne
dec
retf
mov
mov
stc
xchg
les
pop
cmp
mov
sub
push
cmp
sar
pop
or
dec
loopne
retf
ss
sub
retf
mov
imul
xor
test
mov
jmp
jno
(bad)
in
jge
mov
mov
jge
sub
call
fstp
mov
jle
mov
mov
sub
xor
rcl
ja
je
daa
in
lock
fldcw
jae
lock
outs
add
inc
sub
sub
jg
jle
pop
adc
add
fbstp
in
cmp
imul
fwait
retf
test
mov
or
and
aad
shr
adc
jge
fstp
pop
imul
cmp
xchg
mov
adc
jmp
shl
mov
mov
and
pop
add
das
dec
mov
xchg
jmp
push
daa
outs
or
and
adc
mov
push
pop
inc
cmp
push
out
pushf
dec
add
jp
mov
add
popa
push
into
mov
mov
inc
adc
call
mov
pop
xor
popa
jecxz
out
mov
call
sahf
jmp
out
jno
jne
rcr
into
scas
lahf
ror
ss
xor
scas
into
mov
ja
pusha
add
add
xlat
fwait
jle
and
iret
mov
push
push
pop
vmread
xor
fldenv
pop
mov
scas
cld
xchg
stos
(bad)
push
inc
repz
xchg
icebp
mov
dec
sub
xlat
lahf
repnz
mov
lods
in
xchg
mov
push
in
add
jno
leave
test
or
pop
xor
bnd
lods
stc
mov
and
scas
iret
mov
stos
lds
add
inc
or
data16
inc
sbb
out
repz
dec
adc
daa
les
shl
add
sbb
cmp
dec
or
dec
movs
mov
mov
xchg
fs
aam
fld
aam
mov
xchg
rol
inc
aaa
inc
xor
ins
pop
rcl
stc
lods
jmp
out
xchg
mov
sahf
jmp
stos
jmp
cmc
nop
ror
lock
vmread
sbb
adc
and
out
into
or
sahf
int3
xchg
into
sbb
cwde
mov
jb
push
jmp
int
jecxz
mov
add
scas
jmp
pop
xor
lds
or
test
push
cmc
or
push
xor
js
aam
call
xor
inc
cmp
fiadd
les
rep
int3
mov
mov
arpl
inc
lock
dec
sbb
movs
mov
jg
xchg
mov
arpl
or
push
cmp
xchg
loope
fistp
add
loopne
and
inc
jmp
sbb
xor
retf
mov
xchg
fwait
mov
aad
sti
xchg
(bad)
xchg
fsub
dec
cld
xchg
retf
mov
scas
jmp
ja
ins
add
cmp
mov
sbb
jbe
outs
sbb
inc
or
mov
(bad)
test
inc
adc
jle
pop
out
shr
dec
add
cmps
fld
(bad)
mov
mov
movs
fimul
push
dec
scas
test
mov
cs
cmp
shl
mov
rep
out
cmovge
adc
gs
cmp
sub
xchg
cmc
mov
and
aas
dec
ss
sbb
dec
adc
dec
and
sub
jge
push
stos
fnstsw
sbb
xchg
lods
dec
sub
add
mov
pushf
call
jmp
popf
movs
(bad)
adc
out
outs
out
mov
in
(bad)
mul
ins
add
shr
and
ss
test
fnstsw
arpl
(bad)
repz
outs
es
pop
jge
xchg
div
push
xchg
sti
pushw
jbe
inc
fstp
loopne
dec
xor
cmc
mov
jo
jle
jle
scas
(bad)
scas
les
push
scas
mov
shl
pusha
loop
je
xchg
lock
imul
mov
(bad)
ret
and
subps
inc
sbb
mov
call
call
xor
cmp
sub
das
adc
sbb
push
in
jns
nop
(bad)
arpl
loope
sub
mov
fwait
(bad)
outs
loop
ret
mov
xchg
ror
ds
xor
mov
fs
fwait
lock
xchg
ficom
push
xor
xor
sub
out
add
jg
outs
fisttp
cmp
adc
es
vmwrite
(bad)
jno
cmps
lds
xor
push
sbb
jp
pop
mov
jb
push
sub
enter
push
icebp
outs
push
jl
pop
mov
mov
call
test
push
pop
ror
sbb
push
xor
cmp
ss
pop
pop
jmp
std
sahf
xrelease
(bad)
in
aad
dec
sbb
xor
cmp
in
stos
loop
jbe
cwde
neg
push
sub
outs
ss
adc
fidivr
jl
gs
cwde
in
retf
mov
cmp
sub
sbb
dec
or
std
mov
xchg
mov
xor
popf
cmc
xchg
sti
add
push
cmp
add
mov
push
lock
push
push
(bad)
enter
fdiv
sbb
(bad)
xor
dec
or
push
push
fldenv
inc
int3
arpl
mov
cmps
int3
xchg
test
(bad)
xchg
scas
fidivr
mov
pop
add
jl
outs
adc
ds
dec
push
loope
cmps
les
fdivr
(bad)
movs
imul
mul
mov
xchg
stos
(bad)
xchg
rcl
or
mov
xchg
test
mov
mov
out
mov
mov
adc
ss
add
addr16
xchg
(bad)
arpl
icebp
mov
stos
push
ins
or
add
fcom
test
test
mov
call
jle
jbe
sahf
int
mov
and
cmp
inc
aaa
bound
dec
aaa
push
adc
nop
fistp
push
(bad)
cmc
hlt
sahf
gs
cdq
retf
adc
jecxz
mul
sti
pushf
fistp
ds
bound
inc
add
fadd
daa
push
or
mov
push
call
xchg
lahf
fnstcw
dec
xor
loop
or
mov
movs
shl
dec
cmp
adc
jecxz
mov
pop
dec
add
jb
ror
ror
cmp
cmp
sbb
sti
outs
call
mov
add
mov
sahf
dec
pop
or
xor
mov
mov
stos
shl
add
popa
adc
xor
dec
or
sbb
or
cs
ins
cmps
stos
aad
fisub
mov
mov
xchg
out
fadd
pop
out
mov
bound
xlat
push
ror
imul
adc
pop
sbb
int
aad
out
mov
mov
in
stc
lahf
xlat
bound
fs
test
nop
cmps
mov
fsub
(bad)
mov
sbb
fs
sub
enter
mov
mov
dec
aaa
jecxz
icebp
mov
cmps
inc
add
add
cmp
adc
movs
in
mov
outs
loop
dec
in
iret
mov
mov
cmp
rcr
push
and
sahf
xlat
test
push
and
(bad)
push
jae
lods
fbstp
jnp
xchg
cld
fwait
dec
sqrtps
dec
retf
leave
imul
push
dec
add
xchg
call
leave
mov
in
out
(bad)
cmps
stos
fidivr
and
cmp
bound
add
adc
inc
cmp
mul
cli
inc
jecxz
mov
sbb
and
and
addr16
loop
pop
cmp
sub
dec
cmp
push
test
scas
mov
xchg
in
lahf
out
mov
or
adc
leave
jbe
lahf
fiadd
in
ror
(bad)
pop
jno
outs
or
jle
cdq
ror
ins
fdivr
pop
xor
fs
leave
cmp
test
stos
pushf
in
mov
mov
jl
neg
cs
lock
xlat
pop
xchg
(bad)
mov
daa
sub
adc
call
outs
daa
dec
xor
bound
dec
adc
idiv
lods
(bad)
inc
mov
add
xchg
sbb
bound
jno
test
cmp
or
or
sub
lahf
xchg
jecxz
enter
loop
movs
and
outs
ret
pop
push
jne
icebp
ret
mov
popa
or
adc
cmp
fidivr
movs
retf
xor
add
fs
pop
push
ss
jno
jbe
xchg
mov
mov
xchg
jl
dec
sbb
ja
arpl
ss
ret
cs
xor
dec
sub
pop
cmp
or
int3
mov
cmps
loopne
rcr
pop
je
dec
ss
ror
push
xor
cmps
or
std
fnstcw
fstp
sbb
out
rol
gs
xchg
icebp
mov
mov
test
fdiv
in
mov
popf
jo
sbb
das
mov
cmp
loope
int
fisubr
jmp
repnz
xchg
icebp
mov
sub
xor
in
sar
rcr
fs
jge
aaa
cs
or
(bad)
jecxz
and
cmc
repz
fild
push
dec
pop
dec
sub
cmps
aad
popf
dec
xor
add
fbld
lahf
gs
mov
outs
adc
retf
and
adc
sbb
mov
icebp
test
jp
fdivr
addr16
jno
and
mov
out
mov
lahf
fiadd
push
push
fistp
pop
aas
cmp
sar
push
or
pop
test
push
or
xor
int3
add
sub
xor
rcl
repnz
bnd
repnz
in
clc
mov
mov
mov
mov
jge
repnz
test
xchg
add
jg
scas
xlat
(bad)
lds
dec
adc
inc
pop
inc
aas
jbe
cmp
call
push
pusha
add
outs
es
xor
out
xor
test
into
mov
iret
xchg
jmp
xchg
jnp
pop
jb
inc
cmp
sub
adc
pop
dec
xor
xor
and
push
xor
push
push
push
xor
daa
inc
repnz
cmps
scas
out
test
and
inc
sbb
pop
in
(bad)
mov
inc
cmp
out
add
js
jbe
and
jmp
movs
push
and
or
sub
mov
imul
mov
inc
or
hlt
mov
addr16
sbb
les
jne
push
xor
add
loopne
fidiv
mov
mov
or
inc
or
adc
out
cmp
leave
mov
icebp
test
arpl
dec
sub
pop
loop
clc
xchg
neg
sub
sahf
clc
mov
cmps
cmc
addr16
sti
ins
sub
nop
call
es
repnz
movs
std
pushf
xchg
les
rol
xchg
jmp
pop
inc
inc
xchg
(bad)
sub
and
inc
push
ins
pop
jne
push
or
cmp
movs
mov
mov
jecxz
pop
adc
es
aas
pop
icebp
push
sub
push
outs
aaa
leave
inc
xor
inc
or
bound
push
dec
add
jge
jae
mov
lock
in
les
add
inc
or
mov
mov
fstp
in
mov
movs
jno
pop
cmp
mov
lods
dec
inc
push
pop
add
xchg
lock
les
cmp
mov
sahf
repnz
and
jne
inc
rcr
xor
inc
mov
dec
pop
pop
xor
into
mov
clc
mov
mov
mov
cwde
rcr
push
cs
test
xor
movs
ror
add
cdq
stc
mov
jno
mov
xchg
cli
pop
dec
aaa
pop
cmp
cmps
cwde
les
inc
and
fs
push
jl
dec
pop
inc
cmp
fisubr
(bad)
jmp
out
mov
jle
and
sbb
lock
shr
cmc
mov
outs
cmp
xchg
test
int3
ins
xlat
xchg
hlt
xchg
imul
sbb
cld
mov
xchg
fadd
adc
cmp
ret
add
or
mov
shl
or
pop
pop
and
js
fs
push
scas
ret
mov
mov
fbstp
in
sbb
sub
sti
cdq
mov
push
sub
sbb
popf
rol
and
repnz
das
les
mov
jmp
xor
push
repnz
test
push
loopne
jmp
sub
add
mov
clts
dec
aas
pop
test
mov
xor
inc
add
pop
sbb
rcr
inc
daa
or
mov
call
jg
dec
cmp
nop
aam
stc
mov
dec
ds
mov
movs
xchg
(bad)
xchg
dec
jecxz
xchg
fisub
into
xchg
mov
test
outs
cmp
retf
gs
icebp
adc
(bad)
mov
jmp
hlt
lods
scas
int
out
cwde
cli
xchg
xchg
movs
fbstp
test
and
and
fisttp
inc
clc
or
push
call
dec
cmp
shl
movs
aad
fimul
inc
or
out
push
jae
push
or
inc
out
sbb
daa
and
push
push
sbb
or
clc
popf
inc
sub
test
mov
dec
dec
pop
xor
bound
pusha
sbb
mov
mov
jo
outs
loope
icebp
push
sub
sub
mov
gs
push
daa
jne
add
or
ja
fsubr
xchg
mov
popa
xchg
mov
and
inc
adc
sub
xchg
jmp
(bad)
cmp
mov
jl
scas
lds
push
fidiv
pop
pop
jle
xchg
stos
retf
cs
add
cmc
into
mov
mov
fadd
cmp
xchg
cmp
inc
cmp
jo
add
jns
add
push
ss
inc
mov
cwde
neg
repnz
pop
cmps
jmp
(bad)
jp
test
jno
mov
pop
jle
push
xor
clc
movs
in
test
pop
add
dec
loope
sahf
lock
clc
add
dec
and
repz
nop
fadd
outs
or
jg
es
int
ret
mov
imul
mov
cmps
enter
or
clc
sbb
push
loop
push
cmp
inc
in
test
push
sub
add
popf
xor
dec
sbb
in
cmc
popa
or
and
or
inc
clc
mov
and
scas
(bad)
mov
mov
fist
out
mov
or
pop
(bad)
mov
xchg
push
and
pop
cmc
cdq
xor
sub
push
push
mov
sbb
jl
lods
fdiv
dec
add
mov
jmp
pop
fistp
int3
xchg
push
cmp
push
jbe
jo
mov
ret
jp
pop
push
push
or
(bad)
mov
mov
ficom
fs
dec
jno
push
inc
loop
fdiv
or
ins
div
mov
mov
add
fnsave
xchg
rcr
inc
pop
gs
iret
mov
scas
rol
rcr
mov
movs
fist
lock
clc
pusha
sbb
das
rol
lods
out
nop
dec
and
jbe
and
js
pop
push
xor
clc
xchg
hlt
popf
mov
cmps
into
imul
nop
fcom
iret
scas
jmp
test
mov
scas
stos
xchg
pushf
iret
mov
mov
jle
test
lahf
not
mov
mov
out
mov
mov
(bad)
mov
daa
fld
aad
fld
cmps
hlt
cmps
rol
addr16
cmp
push
rcr
add
xor
jae
pop
cmp
jb
jl
and
pop
ss
add
sub
cli
xor
pushf
dec
test
push
mov
lock
mov
repnz
retf
mov
add
dec
cld
out
jo
jno
jb
sub
adc
and
or
lds
es
out
arpl
mov
xor
in
add
inc
mov
retf
mov
sahf
pop
cmp
cs
scas
fidivr
push
xor
lock
jge
pushf
imul
movs
(bad)
sub
add
mov
(bad)
mov
push
pop
scas
pop
cdq
clc
or
std
nop
xlat
or
jns
inc
pop
and
push
shr
mov
cwde
fidivr
pop
xor
movd
jae
and
add
inc
jmp
sbb
sub
xchg
cmps
mov
and
movs
retf
fld
sub
fisttp
cmc
or
loop
in
maxps
call
in
fstp
dec
add
sbb
movs
rcl
push
xchg
mov
mov
jmp
mov
gs
sbb
ins
ins
sub
fs
pop
lods
cli
mov
mov
imul
mov
adc
mov
retf
jbe
sub
movs
jae
inc
mov
sub
and
xchg
pop
pop
pop
inc
cmp
in
mov
scas
enter
jnp
jns
jo
jmp
pop
adc
es
pop
jbe
lock
fwait
mov
out
(bad)
ror
or
mov
ins
xchg
les
lock
mov
gs
loop
shl
cli
adc
fstp
push
stos
into
fwait
iret
mov
sub
int
push
ss
scas
sti
out
xor
and
scas
loop
xor
arpl
imul
inc
add
inc
add
jecxz
jecxz
sti
stos
jecxz
push
sar
jbe
repz
cmc
sahf
enter
rcl
(bad)
cli
sbb
jnp
inc
and
in
mov
cmp
cs
or
test
jge
push
push
cmp
test
je
outs
das
dec
mov
jae
ins
mov
les
stos
enter
pop
ds
dec
xchg
clc
daa
daa
dec
setno
sbb
lods
fmul
inc
jecxz
ret
sub
mov
cdq
repz
test
lahf
std
scas
dec
outs
cmp
ins
sub
call
add
(bad)
cmc
lahf
jecxz
push
pop
iret
sahf
int
push
inc
pushf
cld
out
fist
pop
adc
sbb
xchg
shl
in
cmp
ds
mov
push
push
pop
xor
lahf
repnz
add
mov
push
or
cmp
retf
xor
cmps
leave
test
cwde
js
pushf
ret
scas
retf
sbb
pop
or
retf
ins
and
xor
ficomp
je
adc
in
add
add
enter
fmul
lods
jnp
call
xchg
test
scas
(bad)
add
call
lahf
cld
cmp
add
cwde
std
or
cmp
inc
xor
stos
mov
rcl
cmp
push
mov
(bad)
cmp
xchg
loope
xrelease
fstp
inc
cmp
lahf
cld
xchg
push
ins
or
pop
sub
mov
pushf
loop
push
push
mov
push
mov
mov
rcr
arpl
xor
popf
retf
jle
inc
adc
add
push
dec
sub
cmps
mov
xchg
stc
lods
(bad)
cmp
mov
aad
gs
test
push
ret
cdq
not
mov
(bad)
lods
adc
lds
cmp
cld
mov
and
add
nop
js
pop
ret
cmps
in
sbb
mov
xor
inc
and
imul
inc
xor
movs
dec
icebp
mov
pop
jns
test
mov
out
xchg
or
dec
push
and
call
test
sahf
mov
xchg
enter
add
out
jns
jnp
inc
push
xor
std
mov
jl
xor
in
imul
or
in
xchg
xchg
in
push
adc
sub
inc
push
dec
push
adc
mov
sub
out
mov
jno
push
or
in
push
fbld
inc
sub
aam
adc
sbb
test
xchg
in
mov
mov
loopne
pop
sti
mov
adc
mov
and
ror
pop
and
dec
push
bound
fnstenv
pop
fadd
bound
imul
jae
lds
sbb
in
pop
cmp
sbb
jae
sti
push
push
or
out
adc
jecxz
sub
cmc
mov
cmp
retf
mov
cmp
lahf
and
mov
mov
cdq
repz
mov
inc
mov
xchg
std
dec
xor
dec
mov
out
outs
pop
jge
jg
sub
loopne
sbb
aad
mov
cmp
jmp
scas
test
pushf
jmp
inc
and
mov
je
push
(bad)
iret
dec
sti
mov
inc
outs
std
xchg
leave
xor
mov
mov
push
or
rcl
popa
stos
mov
xchg
jecxz
adc
xchg
loopne
hlt
mov
pop
sahf
int
fcom
scas
test
mov
arpl
pushf
hlt
pop
arpl
push
sbb
jo
inc
outs
or
sub
or
mov
aas
jl
inc
outs
daa
sti
bound
inc
sub
jbe
jmp
inc
add
add
mov
jno
imul
dec
movs
mov
into
mov
hlt
leave
nop
cwde
lods
aam
cmps
fbld
lods
fidiv
inc
cmp
mov
outs
sub
sub
and
push
sub
in
ret
lods
cmc
or
or
or
into
lods
ret
mov
inc
xchg
fist
jge
aad
les
mov
nop
ret
xor
ins
in
xor
data16
imul
shl
xchg
fidivr
shr
jae
dec
sub
arpl
inc
or
xor
cdq
cs
pop
cmp
lods
shl
dec
out
jb
push
jbe
stos
in
shl
(bad)
call
and
les
xchg
jle
pop
int
in
inc
(bad)
loopne
enter
pop
daa
fnsave
mul
bound
popa
daa
(bad)
fwait
pop
clc
sub
fiadd
jo
scas
xlat
mov
je
lods
push
loopne
out
mov
out
icebp
push
xor
int
mov
fnstsw
or
ins
and
ret
cld
mov
xor
xchg
dec
push
into
dec
push
pop
cmp
cmp
shr
movs
fdiv
sbb
inc
sub
dec
pushf
(bad)
xor
jo
push
arpl
scas
retf
xor
dec
ds
icebp
sbb
mov
jnp
fimul
pusha
add
call
sbb
call
(bad)
fdiv
stc
stos
out
push
push
pusha
fidivr
cs
clc
cdq
cli
xor
addr16
mov
dec
add
inc
xor
pop
cmp
mov
fdivr
lea
xchg
fldenv
sbb
ja
(bad)
mov
jmp
scas
xchg
out
or
out
and
ss
or
mov
outs
cmp
movs
sahf
xchg
mov
pop
(bad)
cli
xor
jl
mov
cmp
mov
lods
adc
inc
adc
es
(bad)
sub
xor
pop
dec
sub
xchg
xchg
lahf
(bad)
mov
fwait
jg
out
xor
daa
movs
or
pop
mov
ins
push
xor
cwde
jno
mov
js
push
mov
pop
inc
sub
iret
in
pop
push
cmp
in
icebp
mov
or
push
ss
dec
das
fdiv
nop
clc
or
mov
test
stos
popf
(bad)
mov
ja
retf
test
sbb
push
test
repnz
xor
std
mov
fwait
mov
xchg
(bad)
xchg
push
and
js
jmp
push
cld
add
jbe
jno
jo
addr16
std
test
xor
mov
push
mov
sbb
inc
and
(bad)
mov
(bad)
xchg
fisubr
cmp
xchg
ret
sbb
jne
(bad)
test
xor
xor
aaa
mov
sbb
dec
shr
dec
scas
std
mov
test
nop
fs
fnstcw
inc
(bad)
je
xchg
fstp
dec
fldenv
ins
punpcklbw
aam
xchg
lahf
repz
fnsave
mov
or
inc
add
repnz
test
mov
out
xchg
push
ret
mov
fimul
sub
into
(bad)
pop
or
cld
lahf
cmp
jbe
jl
sti
fwait
cmp
xchg
into
mov
inc
and
mov
pop
push
sbb
add
popa
mov
ss
out
and
sbb
fbld
jno
jo
addr16
stos
cmc
mov
pop
(bad)
pop
cmp
lds
into
xchg
cs
push
enter
mov
(bad)
pushf
adc
sar
lods
out
push
xchg
fdivr
jnp
arpl
iret
mov
jno
fidiv
in
xchg
aad
inc
sbb
in
ret
mov
inc
or
cmp
mov
push
jo
repz
and
dec
push
movs
hlt
sar
inc
inc
lods
into
mov
cmps
push
ds
scas
ret
xchg
es
ret
sbb
cmps
jmp
sti
cdq
fiadd
ins
or
or
es
push
xchg
aad
push
inc
mov
ja
fld
and
stos
sub
or
mov
jns
xchg
(bad)
add
cmc
or
int3
pop
and
fbstp
in
xchg
inc
mov
imul
or
mov
scas
dec
sub
push
sti
or
mov
or
pop
and
xchg
mov
stc
call
sahf
push
jecxz
pop
jge
in
xor
jbe
loop
cmp
(bad)
gs
push
outs
inc
adc
mov
add
(bad)
bt
test
das
fsub
cld
inc
mov
fs
xchg
lds
inc
add
scas
ret
retf
test
cwde
das
or
and
jmp
std
sub
ss
in
push
jno
lock
test
adc
mov
in
xchg
sbb
jmp
pop
mov
mov
and
out
lea
push
sub
out
dec
or
or
out
mov
addr16
cdq
out
js
out
ins
pop
(bad)
xchg
das
jl
inc
adc
inc
or
(bad)
movs
leave
movs
in
adc
pop
sbb
jo
fisttp
retf
sahf
rcr
cmps
push
adc
icebp
loopne
xor
fwait
div
nop
enter
sub
repz
jmp
sub
jo
loop
inc
xchg
clc
xchg
call
jo
jl
mov
aas
popa
add
cmps
(bad)
cmp
neg
jp
sub
xor
mov
aaa
nop
sub
dec
fnsave
push
push
dec
sbb
push
mov
outs
push
aaa
ret
sub
jb
(bad)
cmp
cdq
in
mov
push
fdivr
arpl
pop
pop
sub
mov
lock
cmp
(bad)
push
jnp
ja
popa
das
dec
mov
mov
ins
sub
adc
sbb
xchg
mov
pop
(bad)
cli
push
(bad)
in
sbb
jp
sbb
fmul
push
fwait
push
adc
pop
mov
add
sub
aam
dec
mov
dec
or
jmp
mov
xor
push
test
mov
jnp
shl
cld
push
push
pop
movs
test
gs
cmp
mov
push
cmp
mov
mov
(bad)
call
shl
xor
adc
adc
dec
ins
and
sbb
mov
push
cmp
and
sub
xchg
and
mov
mov
pop
sub
xor
mov
fsubp
mov
das
mov
adc
dec
and
shr
push
add
movs
js
mov
xlat
add
xchg
pop
imul
xchg
stc
clc
mov
jmp
add
div
dec
loope
mov
leave
mov
fst
dec
xor
daa
stos
cmp
inc
das
scas
in
sbb
sbb
push
adc
pop
push
cmp
add
xchg
neg
jbe
add
jge
stc
nop
pop
dec
das
ins
and
fsubr
out
mov
pop
mov
fnsave
sar
imul
jmp
xor
clc
(bad)
cmps
(bad)
aam
jge
leave
adc
inc
add
jmp
adc
imul
sub
icebp
fwait
mov
cmp
mov
and
popf
js
xor
dec
mov
or
xchg
inc
add
sub
xchg
sub
push
cmp
inc
pslld
popa
ds
xchg
xchg
jb
dec
xor
mov
sti
push
sbb
ror
inc
dec
arpl
jnp
arpl
into
fdivr
xor
or
jmp
sar
sbb
lahf
push
mov
xchg
clc
adc
xchg
(bad)
mov
push
sahf
std
or
loop
clc
mov
fidiv
das
or
mov
cmp
inc
and
push
sub
ja
inc
push
jb
imul
and
imul
jp
jnp
or
xor
sbb
dec
xor
cmp
cmps
and
pusha
adc
and
or
mov
mov
ss
add
sub
mov
stos
push
sub
jbe
push
cmp
in
pushf
sub
stos
in
fs
add
or
sahf
xchg
and
add
popa
sub
inc
cmp
std
jmp
test
dec
push
dec
jne
je
repz
into
pushf
call
or
fstp
jno
cmp
cs
pusha
push
dec
sbb
sbb
sub
push
xor
(bad)
cmc
retf
mov
ret
mov
mov
out
mov
pop
push
inc
daa
repnz
dec
ins
or
or
dec
setno
sbb
jge
pop
aas
pop
mov
adc
xor
clc
sahf
ret
ret
pop
xor
add
jb
lds
sub
push
cmps
rol
imul
outs
pop
jge
xchg
(bad)
dec
push
add
mov
in
fcomp
(bad)
popa
push
xor
jbe
and
dec
xchg
(bad)
xor
pop
cmc
mov
imul
dec
dec
push
imul
mov
(bad)
cmps
out
repz
cmp
jb
add
push
xor
in
in
push
data16
(bad)
fmul
fcomp
jle
stc
pop
dec
and
or
stos
pusha
ja
push
jg
(bad)
lahf
mov
jae
fcomp
mov
fstp
xchg
fisttp
mov
enter
jg
jge
sbb
dec
jo
mul
pushf
jbe
xor
xlat
mov
adc
mov
sub
pop
sbb
push
lods
fxch
fidivr
stos
das
addr16
jno
pop
xor
lds
pop
out
xchg
shr
mov
add
inc
mov
inc
js
jbe
loope
gs
aas
jl
mov
call
push
adc
sti
jmp
push
(bad)
int
ret
scas
ret
cmp
sbb
ret
add
dec
and
push
popa
ds
in
cdq
sti
mov
and
aaa
push
cmp
icebp
pushf
in
sar
dec
or
dec
xor
add
mov
repz
and
mov
stos
in
push
sbb
(bad)
adc
mov
bound
fidiv
rol
scas
fisttp
sbb
dec
popf
leave
aaa
push
xor
or
(bad)
in
scas
out
std
jmp
pop
sub
dec
xor
cmp
cmps
mov
loope
ins
retf
shl
mov
es
xor
jle
inc
mov
arpl
inc
cs
adc
mov
cmp
inc
loop
imul
sub
scas
pop
add
push
mov
daa
shl
mov
mov
hlt
call
mov
pop
or
jnp
adc
mov
cdq
retf
scas
es
imul
iret
stos
mov
leave
jmp
and
mov
stos
scas
pop
xor
mov
cmps
clc
nop
and
and
fmul
jb
out
cmp
dec
sub
jl
xchg
clc
mov
and
dec
sub
lods
push
xor
xor
sar
or
mov
into
fistp
xor
inc
mov
es
lods
in
adc
or
push
sbb
arpl
dec
and
or
xchg
js
js
dec
adc
mov
and
push
pop
aaa
cmps
retf
push
cmp
icebp
mov
ret
scas
ret
mov
leave
cmp
push
nop
ret
xchg
mov
int
jnp
test
repz
fld
xchg
ret
inc
xor
lds
adc
xor
or
icebp
cmc
fistp
dec
jnp
xor
and
xchg
icebp
aam
into
mov
cmp
das
dec
or
fidivr
out
sub
pop
and
cwde
fist
pop
or
push
xor
mov
out
xchg
dec
sub
xchg
jecxz
in
call
pop
inc
adc
add
jbe
fs
mov
jmp
or
cmp
pop
and
in
and
jne
jns
sbb
pop
inc
popf
iret
std
adc
or
add
nop
sbb
push
mov
scas
in
hlt
rol
sub
das
or
imul
icebp
xchg
daa
jl
and
movs
fcomp
or
or
xor
mov
cmp
jo
std
lods
cmp
daa
dec
popf
aad
mov
scas
out
(bad)
jl
inc
packsswb
pushf
hlt
pop
arpl
pushf
fimul
fldenv
and
not
popa
pop
cmp
lahf
mov
push
add
repz
(bad)
bound
inc
dec
xor
enter
shr
xchg
ror
ret
xchg
loop
jae
(bad)
mov
inc
xor
mov
pop
sbb
lock
aaa
pop
sbb
pop
push
int3
mov
mov
pop
and
inc
add
dec
pop
scas
ret
js
inc
cmp
push
popf
lock
mov
(bad)
loop
call
cmps
out
test
pop
dec
daa
dec
aaa
push
cmp
and
outs
push
cwde
cli
sbb
outs
or
sub
call
out
cmps
ret
lods
int3
add
mov
cwde
call
rcr
retf
lahf
(bad)
fwait
clc
test
loop
stc
and
jg
push
add
push
data16
inc
subps
inc
and
movs
jge
inc
and
rol
jl
idiv
mov
cmp
loopne
ror
sub
xchg
jecxz
in
call
pop
or
test
in
outs
inc
cmp
jb
mov
mov
mov
das
jp
mov
dec
popw
jge
pop
cmp
jg
pop
add
xor
jns
repnz
mov
sti
mov
sar
pop
pop
jae
mov
dec
xor
sar
dec
inc
pop
inc
sub
and
add
movs
fcomp
movs
sub
addr16
jl
mov
mov
cs
adc
cli
mov
xchg
jo
call
ret
scas
push
push
leave
xchg
aad
pop
xor
xlat
mov
push
push
cmp
push
fisubr
(bad)
jb
jl
fistp
jo
xchg
mov
test
pop
push
sbb
ins
data16
fcom
in
xchg
sti
jmp
cdq
dec
cmp
mov
push
scas
jmp
mov
ror
imul
fadd
adc
outs
jmp
and
push
add
push
fdiv
push
stc
idiv
pop
lock
mov
jns
xor
dec
cmp
or
call
stos
(bad)
xor
and
add
in
into
mov
cmp
dec
or
mov
pop
adc
inc
or
jb
push
hlt
mov
shl
xchg
(bad)
mov
fs
inc
or
inc
sub
jne
inc
sub
inc
add
jno
lahf
shr
mov
ret
mov
hlt
add
xchg
push
add
push
into
out
adc
mov
and
add
xlat
mov
push
xor
out
movs
jmp
add
pop
push
add
inc
add
scas
xor
or
push
sub
or
sbb
adc
mov
(bad)
lods
out
stos
mul
xchg
(bad)
xchg
jno
fiadd
sub
pop
pop
fistp
shl
rcl
lds
cld
mov
xchg
test
xchg
stc
loope
xchg
fidivr
jmp
jge
pusha
sub
lds
push
cmp
(bad)
sti
movs
in
mov
and
fwait
add
sar
mov
ins
push
dec
retf
in
cwde
int
loop
cli
(bad)
xchg
test
push
in
leave
scas
ficom
or
aas
ja
inc
out
xchg
lahf
std
mov
jns
fistp
shr
jb
mov
adc
sbb
pop
and
fsub
pop
inc
push
pop
push
cs
xchg
in
stos
cwde
pop
jge
pop
and
gs
out
sub
and
add
adc
and
pop
sbb
sub
cs
rcl
pop
mov
daa
jne
push
sbb
movs
out
es
dec
xor
or
mov
out
jno
or
and
jl
fwait
mov
adc
fs
bound
gs
es
adc
ss
fdivr
jae
(bad)
bound
pop
movs
shl
lods
sub
and
sub
fsubr
dec
xor
xor
adc
in
call
mov
jle
int
sar
mov
adc
das
push
jns
jmp
or
jecxz
mul
xchg
(bad)
dec
or
or
and
aam
std
or
lds
sar
sub
pop
xadd
out
cmps
ret
push
leave
mov
mov
xchg
(bad)
mov
mov
imul
jl
jmp
xlat
cs
jno
xor
xor
pop
and
mov
leave
test
cmps
iret
add
mov
repnz
mov
xchg
(bad)
mov
pusha
rcr
push
jg
jno
leave
movs
sub
add
adc
or
jmp
je
adc
js
ins
xchg
add
outs
cmp
pusha
sbb
not
or
out
rol
dec
or
ret
ds
call
movs
in
lea
bound
pop
sub
cmp
test
cmp
push
sub
inc
sub
xlat
mov
stos
call
jmp
adc
push
adc
stos
lock
and
pushf
in
sbb
data16
ins
leave
bound
dec
aaa
fbstp
pusha
and
loope
hlt
sub
std
mov
jmp
mov
sbb
push
ret
dec
sub
dec
sub
mov
and
jae
out
jmp
sbb
mov
xchg
cmc
mov
inc
retf
mov
pop
cmp
push
or
xchg
imul
add
mov
adc
mov
fidivr
in
cwde
repnz
inc
int3
sub
or
pushw
jg
je
pusha
and
scas
call
ss
test
(bad)
xor
pop
add
pop
adc
ret
and
cmc
movs
jmp
movs
fdivr
and
dec
xor
jecxz
cli
sub
inc
sub
call
cmps
sbb
pop
mov
mov
xor
mov
mov
in
jp
pop
sbb
inc
or
sti
nop
(bad)
push
dec
aaa
pop
pop
add
cmp
and
pop
int3
call
cmp
out
cmps
cli
xor
add
sub
sahf
xlat
xchg
hlt
cdq
leave
mov
out
adc
into
test
lds
lock
xlat
sub
outs
sti
popa
xor
dec
xor
cmp
lods
jno
jb
aad
(bad)
lods
(bad)
scas
enter
movs
pop
sar
push
sbb
mov
call
sub
cld
xchg
(bad)
mov
xor
call
les
add
shr
jne
lods
cdq
jmp
ss
bound
jmp
mov
stos
lds
cmps
int3
add
mov
scas
cli
cmp
jge
jae
stos
mov
xchg
jge
and
mov
xchg
test
xchg
xor
(bad)
in
add
pop
mov
jle
cmc
and
test
mov
cmp
adc
jmp
enter
sub
lea
pop
pop
xor
adc
sar
mov
daa
gs
dec
or
ins
and
or
jecxz
fbstp
fstp
mov
mov
sbb
adc
retf
inc
shr
push
jbe
shl
aam
jae
stc
mov
jno
out
lea
(bad)
loope
jl
or
(bad)
mov
into
push
pop
ss
int
(bad)
mov
fdivr
xchg
jle
jg
mov
fmul
dec
push
bound
iret
(bad)
mov
dec
and
mov
scas
push
popa
test
arpl
fidivr
pop
and
lods
xor
shl
(bad)
in
js
cmps
out
mov
aam
int3
or
jno
xor
lock
ja
int3
sbb
sbb
push
lods
fmul
and
jne
or
inc
xor
repnz
jb
rol
inc
or
jae
adc
clc
fwait
jecxz
add
(bad)
and
inc
sub
outs
out
mov
pop
sbb
outs
adc
xchg
inc
sub
lds
mov
sub
cld
mov
sub
int
pop
adc
and
inc
adc
add
adc
ja
not
or
call
sub
inc
push
ficomp
pop
das
jp
mov
repnz
loop
shl
ins
and
sub
push
pop
outs
mov
inc
or
not
jmp
xor
jmp
in
push
sub
or
repz
sub
sub
mov
and
sbb
mov
dec
fnsave
mov
adc
enter
push
(bad)
push
sbb
push
fiadd
jge
or
mov
sub
pop
(bad)
leave
into
loopne
lds
push
cmp
retf
test
mov
push
(bad)
mov
es
es
add
xchg
fnstsw
dec
pushf
mov
push
push
sub
movs
mov
mov
gs
jne
mov
outs
xor
mov
mov
cmp
xchg
or
out
dec
cmp
jp
je
in
xchg
div
push
bound
sbb
outs
shl
or
jle
or
stos
aad
in
cmp
jae
(bad)
pop
sub
pushw
pop
sub
xchg
repnz
cld
push
pop
in
inc
sub
mov
(bad)
dec
push
push
mov
jmp
sar
xchg
in
and
dec
mov
mov
out
mov
xchg
bound
js
stc
jno
mov
lods
jno
push
retf
adc
pop
pop
push
xor
arpl
call
adc
or
cmc
test
and
pop
movs
mov
jo
push
mov
lea
dec
add
sub
ss
mov
adc
add
push
sub
into
ins
mov
inc
or
inc
adc
xor
shr
les
fs
fldcw
mov
test
pop
imul
mov
sbb
in
ret
cmp
jge
lods
jmp
iret
xchg
frstor
mov
dec
or
hlt
adc
mov
push
pop
xor
jl
xlat
fild
xchg
mov
adc
pop
call
mov
lods
in
pop
xor
lods
iret
or
pop
push
xor
push
(bad)
pusha
sub
push
inc
add
inc
pop
arpl
adc
push
inc
fisttp
dec
and
es
ds
dec
xchg
dec
ret
xchg
out
std
sahf
cs
sbb
push
outs
jmp
pushf
aam
les
xor
pop
sbb
test
fsub
in
xchg
in
add
out
ret
mov
loopne
fisttp
ins
cmovs
push
lods
iret
mov
mov
dec
mov
pop
and
cmp
and
not
inc
inc
fidiv
arpl
cdq
rol
push
cmps
jmp
mov
push
loopne
loopne
or
pop
push
imul
sub
mov
test
mov
xor
push
mov
push
movq
(bad)
in
xchg
hlt
ss
call
jo
mov
cmps
int
push
xchg
jmp
cmp
adc
mov
xor
stos
lahf
xchg
std
mov
or
push
add
mov
hlt
inc
test
popa
add
cdq
shl
sub
(bad)
mov
arpl
xchg
retf
dec
ss
cmp
retf
push
aas
aam
mov
or
jmp
add
cmps
out
dec
adc
push
mov
push
mov
adc
push
fcom
test
aaa
jo
ficomp
inc
mov
pop
mov
movs
ret
iret
inc
sbb
push
enter
jp
mov
je
pop
cmp
cmps
stos
jns
pop
xor
pop
sub
loop
int
jmp
fnstcw
rol
fist
inc
hlt
push
cmp
dec
lods
shr
mov
pop
cmp
jno
and
outs
sbb
jne
scas
int
inc
and
pop
aam
cmp
inc
(bad)
loopne
inc
sub
(bad)
lds
pop
cmp
cmps
jmp
inc
add
xor
aad
dec
cmp
and
cli
test
mov
xor
push
sub
movs
(bad)
jns
in
push
aas
push
pop
icebp
mov
inc
pop
inc
pop
mov
fwait
shl
mov
ds
jecxz
jb
push
or
and
cld
xor
adc
addr16
push
mov
and
imul
iret
cmp
mov
int
push
pop
lods
push
cmp
enter
mov
test
(bad)
mov
push
or
push
xlat
mov
push
mov
popf
out
push
sbb
mov
ins
add
xchg
xchg
dec
inc
add
pop
push
adc
sbb
neg
sub
addr16
ret
mov
and
mov
inc
and
shl
js
into
xchg
fisttp
pop
imul
add
cmps
fdiv
xchg
jle
ins
aad
adc
sub
pop
or
call
dec
xchg
pushf
std
nop
loopne
pop
daa
sahf
jns
pop
cmp
and
pop
and
xchg
jg
enter
int3
mov
sub
pop
jg
iret
mov
or
out
xor
adc
cmp
popa
test
clc
sbb
js
push
xor
mov
mov
xor
daa
bound
ret
leave
movs
aam
mov
mov
cdq
pop
loope
sahf
shl
fcom
jbe
pusha
add
popa
rcr
addr16
cld
sub
jp
in
test
dec
cs
xor
xchg
add
xchg
mov
je
push
pop
jl
out
pop
jo
cmp
cmp
out
dec
add
xchg
mov
loop
mov
inc
and
jle
ficomp
sti
xchg
mov
aad
fs
data16
sub
cs
and
xchg
(bad)
lahf
sti
mov
inc
sub
xlat
sub
mov
dec
mul
inc
or
pop
test
xchg
jmp
sub
xor
push
dec
add
sub
inc
rcr
js
out
mov
cmp
cdq
leave
mov
imul
cld
mov
test
out
lods
not
cs
in
cmc
cmp
mov
mov
shr
and
or
or
mov
sub
push
mov
push
sbb
ss
adc
push
popf
(bad)
cmp
int
pop
sbb
cld
popf
sub
mov
inc
hlt
cmp
bound
fdiv
dec
daa
inc
and
push
mov
adc
push
push
push
and
(bad)
rcr
add
sub
mov
adc
add
std
scas
loop
sti
push
pop
adc
mov
adc
std
nop
call
repnz
loop
mov
pop
mov
mov
mov
mov
and
xor
pop
xor
jge
in
cld
scas
(bad)
jbe
pop
sbb
xchg
adc
xchg
in
movs
pop
aas
sbb
mov
outs
dec
push
inc
aad
in
pop
xlat
mov
inc
lods
jae
addr16
mov
mov
xchg
inc
or
rcl
jg
fadd
gs
repz
push
fistp
(bad)
movs
and
fwait
(bad)
mov
jge
out
ret
mov
aaa
outs
and
cmp
push
aaa
dec
das
push
sti
xchg
jle
test
add
adc
imul
pusha
and
cmps
retf
cmp
imul
adc
xrelease
popa
ret
xor
fwait
cli
push
pop
cmp
(bad)
lea
xchg
fsubr
jns
lds
aam
int
push
mov
sahf
movd
pusha
call
outs
mov
mov
jge
fs
adc
inc
xor
(bad)
mov
dec
loope
ret
imul
adc
repnz
jp
not
pop
and
in
xchg
(bad)
lahf
int3
loopne
dec
bswap
xor
pop
cmp
mov
lods
mov
ss
jle
pop
cmp
cmp
mov
sbb
rcl
sbb
cwde
mov
inc
lahf
ret
push
loope
clc
sbb
call
jg
loope
pusha
sbb
and
xchg
dec
xchg
mov
test
js
fistp
jle
arpl
lds
sbb
retf
mov
pop
pop
mov
lods
cmp
sub
call
pop
xor
int3
addr16
sbb
dec
sbb
mov
outs
sbb
jbe
aam
push
aas
pop
xchg
jecxz
jnp
in
xchg
mov
pop
das
sbb
xor
push
xchg
mov
jb
mov
scas
fwait
ins
arpl
or
aaa
jle
std
dec
jecxz
int3
cmp
cs
mov
add
shr
repz
mov
sbb
fld
push
aas
cmps
int
dec
and
cmp
outs
or
fiadd
gs
mov
mov
pushf
js
push
push
or
xchg
push
sub
imul
cmp
cld
mov
mov
xor
and
jmp
mov
js
push
xchg
mov
push
jae
imul
addr16
out
data16
js
add
push
and
xchg
int3
test
test
push
hlt
(bad)
in
jle
pop
loopne
in
call
(bad)
pop
xor
cmp
ret
mov
pop
gs
sbb
popf
sar
push
and
shr
icebp
xor
sbb
add
(bad)
pop
enter
retf
adc
outs
add
scas
pop
xchg
fisttp
and
popa
add
or
and
lods
jmp
es
mov
cmp
sbb
add
inc
add
clc
cdq
fiadd
ja
out
fnstenv
test
or
mov
inc
das
outs
data16
adc
adc
mov
call
push
ins
stos
pop
sbb
xchg
push
xor
ret
cmps
retf
mov
das
ins
or
sbb
loop
stc
call
or
ins
ins
push
(bad)
or
push
cmp
mov
mov
in
ror
add
push
xchg
cdq
fidivr
jle
pop
xchg
push
xor
(bad)
popf
stc
mov
(bad)
mov
sbb
cmc
xchg
aam
lds
push
pop
cmps
jmp
mov
sbb
or
jle
(bad)
mov
in
cmp
iret
out
movs
mul
out
test
imul
push
xchg
stc
mov
mov
jne
repz
cdq
std
mov
gs
push
pop
xor
and
jle
fs
push
ins
shl
call
mov
cmps
mov
cmc
xchg
stc
xchg
sar
inc
jb
fisttp
dec
xchg
(bad)
jmp
push
push
sub
mov
dec
push
pop
cdq
retf
sub
sbb
jmp
out
test
gs
lahf
bnd
ret
in
mov
pop
add
xchg
inc
test
lock
in
(bad)
loop
pop
loopne
xchg
and
repz
mov
xchg
ror
xor
(bad)
aaa
mov
lods
in
cmp
out
mov
sbb
sub
sbb
lods
in
inc
daa
pop
jbe
out
and
sub
jmp
and
add
lahf
(bad)
mov
push
jns
or
je
out
gs
sub
clc
pop
pushf
jmp
push
(bad)
stc
arpl
inc
cmp
mul
inc
or
in
cld
mov
and
inc
and
stos
addr16
out
pusha
push
outs
add
mov
push
mov
jo
push
add
mov
les
cmp
push
xor
gs
ret
dec
sub
test
pop
xchg
inc
adc
stos
in
dec
sub
(bad)
nop
das
push
xchg
inc
punpckldq
jo
add
sahf
(bad)
(bad)
push
add
ret
mov
test
jl
jae
idiv
mov
cwde
std
add
push
mov
in
or
pusha
add
xchg
push
call
cmc
cmps
inc
daa
gs
inc
or
enter
adc
popw
scas
ret
nop
stc
xchg
in
(bad)
imul
les
adc
mov
and
cmp
outs
sar
test
mov
xor
dec
mov
fadd
js
cmp
jmp
mov
xchg
sub
jl
addr16
sub
mov
repz
mov
xor
mov
(bad)
clc
sub
retf
inc
add
mov
push
mov
in
(bad)
fcom
xchg
aam
into
mov
clc
xchg
cs
ins
ss
jmp
clc
stos
stc
mov
(bad)
mov
mov
pop
int
shl
xchg
cld
inc
xor
hlt
aad
mov
xchg
fnstcw
inc
xor
dec
std
popf
cs
out
lock
pop
ss
int3
cdq
cld
mov
inc
je
pop
daa
inc
and
jno
lds
add
fsub
add
int3
mov
add
push
mov
add
iret
stos
jmp
pop
adc
shl
dec
sub
out
cmc
lock
lods
in
mov
scas
inc
cmp
cli
stc
fs
push
cmp
cmp
(bad)
mov
(bad)
pop
or
stos
neg
push
pop
sar
(bad)
cdq
and
pop
adc
xchg
sbb
cmp
out
imul
cld
out
add
cs
scas
shl
call
icebp
sbb
or
or
leave
int
daa
lods
aam
icebp
mov
jnp
call
mov
nop
push
cmp
je
in
jno
out
call
shl
ds
in
test
addr16
xchg
out
ja
pop
inc
and
push
mov
mov
dec
pop
add
or
leave
mov
rcl
stos
enter
inc
add
xchg
xlat
mov
pop
adc
adc
aam
push
jle
push
and
add
std
clc
cli
mov
cmp
ret
mov
adc
popa
mov
fdiv
bound
into
xchg
scas
jl
jle
iret
xlat
mov
push
adc
mov
sbb
idiv
mov
test
dec
pop
push
mov
sub
push
or
adc
cmps
out
xor
test
lahf
int
pop
push
shr
fstp
rol
mov
cmp
shl
mov
test
aas
sbb
jg
imul
ja
dec
and
nop
cli
mov
inc
jg
push
sub
inc
movs
mov
xchg
(bad)
cmps
push
ds
sub
cs
sub
and
fiadd
cmp
xor
dec
mov
(bad)
xor
and
daa
sbb
adc
sub
int
xor
xor
add
push
xlat
and
dec
stc
xor
dec
mov
sar
jmp
ins
iret
add
xor
add
sbb
je
cmps
lahf
fwait
inc
mov
jae
popa
iret
xor
cmp
sub
sub
add
adc
aam
push
jl
jl
pop
test
aam
or
ret
ss
ss
jecxz
loope
frstor
ds
push
fild
inc
idiv
or
ds
push
out
jecxz
mov
outs
push
out
xor
add
push
int3
daa
ret
pop
int3
test
ror
xchg
xchg
mov
push
loop
loopne
int
sub
scas
outs
mov
mov
nop
dec
mov
mov
jno
xchg
jnp
lds
mov
dec
and
imul
or
inc
mov
sbb
repz
movs
push
cmp
arpl
lock
les
jecxz
mov
fnstcw
xor
pop
fild
adc
push
push
mov
fwait
fs
mov
push
movlps
sbb
inc
icebp
pop
retf
cmp
cmp
adc
and
loope
push
inc
cmc
inc
ficom
scas
xchg
xor
add
or
push
jl
mov
imul
or
or
rcl
dec
mov
enter
hlt
xor
out
sbb
retf
adc
and
push
test
lock
rcr
das
(bad)
dec
mov
test
add
into
lods
push
aaa
in
in
xor
or
inc
shr
movs
pusha
aam
loopne
push
out
std
and
lock
int3
sub
xor
test
dec
test
or
loope
lods
pusha
ret
pop
fiadd
mov
mov
mov
fidivr
lds
jecxz
outs
fcomp
push
add
cmp
shl
mov
mov
mov
mov
stos
repnz
out
sub
ins
add
(bad)
aaa
leave
and
call
jne
rcr
push
mov
sub
cmp
dec
mov
movs
jp
pop
sbb
and
leave
pop
aam
out
lods
jg
sbb
pop
scas
jb
push
out
or
xor
dec
(bad)
and
sbb
lea
(bad)
sub
pusha
enter
test
xchg
pusha
mov
test
leave
xor
icebp
push
add
leave
xor
ss
xor
into
push
mov
dec
sbb
push
shl
cmp
movs
xchg
lahf
out
cmps
imul
push
mov
cmps
data16
jmp
jnp
jo
rol
inc
movs
xchg
jo
pop
xor
adc
pop
mov
iret
inc
mov
jmp
pop
mov
(bad)
cmp
inc
cli
pop
test
imul
add
and
inc
sbb
or
in
std
push
scas
test
fbstp
pcmpeqw
cld
sub
or
les
and
jnp
adc
cmp
and
pop
test
fdiv
in
sbb
or
adc
push
ins
retf
sub
push
mov
test
out
sub
ja
cdq
rcl
(bad)
ins
into
pop
leave
pop
xchg
fnstsw
fwait
xchg
jo
pop
test
cdq
bnd
xchg
jp
mov
push
fidiv
je
push
xchg
jae
in
inc
lods
nop
push
jg
(bad)
aad
sbb
loope
mov
mov
outs
mov
sbb
xor
stos
xchg
lea
outs
mov
mov
icebp
and
and
xor
sub
pop
mov
jbe
add
rol
cmp
pop
cmps
jl
ins
lds
in
and
nop
jae
fs
push
cmps
mov
sub
add
xchg
(bad)
pushf
mov
xor
loopne
not
in
or
xchg
inc
ss
ds
xor
or
pop
mov
movs
sahf
lea
sub
cmp
push
mov
add
cmc
cmp
cmc
and
das
in
mov
mov
test
push
sti
xchg
mov
mov
fbld
sbb
call
push
add
xor
mov
adc
push
retf
and
push
mov
mov
mov
mov
cmp
lea
pop
fdivr
lea
xor
pop
sar
add
sbb
dec
xchg
jmp
xchg
mov
jmp
cmp
mov
jbe
xor
clc
or
idiv
rcl
adc
and
leave
cmp
mov
into
pop
mov
ficomp
mov
mov
(bad)
or
inc
mov
xchg
call
mov
and
lods
jnp
test
out
push
mov
jae
add
jecxz
rol
test
(bad)
xchg
pusha
(bad)
mov
pop
lea
pushf
mov
sub
and
cmps
lahf
jb
imul
sbb
cmp
retf
dec
ret
pop
fimul
nop
mov
iret
push
fcom
dec
or
(bad)
cs
push
clc
pop
mov
mov
inc
in
stc
pop
fld
adc
mov
or
cmp
xor
aas
pop
in
xor
push
mov
int3
dec
mov
mov
cmp
pop
cmp
xchg
lea
jb
outs
mov
and
cmp
in
push
out
scas
jne
pop
aad
(bad)
adc
popf
jns
xchg
lahf
lahf
push
mov
scas
xchg
add
sbb
bound
add
adc
add
aaa
loop
sbb
xchg
mov
inc
enter
fisubr
addr16
retf
push
mov
rcr
popa
lods
(bad)
dec
shr
out
jg
cwde
and
mov
in
pop
mov
mov
movs
jb
pop
mov
arpl
inc
repz
rol
and
and
inc
aam
(bad)
pop
fistp
push
mov
out
push
ret
ja
ds
retf
xor
and
sub
or
inc
xlat
push
shr
fisttp
jnp
push
jg
dec
movs
lds
inc
div
xlat
jle
dec
call
daa
loop
cmc
jl
inc
(bad)
push
in
dec
retf
outs
test
jne
xchg
mov
popf
test
test
mov
enter
sbb
add
jecxz
fnstsw
not
or
xor
xchg
xchg
pusha
retf
jno
xchg
adc
xchg
sahf
(bad)
out
pop
mov
push
ret
pushf
movs
lea
xor
or
adc
dec
retf
jne
pop
ret
test
and
inc
retf
push
mov
pop
int
jmp
xlat
inc
retf
ins
cmps
cdq
xchg
repnz
pop
add
push
pop
sbb
pop
aam
mov
inc
jmp
jge
ds
dec
in
and
pop
aaa
out
jl
sub
sti
pop
mov
cmp
sub
aas
pop
ret
imul
mov
pslld
test
pop
dec
pop
les
sbb
cmp
pop
cld
and
push
mov
and
add
rol
inc
(bad)
jle
rol
je
jae
test
pop
loope
aad
adc
pop
fist
pop
int
out
dec
cli
sub
dec
retf
sub
pop
mov
jns
je
inc
ror
xchg
clc
push
cmps
inc
movs
popa
(bad)
pop
mov
cmp
push
(bad)
push
mov
in
and
adc
add
xor
gs
sbb
lock
jmp
cmp
repnz
sub
dec
ret
push
movs
pushf
test
hlt
inc
test
pushf
mov
mov
ret
xchg
xchg
xchg
mov
push
add
push
aad
out
pop
int
(bad)
addr16
xor
add
push
jnp
and
adc
add
cmp
idiv
je
cs
lds
ja
ins
adc
pop
(bad)
jl
ins
test
push
into
inc
(bad)
jno
ja
(bad)
jg
popf
xchg
lahf
mov
adc
es
jo
inc
scas
jge
loopne
mov
call
push
mov
jo
add
lds
std
xor
(bad)
push
inc
nop
xchg
ins
fidivr
dec
sar
adc
sub
or
inc
into
inc
cmps
mov
push
loope
or
cmp
(bad)
cmp
mov
sub
sbb
cs
pop
fadd
or
aaa
iret
ds
mov
not
mov
sub
jmp
push
sbb
add
mov
or
pop
movs
outs
mov
dec
rcr
dec
mov
mov
sbb
jo
mov
ins
iret
xor
scas
nop
mov
imul
pop
or
aaa
loope
mov
pop
mov
ret
jp
gs
cmp
sbb
pop
pop
out
mov
js
mov
add
(bad)
xor
push
jmp
push
mov
xchg
ret
inc
test
shl
pop
push
cmp
push
retf
jp
and
lahf
mov
cld
inc
fidivr
fisub
or
jp
sub
add
pop
jmp
xchg
fwait
xchg
xchg
mov
pushf
mov
xchg
mov
aad
jecxz
retf
sbb
aaa
rdtsc
jecxz
ficomp
push
les
cmp
inc
sti
dec
out
lods
mov
pushf
mov
jb
jae
ins
adc
add
mov
mov
add
cmp
out
and
or
pop
add
add
dec
hlt
xor
xor
out
clc
imul
ficom
and
xor
jle
inc
enter
hlt
outs
shl
int
out
jae
js
jge
aaa
or
add
and
xor
mov
mov
fmul
out
(bad)
jle
dec
loope
or
(bad)
pop
(bad)
and
sub
push
adc
stc
and
sbb
fist
cmps
(bad)
hlt
and
push
les
daa
adc
xlat
push
xor
cmp
push
aas
or
adc
inc
add
mov
xchg
mov
push
fisttp
pop
push
and
out
xchg
mov
lods
mov
jbe
and
enter
out
pop
(bad)
xchg
lods
scas
fwait
mov
(bad)
pop
cld
push
(bad)
lahf
arpl
inc
mov
idiv
mov
fidivr
arpl
push
clc
xchg
mov
and
push
or
outs
fdivr
push
mov
cmp
inc
rcr
das
or
test
push
shl
call
loope
mov
mov
shl
and
push
clc
inc
fld
dec
cld
push
iret
lods
xchg
mov
mov
fwait
data16
inc
cmps
hlt
inc
frstor
adc
sbb
jbe
movs
xchg
jmp
imul
pop
and
mov
js
push
shl
inc
std
cmp
jle
xchg
cmp
jmp
mov
jne
pop
xor
adc
pop
or
cs
cdq
ins
rcr
push
fistp
jl
pop
out
fist
mov
stos
pushf
xchg
mul
or
cmp
jb
fs
into
jl
dec
ficom
test
xchg
loope
movs
ins
fadd
jp
push
mov
dec
std
dec
sti
push
fisttp
mov
xchg
mov
rcl
dec
fcom
mov
jbe
sub
push
cmps
cwde
movs
cdq
mov
imul
pusha
repnz
xor
paddsb
add
ds
in
mul
and
cmp
inc
lock
fld
in
enter
aad
in
mov
dec
enter
loope
cmc
xchg
mov
leave
jnp
and
or
stos
xchg
mov
icebp
mov
push
std
sub
push
ret
dec
mov
dec
cmps
popa
enter
sub
xor
adc
add
ins
fdivr
mov
mov
gs
dec
sti
push
aaa
add
sub
stc
pop
sub
push
or
jecxz
(bad)
push
fmul
inc
std
and
cmp
cmp
inc
(bad)
outs
bnd
sub
and
mov
stos
cdq
mov
jmp
lock
pop
int
cmc
(bad)
mov
push
fwait
test
and
cmp
in
inc
scas
mov
mov
and
ds
pop
cli
daa
or
or
inc
clc
push
cmps
xchg
push
imul
cmp
pusha
ret
inc
retf
retf
jo
pop
sti
push
ror
dec
ror
inc
mov
in
dec
fild
loop
cmps
(bad)
fist
xchg
mov
imul
sti
dec
clc
inc
mov
fistp
jg
daa
icebp
daa
xor
daa
adc
cmp
pop
cmps
lahf
mov
in
shl
xor
pushf
lock
aaa
in
and
dec
fdiv
dec
in
scas
mov
repz
push
icebp
push
movs
in
pop
mov
stos
mov
sub
add
xor
in
das
adc
adc
test
mov
(bad)
pop
ret
jno
pop
fist
sbb
loopne
xchg
lds
adc
das
sbb
cmp
xor
ja
sub
dec
mov
and
adc
push
cli
sub
add
dec
enter
test
mov
lea
cdq
arpl
ins
repnz
movups
push
pop
push
pop
rcl
jno
jae
scas
mov
mov
mov
mov
cmp
xor
(bad)
pop
les
hlt
and
test
pop
xlat
xor
sub
inc
in
stc
xor
call
into
inc
aad
clc
pop
test
cmp
push
loop
into
dec
test
push
rol
sub
je
xor
loop
and
aam
sub
jecxz
sar
pop
leave
inc
in
push
movs
xchg
(bad)
retf
test
fsubr
xor
sbb
jp
inc
out
in
imul
jne
mov
test
jno
xor
pop
lock
or
jbe
push
jle
mov
jbe
sub
sub
sbb
sbb
in
test
in
inc
cmps
mov
scas
gs
push
ret
inc
fcom
cmp
add
sbb
add
cmp
pcmpgtb
and
ds
das
pop
ins
shr
sub
adc
push
shl
ja
fstp
ret
jl
js
jne
jno
sbb
dec
out
sub
mov
cli
inc
fisubr
(bad)
fwait
pushf
mov
and
cmp
mov
sub
cmp
or
or
jl
lahf
test
inc
ds
call
xchg
arpl
push
xlat
inc
cld
pop
retf
cmps
add
cmp
jp
outs
scas
mov
shl
lock
push
ret
ins
mov
push
fcomp
mov
pop
ret
arpl
pop
jmp
cmp
mul
sbb
pop
pop
adc
cwde
popa
cld
sub
cmp
add
xor
sti
and
adc
or
xor
test
outs
enter
adc
mov
mov
mov
test
cmps
jae
lahf
imul
loopne
jno
jge
inc
(bad)
and
in
cmc
sub
js
cwde
push
aam
xchg
pop
fdiv
sub
out
dec
leave
jae
jo
jl
movs
mov
mov
jp
dec
mov
mov
lods
stos
mov
sub
das
sbb
daa
lar
cmp
pop
xor
cmps
xchg
inc
and
dec
ficom
inc
cli
push
leave
inc
and
sub
add
dec
cmps
adc
stos
test
mov
sub
xor
push
enter
add
aaa
sbb
imul
fs
inc
stc
dec
idiv
loopne
shr
jp
jbe
inc
sub
cmp
loope
fcom
pop
fnstenv
inc
call
arpl
pop
jmp
mov
pop
stos
mov
jno
sbb
out
shl
repnz
in
das
or
js
sub
sub
in
jns
daa
or
jmp
shl
xor
mov
mov
xchg
test
xor
xlat
inc
fmul
outs
rcr
push
sbb
out
and
lock
cdq
(bad)
lds
push
add
outs
fisubr
sbb
out
fistp
inc
add
and
repnz
jnp
sub
cmp
inc
jmp
test
mov
fimul
pop
fst
pop
mov
out
jae
lahf
nop
mov
call
mov
dec
xlat
dec
(bad)
imul
imul
lahf
mov
mov
cmp
push
push
pop
add
loop
sti
lahf
ins
mov
xchg
scas
mov
mov
mov
xor
adc
loope
iret
ja
inc
icebp
dec
sub
dec
out
pop
stc
pop
mov
mov
shr
add
repz
retf
cwde
movs
mov
int3
mov
enter
icebp
inc
mov
push
or
sbb
xor
adc
fstp
pop
aad
adc
fnstenv
and
push
aam
std
sub
cmp
retf
adc
pop
call
pop
ret
dec
jmp
iret
stos
xor
frstor
adc
cmp
pop
cmps
sub
sar
jno
dec
ret
dec
sub
adc
loopne
in
cmps
push
clc
gs
sbb
cmp
adc
out
xchg
xor
(bad)
(bad)
and
or
sti
inc
rol
jl
dec
clc
inc
in
pop
retf
jle
retf
dec
sar
mov
cdq
outs
cmc
inc
aam
out
inc
fnstcw
xor
call
cmp
and
push
loope
pop
sbb
xor
push
ins
cmps
fwait
gs
cs
or
in
xor
mov
scas
cmps
mov
fnstcw
inc
std
jp
popa
fadd
jb
and
inc
std
outs
repnz
push
mov
call
dec
(bad)
outs
push
add
adc
push
in
outs
iret
and
sbb
push
lock
ficom
icebp
dec
and
cmp
push
test
mov
jecxz
fcom
dec
test
push
jge
jl
stos
(bad)
cmc
pop
sar
(bad)
hlt
pop
hlt
xor
fsub
add
out
into
pop
fidivr
jg
mov
arpl
inc
hlt
sub
cmp
sbb
fiadd
push
fisttp
pop
movs
cmp
adc
add
jbe
ja
dec
stos
ins
int3
push
aaa
adc
adc
sub
cmp
pop
test
lods
mov
mov
and
mov
mov
iret
push
fldcw
inc
int
cmc
lods
stos
mov
test
xchg
mov
sar
fwait
popa
or
in
fiadd
sub
cmp
out
fld
sub
cmp
dec
ret
push
clc
xchg
lods
mov
addr16
inc
mov
outs
ret
sub
and
cmp
enter
int
hlt
and
or
or
pop
add
push
lock
cmp
sbb
push
jl
xor
loope
fsubr
add
ss
cmp
js
lahf
mov
stos
xchg
mov
sbb
push
fisttp
sub
add
out
pop
out
push
cmps
out
push
stos
nop
lods
(bad)
mov
push
stc
sub
add
outs
mov
movs
mov
mov
mov
int3
imul
jmp
adc
cmp
pop
ds
cmp
push
dec
arpl
sub
push
loope
movs
imul
into
outs
sub
daa
push
cmp
push
icebp
jge
mov
inc
ficom
scas
mov
iret
jb
xchg
enterw
adc
pusha
mov
or
and
inc
aad
sub
dec
rcl
(bad)
je
hlt
inc
enter
xor
push
mov
into
xor
xor
pop
aas
push
in
add
rol
xchg
lds
cmp
cmc
dec
cmps
imul
test
mov
push
cmp
add
mov
pusha
test
add
xor
rcr
mov
mov
daa
into
ja
outs
scas
nop
jl
cmp
push
sub
xor
pop
shr
and
cmp
in
or
cmp
mov
scas
fwait
addr16
test
int3
push
fist
push
mov
mov
movs
popf
arpl
xor
push
int
(bad)
add
dec
cmp
fwait
add
xchg
push
add
cmp
fcomp
or
cs
cld
adc
and
cmp
adc
cmp
shr
add
aas
adc
xor
in
or
int3
cmp
(bad)
cmp
loop
repz
data16
stos
js
test
xchg
and
jne
shr
pushf
push
mov
daa
mov
sbb
cmps
mov
push
test
pop
mov
pop
mov
inc
mov
cmp
or
ds
push
adc
pop
jecxz
lds
cld
xchg
xchg
jbe
dec
mov
xor
test
data16
adc
jmp
add
add
or
push
sbb
mov
popa
retf
mov
and
xor
clc
cs
mov
xor
int
jns
into
pop
mov
push
movs
in
retf
test
push
ret
mov
mov
push
mov
ret
ss
mov
in
xchg
jae
adc
push
fistp
xor
jne
pushf
sti
adc
hlt
jl
push
pop
add
dec
loop
dec
out
inc
in
xor
iret
bound
cmps
mov
push
jo
les
ficom
mov
fbstp
xchg
xchg
and
push
movs
movs
mov
mov
mov
stos
test
fwait
mov
add
xor
das
lods
cmps
mov
ins
xlat
ret
sbb
js
mov
(bad)
(bad)
mov
or
pop
xchg
fisttp
xchg
pop
aam
mov
cs
repnz
dec
kxnorb
inc
jmp
dec
loop
dec
stc
and
fist
out
add
xlat
mov
jmp
fdivr
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
dec
and
dec
aas
jbe
popf
neg
mov
call
xchg
cdq
loopne
jmp
cmps
iret
(bad)
in
clc
mov
mov
xchg
fnstenv
and
not
retf
mov
mov
xchg
ror
xlat
call
not
adc
(bad)
in
clc
mov
lods
fimul
ror
das
sti
dec
test
outs
mov
(bad)
push
into
pop
mov
int
or
sub
mov
fwait
jne
mov
xchg
mov
mov
scas
mov
(bad)
add
jle
mov
scas
fidiv
enter
mov
xchg
dec
call
mov
mov
add
inc
mov
lds
jmp
adc
inc
xchg
(bad)
jmp
pop
leave
xor
dec
mov
inc
mov
cmp
inc
mov
outs
fwait
dec
call
js
ins
rol
lods
inc
loopne
div
cwde
stos
inc
test
sbb
into
pop
int
mov
inc
push
push
data16
imul
(bad)
mov
(bad)
fnstcw
loop
push
rol
repnz
inc
xlat
mov
aad
jg
iret
inc
mov
ins
mov
lods
jae
lds
adc
jae
xchg
stc
sub
pusha
retf
mov
mov
lds
adc
inc
cmp
call
push
test
aas
loope
push
(bad)
dec
movs
iret
xor
(bad)
ins
cmp
xchg
dec
movs
shl
pop
ja
cmp
xor
pop
sbb
or
jb
dec
and
xor
cdq
fild
adc
mov
sub
inc
sbb
pop
sti
mov
fadd
lock
cli
add
or
pop
outs
sar
mov
inc
clc
push
mov
dec
sbb
iret
cwde
fist
movs
push
rol
mov
push
fs
mov
test
aad
lahf
lods
push
mov
jp
iret
jg
mov
lahf
mov
scas
sbb
sahf
xchg
xor
pop
ins
sar
call
add
and
lea
pop
ret
sub
push
jp
popa
ins
lds
ja
pop
adc
(bad)
push
push
mov
mov
ins
mov
dec
mov
test
xor
aaa
pop
sbb
fs
es
adc
sub
sbb
jo
outs
and
pop
xor
dec
adc
or
jle
dec
xor
pop
aas
jne
push
push
push
aas
inc
das
inc
pop
popf
fiadd
jmp
mov
(bad)
hlt
xchg
not
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
mov
les
xlat
mov
jecxz
repnz
lds
in
ror
mov
loope
in
cmp
cmps
hlt
adc
stc
mov
call
mov
push
cmp
push
or
inc
aaa
pushf
shl
les
repz
jecxz
(bad)
mov
pop
mov
jne
mov
mov
push
mov
leave
sub
push
pop
jmp
xor
arpl
pop
mov
jecxz
ret
mov
mov
mov
xchg
inc
les
fnsave
js
adc
jge
outs
lds
xlat
push
mov
xor
and
lock
in
clc
push
test
stc
xor
dec
scas
push
cmc
adc
push
movs
outs
cli
add
inc
mov
cmp
ja
push
push
int
lea
and
jle
imul
leave
jbe
dec
out
add
mov
div
pusha
cli
add
popa
scas
push
out
in
inc
cmps
dec
ret
outs
mov
fild
or
or
jo
popa
aaa
clc
xor
or
jae
and
repnz
aam
and
mov
dec
test
xor
call
ja
cmc
add
mov
xlat
sub
pusha
mov
lods
xchg
push
fdiv
pop
ror
idiv
and
pushf
fldenv
pop
js
jnp
jmp
add
add
arpl
jmp
inc
into
sub
jo
les
repz
add
loop
pusha
(bad)
mov
jne
cli
pop
sub
xor
and
stos
inc
sub
or
imul
push
pop
inc
aas
icebp
jp
adc
fisubr
retf
cdq
dec
ret
popa
jge
cdq
adc
mov
(bad)
push
call
xor
lds
lock
pop
xor
sar
in
out
sbb
cmps
mov
jbe
push
shl
sbb
rcr
adc
imul
jns
stc
bound
mov
mov
pop
pop
(bad)
in
arpl
pusha
dec
xchg
mov
add
xchg
mov
push
inc
sbb
fwait
mov
cwde
inc
loope
js
call
dec
rcl
jo
jmp
rcl
or
add
ins
rcr
pop
cdq
fbstp
call
adc
popf
into
stos
int
call
repnz
cli
cwde
test
cwde
(bad)
mov
int3
cwde
xlat
mov
scas
jmp
in
out
cdq
sar
sbb
jl
pop
push
je
gs
pop
ins
sub
jge
jg
jle
pop
and
add
pop
push
pop
and
cmp
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
sbb
outs
cmp
imul
add
ds
sub
inc
xor
push
xor
or
jne
push
cs
push
jge
jg
mov
movs
mov
test
imul
(bad)
jnp
push
enter
test
lods
push
mov
push
mov
ins
mov
jg
movs
inc
add
mov
xchg
stos
inc
movs
fbstp
lock
mov
jmp
sbb
push
xor
or
shl
or
outs
scas
ins
loop
sbb
cmp
jmp
sbb
and
in
add
out
ss
cmpps
xor
(bad)
or
fsubr
pop
out
sub
add
rcl
add
add
push
neg
mov
gs
aam
mov
jl
cmc
pop
mov
push
xchg
retf
add
xor
aas
out
scas
ins
fild
mov
and
mov
xchg
(bad)
mov
jo
inc
xlat
mov
loope
dec
cmps
shl
pop
jno
xor
mov
scas
jg
movs
xchg
popa
xor
xor
in
add
outs
or
loope
jbe
into
ds
xchg
xchg
les
les
and
pop
jl
bound
shl
fild
ins
mov
add
push
or
outs
mov
sub
int
cwde
imul
arpl
in
inc
iret
add
or
cwde
repnz
mov
inc
retf
rcl
inc
push
mov
jno
push
jecxz
lahf
mov
test
jo
lds
jns
cld
inc
mov
outs
std
dec
outs
ret
js
mov
jne
pop
cmp
mov
and
imul
imul
popf
mov
stos
mov
aaa
cmp
xchg
movs
aaa
add
xor
cmp
aad
leave
sti
push
rcr
mov
inc
jmp
cwde
mov
xchg
mov
fwait
call
jp
enter
or
ficom
lock
and
mov
mov
and
dec
xor
jbe
dec
or
push
sbb
ins
and
push
xor
ins
add
jp
pop
adc
ins
cmp
push
or
jl
jle
popf
aam
ret
stos
ret
and
hlt
mov
int
shl
lock
sbb
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
sub
pop
adc
outs
xor
adc
inc
or
inc
ds
das
dec
pop
sub
jb
jns
dec
sqrtps
jg
pop
or
and
inc
and
inc
das
inc
and
ins
add
ja
push
or
adc
push
je
push
jae
inc
push
popa
es
xor
dec
cmp
and
inc
adc
add
dec
xor
dec
sub
jg
outs
push
fwait
in
std
sub
sbb
test
dec
or
sbb
mov
add
fdivr
push
stc
add
lds
pop
lahf
inc
les
push
imul
jl
sbb
cs
sub
daa
or
es
sub
fdiv
or
and
sar
and
(bad)
pop
out
in
xor
push
fstp
clc
push
lea
and
jo
jp
cmp
inc
test
adc
or
call
add
push
pop
fistp
xor
das
aas
fistp
std
aaa
adc
add
in
xor
popf
adc
pop
data16
repnz
xlat
int
mov
bound
dec
aas
repnz
push
sbb
les
push
hlt
add
clc
add
push
xor
xor
cmp
shl
shr
or
mov
outs
int
sub
or
lock
add
dec
rcl
jmp
imul
jno
data16
dec
fld
fnsave
jp
jb
sub
xchg
xchg
dec
das
ret
loope
js
cmp
sbb
adc
jo
or
pusha
xchg
xchg
lock
mov
ror
push
mov
fidiv
dec
iret
and
pop
pop
or
sub
xchg
inc
xchg
dec
lds
test
movs
xor
mov
mov
hlt
js
call
call
jns
loop
std
in
inc
sbb
jne
mov
mov
add
arpl
xchg
pop
fidiv
lahf
push
jmp
(bad)
cdq
push
cmp
cmp
mov
(bad)
fadd
dec
hlt
adc
ss
es
ja
inc
test
(bad)
fld
and
movs
mov
cwde
cmps
stos
inc
sbb
popf
xchg
xchg
push
enter
push
sbb
mov
mov
rcr
(bad)
mov
(bad)
cli
xchg
jmp
stos
sti
movs
rol
mov
xchg
test
push
cmp
dec
add
movs
lock
cld
and
jmp
scas
enter
out
cli
xchg
cli
mov
into
cwde
jmp
add
jmp
(bad)
mov
xchg
iret
or
pushf
loope
in
movs
stc
mov
retf
mov
out
leave
cmps
jecxz
repnz
cmc
mov
mov
pop
cmp
pop
ss
pop
pop
ins
push
jg
dec
and
xchg
jecxz
out
lock
mov
xchg
in
lock
xchg
mov
retf
scas
loope
test
daa
inc
xor
aaa
dec
and
jns
bound
dec
es
cmp
jp
dec
sub
lahf
lock
enter
mov
pop
mov
sar
repnz
lods
jbe
adc
jae
(bad)
(bad)
cmp
jge
push
jecxz
jmp
inc
scas
imul
rcl
dec
icebp
and
je
gs
ss
cmp
(bad)
and
ret
daa
hlt
outs
mov
push
retf
lea
cmp
jae
inc
sbb
add
fbld
add
pop
sbb
cmp
(bad)
or
cmps
push
out
sub
aaa
out
or
pop
into
pop
(bad)
inc
push
fnstcw
das
stc
and
fimul
and
xor
out
xor
and
cld
sub
(bad)
push
sbb
add
(bad)
sub
add
hlt
(bad)
or
sub
maxps
push
adc
push
add
sub
int3
or
cmp
fstp
mov
scas
les
icebp
(bad)
fwait
shr
enter
and
and
add
inc
shr
push
loopne
mov
push
pop
int
int
sub
push
sub
cmp
loop
stos
aam
stos
shl
(bad)
fwait
xchg
popa
adc
sar
lock
jo
fisttp
imul
outs
mov
ss
or
or
inc
lods
jge
retf
stos
push
or
cmp
adc
pushf
push
mov
fiadd
pop
xlat
xor
push
add
xor
inc
mov
mov
inc
outs
ror
test
pop
js
dec
push
jo
fnstsw
lds
and
ss
dec
jmp
and
cmp
aam
popa
out
sbb
cmp
jne
push
cmp
ja
push
xlat
pusha
gs
jbe
push
or
or
cdq
stos
pop
(bad)
pusha
xchg
test
mov
push
call
push
and
push
jmp
cs
adc
inc
jmp
push
rcr
add
mov
mov
pop
das
dec
dec
xor
ja
outs
cs
pushf
int3
fwait
retf
mov
push
ss
bound
jns
or
push
push
cmp
popa
push
sub
sub
pop
jp
cwde
aam
jmp
iret
cmps
ret
mov
xchg
jmp
out
mov
lods
adc
and
cmp
dec
cmp
push
pop
sub
dec
and
movs
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
lds
idiv
mov
xchg
int3
test
mov
sub
cmp
jge
add
jnp
pusha
ds
pop
sbb
lahf
sti
mov
rcl
xchg
call
test
mov
std
mov
mov
mov
jnp
ins
sbb
sub
pop
or
push
jbe
popf
sti
mov
lock
in
test
mov
stos
int3
rcl
add
jp
dec
into
push
xchg
mov
jae
jg
pop
ficom
inc
into
sub
xchg
fwait
mov
add
dec
mov
test
clc
add
sub
dec
sbb
add
sbb
dec
xchg
sub
fld
and
or
aam
cmp
and
sbb
xor
out
stos
mov
xchg
xchg
mov
(bad)
sti
and
repnz
fist
(bad)
inc
mov
xchg
mov
add
mov
stc
cmp
fwait
sahf
nop
(bad)
(bad)
cdq
mov
popf
mov
inc
mov
cmps
sar
(bad)
jp
cwde
stos
imul
jnp
push
jg
jl
xor
xchg
dec
enter
les
jae
mov
ret
mov
sar
or
std
push
xor
dec
(bad)
adc
cmp
ret
sub
dec
sub
add
lahf
rcr
popf
outs
mov
inc
mov
mov
jle
inc
cmp
sub
xchg
fld
xlat
jge
rcr
cmps
test
sbb
add
jp
xor
xchg
mov
jecxz
sbb
call
inc
push
stos
ins
xor
cmp
repz
test
adc
daa
ins
les
dec
scas
jno
or
scas
mov
sub
mov
lahf
fwait
lahf
and
repz
popf
jp
lea
push
mov
xchg
movs
test
bound
dec
retf
ins
xchg
(bad)
rcr
mov
stos
stos
push
cld
inc
mov
pop
ret
lds
stos
pop
or
adc
mov
dec
push
xor
cmp
cmc
inc
out
or
das
(bad)
data16
or
shl
cmp
sar
push
pop
enter
es
mov
xchg
push
repz
mov
jbe
lea
xchg
std
dec
mov
add
out
or
stos
cmps
mov
je
and
icebp
xor
ret
xchg
push
ss
and
je
inc
sub
sub
jb
popa
sub
lahf
into
movs
aad
jecxz
ret
mov
mov
in
call
push
add
arpl
inc
sub
push
and
inc
sub
jbe
fs
inc
and
enter
shl
icebp
mov
and
clc
mov
mov
rcr
mov
call
shr
fsubr
les
mov
aam
loopne
hlt
(bad)
jmp
stos
ret
stos
in
std
mov
les
xchg
shl
into
mov
out
clc
mov
mov
(bad)
ret
mov
in
mov
(bad)
les
cld
mov
mov
fdivr
pop
scas
add
push
pop
pop
call
fdivr
or
in
fcmovnu
clc
fcomp
loope
hlt
(bad)
fyl2x
jmp
push
cdq
sub
leave
cld
(bad)
rol
sbb
sub
pushf
cs
push
jns
push
inc
lea
scas
sub
mov
popa
imul
sbb
ss
ds
mov
test
xor
xchg
sub
add
or
popa
popa
outs
gs
push
inc
bound
sbb
inc
popf
and
dec
cwde
pop
fcmovbe
shl
mov
inc
push
xor
int
mov
fcmovnb
out
ret
call
in
sub
or
loope
aas
mov
(bad)
clc
add
sbb
movs
add
xlat
enter
loopne
repnz
dec
popf
cmp
jle
mov
add
pusha
addr16
xchg
or
mov
dec
xchg
js
xor
push
fdiv
sbb
adc
cmc
sti
call
cmp
daa
ficomp
call
daa
aam
pop
cmps
add
shl
mov
inc
cwde
add
or
(bad)
in
or
push
dec
mov
mov
cmp
mov
push
jbe
jno
sti
add
lds
js
outs
inc
mov
inc
xchg
daa
mov
rol
in
jg
dec
sub
(bad)
add
mov
pop
push
popa
cwde
cli
sub
lds
iret
aam
fdivr
icebp
fcomp
fcom
fisub
or
inc
jb
pusha
je
fdiv
fmul
or
mov
mov
mov
fucomi
scas
sub
repnz
cmc
ret
retf
push
rol
xchg
push
add
(bad)
or
mov
mov
and
sub
and
sub
xchg
push
daa
dec
xor
outs
pop
outs
mov
cmps
add
fs
sub
pop
sub
shl
mov
loop
pusha
aam
out
mov
xchg
xchg
call
add
outs
gs
add
inc
mov
and
(bad)
retf
leave
sbb
repnz
or
outs
add
test
xor
dec
mov
and
ss
jmp
xlat
call
cld
pop
outs
loop
jp
imul
sti
and
dec
sbb
inc
dec
(bad)
add
(bad)
call
ds
sbb
dec
cdq
or
xor
repz
adc
dec
cdq
cdq
pop
cmp
call
int
scas
out
test
into
imul
sub
cmp
xchg
sub
inc
shr
and
(bad)
mov
push
je
mov
or
sbb
sub
(bad)
mov
cmp
jp
sbb
in
mov
pusha
dec
sbb
fdivr
or
and
mov
xor
loopne
cdq
aad
mov
dec
cmp
jg
pop
xor
xlat
adc
imul
pop
sub
ror
test
xor
popa
je
or
xlat
(bad)
jmp
and
inc
mov
adc
clc
mul
loope
dec
xor
cmp
push
cmp
shl
cld
adc
pop
hlt
xchg
mov
dec
adc
xchg
mov
arpl
pop
add
test
nop
sub
inc
jg
scas
loope
push
aas
jp
das
ins
into
pop
pusha
xor
aas
jp
shl
fs
jmp
int3
add
jmp
jnp
jl
(bad)
push
mov
in
cmps
mov
scas
fsub
and
push
xchg
clc
(bad)
cmps
mov
mov
inc
iret
ds
ret
call
or
test
shl
or
inc
test
je
movups
ret
popa
int3
loope
adc
dec
test
pop
sbb
push
sub
or
in
sti
div
ins
xor
sbb
outs
ret
cmp
sub
mov
pop
mov
int3
mov
enter
movs
and
rol
ins
call
xor
shr
sbb
cmp
pop
clc
jns
jns
bound
lods
pop
(bad)
cmp
and
mov
sbb
out
push
xchg
lahf
out
(bad)
hlt
mov
mov
retf
aas
inc
scas
jnp
add
fidiv
sar
not
call
xchg
push
aam
retf
test
rcl
jns
dec
cmp
clc
(bad)
loope
dec
jle
shl
jge
and
mov
stos
sbb
dec
xchg
imul
out
pop
icebp
mov
add
lea
sti
ret
out
loop
loope
aad
jp
out
sbb
mov
xchg
cmc
or
xchg
dec
dec
mov
sbb
mov
mov
shr
adc
not
adc
inc
cmp
and
inc
mov
loope
dec
xor
movs
div
and
cmps
sub
repnz
mov
cwde
mov
inc
fst
jbe
sbb
sbb
(bad)
push
pop
mov
push
jge
rol
mov
mov
retf
lahf
push
mov
dec
dec
push
outs
xchg
jne
and
test
and
hlt
jp
dec
scas
jg
jae
or
mov
out
jl
pop
mul
jbe
aaa
(bad)
mov
(bad)
xchg
enter
jmp
pop
pop
cmc
popf
xor
adc
push
sub
fidivr
aam
inc
pop
ins
mov
sub
pop
jp
lock
aad
pop
cmp
cmp
ss
(bad)
stos
imul
enter
or
pop
stos
xchg
imul
retf
or
pop
push
cwde
std
push
inc
frstor
ror
pop
lahf
mov
add
cwde
(bad)
dec
out
cld
dec
std
mov
cmps
jo
cmc
or
pop
inc
adc
in
xchg
inc
test
ror
rol
cwde
cmps
fadd
out
(bad)
mov
mov
push
mov
pop
mov
jns
sub
test
or
loope
ss
sub
(bad)
pop
imul
shr
mov
mov
fbstp
push
pop
add
cs
js
inc
sub
push
push
jae
call
adc
out
dec
cs
ror
pop
sub
out
sub
sar
shr
in
jnp
inc
aaa
sbb
jb
jle
pop
js
dec
test
mov
mov
jno
mov
sbb
not
push
lods
sbb
dec
ins
add
les
mov
lock
add
mov
std
ins
clc
pop
pop
ins
inc
jne
mov
push
pop
in
aas
in
inc
and
xor
lods
mov
pop
add
imul
jno
cmp
scas
xor
dec
push
arpl
pop
sbb
dec
(bad)
aad
add
adc
push
ins
pusha
push
or
pop
sbb
outs
mov
xor
mov
test
call
fucomi
cld
or
push
fstp
int3
xchg
xchg
test
loope
test
push
mov
jecxz
push
sahf
imul
mov
jb
mov
jp
lods
sub
shl
xchg
mov
in
into
xor
mov
inc
aas
jecxz
jmp
iret
mov
cmp
xor
sqrtps
push
js
out
shl
in
jo
loope
fisub
daa
pusha
jns
fldcw
xor
mov
hlt
push
xor
(bad)
and
sub
(bad)
enter
in
push
add
std
out
ins
out
mov
push
ins
jae
inc
push
jp
cmps
xor
lds
(bad)
jbe
es
inc
push
cs
fistp
(bad)
sahf
push
aad
fwait
dec
sbb
scas
popf
loop
xor
adc
cwde
cmp
or
cmc
xchg
(bad)
and
aad
test
rol
cs
jmp
sbb
or
inc
push
rdpmc
loopne
std
sbb
add
and
ja
mov
lods
mov
cmps
mov
dec
push
and
jecxz
fdiv
sbb
mov
push
inc
iret
and
dec
adc
mov
test
sbb
data16
jnp
or
jge
xlat
(bad)
ja
dec
pop
aad
pop
dec
mov
or
out
ja
iret
test
mov
inc
movs
cld
cmp
dec
push
mov
dec
add
jge
jg
out
sub
xchg
movs
scas
xchg
cmp
xchg
inc
popa
aam
idiv
call
inc
push
outs
mov
add
dec
jae
mov
mov
adc
jno
cmp
lods
pusha
inc
into
fdiv
xchg
cmp
ficomp
das
jo
stos
adc
ss
mov
das
and
test
pop
add
pop
xlat
pop
sbb
and
or
pop
mov
mov
mov
dec
addr16
add
cs
repz
inc
faddp
add
adc
mov
xchg
js
push
and
xlat
mov
cs
xchg
int3
into
push
clc
retf
pop
aaa
jmp
pop
xchg
sub
mov
mov
ins
jmp
aad
pop
fmul
aam
sub
and
adc
stos
nop
xor
ds
adc
and
cs
retf
mov
and
(bad)
rcr
adc
sar
jbe
jle
out
mov
into
fst
inc
jge
and
(bad)
dec
cs
xor
cmps
xchg
ds
popf
xor
or
xchg
xchg
xor
fimul
cmp
mov
sbb
sub
sbb
dec
(bad)
std
aad
pop
push
sbb
mov
cmps
test
xchg
push
bound
or
inc
arpl
dec
test
(bad)
int
and
fld
int
sbb
adc
aad
(bad)
jge
in
nop
test
ja
add
test
or
push
mov
arpl
mov
stc
dec
das
mov
jmp
inc
mov
or
daa
shl
or
push
adc
les
scas
and
ds
ds
ins
mov
ret
pushf
loop
ficomp
push
pop
cs
xchg
jnp
cmp
xor
xchg
jbe
xchg
idiv
retf
shl
fld
sbb
add
inc
pop
inc
pop
movs
jne
cmp
add
loop
pop
fcom
sub
daa
cmps
mov
ins
and
shr
xor
je
test
pop
push
xor
sub
sub
pop
push
(bad)
pop
push
pop
sub
sub
push
sbb
and
pop
imul
pusha
mov
pushf
and
dec
and
outs
dec
mov
in
ins
sti
push
mov
pop
jnp
sti
sub
stos
mov
mov
push
popa
push
add
jbe
aaa
sahf
pusha
lea
aas
(bad)
cdq
or
inc
cmp
cmp
add
or
arpl
cmp
cld
mov
xor
pop
shl
div
xlat
outs
pop
or
jno
sub
ja
imul
popa
ja
pop
leave
ret
sbb
lods
or
mov
add
mov
cli
stos
and
shl
mul
jge
fisub
mov
jecxz
mov
sub
sub
xor
or
cli
fwait
mov
adc
jmp
sub
push
cmp
mov
jo
lds
jmp
cmp
int3
mov
out
je
mov
out
movs
(bad)
mov
in
cmp
sti
xor
mov
aam
mov
lahf
pop
jmp
jbe
std
pushf
popa
or
jbe
adc
mov
mov
mov
rol
cmp
xchg
mov
les
sub
clc
sbb
pusha
mov
pop
psubb
clc
add
out
les
adc
mov
push
push
(bad)
pop
adc
push
xor
cwde
jo
leave
cmp
pop
ins
push
out
shr
push
push
sbb
cli
add
xor
cld
mov
aad
aaa
push
mov
add
jg
pop
sub
jge
jge
xor
stc
cmp
sbb
movs
rcl
xchg
es
js
aaa
xchg
and
nop
loopne
fwait
jo
fsub
cwde
xchg
push
push
cmp
xchg
pop
outs
(bad)
cld
mov
leave
sub
(bad)
(bad)
xchg
lods
push
mov
loop
xchg
(bad)
sub
xchg
add
in
mov
jmp
xchg
pop
(bad)
test
mov
neg
fdiv
bound
pusha
jnp
and
xchg
mov
lods
aad
(bad)
rcr
stc
xor
push
jmp
sub
in
les
jecxz
pop
push
dec
mov
adc
sbb
hlt
mov
loope
mov
pop
sub
mov
mov
sahf
add
mov
arpl
popf
mov
mov
sub
dec
shl
xlat
push
dec
xor
xor
sbb
hlt
add
cmps
push
test
test
mov
(bad)
and
bound
cmps
rol
mov
ds
and
les
jne
add
mov
dec
scas
std
stos
mov
in
scas
xor
pop
cs
jne
adc
psubsb
test
cmp
push
xor
or
ficom
inc
(bad)
mov
adc
xor
je
add
cmps
dec
lahf
lea
(bad)
(bad)
mov
jl
mov
shl
adc
int3
aaa
mov
mov
pop
inc
je
loopne
jle
call
sbb
jmp
dec
pop
in
sub
ja
stc
jo
xlat
jmp
ins
mov
mov
hlt
daa
ficom
push
push
lock
lods
sbb
dec
dec
iret
cmp
cmp
jge
sub
scas
(bad)
ja
icebp
stos
iret
(bad)
fxch
ja
aas
push
xchg
mov
inc
sbb
mov
mov
test
and
(bad)
cli
dec
dec
out
add
fwait
movs
stos
pop
loop
ins
fwait
movs
sbb
xchg
pop
call
sbb
sbb
test
int3
jne
jbe
retf
and
popf
in
retf
dec
es
inc
mov
push
dec
inc
pop
movs
push
dec
(bad)
or
mov
loope
mov
cmp
je
add
add
push
xchg
and
pusha
push
enter
rcl
out
xor
fcomp
push
clc
aad
call
das
pop
adc
pop
add
arpl
movs
daa
push
scas
outs
jne
sbb
lds
inc
jae
adc
test
jae
in
mov
cmp
(bad)
jg
ins
cmps
jg
jge
xchg
mov
push
and
leave
popa
sbb
fwait
cld
mov
dec
sub
inc
pop
xchg
jg
pop
test
inc
jae
jmp
pop
cmp
and
sbb
retf
ja
jg
fst
sbb
mov
and
adc
pop
mov
(bad)
xor
imul
mov
inc
repz
jle
push
mov
es
pop
mov
cmp
xor
(bad)
loope
call
inc
cmp
hlt
out
in
add
test
xor
jbe
mov
mov
test
pusha
sbb
lea
dec
fcmovbe
inc
dec
pop
xchg
mov
leave
sub
add
fimul
mov
hlt
mov
fcmovbe
pop
pushf
dec
jl
mov
mov
pusha
and
cdq
out
mov
test
dec
test
cmp
xchg
adc
xor
push
xor
test
sbb
loopne
into
inc
sub
cwde
mov
ds
push
test
xchg
dec
mul
cmps
jno
mov
cmp
jnp
jecxz
test
sti
dec
pop
adc
mov
sub
retf
and
mov
mov
or
je
cmp
cmp
test
das
cwde
test
adc
hlt
push
popa
mov
sub
test
call
test
push
push
mov
lahf
cmps
adc
add
call
fcos
jp
cmp
(bad)
mov
sub
jae
dec
push
and
push
fwait
es
dec
cli
aaa
repnz
sbb
push
daa
arpl
je
sub
sub
xor
xor
inc
stc
push
sbb
jne
es
test
mov
mov
test
inc
test
mov
mov
iret
jbe
or
jbe
(bad)
push
or
jnp
sub
in
lea
push
push
dec
sbb
ret
xchg
dec
pop
in
pop
inc
sbb
mov
mov
cmp
je
aas
daa
sub
into
mov
ret
xor
or
ffree
int
mov
dec
aaa
nop
in
or
repz
inc
pusha
pop
retf
inc
les
inc
(bad)
iret
daa
shl
movs
(bad)
cmps
bound
inc
sub
lods
jae
in
retf
fmul
(bad)
out
ret
jecxz
or
cmp
xchg
out
inc
dec
scas
fdiv
mov
clc
(bad)
add
ins
sti
push
lods
jno
fcom
and
pop
sar
pop
push
sub
cmps
fmul
leave
mov
sub
dec
xchg
mov
or
lods
push
aam
xchg
pop
sbb
jecxz
fnstenv
cmp
jne
ds
outs
out
pop
repz
out
inc
mov
out
stc
push
sub
fadd
cmps
dec
or
sar
ins
out
dec
and
fdivr
cmps
cmp
cmp
lods
push
outs
jle
lods
mov
fstp
mov
in
pusha
lea
test
jp
push
(bad)
retf
mov
mov
inc
(bad)
ror
xchg
push
xchg
gs
int3
pop
inc
pop
jns
repz
dec
jb
fdivr
aad
not
and
(bad)
dec
rcr
adc
cld
push
adc
js
pop
or
jb
xchg
xchg
addr16
dec
push
scas
test
(bad)
push
sub
not
push
dec
retf
pop
retf
xchg
xor
popf
sti
callw
push
(bad)
xor
out
inc
jp
adc
lock
popf
sbb
mov
jns
jbe
pop
xlat
es
dec
out
or
lock
xor
xchg
mov
dec
xlat
aas
mov
loope
sbb
out
sbb
movs
clc
ret
jmp
sti
clc
jmp
add
dec
std
mov
ror
dec
mov
hlt
outs
pushf
cmps
xor
aas
in
cmc
and
jns
cmp
hlt
mov
inc
gs
inc
popa
sahf
dec
add
rcl
mov
daa
xor
inc
je
inc
imul
dec
sbb
add
mov
andnps
xchg
mov
xor
(bad)
push
inc
arpl
mov
inc
and
pop
cli
cmps
cmp
and
xchg
push
cli
mov
cs
cmp
ds
(bad)
cmp
sahf
dec
push
and
or
mov
lock
icebp
popf
xor
sub
mov
stos
fsub
pop
int3
mov
fisubr
mov
in
jge
inc
hlt
shl
call
int
int
stc
retf
jge
fadd
cmp
es
imul
mov
add
mov
mov
pop
retf
daa
jae
rcr
aad
ja
jbe
and
or
idiv
mov
sbb
(bad)
add
add
push
call
mov
iret
sub
int
xor
das
xor
dec
nop
outs
or
lock
scas
sub
adc
cmp
fisub
push
pop
call
push
test
cdq
sahf
jb
mov
je
loope
sub
mov
int
fstp
out
mov
stos
fidiv
fwait
popa
aam
test
add
(bad)
daa
mov
iret
repnz
loope
cdq
inc
pusha
pop
not
iret
mov
inc
std
jl
push
pusha
xor
inc
or
push
fs
jno
xor
popf
inc
cmp
adc
ror
sbb
jb
dec
lea
xchg
dec
fmul
(bad)
push
mov
cmc
and
lods
call
sub
push
xchg
or
pop
test
xor
es
cmc
dec
sahf
add
xchg
jno
fidivr
jne
stos
adc
cmp
fdiv
pop
in
outs
push
fcomp
push
lds
dec
cmc
xchg
sbb
mov
dec
ss
rol
sbb
push
and
rol
xor
dec
pop
pop
jmp
xchg
pop
add
(bad)
sahf
sub
mov
dec
or
adc
push
test
mov
pop
xchg
push
jno
(bad)
mov
dec
fs
arpl
or
mov
outs
(bad)
mov
cmp
sub
repnz
ficom
hlt
dec
mov
inc
test
fcmove
dec
inc
push
add
imul
test
jb
out
xchg
xor
out
or
outs
and
pop
test
jo
lea
mov
inc
rcr
or
scas
imul
cmps
mov
xor
push
cmp
scas
push
call
outs
jmp
mov
ds
inc
cmp
jl
je
ins
addr16
stos
lods
shl
lock
xchg
sub
jnp
pop
jb
push
outs
xor
cld
dec
imul
ss
adc
mov
mov
loop
adc
ret
cmp
ins
mov
jmp
aaa
adc
sbb
pop
int
cmp
xchg
jmp
clc
imul
mov
cmp
cmp
into
xor
xchg
mov
ffreep
mov
fsubr
paddb
and
icebp
push
in
cwde
cdq
retf
push
dec
sti
loopne
xchg
xor
das
jnp
and
push
pop
cmp
jne
sub
sbb
and
ins
lds
fwait
mov
sub
and
cmp
ins
idiv
nop
mov
mov
repnz
cld
cmp
mov
adc
out
les
outs
push
adc
sbb
icebp
and
leave
or
cwde
jp
in
cdq
arpl
int
outs
rol
mov
add
mov
xor
pop
inc
rcr
cs
loope
cmp
outs
imul
mov
inc
(bad)
dec
mov
pop
pop
ror
popf
retf
mov
push
cdq
jp
jp
jg
xchg
jge
call
xor
add
addr16
mov
test
das
xor
(bad)
out
jmp
push
outs
cmps
xchg
add
mov
inc
imul
pop
sbb
pop
mov
inc
imul
fs
jmp
in
inc
stos
add
xor
sub
fcom
mov
mov
ja
mov
popf
pushf
(bad)
aaa
jl
lods
aas
test
dec
xchg
and
stos
in
stos
es
lods
cmc
in
jo
ins
pop
cmp
jmp
clc
adc
adc
aam
stos
in
rcr
xchg
fwait
mov
test
adc
or
mov
lods
cmc
xchg
(bad)
add
outs
into
in
enter
push
push
data16
jmp
(bad)
stos
into
cmc
mov
xchg
sub
adc
pop
leave
repz
dec
dec
dec
xor
adc
cld
daa
stc
xchg
sub
sub
dec
ins
retf
pushw
test
push
movs
out
push
mov
jnp
cdq
call
inc
inc
or
mov
add
ja
cli
rcl
jmp
ror
arpl
xor
popa
icebp
neg
in
mov
dec
and
cmp
cmp
fild
push
ja
dec
fwait
icebp
in
inc
mov
pop
imul
jns
mov
xchg
rol
mov
lock
outs
hlt
sub
push
xchg
add
ds
push
mov
or
sub
mov
pop
enter
mov
fdiv
stos
push
loopne
push
push
or
mov
(bad)
pop
adc
xor
clc
mov
mov
lods
xor
jae
fimul
sbb
xor
sbb
jecxz
inc
xchg
sub
sub
jg
mov
mov
cmps
arpl
adc
(bad)
xlat
aad
mov
add
or
sbb
inc
jne
jmp
pop
ffreep
or
mov
repnz
shl
sar
xor
push
mov
jnp
jae
or
mov
and
or
div
push
inc
xlat
sti
lods
push
lods
in
les
sub
ja
jp
pop
out
mov
ret
test
xchg
out
push
das
add
mov
adc
pop
popa
shr
pusha
lahf
adc
xchg
(bad)
or
rcl
dec
call
jae
cdq
call
xor
push
fsub
cmp
sub
cmps
in
aam
movups
mov
adc
or
loop
pusha
cld
mov
lahf
and
iret
sub
cmps
in
mov
and
push
sub
xchg
mov
fcom
daa
or
dec
out
xor
outs
outs
push
es
pop
(bad)
repz
lahf
popa
hlt
sti
adc
fdecstp
adc
ret
inc
xlat
jle
ret
in
(bad)
mov
loope
movs
xor
imul
inc
xchg
fmul
and
out
sub
pop
out
(bad)
retf
cmp
icebp
shl
sbb
xor
push
jge
jle
stos
sahf
add
shrd
inc
es
pop
xor
bound
sbb
fistp
les
mov
cli
adc
nop
std
pop
fcom
mov
aam
ins
or
fdivr
fnsave
sbb
sub
sahf
xchg
jne
outs
cmp
imul
mov
ja
jge
fwait
and
movs
or
aas
mov
mov
jp
inc
mov
or
into
jmp
mov
loop
lods
cmovne
cli
div
mov
mov
inc
dec
dec
push
pop
cmps
std
mov
cmc
push
jmp
call
and
mov
push
pop
cmc
js
cmps
retf
jl
xchg
inc
push
clc
sbb
loopne
std
xchg
dec
gs
in
jl
jb
xchg
adc
scas
inc
pop
cmp
add
xor
test
and
idiv
xor
add
sahf
or
xchg
mov
jmp
mov
add
std
or
dec
inc
in
jmp
lods
inc
jge
xchg
inc
int3
dec
or
out
or
cs
cmp
push
loopne
mov
dec
mov
cmc
std
call
(bad)
xor
and
add
pop
ds
jmp
lea
paddw
bound
stos
jg
retf
inc
mov
cli
push
fiadd
in
in
(bad)
and
pushf
dec
retf
and
and
cmps
les
imul
fmul
pop
test
retf
cmp
cmp
push
enter
mov
ja
pop
stc
in
inc
xchg
enter
mov
ret
dec
mov
mov
(bad)
shr
std
mov
xchg
mov
lock
movs
adc
pop
fimul
cmps
xchg
aas
out
jb
pop
jmp
in
mov
jbe
scas
jmp
dec
call
arpl
outs
mov
xor
xchg
mov
sub
add
repz
cld
cmp
test
out
inc
ret
pop
cdq
mov
loope
sti
mov
pop
pop
cli
xchg
inc
loope
adc
sbb
or
xor
pop
gs
ret
call
pop
sbb
test
xchg
jnp
fistp
jg
xchg
push
cmps
lds
jo
cwde
cmc
movs
pop
and
std
addr16
or
and
xor
add
dec
pop
pop
add
add
shr
xlat
mov
iret
fild
ret
jle
add
mov
or
jo
mov
mov
push
ins
xor
sbb
rol
call
into
dec
xor
je
mov
fdiv
mov
add
inc
cwde
sbb
dec
inc
cmps
sub
push
or
push
ret
mov
xchg
jge
add
mov
mov
mov
push
mov
sbb
in
pusha
sub
cdq
xchg
or
mov
jle
or
add
out
ds
sbb
jno
dec
inc
in
and
out
imul
ins
cdq
pop
push
je
jo
out
xor
pushf
push
cld
push
idiv
mov
add
cmp
aad
sbb
stc
addr16
call
jg
sub
cmc
popf
mov
inc
stc
ins
sbb
retf
test
cs
shl
pushf
mov
or
pop
out
fs
jne
cli
data16
retf
sub
icebp
fmul
push
ret
jne
aam
sbb
aad
cmc
fmul
inc
sub
cmp
hlt
bound
jmp
or
sub
and
jne
cmps
fst
inc
(bad)
aaa
mov
gs
cmp
aaa
mov
mov
jae
faddp
retf
jecxz
pop
js
out
jmp
test
rcl
js
jae
rcl
xadd
fist
add
xchg
fs
rol
xor
xchg
mov
repnz
sub
shr
popf
adc
arpl
xor
sub
dec
ror
mov
add
dec
scas
push
dec
xor
mov
icebp
pop
inc
inc
sahf
jo
js
mov
daa
push
ss
mov
or
fist
mov
lock
mov
int
add
mov
xor
(bad)
(bad)
cmp
xor
dec
mov
sbb
adc
jno
movs
pop
xor
pop
outs
lds
jnp
dec
push
outs
pushf
mov
or
lds
cmc
add
mov
mov
xchg
mov
lock
mov
pusha
jmp
leave
hlt
cmc
cmp
fwait
mov
icebp
pop
xchg
jbe
out
sub
jae
icebp
jmp
out
cmp
fcom
sub
and
test
jb
out
adc
dec
std
aas
movs
ins
ins
dec
mov
ficom
jmp
jecxz
mov
or
cmps
mov
xor
dec
pushf
popa
dec
scas
jle
rcl
mov
(bad)
(bad)
dec
daa
dec
call
nop
je
sub
call
jle
out
inc
xchg
nop
hlt
fcmovne
pop
sbb
leave
add
nop
xchg
enter
sahf
xchg
cmp
jnp
popf
inc
add
mov
retf
adc
inc
adc
cwde
loope
gs
aas
idiv
xor
push
dec
mov
int3
jmp
rcl
imul
nop
pop
lods
sub
stos
out
sub
cmp
mov
test
pop
add
in
stos
push
xor
(bad)
ror
fwait
adc
sti
movs
daa
adc
shl
jp
scas
(bad)
add
pop
xchg
sahf
adc
stos
jno
cmps
ret
xchg
xor
inc
mov
ds
xchg
cmps
(bad)
retf
lock
fs
aas
(bad)
sahf
test
xor
(bad)
add
and
adc
xchg
ds
dec
jg
ins
jmp
int3
in
adc
test
pop
jo
sub
ins
mov
push
dec
sub
xor
cmp
pop
lods
adc
xor
daa
mov
loopne
fcom
ret
mov
scas
ret
fwait
sbb
mov
mov
jae
repz
sbb
jnp
pop
xchg
pop
mov
lods
loopne
call
inc
jle
dec
xor
mov
adc
xor
ja
mov
aam
jnp
mov
jmp
sub
xchg
pop
inc
xchg
rcr
lahf
lds
imul
adc
sbb
inc
ins
(bad)
(bad)
cmc
jmp
mov
pop
sbb
add
inc
push
sti
lods
ret
mov
dec
jae
add
fstp
inc
pop
ror
dec
mov
out
cmp
push
fwait
ins
test
ds
jo
pop
outs
and
call
inc
jno
(bad)
shr
shl
lods
call
sub
xor
arpl
sahf
cmp
pushf
pop
sbb
shr
mov
call
jmp
cmp
sbb
into
sbb
adc
fcom
sbb
or
icebp
ret
add
or
dec
cmps
mov
mov
push
jno
adc
and
ds
test
push
iret
es
and
cwde
lahf
jmp
and
cmps
adc
add
xchg
sar
xor
adc
and
mov
cmp
dec
xchg
rcr
mov
mov
test
clc
lahf
pusha
lahf
js
sub
(bad)
xlat
mov
stos
xchg
pop
aas
cmps
xchg
test
mov
lahf
mov
sbb
mov
iret
jg
aaa
mov
inc
nop
sbb
test
mov
js
push
arpl
repnz
or
pop
ins
(bad)
push
repz
rcl
or
pop
shl
aam
jns
pop
arpl
test
lea
in
pop
push
pop
xchg
ss
int3
dec
(bad)
stos
dec
lock
mov
fisttp
shl
inc
cmps
ja
ss
cmc
mov
jae
loop
jge
ds
enter
xor
adc
movs
in
mov
and
es
mov
nop
je
and
jecxz
mov
cmps
fild
sbb
iret
iret
mov
or
sbb
add
push
gs
push
hlt
clc
jmp
lods
add
test
aaa
outs
imul
int
pop
verr
xchg
daa
jle
jl
push
mov
jmp
jge
inc
dec
repnz
push
pop
xchg
lahf
lock
dec
cmp
or
adc
lahf
std
fst
pop
jmp
or
movs
jbe
(bad)
push
out
pop
and
out
mov
dec
push
pop
pop
cmp
dec
das
jecxz
xchg
jecxz
push
std
pop
dec
nop
xor
mov
lods
sbb
lea
(bad)
adc
push
xor
add
int3
push
or
iret
stc
lock
dec
jg
inc
xchg
sbb
xor
(bad)
xor
hlt
sbb
or
pop
cmp
or
ja
mov
pushf
lahf
lahf
jne
inc
xor
out
or
mov
xchg
and
jl
jns
pop
popa
add
sbb
sub
jp
jl
in
mov
cmps
or
int3
or
mov
lea
aam
xchg
(bad)
int3
inc
sbb
fcmove
lds
dec
aam
hlt
in
(bad)
jbe
add
mov
rcl
call
jmp
cmc
push
rcr
pop
mov
xchg
pop
mov
fcomp
loop
shl
mov
int3
cmp
inc
test
sar
push
scas
imul
iret
int
sub
add
push
adc
aas
loope
outs
dec
dec
push
mov
sub
push
dec
cmp
push
xor
imul
out
sub
adc
push
icebp
cmp
cli
daa
cld
rcl
shl
push
fbld
and
mov
daa
cld
mov
cmp
(bad)
cmps
btc
ds
cmp
jae
loop
xor
icebp
(bad)
jmp
sbb
push
and
add
outs
inc
sub
inc
fidivr
lahf
pcmpeqd
sbb
int3
dec
and
retf
mov
div
mov
mov
fcomp
ja
cmps
test
enter
add
or
xor
in
out
adc
lods
pop
js
(bad)
dec
mov
pop
push
test
sub
js
std
ss
cdq
jg
xchg
xchg
push
cld
into
clc
xor
cld
cld
xchg
sub
push
lahf
jg
das
(bad)
shr
jnp
es
das
packssdw
in
rcr
or
popa
stos
and
jno
cmp
mov
mov
jmp
xchg
imul
pusha
and
or
scas
ror
pop
nop
mov
retf
in
mov
fist
xchg
adc
mov
out
(bad)
loopne
xchg
cmp
or
jp
cmp
stc
(bad)
mov
mov
lock
retf
mov
popa
or
imul
or
xchg
lahf
or
scas
repnz
dec
add
cdq
scas
push
xor
mov
mov
sbb
fs
rol
retf
cmp
sub
lds
out
jp
push
jne
jno
faddp
pop
jo
in
mov
add
div
sti
pop
stc
stos
add
das
xchg
shr
loop
pusha
xchg
or
sar
in
mov
jl
and
jns
pop
push
ss
hlt
mov
cmp
push
test
lods
jne
sub
pop
xchg
pop
jne
lods
push
imul
push
jmp
push
add
ins
adc
cwde
(bad)
out
mov
inc
pop
icebp
ins
loopne
fs
cmp
retf
cmp
cmp
rcr
popa
lods
lods
xchg
int3
pop
cmp
mov
not
shl
call
repz
push
or
stc
sbb
retf
icebp
test
(bad)
sub
les
dec
dec
and
cwde
sahf
in
test
push
adc
jno
js
pushf
mov
jecxz
call
out
sub
sbb
cwde
jg
push
and
pushf
adc
mov
stc
fisub
push
xor
test
dec
arpl
xchg
add
mov
dec
cmc
into
push
pushf
mov
push
scas
in
inc
cmp
sbb
sbb
fild
pop
or
adc
mov
pop
pop
test
repnz
pop
paddd
xchg
out
inc
mov
(bad)
push
test
ins
cmp
xor
xor
mov
push
clc
mov
int
nop
cmp
lods
adc
cmps
push
arpl
mov
add
js
sbb
pop
data16
sbb
fidivr
xchg
leave
stos
or
lods
movs
shl
or
xchg
inc
outs
in
mov
pop
jns
jecxz
push
mov
jne
sub
cmps
(bad)
mov
xchg
aam
loop
xchg
loopne
jo
(bad)
int3
or
dec
xor
adc
hlt
or
call
pop
test
jl
stos
out
pop
pop
test
jmp
leave
test
xor
fisttp
and
imul
pop
aas
dec
sub
test
cmp
mov
push
lock
cwde
sbb
xor
cmps
dec
loopne
add
sub
cmps
into
mov
mov
push
and
adc
cmp
(bad)
out
test
mov
push
adc
pushf
inc
repnz
int3
mov
ins
inc
daa
leave
std
pmulhw
cmp
mov
cs
cdq
mov
loope
gs
retf
das
loope
arpl
or
jmp
je
or
rcl
mov
aad
cli
pop
mov
push
ins
push
out
mov
pushf
jle
cwde
adc
xor
mov
xor
sbb
xchg
loop
scas
sub
jno
pushf
or
leave
movs
push
pop
mov
outs
cld
xchg
cmps
dec
push
add
mov
nop
fcom
jb
sbb
mov
pop
jne
ret
dec
push
scas
pop
call
(bad)
or
inc
pop
dec
test
sub
test
mov
imul
mov
imul
ja
mov
lods
sbb
cmp
int3
pop
pop
ss
test
sub
mov
push
mov
jg
pushf
pop
lock
(bad)
mov
mov
int3
mov
cmp
loopne
mov
call
stc
xlat
clc
aad
dec
pushf
scas
(bad)
pop
aas
mov
pop
popa
cmp
jb
dec
mov
mov
or
test
push
jle
cmps
lea
mov
jne
lods
or
retf
mov
sub
std
push
jle
and
pop
sbb
cmp
retf
mov
popa
jno
add
cli
movs
jnp
jb
pop
loopne
clc
inc
pushf
out
fidivr
mov
es
jmp
dec
mov
leave
fild
mov
inc
aam
ror
push
jle
mov
pop
mov
mov
ins
pop
push
into
xchg
lahf
dec
xlat
imul
xchg
mov
test
mov
stos
push
push
neg
loopne
pusha
repnz
adc
and
pushf
mov
sub
inc
pop
int
scas
ficomp
xchg
inc
pop
jns
mov
dec
jl
loop
jle
fwait
xchg
sub
data16
out
inc
cs
enter
mul
ins
adc
mov
lock
in
xchg
mov
or
adc
sub
popf
jmp
fsubr
mov
sub
push
test
inc
fcom
adc
jnp
mov
fwait
jg
xor
jbe
cmp
mov
or
dec
sbb
jge
dec
repnz
leave
lods
xor
fisttp
mov
or
or
lds
daa
jl
inc
add
lock
out
rcr
adc
cdq
xchg
data16
jae
clc
neg
xchg
ins
(bad)
sbb
loope
inc
inc
cld
adc
adc
sub
xlat
adc
or
mov
test
sub
mov
mov
adc
push
lds
(bad)
xchg
push
mov
test
xlat
stos
inc
adc
cwde
xchg
adc
mul
xchg
sub
xchg
scas
or
push
jg
pop
arpl
repnz
sbb
push
and
fdiv
and
iret
cmp
into
jp
adc
loop
inc
push
popa
das
xlat
cmps
movs
mov
loop
repz
nop
or
aaa
push
test
sbb
(bad)
test
jb
sub
inc
xchg
stos
push
lods
and
out
add
add
xadd
outs
test
js
mov
xor
sub
ja
(bad)
sub
rcr
cmp
shl
call
xor
out
sub
jno
test
sub
mov
mov
xor
add
cs
cwde
adc
int3
add
xchg
push
add
pop
loope
shl
sbb
test
mov
inc
int
outs
mov
outs
mov
cmps
lds
js
xchg
fstp
xchg
mov
inc
aam
jmp
sti
add
or
jne
lahf
imul
mov
lahf
js
and
dec
mov
xor
push
xor
add
and
xor
sub
retf
(bad)
dec
stos
jl
and
inc
ficom
mov
sbb
inc
lods
ins
mov
fs
out
repz
push
test
popa
test
int
mov
call
outs
cmc
das
call
push
shl
jecxz
fisttp
mov
xchg
inc
lea
xor
dec
scas
jb
jge
sahf
xchg
jo
out
(bad)
das
sbb
rcl
mov
jnp
daa
in
cmp
and
pop
fld
dec
stos
fcomp
in
shr
sar
out
pop
mov
push
sbb
cmps
inc
shl
cli
sub
cmp
xor
loopne
mov
dec
scas
jl
sbb
imul
dec
in
inc
int3
push
mov
pop
(bad)
or
ret
add
push
rcr
mov
add
mov
xchg
mov
push
lahf
xchg
ja
test
mov
mov
inc
mov
test
dec
neg
cld
ja
je
xor
or
and
adc
dec
call
cwde
call
and
inc
into
xchg
outs
lds
mov
mov
pop
in
pop
fstp
dec
or
ret
sub
pop
sbb
xor
cmp
adc
or
sub
sar
pop
rcl
inc
(bad)
push
loopne
xchg
mov
cld
cmp
stc
inc
test
and
push
fidivr
sub
and
pop
mov
pop
aam
out
mov
jl
pop
int3
cmp
or
pop
jmp
jl
inc
(bad)
daa
rcl
mov
mov
add
jns
jp
sub
and
or
adc
push
andnps
inc
imul
imul
(bad)
cdq
inc
enter
or
daa
pop
rcr
mov
sbb
push
stos
jle
jne
cmp
push
jmp
adc
or
sti
push
mov
inc
sbb
or
pop
xlat
cmp
retf
inc
lds
adc
jge
bound
(bad)
les
mov
pop
fsub
push
loopne
mov
jns
pop
mov
xchg
(bad)
arpl
add
out
add
cli
cmp
dec
cmp
cmp
fmul
shl
jle
cmp
sub
cs
push
push
xor
or
sub
dec
sar
ret
xor
add
xchg
mov
mov
adc
in
and
pop
mov
cmc
push
leave
and
jmp
or
push
out
loopne
cmps
jb
popf
xchg
arpl
scas
cmp
inc
movs
sahf
push
mov
xchg
jl
xchg
ins
or
xor
lods
xchg
jnp
ss
or
adc
mov
(bad)
cs
xor
aaa
adc
aaa
sbb
std
jnp
xor
sbb
mov
push
sbb
push
int
aad
fstp
pop
iret
dec
fld
adc
inc
lods
ins
movs
inc
mov
jnp
jle
xchg
imul
push
movs
jge
jns
sub
push
fisttp
(bad)
sub
sub
mov
fcomp
and
cmp
add
and
repnz
push
test
add
inc
(bad)
xor
cmp
out
cmp
xor
xor
sub
dec
fmul
ret
and
pop
mov
or
sbb
sub
xor
aas
les
push
shr
jmp
cmp
jecxz
mov
into
sub
and
into
cmp
repnz
and
or
xor
jg
jns
retfw
jg
mov
xchg
jl
push
data16
pop
adc
out
les
mov
push
xlat
sub
push
call
or
ret
mov
outs
(bad)
pop
mov
int3
push
sub
dec
mov
xor
push
sbb
or
adc
dec
ficomp
mov
jmp
adc
adc
adc
mov
(bad)
sub
out
cmp
jns
ja
je
nop
inc
iret
es
dec
lds
push
sbb
(bad)
int3
cmp
cs
push
(bad)
cmp
inc
fcomp
mov
fistp
and
call
fnstcw
addr16
int
mov
mov
and
out
ds
loop
fstp
push
mov
cmps
push
fmul
icebp
push
mov
jno
pusha
ficomp
sub
push
fistp
push
mov
nop
mov
adc
mov
xlat
xor
ror
mov
cdq
xchg
(bad)
xlat
add
ret
dec
mov
enter
cmp
and
pop
test
ins
aas
sbb
push
test
or
cmp
add
add
mov
int
add
push
cmps
push
(bad)
pop
les
inc
(bad)
(bad)
cmp
inc
shl
in
rol
sub
sub
pop
mov
mov
movs
jo
popa
scas
call
pop
scas
jae
fsubr
push
fadd
std
cmp
push
pop
sbb
cmp
push
repz
repz
fwait
jle
daa
pop
or
and
loop
sar
push
jb
push
shl
(bad)
and
pop
fadd
pop
mov
jns
mov
scas
nop
cdq
inc
aad
fdivr
in
movaps
call
sub
pop
sub
ret
dec
mov
js
jl
in
or
mov
jb
mov
cmp
push
cmp
(bad)
push
mov
xchg
xor
pop
mov
fbstp
and
dec
stos
(bad)
jne
jno
jp
arpl
addr16
xor
xor
fild
shl
ss
add
in
push
out
mov
xor
push
mov
or
push
movs
xchg
fwait
xchg
clc
pop
fsub
out
test
popa
(bad)
adc
cmp
pop
xchg
idiv
in
(bad)
push
fist
cmps
inc
(bad)
and
or
push
pop
imul
dec
scas
shl
mov
push
fsub
cmc
pop
fst
dec
sar
dec
aad
adc
push
repz
dec
fmul
push
sbb
sahf
pusha
iret
cmp
and
add
pop
scas
dec
fiadd
clc
or
cs
add
mov
mov
xchg
fnstcw
in
and
adc
ret
cmp
in
test
mov
cwde
jne
gs
or
clc
dec
scas
pop
fwait
xlat
inc
lods
jns
je
add
jecxz
cmc
add
jmp
sti
and
or
movs
scas
xchg
jmp
sub
stos
popf
dec
iret
and
jecxz
mov
les
fs
jp
ret
pop
retf
add
push
enter
iret
pop
fsubr
mov
mov
inc
adc
fdiv
ret
sub
adc
push
test
mov
mov
xor
or
stc
and
cmp
add
xor
xor
iret
aas
retf
jbe
mov
xor
adc
or
dec
xchg
outs
and
sub
das
sbb
cmp
push
mov
pop
mov
icebp
xor
daa
sti
das
push
repz
xlat
pop
cmps
(bad)
dec
retf
xor
mov
inc
scas
add
jp
jp
jno
into
xor
add
aas
shr
(bad)
pop
push
out
xor
fbstp
xor
or
aaa
out
stos
popf
jmp
in
cli
daa
lds
cs
and
mov
cmps
mov
ss
dec
into
and
aas
shr
xor
pop
mov
jbe
xor
jmp
jmp
daa
stc
cmp
push
mov
dec
int3
cmps
mov
xchg
mov
pushf
or
or
sbb
adc
les
jg
bound
push
retf
add
inc
retf
mov
pop
mov
cmps
jno
jnp
push
ficom
xchg
xchg
popf
dec
pop
and
lock
dec
mov
sbb
add
outs
mov
and
and
pop
sbb
and
pop
out
jmp
imul
mov
int3
and
inc
mov
sti
push
or
jae
div
les
jmp
std
adc
ds
adc
sbb
sub
cdq
call
jmp
or
ins
fld
dec
std
pop
mov
jne
add
mov
fwait
xchg
mov
fst
dec
pop
xor
xor
and
sbb
pop
cli
inc
jmp
xor
push
aad
(bad)
daa
std
add
jl
mov
jnp
ja
xor
lea
clc
sub
cmp
pop
cmps
dec
stos
push
mov
push
xor
jnp
jl
pusha
(bad)
or
(bad)
pop
stos
je
repz
pop
jmp
sahf
jno
pop
xchg
fidivr
jae
ins
xor
stos
mov
stos
jae
xlat
push
fist
clc
and
sbb
push
jmp
(bad)
dec
add
retf
jmp
mov
cmp
pop
loop
or
xor
pop
test
std
sub
sub
xor
sbb
mov
and
and
dec
xchg
test
sahf
adc
push
fidiv
(bad)
xchg
mov
mov
mov
movs
cwde
jo
pop
mov
adc
xor
and
mov
dec
and
int3
pop
loop
mov
jg
js
nop
xchg
inc
retf
mov
into
and
sbb
adc
or
or
dec
mov
xchg
xchg
jbe
push
and
sbb
sbb
loopne
or
inc
and
ins
mov
or
mov
inc
mov
mov
mov
dec
pop
cmp
mov
and
pop
adc
pop
movs
jge
js
dec
rol
push
stc
push
cmps
data16
movs
push
fimul
repz
bound
jle
push
cs
sub
sbb
sub
iret
das
clc
pop
mov
pop
mov
popf
fwait
xchg
dec
cmps
outs
int
sbb
push
xchg
movs
sahf
bound
or
cmp
push
mov
mov
call
or
xor
or
dec
mov
out
loopne
or
loop
jmp
lds
or
es
pop
iret
push
scas
ja
in
add
xor
mov
fs
fist
push
fimul
or
std
adc
cs
add
sbb
jae
sub
pusha
mov
mov
movs
push
mov
dec
ret
and
jmp
lods
ins
lds
ins
retf
sub
sub
cmp
cdq
popf
xchg
cdq
jo
xchg
xchg
push
iret
add
pop
test
sub
test
sbb
pop
in
fidiv
std
xor
mov
loopne
sti
cmp
and
add
into
add
pop
add
imul
cmps
jnp
jge
in
sub
dec
hlt
and
pop
stos
lea
pop
mov
mov
outs
mov
xchg
test
in
xor
pop
ret
pop
mov
inc
lds
jns
(bad)
cdq
xchg
fst
push
out
or
cmp
sbb
dec
rcr
out
rcr
mov
outs
cmps
push
inc
mov
ins
mov
clc
cmp
xor
repnz
sub
xor
cs
cmp
pop
retf
pop
xchg
inc
retf
xor
adc
cmp
pop
rcr
lods
jp
or
es
xchg
xchg
arpl
cmp
xor
mov
sar
jmp
adc
pop
mov
push
out
stos
js
gs
sub
es
jmp
test
mov
jbe
cdq
dec
adc
test
out
fldenv
inc
loopne
pop
ret
push
iret
pop
shl
xor
and
push
xlat
and
cmp
xor
adc
ss
push
sar
lds
repz
pop
sub
hlt
or
out
mov
add
sbb
nop
lahf
leavew
pop
xchg
xchg
jge
xor
cmp
inc
fdivr
mov
xor
out
sbb
xlat
sbb
sbb
push
mov
push
sbb
sub
push
test
jl
sahf
jnp
arpl
pop
dec
lock
xchg
mov
movs
jno
pop
mov
rcl
jo
pop
mov
mov
fstp
cwde
mov
aad
ret
add
pop
xchg
popf
fmul
and
ds
and
movs
mov
ins
cmp
shr
repz
sub
add
mov
xchg
push
arpl
aas
sbb
pop
mov
rol
gs
mov
daa
repnz
push
lds
sahf
xchg
imul
daa
sbb
xchg
mov
mov
mov
movs
xchg
cwde
data16
mov
outs
enter
dec
mov
jne
xchg
pusha
fstp
xor
es
pusha
mov
ins
rol
cmps
(bad)
arpl
add
out
inc
xor
or
out
jno
outs
(bad)
xor
in
add
repnz
retf
and
add
nop
xchg
mov
push
ret
fwait
mov
adc
cmp
or
and
push
sub
dec
adc
cs
inc
test
xchg
dec
mov
cdq
cdq
lahf
dec
int3
daa
call
add
inc
int
dec
mov
test
dec
ret
pop
mov
and
neg
cmp
pop
mov
cdq
mov
js
stos
push
ja
popf
mov
aam
jecxz
mov
mov
xor
std
ss
aaa
dec
loope
mov
jno
push
mov
jo
inc
mov
jl
push
loop
cmp
out
sub
std
and
and
inc
xchg
lahf
lea
mov
xchg
cmp
or
test
lods
(bad)
push
test
push
inc
mov
les
jp
sahf
call
push
sbb
add
jge
inc
rcr
dec
mov
scas
ins
mov
xchg
es
pop
scas
xchg
aad
ret
pop
xor
adc
shl
push
(bad)
sub
dec
xlat
aas
adc
add
sub
and
shl
call
fistp
jne
push
mov
test
lahf
jle
sahf
bound
xor
add
fdivr
pop
aad
xchg
sbb
dec
aam
gs
scas
jl
nop
inc
xlat
or
sub
mov
push
fist
clc
ss
adc
cmp
cmps
jns
sub
and
and
jle
add
dec
stos
(bad)
push
fist
pop
mov
int
sbb
xchg
jle
ins
xor
cmc
push
int
out
add
cmp
inc
retf
or
jmp
pop
out
and
pop
imul
dec
add
add
scas
mov
cs
xor
cmc
inc
mov
mov
sub
xchg
mov
mov
jge
jne
lea
mov
out
inc
rcl
inc
retf
inc
into
pop
int
stos
xchg
fwait
dec
mov
jnp
inc
mov
mov
test
push
mov
jnp
lea
cmp
sbb
push
xlat
daa
push
loope
or
aas
out
int3
push
stos
inc
mov
std
cmp
daa
out
mov
fld
push
jmp
mov
lea
outs
movs
dec
(bad)
lods
stos
lea
adc
xchg
mov
mov
jge
xchg
(bad)
pusha
scas
in
inc
lds
in
pop
sub
sbb
into
inc
shl
dec
(bad)
dec
aam
shl
add
hlt
xchg
(bad)
imul
pop
movnti
std
cmp
retf
pop
fsub
out
inc
out
mov
loopne
sbb
je
and
or
sub
addr16
sub
call
ficom
es
dec
test
dec
fimul
mov
out
cmp
pop
mov
xlat
dec
ror
push
std
push
lods
pusha
ror
inc
into
pop
cmp
sub
inc
ficom
arpl
or
pop
push
test
imul
(bad)
pop
rol
test
mov
aam
xchg
rcr
js
dec
xchg
push
mov
movs
imul
test
neg
ins
lods
mov
and
push
jmp
and
inc
shl
fld
not
sbb
push
pop
cmp
pop
fisttp
sub
retf
adc
cmps
pushf
dec
xchg
call
dec
test
movs
call
sbb
xchg
cdq
xchg
jns
xchg
jno
(bad)
ins
mov
cwde
inc
(bad)
das
cmc
cmp
xchg
xchg
inc
fcom
jge
inc
lods
popa
int
push
add
add
adc
mov
int
aad
(bad)
clc
aas
loope
mov
ins
mov
lods
jle
xchg
imul
lds
ds
iret
push
mov
aad
in
sbb
icebp
inc
rcl
mov
pushf
bound
adc
int3
inc
mov
leave
dec
fisttp
ret
sub
pop
clc
pop
mov
push
ficomp
pop
cmp
mov
mov
cwde
jnp
pop
sti
ins
mov
jo
jp
xor
aaa
ret
loop
repnz
add
shr
adc
jmp
scas
mov
addr16
mov
mov
jle
mov
enter
out
dec
add
adc
or
pop
jecxz
add
and
push
add
jge
fwait
ins
fild
clc
add
ss
stos
imul
test
inc
(bad)
or
push
add
or
xchg
mov
ins
jmp
sahf
pushf
inc
fisttp
shl
pop
mov
sbb
div
sti
cmp
mov
aad
clc
pop
shr
sbb
adc
push
fild
popa
movs
popa
retf
xchg
inc
cmps
dec
adc
repnz
and
push
adc
nop
dec
test
movs
(bad)
jge
mov
call
lods
ins
enter
lock
(bad)
cmp
inc
lds
cmp
mov
outs
aad
shl
sub
aaa
cli
cmp
dec
stos
nop
mov
xchg
push
adc
jmp
rcr
jb
sub
icebp
cmp
xor
leave
inc
movs
jae
iret
push
cmp
imul
inc
mov
outs
or
rcr
mov
and
(bad)
and
inc
mov
rcr
jns
jne
mov
pop
mov
add
push
or
mov
dec
stc
inc
in
jae
shr
es
or
xor
shr
xor
xchg
cmps
jo
xor
xor
fidivr
les
js
and
das
imul
jo
add
push
mov
mov
lds
out
xor
xor
push
or
sbb
stc
pop
fimul
xchg
jb
and
dec
rcr
stos
jnp
inc
fbld
add
push
stc
cmp
cmp
jg
push
lds
retf
cs
fild
pop
icebp
xor
and
sbb
or
or
xor
push
mov
inc
aad
loop
fbld
por
push
add
stc
cmp
aad
test
sub
daa
ret
add
adc
xor
in
sub
aaa
out
jo
xor
pop
mov
jnp
jno
push
iret
and
cmp
sub
or
sub
sub
dec
fisub
sbb
test
shl
push
mov
xchg
je
dec
mov
push
nop
test
popf
aad
xchg
mov
pushf
call
std
jo
xchg
jb
xchg
stos
sar
pop
int
fsub
leave
push
movs
test
mov
aam
or
inc
mov
int
mov
fsubr
out
or
or
gs
push
stc
mov
inc
cmps
popa
fisubr
clc
sub
leave
and
jecxz
xor
xchg
mov
dec
ror
push
cmp
sub
mov
movs
mov
out
push
sbb
shr
or
mov
mov
das
inc
std
sub
push
repz
int3
pop
test
sahf
inc
fnstsw
loope
xlat
sub
int
test
mov
jne
sbb
repz
and
dec
mov
lds
in
add
jae
cdq
(bad)
int
mov
push
cld
pop
lods
xchg
leave
aaa
call
repz
or
icebp
pushf
mov
jo
or
in
or
mov
test
ret
push
jmp
sbb
push
pop
pop
loop
mov
jl
adc
and
cmp
and
rcl
adc
aam
pop
or
and
std
and
sub
inc
lods
jb
sub
inc
lods
lahf
je
jno
outs
sar
ins
mov
cmps
pop
fwait
inc
xor
stos
mov
addr16
fnstsw
jno
inc
(bad)
and
add
push
adc
aaa
add
xchg
push
add
adc
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
jne
je
push
adc
push
push
add
adc
and
dec
sub
cmp
pop
sub
ja
ja
dec
or
dec
sbb
js
arpl
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
jmp
mov
repz
jmp
retf
fwait
sti
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
xchg
(bad)
mov
xchg
ret
mov
test
shl
in
out
cdq
sar
mov
retf
test
fcomp
pop
ins
pop
push
xor
bound
jne
outs
aas
dec
sbb
das
imul
popf
repnz
lock
out
cmps
retf
lods
out
mov
xchg
fimul
(bad)
fidivr
iret
mov
out
std
mov
fild
idiv
in
out
cmc
mov
call
mov
scas
cli
mov
mov
xchg
aad
hlt
xchg
call
cwde
sar
jecxz
sti
lods
stc
stos
fmul
cmps
std
mov
scas
cld
pop
movs
fdiv
out
cli
stos
(bad)
icebp
mov
out
mov
mov
mov
jmp
scas
cli
mov
stos
retf
pop
cmps
sbb
push
jno
push
sub
xor
pushf
into
lahf
in
(bad)
lahf
in
ror
mov
mov
clc
(bad)
leave
scas
out
mov
scas
cld
mov
xchg
test
das
dec
pop
das
data16
and
or
push
ins
or
popa
daa
inc
ds
sub
ja
data16
and
ins
sbb
popa
sbb
jbe
dec
sub
inc
and
pop
popa
or
cmp
push
adc
outs
adc
xor
pop
cmp
dec
and
jnp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
(bad)
aam
sti
and
call
mov
mov
stos
loop
icebp
call
aam
hlt
mov
(bad)
sahf
cmc
mov
stos
(bad)
mov
retf
mov
mov
xchg
rol
in
lds
not
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
pop
dec
sub
je
pop
push
jg
outs
push
outs
cmp
popa
add
jno
push
je
outs
pcmpeqb
push
sbb
pop
and
inc
sub
jo
pusha
or
imul
push
jl
popf
aam
sti
mov
scas
std
pop
scas
shl
in
cmps
mul
shl
inc
hlt
mov
test
shl
pushf
out
in
in
lahf
sar
sbb
inc
xor
dec
xor
pop
xor
data16
sbb
push
ds
pop
ins
sub
gs
popa
cmp
dec
push
outs
adc
jne
gs
cmp
jp
pop
add
dec
ds
inc
cmp
push
aaa
ins
push
jo
jnp
jbe
dec
and
xor
pop
jne
push
pop
inc
and
jle
dec
or
jo
jb
push
xor
push
push
inc
adc
aaa
popf
shl
enter
cld
pushf
stc
xchg
out
les
ror
loop
les
pause
jmp
loope
rcr
xchg
sti
sub
shl
(bad)
mov
mov
test
fidiv
out
call
adc
icebp
cmps
in
cli
call
(bad)
cmps
(bad)
movs
aam
repnz
mov
leave
xchg
(bad)
lods
clc
mov
scas
int3
test
stos
jmp
mov
in
and
xchg
ret
xchg
out
jecxz
sti
cwde
ficom
fistp
in
neg
jecxz
jecxz
(bad)
mov
(bad)
jmp
mov
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
jmp
sahf
iret
pushf
jmp
mov
movs
sar
sub
hlt
sahf
fbstp
jecxz
mov
sahf
aad
enter
enter
hlt
cdq
in
test
retf
mov
enter
mov
retf
mov
lahf
div
mov
nop
fistp
rol
cdq
call
mov
into
lahf
int3
mov
(bad)
xchg
aam
lock
fwait
hlt
xchg
cmc
xchg
cmps
fsubr
inc
adc
pop
adc
imul
push
jge
arpl
push
bound
push
adc
imul
dec
and
push
push
ja
arpl
fs
ja
pop
xor
sub
pusha
pop
jge
push
sub
inc
and
jle
jb
jns
inc
cs
xor
push
or
jl
push
sub
inc
es
inc
repz
shl
jecxz
std
mov
stos
retf
pop
cmps
sbb
push
sub
add
push
add
daa
inc
cmp
push
push
sub
add
arpl
push
cmp
inc
add
add
pop
dec
cmp
inc
aas
pop
sbb
ja
outs
add
push
cmp
outs
das
jbe
outs
aas
dec
push
dec
sub
and
adc
fs
push
add
dec
ds
pop
pop
push
aaa
ins
or
js
jno
dec
and
push
adc
and
push
cmp
dec
add
inc
xor
ss
xor
ins
add
add
jge
pop
pop
jbe
outs
sub
inc
and
xor
pop
sub
(bad)
xchg
ror
out
shl
call
call
out
scas
icebp
mov
int3
scas
(bad)
mov
mov
out
mov
mov
icebp
xchg
(bad)
mov
stos
loop
sbb
add
outs
sub
pop
cmp
inc
setge
mov
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
push
cmp
sbb
push
xor
jl
dec
aaa
push
ss
ss
or
jae
push
xor
and
inc
or
jae
jnp
pop
ds
sub
inc
ss
imul
pop
adc
jnp
addr16
jl
pop
push
ins
sub
push
xor
push
pop
je
cmovg
addr16
push
ja
adc
jb
jns
pop
cmp
outs
setg
mov
cli
sahf
fld
fcom
sbb
dec
das
dec
pop
das
data16
and
or
add
dec
pop
lahf
aam
retf
movs
(bad)
cmps
les
in
(bad)
mov
cmps
in
mov
nop
imul
aam
les
shl
jb
popa
aas
inc
pop
pop
pop
cmp
cdq
lock
out
mov
cmc
fstp
cld
mov
xchg
test
and
jns
imul
sbb
ja
jbe
imul
cmp
push
sub
bound
outs
sbb
inc
and
or
sub
data16
jl
add
pop
adc
dec
xor
push
cmp
imul
or
jnp
jbe
sub
dec
or
pop
xor
sub
ins
aas
jp
pop
aas
jno
add
jp
pop
or
jge
jne
fs
outs
add
or
or
sub
inc
cmp
jge
pop
aaa
dec
pop
cmp
pop
adc
push
xor
inc
pop
pop
add
sub
inc
add
adc
pusha
or
sub
aaa
pop
xor
adc
pop
or
jb
push
sub
inc
pop
sbb
dec
das
dec
and
jns
popa
pop
inc
pop
adc
cmp
push
xor
sahf
shl
out
mov
and
inc
sub
and
arpl
jle
dec
xor
jns
pop
aaa
dec
and
ja
inc
and
popa
and
aas
inc
or
pop
and
sbb
inc
sub
dec
cmp
jne
ja
push
adc
add
pop
adc
data16
inc
and
push
xor
or
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
pop
and
inc
sub
cmp
pop
sbb
imul
jl
popf
xlat
fwait
(bad)
mov
mov
lods
leave
cmps
rcl
retf
mov
stos
cli
mov
(bad)
call
add
fnstenv
sbb
add
pop
add
dec
cmp
cmp
pop
adc
push
daa
dec
sub
push
push
jb
imul
and
clc
lods
loop
sti
fst
les
sub
ret
mov
add
adc
push
pusha
push
jge
arpl
push
sub
cmp
imul
xor
dec
and
jnp
inc
cmp
pop
xor
sub
xchg
icebp
xchg
shl
jmp
leave
sbb
or
jno
or
pop
pop
xor
imul
and
push
sub
jbe
inc
and
push
xor
outs
ds
and
jns
pushf
enter
(bad)
mov
jmp
call
fidiv
sbb
cmp
push
adc
or
outs
and
xor
dec
add
jbe
pop
ss
pushf
leave
call
retf
mov
iret
test
mov
neg
stc
mov
int3
scas
iret
add
loopne
std
(bad)
in
out
call
push
xchg
mov
stc
mov
dec
jmp
loop
cld
stos
loopne
cld
cwde
aad
push
int3
fild
sti
mov
mov
xchg
std
test
or
mov
mov
fwait
test
mov
mov
(bad)
aad
icebp
mov
(bad)
ficom
mov
mov
jmp
test
sar
into
scas
clc
test
fcomp
mov
mov
cmps
clc
mov
dec
aas
pusha
sub
push
pop
cmp
imul
ins
add
popf
fnstenv
adc
jne
add
bound
jg
add
ja
dec
xor
jb
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
pushf
fld
push
dec
sub
push
ins
cmp
ss
and
outs
pop
imul
ds
push
jl
popf
stc
mov
les
scas
std
and
(bad)
fistp
xchg
(bad)
mov
mov
cmp
inc
xor
adc
addr16
jl
outs
and
dec
sbb
dec
sub
xor
jbe
jnp
dec
daa
push
ds
adc
sub
push
add
push
xor
push
jnp
push
xor
sub
std
xchg
xlat
mov
movs
repnz
out
xchg
in
movs
shl
hlt
mov
sub
push
sbb
jp
addr16
jne
push
adc
dec
xor
push
cmp
pop
jg
push
ss
arpl
bound
inc
add
pop
jle
jae
push
xor
inc
es
aaa
jnp
push
push
or
js
dec
adc
jl
pop
push
fs
xor
aaa
inc
add
sbb
push
xor
xor
in
mov
xchg
and
mov
cmps
int
out
xchg
neg
sbb
and
js
dec
push
cdq
fstp
out
xlat
mov
fdiv
ror
cmps
(bad)
mov
int
mov
jecxz
stc
mov
mov
lds
das
fs
inc
cmp
sub
inc
xor
icebp
xchg
shl
jmp
mov
(bad)
retf
cmps
fnstenv
hlt
cwde
push
jbe
push
xor
push
pusha
push
inc
add
sbb
jne
inc
and
push
sub
xor
data16
jl
arpl
ins
ds
pop
pop
aaa
dec
sub
sub
push
cdq
cli
cwde
repz
out
ret
test
(bad)
leave
mov
xchg
shr
fbld
ret
mov
fisttp
or
push
and
ss
pop
fs
jae
pop
cmp
or
jne
fs
jbe
add
lds
fcom
retf
cwde
xlat
mov
cmps
loopne
iret
test
fwait
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
push
adc
add
aad
retf
out
test
mov
leave
xchg
xchg
icebp
lods
jecxz
call
or
xor
je
ins
daa
ins
xor
jns
data16
jp
inc
cmp
jnp
cwde
retf
mov
ror
sti
test
mov
aam
in
out
mov
xchg
mov
mov
stos
jmp
or
mov
xchg
shr
fsub
call
dec
push
jg
dec
aas
pop
pop
xor
dec
or
js
or
pop
and
bound
pop
or
or
emms
or
aaa
dec
push
pusha
adc
or
inc
push
xchg
out
sbb
and
push
dec
cmp
pop
ds
push
adc
jle
jp
arpl
inc
cmp
jne
push
add
pop
dec
xor
dec
or
adc
add
push
pusha
or
jle
or
sbb
push
add
imul
pop
cmp
inc
and
jle
jb
outs
sub
adc
pop
add
es
xor
sahf
loop
in
out
xchg
fnstenv
xchg
rol
loope
(bad)
mov
cwde
cmc
mov
sbb
jne
push
or
pushf
retf
pusha
cmp
xor
sahf
not
out
and
cli
mov
sub
dec
pop
dec
das
pushf
stc
and
out
into
and
in
mov
fnstcw
out
mov
scas
sbb
dec
xor
push
cmp
pop
push
cmp
and
jbe
sub
sub
inc
cmp
call
lds
cli
fmul
in
rcr
les
cli
fwait
jmp
int3
fcmovu
mov
(bad)
in
add
fsubr
into
mov
xchg
shl
test
rol
in
(bad)
mov
repnz
stos
les
mov
fnsave
call
fwait
shl
mov
cld
xchg
sbb
dec
or
sub
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
rcl
jmp
fst
jmp
mov
sbb
jp
jo
push
sbb
pop
sbb
data16
inc
daa
jns
jbe
jae
pushw
bound
jp
push
dec
adc
cwde
cmc
test
pop
push
popf
fidiv
lods
fiadd
ss
or
gs
and
jns
push
sub
jne
inc
and
dec
add
fisttp
stc
xchg
retf
mov
(bad)
in
jmp
mov
loop
clc
fisttp
lods
shr
xchg
loopne
jecxz
(bad)
fisttp
dec
cmc
mov
stos
cld
adc
jle
imul
pop
xor
dec
pop
pop
add
and
pop
pop
ds
pop
adc
add
cmp
sub
imul
gs
or
lahf
inc
iret
scas
sar
jmp
cmps
(bad)
mov
movs
repnz
test
out
(bad)
xchg
(bad)
mov
fimul
clc
xchg
int
out
mov
jmp
fisubr
div
mov
mov
jecxz
fnstenv
clc
mov
test
and
aam
xor
pusha
sbb
aam
out
pop
clc
pushf
sbb
xchg
ret
iret
sub
test
std
mov
ret
mov
push
fs
aam
cmp
shl
jecxz
lahf
shl
cld
mov
ret
xchg
inc
xlat
mov
(bad)
fsubr
std
mov
xchg
shl
pop
sub
push
adc
shl
shl
dec
sbb
das
dec
sub
bound
push
mov
test
mov
pop
mov
ds
xchg
mov
nop
(bad)
hlt
sub
sahf
movs
mov
das
jge
cmps
mov
mov
add
stc
dec
push
into
dec
punpckhwd
mov
pop
jno
fild
popa
les
(bad)
mov
cmp
xor
jl
sbb
jp
cmp
jmp
jg
into
mov
(bad)
xor
adc
outs
retf
adc
clc
je
cmp
lock
add
(bad)
jecxz
stos
mov
push
mov
pop
mov
leave
push
(bad)
inc
or
jo
push
sbb
adc
push
cmp
cmc
cmp
popf
repnz
push
daa
out
test
popa
push
mov
dec
pop
adc
pop
(bad)
int3
test
dec
jle
push
(bad)
lods
rcr
mov
imul
scas
sbb
mov
imul
gs
ja
jb
inc
sub
jmp
pop
loope
sahf
test
punpckhwd
daa
push
sbb
xchg
sti
pusha
int
xor
test
jp
inc
dec
daa
or
mov
retf
mov
icebp
push
stos
xchg
mov
xchg
and
xchg
aad
push
sbb
fidivr
or
test
imul
jbe
mov
lds
lods
jb
mov
jno
mov
ret
mov
repnz
xor
or
js
stos
cmp
jne
mov
push
and
sbb
dec
inc
aad
loop
aaa
xor
xchg
es
daa
addr16
popf
jmp
hlt
xchg
out
(bad)
cmps
les
fimul
sub
sbb
popf
retf
xchg
xchg
mov
call
sbb
in
loop
push
inc
outs
aad
aad
and
bound
ret
lock
fs
lods
mov
cmc
sub
pop
hlt
sub
add
retf
add
shr
mov
ret
ss
jl
xchg
scas
cld
bnd
je
mov
bound
jo
arpl
leave
jne
jp
pusha
adc
fdiv
pusha
push
mov
pop
mov
fnstsw
(bad)
es
aas
inc
or
and
addr16
pop
ds
jnp
loop
inc
and
sbb
xor
(bad)
loope
test
push
or
jnp
and
xor
inc
in
xor
push
or
aas
ds
pop
in
mov
cwde
movs
jp
stos
xchg
inc
add
inc
cld
sub
pop
dec
sub
sub
ss
adc
mov
int3
sahf
add
es
push
push
in
xchg
push
jg
add
test
mov
popa
in
and
pop
sti
jno
pop
cmp
jno
push
(bad)
push
push
push
and
(bad)
adc
(bad)
xchg
int
and
out
and
in
jno
push
sbb
pop
and
out
xchg
mov
es
mov
cmps
dec
sub
cli
(bad)
jecxz
and
leave
add
xchg
sar
push
xor
jne
mov
adc
test
scas
daa
lock
aad
inc
xor
or
jl
ins
gs
lds
repz
mov
or
jg
movs
loope
sub
mov
mov
lds
ror
inc
ins
xlat
xchg
out
(bad)
pop
hlt
nop
add
jno
dec
mov
mov
add
mov
int3
sub
call
cmc
mov
icebp
test
mov
jmp
fcom
sbb
mov
pusha
xchg
imul
cmp
sbb
aas
ds
xchg
stos
sti
out
dec
jmp
or
int
push
scas
cmps
fnstcw
call
imul
jg
fnstsw
fidivr
push
shl
movs
mov
das
jne
mov
mov
call
sbb
adc
mov
das
sbb
jns
loopne
cs
jmp
inc
repnz
(bad)
std
sub
add
pusha
add
lds
add
gs
call
inc
(bad)
adc
dec
mov
jp
mov
mov
adc
dec
loopne
mov
cwde
mov
adc
aaa
push
cli
or
xor
push
cld
push
push
fwait
xchg
xor
or
scas
ret
test
adc
cli
inc
jnp
dec
shr
enter
add
sar
sbb
mov
push
mov
mov
js
std
mov
dec
daa
inc
sbb
mov
pusha
mov
xchg
(bad)
mov
jns
inc
out
movs
shr
xchg
fsubr
xor
sbb
sti
xchg
call
(bad)
pop
push
outs
inc
mov
mov
mov
imul
fimul
add
xor
popf
mov
sar
xor
xchg
fwait
into
mov
jecxz
push
fdiv
sub
popw
push
imul
add
jns
mov
out
xchg
fcmovb
push
push
push
or
das
mov
xchg
mov
iret
and
aad
loope
sbb
push
or
adc
jp
pusha
sub
dec
and
inc
adc
or
add
jae
push
adc
or
add
ficom
cwde
sub
xor
xchg
lods
jecxz
cmp
inc
popa
fld
mov
mov
dec
or
ds
xchg
mov
dec
sub
adc
neg
push
int
xor
jo
sub
add
cwde
into
mov
(bad)
and
bound
jb
scas
lea
jp
icebp
js
mov
mov
jo
pop
sti
xchg
ret
pop
mov
in
movs
mov
out
xchg
mov
ins
mov
std
aaa
lock
es
and
mov
mov
jbe
je
aaa
ins
sub
and
adc
pop
aad
in
mov
je
jo
dec
or
cmp
aaa
les
fistp
mov
cld
outs
aad
xor
int
cmp
pushf
inc
xor
sub
nop
cwde
and
dec
loopne
mov
adc
lods
rol
cs
fsubr
mov
jle
sub
cli
aad
inc
mov
sbb
push
fsubrp
test
cli
mov
mov
out
jmp
sub
sti
add
jle
xor
test
ins
or
addr16
rol
cmp
je
and
add
pop
cmp
sahf
mov
repz
fst
push
dec
fnstsw
fisub
(bad)
sbb
inc
or
scas
jge
imul
fwait
loopne
out
mov
fnstenv
mov
mov
shr
and
fsubr
pop
je
shl
ss
arpl
arpl
add
mov
js
retf
mov
fsub
ret
xchg
fld
fbld
in
cmc
xchg
not
int3
mov
push
dec
sbb
cmp
js
xchg
hlt
cmp
(bad)
(bad)
js
lods
mov
in
and
mov
shl
cmp
xor
mov
dec
sub
sub
(bad)
fstp
neg
nop
repnz
in
cmps
add
jnp
xchg
mov
retf
idiv
lahf
jmp
add
mov
xchg
fdivp
sub
aam
sbb
fdivr
mov
mov
push
xchg
mov
xchg
jae
pusha
and
out
pushf
cld
and
jb
jecxz
inc
sub
retf
imul
sbb
nop
in
scas
clc
lahf
das
mov
sub
and
push
xor
jae
lahf
int3
mov
out
iret
add
mov
fild
push
xor
mov
div
jl
shl
pop
xchg
mov
push
xor
aaa
imul
sbb
dec
add
sub
lods
add
pop
push
and
xor
pop
and
test
push
fsub
mov
jge
jnp
and
ins
sub
outs
aas
dec
push
dec
sub
sbb
inc
jno
div
mov
cmp
cwde
cld
cwde
and
maxps
mov
retfw
fnstsw
jecxz
and
mov
xchg
mov
pop
imul
and
pop
cmps
mov
leave
and
inc
jnp
movs
cld
in
pop
cs
out
add
fwait
(bad)
sbb
inc
outs
and
aam
in
clc
mov
mov
fmul
stc
mov
into
sub
sub
mov
js
pop
js
les
jmp
xchg
das
into
arpl
mov
cmp
mov
xchg
icebp
xor
test
sbb
imul
jg
popf
into
mov
dec
sub
imul
adc
pusha
ds
ds
(bad)
ds
sbb
popf
inc
test
xchg
aad
jmp
mov
cmps
ficom
adc
push
fwait
nop
test
mov
test
mov
sbb
imul
and
pop
xor
movs
xor
jae
cmp
adc
cwde
pop
mov
inc
mov
fnsave
int
dec
cmp
and
push
mov
push
cmp
inc
xor
outs
call
ret
push
push
xor
cmp
or
jp
fisub
mov
bound
sbb
mov
adc
push
sub
imul
cmp
jge
pop
and
outs
sub
out
ins
sbb
dec
lahf
outs
and
setno
add
repz
outs
sbb
leave
mov
pop
xchg
mov
add
(bad)
jne
add
js
jecxz
pop
push
test
sbb
(bad)
jmp
lahf
popf
adc
dec
inc
cs
iret
mov
lods
cmp
cmc
jo
sbb
adc
mov
(bad)
mov
scas
cmc
cmp
jmp
adc
daa
aad
movs
sub
push
inc
fwait
sub
(bad)
mov
mov
xor
cmp
mov
push
popf
sub
or
adc
out
push
mov
sub
pushf
mov
inc
addr16
rcr
jg
sahf
jne
inc
ins
add
lds
call
mov
stos
std
mov
in
ret
sbb
sbb
sub
push
ss
and
xchg
pop
mov
sbb
push
outs
aam
in
cs
daa
fild
mov
enter
ins
xlat
mov
scas
sub
jae
push
jle
dec
or
ins
push
outs
cmp
jb
pop
cmp
bound
sahf
out
in
ret
fst
cmp
or
mov
retf
adc
fcom
js
jo
xchg
(bad)
and
outs
inc
das
bound
(bad)
mov
jl
jle
sar
fstenv
cmp
or
leave
or
pusha
adc
div
shr
call
stos
inc
mov
idiv
lahf
ror
addps
movs
(bad)
mov
cli
int
cmps
push
mov
lock
arpl
or
cmp
ins
sub
loope
adc
out
and
repnz
jns
jne
inc
aas
inc
cmp
cld
test
shl
jmp
in
sbb
dec
mov
pop
inc
push
and
fsubr
mov
jbe
mov
retf
xlat
xchg
test
lahf
bound
push
test
outs
jle
inc
call
daa
imul
fdiv
xchg
mov
jp
pop
icebp
fimul
cwde
cli
mov
ret
sti
loope
mov
xchg
fstp
adc
dec
mov
and
ret
sbb
cmp
cmp
mov
sbb
pcmpeqd
jp
sub
cmp
pop
pop
adc
repnz
push
icebp
add
mov
mov
out
in
movs
sub
das
xor
jg
mov
dec
jp
lds
fisub
(bad)
les
dec
xchg
pop
mov
mov
sar
add
xchg
aam
ror
mov
movs
push
jns
retf
(bad)
sbb
inc
fnstsw
nop
jnp
pop
dec
stos
aad
sub
inc
add
cwde
mov
add
cld
xchg
aam
in
mov
stos
sti
mov
xchg
in
nop
in
movs
out
mov
test
fnstsw
sti
mov
sub
push
dec
das
cmps
xor
mov
mov
jmp
or
movs
xlat
div
aaa
pop
mov
scas
dec
fnstenv
mov
fstp
jae
jl
xchg
xchg
cmc
xor
push
sub
dec
sub
inc
std
test
cmp
cmp
pop
stos
add
mov
into
loope
fidiv
mov
les
test
sbb
mov
dec
adc
lods
cmps
rcl
ficom
push
(bad)
sahf
ret
push
movs
into
ins
mov
mov
aaa
adc
pop
loopne
ja
mov
mov
in
xchg
inc
and
jmp
inc
or
fldenv
jge
jg
or
repnz
cmp
jmp
mov
push
test
fldenv
sbb
sub
or
fs
adc
stos
leave
mov
cmp
fnstsw
cmp
fild
push
or
dec
mov
push
fild
mov
lahf
lahf
outs
imul
push
sbb
jg
adc
ins
and
cmp
jns
cmp
or
daa
aad
xchg
mov
inc
jae
cmp
mov
lahf
mov
bound
xor
rep
rcl
sub
pop
jp
mov
mov
sbb
cmps
jbe
xchg
dec
or
leave
movs
call
add
xchg
pop
mov
scas
and
jg
dec
xchg
(bad)
clc
or
mov
not
ret
mov
adc
cmc
mov
mov
xchg
out
hlt
mov
imul
loop
pop
push
sbb
sbb
imul
xor
ja
push
aaa
dec
and
jo
inc
sub
push
adc
je
outs
aas
inc
(bad)
sbb
shr
les
movsx
pop
adc
into
pop
adc
stos
enter
imul
outs
sub
pop
call
ja
push
xchg
repz
push
adc
and
test
ret
push
sbb
mov
ja
lea
mov
mov
loop
test
ffree
clc
xchg
pop
lea
inc
mov
and
ja
pop
test
jo
fimul
(bad)
push
push
popa
popa
fisubr
lds
xchg
or
repnz
jb
cmps
imul
mov
fcomp
xlat
mov
outs
out
(bad)
mov
push
out
pop
jns
into
mov
shr
scas
(bad)
mov
fst
aad
mov
adc
(bad)
sahf
dec
gs
mov
pusha
cmp
les
imul
icebp
jbe
retf
xchg
mov
in
mov
sar
jle
lods
enter
push
loopne
dec
add
(bad)
leave
jne
and
sbb
(bad)
outs
ror
mov
push
push
pop
adc
mov
out
inc
fucomi
mov
or
out
int3
mov
mov
iret
cmc
nop
adc
movq
dec
add
arpl
cmp
mov
mov
jmp
dec
jecxz
dec
xor
das
mov
cdq
xor
mov
sbb
xchg
mov
add
pop
in
sub
cmp
cwde
shr
sub
imul
clc
mov
stc
xchg
out
and
pop
xor
inc
inc
xor
sbb
retf
cli
xchg
icebp
lea
dec
inc
jbe
fld
inc
add
inc
clc
movs
add
cwde
cli
clc
add
loop
sub
jnp
mov
out
mov
lds
je
push
sub
dec
cs
ins
cmp
push
jp
pusha
and
arpl
aaa
push
and
gs
data16
(bad)
pop
push
pop
lea
ds
sub
xor
and
arpl
ja
sbb
push
std
jns
pusha
and
add
pop
out
scas
ds
push
add
dec
(bad)
cmps
in
cmp
sub
cmp
daa
pop
inc
popa
and
jmp
jp
inc
cmp
mov
cmps
(bad)
mov
movs
mov
dec
sbb
inc
lods
adc
mov
lahf
mov
push
ficom
pop
fild
ss
xor
dec
repnz
cmps
jle
mov
dec
mov
aam
push
rol
push
ins
mov
cmps
loop
cli
mov
mov
loop
ret
rol
jmp
mov
test
or
div
xchg
ret
xchg
gs
pop
and
test
mov
dec
pop
push
xor
mov
test
pop
aas
sub
mov
arpl
or
int
out
lahf
bound
outs
and
sbb
lods
push
xchg
ds
add
mov
test
inc
or
stos
retf
nop
mov
js
jle
das
aas
sbb
mov
push
xor
cli
arpl
fcomp
cdq
push
sbb
inc
cmp
fidivr
arpl
imul
dec
das
fild
xor
jle
dec
mov
mov
cmp
cwde
enter
xchg
in
mov
mov
popa
jge
mov
(bad)
clc
aam
mov
stos
cmp
push
dec
inc
daa
test
add
int
lds
lds
cmps
fs
mov
test
jge
ficom
xchg
inc
pop
inc
or
ins
cmp
jbe
push
adc
pop
xor
cmp
dec
xor
addr16
outs
cmp
xor
jmp
cmp
push
ret
leave
jnp
adc
sub
jo
xchg
add
scas
jmp
add
(bad)
jae
jne
and
data16
mov
xlat
mov
lds
outs
push
outs
imul
stos
loop
mov
inc
mov
mov
popa
mov
retf
(bad)
inc
mov
stos
cmps
test
outs
repnz
mov
fwait
xlat
scas
mov
sahf
int3
and
inc
or
push
mov
fisubr
jge
jle
xor
add
mov
push
and
(bad)
push
adc
inc
movs
in
push
fsub
dec
xor
jg
push
in
test
mov
add
push
lock
sub
aaa
call
push
add
or
fwait
cdq
dec
and
jnp
and
stos
movs
xchg
out
movs
test
mov
ins
dec
add
icebp
mov
(bad)
or
or
pushf
neg
loope
jne
mov
pop
ins
or
or
adc
fbstp
(bad)
ins
pop
mov
pop
add
arpl
(bad)
sti
mov
ja
push
and
scas
call
sub
inc
nop
inc
xor
outs
in
sub
and
mov
movs
sub
js
xchg
lahf
ficomp
ins
push
ss
and
inc
mov
leave
xor
inc
ss
daa
mov
inc
jl
jge
jg
jl
push
sub
and
aas
int
push
int3
cmp
movs
ja
lahf
les
dec
call
loop
push
sti
fwait
cmp
sub
gs
or
sub
jp
pop
push
dec
sbb
cmp
inc
cmp
push
xor
bound
data16
sbb
call
jno
xchg
test
sbb
cmc
push
pop
push
mov
jns
add
add
enter
out
cmps
mov
out
push
ins
fist
mov
xchg
pushw
out
jge
into
xchg
jl
jmp
push
aas
js
mov
mov
cmp
mov
mov
outs
cmp
push
xor
pop
cmp
mov
and
cmp
pop
cmp
stos
int
jno
enter
nop
test
fadd
fs
dec
sub
pop
xor
mov
call
pop
aam
push
sti
mov
mov
dec
pop
push
pop
xor
nop
enter
outs
into
cmp
mov
xchg
mov
inc
shufps
xchg
fisub
cmps
fbld
inc
aad
jg
cmp
xchg
add
xor
test
mov
stc
call
loop
jbe
or
imul
jge
rcr
mov
fiadd
sbb
les
pop
mov
add
mov
scas
(bad)
in
xor
test
add
test
loop
jnp
adc
(bad)
ds
ins
psllw
mov
add
lds
jle
rol
pop
test
cs
mov
jecxz
sub
mov
and
lods
xchg
sti
pop
xor
pop
pop
or
ret
imul
in
adc
fnstcw
push
mov
pop
mov
push
add
inc
aam
jp
ret
fsub
cmp
movs
jge
or
lahf
dec
adc
xchg
push
xor
sub
mov
dec
cmp
mov
pop
push
ficomp
int3
cdq
jle
adc
jbe
inc
(bad)
fnsave
neg
mov
pop
lods
xlat
jg
sbb
add
mov
pop
aaa
in
xchg
icebp
mov
shl
adc
ret
push
xor
dec
in
test
loope
sub
mov
sub
push
ret
test
jno
test
call
cld
mov
adc
mov
je
(bad)
stos
test
push
je
xchg
xchg
rcr
sbb
inc
(bad)
scas
test
pop
cmp
(bad)
test
pop
pop
lods
(bad)
xchg
sar
aam
mov
xchg
mov
pop
mov
data16
ficom
xlat
bound
cmc
lea
fistp
in
xchg
loope
cdq
retf
into
and
div
push
mov
cld
and
fild
data16
icebp
xchg
jns
int3
mov
jb
push
ds
ins
int
xchg
int
fldcw
jmp
sub
xchg
push
mov
test
fs
lods
shl
mov
cmp
cwde
gs
movs
cdq
loope
pop
nop
cmc
pop
push
hlt
cmps
adc
arpl
call
sub
pop
scas
fidivr
push
aad
inc
add
sbb
cmp
adc
dec
mov
mov
popf
in
pop
shl
adc
inc
sar
adc
mov
sub
out
add
icebp
xor
xor
scas
int
ja
mov
cmp
lahf
jno
pop
pop
(bad)
push
push
std
scas
cld
and
jne
(bad)
adc
jmp
ds
aad
dec
cmp
jle
rcl
mov
out
imul
mov
mov
sbb
jmp
ja
out
adc
mov
mov
pop
lock
mov
pop
xor
loop
pushf
test
or
mov
call
xchg
mov
(bad)
lods
cdq
cld
xor
popf
jae
xor
cmc
push
inc
mov
imul
call
fs
jo
pop
cmp
movs
and
popf
and
inc
movs
in
sub
int
pop
aad
movs
imul
icebp
mov
lahf
sti
mov
dec
shl
rcl
add
lahf
mov
dec
sub
pop
cmps
loop
dec
fdivr
gs
fsubr
mov
mov
movs
xchg
hlt
add
add
popf
mov
cmp
ror
xchg
nop
lds
pop
shl
push
out
mov
add
scas
imul
sahf
int
les
in
xchg
ror
ins
mov
xor
cdq
inc
sub
xchg
arpl
out
lods
imul
mov
ins
(bad)
mov
adc
mov
cmp
mov
das
ret
sbb
inc
sar
out
mov
les
fnstcw
es
mov
out
jb
ret
xor
sbb
push
mov
mov
xchg
or
mov
add
pop
fmul
mov
fsub
inc
enter
inc
xor
rcl
pop
or
pop
mov
push
jecxz
jbe
push
or
stc
and
mov
stc
sub
idiv
push
inc
and
jne
shl
aaa
in
xchg
stc
mov
jmp
cmc
cwde
shl
repnz
pop
jecxz
arpl
in
mov
push
out
pop
lods
loopne
push
aam
jle
shl
bound
jecxz
pusha
or
dec
fcomp
mov
push
aaa
dec
adc
int
xor
test
mov
add
rcr
or
test
mov
retf
push
pop
mov
inc
mov
ins
psubq
movs
lds
icebp
mov
scas
stos
lods
hlt
xor
scas
outs
and
xchg
xchg
sar
pop
test
jg
adc
dec
fnsave
or
xor
inc
daa
adc
add
mov
dec
and
jae
std
pop
push
shl
inc
mov
add
in
pop
cmps
(bad)
cmp
add
and
sti
aas
push
xchg
hlt
mov
and
(bad)
gs
and
push
enter
pcmpeqw
loope
data16
sub
fcom
mov
cmp
xchg
pop
mov
je
mov
jb
push
dec
adc
add
sahf
test
xchg
jle
or
mov
jp
stc
xchg
mov
fs
sbb
mov
pmulhuw
mov
(bad)
js
fisub
push
add
ss
shl
dec
aas
ss
or
mov
cli
jge
dec
sbb
data16
mov
scas
iret
and
mov
cld
sub
out
xor
ja
xchg
cmps
(bad)
pop
aas
not
jne
or
mov
and
push
sbb
cmp
jg
xchg
jbe
mov
xchg
jmp
or
push
mov
xor
test
add
outs
lds
nop
loopne
std
inc
add
xchg
jl
adc
mov
in
mov
cmp
arpl
sub
dec
sub
push
cmp
dec
ret
cmps
mov
pop
fild
cmp
push
adc
popa
shl
lahf
jno
dec
cmp
dec
ret
mov
sbb
in
pop
lods
loope
push
fstp
jo
jg
fwait
jmp
aaa
in
xchg
inc
ret
xchg
sahf
retf
aaa
push
shl
addr16
sbb
xchg
retf
and
dec
mov
(bad)
aad
dec
add
arpl
mov
loope
and
imul
cmp
cmps
fwait
(bad)
sub
out
mov
ja
cmp
adc
add
test
pop
jmp
imul
xchg
cmps
ficom
out
sub
jo
sbb
outs
sbb
sbb
jne
mov
cmp
aam
fs
cmp
xchg
inc
(bad)
jnp
int3
js
and
in
jb
leave
lods
popf
lds
sbb
cmps
scas
aad
sub
xchg
pop
(bad)
mov
retf
div
add
and
out
mov
je
ret
push
jnp
mov
jmp
pop
sbb
push
js
out
dec
es
lods
(bad)
(bad)
aad
dec
add
push
mov
jmp
push
fidivr
mov
push
xor
mov
jmp
stos
stos
xchg
add
sbb
push
cwde
mov
push
pop
stc
mov
aad
add
imul
push
jg
in
or
mov
mov
sub
stos
jp
push
inc
mov
in
push
and
dec
retf
xor
cmp
inc
test
and
sbb
icebp
xchg
div
push
fnstenv
or
or
stc
stos
mov
lock
xchg
inc
and
jb
shl
inc
movq
xchg
mov
mov
jns
or
add
popf
sahf
cld
and
mov
lods
in
sub
pusha
out
xchg
int
aaa
sub
xor
call
push
xor
xchg
ins
add
popa
xlat
xchg
rcl
jno
pop
cmp
push
mov
sub
mov
cmps
je
lds
mov
sub
stos
fidivr
jb
inc
inc
mov
xchg
sar
mov
sub
into
push
pop
sbb
push
loopne
adc
data16
(bad)
push
sub
fidivr
pop
jp
lahf
fwait
jecxz
inc
mov
ret
add
cwde
loop
sbb
(bad)
movs
jo
pop
cmp
imul
movups
call
and
jns
test
xchg
or
test
inc
pop
arpl
mov
adc
dec
lds
push
gs
call
je
jmp
loopne
xchg
fidivr
in
xchg
fidivr
imul
leave
xchg
dec
sbb
mov
xor
mov
scas
rcl
mov
data16
mov
std
sahf
cdq
sti
sub
hlt
xor
push
lds
jnp
lock
dec
adc
scas
std
inc
movs
call
push
aaa
adc
rcl
xor
jns
jecxz
adc
add
(bad)
je
cmovp
mov
or
jo
sti
xor
repnz
jg
repnz
and
add
enter
(bad)
push
cmp
sbb
(bad)
dec
or
push
or
jecxz
mov
stos
loop
xor
js
rcr
in
movs
jae
push
lds
mov
ror
push
mov
push
cmp
mov
cmp
jl
ret
push
adc
pop
ret
in
cwde
mov
out
add
int
xchg
rcr
repnz
xchg
aas
ja
lock
lods
fwait
ret
push
pop
into
mov
div
add
in
jns
pop
ins
mov
cmc
xor
rcr
loopne
aaa
cmc
cwde
sahf
(bad)
pop
daa
les
repnz
mov
cwde
push
xor
cmp
cmc
pop
xor
pop
repnz
shr
(bad)
mov
out
rol
das
xor
test
pop
mov
scas
cdq
in
aaa
jnp
mov
ret
adc
lahf
cdq
cli
jg
push
imul
inc
add
dec
xchg
adc
mov
sbb
mov
stc
aaa
dec
lds
adc
dec
adc
cmps
cwde
in
sub
dec
pop
push
(bad)
mov
mov
push
and
cmp
mov
scas
int3
pop
cmp
pop
cmp
lods
mov
aaa
fidiv
in
mov
pop
daa
out
test
sub
cld
pop
neg
push
rol
shl
test
les
mov
cmp
mov
sbb
and
js
sar
sbb
cmc
sub
pop
loope
pushf
aad
xor
test
or
in
and
mov
jl
retf
repz
aas
or
adc
and
mov
sub
mov
mov
ins
cmp
pop
cmps
out
imul
ficom
bound
clc
mov
adc
test
mov
not
and
mov
jg
int
jge
pop
jne
xchg
add
popf
lock
xlat
es
clc
popf
data16
stc
ins
and
fwait
ins
sub
ins
mov
cmps
jae
cmc
cwde
test
xor
test
lahf
fisttp
out
lea
aas
shr
mov
mov
sti
sub
lock
and
push
inc
mov
in
ds
shl
call
fmul
pop
jno
cmc
lea
call
xor
stos
adc
xor
jb
mov
jne
sub
scas
dec
add
inc
jmp
dec
cmc
cmps
(bad)
sti
js
jmp
je
xchg
mov
fisub
popa
retf
mov
(bad)
add
mov
pop
sbb
jbe
les
lock
mov
mov
in
(bad)
jmp
es
or
gs
jl
jmp
sub
xchg
bound
xor
into
push
pop
or
repnz
push
sub
xor
mov
fiadd
das
push
into
mov
stos
enter
jno
mov
(bad)
jo
sub
scas
mov
cmp
movs
mov
pop
push
adc
cdq
stos
mov
fdivr
jmp
out
adc
mov
mov
add
and
mov
mov
mov
push
sbb
scas
xchg
cli
jo
jmp
retf
repz
cmps
fidivr
shl
out
lods
mov
and
mov
push
inc
retf
retf
cdq
clc
pop
xor
movs
fwait
jecxz
inc
fidivr
call
mov
mov
iret
dec
and
test
pusha
sub
jl
add
rcr
out
mov
nop
mov
jle
icebp
test
mov
mov
jb
fcomp
xor
mov
fcom
pop
je
mov
pushw
and
cmc
cwde
fcom
scas
test
or
jo
ror
xor
shl
cli
jle
push
cmp
mov
mov
daa
jb
mov
and
pop
scas
jmp
xor
or
fs
xchg
popa
add
mov
rcl
adc
int
dec
or
outs
shl
fild
imul
fwait
rcl
daa
jb
mov
icebp
mov
in
cs
cli
xchg
scas
out
and
push
retf
scas
data16
mov
out
push
rol
and
nop
xor
adc
xchg
(bad)
pop
pop
sbb
cmp
imul
mov
push
loope
mov
add
lods
stos
clc
dec
cmp
jns
mov
or
ins
add
inc
std
lea
adc
xchg
mov
js
out
pop
cmp
mov
adc
sub
pop
test
outs
aaa
loop
mov
dec
add
or
pop
out
cmp
sbb
mov
not
sub
movs
pusha
add
mov
enter
dec
add
and
push
xchg
sub
je
sti
sub
fldenv
pop
jl
xlat
cmp
(bad)
lods
test
outs
sub
cmps
xchg
rcr
ja
movs
mov
xchg
sar
sbb
in
outs
(bad)
les
int
cmp
test
shr
mov
jmp
aaa
cmc
mov
jmp
scas
int3
push
ss
mov
inc
ds
cmps
lods
(bad)
popa
adc
sbb
retf
mov
mov
cmp
in
jp
mov
or
jecxz
cmp
aaa
jmp
arpl
xchg
cwde
shr
inc
cmp
stos
mov
push
xor
ret
or
pushf
mov
fs
in
data16
adc
(bad)
stos
mov
data16
movs
mov
lahf
mov
popa
sub
ror
int
inc
xor
fldenv
(bad)
movs
mov
jo
or
mov
xlat
sub
mov
cld
test
sbb
mov
xchg
mov
jmp
pop
scas
jmp
ins
add
jns
mov
loope
imul
mov
mov
aam
mov
js
mov
dec
mov
daa
adc
inc
add
pop
mov
sub
call
jb
rol
scas
mov
and
xchg
xchg
mov
mov
inc
lods
leave
push
or
mov
pop
and
push
mov
inc
and
xchg
mov
adc
mov
enter
xchg
hlt
inc
and
jg
jmp
sub
cs
iret
movs
xlat
mov
in
cs
call
sub
mov
xor
rcl
jo
mov
sahf
js
add
mov
out
das
push
(bad)
(bad)
mov
adc
dec
cmc
lea
fld
push
scas
ficom
xor
mov
cmp
fwait
test
pop
aaa
clc
xchg
and
lods
in
jae
out
inc
mov
and
xchg
cmps
fild
xor
sti
mov
out
das
inc
mov
pop
pop
clc
stos
mov
cdq
add
push
stos
enter
popf
xchg
out
add
pop
loop
jns
adc
adc
or
cdq
aad
mov
leave
push
xor
bound
cmp
mov
les
clc
mov
or
xchg
jae
in
sub
jge
pop
push
push
push
stos
enter
push
jmp
gs
daa
outs
(bad)
mov
jmp
xchg
call
mov
pop
jl
les
neg
repnz
adc
shl
jle
jmp
sub
jl
or
mov
mov
popa
adc
xchg
push
(bad)
call
shl
sbb
add
nop
mov
es
shl
dec
xor
lea
pop
sar
jb
es
mov
sub
adc
add
xchg
push
add
std
adc
add
jbe
push
add
or
mov
arpl
xor
fnsave
push
mov
aad
jns
sbb
cmps
cdq
cld
loop
movs
lds
int
ds
and
(bad)
sub
add
or
pop
iret
mov
inc
shl
pop
ss
sbb
outs
xchg
std
psubusw
pop
ds
and
and
pop
pop
ss
xor
movs
push
adc
aam
mov
xchg
js
mov
lock
mov
ret
sahf
clc
xchg
jnp
ror
inc
mov
(bad)
fst
bnd
cmps
xor
and
sbb
ficomp
(bad)
jne
add
add
pop
jle
popf
and
popa
push
mov
stos
jns
scas
adc
mov
dec
sub
pop
cmp
test
ss
sub
sbb
fistp
out
cmps
sbb
adc
lds
cmc
lods
fiadd
add
xor
dec
test
std
(bad)
(bad)
mov
sti
mov
test
xchg
ret
mov
xchg
out
(bad)
retf
mov
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
jecxz
std
test
xchg
mov
lods
ret
scas
jmp
mov
movs
jmp
inc
shl
mov
dec
stos
enter
test
mov
mov
push
std
inc
mov
(bad)
jmp
scas
cmp
push
mov
push
pop
mov
inc
stos
shld
cld
mov
lahf
pop
ins
je
cmc
push
mov
sub
cli
cwde
cwde
mov
cmp
pop
mov
mov
out
add
ror
fidiv
test
cli
mov
scas
jnp
or
or
lods
shl
popf
fldenv
sbb
or
or
int
daa
popf
inc
push
mov
jb
aaa
ja
adc
dec
xor
sbb
push
jne
lock
dec
sbb
icebp
and
sbb
mov
or
adc
dec
retf
jne
cmp
jmp
imul
cmp
scas
(bad)
fistp
outs
int3
cwde
push
push
sub
fist
int
jg
adc
cmp
and
jne
adc
in
add
in
ret
call
in
lahf
sti
mov
lahf
out
movs
ret
pushf
icebp
mov
in
arpl
popa
clc
clc
xchg
(bad)
cld
dec
sbb
mov
jl
cmp
push
adc
jnp
imul
xor
xor
jg
pop
push
jge
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
stc
(bad)
aad
cmc
mov
stos
loop
les
fldcw
in
and
iret
xchg
push
sti
sub
and
outs
cmps
std
cmp
jmp
push
arpl
cmp
addr16
out
adc
mov
mov
add
cmp
movs
push
cmp
(bad)
rcl
dec
(bad)
sub
push
fisub
(bad)
pop
fiadd
inc
(bad)
xchg
arpl
not
retf
add
loope
dec
out
or
test
movs
and
jo
sub
retf
pop
mov
data16
mov
popf
inc
mov
ficomp
cld
test
jne
jo
shr
repnz
das
ret
and
jg
inc
mov
pushf
div
sub
or
fisubr
push
mov
repnz
sub
push
xor
adc
cdq
shr
in
pushf
enter
fdivr
cmps
int3
lods
outs
lods
fcom
sub
add
dec
ins
sbb
cmp
call
ret
jno
pop
xor
les
add
add
inc
sub
or
push
jo
sbb
shr
push
pop
ins
bound
leave
sbb
retf
movs
sub
imul
sti
pop
call
mov
int3
cwde
mov
nop
aam
leave
push
outs
leave
sahf
push
sbb
or
lahf
push
stos
add
adc
push
cmp
push
jg
push
push
jne
push
and
daa
inc
sub
jo
arpl
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
popa
(bad)
sbb
dec
or
dec
sbb
jne
addr16
aaa
inc
sub
jecxz
stos
shl
mov
adc
cmc
adc
(bad)
mov
mov
fwait
sti
iret
sbb
rol
jp
scas
aas
nop
(bad)
in
fstp
push
inc
and
ds
mov
in
hlt
scas
or
pop
outs
test
push
mov
xor
stos
inc
sbb
add
jo
test
lock
repz
mov
mov
inc
mov
or
mov
push
or
dec
or
aas
jge
push
sbb
repnz
ins
pop
jl
push
push
loop
push
push
lods
jl
push
sub
pop
enter
addr16
shr
(bad)
sbb
jo
ror
cmp
outs
sbb
std
mov
shl
jo
std
scas
jg
xchg
imul
mov
adc
(bad)
mov
mov
and
lea
int
mov
pop
jg
jb
out
sbb
jmp
jbe
and
mov
pop
cmp
jb
bound
mov
loop
xchg
shl
fsubr
jecxz
mov
dec
out
lahf
mov
or
in
xchg
les
or
popa
(bad)
(bad)
lea
dec
and
push
jb
imul
push
pop
dec
sbb
outs
and
push
adc
jne
imul
push
cmp
dec
add
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
pusha
pop
jl
pusha
or
popa
adc
dec
pop
xor
inc
sbb
outs
or
sub
arpl
nop
outs
sti
or
fdiv
ds
addr16
cmp
lods
(bad)
out
or
std
jmp
retf
push
push
sub
cmp
pop
jle
xchg
cmp
loopne
loop
scas
xlat
lea
popa
cmp
mov
or
daa
arpl
inc
mov
movs
and
repz
out
and
push
(bad)
aad
shl
mov
mov
clc
mov
scas
int3
cmps
(bad)
sahf
mov
stos
lahf
inc
and
imul
xor
dec
jl
xchg
loope
int3
jns
sti
add
js
pop
push
add
ds
jne
das
je
sub
adc
jg
push
and
call
dec
fld
push
xor
and
jge
cld
sub
loopne
or
inc
xchg
sub
clc
pusha
fstenv
adc
pusha
je
or
or
jnp
clc
imul
fstp
arpl
inc
sub
inc
aaa
fcom
stos
shr
repz
fisttp
(bad)
loop
sti
lods
and
shr
or
push
xor
jmp
xor
call
mov
sbb
repnz
pop
fistp
ss
mov
loopne
fdivr
in
nop
icebp
xchg
repnz
jmp
out
push
es
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
je
jbe
imul
push
data16
inc
and
push
aaa
push
daa
arpl
mov
out
movnti
jnp
adc
fidivr
push
mov
call
xchg
in
call
(bad)
mov
mov
push
mov
dec
(bad)
pop
imul
dec
sbb
in
mov
scas
les
pop
mov
or
xchg
push
(bad)
sub
or
retf
adc
fnstenv
cwde
jle
add
lock
xor
in
ss
add
popa
or
call
test
stos
sti
stos
fidivr
sar
mov
sub
mov
lods
mov
pushf
enter
inc
test
xchg
or
int3
xchg
sub
cs
(bad)
mov
push
(bad)
in
xchg
sahf
push
push
jne
sub
sti
or
xlat
xor
push
push
cmp
(bad)
xchg
fiadd
adc
cmp
sub
mov
(bad)
jmp
and
fstp
test
fcomp
jg
push
add
push
xor
dec
or
ins
pmullw
mov
inc
in
mov
cmp
mov
(bad)
jo
cmc
outs
(bad)
loopne
movs
mov
xchg
cld
leave
ret
ficom
mov
xchg
repnz
lahf
aam
retf
movs
(bad)
cmps
lds
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
xor
outs
cmp
sbb
arpl
je
outs
ss
mul
(bad)
movs
jl
or
mov
push
imul
jmp
xor
lea
and
mov
js
sbb
mov
mov
add
jl
pop
push
ja
imul
jbe
scas
xor
cld
mov
add
lds
outs
mov
dec
mov
mov
test
mov
cmp
(bad)
xchg
pusha
(bad)
push
adc
dec
xlat
mov
stos
loop
pushf
outs
cmovg
add
out
xor
ret
push
ss
mov
and
sub
cs
sub
das
outs
add
outs
adc
jp
outs
or
push
cmp
arpl
jo
jl
clc
cld
(bad)
repz
pop
pusha
(bad)
mov
mov
fstp
jmp
mov
jle
aam
push
mov
ret
fidivr
es
xchg
scas
movs
and
xchg
inc
adc
cld
cld
mov
test
mov
icebp
fisttp
(bad)
fld
scas
pop
fdivrp
mov
stos
pcmpgtb
or
rcr
pushf
xchg
add
xchg
pop
and
pop
call
mov
enter
pop
adc
push
fistp
ss
or
add
dec
sub
and
jl
outs
aas
outs
adc
jno
jnp
pop
cmp
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
jo
ja
jnp
jbe
dec
daa
pop
ss
pop
jne
imul
jae
pop
daa
inc
add
popa
add
push
jne
dec
and
adc
outs
es
push
add
push
xor
pop
sbb
push
xor
dec
add
jne
push
xor
pusha
pop
push
ins
mov
push
ss
test
pop
pop
mov
add
retf
sub
fisttp
pop
mov
aaa
cli
mov
sbb
scas
xor
dec
inc
jg
cmp
adc
inc
push
jge
test
js
pushf
jbe
repz
test
add
cld
mov
xchg
mov
popf
(bad)
aaa
xor
xchg
imul
inc
fsubr
aam
add
call
add
mov
inc
add
scas
inc
xor
jbe
jg
jo
pop
lods
lahf
sar
sub
mov
sub
pusha
sbb
adc
(bad)
hlt
lods
sbb
inc
adc
lahf
inc
lds
jp
shl
je
std
mov
add
dec
mov
adc
pop
cmp
inc
ss
jnp
jns
sub
lock
push
ja
dec
xor
xor
mov
and
in
ja
pop
pop
mov
inc
(bad)
(bad)
mov
pop
ret
lock
stos
sub
mov
ins
inc
sub
push
dec
xor
xor
mov
sahf
retf
lahf
adc
xchg
push
xor
pop
(bad)
jmp
stc
jns
das
cmp
aam
test
int3
test
(bad)
jns
adc
cmp
mov
lea
add
and
inc
and
pop
cmp
push
jnp
jne
push
adc
push
aas
inc
and
sub
ins
pop
jnp
jbe
gs
jge
push
add
jge
pop
pop
jbe
outs
sub
inc
and
push
sub
bound
arpl
inc
add
dec
sbb
cmp
ins
or
addr16
ds
sub
inc
xor
imul
sub
push
push
dec
sbb
js
outs
cmovnp
sbb
dec
das
dec
pop
das
data16
and
pop
adc
or
pop
xor
lahf
out
in
out
xchg
(bad)
frstor
mov
js
loopne
cmp
and
or
dec
sub
xor
cmp
jae
loopne
out
lds
xchg
fisub
lahf
ins
and
dec
mov
jge
mov
frstor
xchg
scas
push
xor
xor
adc
leave
call
jp
ficom
pop
in
pop
xchg
and
pop
mov
fimul
xchg
popa
pop
inc
lods
jg
arpl
xor
push
repz
fldenv
pop
dec
add
das
pop
or
out
(bad)
push
mov
mov
pop
test
xchg
sti
sub
jno
add
xchg
sbb
iret
cmp
dec
jg
adc
xchg
sbb
jmp
xor
xor
ret
pop
fisttp
jmp
in
mov
sahf
int
rcl
push
shr
repnz
in
mov
popa
(bad)
jecxz
out
call
pop
push
push
fisttp
xor
cmps
sbb
lds
pop
ror
xlat
xor
adc
ret
inc
jp
sbb
aad
mov
dec
daa
cmp
mov
jnp
jge
xor
stos
mov
inc
repz
ins
and
sub
retf
(bad)
movs
xchg
push
xor
bound
sahf
out
loope
ret
mov
out
icebp
xchg
repz
call
mov
enter
out
mov
fidivr
in
mov
(bad)
les
hlt
mov
mov
fidivr
mov
(bad)
loop
loopne
push
in
ret
call
int3
mov
test
movs
loop
cmc
xchg
not
fidiv
sbb
push
push
pop
or
pop
aas
jnp
dec
push
outs
adc
jl
popf
xlat
mov
cmps
iret
(bad)
in
sti
lods
sti
stos
fisttp
mov
inc
test
pop
scas
xchg
js
int3
popa
mov
cld
sub
pop
rcl
jb
mov
sbb
fldcw
cmp
lds
pop
xchg
repz
aad
pop
mov
mov
jnp
lods
jb
xlat
inc
(bad)
fisttp
sub
push
dec
mov
dec
test
scas
dec
sbb
scas
inc
clc
and
stos
es
mov
adc
push
fisub
jge
jge
inc
xlat
and
xor
dec
mov
add
rcl
jne
in
inc
mov
fistp
mov
lahf
xchg
adc
mov
pushf
icebp
mov
sub
pop
push
jge
outs
adc
cdq
mov
cli
cmp
mov
sahf
popf
push
cmovno
fs
jg
jnp
xchg
and
and
lods
in
hlt
shl
out
ins
div
push
and
div
lahf
mov
jnp
psrld
adc
leave
repz
test
ja
adc
cmp
hlt
(bad)
fsubr
in
arpl
adc
aam
retf
dec
or
cmp
loopne
in
or
je
adc
rcl
and
push
imul
push
xor
jg
jle
push
sbb
arpl
imul
xor
test
xchg
mov
in
ror
test
mov
aad
jmp
mov
fisttp
pause
(bad)
cdq
push
test
stc
mov
movs
loope
in
mov
loope
div
enter
mov
mov
scas
(bad)
lods
jmp
mov
scas
cmc
mov
leave
lods
jmp
in
sbb
cmp
ja
dec
or
addr16
stos
retf
sub
ror
in
or
xchg
xchg
jg
repz
xchg
repz
or
xchg
jbe
hlt
dec
mov
or
mov
frstor
add
lods
inc
rcr
stos
and
mov
push
mov
adc
iret
test
mov
ins
push
(bad)
cdq
pop
add
dec
pushf
jmp
sub
mov
(bad)
punpckhdq
inc
test
enter
pop
mov
js
mov
mov
mov
push
cmp
cmp
not
pop
cmp
mov
test
dec
fisub
cmp
dec
int
inc
das
std
movq
repz
shl
mov
dec
scas
retf
nop
in
ins
(bad)
mov
xchg
sbb
in
pop
sbb
popf
fs
or
inc
xchg
pop
ret
nop
push
jbe
adc
loope
imul
mov
push
aam
sar
mov
sahf
(bad)
jg
adc
arpl
cmps
cmp
out
sti
pause
xchg
lea
xor
retf
movs
mov
sbb
mov
sub
mul
loop
idiv
sbb
jge
sbb
scas
ret
cdq
mov
dec
(bad)
arpl
add
(bad)
int3
inc
ret
in
cmp
push
sbb
je
inc
pop
and
inc
sub
adc
outs
pop
inc
and
jg
jg
push
sbb
and
inc
pop
daa
dec
and
and
popf
lock
(bad)
xlat
cdq
les
jmp
mov
xlat
mov
(bad)
sbb
mov
sbb
jae
push
sbb
dec
xor
aaa
inc
or
jnp
inc
pop
push
jns
js
dec
sbb
inc
pop
pop
pop
xor
or
push
xor
imul
pop
js
dec
pop
pop
push
pop
push
outs
aaa
jp
add
arpl
jl
push
adc
cli
mov
test
dec
push
dec
les
and
mov
out
bound
xchg
lock
mov
push
out
xor
xor
inc
mov
mov
shr
xor
clc
mov
mov
sbb
mov
gs
sub
lea
lock
daa
out
xchg
int3
adc
dec
or
inc
and
xor
xchg
and
repz
jns
mov
test
scas
mov
data16
sub
and
cmp
adc
pop
pop
jmp
sub
neg
jno
pop
es
retf
ins
leave
push
sub
sub
jbe
out
and
adc
pop
pop
or
in
mov
das
punpckldq
sbb
and
aas
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
jp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
in
out
in
fild
out
lods
idiv
out
stc
call
retf
movs
xlat
sahf
repnz
test
mov
in
cwde
int3
and
cmc
lods
out
(bad)
cmps
fidiv
stc
xchg
out
xchg
scas
lds
out
loopne
sti
cwde
ficom
fdivr
mov
rcr
mov
std
cwde
fdivr
shl
(bad)
jmp
repz
mov
xchg
fidivr
imul
fdiv
repnz
fidivr
jmp
pushf
stc
mov
retf
fnsave
sti
xchg
shl
in
fwait
leave
test
lahf
cld
mov
iret
mov
lock
out
out
sar
mov
cdq
loop
(bad)
mov
test
mov
lods
out
cld
xchg
cmc
mov
xchg
iret
or
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
test
stos
out
(bad)
neg
shr
scas
icebp
mov
fdivr
lds
neg
sar
enter
jmp
add
fdiv
jecxz
lock
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loope
in
cmp
xchg
ret
stos
enter
shl
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
jb
imul
je
dec
adc
push
pop
sub
dec
xor
pop
cmp
adc
dec
cmp
adc
inc
add
adc
push
add
push
xor
sbb
push
xor
dec
push
push
data16
sub
jp
jne
push
sbb
popf
aad
cli
mov
shr
xchg
fstp
jmp
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
and
jle
ins
or
pop
aaa
dec
daa
dec
pcmpgtw
jns
arpl
inc
or
jle
dec
or
jl
jle
popf
aam
ret
test
and
clc
mov
mov
xchg
fnstenv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
(bad)
sahf
cld
nop
jecxz
(bad)
mov
fild
call
cdq
shl
loope
shl
repz
xchg
lds
in
call
scas
shl
xchg
xchg
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
and
mov
xor
enter
out
(bad)
push
outs
push
jo
mov
dec
jbe
dec
pusha
dec
add
sub
dec
arpl
mov
sar
call
xor
push
push
inc
popa
push
shl
jne
sbb
out
sbb
loopne
cdq
pop
xchg
lock
mov
les
cld
pop
imul
xchg
inc
or
sahf
(bad)
call
or
jmp
hlt
push
cs
add
and
jmp
lea
mov
loope
loop
mov
dec
jmp
cmps
or
inc
adc
leave
and
add
or
adc
xor
adc
mov
push
sub
in
repz
int
je
outs
pop
cmp
add
xor
sbb
xchg
push
cmps
mov
push
add
mov
pushf
xchg
mov
mov
aad
int
inc
mov
sbb
dec
daa
cs
jne
mov
call
mov
sub
(bad)
nop
lods
js
adc
cwde
movs
test
out
sbb
cmp
mov
mov
push
cmps
jmp
test
add
(bad)
sub
int3
pop
add
jl
(bad)
call
imul
sub
cmps
push
dec
outs
sbb
dec
call
popa
mov
mov
retf
add
push
adc
xor
or
fisubr
add
adc
retf
fbld
fcomp
jno
jno
mov
cmp
scas
cmps
add
gs
cmc
test
(bad)
mov
cmp
loope
div
inc
cli
idiv
mov
dec
cmp
gs
icebp
cmp
jp
adc
int3
call
adc
mov
in
mov
jns
daa
sbb
cs
inc
retf
mov
retf
jno
in
sbb
xor
or
jp
aad
push
dec
push
adc
sahf
dec
pop
inc
dec
ja
test
mov
jle
inc
(bad)
cmp
in
push
jg
xchg
xchg
mov
mov
cwde
jno
adc
adc
sub
jnp
cwde
stos
cwde
shl
sub
sub
pushf
xchg
retf
test
shr
lahf
loop
arpl
push
ja
leave
data16
sub
pop
dec
shl
jmp
cmp
sub
lds
test
or
jmp
mov
dec
sub
xlat
dec
scas
ss
test
in
cmp
sbb
aaa
mov
in
xor
jnp
jmp
gs
sub
scas
les
xor
push
lods
add
pop
leave
(bad)
popf
or
dec
push
push
test
or
in
jmp
mov
jae
int
hlt
sbb
or
xchg
mov
jb
clc
sbb
enter
jb
cwde
inc
fld
push
daa
lock
outs
in
xchg
icebp
sub
popf
cli
loopne
enter
push
in
lahf
loop
retf
and
test
and
out
jae
dec
cmp
jb
dec
dec
inc
or
xor
push
mov
xchg
je
dec
mov
adc
push
cmc
add
push
add
mov
rol
cmp
call
repz
dec
retf
add
retf
int
xchg
mov
mov
mov
cmp
inc
ret
xor
daa
mov
ins
xor
dec
cmps
leave
cmps
dec
sub
and
shr
fadd
adc
(bad)
jecxz
cmps
idiv
jle
(bad)
aam
adc
adc
jg
lea
iret
pop
test
add
pop
jb
sbb
pop
les
cmp
cmp
jge
into
cmp
fsub
les
test
out
xchg
fbld
sub
mov
xor
adc
mov
jne
cmp
lock
jmp
ins
mov
pop
jp
(bad)
jp
push
mov
push
outs
pusha
push
sub
push
add
cmps
or
mov
sbb
lock
inc
and
add
mov
daa
cli
push
mov
imul
xchg
bound
pop
ss
jne
ss
fnstsw
xor
data16
jbe
and
sar
push
retf
push
or
cmp
xor
push
stos
pop
in
mov
xchg
ss
ins
xor
repnz
pusha
mov
rcr
outs
mov
or
mov
sti
ss
clc
mov
das
mov
push
leave
int
(bad)
test
leave
jmp
push
jl
out
dec
sub
inc
xchg
and
xor
jmp
xchg
jmp
sub
arpl
pop
xor
dec
mov
lock
xor
cmp
lods
pop
daa
add
in
data16
push
jle
xor
pop
je
mov
adc
out
shl
sub
mov
jo
add
leave
inc
jecxz
repnz
rcr
out
adc
push
loope
sti
imul
(bad)
xor
xchg
iret
sub
cwde
les
fisub
jno
popa
mov
inc
setae
fucomip
cld
call
(bad)
lock
imul
test
or
fisttp
sbb
push
les
sbb
xor
sub
movs
add
xchg
scas
sahf
dec
loope
add
adc
stos
pop
aaa
int3
mov
dec
sub
push
fidiv
sub
pop
movs
or
js
fistp
add
add
xchg
mov
adc
std
repz
jnp
les
pop
mov
(bad)
pushf
dec
scas
rcl
mov
inc
test
call
xor
pop
or
ret
and
repnz
mov
dec
aas
inc
test
jecxz
imul
mov
push
je
in
mov
xchg
popf
loop
mov
dec
xor
dec
mov
mov
mov
add
loope
mov
stos
test
lahf
(bad)
xor
in
enter
cdq
fcom
mov
sbb
push
dec
daa
test
push
add
mov
sti
dec
and
test
fiadd
ds
or
inc
sbb
nop
mov
push
clc
xor
mov
loopne
adc
xchg
sbb
cmp
inc
shl
mov
not
loopne
fwait
dec
fldcw
scas
sub
add
dec
jns
jmp
popa
xor
cmp
lock
mov
ret
out
pusha
pop
cmp
out
inc
adc
cmp
ret
rcl
xchg
daa
pop
ins
in
and
jle
fs
loop
ja
mov
ins
adc
push
mov
cmp
or
dec
jne
lds
sub
movs
push
jae
cmp
jg
pop
rcr
enter
call
jo
sub
bound
xor
hlt
int
xchg
fcomp
add
add
daa
mov
xor
mov
cmps
mov
addr16
int3
jnp
enter
in
inc
(bad)
or
in
pop
pop
add
enter
or
inc
adc
stos
push
sub
fsubr
xor
mov
cmp
(bad)
ss
int
loope
cmp
cmp
jl
call
inc
outs
(bad)
cmp
out
aad
cmc
fild
stos
xchg
lods
outs
adc
mov
and
cmp
aas
lahf
mov
int3
sub
dec
pop
jae
jo
jmp
loop
cmp
rol
mov
cmp
in
mov
push
adc
mov
pop
arpl
and
out
pop
retf
jmp
push
mov
cmc
sbb
sub
dec
mov
cs
mov
stos
mov
add
or
shl
fisub
sbb
aam
sbb
pop
inc
movs
xlat
xor
jns
ret
xchg
cmps
retf
rcl
pop
jbe
mov
pop
inc
test
jae
jmp
(bad)
popf
imul
fsub
adc
xchg
push
aaa
(bad)
rcl
pop
fdiv
mov
mov
(bad)
xchg
inc
sbb
sub
loope
or
outs
sub
mov
xchg
cmp
push
jb
daa
jl
sbb
movs
rol
fwait
mov
scas
(bad)
pop
(bad)
imul
dec
push
jmp
mov
dec
cmp
xchg
add
mov
or
jno
int3
sti
fsub
cld
cmp
xchg
jg
fld
push
int3
jmp
inc
jmp
aam
leave
add
stos
xchg
mov
or
enter
jle
ds
sar
aad
daa
fst
std
jp
addr16
cli
jo
repnz
sub
inc
or
fwait
test
cmps
mov
(bad)
adc
jl
outs
nop
pop
push
mov
in
sbb
sub
mov
fild
dec
pop
inc
dec
sbb
aas
cmp
inc
push
or
das
pop
test
sub
add
pinsrw
sub
aad
mov
(bad)
(bad)
cmp
outs
fwait
push
mov
push
push
stos
clc
sub
and
or
push
rcr
popf
jmp
dec
jmp
int3
(bad)
mov
or
fldcw
adc
cmp
mov
out
in
or
mov
je
sbb
into
call
(bad)
dec
fisub
shl
dec
cmp
(bad)
fld
pop
test
sbb
pop
das
not
mov
dec
stos
push
es
loope
fisub
in
jg
std
movs
cmp
sbb
cmp
inc
jno
xchg
aam
daa
fucomi
inc
push
mov
retf
push
das
and
daa
cs
xor
mov
push
test
pop
pusha
scas
mov
fwait
sub
inc
xor
push
in
mov
gs
jmp
sbb
inc
adc
ins
out
dec
mov
inc
fisubr
pop
xchg
mov
push
lods
fcomp
sahf
dec
(bad)
fnstenv
jno
stos
jmp
xchg
ss
(bad)
leave
xchg
and
and
mov
mov
xor
aad
outs
add
mov
jge
pop
(bad)
add
es
mov
push
push
not
daa
cld
bound
mov
pop
jb
test
mov
xor
int
pop
cli
ds
cmp
xlat
into
ss
adc
sub
(bad)
pop
mov
add
pop
mov
pop
and
cmp
mov
icebp
pop
xchg
cdq
cmc
sub
(bad)
loopne
mov
cmp
hlt
aam
xor
jbe
js
das
or
(bad)
jge
loop
lahf
pop
and
ds
xor
das
in
pop
shl
sub
fdiv
inc
adc
ja
push
daa
test
das
arpl
out
sub
push
dec
xor
stc
popf
iret
out
push
pop
xchg
push
inc
pop
sbb
jecxz
in
rcl
cmc
sub
fucomi
pop
adc
xor
mov
pop
lock
or
xchg
mov
(bad)
sub
mov
add
xchg
and
add
iret
fdivr
inc
lock
xor
aam
xchg
mov
shl
inc
(bad)
ror
inc
mov
push
pop
mov
adc
mov
jecxz
jo
xchg
adc
test
mov
inc
popf
jl
sub
lahf
jne
test
daa
mov
ja
rcr
nop
aaa
inc
add
mov
pusha
cld
or
(bad)
mov
inc
call
int3
mov
test
xchg
pop
inc
sbb
sub
leave
cmp
popa
ret
push
jb
aas
inc
or
aaa
and
pop
xchg
cmp
inc
mov
mov
mov
repnz
xor
std
lds
pop
jle
cs
jp
jb
ss
sub
mov
mov
adc
in
sub
repnz
inc
dec
inc
xor
jmp
dec
stc
in
(bad)
jne
aam
mov
les
mov
or
adc
and
pusha
mov
mov
fimul
loope
mov
scas
mov
cs
inc
popf
push
mov
cli
mov
test
clc
lods
cmp
and
mov
push
jnp
and
or
aam
aas
push
pushf
imul
pop
add
mov
add
push
and
adc
xchg
imul
sbb
les
fcomp
sahf
jno
inc
cld
xor
call
mov
leave
repnz
and
test
pop
dec
ret
pop
mov
inc
enter
test
add
mov
les
and
outs
sahf
dec
popa
adc
cs
test
add
in
and
out
aas
inc
xor
cmps
jecxz
dec
xor
inc
push
test
add
shr
cwde
and
fadd
js
xchg
jb
movs
call
add
and
lods
and
dec
dec
adc
mov
das
movs
fs
fisub
mov
bound
ja
push
f2xm1
pop
push
fldenv
repnz
fiadd
dec
xchg
scas
mov
cmps
push
xor
test
xchg
mov
sar
adc
loopne
push
cli
imul
inc
and
cmps
mov
mov
pop
and
test
push
xchg
int
ins
push
stc
sbb
into
inc
or
and
test
out
or
cmp
or
nop
cld
ret
mov
mov
push
and
mov
repz
xchg
lods
sub
je
inc
xor
mov
sub
scas
(bad)
pop
sti
(bad)
pusha
mov
arpl
lahf
addr16
jne
dec
mov
jl
lock
jae
ret
pop
test
pop
or
hlt
jp
into
stos
and
mov
(bad)
repnz
fcmovbe
jle
dec
and
dec
adc
outs
mov
ins
adc
mov
jae
pop
ins
ss
ja
repz
mov
lds
lsl
cli
ficomp
xchg
xchg
sti
(bad)
xor
pop
jbe
clc
push
and
lea
ins
and
mov
inc
xchg
das
in
loop
dec
pop
jb
pop
and
hlt
mov
popf
jmp
mov
push
cmc
push
out
add
enter
cmp
into
cmp
test
xchg
mov
and
out
jmp
or
mov
gs
in
xor
ja
and
jmp
pop
(bad)
scas
enter
mov
xchg
sub
pop
and
dec
mov
sub
inc
les
sub
stc
and
mov
adc
repnz
mov
pop
jb
scas
sbb
jmp
jecxz
shr
ss
cmp
pop
das
xor
xor
inc
aad
push
mov
mov
outs
push
cld
mov
js
adc
pop
or
adc
sub
call
js
pop
sub
(bad)
xchg
mov
push
add
ret
jmp
mov
ficom
dec
pop
dec
retf
xlat
(bad)
(bad)
hlt
adc
aaa
inc
jp
in
dec
imul
js
mov
lods
frstor
xor
dec
xchg
jne
cmp
xchg
and
mov
dec
and
test
lds
xor
outs
sub
and
push
into
stc
movs
push
sti
adc
cli
fimul
xchg
push
pop
mov
out
ins
ins
je
inc
inc
aam
push
jl
inc
pop
mov
ds
xlat
aaa
iret
dec
mov
pop
xchg
scas
inc
add
sub
mov
stc
adc
inc
dec
int
test
fbld
fidivr
cmp
add
arpl
stos
cmp
pop
or
inc
fwait
and
xchg
mov
jo
in
inc
ja
inc
test
mov
in
add
inc
jb
push
in
cmps
out
arpl
test
jns
jnp
jp
cmp
pop
push
aaa
xor
mov
or
imul
fldcw
xchg
test
mov
jns
and
sbb
mov
(bad)
(bad)
mov
in
(bad)
out
arpl
pop
imul
movs
sbb
sti
lods
mov
repz
and
adc
das
adc
jb
scas
cmp
test
mov
pop
mov
adc
pop
bound
lods
fistp
xor
ret
xlat
shl
mov
sbb
cmps
xlat
mov
mov
jmp
jmp
fisttp
mov
jmp
mov
xchg
and
and
push
xor
popf
lods
and
ins
in
repnz
lock
add
push
sar
ss
cwde
mov
sub
inc
xlat
ds
add
(bad)
imul
lock
outs
cmps
pop
das
ins
cmp
jno
inc
dec
jo
push
cmp
loop
out
jmp
and
jecxz
popa
jp
inc
mov
jbe
push
jns
in
mov
xchg
inc
ficom
stc
repz
aam
push
cld
pop
lahf
or
aaa
sbb
sbb
push
pusha
test
outs
out
(bad)
and
add
in
xchg
sar
adc
xchg
inc
ins
in
or
adc
loopne
stos
arpl
xchg
mov
or
stc
icebp
mov
xor
or
daa
nop
push
das
gs
into
sbb
ds
or
xlat
sbb
lds
sub
shr
mov
add
idiv
(bad)
cmp
xor
push
loopne
aaa
std
mov
add
mov
xor
ret
add
pop
push
and
leave
add
stc
cli
pop
pushf
push
add
mov
inc
imul
mov
xor
sbb
fistp
dec
mov
in
stos
test
sub
scas
xor
adc
mov
bound
aaa
add
jecxz
push
lods
cmp
cwde
sahf
push
or
mov
mov
xchg
adc
jmp
jb
mov
pushf
rol
pop
mov
mov
nop
cmp
es
mov
shld
lods
mov
mov
les
shl
push
xor
xor
jo
fcom
leave
and
imul
sub
and
fisub
adc
cmp
ins
mov
(bad)
rol
imul
push
into
inc
mov
jecxz
adc
repz
ficomp
cmp
rcl
ins
out
and
mov
and
xor
mov
sbb
mov
iret
hlt
xacquire
test
sub
and
adc
sub
cwde
mov
push
inc
es
sbb
daa
std
rcr
sti
dec
jbe
ja
ins
add
shl
push
mov
xor
repz
jmp
cli
aas
xchg
stc
in
sub
and
mov
hlt
out
dec
bound
frstor
adc
fst
cmp
push
test
push
movs
test
sbb
jnp
mov
(bad)
imul
test
xor
(bad)
pop
jb
push
fidiv
sbb
xor
je
pushf
in
loopne
push
in
clc
int3
pop
jnp
dec
xor
dec
in
dec
fs
and
xor
out
lock
inc
cmp
mov
mov
scas
jle
cmc
jmp
aad
popa
sub
int3
mov
add
sub
mov
mov
add
dec
cmp
rcl
arpl
pop
cmp
add
popf
jecxz
xor
cmp
dec
or
movs
mov
xchg
test
aad
xchg
(bad)
shl
stc
push
sahf
leave
cmc
fs
in
xor
(bad)
fst
inc
(bad)
cli
les
icebp
aas
mov
and
sbb
cli
pop
test
out
xor
sub
mov
int
sbb
mov
imul
inc
xor
mov
js
nop
jbe
pop
mov
sub
add
xchg
push
add
(bad)
lods
scas
ret
xchg
mov
jp
call
retf
loope
loopne
ret
cmp
retf
mov
sbb
imul
data16
adc
ret
pushf
std
nop
dec
sub
and
stos
cli
inc
in
fisub
je
movs
icebp
ins
(bad)
mov
jnp
inc
sub
mov
movntq
dec
aas
xor
and
xchg
pop
aam
mov
xchg
fdiv
icebp
push
or
dec
loope
les
jnp
add
push
fs
stc
mov
sbb
pop
lds
call
dec
ss
lods
(bad)
xor
adc
push
inc
sbb
ds
pop
sbb
enter
sbb
and
pop
adc
bound
jne
je
jno
pop
in
adc
jae
pop
lods
outs
repnz
gs
test
push
daa
jb
stc
and
(bad)
test
in
in
and
stos
int
push
add
mov
ja
pop
pop
jge
push
pop
pop
cmp
add
push
cmps
adc
push
pop
push
xor
les
or
jbe
cmps
les
fisttp
pushf
cdq
fnstsw
repnz
sbb
fs
inc
jb
aaa
in
pusha
pop
dec
ret
popa
std
hlt
pusha
icebp
mov
mov
(bad)
and
jnp
loop
pop
cmp
icebp
inc
cdq
ror
push
lods
(bad)
iret
stos
repnz
jle
adc
jmp
add
sbb
xlat
xchg
int
mov
mov
test
sub
dec
hlt
xchg
fld
hlt
mov
xchg
std
sbb
sub
aad
cmp
cld
(bad)
cmp
mov
cmp
sbb
inc
in
movs
in
rcr
pop
pop
mov
scas
fcomp
or
mov
cwde
jnp
test
xchg
inc
retf
xchg
in
shr
sbb
dec
out
inc
mov
cmps
mov
lock
ret
adc
scas
movs
add
lock
cmp
jno
or
adc
aam
scas
mov
mov
je
cmp
sbb
pop
and
lods
shl
lods
retf
jle
push
fld
sahf
jmp
ins
pop
sub
mov
loop
fild
xchg
cmps
xlat
(bad)
push
or
mov
mov
xor
gs
xor
push
ret
fdivr
pop
mov
pushf
int
cld
test
or
jae
hlt
cdq
in
popf
inc
sub
cmp
push
movlps
pop
and
in
jno
repnz
add
mov
or
pop
gs
xor
pop
push
dec
sub
pop
xor
ins
add
or
out
fisttp
das
ins
adc
adc
jnp
push
aas
pop
and
(bad)
stos
jmp
in
mov
test
and
push
fidiv
dec
sub
pop
jl
jne
add
dec
or
pop
inc
add
xor
stos
out
xchg
std
xchg
sti
imul
inc
aaa
je
add
mov
or
imul
loopne
add
and
mov
(bad)
fs
scas
int
repz
cmovbe
xor
sbb
dec
adc
ss
jp
push
jmp
mov
cmps
repnz
dec
gs
xchg
hlt
mov
mov
and
dec
xor
push
(bad)
nop
(bad)
mov
dec
sbb
add
jno
jge
pop
xchg
adc
sbb
xchg
mov
or
xor
inc
push
jle
jmp
cmc
bound
jge
ret
test
sub
sbb
cmp
push
push
je
push
out
mov
mov
test
sbb
mov
mov
ds
xor
adc
cmp
and
pop
icebp
sub
dec
xor
dec
in
pop
es
adc
dec
loopne
jmp
(bad)
mov
mov
mov
pop
sbb
mov
xchg
jmp
adc
retf
dec
(bad)
imul
push
es
mov
sti
das
retf
or
jb
push
push
push
loop
mov
or
sbb
sbb
inc
adc
repz
inc
add
jl
data16
lock
dec
imul
xchg
les
ins
adc
or
(bad)
sbb
jmp
retf
xchg
lods
(bad)
imul
sub
cmp
lods
rcl
ja
dec
dec
cmp
cdq
xchg
pop
enter
lds
inc
add
push
adc
inc
mov
shl
outs
xor
cs
test
cs
sbb
out
scas
std
mov
mov
or
in
pop
push
jb
fmul
dec
cmp
(bad)
(bad)
movs
out
jns
sbb
and
mov
sbb
ds
call
jno
addr16
pop
rcr
outs
pop
sbb
jae
fwait
mov
out
movs
fldcw
imul
sub
leave
xchg
test
scas
leave
cmp
jg
jno
pop
cmp
adc
iret
mov
imul
(bad)
jnp
pushf
arpl
xchg
jb
jg
pop
pop
pop
dec
xor
cmps
push
jnp
push
add
lds
jb
adc
aaa
jnp
inc
inc
or
inc
cs
es
or
fistp
sbb
sub
sub
fild
ja
pop
push
mov
mov
call
in
cdq
int3
xchg
shl
jb
inc
xor
shl
jo
jns
dec
pop
adc
add
dec
cwde
jae
add
and
adc
add
(bad)
xchg
fmul
aad
or
pop
loopne
ror
outs
(bad)
call
js
and
(bad)
cdq
mov
fmul
in
ds
cmp
push
mov
mov
mov
jnp
inc
or
jnp
jl
pop
es
push
ror
nop
repnz
iret
mov
push
sub
dec
inc
xor
das
jg
lods
jb
inc
or
mov
mov
iret
int
sar
shr
sahf
fld
ficom
pop
inc
or
push
dec
mov
(bad)
retf
test
xchg
and
lock
ficomp
popf
(bad)
mov
adc
out
and
dec
es
push
sub
jno
push
mov
jge
es
push
pop
jge
push
cmp
mov
and
movq
push
push
pop
je
pop
adc
es
jmp
mov
fbstp
sbb
cmp
and
leave
mov
mov
aad
jo
jbe
sub
loopne
out
mov
mov
cmp
jp
ins
add
add
pop
cmp
sub
test
xchg
repz
and
ja
jp
in
sub
(bad)
mul
je
pop
push
dec
xchg
sbb
adc
and
ins
sbb
cmp
xchg
jne
test
bound
outs
aam
ret
mov
fwait
mov
dec
mov
out
in
jb
(bad)
aad
in
mov
jmp
out
xchg
out
fwait
lods
in
bound
add
or
in
sub
gs
iret
mov
cwde
retf
xchg
mov
sbb
jle
dec
add
nop
shl
aaa
sahf
into
xchg
pop
or
stc
lahf
dec
shl
(bad)
xchg
fidivr
popf
xchg
mov
lods
dec
lds
xchg
sti
mov
jno
jp
nop
lock
xchg
movs
sti
mov
push
ss
and
dec
cmp
jle
push
xor
inc
mov
fst
or
out
mov
xchg
xor
or
mov
into
sahf
daa
call
imul
and
jo
test
ins
sbb
pusha
sub
xchg
aaa
sbb
pop
sbb
icebp
jge
add
nop
sti
ins
jbe
jne
(bad)
fcom
daa
and
pop
sbb
rol
mov
mov
pop
cmp
xchg
clc
mov
fdiv
inc
and
dec
(bad)
leave
mov
fs
cmp
sbb
inc
add
frstor
movs
stc
popf
call
adc
(bad)
pop
stos
hlt
or
jp
arpl
jge
pop
gs
call
lods
mov
xchg
cmc
lahf
ret
jne
jb
ins
icebp
ds
movs
(bad)
mov
mov
sbb
ss
ja
ins
mov
lahf
cld
ss
adc
aam
xlat
bound
sbb
xor
push
add
and
rol
lods
jmp
push
sbb
sbb
and
push
into
addr16
cmp
mov
sbb
shl
and
pushf
ret
aaa
jle
test
cmp
push
or
test
mov
nop
ficom
sbb
pcmpeqw
ds
sbb
movs
enter
or
stc
mov
mov
pop
in
mov
push
jp
(bad)
and
frstor
dec
test
adc
pusha
dec
ss
xor
xor
aas
int3
push
cmp
push
ins
pop
jne
(bad)
adc
push
in
mov
fdivr
addr16
lock
xchg
mov
pop
push
add
push
add
je
loope
retf
shr
sbb
dec
ins
cs
and
jae
jle
inc
verw
add
in
shr
minps
into
adc
les
mov
mov
ds
ins
xor
shl
aad
fsub
adc
add
dec
add
xor
imul
loop
std
jg
cs
adc
js
dec
call
jae
sbb
cmp
sub
inc
aas
ja
lock
mov
neg
fisub
fwait
jecxz
imul
icebp
and
and
int3
mov
add
push
pop
jb
nop
retf
scas
shr
xor
add
xor
fcom
jb
jne
inc
mov
inc
nop
and
fidivr
rol
adc
pushf
std
fs
adc
mov
mov
fmul
int
ins
xor
lods
(bad)
cmp
jno
shl
ss
xor
jg
mov
nop
fnstsw
sbb
jg
push
out
arpl
sub
or
sbb
push
and
cmp
sbb
stos
fild
icebp
mov
mov
jbe
mov
pop
sub
shl
push
cmp
repz
cmc
mov
loop
leave
or
ins
add
js
sub
dec
xor
jg
je
imul
stos
into
mov
fild
rcr
mov
ror
(bad)
xor
push
mov
mov
sub
out
jle
mov
or
(bad)
xchg
rol
call
xor
add
xchg
(bad)
mov
xchg
push
pop
js
aad
aaa
jae
ficomp
test
xchg
sti
ss
jge
call
scas
adc
jae
ror
les
xor
jno
pop
mov
jmp
lods
pushf
fmul
call
cmp
rol
or
repnz
lahf
cmc
pusha
xlat
movs
out
int
lock
ficomp
mov
mov
dec
and
push
sub
or
test
cdq
rol
mov
sub
fadd
mov
cwde
jno
ret
popf
aam
xchg
dec
add
mov
(bad)
and
sbb
addr16
adc
mov
call
pop
dec
ss
pop
js
pushf
jno
jbe
sub
inc
adc
fldenv
xchg
cli
xor
cmp
fisubr
inc
xor
nop
xlat
add
outs
loope
neg
js
and
mov
ja
cmps
retf
jg
in
cdq
(bad)
imul
sub
dec
and
dec
shr
sub
xchg
leave
test
addr16
cld
sar
xlat
sbb
cmps
fiadd
xor
xchg
retf
mov
inc
push
push
cmp
int3
mov
mov
dec
sub
pop
jecxz
pushf
loop
cmc
pushf
neg
jno
mov
add
jb
stc
fs
cmc
rcr
jmp
(bad)
cmps
loopne
in
sub
mov
pop
dec
sub
pop
sbb
mov
fwait
mov
mov
or
out
inc
add
xor
xor
mov
push
sbb
dec
sub
dec
aas
and
mov
mov
sub
pop
mov
jns
sbb
jle
loopne
out
imul
dec
adc
es
xchg
lds
mov
scas
(bad)
mov
xor
shr
les
inc
xchg
div
in
leave
mov
in
dec
add
and
repnz
loop
pusha
mov
jb
jbe
cmp
ss
ss
push
xchg
jo
ja
nop
cmps
les
sub
push
cmp
push
outs
ret
push
in
sub
jmp
rol
xchg
sti
(bad)
rol
fidivr
mov
cmc
pushf
pop
movs
jmp
dec
mov
jmp
mov
in
popf
mov
test
jle
push
add
pop
xchg
xor
cld
cmp
and
fs
test
dec
xor
cwde
les
scas
arpl
push
xor
outs
xor
out
xchg
test
mov
xor
jne
push
adc
fcom
mov
mov
cwde
push
and
pop
dec
sub
cmp
adc
dec
ret
lods
dec
mov
fadd
mov
popf
xchg
xchg
ror
adc
test
imul
mov
(bad)
xchg
pop
ins
aas
ins
pop
sar
pop
cmp
hlt
call
adc
gs
jmp
(bad)
das
bound
dec
or
or
mov
iret
xchg
push
mov
push
adc
popf
fisttp
ja
pop
pop
out
dec
sub
mov
pop
xor
imul
gs
shl
jnp
std
mov
mov
mov
sahf
les
movs
in
mov
inc
add
stc
and
jne
aad
js
gs
push
add
cld
aad
fcom
sbb
(bad)
add
cmp
ins
sub
out
adc
aad
int
rcr
(bad)
mov
mov
adc
ins
or
int3
mov
jne
out
in
inc
xor
and
pop
jmp
das
ins
push
jl
mov
out
or
sbb
pop
sub
(bad)
dec
mov
cs
xchg
lahf
cmps
ret
xor
pop
in
ss
xor
sbb
aam
fldcw
out
xlat
(bad)
jmp
pop
cmp
inc
jmp
into
mov
pusha
sbb
pop
and
mov
loop
xchg
icebp
xor
ins
pop
outs
add
xchg
neg
xor
mov
movs
mov
pop
ja
into
outs
jns
push
xor
stos
test
mov
cdq
mov
jae
iret
and
push
or
repnz
jle
xlat
push
sbb
das
inc
mov
ja
in
call
and
not
out
scas
std
mov
sbb
cmp
dec
adc
dec
xor
pop
adc
jne
shl
mov
leave
stos
aam
(bad)
es
mov
popf
jnp
out
lahf
fild
ins
inc
in
lds
mov
mov
inc
sub
push
stos
ret
xchg
mov
sbb
arpl
jge
sub
jp
pop
adc
xor
inc
mov
(bad)
jmp
pop
adc
iret
nop
stc
nop
test
shr
hlt
pusha
adc
jmp
mov
sub
aad
lahf
fisttp
mov
je
ja
push
loop
jmp
mov
movs
xchg
mov
inc
jge
mov
mov
dec
hlt
mov
push
sbb
pop
pusha
xor
in
fidivr
mov
jnp
jge
and
mov
imul
push
cmps
cli
pushf
std
fs
call
in
stc
mov
jb
pop
cld
mov
in
xchg
sti
xchg
mov
inc
aaa
pop
loope
push
dec
sbb
das
or
push
cmp
or
mov
dec
xor
xor
cmps
jo
mov
pop
push
pop
loope
mov
scas
mov
popf
in
mov
dec
das
inc
or
(bad)
fbld
pusha
repz
jo
adc
and
rol
xor
int
cli
mov
xor
pop
pop
mov
ja
outs
mov
ins
sbb
gs
mov
push
add
movs
repnz
icebp
jnp
jne
and
je
sub
push
cmp
inc
pop
ror
das
pop
aas
es
or
(bad)
xchg
xchg
cmps
sub
inc
xor
inc
and
pop
or
jb
imul
neg
test
int3
mov
push
push
push
loop
cli
xchg
ret
xchg
fisub
inc
push
js
jno
pop
cmp
sti
cdq
retf
arpl
jp
jo
push
xchg
ror
jo
xor
cmp
or
xchg
in
movs
xlat
mov
mov
mov
cdq
cli
imul
and
and
sub
inc
mov
stc
mov
push
or
ret
mov
and
push
dec
fst
and
xor
cmps
(bad)
mov
xchg
cmps
jmp
ret
mov
call
cmp
lds
and
test
loopne
pop
aad
ret
test
(bad)
mov
sbb
sbb
xor
mov
pop
add
cmp
fldenv
ret
mov
sahf
(bad)
lahf
fadd
xchg
lea
add
(bad)
or
jbe
mov
xchg
ret
cdq
icebp
mov
(bad)
lahf
(bad)
es
and
stos
loop
mov
xchg
std
push
js
pop
mov
cmps
fild
adc
es
and
pop
and
push
xchg
out
and
cs
adc
add
dec
or
mov
add
pop
push
jae
mov
out
mov
xorps
lahf
cmc
adc
cmp
loop
loopne
xlat
imul
int3
pop
or
jle
dec
cmp
mov
imul
loope
call
inc
sub
(bad)
mov
imul
sbb
cmc
(bad)
jecxz
adc
inc
or
out
lds
push
push
je
inc
shr
dec
cmovl
int3
inc
test
push
mov
cdq
fisttp
loopne
inc
jle
inc
shl
jbe
imul
or
jge
test
mov
mov
stc
(bad)
xchg
aas
ins
add
nop
in
imul
jg
shl
data16
add
imul
in
xor
inc
sub
add
jae
(bad)
lods
xchg
popf
scas
rcl
sbb
xchg
mul
jmp
scas
jne
lods
enter
xor
mov
mov
imul
and
test
mov
mov
jae
cmp
dec
icebp
mov
mov
pop
dec
es
nop
shl
int3
jl
fimul
jecxz
fstp
mov
xchg
leave
mov
outs
cmp
fbld
in
ror
and
sub
ja
bound
push
sbb
jmp
dec
sbb
sbb
fidivr
jl
pop
test
push
jae
lahf
not
lock
xor
pop
out
cmp
movs
loop
inc
xor
es
sbb
pop
sub
loope
pop
in
ret
sub
das
jo
imul
cmc
cwde
stc
pusha
mov
enter
in
mov
and
dec
xor
or
dec
xor
push
in
jecxz
ret
stos
lock
or
push
into
sahf
retf
imul
mov
cmp
cld
bound
pop
repnz
jle
push
jge
les
gs
mov
adc
enter
xchg
sub
xchg
sar
inc
sbb
push
cmp
lods
leave
mov
cmp
and
and
test
cmp
das
jp
jbe
fwait
mov
pop
adc
push
cmp
push
mov
stc
imul
or
cld
dec
adc
push
daa
inc
adc
or
mov
loop
push
jbe
push
xchg
stc
jnp
mov
fmul
inc
or
retf
mov
mov
test
add
xchg
push
add
pop
cmp
jns
adc
cmp
in
in
ret
xor
sbb
mov
hlt
nop
(bad)
cmp
dec
aad
push
mov
dec
push
and
sbb
idiv
out
sti
retf
test
fucomp
mov
mov
xchg
out
call
out
jge
retf
lods
inc
test
out
mov
in
adc
pop
stos
jle
xchg
addr16
in
inc
sti
inc
or
cmp
xchg
icebp
cmps
cli
jmp
jp
call
in
jl
pusha
call
daa
mov
mov
mov
rcr
daa
out
jno
push
xor
xchg
fcmovnb
mov
ja
jne
mov
js
in
pop
aaa
mov
mov
std
(bad)
(bad)
xchg
call
xchg
call
push
retf
loopne
mov
(bad)
psubsw
je
mov
cbw
outs
aad
(bad)
adc
inc
and
mov
out
mov
inc
mov
and
mov
lahf
out
add
pop
ins
push
xchg
cmp
gs
imul
les
pop
les
fdiv
fucom
cmps
daa
daa
cs
push
xchg
or
loope
icebp
aas
sub
pop
pop
leave
and
call
mov
jnp
xchg
push
sbb
retf
test
(bad)
in
xchg
ret
ret
ret
ror
jne
ret
jo
mov
push
pop
sahf
popw
sbb
push
cmp
inc
outs
popa
fiadd
lea
xor
and
sub
add
ret
mov
test
push
gs
cmp
mov
sbb
mov
test
lods
cmp
mov
add
pop
sahf
cmp
cmp
loope
test
fstp
mov
loop
and
and
mov
fstp
mov
and
xor
jns
retf
aad
dec
hlt
les
mov
mov
xchg
lds
inc
pusha
xor
pop
ret
cli
test
mov
js
lock
fwait
dec
neg
pop
ds
loope
inc
ret
mov
or
cmp
std
pop
push
cmp
push
push
xor
aas
mov
test
xor
inc
shr
fst
sti
mov
and
dec
push
xchg
sub
mov
jne
cmp
cwde
mov
push
inc
(bad)
retf
sub
mov
imul
adc
xchg
in
cmp
imul
mov
ror
push
inc
cmp
push
pop
pop
test
repz
stc
add
into
mov
mov
inc
adc
dec
mov
cmp
dec
pop
push
push
push
fidiv
popf
xchg
mov
or
repz
sbb
nop
call
lahf
loop
or
pop
mov
int3
(bad)
out
mov
push
sahf
mov
mov
jp
jle
aam
int3
jb
push
dec
ret
mov
mov
les
dec
clc
in
and
ret
push
sbb
and
dec
mov
scas
in
imul
xchg
out
imul
add
add
inc
add
sub
sbb
push
xor
mov
(bad)
inc
add
iret
je
mov
aas
rcr
pop
mov
push
xchg
mov
ret
sar
xchg
mov
aad
adc
mov
push
std
daa
adc
push
in
mov
cmp
push
(bad)
arpl
sbb
out
or
xor
or
mov
jge
out
in
stos
movs
add
sbb
inc
pushf
es
inc
push
push
cdq
fcomi
pop
push
xor
mov
repz
lahf
and
jmp
adc
shl
sub
mov
dec
cmp
out
fidivr
loopne
loop
in
xchg
out
pop
popf
xor
cmp
lds
int
out
dec
mov
inc
je
fisub
xor
or
pop
push
fcomp
dec
popa
test
adc
pop
or
mov
pop
leave
repnz
in
retf
jns
cmp
dec
jmp
pop
push
xor
push
pop
out
rcl
dec
dec
shl
hlt
arpl
fcompp
loop
retf
stos
mov
fisub
lods
cmp
push
cmp
enter
xchg
dec
jno
push
bound
and
ret
rcl
and
jo
sub
push
inc
add
mov
test
cmps
fidivr
std
inc
xor
mov
xchg
push
or
xchg
dec
pop
les
(bad)
lock
loop
sahf
fld
inc
cs
(bad)
push
aas
gs
and
sbb
in
inc
xlat
mov
cmp
or
push
jmp
lea
xchg
idiv
sub
stos
shl
cmp
inc
xor
lea
rol
cmps
dec
jg
add
jb
push
cmp
je
adc
dec
ficom
pop
xchg
popf
pop
sub
fstp
mov
push
div
fwait
shl
inc
add
pop
or
cld
push
addr16
pushf
xor
repnz
cli
mov
fild
sub
sbb
out
mov
retf
arpl
inc
jb
and
pop
test
inc
add
mov
outs
push
call
rcr
les
out
mov
sbb
push
pop
and
sbb
push
iret
push
adc
sar
inc
in
and
add
repnz
retf
mov
in
fst
add
push
add
sub
and
add
lgs
adc
add
mov
mov
iret
push
inc
stos
(bad)
outs
inc
push
call
or
push
sar
mov
jmp
xchg
pusha
cmp
cmc
cmp
(bad)
jnp
adc
lods
xchg
inc
push
fs
ds
cmp
xchg
cmp
push
sbb
sub
adc
fdiv
shl
rcr
shl
out
ret
js
cmp
hlt
movs
mov
jmp
jmp
or
xor
xchg
fs
cmp
cmp
call
sbb
mov
ret
add
cmp
or
ror
jo
pop
dec
addr16
test
loopne
pusha
stos
fstp
adc
std
mov
pop
dec
in
dec
dec
or
pop
imul
sbb
inc
xor
sbb
jg
shl
push
call
daa
test
mov
loopne
adc
inc
xor
sub
addr16
bound
stc
lock
stc
push
or
mov
cwde
push
or
ins
popf
cmp
or
or
jb
xchg
ss
repnz
mov
dec
dec
lods
or
pop
add
sar
test
fiadd
not
(bad)
stc
push
test
shr
ret
pop
push
adc
int
jae
bound
mov
xchg
mov
ficom
cmp
pop
pop
cmp
sub
xchg
fimul
lds
jne
aam
sub
addr16
cmp
retf
test
stc
or
int3
in
test
xlat
into
test
add
das
addr16
inc
add
push
pop
mov
add
and
mov
xchg
(bad)
in
rcr
sbb
es
mov
sbb
jle
scas
dec
fcomp
mov
inc
loopne
lahf
add
jno
push
ins
cmp
jcxz
leave
jbe
xchg
out
sbb
repz
sub
and
adc
mov
out
xchg
ins
ficom
test
shl
sbb
mov
inc
jle
sbb
jne
sub
mov
aad
je
fs
push
mov
sbb
jne
pusha
dec
adc
repz
lds
out
xor
in
jns
sbb
sti
out
imul
and
mov
movs
sbb
aam
lgs
jno
ja
sbb
cmp
std
pop
push
add
imul
dec
mov
fcomp
sbb
leave
imul
lahf
fimul
lahf
mov
sub
pusha
jecxz
pop
sahf
pusha
mov
jp
mov
pop
(bad)
cmps
and
xchg
xchg
aaa
out
int3
shl
sbb
adc
enter
sbb
cmp
xor
mov
dec
rcl
and
dec
iret
push
and
hlt
ret
fld
xchg
int3
pop
js
movs
daa
jnp
xor
push
cdq
cli
scas
add
jmp
add
jo
out
rol
movs
lds
cmovge
imul
dec
inc
jno
in
lods
(bad)
push
or
ss
push
sub
sbb
push
cmp
cs
imul
rcl
sub
loope
cwde
sub
mov
out
mov
mul
ja
add
sahf
mov
and
add
xor
test
add
in
sub
adc
mov
or
repz
xor
add
loop
lfs
or
inc
movs
pusha
inc
add
push
xchg
retf
(bad)
push
mov
in
rcl
shl
das
mov
dec
jbe
fisub
call
shr
mov
jnp
pop
mov
sub
dec
xor
std
stc
js
mov
repnz
jge
fwait
movs
sbb
addr16
sar
xchg
dec
lahf
add
xchg
je
test
mov
js
lods
cmp
fistp
mov
push
shl
leave
push
mov
ret
call
aaa
push
loop
push
jge
sub
lods
dec
xchg
(bad)
xor
retf
cmps
or
pop
cli
ror
push
and
(bad)
mov
add
fstp
inc
shl
lock
repnz
add
pop
lods
lea
cmp
lock
mov
jb
cmp
outs
sbb
out
out
pop
(bad)
ficomp
outs
shl
mov
ficomp
jg
add
add
nop
mov
ins
out
mov
add
ret
xchg
jmp
push
mov
dec
adc
mov
push
mov
push
in
dec
fnstenv
dec
mov
int
jp
out
xchg
pop
push
adc
cmp
mov
sbb
or
clc
cmp
pusha
(bad)
mov
cmc
pop
dec
(bad)
popf
inc
pop
and
push
push
fs
int
ins
add
push
iret
jne
jbe
ret
pop
cmps
push
xchg
add
cmp
xor
add
ror
push
xor
add
xchg
jp
in
jp
pusha
cmp
(bad)
mov
cmp
shl
ins
pop
daa
mov
sub
popa
repnz
jbe
shl
inc
push
pop
popa
sahf
daa
fnstsw
jg
mov
mov
bound
push
lds
ret
and
shr
cmp
and
push
cmp
jae
fadd
(bad)
loopne
sbb
jl
pop
pusha
dec
aam
cwde
cmp
dec
push
mov
(bad)
lock
call
lahf
jmp
and
inc
adc
mov
jnp
cmps
or
xchg
loopne
jne
fbstp
fisttp
in
dec
aaa
xor
cmp
dec
pop
mov
jne
stos
add
aad
outs
les
mov
popa
retf
call
push
fmulp
retf
movs
jo
fld
(bad)
mov
mov
dec
sbb
cmp
xchg
push
and
jmp
mov
jl
and
sub
outs
mov
scas
push
add
pop
(bad)
push
pop
(bad)
pop
pop
inc
inc
in
test
loopne
jnp
cmp
or
add
cwde
push
push
xchg
int
mov
int
add
shl
and
imul
jnp
mov
in
inc
mov
cs
call
fwait
inc
and
lock
jg
lahf
iret
iret
dec
bound
das
fld
push
pop
xchg
sbb
mov
mov
std
test
in
jne
push
dec
jge
mov
mov
inc
jo
fdiv
ficomp
sub
mov
inc
mov
fcom
or
mov
int
xchg
(bad)
retf
rcl
add
inc
xor
adc
cmp
dec
icebp
ss
fstp
les
mov
push
inc
inc
je
adc
ror
or
pop
fldcw
out
cmps
jae
pusha
add
xchg
(bad)
out
mov
outs
xor
fstp
jp
mov
dec
pop
aas
push
out
div
jmp
adc
rcr
mov
clc
(bad)
sbb
cmps
loope
xor
sahf
repnz
inc
inc
push
mov
dec
add
popa
pop
movs
scas
inc
das
and
adc
and
xchg
or
sti
lods
xchg
sbb
dec
xor
mov
mov
jge
aas
push
push
shl
(bad)
mov
or
cwde
addr16
pop
pop
or
popa
and
mov
add
imul
jae
push
xor
xchg
jo
xor
out
ds
or
lock
jne
enter
mov
cmp
jmp
add
push
out
arpl
jb
aaa
mov
xchg
sub
lods
enter
adc
call
out
aam
icebp
adc
enter
sub
ror
pop
mov
lods
add
jb
inc
dec
push
inc
mov
push
outs
scas
jns
sub
sub
cmc
mov
in
or
int
lock
xor
div
jnp
arpl
add
jmp
dec
ins
shl
addr16
dec
and
(bad)
stos
inc
test
lock
aad
and
inc
test
aaa
(bad)
ins
push
cmp
adc
mov
hlt
popa
mov
je
sbb
fs
inc
or
xchg
jle
mov
retf
mov
add
mov
mov
add
mov
mov
cmp
adc
leave
lds
push
stos
add
js
in
mov
mov
bound
test
ret
sti
leave
add
(bad)
cmc
sbb
sbb
aam
sar
or
push
push
gs
arpl
xor
int3
lock
adc
add
dec
xor
xchg
shl
xchg
add
(bad)
pop
mov
mov
enter
add
xor
inc
sbb
stc
or
loopne
mov
aam
cmp
adc
outs
add
mov
pop
push
jmp
cli
call
jg
mov
mov
dec
xor
and
jns
(bad)
in
fdiv
es
mov
icebp
and
fsub
out
loop
in
push
add
mov
ds
popa
mov
jle
retf
adc
pop
cdq
or
pop
arpl
push
jo
leave
dec
pop
dec
sub
and
mov
sbb
nop
mov
mov
cwde
mov
repz
xchg
jns
inc
fsubr
jg
mov
xor
push
pop
call
(bad)
test
mov
mov
pop
add
pop
loop
fdiv
push
pop
shr
sub
xchg
add
repnz
cld
cmps
scas
je
fcomp
mov
loop
jle
outs
dec
dec
mov
vsqrtsd
(bad)
mov
jno
(bad)
xlat
inc
cmp
ins
sub
mov
nop
(bad)
adc
stos
pop
dec
mov
push
das
pop
dec
pop
mov
add
sub
sub
shr
xchg
leave
and
adc
mov
loop
cmp
mov
cmp
into
mov
icebp
out
and
push
dec
stos
shl
mov
add
dec
cmp
and
cmc
cmps
popf
push
jo
imul
lahf
push
xor
mov
and
(bad)
arpl
sub
(bad)
pusha
and
mov
mov
push
cmp
leave
or
dec
cmp
xor
sbb
js
mov
inc
jecxz
lds
setne
rcl
xchg
rcr
aaa
je
lods
ret
mov
mov
(bad)
mov
or
mov
jge
cmps
les
and
push
bound
mov
push
xor
inc
call
xor
pop
jecxz
test
jmp
cmps
jle
pop
out
movs
mov
jne
push
adc
xchg
ret
cmp
xchg
jg
popf
ror
push
adc
lods
mov
mov
mov
mov
mov
or
adc
and
mov
push
sbb
dec
pop
dec
adc
dec
cmp
dec
add
stos
pushf
out
inc
and
sub
inc
retf
hlt
mov
inc
sbb
and
jae
push
aaa
or
mov
fwait
iret
pushf
icebp
mov
xor
addr16
in
push
adc
mov
(bad)
xchg
inc
in
and
cmps
mov
sub
fisttp
mov
lock
shl
js
add
pop
xor
test
(bad)
mov
add
cld
sahf
out
add
add
xor
xor
outs
ss
mov
test
int
mov
xor
les
jb
add
xchg
fmul
push
mov
xchg
repz
sub
add
(bad)
popa
or
jno
imul
test
push
loopne
stc
dec
mov
test
dec
ret
sub
lds
iret
mov
mov
mov
ins
mov
sub
push
mov
xchg
mov
pushf
in
mov
int3
cmp
gs
shr
int
ss
arpl
jb
mov
dec
bnd
data16
pushf
jno
jmp
or
xchg
cdq
iret
popf
jmp
xchg
xlat
sahf
cli
outs
adc
nop
mov
add
xchg
pop
or
cwde
imul
dec
xchg
mov
rol
xor
and
mov
mov
push
aaa
jo
inc
jnp
lahf
fdivr
jl
pop
xor
pop
sbb
shl
cmp
push
dec
cs
push
std
test
pop
ja
ins
scas
std
sbb
in
into
mov
pop
xchg
fldenv
ja
mov
dec
in
xchg
out
test
lahf
mov
in
in
lock
lahf
jnp
adc
ret
add
loopne
and
sbb
jo
imul
bound
pusha
cmps
aaa
sub
jp
inc
jle
lods
in
jle
inc
sub
movs
ds
push
in
jmp
(bad)
out
das
adc
mov
lods
or
push
outs
enter
in
cwde
je
loope
pop
outs
inc
(bad)
lahf
cli
push
adc
jl
sub
inc
in
xchg
cmp
push
xchg
sti
cmp
push
xor
ins
aas
mov
ss
pop
clc
fwait
pop
cs
das
jmp
mov
mov
mov
mov
jg
or
add
xchg
hlt
push
pop
ja
inc
add
and
xchg
shl
cmp
jl
int3
mov
sub
(bad)
mov
push
cmp
mov
outs
sub
cmps
repnz
sub
inc
push
jmp
fwait
pushf
aad
lds
mov
retf
data16
inc
mov
push
xor
mov
jp
inc
sub
imul
xchg
in
mov
scas
int3
jnp
in
lods
test
fild
jecxz
adc
repnz
jns
xchg
fidivr
push
cs
xor
out
mov
rcr
ret
mov
sub
inc
jb
dec
cmp
jo
call
dec
sbb
mov
pop
sbb
stos
shl
ins
push
in
jmp
test
add
repz
or
mov
sbb
xchg
mov
jp
mov
movs
jns
jne
repnz
mov
inc
loopne
mul
pop
scas
mov
mov
lock
mov
sub
sub
and
sub
and
cs
or
jle
rol
push
push
xor
jo
push
inc
cmp
sbb
cmp
jne
gs
repz
fwait
stc
call
add
stos
bound
inc
mov
out
test
pop
mov
cmp
(bad)
stc
xchg
fst
jecxz
xor
cld
ins
or
dec
fidiv
je
out
retf
sub
cli
inc
xor
cs
fild
stos
pushf
fs
pushf
call
js
jmp
xchg
enter
pop
iret
or
mov
xor
push
shr
ror
push
add
jbe
test
cdq
sub
outs
add
(bad)
sub
jg
push
xor
fdivr
jp
sahf
dec
rcl
xchg
in
jmp
stc
sbb
call
pop
pushf
mov
xchg
add
out
cld
jnp
push
and
pop
cmp
mov
retf
lods
in
push
mov
cmc
shl
mov
inc
xor
xchg
ret
adc
or
xchg
stos
jno
rcl
aam
es
mov
xchg
xlat
popf
int
loop
and
sub
add
std
cmp
dec
aaa
jmp
into
mov
push
rcl
retf
mov
rol
adc
sub
lds
push
sti
scas
fs
inc
xor
mov
jmp
out
mov
cmp
shl
inc
aas
mov
movs
aam
jo
cbw
clc
(bad)
out
ss
and
lods
xchg
(bad)
xchg
jp
imul
push
mov
mov
sub
ins
sub
dec
out
mov
mov
sub
sbb
das
or
lock
in
push
fiadd
mov
je
push
sub
push
cmp
xchg
dec
not
std
mov
pop
mov
call
hlt
xor
gs
mov
push
jae
popf
fcomip
pop
inc
out
mov
cmps
and
rcr
loopne
pop
cmp
jno
xchg
mov
std
scas
add
mov
test
mov
pop
call
cmps
repz
ficomp
fimul
in
jae
push
inc
ficomp
adc
jnp
mov
dec
xor
outs
cmp
cmp
fidivr
xor
sub
cmp
ficomp
sub
clc
jecxz
or
test
std
nop
or
sti
xchg
ds
les
pusha
es
xor
inc
or
push
adc
sti
xor
inc
retf
adc
inc
mov
aas
mul
pop
cmp
fwait
mov
push
fnstcw
aaa
cmp
jl
minps
shl
xchg
mov
xor
and
inc
das
pop
dec
and
push
jge
mov
mov
arpl
dec
mov
(bad)
pusha
jmp
mov
pusha
sbb
push
pop
pminsw
jo
add
popa
es
add
pushf
lods
repnz
lock
mov
xchg
fisub
rol
jne
lods
call
mov
fimul
push
push
xor
pop
xchg
jae
xor
push
xor
lds
push
add
lods
icebp
xchg
in
cmp
pop
(bad)
xlat
mov
mov
mov
jle
loopne
and
fs
pop
push
xor
cs
gs
retf
and
xor
mov
xchg
pop
adc
cmc
xchg
cli
fwait
mov
int
fsubr
push
add
cld
and
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
push
es
cmp
dec
sub
adc
addr16
pop
xor
inc
cmp
push
add
adc
packssdw
popa
add
sbb
or
gs
ss
and
popf
fidivr
mov
iret
mov
jmp
mov
mov
clc
mov
scas
aad
into
stos
shr
in
xchg
call
les
ror
jmp
fidiv
cmc
mov
xchg
fisubr
loopne
test
fwait
enter
iret
mov
mov
mov
in
mov
(bad)
ret
test
repnz
stos
sti
test
mov
cdq
sbb
je
dec
sub
pop
cmp
or
jl
pop
push
dec
add
dec
push
dec
and
cmp
adc
outs
push
ins
aas
dec
add
data16
and
jg
jnp
pop
or
pop
je
arpl
inc
pop
and
dec
and
ins
pop
jl
push
xor
push
adc
ins
adc
arpl
jns
popf
repnz
mov
test
mov
aam
ret
xchg
and
div
fldcw
ret
mov
xchg
div
scas
cmc
mov
cld
fstcw
hlt
xchg
mov
out
scas
idiv
xlat
mov
test
loope
icebp
xchg
out
sub
(bad)
mov
fild
loop
lds
in
mov
cdq
not
xchg
test
mov
or
fwait
pop
jl
jb
dec
and
inc
sub
add
inc
cmp
jno
sub
aaa
push
sub
jge
pop
cmp
jo
jne
dec
pop
and
pusha
add
dec
adc
xor
sub
dec
pop
dec
sub
add
je
arpl
push
ss
and
addr16
sub
das
pop
add
imul
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
mov
ja
dec
mov
mov
cwd
repnz
fidivr
jg
outs
mov
addr16
mov
dec
daa
inc
fnsave
jnp
shl
ins
sbb
test
lahf
jl
jb
xlat
mov
mov
lock
out
data16
cmp
pop
push
jge
loop
(bad)
mov
cmp
scas
iret
(bad)
add
xlat
adc
add
in
(bad)
sbb
add
test
inc
lods
fist
jle
fild
fs
retf
mov
add
neg
inc
scas
(bad)
mov
jno
jmp
iret
adc
out
lds
pusha
sbb
call
clc
pushf
fld
dec
sbb
jmp
add
fdiv
push
xor
jecxz
lock
retf
mov
push
mov
cmps
loopne
dec
add
hlt
sbb
dec
mov
mov
push
push
push
inc
xchg
shl
fstp
imul
stc
mov
mov
les
ja
clc
call
ficomp
daa
rol
jg
aam
in
xchg
jne
ja
in
std
test
jns
fadd
jnp
aam
retf
and
cmc
call
aad
aam
jb
push
lock
inc
mov
dec
and
test
jmp
mov
dec
push
popf
pop
cmp
int3
scas
ret
or
repnz
xchg
dec
add
mul
pop
or
pop
cmp
ror
sbb
add
inc
xor
enter
inc
daa
popf
inc
outs
push
ins
xor
(bad)
sub
push
iret
xchg
fimul
sub
mov
lods
leave
or
bound
arpl
push
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
out
and
mov
in
(bad)
mov
mov
xchg
fstp
retf
xchg
sti
call
sar
int
int3
mov
ficomp
call
cwde
sar
loop
push
cmp
inc
add
outs
(bad)
adc
push
jg
inc
das
pop
xor
inc
add
push
cmp
dec
sub
and
sbb
jns
sub
pop
xor
push
or
inc
xor
sub
push
or
jae
inc
pop
xor
bound
jo
fs
jge
push
sub
or
imul
push
daa
outs
add
mov
test
ret
stos
int
xlat
xchg
fidiv
fistp
shl
mov
mov
xchg
mov
in
mov
scas
(bad)
mov
call
mov
fisttp
nop
(bad)
sahf
cmc
mov
test
movs
(bad)
stos
aad
pcmpeqd
js
pop
pop
dec
cmp
inc
and
jp
pop
push
jg
ins
or
add
push
cs
and
dec
or
push
or
add
jb
inc
xor
ins
push
ins
cs
or
sbb
push
jbe
imul
pop
daa
dec
sub
sub
push
jno
jo
dec
push
push
sbb
pop
push
dec
sub
aaa
jae
push
sbb
push
aaa
push
xor
ins
or
push
jle
jns
inc
or
ja
jne
push
xor
dec
sub
jl
imul
adc
sbb
js
add
imul
ss
xor
push
xor
jae
pop
add
dec
xor
inc
push
dec
and
outs
adc
das
push
aas
push
sbb
sub
pop
aas
inc
sub
or
jg
sub
(bad)
pushf
fld
call
movs
in
mov
movs
fdiv
out
cld
call
rol
pause
(bad)
arpl
inc
and
push
xor
push
adc
inc
and
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
cmp
push
and
add
js
pop
sbb
or
popa
add
pop
adc
xor
inc
cs
push
jnp
imul
ja
jbe
push
sbb
pusha
daa
outs
or
push
add
xchg
push
add
sub
pop
or
xchg
jl
jno
cmp
jae
out
movs
aas
ins
das
dec
outs
out
js
xor
hlt
sub
jmp
loop
pop
jmp
in
sbb
jle
mov
movs
(bad)
out
aam
push
inc
and
xor
mov
add
dec
jns
and
pusha
jl
push
jnp
inc
lods
mov
and
sbb
(bad)
call
xchg
popf
push
enter
cmp
mov
popf
pop
jmp
jae
rcr
sbb
adc
push
fmulp
test
mov
and
mov
xlat
mov
retf
sub
fadd
sbb
dec
cmc
push
inc
js
bound
loopne
stc
in
test
push
loope
mov
ss
dec
ss
scas
(bad)
jae
mov
nop
ins
mov
pusha
shr
in
shr
fidivr
out
std
mov
or
stc
jno
add
ret
in
or
sub
leave
pushf
jmp
sbb
pop
cmp
dec
sub
push
pop
add
add
dec
add
xlat
mov
imul
(bad)
shl
xor
cmps
jmp
push
pop
int
and
adc
jne
mov
add
add
push
idiv
mov
sub
mov
mov
outs
push
ins
sbb
dec
and
iret
xchg
(bad)
pushf
call
push
xchg
(bad)
call
in
pushf
aam
imul
loopne
repnz
dec
fisttp
cmp
cmc
mov
mov
push
and
add
xor
mov
mov
jmp
aaa
jle
leave
cwde
loopne
movs
(bad)
stos
xchg
jb
mov
int
ss
pushf
leave
test
cmp
stos
out
mov
push
ss
mov
arpl
dec
mov
push
es
xor
jne
bound
mov
xchg
div
xor
mov
mov
lods
or
arpl
and
jns
cmp
pop
inc
xor
call
xchg
rcr
mov
call
jg
push
jnp
mov
xchg
idiv
mov
lods
inc
in
xchg
fistp
repnz
test
stc
call
ret
cmp
and
dec
sbb
cmp
out
xor
cmc
xchg
mov
ret
rol
out
mov
repz
icebp
popf
in
mov
das
dec
push
cmc
mov
mov
jmp
xor
mov
push
mov
fadd
sahf
rcr
push
aaa
dec
(bad)
inc
jmp
ret
mov
std
out
cmps
push
sahf
hlt
mov
adc
stos
lds
adc
test
jno
into
and
cmp
loope
lock
cmps
xlat
mov
fnstsw
sbb
jge
push
mov
or
push
xor
sbb
sub
lock
in
jmp
adc
jae
jle
pop
les
dec
in
leave
stos
nop
mov
and
pop
rcr
lods
hlt
adc
xchg
mov
push
shr
jbe
movs
fld
nop
ror
inc
or
test
data16
add
cmp
bound
jo
gs
stc
mov
dec
addr16
je
data16
fwait
jecxz
inc
add
dec
sbb
test
call
dec
das
sub
jae
ret
mov
inc
add
jae
bound
sbb
arpl
imul
jmp
xor
outs
add
and
jle
inc
shr
mov
(bad)
jmp
inc
or
xor
mov
aas
movs
rol
mov
cdq
in
jecxz
push
stc
fwait
jecxz
xchg
xchg
mov
stos
rcl
xor
pop
jecxz
sti
and
jmp
push
ins
(bad)
retf
stos
leave
jno
xchg
(bad)
mov
xchg
loop
cmp
mov
lods
inc
icebp
popa
add
addr16
push
and
movs
rcl
pusha
inc
sbb
cli
or
sub
or
es
xor
push
cmp
cmp
pop
mov
or
and
pop
jl
loope
mov
sahf
fs
xor
fild
sbb
fwait
cli
sub
in
jb
push
sub
cdq
pop
sub
push
pop
cmp
sahf
mov
and
lds
fidivr
xor
test
push
push
jp
or
in
ins
add
add
xchg
movs
rol
cwde
aad
loop
ret
mov
popa
add
dec
ret
or
push
leave
mov
xor
imul
dec
aaa
push
xor
xor
in
lock
fist
push
fist
das
push
and
neg
(bad)
pop
cmp
sahf
out
cmps
cli
dec
sub
mov
xor
cmp
pop
(bad)
sar
(bad)
mov
push
push
scas
clc
test
jp
ss
jae
mov
xor
jnp
loop
adc
popa
loop
ret
aam
fisttp
stc
inc
es
outs
loop
(bad)
dec
pop
sub
jmp
into
fimul
js
cs
cdq
cdq
(bad)
xchg
pop
pop
and
aas
add
aas
fld
gs
ss
adc
inc
sub
adc
jb
repz
rcr
mov
mov
aaa
and
nop
cli
cmps
cli
lahf
fnsave
pushf
into
push
movs
in
jg
jge
ret
jno
jns
mov
xchg
imul
pop
adc
mov
xchg
xor
cmp
(bad)
xchg
lock
iret
push
in
sbb
xor
fs
sub
push
adc
jp
mov
xchg
xor
pusha
lock
cmps
mov
test
sbb
emms
sbb
shr
sbb
je
push
in
loope
arpl
pusha
loope
or
jne
jl
dec
adc
fmul
mov
repnz
call
jp
repnz
or
push
pop
or
mov
dec
aaa
push
loop
push
pop
cld
mov
mov
push
ja
(bad)
loopne
iret
mov
push
ror
xchg
mov
sub
aaa
push
adc
retf
test
jl
stc
mov
lods
int3
mov
outs
adc
neg
inc
or
(bad)
push
aam
lock
shl
jmp
test
pop
std
mov
call
sbb
aad
test
into
mov
cdq
ret
xchg
aad
pop
or
addr16
push
test
shr
test
jnp
aaa
packssdw
inc
std
scas
std
ret
sub
push
call
xor
ins
shl
int3
les
aad
fisttp
stos
xor
sar
shl
add
fst
mov
std
sahf
fist
xor
or
cdq
xchg
mov
fnstcw
pop
jnp
pop
and
or
push
cmp
push
jmp
ins
push
add
pop
push
sub
dec
sbb
push
push
sbb
push
jne
arpl
mov
pop
retf
add
jbe
in
(bad)
inc
and
in
xchg
sub
fstp
stos
pusha
xor
jg
xchg
(bad)
cmp
mov
rcl
jno
sub
inc
maskmovq
test
enter
or
add
jne
pop
sub
bound
jno
sub
cmps
hlt
mov
aad
in
ds
imul
dec
(bad)
retf
mov
push
pop
dec
cmc
jle
fs
ja
push
cmp
jb
fdivr
dec
shr
out
add
iret
lods
push
loopne
retf
jo
lods
int
outs
cld
mov
stos
(bad)
lods
xor
int3
jmp
and
fcomp
dec
je
push
cmp
mov
call
cmp
std
(bad)
(bad)
popa
xor
sbb
adc
fs
data16
(bad)
out
mov
fucom
xchg
mov
lods
dec
retf
push
mov
or
adc
xchg
fisttp
inc
cmp
leave
fadd
push
push
xchg
in
xchg
stos
shr
add
pop
xlat
mov
stos
mov
cmps
mov
xor
push
mov
pop
add
jmp
xchg
test
not
bound
es
push
inc
test
mov
dec
push
mov
mov
int
push
loop
pop
outs
es
mov
scas
and
cmps
ins
mov
add
pop
sbb
pop
cmp
xor
push
sbb
shr
xchg
repnz
cdq
cwde
ret
(bad)
mov
sub
dec
das
scas
int
ret
push
sub
inc
es
lea
outs
or
push
loopne
cmp
push
xor
popf
div
lds
jle
jb
push
test
(bad)
in
push
ret
mov
call
xor
mov
outs
xlat
mov
add
imul
das
inc
sub
imul
cmp
cs
push
stos
movs
mul
jne
lahf
(bad)
sbb
cwde
loopne
jle
(bad)
push
sbb
(bad)
ja
push
jl
arpl
cmp
push
inc
in
(bad)
(bad)
dec
sub
loope
ret
(bad)
dec
sub
sbb
cmp
and
rcl
lods
in
call
div
push
test
scas
out
jo
fidiv
retf
mov
pop
mov
jmp
sbb
aad
fisubr
sub
aaa
add
xor
sbb
popa
mov
lods
fsubr
push
xor
jge
push
aaa
push
push
(bad)
xchg
cld
mov
imul
idiv
dec
sub
stos
out
and
and
retf
ins
or
xor
das
fild
cmp
rcl
fstp
out
nop
ret
inc
mov
adc
lods
into
sbb
into
in
stc
xchg
xchg
jae
jmp
aaa
aad
sub
jae
mov
jp
pop
mov
lods
in
test
scas
in
push
pop
or
cs
adc
cmp
cs
pop
cmp
jg
sub
and
sahf
ror
(bad)
arpl
add
push
fisubr
dec
or
pop
mov
jmp
cwde
clc
xchg
rol
add
rol
(bad)
stos
leave
mov
jns
cmp
mov
mov
or
fadd
bound
add
dec
cmp
cmp
or
xorps
clc
mov
pop
sbb
push
rcr
scas
rcr
iret
pop
les
out
jg
jg
shr
jl
jno
xor
dec
cmp
fidivr
sbb
push
sbb
loop
ficom
jno
sbb
pop
cmp
mov
jns
mov
xor
imul
imul
in
movs
out
lock
out
into
lds
xchg
pop
mov
call
add
mov
mov
push
push
push
add
jmp
nop
push
fiadd
pushf
dec
retf
xchg
imul
cmp
cmp
dec
ror
sub
and
test
mov
(bad)
mov
push
daa
jb
mov
shl
xor
out
ds
add
inc
mov
jb
in
push
lods
dec
adc
imul
pop
shr
shl
sahf
int3
add
inc
cmps
dec
or
push
lds
sub
sbb
ins
mov
jae
rol
pop
xchg
push
sub
push
xor
mov
xchg
xchg
mov
dec
adc
fnstenv
in
mov
dec
and
mov
repnz
sti
xchg
retf
add
in
xchg
mov
mov
movs
mov
mov
scas
in
push
inc
adc
dec
sub
push
cmp
daa
cmp
or
adc
xchg
arpl
inc
mov
xchg
das
cmp
push
ss
dec
xchg
std
call
sahf
cmps
out
or
pop
daa
inc
arpl
scas
jmp
cwde
sar
(bad)
lods
das
jmp
imul
in
push
loop
hlt
xor
pushw
push
fsub
xchg
xor
xchg
retf
call
push
or
imul
rol
sahf
jnp
xchg
shl
in
cwde
cld
mov
sbb
sbb
out
ret
add
call
adc
mov
add
add
mov
js
aas
adc
jnp
pop
daa
loope
or
jge
push
jae
nop
lods
aad
push
push
imul
add
test
test
fidiv
mov
out
jb
loopne
jecxz
inc
and
sub
outs
xchg
in
shl
das
mov
movs
rol
mov
inc
daa
add
xchg
stc
xchg
inc
dec
or
and
ss
jl
das
dec
push
add
rcr
je
xor
test
test
cmp
arpl
add
and
scas
out
push
lds
leave
cwde
fisub
pop
lods
retf
data16
mov
jmp
pop
xor
hlt
pushf
fild
repnz
outs
mov
scas
(bad)
cmp
sub
es
pop
pop
dec
es
arpl
dec
adc
int3
lods
(bad)
jnp
bound
aam
int3
mov
jle
les
mov
rcr
int3
pop
add
push
call
sub
scas
add
lods
jmp
inc
daa
pusha
test
push
xchg
(bad)
iret
mov
ss
(bad)
jmp
push
aaa
push
int3
cmp
icebp
pusha
adc
xor
cmp
stos
call
add
(bad)
mov
xchg
popf
jmp
cmp
push
push
xor
rcl
shl
adc
add
add
pop
mov
cli
fwait
xchg
push
mov
or
sahf
xchg
jb
arpl
inc
lods
jae
stos
jecxz
xor
xchg
fnstsw
push
fstp
lea
sbb
sub
shl
push
fs
inc
das
and
xor
nop
jl
pop
adc
jb
xor
popa
clc
xor
dec
ret
cs
ds
movs
cmps
mov
mov
cmp
cmp
mov
cmp
push
in
or
je
repnz
ja
imul
pusha
movs
fidivr
or
mov
daa
repnz
enter
cmp
loopne
jb
call
dec
push
loope
lock
pop
push
adc
pop
in
ins
scas
sti
pop
or
mov
jno
jle
scas
data16
fsubr
dec
and
lahf
test
or
mov
outs
cmp
into
inc
or
inc
movs
and
mov
jae
mov
test
aad
pop
cmp
xchg
mov
fst
(bad)
jb
popa
mov
sbb
repnz
or
cmps
movs
cmps
int3
mov
mov
add
retf
or
pop
and
jns
push
(bad)
jecxz
std
jo
push
les
sbb
cmp
fld
arpl
sahf
cld
enter
test
ins
mov
push
dec
push
add
pop
imul
pop
pop
ins
sub
mov
mov
mov
out
add
sbb
mov
sub
add
xor
pop
xchg
mov
push
fwait
ja
pop
in
jmp
not
(bad)
cdq
sbb
mov
bound
cmps
fisttp
adc
arpl
je
test
pop
clc
popa
or
mov
inc
adc
inc
cmp
iret
lods
call
add
jge
mov
mov
lea
mov
sbb
push
sbb
xor
xchg
dec
out
cmp
std
daa
dec
sbb
arpl
mov
scas
int
jbe
call
sub
inc
mov
addr16
pop
jmp
sub
sub
and
(bad)
loopne
xor
mov
fisttp
(bad)
adc
data16
not
sub
es
pop
mov
test
jb
iret
mov
cmps
lock
shl
and
das
pop
xor
(bad)
repnz
int
int
lahf
aad
ficomp
mov
pop
aas
push
jo
pop
and
cwde
std
pop
mov
imul
and
xchg
hlt
dec
lods
jmp
sub
adc
(bad)
push
jns
cmps
dec
lahf
icebp
nop
add
scas
xchg
bound
bound
loopne
mov
and
mov
push
sub
push
lods
jl
data16
fs
(bad)
or
test
test
pop
mov
and
and
dec
aaa
mov
inc
test
(bad)
and
jo
mov
pop
(bad)
push
test
fild
dec
sub
icebp
push
mov
mov
ds
push
cmp
mov
out
pop
cmp
lds
pop
cmp
jo
dec
mov
cs
xor
pop
iret
lods
xlat
dec
sbb
pop
aad
push
cmp
fs
sahf
ins
mov
scas
in
xor
mov
push
sbb
ret
(bad)
loop
inc
sub
mov
adc
pop
pop
or
xchg
lds
inc
fsub
mov
gs
retf
push
mov
sub
outs
mov
repnz
jl
clc
and
ret
cmp
sub
xchg
stc
xchg
fnstenv
or
les
sub
frstor
ins
mov
adc
(bad)
mov
imul
cdq
jns
test
sbb
aaa
mov
sub
std
add
push
add
cmp
popf
fisubr
add
into
mov
hlt
and
fwait
into
sbb
pop
sbb
xor
inc
add
popf
aad
push
add
out
repnz
cmp
adc
outs
ficomp
ret
jbe
stc
adc
test
mov
ret
sub
xor
addr16
ret
pop
aas
push
mov
repnz
out
mov
sti
mov
push
ds
jo
pop
and
movs
(bad)
push
out
cmps
retf
lods
out
enter
dec
xchg
call
int3
lea
mov
in
push
pop
and
mov
outs
mov
xacquire
mov
xchg
fs
pop
mov
cli
nop
cmp
pushf
fiadd
adc
cmp
stc
mov
mov
scas
iret
and
mov
cmp
inc
call
sbb
push
rcr
jae
lds
bound
int
inc
xchg
in
adc
mov
outs
mov
fwait
idiv
inc
push
cmp
mov
(bad)
xlat
or
out
xchg
stc
test
pop
ins
aas
mul
sbb
cmc
xchg
pop
add
inc
fdivr
jne
adc
and
test
cmp
jmp
int
xor
xor
dec
sti
add
scas
ret
test
add
xchg
repz
pop
sbb
jnp
stos
loop
cli
xchg
cli
cmp
xchg
iret
movs
push
add
pusha
add
fst
mov
mov
int3
cmps
cmp
cdq
fild
jge
popf
je
jl
into
lods
aad
pop
add
lock
and
and
mov
pop
push
mov
pop
sbb
nop
rcl
enter
dec
imul
mov
call
test
mov
lods
leave
mov
ret
addr16
dec
add
mov
pop
(bad)
lods
aam
outs
out
std
lods
fisub
push
pop
(bad)
fisttp
pop
adc
mov
mov
sbb
nop
dec
and
in
aas
jge
pop
mov
xchg
jo
ficom
jmp
mov
scas
dec
xchg
mov
rcl
inc
arpl
inc
push
mov
mov
std
adc
push
stos
repnz
fimul
pop
sub
push
pusha
cs
pop
add
aad
ins
sbb
or
jb
outs
sub
mov
sub
fist
jne
mov
mov
add
into
stos
jg
fs
xor
inc
and
cmp
xchg
div
pushf
fidiv
push
les
push
lea
mov
inc
lea
cwde
mov
popa
cmp
cmp
add
xchg
push
add
test
pop
repnz
or
jb
push
cdq
mov
(bad)
iret
add
lods
adc
adc
outs
std
and
fcomp
retf
repnz
enter
push
arpl
add
rcr
(bad)
repz
xor
(bad)
(bad)
jb
out
test
mov
dec
xor
call
mov
jno
fsubr
ins
sti
mov
sub
cmp
and
shl
cmc
sub
test
arpl
outs
jb
mov
pop
mov
xor
sub
stos
outs
ficom
(bad)
sbb
arpl
xchg
push
shl
adc
mov
push
cld
sbb
pop
mov
fisub
imul
ja
sub
mov
aam
mov
push
lea
jmp
cwde
cli
fiadd
adc
aas
xor
loopne
pop
dec
out
cmc
inc
inc
shl
jge
das
arpl
popf
xor
dec
fcmovb
sti
fwait
sti
ror
or
dec
fnstcw
adc
push
rcr
repz
dec
(bad)
jne
dec
push
jns
mov
cmp
in
in
jnp
mov
cld
dec
inc
add
sbb
lods
aad
xlat
cmp
adc
inc
cli
stos
xor
mov
xchg
push
xchg
dec
ss
inc
adc
stc
xchg
idiv
into
cdq
icebp
mov
rol
or
pop
fidiv
inc
cmp
add
jecxz
arpl
push
out
or
repnz
call
mov
fsqrt
and
scas
xchg
daa
je
ins
push
push
sbb
in
lock
and
cs
xor
cmc
shl
call
pop
dec
dec
sar
stc
xor
stos
push
and
out
add
ss
call
sub
loopne
add
push
lds
hlt
js
dec
adc
mov
jmp
sub
sahf
stos
add
pop
and
dec
push
clc
inc
sbb
cmp
jnp
add
es
dec
fcmovnb
fld
outs
xor
cld
and
(bad)
clc
stc
and
mov
add
or
pop
repz
cmp
idiv
push
cmp
rcl
sub
cmc
pop
pop
adc
outs
loopne
mov
or
xchg
icebp
mov
pop
or
cmp
sub
rol
cmp
(bad)
outs
dec
and
(bad)
mov
inc
or
and
test
les
jbe
cmps
and
xchg
mov
or
push
lahf
xchg
add
ins
aad
push
test
(bad)
xchg
cwde
rcl
pop
add
pop
jb
enter
stos
shl
arpl
shl
add
pop
in
into
push
sub
xchg
dec
mov
das
mov
push
enter
or
fnstsw
xchg
in
mov
pop
inc
sti
das
inc
add
adc
stos
mov
add
nop
loop
sbb
add
popa
push
xchg
jae
sub
fdivr
call
sbb
inc
sbb
mov
(bad)
push
mov
push
sti
outs
inc
inc
mov
jmp
cwde
les
mov
enter
imul
ss
pusha
sbb
jmp
bnd
outs
cmp
sub
xchg
inc
xor
dec
pop
ret
mov
lock
imul
cmp
or
xchg
stos
shl
mov
je
sub
pop
and
and
(bad)
sbb
psrld
dec
lods
push
adc
ins
outs
or
xor
imul
sub
stos
mov
jg
sbb
jmp
bound
mov
loope
loopne
mov
popa
mov
cmp
jg
lea
mov
push
xor
adc
push
fwait
sbb
mov
pop
push
jecxz
pop
retf
outs
repnz
push
xor
mov
sbb
add
gs
xchg
int3
test
adc
push
jecxz
pop
mov
mov
mov
jg
adc
jg
sub
jmp
scas
inc
cmp
stos
mov
lea
dec
xor
sub
repnz
in
(bad)
mov
iret
fwait
test
inc
je
imul
call
adc
adc
mov
lahf
push
in
movs
imul
movs
dec
add
cmp
mov
cmp
(bad)
rcl
mov
je
idiv
sub
sti
push
push
cs
hlt
loope
out
cmp
(bad)
sbb
sahf
push
cdq
jno
jo
xor
mov
mov
push
push
(bad)
(bad)
pop
fs
xor
dec
adc
mov
loopne
test
imul
xchg
shr
xlat
repz
and
aad
scas
and
fs
push
xchg
sbb
add
(bad)
mov
fstp
push
aaa
cmp
les
inc
sub
pop
hlt
nop
call
cmc
scas
mov
inc
push
jl
retf
cmp
jg
les
rcr
cli
dec
(bad)
arpl
ret
cdq
jns
jg
arpl
xchg
test
pop
sub
inc
jle
test
jle
pop
sub
popa
rol
xchg
add
xchg
cmc
aaa
call
dec
add
sbb
lock
mov
lahf
or
rol
je
or
repz
adc
scas
jle
xchg
push
push
jmp
push
xor
mov
mov
imul
imul
and
or
addr16
nop
sbb
mov
cmps
lods
(bad)
jl
(bad)
mov
sub
and
popw
out
into
cmp
cmp
les
cs
leave
fisubr
cmp
and
std
imul
test
inc
stos
test
fcmovnbe
retf
repz
adc
fwait
jns
push
jae
clc
enter
cmp
cmps
das
jno
jbe
ds
call
icebp
scas
cmp
dec
adc
leave
stos
(bad)
cld
sbb
jmp
pop
cmc
sti
or
repnz
xchg
ins
std
jbe
cli
jb
fbstp
sub
adc
inc
daa
xlat
pop
push
daa
fist
data16
pop
out
icebp
ret
cli
push
xor
xchg
jno
mov
cmps
sahf
in
sub
sar
jle
pushf
lock
ss
mov
xchg
jns
mov
ror
mov
and
ja
pop
xor
or
ja
test
jle
int
and
pop
dec
stos
je
add
adc
mov
mov
mov
and
dec
int3
rcr
mov
out
push
xor
cmps
mov
jmp
ret
dec
cmc
mov
and
xchg
jbe
adc
mov
push
lods
xchg
pop
pop
add
sbb
leave
jo
popf
(bad)
sbb
pop
ja
mov
outs
repnz
inc
mov
lods
and
out
cmp
cmps
fsub
fwait
dec
mov
jns
(bad)
jmp
mov
adc
dec
repz
lahf
call
sbb
cmp
and
mov
rol
pusha
sbb
xor
jle
outs
push
aaa
and
(bad)
cwde
or
jmp
fcmovb
ret
pop
daa
sti
out
xchg
inc
inc
mov
and
in
sub
je
xchg
cld
out
jno
in
and
xchg
mov
pop
je
outs
loopne
xchg
jg
call
lahf
mov
or
add
add
fsubr
loop
das
xchg
enter
out
or
or
jns
dec
jno
jno
pop
dec
add
sbb
outs
cmps
iret
mov
loop
jl
cwde
nop
xchg
mov
cmp
test
dec
dec
inc
pop
cmp
mov
push
sbb
or
loop
std
fiadd
rcr
xchg
cdq
rcl
pop
call
mov
fiadd
inc
jne
jb
cwde
es
fcom
(bad)
jnp
add
pushw
int3
mov
adc
mov
jmp
cmc
pop
jmp
push
inc
call
sbb
sbb
sahf
es
cmp
std
xchg
sub
test
and
jbe
call
inc
xor
(bad)
cmp
retw
mov
ins
sub
pop
xor
sub
pop
movs
cmp
pop
jge
mul
popf
inc
push
jg
sbb
push
and
inc
dec
xchg
lahf
sahf
(bad)
push
mov
loope
fdiv
inc
lods
cmp
add
inc
push
xchg
repnz
mov
fidiv
dec
retf
adc
sub
inc
inc
test
call
adc
add
retf
fstp
pushf
pop
cmp
dec
arpl
xchg
push
(bad)
mov
pushf
push
in
mov
lea
out
aam
loopne
stos
jp
mov
xor
add
jmp
mov
cwde
clts
shl
addr16
sbb
mov
loop
sbb
mov
sub
jnp
fild
push
inc
adc
enter
test
fidiv
push
inc
xchg
cmp
repz
sub
mov
xor
sub
cmp
jle
in
or
cmp
sub
jmp
xor
sub
push
xor
mov
das
jae
push
mov
cmp
loop
sar
sbb
int
mov
and
stc
imul
aaa
call
mov
xchg
adc
add
mov
iret
xchg
imul
aam
imul
cmps
jmp
fistp
sbb
ins
mov
fbld
xlat
and
daa
sbb
aaa
mov
mov
ror
rcr
jmp
sub
mov
cmp
or
jb
ret
and
sti
add
and
push
push
addr16
aaa
pusha
div
sub
add
aam
imul
sar
fnstsw
inc
xchg
stos
mov
jg
jl
mov
sbb
adc
and
int
scas
sub
sbb
repz
push
jbe
and
pop
scas
aad
data16
pop
jl
lahf
repz
cmp
xor
cdq
icebp
icebp
rol
outs
repz
cmp
ret
pop
in
mov
lods
xchg
sbb
dec
xor
mov
jnp
aad
push
ins
jne
or
rcl
pop
aad
sbb
jmp
fwait
dec
xchg
xchg
push
xor
in
adc
mov
and
mov
or
(bad)
cwde
sbb
and
in
push
push
test
shl
xchg
add
mov
dec
in
inc
vsubps
aaa
cld
sub
sub
out
inc
dec
fld
mov
mov
dec
cmp
out
gs
jo
(bad)
out
or
int
sub
dec
mov
push
(bad)
adc
das
or
or
loope
fnsave
int3
lods
cmps
in
imul
add
popf
push
push
add
ucomiss
adc
sub
mov
in
dec
call
ror
push
dec
mov
xchg
enter
cmps
in
and
jl
adc
jmp
xchg
mov
inc
pop
inc
int3
das
mov
cmc
pop
inc
jmp
mov
les
inc
lahf
pop
or
sti
int
pop
mov
ficom
pop
pop
call
pop
push
mov
fist
loope
cld
loop
jns
and
xchg
pop
jne
mov
pop
jne
movs
in
push
mov
sar
or
cmp
jl
cli
test
mov
mov
arpl
outs
push
pop
sbb
adc
(bad)
(bad)
gs
push
pop
or
repnz
retf
ja
xchg
fisttp
pop
sahf
add
arpl
xchg
stos
sub
shr
(bad)
scas
retf
pop
daa
movs
mov
adc
inc
jmp
daa
stos
cmp
dec
popf
cmp
fild
cld
sbb
ret
xchg
and
leave
push
mov
bound
cmp
test
jle
loope
stos
cs
dec
repz
inc
imul
popa
sub
lock
rcl
mov
repz
mov
jns
(bad)
lahf
push
in
cdq
cld
mov
or
mov
mov
movs
jno
and
mov
push
mov
dec
xchg
addr16
call
ja
adc
xor
es
mov
mov
push
jle
xor
sahf
cmp
ins
arpl
push
sub
call
add
pop
das
xchg
jecxz
fsubp
shr
test
iret
test
test
or
in
imul
inc
jmp
in
pushf
int
stc
xchg
xchg
(bad)
xchg
cdq
or
xor
arpl
push
imul
and
fld
jp
pop
push
mov
xchg
ror
sahf
cmp
je
in
mov
ror
dec
cdq
in
pushaw
loopne
xlat
and
xor
xor
not
mov
sub
test
and
pop
scas
adc
imul
pop
add
adc
les
jmp
pop
jge
loope
cdq
and
ss
jae
nop
clc
in
std
lea
add
xor
fdiv
aaa
test
pop
lds
pushf
mov
add
dec
mov
xor
mov
push
imul
pop
jmp
int
in
inc
pop
in
mov
cmps
out
and
push
adc
push
rol
ror
xchg
cmps
sub
push
adc
mov
push
cwde
adc
mov
cmp
sbb
sub
leave
push
pusha
xor
das
cmp
push
pop
jmp
sbb
test
lahf
adc
aas
pop
xor
mov
jmp
jb
in
pop
xchg
ror
mov
lahf
mov
pop
xor
ja
mov
fwait
xor
ret
push
xor
inc
movs
ins
adc
sbb
jge
add
pop
pop
cwde
(bad)
mov
imul
int
inc
pop
sub
shr
mov
lea
ins
push
mov
test
xchg
ret
mov
test
fcom
adc
jb
and
int3
xchg
(bad)
jg
xor
pop
mov
retf
sbb
scas
sar
cdq
cs
xchg
in
jo
mov
push
xchg
retf
inc
and
fsubp
mov
push
test
xor
retf
xlat
nop
pop
mov
std
(bad)
scas
jmp
fcom
cmp
jns
cli
stos
fbstp
or
mov
fstp
xchg
ja
mov
enter
imul
jb
dec
gs
test
mov
in
xor
xor
and
int
xchg
add
add
iret
fcmovnu
movs
js
lods
fidiv
mov
push
push
es
push
hlt
cmp
repnz
fs
sub
std
mov
iret
pushf
loopne
lods
cmp
js
cmp
inc
sub
pushf
or
repnz
fnstcw
inc
popa
push
(bad)
fld
mov
cmp
push
mov
retf
mov
inc
sbb
xor
test
jnp
sbb
(bad)
mov
adc
pop
and
(bad)
pop
jg
xchg
push
mov
jnp
mov
ret
jl
mov
repnz
dec
(bad)
xor
(bad)
mov
push
mov
fbld
jmp
out
inc
push
mov
xchg
push
mul
mov
inc
cmp
mov
mov
pop
jnp
push
das
push
mov
push
leave
jecxz
jo
sar
jg
ret
inc
pop
lds
imul
mov
sbb
mov
stos
int3
add
mov
mov
add
into
jl
xor
hlt
icebp
into
std
push
add
arpl
pop
inc
ja
loopne
pop
xchg
std
scas
rcl
inc
popa
loope
add
dec
push
aaa
out
lock
repnz
sbb
repz
xor
cmovne
mov
test
and
leave
call
add
xor
pop
xchg
xchg
stos
and
push
sub
push
cmp
pop
or
mov
sbb
push
add
mov
shl
hlt
div
test
or
sbb
and
and
mov
xor
pop
mov
outs
sub
jle
inc
dec
test
nop
adc
(bad)
sbb
(bad)
test
ja
ins
pusha
adc
sbb
call
cmp
hlt
add
sti
lea
mov
movs
pop
mov
es
fbld
cs
inc
mov
not
jns
push
mov
push
pop
imul
sbb
outs
bswap
cld
gs
mov
loopne
stc
loope
xor
(bad)
cwde
fisubr
and
mov
cld
xchg
dec
or
aaa
push
stos
les
call
mov
out
cli
xchg
and
xlat
in
hlt
out
into
movs
pop
push
out
xchg
mov
cmp
jno
jmp
movq
test
sar
mov
iret
cs
nop
movs
(bad)
xchg
pop
dec
stos
or
inc
retf
call
rcr
shl
push
mov
pop
dec
add
(bad)
lahf
mov
inc
xor
xchg
sbb
jecxz
retf
scas
shr
in
pop
mov
xor
pop
adc
push
xchg
fnstsw
aas
dec
xor
push
cmp
or
inc
and
cmp
mov
sub
inc
jg
push
cmp
ja
int
inc
xchg
mov
cli
dec
in
addr16
ja
(bad)
retf
adc
(bad)
or
xor
into
and
ins
cmc
inc
pop
cmp
frstor
and
xchg
xchg
js
movs
sbb
scas
in
loope
mov
push
(bad)
les
cli
xchg
in
and
cdq
cmp
lahf
sbb
and
int
jp
repz
cmp
adc
push
lods
mov
mov
ficom
bound
dec
fadd
jp
stos
push
out
mov
mov
addr16
sub
jg
inc
popf
dec
in
mov
jnp
inc
sub
or
jl
cmps
sbb
xchg
aas
or
in
push
mov
jp
in
add
dec
sub
mov
fwait
ret
divps
aam
popa
sub
imul
sbb
adc
(bad)
pop
aas
mov
sbb
stos
inc
push
sub
mov
sbb
inc
sahf
int3
out
enter
mov
fdivrp
xchg
mov
punpckhdq
pop
or
shl
popf
jbe
xchg
pop
push
mov
ficom
icebp
cli
jbe
sahf
pop
inc
(bad)
cmp
add
cmp
ja
daa
iret
loopne
aaa
xchg
clc
sub
adc
jo
icebp
mov
push
xor
cmps
pop
mov
es
jo
popf
add
pop
mov
adc
mov
push
adc
ret
and
icebp
in
mov
idiv
std
rcr
xor
mov
cmc
ins
out
iret
mov
adc
jge
mov
bound
ffree
cmp
(bad)
cmc
repnz
push
outs
out
enter
cmp
lahf
adc
cmp
jno
adc
add
add
jns
mov
scas
daa
sahf
cli
sub
clc
lods
adc
push
cmp
add
inc
pop
dec
into
fdivr
jo
pop
aam
sbb
jbe
arpl
mov
mov
push
sets
in
test
push
hlt
ret
add
scas
push
jnp
pop
mov
iret
xor
cmp
add
mov
ins
ds
pop
bnd
mov
popf
or
rcr
pop
or
movs
iret
aam
sahf
ja
lds
xor
mov
ins
mov
xor
dec
je
test
jp
jecxz
inc
retf
xchg
lods
into
mov
mov
or
add
xchg
outs
ret
and
sbb
or
nop
mov
push
pop
dec
mov
jp
add
mov
sbb
dec
sbb
ins
scas
bound
dec
popa
and
and
fcomp
out
ds
inc
xchg
inc
push
or
imul
pop
loope
sbb
mov
xchg
out
xor
adc
inc
mov
or
addr16
or
cmps
lods
cld
and
mov
sub
dec
adc
inc
stc
ficom
add
pop
xor
bound
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
sbb
pop
and
dec
and
jne
addr16
sub
jns
js
pop
adc
pusha
add
and
push
aaa
pop
sub
ja
jbe
push
adc
push
add
outs
or
adc
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
aas
jbe
ja
push
sbb
popa
outs
or
push
cmp
push
and
jns
pop
sbb
jns
pusha
add
pop
adc
inc
and
pop
pop
jp
push
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
out
ret
call
ret
mov
out
(bad)
xchg
in
mov
xchg
fnstenv
in
stc
mov
mov
(bad)
shl
mov
xchg
cld
pushf
(bad)
xchg
sbb
inc
add
xor
inc
adc
dec
das
imul
sbb
imul
adc
dec
pop
xor
dec
adc
push
and
pop
pop
ds
push
or
jl
arpl
inc
cmp
and
or
jnp
xchg
cmc
push
ds
cmp
cmp
adc
imul
pop
cmp
imul
sub
out
cmps
int3
cdq
icebp
popf
mov
mov
sub
imul
pop
push
out
push
push
cmp
arpl
cdq
cdq
(bad)
pop
bnd
fs
dec
lds
add
dec
and
push
data16
adc
jecxz
sti
mov
jmp
(bad)
mov
and
outs
sub
xchg
repnz
stos
mov
ret
mov
pop
add
add
imul
jecxz
(bad)
mov
call
push
sub
daa
repnz
sbb
cmp
imul
inc
adc
rcl
int3
stos
inc
lock
and
jmp
ss
sub
in
mov
push
leave
stos
and
sub
daa
jg
inc
les
and
lahf
fidivr
scas
int
adc
mov
cdq
(bad)
mov
add
xchg
fdivr
mov
mov
xchg
mov
add
xor
neg
(bad)
lods
mov
(bad)
mov
mov
mov
jno
nop
pop
(bad)
mov
ja
pop
pop
add
push
lds
mov
mov
cmps
into
xchg
cmps
xchg
nop
inc
xchg
in
sbb
jge
stos
rol
jmp
inc
fld
push
push
cvtdq2ps
mov
cli
fwait
jmp
into
mov
push
dec
or
fmul
jmp
imul
inc
clc
xchg
lods
rol
mov
lods
in
xor
cmp
mov
mov
or
jnp
mov
mov
imul
mov
pop
xor
pusha
mov
mov
dec
sub
pop
sub
dec
push
pop
xor
mov
shl
jle
push
pop
inc
loopne
and
stos
leave
xchg
cmc
cwde
call
sub
push
cmp
and
fwait
(bad)
call
add
jnp
jl
je
mov
adc
mov
cmp
xlat
loope
iret
sub
into
test
fdivr
adc
jg
nop
div
stos
(bad)
fisubr
mov
mov
adc
jno
push
sbb
mov
xlat
fisubr
and
inc
loop
xchg
into
mov
neg
or
push
xor
jmp
ds
pop
or
push
xor
dec
adc
pop
test
mov
push
cmp
sub
ins
mov
mov
mov
mov
and
inc
adc
aas
and
pop
sbb
into
jo
pop
mov
sub
icebp
xchg
jmp
call
fisttp
and
jae
jbe
sbb
mov
inc
in
and
aas
dec
or
test
out
mov
xchg
lods
int
dec
cmp
pop
inc
xor
xchg
icebp
out
in
ror
adc
cmp
cs
ret
mov
pushf
jbe
(bad)
rol
sub
cmc
inc
or
and
add
adc
mov
fnstenv
scas
std
mov
sbb
mov
inc
enter
adc
jnp
ins
add
push
sbb
es
cmp
shl
inc
xor
aaa
add
aam
lock
addr16
push
psllw
jbe
push
ds
mov
test
imul
or
and
jne
push
add
adc
jae
sub
sbb
xchg
cmps
pop
adc
gs
ficom
pop
es
push
fcom
not
call
cmc
cmp
outs
aas
pop
adc
test
call
cli
lahf
out
stos
lods
mov
mov
out
mov
dec
add
inc
mov
shr
aad
mov
scas
int3
xchg
jp
pop
pop
fs
push
cmp
and
and
frstor
leave
xchg
ins
das
dec
adc
and
sbb
aas
push
mov
nop
(bad)
popf
mov
stc
lods
jmp
cwde
cld
push
loope
int
adc
shl
xor
mov
sti
mov
add
nop
mov
stc
cmp
js
pop
cmp
test
imul
loop
int3
mov
stc
mov
xchg
ret
sbb
inc
cmp
push
or
sub
add
(bad)
sar
cld
jns
mov
aas
dec
sbb
loop
repnz
jae
mov
and
call
outs
xor
sub
mov
mov
jmp
mov
push
(bad)
arpl
mov
test
jmp
movs
mul
mov
or
hlt
test
mov
jp
pop
add
sbb
inc
or
lods
jmp
push
mov
xchg
shl
pop
and
pop
or
inc
cmp
pop
cs
out
fmul
cmp
push
or
push
sar
icebp
or
sub
or
pop
adc
jle
xor
sub
jbe
xor
mov
jae
push
aaa
outs
xor
jns
pop
aam
cli
test
shl
mov
push
pop
sbb
inc
pop
inc
or
sub
repz
pop
dec
cmp
sub
inc
or
push
or
xor
push
sbb
sbb
pop
in
ret
imul
mov
loopne
mov
cli
or
sahf
icebp
mov
inc
cmp
loop
jmp
inc
fwait
pop
out
lahf
(bad)
sub
pop
pop
sbb
xor
sar
add
inc
or
lods
enter
cmps
leave
stos
leave
or
pushf
mov
or
push
cs
dec
retf
xchg
fidivr
push
inc
sbb
cmp
ja
mov
and
popa
pop
pop
add
dec
push
das
in
leave
mov
pushf
sub
push
gs
sbb
jo
and
pop
and
in
dec
xor
in
leave
xor
sahf
hlt
gs
repz
cmp
popa
ss
jmp
xor
xchg
cli
nop
rol
push
sub
test
push
cmp
sahf
hlt
or
leave
mov
sbb
jns
inc
push
jae
adc
dec
xor
inc
cs
cs
iret
test
inc
push
js
push
and
pop
and
js
ror
mov
sbb
mov
fwait
shl
dec
sbb
outs
es
cli
cwde
loopne
in
pop
xor
mov
mov
mov
xchg
aad
mov
outs
mov
leave
mov
mov
xlat
sub
xlat
mov
mov
int
mov
(bad)
pushf
pop
adc
cmps
enter
cmps
out
add
or
add
sbb
arpl
(bad)
movs
(bad)
test
daa
jb
aaa
push
add
and
nop
sti
mov
xchg
xchg
adc
pop
cs
(bad)
mov
into
fs
add
cmp
test
xchg
fistp
aam
add
fst
xchg
xchg
scas
jg
gs
pop
aaa
sub
shr
xchg
shl
stos
mov
popf
lahf
out
hlt
xchg
cli
mov
lods
pushf
test
pushf
les
hlt
xchg
xchg
outs
sub
dec
sub
xor
ins
ret
retf
scas
mov
lahf
int3
cmp
dec
sbb
imul
or
jle
jle
outs
add
cmp
mov
and
outs
or
imul
or
in
xor
mov
push
pop
pop
adc
jmp
add
imul
push
into
push
mov
xor
dec
pop
jmp
(bad)
pushf
xchg
popf
int
dec
cmp
jbe
cmps
jg
dec
add
xchg
sahf
fild
inc
or
and
mov
mov
jg
jle
cmp
jbe
jg
add
push
xor
push
dec
push
pop
and
xchg
iret
sbb
inc
fdivr
pusha
aaa
imul
pop
add
loopne
icebp
push
xor
push
pop
jl
popa
or
add
shr
out
pushf
lock
in
je
mov
mov
scas
mov
mov
scas
xlat
or
push
sbb
jb
jbe
sub
inc
aaa
jp
mov
popf
in
xor
mov
pushf
fild
sbb
dec
sub
je
jo
scas
rol
add
outs
prefetch
(bad)
xlat
call
xor
xor
mov
xchg
stc
in
jmp
das
dec
sbb
fdivr
pushw
inc
sbb
xchg
fiadd
xchg
lock
pop
xor
(bad)
cmp
inc
or
sti
cs
xor
outs
aaa
dec
xor
sub
pop
pop
sub
mov
in
gs
je
push
out
(bad)
mov
xlat
int
call
mov
push
mov
fist
out
retf
retf
mov
movs
(bad)
mov
cwde
inc
dec
rcr
repz
cmp
push
icebp
pusha
adc
cmp
(bad)
test
cmps
ror
sti
mov
jmp
dec
cmp
sub
and
mov
(bad)
neg
out
lahf
mov
mov
lods
iret
mov
sbb
dec
loop
jmp
sahf
mov
ds
sbb
mov
sahf
xlat
(bad)
outs
sub
out
aad
sbb
push
xor
ja
fsub
inc
in
scas
sar
inc
adc
xor
dec
cmp
icebp
fwait
cli
sub
mov
scas
ins
fdiv
mov
nop
add
fstp
jae
pop
add
loope
dec
add
out
fstp
push
ss
push
xchg
mov
ret
mov
(bad)
pop
mov
lods
ins
lods
xlat
mov
xor
xor
push
sbb
call
pop
add
pop
and
xchg
test
rol
fdivr
push
imul
cld
xchg
std
and
ficomp
(bad)
mov
cdq
jg
xor
ja
pop
out
neg
ss
mov
ret
cwde
ret
sub
imul
mov
mov
scas
lock
arpl
mov
or
int
int
lods
shl
dec
or
mov
popf
int3
xor
mov
ins
mov
ret
xchg
loopne
iret
xchg
inc
mov
mov
xor
pop
sub
xor
or
adc
adc
adc
jge
shl
mov
int3
and
ret
push
jbe
jle
jg
je
(bad)
test
cmps
pusha
in
out
mov
stos
dec
jb
jb
fs
and
retf
scas
mov
outs
aaa
rol
aas
sub
jp
cli
fbstp
jl
cmp
jns
and
push
aas
cld
pop
test
pop
adc
push
xor
jns
mov
fwait
out
retf
push
sbb
inc
cs
push
(bad)
or
push
xor
mov
cdq
mov
dec
sub
loope
std
adc
pop
ss
or
mul
pop
pop
push
jns
cdq
scas
in
add
pop
and
les
xor
dec
ds
mov
xchg
(bad)
mov
pop
sbb
arpl
sbb
mov
jecxz
stc
stos
fisttp
sbb
jno
dec
and
or
xor
dec
and
ins
cs
outs
cmp
adc
dec
or
movs
retf
mov
(bad)
jo
mov
or
fcom
fild
cmp
dec
add
adc
jg
loop
aas
dec
loop
xlat
add
addr16
add
sahf
std
call
push
cmp
ins
add
cmp
sub
das
outs
or
aam
cmp
out
or
mov
cmc
test
mov
cdq
fdivr
scas
ficom
mov
scas
std
(bad)
fcom
ja
and
jmp
(bad)
pusha
sub
jmp
cvtps2pd
in
push
ins
sub
mov
cmp
dec
es
in
retf
xchg
ficomp
scas
(bad)
std
lahf
fsubr
int
sbb
hlt
pop
xor
jno
bnd
pop
or
ins
push
jb
loop
adc
inc
and
stc
pcmpeqw
jbe
addr16
popf
into
pusha
in
je
mov
call
jmp
shl
xchg
jae
cmc
mov
loopne
stos
rcr
aam
mov
cli
push
sbb
(bad)
pop
pop
inc
xor
jbe
popa
adc
jmp
je
mov
into
and
inc
jmp
ret
lahf
inc
fsubr
mov
sahf
stc
or
xchg
out
dec
(bad)
in
(bad)
xchg
fist
mov
add
mov
out
sub
inc
in
add
mov
mov
iret
xchg
mov
pop
dec
adc
inc
stos
(bad)
aam
not
sub
or
pop
outs
or
dec
sub
loopne
adc
jbe
mov
xchg
mov
mov
in
imul
(bad)
jp
sar
sub
push
mov
sbb
inc
pop
pop
dec
push
bound
pop
sub
into
mov
jmp
push
adc
jl
cmp
and
in
loop
jl
in
sub
push
ins
aam
dec
daa
pop
mov
pusha
aaa
dec
call
fdivr
lea
mov
mov
movs
mov
add
(bad)
fist
pop
cld
xchg
push
cdq
rcr
push
jl
ins
xor
sbb
enter
inc
push
xor
sub
jmp
pop
pusha
pop
sub
or
mov
in
shr
movs
test
(bad)
jl
fwait
stos
fsub
mov
add
adc
push
test
mov
add
ins
mov
xchg
into
sub
mov
mov
int
ins
jmp
jmp
cwde
sar
lea
or
es
repz
(bad)
and
jo
cwde
rol
xor
and
sub
popf
jmp
out
jns
fstp
scas
inc
lds
inc
mov
or
adc
ins
add
jle
(bad)
adc
jnp
gs
mov
popf
int3
gs
xchg
mov
mov
pop
add
mov
and
sub
shl
out
pushf
xlat
test
pop
pop
push
jae
jp
lea
arpl
inc
xor
jbe
pop
xor
lods
inc
std
addr16
jne
lea
dec
mov
movs
clc
and
dec
push
imul
or
jg
shl
add
es
or
mov
jae
dec
scas
aam
mov
sti
mov
mov
cmps
rcr
inc
push
arpl
mov
out
mov
sbb
push
retf
scas
lock
shl
test
test
push
jbe
nop
retf
push
clc
dec
push
jae
call
rol
aaa
push
pop
jnp
lahf
xchg
data16
or
loop
push
ins
xor
push
adc
pop
sub
push
scas
pop
ss
add
sbb
add
pop
loopne
(bad)
pop
int3
mov
xchg
and
pop
push
sbb
test
mov
repz
adc
lock
or
scas
iret
xor
arpl
mov
xchg
clc
mov
add
in
inc
add
pop
call
sbb
cmp
push
dec
push
and
(bad)
adc
push
jb
mov
cwde
(bad)
ins
jecxz
xchg
sbb
xor
ret
stos
fwait
jb
push
xsaves
dec
ss
add
jnp
jl
push
js
mov
mov
imul
jnp
fwait
(bad)
jns
xor
lds
imul
and
dec
push
(bad)
and
push
mov
imul
xchg
in
mov
pop
pop
jg
dec
stos
xchg
(bad)
mov
ins
or
pop
aaa
inc
sub
xchg
test
and
mov
in
push
dec
mov
sbb
inc
sub
dec
rcr
ss
xchg
push
and
cmp
ins
and
or
push
or
mov
out
mov
cmp
ficomp
into
scas
fisub
iret
mov
addr16
mov
fcom
retf
xor
sbb
jnp
pop
mov
mov
shl
clc
xchg
ret
mov
cmp
jge
ret
mov
pop
add
pop
in
mov
or
(bad)
pop
inc
push
daa
jge
jl
imul
inc
xor
pop
or
icebp
xchg
(bad)
sbb
adc
(bad)
in
lahf
mov
fsub
jg
inc
ds
pop
jle
clc
mov
cmp
int3
jne
jae
push
mov
movs
cdq
fnstenv
push
shl
fs
lods
dec
cmp
sub
pop
cmp
aaa
sub
push
outs
daa
push
aas
and
jecxz
lds
movs
jmp
sub
pop
aas
inc
aaa
das
daa
stc
sub
sahf
call
or
jns
outs
sbb
add
shr
mov
mov
mov
retf
jbe
and
call
leave
mov
inc
idiv
mov
xchg
sar
inc
xor
jg
inc
nop
ins
add
jmp
ret
outs
fst
jle
inc
adc
push
in
sahf
scas
iret
mov
(bad)
aaa
and
cmp
sti
gs
cmp
inc
out
(bad)
not
mov
retf
stos
leave
mov
jb
and
cmp
xor
xchg
iret
popf
in
aaa
add
jne
call
cwde
into
mov
test
jnp
fdiv
rcl
jmp
pop
sbb
aas
fstp
push
pop
xor
inc
or
out
sub
push
(bad)
dec
xor
xor
adc
sbb
dec
add
pop
sbb
inc
and
mov
mov
mov
cmc
sub
jle
dec
stos
(bad)
call
inc
sub
nop
(bad)
jle
mov
call
nop
shl
mov
rcr
inc
sbb
sbb
js
fwait
lock
pop
xor
clc
xchg
aad
cmps
sbb
arpl
inc
out
mov
and
call
into
mov
mov
pushf
inc
sbb
jbe
or
scas
out
mov
pushf
lock
sbb
inc
movs
sar
shl
pop
push
in
push
inc
daa
outs
cmp
sbb
pop
out
aam
in
fidivr
add
sub
pop
mov
test
nop
les
or
push
aam
into
lea
and
jns
jnp
mov
test
sbb
push
and
dec
xor
sub
arpl
or
int
sar
lds
(bad)
xchg
icebp
push
stos
jmp
pop
ds
aad
mov
pop
cmc
inc
xor
inc
aas
push
mov
cmp
push
or
mov
cmp
jp
push
gs
dec
and
jae
mov
pushf
mov
jnp
jmp
mov
js
stos
iret
mov
lea
or
pushf
(bad)
mov
je
dec
test
scas
enter
and
movs
shl
in
in
out
repnz
fbld
in
sbb
sbb
jle
jns
js
pop
adc
pusha
rcl
out
add
cli
addr16
jbe
jle
pop
adc
bound
inc
aad
hlt
xchg
sub
dec
xor
gs
jp
imul
cmp
sbb
ds
cmp
and
jb
jae
hlt
mov
dec
pop
dec
cmp
bound
dec
or
arpl
jns
je
jp
or
jp
fwait
(bad)
mov
inc
adc
gs
or
test
outs
daa
dec
xor
outs
daa
je
jns
popa
add
pop
icebp
lahf
fidivr
nop
jmp
movs
out
imul
test
mov
mov
pushf
in
in
rol
out
mov
push
xor
push
cmp
push
int
jmp
fstp
mov
call
mov
add
or
outs
sub
dec
test
xlat
xchg
mov
mov
push
retf
pusha
cmp
les
push
outs
or
rcl
xchg
rol
fstp
mov
dec
or
mov
mov
mov
mov
(bad)
mov
sar
and
jnp
mov
or
inc
and
mov
out
retf
xchg
pop
fisubr
add
xchg
push
add
ret
shl
sbb
in
pop
fist
mov
xchg
fs
mov
or
and
ins
and
jno
mov
test
inc
lds
ret
rcl
not
jg
pop
jl
(bad)
xor
stos
data16
mov
inc
es
je
(bad)
push
sbb
mov
scas
in
sub
xchg
xchg
or
mov
pop
adc
mov
enter
push
outs
test
fidiv
test
pusha
cmps
loopne
cmp
xchg
xchg
std
push
ins
stos
fild
imul
retf
mov
call
nop
popa
add
mov
mov
sbb
in
push
mov
daa
jg
xchg
imul
dec
xor
sahf
jae
icebp
cmp
or
pop
cmp
fnstcw
pop
shl
jp
pop
jle
loope
je
sub
mov
dec
jmp
arpl
pop
ss
sub
scas
xlat
sahf
cwde
retf
mov
mov
jnp
rol
cli
mov
xor
mov
mov
push
and
push
adc
pop
shl
out
lahf
jle
imul
pop
movs
out
jns
mov
ds
retf
sub
mov
cmp
cmps
lds
popf
test
dec
cmps
hlt
dec
sbb
(bad)
mov
cwde
cld
ins
push
and
loop
cmps
(bad)
push
cmp
cmp
test
or
aam
push
not
push
dec
(bad)
jbe
push
outs
mov
cmp
adc
inc
rcr
xchg
cmc
es
scas
shl
jo
mov
cmc
mov
aam
jbe
cli
pop
cmp
cmp
shr
jbe
out
push
scas
les
pop
sbb
mov
int
and
stos
xchg
cmc
push
aaa
std
xchg
fdivr
ja
jbe
and
push
sbb
aam
cmp
mov
xchg
dec
and
scas
xchg
in
inc
das
add
mov
enter
jecxz
pop
lods
jmp
or
enter
mov
lods
imul
sub
xchg
mov
dec
xor
sbb
cmp
out
add
mov
repz
sbb
xchg
lahf
fadd
shl
and
pop
ficomp
mov
push
pop
icebp
xchg
fwait
stc
sub
fistp
call
aas
push
imul
xchg
pop
and
adc
test
push
pusha
shl
mov
mov
je
sbb
jmp
sbb
sub
arpl
imul
jno
jo
imul
adc
test
sub
cmps
cdq
hlt
add
fwait
addr16
inc
adc
test
pop
sti
mov
sar
in
aaa
dec
into
movs
xchg
icebp
es
daa
ds
mov
inc
cmp
and
nop
mov
inc
xor
dec
push
or
jno
in
aas
sbb
in
cmp
pop
test
int3
jno
leave
lods
bound
sbb
cld
pop
pop
je
dec
(bad)
xchg
jbe
adc
sub
(bad)
daa
dec
rcl
retf
cdq
pusha
xor
or
cld
ds
mov
push
fild
fs
ja
sbb
loop
sub
mov
sar
ins
add
dec
push
sbb
mov
pop
mov
dec
sbb
loope
dec
and
lods
dec
add
dec
(bad)
mov
cdq
retf
mov
pcmpeqw
icebp
mov
outs
or
jle
iret
pop
xor
stos
jge
or
adc
movhps
aad
jp
leave
push
sub
xchg
xchg
clc
mov
inc
cmp
xchg
inc
and
push
and
dec
iret
mov
cmp
jge
enter
adc
jb
retf
push
ds
mov
mov
mov
in
fs
cli
pop
xor
movs
jnp
sbb
sbb
cmps
imul
cmps
outs
adc
pop
ds
xchg
call
adc
test
mov
(bad)
cmp
fsub
les
sub
xchg
loop
add
movs
call
jae
shl
in
mov
cmps
in
imul
daa
inc
lods
in
outs
mov
dec
das
(bad)
xchg
mov
scas
xchg
inc
stos
clc
pop
sub
push
movs
fbld
popa
in
mov
mov
fdiv
xchg
sar
jbe
xchg
leave
cmp
popa
mov
mov
mov
nop
jo
std
mov
sbb
and
xor
cwde
gs
imul
and
movs
ins
das
repz
fdiv
xchg
adc
shl
out
xchg
popf
cld
or
push
movs
into
add
(bad)
jb
adc
pop
and
scas
xchg
cmc
push
ss
xchg
imul
mov
cmp
shl
js
mov
ja
push
xor
push
mov
lods
outs
add
mov
outs
or
cdq
cdq
retf
(bad)
call
(bad)
movs
inc
sub
xchg
sahf
out
push
cmp
xchg
mov
not
adc
and
and
and
test
fidiv
fimul
cmp
int
ins
or
xchg
xchg
sti
or
cmc
xor
loopne
lods
xchg
minps
mov
push
jl
jmp
push
aaa
std
nop
xchg
(bad)
pop
lock
jns
retf
adc
test
push
fs
mov
pop
fnstsw
mov
jmp
dec
sub
xchg
inc
or
pop
mov
push
xor
scas
fidivr
fcom
loop
inc
sbb
movs
arpl
out
mov
aas
js
(bad)
dec
das
shr
ficom
les
(bad)
cmp
les
sbb
mov
daa
dec
retf
in
pop
xchg
mul
jp
xchg
adc
inc
fcomp
mov
mov
stos
call
je
adc
fistp
adc
out
dec
retf
stos
ins
add
lods
imul
dec
in
sub
lahf
imul
inc
sub
mov
sbb
push
movs
out
arpl
xchg
mov
xor
fidivr
add
push
pop
sbb
gs
test
int3
add
sub
retf
push
xor
mov
out
cdq
(bad)
outs
mov
aas
push
mov
sbb
stos
jo
sar
aad
movs
xchg
stc
es
cmps
(bad)
sub
stos
fs
xchg
mov
xor
ficomp
shl
ret
and
jmp
in
mov
inc
or
cmps
je
push
outs
in
add
jns
lahf
xchg
in
sbb
xchg
pushf
fild
(bad)
(bad)
mov
adc
es
mov
mov
cmps
cmc
xor
fdivr
sahf
fist
out
(bad)
bound
repnz
mov
mov
adc
stos
pusha
daa
das
dec
fdivr
sti
mov
loopne
xchg
aam
bound
sti
sub
lods
or
adc
xor
mov
sub
jne
nop
inc
pop
les
inc
cmp
mov
call
daa
dec
ret
neg
out
mov
mov
ds
ret
mov
inc
(bad)
mov
in
aaa
repnz
mov
imul
ja
in
mov
sub
push
cmp
retf
cmp
es
xor
movs
fs
jge
out
or
mov
neg
in
mov
cmp
dec
les
test
xchg
sbb
xchg
push
push
cld
mov
fisttp
stos
rol
arpl
mov
das
les
fdivr
sbb
imul
pop
cmp
cmp
popf
gs
mov
cmps
popf
iret
pop
or
fwait
mov
hlt
xor
das
rcr
stos
iret
sub
cmp
mov
out
xor
mov
jle
fsub
popa
mov
lahf
jmp
iret
lods
inc
and
jbe
dec
jbe
(bad)
inc
scas
out
das
repnz
inc
and
push
mov
xor
dec
xor
test
mov
enter
scas
jle
int3
mov
pop
cld
and
shl
in
cmp
out
inc
daa
cli
xchg
xchg
fst
in
xchg
mov
cmp
add
sahf
jp
iret
lods
inc
sub
movs
jb
dec
fidiv
out
imul
lods
jbe
icebp
movs
sahf
std
sub
loopne
adc
lods
int
xor
mov
xchg
repnz
rol
dec
xor
mov
xchg
clc
xor
push
sbb
xchg
rcr
idiv
stos
leave
and
repnz
jp
repz
test
lods
jbe
retf
les
push
cmps
shl
mov
ins
sub
(bad)
fnstcw
mov
mov
sub
test
movs
mov
stc
add
fstp
xchg
(bad)
out
aaa
in
imul
sahf
xor
mov
cdq
loope
dec
fdiv
mov
dec
adc
jecxz
push
mov
or
repz
stos
leave
dec
es
(bad)
mov
pop
xor
rol
fiadd
arpl
dec
fbld
test
push
das
repnz
inc
and
mov
cwde
imul
pop
and
xor
cmp
sub
cmps
addr16
or
pop
cmp
cmps
jae
sbb
xor
movs
jl
or
mov
cmps
mov
pop
adc
imul
jnp
retf
das
inc
cmp
xchg
fnstsw
loop
scas
int3
outs
or
jo
mov
mov
push
pop
out
cmps
int
daa
or
in
ins
sbb
jne
scas
mov
push
sbb
mov
aaa
pop
hlt
mov
les
or
mov
loope
cmp
cwde
pusha
sub
jp
mul
dec
test
call
and
movs
inc
and
xor
shl
cwde
loopne
dec
mov
sti
dec
cmp
push
stos
shl
popa
les
fidivr
pusha
or
or
call
sub
fstp
sar
push
cmp
jp
neg
out
jg
pop
ins
mov
mov
sbb
retf
xor
xchg
rcr
in
movs
cwde
retf
les
enter
sbb
mov
dec
and
dec
cld
movs
mov
cs
jl
mov
outs
call
jae
xchg
call
jmp
pop
cld
test
mov
xor
jo
xor
push
xor
scas
ins
sub
xchg
add
les
sbb
shl
add
fisubr
ins
iret
stos
bound
adc
mov
and
push
scas
in
add
lds
pusha
fisttp
scas
out
bound
sbb
(bad)
jo
or
sub
mov
movs
retf
lock
mov
mov
stos
enter
in
aas
jp
int3
ins
or
aas
inc
shr
mov
sahf
in
aas
sub
sahf
test
imul
out
rcl
xor
lahf
mov
xor
mov
aaa
jg
mov
call
xchg
movs
fisubr
xor
pop
push
jo
test
int
int3
jp
loope
outs
mov
cmp
mov
div
imul
out
jno
mov
xchg
rcr
xchg
push
pop
addr16
(bad)
in
jo
cli
dec
add
mov
xor
mov
(bad)
movs
push
int3
lods
jns
push
inc
fbld
fadd
sti
mov
pop
or
rol
(bad)
jecxz
dec
lds
fcomp
cdq
retf
cs
int
dec
stos
loop
add
outs
mov
sub
xchg
push
std
and
hlt
push
and
xor
daa
repnz
gs
in
jno
pop
dec
cmps
hlt
cmp
mov
push
ror
or
stos
outs
sbb
mov
push
inc
movs
ror
add
in
push
xor
and
outs
test
xor
xor
mov
lods
clc
daa
inc
lods
iret
cmp
std
adc
sar
inc
(bad)
dec
adc
popf
imul
push
(bad)
shl
arpl
retf
cmps
inc
sub
mov
mov
scas
aad
(bad)
mov
jg
std
cmp
scas
xlat
es
lods
leave
cmp
mov
add
lods
inc
add
xchg
pusha
add
mov
fiadd
push
push
mov
cwde
xchg
les
pop
fidivr
imul
arpl
mov
cmc
sahf
inc
and
push
mov
test
movs
jecxz
ss
jb
loope
sahf
out
pop
xor
xchg
mov
pop
sbb
mov
movs
(bad)
mov
dec
(bad)
mov
xchg
inc
aas
sar
xchg
les
push
retf
ret
js
aaa
push
movs
mov
mov
mov
inc
or
cwde
xchg
ret
add
aam
arpl
je
loopne
js
push
ins
in
mov
sbb
xchg
out
sbb
nop
and
les
popa
adc
movs
dec
and
xor
test
mov
jne
and
fidiv
inc
sub
jl
sti
and
ds
ins
(bad)
mov
or
je
call
pop
xor
test
aas
or
out
sub
sbb
mov
dec
stc
add
push
xor
ins
(bad)
xlat
lods
jns
jmp
mov
add
and
pop
fcomp
mov
lahf
xchg
mul
push
(bad)
pop
and
popf
push
adc
lea
loopne
add
arpl
xchg
dec
sub
jp
shl
pop
jne
icebp
das
ins
cli
mov
in
add
mov
inc
shr
popa
sub
xchg
jo
hlt
xchg
arpl
xor
mov
adc
icebp
sub
mov
dec
and
add
jmp
jne
in
push
fstp
inc
add
jae
dec
repnz
sahf
(bad)
dec
xor
xchg
inc
and
dec
mov
and
add
cmp
sub
jne
push
mov
xchg
jmp
out
cmps
ins
sub
xchg
gs
inc
aad
gs
iret
xchg
fidivr
test
adc
repz
dec
mov
dec
and
ins
scas
fidiv
add
dec
sbb
mov
fist
in
jl
pop
add
push
mov
pushf
imul
and
pop
mov
add
jp
out
mov
and
fstp
in
rcl
adc
add
mov
pop
lods
aad
inc
int3
mov
ds
and
mov
scas
pusha
daa
push
jb
mov
adc
jnp
lock
fdivr
push
imul
push
aas
dec
mov
pop
(bad)
mov
or
mov
rcr
sbb
imul
pop
out
outs
sub
test
mov
jecxz
or
mov
hlt
mov
loopne
outs
or
mov
je
(bad)
pop
sbb
push
pop
loope
xchg
neg
sbb
mov
mov
es
movs
outs
add
xchg
ja
or
fnstcw
jne
ror
xchg
(bad)
popa
fnsave
jno
or
hlt
cmp
mov
cli
cdq
(bad)
out
push
sbb
inc
fsub
into
push
das
repnz
dec
sub
sbb
idiv
inc
mov
hlt
cmp
xlat
cmps
mov
dec
daa
clc
mov
mov
mov
xchg
push
sub
cwde
or
jnp
cmp
mov
sbb
test
imul
jo
in
mov
xchg
pusha
and
mov
mul
cmps
out
dec
or
popa
mov
mov
xor
movs
mov
push
or
mov
test
adc
in
dec
sub
adc
mov
mov
and
xor
(bad)
aas
pop
es
movs
in
mov
mov
rcr
fdivr
cld
mov
jne
sti
push
xor
pop
cmp
sbb
sbb
mov
fnstcw
fisub
cs
and
dec
adc
call
(bad)
mov
inc
sub
cdq
mov
retf
push
pop
aaa
jne
sahf
ja
rcl
repnz
jp
std
cmp
ret
mov
(bad)
scas
xchg
cld
inc
and
(bad)
xchg
xor
cmp
sbb
movs
inc
sub
cli
xchg
sahf
hlt
add
cdq
popf
aam
or
mov
or
jne
xchg
imul
mov
fcom
sbb
popf
dec
sbb
xchg
addr16
test
mov
sbb
je
fld
ins
sub
push
sbb
mov
clc
call
clc
cdq
or
ds
sar
outs
cmp
push
fs
mov
pop
jl
inc
fbstp
fstp
fimul
ficom
xchg
test
mov
lods
jl
into
sub
clc
inc
push
or
mov
aam
imul
mov
in
dec
int
xchg
xlat
add
fstp
in
mov
mov
or
pop
fnsave
jl
sti
sahf
inc
sbb
xchg
bound
out
mov
xchg
icebp
pop
aas
jmp
and
cs
push
jmp
mul
or
test
fnstcw
fbld
aam
jnp
call
mov
or
ins
fdivr
(bad)
jmp
dec
fbstp
push
or
stc
lods
test
adc
loopne
push
sar
retf
js
adc
mov
dec
aaa
icebp
mov
jmp
sub
adc
sar
cmp
pop
or
shr
dec
sub
popf
jb
loope
jne
sub
aam
dec
mov
and
retf
pop
cmp
mov
mov
ds
(bad)
(bad)
(bad)
cmc
push
jge
enter
test
bound
pop
pop
and
xor
mov
mov
pop
out
jae
add
ins
int
jge
push
dec
sub
mov
cdq
inc
adc
std
and
neg
in
xchg
lock
mov
out
sub
ja
inc
les
fnstcw
frstor
fwait
shr
ds
jle
enter
sub
cdq
gs
loope
nop
hlt
arpl
hlt
call
fidiv
and
mov
inc
daa
push
sbb
imul
jecxz
or
push
in
test
nop
enter
dec
enter
mov
pop
adc
lods
mov
inc
sub
ficomp
or
js
scas
mov
xor
xlat
jle
adc
cwde
xchg
jmp
jns
adc
ret
aas
jae
iret
and
scas
mov
push
cmp
pushf
addr16
into
mov
inc
add
test
out
mov
mov
mov
rcr
mov
pop
add
lods
lahf
jmp
data16
and
stos
bound
loope
cdq
cli
add
sub
inc
add
xor
sbb
in
pusha
cmps
fbld
inc
and
dec
add
lock
ins
or
mov
sub
fiadd
lock
je
sbb
and
jae
(bad)
and
xchg
mov
das
data16
mov
pop
retf
adc
xchg
sti
cmp
jmp
mov
pop
das
call
dec
mov
pop
gs
pushf
jns
sbb
dec
dec
mov
jp
rcl
pop
sbb
arpl
repz
pop
fstp
arpl
pop
pop
scas
aad
pop
loop
push
loope
jo
mov
ins
sbb
call
mov
daa
outs
fstp
or
sti
es
cmps
int3
cmp
fnstsw
push
mov
jp
(bad)
pop
xor
mov
nop
cli
cmp
shl
outs
aam
fwait
into
sub
fnstcw
inc
cmp
xchg
mov
xchg
ud0
ja
push
fstp
pop
push
mov
mov
les
fistp
(bad)
lds
sar
shr
mov
inc
adc
cmp
inc
add
popf
fsubr
mov
cdq
hlt
xor
pushf
bound
or
rcr
jmp
ins
lods
jmp
pop
xor
mov
scas
retf
cmp
lea
pop
pop
cmp
pop
pop
loope
mov
and
ret
std
dec
es
mov
in
pop
psubsw
ss
mov
and
mov
test
out
xor
xor
in
and
pop
test
pop
mov
lahf
fwait
jp
and
adc
and
mov
movs
je
sub
sbb
cmp
sub
sub
cmps
hlt
aaa
pop
(bad)
aas
or
dec
fimul
(bad)
add
jb
fwait
inc
lds
pop
mov
movs
pusha
fadd
(bad)
mov
outs
sbb
xchg
pushf
xchg
xchg
push
test
out
les
adc
add
pop
int
test
inc
fsub
pop
jp
mul
cmc
or
xor
je
mov
pop
iret
pop
mov
xchg
lahf
arpl
ret
ds
and
pop
mov
cdq
popa
frstor
stc
paddsw
test
jnp
mov
jbe
imul
sbb
cmp
inc
repnz
xchg
popf
(bad)
fist
sub
ds
jle
inc
iret
dec
leave
sub
out
shr
(bad)
mov
mov
xchg
cmps
xchg
popa
(bad)
dec
mov
jbe
cmp
and
adc
out
enter
or
xchg
adc
inc
mov
xlat
dec
leave
jg
and
sbb
ficom
mov
xchg
inc
scas
data16
ficomp
sub
jns
jnp
(bad)
mov
sub
pop
adc
test
push
mov
mov
mov
xchg
data16
mov
push
fld
pop
test
(bad)
sub
cmp
pop
in
xor
repnz
lods
lahf
imul
xlat
daa
or
icebp
aas
jmp
mov
test
mov
ja
(bad)
mov
inc
int3
push
mov
fld
mov
pop
leave
sub
and
push
sbb
cs
inc
int
test
loope
jge
inc
int3
dec
mov
mov
cwde
jg
cmps
mov
mov
fdivr
daa
(bad)
leave
and
sbb
das
rol
adc
aad
shl
pop
mov
jo
inc
add
out
dec
mov
pop
aad
sbb
cli
dec
mov
lods
jno
jl
aaa
std
pop
(bad)
imul
adc
add
data16
xchg
cdq
arpl
xor
cmp
push
xor
push
mov
pop
fldcw
cmc
sub
dec
ror
loopne
sbb
cmp
push
push
arpl
xchg
arpl
add
and
add
repz
pop
mov
lock
loop
stos
lods
sahf
dec
xor
scas
inc
and
movs
dec
retf
push
cli
xor
push
cmp
xor
(bad)
xor
ret
xor
aas
sbb
aas
push
retf
cs
mov
mov
jl
jns
push
pop
into
dec
sti
rcr
dec
retf
jnp
cli
add
dec
enter
out
dec
rcr
add
cmp
mov
enter
mov
rol
dec
stos
jg
jl
pop
cmps
xchg
pushf
mov
push
jmp
push
mov
mov
sahf
aad
lods
xchg
mov
outs
mov
out
dec
leave
and
add
jecxz
xlat
cmp
cmp
or
sub
or
gs
pop
mov
jo
jnp
mov
fidiv
cmp
ss
movs
mov
stos
push
and
pop
jecxz
lods
cwde
ins
lds
div
push
fisub
(bad)
pop
mov
imul
add
xor
or
sub
pop
push
in
mov
jl
mov
add
shl
push
lds
repnz
adc
mov
popa
mov
inc
fadd
lods
pusha
mov
lea
loopne
cmc
add
enter
dec
mov
push
mov
scas
xchg
jbe
lahf
cwde
bound
mov
inc
xor
int3
pop
mov
imul
mov
lahf
mov
aad
sbb
and
rol
scas
out
mov
push
rol
xor
pushf
xchg
imul
dec
aad
scas
ins
sbb
dec
adc
mov
adc
mov
xor
dec
shl
les
inc
fcom
mov
dec
mov
data16
fld
les
js
and
pop
mov
ret
pop
fimul
das
pop
retf
cmc
sub
pop
cmp
(bad)
xor
push
(bad)
pop
mov
test
les
add
inc
shl
cmps
jno
or
push
out
test
std
pop
stc
and
add
inc
fcomp
mov
jae
xchg
sahf
sahf
outs
test
ins
iret
add
mov
lea
test
test
mov
jle
jo
jno
push
icebp
cmp
push
jmp
inc
mov
stos
les
and
repnz
or
jae
lea
adc
pop
rcl
imul
pop
rcr
retf
aas
sbb
sar
fbstp
clc
add
push
movs
mov
cmp
adc
cmp
sbb
pop
cmp
pop
test
pop
rol
loopne
cmps
bound
(bad)
adc
or
nop
imul
mov
repz
add
lods
jl
je
test
xchg
xchg
jnp
or
loopne
mov
mov
imul
push
les
sbb
cmp
cmp
je
outs
and
repz
cli
fwait
outs
cmps
dec
mov
retf
pop
test
inc
mov
aam
xchg
adc
jmp
ja
xchg
mov
out
inc
fnstcw
cli
and
jmp
out
push
test
retf
dec
jmp
pop
test
jle
xchg
push
int
(bad)
jno
jnp
xchg
cdq
cdq
mov
sbb
push
mov
dec
mov
xchg
cdq
push
fsubr
sbb
call
sub
inc
add
adc
add
fadd
std
push
loopne
dec
adc
dec
test
rcl
mov
test
mov
cdq
push
cwde
cwde
dec
shl
sbb
and
inc
scas
jno
dec
fiadd
adc
cmp
nop
test
mov
call
dec
stos
inc
scas
mov
arpl
push
ss
pop
rcr
inc
test
or
ins
scas
mov
mov
xchg
cdq
gs
mul
add
push
int
loopne
cmp
fild
push
stos
ins
mov
xor
cmp
es
push
fisttp
sar
pop
mov
mov
mov
aad
mov
push
dec
(bad)
pop
or
mov
push
aaa
out
stos
popf
test
xchg
test
ret
push
mov
xchg
shr
sub
cmp
cmp
add
push
or
and
test
mov
jns
cmp
and
dec
aam
mov
shr
sbb
push
mov
fwait
inc
mov
scas
int
adc
clc
pop
scas
ins
(bad)
xlat
das
push
add
pop
xchg
lahf
jle
sub
mov
mov
xchg
imul
mov
test
and
add
or
loope
cmps
ins
fimul
sub
(bad)
ds
scas
sahf
sahf
inc
test
push
int
test
call
fadd
inc
aam
mov
inc
test
fidivr
stc
pop
mov
push
test
push
mov
data16
xlat
ss
adc
neg
inc
and
or
gs
mov
outs
movs
inc
sbb
pushf
mov
fs
jg
outs
mov
mov
in
or
add
shr
add
and
(bad)
push
sub
push
(bad)
daa
sti
and
or
loope
pop
loopne
adc
loop
xchg
imul
movs
fnstsw
xchg
mov
pop
shl
cli
and
stc
push
nop
pusha
aad
pop
sbb
stc
adc
sbb
or
add
cmp
xor
inc
xchg
xor
daa
call
retf
push
loop
lds
cld
pop
mov
cli
dec
xchg
inc
lds
lock
xchg
inc
(bad)
push
test
mov
xchg
arpl
(bad)
sub
unpckhps
cs
repz
sbb
call
jl
dec
into
xor
xor
cld
scas
jo
jb
je
arpl
add
sbb
fistp
in
adc
pop
fnsave
push
div
and
out
inc
in
repnz
xchg
pushf
fwait
push
bound
adc
neg
jecxz
aad
mov
xlat
pop
mov
mov
call
je
pushf
jae
cs
cmp
pop
stos
inc
mov
or
repnz
cmps
dec
retf
push
mov
pop
lods
inc
stos
pushf
outs
mov
push
fadd
pop
mov
sbb
iret
or
pop
cmps
dec
xlat
nop
dec
int
stc
inc
aad
jmp
retf
nop
mov
push
mov
ds
ss
loope
cmps
js
jo
xor
movs
jb
push
jbe
arpl
cmp
inc
mov
mov
inc
stc
cmp
dec
mov
stos
call
call
(bad)
gs
idiv
ret
and
in
push
aad
jbe
addr16
fidiv
push
div
outs
sti
or
loope
push
test
and
xchg
dec
and
cs
adc
add
xor
push
int3
and
add
pop
pop
xchg
imul
out
dec
fisttp
push
push
cmps
xchg
imul
cmp
and
pop
in
xor
xor
shl
lods
push
and
xor
xor
pop
out
pop
fild
int3
xor
in
cwde
jo
jle
jns
or
sbb
jae
bound
call
popf
xchg
data16
ins
xchg
cmp
es
cdq
dec
mov
jp
sub
or
mov
rcl
and
mov
or
sub
int3
or
idiv
std
sub
or
pop
je
jp
cs
push
scas
fwait
lea
xlat
ss
mov
mov
fild
add
push
jle
inc
aam
leave
xor
pop
test
dec
mov
sahf
test
aas
call
int3
push
shr
out
mov
mov
cs
and
add
push
mov
jb
lds
xchg
pop
lock
add
lds
loopne
rcr
pushf
inc
and
adc
adc
sub
mov
jmp
jne
in
jecxz
test
mov
mov
adc
add
retf
clc
add
jne
imul
fistp
xor
and
jae
jb
jne
add
xor
mov
push
mov
hlt
and
pop
lds
ss
enter
pop
cmp
xor
inc
retf
mov
fbld
imul
pop
jb
inc
int
rol
fisttp
sub
push
das
or
iret
push
fistp
xchg
jns
outs
hlt
lahf
gs
xor
std
push
scas
push
movs
xchg
push
xor
pop
push
(bad)
cmp
cmp
xor
out
pop
mov
inc
cmp
dec
mov
dec
shl
dec
sar
icebp
cmp
push
or
movs
outs
lods
cdq
inc
fimul
loop
out
out
xor
and
xor
pop
mov
jns
imul
fdivr
out
pop
mov
xor
xor
pop
mov
push
xchg
js
push
cmps
cdq
mov
push
mov
pop
aam
in
scas
xchg
imul
retf
pop
fisubr
out
sbb
or
lock
push
loope
stos
ja
sti
dec
int3
sub
pop
test
dec
movs
ja
sti
and
ds
jmp
hlt
xor
movs
mov
fbstp
icebp
inc
mov
jae
loop
sbb
push
repnz
outs
mov
cwde
xchg
jae
sbb
or
dec
xchg
ins
test
pusha
(bad)
shl
jge
xchg
sbb
mov
psubsw
jecxz
stos
xchg
sahf
xchg
sti
or
push
add
out
push
loope
imul
adc
pop
fisttp
push
stos
inc
sar
jb
gs
outs
xchg
js
inc
mov
or
xor
loopne
pop
into
and
pop
sbb
or
add
pop
cmps
inc
std
paddb
inc
test
dec
mov
adc
pop
mov
xchg
popf
arpl
lds
jmp
jle
adc
call
cmps
inc
sub
pop
xchg
jnp
adc
out
mov
aas
or
out
cmp
ja
mov
ror
lock
mov
or
add
add
adc
xchg
imul
mov
(bad)
fsubr
hlt
rol
dec
scas
inc
cmp
sbb
and
pop
cmps
push
mov
ss
and
xor
ins
(bad)
loopne
ret
jno
inc
enter
test
xor
mov
popf
xchg
xchg
inc
mov
push
movs
push
xchg
inc
cmps
fistp
fwait
imul
in
sub
sub
xchg
outs
lods
jnp
inc
mov
popa
test
push
add
shl
fs
(bad)
and
das
into
sub
and
add
xor
dec
aam
or
loop
sbb
xor
fistp
dec
mov
add
hlt
add
add
js
cmp
sbb
push
rcl
ss
pop
stos
je
jp
lea
out
mov
inc
mov
jno
lock
xlat
xor
sub
pop
push
pop
push
mov
fsub
imul
push
fidivr
fistp
dec
(bad)
pop
test
push
stos
jae
pop
mov
das
sbb
mov
sar
popa
xlat
dec
mov
or
inc
xor
out
cmp
hlt
pop
mov
movs
jno
inc
in
cmp
dec
mov
inc
retf
call
add
iret
xor
or
cmc
mov
jbe
jnp
and
imul
test
xchg
call
pusha
shr
iret
aas
jae
pop
lods
xchg
inc
sar
int3
pop
retf
jg
jno
jmp
stos
pushf
data16
cmovbe
cmp
inc
mov
imul
out
sub
or
cmp
jae
inc
sbb
adc
sbb
dec
fcom
push
lock
jecxz
rcr
cwde
dec
es
sub
push
stos
popf
jnp
mov
mov
xchg
dec
cld
push
sub
sbb
xor
xor
sub
ss
mov
popa
fbstp
dec
lock
xchg
test
inc
ficomp
out
mov
and
ret
mov
movs
imul
push
mov
dec
mov
sbb
cmps
jne
dec
ret
inc
lods
mov
mov
mov
dec
cmps
xchg
fadd
xor
out
out
shl
idiv
loopne
cli
sub
or
adc
dec
shl
not
mov
xlat
sub
movs
inc
rcr
xchg
xchg
dec
sar
add
push
sbb
(bad)
ins
mov
and
sbb
loope
cmp
cmp
les
unpcklps
or
ja
inc
retf
cmp
adc
inc
stos
mov
mov
mov
das
pop
cmp
sub
xor
dec
fsub
(bad)
lahf
arpl
addr16
sbb
pop
jmp
sub
push
scas
xchg
xchg
xchg
mov
xor
and
add
sbb
dec
cmps
ja
dec
int
sbb
push
dec
mov
inc
and
call
dec
out
cmp
cmp
sbb
in
in
and
out
cs
(bad)
cs
adc
dec
rcr
(bad)
pop
xchg
jb
jns
scas
sahf
push
mov
out
mov
or
add
in
lds
pop
mov
adc
push
aad
adc
push
pop
mov
ret
push
jecxz
jmp
repz
cmp
jb
sbb
aas
paddsb
sub
out
cmps
jnp
cdq
inc
mov
(bad)
cmp
int3
adc
loop
sub
add
clc
daa
inc
(bad)
dec
aad
int
movs
dec
mov
lods
lea
ins
mov
shr
sbb
stos
fwait
xchg
data16
mov
shr
ret
push
mov
arpl
sub
sahf
scas
pushf
jl
outs
mov
jbe
cdq
outs
mov
das
jecxz
out
jne
mov
data16
adc
push
iret
xchg
nop
xchg
ins
sbb
aas
icebp
les
mul
out
lahf
jge
(bad)
stos
jecxz
push
in
sub
cmp
pop
mov
lds
jmp
push
jae
dec
sti
sub
pop
adc
(bad)
cmp
cmp
mul
pop
enter
adc
add
add
or
les
rol
inc
mov
sar
mov
cdq
jne
jge
add
or
popf
jb
paddd
(bad)
jg
or
test
(bad)
pop
stos
jnp
or
in
out
push
mov
hlt
aaa
(bad)
fsubr
iret
jg
xchg
cmc
pop
mov
sbb
ins
mov
rcr
xchg
ror
(bad)
imul
sbb
bound
pushf
inc
cmp
je
sub
daa
or
daa
add
xor
mov
cmp
das
sbb
and
push
imul
jg
jae
jmp
lods
cwde
retf
das
cld
dec
cmps
cdq
add
outs
lods
jno
push
sar
(bad)
ds
pop
int3
das
adc
pop
mov
arpl
mov
imul
and
add
jle
sub
mov
addr16
mov
push
(bad)
and
jp
lahf
jp
js
and
or
sub
pop
fst
inc
fidiv
jp
idiv
out
pop
mov
int3
scas
inc
aam
out
and
js
dec
lods
test
dec
mov
and
inc
xlat
es
mov
xchg
dec
fcomp
inc
mov
sbb
add
mov
push
(bad)
loopne
mov
sahf
xchg
popa
mov
mov
jp
xchg
test
(bad)
popa
lods
fwait
inc
shl
sbb
dec
cmp
loop
repnz
xchg
jmp
push
mov
xchg
push
leave
add
push
lods
xchg
call
sahf
out
test
mov
sbb
cmc
add
xor
cli
cmp
push
test
stos
outs
mov
enter
aas
in
dec
aam
pop
(bad)
xchg
test
xchg
lahf
mov
call
rol
dec
fsubr
adc
sub
aas
cli
pop
add
xchg
addr16
call
ins
scas
outs
mov
xchg
imul
xor
pop
scas
jbe
xchg
jle
jbe
inc
pop
push
cmc
and
mov
mov
je
jp
inc
mov
ss
cmp
add
pop
mov
popa
fdiv
repnz
or
das
cli
sub
pop
adc
push
mov
xchg
adc
pop
loope
mov
daa
sbb
xor
aaa
or
xchg
pusha
(bad)
mov
sub
xor
fs
jge
jae
test
mov
fimul
xor
push
loope
pop
repnz
push
movs
inc
mov
shl
int3
push
call
mov
dec
mov
push
popa
fbld
xor
pop
sbb
ds
push
mov
xor
pop
mov
mov
sahf
mov
fisub
cli
pop
movs
fisttp
adc
dec
cmp
inc
mov
push
fld
call
into
pop
mov
jo
cs
rol
and
sbb
pop
stc
pop
loopne
fst
and
sub
cs
sub
pop
push
or
or
pop
(bad)
pop
lds
jbe
push
sub
sub
or
cmp
add
ss
in
pop
sub
sub
dec
mov
push
(bad)
das
call
push
mov
pop
xlat
pop
mov
fsubr
or
jmp
pop
lods
mov
push
mov
push
loop
les
push
push
ret
push
fmul
sbb
fisttp
jno
outs
sub
clc
pmulhw
std
or
imul
in
in
or
pop
mov
rcl
scas
xchg
xchg
inc
int
rcr
ret
and
stos
jbe
mov
xchg
gs
(bad)
cmp
test
das
lds
xor
sbb
and
into
dec
int3
push
mov
xor
add
pop
lods
dec
cmp
shl
jmp
aam
leave
sub
lock
pop
shl
push
ret
mov
movs
jns
dec
shr
or
add
(bad)
cmp
shl
pop
cmp
in
add
xchg
push
add
ins
mov
push
xchg
mov
outs
adc
jle
or
fcom
hlt
loopne
jl
imul
lock
mov
loopne
jnp
or
xor
call
cmps
lock
std
loope
pop
and
or
inc
pop
lods
and
aam
xchg
mov
and
pop
add
test
dec
xchg
and
push
mov
clc
js
jb
cmp
mov
call
inc
test
scas
xchg
fstp
jbe
mov
inc
adc
xchg
aaa
jmp
jmp
or
mov
test
loop
xor
push
or
ds
push
jns
adc
std
pop
popf
xchg
cmp
not
jl
daa
jnp
cmp
jmp
push
dec
dec
shl
dec
jmp
jo
gs
cli
clc
jb
dec
dec
push
xchg
mov
loopne
loop
or
add
sub
arpl
mov
pop
rol
pop
mov
shr
int
dec
jbe
icebp
push
rcr
pop
pop
sub
dec
jb
add
rcl
stos
cmp
xor
mov
mov
std
push
(bad)
hlt
repnz
aad
xor
mov
fwait
pop
sub
push
mov
retf
mov
pop
sub
xor
outs
out
xor
neg
cmp
xchg
ins
cmp
cmp
mov
jl
sbb
jmp
shr
ss
scas
lods
inc
sub
xchg
aaa
movs
or
sub
mov
sar
push
mov
mov
pop
push
sbb
pop
and
cwde
mov
(bad)
sbb
xlat
and
mul
push
sar
cmp
iret
sub
add
addr16
inc
jb
mov
rcr
das
aam
push
sub
jbe
xor
sbb
cmps
inc
mov
xchg
hlt
inc
aas
jno
popf
out
fld
test
rcl
push
xchg
popa
test
(bad)
jnp
es
das
and
mov
dec
jno
bound
pop
jl
add
aad
ror
lods
jnp
int3
inc
movzx
sti
jge
jge
aad
icebp
pop
push
xchg
(bad)
lock
xchg
mov
sbb
lea
dec
dec
test
repz
mov
test
aad
test
lods
out
popa
out
or
push
or
loope
loopne
fisub
lahf
or
outs
mov
sbb
cmp
or
aaa
xor
outs
mov
lea
bound
sub
std
push
xor
hlt
lock
arpl
sbb
ror
add
or
push
xchg
int
xor
scas
std
mov
fisttp
inc
mov
imul
xor
add
push
jmp
dec
mov
xor
push
xchg
dec
pop
adc
xor
dec
add
inc
mov
adc
or
iret
jecxz
push
sti
sti
repz
lahf
clc
mov
push
fwait
cli
retf
retw
(bad)
mov
dec
bound
(bad)
fldenv
xor
push
xchg
push
and
add
mov
mov
cmp
dec
fcomp
std
scas
cmps
shl
sbb
bound
and
nop
xor
ss
cmc
popa
adc
sbb
push
add
push
data16
mov
push
and
int
push
push
xchg
cmps
nop
in
mov
sub
mov
mov
and
pop
in
cmp
(bad)
stc
jb
mov
jbe
retf
sbb
imul
pushf
mov
je
cdq
cmps
shr
cli
outs
sub
and
sbb
int3
sar
div
adc
sub
jne
pop
mov
and
jge
adc
and
jle
aad
shr
icebp
imul
test
jl
jge
stc
xor
(bad)
lmsw
and
pop
jge
out
pop
loop
or
hlt
pushf
or
jns
repnz
aas
bound
cld
cld
xlat
xchg
lods
lahf
or
pop
push
gs
mov
sub
cmp
rol
mov
mov
pop
sub
xchg
arpl
push
les
jle
aam
mov
daa
sub
ds
dec
sbb
cli
pop
cs
mov
pop
ror
shl
mov
lods
pusha
in
xlat
fistp
in
dec
mov
in
cdq
es
pop
in
adc
lahf
not
cdq
call
(bad)
dec
(bad)
sbb
lods
popf
retf
int
retf
addr16
pop
fnsave
add
cmp
jns
sub
in
loope
out
jecxz
mov
push
ds
cmp
and
repz
or
and
xchg
std
or
popf
aaa
push
das
add
sahf
into
sar
dec
mov
jb
jle
ss
push
(bad)
std
sub
sbb
mov
adc
add
mov
inc
sub
add
lods
inc
(bad)
in
ret
jno
sub
jmp
dec
clc
or
xchg
xor
mov
sbb
out
xchg
mov
xchg
mov
and
loop
and
stos
push
fbld
cmp
data16
xchg
sub
lahf
pusha
mov
into
and
or
jb
or
mov
adc
mov
cwde
out
je
pop
xchg
adc
and
pop
sbb
inc
mov
ja
imul
pusha
(bad)
jle
jp
xchg
out
pop
pop
inc
ficom
xlat
mov
test
xor
or
fsincos
and
aam
js
ret
mov
or
push
test
pop
lock
xchg
hlt
xor
dec
mov
inc
not
pop
in
daa
xor
bnd
fmul
inc
popf
loop
arpl
call
fnstenv
test
mov
arpl
sbb
nop
push
lock
stc
push
jns
leave
int
mov
adc
daa
scas
out
mov
mov
mov
xlat
arpl
mov
out
pop
adc
test
enter
mov
mov
jle
push
icebp
adc
pop
dec
not
inc
into
push
push
cdq
inc
fisttp
call
sbb
in
nop
(bad)
sbb
jne
xchg
inc
out
daa
call
gs
dec
cmp
adc
pop
jmp
and
pusha
and
mov
sub
fisub
jge
mov
pop
xor
ss
dec
into
call
pop
pop
mov
jmp
es
and
push
mov
pop
xchg
bound
push
xlat
test
call
into
or
retf
add
je
repnz
inc
sub
outs
popa
out
(bad)
mov
mov
lds
jmp
leave
sub
mov
or
gs
loopne
jge
pushf
mov
pop
cmovb
cli
and
lock
stc
ret
mov
les
in
gs
clc
ins
or
push
mov
push
arpl
cmp
lods
sub
dec
xor
pop
push
ficom
pusha
mov
pushf
popf
sbb
int
(bad)
mov
sahf
mov
loope
add
(bad)
lahf
xchg
inc
mov
and
xchg
xchg
inc
sbb
popa
in
(bad)
jmp
xchg
mov
mov
push
cdq
jle
adc
int3
(bad)
stc
call
leave
adc
leave
cmp
mov
in
mov
xor
cli
xor
shr
pushf
ja
arpl
add
les
fld
sub
or
adc
xor
mov
jne
imul
sahf
ror
add
inc
push
mov
mov
ds
and
shr
mov
in
push
ins
dec
add
mov
sahf
dec
ins
pop
pop
pop
push
jae
xor
add
fisubr
mov
add
fisub
inc
test
leave
repnz
push
xchg
xor
adc
mov
pop
adc
repnz
test
jb
lahf
push
pop
xchg
sub
dec
inc
add
dec
inc
mov
int3
sahf
ss
dec
and
dec
daa
addr16
pop
pop
(bad)
pop
mov
jp
cdq
ins
dec
ret
stc
imul
jge
pop
jb
inc
mov
(bad)
iret
stos
cli
and
cmp
sub
test
nop
inc
jp
jae
loop
iret
retf
push
xchg
add
fbld
enter
adc
jle
jp
int
jmp
aaa
(bad)
ins
lock
out
cdq
mov
push
out
inc
dec
xor
add
push
push
dec
cdq
or
mov
or
mov
ins
mov
dec
outs
scas
xor
jns
neg
push
clc
mov
jne
xchg
sub
les
call
sub
sahf
dec
add
sub
ins
in
cmp
cmp
js
mov
out
bound
push
inc
inc
xchg
cld
int
repnz
or
inc
aad
inc
call
int3
es
mov
mov
push
inc
(bad)
bound
aaa
push
lds
push
mul
fild
mov
add
dec
loopne
dec
stos
mov
scas
icebp
fstp
mov
jl
cmp
cli
pop
mov
and
icebp
dec
jnp
stc
jae
fwait
or
jmp
jnp
xor
lods
fst
jle
inc
dec
test
jo
push
scas
and
loope
iret
scas
jecxz
fst
sbb
jecxz
mov
mov
dec
add
je
in
inc
mov
call
hlt
dec
mov
cmp
inc
jb
jb
add
mov
jmp
jmp
std
mov
test
std
in
cmp
or
inc
inc
cmp
or
xor
ret
jns
mov
out
mov
sar
icebp
(bad)
(bad)
sbb
jle
or
sub
mov
int
mov
cli
push
sbb
fdivr
std
icebp
sbb
cdq
aad
xchg
dec
inc
inc
mov
outs
sbb
xor
mov
mov
aad
pushf
inc
dec
xchg
test
inc
sar
and
xlat
js
test
dec
imul
pop
adc
sub
lock
pushf
ins
xchg
sub
push
mov
adc
iret
test
pushf
inc
cdq
cdq
sub
inc
pop
adc
scas
inc
pop
fild
push
ins
daa
hlt
xchg
test
add
or
jl
pusha
nop
repnz
xchg
or
add
cs
je
(bad)
enter
stc
mov
pop
pop
arpl
pop
fucomp
mov
jnp
lock
add
adc
dec
int
xchg
fistp
push
std
inc
dec
xchg
stos
cmp
mov
rol
arpl
je
xchg
push
int3
and
mov
or
gs
addr16
cmps
pop
loop
adc
xchg
inc
xchg
xchg
add
fst
push
adc
xchg
pop
inc
jbe
sbb
icebp
mov
fiadd
(bad)
xchg
xlat
ret
mov
sub
sbb
enter
mov
xchg
adc
pop
jne
inc
shr
test
sub
in
stos
push
scas
lods
into
mov
enter
mov
retf
loope
rcl
jle
icebp
jl
xchg
enter
pusha
cli
jp
in
inc
bound
outs
fcomp
sub
xchg
mov
xor
dec
imul
adc
out
fld
mov
cmp
shl
jge
adc
xor
in
lea
jp
aas
lds
push
test
jecxz
xlat
mov
dec
int
int3
push
mov
inc
icebp
cdq
xchg
inc
or
scas
je
fs
in
std
push
clc
pushf
jl
in
(bad)
cmp
stc
fbld
sbb
and
movs
popf
mov
and
push
xchg
imul
jne
dec
scas
mov
call
rcl
into
push
push
and
sub
mov
out
jg
pop
es
mov
enter
scas
lods
je
adc
push
sbb
push
push
xor
push
mov
mov
out
mov
sbb
inc
xor
frstor
ins
pop
or
lods
xchg
jp
push
xor
mov
xor
mov
sahf
dec
das
mov
or
mov
data16
(bad)
(bad)
nop
lock
mov
pusha
int
adc
mov
clc
ror
cmp
cmc
mov
pop
inc
mov
fs
aad
cmps
cmp
les
dec
add
in
xor
add
pop
adc
stc
dec
mov
lds
loop
loope
jbe
pop
mov
sub
xchg
es
adc
movs
pop
shl
jo
mov
cmp
jns
test
mov
aas
in
inc
neg
dec
mov
cmps
and
lahf
sub
cmp
retf
jb
imul
lahf
push
mov
shl
push
(bad)
and
adc
adc
push
mov
bound
fisttp
cmp
lods
push
adc
pushf
scas
retf
xchg
gs
pop
xchg
dec
mov
mov
inc
mov
xchg
xchg
jmp
imul
sti
jle
les
inc
das
sti
mov
inc
data16
mov
xchg
sub
aaa
cld
mov
pushf
test
imul
push
or
or
xor
les
loope
xchg
loop
(bad)
arpl
mov
cmp
mov
lds
fs
or
jg
mov
stos
out
jmp
dec
ror
enter
and
lahf
sbb
or
xor
cmp
xor
ins
ret
dec
shr
arpl
lahf
cwde
lds
imul
push
push
mov
mov
mov
(bad)
or
jno
push
mov
cwde
div
repz
out
jae
shl
imul
push
inc
xor
jmp
pop
xor
mov
pop
sub
test
sbb
fstp
in
pop
push
pop
lahf
imul
or
mov
and
jne
mov
sbb
mov
jl
in
xchg
mov
xchg
ficomp
pop
adc
lahf
dec
cmp
les
adc
mov
shl
jne
mov
in
or
fwait
add
test
test
idiv
add
and
int
enter
loope
push
stc
nop
sbb
rcr
in
cmp
je
mov
push
push
lahf
inc
xchg
aaa
pop
sbb
push
pusha
mov
jmp
sbb
adc
mov
in
mov
and
add
popa
jbe
bswap
and
test
jnp
inc
in
ficom
aam
fdiv
in
ins
pmaddwd
adc
pop
std
stos
sbb
je
ss
jl
aas
shl
std
add
aam
sbb
dec
out
xchg
add
iret
pop
mov
mov
and
push
aam
aaa
shr
fsubr
jg
mov
call
mov
xchg
daa
pop
clc
sbb
loope
aas
retf
scas
arpl
je
inc
cmps
ret
test
push
xor
retf
mov
dec
jno
and
jmp
xor
ret
push
out
adc
dec
xor
cmps
xchg
iret
cmp
jle
ficom
add
lahf
sar
popa
xor
test
or
rcl
mov
(bad)
or
inc
iret
or
mov
pop
in
or
and
ds
lahf
mov
push
mov
scas
inc
xlat
xchg
pop
mov
dec
(bad)
fist
popf
in
or
test
sub
and
mov
lods
ret
xor
out
jge
retf
dec
mov
push
pop
pop
popa
or
mov
mov
psraw
dec
xor
and
cmp
push
sub
stos
xor
inc
jmp
mov
pop
repnz
inc
loop
je
mov
fdiv
or
dec
jp
ja
pushf
sbb
jbe
push
sbb
jae
xor
lahf
mov
jb
dec
mov
popa
outs
cmp
xor
scas
or
addr16
push
(bad)
dec
jg
adc
(bad)
dec
and
jo
(bad)
jecxz
aam
push
jg
cmp
dec
loopne
pop
in
pop
ins
outs
sub
ror
push
in
clc
xchg
adc
mov
sub
mov
sti
mov
cld
icebp
add
mov
(bad)
imul
push
mov
dec
xchg
je
and
(bad)
jle
jne
sbb
push
test
je
or
jae
mov
shl
addr16
mov
in
out
loopne
inc
mov
add
and
sub
stos
dec
aas
psraw
mov
enter
test
sub
pop
fcmovb
ins
scas
mov
xor
call
nop
sub
fcomip
mov
cmp
call
xchg
clc
clc
out
inc
sbb
and
pop
sub
mov
and
out
inc
sub
lods
add
aam
jne
or
and
int3
ficom
and
and
mov
pop
jmp
das
into
test
rcr
mov
xchg
add
and
(bad)
jle
fstp
mov
mov
scas
ret
iret
gs
repz
jmp
jecxz
and
stos
jns
sti
adc
fmulp
xchg
cmp
cmp
cli
mov
adc
dec
sbb
imul
into
sbb
in
sub
hlt
test
fcmovb
fisttp
mov
hlt
lahf
mov
mov
fsubr
adc
arpl
cli
outs
inc
cmps
push
mov
mov
xchg
jg
mov
push
jl
dec
cmp
sar
inc
cld
inc
mov
and
mov
pop
add
cmp
cmp
cmps
cmp
and
or
pop
nop
jb
cdq
mov
icebp
push
mov
mov
mov
cmp
add
lods
fisubr
aaa
sub
xchg
arpl
push
lods
or
cmp
xchg
into
adc
xchg
inc
xchg
cmp
fsub
int
js
sbb
(bad)
and
loope
xor
sub
push
jo
add
aam
pop
mov
mov
mov
ins
je
ja
stos
pop
jnp
mov
jno
cmp
imul
xor
fadd
call
pop
fmul
lea
rcr
scas
call
xor
or
lock
leave
cmp
je
and
cmps
pop
cmp
push
call
mov
cmp
push
inc
sub
test
mov
loopne
jo
jle
mov
and
mov
nop
(bad)
js
and
mov
jle
aam
(bad)
adc
mov
mov
ins
sbb
push
ins
rcr
das
jo
out
cmp
hlt
pop
push
mov
mov
repnz
mov
or
xor
in
arpl
xchg
leave
sub
xor
les
shl
lock
adc
ds
cmp
scas
pop
push
add
ret
or
pop
sahf
je
aas
in
pop
sub
pop
mov
pop
ins
pop
cli
jg
mov
fst
(bad)
jbe
dec
jmp
jnp
data16
inc
pop
outs
jno
add
pop
adc
icebp
test
pop
sub
ds
push
and
mov
mov
fnsave
inc
fsubr
aad
xor
pop
rol
mov
inc
push
mov
xor
movs
cmp
adc
pop
push
fist
cmc
vpsubw
inc
rol
mov
loop
scas
in
cdq
lea
loopne
inc
push
sbb
loop
(bad)
dec
popa
jo
jg
jb
xchg
inc
ds
sbb
(bad)
and
cmps
(bad)
mov
hlt
leave
ret
push
cmps
push
jne
popf
test
pop
arpl
sub
xor
pop
imul
and
cmp
test
cmps
fistp
adc
fidiv
je
dec
aaa
cdq
pop
mov
iret
rol
(bad)
scas
js
or
dec
mov
loop
ds
test
inc
mov
cmc
jno
xor
pop
shr
xor
dec
sar
mov
sub
sbb
sti
xor
sub
hlt
outs
popa
stc
(bad)
mov
cmp
out
xchg
adc
push
inc
call
push
aam
xchg
sub
je
and
(bad)
neg
dec
sub
cmp
imul
jle
push
in
repz
(bad)
(bad)
je
out
ins
mov
xchg
pusha
fcmovnb
mov
adc
cmp
call
pop
das
add
enter
mov
pop
xor
pop
pop
aas
dec
sti
lods
std
scas
mov
sub
div
movq
hlt
add
mov
outs
daa
dec
icebp
cwde
xchg
(bad)
punpckhbw
or
adc
dec
cs
xor
(bad)
jmp
(bad)
mov
les
cwde
lock
(bad)
push
mov
icebp
lods
neg
sub
rol
jg
gs
mov
repnz
inc
or
inc
and
dec
adc
ins
or
xor
movs
mul
scas
fiadd
jl
adc
sbb
fisub
push
xchg
fisttp
push
jae
and
shl
jne
std
add
mov
mov
sub
out
pushf
or
pop
mov
sub
and
ror
arpl
mov
out
jbe
xor
and
adc
or
imul
nop
nop
cli
sahf
stc
add
pop
jge
jne
pop
call
jp
imul
and
inc
sub
and
out
cwde
cmc
sahf
mov
pop
not
aam
icebp
jno
push
xor
xor
mov
std
aas
inc
sbb
pop
cs
push
cs
mov
mov
and
repnz
in
cdq
enter
inc
adc
pop
pop
pop
xchg
cmovge
pop
jecxz
outs
cdq
in
movs
(bad)
and
pop
dec
stos
add
imul
jns
xchg
(bad)
lahf
jno
push
cmp
lods
out
std
mov
arpl
call
enter
sub
or
in
popf
fnstcw
push
out
iret
data16
xor
dec
adc
xor
sub
xchg
ret
mov
jle
ins
pop
pop
out
mov
retf
mov
pop
mov
ins
in
cmps
leave
xchg
cdq
stc
cmp
dec
(bad)
pushf
rcl
scas
imul
cmp
push
inc
xor
xor
jbe
and
jae
jno
loope
xchg
fadd
lods
rol
retf
scas
inc
out
sar
inc
xor
pop
sub
jnp
push
sbb
test
push
cdq
hlt
mov
cdq
lods
fsub
mov
lods
fst
push
call
scas
mov
ror
adc
scas
les
cmps
lds
cmps
enter
dec
add
pop
jmp
xchg
push
mov
xor
dec
xor
xor
push
cmp
pop
out
popa
adc
ins
cmp
ror
loop
add
(bad)
mov
in
icebp
arpl
push
(bad)
ja
out
mov
and
and
lock
lock
mov
inc
add
push
jb
imul
sbb
push
rcl
mov
or
fidivr
push
and
pop
or
cmps
repz
adc
cmps
mov
xchg
int3
pushf
sub
jne
inc
add
push
dec
sbb
retf
mov
(bad)
(bad)
add
push
(bad)
stos
mov
rcr
pop
sbb
mov
mov
or
test
stos
les
sub
fst
xlat
or
and
ret
scas
ficomp
fbld
clc
movs
cli
mov
ja
gs
xor
movs
les
and
pop
lds
pop
dec
cmp
out
data16
dec
adc
cmp
arpl
ins
jmp
cli
xchg
lea
lds
cs
out
mov
fwait
ret
mov
cdq
bound
dec
movd
jl
or
inc
les
jns
dec
xor
inc
mov
and
jmp
or
lods
into
adc
pushw
ja
rcr
cmp
sub
mul
scas
cli
es
and
push
mov
push
adc
je
data16
sub
pop
cmp
loopne
into
mov
movs
scas
fwait
cli
fwait
(bad)
pop
loopne
stos
inc
fist
fmul
pop
dec
jecxz
inc
jle
dec
rol
loopne
sub
mov
pop
cmc
jb
fs
imul
sbb
push
das
ins
or
push
push
dec
loopne
jmp
(bad)
pushf
adc
js
cmc
retf
and
out
fwait
cs
sub
arpl
dec
fldenv
test
mov
dec
jg
add
pop
adc
test
sbb
push
outs
add
pop
jle
pop
and
(bad)
(bad)
dec
or
mov
push
sub
not
retf
iret
and
push
sub
je
test
add
sub
cdq
repz
fcomp
xor
sub
add
mov
fidiv
or
jb
pop
pop
shr
mul
jmp
xchg
mov
(bad)
mov
pop
pop
adc
mov
cdq
ficomp
cmp
and
pop
xor
sub
ss
pop
daa
int3
mov
(bad)
dec
xor
mov
rol
inc
adc
test
jle
xor
sub
jl
sti
mov
std
jnp
es
and
aad
ja
adc
inc
mov
mov
sub
sub
out
cmp
push
push
xor
jb
jae
push
push
pop
pop
sub
push
adc
push
push
jae
retf
jno
aas
adc
ins
scas
arpl
jmp
jg
pop
or
icebp
scas
int
or
mov
popf
cld
fld
call
jge
push
sbb
pop
aas
pop
xor
pusha
sbb
mov
bound
lods
int
mov
lods
rcr
push
aas
cmp
push
adc
xchg
mov
mov
shr
jns
jg
jnp
inc
cs
fs
mov
sahf
out
jecxz
iret
mov
pop
inc
inc
and
je
mov
scas
jnp
addr16
jne
and
push
mov
lahf
fidivr
pop
sbb
jp
adc
outs
fiadd
push
xor
(bad)
mov
imul
retf
aam
lock
push
pop
in
stc
movs
clc
inc
adc
push
pop
add
retf
fistp
pop
xor
add
inc
pop
loope
ja
sbb
into
cmp
pushw
ins
or
movs
shr
mov
addr16
ins
cmp
jbe
xchg
push
pop
sbb
and
jae
scas
sar
push
add
push
ins
das
dec
adc
dec
or
mov
(bad)
in
(bad)
push
sbb
int3
jl
data16
cli
mov
call
adc
or
and
sub
xchg
iret
ss
xor
pop
aas
inc
icebp
mov
lods
mov
sub
outs
adc
aas
inc
mov
push
sub
or
call
jg
loope
xor
out
or
pop
fsub
jne
push
jecxz
add
js
inc
pop
and
mov
std
mov
sub
dec
jns
fwait
rcl
les
dec
pop
and
scas
shr
jo
dec
dec
sbb
inc
xor
jle
bound
sti
stos
rcl
fmul
ins
adc
inc
pop
sub
ja
cmps
int
fidivr
sbb
push
sbb
jnp
(bad)
mov
shr
out
shl
xchg
mov
pop
in
aam
cmps
jle
jg
pop
lock
lods
xlat
pusha
setno
mov
ja
pop
ds
and
xchg
jmp
lds
js
dec
adc
outs
or
xor
jb
add
jo
clc
xchg
sti
sahf
fs
xlat
xchg
lods
ret
es
inc
ror
imul
and
dec
sub
xchg
aad
mov
xchg
call
ins
sub
leave
arpl
mov
add
js
daa
rcl
inc
cs
sbb
inc
adc
clc
dec
xor
jbe
out
cs
cmp
arpl
add
pop
(bad)
bound
dec
mov
sbb
and
push
imul
sub
jle
pusha
xor
dec
or
adc
dec
adc
sub
push
adc
adc
cmps
mov
lods
shl
unpckhps
and
int3
punpckldq
ret
jge
popw
sub
cmp
add
cdq
pusha
push
daa
xor
jno
sahf
dec
inc
das
pop
adc
cmps
aam
sar
addr16
push
xor
les
push
xor
lahf
sti
mov
push
shr
(bad)
mov
lods
ror
and
sub
test
out
sub
push
inc
sti
mov
aad
lock
in
popa
add
sub
cmc
(bad)
jmp
xchg
mov
mov
iret
mov
xchg
int3
cmp
push
adc
jae
jbe
out
retf
test
jno
ins
or
and
dec
das
jb
test
mov
fstp
cmc
xchg
clc
pusha
sub
and
mov
inc
cmc
mov
add
cmps
ins
push
sub
add
pop
aad
loop
std
jbe
mov
sbb
push
sub
adc
je
pop
adc
mov
leave
mov
mov
rol
adc
sbb
push
xchg
repz
dec
pop
pop
jge
mov
movs
loopne
fnstcw
push
repz
sahf
mov
and
ret
(bad)
cli
xchg
movs
pop
pop
pop
fs
sbb
enter
jno
shl
daa
daa
dec
mov
movs
inc
dec
ss
das
push
loopne
or
fiadd
loope
dec
(bad)
mov
fsub
mov
fwait
rol
(bad)
mov
cwde
mov
xchg
cmc
fwait
rcl
sahf
arpl
fiadd
jl
pop
cmp
push
mov
in
cmp
mul
pusha
cmp
dec
loop
retf
nop
mov
shl
ins
aad
pop
inc
fstp
pop
mov
pushf
into
add
pop
cmp
or
inc
out
lods
rol
mov
xchg
rcl
mov
cwde
stos
mov
jns
inc
adc
pop
fild
or
cmp
call
out
xchg
loope
mov
in
scas
std
sub
retf
mov
addr16
xchg
not
mov
inc
cs
cli
data16
dec
or
jo
jl
jnp
pop
adc
and
jae
pop
es
jg
mov
xor
sub
fnstenv
push
adc
jno
jb
jl
les
pop
in
jmp
xlat
pushf
ins
and
fiadd
push
mov
mov
sbb
adc
je
dec
icebp
mov
dec
sub
xor
sbb
jp
push
lods
dec
nop
(bad)
mov
int
sub
push
xor
fadd
retf
(bad)
sub
jb
cbw
cmc
mov
push
inc
push
pop
xor
push
inc
cmp
cmp
arpl
dec
add
lea
mov
aas
out
push
pop
push
push
mov
lods
clc
and
cmp
pop
push
push
or
xchg
imul
cs
mov
cmc
cmps
fs
xchg
mov
sar
ins
push
adc
cmps
int
mov
pop
cli
cmp
nop
in
cmp
outs
in
bound
imul
es
movs
and
pop
stc
mov
mov
xchg
adc
je
jb
add
nop
mov
div
daa
dec
or
sar
push
push
jns
sbb
and
fistp
out
cmp
cmc
or
std
pop
xor
pop
and
jns
ins
xchg
jnp
les
iret
and
or
arpl
sub
pop
adc
sbb
adc
rol
adc
fwait
mov
out
jnp
push
pop
rcl
int
icebp
mov
push
into
lods
jmp
mov
sub
push
push
add
pop
sbb
pop
inc
sbb
aaa
jle
pop
push
test
cmp
push
jle
and
inc
sub
retf
xor
inc
repnz
mov
xor
jbe
sahf
repz
aaa
and
or
push
mov
xchg
cmc
push
sub
dec
fiadd
movs
cld
aas
add
pop
in
jle
les
test
xor
pop
sbb
mov
pop
adc
xor
xchg
pop
inc
and
in
mov
aad
(bad)
jo
(bad)
addr16
jne
fcom
lods
repz
scas
repnz
ins
mov
(bad)
adc
push
(bad)
into
mov
xchg
xchg
mov
movs
mov
rol
or
and
mov
fist
sbb
js
dec
das
adc
mov
cdq
stc
cmp
imul
div
int3
pop
sbb
into
sar
cmps
jne
fdiv
aad
dec
fimul
pop
test
movs
mov
jno
fild
jle
sub
cmp
jl
fwait
ret
fst
xchg
popa
mov
xor
popf
mov
fist
adc
mov
mov
cli
xchg
lahf
fs
mov
(bad)
aas
test
jns
xchg
jle
pop
sub
jle
jg
jecxz
jmp
adc
push
mov
or
gs
push
jg
sbb
pop
adc
js
pop
or
pop
or
dec
cmp
adc
push
adc
jecxz
mov
(bad)
and
call
ins
in
lds
(bad)
xchg
mov
data16
inc
xor
cdq
sti
test
sub
push
adc
cmp
adc
xor
adc
ficom
xor
jno
addr16
icebp
jb
push
sbb
pop
ds
loopne
imul
cmps
loopne
popa
and
xchg
dec
jle
pop
loopne
or
add
popa
and
mov
xchg
icebp
inc
add
je
out
cmc
sbb
push
fmul
and
and
cdq
out
sub
outs
out
mov
pushf
icebp
pop
or
jg
dec
add
push
ds
xor
jae
cwde
icebp
call
or
ret
fild
cmp
sub
aaa
das
sbb
and
pop
xor
mov
dec
ss
adc
pusha
xor
sub
pushf
icebp
adc
sub
push
repnz
lds
push
stos
loop
add
in
sbb
clc
cmp
xlat
pusha
mov
pop
cmp
scas
mov
pop
outs
pop
outs
mov
mov
mov
sbb
ret
out
stos
into
xchg
shl
hlt
mov
or
jns
adc
push
repz
and
mov
xchg
out
xchg
dec
mul
push
aas
repz
dec
mov
mov
cdq
cmps
cli
mov
inc
jmp
rcr
sahf
fld
dec
or
sti
push
call
push
and
sub
aad
aam
jle
jae
pop
mov
sahf
mov
mov
mov
xchg
xchg
mov
mov
or
push
jb
sub
ret
gs
push
imul
and
inc
test
popa
xor
sub
jp
je
and
push
push
dec
retf
test
clc
mov
outs
stos
xchg
jo
je
xchg
mov
mov
mov
test
mov
inc
adc
pop
sbb
dec
sub
ins
ret
xchg
add
adc
nop
repz
aad
jmp
adc
pop
sbb
int3
nop
(bad)
dec
or
imul
push
jge
and
pop
les
sbb
push
add
mov
xor
xor
lds
das
cmp
in
mov
stc
xchg
sar
scas
into
pop
sub
jno
iret
scas
jmp
lock
int
(bad)
xchg
std
push
in
jo
addr16
jnp
loopne
jecxz
mov
mov
xchg
add
push
jnp
inc
xor
sahf
or
mov
cmp
sub
shr
dec
xor
pop
loopne
cmp
pop
aas
leave
imul
pop
xorps
cmp
outs
loop
lock
cld
inc
jmp
or
push
retf
idiv
aas
js
lods
scas
aam
les
xor
adc
loop
clc
stos
fimul
or
ja
ins
add
pusha
xor
sub
popa
or
xchg
cmps
cmc
stos
test
pushf
jmp
retf
test
lods
rcl
retf
xchg
inc
sub
movs
dec
pop
or
inc
aas
sub
mov
mov
or
lods
fild
inc
adc
inc
or
xor
aas
cwde
aam
fstp
(bad)
test
xor
sti
sub
or
adc
push
xor
xchg
dec
inc
and
inc
rcr
and
cmc
inc
xor
cmp
sub
xor
pop
es
add
dec
fidiv
push
call
rol
xchg
(bad)
push
shr
ret
mov
pop
or
dec
add
aad
(bad)
mov
imul
add
ins
adc
adc
pop
in
mov
clc
sar
mov
out
add
jae
(bad)
data16
lds
mov
(bad)
sub
test
inc
sub
fst
fstp
ficomp
repnz
leave
cli
and
push
daa
gs
inc
add
inc
cmp
mov
or
outs
mov
sub
loope
test
movs
mov
inc
pop
cmp
sbb
imul
ins
in
iret
mov
push
adc
dec
sub
(bad)
scas
sti
cwde
fmul
pop
adc
adc
or
ins
or
or
and
(bad)
mov
nop
cmps
dec
outs
and
fs
push
or
inc
adc
nop
cli
mov
fdivr
stos
sar
adc
xor
mov
mov
mov
test
cmp
add
and
das
inc
in
fstp
xlat
mov
mov
test
sbb
pop
es
sub
jmp
test
arpl
pop
sub
xor
lods
aam
aad
add
or
push
pop
dec
sbb
dec
push
cmp
pop
test
mov
bound
jno
daa
dec
lods
inc
pop
imul
dec
or
cmp
je
mov
int
(bad)
lods
popf
dec
and
push
nop
cmps
lds
fisttp
lods
dec
nop
(bad)
mov
fist
or
add
test
test
hlt
addr16
xchg
cmc
sbb
adc
pop
mov
scas
in
mov
ss
fist
sub
dec
xor
pop
sub
mov
out
mov
jle
arpl
sub
jnp
and
or
lock
popf
inc
lahf
out
test
cwde
shl
lds
outs
adc
xchg
dec
and
dec
aaa
xor
hlt
mov
lods
das
imul
test
inc
and
jecxz
mov
mov
rcr
aam
hlt
ret
xchg
fcmovnb
mov
and
aam
add
fist
cld
sahf
nop
enter
xchg
shl
scas
aam
stc
mov
jp
repz
xchg
out
es
les
cs
or
mov
or
and
popf
int
inc
add
das
fs
shl
cmps
mov
cwde
sar
hlt
cmp
scas
data16
pushf
out
mov
outs
xor
jnp
mov
mov
jo
sbb
xchg
push
push
stc
jp
fs
dec
sub
stc
xor
mov
rol
pop
clc
rol
lods
mov
lahf
out
jb
jnp
(bad)
je
jge
and
imul
loope
(bad)
lea
jle
dec
pop
sbb
jg
jo
cmps
xlat
lahf
bnd
jg
or
pop
ret
xchg
jecxz
das
dec
aaa
push
jecxz
movs
shl
lahf
(bad)
popf
cli
xor
out
not
xchg
lods
and
mov
dec
movs
jno
mov
mov
xchg
div
sbb
xchg
jmp
in
nop
int
shl
push
jno
pop
or
das
loop
sbb
mov
fbld
call
in
sub
xchg
dec
mov
jno
pop
lahf
js
xchg
ds
push
adc
je
inc
push
push
dec
xor
rol
inc
or
das
add
xchg
push
add
out
and
pushf
std
jge
push
adc
adc
cmp
rol
mov
loopne
cli
ficomp
hlt
es
and
and
xchg
ret
sub
ror
add
popa
das
sbb
inc
cmp
jg
xor
add
sub
(bad)
xchg
lds
mov
int3
clc
sahf
mov
mov
icebp
sahf
xchg
(bad)
mov
hlt
sub
sbb
or
sub
adc
jp
jnp
dec
aam
icebp
mov
pop
mov
xchg
iret
aad
jbe
push
sbb
aaa
pop
shr
push
add
pop
pop
adc
push
xor
enter
shl
imul
adc
repnz
jecxz
cmp
or
xlat
(bad)
xchg
dec
das
imul
ret
pop
sub
or
pop
clc
mov
mov
mov
(bad)
bound
lds
push
sbb
jo
adc
cdq
leave
mov
icebp
mov
xchg
imul
add
ins
mov
xor
dec
cmp
sub
(bad)
mov
pop
xor
sar
and
test
mov
xchg
and
dec
repnz
ins
add
pop
xor
xchg
in
xchg
lods
ret
cmp
pop
(bad)
repz
ja
push
lahf
jmp
jo
jge
push
test
mov
xchg
ds
sub
mov
adc
pop
arpl
ret
mov
xchg
xchg
hlt
mov
adc
out
add
mov
xchg
std
xchg
fstp
inc
xchg
lods
leave
or
push
mov
mov
xor
and
(bad)
mov
push
jno
cmp
test
das
jp
sti
call
imul
push
into
movs
add
push
bound
mov
mov
sub
ds
test
in
nop
pop
cmp
pushf
icebp
out
cmp
or
push
aad
dec
push
gs
fist
pop
add
xor
cmp
dec
pop
adc
(bad)
push
mov
scas
int
lock
(bad)
mov
mov
je
test
mov
ja
test
and
data16
mov
(bad)
shr
test
mov
inc
sub
ss
pop
sbb
and
out
fisub
out
pop
or
repz
add
mov
shr
dec
or
shl
adc
pop
xor
lea
push
jnp
rcr
cmp
outs
sub
dec
and
dec
cmp
jnp
sub
and
sbb
sub
arpl
jb
inc
xor
inc
add
jnp
pop
adc
dec
sub
add
jne
jg
popa
sub
push
cmp
and
outs
add
jg
cdq
stc
mov
sar
scas
ret
popf
(bad)
pusha
and
add
inc
xor
jns
ins
sub
xchg
(bad)
mov
xchg
cmps
fistp
daa
inc
add
clc
mov
or
adc
mov
stos
enter
mov
aas
sub
test
inc
cs
or
in
out
or
push
cmp
pop
or
mov
ins
or
rol
nop
les
gs
(bad)
popf
iret
popf
xchg
leave
outs
adc
out
test
cs
sbb
add
leave
mov
and
stos
dec
dec
or
xchg
mov
xor
(bad)
xchg
bound
mov
nop
mov
sbb
push
sub
adc
dec
xor
int
xchg
enter
xor
je
call
jae
or
scas
aam
arpl
adc
inc
fst
es
int3
mov
test
pop
xor
pop
inc
inc
subps
imul
fidiv
bound
dec
aam
xchg
fmul
mov
xchg
inc
push
cmp
adc
jb
es
jmp
cmp
cmp
add
mov
ja
push
xor
arpl
mov
test
rcr
mov
ficomp
sahf
mov
sub
jae
lahf
(bad)
jl
and
ins
data16
push
or
mov
mov
xlat
test
rol
cmps
cmc
mov
and
repz
jno
xchg
cmps
sbb
or
xor
inc
sbb
inc
lds
mov
push
popa
push
and
cs
add
jmp
add
push
sub
mov
xchg
les
push
sbb
pop
sbb
sbb
add
outs
icebp
test
mov
xor
scas
repz
xor
mov
aam
pop
cmp
outs
fcomp
jmp
mov
std
xchg
and
icebp
jle
shr
xor
mov
push
test
dec
aas
mov
sbb
mov
inc
and
push
imul
js
iret
lods
leave
mov
mov
imul
mov
xchg
sub
mov
pop
cmps
cmc
cmps
fdiv
mov
mov
cli
outs
and
sbb
pop
xchg
in
adc
xlat
xchg
lods
sti
hlt
xor
xlat
(bad)
in
pushf
inc
daa
and
int
push
or
dec
pop
xor
push
jne
sbb
mov
dec
mov
mov
adc
stos
add
das
jmp
pop
in
das
jb
mov
stos
ret
mov
adc
cs
es
pop
(bad)
dec
pop
int3
push
jmpw
and
add
fldcw
nop
ror
cmp
test
push
xor
dec
mov
dec
(bad)
mov
scas
lock
xor
adc
and
pushf
or
fiadd
daa
pop
ja
cmp
and
gs
sub
jne
xchg
shr
jmp
mov
lahf
enter
popf
test
sti
popa
bound
jbe
lods
cmp
mov
hlt
inc
sub
mov
clc
cdq
pop
jnp
lods
mov
int3
inc
adc
lods
sub
(bad)
stc
mov
mov
lods
aad
sub
or
add
aad
int3
push
sub
daa
inc
sub
sub
lock
cmps
push
fild
leave
mov
inc
sub
sub
popa
pop
jne
push
xor
cmp
ficom
or
inc
sub
add
sbb
sbb
xchg
std
into
xchg
stos
repz
sbb
ins
ficom
clc
mov
(bad)
lods
jbe
inc
sbb
int3
mov
cmp
sub
push
cmp
push
stos
fcom
jl
clc
jecxz
xor
pop
sub
test
add
arpl
lea
stos
fldenv
sbb
clc
dec
in
loopne
cld
test
push
test
add
test
mov
pusha
add
inc
stc
lds
jecxz
shr
adc
(bad)
sub
ds
sbb
test
xor
sbb
jl
mov
mov
mov
(bad)
xor
(bad)
jmp
sub
add
and
and
iret
xchg
lods
fidivr
xor
dec
leave
add
mov
pop
iret
lds
adc
repnz
popa
stc
mov
inc
enter
push
(bad)
xor
fild
leave
enter
xchg
(bad)
(bad)
jns
push
sbb
push
fidiv
cli
push
into
and
xchg
jge
cmp
(bad)
push
add
aaa
add
outs
repz
mov
ss
loop
nop
arpl
mov
inc
retf
dec
retf
fbstp
cmps
stos
outs
(bad)
sub
sti
push
xor
fld
xor
push
cmps
pop
movs
sbb
add
sub
push
scas
mov
push
les
xor
mov
add
loop
fwait
stc
dec
daa
hlt
xchg
push
mov
sub
aaa
inc
stos
cmps
nop
pushf
cmp
mov
in
xchg
test
mov
loopne
push
sub
push
add
inc
rcr
sub
xlat
aas
jno
mov
mov
add
dec
outs
iret
pop
sti
adc
adc
mov
dec
and
lea
mov
push
add
data16
inc
shl
in
cmp
and
xchg
dec
jecxz
ror
mov
cmp
mov
stos
cmp
xchg
jbe
and
adc
mov
(bad)
mov
mov
outs
xchg
stos
gs
jbe
data16
pop
mov
fwait
outs
mov
in
int
or
or
pop
or
or
or
cmc
cmp
jp
mov
data16
push
ror
dec
or
mov
mov
icebp
xor
es
push
dec
cs
lahf
cs
push
push
jne
and
scas
cmp
adc
adc
data16
cmc
mov
add
xor
enter
cmp
jp
mov
jg
fs
inc
sub
call
mov
mov
cmps
cld
sub
(bad)
xchg
fiadd
push
inc
and
out
add
in
movs
outs
add
repnz
(bad)
pop
sbb
and
push
ds
pop
out
jne
out
mov
xchg
ficom
out
ret
jmp
repnz
shl
fidivr
out
inc
add
and
ret
js
pop
stc
xchg
xor
stos
repnz
in
mov
mov
cmp
js
gs
jecxz
je
std
push
or
dec
push
push
ins
or
xor
data16
add
xor
popa
lods
(bad)
sbb
cld
mov
mov
jbe
rcr
hlt
repnz
pusha
movs
in
add
add
mov
(bad)
call
rol
jne
pop
cmp
xchg
push
and
push
sub
sti
test
dec
movs
fiadd
or
clc
jg
pop
adc
push
push
scas
int3
mov
mov
addr16
mov
lahf
addr16
sti
and
mov
add
test
(bad)
mov
mov
mov
add
pop
adc
jae
inc
fsubr
and
push
sbb
movs
out
mov
sar
xchg
mov
repnz
mov
cdq
sbb
bound
pusha
sbb
dec
jno
in
sbb
inc
adc
jb
ror
push
sbb
xor
xor
mov
in
lds
or
test
pushf
mov
ret
cmps
loope
mov
fwait
jecxz
xor
and
imul
add
fiadd
lods
xchg
nop
loopne
shr
pop
ficom
repz
xor
inc
sub
mov
xchg
(bad)
mov
mov
pop
jl
sahf
ins
or
dec
loop
cmp
mov
mov
mov
mov
mov
call
jl
jne
xchg
jmp
call
cli
mov
or
adc
ins
sub
inc
and
arpl
jb
ins
mov
or
dec
(bad)
(bad)
mov
test
stos
enter
cmp
mov
(bad)
in
xor
pop
sbb
ins
cmp
add
and
jg
add
jne
push
mov
mov
scas
fnstenv
mov
mov
mov
shl
xchg
(bad)
daa
add
dec
add
ins
aas
cmp
cli
sahf
fdiv
test
mov
nop
cmps
cmc
cmps
rol
xor
mov
movs
stc
xor
add
imul
sbb
je
outs
adc
mov
scas
jmp
cmp
cdq
mov
icebp
test
mov
mov
or
cmc
(bad)
loopne
hlt
into
pop
adc
or
jp
enter
fist
pop
cmp
jp
mov
clc
xor
fwait
call
inc
pop
push
xor
dec
jmp
ins
(bad)
adc
push
sub
test
ficomp
lahf
fdivr
and
sbb
jne
mov
sar
es
loop
loop
sti
popa
sbb
push
xor
retf
mov
inc
xor
cmc
mov
call
lods
into
mov
sbb
iret
mov
mov
and
push
mov
xchg
xchg
cmc
jnp
(bad)
mov
rcr
lock
xlat
xchg
fisttp
pop
or
sub
inc
or
add
test
mov
mov
pop
sbb
sbb
ins
idiv
push
ss
and
xchg
mov
sbb
lods
in
in
cdq
int
es
fstp
loopne
sub
mov
cdq
repz
jecxz
adc
outs
cli
mov
out
pop
pop
cmp
jno
mov
addr16
popa
retf
cwde
retf
sahf
ret
fdiv
adc
xor
push
mov
movs
(bad)
push
adc
push
sub
add
movs
retf
push
ss
movs
imul
inc
scas
in
sbb
gs
push
mov
cmc
(bad)
in
(bad)
out
or
sub
mov
jp
cli
mov
fidivr
test
call
sub
jbe
repnz
in
mov
in
std
cli
and
xor
adc
in
dec
add
mov
ret
ret
mov
and
outs
es
xchg
retf
aam
mov
bound
adc
adc
add
test
xchg
or
and
pop
push
loopne
outs
or
or
dec
mov
mov
(bad)
in
xchg
or
inc
or
sub
test
dec
or
and
add
aas
jmp
push
push
popf
into
data16
pusha
out
mov
lds
cmp
add
xor
jns
mul
sbb
cmps
ret
xchg
sub
int3
mov
(bad)
loope
shr
jg
pop
adc
adc
pop
sub
out
add
shr
pushf
mov
push
xor
ins
and
add
jae
jne
push
sub
push
push
or
inc
aaa
bound
dec
aaa
push
adc
dec
sub
cmp
push
and
inc
add
jg
gs
inc
push
pop
cmp
jge
push
adc
popa
or
xor
and
arpl
inc
sbb
or
dec
sub
or
jle
jl
popa
sub
add
mov
lds
hlt
mov
or
push
arpl
push
ret
mov
into
popf
int3
mov
mov
lock
mov
xor
aad
(bad)
lods
out
mov
sahf
xlat
test
mov
ror
dec
sub
je
or
imul
das
arpl
les
clc
xchg
in
sar
mov
adc
bound
dec
aaa
push
adc
js
bound
ss
cmp
add
push
add
jb
and
jnp
pusha
and
push
sbb
in
neg
call
test
popf
(bad)
mov
retf
repnz
lock
in
movs
enter
lock
xlat
pop
xchg
(bad)
mov
stos
leave
mov
jecxz
mov
jmp
fnsave
ret
nop
ret
mov
stos
enter
out
std
nop
icebp
xchg
jmp
dec
ss
aaa
je
push
or
push
daa
jb
pop
daa
inc
add
imul
jno
dec
and
imul
mov
(bad)
popf
call
mov
fidiv
sub
iret
(bad)
aad
xor
inc
or
jb
jl
(bad)
fnsave
out
repnz
icebp
mov
xchg
rcr
cmc
xchg
cmps
lds
push
cmp
imul
sbb
pop
leave
mov
movs
loop
iret
mov
xchg
call
hlt
mov
(bad)
into
jo
loope
cli
test
mov
cmps
fdivr
hlt
mov
and
std
mov
push
ret
mov
xchg
fisttp
(bad)
mov
and
test
(bad)
cmc
lahf
hlt
mov
nop
leave
adc
cmc
mov
rcr
cmp
ds
and
jle
jle
pop
sbb
pop
or
addr16
dec
or
arpl
jns
jbe
jns
inc
sub
ds
push
jae
imul
mov
xchg
repz
cdq
fdivr
(bad)
mov
xchg
jmp
jmp
shl
mov
ret
lods
int3
scas
ret
repz
les
push
xor
jno
pop
pop
jge
adc
aas
push
and
jle
jg
pop
sbb
pop
or
push
jl
pop
adc
and
and
jbe
adc
jne
fs
adc
mov
call
pushf
icebp
or
sahf
sti
mov
adc
or
js
pop
cmp
dec
cs
xor
push
cmp
adc
inc
sbb
pop
push
and
loop
(bad)
mov
dec
sub
pop
ds
ror
mov
xacquire
imul
xor
sbb
dec
das
fnsave
xlat
out
mov
xchg
fimul
mov
xlat
xchg
test
mov
mov
mov
call
lsl
inc
and
add
cmp
ins
ds
fcom
push
xor
mov
icebp
mov
jbe
imul
sub
je
push
or
sbb
div
mov
xchg
hlt
jno
and
pcmpgtw
stos
stos
jmp
and
in
(bad)
movs
in
outs
sub
push
loopne
shr
xor
cdq
mov
popa
in
xchg
cmps
loopne
std
push
and
push
jge
mov
fstp
pusha
out
cmps
lods
(bad)
jle
pop
aas
cmp
xchg
movs
loopne
add
inc
sbb
hlt
mov
push
jnp
mov
add
iret
dec
sub
pop
out
xor
fnsave
fcom
xor
lods
mov
or
xchg
pop
xor
push
pop
push
xchg
out
push
fs
test
adc
push
push
cmp
pop
inc
or
dec
js
push
mov
test
les
inc
adc
inc
push
data16
ss
dec
sub
and
jno
cdq
repz
aam
call
(bad)
ficom
xchg
stc
mov
mov
popa
cs
aaa
sub
adc
pop
in
hlt
and
retf
stos
cmps
retf
xchg
(bad)
pusha
or
cmp
jne
push
cmp
add
xchg
mov
jno
add
popf
scas
shl
inc
jecxz
mov
push
std
mov
outs
jmp
nop
repz
and
outs
les
jmp
sbb
mov
jp
call
cmp
mov
inc
shr
and
into
mov
xor
jp
mov
pop
add
fisubr
inc
(bad)
or
pop
cmp
rol
retf
xor
jmp
sub
in
pop
mov
es
mov
lock
jmp
and
mov
loopne
inc
adc
lahf
jg
cli
sahf
jns
mov
div
jmp
mov
pop
jne
lods
cmc
sbb
push
scas
jecxz
popf
pop
sbb
and
sub
stos
cmp
fdivr
test
xchg
pop
push
outs
sub
inc
ins
sub
popa
addr16
in
ret
mov
push
sub
inc
dec
and
stos
(bad)
sar
or
inc
dec
sbb
xchg
test
add
cmp
mov
mov
scas
aam
mov
pushf
int3
mov
(bad)
retf
sahf
jmp
push
push
aaa
inc
xor
nop
sti
mov
repz
lahf
adc
push
push
xor
lods
fcmovu
adc
xor
sbb
mov
inc
loope
(bad)
mov
mov
lods
mov
jmp
cdq
icebp
stos
in
ret
cmps
out
rcl
clc
fwait
repz
int3
scas
(bad)
movs
clc
test
cwde
loopne
(bad)
pop
add
jne
shl
xor
push
adc
pop
xor
dec
xor
sub
push
ins
adc
dec
or
(bad)
rcl
mul
mov
cwde
loop
(bad)
mov
cs
sub
sub
and
cld
mov
dec
(bad)
jecxz
iret
mov
nop
fst
push
into
mov
idiv
lods
out
mov
test
repnz
push
add
jg
or
add
xchg
pushf
dec
dec
and
enter
push
xor
cld
aaa
jge
mov
jb
jge
icebp
fwait
rcl
mov
dec
push
jmp
movs
dec
sbb
fild
push
and
or
cmp
(bad)
xchg
and
inc
push
in
jmp
xchg
sub
fisub
(bad)
jno
imul
call
jge
adc
mov
imul
and
popa
or
mov
fnstcw
pop
inc
add
xor
test
sahf
in
out
call
(bad)
call
in
pushf
outs
sbb
push
push
push
adc
in
or
out
xchg
(bad)
lahf
jno
or
push
xor
jb
mov
push
dec
add
inc
adc
add
cwde
fild
test
cmc
js
mov
int
mov
movs
sti
mov
add
cmp
xchg
div
xchg
std
jb
jne
xchg
xchg
cmc
imul
ficomp
xor
push
inc
cs
add
cs
xor
xchg
sar
and
out
mov
push
not
mov
xor
dec
xor
ins
aas
pop
xor
dec
inc
aaa
fs
popa
add
loop
pop
sbb
retf
mov
aas
jl
ja
jne
sbb
mov
scas
retf
mov
push
ss
sbb
mov
sub
ror
add
inc
mov
ins
adc
test
cmp
pusha
jmp
shr
sub
popf
lods
mov
xchg
out
mov
pushf
rcl
mov
dec
sub
inc
and
(bad)
loop
pop
cmp
or
sti
mov
adc
stos
in
xchg
(bad)
mov
xlat
mov
push
sub
call
addr16
iret
mov
cld
mov
repz
sbb
dec
and
dec
das
ins
nop
stos
rol
jmp
dec
mov
add
in
loop
mov
retf
pop
inc
add
xlat
arpl
inc
add
push
popf
inc
dec
ret
ror
mov
imul
(bad)
mov
test
out
inc
add
call
test
pop
push
inc
sub
push
outs
add
ret
xchg
lea
push
dec
out
jmp
mov
outs
add
inc
pop
push
loopne
xlat
fwait
into
add
retf
mov
ss
ret
into
shr
dec
pop
inc
dec
retf
jp
dec
push
dec
call
enter
sub
cwde
clc
mov
(bad)
neg
mov
addr16
xchg
rol
xchg
arpl
add
xchg
add
jno
stos
rol
sbb
cmps
and
rcl
gs
xor
pop
std
mov
int3
mov
push
mov
shl
pop
sub
or
dec
push
or
jmp
mov
mov
cmps
ret
xchg
sub
movs
mov
push
pop
fcomp
inc
cmp
packssdw
xchg
ja
xchg
out
sub
mov
pop
minps
iret
mov
out
mov
adc
or
jnp
push
pop
arpl
jo
push
adc
or
int
aad
add
mov
mov
inc
sti
mov
jecxz
cli
and
sar
leave
lahf
les
call
mov
inc
shl
outs
pop
push
sbb
mov
mov
cmp
pop
das
sub
inc
stc
imul
fsubr
push
rol
ins
hlt
sub
xchg
pushf
xchg
cwde
cmc
aaa
ds
sub
push
jle
dec
sub
aas
xor
and
ret
jae
pop
mov
pop
jae
xor
pop
cmp
jg
pop
lods
scas
mov
pop
push
push
inc
sub
add
cmp
imul
add
mov
cwde
fimul
shr
out
mov
cmp
clc
jp
jne
fadd
dec
nop
fnstenv
jle
aam
xor
je
ins
arpl
jge
and
dec
sub
add
and
and
rol
shr
dec
dec
sti
xchg
hlt
or
cmps
cld
dec
daa
dec
xchg
mov
mov
cld
mov
(bad)
imul
das
push
cmp
int3
mov
jns
cmps
in
push
add
sub
inc
and
mov
xchg
shl
inc
cmp
into
mov
addr16
popf
jno
push
loopne
jp
pop
imul
call
xor
int
add
sbb
mov
lods
dec
adc
mov
(bad)
xchg
xchg
jb
jae
dec
jl
or
mov
fld
sbb
cmp
leave
pop
mov
cmp
add
xchg
lods
arpl
sub
push
sar
jno
dec
(bad)
ds
and
cmp
inc
add
fsub
and
jecxz
pushf
cmp
scas
int3
rcl
call
sub
arpl
xchg
fld
jmp
cmp
(bad)
imul
jbe
inc
fwait
into
cs
jnp
push
cld
arpl
mov
xchg
sub
iret
dec
mov
sbb
adc
imul
xchg
inc
and
add
mov
imul
mov
xchg
lock
ret
and
es
xlat
dec
and
pop
bnd
ss
pop
jno
sub
test
xlat
xchg
push
dec
cli
sbb
mov
(bad)
aam
add
push
fisubr
pop
mov
cwde
jl
push
das
inc
jle
xor
inc
inc
les
pop
inc
jmp
cmc
mov
dec
sbb
mov
sub
mov
inc
pusha
cmps
repnz
lock
bound
rcl
test
call
cli
mov
adc
xlat
lods
iret
loopne
in
jmp
mov
mov
xor
push
inc
test
pushf
sar
mov
cmps
(bad)
dec
sub
fidivr
pop
sbb
pop
push
mov
leave
stos
mov
and
mov
neg
loope
out
cmps
cmc
iret
xchg
les
mov
push
outs
or
inc
mov
sahf
jecxz
ins
movs
aas
adc
data16
aam
mov
scas
cmc
outs
pop
data16
loopne
fdiv
push
push
or
cli
scas
fstp
xchg
fnstcw
xlat
mov
scas
in
push
cmp
add
mov
or
clc
cdq
loope
lods
into
mov
clc
ss
cmps
cld
mov
(bad)
mov
rcl
inc
add
jae
xchg
sti
xchg
fistp
xchg
int
adc
push
sub
sub
or
xlat
stos
loop
cmps
int
jle
pop
add
(bad)
stc
sub
pop
xchg
into
dec
cmps
xchg
call
xchg
ja
push
jecxz
imul
xchg
jp
pusha
loope
or
xor
test
lahf
fmul
mov
push
int
imul
sub
or
push
cli
sahf
fisttp
or
sub
repz
sub
cmp
push
mov
and
sahf
lock
sbb
xor
pop
xlat
adc
movs
shl
rcl
pop
sbb
in
mov
adc
sbb
and
(bad)
aad
repz
or
mul
(bad)
nop
cwde
fnstsw
mov
cmps
fs
and
rcl
push
ss
or
test
cmp
mov
pop
in
nop
jmp
push
hlt
cmp
ret
scas
fnstenv
xchg
mov
xor
jnp
pop
mov
retf
adc
xchg
jmp
mov
sbb
das
call
push
pop
or
inc
cli
call
inc
add
lock
inc
cmp
jmp
xor
xchg
xchg
stos
iret
pop
mov
retf
dec
aam
pop
xor
(bad)
mov
xor
adc
sub
sbb
cmp
adc
push
adc
pop
mov
cmp
cmps
mov
dec
sub
jne
out
xchg
jg
leave
sub
cmp
dec
shr
ds
push
cmp
sub
stc
xchg
clc
dec
add
jmp
cdq
mov
xchg
sub
ficomp
xor
xchg
mov
mov
movs
mov
mov
cmps
jae
dec
xchg
mov
fimul
cmp
sub
shr
or
and
push
iret
lods
xchg
(bad)
and
mov
sub
jns
xor
mov
jg
pop
mov
pushf
mov
mov
mov
div
fdivr
sbb
push
(bad)
cmp
addr16
ficomp
jp
mov
(bad)
loopne
dec
cmps
jmp
sahf
int3
mov
mov
aas
test
icebp
fwait
mov
enter
(bad)
retf
ror
jmp
sbb
cli
sub
push
idiv
pop
add
clc
mov
fs
out
div
cmc
jp
inc
dec
fdiv
dec
das
out
ror
js
idiv
push
aaa
cld
xchg
loope
daa
and
sbb
sbb
mov
(bad)
les
mov
mov
add
hlt
dec
mov
pop
pop
xchg
mov
xchg
sub
cmps
inc
scas
push
xchg
xchg
cld
mov
std
jnp
pop
mov
push
mov
fdivr
dec
mov
mov
xchg
jmp
jle
mov
sub
lds
or
ja
cmc
nop
(bad)
dec
ds
dec
push
jmp
cmp
jae
push
cmp
cmps
retf
ds
xlat
das
dec
int
jmp
push
mov
push
sbb
in
lods
imul
(bad)
in
sbb
sub
jmp
repnz
std
movs
in
add
sbb
push
fsub
push
adc
jge
ret
lea
into
es
fistp
pop
bound
cmp
xchg
es
cmc
aas
push
and
ja
dec
scas
call
lods
popa
sub
out
jmp
xor
xchg
push
jnp
push
sub
stos
nop
pop
inc
cmps
les
mov
jl
add
iret
sub
xlat
xor
lods
test
xchg
and
imul
push
mov
push
in
outs
sub
jg
out
push
xchg
jno
lods
jne
arpl
ins
adc
ret
rol
pop
push
pop
adc
imul
jg
inc
add
shl
dec
stos
push
push
loopne
(bad)
push
pop
int
rcr
call
mov
adc
gs
fld
fs
test
mov
clc
dec
es
arpl
pop
(bad)
enter
into
pushf
xchg
imul
nop
xor
cs
jb
mov
aad
inc
add
push
ror
popf
inc
and
xchg
int3
inc
lods
stos
mov
fwait
push
pop
not
sub
push
add
or
cmp
xchg
xchg
xlat
xor
arpl
mov
data16
in
shr
or
sub
nop
push
xor
add
push
or
not
xchg
push
mov
call
pusha
push
sti
test
out
xchg
mov
xor
add
or
test
mov
lock
jmp
or
cs
adc
cld
sahf
rol
je
sbb
push
xor
cmp
push
cs
or
mov
sbb
(bad)
(bad)
ret
mov
xchg
jae
push
mov
stos
jecxz
jp
(bad)
jecxz
stos
(bad)
mov
repnz
aaa
loopne
(bad)
pop
xor
sub
hlt
imul
rol
punpckldq
mov
dec
sbb
fst
and
sahf
fnstsw
icebp
xchg
mov
repnz
pushf
or
mov
and
inc
push
mov
test
popa
mov
pusha
or
std
movs
pop
jmp
movs
std
mov
movs
xor
scas
lds
adc
int
cmp
jmp
adc
repnz
add
sahf
fstp
(bad)
adc
sub
cmps
stos
int3
scas
dec
cmps
out
and
push
mul
jns
int
pop
inc
push
(bad)
pushf
fchs
add
sbb
mov
mov
outs
ss
cli
arpl
xchg
inc
ja
xchg
push
repnz
mov
cli
mov
push
in
mov
sub
enter
jg
mov
jl
imul
lock
jecxz
lock
aad
test
test
cmp
gs
pop
xor
add
and
inc
jb
rol
push
and
jmp
loopne
xor
shl
dec
es
je
fidivr
push
sub
je
xchg
(bad)
aas
inc
sub
pushf
inc
adc
stos
(bad)
fwait
clc
dec
fistp
cmp
dec
punpckhdq
loopne
stc
out
call
fdiv
fnsave
push
mov
mov
iret
pop
and
in
test
xchg
lock
push
cdq
xchg
stc
xchg
mov
dec
sbb
lods
shr
mov
lahf
icebp
std
xor
push
add
dec
mov
push
add
xor
sti
sahf
mov
rol
or
and
mov
bound
xor
cwde
aam
(bad)
in
stos
je
pop
cmp
test
xchg
mov
(bad)
dec
or
jg
pusha
xor
xor
ret
nop
dec
sub
jmp
mov
outs
add
adc
jnp
add
lahf
in
nop
mov
xchg
pop
sbb
add
push
xlat
jbe
push
and
inc
pop
sbb
ja
mov
fist
arpl
inc
mov
mov
cmp
loope
mov
mov
xchg
jo
mov
xchg
push
jne
push
jg
not
enter
mov
push
dec
mov
retf
fmul
mov
sub
push
or
and
fs
or
fst
pop
adc
pop
lods
fs
movs
(bad)
mov
cmp
inc
and
clc
stos
push
daa
je
adc
addr16
cmc
or
mov
mov
sub
call
mov
int3
cs
lahf
arpl
pop
adc
adc
pop
sbb
xchg
sahf
push
je
ins
jmp
lahf
out
retf
dec
push
int3
cmps
scas
iret
jl
mov
call
push
fs
mov
mov
push
jmp
and
popf
xchg
push
xor
hlt
das
int3
retf
sub
push
sbb
cmp
retf
sub
pop
inc
or
fld
jae
dec
push
dec
cmp
fwait
lock
sbb
fcom
mov
and
into
mov
and
fmul
mov
jo
out
xor
fnstcw
and
ja
jle
fs
mov
add
mov
nop
(bad)
xchg
idiv
(bad)
cmps
lds
rcl
jecxz
push
push
ss
cs
cdq
inc
and
xchg
(bad)
cmps
and
mov
inc
cmp
ds
or
aas
jo
mov
outs
data16
xchg
gs
jle
scas
xlat
mov
stos
xchg
ret
mov
mov
push
ret
adc
dec
sbb
inc
or
and
es
pusha
add
ins
adc
sub
fld
icebp
test
mov
test
lods
push
mov
or
or
mov
jg
dec
xor
scas
retf
pop
mov
inc
sub
jg
xor
shl
int
inc
and
inc
adc
pop
push
sti
jecxz
xor
inc
fstp
fdivr
jno
pop
paddsb
test
and
adc
dec
fs
mov
stos
mov
and
(bad)
and
xor
push
pop
pop
add
fbld
push
push
pop
add
jmp
hlt
xchg
(bad)
es
aas
add
sbb
push
pop
or
mov
sub
xor
sub
stc
stos
xchg
mov
mov
pop
aaa
das
inc
std
add
mov
xor
or
push
pop
jne
or
ds
mov
dec
and
mov
cs
sub
adc
repnz
cs
movs
les
add
mov
arpl
retf
scas
push
sbb
add
mov
rcl
push
mov
inc
mov
loope
sti
sbb
and
pop
push
pop
cmp
xchg
fimul
add
mov
or
aas
dec
fnstcw
xlat
mov
lods
mov
and
(bad)
xchg
and
mov
adc
(bad)
cmps
out
or
adc
ds
hlt
xchg
imul
shl
popf
repz
aas
inc
sub
ror
xlat
xor
inc
pop
dec
lods
retf
mov
loope
pop
xor
jnp
push
retf
add
js
adc
(bad)
lods
inc
pop
gs
xor
mov
cmp
jmp
pop
ret
pop
jne
lods
bound
mov
inc
mov
aas
push
xlat
lea
inc
mov
nop
pop
repnz
xchg
dec
add
mov
xor
frstor
mov
or
loope
into
push
dec
mov
adc
xchg
test
or
clc
dec
test
sahf
xlat
test
aas
cmp
sub
stos
in
aas
cmp
repz
xchg
imul
jg
and
xor
xlat
je
pmullw
dec
pop
movs
mov
rcl
add
scas
mov
popf
aaa
lds
xchg
daa
loop
sti
repz
jo
xlat
scas
sar
out
pop
mov
pop
aad
adc
inc
pop
pop
lds
and
jecxz
push
sti
sub
mov
shl
aad
or
pop
push
jmp
inc
scas
out
inc
or
imul
rol
mov
sub
cli
xchg
cmc
call
aaa
pop
ss
test
sbb
lods
in
pop
sbb
rcl
shl
sbb
popa
mov
pop
mov
aaa
jmp
mov
xchg
fldcw
in
jge
(bad)
mov
cli
mov
hlt
adc
xlat
xchg
xor
mov
mov
loope
mov
ror
dec
cmc
adc
cwde
call
add
cs
mov
out
out
arpl
cmc
jno
inc
push
lock
jecxz
mov
not
mov
cmp
call
jle
push
out
push
mov
xchg
cs
mov
int3
xor
xchg
bswap
xchg
ins
outs
in
loop
hlt
lods
in
xor
arpl
fdiv
imul
cdq
dec
add
ret
mov
cmp
enter
jg
ror
add
mov
jmp
xchg
fwait
and
push
jmp
push
jecxz
jo
shr
xchg
(bad)
rcl
outs
cmp
xchg
xchg
pop
add
xchg
aad
ins
ret
std
pushf
movs
clc
daa
dec
xor
jo
stos
mov
mov
cmp
xchg
into
scas
repz
ja
inc
or
or
mov
jno
ins
sbb
imul
cdq
mov
inc
adc
jge
jae
add
inc
outs
out
test
cmc
mov
mov
ja
jns
call
cli
call
xor
push
add
jmp
xor
pop
ds
and
pop
sub
dec
pop
pop
or
push
jae
push
pop
inc
add
mov
mov
arpl
inc
ds
aas
jl
pop
add
mov
stos
out
adc
lahf
sti
mov
fdiv
neg
out
test
mov
stc
or
call
push
ja
push
sub
dec
sub
pop
sub
outs
or
jg
nop
rcl
sbb
jg
push
aas
push
sbb
sbb
xor
push
jecxz
(bad)
mov
repnz
lods
(bad)
cmps
lds
xchg
(bad)
mov
sub
in
mov
daa
mov
pusha
mov
and
and
loopne
dec
sbb
pop
jmp
popa
sbb
xchg
fnstcw
inc
add
dec
loopne
mov
cld
mov
js
icebp
sub
push
mov
dec
and
stc
add
sub
aad
iret
xchg
dec
(bad)
xchg
hlt
call
xchg
out
cmp
xchg
lock
pop
or
loopne
pop
sbb
dec
das
mov
sub
or
jns
add
cld
mov
dec
fidivr
clc
call
sti
cmp
dec
mov
out
pushf
or
mov
call
jge
dec
aaa
dec
and
jmp
push
push
cmp
dec
add
sbb
(bad)
adc
pop
pop
loopne
push
push
add
cs
add
idiv
fnstcw
pop
daa
pop
ss
cmps
jmp
jp
loopne
test
mov
adc
loope
aad
push
jae
push
ja
pop
jmp
shr
aam
xlat
bound
push
(bad)
xchg
test
pop
jl
jbe
cmp
xchg
mov
mov
inc
mov
push
pop
popf
ficom
or
pop
adc
je
js
pop
in
sbb
xor
ins
es
add
cmc
xchg
out
(bad)
inc
cmovp
mov
add
cmc
stos
fisttp
xlat
jae
jb
outs
(bad)
sbb
cmp
jle
xor
pop
cmovb
pop
cmp
addr16
les
lods
fnsave
pop
fnstenv
lea
loopne
std
inc
sbb
ds
and
fidivr
add
mov
xor
or
push
pop
xor
lods
push
pop
jnp
dec
adc
push
and
call
cmp
pusha
adc
sbb
cli
pushf
fist
ror
pop
ss
pop
inc
or
in
adc
lds
mov
es
jae
fs
mov
nop
nop
(bad)
lock
mov
lods
repz
aam
jle
jle
cmps
retf
mov
rol
mov
ins
cs
xor
push
pop
jb
cdq
repnz
xor
add
sbb
jp
dec
xor
in
lock
add
xor
call
mov
ror
call
pushf
in
(bad)
loopne
repnz
sub
add
inc
push
outs
das
dec
mov
mov
sub
mov
jo
outs
xchg
and
adc
and
xchg
(bad)
iret
mov
push
scas
movs
mov
test
xor
inc
and
mov
scas
rol
sbb
jle
xchg
mov
mov
int
icebp
lahf
test
ins
in
int3
mov
les
ret
lods
mov
mov
xor
sub
sbb
sbb
and
test
jnp
dec
xor
adc
pop
pop
inc
sbb
out
xchg
in
(bad)
call
mov
or
dec
(bad)
cmps
ret
test
iret
jecxz
sti
addr16
cmp
adc
shl
movs
out
scas
std
mov
dec
sub
or
sbb
fs
mov
mov
sar
add
loope
data16
xchg
cli
cdq
clc
nop
mov
or
pop
retf
mov
mov
mov
jp
int
fsub
xchg
dec
jns
push
or
sub
jg
mov
neg
mov
aam
dec
mov
pop
sbb
and
dec
fistp
js
jae
cmp
es
dec
sbb
imul
mov
xchg
cmc
cwde
pusha
push
jo
push
lods
push
loop
sub
inc
popa
fcomp
cdq
cli
mov
popf
inc
and
add
inc
cmp
jmp
jno
gs
retf
push
xor
ror
pushf
repnz
icebp
js
inc
sub
add
rcl
call
fidivr
scas
test
mov
push
or
pushf
fiadd
dec
or
mov
jb
sar
aam
xor
mov
ins
adc
cmp
iret
pop
icebp
popf
cld
gs
es
pop
ja
push
cld
mov
pop
hlt
loop
sti
addr16
xchg
mov
cmps
mov
rcl
ficom
and
dec
add
pop
out
out
xchg
sar
sub
call
xor
cmp
and
mov
mov
shl
cli
lahf
cmps
into
test
jmp
inc
add
adc
out
mov
mov
cmp
sub
imul
or
pop
arpl
jne
ins
push
and
aas
jp
fnstenv
out
fcomp
je
daa
inc
lock
push
and
push
fidivr
jg
and
loopne
fidiv
das
sbb
pop
or
sub
xchg
aad
aad
or
cmps
int3
xchg
adc
xor
fwait
out
sub
or
adc
dec
and
xor
and
or
div
aas
push
jne
inc
mov
inc
sub
lods
aaa
dec
add
mov
push
adc
enter
jns
and
sub
cmc
cmp
and
mov
lods
mov
ret
push
rcl
pop
ins
das
pushw
dec
cmps
pcmpgtw
mov
add
add
shl
(bad)
jle
popa
test
lods
int
jae
dec
and
dec
or
int3
sbb
(bad)
repz
push
adc
outs
mov
dec
pop
ins
sbb
icebp
mov
xchg
cmps
(bad)
stc
test
loopne
leave
mov
sar
into
mov
frstor
retf
jmp
add
and
jmp
jp
fcomp
inc
adc
in
dec
sub
pop
push
jl
inc
adc
push
mov
mov
(bad)
xchg
fcomp
jl
outs
dec
dec
push
or
ins
jecxz
mov
lods
xchg
inc
adc
out
dec
lods
int3
mov
sub
and
jmp
rcr
ins
or
loop
sub
inc
cmp
(bad)
stos
(bad)
mov
and
or
mov
mov
hlt
xchg
call
daa
outs
or
push
(bad)
cmps
in
ror
dec
add
mov
scas
lds
int3
xchg
retf
xchg
scas
out
(bad)
mov
push
xor
push
jmp
(bad)
fiadd
sbb
push
adc
jno
jg
dec
sbb
pop
or
adc
pop
or
scas
xchg
rol
cld
bound
inc
call
std
pusha
nop
add
aas
and
lds
in
jno
pop
das
sub
stos
(bad)
mov
adc
js
dec
jmp
fbstp
cld
pusha
sti
gs
adc
and
push
inc
add
and
sbb
dec
mov
fisubr
xchg
icebp
mov
sahf
(bad)
xchg
call
xor
push
lods
cld
mov
icebp
mov
loope
ins
add
xchg
jg
std
cwde
fcomp
and
or
mov
push
xor
push
cmps
xchg
ret
mov
inc
xor
aas
jne
es
pop
cmps
xchg
cmp
mov
les
cli
test
add
mov
xor
or
bound
pop
add
ds
outs
pop
push
mov
retf
aam
movs
out
mov
sbb
xchg
leave
adc
jmp
(bad)
lahf
mov
jp
adc
fisubr
ficom
push
jb
pop
cdq
mov
adc
scas
int3
scas
(bad)
shl
pop
daa
dec
sub
pop
or
sti
or
js
cmovl
mov
in
(bad)
dec
cmp
in
mov
aad
fild
mov
mov
movs
out
fst
movs
jb
outs
sbb
dec
adc
dec
and
stos
mov
fwait
jbe
push
sbb
or
mov
ins
pop
or
add
call
pop
cs
dec
sbb
std
jo
and
jmp
adc
xor
sub
xchg
js
outs
push
sub
push
jmp
imul
loopne
lock
out
mov
mov
xchg
fild
and
sub
repz
in
imul
imul
xchg
pop
adc
iret
inc
sub
sub
mov
movs
xchg
aad
leave
mov
test
les
adc
jl
and
fiadd
jnp
pop
es
cli
mov
call
je
push
aaa
int3
aad
icebp
mov
xor
xor
and
pop
sbb
mov
jo
inc
fst
xchg
movs
rcl
add
push
push
pop
inc
in
adc
sbb
and
inc
sub
ror
mov
xchg
fbld
pop
out
iret
and
inc
dec
and
sub
mov
lods
std
mov
nop
pop
push
dec
(bad)
mov
movs
(bad)
mov
mov
lahf
cmc
sahf
fnstsw
sub
add
cli
sahf
fild
clc
mov
lods
aad
aam
push
adc
cmps
push
pop
jl
and
dec
cmc
xchg
out
xchg
test
cdq
sub
push
adc
push
add
pop
or
inc
daa
pop
adc
sbb
sub
adc
inc
sbb
push
and
cmp
iret
scas
jmp
mov
mov
mov
mov
call
add
pop
cmp
sub
neg
cmps
int
jmp
icebp
mov
gs
jl
clc
mov
cdq
sti
sub
sbb
pop
in
or
jle
dec
scas
jnp
push
and
push
fist
call
into
movs
sub
icebp
push
or
adc
xchg
stos
fs
jle
shl
cmp
fwait
(bad)
mov
push
add
push
pop
xor
jg
jle
mov
in
scas
retf
jnp
pop
xor
retf
cmp
mov
push
aas
sub
xor
inc
sbb
(bad)
out
lods
cwde
stos
in
(bad)
stc
pusha
push
jae
jb
fldenv
in
jb
pop
sub
push
shl
cmp
cld
popf
fcom
jae
jp
mov
into
cmc
mov
dec
das
push
cmp
mov
xchg
bound
and
or
and
gs
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
and
jle
ins
or
pop
aaa
dec
daa
dec
pcmpgtw
jns
arpl
inc
or
jle
dec
or
jl
jle
popf
aam
ret
test
and
clc
mov
mov
xchg
fnstenv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
(bad)
sahf
cld
nop
jecxz
(bad)
mov
fild
call
cdq
shl
loope
shl
repz
xchg
lds
in
call
scas
shl
xchg
xchg
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
and
arpl
inc
adc
jns
push
das
dec
or
addr16
adc
jle
inc
sub
cmp
adc
sub
dec
push
dec
sub
ja
pop
sbb
popf
call
int3
mov
push
cs
xor
pop
cmp
popf
repnz
lock
out
cmps
retf
lods
out
mov
xchg
fimul
(bad)
fidivr
iret
mov
out
std
mov
fild
idiv
in
out
cmc
mov
call
mov
scas
cli
mov
mov
xchg
aad
hlt
xchg
call
cwde
sar
jecxz
sti
lods
stc
stos
(bad)
lock
out
in
sti
mov
mov
(bad)
sahf
(bad)
test
movs
lock
retf
scas
jmp
mov
xchg
jmp
xchg
test
mov
rcr
enter
rcr
int3
test
mov
(bad)
xchg
icebp
mov
scas
loope
rcr
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fnstenv
loop
icebp
call
aam
hlt
mov
rcr
iret
test
jecxz
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
jb
gs
inc
or
inc
cmp
push
cmp
outs
adc
push
ss
data16
adc
movq
xor
pop
cmp
dec
and
jp
jnp
pop
sbb
addr16
adc
and
sub
ins
pop
js
jp
popa
sub
ds
push
or
push
inc
xor
inc
cmp
push
xor
or
jne
dec
pop
and
pop
sbb
sub
dec
sbb
dec
sub
add
jp
js
addr16
xor
push
or
jge
pop
adc
gs
pop
jb
push
cs
pop
cmp
imul
push
push
dec
add
ja
adc
push
sbb
ins
push
bound
push
adc
and
push
add
pop
aas
jnp
dec
or
adc
jnp
pusha
sub
dec
and
icebp
mov
int
call
mov
rcr
retf
mov
lods
stc
mov
xchg
test
lods
ret
mov
fwait
loop
jecxz
rol
mov
retf
cmps
les
leave
sub
cld
xchg
aam
in
mov
scas
dec
repz
pushf
fdiv
lods
fcom
shl
cmc
mov
aam
sti
mov
mov
scas
out
in
xchg
scas
retf
call
loopne
cmc
mov
jmp
loope
(bad)
mov
cmps
iret
cmps
out
(bad)
mov
lds
(bad)
xchg
shl
retf
nop
jmp
jmp
fwait
out
mov
rcl
shl
and
lds
jmp
mov
lahf
aad
leave
cmps
(bad)
movs
enter
loope
loopne
mov
mov
lahf
in
ror
mov
shr
retf
xchg
les
aam
fidivr
call
mov
movs
into
mov
movs
cld
mov
mov
xchg
aad
retf
mov
add
pop
sub
outs
sub
cmp
jge
data16
sbb
xor
dec
sub
push
push
jb
outs
add
and
jb
ins
sbb
sbb
add
pop
xor
inc
ss
outs
pop
outs
das
inc
push
pop
adc
addr16
pop
push
ins
sub
pop
cmp
xor
pop
and
pusha
add
sbb
push
es
push
cs
or
pop
cmp
dec
sub
jnp
push
sub
popa
xor
pop
cmp
pop
adc
dec
xor
pop
xor
sbb
pop
ds
outs
cmp
sbb
pop
addr16
cmp
push
xor
inc
pop
xor
imul
adc
jb
outs
aas
ins
sbb
popw
jl
jb
push
xor
and
dec
cmp
addr16
and
cmp
pop
push
jge
bound
inc
or
cmp
das
dec
pop
sub
add
push
adc
add
xor
popa
add
sub
inc
and
pop
push
jp
push
cmp
sbb
dec
sbb
sub
dec
add
jbe
jne
jg
inc
das
push
aas
push
pop
ins
cs
imul
adc
cs
add
je
jbe
gs
cmp
js
pop
add
dec
ds
jge
and
inc
and
push
xor
arpl
jo
jns
push
adc
imul
inc
es
sub
sbb
je
imul
xor
jb
push
push
inc
adc
xor
das
dec
xor
adc
jp
bound
imul
jns
popf
xlat
xchg
mov
les
neg
enter
ficomp
cmps
rol
push
cmc
xchg
not
jmp
xchg
xchg
(bad)
lods
sti
mov
test
loope
cmc
call
aad
aam
repnz
mov
mov
test
mov
into
mov
leave
cmps
fidiv
jmp
mov
into
xchg
dec
cs
sub
jb
push
adc
push
add
imul
pop
cmp
inc
or
ins
add
pop
add
inc
xor
dec
sub
popf
inc
repz
jmp
lods
clc
mov
lods
leave
mov
cmps
loop
cli
xchg
icebp
(bad)
jecxz
aad
ret
and
cmc
mov
aam
iret
lods
jmp
nop
repnz
jmp
mov
nop
int
fmul
leave
mov
xchg
fnstcw
mov
in
and
xchg
std
scas
aad
into
lods
shl
cli
mov
iret
xchg
(bad)
out
into
stos
jmp
cli
test
adc
sti
sbb
es
and
jg
outs
pop
inc
pop
push
inc
or
jg
push
push
jne
push
sub
sub
jo
pusha
or
imul
pop
adc
ja
jne
push
xor
inc
and
jae
pusha
add
pop
or
bound
jne
push
sbb
push
sub
inc
sub
jle
push
inc
es
jno
push
pop
jg
popa
and
dec
sub
pop
xor
mov
mov
test
in
ror
fistp
mov
xchg
out
test
lods
enter
(bad)
xchg
loop
cmc
xchg
jmp
test
xchg
test
mov
jmp
test
fisttp
cld
mov
xchg
repnz
mov
test
mov
jmp
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
jmp
test
int3
xchg
fisttp
shr
in
call
(bad)
stos
sar
out
cmps
hlt
cmps
rol
idiv
jmp
and
cmp
pop
push
dec
sbb
cmp
daa
inc
cmp
sbb
jb
push
popa
cmp
jb
jae
push
adc
pop
or
sub
sbb
adc
push
das
inc
and
pop
adc
push
inc
and
cli
scas
sbb
imul
das
jge
inc
and
ja
outs
and
inc
adc
inc
and
or
bound
pusha
or
ss
pop
ss
push
jp
bound
js
push
add
sub
gs
dec
push
outs
push
jnp
jno
outs
and
pop
aaa
ja
dec
adc
pop
das
jne
pop
and
dec
and
je
jp
dec
and
pop
sbb
sub
pop
or
es
add
add
jae
jns
inc
sub
pop
adc
or
jg
push
and
gs
jns
jbe
js
inc
cs
cmp
jbe
outs
es
push
add
push
xor
pop
sbb
outs
or
jp
inc
cmp
jnp
pop
cmp
push
sbb
pop
and
dec
sub
cmp
push
and
jg
jle
pop
adc
jb
add
pop
adc
xor
aaa
push
xor
mov
imul
add
push
cmp
push
daa
outs
add
je
push
adc
push
cmp
dec
and
xchg
out
sbb
ds
aas
jg
push
or
inc
aaa
popf
shl
std
mov
into
mov
clc
xchg
shl
xchg
ret
sahf
(bad)
mov
sar
jmp
clc
(bad)
loope
mov
loop
(bad)
mov
(bad)
out
test
xchg
sahf
loope
out
mov
xchg
fidiv
out
scas
idiv
xlat
mov
test
jecxz
not
(bad)
ret
(bad)
fsubr
int3
mov
mov
lock
dec
(bad)
xchg
lock
hlt
mov
int
shl
cmc
mov
push
xor
addr16
xor
int3
mov
xchg
fdivr
adc
outs
es
sub
dec
adc
push
and
and
jg
pop
aas
inc
sub
dec
ds
packuswb
jge
popa
sub
pop
add
jbe
push
adc
fs
or
push
sub
push
or
jp
dec
ss
adc
je
push
sbb
inc
and
jnp
jns
pop
cmovb
push
ss
pop
adc
or
pop
and
bound
inc
push
push
add
and
aas
pop
and
add
push
jb
jns
jnp
jge
push
imul
or
push
add
and
adc
sbb
pop
daa
dec
sub
push
sbb
push
dec
sub
je
ja
push
adc
popa
add
pop
and
daa
inc
and
jns
dec
das
ins
aaa
jns
jbe
imul
cmp
push
xor
or
fs
pop
xor
inc
push
bound
jp
pusha
sub
pop
xor
addr16
jae
imul
inc
das
outs
add
push
daa
ins
and
pop
push
push
sub
jl
jb
je
arpl
bound
inc
add
inc
adc
jns
outs
cmovnp
imul
push
sub
dec
sub
jne
jb
push
sbb
pop
sbb
ins
push
jno
jle
jo
dec
es
xor
jle
data16
pop
or
pop
cmp
push
adc
add
lds
icebp
mov
scas
jmp
mov
hlt
(bad)
loopne
loop
stc
mov
cmps
int3
cmps
in
std
movs
in
mov
fldenv
call
(bad)
sbb
push
xor
inc
or
pop
and
dec
sub
ins
add
ins
pop
push
cmp
jl
pop
sbb
pop
add
jo
inc
punpckhdq
dec
ss
xor
outs
push
jg
push
sub
js
push
sbb
pusha
outs
add
push
ss
and
jp
pop
sbb
pop
or
popa
cmp
inc
add
sbb
jae
push
cmp
push
or
jp
pop
adc
data16
inc
es
ss
xor
sub
jno
jo
push
pop
dec
push
push
add
pcmpeqb
push
sbb
pop
and
inc
sub
arpl
jae
pop
cmp
pop
inc
adc
xor
add
or
dec
aaa
pop
cmp
inc
or
push
pop
cmp
fs
popa
sbb
jno
push
sub
push
and
cmp
pop
sbb
or
ins
cmp
imul
inc
xor
inc
push
bound
jae
bound
popf
call
test
mov
xchg
test
neg
jecxz
loopne
std
mov
stos
enter
fwait
clc
sub
out
sub
enter
lock
ror
loop
lds
in
mov
cdq
sti
fwait
icebp
or
fsubr
ret
test
xor
jmp
fnstsw
shl
stos
into
(bad)
(bad)
sahf
int3
cdq
in
mov
leave
and
ret
mov
rcl
ret
mov
cld
mov
xchg
test
movs
fbstp
loopne
neg
pushf
into
lahf
jmp
cdq
cld
mov
dec
shl
mov
in
xchg
repnz
fstcw
cld
pop
stos
int
int3
mov
stos
repnz
fstp
mov
in
out
sahf
sar
sbb
dec
aas
sub
push
push
pop
xor
fs
push
pop
xor
dec
or
cmp
dec
sbb
push
aaa
jae
push
adc
or
arpl
js
pop
and
add
dec
sbb
outs
and
push
adc
jne
imul
push
ds
sub
data16
jle
xor
aas
inc
and
dec
or
jg
jne
push
xor
dec
or
ins
daa
ja
push
add
xor
cmp
jl
push
cmp
cs
or
push
push
push
and
push
sub
inc
and
cmp
inc
xor
or
dec
or
sbb
popf
retf
xchg
cdq
cli
mov
lds
(bad)
xchg
in
in
ret
xchg
ror
xchg
int
loop
(bad)
mov
(bad)
cdq
test
lock
and
clc
mov
sar
clc
sub
shl
rcr
sbb
dec
sub
push
sbb
popf
icebp
lods
retf
mov
xchg
rcl
jle
jo
dec
cs
ds
cmp
and
jns
js
pop
pop
inc
push
pop
or
pop
jl
pop
adc
push
sub
jge
bound
jae
push
add
imul
xor
outs
add
outs
sbb
inc
sub
add
pop
add
push
dec
cmp
cmp
sub
gs
movq
jno
push
aaa
je
popa
sub
jl
bound
or
dec
and
dec
aas
jbe
popf
neg
mov
jmp
in
movs
out
mov
scas
(bad)
mov
loope
neg
rcr
clc
call
sar
mov
fwait
lock
jmp
retf
popw
inc
add
push
xor
dec
add
jne
push
xor
popf
leave
call
ror
mov
mov
cli
nop
shl
loope
ror
sahf
fidivr
retf
mov
sti
mov
out
ret
xchg
fdivr
leave
(bad)
in
xchg
clc
cwde
cli
xchg
loope
les
aad
les
sar
(bad)
hlt
xchg
not
movs
leave
fstp
cmc
cmps
int
(bad)
mov
stos
in
movs
ret
and
xchg
out
ret
mov
xchg
ror
fcom
xchg
repnz
scas
ret
fnstsw
(bad)
xchg
(bad)
mov
rol
mov
scas
out
sti
cwde
jecxz
in
mov
(bad)
les
hlt
mov
mov
leave
movs
fidivr
jmp
xchg
loopne
sar
arpl
dec
sub
push
and
dec
and
jbe
bound
dec
outs
ss
jns
pop
pop
ja
imul
pop
aaa
push
sub
bound
arpl
inc
add
dec
sbb
cmp
or
add
inc
aas
push
xor
dec
add
push
push
xor
jl
jg
pop
or
jns
pop
xor
sub
popa
add
jno
push
jne
outs
or
adc
cmp
xor
pop
das
data16
ins
cs
or
dec
adc
pusha
cmp
jg
imul
es
daa
addr16
push
adc
jle
push
xor
inc
es
xor
push
dec
or
dec
sbb
jno
jbe
push
adc
inc
and
pop
adc
or
pusha
cmp
push
dec
add
jbe
js
push
ss
es
and
cmp
popa
or
inc
pop
pop
push
inc
adc
pop
add
outs
sub
pop
cmp
dec
cmp
imul
or
popa
sub
aaa
push
adc
jg
or
adc
dec
and
or
and
inc
push
push
xor
outs
and
in
out
in
fild
out
lods
idiv
out
stc
call
retf
movs
xlat
sahf
repnz
test
mov
in
cwde
int3
and
cmc
lods
out
(bad)
cmps
fidiv
stc
xchg
out
xchg
scas
lds
out
loopne
sti
cwde
ficom
fdivr
mov
rcr
mov
std
cwde
fdivr
shl
(bad)
jmp
repz
mov
xchg
fidivr
imul
fdiv
repnz
fidivr
jmp
pushf
stc
mov
retf
fnsave
sti
xchg
shl
in
fwait
leave
test
lahf
cld
mov
iret
mov
lock
out
out
sar
mov
cdq
loop
(bad)
mov
test
mov
lods
out
cld
xchg
cmc
mov
xchg
iret
or
pushf
loope
les
mov
cli
mov
fild
in
retf
mov
test
stos
out
(bad)
neg
shr
scas
icebp
mov
fdivr
lds
neg
sar
enter
jmp
add
fdiv
jecxz
lock
stc
mov
nop
retf
mov
shl
iret
test
cdq
not
into
mov
mov
xchg
xlat
mov
xchg
shl
fstp
jmp
mov
stc
mov
and
pop
daa
inc
add
outs
or
sbb
jbe
dec
and
xor
sbb
xor
push
push
inc
and
jg
push
adc
jne
ja
fs
jge
imul
jnp
push
sub
inc
and
jne
jp
je
dec
and
push
push
jb
push
jo
sub
sub
ja
push
aaa
dec
and
ja
dec
daa
pop
aaa
pop
pop
jne
imul
jo
imul
push
popf
fstp
ret
mov
cwde
repnz
xchg
enter
mul
fisttp
fnstcw
loope
in
cmp
xchg
ret
stos
enter
shl
ins
add
push
sub
push
dec
push
pop
or
sub
aaa
push
sub
or
bound
jp
jno
arpl
push
cmp
inc
add
jne
outs
cmp
sbb
sub
and
fs
jo
jb
imul
je
dec
adc
push
pop
sub
dec
xor
pop
cmp
adc
dec
cmp
adc
inc
add
adc
push
add
push
xor
sbb
push
xor
dec
push
push
data16
sub
jp
jne
push
sbb
popf
aad
cli
mov
shr
xchg
fstp
jmp
(bad)
sahf
cmc
mov
stos
les
mov
mov
lods
jmp
mov
xchg
in
xchg
div
enter
leave
mov
jmp
(bad)
(bad)
cmc
xchg
rcr
(bad)
cmps
les
jmp
movs
icebp
test
lahf
inc
stos
sar
sbb
dec
sub
addr16
adc
outs
pop
je
jp
pop
cmp
sub
inc
xor
outs
add
sub
add
bound
jne
push
dec
add
add
pop
addr16
pop
sub
pop
add
and
cmp
adc
push
push
and
inc
sbb
dec
cmp
cmp
inc
and
jle
ins
or
pop
aaa
dec
daa
dec
pcmpgtw
jns
arpl
inc
or
jle
dec
or
jl
jle
popf
aam
ret
test
and
clc
mov
mov
xchg
fnstenv
mov
jmp
loope
(bad)
mov
xchg
aad
shl
mov
out
xchg
(bad)
sahf
cld
nop
jecxz
(bad)
mov
fild
call
cdq
shl
loope
shl
repz
xchg
lds
in
call
scas
shl
xchg
xchg
mov
(bad)
cs
stc
and
jmp
lods
iret
scas
std
mov
movs
fdiv
out
mov
fidivr
mov
(bad)
loop
loopne
push
sahf
cli
mov
rol
scas
retf
xchg
sti
xchg
icebp
lahf
out
mov
test
fisub
jecxz
sti
xchg
hlt
xchg
cli
test
mov
cld
mov
fimul
add
in
clc
xchg
repz
stc
mov
test
repz
fisttp
shl
in
stc
xchg
not
mov
out
cmps
hlt
mov
aam
icebp
mov
out
mov
mov
lods
ret
mov
fidivr
rcr
mov
lods
xlat
mov
call
mov
(bad)
xchg
cmps
in
cli
fist
aad
xlat
mov
(bad)
sbb
mov
out
fist
in
shl
cmps
out
xor
hlt
mov
xchg
retf
mov
enter
xor
outs
add
(bad)
mov
(bad)
mov
xchg
shl
outs
es
pop
and
and
push
xor
sub
arpl
inc
or
jg
ins
or
cmp
push
and
js
popa
pop
cmp
xor
inc
or
outs
sub
jge
popa
push
outs
or
adc
dec
and
outs
das
jbe
ins
cmp
aaa
dec
sub
inc
add
ja
ins
add
pop
and
arpl
inc
adc
jns
push
das
dec
or
addr16
adc
jle
inc
sub
cmp
adc
sub
dec
push
dec
sub
ja
pop
sbb
popf
call
int3
mov
push
cs
xor
pop
cmp
popf
repnz
lock
out
cmps
retf
lods
out
mov
xchg
fimul
(bad)
fidivr
iret
mov
out
std
mov
fild
idiv
in
out
cmc
mov
call
mov
scas
cli
mov
mov
xchg
aad
hlt
xchg
call
cwde
sar
jecxz
sti
lods
stc
stos
(bad)
lock
out
in
sti
mov
mov
(bad)
sahf
(bad)
test
movs
lock
retf
scas
jmp
mov
xchg
jmp
xchg
test
mov
rcr
enter
rcr
int3
test
mov
(bad)
xchg
icebp
mov
scas
loope
rcr
lds
in
xchg
stc
(bad)
leave
scas
in
mov
movs
idiv
ficomp
mov
mov
xchg
fidiv
loop
cli
mov
lods
fmul
cmps
ret
sahf
repz
jmp
scas
(bad)
scas
out
test
cdq
rol
ret
sahf
(bad)
lods
jmp
repz
cld
sahf
repnz
loop
les
out
stc
xchg
out
(bad)
retf
mov
jmp
mov
int
call
adc
cwde
shl
(bad)
pushf
lock
fnstenv
out
cld
test
fdivr
repz
sbb
jno
gs
jg
pop
or
cmp
xor
je
pusha
add
jns
pop
daa
dec
es
ins
outs
sbb
pop
and
dec
sub
add
popf
in
cmps
lds
pop
(bad)
fisub
ret
stos
jmp
sub
(bad)
mov
ficomp
lock
jmp
lock
lds
(bad)
out
xchg
call
sti
stos
clc
(bad)
aad
cli
and
out
test
mov
fisub
cli
mov
fimul
(bad)
cmps
jecxz
rol
call
mov
std
test
lock
mov
fnstenv
loop
icebp
call
aam
hlt
mov
rcr
iret
test
jecxz
repz
xchg
jecxz
cld
sahf
out
ret
scas
int3
mov
mov
in
hlt
sahf
fdivr
out
mov
xchg
shr
aad
out
mov
fistp
mov
int3
test
mov
fdiv
xchg
(bad)
mov
stos
loop
sbb
push
push
ja
arpl
addr16
ja
pop
xor
pusha
pop
jge
push
sub
inc
pop
sbb
ins
or
add
dec
xor
jo
push
or
inc
bound
inc
ds
sbb
ins
or
jnp
jno
dec
and
inc
cmp
push
add
push
ins
push
dec
add
ds
cs
sub
xor
imul
push
push
dec
sbb
pop
ins
or
data16
push
xor
push
adc
inc
and
jg
jl
pop
adc
(bad)
sub
inc
and
xor
pop
sub
ja
jbe
push
or
push
ins
or
push
sbb
sub
pop
jg
jl
push
sub
and
push
cmp
ins
adc
jl
pop
cmp
jb
jl
inc
sub
dec
push
push
jb
push
cmp
adc
or
outs
push
push
aas
inc
das
inc
pop
popf
fiadd
in
retf
xchg
fidiv
in
jmp
mov
test
into
call
rcl
mov
mov
mov
rcr
mov
fdivr
out
call
stos
rol
mov
nop
fistp
into
mov
xchg
call
mov
mov
in
cmps
mul
mov
mov
call
mov
in
mov
pushf
aam
xlat
mov
retf
pop
movs
loopne
les
dec
iret
mov
cdq
lds
sbb
je
push
xor
dec
sub
adc
fs
add
inc
or
js
dec
pop
bound
inc
ds
sub
ja
cmovg
cmp
jo
dec
add
js
jbe
dec
sub
pop
ds
pop
adc
add
inc
and
cmp
jae
push
sbb
outs
sub
leave
stos
retf
mov
sbb
push
adc
jp
popf
(bad)
mov
sar
jmp
lahf
(bad)
mov
mov
test
xchg
cdq
fst
(bad)
mov
retf
mov
mov
xchg
rol
jmp
call
loopne
out
cdq
sar
fld
fnstsw
int3
mov
pushf
in
(bad)
out
mov
icebp
xchg
shl
inc
loop
in
mov
stos
int
ret
mov
sbb
cmp
push
adc
adc
outs
or
push
cmp
pop
cs
pcmpeqd
ja
dec
push
push
sbb
outs
xor
inc
push
and
push
xor
cmp
pusha
sbb
pop
cmp
and
imul
add
loopne
sar
sub
cmc
cdq
aad
lock
sbb
xchg
push
add
pop
repnz
lahf
ds
xor
xchg
imul
nop
mov
mov
shl
pop
pop
mov
repz
jmp
cmp
or
jnp
test
lea
push
into
mov
pop
fcmovb
retf
sahf
sbb
xchg
cmp
(bad)
pop
gs
mov
mov
jmp
test
dec
shl
pop
aas
mov
xchg
stc
out
ds
jge
mov
mov
lahf
inc
dec
adc
iret
jno
ret
out
shl
xchg
pop
iret
stos
dec
outs
or
shr
xor
jno
into
mov
push
adc
jnp
outs
imul
jge
js
xchg
bound
aad
not
adc
lea
pop
or
or
in
ins
fmul
push
enter
cmps
nop
retf
sbb
mov
push
in
movs
imul
sub
lea
fdiv
out
scas
mov
sub
pop
jmp
test
sub
movs
mov
mov
add
mov
sub
clc
sub
inc
sub
xor
mov
in
jb
dec
out
out
lds
ss
lds
fisttp
mov
and
xchg
push
push
jle
int3
add
mov
loop
jle
xchg
jle
dec
ins
jg
int
(bad)
mov
scas
xchg
push
inc
sub
retf
shl
in
nop
push
js
mov
pop
push
push
pop
cmp
cdq
fild
mov
mov
dec
mov
cmp
lods
and
dec
imul
ja
leave
jecxz
dec
inc
xchg
add
push
das
ds
push
pop
mov
dec
pop
iret
adc
push
test
shr
push
repnz
add
push
jl
fsub
iret
pop
repnz
popf
aad
out
fwait
xchg
adc
popa
stos
fs
fs
dec
(bad)
push
test
ret
xchg
inc
aaa
es
jp
mov
out
push
repnz
in
out
rdpmc
cmps
retf
rol
shl
mov
aam
enter
loope
int3
in
aam
pop
xor
mov
and
adc
ss
dec
bound
push
cmp
dec
sbb
mov
and
dec
push
and
mov
add
pop
xchg
mov
shr
test
adc
or
mov
adc
adc
or
and
nop
enter
jge
xchg
xchg
jno
xor
leave
rcl
mov
pop
pop
and
pop
fldcw
jnp
cmp
outs
and
dec
xchg
movs
adc
push
test
retf
rol
pop
inc
iret
cmp
mov
adc
iret
mov
dec
pop
mov
inc
pusha
loopne
ror
push
out
or
setno
jl
repnz
mov
mov
mov
cmp
cld
sbb
mov
clc
push
out
and
inc
cmps
pop
sub
push
pop
test
gs
movs
lahf
fisttp
inc
in
lods
pop
ins
fnsave
into
pop
push
xchg
pop
pop
cmp
xchg
sbb
push
call
cld
cmc
xlat
xchg
adc
retf
dec
shr
cli
sbb
clc
pop
jmp
mov
aam
rcr
push
cwde
in
dec
adc
das
inc
mov
in
shl
pop
add
mov
dec
das
push
dec
fcomp
xchg
data16
sub
(bad)
jo
push
push
imul
push
mov
and
jecxz
(bad)
mov
data16
fld
sub
imul
fwait
popf
(bad)
jns
or
sub
ret
lea
xor
sub
and
cmp
out
les
je
fsubrp
jge
cmc
xchg
pop
test
test
loopne
push
xchg
ins
push
mov
mov
mov
ins
sub
ins
(bad)
pop
fidivr
sar
jmp
aad
dec
push
mov
fst
movs
retf
cmp
mov
push
mov
add
inc
xor
sbb
iret
daa
xor
dec
(bad)
pusha
mov
pushf
cmp
loopne
dec
mov
ds
stos
movs
dec
pop
mov
mov
dec
fwait
in
pop
cmp
jns
mov
mov
mov
aas
or
lods
aas
pop
retf
xor
mov
mov
inc
dec
and
and
sahf
js
sahf
mov
cmps
fisubr
jp
ds
dec
ins
inc
enter
pop
sub
js
int
mov
stos
stos
sub
ins
mov
pop
outs
sub
xor
ins
xchg
scas
sbb
mov
loopne
movs
or
cmp
cdq
xchg
movs
ds
fidiv
dec
pusha
repz
sbb
data16
sbb
aaa
data16
pop
jbe
(bad)
xor
in
push
cwde
sbb
ins
adc
mov
xlat
mov
aam
aaa
mov
cmps
mov
sub
(bad)
push
mov
mov
pop
jmp
retf
rcr
xchg
movs
adc
call
test
out
xchg
cmc
cmp
dec
push
outs
mov
out
sbb
test
ins
fs
(bad)
jmp
sub
add
out
xchg
dec
inc
pop
or
pop
add
rol
or
lods
in
out
cmc
icebp
ins
mov
mov
sub
stos
dec
dec
mov
arpl
je
xchg
(bad)
and
cmp
xchg
cmp
lock
pusha
mov
pop
in
stos
jbe
clc
bound
fs
add
jg
push
push
or
(bad)
push
inc
or
inc
ds
add
ins
(bad)
cmp
in
repz
aad
clc
jmp
jp
div
xchg
push
mov
or
loopne
jnp
lock
lods
cmp
add
inc
xchg
fstp
mov
xchg
inc
jbe
xchg
add
jg
pop
sbb
inc
mov
or
jecxz
rcr
jmp
inc
js
xchg
pop
lods
mov
cli
cs
jno
stos
or
dec
retf
ret
cwde
push
sbb
lods
fnstenv
push
cmp
jmp
and
in
addr16
pushf
addr16
shl
cmp
dec
adc
cmp
dec
test
out
fnstcw
add
push
iret
das
repnz
int
or
lahf
in
xchg
mov
dec
test
inc
movs
call
inc
leave
pusha
fisub
sbb
pusha
sub
fs
pushf
mov
outs
outs
lods
ficom
test
les
test
out
push
push
cmp
and
mov
loope
push
aas
adc
adc
imul
jnp
pusha
fwait
cwde
dec
xchg
mov
cmp
in
sahf
addr16
cmp
call
jno
ss
repnz
or
cmp
xor
jnp
push
mov
ds
sub
inc
adc
int3
cwde
sub
mov
xlat
lods
push
push
mov
shl
ss
loope
loop
(bad)
ds
push
mov
mov
mov
(bad)
mov
or
dec
cmps
cmp
inc
hlt
mov
or
ffree
into
xor
test
into
add
mov
sbb
mov
inc
fsubp
imul
mov
add
mov
pop
mov
mov
push
xor
pop
inc
repnz
mov
and
div
mov
add
sub
hlt
jle
cmp
sti
ds
adc
xor
daa
push
push
ret
mov
pushf
out
shl
xor
shl
mov
movs
and
jecxz
sahf
jl
arpl
cdq
sub
hlt
into
jmp
xchg
rcr
je
sbb
sub
rcl
retf
mov
test
mov
xlat
sbb
sar
push
imul
mov
mov
or
push
mov
in
dec
cmp
es
stos
stc
sar
lods
push
dec
call
jae
push
xlat
adc
jge
xchg
hlt
xlat
adc
ret
jno
sub
push
fst
pop
mov
mov
inc
dec
or
int3
xchg
daa
push
sbb
mov
xchg
push
popf
sbb
xchg
ins
mov
call
in
adc
and
inc
add
ja
inc
sub
add
das
call
loope
xchg
and
adc
mov
pop
mov
repnz
scas
rcl
sbb
cmp
scas
sub
lods
test
or
sub
mov
outs
mov
push
(bad)
cmp
test
pop
push
or
cmc
inc
xchg
and
sbb
push
add
ficomp
dec
sub
cmc
shr
xor
or
cdq
repz
icebp
and
sbb
retf
add
mov
push
sbb
(bad)
jb
mov
rol
dec
pop
sahf
xor
in
dec
loop
sbb
pop
sbb
push
or
or
jne
add
leave
clc
fdiv
add
jle
cli
mov
push
push
inc
push
pop
out
popa
je
(bad)
cwde
xor
mov
fwait
(bad)
ret
dec
and
inc
std
jle
icebp
outs
mov
fisttp
mov
mov
pop
std
pop
mov
jge
mov
imul
sti
mov
test
dec
ret
movs
pop
cli
adc
aaa
call
dec
or
cmp
shl
(bad)
mov
(bad)
mov
loope
nop
lea
or
push
cmp
repz
aad
bound
or
sub
mov
fs
mov
jge
and
adc
pop
push
cmp
(bad)
adc
mov
hlt
xor
outs
ss
jo
pop
adc
arpl
pop
add
push
adc
pop
fcmove
push
sub
ds
aam
pop
add
popf
lods
daa
popa
ja
cmc
std
lahf
mov
loop
jb
nop
xlat
pop
push
sub
enter
jl
ja
fisttp
pop
rcr
ret
jbe
sbb
mov
imul
xchg
mov
cs
push
cmp
adc
and
clc
std
in
mov
out
scas
cmp
pop
stos
movs
stos
addr16
mov
mov
stos
shr
cmp
sub
in
les
(bad)
neg
xlat
sub
cmp
fdecstp
shl
popa
jae
loopne
popf
mov
pop
push
bound
xor
outs
mov
rol
inc
test
addr16
popa
aas
ret
arpl
aad
sar
cmp
fist
retf
cmc
bound
fwait
and
push
xor
jne
outs
aaa
cmp
fld
pop
adc
add
push
stos
js
vmwrite
xchg
test
mov
gs
inc
stos
sbb
push
mov
neg
xlat
fsubr
xchg
into
jecxz
jnp
pop
cmp
fs
movs
sub
clc
in
xchg
dec
sbb
sti
adc
jp
ret
aas
add
test
outs
jecxz
add
inc
addr16
mov
cdq
cmp
repz
lea
push
mov
sbb
xor
aaa
pop
dec
push
sbb
(bad)
pop
fwait
shr
sbb
nop
inc
rcr
loopne
jge
pop
cmc
out
retf
jmp
dec
ins
xchg
outs
cmc
jp
jge
sbb
loop
xor
jecxz
add
cmp
cmp
nop
fnstsw
mov
int3
adc
jle
inc
lea
jp
sub
test
loop
cld
cmp
scas
inc
pop
fdivr
lods
popf
int
js
mov
inc
dec
jmp
ret
sub
push
xor
sti
push
adc
pop
data16
add
jp
loop
mov
push
movs
retf
lock
pop
test
lods
and
pusha
ins
mov
out
sub
xlat
or
outs
pop
clc
or
sub
push
jb
cmp
push
clc
lahf
mov
pop
xor
test
jmp
lods
sbb
and
movs
gs
adc
mov
jecxz
not
aaa
pop
jp
retf
sbb
sub
stc
pop
add
xchg
pop
dec
les
mul
dec
push
pop
sahf
shl
or
cmps
sub
pusha
ins
pop
sbb
pop
bnd
stos
iret
repz
mov
jne
sbb
jge
jne
(bad)
ins
xchg
stos
sub
mov
dec
sti
ja
xchg
dec
clc
loop
in
movs
test
cmp
and
out
mov
ins
stos
jnp
mov
jmp
dec
xor
xchg
mov
les
out
loope
sub
lea
adc
retf
retf
ss
mov
inc
cmp
cs
mov
dec
retf
mov
mov
or
(bad)
mov
arpl
out
(bad)
out
sahf
xor
rcr
fucomi
cmps
popf
clc
arpl
mov
pop
adc
xor
sub
xor
sbb
xor
jg
scas
jge
inc
xlat
sub
stos
jg
movs
cld
inc
ins
dec
xor
dec
cmp
in
xchg
cdq
xchg
sub
cmps
xchg
movs
retf
xor
retf
movs
and
sub
cli
xchg
push
push
xchg
and
repnz
adc
ret
loopne
lods
bound
out
aad
xor
xor
xchg
out
pop
shl
inc
add
jg
aam
(bad)
mov
inc
ret
cwde
or
pop
and
dec
mov
das
leave
adc
popf
ret
jg
add
pop
push
adc
movs
push
je
in
es
or
sbb
xchg
mov
ds
xchg
xchg
mov
ins
aas
push
repz
icebp
and
and
jae
sub
stc
add
lahf
out
pop
pop
mov
dec
adc
js
and
xchg
ror
fild
aas
add
mov
dec
mov
and
cmovno
sub
adc
movd
lods
sub
js
sahf
into
jmp
mov
push
add
call
test
push
jbe
addr16
pop
call
push
sahf
jmp
int3
push
(bad)
xchg
sbb
mov
hlt
jg
(bad)
inc
pop
inc
(bad)
ror
mov
mov
lea
cwde
cli
mov
cmc
or
mov
mov
inc
xor
clc
sbb
bound
fidiv
mov
aam
out
push
rcl
sbb
xchg
adc
add
pop
mov
sub
fdivr
mov
mov
pop
retf
in
sbb
mov
mov
add
aad
cmps
mov
and
mov
call
in
loope
idiv
xchg
fidiv
mov
cs
push
fmul
out
fld
xchg
je
mov
mov
or
or
icebp
or
sahf
mov
push
mov
ins
loope
pop
pop
dec
jne
adc
fsubr
inc
xchg
cs
push
add
mov
mov
(bad)
and
dec
push
pop
inc
aaa
pop
fadd
into
xchg
cwde
out
sahf
cmp
in
in
fnsave
cmp
mov
lock
sbb
pop
popa
repnz
adc
lods
mov
pop
imul
retf
iret
mov
mov
and
xor
push
cmp
dec
imul
lds
aaa
pusha
xchg
jae
nop
sti
sbb
mov
mov
xor
sbb
not
mov
inc
fild
pop
sub
mov
xlat
test
out
adc
pushf
fdivr
or
movs
push
pop
sub
stos
jnp
xchg
adc
pop
jno
(bad)
fdivr
retf
lds
push
sar
pop
xchg
ins
sar
arpl
cmp
call
dec
mov
in
pop
xchg
bound
sbb
test
cmp
pop
ins
sahf
push
ror
pop
int
or
arpl
pop
push
js
(bad)
in
(bad)
div
(bad)
mov
mov
sub
xchg
xchg
popf
jo
and
nop
and
call
mov
sbb
lea
dec
mov
test
xchg
sbb
mov
cmp
es
int
xor
pop
cmp
lea
cmp
xchg
ret
mov
ret
add
pop
sbb
outs
hlt
cmp
scas
push
xchg
jp
(bad)
in
xor
in
out
mov
pop
jg
push
cmp
aam
pop
arpl
fsubr
fs
scas
test
sub
bound
iret
adc
sbb
icebp
add
inc
jmp
jecxz
mov
loopne
test
dec
inc
mov
and
aaa
pusha
fcom
inc
call
lds
or
lods
push
mov
push
sti
push
lods
out
adc
aas
mov
jo
xor
adc
pop
dec
jno
cdq
idiv
ss
mov
(bad)
fist
jno
xchg
fmul
in
mov
ret
aad
mov
fisub
add
pop
xchg
push
and
mov
call
outs
lds
in
cmp
pop
jmp
jbe
sbb
xor
push
repnz
adc
adc
clc
jg
xor
in
test
mov
xlat
sub
mov
push
jecxz
repz
aas
adc
mov
add
push
sbb
sub
xor
mov
movs
mov
mov
xlat
imul
call
adc
mov
outs
gs
xchg
inc
repnz
ins
icebp
es
bound
xchg
nop
mov
shl
jo
cmp
aad
(bad)
ins
cmps
jbe
rol
push
int3
outs
jl
loopne
enter
jns
imul
push
dec
jne
scas
add
cwde
dec
cmps
mov
adc
les
cdq
pop
hlt
xor
fs
int
xlat
test
add
mov
out
xor
add
stos
add
(bad)
adc
mov
sbb
mov
add
pop
ds
mov
loop
adc
imul
cld
(bad)
ror
cmc
shr
or
dec
push
aaa
add
fcmovnu
cwde
jl
hlt
sbb
cli
or
fcom
out
inc
cmps
inc
push
into
sbb
mov
push
push
pop
fisub
(bad)
or
sti
pusha
in
pusha
mov
movs
pop
sti
cli
inc
and
add
aad
or
sahf
scas
cmp
adc
ror
int
fmulp
loop
or
cmp
aas
and
push
lock
jne
jl
cmp
push
jbe
pop
push
fbld
hlt
(bad)
ins
adc
es
js
das
out
shl
and
add
jle
imul
in
repnz
movs
add
sbb
cld
ret
jne
loopne
sbb
pop
icebp
adc
jns
ja
xor
xor
xor
ins
ret
rcl
xchg
aaa
push
inc
les
push
xor
arpl
fwait
das
dec
fisttp
retf
xchg
inc
fs
lods
arpl
cmp
dec
mov
push
fsubr
cli
into
push
out
jmp
mov
mov
dec
cmp
pop
into
cmp
ds
dec
fwait
push
dec
cld
retf
shl
sahf
rol
test
add
es
sbb
fisttp
(bad)
pushf
shr
mov
mov
jmp
or
cld
bound
popf
ins
dec
dec
dec
bound
nop
std
cmp
out
jbe
sub
lods
and
xchg
and
movs
adc
push
cmp
movs
xor
popf
and
(bad)
enter
test
pop
pop
add
dec
fild
sub
sub
repz
push
and
je
mov
cwde
fldenv
(bad)
jns
mov
xchg
pop
cmp
or
pop
jb
icebp
or
scas
fimul
jl
nop
pop
inc
jo
cmps
mov
jmp
cmc
fiadd
dec
pop
push
add
inc
lahf
(bad)
jecxz
jo
push
mov
pop
jae
mov
or
(bad)
inc
je
aas
bnd
mov
add
imul
xchg
stos
sbb
clc
xchg
dec
pop
loopne
mov
add
mov
addr16
std
and
adc
fiadd
cwde
pop
lahf
push
mov
add
into
aad
mov
faddp
pop
inc
sbb
adc
jmp
fwait
and
not
leave
add
shr
push
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
pop
add
movs
or
add
push
je
imul
add
sbb
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
push
mov
add
cli
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
pop
add
add
add
add
fadd
rol
add
add
push
add
(bad)
add
or
jmp
add
add
add
or
cwde
add
or
movs
add
push
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
push
add
add
push
add
dec
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
fild
cmc
add
es
mov
push
mov
push
pop
add
add
add
push
mov
pop
add
push
add
pop
add
add
dec
add
add
add
add
add
pop
add
add
pop
add
add
or
or
pop
or
push
add
add
or
or
or
push
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
adc
xlat
add
adc
add
outs
add
add
add
xchg
add
add
add
add
xchg
xchg
push
add
add
add
add
add
add
jg
add
add
add
add
test
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
or
inc
sub
add
add
add
pop
sub
add
add
add
add
add
add
add
lldt
add
add
xchg
sbb
or
ltr
add
add
add
add
add
add
add
verw
add
add
add
add
add
add
xchg
add
dec
add
add
add
add
xchg
dec
add
adc
test
add
add
add
add
xchg
add
push
add
add
sub
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sbb
add
add
add
xchg
or
jb
sbb
(bad)
add
add
xchg
or
add
sbb
in
add
add
xchg
or
jl
sbb
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
test
add
add
add
add
add
pop
pop
add
add
pop
pop
add
add
pop
add
add
add
xchg
pop
add
add
pop
add
add
add
pop
pop
add
add
test
add
add
mov
add
mov
xchg
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
add
xchg
push
add
ins
add
jbe
mov
add
mov
nop
add
mov
add
add
add
add
add
add
std
add
or
icebp
add
add
push
test
inc
sbb
sub
add
sbb
cmp
mov
push
add
or
cmp
popa
push
test
adc
sbb
add
add
add
add
add
add
push
mov
inc
add
add
push
add
add
push
xchg
add
add
push
sbb
adc
inc
add
add
pop
sub
add
sub
add
pop
xor
sbb
inc
pop
push
add
xchg
push
add
add
cmp
push
add
inc
add
mov
dec
add
add
add
add
add
add
add
pop
pop
add
add
pop
xor
adc
fild
icebp
add
add
pop
test
arpl
or
sbb
icebp
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
pushf
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
arpl
add
ja
dec
add
rol
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
ins
jo
dec
jae
cs
add
outs
addr16
ins
add
ins
imul
jb
xor
inc
outs
jb
xor
push
gs
jne
arpl
add
ins
imul
outs
jo
jb
imul
outs
jb
imul
gs
add
push
arpl
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
imul
jb
dec
imul
ins
dec
imul
imul
jbe
outs
je
jb
jae
ins
imul
ins
xor
imul
imul
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
dec
imul
jp
popa
inc
ja
inc
xor
dec
imul
jp
popa
inc
ja
inc
xor
outs
je
jb
jae
bound
je
outs
xor
inc
ins
imul
xor
cmp
push
pop
inc
dec
push
add
je
outs
outs
xor
push
gs
inc
push
add
ins
bound
outs
js
pop
push
gs
arpl
push
popa
ins
jne
inc
push
add
dec
imul
xor
popa
dec
add
imul
ins
xor
ins
imul
bound
dec
inc
dec
add
jb
xor
outs
popa
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
dec
imul
ins
add
imul
ins
xor
inc
outs
ins
bound
outs
js
arpl
bound
outs
js
add
ins
bound
outs
js
add
je
outs
outs
add
je
outs
outs
xor
push
dec
imul
jp
popa
inc
ja
inc
xor
imul
jp
popa
inc
ja
inc
xor
inc
outs
jb
xor
outs
popa
add
inc
dec
inc
xor
addr16
je
inc
dec
dec
push
gs
xor
xor
inc
add
inc
push
jns
push
jo
xor
add
gs
xor
ins
imul
inc
jbe
cmp
inc
jb
imul
jns
inc
dec
xor
je
xor
push
dec
xor
dec
popa
bound
add
gs
xor
push
gs
inc
outs
js
je
js
inc
outs
js
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
jns
je
ins
cs
arpl
imul
imul
add
arpl
imul
jae
imul
imul
arpl
imul
outs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
jo
dec
jae
add
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
outs
fs
add
xor
inc
gs
bound
arpl
fs
jb
popa
jns
inc
jae
gs
bound
dec
outs
popa
add
je
inc
outs
jne
je
inc
outs
outs
ins
gs
outs
add
jb
outs
add
jae
outs
jae
outs
add
imul
ins
add
jae
gs
cs
jb
ja
outs
add
jae
gs
inc
outs
ins
outs
jb
add
ins
outs
jb
addr16
inc
jne
je
outs
dec
imul
je
inc
outs
outs
je
outs
ins
add
je
inc
outs
jb
inc
outs
ins
outs
jb
addr16
inc
popa
jb
inc
jb
jns
jae
je
dec
imul
jb
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
gs
add
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
push
imul
imul
jb
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
imul
imul
jae
je
inc
jne
outs
push
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
popa
fs
push
gs
inc
push
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
arpl
outs
jb
jae
add
push
jns
add
je
jns
gs
dec
gs
outs
fs
outs
outs
add
je
gs
outs
fs
dec
gs
outs
fs
popa
jae
add
jbe
imul
add
imul
jb
add
jb
outs
jb
addr16
inc
gs
jne
je
jae
je
inc
jne
jae
jb
inc
outs
arpl
je
ins
add
je
inc
outs
arpl
jae
je
inc
outs
popa
bound
add
je
dec
gs
imul
popa
arpl
outs
ins
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
dec
outs
je
jb
arpl
push
gs
inc
outs
js
popa
jae
add
je
dec
popa
js
outs
addr16
add
je
push
gs
fs
outs
ins
jns
jae
je
push
outs
jb
push
jb
jo
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
jbe
ins
jne
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
arpl
imul
jb
imul
inc
outs
fs
je
jb
bound
add
bound
push
inc
ins
dec
push
js
jb
jae
jne
arpl
add
add
add
jle
jle
sbb
jle
out
jmp
add
sbb
or
push
jle
out
add
dec
add
pop
sbb
add
pop
pop
add
push
or
ds
jle
add
sbb
jle
jle
sbb
arpl
mov
push
sbb
lea
dec
sbb
pop
jle
jle
or
push
or
jmp
pop
ins
call
ds
jle
ds
jle
mov
out
jle
jle
add
hlt
jle
dec
or
jle
jmp
push
dec
push
jg
jle
inc
mov
cmp
jle
mov
pop
or
cmp
out
jle
ds
out
mov
add
or
or
call
shl
pshufw
rcl
jle
or
rcl
sbb
mov
dec
shl
push
mov
aam
jle
rcl
add
add
sbb
pop
or
adc
sbb
add
or
jle
ins
call
add
jle
rcl
or
pop
or
push
or
sub
test
pop
jle
pop
pop
jle
jle
ds
mov
jle
ds
or
ds
jle
sbb
push
rcl
sub
jle
or
push
jmp
or
sbb
or
pop
pop
cmp
jle
mov
cmp
add
cmp
jmp
mov
push
jle
or
hlt
jle
dec
add
jle
mov
or
push
ds
jle
aas
push
inc
pop
add
jle
pop
pop
sbb
push
jle
ds
jle
jg
add
or
push
pop
pop
adc
jle
test
push
adc
jmp
and
push
ds
jle
sbb
or
sub
jle
jle
pop
pop
jle
out
jle
jg
test
dec
inc
mov
hlt
jle
cmp
scas
or
push
inc
mov
mov
push
jle
or
addr16
pop
dec
push
add
jle
or
pop
jmp
or
cmp
pop
ds
add
sub
test
push
ds
add
test
mov
jo
ds
jg
ds
add
jmp
cmp
jle
ds
cmp
ds
jle
or
sbb
hlt
jle
sbb
scas
cmp
hlt
jle
push
jle
sbb
add
or
out
aas
push
or
lea
or
and
ds
inc
pop
test
sub
jle
jle
inc
mov
or
dec
add
push
add
jle
add
push
jg
inc
mov
jle
out
jle
sbb
ds
ins
call
sbb
out
ds
or
jle
out
sbb
sbb
inc
pop
or
cmp
hlt
jle
pop
cmp
jle
add
or
cmp
mov
adc
out
shl
push
jle
or
add
hlt
jle
call
test
adc
dec
scas
gs
ds
test
push
add
add
pop
adc
ds
jle
dec
push
add
dec
mov
jle
mov
jle
add
ds
jle
hlt
jle
arpl
sbb
hlt
jle
lea
or
imul
add
adc
mov
sbb
ds
cmp
ins
call
aas
push
sbb
adc
jle
jle
jle
jle
inc
pop
hlt
jle
push
ds
add
jle
inc
mov
jle
cmp
test
push
scas
gs
gs
pop
or
pop
jle
shl
mov
(bad)
push
jle
hlt
jle
push
cmp
inc
pop
scas
add
adc
or
jle
hlt
jle
mov
jle
add
jle
aas
push
jle
ds
jle
scas
gs
aam
jle
dec
push
jle
add
cmp
cmp
pop
scas
gs
jle
dec
add
jle
inc
mov
jle
pop
pop
jg
jle
hlt
jle
push
test
arpl
dec
aam
jle
ds
jle
or
sbb
sbb
dec
or
jle
hlt
jle
pop
or
ins
call
ds
add
jle
push
jle
rcl
call
jmp
gs
pop
pop
sbb
jle
adc
ds
sbb
pop
cmp
jle
jle
jle
add
jle
test
cmp
addr16
adc
jle
pop
pop
or
movd
jg
or
jle
mov
adc
cmp
cmp
jle
or
push
cmp
jle
add
out
dec
push
jle
out
ds
cmp
mov
jle
pop
pop
jle
pop
pop
hlt
jle
sbb
add
test
adc
pop
jle
cmp
sbb
cmp
addr16
pop
add
jle
sbb
sub
scas
or
hlt
jle
and
jle
jle
jle
or
jle
mov
gs
adc
jle
scas
gs
aas
push
jle
jle
add
jo
jle
jmp
push
jle
jmp
lea
jle
add
jle
inc
mov
pop
pop
out
jle
cmp
jle
pop
pop
adc
ds
jle
ds
jmp
sbb
or
mov
jle
push
jle
sbb
jle
out
cmp
aam
jle
add
jle
aam
adc
jle
jle
cmp
or
push
jg
mov
jmp
sub
inc
pop
jle
mov
jmp
push
ds
ins
call
jle
cmp
or
jle
sbb
push
add
test
push
ds
sbb
dec
add
ds
rcl
push
jle
adc
jle
test
push
test
adc
pop
pop
shl
mov
cmp
add
ds
sbb
push
cmp
jle
ds
jg
add
aas
push
shl
imul
lea
pop
hlt
jle
addr16
sbb
adc
jle
hlt
jle
or
imul
jle
hlt
jle
cmp
cmp
ins
call
dec
push
inc
mov
or
inc
pop
jle
or
push
jle
ds
inc
mov
jle
aas
push
inc
pop
add
hlt
jle
mov
jle
sbb
imul
dec
aas
push
add
jle
hlt
jle
push
cmp
hlt
jle
pop
jle
jle
or
jle
lea
jle
mov
jo
add
cmp
sbb
jo
ds
ds
ins
call
add
or
sbb
pop
cmp
sbb
jle
dec
ds
add
add
call
ds
aas
push
jle
jle
add
jle
jle
jle
ds
test
mov
pop
jmp
dec
jmp
add
shl
addr16
ins
call
inc
mov
jg
ds
shl
(bad)
pop
pop
pop
pop
jle
rcl
add
jle
jle
rcl
adc
jo
sbb
test
cmp
pop
jle
jle
add
jle
adc
jmp
dec
jmp
or
imul
push
shl
arpl
sbb
sbb
push
sbb
jle
xor
scas
add
or
jle
hlt
jle
(bad)
rcl
dec
out
rcl
pop
jmp
push
pop
pop
ds
pop
pop
mov
jmp
cmp
ds
jle
jle
cmp
sbb
add
mov
jmp
cmp
mov
mov
jle
or
add
or
inc
pop
jle
sbb
cmp
pop
or
out
jle
or
sbb
rcl
pop
add
or
push
jle
inc
mov
jle
cmp
hlt
jle
xor
push
jle
shl
pop
jle
jle
shl
jle
pop
jmp
add
ins
call
cmp
or
imul
dec
aam
jle
test
dec
rcl
pop
pop
pop
inc
pop
rcl
lea
shl
pop
hlt
jle
(bad)
push
dec
push
ds
sbb
jle
pop
pop
rcl
adc
shl
(bad)
pop
pop
or
pop
cmp
ds
add
inc
mov
rcl
cmp
addr16
rcl
pop
sbb
adc
aas
push
ds
inc
pop
ds
test
jle
push
sbb
lea
add
jle
ins
call
jo
out
or
adc
dec
jg
hlt
jle
push
jle
hlt
jle
push
cmp
ds
add
sbb
imul
and
or
pop
or
adc
add
out
jmp
push
rcl
push
rcl
cmp
dec
jle
shl
adc
shl
daa
jle
inc
pop
hlt
jle
adc
sbb
cmp
add
addr16
push
jle
ds
hlt
jle
push
ds
scas
add
hlt
jle
push
jmp
jle
dec
sbb
dec
jmp
push
mov
pop
pop
ds
add
ds
jle
inc
pop
or
push
shl
push
cmp
add
cmp
adc
jle
cmp
ds
jle
hlt
jle
(bad)
hlt
jle
pop
jg
or
dec
ds
ins
call
scas
gs
push
shl
dec
out
dec
push
jle
jle
jle
sbb
push
scas
add
sbb
addr16
pop
pop
adc
sbb
pop
sbb
dec
jle
jle
add
arpl
dec
or
inc
pop
add
sbb
cmp
jle
cmp
push
add
aas
push
hlt
jle
xor
add
test
adc
addr16
jle
jle
(bad)
jle
sbb
dec
aam
sbb
jle
push
scas
gs
jle
jle
jle
ds
add
ds
jg
ds
jle
jle
sbb
or
mov
aas
push
shl
pop
jle
ds
jle
jle
jle
jle
ds
jle
jle
jle
or
sub
ds
shl
push
jle
ds
ds
pop
pop
pop
pop
jo
or
pop
pop
jle
jle
test
add
and
hlt
jle
sbb
jle
jg
inc
pop
or
arpl
sbb
lea
jle
cmp
jle
jle
jle
add
push
or
sub
ins
call
scas
gs
jle
ds
sbb
push
hlt
jle
cmp
push
shl
sbb
sbb
call
jle
or
jle
hlt
jle
add
adc
jle
jle
jle
rcl
xor
jle
jle
ds
jg
pop
pop
test
push
test
sbb
or
jle
inc
pop
or
sbb
jle
shl
arpl
mov
dec
pop
pop
jle
hlt
jle
or
test
add
(bad)
hlt
jle
adc
jle
out
add
cmp
or
pop
pop
add
call
ds
or
jle
jle
hlt
jle
cmp
cmp
push
jle
pop
pop
pop
pop
adc
pop
pop
dec
push
add
inc
mov
pop
pop
pop
jle
jle
add
mov
add
or
scas
gs
ds
or
pop
pop
jle
jle
inc
mov
(bad)
push
jle
aam
test
pop
jle
jle
test
arpl
shl
pop
dec
push
jle
jle
sbb
ins
call
scas
add
imul
push
hlt
jle
dec
scas
add
and
dec
push
jle
jmp
mov
hlt
jle
(bad)
ds
inc
mov
sbb
inc
mov
adc
or
rcl
push
jo
jle
sbb
sub
imul
jo
add
arpl
ins
call
adc
jle
out
or
dec
mov
sbb
or
jle
add
jmp
push
jg
jle
jle
or
(bad)
aas
push
adc
adc
jle
jle
jle
cmp
ds
ins
call
jle
add
sbb
cmp
jle
push
sbb
pop
inc
mov
(bad)
shl
lea
and
ds
sbb
push
ds
jle
jle
shl
(bad)
aas
push
aas
push
jle
out
jle
sbb
add
cmp
hlt
jle
dec
test
or
mov
dec
jle
test
mov
push
ds
pop
pop
or
push
aam
ins
call
inc
mov
push
or
cmp
xor
aam
out
dec
push
jle
ds
add
gs
aas
push
or
pop
jle
jg
jle
dec
push
jle
hlt
jle
(bad)
hlt
jle
pop
or
add
add
cmp
pop
pop
pop
cmp
cmp
aam
shl
pop
jle
jle
inc
pop
scas
gs
mov
push
cmp
aam
out
jg
sbb
pop
jle
pop
pop
or
pop
cmp
add
cmp
lea
pop
pop
hlt
jle
gs
add
sbb
cmp
jle
ds
sbb
or
jle
jmp
adc
jle
aas
push
ins
call
rcl
dec
sbb
adc
dec
add
scas
or
lea
push
test
push
jle
hlt
jle
adc
jle
jle
jle
hlt
jle
adc
inc
mov
arpl
push
jle
or
cmp
add
jle
hlt
jle
jle
push
jo
ds
rcl
push
rcl
sbb
jo
ds
jle
or
out
ds
cmp
jle
pop
pop
jle
jle
add
hlt
jle
dec
jle
or
sub
or
mov
ds
hlt
jle
push
jg
jle
or
jle
or
push
add
sbb
mov
jle
or
push
jle
or
jle
add
pop
or
ds
add
hlt
jle
push
adc
pop
pop
hlt
jle
mov
push
add
sbb
cmp
jle
test
sub
or
ds
cmp
jle
aam
jg
jle
cmp
cmp
jle
ds
or
ds
or
cmp
sbb
hlt
jle
jle
dec
adc
inc
pop
sbb
jle
or
jg
pop
pop
dec
push
add
sbb
shl
or
lea
pop
pop
inc
pop
aam
or
ds
out
dec
push
dec
push
rcl
cmp
dec
mov
hlt
jle
sub
pop
sbb
ds
jle
dec
push
mov
shl
or
shl
cmp
push
sbb
or
out
jle
add
adc
jle
inc
mov
inc
pop
or
mov
add
hlt
jle
cmp
cmp
jle
pop
pop
add
or
mov
push
inc
pop
jle
scas
gs
add
sbb
pop
add
arpl
jle
aam
jle
ds
rcl
pop
jle
sbb
pop
sbb
ds
test
push
mov
add
sbb
mov
hlt
jle
lea
sbb
mov
inc
pop
or
pop
pop
test
add
or
hlt
jle
sub
or
call
or
pop
jle
jle
add
cmp
out
aam
jle
jg
ins
call
test
cmp
or
pop
sbb
mov
cmp
inc
pop
shl
push
add
shl
or
jmp
cmp
cmp
push
sbb
rcl
gs
pop
adc
jle
jle
ds
add
aas
push
inc
pop
jmp
jle
pop
jo
add
lea
add
mov
jmp
push
dec
push
jle
ds
jle
jle
sbb
dec
jg
jle
jle
jle
add
jmp
sub
jle
sbb
call
inc
mov
cmp
sbb
and
pop
out
jle
jle
hlt
jle
push
adc
jle
or
push
add
pop
sbb
jmp
mov
and
scas
or
test
push
shl
xor
rcl
lea
jmp
das
jle
adc
or
sub
jmp
pop
or
aas
push
or
scas
gs
cmp
or
gs
jle
pop
sbb
ds
ds
ds
add
dec
jg
or
adc
jle
jle
jle
aam
ds
add
scas
add
push
rcl
cmp
imul
ds
jle
ds
jle
or
or
hlt
jle
push
jo
jle
test
push
cmp
out
jle
scas
gs
jle
cmp
ds
jle
ds
aas
push
jle
pop
pop
cmp
jg
or
call
or
sub
push
ins
call
aam
jle
aas
push
jle
test
call
or
jle
jle
add
scas
gs
pop
jle
jle
hlt
jle
pop
rcl
xor
jle
jle
hlt
jle
sbb
jle
cmp
jle
rcl
push
hlt
jle
pop
jle
add
and
pop
jle
jle
jle
scas
gs
out
jle
sbb
add
cmp
sbb
jle
add
lea
rcl
cmp
aas
push
jo
jle
jmp
cmp
lea
sbb
sbb
push
jmp
adc
inc
mov
mov
jle
dec
add
ds
jle
test
lea
aas
push
jle
ds
jmp
pop
jle
jmp
push
test
dec
sbb
dec
jle
jle
jle
jg
jle
shl
jle
push
aas
push
jle
cmp
sbb
mov
push
jle
or
addr16
aam
adc
hlt
jle
push
scas
gs
pop
mov
hlt
jle
push
or
call
dec
push
ds
ds
hlt
jle
dec
aas
push
sbb
push
add
test
cmp
push
hlt
jle
sbb
push
inc
pop
jle
jmp
dec
or
pop
pop
jle
jo
add
hlt
jle
push
cmp
shl
cmp
jle
test
xor
add
inc
pop
jo
jle
cmp
jle
ds
adc
ds
add
pop
pop
jle
inc
mov
aam
jle
adc
jle
rcl
imul
shl
push
jle
add
call
inc
mov
push
pop
pop
jle
ds
jle
or
push
hlt
jle
push
test
pop
sbb
xor
jg
cmp
jle
ds
jle
or
pop
ds
ds
hlt
jle
gs
scas
gs
adc
jg
rcl
pop
add
jle
shl
pop
or
hlt
jle
push
ds
jle
or
cmp
shl
push
scas
gs
add
ds
jmp
push
inc
pop
or
cmp
jo
ds
ins
call
jle
add
hlt
jle
push
ds
sbb
mov
jle
aas
push
rcl
pop
shl
dec
jle
jle
or
sbb
cmp
jle
cmp
pop
pop
dec
push
jle
mov
scas
shl
push
or
jle
inc
mov
pop
jle
sbb
jle
pop
scas
gs
jle
ds
dec
push
hlt
jle
push
hlt
jle
push
test
pop
pop
jle
add
jle
jg
hlt
jle
push
jle
out
scas
gs
jle
ins
call
adc
or
gs
call
ds
jmp
adc
sbb
pop
dec
push
ds
scas
gs
pop
or
mov
push
dec
push
jle
or
sbb
scas
gs
jle
cmp
sbb
push
jle
jo
cmp
hlt
jle
sbb
ds
or
addr16
pop
or
push
add
dec
mov
jle
ds
add
jle
or
or
adc
cmp
or
sbb
mov
pop
jle
add
scas
rcl
cmp
dec
adc
jle
jle
or
ins
call
cmp
ins
call
out
rcl
pop
pop
pop
aas
push
or
jle
add
mov
out
sbb
cmp
mov
cmp
jle
add
cmp
jle
jle
or
jmp
and
jle
pop
pop
shl
push
jle
cmp
sbb
pop
dec
push
jle
shl
pop
sbb
push
jle
ds
jle
inc
mov
mov
push
jmp
pop
hlt
jle
arpl
pop
ds
or
addr16
hlt
jle
pop
add
or
inc
mov
(bad)
ds
jle
dec
push
jle
shl
mov
push
cmp
jle
adc
jle
mov
jle
sbb
cmp
add
jle
dec
push
rcl
mov
pop
pop
pop
jo
add
or
lea
add
xor
push
jle
add
cmp
cmp
push
or
push
jle
hlt
jle
push
add
jmp
dec
jg
ds
or
pop
sbb
pop
cmp
adc
aam
cmp
or
jle
jle
pop
cmp
jle
cmp
add
jle
inc
mov
pop
jmp
cmp
push
cmp
scas
gs
jle
inc
mov
push
add
jle
dec
push
pop
pop
cmp
rcl
cmp
push
inc
mov
cmp
and
cmp
or
cmp
or
inc
mov
dec
jle
jmp
cmp
push
add
cmp
or
pop
out
or
pop
jg
jle
jle
ds
ds
jle
rcl
cmp
mov
jmp
push
jmp
push
jle
rcl
sbb
mov
push
ds
jle
or
pop
sbb
cmp
mov
push
cmp
scas
gs
pop
out
sbb
sbb
arpl
mov
mov
test
lea
mov
mov
sbb
push
add
jle
mov
jle
cmp
out
jle
or
cmp
pop
dec
push
ds
jle
or
mov
sbb
push
jle
scas
or
push
jle
jle
test
push
cmp
ds
add
hlt
jle
jle
arpl
cmp
daa
rcl
lea
jle
test
or
push
test
push
jle
inc
mov
ins
call
sbb
jle
jo
sbb
lea
adc
out
jle
cmp
rcl
imul
add
and
dec
push
sbb
or
ds
adc
jle
inc
mov
push
jle
ins
call
sbb
pop
cmp
out
jle
jle
hlt
jle
pop
ds
jle
sbb
sbb
dec
jle
jle
or
or
or
inc
mov
push
jg
or
inc
pop
sbb
jle
cmp
push
cmp
ds
out
add
test
pop
shl
xor
add
push
rcl
mov
sbb
aam
jg
inc
mov
push
cmp
cmp
jle
jle
add
jg
shl
push
jle
shl
cmp
sbb
push
ds
jle
jle
or
inc
pop
jle
pop
pop
test
pop
hlt
jle
push
jmp
pop
jle
rcl
dec
jle
or
jo
sbb
ds
test
push
jle
jmp
arpl
add
jle
jg
jle
aas
push
cmp
jle
cmp
jle
mov
mov
mov
aas
push
jle
jle
jle
cmp
jle
jo
add
dec
push
cmp
jle
hlt
jle
mov
shl
xor
add
scas
gs
aam
aas
push
jg
scas
gs
jle
add
out
scas
gs
rcl
adc
jle
cmp
ds
inc
mov
sbb
or
imul
add
bound
jne
je
je
outs
add
xor
add
arpl
add
je
add
inc
add
jb
ins
add
add
inc
outs
add
inc
add
dec
add
push
dec
add
jno
push
add
ins
add
jb
inc
add
cmp
push
add
jo
dec
add
arpl
jne
jbe
dec
add
ins
add
je
push
add
add
adc
outs
add
dec
add
bound
add
add
adc
add
outs
add
add
add
or
bound
add
add
or
add
je
add
adc
add
je
inc
add
js
xor
add
inc
add
jb
ins
add
add
sbb
jo
bound
push
add
push
add
inc
add
add
push
add
add
adc
push
inc
xchg
fwait
mov
pop
push
sbb
mov
add
add
and
add
and
add
or
adc
add
sbb
adc
push
add
add
add
adc
add
add
add
push
adc
add
adc
add
add
and
add
add
add
push
add
add
adc
or
push
adc
add
adc
add
adc
xor
add
xor
adc
xor
add
xor
push
add
popa
add
add
or
add
add
add
add
or
add
add
adc
add
adc
add
or
add
add
adc
add
add
add
or
sbb
aas
pop
jg
aad
cmp
mov
and
add
or
or
and
add
adc
adc
sbb
and
add
sbb
sbb
and
movs
push
and
add
or
sub
sub
sbb
adc
add
cmp
cmp
add
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
jne
and
add
adc
pop
add
xor
and
add
and
add
add
add
add
or
add
xor
xor
aaa
xor
add
add
and
cmp
cmp
gs
sub
sub
sub
xor
xor
xor
add
add
add
outs
jo
jb
addr16
xor
xor
add
or
add
inc
ja
inc
jbe
add
push
add
or
arpl
jae
data16
add
add
adc
inc
popa
outs
ins
outs
bound
push
arpl
imul
popa
inc
push
add
add
push
dec
push
and
imul
xor
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
and
adc
ds
adc
add
add
xor
adc
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
