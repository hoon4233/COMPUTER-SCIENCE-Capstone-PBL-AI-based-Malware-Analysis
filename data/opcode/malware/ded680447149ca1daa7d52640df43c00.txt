xchg
mov
xchg
call
jbe
sbb
nop
adc
es
or
jb
fincstp
and
xchg
loopne
movs
dec
into
mov
sbb
mov
movs
jb
xchg
xor
ds
in
adc
add
cmp
push
mov
adc
cmp
sbb
movs
dec
dec
pop
jp
retf
sar
sbb
jmp
push
loop
icebp
sbb
in
dec
outs
lods
call
cli
sub
dec
sub
and
dec
icebp
stc
jmp
mov
sub
jb
pop
mov
jge
cmps
movs
jb
xchg
loope
aas
pop
mov
icebp
out
loop
pop
movs
push
loop
xor
xlat
jle
popa
lods
icebp
dec
in
neg
movs
jb
push
shl
enter
shl
cmp
stc
icebp
imul
jb
sbb
inc
add
movs
stc
loope
das
jo
cs
mov
out
pop
and
mov
repz
xchg
cdq
dec
add
movs
stc
sub
add
mov
adc
mov
cdq
inc
add
movs
sub
inc
pop
cmp
stc
sub
inc
test
je
mov
adc
lea
daa
mov
xchg
iret
(bad)
dec
dec
mov
in
icebp
jo
sub
xchg
mov
(bad)
loopne
lods
stc
iret
adc
jle
xchg
nop
std
pop
js
lea
fs
lds
sbb
pop
lea
pusha
jle
sbb
movs
stos
out
mov
adc
sbb
sar
jb
pop
mov
neg
lods
jb
sbb
jp
jae
jb
cdq
pusha
jp
fcmovbe
jne
sbb
dec
in
pop
in
xchg
bound
movs
call
lods
lea
repnz
sbb
mov
mov
stc
sub
jmp
stos
out
mov
mov
jb
repnz
sbb
sbb
adc
dec
sub
outs
add
movs
sbb
or
jb
jle
push
mov
movs
jb
div
pop
dec
jge
nop
jl
jle
sbb
mov
jo
sbb
int3
push
add
movs
sbb
fbstp
in
pop
add
movs
lea
in
push
add
movs
sti
xchg
push
adc
mov
aam
mov
daa
mov
sub
stc
out
call
rcl
sbb
push
mov
dec
ffree
sbb
xlat
dec
aad
dec
in
inc
sti
xor
pop
mov
arpl
mov
movs
sbb
jb
jb
call
cmps
bound
xchg
sbb
pop
in
sti
jae
pop
(bad)
rcr
mov
jb
jb
lahf
push
ror
sbb
pop
ror
and
jb
fwait
dec
scas
lea
movs
and
jb
sub
mov
xor
neg
sub
and
dec
push
mov
movs
icebp
jo
cdq
lea
movs
push
mov
xor
daa
mov
mov
push
xchg
cmp
in
mov
scas
push
ror
mov
(bad)
sub
shl
cmp
dec
sbb
pop
jge
jb
xchg
loope
in
loope
in
movs
sbb
sbb
jb
sbb
mov
cmps
fnsave
xchg
(bad)
jae
xor
push
push
mov
fs
mov
shr
outs
mov
rol
jb
outs
mov
shl
mov
sbb
pop
sbb
mov
push
push
mov
fs
mov
outs
mov
jb
adc
jb
(bad)
sub
cmp
dec
repz
cmp
or
(bad)
jb
in
inc
sti
icebp
loop
mov
pop
pop
and
add
rcl
pop
mov
sbb
jbe
fimul
dec
outs
mov
pop
test
movs
(bad)
ror
pop
dec
repnz
mov
sub
call
shl
fimul
test
in
mov
xchg
loope
cmp
fyl2x
sti
push
cdq
dec
(bad)
out
repz
rcl
aaa
dec
in
mov
mov
fcom
lea
cdq
rol
icebp
leave
inc
outs
xchg
loope
cmp
dec
pop
lea
sub
lock
loope
mov
das
daa
mov
adc
je
mov
sub
xor
movs
jb
jecxz
mov
or
inc
xchg
loope
lea
pop
mov
loope
pop
and
movs
test
loop
aaa
inc
xchg
loope
repz
push
icebp
jl
in
mov
movs
pop
dec
and
sbb
loope
aas
pop
lods
sti
jne
ins
(bad)
hlt
call
icebp
out
lock
in
lea
cli
sub
icebp
sti
push
mov
dec
dec
rcr
and
dec
das
pop
mov
lahf
pop
lea
xchg
inc
in
das
test
lea
dec
in
ja
scas
out
aas
pop
lods
sti
jne
ins
(bad)
hlt
call
jb
lods
mov
sbb
cmp
loop
cmp
lods
clc
mov
sbb
enter
dec
in
lea
in
test
pop
lea
sub
lea
in
stos
popf
jmp
dec
sbb
div
inc
(bad)
mov
aaa
div
das
mov
and
jge
retf
mov
ror
out
test
dec
inc
int3
sbb
stc
js
and
loopne
mov
add
std
sti
jbe
adc
xchg
xor
(bad)
fsub
add
inc
xchg
loope
inc
jg
sti
icebp
imul
sub
icebp
sti
push
dec
hlt
and
dec
das
das
mov
xor
aas
pop
pop
sti
jbe
data16
loope
xchg
test
dec
mov
leave
adc
mov
cmp
loopne
mov
add
std
sti
jbe
adc
xchg
xor
(bad)
fsub
in
ror
out
ja
scas
out
aas
pop
lods
mov
add
loope
inc
and
dec
repz
ror
das
mov
and
pop
sti
jbe
data16
loope
pop
ja
scas
out
cmp
pop
lods
jge
push
pushf
sti
dec
xor
stc
push
stos
int3
mov
pop
xchg
mov
icebp
stos
xor
xor
sbb
jge
icebp
sti
push
dec
hlt
and
dec
das
pop
mov
dec
sub
mov
pop
rol
neg
pop
pop
mov
sbb
call
pop
stc
jmp
inc
inc
xor
pop
and
inc
pop
xor
dec
dec
xchg
dec
in
icebp
jo
dec
jnp
loop
xchg
cmp
inc
cli
sub
icebp
sti
push
dec
hlt
and
dec
das
das
mov
pop
sbb
ficomp
movs
test
loope
cmp
repnz
mov
sub
jb
in
jb
dec
repnz
rcl
jb
sbb
sbb
inc
std
sub
mov
sub
jge
icebp
sti
push
dec
mul
xchg
sar
imul
icebp
mov
sar
xchg
xor
lods
stc
repnz
pop
add
xchg
mov
je
sub
push
dec
lods
sti
dec
in
inc
sti
icebp
out
mov
ret
aam
mov
cli
sub
icebp
sti
push
cdq
dec
outs
out
repz
rcl
aaa
mov
pop
sti
jae
xor
mov
rol
sbb
movs
sti
out
pop
xchg
aam
mov
addr16
dec
sbb
sub
adc
dec
jnp
outs
repnz
stos
inc
xor
loope
in
lock
lods
test
icebp
repnz
mov
sub
and
mov
mov
lea
sbb
cmp
stos
out
je
loope
mov
(bad)
cdq
mov
xchg
arpl
pop
pop
lea
xchg
mov
inc
(bad)
mov
or
movs
jae
repnz
mov
mul
mov
sub
mov
daa
fadd
neg
pop
lea
fadd
neg
movs
ror
scas
out
lea
jge
shl
jle
bound
xor
movs
icebp
mov
shr
xchg
xor
lods
repz
nop
cmc
jb
cdq
sub
fsub
pop
jb
xchg
and
dec
outs
test
sub
jb
sbb
adc
mov
dec
pop
dec
in
icebp
jo
cdq
lea
movs
pop
mov
pop
movs
jb
inc
movs
jb
fwait
push
xchg
div
xchg
loope
in
loope
aas
pop
mov
and
aaa
addr16
jb
sahf
xchg
jae
sbb
cmovs
stos
neg
jg
jb
daa
fadd
neg
pop
lea
push
xchg
cmp
in
mov
pop
fadd
neg
das
aaa
inc
and
add
cdq
or
adc
xchg
loope
xor
sbb
jb
out
jb
inc
sub
mov
fucom
xchg
mov
das
aaa
dec
xchg
loope
pop
data16
mov
loope
in
rcl
push
mov
push
xlat
aas
lods
stc
retf
push
repz
mov
repz
cmp
in
inc
sti
xor
pop
mov
addr16
leave
out
pop
loope
cmp
neg
int3
mov
pop
movs
stc
icebp
jmp
mov
movs
jb
pop
pop
jnp
outs
xchg
sti
ins
xor
xchg
and
adc
dec
das
dec
dec
lea
jb
sbb
pop
mov
pop
movs
lea
movs
stc
icebp
push
popf
imul
pop
(bad)
shl
jb
daa
cmp
neg
movs
push
mov
sbb
stc
test
bnd
pop
pop
stc
icebp
out
popf
aaa
dec
adc
pop
icebp
xchg
xchg
xor
movs
test
and
ja
cli
sub
icebp
sti
push
cdq
dec
(bad)
out
repz
push
lods
inc
xor
sbb
test
jg
jb
pop
lods
repnz
mov
jb
adc
mov
sbb
inc
std
sub
cdq
int3
xchg
push
pop
ins
push
daa
mov
cs
cwde
inc
rcl
inc
rcr
pop
dec
sbb
aaa
mov
dec
int3
loop
pop
movs
call
lods
sti
dec
in
inc
sti
icebp
loop
mov
pop
add
neg
movs
call
shl
jg
jb
addr16
jb
dec
add
rcl
scas
out
pop
push
sub
mov
jg
jb
shr
dec
xchg
arpl
mov
push
pop
mov
mov
icebp
adc
jbe
es
or
mov
ror
xchg
arpl
pop
lods
repnz
movs
jge
sub
dec
cdq
ror
outs
stos
(bad)
rcl
inc
sub
ja
jb
pusha
and
jb
sbb
jb
push
into
jb
sbb
jb
sbb
sbb
retf
jb
xchg
loope
ficomp
into
jb
sbb
call
lods
sti
jne
ins
(bad)
hlt
call
jbe
movs
(bad)
stc
out
cmc
and
lods
(bad)
shl
or
mov
loope
in
cmps
sbb
jb
outs
pop
call
push
xchg
cmp
jmp
dec
ja
jb
inc
(bad)
mov
or
movs
jo
repnz
sbb
and
mov
sbb
ret
test
and
dec
in
sti
ja
addr16
sbb
dec
sbb
xchg
push
pop
movs
call
push
lea
sub
jo
pop
(bad)
in
aam
dec
in
jnp
adc
movs
sti
ins
sub
jo
call
retf
jb
xchg
and
ins
sbb
in
mov
xor
pop
mov
dec
cwde
dec
in
icebp
jo
daa
dec
sub
outs
retf
movs
jb
stc
sub
lea
in
(bad)
in
cmp
neg
hlt
stc
mov
repz
outs
push
sti
ins
in
inc
sti
xor
push
(bad)
pop
mov
int3
adc
movs
stc
xor
pop
mov
das
dec
dec
push
cdq
jb
sbb
mov
sbb
jb
lahf
lea
hlt
shr
mov
pushf
(bad)
jecxz
sub
jge
sbb
cmc
sbb
je
pop
lea
lea
pusha
jp
fucom
sti
or
pop
mov
and
loopne
out
cmp
fldcw
test
mov
hlt
stc
mov
repz
cmp
adc
movs
adc
cmps
sbb
xor
sbb
mov
sbb
jae
inc
inc
xor
pop
and
lea
pusha
jle
ffree
sti
or
test
in
lea
movs
jge
and
not
in
(bad)
hlt
dec
sub
dec
in
(bad)
in
hlt
shl
sbb
sbb
xor
ja
mov
add
dec
in
jb
daa
enter
movs
jge
fldenv
mov
mov
jno
neg
int3
and
movs
call
test
dec
in
jb
cmp
inc
xor
pop
and
dec
cdq
pusha
jle
in
jb
outs
scas
mov
mov
mov
movs
jb
jo
sbb
out
fmul
xor
daa
mov
daa
pop
lea
int3
retf
push
pop
movs
dec
out
mov
dec
mov
jo
cdq
lea
movs
push
mov
in
jae
sbb
neg
int3
and
movs
call
test
dec
in
jb
cmp
inc
xor
pop
and
dec
cdq
pusha
jle
in
jb
outs
scas
mov
mov
mov
movs
jb
jo
sbb
cli
out
fmul
xor
daa
mov
daa
pop
lea
int3
retf
push
pop
movs
dec
out
mov
dec
xor
jo
cdq
lea
movs
push
mov
in
jae
sbb
xor
sbb
xchg
neg
int3
and
movs
call
test
dec
in
jb
adc
sbb
pop
lea
sbb
icebp
push
pop
movs
sbb
mov
push
lea
pusha
jle
in
jb
outs
scas
mov
mov
mov
movs
jb
jo
sbb
cli
out
fmul
xor
daa
mov
daa
pop
lea
int3
retf
push
pop
movs
dec
out
mov
dec
fld
pop
icebp
jo
cdq
lea
movs
pop
test
cli
out
cmp
repz
test
dec
in
jb
adc
sbb
pop
lea
jmp
daa
iret
sbb
pop
lea
adc
mov
sub
dec
in
(bad)
in
or
dec
in
cdq
movs
fsub
jae
dec
add
mov
rol
sbb
mov
lahf
pop
lea
movs
fwait
scas
pop
movs
jb
jmp
sub
ins
in
(bad)
in
and
aas
and
call
fisubr
jb
lahf
sbb
dec
in
stc
xor
pop
mov
das
dec
dec
dec
test
icebp
out
stos
mov
sub
jb
lahf
popa
jbe
sbb
xlat
pusha
in
lea
movs
icebp
adc
pop
mov
daa
iret
or
pop
lea
sbb
mov
arpl
sub
pop
lea
in
lea
lahf
sub
dec
in
push
sbb
dec
das
imul
(bad)
in
xchg
(bad)
loop
sub
div
in
lea
in
(bad)
in
xor
neg
das
mul
pushf
lea
sbb
jge
and
jb
xchg
and
aas
lahf
jo
dec
in
stc
mov
xor
icebp
out
stos
mov
sub
jb
lahf
movs
jbe
sbb
neg
(bad)
in
and
aas
and
mov
stos
idiv
movs
jb
jmp
dec
pop
cmp
hlt
stc
xor
pop
mov
das
dec
dec
dec
pushf
sti
icebp
out
push
(bad)
sbb
dec
in
sti
ja
(bad)
mov
movs
push
(bad)
pop
mov
das
neg
(bad)
in
pushf
(bad)
jecxz
sub
inc
ins
xchg
addr16
leave
out
jge
jle
jb
fwait
dec
add
sbb
dec
sbb
dec
in
(bad)
fmul
xor
pop
and
jb
cdq
pusha
jle
mov
movs
fwait
mov
movs
jb
sbb
sbb
mov
adc
xor
pop
mov
int3
pop
push
pop
movs
push
out
mov
dec
dec
fcomp
movs
icebp
jo
sub
mov
frstor
cli
dec
in
jo
xchg
and
xor
and
dec
in
and
scas
sub
dec
in
sahf
movs
xchg
inc
retf
mov
movs
jb
mov
pop
lea
div
mov
push
xlat
aas
cmps
dec
lea
repz
mov
repz
cmp
adc
movs
icebp
adc
and
jb
lahf
add
xor
out
aas
lahf
cmp
mov
mov
mov
movs
jb
pop
pop
jnp
adc
movs
repz
push
std
jb
xchg
and
dec
in
and
lahf
add
mov
repz
cmp
adc
movs
icebp
adc
dec
xchg
mov
movs
sbb
std
sti
ins
sub
jl
test
sbb
neg
fmul
xor
pop
(bad)
in
adc
dec
in
icebp
pop
or
jb
jmp
pop
mov
dec
bound
sbb
dec
in
and
rcl
jb
in
inc
sti
xor
mov
addr16
leave
out
jge
jg
jb
cdq
add
dec
in
jb
lahf
and
(bad)
sti
out
aas
lahf
and
dec
in
stc
mov
mov
mov
movs
jb
pop
pop
jnp
adc
movs
icebp
or
stos
idiv
lahf
les
mov
adc
xor
das
dec
dec
dec
test
icebp
out
stos
popf
ret
aaa
addr16
jb
lahf
jg
mov
ret
jp
mov
stos
idiv
movs
jb
cmps
int3
lea
movs
jge
fisub
dec
out
and
int3
lea
dec
or
jo
sub
sub
pop
repz
scas
jb
call
mov
sbb
inc
in
lea
push
pop
(bad)
sbb
pop
lea
lahf
pop
lea
hlt
sbb
cli
out
cmp
hlt
call
mov
cmp
pop
mov
ins
(bad)
hlt
call
xor
pop
mov
dec
outs
test
inc
pop
(bad)
dec
xchg
and
dec
out
and
lahf
pop
lea
sub
mov
pop
mov
dec
in
fstp
movs
icebp
jo
into
jbe
lahf
pop
lea
hlt
sbb
cli
out
cmp
hlt
call
mov
inc
(bad)
jb
cdq
sbb
dec
in
jb
sbb
div
xchg
(bad)
loop
sub
imul
in
lea
in
lea
lahf
add
dec
in
neg
test
not
in
(bad)
in
xchg
(bad)
loop
das
imul
in
(bad)
in
xchg
(bad)
loop
pop
neg
pop
lea
lahf
inc
lea
popf
neg
pop
lea
in
iret
inc
in
lea
pop
mov
sbb
mov
movs
test
and
dec
in
sti
ja
and
aas
sub
mov
in
jb
push
das
mul
(bad)
in
xchg
(bad)
loop
daa
iret
pusha
in
lea
pop
mov
das
inc
dec
dec
lods
stc
xor
pop
mov
das
inc
dec
dec
lods
stc
xor
pop
mov
das
inc
dec
dec
lods
sti
ins
sub
xchg
and
aas
sub
mov
in
sub
shl
cmp
sahf
adc
mov
ds
hlt
sbb
shl
sub
jb
div
pop
pop
fucom
xchg
(bad)
sub
inc
(bad)
sbb
mov
and
jb
jb
jo
sbb
sbb
inc
in
icebp
mov
shr
in
lea
mov
mov
das
aaa
push
fldcw
pop
pop
fucom
scas
scas
jp
jb
addr16
dec
sub
rol
shl
lea
pop
sub
icebp
jmp
and
dec
sub
and
dec
in
inc
sti
icebp
out
mov
call
mov
lds
sbb
jb
sbb
sbb
xlat
sbb
push
cdq
dec
out
das
das
mov
jns
xor
rol
neg
sub
loop
sbb
jb
sub
aas
pushf
in
cmc
sbb
mov
arpl
xchg
jb
sbb
cmc
sbb
mov
hlt
and
mov
pop
movs
jnp
adc
movs
dec
dec
sbb
mov
pop
push
xor
test
xor
cmps
jb
in
push
add
inc
je
popf
push
mov
cli
mov
jae
and
xor
and
lods
test
jb
in
movs
dec
mov
sbb
hlt
and
mov
test
jb
pop
pushf
in
cmc
sbb
dec
pop
pushf
in
cmc
sbb
aaa
inc
xchg
bound
dec
pop
pushf
in
cmc
sbb
mov
movs
lea
in
mov
(bad)
rcr
jb
fwait
push
lea
add
xor
movs
shl
pop
lea
mov
jbe
sbb
cmps
jb
fwait
push
xor
sbb
mov
dec
jge
in
test
adc
jne
fimul
mov
movs
repz
(bad)
jb
call
adc
cmp
shl
sbb
dec
in
test
sbb
jne
fimul
mov
movs
sti
inc
xor
call
jae
dec
out
cmc
sbb
lds
pop
test
sbb
jne
fimul
mov
movs
repz
adc
push
pop
movs
jo
pop
loopne
cmc
sbb
stc
dec
in
lea
in
dec
sub
sti
inc
sbb
call
pop
push
movs
jb
mov
movs
ja
test
jb
add
jb
in
inc
sti
icebp
jmp
cmc
sbb
fwait
push
sbb
mov
fs
pop
pushf
in
cmc
sbb
mov
movs
shl
and
mov
lods
loop
sbb
mov
movs
rcr
in
mov
pushf
in
cmc
sbb
mov
movs
lea
cdq
mov
jo
xchg
inc
xchg
(bad)
mov
cmp
mov
dec
clc
mov
movs
inc
je
push
mov
and
lods
test
jb
fwait
bound
mov
pop
cs
dec
add
mov
adc
mov
fsub
aaa
loop
or
and
out
mov
in
jnp
movs
jb
and
xor
adc
mov
test
xor
pop
ja
scas
out
pop
xor
movs
jae
and
xor
cmp
mov
push
inc
inc
xchg
(bad)
mov
pop
dec
jg
fimul
mov
movs
repz
mov
jb
in
push
add
test
pop
stos
div
movs
jb
shl
clc
mov
aam
neg
sub
mov
lods
mov
push
je
movs
jb
pop
pop
jge
pop
aam
neg
daa
xchg
mov
loope
mov
fisub
mov
movs
repnz
loope
pop
mov
mov
repz
add
adc
dec
daa
and
mov
sar
pop
cmp
jp
pop
movs
icebp
mov
xor
pop
jb
dec
and
dec
sbb
ds
pop
lods
loop
sbb
mov
add
xor
sub
clc
mov
inc
out
cmc
sbb
xor
pop
repnz
loopne
pop
mov
outs
mov
xor
sub
loop
sbb
aas
push
loop
sbb
jb
push
mov
sub
push
xor
mov
lods
loop
sbb
jb
shl
aaa
aas
test
hlt
sbb
aas
push
loop
sbb
jb
push
mov
pop
pop
movs
lea
mov
popf
ja
mov
jb
rcr
scas
out
cmp
push
xor
mov
fs
inc
ins
mov
xchg
inc
and
dec
repz
sti
outs
pop
arpl
loopne
mov
inc
sti
icebp
out
mov
pop
rol
neg
int3
jnp
pop
movs
call
int3
popa
push
pop
movs
and
mov
clc
shl
sbb
pop
push
pop
movs
and
mov
mov
cmc
sbb
mov
xchg
loope
cmp
pop
movs
and
mov
push
out
cmc
sbb
cmp
pop
movs
and
mov
xchg
in
cmc
sbb
sub
pop
movs
and
mov
cld
shl
sbb
sub
fyl2x
sti
push
cdq
dec
add
dec
repz
ins
sub
or
ret
cmp
scas
out
fcomp
loope
in
mov
adc
movs
mov
repnz
stos
mov
sub
jb
pop
or
icebp
jmp
mov
dec
cmc
mov
movs
icebp
shl
movs
icebp
shl
movs
lea
cdq
shl
xchg
addr16
ror
movs
mov
ret
mov
arpl
push
mov
push
xchg
cmp
xchg
mov
sti
icebp
cli
pop
ja
scas
out
jae
adc
mov
movs
retf
movs
jb
stc
sub
mov
scas
movs
jb
sbb
pop
or
sub
or
movs
jb
jmp
hlt
sbb
inc
and
push
out
cmc
sbb
mov
pop
cmp
ficomp
sub
adc
jb
sbb
jbe
sbb
pop
push
repnz
mov
sub
adc
pop
pop
adc
movs
call
rol
neg
into
jb
outs
add
mov
movs
sbb
dec
sbb
inc
stc
sub
(bad)
sar
popf
jmp
outs
adc
mov
loope
in
rol
cmp
and
push
out
cmc
sbb
aaa
push
icebp
mov
jb
inc
cli
sub
icebp
sti
push
cdq
dec
push
jae
pop
push
mov
jmp
icebp
out
aaa
push
xchg
loope
inc
jg
sti
icebp
(bad)
sub
jle
pop
push
stc
stc
or
xchg
sub
sbb
hlt
push
repnz
(bad)
shl
jb
pop
push
and
in
pop
mov
pop
movs
stc
icebp
out
dec
jne
ja
arpl
sbb
in
sbb
add
sti
jae
mov
(bad)
rcl
lea
mov
cmc
sbb
push
xchg
loope
cmp
dec
sub
and
dec
das
pop
mov
pop
rol
neg
xchg
lea
in
jb
outs
nop
jge
pop
xchg
jae
in
jb
outs
mov
pop
xchg
jo
in
jb
outs
mov
jno
in
jb
outs
mov
add
jbe
in
jb
adc
movs
stc
icebp
or
ss
data16
pop
jb
lods
loope
mov
cmps
out
mov
fsubr
jb
loopne
jge
push
mov
jbe
and
mov
movs
sti
dec
cdq
dec
jo
lods
mov
(bad)
fcom
or
adc
popw
ficom
stos
les
sbb
dec
jno
jge
push
mov
and
jb
adc
jbe
cmp
mov
or
and
repnz
cs
sub
lea
dec
mov
loopne
mov
jbe
retf
dec
cdq
dec
jbe
pop
push
stc
icebp
or
ss
movs
mov
repnz
data16
movs
jb
icebp
test
pop
pop
sbb
dec
mov
sbb
mov
sar
pop
pop
jae
sub
mov
repnz
pop
loopne
pop
cmp
mov
mov
repnz
repnz
pop
hlt
xchg
pop
icebp
pop
sbb
mov
rol
loop
call
int3
push
cmps
daa
sbb
sbb
jns
loop
call
mov
ins
sbb
bound
dec
pushf
ja
lock
jbe
sbb
mov
sar
push
and
mov
shr
cmp
call
dec
cdq
dec
jno
mov
mov
repnz
dec
pop
sbb
mov
movs
pop
fwait
cdq
ins
lea
dec
mov
loopne
mov
jbe
retf
aaa
repnz
aaa
movs
xchg
loopne
mov
pop
icebp
pop
push
das
daa
dec
xchg
mov
mov
movs
jb
es
call
dec
cdq
dec
jo
mov
mov
repnz
repnz
icebp
pop
push
stos
les
adc
mov
pop
jb
sbb
push
mov
jb
xchg
icebp
bound
dec
mov
mov
daa
cwde
mov
mov
jb
fwait
pop
jb
sbb
dec
inc
cli
sub
icebp
sti
push
cdq
dec
jle
dec
repz
xchg
sar
push
xchg
lea
and
mov
sar
fwait
pop
call
pop
call
das
aaa
mov
sbb
fwait
mov
movs
icebp
jb
pop
ja
scas
out
mov
clc
cmps
stc
mov
test
hlt
sbb
stos
in
and
outs
adc
mov
adc
daa
dec
jb
sbb
push
mov
movs
jb
outs
test
shl
movs
cdq
mov
out
data16
mov
dec
pop
pop
shl
pop
pop
add
clc
mov
sub
stos
xchg
loopne
mov
movs
sti
icebp
loop
xor
movs
test
retf
inc
xchg
loopne
mov
icebp
xchg
mov
jb
loope
add
cdq
ins
lea
retf
mov
movs
mov
icebp
loop
jbe
repz
stos
sbb
daa
dec
xchg
mov
mov
adc
mov
ins
lea
pop
movs
mov
icebp
loop
jne
xchg
mov
jb
dec
stos
(bad)
nop
mov
nop
addr16
cmps
out
pop
outs
pop
lea
pusha
jle
inc
(bad)
mov
or
xor
sbb
and
bnd
dec
in
not
pop
lea
cdq
jb
sbb
mov
and
jb
push
popf
dec
in
icebp
mov
adc
mov
and
push
lds
mov
mov
add
and
mov
sbb
mov
shr
cmps
inc
lods
dec
in
push
cmps
adc
pop
lea
mov
jo
sbb
mov
in
sti
and
outs
jge
push
test
and
jb
xchg
xor
push
pop
sti
mov
hlt
jmp
sbb
lea
outs
ins
cmp
test
and
cmps
sti
and
nop
addr16
in
pop
(bad)
cld
jb
xchg
xor
push
pop
sti
mov
test
hlt
sbb
inc
cmc
pop
lea
cmc
pop
(bad)
(bad)
mov
leave
neg
movs
jge
push
pop
lea
and
mov
in
mov
sbb
dec
mov
sbb
jb
lods
xor
push
sbb
mov
xchg
xor
mov
adc
mov
sbb
mov
sbb
in
sti
xor
jnp
dec
in
push
add
stc
and
jnp
dec
xchg
ja
pop
or
xchg
mov
sbb
jb
lahf
push
popf
dec
in
lea
int3
jb
sbb
mov
(bad)
inc
sbb
mov
adc
dec
cmc
pop
(bad)
repz
addr16
sbb
dec
ins
jae
xor
dec
sub
mov
adc
mov
add
pop
xchg
movs
jb
jb
lea
pop
lea
jl
dec
in
jge
in
icebp
jo
sub
push
(bad)
cdq
add
push
pop
jb
xchg
dec
in
xor
lock
mov
sbb
enter
dec
add
sar
fwait
pop
jb
sbb
mov
movs
add
or
dec
in
cmp
fldenv
mov
movs
jb
lods
pop
pop
dec
repnz
mov
std
repz
dec
lea
movs
jae
xchg
and
push
pop
pop
dec
in
jb
lahf
dec
popf
dec
in
hlt
jmp
pop
rol
neg
pop
(bad)
ins
lds
pop
and
jb
repz
mov
stos
les
jmp
inc
jo
push
mov
and
out
dec
lea
add
aas
(bad)
push
popf
dec
in
nop
mov
jge
pop
sbb
mov
jmp
sti
cmp
dec
lods
dec
in
out
cmc
pop
lea
cmps
sti
ins
fisttp
jne
cmps
jno
out
mov
xor
dec
lea
sbb
mov
movs
add
in
push
add
repnz
jnp
dec
sbb
sub
inc
sbb
mov
or
mov
sub
lea
movs
jb
xchg
xor
push
pop
icebp
jbe
cmps
jo
lahf
cmp
dec
in
not
pop
lea
(bad)
cmp
dec
in
mov
sbb
lea
and
push
pop
stc
and
cmps
sti
xor
and
imul
stc
xor
jnp
dec
xchg
and
test
and
imul
and
js
dec
in
adc
sbb
dec
and
into
imul
pop
not
pop
sti
xor
and
or
jnp
dec
sbb
mov
sbb
and
dec
jle
xchg
xor
imul
mov
push
neg
mov
(bad)
in
jmp
neg
stos
les
jmp
inc
jo
xchg
js
dec
in
jmp
pop
lea
pop
movs
jge
(bad)
push
popf
dec
in
nop
mov
mov
xchg
mov
jb
(bad)
push
popf
dec
in
jb
sbb
mov
and
imul
jnp
adc
movs
repnz
adc
mov
and
add
cdq
fwait
mov
movs
push
mov
adc
movs
fwait
scas
sbb
dec
in
data16
movs
jb
cdq
dec
lea
pop
cmps
jbe
lahf
inc
lods
dec
in
not
les
mov
or
aas
scas
inc
lods
dec
in
cmp
pushf
jb
xor
repnz
shr
daa
call
sub
repnz
sar
jmp
rcl
cdq
jns
mov
jge
pop
lods
dec
in
nop
mov
adc
rcr
lahf
pop
lods
dec
in
jge
sbb
fwait
mov
movs
pop
mov
sbb
lock
lea
es
inc
icebp
stos
stc
xor
dec
lea
pop
pop
inc
nop
mov
movs
pop
lahf
iret
push
lds
(bad)
repz
pop
les
mov
adc
pop
les
jne
cmps
stc
or
add
mov
cwde
dec
mov
movs
jb
outs
mov
mov
cmps
jb
sbb
mov
movs
jb
outs
mov
mov
mov
pop
mov
sbb
pop
shr
lea
fs
mov
mov
popf
dec
in
lea
(bad)
jnp
dec
in
cmps
imul
call
test
or
jnp
dec
sbb
xor
mov
movs
stc
and
dec
lea
inc
jo
ret
gs
mov
inc
jo
push
pop
stc
xor
dec
lods
dec
in
jbe
in
xchg
pop
repz
dec
lea
mov
lea
repz
inc
cmc
pop
lea
cmc
pop
(bad)
(bad)
mov
leave
neg
movs
jge
xor
cli
sub
icebp
sti
push
cdq
dec
dec
out
repz
jmp
in
xchg
xchg
fwait
leave
mov
pop
pop
jae
addr16
inc
mov
push
(bad)
aas
pop
pop
sti
icebp
(bad)
sub
mov
icebp
loop
(bad)
xchg
xchg
test
sbb
gs
xchg
out
pop
movs
retf
mov
movs
jb
mov
sahf
jb
call
icebp
in
stc
icebp
loop
mov
fsubr
mov
adc
dec
and
addr16
outs
mov
cdq
mov
call
icebp
out
fwait
adc
movs
jb
sbb
mov
sbb
hlt
sbb
add
dec
je
movs
jb
js
(bad)
neg
xor
xor
pop
jae
lods
out
cmp
cdq
pop
jbe
adc
mov
pop
fnstenv
pop
pop
jae
lods
out
inc
pop
movs
mov
push
daa
xchg
mov
pop
ja
push
and
dec
sbb
aaa
dec
xchg
pop
jbe
icebp
mov
fisub
mov
shl
pop
pop
jbe
lods
cmps
dec
inc
sbb
mov
shl
pop
pop
jbe
pop
pop
jae
addr16
jge
cwde
repnz
bound
dec
sbb
sbb
mov
pop
pop
jae
adc
dec
sbb
dec
sbb
pop
fdiv
sbb
mov
movs
pop
mov
loope
mov
adc
dec
inc
cli
sub
icebp
sti
push
dec
repnz
add
js
xor
sbb
lea
dec
jne
sbb
hlt
call
jae
stos
repnz
pop
mov
loopne
mov
dec
je
cdq
pop
jae
imul
mov
inc
jmp
ja
sub
jb
repnz
mov
repnz
popf
xchg
pop
test
and
jae
pop
sti
jae
sar
in
jp
lahf
movs
xchg
dec
in
call
movs
xchg
dec
in
call
mov
dec
sub
sub
jmp
int
add
jp
sbb
jb
sbb
mov
dec
movs
jb
inc
addr16
cmp
dec
repnz
mov
sbb
mov
into
jno
sbb
jno
sbb
pop
pop
div
xchg
(bad)
dec
in
imul
test
rcr
mov
loop
xchg
cmp
sub
jo
and
pop
cmc
jb
xchg
addr16
je
hlt
sbb
repnz
and
dec
xlat
mov
movs
sbb
lods
stc
icebp
push
sub
push
loop
aaa
inc
in
xchg
in
mov
repnz
and
movs
jb
pop
pop
cdq
mov
pop
pop
dec
xchg
arpl
loope
inc
and
dec
repz
xor
pop
cmp
(bad)
jb
call
mov
movs
sbb
lods
call
and
jb
in
pop
mov
fs
in
cmps
sbb
cmc
jb
xchg
loope
cmp
pop
and
mov
ror
cmp
and
in
jle
repnz
jb
pop
pop
and
sbb
adc
pop
mov
push
stos
pushf
sbb
mov
movs
jb
sbb
sub
shl
cmp
dec
repz
pop
add
cmp
jb
in
inc
sti
icebp
loop
mov
sbb
repnz
movs
sbb
jb
jb
ficomp
mov
sbb
xchg
cmp
cdq
pop
(bad)
rcr
mov
aaa
into
jo
sbb
jb
repnz
and
pop
and
mov
rcl
call
lea
bound
jb
(bad)
sub
cmp
dec
das
pop
mov
js
xor
sbb
mov
adc
sbb
(bad)
addr16
inc
dec
pop
pop
mov
sbb
sbb
mov
int3
dec
push
pop
movs
call
mov
outs
icebp
mov
add
mov
xor
daa
mov
pop
lahf
das
mov
icebp
scas
repnz
pop
mov
mov
(bad)
push
and
xor
repnz
mov
daa
mov
xchg
loope
cmp
dec
pop
sub
loope
inc
and
dec
repz
jmp
fucom
mov
gs
xchg
sbb
pop
out
div
inc
xchg
lea
stos
les
cli
out
pop
sti
div
cdq
pusha
jp
and
pop
jb
xchg
neg
dec
mov
aas
pop
pop
sti
jbe
data16
loope
sti
sub
shl
cmp
dec
repnz
adc
adc
pop
inc
jae
cdq
rcr
cdq
rcl
das
aas
iret
neg
sbb
adc
sbb
cmp
call
jae
inc
push
xchg
loope
mov
pop
pop
cdq
fwait
mov
push
xchg
cmp
adc
adc
mov
daa
mov
sbb
sahf
xor
pop
jo
push
daa
pop
pop
sbb
jb
ja
jae
addr16
jb
shr
aaa
mov
xchg
loope
pop
cmp
jb
lods
loope
mov
cdq
fs
mov
dec
repnz
in
pop
mov
leave
call
(bad)
in
inc
sti
icebp
ret
aas
pop
test
add
das
daa
mov
retf
fstp
movs
jb
lods
icebp
nop
mov
(bad)
sub
mov
push
dec
sti
jl
loope
mov
sti
sub
xchg
aas
pop
test
add
stc
loope
stos
(bad)
lea
mov
(bad)
das
aaa
mov
xchg
icebp
jp
lods
idiv
retf
push
xchg
loope
pop
sbb
stos
mov
sub
mov
and
xor
mov
in
and
and
hlt
sbb
int3
add
fs
mov
call
loop
mov
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
ins
mov
and
jle
and
xor
mov
out
and
je
neg
xor
repz
xor
fs
mov
test
xor
and
lods
loop
mov
je
xor
and
jl
and
xor
pop
mov
and
xor
and
xor
pop
xchg
mov
dec
fld
loop
mov
shl
movs
jb
sbb
loop
mov
mov
cdq
xor
movs
loop
add
and
das
cmp
dec
lods
loop
mov
loop
fldenv
mov
enter
and
daa
mov
mov
aaa
and
and
xor
aad
xor
and
ret
fwait
pop
or
mov
in
xor
das
mov
out
fs
out
repz
xor
xor
and
xor
mov
in
and
mov
sub
and
pop
jb
mov
out
xor
and
and
hlt
sbb
ins
mov
and
gs
mov
data16
and
xor
and
xor
jl
xor
and
push
loop
mov
and
xor
and
xor
and
xor
int3
add
xchg
loop
mov
dec
mov
and
push
loop
mov
mov
out
and
pop
jb
mov
out
xor
and
je
neg
xor
ins
mov
and
gs
mov
data16
and
xor
and
xor
jl
xor
and
push
loop
mov
and
xor
and
xor
and
xor
repz
xor
xchg
loop
mov
dec
mov
and
push
loop
mov
and
xor
and
dec
dec
movs
out
mov
dec
sub
and
dec
das
das
mov
xchg
loope
jae
pop
lahf
repnz
stc
icebp
out
mov
fsubr
adc
pop
push
jb
repz
mov
sub
call
data16
loope
and
dec
sbb
je
pop
pop
jb
xor
sbb
retf
sbb
mov
jecxz
mov
jne
loope
sub
xchg
icebp
mov
jecxz
mov
ror
out
jbe
es
mov
xchg
jl
inc
pop
stos
les
outs
cli
movs
adc
inc
jb
sbb
bound
adc
jmp
bound
sbb
mov
sub
inc
dec
dec
(bad)
sbb
cmp
xchg
loope
mov
retf
ds
movs
jb
sbb
aaa
inc
dec
sub
call
xor
sbb
pop
dec
sub
jb
jl
aaa
inc
adc
popf
mov
cwde
mov
sub
shl
cmp
dec
repnz
scas
fwait
lds
call
movs
jno
dec
sub
mov
dec
add
std
sti
jbe
icebp
popf
aaa
daa
pusha
iret
neg
movs
pop
mov
fs
lock
dec
outs
lods
call
lods
sti
jb
fs
xor
cvtdq2ps
inc
jo
push
cdq
fimul
pop
movs
pop
mov
sbb
call
inc
jo
cs
fimul
pop
movs
sti
inc
sbb
and
mov
test
mov
push
jno
ficomp
xor
sbb
mov
daa
mov
mov
sub
repz
xlat
jb
xchg
push
jno
out
cmps
out
test
daa
aaa
dec
push
add
jno
(bad)
sbb
mov
loope
mov
cmps
or
sti
icebp
loop
outs
or
div
in
inc
sti
icebp
(bad)
sub
aaa
dec
xchg
mov
or
inc
movs
cdq
loope
mov
jo
neg
cmps
ja
cmps
out
lea
add
enter
sub
aas
mov
das
punpckhbw
stos
lds
inc
bound
cmps
out
xor
sbb
sbb
stc
sbb
dec
xchg
data16
enter
adc
mov
sbb
mov
in
or
out
cmp
cmps
out
in
inc
ds
daa
mov
mov
sub
repz
(bad)
xchg
jb
xchg
push
jno
out
das
cmps
out
test
daa
aaa
inc
push
add
jno
(bad)
sbb
mov
loope
mov
cmps
or
sti
icebp
jmp
inc
xchg
mov
or
inc
movs
cdq
loope
mov
jo
neg
cmps
ja
cmps
out
lea
add
push
jno
ficomp
xor
inc
stc
mov
sbb
jg
cmps
out
cmp
sbb
jge
dec
dec
mov
push
cmps
out
aas
pop
js
neg
sub
push
mov
cmc
movs
pop
mov
leave
call
sub
iret
neg
hlt
call
lods
sbb
movs
sbb
pop
pop
mov
sbb
or
xchg
loope
in
rcl
pop
addr16
jb
in
xchg
pop
add
jb
dec
dec
mov
sbb
or
fwait
jb
in
inc
sti
icebp
into
sub
mov
xor
sbb
and
movs
jp
push
imul
push
xchg
and
jb
mov
fdiv
jnp
mov
push
inc
inc
xchg
bound
push
leave
jmp
mov
lock
shr
icebp
jae
sub
mov
bound
dec
sbb
pop
mov
jb
adc
ja
(bad)
or
sti
jne
dec
mov
sbb
outs
sti
fs
sub
cli
and
pop
mov
and
dec
sbb
aaa
dec
lods
add
fsub
jne
in
jb
dec
out
jb
xchg
data16
sar
mov
mov
sbb
lea
and
jb
lahf
pop
mov
hlt
sbb
out
fsubr
jnp
mov
and
pop
das
out
jb
jo
sbb
movs
sbb
pop
(bad)
dec
in
call
push
(bad)
dec
in
pop
mov
sbb
call
sub
inc
out
(bad)
in
movs
push
sbb
mov
pop
movs
lea
out
pop
lea
xchg
cmp
sub
(bad)
dec
in
mov
sbb
mov
int3
scas
imul
xor
pop
lea
dec
int
sbb
dec
dec
int3
scas
imul
xor
pop
lea
int3
jb
sbb
out
movs
jb
fwait
in
jb
in
inc
sti
xor
pop
lea
bound
mov
lods
neg
int3
mov
xor
pop
lea
int3
jb
sbb
xchg
sbb
neg
int3
packssdw
sbb
adc
jb
cdq
pusha
es
sbb
sub
shl
cmp
dec
repnz
test
pop
cmp
fstp
shr
xchg
cmp
cdq
ror
xchg
loope
in
movs
sbb
sbb
jb
sbb
mov
cmp
jb
xchg
push
icebp
jl
in
mov
movs
pop
dec
xchg
loope
dec
outs
pop
and
sbb
jb
outs
mov
shl
pop
std
sbb
mov
ror
mov
cli
sub
icebp
sti
push
dec
sbb
lahf
js
repz
or
jb
in
pop
pop
jecxz
mov
movs
and
mov
ror
pop
mov
das
movs
jb
cdq
pusha
push
inc
addr16
cmp
std
cwde
inc
fwait
xchg
pop
test
loope
cmp
push
sub
mov
in
jle
outs
lods
call
mov
sti
push
dec
hlt
and
(bad)
xchg
pop
inc
dec
xchg
arpl
icebp
loop
push
out
sbb
into
jb
sbb
jb
outs
test
rcl
sub
sbb
je
xchg
(bad)
rol
pop
mov
sbb
movs
in
mov
jb
adc
in
mov
jb
sub
xchg
pop
pop
dec
xchg
arpl
cld
sbb
ja
sub
and
xchg
shl
pop
mov
int
push
ins
push
xor
sbb
mov
pop
inc
dec
xchg
arpl
icebp
out
sbb
sbb
mov
out
jecxz
mov
fs
mov
fs
mov
into
jb
sbb
movs
in
mov
jb
adc
in
mov
jb
sub
in
mov
jb
adc
test
pop
or
sub
sub
cmp
dec
sbb
sar
repz
(bad)
jb
cdq
cdq
mov
movs
jb
cmp
sbb
mov
loope
cmp
fld
dec
icebp
loop
pop
test
in
hlt
jo
sbb
movs
jb
sbb
jb
sbb
adc
movs
call
jno
mov
push
rcr
jnp
outs
mov
lea
repnz
xor
sbb
repz
std
mov
mov
sub
shr
jbe
pextrw
lods
neg
sub
sti
push
dec
mul
xchg
sar
inc
test
icebp
out
xor
das
aaa
dec
xchg
pop
jbe
icebp
mov
es
ret
inc
sbb
outs
mov
out
pop
movs
jb
fisubr
stc
loope
bound
sbb
cdq
fstp
movs
jb
call
outs
outs
test
mov
pop
scas
xchg
pop
cmp
mov
aaa
movs
fsub
xchg
sbb
cmp
repnz
mov
sub
lock
movs
jnp
outs
mov
and
mov
retf
jb
pop
pop
sti
jbe
data16
loope
sub
jo
(bad)
sub
shl
cmp
dec
repnz
icebp
jmp
inc
ds
jb
dec
dec
and
sbb
gs
daa
mov
dec
into
xor
jb
xchg
loope
test
dec
fs
jmp
add
xchg
icebp
inc
imul
pop
lahf
pop
dec
push
test
sbb
mov
in
jb
push
stos
vpmulhuw
mov
adc
int3
daa
mov
dec
sub
jb
mov
push
nop
jne
cmps
sti
loope
sub
and
fadd
xor
movs
icebp
jo
ret
in
vpmulhuw
stc
icebp
out
sti
sub
shl
cmp
sbb
out
repz
clc
pop
pop
dec
jne
mov
mov
daa
xlat
pop
in
lea
pop
and
test
das
jmp
ja
push
jae
xchg
bound
outs
mov
jns
sbb
iret
dec
in
lea
out
mov
fs
cmps
adc
cli
pop
movs
jb
lahf
jl
dec
in
imul
mov
and
or
pop
(bad)
dec
jno
stos
dec
out
inc
aas
(bad)
jo
dec
in
into
mov
mov
xor
jb
xchg
and
jb
shl
in
jp
push
movs
jb
repnz
mov
sub
mov
pop
lods
sti
xor
pop
(bad)
dec
xchg
gs
jl
in
mov
movs
pop
dec
xchg
arpl
mov
out
jae
dec
dec
sbb
jo
int3
daa
imul
rcl
std
icebp
sbb
imul
add
pop
mov
cld
aaa
mov
daa
mov
repnz
aaa
mov
sbb
jmp
jecxz
mov
cli
out
dec
scas
pop
lea
dec
and
jo
sub
mov
pop
loope
mov
scas
jb
sbb
ja
cmp
sbb
sub
cmps
pop
lea
repz
repnz
ss
daa
mov
bnd
mov
sbb
jmp
jecxz
mov
cli
out
dec
scas
pop
lea
dec
test
sbb
imul
add
pop
mov
inc
ss
daa
mov
repnz
mov
sbb
jmp
jecxz
mov
cli
out
dec
scas
pop
lea
dec
int
sbb
lock
sub
pop
fst
jae
jb
mov
cmp
iret
dec
in
(bad)
jecxz
call
pop
movs
jb
fidiv
imul
xor
pop
mov
int3
push
imul
pop
push
loopne
mov
pusha
xor
sub
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
jmp
dec
in
call
lods
sbb
scas
pop
lea
dec
pop
lock
neg
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
jmp
dec
in
call
lods
sbb
scas
pop
lea
dec
test
sbb
neg
movs
retf
mov
in
pop
icebp
dec
pop
fst
mov
(bad)
jb
sbb
iret
dec
in
(bad)
jecxz
call
pop
movs
jb
fidiv
inc
cld
sub
lea
sbb
sub
out
xor
pop
and
mov
and
outs
mov
xor
pop
mov
int3
mov
pop
dec
out
mov
pusha
push
pop
sub
jb
mov
cmp
ja
cmp
sbb
sub
cmps
pop
lea
repz
repnz
mov
xchg
push
test
and
jb
push
xor
movs
jmp
jecxz
mov
cli
out
dec
scas
pop
lea
dec
jge
sbb
neg
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
sar
mov
adc
pop
pop
movs
jb
fisubr
or
adc
loopne
(bad)
jb
xchg
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
jmp
push
movs
(bad)
ror
test
lods
neg
hlt
call
mov
jmp
jb
adc
loopne
(bad)
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
and
jb
mov
cmp
ja
or
adc
add
pop
mov
cld
xor
mov
mov
sbb
jmp
jecxz
mov
pop
movs
jb
jns
jb
adc
xchg
sbb
fsub
xor
movs
icebp
jo
daa
sete
stos
div
sbb
dec
in
fwait
sti
sbb
dec
in
repz
dec
xlat
jb
cdq
add
pop
gs
div
pop
lea
in
test
iret
jo
pop
lea
in
les
add
aaa
fadd
and
sbb
inc
clc
gs
mov
xor
dec
out
sti
arpl
sbb
in
and
mov
sbb
in
and
mov
pusha
data16
icebp
jb
in
inc
sti
xor
bound
dec
fwait
sbb
mov
movs
jge
imul
in
xchg
pop
(bad)
rol
div
and
fdivr
xor
movs
icebp
jo
dec
(bad)
hlt
sbb
sub
pop
fldenv
inc
jp
mov
adc
stos
pop
movs
jb
fisubr
or
adc
loopne
(bad)
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
jmp
hlt
sbb
sub
pop
fldenv
jmp
dec
in
call
lods
repz
pop
(bad)
dec
call
dec
in
stc
xor
pop
mov
and
test
dec
xchg
and
inc
in
inc
sti
xor
pop
(bad)
dec
xchg
bound
aas
pop
mov
mov
in
jae
sbb
mov
pop
lea
movs
sti
inc
sub
xchg
loope
mov
ins
jb
and
mov
pop
jge
pop
movs
jb
xchg
and
xor
pop
(bad)
dec
in
data16
xor
pop
and
jb
cdq
pusha
jle
xchg
push
lea
daa
mov
mov
ror
or
pop
(bad)
dec
xchg
push
inc
inc
xchg
(bad)
push
sbb
xor
pop
(bad)
dec
xchg
and
in
(bad)
in
or
sub
inc
in
(bad)
in
adc
mov
xchg
and
add
pop
mov
shr
scas
push
lea
das
test
shr
movs
jb
fidivr
or
adc
loopne
(bad)
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
jmp
mov
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
sar
mov
adc
into
and
lods
call
movs
jb
adc
loopne
(bad)
jb
xchg
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
scas
push
lea
dec
mov
sbb
mov
and
xor
movs
lea
pop
(bad)
dec
in
(bad)
out
mov
mov
in
jnp
adc
pop
sbb
scas
pop
lea
dec
jne
sbb
mov
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
inc
jp
mov
adc
push
and
jb
fisubr
or
adc
loopne
(bad)
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
jmp
dec
in
mov
ja
jb
mov
cmp
ja
or
adc
add
pop
mov
sub
daa
mov
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
das
call
sbb
ja
cmp
sbb
sub
cmps
pop
lea
repz
repnz
daa
mov
repnz
dec
mov
sbb
jmp
jecxz
mov
(bad)
out
dec
scas
pop
lea
dec
ins
mov
movs
icebp
jo
and
jb
iret
cdq
jb
mov
cmp
ja
or
mov
add
pop
mov
push
dec
mov
daa
mov
repnz
mov
sbb
jmp
jecxz
mov
cli
out
dec
scas
pop
lea
dec
mov
jo
dec
stc
mov
movs
retf
mov
in
pop
icebp
dec
pop
fst
arpl
jb
sbb
iret
dec
in
(bad)
jecxz
call
daa
movs
jb
fidiv
dec
scas
pop
lea
dec
cmc
mov
movs
icebp
jo
sub
mov
daa
cdq
jb
mov
cmp
ja
or
adc
add
pop
mov
clc
dec
mov
daa
mov
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
pop
cdq
jb
mov
cmp
ja
or
adc
add
pop
mov
or
daa
mov
jb
lods
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
in
mov
mov
sbb
sub
pop
fldenv
jmp
dec
in
call
lods
push
les
dec
dec
das
test
cmps
lods
neg
hlt
call
mov
xor
movs
jb
adc
aaa
loopne
(bad)
jb
xchg
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
sbb
mov
adc
es
jb
fisubr
or
adc
loopne
(bad)
jb
xchg
neg
pop
(bad)
dec
in
lea
jb
cdq
pusha
jp
ins
fbstp
in
inc
sti
xor
pop
(bad)
dec
xchg
bound
or
adc
int
mov
cmp
sbb
fdiv
jns
mov
dec
jge
sbb
(bad)
sbb
sub
pop
fldenv
jmp
dec
in
call
lods
sbb
out
dec
scas
pop
lea
dec
mov
adc
sbb
sub
pop
fldenv
jmp
dec
in
call
lods
repz
imul
dec
mov
sbb
jmp
jecxz
mov
and
mov
push
mov
xchg
sbb
fsub
xor
movs
icebp
jo
int3
mov
add
pop
mov
sub
mov
daa
mov
jo
sbb
movs
sbb
lods
call
dec
lea
and
jb
scas
pop
lea
dec
cmc
mov
movs
sbb
pop
and
dec
in
lea
repnz
(bad)
dec
repnz
sbb
pop
in
lea
jb
in
mov
pop
call
movs
cmp
movs
jb
lahf
dec
lea
sti
sub
shl
cmp
sbb
mov
std
sub
lea
sbb
mov
jb
scas
neg
sub
dec
in
(bad)
in
adc
sbb
mov
sbb
hlt
imul
lea
int3
jae
sbb
inc
jmp
icebp
in
clc
icebp
in
ja
movs
into
jb
and
mov
out
scas
neg
int3
jae
sbb
addr16
mov
jle
neg
int3
cdq
push
sbb
dec
cdq
pusha
push
xor
sbb
mov
xor
sbb
and
movs
movd
push
mov
mov
movs
stc
icebp
adc
mov
xor
xor
loope
aas
push
mov
sti
xor
pop
pop
dec
xchg
arpl
xchg
loope
cmp
dec
dec
cmp
adc
es
out
and
dec
inc
sbb
sti
xor
lea
adc
dec
in
call
lods
stc
cmp
lea
lock
xchg
lock
pop
sub
lea
(bad)
call
fmul
adc
pop
lea
jb
xchg
and
dec
in
lea
sbb
repnz
inc
mov
das
daa
mov
in
jmp
adc
lea
lock
xchg
lock
pop
sub
lea
sbb
jb
pop
movs
call
xor
pop
pop
movs
jb
or
jb
lahf
add
mov
movs
jb
dec
xchg
jb
dec
dec
dec
lea
movs
sbb
lahf
adc
sbb
out
fsubr
cmps
jb
call
jo
lods
mov
pop
repnz
dec
sub
sbb
fcomp
movs
jb
xchg
and
cmp
hlt
call
xor
and
pop
lea
sub
cmp
pop
lea
cmp
dec
in
(bad)
adc
pop
(bad)
loop
and
dec
in
and
lea
pusha
push
cmp
in
mov
pop
repnz
dec
test
(bad)
out
cmp
hlt
call
lea
add
pop
(bad)
in
and
pop
mov
dec
in
div
out
(bad)
ficomp
jb
lahf
sbb
dec
in
call
mov
sti
jae
and
dec
in
ss
movs
mov
(bad)
pop
lea
movs
jb
jl
neg
lea
pop
lea
dec
mov
movs
jb
fnstsw
test
mov
dec
in
push
mov
sub
or
pop
(bad)
in
movs
sbb
movs
sbb
pop
and
sbb
sbb
mov
movs
lea
mov
lea
sbb
mov
sub
mov
scas
xor
imul
leave
(bad)
out
cmp
hlt
call
mov
xor
lea
dec
pop
xor
sbb
test
shr
sbb
fs
scas
jb
jno
sbb
sbb
dec
sbb
test
pop
(bad)
mov
fcomp
fdiv
bnd
iret
and
pop
lea
movs
jb
and
jae
sbb
test
dec
lds
jb
scas
neg
sub
dec
in
(bad)
in
loopne
dec
in
mov
daa
pop
lea
cmp
test
add
dec
in
jb
fnstsw
jg
mov
movs
repz
xchg
jb
xchg
and
dec
in
and
jb
mov
push
xchg
cmp
in
mov
repnz
mov
into
jb
scas
add
xchg
movs
lea
mov
add
sbb
imul
out
lea
sbb
mov
xchg
and
dec
in
sti
jae
cli
sub
mov
icebp
pop
or
and
xchg
stc
or
inc
dec
xchg
arpl
xchg
movs
sti
jbe
sub
inc
dec
xchg
arpl
xchg
movs
sti
jbe
sub
bound
jb
xchg
data16
dec
push
and
jb
xchg
data16
dec
push
jge
pop
pop
jge
dec
pop
jae
adc
je
add
push
or
xchg
movs
sti
jb
dec
and
sbb
mov
xor
mov
mov
sti
inc
pop
hlt
call
test
rcl
xor
mov
jb
in
jle
lods
loope
cmp
ja
dec
dec
push
test
movs
sti
dec
xor
in
bound
pop
mov
mov
pop
mov
in
lods
inc
mov
idiv
pop
pop
push
sbb
jge
dec
pop
jae
adc
loopne
mov
dec
cdq
test
movs
push
loop
sbb
movs
sbb
movs
jb
fsub
jb
in
call
pop
and
repnz
inc
mov
repnz
pop
sub
loope
inc
retf
movs
jb
fwait
xchg
jb
dec
repnz
push
pop
mov
mov
sbb
push
in
sti
jae
and
push
in
xor
cmps
inc
lea
sub
je
pop
(bad)
in
ret
sbb
sbb
xor
push
aaa
mov
scas
pusha
xchg
dec
in
std
sbb
icebp
jo
lods
mov
add
pop
lea
test
call
xchg
cmp
in
mov
(bad)
cdq
in
frstor
into
push
in
xor
cmps
inc
lea
sub
je
pop
(bad)
in
dec
sbb
je
nop
sti
dec
xor
dec
pop
(bad)
jo
pop
lea
jb
cdq
pusha
jp
fcmovbe
imul
xchg
dec
in
pop
mov
sbb
repz
and
push
inc
je
cli
sub
icebp
sti
push
mov
dec
loope
sbb
mov
inc
and
jb
jmp
mov
movs
jb
inc
xchg
jb
xchg
jge
jl
in
mov
movs
pop
dec
xchg
arpl
mov
dec
dec
push
or
pop
icebp
jo
int3
daa
imul
pop
pop
nop
jb
cdq
pusha
jp
in
xor
mov
sub
mov
push
jnp
mov
and
in
and
jb
cdq
pusha
jp
sti
xchg
jb
mov
cmp
ja
push
int3
adc
xor
inc
lea
dec
lea
adc
sbb
sub
pop
fstp
mov
jb
mov
cmp
iret
mov
pop
(bad)
jecxz
cld
scas
neg
sub
mov
pop
(bad)
jecxz
add
mov
daa
mov
repnz
mov
sbb
jmp
jecxz
mov
cli
out
cmp
hlt
call
lods
sti
inc
xor
jb
lods
neg
sub
mov
pop
(bad)
in
and
sbb
mov
repnz
mov
sbb
jmp
jecxz
mov
cli
out
cmp
hlt
call
lods
call
movs
jb
adc
loopne
setge
lods
inc
mov
sbb
jmp
jecxz
dec
sbb
dec
int3
sub
movs
dec
sbb
dec
dec
lea
or
movs
jb
lods
neg
sub
mov
pop
(bad)
in
test
mov
pop
(bad)
in
js
mov
daa
mov
xchg
push
test
and
jb
adc
mov
sbb
jmp
jecxz
mov
cli
out
cmp
hlt
call
lods
sbb
lahf
movs
xchg
dec
in
call
lods
call
movs
jb
adc
loopne
push
jb
xchg
neg
sub
mov
pop
(bad)
in
xor
sbb
mov
jb
lods
neg
sub
mov
pop
(bad)
in
and
mov
daa
mov
xchg
push
test
and
jb
xchg
inc
mov
sbb
jmp
jecxz
mov
sub
mov
push
mov
xchg
sbb
in
and
mov
sbb
in
and
mov
pusha
(bad)
fdiv
jp
mov
and
in
and
jb
cdq
pusha
jp
sti
xchg
jb
mov
cmp
ja
push
int3
adc
xor
inc
lea
dec
lea
adc
cmp
movs
push
sbb
dec
dec
cdq
test
movs
icebp
jo
sub
mov
mov
scas
jb
sbb
ja
push
int3
adc
xor
inc
lea
dec
int
sbb
push
movs
push
sbb
dec
dec
fld
adc
sbb
sub
pop
fldenv
jmp
push
in
and
jb
cdq
pusha
jp
in
aaa
pop
mov
pop
pop
mov
in
and
xor
xor
pop
and
jb
cdq
pusha
bound
jb
mov
cmp
ja
push
int3
adc
xor
inc
lea
dec
dec
test
movs
icebp
jo
int3
jb
pop
movs
push
sbb
dec
dec
push
test
movs
icebp
jo
dec
xchg
test
movs
retf
mov
in
pop
icebp
dec
pop
fldenv
jmp
push
in
and
jb
cdq
pusha
jp
and
inc
sti
xor
jnp
dec
xchg
bound
or
adc
int
mov
cmp
sbb
in
and
mov
sbb
in
and
mov
pusha
bound
jb
mov
cmp
ja
push
int3
adc
xor
inc
lea
dec
jmp
jo
int3
lods
imul
lea
dec
cmc
test
movs
icebp
jo
and
jb
daa
xchg
jb
mov
cmp
ja
push
int3
adc
xor
inc
lea
dec
sub
dec
test
movs
retf
mov
in
pop
icebp
dec
pop
fstp
pop
xchg
jb
mov
cmp
iret
mov
pop
(bad)
jecxz
cld
scas
neg
sub
mov
pop
(bad)
jecxz
pop
pop
mov
daa
mov
jb
scas
neg
sub
mov
pop
(bad)
in
test
mov
daa
mov
jo
sbb
movs
sbb
sub
mov
sub
lea
sbb
div
test
mov
into
jb
cmps
pop
lods
dec
in
and
cmps
movs
xchg
dec
in
lea
out
lea
inc
pop
mov
pop
(bad)
dec
lds
pop
addr16
jb
sub
sbb
sbb
(bad)
mov
xor
sbb
and
movs
dec
pop
dec
jno
mov
sub
lea
out
lea
shl
xchg
stc
jp
repnz
mov
das
daa
mov
xchg
xor
dec
in
sti
dec
in
inc
sti
xor
arpl
in
nop
pop
mov
dec
dec
inc
in
repz
xchg
jb
jb
movs
neg
dec
add
xor
mov
mov
and
dec
in
and
jb
jb
jae
sbb
test
jb
scas
neg
int3
(bad)
push
sbb
dec
cdq
pusha
push
mov
sbb
mov
and
cmp
hlt
call
movs
mov
out
(bad)
out
and
dec
in
and
lea
pusha
jle
fisubr
jb
mov
and
pop
mov
jb
xchg
and
dec
in
and
lahf
pop
mov
hlt
call
inc
lea
and
dec
in
sti
dec
sbb
jo
sbb
pop
and
jb
cdq
pusha
outs
xor
sbb
or
pop
(bad)
lock
dec
in
jb
sbb
iret
sub
pop
lea
dec
mov
movs
jb
fst
sbb
pop
(bad)
in
mov
push
mov
sub
or
pop
(bad)
in
movs
sbb
movs
sbb
pop
and
sbb
sbb
mov
movs
lea
mov
lea
fs
mov
sub
mov
scas
add
dec
in
pusha
imul
leave
(bad)
out
cmp
hlt
call
mov
xor
lea
dec
pop
xor
sbb
test
shr
lahf
sbb
scas
jb
jno
sbb
sbb
dec
sbb
test
pop
(bad)
mov
mov
sbb
repnz
pop
mov
sub
mov
push
movs
jb
xchg
and
dec
in
and
repnz
pop
mov
into
jae
jo
xor
pop
and
lea
pusha
jle
in
jb
adc
movs
push
xchg
pop
lea
neg
aaa
fisubr
mov
movs
sbb
pop
push
xchg
pop
lea
dec
cmp
inc
gs
jb
xchg
and
dec
in
and
xor
arpl
pop
sti
jb
adc
dec
in
call
js
mov
mov
sbb
repnz
pop
mov
daa
mov
adc
jb
scas
neg
dec
lea
xchg
dec
cdq
dec
dec
out
addr16
dec
pop
(bad)
and
pop
lea
lea
pusha
jle
add
pop
lea
repnz
and
in
out
in
call
test
pop
dec
jb
dec
dec
jne
sbb
dec
sbb
dec
in
and
jb
xchg
pop
jae
xchg
arpl
mov
adc
dec
in
call
add
pushf
sbb
dec
icebp
mov
jb
inc
cli
sub
mov
icebp
pop
or
and
xchg
stc
jp
in
rcl
arpl
dec
lea
xchg
loope
dec
outs
test
(bad)
xor
loopne
mov
ficomp
or
repnz
jmp
out
sub
pop
mov
pop
pop
mov
dec
dec
jne
sbb
mov
loope
in
movs
and
mov
xor
mov
mov
sub
call
push
xchg
cmp
xchg
loope
in
dec
xor
ja
jb
xchg
loope
jmp
(bad)
mov
or
mov
mov
xor
repnz
xchg
fwait
arpl
sbb
pop
out
jb
xchg
(bad)
sti
dec
xor
adc
mov
fs
div
jge
sbb
div
dec
dec
xchg
pushf
sbb
cmp
hlt
call
test
dec
in
jb
push
sub
test
sbb
call
dec
fucomp
inc
ins
mov
xchg
inc
icebp
pop
push
repz
pop
xor
wbinvd
mov
ret
in
jb
js
vpmulhuw
sbb
pop
push
and
jb
fwait
push
pop
in
sbb
mov
out
mov
pop
inc
xor
out
pop
xor
aaa
dec
cdq
fs
jb
test
inc
dec
dec
in
sahf
sbb
inc
dec
into
jb
pop
movs
jb
in
pop
sub
call
loope
mov
loop
push
and
mov
xchg
inc
icebp
pop
push
repnz
fsub
push
xchg
cmp
jo
sbb
jo
sbb
jo
sbb
movs
jb
sbb
jb
sbb
bound
jb
xchg
arpl
fcom
movs
jb
cld
sub
sbb
das
and
neg
dec
std
pushf
sbb
dec
das
dec
out
cmc
sbb
sbb
dec
das
and
neg
dec
sbb
mov
into
inc
dec
das
mov
cmc
sbb
sbb
dec
das
mov
cmp
pop
test
jb
jo
and
pushf
test
jb
and
fisubr
pop
inc
xchg
test
jb
xor
fisubr
pop
inc
and
out
pop
add
fisubr
pop
inc
sar
jb
xchg
push
inc
inc
xchg
bound
mov
into
inc
dec
das
xchg
jmp
sbb
sbb
dec
das
push
out
cmc
sbb
sbb
dec
das
xor
neg
dec
mov
mov
into
inc
dec
das
cmp
neg
dec
mov
sbb
inc
cld
sub
sub
or
mov
and
in
call
movs
jb
cmp
xor
into
mov
dec
out
cmc
sbb
sbb
adc
cmp
cmp
mov
mov
hlt
sbb
mov
and
neg
dec
gs
sbb
mov
pop
lea
repnz
push
mov
pop
push
sub
sbb
pop
inc
cwde
test
jb
test
xor
pop
jb
pop
movs
sbb
pop
inc
test
in
pop
rol
lea
repnz
mov
pop
or
popf
in
fsubp
pop
inc
pushf
test
jb
mov
pop
lea
repnz
pop
pop
sub
popf
in
fsubp
pop
inc
xchg
test
jb
fwait
xor
pop
inc
dec
xchg
arpl
dec
in
not
cmp
jb
push
cmp
mov
mov
hlt
sbb
mov
and
neg
dec
and
ja
sub
and
movs
push
or
pop
and
jb
out
jg
mov
sar
mov
dec
xchg
bound
pop
shl
loop
daa
mov
daa
mov
mov
into
jb
repnz
and
jb
pop
push
and
repnz
into
jb
das
nop
in
cmc
sbb
jb
xchg
loope
lahf
pop
push
and
pop
pop
pop
icebp
jmp
mov
and
fadd
jnp
mov
inc
test
mov
movs
call
add
mov
movs
lea
jo
and
es
aaa
dec
xor
xor
shl
push
into
data16
movs
repnz
pusha
test
outs
pop
movs
sbb
pop
jbe
pop
movs
sti
dec
xor
jo
lea
jo
lea
jb
jae
sbb
aaa
dec
xor
xor
shl
dec
into
data16
movs
repnz
js
neg
int3
test
pop
movs
sbb
pop
adc
movs
sbb
movs
sbb
jo
sbb
into
jb
sbb
jp
push
dec
jne
sbb
fisubr
pop
inc
mov
in
pop
jg
jb
jo
lea
jo
lea
jo
sbb
jle
pop
fcomp
movs
jb
jb
test
outs
pop
movs
sbb
pop
push
adc
sub
jb
jo
lea
jo
lea
jo
sbb
(bad)
into
pop
fcomp
movs
jb
jb
test
outs
pop
movs
sbb
pop
rcl
pop
movs
sbb
movs
sbb
movs
sbb
int3
shl
movs
jb
dec
int3
mov
outs
shl
ficomp
dec
xchg
nop
sbb
ficomp
pop
inc
add
inc
lock
int3
or
sbb
mov
hlt
sbb
shl
fadd
jg
mov
movs
call
cmp
mov
movs
lea
jo
lea
jo
sbb
jb
jb
sbb
data16
movs
repnz
js
neg
int3
imul
movs
sbb
pop
call
xor
fisubr
fcomp
jb
dec
dec
inc
nop
sbb
ficomp
int3
xor
repnz
mov
mov
jb
das
nop
in
cmc
sbb
jb
das
(bad)
shl
sbb
pop
mov
movs
sbb
sbb
or
sbb
neg
int3
imul
movs
sbb
pop
repnz
inc
jecxz
mov
movs
lea
jo
lea
jb
jae
sbb
dec
fdiv
or
sbb
jno
call
fcomp
movs
call
cmp
mov
mov
dec
das
nop
in
cmc
sbb
jb
das
loopne
cmc
sbb
(bad)
fisub
int3
xchg
mov
movs
sbb
sbb
in
iret
test
sbb
test
pop
movs
sbb
pop
loop
pop
movs
sti
dec
in
inc
sti
icebp
imul
inc
add
inc
lock
int3
repz
movs
sbb
movs
jb
push
movs
jb
jb
jb
dec
int3
and
movs
sbb
out
ficomp
dec
xor
sar
inc
add
inc
lock
into
adc
mov
addr16
sbb
jb
sbb
sbb
shl
fadd
jg
mov
movs
call
cmp
lea
jo
lea
jo
sbb
movs
jb
sub
sbb
jle
mov
jle
neg
into
jb
iret
xchg
mov
into
jb
das
nop
in
cmc
sbb
jb
das
loopne
cmc
sbb
(bad)
fimul
mov
movs
sbb
movs
jb
sbb
neg
int3
test
pop
movs
sbb
pop
out
pop
movs
sbb
movs
sbb
movs
sbb
int3
jecxz
sbb
xor
int3
scas
imul
mov
out
fcomp
cmps
jb
repnz
sbb
not
in
inc
sub
sbb
movs
sbb
int3
mov
sbb
xor
int3
loop
pop
movs
sbb
sbb
push
mov
pop
outs
and
sti
dec
xor
jo
lea
jo
lea
jo
sbb
into
data16
movs
repnz
js
neg
int3
jae
pop
movs
sbb
test
mov
into
jb
das
nop
in
cmc
sbb
jb
das
(bad)
shl
sbb
push
jle
xchg
movs
jb
dec
int3
scas
imul
mov
out
fcomp
cmps
jb
repnz
sbb
push
sub
sbb
movs
sbb
movs
sbb
sbb
(bad)
jb
jb
dec
int3
xchg
ins
pop
movs
sbb
out
ficomp
dec
add
mov
pop
lea
pop
pop
dec
xchg
arpl
jmp
ins
mov
xchg
inc
icebp
pop
add
and
test
pop
inc
dec
xchg
arpl
inc
shl
dec
outs
lods
call
int3
sahf
outs
pop
movs
and
push
push
lea
pusha
bound
adc
xor
arpl
mov
xchg
jp
pop
movs
call
push
and
repnz
push
mov
into
jb
das
nop
in
cmc
sbb
jb
xchg
loope
lahf
pop
push
and
pop
pop
pop
icebp
jmp
mov
and
fadd
jnp
mov
inc
test
mov
movs
call
add
mov
movs
lea
jo
and
es
aaa
dec
xor
xor
shl
push
into
data16
movs
repnz
ins
stos
neg
int3
test
pop
movs
sbb
pop
jbe
pop
movs
repz
ja
jb
jo
lea
jo
lea
jb
jae
sbb
aaa
dec
xor
xor
shl
dec
into
data16
movs
repnz
js
neg
int3
test
pop
movs
sbb
pop
adc
movs
sbb
movs
sbb
jo
sbb
into
jb
sbb
jp
push
dec
jmp
jb
movs
and
sub
mov
in
pop
jecxz
jb
jo
lea
jo
lea
jo
sbb
jo
sbb
dec
int3
scas
imul
xor
out
ficomp
dec
popf
stos
sbb
xor
sbb
or
movs
sbb
hlt
call
jle
mov
movs
sbb
sbb
cmc
sbb
sbb
mov
shl
into
jae
push
movs
jb
in
call
movs
jb
push
into
jb
sbb
cmp
sbb
mov
shr
into
jb
das
nop
in
cmc
sbb
jb
das
(bad)
shl
sbb
pop
mov
movs
sbb
jb
jb
dec
int3
scas
imul
xor
out
ficomp
dec
and
xor
out
cmp
(bad)
jb
das
nop
in
cmc
sbb
jb
das
(bad)
shl
sbb
pop
mov
movs
sbb
sbb
in
js
neg
int3
imul
movs
sbb
pop
pop
sub
call
pop
inc
add
inc
lock
int3
repz
movs
sbb
jb
jae
sbb
jb
sbb
sbb
shl
fadd
jg
mov
movs
call
add
lea
jo
lea
jo
sbb
jb
jb
sbb
mov
sbb
fcomp
xor
into
jb
mov
xchg
jmp
sbb
xchg
movs
test
loope
cmp
das
nop
in
cmc
sbb
jb
das
loopne
cmc
sbb
(bad)
fsub
movs
jb
jb
jb
sbb
push
fcomp
movs
jb
jb
test
sbb
test
pop
movs
sbb
pop
sub
movs
sbb
movs
sbb
movs
sbb
movs
jb
mov
movs
jb
dec
int3
je
pop
movs
sbb
out
ficomp
dec
push
stos
sbb
ficomp
pop
inc
add
inc
lock
int3
xchg
mov
movs
sbb
movs
jb
add
jb
sbb
sbb
ret
out
fadd
jg
mov
movs
call
add
lea
jo
lea
jo
sbb
movs
jb
in
jb
jo
sbb
jge
mov
jle
neg
into
jb
stos
mov
shl
sbb
jb
das
nop
in
cmc
sbb
jb
das
(bad)
shl
sbb
push
cwde
movs
jb
jo
sbb
dec
int3
loop
pop
movs
sbb
sbb
outs
mov
pop
outs
and
repz
cdq
fnsave
jo
lea
jo
lea
jo
sbb
movs
jb
dec
int3
scas
imul
mov
out
fcomp
cmps
jb
repnz
outs
mov
pop
pop
sub
sbb
movs
sbb
movs
sbb
mov
mov
and
fadd
jnp
mov
movs
test
sbb
jb
sbb
pop
cmp
xor
cmp
mov
movs
lea
jo
sbb
sbb
mov
mov
and
stc
jge
mov
pop
stos
neg
into
jb
xlat
mov
shl
sbb
in
retf
movs
jb
std
sub
call
ins
mov
xchg
inc
icebp
pop
add
and
movs
xchg
sub
aaa
pop
xchg
arpl
mov
and
mov
into
jno
sbb
jno
sbb
pop
xchg
icebp
dec
in
mul
sbb
call
repnz
pop
jb
pop
push
jbe
sbb
icebp
repnz
and
pop
push
and
pop
pop
and
mov
mov
movs
jb
repnz
ror
daa
mov
and
mov
pop
into
jb
outs
pop
sbb
ret
out
fmul
xor
lods
call
mov
mov
cmp
jbe
push
sub
dec
dec
pop
pop
movs
jb
(bad)
neg
int3
jae
sbb
retf
mov
mov
sti
jae
cli
sub
icebp
sti
push
fwait
dec
jp
sbb
stos
jle
xor
pop
xor
sbb
rol
movs
push
sbb
dec
dec
dec
sub
dec
push
movs
jb
adc
push
mov
call
or
movs
lea
hlt
call
lea
dec
sbb
arpl
ret
mov
and
in
and
jb
call
inc
stos
out
cmp
hlt
call
pop
jbe
or
add
push
sbb
dec
dec
dec
cdq
mov
sbb
call
test
movs
lea
hlt
call
pop
je
or
cmp
sbb
dec
dec
dec
lds
in
pop
movs
jb
ret
neg
sub
mov
pop
(bad)
in
add
mov
and
dec
adc
arpl
cdq
adc
jb
in
and
jb
xchg
push
pop
inc
xchg
(bad)
leave
in
pop
movs
jb
ret
neg
sub
mov
pop
(bad)
in
enter
and
dec
adc
arpl
lds
jb
in
and
jb
call
mov
out
cmp
hlt
call
pop
jle
or
push
push
pop
movs
push
sbb
dec
dec
dec
push
mov
in
pop
movs
jb
shl
sub
mov
pop
(bad)
in
mov
mov
sub
test
and
dec
adc
arpl
dec
push
xor
pop
and
jb
jo
sbb
int3
cmp
movs
push
sbb
dec
dec
int3
jb
pop
movs
call
jge
mov
sbb
neg
int3
xor
pop
movs
call
cmp
push
push
pushf
xchg
push
test
and
jb
or
mov
and
dec
das
pop
mov
dec
sub
mov
in
repnz
mov
jnp
in
icebp
jo
lods
mov
adc
jb
repnz
sbb
sub
inc
data16
dec
sub
jp
sbb
and
movs
mov
test
jbe
jb
hlt
xchg
sbb
add
pop
movs
push
not
dec
dec
dec
pop
mov
add
mov
push
mov
push
mov
and
inc
loop
lea
test
jb
lahf
dec
test
hlt
call
push
mov
cmps
pop
movs
jb
shl
sub
pop
in
pop
(bad)
in
inc
addr16
and
inc
loop
lea
test
jb
lahf
dec
test
hlt
call
mov
mov
inc
sti
xor
push
lea
(bad)
or
pop
lea
shl
sbb
xor
pop
and
jb
call
ror
imul
movs
push
not
dec
dec
dec
cmc
mov
jmp
shl
cs
xor
pop
and
jb
call
ror
cmp
xor
push
lea
dec
and
sbb
call
ror
push
pop
pop
movs
push
not
dec
dec
dec
inc
mov
jmp
shl
xchg
pop
xor
pop
and
jb
call
ror
fadd
pop
movs
push
not
dec
dec
dec
lea
jmp
shl
rcl
xor
pop
and
jb
xchg
push
test
and
jb
sbb
ror
call
push
lea
dec
int
sbb
dec
pop
shl
sbb
xor
pop
and
jb
call
ror
push
add
push
not
dec
dec
dec
stc
mov
mov
dec
test
hlt
call
push
xchg
cmp
in
mov
push
xor
dec
mov
pop
icebp
jo
sub
lea
push
mov
xchg
push
mov
in
jb
sahf
lahf
jno
sbb
jb
jmp
dec
in
mov
jmp
fsubr
xor
daa
mov
xchg
and
je
and
mov
movs
jb
cmps
pop
mov
movs
jge
shl
mov
pop
dec
mov
sbb
dec
out
lea
sbb
dec
sbb
sbb
test
and
jb
and
fsubr
jge
mov
and
pop
fwait
mov
jle
cmps
pop
mov
movs
push
popf
repnz
mov
push
mov
add
and
loopne
mov
add
std
sti
jae
lahf
iret
dec
loop
lea
sbb
dec
aam
in
mov
xchg
sbb
out
fdiv
jge
mov
and
pop
bsf
xchg
push
pop
inc
xchg
bound
and
out
fadd
and
pop
jecxz
jb
cdq
pusha
push
push
int3
jb
sbb
dec
dec
dec
push
mov
inc
movs
jb
cld
sub
lea
loop
(bad)
in
mov
neg
sub
dec
in
(bad)
in
sbb
sbb
jno
pop
movs
push
out
lea
dec
mov
jo
sub
dec
in
(bad)
in
mov
mov
sub
dec
out
lea
fisub
mov
hlt
sbb
out
cmp
hlt
call
mov
mov
and
pop
mov
movs
sbb
out
cmp
hlt
call
test
je
and
mov
movs
push
out
lea
fs
bnd
mov
std
sti
xor
pop
lea
push
test
and
jb
sbb
mov
sbb
dec
loop
(bad)
fmul
inc
stos
neg
sub
dec
loop
(bad)
in
movs
gs
daa
mov
jb
shl
sub
dec
in
(bad)
in
nop
pusha
mov
sub
dec
in
(bad)
in
nop
data16
sub
lea
das
mul
pop
lea
mov
pop
ror
mul
pop
lea
mov
jb
adc
pop
lea
cmps
jo
dec
in
add
push
xchg
and
jb
adc
xor
pop
lea
int3
movs
ins
pop
movs
push
out
lea
dec
or
jo
sub
dec
loop
(bad)
in
pusha
popa
mov
sub
lea
cmps
pop
mov
repz
ins
test
sub
mov
repz
repnz
pusha
mov
sub
lea
sbb
test
adc
ret
jb
lahf
pop
mov
hlt
call
pop
mov
repz
or
pop
lea
fdiv
dec
dec
and
loop
lea
into
jb
scas
push
mov
int3
nop
(bad)
pop
movs
sbb
movs
jb
bnd
mov
sub
dec
out
(bad)
in
pop
(bad)
pop
loop
lea
lea
pusha
jle
fldcw
(bad)
dec
in
(bad)
pop
loop
lea
jb
fwait
dec
pop
sti
sbb
pop
das
mov
mov
dec
fisttp
pop
sub
mov
icebp
sti
push
mov
dec
leave
movs
sbb
test
cmp
sub
jb
ret
into
jb
sbb
mov
sub
lea
repnz
arpl
mov
mov
and
jb
pop
lods
rol
pop
hlt
out
cmc
sbb
jb
sbb
test
fxch
and
pop
movs
call
movs
jb
jb
shl
sbb
sbb
in
test
sbb
jb
push
movs
jb
xchg
and
pop
in
and
lods
call
int3
loop
pop
movs
push
stos
dec
lea
dec
jns
in
icebp
jo
cdq
lea
movs
jge
add
jb
cdq
mov
jp
aas
rol
neg
pop
ja
scas
out
xor
sbb
sbb
in
test
pop
jne
jecxz
pop
jle
je
cmp
xchg
pop
cli
and
and
pop
in
jae
sub
add
cmps
pop
lahf
dec
in
mov
cmp
loopne
mov
add
std
sti
jb
bound
cmp
mov
and
pop
in
jae
lahf
pop
lahf
dec
in
jp
fisub
jb
lahf
setg
movs
call
push
mov
outs
stos
mov
mov
lea
(bad)
neg
neg
xchg
pop
and
mov
stos
neg
sub
sub
pop
(bad)
in
test
mov
and
jb
sbb
imul
neg
in
and
pop
in
and
jb
xchg
and
pop
in
and
lea
and
pop
in
and
lea
pusha
push
sbb
imul
neg
in
mov
jae
das
stos
jb
fwait
push
test
ret
fmul
bound
sub
call
(bad)
pushf
dec
in
inc
mov
out
or
jmp
jl
mov
xor
neg
int3
mov
pop
movs
sbb
mov
mov
mov
jl
ins
xchg
dec
xor
dec
xchg
xchg
xor
pop
movs
retf
test
jl
sbb
ret
fmul
bound
and
movs
call
inc
lahf
dec
in
inc
xor
out
or
jmp
jl
mov
xor
neg
int3
mov
pop
movs
sbb
mov
mov
pusha
xor
cmps
sbb
jb
out
or
jmp
jl
ja
movs
sbb
movs
sbb
cmp
mov
cmp
mov
sub
sbb
stos
jb
fucom
retf
movs
jb
pop
sbb
cmp
hlt
call
adc
dec
pop
and
mov
ror
or
hlt
dec
scas
dec
lea
pop
pop
add
js
mov
into
jb
pop
sbb
ficomp
int3
adc
shr
repz
add
jb
fucom
retf
movs
jb
pop
sbb
cmp
hlt
call
adc
dec
pop
and
mov
ror
or
hlt
dec
scas
dec
lea
pop
pop
add
and
sbb
jb
pop
sbb
ficomp
int3
adc
shr
(bad)
shr
retf
movs
jb
stc
sub
lea
lahf
adc
dec
in
mov
pop
inc
test
push
mov
sub
mov
pop
movs
sti
icebp
fcmove
jb
sbb
mov
sub
or
pop
mov
loope
xor
sbb
push
jo
call
jl
icebp
cmps
cmps
jb
sbb
mov
pop
pusha
jb
sbb
mov
sub
or
loope
sbb
sub
sbb
movs
sbb
outs
jb
sti
jg
mov
inc
test
pop
pop
mov
mov
movs
in
cmc
sbb
out
pop
movs
sbb
movs
jb
sbb
in
icebp
jo
dec
add
sbb
ins
pop
movs
call
jl
mov
dec
push
mov
mov
lea
dec
aad
sbb
ficomp
hlt
lea
mov
lea
and
pop
in
jbe
sbb
ja
and
pop
in
and
lahf
or
scas
out
fsub
xor
int3
jae
sbb
cmp
jnp
outs
mov
xor
out
mov
movs
jb
mov
ins
xchg
push
mov
lea
into
jb
sbb
sahf
les
sbb
movs
jb
repnz
mov
sub
sbb
pop
(bad)
in
movs
sbb
into
jb
sbb
sbb
mov
movs
sbb
movs
jb
sbb
mov
in
pop
inc
stos
jb
icebp
mov
call
cdq
dec
mov
sub
push
dec
dec
lds
jo
sbb
lock
sbb
sub
shl
mov
sub
jo
sbb
and
movs
mov
mov
sbb
dec
or
jb
adc
mov
sbb
mov
movs
jb
adc
movs
dec
cmps
sbb
mov
movs
jge
mov
jb
daa
pushf
jae
sbb
jb
xchg
add
jb
sahf
jo
mov
int3
xchg
movs
lea
repnz
xchg
dec
in
neg
pop
lea
(bad)
sahf
outs
pop
movs
lea
neg
dec
xacquire
movs
xchg
and
xor
pop
lea
pop
(bad)
pop
out
lea
jb
adc
lahf
movs
jb
xchg
and
dec
das
loopne
cmc
sbb
sbb
xor
pop
lea
and
pop
push
das
out
out
lea
in
mov
push
out
lea
in
call
pop
pop
and
pop
lea
je
test
stc
xor
pop
lea
and
aas
lahf
inc
(bad)
dec
in
imul
(bad)
in
movs
sbb
movs
call
mov
sbb
dec
shr
and
shr
adc
mov
push
inc
(bad)
sbb
mov
and
les
mov
lea
and
les
and
mov
movs
lea
repnz
sbb
movs
mov
pop
movs
dec
icebp
adc
jb
sbb
sbb
adc
and
jp
adc
mov
sbb
cdq
sbb
dec
in
sti
jae
xchg
jne
sbb
aaa
mov
in
repz
jb
jb
and
push
lock
push
mov
mov
push
and
sub
movs
push
cwde
and
push
nop
and
push
test
mov
push
mov
pop
movs
push
mov
pop
movs
jge
shl
ror
xchg
mov
loop
lea
mov
push
movs
and
push
mov
pop
movs
pop
mov
sbb
movs
repnz
mov
int3
lea
movs
(bad)
ror
in
mov
movs
jb
std
sub
lea
out
lea
pop
jb
lahf
js
dec
in
call
dec
(bad)
dec
in
mov
add
mov
pop
pop
dec
xchg
arpl
dec
sbb
dec
in
lea
repnz
js
sbb
mov
pop
lea
movs
sbb
ret
ficomp
dec
and
xor
mov
test
sub
nop
and
in
cli
xor
pop
lea
and
daa
aam
neg
movs
jge
and
sbb
div
in
not
adc
dec
in
mov
mov
ror
test
sti
out
cmp
neg
aaa
fisubr
jb
cmp
jb
sbb
inc
ins
pop
movs
sbb
pop
inc
xor
scas
jb
repz
ja
sbb
mov
movs
test
and
jae
and
in
and
lahf
push
(bad)
dec
in
sbb
lahf
push
(bad)
dec
in
call
mov
dec
sbb
dec
in
lea
repnz
jnp
sbb
mov
pop
lea
movs
sbb
sbb
sbb
mov
mov
test
sbb
dec
cdq
ins
(bad)
hlt
call
dec
or
push
ficomp
into
jb
std
jae
mov
movs
call
mov
mov
jne
movs
jb
lahf
movs
lea
movs
cdq
mov
pop
lea
sahf
mov
dec
test
dec
lea
mov
movs
sbb
out
ficomp
dec
xchg
mov
push
xor
mov
xor
mov
dec
lock
movs
repnz
pop
lea
div
(bad)
retf
cmp
(bad)
div
xchg
and
fdiv
jl
mov
and
pop
(bad)
scas
jb
cdq
pusha
(bad)
fsub
movs
jb
xchg
and
in
and
and
neg
dec
lea
pop
lea
rcl
sbb
jb
fnsave
mov
movs
call
and
neg
dec
gs
push
movs
jb
cmc
lods
sbb
pop
(bad)
in
and
fdiv
jl
mov
and
pop
aaa
scas
jb
cdq
pusha
(bad)
fsub
movs
jb
xchg
and
in
and
mov
cmc
sbb
sbb
dec
sbb
push
ficomp
into
jb
mov
xor
movs
jb
das
mov
cmc
sbb
sbb
cmp
(bad)
div
xchg
and
fdivr
and
pop
fild
(bad)
fsub
movs
jb
xchg
and
in
and
mov
cmc
sbb
sbb
dec
sbb
push
ficomp
into
jb
jno
xor
movs
jb
das
mov
cmc
sbb
sbb
cmp
daa
mov
mov
ror
xchg
jo
sbb
into
jb
jg
jb
in
pop
sub
call
cmps
jb
fsub
lea
pop
jb
daa
stos
les
in
lea
and
in
lea
and
push
ficomp
into
jb
ss
mov
movs
call
mov
cmc
sbb
sbb
xor
pop
mov
movs
clc
xor
pop
lea
cmps
add
xchg
arpl
xor
pop
lea
sub
inc
out
(bad)
in
mov
inc
out
(bad)
in
jl
mov
daa
mov
jb
jb
sbb
div
in
push
sub
call
movs
lea
movs
pop
xchg
jo
sbb
into
jb
mov
jb
in
push
sub
call
cmps
jb
fsub
mov
pop
jb
daa
stos
les
in
lea
and
in
lea
and
push
ficomp
into
jb
hlt
jb
mov
movs
call
test
cmc
sbb
sbb
xor
pop
mov
movs
(bad)
cmp
pop
lea
ins
(bad)
hlt
call
add
popf
mov
mov
mov
lahf
movs
lea
hlt
push
out
pop
lea
int3
pop
ins
pop
movs
push
out
pop
lea
dec
jge
sbb
call
xchg
and
xor
pop
lea
arpl
mov
movs
sbb
jb
jb
pop
int3
xor
pop
movs
call
push
mov
into
jo
sbb
jb
scas
push
mov
dec
shl
push
xor
xchg
jmp
sbb
mov
mov
ror
cmp
mul
fsubr
cmp
xchg
pop
call
sub
inc
out
(bad)
in
cmps
sbb
jb
scas
push
mov
dec
int
sbb
dec
cdq
ins
(bad)
hlt
call
mov
xor
in
cmp
dec
scas
push
mov
dec
loope
sbb
dec
in
and
sbb
adc
add
pop
lea
fdiv
sbb
inc
in
lea
jb
in
ss
movs
call
into
jb
push
into
jb
sbb
jb
sbb
sbb
mov
xchg
pop
sti
dec
in
inc
sti
xor
pop
lea
and
jae
cmps
sbb
pop
lea
adc
sbb
jg
mov
pop
xor
movs
jb
jecxz
mov
sbb
out
out
(bad)
out
int3
loop
pop
movs
lea
out
pop
lea
push
jbe
sbb
jb
lahf
push
(bad)
dec
in
sbb
sbb
inc
in
lea
jb
in
xchg
pop
call
enter
movs
jb
sbb
mov
push
into
jbe
jbe
xor
int3
and
pop
movs
sbb
pushf
sub
ficomp
pop
inc
mov
iret
mov
push
sbb
cmp
in
mov
or
mov
outs
test
rcl
xchg
mov
movs
sub
movs
sbb
sti
push
cdq
dec
(bad)
out
repz
rcl
adc
sbb
xchg
loope
mov
movs
jb
adc
movs
icebp
leave
or
jb
and
pop
mov
pop
movs
call
push
xchg
cmp
and
pop
mov
pop
movs
call
and
neg
sar
das
mov
cmc
sbb
sbb
mov
scas
lea
repnz
jbe
sbb
aaa
inc
xchg
arpl
push
xor
mov
scas
lea
repnz
mov
lahf
inc
pushf
test
jb
adc
xchg
test
jb
aaa
mov
push
sub
pop
mov
pop
movs
jb
adc
pop
xchg
jb
or
push
sub
pop
stos
call
ror
xor
cmps
jb
icebp
lods
sti
dec
in
inc
sti
icebp
jmp
pop
xchg
jb
sbb
outs
xchg
(bad)
in
(bad)
das
and
neg
shl
cwde
in
cmc
sbb
jb
sbb
outs
nop
test
jb
cmc
imul
(bad)
in
rcr
mov
in
(bad)
das
mov
cmc
sbb
je
pop
(bad)
neg
lahf
inc
xchg
test
jb
sbb
outs
cwde
and
(bad)
das
and
neg
shl
mov
test
mov
outs
test
out
shl
sbb
xor
sbb
sub
shl
mov
pop
push
mov
mov
mov
mov
movs
jmp
movs
jb
sbb
mov
mov
xchg
jmp
movs
jb
sbb
cwde
jmp
movs
jb
sbb
test
out
and
movs
jb
sbb
sub
jb
mov
push
dec
repz
and
xchg
outs
xchg
xchg
xchg
pop
xor
repnz
ja
sbb
mov
xchg
loope
mov
fucom
cdq
mov
and
xchg
outs
pop
cdq
test
stos
int3
mov
fs
mov
pop
push
shr
jae
adc
shl
loop
push
inc
jo
call
repz
pop
sub
pop
sbb
mov
and
daa
movs
bound
and
in
jb
sbb
es
adc
lea
pop
sbb
jge
std
in
ss
adc
stc
enter
adc
jbe
adc
hlt
jmp
movs
jb
sbb
lock
movs
jb
sbb
cld
jmp
movs
jb
sbb
clc
jmp
movs
jb
sbb
in
out
and
movs
jb
sbb
loopne
out
and
movs
jb
sbb
in
jmp
movs
jb
sbb
call
mov
aam
out
and
movs
jb
sbb
shr
out
and
movs
jb
sbb
fsubr
out
and
movs
jb
sbb
fsubr
out
and
movs
jb
sbb
(bad)
jmp
movs
jb
sbb
shr
jb
mov
int3
jmp
movs
jb
sbb
enter
and
movs
jb
sbb
xor
out
and
movs
jb
sbb
xor
out
and
movs
jb
sbb
cmp
out
and
movs
jb
sbb
cmp
out
and
movs
jb
sbb
and
out
and
movs
jb
sbb
and
out
and
movs
jb
sbb
sub
out
and
movs
jb
sbb
sub
out
and
movs
jb
sbb
adc
out
and
movs
jb
sbb
adc
out
and
movs
jb
sbb
sbb
out
and
movs
jb
sbb
sbb
out
and
movs
jb
sbb
add
out
and
movs
jb
sbb
add
out
and
movs
jb
sbb
or
out
and
movs
jb
sbb
or
out
and
movs
jb
sbb
je
out
and
movs
jb
sbb
jo
out
and
movs
jb
sbb
jl
out
and
movs
jb
sbb
js
out
and
movs
jb
sbb
fs
movs
jb
sbb
pusha
jmp
movs
jb
sbb
ins
jmp
movs
jb
sbb
push
mov
push
jmp
movs
jb
sbb
push
jmp
movs
jb
sbb
pop
jmp
movs
jb
sbb
pop
jmp
movs
jb
sbb
dec
jmp
movs
jb
sbb
dec
jmp
movs
jb
sbb
mov
out
and
movs
jb
sbb
mov
out
and
movs
jb
sbb
mov
mov
mov
mov
movs
out
out
and
movs
jb
sbb
mov
mov
lods
out
out
and
movs
jb
sbb
test
out
and
movs
jb
sbb
xchg
out
out
and
movs
jb
sbb
nop
out
out
and
movs
jb
sbb
pushf
out
out
and
movs
jb
sbb
cwde
out
out
and
movs
jb
sbb
test
out
and
movs
jb
sbb
sub
jb
mov
mov
out
and
movs
jb
sbb
mov
out
and
movs
jb
sbb
hlt
out
out
and
movs
jb
sbb
lock
out
and
movs
jb
sbb
cld
out
out
and
movs
jb
sbb
clc
out
out
and
movs
jb
sbb
in
out
and
movs
jb
sbb
loopne
out
and
movs
jb
sbb
in
out
out
and
movs
jb
sbb
call
mov
aam
out
and
movs
jb
sbb
shr
out
and
movs
jb
sbb
(bad)
out
out
and
movs
jb
sbb
shr
jb
mov
int3
out
out
and
movs
jb
sbb
enter
and
movs
jb
sbb
xor
out
and
movs
jb
sbb
cmp
out
and
movs
jb
sbb
and
out
and
movs
jb
sbb
and
out
and
movs
jb
sbb
sub
out
and
movs
jb
sbb
sub
out
and
movs
jb
sbb
adc
out
and
movs
jb
sbb
adc
out
and
movs
jb
sbb
sbb
out
and
movs
jb
sbb
sbb
out
and
movs
jb
sbb
or
out
and
movs
jb
sbb
or
out
and
movs
jb
sbb
je
out
and
movs
jb
sbb
jo
out
and
movs
jb
sbb
jl
out
and
movs
jb
sbb
js
out
and
movs
jb
sbb
fs
out
and
movs
jb
sbb
pusha
out
out
and
movs
jb
sbb
ins
out
out
and
movs
jb
sbb
push
mov
push
out
out
and
movs
jb
sbb
push
out
out
and
movs
jb
sbb
pop
out
out
and
movs
jb
sbb
pop
out
out
and
movs
jb
sbb
inc
out
out
and
movs
jb
sbb
inc
out
out
and
movs
jb
sbb
dec
out
out
and
movs
jb
sbb
dec
out
out
and
movs
jb
.byte
