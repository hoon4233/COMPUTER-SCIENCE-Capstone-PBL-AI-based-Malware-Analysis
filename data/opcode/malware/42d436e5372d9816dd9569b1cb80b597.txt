jle
out
add
int3
push
pusha
mov
xor
and
sub
pushw
cmp
cmps
clc
sbb
icebp
mov
inc
mov
and
and
pop
mov
cmps
cmp
ret
cmps
cmp
loop
outs
out
(bad)
xor
adc
mov
je
sbb
jle
(bad)
out
stos
mov
sub
mov
cmp
dec
jmp
cmps
mov
adc
repz
aaa
lock
sbb
cmps
push
dec
or
sub
fs
dec
inc
mov
inc
dec
fs
adc
das
xlat
adc
and
ins
sbb
sti
aaa
les
scas
cwde
ret
aam
cmp
jns
mov
bound
xchg
cmps
mov
pushf
sub
(bad)
in
hlt
push
jns
jmp
pop
mov
push
pop
les
push
cmp
sub
cmp
fidiv
xor
push
pop
out
jecxz
les
in
push
push
jns
out
repz
les
ud0
cmps
mov
pusha
add
ins
sbb
cmps
mov
pop
push
jns
out
xchg
ud0
cmps
enter
pop
jmp
cmps
mov
push
push
jns
cmp
sub
adc
sub
dec
addr16
mov
ins
cmc
shl
pop
(bad)
int3
mov
lock
mov
bound
ret
mov
jmp
js
fwait
repnz
out
fnsave
ret
mov
jmp
pop
mov
pop
or
movzx
aaa
dec
scas
mov
pop
mov
mov
mov
fs
xor
out
xor
rcr
and
aam
cmp
cmps
cmp
cmps
mov
cmp
cmp
cmps
shr
pop
les
dec
test
je
jns
mov
inc
dec
fs
sub
cmps
shr
cmps
cmp
mov
cmps
cmp
cmp
pusha
(bad)
mov
clc
int3
pop
mov
dec
fsub
shr
dec
push
jns
push
lods
les
cmps
rcr
cmps
outs
mov
jns
or
sub
neg
inc
cmps
cmp
and
ins
mov
imul
cmp
mov
mov
push
addr16
cmp
inc
push
jns
or
mov
cmps
les
push
jns
fwait
xchg
pop
jmp
cmps
les
push
jns
in
sub
cmps
sar
adc
or
mov
inc
dec
outs
clc
sub
cmps
cmp
cmp
in
inc
adc
cmp
aaa
lock
lock
push
test
and
cld
call
dec
push
movs
push
dec
push
cmps
push
dec
cmps
mov
dec
mov
neg
cmp
inc
mov
mov
mov
jle
dec
push
and
xlat
pop
les
or
ja
sub
pop
aaa
dec
sar
cmps
mov
dec
aaa
dec
cmp
mov
(bad)
in
ret
ret
cld
call
dec
out
aaa
jb
pop
cmp
mov
daa
int3
mov
cmps
cmp
xlat
pop
(bad)
(bad)
mov
pop
les
cmp
repnz
das
ficomp
xor
ins
lock
nop
xor
dec
pop
sub
or
push
dec
or
cmp
int3
cmp
adc
xchg
cmps
mov
in
jae
cmps
xor
(bad)
cwde
les
jl
dec
pop
fwait
shl
and
fwait
rol
cmps
mov
pusha
les
cwde
dec
mov
mov
(bad)
mov
xor
cmp
dec
xor
mov
xchg
sti
(bad)
clc
repnz
das
fmulp
mov
sbb
sbb
cvttps2pi
test
jecxz
(bad)
mov
into
and
cmps
push
dec
fwait
shl
mov
scas
rcr
sbb
scas
int
pusha
xchg
sti
movs
push
pop
dec
push
fwait
shr
mov
mov
sub
sbb
pop
dec
mov
mov
int
pusha
xchg
sti
movs
push
sti
jg
inc
mov
nop
das
cld
adc
outs
clc
sbb
inc
mov
sbb
shl
mov
pop
int
cli
mov
or
outs
mov
mov
mov
sub
jge
or
outs
mov
mov
or
cwde
cmps
ret
les
scas
xor
pusha
movs
xor
jo
add
xchg
and
pop
dec
fs
jbe
shr
mov
push
mov
je
jle
adc
add
pop
cli
cmp
ret
ret
(bad)
and
or
les
in
cmp
pop
add
cwde
sub
mov
jae
cmps
dec
mov
jecxz
inc
out
les
cmps
adc
outs
clc
sbb
inc
sbb
cmp
aaa
lock
les
stos
mov
je
mov
jp
test
pop
les
cmps
das
scas
mov
pop
les
fs
mov
jae
cmps
dec
mov
pusha
dec
inc
mov
pop
cmp
das
ret
xchg
sub
add
lock
jl
mov
pop
les
fwait
pop
(bad)
(bad)
loope
les
fwait
pop
(bad)
(bad)
loope
les
fwait
pop
(bad)
(bad)
mov
mov
cmp
loope
cmp
lods
outs
mov
ins
les
stos
cld
or
push
jmp
cmps
int3
sub
jecxz
jle
dec
sbb
dec
out
(bad)
cmc
mov
pop
pop
xor
ror
and
scas
das
jmp
in
fs
js
lahf
in
mov
jle
mov
jecxz
(bad)
and
or
xlat
(bad)
and
adc
outs
clc
sbb
inc
push
aaa
lock
les
stos
cld
or
sub
or
xchg
dec
sbb
dec
out
(bad)
cmc
mov
pop
pop
xor
ror
and
scas
das
jmp
in
fs
js
lahf
in
mov
loop
cmps
int3
sub
jecxz
mov
ror
inc
mov
clc
pusha
xchg
cmc
ins
sbb
shr
les
mov
or
sub
or
popa
ror
movs
js
jle
imul
ja
pop
adc
fidiv
ds
out
inc
and
push
mov
loope
dec
push
adc
outs
clc
sbb
inc
push
aaa
lock
les
scas
test
pushf
xchg
ret
(bad)
mov
in
mov
stos
push
adc
loopne
mov
das
jle
out
sti
aaa
or
into
gs
cmps
ins
cmps
push
pop
les
daa
cmc
ins
cmps
xchg
mov
bound
movs
ins
das
ret
mov
in
popa
adc
outs
clc
sbb
inc
push
aaa
lock
les
stos
test
jp
jnp
out
int3
cmp
inc
mov
cwde
das
cld
mov
scas
shl
cmps
cmp
mov
into
les
cmps
push
and
xchg
cmp
jecxz
dec
fs
fadd
and
mov
push
adc
outs
clc
sbb
inc
push
xor
mov
ins
sbb
into
(bad)
mov
dec
out
cmps
in
cmps
cmp
outs
pop
cmps
in
cmps
imul
pop
push
mov
mov
xor
bound
les
inc
in
pop
int3
test
jecxz
(bad)
mov
cmps
adc
outs
clc
sbb
inc
mov
sbb
shl
lock
adc
fs
cmp
jmp
mov
or
cmps
mov
in
pop
cmp
ins
jge
shl
dec
sbb
into
mov
push
cmps
mov
xchg
not
sbb
cmp
cmps
xchg
sti
inc
mov
jecxz
inc
movs
ror
(bad)
xchg
and
fwait
scas
cmps
mov
fwait
nop
mov
fwait
mov
dec
cmps
cmp
cmps
daa
aam
das
cmps
cmp
scas
loopne
clc
data16
sub
jg
pop
mov
xor
mov
pop
bound
stc
gs
outs
mov
sar
adc
cmp
icebp
add
add
jecxz
cmps
daa
push
xor
in
mov
cmps
cmp
arpl
cmp
fimul
inc
imul
dec
cmps
mov
push
cmps
mov
dec
out
cmps
in
cmps
cmp
jl
cmps
in
cmps
imul
pop
ins
inc
in
mov
cmps
mov
dec
fs
les
test
mov
pop
dec
inc
mov
dec
dec
fs
cmp
xchg
inc
jns
jmp
pop
imul
bound
jb
pop
cmp
stos
mov
dec
fs
addr16
cmps
mov
dec
in
das
sbb
cmps
mov
nop
div
dec
xor
add
cwde
and
mov
int3
sbb
inc
loope
cmp
and
push
xor
in
mov
cmps
cmp
dec
das
jecxz
xchg
mov
(bad)
cmps
pop
ds
in
les
push
add
adc
adc
jns
fs
inc
sti
cmps
mov
pushf
daa
clc
dec
or
(bad)
cmp
cmps
(bad)
(bad)
mov
sar
test
or
mov
xchg
div
pop
in
inc
or
cmp
fnstcw
sbb
cdq
les
inc
das
jle
in
jle
lods
in
and
mov
pop
mov
out
(bad)
dec
adc
push
rol
in
daa
movs
inc
jns
out
jecxz
pop
out
sahf
les
cmps
cmp
das
jle
ins
dec
js
jle
xchg
in
gs
mov
pop
cmps
in
cmps
imul
pop
lods
(bad)
(bad)
and
(bad)
adc
jns
fwait
pop
cmp
jecxz
jbe
jp
mov
rol
xchg
daa
adc
fs
cmp
lods
call
xchg
les
ins
pop
jle
out
jecxz
jbe
pop
xor
dec
pop
les
cmps
cmp
and
cmp
inc
mov
mov
lds
aas
outs
clc
sbb
inc
mov
sbb
imul
daa
aam
sbb
enter
dec
fs
jle
in
or
and
xchg
adc
cmp
das
enter
fadd
and
mov
jle
int3
pushf
mov
adc
jecxz
lds
movs
cmp
shl
jae
sar
int3
add
les
scas
mov
cmps
imul
add
dec
mov
inc
in
pop
int3
test
jecxz
(bad)
mov
in
dec
mov
int3
mov
scas
sti
cmp
pop
mov
and
ins
out
xor
jns
mov
jo
pushf
cmps
ret
(bad)
mov
xchg
loopne
pushf
push
fadd
and
mov
mov
rcr
jecxz
lds
pop
jbe
mov
mov
mov
pop
mov
and
or
and
mov
pop
mov
xor
shl
daa
push
aas
jnp
mov
fs
inc
into
mov
int3
cmp
fs
cmp
cmps
cmp
or
movs
push
fs
sbb
cmps
mov
pushf
int3
cmp
mov
jle
in
addr16
jae
cmps
dec
mov
fs
dec
jmp
pop
dec
inc
fwait
rol
cmps
sbb
cmp
cmps
mov
nop
not
or
fisttp
mov
push
dec
fs
ret
mov
out
jecxz
(bad)
mov
pop
push
dec
fs
gs
outs
mov
shr
cmps
cmp
icebp
sub
mov
cmp
inc
mov
rcr
mov
gs
dec
mov
pop
cmp
add
mov
push
dec
fs
mov
ret
les
lahf
pop
les
ins
data16
mov
jle
xchg
in
gs
dec
mov
push
and
retf
lds
in
gs
cli
test
lds
call
mov
bound
int3
pop
cmp
test
cli
aas
dec
fs
fadd
loope
les
loope
les
(bad)
in
pop
out
sahf
les
sub
jle
ins
dec
in
in
jle
lods
in
and
mov
and
mov
pop
imul
inc
jns
out
and
mov
pop
imul
pop
das
jb
cmps
cmp
jecxz
inc
movs
test
cmp
cmps
push
ins
dec
sub
pop
lds
cwde
or
fwait
icebp
inc
(bad)
and
(bad)
imul
inc
cmps
push
pop
(bad)
out
mov
les
fwait
pop
mov
or
sbb
mov
pop
mov
test
lds
fs
jecxz
mov
sbb
mov
neg
pop
out
sahf
les
sbb
jle
ins
data16
fsub
xchg
fwait
pop
les
and
cdq
pop
lds
arpl
gs
cmps
mov
cdq
pop
lds
fwait
pop
mov
sub
sbb
mov
pushf
cmp
adc
jb
pop
cmp
and
dec
cmps
xor
loope
les
loope
les
(bad)
out
cmps
lahf
leave
cmp
bound
inc
shl
popf
mov
pop
std
dec
popa
neg
jmp
push
and
in
dec
imul
dec
cmps
mov
dec
push
cmps
push
call
jp
mov
inc
pop
pop
les
rcr
cmps
mov
cdq
pop
lds
fwait
pop
mov
mov
cmps
dec
inc
mov
pop
cmp
cmps
push
dec
or
fisttp
and
pop
(bad)
int3
mov
cmps
cmp
inc
int3
cmp
fld
dec
jmp
pop
ins
cmps
scas
push
les
fwait
pop
cmp
lods
cld
retf
lds
push
cmps
push
loop
in
daa
xor
jp
mov
into
mov
and
les
rcr
cmps
mov
cdq
pop
lds
fwait
pop
mov
mov
cmps
dec
inc
mov
pop
cmp
cmps
push
dec
or
fisttp
and
pop
(bad)
int3
mov
cmps
cmp
inc
int3
cmp
fld
dec
jmp
pop
ins
cmps
and
mov
bound
jb
pop
cmp
lods
cld
retf
lds
in
jle
lods
in
and
mov
cmps
push
fild
jp
mov
inc
pop
les
shl
mov
push
les
fs
cmp
out
jns
or
fwait
push
fs
retf
pop
mov
mov
cmps
dec
inc
mov
pop
cmp
cmps
push
dec
or
fisttp
and
pop
(bad)
int3
mov
cmps
cmp
and
cmp
fld
dec
jmp
pop
ins
cmps
retf
push
les
fwait
pop
cmp
mov
fisttp
fwait
pop
les
mov
mov
and
les
shl
mov
push
les
fs
enter
cmp
(bad)
les
mov
cmps
cmp
loope
les
sahf
pop
les
(bad)
mov
dec
adc
jns
gs
outs
out
cmps
cwde
sub
in
(bad)
mov
pusha
mov
dec
lea
enter
cmp
loope
les
mov
sub
mov
cwde
scas
sti
inc
loope
aas
dec
sub
pop
out
and
mov
pop
imul
pop
ins
outs
in
jecxz
(bad)
mov
and
mov
int3
shl
fwait
cmps
mov
dec
out
jmp
call
mov
cmps
xor
shl
adc
cmps
pop
mov
les
loope
les
sub
pop
jmp
pop
imul
jle
mov
div
(bad)
mov
and
mov
das
clc
ret
les
test
cmp
loope
les
fwait
mov
dec
cmps
cmp
and
(bad)
imul
dec
cmps
mov
mov
lds
fwait
pop
les
out
sahf
(bad)
fdiv
mov
cmps
and
mov
ret
les
mov
lds
xor
sti
inc
loope
cmp
daa
enter
cmp
pop
les
out
and
mov
pop
imul
pop
ins
ja
jecxz
test
retf
lds
cwde
cmps
xor
movs
movs
cmp
and
mov
pop
imul
dec
les
fwait
icebp
pop
(bad)
and
xchg
push
jle
mov
fcmovnb
dec
imul
dec
cmps
mov
dec
out
retf
mov
pop
cmp
fwait
into
imul
cmps
mov
cdq
pop
lds
cmps
mov
mov
lea
cmp
in
repz
cli
mov
mov
and
mov
pop
imul
inc
jns
jmp
pop
imul
bound
(bad)
mov
sar
in
pop
lds
mov
mov
and
retf
lds
fwait
pop
(bad)
int3
mov
cmp
push
sahf
ret
les
in
inc
or
cmp
pop
les
out
cdq
les
dec
das
jle
ins
data16
or
mov
pop
cmp
cmps
pop
je
sub
pop
or
fimul
fwait
pop
les
out
sahf
les
cmps
cmp
das
jle
ins
data16
dec
movs
cmp
push
jne
cmps
mov
les
mov
sub
les
out
sahf
les
or
jle
ins
data16
fwait
cmps
cmp
add
cmps
test
shl
in
jle
xchg
in
gs
mov
(bad)
les
loope
les
fwait
pop
(bad)
les
adc
lds
sbb
dec
cmps
enter
dec
mov
pop
mov
mul
cmp
add
mov
sub
mov
cwde
push
dec
sbb
lods
in
and
call
dec
imul
dec
cmps
mov
mov
sub
pop
or
fimul
fwait
pop
les
out
sahf
les
cmps
cmp
das
jle
ins
data16
jb
cmp
sbb
inc
loopne
cmp
sub
pop
push
cmps
(bad)
cli
nop
pop
lds
call
outs
in
jecxz
(bad)
mov
and
mov
sub
sbb
call
dec
fs
les
and
dec
cmps
mov
cmp
mov
pop
mov
fwait
pop
les
out
xor
mov
pop
(bad)
mov
gs
inc
cmps
mov
mov
test
cmp
fwait
cmps
cmp
int3
aas
mov
push
les
fwait
pop
les
or
fisttp
fwait
pop
les
mov
call
sub
mov
pop
mov
jae
cmps
dec
mov
and
mov
pop
mov
dec
fwait
adc
cdq
pop
mov
cmp
mov
sub
(bad)
(bad)
mov
pop
imul
bound
and
fwait
pop
les
or
fisttp
fwait
pop
les
mov
fs
inc
or
repnz
lds
loope
les
fwait
lock
mov
inc
mov
das
clc
mov
push
les
fwait
pop
les
push
les
call
mov
div
(bad)
mov
div
mov
dec
les
fwait
pop
les
dec
les
cwde
pop
(bad)
int3
fst
mov
cmps
dec
dec
mov
pop
cmp
inc
cmps
cmp
inc
mov
int3
pop
lds
mov
mov
sub
mov
mov
shl
(bad)
mov
div
int3
fnstenv
mov
cmps
dec
inc
out
and
mov
pop
imul
pop
ins
inc
out
and
mov
pop
imul
pop
ins
inc
out
and
mov
pop
imul
pop
ins
inc
in
jle
xchg
in
gs
test
mov
sub
shr
pop
les
cmp
repnz
das
fisub
cmps
push
aad
out
sub
cmps
cmp
neg
inc
cmps
cmp
and
ins
mov
cld
or
daa
push
stos
retf
jmp
cmps
cmp
and
push
cmps
push
pop
data16
cmp
out
aas
cmps
push
push
les
cmps
cmp
mov
pop
les
mov
cmps
cmp
and
les
dec
cld
or
sub
or
(bad)
popa
jle
fwait
pop
les
out
jecxz
sub
cmps
cmp
aaa
repnz
outs
mov
sbb
in
pop
int3
test
jecxz
(bad)
mov
cmps
push
dec
push
cmps
push
cs
out
and
or
cmp
popa
ins
cmps
add
dec
cmp
sbb
inc
mov
les
scas
test
pop
sbb
xchg
cmps
retf
(bad)
mov
in
(bad)
mov
out
dec
in
push
cmp
jl
jp
fs
cmp
xor
and
cmp
mov
ds
out
dec
cmps
cmp
lods
out
dec
(bad)
out
push
fs
jp
ins
data16
sbb
dec
fs
cmp
cmps
mov
dec
and
pop
dec
cmps
les
adc
push
mov
test
fisttp
das
jle
mov
shl
cmps
cmp
imul
mov
mov
cmps
dec
inc
lds
push
cmps
ds
out
movs
bound
ja
out
(bad)
xchg
push
ffree
and
mov
pop
ds
out
cmps
sahf
cmps
cmp
mov
int
jl
jp
je
cmp
movs
dec
adc
cmps
mov
dec
in
and
and
aas
jp
(bad)
mov
pcmpgtb
mov
pop
int
jl
jp
pusha
sar
movs
dec
cmp
mov
dec
in
and
and
pop
les
and
xchg
sti
cmps
test
sub
cmps
mov
dec
ins
push
jnp
and
out
cmps
xchg
mov
mov
cmp
arpl
cmp
push
adc
jl
jp
gs
mov
cmps
cmp
xchg
mov
cmp
arpl
cmp
dec
xor
cmps
mov
dec
popaw
ds
out
dec
cmps
cmp
fwait
mov
les
cmp
in
push
cmp
jl
jp
and
aas
dec
cmps
call
sahf
movs
push
fs
and
test
mov
out
jge
pop
xlat
shl
cmps
ds
out
cmps
stos
cmps
cmp
loop
push
cmps
ds
hlt
out
cmps
fisub
cmps
push
cmps
ds
out
cmps
retf
dec
fwait
mov
mov
dec
dec
cmps
dec
cmps
mov
dec
push
mov
out
add
and
cmps
cmp
data16
imul
cmp
outs
jp
fs
out
cmps
xor
popa
neg
xor
and
les
or
cmps
inc
push
pop
imul
mov
and
stc
cmps
mov
dec
and
or
popa
ror
out
mov
jp
mov
shr
mov
mov
push
push
mov
in
and
and
xchg
sti
cmps
xor
push
xchg
pop
cmps
les
adc
xchg
mov
jnp
loopne
cmp
das
repz
out
cmps
cdq
aas
(bad)
(bad)
xchg
(bad)
retf
(bad)
mov
pop
jns
inc
cmp
cs
imul
aas
(bad)
int3
test
lea
lahf
fwait
sti
dec
cmps
xor
in
cmps
cmp
fcmovnb
movups
jnp
in
and
cmps
xor
and
iret
cmps
cmp
outs
pop
jg
and
ss
out
jg
and
es
mov
shr
sbb
sub
cmp
in
xor
stos
and
and
cmps
retf
(bad)
mov
cmps
cdq
stos
stc
out
inc
shl
mov
mov
fcmovnb
dec
adc
dec
dec
out
xor
and
aas
(bad)
xchg
(bad)
retf
(bad)
mov
out
dec
(bad)
mov
cs
hlt
out
lds
pop
pop
aas
jp
fwait
mov
call
stos
stos
pcmpgtb
loopne
mov
sbb
inc
hlt
out
dec
(bad)
mov
cs
hlt
out
lds
pop
int3
add
aaa
fbld
call
stos
stos
pcmpgtb
loopne
popa
ror
mov
fbld
or
cmps
repz
xor
jmp
test
in
jecxz
(bad)
mov
in
daa
ins
sbb
dec
mov
fs
fs
cld
daa
ja
jns
xor
adc
adc
in
daa
dec
sbb
dec
xor
adc
pop
sti
out
mul
lods
cmp
inc
mov
pushf
das
std
daa
pop
sbb
dec
xor
adc
mov
das
sbb
dec
xor
adc
jg
out
daa
cmp
dec
xor
adc
pop
(bad)
in
adc
outs
clc
sbb
inc
mov
sbb
jg
dec
sbb
jecxz
mov
ror
cmc
cmps
mov
int3
test
cmp
jns
mov
cmps
cmp
mov
and
jle
in
jecxz
mov
push
jnp
cmps
mov
dec
out
ret
dec
out
(bad)
dec
fwait
mov
mov
xchg
push
jle
mov
ret
out
dec
mov
cmps
cmp
cmps
sub
cmps
cmp
in
gs
adc
dec
in
jecxz
mov
ror
jmp
cmp
int
dec
fs
fadd
and
mov
mov
cmps
cmp
add
cmp
sbb
mov
mov
ds
cmps
enter
rcr
or
cmp
sub
xor
cs
mov
sub
xor
cmp
and
imul
int3
cmp
rol
push
imul
not
mov
dec
fs
ds
in
and
push
cmps
push
dec
push
mov
fbld
fsubr
dec
fs
fadd
and
mov
fwait
rcr
cmps
mov
cmp
mov
mov
mov
les
aam
jle
xor
cs
and
dec
in
lahf
imul
aas
outs
clc
sbb
inc
mov
mov
mov
mov
test
stos
in
jecxz
(bad)
and
or
jle
out
jmp
(bad)
sub
sub
repz
(bad)
and
dec
push
cmps
push
dec
jmp
jecxz
pop
fwait
rol
and
xor
les
push
cmp
out
jecxz
movs
arpl
push
mov
out
dec
lods
outs
mov
and
pop
adc
adc
jns
fwait
shl
and
sti
out
test
das
cld
adc
and
ins
les
scas
mov
push
in
jle
test
les
cmps
dec
jnp
adc
gs
les
cmps
dec
imul
js
fwait
les
cmps
dec
push
imul
js
fwait
les
cmps
dec
pop
imul
js
fwait
les
cmps
xor
outs
movs
cmp
jecxz
ret
lds
mov
pop
pusha
jle
fs
lea
les
pop
pop
lahf
stc
inc
loope
cmp
das
rol
fs
in
cmps
cmp
pop
mov
pop
jb
stc
cmp
das
ror
movs
xor
jo
add
out
aas
inc
shl
cmp
clc
xor
and
(bad)
imul
dec
or
dec
bound
cmps
xor
xor
popf
jo
das
pop
mov
jns
ss
adc
cmps
cmp
and
xchg
repnz
pop
mov
dec
and
cmps
pusha
das
jle
out
jecxz
ret
ds
pushf
and
iret
(bad)
jo
cmp
cmps
shr
adc
pcmpgtd
iret
pop
mov
cmp
imul
mov
dec
or
fwait
pop
les
adc
in
add
mov
es
dec
pusha
shl
pushf
and
cmp
mov
dec
cmp
pop
mov
ret
int3
mov
pop
daa
adc
cmp
ret
int3
mov
dec
pop
in
jle
or
ja
and
cmp
pusha
mov
dec
cmps
mov
sub
pop
jae
pop
mov
ret
int3
mov
push
in
pop
mov
dec
sar
pushf
and
aas
dec
pop
dec
cmp
sar
lea
mov
pop
jmp
pop
mov
dec
mov
jecxz
les
mov
or
cmp
xor
pop
popa
cmps
cmp
es
jno
shr
pushf
out
mov
push
in
pop
mov
dec
rol
dec
in
cmp
mov
dec
aas
inc
shl
xor
dec
adc
cmp
jl
xchg
adc
je
outs
pop
popa
cmps
ror
mov
cmp
loope
mov
mov
mov
aas
outs
clc
sbb
inc
mov
sbb
cmps
mov
ins
dec
daa
jle
dec
cmp
pop
cwde
cmp
ins
loope
mov
movs
cmp
push
mov
dec
pop
mov
les
stos
push
cmps
cmps
cmp
shl
cmps
lea
xor
fs
(bad)
call
mov
not
retf
xchg
pop
les
fwait
mov
xor
pusha
mov
cmp
inc
fwait
ror
cmps
dec
outs
out
(bad)
dec
vpmacsdql
lds
mov
bound
mov
mov
jle
push
dec
shr
mov
mov
jnp
mov
in
jecxz
(bad)
xchg
cmps
loope
mov
ror
jmp
and
or
mov
nop
das
sub
stos
pcmpgtb
mov
dec
mov
cmps
loope
mov
ror
jecxz
mov
rol
and
mov
fwait
mov
mov
ret
ds
mov
ror
jecxz
mov
mov
pop
cmps
cmp
cmc
ins
inc
shl
sub
jno
xchg
fwait
pop
mov
adc
outs
mov
rol
xor
rcl
loope
in
fwait
cmps
shl
cmp
cmps
cmp
pop
mov
les
mov
dec
out
dec
sti
cmps
cmp
fld
mov
cmps
dec
pop
imul
mov
pop
mov
cmp
jle
xchg
mov
stc
loope
aam
fwait
es
dec
add
jns
sar
movs
cmp
les
fwait
pop
push
test
aaa
inc
pop
sbb
xor
cmps
mov
int3
js
mov
mov
cmp
xor
mov
jp
aaa
inc
mov
(bad)
xor
jnp
mul
pop
cmps
mov
sar
in
mov
cmp
loope
aam
fwait
cmps
xor
loope
aam
fwait
int
push
in
ds
(bad)
cmp
and
fwait
pop
std
retf
les
xchg
dec
les
pop
mov
fisub
cmp
cmp
dec
fs
les
jo
imul
cmps
mov
mov
les
cmps
mov
mov
test
cmp
in
and
nop
fwait
pop
les
adc
out
xor
nop
fwait
pop
mov
movs
dec
sub
xchg
popa
cmps
cmp
fs
mov
jle
dec
sbb
fs
dec
aaa
dec
xchg
pop
cmps
mov
out
cmp
fstp
mov
loope
mov
dec
pop
cmp
mov
jmp
pop
imul
mov
mov
mov
dec
mov
cmps
push
mov
cmps
cmp
fwait
pop
mov
imul
bound
(bad)
and
(bad)
adc
mov
mov
sub
les
ror
inc
cmp
mov
fisub
xchg
ins
loope
mov
mov
mov
dec
push
test
sub
das
mov
movs
sub
clc
dec
je
cmp
lahf
cmps
retf
dec
ror
inc
sahf
pop
les
in
xlat
mov
cmps
mov
call
pop
les
lahf
mov
inc
loop
les
shl
cmp
fwait
dec
add
cmps
ror
cmps
cmp
xor
mov
sub
inc
aaa
jnp
in
xor
mov
nop
dec
les
mov
mov
dec
cmp
cwde
sub
cmps
mov
push
aam
(bad)
jg
cmps
data16
jmp
dec
scas
xor
and
mov
nop
dec
les
push
adc
dec
adc
jns
in
fcom
aas
into
gs
shl
xor
in
fwait
das
stc
dec
jo
pop
dec
cmps
mov
clc
js
mov
fs
dec
data16
mov
(bad)
mov
sub
(bad)
int3
cmps
mov
scas
xchg
fwait
pop
mov
les
mov
xor
dec
in
and
retf
les
fwait
pop
mov
mov
mov
les
mov
icebp
cmp
and
nop
fwait
pop
add
fdivr
mov
in
retf
les
fwait
pop
cmp
mov
sbb
nop
fwait
pop
cmp
cmps
into
cmp
xchg
out
xor
movs
push
jns
mov
dec
aaa
sbb
fs
scas
jecxz
pop
les
in
inc
shl
enter
cli
lods
sub
mov
jb
mov
das
aaa
pop
push
xor
imul
mov
xchg
pcmpgtb
scas
mov
fs
dec
ss
push
sbb
retf
les
add
cmp
(bad)
dec
imul
dec
cmps
mov
nop
dec
les
lea
mov
retf
pop
cmps
cmp
mov
mov
les
cmp
cmps
mov
dec
pusha
das
mov
mov
add
mov
mov
sub
(bad)
(bad)
xchg
out
mov
(bad)
xchg
and
cmp
jp
retf
int3
mov
das
(bad)
xchg
and
cmp
outs
das
retf
int3
mov
xor
(bad)
imul
adc
jns
imul
in
mov
movs
mov
jno
loope
fwait
es
dec
imul
jb
cmps
cmp
mov
dec
push
cmps
cmp
and
or
and
nop
fwait
pop
ror
in
push
rol
and
mov
dec
push
mov
in
mov
je
inc
in
fwait
aam
iret
leave
add
xor
icebp
add
(bad)
sbb
jmp
pop
les
pop
cmps
cmp
cmps
dec
addr16
push
dec
cmps
cmp
mov
cmp
cmps
dec
pop
in
push
dec
cmps
cmp
lods
mov
dec
cmps
dec
dec
and
inc
shl
cwde
xchg
fwait
pop
xor
ins
cmps
dec
push
imul
mov
fwait
adc
nop
fwait
pop
(bad)
cli
mov
les
fwait
and
fcom
es
les
xor
mov
data16
loop
lea
mov
and
cmps
mov
mov
retf
les
fwait
pop
cmp
cmps
dec
lahf
fwait
mov
shl
pop
(bad)
iret
loope
aam
fwait
cmps
xor
loope
aam
fwait
int
push
in
ds
(bad)
cmp
and
fwait
pop
adc
outs
clc
sbb
inc
mov
sbb
sti
xor
test
pop
dec
fs
jle
sub
jmp
cmps
sbb
cmp
jecxz
(bad)
and
sub
jecxz
ret
mov
loope
jns
(bad)
lahf
ret
mov
lock
frstor
lahf
into
or
jne
cmps
mov
or
jecxz
dec
out
jecxz
(bad)
cmps
cmps
stc
(bad)
xor
or
movs
xor
xor
or
dec
dec
in
les
lods
mov
xor
jecxz
dec
lea
cmp
sub
inc
shl
(bad)
jne
mov
inc
loope
cmp
daa
jle
loop
cmp
jecxz
dec
imul
dec
pop
cmp
fistp
shl
cmp
cmps
cmp
pop
jnp
pusha
es
gs
stc
int3
xchg
xor
sahf
mov
jnp
pusha
es
gs
js
movs
shl
int3
test
aas
iret
and
les
pop
mov
dec
fs
pushf
test
sti
dec
cmps
push
iret
cmps
cmp
pusha
es
pusha
test
cmp
shl
mov
pusha
es
pusha
es
gs
mov
test
les
jb
cmp
repz
jne
mov
cmp
jle
gs
xor
and
iret
sbb
cmp
into
jecxz
dec
imul
jb
cmps
cmp
mov
xor
and
adc
outs
clc
sbb
inc
push
inc
fist
sub
ja
cmp
fwait
cmps
cmp
int3
cmp
in
push
mov
jae
cmps
dec
mov
popa
rol
call
push
cmps
cmp
(bad)
(bad)
mov
stc
gs
outs
mov
shr
cmps
cmp
xor
and
(bad)
mov
xchg
inc
mov
cwde
jns
mov
popa
adc
push
sub
pop
mov
mov
pop
mov
call
pop
or
cmp
repnz
das
ficomp
(bad)
and
dec
daa
aam
ins
cmps
cmp
adc
push
mov
das
fmulp
mov
xchg
adc
mov
dec
push
cmps
push
iret
cmps
cmp
addr16
cmp
les
ins
dec
es
out
les
jge
inc
inc
sar
outs
fs
ret
mov
in
popa
or
xor
push
cmps
mov
out
sub
push
out
mov
pop
mov
dec
push
cmps
mov
inc
out
jecxz
(bad)
and
dec
jmp
push
les
nop
cmc
les
cwde
lock
mov
fs
mov
dec
pop
mov
cmp
pusha
xchg
cmc
ins
sbb
xchg
adc
dec
pushf
das
cld
and
cmps
push
dec
push
cmps
push
dec
or
cmp
pop
dec
inc
mov
push
fs
std
into
mov
and
or
push
cmps
push
dec
xor
push
cmps
mov
push
pop
jnp
pop
cmps
cmp
popf
das
clc
and
ss
les
push
cmps
cmp
xor
cmp
xchg
inc
jns
xor
push
cmps
mov
dec
xor
pop
cmps
or
cmp
cmp
repnz
das
fmulp
mov
ss
push
sbb
cmps
int3
test
jecxz
(bad)
mov
cmps
cmp
mov
push
dec
cmps
sti
mov
scas
shr
mov
das
jle
in
popa
mov
jle
dec
push
and
lock
sub
xor
dec
pop
fwait
shl
sbb
ret
pushfw
das
cld
sbb
sti
(bad)
clc
repnz
das
ficomp
aaa
lock
les
scas
cld
or
daa
push
mov
cmp
push
jge
nop
(bad)
mov
cmp
push
push
push
test
cmp
in
(bad)
loop
cmps
cmp
pop
inc
jns
mov
push
pop
push
jge
pop
imul
push
xor
push
scas
cmps
rcr
aaa
cmps
cmp
mov
stos
inc
cmps
push
pop
rol
add
dec
pop
mov
stos
inc
mov
cmps
shl
cmps
cmp
mov
das
stc
dec
cmps
das
outs
mov
clc
pusha
xchg
cmc
ins
sbb
sti
xor
adc
sub
sbb
jle
mov
popf
fisttp
cmps
bound
dec
sub
mov
fisttp
cmps
mov
mov
test
cmp
cmp
cmp
cmp
repnz
das
fmulp
mov
mov
xchg
gs
mov
popa
jle
cmps
mov
sub
mov
xchg
sub
aam
in
mul
cmp
add
mov
in
gs
dec
add
lods
jl
mov
ins
test
jle
(bad)
push
cmps
cmp
in
gs
and
stc
and
cmp
mov
inc
mov
sar
int3
or
into
pop
cmovg
mov
es
mov
shl
les
stos
xor
and
mov
call
dec
fs
lea
popa
push
mov
cmps
in
lds
mov
mov
xor
jle
lods
in
jecxz
(bad)
cmps
sub
cmp
xor
jmp
movs
retf
cmp
test
xchg
lea
ffreep
mov
sub
adc
mov
fcmovb
and
or
adc
out
repz
hlt
cmp
sbb
jecxz
les
stos
xor
and
mov
ins
test
jmp
and
or
cmps
jecxz
cmps
stc
gs
gs
fcomip
ss
(bad)
cmps
sub
fs
out
(bad)
fisub
cmp
mov
fist
mov
inc
hlt
ss
fbld
stos
fcomip
ss
hlt
ss
fbld
stos
fcomip
ss
hlt
ss
fistp
stos
fcomip
ss
xchg
hlt
ss
(bad)
cmps
mov
test
cmp
fucom
xor
(bad)
hlt
ss
fist
mov
or
ss
(bad)
data16
fcomip
add
adc
fcomip
ss
fcomip
ss
fild
dec
mov
cdq
pop
clc
das
hlt
ss
fcomip
rcl
cmps
cmp
hlt
ss
fcomip
mov
stos
bound
dec
hlt
sub
stos
les
stos
fcomip
sub
stos
jle
ss
fcomip
and
stos
jbe
ss
fcomip
fcmovbe
fcomip
ss
int3
movs
stos
stos
fcomip
and
stos
cmp
stos
fcomip
ss
sub
cmps
sub
and
pop
cmp
fimul
es
fcomip
ss
(bad)
cmps
sub
fs
dec
hlt
ss
fistp
ss
fcomip
ss
fist
hlt
stos
fcomip
ss
out
fucomip
jg
fcomip
adc
push
je
fcomip
ss
ss
fucomip
outs
stos
fcomip
ss
mov
cmc
ss
fcomip
ss
hlt
ss
(bad)
fisub
cmp
or
ss
fbld
stos
fcomip
fnstcw
fsub
mov
fist
hlt
stos
fcomip
sbb
jg
fcomip
adc
push
je
fcomip
ss
ss
fucomip
outs
stos
fcomip
ss
mov
cmc
ss
fcomip
ss
hlt
ss
(bad)
loope
mov
or
ss
fbld
stos
fcomip
fnstcw
add
ss
cmps
pop
mov
mov
outs
mov
ins
les
scas
mov
push
popa
jle
mov
add
(bad)
cmps
cmps
stc
(bad)
xor
mov
cmps
rcl
cmps
retf
pop
mov
int3
mov
push
iret
sbb
cmp
jle
fs
adc
in
jecxz
neg
mov
lea
lahf
das
ret
aas
int3
mov
addr16
mov
int3
mov
fs
sahf
push
loop
cmps
int3
sub
jecxz
lds
pop
aas
push
mov
xor
mov
xchg
gs
jnp
shl
adc
pusha
mov
cmp
je
jecxz
xchg
out
stc
je
lea
sahf
(bad)
icebp
(bad)
je
jle
aad
cmp
scas
push
fbld
ret
imul
adc
xor
jecxz
xchg
div
sbb
sub
dec
fs
cmp
(bad)
mov
fdiv
fs
cmp
ja
cmps
pop
mov
push
xor
and
mov
adc
std
repnz
das
fmulp
mov
cli
pop
mov
mov
dec
mov
jne
fs
dec
addr16
movs
push
ror
rol
and
scas
das
jmp
in
fs
mov
cmp
mov
cmp
sub
xor
dec
inc
mov
inc
pusha
xor
cmps
xor
sbb
test
sub
jns
dec
mov
out
in
(bad)
mov
mov
mov
xor
sbb
test
pop
(bad)
int3
sbb
in
push
cmp
sbb
xor
add
inc
push
cmps
mov
addr16
cmps
cmp
mov
shl
sub
call
pop
rcr
gs
cmp
cmps
mov
jcxz
les
xchg
and
out
lods
sbb
addr16
cmps
add
cwde
aam
out
mov
jns
in
jecxz
movs
jns
les
cmps
int3
lods
in
jecxz
(bad)
cmps
das
retf
dec
and
pop
mov
mov
or
cmp
xchg
push
jne
and
cmps
cmp
and
sub
cmps
cmp
sbb
clc
fwait
das
stc
inc
shl
je
in
(bad)
pop
jbe
or
push
cmps
cmp
in
jecxz
cmps
pop
jmp
dec
out
fninit
inc
rcr
lea
jmp
cwde
in
fwait
out
cmps
push
(bad)
push
xchg
popa
data16
sub
call
push
rcr
dec
fistp
cmps
mov
jcxz
les
xchg
and
out
lods
sbb
addr16
cmps
add
nop
aam
out
mov
jns
in
jecxz
movs
jne
retf
dec
and
pop
mov
mov
or
cmp
xchg
push
jns
mov
cmps
xor
xor
lods
out
mov
scas
ftst
cmp
imul
jne
push
cmp
sbb
imul
mov
icebp
inc
xchg
ftst
cmp
push
test
aam
adc
xor
and
(bad)
xchg
movs
ds
in
pop
mov
(bad)
mov
and
push
dec
push
movs
push
dec
push
cmps
push
dec
cmps
jnp
adc
cmp
and
mov
push
cmps
mov
mov
les
test
les
or
cmps
les
or
cmps
ins
cmps
mov
data16
push
cmps
int3
lods
in
jecxz
(bad)
cmps
stc
gs
outs
mov
cmp
icebp
test
fcmovu
cmp
inc
mov
mov
mov
pusha
mov
dec
into
cmps
cmp
mov
mov
push
push
mov
mov
jo
fs
add
mov
(bad)
movs
push
ror
jnp
icebp
(bad)
mov
mov
out
jp
sahf
cs
mov
pop
les
dec
dec
stos
add
cmps
xor
sbb
pushf
sub
sub
in
addr16
movs
movs
pop
cmp
popf
mov
(bad)
(bad)
cmps
and
push
mov
pop
(bad)
iret
and
lds
pop
pop
inc
adc
retf
les
cmps
mov
xchg
cmp
push
mov
jl
and
into
xchg
mov
mov
pop
or
call
cmps
mov
lahf
pop
les
cmps
push
dec
push
cmps
push
dec
push
cmps
push
dec
or
cmp
sub
pop
mov
fs
mov
mov
scas
add
in
pop
mov
cmp
loope
(bad)
mov
not
jl
cmp
pushf
sbb
fwait
adc
mov
pop
sar
cmps
cmp
xchg
cmps
retf
(bad)
mov
pop
les
fwait
mov
push
dec
jmp
pop
imul
and
mov
pop
imul
jns
dec
jmp
pop
imul
cmps
cmp
mov
cmp
push
mov
test
fwait
pop
mov
fwait
mov
push
mov
jns
dec
jmp
pop
imul
cmps
cmp
mov
push
and
jns
dec
or
cmp
dec
xor
mov
daa
int
sbb
repnz
das
fmulp
mov
dec
pop
fist
ret
pushfw
das
cld
mov
ror
mov
in
popa
mov
or
push
dec
or
cmp
int3
cmp
adc
sbb
cmps
mov
out
les
in
cmp
pop
mov
pushf
pop
dec
mov
int3
cmp
fwait
rol
cmps
dec
out
cmp
dec
add
cmps
les
cwde
dec
mov
cmps
adc
outs
clc
sbb
inc
ins
lock
lea
in
sub
cmps
les
jo
or
dec
xor
dec
pop
fwait
shr
mov
stos
les
ins
dec
push
dec
cmps
mov
mov
das
ficomp
xor
fdiv
mov
or
int3
aas
ret
imul
pop
dec
inc
mov
call
outs
clc
sbb
inc
push
xor
sbb
in
mov
push
pop
mov
jmp
jecxz
pop
push
cmps
push
dec
movs
cmp
fs
dec
inc
fwait
shl
cmps
aas
out
cmp
dec
dec
push
data16
shl
mov
mov
cmp
cmp
cwde
dec
push
pop
cmps
xor
cwde
dec
push
pop
cmps
or
dec
pop
mov
fwait
rol
cmps
dec
out
cmp
data16
lods
outs
mov
mov
jo
jle
add
jle
fistp
int3
adc
cmps
cmp
push
pop
mov
jmp
mov
cmp
ins
dec
into
or
(bad)
adc
mov
jl
ins
and
adc
fimul
cmps
xor
cwde
dec
cli
or
(bad)
(bad)
mov
mov
cmps
xor
and
sub
fs
fadd
and
mov
clc
repnz
das
ficomp
xor
ins
lock
push
in
jge
cmps
mov
dec
rcr
cmps
arpl
cmp
dec
call
das
ret
jle
das
cld
out
cwde
jae
dec
pop
jecxz
cmp
sti
jg
popa
cmp
int3
cmp
add
cld
jge
fs
mov
dec
ins
dec
dec
push
data16
xchg
(bad)
call
cmp
and
dec
in
fcom
cmps
adc
aas
sub
lods
(bad)
repz
movs
sub
cs
scas
clc
sbb
inc
push
xor
mov
ins
sub
(bad)
adc
push
les
pop
mov
dec
fs
cwde
das
in
push
es
jno
rcl
pop
in
push
cmp
mov
jl
fs
adc
pusha
movs
cmp
pushf
and
mov
dec
fs
jae
cmps
dec
mov
dec
outs
in
add
mov
es
dec
outs
shr
les
mov
dec
fs
jle
loope
cmp
jle
movs
push
das
retf
dec
mov
cmps
cmp
mov
sar
ins
pop
dec
push
in
push
cmp
mov
jns
fs
adc
mov
xchg
sti
adc
std
repnz
das
fmulp
mov
inc
mov
sub
pop
jl
cmps
push
dec
in
jecxz
(bad)
mov
scas
ins
and
cmps
mov
nop
xchg
int
jb
lea
and
dec
inc
imul
jl
push
dec
(bad)
pusha
xchg
jge
adc
stos
in
retf
outs
pop
cmps
cmp
mov
dec
jae
rcr
lds
call
cmps
mov
int3
mov
pop
and
cmps
add
xchg
dec
in
repz
(bad)
mov
cld
xor
popa
nop
cmps
ins
cmps
pop
loopne
dec
out
das
sub
jecxz
je
pop
dec
loopne
jecxz
adc
std
repnz
das
fdivp
sub
cmp
fdivr
fs
ins
sbb
jmp
out
iret
mov
pop
cmp
ror
fwait
cmps
mov
pushf
pop
lds
mov
inc
gs
gs
mov
ins
jge
dec
push
data16
cmps
cmp
fstp
mov
cmps
dec
inc
aaa
dec
xchg
or
lea
pop
mov
js
fs
mov
idiv
cmp
add
mov
pop
mov
mov
(bad)
mov
sbb
mov
pop
push
repnz
sub
(bad)
cmp
cmps
ins
and
cmps
mov
cwde
pop
lds
cmps
les
ins
into
aas
dec
cmps
shl
and
(bad)
retf
(bad)
mov
and
mov
pop
mov
out
les
in
cmp
pop
mov
push
scas
mov
mov
(bad)
mov
pop
imul
xor
dec
fwait
shl
cmps
jmp
cmp
bound
daa
sub
dec
fwait
adc
mov
pop
rcl
and
shl
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
fwait
pop
les
out
xor
xchg
xchg
retf
(bad)
mov
cmps
add
cmp
xchg
pop
mov
cmps
lahf
loop
dec
ffree
cmp
aas
int3
mov
sub
les
or
in
fs
shl
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
fwait
pop
les
out
xor
push
jns
dec
fwait
adc
mov
pop
shr
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
fwait
pop
les
out
xor
(bad)
mov
pop
xor
push
or
sub
cmps
cmp
xchg
pop
imul
fwait
icebp
push
jno
in
sbb
call
rcr
daa
jbe
jns
out
and
mov
pop
imul
jns
dec
xor
jb
cmps
mov
mov
loop
dec
(bad)
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
in
fs
mov
dec
loop
dec
out
xor
(bad)
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
in
fs
mov
xchg
in
dec
out
xor
(bad)
mov
pop
xor
call
cmps
cmp
xchg
pop
imul
fwait
icebp
push
jno
in
sbb
call
rcl
fs
ffree
loope
les
or
cmp
dec
cmp
aas
int3
mov
into
(bad)
xchg
cmps
mov
mov
dec
push
or
cmps
mov
mov
pop
dec
pop
out
and
mov
pop
imul
js
dec
xor
push
cmps
mov
or
cmps
add
cmp
xchg
pop
mov
cmps
jnp
cmp
lds
dec
fs
int3
mov
sub
les
or
in
fs
rcl
cmps
cmp
mov
inc
mov
lods
pop
(bad)
mov
pusha
sar
outs
cmps
cmp
push
ret
mov
fisttp
fwait
pop
les
out
xor
(bad)
mov
pop
xor
lock
cmps
(bad)
cli
cwde
pop
lds
fs
jns
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
dec
ins
das
retf
jle
das
std
daa
repz
dec
fwait
shr
(bad)
mov
not
mov
fdivr
fs
jns
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
inc
or
ins
dec
add
cmps
cmp
xchg
pop
mov
daa
xchg
inc
jns
fwait
adc
mov
pop
rcl
cmps
cmp
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
jns
fs
pop
dec
cmps
mov
repnz
pop
lds
cmps
ins
cmps
fwait
out
dec
out
sub
sbb
cmp
and
les
jmp
mov
dec
in
ins
cmp
cmps
mov
mov
dec
inc
(bad)
mov
movs
mov
je
pop
les
fldenv
mov
movs
xchg
rcr
and
cmps
mov
cs
ret
idiv
cmp
jmp
(bad)
fcomp
mov
jno
mov
cmps
les
cmps
mov
cmps
les
cmps
mov
sbb
test
cdq
pop
mov
fwait
and
mov
pop
mov
mov
cmps
cmp
and
mov
pop
(bad)
cli
nop
pop
lds
loope
cmp
cwde
pop
lds
cmps
imul
bound
cmps
fwait
out
dec
(bad)
mov
pop
xor
xchg
cmps
(bad)
cli
cwde
pop
lds
fs
jnp
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
ret
cmps
mov
jle
das
std
cmps
retf
out
dec
(bad)
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
push
cmps
(bad)
retf
lds
call
mov
and
mov
pop
mov
mov
mov
push
int3
test
cdq
pop
mov
(bad)
fnstsw
dec
fs
ret
mov
pop
rol
cmps
cmp
fldenv
xor
pop
cmps
cmp
push
or
js
cmp
pushf
pop
lds
cmps
mov
pushf
pop
lds
cdq
pop
les
jo
bound
nop
pop
(bad)
mov
dec
and
cmps
mov
mov
lods
pop
jnp
pop
cmps
cmp
popf
das
cld
sub
sbb
mov
pop
mov
push
push
mov
jmp
pop
imul
std
mov
pop
mov
popa
push
les
pop
cmps
cmp
loope
les
pushf
pop
(bad)
int3
mov
pop
(bad)
mov
adc
mov
pop
les
jl
mov
loope
les
mov
add
fs
add
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
sahf
jo
cmps
mov
dec
xchg
das
std
cmps
aas
cdq
cmp
lods
cmp
aas
int3
mov
pop
xor
lock
cmps
(bad)
cli
cwde
pop
lds
fs
add
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
outs
jo
cmps
mov
mov
cmps
popf
cmp
pusha
jp
cmps
(bad)
retf
lds
fwait
pop
imul
cmc
shl
pop
(bad)
int3
mov
pop
lds
neg
mov
pushf
in
fs
mov
arpl
xor
(bad)
mov
pop
xor
xchg
cmps
(bad)
cli
cwde
pop
lds
fs
add
dec
cmps
mov
dec
sbb
cmp
fwait
dec
xchg
cmps
mov
mov
fwait
pop
(bad)
(bad)
mov
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
fwait
adc
mov
pop
rol
pop
cmps
cmp
mov
in
mov
pop
les
cmps
mov
jno
cmps
add
cmp
xchg
pop
mov
cmps
inc
cwde
cmp
lds
dec
fs
int3
mov
sub
les
or
in
fs
shr
cmps
cmp
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
in
fs
mov
jnp
cmp
bound
into
xchg
mov
out
jb
cmps
add
cmp
xchg
pop
mov
daa
scas
js
dec
fwait
adc
mov
pop
sar
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
fwait
pop
les
out
xor
(bad)
mov
pop
xor
inc
jb
cmps
sub
cmp
xchg
pop
imul
fwait
icebp
push
jno
in
sbb
call
(bad)
in
fs
mov
jecxz
cmp
bound
(bad)
xchg
(bad)
retf
(bad)
mov
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
fwait
adc
mov
pop
rcl
pop
cmps
cmp
mov
in
mov
pop
les
cmps
mov
jb
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
fwait
adc
mov
pop
shr
cmps
cmp
mov
in
mov
pop
les
cmps
mov
dec
jb
cmp
(bad)
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
in
cdq
pop
imul
pop
les
mov
add
dec
fs
pop
dec
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
sahf
jae
cmps
mov
xchg
cmps
(bad)
cli
cwde
pop
lds
fs
pop
dec
fs
xor
cmps
mov
dec
sbb
cmp
fwait
dec
push
jae
cmps
mov
xor
cmps
int3
test
cdq
pop
mov
mov
dec
cmps
mov
into
mov
icebp
mov
cwde
pop
lds
cmps
ins
cmps
imul
cmps
mov
cmp
aas
int3
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
out
fs
mov
lahf
popf
cmp
bound
cmps
rcr
cmp
aas
int3
mov
pop
xor
retf
scas
cmps
(bad)
cli
cwde
pop
lds
fs
dec
or
ret
pop
cmps
cmp
outs
cmps
cmp
push
ret
mov
add
pop
pop
dec
cmps
mov
repnz
pop
lds
cmps
ins
cmps
adc
sub
mov
jns
fwait
adc
mov
pop
rol
pop
cmps
cmp
mov
cmps
push
dec
push
cmps
push
dec
or
cmp
pop
dec
inc
mov
cmps
fwait
pop
(bad)
into
mov
pop
mov
jecxz
cmp
cmps
mov
nop
pop
lds
cwde
pop
lds
cdq
pop
shr
pop
cmps
cmp
fwait
dec
ret
cmps
(bad)
cli
cwde
pop
lds
fs
retf
dec
xchg
das
std
sbb
xor
fs
les
cmp
repnz
das
fmulp
mov
test
stos
xor
pushf
push
fadd
loope
lds
and
movs
pop
test
push
les
pop
lds
pop
cmps
cmp
pushf
xchg
ret
(bad)
mov
jnp
dec
jmp
pop
imul
cmps
cmp
mov
mov
and
les
jecxz
jae
aam
and
cmps
push
add
cmps
cmp
mov
mov
into
in
xchg
cmps
push
xchg
mov
jp
dec
or
cmp
dec
mov
fwait
pop
mov
adc
cmp
lods
outs
mov
cmp
icebp
test
push
xchg
ret
(bad)
mov
pop
les
jecxz
iret
pop
cmps
xor
movs
and
stos
mov
pop
mov
ins
sub
cmp
and
mov
pop
mov
push
jge
or
int3
mov
xchg
cmp
repz
xor
mov
pop
ins
cmps
push
xchg
cmp
and
fwait
pop
(bad)
cli
les
mov
or
sub
inc
mov
pop
mov
outs
mov
jns
icebp
ds
mov
das
ret
dec
pushf
das
cld
sbb
mov
mov
push
(bad)
mov
dec
retf
cmps
mov
adc
mov
adc
scas
push
cmps
cmp
xor
les
out
sub
fwait
pop
mov
outs
cmps
mov
cmps
jns
icebp
cs
mov
daa
int3
sub
cmp
fs
dec
mov
push
dec
fs
mov
into
xchg
dec
ss
fs
sub
cdq
pop
les
mov
jp
cmps
imul
mov
mov
pop
or
out
fs
(bad)
xchg
cmps
push
dec
cmps
mov
mov
bound
inc
movs
shl
sbb
sti
cmps
cmp
mov
into
aas
dec
cmps
mov
cwde
pop
les
cdq
pop
les
mov
cmovg
fistp
ss
mov
pop
mov
cdq
pop
les
fwait
pop
mov
cdq
pop
les
fwait
lock
rcr
mov
dec
jne
fwait
pop
mov
rcr
shl
sbb
sti
cmps
xchg
cmps
cmp
push
out
sub
pop
mov
dec
fs
ret
pushfw
das
cld
ret
(bad)
mov
div
mov
dec
stos
ja
cmps
sar
loope
(bad)
mov
int3
jg
sub
pop
mov
call
pop
adc
fcomp
mov
cmps
cmp
and
mov
pop
cmp
cmps
pop
mov
dec
lds
fldenv
(bad)
mov
cmps
dec
push
add
cmps
call
push
and
push
lds
xchg
pop
les
jmp
pop
imul
push
lds
push
cmps
push
outs
push
cmps
push
dec
push
cmps
mov
cwde
pop
les
xchg
xchg
cmp
data16
mov
adc
not
cmp
pushf
pop
(bad)
mov
pop
les
jbe
jns
or
out
sub
pop
mov
dec
fs
dec
mov
pop
cmp
cmps
cmp
loope
lds
mov
xchg
cmp
xor
cmps
cmp
in
dec
mov
pop
cmp
loope
(bad)
mov
call
xor
cmp
cmps
rol
push
cmps
cmp
fnstenv
(bad)
mov
cmps
dec
inc
or
retf
dec
fs
add
cmps
push
dec
cmps
cmp
loope
lds
rcl
push
and
loope
lds
fstp
int3
mov
cmps
cmp
inc
and
les
mov
les
add
sahf
rcr
popa
mov
retf
les
cmps
sbb
cmps
cmp
cdq
pop
(bad)
(bad)
mov
cmps
cmp
cdq
pop
les
fwait
adc
jmp
cmps
cmp
loope
(bad)
mov
dec
xor
cmp
cmp
inc
mov
or
mov
popa
adc
outs
stc
dec
fs
out
sub
icebp
mov
jo
mov
mov
pop
mov
fwait
shl
cmps
stos
xchg
cmp
fs
(bad)
xor
mov
pop
mov
fwait
shl
cmps
fist
pop
(bad)
xor
cmp
jl
cmps
mov
add
outs
mov
cmps
mov
add
outs
mov
imul
mov
jbe
clc
xor
lahf
imul
mov
xor
cmp
in
pusha
mov
dec
push
mov
cmps
xor
movs
das
jle
in
mov
and
in
push
jnp
mov
dec
fs
xor
xchg
and
add
cmps
les
push
sub
popa
out
cmps
inc
xchg
cmp
pop
adc
je
mov
call
sbb
not
inc
push
cmps
cmp
adc
jmp
adc
gs
clc
xor
or
cmps
(bad)
xchg
cmp
jecxz
pop
push
cmps
ins
daa
xchg
jnp
push
cmps
push
dec
mov
fs
std
into
mov
dec
fs
les
mov
dec
sub
xor
sar
cmps
cmp
mov
or
sub
pusha
xchg
jmp
cmps
push
inc
fild
push
add
ret
pushfw
das
cld
imul
scas
cmp
inc
mov
fadd
mov
popa
cld
retf
les
jmp
pop
imul
data16
mov
mov
dec
in
pusha
xor
cmps
mov
dec
aaa
pop
mov
jmp
cmp
bound
inc
movs
shl
shr
mov
pop
dec
inc
mov
ret
mov
test
(bad)
mov
(bad)
cld
retf
les
jmp
pop
imul
data16
or
dec
jnp
pop
adc
shl
mov
dec
push
jnp
cmps
mov
cmp
mov
adc
cmp
out
inc
in
add
cmps
shl
push
adc
outs
clc
sbb
inc
sbb
cmp
aaa
lock
les
scas
test
cmp
into
mov
das
retf
dec
xchg
das
std
sbb
mov
bound
cmps
mov
out
les
in
cmp
pop
mov
push
scas
mov
gs
imul
xor
dec
aaa
dec
jle
cmps
mov
fmul
cmps
cmp
xchg
(bad)
retf
(bad)
mov
cmps
mov
fs
les
cmps
mov
jl
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
cmps
fist
cmp
aas
int3
mov
pop
xor
xchg
jl
cmps
sub
cmp
xchg
pop
imul
fwait
icebp
push
pop
mov
cmps
(bad)
push
cmps
cmp
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
test
pop
mov
or
and
adc
mov
cmps
(bad)
push
cmps
cmp
mov
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
test
pop
mov
or
and
or
pop
xor
cmps
mov
dec
sbb
cmp
pop
cmps
cmp
push
ret
sbb
scas
fwait
pop
ins
daa
cmp
jns
jmp
pop
ins
cmps
fwait
xchg
cmp
bound
mov
mov
pop
mov
cmps
(bad)
mov
cmps
(bad)
push
cmps
cmp
mov
inc
mov
nop
jns
mov
pusha
sar
push
cmps
cmp
outs
cmps
cmp
push
ret
mov
fisttp
test
pop
mov
dec
fs
in
sub
pop
mov
dec
fs
or
pop
xor
cmps
mov
dec
sbb
cmp
loope
(bad)
push
cmps
cmp
mov
in
ret
(bad)
push
cmps
cmp
mov
inc
mov
xchg
jns
mov
pusha
sar
cmps
cmp
outs
cmps
cmp
push
ret
mov
or
pop
pop
dec
cmps
mov
repnz
les
cmps
mov
fs
les
cmps
mov
xchg
cmps
mov
fs
les
cmps
mov
jle
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
daa
das
jp
dec
jmp
pop
imul
bound
(bad)
xchg
xchg
retf
(bad)
mov
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
daa
jle
jns
jmp
pop
imul
bound
cmps
add
cmp
aas
int3
mov
pop
xor
retf
scas
cmps
mov
fs
les
cmps
mov
fmul
cmp
fs
les
cmps
mov
fs
les
cmps
mov
jle
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
daa
fs
dec
jmp
pop
imul
bound
cmps
xchg
cmp
aas
int3
mov
pop
xor
retf
scas
cmps
mov
fs
les
cmps
mov
and
test
fwait
pop
mov
mov
or
pop
ror
mov
into
mov
icebp
mov
fs
les
cmps
mov
fs
les
cmps
mov
jg
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
daa
mov
and
scas
fwait
pop
imul
bound
into
mov
dec
fs
push
jg
cmps
add
cmp
xchg
pop
mov
daa
xchg
inc
jns
jmp
pop
imul
bound
cmps
jae
cmp
lods
cmp
aas
int3
mov
pop
xor
ds
cmps
sub
cmp
xchg
pop
imul
fwait
icebp
push
pop
mov
cmps
(bad)
dec
cmps
cmp
mov
in
ret
(bad)
push
cmps
cmp
mov
cmps
push
dec
push
cmps
push
dec
or
cmp
cmc
rol
dec
cmps
cmp
loope
in
fwait
daa
std
xchg
cmp
loope
(bad)
dec
cmps
cmp
mov
sub
sbb
pop
shr
rcr
mov
dec
inc
fs
or
xchg
(bad)
retf
(bad)
mov
outs
mov
cmp
icebp
test
pushf
push
fadd
loope
shl
cmp
mov
cmps
or
cmps
mov
ins
cmc
shr
dec
cmps
cmp
xor
mov
lock
les
in
and
mov
sar
cmps
cmp
in
jmp
in
cmps
adc
fwait
mov
pop
push
pop
push
cmps
mov
rcr
xor
cli
popa
cmps
push
dec
cmps
cmp
loope
(bad)
mov
not
mov
jp
dec
or
cmp
dec
fld
inc
scas
sti
inc
loopne
cmp
into
aas
dec
cmps
mov
cwde
pop
les
cdq
pop
les
mov
dec
pushf
das
cld
mov
push
(bad)
mov
cmc
mov
rcr
mov
dec
adc
push
xlat
cmp
into
fwait
xchg
cmps
mov
cwde
pop
les
cmps
mov
rcr
mov
sub
pop
mov
adc
stos
fwait
pop
mov
cld
pop
les
in
popa
push
or
cmps
mov
fcomp
mov
dec
cs
cmps
mov
pop
cmps
cmp
fwait
loop
dec
fs
mov
dec
cmps
cmp
fnstcw
(bad)
mov
cmps
dec
push
add
cmps
call
cmp
cmps
cmp
loope
lds
sbb
jmp
pop
imul
push
lds
push
cmps
push
outs
push
cmps
push
dec
push
cmps
mov
cwde
pop
les
fwait
mov
dec
ins
data16
out
cmp
adc
(bad)
dec
cmps
cmp
pushf
cmps
ret
(bad)
mov
pop
les
jbe
jns
or
out
sub
pop
mov
dec
fs
inc
mov
pop
cmp
cmps
cmp
loope
lds
mov
lea
dec
in
pusha
xor
cmps
cmp
in
inc
mov
pop
cmp
loope
shl
scas
int
loopne
cmp
into
cmp
dec
cmps
cmp
pushf
pop
(bad)
mov
cmps
mov
hlt
pop
les
dec
cmps
cmp
cmps
mov
hlt
pop
les
fwait
pop
mov
mov
cmps
xor
mov
and
sbb
push
int3
mov
and
xor
retf
dec
push
cmps
(bad)
cli
lock
les
fwait
pop
imul
push
inc
and
cmps
mov
clc
pop
les
cdq
pop
les
in
pusha
(bad)
cli
lock
les
fs
xor
dec
cmps
cmp
or
out
lock
mov
(bad)
push
inc
mov
(bad)
cmp
cmp
movs
pop
cmc
mov
gs
push
mov
dec
or
mov
and
loope
(bad)
mov
and
(bad)
cli
lock
les
fwait
and
fisub
cmps
ins
cmps
arpl
cmps
mov
pop
cmp
cmps
mov
rcr
mov
dec
repnz
mov
gs
mov
push
cmps
(bad)
cli
rcr
mov
mov
cdq
pop
les
out
and
dec
in
xor
adc
outs
stc
dec
fs
out
sub
icebp
mov
ins
sbb
sub
mov
dec
aaa
dec
outs
data16
mov
pushf
pop
dec
inc
mov
adc
sub
cmp
int3
jnp
pop
mov
dec
in
pusha
push
dec
fs
cld
add
test
jecxz
(bad)
mov
cmps
cmp
bound
cmp
dec
bound
cmps
mov
cwde
not
xor
xchg
adc
push
dec
push
cmps
rcr
cmps
cmp
mov
sbb
dec
fs
ret
mov
in
popa
mov
cwde
imul
daa
cmp
push
cwde
stc
gs
outs
mov
rcr
inc
cmps
cmp
xor
dec
or
cmp
push
mov
(bad)
cmps
mov
in
pop
adc
adc
push
mov
cmps
cmp
loope
retf
mov
imul
or
cmp
mov
pop
mov
mov
pop
pop
les
sar
(bad)
xchg
dec
sub
xchg
mov
cmp
mov
adc
das
std
movs
retf
stc
xchg
dec
aaa
sbb
in
fdivr
int3
in
cmps
cmp
mov
dec
pop
inc
shl
lds
or
out
sub
xor
jmp
(bad)
cmp
jecxz
pop
push
cmps
push
or
cmps
cmp
fs
adc
cmps
xor
and
(bad)
not
mov
push
imul
bound
ret
imul
cmps
les
cmp
mov
fs
call
inc
sbb
xchg
dec
aaa
sbb
sbb
jl
and
das
jle
in
pusha
push
dec
push
movs
push
dec
push
cmps
push
dec
push
cmps
push
dec
push
cmps
push
dec
or
cmp
int3
cmp
je
push
data16
mov
fmul
xor
push
ffree
and
mov
cmps
ins
and
(bad)
cmps
jmp
cmp
cmps
ins
and
stc
out
cmps
sbb
ins
and
(bad)
cmps
or
ins
and
sti
out
cmps
cmp
ins
and
icebp
out
cmps
sub
movs
sbb
dec
xor
or
fs
add
cmps
push
dec
xor
or
fs
adc
cmps
push
dec
xor
or
fs
and
cmps
push
dec
xor
or
fs
xor
cmps
mov
push
push
mov
push
cmps
ins
and
std
out
cmps
xchg
cmp
and
stc
out
cmps
xchg
ins
and
(bad)
in
cmps
mov
cmp
cmps
ins
and
(bad)
in
cmps
cmps
cmp
dec
fs
ffree
and
mov
clc
repnz
sbb
push
stc
fdivr
dec
push
pop
les
cmp
mov
sbb
fs
push
pop
jecxz
cmp
stc
out
cmps
pop
cmp
jp
pop
jns
mov
shl
out
and
(bad)
cmps
jae
cmp
push
jns
cmps
push
mov
xchg
pop
shl
cmps
cmp
inc
cmp
or
mov
mov
mov
cmps
push
mov
xchg
daa
fisub
rcr
fs
or
mov
mov
mov
repnz
shl
cmps
cmp
sbb
jns
or
mov
mov
mov
cmps
push
mov
xchg
sbb
and
cmps
cmp
dec
aas
jnp
or
mov
mov
xchg
cmps
mov
push
pop
mov
push
pop
les
pop
jns
mov
sbb
shl
out
and
(bad)
cmps
xor
outs
mov
test
mov
dec
fs
into
xchg
cmps
les
ins
dec
stos
mov
pop
mov
or
loopne
fs
cwde
pop
(bad)
int3
mov
out
and
inc
cmps
cmp
xchg
loop
dec
sub
xor
shl
inc
cmps
cmp
sti
out
and
cwde
lea
xor
jle
dec
jecxz
pop
push
cmps
push
dec
or
cmp
xor
out
cmps
push
scas
mov
movs
cmp
cwde
sbb
out
and
xchg
(bad)
and
int3
pop
les
pop
adc
xchg
and
das
and
in
push
mov
jge
dec
push
cmps
rol
cmps
cmp
pusha
cmp
in
pop
adc
fwait
xchg
(bad)
and
xchg
jg
and
cmps
cmp
and
or
push
jo
xor
not
mov
jge
dec
push
cmps
ror
add
jns
push
cmps
push
dec
push
cmps
push
dec
push
mov
push
dec
push
cmps
push
repz
cmp
ins
int3
das
cmps
arpl
push
dec
xor
or
fs
pop
push
cmps
push
dec
fwait
xchg
(bad)
and
xchg
jg
and
nop
cmp
int3
pop
and
not
mov
jge
dec
push
cmps
rcl
inc
cmps
cmp
sbb
jns
in
or
cmps
push
dec
fwait
xchg
(bad)
and
xchg
jg
and
test
dec
fs
inc
and
not
mov
jge
dec
push
cmps
rcl
cmps
cmp
les
les
cmp
push
cmps
les
push
jp
push
mov
sahf
cmps
cmp
les
push
dec
cmps
imul
jl
dec
or
loopne
fs
cmp
(bad)
stos
movs
push
fs
cmp
fs
cmp
fs
sub
sbb
cmp
sbb
dec
fs
adc
cmps
cmp
or
loope
fs
loope
cmps
push
dec
mov
dec
fs
push
dec
fwait
xchg
(bad)
and
xchg
pop
out
cmps
push
sub
ret
cmps
cmp
in
push
xchg
mov
jl
dec
push
cmps
sar
inc
cmps
cmp
mov
jp
in
mov
cmps
push
xor
fs
js
cmps
imul
shl
or
daa
cmps
cmp
xchg
rcl
and
cmps
cmp
sti
out
and
(bad)
in
daa
dec
cmps
cmp
xchg
push
in
cmps
cmp
in
push
xchg
mov
jl
dec
push
cmps
rol
cmps
cmp
in
jns
in
or
push
dec
fwait
xchg
(bad)
and
xchg
pop
out
cmps
push
arpl
cmp
cmps
push
loope
cmps
cmp
cmps
mov
or
cmps
push
dec
mov
fs
shl
pop
les
sti
out
and
(bad)
out
and
and
dec
fs
cmp
not
mov
jge
dec
push
cmps
rol
inc
cmps
cmp
hlt
add
int3
test
jecxz
(bad)
mov
xchg
movs
push
fs
cmp
fs
sub
in
cmp
pop
cmp
into
das
dec
cmps
push
dec
cmps
imul
jl
dec
or
loopne
fs
cmp
(bad)
rcr
mov
xchg
movs
push
fs
cmp
fs
sub
cmps
push
mov
daa
cmps
cmp
or
loope
fs
loope
cmps
push
dec
mov
or
and
xchg
(bad)
and
xchg
jg
and
pop
cmp
into
or
cmps
push
sub
cmp
into
sub
mov
dec
out
ins
cmps
cwde
mov
fs
push
jnp
out
and
(bad)
out
and
cmps
cmp
push
cmp
into
cmp
not
mov
jge
dec
push
cmps
rcl
inc
cmps
cmp
lock
les
cmp
push
cmps
les
push
jns
push
mov
cmp
cmc
cmps
cmp
mov
dec
fs
jns
dec
or
loope
fs
cmp
cmps
shr
inc
cmps
cmp
loopne
jns
push
cmps
les
cmp
push
cmps
les
push
jns
push
mov
cmp
cmps
cmps
cmp
mov
dec
fs
add
dec
or
loope
fs
cmp
cmps
shr
cmps
cmp
js
jnp
in
pop
adc
fwait
xchg
(bad)
and
xchg
pop
out
cmps
push
push
push
mov
cmps
cmp
in
push
xchg
mov
jl
dec
or
cmp
dec
fisubr
cmps
cwde
addr16
out
and
sti
out
and
(bad)
in
and
xchg
cmps
cmp
mov
dec
fs
jns
dec
or
loope
fs
cmp
cmps
shl
inc
cmps
cmp
inc
cmp
push
cmps
les
cmp
push
cmps
les
push
jp
push
mov
aam
cmps
cmp
int
cmp
mov
imul
jg
dec
or
loop
fs
cmp
(bad)
ds
or
fwait
pop
mov
dec
pop
mov
mov
ret
stc
xchg
dec
and
xor
or
cmp
mov
loopne
fs
dec
inc
mov
std
daa
mov
dec
xor
mov
je
xor
and
pop
mov
push
cmps
les
cmp
mov
jle
xor
ror
cmps
cmp
sti
out
and
cwde
lea
xor
jle
dec
jecxz
pop
push
cmps
push
dec
or
cmp
xor
out
cmps
push
scas
mov
movs
cmp
je
dec
fs
push
dec
fwait
xchg
(bad)
and
int3
pop
les
pop
adc
xchg
and
das
and
in
push
xchg
jge
dec
push
cmps
rcl
inc
cmps
cmp
pusha
cmp
in
push
or
dec
fwait
xchg
(bad)
and
xchg
jg
and
cmps
cmp
and
or
push
jo
xor
not
mov
jge
dec
push
cmps
rcl
inc
cmps
cmp
add
jns
push
cmps
push
dec
push
cmps
push
dec
push
mov
push
dec
push
cmps
push
repz
cmp
ins
int3
das
cmps
inc
push
dec
xor
or
fs
ret
cmps
push
dec
fwait
xchg
(bad)
and
xchg
pop
out
cmps
push
sub
ret
push
mov
dec
fs
jns
dec
or
loope
fs
cmp
(bad)
dec
cmps
push
fs
aam
jb
cmp
push
jl
dec
push
cmps
push
or
cmps
cmp
mov
and
fs
dec
xchg
cmps
push
dec
or
cmp
pop
push
cmps
stc
out
cmps
repz
stos
in
cmps
(bad)
int3
cmp
cmps
les
cmp
mov
and
fs
das
and
sub
rcl
and
cmps
cmp
sti
out
and
(bad)
in
daa
dec
cmps
cmp
xchg
push
pop
push
fcom
fs
jns
dec
or
loope
fs
cmp
(bad)
es
das
cld
and
sti
out
and
(bad)
in
daa
dec
cmps
cmp
call
fs
cmp
not
mov
jl
dec
push
cmps
rcl
cmps
cmp
dec
cmp
mov
into
mov
int3
cmp
fs
cmp
fs
sub
in
cmp
enter
cmps
cmp
cmps
cmp
or
loope
fs
loope
cmps
push
dec
mov
fs
push
dec
fwait
xchg
(bad)
and
xchg
jg
and
rcl
cmps
cmp
cmps
cmps
cmp
cmps
cmp
into
jns
cmps
push
xchg
mov
dec
call
out
test
das
cld
and
sti
out
and
(bad)
out
and
cmps
push
out
cmps
cmp
not
mov
jge
dec
push
cmps
rcl
jp
cmp
xchg
cmp
push
cmps
les
cmp
push
cmps
les
push
jp
push
mov
sbb
cmp
into
fwait
dec
cmps
push
dec
cmps
imul
jl
dec
or
loopne
fs
cmp
(bad)
xor
mov
xchg
movs
push
fs
cmp
fs
sub
and
dec
fs
and
pop
or
loop
fs
loope
cmps
push
dec
mov
fs
push
dec
fwait
xchg
(bad)
and
xchg
jg
and
pop
cmp
into
les
cmps
push
push
or
cmp
into
ins
xchg
cmps
push
xchg
mov
dec
mov
cmps
cwde
out
(bad)
in
and
sti
out
and
(bad)
in
and
cmps
push
bound
mov
dec
fs
add
dec
or
loope
fs
cmp
cmps
shl
jns
cmp
js
jnp
in
mov
dec
fwait
xchg
(bad)
and
xchg
pop
out
cmps
push
push
push
mov
push
mov
dec
fs
jns
dec
or
loope
fs
cmp
cmps
shl
cmps
cmp
dec
cmp
push
cmps
les
cmp
push
cmps
les
push
jns
push
mov
push
pop
or
cmp
xor
out
cmps
push
dec
mov
movs
cmp
mov
sbb
and
xchg
(bad)
and
xchg
jg
and
cmp
jnp
cmps
push
push
or
cmp
xor
fcom
mov
dec
not
cmps
cwde
xlat
(bad)
in
cmps
rcl
mov
jg
dec
fs
fadd
and
mov
xchg
dec
and
icebp
test
pop
aaa
(bad)
pushf
push
fadd
and
mov
cmps
push
iret
cmps
cmp
addr16
cmp
les
ins
dec
cmps
push
cmps
mov
out
les
aaa
cmp
int3
cmp
mov
dec
fs
clc
sbb
pop
mov
popa
jle
pusha
cmps
cmp
pop
int3
test
jecxz
(bad)
mov
sub
xor
jle
xor
dec
pop
or
(bad)
or
fs
(bad)
pop
(bad)
int3
mov
aad
and
or
loop
fs
outs
xchg
cmps
les
push
jp
mov
and
ret
inc
movs
rcr
and
and
mov
mov
jb
in
daa
cmps
cmp
mov
cdq
mov
and
or
aas
outs
clc
sbb
inc
mov
dec
aaa
lock
dec
mov
retf
(bad)
mov
cmps
cmp
(bad)
push
jns
jmp
pop
imul
pop
daa
dec
fs
xor
cmps
mov
(bad)
cmp
xor
sbb
dec
fwait
pop
les
mov
retf
xchg
das
std
iret
sbb
cmp
jecxz
cmps
mov
fs
les
cmps
mov
pop
or
mov
fwait
pop
les
mov
mov
shr
daa
jo
jns
jmp
pop
imul
push
cmp
fwait
mov
mov
fwait
pop
les
mov
dec
fs
mov
shr
daa
das
pop
jns
jmp
pop
imul
fcmovnb
dec
adc
cmp
loope
les
jae
cmp
sbb
cmp
mov
retf
les
cmps
mov
dec
push
mov
in
les
mov
in
aad
cmp
loope
les
jae
cmp
sbb
cmp
in
cmps
mov
fs
les
cmps
mov
pop
or
mov
fwait
pop
les
mov
inc
mov
shr
daa
inc
adc
dec
jmp
pop
imul
fcmovnb
inc
adc
cmp
loope
les
jae
cmp
xchg
push
ffree
loope
lds
sbb
cmp
outs
std
cmps
mov
fs
les
cmps
push
dec
push
cmps
push
or
das
jg
dec
jmp
pop
imul
cmp
mov
mov
into
add
aad
cmp
and
jp
mov
(bad)
mov
into
sti
push
jle
cmp
mov
inc
mov
pushf
pop
les
call
dec
fs
aaa
lock
les
scas
test
pushf
pop
(bad)
mov
and
dec
sub
gs
push
mov
bound
inc
movs
shl
and
jl
cmp
cmp
lea
outs
mov
cmp
icebp
test
out
into
xchg
rcl
fs
aad
pop
cmps
cmp
push
adc
dec
jmp
pop
imul
pusha
and
pop
xor
cmps
mov
mov
fst
mov
cmps
dec
pop
or
mov
xchg
pop
les
mov
dec
fs
mov
mov
in
ret
int3
mov
not
stos
jno
cmp
fst
mov
movs
dec
pop
or
mov
xchg
pop
les
mov
fs
lahf
pop
cmps
int3
test
fwait
pop
mov
in
enter
aas
cmp
cmp
cmps
mov
mov
mov
dec
call
pop
les
jge
jns
jmp
pop
imul
sbb
mov
pop
cmp
cld
cmps
mov
mov
mov
dec
push
pop
cmps
mov
mov
shr
daa
sub
(bad)
mov
aaa
mov
dec
in
push
cmp
xchg
pop
les
or
(bad)
mov
push
mov
dec
in
enter
xor
jne
mov
cmps
mov
mov
mov
dec
and
cmps
mov
mov
shr
daa
into
adc
(bad)
mov
fwait
mov
dec
in
enter
xor
jne
repnz
cmps
mov
mov
mov
dec
ficomp
cmps
mov
xchg
inc
mov
test
mov
pusha
mov
mov
shr
daa
mov
(bad)
mov
(bad)
enter
cmp
cmp
cmps
mov
mov
mov
dec
sahf
pop
cmps
mov
mov
shr
daa
inc
adc
jmp
pop
imul
(bad)
fwait
or
xchg
pop
les
mov
retf
mov
xchg
pop
(bad)
(bad)
mov
cmps
push
rcl
cmp
out
sub
loope
int3
mov
xchg
stos
mov
mov
test
cmp
mov
xor
das
retf
mov
xchg
pop
(bad)
(bad)
mov
xchg
loopne
fs
dec
out
cmps
ror
cmps
pop
(bad)
int3
mov
pop
les
mov
cmps
cmp
xchg
imul
dec
cmps
mov
mov
test
cmp
fstp
mov
pushf
xor
dec
cmps
cmp
and
mov
pop
cmp
cs
cmp
inc
mov
mov
les
pushf
pop
les
cmps
mov
cwde
pop
les
cmps
mov
mov
pop
les
(bad)
ror
jl
cmp
cmps
xor
sub
mov
dec
movs
pop
and
scas
das
jmp
in
popa
jl
fstp
mov
test
cmp
pop
(bad)
cmps
push
movs
dec
js
ss
cmps
mov
cwde
pop
les
cmps
mov
dec
push
mov
or
call
cmps
mov
cwde
pop
les
cmps
mov
daa
mov
(bad)
mov
pop
imul
adc
ffree
loope
int3
mov
das
std
ret
ret
mov
not
mov
pop
lds
jae
cmp
addr16
dec
jmp
pop
imul
bound
ret
lds
jno
cmp
loope
(bad)
mov
and
mov
pop
or
jecxz
sub
pop
mov
sub
fs
mov
cwde
pop
les
cmps
push
dec
or
jecxz
sub
pop
mov
cmps
mov
and
xor
pop
cmps
cmp
and
mov
pop
mov
xchg
jb
cmp
in
and
mov
pop
mov
xchg
inc
mov
mov
les
pushf
pop
les
cmps
cmp
fwait
into
stos
out
cmps
push
stos
mov
pop
ret
mov
not
dec
jae
cmp
mov
in
ret
lds
jbe
cmp
loope
lds
jo
cmp
loope
int3
mov
dec
sbb
mov
xchg
pop
les
loope
int3
mov
pusha
mov
mov
dec
xor
jmp
and
les
mov
xchg
inc
mov
test
les
pushf
pop
les
fwait
pop
imul
jle
dec
jmp
pop
imul
bound
ret
ret
mov
not
mov
cmp
loope
int3
mov
sub
sbb
xchg
sbb
shr
loope
ret
mov
daa
int
jne
cmp
loope
ret
mov
test
nop
pop
les
sub
pop
mov
sub
sub
sbb
sbb
mov
pop
mov
arpl
cmp
and
mov
pop
imul
pop
les
xchg
jnp
push
cmps
push
dec
mov
sub
not
fwait
jne
cmp
loope
(bad)
mov
imul
ror
mov
dec
ret
pop
mov
inc
movs
test
les
fwait
dec
pop
cmps
mov
dec
or
dec
push
fs
push
pop
cmps
bound
cmp
pusha
xchg
inc
sub
cmps
cmp
aaa
lock
hlt
(bad)
xchg
(bad)
imul
gs
fcmovnbe
in
and
jnp
shr
cmps
cmp
loope
aad
fwait
scas
sti
cmp
rcr
jne
cmp
cmps
(bad)
into
(bad)
cmp
dec
fs
movs
push
fs
ds
stc
out
(bad)
(bad)
mov
adc
mov
das
clc
daa
xor
jp
mov
sub
into
les
cmps
push
ffreep
in
cmps
inc
mov
dec
mov
shr
cmps
cmp
(bad)
gs
fs
aas
dec
cmps
mov
aad
les
mov
dec
fs
cmp
hlt
pop
jns
jmp
pop
imul
bound
jb
pop
cmp
and
dec
adc
jns
ins
ja
cmp
in
mov
ror
sub
cmp
fidiv
sub
xchg
dec
cli
mov
addr16
ins
mov
cmp
out
mov
xor
retf
les
pop
mov
dec
imul
cld
mov
cmc
mov
pop
pop
xor
ror
and
scas
das
jmp
in
pusha
mov
(bad)
lock
cwde
mov
xlat
dec
les
mov
jae
sar
into
cmps
fisttp
fs
mov
dec
mov
stc
mov
mov
pop
or
fwait
xchg
mov
(bad)
dec
les
cmps
push
cmp
mov
not
inc
jo
cmp
xchg
loopne
dec
fs
cmp
loope
xlat
mov
div
mov
dec
jb
cmps
mov
sti
dec
les
fwait
pop
mov
(bad)
dec
les
fwait
pop
mov
ret
xlat
mov
not
dec
jne
cmp
cmps
mov
dec
or
jecxz
fs
stos
out
cmps
push
mov
jp
mov
dec
sub
ret
in
or
cmps
enter
(bad)
xchg
cmps
push
ffreep
in
daa
mov
(bad)
fwait
or
cmps
mov
dec
jle
mov
sbb
mov
and
dec
fnstsw
pop
jmp
stos
out
cmps
push
mov
jnp
mov
sub
sub
ret
in
or
cmps
enter
cdq
xchg
cmps
push
ffreep
in
daa
mov
cmps
movs
push
fs
cs
cmps
mov
icebp
mov
ret
in
or
cmps
enter
adc
push
cmps
push
dec
push
cmps
push
dec
or
cmp
into
cmp
and
cmps
cmp
and
push
dec
push
cmps
push
dec
xor
xchg
inc
cmps
cld
or
pop
xor
sub
xor
mov
pop
mov
xor
cli
mov
int3
lods
pop
jnp
pop
cmps
cmp
popf
int3
cmp
adc
ins
pop
jmp
pop
ins
mov
adc
xchg
imul
div
cmp
xchg
inc
jns
fwait
ror
dec
in
and
or
pop
xor
sub
xor
mov
pop
mov
sub
sub
int3
lods
pop
jnp
pop
cmps
cmp
popf
int3
cmp
adc
ins
pop
jmp
pop
ins
mov
adc
retf
imul
div
cmp
xchg
inc
jns
fwait
ror
dec
fwait
ror
dec
fdiv
dec
fs
fadd
loope
(bad)
mov
sub
(bad)
(bad)
cmps
sub
scas
mov
inc
call
push
dec
lahf
fstp
in
jecxz
daa
fnstcw
dec
push
cmps
shl
imul
dec
sbb
add
mov
mov
rcr
and
dec
cmps
push
dec
mov
dec
fs
jle
mov
cmps
cmp
mov
popa
jle
cmps
cmp
jecxz
dec
cmps
cmp
and
imul
cmps
les
cmp
push
cmps
push
dec
push
cmps
push
dec
push
cmps
push
dec
or
cmp
cmps
push
scas
mov
dec
ds
cmps
cwde
dec
sti
out
daa
lock
jns
push
cmps
push
dec
mov
xor
cmps
(bad)
adc
aas
cmps
pop
stos
cmp
cmps
cmp
aam
daa
icebp
jle
dec
mov
xchg
cmps
imul
and
movs
ret
mov
dec
mov
fs
cmp
fwait
xor
retf
les
in
jle
xchg
in
gs
fmul
mov
sub
pop
or
(bad)
or
cmps
push
pop
shl
cmp
cmps
cmp
mov
lods
mov
and
dec
dec
out
push
sti
cmps
cmp
cmps
cmp
dec
scas
out
pop
mov
dec
jle
mov
and
and
mov
jnp
push
cmps
push
dec
mov
rol
push
push
aad
fwait
not
push
cmps
push
push
pop
out
and
mov
push
inc
cmps
push
dec
or
cmp
int3
cmp
fs
bound
cmps
rcl
jecxz
pop
mov
jb
cmps
cmp
and
cmps
shr
push
dec
push
cmps
mov
xor
sbb
cmp
shr
adc
std
repnz
mov
cmp
icebp
test
hlt
pop
into
mov
sub
sub
cmp
fnstenv
retf
add
xor
fwait
sub
cmps
xor
push
movs
cmp
mov
dec
shl
jb
cmps
cmp
sub
ja
cmps
cmp
fdivr
dec
fs
cmps
inc
cmps
mov
dec
fs
cmp
xchg
jge
dec
fwait
xchg
push
sti
cmps
shl
pop
(bad)
(bad)
loope
(bad)
mov
das
ret
dec
pushf
das
cld
daa
mov
dec
fwait
adc
mov
pop
shr
(bad)
int3
mov
pop
les
fwait
pop
imul
dec
sub
cmps
xor
cmps
mov
lods
pop
les
(bad)
out
cmps
xchg
stos
cmp
dec
and
and
mov
pop
adc
mov
dec
aas
(bad)
icebp
jbe
mov
lea
jbe
shl
loope
(bad)
mov
lea
int3
mov
les
fwait
pop
add
out
and
mov
pop
adc
mov
sub
les
(bad)
mov
not
push
cmps
les
push
jp
mov
dec
fs
int3
arpl
cmp
pop
ret
cmps
xor
movs
mov
(bad)
or
cmps
mov
dec
out
pop
sti
cmps
cmp
pop
(bad)
(bad)
or
xor
les
(bad)
(bad)
or
call
xchg
push
sti
cmps
shl
sbb
(bad)
fnstsw
fs
ret
dec
pushf
das
cld
out
cmp
pop
jecxz
inc
loope
cmp
fs
cmp
(bad)
std
cmp
fs
cmp
and
shl
mov
scas
rcr
cmps
cmp
jle
cmp
inc
mov
mov
mov
popa
sar
cmps
cmp
and
les
cmps
add
add
add
pop
jns
adc
jp
adc
jp
adc
jns
adc
jns
adc
jns
adc
jp
adc
jp
imul
dec
cmps
push
dec
fwait
shr
cmps
xchg
ret
mov
pop
add
pop
jns
adc
jns
adc
jp
adc
cmp
push
pop
les
shr
cmps
sti
stos
cmp
mov
dec
fs
fadd
loope
(bad)
mov
das
cld
int3
sar
fwait
cmps
mov
mov
sub
pop
mov
aaa
dec
fs
mov
into
mov
dec
gs
cmps
mov
dec
pop
mov
or
cmp
sub
pop
fwait
xchg
rcl
and
cmps
cmp
fldenv
dec
outs
push
cmps
push
dec
or
jecxz
fs
cmp
fwait
xchg
rcl
and
cmps
cmp
in
pop
or
gs
les
fwait
pop
std
retf
les
shl
cmp
and
mov
cmps
cmp
loope
les
loopne
jns
mov
xor
sub
int3
lods
pop
jnp
pop
cmps
cmp
popf
and
push
dec
or
fimul
fwait
pop
les
pop
test
inc
pop
pop
les
rcr
and
push
jle
dec
push
cmps
rol
push
and
inc
cmps
shr
popa
cmps
cmp
loop
cmp
inc
mov
mov
mov
popa
mov
gs
les
cdq
pop
les
or
jecxz
sub
pop
mov
dec
fs
cmp
sub
pop
fwait
xchg
daa
fisub
shl
fldenv
dec
outs
push
cmps
push
dec
or
jecxz
fs
cmp
fwait
xchg
daa
fisub
ror
cmps
cmp
jmp
pop
mov
jae
cmps
dec
mov
pop
sub
inc
int3
cmp
cmps
push
dec
mov
push
icebp
out
cmps
stos
scas
cmp
addr16
dec
fs
mov
dec
(bad)
fwait
xor
loope
les
gs
les
pop
lahf
inc
outs
push
cmps
push
dec
or
in
or
xchg
daa
fisub
rcr
ins
cmps
cmp
in
cmp
loope
les
(bad)
ret
pushfw
das
cld
ret
les
xchg
pop
les
cmps
mov
xchg
pop
les
cmps
mov
dec
cmps
mov
gs
les
(bad)
cmps
fwait
scas
cmp
sbb
mov
pop
cmp
inc
int3
cmp
cmps
push
dec
mov
xor
pop
push
iret
(bad)
cmps
jae
cmp
scas
aas
dec
fs
aam
or
cmp
loope
les
xchg
pop
les
cmps
mov
xchg
pop
les
cmps
mov
dec
cmps
mov
gs
les
sti
out
cmps
repz
cmp
sbb
mov
pop
cmp
inc
int3
cmp
cmps
push
dec
mov
arpl
out
cmps
retf
scas
cmp
pop
cmp
das
ret
jle
das
cld
ret
les
xchg
pop
les
cmps
mov
xchg
pop
les
cmps
mov
dec
cmps
mov
gs
les
sti
out
cmps
dec
scas
cmp
sbb
mov
pop
cmp
inc
int3
cmp
cmps
push
dec
mov
dec
fs
push
addr16
out
cmps
and
cmp
sub
int3
lods
pop
jnp
pop
cmps
cmp
popf
and
push
dec
push
cmps
push
arpl
dec
pop
inc
cmps
les
cmp
mov
dec
cmps
std
retf
les
shl
les
popa
cmps
les
pusha
call
fs
pop
cwde
cmps
push
dec
mov
push
addr16
out
cmps
mov
cmp
arpl
dec
fs
dec
out
and
mov
pop
pop
dec
push
pop
mov
dec
pop
mov
jmp
pop
imul
push
(bad)
mov
not
mov
push
(bad)
mov
not
xchg
ins
cmps
cmp
mov
cmps
cmp
loope
les
inc
cmp
mov
cmp
fs
pop
les
xchg
push
cmps
push
pop
mov
cmp
cmps
les
cmp
mov
cmp
fs
ja
cmps
std
retf
les
shl
lds
popa
cmps
les
pusha
call
fs
aad
cmps
push
dec
mov
cmp
fs
push
outs
sti
out
cmps
jg
cmp
stos
cmp
es
dec
jmp
pop
mov
jae
cmps
dec
mov
adc
jbe
aam
(bad)
pushf
xchg
ret
(bad)
mov
pop
les
jmp
pop
imul
jle
dec
jmp
pop
imul
bound
neg
cli
cmp
inc
mov
mov
mov
and
mov
pop
mov
push
cmps
push
dec
push
mov
push
dec
cmps
jnp
and
jp
mov
ds
fs
mov
and
fs
mov
(bad)
mov
dec
sti
cmps
cmp
and
ss
out
int3
lods
pop
jnp
pop
cmps
cmp
popf
das
clc
and
cdq
pop
les
and
(bad)
cli
nop
pop
les
fs
cmp
loope
(bad)
mov
not
or
fisttp
call
dec
jmp
pop
mov
jae
cmps
dec
mov
cmps
mov
xchg
pop
les
xchg
pop
les
call
dec
push
cmps
mov
xchg
pop
les
xchg
inc
jns
fwait
adc
mov
pop
shl
popa
cmps
cmp
fwait
dec
sub
cmps
les
push
jp
mov
cmp
and
fs
cmp
cmps
cmp
or
stos
pcmpgtb
dec
cmps
mov
nop
pop
les
in
and
mov
pop
mov
sbb
in
popa
push
dec
push
cmps
push
dec
fwait
adc
mov
pop
sar
pusha
cmps
cmp
imul
repz
es
dec
fs
(bad)
cmps
int3
cmp
icebp
push
(bad)
mov
hlt
push
dec
fwait
adc
mov
pop
sar
sub
pop
push
cmps
push
mov
rcl
mov
dec
loop
cmps
(bad)
cli
nop
pop
les
fs
ds
in
dec
cmps
cmp
pushf
pop
(bad)
mov
into
push
sti
cmps
push
ss
adc
or
cmp
dec
mov
mov
mov
scas
movs
push
fs
out
dec
cmps
and
cmps
cmp
cdq
pop
(bad)
(bad)
mov
mov
cmp
inc
fwait
shl
cmps
xchg
pusha
xchg
inc
mov
sbb
shl
lock
pop
cmp
push
cmps
xor
mov
cmp
fld
inc
imul
dec
cmps
add
pop
jns
adc
jp
mov
aas
dec
fs
ret
mov
in
popa
add
cmp
adc
jns
mov
dec
fs
push
iret
(bad)
cmp
push
arpl
out
cmps
or
pop
shl
xchg
daa
fisub
rcl
pusha
cmps
cmp
pushf
push
fadd
and
mov
daa
fisub
dec
inc
fwait
xchg
adc
and
cmps
cmp
movs
push
shl
mov
xchg
cmps
add
cmp
adc
jns
shl
mov
dec
cmps
push
fs
sub
cmps
add
cmp
adc
jns
shr
or
cmps
rol
pop
int3
test
jecxz
(bad)
mov
dec
cmps
push
sar
pcmpgtb
cmp
bound
cmp
movs
push
sar
push
fs
aam
jnp
cmp
scas
pcmpgtb
cmp
pcmpgtb
cmp
bound
cmp
movs
push
sar
pcmpgtb
cmp
bound
cmp
shr
mov
mov
cmp
inc
xor
sar
pusha
cmps
cmp
cmps
cmp
cmp
repnz
mov
scas
enter
stos
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
in
inc
push
mov
cmp
das
cld
iret
pop
test
push
test
pop
popa
cmps
cmp
mov
scas
sti
cmp
cld
or
xchg
(bad)
mov
xor
inc
ror
movs
gs
icebp
arpl
ret
outs
adc
dec
mov
dec
fs
cmp
push
cmps
imul
outs
clc
push
in
cmp
cmps
push
dec
je
cmp
pusha
add
je
cmp
(bad)
dec
pusha
add
cmps
cmp
xor
les
xchg
or
xchg
jmp
xor
out
ficomp
dec
xchg
add
imul
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
cmp
fs
dec
cmps
.byte
