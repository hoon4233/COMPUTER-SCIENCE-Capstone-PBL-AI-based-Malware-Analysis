xchg
xor
in
xor
mov
or
movs
xor
adc
or
pushf
xor
mov
or
xor
or
lods
xor
les
or
push
xor
mov
xor
jle
or
int3
xor
in
or
popf
xor
fdiv
or
(bad)
xor
add
add
(bad)
xor
add
add
and
or
add
add
and
or
add
add
inc
xor
add
add
inc
xor
add
add
xor
add
add
add
or
add
add
mov
or
add
add
mov
or
add
add
lods
xor
add
add
lods
xor
add
add
imul
gs
xor
cs
ins
add
dec
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
gs
xor
fs
ins
add
and
add
add
dec
gs
popa
addr16
outs
js
add
popa
fs
jo
xor
cs
ins
add
ins
jle
add
add
addr16
jo
outs
dec
gs
js
add
arpl
arpl
xor
fs
ins
add
ss
add
add
imul
inc
outs
outs
je
outs
ins
jae
add
jae
gs
ins
xor
cs
ins
add
and
add
add
gs
ins
inc
bound
je
add
ins
jae
outs
jb
gs
ins
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
add
adc
add
add
add
xchg
cmp
add
add
add
add
add
sbb
add
lods
add
or
add
je
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
or
inc
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
movs
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
popa
add
ja
jae
js
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jno
popa
add
ja
jae
js
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
in
inc
or
xchg
add
out
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
jbe
cmp
jae
ins
bound
or
add
add
add
add
add
add
movs
add
or
cmp
add
add
add
add
pop
lods
test
sub
mov
sub
xchg
cwde
cmps
jb
addr16
pusha
ins
xor
(bad)
movs
ret
pop
fadd
adc
bound
nop
jle
and
xor
mov
loop
rcr
cmps
cmp
jns
ret
add
push
fucomip
xor
cmps
adc
sar
jle
aas
test
scas
inc
jl
xor
scas
and
outs
push
fwait
pop
sub
xor
shr
fcomp
adc
jl
cld
(bad)
call
mov
cmp
or
lahf
cli
aas
jg
cmp
and
bswap
pop
fst
jo
ins
jo
bound
pop
icebp
dec
add
xchg
adc
mov
pushf
push
(bad)
xor
das
xor
icebp
out
sub
adc
shl
mov
dec
ins
ror
lods
dec
pop
mov
xlat
push
inc
mov
push
jns
out
inc
xchg
dec
out
js
in
in
retf
lods
mov
or
outs
repz
test
dec
arpl
imul
add
xchg
lea
push
fisttp
add
add
add
movs
(bad)
mov
jmp
int
push
add
add
add
repnz
jmp
add
jb
jno
jmp
jmp
add
push
dec
out
imul
add
jmp
test
add
jmp
and
jmp
xor
mov
jmp
mov
add
jmp
repnz
jmp
sar
les
add
pop
jmp
imul
push
and
jmp
test
sar
jmp
repz
xchg
add
test
sbb
xor
add
mov
mov
mov
mov
mov
jmp
icebp
xor
add
mov
jmp
mov
add
icebp
sub
jmp
mov
and
jmp
test
call
fist
icebp
not
pop
jmp
cmp
add
add
xchg
cmps
jbe
jmp
mov
leave
call
jmp
jmp
not
add
fs
jmp
jle
jmp
xor
loope
add
lea
jmp
add
add
jmp
sub
add
push
jmp
mov
mov
jmp
add
add
add
popa
movzx
jmp
mov
add
xor
jbe
jmp
nop
jmp
arpl
push
jno
push
jmp
rol
push
cld
jmp
xor
or
add
dec
sub
jmp
fimul
test
add
jmp
nop
jmp
arpl
sti
add
add
mov
xchg
add
jmp
nop
jmp
enter
(bad)
jmp
ds
jmp
or
jmp
mov
jmp
ret
jo
pop
jmp
mov
push
inc
fwait
jno
fiadd
loopne
add
jmp
sub
add
sub
jmp
test
jmp
sbb
mov
add
add
add
add
add
inc
mov
jmp
mov
clc
jo
je
jmp
nop
jmp
mov
enter
jmp
sbb
in
dec
sbb
add
jmp
sbb
shl
jmp
mov
in
add
icebp
jmp
jmp
add
add
mov
jmp
mov
add
add
add
xor
jae
sub
add
jmp
xor
add
or
add
jno
adc
and
jmp
test
(bad)
(bad)
(bad)
jmp
les
mov
jmp
addr16
jmp
sub
jno
pop
sub
mov
jmp
shr
jmp
mov
add
(bad)
jmp
sbb
sub
jmp
jmp
call
jmp
sub
add
mov
jmp
mov
gs
jmp
jmp
sahf
pop
jmp
sub
mov
jmp
cmp
retf
add
add
add
jno
pop
sub
sub
add
shr
jmp
or
add
(bad)
jmp
sbb
aad
jmp
or
cli
jmp
adc
(bad)
(bad)
jmp
jmp
test
mov
pop
jmp
jmp
in
add
scas
pop
jmp
fdivr
jmp
mov
mov
shl
cmp
mov
jmp
mov
or
mov
jmp
sub
add
shr
std
(bad)
(bad)
jmp
or
push
jmp
mov
add
add
clc
jmp
bound
add
cmp
jne
jmp
xor
call
mov
jmp
mov
jo
mov
jmp
ss
inc
std
(bad)
(bad)
jmp
test
add
mov
jmp
or
mov
add
addr16
add
add
add
add
mov
jmp
sbb
mov
add
xlat
jmp
jmp
cmp
jmp
adc
add
fadd
and
add
outs
push
jmp
out
cwde
jmp
adc
jmp
call
test
push
mov
jmp
jle
push
hlt
jmp
inc
mov
mov
jmp
mov
(bad)
(bad)
(bad)
jmp
xor
jne
mov
jmp
sbb
cld
jmp
xchg
cmc
(bad)
(bad)
(bad)
jmp
sub
jmp
add
jmp
imul
mov
add
imul
cmp
jmp
mov
add
add
mov
jmp
mul
mov
jmp
sub
jmp
(bad)
push
jmp
push
add
add
sub
sub
fwait
inc
jmp
sbb
(bad)
(bad)
jmp
adc
mov
jmp
or
mov
add
add
add
jmp
(bad)
mov
add
add
add
jmp
call
xchg
retf
mov
mov
add
add
(bad)
pop
add
jmp
ja
jmp
ss
ds
(bad)
(bad)
jmp
mov
add
add
jae
jmp
jmp
test
jae
xor
call
sub
mov
jmp
sub
fild
sub
jmp
rcl
aam
add
cmps
sub
jmp
mov
add
jne
jmp
jmp
fidiv
aam
dec
sbb
loopne
push
xor
adc
xor
stos
ds
jmp
int
and
js
fild
cmp
loop
popa
sub
dec
push
sbb
fnstcw
pushf
xchg
ds
scas
sbb
lds
ficomp
in
cmp
jle
fisttp
in
into
dec
test
hlt
std
ss
and
mov
jne
sbb
pop
jns
out
fstp
jp
pop
out
mov
pushf
mov
mov
push
je
mov
inc
inc
cmp
mov
lods
stos
call
sbb
idiv
retf
adc
test
jle
fcom
daa
xchg
pop
inc
push
inc
xor
(bad)
call
and
jo
cwde
(bad)
fldcw
adc
inc
fmul
call
inc
dec
cmp
popa
out
xor
xor
scas
test
cmp
or
inc
ins
pop
outs
outs
mov
push
xchg
(bad)
sub
js
(bad)
mov
pop
add
xchg
push
and
jmp
fs
jb
test
shl
mov
rcr
pop
mov
test
ins
and
shl
(bad)
and
pop
or
rcl
dec
out
popa
push
mov
repnz
shr
add
sahf
cmp
je
lods
loop
mov
loopne
push
mov
int
movs
aad
in
les
xor
push
cwde
pusha
sbb
fcmovnbe
pop
jp
mov
pusha
out
shl
add
rcl
pop
inc
pop
retf
loop
(bad)
dec
cmp
inc
jmp
mov
xor
fcomip
cmp
pusha
xor
jle
push
add
pop
cmp
or
add
xchg
or
mov
je
push
cdq
dec
sub
pop
and
call
mov
test
add
inc
imul
int3
pop
icebp
jg
push
js
ret
xor
inc
adc
sbb
add
dec
push
dec
(bad)
sar
push
fwait
repnz
push
or
into
neg
popf
shl
add
lahf
jns
fwait
les
mov
lahf
or
sahf
lods
xor
fwait
je
lods
das
pop
repnz
out
or
icebp
mov
rcl
iret
jb
out
sbb
scas
jae
and
ins
inc
xor
xchg
cdq
jnp
and
add
add
fst
les
xor
loopne
push
mov
lods
mov
cmp
mov
mov
or
iret
sub
or
stos
les
jns
mov
or
cmc
movs
sub
loope
popa
adc
push
sbb
and
out
pop
(bad)
aaa
les
and
test
sub
and
push
xchg
add
fdiv
int
pop
xor
xor
call
cdq
xor
sar
mov
sbb
xchg
movs
pop
dec
bound
dec
call
mov
dec
test
(bad)
int3
push
xchg
lods
lods
xor
or
rcr
push
cmp
mov
jmp
out
mov
loopne
sub
stos
jge
add
(bad)
lahf
push
dec
inc
push
dec
or
movs
push
inc
test
sub
int3
in
xchg
jnp
je
jmp
scas
scas
inc
pop
fisttp
ins
scas
or
adc
test
and
jp
lds
mov
or
jns
inc
mov
inc
scas
repnz
and
sbb
mov
shl
pop
scas
cli
xchg
into
adc
mov
loopne
fucom
sbb
mov
or
or
mov
fmul
enter
sbb
mov
push
mov
retf
jecxz
dec
test
pop
push
ficomp
jg
pop
or
sbb
in
clc
cs
test
mov
movs
adc
lods
repnz
jns
pusha
cmp
fsubr
push
shl
in
aam
sbb
push
inc
fmulp
sar
retf
cmp
dec
add
jge
rcr
sbb
mov
pop
add
jae
pop
jb
dec
jg
(bad)
faddp
shl
dec
dec
mov
adc
sub
dec
sar
sbb
or
mov
rcl
sub
mov
sbb
fsubr
jns
and
jle
arpl
mov
push
dec
adc
rol
jae
(bad)
ficom
fnstsw
das
xor
mov
pop
push
fild
bound
jne
pop
dec
test
cmps
sbb
push
push
pop
popf
out
inc
pop
clc
mov
mov
ins
push
mov
outs
scas
and
ins
daa
sahf
mov
(bad)
outs
fsubr
pushf
loop
sbb
in
jp
inc
into
sbb
shr
mov
pop
jmp
push
inc
jns
cmps
push
add
adc
or
pop
shl
xor
push
jmp
cdq
mov
rcr
fwait
ds
out
arpl
mov
dec
and
jge
jne
lods
pop
jge
add
aam
xlat
mov
inc
mov
mov
shl
mov
mov
rcl
cmp
push
fwait
cmp
pop
pop
xor
jmp
outs
inc
jmp
pop
jg
popf
repnz
das
fistp
popf
fprem1
in
dec
jg
xchg
xlat
sar
pusha
in
sbb
xlat
retf
jne
inc
(bad)
pop
fcom
(bad)
in
cs
inc
cmp
cmp
movs
pop
push
movs
or
adc
jmp
pop
and
add
sti
inc
sbb
add
in
or
movs
push
dec
xor
or
sbb
cli
xor
pop
test
add
gs
(bad)
(bad)
cmp
repz
and
jae
leave
shr
repz
jnp
push
(bad)
jns
jbe
jne
cmp
ret
lea
pop
dec
adc
push
xchg
pop
mov
mov
cmp
cmc
ds
dec
cmp
test
sub
shl
cmps
fs
xor
jp
lds
test
fcom
jmp
pusha
and
xchg
inc
loop
and
int3
mov
cmp
dec
add
repz
dec
scas
(bad)
dec
mov
mov
pop
out
dec
inc
pop
sti
fcomp
push
sub
retf
out
xlat
rol
jmp
pop
mov
stos
push
(bad)
pop
aaa
das
rcl
mov
sub
xor
jno
(bad)
xor
lods
inc
mov
mov
add
push
mov
sbb
xchg
mov
mov
and
adc
or
lea
loope
lea
push
xchg
xchg
jecxz
push
stc
aas
fild
dec
jae
std
xor
vxorps
and
push
pop
fwait
adc
bnd
scas
sti
xchg
mov
mov
cmp
out
gs
leave
xchg
dec
ret
sub
cmps
and
fdivr
mov
jle
sbb
cmp
loopne
test
or
in
mov
adc
ins
jns
dec
pop
adc
nop
and
fdivr
mov
sub
mov
dec
jae
popf
das
lea
push
in
jb
jg
lods
push
lods
js
es
adc
mov
cmp
popf
mov
inc
je
dec
sub
aam
xor
rcl
pop
push
pop
ret
add
xor
xor
push
(bad)
sbb
(bad)
mov
jle
ds
(bad)
adc
sbb
js
cmp
push
int
or
add
retf
adc
cmps
movs
xchg
shl
sbb
hlt
clc
cmc
int3
push
stos
adc
mov
xchg
(bad)
mov
into
mov
push
push
inc
mov
hlt
(bad)
cmp
xor
xlat
imul
push
xchg
(bad)
fs
(bad)
jl
cmps
mov
sub
sub
cmps
sti
icebp
test
scas
pusha
pop
dec
pusha
and
adc
dec
jl
(bad)
lock
clc
mov
out
inc
push
cmp
pop
call
cmc
scas
outs
mov
idiv
hlt
push
retf
xchg
shl
daa
jmp
dec
test
add
pop
cmps
jmp
jbe
cwde
push
or
push
(bad)
call
fist
adc
dec
mov
pop
jmp
inc
mov
enter
lea
mov
ffreep
(bad)
(bad)
cli
out
mov
inc
in
jle
and
add
jp
(bad)
pop
mov
sub
mov
mov
sub
adc
adc
mov
fst
jne
push
imul
and
pushf
sahf
sti
into
aad
call
and
jecxz
pop
inc
imul
mov
mov
push
pop
pop
shl
stos
sub
pop
mov
jno
retf
jae
cmc
mov
test
std
dec
dec
cwde
out
je
retf
xor
repnz
add
(bad)
mov
sub
cmc
pop
test
inc
sub
xlat
div
xchg
cld
sahf
mov
inc
rcr
mov
cmp
inc
mov
xchg
fs
sub
int3
inc
xor
fdiv
jg
lea
aam
or
rol
or
sbb
jmp
jae
scas
outs
jb
xor
fadd
xchg
push
jl
dec
jp
out
aad
in
fsubr
daa
xor
mov
push
repz
and
shl
scas
mov
sbb
pusha
ret
ins
retf
and
mov
div
and
lods
(bad)
fldcw
in
cdq
dec
ins
(bad)
jge
lahf
push
js
sub
outs
and
xchg
jmp
sbb
or
dec
fwait
sbb
out
ficomp
sti
pop
bound
aas
lods
cld
mul
(bad)
imul
and
mov
stc
or
enter
inc
inc
jecxz
retf
aas
xchg
jnp
aaa
push
dec
add
retf
mov
mov
(bad)
sbb
mov
push
and
aas
push
cwd
mov
dec
cdq
rcr
inc
sub
stc
addr16
pop
pop
add
push
shl
cmp
cmp
fidiv
fisubr
jne
xchg
arpl
popa
call
xor
mov
stos
test
sar
sbb
ret
test
clc
sbb
xor
ins
mov
mov
xor
adc
test
jmp
xchg
mov
push
mov
mov
movs
adc
dec
sti
out
push
imul
add
ret
dec
push
pop
pop
mov
lahf
dec
pop
inc
adc
xchg
fld
xlat
mov
out
pop
stos
ds
pop
push
pop
fldz
aam
xlat
sbb
and
and
mov
push
and
shl
loope
int3
aad
out
cmp
sbb
pop
js
outs
out
out
jae
(bad)
test
inc
jp
sub
mov
and
aad
aam
mov
mov
stos
dec
add
repz
hlt
bound
addr16
(bad)
aad
lock
adc
(bad)
mov
push
out
jae
xor
cmpps
inc
pusha
mov
gs
cli
js
add
test
mov
or
and
dec
mov
mov
pop
pop
mov
fiadd
lock
xor
lock
bound
lods
push
and
int3
sbb
jnp
test
daa
pop
lods
pandn
popa
push
retf
and
retf
xor
mov
retf
popa
ja
or
fld
inc
cwde
and
sahf
inc
mov
jbe
enter
sar
sub
pop
push
aas
jne
adc
sub
adc
or
loope
leave
xlat
lods
lahf
loopne
and
and
rol
inc
sbb
(bad)
cmps
push
popf
leave
iret
sar
xchg
jno
mov
fsub
push
push
inc
mov
js
out
call
xchg
mov
fmul
mov
add
xchg
cld
fucomi
mov
ret
inc
push
sbb
aas
inc
mov
jecxz
jg
pop
or
cmp
test
inc
adc
aas
mov
mov
inc
frstor
xor
xchg
(bad)
xlat
cmps
loopne
or
pushf
pop
test
sub
mov
mov
ja
popa
push
ins
jae
push
popf
xor
int3
jg
adc
mov
sub
push
and
add
mov
in
pop
mov
out
pop
cli
mov
je
mov
ja
pop
ds
stos
hlt
adc
mov
data16
imul
add
add
dec
mov
ja
pop
jb
jg
es
mov
stos
inc
cmp
add
arpl
mov
pop
push
outs
or
in
das
out
sub
es
into
(bad)
(bad)
dec
fisub
cmps
adc
fld
mov
push
repnz
aam
mov
push
aam
sub
popa
mov
aad
shr
and
or
pop
and
fwait
and
xlat
into
cs
jle
mov
pop
push
push
sub
aam
push
retf
pop
shl
lock
retf
outs
mov
sbb
inc
gs
pop
fs
cmp
dec
pop
sahf
sbb
mov
sub
pop
bound
ins
mov
push
mov
rcr
and
jmp
sub
mov
xchg
int
sub
jne
sub
out
out
sub
fld
cmp
xchg
mov
dec
pop
repnz
aas
aam
jae
xor
in
dec
pop
mov
aam
(bad)
mov
sbb
outs
push
sbb
je
stos
dec
xchg
test
pop
retf
and
mov
mov
cld
inc
outs
mov
mov
cmp
popa
push
test
into
(bad)
js
mov
call
cdq
cwde
cld
dec
dec
push
jo
(bad)
call
jmp
call
mov
dec
push
sbb
mov
ins
icebp
lds
imul
in
xor
fwait
dec
adc
aam
ds
push
(bad)
push
push
sti
test
loop
push
add
cli
xchg
fwait
pop
cmp
jnp
xor
fadd
mov
fmul
add
mov
(bad)
in
dec
inc
and
mov
cmps
cli
sbb
rdtsc
xor
sbb
push
mov
add
jle
inc
aaa
ret
sbb
push
push
and
test
inc
mov
sbb
jmp
xchg
cdq
mov
and
sbb
mov
mov
fldenv
ret
dec
or
and
mov
ja
gs
inc
fldenv
in
fidiv
mov
push
jae
or
jne
repnz
xchg
mov
jae
xchg
jecxz
cmp
sub
mov
add
aam
daa
data16
out
xchg
(bad)
fild
cld
adc
call
add
mov
push
daa
dec
or
and
and
pop
out
lahf
dec
adc
hlt
int
imul
pop
ins
fwait
stc
cli
jge
cmp
into
or
repz
cs
pop
js
xor
fist
push
test
ret
sbb
inc
(bad)
xor
xchg
ss
es
in
pop
stos
ins
stos
ja
dec
repnz
jp
lds
fstp
and
dec
pop
rcr
imul
lock
jmp
mov
push
neg
lds
add
not
ds
ins
inc
repnz
ret
push
aas
loopne
and
(bad)
(bad)
push
pop
mov
push
sub
xchg
pop
sub
add
mov
and
ror
(bad)
clc
add
cmps
push
test
pop
or
mov
mov
sub
gs
xor
mov
cmc
enter
pusha
js
cmp
sbb
and
mov
fild
xchg
in
xlat
shl
cdq
push
popf
ss
add
xor
shr
dec
leave
ror
jmp
lock
dec
loopne
int
xchg
jmp
sbb
lods
add
mov
mov
inc
lahf
cmp
inc
push
xchg
dec
xchg
jp
push
add
mov
int
je
push
sub
cmp
xor
(bad)
test
push
mov
mov
dec
jecxz
std
adc
les
xor
cli
push
xchg
mov
add
(bad)
fsub
xor
les
mov
add
arpl
xchg
xchg
(bad)
jnp
jnp
imul
xchg
bound
clc
push
call
shl
leave
adc
xor
ret
mov
stos
mov
cs
rcl
loope
jb
daa
adc
scas
ret
into
sbb
pop
push
and
scas
test
pop
(bad)
mov
cld
pop
xchg
test
push
mov
mov
stos
and
iret
sub
rcr
adc
or
fs
jnp
aas
sbb
fnsave
ins
das
stos
push
mov
jl
cmp
in
popf
and
(bad)
mov
or
je
in
jae
cwde
sbb
push
loope
outs
mov
(bad)
mov
and
and
gs
(bad)
jmp
fistp
iret
pop
jne
or
or
outs
mov
pushf
sti
inc
inc
pop
outs
stc
cmp
(bad)
fnstsw
fld
call
push
jmp
add
shl
fnstenv
cmovge
call
jne
pop
leave
in
add
pop
sub
mov
xchg
inc
adc
js
(bad)
aaa
pop
arpl
jnp
arpl
leave
mov
xor
das
fldenv
jb
dec
cmp
push
nop
mov
jmp
mov
sub
fs
lods
or
pop
pop
out
sbb
xor
jae
pop
outs
fist
cli
int3
jle
jge
mov
movs
movs
movs
mov
mov
push
add
sbb
xlat
repnz
inc
retf
pop
daa
(bad)
out
mov
fcmovb
lock
cmp
fisttp
lods
les
scas
das
int
inc
in
xor
sbb
xor
pop
cwde
inc
std
mov
jmp
xchg
stc
adc
inc
inc
mov
aam
mov
es
pop
dec
(bad)
mov
dec
sub
dec
std
push
add
daa
add
int
imul
rcl
adc
cli
mov
outs
inc
xchg
and
ficom
sti
clc
into
fwait
jnp
add
mov
fisubr
mov
hlt
repz
je
mov
jecxz
div
sbb
(bad)
fadd
pop
mov
dec
aam
jno
xor
mov
sub
test
popf
cmp
jge
cmp
dec
dec
jne
(bad)
lock
out
div
inc
mov
ror
jmp
add
std
adc
imul
mov
add
push
aad
lods
jecxz
cwde
stos
call
loope
sbb
mov
or
xchg
push
mov
pop
add
jnp
mov
(bad)
add
std
cmp
sbb
pop
sub
add
jb
dec
pop
and
pusha
dec
stos
dec
repz
jb
scas
out
xor
cmp
loop
rcl
iret
lock
push
ret
pop
in
xchg
hlt
(bad)
icebp
push
add
nop
inc
push
sbb
cmp
inc
add
scas
xlat
ss
shld
imul
lods
ins
sbb
sbb
(bad)
lds
ins
mov
retf
sbb
sbb
sahf
dec
jmp
push
sbb
push
adc
daa
fsubr
adc
push
ss
sbb
jns
mov
xor
sbb
(bad)
mov
push
fs
in
pop
aaa
das
push
cmp
mov
int
lods
lea
into
faddp
or
iret
test
sti
into
(bad)
rol
(bad)
fs
add
xchg
popa
aam
pusha
out
out
pop
call
add
aam
pcmpeqw
data16
adc
sub
jmp
int
in
aam
mov
movs
xor
mov
shl
inc
push
cs
dec
fisubr
jnp
adc
inc
popa
pusha
bound
mov
or
add
mov
push
mov
mov
les
xchg
and
push
push
ins
xchg
xor
loop
fcmove
xchg
dec
call
(bad)
setp
push
sbb
add
into
cmp
bound
adc
mov
sub
call
jnp
hlt
cmp
mov
loopne
or
pop
dec
dec
push
popa
pop
leave
mov
call
xor
push
mov
out
add
inc
(bad)
push
pop
cmp
arpl
mov
into
ja
sbb
(bad)
xor
test
fdivr
call
and
xor
sbb
sbb
push
stc
pop
xchg
jbe
adc
cmp
jae
loopne
popf
dec
or
enter
mov
pop
xchg
xchg
outs
(bad)
jle
xchg
pop
popf
jmp
mov
inc
push
and
and
movs
and
inc
nop
(bad)
rol
jnp
fwait
ds
jb
test
lock
inc
inc
mov
(bad)
sbb
mov
sbb
jne
sub
enter
lds
sti
mov
mov
int
aam
or
cli
xor
lds
lahf
mov
ins
inc
out
xor
push
add
sbb
loop
fstp
loopne
scas
(bad)
dec
mov
sub
inc
push
test
adc
jne
aam
or
sbb
in
loopne
inc
fst
dec
push
(bad)
ss
ficom
jle
or
idiv
mov
adc
inc
fild
out
inc
jo
cmp
mov
push
(bad)
sahf
jg
xor
adc
imul
iret
push
ds
ret
sbb
mov
jbe
xchg
addr16
pop
fst
push
mov
jb
pop
or
or
mov
pop
cmp
jnp
xchg
sbb
dec
popa
inc
pusha
push
repz
fild
or
push
leave
push
cdq
push
out
inc
shl
sub
ret
les
fwait
cmp
mov
gs
imul
stc
inc
out
pop
xor
xchg
outs
inc
dec
retf
outs
mov
enter
push
inc
pop
or
mov
loopne
pop
jo
icebp
cmp
hlt
mov
cmp
dec
(bad)
and
fiadd
lods
jp
(bad)
loop
inc
lahf
mov
aam
scas
pop
add
mov
fs
jo
jmp
arpl
jbe
add
xor
adc
cmps
daa
hlt
dec
pop
xchg
lds
outs
pop
ficomp
mov
retf
cmc
mov
retf
in
jns
pop
enter
lahf
les
mov
sahf
sbb
mov
ins
popf
ror
or
imul
pcmpeqb
out
(bad)
jne
ss
sub
add
pop
pop
(bad)
or
rol
push
int3
dec
inc
fisubr
and
pop
sahf
or
int3
mov
js
aam
outs
inc
xor
cli
sbb
fcomi
push
jne
jle
out
or
inc
push
bound
icebp
push
pop
aam
inc
fidivr
jp
js
shl
out
sub
xchg
nop
cmp
jg
or
neg
(bad)
adc
add
fdivr
adc
dec
mov
ins
cmovs
fbld
jmp
pop
pushf
jecxz
mul
push
pop
xor
sti
pushf
fwait
push
and
stos
loopne
cwde
sbb
mov
hlt
inc
xchg
adc
mov
das
add
iret
xchg
shr
inc
xchg
lahf
hlt
out
ret
xchg
sar
lahf
neg
stos
mov
and
(bad)
jecxz
sub
out
lea
pop
or
adc
loopne
(bad)
mov
scas
(bad)
cwde
xchg
adc
mov
mov
outs
test
jnp
dec
push
movs
add
xchg
int
pop
fdivr
adc
add
and
adc
enter
ds
mov
xchg
jo
div
add
(bad)
jo
mov
mov
ss
mov
fisubr
sub
xchg
ds
and
shl
push
mov
push
xor
xchg
add
stc
repz
push
dec
into
movs
loop
dec
cs
loopne
inc
dec
je
ins
adc
cmps
rcr
push
outs
addr16
xor
les
ds
fwait
or
jo
pusha
xor
push
adc
outs
inc
sbb
test
adc
push
or
or
aaa
pop
outs
imul
mov
lea
lock
aam
mov
and
inc
inc
retf
add
dec
push
sti
sub
pop
sub
and
int
inc
fdivr
push
gs
sub
sub
mov
xchg
cmp
outs
jge
or
shl
mov
jae
jmp
jo
or
jecxz
inc
pushf
fs
jnp
(bad)
push
scas
inc
pop
mov
dec
xchg
in
mov
mov
jge
adc
unpckhps
or
bound
outs
stc
mov
sub
sbb
inc
hlt
clc
mov
mov
data16
and
xor
addr16
movs
gs
xchg
ds
arpl
xor
inc
outs
or
lds
mov
cs
pop
jmp
stos
data16
fld
popf
jl
pop
aad
jns
push
stos
mov
cmps
adc
lds
mov
loop
push
data16
push
(bad)
shl
loopne
adc
sti
sbb
sbb
mov
dec
mov
mov
or
jne
scas
enter
xchg
imul
in
ja
repz
cmp
ja
mov
sbb
sti
inc
mov
inc
lods
mov
enter
push
repz
fist
xlat
push
xor
push
fs
push
ja
or
call
sub
jbe
icebp
xchg
sar
pop
jno
jle
add
cmps
adc
aas
movs
or
movs
mov
push
inc
fst
dec
inc
dec
shl
ins
pop
aas
ffree
lock
push
mov
cwde
dec
stos
sbb
xchg
push
inc
jb
movs
int
aaa
sub
adc
sbb
gs
pop
imul
sbb
xor
push
outs
popf
mov
or
push
stc
jns
(bad)
xor
shl
add
imul
push
ror
pushf
scas
xchg
int3
xor
adc
sbb
push
shl
arpl
mov
inc
push
aad
test
inc
dec
mov
(bad)
outs
int
fisub
jo
cmp
add
fnstsw
outs
inc
aad
and
(bad)
dec
ds
je
aas
mov
jecxz
cmps
mov
retf
xchg
cmp
sbb
add
sub
div
(bad)
adc
push
test
adc
jle
out
and
imul
add
mov
xor
or
cli
stos
xchg
pop
mov
shl
aam
ins
xchg
sbb
xchg
aas
and
out
stc
or
sub
shl
fidivr
repnz
or
cmp
inc
add
fwait
cmp
push
push
cmp
dec
dec
jb
mov
jmp
rol
sbb
mov
mov
pop
call
pop
xor
pop
enter
push
cwde
pop
call
push
outs
pop
fcmovne
mov
add
mov
stos
adc
mov
sbb
in
cs
and
adc
out
pcmpgtb
pop
stc
repz
jmp
movs
inc
xchg
ins
test
lods
xor
icebp
mov
dec
jge
mov
imul
xchg
xchg
stos
mov
sub
add
xlat
test
push
ins
inc
adc
add
xor
fisubr
hlt
cmp
mov
xor
nop
push
lods
jmp
sub
dec
adc
xlat
or
jg
cmps
lock
cmp
jecxz
cmps
stos
sbb
push
int3
cld
rcl
mov
cmp
push
fxch
adc
or
shl
sbb
adc
icebp
jne
iret
arpl
scas
and
inc
outs
in
dec
shr
popf
dec
mov
fwait
mov
and
stos
push
xor
xchg
push
out
daa
cmps
adc
add
fstp
lahf
fisub
imul
xchg
pop
push
lea
jae
scas
test
enter
fwait
retf
xchg
pop
into
out
mov
stos
push
dec
arpl
bound
lock
mov
test
push
fcmovu
cmps
xchg
out
mov
pop
push
data16
pop
mov
mov
call
sbb
add
(bad)
xlat
or
ins
mov
mov
push
cmc
push
sub
dec
adc
inc
push
aam
jno
push
push
adc
aas
fidiv
mov
mov
lahf
or
retf
sahf
shl
iret
fsubr
leave
adc
jmp
icebp
ins
cmps
cld
lahf
jo
jl
int
inc
xor
test
ss
xchg
add
xchg
add
xor
xchg
scas
mov
call
cdq
loope
rcr
lods
mov
outs
js
leave
scas
dec
inc
mov
xchg
inc
out
icebp
lods
movs
pop
mov
les
mov
setg
lock
sub
sub
sar
mov
fwait
jmp
adc
cmp
sub
sbb
xor
push
lods
inc
adc
mov
mov
fisttp
out
push
aad
cmp
das
enter
sub
jns
(bad)
and
arpl
jns
mov
pushf
test
lods
cmp
mov
cmp
mov
out
adc
adc
xchg
cmps
fsub
adc
cmp
xor
cmc
loope
push
jp
data16
sbb
push
push
mov
jmp
cmps
jmp
mov
lods
movs
dec
xchg
inc
mov
pop
sbb
inc
or
test
mov
mov
xor
neg
and
in
shl
ds
imul
retf
lds
or
adc
xchg
and
mov
jmp
xor
jbe
and
cmp
inc
(bad)
iret
push
stos
pop
mov
fist
jmp
dec
pop
bound
stos
ret
dec
cli
jo
mov
and
xchg
in
jl
aas
jg
jnp
lea
dec
(bad)
shr
les
in
test
lds
add
add
rsqrtps
enter
js
imul
xchg
fadd
hlt
cmps
lahf
pop
lock
jmp
pop
shl
mov
inc
jno
(bad)
push
loope
cmps
mov
dec
in
or
bound
xchg
cld
es
inc
or
adc
shr
mov
repz
das
inc
inc
pushf
push
fnstcw
sbb
jge
aad
xor
sbb
push
in
popf
cmp
push
aaa
popf
push
pop
pop
mov
add
cmp
out
cmp
out
push
dec
das
clc
add
jnp
je
mov
pop
in
cmp
xchg
pop
test
sub
es
out
arpl
xchg
shl
daa
xor
or
mul
xor
pushf
rcr
push
push
mov
(bad)
and
and
das
xchg
xor
test
and
xchg
(bad)
iret
adc
or
cmp
sbb
inc
out
into
in
inc
cmp
imul
fmul
fiadd
into
adc
fild
inc
jns
push
push
xor
pop
retf
or
pop
ja
push
(bad)
sub
push
jp
or
pop
fcomp
test
adc
mov
shl
clc
mov
dec
ret
mov
xchg
cs
out
sbb
imul
xor
jp
sub
clc
jb
lahf
push
idiv
scas
xor
sbb
sahf
test
idiv
inc
jns
mov
dec
sbb
stos
fwait
cmps
dec
mov
jbe
jp
cmp
sub
addr16
cmp
xchg
and
imul
outs
in
inc
push
daa
cld
cmp
mov
dec
lods
or
lea
inc
in
ja
sub
ss
bound
pop
adc
sbb
jecxz
mov
pop
xchg
movs
adc
mov
push
fldcw
mov
cmps
xor
fmul
rol
lods
push
outs
xor
dec
sub
es
mov
cmps
dec
adc
call
das
jo
sub
inc
outs
add
scas
add
inc
add
(bad)
aas
ins
mov
and
es
dec
push
jg
xchg
jg
sbb
add
into
loopne
jno
retf
xchg
mov
jae
out
mov
mov
rol
gs
out
mov
sbb
dec
adc
mov
jne
cmp
inc
and
mov
jne
scas
iret
imul
fsubr
lahf
sbb
mov
repz
(bad)
xor
out
pusha
xchg
in
sub
sub
outs
pop
xlat
pop
daa
xor
cmp
sbb
in
nop
or
mov
pop
mov
sahf
loope
loopne
outs
test
cmp
aaa
adc
aam
pop
pop
pop
sub
lods
xor
xlat
rcl
mov
das
cdq
sub
in
adc
push
xchg
scas
ins
add
or
arpl
or
pop
mov
jl
mov
mov
mov
gs
or
rol
dec
iret
rcr
loope
or
(bad)
push
xchg
pushf
sahf
dec
dec
push
test
ror
mov
aas
daa
mov
push
loop
or
mov
sub
sub
movs
cwde
test
and
cmp
inc
in
mov
cmp
in
and
lods
mov
cs
or
iret
sub
retf
outs
dec
mov
(bad)
(bad)
xlat
mov
fild
sbb
fdivr
rep
xchg
sub
fist
and
test
mov
mov
sbb
pop
mov
dec
sub
add
sub
xchg
adc
dec
mov
jne
cs
bound
add
aad
jbe
outs
cmp
aaa
dec
mov
mov
mov
push
dec
mov
sub
add
popf
or
data16
adc
jnp
mov
rol
pop
inc
shr
lea
sbb
and
pop
jbe
xchg
arpl
mov
(bad)
retf
sti
jmp
mov
clc
lahf
jl
ret
in
lea
enter
xchg
cmp
aas
mov
mov
jns
ror
retf
mov
shl
mov
ret
loop
or
fst
sbb
inc
int
ds
fnstcw
sub
or
jne
add
gs
xor
aas
adc
mov
mov
fimul
lea
jns
push
sbb
sbb
add
(bad)
adc
push
mov
mov
out
retf
je
(bad)
xor
mov
vcmpss
repnz
pusha
jle
test
mov
mov
pop
mov
sbb
das
popf
mov
xor
push
std
js
int
sbb
(bad)
fs
pop
sbb
mov
aas
mov
jne
cmp
sbb
mov
xor
cmp
inc
mov
mov
xor
xchg
mov
nop
xchg
xor
mov
shl
imul
mov
std
xchg
addr16
mov
stos
nop
lods
push
xor
fld
fcmovne
cdq
sbb
inc
mov
cwde
retf
test
sub
stos
mov
leave
nop
dec
fisub
fldcw
hlt
sub
fsubr
inc
dec
pop
rol
inc
fstp
js
and
pop
jb
inc
mov
je
out
int3
mov
mov
or
mov
popf
repnz
sub
push
pop
jae
push
(bad)
mov
or
mov
pop
jmp
xor
dec
ret
stos
dec
cmps
mov
jno
xor
loop
(bad)
cmps
dec
fiadd
xor
inc
sub
pop
rcl
mov
into
inc
jp
lods
push
pusha
pop
cdq
or
mov
bt
jmp
push
or
sub
sub
add
imul
push
xor
scas
not
xchg
push
(bad)
and
cmc
daa
pop
repnz
ret
arpl
dec
movs
mov
fcmovne
jmp
fsubrp
mov
and
or
sar
inc
out
push
in
loop
lock
pop
adc
test
pop
idiv
push
(bad)
icebp
sbb
out
fadd
push
fistp
cdq
xor
movs
lock
and
out
xchg
lahf
fisub
add
es
mov
outs
shr
mov
mov
mov
or
add
add
retf
test
xor
hlt
pop
mov
pop
leave
mov
in
js
xor
out
shl
mov
jbe
cmp
sahf
sbb
dec
adc
je
jns
out
mov
xchg
test
cmps
lds
cmps
mov
bound
adc
dec
shl
cmp
pop
inc
ss
or
loopne
scas
mov
int
mov
clc
shl
fnsave
or
das
mov
nop
idiv
sbb
retf
push
cli
push
cwde
cmp
ins
(bad)
out
mov
push
movs
push
(bad)
xor
mov
push
xor
sar
sar
lods
pop
xchg
push
ds
and
adc
cmp
retf
mov
inc
xor
sti
and
enter
or
repnz
out
hlt
std
sahf
imul
and
dec
sbb
gs
lods
fucomi
fdiv
mov
cmc
sub
xchg
data16
pop
sbb
cli
lds
in
and
loope
(bad)
or
mov
push
adc
sub
adc
and
lds
xor
cmp
idiv
sub
not
dec
rol
cmp
xor
jle
adc
add
das
call
idiv
pop
or
jnp
lea
cmp
inc
push
jbe
fcomip
test
fcomi
iret
add
or
pop
rcr
sahf
(bad)
ret
sub
out
sbb
retf
pop
add
clc
aad
inc
xchg
adc
mov
and
fst
push
gs
test
or
add
out
xor
mov
cmps
and
push
jae
dec
cmp
push
push
jmp
stos
add
cmp
jl
retf
mov
ret
pushf
addr16
cli
pop
cmp
pop
loopne
or
data16
imul
xor
pop
lock
ror
shl
and
mov
adc
lahf
fild
add
pop
call
std
cmp
xchg
or
test
xchg
loop
push
mov
and
mov
fsubr
jne
lahf
xor
sub
mov
shl
in
sbb
les
mov
jb
xor
stc
pop
(bad)
mov
jns
cmps
outs
cmp
mov
pop
mov
std
and
call
rcl
call
outs
mov
movs
imul
and
mov
(bad)
in
(bad)
sbb
shl
stos
xlat
fld
xchg
xchg
jae
xchg
(bad)
cli
push
jecxz
aad
pop
nop
mov
add
out
push
mov
dec
das
ss
popf
and
nop
hlt
push
jp
sub
fdiv
inc
inc
fwait
adc
mov
(bad)
mov
add
xchg
lea
mov
inc
push
pop
add
ret
adc
mov
in
(bad)
push
ins
rcl
scas
xchg
shr
add
xor
and
jns
mov
or
es
bound
out
bound
into
push
int
rcl
inc
inc
and
fstp
cmp
dec
cmp
or
fadd
imul
dec
sub
push
fst
mov
dec
fidiv
add
es
sbb
sahf
stc
fisttp
pusha
inc
pop
xchg
data16
push
repz
jnp
jne
imul
repnz
fsub
cs
xor
fs
sbb
jns
cmp
dec
and
ins
(bad)
xchg
sar
inc
test
adc
fbld
test
loopne
xor
test
out
test
ja
mov
sahf
loope
call
das
and
or
mov
jb
pop
push
(bad)
call
dec
or
xor
xchg
retf
push
test
pusha
dec
icebp
xchg
jge
rcl
sbb
addr16
nop
sbb
add
or
mov
fldcw
sbb
jno
push
nop
sub
xlat
dec
sub
pop
lds
lea
shl
out
std
sub
stos
dec
xor
(bad)
lods
mov
(bad)
retf
sub
cmp
xchg
repnz
and
repz
nop
mov
(bad)
stos
push
out
jb
loop
push
adc
xchg
retf
mov
gs
test
pop
int3
sub
sbb
fwait
cmp
pop
mov
mov
daa
and
shl
jmp
(bad)
icebp
dec
arpl
pop
icebp
ret
or
sbb
add
cmp
loop
mov
push
inc
shl
mov
adc
adc
adc
jbe
ss
loop
aaa
addr16
push
lods
sbb
arpl
jp
add
rep
push
call
fist
dec
sub
mov
iret
jmp
inc
lds
cmp
xchg
or
(bad)
mov
mov
aad
dec
xchg
lods
call
cld
icebp
fst
xor
jp
ficom
mov
mov
pop
test
cmps
retf
mov
add
loopne
jns
lock
call
jae
pushf
je
(bad)
out
inc
fisub
sbb
fdiv
dec
pop
fnsetpm(287
das
ss
mov
arpl
retf
pop
xchg
lods
push
test
jmp
mov
enter
loop
cmps
or
mov
cmp
in
aad
test
fld
inc
jmp
add
ss
fldenv
pop
mov
sub
ss
jmp
adc
mov
sbb
xchg
mov
addr16
enter
call
cdq
test
or
mul
sub
pop
and
retf
sub
mov
xchg
pop
jae
sbb
hlt
add
dec
dec
adc
imul
and
pusha
(bad)
outs
mov
retf
fisttp
lahf
pop
pop
shr
jo
dec
cmp
jmp
imul
fild
sbb
adc
mov
and
xchg
fwait
inc
stc
xor
mov
loope
movs
lahf
shl
inc
jmp
cld
fnstsw
pop
jno
and
and
sbb
mov
daa
in
sub
mov
in
ins
imul
jp
jg
inc
fsubr
or
sbb
rcr
and
rcl
xchg
xchg
add
cmp
cmp
inc
dec
add
test
aas
mov
sbb
mov
push
sub
stc
xor
xchg
jns
push
add
cmp
adc
mov
movlps
cmp
mov
fstp
push
pop
es
les
push
dec
cs
jp
ins
sub
inc
cmp
(bad)
push
(bad)
push
and
cdq
fist
in
lods
sbb
repz
mov
jge
stc
and
loopne
pop
xchg
sub
(bad)
ficomp
bound
xchg
cdq
sahf
push
mov
ins
pop
pusha
stc
pop
and
dec
mov
lock
push
mov
into
cmp
adc
jecxz
fnsave
cmp
jle
push
xor
jle
stc
jmp
push
cmc
retf
xchg
shr
aam
fidiv
inc
loopne
sti
jns
adc
js
gs
mov
pushf
jnp
xlat
cmp
arpl
adc
adc
push
push
mov
sti
test
mov
adc
imul
jb
xchg
jmp
imul
ret
pushf
imul
push
adc
test
jns
retf
iret
mov
cld
cmc
xor
and
and
cs
push
push
sbb
(bad)
out
push
daa
mov
add
add
add
call
mov
pop
test
test
inc
sbb
sub
jno
jbe
popf
sbb
inc
and
(bad)
rol
push
sub
push
daa
dec
pop
dec
pop
outs
fisttp
mov
or
or
jae
mov
int3
loope
cmp
jns
xor
fs
ror
mov
ficomp
mov
mov
xchg
mov
ja
sbb
cwde
xor
cmc
pushf
pop
lahf
jg
test
mov
mov
push
mov
push
mov
and
add
cmp
push
inc
dec
les
fist
inc
test
inc
pop
adc
mov
jbe
jecxz
out
dec
push
sbb
mov
add
cmps
push
stos
out
loop
retf
mov
lods
sbb
test
movs
fidiv
push
jmp
cmp
call
dec
inc
lods
or
out
pop
imul
les
rcl
outs
adc
inc
repz
lds
inc
retf
pusha
mov
fisubr
into
xor
cli
mov
xchg
mov
dec
push
imul
jno
cmp
je
es
hlt
ss
mov
adc
(bad)
mov
int
mov
xor
xchg
mov
js
dec
mov
icebp
pop
mov
(bad)
pop
or
or
cdq
dec
jle
dec
loop
inc
mov
push
mov
popa
call
hlt
call
sbb
shl
es
and
(bad)
retf
retf
xor
cmp
rol
out
sbb
pushw
cwde
test
xchg
nop
fwait
div
xchg
xchg
std
es
in
jno
inc
jle
mov
push
cmp
mov
mov
setnp
int3
mov
loope
je
dec
and
retf
aas
sub
pop
jne
push
sub
retf
dec
in
cmc
adc
sbb
sub
call
lock
sbb
sub
xchg
add
mov
mov
pop
sub
imul
loop
pop
into
xor
mov
daa
adc
int3
aaa
loope
ficom
mov
and
pusha
sbb
arpl
mov
pop
sub
leave
mov
aad
mov
jb
sbb
mov
pop
mov
loopne
iret
(bad)
test
out
add
and
or
xchg
sub
fcom
adc
push
sahf
je
mov
add
movs
sar
xchg
jae
rol
inc
mov
adc
jle
dec
js
rcr
pop
in
mov
pop
fnstsw
dec
test
cmc
jg
and
jmp
lods
inc
jmp
cmc
lock
xor
push
mov
cmc
test
jb
jmp
jbe
push
adc
(bad)
ror
retf
bound
dec
test
(bad)
cmc
mov
push
or
cdq
popa
jno
mov
mov
pushw
test
call
movs
cli
push
clc
loopne
es
add
add
sbb
(bad)
mov
jns
repnz
das
test
jne
cli
icebp
fwait
ror
cmp
js
mov
int
mov
scas
call
inc
sbb
inc
pop
fiadd
pop
mov
out
bound
add
mov
test
push
mov
pop
mov
mov
shl
iret
inc
inc
dec
pop
jo
push
cmp
sbb
call
scas
lock
mov
lea
mov
sti
out
cmp
xor
push
and
jp
std
xor
imul
lods
outs
retf
sbb
or
push
push
stos
mov
popf
cmp
pushf
scas
(bad)
imul
pop
fnstcw
dec
jnp
add
mov
mov
or
adc
jb
pop
mov
xchg
cmps
pop
xor
mov
shl
(bad)
sub
mov
xchg
test
mov
mov
xchg
bound
mov
add
aaa
es
mov
or
sub
sub
push
mov
xor
push
clc
fmulp
or
test
dec
in
leave
loope
aaa
jmp
push
fcmovne
jns
aas
mov
jl
pop
or
mov
inc
aas
hlt
ins
fld
stc
aas
xor
std
jbe
in
add
mov
(bad)
pop
xchg
xchg
in
sti
int
inc
mov
or
xchg
sub
inc
sbb
into
popf
je
retf
jo
mov
mov
push
push
hlt
jnp
test
pop
or
out
sar
fdiv
in
test
adc
push
loop
jge
rcr
dec
or
addr16
aaa
push
fwait
jle
(bad)
hlt
push
(bad)
xchg
fdivr
pop
test
cmc
aas
pushf
iret
and
push
aas
dec
clc
out
jp
call
aas
cmps
mov
call
pop
es
clc
or
xor
push
fdivr
xor
add
push
(bad)
fist
mov
push
push
ret
std
adc
call
adc
mov
add
imul
test
or
scas
push
outs
ror
repnz
scas
mov
dec
and
and
inc
test
xchg
test
add
into
leave
mov
mov
stos
add
pusha
push
es
faddp
and
sub
dec
bound
loop
jnp
in
adc
push
sbb
aam
pop
push
hlt
jmp
mov
rol
loopne
mov
sbb
stos
lock
into
jbe
sbb
js
ds
sub
mul
out
and
and
jne
dec
popa
out
adc
cs
call
rcr
pop
jmp
push
sub
sub
adc
shl
scas
(bad)
aam
inc
ficomp
std
xchg
add
pop
xlat
cmp
iret
pushf
int
repz
xchg
jae
or
inc
fwait
ins
mov
cmp
pop
cmp
jmp
stos
cs
lods
mov
or
pop
les
mov
ss
cdq
dec
sub
pop
rcr
repz
cld
call
xor
cmps
push
in
xchg
push
in
xchg
jnp
pop
dec
jecxz
push
xor
xchg
pop
les
js
sub
adc
sbb
jecxz
cmp
rcl
add
jns
repz
in
push
push
jmp
push
fsubr
adc
jecxz
pop
mov
xlat
ret
mov
or
popa
cmps
into
mov
sub
dec
mov
movs
inc
ss
ins
xchg
mov
outs
ret
jb
or
loop
and
push
jmp
pushf
mul
xor
loopne
adc
xchg
lds
add
dec
mov
inc
mov
dec
in
mov
aam
mov
mov
pop
loop
cmps
scas
lods
ss
iret
inc
shl
outs
mov
pusha
sub
(bad)
(bad)
xchg
dec
ror
fdiv
mov
or
mov
iret
push
lods
dec
inc
int
or
and
and
mov
mov
jno
cdq
faddp
mov
add
imul
push
xchg
jecxz
push
push
inc
jmp
pop
shr
adc
xchg
cmp
pop
ror
retf
sti
jno
popa
je
xor
cli
mov
fstp
and
push
hlt
jg
(bad)
ror
cmp
adc
test
mov
pusha
mov
sub
jp
sbb
repz
(bad)
int
inc
jae
lods
xchg
push
repz
imul
mov
or
stos
(bad)
sbb
mov
cs
lods
xor
fdivr
and
cli
test
push
inc
mov
xor
pop
(bad)
jb
pushf
popf
dec
mov
mov
xor
in
data16
sbb
or
hlt
popf
or
or
or
xlat
add
movs
jecxz
call
hlt
dec
imul
dec
adc
jle
jbe
gs
dec
jl
mov
(bad)
push
ins
cmp
jb
leave
inc
cmp
ret
sbb
fadd
inc
outs
iret
cdq
(bad)
cwde
or
int3
arpl
sbb
js
xchg
scas
xor
mov
jno
jnp
loope
lahf
adc
xor
scas
push
cmp
aad
imul
xor
mov
adc
shr
loop
and
loopne
test
lahf
mov
pop
sub
gs
shr
ss
shr
xor
ja
aas
push
imul
jge
add
push
(bad)
push
mov
mov
test
call
shl
retf
aas
jmp
hlt
xor
popa
mov
jl
push
cld
mov
mov
and
imul
lahf
dec
dec
fs
es
(bad)
outs
(bad)
movs
fwait
sub
fnstenv
xchg
mov
fsub
and
push
or
ins
loopne
xchg
fldenv
jo
mov
jge
adc
cmp
repnz
dec
sahf
mov
shl
cmp
mov
or
in
fucomi
pushf
loop
fstp
test
jo
stos
fwait
outs
imul
mov
daa
xor
adc
(bad)
popa
loopne
pop
adc
(bad)
retf
jno
inc
pushf
in
sub
bound
and
fmul
mov
sbb
adc
inc
sbb
sbb
js
loopne
mov
aaa
leave
push
data16
nop
sub
repnz
jg
push
xor
push
push
sub
mov
ror
adc
pop
sub
pusha
in
in
(bad)
cmp
mov
xor
dec
mov
dec
cwde
bound
fwait
add
jl
aad
arpl
dec
scas
xor
es
pop
or
mov
adc
mov
lock
mov
lods
sbb
addr16
rcl
adc
fimul
xor
je
push
jbe
push
inc
cmps
iret
xchg
push
add
movlps
sbb
adc
push
sti
fsubr
mov
cmp
pop
ja
ret
cmp
std
dec
sbb
mov
cdq
push
(bad)
pop
pop
mov
arpl
pop
(bad)
sbb
jo
dec
mov
fstp
shr
inc
add
push
dec
mov
adc
pop
mov
adc
sub
loop
sbb
jo
outs
add
fcomp
mov
mov
iret
test
std
out
into
adc
push
dec
movs
push
xchg
push
stos
cmp
add
cli
inc
stos
ror
or
(bad)
and
in
loope
sti
sub
adc
test
xlat
mov
sub
cmps
sti
cmps
add
js
std
lea
and
std
cdq
dec
shl
jbe
dec
adc
jl
push
dec
mov
adc
sub
inc
test
jne
retf
sbb
jb
push
cs
dec
stos
test
push
jp
fs
in
mov
les
mov
fbld
repz
mov
rcl
movs
sub
cmp
int
out
pop
dec
test
inc
sbb
mov
clc
outs
fsub
rcl
jle
and
and
xchg
enter
xchg
ret
xor
add
imul
out
xor
adc
dec
dec
sub
sbb
dec
aaa
jmp
cmp
jnp
adc
imul
xchg
and
sahf
int
jbe
pop
push
mov
les
retf
jmp
cmp
jo
ret
inc
cld
test
pop
mov
call
pop
mov
add
cmp
jno
cld
loop
loope
popf
push
sub
xchg
mov
pop
shl
push
pusha
aad
pop
jecxz
jne
mov
rcl
js
pop
fcmovnb
ret
mov
test
out
movs
inc
and
push
push
sub
sub
jbe
into
jo
mov
sbb
int
cld
dec
push
mov
cmp
clc
cmps
jg
cs
test
fwait
and
or
jno
or
mov
loope
movs
and
fincstp
lea
jb
sbb
or
shl
mov
add
dec
out
ja
imul
xchg
inc
and
repz
ss
inc
push
pop
mov
push
xchg
aad
neg
mov
mov
lea
fbld
xchg
xor
lea
mov
out
imul
(bad)
fst
aam
shl
scas
(bad)
cmp
ret
mov
cli
imul
leave
inc
jmp
sbb
loopne
les
dec
clc
dec
add
or
aaa
mov
mov
data16
in
xor
and
fwait
jmp
fucomi
and
inc
je
fdivr
add
pushf
gs
out
icebp
(bad)
lock
pop
push
jnp
push
ins
pop
jmp
jp
es
aam
mov
test
xchg
mov
jl
sub
outs
dec
and
or
icebp
xchg
call
mov
cwde
aas
or
add
outs
pop
(bad)
in
cmps
jp
aad
mov
loop
inc
ins
sub
ret
cwde
int
jmp
jg
jmp
shr
jns
add
xchg
dec
sbb
jnp
xchg
pop
pop
loop
aaa
mov
aam
cli
dec
fcmovb
sahf
cmp
xchg
inc
xor
sahf
push
loope
ror
xchg
stos
lds
fistp
fcmove
sbb
nop
pop
mov
mov
fldenv
lahf
adc
pop
and
push
out
(bad)
int3
sti
mov
fld
push
dec
mov
and
test
scas
dec
mov
xchg
push
push
push
sub
pop
ja
cmp
loopne
sub
jg
push
fcomp
cmc
ret
add
push
push
mov
xchg
inc
bound
sub
in
xchg
sub
outs
sub
sbb
popa
pop
je
in
xor
sar
ds
retf
lods
mov
mov
xor
shr
aas
nop
aam
in
push
jnp
cmps
pmaddwd
div
es
stos
push
hlt
dec
xchg
dec
inc
sub
mov
outs
pop
inc
mov
push
mov
mov
jl
outs
push
icebp
(bad)
bound
popa
iret
movs
js
inc
jl
adc
add
loopne
shr
movs
mov
(bad)
dec
call
mov
pusha
jbe
(bad)
mov
and
ret
cmp
leave
(bad)
rcr
enter
hlt
adc
add
retf
push
and
mov
and
je
std
mov
nop
test
adc
pop
jo
div
sub
pop
ror
xchg
mov
nop
(bad)
scas
adc
int3
cmp
mov
sub
adc
cld
hlt
sbb
pushf
cmp
les
sub
xchg
jo
inc
mov
sbb
sahf
push
xchg
mov
xor
int
mov
xchg
add
and
imul
sub
jge
clc
push
xor
aam
jno
mov
lods
sub
jmp
pop
mov
mov
(bad)
jmp
retf
je
imul
(bad)
test
adc
jecxz
mov
fidiv
stos
movs
pop
in
scas
int
sub
inc
and
outs
jp
add
xchg
sti
xchg
daa
mov
les
mov
mov
mov
mov
les
and
(bad)
fcomp
sub
and
aad
xchg
pop
(bad)
loope
arpl
or
shl
cmp
mov
mov
jmp
mov
ins
(bad)
std
scas
mov
in
dec
jmp
and
into
push
xchg
cld
and
jb
and
inc
ss
mov
lods
xchg
jmp
pop
in
cld
pop
fild
dec
hlt
mov
das
add
sub
and
sahf
push
mov
nop
mov
int
data16
fisub
aas
xor
bnd
push
jp
xor
inc
lods
inc
bound
inc
mov
imul
mov
push
fistp
add
fdiv
dec
(bad)
pop
fs
cdq
ins
or
and
adc
sbb
data16
sub
out
scas
or
movs
mov
or
push
lods
out
shr
out
sub
xor
rol
scas
xchg
xor
mov
test
add
leave
xor
inc
cmp
or
or
imul
sbb
xlat
fdivrp
xor
sbb
mov
mov
mov
cmc
sub
mov
ja
int
enter
xchg
xor
mov
jmp
std
in
repnz
push
cdq
pop
fdiv
scas
stc
adc
movs
mov
aas
cmps
jo
cmp
jo
fadd
retf
imul
jnp
cdq
stc
test
rcl
push
movs
add
mov
adc
js
mov
bound
enter
mov
mov
inc
dec
dec
xchg
or
jge
sbb
popf
fistp
sub
mov
mov
mov
test
fisub
clc
xchg
jns
inc
sahf
cdq
ins
xchg
ror
mov
and
cli
cwde
dec
mov
push
cmp
mov
inc
adc
loopne
inc
out
mov
or
data16
xor
mov
(bad)
ret
cmc
push
xchg
dec
push
pop
sbb
or
rcr
jl
mov
or
dec
pop
ss
popf
punpckhbw
sub
push
jbe
scas
or
pop
retf
out
mov
mov
rcr
sbb
push
iret
loopne
cmc
adc
ds
enter
cdq
xor
push
mul
mov
or
sbb
and
test
push
pop
mov
xor
push
out
push
push
xor
push
cmp
cli
xor
cmp
sub
xlat
or
out
add
mov
sbb
loope
push
dec
sbb
cmp
test
mov
inc
sar
stos
inc
add
mov
or
inc
adc
mov
cmp
cmps
mov
ins
aaa
std
jno
sub
les
(bad)
push
cmps
mov
jb
push
(bad)
shl
inc
cmps
mov
scas
mov
rcl
mov
mov
or
mov
mov
or
lahf
(bad)
ja
in
sbb
adc
std
jo
repz
mov
cmps
fcom
push
and
cmp
pop
addr16
xor
pop
cmc
fldenv
xchg
mov
and
push
mov
dec
push
sbb
push
jno
fsub
mov
into
xchg
scas
lfence
xchg
movs
add
hlt
(bad)
and
sar
icebp
aam
loopne
ss
and
add
fild
mov
fs
push
in
push
add
dec
stc
mov
cmp
mov
sbb
int
push
icebp
adc
jb
dec
dec
mov
cmp
sti
stos
test
out
push
retf
scas
dec
ret
push
retf
in
pop
adc
inc
mov
xor
mov
inc
xor
daa
push
test
sub
ds
outs
imul
test
dec
mov
rcl
dec
int
cmps
dec
mov
inc
jmp
add
push
and
sub
ins
add
(bad)
sub
add
pop
xchg
popa
rcr
xchg
push
mov
jnp
ds
inc
fwait
cli
cmp
int
loopne
xor
and
call
sub
int3
add
out
(bad)
loop
dec
pop
push
fwait
push
inc
xchg
pop
unpcklps
inc
jmp
lods
pop
in
dec
mov
jg
pop
cdq
mov
sub
fistp
inc
ins
pusha
add
or
xchg
sar
fsubr
jnp
mov
mov
stos
loope
sar
lea
pop
xchg
jp
and
cmp
nop
out
add
(bad)
jecxz
fnsave
call
mov
popf
xchg
push
or
mov
outs
sar
and
jmp
daa
dec
adc
mov
jmp
add
inc
xor
and
dec
cmp
in
inc
int3
das
or
push
fs
cmp
cmp
rcr
adc
das
fsubrp
popf
int3
jecxz
test
mul
or
sub
cmc
inc
call
fist
popa
mov
daa
inc
cs
je
xor
fisub
push
inc
pop
or
jle
inc
jno
call
xor
push
ds
and
jbe
(bad)
mov
xchg
pusha
cmp
or
sahf
out
adc
mov
std
lea
cs
shr
dec
into
cwde
mov
aam
pop
sub
add
retf
imul
js
aas
test
enter
push
add
push
add
(bad)
adc
jo
xlat
aaa
inc
pop
pop
dec
sar
mov
cmp
mov
rcl
jno
ficom
and
cmc
int3
sbb
adc
or
arpl
dec
mov
xor
sub
cmp
push
imul
cli
dec
cmps
ror
fnstcw
data16
aas
pop
(bad)
cmp
mov
jne
(bad)
ss
rcr
int
push
xor
xchg
nop
dec
mov
fisttp
movs
xor
push
xchg
xlat
scas
sahf
(bad)
ins
sub
xor
xchg
xchg
mov
xchg
mov
jmp
adc
sbb
add
cmp
movs
inc
shl
push
aaa
inc
lods
mov
xchg
xor
mov
es
loopne
shl
int3
cmp
stc
pop
sbb
adc
dec
(bad)
(bad)
mov
sub
xchg
(bad)
mov
call
cdq
repnz
or
ret
ds
bound
in
shl
(bad)
movs
add
mov
retf
push
push
inc
dec
mov
jo
push
cmp
jecxz
stos
popa
mov
icebp
push
hlt
push
add
mov
ret
ds
aad
mov
and
mov
fiadd
fwait
pop
pusha
int
ror
adc
add
jle
ss
ja
test
xchg
fs
jge
mov
dec
fmulp
mov
xchg
rcr
ds
adc
in
sbb
dec
cli
ret
sub
mov
mov
inc
fidivr
sub
xchg
cmps
retf
and
pop
cdq
sbb
or
pop
inc
stos
ins
xchg
sbb
sub
std
cli
out
mov
adc
push
xchg
or
into
ret
in
dec
mov
inc
mov
(bad)
cwde
and
push
dec
in
and
push
int3
push
dec
pop
rcr
repnz
jne
jmp
loope
js
sub
stos
mov
sub
mov
dec
sbb
out
enter
shl
bound
addr16
fs
push
fcom
aad
mov
jmp
add
push
ror
add
xchg
sbb
add
inc
xchg
scas
and
pushf
ret
sbb
cdq
inc
(bad)
fnstcw
call
fs
hlt
cmp
jl
call
xlat
repz
jecxz
out
xchg
(bad)
xor
ja
mov
jne
jmp
jmp
inc
jecxz
jno
or
retf
jb
xlat
mov
mov
or
arpl
jle
es
cmp
leave
and
es
std
les
or
movs
stos
aad
pop
xchg
call
outs
mov
stc
inc
popf
or
pushf
pop
repnz
mov
mov
addr16
push
outs
adc
movs
call
je
sub
sti
fiadd
mov
inc
test
cs
ins
add
cmp
and
loop
cmps
mov
jns
jmp
aad
or
pop
bound
mov
sti
jmp
lods
stos
dec
int3
adc
fs
pop
int
movs
int
adc
pop
fdivr
ret
inc
out
inc
imul
pusha
outs
fisttp
gs
inc
xor
(bad)
std
mov
(bad)
xchg
sar
xchg
adc
(bad)
mov
pop
sub
std
dec
call
mov
cli
jecxz
mov
lea
or
(bad)
xchg
push
aam
push
mov
cmp
addr16
movs
cmps
add
aam
cmp
cmps
loop
retf
hlt
mov
imul
and
test
shr
push
outs
mov
jno
cmp
test
les
aaa
mov
scas
mov
into
push
pop
stos
mov
jl
test
call
gs
or
xchg
iret
xchg
adc
lods
xchg
cmps
sub
(bad)
cmp
call
jne
xchg
ret
or
iret
inc
popf
or
cld
int3
cli
xchg
and
fnstenv
sbb
aaa
rcr
adc
ret
push
adc
clc
push
stos
jle
mov
xchg
mov
sub
ud0
xchg
das
xchg
add
mov
push
das
xlat
xor
pop
mov
xchg
out
cmps
jg
(bad)
rcr
test
mov
arpl
sub
and
and
jg
adc
pusha
btr
stos
cmp
cmp
jecxz
dec
arpl
pop
mov
pushf
jle
aas
dec
das
jns
adc
outs
adc
mov
std
icebp
lea
sbb
adc
scas
or
(bad)
dec
push
jo
pushf
mov
xchg
call
int
mov
push
adc
clc
and
cmp
mov
mov
rol
mov
xchg
jg
push
mov
pop
jmp
lods
or
outs
and
mov
pop
mov
mov
les
add
jmp
jmp
mov
or
clc
mov
ins
inc
daa
lds
scas
push
loopne
test
into
enter
(bad)
push
sbb
pop
push
xor
mov
outs
xchg
pop
xchg
sahf
adc
jecxz
add
imul
inc
cmp
test
cmp
neg
xlat
pop
arpl
sbb
call
pop
inc
fnstsw
movs
sub
fwait
idiv
out
inc
push
sbb
sbb
xchg
(bad)
lods
fadd
inc
push
out
(bad)
loope
pop
enter
mov
jge
pop
mov
popf
fdivr
sub
jbe
jle
sub
jmp
imul
xor
xlat
pop
cmp
mov
add
xor
sti
jb
cmps
pop
stc
push
xor
mov
retf
fstp
sbb
scas
add
pop
push
loopne
fidiv
fwait
mov
dec
imul
push
arpl
jnp
popa
xor
cmp
jae
dec
mov
add
xchg
inc
jle
mov
aas
leave
(bad)
clc
push
mov
cld
movs
ss
jp
push
call
push
cmp
imul
sub
sub
xchg
or
cmp
inc
fistp
fisubr
dec
lods
push
pop
or
ins
cmp
xor
enter
mov
imul
ror
bound
mov
xor
and
lods
inc
adc
movntps
and
jp
pop
in
adc
mov
enter
xor
sbb
mov
inc
xchg
push
mov
adc
leave
xor
loope
dec
push
push
sub
jl
gs
popf
test
xchg
sbb
cmc
call
(bad)
cmps
lea
inc
hlt
sbb
loope
inc
inc
mov
xor
test
and
or
aas
pop
into
popf
cmp
jo
(bad)
cmp
js
or
cmp
and
je
pop
pusha
out
ret
pop
stc
sub
pushf
fcom
sar
repz
xor
adc
cmp
ins
pushf
lea
sbb
stc
in
sbb
cdq
into
jns
mov
popf
push
je
or
jbe
dec
es
fucom
xchg
xor
xchg
gs
inc
add
jnp
cli
aas
jmp
loopne
inc
cmc
repnz
pop
xchg
shl
dec
in
scas
push
mov
mov
ins
addr16
dec
xor
fstp
in
xchg
cmp
popf
or
addr16
sub
lods
inc
dec
scas
pop
mov
lods
mov
inc
mov
loop
push
mov
mov
sti
outs
mov
repnz
test
cdq
fs
js
rol
sub
mov
scas
xor
or
adc
rcl
mov
dec
pop
mov
movs
cmp
loope
pop
xor
cmp
loope
add
mov
js
and
repz
mov
mov
inc
shr
mov
mov
retf
and
add
mov
cwde
sub
shl
cmps
pop
xchg
pop
pop
bound
rol
cmp
sbb
ret
mov
das
cmp
rcr
add
or
outs
retf
(bad)
sub
push
in
fidivr
pop
xlat
out
(bad)
jne
inc
push
in
(bad)
mov
icebp
push
pop
sub
adc
int
dec
push
test
dec
pop
inc
repz
out
dec
cli
out
fldenv
cmp
addr16
loope
mov
and
add
fs
ins
push
adc
xchg
inc
jnp
jo
mov
push
fimul
lods
sti
pop
push
xchg
sbb
xchg
stos
popa
(bad)
cld
dec
ins
outs
pushf
retf
das
addr16
add
daa
outs
sti
jmp
mov
pop
mov
push
aam
push
mov
mov
lock
adc
xchg
fwait
sub
push
in
iret
inc
outs
xchg
jl
pusha
ins
ds
add
inc
xchg
rcl
bound
outs
sub
mov
mov
loopne
jns
movs
xchg
sbb
pop
xchg
push
add
dec
scas
test
test
jl
cmc
xor
aas
in
call
and
or
mov
cmps
xlat
push
loop
push
in
aaa
jne
(bad)
push
xor
push
ins
jecxz
pop
push
xchg
mov
les
cwde
iret
dec
clc
push
les
aaa
sub
scas
in
test
jns
daa
xor
rol
retf
add
and
int
adc
mov
dec
(bad)
movlps
jmp
imul
and
fs
loopne
into
dec
xchg
ins
scas
cmps
int3
ds
in
scas
inc
dec
dec
aas
mov
or
push
jmp
mov
push
inc
mov
retf
xor
out
mov
push
jns
pop
cwde
(bad)
dec
inc
dec
fdiv
mov
mov
or
ds
cdq
xchg
sub
mov
pop
adc
adc
sub
repz
sti
aad
mov
int3
jne
in
push
mov
icebp
inc
inc
jle
push
pushf
pop
js
(bad)
mov
imul
xchg
daa
je
add
mov
add
jb
scas
push
pushf
mov
ja
mov
pop
xchg
add
mov
push
xlat
add
add
push
in
adc
sub
cmp
movs
add
cmp
gs
mov
leave
es
jmp
inc
jb
int3
sub
(bad)
test
adc
sub
ins
jge
adc
out
mov
sub
or
js
out
xchg
adc
and
xchg
xlat
adc
hlt
mov
lea
mov
push
mov
int3
sub
and
mov
inc
push
shl
ret
je
lock
in
lds
push
ins
pop
inc
mov
int
inc
outs
push
push
push
imul
or
(bad)
in
push
data16
outs
xchg
add
mov
fwait
xchg
cli
aad
sbb
inc
imul
push
xlat
mov
xchg
xor
sub
movs
out
xor
sbb
repz
mov
rcr
in
rol
imul
adc
stc
test
cmp
mov
gs
stc
pop
mov
pop
add
ins
bound
popf
pop
xchg
addr16
rcl
daa
js
mov
and
push
es
aam
(bad)
ins
ret
pop
xchg
shl
adc
pushf
clc
push
xchg
scas
call
aam
xor
in
add
adc
or
cmp
push
dec
push
dec
xchg
cld
adc
mov
shr
std
mov
stc
loope
mov
lea
aad
outs
out
in
jmp
xor
imul
push
xadd
stc
fld
or
clc
rdtsc
mov
call
jmp
cmp
scas
jbe
and
push
push
jns
lahf
jl
jne
or
sub
push
rcr
dec
or
add
jg
adc
mul
ret
sbb
punpckldq
in
mov
pop
lods
jbe
push
pop
jbe
xor
nop
popf
dec
push
mov
mov
mov
(bad)
test
jmp
pop
jb
movs
enter
jecxz
mov
cmp
mov
fist
mov
and
lds
cmp
or
rol
inc
test
stos
stos
push
add
pop
call
fisttp
or
xchg
outs
or
add
jb
xor
jnp
ja
dec
out
jno
push
movs
fidivr
dec
dec
hlt
and
jle
pop
ins
fldcw
ds
(bad)
mov
lock
or
stc
into
sub
inc
not
push
leave
arpl
in
aam
jmp
sbb
push
and
jg
std
lock
dec
pop
stc
cwde
(bad)
pop
mov
icebp
ss
dec
mov
sbb
push
push
dec
dec
jl
daa
and
test
mov
lahf
inc
enter
scas
icebp
xor
int
mov
or
outs
sub
cmp
out
push
movs
(bad)
mov
add
push
xchg
(bad)
or
popf
cmp
xlat
fsubr
inc
dec
adc
jmp
aam
xor
xchg
lods
mov
sub
gs
fwait
push
mov
outs
xchg
xor
add
dec
jmp
push
sub
dec
pop
pop
test
mov
(bad)
pusha
adc
fwait
clc
sbb
push
xchg
jmp
in
les
scas
mov
cmp
stc
mov
outs
add
dec
adc
icebp
jb
sbb
push
pop
mov
mov
into
mov
mov
sbb
cli
test
xchg
and
push
and
mov
xchg
fisttp
mov
ja
(bad)
xor
ret
inc
imul
fnstenv
dec
lods
mov
sbb
add
int
lds
xor
int3
fsub
jmp
xor
outs
rol
add
enter
pushf
jl
mov
lahf
dec
mov
xor
fstp
inc
jecxz
out
add
fnstcw
add
inc
inc
hlt
pop
scas
movs
in
jecxz
or
popf
jle
adc
xchg
in
lods
div
push
or
adc
sbb
mov
push
dec
mov
pop
scas
xor
in
(bad)
mov
xchg
xchg
in
arpl
lss
pop
cmps
dec
or
es
adc
pop
gs
addr16
call
and
pop
sar
sbb
mov
jbe
mov
push
jl
or
retf
xchg
jecxz
xchg
push
sub
jl
pop
jno
dec
fcmove
lods
and
popf
dec
ds
js
add
movs
or
mov
jmp
int3
mov
(bad)
mov
js
cdq
jmp
push
imul
xlat
stos
hlt
add
xor
aas
sub
mov
adc
xchg
ds
pop
mov
imul
scas
add
call
jns
push
loopne
jp
sbb
and
dec
push
stos
jo
cmps
cmp
cmp
cmps
jmp
stc
mov
(bad)
mov
sub
jbe
dec
daa
jno
push
movs
imul
mov
movs
aam
or
or
lods
and
jo
mov
sar
mov
sbb
or
stos
int
xchg
xchg
fistp
sub
mov
sbb
cmc
jmp
push
lds
add
js
add
dec
out
in
ss
mov
push
int
mov
push
mov
shl
or
xor
div
jbe
mov
lock
loope
adc
mov
or
(bad)
std
mov
ins
inc
push
clc
pop
js
push
and
dec
xor
mov
retf
lahf
and
or
add
cmp
call
xchg
retf
add
into
adc
ror
std
inc
jmp
je
repz
xor
daa
inc
sahf
test
add
lea
pushf
jge
dec
fisub
xor
push
jecxz
push
call
xor
jecxz
mov
ficom
mov
xchg
stos
mov
idiv
(bad)
adc
stc
in
push
push
jge
pop
push
fwait
mov
sbb
icebp
mov
and
dec
adc
jns
mov
cmps
jp
jmp
mov
push
movs
mov
jecxz
or
jne
in
retf
rcr
cmp
sbb
test
dec
in
(bad)
sub
ret
cmps
in
or
jge
adc
aaa
sti
scas
or
icebp
dec
cmp
stos
retf
jmp
loope
sahf
adc
into
inc
adc
fcom
adc
pop
fwait
lds
jae
xor
pop
cmps
rol
retf
sti
sub
outs
dec
cmp
int3
shl
add
xor
jb
cmp
fisttp
mov
fild
adc
inc
call
dec
inc
mov
(bad)
enter
push
ret
popf
ret
sbb
fwait
mov
mov
repnz
xchg
in
adc
daa
in
mov
dec
adc
inc
or
add
add
(bad)
in
mov
push
xchg
xor
test
mov
cwde
push
fwait
shr
ds
loop
push
int
cdq
test
pushf
jmp
pusha
inc
push
add
sub
loope
mov
dec
sub
pushf
scas
inc
sar
mov
stc
cmc
add
push
mov
and
pop
adc
xor
xor
cmp
push
movups
jle
ins
cmps
jp
fisubr
pop
jns
sub
mov
rcr
xlat
inc
jns
cmp
push
cwde
dec
stos
iret
pop
fst
xchg
out
inc
dec
mov
pop
push
add
fsub
jb
jle
cli
out
xchg
mov
and
or
call
push
mov
push
scas
ins
je
jmp
pop
(bad)
and
jo
iret
dec
sub
mov
call
frstor
adc
outs
jae
inc
jae
mov
inc
dec
fs
jno
mov
xchg
js
fstp
mov
jl
std
ins
sub
xor
jae
scas
mov
mov
mov
push
cmp
jp
adc
or
in
inc
fcomi
out
mov
sahf
std
and
xchg
rol
sub
cmps
test
jno
je
jp
lds
jl
pop
inc
push
mov
and
xor
jns
or
repz
jo
retf
mov
repnz
push
je
cmp
cld
test
pop
cmp
mov
mov
sbb
(bad)
mov
mov
ins
and
sbb
outs
pop
xchg
or
(bad)
cmp
mov
(bad)
(bad)
ds
mov
push
mov
mov
sti
mov
fimul
ins
or
outs
stos
test
int
dec
fs
jg
(bad)
dec
es
pop
xchg
ret
mov
ja
pop
push
and
sub
xchg
ds
ja
jns
dec
movs
add
mov
fisub
ja
std
stc
int
cmc
stos
gs
fucom
sub
jb
or
pop
adc
jnp
inc
call
sbb
cmp
push
sbb
js
loopne
cmp
mov
cmps
xchg
mov
rol
mov
and
fidiv
mov
xor
mov
(bad)
mov
retf
dec
sbb
xchg
call
ret
pop
adc
xchg
mov
sahf
or
or
cdq
loopne
(bad)
jb
push
jmp
movs
ins
retf
mov
mov
inc
mov
cwde
imul
cli
mov
loope
in
cmps
mov
xchg
ja
xor
inc
and
adc
or
jo
push
sbb
cli
xchg
loopne
jmp
ins
push
out
dec
cs
in
push
cmp
scas
jb
stos
xchg
sbb
repnz
push
xor
adc
stos
dec
pop
les
div
jecxz
dec
mov
push
mov
retf
sub
inc
jge
inc
div
ins
test
pop
push
jbe
jo
push
pusha
fwait
pop
inc
sti
xor
cmp
pop
sub
jo
adc
mov
inc
push
stc
or
sbb
pop
inc
jmp
mov
jbe
pop
adc
lea
das
mov
loop
sub
leave
cs
mov
cwde
popa
js
jmp
add
int
aas
adc
dec
jg
cmp
jb
pop
out
cmps
push
xor
add
or
push
or
fld
pop
sar
add
adc
dec
sub
adc
outs
cmp
out
xor
in
fbstp
pop
sub
jns
or
fld
neg
int
jnp
scas
xchg
icebp
ror
aaa
jle
cld
stos
or
push
icebp
aas
or
push
das
hlt
jge
(bad)
xor
adc
retf
cmp
ins
stos
xor
mov
mov
xchg
(bad)
repnz
pop
push
pop
fwait
cmc
lods
push
or
in
das
push
xchg
into
fwait
mov
gs
idiv
xchg
or
or
pop
clc
dec
fcomp
mul
mov
stos
push
in
in
xor
jmp
je
mov
xchg
jg
mov
add
add
rol
sbb
out
and
push
fdivr
adc
rcr
inc
pop
mov
cmp
mov
cmp
js
jecxz
xor
clc
in
inc
mov
pop
outs
sbb
hlt
mov
cmps
movs
fs
mov
push
xchg
cld
std
aas
daa
fiadd
adc
ror
(bad)
aaa
jmp
sub
aam
test
cmps
inc
sbb
popa
cmp
mov
jb
mov
fs
push
outs
pop
pusha
(bad)
cmc
adc
sbb
mov
push
xchg
daa
xor
or
xchg
and
fidivr
out
xchg
xchg
inc
fnstcw
(bad)
popa
xlat
push
call
pop
repz
dec
push
and
add
(bad)
cmc
arpl
sub
dec
data16
in
cmps
test
push
push
scas
popa
jecxz
sbb
push
mov
bound
cmp
fs
fcomp
sahf
in
pop
mov
add
and
mov
pop
inc
mov
stos
pop
adc
sub
xor
lock
fdiv
loopne
sbb
shld
push
pop
mov
push
lods
fadd
shr
in
shl
jo
rcr
sbb
scas
test
add
and
je
in
scas
pop
idiv
sub
xor
fbstp
mov
mov
or
pop
test
into
sub
push
push
sub
fisttp
test
cdq
shl
xchg
cmp
(bad)
xor
dec
inc
outs
js
xor
cmp
sbb
pop
push
inc
std
daa
ins
addr16
or
sar
shr
call
fisub
movs
add
pop
movs
and
fstp
jecxz
or
push
aam
mov
out
mov
push
sub
xchg
add
cdq
xor
pop
sbb
outs
jp
jns
push
sahf
iret
pop
dec
mov
cli
mov
icebp
mov
inc
push
add
or
test
dec
cmps
in
add
popa
shl
cwde
mov
scas
add
push
cmp
in
mov
stc
push
mov
dec
test
or
inc
mov
xor
inc
icebp
and
inc
scas
push
sbb
mov
sbb
cs
(bad)
repnz
jbe
gs
je
jb
mov
inc
jnp
mov
jmp
fbld
push
sub
aad
mov
lods
mov
jae
mov
mov
aas
dec
addr16
lds
dec
inc
(bad)
mov
cmp
mov
or
(bad)
cmp
pop
xchg
pop
pushf
and
repnz
inc
dec
and
mov
mov
push
repz
cmp
xor
xor
ffree
lods
xor
aad
jp
(bad)
fild
rol
push
popa
jne
mov
test
pop
mov
cs
lds
adc
imul
adc
ficomp
gs
je
mov
cwde
adc
int3
in
push
mov
mov
xchg
cwde
sahf
xchg
in
pusha
mov
jle
add
and
jns
cmps
(bad)
cmp
cs
xlat
jp
(bad)
popf
lods
pop
inc
inc
push
in
xlat
ds
sub
mov
adc
pop
and
repnz
push
mov
stc
xor
mov
ss
test
int
test
pop
retf
dec
aas
imul
jae
loopne
or
mov
fild
ja
shl
into
dec
cld
movs
fisubr
mov
mov
jns
mov
mov
and
inc
popa
mov
das
das
leave
or
mov
ret
retf
inc
test
push
jb
(bad)
sub
ds
and
mov
daa
xchg
adc
cmp
or
mov
inc
outs
fisub
sub
repz
cmp
retf
lahf
out
lahf
lods
adc
aam
mov
xchg
out
mov
sbb
addr16
mov
lods
cld
lods
xchg
leave
ja
in
or
cmps
ja
jp
xor
or
dec
xchg
jmp
and
mov
out
lods
pop
jne
aam
hlt
cmp
dec
xlat
push
add
movs
test
mov
push
xchg
xor
push
into
cmp
stos
js
ja
cmp
test
mov
cmp
inc
or
or
push
jne
push
jno
fimul
inc
psubb
or
cmps
ror
xchg
test
add
jmp
xchg
pop
cwde
and
inc
fbstp
cmp
cdq
push
dec
lea
cmp
mov
adc
iret
dec
fisub
pop
sbb
or
(bad)
movs
into
es
and
sub
mov
sti
sbb
or
jecxz
mov
(bad)
adc
out
add
loop
sub
out
sub
xor
aam
popf
scas
or
movs
cmp
push
jns
aad
repz
nop
mov
stos
rcr
(bad)
jl
cmp
popf
in
dec
mov
mov
ss
mov
lea
pop
ret
pop
test
pop
inc
push
cmps
(bad)
movs
movs
jo
push
pop
push
test
push
push
and
jecxz
mov
push
outs
cmp
push
ins
sbb
xor
fld
or
and
stc
cdq
and
push
add
fmul
xchg
or
or
(bad)
fwait
inc
dec
ins
xor
and
mov
stos
mov
jmp
push
xchg
in
repz
pop
add
popa
pop
pop
into
jo
pop
test
jmp
stc
(bad)
or
or
xlat
and
ss
or
jae
cwde
arpl
out
pushf
cmp
icebp
or
inc
mov
jns
cmp
call
sbb
aas
pop
fimul
(bad)
repnz
movs
ds
add
ror
pushf
sub
xchg
mov
push
jb
scas
pop
push
jne
inc
jg
ins
and
sub
mov
adc
repnz
push
movs
cwde
(bad)
dec
mov
test
xor
fisttp
mov
repz
sub
push
pop
pop
push
xchg
int
ror
sub
dec
int
(bad)
dec
test
popa
jecxz
or
fsubr
mov
add
ret
add
xor
xchg
cli
test
mov
xor
xchg
ss
and
xor
nop
mov
mov
jmp
clc
dec
cmc
ins
push
inc
lea
cmp
mov
mov
ret
stos
imul
test
cmp
neg
push
mov
cdq
ret
dec
in
cmp
adc
and
push
stc
xchg
fst
int3
imul
outs
neg
xchg
in
loope
adc
jmp
push
push
add
daa
sub
pop
xor
and
cs
pop
enter
mov
cmps
fld
add
mov
cmp
sar
not
mov
test
sub
ror
(bad)
movs
rcr
scas
xor
push
outs
test
test
xchg
shr
mov
popf
sub
xor
outs
out
mov
add
dec
mov
xor
dec
cmps
int3
out
outs
mov
lahf
sub
or
cmp
fs
outs
or
ds
sar
cmc
pop
je
das
test
mov
xchg
add
test
inc
lock
mov
mov
pop
addr16
sahf
in
in
push
out
push
mov
dec
dec
es
aam
jo
cdq
loope
sbb
sbb
cmps
xchg
aam
inc
loope
int3
je
cmp
iret
repz
les
cmp
dec
shr
xchg
adc
fcom
jae
mov
cmp
into
enter
xchg
or
(bad)
mov
cli
sti
inc
dec
or
rol
mov
std
cld
adc
stc
test
ret
push
cmps
data16
jb
sub
lods
imul
pusha
push
into
push
lods
aam
(bad)
dec
push
sbb
out
mov
cmp
rcl
cmp
mov
fidivr
cmp
cmp
and
cmps
add
push
inc
xor
outs
jns
data16
fs
or
mov
or
pop
ret
cmp
cmps
lods
inc
retf
or
push
leave
movs
cmp
cmp
mov
sub
xor
push
pop
inc
out
or
or
mov
scas
in
push
fs
les
jo
adc
mov
imul
stos
js
loope
push
pop
loope
and
mov
adc
or
pop
push
add
mov
pop
out
dec
aam
call
addr16
cmp
jmp
sub
inc
lahf
ja
push
push
sbb
pusha
push
mov
stos
jmp
or
or
mov
mov
pop
mov
adc
mov
dec
xchg
sub
jp
fwait
(bad)
out
xor
and
in
sub
idiv
fs
inc
stc
js
sahf
pop
popf
pop
iret
push
fist
(bad)
movs
pop
push
push
cmp
movs
cmp
and
adc
sbb
push
sbb
stc
les
popa
call
inc
xor
iret
adc
icebp
jns
mov
sub
xor
stos
mov
cli
jle
sbb
not
(bad)
jnp
adc
addr16
sub
jge
and
out
sbb
or
or
xchg
mov
(bad)
push
stos
shl
mov
les
jp
cmp
ja
push
bswap
jle
adc
outs
xchg
stc
inc
adc
test
mov
leave
hlt
fistp
into
adc
scas
test
out
into
pop
and
inc
xchg
mov
stos
xlat
ss
ret
adc
fist
fidivr
adc
and
dec
dec
imul
test
sub
adc
cdq
or
xchg
sbb
clc
aad
call
push
xchg
cmps
cmps
xchg
add
dec
jnp
stos
jo
mov
clc
or
int
int
mov
add
(bad)
sbb
xor
mov
inc
repz
cmp
jmp
js
cmp
mov
loopne
cmps
xchg
ins
(bad)
and
jmp
adc
sub
xchg
xor
pop
scas
push
shl
xchg
add
sub
jae
aas
mov
jno
fst
das
ins
icebp
xchg
fnsave
call
imul
cmp
ja
std
icebp
mov
or
imul
jb
jp
push
adc
sub
out
jb
or
rcl
popf
int3
and
or
pop
daa
add
jae
out
out
shr
movs
inc
or
enter
or
outs
push
sbb
and
mov
jmp
or
and
jne
xchg
dec
jmp
cmp
sbb
cmps
jo
xor
pop
cmp
xor
aam
jmp
int
call
stc
scas
and
dec
std
xchg
imul
push
enter
xor
out
sbb
loop
mov
add
jns
test
mov
xor
cmps
mov
jp
add
jmp
ficom
mov
retf
adc
call
inc
xchg
sub
shl
and
inc
test
jae
jge
xchg
jmp
mov
push
push
mov
(bad)
out
pop
in
mov
xchg
cmp
out
sub
and
shl
mov
or
cmps
pop
jae
cmp
fst
xor
mov
ins
iret
lahf
retf
mov
(bad)
loop
mov
mov
push
shl
aad
pop
bound
setns
pop
push
mov
mov
xor
pushf
mov
sahf
push
test
sti
loop
(bad)
push
in
mov
(bad)
xchg
add
cld
mov
pusha
std
pop
or
push
mov
loopne
push
stos
xchg
popf
push
inc
mov
xchg
adc
(bad)
sbb
sbb
sbb
jmp
xchg
sbb
add
fcom
or
sbb
lods
inc
stos
dec
retf
xor
je
jns
je
leave
and
cmp
sub
xor
xchg
cmp
mov
pop
add
ror
out
test
das
hlt
cwde
test
jge
(bad)
dec
cdq
pusha
dec
ins
sbb
jns
and
mov
xchg
imul
movs
iretw
and
xchg
lock
mov
add
outs
mov
sub
mov
fwait
mov
jg
loope
and
dec
mov
cmp
inc
ss
mov
push
inc
mov
adc
sar
(bad)
cmc
xchg
(bad)
(bad)
arpl
retf
call
scas
out
push
out
cdq
mov
ret
mov
nop
je
cmp
cmp
outs
sti
shl
mov
inc
movs
jmp
mov
xor
out
push
push
leave
jmp
lahf
cmp
xchg
mov
fisub
sbb
pop
pop
int
inc
cmp
xchg
dec
scas
add
pushf
in
jle
stos
adc
pop
mov
sub
fs
aam
movs
sahf
(bad)
sbb
jg
and
or
push
popf
mov
pop
retf
push
in
jnp
pop
retf
mov
pop
jg
int3
xor
loop
jmp
mov
es
les
ja
push
push
mov
xor
inc
and
sti
(bad)
bound
xchg
sbb
fst
nop
push
pop
jle
push
xchg
iret
sbb
test
mov
(bad)
adc
and
or
ins
mov
sub
push
dec
sub
push
dec
neg
pop
and
inc
push
cmp
loop
jmp
loope
pop
out
into
inc
pop
cmp
mov
call
adc
stos
cs
les
pop
fsubr
add
sbb
ja
jb
in
cli
pop
sub
out
cmp
int
pop
pop
std
cli
push
scas
div
and
bound
jae
mov
xchg
sbb
jg
sub
mov
pushf
push
and
and
daa
aam
cmp
js
lahf
mov
in
mov
fcom
jbe
mov
push
hlt
outs
pop
cmp
sub
repz
icebp
pop
pop
cli
jnp
xor
mov
sub
retf
dec
(bad)
call
outs
xchg
cs
xor
mov
aad
jns
test
mov
pop
fs
jg
lock
stos
cmp
ja
stos
icebp
lods
adc
xor
pop
cwde
mov
jge
push
outs
mov
loop
mov
jmp
pop
add
sub
je
out
into
sar
xchg
mov
push
jge
xor
mov
arpl
sahf
xor
mov
xor
adc
mov
sti
pop
les
pop
fst
jbe
out
sub
inc
fld1
cmps
rol
ror
imul
das
push
mov
jb
push
out
lods
sbb
ins
mov
neg
inc
sti
fidivr
scas
fsubp
cmp
add
jle
aaa
add
arpl
shr
outs
test
lods
div
and
fwait
adc
mov
jne
adc
push
pop
xchg
div
clc
push
pop
cdq
or
ror
or
push
fwait
cmp
popf
dec
fnstenv
cmp
les
ins
arpl
sub
mov
mov
mov
or
xor
pop
adc
or
fimul
cwde
pop
js
jno
jae
or
jae
stos
xor
pusha
cwde
mov
ja
nop
retf
sbb
mov
movs
icebp
push
cmps
std
pop
aas
xchg
rol
cmps
inc
pop
ins
push
ror
inc
mov
xchg
mov
div
stos
imul
jns
jmp
xchg
inc
retf
movs
xchg
xchg
mov
and
cmp
pop
inc
and
int3
cli
movs
ss
pop
(bad)
add
dec
fiadd
dec
in
lods
xor
sahf
push
mov
mov
pop
fnstsw
pop
adc
inc
popa
pop
mov
daa
hlt
jno
sub
dec
jmp
stc
adc
fcmovb
push
icebp
or
xchg
mov
gs
or
ins
sbb
jbe
cmp
mov
add
aad
scas
and
clc
das
shr
test
inc
popf
(bad)
mov
xor
jp
aad
jcxz
dec
cmp
mov
mov
pusha
mov
shl
ss
adc
xchg
mov
mov
leave
(bad)
(bad)
je
inc
into
addr16
xlat
out
adc
or
pop
xchg
popf
xor
xchg
sbb
jo
dec
out
adc
daa
jg
outs
fbstp
fdivrp
sbb
sub
popa
movs
sar
leave
test
mov
into
or
outs
inc
lods
pop
jp
loope
fld1
movs
jns
std
bound
sbb
out
out
sbb
test
adc
lock
sbb
mov
in
(bad)
shl
pop
dec
(bad)
or
xlat
push
mov
imul
sbb
in
lock
push
ret
icebp
test
cmps
cmp
das
push
xor
xor
lea
ret
loop
ret
mov
cmp
(bad)
shl
jl
repz
sub
faddp
nop
enter
xchg
ja
repz
(bad)
jecxz
stos
in
jne
xchg
sbb
cmc
mov
inc
xchg
outs
shl
sub
stos
push
syscall
jae
pop
in
mov
repnz
repnz
xchg
dec
or
popa
jae
es
mov
cli
retf
xchg
dec
jb
stc
outs
(bad)
icebp
jbe
enter
not
mov
fist
test
xchg
daa
push
xchg
xor
adc
jnp
daa
sbb
je
jmp
lahf
jnp
inc
sbb
in
aas
sahf
iret
and
mov
inc
dec
push
outs
imul
push
pusha
cmps
fdivp
cld
inc
lds
bnd
mov
lahf
jmp
loope
daa
addr16
stos
xor
ins
jge
(bad)
pop
cmp
sub
xlat
sub
pusha
or
jmp
aam
jmp
or
test
das
jne
lds
adc
push
mov
scas
in
(bad)
nop
dec
fwait
xlat
stc
loop
(bad)
adc
xor
aam
cld
lea
mov
push
imul
xchg
jne
or
xlat
mov
ja
push
pop
add
(bad)
fdiv
pop
cmc
ins
shr
cmp
gs
xchg
pop
push
lea
lahf
pop
out
and
xchg
push
cmp
in
jge
dec
hlt
aad
xor
cmp
lea
push
add
sub
add
mov
mov
ret
dec
jnp
dec
mov
ss
sub
cli
pop
movs
jnp
leave
es
and
mov
push
adc
shl
jmp
xchg
dec
je
aaa
test
call
std
in
cs
rol
jmp
adc
icebp
adc
ret
mov
fbstp
or
cwde
(bad)
loope
out
std
scas
idiv
pop
jne
nop
movs
cmps
xchg
lods
jbe
fist
repnz
pusha
mov
add
neg
xchg
arpl
shl
xchg
adc
push
sub
int3
dec
lea
popa
push
test
jbe
jae
retf
inc
aaa
test
cld
test
ss
mov
scas
aaa
mov
xchg
lods
dec
cmp
pop
jp
retf
jbe
movs
repz
popa
dec
aaa
gs
mov
sahf
push
mov
rcr
call
xchg
push
ror
sti
mov
std
(bad)
test
leave
xchg
adc
cmp
test
faddp
dec
mov
enter
nop
cmp
in
(bad)
icebp
sbb
dec
in
call
sbb
adc
cmps
xor
cdq
mov
jne
push
inc
jmp
ret
retf
push
sub
test
dec
add
rol
or
adc
cld
sub
test
aas
dec
jns
das
pop
jno
cmp
popa
mov
push
aad
cld
rol
out
jno
cdq
pop
into
add
and
and
mov
call
cmp
je
rcl
dec
push
mov
mov
daa
iret
stc
mov
adc
iret
xchg
js
pop
adc
fdivr
popa
sub
xchg
push
mov
and
mov
dec
push
cmc
retf
lods
rcr
push
xchg
call
call
inc
mov
sub
lds
mov
pop
(bad)
hlt
pop
iret
xor
ret
clc
jmp
lea
inc
clc
mov
div
test
mov
fmul
les
cwde
inc
ss
push
jae
add
add
fnstenv
mov
xchg
jae
push
int3
retf
jmp
repz
das
push
push
sbb
sub
add
rol
aaa
jge
add
dec
aas
retf
adc
push
cmp
mov
adc
dec
lea
push
and
fs
add
mov
cmp
(bad)
cmps
or
mov
js
fucomip
cmp
lea
xchg
popa
dec
(bad)
retf
push
outs
loopne
fcmovnb
inc
sahf
push
inc
add
(bad)
pusha
sub
(bad)
mov
or
enter
mov
lods
int3
out
ds
(bad)
leave
ins
movs
bound
test
hlt
ficomp
pop
cdq
(bad)
movs
bound
int3
icebp
fcom
jb
retf
cmp
xor
mov
shl
scas
js
mov
cwde
test
out
lds
pusha
fsubr
les
cmps
jmp
pop
xor
in
pop
movs
test
scas
lea
mov
dec
outs
push
aaa
mov
inc
push
stc
fdivr
mov
sar
rcl
xchg
mov
pop
outs
test
jmp
dec
test
rcl
imul
sub
adc
sbb
shl
(bad)
ins
ins
inc
cmp
inc
mov
fs
sbb
push
dec
mov
hlt
pextrw
xchg
int3
cmps
fs
bound
dec
push
sbb
jmp
pop
fsubr
ss
dec
mov
inc
(bad)
xchg
imul
xchg
adc
xor
dec
add
leave
and
add
je
jmp
(bad)
cli
mov
jne
test
pop
pop
(bad)
xor
pusha
mov
loope
movs
or
stc
sub
lds
push
cmp
(bad)
(bad)
sbb
fistp
lahf
push
jge
int3
test
data16
out
jge
xor
loop
outs
xchg
dec
das
repnz
or
rcr
lea
cli
or
lods
fnsave
cmp
imul
cmp
shl
(bad)
dec
daa
jmp
mov
adc
mov
aam
mov
test
xchg
pop
add
dec
pop
mov
fxch
pusha
jecxz
in
fisub
cmp
je
push
stos
int
es
pop
and
sti
movs
xchg
bswap
ds
ret
sbb
ins
and
ret
mov
mov
or
sar
int
xchg
inc
dec
adc
mov
xor
daa
cmp
cli
dec
mov
xchg
stos
inc
cs
out
push
pop
fs
pop
in
xor
mov
in
leave
mov
(bad)
jmp
jbe
pop
mov
adc
fs
nop
retf
sbb
js
pushf
adc
adc
mov
test
xor
push
dec
cli
xchg
ss
out
push
jmp
dec
loop
push
jmp
cld
retf
out
mov
cmp
push
mov
loopne
das
repnz
mov
push
jne
movs
mov
pushf
or
push
ds
in
jbe
sbb
inc
aad
sbb
mov
(bad)
push
jge
adc
rcr
mov
sub
jmp
jl
push
push
cmps
dec
pop
sbb
mov
(bad)
xchg
add
push
jns
cmps
adc
jp
add
adc
nop
ficom
in
jmp
dec
in
sbb
aaa
mov
sar
xor
xchg
out
retf
push
movs
nop
pop
adc
jns
(bad)
imul
jg
bound
mov
dec
mov
xchg
pop
xchg
or
and
ss
(bad)
dec
push
dec
cmp
add
or
mov
xor
cli
lea
into
pop
repz
cwde
adc
sbb
jns
test
and
mov
cmp
test
(bad)
add
test
loop
rcl
fisub
push
push
data16
fidivr
adc
int3
mov
mov
inc
enter
fwait
ins
adc
push
test
mov
dec
mov
jp
bnd
dec
sbb
ss
jl
xchg
adc
dec
jnp
mov
xchg
add
jecxz
push
jne
xchg
ds
inc
cwde
or
jl
jle
sbb
and
fwait
out
mov
push
fs
adc
xor
jle
hlt
cbw
jp
pop
xor
pop
jmp
jp
addr16
fidivr
inc
cmp
xchg
push
sub
popa
imul
mov
and
out
xor
outs
idiv
or
out
gs
pop
inc
bnd
xchg
jb
std
mov
pop
stos
adc
mov
jg
cmp
mov
in
jmp
test
and
stc
addr16
fild
mov
lds
ds
mov
enter
nop
not
cmp
sub
dec
mov
push
das
jecxz
xor
or
call
frstor
sub
int
icebp
popa
ss
mov
in
add
test
push
fwait
sbb
lods
out
pop
inc
xor
int3
ret
xor
sub
mov
or
jbe
inc
sub
scas
les
mov
mov
(bad)
lods
mov
xor
push
cli
cmp
mov
push
sbb
out
(bad)
push
cmp
sbb
or
cld
inc
inc
jmp
bound
pop
mov
das
imul
mov
ret
xlat
out
test
sbb
pop
sub
bound
in
dec
scas
adc
aam
add
ds
inc
jo
add
repnz
mov
pop
cmp
cmp
lock
(bad)
sti
mov
or
loopne
sbb
out
mov
adc
inc
dec
mov
inc
imul
ins
(bad)
aam
pop
sub
in
(bad)
js
mov
stos
add
loope
xlat
push
out
cmp
push
hlt
jb
shl
xor
fst
sbb
(bad)
dec
dec
push
movs
jecxz
mov
pushf
stos
sar
jnp
les
and
aaa
std
sti
or
mov
in
jbe
adc
dec
and
mov
in
cmp
mov
std
lds
inc
ss
dec
test
loope
mov
js
test
push
adc
mov
add
push
mov
leave
dec
out
jne
jmp
adc
xor
jns
adc
imul
clc
mov
add
into
jg
jo
out
pop
mov
mov
pop
loope
add
lock
sub
push
xor
push
lock
out
neg
loope
add
(bad)
call
jne
test
inc
in
retf
leave
jbe
clc
sub
(bad)
dec
mov
fcom
imul
imul
cmp
aaa
in
or
push
pop
cmp
sub
mov
bound
dec
mov
hlt
mov
xor
out
aam
pushf
pop
inc
xlat
test
xor
jge
lea
jnp
dec
leave
add
cdq
push
push
out
fcomp
mov
popa
push
aaa
mov
popf
mov
mov
xor
mov
imul
push
test
adc
fs
popf
lahf
fidivr
repnz
nop
mov
inc
retf
or
nop
fwait
test
out
repnz
add
js
cmp
outs
xchg
jecxz
pop
push
(bad)
adc
das
les
jle
or
retf
mov
fdiv
je
out
fisttp
out
mov
jmp
jns
adc
enter
adc
pop
repnz
lods
bound
stos
call
sub
test
movs
jg
aas
mov
in
or
push
adc
les
int
mov
pushf
addr16
push
push
lock
scas
cmps
jno
mov
mov
gs
lahf
mov
pop
dec
rcr
movs
das
sti
xchg
and
xlat
mov
and
jmp
icebp
pop
push
inc
sbb
jg
cld
inc
cld
cmc
push
(bad)
mov
ds
jecxz
outs
sar
mov
mov
aas
in
int3
cli
les
bound
shl
mov
and
push
jg
call
ret
adc
adc
mov
jmp
add
imul
mov
or
jae
or
sub
cmp
cmp
dec
sar
or
cli
mov
push
fwait
push
add
das
push
loope
call
into
xchg
sub
dec
pop
or
xchg
daa
test
or
mov
mul
sar
call
inc
inc
repz
pop
xchg
ins
inc
cld
(bad)
in
mov
mov
imul
inc
adc
int3
shl
loope
stc
dec
imul
jg
adc
dec
pop
jp
popf
repz
xor
hlt
adc
popa
addr16
push
or
out
aad
inc
xchg
xchg
cli
inc
push
dec
movs
inc
cdq
jne
cdq
sbb
repnz
test
stos
mov
leavew
jge
loop
pop
or
xor
and
adc
xchg
xor
(bad)
outs
stos
jmp
and
int3
lahf
jae
loop
pop
sahf
sti
rcr
adc
in
out
mov
(bad)
pop
call
add
lea
jmp
lods
cmps
fidivr
jb
jb
xor
inc
xchg
cmp
jae
call
call
jo
sub
or
jb
cli
and
cmps
fs
mov
fwait
popa
and
push
inc
mov
or
mov
xor
pop
jbe
mov
pushf
outs
int3
pop
sub
sbb
stos
jle
ret
and
sbb
add
fs
cmps
jb
mov
mov
cmp
xchg
or
jno
adc
dec
test
into
sub
cmp
std
inc
pop
or
push
arpl
adc
add
mov
loop
aam
retf
dec
push
mov
adc
inc
iret
add
push
dec
fwait
aaa
mov
loope
mov
test
inc
xchg
jge
test
imul
aas
add
fs
push
mov
inc
(bad)
mov
out
ficom
jg
imul
cmp
shl
aam
int3
mov
dec
push
hlt
(bad)
hlt
and
out
sub
mov
pop
js
jne
mov
pusha
or
outs
cli
jmp
int3
in
stos
push
and
mov
mov
xchg
jnp
sub
mov
scas
fmul
add
ja
inc
mov
ja
xchg
cs
jl
mov
and
daa
jb
inc
nop
jae
fistp
inc
cmp
js
mov
xor
aas
int
and
enter
adc
clc
daa
cmp
loop
sub
(bad)
push
mov
loope
pop
in
sti
movs
nop
mov
sbb
mov
add
in
shl
adc
aam
add
adc
pop
fld
pop
jbe
xchg
shr
in
fwait
jmp
in
jg
inc
or
xchg
ret
daa
cmps
daa
test
push
lock
push
push
dec
mov
sbb
jae
mov
pusha
pop
sub
test
cwde
pop
jne
push
loope
add
or
mov
std
xchg
jo
push
ins
sbb
test
mov
jmp
push
js
cli
sbb
jae
stos
mov
pop
arpl
adc
dec
cmp
test
sbb
pop
add
cmp
(bad)
mov
inc
out
addr16
(bad)
sub
mov
cli
add
aas
pop
or
inc
test
and
loop
mov
sub
(bad)
sub
sub
push
test
push
push
mov
xlat
fstp
jl
imul
adc
jnp
call
lods
dec
jmp
outs
and
psubw
in
and
jle
dec
int3
or
fs
aam
pop
adc
daa
sbb
dec
push
mul
mov
(bad)
aaa
push
push
and
or
inc
(bad)
mov
rcr
inc
push
xor
int
mov
mov
jecxz
inc
dec
push
movs
fucomp
std
cmovle
jmp
inc
idiv
mov
pop
add
push
mov
jl
repnz
mov
lea
in
jmp
mov
xlat
xchg
jg
sahf
cmp
and
bound
sti
(bad)
jns
scas
and
gs
jbe
sbb
in
ins
retf
movs
movs
leave
mov
push
hlt
jo
xor
ss
aaa
xchg
inc
lss
jmp
std
and
outs
fcmovnb
xchg
sbb
dec
sbb
adc
pushf
inc
imul
test
cmc
push
stc
xchg
pop
and
lods
mov
or
mov
pop
xchg
push
fimul
imul
sti
sti
cmp
shl
mov
mov
mov
xchg
cmp
jo
imul
nop
sub
mov
rol
mov
ret
aam
(bad)
mov
(bad)
pusha
loope
push
jae
mov
xlat
retf
push
cmps
dec
stos
and
push
push
jne
std
mov
test
in
jo
adc
(bad)
push
sub
adc
mov
out
(bad)
push
inc
hlt
psubw
dec
test
sub
mov
push
sbb
loop
jg
mov
sub
sbb
daa
cmp
outs
cmp
jecxz
inc
shl
cdq
inc
adc
inc
movs
(bad)
pusha
fwait
xchg
popa
cs
pop
and
pusha
or
cmc
mov
or
mov
inc
push
iret
xchg
ror
xor
call
ret
jle
mov
cdq
lahf
pop
pusha
jnp
jecxz
out
sahf
pop
sbb
pop
(bad)
loopne
pop
sbb
mov
inc
rcl
add
arpl
mov
cmp
fsubr
cmp
movs
mov
jbe
add
cmp
adc
mov
or
xor
movs
dec
imul
or
sahf
ja
pusha
and
and
dec
sub
je
ror
inc
and
fcom
(bad)
xchg
fld
xchg
in
sbb
lods
call
cmp
fs
xor
sub
or
jns
inc
into
shl
push
fidivr
jge
adc
push
les
adc
mov
rcr
imul
cmps
mov
xchg
neg
push
cmps
hlt
ins
cmp
lea
pop
xchg
jnp
out
sar
mov
jmp
outs
int
and
js
(bad)
push
popf
jno
xlat
aas
int3
jb
neg
int
outs
mov
fwait
lahf
imul
sbb
cmp
les
add
sar
mov
call
aas
pop
out
lds
or
sbb
jno
jg
lock
daa
ficomp
jge
xor
or
inc
xchg
xchg
mov
aaa
cmc
jge
sbb
pop
(bad)
(bad)
xor
cmps
pop
push
pop
adc
or
sub
xlat
ds
jge
dec
leave
rcr
dec
jb
fild
and
mov
and
scas
sbb
inc
ret
imul
shl
pop
push
lea
rcl
push
mov
jl
imul
int
push
and
(bad)
mov
in
push
or
pop
pop
mov
fucomip
std
rcr
sahf
(bad)
addr16
imul
sbb
xor
ror
lods
inc
or
sub
adc
pop
dec
dec
adc
arpl
pusha
das
shr
mov
test
or
jmp
cli
inc
int
fdivrp
sti
hlt
rcl
inc
sub
mov
and
or
mov
xor
jg
xchg
je
push
out
ins
add
fistp
dec
movs
push
stos
push
inc
cmp
cmp
fs
push
pushf
pop
pop
dec
repnz
xchg
mov
add
out
add
mov
dec
jo
xor
ins
cli
jno
call
(bad)
icebp
mov
cwde
cs
mov
out
outs
mov
out
push
mov
dec
mov
mov
mov
pushf
pusha
jp
push
mov
mov
ins
fisub
push
ret
adc
and
lods
add
ss
sbb
mov
pop
push
xchg
mov
into
pop
push
rcl
cmp
inc
push
inc
sbb
push
mov
fldenv
xchg
retf
call
fs
sub
adc
dec
push
dec
mov
mov
ret
jmp
xor
mov
and
fwait
xor
sar
adc
push
sub
mov
pusha
push
cmc
jbe
retf
retf
mov
push
stos
ret
(bad)
popa
std
movs
ret
test
adc
and
mov
out
xchg
loopne
adc
jnp
add
dec
pop
adc
fidivr
mov
xchg
jo
int
xchg
push
sbb
jns
inc
scas
pop
call
sbb
mov
out
sbb
div
hlt
sub
fldenv
xchg
std
inc
cmps
jo
enter
fdivr
inc
not
add
pop
or
ret
sbb
(bad)
mov
and
lods
push
xor
mov
frstor
adc
jno
xor
fsub
mov
dec
mov
mov
lock
xchg
and
data16
xchg
icebp
test
cmp
fisttp
xchg
ins
in
ins
add
cmp
pop
cmps
adc
call
sub
mov
fsin
inc
mov
add
pop
std
pop
int3
iret
popa
(bad)
sar
ficom
mov
repnz
(bad)
std
jb
ins
test
and
inc
dec
ins
xchg
mov
pusha
jo
ret
aam
jno
dec
and
dec
pusha
add
and
cmp
mov
adc
or
dec
xor
sbb
push
inc
dec
jle
sbb
outs
mul
lds
loopne
sbb
push
sub
cmps
retf
mov
mov
je
xor
cmp
xchg
xor
enter
mov
cwde
and
lea
or
ins
mov
xchg
xchg
jno
pop
mov
scas
addr16
sub
cmp
mov
mov
ins
mov
popa
je
push
xchg
aam
js
movs
repnz
shr
iret
push
arpl
retf
idiv
fst
cdq
cmp
les
shl
vorpd
sbb
lds
jb
(bad)
out
pop
jmp
inc
in
jge
mov
mov
adc
(bad)
mov
xor
pop
mov
mov
cwde
sbb
inc
pop
push
scas
push
scas
inc
lock
pushw
inc
fs
add
fist
adc
sub
and
mov
mov
jnp
in
js
xor
push
sbb
dec
pop
mov
cmps
mov
lods
lahf
jnp
mov
mov
inc
arpl
cmps
not
(bad)
pop
sti
adc
and
mov
lahf
inc
push
pushf
jbe
hlt
jns
mov
inc
sub
popa
xor
add
jbe
sbb
or
push
mov
jl
xlat
ret
jo
sbb
pop
jle
enter
lock
adc
cmp
mov
pop
stos
xlat
popf
cmps
stc
ins
push
repz
ficomp
adc
int
inc
in
sub
cmp
add
add
outs
jg
add
push
push
sti
dec
push
fucom
fimul
test
sbb
(bad)
retf
mov
add
xchg
cwde
add
mov
add
jmp
xchg
rcr
and
sti
mov
fnstsw
enter
push
or
add
icebp
jnp
mov
mov
xor
clc
aam
dec
push
bound
mov
out
iret
repz
lods
pop
out
adc
dec
jns
adc
and
outs
or
mov
(bad)
popa
dec
imul
adc
and
push
xchg
jne
aaa
dec
xor
dec
shl
jle
mov
pop
in
lock
inc
enter
mov
cld
jmp
into
cmp
hlt
sbb
(bad)
cmp
ror
dec
and
loope
call
into
aas
popf
add
shl
xchg
test
dec
cmp
loopne
ret
test
xlat
pushf
arpl
rol
push
cld
(bad)
xor
mov
xchg
adc
out
data16
adc
adc
inc
add
mov
iret
and
xchg
leave
dec
sub
jo
movs
push
retf
sub
stos
ss
jb
mov
in
out
jne
mov
push
repnz
push
fcomp
cmp
push
jae
ds
cmp
xchg
mov
adc
out
loope
push
xor
out
enter
xchg
sbb
(bad)
cs
sbb
cmp
out
imul
or
repnz
scas
call
sbb
sub
leave
xchg
cmps
jle
mov
addr16
mov
sahf
ret
sbb
shl
xchg
xor
mov
lods
(bad)
jmp
sbb
imul
cld
(bad)
push
ins
shr
jl
mov
popf
rol
jbe
sbb
rcr
shl
sub
adc
push
xor
movhlps
add
fld
test
popf
jns
pop
push
inc
jb
xor
xor
push
jns
and
(bad)
sbb
mov
pop
xchg
leave
data16
call
scas
xchg
xor
rcr
enter
aas
push
mov
retf
aad
or
push
and
xor
xchg
cmp
mov
addr16
mov
mov
hlt
jne
xchg
pop
sub
push
mov
xchg
popa
aad
popf
xchg
enter
xchg
lock
pop
fwait
cmp
sahf
push
scas
sahf
out
pop
add
lods
pop
jge
cmp
xor
lahf
cmp
add
pop
adc
adc
popf
pop
jne
dec
add
adc
or
jmp
daa
not
push
call
cmp
and
adc
sar
dec
add
cmp
ss
arpl
call
jmp
not
jmp
int
icebp
loope
xor
cmp
jno
js
sub
xchg
int3
jno
sub
das
sub
loopne
aaa
push
jg
xchg
mov
sub
aad
xchg
stos
pop
fild
cmp
inc
pop
mov
imul
and
std
sbb
in
jbe
popf
pop
add
mov
in
xor
fld
inc
jae
pop
mov
cmp
add
cmps
push
or
test
rol
int
leave
fisub
rcr
daa
sub
inc
add
aad
sub
fild
push
shl
call
mov
repnz
call
shl
test
mov
mov
mov
loope
ja
and
shr
push
rcl
test
mov
into
enter
(bad)
icebp
add
cdq
push
fwait
rol
cmp
mov
inc
jnp
dec
btc
dec
cmp
rol
jo
arpl
lea
push
sbb
aad
xor
xor
or
xchg
test
or
enter
sbb
push
pop
push
xchg
mov
fisubr
aad
out
ret
and
repnz
cmps
shl
stc
adc
inc
popa
and
or
retf
in
fild
sbb
or
and
imul
sub
fldcw
add
cdq
xor
cmp
fs
lds
dec
xchg
sbb
or
and
shr
jbe
cmps
dec
lock
inc
pop
ja
dec
fnstenv
rol
fisttp
dec
sbb
retf
nop
sub
jno
adc
popa
push
cs
hlt
cs
pop
cwde
or
ficom
test
inc
pop
inc
add
je
imul
inc
retf
rol
movs
les
icebp
fldcw
bound
mov
mov
cwde
das
aad
adc
xor
lods
clc
mov
mov
sub
imul
inc
and
sbb
aad
and
sub
mov
(bad)
into
adc
push
mov
pusha
pop
mul
dec
xlat
or
je
cs
es
dec
xchg
inc
or
(bad)
in
movs
outs
mov
jl
sbb
movs
out
jb
int
vmovupd
enter
aas
jnp
add
pop
push
lock
lods
aad
and
(bad)
cmp
ss
pop
push
call
and
lock
pop
jb
std
and
iret
fmul
je
or
aam
fst
mov
jle
push
pop
and
mov
cmp
cdq
cmp
out
sub
fistp
inc
arpl
outs
enter
jae
cmp
pop
adc
loope
add
arpl
ror
jmp
arpl
std
shl
mov
inc
mov
fld
test
iret
(bad)
or
mov
xchg
aas
jmp
test
adc
sbb
cmp
push
cbw
dec
jbe
mov
shl
out
sub
ss
rcr
fwait
jae
dec
push
cmps
jne
inc
mov
xchg
xchg
pop
mov
xor
sub
or
sub
cmp
dec
mov
push
shr
fiadd
mov
cs
in
pop
jb
xchg
adc
outs
jp
into
xchg
jmp
push
(bad)
loope
dec
mov
scas
std
fcmovnbe
mov
mov
and
(bad)
div
idiv
mov
leave
jl
and
lea
std
and
dec
addr16
inc
clc
stc
lock
sbb
fiadd
dec
gs
push
pop
loope
retf
or
jne
fisttp
sub
sub
and
repnz
fmul
stc
ds
inc
and
mov
shl
xlat
xor
jecxz
pop
adc
mov
aad
push
mov
icebp
pop
retf
mov
fs
int
fst
cdq
dec
fdivr
out
fldcw
add
adc
mov
sbb
test
sub
add
mov
sbb
leave
test
and
sub
mov
pusha
mov
adc
mov
je
jmp
std
xor
(bad)
hlt
adc
or
xchg
arpl
rcl
sbb
out
jb
add
jo
cmp
cld
cmp
dec
dec
push
sbb
adc
sbb
push
and
ret
(bad)
jle
stc
popa
adc
push
les
xchg
nop
mov
jmp
push
dec
ja
rcl
jle
cmp
mov
add
jmp
mov
ret
pushf
pop
in
add
ins
fsub
push
mov
jp
mov
fcomp
aaa
or
mov
push
fld
clc
adc
shl
or
push
in
das
jbe
test
mov
mov
or
sbb
adc
add
movs
add
aad
mov
push
lods
jp
dec
pusha
addr16
mov
push
push
repz
mov
cmp
jo
and
add
mov
adc
cmp
add
ror
pop
cwde
jns
dec
xchg
mov
and
xchg
lock
mov
(bad)
movs
pop
call
data16
fcmovu
loope
enter
popf
xor
adc
or
sbb
aam
jle
jmp
dec
push
dec
scas
(bad)
fmul
mov
and
or
add
jg
not
repnz
aad
in
lock
into
lods
sti
addr16
pusha
sbb
(bad)
aad
cwde
mov
lahf
aad
aam
into
cwde
dec
jmp
lock
dec
mov
cwde
xchg
adc
xor
movs
mov
xor
cmp
(bad)
sti
mov
push
js
mov
mov
fwait
xchg
aad
add
sbb
movs
(bad)
pop
in
or
jle
in
xchg
jmp
bound
push
or
sub
jg
add
sbb
push
imul
sahf
mov
add
sub
fnstsw
rcr
nop
push
imul
mov
iret
push
jns
sbb
addr16
or
mov
fnstsw
jp
cmps
cdq
pusha
int3
mov
(bad)
push
dec
xor
aam
sbb
(bad)
minps
test
dec
cs
jle
sub
inc
ficomp
push
fmul
dec
inc
data16
mov
movs
stc
jns
jbe
or
outs
(bad)
aaa
push
jb
out
jbe
je
data16
mov
mov
inc
sub
loope
push
inc
jno
sub
mov
imul
add
or
ins
pusha
out
sar
jb
and
clc
and
retf
sar
jle
xchg
mov
fiadd
dec
mov
loopne
or
mov
nop
jo
in
lahf
xchg
push
inc
xor
and
out
arpl
lods
add
cmps
and
int3
pop
stos
ffreep
dec
cmp
adc
mov
sti
or
arpl
cmp
mov
fcom
dec
shl
jl
sub
jns
push
add
mov
icebp
mov
jne
inc
call
sbb
inc
and
adc
add
stos
lahf
add
int
mov
adc
aas
pop
popf
not
les
arpl
cwde
adc
cmps
ja
and
fwait
js
xchg
push
mov
jge
gs
aam
es
div
cld
pop
push
test
int
fwait
and
adc
in
jb
mov
sub
dec
cmp
mov
shl
xlat
cmp
les
aas
xor
(bad)
movs
stc
or
jne
sti
sbb
out
jge
vcvtpd2ps
cmp
jl
div
or
fdiv
push
lods
cld
cmp
jno
push
cld
pop
pop
jmp
rcl
mov
sbb
ins
inc
fbstp
mov
sti
stos
pop
fst
push
jecxz
mov
jbe
fcmovnb
clc
std
test
or
cmp
mov
pop
xchg
ins
and
or
adc
or
pop
(bad)
cli
cwde
pop
pop
sbb
packssdw
adc
mov
into
dec
fsubr
dec
sbb
dec
fist
(bad)
(bad)
xor
sbb
int3
jnp
inc
sahf
gs
push
pop
imul
sub
mov
and
jnp
in
jae
out
push
jecxz
mov
sbb
mov
clc
sub
iret
adc
dec
cmp
daa
std
sbb
xchg
repnz
or
add
ret
daa
jne
dec
cli
pusha
inc
ss
xor
(bad)
pop
push
dec
fiadd
pop
in
outs
sbb
nop
sbb
hlt
pop
out
test
mov
dec
leave
fcom
inc
dec
sti
sub
mov
push
lods
and
cdq
cmc
pop
xor
fcomp
cmp
xchg
xchg
sbb
sbb
xchg
iret
pop
sub
(bad)
pop
fwait
rcr
ficom
xchg
add
je
sbb
mov
jg
jmp
arpl
sub
arpl
pop
lods
out
dec
ja
ficomp
add
dec
inc
mov
mov
and
sub
(bad)
repnz
loop
lods
(bad)
jae
pop
jbe
pop
out
sub
(bad)
xor
enter
sub
mov
mov
cmp
out
push
push
pop
ret
scas
add
cmp
in
leave
push
xor
fld
shl
cmp
cmp
sub
fsubr
js
push
xor
call
push
add
dec
(bad)
stos
hlt
lock
ins
fwait
js
mov
dec
adc
into
into
pushfw
push
adc
pop
jmp
enter
sub
ret
sbb
ins
lahf
out
mov
ja
xchg
lea
test
push
fst
fucom
mov
ret
jmp
jns
imul
adc
sbb
xchg
pop
test
test
retf
sahf
sub
icebp
cmp
test
sar
jge
sub
test
add
(bad)
xchg
ror
cwde
mov
and
test
pop
or
xor
push
cmps
stos
push
out
or
adc
pushf
out
out
mov
imul
ins
jb
inc
or
stc
mov
and
fldl2e
pop
cmp
sar
stc
lea
or
xchg
pop
movs
or
jne
adc
aaa
cmps
loop
fstp
mov
cli
or
sar
mov
jecxz
movs
dec
or
mov
scas
popf
jo
cmp
fs
iret
adc
jg
jmp
adc
pop
aad
adc
jg
jae
or
lods
es
icebp
and
pop
lahf
inc
jmp
jns
int
cmp
fdiv
sub
aad
lds
pop
not
sbb
mov
or
in
cmp
out
adc
push
sub
sub
mov
fldenv
pop
dec
jge
scas
inc
pop
push
(bad)
and
hlt
and
mov
(bad)
mov
jmp
adc
and
or
mov
xor
lods
pop
lea
ds
jns
pop
add
sub
jo
or
sbb
sub
pop
mov
or
xchg
xor
mov
pusha
lea
aas
cmp
(bad)
test
cwde
pop
lods
fiadd
nop
shl
xchg
ret
xchg
gs
std
or
mov
(bad)
sbb
mov
or
(bad)
sub
sub
fs
xor
push
mov
(bad)
into
cmc
ins
fdiv
or
jmp
adc
inc
into
aam
movs
add
(bad)
test
pop
push
mov
(bad)
mov
cmc
sahf
push
xor
push
adc
imul
push
pop
push
mov
ds
cmps
pop
push
jae
(bad)
cdq
movs
sub
sub
pop
cmps
(bad)
mov
lock
lock
(bad)
hlt
xor
mov
pop
fisub
std
mov
xor
adc
ret
push
sbb
mov
je
mov
pop
push
dec
push
sahf
dec
dec
push
call
xchg
test
mov
mov
jg
add
popa
hlt
pop
sub
in
push
into
cli
jmp
pop
dec
call
xor
loope
mov
mov
pop
push
outs
push
clc
and
ds
sub
sbb
or
stos
dec
(bad)
icebp
add
icebp
pop
mov
and
outs
mov
movs
mov
fdivr
out
dec
sbb
mov
jecxz
in
ret
push
sbb
mov
mov
fild
push
xor
jl
push
xor
adc
push
shl
xchg
outs
gs
xor
cld
in
(bad)
sbb
push
push
xor
pop
cmp
inc
jmp
jnp
jne
xor
sub
repz
ds
cmp
adc
in
xchg
push
and
adc
xlat
imul
aas
sbb
popa
mov
repz
mov
xchg
dec
cmp
pop
arpl
lods
push
cmps
adc
push
xchg
xlat
ror
adc
imul
mov
adc
sub
mov
jge
ret
inc
mov
inc
rol
out
xlat
sahf
sti
loop
int
out
scas
lahf
sbb
jns
pop
gs
cmp
fistp
xchg
outs
jbe
push
mov
sbb
cmp
gs
push
mov
(bad)
std
sbb
repz
pop
jp
inc
sub
in
fimul
imul
stc
rcl
add
mov
dec
adc
jns
cmp
popf
int
daa
sti
xor
fs
(bad)
addr16
jbe
aam
or
dec
xor
(bad)
shl
movs
inc
adc
xchg
call
push
addr16
rol
sbb
repnz
fsubr
pop
mov
xchg
or
scas
cmps
push
sbb
fs
or
lods
cli
(bad)
js
(bad)
outs
jmp
push
aas
mov
dec
into
lahf
inc
icebp
pop
and
push
mov
xlat
mov
imul
ror
jnp
cmp
xchg
jp
push
mov
xchg
(bad)
aam
outs
cs
inc
mov
out
push
jns
data16
aad
cmp
in
out
dec
sbb
push
mov
aaa
call
stos
xor
mov
adc
jns
jmp
sbb
call
mov
jmp
lods
xchg
call
aad
inc
sub
mov
ret
ret
das
and
out
lock
cwde
aam
jo
cmc
in
xchg
and
pusha
sub
fistp
mov
in
minps
sti
aas
mov
add
or
dec
add
stos
cmps
push
inc
jp
not
mov
bound
stos
gs
das
sbb
out
cdq
fisttp
mov
popf
push
test
stos
movs
add
cwde
out
mov
push
pop
retf
pop
sbb
jle
sub
dec
rol
add
scas
cld
sahf
push
sub
adc
add
mov
repnz
cmps
xchg
sub
dec
jmp
pop
inc
gs
mov
(bad)
out
imul
xor
xor
mov
or
inc
addr16
xor
mov
test
fwait
xlat
push
sbb
mov
div
aad
pop
(bad)
retf
pop
push
xor
pop
nop
jecxz
add
rcr
pop
ins
ja
jno
fimul
push
fwait
lods
or
jmp
adc
call
loopne
mov
fmul
cmp
adc
bound
lods
cmp
stos
push
pop
ja
popf
xchg
imul
and
lods
shl
cmp
add
push
int
mov
inc
aas
jo
pop
int3
iret
and
mov
mov
jno
add
(bad)
sar
mov
lods
mov
inc
int
sub
dec
xlat
mov
test
into
mov
add
mov
(bad)
push
enter
cli
lea
popf
call
xor
lods
lods
sub
jno
aad
dec
jns
dec
(bad)
mov
jle
add
lds
fstp
or
add
xor
cmp
sbb
pop
je
out
push
iret
shl
ret
(bad)
push
lods
(bad)
pop
call
popa
sub
xor
(bad)
xchg
xor
cmp
ror
ret
jecxz
scas
cmp
push
mov
mov
pop
xlat
jmp
dec
in
imul
inc
mov
xchg
rcr
pop
retf
mov
das
out
das
mov
cmp
stos
(bad)
fistp
jb
das
pop
in
cdq
or
int
inc
jmp
pop
push
pop
cmp
aaa
add
and
mov
dec
mov
inc
int3
push
dec
hlt
bound
lods
add
xchg
cmp
xchg
cli
into
cs
rcl
sub
pop
push
leave
cmps
inc
jp
sub
and
(bad)
mov
fimul
cld
rol
and
and
and
adc
adc
fcom
dec
jne
les
sar
mov
sub
sub
jns
inc
daa
js
call
jmp
in
xchg
mov
js
sbb
ret
jecxz
add
(bad)
out
jl
loop
pop
sub
retf
test
lods
mov
jle
inc
add
popf
in
fcom
or
push
repz
pop
ret
sbb
xor
rcr
cmp
cli
push
xlat
xor
lea
xchg
and
and
(bad)
mov
push
and
add
lods
mov
iret
std
cs
add
jmp
std
mov
imul
fwait
dec
push
and
or
out
ret
ins
ret
rcl
sub
fcom
cld
dec
cmp
ja
lock
inc
fiadd
fidivr
pop
js
stos
je
or
cmp
je
int
adc
mov
mov
xchg
xor
sar
dec
loopne
repnz
adc
out
jne
and
cmp
add
jnp
aad
imul
shl
fwait
js
jae
xchg
fldcw
dec
xlat
scas
push
push
jp
pusha
(bad)
sbb
xchg
jg
(bad)
retf
push
imul
enter
lea
ja
add
mov
jo
in
cmp
xchg
cmc
std
sbb
jb
adc
push
fs
test
sar
loope
inc
into
cs
popa
loopne
mov
adc
adc
jl
sbb
cs
repnz
scas
sub
test
adc
xor
mov
aad
fild
sbb
dec
loope
call
inc
mov
cmp
mov
push
fst
push
loopne
mov
mov
mov
(bad)
cdq
ffree
push
or
sub
jl
push
aaa
out
(bad)
call
hlt
push
loopne
cdq
cld
not
(bad)
mov
cmps
mov
xchg
mul
dec
mov
jnp
inc
dec
jl
or
test
pop
pop
jge
outs
xchg
and
jns
(bad)
(bad)
mov
cs
call
cli
subps
call
cli
stc
test
cmp
inc
pop
test
add
les
(bad)
jmp
mov
xlat
xlat
mov
not
sub
sub
icebp
mov
pop
scas
dec
sub
cmps
arpl
cmp
test
adc
stos
push
mov
les
inc
push
pop
sahf
inc
in
lock
and
les
rcr
loope
cmps
sahf
mov
imul
dec
add
jbe
add
in
retf
xchg
cmp
pop
push
rcr
jo
pop
cmps
sub
sub
sbb
int
mov
hlt
sbb
cwde
adc
scas
(bad)
jge
dec
pop
sbb
lock
xor
mov
cmp
ret
push
push
int
fisub
imul
add
or
out
inc
inc
push
inc
aam
test
popf
stos
mov
test
cdq
in
in
cmp
push
xchg
rcr
imul
jo
pop
pop
mov
mov
mov
xchg
mov
inc
mov
and
inc
rol
lds
push
mov
jae
adc
push
jbe
sub
add
xor
in
retf
adc
into
rcr
sub
sub
call
retf
out
rcl
ficom
aas
jg
mov
call
stos
je
movs
pop
adc
pop
mov
pop
cmp
inc
xchg
std
shl
add
test
xor
dec
call
pop
loopne
sub
out
outs
js
iret
imul
add
sbb
(bad)
mov
push
sti
xor
jp
ret
push
pop
ret
in
push
add
loopne
lods
das
push
push
int3
pop
jecxz
push
xchg
push
xchg
jmp
stos
xchg
js
pop
lds
aaa
sar
dec
(bad)
enter
sub
aaa
mov
lds
int
je
xlat
into
jg
add
mov
cmp
gs
shl
push
or
sub
or
pop
dec
stos
inc
stos
fs
mov
push
cmc
dec
std
rol
add
jecxz
into
mov
jmp
jp
push
mov
cmp
stos
outs
sbb
xor
sub
jbe
fs
pop
sahf
push
mov
(bad)
push
ret
arpl
sbb
add
pop
mov
lods
push
jmp
dec
out
js
inc
mov
rcr
pop
dec
and
loope
or
adc
cli
push
pop
push
ret
repnz
ins
xchg
push
rol
test
inc
out
dec
loope
push
dec
sub
rol
stos
dec
or
les
or
aas
or
cmps
(bad)
dec
xchg
push
xlat
iret
out
lds
fdiv
xlat
out
xchg
mov
scas
mov
out
adc
inc
ret
les
push
adc
inc
sub
std
out
mov
repnz
pusha
or
out
sub
inc
in
add
inc
jnp
out
outs
mov
test
ss
outs
outs
push
or
cmps
add
loopne
sub
adc
jbe
rol
push
dec
mov
outs
adc
adc
lods
out
mov
dec
adc
push
mov
jo
inc
aam
mov
xchg
inc
in
inc
mov
mov
das
out
call
and
pop
or
jge
add
sub
aam
dec
inc
in
aaa
mov
inc
push
sbb
sub
jbe
or
retf
in
push
bound
and
sar
sbb
ffree
mov
mov
mov
pop
lods
enter
cmp
rcr
sub
pop
mov
mov
adc
or
cdq
icebp
cmp
dec
daa
mov
mov
in
mov
inc
bound
ss
and
cmp
mov
(bad)
push
push
imul
pop
mov
(bad)
mov
mov
repnz
mov
xor
enter
test
in
loop
mov
fdiv
pop
dec
(bad)
sbb
das
nop
mov
ret
bound
aam
into
push
shr
das
mov
icebp
lods
cmps
ss
sbb
jp
mov
jmp
cwde
add
xor
cmp
jmp
out
call
add
cmp
push
loopne
out
ret
mov
les
adc
jns
aaa
cs
pop
sahf
fisub
rcpps
pop
sub
shr
aaa
(bad)
fwait
and
addr16
push
mov
and
jae
fdiv
mov
in
dec
push
ins
jo
sub
mov
rcr
aaa
xchg
int3
aad
hlt
add
sub
scas
cmp
xchg
jge
sbb
mov
out
ret
or
fs
xchg
jle
or
pop
sbb
jecxz
pop
pushf
inc
xor
jmp
gs
dec
inc
cmps
jnp
pop
pop
loop
cmp
(bad)
lock
movs
ins
and
mov
stos
sahf
sbb
sub
aad
inc
jnp
shr
cmp
jmp
mov
cmps
ja
retf
(bad)
loope
daa
xchg
call
in
jp
stc
xor
ror
into
cmp
adc
jmp
cld
call
push
int
repz
lods
mov
repz
cmp
and
mov
(bad)
push
call
push
adc
cmp
push
mul
adc
lahf
and
sbb
fwait
mov
push
test
pop
cs
push
call
test
ror
int3
test
call
sar
xlat
sbb
pop
fcmovnbe
inc
imul
push
mov
jge
test
bound
push
cmp
cld
sub
or
dec
mov
les
popf
mov
mov
inc
stc
jmp
ret
arpl
lahf
and
pusha
loope
(bad)
lock
dec
xchg
jns
mov
rol
pop
mov
mul
add
es
fwait
jbe
cmp
dec
mov
add
pop
retf
inc
sbb
xchg
jbe
mov
jb
xchg
or
adc
enter
mov
pop
sbb
lods
adc
pop
inc
arpl
movs
inc
clc
and
mov
jns
mov
retf
fs
test
mov
fcom
leave
dec
scas
push
and
fs
xor
in
sahf
adc
jo
aam
sbb
lock
jle
iret
fldcw
(bad)
cmp
cld
sub
adc
push
sbb
imul
imul
arpl
pop
sub
movs
ja
and
rol
fcmovnu
mov
cmp
inc
repnz
psadbw
pusha
push
(bad)
xchg
xor
cmp
ds
fucomip
add
jae
aaa
xor
test
call
add
scas
push
push
fwait
mov
dec
fsub
ja
mov
iret
lods
sahf
dec
and
icebp
lods
out
(bad)
pop
daa
push
dec
daa
mov
jmp
mov
sbb
xchg
mov
mov
stos
(bad)
(bad)
pop
push
inc
mov
xchg
dec
xchg
outs
mov
or
inc
mov
inc
cmps
pushf
xor
mov
and
test
mov
rcl
jl
call
hlt
adc
mov
fld
popf
gs
mov
fstp
fadd
xor
(bad)
push
enter
cmps
or
(bad)
fdivr
mov
push
mov
and
clc
fstp
mov
into
popa
xchg
jns
cmps
cdq
mov
inc
jnp
mov
movs
in
inc
mov
jne
js
pop
adc
jmp
jle
xchg
fdiv
pushf
or
inc
dec
pop
data16
or
stos
fld
std
adc
test
shl
jl
out
ja
je
pop
enter
sub
rcr
loop
shl
push
push
dec
dec
retf
cli
mov
repnz
mov
dec
or
arpl
jno
add
fucom
pushf
xchg
push
xor
call
ret
(bad)
outs
fldcw
rol
repz
daa
adc
aam
fimul
pop
mov
xor
push
cmp
(bad)
int3
mov
sahf
mov
xchg
adc
nop
xchg
inc
aam
mov
out
dec
jl
cld
addr16
add
xchg
shl
sub
cmp
mov
and
rcr
xchg
mov
jmp
scas
add
pushf
(bad)
(bad)
pusha
adc
push
push
inc
idiv
cmps
add
push
inc
es
and
icebp
dec
(bad)
pop
push
arpl
or
mov
sub
cmc
out
sbb
sub
sub
iret
or
cmp
sar
push
imul
fist
ret
jge
pop
addr16
mov
fisub
dec
(bad)
int3
sub
adc
aaa
test
jnp
fisubr
scas
data16
push
test
mov
out
clc
xor
push
in
sbb
test
(bad)
and
fidivr
mov
push
pop
pop
mov
xchg
add
jge
(bad)
ins
rol
mov
adc
xchg
sub
nop
test
mov
test
xchg
push
xlat
inc
xor
add
ja
and
out
jbe
and
loop
aam
ins
jle
jl
xor
and
jg
jmp
xchg
inc
and
in
pop
xor
fadd
(bad)
loop
scas
popa
fild
mov
ins
ja
call
pop
jle
fisub
jl
cs
cmps
aaa
retf
add
cld
out
repnz
loopne
and
(bad)
scas
sub
inc
je
rcr
aad
stc
pop
(bad)
pushf
pop
out
mov
jl
js
add
cwde
push
je
inc
or
push
xor
cmp
movs
shl
jmp
sbb
sub
sbb
cmps
jge
jne
push
ret
mov
mov
adc
sbb
adc
lds
stc
adc
mov
sti
sbb
inc
pop
(bad)
sbb
int
test
pop
sbb
aas
cmp
cs
aas
ds
or
lods
sbb
popa
add
mov
call
pop
icebp
push
pop
sbb
lock
sti
push
(bad)
jmp
sti
shl
jne
sbb
test
fs
adc
in
jnp
push
push
push
mov
mov
data16
sub
jg
movs
xchg
fnstcw
clc
inc
fisttp
and
nop
mov
movs
dec
mov
es
inc
xor
dec
push
mov
jecxz
cdq
push
shr
cli
pushf
pop
jo
push
test
out
lods
mov
fisub
in
out
das
inc
xlat
mov
movs
push
sub
das
dec
pop
xor
ja
pop
movmskps
push
loope
sbb
mov
xlat
not
adc
jne
clc
sbb
loope
shr
jl
retf
mov
adc
pop
cmc
sbb
cdq
pop
pop
mov
imul
das
(bad)
xor
cwde
mov
icebp
and
or
xchg
mov
xlat
sbb
daa
xchg
xlat
sbb
shr
pop
jle
adc
add
test
sub
mov
xchg
pusha
and
addr16
imul
das
cmp
loop
adc
sahf
mov
fdivr
jmp
jecxz
in
xor
pop
cmp
push
js
or
(bad)
imul
xchg
movs
in
mov
xchg
dec
mov
movs
jns
push
dec
jmp
(bad)
ins
dec
mov
inc
pop
sbb
jmp
repz
shr
mov
jecxz
xor
mov
inc
out
std
sbb
test
adc
push
fsubr
gs
dec
adc
hlt
neg
repnz
mov
cli
adc
push
(bad)
mov
inc
jb
or
imul
out
in
sub
outs
lea
mov
in
les
scas
cmps
sbb
push
jp
xchg
jbe
mov
sbb
std
push
mov
adc
(bad)
(bad)
xor
call
adc
jl
shr
xlat
sahf
cld
sub
aas
sahf
pop
push
sbb
and
xchg
sbb
sbb
or
shl
dec
out
(bad)
mov
test
cmp
nop
int3
std
sub
repnz
dec
jae
push
les
mov
std
jnp
mov
mov
rcl
shl
rcl
div
pop
pop
mov
xor
pop
gs
or
jmp
fiadd
mov
mov
scas
scas
xor
inc
mov
adc
add
lods
xor
call
inc
jp
(bad)
pop
push
mov
fdivr
stos
dec
and
sbb
push
jo
frstor
mov
push
lock
mov
adc
call
ss
rcl
repz
or
xchg
jo
adc
jnp
in
movs
jle
out
cs
cli
outs
aam
pushf
aad
or
sub
es
call
jge
xchg
mov
dec
aad
loop
cpuid
ins
outs
aam
inc
imul
arpl
retf
mov
dec
xchg
jmp
xchg
test
cli
dec
xorps
stos
and
push
sahf
xchg
cmp
mov
loop
or
adc
nop
pop
cmp
adc
and
push
push
xchg
sahf
sti
or
sbb
vpackuswb
cwde
mov
push
jmp
inc
lds
shl
or
push
cmp
xchg
add
fisttp
jge
idiv
or
repz
std
aad
mov
test
repz
fmul
sbb
adc
aas
pop
xor
nop
aam
xor
dec
pop
xchg
cmp
loopne
ja
in
jmp
js
push
inc
fisubr
ins
test
sahf
mov
cmp
test
xchg
outs
nop
inc
hlt
pop
loop
call
push
jns
or
mov
repz
rcl
mov
mov
bound
scas
or
pop
or
xor
adc
add
pop
inc
sbb
push
jmp
mov
leave
pop
imul
and
or
jl
xchg
lahf
adc
adc
xchg
imul
adc
fucomip
pop
adc
movs
dec
xor
xor
daa
jge
xchg
add
add
pushf
fstp
add
and
popa
std
jbe
cmc
mov
mov
mov
(bad)
fcom
(bad)
lds
sbb
iret
imul
ds
stc
and
(bad)
push
inc
and
mul
int
in
ja
mov
or
outs
jb
sub
mov
cld
repnz
cmp
lea
inc
ror
xlat
pop
add
xor
push
inc
fistp
adc
ja
sub
inc
push
inc
xor
pop
or
outs
push
adc
ror
daa
adc
jle
lock
sub
pushf
dec
jnp
cmp
sbb
and
sub
xchg
push
aad
adc
or
sub
mov
inc
mov
jg
loopne
lock
ins
xchg
rcl
dec
jge
call
mov
imul
and
rcr
lea
adc
cmovnp
push
lods
dec
cmps
adc
pop
adc
and
jle
mov
stos
jno
add
jb
xor
cmp
shl
ins
jmp
mov
mov
mov
pop
sbb
test
int
push
sbb
adc
mov
es
push
pop
xchg
ret
mov
push
loop
aam
lods
icebp
mov
and
out
cmc
adc
or
nop
mov
lock
pop
jae
retf
lods
jno
ins
jo
lods
pop
aaa
mov
adc
xor
inc
daa
enter
and
test
into
pop
fst
mov
repz
fld
jo
mov
rol
xor
and
(bad)
out
gs
repz
pop
icebp
pusha
mov
(bad)
fmul
addr16
shr
fs
repz
rcl
sahf
lods
outs
adc
push
pop
icebp
sti
pop
mov
movs
sbb
inc
rcl
iret
push
rcl
nop
inc
les
pop
push
jmp
es
xchg
test
jb
xchg
jmp
scas
xor
push
push
out
sub
(bad)
js
and
sbb
retf
sub
push
fmul
pusha
cmp
mov
inc
mov
xchg
loop
popf
cdq
cmp
mov
jmp
xchg
cwde
pop
xor
mov
ins
push
ss
add
hlt
dec
shl
dec
mov
out
scas
out
or
and
jbe
das
jns
xchg
sbb
es
test
sbb
pusha
mov
xchg
aaa
dec
imul
xchg
movs
ficom
and
jns
lods
scas
shr
mov
or
adc
sti
mov
mov
lds
in
adc
clc
mov
push
sbb
mov
adc
retf
inc
xor
push
repnz
sub
and
and
in
test
aad
adc
jb
mov
xchg
pusha
jmp
push
je
mov
inc
stos
movs
shr
ret
outs
inc
jo
js
movs
lods
ds
ror
(bad)
cld
mov
pause
pop
sub
sub
cmps
inc
rol
in
jle
add
push
imul
pop
pop
enter
lods
jmp
sbb
xor
in
sar
and
(bad)
mov
jo
push
mov
enter
mov
ds
mov
sti
xchg
pop
mov
or
dec
scas
and
adc
(bad)
rcl
jne
cmp
jmp
jne
adc
mov
cmp
pop
mov
jge
cmp
pop
cmp
pop
mov
sbb
sbb
and
dec
xor
add
cmp
cdq
pop
out
push
mov
jge
mov
cmp
nop
push
lock
xchg
mov
mov
sub
cmp
(bad)
cmps
clc
data16
test
cmc
stos
pushf
je
adc
retf
(bad)
data16
stc
pusha
sub
pop
mov
mov
mul
movs
das
jmp
mov
inc
bound
loop
test
in
repnz
call
xchg
mov
pop
movs
aam
cdq
and
fsubrp
daa
(bad)
repz
sub
repnz
lds
add
dec
aaa
loope
push
gs
pushf
xlat
mov
jne
ret
rcl
jmp
dec
test
sti
ins
repz
retf
xor
inc
in
push
stc
sub
sbb
adc
(bad)
jg
pop
xor
lods
pop
or
mov
movs
out
retf
dec
xor
xor
inc
mul
jmp
and
mov
pop
sub
push
repz
fmul
mov
mov
js
sub
(bad)
loopne
add
inc
bound
sub
out
xor
mov
xchg
sub
ja
dec
pop
nop
aad
cmp
push
xor
pop
xchg
ins
test
test
mov
stos
clc
ret
repz
push
(bad)
int3
jne
ins
fst
mov
mov
out
mov
mov
inc
jno
rcl
fidivr
add
lods
leave
sbb
or
jne
ds
fst
out
retf
or
sbb
dec
jecxz
mov
das
int
push
jae
jns
arpl
sub
xchg
stos
or
cmp
pop
les
xor
and
add
push
pop
dec
mov
pop
mov
sbb
daa
and
or
add
iret
inc
in
sub
int
pop
add
repz
inc
fld
adc
lock
je
cmp
(bad)
(bad)
dec
push
enter
pop
xchg
dec
lds
mov
sbb
pop
jne
lods
cmp
xor
mul
jb
ficom
inc
jno
les
inc
nop
retf
mov
mov
and
imul
jne
mov
add
cdq
(bad)
add
jp
lods
xchg
mov
pop
mov
jne
sahf
scas
stos
cli
(bad)
sbb
in
ds
aas
into
sub
mov
cmp
stc
jae
rol
mov
mov
or
pop
and
xor
xchg
cmp
sahf
(bad)
in
pop
sbb
sbb
lods
pop
outs
xor
mov
retf
mov
push
leave
dec
aam
xor
mov
leave
xlat
cmp
addr16
shr
idiv
(bad)
test
rol
push
cmps
mov
imul
in
adc
pop
into
jl
imul
mov
jmp
push
ret
cmp
or
adc
clc
out
pop
aam
repz
inc
int3
ret
lea
add
gs
pushf
mov
cmp
js
jg
imul
sbb
or
(bad)
pop
fadd
retf
jb
fdivr
sub
les
pop
add
lds
add
mov
and
fmul
inc
call
inc
es
or
mov
es
mov
stos
aam
(bad)
fmul
push
enter
loope
(bad)
jle
aaa
xor
mov
dec
mov
stos
sub
and
sub
add
jb
jae
cmp
leave
hlt
mov
inc
sub
add
inc
in
mov
mov
push
pop
mov
cmp
jecxz
out
jge
sub
sti
(bad)
not
dec
into
xchg
and
sub
mov
jno
imul
mov
aaa
and
clc
xor
jl
sti
xor
add
das
outs
inc
cld
in
add
ds
cmp
dec
inc
in
outs
or
jmp
sbb
xor
rcr
sahf
dec
scas
xor
sbb
lahf
out
stos
(bad)
leave
mov
mov
sti
sti
push
xchg
call
cmp
dec
sbb
shr
or
cmc
mov
mov
adc
cmp
inc
push
add
xchg
jno
cmc
and
in
lock
inc
hlt
xchg
aas
sbb
jge
leave
nop
gs
mov
xor
mov
cld
xor
cwde
enter
dec
(bad)
mov
mov
pop
les
(bad)
neg
out
hlt
adc
sub
and
cwde
aad
pop
pop
inc
mov
sub
inc
push
js
and
jno
xchg
(bad)
cmp
pop
test
lea
(bad)
jno
sahf
js
xor
retf
sbb
leave
test
mov
xchg
cmp
fsubr
xor
fwait
mov
dec
jmp
ins
mov
xchg
jno
and
popa
xor
sub
fadd
push
rol
nop
sub
inc
dec
repz
push
retf
push
sub
sbb
sti
sbb
cmp
enter
inc
push
ds
pop
push
retf
daa
inc
in
(bad)
add
xor
lahf
cmp
xor
nop
test
and
test
pop
mov
mov
aaa
xchg
dec
mov
xchg
inc
das
dec
rcl
loop
dec
jle
in
push
cmps
mov
ficom
add
jle
sbb
mov
out
xchg
mov
bound
xlat
xchg
cmps
pop
pop
mov
shr
inc
daa
xor
push
xchg
cwde
nop
or
bound
and
adc
cmp
pop
pop
out
cli
inc
xchg
(bad)
dec
jns
xchg
xchg
fdivr
ins
or
enter
lock
cmc
add
jmp
inc
dec
pop
inc
scas
aad
jnp
inc
add
bound
push
mov
dec
sub
in
sti
cmp
lock
cli
or
test
jnp
(bad)
mov
lock
test
jne
xor
xchg
enter
aaa
push
mov
loop
inc
mov
cs
addr16
ds
jecxz
xchg
(bad)
mov
add
or
add
cmp
(bad)
fdiv
cmps
adc
xor
dec
js
pop
cld
xchg
dec
pusha
std
loopne
push
xchg
(bad)
dec
scas
ret
push
mov
das
mov
stos
jle
jl
fwait
test
xlat
sub
mov
push
push
sbb
mov
jne
ins
adc
push
ja
cld
stc
outs
cmps
cwde
push
sbb
int
sub
xchg
push
scas
std
or
dec
gs
sub
sbb
mov
or
xchg
xchg
cmc
rcl
xchg
movntq
jae
sub
out
xor
cld
addr16
add
xchg
jge
cmps
mov
mov
in
es
in
sbb
pusha
pushf
int
inc
push
push
fs
(bad)
lock
push
jle
push
arpl
pop
dec
leave
lahf
mov
movs
inc
push
lock
mov
xchg
call
adc
imul
movs
loope
pop
and
bound
sbb
add
xor
leave
push
pop
mov
add
(bad)
adc
mov
(bad)
int3
shl
sub
cmp
iret
xor
dec
jae
ror
mov
je
repnz
jb
fbstp
mov
or
push
and
enter
fsubr
adc
sahf
int
icebp
cmc
ret
mov
pop
mov
ins
lock
(bad)
push
sti
rol
sub
xchg
sub
xor
mov
popf
pop
enter
jo
mov
pop
push
in
cmp
fst
out
arpl
ins
outs
hlt
add
(bad)
jb
bound
test
in
jmp
mov
outs
sbb
xchg
mov
fnstcw
gs
mov
sbb
jbe
mov
int
das
call
(bad)
out
scas
popa
popa
inc
cmp
addr16
adc
cs
imul
or
push
mov
bound
(bad)
nop
pop
push
inc
and
pop
jl
out
cli
in
aam
loope
dec
pop
daa
xchg
cmps
fucomp
jecxz
dec
or
jno
repz
cli
mov
std
xor
leave
fcmovnb
out
fbstp
mov
pop
call
outs
jae
nop
push
cdq
xchg
push
pop
in
jo
enter
cmp
das
add
dec
cwde
pop
ds
xor
pop
(bad)
scas
or
cs
pop
add
sbb
pop
jnp
mov
idiv
add
sub
push
sub
inc
repz
lods
ss
add
sub
mov
sub
out
cmps
push
das
or
jb
pop
push
inc
sbb
fwait
test
mov
int
js
cmc
mov
fldcw
pop
and
xchg
cmps
xchg
push
sbb
fld
mov
sub
bound
test
xchg
cmp
das
dec
and
aam
push
repz
xor
jo
push
lea
das
sub
aad
sbb
imul
add
cdq
mov
repnz
or
loopne
ret
cdq
inc
call
push
dec
lods
and
fs
dec
das
(bad)
clc
sub
adc
nop
push
cmp
jge
mov
les
call
cmps
ret
jbe
and
jg
sub
cmp
add
push
mov
sti
jp
mov
imul
push
mov
dec
mov
mov
repz
icebp
ins
xchg
mov
push
mov
or
pop
and
xor
mov
iret
xor
xchg
jg
mov
ret
mov
adc
push
icebp
push
mov
jno
outs
mov
mov
push
or
das
lods
(bad)
mov
or
adc
xchg
call
cmp
in
ja
cld
cmp
sub
out
aaa
arpl
push
xchg
dec
dec
xchg
ds
xchg
movs
mov
xor
add
mov
cld
jae
(bad)
lock
popa
(bad)
enter
repnz
ds
std
(bad)
(bad)
xchg
test
repz
dec
test
and
dec
loop
hlt
mov
movs
ret
pop
mov
xchg
scas
add
inc
fs
or
jle
jbe
enter
fiadd
mov
(bad)
jp
shl
xor
hlt
inc
jp
loop
movntps
add
hlt
xchg
mov
std
push
aaa
mov
xor
mov
rcl
pop
nop
mov
inc
sub
enter
inc
ins
aas
mov
lock
sbb
pusha
sub
sub
mov
data16
rol
or
push
jmp
fcom
int3
fild
add
jle
test
popf
xor
loop
out
std
inc
inc
popf
add
mov
adc
xlat
mov
jge
ja
cli
retf
adc
mov
mov
imul
cld
adc
arpl
jge
cmp
adc
cmps
mov
call
rcr
mov
mov
and
jmp
punpcklbw
aad
pusha
div
cs
mov
mov
sbb
pop
pop
lahf
cmp
push
cmps
shl
inc
sar
inc
test
jae
in
mov
adc
cmc
div
cmps
dec
movs
dec
call
jno
jbe
push
adc
int
push
push
cs
(bad)
cmp
call
loop
cwde
out
xchg
mov
push
and
pop
dec
inc
loope
fdiv
and
stos
inc
int
cmp
sub
jae
lock
xor
cwde
hlt
stc
aaa
adc
fidiv
or
adc
nop
xchg
imul
aam
xor
cmps
pop
ret
mov
gs
sar
test
jle
and
nop
std
and
and
adc
stos
push
lea
rol
add
adc
jg
xor
adc
fs
mov
mov
inc
jnp
(bad)
in
idiv
sub
scas
enter
sub
dec
mov
imul
mov
(bad)
mov
cmc
je
call
mov
stc
dec
sbb
mov
(bad)
mov
cmp
inc
test
dec
mov
repz
pop
out
les
xlat
loopne
mov
sub
push
cmps
les
xchg
fdiv
out
addr16
jbe
mov
inc
sar
cmp
retf
cld
cmp
test
sahf
into
push
mov
gs
movs
or
push
and
and
loopne
movs
mov
gs
dec
loop
inc
fisttp
aad
sub
jns
inc
mov
sbb
dec
jne
mov
sbb
iret
js
and
inc
int
sub
mov
inc
test
and
dec
pushf
icebp
dec
mov
sbb
pushf
dec
into
jmp
mov
mov
dec
sbb
add
hlt
inc
lahf
mov
cld
mov
outs
aam
cmp
ret
ja
popf
sahf
pop
cmp
mov
ret
repz
into
cmp
inc
fmul
(bad)
out
call
mov
imul
retf
push
jecxz
iret
mov
loopne
pop
push
push
mov
ins
fnstcw
cmp
adc
sbb
icebp
push
adc
cwde
retf
aam
int
mov
xchg
(bad)
imul
movs
pop
dec
inc
add
sbb
jbe
inc
push
sbb
pop
or
pop
add
icebp
pop
(bad)
mov
or
mov
in
add
inc
data16
out
rol
retf
cdq
loop
jecxz
dec
lods
call
inc
call
pop
jbe
rcl
pop
rol
stos
push
fsubrp
mov
mov
lahf
adc
mov
adc
or
repz
mov
test
push
cmps
sbb
mov
ret
dec
push
aam
adc
mov
and
push
inc
pop
ja
retf
xor
arpl
sub
pop
pusha
repnz
adc
std
push
(bad)
mov
loope
lahf
jl
movs
les
loope
pop
sbb
in
xchg
pop
mov
jne
mov
lock
inc
cli
add
enter
jmp
int3
dec
je
aaa
into
imul
popa
dec
jb
xchg
adc
scas
mov
rol
xchg
repnz
shl
inc
lds
arpl
jne
hlt
js
pop
jp
and
pop
sub
jmp
pop
xchg
outs
pop
stos
arpl
push
adc
sbb
add
loopne
push
jmp
mov
xor
popa
and
and
jae
pop
push
loopne
jp
jb
into
sahf
sbb
adc
jb
fist
in
arpl
cmps
mov
popf
and
gs
mov
(bad)
xlat
push
ret
cli
dec
sbb
movs
adc
int
cmc
ret
mov
aad
fstp
(bad)
jb
imul
jne
inc
xlat
push
jnp
xor
push
sahf
xor
push
iret
icebp
mov
inc
jmp
mov
in
cmp
imul
jnp
mov
jg
pop
push
ror
ret
jb
call
pop
les
sbb
popf
mov
mov
xlat
or
mov
hlt
les
fwait
or
jg
dec
pop
cmps
imul
sbb
jae
add
dec
(bad)
or
xchg
out
xor
ret
adc
add
mov
test
dec
inc
fcmovne
xchg
daa
cmp
mov
push
inc
outs
cmp
(bad)
mov
jnp
jns
adc
addr16
push
fcomp
mov
push
mov
pop
sub
mov
out
pop
mov
add
jno
xchg
xor
xor
jbe
call
fadd
std
jg
test
inc
jmp
les
pop
push
sub
mov
shr
xchg
cmps
and
xor
push
push
fild
ds
cmc
mov
jns
push
xor
lahf
ins
adc
pop
leave
mov
movs
xchg
jg
addr16
jge
mov
adc
cmp
add
cld
sbb
jl
ds
ins
fist
bound
outs
push
in
mov
hlt
daa
cmp
cmps
fsincos
pop
pop
mov
push
xchg
sub
xor
mov
into
sub
stos
xor
jb
cld
mov
adc
pop
cmp
sbb
es
aad
sub
dec
cmp
jecxz
cmp
rcr
test
inc
cmp
pop
sar
push
bound
mov
daa
ror
xor
outs
outs
retf
xchg
fistp
outs
mov
into
ins
(bad)
leave
pushf
xchg
rol
popf
ror
mov
out
xor
push
dec
pop
adc
cs
arpl
call
push
not
push
sti
shr
push
push
jecxz
fwait
cdq
push
xchg
mov
clc
dec
lock
into
xchg
mov
mov
rcr
inc
jg
out
mov
dec
cmp
call
(bad)
mov
fisub
adc
pop
repz
xchg
pop
pop
sub
sbb
jmp
push
lahf
jmp
xchg
popa
fstp
iret
lock
pop
add
push
cmc
sub
sub
ror
push
dec
loopne
mov
jns
cmp
xchg
sub
sbb
dec
pushf
sbb
daa
xor
sub
sbb
and
xchg
cmp
add
outs
push
ret
adc
lahf
test
mov
pop
sub
mov
mov
push
ja
sbb
nop
push
mov
add
loope
(bad)
aad
mov
add
jns
movs
and
mov
jno
sbb
or
push
test
xchg
pop
mov
inc
inc
add
push
(bad)
call
ins
mov
jnp
mov
adc
out
ret
mov
scas
jmp
(bad)
push
jno
std
dec
pop
out
out
jno
dec
sbb
push
and
in
pop
not
mov
std
xor
loopne
fmul
dec
test
in
inc
inc
xchg
sti
sbb
pop
fidiv
and
les
sub
adc
scas
mov
push
xchg
and
aam
loope
pop
jg
fsub
jnp
or
push
dec
bound
adc
retf
pop
popf
jno
mov
cwde
dec
mov
adc
loope
test
movs
pop
mov
xor
mov
imul
sub
dec
pusha
jge
mov
loopne
(bad)
and
cdq
adc
in
clc
stos
popf
std
ror
ds
rcl
sbb
cmp
cmc
xor
xchg
push
jne
lock
movs
inc
fwait
ret
jno
ror
adc
and
jb
mov
pop
popf
imul
pop
xchg
adc
dec
les
xchg
test
inc
out
(bad)
pusha
ret
leave
(bad)
ins
cdq
mov
sub
add
pop
xchg
stc
call
mov
ins
out
push
inc
ret
loope
push
adc
or
push
daa
test
or
test
loopne
scas
inc
les
xchg
mov
imul
mov
stos
sub
loopne
cmc
and
jmp
dec
jp
daa
mov
dec
lods
mov
ret
fs
cli
pop
and
xor
scas
call
sbb
out
mov
pop
and
add
jmp
mov
pop
jo
shl
out
sub
dec
xchg
test
pop
int
rcl
mov
inc
std
push
sub
or
retf
pop
cmp
dec
or
pop
push
in
jbe
leave
in
push
push
(bad)
adc
ret
mov
repnz
push
pop
jmp
ret
ja
pop
add
(bad)
mov
pop
jo
xor
or
dec
cmc
push
or
xchg
ja
adc
adc
cmp
bound
loope
adc
and
mov
cmp
and
sub
aam
adc
push
ins
dec
cmp
bound
sub
cmc
jp
xchg
or
movs
fmul
test
(bad)
pop
ret
xor
pop
jmp
pusha
xor
call
lods
inc
pop
cmp
and
jnp
test
(bad)
lods
test
xchg
adc
loopne
adc
push
icebp
out
gs
inc
inc
mov
aad
mov
lods
iret
repnz
mov
(bad)
pusha
fwait
jp
mov
lds
pop
fs
inc
call
mov
inc
inc
shl
xor
sub
add
xchg
mov
dec
push
lock
pop
xchg
xchg
cdq
push
sub
sbb
fimul
fistp
inc
add
adc
nop
inc
retf
iret
pop
sub
mov
iret
sub
ins
pusha
add
cmp
call
mov
pop
jg
arpl
and
data16
js
fsubrp
test
and
jg
fs
stos
inc
cmp
push
cwde
xchg
imul
sbb
mov
mov
outs
jmp
fisubr
pusha
fadd
push
mov
retf
cdq
mov
out
shr
je
inc
jns
in
(bad)
(bad)
test
call
aam
jle
(bad)
adc
cmp
test
inc
pop
shl
dec
mov
pop
mov
mov
cdq
or
les
fisubr
mov
pop
jle
sbb
addr16
pop
cmp
shl
lahf
or
bound
lock
aad
imul
adc
mov
ret
cli
dec
sbb
aam
jge
aam
pop
jg
jb
mov
push
push
std
or
outs
(bad)
leave
adc
das
mov
test
mov
(bad)
mov
mov
test
and
mov
xchg
sub
inc
adc
or
mov
add
ja
gs
cmp
ret
cdq
(bad)
cmps
test
pop
jmp
push
sub
pop
movs
xor
aaa
mov
sub
repz
or
pop
scas
sub
sbb
add
pop
loope
pop
movs
push
pop
or
movs
mov
movs
xlat
sub
outs
ret
xor
mov
addr16
sbb
dec
mov
ret
retf
sbb
sahf
push
loope
es
push
inc
cmp
sbb
add
aaa
fsubrp
mov
xchg
add
dec
xchg
dec
outs
loopne
mov
ins
call
xor
adc
and
fucomip
les
mov
jge
cmovs
xor
jo
rep
jmp
ror
push
jne
in
cmps
ret
outs
add
mov
arpl
dec
jbe
or
retf
aam
pop
nop
ret
mov
test
rcl
frstor
inc
pusha
inc
in
dec
pop
aam
add
inc
adc
ret
enter
mov
jae
push
enter
stc
into
cmp
adc
and
mov
or
cmps
test
push
(bad)
cmc
sbb
mov
pop
neg
add
ja
ror
adc
mov
pop
sub
es
inc
xor
cdq
pop
(bad)
ror
lds
dec
stc
xor
push
(bad)
jge
test
int3
(bad)
pop
clc
fwait
hlt
aam
sub
in
lock
call
popa
dec
pusha
cmps
jnp
jb
ds
dec
push
mov
sub
pop
(bad)
xor
sbb
sub
loopne
jb
imul
mov
push
sbb
push
fisub
retf
ds
jmp
mov
cmp
in
cld
mov
pop
dec
or
or
pop
call
xor
sahf
(bad)
in
cmps
imul
iret
inc
and
add
pusha
cwde
out
iret
push
aaa
mov
mov
shl
add
mov
mov
popf
xor
xor
call
test
xor
inc
je
add
jne
pop
push
jne
pcmpeqb
das
mov
jmp
fdiv
mov
mov
retf
push
sar
pop
dec
loope
cmp
je
dec
stos
inc
push
adc
jecxz
push
push
mul
das
ret
inc
sub
aas
add
je
int
mul
mov
hlt
jg
adc
icebp
pop
scas
sub
inc
cwde
add
dec
sahf
mov
ins
cmp
repz
(bad)
and
scas
mov
mov
loopne
pop
pop
adc
fcmovb
sbb
or
popf
mov
cmp
xor
and
xor
aam
push
sbb
stos
push
sbb
sub
jg
sub
push
mov
jg
mov
inc
sbb
(bad)
jmp
mov
imul
jg
push
int
inc
inc
aam
or
in
xchg
add
sbb
xor
sub
adc
add
aaa
fwait
sub
(bad)
xor
xor
stos
xor
cdq
bound
arpl
push
ja
sbb
repz
test
mov
fnstenv
cli
cmp
je
in
dec
sub
dec
mov
call
mov
mov
adc
mov
loop
(bad)
xor
xchg
popf
xor
and
test
cmp
ss
rcr
jle
(bad)
out
sbb
cmp
fistp
out
mov
gs
iret
push
inc
jb
pop
ret
adc
sbb
jns
mul
sub
jl
jns
pop
int
jno
and
push
push
inc
mov
pop
fist
repz
xchg
push
stos
arpl
jbe
(bad)
and
and
dec
push
sub
sub
push
push
lahf
in
scas
int
pop
cmc
fstp
cs
jp
int3
xor
ret
cs
dec
aam
int3
cwde
add
int3
sub
pop
and
call
popa
ja
ins
in
mov
int3
call
dec
add
ins
jbe
mov
fs
mov
cdq
call
js
sub
jbe
out
test
sbb
(bad)
sbb
mov
xor
je
in
xor
and
xor
pop
ss
in
loop
and
cwde
push
and
jns
jge
repnz
cmp
pop
ds
pop
cmps
mov
pop
mov
lea
pop
call
(bad)
movs
lods
test
lea
cmp
mov
add
out
push
cmp
jnp
pop
aam
mov
mov
mov
test
out
or
div
mov
cmp
(bad)
outs
inc
and
jns
mov
jne
mov
mov
xchg
je
pop
lods
jle
xchg
es
call
test
mov
push
retf
cmp
test
stc
ss
mov
cmp
mov
xchg
mov
mov
xor
cmps
pop
sub
xor
rcr
(bad)
cld
xchg
jnp
and
adc
mov
test
out
out
imul
fsub
fadd
push
aaa
mov
fstp
sbb
add
xor
test
mov
addr16
adc
mov
fist
imul
adc
cmps
or
call
out
(bad)
mov
adc
mov
xchg
loopne
aaa
mov
dec
and
ins
out
fs
xor
jp
cmp
xor
ds
(bad)
xlat
rol
jns
enter
or
push
pop
dec
dec
cmp
lds
mov
stos
(bad)
add
add
lahf
jo
jbe
mov
out
dec
shl
loop
shl
aad
mov
pusha
sbb
cmp
dec
stc
je
jb
jbe
inc
pop
or
and
or
mov
fidiv
xor
xor
push
jne
stos
ror
push
jno
add
cld
xchg
rol
pop
mov
sbb
fdivr
pop
cmp
rcr
mov
test
ds
mov
and
jo
ja
mov
pop
scas
xchg
and
adc
cmps
(bad)
push
adc
test
fwait
cmp
int
and
add
inc
into
inc
dec
nop
imul
sti
gs
test
sub
add
fs
xlat
fisttp
data16
xor
jecxz
mov
imul
cmc
mov
je
mov
or
push
push
lds
cmp
and
out
adc
xchg
cmp
push
je
inc
cmps
lods
std
das
pop
movs
nop
mov
arpl
je
es
cmp
or
mov
sti
inc
push
pushf
or
sub
push
sub
xchg
add
ins
and
xor
sub
leave
sub
je
push
push
push
xor
and
xor
aaa
jp
and
movs
jg
out
mov
lds
cmps
adc
out
xor
(bad)
fucomp
int
adc
stos
ins
cwde
pop
adc
dec
cli
mov
mov
lea
out
out
mov
test
hlt
pop
push
push
pop
sub
pop
ret
fimul
adc
lahf
repz
add
rep
mov
lea
push
repz
mov
push
inc
lds
fstp
in
pop
sahf
std
adc
(bad)
int3
sub
mov
rcr
cmp
mov
fdivp
xchg
xor
cmps
gs
loopne
enter
xor
ins
cmp
popa
imul
dec
sub
cmp
inc
repnz
xlat
inc
jae
pop
add
out
ja
xchg
push
ror
xor
xchg
idiv
cmp
out
ins
outs
adc
repnz
push
cmc
xor
jmp
js
inc
test
pop
and
aam
jp
mov
in
xchg
(bad)
push
stc
mov
sbb
push
hlt
push
jb
inc
inc
push
test
sub
dec
add
xchg
or
mov
xor
(bad)
or
jle
cmps
jg
repnz
xor
loopne
aas
push
ins
sbb
jno
inc
neg
stc
xchg
in
mov
test
jmp
adc
sbb
movs
dec
xchg
in
out
out
xor
ins
shl
cld
add
mov
push
(bad)
jnp
daa
rcr
lahf
mov
outs
in
imul
inc
loopne
pop
xlat
mov
cmc
inc
inc
pushf
iret
mov
pop
jmp
xchg
push
sub
and
test
push
jae
je
mov
jmp
mov
and
push
pop
sbb
(bad)
aam
repnz
imul
and
into
popa
jae
sbb
out
and
cwde
fsub
aad
ja
and
push
sbb
ins
scas
pop
inc
mov
push
je
test
loope
outs
fsubr
into
push
das
lods
xor
inc
(bad)
ss
xor
mov
icebp
xor
das
jmp
push
jg
call
xchg
into
xlat
into
push
dec
out
push
xor
mov
retf
arpl
push
sub
adc
mov
repz
int
scas
jae
(bad)
jbe
test
hlt
pop
push
jle
cmps
int
dec
jp
dec
mov
pop
into
push
mov
lock
mov
test
pop
jmp
sub
mov
mov
and
dec
jp
xor
xchg
std
(bad)
xchg
out
add
test
outs
or
xor
rcr
mov
fist
push
int
or
xor
mov
sbb
into
xor
dec
mov
bndstx
ds
jne
sub
and
aas
add
lock
repz
lahf
jae
mov
cdq
sbb
cwde
ret
(bad)
imul
dec
out
in
ret
bound
sahf
pushf
xor
ja
pop
pop
xchg
mov
xor
ins
aas
xchg
inc
enter
cdq
cmp
retf
sahf
aas
inc
pop
pop
cmc
xchg
cdq
outs
ins
mov
hlt
out
or
pop
inc
mov
sbb
ss
dec
add
popa
fs
xor
je
retf
jle
int3
xor
loope
aas
cmc
adc
(bad)
add
push
mov
inc
sbb
dec
std
call
mov
push
mov
or
sub
add
mov
rol
jmp
pop
shr
xchg
fnstcw
ret
mov
cmp
cwde
push
sub
int3
cmp
popa
imul
shl
ror
jle
sahf
fcom
pop
push
mov
(bad)
out
and
in
sahf
outs
add
(bad)
jle
jbe
push
jmp
js
pop
lea
or
mov
sbb
ins
xchg
xchg
daa
out
imul
test
fdivp
mov
daa
lods
push
jno
cmps
rcl
lds
movs
or
cli
sub
xor
cmp
sar
sbb
sub
xor
dec
fbld
ficom
push
push
xor
xor
out
out
xchg
popf
call
mov
mov
push
rcl
lods
mov
retf
pop
pop
fsub
out
sub
shl
jb
mov
leave
dec
fistp
mov
inc
ss
data16
push
add
into
or
test
or
inc
xchg
fcom
mov
pushf
lahf
jmp
and
sub
jno
ret
push
sub
enter
sbb
mov
fcom
sbb
mov
pop
and
dec
mov
xor
add
xlat
cmps
or
pop
xchg
adc
add
cwde
pop
cmp
fisttp
xchg
dec
or
pop
cmp
ins
xor
fisub
pop
jmp
mov
nop
retf
loop
cmp
int3
jne
and
xchg
test
adc
xor
xchg
push
or
jmp
dec
xchg
loope
std
jb
pop
dec
mov
neg
popf
shl
push
mov
sar
pop
or
repz
pop
imul
sub
mov
cmp
ret
(bad)
push
mov
outs
loop
push
inc
gs
sbb
push
fnstsw
(bad)
jg
loopne
shl
aad
call
int
jno
cld
(bad)
jae
rol
cmp
pop
pop
sub
add
punpcklwd
add
repz
lea
xchg
ror
mov
jbe
in
cli
and
adc
sar
xor
sbb
aaa
dec
mov
loope
outs
cmp
btr
jl
dec
or
sub
jmp
cs
and
jae
fnstcw
lods
ret
outs
mov
sbb
dec
into
mov
push
sub
mul
push
aas
cmp
pop
hlt
mov
adc
movs
jno
out
xor
loope
sahf
stc
mov
outs
inc
mov
movs
fisttp
hlt
and
sahf
inc
mov
adc
(bad)
cmp
cld
inc
sbb
mov
pop
in
arpl
sbb
and
dec
adc
jle
xor
ret
scas
cld
sub
mov
jae
fdiv
adc
out
ficom
idiv
(bad)
jbe
and
xor
fsubr
xor
leave
push
dec
cmp
stos
lods
test
lahf
push
addr16
pop
push
or
(bad)
in
arpl
lock
mov
sbb
push
dec
mov
jo
repnz
or
popf
xchg
pushf
jl
cwde
cmp
sbb
or
inc
js
jmp
std
js
xchg
lods
scas
mov
xchg
out
(bad)
xchg
dec
jle
out
nop
repnz
mov
ret
add
xchg
mov
movs
ror
cmps
pop
xchg
fadd
lea
dec
pop
xchg
cmp
push
sub
jge
std
add
pusha
pop
loop
outs
xchg
mov
sub
jb
gs
aas
inc
cmp
rol
lods
pop
dec
cmp
mov
cli
popf
pushf
enter
(bad)
clc
ror
and
or
sar
int
jo
sbb
adc
mov
sub
fnstenv
and
mov
sbb
addr16
test
push
cmp
push
push
sti
std
or
lock
sub
lods
cmc
sbb
seta
xchg
jno
test
mov
cmp
adc
das
out
jp
mov
lds
xchg
jmp
adc
fild
iret
add
iret
push
jp
mov
in
shl
mov
sub
stos
push
or
mov
or
add
lock
rcl
cmps
sbb
mov
or
or
xchg
test
sbb
push
jbe
jb
loope
and
add
cmp
xchg
or
xchg
hlt
mov
push
mov
pop
pop
int
mov
or
xor
fidiv
sub
or
leave
dec
aad
pop
xlat
mov
sub
stos
bound
and
xlat
inc
pop
shl
mov
jmp
inc
out
jb
fidiv
mov
popf
bound
ds
stos
add
stc
fisubr
sbb
scas
or
sub
fldcw
jns
or
shl
dec
lods
sub
sub
adc
add
pushf
ficom
movs
mov
cmp
dec
cli
ins
(bad)
out
je
mov
sbb
push
dec
ss
in
pop
pop
dec
test
test
mov
jmp
xchg
pusha
pop
test
mov
imul
clc
in
fnsave
add
pop
push
pop
test
jle
pop
inc
jns
mov
mov
fiadd
add
fisubr
add
call
out
(bad)
call
mov
aam
scas
or
je
cmp
aad
sub
std
sub
addr16
(bad)
add
sbb
mov
or
fcmovu
movs
lods
cmp
mov
mov
int3
enter
mov
push
inc
(bad)
stos
test
mov
(bad)
pusha
sub
fld
mov
dec
mov
popa
std
ret
inc
mov
fincstp
cmp
rcr
jp
outs
(bad)
popf
pop
aam
(bad)
sbb
push
outs
test
rep
mov
(bad)
leave
out
xor
sbb
mov
in
inc
clc
fstp
bound
popf
call
icebp
imul
ins
retf
jg
mov
add
and
pcmpgtw
loopne
fild
adc
or
xor
mov
ss
movs
cwde
add
stos
dec
hlt
pop
test
pop
adc
fld
xchg
mov
cmp
xor
jnp
in
rcr
cmps
jmp
dec
cli
popf
or
fsubr
push
aam
js
cmc
push
cmp
les
pusha
imul
push
in
es
leave
mov
inc
std
sub
lock
add
push
cmps
sbb
xchg
push
dec
and
or
out
xor
fistp
sbb
pop
in
ja
lds
loope
jmp
lods
jno
lea
mov
js
popf
inc
(bad)
scas
jns
stc
call
aas
sub
jno
mov
(bad)
push
xchg
sub
xor
add
mov
enter
mov
xchg
inc
mov
pop
sbb
cwde
and
data16
xor
cmps
xchg
jmp
inc
dec
inc
cld
sbb
jbe
addr16
mov
or
xor
fld
inc
fidivr
scas
mov
mov
sahf
jle
add
or
xor
out
push
mov
test
loope
pop
retf
nop
mov
xor
(bad)
in
ja
out
add
mov
scas
xchg
cwde
out
lods
mov
in
xchg
mov
mov
add
xchg
call
add
mov
cld
add
arpl
xlat
pusha
pop
mov
mov
leave
out
push
pop
inc
dec
xchg
jo
jg
mov
mov
(bad)
push
(bad)
pop
movs
sub
into
daa
mov
outs
scas
push
add
ret
pop
inc
loop
mov
push
push
nop
ror
jl
aam
sub
mov
daa
lea
fdiv
out
push
mov
push
sti
or
rcl
mov
xchg
xchg
leave
xor
jp
es
xchg
mov
stc
add
jae
mov
jne
js
mov
dec
cdq
gs
jmp
(bad)
loope
stos
mov
(bad)
sahf
repz
test
jb
lock
dec
scas
xchg
sbb
iret
fisubr
jne
mov
mov
add
and
hlt
mov
inc
popa
xchg
shl
mov
jbe
lds
mov
in
pop
outs
mov
and
and
hlt
jne
mov
xchg
pop
xchg
cmp
and
les
jmp
push
int3
aam
fst
mov
adc
cmc
sub
scas
push
xor
push
(bad)
sub
aam
cmp
and
and
mov
push
adc
lods
gs
cmp
xor
out
test
ins
aaa
outs
mov
pop
add
dec
pop
pop
jae
add
aam
neg
cmp
mov
mov
inc
(bad)
ret
pop
mov
sub
mov
cmp
pop
xchg
jp
inc
movs
movs
pop
psubq
lods
les
cmp
xchg
adc
jae
aas
adc
push
fs
mov
imul
scas
mov
and
cs
cmp
add
mov
ficomp
mov
sti
dec
adc
out
or
mov
pop
test
add
jnp
test
dec
test
rol
push
ja
jecxz
pop
(bad)
loopne
push
xor
xchg
mov
mov
sub
rol
or
inc
sub
push
ins
xor
cdq
push
dec
push
pop
pushf
out
inc
mov
pop
pop
or
arpl
adc
das
shl
mov
mov
inc
das
sti
or
cmp
imul
push
sbb
scas
jo
mov
cs
scas
jns
xchg
movs
test
cmp
sbb
ss
dec
adc
ret
jp
adc
lods
fs
jnp
stos
mov
adc
sar
shl
adc
leave
hlt
pop
pushf
jge
enter
jge
mul
push
pop
dec
inc
pop
leave
xor
inc
mov
dec
mov
push
fdiv
pusha
and
je
mov
adc
test
mov
movs
fidiv
jl
scas
pop
push
test
ficomp
lahf
mov
jecxz
outs
mov
das
neg
sub
xchg
iret
sahf
outs
loopne
out
adc
pop
cs
cmps
js
xchg
mov
cmp
push
int3
pop
call
or
gs
or
push
and
or
cmp
mov
xchg
push
pop
stos
stos
mov
cld
sub
js
cmp
xchg
pop
inc
loope
sbb
ins
cmp
out
jge
push
pushf
in
das
or
out
mov
cmp
cmps
in
in
rcr
xchg
mov
pop
mov
cdq
arpl
or
ds
mov
sub
lds
sub
aad
ret
sbb
hlt
es
stos
mov
push
rcr
pop
inc
adc
or
pop
mov
jno
adc
outs
dec
add
cmp
aas
jno
call
imul
test
outs
push
add
xor
das
rcr
pushf
lea
in
adc
push
test
fsub
popa
sti
aam
fisubr
xchg
gs
out
push
jns
repz
dec
adc
mov
movs
adc
mov
cmp
push
shl
cs
and
hlt
mov
add
mov
ret
mov
or
xchg
pop
adc
xor
mov
pop
ret
mov
outs
jo
test
shl
fmul
fistp
in
(bad)
push
dec
(bad)
idiv
sbb
xor
shl
pop
mov
fs
sar
dec
pop
and
jp
push
mov
add
inc
dec
adc
aaa
fdivr
fcom
mov
mov
pusha
pop
pop
xor
push
xchg
mov
mov
cli
hlt
jo
call
jle
repnz
mov
sub
pop
repnz
dec
xchg
jne
imul
pushf
inc
adc
jg
call
lods
lock
out
xor
cwde
add
fdivr
mov
(bad)
or
sbb
shl
add
mov
outs
jo
ret
and
mov
(bad)
int3
mov
popf
(bad)
lods
sbb
add
xor
fild
aad
adc
mov
ja
mov
adc
pop
mov
mov
sbb
inc
fld
das
cwde
in
inc
pop
cmp
mov
dec
mov
out
loope
add
push
mov
mov
add
gs
dec
sub
fsub
in
fadd
sbb
or
aad
cli
fcmovnu
fstp
scas
jge
cmp
in
test
shl
xor
inc
jg
hlt
or
loopne
es
lea
sti
hlt
test
xchg
scas
in
lds
(bad)
movs
and
mov
mov
in
cdq
sahf
aam
lea
outs
ret
sub
xchg
add
loope
adc
clc
push
imul
inc
ins
popf
adc
popa
mov
add
call
mov
adc
jmp
inc
rcr
test
test
mov
push
imul
inc
fimul
mov
pop
ret
inc
xor
hlt
mov
sbb
lock
cmps
push
jnp
xor
inc
inc
and
or
mov
retf
scas
jge
inc
cmp
add
push
pop
cmp
arpl
sbb
mov
mov
outs
mov
lods
mov
ror
adc
mov
xor
ror
test
sub
int3
cvtps2pd
ss
(bad)
pushf
sbb
fcom
stc
mov
lock
retf
push
clc
pop
ret
xor
and
xchg
sbb
lods
dec
jbe
jecxz
and
jo
faddp
xor
or
(bad)
enter
xlat
cs
into
mov
inc
dec
sub
mov
cmp
in
jp
in
push
mov
shl
iret
or
bound
sub
ins
sub
xchg
mov
or
xor
pop
cmp
arpl
mov
mov
mov
xlat
mov
int3
sub
xchg
jmp
xchg
mov
jbe
fcomip
or
mov
ds
sub
inc
out
add
movs
sbb
popf
cmps
int3
xlat
mov
dec
jl
jge
cmp
sub
dec
loop
sbb
test
jne
mov
inc
jl
aad
call
cmp
jno
jp
cmp
mov
mov
adc
cmps
jmp
retf
sub
int
imul
iret
test
push
lea
sub
xchg
cmp
cmp
inc
inc
sub
push
lea
ss
sub
xor
mov
xor
int3
jmp
jnp
cld
sqrtps
int3
imul
add
cmc
sub
(bad)
push
xor
(bad)
jns
sub
fwait
inc
inc
dec
movs
mov
xor
push
mov
std
lahf
add
cmc
inc
jnp
inc
jmp
xlat
adc
jno
mov
test
jbe
adc
cmp
out
inc
icebp
dec
xchg
dec
sub
mov
(bad)
add
leave
pop
xor
push
xchg
cdq
dec
scas
imul
mov
fcmovu
push
call
mov
js
add
mov
mov
les
xor
pop
cwde
and
hlt
pop
adc
ret
xlat
out
sub
in
pop
or
in
jge
add
sbb
loop
mov
push
push
push
loope
mov
or
scas
inc
dec
mov
xchg
adc
mov
add
repnz
jg
loopne
and
dec
jbe
sahf
enter
mov
pop
call
cli
sub
pop
xchg
in
mov
pop
xlat
sub
popa
push
outs
call
dec
(bad)
push
xlat
mov
imul
jmp
mov
shl
xlat
or
push
(bad)
dec
in
mov
mov
adc
mov
jmp
inc
test
mov
cmp
hlt
push
cmp
ins
sub
cmp
test
fwait
aaa
std
sar
das
fimul
loop
repz
add
js
jmp
and
mov
dec
repnz
scas
retf
cmp
fisttp
dec
in
xchg
mov
rcr
(bad)
fucomi
fisttp
and
(bad)
popf
data16
imul
subps
shl
mov
ja
inc
inc
adc
sub
dec
mov
inc
push
add
and
test
stc
shr
inc
and
int
mov
jbe
shr
gs
mov
mov
mov
fbstp
push
(bad)
(bad)
xor
cmp
push
cmps
mov
in
mov
mov
stos
imul
mov
mov
les
out
dec
dec
inc
fcomip
cmp
cmps
loope
xchg
pop
ins
pusha
out
push
adc
mov
scas
xor
ret
fist
xchg
data16
dec
mov
jl
inc
mov
jae
sub
out
stc
(bad)
ss
jns
out
mov
lahf
xor
mov
add
jp
js
aas
scas
inc
inc
or
popf
(bad)
or
jae
xchg
addr16
dec
imul
jno
or
push
stc
mov
or
sar
sbb
dec
outs
mov
lock
(bad)
sbb
jg
sub
adc
(bad)
icebp
lahf
les
and
ret
inc
sbb
add
cmp
arpl
jb
jge
outs
test
cmps
pop
retf
push
push
rcl
loope
and
idiv
jo
inc
loop
add
adc
test
add
shl
xor
jge
into
jo
in
add
cmp
cld
aam
shl
jne
mov
mov
aam
pusha
add
icebp
jb
cli
or
mov
mov
push
test
sub
cld
jns
push
adc
mul
adc
imul
or
pop
inc
inc
mov
mov
pop
mov
setl
dec
sbb
add
sbb
jle
push
stc
jo
rcl
or
cli
call
mov
jecxz
and
jp
adc
or
mov
push
rol
mov
sub
jmp
push
arpl
daa
xchg
leave
dec
dec
cwde
sahf
out
add
push
push
mov
push
loop
and
adc
xor
push
add
inc
sbb
movs
pushf
sbb
pop
cmp
test
(bad)
in
inc
ret
jbe
aad
ss
push
pop
mov
sbb
mov
jne
fwait
mov
nop
js
scas
stos
retf
jle
jnp
sbb
pop
sub
pop
arpl
(bad)
in
daa
xchg
stos
push
imul
test
xchg
out
lea
and
push
aas
(bad)
jle
cmp
das
call
cmps
sbb
xor
inc
scas
pop
lea
fisub
into
inc
addr16
xchg
pop
or
mov
popf
dec
pop
popa
test
out
dec
adc
cld
mov
aad
and
movs
jne
lds
clc
ss
imul
imul
adc
ins
sub
mov
mov
jmp
push
pop
shl
aam
pusha
ss
stos
cmps
movs
cli
sti
jge
cmp
or
or
rcl
inc
pop
mov
xor
jmp
outs
imul
imul
mov
sbb
stc
xlat
dec
mov
or
xchg
and
jo
je
out
mov
push
addr16
or
inc
pop
retf
les
inc
rep
add
sub
pextrw
inc
idiv
daa
jle
or
jb
aaa
add
cmp
sbb
(bad)
jmp
(bad)
mov
js
je
std
jge
add
adc
inc
jns
push
sub
dec
xchg
rcl
jle
mov
and
lods
mov
test
lds
dec
adc
push
push
cmp
fwait
ja
icebp
stos
test
rol
ins
rol
sbb
pushf
rcr
cld
dec
push
sbb
sub
loopne
and
jnp
movs
sbb
lea
mov
scas
xchg
inc
inc
shl
inc
dec
or
fucomp
movs
jnp
inc
out
movs
nop
(bad)
test
dec
mul
push
add
inc
mov
push
mov
lds
jg
xor
adc
scas
mov
fsubr
ficomp
aaa
test
or
hlt
adc
call
mov
adc
fdivr
adc
mov
jl
and
jecxz
imul
cdq
imul
jp
mov
pop
(bad)
cld
iret
fwait
jno
add
dec
push
mov
sbb
aaa
or
aaa
pop
mov
in
outs
mov
cmps
push
call
jo
iret
hlt
pop
fdivrp
sbb
callw
hlt
test
js
ins
sub
jmp
neg
pop
inc
inc
jl
or
inc
push
xchg
idiv
xor
xor
mov
ja
jne
push
sbb
and
cmp
repz
push
movs
mov
jg
jnp
mov
sbb
jno
frstor
mov
or
or
icebp
adc
cli
push
mov
xchg
fstp
mov
lods
mov
xor
dec
jno
mov
mov
rcr
nop
outs
das
ja
frstor
prefetch
hlt
retf
jmp
xlat
sahf
repz
aas
fwait
inc
lds
jmp
(bad)
push
sbb
inc
adc
in
popa
mov
sbb
jl
or
cmp
push
sar
dec
sti
xor
ror
out
popa
inc
xor
fs
retf
jge
cmp
cld
mov
jmp
push
enter
dec
xchg
sar
pushf
cmps
daa
ds
test
ins
sahf
outs
cld
xchg
jne
inc
xlat
bsr
sub
adc
or
dec
inc
bound
fwait
idiv
jae
xchg
sahf
retf
popa
push
into
das
out
dec
xchg
or
sbb
mov
cwde
pop
inc
inc
dec
(bad)
pop
mov
mov
jno
into
outs
mov
dec
pop
fadd
iret
scas
push
mov
mov
push
outs
fldcw
mov
adc
outs
sbb
add
arpl
xchg
ret
xchg
dec
out
pop
int3
dec
mov
(bad)
icebp
dec
jge
out
call
arpl
adc
std
push
and
push
inc
test
xchg
inc
xor
cmp
mov
das
jl
cs
sahf
push
jae
mov
xor
add
inc
ja
out
jo
or
cmp
sub
cli
and
sbb
inc
std
push
mov
push
loopne
out
repz
xor
dec
(bad)
jo
in
adc
sbb
sub
into
or
xchg
jge
call
fdivr
xlat
mov
call
push
ficom
(bad)
in
jecxz
mov
xor
sbb
add
into
les
adc
sahf
ja
popf
pop
gs
fwait
adc
xlat
pop
iret
imul
pop
test
xchg
jo
ret
xchg
mov
clc
xchg
retf
out
es
int
cmp
mov
or
aas
xchg
xchg
adc
jne
loop
pop
shl
rcr
fwait
cmps
dec
mov
mov
xchg
dec
inc
push
lea
mov
or
div
pop
cmp
jbe
aas
scas
imul
outs
jmp
test
xchg
rcl
leave
mov
jae
xchg
loope
inc
pop
mov
scas
(bad)
xchg
fild
mov
adc
das
add
shl
add
inc
shr
sub
pop
in
add
movs
xchg
pop
mov
ret
adc
inc
jmp
leave
sub
pop
adc
fdiv
jbe
add
or
add
jge
loope
jge
int
fwait
xor
adc
sub
test
jl
mov
cs
in
hlt
rol
jb
add
(bad)
xchg
les
mov
in
jo
xchg
imul
and
in
in
add
addr16
or
cmp
xor
pusha
and
jecxz
mov
mov
mov
dec
les
(bad)
mov
movs
inc
xlat
mov
sbb
addr16
jg
mov
fstp
repnz
sbb
inc
sub
sbb
std
cmps
out
mov
mov
jg
push
add
or
cs
sub
mov
xchg
mov
push
mov
dec
jns
inc
in
push
xor
jne
xor
jb
and
jmp
dec
adc
mov
mov
and
mov
pop
sbb
aad
jno
into
imul
fidivr
adc
ret
xchg
mov
fidiv
jp
jno
dec
dec
retf
ins
add
xchg
loope
and
xchg
imul
push
sub
in
xor
imul
mov
lods
and
mov
mov
inc
push
sub
xor
(bad)
(bad)
cmp
sub
lods
and
or
loopne
bound
mov
cmps
fwait
cli
pushf
outs
int3
ds
cmc
cs
xlat
xor
mov
dec
pop
push
xchg
stos
cmps
cmp
outs
adc
push
(bad)
(bad)
sbb
mov
dec
push
mul
mov
cmp
or
cli
push
inc
shr
(bad)
push
dec
dec
and
lock
inc
and
cmp
sub
adc
pop
push
jns
dec
sub
fcomp
ds
fwait
xchg
push
enter
fadd
mov
sbb
out
lock
adc
add
xor
and
dec
outs
pop
inc
scas
js
jge
sbb
jb
cmp
in
and
outs
lock
dec
sub
mov
mov
add
cmp
cmp
jg
scas
test
jmp
sti
addr16
fldcw
or
jnp
xlat
sbb
cmps
dec
xchg
adc
adc
pop
sub
xor
mov
and
jl
in
pop
inc
ror
sbb
or
leave
mov
fs
sbb
mov
xor
add
fstp
push
stos
cmc
xchg
imul
dec
jmp
jl
js
pop
mov
sub
pop
mov
popa
fcomp
xchg
fs
jmp
sub
pushf
(bad)
sub
rcl
inc
cld
int3
clc
push
call
out
sahf
ret
out
xrelease
jns
mov
or
cmp
push
movs
cs
add
sbb
xchg
dec
test
and
and
xchg
pop
pop
ja
mov
adc
out
and
rcr
mov
(bad)
mov
into
and
loope
in
jge
adc
popf
pushf
cmp
mov
lods
dec
adc
sub
sub
or
and
ja
sahf
aad
jp
jge
inc
loopne
rcr
imul
mov
mov
mov
or
(bad)
xchg
jbe
cmp
mov
shr
out
jecxz
sub
mov
dec
in
fsubr
xchg
cs
adc
push
pop
lods
fimul
push
js
ds
(bad)
lahf
bswap
mov
xchg
fisub
adc
popf
mov
cdq
sahf
inc
shl
retf
ins
cmps
sti
rcr
push
imul
mov
stos
btr
(bad)
or
and
stos
cmp
pop
test
enter
shld
jb
pop
inc
inc
adc
test
jl
int3
repnz
movs
mov
xchg
jb
movs
(bad)
clc
mov
rcl
aad
jmp
mov
pusha
mov
mov
retf
cdq
jecxz
cmps
call
call
test
dec
leave
ficomp
push
adc
xlat
(bad)
mov
popf
dec
push
jno
mov
sub
retf
into
dec
push
je
aaa
jecxz
jge
rcl
in
jmp
adc
outs
xchg
sbb
or
dec
jl
shl
leave
gs
dec
cmc
push
or
push
inc
mov
aam
push
lock
jecxz
and
(bad)
cmp
adc
xchg
xor
dec
adc
inc
shl
mov
icebp
arpl
ror
cmp
and
std
fwait
xchg
cmps
adc
push
sub
sbb
or
sub
jns
mov
pushf
mov
push
fld
xor
cdq
dec
mov
adc
xchg
sbb
(bad)
sub
add
rcl
les
test
in
jmp
jl
mov
js
cmp
push
sti
mov
daa
adc
js
pop
cmp
(bad)
out
mov
inc
sbb
ret
push
cmc
pop
jns
out
mov
or
sbb
mov
or
int
cmp
ret
fs
mov
and
mov
test
es
push
loope
push
jl
xor
jmp
jb
push
adc
fdiv
and
mov
es
(bad)
popf
test
adc
or
shl
retf
adc
jb
ss
add
xor
mov
jne
hlt
ja
sub
dec
cmp
sub
sbb
xchg
data16
aaa
inc
(bad)
and
scas
mov
ficom
cmp
jle
lahf
jb
jmp
xor
push
in
fisttp
repz
fld
xor
fld
test
cmps
iret
dec
adc
fadd
jns
mov
mov
mov
bnd
daa
jne
ds
mov
outs
in
and
cmps
or
add
push
sbb
inc
push
mov
iret
sbb
dec
sbb
jne
add
pop
jo
sbb
push
mov
scas
fcomp
std
add
movs
test
sub
(bad)
cmp
hlt
inc
push
cmp
push
test
add
jmp
mov
(bad)
jo
jg
sahf
ins
sar
sub
mov
mov
jo
arpl
or
inc
pop
ret
ja
push
xchg
shl
jg
call
and
imul
ins
mov
nop
sbb
add
movs
test
cmp
xor
(bad)
jp
repz
pop
test
xor
lock
dec
push
cmp
push
sbb
inc
shr
cmp
mov
sub
push
int
daa
push
les
aas
add
xchg
and
fldcw
and
repnz
inc
adc
mov
movs
mov
loopne
push
ins
mov
je
add
inc
jp
ret
jnp
mov
ins
push
and
push
pop
pop
or
lea
stc
test
and
lods
adc
sbb
cmp
mov
jnp
int3
mov
adc
sahf
mov
aad
inc
sti
movs
ror
enter
adc
xor
cmps
inc
pop
adc
push
or
das
mov
les
repnz
pop
fucom
aad
add
test
mov
sbb
add
iret
add
in
aad
test
ins
sub
mov
add
test
mov
xlat
sub
push
xchg
out
stc
mov
add
call
into
es
loop
push
fidiv
icebp
and
enter
jne
mov
mov
or
ins
xlat
and
hlt
xor
pop
fwait
xchg
cmps
movs
call
adc
leave
out
pop
xchg
pushf
or
leave
jno
out
sub
push
cmps
(bad)
(bad)
inc
mov
mov
mov
sub
xchg
iret
scas
out
out
je
add
ret
in
push
mov
cmp
mov
jb
ja
js
fisub
or
out
leave
(bad)
enter
lock
nop
imul
fsub
xchg
(bad)
ins
add
cmp
(bad)
(bad)
fmul
xor
fsub
sub
xor
leave
mov
xor
push
pop
add
mov
cmp
and
jns
sub
fbstp
neg
xchg
jmp
add
cld
retf
sbb
loop
adc
shl
sbb
push
imul
pop
mov
ds
jnp
sbb
xchg
mov
mov
(bad)
repz
mov
call
sub
inc
pop
mov
mov
imul
dec
sub
in
mov
pop
dec
addr16
mov
fdiv
neg
fdiv
mov
js
(bad)
bnd
mov
adc
ds
rcl
and
cmp
cmp
into
je
xchg
sub
jmp
sbb
cmp
jne
call
sbb
pop
hlt
lds
ins
push
movs
mov
jo
inc
(bad)
rcl
xchg
push
loop
aad
sub
int3
adc
ficomp
xor
or
pop
mov
push
dec
cmp
inc
cmp
mov
test
pusha
lock
push
movs
popa
test
ins
sbb
imul
mov
loop
mov
in
sahf
lods
mov
arpl
pop
loope
ds
add
dec
in
test
sahf
push
sub
lds
movs
pop
mov
xchg
jns
or
mov
shr
popf
mov
inc
add
ss
jge
xchg
xlat
cmp
xor
xchg
dec
sub
les
das
movs
push
xchg
dec
dec
mov
dec
mov
lods
mov
shr
mov
addr16
push
add
ror
or
enter
mov
push
das
iret
aam
fiadd
mov
fstp
ficom
mov
jg
mov
(bad)
iret
xchg
loopne
js
and
fwait
push
adc
stos
enter
mov
sub
add
ja
clc
data16
sub
sbb
mov
pop
stc
pop
jbe
mov
out
dec
daa
push
sub
cmc
call
mov
push
call
data16
cdq
je
push
inc
into
add
jle
xlat
out
rol
mov
fcompp
ficomp
sar
mov
sti
mov
pop
mov
in
sahf
mov
fwait
xor
sahf
mov
mov
repnz
retf
sbb
les
mov
xchg
sub
fnstcw
icebp
test
sahf
mov
mov
mov
sbb
jo
hlt
idiv
and
mov
out
into
jbe
push
mov
or
hlt
sub
out
xchg
dec
mov
out
jg
xchg
push
test
movs
dec
mov
leave
ret
outs
loopne
inc
cli
jbe
lds
stc
or
xor
(bad)
ja
dec
data16
push
out
(bad)
pop
and
jle
out
enter
pop
mov
loop
xchg
sbb
pop
cmp
ds
mov
mov
aam
into
mov
das
pusha
das
sub
shl
mov
fimul
dec
hlt
fwait
mov
jp
ret
adc
push
inc
and
in
inc
xchg
pop
lods
jg
xor
lods
scas
and
or
inc
pop
clc
sbb
fstp
dec
add
out
sub
or
ins
repnz
cli
cmp
xor
add
nop
imul
gs
mov
xor
jbe
stc
xchg
sbb
xor
retf
pop
out
xchg
imul
call
pop
push
adc
pop
jp
enter
xor
mov
ret
and
mov
sbb
jg
scas
(bad)
fcom
push
in
add
dec
imul
inc
dec
xchg
inc
xor
repnz
fsubrp
dec
outs
jo
add
cmp
inc
jp
add
scas
lock
push
jle
inc
mov
(bad)
pop
pop
push
dec
loopne
or
fsub
fstp
inc
shr
arpl
scas
dec
stc
fistp
iret
jns
test
and
sub
stc
dec
push
shl
cmp
pop
push
clc
cmps
and
inc
mov
cld
add
pop
das
sbb
cmp
imul
xchg
cmp
adc
xchg
inc
je
add
cmovb
mov
mov
popf
mov
xchg
mov
or
adc
adc
aas
push
xchg
rol
cwde
dec
and
cmp
jmp
cdq
nop
es
jnp
lds
test
mov
inc
xchg
cmp
(bad)
xor
pushf
repz
dec
inc
push
test
dec
hlt
cmc
push
fistp
mov
cmp
repnz
leave
(bad)
cmc
xchg
cmps
(bad)
js
mov
mov
xor
pushw
repz
test
(bad)
(bad)
xchg
js
pop
test
out
xor
mov
(bad)
xchg
or
xchg
mov
test
inc
in
pusha
in
mov
pusha
dec
mov
repz
push
lock
rcl
movs
aam
cmp
xor
aaa
or
pop
dec
pop
xor
out
lods
jo
repnz
jecxz
out
mov
movs
lahf
adc
xlat
fwait
lea
fs
fwait
push
mov
sub
jno
dec
cmp
mov
push
sub
(bad)
mov
cmp
std
out
jmp
mov
adc
push
inc
sbb
cld
dec
jmp
or
xor
mov
adc
daa
jno
inc
int
cmp
and
aaa
ss
adc
in
sub
data16
out
or
dec
cld
mov
pop
ds
sbb
sub
lods
jmp
cmp
jnp
outs
push
scas
stos
xchg
mov
pop
and
mov
cmp
ins
iret
stc
inc
jmp
dec
and
or
std
ins
sahf
ds
jne
xor
pop
adc
stos
scas
enter
cmp
and
out
pop
xor
icebp
xchg
mov
cmp
bound
test
nop
xor
scas
aad
xchg
fcmovnu
mov
push
sbb
add
or
mov
(bad)
adc
sub
test
ficomp
sbb
sub
cmps
mov
shl
sti
rcl
sahf
and
in
pop
fadd
pop
and
xor
xchg
sti
xchg
setl
std
xchg
pop
sbb
and
enter
lahf
or
repnz
shl
ja
in
les
dec
inc
cmp
add
adc
sbb
and
in
push
xor
dec
inc
push
cmps
mov
enter
push
sub
or
sti
call
ds
leave
lds
cs
nop
(bad)
cmp
mov
(bad)
loop
adc
mov
js
test
in
push
jne
jp
call
inc
xchg
nop
ret
mov
sahf
gs
or
xor
or
or
cmp
stc
push
cld
outs
test
mov
sub
push
call
outs
int3
and
cmp
push
xor
cmp
and
call
push
inc
les
jbe
adc
jmp
stos
push
aas
(bad)
ss
push
mov
sub
frstor
mov
mov
aaa
adc
rol
test
pop
rol
sbb
cmp
and
arpl
inc
dec
test
jp
jg
fs
push
inc
pop
out
test
cmp
loope
and
fadd
dec
add
inc
add
push
xor
hlt
fwait
cmp
and
nop
out
fst
pop
ins
xchg
push
cs
adc
add
aam
pop
inc
xchg
in
ffree
jmp
std
fmul
(bad)
mov
mov
out
cs
cwde
and
dec
mov
and
fild
iret
aas
mov
push
xor
out
mov
call
jmp
adc
jo
bound
aam
fstp
iret
fwait
jae
(bad)
push
adc
jo
es
fs
enter
add
xor
mov
es
jnp
rcl
add
mov
sub
(bad)
in
cli
dec
pushf
cli
icebp
inc
dec
mov
outs
mov
scas
out
xchg
loopne
in
retf
ins
mov
imul
repnz
retf
jns
push
mov
test
loope
retf
pop
call
sub
stos
pop
and
int
popa
(bad)
ja
shr
xor
or
cmp
inc
dec
jo
inc
dec
xor
std
ret
mov
push
gs
pop
rcr
push
clc
leave
cmp
jp
icebp
rol
addr16
sub
aaa
leave
(bad)
ror
jmp
add
sbb
add
mov
repz
mov
dec
popf
and
dec
bound
jo
sub
and
mov
jmp
mov
ror
cmp
fisttp
jnp
out
fidivr
ins
aaa
mov
pop
pop
sub
xchg
inc
retf
inc
pop
arpl
add
stos
jns
mov
xlat
or
jge
aas
in
jb
retf
imul
push
or
scas
xchg
jmp
and
mov
scas
add
push
add
mov
cmp
add
cmp
out
dec
or
loopne
leave
movsx
jmp
inc
aam
stos
push
mov
dec
push
cmps
push
(bad)
jne
xchg
test
(bad)
repnz
cmp
loope
cmc
inc
jne
or
pusha
mov
mov
dec
cli
sbb
jnp
mov
pop
push
jae
pop
mov
out
retf
test
ja
sbb
xchg
(bad)
cmps
pop
sub
adc
pusha
add
push
inc
lea
scas
sub
sar
jno
pop
xchg
inc
adc
sbb
es
and
lods
lods
cwde
fldcw
push
adc
test
rdtsc
push
(bad)
pop
fmul
in
imul
outs
aam
push
stos
fstp
adc
cmc
push
clc
and
shl
xchg
mov
aam
mov
or
push
and
pop
or
mov
aad
xchg
call
mov
or
dec
mov
push
xor
and
es
mov
pop
jo
dec
and
je
cmp
lds
outs
jmp
mov
dec
sti
fs
mov
pop
dec
and
lds
pop
lods
cmp
outs
inc
sahf
mov
sub
or
mov
jecxz
sbb
jb
xchg
dec
pop
pop
xor
loop
fsubr
xor
pop
int3
mov
ds
inc
mov
xor
add
out
cwde
xchg
push
mov
loopne
int
mov
and
add
outs
pcmpgtb
out
cs
xor
es
mov
xor
cmps
stos
mov
stc
push
enter
hlt
or
or
sahf
fimul
cmc
jnp
sub
(bad)
in
sti
loope
mov
mov
in
scas
mov
pop
or
dec
das
add
jb
cmp
adc
shr
sub
fs
lods
cld
lea
cmp
and
icebp
retf
mov
xor
mov
cmp
je
cs
(bad)
and
xor
std
push
mov
cmps
mov
add
(bad)
and
add
xchg
leave
sahf
jle
addr16
jge
cli
inc
pusha
rcl
rcl
pushf
cmc
mov
adc
(bad)
sbb
sub
mov
mov
movs
mov
fsubr
std
cmc
or
ss
and
pop
pop
sar
jb
in
dec
dec
aad
out
fiadd
xor
loop
sbb
div
ss
dec
xchg
(bad)
call
cdq
pop
dec
dec
inc
pusha
ret
and
daa
mov
push
push
fnstsw
xchg
ret
(bad)
sub
mov
adc
sti
inc
add
xchg
ss
and
outs
inc
sub
test
jae
sub
jl
mov
cld
stc
fnstsw
imul
leave
xchg
outs
pop
int3
jns
adc
sbb
inc
call
xchg
or
sub
test
and
xchg
sub
outs
mov
jle
mov
fmul
sub
int
jle
pop
push
loop
mov
mov
inc
cmp
inc
cmc
or
imul
sbb
stc
push
retf
outs
das
idiv
push
in
mov
pop
push
mov
mov
inc
push
pop
dec
fcomp
scas
imul
cmps
push
out
mov
xor
push
(bad)
pop
sub
inc
mov
mov
stos
retf
seto
imul
pushf
xchg
imul
mov
in
dec
je
out
mov
mov
adc
and
(bad)
outs
scas
nop
test
pop
out
fiadd
cmp
mov
int3
adc
pop
lods
and
std
iret
mov
fwait
push
pop
or
xchg
adc
call
hlt
mov
cmp
inc
fnsave
je
push
fmul
pushf
cmp
in
inc
push
sub
dec
mov
cmps
into
sbb
jge
shl
pop
cmp
fisttp
cmp
or
xor
(bad)
cld
ins
fwait
shl
pusha
inc
lods
or
push
adc
mov
push
add
jl
cmp
dec
jmp
int3
test
mov
jp
scas
ss
stos
jg
push
lahf
jmp
mov
lea
mov
mov
jb
pop
rol
adc
xor
popa
in
adc
ja
fs
sbb
test
add
jecxz
push
std
push
jg
fwait
cmp
adc
inc
ret
inc
jne
fs
add
jo
xchg
mov
sub
cmpxchg
xchg
inc
sar
fdiv
pop
mov
mov
lahf
or
out
loopne
loopne
les
call
xor
into
js
mov
shl
xlat
and
loopne
dec
lahf
sub
adc
outs
push
icebp
mov
jmp
adc
ret
arpl
test
(bad)
sti
int
call
sahf
mov
jns
imul
and
or
adc
imul
push
std
push
addr16
addr16
adc
gs
inc
lock
std
add
xor
sub
jge
outs
and
test
inc
outs
dec
adc
cdq
ror
aas
repz
iret
call
xor
push
jge
xor
ret
stos
mov
sub
mov
mov
push
scas
inc
mov
pop
ds
pop
gs
out
lods
addr16
movs
test
icebp
call
les
inc
jns
popf
stos
std
scas
leave
mov
mov
sub
(bad)
sub
mov
add
dec
inc
inc
mov
mov
push
stos
neg
repz
sbb
and
inc
inc
lods
scas
cmc
idiv
call
sub
mov
push
je
ds
fcmovnb
push
lock
or
dec
cmps
data16
out
cmp
inc
adc
mov
popf
xchg
outs
(bad)
sub
cdq
push
cmp
pop
and
lds
adc
mov
iret
sbb
xchg
cwde
lea
shr
fadd
outs
pop
sub
and
xchg
pop
jb
daa
cmp
inc
iret
aam
mov
sub
inc
inc
xchg
rol
add
mov
es
retf
js
int
int3
mov
dec
movs
out
cmp
add
and
inc
push
je
add
aam
nop
pop
push
xchg
mov
pop
mov
cmc
mov
popa
iret
pop
call
mov
pop
ss
call
adc
aad
xor
lods
retf
call
xchg
ins
jmp
inc
mov
push
ja
fisub
mov
fnop
dec
cmp
sub
jno
mov
jge
movs
adc
pop
dec
(bad)
into
iret
cmp
add
rcr
xor
lods
jae
imul
cmp
and
lahf
jmp
xchg
cmc
and
pop
std
xchg
cmps
popf
inc
mov
or
pop
sub
xchg
dec
push
stc
popa
test
fadd
outs
ss
outs
or
mov
(bad)
test
les
pop
and
pop
sar
out
int
inc
test
mov
and
inc
(bad)
out
inc
aad
jmp
fidivr
les
sti
shl
movs
cld
loopne
adc
sbb
pop
adc
adc
mov
loop
jae
dec
es
sbb
bound
xchg
std
or
lods
setp
cs
(bad)
jge
and
stos
sbb
stos
popa
push
imul
push
xchg
cdq
(bad)
hlt
daa
repnz
or
std
jmp
jo
mov
cli
mov
and
movs
movs
int
dec
jmp
or
movs
nop
lods
mov
ficomp
push
mov
ret
fistp
sbb
sbb
jp
push
add
dec
xchg
popf
(bad)
sbb
clc
retf
stos
dec
idiv
cs
sbb
not
nop
or
test
pop
mul
mov
test
leave
movs
or
xchg
ja
rcl
pop
sub
jecxz
lock
(bad)
aas
sbb
mov
xchg
out
sub
dec
aad
sbb
mov
int3
mov
cwde
sub
std
push
jae
add
out
push
mov
push
mov
cmp
mov
outs
imul
mov
mov
sti
xchg
ins
mov
dec
mov
mov
push
(bad)
xlat
(bad)
aas
dec
in
jae
or
mov
std
shl
mov
mov
les
int
adc
inc
push
mov
add
aam
aas
cmp
sbb
mov
sbb
inc
clc
cs
call
ins
outs
push
lock
pusha
mov
push
xor
outs
adc
arpl
inc
xchg
aam
out
or
sbb
pop
in
out
pop
sbb
std
jle
jle
daa
pop
mov
adc
mov
or
popf
dec
mov
popa
pop
inc
fidiv
sub
sahf
jmp
pusha
mov
or
imul
shl
clc
std
add
movs
cmc
xchg
lods
pop
nop
je
enter
push
mov
pop
in
in
pop
ja
adc
loop
lds
cmps
(bad)
cmps
mov
or
neg
aad
retf
fisubr
int
pop
xor
xor
retf
mov
pop
inc
repnz
cmps
int3
popa
pop
out
jmp
lahf
mov
add
cmp
adc
push
jns
add
mov
in
mov
inc
daa
lock
cld
mov
cmp
add
ficom
and
add
fadd
pop
aaa
js
(bad)
call
jo
out
mov
and
cmps
lods
inc
gs
or
push
sub
or
stos
jno
jmp
mov
cmp
mov
xchg
inc
popa
adc
adc
sti
jae
imul
fwait
rol
sbb
(bad)
in
sbb
pop
aas
adc
es
push
add
jmp
popf
test
mov
inc
inc
movs
jne
aam
push
push
adc
ret
fisub
rcr
js
pop
sti
push
into
adc
dec
fs
test
inc
pop
rol
stos
and
sub
mov
xchg
call
ror
pop
dec
jbe
sbb
nop
int3
dec
mov
in
icebp
rcl
retf
dec
rcl
cmp
and
mov
repnz
(bad)
jb
push
push
sub
cld
stos
out
xor
fcomi
push
stos
and
add
jb
or
stc
das
mov
mov
xchg
aad
mov
outs
ds
mov
ret
into
mov
xchg
mov
stc
adc
push
xor
jl
sar
arpl
ja
push
mov
nop
cmc
sahf
and
jns
pop
pushf
lods
fprem
hlt
inc
inc
popf
retf
pushf
jp
sbb
test
mov
mov
cs
jae
adc
test
pusha
loope
out
jne
scas
jae
clc
cwde
xchg
xchg
mov
sub
jmp
push
push
call
pop
out
popf
and
les
mov
or
xchg
inc
mov
popa
js
adc
mov
aaa
dec
mov
icebp
sub
aas
repz
mov
jg
sbb
cwde
imul
jne
jecxz
dec
adc
add
sbb
mov
and
shl
fwait
inc
lods
mov
and
xlat
mov
shl
retf
sbb
push
xchg
(bad)
xlat
ds
mov
and
call
lock
xchg
test
fcom
xor
dec
sub
dec
add
in
rcr
push
cmps
leave
and
iret
mov
(bad)
xchg
jecxz
lds
dec
dec
and
mov
in
out
push
cmp
movs
xor
and
scas
and
xchg
jo
test
and
int3
pop
rcr
push
in
dec
inc
push
cld
out
xor
shr
inc
popa
xlat
lods
call
les
xchg
dec
leave
inc
add
ss
cmc
xchg
cmp
and
test
fdivr
fisub
sar
mov
inc
mov
js
dec
int3
add
data16
jl
daa
sub
push
fwait
xlat
sub
pop
and
icebp
add
ret
jge
push
jl
es
(bad)
pop
stc
jecxz
ss
mov
int
xchg
bound
ins
add
pop
in
inc
xor
idiv
dec
icebp
lock
dec
shr
pop
dec
hlt
inc
shr
jg
ins
stc
or
xchg
inc
out
jg
push
push
xchg
std
inc
mov
sbb
mov
pushf
mov
cwde
popa
in
(bad)
ds
cmp
push
adc
pop
mov
adc
dec
xor
adc
ret
jmp
xchg
popf
jb
sub
push
xor
dec
sbb
dec
(bad)
test
pop
pop
test
jecxz
xor
ror
ret
and
inc
xchg
stc
in
push
aam
mov
xchg
mov
mov
add
scas
mov
and
push
in
scas
popa
retf
call
xchg
sub
mov
pop
test
hlt
aad
test
adc
call
inc
pop
jp
test
add
jecxz
adc
or
in
jecxz
xchg
outs
cmp
and
sbb
xchg
dec
xor
mov
pop
fsubr
mov
fist
jecxz
inc
dec
xchg
add
pop
xor
je
dec
(bad)
jl
in
mov
mov
xor
es
jb
fcmovnbe
sbb
mov
xor
pop
jo
and
xchg
push
imul
scas
(bad)
popf
mov
sahf
sti
mov
lea
es
pop
sbb
data16
jmp
dec
mov
jmp
add
jmp
and
adc
jns
fisub
imul
rol
jmp
movs
popf
sub
mov
jo
or
(bad)
cmp
xor
cmps
fwait
lds
sbb
mul
dec
ds
cmps
sbb
les
jp
jo
or
sbb
leave
mov
cmp
fs
test
sahf
repz
or
rcl
out
mov
pop
push
pop
and
push
pop
adc
stos
int3
call
add
and
xchg
fs
jg
xchg
dec
je
xor
sub
xor
fisubr
xor
push
jmp
add
(bad)
xchg
cmps
clc
ja
or
jbe
inc
retf
pop
dec
lock
sahf
inc
xchg
(bad)
xchg
mov
jle
mov
out
cmps
outs
aad
pop
call
add
rcr
jbe
pushf
push
mov
sar
sti
retf
lea
xchg
hlt
xor
shl
xor
cld
inc
gs
ss
aas
or
or
mov
push
xchg
test
xor
adc
(bad)
inc
retf
pusha
add
xchg
arpl
cmp
loop
jle
xchg
cmps
add
and
push
popa
adc
dec
cmp
add
sbb
xor
rcl
or
push
mov
mov
test
jle
or
int3
push
xlat
fs
les
frstor
retf
cmp
mov
push
xchg
or
xchg
add
and
(bad)
repnz
out
les
jecxz
enter
push
mov
xchg
lahf
adc
mov
test
jp
dec
gs
(bad)
mov
repz
stos
xor
xor
mov
hlt
int
inc
ins
or
loope
call
adc
mov
or
push
xor
fsubp
fadd
sbb
pushf
call
pop
stos
(bad)
or
bound
mov
push
test
fndisi(8087
sub
sbb
xchg
fwait
pop
dec
outs
adc
out
sti
test
pop
ja
xchg
xor
nop
(bad)
mov
lea
pop
or
push
popa
push
mov
push
add
addr16
inc
jno
test
mov
jo
adc
cdq
push
std
mov
or
jbe
sbb
jb
mov
mov
shl
mov
fisubr
cdq
pushf
or
ss
xor
clc
pushf
or
mov
vcvtsd2ss
(bad)
aam
sub
ret
inc
add
adc
and
add
test
lea
jb
jecxz
push
jle
jbe
lahf
sbb
enter
test
cmp
or
add
aas
pop
adc
cmp
cmp
or
or
jae
loop
int
test
das
pop
pop
sub
cdq
sbb
and
pushf
mov
and
and
ret
sti
in
push
pop
rcl
sub
mov
lea
push
movs
adc
pop
arpl
bound
sbb
pop
test
lds
cmp
dec
pop
aas
movs
in
lods
xor
loope
pop
(bad)
jecxz
out
inc
push
xchg
cli
fsubr
xlat
mov
cmp
sbb
add
(bad)
leave
jo
sahf
mov
mov
lods
pop
mov
(bad)
sbb
rcl
nop
mov
and
lods
add
cwde
out
mov
popf
bound
push
mov
cwde
mov
hlt
add
cmp
addr16
sahf
shl
in
div
out
out
pop
imul
xchg
cwde
vpunpckhdq
jne
xor
aad
add
jns
pop
xor
or
pop
jnp
stos
lea
lock
fisubr
scas
dec
rcl
cmp
loop
cmc
aam
nop
xor
xor
outs
aaa
sbb
inc
pop
dec
inc
repz
xchg
or
or
scas
mov
outs
mov
add
dec
retf
mov
xor
pop
movs
fs
sub
dec
and
loop
push
stos
(bad)
hlt
push
icebp
mov
mov
(bad)
sub
fwait
jmp
mov
sub
jae
popa
pushf
test
cwde
lock
push
dec
add
out
sbb
push
push
mul
gs
mov
fs
jge
(bad)
sahf
inc
push
add
or
retf
vmovaps
(bad)
leave
and
js
add
mov
push
(bad)
dec
xchg
or
mov
rol
mov
(bad)
out
mov
fnsave
jb
cmps
sub
inc
inc
push
pop
lods
sub
popa
rol
test
mov
in
mov
sbb
mov
sbb
jbe
ret
es
scas
adc
ds
imul
inc
mov
xchg
xor
dec
sbb
mov
or
mov
or
sahf
dec
maskmovq
idiv
and
mov
mov
es
rcr
retf
sahf
sub
sbb
cmp
in
stc
dec
and
je
test
xchg
sti
les
ficom
jb
hlt
mov
sub
scas
jmp
dec
mov
mov
push
shl
and
push
sub
outs
jns
imul
push
fisttp
pop
xor
pop
retf
inc
push
sub
(bad)
hlt
or
push
and
repz
push
sbb
inc
sub
mov
scas
mov
sub
setno
jns
stos
cmc
mov
call
and
pusha
push
call
xchg
js
pop
mov
cdq
xor
xchg
xor
mov
pop
cmp
mov
fs
pop
scas
out
clc
xor
loopne
lahf
mov
enter
bound
inc
rol
adc
push
cmp
mov
jge
mov
sub
dec
or
sbb
push
out
int
jae
push
mov
sub
enter
or
in
rcr
loop
xchg
pop
(bad)
fdivr
call
pop
jmp
xor
scas
mov
inc
fidiv
push
ins
rcl
jns
cmps
sub
jo
test
sub
stc
sbb
out
(bad)
jge
and
dec
adc
jg
hlt
xor
cdq
dec
add
(bad)
lock
pop
fxtract
pop
(bad)
loopne
out
shr
xchg
push
rol
add
mov
aam
and
fdiv
es
inc
jno
js
int3
add
sti
xchg
in
fnsave
mov
data16
mov
scas
stc
jmp
loopne
cli
jno
out
adc
popa
std
jne
or
inc
dec
in
push
std
or
sub
xchg
xchg
shl
into
in
cmp
imul
pop
jo
bound
sbb
and
repnz
icebp
jecxz
popf
popa
lds
mov
in
popf
sbb
std
jae
test
dec
pop
es
and
xlat
mov
mov
jl
jmp
push
sbb
dec
movs
push
pop
mov
push
adc
es
inc
dec
enter
aas
fs
dec
mov
mov
out
stos
xor
ja
xlat
not
fnsave
test
(bad)
mov
es
or
cmps
and
(bad)
adc
je
in
xlat
xor
fwait
shr
cs
test
ret
jl
dec
test
ins
es
int3
or
cmc
loope
ins
xchg
pop
js
out
dec
lds
or
cmp
gs
push
dec
sbb
fsubr
dec
pop
cmp
mov
xor
in
jg
jo
imul
ret
xchg
or
mov
push
inc
jle
cmp
ja
pop
popa
fs
outs
pop
xor
enter
pop
int3
pop
sti
hlt
int3
popa
stos
in
addr16
jmp
inc
leave
ins
outs
cmp
xchg
sub
inc
out
mov
movs
jno
sbb
in
xchg
sbb
div
shl
mov
or
test
jg
movs
sub
sbb
jl
mov
mov
sbb
dec
dec
add
pushf
stc
(bad)
fidivr
push
pop
cwde
bound
lahf
test
ins
push
fndisi(8087
cmp
mov
jbe
mov
lock
into
fs
mov
jge
ins
cwde
sub
fcmove
test
jl
jl
lea
xlat
or
sbb
xchg
das
ss
mov
int3
pop
lock
and
outs
mov
mov
push
mov
xchg
add
bound
iret
inc
add
jno
mov
push
bound
fs
mov
loopne
loop
js
es
lea
nop
and
adc
dec
fidiv
mov
pop
out
mov
movs
repz
icebp
pusha
cdq
pop
xchg
sub
mov
in
(bad)
jns
sub
sub
cmp
jg
inc
dec
mov
(bad)
jmp
(bad)
cli
dec
outs
mov
push
(bad)
pop
mov
mov
fisttp
std
pop
fsub
mov
movs
stos
mov
xchg
lahf
cmp
push
(bad)
jg
dec
div
mov
push
lock
lock
in
into
(bad)
jne
cmp
dec
xchg
fpatan
xor
cmc
(bad)
(bad)
cmp
dec
lock
retf
pmulhw
mov
cmps
lods
pop
mov
jne
shl
and
and
test
inc
stos
pushf
mov
xchg
inc
xor
mov
fldcw
inc
outs
ja
cmp
jnp
sub
jne
int
sub
fs
xor
ins
das
push
sub
hlt
stos
aas
fild
jns
iret
sbb
push
mov
das
and
retf
fstp
add
rcl
cld
aas
mov
xchg
inc
jp
inc
pop
retf
xor
jl
jnp
jns
mov
fcmovnbe
js
jb
sub
pop
mov
das
sub
stos
fisttp
mov
mov
and
hlt
sbb
xchg
stos
xchg
dec
cdq
mov
xchg
mov
popf
xor
mov
xchg
inc
(bad)
jmp
sahf
mov
icebp
imul
bound
ins
stos
into
inc
mov
mov
retf
dec
movs
nop
push
mov
scas
lds
dec
ret
mov
adc
mov
adc
mov
xor
cmc
scas
push
das
ret
scas
xor
in
arpl
adc
mov
and
cdq
jnp
mov
(bad)
(bad)
jae
ss
mov
cmp
jl
pop
ud0
js
call
imul
xor
cdq
sbb
in
(bad)
lods
mov
fdiv
rol
sub
mov
or
or
jae
xchg
fild
xor
dec
sbb
jg
adc
xrelease
stos
cmp
add
pop
cdq
frstor
loopne
add
add
lahf
push
add
add
jbe
mov
sub
mov
push
dec
movs
shl
loop
add
ja
movs
sub
dec
mov
push
cmp
fstp
add
sub
mov
cmp
adc
mov
movs
sbb
add
and
lds
adc
sar
sub
imul
sahf
leave
adc
loop
js
movs
jo
inc
xor
stos
sti
inc
retf
arpl
xor
std
xor
adc
in
mov
rcr
add
aaa
icebp
inc
sbb
loopne
mov
(bad)
xor
loope
pop
es
lock
repz
xchg
inc
push
sub
push
test
iret
mov
sbb
call
mov
mov
nop
sub
jl
repz
jno
shr
test
mov
fdivr
push
aad
push
mov
add
lods
or
sub
jo
mov
stc
mov
js
xchg
fwait
ds
fcom
xor
cmp
pop
sub
push
inc
out
jo
cli
add
cmp
push
jle
push
ja
dec
push
ins
call
call
test
xor
movs
lods
dec
loop
mov
aam
pop
cmp
push
push
(bad)
ins
mov
in
add
jge
xchg
push
add
shl
and
and
mov
xchg
movs
xlat
mov
inc
call
jg
inc
(bad)
mov
mov
out
lahf
and
test
sub
retf
ins
cmp
sbb
(bad)
cmp
lods
inc
inc
call
(bad)
and
enter
dec
add
rcl
divps
inc
std
xor
add
pop
add
xchg
loope
mov
cs
cli
cdq
dec
mov
mov
pop
scas
das
xchg
pop
lods
xlat
jmp
sub
dec
xchg
pop
dec
sub
(bad)
jecxz
and
call
mov
cwde
das
imul
xchg
sub
jmp
imul
pop
daa
fdivr
in
xlat
das
and
dec
mov
movs
cmp
push
sub
in
outs
sub
jl
xor
cmp
popf
test
add
aam
pop
test
cld
mov
push
aas
add
add
pop
data16
adc
scas
cs
push
into
ins
retf
pushf
mov
and
jmp
(bad)
and
push
pop
mov
mov
dec
popa
push
cmovnp
push
jge
inc
sbb
xor
cmp
pop
outs
xor
ins
pop
outs
mov
xor
movs
(bad)
pop
push
iret
mov
pop
jp
outs
push
fist
les
(bad)
sub
push
xor
ret
fiadd
and
xor
and
cmp
not
sub
mov
xor
sbb
dec
enter
mov
add
cmp
dec
add
inc
outs
inc
into
sti
mov
test
ins
arpl
(bad)
add
push
jb
js
jae
popa
lea
mov
gs
sub
adc
jmp
xor
idiv
aaa
or
push
push
mov
add
push
sub
std
add
mov
jae
cs
and
xchg
mov
nop
xchg
pop
inc
fnstsw
add
aad
mov
sub
jne
aaa
ins
push
jae
sbb
push
les
loope
xor
sub
call
(bad)
inc
stos
inc
out
add
je
sbb
sbb
cli
add
aad
fisub
shl
aad
xchg
das
sbb
jp
xchg
in
fld
mov
cwde
fnstcw
test
push
pop
or
push
mov
push
js
inc
xlat
or
xchg
lahf
adc
pop
push
lea
lods
add
mov
and
and
mov
xchg
sbb
pop
ins
sub
retf
(bad)
sbb
mov
xor
jmp
inc
inc
pop
dec
sbb
pop
ins
xor
jno
inc
test
repnz
(bad)
test
(bad)
pop
inc
movs
loope
stos
mov
pop
cmps
dec
in
dec
(bad)
stc
aam
sub
aas
adc
push
pop
call
out
push
pop
push
imul
xchg
int
xor
xlat
stos
movs
mov
xchg
sbb
loope
adc
cmp
cmps
dec
mov
nop
jb
repz
in
mov
xor
mov
mov
cmps
xchg
test
hlt
out
fldcw
frstor
pop
or
mov
add
(bad)
xchg
lds
hlt
or
das
push
inc
adc
test
fs
rol
outs
cdq
mov
fsubrp
ds
ins
cwde
mov
push
fnstsw
repz
jg
movs
iret
jne
out
pushf
pop
repz
shld
test
dec
pop
loop
or
add
fwait
cmps
mov
mov
and
fs
jb
inc
movs
xor
shr
fldenv
cli
mov
icebp
jg
pop
sub
inc
push
fiadd
(bad)
push
gs
cmps
dec
xor
fcmove
sub
(bad)
clc
sub
jb
inc
sbb
inc
cdq
mov
pop
adc
xchg
mov
stc
pop
int
mov
cdq
and
dec
and
dec
jle
xchg
lods
add
jb
dec
loopne
enter
ror
cmps
cwde
test
inc
xchg
xchg
ss
inc
xchg
adc
movs
mov
mov
arpl
les
out
out
shr
xchg
push
iret
in
jbe
imul
popf
sar
jge
mov
gs
int
jo
or
data16
neg
pop
inc
push
or
sub
fwait
stc
adc
lods
and
and
jmp
adc
adc
fimul
movs
mov
cs
scas
xor
mov
stos
push
std
sbb
scas
sbb
pop
add
imul
iret
mov
std
and
cli
jmp
jmp
popf
sub
inc
fsubr
lods
mov
popa
ins
add
repnz
retf
mov
add
into
retf
sbb
mov
mov
into
mov
hlt
and
jmp
inc
pop
ret
stc
test
je
iret
pop
pop
sub
adc
out
jae
push
ja
arpl
inc
mov
jl
fs
pop
shr
jmp
jg
test
fadd
retf
pop
push
or
or
sbb
pop
push
add
and
out
stos
(bad)
(bad)
scas
push
sahf
out
in
xor
imul
mov
seto
pop
rep
das
je
xchg
push
xchg
or
iret
test
or
popa
mov
out
test
inc
sub
dec
sub
push
xchg
inc
lahf
test
cwde
pushf
(bad)
xor
test
mov
dec
pop
out
or
add
mov
pop
or
es
(bad)
push
ins
in
cmp
mov
stos
stc
inc
jo
inc
sub
lahf
inc
dec
mov
mov
mov
mov
dec
jae
dec
push
add
test
adc
xchg
pop
das
dec
xlat
clc
sub
es
xor
outs
mov
push
add
inc
mov
cmps
xor
leave
jo
push
push
pop
mov
push
daa
fbstp
bt
mov
push
in
pop
mov
ror
jae
leave
inc
push
mov
jne
dec
xchg
jg
mov
clc
jge
or
sbb
popf
mov
out
test
js
or
sbb
popa
shr
inc
lds
test
cdq
mov
cwde
iret
dec
fimul
inc
fs
xor
jp
bound
push
fxch
add
in
adc
dec
int3
sbb
sub
(bad)
lds
push
fmul
nop
repz
stos
xor
(bad)
data16
daa
xchg
imul
loopne
(bad)
hlt
or
mov
jno
xor
or
shl
rol
jp
jo
xor
inc
mov
(bad)
push
and
lds
add
xchg
sahf
push
jmp
mov
jp
outs
scas
jo
fdivr
jg
gs
sar
lods
sbb
xlat
add
clc
jl
or
mov
push
ss
inc
retf
cli
dec
or
and
pop
jle
mov
dec
xor
(bad)
(bad)
jmp
sbb
rol
iret
mov
jmp
mov
xchg
in
inc
dec
fsub
cmp
stos
out
loop
sbb
fcomp
cdq
push
das
add
mov
jmp
adc
outs
fsub
shr
xchg
stc
push
int
mov
jecxz
lahf
sub
call
mov
cmps
adc
ja
lock
hlt
sub
daa
sub
mov
jg
pusha
and
xor
mov
sub
adc
adc
arpl
test
pop
hlt
cwde
test
adc
dec
mov
push
pop
dec
cld
mov
lahf
jmp
push
loop
inc
adc
cwde
out
cmp
inc
sti
push
dec
adc
jmp
dec
stos
or
div
int
pop
call
test
push
les
cld
or
add
shl
jl
loopne
push
push
push
mov
lds
lods
call
aaa
push
pushf
pop
out
dec
jecxz
xchg
mov
jns
push
cmp
xchg
out
lea
fwait
les
inc
out
into
dec
(bad)
jae
adc
mov
jno
popf
or
pop
mov
xor
not
clc
cmc
lock
xor
or
push
mov
and
mov
mov
loope
xor
je
mov
push
push
or
hlt
js
daa
loope
(bad)
xor
add
mov
jo
add
stc
adc
adc
shl
repz
loop
mov
jbe
add
fs
xor
sbb
outs
repz
(bad)
and
adc
xor
dec
(bad)
sti
rcr
mov
(bad)
mov
pop
xor
mov
jnp
enter
nop
or
dec
sub
mov
xor
mov
ret
mov
cmps
fst
adc
mov
push
inc
sub
pop
or
pop
call
mov
rcr
je
mov
fbstp
out
xlat
sub
(bad)
mov
xlat
mov
aaa
jp
cmp
mov
add
in
jmp
jl
data16
sub
ror
dec
pop
mov
mov
mov
(bad)
lods
jno
imul
xchg
push
dec
call
push
adc
fsub
mov
mov
mov
cwde
aaa
pop
call
std
jmp
mov
add
pop
inc
retf
and
jnp
cmp
inc
mov
ss
hlt
push
xor
je
push
imul
test
shl
icebp
mov
adc
sbb
scas
cmc
shl
mov
pusha
and
cmp
sbb
cmp
cmp
out
xchg
jo
cmp
sti
mov
or
dec
iret
fs
mov
lock
dec
in
cmc
jl
shl
mov
cli
call
sbb
daa
(bad)
loopne
xor
int
inc
sbb
retf
push
jmp
icebp
enterw
adc
push
push
popa
(bad)
pusha
cmp
inc
icebp
call
(bad)
int
mov
push
clc
mov
push
movs
pop
sbb
xchg
cmp
jne
movs
mov
xor
aas
leave
test
xor
cli
arpl
scas
icebp
sbb
je
shl
ins
loope
sti
jnp
shr
je
push
inc
fidiv
retf
cmp
push
inc
sub
jmp
hlt
jecxz
nop
xchg
and
(bad)
push
mov
mov
add
adc
inc
sub
mov
push
and
cmp
xor
retf
adc
cmp
pop
fnsave
or
mov
inc
mov
test
xchg
rcl
scas
or
and
ds
movs
mov
nop
push
mov
xchg
cwde
xchg
sub
loopne
xchg
pusha
fild
mov
dec
jg
cld
sbb
mov
or
or
lods
jecxz
sub
jnp
ret
(bad)
js
sbb
fcomip
xchg
ins
aaa
cmp
aam
sbb
int3
or
mov
jbe
and
pop
xchg
lock
dec
outs
jg
hlt
in
or
ret
add
inc
je
sub
inc
jne
repnz
aas
icebp
adc
mov
dec
repnz
mov
jns
or
sbb
jmp
(bad)
or
inc
xchg
mov
mov
in
mov
stc
dec
les
(bad)
pop
sbb
cmp
push
push
rcl
dec
jl
sbb
(bad)
hlt
push
adc
push
dec
adc
pusha
add
(bad)
(bad)
jnp
mov
or
sbb
shr
sub
mov
ds
loope
stos
cmp
mov
ins
das
cmp
sub
mov
test
push
lock
xchg
jo
into
and
mov
addr16
xchg
or
out
push
stos
adc
xlat
xchg
es
out
ja
mov
mov
test
push
hlt
xor
and
xchg
pusha
popa
sub
push
sub
add
in
lahf
mov
sbb
push
data16
adc
(bad)
jbe
mov
or
test
mov
and
sbb
pop
test
and
push
pop
xchg
mov
or
xchg
fstp
sbb
push
mov
shr
lods
ins
in
xchg
push
xchg
cmps
push
rcr
pop
ins
cmps
xchg
sti
das
stc
repnz
jg
mov
xchg
mov
jmp
push
mov
inc
dec
jge
mov
mov
adc
pop
or
adc
pop
rol
lods
repnz
xchg
dec
mov
jmp
dec
fcos
mov
xor
adc
pop
fnstsw
adc
(bad)
js
mov
jg
out
add
(bad)
xchg
pop
pop
pop
in
enter
dec
mov
fdivr
dec
test
jecxz
xor
and
cmp
jp
adc
cmc
dec
repz
out
(bad)
cwde
mov
cmp
dec
movs
popf
mov
cdq
scas
or
addr16
cwde
sbb
jmp
cmps
push
ins
std
das
(bad)
and
nop
pop
fcom
aam
lods
in
push
cmp
addr16
(bad)
dec
stos
jo
dec
movs
push
sub
and
mov
add
cmp
gs
arpl
add
or
cdq
out
mov
nop
les
mov
mov
mov
sub
data16
mov
and
sbb
or
mov
inc
and
enter
dec
sub
jge
scas
inc
add
out
sub
outs
lods
call
jmp
push
sub
scas
sbb
test
ret
mov
enter
ins
ret
test
xchg
arpl
jg
test
in
cmp
lods
dec
stc
mov
test
adc
or
int
clc
sbb
out
shr
je
aam
out
test
sbb
pop
stos
icebp
xlat
push
xchg
aad
shl
lods
pop
push
mov
xchg
jge
daa
lods
xchg
popf
call
fsubr
inc
cdq
sahf
sub
and
and
(bad)
push
test
or
imul
lea
sbb
mov
mov
ror
mov
jo
cmc
mov
or
push
push
sub
fwait
ret
dec
cli
or
pusha
mov
sbb
sahf
scas
gs
cdq
inc
hlt
sub
push
inc
stos
in
and
mov
mov
cld
pop
mov
sub
dec
dec
jmp
dec
enter
adc
xlat
dec
mov
std
bound
cmp
mov
popa
push
xchg
pushf
pop
and
out
jmp
(bad)
sub
cs
dec
fisub
mov
pop
(bad)
push
hlt
jmp
pop
cli
pop
or
inc
dec
push
mov
pop
push
les
ins
inc
in
dec
call
jno
sahf
or
sbb
icebp
push
push
pop
inc
xchg
and
aaa
gs
adc
in
or
or
aas
mov
ret
cmc
mov
pusha
pop
add
mov
int
jg
in
ins
daa
dec
jmp
dec
test
(bad)
cmps
jmp
inc
xchg
xchg
sub
sar
xor
and
test
iret
adc
nop
test
xor
inc
cmp
mov
js
stos
cmp
movs
les
push
dec
pushf
xchg
mov
fwait
mov
xchg
inc
inc
sti
aaa
push
fsub
cmp
jne
xchg
and
shl
popf
push
pushf
mov
or
pop
int
int3
pusha
inc
shr
shr
cli
fst
pop
sub
stos
mov
push
loopne
push
sub
sbb
hlt
push
push
jns
rol
xchg
lods
add
xchg
dec
push
fs
sbb
in
ja
mov
leavew
mov
mov
dec
push
adc
ds
daa
and
add
and
cmps
pop
imul
and
arpl
lods
jle
mov
lods
or
jns
cmps
push
fisubr
dec
sub
pop
mov
aad
ret
ins
jmp
cmps
js
adc
and
jge
jbe
std
imul
mul
ins
aad
(bad)
pop
adc
dec
std
repz
cli
retf
sub
xchg
jne
mov
mov
dec
ror
arpl
stos
cwde
cmp
pushf
cli
xchg
push
aaa
xchg
sub
jge
inc
icebp
scas
cmps
mov
shl
daa
repz
mov
sub
adc
stos
ins
jno
lods
or
retf
fcomip
cmc
clc
sbb
rol
inc
mov
ret
sar
cmp
cmps
retf
(bad)
and
cmp
pop
adc
pushf
(bad)
cmp
pop
aaa
jbe
jp
test
outs
test
ss
cs
jne
sub
xor
xor
(bad)
mov
aas
pop
call
cmp
and
call
dec
in
pop
cmp
jmp
rol
es
(bad)
movs
sbb
sub
xchg
in
call
mov
cmp
sub
(bad)
cmp
push
cli
xchg
sbb
imul
cwde
push
or
or
add
adc
jge
test
mov
jecxz
push
test
mov
aas
cmp
std
out
pop
xchg
push
xchg
push
aas
inc
(bad)
mov
std
cmp
stos
add
pop
inc
popa
mov
call
iret
pop
jmp
and
mov
cld
sti
dec
neg
sbb
imul
int3
xchg
popf
cmc
push
mov
mov
mov
cmp
mov
adc
sbb
cmp
dec
mov
dec
mov
add
and
inc
cwde
jp
sbb
cli
stos
loop
cli
rcr
imul
cwde
stos
push
pop
out
fcmovnb
ins
pop
movs
ds
mov
(bad)
sbb
in
jg
mov
fcmovnb
mov
cdq
mov
test
or
ror
push
push
jns
push
jb
sbb
push
stc
retf
in
aam
(bad)
(bad)
stc
inc
into
gs
stos
jb
adc
repz
(bad)
xor
sub
mov
mov
int
call
mov
pop
pop
pushf
or
iret
mov
test
ds
mov
lahf
iret
sbb
mov
mov
das
inc
in
push
inc
std
scas
sub
sbb
jmp
in
leave
fisttp
xchg
popa
sub
push
(bad)
pop
js
(bad)
(bad)
es
pop
mov
stos
sbb
mov
jmp
int
xchg
jle
lea
pusha
inc
jno
mov
pusha
dec
sub
in
jns
pusha
sahf
test
push
mov
lods
pop
dec
sub
push
leave
and
retf
call
inc
jns
cli
and
cdq
mov
sbb
dec
and
imul
mov
repnz
outs
scas
loop
rcr
sub
push
int3
popf
es
pop
js
inc
hlt
push
out
movs
scas
or
sbb
test
push
mov
div
mov
jmp
or
cdq
(bad)
pop
loop
xor
aam
xor
adc
add
adc
mov
mov
ficom
cmp
xor
sub
(bad)
jo
std
add
dec
and
loope
leave
cmp
lods
cdq
jmp
push
pop
out
jl
movs
mov
les
(bad)
or
ins
jg
sbb
retf
mov
sbb
mov
fld
add
adc
xchg
mov
lock
xor
(bad)
dec
leave
outs
jge
inc
sbb
jb
mov
pop
rcr
mov
and
adc
cmp
fsubr
int
clc
inc
dec
mov
pop
stos
dec
fild
cld
sub
xlat
cmp
cld
mov
mov
ficomp
adc
add
aam
dec
and
stc
mov
mov
pop
ds
ins
sub
xchg
dec
xor
xor
add
call
aaa
or
mov
push
mov
loope
jp
and
clc
and
mov
ficomp
js
push
leave
mov
mov
inc
xor
daa
sub
out
pop
pop
inc
mov
ror
dec
jp
fisubr
add
dec
loope
ja
sub
or
aas
sti
imul
stos
sbb
loope
stos
and
dec
mov
(bad)
push
add
inc
xchg
xchg
mov
loopne
aas
or
cmp
inc
repnz
mov
loop
stos
push
mov
test
pop
fabs
xchg
sub
xchg
int3
jo
and
test
movs
jnp
sub
das
inc
mov
addr16
outs
(bad)
mov
daa
xlat
sbb
mov
call
pop
in
dec
call
xchg
cmp
dec
in
data16
inc
out
and
cwde
sub
mov
jp
lmsw
push
mov
xor
mov
mov
jmp
dec
movs
jecxz
or
cmp
push
jg
adc
cmp
jecxz
movs
fdiv
mov
mov
sub
sbb
stos
out
leave
adc
(bad)
out
pushf
sahf
pop
jg
fs
jno
mov
mov
cmp
cmps
sub
dec
ja
pop
lods
imul
sub
or
cmc
xchg
jb
arpl
std
add
xor
outs
inc
dec
pop
popf
fucomp
ss
js
sub
iret
jb
mov
repnz
xor
jp
mov
outs
lahf
xchg
mov
jmp
push
or
retf
inc
ficomp
jmp
outs
jb
addr16
idiv
jecxz
jecxz
mov
jno
stc
sahf
xchg
mov
fwait
push
lock
iret
shl
movs
shl
dec
clc
mov
xlat
pop
jns
out
mov
or
xor
scas
jnp
jb
sub
div
inc
sbb
jbe
repnz
movs
sbb
pop
je
fwait
ret
mov
mov
push
inc
or
mov
cmp
push
mov
sbb
mov
sbb
push
inc
lds
push
das
(bad)
mov
and
cmp
or
shl
sub
ds
jno
gs
repz
and
inc
jae
in
mov
push
push
aaa
sub
mov
mov
ds
loop
jecxz
or
xlat
mov
aad
es
in
aas
pop
pop
push
jmp
lds
xor
retf
fs
pop
adc
ja
adc
das
xor
adc
jb
fistp
xor
inc
mov
push
sbb
mov
push
cwde
fs
xchg
jno
and
(bad)
fs
cmp
jp
sub
imul
loop
xchg
inc
cmp
dec
cmp
popa
sbb
dec
cmp
add
aam
mov
ret
pop
cld
mov
mov
sub
ror
xchg
pop
in
lea
fbld
lahf
dec
outs
nop
jo
pop
movs
xor
gs
clc
retf
and
call
and
test
cmc
fidivr
int3
add
dec
lea
int
test
adc
bswap
inc
in
movs
lahf
sub
and
hlt
jo
leave
mov
out
ror
test
and
mov
cs
call
dec
cmp
pop
push
or
jns
neg
lods
sbb
shr
movs
sbb
aaa
je
ja
(bad)
jo
add
outs
pop
js
xchg
outs
sar
and
or
push
aas
pop
(bad)
int3
push
cmp
or
xchg
jns
aas
mov
ret
gs
xlat
inc
push
inc
jmp
add
cmps
pop
mul
test
xor
(bad)
in
pop
mov
imul
dec
mov
mov
push
pusha
mov
sar
cmp
aam
adc
gs
adc
inc
daa
or
jno
fucomip
push
(bad)
jecxz
pop
dec
or
popa
cwde
test
push
jbe
inc
cmps
mov
adc
inc
in
movs
add
jae
inc
xor
add
xchg
push
stos
xchg
jns
xor
leave
cmp
pop
adc
sbb
xor
mov
(bad)
push
nop
sbb
lock
xchg
sti
ins
adc
jae
mov
dec
sti
dec
sbb
out
rol
je
ret
pop
push
aam
je
mov
arpl
jo
loope
pop
mov
jg
adc
cmp
dec
cmp
adc
or
pop
dec
test
cmc
mov
std
loopne
mov
xchg
jo
add
add
dec
ins
hlt
mov
mov
lock
mov
sbb
sar
in
cmp
out
push
rol
add
dec
aam
sbb
iret
xor
in
jecxz
dec
jno
test
or
xchg
data16
into
in
xor
shl
mov
lods
aam
dec
jnp
push
fwait
dec
jne
iret
stc
ret
inc
sub
sbb
inc
cwde
fldenv
addr16
jg
arpl
jb
jae
jecxz
or
(bad)
out
mov
ficomp
mov
scas
fdivr
leave
cwde
aam
cwde
test
inc
and
dec
cmps
popa
nop
xor
pop
push
inc
cli
(bad)
push
and
or
aam
mov
daa
xor
push
sub
ins
cmp
jbe
xchg
(bad)
clc
add
push
xchg
xor
rcl
push
pop
pop
stos
mov
inc
dec
cmovge
xchg
bound
or
xlat
pop
ins
jl
(bad)
sbb
fimul
out
or
jno
mov
(bad)
std
cmp
and
and
cmp
out
mov
shl
sbb
mov
inc
push
sbb
push
xchg
jecxz
add
fist
mov
inc
out
dec
das
les
lods
xchg
enter
adc
into
inc
shl
and
sub
jl
je
adc
cmp
adc
lods
mov
xchg
in
cmp
(bad)
call
dec
into
jg
inc
and
xchg
push
dec
dec
loop
and
xlat
cmp
hlt
(bad)
fsub
enter
(bad)
xlat
mov
add
mov
pop
sbb
dec
mov
sbb
jae
clc
daa
xchg
(bad)
fld
(bad)
and
sub
mov
pusha
jle
movs
rol
imul
pop
mov
add
mov
xchg
dec
inc
sub
or
mov
or
xchg
shl
mov
je
aaa
push
jp
aaa
pop
pop
mov
retf
pop
xor
pop
xor
push
mov
sub
sahf
xchg
clc
push
stos
push
and
sbb
out
div
inc
in
xlat
xor
lods
dec
and
add
push
rol
pop
fnstcw
dec
repz
(bad)
loopne
xor
pop
(bad)
hlt
movs
push
sub
rcl
cwde
addr16
xchg
pop
aas
outs
jp
int3
push
(bad)
mov
sub
je
outs
cmp
adc
fisttp
jmp
daa
mov
mov
cmp
mov
jbe
mov
inc
mov
fisubr
push
test
sbb
lahf
dec
sbb
call
lahf
mov
lods
xchg
aas
movs
inc
ins
or
and
mov
imul
lea
push
leave
xchg
push
out
out
es
addr16
pusha
int3
mov
mov
add
inc
inc
(bad)
jae
(bad)
mov
mov
xor
adc
adc
out
adc
inc
dec
xor
push
inc
and
cmp
sbb
mov
data16
test
add
ficom
in
shl
enter
icebp
fnstenv
mov
jnp
cmp
fsubr
xor
gs
xchg
fcmovnbe
rcl
lds
ds
inc
in
pop
and
leave
mov
shl
(bad)
push
add
xor
push
xor
shl
pop
mov
pop
fmul
inc
rol
std
in
sbb
outs
loopne
cli
cmp
loope
xor
(bad)
cmc
ins
jae
in
push
out
pop
mov
in
cmp
frstor
mov
jecxz
adc
mov
popf
or
popf
add
lahf
xor
add
pop
mov
outs
mov
sbb
ret
jno
xor
xchg
push
and
fisubr
mov
add
sbb
adc
fwait
xor
xchg
inc
outs
inc
ins
iret
sub
cli
or
(bad)
mov
jo
sbb
add
(bad)
fwait
xchg
stos
sti
addr16
cld
daa
popf
cld
cli
rcl
cmp
pop
xor
enter
rcl
(bad)
out
retf
mov
cmp
adc
sbb
mov
outs
mov
xchg
and
scas
stc
int
out
push
xchg
bound
and
call
mov
sbb
cmp
xor
mov
lea
movs
(bad)
cmc
xchg
sub
xor
cmp
stos
in
addr16
adc
outs
push
pop
or
in
lods
call
dec
aas
or
into
xchg
add
xor
sahf
pop
popa
into
push
out
int3
loopne
loopne
cld
dec
add
movs
add
stos
jmp
sub
pop
js
sbb
shl
sti
xchg
test
ror
std
hlt
loope
mov
(bad)
loop
push
stos
mov
repnz
dec
jle
cmps
cmp
jbe
js
outs
inc
sbb
add
sub
in
aad
mov
push
jae
add
rcl
dec
inc
aad
jl
fbld
in
aad
jb
jmp
fcom
rcr
aaa
out
loop
stos
iret
xchg
dec
in
outs
jl
and
cmc
jl
xchg
leave
test
leave
jnp
jae
pop
pusha
sbb
out
test
fist
popa
mov
pop
and
mov
inc
pop
mov
cmps
in
cmps
sbb
fdivr
(bad)
das
xlat
pop
pop
not
jge
cmp
out
sub
lods
adc
dec
mov
xchg
pop
adc
sbb
sub
push
sbb
fisttp
add
into
aad
mov
xchg
call
ins
jbe
add
lock
test
int3
push
mov
push
inc
not
data16
cmp
clc
rcl
push
sub
sbb
dec
outs
add
push
das
push
jnp
xchg
cs
(bad)
leave
ins
jb
and
xchg
xchg
fimul
dec
inc
psubd
cld
jns
adc
int3
dec
pop
inc
xchg
mov
nop
xchg
xchg
jp
cmp
pop
outs
or
xchg
sub
stos
mov
enter
scas
in
xchg
sub
mov
js
push
mov
iret
call
push
jge
fwait
jmp
xchg
hlt
rol
fwait
test
jnp
ss
mov
adc
adc
push
adc
push
out
add
inc
pusha
cmp
std
push
sbb
xchg
adc
shl
jno
ret
sahf
sbb
mov
int
xor
inc
dec
inc
popf
ins
cmp
dec
adc
pop
ror
push
cwde
sbb
das
pop
jl
adc
dec
cdq
inc
or
int
movs
xor
mov
inc
pop
gs
bnd
pop
jnp
xchg
xchg
ret
lahf
sbb
push
mov
out
cmp
xor
idiv
push
adc
addr16
dec
outs
xor
into
gs
(bad)
mov
mov
push
sub
stos
sub
add
xor
xor
lock
push
mov
xor
out
pusha
mov
xchg
sub
bound
out
sbb
idiv
(bad)
cmp
rcr
ret
mov
and
push
fisttp
(bad)
cmp
iret
mov
dec
pusha
mov
sbb
and
pop
in
rcl
into
or
cmp
(bad)
jb
add
adc
mov
int3
jge
loope
mov
aas
and
jp
xchg
fsubr
dec
sbb
pusha
xchg
mov
adc
in
icebp
fwait
sbb
push
inc
or
and
loope
jle
enter
xchg
pop
or
xor
(bad)
ja
add
and
rcr
pop
iret
or
mov
push
scas
jp
push
mov
div
out
ins
sub
ret
mov
dec
outs
push
cdq
adc
sbb
mov
jl
outs
jmp
lahf
sahf
leave
add
cmps
retf
xor
sti
dec
retf
gs
or
and
icebp
xchg
les
sbb
pop
inc
jbe
add
nop
shl
nop
mov
out
mov
mov
xlat
bound
dec
xor
xor
pop
(bad)
je
cmp
lock
add
inc
mov
out
leave
adc
adc
add
add
(bad)
imul
adc
mov
in
mov
cmps
ins
test
xchg
mov
jo
cmp
scas
loopne
and
cmp
ins
mov
fdivr
dec
adc
add
inc
sti
dec
or
push
leave
mov
(bad)
in
outs
mov
xor
sub
int3
lods
inc
xor
cli
sub
xchg
ins
xchg
push
inc
xor
and
mov
ret
xor
sahf
enter
xchg
ss
jp
ret
out
ret
add
shr
daa
mov
inc
call
inc
sub
stos
loope
mov
push
aas
je
data16
push
jmp
aam
adc
dec
xor
fsubr
xchg
mov
or
push
lods
dec
adc
or
mov
push
lea
stc
ja
in
jb
ds
mov
iret
adc
mov
jne
mov
inc
imul
pop
gs
sub
imul
js
mov
pop
jge
test
adc
out
push
call
xchg
inc
sub
mov
stos
sub
stc
inc
inc
(bad)
xchg
jno
adc
adc
sbb
aas
out
xchg
lea
in
ret
dec
fmul
pop
icebp
add
test
or
pop
mov
movs
lds
sbb
mov
mov
bound
mov
call
ss
mov
(bad)
mov
sbb
or
int3
sbb
jb
call
shl
or
pushf
int
pop
sbb
or
pop
push
test
ror
fiadd
push
test
mov
movs
aaa
pop
in
xor
iret
and
ja
mov
jne
sbb
adc
inc
and
mov
xlat
pop
mov
mov
pop
mov
rol
push
sub
fst
pop
movs
dec
jbe
cmc
rol
inc
(bad)
(bad)
shr
xor
daa
jmp
mov
sub
ficomp
ret
mov
mov
cs
fsubr
ret
nop
lods
sbb
or
cli
jecxz
fstp
aam
cs
sbb
rol
pop
loopne
retf
into
fild
outs
xchg
addr16
rcl
add
mov
or
nop
fs
sub
mov
and
ret
mov
adc
aam
mov
movs
fadd
inc
cmp
outs
out
mov
(bad)
pop
and
inc
aas
outs
ficomp
xor
stos
in
lods
dec
call
inc
cmp
push
and
hlt
aas
out
loopne
imul
ins
leave
test
es
mov
stc
arpl
aaa
push
mov
in
retf
test
fisttp
cs
mov
sahf
imul
dec
fldcw
rcl
and
cmc
cmp
shr
xchg
out
sbb
lock
into
popf
jne
(bad)
xchg
mov
lods
shl
dec
jbe
adc
cs
imul
add
test
popa
and
ficom
pop
or
pushf
nop
jns
add
cmp
xchg
push
mov
push
jmp
lock
inc
cwde
cs
xor
cmp
stos
dec
popf
xchg
mov
call
and
mov
enter
mov
dec
fsub
inc
lahf
push
mov
pusha
ss
nop
mov
mov
sub
dec
out
mov
inc
push
fdivr
jmp
inc
and
push
adc
xor
cmc
mov
pop
inc
int3
(bad)
jecxz
mov
js
mov
jbe
ja
add
mov
shl
sub
mov
nop
push
mov
mov
mov
aad
mov
clc
pop
jns
push
dec
or
push
dec
out
jbe
movs
pop
inc
xchg
call
cld
stos
clc
push
aad
sbb
cld
pop
gs
fxch
push
stos
popw
div
mov
mov
push
jp
dec
mov
adc
or
push
movs
push
(bad)
push
ja
adc
lods
adc
xchg
or
(bad)
(bad)
xchg
pop
mov
nop
or
cdq
jg
cmps
dec
lahf
test
sub
dec
mov
mov
fnstcw
xchg
daa
mov
shr
cmp
iret
cmp
ret
dec
mov
stc
pop
loop
and
mov
rcr
cld
(bad)
ins
nop
jecxz
xchg
mov
(bad)
jne
retf
mov
adc
or
xor
outs
fmul
mov
das
test
ins
jne
mov
inc
and
mov
cmp
fcomp
or
xlat
out
cs
push
cmp
dec
(bad)
mov
inc
pop
mul
test
push
inc
pushf
(bad)
fdiv
xchg
scas
std
add
fidiv
fsubp
cmps
(bad)
aam
inc
cmp
out
mov
call
aaa
mov
dec
lods
sbb
popf
inc
inc
dec
add
cmp
mov
leave
dec
repnz
scas
mov
dec
cwde
and
loop
jnp
mov
or
push
(bad)
xor
aad
pop
aad
push
dec
mov
pop
push
pop
retf
fcmovnb
add
mov
pop
sbb
and
hlt
shr
shr
nop
mov
and
pop
push
mov
lds
push
or
push
sbb
test
rep
retf
push
pop
(bad)
das
lock
sub
mov
scas
jp
sub
push
(bad)
mov
sar
addr16
mov
xchg
outs
dec
in
ds
test
test
adc
sbb
arpl
xor
sbb
es
mov
imul
push
cwde
test
int3
mov
inc
not
mov
jb
daa
or
lods
xchg
mov
mov
mov
nop
xchg
popa
push
jb
inc
xchg
mov
sub
xor
aas
xchg
or
xor
add
fdiv
sub
jo
test
rol
cmps
retf
push
ror
lock
mov
in
mov
retf
retf
int3
dec
lock
sbb
test
xchg
pop
sub
(bad)
aaa
cmps
inc
mov
sbb
sti
xchg
es
add
leave
xchg
push
push
scas
bound
(bad)
push
mov
mov
lods
pop
pop
and
jecxz
aad
leave
int
fld
pop
push
movs
mov
hlt
pop
xor
inc
or
mov
sbb
(bad)
mov
movs
mov
sbb
std
jp
add
and
xchg
add
and
cmp
mov
xor
dec
push
ja
jg
cli
push
xchg
mov
cmps
add
fs
adc
in
je
dec
add
cmc
jl
adc
enter
adc
adc
icebp
pushf
imul
add
shl
xor
arpl
sbb
aad
pop
push
mov
xchg
push
cmps
pop
jbe
sti
lds
lea
lea
scas
push
inc
shl
cmp
cmp
jbe
push
mov
jne
push
repz
pop
fs
cmp
jo
out
aas
cmp
add
xchg
xor
ins
inc
test
push
enter
dec
movs
cmp
mov
(bad)
push
cmc
pusha
clc
inc
inc
mov
mov
pop
cmps
and
mov
dec
mov
fimul
out
(bad)
dec
repz
jg
cld
cmp
adc
pop
das
xchg
sbb
pop
xor
mov
sub
pop
aam
idiv
mov
mov
in
sub
dec
and
arpl
call
ror
pop
pop
leave
dec
xor
lock
cld
sar
or
and
stos
shr
out
iret
mov
outs
xor
or
push
fwait
xchg
mov
stos
jg
je
movups
in
dec
lea
(bad)
jbe
fsubr
fwait
sbb
nop
sbb
and
mov
cmp
xchg
mov
test
dec
sub
and
out
mov
mov
sub
sub
pop
mov
pop
div
dec
adc
cmp
sub
pop
stos
and
inc
jp
cmp
mov
aaa
mov
out
and
cld
dec
pop
out
mov
aad
mov
and
pcmpeqw
mov
fdivr
in
dec
mov
mov
into
std
lods
fsub
xor
cmp
mov
mov
daa
call
push
push
cmp
pop
ja
movs
mov
inc
mov
jne
inc
neg
sub
sub
test
sbb
sub
loop
adc
sbb
jne
mov
jb
aam
cwde
adc
iret
out
mov
cdq
rcl
out
daa
inc
and
push
adc
dec
dec
xchg
cmps
rcr
xchg
aas
sub
jmp
push
addr16
add
(bad)
fadd
cld
mov
std
xor
xchg
test
push
mov
adc
ret
mov
mov
xchg
arpl
mov
sub
fdiv
jmp
imul
push
pushf
jmp
sbb
inc
jb
adc
sar
or
pop
mov
mov
xor
xchg
(bad)
mov
nop
inc
pop
inc
inc
xchg
outs
ds
push
lahf
cmc
aaa
mov
scas
mov
cli
int3
shl
out
lock
(bad)
out
lea
mov
cmc
xchg
test
leave
push
cmps
ss
mov
stos
push
scas
es
out
shl
pop
stc
jecxz
xor
lods
je
dec
add
add
adc
ficomp
sub
sti
fs
xchg
mov
dec
rcl
mov
cmc
aam
scas
leave
xor
mov
jo
cmp
cli
bound
sub
xchg
movs
mov
(bad)
repnz
push
inc
push
mov
add
and
or
push
pusha
sub
mov
lods
pop
xchg
mov
mov
push
ret
xchg
(bad)
mov
mov
mov
push
pop
retf
xchg
fcmovnb
(bad)
mov
movs
cmp
adc
cmp
out
imul
dec
mov
jbe
xchg
test
std
retf
mov
and
xor
test
loope
jns
jns
imul
pop
sbb
(bad)
enter
xchg
scas
mov
adc
push
shl
or
mov
das
repnz
imul
push
ja
scas
cmps
mov
sub
daa
add
pushf
iret
add
lea
xorps
adc
(bad)
out
cmp
or
mov
or
into
or
mov
mov
cmp
jle
push
shr
cld
movs
adc
jns
or
out
mov
nop
call
sub
mov
outs
mov
mov
sub
ja
inc
lahf
mov
data16
mov
jecxz
in
outs
push
or
mov
scas
sbb
lods
or
jae
popf
push
scas
mov
cld
xchg
lea
jo
cli
shr
adc
jmp
push
test
jmp
(bad)
dec
cmp
mov
mov
add
loopne
add
out
(bad)
stc
xlat
fild
inc
push
and
(bad)
lock
das
cmps
mov
retf
(bad)
push
jge
clc
adc
sbb
mov
inc
mov
aad
xor
(bad)
mov
pusha
push
jb
imul
popa
jbe
int
repnz
sub
xchg
jmp
test
sub
mov
ret
mov
adc
fst
xchg
jns
adc
in
shl
les
test
je
mov
sbb
push
stc
outs
cli
shr
and
ja
sub
fst
mov
out
shr
lods
sar
jb
int
add
out
xchg
or
add
mov
jno
jp
scas
dec
ficom
mov
inc
cmp
and
ret
fdiv
stos
jmp
shl
mov
and
adc
inc
mov
adc
pop
jmp
xor
movs
inc
xchg
xchg
les
ins
jbe
stos
push
(bad)
mov
jae
fwait
aad
jae
mov
xchg
stos
pop
sub
leave
push
pusha
jg
nop
mov
and
lea
les
add
sub
aad
rcr
or
movs
scas
mov
jle
cld
xchg
cmp
das
addr16
int
nop
xchg
not
or
in
pop
push
aaa
ins
lods
(bad)
mov
sbb
pushf
sbb
adc
rcl
out
shr
pop
mov
ins
(bad)
imul
adc
sub
rcl
into
and
sahf
push
push
ins
pop
xchg
mov
inc
cwde
ss
mov
fcomp
cs
in
mov
jmp
and
cmp
sub
cmp
lods
mov
cmp
scas
adc
rcr
pop
sub
jecxz
out
clc
xchg
int3
data16
dec
and
retf
nop
and
cmp
sub
push
inc
scas
shl
cmp
aas
jg
ins
sbb
jno
sub
sub
ret
iret
repz
daa
mov
pop
inc
sub
inc
mov
aaa
int3
fsubr
rcl
scas
xor
in
push
mov
jle
cmp
inc
stc
dec
mov
lds
shl
push
inc
pop
(bad)
mov
addr16
cs
xchg
mov
push
mov
ds
add
inc
clc
cmps
movs
psrlq
aam
fst
add
test
inc
sub
adc
call
shl
sub
imul
lods
and
or
cmps
cmps
jg
sbb
retf
inc
mov
iret
stc
jno
sub
out
dec
xor
mov
push
call
mov
repnz
bound
mov
pushf
mov
cmp
or
ret
mov
or
js
sahf
and
and
test
shl
and
add
div
push
mov
int3
in
shl
outs
mov
fild
cli
in
mov
pop
sub
inc
icebp
(bad)
cmc
xchg
mov
stc
loopne
dec
xchg
and
aam
(bad)
xchg
loope
or
cmp
les
mov
sbb
cmp
std
shl
mov
retf
sbb
pop
push
ret
stos
push
jne
adc
jno
dec
cmp
and
push
test
xchg
(bad)
(bad)
movs
test
dec
call
push
cmp
sbb
dec
imul
add
les
in
pop
pop
lahf
sbb
(bad)
(bad)
out
out
push
cmps
add
jmp
test
(bad)
cmps
pusha
sti
mov
jae
call
or
ins
fisttp
jb
pop
lds
cmp
adc
ds
add
sub
jo
jb
inc
sbb
(bad)
stos
add
xchg
xchg
out
repnz
das
mov
push
push
mov
rol
jo
movs
dec
sbb
cmp
adc
ins
jp
add
mov
cmc
mov
pop
bound
outs
inc
xchg
cmp
mov
pushf
movs
imul
cli
out
push
cmp
ds
mov
loopne
mov
js
jmp
push
dec
pop
push
add
hlt
mov
test
int
xchg
out
jb
mov
stos
sbb
inc
scas
aaa
push
pop
fld
sub
fnstenv
movs
or
xchg
mov
out
mov
and
pop
out
test
pop
push
scas
cmp
push
enter
pop
loopne
add
add
pop
int3
sub
inc
xor
pop
add
pop
movs
dec
mov
iret
clc
sbb
xchg
or
xchg
push
jg
sar
imul
dec
jle
pop
pop
popf
aas
ret
or
adc
jge
push
jbe
push
pop
(bad)
adc
int3
fbstp
or
daa
aam
call
mov
dec
sub
shl
jno
and
shr
sub
mov
cmp
add
ins
or
add
pop
out
or
xchg
sahf
pushf
xor
fld
cld
mov
mov
inc
repnz
sahf
xchg
(bad)
int3
xor
int3
push
out
repnz
push
repz
fwait
std
pop
sbb
in
stos
and
dec
cmps
mov
retf
xchg
arpl
adc
adc
(bad)
and
or
out
(bad)
cs
ds
add
xor
out
push
cli
sub
ja
jmp
(bad)
mov
stos
popf
stc
mov
js
add
enter
lods
frstpm(287
mul
ds
loop
push
fidivr
jg
pushf
cmps
add
pusha
mov
lods
sbb
mov
mov
pop
in
and
or
cmp
sti
xchg
pusha
fwait
mov
push
fwait
in
cmp
cmp
adc
jl
loope
push
adc
inc
data16
stc
mov
fs
das
add
hlt
push
pushf
dec
ret
mov
rol
arpl
jmp
ins
ror
gs
and
xchg
inc
add
pop
sub
cld
add
cmp
push
adc
dec
bound
sbb
cmp
repnz
hlt
cmps
dec
inc
imul
mov
int
jbe
push
dec
ret
fs
(bad)
mov
add
adc
out
pop
jno
dec
fs
retf
inc
sbb
loopne
clc
xchg
sti
mov
push
and
std
ins
inc
test
cmp
sbb
(bad)
add
cwde
cwde
inc
(bad)
dec
imul
jge
stos
js
push
out
adc
out
jecxz
mov
push
ins
sbb
arpl
stc
xchg
rcr
int
neg
loop
cmc
fadd
sahf
popf
jmp
clc
vpcomw
dec
push
xchg
mov
mov
packsswb
inc
and
sahf
mov
and
stos
popf
dec
(bad)
fistp
mov
xchg
jb
jp
arpl
xor
mov
xchg
or
push
jbe
popf
mov
pop
rol
nop
lahf
cmp
adc
push
mov
and
rcr
enter
fsub
or
cmps
sub
cmp
xchg
icebp
jo
inc
dec
(bad)
sbb
pop
and
mov
in
ror
mov
jecxz
push
loop
push
dec
test
shl
out
sub
jns
push
sub
std
rcl
push
or
fnstenv
add
dec
test
out
nop
sub
enter
ja
inc
out
ins
cmp
mov
pop
xor
ja
cs
add
pop
push
loop
call
mov
sbb
ficomp
fmul
jb
xchg
fdivr
mov
mov
addr16
jmp
mov
mov
dec
and
sub
mov
mov
sahf
mov
stc
push
push
repz
dec
sbb
push
sti
jl
in
sbb
and
out
cs
lds
fild
adc
data16
sub
jno
pop
or
sub
xor
out
mov
adc
or
dec
nop
(bad)
adc
sti
rcpps
dec
xchg
cdq
fcomp
ss
cwde
mov
les
out
int3
(bad)
dec
stos
arpl
mov
popa
ret
mov
or
sbb
int3
dec
jmp
or
jb
mov
push
repnz
add
jl
adc
(bad)
(bad)
xor
inc
scas
push
mov
xor
jo
sbb
test
jle
lods
sar
mov
mov
xchg
(bad)
or
dec
add
iret
sbb
push
iret
xor
and
popa
or
fistp
icebp
inc
mov
cmc
fsubr
cmp
loop
push
aaa
push
cmp
xor
in
sahf
dec
sti
push
daa
(bad)
fnstenv
push
fst
inc
pop
bound
mov
icebp
xor
(bad)
sti
xor
pop
mov
mov
das
pusha
xor
jmp
sbb
inc
jno
push
mov
outs
js
xor
data16
jp
(bad)
mov
pop
sbb
nop
dec
std
mov
mov
mov
jge
jmp
adc
int
mov
(bad)
mov
test
in
inc
ins
and
jge
cmp
mov
mov
test
sub
out
push
push
ret
scas
enter
repz
and
push
inc
call
mov
das
adc
psubb
xor
jmp
repz
push
push
adc
aad
sbb
add
icebp
jno
xor
js
lea
push
push
jnp
and
push
xlat
or
mov
arpl
jne
mov
dec
push
add
mov
xchg
xor
sbb
lahf
mov
ret
or
call
xor
aaa
push
xchg
mov
ds
xor
and
jnp
inc
cdq
rcl
sbb
sahf
call
test
inc
push
je
cmp
lods
jns
das
mov
jmp
mov
sbb
dec
or
mov
cli
xlat
mov
test
adc
(bad)
hlt
arpl
push
adc
sbb
daa
fwait
inc
movs
ret
cmp
std
sub
push
xor
loopne
xor
ds
push
leave
test
std
mov
hlt
adc
imul
mov
cmp
fcom
or
xchg
and
gs
mov
sbb
nop
mov
adc
dec
inc
in
fist
xchg
push
loop
int
retf
pop
sbb
mov
xchg
sti
shl
int3
leave
and
mov
pop
add
repnz
xchg
xchg
jmp
xchg
int
aam
jae
ds
cmp
scas
test
xchg
mov
(bad)
cli
add
das
cwde
sub
cmp
bound
or
mov
push
fldcw
mov
pop
dec
mov
movs
sbb
mov
adc
or
inc
sub
xchg
bound
fild
sbb
inc
and
sbb
xchg
push
cmp
jmp
sub
mov
push
add
loop
test
icebp
cmp
fadd
xchg
int
jle
mov
push
sbb
jmp
fs
sbb
or
push
sub
lahf
loopne
dec
movs
mov
lods
lds
scas
mov
inc
(bad)
shl
ficomp
ds
in
jne
inc
cmp
cmp
inc
les
retf
or
xor
iret
cdq
nop
and
xor
cmp
inc
movs
(bad)
or
cmc
mov
mov
mov
push
jl
pop
ret
mov
push
(bad)
inc
jno
add
jg
out
adc
xchg
nop
ret
jl
enter
leave
dec
cli
stc
cli
mov
jmp
dec
fwait
aaa
(bad)
test
or
sub
pop
pop
xchg
retf
ins
jno
mov
xor
pop
sub
mov
mov
and
push
sub
pop
test
shl
and
(bad)
pop
mov
fwait
mov
sbb
jno
push
mov
mov
push
and
(bad)
xor
jnp
int3
push
inc
lock
jae
add
std
lock
xchg
and
out
cmp
les
push
test
push
in
jb
fidiv
mov
push
push
lea
jl
(bad)
and
cmps
dec
jecxz
loope
es
sti
loopne
adc
faddp
push
xor
mov
adc
inc
push
and
mov
cmc
xchg
std
mov
xor
imul
xchg
std
pop
push
xor
add
ret
adc
inc
fisttp
popa
lock
popf
lahf
push
sub
jl
push
dec
xor
mov
sub
fstp
push
stos
mov
aam
xor
fdivr
or
(bad)
mov
out
mov
callw
scas
mov
stc
leave
push
fwait
push
or
movs
mov
inc
imul
and
(bad)
retf
xor
rcl
sub
outs
cmp
add
std
inc
icebp
je
xchg
push
mov
inc
outs
aas
push
fwait
lock
nop
test
clc
jl
aam
pop
mov
fmul
es
push
pop
cmp
jecxz
cwde
mov
out
jne
faddp
leave
ret
xchg
mov
and
call
mov
mov
fsub
test
sbb
mov
test
fidivr
popf
test
xor
dec
cmp
popf
jecxz
mov
sub
sbb
fild
sub
out
mov
ret
cli
neg
cmp
mov
inc
add
inc
fdivp
(bad)
ja
pop
push
xchg
mov
inc
jg
or
jp
clc
mov
or
outs
bound
xor
sar
xchg
int
loope
retf
pop
int3
jle
cwde
outs
in
add
in
xchg
(bad)
aad
sbb
std
pop
xor
sar
dec
dec
or
dec
pop
mov
sbb
sar
xor
adc
and
jnp
dec
jnp
daa
lea
or
pop
sub
cmc
sbb
cmp
mov
push
retfw
add
cmps
adc
xchg
aaa
ror
add
call
and
in
std
mov
in
mov
push
mov
sbb
sub
cmps
cmp
add
add
or
inc
sahf
mov
add
push
xor
sbb
fcomi
sub
add
sbb
mov
and
sbb
test
int
not
retf
adc
jmp
inc
clc
mov
pop
mov
int
ficom
dec
in
lods
dec
ret
fs
in
add
mov
lods
aas
enter
sub
hlt
cmp
mov
jae
lea
sahf
or
fsubr
or
mov
push
jns
pop
and
cdq
loope
adc
aad
out
stos
jnp
mov
mov
cs
inc
cmp
jae
add
ss
xor
mov
xor
arpl
jmp
inc
push
std
fdivr
test
mov
popf
xor
loopne
add
(bad)
retf
xor
mov
jne
imul
(bad)
mov
adc
out
popa
sbb
fiadd
in
aam
mov
mov
pop
lahf
fistp
xchg
arpl
mov
lahf
hlt
jg
out
push
into
jmp
push
scas
gs
mov
call
jp
adc
mov
adc
mov
mov
test
nop
adc
leave
jmp
pop
popa
bound
jno
pop
sahf
inc
rcl
arpl
out
repnz
test
mov
movs
push
ins
inc
add
inc
sbb
test
int
loopne
imul
mov
std
adc
loop
and
bound
jp
stos
mov
xchg
pop
inc
dec
cmps
not
shl
cmps
loopne
mov
mov
std
mov
lahf
sub
(bad)
sub
dec
mov
daa
jae
fcmovbe
call
push
inc
mov
test
adc
test
(bad)
and
out
addr16
dec
pop
mov
inc
repz
test
push
add
gs
inc
js
xchg
in
inc
mov
push
(bad)
sahf
mov
and
out
fdivr
cli
in
icebp
stos
out
mov
jae
mov
sbb
push
xor
pop
aad
mov
out
pop
push
setge
push
pop
xchg
xchg
sbb
sti
or
in
cmc
aaa
ds
hlt
lods
inc
ret
inc
pop
ins
sbb
outs
aas
inc
mov
jmp
xchg
sti
jb
push
add
or
std
rcl
dec
in
lods
or
or
jge
xchg
sub
and
adc
shl
xchg
xchg
pop
aaa
aam
lds
dec
ins
xchg
push
fs
mov
xlat
sahf
mov
jle
pcmpgtb
icebp
xchg
lds
in
sbb
mov
push
sahf
cmp
lahf
xor
xlat
popf
mov
shl
leave
rcr
adc
pushf
inc
paddsb
loope
pop
aaa
xor
int
fwait
test
mov
lods
lods
loopne
adc
inc
in
pop
and
and
pop
leave
and
dec
pop
iret
loop
cmp
or
(bad)
jg
cmp
sbb
add
xchg
ret
xor
aad
xchg
sub
inc
sbb
aam
(bad)
aad
not
scas
in
ret
jp
icebp
inc
cdq
retf
paddd
ffreep
push
jg
or
jmp
pop
gs
sahf
stc
xchg
cs
fild
cmp
mov
test
sbb
sbb
out
cdq
aam
sub
call
mov
inc
xchg
shr
fisttp
scas
mov
xchg
or
inc
das
jo
out
sub
mov
dec
stc
push
test
jg
xchg
sbb
daa
sub
and
fidiv
clc
mov
push
mov
je
or
mov
je
mov
or
sub
add
adc
(bad)
leave
mov
xchg
cmp
imul
dec
daa
pop
push
sub
ret
loope
in
fild
jecxz
add
shl
cmp
jge
xchg
fistp
les
clc
icebp
inc
fistp
mov
test
push
in
mov
push
aas
cmc
mov
and
mov
lods
outs
mov
xchg
xor
pop
or
scas
ja
mov
test
sbb
ret
inc
lds
inc
pop
mov
mov
bound
xchg
cs
aad
cdq
pop
in
aaa
xchg
out
pop
sub
adc
aaa
aaa
push
push
retf
pop
jo
fist
int
icebp
retf
stos
js
cwde
sbb
or
int3
cdq
out
(bad)
in
mov
ins
lods
push
xor
std
cmp
sti
mov
ins
or
cld
mov
call
mov
outs
sahf
jns
js
test
loop
mov
es
mov
(bad)
cmp
rcl
jb
clts
mov
mov
pop
mov
inc
retf
je
or
pop
pop
xor
mov
retf
aas
cmps
xor
aad
xor
pop
and
cmp
or
ror
push
or
out
pop
jbe
rcl
lds
xchg
fs
aam
adc
push
jnp
call
xchg
or
pop
fsub
xor
dec
sub
stos
or
(bad)
int3
dec
jecxz
inc
inc
movs
or
in
and
div
stos
push
or
xchg
je
fwait
sbb
ins
mov
in
lods
mov
sar
mov
(bad)
bound
scas
mov
je
mov
lea
mov
stc
xor
lods
aas
hlt
test
shr
fnsave
xor
in
mov
mov
sbb
popf
mov
out
pusha
fistp
and
adc
mov
xor
mov
and
cld
not
cmp
nop
bound
cmp
imul
imul
jp
mov
scas
(bad)
rol
into
lds
popa
or
mov
(bad)
out
jb
sub
lds
je
xchg
(bad)
out
enter
xor
sti
(bad)
xchg
mov
cdq
pop
movs
lock
inc
call
(bad)
xor
fwait
imul
mov
sub
cmp
or
int3
cmc
movs
xchg
repnz
shr
lds
jno
iret
(bad)
mov
inc
data16
add
test
mov
sbb
outs
xor
and
xor
sub
cmp
inc
adc
and
inc
test
xchg
test
or
into
mov
mov
(bad)
fdivr
xor
cmp
cmp
inc
sub
xchg
stos
in
pushf
cmp
out
test
outs
in
(bad)
dec
push
mov
gs
jge
loopne
sbb
add
retf
pop
addr16
dec
ror
or
and
and
mov
ret
mov
setnp
sahf
push
ds
ficomp
int
dec
mov
shr
jno
pop
mov
push
or
scas
inc
mov
loopne
shl
jp
sub
and
push
push
cmc
rcr
test
push
(bad)
jae
iret
jnp
cmp
aas
shr
(bad)
jge
mov
(bad)
push
mov
xchg
fs
sbb
clc
cmp
loopne
cmp
dec
cmp
cs
add
sbb
dec
call
(bad)
push
push
mov
push
xchg
call
xor
stos
fcmove
add
int
in
stc
cmp
mov
mov
lds
pop
xchg
lock
retf
push
xchg
gs
into
sub
(bad)
fdiv
fisub
in
push
mov
gs
lahf
out
sbb
jg
and
fbld
pop
inc
mov
xor
adc
and
pop
rol
mov
out
retf
inc
sahf
fidivr
imul
scas
fstp
bound
mov
dec
adc
fbstp
sbb
imul
pop
call
div
je
cs
iret
cmps
mov
and
in
xchg
sbb
mov
push
adc
mov
mov
into
retf
das
ja
mul
cmp
jle
sub
fisubr
xchg
les
sbb
scas
jle
sub
(bad)
call
pop
adc
adc
lock
or
sub
xchg
add
imul
push
pop
push
sub
ja
or
push
xchg
fmul
imul
lds
fmul
jbe
push
adc
adc
fldz
ss
fld
loope
xchg
outs
mov
sar
test
int
inc
ins
dec
jg
test
test
leave
mov
push
sub
push
push
xor
ja
aas
pusha
ins
jb
push
sbb
push
aas
xchg
mov
jae
fisttp
cmps
xor
jecxz
idiv
add
stos
cmc
in
addr16
arpl
icebp
shr
mov
inc
push
test
fdivr
movs
mov
push
in
jne
push
rcr
movs
and
sar
dec
adc
je
neg
add
aad
mov
add
aaa
inc
add
test
mov
mov
fidiv
cmps
ss
xchg
into
ret
pushf
sub
pushf
std
stos
pop
or
out
pushf
sub
pop
adc
jae
mov
fxtract
fldcw
loope
and
fist
fimul
adc
fisub
pop
and
push
xor
xchg
push
fwait
test
jnp
adc
pop
es
sbb
outs
les
sub
push
or
pop
in
cmp
das
sbb
adc
and
adc
inc
or
lods
push
nop
push
xchg
inc
sub
shl
out
mov
(bad)
inc
jmp
adc
fwait
or
inc
ret
xor
aad
xor
not
add
je
lock
sub
ds
cdq
inc
jmp
push
sub
adc
(bad)
fisub
rcl
adc
shl
aad
shl
cli
jge
stos
test
mov
or
call
dec
cmc
sti
sub
or
cmc
or
mov
adc
mov
dec
push
dec
xor
cmp
mov
xor
(bad)
in
xor
mov
into
ja
(bad)
outs
mov
mov
push
cmp
sti
cmp
xchg
out
mov
and
xchg
repnz
push
xchg
dec
repnz
imul
fisub
mov
shl
and
mov
dec
lds
jl
lods
or
aam
pop
les
push
pop
pop
ins
out
test
call
(bad)
pop
(bad)
jp
add
cli
push
stos
stc
push
sub
ret
sbb
mov
loop
mov
iret
fnsave
lods
not
cld
and
(bad)
xor
leave
loop
lods
stos
vmwrite
mov
add
cmp
mov
out
hlt
sbb
arpl
and
jnp
pop
sub
xor
mov
rol
xchg
fidiv
push
arpl
jb
pop
fwait
rcr
mov
fcmovnb
or
lods
out
data16
dec
mov
jae
jno
inc
loopne
cmp
mov
ret
(bad)
ficomp
sbb
pop
test
pop
out
pop
push
ss
icebp
scas
ins
iret
dec
retf
push
arpl
pop
cmps
mov
(bad)
adc
xchg
shl
pcmpgtb
loop
(bad)
adc
ja
les
xor
mov
add
mov
adc
in
ret
mov
(bad)
in
push
xchg
out
into
and
scas
or
das
in
aaa
sub
stc
call
mov
sub
mov
movs
push
imul
jmp
push
jb
mov
leave
xchg
nop
fiadd
mov
xor
popf
cld
stc
jecxz
retf
dec
lahf
popf
dec
movs
rcl
int3
cli
iret
pop
mov
out
ret
push
test
xor
in
mov
aad
jno
outs
mov
mov
add
mov
rcr
stos
mov
ror
push
lds
mov
cmp
(bad)
fnstsw
pusha
add
stos
in
push
int
and
pop
sbb
leave
enter
pop
jg
mov
mov
push
fmulp
and
sbb
sbb
push
and
mov
sti
popf
push
fcmovnb
ret
jle
mov
nop
xchg
enter
in
int
xchg
(bad)
into
cmp
fsub
xor
or
std
mov
sti
push
ds
psadbw
add
or
loop
and
mov
pop
sbb
psubd
aad
jle
(bad)
xor
imul
add
jne
imul
fimul
sbb
ja
inc
sub
pop
adc
rol
sub
cmp
and
inc
ror
retf
mov
inc
push
inc
adc
jbe
cld
jge
jle
(bad)
xor
adc
mov
jns
sub
popa
aad
or
in
xchg
leave
mov
fmul
pop
mov
call
cmp
xchg
push
xlat
mov
pop
sbb
mov
lds
inc
std
cwde
jae
jp
mov
(bad)
clc
add
movs
xchg
pop
out
mov
shl
cmp
and
pushf
cmp
and
cmp
and
mov
mov
lea
rcr
jmp
popf
repz
in
das
imul
js
cmp
lock
or
dec
imul
sbb
mov
xchg
out
test
add
in
mov
inc
ins
and
adc
js
ds
jo
lahf
add
gs
out
outs
cli
fnstsw
fwait
(bad)
cmp
jne
xchg
push
icebp
xchg
mov
sub
pop
and
or
mov
int
pop
inc
les
inc
jae
mov
push
idiv
jge
or
and
aam
std
dec
in
sub
nop
pop
jb
test
idiv
push
cs
out
das
pop
jo
aas
sub
adc
dec
imul
sar
mov
lods
imul
lea
dec
pop
test
cmps
sbb
push
add
pop
int
sub
push
mov
inc
pop
or
rol
xor
xor
xchg
add
por
cs
xchg
arpl
push
imul
mov
cmp
lahf
call
sub
sbb
mov
and
outs
or
xor
jo
pop
mov
sbb
(bad)
cdq
inc
mov
ficom
push
repnz
push
mov
mov
ficom
ror
shl
fst
ret
pusha
adc
push
shl
aas
sub
xlat
dec
mov
test
mov
jmp
push
sbb
or
xchg
cmc
out
push
imul
repz
pushf
adc
inc
icebp
mov
inc
jb
mov
xor
loop
int
push
cmps
pop
cld
test
sbb
in
(bad)
sar
sub
mov
add
lods
mov
mov
cmc
sub
inc
stos
mov
call
jae
loopne
sahf
jecxz
shr
mov
(bad)
fmul
ds
das
stc
dec
call
push
push
aas
xor
xlat
jb
push
mov
and
fwait
adc
repz
push
sbb
loope
mov
std
jns
outs
xchg
lods
dec
pop
icebp
xor
xor
cmp
mov
sub
movs
inc
test
sub
mov
cli
and
dec
adc
push
add
cmp
or
xor
test
sahf
adc
pop
mov
xchg
test
jl
mov
std
cmp
aas
into
(bad)
cli
js
neg
cs
cli
cs
sub
pop
(bad)
test
ja
cmp
imul
adc
mov
pop
and
sbb
or
sti
jmp
xchg
inc
and
ins
jo
sti
iret
test
or
and
arpl
jne
repnz
shr
sbb
jp
rcl
xchg
test
mov
aam
fidivr
aad
mov
inc
push
(bad)
jp
imul
xor
xchg
xchg
clc
jmp
test
mov
fwait
and
test
cmps
call
dec
push
xor
add
inc
cli
push
cmp
xor
xor
pop
push
ret
xchg
in
or
bound
jge
inc
in
push
or
gs
pop
mov
dec
push
jno
pop
mov
push
add
enter
(bad)
aam
sbb
inc
push
imul
nop
out
sub
or
fstp
push
and
loopne
test
jno
jno
idiv
in
cmp
push
pop
daa
jl
pop
cmp
retf
mov
jmp
mov
inc
add
lahf
or
ror
ins
push
in
mov
add
add
push
pushf
push
sub
loope
outs
jmp
push
or
jmp
test
ins
jb
jo
add
mov
es
sbb
and
inc
adc
mov
jmp
fidivr
or
repz
mov
add
fcmovnbe
outs
dec
mov
ins
mov
xor
rcr
retf
cmps
jmp
push
sbb
idiv
not
retf
stc
xor
les
out
shl
enter
sub
xor
ret
in
push
fldenv
and
shl
push
push
mov
xchg
xor
mov
push
iret
fcom
inc
xchg
lods
(bad)
aam
stos
and
pop
xchg
stos
add
adc
inc
mov
icebp
das
rep
jg
xor
les
push
cmp
xchg
inc
adc
xchg
test
jb
ins
sbb
mov
cwde
xor
and
ja
int
push
shl
out
xor
push
cs
leave
daa
pop
arpl
mov
test
clc
push
sbb
adc
add
mov
sbb
in
(bad)
(bad)
jecxz
lock
pop
test
dec
cmp
dec
shr
sub
enter
and
cdq
ret
mov
stos
call
and
push
(bad)
mov
cld
xchg
xor
retf
cmp
fcmovnb
xchg
(bad)
dec
mov
ret
enter
pop
xchg
dec
sbb
sub
retf
inc
xor
fcomp
mov
call
mov
mov
sbb
gs
jno
ret
or
loopne
loope
jmp
xor
stos
add
dec
pop
lds
inc
dec
lea
xor
dec
fmul
sub
push
add
push
or
iret
mov
dec
dec
ins
cmc
jnp
xor
test
lock
mov
add
inc
adc
fisub
ss
mov
jp
data16
mov
sbb
sbb
cli
les
and
idiv
inc
jmp
mov
fwait
xor
push
sbb
adc
mov
lahf
call
adc
add
daa
dec
les
retf
ins
loope
mov
jno
call
(bad)
and
push
push
dec
xor
jl
mov
fnstsw
add
pushf
push
pop
sub
add
into
arpl
push
and
and
mov
adc
pop
test
retf
mov
pusha
hlt
mov
jge
push
mov
mov
jmp
jbe
std
inc
repnz
ja
lods
dec
push
jae
push
out
push
out
pop
xchg
mov
xor
pop
adc
cmp
or
push
test
sbb
pop
xor
sbb
or
cwde
(bad)
cmps
aam
and
xor
cmps
jmp
pusha
dec
sbb
push
cmps
sub
fs
imul
ret
sub
je
push
fdivr
ja
pop
mov
comiss
sub
add
in
sub
jmp
sub
adc
sub
push
xor
sub
cdq
aas
lods
out
sti
cmp
rcr
aaa
loopne
sahf
sub
jns
out
cmc
and
inc
cmps
sub
std
push
inc
bound
push
xchg
(bad)
jl
(bad)
arpl
cmp
fdiv
popa
pop
adc
adc
arpl
cmp
js
ror
xchg
pop
das
or
scas
mov
add
dec
outs
inc
sub
movs
or
outs
call
test
lahf
add
js
sub
mov
inc
js
mov
xchg
jle
mov
outs
dec
mov
test
fdivr
or
test
mov
out
(bad)
dec
mov
pop
sahf
jmp
je
lock
and
adc
jo
(bad)
xchg
xor
daa
push
mov
push
pusha
xor
into
gs
ror
ins
push
outs
cmp
mov
cwde
popa
mov
in
xor
cli
mov
cmp
dec
imul
and
sub
popa
push
mov
add
pusha
cwde
jb
push
xchg
lea
lahf
and
imul
test
(bad)
pop
cmps
scas
xchg
scas
and
setae
mov
jmp
pop
outs
sahf
xor
dec
ss
mov
ins
iret
or
add
imul
ja
mov
ret
fdiv
lea
push
daa
or
jp
add
cmp
jnp
ss
push
aam
aad
test
stc
pop
imul
imul
xchg
and
cmp
test
add
stos
cld
xchg
jg
movs
outs
lahf
sbb
pusha
inc
sbb
cmp
mov
dec
adc
(bad)
and
push
xor
jge
or
add
ins
out
inc
dec
lahf
or
xchg
ins
das
movd
inc
xor
cld
aas
xchg
inc
popf
mov
mov
fistp
ds
add
aaa
and
xchg
int3
je
and
test
sbb
mov
sbb
mul
adc
in
xchg
adc
cdq
adc
ret
mov
fcmovu
sbb
push
sub
xchg
mov
call
mov
xchg
adc
(bad)
dec
ins
dec
mov
test
mov
in
es
jmp
jmp
adc
imul
sbb
pop
clc
xchg
adc
jno
mov
or
pop
jecxz
loopne
out
stos
mov
and
push
mov
sub
pushf
shl
das
ret
ins
int
inc
mov
repz
mov
or
fistp
pop
idiv
outs
inc
rcl
mov
pop
sub
cwde
test
xor
xlat
jp
inc
repnz
ror
mov
cmp
pop
sbb
stos
pop
jae
fs
adc
std
jle
push
jge
mov
(bad)
sar
mov
jle
sbb
loop
popf
sub
popa
call
xor
fsub
call
in
inc
xchg
sub
add
shr
arpl
add
mov
pop
xor
test
or
and
ret
pop
push
pop
add
dec
shl
mov
push
fidivr
loope
or
aam
fidiv
pop
ror
mov
mov
or
lds
in
lock
js
imul
inc
arpl
push
fisttp
pand
xchg
fiadd
addr16
cmp
test
in
rol
pop
fdiv
mov
xor
cmp
repz
mov
test
(bad)
push
outs
mov
call
lods
sbb
xor
fnsave
out
xlat
int
retf
xor
js
out
(bad)
sbb
(bad)
retf
test
jo
inc
mov
iret
or
xchg
or
mov
leave
fwait
popf
sub
push
test
push
daa
fmul
jne
mov
xchg
xchg
loope
cmp
jge
ds
cdq
jo
scas
in
lods
(bad)
in
ret
cwde
cmp
ss
jl
mov
loope
pop
push
idiv
and
hlt
push
push
out
rol
lea
aam
xlat
adc
pop
mov
fwait
adc
adc
(bad)
jmp
les
outs
shr
pop
xchg
mov
bound
sbb
or
inc
enter
cmp
js
int
cwde
stos
pop
inc
test
sbb
add
adc
clc
scas
xchg
push
or
(bad)
icebp
imul
out
adc
add
dec
jl
je
adc
stos
inc
fnsave
test
jmp
cmp
gs
loop
bound
rol
retf
mov
lods
jmp
sub
das
stc
sar
call
mov
test
dec
cmps
shr
push
pop
add
jg
(bad)
ins
adc
xor
(bad)
movs
bound
das
(bad)
jmp
cli
add
sbb
mov
cmp
xchg
data16
cmc
add
loope
shl
push
pop
imul
or
add
mov
jnp
sub
or
aad
dec
fld
sub
mov
sub
add
jl
cld
mov
out
add
sbb
scas
aas
fdivr
mov
test
xchg
xor
out
ja
push
mov
push
add
mov
mov
pop
jno
or
enter
pop
mov
mov
mov
nop
sub
test
retf
pop
hlt
or
gs
cmp
jo
jmp
js
sar
mov
jbe
cmps
(bad)
pop
mov
xor
mov
push
aas
pop
xchg
mov
lds
dec
jge
aad
push
popf
and
data16
imul
mov
fld
push
loop
call
call
aas
mov
inc
stc
push
push
mov
inc
mov
lahf
(bad)
cmp
retf
inc
icebp
fucomp
lods
fdiv
jl
inc
pop
arpl
mov
fsub
stc
xor
lods
loope
test
pop
inc
pusha
sub
loopne
cld
pop
xor
shl
shl
fsubr
ja
add
aad
cwde
les
fdiv
les
jmp
xchg
das
cwde
aaa
pop
je
inc
push
mov
int
dec
mov
cld
(bad)
mov
add
mov
std
test
pop
hlt
inc
jmp
push
fsub
xchg
int
push
fcom
test
xlat
push
sub
jae
jo
mov
mov
mov
lods
pop
and
xor
xor
xchg
mov
cld
push
lea
dec
xor
pushf
cmp
in
std
sbb
inc
dec
fsubr
push
pop
mov
icebp
in
(bad)
repnz
jno
mov
jbe
pop
pop
jmp
fmul
stos
jp
or
jbe
out
xor
or
mov
(bad)
hlt
mov
retf
pop
sti
clc
loop
mov
nop
das
jecxz
stc
sbb
sub
jl
inc
cmp
shr
sbb
and
(bad)
fsub
dec
inc
jp
sub
inc
mov
push
pop
add
inc
lahf
push
repnz
cmp
cdq
hlt
cdq
out
or
aaa
scas
push
pop
xlat
dec
jle
(bad)
cmc
jp
leave
call
jmp
push
fwait
pushf
inc
call
idiv
inc
mov
in
loop
popf
mov
outs
outs
inc
bound
or
rcr
dec
sbb
add
arpl
mov
cmp
shl
jg
add
add
popa
movs
nop
fxch
rcr
jne
sbb
iret
aas
mov
inc
repnz
pop
and
repnz
ret
in
mov
fld
data16
and
add
sbb
ficom
iret
sub
jle
fstp
or
ins
jmp
xchg
mov
movs
mov
fild
jnp
imul
push
push
arpl
push
cmp
test
mov
jb
xor
dec
icebp
in
jmp
xchg
fnstenv
loop
mov
inc
stos
push
test
loopne
xor
into
in
scas
mov
xchg
sbb
push
in
fstp
retf
sub
sbb
cli
pop
push
test
out
inc
pop
or
int
sbb
inc
mov
dec
add
call
call
xor
cmp
inc
sbb
xchg
loopne
lock
stos
dec
mov
cdq
mov
scas
mov
stc
add
out
sti
loop
adc
into
push
(bad)
fiadd
sti
rcl
jmp
retf
aas
shl
mov
fimul
add
outs
sub
sub
test
test
cld
cmp
add
loopne
inc
int3
popa
inc
mov
movs
inc
rcr
mov
pop
sbb
mov
imul
adc
pop
cli
adc
sub
out
mov
cs
inc
rol
add
mov
jmp
jb
(bad)
shr
or
mov
push
xchg
aam
inc
mov
(bad)
fcomp
adc
repz
cmp
ret
xor
fdivr
sub
arpl
test
jbe
cmp
dec
aam
push
sbb
sbb
inc
arpl
fadd
loopne
fld
pop
dec
push
out
stos
or
mov
popf
hlt
in
adc
jbe
dec
inc
mov
mov
push
mov
enter
jg
jg
mov
jae
pop
mov
hlt
inc
adc
clc
push
imul
adc
xlat
int
pop
mov
dec
dec
mov
inc
jb
mov
lahf
mov
das
sub
mov
clc
add
xchg
arpl
fcomp
out
dec
cs
inc
push
push
cmp
data16
inc
xchg
add
mov
and
fld
cmp
test
xor
mov
das
adc
xchg
push
or
push
(bad)
xor
cs
shl
imul
shl
in
loopne
(bad)
pop
push
ins
jo
ret
int
imul
cmp
into
dec
aam
pop
jmp
jg
movs
mov
and
icebp
(bad)
mov
push
mov
mov
sub
ss
stc
imul
out
push
mov
cs
mov
sub
or
in
jmp
pop
jne
add
shl
pop
mov
test
pop
push
push
loop
call
add
add
icebp
inc
dec
out
test
retf
pop
call
mov
inc
inc
cmp
sbb
ins
cld
add
pushw
test
js
xchg
and
or
mov
xchg
and
dec
inc
test
out
jmp
push
aam
retf
inc
push
add
pop
retf
movs
aam
dec
pop
or
sbb
inc
out
fisttp
jmp
in
jmp
dec
mov
ret
es
ror
cmc
cmp
inc
mov
jae
fistp
ror
pop
xor
push
loop
in
sbb
mov
loopne
mov
xchg
add
xchg
jmp
aad
xor
loope
sbb
(bad)
lea
mov
not
loopne
mov
and
stc
sbb
fdivr
jmp
mov
dec
sub
xchg
and
push
or
inc
adc
(bad)
and
or
addr16
adc
retf
jmp
aam
cmp
dec
sbb
cmp
jp
jp
pop
and
call
call
xchg
shl
sbb
cld
adc
imul
fdiv
and
lods
jle
jecxz
and
lods
loopne
pop
add
pop
cmp
push
jmp
sbb
xor
sub
popf
pop
nop
mov
popa
nop
and
icebp
ret
mov
icebp
shl
xor
daa
repnz
cmps
mov
adc
rol
add
in
mov
mov
xchg
aas
cmp
pop
ffreep
cmp
(bad)
sub
(bad)
mov
xchg
sbb
int
push
mov
mov
popa
movs
jecxz
outs
xchg
adc
inc
out
test
jmp
sub
sub
sub
jmp
and
cmc
in
cld
mov
aaa
sub
mov
xchg
test
add
sub
jbe
jmp
jle
xor
mov
pop
mov
add
test
nop
and
shl
adc
ss
movs
mov
jp
lock
jge
inc
aad
in
xchg
jl
and
dec
cdq
pop
mov
movs
js
sub
stos
sbb
sbb
mov
(bad)
ficom
inc
add
mov
aam
aad
or
dec
sbb
cmp
jl
arpl
xchg
push
add
mov
in
shl
pop
jp
cmp
xor
sahf
hlt
popa
sbb
push
push
dec
outs
adc
sbb
mov
push
xor
daa
add
inc
pop
mov
out
inc
cmps
into
arpl
pop
test
pop
add
les
lea
sub
sub
ret
jmp
fimul
inc
pop
fldenv
cmp
arpl
inc
popf
(bad)
cmp
jnp
std
mov
sahf
xor
push
inc
sub
lock
mov
cmp
addr16
mov
outs
adc
out
and
dec
in
clc
aad
stos
adc
(bad)
push
push
fsub
mov
or
add
(bad)
sbb
in
in
out
and
mov
daa
jne
or
mov
add
(bad)
in
mov
cmp
cmps
add
ret
sub
mov
fwait
cmps
mov
pop
outs
in
hlt
add
pop
or
and
in
xchg
out
xor
fs
dec
cmp
scas
icebp
ja
and
or
and
mov
dec
cld
test
mov
hlt
add
test
and
cmps
rol
push
setb
cmp
pop
aam
ins
sbb
push
iret
pop
outs
mov
in
mov
lea
xchg
dec
push
push
aam
arpl
add
aas
adc
dec
sub
stos
xor
std
addr16
sbb
(bad)
ret
nop
or
and
dec
sub
xchg
pop
jg
aad
or
jno
xor
aam
push
je
icebp
aas
dec
ror
mov
push
push
xor
cmp
lods
pusha
pusha
mov
int
call
and
xor
jmp
pop
(bad)
lock
movs
push
push
sub
and
bnd
loop
sub
sub
pop
xchg
popf
cmp
and
or
cmps
mov
das
cmp
inc
mov
or
scas
fisub
imul
sub
inc
mov
dec
imul
jnp
sub
mov
cmp
in
mov
or
mov
out
push
push
ds
retf
call
sti
popf
sbb
and
sbb
fwait
dec
xor
(bad)
daa
aam
or
adc
jmp
push
jmp
sahf
sub
pop
lock
hlt
shl
out
jbe
pop
cli
adc
sar
fwait
jo
mov
sub
out
cmp
add
aam
std
dec
push
ss
cmp
inc
das
cmp
sub
pop
push
xor
movs
dec
call
les
jno
rol
scas
add
or
mov
mov
stc
cdq
jle
jae
mov
xchg
inc
into
mov
sbb
inc
shr
out
gs
ror
les
sahf
and
rol
repz
add
out
mov
xchg
pop
xor
jge
xchg
lea
jmp
lahf
push
mov
and
push
aas
mov
lods
dec
or
ret
xlat
(bad)
fucomi
dec
xor
ret
and
mov
inc
aas
add
lds
call
in
xchg
lods
(bad)
xor
rol
in
dec
repz
xchg
or
scas
call
neg
addr16
add
ret
pop
and
mov
cwde
call
int
adc
pop
push
int3
push
ds
ds
lock
lods
xchg
mov
push
add
out
adc
and
or
and
jno
inc
pop
jne
mov
mov
pop
sbb
fsubp
xchg
jecxz
sbb
test
sbb
call
ds
pop
cdq
pop
pop
pop
ret
lock
sbb
ds
jb
and
mov
jns
cs
sbb
inc
push
icebp
xchg
push
cmps
in
into
fucomp
es
in
adc
cdq
inc
inc
jnp
pop
or
xor
sub
loop
mov
hlt
jp
jno
jmp
cli
les
addr16
push
or
(bad)
cmp
ror
sub
inc
aas
icebp
jae
xchg
mov
push
out
push
shl
dec
inc
rol
inc
out
das
cmps
outs
mov
cwde
sub
cmp
daa
push
or
mov
or
mov
dec
jp
and
xchg
aam
(bad)
adc
jae
jecxz
aam
and
pusha
adc
inc
xchg
mov
adc
aad
dec
xor
out
or
pop
cmp
call
jae
jno
push
icebp
dec
out
and
xchg
or
jae
pop
es
sti
ror
stc
int3
cmp
mov
aas
push
out
xchg
(bad)
ret
pop
inc
or
push
ret
out
bound
ins
cs
inc
dec
cmp
fwait
xchg
jb
push
dec
xor
in
xor
popf
mov
mov
cs
sti
mov
push
pop
inc
push
xor
mov
int
repnz
or
jbe
add
cmc
imul
int3
mov
and
sbb
out
shr
dec
rcr
gs
cdq
fnstsw
mov
mov
push
mov
mov
sub
bnd
xchg
daa
nop
jo
push
push
rcr
sub
shl
jp
cmps
or
int
pop
or
sbb
ror
(bad)
movs
(bad)
and
xor
adc
loopne
and
xchg
clc
jb
jae
lea
and
int3
inc
cmp
cwde
cld
mov
sub
xor
mov
add
adc
cmp
cmc
inc
sub
and
repz
add
fisttp
mov
push
das
stc
shl
loop
push
aaa
sbb
cli
cmp
cwde
mov
or
retf
inc
inc
and
(bad)
xchg
mov
aas
repz
mov
jl
sub
pop
cmp
push
xor
fstp
in
mov
pop
clc
sub
stc
xor
or
cmp
lds
in
sub
ins
out
fwait
out
pop
cmp
ret
sub
jl
ins
dec
sub
mov
sbb
mov
jmp
clc
add
shl
adc
jg
ss
adc
(bad)
outs
cmps
push
jns
fcmovnb
sbb
cmp
inc
mov
aaa
xor
psubq
pop
fistp
add
adc
adc
xor
pop
push
scas
push
fstp
mov
push
jl
mov
in
or
ror
sub
movs
xor
movs
pop
scas
dec
aam
mov
mov
retf
pop
mov
xlat
push
repnz
aad
fild
int
fwait
adc
mov
cmp
lock
xor
mov
mov
hlt
dec
daa
sub
inc
cwde
push
repnz
ret
mov
test
pop
xchg
sub
mov
jnp
cmps
or
mov
push
loope
int3
rcr
mov
adc
mov
div
fbld
push
xor
dec
jae
lock
sub
lds
stc
call
push
imul
pop
cli
movs
jo
(bad)
stc
dec
jp
scas
call
jo
arpl
ret
xchg
call
ins
pop
mov
movs
out
push
cli
mov
fst
ins
lahf
mov
(bad)
adc
outs
xor
leave
dec
retf
cmc
add
add
jmp
movs
ins
cld
cmp
dec
pushf
ins
inc
push
retf
push
je
icebp
sbb
out
movs
mov
enter
lea
leave
sub
jecxz
inc
xchg
aas
fcompp
cmp
jbe
daa
bnd
dec
in
fwait
xchg
dec
mov
xor
push
jmp
shr
mov
aam
mov
gs
out
xor
mov
clc
sbb
pop
ja
xor
cmp
call
jmp
mov
clc
lea
inc
cwde
xor
jne
loop
push
ss
dec
ins
ror
mov
out
adc
jbe
xchg
ss
in
mov
add
inc
(bad)
lds
test
xor
xor
nop
cmp
cmp
dec
xor
pop
pop
xchg
outs
push
pop
test
sahf
cmp
cmp
xchg
cmp
ss
adc
jno
mov
sbb
out
sbb
dec
cdq
loope
inc
jg
into
inc
fild
mov
(bad)
fcom
or
int
scas
xlat
or
fs
inc
ja
xchg
rol
cmp
dec
ins
push
mov
pop
xchg
xor
dec
pop
xchg
shr
call
mov
mov
lods
out
mov
rcl
pop
repnz
jne
int
pop
inc
cs
or
jo
aas
clc
dec
into
add
sub
call
mov
lea
jmp
aaa
add
jae
aad
out
mov
mov
xchg
dec
test
repz
arpl
push
xchg
or
sub
pop
pusha
inc
sbb
clc
imul
add
ffree
retf
dec
test
xor
and
push
pop
adc
or
ficomp
in
int3
call
mov
dec
add
cmp
inc
setge
repz
icebp
mov
pop
scas
adc
aaa
sub
adc
xchg
mov
(bad)
sub
xor
add
pop
push
xor
scas
mov
add
into
adc
xor
push
cmp
xchg
sub
pop
stos
lods
in
es
movs
lds
xor
mov
std
aas
fdiv
pop
mov
adc
fidiv
pop
in
sahf
push
repnz
xchg
js
dec
pushf
pop
add
pop
ja
mov
pop
iret
test
jbe
lds
out
cmp
push
push
fmul
aaa
push
mov
int3
inc
xlat
xchg
sub
lahf
adc
adc
call
xchg
push
jo
mov
push
push
loop
pop
jecxz
sbb
cdq
jmp
push
mov
fst
(bad)
test
aas
aam
popa
cmps
imul
dec
pop
jle
int
lods
aaa
jno
xchg
test
pop
jle
xor
and
outs
fs
or
dec
push
nop
cmp
es
push
int3
add
and
cwde
jmp
or
cli
(bad)
daa
in
cli
adc
sti
enter
mov
xor
repnz
push
fadd
and
sub
mov
ror
stos
ja
in
inc
sub
rcl
shl
les
or
int3
or
fcmovbe
pop
icebp
xor
mov
sub
jmp
jne
inc
scas
lods
mov
dec
fcomp
xchg
clc
test
movs
mov
mov
mov
push
cmc
dec
pop
push
ret
push
and
hlt
xchg
int
push
mov
enter
push
test
push
xchg
mov
cmp
xor
out
arpl
stos
sub
xchg
xor
or
repz
add
mov
in
repnz
clc
or
mov
shl
add
in
adc
xchg
ret
fwait
add
je
(bad)
popa
std
cdq
ret
adc
pandn
adc
rcr
xlat
pusha
inc
jmp
mov
cli
call
imul
sbb
xor
mov
and
cmp
adc
push
push
out
inc
cld
mov
in
(bad)
arpl
dec
jp
mov
leave
push
not
inc
dec
xchg
popa
fwait
sbb
call
dec
adc
loope
fs
das
xchg
dec
popf
xchg
xchg
(bad)
dec
ret
pop
adc
push
dec
sahf
iret
add
sub
jp
popf
adc
retf
test
loope
shl
push
push
cmp
add
mov
push
jb
out
stos
lds
adc
mov
pop
jmp
cwde
mov
xchg
lea
mov
in
bound
nop
xchg
push
mov
sbb
adc
or
inc
int
and
into
call
daa
dec
mov
cmp
outs
sub
jmp
push
cmp
jno
ret
sub
mov
fadd
stos
cwde
xchg
imul
mov
xchg
adc
in
jp
call
cmp
pushf
je
lods
(bad)
add
or
leave
data16
inc
int3
rol
dec
mov
or
cmp
adc
iret
jecxz
mov
cwde
mov
fwait
mov
fnstenv
or
jle
fxch
jb
ror
repnz
leave
add
mov
pop
inc
test
inc
or
jae
not
aaa
sub
sbb
stos
scas
(bad)
into
fist
or
add
xor
add
jmp
leave
dec
push
retf
inc
shr
test
retf
(bad)
aam
dec
scas
jmp
mov
push
dec
adc
or
adc
mov
cmp
sub
pop
push
push
shl
in
push
xor
xor
stc
pop
jge
mov
ins
leave
xor
cmp
jmp
xor
int3
lock
cmp
jmp
popa
dec
mov
add
jmp
repz
ret
mov
jp
pop
loope
cli
mov
out
sbb
aaa
fmul
push
(bad)
xlat
xchg
sti
xchg
rol
mov
and
outs
pop
sub
xchg
pop
js
xchg
cwde
or
(bad)
mov
retf
in
add
xchg
rcr
jb
jo
shl
mov
sub
dec
jb
daa
jnp
les
jnp
cmc
test
jecxz
outs
les
je
cmp
inc
aas
fldenv
in
mov
push
enter
dec
test
cli
dec
push
pushf
outs
xchg
std
dec
nop
sbb
sub
(bad)
xchg
(bad)
into
mov
dec
inc
mov
iret
(bad)
inc
imul
jl
movs
ins
inc
inc
dec
retf
push
add
shl
pop
ret
adc
xor
dec
jg
cmp
arpl
jae
sub
sub
add
jae
imul
mov
mov
push
mov
movs
out
loopne
sbb
scas
int
mul
mov
scas
pushf
repnz
fisttp
jge
movs
ins
cmps
adc
sbb
stc
fdiv
lock
mov
inc
outs
imul
rcr
xchg
xchg
xor
jno
arpl
jecxz
jg
les
add
outs
xchg
jp
imul
lods
jle
neg
iret
scas
push
mov
push
cmps
add
push
adc
push
bound
add
arpl
push
or
push
call
pop
hlt
pop
inc
or
add
pop
dec
icebp
int3
loopne
pop
in
cmps
call
jp
outs
mov
mov
dec
sbb
ja
pop
mov
push
mov
mov
push
and
shl
xchg
pop
dec
add
outs
or
push
retf
nop
loope
aaa
pop
in
js
je
mov
(bad)
cmps
add
imul
cli
mov
outs
cmp
xchg
cmps
unpckhps
cmps
adc
enter
pop
jge
aad
pop
pop
inc
sbb
stos
dec
cli
neg
sub
jb
and
rcl
jle
xchg
cmp
xchg
je
fdiv
cmc
xchg
test
and
cdq
int3
adc
repnz
ror
xchg
loopne
mov
sub
mov
push
aad
out
cmp
mov
(bad)
fwait
push
in
test
push
push
or
inc
lds
(bad)
mov
or
js
repz
in
mov
xchg
rcl
xor
iret
push
aam
in
cs
loop
pushf
xor
repz
lods
scas
mov
push
or
adc
sbb
in
pop
inc
clc
adc
aaa
pop
jo
xchg
mov
add
jge
cmc
jns
dec
sub
in
imul
stc
(bad)
jge
scas
icebp
sub
or
fld
sbb
cmp
mov
fs
stos
sub
xabort
dec
xchg
adc
adc
xchg
pop
std
adc
sar
(bad)
xchg
repnz
in
xor
cld
mov
jg
shr
ins
movs
shl
push
jp
pop
push
call
fidiv
and
in
out
mov
inc
pop
aaa
(bad)
cs
push
scas
rcr
pop
push
pop
inc
jno
jb
sbb
xchg
xchg
xor
and
xor
ja
pop
pop
lods
cmp
repnz
cli
mov
daa
int3
ror
rcl
add
(bad)
je
and
push
rol
stos
mov
sub
(bad)
scas
push
lea
mov
shl
btr
jle
pop
repnz
mov
dec
imul
xor
and
scas
dec
ret
cmc
ret
xor
aam
in
repz
jo
out
sub
mov
test
mov
jmp
imul
pop
popf
ror
adc
xchg
dec
scas
jl
jne
or
mov
std
scas
push
in
hlt
fs
adc
dec
aas
(bad)
lahf
push
scas
and
jmp
daa
outs
mov
movs
xchg
fwait
sahf
sub
xchg
xrelease
adc
ret
(bad)
imul
(bad)
sbb
mov
mov
cmp
pop
xor
sub
cmp
loope
sbb
push
add
jg
jge
mov
jp
cmp
add
lods
mov
data16
xchg
ss
ror
sub
add
xchg
mov
out
xchg
inc
stos
addr16
sub
in
or
jmp
add
aas
loop
and
push
sti
cld
fild
jmp
repnz
dec
mov
sbb
xchg
push
inc
and
fild
icebp
sbb
cmp
mov
addr16
xchg
and
add
shl
add
hlt
mov
pop
sub
mov
in
xchg
or
imul
lods
int3
enter
arpl
mov
inc
ja
aaa
push
in
sub
xchg
jo
sbb
xchg
jge
inc
and
mov
inc
shl
shl
mov
in
mov
js
gs
dec
push
mov
jo
pop
adc
add
shl
loopne
test
jnp
jb
jns
test
sub
shr
sbb
sub
xor
and
loope
xchg
jmp
into
int
and
xor
mov
push
cmp
xchg
fwait
sbb
cwde
mov
push
mov
pop
sti
inc
push
mov
(bad)
es
or
jne
lds
movs
retf
sub
adc
cmps
aas
ror
fst
fistp
fld
jl
int3
test
(bad)
adc
xor
call
pop
aas
movs
fidivr
xchg
shl
arpl
(bad)
jmp
shr
push
mov
lahf
jo
pop
push
dec
ins
cs
adc
xor
mul
mov
cdq
out
push
sbb
arpl
gs
jns
arpl
lock
cmps
rcr
test
cmp
retf
inc
lea
clc
cmp
dec
push
add
push
mov
mov
jo
(bad)
mov
sub
pop
mov
jbe
and
in
shl
and
outs
xchg
or
cmp
mov
mov
sbb
lock
xchg
bound
xor
ds
outs
sub
push
sti
std
in
xor
jns
leave
out
int3
and
cmp
movs
cld
imul
out
dec
adc
lock
add
and
xor
je
loop
xor
xlat
push
lahf
xlat
call
lock
dec
cvttps2pi
into
fst
inc
cmp
cmps
dec
outs
cld
ret
(bad)
jne
jb
ds
repnz
pushf
mov
mov
rcr
and
cld
stc
mov
aaa
(bad)
jmp
jge
fstp
mov
outs
sbb
fidiv
dec
lods
ds
mov
xchg
popf
xor
repnz
dec
jnp
cli
popf
outs
mov
jns
sub
out
retf
xchg
fbstp
xchg
les
outs
add
mov
in
push
pushf
int3
fmulp
clc
mov
add
sub
mov
(bad)
sbb
stos
repz
sbb
inc
popf
pushf
sbb
int
xchg
arpl
(bad)
mov
mov
(bad)
shl
mov
mov
jbe
lock
jno
and
inc
inc
jp
xor
popf
call
imul
mov
out
jmp
cmp
imul
adc
mov
out
inc
push
jae
push
in
xchg
mov
leave
mov
xchg
int
pop
pop
mov
aaa
cmp
adc
leave
inc
cmp
cwde
inc
dec
xor
js
mov
into
jns
push
rcr
lock
inc
or
jecxz
ins
(bad)
pop
adc
outs
pop
push
cmp
and
out
pop
mov
es
mov
ss
in
xchg
dec
jne
xchg
test
xchg
inc
push
jo
push
xchg
sub
idiv
int3
xchg
es
test
mov
mov
stos
xchg
mov
push
push
sbb
sti
jmp
push
mov
jno
xchg
xor
aas
dec
call
movd
imul
loop
fdiv
jb
xchg
ret
shl
sbb
daa
pop
jge
dec
or
dec
or
scas
sub
sahf
cmp
call
add
pop
push
xchg
pop
xchg
xchg
out
lods
push
ins
and
add
adc
loopne
and
xor
adc
iret
rcr
nop
sar
lods
ret
stc
pushf
mov
data16
push
mov
pop
or
hlt
mov
xchg
ret
retf
cmc
jg
outs
mov
repnz
ret
jnp
pop
outs
dec
push
push
xchg
push
xchg
pushf
sti
adc
lods
mov
jae
adc
cmp
pop
arpl
das
test
jge
inc
jecxz
cs
and
add
outs
aas
jge
mov
idiv
imul
(bad)
mov
push
ret
jp
jmp
mov
and
les
jge
das
dec
and
test
mov
dec
xor
push
or
xor
jns
imul
mov
les
cmc
aam
stos
jl
and
rol
adc
sub
xchg
jo
mov
out
push
jg
std
cwde
dec
cs
int
push
ror
ret
inc
loop
mov
jns
jb
sti
mov
and
adc
sbb
inc
(bad)
outs
arpl
lods
cmp
pop
popf
retw
(bad)
jns
stos
test
jmp
add
sub
data16
xor
mov
movs
add
push
ins
stos
or
mov
loopne
fild
neg
mov
test
lock
int3
sub
jno
jp
inc
pop
xchg
jno
sbb
idiv
inc
mov
cmps
xchg
(bad)
sbb
dec
jle
adc
pop
cmps
in
std
mov
jmp
lahf
sub
cdq
jne
jae
add
clc
jmp
adc
and
sub
in
adc
stc
cmp
prefetchnta
mov
jbe
mov
cmps
xlat
jae
jl
in
sub
dec
jmp
sub
mov
xchg
sbb
aaa
int3
sub
add
xchg
or
jp
daa
outs
inc
cwde
mov
jl
dec
mov
jge
xchg
mov
adc
lds
test
sub
pop
ins
out
mov
pop
mov
adc
imul
push
sbb
test
jge
(bad)
shr
stos
clc
adc
leave
cmp
fs
mov
gs
add
into
adc
sub
and
add
cld
sbb
push
sti
cmp
std
gs
jns
push
xchg
and
fstp
ret
push
jge
mov
inc
jecxz
xor
xchg
pop
mov
push
add
movs
iret
stos
jg
xor
add
ins
mov
dec
sbb
sahf
push
inc
add
pop
ins
xchg
aam
in
adc
sub
lock
xchg
loopne
xchg
and
lock
loopne
or
sub
rcr
call
pop
stc
add
sub
aas
mov
or
mov
cmp
pop
sti
(bad)
jle
cmp
or
push
xlat
fcomp
imul
xor
xlat
sti
inc
jmp
push
dec
jmp
(bad)
js
fbstp
cmp
out
imul
or
cmp
add
xor
inc
sbb
adc
mov
int
(bad)
mov
test
jne
cld
je
out
inc
pushf
ins
test
aaa
repz
sbb
aad
stc
sbb
(bad)
clc
cmp
push
scas
or
ds
(bad)
loop
xchg
shl
stos
mov
xchg
loope
mov
out
cmp
or
pop
xor
test
sahf
add
lock
call
fwait
rcr
call
inc
xor
inc
xor
repnz
sub
xchg
sbb
scas
call
inc
mov
push
cwde
inc
add
dec
icebp
xchg
xchg
xchg
adc
push
cmp
mov
and
xor
test
leave
pop
retf
mov
test
dec
pop
icebp
lods
(bad)
fcomip
scas
sbb
lods
out
call
xchg
push
(bad)
lock
jmp
and
cmp
sbb
mov
jmp
imul
jp
mov
sbb
dec
pop
lea
bnd
jp
ins
sub
(bad)
sbb
pop
jo
push
jno
jno
aaa
xchg
jecxz
or
pop
push
jno
inc
out
xlat
inc
push
data16
mov
fisub
inc
cmp
(bad)
push
cmps
push
xchg
pusha
ror
cmps
stos
aad
mov
jecxz
arpl
cmp
lods
bound
jl
arpl
and
dec
or
test
ins
fcomip
icebp
or
(bad)
adc
jl
cmp
aad
mov
mov
or
push
sub
loop
icebp
dec
mov
(bad)
pop
es
xlat
push
dec
in
push
mov
outs
jne
shr
jl
push
jmp
push
jo
or
adc
inc
jno
jne
fdiv
stos
jg
(bad)
popf
sbb
jmp
lahf
mov
in
xchg
dec
mov
add
outs
mov
mov
sbb
jmp
adc
mov
sub
daa
aas
sub
(bad)
xlat
jg
aaa
jle
aaa
or
out
xor
and
adc
xor
jg
fwait
(bad)
fidivr
xor
(bad)
jge
xchg
ds
fld
imul
arpl
int3
cmp
pop
push
cmp
ds
cs
hlt
mov
and
ret
je
cdq
adc
out
test
mov
or
mov
add
inc
not
rcl
mov
cmp
sub
dec
in
ret
(bad)
pop
mov
sub
test
mov
outs
dec
or
adc
hlt
mov
rol
lahf
mov
or
cmp
and
add
xor
mul
jnp
push
fisub
dec
mov
xchg
in
je
lea
push
jns
pushw
dec
add
adc
pop
test
cmp
data16
jb
xor
xor
mov
cwde
xor
outs
test
jno
jmp
int
mov
(bad)
mov
retf
dec
cli
imul
push
fwait
mov
xor
jp
jecxz
test
test
sbb
(bad)
addr16
sbb
xchg
xchg
loopne
push
xchg
aaa
ds
jmp
mov
cmp
aaa
out
or
movs
outs
es
mov
(bad)
mov
mov
cs
js
mov
es
out
lods
or
dec
inc
adc
or
jno
and
pop
not
loope
lock
xchg
xor
lds
push
mov
pop
xor
fstp
sbb
pop
test
push
outs
sbb
fst
jecxz
push
inc
cmp
sub
f2xm1
std
je
jo
idiv
mov
mov
and
ins
cmp
jmp
loopne
ret
jbe
ss
(bad)
movs
clc
cmc
fisub
addr16
dec
adc
mov
stc
mov
lods
(bad)
mov
lock
mov
pushf
pop
and
and
loopne
test
ja
cmp
aaa
daa
xchg
les
jle
pop
iret
mov
imul
fisub
repnz
dec
mov
or
pop
iret
into
ficom
in
push
adc
inc
jmp
jmp
xor
pop
mov
push
test
clc
std
les
jns
and
mov
rcl
imul
and
push
loop
shl
daa
pop
out
idiv
dec
cmp
mov
mov
stos
pop
pop
mov
push
hlt
mov
rcl
cwde
lds
cmp
pusha
dec
or
ins
push
cmp
mov
push
push
or
shl
data16
push
cmp
shl
xor
aad
(bad)
jmp
in
dec
aad
lds
mov
sub
mov
cdq
mov
mov
in
ds
jl
dec
or
mov
mov
out
add
sbb
imul
sbb
mov
in
ds
nop
and
test
adc
ret
xor
data16
pop
mov
(bad)
test
gs
scas
add
les
pop
lock
and
data16
stos
dec
mov
js
sahf
inc
in
cmp
push
and
sar
outs
and
jle
out
aas
or
xlat
push
push
push
inc
add
add
add
(bad)
shl
sub
into
js
pop
mov
sub
xor
cmc
cld
inc
or
mov
test
mov
xor
jmp
push
fcmovbe
mov
cmp
lods
(bad)
sbb
outs
repz
sahf
lds
(bad)
mov
ret
in
pop
jne
add
add
adc
pop
mov
sbb
mov
iret
je
sbb
jno
loop
leave
add
push
xchg
xor
jge
jns
adc
data16
xchg
adc
fdivr
lods
cli
push
repnz
mov
das
dec
cdq
sub
sbb
mov
nop
jecxz
out
push
loopne
cs
fst
stos
mov
sbb
push
bound
pop
xchg
push
mov
in
mov
call
add
inc
inc
pop
lock
xchg
daa
hlt
imul
fwait
sahf
and
mov
jl
mov
shl
(bad)
repz
pop
popa
push
dec
xchg
jbe
clc
(bad)
das
inc
inc
push
rcl
call
xor
pushw
mov
pop
daa
rcl
popa
mov
add
mov
out
add
(bad)
pop
cmp
xchg
call
mov
or
pushf
psubusw
or
sub
es
sub
cs
push
jno
pop
mov
fnsave
or
pop
sbb
les
adc
or
dec
push
adc
mov
imul
fdiv
mov
mov
pop
movs
das
out
and
cmps
loopne
pop
push
int3
or
push
dec
sub
movs
cwde
mov
sbb
or
sub
inc
mov
jge
rcr
ins
lods
shr
hlt
pushf
pop
add
pop
pop
cdq
push
xchg
addr16
sbb
dec
inc
dec
jg
pop
mov
push
sbb
push
cmp
adc
pop
sub
ins
dec
lea
ins
ins
add
mov
pop
(bad)
mov
int
loop
aaa
dec
lds
pop
pop
sub
cdq
pop
aam
sub
sub
aaa
add
cmp
xchg
or
xchg
nop
push
out
mov
pop
xor
adc
bound
push
ds
push
ret
or
xchg
cdq
xlat
adc
inc
inc
xlat
mov
cs
in
mov
not
sbb
sub
and
rcr
sbb
pop
std
mov
(bad)
(bad)
jl
les
sbb
xor
pop
and
ret
push
mov
jp
push
xor
ss
xor
jmp
hlt
(bad)
test
push
mov
jns
pop
pusha
xor
stc
call
jno
shl
xchg
cmp
out
jb
sub
add
daa
or
mov
arpl
inc
test
gs
jmp
loope
adc
and
cmp
mov
inc
jmp
jns
shl
add
or
add
add
mov
mov
stos
in
ss
stos
push
out
xchg
mov
jnp
jne
int
add
or
popf
ret
popa
outs
fsub
inc
xchg
mov
mov
dec
lods
shr
scas
es
lods
int
cmps
movs
add
pusha
nop
(bad)
loopne
mov
adc
or
sbb
mov
rcl
mov
push
pop
adc
add
push
or
test
std
fild
ror
adc
pushf
addr16
imul
mov
cmp
test
inc
cmp
aaa
and
xchg
add
sub
out
ror
xchg
push
xchg
sbb
sub
jnp
mov
ins
xlat
and
cmp
or
(bad)
fld
dec
cdq
stos
mov
mov
xor
xchg
dec
add
xchg
and
jbe
and
push
add
jns
in
push
ins
movs
sub
xor
mov
test
ret
mov
sbb
sub
(bad)
fisttp
jmp
inc
inc
xchg
jb
xchg
dec
lods
mov
pop
test
retf
push
push
fwait
int3
pop
test
js
cs
pop
test
xchg
sbb
adc
sub
in
add
(bad)
mov
and
push
adc
les
cmc
lds
repnz
(bad)
cld
xor
cmp
dec
outs
int3
retf
xchg
fld
repnz
call
arpl
mov
in
xor
cmps
inc
mov
and
fsub
fwait
jne
inc
mov
icebp
cli
and
dec
or
je
test
xor
cmp
jo
mov
pop
mov
dec
inc
cdq
fisttp
fild
push
xor
sub
xor
sbb
sub
nop
imul
add
or
stos
stos
pushf
jg
jnp
pop
je
pop
mov
cdq
and
fwait
loop
fs
test
nop
push
push
jl
push
sbb
mov
retf
push
lahf
call
imul
aam
retf
adc
out
push
cmc
dec
inc
es
push
pop
mov
inc
cmp
or
nop
movs
clc
into
adc
sbb
scas
jnp
or
adc
ret
inc
(bad)
adc
aad
lock
push
fldenv
dec
mov
test
mov
or
mov
and
mov
adc
in
lods
mov
gs
fs
test
push
inc
fsubr
movs
mov
test
sbb
sub
fimul
ror
loope
iret
out
push
popf
push
fmul
push
cmp
loope
or
mov
jmp
cmp
rcl
(bad)
lock
mov
jns
add
dec
inc
cmps
and
pop
jae
aam
mov
push
mov
mul
int
test
adc
fild
dec
rcr
outs
jl
fidivr
in
pop
gs
cmc
cli
push
and
pop
pop
jmp
xor
cmp
movs
or
loop
leave
ss
xor
jnp
mov
xlat
aaa
adc
mov
lods
jno
push
xchg
jmp
gs
mov
mov
data16
or
popa
jnp
pop
les
pop
ret
adc
xor
jmp
jmp
das
rcl
jae
rcr
lods
add
xor
ret
cli
popf
in
mov
mov
aas
ja
sar
push
mov
out
pop
cmps
inc
mov
xchg
daa
push
fld
xchg
add
ficomp
lock
call
ret
inc
jnp
adc
hlt
jecxz
cli
fbstp
mov
mov
in
mov
mov
out
nop
popf
xor
out
daa
lock
push
lds
jnp
ret
movs
push
jge
mov
pop
data16
mov
dec
jecxz
add
sbb
mov
dec
mov
das
or
mov
push
int
cmps
retf
push
mov
push
les
jb
sahf
in
retf
ret
xlat
popf
fisub
loopne
scas
mov
xor
cwde
jno
aam
and
scas
push
imul
mov
push
xchg
test
sub
add
pop
sub
push
ja
xchg
pop
cdq
adc
and
push
idiv
pop
add
ss
enter
outs
adc
imul
push
xor
cmps
test
popf
ins
call
mov
ds
shl
push
dec
push
(bad)
mov
mov
sbb
(bad)
pop
not
ficom
inc
xor
add
lahf
repz
leave
mov
mov
jae
mov
outs
std
xchg
in
xchg
adc
mov
or
mov
fldenv
movs
cmp
fiadd
mov
scas
adc
bound
sub
jge
push
lds
mov
fistp
inc
and
das
pop
adc
mov
push
ret
ss
pushf
mov
js
pop
fcomp
dec
sahf
hlt
jp
popf
(bad)
out
call
je
jge
out
pop
or
stc
push
(bad)
cmp
push
cmp
mov
or
enter
sbb
push
jae
movs
ret
cdq
mov
imul
push
fsubr
ins
pop
sbb
cmps
das
or
ins
push
adc
sub
dec
pop
cwde
adc
pop
js
xchg
dec
xor
in
div
clc
aas
inc
xchg
jle
movs
xor
movs
push
dec
push
pop
test
inc
cdq
movups
cmp
mov
xchg
aam
es
xchg
push
test
and
test
and
jmp
and
jns
jecxz
add
or
loopne
fldcw
pop
fstp
sub
imul
jge
xlat
sar
jg
cmps
jge
ret
cmp
inc
cmps
cmps
inc
cmp
xchg
xor
cmp
fst
mov
mov
cli
xchg
aas
icebp
cmp
mov
lahf
or
cwde
das
stos
mov
enter
or
xor
cdq
sub
lea
ficomp
jb
sub
ins
repz
test
das
aaa
sar
pushf
jne
push
sbb
pop
(bad)
xor
and
sbb
xchg
leave
imul
push
xchg
inc
std
(bad)
push
or
test
outs
psllq
js
pop
mov
jne
mov
lock
push
inc
push
repnz
or
lahf
mov
ja
jmp
xchg
arpl
jo
add
scas
xor
(bad)
retf
loope
xlat
sbb
jg
ret
mov
scas
icebp
sar
retf
pop
mov
(bad)
sub
add
mov
pop
fistp
adc
retf
ds
dec
clc
rcl
add
aaa
mov
int
sub
dec
aas
jae
push
jne
jl
mov
and
neg
rcr
add
lea
ins
dec
add
mov
out
loopne
sbb
hlt
lods
ins
xor
mov
xchg
jae
mov
and
inc
and
mov
sbb
mov
hlt
xor
mov
(bad)
stc
and
push
into
mov
dec
sub
sub
in
int
dec
aas
mov
xor
cmc
jno
das
push
fcmovu
scas
in
repnz
out
std
cld
mov
sbb
xor
sub
push
cmp
push
out
or
xlat
or
fnsave
les
je
cmp
stos
pushf
repnz
jle
repz
imul
jmp
cmp
repz
adc
jecxz
test
nop
inc
or
xchg
(bad)
scas
xor
es
loopne
ss
arpl
adc
xor
test
and
inc
ss
in
cmp
push
mov
sbb
loope
xchg
mov
inc
mov
mov
xchg
jns
and
mov
outs
cmp
repz
or
ds
hlt
sub
clc
pop
and
pop
dec
xor
lds
popf
test
xchg
imul
mov
fiadd
sbb
xchg
je
(bad)
sbb
sar
data16
pop
sbb
push
mov
xor
add
es
xchg
ret
xor
ficom
fst
sbb
cmp
mov
or
lock
pop
add
fisub
stc
jl
fmul
movs
pop
popa
imul
test
push
xchg
cld
xlat
adc
dec
add
adc
(bad)
sbb
pop
mov
ret
das
jns
or
adc
cwde
cld
xor
js
jo
outs
xchg
test
adc
ret
and
jge
dec
cmp
bound
inc
mov
in
jnp
sub
or
adc
or
in
lds
fwait
mov
add
adc
mov
pop
out
int
add
jns
pop
lahf
sub
cld
add
arpl
add
mov
jmp
mov
xchg
jl
and
jns
push
movs
shr
retf
call
outs
xchg
xor
push
cmp
leave
lahf
jmp
jno
rcl
cmps
push
dec
cmp
jno
sahf
xchg
fwait
xor
sub
je
xor
mov
xor
scas
or
add
or
xchg
jb
jne
loope
test
jp
movs
addr16
add
cdq
sub
mov
test
out
hlt
(bad)
fmul
sti
lods
cwde
mov
xchg
push
ret
or
and
iret
stos
mov
xor
sub
xor
retf
and
aam
daa
and
imul
enter
inc
add
cmp
dec
inc
shr
jae
lods
mov
aad
gs
lods
jns
xor
jns
cmp
jb
popa
lods
int3
pop
adc
mov
popf
mov
loopne
mov
xchg
ss
sub
mov
jg
imul
popf
push
mov
and
imul
dec
cli
mov
inc
ror
jno
and
cmp
jb
addr16
ret
je
push
xchg
adc
jae
loope
jae
mov
mov
and
outs
and
loop
or
mov
jmp
sub
or
or
arpl
push
and
mov
dec
out
hlt
adc
push
ror
mov
sub
add
sbb
in
call
pop
push
xchg
call
scas
inc
push
rdpmc
xchg
loope
add
push
dec
push
les
scas
xchg
adc
scas
mov
jno
mov
or
and
adc
out
(bad)
jns
or
es
aam
mov
mov
ret
rol
and
ja
shl
stc
imul
movs
adc
(bad)
repnz
fbld
stos
fnstsw
popa
icebp
mov
push
mov
(bad)
sub
dec
mov
daa
retf
cli
lahf
lds
and
xchg
mov
sar
inc
adc
jno
xor
imul
inc
in
xor
out
call
out
push
dec
xor
mov
xor
int
push
push
jno
cld
arpl
pop
mov
out
push
cmp
mov
cwde
pop
stos
cld
dec
and
dec
aad
mov
shl
push
enter
jecxz
mov
sbb
cmp
loope
and
xor
cmc
pop
push
sub
adc
fmul
fstp
mov
popf
sahf
add
loop
xor
add
retf
inc
xlat
mov
fsub
xor
pop
add
xchg
inc
pop
cmp
jmp
loop
out
ja
push
cmc
and
cli
hlt
fs
sbb
xor
bsf
inc
rcl
xor
sbb
arpl
cmp
mov
dec
adc
adc
jns
push
and
out
sub
ds
loopne
ret
push
mov
jb
cmps
xor
clc
mov
mov
ins
test
cmp
push
dec
add
dec
dec
loop
and
xchg
pop
(bad)
adc
aad
xchg
shl
(bad)
test
sbb
test
jecxz
sbb
rcl
sub
xchg
sbb
and
in
mov
inc
rcl
mov
fdivr
imul
out
data16
popf
xchg
popf
jmp
mov
jmp
out
push
lahf
cs
aam
lock
pop
xor
out
mov
and
sbb
pop
cdq
fild
jp
add
(bad)
push
mov
cmps
out
movs
inc
mov
sbb
push
dec
add
adc
mov
push
movs
add
adc
sub
xchg
xor
xchg
repz
pusha
or
add
call
xor
stos
js
cld
push
sti
pop
inc
sub
movs
aad
lods
jb
test
dec
push
fistp
sub
(bad)
sbb
mov
dec
xchg
imul
mov
int
sub
fidiv
push
int
call
mov
or
fcomp
das
das
not
xchg
imul
sub
leave
jmp
sub
cld
imul
into
jmp
push
sbb
jle
cmp
add
clc
ds
daa
mov
xchg
loopne
icebp
cmp
mov
aam
mov
xor
lahf
hlt
inc
mov
out
fistp
jbe
mov
call
adc
lahf
add
ins
repz
ins
int3
mov
dec
sub
pop
pop
mov
mov
jle
sub
and
and
sub
inc
fs
sbb
and
stos
cmp
stos
xchg
mov
sub
mov
stos
sar
jp
lods
ja
das
stc
mov
cmp
cli
out
or
jle
mov
(bad)
xlat
imul
dec
inc
adc
cmp
cmps
mov
stos
push
popa
(bad)
repnz
movhlps
push
and
aad
xor
jmp
mov
cdq
mov
aaa
hlt
stc
push
rol
(bad)
out
rcr
mov
jge
repz
das
xor
xor
xchg
das
cmp
cs
cmp
retf
lahf
and
ss
xchg
(bad)
cmp
xchg
push
cmp
aam
sti
mov
dec
cmps
fwait
movs
jecxz
adc
sbb
mov
xor
adc
nop
sbb
jp
mov
sbb
dec
cli
mov
lea
jno
cmp
xchg
mov
jne
fidiv
pop
push
shr
mov
dec
sar
pushf
out
xor
add
iret
dec
jno
add
test
pop
sbb
mov
fwait
sub
sti
mov
inc
push
mov
xor
jns
out
repnz
sbb
lahf
cmps
arpl
cmp
lods
sub
jne
pop
outs
mov
lds
scas
and
popf
jecxz
adc
enter
xor
iret
inc
pop
in
int3
mov
xchg
push
cmps
push
sbb
push
je
int3
or
push
ret
mov
cs
imul
push
stos
pop
xor
inc
ja
dec
mov
out
fstp
inc
jns
pusha
ss
ins
fiadd
dec
iret
aas
push
mov
push
add
fld
jmp
add
sbb
(bad)
bound
sbb
push
ret
push
outs
leave
mov
pop
pop
and
pop
mov
cmp
push
jl
ins
es
mov
xor
(bad)
std
sub
clc
(bad)
pop
lahf
call
cmp
push
rol
loop
or
ror
xor
push
(bad)
jnp
test
stos
jg
(bad)
dec
cmp
je
pop
sub
outs
fisttp
jp
and
test
jle
stos
cs
std
int
cli
mov
out
jno
sub
pop
jecxz
test
xchg
jp
imul
shr
cld
ficomp
stos
mov
pop
mov
inc
(bad)
fld
leave
icebp
push
sahf
mov
mov
push
fstp
(bad)
out
(bad)
xchg
sbb
xchg
jmp
iret
in
cwde
in
add
push
imul
mov
or
sbb
dec
cmp
fdiv
adc
test
paddw
lock
in
mov
push
dec
xchg
fs
call
xchg
outs
push
cmps
das
jle
icebp
dec
xchg
jmp
ins
mov
fdivr
inc
fisttp
and
in
cmp
stc
in
mov
sti
jns
adc
mov
adc
shr
test
pop
push
cmps
out
inc
dec
out
sub
out
fstp
mov
add
xchg
and
test
add
ret
cdq
aas
ret
mov
push
fist
lds
cld
data16
js
scas
or
call
not
fs
add
xor
jnp
rol
retf
cmp
dec
pushf
pop
xchg
and
inc
mov
test
push
out
jns
sbb
mov
inc
lds
jecxz
les
jl
mov
or
inc
lea
mov
(bad)
stc
mov
lods
mov
out
cli
dec
out
inc
cmp
cs
in
sub
jb
mov
out
pop
jl
add
lea
scas
daa
pop
xchg
nop
js
iret
retf
jecxz
int
mov
adc
test
scas
ficom
les
shr
and
mov
fisub
mov
mov
std
lods
jb
inc
jnp
fisttp
retf
std
mov
outs
and
es
loopne
aad
push
sub
outs
lods
das
pushf
sbb
idiv
into
xchg
ret
(bad)
in
call
pop
sbb
mov
mov
xchg
cmp
cmp
test
cmp
cmps
sbb
mov
ror
scas
jo
jne
retf
stc
xchg
xchg
dec
ds
ret
pop
les
xor
or
pop
mov
out
mov
dec
push
or
xchg
cs
enter
rcl
sbb
test
dec
les
pop
xor
ja
test
ret
cmp
movs
xor
inc
dec
mov
adc
rcl
out
movs
jb
int
in
add
int3
sahf
xor
popf
push
jb
mov
adc
in
add
out
mov
out
iret
inc
(bad)
cmp
aam
das
add
loopne
mov
jo
push
and
sub
mov
or
push
inc
lods
(bad)
add
push
mov
cli
xchg
sahf
ins
adc
and
mov
out
es
or
(bad)
fstp
ds
or
stc
(bad)
jmp
aaa
xor
stos
adc
stc
inc
pop
inc
mov
push
push
fmul
mov
(bad)
je
inc
inc
mov
stos
cmps
repz
sbb
dec
cs
in
stc
retf
jae
loop
dec
mov
fs
fcmovnu
dec
fdivr
ret
and
or
adc
push
push
fldcw
test
int3
mov
adc
add
xchg
daa
cmc
or
hlt
push
adc
cmp
mov
cwde
jo
and
pop
or
push
ins
int3
jno
iret
ret
clc
jne
push
dec
ins
add
xor
sbb
clc
sahf
int
xlat
sub
icebp
dec
dec
mov
jae
scas
call
xor
loope
cmp
push
(bad)
scas
inc
mov
lods
cmc
mov
or
cld
je
rcr
xchg
push
fmul
jo
bound
aas
cmp
or
push
mov
add
xor
mov
repnz
ins
inc
adc
sahf
out
or
jns
inc
or
gs
pop
retf
or
cmp
(bad)
mov
dec
jmp
loop
enter
xchg
push
mov
mov
pop
mov
sahf
inc
sbb
je
push
out
jae
ja
or
sbb
in
mov
arpl
mov
inc
cmp
dec
inc
push
push
xor
imul
adc
fwait
push
mov
lods
sbb
mov
imul
push
mov
(bad)
imul
or
add
jnp
sbb
lock
aaa
into
ret
lods
div
or
mov
push
sbb
adc
lds
rol
inc
dec
xchg
popa
dec
cmp
pop
popa
adc
cmps
xchg
sub
es
and
xor
xor
test
xchg
push
mov
and
pop
push
pop
fadd
mov
pop
cmp
or
jo
or
xor
outs
fsub
ds
push
mov
mov
pop
scas
leave
mov
es
fs
cwde
gs
iret
dec
jmp
xor
dec
cmps
inc
hlt
call
or
mov
adc
xchg
xor
xchg
retf
push
jle
rol
add
sbb
jb
(bad)
jbe
jp
sbb
mov
and
test
xchg
(bad)
cmp
xor
sbb
xchg
mov
repnz
mov
fld
push
into
out
aad
and
je
dec
xor
cmc
seta
push
arpl
cmp
mov
pop
hlt
lea
jb
and
clc
add
popa
mov
dec
jno
stc
jl
aas
inc
push
out
sub
pop
sub
xchg
and
lods
pop
push
pop
cld
push
add
dec
jl
mov
add
jns
push
mov
jg
or
xor
add
pop
mov
push
sti
xchg
test
fisub
pop
or
ret
push
movs
xor
xor
sbb
xor
repnz
(bad)
jl
adc
pop
pop
pop
mov
repz
cmp
cmp
push
aad
jno
adc
ins
fadd
mov
aam
push
cmp
stc
(bad)
popa
dec
js
push
scas
jo
xor
mov
out
loop
inc
jmp
mov
addr16
jge
cmp
stos
or
fistp
or
add
ret
fwait
xlat
ins
dec
cmp
adc
jle
sbb
xchg
mov
pop
push
xchg
sub
test
adc
dec
lea
lods
sbb
int3
pusha
mov
sbb
mov
mov
adc
fs
xchg
pop
stos
sub
out
pop
js
icebp
aam
daa
inc
mov
outs
dec
cmp
pop
pop
cmp
or
jmp
sbb
xchg
push
bound
in
stos
xchg
xchg
xchg
retf
lods
inc
dec
mov
mov
inc
ret
dec
sahf
rcl
sbb
jno
fld
pushf
popa
jp
ja
ja
xor
dec
push
fisttp
(bad)
jbe
inc
inc
(bad)
cli
ins
fisub
rcl
pop
xchg
and
data16
(bad)
mov
pop
inc
dec
xchg
pop
jnp
sar
sbb
movs
js
sub
xchg
in
movs
call
out
jecxz
and
(bad)
mov
and
ja
imul
jo
and
mov
mov
scas
cmovno
pushf
mov
and
adc
daa
retf
shr
daa
aas
adc
add
inc
mov
popf
cmc
icebp
push
aaa
add
inc
xchg
jb
sub
xor
adc
adc
mov
and
push
(bad)
and
xor
(bad)
in
xchg
sub
xor
test
fwait
push
adc
push
mov
imul
add
jno
inc
stc
(bad)
cmp
bound
dec
pop
stos
pop
add
in
shl
or
dec
mov
jo
(bad)
imul
cmp
inc
sub
fwait
inc
nop
stc
inc
push
xchg
pop
pop
shl
mov
daa
xor
aaa
cs
daa
mov
retf
xor
hlt
jmp
jl
sbb
in
stc
xchg
pop
cmp
or
lock
ror
push
push
mov
(bad)
mov
xlat
dec
sbb
test
adc
inc
shr
mov
inc
outs
or
push
mov
cmp
imul
or
repnz
rcr
and
inc
and
shl
call
cmps
retf
ret
lods
fwait
or
jns
jnp
leave
repz
xchg
jne
clc
movs
xor
jl
xor
xchg
mov
loopne
inc
(bad)
mov
pushf
push
enter
pop
fistp
inc
mov
cld
jecxz
or
in
add
gs
add
mov
mov
add
push
add
cmps
push
std
inc
call
pop
or
(bad)
pop
sub
lods
std
or
ins
mov
adc
dec
jmp
push
movs
hlt
mov
pop
fdiv
jns
out
add
pop
xchg
sbb
xchg
mov
test
pop
add
fistp
daa
std
push
das
es
fisubr
push
out
call
or
std
sub
sub
bound
ficom
popf
dec
fldcw
adc
outs
jecxz
mov
mov
adc
xor
iret
stc
mov
adc
push
cmc
retf
mov
mov
repz
movs
mov
push
or
out
inc
fcmove
pop
cmp
out
push
les
push
loop
pusha
fwait
ins
sbb
cmp
lea
jno
gs
dec
inc
mov
(bad)
loop
jge
dec
push
pop
(bad)
ins
jle
ins
or
mov
cmp
arpl
mov
ret
iret
(bad)
outs
push
ret
call
inc
push
xchg
ins
xrelease
test
push
jle
push
sbb
jae
in
adc
lea
push
cmp
and
movs
(bad)
movs
sbb
stos
ins
into
hlt
push
mov
lds
add
adc
outs
retf
dec
int
mov
and
mov
addr16
fimul
inc
push
xchg
jl
ret
add
loop
cmove
ss
out
lods
xor
cmps
adc
jle
cmp
es
cwde
out
inc
mov
mov
inc
inc
and
stos
or
in
lea
hlt
push
sub
(bad)
and
adc
std
adc
cmc
scas
sub
test
fdiv
repz
inc
or
outs
jl
(bad)
mov
jbe
xor
fld
mov
mov
jg
jp
jge
(bad)
loop
jg
push
ret
xor
fnstenv
jl
adc
xor
not
pushf
sar
bound
xor
jno
inc
retf
adc
dec
in
int
movs
jo
cs
sbb
bound
test
or
bound
inc
mov
mov
or
push
lods
sti
jmp
dec
fdiv
xor
xor
or
shl
pop
cmc
inc
rcl
stos
inc
mov
mov
cli
aad
xor
aaa
rcl
pop
mov
cmp
sub
mov
ja
(bad)
call
mov
scas
int3
push
jb
push
and
xchg
and
pop
mov
cmp
lahf
inc
repnz
xchg
pop
pop
pop
fcmovnb
jl
push
movs
stc
and
jl
xchg
pop
dec
mov
iret
jo
push
dec
and
mov
rcr
jbe
push
add
sub
inc
adc
(bad)
or
retf
dec
or
jecxz
sub
call
mov
leave
test
test
daa
cmp
cmp
imul
mov
or
les
fstp
cld
clc
repnz
and
ret
mov
test
and
dec
add
cmc
retf
leave
mov
ret
or
cmp
scas
je
call
pop
xchg
nop
loopne
test
xor
inc
inc
cmp
std
jp
daa
leave
rcr
adc
clc
inc
pmaddwd
pop
sbb
je
sub
inc
or
add
jb
cwde
ja
inc
jns
sete
cmps
push
stos
lods
jnp
mov
and
jno
mov
or
jmp
adc
shr
sbb
adc
mov
push
adc
icebp
nop
lds
cdq
out
jne
lock
push
sar
lahf
xlat
loopne
jge
cs
mov
es
inc
add
xchg
les
loope
jg
cli
call
jle
mov
(bad)
sub
(bad)
rcl
sub
jno
movs
xchg
jns
add
or
jge
xor
shl
rcl
fsubr
js
xor
stos
shr
(bad)
dec
and
adc
(bad)
(bad)
pop
cmp
aad
xchg
dec
lock
loopne
dec
sbb
and
cli
push
js
pop
adc
mov
scas
pop
jns
xor
xchg
jnp
sbb
call
(bad)
int
stc
out
xlat
xor
adc
outs
int
inc
inc
scas
inc
dec
(bad)
mov
out
aaa
cwde
add
or
enter
cmp
fnstcw
les
xor
mov
mov
in
enter
das
shl
xor
cmps
aad
pusha
mov
pop
sbb
fs
out
jnp
or
mov
add
jmp
inc
mov
add
sbb
jmp
mov
out
xchg
(bad)
test
sub
pop
mov
adc
adc
inc
pushf
bswap
out
mov
mov
push
sub
lods
stos
stos
jle
cmp
push
xchg
stos
mov
mov
das
gs
xchg
icebp
fwait
ins
mov
addr16
push
jecxz
(bad)
fistp
pop
cdq
pop
mov
mov
cmps
fidiv
lods
push
repnz
in
jmp
mov
cmps
mov
out
mov
ret
fwait
add
adc
xor
or
pop
xchg
shr
xchg
test
adc
stos
sub
mov
fucom
pop
xchg
shl
pop
fs
aas
and
test
(bad)
enter
mov
(bad)
sub
xchg
mov
xlat
ins
leave
push
movs
xchg
shl
or
loopne
stos
loopne
in
js
(bad)
cmp
aam
int3
mov
inc
or
cwde
dec
jp
aad
ins
add
add
call
or
sub
cmp
shl
popa
mov
xlat
fld
fadd
mov
sub
scas
loope
sbb
inc
xor
mov
das
outs
into
lods
fiadd
mov
add
pop
dec
leave
je
dec
xchg
adc
rcr
nop
fild
inc
mov
sub
xchg
imul
ja
mov
sub
push
push
test
pop
dec
cmp
xchg
pop
sbb
push
out
adc
jae
rcr
mov
xchg
test
mov
sahf
inc
sar
jecxz
popf
adc
push
pop
or
repnz
outs
xchg
pop
pop
and
retf
lods
js
aas
push
lahf
cmps
mov
out
ficomp
cdq
retf
call
test
pop
or
cld
movs
fwait
mov
pop
or
mov
and
jecxz
xor
adc
mov
adc
xor
or
in
fsub
out
outs
adc
sti
and
jmp
retf
mov
jmp
sub
xor
es
call
js
push
fsubr
aad
mov
xchg
pop
fldenv
iret
ret
and
mov
ret
xor
add
mul
test
adc
cmps
mov
dec
push
sbb
les
jle
sub
sbb
mov
lock
xchg
fwait
mov
jle
xlat
outs
xchg
mov
loopne
sbb
cld
das
lods
mov
ror
loope
test
js
movs
test
cwde
lds
mov
pushf
jl
fist
les
xchg
mov
jmp
ds
xor
xchg
cmp
mov
cs
cmp
rol
pop
pop
repz
leave
lds
nop
xor
mov
mov
je
ret
and
push
cmp
jl
pop
and
mov
ret
(bad)
rcr
fdiv
rol
pop
add
dec
xor
cmp
mov
adc
gs
das
fiadd
stos
adc
lods
xor
mov
repz
lea
inc
adc
jp
(bad)
xlat
and
adc
jnp
cmp
fcom
pop
jecxz
mov
sbb
cmp
mov
sub
ret
cld
repz
jp
(bad)
std
cld
cs
in
fisttp
cmps
push
xor
adc
gs
loopne
cmc
mov
in
nop
std
lahf
jb
imul
(bad)
cmp
aaa
fisubr
inc
fidivr
and
test
push
xor
fldenv
popf
lea
add
stc
sbb
xor
cmp
rcl
repnz
jecxz
retf
lods
test
xchg
sbb
cmp
or
inc
shl
xchg
test
stos
jbe
sbb
and
in
out
dec
rcr
std
mov
inc
mov
scas
push
push
adc
xor
das
test
and
inc
dec
xor
mov
stos
add
imul
mov
pop
xlat
sub
cmp
mov
pop
add
cmp
out
add
js
jne
out
in
es
mov
pop
adc
cwde
mov
mov
xchg
test
sub
movs
rol
add
ja
push
retf
(bad)
cdq
test
repnz
lahf
aad
outs
pop
mov
xor
aas
xchg
and
or
rcr
and
mov
push
out
push
loop
retf
cmp
ror
push
mov
or
pop
lock
pop
mov
sub
inc
ficom
and
or
sbb
adc
mov
sub
movs
imul
fstp
inc
mov
sar
scas
arpl
xor
xchg
sbb
sub
(bad)
aas
pop
or
hlt
dec
pop
in
xor
pop
push
xchg
leave
dec
sbb
xchg
and
mov
daa
sahf
dec
aam
out
inc
jmp
mov
scas
xor
sub
or
adc
lods
sub
stc
cmps
bound
dec
test
add
mov
pop
push
xchg
cli
mov
xchg
(bad)
das
push
movs
cmp
ret
imul
les
rcl
adc
xchg
cld
sbb
mov
aaa
mov
adc
call
gs
iret
push
ret
shl
enter
fist
push
mov
cmp
mov
xor
lea
dec
and
call
push
push
fcomp
mov
inc
test
test
mov
aad
or
adc
push
lahf
push
imul
pop
push
mov
or
or
in
mov
inc
dec
xchg
movs
jb
out
jmp
sub
retf
inc
inc
dec
movs
adc
pop
test
sbb
dec
retf
and
mov
push
mov
xchg
pop
stc
jg
stos
and
jne
pushf
sti
pop
xor
scas
and
les
sub
push
push
dec
pop
xchg
jnp
ins
(bad)
inc
pop
cmp
xchg
pusha
retf
inc
sub
add
adc
xlat
sub
call
push
mov
xchg
sbb
icebp
int3
test
push
cmp
cmp
lods
into
xchg
xchg
test
fcom
stc
pop
inc
push
inc
push
mov
adc
cdq
fs
stos
or
add
fild
xchg
inc
js
pop
xchg
xor
mov
les
nop
push
fimul
inc
into
mov
int3
sbb
pop
push
push
repnz
jb
pop
out
mov
jmp
ret
sbb
xchg
cmp
dec
loope
mov
out
mov
push
gs
mov
imul
and
std
sahf
jns
lods
fwait
inc
std
push
mov
mov
mov
out
mov
ret
rol
jns
adc
std
pop
jnp
sbb
mov
or
push
fwait
add
sbb
push
lods
aad
xor
daa
sbb
int
into
and
loopne
sbb
adc
popa
add
(bad)
in
push
xchg
lahf
repz
retf
jno
adc
sbb
add
repnz
xor
das
mov
sbb
cdq
repnz
push
push
pop
xor
cli
or
ret
adc
jae
inc
jg
outs
xchg
(bad)
loop
(bad)
pop
xchg
popf
shr
pop
pop
pop
out
(bad)
lock
mov
mov
lods
fidivr
add
mov
pop
rol
or
nop
sub
add
nop
pop
ss
inc
mov
push
sub
sub
jp
xor
xchg
add
ret
xchg
dec
push
xor
out
stc
mov
mov
inc
bound
test
push
(bad)
cli
loop
mov
push
enter
aam
or
add
sbb
cmps
push
sar
fmulp
jg
inc
pop
mov
loopne
sub
sub
fwait
jle
enter
and
mov
and
out
push
fwait
test
arpl
xchg
movs
dec
jle
mov
repnz
push
leave
movs
data16
or
pop
pop
out
add
jns
fnsave
adc
lock
int
jmp
dec
mov
jnp
test
fdivr
nop
inc
inc
push
in
jmp
and
cmp
scas
and
dec
shl
xlat
xchg
clc
dec
dec
loopne
jnp
ja
retf
jecxz
cmc
test
lock
xor
sbb
in
fwait
mov
stc
nop
(bad)
retf
and
scas
cmp
fild
xlat
inc
stos
gs
dec
mov
sti
and
cli
fist
jb
push
and
mov
out
and
imul
mov
inc
jns
loop
cmp
cmp
jns
adc
int
xchg
sub
push
loope
cmp
in
or
out
jecxz
mov
and
pop
dec
aad
pushf
inc
xchg
mov
loopne
mov
jnp
cmp
mov
retf
int3
cld
ror
mul
push
cld
push
pop
iret
push
aad
or
jg
outs
cmp
pop
jle
daa
ret
push
pop
mov
loopne
mov
mov
ss
or
jle
fisttp
add
data16
call
mov
push
jmp
movs
lock
(bad)
int
ins
addr16
cdq
pop
jmp
retf
push
mov
cmc
dec
ds
mov
add
aas
add
adc
cs
scas
and
mov
ds
cmp
fistp
inc
scas
jmp
mov
push
pop
push
inc
dec
jns
sar
loope
aad
jp
add
mov
repz
cmp
mov
(bad)
jg
push
cmp
sbb
ret
cmc
cmps
xor
cld
cmps
add
sbb
cmp
and
rcl
mov
daa
sbb
mov
push
sahf
fidivr
mov
call
movs
mov
lock
cwde
cmp
xlat
pusha
adc
and
mov
jg
xchg
sub
pop
dec
pop
aam
add
iret
push
fcomi
jmp
pop
cli
inc
(bad)
daa
ins
fmul
jb
push
adc
ror
repz
in
sti
mov
mov
data16
sub
cmps
xchg
pop
mov
adc
xor
sbb
dec
mov
in
test
mov
fucomp
inc
pop
mov
call
or
(bad)
retf
mov
leave
dec
jle
add
push
jno
mov
icebp
das
aam
dec
and
(bad)
mov
sbb
ins
repz
je
shr
mov
cmp
mov
push
sbb
push
enter
xlat
ins
in
cwde
test
enter
jne
stc
pop
jecxz
test
es
xor
sub
arpl
jmp
cmps
ret
pop
xchg
add
push
sbb
mov
arpl
jge
fisttp
retf
mov
sub
(bad)
sub
sub
sbb
imul
add
push
cmps
or
dec
jmp
or
movs
cmp
fimul
pop
mov
retf
stos
push
sti
cs
inc
sbb
cmp
(bad)
iret
movs
add
cdq
adc
xchg
pusha
ja
add
call
dec
cmp
gs
out
or
mov
push
retf
sbb
jns
adc
mov
test
sbb
adc
enter
lods
sub
add
out
sbb
mov
test
cmp
xor
loopne
iret
xchg
mov
push
test
sub
push
sbb
dec
and
pop
mov
call
mov
ret
faddp
mov
clc
cdq
push
mov
lods
lods
mov
loop
movs
dec
mov
mov
xchg
lods
xchg
jae
(bad)
push
out
add
js
or
dec
scas
into
inc
aad
sbb
jecxz
xchg
arpl
sub
adc
cmp
stos
shl
lds
pop
sar
leave
clc
rcl
retf
and
jae
sub
call
fst
aad
mov
cld
or
adc
lods
out
or
bnd
in
and
sub
pusha
inc
sub
and
or
in
adc
dec
scas
xlat
add
xchg
push
jmp
test
pop
and
enter
fwait
sbb
mov
dec
sbb
sub
dec
jbe
je
mov
test
xor
adc
test
ins
add
inc
or
sbb
aad
xchg
cmps
sbb
jge
or
jmp
mov
xchg
out
xchg
or
lods
nop
jge
hlt
jmp
mov
pop
mov
aad
adc
pop
mov
int3
bswap
emms
fld
adc
rcl
call
mov
sar
popa
pop
or
fimul
sbb
out
call
nop
sbb
pop
dec
call
mov
sbb
daa
ins
xchg
inc
rep
je
adc
(bad)
pop
push
adc
mov
mov
(bad)
cmps
pop
(bad)
jb
jp
push
jo
mov
fwait
mov
push
inc
pop
and
(bad)
mov
loopne
or
mov
jne
and
and
pop
(bad)
jmp
jecxz
loope
arpl
mov
sub
sub
pop
repnz
std
arpl
std
pop
push
(bad)
ror
cmc
xchg
js
or
js
mov
and
ret
inc
jns
cmps
call
cmc
or
pop
push
movs
lods
idiv
mov
sbb
sbb
xchg
push
sub
ins
gs
test
loope
pop
dec
test
ret
lods
lods
add
outs
pop
add
ins
test
mov
adc
scas
push
leave
pop
pusha
mov
mov
xchg
js
mov
test
cmp
dec
mov
push
retf
or
ret
mov
or
bswap
xchg
cmp
pop
inc
push
jnp
arpl
mov
xor
mov
mov
jmp
cwde
xchg
mov
sub
mov
jle
ss
idiv
mov
add
mov
adc
aas
out
ins
dec
call
out
pop
fwait
test
pop
adc
push
loope
inc
sub
or
add
push
leave
pinsrw
and
mov
nop
adc
popa
jnp
push
ds
neg
fadd
dec
mov
(bad)
retf
or
popa
clc
(bad)
cmp
rol
fisttp
jno
sub
and
cmc
fcmovne
sub
mov
and
sub
bound
push
mov
jg
mov
push
mov
clc
in
pop
out
xchg
adc
fistp
data16
mov
loope
mov
int
sbb
cmps
in
sbb
imul
pop
ss
scas
mov
or
leave
stc
and
pop
leave
mov
or
mov
push
push
movs
out
mov
cdq
outs
scas
mov
xchg
sub
dec
repz
mov
mov
mov
push
sub
mov
dec
dec
cli
jno
mov
sub
retf
aam
cdq
lods
and
sbb
sbb
sub
leave
retf
lock
xchg
jo
out
jbe
leave
mov
xchg
push
sub
xor
pop
enter
mov
and
popf
popf
sbb
cmp
xchg
and
call
cld
outs
mov
sbb
mov
jne
or
std
out
jg
xchg
or
jae
lods
adc
imul
push
push
xlat
hlt
addr16
fcmovb
leave
sub
jg
pop
loopne
adc
mov
or
leave
mov
sti
sub
add
jae
and
mov
pop
loopne
xchg
movs
call
hlt
call
fld
test
idiv
pop
loopne
dec
dec
aas
clc
pop
sub
dec
mov
outs
test
push
outs
cmp
mov
retw
jg
int
add
pop
and
sub
in
shl
mov
in
nop
sub
ins
div
sub
mul
ja
push
xchg
ror
lahf
inc
push
dec
xor
xor
(bad)
sbb
cmc
pusha
test
hlt
(bad)
adc
sub
adc
repz
lods
xchg
dec
push
out
js
mov
jnp
dec
mov
(bad)
jg
xor
xor
fiadd
adc
jg
adc
ficom
mov
cli
add
xor
xor
dec
inc
repz
retf
add
mov
es
in
sbb
jns
mov
scas
xlat
jmp
xchg
std
xchg
clc
inc
xor
es
and
sbb
push
out
call
cmp
fwait
gs
call
jge
sub
mov
outs
cmps
inc
bound
retf
xor
xchg
inc
call
dec
hlt
mov
div
xchg
adc
push
mov
xor
hlt
mov
(bad)
lea
js
and
push
mov
repz
outs
mov
stc
pop
fs
arpl
xor
aaa
sbb
cs
and
or
jae
pusha
jb
les
imul
xor
ja
std
aam
cmp
pop
xor
(bad)
push
je
scas
dec
or
push
lea
ja
pop
scas
or
imul
ror
pusha
outs
ins
daa
sbb
adc
out
xlat
push
dec
retf
add
cwde
push
pop
xchg
cmps
(bad)
dec
pop
outs
pop
push
mov
push
mov
int3
rcl
lods
dec
xchg
sbb
pushf
pop
or
push
cmps
pop
inc
pop
fdivr
shl
cmp
shr
int
fimul
pop
imul
call
shl
sbb
ret
and
cmp
cmc
add
mov
ss
xchg
sub
or
cli
push
pop
test
xchg
add
or
sub
adc
in
mov
movs
repz
push
pop
test
les
inc
xchg
outs
fdiv
push
icebp
shl
in
ret
mov
in
mov
push
fisttp
ins
pop
ds
fidivr
jbe
shr
xchg
pusha
popa
imul
jecxz
loopne
fdivr
idiv
fstp
dec
jmp
jae
jmp
shl
mov
int
mov
maskmovq
add
xlat
or
imul
imul
mov
dec
das
aam
(bad)
dec
sub
jne
clc
lea
mov
loop
loopne
aas
(bad)
dec
add
leave
aam
(bad)
mov
pop
fimul
adc
sub
inc
jmp
and
cli
enter
mov
inc
retf
popa
repnz
stos
maskmovq
imul
movs
and
aas
in
xlat
mov
xor
lds
cmp
inc
(bad)
mov
pop
xor
ja
push
inc
dec
into
ret
mov
sbb
movs
inc
or
xor
fsub
enter
jp
fstp
or
add
jns
jne
mov
pushf
cwde
adc
adc
faddp
retf
fimul
dec
(bad)
jbe
in
mov
jle
and
and
mov
and
js
dec
cmp
jmp
push
sbb
imul
repnz
add
add
(bad)
mov
adc
test
sub
dec
xor
jge
jae
jecxz
loop
ins
inc
dec
pusha
push
pop
call
xor
js
retf
lahf
mov
add
mov
aam
add
mov
cmp
mov
push
shl
mov
cmc
(bad)
int3
pop
xlat
das
sar
retf
add
mov
push
push
adc
mov
mov
aaa
call
cmp
lock
and
xchg
dec
and
(bad)
aam
(bad)
and
jge
js
dec
mov
je
movs
add
outs
push
not
hlt
and
dec
mov
lock
and
xchg
jg
call
loope
mov
push
out
daa
mov
sbb
cld
addr16
popa
jne
sub
push
test
mov
pop
dec
add
(bad)
dec
js
mov
or
mov
mov
jnp
sbb
nop
ds
cmp
dec
xor
fistp
xchg
test
jp
adc
rcl
jle
fcomi
cld
in
int3
addr16
xor
inc
mov
xchg
leave
cwde
mov
adc
pop
cmp
jnp
adc
in
ret
call
ret
imul
pop
bound
lods
(bad)
idiv
inc
lea
cmp
cmp
pop
in
pusha
icebp
test
fbld
shr
inc
sbb
stc
adc
or
push
push
cmp
lods
push
ds
push
jmp
(bad)
inc
ins
clc
add
repz
sub
push
adc
gs
nop
xchg
ja
xchg
pop
xor
and
or
js
sbb
or
neg
jmp
data16
not
xor
call
arpl
aad
sar
in
sub
add
push
xchg
clc
xor
xor
sahf
(bad)
lock
lods
cmp
jle
bound
test
call
xor
pop
pushf
sub
jne
out
pop
ficom
adc
mov
inc
int3
es
sub
xor
cmp
mov
cmp
arpl
scas
test
push
xchg
aaa
or
mov
push
pusha
in
cdq
jo
sub
nop
jnp
add
scas
mov
push
paddw
rol
add
inc
xchg
xor
add
shl
mov
push
loop
adc
xchg
adc
cmp
and
dec
ss
mov
pop
cmps
push
and
clc
add
inc
jb
(bad)
popa
add
movs
rcr
int
imul
add
pop
and
and
mov
cmp
stos
jmp
xchg
sbb
mov
dec
lea
cli
sti
xor
xor
leave
(bad)
push
fbstp
stc
cmp
adc
mov
pop
loopne
mov
push
aam
mov
cdq
jl
pop
retfw
sub
out
ret
mov
inc
(bad)
xor
fistp
nop
xor
sbb
jl
icebp
pop
sar
outs
test
inc
fadd
in
scas
mov
sbb
and
push
push
add
cmp
sbb
adc
dec
out
sar
push
dec
adc
mov
arpl
test
xlat
lahf
inc
inc
dec
(bad)
cli
stos
into
stc
pusha
and
sub
jae
cmps
call
fist
or
call
imul
dec
and
addr16
ins
pop
gs
fs
xor
fidivr
or
(bad)
out
sub
jecxz
fst
inc
(bad)
pop
dec
das
test
ret
mov
dec
nop
sbb
inc
in
and
cli
retf
out
mov
sbb
out
arpl
adc
push
repz
push
dec
inc
test
fs
shl
mov
push
mov
imul
mov
scas
inc
addr16
add
jp
aaa
pop
sub
loop
pusha
cmp
inc
inc
lds
repz
sbb
sbb
leave
sbb
push
dec
lock
aam
and
xchg
fst
push
aas
push
pusha
mov
and
push
dec
lea
into
and
add
lds
das
mov
jmp
retf
lock
push
lea
sub
mov
sbb
(bad)
ds
mov
das
or
aas
mov
fnstenv
lea
push
push
mov
icebp
mov
push
or
stos
push
es
mov
aad
cmp
dec
movs
fisub
dec
call
jne
pop
adc
lods
lods
fisubr
call
(bad)
pop
or
cdq
jno
xor
and
and
mov
fiadd
imul
inc
lahf
push
pusha
cli
imul
xchg
das
pop
sub
(bad)
dec
jle
add
sbb
cmp
test
lods
imul
(bad)
in
sbb
lods
adc
cmp
int3
outs
test
ret
jnp
scas
mov
push
and
push
cdq
adc
lahf
(bad)
jle
pusha
or
aas
sub
xor
mov
mov
rcl
mov
pop
movs
cmp
cdq
ficomp
xchg
ds
mov
adc
stc
rcr
mov
xchg
push
xchg
out
sub
mov
hlt
retf
stc
mov
je
stc
mov
xor
les
(bad)
dec
xlat
xor
ja
dec
cmc
sar
mov
cmp
ja
xchg
mov
arpl
add
lock
in
mov
sub
xor
test
lods
ja
repnz
repnz
movs
jns
or
mov
popf
js
or
(bad)
loop
call
test
sub
cmps
jnp
pusha
retf
mov
cli
add
adc
popf
std
adc
xchg
sbb
pop
je
popa
sar
ins
out
jge
mov
or
push
sub
or
retf
js
inc
jne
or
mov
mov
and
push
pushf
adc
adc
sbb
jp
cs
lods
leave
out
cs
push
mov
add
mov
in
(bad)
jl
jo
bound
xabort
mov
mov
xor
cmc
popa
aaa
mov
retf
stos
and
or
sahf
jno
dec
cmp
fcomp
call
push
in
xchg
dec
push
iret
push
xor
dec
push
sbb
push
add
mov
jae
jns
dec
xchg
mov
pop
lahf
jae
mov
adc
push
xchg
add
xchg
sub
adc
xchg
and
add
xor
xor
inc
shr
call
int
in
add
cmp
mov
adc
ja
mov
cmps
xor
aam
hlt
pop
movs
jge
stc
sub
imul
dec
xor
add
mov
sbb
sbb
mov
xchg
push
jo
push
dec
and
repz
mov
ins
fnstenv
and
das
sub
in
jmp
add
test
mov
xchg
rol
ret
aas
adc
jmp
ins
(bad)
or
(bad)
test
fs
enter
push
jns
cmp
cli
jb
cmp
mov
jecxz
push
mov
mov
xor
(bad)
jmp
loop
je
sbb
fild
fs
inc
xor
cdq
and
in
push
push
je
cs
fwait
shl
mov
push
cwde
xchg
and
adc
jae
outs
mov
sub
ret
outs
sub
mov
xchg
sub
add
dec
pop
mov
adc
iret
gs
data16
mov
dec
adc
bound
fwait
and
sbb
aas
lods
jecxz
mov
xchg
mov
add
jmp
mov
loop
mov
sbb
push
cmp
aad
jbe
out
xor
cmp
mov
test
cmp
sti
push
stos
aam
pop
ins
and
(bad)
sbb
(bad)
xor
mov
aam
xchg
jae
lods
in
push
xchg
in
fnstcw
push
bound
jnp
xor
aaa
sbb
sub
cmps
pushf
xor
jb
scas
js
outs
std
xor
jl
fldenv
sbb
sar
(bad)
xor
jecxz
jmp
cmps
into
imul
mov
cmps
mov
call
add
loope
sub
dec
add
xor
xor
std
loopne
push
add
(bad)
cmp
adc
mov
push
cmp
(bad)
sub
mov
or
mov
data16
dec
push
mov
adc
js
aaa
push
pop
out
stos
push
mov
clc
clc
aaa
fst
test
nop
jg
pop
icebp
or
daa
cmp
push
mov
jl
jne
lahf
adc
aas
loope
mov
xor
out
sub
xchg
arpl
adc
int
int
addr16
push
sbb
cmp
out
(bad)
in
push
add
inc
xchg
jp
cdq
push
xor
test
add
cmp
cmp
cmp
cmps
push
xchg
rcl
xchg
add
loope
and
adc
xlat
mov
or
(bad)
push
pusha
or
cmp
movs
ins
cmp
lods
clc
scas
mov
cdq
add
das
dec
and
inc
xchg
jecxz
clc
inc
push
push
(bad)
je
mul
mov
loope
sbb
pop
pop
movs
test
out
push
int
cmp
adc
push
mov
or
pop
int
mov
and
ret
push
sub
lods
(bad)
mov
or
inc
loop
push
sub
add
and
add
lea
stc
popa
sub
xlat
or
int
mov
pop
lea
xor
(bad)
rol
outs
push
fnstsw
jae
mov
mov
scas
mov
sub
mov
xchg
lock
popf
aas
jb
inc
dec
xchg
jmp
fisttp
add
(bad)
sub
or
int
cld
data16
add
dec
test
push
pop
arpl
repnz
jnp
lods
or
pushf
sub
mov
xchg
cmp
fwait
shr
std
into
adc
and
sub
add
cwde
fldenv
mov
(bad)
out
push
js
ins
sbb
shr
xor
mov
scas
inc
push
xchg
imul
fcomp
test
cmp
(bad)
mov
sahf
xor
xlat
jle
mov
je
sahf
adc
rcl
sbb
push
test
ins
jmp
mov
shl
shl
ds
loopne
dec
ficomp
push
test
sbb
inc
pop
dec
sub
dec
mov
jmp
test
das
cmp
into
xchg
mov
xlat
mov
dec
cmp
je
rcr
cs
mov
rol
sbb
push
out
mov
xchg
ja
pop
movs
push
xor
inc
adc
stos
adc
aad
loop
mov
fldcw
cmp
int3
imul
xor
mov
jle
cli
pop
sbb
repnz
add
cli
lods
in
mov
inc
xchg
call
les
(bad)
pop
jae
call
push
mov
fcmovnu
pusha
push
je
retf
popa
in
pusha
xor
lock
sub
jo
xor
cmp
loope
add
xor
jecxz
arpl
and
mov
loop
add
int
(bad)
dec
and
lea
shl
or
(bad)
adc
cmp
pop
daa
scas
pop
pop
(bad)
(bad)
(bad)
or
xchg
clc
stos
mov
and
call
outs
js
aam
js
ret
ficom
out
cmc
in
jnp
call
push
xchg
or
jbe
bound
sahf
loopne
sbb
call
mov
daa
push
call
imul
xor
nop
neg
push
pop
loop
xor
mov
or
cmp
call
(bad)
push
in
les
mov
mov
add
movs
int
add
add
push
lahf
rcr
out
inc
scas
cmp
aaa
cmp
and
sub
pop
add
mov
fnstcw
jmp
les
stos
cmp
rcl
repz
(bad)
ror
cli
mov
push
push
sysenter
mov
inc
jne
scas
test
add
loopne
fs
inc
pusha
mov
xor
cld
xchg
cmp
shl
mov
cmp
mov
mov
jo
mov
jne
xchg
call
cmp
xlat
push
add
pushf
xor
cmp
stos
inc
adc
pop
shr
arpl
and
cmp
mov
and
cmps
dec
jmp
xchg
and
dec
rcr
or
repnz
hlt
add
sti
ins
sbb
mov
inc
outs
jmp
jle
adc
or
jae
sbb
nop
js
in
cmc
dec
aas
movs
jnp
or
jge
jmp
imul
pop
dec
stos
out
cmc
aaa
jmp
lahf
push
and
cdq
xchg
mov
stos
pop
imul
rol
(bad)
ja
dec
push
inc
jae
push
cmp
sub
aaa
add
imul
repz
adc
inc
ror
lea
adc
cmp
(bad)
fs
(bad)
mov
sbb
enter
adc
sbb
xchg
dec
ret
fimul
cs
sahf
fdivr
cmp
adc
xchg
repnz
punpcklwd
int
inc
mov
jp
ror
cmp
test
cmc
add
inc
test
or
rcr
aad
lea
nop
in
mov
mov
in
push
mov
jle
pop
xlat
ffreep
inc
(bad)
or
cld
dec
mov
pop
jo
retf
nop
push
and
cdq
retf
icebp
mov
ins
adc
hlt
out
arpl
jbe
movs
and
cld
sub
fbld
call
sub
dec
fist
cmp
or
out
push
adc
iret
sbb
inc
dec
jae
ins
push
fild
lds
test
dec
cmp
adc
fadd
mov
push
cmp
inc
xchg
js
ins
and
xchg
cmp
div
adc
repz
sbb
xchg
arpl
xchg
mov
(bad)
(bad)
loope
cmc
fdivr
data16
jmp
stos
stos
mov
mov
pusha
adc
push
movs
shl
inc
pop
push
repz
test
mov
lods
rcl
xlat
xor
jg
aad
and
mov
xchg
xchg
xchg
or
cmp
push
sub
aas
aam
loop
(bad)
push
cdq
and
dec
test
adc
loop
mov
repnz
fs
(bad)
call
xchg
mov
pop
pusha
sub
std
mov
into
cmp
adc
adc
adc
(bad)
dec
cmp
pop
mov
nop
fmul
(bad)
int3
leave
add
xor
dec
std
movs
and
pop
ficomp
rol
xchg
cmp
(bad)
aaa
enter
push
jg
ja
or
dec
jmp
adc
dec
xor
in
pop
sub
gs
ins
adc
xor
fs
adc
inc
add
or
sbb
ds
out
push
jno
adc
int3
ins
(bad)
jns
xlat
lods
push
dec
pushf
leave
add
stos
icebp
push
xor
mov
gs
sub
inc
sbb
mov
loopne
or
into
xor
push
xchg
xchg
and
inc
add
sbb
mov
ret
push
xor
push
sbb
rcr
sbb
rol
das
xchg
imul
xor
xor
cwd
jl
sbb
std
pop
out
in
movs
adc
add
jmp
sahf
sar
movs
fwait
ja
(bad)
in
jns
mov
jnp
nop
xor
pusha
push
out
sub
je
push
dec
loopne
das
xchg
shl
and
push
cli
fwait
int3
test
je
aaa
fwait
jns
pop
cmc
xchg
or
jb
aad
popa
adc
xchg
lods
les
sbb
repz
jnp
pusha
imul
mov
int3
repz
inc
sub
jno
add
gs
movs
add
or
std
mul
push
int
mov
sub
sti
dec
cmps
add
icebp
and
mov
stos
(bad)
sti
inc
clc
(bad)
movs
nop
scas
jg
sahf
pop
cmp
inc
jecxz
(bad)
push
hlt
push
push
jg
fldcw
cwde
jns
stos
pop
rol
xchg
arpl
add
or
stc
mov
xor
mov
pop
add
jmp
mov
cs
loope
cmp
cwde
fucomp
mov
push
sbb
sub
pusha
cmp
mov
pop
mov
mov
mov
add
jge
mov
loopne
add
add
movs
push
jne
(bad)
mov
cdq
push
ins
sub
jge
outs
ins
(bad)
jmp
xchg
push
ins
xchg
hlt
in
loope
outs
xor
and
imul
adc
daa
nop
popa
outs
push
jmp
mov
in
push
stos
mov
dec
pop
lock
fadd
and
xchg
xor
nop
jp
pop
lods
jo
jb
add
icebp
mov
or
call
xor
push
mov
and
in
mov
es
or
mul
and
call
jb
movs
xchg
dec
bswap
dec
sub
xchg
jnp
or
loop
sahf
aaa
mov
dec
jecxz
jl
data16
lds
jo
imul
and
jbe
sub
ror
icebp
mov
paddw
and
mov
xchg
inc
adc
inc
jp
cmp
mov
shl
cmp
std
or
jmp
and
outs
lock
cmp
clc
add
(bad)
data16
fsubrp
loope
mov
cdq
cwde
nop
pop
ret
jno
sub
add
retf
popf
mov
mov
jle
dec
cli
sbb
mov
dec
loopne
add
clc
jmp
imul
push
shl
pop
mov
(bad)
mov
xchg
outs
dec
out
xor
and
mov
lock
movs
mov
outs
mov
dec
jne
add
cmc
mov
aaa
test
xor
bound
addr16
ins
cmc
sbb
cmp
add
cmps
jle
fadd
(bad)
es
aam
xchg
cmps
ss
push
call
add
dec
out
(bad)
(bad)
pop
loop
aam
adc
imul
xlat
mov
jmp
push
pop
jns
push
lahf
daa
jp
push
sbb
sahf
jne
inc
adc
ror
addr16
mov
mov
dec
push
mov
xchg
dec
xor
lods
(bad)
pushf
scas
sub
out
adc
lock
lds
jmp
push
imul
sbb
jge
jle
(bad)
into
adc
(bad)
aam
lods
and
adc
xchg
rcr
xor
push
mov
cs
or
pop
push
xor
ins
adc
inc
xlat
loop
out
(bad)
rcl
call
and
mov
cli
jae
lods
dec
and
lods
out
daa
popa
push
add
mov
cdq
mov
call
sub
addr16
dec
pop
ja
mov
int3
scas
xchg
and
je
(bad)
push
mov
mov
jmp
sbb
cmp
xor
aaa
xlat
outs
dec
mov
pop
loopne
mov
mov
mov
mov
add
sbb
or
mov
rol
into
pop
push
js
push
jge
cld
leave
jmp
xchg
clc
or
in
mov
xlat
push
aam
in
jge
add
jno
mov
or
jne
retf
sbb
push
push
lahf
add
sbb
jbe
mov
ror
mov
push
nop
inc
add
(bad)
movs
loopne
ds
xchg
mov
out
(bad)
adc
pop
outs
popf
enter
stos
sbb
mov
cmc
xchg
int3
fidiv
repnz
retf
xchg
int
js
in
pop
in
xchg
aaa
or
js
add
pop
imul
xlat
push
das
mov
xor
pop
pop
xor
out
fcomi
out
cdq
fld
aad
mov
mov
call
sub
push
fist
pop
aad
jnp
pop
jg
mov
(bad)
cdq
popa
xor
sub
push
mov
aam
and
aam
xchg
in
and
mov
mov
cmp
div
hlt
popf
in
das
out
test
push
inc
adc
js
pushf
stos
cmps
push
sub
mov
push
push
sub
pop
push
sahf
mov
push
push
test
jle
imul
fisubr
push
dec
in
cmp
ret
dec
xchg
and
sar
(bad)
push
and
add
sar
add
movs
daa
and
fiadd
and
ins
cmps
pop
inc
push
pop
lock
push
adc
inc
dec
jns
adc
mov
shr
pop
xchg
inc
dec
aas
adc
mov
neg
retf
lods
cmc
fs
mov
aaa
ret
hlt
dec
iret
mov
xchg
mov
add
or
pop
cld
sub
mov
sbb
and
je
fdivr
pop
jmp
jbe
jge
pavgw
addr16
push
jbe
lea
push
ins
sub
sti
shl
jne
sub
inc
pushf
xor
icebp
adc
fidivr
pop
pop
xchg
adc
or
mov
call
pop
cmp
movs
push
dec
retf
shl
xor
mov
inc
inc
push
xor
(bad)
lahf
int
sahf
call
(bad)
aas
inc
lock
dec
adc
mov
sbb
add
inc
and
pop
call
jns
loop
data16
sub
rcr
int
dec
cmp
out
jb
fld
lds
sbb
jnp
test
mov
sub
or
movs
mov
pop
aam
push
sahf
pop
adc
iret
mov
or
ins
ins
dec
dec
fist
mov
mov
and
inc
dec
push
mov
cmp
sbb
inc
nop
imul
mov
test
cmp
enter
fist
arpl
jne
aas
dec
lods
add
cli
es
bound
int
dec
mov
fsub
out
cmp
aas
xchg
push
add
adc
imul
and
clc
test
mov
addr16
dec
outs
or
out
xadd
jmp
inc
int
inc
jb
add
pop
xchg
sub
cdq
xor
sbb
mov
cmps
loopne
cmps
in
das
imul
sahf
out
cs
mov
inc
xchg
cmps
pop
pusha
mov
mov
xor
mov
push
jae
(bad)
jnp
jge
inc
sbb
push
sbb
lock
or
repz
jo
push
push
add
ret
cmp
ret
inc
mov
jge
mov
jne
jmp
(bad)
fidivr
movs
fstp
cli
jl
aaa
sub
lahf
clc
cmps
sub
addr16
xor
xchg
cmp
mov
enter
xor
mov
ins
xor
inc
or
adc
out
xor
jnp
mov
lahf
mov
xchg
cmp
fild
bsr
mov
jo
lds
push
sar
lods
jbe
imul
out
jmp
scas
xchg
jecxz
sub
push
jmp
lock
and
add
scas
mov
jge
ret
or
shl
test
mov
(bad)
xchg
and
aad
or
leave
mov
into
inc
call
and
pop
adc
cld
lds
push
loopne
xor
leave
(bad)
mov
pop
mov
imul
aas
pop
add
or
jecxz
ret
dec
in
js
dec
push
jg
ret
xlat
jge
pop
and
ds
arpl
xor
xchg
ss
sahf
xor
cwde
sbb
ins
daa
add
lea
pop
or
push
loopne
out
add
jmp
loope
jmp
push
js
and
enter
or
cmp
adc
mov
(bad)
mov
inc
push
cmps
adc
xchg
daa
sub
push
mov
push
mov
popa
ret
out
daa
mov
xchg
call
xor
popf
cmp
xchg
pop
cld
ja
mov
sbb
sub
mov
fdiv
pop
mov
ja
pop
add
cs
sub
ins
add
jg
and
pop
outs
adc
in
pop
xchg
inc
dec
and
mov
push
pop
in
push
push
shl
or
rol
aas
add
dec
and
add
pop
test
icebp
xor
jg
ins
aad
popf
in
cmp
neg
adc
movs
or
out
push
add
jne
out
xchg
sbb
loopne
mov
mov
gs
fdiv
into
test
fnstenv
xor
inc
pop
int3
and
or
dec
aad
push
dec
outs
mov
pusha
cmp
xchg
pop
push
jae
inc
add
rcr
fidiv
sar
jecxz
stos
lods
push
out
inc
dec
dec
mov
std
loop
jns
and
rcl
mov
sti
retf
or
ror
mov
dec
pop
scas
mov
outs
jns
sbb
mov
das
jne
sbb
outs
in
sti
rol
add
sbb
dec
cmc
fst
jle
mov
mov
lods
add
loope
fmul
sti
xchg
or
jae
and
sbb
jmp
das
or
imul
push
shr
add
xchg
jge
sub
je
cmp
adc
outs
(bad)
mov
xchg
scas
pop
xchg
adc
out
pop
and
ins
jb
std
call
dec
bound
sbb
push
mov
hlt
xchg
adc
cdq
sbb
mov
ins
retf
out
loop
fcomp
inc
dec
mov
leave
lahf
imul
jge
fimul
adc
mov
sbb
clc
sbb
pop
jp
or
int3
mov
test
das
fnstenv
mov
adc
xor
inc
push
sub
jns
xor
mov
push
sbb
cmps
fldcw
test
pop
xchg
jns
inc
push
mov
mov
mov
(bad)
cld
adc
jp
les
push
push
pusha
fiadd
pusha
sbb
push
iret
inc
rcl
cmps
retf
out
mov
dec
dec
dec
inc
add
arpl
add
and
sbb
iret
mov
in
pusha
je
mov
lods
leave
adc
push
push
mov
sbb
pop
mov
retf
sbb
mov
inc
cmp
repnz
mov
cld
sbb
pop
xor
in
sbb
ins
sub
je
mov
iret
xor
mov
cmp
add
(bad)
mov
sbb
outs
or
mov
sti
cwde
add
dec
jnp
mov
jno
pop
push
dec
gs
xlat
das
cmp
lods
stos
xchg
into
cld
sahf
push
jle
loopne
test
loopne
inc
fstp
test
dec
pushf
les
sbb
mov
cli
sbb
fimul
aaa
or
ins
out
loopne
adc
in
dec
dec
int
push
add
adc
fdiv
pop
jne
iret
jno
jg
xor
hlt
add
addr16
push
std
inc
int3
ret
iret
jo
icebp
aas
hlt
adc
test
push
fild
popa
mov
mov
cdq
fwait
jae
fldenv
dec
adc
mov
mov
call
push
jb
dec
jbe
dec
and
icebp
xchg
popa
adc
fdivp
imul
outs
not
loop
adc
outs
adc
or
js
out
or
in
mov
mov
push
sar
mov
aas
lock
cmp
mov
jmp
mov
mov
and
sbb
aad
jg
cmp
push
sub
lea
jl
enter
in
fisubr
xchg
into
mov
pusha
mov
lea
or
inc
shl
cld
jle
push
mov
loop
in
jno
push
xchg
push
mov
push
push
sbb
jp
arpl
cmp
mov
jae
mov
push
mov
fild
es
and
mov
int
imul
xor
jnp
addr16
sbb
jmp
jbe
shr
loop
ret
mov
ins
add
nop
lods
je
and
cmp
data16
cs
xchg
(bad)
sub
lods
add
mov
mov
in
les
jle
fstp
lahf
or
ret
cmp
or
xchg
stc
adc
push
(bad)
mov
aam
ds
pop
pop
pop
mov
mov
push
(bad)
imul
mov
and
(bad)
xchg
cld
cmp
push
mov
jle
ret
xor
inc
inc
pushf
xchg
push
cli
mov
movs
jmp
xor
and
and
add
test
retf
sub
ss
stc
xchg
xor
fcmovnu
lds
pop
fcomp
out
jp
ror
inc
jb
retf
(bad)
test
cli
dec
sti
outs
pop
retf
aaa
(bad)
inc
pop
fs
in
ds
mov
fnsave
loop
mov
xor
sub
int
fwait
daa
sbb
jg
call
mov
(bad)
cdq
mov
loope
pop
cmp
aad
adc
sbb
ret
fucomp
jg
add
push
std
xchg
inc
add
ins
jb
gs
or
fsub
aaa
mov
xchg
or
cmp
jg
(bad)
out
xor
test
xor
or
retf
pusha
in
scas
fnstsw
xchg
adc
aas
or
xchg
jl
jo
or
mov
cmps
and
dec
pop
inc
mov
nop
cmp
xor
sahf
pop
sub
sti
out
lds
(bad)
or
dec
push
or
dec
lods
iret
hlt
cmps
cmp
sub
dec
cmp
fdivr
inc
cwde
std
pop
inc
dec
jno
jle
push
in
test
inc
pop
rcr
mov
clc
fidivr
cs
dec
sub
sub
pop
dec
push
repnz
xor
cld
shl
popa
adc
daa
xchg
test
inc
arpl
mov
mov
dec
sbb
icebp
jp
fnstsw
outs
ins
lahf
add
cmp
and
sub
adc
mov
iret
outs
jg
push
jg
mov
and
pop
jecxz
jmp
std
pop
fstp
rcl
inc
dec
leave
bound
out
in
push
pushf
inc
cli
pop
sbb
inc
cmp
data16
cs
xor
xchg
loopne
add
add
lock
fild
adc
fstp
out
sbb
int3
xchg
jmp
rcl
fwait
leave
mov
push
aam
outs
test
mov
xor
and
rol
mov
popf
xor
popf
adc
add
add
js
adc
xchg
data16
cmp
pop
sbb
or
sbb
jnp
sti
mov
jno
xchg
xchg
push
(bad)
fst
inc
cmp
and
inc
pop
lods
jp
mov
(bad)
push
mov
xor
jle
sub
or
lahf
movs
in
out
xchg
fldcw
sub
in
aad
push
repz
movs
push
xchg
aaa
adc
or
and
xchg
les
mov
jg
je
cmp
mov
and
or
js
and
dec
dec
adc
movs
mov
ret
test
mov
loopne
and
sub
ins
jge
sbb
cmp
push
nop
cmp
cld
mov
cmps
jl
loope
aad
xchg
or
in
ss
cmp
pusha
cmp
xchg
push
dec
cmc
ss
stos
mov
mov
pop
inc
in
add
mov
ret
dec
dec
mov
and
jnp
clc
xor
dec
pop
add
and
add
inc
sti
pop
lock
inc
sbb
aam
and
call
push
mov
mov
mov
imul
mov
sub
jmp
(bad)
ret
xchg
mov
or
bound
pslld
lock
jo
idiv
sbb
xor
loope
enter
aad
loop
rcl
outs
aas
inc
loope
(bad)
std
inc
dec
js
repz
jne
adc
pop
lods
out
jbe
cmps
in
cmc
fidivr
shl
das
sub
hlt
jbe
xchg
jge
data16
or
or
dec
dec
or
mov
dec
inc
sub
dec
jle
int
daa
jb
add
clc
scas
sahf
cld
ja
mov
pop
sub
mov
pop
int3
and
dec
inc
adc
idiv
stos
loop
xor
inc
pop
idiv
mov
pushf
push
test
(bad)
adc
add
movs
or
add
dec
cmc
xchg
cmp
daa
mov
push
mov
nop
mov
ret
mov
adc
enter
out
and
pop
cdq
gs
shl
inc
fwait
or
retf
ror
inc
int
xor
mov
add
push
lock
xchg
pusha
sbb
dec
xchg
inc
out
cmc
sahf
dec
jno
movs
scas
add
mov
loope
es
jbe
loopne
fdivr
sub
dec
push
popf
push
xor
sub
or
sub
jp
or
jae
cmp
add
add
cs
movs
dec
repz
fsub
clc
std
sbb
mov
xlat
sahf
mov
sub
cmove
repnz
jb
jmp
enter
dec
mov
sub
xchg
(bad)
mov
scas
stos
dec
push
mov
std
adc
jp
je
sub
sti
call
push
cwde
lods
fldcw
inc
std
es
mov
sub
mov
cmps
jb
dec
xchg
dec
xchg
pop
jbe
adc
nop
stos
jns
sbb
pushf
add
dec
push
fidiv
aad
inc
es
xor
retf
jb
fwait
cld
(bad)
cli
xchg
inc
stc
mov
fidiv
popa
fld
or
loope
push
das
jno
cwde
cmp
pop
scas
pop
lea
jl
ret
in
push
inc
inc
xchg
adc
out
dec
in
add
sbb
stos
push
aas
loopne
sahf
xchg
mov
pop
pop
fwait
lods
dec
mov
mov
std
cmp
(bad)
jmp
imul
xchg
hlt
jo
(bad)
pop
cmp
or
add
adc
repnz
jecxz
and
fcmovnb
xchg
xchg
add
lods
(bad)
out
push
push
mov
js
sahf
adc
or
and
outs
jmp
mov
shl
popa
clc
xlat
adc
xlat
dec
aaa
ret
(bad)
adc
les
(bad)
sbb
adc
xrelease
test
sbb
jmp
inc
sahf
popf
pop
sbb
cmp
call
fsubr
daa
btc
inc
add
mov
mov
cmps
das
ror
xchg
in
mov
outs
push
mov
pop
push
inc
aad
pop
jmp
test
sub
inc
sub
jecxz
les
and
and
add
jmp
outs
and
mov
add
fdivr
scas
shl
push
jne
call
div
mov
pop
(bad)
xchg
add
lds
or
scas
aad
lea
cld
jmp
ja
les
cmp
mov
push
jp
and
cmps
inc
(bad)
ret
dec
repz
xor
and
push
ror
stos
pop
inc
mov
ror
adc
imul
in
scas
ret
lahf
mov
fwait
or
mov
dec
loop
pushf
inc
mov
adc
jne
fsub
inc
push
repnz
or
or
ins
or
push
sub
cli
pop
dec
ret
push
iret
dec
pop
mov
cld
in
sbb
dec
pop
addr16
adc
cmp
mov
test
xor
into
cmp
xor
or
ds
out
out
jmp
or
aaa
repnz
push
loope
mov
sti
add
cmc
rcr
sbb
aad
adc
pushf
aaa
or
enter
inc
daa
mov
(bad)
jp
push
scas
hlt
mov
sbb
mov
in
mov
cmps
arpl
cld
mov
icebp
xor
dec
cmc
out
pop
adc
fdiv
pop
(bad)
jmp
into
mov
push
pop
and
sahf
js
fs
test
sbb
ror
xchg
mov
mov
in
add
pop
mov
outs
jno
mov
jle
cmp
dec
mov
add
sbb
adc
bound
adc
cmp
test
shr
and
movs
mov
sbb
call
add
(bad)
scas
dec
mov
jbe
clc
pushf
adc
(bad)
in
mov
in
in
test
popf
mov
mov
(bad)
into
mov
adc
cdq
mov
add
nop
sbb
loopne
cli
les
leave
sub
mov
das
cmp
js
pusha
xlat
mov
xor
sbb
adc
adc
push
xor
add
xchg
jmp
(bad)
(bad)
in
and
in
xchg
out
pop
and
pop
xchg
add
retf
cmp
push
fisub
ins
pop
push
jae
(bad)
dec
fstp
xor
inc
dec
aad
xor
data16
xlat
(bad)
les
pop
int3
arpl
xor
inc
das
ror
idiv
ja
jle
xchg
ret
xchg
xor
dec
mov
xor
jns
dec
push
sahf
cmp
aaa
push
dec
call
test
jno
jnp
bound
push
lods
inc
pop
jnp
pop
inc
inc
mov
push
mov
mov
jp
rcr
imul
xchg
in
push
xor
or
dec
cmp
cmc
(bad)
cli
mov
cli
cdq
push
push
fptan
xchg
xor
add
std
fisttp
idiv
rol
xor
and
mov
sbb
mov
inc
pop
adc
xchg
retf
cmc
stos
test
ror
loop
cmp
es
or
fwait
mov
cmp
mov
and
xchg
pop
xchg
xchg
int
add
ss
jmp
xor
jg
ins
push
dec
xchg
xchg
in
cmps
iret
push
aad
xchg
push
fadd
sbb
loope
cmp
aaa
lods
pop
sub
sub
pop
jge
aaa
jne
inc
or
jmp
(bad)
or
das
dec
pop
cmp
jmp
inc
pop
pop
mov
xchg
or
add
shl
into
add
mov
xchg
(bad)
cmp
or
push
dec
stc
jno
shl
pop
inc
int3
xchg
cwde
lahf
sbb
movs
int
add
leave
jae
push
add
and
lds
xchg
add
adc
push
push
xor
icebp
xor
sub
jo
mov
push
(bad)
mov
movs
push
jno
js
sub
je
add
sti
jecxz
add
and
and
cwd
fwait
test
stos
aaa
pop
arpl
push
out
cmps
sbb
or
lahf
call
imul
call
addr16
xchg
aam
movs
mov
mov
push
or
dec
fbld
inc
inc
data16
ret
stos
push
mov
adc
or
stc
pop
sub
stos
mov
mov
shl
pop
jmp
inc
movs
sbb
mov
adc
inc
test
sbb
fwait
pop
push
mov
mov
push
inc
sbb
and
les
mov
inc
aam
inc
movs
sar
mov
mov
shl
jae
pop
ss
mov
repnz
daa
cmp
cmp
daa
mov
(bad)
fcmovnbe
in
and
popa
jmp
fs
mov
jae
inc
push
mov
imul
cmp
cmp
mov
mov
mov
comiss
bound
and
out
mov
pop
(bad)
jle
sub
jne
(bad)
lds
fld
not
inc
mov
push
lods
call
cld
ret
adc
movzx
ss
test
sbb
mov
jmp
(bad)
out
sbb
pop
xchg
mov
cmps
imul
cmp
icebp
popf
fs
mov
push
inc
pop
pop
inc
adc
adc
repz
mov
bound
mov
sub
ins
rol
les
pop
push
sar
aaa
jecxz
mov
xor
cmps
daa
in
xchg
inc
jne
cs
out
repnz
pop
xlat
and
gs
pop
xchg
fistp
fnstsw
(bad)
push
inc
cmp
out
push
mov
mov
fmul
and
mov
add
movs
data16
add
xchg
dec
sbb
fbstp
(bad)
sub
adc
daa
mov
inc
inc
scas
(bad)
shr
sbb
call
mov
jecxz
jns
loopne
lods
mov
or
pop
imul
pop
jl
sbb
mov
out
and
inc
imul
mov
push
sub
sub
lods
stos
test
xchg
xchg
lea
sbb
mov
sbb
pop
lods
mov
push
enter
jb
xchg
sahf
jecxz
fldenv
dec
es
test
clc
test
inc
mov
inc
and
test
fadd
push
outs
adc
ja
add
shl
ret
(bad)
mov
xor
cmp
push
jns
clc
inc
cmp
stos
fsub
sub
sub
popf
pop
jp
sbb
imul
mov
dec
xchg
popa
pop
add
test
push
call
pop
mov
mov
or
cld
mov
push
gs
jns
mov
sub
add
mov
fwait
data16
ret
pop
mov
(bad)
or
nop
aas
jne
add
mov
push
lods
mov
ins
inc
ins
push
adc
adc
mov
sub
cmps
inc
lahf
pop
sub
data16
fiadd
mov
mov
out
sbb
pop
jb
xor
sbb
scas
and
fmul
scas
gs
mov
xor
adc
jo
fwait
adc
jmp
sbb
xchg
retf
in
and
push
push
or
xchg
jecxz
mov
xor
and
xor
sub
push
jge
mov
fs
sub
push
jge
call
or
push
push
test
aas
ss
call
cwde
outs
pop
and
mov
dec
xchg
push
in
lods
shr
dec
mov
out
sti
in
ins
(bad)
call
mov
push
push
mov
jns
mov
add
jbe
(bad)
dec
jecxz
jge
into
push
jg
cmp
(bad)
adc
enter
cli
test
outs
movs
es
cmp
sub
add
xchg
in
sub
sub
fcmovbe
add
pop
movs
inc
dec
popf
dec
dec
aam
pop
lock
inc
mov
sbb
jg
cmps
mov
and
cld
mov
jo
(bad)
in
es
mov
lods
jle
fs
ror
ja
mov
shl
mov
rcr
call
mov
sbb
push
push
mov
imul
lods
mov
fild
push
icebp
pop
mov
inc
popf
jge
add
sar
sub
ins
jmp
mov
and
movs
fs
jg
icebp
mov
cwde
mov
dec
mov
in
jmp
ret
mov
(bad)
call
ret
add
jg
call
push
mov
hlt
mov
dec
mov
push
add
inc
push
mov
push
and
xchg
js
ret
inc
pop
xchg
adc
ret
loopne
sbb
loope
xchg
clc
mov
fstp
dec
(bad)
repz
or
shl
xchg
jmp
jno
inc
mov
fst
xor
dec
and
or
pop
leave
dec
les
or
cmps
sbb
jnp
test
adc
enter
clc
push
(bad)
jo
mov
cdq
mov
repnz
stos
push
pop
sub
out
jne
out
dec
dec
jnp
mov
nop
push
sbb
xor
scas
mov
dec
add
fsubr
jnp
cmp
lods
xor
sub
call
in
jae
stc
dec
imul
xor
mov
mov
cli
aaa
outs
xor
jmp
movs
lods
cs
mov
or
mov
jl
pop
mov
mov
pop
or
ret
movs
sbb
push
inc
std
out
add
mov
sub
inc
cli
push
fcmovb
jp
mov
aas
xor
das
in
mov
in
adc
outs
push
add
sub
cld
sbb
lahf
add
ss
cmps
fnstcw
sbb
jnp
mov
ds
pop
sbb
mov
dec
leave
xor
inc
jno
cmp
lds
lods
test
dec
dec
(bad)
dec
in
shl
sub
xchg
rcl
clc
(bad)
rcr
sub
xor
adc
inc
test
test
stc
mov
mov
dec
pop
adc
pop
call
push
and
pmaxub
push
in
xor
jge
push
std
lods
stos
mov
scas
ja
out
pop
and
rcl
sub
aas
je
sbb
cwde
cmp
push
mov
sbb
mov
mov
imul
dec
ds
(bad)
hlt
je
fdiv
std
mov
mov
retf
sub
sub
bnd
mov
cmc
or
pop
add
mov
nop
ja
and
dec
dec
sub
xor
mov
loop
aaa
sub
mov
adc
ret
push
or
out
imul
jns
int
mov
xchg
adc
sub
loopne
std
mov
mov
stc
pop
push
outs
adc
xor
inc
test
push
ins
pop
jp
ja
scas
loopne
xchg
in
push
xchg
cli
movs
aaa
mov
jecxz
pop
ins
in
mov
cmp
movs
adc
mul
lds
sti
cmp
lods
mov
out
xchg
scas
pop
add
sub
and
(bad)
jb
sbb
or
cmp
add
push
dec
jmp
or
arpl
jp
push
add
pop
repz
in
movs
scas
push
(bad)
inc
div
in
sbb
arpl
add
mov
cmp
outs
mov
and
test
sub
scas
outs
jno
pushw
inc
add
cmp
mov
inc
(bad)
or
jbe
cld
push
fs
push
leave
nop
push
or
aad
push
pop
retf
pop
mov
iret
imul
push
mov
cli
das
aas
and
push
in
xchg
mov
rol
adc
mov
lods
movs
in
js
mov
add
adc
ins
ss
mov
adc
dec
mov
jo
movs
jb
sub
enter
cmp
fsub
mov
mov
xlat
in
daa
retf
data16
(bad)
ja
and
push
xchg
retf
or
inc
pop
adc
mov
lahf
inc
and
or
jge
loope
bound
mov
mov
call
leave
stos
imul
cmps
and
stos
cmp
or
clc
ficom
cmp
sub
mov
dec
add
cmps
mov
inc
loopne
in
in
repnz
xchg
mov
icebp
jno
jo
ror
lahf
daa
mov
divps
mov
push
adc
jo
jo
rcl
rcl
sub
pop
stos
ss
scas
icebp
cmc
push
adc
inc
sbb
in
aaa
aas
sbb
in
or
jae
inc
jnp
mov
push
shl
int3
xor
out
in
icebp
(bad)
test
adc
pop
jne
(bad)
aas
test
mov
ss
ret
lahf
loopne
test
xchg
ror
push
loope
sti
out
fdivrp
cmp
adc
cdq
xchg
sub
test
jbe
dec
popa
enter
mov
lods
fsub
mov
xchg
(bad)
(bad)
call
xchg
repz
ror
mov
pop
(bad)
cld
adc
push
jno
and
loop
mov
pop
mov
repz
repnz
push
or
push
xor
jecxz
cmp
mov
mov
and
out
xor
add
add
xchg
arpl
aad
fs
out
sbb
dec
sahf
mov
(bad)
or
in
or
inc
mov
dec
jle
adc
mov
sbb
jno
dec
dec
fnstsw
fs
repz
adc
lods
stc
mov
into
sahf
sbb
and
rcl
mov
lock
jns
pop
(bad)
test
std
aam
add
pop
inc
ins
out
mov
clc
je
aad
stc
xchg
cld
popf
mov
dec
fld
fsubr
inc
cmp
inc
push
mov
push
lds
cmc
mov
mov
xchg
xor
adc
cmp
fsubr
xor
pushf
cmc
mov
push
jge
stos
adc
dec
sbb
add
sbb
nop
shl
bound
push
sub
ja
cs
push
jge
jae
retf
je
das
(bad)
in
(bad)
sub
mov
and
cli
inc
mov
cmc
lds
push
dec
adc
jo
inc
jmp
cwde
int3
push
sbb
dec
js
lahf
sbb
mov
dec
cmc
mov
out
movs
outs
out
pop
je
pop
dec
adc
aas
pusha
sub
jo
mov
jo
stos
int3
xchg
or
gs
lock
and
out
and
mov
mov
and
scas
jle
es
push
in
dec
adc
mov
xchg
cld
dec
aas
pop
xlat
add
imul
adc
ds
movs
jp
cs
sub
mov
pop
test
cmp
fdiv
mov
cmps
fdivr
imul
nop
mov
mov
sub
push
mov
pushf
sub
xor
addr16
jmp
or
push
loope
movs
push
mov
mov
xchg
pop
sub
push
pop
mov
(bad)
ror
test
enter
rcr
int
dec
jb
jo
or
test
pop
mov
in
repz
xchg
test
jmp
call
jmp
retf
adc
sbb
sub
sbb
fs
push
popf
mov
neg
pop
cmps
or
ret
push
pop
jp
in
inc
dec
std
cdq
mov
ret
pop
push
movs
sub
call
rol
je
adc
das
add
inc
pop
ror
repz
mov
sub
lea
adc
cmp
sbb
xchg
pop
xchg
movs
push
add
call
push
cli
test
and
popf
xor
sti
push
movs
add
rcl
and
mov
xchg
push
push
test
imul
fdivrp
loop
cmps
jg
or
xor
dec
sub
inc
stos
jle
jecxz
es
pop
stos
test
or
int
and
int
and
out
xor
mov
pop
not
mov
dec
mov
popf
(bad)
push
dec
push
xor
pop
jmp
pop
leave
jecxz
iret
lods
sbb
retf
cwde
hlt
mov
mov
add
cmp
inc
cwde
test
push
int3
adc
inc
jnp
stc
mov
mov
jbe
loope
ror
add
daa
scas
nop
call
pop
dec
les
les
mov
sub
pop
xor
push
sub
jnp
loopne
cmp
je
adc
inc
in
and
out
lahf
push
xchg
repnz
xor
adc
and
shr
xchg
add
(bad)
fnstenv
std
xchg
loope
sbb
push
push
nop
mov
inc
inc
sub
mov
xor
shl
xchg
push
ins
adc
fild
cmp
mov
ins
call
gs
fisttp
xchg
stos
push
mov
jmp
je
sub
out
int3
and
fwait
xor
xchg
dec
jecxz
xlat
push
dec
mov
mov
shr
add
and
mov
jbe
les
cmp
daa
pop
cmp
mov
movs
addr16
cmp
into
hlt
mov
movs
call
stos
jmp
inc
xor
out
mov
cli
clc
jge
fsub
(bad)
xchg
outs
cmp
push
adc
mov
scas
inc
xor
sub
iret
in
outs
lds
xchg
cmp
add
test
push
xchg
mov
gs
hlt
fsub
jg
pushf
addr16
pop
sbb
jmp
and
pusha
mov
imul
test
out
call
mov
pop
or
gs
imul
lahf
push
out
or
xor
stc
adc
pop
ret
xchg
imul
cmp
mov
inc
movs
loope
jp
add
int3
leave
push
sbb
or
pop
dec
dec
lock
or
mov
ss
mov
mov
pop
stc
push
test
int
sub
xor
jecxz
jo
jg
and
retf
je
adc
mov
add
cmp
loope
retf
test
test
sub
cdq
jmp
jno
mov
fnsave
pop
cmps
dec
or
lods
push
fld
fadd
rcl
or
fcom
daa
test
mov
sbb
dec
add
jno
pop
test
sbb
dec
add
cmp
jns
loopne
dec
push
inc
pop
xchg
mov
cmp
ins
inc
mov
inc
xor
jno
sti
cmp
inc
daa
add
ret
stos
in
rcl
inc
sbb
pop
sub
sbb
mov
pop
sbb
pop
mov
js
cmps
jg
pushf
sub
add
call
jge
mov
jb
mov
jmp
cmc
mov
addr16
imul
xlat
scas
push
movs
push
(bad)
(bad)
or
ja
adc
and
std
xchg
mov
gs
mov
mov
pusha
inc
int
iret
retf
and
aaa
fimul
sbb
das
fcomp
dec
std
and
ss
push
lock
mov
inc
clc
jmp
push
ins
in
sbb
sbb
mov
sar
jbe
ss
mov
jns
stc
dec
jbe
scas
ja
fstp
mov
mov
pop
iret
lods
mov
iret
or
cs
retf
mov
jno
push
loopne
fisubr
aaa
push
jne
fisubr
pushf
push
xor
mov
mov
mov
xchg
dec
daa
adc
pusha
ja
lock
inc
fmul
pop
ficom
dec
std
stc
rcl
and
test
dec
jge
stos
(bad)
(bad)
jle
arpl
add
sbb
sub
movs
add
nop
lahf
inc
sub
inc
adc
scas
jle
aas
cld
adc
ret
add
fwait
cwde
inc
mov
std
mov
lea
fimul
jno
shl
add
sbb
vmread
repz
pushf
(bad)
or
push
xlat
pop
sti
cmp
inc
mov
push
or
mov
push
or
and
arpl
sub
xor
jns
repnz
adc
adc
out
(bad)
lahf
les
dec
imul
sub
and
fist
add
mov
xor
or
mov
stos
and
jnp
int
movs
jp
pop
pop
inc
loope
xor
push
jo
or
push
in
dec
outs
gs
and
les
jmp
or
ret
mov
aad
adc
xchg
shl
inc
sti
cmp
jns
inc
addr16
jmp
add
adc
fidivr
xor
add
pop
cmp
movs
dec
stos
out
imul
and
dec
sbb
cmps
push
test
push
sub
mov
loopne
mov
repnz
cmp
sahf
call
mov
test
jp
mov
outs
rol
(bad)
adc
rcr
fs
inc
addr16
rcr
adc
cmps
cmp
mov
mov
inc
sbb
rcl
call
fst
mov
popa
mov
xchg
or
lods
inc
xchg
fdivp
jge
mov
sub
popf
jo
dec
mov
pop
and
or
mov
and
mov
xor
cmp
sub
shl
int3
or
and
sbb
mov
nop
test
shl
add
sub
jmp
inc
mov
cmps
iret
sub
scas
pop
xor
add
(bad)
loopne
xor
mov
aam
mov
scas
into
stos
jmp
std
jmp
fwait
dec
in
ins
pop
xchg
mov
mov
dec
jo
cmc
sti
call
jmp
fidiv
int3
sub
mov
rcl
inc
jo
icebp
cmps
dec
sub
pop
out
jmp
cmp
or
fild
aam
push
inc
lods
sub
in
push
push
rcl
(bad)
(bad)
adc
movs
add
scas
call
mov
sub
out
sbb
mov
jmp
sub
dec
add
adc
imul
jp
je
gs
push
xor
das
test
fmul
ds
and
sahf
adc
sub
repz
fsubr
or
(bad)
mov
or
(bad)
sub
out
and
mov
and
sub
scas
pop
push
in
pop
pushf
sbb
ss
es
mov
add
loopne
daa
fdiv
pop
movs
xor
stos
or
inc
push
loopne
lds
test
push
rol
and
out
test
jmp
(bad)
and
cdq
iret
fcomip
arpl
adc
cmp
dec
inc
arpl
adc
xchg
inc
pop
loopne
pop
mov
push
xchg
cdq
gs
mov
ins
pop
vmovlps
(bad)
rcl
jmp
add
aam
sar
push
jge
mov
inc
(bad)
mov
in
faddp
xor
aaa
cmc
aaa
js
ins
push
cld
sahf
mov
cmc
jg
mov
cmp
out
sub
push
mov
mov
in
xchg
jp
mov
and
ins
ret
mov
or
clc
aam
jle
imul
push
lea
(bad)
loop
ja
jmp
movs
mov
ja
sub
dec
imul
retf
call
cli
add
push
ins
test
out
mov
retf
sbb
lods
sbb
push
mov
call
push
xchg
xor
cmp
mov
movs
in
jmp
pop
rcr
shr
add
outs
inc
(bad)
cld
in
retf
xchg
int3
add
dec
cmps
arpl
cmp
lods
pop
fcmovb
jl
mov
mov
mov
cmc
jmp
inc
sbb
pop
sbb
push
xchg
loopne
mov
push
mov
mov
jg
and
xor
push
rcl
cmp
sbb
push
or
cmp
push
aaa
mov
add
ins
stos
xchg
aaa
cmp
adc
std
(bad)
sub
(bad)
push
pop
and
dec
scas
inc
adc
mov
cmp
jl
sbb
movs
adc
adc
xor
fnstcw
sub
mov
dec
and
movs
clc
ja
call
es
stos
sbb
es
xor
add
push
cmc
xor
cmp
inc
and
scas
ins
popa
jae
cli
lea
ror
pushf
or
add
pop
aam
mov
cmp
mov
or
shl
(bad)
mul
popa
jp
jl
dec
arpl
push
xchg
call
jmp
mov
cld
cmps
xor
add
adc
inc
sahf
lds
sbb
arpl
mov
inc
jb
mov
clc
jecxz
jecxz
cli
aaa
test
push
mov
(bad)
repz
sub
ror
jne
sbb
imul
cmp
sub
mov
xchg
ja
push
mov
in
mov
in
int3
push
ins
adc
gs
inc
fidivr
pop
pop
mov
icebp
mov
sahf
mov
fbld
xor
cmps
jae
arpl
mov
stc
mov
push
and
inc
imul
jns
in
sbb
sub
arpl
test
jb
jno
or
pop
sub
jne
js
in
mov
es
movs
popf
mov
jne
mov
push
ret
test
shr
push
add
or
pop
outs
cmc
sti
out
ror
arpl
rol
ins
adc
outs
lds
(bad)
cmps
daa
aam
repz
in
mov
repnz
jmp
fs
and
cmp
sub
mov
test
test
inc
inc
xchg
or
xchg
or
iret
fadd
int3
jnp
pop
lea
xchg
push
cli
rcl
jb
hlt
or
mov
(bad)
or
xchg
jl
stos
mov
dec
xchg
jae
aad
aaa
xchg
pop
inc
xor
icebp
adc
in
nop
push
sbb
fwait
adc
loopne
mov
inc
adc
retf
inc
and
xor
sti
fsubr
stc
xor
and
pop
sar
cmp
es
ret
add
aas
(bad)
and
adc
adc
mov
pop
(bad)
mov
ffree
rol
dec
dec
push
sub
xchg
mov
and
mov
sub
test
pop
cmp
in
xor
or
or
jb
in
jg
out
pushf
(bad)
rol
jecxz
cmp
bound
xchg
sbb
sub
shr
aad
cli
imul
lods
mov
out
pop
jl
fs
neg
sub
adc
shl
dec
mov
sub
adc
cmp
int3
push
push
es
mov
dec
js
cmp
or
push
fcmovnu
sbb
inc
pop
jg
bound
cld
mov
xchg
inc
fild
out
pop
mov
xchg
mov
jns
jl
and
bnd
cli
lds
push
mov
adc
es
jae
movs
dec
xchg
adc
jge
mov
push
retf
das
clc
pop
jge
fs
or
mov
fdiv
xchg
in
mov
mov
dec
ds
jecxz
xchg
clc
fwait
int3
sbb
(bad)
das
hlt
fcomp
lods
mov
mov
xlat
push
and
pop
jbe
cmp
mov
inc
enter
ins
jb
repz
popf
add
int3
fiadd
xor
mov
iret
ret
xor
data16
and
pop
rcr
lea
jbe
inc
fcmovne
in
faddp
add
push
arpl
fsubp
loopne
push
or
imul
into
xchg
sub
xor
imul
inc
mov
dec
mov
xchg
dec
add
mov
mov
jg
mov
jnp
call
pop
sub
jbe
repnz
add
jne
or
fs
pop
stos
sub
or
movs
int
mov
psllw
cdq
out
jno
cmp
icebp
inc
test
mov
call
dec
dec
cmp
sahf
cmp
data16
jg
sub
and
sbb
xor
cld
rcl
sub
pop
jmp
fdivr
push
xor
sbb
push
movs
rcr
sub
pop
mov
mov
pop
mov
les
nop
pop
out
imul
repnz
add
adc
mov
mov
xor
movs
out
outs
popa
jg
push
(bad)
mov
pop
enter
and
lods
xchg
test
nop
call
outs
mov
push
or
ret
sbb
sbb
push
add
add
les
les
movs
rol
and
jae
pop
div
ficomp
mov
pop
adc
(bad)
repz
int3
int3
mov
cmp
mov
std
mov
mov
repz
mov
inc
test
jle
xchg
int3
lock
mov
ins
mov
clc
retf
push
rcr
mov
mov
pop
sbb
loopne
xor
mov
pop
or
lds
cmc
xlat
lods
pop
jb
adc
in
adc
sbb
mov
fwait
rcr
popf
add
adc
jmp
stos
jge
loope
xor
jl
imul
jae
cmc
ja
cmp
xchg
test
sbb
lods
pop
cwde
sub
cs
aas
pop
mov
(bad)
push
mov
sbb
arpl
dec
dec
mov
jge
sbb
xor
fs
push
mov
fdiv
sub
jns
mov
jne
shr
mov
loope
mov
test
dec
jle
jg
add
and
sub
inc
jno
dec
(bad)
retf
sub
std
mov
push
iret
mov
mov
out
ja
shr
imul
into
or
aad
push
push
aas
test
add
lock
cmps
jb
xchg
push
xchg
int3
fdiv
stos
add
or
pop
not
rol
jnp
sbb
jle
inc
dec
dec
jbe
js
out
add
xor
jmp
test
push
pushf
add
imul
ins
call
pop
jge
arpl
cmp
mov
ffreep
jne
arpl
mov
fstp
fwait
js
mov
gs
mov
inc
aas
(bad)
out
sahf
add
test
movs
mov
je
cmps
stc
js
cmp
pop
xchg
scas
sbb
movs
out
xor
loop
ins
sti
xchg
sahf
xlat
aam
and
push
cmp
mov
xlat
mov
fbld
fisubr
leave
loopne
push
rcr
jmp
inc
sub
xchg
not
xlat
inc
movs
ret
out
popa
mov
idiv
inc
or
test
inc
xchg
outs
mov
inc
stc
dec
push
mov
enter
sbb
retf
add
and
jns
mov
setae
xor
or
push
fisubr
ret
test
aad
push
push
(bad)
imul
test
icebp
jo
mov
lock
xchg
fisub
pop
out
out
out
inc
xor
mov
ins
mov
dec
daa
rol
lds
mov
xor
sub
mov
mov
mov
xor
dec
jne
mov
mov
out
mov
jae
add
ret
xlat
xchg
cmp
leave
in
xchg
jo
inc
push
pop
in
daa
push
mov
inc
pop
sti
stc
add
movs
dec
movs
dec
jne
mov
jnp
or
in
dec
call
push
xchg
push
mov
add
push
outs
mov
(bad)
push
xor
into
jge
inc
inc
sbb
gs
cdq
out
cmp
out
xor
outs
pop
pop
arpl
sbb
loop
and
jge
mov
movs
bound
mul
dec
sar
out
icebp
cmc
mov
ja
push
(bad)
jne
add
mov
xchg
loope
cmps
cmps
test
cmp
(bad)
pop
fwait
sahf
push
and
push
pandn
lock
cld
imul
cdq
call
adc
cld
outs
dec
jg
das
push
(bad)
ja
int3
idiv
retf
(bad)
sub
inc
imul
nop
xchg
adc
mov
dec
call
lea
(bad)
push
xchg
test
int
cld
mov
xlat
inc
and
std
out
cmp
adc
cmp
cmp
out
pop
(bad)
repnz
xchg
mov
sub
leave
inc
xchg
mov
add
dec
es
or
inc
pop
push
push
adc
imul
imul
push
mov
aad
loop
mov
std
icebp
inc
dec
jbe
mov
clc
aam
jg
push
sub
xor
int3
pusha
ins
call
pop
and
fdivr
loope
inc
dec
cwde
xor
xor
sub
and
ja
push
sub
jp
xchg
xchg
sbb
xor
movs
push
jmp
jne
cwde
fs
movs
pushf
mov
out
or
popf
cli
ds
in
sbb
and
jge
dec
jmp
xor
popf
mov
xor
pop
jle
fwait
mov
pop
xchg
mov
cmp
sbb
test
movs
jne
(bad)
mov
xchg
cs
push
or
lea
rcl
xchg
sbb
shr
fisubr
ins
lds
das
jp
mov
push
cwde
scas
fs
and
add
inc
dec
movs
and
xchg
leave
repnz
and
nop
sub
test
inc
xlat
stos
cdq
dec
pusha
mov
sub
mov
push
or
or
mov
outs
push
pop
xchg
sub
mov
xchg
pop
ud0
xchg
or
jecxz
mov
cmp
mov
fsubp
inc
clc
rcl
ins
and
cmp
(bad)
nop
mov
cmc
dec
fs
adc
pusha
(bad)
lods
sub
mov
ds
sub
sub
add
xchg
pushf
sti
loope
call
or
cmps
mov
stos
dec
out
sub
nop
paddw
jb
jge
mov
rcr
call
push
out
inc
lahf
mov
pop
fsub
xor
sar
pop
stos
push
mov
xchg
jbe
rcl
call
js
nop
push
in
ins
rcl
jo
inc
pop
xchg
lods
mov
mov
(bad)
jbe
ja
push
fstp
rcl
outs
rcl
fs
mov
enter
xor
das
sub
push
test
fs
pop
xchg
mov
das
lods
popf
adc
in
ds
shr
dec
out
imul
aam
xor
repz
mov
push
sbb
inc
(bad)
in
xchg
mov
icebp
test
popa
mov
push
cmp
cwde
sub
call
sbb
lock
call
clc
lods
loop
int3
idiv
adc
mov
cmp
push
aaa
cmp
add
xchg
pop
adc
test
ss
cmp
pushf
das
ins
loope
daa
jns
pusha
repz
(bad)
imul
fidivr
and
cmp
inc
std
(bad)
sub
add
cmp
mov
mov
div
push
nop
add
push
xor
pop
xor
xor
dec
out
and
nop
es
pop
(bad)
xchg
outs
push
xchg
fwait
and
push
pop
sbb
mov
push
push
xchg
pushf
pusha
jnp
inc
mov
fadd
dec
and
dec
pop
(bad)
aas
dec
adc
test
push
cmp
xchg
sbb
sar
dec
in
xchg
ins
inc
add
lods
out
cmc
hlt
or
mov
ror
mov
lahf
popf
inc
dec
push
adc
xchg
and
(bad)
cdq
and
shl
cmp
mov
data16
sbb
in
fldenv
gs
jb
mov
loope
loop
mov
fwait
mov
sub
jo
std
enter
cdq
push
sbb
hlt
lahf
pop
jecxz
icebp
popf
dec
int
add
repnz
pop
or
hlt
cmp
sbb
mov
xchg
test
sub
lock
scas
sbb
sar
cmp
shl
jb
and
call
aaa
mov
sbb
and
es
ror
imul
mov
test
xchg
je
aaa
inc
pop
pop
xchg
ins
ss
aam
xlat
jnp
cmps
ret
sub
call
cwde
pop
pop
int3
loop
mov
out
mov
pop
xor
jne
add
dec
jl
lea
cmp
push
out
push
in
lock
(bad)
enter
enter
xchg
int3
pop
pop
pop
sahf
pop
lahf
scas
mov
and
fstp
leave
xchg
inc
xor
push
in
leave
repz
and
call
lock
xor
(bad)
pop
xchg
cmps
lea
dec
leave
fild
mov
das
jo
xchg
mov
jno
inc
push
xchg
sbb
cmc
iret
loope
rcr
adc
arpl
mov
out
and
leave
das
pop
ror
sub
and
cmp
aaa
sar
fcom
fld
mov
fcomp
mov
add
aam
in
fwait
push
mov
fist
xchg
fwait
dec
pop
cld
mov
ffreep
mov
outs
xchg
(bad)
aas
mov
imul
cli
and
xor
xchg
mov
xlat
mov
sahf
pop
dec
dec
shl
sbb
stos
je
pop
xchg
loop
bound
daa
out
loope
psubq
and
lea
sub
inc
xor
cmp
sub
shr
push
hlt
adc
stos
push
mov
fidivr
leave
mov
repz
dec
(bad)
sbb
mov
nop
jecxz
sub
adc
pop
popa
rcr
sub
je
xchg
pop
adc
es
xchg
ficom
movs
out
aas
cmc
adc
movs
call
pop
or
lds
or
push
push
add
test
push
mov
or
adc
jo
sub
gs
adc
xor
inc
call
inc
fwait
sub
push
pop
aad
imul
mov
pusha
lds
fsub
xor
add
(bad)
sub
jmp
push
popf
aam
popa
inc
xor
idiv
pop
(bad)
hlt
push
mov
mov
pushf
xchg
cmp
jle
bound
out
sbb
addr16
push
dec
push
or
das
jg
leave
cmp
mov
inc
inc
sbb
mov
in
scas
dec
xchg
cmp
sub
lahf
inc
fcomp
stos
rcr
sub
mov
dec
or
mov
cld
pop
or
xchg
mov
add
mov
sbb
and
adc
fidiv
ss
jg
fistp
mov
mov
sbb
sub
(bad)
popa
push
jo
xor
frstor
xor
rcr
outs
pinsrw
mov
mov
push
mov
or
mov
xor
sbb
sti
mov
outs
popf
pushf
test
enter
cmp
cld
push
fmul
loopne
jle
xor
ds
push
(bad)
(bad)
jmp
cdq
jecxz
icebp
xchg
pop
sahf
push
mov
movs
movs
cld
vpsllq
pop
inc
dec
jne
lea
sahf
adc
mov
fld
pop
xchg
rol
ss
sub
xchg
mov
in
test
mov
fdivr
mov
mov
dec
pop
hlt
stc
mov
sbb
dec
lea
jmp
mov
(bad)
into
repnz
sub
push
sbb
pop
dec
sbb
mov
loop
pop
fs
xchg
scas
xor
jg
(bad)
pop
cdq
xor
stos
cwde
inc
jle
mov
xor
push
xchg
(bad)
test
jp
or
xor
mov
sub
lock
fldenv
and
xlat
add
adc
pop
pop
mov
inc
ins
xlat
adc
call
pop
mov
fld
sbb
inc
mov
enter
sub
popf
and
dec
(bad)
test
fild
test
sub
or
ret
pop
xchg
stos
xor
and
pop
mov
jae
xor
fisub
xor
js
mov
fs
mov
xor
cmc
sbb
mov
jae
call
pop
mov
mov
mov
pcmpeqw
out
lods
lods
cmp
sbb
ins
cmc
xor
rcr
rcr
fld
shl
sbb
sub
pop
ins
push
jbe
lock
xchg
lods
mov
leave
push
push
rcr
call
inc
adc
int
data16
and
sbb
sub
les
inc
xchg
sub
fisttp
fwait
in
xchg
pop
push
add
push
sbb
cmp
cmp
jns
sbb
dec
data16
xchg
in
adc
mov
out
retf
inc
aad
int3
jmp
js
and
loop
sub
inc
pop
push
adc
sub
pop
stc
imul
sbb
loop
mov
ret
cmp
cmps
mov
jbe
cmps
lods
or
pop
fwait
popf
mov
xchg
sbb
add
mov
aam
mov
pop
jnp
in
mov
xchg
pop
sti
mov
mov
ja
mov
jl
cmp
jno
jmp
and
ins
sbb
xchg
mov
ror
in
pop
jmp
sbb
inc
mov
and
clc
xor
pop
dec
imul
(bad)
sbb
mov
sub
and
mov
adc
pop
rol
jecxz
lds
fisttp
cmp
fidivr
xchg
push
sbb
xor
(bad)
imul
xchg
xor
ja
sub
call
mov
sub
push
shl
mov
lea
inc
mov
cwde
fnstcw
xchg
repz
inc
ja
clc
aam
and
cmp
repnz
lods
inc
loop
fisttp
mov
inc
and
mov
out
inc
mov
sbb
popf
mov
outs
test
push
xor
(bad)
mov
aam
ins
sbb
fs
adc
std
or
inc
and
das
arpl
mov
sbb
fwait
add
popf
rcl
bound
jno
jmp
outs
adc
aam
les
sbb
into
(bad)
icebp
arpl
(bad)
aas
int3
hlt
jl
mov
std
js
in
ins
xor
lods
stos
push
dec
xor
iret
in
inc
xor
daa
mov
cli
fwait
mov
mov
push
fst
mov
inc
es
mul
mov
aaa
sub
arpl
xchg
sbb
ror
push
and
or
int3
pop
scas
fnstcw
not
and
push
retf
jp
inc
mov
inc
scas
shl
pushf
call
pop
dec
adc
inc
xchg
mov
push
pushf
retf
loopne
sbb
ds
in
jo
in
inc
pop
or
test
jno
add
jns
pop
test
xchg
loopne
mov
xchg
jge
add
mov
imul
out
outs
add
xor
pop
and
sahf
and
sbb
popf
shl
xor
int3
mov
cmp
dec
test
outs
mov
sbb
push
xor
fs
pop
xchg
push
mov
xor
cmp
cmp
mov
and
repz
div
out
jecxz
push
xchg
into
pop
idiv
dec
and
xchg
cmc
xor
jmp
es
inc
mov
test
mov
push
test
cmp
or
mov
push
iret
xlat
or
jno
mov
fwait
inc
cmp
lea
cli
lods
xor
mov
mov
lahf
add
(bad)
mul
dec
xor
dec
cwde
test
cld
or
xor
xor
jp
fnstcw
ins
(bad)
sar
(bad)
aas
xchg
xchg
cmps
add
mov
add
addr16
stos
add
or
and
mov
jbe
mov
dec
and
bound
enter
xchg
sub
dec
cli
cmp
sbb
test
test
jne
test
xchg
in
mov
leave
icebp
mov
imul
xchg
cmp
pusha
pop
push
clc
xchg
aas
jo
sub
adc
xchg
imul
test
jge
icebp
stos
sub
fidivr
jmp
and
js
jae
push
(bad)
rcr
inc
xchg
out
sub
js
pusha
inc
jmp
xchg
and
movs
repz
popa
ss
lahf
rcl
mov
push
push
call
ins
in
pop
out
repz
ds
jmp
lea
test
in
adc
fidivr
or
pop
push
sbb
jmp
(bad)
int3
dec
mov
cmp
ds
jge
addr16
xchg
dec
mov
inc
cs
jle
mov
inc
shl
pop
mov
inc
or
cmps
loopne
fstp
sahf
sub
lods
mov
js
jl
leave
mov
mov
int
out
inc
inc
stos
dec
dec
jp
jle
rcr
mul
mov
(bad)
sub
(bad)
cli
add
mov
mov
out
mov
xor
out
popa
and
xor
jae
push
mov
and
call
les
in
inc
ror
nop
stc
loop
inc
push
loop
mov
push
test
test
jmp
inc
std
sbb
adc
mov
mov
aad
or
cmp
pusha
and
dec
inc
add
ror
xchg
mov
sbb
push
mov
cdq
xchg
(bad)
xchg
push
(bad)
int
pop
std
cmp
sub
xchg
pop
sub
sbb
cdq
retf
clc
pop
retf
daa
add
mov
xchg
or
cmp
xchg
cmp
gs
icebp
mov
in
aad
(bad)
fld
inc
jp
sub
fst
cmovle
div
jbe
push
jns
fidivr
jecxz
jmp
xchg
cli
ficomp
add
aas
cs
mov
outs
imul
push
loope
jl
jnp
popa
jmp
retf
aam
sub
fnstsw
arpl
loop
or
mul
mov
sar
outs
icebp
mov
dec
xor
add
stc
add
jnp
test
sar
cs
test
pop
adc
sub
sti
retf
sahf
mov
out
retf
test
xchg
(bad)
stos
sub
imul
ja
and
add
mov
and
mov
jl
fdivr
jge
sbb
cmp
sbb
aam
sbb
lds
repz
je
(bad)
call
aas
add
jae
mov
mov
dec
ja
push
ret
test
push
or
jo
fs
push
js
imul
sub
icebp
(bad)
jmp
mov
add
paddusw
(bad)
fimul
sbb
fdivr
es
add
(bad)
inc
push
push
pop
pop
(bad)
fimul
frstor
aaa
push
icebp
test
neg
sar
stos
cmps
sbb
push
xor
add
aam
dec
rol
xchg
mov
les
lock
pop
add
and
sub
xchg
mov
cmps
or
mov
call
nop
shl
in
mov
mov
into
pop
stos
loope
sbb
mov
mov
outs
adc
jno
stc
or
shr
rcr
sar
(bad)
cld
pop
dec
pop
call
add
fstp
fninit
les
mov
or
inc
imul
(bad)
cmp
sti
call
xlat
push
adc
sub
ret
or
pop
mov
sub
sti
or
mov
push
test
jmp
bound
pushf
lods
scas
sub
cmp
push
add
leave
nop
sub
xchg
lea
sbb
mov
stos
push
loop
aad
dec
ja
(bad)
outs
shl
add
cmp
mov
xchg
pop
inc
popf
sar
mov
cli
sahf
and
add
hlt
fs
add
push
cmp
pop
test
mov
xchg
int3
mov
test
sub
xlat
leave
xchg
cmp
popa
inc
mov
mov
fs
lahf
scas
icebp
jl
inc
inc
xchg
add
pop
lahf
pushf
jbe
(bad)
jl
xchg
call
stos
sub
lds
cmp
aas
mov
(bad)
pop
xchg
sub
xchg
mov
rcr
add
ret
fisttp
nop
data16
cli
clc
mov
fwait
push
pop
pop
mov
or
outs
out
xor
pop
and
push
ja
dec
shl
adc
aas
mov
adc
pop
sti
dec
sbb
jg
stos
mov
or
dec
lsl
stos
hlt
mov
push
std
stc
mov
sub
inc
xor
xchg
inc
jp
lods
arpl
mov
add
sub
mov
js
jl
sub
or
push
inc
out
push
iret
icebp
inc
push
mov
jns
aam
sub
call
add
inc
cmp
or
adc
mov
fwait
add
cmps
mov
push
popa
pop
mov
rcl
stos
cdq
push
shl
pop
xor
js
mov
push
push
sub
stos
jmp
sbb
stos
push
ret
test
inc
lahf
or
mov
push
add
jno
test
pop
test
(bad)
push
mov
dec
sbb
adc
xor
inc
inc
adc
mov
(bad)
and
pop
and
icebp
scas
and
adc
mov
loopne
xchg
mov
pop
mov
mov
jno
jbe
ja
out
jle
push
(bad)
movs
mov
pop
xor
aaa
das
add
cmps
repz
mov
and
add
not
jg
cli
push
or
lea
int3
and
mov
imul
jl
mov
sbb
nop
rol
xchg
xlat
pop
mov
fistp
scas
mov
mov
or
lods
sbb
(bad)
cmc
ret
sbb
push
adc
inc
mul
out
cli
xlat
loop
in
jne
pop
je
sar
xor
push
xor
mov
mov
xchg
gs
cwde
cmp
and
push
push
jne
xor
into
(bad)
retf
ja
mov
sbb
add
add
ret
push
fld
dec
jle
dec
retf
pop
bsr
jns
add
int
lea
fist
div
push
adc
and
ret
fadd
aaa
dec
jg
sub
repnz
lahf
push
fsub
(bad)
pop
in
loop
push
jno
xchg
les
aas
test
repz
jo
xlat
xchg
mov
pop
inc
xchg
mov
fisub
mov
jae
cdq
sub
clc
dec
or
lea
mov
dec
mov
xchg
pop
mov
adc
fnstcw
in
ja
or
inc
call
scas
hlt
jae
jmp
add
mov
push
mov
test
push
mov
jmp
mov
fs
out
inc
sbb
iret
outs
inc
fild
sbb
stos
mov
arpl
popf
dec
out
sbb
test
cmps
jnp
mov
rep
les
push
lock
mov
dec
mov
inc
cmps
enter
inc
fmul
cdq
lahf
mov
fimul
stc
imul
addr16
pop
shl
push
inc
iret
pushf
push
enter
pop
push
sbb
push
or
shl
sub
dec
(bad)
gs
out
sbb
dec
imul
mov
ins
jl
jle
das
fdiv
xor
cmp
cmp
pop
call
xor
jg
mov
call
sub
(bad)
scas
lock
sub
(bad)
iret
(bad)
or
gs
adc
daa
xchg
cmc
fiadd
loop
icebp
jae
xchg
pushf
in
dec
jbe
adc
or
push
ja
push
jno
mov
cmp
push
pop
aam
adc
dec
mov
mov
jo
scas
xlat
push
push
sbb
pop
rol
mov
mov
mov
cli
jbe
inc
out
push
and
js
cmp
add
aad
lea
pop
iret
push
xor
ret
out
scas
imul
popf
cmp
xchg
ss
jo
je
in
mov
cmp
mov
fst
lods
pop
inc
retf
xor
dec
int3
mov
test
push
dec
push
inc
lahf
ins
push
cmp
test
mov
push
or
adc
call
movs
aas
cmp
fcom
ja
mov
imul
cmc
cmps
mov
cmp
icebp
mov
add
push
cmps
stos
outs
loope
xchg
scas
jp
fcomp
pusha
ss
mov
cmp
scas
xor
jne
rcl
loope
lock
bound
cld
ja
and
jp
aad
outs
das
ret
scas
pop
cmps
cwde
aam
movs
fcomp
iret
ja
xchg
mov
(bad)
mov
adc
xchg
enter
mov
mov
mov
sbb
or
popa
push
mov
pop
cmps
in
mov
out
xchg
dec
imul
mov
fwait
xor
fucom
push
xchg
adc
cli
nop
and
mov
mov
mov
clc
mov
jae
sahf
push
mov
repz
scas
jne
stc
or
sar
shr
neg
(bad)
or
mov
inc
cmps
sbb
sbb
sar
mov
pop
ja
dec
mov
rcr
ins
cwde
out
mov
xor
test
jno
out
pop
(bad)
repnz
mov
in
mov
clc
div
jns
dec
retf
jbe
mov
jmp
jb
push
push
fiadd
lock
stc
sbb
call
mov
inc
je
scas
cld
push
and
xor
adc
cmp
sub
sub
iret
test
or
in
pop
cmp
fcomp
ja
sub
xchg
bnd
mov
add
das
scas
sbb
loop
ss
addr16
sbb
lock
sub
xor
js
mov
les
retf
xchg
inc
sti
dec
scas
mov
adc
pop
jmp
adc
mov
in
or
pop
out
mov
xchg
xor
pop
je
cmp
imul
fincstp
int3
mov
into
sar
mov
retf
push
jae
dec
push
cmp
and
dec
push
ficom
adc
add
xor
loope
jne
push
mov
add
in
fnstenv
jge
retf
sar
push
jl
ret
fisub
lods
dec
lds
call
stos
mov
jl
(bad)
adc
pop
arpl
rcl
push
inc
mov
stos
xchg
add
out
lock
ds
sbb
mov
sub
mov
mov
cmp
sub
xchg
or
out
xor
aad
xchg
fild
mov
cmp
mov
or
push
inc
in
aam
scas
push
loopne
or
loop
xor
rol
fmul
mov
dec
pop
pop
sbb
mov
sub
dec
ret
outs
and
(bad)
mov
fstp
outs
out
or
shl
into
dec
(bad)
out
add
jno
fs
pop
or
mov
jo
in
lods
stos
mov
ss
sub
inc
cld
inc
xor
inc
mov
xlat
bound
pusha
fsubrp
xor
and
sbb
outs
mov
and
scas
idiv
jo
sub
dec
mov
xchg
stos
outs
mov
in
inc
mov
movs
jo
xor
mov
mov
pop
pushf
dec
idiv
out
ds
enter
sub
leave
jecxz
rol
pop
pop
jg
jp
jle
mov
push
fnstcw
jmp
rcr
hlt
jmp
loop
jns
je
(bad)
adc
cmp
je
or
sbb
jp
jmp
sbb
pop
xchg
ss
dec
or
add
arpl
mov
mov
xchg
xor
pop
bound
mov
xchg
jmp
dec
pop
popa
mov
pop
mov
mov
mov
iret
arpl
fcomip
dec
cmp
rcl
mov
mov
in
inc
ret
iret
sti
jmp
ror
(bad)
jbe
lea
mov
xchg
ret
je
sbb
push
xchg
add
in
fxch
xor
int3
sub
push
push
es
(bad)
in
aas
adc
push
sbb
jbe
sub
nop
mov
pop
jae
push
push
sub
lds
xchg
push
xchg
stc
xor
fisttp
je
scas
xor
xchg
push
mov
add
movs
rcr
data16
in
or
mov
aam
inc
int
xor
leave
movs
fwait
mov
inc
mov
in
mov
call
in
ror
ins
and
rep
fs
jg
push
int3
(bad)
add
cmc
test
add
xor
popa
sbb
repz
push
movs
and
dec
fistp
enter
mov
leave
scas
out
jne
mov
push
inc
mov
mov
xchg
sbb
mov
cmps
cmps
in
out
in
sbb
(bad)
jne
dec
idiv
repnz
jmp
mov
ftst
dec
jg
dec
stos
imul
sbb
aaa
sub
push
sub
loopne
jg
stos
dec
repz
popf
retf
outs
mov
jb
iret
or
jo
out
jno
mov
loop
popa
aam
push
icebp
or
scas
pusha
mov
imul
adc
cwde
aad
mov
jnp
rcl
clc
pop
frstor
mov
les
ss
jae
js
(bad)
ficomp
mov
fwait
jl
leave
jmp
sbb
ffree
js
inc
and
movs
mov
hlt
push
cdq
adc
test
adc
jecxz
xlat
xchg
push
ror
jb
ins
(bad)
xor
lods
push
ret
sbb
inc
xor
jmp
popa
scas
into
push
sbb
mov
aaa
jo
cmp
cmps
xchg
mov
cwde
pop
(bad)
and
iret
and
sub
jg
retf
mov
hlt
aaa
inc
adc
push
and
retf
add
data16
lods
xchg
mov
mov
or
sbb
popf
stc
pop
xchg
out
je
test
cmp
cmc
xor
fistp
pop
dec
ja
fwait
and
int
xor
pop
outs
mov
leave
pushf
sbb
jne
hlt
sub
jl
lods
cmps
cmp
cmp
push
xor
dec
lods
outs
push
push
ss
es
mov
out
push
and
rcr
jecxz
push
sub
xchg
leave
out
cmp
lock
or
test
and
and
cmp
cmp
imul
repz
fld
icebp
test
ja
int3
cmps
call
pop
mov
jno
shl
ja
xchg
sub
repnz
shl
addr16
int3
sbb
sbb
(bad)
xchg
movs
push
pop
and
jecxz
je
adc
or
cs
adc
mov
mov
ret
adc
sub
pop
jne
mov
sbb
jl
test
mov
int3
int
sub
add
jl
lock
mov
shr
push
mov
mov
cmc
pop
inc
mov
mov
inc
jb
cmp
xchg
sahf
pop
xchg
add
sub
ds
cmps
in
ret
mov
test
and
push
pop
out
mov
push
mov
rol
out
and
fsub
push
ret
fcmovbe
push
cmps
jecxz
shl
xor
hlt
icebp
lahf
movs
clc
repnz
scas
sub
jo
xchg
pushf
mov
dec
mov
push
inc
dec
mov
test
les
dec
push
dec
push
vmwrite
hlt
mov
push
sbb
pop
or
xor
ja
xrelease
les
jg
add
(bad)
cmp
mov
into
xchg
(bad)
mov
xlat
inc
add
daa
jle
lea
addr16
loop
jge
xchg
pop
mov
lock
cmp
fstp
(bad)
out
arpl
iret
dec
fist
sub
dec
mov
fidivr
cwde
retf
and
add
sub
pusha
call
push
push
or
adc
(bad)
cmp
lock
aas
xchg
xor
pop
shr
movs
outs
fwait
jb
mov
fdivr
push
mov
adc
mov
sar
in
sub
cmp
cmp
mov
(bad)
mov
out
cmps
shl
mov
jg
ror
clc
sbb
popa
mov
jmp
rol
or
enter
in
mov
in
enter
mov
add
clc
sub
rcl
jg
sub
jg
int3
jo
xor
jmp
jmp
mov
push
neg
mov
mov
push
or
push
rcr
jl
outs
fistp
stos
push
fnstcw
in
pop
(bad)
out
dec
cmp
aam
into
cwde
push
pop
mov
jl
inc
(bad)
int3
xor
inc
jmp
in
or
lods
mov
std
rcr
fwait
jns
and
jne
add
adc
add
sbb
xchg
(bad)
shr
leave
dec
cmp
(bad)
cld
mov
cmc
xor
adc
jb
and
sbb
es
outs
or
fwait
loopne
(bad)
inc
fnstcw
push
repz
jb
stos
lods
sbb
mov
aas
mov
add
jb
inc
loop
push
add
in
int3
push
cmc
pop
or
aaa
xchg
loopne
mov
add
lods
lahf
scas
sbb
(bad)
add
ja
repnz
test
xchg
bound
jmp
aas
inc
in
je
add
mov
cmp
jmp
or
mov
test
imul
push
xchg
gs
icebp
jmp
movs
aad
mov
das
mov
outs
retf
test
cmps
dec
sub
aam
lock
fmul
fisubr
jnp
sbb
cld
mov
pusha
dec
add
or
lock
mov
mov
cli
xchg
xchg
data16
push
jl
leave
sbb
xor
test
inc
test
sub
mov
stos
lods
jmp
seta
jns
jbe
addr16
mov
jp
jae
mov
xor
mov
inc
stos
pusha
lahf
dec
pop
mov
push
adc
jg
das
into
xchg
dec
out
iret
xor
inc
repz
retf
jp
stos
cmp
(bad)
idiv
sbb
sub
push
fdivr
pop
inc
imul
rol
shl
cmp
test
or
mov
imul
add
push
loop
mov
pop
outs
pop
pop
adc
cmc
ins
mov
in
ret
fnstenv
mov
adc
jae
push
clc
sub
push
xchg
cs
ins
ret
xor
push
jns
xor
fs
mov
mov
stos
or
push
fsubr
scas
add
and
jmp
mov
adc
es
jb
pop
fnstcw
jnp
fs
jecxz
add
cli
loope
out
pop
add
test
mov
xor
sub
lods
std
fiadd
xor
sub
sbb
mov
sbb
jo
lock
pop
xchg
popf
add
call
cwde
inc
jg
sahf
mov
cmp
xchg
push
and
nop
mov
jno
push
(bad)
mov
lods
jecxz
cmp
aas
scas
(bad)
jmp
popf
mov
loop
fcmovu
inc
ficomp
out
lods
sub
xor
imul
inc
mov
dec
pushf
fmul
jb
ret
(bad)
ja
or
je
and
ja
dec
aas
xor
sbb
and
jnp
ins
and
or
jl
xor
jp
pusha
das
pop
mov
add
dec
ficomp
sub
fcomi
cmp
shl
sbb
les
into
push
fstp
int3
rol
std
mov
outs
adc
imul
or
aaa
sbb
adc
pop
test
movs
pop
sar
idiv
dec
jge
inc
sub
xchg
xchg
rcr
sub
lock
dec
(bad)
rcr
jae
mov
mov
jb
icebp
jnp
cmp
and
popw
arpl
adc
inc
fstp
mov
test
mov
jmp
xor
mov
sar
in
mov
pop
mov
mov
dec
mov
jo
push
mov
dec
aam
inc
jg
jns
pop
sub
movs
pusha
(bad)
mov
add
sub
xchg
fdiv
and
xor
pusha
cld
cmp
stc
sahf
dec
mov
sbb
shl
shl
mov
mov
pop
mov
in
push
call
out
inc
mov
cmp
sbb
sub
sbb
push
mov
lods
(bad)
push
ficomp
push
repz
popf
inc
(bad)
shl
loopne
dec
imul
and
(bad)
pop
cdq
fstp
test
rcr
add
neg
inc
out
cwde
jmp
mov
mov
mov
jecxz
not
or
sub
jno
pop
popa
imul
cmp
sar
pop
push
std
outs
stos
jno
lock
adc
dec
jae
xchg
or
or
sub
pop
adc
in
add
dec
lods
push
mov
icebp
inc
mov
mov
dec
dec
mov
add
add
pop
pusha
loop
pop
adc
into
push
inc
jns
sub
mov
(bad)
mov
scas
ret
repz
and
sbb
push
adc
cli
lods
std
test
clc
in
ins
aas
stos
test
push
add
push
sbb
mov
movs
mov
jae
dec
sub
ins
add
xchg
movs
gs
addr16
enter
int
cdq
ins
dec
data16
pop
lods
dec
xor
sub
imul
es
std
cmc
out
inc
out
aam
in
xor
push
jmp
xor
ins
add
iret
daa
add
cmps
jb
or
scas
lahf
inc
push
gs
jb
in
jb
pop
jno
outs
pop
data16
cmps
cmp
cmp
xchg
std
lahf
stos
into
mov
(bad)
push
(bad)
push
or
mov
add
das
push
aas
call
jmp
dec
or
test
out
push
bound
sub
aaa
pop
out
mov
in
mov
jbe
inc
dec
shl
pop
and
xor
loope
aam
mov
cmp
ss
fprem
nop
pushf
mov
sti
and
sub
(bad)
or
cmps
clc
push
inc
js
jmp
push
lahf
dec
mov
das
mov
cmps
not
das
sbb
mov
jae
mov
lds
pop
inc
fwait
sbb
jl
int3
adc
add
pop
inc
push
dec
fnsave
sub
xor
or
dec
add
cmp
mov
pop
sub
cdq
fxch
and
or
pop
pop
cmps
sbb
mov
test
lahf
je
ss
jno
leave
lods
cld
in
mov
add
push
popf
inc
lock
aas
and
pop
pop
mov
pop
push
sti
mov
add
fcom
push
dec
dec
cs
push
in
pop
out
adc
test
jnp
lea
xor
in
sbb
or
push
push
mov
fstp
movs
adc
in
xlat
inc
lods
jl
test
add
lahf
pushf
imul
(bad)
cmps
jbe
xchg
xchg
add
cmp
cmp
mov
ja
cld
bound
mov
adc
cmp
jo
pop
nop
pop
stc
int
std
imul
xor
fsub
scas
cmp
idiv
arpl
adc
or
nop
adc
mov
push
cmp
jns
cmp
cmovg
mov
jmp
movs
inc
sbb
push
mov
bound
inc
push
pop
adc
out
pop
or
movs
sbb
popf
cmc
(bad)
dec
call
pop
es
pushf
mov
inc
scas
mov
xchg
adc
push
jle
gs
mov
cmp
out
int
daa
mov
sbb
hlt
into
call
xor
mov
fcom
popa
sub
mov
cmps
imul
out
movs
shl
lods
mov
push
dec
xor
rol
mov
sub
mov
sub
jp
inc
ja
(bad)
out
xchg
mov
sbb
sub
scas
out
fldenv
and
retf
test
mov
ss
cmp
(bad)
hlt
lea
aas
jmp
mov
shl
loop
test
icebp
pop
mov
inc
cdq
into
inc
jp
pavgb
movs
push
data16
mov
xchg
jns
popf
aas
mov
xor
inc
and
xchg
sub
push
ss
ret
jmp
shl
dec
imul
mov
mov
jne
ja
aaa
paddusb
stc
iret
push
sub
and
xchg
add
sbb
push
jno
adc
inc
inc
lods
ss
xchg
std
push
push
call
pop
hlt
dec
adc
pusha
arpl
add
push
aaa
(bad)
cmp
je
loopne
and
out
lock
cmp
ins
call
fmul
sub
stos
daa
pop
lds
and
jno
ret
(bad)
push
cld
stos
jle
and
(bad)
rol
in
dec
repz
sub
es
gs
mov
cwde
push
inc
sbb
xchg
les
test
and
add
dec
sbb
cmp
xchg
pop
ins
dec
jle
(bad)
leave
cmp
jb
sub
add
mov
jp
test
leave
out
es
sub
into
das
outs
dec
xchg
test
ja
aas
cmp
push
sub
aas
out
test
repz
or
xor
sub
daa
push
hlt
outs
pushf
out
push
leave
xchg
jae
pop
mov
xor
outs
or
and
xchg
jl
adc
sbb
pop
rcl
loopne
xor
xor
in
popf
clc
inc
mov
sub
sub
push
adc
lods
xor
dec
in
sbb
addr16
std
adc
xor
nop
fisub
and
pop
xlat
stos
ins
adc
mov
jne
mov
je
pushf
mov
add
out
jns
mov
jns
mov
into
fmul
push
push
fnstenv
push
mov
xor
pop
xchg
lock
int3
push
clc
mov
xor
ds
shl
push
fmul
push
outs
movs
pushf
jmp
dec
cmps
repnz
add
loope
add
mov
(bad)
sub
fld
leave
fcomp
cli
fdivp
pop
call
rcr
push
test
faddp
neg
pop
pop
cmp
mov
jbe
outs
xchg
cld
jne
cmp
in
push
adc
shr
dec
mov
jmp
cmp
icebp
lock
mov
jne
retf
stos
and
(bad)
in
lock
jl
loope
add
ins
mov
push
pushf
stos
push
aam
movlps
and
test
icebp
stc
push
in
pusha
mov
loopne
addr16
ds
push
xor
cmc
mov
loop
mov
mov
mov
(bad)
aaa
mov
outs
out
lods
jns
popa
push
in
sub
dec
push
sti
push
lahf
in
call
dec
xchg
imul
lods
fld
mov
ja
cmps
mov
iret
cmp
loop
mov
enter
in
xchg
inc
inc
cmp
adc
stos
add
mov
rcl
fcmovnbe
pcmpeqw
bound
rcl
jg
cmp
(bad)
cld
push
dec
add
outs
bound
ins
xor
adc
xor
mov
mov
out
cs
je
add
inc
mov
in
push
xchg
popf
cli
sbb
push
(bad)
imul
xor
fild
xchg
or
out
ret
stos
(bad)
and
jb
lods
and
les
lahf
cdq
inc
mov
adc
movs
inc
mov
popf
mov
mov
jmp
scas
sbb
mov
popa
mov
cmp
div
sti
mov
mov
and
lahf
cmp
(bad)
addr16
jmp
iret
add
dec
loopne
mul
movs
pop
pop
nop
gs
jb
push
push
dec
jmp
imul
test
add
add
loop
xchg
out
pop
popf
das
xchg
inc
cwde
lock
and
data16
daa
stos
out
mov
pop
push
jmp
push
enter
retf
aaa
push
jnp
cld
repnz
mov
test
mov
mov
addr16
hlt
push
imul
jge
cmp
in
jle
aas
mov
cwde
imul
cdq
add
scas
xor
and
ret
out
pop
fisub
pop
iret
jge
cmps
push
adc
out
outs
pop
or
xchg
dec
addr16
or
mov
sti
jno
dec
add
or
xchg
cmpxchg
daa
mov
pop
jne
rcl
add
ss
adc
push
mov
repz
shl
je
xchg
repz
cdq
mov
add
xor
cmp
mov
push
pop
mov
add
mov
adc
retf
inc
in
push
das
loope
movs
dec
xor
fwait
rcl
in
jae
pop
imul
adc
ja
sbb
push
into
rcr
out
lea
(bad)
pop
dec
es
jge
xor
pop
or
push
iret
test
clc
jl
shl
mov
push
pop
xchg
ret
add
mov
test
into
xor
jo
mov
scas
ins
push
pop
(bad)
xlat
xlat
cs
lods
cmp
mov
lods
jno
xchg
inc
sbb
pusha
stos
pop
jp
push
mov
sbb
pusha
enter
sub
pushf
xchg
fidivr
inc
xchg
aaa
push
stc
pop
or
in
movs
jmp
jmp
aam
xchg
mov
pop
les
loop
push
dec
xlat
es
out
xor
cli
cmp
mov
sub
sti
cmp
or
sbb
xchg
xchg
sub
xor
fadd
mov
loope
mov
std
mov
scas
push
adc
pop
xchg
pop
prefetch
or
push
inc
cmp
inc
xor
add
sub
xchg
xor
xor
ins
outs
cli
jo
aam
nop
adc
adc
xlat
or
mov
inc
mov
mov
push
scas
dec
push
les
loope
inc
outs
ins
les
fwait
sub
jo
xchg
arpl
xor
sahf
fwait
mov
or
int
leave
bound
cdq
pop
adc
ret
call
cmp
imul
xchg
jbe
out
fdiv
jecxz
js
and
and
std
dec
cmp
stos
or
mov
jns
pop
scas
dec
retf
mov
sub
cmp
push
jmp
cli
sahf
sahf
stos
xchg
mov
pop
mov
mov
inc
mov
into
addr16
into
imul
cmp
xchg
dec
sub
scas
add
int3
or
ja
out
xchg
sub
es
mov
inc
and
int3
push
inc
push
mov
test
aaa
lods
pop
xlat
adc
inc
push
loop
shr
xor
vpmaxub
adc
sbb
push
adc
adc
adc
mov
dec
inc
(bad)
jno
or
imul
xlat
popf
pop
jnp
fcomp
enter
add
push
clc
xor
pop
aam
push
mov
sub
cwde
fidiv
xor
and
xor
mov
stos
mov
mov
or
or
stc
neg
std
mov
jo
cmps
lock
jo
punpckhdq
call
jge
in
or
adc
loopne
sbb
mov
iret
sbb
sub
jg
xor
sub
cmp
xchg
in
jnp
dec
push
neg
stos
fdivr
es
shr
cmc
jno
gs
xor
(bad)
in
ja
mov
mov
mov
push
add
jmp
pop
mov
pushf
(bad)
fidivr
and
jne
or
jb
mov
inc
and
leave
mov
and
cwde
push
ds
xor
pop
nop
inc
push
mov
push
push
and
push
mov
test
xor
or
cmc
mov
imul
mov
(bad)
and
or
inc
hlt
xchg
outs
rol
sub
push
js
out
cmp
mov
in
inc
push
inc
sbb
push
or
or
mov
jb
sbb
xor
mov
cmps
loop
and
dec
xor
jecxz
push
cld
loope
jg
inc
(bad)
das
jmp
ds
int
push
shr
addr16
test
mov
pop
(bad)
hlt
adc
push
mov
aad
mov
cmc
mov
add
mov
pop
adc
data16
aam
in
imul
out
cmps
jle
add
retf
mov
add
add
push
push
jecxz
dec
fucomip
pop
ret
xchg
cdq
js
or
rcl
and
adc
mov
movs
in
shr
jns
mov
retf
ins
inc
or
jne
dec
div
sbb
pop
cli
cmc
mov
in
push
clc
mov
push
xlat
dec
test
jmp
std
jnp
sub
out
or
xchg
gs
loop
mov
bound
stos
or
pushf
mov
add
sub
cmp
daa
dec
cmps
stos
scas
and
ret
outs
dec
fs
xchg
sub
ds
add
xor
stos
or
xchg
lds
jae
pop
mov
mov
cli
and
std
retf
fmul
out
out
add
and
adc
ficomp
adc
in
sbb
in
cs
sbb
mov
mov
in
pop
vmread
ss
jo
adc
inc
fcmovbe
pop
and
mov
imul
int3
ficom
xchg
xchg
es
sbb
or
dec
mov
push
inc
ja
and
pop
xchg
sar
dec
aas
mov
out
(bad)
rol
dec
xchg
mov
sbb
cdq
add
push
movs
xchg
jmp
sub
jo
sar
out
mov
xor
push
push
pop
sub
aad
push
jno
icebp
inc
pop
pop
js
mov
ror
test
and
xlat
movs
fiadd
xchg
test
inc
add
jnp
or
or
push
outs
mov
and
mov
stc
popa
dec
repz
or
or
leave
sbb
jo
adc
mov
and
(bad)
jne
sub
out
pop
ret
add
aas
and
icebp
jle
xchg
dec
push
mov
push
cs
pshufw
xor
rcr
jl
xor
inc
cli
rep
push
ret
jnp
jnp
jae
push
test
lea
pop
jmp
ret
and
test
js
ds
retf
add
mov
jg
add
jecxz
push
ja
mov
nop
push
frstor
test
xor
int3
mov
test
push
arpl
loopne
ja
dec
pop
pop
jbe
dec
mov
test
pop
aad
outs
dec
repnz
mov
(bad)
stc
mov
cmps
adc
nop
adc
jns
ficom
cs
xlat
mov
in
addr16
nop
retf
fstp
push
cli
adc
xchg
(bad)
or
sbb
pusha
add
sbb
loop
(bad)
leave
aas
pop
xor
loope
daa
mov
cmp
mov
xchg
and
enter
pushf
sbb
jb
js
xor
pop
adc
out
jno
dec
retf
jo
jae
adc
enter
pop
push
imul
push
mov
in
xor
out
jp
jmp
adc
jecxz
lahf
jmp
imul
int3
(bad)
xchg
call
push
imul
add
xchg
ins
stc
and
out
dec
adc
outs
or
push
jbe
xchg
mov
icebp
cld
mov
test
xor
and
mov
dec
mov
inc
and
(bad)
fstp
addr16
sbb
shl
imul
dec
adc
cli
push
push
cmp
xchg
aad
in
jno
ffreep
pop
add
mov
or
aas
add
and
cmc
mov
pop
push
sbb
add
and
cmps
adc
popf
sbb
jb
ffree
add
jle
loopne
push
xor
add
pop
stc
jp
and
aas
mov
retf
dec
xchg
aas
sbb
les
pop
les
sahf
fbld
dec
sbb
mov
imul
xchg
cmps
dec
xchg
sub
in
sbb
push
sbb
cmp
test
les
push
xchg
out
int
add
stos
lock
fwait
pop
aam
pop
xchg
loop
rol
dec
xchg
dec
test
fwait
add
jp
(bad)
in
jle
push
cmp
std
or
in
sbb
inc
je
mov
out
add
scas
adc
xchg
test
out
sar
fcomp
loop
push
ror
push
fdiv
frstor
cwde
sbb
jns
xchg
push
sti
mov
sbb
aas
inc
std
sbb
dec
data16
xor
or
xchg
add
mov
push
pop
fs
adc
cmp
push
xor
or
dec
inc
jg
sub
sbb
inc
xlat
nop
imul
add
sbb
mov
(bad)
movs
std
ins
jno
pop
fs
dec
mov
xchg
leave
ins
push
dec
and
jb
push
lahf
xchg
icebp
sbb
aad
shl
mov
sbb
push
xor
jns
repnz
xor
scas
xchg
sub
add
stos
scas
ret
dec
fistp
sbb
push
mov
push
sti
inc
jp
iret
sub
clc
stos
mov
icebp
je
sbb
jge
test
ins
fidiv
mov
push
add
cdq
pop
cwde
daa
push
and
jg
pushf
sub
xchg
pop
hlt
fimul
add
adc
jb
xchg
jns
cwde
cmp
and
mov
in
fs
mov
mov
add
inc
cwde
and
das
jae
xchg
out
xor
rcl
mov
fild
adc
jbe
sar
int
aas
lea
add
dec
cmp
mov
int
sub
pop
sbb
mov
or
cmp
adc
mov
sub
inc
out
mov
add
addr16
ja
cmp
fstp
jecxz
inc
test
movs
or
mov
test
or
xchg
pop
adc
lahf
icebp
mov
sbb
push
cli
jns
out
shl
clc
aaa
xchg
or
push
repnz
inc
nop
jg
inc
stc
out
in
loop
push
ficom
ds
add
mov
jg
xor
xor
mov
and
jmp
lahf
aaa
jbe
mov
push
adc
outs
jmp
gs
mov
mov
cmps
ror
xchg
push
xor
adc
hlt
dec
and
pop
mov
sbb
pop
cli
scas
mov
pop
addr16
push
jns
mov
adc
mov
jp
aaa
and
mov
loope
data16
inc
lahf
jle
inc
loop
cmp
fisubr
xor
push
inc
ss
not
fcmove
and
or
call
vpsadbw
sbb
lods
daa
jb
mov
sahf
imul
push
sub
xchg
adc
shl
cmc
stos
enter
push
out
and
inc
cdq
fistp
addr16
mov
mov
add
adc
call
xor
jp
and
es
add
rol
push
cli
add
and
aam
popa
ror
mov
out
popf
aaa
sbb
into
leave
test
add
xor
mov
in
mov
daa
pusha
adc
sbb
xor
shr
or
pop
add
out
add
xor
jg
dec
mov
mov
and
lds
out
and
jecxz
jmp
imul
rcr
sbb
pop
inc
sub
std
and
sub
data16
rcl
add
popa
or
js
in
gs
and
push
dec
enter
pusha
cmc
loope
fwait
stos
xor
pushf
and
mov
fiadd
sbb
int
out
xchg
mov
inc
popf
test
repz
inc
in
mov
or
ds
hlt
push
adc
enter
adc
loop
mov
push
outs
jns
cmp
mov
adc
jmp
mov
adc
xor
add
aaa
push
shrd
(bad)
lahf
sbb
cmp
into
adc
push
push
aam
mov
loop
push
adc
outs
jp
push
in
mov
arpl
jo
mov
cmp
xor
add
sbb
jo
fisttp
loop
mov
cmp
adc
dec
scas
scas
les
pusha
out
popa
adc
cmp
in
mov
jle
jle
add
pop
cmps
add
mov
in
nop
test
push
xchg
aaa
pop
add
stos
push
lods
out
in
div
out
mov
or
mov
pop
sub
aaa
lods
pop
mov
aad
(bad)
cli
test
loop
cli
aam
and
mov
test
or
cld
test
dec
test
fxch
movs
or
xchg
sbb
mov
sbb
daa
mov
cdq
or
push
xchg
call
icebp
pop
retf
mov
sti
scas
pop
jg
mov
(bad)
xor
pop
jge
xor
aad
ret
push
pop
add
xor
push
dec
cmps
xchg
ret
icebp
xor
xchg
in
shl
mov
sahf
mov
loop
mov
and
call
push
icebp
jns
jae
cmc
in
iret
std
ja
and
mov
(bad)
push
pop
cmp
test
adc
ja
outs
xchg
sbb
xchg
pop
inc
inc
push
or
lock
xchg
xchg
xor
imul
mov
xor
pop
leave
aam
add
mov
jecxz
imul
es
ret
cwde
or
add
ret
cmc
sti
jno
add
hlt
or
xchg
jno
aas
scas
jb
mov
pop
mov
ins
rol
test
push
inc
or
pop
or
ja
shr
leave
mov
sub
push
in
jbe
(bad)
mov
(bad)
cwde
std
fild
inc
iret
cmp
in
and
fadd
fidivr
dec
daa
adc
ret
push
inc
adc
dec
jns
mov
mov
lahf
bswap
add
jns
push
pushf
ins
mov
mov
out
sbb
dec
pop
inc
push
sbb
enter
xchg
shl
and
stos
loopne
sub
pop
scas
mov
push
xor
xor
fmul
out
repz
sbb
jnp
out
xchg
jbe
loope
lods
loopne
aad
ret
jg
jg
fld
pop
mov
aas
jne
jecxz
fbld
test
loope
jne
lods
in
jmp
(bad)
in
sub
or
clc
push
outs
das
inc
retf
xchg
jge
pop
ficom
sbb
jp
pop
lods
sbb
sahf
in
sbb
mov
mov
pop
test
mov
fs
test
lds
cmps
xchg
cld
mov
in
cmps
dec
bnd
cmps
dec
and
pop
xor
jg
mov
push
sbb
out
lds
inc
cmps
and
scas
mov
out
xor
out
bnd
jae
or
retf
fld
push
or
data16
jle
and
shr
sysexit
call
cmc
mov
push
sbb
cdq
in
xchg
aas
repnz
add
xlat
pushf
adc
lock
lahf
aaa
inc
retf
dec
jle
ins
xchg
pop
inc
outs
xlat
loopne
sub
jg
xchg
data16
mov
in
and
or
pop
dec
sbb
jg
sbb
int
ficom
and
and
leave
dec
aas
ja
xchg
pushf
add
lock
pop
sar
pop
add
sbb
stos
sub
cs
in
dec
into
jle
pop
out
stos
dec
xor
rcr
jp
test
int
jmp
jb
adc
jbe
jo
pop
dec
into
inc
add
in
xchg
or
xor
sub
dec
ja
ja
into
shl
jp
mov
jae
sub
int3
xchg
sbb
jae
or
ror
mov
nop
push
rcr
dec
or
pop
movs
push
jmp
iret
ss
mov
ret
sbb
xchg
mov
ror
ds
xor
int3
cdq
cld
push
ins
verr
sbb
mov
push
or
jp
mov
movs
mov
pusha
cli
fcomp
mov
stos
jne
call
jge
jmp
aad
aas
adc
(bad)
hlt
scas
sub
std
cmp
adc
mov
shl
mov
(bad)
ficomp
fldenv
outs
data16
out
mov
(bad)
ficom
ja
into
pop
cmps
sti
xchg
push
and
mov
data16
xchg
cmovno
addr16
add
cmp
sub
jge
mov
loopne
add
leave
lock
test
xchg
arpl
or
movs
ins
sub
fdivrp
je
ss
push
loope
or
xor
(bad)
fidiv
mov
mov
pop
mov
fwait
cmp
cli
inc
repz
dec
int3
dec
xchg
fldcw
clc
xchg
xchg
mov
loope
cmp
lahf
push
loop
sub
mov
lds
repnz
mov
xor
push
(bad)
enter
or
dec
fild
xchg
stos
fwait
loop
or
dec
xor
das
sahf
or
inc
sar
dec
sub
repnz
jmp
out
fiadd
stc
call
lods
mov
jge
(bad)
mov
mov
and
lods
xlat
add
jmp
inc
sti
pop
jae
rcl
movs
aas
push
pop
retf
call
mov
mov
push
push
jo
or
or
or
(bad)
int
xchg
lahf
fsubr
add
or
sti
mov
mov
push
xlat
fstp
push
mov
pop
mov
aas
cmp
pusha
cwde
adc
push
jle
mov
call
rcl
cli
mov
mov
pushf
xchg
loope
jns
imul
sbb
and
lds
xor
sub
(bad)
out
jbe
pop
ins
hlt
and
cmp
retf
add
pop
xor
push
jo
mov
pop
into
pop
(bad)
sub
scas
es
xlat
xchg
xor
cld
dec
scas
js
idiv
mov
je
cli
jmp
ds
pop
cld
pop
cmp
jo
cmp
xlat
mov
xchg
pop
nop
rep
lods
inc
add
scas
in
test
outs
mov
jle
hlt
xchg
lds
xor
adc
ins
mov
mov
inc
add
idiv
jg
bound
or
js
unpcklps
pop
push
fs
aad
jns
lahf
out
sbb
cwde
in
pusha
xor
push
or
cld
movs
adc
adc
mov
mov
add
popf
repnz
cmp
pushf
aas
stos
and
push
cs
pushf
arpl
add
push
mov
(bad)
jne
sbb
loopne
fcom
add
aaa
jmp
aas
inc
pop
test
pop
dec
(bad)
push
mov
das
test
xchg
jg
dec
sbb
jbe
and
aas
mov
push
neg
jne
jmp
ret
inc
idiv
pop
mov
pop
addr16
mov
mov
ror
ins
xchg
test
inc
loopne
push
ins
bnd
xchg
test
les
sub
retf
adc
dec
pop
pop
or
dec
rcr
sbb
stos
add
adc
mov
mov
mov
pop
loopne
call
(bad)
inc
and
imul
xchg
add
cmp
lods
cmp
pop
inc
pop
pop
into
mov
popa
enter
xchg
pushf
aad
rcl
mov
mov
jne
int
add
add
faddp
add
pop
mov
adc
test
test
sbb
pop
jp
jmp
add
dec
mov
xchg
jno
cdq
popf
out
test
cmp
sub
mov
xor
lahf
push
push
in
cmp
jne
sahf
jge
scas
push
dec
mov
mov
in
push
cmp
test
pop
or
loopne
out
ss
pop
iret
xor
ret
xlat
push
shl
loop
pop
fld
dec
and
lds
push
or
push
cwde
xchg
outs
inc
pop
xchg
stos
push
ins
xchg
and
fild
test
fwait
adc
jae
stc
mov
data16
and
dec
fs
xor
pusha
inc
dec
fstp
mov
push
data16
xchg
sbb
retf
mov
jmp
sar
inc
sbb
mov
enter
and
aad
sahf
dec
jle
in
cmps
xchg
push
ror
push
push
loop
jecxz
cli
sbb
or
dec
jg
pop
sub
and
mov
mov
lock
cs
ins
add
out
out
add
stos
inc
ins
sahf
xor
jno
mov
mov
xlat
iret
push
into
fwait
xor
or
or
pop
iret
ins
sar
sbb
adc
fadd
mov
(bad)
addr16
scas
xor
aad
jmp
imul
cmps
out
inc
test
push
xchg
scas
dec
cs
or
xlat
ins
inc
fcomp
pop
push
out
test
gs
rol
fdiv
xchg
sub
fimul
sub
sub
mov
sbb
bound
xchg
xlat
outs
enter
cli
xor
call
out
xchg
ret
cmp
out
mov
mov
mov
dec
mov
not
push
cwde
dec
in
jge
outs
lea
and
mov
jl
loop
aaa
(bad)
test
jnp
sub
(bad)
(bad)
fldenv
jnp
das
frstor
cwde
in
(bad)
call
mov
mov
adc
or
loop
out
push
hlt
adc
push
inc
ss
add
sbb
(bad)
xchg
or
outs
in
push
lock
clc
test
or
jp
and
adc
sub
leave
iret
retf
mov
retf
or
inc
mov
jo
sub
lds
rol
mov
movs
fistp
cwde
push
cmp
jbe
icebp
xchg
jp
or
dec
(bad)
test
pusha
push
and
jmp
rcr
push
fistp
dec
push
retf
mov
adc
mov
test
movs
in
mov
pop
adc
js
mov
clc
popa
mov
jbe
cli
imul
xor
cld
jl
push
rcr
mov
dec
pop
jl
shl
pop
stos
loopne
jno
xchg
xor
or
(bad)
sub
out
jmp
fiadd
xor
jne
inc
push
retf
(bad)
cmps
std
sbb
jmp
aam
xchg
or
dec
sub
xchg
cli
pushf
mov
jmp
cmp
and
pop
jae
mov
mov
jle
in
aas
inc
or
retf
imul
sahf
adc
retf
jnp
int
pop
outs
cwde
push
xchg
push
mov
inc
data16
ret
je
cwde
mov
jl
outs
cmp
jb
aad
mov
sbb
push
adc
pop
ins
jle
and
cmp
xor
inc
dec
sbb
or
push
cmc
xchg
fucomp
add
push
neg
pop
das
sub
sbb
mov
pop
in
fbstp
or
arpl
sub
mov
ja
imul
ret
dec
pop
push
stc
(bad)
aad
fs
dec
add
pop
stos
loop
fwait
(bad)
lds
into
fimul
les
xchg
pop
sbb
test
ja
in
xchg
fimul
sub
jno
xchg
push
xchg
movs
mov
scas
int3
sbb
cmp
sti
aas
shr
aaa
aad
mov
adc
arpl
sub
pop
mov
stos
bound
(bad)
jl
push
adc
add
inc
push
jne
mov
inc
adc
dec
scas
and
xchg
mov
mov
repnz
loop
fnstenv
jns
and
jle
imul
(bad)
movs
sub
pop
push
pop
adc
repnz
xor
push
xchg
sub
jmp
inc
pop
inc
fs
and
sbb
jmp
outs
ds
test
iret
mov
call
and
test
outs
pusha
fisubr
sbb
add
(bad)
hlt
add
mov
mov
or
xor
xlat
movs
int
push
dec
mov
adc
imul
push
(bad)
and
bnd
lock
xchg
loope
fcomp
lods
jecxz
adc
test
je
push
sbb
sbb
aad
mov
push
sbb
sahf
and
lock
add
in
loop
cmps
mov
sar
mov
rcr
and
mov
mov
and
or
dec
into
aaa
push
retf
into
mov
mov
repz
retf
pop
sbb
sub
mov
mov
std
cmp
jbe
pop
sar
inc
cmp
add
mov
sub
hlt
and
retf
cwde
out
mov
adc
leave
movs
xor
retf
adc
retf
adc
fcmovnu
cwde
mov
repz
pop
sbb
les
jg
mov
and
rcl
ins
inc
repz
popa
dec
popa
fdivr
in
pop
pusha
mov
push
push
dec
out
outs
sub
enter
jo
xor
mov
jmp
pop
pop
mov
cmp
cmps
aad
adc
mov
das
je
or
pop
pop
add
add
push
ins
out
mov
push
mov
mov
adc
adc
leave
ret
callw
mov
mov
scas
pop
push
in
das
mov
imul
mov
mov
jmp
leave
adc
into
pusha
repz
dec
jns
jno
ret
clc
mov
inc
mov
popa
jo
add
and
hlt
jnp
adc
lds
jmp
mov
icebp
or
mov
outs
out
outs
inc
or
adc
mov
(bad)
inc
mov
stc
push
scas
in
lods
mov
xchg
sub
sbb
test
rol
push
leave
push
ss
mov
mov
pop
sub
push
dec
cmp
and
ficomp
mov
(bad)
or
adc
push
int3
jno
jle
outs
adc
shl
inc
or
mov
adc
or
fdiv
dec
ds
hlt
in
pop
int
aam
add
loopne
jb
mov
neg
cmc
int
ficom
mov
push
call
in
or
punpcklbw
push
jmp
xchg
aaa
mul
in
dec
push
xor
sub
imul
or
fcomip
(bad)
aam
dec
fucomi
shl
movs
aam
pushf
fbld
mov
ds
mov
ja
inc
outs
std
sahf
repnz
rol
sub
jae
cwde
cld
adc
les
fidivr
mov
fst
dec
std
mov
xchg
sbb
daa
sub
icebp
ins
pop
xchg
inc
repz
xchg
or
mov
mov
adc
cmp
dec
mov
jecxz
stos
mov
add
iret
inc
push
in
cmp
fs
call
leave
into
in
(bad)
imul
cwde
imul
rcl
pop
pop
fdivr
and
push
cli
dec
jo
mov
inc
sub
cwde
xchg
shr
shr
rol
mov
mov
(bad)
enter
push
scas
mov
sub
ror
std
inc
push
outs
dec
xor
fsubr
popf
dec
or
sbb
(bad)
adc
cmp
jne
push
add
xchg
dec
pop
retf
pop
aad
cli
(bad)
push
sub
inc
dec
sbb
xor
sbb
push
in
mov
or
add
cmps
cmp
mov
sbb
mov
in
fist
fucomip
out
push
leave
cmp
xchg
test
fldenv
fcomp
pop
xor
test
push
jecxz
out
mov
adc
mov
jns
std
icebp
(bad)
xlat
push
bound
outs
mov
mov
es
mov
lods
sti
pop
mov
sbb
jecxz
push
stos
call
mov
lea
mov
fdiv
jmp
int3
mov
cmp
out
ret
js
mov
cwde
outs
sbb
fld
push
mov
mov
or
loopne
les
retf
in
add
arpl
outs
ins
aad
out
scas
sbb
mov
cli
pushf
call
cs
outs
jmp
daa
push
inc
sub
sbb
lahf
shr
xor
aam
inc
cs
jae
sbb
imul
dec
pop
popf
jae
push
ds
aas
mov
fisubr
aaa
and
rol
mov
nop
adc
out
jnp
call
add
xchg
lock
push
mov
or
addr16
lock
jl
movs
out
out
sbb
mov
test
mov
ins
xchg
pop
push
ret
sub
xchg
jp
shl
cmp
or
retf
icebp
mov
pop
mov
mov
pop
sti
mov
sub
lds
and
sub
mov
pop
adc
arpl
and
repnz
or
cwde
cmp
stos
push
push
add
test
sbb
je
fidiv
jecxz
or
jo
out
pop
fst
movs
test
add
and
retf
adc
xchg
fs
inc
test
loop
hlt
daa
adc
(bad)
fidiv
fsubr
into
mov
ds
xor
(bad)
mov
xchg
mov
mov
retf
mul
imul
inc
dec
sub
pop
sub
xor
int
icebp
pop
hlt
sar
pop
int
aam
xor
shr
in
ja
bound
std
movs
mul
pusha
lods
xchg
lods
sub
addr16
loope
xchg
imul
in
inc
cmc
call
ret
shl
mov
fisub
and
push
pushf
pop
pop
cli
xchg
jg
into
or
inc
mov
neg
push
pusha
pop
and
push
jno
adc
test
mov
imul
jmp
std
in
or
mov
push
and
xchg
jle
lods
add
sbb
push
mov
pop
js
sub
repnz
mov
aad
pop
mov
call
rcr
mov
add
mov
pusha
mov
les
out
mov
jo
jg
sbb
ins
jno
pusha
push
push
xchg
and
pop
and
sahf
repnz
cmp
jmp
cdq
inc
mul
add
es
push
int3
int3
add
jne
mov
adc
icebp
in
add
pushf
jnp
push
data16
fdivr
daa
cld
sub
add
iret
out
adc
icebp
xchg
fwait
jp
pop
xchg
jmp
dec
add
or
inc
ss
std
popf
sbb
xor
inc
scas
movq
mov
leave
mov
pop
rol
jge
jns
lock
dec
rcr
enter
and
sub
add
call
(bad)
xchg
add
jb
in
pop
in
pop
or
enter
fstp
clc
push
cmp
pop
xchg
into
mov
test
cmp
xchg
es
pop
pop
xchg
inc
add
push
mov
xlat
xchg
mov
jno
pop
jb
je
(bad)
jae
adc
jmpw
dec
pop
test
push
hlt
adc
div
xchg
push
iret
jbe
daa
push
std
sub
(bad)
out
loope
cdq
das
xchg
and
stc
div
xchg
jne
test
notrack
loopne
inc
xchg
add
jno
jle
hlt
dec
cmp
inc
push
cmp
(bad)
int
and
bound
mul
popf
fs
cdq
in
fdivr
and
call
maxps
ret
aas
scas
aaa
jbe
mov
repz
jl
mov
bound
inc
fnstsw
sub
jge
(bad)
mov
or
(bad)
jmp
xor
mov
and
or
dec
adc
sahf
mov
cmps
call
sbb
ror
fucomip
mov
mov
test
mov
sbb
ja
loop
inc
call
xchg
jb
call
gs
pop
push
pop
out
out
ds
call
mov
icebp
lods
and
lahf
sub
jne
cld
dec
add
(bad)
sbb
cmp
(bad)
cmp
sbb
jl
mov
ja
test
gs
mov
jne
jo
cmp
xor
sbb
fsubr
cli
loop
rcl
sub
push
push
inc
push
mov
addr16
mov
sub
sbb
into
sub
sbb
cmp
adc
push
sub
aas
adc
or
je
sub
mov
cld
daa
jne
or
out
dec
jecxz
rcl
test
rcr
or
mov
mov
retf
ja
jae
sub
fmul
add
movs
(bad)
(bad)
or
in
data16
mov
(bad)
iret
cdq
in
cmp
jg
cmp
stos
jo
mul
out
sub
in
test
repnz
adc
fldenv
out
dec
stos
sub
test
mov
sub
and
and
iret
xchg
stos
mov
jp
add
pop
sub
ja
sub
loop
repnz
lods
xchg
ja
inc
xchg
add
jne
sub
adc
cdq
pusha
mov
add
jae
imul
jg
rcr
sbb
shr
mov
and
movs
xchg
fstp
nop
lods
or
mov
fcomip
aam
pop
cs
push
xchg
push
arpl
xchg
aam
push
arpl
sub
add
into
loop
data16
lds
adc
add
xchg
cld
xchg
jae
and
test
jae
inc
cmps
lahf
stos
ja
adc
xor
mov
imul
cmp
sub
sbb
jp
(bad)
xor
(bad)
cmp
add
movs
pusha
retf
or
push
xchg
mov
push
sub
xor
fsubr
retf
je
sbb
dec
imul
mov
jnp
add
imul
pop
mov
(bad)
push
repnz
(bad)
dec
popa
ret
jmp
test
pop
xchg
jno
dec
xchg
xchg
jnp
push
stos
and
dec
fimul
cli
dec
stc
fisubr
mov
gs
rol
ins
in
push
inc
add
inc
push
xor
loop
rcl
and
int
pop
ficom
dec
dec
(bad)
adc
pop
int3
cmp
and
inc
fwait
and
push
js
mov
stos
adc
ror
fwait
adc
adc
cmp
inc
jmp
jmp
fnsave
mov
rol
lea
xor
test
mov
pushf
stos
xchg
mov
into
inc
(bad)
ins
not
dec
scas
push
push
fld
cmps
(bad)
mov
add
adc
aam
(bad)
adc
xchg
adc
ins
and
jl
aas
sbb
cmp
mov
adc
sahf
cmp
jmp
xchg
shl
mov
fwait
out
dec
pop
enter
loope
dec
sub
adc
sub
cwd
repz
adc
or
fsubr
clc
and
add
inc
xor
ret
or
push
dec
in
mov
adc
outs
sub
push
movs
jae
in
cmps
adc
sbb
jecxz
sbb
ss
xchg
inc
xchg
shr
not
je
inc
inc
clc
stos
dec
fcmovu
or
inc
inc
mov
frstpm(287
test
add
jl
popa
sub
push
std
cmp
mov
outs
out
hlt
sub
dec
push
outs
mov
mov
push
jp
ds
lock
sub
stc
mov
cmp
sub
xor
je
jmp
jmp
pushf
jmp
inc
sbb
mov
and
pop
lahf
dec
int
jne
mov
out
lea
leave
adc
jne
bound
cmp
push
sbb
icebp
aad
dec
inc
adc
(bad)
cli
adc
ret
add
and
cmp
pop
dec
jns
dec
and
sbb
or
(bad)
adc
sub
je
sbb
std
lock
and
or
idiv
push
mov
push
mov
out
pop
(bad)
rcl
lods
inc
iret
out
jl
(bad)
in
(bad)
xor
push
add
dec
cmp
gs
popa
call
adc
rol
call
nop
popa
xchg
sub
sbb
lods
loope
cwde
loopne
cmps
jmp
or
jge
clc
mov
ins
push
mul
iret
popf
add
aaa
ja
sbb
aas
sub
sub
mov
mov
int
repz
push
mov
(bad)
gs
and
sub
pushf
sti
cs
jmp
pusha
shr
icebp
ret
mov
call
scas
pop
push
xchg
cli
or
xor
rcl
jle
mov
sahf
pop
(bad)
idiv
push
ds
pop
sahf
es
movs
scas
ins
in
and
fidiv
jge
mov
imul
imul
dec
lock
sbb
aad
iret
sub
and
repz
push
push
int
xchg
shl
inc
jno
es
leave
xchg
(bad)
test
icebp
push
pop
sar
dec
test
add
pusha
(bad)
call
mov
lahf
xor
and
dec
out
push
nop
mov
fmul
mov
push
add
not
jne
add
mov
dec
pop
(bad)
xor
jnp
pop
mov
jmp
sar
jmp
push
addr16
jmp
and
sub
or
mov
push
mov
mov
sbb
out
lods
fcomp
out
inc
dec
and
int
movs
loopne
push
mov
call
mov
fisubr
addr16
push
out
add
dec
mov
mov
pop
fst
push
push
sub
bound
sbb
ins
xchg
ror
loope
push
jmp
add
mov
and
xchg
ret
call
pavgw
and
pushf
mov
or
(bad)
mov
push
addr16
jnp
jge
dec
movs
pop
in
inc
leave
cmp
imul
fcomp
int
(bad)
aad
cmp
mov
inc
not
rol
jbe
dec
cwde
repz
cmp
es
adc
out
xchg
ds
arpl
hlt
jno
loop
push
lods
add
pop
xlat
fs
pop
sub
xchg
add
cmp
dec
cmp
rol
dec
imul
and
or
in
push
xor
mov
fst
xor
sub
imul
cmp
mov
sbb
out
je
pop
mov
xchg
sbb
dec
and
cdq
ror
int3
(bad)
lods
aam
sub
push
mov
push
iret
inc
aad
daa
es
sbb
ret
scas
lea
stos
adc
out
cmp
mov
xchg
lock
int
out
rcl
cmp
movs
pop
pusha
outs
out
test
add
lods
leave
jb
xor
sti
dec
pushf
gs
out
xlat
xlat
dec
pushf
mov
mov
mov
push
sub
ins
sub
into
and
mov
shl
sub
add
or
jo
push
repz
or
fist
cmps
push
push
imul
dec
mov
xchg
mov
repz
mov
or
aad
pop
stos
sbb
push
mov
imul
pop
out
mov
mov
in
dec
mov
dec
lahf
mov
xor
push
mov
fs
xor
sub
sbb
xor
les
jl
(bad)
sar
mov
iret
repz
add
xor
scas
fisttp
jp
sub
pop
push
sbb
inc
jle
out
push
int3
push
test
jle
ins
push
sub
xor
imul
mov
std
(bad)
jmp
pop
cmp
fwait
adc
out
repnz
dec
retf
mov
inc
xchg
dec
mov
test
lds
sub
adc
retf
and
dec
lds
imul
jmp
jl
cmp
fisttp
inc
iret
scas
fcomp
cmp
fcmove
in
popaw
mov
add
cmp
cmps
dec
pop
lods
fistp
dec
icebp
sub
push
and
(bad)
push
cmp
retf
retf
int3
dec
cs
cmp
stc
mov
and
mov
dec
sub
mov
int3
jnp
xchg
loope
xor
data16
dec
sbb
cwde
aam
out
dec
retf
cld
inc
ret
mov
test
xor
mov
iret
xchg
cs
mov
js
movs
ds
jne
add
sub
fs
dec
int3
out
jmp
call
xchg
mov
sub
xchg
cmp
aad
jmp
stc
popf
or
sub
add
sahf
shl
push
jecxz
in
lahf
push
ins
ins
ret
or
cmp
dec
mov
shl
arpl
push
stos
jb
pop
pop
lahf
inc
xor
sub
sub
pop
out
jl
shl
sbb
xor
push
pop
cmps
inc
jle
fwait
cs
inc
or
mov
dec
inc
aad
push
rcr
mov
add
leave
jge
inc
or
imul
jb
ins
ror
bound
jl
mov
icebp
push
mov
xor
inc
clc
in
lds
arpl
(bad)
mov
fwait
sbb
mov
cmp
rcr
popa
add
sti
mov
jno
mov
ds
and
loopne
rcl
and
sub
sbb
fdiv
mov
jb
pop
adc
icebp
and
enter
add
cmp
test
dec
pop
retf
movs
xchg
push
lods
(bad)
ficomp
or
xchg
mov
or
popf
arpl
adc
ins
pushf
cdq
call
sub
sub
rcl
dec
fidiv
push
xor
cld
(bad)
or
js
iret
sub
xchg
sbb
xor
enter
sub
xchg
push
add
retf
mov
add
pop
pushf
and
ins
mov
jns
movs
mov
aaa
pop
(bad)
in
lea
out
jge
xchg
shl
out
add
imul
cmps
cmp
stos
cli
adc
jb
popf
test
arpl
mov
xchg
jae
or
mov
pusha
cli
aaa
fisubr
shl
ins
fimul
hlt
rcr
push
lods
dec
add
xor
stc
ins
ficomp
adc
jb
push
jle
mov
pop
jb
xor
das
mov
sbb
sbb
mov
fild
sbb
adc
out
sbb
aad
outs
mov
pop
dec
fnstsw
sub
or
pop
xor
int
scas
(bad)
xchg
push
popa
dec
in
(bad)
aam
pop
mov
mov
lds
les
fcom
int3
jo
fst
jae
or
mov
pop
xor
push
add
and
adc
(bad)
and
mov
add
sub
xor
stc
(bad)
pop
and
mov
inc
xor
cmp
lea
push
adc
push
jmp
or
lods
outs
dec
dec
dec
in
inc
sbb
mov
jnp
ja
or
mov
scas
adc
test
ja
and
jge
stos
neg
sar
into
shl
pusha
in
pop
xchg
sbb
cmp
cmp
pop
into
sub
mov
daa
sub
inc
mov
mov
inc
hlt
push
sbb
add
push
and
fwait
lods
add
jns
mov
pop
in
sbb
iret
mov
pop
adc
sar
outs
imul
xor
and
add
jne
iret
fadd
push
push
pop
adc
sbb
iret
xor
enter
outs
dec
mov
out
pop
mov
xor
mov
adc
movs
fdivr
sub
fs
cmp
mov
cdq
aaa
dec
inc
add
loope
ret
jg
or
adc
xchg
lods
push
ja
mov
int
push
mov
sbb
lea
or
ins
jae
(bad)
push
and
(bad)
in
mov
xlat
inc
jae
mov
pop
pop
pop
xchg
lods
shl
call
xchg
lock
out
lea
mov
enter
xor
dec
adc
das
cmp
mov
bound
out
xor
cli
sbb
sub
shr
cmp
mov
loopne
jecxz
std
idiv
inc
mov
fisttp
sysexit
sahf
xor
jp
or
test
mov
xor
dec
outs
xor
dec
sahf
sbb
jp
shl
ins
jns
enter
ror
ins
dec
loop
push
xchg
mov
adc
sar
cli
nop
inc
std
jbe
push
add
add
(bad)
jmp
jbe
cld
cmps
js
gs
mov
fnstcw
je
add
fwait
cmp
push
lock
jns
dec
imul
dec
pop
pop
or
(bad)
out
(bad)
out
lock
adc
js
call
out
fstp
data16
scas
jbe
retf
inc
jmp
pop
ins
daa
pshufw
cwde
sub
push
paddusw
sub
xchg
xor
or
pusha
(bad)
jmp
cwde
push
stos
push
dec
or
ficom
xor
pop
ins
jo
ret
adc
adc
inc
scas
jne
pop
pop
adc
mov
or
jge
mov
shl
in
fldenv
ret
mov
xchg
rcr
pop
clc
sbb
dec
fucom
retf
ret
mov
dec
sbb
jge
mov
adc
or
xchg
aad
xchg
out
fbld
lods
test
idiv
nop
shl
sub
inc
test
pop
pop
pusha
dec
scas
cdq
xor
lods
jmp
mov
add
retf
push
daa
aaa
dec
rcr
jo
mov
loope
mov
int3
(bad)
jl
adc
scas
mov
ins
loopne
xor
cld
lock
ret
rcr
push
xor
aad
pushf
cs
mov
or
add
add
stc
arpl
cmp
aam
or
xchg
sar
popa
daa
dec
in
in
pop
sub
mov
ror
into
rcr
xchg
sub
xchg
test
cs
arpl
aam
adc
mov
(bad)
fstp
mov
add
test
sbb
jl
(bad)
push
jae
or
dec
push
(bad)
sti
xchg
sub
js
div
inc
call
jnp
xorps
int3
mov
fisub
movs
int
fdiv
xor
or
push
retf
out
cs
clc
and
mov
mov
mov
(bad)
push
lahf
rcl
or
cmc
cdq
addr16
js
mov
pusha
movs
inc
mov
popf
mov
adc
pop
rol
leave
mov
pop
pop
call
xchg
sbb
sub
pop
mov
mov
imul
inc
jecxz
ss
inc
dec
and
imul
test
pop
push
push
pop
and
daa
xor
fcomp
sub
rcl
outs
dec
jle
sbb
mov
add
ss
imul
mov
addr16
fsub
and
pop
mov
pop
cli
imul
je
jb
pop
push
retf
adc
jns
mov
out
sub
jl
scas
push
push
cs
sbb
outs
or
arpl
add
sbb
mov
dec
loop
xor
xchg
push
fwait
sbb
call
aaa
nop
mov
cmp
nop
or
fldcw
sbb
test
scas
mov
mov
jb
sub
in
jbe
adc
dec
push
mov
in
repz
fdiv
fsub
das
mov
out
ret
mov
push
sbb
push
cmp
in
mov
in
push
call
test
dec
xchg
cwde
cmp
cmp
dec
in
dec
pop
sub
sub
xchg
loope
hlt
push
movs
and
fisubr
hlt
mov
mov
jge
sbb
in
xor
nop
sub
loopne
retf
jmp
cmp
inc
cli
cmp
inc
(bad)
jo
add
out
mov
mov
add
adc
mov
sub
pop
mov
fisub
mov
fmul
mov
scas
fimul
movsx
xchg
in
(bad)
leave
jp
xchg
nop
pushf
pop
cmp
aaa
ds
sub
jecxz
jbe
pop
jno
enter
inc
mov
dec
fcmovnu
push
cmps
ror
(bad)
(bad)
mov
int3
test
push
es
int
test
pop
icebp
cmp
fldcw
(bad)
mov
movs
mov
inc
cmp
out
push
gs
daa
sub
xchg
(bad)
inc
cmp
int3
loope
add
pop
xchg
adc
inc
sub
call
les
and
push
cdq
add
jle
mov
xor
inc
push
push
cmp
lods
adc
repnz
retf
out
push
mov
les
inc
test
inc
or
mov
push
mov
in
add
mov
sub
mov
cli
dec
adc
xor
push
scas
push
adc
xchg
iret
mov
sbb
mov
aam
adc
mov
jle
dec
mov
ja
sbb
cmp
aad
fisttp
mov
and
sub
mov
aad
mov
bound
or
data16
or
nop
mov
mov
ror
cwde
dec
sbb
mov
mov
sti
nop
dec
xchg
lods
push
jge
fdiv
xor
in
cs
mov
sbb
imul
mov
jbe
lods
pusha
hlt
ins
cld
pop
push
push
movs
loopne
(bad)
and
sbb
mov
dec
push
jg
or
aaa
cwde
sub
add
mov
inc
in
jae
mov
out
scas
sbb
xchg
xchg
das
loop
push
gs
adc
nop
ret
add
aaa
ret
loop
mov
outs
sub
mov
in
pushf
mov
adc
(bad)
iret
adc
and
or
fimul
hlt
ja
cmps
mov
mov
add
add
dec
and
in
fistp
inc
or
outs
pop
pop
fild
push
cdq
mov
and
jg
jns
sub
(bad)
fild
xchg
or
iret
and
and
xor
xchg
adc
or
ss
cwde
inc
mov
and
mov
dec
xchg
pop
inc
sbb
and
je
jp
es
jne
mov
cmp
sub
out
sbb
push
jle
cmp
fsub
jo
dec
fstp
imul
pop
cmp
xchg
mov
sbb
xor
push
jl
mov
xchg
(bad)
xchg
fidivr
cli
cmp
jmp
xlat
mov
movs
gs
outs
out
mov
and
jg
jb
mov
ins
push
mov
and
or
lds
mov
mov
mov
icebp
mov
xor
fcmovne
faddp
pop
(bad)
aas
jnp
push
push
add
jmp
addr16
stos
and
shl
aam
int3
(bad)
sahf
cdq
aaa
adc
add
test
push
jge
loope
mov
fld
call
xor
dec
clc
cmp
inc
jp
push
dec
xlat
enter
sub
jecxz
mov
sub
fwait
dec
adc
dec
iret
pushf
sahf
test
(bad)
aam
movs
leave
mov
aam
pop
call
cdq
and
xchg
fcmovb
cmps
test
inc
imul
(bad)
scas
add
pushf
add
je
pop
outs
shr
cmp
pop
pusha
das
loop
sbb
aaa
sbb
ds
mov
fsub
push
into
aad
ds
iret
adc
inc
or
and
mov
jns
sub
in
cmp
fwait
addr16
fwait
mov
add
icebp
aam
dec
(bad)
retf
jecxz
push
add
cli
xchg
nop
xchg
sbb
in
jno
inc
mov
dec
test
cmps
mov
imul
ret
loope
test
ins
inc
sbb
mov
mov
jl
mov
outs
cld
sub
push
lods
imul
mov
ja
push
outs
cmp
and
adc
pop
dec
fistp
test
cmp
and
mov
shr
mov
sub
jo
icebp
or
sbb
cmp
mov
stos
add
lahf
repz
mov
jmp
xchg
shr
push
xchg
or
push
dec
je
repz
xlat
rcl
leave
push
jno
sub
mov
xor
not
rcl
or
cmp
add
push
inc
lods
or
sahf
mov
lods
outs
dec
mov
dec
cmp
cmc
mov
sub
jno
sbb
xor
retf
ret
pop
mov
sub
mov
in
jbe
ins
mov
push
lea
sub
sahf
iret
jb
sub
aad
xchg
call
scas
lods
xchg
call
cdq
mov
xchg
jo
push
dec
shr
xlat
cli
push
inc
push
fs
xchg
fldenv
mov
and
stos
std
scas
mov
stos
out
fmul
pop
push
pop
les
cmp
lock
mov
ja
and
push
clc
mov
je
jo
cmovae
push
adc
es
ins
push
mov
movntq
mov
mov
aas
sub
std
aaa
mov
nop
movs
xchg
or
aam
hlt
pop
adc
or
popa
sti
inc
xchg
arpl
mov
fnstsw
imul
pop
adc
xor
dec
bound
test
jo
les
ja
lock
or
ja
xlat
xor
cmp
sbb
mov
xchg
rol
cli
dec
xchg
xor
or
nop
lds
cwde
or
stos
enter
adc
mov
(bad)
xor
mov
stc
adc
push
sbb
push
hlt
inc
dec
(bad)
arpl
mov
fsub
call
rol
dec
loopne
inc
mov
ret
fimul
push
adc
mov
je
pop
call
and
jge
or
jecxz
pop
sbb
jo
mov
sar
pop
nop
daa
jp
adc
fwait
cmp
add
sti
mov
mov
(bad)
push
mov
fwait
addr16
add
popf
jae
ud2
aad
jnp
pushf
pop
and
dec
mov
jnp
(bad)
inc
loope
mov
je
shl
push
lds
aas
neg
xlat
std
lock
lea
call
nop
mov
xor
lods
loope
cmp
adc
dec
in
cdq
adc
xchg
test
cmp
cmp
xchg
iret
inc
jge
xor
inc
int
mov
add
int3
aad
into
fcom
adc
les
dec
jno
jg
test
ficomp
inc
data16
out
pusha
inc
movs
sbb
cmp
retf
jmp
in
adc
repnz
call
out
pop
mov
leave
out
jnp
aad
push
push
sar
cmps
cmc
mov
jne
enter
push
imul
sub
jge
fldenv
push
fs
sbb
scas
stc
sub
gs
sbb
loopne
dec
pop
into
or
nop
imul
pop
add
jmp
jge
push
inc
cmps
push
test
es
shr
outs
add
repnz
cmp
sbb
dec
mov
push
icebp
and
pop
or
mov
mov
inc
inc
mov
into
or
fstp
mov
or
loopne
push
or
pushf
push
cmps
mov
aaa
mov
mov
hlt
or
fs
gs
outs
cmovs
movs
mov
inc
sbb
imul
sub
ins
pop
xor
mov
ret
inc
ins
and
jmp
push
aad
repnz
leave
lahf
cmps
mov
test
pushf
mov
out
dec
mov
dec
mov
sub
pop
(bad)
cmps
sti
fisub
adc
aas
pop
in
ret
sbb
mov
jbe
sbb
or
push
or
loop
aas
push
pop
cdq
add
pop
out
(bad)
adc
dec
(bad)
fistp
pop
mov
cmp
popf
popa
xor
push
fadd
sahf
cmp
jne
std
xchg
push
push
mov
xchg
test
jb
lods
test
add
ret
movs
jecxz
popf
mov
les
xchg
retf
imul
in
sub
popf
imul
inc
inc
push
add
push
sub
push
sub
add
or
jl
sahf
dec
inc
add
add
test
push
gs
in
adc
cld
pop
mov
lods
cs
jbe
mov
std
or
dec
mov
mov
sub
sbb
ret
jo
mov
ds
shl
xchg
std
mov
xchg
inc
pop
mov
(bad)
pop
imul
adc
mov
aas
dec
pop
adc
cs
add
stos
push
pusha
jbe
mov
push
adc
jo
(bad)
jbe
movs
cmp
mov
div
push
cmps
mov
pusha
lss
xor
iret
mov
or
pusha
mov
mov
in
int3
add
jnp
idiv
adc
sub
out
call
push
dec
sbb
jno
int3
or
stos
pop
mov
mov
xchg
add
dec
pop
stos
retf
mov
adc
mov
jns
sub
les
adc
sti
cmc
push
outs
out
add
gs
rol
sub
std
xor
inc
shl
ins
mov
call
cmc
push
mov
push
mov
or
hlt
shr
imul
clc
adc
and
mov
lds
pusha
add
dec
mov
not
cld
clc
outs
call
and
sub
lahf
mov
in
cli
mov
add
pop
fsubr
outs
jo
jno
es
mov
movs
arpl
clc
sub
out
adc
jge
nop
jle
mov
sub
and
popa
sub
add
cmp
mov
add
(bad)
sub
or
mov
mov
iret
test
in
repz
xchg
mov
js
xor
sub
cmp
cld
lock
das
ins
aad
xor
cs
xchg
pop
lds
(bad)
shr
call
cmp
cmps
cli
mov
xor
ss
inc
retf
nop
mov
pop
cli
lea
mul
sbb
pop
pop
pop
push
jbe
pop
(bad)
cmp
adc
fidivr
into
test
aaa
jbe
or
outs
test
push
cld
jae
(bad)
ds
jo
cmps
lahf
lock
mov
(bad)
fwait
lahf
add
mov
ror
in
cmp
iret
or
es
mov
or
std
cmp
in
nop
pop
xor
jno
inc
in
jle
icebp
sub
and
xchg
inc
mov
mov
mov
loop
mov
or
xchg
push
pop
stc
aad
enter
popa
shl
pop
push
jg
outs
mov
xchg
imul
jnp
test
lds
scas
lea
inc
adc
mov
jmp
in
out
ret
int3
jg
mov
adc
mov
pop
movs
sahf
inc
push
sbb
(bad)
push
xchg
leave
pop
pop
out
ficom
(bad)
adc
(bad)
dec
jns
hlt
cmc
sbb
das
movs
call
repnz
iret
cmps
test
aam
cmp
call
ret
cmp
cmc
push
push
adc
sti
movs
sbb
ins
sbb
push
mov
jp
pop
outs
cld
mov
(bad)
sbb
movs
jnp
mov
imul
mov
jmp
scas
push
mov
retf
retf
inc
shl
imul
add
mov
movs
outs
cmp
fcomp
cmps
jmp
fisttp
fstp
and
xor
outs
sub
jg
pop
hlt
inc
cld
in
sbb
lahf
addr16
cmp
xlat
push
outs
adc
xchg
sar
sub
cmp
shl
add
pop
mov
jp
mov
jg
lea
xor
mov
stc
inc
jo
add
pop
mov
adc
inc
adc
imul
dec
pushf
sub
push
mov
lds
push
addr16
out
mov
pop
outs
icebp
cmp
and
inc
push
dec
outs
ds
sbb
mov
mov
leave
inc
outs
dec
mov
sbb
scas
lock
(bad)
push
jno
das
jecxz
dec
stos
sbb
jmp
and
rol
cs
scas
daa
xchg
fcomp
jl
ds
mov
stc
ror
mov
fdivr
sbb
dec
cmp
add
xor
std
test
out
fdivr
pop
or
in
gs
mov
sbb
mul
dec
adc
mov
xlat
xchg
and
xlat
outs
rcl
and
outs
jnp
or
xchg
enter
gs
test
add
les
lahf
cwde
stc
add
fistp
ficom
mov
or
aad
lahf
shl
les
ror
gs
and
ja
pop
ror
outs
mov
jnp
jns
test
mov
ss
int3
aam
and
pop
movs
outs
sbb
repnz
test
das
xor
jmp
fwait
sbb
sub
mov
mov
push
mov
fcom
mov
pop
rcl
xchg
push
and
dec
cmp
addr16
pop
fnstsw
cmps
ret
dec
sub
xor
pop
(bad)
cld
std
sbb
push
push
push
scas
aad
gs
in
push
mov
stc
fistp
push
test
mov
cmp
fcomp
adc
xor
daa
pop
mov
pop
add
pop
std
jmp
dec
imul
and
dec
jnp
mov
add
dec
jl
sub
(bad)
aam
fninit
(bad)
jl
mov
ret
test
es
push
pop
call
jge
das
xor
mov
or
mov
mov
xor
push
fxtract
out
mov
lods
imul
dec
cmp
mov
enter
jle
es
imul
inc
sbb
es
xchg
inc
popf
mov
cmps
hlt
mov
sbb
cmps
sub
or
lea
outs
test
scas
cli
repnz
in
add
sub
jbe
iret
movs
adc
pop
mov
aam
push
sbb
mov
inc
cmps
and
inc
mov
and
sahf
inc
enter
popa
hlt
dec
(bad)
cmp
xchg
and
dec
call
(bad)
dec
ficom
les
out
aaa
out
sahf
cmp
leave
xor
stos
mov
ins
cli
(bad)
popa
fdiv
loop
jbe
cdq
leave
adc
xchg
sbb
jmp
push
stos
sub
inc
mov
shl
mov
pop
add
dec
call
mov
jno
inc
mov
icebp
add
(bad)
(bad)
cmp
retf
dec
(bad)
mov
jmp
jno
cli
popa
push
mov
inc
rcr
push
xlat
adc
nop
cmps
ins
xor
push
or
xchg
sub
(bad)
fcmovnbe
adc
xchg
(bad)
pop
and
mov
inc
mov
inc
cwde
(bad)
fwait
add
sbb
xor
ins
and
data16
jmp
mov
mov
pop
jae
jno
sub
sti
xor
xor
mov
inc
add
in
ins
sub
push
inc
aad
pop
cdq
adc
mov
movs
int
ret
test
push
dec
cwde
sbb
pop
in
pop
(bad)
sub
sbb
es
enter
and
mov
push
pop
outs
inc
jge
mov
adc
dec
xchg
push
add
(bad)
mov
das
mov
loop
cwde
data16
dec
sub
jmp
nop
pop
sub
popf
clc
fld
xlat
mov
jmp
mov
push
and
std
cdq
xchg
pop
pusha
leave
xchg
adc
push
pop
pop
je
into
mov
mov
cmp
fistp
mov
sbb
icebp
mov
leave
(bad)
and
push
cmp
mov
inc
pop
or
add
pop
cmc
or
mov
sbb
call
push
inc
in
jle
push
jns
cmc
ret
nop
rol
mov
dec
pushf
aaa
loop
pushf
into
icebp
xor
mov
int3
cmps
out
gs
repnz
sbb
jecxz
stos
(bad)
push
add
in
push
leave
into
sbb
pop
push
mov
add
sub
mov
jno
ins
sbb
xchg
cmp
jmp
push
lock
mov
xor
das
dec
je
cmp
pop
imul
push
pop
xchg
xor
sbb
test
pop
add
ins
dec
add
inc
dec
dec
ss
push
dec
pop
sbb
push
add
movs
jle
test
sahf
or
cmp
repnz
sub
cdq
movs
or
mov
mov
call
sub
mov
in
icebp
rcr
mov
adc
mov
sbb
data16
xlat
mov
push
mov
mov
sub
cmp
clc
pusha
xchg
push
inc
inc
mov
test
push
ret
cs
cdq
out
and
repnz
lods
ret
mov
aaa
or
scas
and
pop
dec
sbb
push
retf
adc
les
into
jne
nop
repnz
mov
repnz
fist
mov
lock
add
shl
rcl
out
pop
imul
loopne
out
pushf
call
shl
clc
xor
sbb
mov
fwait
push
sub
loope
adc
pushf
push
dec
sbb
int
dec
out
xor
out
dec
pop
jmp
fwait
pop
and
mov
sbb
and
popf
fild
adc
xchg
popf
mov
push
mov
lock
scas
xor
inc
inc
and
mov
xchg
sti
xchg
dec
push
fsub
xor
xchg
xlat
sbb
push
xchg
sbb
mov
xchg
mov
add
sub
pop
lea
jo
adc
mov
pop
pop
arpl
sub
xlat
ret
lods
es
dec
pop
dec
adc
xchg
jp
sbb
inc
stc
add
dec
pop
cmp
mov
sub
jne
lock
jmp
je
aam
pop
xor
and
call
shl
cmc
add
popf
cmp
shl
sub
xor
fdivr
and
sub
popf
in
or
and
inc
mov
cwde
stos
enter
int
or
stc
mov
pushf
xor
stos
popf
into
repz
mov
xor
ret
pop
out
cmps
(bad)
mul
repz
mov
inc
jb
jecxz
sbb
int3
cld
adc
xor
mov
xchg
scas
pushf
scas
imul
and
pop
mov
daa
inc
or
mov
cmp
out
and
add
das
outs
sbb
pushf
leave
addr16
pop
adc
pop
sub
popf
adc
cdq
cmps
jae
frstor
push
(bad)
fisub
scas
cli
inc
ins
popf
pop
add
sub
pop
push
iret
in
sub
sti
imul
fucomi
int
fnstenv
pop
std
call
dec
hlt
mov
inc
xor
mov
test
fimul
inc
inc
xchg
add
data16
mov
pop
mov
aad
xchg
dec
hlt
in
dec
sbb
test
ss
add
out
je
inc
movs
fstp
sub
mov
icebp
mov
out
movs
fcmovnb
pop
xor
or
outs
retf
out
push
outs
scas
jns
add
jp
adc
icebp
int
or
imul
stc
adc
add
mov
sub
sub
fst
movs
repnz
in
std
scas
cli
aas
(bad)
cli
jecxz
scas
mov
pop
cwde
sbb
daa
add
repnz
and
inc
ror
jp
sar
aam
(bad)
leave
push
and
sub
(bad)
or
xchg
adc
mov
lds
sbb
sbb
dec
out
mov
mov
jns
push
ins
jmp
test
in
inc
inc
mov
xor
(bad)
adc
adc
je
xchg
cmp
in
jne
outs
fstp
fidivr
pusha
in
fadd
lea
int
cmp
(bad)
xchg
dec
xor
or
test
push
shr
gs
jp
mov
cmc
mov
mov
scas
xchg
ss
mov
adc
fwait
xor
push
jg
ins
adc
inc
bound
cmps
dec
movs
sub
sub
mov
cmp
inc
pusha
pop
dec
js
movs
mov
xchg
sti
movs
add
icebp
fwait
pop
jbe
das
dec
xchg
pop
push
movs
pushf
xchg
es
call
pop
cmp
pushf
idiv
retf
add
adc
call
lock
adc
or
fwait
cmp
stc
mov
stos
push
scas
iret
orps
inc
jnp
cmp
(bad)
arpl
push
mov
xlat
mov
(bad)
cs
add
jo
pop
jne
(bad)
cmc
push
repnz
cmp
mov
int3
out
xchg
daa
(bad)
pop
or
and
(bad)
mov
jge
cmc
shr
(bad)
mov
mov
or
adc
push
sbb
cld
pop
fldpi
mov
xor
arpl
sub
pop
push
and
int
sbb
adc
cmp
out
cmp
pop
push
push
sbb
pop
xchg
loope
sbb
jg
adc
stos
hlt
cmp
das
int3
(bad)
ins
sub
cmps
sbb
xchg
adc
cmp
(bad)
jnp
ficom
pop
iret
mov
cmp
add
mov
inc
mov
fs
jmp
jnp
inc
pop
dec
in
xchg
or
sbb
or
jge
push
mov
push
fistp
mov
fsub
pop
imul
(bad)
adc
sub
fild
push
(bad)
les
adc
push
pop
div
xor
test
xchg
(bad)
movs
or
retf
out
sub
ss
lds
imul
sahf
ror
fwait
mov
imul
jns
fwait
pop
out
cmp
inc
mov
add
jnp
xchg
adc
icebp
push
mov
dec
cmps
idiv
(bad)
or
cmps
and
inc
inc
dec
xor
xchg
push
ins
xchg
fcomip
test
aas
lahf
sahf
lods
sub
test
or
cmp
sub
bnd
or
xor
sub
(bad)
loope
dec
stos
movs
push
jmp
xor
mov
inc
xor
adc
xchg
mov
inc
lods
and
sub
jl
(bad)
mov
rcr
mov
ss
adc
(bad)
icebp
inc
pop
popf
add
(bad)
mov
dec
jae
stos
(bad)
popf
std
loop
jg
xor
add
shl
jbe
dec
cld
inc
inc
pop
js
adc
(bad)
adc
jne
dec
adc
xor
rol
shr
fsub
adc
inc
int3
loopne
inc
arpl
and
mov
xchg
dec
pop
and
inc
(bad)
pop
scas
outs
(bad)
mov
pop
add
inc
pop
adc
das
and
test
sub
pop
into
mov
pushf
in
or
hlt
inc
ins
imul
cli
inc
xor
stos
pop
rol
adc
xchg
ror
add
mov
mov
outs
ins
test
enter
rcl
add
lds
xchg
push
jg
mov
pusha
jge
mov
pop
loope
dec
aaa
mov
pop
ret
xor
or
iret
pusha
dec
outs
jmp
and
push
frstor
inc
js
cmp
and
in
cmc
aam
ficom
xor
and
es
jmp
push
push
call
pop
xor
jge
ss
mov
push
repz
jns
daa
outs
xor
stos
jmp
xchg
int3
mov
jne
imul
js
lahf
xchg
mov
jo
ss
adc
mov
scas
test
cdq
sub
add
lahf
push
jecxz
mov
in
fst
inc
jae
dec
mov
(bad)
or
movs
or
cmps
mov
mov
mov
jmp
pop
or
lods
mov
(bad)
call
(bad)
div
lods
inc
icebp
adc
inc
call
mov
repz
and
sub
sbb
dec
pop
add
ss
adc
popa
fistp
jo
jne
pushf
ficomp
xor
dec
(bad)
in
xor
jl
mov
cld
push
jae
outs
sahf
dec
ret
xor
push
scas
pop
loope
dec
xor
sbb
sub
push
or
mov
scas
cdq
mov
(bad)
ja
or
ja
call
mov
loope
fiadd
pop
jl
or
cmp
add
adc
xchg
xchg
fidivr
push
push
add
lea
cmp
in
aas
ja
jb
adc
xlat
(bad)
mov
daa
fmul
call
(bad)
mov
or
stos
in
lock
jle
pop
xor
add
sbb
xchg
xor
cmp
mov
dec
rcl
adc
fnstenv
pop
mov
bound
fdiv
jne
mov
push
adc
xchg
and
mov
into
rcl
je
adc
int3
jbe
mov
out
sbb
cmps
jns
call
lea
(bad)
fs
sahf
(bad)
call
push
(bad)
inc
add
call
aaa
inc
shr
cmp
and
push
pop
dec
pusha
or
rep
push
dec
xchg
fisubr
dec
icebp
push
jge
mov
mov
mov
lock
clc
cmp
int3
lock
in
mov
ret
in
xor
mov
push
popf
cmps
dec
sbb
int
xchg
addr16
lahf
dec
adc
icebp
dec
mov
xchg
in
(bad)
pop
mov
les
aam
jnp
inc
test
and
pop
bound
adc
xchg
and
jno
scas
adc
mov
mov
std
pop
mov
fdiv
mov
stos
xchg
mov
dec
lds
push
lea
std
xchg
adc
fnstsw
xchg
cli
push
loope
add
mov
dec
jae
add
mov
jne
cmp
(bad)
jmp
cdq
push
jg
push
mov
pop
aas
push
mov
dec
js
adc
or
add
jmp
fwait
mov
fisttp
pop
pop
pop
scas
jl
dec
test
scas
xor
add
lods
jp
mov
rcl
aam
adc
in
dec
jmp
loop
inc
outs
mov
rcr
stc
call
xor
xchg
call
daa
sub
loop
mov
inc
and
test
cmp
cmp
cmp
or
iret
mov
retf
fild
stos
lods
sbb
pop
adc
test
add
(bad)
push
stos
sti
hlt
frstor
pop
arpl
push
mov
repnz
sbb
std
push
ins
std
mov
das
jmp
mov
out
xor
jb
mov
mov
jg
std
fldcw
jo
or
stos
into
lock
xchg
aad
test
movs
lods
or
aas
out
mov
aas
out
lock
add
fadd
inc
je
inc
ds
lods
dec
inc
adc
adc
cwde
jmp
pusha
sbb
jns
mov
js
push
sbb
imul
dec
dec
movs
pop
jl
pop
pop
pop
out
sahf
leavew
movs
push
in
dec
or
cmp
mov
jmp
add
xor
cmp
mov
push
jmp
pop
jmp
push
loope
inc
adc
in
xor
push
adc
scas
mov
or
stc
das
lods
jle
pop
ins
cmc
dec
xchg
add
or
push
aam
stos
fdiv
jmp
cmp
pushf
pop
out
(bad)
xor
sti
ins
in
cld
iret
mov
and
jecxz
sub
test
mov
jge
ins
es
call
ins
dec
test
and
daa
lea
mov
mov
clc
call
call
loopne
(bad)
out
jo
dec
push
shr
aad
mov
or
jnp
ror
popf
into
es
ja
lea
cmc
cli
sbb
outs
mov
mov
dec
dec
inc
or
push
xor
iret
lods
push
iret
dec
adc
xchg
fld
mov
lods
fld
jp
retf
imul
imul
jmp
pop
dec
push
out
ins
(bad)
int
stos
mov
test
mov
xchg
cmc
int
ins
push
adc
push
adc
push
imul
lea
mov
fisubr
mov
xchg
fild
les
push
test
mov
sub
in
add
xlat
mov
icebp
add
sahf
int
test
sub
jge
adc
std
add
test
int
nop
out
sbb
jmp
js
fistp
scas
dec
lods
in
inc
push
(bad)
jmp
out
ins
jmp
jno
fnstsw
loop
inc
mov
fisub
repnz
push
movs
stc
or
jb
lahf
retf
inc
or
push
mov
xchg
mov
aam
lea
cmps
push
pop
mov
mov
cmp
jae
in
lods
mov
add
movs
fidivr
jnp
gs
imul
mov
and
out
es
xchg
vandps
push
imul
into
add
inc
cmps
pusha
repnz
push
daa
aad
jno
pop
push
cmp
xor
xchg
dec
in
mov
jmp
arpl
cmp
stc
loopne
out
pusha
cmp
inc
sbb
xchg
push
sub
sti
shl
cmp
add
call
mov
or
dec
sti
mov
push
push
mov
dec
cmps
movs
push
mov
pop
fadd
jg
mov
into
stos
inc
pop
fdivr
pop
lahf
fs
cmp
cmp
push
leave
adc
and
mov
and
xor
inc
pop
xchg
outs
dec
stos
mov
mov
cli
mov
add
mov
daa
push
test
add
add
dec
add
adc
pop
add
ret
lahf
cmp
int
out
mov
mov
les
mov
mov
clc
dec
mov
(bad)
adc
addr16
sub
(bad)
fist
sub
jbe
ror
jg
or
clc
in
std
pop
push
test
jp
xor
popf
cmp
int3
jl
xlat
fisubr
xor
push
push
cli
mov
pop
push
push
mov
cld
lods
jl
mov
or
mov
jecxz
call
test
pop
es
xor
xor
daa
sub
xor
mov
mov
leave
cmp
int3
popa
cmp
xchg
jbe
xchg
mov
and
cmps
fs
pop
addr16
cmc
dec
mov
xchg
gs
pop
push
jne
pop
(bad)
fs
jns
dec
in
daa
jno
ror
fimul
shl
jbe
popa
dec
out
mov
cmps
push
sti
adc
push
or
push
cmc
lock
xchg
jmp
inc
xchg
xlat
aam
jae
pop
xor
add
dec
and
jns
dec
jle
ins
jl
sub
inc
test
jp
arpl
aad
leave
adc
cmps
fsub
pop
enter
clc
or
aad
pop
cmps
imul
inc
or
and
(bad)
fnstcw
cmps
aam
leave
data16
cmp
in
sub
sub
mov
arpl
lods
test
sub
xchg
jnp
shl
outs
scas
pushf
pop
or
retw
inc
push
shl
std
xchg
cmp
cmp
outs
push
push
jne
or
and
push
(bad)
jns
(bad)
pop
(bad)
ss
shr
add
test
mov
fwait
arpl
mov
mov
jns
inc
mov
pop
rol
lds
int3
popa
mov
pop
in
jg
inc
aam
icebp
scas
pusha
xchg
push
mov
or
cmp
dec
pop
call
dec
dec
mov
movs
dec
and
iret
dec
mov
cdq
mov
std
mov
jmp
daa
test
jo
inc
aaa
test
mov
push
jmp
lahf
int
pop
sbb
sahf
inc
pop
pop
call
sbb
ins
pop
xchg
pushf
jle
xor
enter
inc
test
cmc
es
dec
(bad)
and
mov
jg
das
xor
push
xor
mov
sub
call
int
xchg
jmp
or
dec
loope
call
loopne
ror
adc
std
mov
fistp
retf
dec
out
(bad)
rol
leave
lods
xor
ficom
add
(bad)
clc
push
jecxz
sbb
xchg
cwde
adc
and
fnstenv
jge
sbb
xlat
stos
jmp
out
packsswb
hlt
cmp
push
(bad)
cmc
into
dec
repz
inc
arpl
aas
and
cmc
int
pushf
jmp
cmp
ins
jecxz
lods
push
inc
or
mov
icebp
cs
test
stos
out
jge
mov
mov
jb
cmp
sar
pusha
inc
cdq
(bad)
les
(bad)
pushf
nop
pop
sub
gs
jae
fsubrp
test
xchg
test
xchg
inc
fild
cld
(bad)
adc
cmp
out
daa
or
cmp
pop
mov
fisttp
push
mov
xor
ffree
ja
mov
sub
inc
xor
push
icebp
in
inc
iret
shr
sar
mov
xchg
movs
aaa
pop
dec
push
call
rcr
jb
adc
(bad)
adc
sub
add
fwait
xchg
pushf
pop
aas
sar
aam
xchg
and
test
in
fst
out
push
mov
push
add
stos
leave
dec
in
data16
dec
fs
jnp
cmp
xchg
cmp
mov
and
push
dec
mov
fild
mov
cli
fimul
repnz
push
jae
pop
je
lds
xor
inc
aad
outs
add
outs
popa
mov
shr
data16
cmp
outs
into
cld
jmp
xchg
lods
inc
icebp
aad
inc
sbb
icebp
jle
xchg
ja
lock
and
dec
cmp
mov
(bad)
mov
sti
or
shl
shl
(bad)
cld
push
jns
repnz
xor
cmp
lea
dec
add
cmp
movs
retf
movs
dec
dec
data16
add
(bad)
push
sbb
scas
cld
adc
add
iret
call
daa
mov
int3
aas
xor
push
mov
in
aad
inc
mov
test
shl
fnstenv
scas
out
mov
loop
bound
js
push
jae
leave
pushf
retf
mov
lahf
mov
div
sub
add
into
pop
pusha
stc
cmps
mov
jge
icebp
adc
pop
das
mov
mov
pop
das
or
(bad)
xor
jmp
int3
mov
cmp
xchg
jo
add
jle
(bad)
inc
lods
jno
xor
mov
test
cwde
cmc
ja
push
inc
out
xor
adc
scas
sbb
(bad)
(bad)
fst
mov
mov
shl
jmp
(bad)
push
dec
data16
mov
xchg
(bad)
aaa
sbb
retf
pop
pop
jmp
cmp
inc
fild
aas
int
push
xchg
mov
xor
push
ds
fstp
mov
cmp
pop
out
ret
lock
out
fs
dec
push
jnp
ret
je
mov
lahf
sbb
and
je
sub
test
pop
push
fisub
fild
retf
in
(bad)
adc
(bad)
cmp
arpl
hlt
int3
imul
pop
push
inc
aas
xlat
div
imul
mov
nop
add
sti
stos
push
jno
push
pop
call
and
in
fnstsw
sbb
adc
sbb
xlat
(bad)
(bad)
xchg
call
mov
jecxz
in
inc
xor
adc
pop
mov
xchg
xchg
sbb
sbb
cmp
jne
call
and
lahf
test
movs
adc
sub
lods
call
mov
pop
retf
or
pop
cmp
push
mov
dec
es
sub
sbb
dec
fs
jge
or
mov
ss
addr16
xor
out
jae
push
lock
inc
jne
repnz
pop
and
test
cmp
and
adc
mov
dec
sar
pop
les
ja
data16
jo
xchg
ins
or
out
xchg
dec
jo
cmp
mov
xor
test
mov
sub
lea
(bad)
je
mov
popa
popa
repz
les
outs
and
cmp
or
sub
jno
cdq
sub
jno
pop
push
outs
mov
retf
cmc
add
lahf
push
adc
scas
ja
scas
jmp
icebp
push
cmp
ficom
shr
test
adc
(bad)
or
pop
jbe
hlt
inc
ss
xor
jb
std
xchg
test
cmp
inc
repz
jmp
sub
fs
and
aaa
sub
mov
push
pop
xchg
jmp
mov
sub
mov
mov
std
hlt
xchg
push
je
add
ja
adc
add
(bad)
xchg
icebp
popf
nop
lock
aaa
imul
outs
cld
mov
imul
push
dec
stos
inc
fisub
sub
or
jl
dec
lods
repz
(bad)
cwde
pop
jmp
xchg
jl
cmc
mov
sub
inc
cmp
adc
sub
add
movs
sbb
mov
xchg
loop
retf
mov
aad
jge
aad
mov
inc
xchg
out
mov
push
mov
loopne
ror
xchg
push
(bad)
icebp
push
shr
dec
movs
add
add
cmc
data16
xchg
add
inc
and
jecxz
pop
movd
jg
sub
mov
out
jmp
adc
mov
lds
movs
pop
mov
out
cmps
cmp
(bad)
sub
push
pop
fistp
cld
mov
fiadd
push
fs
mov
jmp
ret
inc
dec
mov
cmp
ins
mov
js
dec
mov
outs
mov
mov
mov
pop
aad
shl
cmp
cld
sahf
popf
push
mov
sbb
sub
nop
mov
fs
les
inc
jo
hlt
stos
imul
loop
call
xor
movs
sbb
clc
and
inc
int3
js
packsswb
test
ja
sbb
push
dec
into
inc
hlt
bound
retf
outs
jle
icebp
arpl
(bad)
scas
outs
in
xor
test
repz
fs
jnp
rol
(bad)
mov
mov
movs
bound
sahf
jge
hlt
add
jmp
or
sbb
icebp
push
ret
lds
hlt
or
mov
add
xor
jns
fs
mov
push
add
retf
inc
cli
das
in
scas
outs
call
ret
sbb
or
repnz
push
mov
scas
jp
idiv
sbb
std
js
imul
cmove
and
(bad)
pop
call
in
add
inc
mov
int3
iret
mov
fld
inc
jecxz
movs
xchg
mov
mov
cmp
imul
jmp
mov
stos
loop
fstp
mov
ret
add
(bad)
int
xlat
mov
(bad)
dec
ja
fbld
stos
mov
stc
mov
aam
fisttp
sub
pop
ret
(bad)
fisttp
or
pop
dec
jg
mov
push
test
dec
xor
sbb
mov
sbb
fwait
sub
jbe
mov
mov
push
sub
in
cmp
int
inc
mov
jecxz
imul
in
cmc
xchg
xor
fwait
mov
mov
out
rcr
int3
lods
rcr
cmc
ds
and
xor
mov
ja
jne
xor
push
push
clc
dec
out
xor
mov
inc
lds
xor
sub
dec
in
ret
scas
xlat
pop
add
mov
ficomp
outs
pusha
popa
dec
mov
stc
pop
mov
ret
sti
adc
loopne
inc
and
out
gs
pop
call
push
cmp
xchg
dec
gs
test
adc
dec
and
adc
lahf
pop
add
(bad)
xchg
(bad)
rol
push
inc
or
fcmovnu
(bad)
aad
lock
xor
mov
ret
mov
sub
int3
mov
jl
icebp
mov
inc
addr16
inc
mov
lods
add
inc
cmp
clc
xor
(bad)
test
dec
aas
adc
and
nop
and
push
xor
test
add
rcr
leave
pop
xor
mov
push
mov
xor
cmp
xor
pop
(bad)
fcomi
xchg
imul
adc
imul
pop
push
mov
xor
and
arpl
mov
xchg
out
js
add
cmps
rcl
inc
sahf
cmps
mov
push
pop
adc
aad
jl
inc
aas
ds
dec
(bad)
movs
fsubr
push
aam
repz
cwde
cmp
in
jmp
ds
pop
call
push
imul
mov
mov
(bad)
push
cmps
or
xor
add
jb
cld
and
shl
jnp
test
(bad)
arpl
dec
and
jl
aaa
stc
ret
jbe
movs
les
ficom
jmp
and
inc
jp
ret
das
mov
clc
js
rcl
adc
je
mov
inc
adc
movs
push
pop
adc
push
push
test
ss
xlat
xor
pop
push
scas
mov
sbb
sub
xor
out
sbb
pop
xchg
cs
and
addr16
ja
(bad)
fstp
pop
and
or
mov
sub
je
add
mov
sub
(bad)
jle
fidivr
fimul
repz
cmp
mov
out
cmp
fimul
gs
jmp
and
mov
btr
and
test
rcl
or
pop
dec
xor
retf
pop
or
stc
fisttp
cmp
rcr
shr
std
jmp
sub
loop
inc
rol
and
jecxz
jae
push
mov
xchg
jns
xor
and
push
fisttp
arpl
sub
rol
lods
(bad)
jno
movs
inc
jno
jbe
inc
cdq
cmp
dec
push
inc
loop
jno
sbb
fs
cmp
sbb
push
jnp
dec
fld
hlt
(bad)
or
dec
lods
push
mov
in
cli
jns
and
mov
cmp
stos
in
ret
out
test
cmp
ins
in
leave
xchg
jae
icebp
or
call
sub
pop
ss
pop
mov
in
ins
jo
shr
test
sbb
or
fsub
push
out
pushf
jle
ror
and
sbb
aad
dec
fcomp
outs
lahf
jbe
mov
pop
scas
xchg
in
push
and
test
and
cli
pop
xor
push
js
test
fisttp
aad
dec
or
cmp
scas
pop
mov
inc
or
pushf
loopne
jg
xchg
pop
imul
sub
push
arpl
imul
push
(bad)
retf
cld
iret
cmp
xchg
pop
icebp
ss
sahf
shr
fmul
inc
xor
je
push
aad
jbe
aad
mov
pop
outs
xchg
fmul
sti
outs
lods
jb
mov
imul
lods
scas
loope
pusha
mov
loop
sub
pop
arpl
jmp
push
bound
test
lock
enter
ds
pop
mov
pop
sbb
sbb
(bad)
sbb
iret
daa
inc
sub
and
pop
out
or
adc
idiv
mov
data16
adc
mov
xor
cmp
dec
cmp
xchg
cwde
dec
jl
sbb
push
(bad)
push
(bad)
call
add
adc
and
nop
sub
lods
inc
shl
js
inc
(bad)
and
mov
inc
test
shl
sub
pop
pop
jmp
mov
sbb
nop
jmp
cmp
in
sti
stos
inc
mov
and
out
fdivr
push
mov
arpl
scas
movs
cs
mov
cmps
cmp
call
jg
cs
cld
sub
popf
mov
and
push
nop
sub
aad
stos
call
sub
shl
cmc
sar
fucomp
mov
jmp
mov
sub
mov
add
sahf
test
fisubr
out
fisub
dec
mov
(bad)
stc
repnz
lock
ret
xchg
add
add
sbb
or
adc
lea
ret
jo
mul
xchg
je
aas
es
inc
cmp
mov
mov
jbe
lea
adc
mov
fisubr
dec
push
jmp
sahf
and
movs
inc
sub
das
inc
xor
jge
inc
mov
stc
repz
icebp
cmc
ins
mov
outs
in
mov
in
xchg
mov
ret
pop
dec
enter
aad
mov
mov
or
adc
sahf
xor
pop
or
push
loop
lods
cmps
add
cmp
or
lahf
ja
mov
arpl
jae
xchg
mov
and
mov
mov
push
scas
mov
xor
div
dec
jp
mov
sub
sbb
adc
jle
cli
xlat
inc
dec
rcl
cmp
jmp
fstp
push
daa
in
mov
movs
push
leave
shr
mov
inc
rcr
scas
cmp
outs
lds
and
fldln2
mov
int
mov
ja
sbb
cmp
icebp
cmp
cmp
mov
int
or
cmps
pusha
je
pop
and
shr
dec
in
(bad)
fld
sbb
pop
adc
out
imul
inc
xor
sar
xor
aas
jp
fistp
movs
jp
push
retf
stc
pop
imul
adc
out
jg
mov
ficom
mov
push
sub
movs
test
push
cli
js
aaa
pop
mov
jp
fisubr
lods
sbb
jae
jns
sbb
repz
in
pusha
addr16
cmp
outs
cmp
cmps
xchg
mov
xor
into
out
popa
rcl
loop
(bad)
mov
scas
jno
mov
scas
(bad)
push
add
xor
xor
in
fild
xor
shr
dec
loop
dec
popf
xor
and
jnp
sar
pusha
pop
lock
jae
mov
mov
sub
dec
dec
inc
mov
sahf
scas
jp
(bad)
sbb
jnp
pop
mov
sbb
sub
sub
dec
or
push
and
jge
sub
push
jns
test
(bad)
in
push
cmovp
jp
adc
aad
jmp
push
mov
fsubrp
ja
jnp
mov
inc
xor
xchg
hlt
mov
ins
pusha
mov
xor
cmp
movs
repnz
push
jmp
ins
outs
xchg
(bad)
cli
jp
aad
jnp
mov
fnstcw
(bad)
sbb
aaa
cmp
add
movs
cli
cmp
repz
ret
stos
ror
push
cmp
neg
xor
or
aas
push
(bad)
jmp
popa
xlat
inc
sub
sbb
in
leave
imul
mov
ss
hlt
and
fnsave
jge
push
adc
retf
inc
cmp
(bad)
push
inc
jbe
cs
or
sbb
aam
js
jmp
jmp
xlat
xchg
imul
fdivr
scas
arpl
dec
pop
mov
dec
repz
rcl
sbb
addr16
pop
inc
mov
jle
dec
mov
mov
mov
jecxz
(bad)
mov
inc
mov
repz
cmps
inc
stos
scas
mov
lods
int
adc
popa
adc
and
adc
popa
xchg
adc
sbb
mov
retf
inc
std
add
stos
pop
inc
jns
loope
inc
dec
in
inc
add
mov
sbb
nop
test
jmp
jno
xchg
ins
mov
sbb
lods
(bad)
add
dec
aam
fbstp
ins
or
sub
ja
xor
leave
js
dec
inc
popf
push
les
gs
mov
cld
cs
mov
rcr
jl
mov
sbb
or
leave
xor
repz
test
and
loope
mov
jbe
sar
jmp
mov
out
rol
icebp
bound
ds
(bad)
dec
test
mov
push
jno
push
sar
adc
xlat
push
xchg
push
pop
arpl
xchg
xor
adc
sub
sub
cmps
and
jmp
mov
xor
(bad)
pop
dec
add
add
in
and
add
inc
popf
sbb
call
mov
or
pushf
aas
mov
sub
cdq
(bad)
cmp
mov
(bad)
jnp
test
int3
cmps
call
and
push
test
cmp
mov
fdiv
sbb
fwait
cmc
xchg
les
arpl
cmp
sub
mov
mov
out
arpl
ret
outs
add
cmp
daa
and
hlt
inc
fst
iret
xor
faddp
dec
sti
xchg
mov
iret
jbe
cmps
into
jl
xchg
(bad)
int
jns
jmp
push
jnp
inc
cmp
inc
or
rcr
rcr
fstp
xor
and
pop
cdq
repnz
jg
mov
push
adc
call
bound
aam
cmp
dec
adc
int3
mov
adc
mov
and
pop
jae
gs
rol
jns
(bad)
mov
imul
fldenv
stos
pop
inc
das
popa
(bad)
pusha
push
aas
sub
cmps
stos
mov
xchg
fiadd
mov
mov
pushf
inc
push
mov
push
or
stc
and
jge
cmp
pusha
jecxz
sahf
and
or
adc
sbb
dec
pop
cdq
cmp
pop
xor
jmp
or
scas
sub
cld
add
cmp
xchg
mov
rcr
push
jecxz
fidiv
and
or
rol
mov
les
jp
jmpw
hlt
stos
jnp
fidivr
loope
push
fdivr
movs
cld
in
movs
dec
pop
hlt
mov
adc
cmc
mov
push
dec
push
add
cmp
add
jns
fcmovnb
xlat
je
test
mov
stc
test
pop
test
out
sbb
fld
pop
aaa
and
arpl
xor
or
dec
out
in
pop
shr
push
or
lds
arpl
jp
xchg
repnz
ins
repnz
pop
lods
jmp
and
popf
fldl2t
mov
cld
inc
pop
cmp
jmp
enter
xor
pop
call
jno
inc
inc
adc
ja
mov
in
xchg
outs
std
jmp
fnstsw
fidivr
mov
mov
jp
in
stc
inc
xor
jmp
lds
imul
xchg
jp
ret
std
or
jno
pop
jp
fidivr
or
mov
je
jle
addr16
enter
fld
fisttp
xchg
leave
add
test
cmp
in
repnz
sub
add
pusha
aam
sar
lock
push
adc
mov
add
fbld
movs
jg
adc
ret
(bad)
sbb
xchg
jb
retf
test
and
xchg
mov
cmc
jl
mov
les
bound
adc
mov
push
std
xor
loope
mov
and
jno
push
jg
adc
lods
sbb
mov
push
push
test
mov
mov
and
(bad)
mov
sub
jp
inc
and
jne
pop
inc
inc
cmps
mov
ds
ret
fild
push
pop
jbe
jg
and
mov
adc
rcl
push
lods
add
dec
xchg
add
xorps
mov
add
fs
mov
sti
scas
adc
xor
aas
and
fwait
mov
jmp
and
pop
push
std
and
dec
jbe
jmp
mov
jp
cwde
sub
adc
in
jb
dec
xchg
mov
outs
outs
jae
inc
inc
cdq
scas
data16
inc
loopne
fstp
mov
ins
mov
mov
cmp
add
push
push
in
pop
add
inc
test
add
mov
mov
shr
xchg
adc
retf
push
add
es
daa
or
ds
repnz
xchg
pop
bound
xchg
fwait
outs
lods
shrd
pop
mov
add
jmp
outs
jle
scas
clc
mov
shr
add
(bad)
retf
jg
lods
pop
les
jl
pop
imul
and
push
rol
movs
lahf
mov
das
fcmovbe
or
rol
pop
cmp
push
je
adc
enter
aam
mov
jmp
mov
mov
push
jp
mov
adc
push
out
(bad)
(bad)
fs
mov
push
xor
xchg
stc
fidivr
test
mov
fsubr
lahf
inc
repz
movs
and
fbstp
fimul
add
ja
jbe
cmp
test
lea
(bad)
jmp
mov
(bad)
and
(bad)
(bad)
push
in
sbb
aaa
jmp
neg
ret
sub
jecxz
retf
sti
mov
xor
gs
inc
mov
mov
cmps
ja
(bad)
adc
jmp
inc
jmp
aas
adc
iret
rcl
mov
sbb
neg
xchg
(bad)
shl
mov
sbb
jno
dec
movs
cmp
rol
ins
cmp
cmp
enter
pusha
les
inc
test
mov
js
xlat
ja
ret
fstp
mov
pushw
bound
idiv
sbb
ds
repnz
push
add
dec
mov
push
jne
das
idiv
push
push
pusha
movs
not
cmps
cmp
aam
arpl
and
aam
xor
mov
(bad)
loopne
cmp
ret
ret
in
cmp
xchg
xor
ror
cmp
sub
mov
mov
(bad)
(bad)
mov
pop
out
push
mov
movs
je
icebp
imul
cmp
stos
test
xchg
inc
fnstcw
xchg
(bad)
fstenv
ret
fimul
push
and
inc
leave
mov
movs
jecxz
mov
adc
jmp
adc
cmp
fbld
mov
ds
inc
inc
fdiv
jg
aam
arpl
les
mov
out
dec
cmp
mov
sar
pop
or
out
mov
jbe
sbb
push
and
push
push
je
xchg
xlat
lods
je
clc
and
mov
mov
stos
(bad)
mov
into
repz
call
ret
test
outs
mov
jo
in
test
mov
sahf
add
pushf
push
sbb
lods
mov
mov
pop
lea
in
les
mov
or
xor
pop
in
pop
std
and
adc
lock
jp
mov
sbb
cmp
stos
movs
repz
stos
dec
test
rcl
push
pop
push
lods
les
dec
ins
ins
cdq
retf
mov
rcl
xchg
ss
aad
ss
loope
pop
pop
addr16
and
pop
pop
xor
xchg
inc
adc
nop
shl
dec
xor
push
push
call
pop
aad
inc
shr
adc
jmp
jno
sub
ret
in
cmp
dec
dec
xchg
dec
imul
jge
loop
test
fsubr
sti
pop
cli
test
xor
(bad)
retf
xchg
rol
jnp
cmc
les
loopne
inc
dec
popf
daa
xor
mov
pop
jle
push
mov
push
xchg
into
mov
pop
lods
xor
add
out
push
je
test
sbb
push
loope
push
adc
and
mov
sbb
cmp
cmp
xor
sti
xchg
stos
xlat
(bad)
adc
fdivr
mov
imul
repnz
popa
sub
push
stc
adc
popf
stos
pop
inc
pop
inc
mov
jmp
in
les
fsubr
fcom
outs
retf
icebp
push
mov
leave
mov
push
iret
mov
and
jmp
xchg
xor
jb
(bad)
imul
add
mov
dec
and
xlat
sbb
adc
data16
test
push
call
mov
movs
xor
jle
sub
inc
out
movhps
ins
or
jne
and
pop
dec
ret
push
fld
std
pop
popf
out
sub
rol
mov
lahf
inc
push
cmp
lahf
jbe
pop
in
mov
add
popa
mov
cmp
jns
jnp
and
cmp
sub
lods
sbb
sub
mov
jge
dec
mov
and
cmps
sub
pusha
and
repnz
movs
or
mov
inc
push
xlat
push
push
cmc
pop
das
cmps
jl
lock
dec
sub
ret
movs
jns
out
sub
push
(bad)
mul
mov
std
neg
pop
mov
ret
inc
dec
(bad)
and
mov
stc
scas
les
rcr
mov
sub
or
mov
ret
(bad)
(bad)
and
and
aad
lods
xor
pop
and
cld
(bad)
xchg
xchg
and
(bad)
adc
(bad)
mov
or
push
daa
das
das
aaa
push
movs
ds
or
mov
js
aaa
fpatan
or
imul
in
aas
cld
arpl
jp
inc
inc
clc
sti
imul
data16
cmp
stc
sahf
sbb
aaa
les
jnp
sub
test
jmp
dec
popa
adc
test
cdq
jne
mov
int3
mov
sbb
into
jmp
inc
xchg
dec
push
add
xor
xor
jmp
frstor
inc
(bad)
repnz
mov
push
mov
adc
inc
repnz
push
mov
div
cmp
scas
mov
mov
cmps
shl
xor
dec
mov
(bad)
(bad)
lock
in
or
dec
mov
xor
or
cmps
mov
ret
adc
ds
dec
ins
push
fs
cmp
rol
fs
(bad)
push
push
(bad)
cmps
cmp
leave
je
xor
nop
dec
in
push
inc
inc
ja
mov
or
jne
sbb
jge
pop
jbe
mov
jle
daa
lea
not
inc
out
sbb
fs
sbb
loopne
or
mov
inc
pop
lea
inc
mov
lock
or
loopne
xchg
mov
xchg
aam
push
mov
pop
sahf
mov
or
pop
int
add
mov
loop
ret
inc
mov
test
sub
xchg
jne
mov
cmp
in
push
daa
inc
adc
xchg
je
mov
dec
out
sbb
cld
lock
jl
push
push
pop
dec
xchg
dec
retf
pushf
shl
fcomi
adc
aad
sbb
cmp
sbb
ss
push
loop
jl
lock
sub
sbb
cli
addr16
in
(bad)
push
xchg
js
shl
inc
jo
(bad)
(bad)
in
add
mov
gs
mov
cmp
sub
ins
jns
push
jle
mov
xchg
push
inc
jnp
dec
xor
in
mov
aas
push
ins
int
call
shr
neg
mov
xchg
into
dec
sub
in
ins
sub
ja
gs
push
ds
cld
jns
pop
in
popf
pop
mov
and
jmp
(bad)
lds
retf
les
addr16
lods
bound
addr16
cmc
vfrczss
push
ins
mov
push
push
cwde
les
adc
mov
jge
jle
popa
mov
out
pop
push
mov
loop
adc
cmp
adc
mov
add
pop
and
sti
pushf
ret
mov
in
sbb
out
rcr
es
test
xchg
xlat
mov
jmp
test
daa
or
xor
xor
xchg
xor
push
xchg
sub
push
inc
add
jl
ins
xchg
mov
(bad)
sti
pop
cmp
shl
and
in
cdq
cld
cli
sbb
cmp
lods
sahf
pop
in
call
cmp
dec
xor
fbld
cwde
addr16
mov
mul
mov
dec
jecxz
pushf
fbstp
dec
mov
mov
push
sbb
movs
mov
div
je
pusha
xor
inc
ror
dec
jmp
xchg
sbb
pusha
test
sub
dec
mov
push
push
ret
pop
inc
inc
and
gs
lods
retf
pushf
ja
cld
mov
push
mov
dec
movs
jmp
push
jmp
jne
add
retf
xor
adc
cmc
sub
sti
dec
(bad)
lea
and
ficomp
and
(bad)
mov
xlat
jge
sub
sub
mov
and
pop
or
push
mov
or
or
and
in
xor
inc
out
mov
mov
dec
adc
cld
push
inc
mov
and
fmul
jbe
jle
cmp
clc
(bad)
daa
scas
jo
mov
daa
adc
movs
cmp
mov
(bad)
fnstsw
jno
int
xchg
jbe
sub
sbb
sub
cmp
pop
ins
mov
test
test
jo
jmp
push
sub
pop
jmp
arpl
xor
sbb
hlt
xchg
es
repz
shl
mov
imul
ss
inc
les
cmp
jne
sar
mov
sbb
mov
outs
dec
fild
cwde
lods
sbb
cmc
adc
lods
sbb
scas
or
sbb
es
hlt
popf
or
fstp
xor
(bad)
inc
movs
mov
lds
dec
stc
jg
inc
repz
jg
and
adc
mov
push
xchg
call
push
js
or
les
inc
push
mov
dec
aaa
stos
pushf
sub
jp
(bad)
xor
out
aam
aam
xor
push
aad
mov
test
out
push
(bad)
test
jmp
daa
mov
dec
push
out
sbb
jecxz
jbe
aad
push
add
lahf
dec
cmp
fistp
fadd
sbb
imul
enter
add
push
cmp
stc
push
mov
push
cld
fcomp
cmp
mov
ins
xchg
push
fidiv
lods
push
(bad)
jns
inc
and
xor
in
daa
pop
int3
or
js
add
dec
shl
add
pop
sbb
test
xchg
(bad)
cmp
ins
xchg
gs
stos
add
jbe
pusha
lods
add
jne
or
ins
mov
ror
test
ds
aad
sbb
xchg
mov
std
outs
out
jp
stos
ins
arpl
loopne
pop
push
mov
jg
sbb
sbb
rcl
or
ins
mov
repz
mov
out
pop
and
or
push
jo
pop
gs
ficomp
nop
xchg
mov
inc
gs
mov
inc
enter
cmp
sar
jmp
enter
(bad)
sub
jmp
xchg
mov
scas
push
push
ficomp
call
jno
cmp
outs
xlat
movs
xor
jbe
or
and
icebp
sub
retf
adc
sub
adc
mov
lods
add
xor
adc
jecxz
test
jmp
enter
stos
sbb
pop
jne
cs
add
jge
pop
stos
mov
mov
or
sbb
out
dec
mov
and
shl
mov
inc
pop
xor
loop
addr16
xchg
jb
std
aaa
dec
ss
jbe
push
pop
cdq
pop
test
inc
or
adc
mov
jo
cmps
call
(bad)
scas
push
in
inc
adc
enter
cmp
mov
push
rcr
inc
loopne
or
mov
aad
inc
inc
daa
ins
add
or
jg
xor
cs
rol
es
xchg
test
aad
popf
sbb
inc
in
jge
xchg
sar
in
fsub
cmp
pop
js
xor
icebp
call
jge
std
dec
push
jns
cli
call
bsf
mov
es
xor
sub
xchg
jmp
(bad)
icebp
into
inc
sti
cmps
cld
mov
cld
dec
jnp
or
add
nop
cmp
xor
mov
retf
add
mov
stc
(bad)
sub
mov
(bad)
mov
scas
sub
or
fwait
mov
pop
inc
je
rol
xor
lahf
inc
scas
pop
xchg
ds
pop
(bad)
repnz
add
inc
dec
mov
mov
mov
scas
jae
clc
out
pop
mov
inc
push
movs
and
sub
in
addr16
or
jo
xchg
jb
jnp
xchg
cli
ror
data16
cmp
jp
sbb
mov
push
inc
out
imul
sbb
mov
xor
lods
js
test
inc
and
dec
aam
ficomp
ss
mov
mul
xchg
mov
pop
cmp
dec
cmp
fwait
into
aad
fsubr
ds
lods
fild
xlat
std
sbb
outs
pop
fistp
dec
pop
not
(bad)
pop
sbb
stos
repz
(bad)
pop
cli
stos
fild
sub
(bad)
das
mov
or
idiv
dec
dec
nop
dec
(bad)
cmc
adc
jns
loop
and
sub
test
imul
or
xor
mov
mov
dec
or
jbe
sub
data16
icebp
jle
icebp
pop
add
out
xchg
adc
pop
sub
cmps
inc
aad
mov
pop
ret
int3
cdq
mov
in
call
sub
xchg
dec
xchg
xchg
aam
inc
rcr
dec
xchg
call
sbb
xor
jl
push
clc
shr
in
cwde
push
mov
cmp
inc
pop
or
or
std
xlat
add
je
pop
and
mov
xor
add
lods
int
xor
or
pusha
sub
ss
scas
jno
jl
jmp
pop
sbb
loop
fisubr
cdq
mov
sub
jno
in
les
rol
cli
cmps
cmp
(bad)
mov
shl
xchg
push
cmc
nop
test
test
xchg
add
dec
inc
enter
add
inc
sbb
pop
sub
shl
add
js
push
ror
(bad)
test
ins
in
jmp
loope
ror
lods
fld
and
mov
mov
arpl
jg
sub
xor
xchg
mov
cmc
icebp
jmp
push
cdq
sbb
in
int
ds
adc
mov
pop
jecxz
je
and
dec
movs
fwait
imul
jle
pushf
dec
fistp
sub
jo
test
pop
cmp
pop
(bad)
push
xor
stc
jae
and
sub
sub
test
mov
mov
or
push
add
into
cmp
push
es
dec
xor
or
xchg
jmp
stos
fsin
xchg
cmp
and
mov
pusha
push
daa
push
imul
sub
or
jl
shr
je
sbb
(bad)
int
and
sub
bound
adc
mov
jmp
mov
or
std
or
jmp
in
iret
into
(bad)
inc
inc
mov
sub
stos
adc
rcl
cmc
mov
cld
mov
mov
and
dec
mov
inc
pcmpgtw
(bad)
or
xchg
loop
xchg
pop
hlt
sbb
and
and
arpl
rol
xor
clc
shl
(bad)
into
call
icebp
mov
or
iret
in
leave
mov
fiadd
addr16
xchg
ror
enter
add
lods
push
push
lds
in
jp
aad
lds
inc
mov
add
pop
xchg
sub
pop
test
(bad)
adc
add
mov
and
xchg
sbb
xchg
jp
retf
fdivr
(bad)
pop
imul
dec
inc
movs
sar
pushf
(bad)
aas
call
in
jp
mov
dec
ror
popf
push
jno
mov
mov
outs
jmp
push
lock
pushf
and
arpl
jmp
aam
test
push
jp
adc
imul
push
jns
fld
cmc
cmp
push
sub
cmp
fdivr
xchg
popf
hlt
add
out
or
jmp
stos
sbb
imul
adc
cmovs
xchg
jl
pop
(bad)
dec
jle
or
adc
mov
cmp
adc
push
gs
xchg
jp
or
repnz
adc
jmp
retf
dec
mov
stc
xchg
adc
mov
dec
xchg
add
lods
outs
lods
aad
or
ret
out
faddp
xchg
scas
pop
xor
push
xor
leave
(bad)
std
aaa
dec
stos
mov
push
aam
dec
loopne
icebp
sti
lock
jo
aaa
mov
ss
mov
sub
pop
xor
adc
not
jmp
popa
sbb
out
popa
pop
adc
cmp
ret
bound
xchg
in
lds
hlt
add
lds
sbb
and
test
lahf
xor
mov
fcomp
push
mov
cmp
inc
adc
xchg
dec
test
movs
call
lahf
cld
(bad)
icebp
jne
adc
dec
mov
jo
cmp
jnp
jg
push
cmp
push
(bad)
mov
jne
push
and
cwde
push
mov
mov
out
mov
jp
inc
xor
push
call
out
lock
fild
xchg
mov
mov
and
push
jmp
jl
fwait
sbb
std
in
push
sbb
mov
in
loopne
iret
cld
cs
adc
sti
xor
jmp
jb
outs
dec
inc
div
neg
iret
push
mov
cmp
loopne
and
pop
test
shrd
push
test
scas
xor
or
adc
data16
mov
aaa
mov
or
mov
push
jg
add
xchg
shr
adc
hlt
or
jmp
in
adc
jnp
xchg
jo
in
out
ja
cmp
ins
xchg
ins
gs
outs
ret
jns
pop
xchg
pop
sbb
movs
cdq
nop
jg
xor
xor
push
stos
add
pop
push
in
shr
cld
repnz
mov
push
pop
call
or
mov
repz
sbb
pushf
pop
sbb
cmp
stos
test
test
adc
arpl
push
push
int3
jge
ret
push
lock
lods
mov
pop
loope
cmps
sub
mov
aaa
(bad)
rol
fisttp
lods
cdq
sub
dec
stos
icebp
sub
int
push
(bad)
int
and
mov
push
mov
push
push
test
mov
jp
(bad)
outs
outs
and
xor
gs
clc
jg
mov
or
das
inc
repnz
mov
inc
add
test
imul
sbb
jl
or
inc
sahf
cmp
mov
mov
in
aaa
movs
aam
test
push
sbb
mov
push
jb
add
pushf
and
add
add
mov
sbb
add
mov
push
and
out
dec
jns
or
xchg
fldenv
sbb
out
and
pushf
push
sar
push
aam
mov
inc
mov
xchg
arpl
stc
inc
call
xchg
out
div
or
dec
adc
cli
ins
pop
arpl
sbb
cmp
adc
inc
int
fist
xchg
mov
cwde
(bad)
dec
push
sbb
xchg
cs
pushf
mov
mov
cwde
sub
xchg
cwde
ins
data16
mov
dec
ss
scas
out
add
aad
sub
(bad)
mov
out
push
sti
lea
rcr
adc
mov
cmp
xor
pop
jbe
mov
int3
dec
fsub
mul
mov
jnp
xchg
push
inc
xchg
jae
ret
call
jmp
into
cmp
push
cli
xor
xchg
cmps
ins
and
(bad)
int
jmp
sbb
mov
cdq
lock
mov
test
loope
sahf
add
lods
scas
adc
int3
and
dec
pop
retf
mov
idiv
dec
add
pusha
sub
xchg
mov
out
fldcw
rol
dec
mov
retf
hlt
push
jg
jne
jmp
adc
push
push
fiadd
xor
cmp
nop
mov
iret
jp
dec
test
es
outs
push
jae
or
jae
cmp
jns
push
mov
imul
pop
repz
push
in
push
call
mov
inc
push
sub
pop
(bad)
fiadd
retf
movs
ja
inc
pop
cwde
movs
test
jb
inc
xchg
sar
pop
mov
mov
pushf
jb
repz
push
mov
test
outs
lds
cmp
call
cmp
stos
pop
pop
pop
mov
mov
inc
repnz
jle
imul
push
adc
fcomip
or
xchg
shl
xor
or
mov
mov
mov
xchg
daa
push
loop
sub
pop
repnz
cs
dec
arpl
cld
mov
in
loop
out
imul
or
(bad)
xor
cmps
cwde
gs
mov
xchg
add
bound
or
cmp
pop
jae
bound
popf
xchg
hlt
xchg
xchg
push
sub
xchg
jmp
xchg
ss
out
pop
cmp
aaa
or
pop
rcr
mov
mov
mov
push
ds
stc
mov
xlat
aas
cmp
mov
sub
push
movs
add
push
add
push
in
ja
test
mov
sbb
retf
mov
sub
or
adc
test
add
adc
or
cmp
stc
xlat
sub
sub
das
and
imul
outs
xchg
mov
test
(bad)
mov
shl
je
xchg
fbstp
or
(bad)
pop
das
mov
mov
mov
inc
or
call
pop
ds
xor
adc
and
and
dec
loop
sbb
repnz
jmp
mov
jae
jbe
std
(bad)
pop
out
(bad)
fld
lods
jns
xor
or
fidiv
ret
(bad)
push
retf
jmp
inc
test
div
jmp
jmp
daa
mov
cmp
sbb
(bad)
sub
xor
sbb
sbb
dec
push
cmp
nop
pop
adc
cmp
push
adc
jns
mov
test
mov
hlt
push
push
lock
movs
adc
ss
aaa
(bad)
cmps
mov
in
ins
sub
and
cmp
push
in
iret
mov
wbinvd
and
addr16
mov
data16
ret
or
ss
shl
cmp
sub
out
je
inc
add
and
inc
push
inc
int
loopne
cmp
dec
inc
cmp
pop
cmp
pop
add
scas
xchg
mov
pop
data16
add
jl
daa
out
sub
in
mov
iret
outs
xor
outs
jmp
mov
mov
pop
xchg
cmp
movs
ret
jno
hlt
daa
adc
clc
repz
ss
aad
push
sub
inc
ds
push
xor
jnp
cmp
pop
jne
dec
cmp
inc
or
push
jnp
mov
(bad)
outs
(bad)
pop
push
out
(bad)
daa
xchg
int3
push
call
push
xchg
out
jno
cs
jno
dec
icebp
ins
dec
inc
fst
jmp
jl
mov
mov
mov
call
and
nop
setge
mov
and
pop
mov
hlt
pushf
scas
std
cdq
hlt
mov
aas
repnz
dec
nop
cmp
jle
int3
mov
lods
cmp
push
dec
outs
mov
jecxz
cmc
pop
push
cmp
repnz
int
jns
adc
fistp
mov
pop
and
mov
push
sbb
add
mov
dec
adc
pop
jb
aaa
jecxz
jl
jae
mov
mov
mov
test
sub
aad
icebp
mov
int
(bad)
mov
das
jae
sahf
pop
inc
lahf
push
inc
sbb
jbe
xchg
jmp
test
movs
dec
rol
mov
xchg
mov
cwde
shr
xor
(bad)
mov
dec
call
stc
xchg
lahf
xor
jecxz
psrld
leave
dec
mov
call
xor
fwait
shl
sbb
lea
hlt
cmp
cmp
loop
mov
ja
cwde
jnp
pop
repz
loop
fimul
push
pop
sub
mov
lahf
cmp
adc
xchg
sub
xchg
out
lock
pop
jp
ret
pop
iret
sbb
or
pop
push
outs
mov
mov
or
loope
retf
sbb
push
cmps
or
call
lock
ins
inc
mov
sub
pusha
inc
push
push
in
xor
jo
dec
retf
cmp
addr16
test
(bad)
and
mov
pop
jae
js
xor
cmp
nop
inc
jbe
not
and
pop
js
sbb
jb
push
mov
rcr
mov
inc
sbb
mov
test
jns
test
xchg
in
mov
outs
scas
fwait
icebp
arpl
in
add
jnp
nop
mov
push
adc
cmp
or
retf
iret
push
mov
ins
call
hlt
xchg
dec
xchg
ret
jns
pushf
lea
mov
pop
sbb
pop
adc
jno
adc
fs
xchg
add
sub
pop
sbb
xor
mov
xchg
bound
inc
fdiv
fadd
push
push
gs
addr16
pop
jge
lds
daa
fcomp
pop
retf
cwde
sbb
fstp
stos
jb
and
push
jnp
cmps
fptan
cs
mov
out
or
or
xchg
imul
push
add
cli
retf
sub
inc
dec
sub
dec
and
fs
and
jmp
data16
fist
mov
add
ds
cmp
adc
push
int
scas
push
stos
jnp
pop
ins
xor
test
(bad)
jecxz
cs
jns
add
cmp
fs
push
mov
or
jg
sub
mov
jl
shl
mov
xor
outs
xor
or
sub
retf
(bad)
int
pop
jmp
fwait
dec
or
push
out
xor
sahf
dec
div
retf
ins
or
clc
cmp
pop
push
xchg
popa
retf
xor
mov
add
test
and
sbb
lock
int
lock
je
sahf
jns
jle
mov
jmp
mov
cmps
inc
inc
inc
ficomp
jp
inc
lds
stos
mov
mov
in
rcl
(bad)
cdq
fdivr
fisubr
sti
(bad)
dec
addr16
arpl
xor
fcomip
add
xchg
in
(bad)
out
mov
je
outs
daa
inc
mov
pop
imul
ds
xor
jp
jmp
jecxz
inc
and
(bad)
mov
inc
movs
mov
dec
xor
leave
int
jbe
xor
idiv
or
shl
push
jnp
mov
and
cmp
imul
cmc
cmp
xor
enter
cmps
add
or
call
add
sahf
push
add
dec
cmp
ret
cmc
inc
cmp
jae
adc
xor
test
movs
sti
mov
inc
jne
scas
jb
adc
or
mov
sub
mov
inc
mov
and
pushf
in
inc
or
mov
sub
pusha
jns
(bad)
int
ret
xchg
dec
ret
jmp
bound
test
dec
clc
jno
ds
or
pop
arpl
pop
int3
cmc
jae
push
pop
std
mov
ins
shr
xor
mov
ja
outs
dec
addr16
jle
mov
and
jp
jb
mov
ins
pop
add
jp
mov
mov
fisttp
idiv
stos
inc
inc
ds
sbb
pop
jge
dec
in
cs
mov
sbb
push
jo
push
xchg
lods
in
jbe
call
outs
shl
adc
ret
adc
ja
and
adc
test
lods
scas
bound
adc
fs
ror
shl
add
nop
outs
ret
call
xor
and
push
dec
or
call
mov
rol
inc
in
test
jbe
sbb
add
xchg
aad
repz
(bad)
repnz
mov
or
cmp
repnz
inc
adc
dec
adc
popf
int
mov
jmp
push
or
je
or
js
out
rcr
aam
loop
and
sar
xlat
inc
push
and
push
(bad)
test
sub
sub
mov
inc
pop
in
pushf
lods
repz
pop
pusha
pushf
shrd
mov
and
dec
xor
fidiv
mov
xor
stc
mov
scas
loop
popf
cli
es
outs
xor
mov
hlt
cs
std
mov
shl
test
jecxz
in
call
aaa
(bad)
fnstcw
hlt
jb
fwait
ret
mov
jge
sbb
retf
outs
mov
sub
stc
xor
lds
push
cs
das
les
sub
push
fucom
and
push
idiv
push
sub
sub
(bad)
cmp
(bad)
fmul
cmp
movs
and
call
dec
sbb
jg
repz
pop
dec
sti
dec
xchg
iret
sub
icebp
adc
cli
in
sub
or
xchg
aad
das
adc
mov
cld
(bad)
cdq
push
adc
gs
jg
dec
dec
inc
fs
push
pop
adc
cld
pop
xor
inc
pop
jnp
inc
mov
js
pop
inc
iret
push
cmp
ret
xor
push
cld
js
call
adc
mov
aaa
cld
movs
inc
pop
dec
inc
fsubr
and
pop
repz
mov
adc
ret
sbb
sub
je
push
add
xchg
(bad)
and
loope
pop
test
mov
xchg
pop
sub
imul
jbe
lods
(bad)
pop
inc
mov
mov
sub
add
sbb
loopne
aas
hlt
int3
sub
stos
js
sub
push
adc
sbb
xor
ret
arpl
jl
xor
pop
in
push
mov
jbe
pop
out
out
lods
(bad)
aaa
pop
inc
xor
mov
and
or
popf
mov
fs
sub
add
xchg
sbb
jmp
mov
inc
lods
or
adc
shr
cmc
xchg
or
adc
test
call
xor
jl
mov
mov
repz
pop
mov
xchg
int3
pop
pop
cmps
mov
mov
sbb
lea
(bad)
pop
push
ret
(bad)
iret
jo
jg
and
and
cmp
jae
pop
loope
mov
outs
aam
add
dec
xchg
jmp
pop
sub
jl
fsub
test
jo
ja
(bad)
or
daa
push
out
add
xchg
dec
pusha
and
in
test
clc
add
jae
add
xor
shl
jp
add
jno
pusha
rcr
inc
jno
call
pop
sbb
aam
dec
xor
xchg
inc
aaa
push
enter
mov
fisttp
into
ins
dec
sahf
in
inc
pop
lea
test
pop
xor
(bad)
jmp
xchg
xchg
or
in
ss
dec
repz
clc
call
shr
jge
pop
dec
shr
jb
fisttp
xor
ins
cli
lahf
call
jmp
scas
ss
push
mov
(bad)
aad
cmp
fwait
or
push
xchg
jbe
frstor
aas
xchg
xchg
movs
mov
in
sub
or
or
and
neg
push
sub
inc
(bad)
jecxz
int3
fsub
xchg
adc
fdiv
adc
stc
or
ror
dec
sub
arpl
pop
les
fs
inc
int
or
daa
fild
pusha
out
fist
xchg
pusha
push
test
jmp
aaa
or
xchg
mov
add
mov
pop
adc
ret
jecxz
out
inc
inc
fadd
pop
fdiv
adc
in
add
into
js
mov
shr
adc
mov
neg
in
sbb
mov
dec
rol
popa
scas
mov
mov
inc
bound
test
retf
outs
nop
cdq
cmc
xchg
jp
(bad)
cli
cmps
cmp
stos
mov
pop
sar
retf
les
(bad)
repz
cmp
jnp
and
test
in
jecxz
mov
test
je
xor
xor
sub
sti
dec
push
adc
mov
jg
push
cmp
sbb
mov
stos
add
nop
or
sub
ja
push
dec
inc
jns
mov
daa
pop
mov
daa
fsubr
mov
leave
mov
test
call
push
xchg
lds
inc
fld
xor
retf
stos
popa
inc
cdq
add
js
xchg
mov
repz
xor
xchg
loopne
icebp
mov
ins
jbe
xchg
enter
cmp
pop
adc
sahf
leave
pop
add
fisttp
nop
add
shr
mov
int
jmp
pop
(bad)
cmp
test
add
fadd
sub
jne
je
mov
mov
fldcw
add
push
cmp
movs
sbb
and
daa
sar
or
aaa
sub
bound
repnz
cmp
data16
addr16
dec
add
std
call
jl
xlat
mov
fldcw
adc
js
dec
stos
adc
sbb
sti
cmp
repnz
sub
loop
mov
xchg
mov
push
jne
in
jb
je
mov
test
test
gs
pop
sbb
int
loop
clc
dec
movs
sahf
les
jecxz
ret
dec
fwait
shl
jp
imul
outs
loope
in
aam
cmp
sbb
pop
sbb
int3
add
xor
and
cmc
mov
gs
push
mov
scas
data16
lods
test
loopne
and
pushf
test
in
cmp
mov
jp
xchg
mov
push
(bad)
mov
pop
clc
mov
and
repnz
(bad)
or
mov
out
dec
loope
movs
push
popa
leave
mov
movs
pop
or
fnsave
xor
mov
outs
das
rol
stos
lea
test
jne
pop
fwait
inc
stc
pusha
in
lss
icebp
mov
inc
or
pop
es
(bad)
xlat
ja
mov
and
sahf
(bad)
not
popa
jl
inc
xor
dec
std
push
pop
pop
push
test
(bad)
gs
data16
jno
cwde
inc
or
cli
mov
push
adc
push
sub
mov
idiv
fistp
cld
test
xor
leave
and
sub
and
scas
es
test
jae
mov
out
mov
dec
and
fimul
movs
dec
cld
add
in
pop
stos
lds
cmp
ds
cmp
call
mov
jmp
and
push
aam
pop
rol
(bad)
inc
sub
sbb
dec
aad
out
mov
retf
mov
gs
sbb
fstp
mov
(bad)
inc
inc
arpl
sub
and
add
prefetcht2
cmp
mov
out
fdivr
push
or
add
dec
popf
pushf
ror
fild
mov
inc
call
pop
lea
ret
jno
(bad)
sub
int
imul
scas
jecxz
mov
stc
fwait
stos
xor
loop
cmp
int3
or
mov
fisubr
cwde
pop
jmp
sahf
aaa
aam
sub
mov
vmaxss
xchg
movs
sbb
out
xchg
push
in
pop
cwde
cmp
fwait
mov
int
sub
nop
(bad)
lock
mov
(bad)
call
add
fisub
xor
push
in
sbb
adc
push
mov
popf
in
pop
aad
sbb
inc
call
jb
push
mov
jmp
lahf
xor
stc
cmp
xchg
cmp
xchg
mov
sbb
jno
arpl
mov
and
out
int3
cli
call
int
adc
add
(bad)
jle
pop
ror
xchg
xor
jmp
cmc
push
pop
enter
enter
dec
mov
cmp
dec
pop
push
call
or
dec
das
xchg
jns
scas
mov
std
in
mov
lea
inc
mov
or
mov
mov
add
push
sub
xor
or
scas
loopne
jbe
cli
mov
ds
imul
(bad)
out
out
and
dec
mov
mov
nop
fsqrt
nop
xchg
pop
in
sbb
pop
loop
inc
mov
pushf
pop
out
mov
mov
ds
mov
mov
jb
neg
shl
fnstsw
adc
fwait
push
mov
dec
out
or
dec
fbstp
and
xor
adc
aaa
mov
imul
pop
ja
movs
pop
sub
enter
push
mov
fdivr
mov
(bad)
iret
popf
pushf
and
mov
cld
clc
mov
ins
cmp
retf
cmp
or
jg
aam
and
xchg
mov
loop
xor
shr
in
jge
int
(bad)
fldenv
mov
hlt
movs
shl
dec
(bad)
cmps
push
xor
mov
add
cld
jo
ins
jo
adc
fnsave
daa
fisttp
test
enter
mov
shl
in
out
push
xor
xchg
dec
push
dec
mov
test
(bad)
adc
adc
xchg
rcl
mov
adc
push
push
movs
pop
lock
inc
mov
adc
push
cwde
(bad)
push
sbb
adc
inc
cwde
ret
and
add
mov
inc
adc
bound
dec
jns
es
cdq
fimul
test
push
mov
fst
loop
or
inc
je
fwait
ins
test
mov
xor
retf
inc
dec
aam
add
sub
cmp
cmc
gs
adc
cmps
loopne
mov
cmp
dec
sub
bound
cmc
stos
bound
cmp
sbb
and
aas
cdq
pop
repz
xlat
jae
addr16
ret
mov
jge
dec
data16
inc
sahf
iret
xchg
ins
jne
sti
xchg
test
jl
jle
cmc
aam
(bad)
fwait
repnz
addr16
out
lock
outs
mov
daa
mov
addr16
mov
xor
and
pop
sar
push
retf
inc
retf
loopne
cdq
shl
int3
jmp
retf
dec
nop
enter
lods
jl
xchg
push
mov
lds
jp
into
clc
adc
dec
test
sahf
jmp
add
fld
scas
cmp
cmp
or
lock
pusha
inc
rcr
test
push
jno
ficomp
loopne
loop
repz
imul
sahf
stc
xchg
lock
jns
dec
mov
pop
in
fistp
shl
jbe
jne
(bad)
jl
loopne
fucomi
pop
dec
mov
add
cmp
fmul
aas
icebp
dec
ret
out
lods
(bad)
retf
mov
repnz
mov
push
gs
repnz
add
fdiv
addr16
inc
sbb
mov
ds
inc
fs
jp
xor
xchg
stos
push
fdiv
repnz
rcl
out
outs
or
mov
sub
push
ja
xchg
mov
mov
add
mov
sbb
aaa
adc
jbe
nop
jae
and
movs
xchg
inc
imul
add
lods
out
std
outs
icebp
sbb
mov
pop
mov
sub
adc
shl
xlat
sbb
icebp
mov
xchg
lock
out
ss
fsub
cmps
pusha
xchg
mov
jno
push
jp
fimul
sbb
loopne
lods
ins
cmp
and
rcr
outs
stos
xchg
std
stos
push
pop
cdq
call
and
sub
inc
hlt
xor
movs
(bad)
icebp
dec
loope
mov
push
xor
arpl
add
jmp
rep
(bad)
movs
int
and
xlat
and
push
int
jmp
out
mov
scas
pop
test
inc
std
dec
loopne
sub
das
vmovntps
shl
mov
dec
mov
adc
inc
retf
dec
(bad)
(bad)
mov
fld
pop
xor
sub
sti
test
ds
dec
jae
mov
push
pfrcp
mov
bswap
bound
xchg
in
mov
dec
in
in
call
sbb
int3
bound
cmp
outs
cmp
xchg
call
mov
retf
adc
out
cmps
addr16
adc
mov
enter
pushf
and
retf
inc
add
mov
(bad)
mov
test
out
(bad)
test
imul
enter
sbb
cmps
popa
or
or
cdq
cmp
scas
hlt
mov
scas
adc
retf
cmp
cmp
ins
int
cdq
rcl
mov
xor
popa
add
jno
inc
str
stos
psubusb
push
fsub
or
adc
stos
scas
jp
test
dec
call
fabs
mov
pop
push
inc
mov
xor
retf
fcmovnu
adc
dec
dec
pop
pop
fs
popa
(bad)
lods
mov
fdiv
data16
retf
movs
jae
jmp
ror
ins
jnp
jmp
std
aad
cmp
add
cli
mov
pop
or
loope
add
cmp
fmul
sub
ficom
shl
into
std
jmp
sub
jmp
adc
sub
popf
cmp
xchg
test
push
jb
jnp
fmul
mov
xchg
or
pop
mov
ror
test
cwde
xor
mov
sbb
add
dec
xor
pop
imul
dec
dec
leave
or
rcl
sub
xchg
sbb
jne
(bad)
pop
mov
xchg
outs
ja
pop
xchg
outs
mov
sub
xchg
mov
xor
and
bound
shr
push
inc
hlt
xchg
push
push
mov
in
aad
sub
jge
sahf
push
into
out
inc
xor
cmp
xor
adc
imul
jnp
call
adc
ds
fst
xchg
or
icebp
pop
and
and
ins
pop
xor
out
std
jecxz
dec
jge
test
loop
cmc
mov
adc
and
xchg
push
into
jmp
mov
push
mov
xor
(bad)
outs
xchg
dec
loop
mov
pop
and
(bad)
jmp
mov
jle
ja
sub
mov
sbb
sbb
sbb
lea
xor
int3
ficom
dec
lahf
or
pop
sub
mov
pop
enter
sti
mov
lea
or
int
stos
xchg
mov
(bad)
push
psrad
cmp
test
repnz
adc
cdq
sbb
mov
das
fstp
push
push
xchg
data16
popa
cwde
sub
push
mov
push
addr16
xchg
loopne
scas
(bad)
cmps
retf
add
lock
cmc
ins
sahf
outs
pusha
pusha
outs
call
sahf
data16
popf
xchg
dec
jne
or
push
sub
lock
add
add
push
fst
out
and
adc
adc
ss
pop
in
int
adc
enter
loope
cdq
sbb
sub
xchg
jnp
int3
ret
xor
fwait
xchg
xor
ins
movs
cmp
icebp
ins
std
ret
in
xor
xor
mov
jle
stos
movs
js
test
fild
psubsb
jae
loope
stos
leave
pop
popa
(bad)
mov
jmp
adc
mov
fs
sahf
xor
add
xor
adc
cld
adc
xchg
sub
adc
jmp
pop
cmc
pop
mov
xor
and
test
in
and
out
out
or
mov
adc
jns
std
(bad)
data16
and
test
imul
sbb
test
push
and
dec
push
jmp
sub
jno
lods
std
adc
push
cmp
call
mov
add
sbb
leave
jecxz
fcom
sub
mov
jmp
call
cmps
and
movs
xor
or
add
jp
out
mul
mov
addr16
jle
cmps
adc
int
imul
cmp
jmp
in
imul
jno
mov
jne
mov
lock
jle
shl
push
jg
lea
push
cdq
aas
mov
cmp
push
out
iret
lds
movs
cdq
sub
int3
jecxz
sub
or
xlat
sub
cmp
mov
push
cmp
add
adc
ss
push
dec
lahf
or
push
paddd
test
jns
es
ss
clc
and
fsubp
dec
int3
mov
sbb
jbe
sbb
jmp
and
lahf
push
gs
addr16
push
xchg
mov
mov
loop
outs
mov
mov
jo
jae
fdiv
fidiv
jae
inc
jne
cmc
and
in
pop
inc
adc
mov
es
lock
mov
cmp
add
fs
les
jnp
jne
clc
dec
enter
out
xchg
outs
in
ror
push
dec
push
aaa
gs
je
inc
lds
mov
retf
push
sub
bound
xor
and
fmul
mov
xchg
xor
ret
cmp
ins
or
out
inc
sbb
xchg
mov
push
dec
push
daa
jmp
(bad)
fcomp
shr
aam
dec
cli
aad
lods
jmp
rcl
lods
push
and
pop
cmps
jg
jge
or
xchg
mov
fdiv
xchg
int3
cmp
jne
enter
imul
cmp
cdq
shr
shl
clc
push
ins
jle
fsub
sub
vcmpss
inc
repnz
out
movs
pop
stc
adc
ficomp
out
aam
ja
jle
inc
sbb
les
xor
xchg
mov
loope
add
mov
(bad)
out
sbb
push
push
mov
and
pop
xchg
or
aam
cmp
xchg
enter
pop
adc
fwait
push
mov
push
push
xor
mov
dec
sub
ss
sbb
or
pop
popa
or
fisubr
inc
in
xchg
push
and
call
dec
out
inc
xor
xor
pop
out
ret
scas
inc
jmp
retf
call
movs
sbb
stc
dec
(bad)
adc
xor
dec
stos
mov
scas
(bad)
rol
js
stos
mov
aas
repnz
imul
sar
inc
xor
cmc
into
leave
push
fwait
mov
xchg
cmps
add
mov
(bad)
loope
add
mov
add
popa
shl
xchg
push
pop
sub
mov
sbb
jge
xlat
or
push
pop
rcr
mov
inc
push
dec
xor
movs
ret
enter
jmp
pop
aad
setae
cmps
lds
dec
mov
ss
jno
push
es
dec
mov
xor
clc
or
lods
jl
or
sbb
jg
cld
push
int3
push
or
push
stos
lahf
in
test
(bad)
xchg
mov
dec
mov
out
xor
icebp
mov
lahf
push
adc
jo
dec
xchg
mov
dec
or
cmp
fwait
pop
(bad)
leave
push
pop
mov
fimul
xchg
mov
pop
pop
or
jp
in
jo
fcom
mov
cs
add
mov
and
cld
repnz
push
repz
jns
or
shr
(bad)
jmp
ins
xor
pop
out
jp
stos
adc
mov
push
cmp
lds
lahf
imul
retf
stc
cdq
shr
stos
scas
mov
and
mov
dec
inc
mov
sub
and
ret
inc
mov
mov
out
les
call
(bad)
add
add
(bad)
mov
out
jmp
loop
ret
pop
loopne
jmp
adc
dec
xchg
ins
xchg
(bad)
in
push
sub
xor
pop
xchg
cmp
fist
inc
sub
aad
mov
cdq
jae
fimul
test
pop
cmp
test
mov
adc
outs
jge
(bad)
and
dec
adc
popf
rol
ret
or
repz
ret
lds
inc
pop
jo
(bad)
cmp
jae
mov
mov
mov
xor
lea
xchg
adc
or
mov
adc
call
leave
push
lock
or
push
jle
lods
cmps
loopne
dec
jecxz
shl
jmp
xor
inc
dec
fdivr
jns
mov
cli
jnp
inc
iret
pop
in
jmp
or
fisttp
into
hlt
pop
jmp
push
ja
inc
outs
(bad)
shr
inc
jmp
popa
jl
dec
adc
test
loope
mov
mov
cdq
call
or
and
test
sahf
movs
mov
fsub
sbb
mov
std
cmp
pop
mov
adc
sub
mov
adc
fisttp
mov
aad
int
xor
bound
push
pop
mov
out
scas
jbe
jne
push
cmpxchg
bound
ror
add
je
add
or
inc
inc
pop
shr
or
xor
adc
cmp
cmp
push
lock
loop
mov
sbb
and
in
lods
xchg
mov
sub
cmp
push
pop
in
ret
imul
jae
outs
imul
add
mov
ja
pop
xor
out
int3
sbb
inc
mov
pop
dec
scas
out
jo
inc
repnz
repnz
xchg
jb
jae
aas
adc
pop
int3
push
mov
or
and
cmp
push
pop
fcom
lock
ret
inc
jp
lock
pop
xor
test
neg
shr
aaa
pop
loopne
and
and
push
pushf
sahf
fidivr
push
mov
pop
adc
xor
(bad)
push
cmps
cmp
or
aas
idiv
test
adc
in
jb
inc
dec
and
sar
push
dec
fwait
and
xor
dec
jbe
inc
arpl
xchg
push
or
pop
imul
jb
sbb
movs
pop
pop
inc
mov
adc
lea
sub
and
adc
js
push
xchg
retf
adc
xchg
or
ins
dec
dec
jmp
jle
pop
xor
xchg
xchg
inc
ret
std
pop
cs
pop
and
xor
jl
xchg
es
lods
mov
pop
fild
stos
sub
or
xor
mov
jne
scas
xor
add
movmskps
mov
ins
jne
fsub
stc
adc
cmp
stos
push
and
push
std
add
shl
jl
mov
inc
pop
nop
scas
lods
(bad)
dec
xchg
xor
pop
cmp
jg
jp
add
out
inc
fidivr
imul
jne
jmp
jnp
inc
pop
jge
xchg
jne
sub
cmp
mov
fstp
dec
arpl
mov
test
inc
int3
push
pop
test
cmps
loope
and
xlat
fwait
les
pop
arpl
mov
mov
push
ret
in
add
loope
cmc
sub
xchg
dec
(bad)
jb
mov
imul
aas
mov
pop
or
pop
push
jmp
sbb
xor
(bad)
xchg
ret
das
jmp
std
rsqrtps
nop
push
sti
mov
pop
out
jo
inc
mov
xchg
add
outs
jle
xchg
sbb
scas
ss
imul
adc
pop
clc
push
gs
popf
sub
shr
test
push
and
int
mov
adc
in
ds
jecxz
in
mov
iret
lock
jmp
lahf
inc
push
xor
or
retf
std
xor
call
jecxz
ins
xor
out
es
and
lock
mov
repz
inc
xchg
into
sahf
adc
inc
sub
sar
cmc
xchg
xchg
mov
mov
adc
add
repz
aam
mov
gs
cwde
(bad)
ds
repnz
mov
push
pop
sbb
lods
movs
jle
test
xchg
gs
(bad)
dec
pop
inc
(bad)
xor
out
add
scas
adc
and
lds
adc
arpl
idiv
ins
ror
jno
push
int3
jg
mov
and
add
pop
lods
xchg
xchg
fdecstp
inc
call
out
mov
jnp
mov
out
jecxz
fld
scas
and
dec
and
inc
into
mul
sbb
scas
(bad)
call
in
mov
ds
(bad)
inc
loopne
out
push
push
pop
mov
ss
movs
sar
das
adc
xor
and
pop
jne
or
cmp
int3
imul
pop
push
mov
in
outs
and
pushf
add
mov
push
in
add
mov
mov
cmp
data16
scas
xchg
adc
repz
dec
pop
jno
cmps
(bad)
int3
jle
adc
sbb
retf
int
iret
aas
fst
inc
mov
adc
pop
daa
lods
cmps
fsubrp
js
pusha
ins
test
add
dec
xchg
outs
imul
nop
sar
adc
push
ror
cmp
imul
lods
or
xchg
cwde
pop
push
inc
xchg
push
dec
mov
test
mov
in
fidivr
push
test
mov
sbb
push
adc
add
int3
dec
sub
add
into
mov
sub
pop
push
mov
pop
fistp
inc
xor
jbe
push
(bad)
imul
sub
sbb
pop
fs
sbb
jne
movzx
loop
fild
js
jp
xchg
or
or
repz
dec
pop
mov
mov
in
stos
cmp
pop
sbb
cmp
enter
gs
neg
shl
mov
jns
adc
gs
dec
jmp
mov
sub
lock
cmp
fidiv
fsubr
xchg
cdq
pop
inc
pop
retf
mov
adc
scas
adc
scas
scas
fldenv
dec
cmp
inc
daa
bnd
mov
shl
push
vdivsd
cmp
adc
sub
and
add
bound
xchg
ja
out
(bad)
lock
jle
cmps
loopne
sbb
dec
xchg
mov
in
jns
inc
lods
push
dec
fidiv
cdq
mov
(bad)
rcr
(bad)
dec
adc
pop
sub
ss
inc
(bad)
push
(bad)
(bad)
enter
(bad)
rcl
inc
pop
cmc
xor
mov
leave
jno
jnp
jl
push
cli
sbb
adc
fild
pop
ss
or
rcr
in
scas
fisub
sub
cmp
push
sbb
mov
push
push
jae
xchg
add
cli
push
ret
jl
cli
and
scas
xor
push
(bad)
in
xor
mov
dec
xchg
fdivrp
or
xlat
pop
jnp
pop
mov
mov
cmc
dec
out
jnp
sbb
cwde
push
ror
xchg
test
retf
lods
or
test
sbb
jecxz
dec
mov
pop
push
add
pop
outs
out
mov
fisub
lds
sub
ret
inc
dec
cmps
fistp
test
cmc
fwait
mov
cmp
daa
retf
test
sub
repnz
retf
xchg
shl
mov
dec
ds
sbb
shr
leave
mov
(bad)
jg
repz
lds
mov
int
or
mov
fldcw
sbb
dec
cmp
jg
and
enter
outs
mov
addr16
mov
cmp
imul
pop
cmp
mov
call
jg
adc
or
popa
and
stos
xor
popa
das
fimul
mov
add
scas
dec
cmp
ret
mov
loopne
inc
shr
stos
outs
cmp
sub
ja
jbe
cmp
(bad)
pushf
stos
and
idiv
mov
mov
lahf
leave
shl
push
les
sbb
cmp
push
add
jns
aas
cmp
out
imul
movs
retf
fs
inc
stos
adc
(bad)
sbb
dec
or
mov
or
imul
int3
imul
cs
pop
lods
pop
es
stos
popa
movs
lods
mov
cmps
not
mov
xchg
cmp
sbb
(bad)
cld
cmp
fwait
enter
mov
and
outs
push
and
ja
mov
sbb
or
add
shr
cmp
mov
xlat
push
test
push
scas
mov
test
push
ret
aam
or
in
jae
mov
(bad)
loope
mov
(bad)
test
pop
and
bound
mov
or
cwde
dec
pop
sub
stos
jg
adc
mov
adc
pop
sti
mov
and
sub
push
call
jmp
pusha
(bad)
push
loopne
mov
sbb
jmp
or
repnz
popa
adc
fadd
fucomp
and
dec
and
inc
ret
push
neg
dec
call
xor
aam
inc
sbb
mov
dec
ret
cmp
sbb
sub
fidiv
es
inc
cmp
(bad)
mov
jecxz
das
pop
or
dec
pusha
xchg
mov
shr
cli
scas
ror
xchg
aam
inc
dec
push
(bad)
dec
sub
popa
clc
(bad)
or
xchg
xchg
call
jbe
jmp
rcl
(bad)
adc
shr
jle
rcl
test
cld
jbe
sub
mov
es
push
inc
mov
jb
test
retf
sbb
test
lods
loop
push
pop
hlt
xchg
fldcw
scas
fs
mov
loope
add
aam
xchg
je
das
xor
cli
mov
hlt
xchg
pop
push
jbe
xor
mov
and
call
test
mov
enter
dec
xchg
stc
xor
pop
rcr
xor
fsubr
(bad)
mov
jmp
cmp
sub
inc
jns
push
and
imul
stc
test
arpl
sar
outs
rcl
xchg
outs
cld
lahf
sbb
dec
aas
imul
fsub
inc
lods
aas
loopne
imul
ja
ds
lock
jb
mov
jns
xchg
repnz
scas
dec
test
movs
mov
fcomp
mov
sbb
xchg
je
jb
(bad)
sub
call
push
and
pop
mov
cmp
mov
lock
das
cld
icebp
ret
push
gs
sub
jecxz
mov
xchg
mov
pushf
push
repz
or
add
adc
adc
add
rcl
jae
or
pushf
push
sub
lock
mov
and
pusha
inc
cmovns
pushaw
push
packssdw
push
(bad)
rol
cmp
dec
outs
call
and
mov
out
lods
popf
pusha
pop
jno
ja
dec
mov
xchg
pop
dec
and
dec
jbe
jg
mov
fs
mov
cs
cld
inc
pop
rcl
retf
out
cmp
jg
and
pusha
adc
lahf
push
xchg
cmp
mov
dec
es
cdq
dec
cmps
scas
xlat
push
jle
jecxz
mov
mov
ret
lahf
into
inc
inc
cmp
mov
adc
jle
inc
inc
rcr
arpl
mov
fisub
jne
icebp
xchg
adc
(bad)
xchg
push
dec
out
inc
sub
jnp
xchg
(bad)
lahf
lods
cmovs
out
scas
and
sbb
lahf
push
out
jbe
dec
es
push
inc
daa
adc
cs
cld
outs
xchg
xchg
test
out
jb
and
daa
daa
stos
xchg
lods
mov
(bad)
js
leave
mov
test
and
sub
xchg
mov
push
daa
cs
movs
pop
and
cmp
jmp
(bad)
in
xchg
es
scas
xchg
clc
sub
jnp
sahf
scas
cmp
push
lods
and
lods
stos
inc
push
push
and
mov
inc
test
mov
inc
jnp
daa
inc
inc
adc
mov
inc
push
adc
jae
icebp
jl
icebp
into
lahf
add
jle
retf
mov
inc
push
push
not
ror
lods
mov
test
mov
add
ror
in
xchg
push
adc
and
cdq
add
dec
mov
cmp
inc
sbb
lock
mov
shl
cwde
outs
xchg
addr16
in
les
xchg
fdivr
test
fldpi
and
sbb
pop
dec
xchg
mov
fs
fimul
cmp
shr
cmps
sbb
(bad)
dec
xor
mov
in
jne
mov
and
adc
lds
mov
sub
scas
jp
dec
ins
xchg
adc
mov
pop
add
scas
aam
inc
rol
dec
enter
sbb
dec
xor
xchg
cmps
pop
add
sub
mov
jnp
das
call
add
call
push
(bad)
inc
xchg
ins
push
jecxz
nop
test
std
xor
dec
aad
mov
cmp
pop
sub
cmps
dec
jo
inc
jno
add
ret
cld
xor
adc
sbb
xchg
jo
repz
call
jg
ret
mov
popf
aas
add
and
mov
loop
push
inc
in
pop
mov
jmp
fs
jmp
std
adc
pop
(bad)
(bad)
and
test
fstp
inc
sbb
int3
scas
jmp
dec
add
mov
test
mov
fistp
xchg
adc
outs
cli
idiv
cmp
clc
call
mov
adc
cmp
push
add
int3
jmp
push
ror
pop
adc
jge
jns
call
mov
ins
fistp
xchg
ret
aad
call
jns
pop
sti
xchg
clc
dec
cld
arpl
pusha
ror
sbb
push
dec
in
mov
outs
mov
inc
loope
jo
cld
stos
mov
fwait
sbb
jge
mov
push
iret
xlat
push
dec
pop
mov
aad
in
gs
popf
sbb
xchg
fs
add
imul
xchg
dec
dec
adc
add
call
xchg
test
sar
jmp
sub
les
sti
mov
dec
add
data16
daa
test
mov
adc
mov
test
fstp
fnstsw
call
js
hlt
ja
ficomp
inc
cmp
test
out
push
stc
fdivr
mov
sub
test
jbe
test
sbb
shl
xor
and
mov
jp
popf
rep
pop
sub
scas
cmps
dec
mov
mov
pushf
push
push
and
(bad)
and
inc
ss
inc
adc
cli
mov
popf
sub
ins
mov
nop
add
stos
pop
mov
cli
popa
pop
sbb
cmc
les
xor
shr
ss
push
inc
(bad)
daa
retf
mov
or
imul
mov
(bad)
push
lds
ds
out
or
retf
mov
loope
(bad)
call
dec
mov
rol
in
push
jmp
fsubr
sub
mov
imul
lds
jns
clc
dec
mov
jmp
into
into
push
pop
cli
movs
pushf
fistp
add
xor
popa
icebp
jb
cmps
add
and
addr16
add
mov
hlt
imul
jnp
cmp
sbb
sub
mov
lods
ret
push
fild
retf
inc
xor
inc
or
rol
pop
jae
xor
mov
test
loope
imul
cmp
pusha
not
ss
inc
pop
xchg
xor
cmp
adc
adc
adc
push
test
xor
mov
mov
jmp
test
sbb
push
stos
movs
adc
pop
out
fwait
rcl
stos
jmp
inc
pop
xchg
jno
in
pop
xor
mov
push
mov
inc
fstp
cmp
push
je
out
stos
or
int3
out
iret
sub
add
outs
push
mov
rcr
inc
and
xor
retf
lock
sbb
sar
cmp
fdiv
jnp
add
lahf
fcomp
addr16
mov
jle
mov
xchg
jb
rcl
nop
call
in
cmp
leave
jmp
inc
imul
cdq
push
test
jns
iret
pop
imul
fdiv
out
cmc
jge
add
(bad)
push
jg
lahf
sahf
dec
(bad)
rcl
jp
xchg
inc
addr16
stos
and
loopne
jne
jecxz
cmc
cli
add
retf
sub
push
jmp
js
push
adc
adc
(bad)
inc
cld
sbb
pop
xor
push
fldenv
aas
xchg
test
aas
dec
jb
adc
sahf
jmp
(bad)
or
retf
movs
(bad)
add
fwait
leave
adc
movs
lea
cld
mov
adc
ins
stos
jg
push
add
rol
add
out
mov
lea
mov
mov
test
sahf
shr
dec
arpl
sub
mov
mov
lock
jg
xor
push
out
mov
aas
sub
jae
xchg
ret
icebp
mov
inc
push
add
pop
mov
mov
mov
lods
aam
cld
lods
scas
repnz
mov
lods
movs
adc
in
lock
xchg
es
test
enter
or
lock
loop
ret
mov
push
dec
inc
dec
pop
mov
xchg
dec
lahf
imul
xchg
jae
push
inc
sub
push
jle
jge
pop
icebp
es
(bad)
jmp
(bad)
push
push
outs
mov
test
sub
sar
cmp
call
inc
hlt
aad
sbb
mov
and
xor
dec
nop
fld
popf
inc
sub
imul
push
aad
shl
bound
aad
mov
test
data16
into
dec
pop
cs
xchg
pop
fs
xchg
or
cmp
mov
xor
je
sbb
mov
add
push
jns
or
sbb
dec
fisub
or
pop
pop
xchg
arpl
scas
ins
ins
or
sbb
push
add
bound
xchg
imul
loope
movs
jno
daa
repnz
jg
xchg
rcl
jne
sub
mov
ss
jb
jle
into
jge
fcmovbe
push
adc
fisttp
add
stc
and
push
cmp
and
adc
nop
or
jne
out
mov
push
lods
cmp
out
add
das
sub
mov
lods
sbb
push
leave
xchg
push
xchg
movs
stos
fidivr
nop
arpl
(bad)
fld
cmp
loop
sub
mov
xor
(bad)
cwde
pop
popf
dec
aas
iret
sub
daa
sbb
mov
mov
xchg
or
les
xchg
cli
xchg
mov
adc
dec
push
mov
adc
test
mov
fistp
sub
push
movs
pop
aad
fidiv
je
jge
or
mov
cmp
and
cmp
inc
sub
mov
in
adc
mov
rol
mov
out
ret
loop
test
adc
imul
inc
or
push
out
loope
int
mov
jb
into
push
adc
out
xor
dec
call
ror
jno
mov
push
or
mov
cwde
int
xchg
gs
jp
sbb
mov
xor
out
cmovg
pop
xchg
lea
xchg
movs
xchg
movs
out
retf
adc
pop
or
inc
lahf
mov
cmp
shr
mov
jmp
cli
pop
ja
pop
sub
push
pop
movd
std
clc
outs
push
cmps
and
mov
in
out
sbb
xor
jp
fs
loopne
and
or
call
stc
in
pop
push
into
mov
out
bound
gs
fwait
inc
test
xchg
pop
cld
xchg
arpl
and
fs
sbb
adc
lock
dec
push
cdq
mov
cmp
xchg
aad
inc
ins
ret
or
movs
jnp
jmp
add
mov
(bad)
xor
jno
jl
mov
mov
mov
cmp
add
or
data16
ret
xchg
mov
jns
hlt
cmp
outs
cdq
sti
mov
adc
popf
mov
inc
pop
or
inc
and
pop
mov
jmp
mov
mov
movs
lods
mov
mov
rcr
fstp
lds
je
pop
cwde
loopne
push
mov
pushf
or
dec
scas
std
pop
dec
adc
sbb
pop
jp
rcr
lahf
(bad)
es
cmp
mov
loope
pusha
enter
mov
bound
loop
dec
mov
test
repz
push
lahf
sti
lds
ret
dec
popf
or
or
(bad)
jae
mov
sub
adc
mov
xor
mov
ins
or
push
ins
stos
xor
icebp
jp
and
les
push
ds
mov
xchg
jecxz
sti
add
push
sub
fisttp
dec
test
and
pop
mov
inc
sub
pop
inc
out
les
hlt
lods
jno
lock
cs
(bad)
mov
into
xor
retf
(bad)
adc
stc
cmp
jae
outs
in
xlat
xor
pusha
lea
xor
out
inc
pop
xor
cmp
sub
jnp
sub
mov
inc
adc
ret
cmps
cld
and
xchg
and
mov
push
mov
imul
in
jg
repnz
ins
aas
rcr
push
xchg
frstor
out
add
or
ja
rep
push
push
lds
in
sahf
popf
pop
je
aaa
push
(bad)
pop
push
dec
int
data16
mov
and
sbb
adc
scas
sub
loopne
popa
jmp
out
rcl
sbb
hlt
aad
mov
cmp
ficom
and
or
int
out
jno
adc
and
and
emms
cli
cmc
repnz
adc
mov
popa
call
mov
push
and
dec
cmp
or
and
adc
dec
outs
inc
pusha
ins
push
xchg
nop
pusha
or
pop
sub
aad
mov
js
(bad)
out
jnp
push
adc
inc
fisubr
sub
mov
push
call
sti
or
cdq
aad
stos
rcl
outs
sbb
adc
movs
xor
outs
stos
(bad)
or
sbb
cmps
cmc
sbb
clc
(bad)
xchg
cmp
jl
mov
push
push
cmp
lahf
stc
dec
(bad)
das
xchg
sti
mov
out
ret
inc
mov
ins
rcr
scas
jp
aaa
test
clc
out
ss
bound
cmp
(bad)
call
shl
jno
sub
adc
jp
div
mov
adc
pop
jns
lods
jns
add
mov
mov
ret
push
int
int
dec
(bad)
xchg
dec
or
xchg
ss
lods
sahf
inc
dec
add
add
pop
bnd
clc
pop
add
jb
cmps
dec
(bad)
mov
mov
or
add
outs
sbb
xor
(bad)
(bad)
shr
mov
imul
mov
jnp
(bad)
dec
cmp
xor
fs
fcomp
xor
cli
lods
mov
rcr
mov
xor
mov
cld
clc
(bad)
sbb
sub
pusha
fidivr
mov
ins
xchg
retf
stos
cmp
jl
out
dec
aam
xchg
dec
add
aad
mov
xchg
fst
push
(bad)
out
mov
js
inc
sti
mov
add
push
rcr
sbb
or
xchg
imul
xrelease
and
mov
div
pop
and
jmp
outs
xchg
cdq
mov
xchg
inc
xor
sbb
sub
ror
test
xchg
xor
xchg
cwde
cmp
mov
cs
(bad)
dec
jle
xlat
xor
mov
in
js
jb
xchg
aam
shl
mov
push
add
fdiv
cmp
fsubr
push
and
xor
push
rcl
mov
push
push
rol
in
sbb
fisttp
xor
dec
outs
cmp
in
test
das
inc
or
movs
fldenv
push
cmp
xor
hlt
hlt
push
(bad)
clc
jmp
cs
jo
clc
pop
dec
arpl
retf
mov
cld
fnstcw
cmp
loop
(bad)
pushf
call
dec
push
das
addr16
push
push
call
dec
cmp
enter
xchg
mov
xchg
mov
sub
in
into
int3
xchg
lea
jnp
imul
icebp
push
cmps
xor
xor
add
popf
inc
cmp
add
aam
mov
sbb
pop
pop
cmc
jne
push
stos
sub
and
jbe
mov
mov
or
and
test
push
call
shr
jl
sub
inc
inc
loope
test
je
add
rcr
cmp
push
test
pop
es
loop
pop
add
ins
mov
and
(bad)
or
lds
push
cmp
dec
icebp
and
or
pop
test
and
call
adc
gs
jle
ds
arpl
jmp
in
lahf
loopne
dec
loop
scas
jp
aaa
mov
cmp
ins
mov
pop
dec
push
faddp
dec
aas
out
mov
shr
add
pop
sbb
sbb
xor
movs
sub
adc
gs
add
fsubr
mov
sbb
test
rcr
icebp
inc
xchg
shr
mov
mov
jmp
sub
dec
xor
inc
sub
out
iret
mov
pusha
test
mov
and
push
fwait
sbb
xchg
fsubr
mov
sub
lock
ja
mov
or
mov
enter
and
push
out
ror
dec
int3
mov
jb
lods
test
ret
lock
mov
lea
movs
sar
lock
push
push
(bad)
xor
xchg
out
pop
dec
pop
mov
adc
sbb
dec
inc
or
ss
or
fdiv
aaa
mov
cmp
push
or
cmp
mov
mov
pushf
and
outs
inc
icebp
xor
je
push
es
sub
sub
mov
ja
out
sbb
enter
lods
call
add
pop
jae
shl
and
icebp
push
lahf
cmc
pop
imul
std
cli
retf
jne
add
jnp
rcr
or
xor
out
movs
scas
dec
pop
sub
add
aas
movs
leave
movs
pop
mov
call
or
push
jo
mov
es
xchg
add
inc
pop
add
lahf
leave
icebp
mov
mov
push
pop
push
xor
(bad)
mov
les
pop
jb
add
cmc
inc
and
mov
xor
push
add
sbb
outs
clc
or
adc
pop
mov
test
mov
(bad)
mov
in
es
jae
sar
push
push
xor
in
push
mov
sbb
push
lahf
push
adc
sbb
leave
inc
fs
mov
aad
push
or
jmp
mov
mov
not
pop
jmp
mov
mov
sahf
mov
dec
in
xor
or
fcom
sahf
popf
or
jo
mov
mov
call
mov
in
test
fdivr
jp
or
inc
sbb
cmp
sbb
or
mov
mov
and
dec
pop
mov
hlt
lds
xchg
lahf
push
sub
jl
loope
mov
pop
(bad)
les
jbe
rol
push
mov
out
xor
ret
jo
sub
mov
or
push
push
or
call
add
mov
sbb
enter
imul
and
cld
jae
pop
inc
in
(bad)
push
mov
mov
cs
sub
cmp
mov
dec
sub
pop
dec
test
inc
adc
and
int
sub
mov
mov
dec
popf
add
repnz
inc
fild
dec
movs
inc
or
bnd
loope
or
xor
jo
je
cli
sbb
jns
mov
test
cmps
jge
test
mov
mov
inc
movs
rol
stos
or
iret
push
xchg
jnp
into
imul
push
or
fsubrp
xor
retf
jge
ds
vorps
xchg
cmp
xchg
js
fcomp
dec
xchg
jle
fistp
cmp
cs
(bad)
fdiv
lods
(bad)
scas
fimul
(bad)
aad
shl
xchg
daa
add
mov
xchg
mov
add
push
jge
aam
jb
rol
xlat
adc
(bad)
in
fiadd
repnz
outs
pop
or
xor
out
cmp
lods
aad
jns
inc
jl
inc
and
and
mov
dec
xchg
repz
jge
jmp
(bad)
in
pop
mov
mov
movs
frstor
lock
dec
test
test
fs
movs
aad
movs
mov
push
sub
(bad)
aad
mov
sub
xor
fwait
jae
and
addr16
dec
(bad)
fld
pop
sub
inc
jle
dec
out
sbb
popf
mov
mov
mov
and
out
jne
repnz
inc
fs
fbstp
and
call
push
scas
das
fidiv
mov
jnp
cli
je
popa
int3
sub
cli
mov
push
test
push
les
xlat
cs
and
add
popa
xlat
jmp
lahf
repnz
daa
bnd
pop
mov
popf
cmp
outs
push
jno
push
test
inc
imul
xlat
xchg
xor
pop
in
push
mov
je
imul
clc
jmp
fs
lods
lods
imul
cmp
jne
(bad)
jb
test
call
je
mov
sahf
mov
xor
sbb
pop
rcr
in
jge
rol
in
sbb
cmc
push
push
mov
xchg
into
push
dec
xchg
aas
stos
inc
inc
xor
neg
mov
xor
pop
xor
and
jb
pop
xchg
push
inc
js
fcomp
jns
xchg
xchg
jecxz
adc
sbb
nop
inc
loopne
in
push
mul
mov
sub
and
outs
jecxz
mov
movs
jecxz
addr16
jle
xchg
dec
cmc
les
mov
fwait
sub
call
popa
sahf
je
add
xchg
add
pop
dec
pop
(bad)
mov
dec
mov
mov
enter
in
das
fimul
div
and
in
cmp
mov
inc
pop
mov
imul
dec
aam
icebp
or
retf
out
icebp
jb
daa
icebp
enter
shl
loope
adc
scas
mov
dec
pop
test
retf
xor
stos
add
jge
jo
js
mov
adc
push
clc
sub
and
mov
pop
shl
mov
es
mov
jne
add
ins
mov
dec
dec
inc
ss
sub
dec
inc
mov
and
jmp
push
fistp
out
call
adc
outs
shr
pop
(bad)
xchg
jnp
ins
das
gs
mov
xchg
les
dec
in
pop
inc
aas
add
jb
fwait
or
std
sbb
sub
ds
adc
out
cmp
cld
pushf
xchg
sbb
in
jne
push
mov
push
jecxz
es
dec
aas
sub
(bad)
jmp
fistp
loope
or
mov
cmc
(bad)
cmp
imul
int
add
cmp
mov
clc
pusha
inc
es
adc
addr16
and
rol
pop
pushf
push
xor
(bad)
stc
addr16
sti
push
int
(bad)
fwait
or
sub
adc
into
mov
xchg
pop
ss
vmovaps
adc
into
out
aas
inc
ja
daa
push
fs
clc
mov
and
xor
or
sbb
pop
xor
inc
inc
and
inc
pop
add
sbb
push
lahf
pop
imul
add
(bad)
jmp
inc
in
sbb
jne
es
daa
pop
jnp
call
fdivr
popa
not
shl
jne
xor
fisubr
inc
pop
xchg
cdq
push
stos
xchg
(bad)
rcl
mov
cwde
ret
xor
(bad)
ds
push
popf
xor
or
movs
mov
sub
xor
lds
mov
lahf
jo
xchg
aaa
test
addr16
mov
test
push
xchg
cli
mov
inc
rcr
jl
dec
sub
(bad)
jp
xor
inc
ins
dec
sti
push
and
mov
sbb
test
mov
repnz
outs
cs
mov
cmp
mov
pop
dec
push
into
xchg
scas
sbb
add
jle
ins
mov
outs
sbb
cmps
mov
add
mov
adc
stc
arpl
and
xor
inc
loope
mov
scas
sbb
cmc
inc
shr
cmps
xchg
mov
fdiv
aad
test
fidiv
mov
(bad)
repnz
loop
mov
sar
sub
lock
mov
cmp
mov
lea
repnz
pop
sub
and
cmp
lock
test
repz
sar
xor
test
gs
leave
add
pop
xchg
out
arpl
mov
dec
sbb
xchg
xchg
lods
outs
rcl
push
jbe
jb
rep
push
mov
scas
xchg
ins
mov
dec
test
mov
add
repnz
bound
out
xor
data16
aaa
or
push
pusha
mov
test
push
jnp
adc
mov
xchg
lods
hlt
add
xchg
stc
mov
sbb
cmp
das
add
push
cmc
cmps
inc
cld
cmpps
push
cmp
test
push
fdivp
pop
push
mov
adc
les
retf
out
cmps
(bad)
mov
mov
mov
scas
cmp
pop
adc
dec
rcr
js
shl
stos
pop
jp
adc
and
fsub
sub
(bad)
test
mov
and
test
fnstsw
ret
add
and
push
sub
popf
pop
and
or
mov
add
push
or
cmc
rol
sub
mov
or
test
add
data16
retf
push
out
out
mov
fidiv
imul
stos
aaa
push
inc
and
or
sub
mov
(bad)
scas
retf
jle
repz
push
inc
push
push
jnp
dec
outs
mov
pop
dec
call
das
add
ins
lods
mov
(bad)
mov
mov
fisub
mov
xor
sbb
xchg
loopne
ror
sbb
mov
call
pop
mov
sar
push
or
xchg
cwde
pop
into
adc
arpl
jbe
(bad)
mov
push
add
in
push
or
(bad)
push
mov
sub
xchg
loop
paddsb
xchg
ret
(bad)
cmp
xlat
or
pop
jecxz
xor
push
fld
and
mov
popf
in
lea
imul
add
inc
jecxz
neg
(bad)
mov
leave
jae
and
dec
mov
xor
dec
inc
lock
es
mov
lods
test
shl
sub
or
popf
dec
add
shl
ss
and
and
lods
xchg
pop
test
in
ror
pop
cmc
mov
outs
(bad)
fst
dec
jb
mov
jl
dec
or
inc
and
sbb
add
mov
cmp
jmp
aas
imul
scas
jbe
(bad)
and
inc
(bad)
in
cmp
jno
sub
inc
stos
jns
mov
mov
dec
stos
inc
mov
fld
inc
push
and
fs
mov
lds
jle
or
int3
or
mov
adc
jl
adc
sbb
dec
aas
xchg
mov
in
mov
jb
xchg
and
cmp
fs
sub
push
iret
cmps
pop
outs
rol
sbb
mov
sub
aas
fimul
sti
or
jbe
mov
lahf
fst
daa
fist
jb
jp
push
rcr
adc
mov
add
mul
(bad)
xchg
jp
mov
fistp
(bad)
jbe
fadd
lea
jbe
lds
sub
pop
jns
(bad)
das
loopne
sbb
mov
test
push
mov
cmp
inc
js
or
aam
fs
sbb
pop
addr16
lods
adc
mov
pusha
dec
push
cmp
sbb
mov
jo
ins
jp
ja
adc
sub
mov
xchg
clc
into
dec
sbb
adc
or
inc
push
jo
enter
pop
inc
mov
xlat
xor
mov
inc
mov
cmc
out
sbb
aas
adc
cld
push
call
test
xor
adc
ret
shl
enter
sub
retf
push
xchg
mov
mov
retf
lock
mov
(bad)
adc
jae
jnp
clc
sahf
sub
jle
mov
pop
cmp
add
inc
ja
jb
ror
jb
(bad)
inc
loopne
out
sub
inc
mov
aas
push
loope
pop
xlat
mov
xchg
out
(bad)
push
mov
leave
loopne
jne
aas
xchg
das
pushf
stos
hlt
mov
icebp
repz
xchg
out
or
dec
cmp
xor
mov
mov
cmp
je
mov
movs
outs
jp
add
xor
cs
jge
and
(bad)
dec
mov
cli
pop
inc
mov
sbb
mov
clc
xchg
or
dec
lds
fcom
out
test
lods
loope
call
lahf
rol
jo
inc
mov
xchg
xchg
lods
dec
pop
or
mov
out
mov
lahf
aam
stc
push
mov
mov
inc
push
inc
fstp
add
cmps
(bad)
aaa
sub
scas
dec
inc
jle
inc
test
ficomp
sub
sub
outs
dec
add
ficomp
and
movs
out
repnz
call
popf
out
and
add
ja
loopne
mov
xchg
int
sbb
add
or
adc
xor
outs
dec
fwait
xchg
sti
test
jle
cmps
and
retf
push
xlat
repz
mov
jl
mov
ins
lahf
addr16
lods
mov
dec
jo
inc
pop
and
add
mov
clc
icebp
scas
aam
popf
loopne
inc
sbb
xor
cld
movs
dec
movs
(bad)
movs
loop
ret
mov
jp
loope
pushf
sti
pop
xor
mov
xchg
dec
mov
cmp
mov
pop
addr16
and
mov
pop
mov
mov
(bad)
fidivr
aaa
jno
adc
lea
dec
test
cmp
or
rcl
popa
ret
pop
mov
pop
xor
jmp
inc
add
mov
or
fiadd
jb
xor
and
inc
or
xor
rol
retf
mov
mov
out
jge
iret
inc
out
fwait
pop
jg
in
shr
ficom
pop
fcmovnu
call
inc
cmp
into
loop
xor
xchg
out
fistp
div
retf
and
sbb
add
(bad)
cmps
out
push
sub
adc
repnz
ja
aaa
(bad)
dec
adc
push
pop
fbld
data16
inc
fild
mov
js
sub
xchg
and
add
mov
cmp
pop
es
mov
lods
loopne
push
pop
and
dec
retf
dec
adc
mov
or
push
or
mov
xchg
fldenv
sub
fs
popf
ror
dec
inc
in
bound
(bad)
pop
xor
xor
lea
add
and
dec
retf
popf
inc
jne
adc
jae
or
inc
lahf
push
imul
rol
lahf
push
pop
in
xor
sbb
xor
mov
push
stos
imul
jecxz
outs
idiv
push
mov
out
dec
les
sti
ins
mov
leave
out
iret
mov
clc
cmps
sub
mov
out
xor
xchg
ins
dec
in
push
jnp
dec
cmps
es
stos
mov
jne
in
fwait
jmp
stc
neg
push
xlat
dec
jl
adc
dec
mov
inc
xchg
inc
scas
mov
mov
inc
add
lods
mov
(bad)
or
or
push
and
mov
gs
xor
(bad)
mov
cmp
or
xchg
push
inc
outs
or
add
shl
xchg
movs
out
loop
outs
mov
mov
mov
dec
mov
outs
imul
jge
das
cmp
cmps
pcmpgtw
rol
xchg
fld
hlt
in
jae
dec
imul
movs
out
adc
mov
and
lods
aas
xchg
imul
popf
aaa
adc
pop
add
in
push
bound
mov
dec
or
mov
adc
push
(bad)
fsubrp
jecxz
inc
icebp
sub
inc
repnz
ficom
fs
sbb
jb
imul
imul
rcl
mov
xor
hlt
stos
push
popa
cmp
jmp
push
xor
or
mov
mov
(bad)
cmp
and
mov
mov
pusha
pusha
inc
test
cmp
inc
inc
mov
gs
movs
pop
shr
jae
dec
(bad)
call
sub
cmp
cmp
call
push
or
fsubr
movs
shl
cli
dec
jge
push
jmp
in
push
jl
pop
jmp
in
pop
sbb
add
in
push
pop
mov
fldenv
mov
nop
cmp
fmul
cmp
lahf
inc
mov
(bad)
xchg
jmp
jle
fsub
shl
arpl
(bad)
xor
lds
jns
jecxz
jmp
dec
out
cs
xor
mov
jg
retf
inc
cmp
(bad)
xchg
pop
jl
push
or
mov
adc
fcmovbe
mov
lds
sbb
(bad)
(bad)
ds
int
or
movs
xchg
je
out
adc
jbe
cmps
call
adc
adc
jle
repz
inc
adc
push
stos
xchg
shl
cs
ja
jg
xchg
push
sbb
(bad)
push
mov
movs
sub
enter
stos
enter
pop
repz
xchg
std
dec
rcr
inc
adc
dec
pop
in
mov
aam
dec
in
call
mov
mov
es
sbb
bound
add
in
pop
lods
dec
mov
aaa
pop
and
out
stc
mov
add
js
sub
nop
xchg
jns
fist
dec
inc
jns
movs
cld
daa
xchg
add
pop
pop
int3
and
call
mov
mov
dec
xcrypt-cfb
cmps
movs
out
rol
mov
gs
cmp
adc
sbb
push
or
push
psubw
pop
xchg
pop
pusha
push
inc
jecxz
fidiv
ins
jmp
mov
sub
fldenv
int3
out
jo
dec
mov
cmp
in
mov
inc
xor
data16
sbb
popf
icebp
cmp
out
pop
retf
test
(bad)
or
and
pop
arpl
ds
mov
cmp
in
mov
xchg
mov
out
das
sbb
push
scas
sbb
aaa
pusha
cdq
nop
or
adc
cmps
addr16
jbe
test
add
pusha
std
retf
fbstp
and
fadd
push
mov
ins
test
or
cld
pushf
stos
movs
inc
pushf
call
sbb
jl
mov
mov
inc
jo
lea
das
test
push
test
imul
dec
and
leave
push
mov
(bad)
aad
pop
pop
mov
test
jle
sbb
push
ss
jno
jge
fs
punpcklwd
int
inc
pop
mov
repnz
xor
mov
pop
inc
je
movs
pop
cmp
push
adc
sti
dec
sub
(bad)
jb
cmp
bound
pushf
xlat
lods
popa
inc
mov
sub
add
outs
or
jl
jbe
and
sar
or
push
aad
mov
fist
movs
push
das
movs
mov
aad
or
ss
jno
jb
adc
aas
imul
out
add
or
jae
xchg
xor
sbb
push
leave
jne
stc
pop
ret
adc
out
retf
std
fild
inc
xchg
cmps
ret
in
jmp
leave
add
dec
daa
retf
ror
mov
in
jmp
inc
aam
push
dec
fisub
pop
je
aam
pop
add
ja
dec
dec
xchg
stos
(bad)
inc
(bad)
sub
stos
push
push
fcmovbe
add
imul
test
push
adc
push
pop
and
pop
and
call
in
mov
jno
adc
xor
mov
adc
rcr
jg
(bad)
aaa
xchg
and
out
fmul
lea
(bad)
mov
jge
test
vpmacsww
jge
jbe
cmc
fldenv
dec
sub
fmul
dec
in
bound
xchg
pop
je
stos
sbb
test
test
dec
or
leave
dec
popa
in
cdq
xchg
cmp
add
loope
mov
mov
xor
or
shl
and
mov
call
fs
(bad)
inc
and
and
neg
cmc
inc
mov
or
adc
imul
adc
iret
repnz
outs
mov
cld
mov
jne
pop
jmp
fist
xchg
vmptrst
jo
mov
imul
or
loope
pop
mov
inc
(bad)
dec
sbb
rol
mov
add
ds
sub
int3
cmp
push
imul
adc
dec
sub
adc
retf
ja
(bad)
lock
pop
inc
fwait
aad
push
inc
jbe
shl
jmp
cmp
dec
loop
shl
push
dec
sti
mov
lea
jo
fisub
cmp
arpl
aam
lods
popf
sub
cmc
push
dec
in
xor
inc
lods
icebp
mov
mov
mov
aam
cmp
or
mov
push
call
sti
imul
in
imul
jmp
fstp
mov
mov
mov
push
pop
cli
stos
retf
pop
jle
pop
scas
in
jo
idiv
outs
(bad)
mov
xchg
pop
xchg
and
and
(bad)
sti
cs
mov
aad
sub
jae
mov
fwait
cs
jmp
mov
test
xchg
fbld
push
cli
call
in
scas
sahf
and
mov
test
in
sahf
mov
ins
xchg
add
jmp
push
test
mov
sbb
ss
mov
mov
pushf
jb
cdq
popf
shr
push
sbb
out
(bad)
sub
mov
mov
sbb
or
push
aaa
fistp
mov
and
ror
xor
cdq
lock
mov
ror
pop
and
ins
lock
mov
jmp
enter
push
mov
pop
in
retf
test
movs
xor
ins
mov
and
mov
(bad)
cmp
into
mov
out
stc
ficomp
mul
cmps
pop
fwait
jo
aaa
pusha
ja
dec
add
cmp
mov
jns
lahf
mov
jecxz
mov
outs
and
sti
fwait
jle
or
popf
lea
popf
xchg
aam
mov
mov
xchg
push
and
sahf
test
jae
jle
sub
push
(bad)
inc
fnstsw
icebp
loope
mov
(bad)
jmp
mov
cwde
mov
sbb
fs
jg
mov
xchg
xlat
or
in
es
clc
loope
out
outs
sbb
ds
sub
sub
sahf
push
fcmovnb
sub
or
sbb
mov
cmp
aas
push
ror
pop
leave
in
jge
out
(bad)
jmp
lahf
sbb
ret
mov
cmp
pop
or
mov
sti
ror
push
loope
cmp
les
inc
lods
jmp
push
pop
fst
mov
mov
inc
mov
xchg
xor
cmps
in
pop
xchg
mov
mov
adc
inc
(bad)
adc
mov
and
in
mov
sbb
add
cs
stos
or
fistp
xor
sbb
or
mov
mov
addr16
xor
stos
mov
push
adc
xor
sbb
mov
jnp
sbb
jmp
in
mov
pop
adc
aad
jecxz
ret
ss
fadd
imul
inc
lea
jp
ds
int3
mov
xchg
(bad)
call
rcr
or
jns
xor
xor
pop
cli
push
jp
pop
ins
cli
push
shl
rcl
and
inc
mov
jo
inc
std
cmp
xchg
retf
call
and
sub
mov
icebp
dec
dec
rol
hlt
jmp
push
sub
imul
pop
push
push
xor
test
add
adc
aam
sbb
ins
xor
fdivr
xchg
iret
cld
or
xchg
icebp
xchg
jp
inc
mov
xor
fbld
dec
popfw
xor
mov
loop
mov
jecxz
xchg
xchg
mov
jmp
setge
pop
pop
sahf
mov
ins
ffree
jl
fiadd
mov
xchg
lods
inc
push
sub
(bad)
cwde
icebp
fnstenv
popf
out
mov
jns
fwait
push
and
mov
mov
in
ret
jp
jbe
ror
mov
movs
mov
xchg
mov
into
mov
push
cli
adc
inc
jg
sub
pushf
cli
and
shr
mov
iret
cdq
call
mov
cld
mov
dec
xchg
int3
pop
cmp
lock
jnp
dec
sbb
lods
or
out
jmp
mov
in
xchg
aad
sbb
jecxz
dec
data16
ret
lock
mov
jb
(bad)
cmps
and
jne
lods
lods
xchg
jbe
or
add
xor
repz
inc
jl
idiv
adc
popa
jmp
jno
lock
outs
in
jb
lods
ret
xlat
data16
test
mov
xchg
int3
cdq
dec
lods
popa
xchg
mov
mov
mov
out
je
adc
jmp
mov
iret
(bad)
call
rcr
hlt
outs
pop
in
jns
mov
mov
icebp
sub
xchg
movs
mov
addr16
retf
(bad)
retf
jne
add
nop
dec
mov
sahf
bound
sbb
cmps
retf
push
xor
call
sub
retf
pusha
add
clc
add
mov
mov
movs
outs
lods
in
add
data16
pop
or
rcl
ja
rcl
hlt
in
or
pushf
sbb
ret
fs
jp
inc
xor
pop
imul
pusha
lds
nop
mov
xchg
out
push
(bad)
daa
aaa
es
aaa
lahf
lea
ds
mov
dec
pop
movs
add
pop
ja
mov
pop
lods
aam
aaa
jge
mov
xor
pop
cdq
loop
mov
stc
fxch
ja
mov
jmp
lods
mov
in
xchg
xchg
xlat
vpaddd
fild
pushf
sub
(bad)
push
mov
leave
adc
xchg
sbb
xchg
(bad)
pop
jecxz
ret
add
(bad)
xchg
push
dec
ror
out
sbb
xchg
sbb
(bad)
xor
ins
and
enter
addr16
cli
ret
mov
dec
lock
fdivr
(bad)
outs
addr16
gs
(bad)
out
mov
push
inc
out
xchg
fdivr
and
xor
mov
jg
inc
mov
mov
sbb
icebp
nop
dec
loope
std
movs
out
and
in
xor
pop
pop
sub
pop
(bad)
das
mov
or
push
jp
xchg
jae
push
cmp
cmps
inc
jle
push
cmp
jmp
mov
in
mov
pop
cmp
in
mov
out
mov
pop
mov
stc
(bad)
lods
adc
fcmovne
sbb
cwde
sahf
sub
push
xlat
pop
jge
push
shl
mov
lock
lock
pop
sahf
inc
fwait
(bad)
xor
daa
in
inc
inc
push
lods
mov
pop
pop
push
imul
jb
dec
push
inc
xchg
sti
test
sub
stc
jecxz
pop
call
call
mov
jp
icebp
jg
int
adc
lahf
test
or
(bad)
inc
jge
cli
fcomp
jae
not
cmp
mov
add
js
cld
ins
gs
into
cmp
cmp
out
jg
dec
or
mov
lock
data16
pop
mov
jo
in
stos
pop
cli
leave
lds
stc
sub
mov
retf
mov
sub
dec
(bad)
sub
push
jae
xor
movs
mov
dec
arpl
rcr
je
cld
add
cwde
stc
or
repnz
gs
jecxz
push
jl
retf
popf
mov
xchg
adc
sbb
popa
movs
xor
xlat
dec
not
sbb
out
pop
repnz
mov
lods
xchg
pop
hlt
cdq
(bad)
xchg
cmc
mov
and
mov
jo
outs
pop
mov
push
shl
adc
in
nop
sbb
push
inc
dec
add
or
ret
cmp
rcr
aas
mov
stos
gs
das
push
cwde
stc
mov
retf
inc
test
cmp
inc
jae
cmp
or
xchg
shl
mov
retf
aad
fwait
sub
test
dec
cmp
mov
cld
sbb
sahf
jge
out
fwait
lahf
or
loopne
adc
or
fldenv
dec
pushf
shl
xor
fwait
xlat
mov
mov
rcr
pop
sub
cmp
aaa
pushf
ret
adc
and
out
(bad)
out
hlt
jns
(bad)
icebp
mov
popa
fwait
jne
mov
fnstsw
adc
jns
iret
popa
imul
sub
mov
cmp
jbe
jae
outs
imul
sti
in
jl
inc
dec
enter
add
or
addr16
fstp
pop
mov
cmp
pop
xor
jg
mov
mov
jge
std
(bad)
mov
rcl
retf
nop
test
xor
mov
pop
push
jb
sbb
mov
fidiv
dec
and
test
das
mov
aam
jne
mov
xchg
jmp
aad
inc
cdq
fs
loop
pop
idiv
xor
mov
sbb
cli
mov
cmp
stos
jo
out
or
xor
(bad)
inc
iret
push
shr
in
push
cmp
outs
cmp
and
inc
jg
loop
scas
not
gs
fstp
ins
mov
scas
sbb
call
mov
mov
adc
sbb
xchg
jp
ja
adc
inc
(bad)
dec
shl
push
xchg
les
and
and
test
sbb
mov
pop
add
es
push
xchg
sbb
mov
(bad)
push
clc
retf
pushf
js
push
sahf
cmp
out
mov
call
jb
(bad)
pop
dec
scas
mov
fnstsw
cmp
int
pop
xor
or
and
dec
pop
xor
xor
add
retf
adc
lea
das
test
movs
cmp
pop
movs
inc
ficom
mov
pop
mov
pop
mov
push
das
mov
xchg
retf
clc
mov
fadd
push
mov
pop
sti
mov
sub
aad
xchg
mov
adc
mov
xor
add
sbb
je
sub
sub
cmp
dec
loopne
stos
mov
sbb
inc
jge
mov
xor
pusha
dec
mov
sbb
mov
and
jno
das
cmp
push
fwait
and
scas
jns
mov
pop
and
or
ret
sbb
retf
cdq
pop
shr
pop
rol
loop
pop
(bad)
adc
(bad)
jns
jge
or
push
mov
push
mov
loope
popa
inc
clc
jne
hlt
out
push
rcl
fisub
ja
cmp
mov
or
loop
adc
stc
add
xchg
arpl
in
aas
push
fdivr
fnstcw
scas
jb
arpl
les
xor
dec
and
mov
push
fcom
cmp
or
inc
mov
jle
cmp
dec
popa
(bad)
sbb
xor
popa
adc
test
mov
inc
jp
mov
ret
and
ret
inc
or
enter
adc
dec
daa
aaa
sti
out
test
shl
pusha
rcl
jge
mov
ficom
rcl
mov
inc
(bad)
movs
push
ss
sahf
aaa
xor
push
(bad)
mov
sahf
stos
in
push
fmul
mov
pop
sahf
mov
xchg
sahf
mov
jp
(bad)
mov
sbb
inc
cmp
add
sbb
pop
cmps
out
sub
sub
fisub
das
dec
or
push
call
daa
lds
(bad)
fisttp
inc
or
std
sub
mov
(bad)
mov
push
xchg
pop
jmp
pop
out
xchg
ds
inc
ss
mov
jns
mov
mov
out
into
xchg
mov
rol
inc
add
push
add
sub
mov
mov
movs
pop
in
xlat
fld
imul
mov
pop
mov
cmp
pusha
add
movs
dec
jnp
dec
ror
mov
div
and
mov
pop
std
sbb
cmps
es
mov
int3
xor
(bad)
jmp
retf
idiv
jl
xchg
mov
add
jge
sbb
add
imul
mov
jle
sbb
sbb
mov
iret
inc
mov
test
xor
fld
and
(bad)
std
sahf
int
add
cmp
int3
aad
ja
out
push
ror
sbb
pop
aas
xor
cmp
xor
scas
stos
call
adc
mul
clc
ins
mov
sub
das
hlt
mov
jnp
pop
mov
mov
ins
inc
cmp
daa
adc
in
add
fwait
test
mov
add
mov
mov
inc
or
mov
sub
inc
movs
mov
xlat
or
mov
xchg
push
cmc
call
jo
in
cmps
add
push
mov
(bad)
jbe
pop
add
sub
inc
aas
mov
cld
test
inc
lock
push
sub
mov
jbe
ja
movs
pop
addr16
ret
ret
je
movs
in
outs
sub
mov
mov
adc
or
jno
mov
lods
xchg
xchg
lock
pop
xchg
jl
mov
cmp
rol
cmp
movs
pusha
(bad)
push
rcl
rol
ret
lahf
call
sub
cmp
dec
sbb
and
stos
jb
fisub
hlt
sub
and
in
sub
push
push
out
call
aam
cmp
call
cld
mov
jmp
mov
sbb
adc
js
lods
adc
xlat
push
sub
pop
out
or
pushf
adc
xor
adc
fisubr
stc
loop
adc
xchg
jp
or
lods
call
jmp
int
xor
test
(bad)
shl
and
xchg
cli
retf
iret
imul
aas
mov
retf
sbb
sub
cs
imul
dec
pop
mov
mov
das
sahf
lds
loopne
or
sbb
xor
jno
imul
dec
or
push
lock
mov
pushf
popa
push
adc
adc
mov
out
pop
mov
nop
pop
pop
stos
mov
dec
push
lds
sti
mov
adc
add
add
jle
sti
fs
push
inc
jbe
loopne
mov
out
sub
fmul
cmc
xchg
push
adc
das
dec
iret
cmc
ja
add
in
fcmove
inc
rol
ss
icebp
sub
fistp
and
push
inc
inc
mov
and
mov
mov
push
je
pop
mov
movs
addr16
inc
push
call
shr
xor
add
cld
cmp
jmp
inc
mov
test
cmp
and
ss
mov
int3
mov
imul
test
je
and
dec
shl
or
ins
fwait
or
lahf
mul
sbb
sub
fs
mov
leave
mov
xchg
cdq
cmps
out
cmp
push
into
imul
(bad)
std
xlat
mov
fst
and
adc
push
ins
xor
in
popf
enter
pusha
int3
data16
or
sub
clc
cmp
scas
dec
jl
mov
cmp
mov
xor
mov
(bad)
sub
dec
or
inc
fsubrp
pop
sbb
mov
mov
idiv
push
mov
adc
(bad)
jecxz
or
lods
pop
inc
lods
das
(bad)
stos
adc
cmp
stc
je
xor
push
sahf
fcomp
jp
mov
fidivr
mov
scas
pop
shl
(bad)
(bad)
mov
repz
aad
dec
ret
and
mov
push
push
dec
(bad)
mov
jg
dec
pop
sub
xchg
mov
sbb
pop
mov
push
ret
(bad)
sbb
push
pop
fldenv
std
inc
mov
cmp
add
pop
xlat
ret
daa
jmp
test
retf
retf
lds
jnp
pop
jge
inc
out
fcom
push
in
hlt
xor
and
jg
sub
inc
stos
sub
sbb
outs
jbe
leave
pop
sbb
xor
dec
(bad)
pop
dec
mov
or
jae
push
sbb
jb
loope
hlt
out
into
jno
nop
retf
call
dec
mov
and
imul
xchg
add
jns
cmp
sbb
mov
out
bound
inc
int3
das
jl
fsub
pushf
sub
sub
std
lds
clc
test
adc
retf
pushf
popf
cmps
cmp
inc
jg
xor
mov
fistp
fcom
and
mov
sbb
fbld
push
or
pop
(bad)
hlt
xor
push
inc
popa
out
xchg
fidivr
xchg
adc
dec
jnp
pop
test
adc
movs
outs
retf
pop
es
les
lahf
adc
popf
xor
xchg
xor
adc
sub
or
movs
out
fwait
jb
jge
cmps
lods
es
out
inc
xor
push
mov
test
adc
mov
add
shl
rcl
dec
arpl
jae
sar
ds
or
mov
aaa
xor
cmp
and
retf
sbb
sbb
icebp
fimul
cwde
in
push
jae
mov
imul
pop
test
movs
jp
fdivrp
sar
fwait
out
xchg
arpl
mov
mov
xchg
xchg
out
hlt
loop
int3
sub
jmp
stos
aad
mov
leave
pop
bound
retf
adc
fst
aas
sub
in
inc
pop
imul
pop
sbb
imul
mov
pop
adc
or
sar
mov
inc
xchg
cs
cmps
fadd
aam
(bad)
push
inc
cld
fsub
add
(bad)
cmp
mov
in
inc
mov
loope
scas
imul
pop
rcr
out
clc
imul
xchg
(bad)
shl
mov
cli
mov
test
in
add
rcl
pusha
sahf
mov
les
aad
out
fs
fadd
push
fldenv
mov
push
add
cmp
pop
mov
call
retf
mov
sbb
scas
cli
sbb
sbb
xchg
mov
dec
jnp
jnp
daa
gs
js
(bad)
test
cli
ss
fwait
(bad)
call
loopne
sbb
push
ret
sbb
(bad)
js
std
mov
or
sahf
sahf
xchg
cmps
lds
add
sub
xchg
fisttp
leave
and
push
scas
retf
sbb
adc
rcr
in
adc
adc
ins
lea
cmp
fcmovnbe
or
push
scas
mov
int
imul
movs
xchg
dec
ret
nop
xor
and
or
mov
out
sbb
mov
das
add
(bad)
ja
jbe
lods
fnsave
add
cld
pop
xlat
(bad)
mov
rol
xor
je
jmp
jnp
xchg
add
mov
lods
jmp
or
ret
imul
pop
test
xchg
in
aaa
dec
push
push
test
pop
hlt
aad
mov
jns
mov
jle
retf
repnz
sub
mov
push
xor
rcr
sub
xchg
xor
pop
add
repz
inc
out
xor
pop
out
cmp
loop
mov
xlat
xor
sub
(bad)
js
mov
pop
xchg
pop
inc
jp
aas
mov
loopne
test
mov
mov
sub
jbe
inc
mov
arpl
or
ds
mov
scas
lds
movs
jno
add
dec
frstor
shr
pop
jne
inc
jno
xchg
aam
mov
xchg
cmp
mov
mov
fisttp
fild
mov
repnz
repz
cmovg
jb
fisttp
or
cmp
scas
adc
fucomip
aad
(bad)
scas
outs
sub
or
outs
addr16
repnz
jne
jae
out
mov
or
pop
stc
shl
or
aaa
ds
xor
call
test
dec
call
inc
cmp
loope
call
fld
fadd
fsubr
into
mov
adc
mov
sub
sbb
pop
xchg
or
and
in
jge
mov
pusha
add
pushf
jb
jle
pop
inc
mov
inc
cld
mov
sahf
int3
jb
inc
dec
pop
push
sub
jge
sbb
cmc
jne
xchg
cld
fbld
mov
xor
imul
dec
mov
mov
fcomp
mov
mov
mov
icebp
lahf
lods
jns
sbb
dec
rcl
arpl
or
mov
js
into
or
push
movs
inc
sub
or
inc
ins
dec
sbb
inc
or
fidivr
xchg
push
stos
cmp
lahf
or
ss
mov
mov
movs
mov
fwait
adc
stc
add
inc
js
pop
test
cmp
loope
inc
or
inc
sub
fmulp
jnp
fisubr
adc
repz
fsubr
jmp
fistp
pause
ins
or
and
ficom
fwait
add
pushf
test
add
jns
pusha
(bad)
jbe
xor
dec
outs
cmp
pop
mov
cmc
inc
pop
jae
shl
jmp
in
dec
pop
cmp
in
inc
adc
xchg
test
lods
cmps
je
cmps
int
push
dec
xor
jge
loopne
jecxz
outs
jl
fisttp
inc
int
(bad)
fidiv
(bad)
cli
and
push
dec
icebp
xchg
pop
xor
xor
std
call
or
push
rcl
pop
lods
iret
sar
bound
jns
or
shr
xchg
pop
mov
je
adc
shl
xchg
sbb
add
std
xchg
mov
iret
push
cmp
test
data16
in
jo
sbb
jecxz
xchg
test
cmp
add
fisub
stc
loope
cmp
fimul
hlt
cmp
sbb
or
adc
movs
les
test
jnp
mov
enter
mov
xor
xchg
aaa
mov
shufps
test
ja
add
jne
cs
dec
fiadd
sub
xchg
sbb
mov
and
gs
dec
add
pop
add
nop
push
enter
or
inc
xor
jp
clc
inc
dec
mov
aam
ins
mov
lods
xor
or
stos
jmp
pusha
cmp
dec
jp
mov
mov
jae
and
mov
inc
pop
sub
xchg
sar
int
out
outs
outs
mov
aad
arpl
xor
mov
and
mov
or
mov
lods
sub
fstp
push
cli
jecxz
mov
lods
outs
mov
and
push
sbb
jbe
outs
loopne
shr
xchg
dec
rcr
push
stc
push
jecxz
rcl
arpl
add
test
jp
mov
fwait
movs
mov
nop
push
and
mov
inc
bound
dec
inc
and
retf
cmps
mov
dec
inc
push
xchg
andnps
sahf
jmp
out
lods
mov
mov
adc
aaa
imul
push
pop
retf
nop
inc
ret
test
push
dec
out
mov
adc
adc
adc
aas
rol
nop
(bad)
adc
aas
pop
cwde
pop
pop
or
mov
mov
push
and
sbb
jge
and
push
sub
adc
cmps
fwait
retf
movs
into
cdq
cmp
inc
(bad)
push
(bad)
jge
xchg
xchg
imul
or
xchg
jmp
stc
test
add
jg
mov
bnd
xchg
cmp
push
loopne
inc
daa
add
inc
sub
mov
popa
sub
sub
inc
gs
jns
xchg
add
out
in
push
in
(bad)
jp
mov
pop
pop
lods
clc
test
push
ds
fisubr
mov
aaa
lds
inc
jne
xor
(bad)
push
sbb
pop
cmp
push
pop
push
push
inc
iret
icebp
pop
xor
fsub
nop
lds
into
imul
sub
pop
cwde
imul
pop
inc
xchg
scas
xchg
repz
dec
mov
jp
adc
lock
mov
fstp
jne
adc
test
sbb
call
adc
les
retf
shl
idiv
loop
test
int
jg
sbb
jl
adc
pop
cdq
add
jmp
push
retf
push
shl
inc
call
popa
iret
or
mov
inc
call
push
(bad)
pop
dec
inc
addr16
xchg
sub
sub
jge
loop
pop
or
iret
std
add
ds
loopne
sahf
stos
pop
or
ficom
xchg
mov
dec
add
push
sti
in
inc
std
cmc
cmp
lods
xchg
pop
leave
add
cmp
lods
xlat
push
push
xchg
mov
test
pop
mov
rcl
or
pop
fmul
test
sbb
mul
(bad)
jnp
pop
jle
js
pop
call
daa
(bad)
mov
push
push
jecxz
enter
fild
push
mov
lods
lahf
add
sbb
push
cmp
xor
xor
bound
jbe
lfs
dec
xor
in
in
or
mov
imul
mov
adc
jno
or
add
imul
stos
push
or
imul
enter
lods
cmp
dec
call
lock
aam
fadd
out
ficom
movs
mov
sti
mov
mov
dec
adc
dec
(bad)
pop
popf
pop
inc
aaa
add
xchg
call
xchg
lods
and
test
ds
cdq
imul
test
cmp
cmps
dec
mov
push
sti
into
je
sahf
and
in
addr16
pop
inc
xor
and
pop
push
push
mov
cmp
cmp
sbb
fisttp
mov
cmp
ret
cmp
inc
(bad)
ss
jb
icebp
scas
push
mov
jns
jle
out
sub
sahf
cld
sub
and
das
and
mov
inc
jecxz
popf
sub
fwait
push
les
lds
aaa
cld
into
and
mov
out
js
and
outs
dec
add
movs
and
jbe
sbb
xor
fmul
test
or
aas
or
jg
loope
test
fst
enter
mov
mov
cli
jns
xor
xchg
xchg
fwait
enter
or
aad
dec
pop
jmp
stc
xor
data16
mov
and
xor
pop
mov
xchg
vphsubdq
mov
mov
jge
and
loop
(bad)
fdivr
push
leave
cmp
inc
adc
iret
mov
push
aad
enter
in
mov
mov
pop
pop
sahf
shr
nop
aad
inc
inc
mov
xchg
dec
popf
ds
and
inc
xchg
pop
lea
cdq
enter
and
lock
cmps
adc
jmp
movs
xchg
pop
xchg
xlat
cwde
sub
ds
es
sub
cmp
jge
int
std
out
call
rcl
cmps
gs
pop
ins
shr
sbb
and
icebp
jno
sahf
outs
aad
ret
(bad)
in
xchg
add
fxch
or
lods
adc
jno
leave
(bad)
arpl
add
dec
add
(bad)
or
dec
or
push
out
sahf
repz
pop
pop
test
ins
cmp
jns
aam
scas
jmp
out
mov
arpl
imul
nop
dec
mov
mov
xchg
pop
scas
data16
mov
push
cld
shl
popa
dec
mov
inc
repnz
mov
packuswb
dec
and
inc
jno
sbb
adc
repnz
fdivp
mov
ds
mov
xchg
add
or
std
loop
push
mov
fwait
in
xchg
cmps
cmps
stos
jne
adc
inc
push
loope
stos
and
mov
adc
jmp
call
xchg
shl
fnstcw
lock
test
adc
sbb
jo
cmps
adc
cmp
xchg
adc
(bad)
movs
and
add
adc
pop
jb
addps
(bad)
ds
stos
ror
(bad)
cli
mov
mov
push
jle
repnz
movs
fsub
pop
jns
dec
sub
xchg
adc
fnstenv
bound
sar
popa
jle
dec
div
mov
test
inc
mov
ins
jb
lods
jecxz
dec
aas
sub
hlt
xor
in
mov
not
je
or
in
dec
mov
and
add
add
sbb
aad
cmp
mov
or
xor
pop
mov
cmps
add
(bad)
pop
or
cmp
stc
es
cli
and
loopne
mov
push
les
jnp
fdivr
cld
cs
jno
push
in
adc
int3
fnstenv
xchg
jns
push
cwde
movs
pusha
add
pop
push
pop
jb
jmp
pop
repnz
xchg
repz
sub
inc
das
es
xchg
retf
aas
sub
gs
inc
aaa
add
jmp
and
stos
aad
stos
push
cdq
dec
lds
push
cmp
hlt
push
push
ins
outs
adc
sub
and
in
mov
mov
mov
mov
sub
mov
xchg
and
call
nop
repnz
and
jns
in
shl
and
lds
adc
lds
mov
push
add
dec
dec
dec
sub
movs
sbb
dec
jmp
ror
rol
xchg
jnp
sbb
mov
mov
mov
xchg
pushf
sahf
or
sysret
dec
sbb
mov
push
repnz
cmp
xbegin
arpl
inc
sbb
sbb
cmps
into
mov
lahf
ret
mov
lds
mov
xchg
add
jnp
and
jno
xchg
cs
mov
mov
ds
mov
popf
into
cs
minps
sbb
clc
ror
(bad)
adc
repz
xchg
adc
scas
in
xchg
push
push
leave
fidiv
xchg
mov
test
or
outs
pop
inc
xchg
mov
cmp
pop
fidivr
jo
xchg
xor
jo
jo
dec
lock
xchg
ret
call
xchg
dec
cmps
ja
lds
imul
in
lea
lahf
add
jno
inc
pushf
sar
stos
test
addr16
push
inc
inc
push
pop
popa
cs
xchg
ret
xchg
jno
ror
pop
ror
cmps
push
ins
test
xchg
add
dec
lds
and
ret
popa
clc
pop
pop
xor
xchg
mov
test
ds
ficomp
aas
into
push
je
sub
(bad)
in
not
xlat
(bad)
int3
fsub
mov
cmp
stc
adc
aas
mov
scas
inc
sub
cmps
pop
mov
xor
call
pop
push
jge
xor
mov
push
xchg
add
ror
or
movs
sti
lahf
dec
lock
push
jne
push
lods
scas
addr16
mov
xor
or
outs
(bad)
jnp
mov
dec
xor
mov
add
leave
leave
retf
int
mov
call
sbb
fstp
dec
mov
daa
movs
outs
mov
mov
pop
fstp
loop
cmp
fldenv
imul
rcr
ins
mov
xchg
popa
pop
pop
adc
mov
jp
cmp
mov
push
mov
rol
mov
sbb
mov
cmps
bound
mov
(bad)
xchg
popa
(bad)
leave
or
cmp
jle
pop
aas
xchg
mov
or
pop
add
dec
data16
mov
cmp
mov
test
or
sbb
push
aaa
icebp
(bad)
(bad)
(bad)
iret
mov
add
fidiv
(bad)
mov
in
imul
call
push
sbb
hlt
dec
xchg
mov
imul
repnz
jae
inc
fs
enter
aad
stos
(bad)
cmc
pushf
jge
or
pop
jmp
mov
sbb
pop
sub
ds
outs
mov
xchg
loopne
ss
icebp
cdq
icebp
jle
scas
inc
inc
jne
ds
dec
test
add
sbb
and
fsub
lock
pop
stos
or
jnp
add
xchg
jbe
mov
aas
cld
pop
mov
sbb
push
add
mov
stc
jl
cmp
icebp
jb
fisttp
xchg
in
int
daa
fwait
inc
sar
push
sbb
pop
mov
add
int
mov
and
adc
or
ins
adc
mov
in
mov
enter
ds
test
popa
dec
sti
mov
div
int3
and
or
or
ret
jo
cld
dec
aad
adc
mov
add
push
pop
sub
xor
leave
pop
sub
sub
mov
push
in
mov
pop
fiadd
sbb
out
pop
and
loop
pop
or
repnz
sub
shl
cdq
out
adc
push
dec
jle
jne
mov
xchg
xchg
jbe
adc
lods
pop
and
in
ins
jnp
pushf
jb
cmp
pop
xchg
sbb
and
idiv
scas
xor
sbb
mov
push
cwde
popa
ss
aam
clc
test
fsubr
std
call
in
in
add
adc
daa
jne
test
add
jne
adc
or
mov
rcl
add
addr16
push
test
imul
sbb
adc
mov
fisttp
(bad)
push
loope
add
retf
or
jp
push
imul
push
jne
test
or
(bad)
and
dec
mov
rcr
adc
rcr
aam
push
mov
jl
das
mov
pop
jle
in
mov
loope
dec
fs
outs
mov
retf
xchg
loopne
xor
(bad)
xor
daa
mov
clc
int3
stos
push
jge
add
jecxz
inc
(bad)
cmc
cmps
test
shr
test
daa
push
mov
mov
jne
jns
ss
mov
mov
push
pop
mov
stos
jmp
add
out
mov
mov
iret
lock
adc
rcr
push
or
adc
xchg
scas
test
sahf
inc
fdivr
jmp
sbb
sar
and
jmp
shr
mov
clc
jo
aad
push
rcr
mov
imul
and
sub
push
add
or
jl
push
push
fwait
mov
and
mov
shr
adc
pop
push
(bad)
or
dec
inc
sbb
test
inc
xor
cs
dec
dec
cbw
aaa
inc
cld
dec
inc
sbb
and
fstp
dec
enter
out
daa
sbb
ror
sar
nop
fwait
les
jle
lock
inc
jle
mov
jae
cld
inc
lds
inc
fcomp
dec
outs
enter
sbb
repnz
xor
cs
stos
sub
dec
(bad)
div
cli
adc
outs
nop
xor
ss
and
adc
cmp
jno
mov
mov
jg
ja
add
(bad)
xchg
movs
call
cmp
xchg
aad
sub
in
jo
push
fcom
pop
dec
stc
addr16
inc
rcl
xchg
fadd
mov
lea
fst
jmp
mov
in
out
shr
retf
in
call
repnz
mov
leave
lea
int
push
scas
inc
loopne
adc
xor
movs
push
jg
inc
in
push
pop
sbb
sub
lods
or
mov
sub
cmp
(bad)
jo
pop
and
and
push
mov
cmp
cmps
je
mov
outs
jae
pushf
addsubpd
adc
sbb
scas
add
cmps
sub
rol
sti
sub
out
out
cmp
and
lods
inc
add
cwde
dec
pushf
mov
jno
sbb
test
lahf
sub
sahf
jle
adc
aam
push
cdq
retf
jae
bound
jae
sub
sbb
or
lock
lods
hlt
stc
mov
mov
repz
enter
dec
add
pop
ja
cli
cmp
loop
loop
arpl
or
mov
sub
call
lahf
les
fmul
or
(bad)
pop
(bad)
adc
push
jge
mov
popw
push
mov
ins
push
xchg
enter
adc
cli
xchg
fwait
mov
pop
mov
ret
aad
sbb
or
loope
cmp
(bad)
adc
in
fdivr
adc
repz
int3
cmp
dec
lock
add
out
lea
in
jl
mov
(bad)
and
jnp
mov
jg
mov
loopne
out
lock
add
(bad)
call
xlat
dec
pop
sub
add
sar
adc
(bad)
repnz
das
inc
imul
(bad)
mov
mov
lods
aaa
inc
adc
aaa
xlat
loop
push
loopne
ret
cmps
pop
pop
pop
dec
adc
cmps
cmps
cmps
cmp
sbb
cld
inc
imul
into
push
fstp
dec
(bad)
repz
clc
fstp
lods
jmp
cs
retf
popa
(bad)
scas
cld
cmps
(bad)
out
jae
inc
xor
mov
dec
inc
test
jmp
jb
xor
jb
sub
(bad)
and
inc
arpl
dec
dec
(bad)
xchg
sahf
xor
pop
cmp
shl
mov
cwde
xor
lods
jmp
je
xor
dec
lock
fdiv
lods
or
enter
cmp
cmc
or
jg
mov
pop
jno
push
or
scas
fistp
imul
mov
mov
pop
mov
add
dec
ror
xlat
jbe
adc
or
ss
lds
xchg
push
xchg
(bad)
arpl
xor
ins
pop
stos
mov
inc
aam
es
adc
cmp
add
scas
cli
xchg
xchg
stc
sub
repz
pop
movs
sbb
xchg
stos
pop
push
mov
loopne
mov
jp
retf
jne
cwde
das
movntq
xchg
adc
mov
push
cmp
daa
lods
shl
gs
ins
cwde
sub
stos
(bad)
test
rcl
cld
ret
test
pop
retf
pop
jo
loopne
sbb
jle
hlt
in
imul
imul
jge
add
inc
mov
or
and
mov
mov
cmps
xor
cdq
mov
test
scas
dec
mov
mov
mov
mov
dec
mov
mov
mov
xor
xor
xchg
test
retf
mov
sub
pop
aad
sub
inc
mov
jmp
and
test
cmp
cmp
push
cs
cwde
out
jle
xor
jno
sahf
xchg
(bad)
and
xor
sbb
outs
vpminub
jnp
mov
cwde
jecxz
ja
dec
sub
mov
dec
shr
lds
sub
dec
pop
lahf
inc
test
sar
cmpxchg
ret
out
xor
popf
pop
push
fsubr
out
mov
pop
mov
mov
push
sub
xchg
jno
mov
(bad)
out
xlat
iret
and
jnp
pop
pop
fcmove
push
les
mov
lahf
pusha
bound
sbb
jg
or
iret
or
jns
lock
jmp
xor
es
ret
mov
int
pushf
iret
(bad)
jge
cmp
sub
adc
mov
push
inc
xor
(bad)
cmp
cmps
add
or
mov
mov
cmp
and
inc
push
or
call
(bad)
add
xchg
loopne
mov
pop
cmp
mov
iret
sbb
jbe
and
cmps
pusha
test
mov
mov
push
pop
cmp
mov
pop
nop
loop
add
xchg
popf
test
sbb
mov
xchg
or
retf
data16
fstp
(bad)
call
or
data16
mov
xchg
fs
test
mov
cld
sti
sub
sub
jecxz
dec
cmp
movs
jns
mov
jmp
movs
icebp
jecxz
xchg
les
ror
test
in
or
ds
jecxz
call
popf
mov
and
test
nop
mov
pop
ja
xchg
aaa
mov
(bad)
in
jmp
dec
(bad)
test
hlt
inc
leave
and
mov
push
xchg
mov
je
lea
(bad)
ds
pop
call
dec
inc
jnp
mov
das
lods
push
pop
push
mov
add
pop
add
sub
sar
aaa
arpl
popf
repz
inc
into
aam
out
fidiv
dec
loope
and
xor
out
(bad)
and
repz
lahf
adc
cmp
lahf
or
inc
repnz
fst
icebp
mov
sti
fmul
sbb
push
sub
stos
inc
je
xchg
stos
test
popa
mov
inc
cwde
(bad)
push
aaa
rcr
add
and
aad
xchg
adc
(bad)
or
adc
adc
maskmovq
idiv
dec
cmp
(bad)
and
push
test
mov
movs
jg
out
xor
mov
jno
aas
mov
add
(bad)
jle
dec
jecxz
dec
loop
xor
cs
sbb
push
jl
and
popa
out
xor
pop
aad
pop
add
call
(bad)
push
jge
leave
jecxz
sub
addr16
mov
push
xchg
push
jmp
test
mov
repz
or
das
cdq
sub
lds
sahf
js
sub
adc
jge
fimul
cli
add
(bad)
cmp
sub
or
adc
xchg
cs
pop
jb
ins
push
cmc
sub
and
ret
ss
jmp
mov
call
fs
cmp
cmp
or
dec
ret
fidiv
push
xchg
cdq
int3
call
cs
jb
mov
inc
mov
xor
push
and
lods
inc
sbb
(bad)
stos
test
punpcklbw
and
push
imul
cmp
pop
in
bound
in
push
(bad)
in
mov
fimul
xchg
jp
sbb
(bad)
scas
ja
ret
adc
xor
xchg
or
cwde
popa
das
inc
int3
into
jg
add
inc
push
push
adc
shl
or
or
add
adc
jbe
adc
fdivp
fdiv
and
jp
add
push
pop
mov
mov
pop
xor
mov
cmp
xlat
je
push
loop
test
or
xchg
into
mov
sbb
xchg
jp
mov
hlt
aas
cmp
bound
jne
fcom
push
or
sub
add
jns
out
ret
scas
dec
lea
inc
xor
sub
test
add
cli
cdq
out
je
jo
shl
movs
mov
add
scas
adc
leave
repz
mov
call
push
adc
pop
adc
jnp
out
push
fidiv
push
sbb
fdivrp
xchg
loop
or
std
rcr
pop
dec
cmp
xor
imul
mov
aam
out
sahf
call
movs
enter
scas
mov
mov
scas
mov
das
and
adc
jns
lds
xchg
jge
ret
mov
jns
rcl
xchg
inc
std
or
cmp
push
ins
pop
xchg
imul
loop
xor
or
xchg
movs
retf
xchg
xchg
popa
fdiv
enter
mov
inc
and
or
mov
inc
daa
sub
adc
xchg
dec
pusha
jo
call
imul
cs
in
or
rcr
sahf
mov
dec
inc
cmp
dec
add
sub
xlat
sbb
cmc
cld
(bad)
jmp
pop
retf
fwait
imul
aaa
ss
into
mov
xchg
mov
imul
ds
sar
popf
scas
mov
and
outs
cmp
xchg
cdq
out
add
or
mov
mov
inc
cli
and
test
cmp
pop
xchg
ins
pop
(bad)
add
sbb
mov
mov
fdiv
call
push
push
xchg
xor
cs
push
or
imul
xor
test
les
rol
popf
mov
out
repz
icebp
mov
push
dec
jae
dec
sbb
rcr
std
jmp
sbb
mov
int3
xchg
fisub
ds
or
inc
xchg
push
xor
push
cdq
jl
adc
out
adc
xor
aam
leave
call
sbb
lds
retf
mov
mov
push
xchg
mov
test
stos
xor
(bad)
push
dec
addr16
inc
es
add
aam
mov
pop
(bad)
bound
fsub
xor
out
xchg
push
aas
cmps
xchg
dec
jno
mov
stos
scas
dec
xor
mov
enter
xor
loope
cmps
mov
lods
mov
mov
xor
inc
jne
cmp
retf
push
jl
jg
pop
fwait
or
cs
(bad)
pop
stc
push
outs
jno
mov
cmps
retf
cmp
pop
xchg
dec
mov
jnp
cmp
int
inc
je
jg
inc
mov
je
scas
inc
retf
sbb
push
out
pop
push
add
or
icebp
and
iret
test
ins
jecxz
and
jecxz
aaa
xchg
stos
sub
sub
leave
add
sub
jg
ja
imul
dec
mov
pop
jb
mov
adc
mov
idiv
ins
enter
imul
xchg
lods
outs
xchg
pop
xchg
aaa
adc
in
popf
je
mov
mov
fcmovbe
call
cmp
cmp
sub
jne
fstp
xchg
daa
imul
dec
fimul
test
jns
ins
jo
rcl
inc
add
imul
movs
cld
daa
adc
ja
cld
inc
loop
add
mov
push
pushf
fnstsw
into
loopne
mov
int3
xchg
xchg
mov
jg
fstp
and
js
clc
pop
sbb
push
mov
jno
fdiv
mov
stc
push
fsubr
cmps
clc
mov
xchg
push
popf
push
adc
cwde
cmp
jno
mov
setbe
aad
out
test
mov
sahf
push
mov
and
pop
fstp
sahf
stos
inc
jge
fwait
jbe
mov
push
(bad)
jl
out
xchg
push
xchg
and
inc
dec
jp
cmp
push
(bad)
(bad)
mov
push
sub
sub
ins
aaa
jmp
stc
pop
test
(bad)
enter
(bad)
jg
aad
enter
and
sub
(bad)
ds
aad
pop
jae
inc
push
mov
into
push
xchg
enter
leave
push
jl
add
call
pop
es
es
movs
rol
push
cs
nop
and
mov
or
sbb
push
mov
or
add
inc
or
lods
pop
fwait
lods
aam
fbstp
adc
jb
sti
mov
iret
rcl
sbb
in
or
sbb
shl
pusha
cli
inc
mov
loop
(bad)
lds
out
jb
jns
pop
dec
fdiv
jge
push
inc
pop
outs
add
aad
cmc
jle
mov
pop
adc
adc
iret
mov
pop
in
out
in
imul
enter
pop
jmp
mov
cmp
adc
mov
jmp
mov
clc
inc
sahf
jmp
les
or
icebp
mov
icebp
xchg
mov
fsub
mov
int
push
dec
push
inc
pop
jp
pop
repz
sar
sbb
loopne
cmc
add
cmps
sub
push
cmp
stos
adc
adc
or
mov
mov
loope
scas
dec
out
cdq
movs
jo
fimul
pusha
dec
pusha
pop
imul
adc
fcomp
js
mov
daa
scas
mov
cld
outs
or
stos
and
ror
arpl
xchg
or
in
rcl
jbe
add
push
or
xor
mov
mov
add
mov
push
add
adc
scas
test
outs
sub
xor
(bad)
mov
adc
push
xchg
ss
clc
push
pop
cmp
rol
xchg
test
ins
lods
dec
movs
imul
pop
push
std
stc
cdq
mul
pop
cmp
xor
jne
in
repz
pop
fisub
idiv
lea
movs
rcr
ss
inc
call
(bad)
aas
shl
xchg
xchg
pop
and
clc
add
sbb
lods
(bad)
dec
xchg
fwait
fwait
lea
(bad)
cmps
push
out
aas
outs
jae
adc
push
mov
mov
push
mov
out
loop
clc
mov
outs
sub
and
sbb
inc
jg
rcr
scas
sub
jo
outs
pop
pop
push
in
(bad)
jmp
clc
sar
add
ret
scas
mov
cmp
adc
sbb
lock
sbb
pop
arpl
hlt
mov
push
mov
outs
inc
sub
cld
std
leave
push
jp
hlt
adc
push
popa
ins
mov
pop
outs
cwde
pop
sti
xor
das
adc
imul
rcl
cwde
rol
dec
adc
(bad)
sti
xor
cmpxchg
dec
aam
cmp
int3
jns
xor
push
cmp
fld
xor
adc
mov
lea
loope
and
shr
data16
xchg
ss
popf
daa
shl
adc
sbb
mov
and
or
push
sbb
sahf
test
cld
(bad)
ja
repnz
inc
aad
mov
cmps
inc
adc
or
or
sbb
push
pop
arpl
pop
fld
adc
or
cmps
sti
sbb
mov
shl
repz
sub
xlat
lahf
mov
inc
push
clc
push
mov
xor
imul
gs
cwde
jnp
push
loopne
inc
xlat
mov
cli
sbb
inc
jge
ret
adc
mov
xchg
or
int
dec
xor
push
add
sub
popf
packsswb
aam
cmp
add
js
pop
or
jo
sbb
jmp
(bad)
lock
aam
arpl
adc
or
arpl
add
or
sub
popf
xchg
push
test
sar
mov
mov
loop
ins
inc
add
jecxz
add
jl
lahf
shl
test
mov
movs
addr16
ins
sub
dec
dec
inc
inc
sub
xor
mov
mov
push
add
dec
or
sub
nop
inc
adc
(bad)
neg
push
mov
or
mov
in
dec
leave
sub
stc
test
mov
shr
out
jg
push
sub
sbb
pop
daa
mov
cmps
mov
push
sahf
movs
or
addr16
add
sar
adc
ficomp
out
xor
mov
popa
cdq
js
sub
adc
pushf
sbb
adc
lods
xor
pushf
pop
loopne
adc
cmps
push
jp
and
dec
clc
pop
rcl
jg
cmp
push
or
jns
xchg
je
jg
or
xchg
popa
sbb
and
mov
loopne
adc
rcl
in
cmps
or
and
test
jno
jae
jmp
xchg
jmp
dec
sbb
and
adc
jns
cs
adc
jbe
fisttp
out
(bad)
clc
(bad)
aad
mov
jp
pop
mov
mov
jmp
mov
test
movs
xchg
cs
dec
sbb
mov
(bad)
sar
call
lahf
outs
xor
sbb
in
mov
cs
pop
cmps
rol
stc
mov
jbe
adc
nop
lock
fist
in
jns
and
and
xor
mov
mov
push
hlt
sub
xchg
or
mov
and
stos
icebp
jae
sub
sahf
out
mov
jmp
ins
retf
std
push
test
cwde
in
jnp
addr16
ins
cmc
in
sbb
or
ror
dec
xchg
outs
xchg
xor
mov
and
xor
mov
ins
cs
mov
jp
jmp
stos
dec
pop
in
ins
xchg
inc
mov
js
pop
arpl
bound
sbb
ds
jnp
stos
mov
xchg
or
xchg
xor
jmp
imul
push
mov
xor
sub
sub
pop
jmp
pushf
add
in
js
cmps
sub
push
or
xchg
sbb
pop
enter
fst
retf
es
sub
shr
call
pop
aam
or
sub
shl
jmp
push
icebp
es
adc
jnp
mov
popa
scas
sub
popa
outs
xor
xor
adc
cmp
(bad)
outs
xchg
fisttp
mov
icebp
and
mov
retf
loop
jmp
dec
(bad)
xor
sbb
adc
xor
sbb
pop
sub
xchg
out
inc
test
repz
xchg
xchg
mov
adc
pop
mov
and
lea
xchg
imul
sbb
jmp
pushf
jg
push
repz
icebp
outs
push
add
lock
xchg
(bad)
xchg
into
lds
in
call
leave
(bad)
scas
aam
addr16
xor
cmp
pop
mov
scas
cmp
mov
xor
pop
jp
sub
add
sbb
xor
lahf
out
movs
mov
arpl
jnp
pop
sti
je
inc
mov
(bad)
rep
xchg
xchg
cmp
xor
jmp
(bad)
fdiv
(bad)
jo
pop
and
(bad)
sbb
jl
rol
lock
xchg
sbb
cmp
dec
or
dec
push
mov
xor
aaa
rol
push
dec
mul
std
dec
push
loop
lock
aam
stos
dec
lea
ror
ja
popa
xchg
pusha
cmp
xchg
(bad)
cmp
mov
movntq
out
push
push
into
push
repnz
hlt
call
mov
repnz
inc
hlt
inc
inc
dec
push
and
fistp
adc
cmp
mov
mov
ret
retf
mov
and
mov
into
and
jns
test
mov
cmc
fidiv
sub
call
les
mov
fnstenv
mov
pop
retf
dec
sub
jecxz
scas
cmp
ret
mov
adc
push
mov
xchg
cmp
mov
and
inc
xor
movs
imul
jmp
dec
add
pusha
cmps
enter
repz
mov
cmp
stos
or
test
cmp
ror
(bad)
std
or
cmp
in
cmp
fiadd
mov
and
push
push
movs
jmp
(bad)
retf
loopne
lock
xor
jge
bound
pop
fiadd
outs
push
aas
adc
inc
sti
jmp
mov
repnz
pop
addr16
xor
pop
popa
js
pop
lods
enter
adc
data16
jns
fdivr
sub
mov
test
push
fstp
add
jo
sbb
in
leave
ret
shr
aam
push
shr
mov
cmp
pusha
mov
call
enter
dec
dec
arpl
xchg
cwde
sbb
arpl
push
cmp
xchg
cli
push
cwde
loop
push
jecxz
pusha
outs
sub
jp
jnp
lds
xchg
aam
call
mov
es
push
data16
lock
xor
out
out
jge
jb
loope
xor
or
adc
aas
cld
js
test
or
lahf
push
xchg
dec
dec
cdq
mov
into
xor
inc
test
mov
test
jmp
or
push
push
dec
add
or
add
mov
inc
mov
xlat
push
mov
mov
add
cld
das
xor
sub
push
adc
xor
enter
fs
sbb
aas
data16
xchg
push
add
or
adc
jno
cmp
jne
shr
ror
data16
test
inc
xchg
inc
xchg
repz
jmp
outs
ja
mov
xchg
out
push
xchg
dec
leave
cmp
push
mov
sub
imul
xchg
push
dec
cwde
pop
inc
call
ror
pop
jb
sub
js
jl
ss
(bad)
xchg
cmp
jns
push
leave
adc
xchg
xchg
xor
pop
mov
xchg
add
or
fimul
add
(bad)
add
jp
cld
push
(bad)
mov
mov
ficom
mov
xlat
fs
loop
cld
in
jmp
lahf
push
sub
add
fsub
xor
cmp
sub
(bad)
in
xchg
sbb
aaa
out
add
mov
pusha
enter
ins
pop
popf
sbb
jne
mov
xor
sbb
xchg
jbe
imul
shl
fmul
adc
sbb
(bad)
(bad)
popf
ss
inc
sub
push
or
jle
fisttp
loope
movs
aas
cmp
repz
repnz
je
rcr
dec
stos
inc
push
lods
add
mov
pop
mov
jne
setle
fcomp
xchg
dec
popf
repnz
xor
(bad)
sbb
pop
or
aam
dec
shr
loope
div
sahf
mov
sahf
mov
daa
ds
mov
movs
xchg
or
in
in
mov
arpl
fisttp
pop
outs
lds
scas
pop
(bad)
pusha
cmp
cdq
sub
iret
es
xor
xor
mov
retf
fild
cld
sub
sub
mov
sub
and
cmp
rol
xor
outs
scas
and
aam
in
(bad)
jo
xchg
adc
out
pop
adc
icebp
xchg
pop
pop
lds
add
pop
and
push
gs
(bad)
jnp
(bad)
imul
fxch
pop
dec
(bad)
in
inc
hlt
push
out
popf
shl
and
sbb
out
fbstp
pop
repz
sub
and
call
sub
dec
jp
call
pop
xor
leave
mov
fadd
mov
stos
loope
jg
cmp
repz
jge
cmp
data16
dec
into
in
fdivr
in
adc
test
addr16
inc
lock
jo
mov
pop
cmps
nop
sbb
mov
inc
mov
data16
xchg
cld
pop
retf
mov
jl
(bad)
(bad)
cli
xlat
mov
jle
xchg
jnp
cmp
test
fcmovnu
mov
iret
iret
sar
int3
sahf
mov
lds
mov
add
mov
pop
jg
sub
into
jmp
adc
mov
mov
add
imul
mov
pop
paddusw
mov
jmp
in
xor
add
ja
xchg
cmps
inc
rcr
push
lea
jp
pop
mov
pop
xchg
dec
test
inc
or
ins
out
jo
xlat
fs
loope
icebp
data16
icebp
xor
test
push
sahf
test
cdq
and
xchg
cmp
jnp
icebp
and
jo
rcl
mov
ja
mov
fiadd
shr
xor
lock
daa
push
mov
scas
test
xor
xlat
je
mov
xor
adc
std
push
lods
ds
into
stos
mov
repnz
loopne
lahf
aam
inc
push
lods
ins
mov
std
push
mul
(bad)
mov
xchg
xor
lea
std
(bad)
ja
arpl
jne
mov
mul
(bad)
cli
mov
in
inc
shl
or
ss
out
add
or
pop
in
or
cld
push
cmovl
sbb
std
das
fld
movs
add
dec
add
jg
sbb
add
push
pushf
or
sub
(bad)
adc
and
and
in
push
mov
iret
adc
dec
test
jmp
sub
fwait
mov
adc
add
stos
shr
psrlq
and
popf
jg
mov
pop
in
gs
ror
(bad)
sahf
test
adc
sub
rol
pop
mov
inc
lods
adc
mov
es
cmp
loope
adc
cs
jno
add
or
xor
(bad)
fwait
push
fcomp
lahf
and
scas
jge
mov
adc
jle
sti
leave
and
das
xchg
fmul
lahf
sbb
cmps
test
in
call
or
repz
retfw
lods
pusha
cmp
js
xchg
jnp
cmp
rol
jmp
cli
stos
movs
push
retf
adc
push
mov
adc
in
stos
sbb
leave
dec
mov
stos
int
out
sbb
nop
dec
in
jns
pop
jnp
mov
popa
fcmovne
dec
push
jo
mov
push
and
add
jo
scas
mov
ja
les
out
push
stc
adc
in
dec
(bad)
bound
fld
daa
iret
jle
addr16
int
int3
mov
sub
das
sub
pop
jns
xchg
mov
adc
scas
pop
dec
jmp
in
shl
mov
jmp
daa
inc
mov
jne
add
jb
sub
inc
inc
retf
mov
pmaxub
repnz
outs
inc
clc
or
sahf
out
sti
adc
out
jne
int3
adc
sti
or
shr
ret
ret
or
jae
xor
xor
xchg
cli
sub
push
adc
ror
cwde
add
xor
mov
shl
push
fadd
add
and
jne
(bad)
(bad)
sub
int3
loope
cmp
frstor
mov
cmp
addps
fidivr
int
cmps
dec
test
ret
or
loopne
xchg
xlat
sbb
push
jmp
outs
or
xor
in
sbb
rol
sti
mov
dec
(bad)
lock
aas
jecxz
push
in
pop
(bad)
mul
add
sub
adc
add
movs
push
xchg
xor
xchg
adc
in
lahf
movs
dec
das
or
aam
push
adc
mov
jecxz
push
in
cwde
cdq
mov
xor
inc
xor
ficom
jl
dec
mov
movs
cmp
enter
and
or
dec
add
hlt
xchg
jle
dec
jecxz
jne
mov
xchg
xor
add
in
fs
mov
sbb
and
ins
sub
sub
ret
(bad)
pop
ja
popf
mov
mov
cwde
pushf
xchg
sbb
sti
jno
inc
add
mov
and
aad
add
call
bound
adc
push
or
sub
lods
std
in
and
xor
fnstsw
lods
int3
stos
add
xchg
int
sbb
cdq
xlat
ss
push
cli
in
pop
and
cmc
outs
pop
or
(bad)
(bad)
sbb
push
mov
sti
addr16
jle
mov
xlat
stc
into
sbb
sti
mov
outs
cmps
mov
mov
mov
ins
mov
pop
push
mov
fcom
lock
shl
retf
lahf
out
cmp
leave
or
dec
xor
mov
jne
cmp
out
sbb
mov
add
enter
xchg
push
add
add
adc
fist
pop
retf
daa
scas
or
mov
sub
dec
dec
sub
outs
fistp
das
mov
and
pop
pushf
inc
outs
xchg
fwait
outs
xor
das
movs
ret
inc
retf
enter
lods
rcr
adc
mov
imul
sti
xchg
sub
in
or
add
(bad)
call
and
inc
rcl
mov
or
cld
enter
outs
out
fadd
jmp
xor
cmps
xor
mov
ret
mov
jmp
push
mov
add
mov
arpl
scas
push
aas
enter
inc
loope
inc
lahf
ds
es
rcr
mov
mov
pop
retf
hlt
cmp
cmp
jno
(bad)
cmp
pop
daa
mov
push
retf
std
nop
aaa
xor
push
sbb
ret
vmovntpd
sbb
cwde
push
inc
xchg
sbb
das
add
mov
pop
adc
push
cmp
mov
aad
leave
pusha
ja
cs
inc
sbb
rcl
xchg
aas
fidiv
sahf
mov
fwait
out
dec
cwde
(bad)
pop
retf
dec
jno
jg
mov
mov
push
push
mov
adc
fld
sti
xchg
and
jmp
or
call
fnstcw
xchg
lahf
aas
pop
push
dec
in
data16
test
mov
dec
push
xchg
sbb
xchg
jl
test
lahf
pop
and
mov
xchg
pop
xchg
and
xchg
cdq
(bad)
aam
arpl
xchg
sahf
fs
ret
xor
inc
es
sub
jl
test
loop
and
imul
fs
test
imul
sub
call
and
mov
xchg
lahf
push
out
je
scas
cwde
lods
or
sub
mov
mov
inc
add
mov
mov
outs
mov
test
ins
mov
imul
mov
mov
(bad)
ret
xor
mov
imul
jns
ins
mov
or
adc
stc
hlt
sub
test
mov
repz
mov
push
and
pusha
mov
and
push
aam
pop
push
push
mov
inc
and
or
stc
sar
or
or
rcr
and
cmp
adc
cld
ja
push
jno
dec
mov
movs
cmp
xor
loopne
int
rol
mov
push
add
sub
mov
gs
mov
adc
push
cmps
sub
loope
push
sbb
aas
popa
mov
mov
loopne
jmp
xchg
cmp
cmps
pop
loopne
repnz
xor
sbb
dec
push
repz
sbb
mov
cmp
stos
imul
int
inc
call
aaa
retf
mov
push
inc
jae
out
xchg
in
mov
mov
pop
scas
mov
push
leave
mov
lahf
mov
lahf
daa
mov
ins
or
jno
xchg
ret
sub
inc
jle
add
add
jno
std
push
sbb
(bad)
mov
cmp
fst
clc
push
or
sbb
cmp
inc
pop
cdq
and
in
in
sbb
fmul
popf
aaa
push
cmp
retf
jge
test
pop
xor
sub
js
xlat
and
pop
pop
scas
inc
inc
mov
xor
jnp
jp
(bad)
repnz
(bad)
jno
jmpw
push
mov
adc
pop
jns
mov
and
das
jp
jmp
mov
or
mov
aaa
addr16
jnp
into
push
xor
cmc
dec
pop
into
push
cmp
mov
push
pop
xchg
out
jmp
imul
es
push
lods
mov
pop
sbb
je
outs
lock
(bad)
outs
(bad)
in
ficom
aaa
sbb
jmp
movs
ret
jno
or
push
out
inc
in
jnp
mul
dec
(bad)
(bad)
xor
mov
pop
add
ja
into
and
jns
imul
add
loop
stos
and
repnz
mov
jge
fcmovnu
push
lock
lods
cmp
mov
arpl
sbb
out
mov
xor
adc
add
xchg
loop
add
pop
cmps
cmc
mov
xor
cmp
xor
xchg
jg
sbb
fnsave
aaa
inc
(bad)
das
stos
jl
inc
int
int3
adc
pop
rol
repz
div
sahf
mov
push
cmp
test
fwait
loopne
dec
xor
or
cdq
pop
and
and
retf
dec
ds
das
cmp
sbb
out
in
icebp
ret
(bad)
out
cwde
imul
fiadd
loope
or
out
fucomi
adc
inc
scas
int
mov
enter
xchg
std
jl
in
mov
add
pop
push
inc
rcr
hlt
(bad)
aas
mov
stc
cmp
jl
int
mov
inc
adc
aas
(bad)
sbb
cld
fsub
stc
jae
sub
mov
and
mov
invd
scas
and
cli
pop
add
xchg
or
adc
push
sbb
(bad)
jno
inc
paddusw
pop
mov
pop
nop
addr16
mov
sbb
inc
les
sbb
ja
cmp
(bad)
or
test
addr16
cmps
aam
lock
mov
mov
fbstp
call
push
iret
stc
stos
popf
das
jno
jno
pop
neg
or
mov
mov
pop
or
push
pop
gs
adc
add
push
mov
add
dec
icebp
xchg
repz
adc
in
xchg
aam
gs
loope
mov
mov
call
into
mov
scas
inc
dec
imul
cs
push
ja
lds
or
pop
in
outs
xchg
xchg
mov
jns
push
mov
push
out
cmp
add
stos
or
fld
pop
add
ins
cs
add
adc
enter
int
dec
sub
dec
or
jmp
aas
jl
mov
sub
dec
mov
(bad)
je
cmp
dec
jle
mov
push
inc
or
inc
int3
cmp
bound
bound
cmc
les
cmc
test
inc
mov
mov
cmps
inc
repnz
stc
mov
es
aas
push
int
sbb
shr
movs
out
mov
test
add
out
mov
out
enter
xor
jae
cmp
or
int3
stos
jbe
add
mov
adc
loop
dec
mov
std
test
loopne
ins
and
pop
add
stos
mov
adc
mov
sbb
icebp
jl
call
mov
imul
push
daa
and
scas
mov
add
mov
mov
cmp
int
inc
jae
sbb
jl
mov
not
mov
loop
cmp
mov
cmp
sbb
or
mov
std
ds
fimul
xchg
aad
jmp
pop
jecxz
and
jb
inc
xor
push
data16
or
sahf
sbb
fistp
mov
rcr
fs
jbe
outs
loopne
xor
or
sbb
dec
sbb
es
loopne
push
bound
imul
jp
test
sub
scas
fisubr
jbe
pop
and
push
jmp
mov
test
and
pop
addr16
push
xchg
xor
test
mov
ds
mov
push
dec
adc
jb
adc
cs
dec
cmps
daa
adc
sub
jmp
(bad)
out
mov
and
(bad)
and
push
test
jecxz
fs
jbe
adc
and
and
dec
clc
and
fdiv
movs
repz
cmp
call
inc
sub
loop
iret
bound
(bad)
rol
pop
aad
cmp
test
cli
mov
out
into
dec
sub
aad
sbb
je
cs
push
ds
pop
push
and
cmps
adc
arpl
ror
cli
popf
outs
cli
clc
mov
adc
lock
addr16
retf
dec
ret
loope
jle
daa
cmp
rcr
(bad)
outs
sti
fdivr
mov
sbb
jne
mov
dec
xor
add
popf
add
mov
push
imul
pusha
add
mul
inc
repnz
mov
xor
mov
cmp
inc
gs
repz
fs
add
cs
rcr
mov
dec
dec
(bad)
call
mov
mov
in
xlat
and
in
mov
fcom
and
pop
test
repz
push
fwait
and
scas
lods
dec
xchg
lahf
mov
dec
mov
dec
mov
xchg
sub
cmps
adc
jnp
scas
cmp
into
jmp
ret
stos
test
sahf
mov
mov
repz
mov
add
pop
mov
push
dec
call
push
sbb
sub
ds
sub
cld
sub
mov
push
cmp
gs
xchg
push
cmp
adc
ins
(bad)
rol
cs
rcl
lods
clc
and
mov
pop
jnp
push
xchg
stc
imul
data16
xor
push
ficomp
mov
sub
jge
push
test
and
mov
aam
lods
mov
scas
lds
sub
test
cli
iret
inc
and
leave
fptan
test
popa
dec
retf
cld
xor
loop
or
int
xor
mov
jle
movs
fnstenv
pop
shr
adc
jns
cmc
repz
shl
inc
mov
pushf
je
sbb
pop
cmp
sbb
sbb
push
jae
pop
repz
mov
neg
cdq
adc
jge
xchg
cmp
bt
xchg
(bad)
xchg
hlt
xor
push
mov
cmc
loope
(bad)
push
add
dec
lods
movs
and
js
scas
jne
xlat
std
xchg
xor
jg
in
clc
jo
push
add
out
arpl
cli
lods
sub
dec
stos
jbe
lock
jnp
mov
pop
add
push
push
imul
in
fwait
xor
fimul
cmp
int3
jp
xchg
mov
ins
push
jno
mov
jns
mov
enter
adc
das
adc
pop
jmp
dec
xchg
daa
shr
movs
lods
mov
cs
sbb
push
pushf
fiadd
stc
(bad)
test
add
hlt
(bad)
retf
sub
jbe
fwait
shl
dec
out
test
xchg
sahf
pop
adc
das
adc
arpl
mov
add
je
gs
sbb
pop
aas
pop
aam
push
inc
mov
add
jmp
xchg
inc
mov
aaa
in
sub
dec
lds
xchg
pop
mov
or
cs
out
adc
outs
push
mov
data16
or
pop
jp
(bad)
cmps
iret
cs
mov
pop
sbb
(bad)
std
ss
in
push
int
dec
pop
sub
or
sti
and
pop
fmul
or
ror
ds
mov
sbb
int3
mov
dec
xchg
pop
mov
cmc
idiv
mov
xchg
lods
add
ret
sub
sahf
stos
jnp
add
aad
sti
es
fwait
or
push
mov
or
dec
inc
les
or
or
or
ja
loope
push
retf
xchg
repz
mov
rcr
int
push
push
push
cmp
add
mov
adc
loope
mov
xchg
call
sub
xchg
ror
stos
not
jb
or
mov
fadd
mov
mov
sub
jne
out
and
std
movs
and
jp
cmp
mul
ss
sub
aaa
jmp
or
pop
push
cmp
xlat
sub
xchg
push
cmp
aam
xor
push
cli
out
mul
enter
mov
xchg
out
sbb
call
enter
push
sbb
mov
(bad)
fild
je
aam
jecxz
adc
ins
push
dec
sahf
dec
es
clc
pop
mov
out
and
adc
sbb
int3
fnstenv
pop
ins
push
test
stc
push
or
mov
pop
xor
out
jle
scas
out
jb
fwait
and
(bad)
pop
ds
(bad)
je
mov
and
iret
popa
ss
push
aam
lods
push
sub
cdq
jg
xor
call
pushf
add
pop
scas
or
pop
in
out
jp
arpl
xor
or
fisttp
sub
mov
sbb
xchg
or
sub
sahf
dec
and
add
lods
pop
xchg
jo
xor
es
xor
dec
sbb
xchg
cdq
loop
mov
push
mov
push
mov
(bad)
or
icebp
add
cmc
mov
push
bound
cmc
dec
dec
pop
inc
mov
mov
ins
push
mov
stc
(bad)
call
pop
lahf
mov
xchg
or
dec
mov
mov
push
sar
dec
dec
add
in
xor
inc
lds
xchg
fcom
ja
dec
push
xchg
push
add
in
mov
addr16
call
mov
push
sub
call
(bad)
pop
aaa
inc
je
dec
mov
lahf
out
bsf
inc
jne
ja
cli
xor
ds
xchg
and
xchg
test
lea
lods
sub
popf
or
cwde
mov
and
mov
pop
xor
or
sbb
xor
loop
sub
loope
in
mov
cli
test
popa
les
cdq
idiv
pop
adc
xor
pop
cmp
or
in
adc
jge
cmp
jmp
jge
dec
aad
cmps
lods
mov
enter
movs
dec
jp
test
arpl
sbb
inc
fcmovbe
(bad)
aam
outs
mov
outs
mov
xlat
stos
sbb
dec
and
out
cmp
int
jns
sub
mov
or
fwait
inc
jg
cld
or
inc
imul
mov
fnstcw
dec
imul
movs
loop
pavgw
mov
lahf
clc
jbe
js
ins
push
add
int
jl
xchg
ficom
(bad)
add
jecxz
push
into
jmp
cmp
mov
icebp
jle
clc
mov
mov
ror
lahf
ror
xchg
pop
xchg
push
test
ds
jmp
mov
iret
mov
push
jmp
adc
and
mov
gs
xchg
(bad)
cmc
fiadd
clc
lods
or
imul
push
xor
cmc
test
in
mov
cld
sahf
ror
inc
add
js
cmp
jae
mov
jns
fld
push
fxch
mov
hlt
test
(bad)
imul
shl
ins
ror
popa
dec
push
out
stos
mov
outs
in
cmp
lods
xor
pop
and
(bad)
les
jnp
pop
mov
jp
ins
fxch
ret
stc
rcl
xor
xchg
repz
push
(bad)
cmp
into
lods
idiv
repz
or
adc
stos
(bad)
movs
pop
test
ret
(bad)
gs
lods
stos
not
sub
pop
push
stc
mov
imul
(bad)
popa
retf
pushf
not
sbb
(bad)
mov
pop
lahf
mov
inc
gs
fst
loopne
cmp
xchg
(bad)
or
(bad)
mov
adc
cs
mov
arpl
push
jnp
pushf
sbb
cmp
ins
dec
and
rcr
inc
das
push
call
hlt
xor
pop
mov
ja
sbb
es
sbb
movs
js
movs
mov
adc
das
(bad)
in
add
or
xor
xor
int3
les
pcmpeqd
in
inc
lock
stc
xchg
pop
shr
push
mov
stos
inc
in
and
dec
out
adc
dec
pushf
(bad)
push
scas
mul
pusha
je
repz
push
ins
icebp
repz
cmp
jecxz
or
jecxz
imul
movs
imul
sub
pusha
imul
leave
add
loope
mov
dec
mov
outs
mov
(bad)
fs
cmps
mov
aam
push
xor
sbb
test
mov
sbb
jo
xchg
enter
in
mov
arpl
cmps
push
std
mov
mov
imul
jo
in
mov
push
jbe
call
ins
cmc
xchg
bound
add
ins
fld
push
jb
ja
mov
mov
aas
(bad)
movs
jmp
mov
cmp
ds
int3
mov
xchg
xchg
xchg
mov
pusha
jle
imul
loop
push
cmp
adc
inc
stc
jg
sub
sub
add
nop
xor
mov
aas
dec
psllw
das
mov
push
mov
mov
xchg
fild
inc
jne
ins
mov
mov
(bad)
pop
sub
dec
ret
push
cli
push
dec
jo
jle
push
repnz
xchg
xor
je
pop
dec
mov
stos
shl
fsub
aaa
and
les
jbe
lahf
add
lods
pushf
arpl
dec
(bad)
(bad)
mov
mov
xlat
int
ret
mov
jno
jns
xor
es
movs
test
aad
lea
sub
fnsave
sub
scas
leave
or
(bad)
mov
jg
and
dec
dec
nop
(bad)
icebp
std
lods
adc
jbe
sbb
inc
add
cdq
sub
lahf
sub
call
mov
mov
inc
jmp
hlt
ds
mov
retf
mov
mov
adc
mov
cs
out
jno
jne
je
sbb
stos
adc
popa
out
dec
adc
jl
push
or
std
fist
icebp
mov
ins
test
jae
mov
inc
loope
mov
std
imul
cwde
shl
(bad)
xchg
mov
sub
dec
push
push
retf
jmp
sub
mov
enter
adc
add
cmp
call
lods
and
xchg
fiadd
popa
pop
mov
frstor
pushf
push
sub
cli
xlat
fsubr
dec
js
loop
adc
mov
mov
cmp
not
cmps
imul
push
or
(bad)
mov
push
cmc
repnz
fs
jnp
rcr
xor
or
(bad)
ins
pop
xchg
mov
stos
pusha
pusha
sub
and
mov
adc
dec
mov
add
into
fimul
mov
jp
inc
dec
test
(bad)
fld
add
imul
scas
lea
add
jae
cmp
outs
jl
cmps
test
sahf
in
clc
push
xor
int3
jecxz
and
adc
dec
xor
push
sahf
and
pop
data16
fs
add
imul
jle
ds
jecxz
jp
fs
pop
inc
fbstp
jg
xchg
out
push
(bad)
sbb
call
xor
jge
std
repz
dec
pop
cmp
int
(bad)
scas
xchg
and
push
aas
sub
les
(bad)
jmp
mov
mov
out
add
mov
jmp
and
sbb
cld
cmp
fisub
ret
pop
xor
or
add
mov
mov
xor
mov
add
jp
sub
push
jmp
xor
sbb
xchg
stc
(bad)
xchg
imul
ja
adc
ss
inc
sahf
add
mov
rol
mov
mov
mov
retf
inc
cmp
mov
xchg
inc
inc
add
sbb
pop
mov
int
or
aam
jmp
sub
jl
shl
(bad)
mov
js
and
or
add
xchg
cli
repnz
sub
sub
adc
jne
xchg
mov
not
in
and
dec
jmp
mov
loope
sub
(bad)
xor
inc
mov
cli
cmp
lods
mov
cld
jne
dec
jnp
retf
inc
xchg
mov
je
and
aad
sub
loopne
(bad)
jb
cmp
mov
pop
lds
hlt
fwait
mov
movs
fidivr
sbb
xor
push
sbb
and
nop
or
ss
sbb
mov
xor
lods
iret
pop
fnstenv
xchg
mov
xor
popa
jb
xchg
adc
mov
jne
jle
sub
sbb
loopne
fwait
push
mov
sahf
test
push
mov
jns
fwait
mov
mov
cmp
mov
or
mov
cmc
in
test
mov
xchg
adc
mov
xor
sub
shl
sub
add
imul
aas
repnz
test
gs
cmp
mov
fsub
and
push
cmp
push
lods
push
(bad)
sti
lea
fsubrp
mov
in
inc
test
lods
adc
out
jbe
fsub
sahf
inc
jmp
or
mov
int
inc
es
call
jne
loope
sbb
loope
mov
(bad)
ins
in
in
push
scas
inc
or
sahf
repz
or
ss
(bad)
rcr
int3
sub
rcr
cld
call
idiv
mov
out
jnp
int
adc
inc
xacquire
xchg
call
jae
dec
jo
push
xchg
aaa
inc
call
into
inc
pop
mov
push
outs
xor
jne
adc
icebp
lock
push
out
jne
(bad)
int
mov
xchg
int3
ins
sub
out
pushf
movs
cli
test
push
or
dec
fdivr
aam
ss
and
sub
cmp
ret
(bad)
cmp
push
jns
adc
int3
mov
ss
mov
xchg
int
sbb
and
sbb
pusha
xor
je
xor
sub
and
stc
jbe
xchg
mov
cdq
inc
pop
push
in
mov
sub
test
and
sahf
xor
pop
(bad)
pop
cli
pop
add
mov
lods
int3
sub
addr16
lods
rcr
es
in
int3
jecxz
mov
cmps
stc
(bad)
leave
outs
fwait
pushf
sbb
dec
push
mov
xor
jge
or
in
adc
jecxz
push
daa
mov
or
fcmovnu
fst
fiadd
pop
jno
push
and
jmp
cmp
daa
inc
nop
popa
pop
fiadd
sub
add
add
xchg
jbe
and
rcr
shl
aam
sbb
mov
jecxz
scas
xchg
xchg
mov
jb
xor
lahf
push
out
clc
push
pop
out
je
test
jo
jne
mov
cld
jo
addr16
mov
pop
lea
aad
pop
inc
mov
out
retf
js
adc
and
pop
jg
add
cmc
xor
inc
int3
lods
ds
inc
pop
jl
adc
add
les
xor
dec
test
xor
xor
pop
icebp
inc
in
mov
clc
jmp
popa
xchg
es
push
ficom
mov
int
xor
fiadd
mov
addr16
lahf
inc
pop
mov
sbb
dec
inc
jl
mov
pop
iret
cmps
outs
popf
mov
jae
arpl
into
fwait
cmps
nop
mov
out
in
lea
xor
fucomp
adc
dec
inc
call
imul
mov
lods
mov
cmc
dec
jns
stc
sbb
mov
lahf
fs
jmp
call
(bad)
cmp
push
test
in
sub
aas
gs
cmp
popa
jl
inc
push
mov
mov
xor
push
fmulp
or
mov
cmp
es
dec
jmp
sbb
mov
cmp
aas
pop
ja
popa
add
cmp
mov
add
das
push
push
retf
inc
sub
fwait
or
dec
jmp
cwde
or
clc
jge
shl
add
out
mov
imul
pop
jle
or
mov
cld
rcr
fistp
cs
ret
ja
lds
es
cli
icebp
or
push
dec
test
int
out
fsubr
ret
aas
sbb
js
dec
aad
test
sub
inc
xor
mov
mov
ja
popa
call
sbb
pop
ret
lock
xchg
lock
data16
ret
xor
scas
test
mov
aam
pop
dec
cmp
dec
sahf
lahf
sbb
ins
add
arpl
mov
iret
lock
cmp
icebp
xor
sbb
xchg
sbb
test
mov
aam
sbb
imul
cmp
popa
out
sbb
or
jbe
gs
cmc
dec
xor
retf
inc
push
aas
push
dec
xor
ret
sbb
or
imul
in
aaa
aaa
or
add
cmp
dec
inc
add
cdq
iret
lahf
and
bound
pushf
das
lock
out
jae
cmp
leave
ja
adc
fsubp
sbb
cmc
jb
sbb
cmp
lock
inc
std
xor
or
mov
sbb
jmp
sbb
pop
mov
push
fisubr
dec
sub
ror
jb
jmp
out
shl
outs
add
imul
in
aam
lods
fwait
mov
jmp
dec
dec
xchg
dec
add
adc
mov
adc
popa
pop
cmp
add
jbe
mov
rcr
movs
data16
inc
imul
fisttp
cwde
ds
mov
jbe
sbb
cmps
movs
fxch
out
lahf
add
scas
mov
cmc
sub
cmp
es
ret
stos
mov
mov
inc
loope
repz
or
pop
rep
or
(bad)
(bad)
pop
sbb
mov
mov
fidiv
lea
scas
loope
or
ficomp
fidivr
scas
arpl
and
push
shl
outs
inc
movs
xor
add
sub
cmp
jge
stos
inc
sub
adc
pushf
test
and
sbb
fild
add
(bad)
dec
icebp
lods
retf
push
inc
push
ins
or
add
into
ss
xlat
add
in
jecxz
leave
arpl
or
sbb
ret
loope
call
and
adc
inc
jmp
fldenv
jnp
sbb
mov
cwde
sub
pushf
ret
cmps
adc
add
shl
fimul
and
push
fs
mov
(bad)
mov
mov
iret
jl
int3
leave
cmc
in
lds
dec
aaa
dec
fmul
loope
(bad)
mov
pop
dec
addr16
fdivr
push
repz
mov
daa
sbb
cmc
fucompp
enter
fxch
aaa
lods
rcl
daa
cdq
(bad)
repz
cwde
jmp
dec
mov
mov
mov
dec
push
imul
stc
mov
mov
aaa
out
data16
add
inc
cmp
popa
mov
outs
mov
fs
out
and
mov
popa
pop
test
in
xchg
std
dec
adc
mov
and
xchg
loop
(bad)
mov
pop
je
jae
loop
outs
xchg
mov
and
mov
fidivr
cmp
jmp
inc
call
pop
cmp
xchg
scas
cmp
shl
cmps
pushf
outs
push
dec
pop
cmp
jge
inc
xor
pop
shl
add
sar
xchg
or
repnz
push
and
test
inc
das
mov
hlt
es
xchg
icebp
inc
loopne
ins
sti
jne
mov
sbb
mov
or
or
imul
loopne
lds
xor
mov
push
sbb
cmps
mov
push
(bad)
fidiv
js
push
or
scas
fimul
nop
repz
test
ds
mov
push
popf
mov
pop
movs
xor
mov
clc
popa
xchg
push
(bad)
sbb
aad
pop
adc
xchg
fldcw
jp
adc
ret
mov
cmps
scas
neg
dec
popw
push
shr
inc
mov
stc
mov
adc
movs
xchg
add
ret
ja
sub
cmp
xlat
int3
pop
xlat
or
cmc
daa
dec
push
lds
bound
jns
cmps
in
std
cmp
dec
jbe
inc
mov
mov
repz
test
sub
push
add
push
dec
hlt
out
(bad)
out
xchg
pop
repnz
mov
or
jns
adc
test
cmp
inc
inc
push
and
shl
xchg
pop
mov
xchg
pushf
jne
stc
cli
dec
test
cwde
push
xor
pop
push
ret
jecxz
and
xchg
mov
xchg
sahf
rcr
cmp
test
jge
cmp
fwait
or
xchg
push
sub
dec
pusha
xor
mov
inc
dec
mov
retf
inc
xchg
dec
sub
cmp
cs
xlat
aaa
cmp
scas
mov
sbb
pushf
inc
add
mov
adc
jmp
adc
(bad)
retf
mov
dec
xchg
cmps
jl
inc
retf
imul
into
jns
push
cmc
jl
cdq
push
and
cwde
or
cmp
or
push
sbb
cmp
jl
out
ds
mov
(bad)
mov
inc
or
jo
adc
and
cmp
sbb
and
das
inc
fild
mov
out
push
adc
out
pop
inc
(bad)
xchg
mov
(bad)
xchg
rol
into
mov
cmp
jge
push
mov
mov
(bad)
std
dec
cld
adc
stc
jbe
jns
cmps
test
or
jnp
movs
shl
xor
xchg
xor
and
pop
loope
shl
das
repnz
popf
lea
aam
movs
jge
cmps
mov
or
xor
enter
out
adc
mov
xchg
lods
jno
mov
xor
mov
dec
jmp
mov
adc
adc
pop
mov
paddusb
add
push
psllq
test
test
sahf
jmp
bound
and
mov
cwde
scas
lahf
mov
arpl
dec
test
xchg
sbb
sbb
inc
(bad)
adc
jb
adc
mov
sar
pop
xchg
jp
jbe
mov
pop
repz
lock
sahf
ss
and
pop
sub
cmp
retf
(bad)
jbe
cli
loop
jb
popf
int
push
push
pop
int
or
ret
std
cmp
cmps
sbb
loope
clc
out
sbb
xchg
jl
ret
mov
xor
xor
and
cmp
pop
icebp
and
push
add
pop
or
(bad)
dec
adc
mov
inc
and
inc
gs
adc
add
popf
xlat
ss
adc
xor
retf
bnd
adc
dec
cmp
adc
fwait
jo
mov
cmps
jp
loopne
gs
adc
pop
pop
pop
jb
mov
inc
(bad)
in
push
dec
jge
lahf
nop
sub
xchg
fisubr
hlt
jle
mov
add
jae
dec
mov
inc
data16
aad
dec
test
adc
mov
mov
mov
aaa
xor
cld
dec
push
test
icebp
jo
int
push
and
test
or
jmp
push
sub
leave
or
cdq
or
arpl
int3
test
adc
out
pop
ins
stc
jmp
scas
add
sub
or
mov
push
and
mov
pop
out
mov
hlt
mov
push
pop
iret
movs
add
lods
pop
aaa
fdivr
sahf
cli
sar
mov
mov
mov
call
inc
outs
ret
test
sub
loopne
pusha
mov
mov
and
mov
or
add
xchg
js
adc
call
dec
addr16
cmp
mov
fwait
out
jo
ficomp
sub
test
(bad)
sbb
fcmovbe
add
test
or
sub
popaw
(bad)
jae
push
sahf
pop
movs
xlat
mov
and
dec
inc
cld
dec
jnp
push
xchg
mov
call
scas
pop
sbb
jns
mov
fucom
mov
aaa
cmp
daa
mov
adc
inc
fmul
dec
shr
cmp
mov
push
and
sbb
mov
jl
leave
add
cmp
adc
scas
js
stos
pop
pop
imul
cmp
add
push
adc
add
movs
inc
cmps
not
movs
dec
adc
imul
(bad)
aam
dec
mov
cmps
jnp
pushf
call
xchg
sub
pusha
in
cs
icebp
sub
xlat
mov
outs
mov
repz
inc
xchg
adc
pop
cmp
dec
jno
dec
je
push
fst
(bad)
dec
xchg
adc
repnz
mov
(bad)
and
xor
sub
adc
jo
sub
icebp
movs
mov
xchg
ins
fisub
hlt
pop
aad
arpl
pop
cmp
add
pop
xchg
movs
movs
mov
in
rol
stos
cmp
pop
imul
dec
cmps
jge
sub
xor
cmp
mov
popa
mov
xor
and
dec
xor
lods
sti
push
pop
push
(bad)
ror
fs
push
popf
stos
mov
lods
cdq
mul
pop
add
or
rcl
or
vpmacsdqh
je
mov
and
jbe
sbb
ud1
inc
xlat
hlt
retf
sbb
and
xchg
enter
icebp
test
scas
jno
jo
cmp
retf
dec
xor
push
adc
stc
sub
and
jbe
inc
sub
xor
mov
or
cmps
sar
cmp
mov
cld
mov
mov
or
lea
and
xlat
jns
test
aad
inc
or
sub
xlat
mov
sub
jle
and
mov
rcl
lds
out
cmps
pop
pop
or
and
imul
sub
xchg
aas
outs
mov
lock
mov
and
in
and
xchg
xchg
stos
gs
cld
lds
fstp
fcomp
add
push
pop
lods
pop
push
xchg
or
xchg
mov
in
cmc
cmp
or
idiv
push
xchg
jmp
sbb
jnp
cmp
fcomp
xchg
push
adc
pop
es
jmp
cs
cwde
and
mov
or
pop
inc
sub
in
faddp
clc
stos
fdivr
jl
push
inc
jb
xchg
mov
sbb
xor
fdiv
cmp
adc
int3
imul
adc
jbe
inc
repz
cmp
jae
xchg
pop
or
inc
pop
ins
fs
shr
call
jo
fldenv
inc
jge
cmps
pop
add
inc
or
cwde
push
je
fcmovnbe
dec
arpl
mov
sti
hlt
imul
retf
mov
and
in
test
inc
or
sbb
cs
xchg
call
aad
jns
outs
cmp
and
mov
ja
std
aad
and
and
adc
into
retf
xchg
(bad)
stc
mov
pop
mov
adc
or
int
jmp
loop
dec
mov
out
ret
xor
outs
push
popa
loopne
(bad)
push
addr16
std
(bad)
dec
jge
jl
sub
inc
xchg
cs
imul
pop
ret
test
sub
pop
push
into
push
jp
retf
aaa
ss
jns
or
dec
daa
add
xchg
push
or
imul
dec
add
or
jle
sub
xlat
adc
ror
jae
ds
(bad)
adc
mov
hlt
jl
mov
mov
jp
xor
pop
into
or
sbb
sub
push
mov
push
jne
push
mov
daa
mov
mov
neg
shl
in
fistp
lods
nop
dec
mov
jne
lock
jnp
jmp
aam
xor
int3
movs
leave
mov
push
mov
sub
icebp
cmp
xchg
ret
pop
out
mov
out
push
(bad)
in
aad
in
sub
out
mov
jbe
loopne
gs
(bad)
cmp
loop
mov
mov
jp
adc
movs
pusha
jl
lock
popa
test
loope
rcl
in
and
xchg
adc
dec
mov
call
mov
fiadd
adc
mov
push
and
mov
xor
sub
mov
add
add
jle
xor
shl
jo
dec
or
dec
jecxz
ds
add
test
imul
out
lods
pop
in
mov
(bad)
lea
xchg
jo
sub
lahf
or
into
les
sar
sub
jge
mov
outs
(bad)
fwait
sub
push
push
fadd
(bad)
mov
sub
sahf
loopne
adc
lea
mov
aaa
fldcw
ror
sub
xchg
xchg
push
sbb
aas
loop
mov
test
fnsave
aas
dec
push
jle
pushf
ds
fistp
into
and
(bad)
retf
inc
aad
mov
sub
out
and
xor
std
sub
sbb
xchg
out
in
adc
pop
jbe
dec
(bad)
add
or
iret
daa
jl
adc
movs
jne
ret
cdq
(bad)
test
or
mov
gs
(bad)
sbb
and
lahf
mov
and
and
retf
pop
imul
and
dec
mov
mov
mov
mov
fsub
fst
retf
retf
neg
es
adc
mov
outs
push
xchg
hlt
mov
cmps
pusha
call
stos
dec
das
dec
or
mov
or
scas
push
arpl
mov
inc
test
xor
jo
aas
in
ret
shr
mov
xchg
sub
jp
stos
bound
imul
les
xor
aad
mov
inc
pop
(bad)
cmps
(bad)
popf
les
retf
push
pop
sbb
push
jecxz
pop
aam
and
cmp
mov
test
pop
sbb
push
dec
mov
jmp
cwde
cld
psrad
fadd
mov
push
jmp
std
mov
sbb
xchg
aas
cwde
mov
xchg
mov
fwait
cmp
fs
fisub
cmp
fdivr
or
push
sbb
push
push
lahf
xchg
fsubr
mov
mov
repnz
xchg
push
js
sub
in
(bad)
cmps
mov
dec
ins
ds
shl
dec
or
sub
jle
xor
cmp
inc
stos
jp
or
push
mov
movs
cmps
mov
inc
test
leave
pop
aas
in
mov
pop
outs
ins
lds
push
std
add
dec
jl
(bad)
and
jp
lock
clc
and
pop
jae
mov
and
xor
xchg
fistp
jb
pop
sti
movs
mov
mov
or
aaa
aaa
loop
pop
shl
jne
in
xchg
push
add
xchg
repz
add
xchg
sub
push
push
pop
imul
cli
jmp
and
sub
enter
mov
adc
cdq
test
cmove
mov
test
arpl
cwde
push
mov
dec
movs
(bad)
sbb
out
jb
xchg
imul
scas
mov
aas
dec
jmp
hlt
cmp
and
dec
pop
ret
call
cli
(bad)
in
std
adc
mov
xchg
mov
ins
xor
ret
test
lods
xlat
call
fcomp
adc
xor
add
xor
dec
ror
(bad)
fisttp
inc
jl
fwait
scas
lds
sti
lods
ds
mov
mov
xchg
test
stc
outs
jg
sub
ss
cmc
pop
jno
inc
dec
sbb
rcr
jmp
and
clc
je
xchg
xor
popf
mov
mov
xchg
dec
leave
cmp
mov
pushf
ror
mov
add
add
or
stc
retf
movs
mov
mov
repz
pop
int
daa
ja
test
adc
loop
pusha
mov
ja
xchg
out
jbe
ds
(bad)
mov
iret
and
sbb
xchg
cli
sbb
(bad)
or
(bad)
shl
add
mov
push
mov
mov
(bad)
pop
not
js
shr
adc
enter
enter
jo
pop
sbb
sub
dec
stos
jecxz
mov
movs
inc
mov
or
jl
outs
ds
sbb
outs
ror
jno
or
adc
(bad)
xchg
pop
inc
mov
cs
popa
test
xor
or
fimul
pop
dec
stos
push
mov
or
frstor
aam
add
test
(bad)
push
mov
push
sbb
in
pop
add
cdq
leave
xchg
cmp
lea
push
mov
or
lahf
xor
jle
mov
scas
and
imul
daa
xchg
push
jmp
xchg
popf
pop
mov
mov
in
xchg
fdivr
sub
scas
sub
repnz
sahf
pop
push
dec
arpl
shl
mov
push
es
pop
xchg
cdq
dec
or
and
enter
or
xor
cwde
popf
xchg
push
fsubrp
mov
aas
loop
cmp
push
and
pop
imul
mov
lea
push
(bad)
push
cdq
add
(bad)
ffreep
mov
or
pop
jnp
pop
push
or
in
cmp
dec
ret
les
add
jg
inc
popf
jmp
dec
jg
inc
fstp
dec
f2xm1
mov
mov
dec
retf
in
pop
or
adc
(bad)
mov
(bad)
mov
adc
push
dec
xchg
pop
mov
movups
xor
das
mul
jle
jle
xchg
push
out
push
sbb
pop
movs
push
inc
mov
pushf
sub
adc
enter
call
dec
in
lds
les
aam
sub
mov
sub
mov
sub
jg
and
arpl
fild
sbb
out
add
sbb
dec
nop
arpl
mov
push
push
mov
cwde
mov
rol
xchg
push
aas
(bad)
cmp
test
mov
je
jbe
cmp
or
div
aas
mov
scas
jp
sub
pop
(bad)
dec
imul
cmp
push
pusha
cli
add
inc
pushf
cmp
in
sub
call
add
jl
pusha
lfs
jmp
test
add
push
cmp
add
or
out
push
js
dec
mov
enter
pop
and
dec
jmp
fistp
jecxz
stos
test
pop
out
in
outs
inc
adc
or
dec
dec
mov
pop
aad
mov
in
sahf
bound
push
jae
mov
ret
dec
mov
fnstenv
popa
aam
repz
pushf
out
sub
inc
(bad)
inc
pop
push
xchg
das
mov
add
sub
scas
inc
or
mov
push
sub
mov
(bad)
std
les
in
jae
fmul
xchg
jecxz
jmp
nop
repnz
sub
stos
add
hlt
scas
call
out
sbb
imul
xchg
ja
out
cmc
xchg
mov
jl
leave
call
jmp
xchg
mov
je
xchg
popa
popa
and
in
sbb
dec
add
xlat
out
mov
mov
sub
dec
int
pop
sbb
stos
dec
pop
add
push
mov
or
(bad)
xor
stos
push
fs
or
call
je
pop
pop
jns
xchg
vmwrite
stos
pop
xor
cdq
and
or
(bad)
push
or
rcl
pop
push
pop
inc
out
(bad)
jnp
sub
xchg
jg
cdq
pushf
(bad)
pushf
(bad)
cs
add
jb
shld
or
fsub
cmc
out
lods
sbb
xchg
mov
mov
ret
inc
enter
das
retf
or
js
dec
push
ins
ror
test
inc
dec
xlat
add
push
or
xchg
jo
std
cmp
ret
and
out
mov
cmps
jp
cmp
dec
aaa
sqrtps
std
dec
fidiv
jo
call
enter
call
das
mov
test
push
pop
nop
inc
popa
jle
scas
fld
push
xchg
stos
add
sbb
push
in
xchg
ret
test
push
or
hlt
popf
fs
ins
or
fcomp
cmps
dec
shr
jno
outs
or
or
mov
jae
or
jmp
push
inc
sbb
sahf
mov
or
leave
das
and
xchg
mov
dec
loope
sbb
rcl
sbb
retf
mov
ret
(bad)
scas
mov
xor
loop
sbb
fadd
enter
pop
(bad)
add
jl
inc
ror
fcomp
jb
enter
icebp
xor
cmp
mov
lods
dec
xor
push
movs
xor
retf
jo
add
lds
mov
in
inc
mul
out
stos
icebp
jecxz
out
imul
retf
inc
outs
mov
inc
push
adc
jmp
adc
sahf
mov
sbb
cmp
dec
mov
test
jmp
xor
shr
jecxz
and
fcomp
out
sbb
or
push
xchg
inc
push
add
gs
out
push
mov
movs
mov
mov
fs
jmp
mov
jne
xchg
ror
outs
mov
call
leave
in
push
sbb
sbb
test
fldenv
test
lods
or
daa
sub
inc
sub
ds
cwde
test
gs
or
retf
in
jp
cmps
lds
push
push
jo
rcl
retf
inc
sub
mov
retf
and
aaa
outs
idiv
(bad)
shr
data16
pusha
loope
daa
out
(bad)
sar
cld
stos
fiadd
es
inc
bound
out
jo
and
aas
test
or
adc
imul
fadd
sti
mov
cmp
aaa
xchg
rol
sub
leave
jns
fmul
sub
daa
add
mov
jo
or
ss
outs
mov
dec
movs
sbb
cmc
pop
(bad)
popf
jne
cmps
adc
or
inc
pop
mov
mov
imul
inc
frstor
pop
(bad)
idiv
test
mov
inc
mov
popa
adc
add
popf
push
mov
mov
std
iret
mov
fcmovbe
dec
stc
std
jns
cmp
xlat
adc
xchg
ins
xor
fdivr
jle
pop
dec
lds
xchg
add
sub
xor
sti
xchg
mov
or
add
jb
lock
sahf
pop
push
mov
gs
sub
push
pop
ror
movs
cmp
es
mov
out
sbb
pusha
adc
jl
inc
loope
(bad)
(bad)
fsub
or
and
jl
and
xchg
in
cs
jp
and
push
inc
movs
sbb
std
push
cmp
shl
mov
iret
push
sbb
rcl
cmp
pop
fisubr
adc
push
scas
les
push
sahf
scas
adc
and
add
call
(bad)
scas
sub
pop
cdq
xchg
cmp
out
xor
shl
cld
sbb
mov
sbb
cmp
jl
out
pop
popa
mov
and
dec
popa
cli
xchg
es
jne
(bad)
xor
fdivr
in
mov
mov
inc
and
out
iret
fidivr
pop
shr
mov
xor
xor
scas
movs
mov
adc
sbb
enter
mov
stos
and
ds
test
jge
push
loop
xor
xchg
pop
add
xor
mov
push
div
scas
scas
mov
mov
inc
outs
xchg
cmp
inc
or
mov
xchg
and
(bad)
jl
xchg
adc
call
sbb
inc
lods
cwde
into
loopne
into
and
sahf
cmp
add
in
jne
arpl
loope
int3
hlt
stos
in
push
je
aaa
mul
mov
faddp
(bad)
or
lds
pop
push
leave
and
jmp
fimul
or
lods
repz
dec
mov
xchg
pushf
jae
mov
test
sub
pop
mov
sbb
jle
push
cld
mov
aaa
xchg
push
(bad)
or
ret
scas
in
adc
leave
add
push
mov
inc
dec
pop
fcomi
sahf
addr16
(bad)
add
call
sub
xchg
js
sub
test
(bad)
or
mov
(bad)
outs
scas
or
dec
dec
jl
mov
or
xor
mov
xchg
push
sub
cmp
cmc
mov
push
jno
xor
imul
dec
lods
nop
dec
ret
outs
jmp
pop
dec
lahf
mov
(bad)
out
cli
sbb
sub
pop
fwait
and
hlt
out
sub
mov
xor
mov
inc
add
sbb
out
(bad)
jb
das
mov
out
inc
sbb
pop
in
mov
mov
push
push
mov
lds
pop
ret
mov
stos
adc
inc
sbb
sar
int
test
jne
ja
iret
mov
xchg
pop
call
test
jno
mov
sub
sub
and
cmp
sti
pusha
inc
mov
test
cmps
sbb
std
fld
xchg
mov
stos
mov
lds
sbb
mov
(bad)
pop
xchg
push
test
dec
test
hlt
cmps
fld
push
pop
(bad)
jo
es
mov
add
push
loope
fs
xlat
imul
loope
and
xchg
dec
dec
jecxz
inc
jecxz
push
xlat
jecxz
test
mov
cmps
push
imul
aad
fcomp
add
and
scas
jmp
jl
scas
pop
mov
dec
retf
jno
dec
js
xchg
inc
xlat
sbb
jno
ror
mov
fwait
je
pop
mov
mov
jne
test
mov
and
in
fwait
pop
(bad)
in
mov
jmp
aas
jmp
mov
popa
xlat
imul
jae
xchg
(bad)
pop
add
cmp
fstp
popa
(bad)
retf
dec
pop
les
or
push
movs
fs
mov
mov
imul
movs
not
daa
adc
mov
xor
jo
mov
stos
dec
mov
lahf
ret
rcl
push
and
mov
test
inc
and
fldenv
jle
mov
ja
jbe
fwait
add
mov
jmp
xor
xor
ror
mov
cmp
mov
pusha
cmc
add
jno
cli
add
cmc
jg
aam
test
jmp
(bad)
ds
inc
imul
pop
repz
mov
icebp
cli
imul
xor
adc
cmp
cmps
imul
add
icebp
cmp
jb
cmp
mov
add
pop
and
fdivr
cmc
inc
push
sbb
(bad)
xor
jae
jns
push
cmc
scas
push
jnp
mov
popf
in
loopne
xchg
leave
daa
pop
scas
cli
and
sub
add
test
shr
or
test
inc
pop
xchg
mov
movs
jb
loop
ja
add
fld
ret
jmp
pop
mov
out
jbe
xchg
shr
lahf
pop
xchg
in
les
cld
xor
icebp
and
les
pop
enter
lahf
inc
jmp
mov
stc
pop
mul
cwde
stos
outs
xor
inc
xchg
shl
test
fldenv
mov
mov
data16
ins
jp
and
call
or
cmps
sbb
adc
cmp
cdq
shr
mov
rep
lea
lock
fisttp
jp
mov
das
pop
in
mov
lds
ret
ds
pop
mov
mov
xchg
ins
ins
xlat
jp
stc
push
bound
shl
imul
and
out
(bad)
outs
(bad)
push
movs
or
cmps
xchg
push
cli
(bad)
cmp
pusha
xchg
mov
xor
repnz
sar
aam
pop
push
xchg
cmps
and
fwait
pop
ret
xchg
je
push
sbb
jbe
adc
and
sbb
mov
enter
inc
push
or
adc
scas
xor
inc
cmc
push
sbb
cdq
push
cmps
jmp
test
ret
fisttp
jge
mov
ret
cmps
add
cmc
daa
and
mov
sub
jo
xlat
leave
loope
push
clc
in
int3
jae
retf
cmps
push
shr
inc
pushf
push
mov
jbe
mov
add
sbb
and
jp
jne
clc
xor
(bad)
fs
into
out
cmp
in
pop
pop
mov
jo
in
hlt
retf
push
loop
sub
test
aad
sbb
inc
retf
cmp
frstor
cmp
loope
mov
pop
imul
cmps
fwait
xchg
or
mov
or
adc
imul
repz
ret
leave
xchg
inc
inc
sub
push
and
jmp
xchg
add
and
clc
in
dec
std
dec
in
dec
fwait
fwait
or
jb
lods
mov
xor
add
push
adc
into
dec
ins
mov
ins
(bad)
pop
dec
xor
or
ss
add
or
cmps
xchg
dec
fs
push
outs
repnz
arpl
out
jns
push
addr16
or
nop
rcl
and
mov
mov
xchg
aam
cmp
mov
in
es
movs
shl
xor
mov
mov
mov
mov
in
add
dec
cmp
dec
sbb
hlt
mov
inc
or
(bad)
clc
into
pop
(bad)
mov
inc
dec
in
sahf
push
(bad)
pop
xor
pop
stos
mov
loopne
add
loope
scas
inc
push
jno
lahf
dec
jo
popf
out
imul
add
mov
push
inc
das
jo
xor
lea
add
jl
mov
movs
cdq
mov
imul
outs
popf
out
(bad)
cdq
cmps
das
mov
dec
xor
pushf
inc
fst
mov
cld
sbb
push
add
mov
mov
cmc
jbe
mov
pop
dec
xchg
push
dec
fnstcw
cld
mov
mov
pop
xor
sar
or
fidiv
mov
inc
stc
sti
pop
inc
xlat
xchg
mov
sub
or
xor
jl
add
mov
je
arpl
cmp
hlt
push
fadd
mov
inc
in
lock
sub
add
add
add
loop
ins
cdq
dec
sbb
int3
xchg
test
das
imul
and
pop
jae
xor
mov
or
div
mov
test
scas
ins
outs
sub
inc
xor
lods
fmul
imul
dec
js
mov
and
ret
mov
jb
outs
push
and
dec
cmp
mov
jns
pusha
push
add
arpl
aam
xchg
push
push
jle
fwait
pusha
jno
adc
(bad)
sbb
rcl
das
dec
or
lahf
into
jle
and
add
test
pop
popf
sbb
jb
mov
nop
stos
cmp
dec
mov
cmp
outs
or
cdq
dec
dec
movs
sub
rol
fild
xchg
or
mov
or
xor
stc
out
sub
cwde
test
jle
pop
fs
fbld
adc
or
xor
mov
or
mov
hlt
dec
stos
fsub
ret
sbb
das
into
fwait
or
push
mov
into
aaa
adc
or
xchg
push
or
outs
cmp
pop
jae
jge
pop
xor
cld
mov
inc
test
jne
pop
sub
xor
sub
mov
xchg
loope
mov
adc
adc
ja
dec
movs
mov
mov
icebp
and
dec
xchg
jmp
pop
xlat
and
and
sbb
retf
mov
fdivr
scas
out
cmp
out
(bad)
mov
inc
test
dec
in
movs
iret
mov
push
pushf
xor
add
out
fwait
pop
popf
pop
and
xor
popf
cmps
push
dec
sub
jo
mov
push
push
es
shl
bound
es
jnp
sub
xor
sbb
lods
push
loop
(bad)
stos
push
mov
cmps
ret
sub
or
dec
add
pop
xlat
test
pop
sub
cmps
leave
imul
inc
fs
retf
inc
js
add
cld
xlat
arpl
push
inc
daa
dec
out
rcr
test
ret
repz
xor
aam
mov
fild
xchg
fucomp
mov
adc
sbb
fild
lods
in
cmp
inc
sbb
ss
fidiv
stos
icebp
sbb
punpcklbw
fistp
int
and
jbe
push
pop
rcl
sahf
jae
mov
pop
mov
pop
and
xor
cmp
jns
jp
jnp
mov
out
mov
rcr
rcr
mov
repz
xor
out
rcr
cmps
movs
xlat
inc
out
pushf
mov
(bad)
inc
js
(bad)
jmp
add
xchg
mov
push
loop
or
out
outs
ss
je
and
inc
push
add
dec
dec
aaa
inc
(bad)
rcr
icebp
or
sbb
in
or
sbb
jle
cld
jp
adc
popf
adc
and
push
fild
mov
sbb
test
dec
loopne
popf
call
ins
in
shl
ins
push
pop
jb
fwait
jns
push
loope
dec
mov
jmp
into
je
jmp
cmc
pop
push
popa
xchg
add
sub
push
mov
pop
push
fist
stos
add
cmp
mov
mov
cld
loop
and
jb
dec
xor
xlat
mov
js
jp
xor
(bad)
sub
jmp
cli
cmp
icebp
repz
pop
ins
cmp
inc
cmp
inc
jns
push
scas
pop
in
cs
push
dec
test
fmul
add
sbb
and
sbb
cmps
sub
in
pop
test
clc
mov
pop
jo
popa
and
add
and
mov
iret
cmp
in
push
mov
(bad)
pop
jg
lock
jne
push
pop
mov
dec
loop
das
psubsw
sub
aad
cmp
(bad)
std
(bad)
in
shl
push
call
xlat
adc
add
cli
call
test
rol
fidivr
pslld
pusha
push
test
sbb
fst
loope
(bad)
sar
dec
out
fs
call
push
rcr
mov
jae
sub
pop
scas
cs
sub
or
xchg
sub
add
mov
sub
das
in
gs
in
cmp
rcl
cld
mov
out
sbb
cmp
fwait
xor
jl
jnp
shl
aad
xchg
lea
or
outs
jecxz
(bad)
test
fstp
push
jns
fwait
mov
popa
pop
add
and
loopne
shr
pop
call
test
inc
inc
in
xchg
push
jmp
push
mov
aaa
xlat
pop
jecxz
push
xor
jmp
push
or
cmp
xor
les
(bad)
fild
pop
in
jnp
imul
test
(bad)
mov
xlat
clc
push
aas
icebp
dec
pop
pushf
out
or
mov
das
adc
jae
pusha
ret
pusha
push
cmp
fsubp
cmps
add
xchg
test
hlt
call
mov
jl
pop
adc
add
imul
jmp
je
xchg
xchg
mov
inc
shl
(bad)
push
mov
call
or
pop
loope
mov
ins
stos
adc
mov
loope
or
and
pop
lods
cwde
repz
ret
sbb
pushf
sub
arpl
fdiv
sete
mov
loope
xor
imul
sub
int3
out
stos
int
sbb
and
rol
imul
in
and
add
jp
inc
add
mov
push
sbb
call
out
xor
push
pop
inc
inc
scas
pop
lds
push
es
out
dec
and
xchg
in
adc
cdq
ja
repnz
push
outs
inc
fiadd
push
or
xchg
psrlw
in
cmp
lods
stos
push
mov
or
jp
aaa
or
mov
scas
lods
test
aaa
push
mov
lods
dec
and
pop
aad
sub
cmc
sbb
jne
adc
and
es
push
mov
mov
js
ins
inc
in
and
add
pop
(bad)
in
jecxz
hlt
popf
push
jae
jo
es
nop
or
sbb
out
jno
and
test
sbb
mov
lahf
mov
cs
int3
cwde
mov
and
retf
ds
retf
xor
and
pop
loopne
jae
sbb
and
adc
cdq
push
sar
sub
fimul
add
dec
ss
add
lods
add
add
jae
lock
push
mov
pop
bound
push
loope
jne
mov
and
mov
sbb
dec
pxor
es
les
sub
cdq
push
add
and
sub
pop
mov
mov
aas
pop
mov
mov
and
leave
call
inc
scas
add
leave
test
and
inc
lds
dec
jb
outs
lods
les
repnz
fs
add
xor
cmp
jne
std
xchg
xor
inc
loopne
ins
cmc
adc
mov
fsubr
pop
and
mov
out
cmp
inc
xchg
mov
shl
xchg
outs
int3
mov
push
jne
imul
add
pusha
or
nop
push
stc
cmp
jno
push
popa
hlt
stos
jns
div
sbb
mov
or
cs
cmc
inc
pop
stos
sub
fisttp
cmp
dec
mov
xchg
jge
dec
pop
xor
mov
mov
out
cmp
adc
in
sbb
inc
jmp
jno
mov
jmp
ss
push
cmc
mov
jle
push
ja
mov
imul
jbe
add
sti
mov
xor
and
sub
fmul
ds
mov
adc
aam
add
shl
int3
ret
push
push
test
dec
pop
sbb
mov
sub
(bad)
cwde
mov
mov
mov
push
shl
cld
mov
and
mov
mov
loope
sub
mov
and
xor
pusha
xchg
(bad)
fldenv
pop
adc
enter
aad
aas
repz
in
cwde
(bad)
outs
pop
cmp
arpl
in
mov
in
push
push
inc
(bad)
mov
mov
xchg
test
sub
into
fs
push
sub
xor
out
jl
(bad)
jp
adc
xchg
cdq
cmc
mov
popf
dec
jecxz
popf
js
or
mov
xor
inc
std
imul
cwde
shl
push
fnstenv
shl
test
add
sbb
pop
outs
mov
cli
scas
cmp
test
add
push
pop
push
pop
jg
mov
mov
fcom
push
lds
xchg
ret
mov
repnz
jg
xchg
jbe
sahf
pusha
int
mov
push
cmc
xchg
pop
dec
push
cwde
mov
sub
inc
dec
add
(bad)
sbb
pop
cmp
sub
jmp
pop
shr
add
movs
mov
mov
push
jmp
dec
cdq
stc
outs
mov
add
test
inc
lds
pop
add
daa
fsubr
jl
retf
add
popf
and
sbb
or
inc
mov
mov
push
adc
outs
dec
and
in
xchg
loop
lods
outs
mov
fdiv
icebp
ror
sbb
lods
(bad)
cmp
sbb
popf
and
call
ror
sahf
jmp
push
push
dec
xchg
fwait
lea
sub
push
jp
jg
scas
or
cmp
sub
scas
idiv
or
inc
mov
ja
aam
pusha
std
jnp
sub
cdq
jmp
in
sub
and
loop
or
xlat
or
or
out
rcl
pop
mov
movs
sub
loope
pcmpeqd
push
ins
fnstsw
inc
test
inc
xor
ja
pop
xor
dec
(bad)
cmp
scas
xchg
jae
jl
push
and
mov
shl
xchg
jmp
jp
push
xchg
rcl
rdpmc
out
pop
cwde
les
iret
jae
scas
jb
push
fisubr
mov
xchg
loop
popa
and
in
xor
enter
popa
jp
sub
push
push
inc
cmp
xor
das
mov
xor
add
adc
and
loopne
out
push
fisub
mov
gs
adc
and
pop
sbb
sub
imul
test
mov
pop
movs
xor
mov
adc
pop
popf
cmp
pop
pop
loope
sub
nop
sbb
(bad)
pop
lods
push
jecxz
mov
jge
inc
xchg
fwait
jno
or
sbb
xchg
std
pop
stos
mov
fcomp
mov
jnp
push
dec
fsubr
jg
xchg
sub
enter
cli
add
and
lahf
cmp
aas
pop
fild
test
(bad)
popa
js
imul
aas
cmps
sti
jne
fild
dec
lock
ret
jo
pushf
jnp
js
xor
mov
and
movs
push
sbb
scas
ja
mov
cli
push
sbb
(bad)
mov
jne
cs
out
mov
aas
stos
pop
fs
loope
loopne
xlat
mov
(bad)
xlat
mov
and
jg
lds
in
rcr
hlt
outs
jo
loopne
dec
loop
popa
shr
(bad)
jo
cmp
mov
mov
fstp
ins
imul
mov
push
jns
add
out
in
mov
fsubp
retf
aaa
das
push
xchg
dec
cld
loope
sahf
sti
loop
xchg
cmp
outs
mov
mov
popa
inc
(bad)
pop
jo
mov
mov
mov
bound
add
outs
adc
sbb
and
shl
jl
jmp
cs
and
sar
and
popf
or
and
cdq
nop
mov
sub
pop
loopne
in
dec
data16
sahf
pop
fld
gs
mov
out
mov
xchg
and
add
pop
cmp
call
add
pop
int
fnstcw
hlt
pop
in
js
jmp
push
or
mov
push
jmp
inc
ret
ret
ja
scas
cmp
int3
(bad)
test
add
jp
xchg
arpl
mov
adc
cmp
or
out
xchg
jmp
lods
jbe
aas
sar
arpl
loope
or
xor
sbb
int3
add
ss
and
sbb
inc
inc
popa
loope
adc
fwait
aam
and
loope
adc
pop
mov
push
sbb
sub
ss
scas
push
call
loope
fwait
ret
int
cmp
cmc
call
mov
ja
sub
or
popa
push
imul
stc
xchg
jmp
(bad)
shl
(bad)
push
pop
jne
inc
rcl
nop
(bad)
jp
mov
mov
jnp
pushf
xchg
inc
stos
repnz
mov
sub
(bad)
les
add
(bad)
test
adc
icebp
inc
(bad)
fadd
sbb
dec
arpl
adc
fmul
pop
add
icebp
(bad)
inc
and
test
in
mov
adc
test
xchg
retf
and
jno
mov
dec
or
mov
xor
mov
mov
jg
jmp
loopne
dec
ja
push
or
jmp
cdq
test
(bad)
pop
mov
add
jge
call
cs
call
push
mov
cmps
jl
ror
aad
mov
es
dec
les
add
dec
pusha
inc
add
push
(bad)
xor
out
jnp
mov
in
dec
cmp
pusha
mov
cmps
out
pusha
test
sbb
(bad)
test
and
or
jmp
loope
in
test
aam
xchg
test
(bad)
xor
xor
jne
pop
mov
dec
mov
mov
mov
fdivr
xor
add
cli
out
cmp
je
mov
mov
inc
dec
aaa
test
inc
fidiv
xor
movs
push
sub
and
push
cdq
jge
xor
(bad)
sar
iret
mov
jmp
ds
sbb
arpl
pop
adc
and
mov
daa
call
and
push
pop
out
jmp
jle
sahf
jo
inc
xchg
push
das
lock
inc
dec
push
repz
addr16
pusha
call
mov
fsubr
push
jo
aaa
(bad)
clc
(bad)
fdivr
imul
pmullw
jecxz
js
(bad)
or
mov
cmovne
jmp
std
movs
call
loopne
aaa
add
pop
jae
xchg
xor
pop
push
aas
mov
rol
loope
xchg
or
in
xchg
scas
mov
pushf
repz
retf
or
cwde
retf
repz
xchg
jp
mov
jecxz
hlt
push
xchg
cmp
fcomp
xchg
xchg
inc
jge
ins
cdq
add
(bad)
repnz
add
out
pop
fucom
mov
xor
or
and
data16
sar
and
sbb
ror
fcomip
mov
aam
or
xor
aam
add
inc
xchg
push
push
out
push
shl
mov
pop
cli
push
in
xchg
jmp
in
or
lock
movs
pop
sub
sub
xor
inc
mov
into
dec
sar
(bad)
adc
xor
repnz
jae
cmp
jg
push
or
dec
jne
jg
cmc
pop
call
jnp
sub
fcmovnu
(bad)
ja
mov
cmp
scas
mov
sahf
jle
jg
lahf
scas
adc
sbb
les
sub
and
sbb
and
inc
in
stos
aaa
jg
xchg
hlt
mov
lahf
adc
pop
sar
mov
add
sbb
mov
or
ror
daa
lds
cmp
lahf
mov
into
paddb
rol
(bad)
not
retf
mov
push
cs
cli
mov
neg
stc
add
ror
inc
retf
jae
push
lods
mov
cli
fmul
repnz
in
jno
xchg
gs
dec
loope
arpl
out
jge
xor
push
ss
jno
loope
ja
pop
mov
adc
inc
or
mov
xor
lahf
inc
jo
and
loopne
push
in
jne
in
add
js
xor
popf
inc
hlt
shl
sbb
sub
xchg
adc
in
pop
push
jmp
retf
repz
daa
je
push
and
xchg
mov
xchg
push
in
outs
xchg
mov
cmp
cwde
jbe
mov
retf
dec
sbb
aaa
add
or
add
inc
add
inc
rcr
lods
mov
ins
push
scas
mov
repnz
daa
push
test
bound
mov
push
iret
jp
repz
sub
aas
xchg
clc
aas
retf
inc
call
adc
add
aad
popa
fcomp
xchg
aam
mov
int
cld
xor
dec
in
inc
arpl
ja
mov
mov
mov
xchg
cwde
loope
fdiv
aam
inc
js
xor
sbb
adc
cmp
jmp
jp
retf
xchg
dec
retf
outs
pop
sub
adc
test
(bad)
movs
hlt
ret
js
movs
mov
push
jb
xlat
or
push
cli
gs
mov
inc
and
push
je
mov
pop
push
das
xor
fmul
mov
mov
mov
pop
aas
and
push
jmp
(bad)
dec
adc
and
jno
xchg
adc
sub
ds
dec
lds
or
pop
mov
jmp
iret
fnstsw
jle
sbb
push
push
or
jl
mov
add
mov
popf
sbb
in
aad
fadd
out
shl
jle
mov
lahf
dec
mov
xchg
fldz
sbb
inc
sahf
and
clc
mov
cmp
jle
retf
fmul
mov
dec
jmp
jb
pop
adc
pushf
repnz
mov
pop
popa
mov
cwde
mov
pop
repnz
jno
retf
lods
test
out
and
sbb
pop
adc
mov
inc
xor
xor
lock
pop
sahf
adc
or
cmps
imul
pusha
aas
cld
test
jl
jne
enter
rcr
les
popf
pop
jo
or
jg
fbstp
adc
push
out
jb
arpl
inc
jg
pop
cmp
je
outs
jae
in
mov
xchg
inc
pop
lods
mov
in
jbe
out
xchg
sahf
inc
and
mul
mov
mov
stos
test
nop
popa
and
mov
cmp
je
push
sar
sbb
sub
push
lds
ss
mov
int
cld
or
add
add
in
mov
fnstcw
xor
push
pop
mov
xchg
ss
adc
aaa
scas
rol
xchg
xor
add
mov
fidiv
ret
icebp
jg
jbe
pop
cmp
mul
sar
fldcw
mov
sub
sub
aad
jo
inc
sar
das
xor
(bad)
test
lock
inc
mov
and
mov
test
pop
das
shl
ret
test
lahf
shl
mov
mov
loop
adc
or
add
push
add
push
inc
adc
addr16
push
push
test
std
(bad)
ja
loope
mov
outs
aad
pop
cmp
xor
test
and
inc
cmps
mov
mov
mov
jp
push
(bad)
push
es
in
aad
sub
in
rol
stos
xchg
push
inc
inc
pop
push
cmc
jne
xchg
out
es
les
cmc
out
(bad)
sub
sbb
ret
test
div
mov
shl
rol
(bad)
out
call
pop
fsubr
lock
data16
pop
retf
inc
mov
lea
call
ja
mov
jo
(bad)
fidivr
mov
push
push
mov
or
cmp
mov
in
xor
in
ins
pop
sub
fwait
repz
and
lea
aam
ret
sbb
sbb
retf
xor
popf
mov
fmul
push
sub
addr16
sbb
or
push
cld
or
rcr
fiadd
les
jns
mov
mov
movs
fldenv
mov
aad
pop
(bad)
ins
add
mov
xchg
imul
into
adc
adc
hlt
mov
out
add
or
or
add
popa
jno
mov
adc
pop
mov
cmp
and
push
scas
push
push
pushf
mov
mov
addr16
mov
aas
fisttp
or
or
pop
xchg
mov
xchg
call
enter
adc
cmps
push
adc
jb
test
jno
into
test
sbb
lock
mov
fcmovb
das
or
mov
push
(bad)
mov
mov
inc
mov
sbb
jg
cmp
jmp
bound
popf
shr
dec
ret
pop
ds
sbb
shr
retf
cmp
repnz
and
mov
jne
push
lds
mov
sub
push
ficom
cmp
test
push
push
sti
out
or
fdiv
xrelease
cdq
hlt
xchg
inc
dec
jb
(bad)
dec
add
xchg
inc
aad
jno
sbb
(bad)
dec
das
mov
(bad)
fidiv
imul
outs
ror
rcl
das
fisttp
push
xlat
xor
(bad)
aaa
(bad)
sbb
xor
daa
ins
xchg
sub
sub
adc
mov
or
cmp
lods
sbb
mov
xchg
(bad)
popa
enter
mov
popa
mov
add
imul
mov
pop
sub
ds
add
lods
(bad)
das
out
jle
fldcw
test
dec
repnz
mov
mov
inc
adc
lods
aad
add
mov
pushf
(bad)
dec
test
cdq
or
scas
fwait
push
adc
leave
push
add
(bad)
add
fs
(bad)
sbb
mov
pop
in
jb
pop
rol
sbb
out
xlat
ins
ins
call
sbb
popa
rcr
adc
ins
bound
xor
stos
test
fbld
outs
jmp
outs
cli
mov
mov
xchg
test
xchg
test
xor
cmp
xchg
dec
sbb
and
nop
and
imul
ret
push
mov
adc
push
mov
mov
mov
or
sub
push
and
or
mov
rsm
lock
and
lock
xor
jne
mov
jge
ja
hlt
adc
arpl
mov
jmp
or
push
mov
jae
cmps
xchg
sbb
dec
ds
call
jo
jo
shl
xchg
repz
or
jb
adc
inc
adc
pop
xlat
lds
es
test
sti
sub
leave
add
xchg
sub
dec
imul
adc
inc
(bad)
fld
xchg
pop
or
ss
call
adc
lds
xor
cli
jnp
cs
std
call
popf
sti
(bad)
cmp
jg
or
stos
fsub
enter
scas
cmp
adc
jg
js
ret
fwait
mov
mov
sub
sbb
int
jno
cld
out
mov
mov
mov
jmp
cmc
adc
cmp
test
xor
sub
mov
mov
jne
fld
lds
js
retf
test
dec
sbb
adc
sahf
mov
mov
adc
int3
xchg
cmp
and
ret
mov
(bad)
push
jmp
dec
cmp
test
push
bound
xor
fcom
mov
sub
popa
dec
dec
sbb
out
or
mov
xor
shl
jmp
(bad)
mov
pop
sbb
loope
dec
loope
add
xchg
xlat
mov
fsub
pop
sbb
pop
(bad)
clc
ret
push
push
outs
xchg
pop
je
outs
dec
jo
add
push
xor
(bad)
mov
shr
mov
jl
fwait
push
and
test
popa
mov
movs
add
cmps
add
sti
lods
into
sbb
enter
inc
xchg
cmps
ficom
fwait
inc
push
loop
fstp
fs
sbb
bound
mov
cdq
outs
popf
in
jns
imul
imul
cs
retf
dec
cmps
jne
ror
nop
mov
repnz
cmp
loop
push
daa
not
dec
add
cmc
sbb
sub
iret
sub
outs
ss
mov
cdq
fisubr
pop
cmp
aam
sub
xlat
movs
dec
or
cs
sti
or
bnd
out
push
sub
pop
ds
pop
push
adc
stc
dec
bound
fdivr
pop
push
mov
clc
and
sub
inc
xor
(bad)
and
push
in
dec
mov
inc
bound
outs
fdivr
rep
dec
hlt
mov
mov
push
pop
push
cmp
pushf
adc
add
jg
mov
xchg
(bad)
cmp
pop
cdq
mov
pop
aaa
mul
sti
ror
(bad)
into
fdivr
jno
test
push
mov
add
(bad)
stc
dec
mov
sub
mov
outs
mov
sbb
sbb
cmps
push
out
pushf
jge
out
icebp
out
mov
pop
fld
cmp
out
adc
shl
xlat
shl
push
cmp
mov
jl
xor
(bad)
xchg
stos
xchg
mov
movs
test
sub
push
hlt
ins
sub
adc
lahf
add
pop
mov
add
vxorpd
(bad)
push
mov
xchg
(bad)
fild
in
adc
mov
inc
dec
iret
mov
sbb
arpl
icebp
adc
add
adc
enter
and
je
cmps
sbb
test
shr
pop
ret
jmp
repnz
push
repnz
shl
add
cli
repnz
add
iret
fadd
fisttp
movs
ja
fbld
pop
jmp
pop
jle
(bad)
xchg
ds
fcomp
test
pop
retf
neg
std
loopne
and
dec
pop
out
jp
pop
jle
in
mov
(bad)
ins
aaa
imul
mov
addr16
push
jmp
add
mov
sub
repnz
xchg
aad
adc
fldcw
sbb
adc
inc
dec
shl
arpl
nop
pop
(bad)
cmc
or
inc
(bad)
mov
cwde
push
jnp
les
sub
or
mov
aas
in
addr16
es
arpl
stos
mov
inc
js
inc
pop
pop
out
push
add
iret
inc
into
in
sahf
xchg
cmp
adc
addr16
outs
jle
out
ins
add
adc
ss
std
push
mov
cs
scas
(bad)
bound
pop
pop
pop
add
mov
sub
push
inc
xlat
imul
dec
fmulp
pop
int
hlt
xchg
pop
fidiv
and
cmp
push
int3
and
rcr
out
(bad)
push
cmp
test
jmp
jo
je
mov
cmp
movs
ins
cmps
ffree
or
outs
pop
imul
mov
push
ret
inc
mov
and
int3
pop
sbb
jge
mov
mov
add
jl
jmp
arpl
pop
and
dec
jecxz
sbb
dec
sub
stc
push
ror
mov
lods
push
pop
in
mov
aas
fmul
loop
outs
js
ror
sub
into
aas
sahf
in
cs
sbb
xor
jl
sahf
dec
pop
das
mov
fsubr
mov
adc
push
inc
cwde
daa
imul
push
or
pop
loope
push
sub
jmp
cdq
xlat
mov
hlt
pop
pop
nop
jb
mov
inc
or
retf
pop
inc
into
vprotq
xor
(bad)
xlat
mov
cmp
and
pop
aaa
pop
jo
or
jmp
lods
push
push
sti
ss
xor
add
sub
imul
cdq
mov
iret
(bad)
inc
dec
lea
jo
stc
popf
mov
mov
jnp
cmps
adc
mov
mov
sti
shr
mov
xor
push
jns
jmp
xor
dec
xchg
jns
int3
shl
sub
add
ret
sub
dec
not
aaa
xor
pusha
mul
cmp
jecxz
imul
(bad)
stc
dec
int3
(bad)
loope
lods
mov
stos
mov
aad
or
sub
das
scas
fucomip
ins
es
das
stc
dec
stos
lahf
add
sub
cmp
jg
pop
push
or
mov
scas
(bad)
lock
cld
arpl
mov
mov
out
scas
dec
jecxz
icebp
pop
out
clc
or
jbe
xlat
retf
sub
pop
and
das
shl
lock
div
and
arpl
sub
cmp
iret
lea
stos
mov
adc
rcr
call
push
push
xor
out
call
push
enter
(bad)
cmp
inc
push
push
imul
iret
sub
sar
(bad)
leave
dec
scas
pop
in
mov
call
adc
out
adc
add
jmp
push
fwait
dec
in
popa
in
pop
push
cs
dec
push
xor
lock
int
pop
mul
mov
mov
jmp
fsincos
jns
test
pop
mul
arpl
test
rcl
rcr
xchg
addr16
cmp
loopne
mov
in
loop
stos
cwde
adc
fs
shr
imul
cdq
into
or
scas
sub
mov
or
push
pop
aam
leave
pop
test
ins
sub
(bad)
ds
ficom
mov
sub
mov
mov
and
xchg
sub
pop
sahf
idiv
lea
adc
repz
jge
xchg
outs
bound
loop
jge
ret
in
cmp
or
adc
outs
aam
cdq
in
or
aad
inc
sbb
xor
mov
(bad)
out
aam
jmp
pop
aam
add
jecxz
mov
stos
dec
xchg
sub
push
cmp
jo
mov
sbb
sbb
jns
add
adc
jno
push
cs
mov
jg
push
scas
pop
push
mov
inc
push
repnz
cli
(bad)
cmp
sbb
adc
pop
jmp
stc
xor
cld
fnstcw
and
jg
out
or
mov
iret
je
mov
sahf
clc
cdq
into
lods
rcl
push
sbb
mov
js
and
push
gs
mov
and
in
test
mov
adc
xchg
lods
push
lods
aam
mov
movs
ret
push
xchg
sub
mov
inc
and
cld
add
cmps
out
jmp
fsub
sbb
dec
xchg
imul
jmp
and
addr16
cwde
xchg
add
(bad)
dec
push
xor
bound
jle
ins
cli
loopne
pop
mov
sahf
add
cwde
aam
sub
(bad)
retf
repz
mov
inc
stos
pop
or
scas
jns
and
pop
jmp
jo
loope
pop
in
cmp
(bad)
sahf
lods
add
cmps
xchg
inc
in
sub
(bad)
or
lds
cmp
test
push
fimul
(bad)
loopne
sub
push
pop
fwait
jne
jo
arpl
ficomp
dec
pop
inc
arpl
outs
ret
aam
rcr
sar
ins
(bad)
and
fild
push
out
mov
or
(bad)
mov
js
mov
test
ins
cmp
cmp
cmp
add
movs
addr16
jne
cli
sub
pop
inc
jbe
pop
mov
sbb
(bad)
dec
ret
sahf
dec
clc
dec
push
rcr
inc
sub
inc
and
les
in
repz
mov
sub
addr16
xor
call
loop
lods
jmp
mov
push
add
ins
add
or
retf
mov
jge
cdq
dec
add
mov
nop
test
sti
jmp
xor
in
add
jge
mov
or
and
dec
sbb
push
push
pushf
and
lods
mov
mov
xor
sbb
fs
outs
push
(bad)
sar
addr16
sub
lods
daa
stos
aas
int3
adc
repz
mov
nop
inc
xchg
dec
or
clc
or
inc
and
cmps
(bad)
sbb
in
test
sbb
into
jae
popf
ins
pusha
inc
pusha
xor
fidiv
jns
int3
div
xchg
rcl
sub
adc
sti
nop
pop
pushf
jbe
lea
cdq
xor
push
in
dec
inc
push
fimul
in
mov
hlt
sbb
pop
sub
jns
xor
movs
sar
lods
inc
hlt
movs
inc
leave
mov
mov
out
inc
in
push
lods
(bad)
in
and
pushf
jp
fistp
es
lea
shr
cdq
daa
jecxz
out
cmp
dec
pop
mov
push
and
cmp
lea
es
and
cli
fs
push
dec
lea
cmp
xchg
stos
push
(bad)
pop
xchg
repz
iret
lock
sbb
jmp
push
push
stc
push
sahf
sbb
mov
push
add
out
jo
and
cmc
clc
imul
and
enter
div
or
inc
xor
xor
ds
les
jne
js
test
ins
xchg
sub
push
adc
int
mov
xor
dec
push
inc
fisub
aam
aas
bound
mov
and
mov
mov
fcom
ficom
scas
int3
retf
mov
fmul
pop
fidiv
push
cmp
sbb
and
test
(bad)
jo
cmp
mov
cwde
sub
aad
push
and
sub
test
out
jbe
sbb
xchg
repz
cs
sub
fisttp
or
jb
mov
jmp
jb
cli
push
(bad)
cmp
jmp
ins
mov
fidiv
cdq
xchg
les
rol
xchg
rcr
ficomp
clc
retf
xor
leave
or
inc
add
xor
xchg
xor
push
mov
pop
(bad)
cli
je
and
cli
stos
cmp
xchg
push
bound
mov
fild
ins
ret
shr
fnsave
nop
rol
pop
xchg
jmp
hlt
rcl
sti
pushf
stos
jb
push
pop
push
jle
retf
cs
adc
dec
jbe
js
push
lods
inc
and
jbe
sar
imul
popf
sub
(bad)
adc
mov
sub
or
mov
add
mov
push
ss
push
jmp
pusha
popf
cmp
xor
lods
xor
sub
retf
fwait
mov
lods
fimul
dec
cmps
xchg
mov
psllw
pop
lods
mov
call
inc
mov
mov
and
sbb
cld
mov
cmp
cmp
inc
and
fxch
sbb
ds
int
rcl
and
dec
ret
sbb
jecxz
mov
sub
cmp
sbb
lods
mov
push
xchg
shl
or
mov
inc
jo
retf
pushf
or
xchg
sti
mov
push
mov
jmp
xor
mul
fidiv
or
push
xor
out
(bad)
mov
xor
push
mov
xchg
add
inc
or
mov
cmps
les
ret
cmps
lock
nop
lods
jno
push
loope
fld
jecxz
inc
sub
or
mov
cmp
cmp
jle
lock
sbb
push
mov
rcr
push
jnp
ftst
cmc
or
es
inc
pop
sbb
and
mov
push
or
aaa
mov
xor
pop
stos
scas
mov
adc
sbb
mov
ret
enter
aas
fld
das
xchg
out
sbb
fdivr
mov
ds
inc
dec
jmp
ja
imul
and
add
(bad)
mov
jp
int3
jle
jl
test
(bad)
rcl
nop
dec
stos
fst
repnz
ror
xlat
xchg
in
test
dec
in
int
movs
sahf
call
mov
jae
xchg
xor
cs
rcl
cli
int3
and
push
add
push
out
cmc
fmul
cmp
mov
mov
cli
cmp
jne
xor
repnz
test
out
pop
lods
ja
in
sub
(bad)
mov
pop
stos
and
out
mov
cmp
pop
repnz
adc
loopne
ror
imul
jl
pushf
or
push
sub
push
xor
ins
pop
mov
ja
push
inc
fidiv
pop
or
adc
scas
inc
mov
mov
jo
push
mov
add
mov
outs
pop
out
in
and
loop
dec
or
dec
scas
int
ins
neg
pop
cmp
out
rol
ds
add
and
sub
movs
ffreep
mov
inc
icebp
add
push
pop
and
leave
push
jecxz
sub
dec
dec
jge
imul
jle
cld
scas
aaa
in
les
scas
or
and
mov
test
xor
cld
mov
xlat
adc
fdivr
ds
lahf
test
aad
pop
ret
ins
ror
fst
into
daa
xchg
test
mov
jno
xchg
push
mov
popa
cmp
push
jecxz
shl
adc
mov
jmp
(bad)
movs
add
es
es
ror
xchg
inc
inc
outs
inc
sub
inc
mov
fwait
repz
(bad)
das
(bad)
cmps
scas
xor
inc
pop
add
popf
loope
xchg
mov
sub
iret
pop
push
xlat
je
mov
cmps
pusha
cwde
mov
sbb
dec
stos
adc
push
cld
or
mov
pop
inc
push
or
aad
mov
push
icebp
enter
retf
mov
ja
adc
stos
js
and
cmp
lock
and
ins
and
cmc
jb
rol
pop
movs
jp
call
push
dec
xlat
sbb
or
sbb
aaa
pop
or
or
xor
ret
in
pusha
xor
pop
mov
pusha
jl
jp
cmp
cmp
into
test
adc
add
push
stos
out
mov
xchg
out
fdivr
or
jne
or
sub
push
push
jmp
bound
pop
or
push
adc
sbb
fwait
pop
xchg
xor
fistp
mov
inc
xor
call
int3
inc
xchg
sbb
int3
dec
push
in
fnstenv
push
mov
pushf
pop
lock
sbb
mov
ds
out
dec
adc
push
dec
ja
mov
and
pushf
or
test
lea
rcl
rol
and
das
cmc
pop
retf
mov
xchg
icebp
xchg
movs
(bad)
jge
dec
mov
xor
out
scas
lock
mov
push
adc
inc
xchg
cli
or
mov
dec
cmp
movs
jl
bound
xor
mov
mov
out
cli
pop
cwde
and
loope
ins
lods
push
sub
push
jne
ss
nop
mov
mov
call
cmp
fs
sub
push
push
jmp
inc
sub
mov
or
(bad)
iret
inc
sbb
inc
dec
nop
inc
aaa
shl
mov
sub
mov
arpl
sbb
adc
movs
adc
push
xchg
in
xchg
outs
xchg
push
xchg
inc
pop
xor
je
xchg
xor
outs
das
test
xor
mov
(bad)
mov
retf
mov
test
sbb
inc
or
mov
test
pop
adc
pop
cli
sub
jbe
out
repz
cmps
shr
jno
sti
xchg
out
pop
cli
lahf
movaps
mov
mov
xchg
imul
hlt
push
jl
mov
mov
sbb
pop
push
inc
pop
les
jno
ins
pop
in
jns
sub
inc
fst
fst
cmp
js
mov
xchg
mov
shr
xchg
daa
icebp
fistp
pop
mov
sub
mov
nop
leave
push
dec
cdq
or
frstor
and
lods
inc
popa
int3
mov
mov
retf
inc
cli
test
jp
daa
xchg
es
aaa
jmp
hlt
mov
jmp
adc
push
(bad)
js
outs
sbb
pop
stc
fisubr
(bad)
push
ins
stos
mov
es
fidiv
add
adc
mov
adc
xor
sbb
data16
lahf
fiadd
(bad)
jb
jmp
xor
test
mov
fimul
test
stos
mov
pop
lds
pop
cdq
cmp
aam
fmul
jl
popf
test
xchg
or
mov
jle
sbb
bound
imul
xchg
sbb
inc
and
ds
push
lods
sbb
(bad)
mov
outs
pusha
call
or
and
(bad)
mov
cmp
ficomp
in
push
mov
add
mov
idiv
mov
stc
adc
push
sbb
lods
push
hlt
push
ins
inc
mov
jmp
mov
cdq
je
(bad)
lock
xor
call
or
into
adc
push
jmp
out
outs
inc
mov
inc
das
loop
scas
pop
and
xchg
js
cld
mov
mov
add
mov
(bad)
dec
(bad)
push
mov
das
fcom
mov
jns
dec
sar
cli
pop
les
je
mov
xor
inc
and
xchg
cmp
mov
movs
arpl
mov
das
jmp
pop
movs
dec
mov
jg
stos
ds
pop
out
dec
and
dec
outs
ss
call
or
das
and
fwait
pop
xor
jmp
add
jns
sub
mov
movs
mov
push
stos
(bad)
sti
(bad)
pop
mov
ret
jl
cmp
jle
dec
sub
cmp
aas
jb
mov
add
jle
scas
sbb
push
mov
pop
pop
pop
xchg
sbb
mov
and
pop
mov
add
or
into
sub
lock
mov
adc
enter
add
sub
xor
ret
inc
inc
push
mov
stos
push
mov
call
cmp
add
xchg
rcl
jmp
in
lods
idiv
ss
ins
dec
iret
dec
in
ins
inc
push
(bad)
push
pop
aad
xchg
ja
cmp
mov
fsub
mov
adc
inc
int3
cmc
jo
or
push
adc
lahf
add
jle
ja
sahf
adc
cwde
inc
aaa
js
call
mov
shr
aas
adc
sbb
sub
mov
jmp
movs
mov
fs
push
jb
or
das
sbb
jne
xor
ret
xchg
cmp
fcom
cmp
rcl
std
sub
dec
retf
scas
jl
mov
mov
jae
imul
pushf
rcr
lahf
mov
jge
aam
push
mov
psubw
hlt
sub
pop
fcom
aam
jo
out
test
fcomip
aam
in
pop
gs
adc
es
hlt
jns
mov
or
in
test
int3
and
add
data16
sub
push
sbb
ret
mov
adc
or
les
loopne
daa
cmp
popf
(bad)
jb
jnp
out
pop
adc
sub
dec
xor
ja
mov
aaa
lahf
mov
jne
pop
lahf
out
lods
mov
dec
hlt
mov
fwait
sub
(bad)
sbb
mul
enter
cld
outs
aad
fdivr
(bad)
imul
bound
stos
xchg
push
daa
loop
and
cwde
mov
sbb
push
xor
jb
xchg
add
mov
fwait
retf
pop
pop
(bad)
mov
add
(bad)
rol
or
call
mov
popa
icebp
jae
sbb
pushf
ficom
leave
pop
scas
ror
mov
cmps
ror
fsubr
xor
cmp
mov
jnp
test
push
cdq
ds
loopne
sub
dec
adc
bound
movs
add
mov
cmp
push
pop
fxch
lods
pop
sbb
shr
sbb
lods
pop
hlt
sub
out
and
adc
push
push
mov
int
lods
outs
in
mov
push
jmp
xchg
cdq
aaa
sar
repz
stos
js
addr16
out
sub
or
sbb
pushf
jmp
xor
or
jp
into
pushf
xor
xor
fs
ret
mov
aad
cwde
jg
shr
cmp
in
sti
or
popf
jae
(bad)
fild
adc
fs
rcr
jge
bnd
jmp
fistp
std
xchg
jbe
dec
out
jmp
jl
cli
lea
outs
lds
sub
mov
push
pop
pop
dec
jg
mov
(bad)
in
or
pushf
xchg
lods
pop
add
mov
push
or
ja
rol
lods
stc
hlt
dec
ins
xchg
and
fcmovnu
push
adc
ss
xor
cmps
cdq
pop
or
xchg
cmp
in
fmul
mov
sub
pop
cli
mov
mov
push
retf
test
pop
fs
dec
jmp
retf
sbb
retf
fwait
and
push
call
inc
inc
push
mov
ret
aam
pop
mov
jns
xor
sbb
pushf
dec
xor
dec
and
sub
jnp
rcr
mov
jg
push
shl
pop
dec
ins
mov
and
mov
push
push
data16
fs
xor
sbb
jle
or
mov
adc
fsub
je
into
scas
jne
in
mov
nop
ss
lds
mov
adc
gs
pop
jne
mov
call
imul
dec
mov
lods
mov
cli
cmp
adc
pop
sub
stos
xchg
jmp
daa
rcr
fwait
mov
xor
sbb
mov
and
jmp
mov
sbb
fs
cmps
repz
mov
or
imul
dec
mov
adc
mov
push
inc
and
lds
stc
adc
iret
xchg
mov
sbb
stc
xchg
clc
ds
mov
adc
sbb
jns
fsubp
or
cs
sbb
sub
in
xor
inc
inc
arpl
jmp
mov
mov
das
outs
in
mov
cmps
push
iret
ins
push
fdivr
lods
xor
out
fistp
call
xor
mov
lock
aaa
dec
sub
push
loop
fcom
jle
cmc
push
push
xchg
and
test
bound
inc
std
rcl
(bad)
outs
add
leave
sbb
mov
add
dec
scas
sbb
add
int
or
les
popf
test
imul
cmc
push
xor
mov
sbb
push
mov
sub
scas
dec
call
loope
iret
adc
(bad)
xchg
out
adc
mov
je
loop
jg
ja
xchg
cli
xchg
imul
test
pop
mov
test
in
sub
jecxz
push
xchg
cdq
mov
adc
or
jmp
xchg
and
jno
in
jnp
scas
push
mov
ja
div
int3
jmp
pop
add
xor
mov
inc
sbb
push
pop
jmp
(bad)
or
dec
in
lahf
pop
mov
in
xor
sub
pushf
ss
cmc
push
outs
fwait
dec
mov
aad
xor
cmp
jne
cmp
aas
movs
sahf
add
mov
jl
push
stos
dec
pop
inc
repz
fstp
mov
retf
repz
clc
or
in
fsub
and
jno
les
sbb
icebp
(bad)
std
xchg
pop
jmp
stc
and
cmp
inc
gs
and
add
not
pop
fadd
jl
dec
or
inc
pop
dec
add
cli
pusha
les
shr
(bad)
retf
int
inc
inc
fstp
pop
das
add
pop
cwde
cli
add
sub
out
bound
add
adc
mov
and
je
xchg
adc
push
sub
xchg
cmp
sub
jno
stos
movs
gs
push
stos
jns
daa
cwde
add
lea
mov
sub
pushf
cmp
or
mov
pop
xchg
inc
and
ret
sub
das
mov
cwde
fist
pop
loop
push
clc
cmc
stos
pop
repz
aas
or
loope
mov
cmp
shl
jb
dec
fs
idiv
xor
fidiv
pushw
pop
pop
ret
jne
sub
loope
add
bound
outs
pop
inc
dec
or
(bad)
mov
xchg
or
inc
cmps
aad
lods
jo
cmp
push
jecxz
(bad)
pop
cmp
adc
push
call
test
lock
jecxz
shl
cmps
popa
in
mov
xor
xchg
mov
enter
scas
jmp
add
push
(bad)
push
cmp
aaa
retf
aad
ins
jg
xchg
ja
call
inc
data16
push
push
in
bound
mov
push
int
mov
cmp
dec
aad
mov
sub
or
inc
push
inc
je
and
push
ret
xor
rcr
addr16
push
lds
div
movs
jne
inc
(bad)
scas
lahf
hlt
mov
push
pop
pop
es
sahf
int3
mov
sti
(bad)
lea
or
test
mov
push
arpl
pop
mov
xchg
mov
pushf
add
fdivp
fsub
scas
out
int3
out
and
test
(bad)
popf
pop
fbld
out
mov
and
inc
inc
in
xor
icebp
mov
cwde
mov
repz
mov
push
cld
push
inc
popa
inc
sbb
das
jecxz
je
mov
xchg
jmp
adc
aas
loop
sbb
jo
test
inc
jo
xor
or
cld
adc
inc
add
cli
mov
mov
std
cmp
sub
pop
es
outs
(bad)
mov
aad
mov
std
ret
cli
push
iret
and
std
in
mov
ins
pop
jae
scas
test
ror
push
cmp
std
lods
xor
test
sub
test
mov
repnz
into
inc
lock
mov
mov
xor
mov
inc
out
or
mov
push
out
xchg
jne
dec
mov
je
sti
pop
sar
mov
cwde
xchg
sbb
fsubr
repz
mov
sahf
test
add
mov
jecxz
or
aaa
push
clc
ss
test
or
test
mov
adc
inc
mov
sti
inc
pop
xchg
mov
add
(bad)
ror
fcomp
ficomp
mov
iret
jle
xor
repz
call
xchg
sbb
add
xchg
lods
xchg
xor
rol
mov
inc
(bad)
xchg
out
sbb
cmp
jg
sbb
retf
shr
inc
sbb
loopne
and
hlt
adc
add
pop
ror
jmp
in
xchg
popf
je
pop
hlt
xor
add
adc
das
push
(bad)
in
mov
scas
retf
inc
shl
push
fidiv
mov
int3
mov
sub
pushf
xor
sub
test
jb
cdq
push
adc
inc
xchg
sahf
adc
sbb
ja
jb
or
add
pop
movs
add
loopne
jne
dec
pop
mov
shl
inc
pusha
(bad)
mov
outs
rcr
loop
das
adc
mov
mov
arpl
out
sub
mov
add
dec
xchg
jg
sub
push
(bad)
inc
push
out
sub
mov
(bad)
repnz
xchg
pushf
fs
out
mov
cmp
mov
pusha
ja
or
lahf
(bad)
jecxz
pop
(bad)
jo
outs
imul
fild
mov
out
or
(bad)
and
sbb
int
int
inc
ficomp
adc
out
addr16
movs
hlt
ror
inc
lock
push
sub
jae
stc
push
jne
aam
ins
movs
aas
cmps
jg
inc
stc
add
cmp
inc
inc
mov
out
push
xor
push
push
xor
xor
ss
push
sbb
xor
xor
push
jle
fdivp
lahf
mov
jge
fisubr
cmp
in
xchg
jne
cmp
push
xchg
sub
cs
inc
inc
mov
iret
in
pop
jmp
call
mov
inc
mov
dec
js
jmp
dec
popf
jmp
jns
je
xchg
or
adc
xor
push
into
jb
adc
pop
shr
aas
jl
mov
dec
pop
iret
xchg
jo
mov
xchg
(bad)
or
cli
fcmovnb
mov
xlat
jae
mov
jge
pop
inc
fadd
cmp
in
cmp
sub
cmc
scas
mov
sub
push
xchg
xchg
sbb
(bad)
mov
add
push
pop
jmp
(bad)
and
mov
and
jmp
ss
mov
inc
cmp
adc
les
(bad)
leave
adc
dec
mov
pushf
(bad)
cmps
push
les
daa
jmp
(bad)
lea
dec
push
inc
std
add
pop
in
cwde
jno
dec
bswap
pop
and
xchg
rcl
call
or
adc
fsubr
xchg
popa
lock
adc
inc
mov
stos
mov
xlat
push
mov
les
pop
sbb
fwait
icebp
gs
and
mov
mov
mov
fbstp
xor
xor
xchg
sbb
sub
jno
(bad)
mov
(bad)
idiv
loope
lock
icebp
sub
jp
cwde
mov
add
(bad)
les
in
cmp
xchg
and
xchg
in
icebp
mov
mov
cmps
pop
les
xchg
sbb
adc
sbb
std
cmp
icebp
loop
mov
rcr
dec
fisubr
ins
xlat
repnz
adc
cmc
push
pusha
xchg
or
mov
add
nop
push
outs
(bad)
mov
xchg
mov
mov
stos
retf
cmp
add
mov
dec
push
pop
or
in
bound
pop
cmp
retf
out
push
adc
jmp
sub
xlat
xchg
xor
pop
stos
sub
fimul
push
test
cmp
add
mov
mov
add
loope
mov
data16
stos
pop
out
xchg
xor
stc
gs
and
cmp
call
or
sbb
arpl
lea
in
pop
stos
data16
ret
cmc
outs
cmps
outs
dec
mov
into
mov
adc
pop
pop
pop
daa
je
mul
and
stos
sti
adc
and
inc
test
push
jbe
ret
cwde
lds
mov
or
cwde
pop
in
ret
push
pop
pushf
cmp
fidiv
mov
ds
sbb
jmp
push
xor
in
inc
add
sub
sti
je
popa
inc
cmp
mov
fisttp
leave
inc
add
popa
dec
addr16
jne
int3
lahf
xor
cmp
cmp
out
enter
jo
mov
pushf
mov
mov
jno
in
jp
cdq
sbb
and
sbb
mov
adc
xchg
bound
or
(bad)
cwde
mov
sbb
mov
fiadd
jo
push
out
jmp
sbb
movs
push
mov
cdq
and
pop
mov
jmp
js
fidiv
pop
cs
sbb
popw
sub
das
popa
and
ror
movs
outs
sub
sahf
retf
cmp
sub
add
clc
movs
push
xchg
(bad)
mov
pop
int
xor
call
and
test
xor
js
pop
test
jge
dec
and
mov
test
push
iret
call
movs
stc
cli
mov
ret
and
int3
xchg
retf
movs
cs
shl
mov
ins
scas
cmps
repnz
mov
jg
fnstcw
cdq
jp
in
sti
test
sub
scas
cmps
sar
sbb
test
cmp
adc
movzx
ss
shr
adc
sar
xchg
pop
aam
dec
push
ficomp
aaa
aas
je
pop
mov
cmp
repz
test
pop
sbb
mov
fild
(bad)
mov
mov
pushf
inc
ins
add
call
mov
jmp
push
jno
lds
popf
pusha
js
xor
scas
inc
mov
dec
xchg
out
ficom
cwde
lock
add
mov
mov
jo
out
jno
push
pop
leave
nop
add
movs
loopne
sbb
jecxz
jmp
sbb
sbb
push
daa
fsub
loopne
or
push
inc
fsub
mov
adc
rol
clc
fild
add
(bad)
cmc
mov
ror
sub
sub
pusha
test
add
rcr
or
cmp
pushf
popa
lods
retf
xchg
sub
pop
mov
and
dec
(bad)
mov
into
scas
popa
push
ja
mov
and
in
cdq
fidiv
shr
fs
jns
sbb
add
rcl
pushf
stc
pop
into
aas
mov
in
scas
lods
jnp
adc
dec
inc
xchg
mov
enter
pop
es
cmp
das
and
fsubr
aas
jmp
cmc
xchg
push
dec
dec
cmps
adc
pop
into
xor
mov
pop
xor
lods
xchg
stos
or
mov
mov
lods
arpl
sbb
xor
sbb
mov
out
pushf
or
cmps
fldcw
xchg
loopne
push
test
mov
cmc
fs
pop
mov
(bad)
adc
test
or
daa
push
cmp
loopne
mov
aam
fs
ja
lock
mov
adc
call
dec
or
cmps
mov
mov
scas
jg
clc
cwde
shl
push
aam
push
xchg
in
out
add
sbb
ins
and
inc
ret
dec
pushf
out
scas
stos
fwait
mov
mov
enter
je
pushf
or
jecxz
mov
pop
out
mov
cmp
jb
hlt
cli
mov
call
jbe
shl
in
and
add
aas
cmp
loopne
mov
xchg
in
sub
and
dec
fnsave
cmp
js
xor
mov
jg
dec
sbb
xor
inc
in
addr16
sub
sbb
fbld
dec
push
pop
sbb
out
push
adc
mov
call
mov
dec
mov
call
jmp
jno
adc
jmp
rcr
int
jnp
push
jge
xchg
jae
retf
js
push
in
add
lahf
sub
shr
shr
jne
cli
or
fiadd
es
repnz
dec
rol
mov
movs
xchg
xchg
inc
fild
jo
jb
mov
mov
rcl
adc
sub
pop
mov
mov
mov
xchg
mov
mov
cmp
add
pop
neg
jmp
sbb
jmp
inc
ds
mov
jmp
aaa
add
ins
and
leave
rol
mov
dec
fcomp
cs
out
mov
imul
pop
adc
inc
inc
adc
jecxz
sbb
shl
mov
mov
xor
nop
outs
mov
popf
loopne
test
out
inc
and
xor
adc
fcomp
stos
imul
cmp
jb
inc
call
jo
aaa
into
mov
dec
je
loopne
xchg
movs
loop
mov
das
cld
inc
push
inc
pop
fild
inc
test
(bad)
and
out
cmp
jnp
push
pop
mov
mov
mov
inc
sbb
addr16
sub
mov
sub
xchg
add
jl
jne
lock
pop
(bad)
(bad)
out
xchg
jo
sbb
xlat
(bad)
adc
sbb
sbb
and
imul
sbb
aam
inc
loop
fst
repnz
push
sub
bound
je
scas
int
out
push
jle
rcr
pusha
hlt
call
push
sbb
loope
movs
push
gs
sub
and
(bad)
lahf
push
sar
outs
dec
mov
or
adc
mov
mov
popf
adc
data16
or
xor
add
mov
in
jmp
in
jg
in
scas
in
mov
sub
js
mov
mov
inc
sub
cmp
jge
aas
push
mov
test
xchg
dec
movs
pusha
cwde
retf
mov
sub
or
pop
push
and
arpl
dec
jno
xor
iret
and
dec
add
sub
sbb
(bad)
and
rcr
and
mov
and
ror
xor
fiadd
stc
nop
aad
mov
dec
cmp
cdq
cmp
ja
inc
arpl
rol
ja
das
pop
jae
bound
pop
call
inc
adc
lods
mov
jmp
jno
jne
cmps
pop
push
jecxz
in
cmp
add
shl
cmp
mov
or
pop
repnz
pop
cmc
std
(bad)
mov
or
jne
sbb
sar
dec
xchg
shl
shr
loop
add
or
and
sbb
icebp
shl
xor
bound
enter
mov
or
sahf
adc
stos
push
jmp
scas
mov
jmp
push
and
int
aaa
out
sbb
inc
dec
cdq
pop
sbb
stos
mov
retf
aad
sbb
dec
push
mov
retf
cmp
xor
cmp
jmp
pop
bound
dec
dec
pop
fdiv
sar
ds
jmp
sub
out
test
nop
dec
pop
cmp
cmps
dec
leave
cmp
mov
and
cmp
lds
mov
lods
or
daa
mov
pop
jl
jmp
shr
mov
dec
mov
push
out
test
pop
mov
inc
mov
and
jae
mov
ins
jle
lahf
icebp
(bad)
aam
stos
arpl
xchg
inc
pop
fwait
stos
cld
scas
jle
push
enter
sahf
pusha
xchg
xchg
adc
call
jo
out
mov
xchg
test
pop
test
out
int
sub
push
push
stc
mov
or
leave
(bad)
fs
mov
bound
pusha
outs
adc
sbb
out
mov
(bad)
fst
pop
sar
cli
addr16
ins
je
lahf
stos
les
mov
pushf
xor
int
mov
fwait
push
lea
or
or
(bad)
or
push
ret
pushf
shl
pop
jb
xor
leave
test
jge
mov
cmp
sbb
call
cld
lods
sbb
lods
adc
cs
es
mov
retf
repz
fsubrp
mov
push
xchg
aas
push
mov
test
adc
hlt
mov
xchg
mov
clc
adc
xchg
int3
lods
or
lods
or
and
sbb
dec
xor
cmps
cld
fwait
(bad)
pop
(bad)
mov
mov
inc
jb
mov
inc
add
inc
mov
mov
or
imul
jge
test
fdiv
mov
retf
int
jle
loop
dec
inc
adc
fld
pop
and
je
out
idiv
push
mov
leave
leave
push
sbb
inc
punpckhwd
cmp
push
or
(bad)
push
pop
clc
jb
outs
imul
push
mov
lods
push
(bad)
ror
ins
retf
jnp
test
mov
and
mov
fwait
stos
xlat
xchg
sbb
popf
call
pusha
push
loop
inc
pop
fadd
movs
iret
push
stc
mov
mov
and
shr
lods
loope
call
pushf
(bad)
in
dec
mov
rcr
imul
jnp
stc
jno
mov
and
stos
leave
outs
mov
retf
add
pop
ins
out
jb
jle
mov
xchg
int
mov
js
lds
and
icebp
xor
mov
or
std
dec
jmp
mov
pop
cdq
je
inc
dec
push
xor
test
aad
mov
in
xchg
or
sbb
sbb
or
pop
pop
or
cdq
ret
out
xchg
cli
mov
and
sub
jne
cli
aas
and
fdivr
outs
ficom
bound
fidiv
pop
popf
dec
inc
ror
jmp
cmps
pop
pop
dec
xlat
jecxz
cmp
test
out
in
push
adc
mov
inc
out
movs
imul
std
mov
xor
gs
call
push
jae
rcl
lea
ss
xchg
pusha
sub
jbe
(bad)
imul
pushf
fstp
bound
jge
inc
or
leave
outs
outs
imul
dec
pop
int3
lods
pop
fisub
(bad)
stos
sub
pop
outs
mov
scas
sti
cli
adc
leave
xor
push
jno
popf
icebp
or
(bad)
xchg
movs
xchg
push
test
fisubr
mov
lods
aas
(bad)
call
or
or
push
jb
dec
icebp
repz
pop
push
inc
enter
sub
out
sub
mov
xor
(bad)
nop
jns
mov
call
aad
cmp
loopne
mov
leave
xor
(bad)
fwait
and
shl
inc
fst
xchg
pop
pop
pop
scas
jecxz
or
jns
mov
repz
aad
lahf
clc
cld
cmp
cmp
push
dec
ss
inc
aam
mov
les
bound
sub
pop
and
xchg
ret
mov
xchg
loope
push
js
mov
mov
add
xchg
lds
mov
inc
mov
stos
jb
cwde
xor
mul
mov
int
(bad)
sbb
jmp
mov
mov
addr16
mov
cmp
call
sub
lods
mov
mov
retfw
je
mov
and
xor
pop
pop
sar
mov
and
inc
pop
mov
inc
or
mov
xchg
jnp
out
mov
pop
jmp
pop
hlt
cmp
ret
xchg
dec
mov
cmp
ror
inc
pop
ins
ret
in
lea
imul
mov
inc
hlt
sub
out
mov
cdq
ret
(bad)
iret
adc
jmp
pushf
mov
xchg
aas
and
push
sbb
pop
popa
rol
lock
push
ja
dec
std
mov
xchg
idiv
jbe
mov
push
fstp
xlat
mov
push
mov
mov
xchg
les
push
rdpmc
push
outs
leave
and
xor
sbb
out
mov
dec
mov
inc
pop
inc
fsub
mov
scas
and
push
mov
ds
mov
jno
mov
push
mov
dec
cs
or
xchg
jg
mov
rcl
std
push
ja
dec
xchg
jb
in
inc
sbb
ds
sub
imul
or
jbe
mov
popf
xchg
loopne
cmp
daa
xor
xchg
std
and
fist
fist
mov
bound
push
gs
stos
pushf
addr16
jle
not
ds
inc
sub
jge
call
mov
scas
xchg
pop
rcr
dec
mov
add
nop
pop
cmp
clc
and
int
inc
fs
cmp
xchg
jmp
dec
into
mov
xchg
imul
in
adc
mov
out
leave
movs
cmc
(bad)
loop
repz
mov
movs
pop
push
jbe
in
mov
lock
mov
imul
cmp
jg
fwait
retf
js
add
sbb
lea
cmps
call
mov
loope
sub
out
lock
mov
mov
pop
bound
(bad)
int
inc
add
test
daa
cli
and
mov
pop
std
test
mov
pop
lds
xchg
aad
popf
add
xor
out
or
fist
and
test
or
cdq
sbb
sahf
hlt
(bad)
dec
es
jmp
mov
cmps
aad
(bad)
sahf
bswap
adc
add
shl
mov
gs
xchg
mov
xchg
out
cwde
arpl
(bad)
in
pop
sahf
rcr
stc
cmp
ror
sub
pop
aaa
sar
mov
std
xor
add
sub
iret
add
mov
dec
popw
sub
es
(bad)
xor
xor
fstp
ins
push
lock
inc
popf
push
aam
mov
push
addr16
push
xor
jmp
jge
fadd
sbb
adc
icebp
jns
xchg
mov
and
and
mov
adc
shl
loopne
call
mov
inc
cmp
dec
sbb
pop
mov
inc
call
inc
cmp
mov
hlt
cmps
jb
lods
push
add
stos
add
pop
push
pop
xchg
add
xlat
cmps
mov
pop
push
clc
test
cwde
xor
pop
dec
push
std
scas
dec
push
adc
hlt
pop
adc
adc
out
adc
pop
inc
stc
dec
and
loop
stos
cdq
(bad)
sub
aas
(bad)
or
fsubr
or
mov
int3
xchg
xor
jne
imul
pop
test
xor
jge
js
jb
push
xor
retf
jbe
push
(bad)
aas
sbb
rcl
rcr
cdq
clc
mov
and
cmc
test
dec
shr
fcom
(bad)
push
adc
test
mov
pop
xchg
mov
les
lods
jmp
sub
mov
loop
fisubr
imul
cmp
sub
jmp
pushf
bound
add
or
mov
push
pop
fstp
add
mov
or
in
loop
jnp
sbb
aas
int
mov
jne
push
std
mov
ds
in
mov
mov
jle
shl
das
mov
push
ins
cwde
mov
and
dec
enter
or
aam
add
fnstcw
sbb
xor
inc
rcl
xchg
add
jge
in
scas
ds
jo
push
aas
repnz
sbb
sub
rcr
add
fdiv
movs
movs
sub
push
dec
and
and
(bad)
scas
mov
jmp
push
cmp
mov
sbb
sub
jp
into
sub
movs
adc
(bad)
lods
ins
add
neg
mov
push
sbb
xchg
int
ficom
mov
jb
retf
lahf
mov
fbld
arpl
ret
pop
jo
cmp
scas
ret
cmp
push
pop
ins
(bad)
push
sbb
sbb
ror
mov
(bad)
cmp
mov
repnz
mov
in
loop
jl
add
xor
int
fwait
ror
xchg
mov
cdq
mov
xchg
(bad)
sahf
jp
sbb
jle
mov
push
movs
stc
(bad)
in
in
test
add
aad
lods
or
and
ins
mov
bound
sub
xor
push
push
cdq
rol
sub
xchg
xor
mov
dec
inc
cld
mov
dec
scas
test
fcmovb
xor
adc
xor
mov
mov
data16
dec
cmp
ret
lock
mov
add
loopne
mov
lods
loop
and
(bad)
das
push
pop
aam
(bad)
or
xor
push
aaa
dec
adc
push
inc
add
fild
int3
mov
xchg
aaa
xchg
sbb
das
int
sub
xor
loop
sbb
rol
movs
push
xchg
sbb
in
and
lahf
fwait
movs
ret
neg
sub
dec
leave
mov
sbb
jmp
cmc
in
push
or
add
adc
add
rcl
bound
fcmovne
cwde
lds
(bad)
(bad)
and
xor
or
cmp
adc
add
cmp
add
mov
aaa
daa
push
mov
push
sbb
fst
push
jno
(bad)
sbb
es
sub
xchg
push
pop
and
xor
in
push
out
(bad)
mov
rcl
call
sbb
test
(bad)
call
xchg
pop
aaa
movs
dec
xchg
mov
test
pop
sbb
shl
ret
xchg
sub
test
mov
int3
call
xor
cmp
adc
mov
dec
fist
repz
add
cmps
sub
fcomi
cmps
jo
mov
pop
xchg
popa
sar
cmp
inc
xchg
jle
fsub
fcmovbe
cmp
ret
xor
xchg
sbb
aam
cli
in
mov
mov
sbb
bt
xchg
outs
pop
pop
sub
scas
test
pop
xchg
call
mov
popa
push
hlt
call
cmps
pop
enter
imul
scas
jge
dec
or
js
adc
int
pushf
xor
pop
sub
push
mov
jge
push
rcr
arpl
inc
jge
mov
push
push
daa
mov
fwait
jecxz
cmps
jmp
xchg
mov
fmul
mov
push
cwde
loop
popa
lods
cmp
and
aas
mov
repnz
les
inc
cmp
inc
fs
sub
aaa
daa
inc
add
popa
addr16
daa
loop
mov
add
and
cmp
add
push
stos
pop
popa
lock
jns
mov
das
dec
test
jge
in
rol
xor
sbb
into
add
inc
hlt
sbb
xchg
mov
not
loope
mov
je
mov
clc
push
mov
or
or
sbb
sti
pop
xchg
pusha
shr
xor
or
xchg
xchg
xchg
or
pushf
sbb
scas
inc
and
and
fwait
movs
pcmpeqd
mov
(bad)
xchg
stos
inc
mov
shl
mov
or
cmp
sub
jbe
push
ins
aam
jle
shr
(bad)
movs
and
imul
lods
repz
fisubr
add
jo
scas
in
add
in
int3
(bad)
loop
jnp
sbb
in
dec
pop
cmc
aaa
mov
xor
jb
test
cmp
push
aam
scas
loope
outs
add
dec
add
add
rol
cmc
dec
dec
lods
mov
pop
movs
in
fsub
pop
into
shr
lahf
mov
pop
retf
mov
mov
clc
das
daa
sbb
stc
aad
dec
sub
shl
add
js
shl
in
(bad)
call
jge
sbb
inc
fsub
nop
je
and
in
or
or
mov
in
adc
shl
stos
and
popa
xchg
ss
mov
cdq
push
cld
fs
mov
cmp
jno
mov
mov
int
cmp
inc
or
push
aaa
and
icebp
push
jno
fidiv
movs
pusha
jb
dec
loop
mov
ror
pop
sbb
test
mov
aad
imul
test
(bad)
neg
xchg
add
adc
int
retf
loop
and
fwait
inc
pop
lods
or
pop
jo
sub
hlt
pop
ins
cmp
(bad)
fisub
aam
cli
jae
mov
lea
mov
pop
adc
icebp
cs
idiv
(bad)
push
xchg
inc
jbe
xchg
lds
dec
mov
imul
lods
dec
shl
(bad)
fild
outs
sbb
lea
jbe
push
cmp
xchg
adc
and
jge
stos
xchg
jbe
mov
(bad)
mov
arpl
mov
icebp
cs
fild
daa
std
popa
(bad)
sub
pop
xlat
xlat
add
push
jmp
push
fsub
pop
test
fdivr
inc
or
ss
cwde
mov
cdq
stos
fnsavew
pop
mov
out
sbb
xchg
inc
xchg
mov
mov
bnd
sbb
push
iret
add
sub
aam
ret
jne
bound
mov
in
mov
retf
mov
std
pop
jmp
cli
mov
ss
xchg
jmp
jg
mov
push
das
dec
pop
adc
xor
xor
scas
data16
fistp
in
paddd
xchg
cmps
jecxz
popf
xchg
stc
popa
push
loop
ins
mov
xchg
mov
ja
adc
pusha
sahf
test
test
or
mov
movs
into
xor
cmp
hlt
dec
ss
lods
shr
arpl
pop
xchg
bound
inc
lahf
sbb
clc
setb
pop
pop
shl
inc
ja
push
push
sub
cmp
daa
retf
jnp
clc
adc
das
aas
and
es
repnz
in
inc
cwde
dec
aad
outs
test
inc
sub
cmps
bound
jmp
mov
sbb
fbld
aaa
mov
xor
(bad)
int3
push
out
push
and
and
sub
push
cmps
imul
inc
addr16
call
or
or
adc
sti
dec
lods
fwait
icebp
adc
addr16
jno
xor
sub
popa
mov
xor
adc
movs
mov
jmp
mov
loop
arpl
inc
dec
cmps
push
les
gs
jae
and
fsub
push
int
jae
sar
iret
fist
or
jmp
xor
sbb
cmovbe
sub
stos
int3
adc
dec
jmp
jae
outs
sbb
lds
cmp
(bad)
push
adc
push
out
cmc
or
in
(bad)
loopne
pop
sbb
int3
daa
inc
jne
adc
lods
mov
and
or
into
les
adc
mov
mov
mov
rcl
adc
cdq
rcl
clc
push
push
ds
loope
sub
stos
and
dec
in
ja
nop
rol
ret
aaa
pop
ficom
lds
push
dec
adc
loop
jecxz
pop
lods
xor
psadbw
xchg
adc
add
sub
jecxz
movs
(bad)
enter
jl
in
or
xchg
push
push
adc
mov
cmp
xchg
push
and
addr16
sar
inc
jmp
push
loope
mov
jl
outs
loopne
add
clc
pop
and
aaa
(bad)
cmc
cmp
sbb
mov
int3
(bad)
addr16
cli
je
movs
pop
xchg
das
sar
repz
repz
fnstenv
xor
push
in
pop
jns
xchg
or
out
pop
scas
mov
popf
push
in
inc
out
xchg
cld
popf
imul
lods
push
test
jmp
pusha
ds
sahf
mov
sub
clc
pop
in
push
or
push
xor
mov
and
and
mov
or
mov
pop
test
(bad)
pop
inc
in
mov
push
mov
adc
aas
aad
dec
jo
mov
fisttp
xchg
rol
cmp
in
das
inc
push
pop
das
pusha
(bad)
jmp
lock
dec
or
aas
add
scas
pusha
sbb
lahf
xor
dec
imul
mov
mov
sub
sub
dec
xchg
adc
cdq
(bad)
and
and
leave
push
pop
movs
int
sbb
dec
sub
mov
imul
mov
test
xchg
ret
mov
sub
push
lock
adc
push
dec
xchg
(bad)
sbb
cld
scas
cmp
hlt
ins
adc
adc
in
adc
sub
in
fbld
inc
adc
cmps
jno
fwait
push
jp
out
sbb
dec
push
aaa
rcr
in
pop
clc
or
test
adc
fs
(bad)
mov
icebp
mov
jmp
pusha
dec
pop
in
mul
cmp
leave
ss
int
xor
push
adc
sbb
add
mov
js
icebp
push
push
stc
stos
cmps
mov
or
mov
movs
iret
jg
sub
cdq
stos
fst
cmp
xchg
sub
and
and
cmp
ins
adc
ret
rol
adc
mov
in
inc
mov
daa
shl
out
add
hlt
(bad)
xor
adc
inc
sbb
lock
inc
test
add
or
dec
jne
out
pop
repnz
adc
and
(bad)
fcom
mov
pop
leave
sub
das
fsubr
add
sbb
arpl
pushf
(bad)
fwait
pop
inc
sbb
in
cmp
mov
inc
jno
sar
pop
sub
cmp
dec
adc
mov
ins
or
aad
xor
push
repz
xor
jno
or
or
and
mov
ins
mov
mov
jno
enter
leave
stos
cs
fwait
jno
pop
jns
jmp
xchg
data16
xor
mov
ss
push
push
mov
jae
jae
push
imul
repz
inc
push
inc
jg
or
repz
(bad)
pop
sbb
sbb
jb
cmp
js
pushf
pushf
xchg
bound
adc
mov
outs
cmps
or
(bad)
push
mov
pop
jl
ret
(bad)
cmp
loope
cmp
add
in
inc
xlat
int
into
xor
mov
and
test
aaa
inc
mov
in
std
sbb
ficomp
sub
loopne
pop
iret
sub
pushaw
or
out
pushf
jae
out
loopne
movs
cmp
(bad)
mov
popf
mov
shr
mov
loope
jmp
lds
pop
dec
mov
jns
icebp
jge
jbe
adc
and
call
or
stos
stc
push
xor
mov
les
inc
das
mov
sbb
xchg
sahf
jns
ficom
stos
jne
mov
outs
clc
cmp
sbb
or
or
mov
sub
xor
or
push
repz
xchg
jbe
nop
cmps
xchg
adc
aad
mov
enter
out
push
fsubr
imul
leave
mov
sub
inc
in
repz
pop
je
mov
inc
and
(bad)
mov
xchg
lgs
xchg
ins
sbb
xor
push
mov
inc
int
adc
adc
mov
mul
(bad)
faddp
cli
bound
into
dec
push
sbb
popf
hlt
enter
xchg
adc
and
(bad)
xlat
inc
jo
push
out
xchg
sbb
in
out
xor
mov
sbb
jl
mov
push
jmp
and
add
sahf
cmps
out
push
lahf
fimul
enter
test
cmp
ficomp
clc
adc
fild
xor
xchg
inc
xchg
pop
out
push
pop
add
pop
and
out
setb
popf
dec
push
pop
sbb
jecxz
adc
mov
adc
(bad)
stc
ret
and
xlat
call
in
jmp
adc
pop
ja
mov
xchg
enter
mov
and
push
lea
add
push
xor
shl
sti
or
mov
fstp
out
mov
sub
(bad)
pop
jge
jnp
jmp
sub
call
cs
mov
not
es
inc
xchg
mov
repz
inc
loop
pop
sub
inc
pop
gs
repz
pop
test
push
daa
pop
inc
cli
mov
sub
lods
push
xor
pop
dec
les
in
popa
fiadd
mov
xor
mov
shl
int3
arpl
xchg
loopne
in
cmp
cmp
stos
xor
cmp
bound
jg
mov
ds
or
aad
aas
les
leave
sar
lahf
pop
push
in
aaa
mov
adc
push
ja
sbb
out
cmps
fs
sub
cmp
push
sub
inc
and
push
loope
sbb
pop
shr
fiadd
int3
push
ins
adc
test
daa
or
sub
(bad)
push
addr16
sbb
(bad)
adc
add
(bad)
adc
mov
ss
jp
mov
pop
cmp
dec
jae
pop
and
das
loopne
gs
inc
add
inc
push
rcr
fbstp
add
mov
repz
cwde
pop
fdivr
or
inc
out
sti
mov
and
sub
outs
fsubr
sub
mov
xor
in
sub
pop
sbb
mov
mov
scas
sub
pop
test
xor
mov
out
clc
addr16
ret
lahf
(bad)
mov
push
out
aas
arpl
jnp
stc
mov
scas
push
fdiv
mov
adc
test
or
pop
push
lods
into
scas
pop
or
mov
cmp
cs
and
pop
loope
cmc
cli
cld
ret
adc
aam
inc
lds
sbb
sti
out
and
xor
ins
sub
cmp
jge
icebp
dec
xchg
xchg
out
jecxz
push
push
sub
xchg
gs
in
xor
adc
sbb
mov
lds
mov
push
adc
shl
xor
inc
stos
ret
jae
sub
jle
neg
jo
fs
ins
out
out
in
dec
xchg
aaa
pushf
xchg
mov
xchg
lods
sub
iret
pop
fcom
sti
aaa
outs
and
retf
out
mov
inc
loope
xor
jo
mov
mov
mov
fisttp
xchg
fstp
xlat
jns
or
inc
mov
repz
mov
xchg
sbb
mov
sbb
test
fucomp
mov
test
xor
sbb
out
xor
das
das
or
jbe
gs
dec
retf
loopne
std
out
test
call
add
xlat
mov
mov
movs
cmp
in
popa
out
xor
cmps
arpl
sbb
sbb
mov
inc
dec
stc
push
mov
xchg
and
mov
arpl
sub
dec
jne
xchg
pop
sub
pop
xchg
xor
fidivr
xchg
out
cmps
(bad)
xor
sbb
cmp
(bad)
xchg
dec
imul
call
lea
test
mov
xor
jmp
xlat
add
push
call
mov
push
jo
popf
rcr
pusha
mov
jmp
dec
xchg
cmps
push
adc
add
loope
mov
sbb
sub
dec
mov
test
rcl
mov
loopne
cmp
xlat
(bad)
mov
xchg
dec
add
repz
fild
call
sub
stc
jecxz
adc
ror
jb
inc
shl
push
data16
and
stos
and
stos
mov
pop
pop
jns
sbb
daa
jae
xchg
gs
rcr
iret
fucomip
aas
adc
inc
mov
retf
stos
jge
(bad)
hlt
mov
ror
jg
jp
ficom
mov
push
inc
inc
inc
(bad)
jno
dec
js
cmp
mov
pop
repz
imul
lods
adc
pushf
jae
jae
cld
popf
idiv
arpl
cmp
jmp
ret
ds
push
sbb
lods
imul
(bad)
arpl
pop
add
sahf
inc
mov
pop
repnz
xor
adc
xor
stc
std
(bad)
inc
adc
fsubr
xor
sti
(bad)
aaa
mov
into
push
mov
adc
(bad)
pushf
pop
lock
(bad)
loop
in
loopne
sbb
mov
xor
in
cmp
scas
popf
sbb
pop
dec
xchg
cmp
mov
adc
mov
cmp
into
xchg
iret
mov
add
rcl
pop
push
mov
cli
adc
dec
retf
retf
mov
pop
xchg
ss
jecxz
fidiv
std
retf
xchg
cld
push
stc
jo
inc
cdq
out
xchg
pop
ja
outs
retf
das
or
xchg
(bad)
loop
lea
cmps
pop
js
mov
sbb
mov
and
shl
fdiv
inc
imul
sti
fsub
cdq
push
jecxz
sbb
ja
push
das
sub
push
xor
xchg
sub
lods
dec
sti
cmp
fidiv
add
out
adc
pop
inc
das
add
addr16
stos
push
pop
aad
fucom
or
xchg
mov
movs
add
arpl
ret
cwde
jb
repz
mov
mov
sub
jbe
jl
push
inc
inc
add
xchg
jno
sub
adc
(bad)
xchg
add
out
mov
add
cli
push
cs
shl
ret
aam
mov
arpl
add
inc
fisttp
(bad)
pop
push
test
pushf
je
je
in
push
test
aas
xchg
cmp
add
and
mov
mov
fdiv
inc
dec
out
dec
movs
jmp
(bad)
loopne
inc
test
mov
fwait
lock
xchg
cmp
mov
lock
repnz
mov
retf
jp
inc
or
cmp
or
xchg
in
fidivr
xchg
es
hlt
lods
cmp
mov
int3
lods
push
fwait
aad
xchg
push
test
(bad)
das
fcom
cmc
das
fiadd
(bad)
pushf
int3
add
and
inc
push
jne
jb
(bad)
or
iret
fimul
pop
ins
lods
retf
jmp
sbb
adc
icebp
push
xor
adc
jg
add
and
or
outs
and
nop
mov
lods
lods
test
push
and
sbb
stos
jmp
outs
adc
cli
imul
ja
shr
aaa
or
sti
leave
add
aas
pop
pusha
(bad)
pop
std
jno
push
jle
mov
pusha
push
fisttp
sub
je
retf
ds
add
push
pop
sub
int
loopne
sbb
fidivr
(bad)
je
call
jb
cmp
dec
scas
jb
mov
test
jmp
jge
fidivr
mov
les
hlt
outs
or
in
mov
fld
xor
leave
mov
adc
xor
loop
sbb
call
inc
cmp
mov
hlt
addr16
mov
mov
mov
sbb
jno
mov
scas
imul
js
fwait
(bad)
xor
xor
mov
and
sbb
sti
cs
pop
jg
inc
mov
pop
sbb
(bad)
imul
retf
in
mov
lds
rol
fmul
xor
pop
out
push
aad
call
sub
mov
jecxz
xchg
(bad)
jmp
mov
in
inc
into
cmps
stos
sbb
adc
xchg
ins
fisttp
sbb
dec
or
mov
cmps
cmp
ret
test
pushf
retf
inc
cmp
inc
out
int3
mov
sbb
and
scas
xlat
push
loop
shl
outs
adc
push
pop
shl
mov
xchg
bound
aam
and
or
mov
loop
mov
(bad)
pop
aam
mov
rcr
aad
sbb
int3
cld
icebp
mov
dec
mov
iret
int
jno
lods
mov
cmc
jle
add
sbb
mov
xchg
mov
arpl
push
cmp
push
(bad)
jbe
je
test
jecxz
or
out
xchg
sbb
retf
dec
mov
sbb
arpl
add
mov
lahf
add
imul
pop
adc
sub
jo
add
cdq
sahf
lods
mov
hlt
lds
clc
add
aam
aaa
inc
stc
iret
mov
js
and
rcr
xor
and
out
stc
bound
pop
dec
adc
add
lea
mov
cmps
cmp
sar
mov
pusha
pop
stc
in
mov
jmp
dec
imul
mov
std
mov
add
jge
cmp
cli
mov
aas
mov
(bad)
xchg
test
sbb
or
dec
scas
cmps
push
adc
mov
mov
mov
sbb
jle
inc
mov
lock
push
dec
xchg
fdivr
xchg
daa
xchg
cmp
std
jne
inc
(bad)
loop
mov
cdq
popf
loope
and
mov
sub
sti
dec
out
fidiv
mov
xor
enter
ret
jmp
scas
fmul
retf
sar
popf
loopne
mov
cld
sbb
add
nop
lods
aas
mov
addr16
rol
jb
fisttp
(bad)
std
icebp
dec
pop
xchg
outs
stos
dec
xchg
pop
push
xchg
sub
call
xchg
xchg
ins
push
inc
popf
fcomp
fistp
mov
fld
mov
sub
mov
pop
lahf
xchg
sub
xor
or
dec
xchg
scas
sub
ret
movs
pop
push
lea
mov
jp
jo
jg
test
xor
aam
fstp
stc
mov
mov
mov
dec
pop
int
add
pop
xchg
add
pop
inc
and
mov
cli
es
add
cmps
push
and
ins
into
fimul
mov
sbb
push
shl
adc
push
wrmsr
leave
mov
or
es
mov
shl
in
or
add
scas
iret
push
inc
test
and
xchg
dec
enter
or
mov
scas
(bad)
je
(bad)
xor
and
shl
pop
(bad)
push
es
fnstenv
xchg
les
aas
in
fst
and
xor
movs
sub
or
gs
fstp
adc
mov
call
xchg
push
sub
sub
fidiv
test
bound
jecxz
sbb
cmp
jo
inc
jo
sbb
popf
adc
test
mov
jge
adc
fild
push
jae
js
jbe
inc
and
pop
aam
dec
in
push
aaa
in
mov
dec
sub
xor
jb
mov
mov
jmp
hlt
in
fs
nop
inc
call
mov
addr16
clc
aad
xchg
mov
ja
out
jbe
(bad)
push
xchg
in
push
inc
jne
add
lahf
adc
loope
ret
scas
jb
daa
or
sbb
repz
mov
popf
mov
retf
shr
or
outs
dec
outs
jge
xor
and
sub
and
push
fdiv
xor
gs
sar
stos
scas
cmps
ret
pop
inc
lds
push
call
mul
out
xchg
sbb
cmp
pop
jge
cmp
dec
mov
in
mov
retf
fild
ss
push
(bad)
sub
xor
jno
stos
lods
fwait
test
in
mov
test
add
add
mov
mov
adc
shl
adc
sub
lods
(bad)
jge
data16
mov
pop
cmc
lahf
cmps
test
popa
outs
fcomp
(bad)
sbb
xor
dec
cmp
cmc
bound
cli
mov
es
popf
js
cmps
cmp
stos
push
mov
or
cs
jmp
fisub
mov
inc
push
bound
test
ds
adc
in
hlt
add
pop
push
jo
cdq
sbb
(bad)
pop
imul
pop
arpl
test
out
shr
js
push
icebp
mov
mov
or
jecxz
fst
(bad)
jno
mov
pop
setae
push
lods
mov
das
dec
ret
pop
movs
jg
(bad)
mov
push
popa
fnstenv
cmp
bound
inc
xchg
inc
push
ss
in
cwde
cmp
outs
in
sbb
pop
fld
loopne
pop
in
cmp
and
or
ret
ins
and
mov
cwde
cmp
cmp
(bad)
lock
mov
(bad)
lahf
fsub
sbb
pop
cmp
es
adc
cmp
in
dec
cmps
aad
in
mov
push
icebp
cld
mov
push
dec
pop
push
ins
les
and
xchg
sbb
mov
jo
xchg
mov
pop
outs
xor
gs
repnz
mov
pop
into
sub
xor
frstor
xor
mov
aam
pop
inc
fdiv
adc
int3
jae
pop
jmp
movs
out
xchg
adc
js
inc
fdivr
call
je
not
inc
je
cmp
add
xchg
popa
rep
outs
(bad)
mov
pop
xor
or
push
inc
xchg
inc
popa
xchg
mov
ins
push
sbb
fist
aas
add
inc
dec
std
fisub
ds
repz
stos
push
ror
xchg
xchg
pop
js
xchg
pop
aaa
xor
popf
mov
or
adc
inc
sub
jl
ror
jecxz
inc
in
aas
mov
fild
inc
and
mov
lea
xchg
fdiv
lock
inc
push
imul
shr
scas
nop
push
mov
shl
in
popf
mov
test
sub
scas
ds
sbb
and
xor
adc
int
pop
cmp
mov
cld
mov
push
xchg
fmul
adc
fld
mov
in
test
xor
les
js
scas
in
and
ret
mov
inc
rcr
not
int3
pop
cmps
pop
cld
mov
jae
loopne
lods
sbb
adc
ss
inc
adc
and
cmc
pop
cmc
mov
iret
push
out
inc
cdq
neg
mov
lods
jnp
popf
hlt
inc
push
xor
mov
mov
push
rol
int3
xchg
std
push
mov
mov
(bad)
sbb
cmps
xchg
xor
fld
lds
pushf
sahf
inc
retf
aad
repz
cmc
imul
js
mov
mov
scas
in
shl
in
into
mov
adc
test
das
call
test
(bad)
or
out
movd
icebp
clc
pmulhw
fs
push
fld
push
add
scas
lods
mov
mov
mov
(bad)
ja
jge
iret
ret
push
mov
or
and
inc
mov
push
jmp
test
call
xchg
mov
movs
xchg
inc
ins
shl
je
movs
cmp
inc
mov
data16
cmp
jae
push
retf
stos
sub
sbb
mov
sar
mov
xchg
call
(bad)
pop
jno
cwde
enter
mov
das
inc
les
hlt
ret
ins
into
mov
mov
xor
xchg
add
mov
lods
(bad)
cmp
sbb
xchg
inc
sbb
ins
popa
push
lods
mov
in
or
xchg
leave
push
sub
pop
or
cmp
mov
pop
mov
scas
leave
cmp
mov
mov
sbb
icebp
bound
jae
in
push
ss
cmp
cmps
xchg
loope
ror
or
out
cmp
xor
popa
ins
push
jbe
pop
push
enter
jmp
popa
cs
add
pop
pop
adc
adc
inc
(bad)
fbld
loope
and
inc
enter
and
rol
push
pushf
adc
cwde
test
xchg
add
(bad)
cld
mov
loope
test
lahf
lea
add
xor
and
xchg
out
rep
movs
adc
adc
or
call
jecxz
push
add
jg
mov
pop
xchg
(bad)
sahf
mov
and
mov
mov
movs
ficomp
push
(bad)
stos
mov
je
mov
mov
or
ret
inc
and
pushf
shl
rol
retf
les
mov
dec
add
adc
jnp
add
push
bound
fwait
or
test
push
(bad)
aam
ret
cmp
cmp
adc
xlat
aad
pop
in
xchg
jp
or
lahf
push
les
xchg
icebp
cmps
push
jmp
call
mov
jo
icebp
sbb
jge
inc
and
mov
adc
icebp
push
sbb
shr
jl
sub
cmp
or
jae
leave
aas
mov
push
jno
jno
movs
pop
shl
inc
lods
movs
call
movs
mov
movs
jae
into
mov
or
mov
push
dec
mov
pop
jmp
stos
lods
movs
cli
jecxz
outs
aad
xchg
int
(bad)
gs
jl
jb
add
and
outs
loopne
mov
or
inc
loop
rcr
add
sub
inc
and
icebp
xchg
mov
popa
aas
push
in
push
outs
adc
gs
hlt
cmp
sbb
push
fist
loope
je
inc
add
add
xchg
dec
call
add
clc
jne
dec
aam
imul
fisubr
mov
sub
rcr
iret
aad
or
fdiv
arpl
sar
or
jmp
dec
aas
sub
cmps
sbb
cdq
daa
test
cmp
call
lods
or
jmp
out
(bad)
leave
mov
aam
push
jno
sub
mov
ror
pushf
cmp
js
push
or
cmps
retf
sbb
xor
leave
or
and
test
jo
jle
mov
sub
enter
ja
xchg
cdq
adc
mov
push
jo
push
xor
and
and
dec
ret
mov
stc
pop
xor
into
and
xor
ss
ss
leave
cmp
xor
sub
adc
pushf
pop
jmp
(bad)
popa
and
inc
jmp
mov
add
and
int
dec
sub
or
and
push
fidiv
icebp
ret
fst
sub
scas
lahf
push
clc
adc
pop
ror
mov
cmp
sub
enter
test
mov
and
push
out
hlt
jno
add
cmp
push
dec
xchg
or
sub
push
cmp
sti
cmp
cmps
jbe
jno
dec
sub
push
jmp
xlat
add
mov
rep
dec
jmp
push
add
cmp
push
int3
je
gs
sahf
push
out
jl
jecxz
test
mov
scas
dec
sub
stc
shl
popf
mov
test
fisttp
pop
sbb
(bad)
cs
xor
mov
mov
mov
cdq
pop
ss
sub
adc
xor
movs
lock
shl
pop
dec
imul
adc
cmp
or
inc
into
sti
in
nop
out
test
rcl
repz
sub
retf
push
loopne
pop
push
pop
int
cmps
pop
test
je
stos
push
dec
stc
loope
in
sbb
xlat
js
mov
fs
push
push
call
push
inc
aas
xor
mov
mov
inc
adc
int
ret
loope
sub
mov
mov
pop
ror
dec
pop
jo
add
inc
xchg
mov
or
shl
add
mov
sub
mov
sub
push
mov
rep
dec
retf
int
mov
xor
mov
mov
sbb
ret
push
fimul
cmp
xchg
dec
inc
pop
jnp
pop
lahf
add
stos
je
nop
in
xchg
and
add
call
cdq
pop
cmp
shr
pop
adc
push
mov
cmp
mov
dec
xor
or
adc
retf
inc
fimul
jo
call
cmps
scas
xchg
imul
loop
int3
add
test
call
ins
ret
nop
push
add
rcl
push
ss
js
cld
imul
lock
clc
iret
pop
pop
fsubr
xor
cmp
call
jb
adc
adc
sub
xchg
ret
lock
in
ret
out
mov
in
push
and
and
repnz
xchg
cmp
ficomp
jne
inc
imul
mov
aam
push
(bad)
dec
int
pop
fcomp
mov
nop
cmp
repz
ins
xor
cs
mov
ret
int3
imul
daa
jne
sub
add
mov
push
xor
pop
test
cmps
mov
or
adc
lods
adc
rcl
pop
mov
les
add
xchg
shr
int
nop
mov
jbe
test
dec
fs
fwait
ja
(bad)
mov
(bad)
std
jb
or
mov
mov
retf
sub
pop
ins
inc
push
or
xor
push
jecxz
mov
xor
ins
movs
into
jg
(bad)
iret
dec
mov
mov
out
sbb
and
jp
adc
(bad)
fs
and
and
sbb
mov
mov
dec
out
jp
call
jl
ja
outs
aad
cli
in
movs
shl
mov
cld
or
cmps
adc
mov
(bad)
arpl
mov
cld
call
adc
outs
xchg
push
imul
inc
inc
pop
pop
push
and
pop
imul
sub
jb
inc
es
out
inc
inc
mov
pushf
call
add
lahf
push
dec
out
lahf
(bad)
xor
sub
(bad)
out
in
mov
ins
add
inc
ja
imul
ins
cld
sbb
sbb
adc
sub
gs
dec
imul
sahf
xchg
adc
jbe
or
inc
repz
scas
in
add
xor
neg
cmp
es
hlt
in
push
(bad)
xor
mov
mov
out
sub
out
call
pushf
stc
dec
out
push
mov
xor
ficomp
add
dec
jne
jl
xor
and
icebp
dec
pop
in
adc
jo
retf
test
out
jae
xor
xlat
daa
xor
sbb
or
ret
ja
lods
cmp
shl
nop
push
jno
ficom
jmp
retf
fld
fsubrp
mov
xlat
ror
jo
cmp
pop
cli
mov
cmp
dec
fdiv
lahf
ins
push
test
sub
push
push
jae
and
cmp
shl
call
dec
fwait
adc
push
popa
stc
xor
jmp
sti
mov
mov
inc
adc
and
xchg
cmp
mov
inc
cld
pop
dec
gs
or
dec
fbld
pushf
imul
or
in
daa
cs
aaa
out
inc
mov
add
aas
lock
fmul
xchg
ror
mov
mov
lods
mov
jge
pop
inc
jg
ss
out
jle
rol
fstp
jb
or
(bad)
sub
aaa
sub
push
push
fmul
pop
xchg
xlat
test
rol
mov
mov
and
(bad)
(bad)
mov
into
jnp
test
test
mov
fstp
xchg
push
jecxz
xor
push
xchg
inc
dec
ficom
cmps
sub
pop
imul
push
sti
pop
adc
into
cmp
scas
mov
sbb
stc
jmp
push
sar
dec
push
add
adc
or
addr16
and
test
xlat
mov
xor
push
lock
ins
(bad)
push
xlat
or
sbb
xor
push
retf
clc
movs
jmp
cld
inc
xlat
xchg
inc
js
int
es
and
aam
inc
cmp
leave
retf
mov
sbb
and
je
(bad)
cmps
out
out
jg
and
jge
enter
jl
nop
push
loope
lods
(bad)
sahf
dec
sub
popf
xchg
push
paddd
or
xlat
xchg
(bad)
addr16
jecxz
daa
fs
jl
jp
sahf
bt
pushf
lods
ja
push
rol
pop
xlat
inc
inc
adc
jmp
fs
and
xor
test
jbe
test
xor
stos
jo
retf
add
ins
mov
sbb
scas
push
cmp
pusha
(bad)
push
jg
jle
fstp
pop
dec
inc
retf
aad
ds
shl
cmp
js
into
(bad)
add
lods
ret
cmp
pop
xor
mov
das
dec
push
loopne
xchg
mov
dec
push
jp
clc
je
and
jl
cmp
out
xor
fimul
cwde
adc
iret
cdq
dec
les
cli
pop
xchg
inc
push
jns
dec
jecxz
pushf
mov
dec
jno
jecxz
jmp
iret
jae
sbb
add
retf
lods
sar
cmp
aas
inc
imul
cmp
shl
mov
icebp
mov
mov
(bad)
sbb
mov
pop
shl
mov
mov
pushf
mov
push
retf
rcr
inc
sbb
adc
addr16
mov
mov
pop
clc
js
push
jmp
lds
in
inc
xor
and
sub
pushf
xchg
stos
inc
xchg
pop
pop
xor
cmp
adc
imul
inc
inc
in
add
(bad)
stos
push
(bad)
adc
cmp
lods
(bad)
call
or
(bad)
adc
loopne
dec
sbb
in
push
jo
icebp
mov
or
inc
pusha
pushf
mov
jnp
push
mov
fcom
mov
inc
ds
js
loope
mov
push
retf
out
hlt
ret
push
xchg
sahf
push
add
jmp
sbb
dec
lock
bound
cmp
inc
sub
jp
inc
stos
lds
mov
test
push
repz
pusha
pop
int
mov
shl
pop
push
retf
popa
loop
jnp
pop
aaa
xchg
inc
aam
ror
push
and
dec
imul
cmp
push
sbb
xchg
shr
je
popa
test
jmp
or
cmc
push
sar
xchg
sub
add
daa
loopne
mov
test
push
out
sub
and
lods
xchg
lds
and
dec
add
cli
fnop
cmps
xor
(bad)
xchg
inc
push
mov
ret
adc
xor
mov
or
jp
cmp
cmp
xchg
jne
mov
cmp
inc
inc
test
add
icebp
repz
das
lds
shr
dec
ret
sub
add
dec
sub
fist
or
mov
xor
cmp
cli
jne
mov
in
lahf
sbb
and
add
stos
jbe
or
add
mov
out
mov
sar
mul
jp
popa
fisub
adc
mov
ins
pop
mov
jae
adc
cmp
lahf
jle
retf
jbe
pop
adc
mov
pop
fild
ins
sub
call
jo
fsin
fcomp
sub
imul
mov
sahf
xor
mov
and
xchg
jg
in
mov
test
add
lds
push
call
push
or
sub
add
out
scas
add
inc
pop
arpl
xor
cmc
test
push
pusha
aam
dec
inc
sub
sar
fwait
add
inc
jns
retf
(bad)
jg
shr
cmp
aaa
imul
push
and
mov
sbb
or
das
mov
pop
mov
lock
mov
add
shr
jae
ins
ins
aam
and
and
loope
fbstp
push
test
in
pusha
push
clc
xchg
adc
xchg
aad
or
sub
pop
pop
sbb
loopne
fdivrp
ror
aaa
(bad)
idiv
sub
fmul
(bad)
sub
mov
sbb
push
movs
arpl
jb
adc
mov
mov
ss
scas
hlt
stos
mov
call
xor
sub
ins
jmp
nop
mov
jnp
je
mov
les
dec
push
mov
es
xchg
ret
cmp
mov
jp
popf
mov
fadd
jnp
arpl
dec
test
add
jle
sub
cwde
add
pop
inc
push
adc
test
add
xchg
popa
mov
mov
mov
clc
mov
jg
or
daa
jecxz
lahf
gs
aad
mov
and
enter
out
(bad)
push
jmp
loop
arpl
mov
mov
ja
test
adc
and
push
test
test
mov
jbe
push
dec
xor
sbb
cdq
jge
cmps
mov
pop
call
pop
jns
mov
push
gs
mov
daa
mov
xchg
retf
fcmovnb
fimul
jecxz
add
cld
sbb
into
or
arpl
repnz
sbb
add
mov
int
leave
or
call
loop
xchg
sar
and
jne
pop
(bad)
scas
inc
xchg
mov
(bad)
(bad)
popf
enter
into
xor
mov
stos
mov
fcom
jbe
movs
or
and
movs
xchg
repnz
or
jne
loope
add
xor
fmul
scas
and
add
and
jg
ret
jl
inc
es
pop
jne
pop
rcl
ins
xor
add
jns
outs
push
dec
dec
sbb
xchg
(bad)
shr
outs
adc
and
loopne
nop
xchg
ret
std
pop
das
cdq
xchg
imul
shr
mov
bound
(bad)
push
jo
pop
mov
mov
pop
add
sar
sub
leave
fbstp
xor
dec
xchg
mov
cmp
arpl
(bad)
call
mov
add
ja
test
adc
es
icebp
push
adc
mov
js
mov
fmul
and
loopne
sar
jle
push
js
dec
cmp
sbb
ins
out
dec
cld
arpl
xchg
mov
adc
or
add
inc
push
pop
push
inc
enter
ins
fld
push
leave
sbb
outs
outs
push
cmc
mov
mov
aas
jl
sbb
jne
mov
xor
call
and
xor
test
adc
scas
ins
xor
dec
(bad)
arpl
jb
cli
cmp
ins
movs
xchg
stc
push
dec
push
jge
mov
loop
lea
mov
fdivr
mov
icebp
cmp
push
mov
mov
jl
int3
daa
sub
ja
test
das
arpl
xchg
mov
mov
xor
fild
ficom
leave
cmp
shr
push
test
xchg
sub
mov
mov
out
sbb
dec
mov
or
mov
jl
cmp
mov
loope
push
cmc
fsubr
pop
pusha
xlat
sub
lea
cmp
sbb
cmp
or
sub
and
aad
test
pop
push
cmps
cmp
arpl
scas
mov
sbb
push
call
dec
retf
cwde
xor
mov
mov
or
mov
in
jl
data16
test
fist
lods
adc
adc
jmp
mul
sub
cli
jnp
daa
adc
sbb
xor
bound
shr
shr
dec
inc
adc
mov
aam
retf
imul
add
loop
jo
push
xor
mov
mov
inc
in
push
sti
xchg
xor
clflush
and
jl
fstp
push
fxch
jae
and
mov
aas
retf
inc
mov
dec
adc
(bad)
inc
je
in
loop
add
adc
(bad)
sbb
inc
jle
and
sbb
(bad)
mov
pop
int3
add
les
jle
sbb
popf
sbb
and
pop
dec
test
outs
stc
mov
jno
into
sub
or
jle
xchg
ins
jg
call
iret
bound
xchg
jmp
mov
push
les
mov
mov
shr
xor
and
inc
mov
movs
push
loopne
into
fucomip
jne
dec
mov
(bad)
clc
repnz
pop
mov
mov
xchg
mov
adc
out
(bad)
sbb
(bad)
jg
sub
sub
(bad)
outs
pop
rcl
add
dec
not
and
or
call
rdtsc
ficom
movs
imul
(bad)
cmps
jnp
mov
mov
mov
fwait
fs
mov
or
jg
out
xchg
int3
cmps
cmc
movs
xchg
sub
nop
mov
jmp
adc
ret
xor
(bad)
cmp
sub
lods
dec
dec
sahf
aaa
aad
scas
jno
cmp
out
cmps
pushf
and
cdq
push
cmps
sahf
cmp
mov
movs
mov
mov
cmp
cmp
cmc
div
inc
out
mov
div
scas
aad
sbb
add
iret
pop
dec
int3
daa
mov
test
movs
loopne
and
stos
and
cdq
shl
test
test
sub
sar
jns
sub
mov
jg
jo
sub
inc
call
leave
data16
mov
mov
pop
div
mov
test
jle
push
nop
sub
ret
fsub
xor
test
push
int3
inc
cwde
inc
shl
(bad)
sti
or
push
dec
mov
push
into
fistp
(bad)
fwait
loop
rcr
xchg
add
stc
(bad)
je
and
sbb
mov
sub
leave
scas
sbb
dec
mov
lods
leave
xlat
ins
pop
mov
test
jno
sahf
mov
mov
ror
inc
fst
(bad)
mov
je
xchg
jno
in
mov
push
sub
inc
xchg
addr16
stos
ja
jae
repnz
and
repnz
cmp
mov
fldcw
xlat
test
push
inc
or
(bad)
dec
push
out
sub
mov
push
jns
jecxz
jno
retf
adc
xor
repnz
jns
mov
or
xchg
enter
popa
xor
inc
pushf
loop
ins
xor
out
jmp
fs
arpl
pusha
fiadd
push
xchg
fmul
fstp
call
push
add
mov
ret
jge
sbb
xchg
mov
xlat
int
movs
repnz
jb
popa
xchg
jne
aad
cmp
inc
std
dec
jns
fbstp
sbb
xchg
dec
inc
pop
into
sbb
mov
out
sub
mov
idiv
dec
add
pop
mov
(bad)
(bad)
test
call
xchg
pop
push
movs
jo
push
arpl
sahf
addr16
int
mov
aaa
lods
add
jb
mov
sbb
clc
ffree
lahf
inc
and
push
push
dec
jns
jp
push
lods
add
(bad)
shr
sbb
fst
iret
and
popf
adc
or
test
push
and
xor
dec
je
cmc
sbb
adc
out
shr
mov
mov
les
adc
dec
call
inc
mov
inc
or
fidiv
mov
cld
arpl
xor
sub
inc
lods
movs
push
es
mov
cmps
aam
cwde
pop
mov
cld
sub
pop
fisttp
inc
mov
adc
cmc
sbb
mul
cmp
mov
or
push
arpl
sbb
pop
jmp
cld
je
inc
sbb
xchg
std
or
mov
jne
js
int
add
(bad)
xor
push
jle
push
gs
lds
xor
mov
scas
call
ja
xchg
sub
inc
pusha
fisttp
cmp
test
cwde
pushf
movs
and
mov
push
popa
sahf
inc
adc
into
jo
xchg
aas
mov
add
mov
mov
mov
push
and
arpl
adc
xchg
enter
sub
sub
dec
call
movs
call
jg
shl
stos
cmp
ret
adc
xchg
ret
jne
mov
jo
clc
shl
mov
aad
jmp
inc
xchg
jo
inc
add
stos
push
imul
in
gs
fdivp
js
in
ret
retf
xor
cmp
cmp
push
xor
push
mov
mov
adc
xchg
(bad)
aaa
addr16
shl
jno
sub
xor
test
loope
nop
sub
jecxz
mov
sar
jg
rcl
or
adc
mov
xor
xor
(bad)
jmp
jl
repz
mov
inc
outs
inc
or
(bad)
ds
inc
dec
ret
mov
aad
loopne
cmps
jo
dec
fidiv
mov
or
sub
ins
cmp
pop
add
cmc
or
popf
mov
test
jp
dec
inc
dec
inc
out
fwait
ret
pop
test
cmps
jmp
pop
mov
inc
fisttp
jns
and
or
idiv
inc
mov
or
lods
retf
pop
xlat
mov
js
or
mov
push
pop
rcl
fsubr
out
hlt
or
adc
pop
stos
ins
jnp
scas
push
sti
xchg
mov
lods
push
sahf
jmp
jae
jbe
xor
lds
push
mov
nop
mov
or
xor
out
stos
sub
add
pop
aad
adc
inc
in
mov
mov
aad
test
cmp
jnp
push
or
div
(bad)
pusha
mov
daa
inc
sub
fnstcw
fs
or
cmp
mov
cmp
mov
add
ss
cmp
pop
sbb
cmp
inc
sbb
addr16
fist
shl
stc
xor
leave
sbb
push
cmp
lds
adc
add
cmps
sub
test
add
jge
loope
push
retf
push
adc
dec
xchg
cmp
sub
into
pushf
aam
fwait
pop
mov
pop
(bad)
adc
jo
mov
repnz
repnz
fadd
mov
repz
xchg
jne
and
(bad)
mov
fdivr
add
sub
jg
ins
fwait
popf
sbb
push
mov
pop
pop
mov
mov
cmps
stos
mov
mov
fsubr
ins
aad
das
mov
call
in
add
sti
push
inc
mov
jmp
loop
adc
(bad)
adc
pop
add
int3
ror
lea
pop
add
jnp
(bad)
and
pusha
jae
fcom
and
inc
test
pop
sbb
(bad)
jo
rcr
pop
es
bound
lock
clc
shl
and
jb
mov
sub
xchg
jbe
mov
jnp
add
dec
push
mov
jae
aad
inc
pushf
adc
inc
mov
sahf
cli
shl
mov
aad
cmp
adc
sbb
mov
mov
(bad)
das
xchg
sub
xor
imul
or
push
test
cmp
or
xchg
cmp
mov
sbb
repz
sbb
pop
in
sbb
push
push
jns
in
dec
mov
popa
leave
jbe
repz
ins
cmps
ins
mov
leave
cdq
or
mov
jae
lds
stos
add
lea
inc
add
gs
add
dec
je
(bad)
std
mov
fs
test
fwait
add
std
sar
xchg
rep
cdq
mov
mov
inc
int
push
sub
dec
cs
cmps
int3
push
or
xchg
ins
add
(bad)
(bad)
test
xchg
pop
mov
xchg
inc
retf
mov
shl
loope
inc
inc
jmp
pushf
and
pop
inc
and
stos
mov
add
jp
inc
out
(bad)
pop
and
cmp
out
cmp
imul
cmps
ins
cmp
and
imul
ds
adc
test
inc
into
add
cmp
jl
std
in
gs
or
aaa
ds
std
dec
out
pusha
dec
push
loopne
test
jae
(bad)
(bad)
or
mul
(bad)
mov
mov
inc
fsubr
in
ror
mov
xchg
ret
xor
mov
push
inc
inc
add
sar
mov
push
mov
cdq
jb
jp
add
or
and
mov
clc
pop
pop
push
mov
xchg
inc
mov
xchg
push
sar
jno
push
mov
lahf
stc
lods
shr
pop
sahf
xor
repz
sub
lds
cmp
aad
daa
repnz
cmps
mov
jnp
loop
push
adc
mov
loopne
mov
pop
inc
repnz
fistp
pop
lea
sbb
movs
jo
and
mov
not
sbb
fadd
pop
das
ror
mov
fidiv
icebp
dec
mov
cmc
hlt
ror
stc
pop
push
cmp
jnp
add
xchg
adc
pop
aam
icebp
xchg
and
add
das
cmp
bnd
push
push
mov
sub
add
mov
cmp
aaa
mov
enter
and
mov
jns
jecxz
adc
cli
sbb
mov
stos
sbb
jno
aad
test
and
mov
std
jge
sub
and
pop
mov
pop
dec
cmc
push
ret
add
add
jnp
aaa
shl
jae
jecxz
or
jmp
mov
mov
fisub
fnstcw
int
sub
add
jns
inc
pop
adc
pusha
sar
test
adc
je
(bad)
fsub
xchg
adc
push
mov
xor
cmps
dec
(bad)
mov
push
push
dec
stc
and
lea
jae
call
mov
dec
in
jp
aas
and
jbe
mov
xchg
dec
loop
not
aad
inc
leave
sub
pop
mov
in
sbb
(bad)
inc
jne
mov
pop
je
or
test
push
arpl
inc
cmps
jmp
jle
xchg
popa
jnp
adc
xor
xchg
mov
mov
push
sbb
std
test
cmps
ins
rcr
add
mov
scas
add
mov
dec
call
in
and
and
jp
mov
mov
test
cmp
xor
add
xor
and
mov
(bad)
add
daa
fdiv
xor
imul
sbb
xchg
cli
cmc
jbe
xchg
lock
ret
int
jg
in
mov
out
xlat
sbb
mov
lods
test
or
(bad)
add
test
or
call
add
test
push
sbb
jge
gs
dec
mov
or
add
and
jg
sub
pushf
push
test
jmp
pop
cmp
xchg
sbb
push
leave
sbb
and
sub
mov
xchg
mov
xchg
(bad)
je
sbb
push
dec
imul
lock
mov
in
int
iret
pcmpgtb
daa
inc
pop
push
and
(bad)
mov
and
pusha
pop
call
add
pusha
cmp
cmp
ret
gs
and
xchg
fwait
mov
xor
adc
in
jmp
inc
lods
pop
sub
xor
dec
mov
retf
out
xor
hlt
xor
sub
xchg
repz
fist
popa
pop
xor
and
icebp
aas
loopne
popa
mov
sub
inc
imul
scas
cli
inc
xchg
mov
or
fsub
test
cmp
mov
gs
push
sub
mov
xchg
jmp
cli
loope
mov
inc
pop
mov
daa
jg
jns
gs
stos
xchg
sub
and
pop
or
mov
retf
mov
movs
jmp
xlat
push
(bad)
sti
add
fld
or
ret
fimul
aam
mov
shl
mov
sub
sbb
fisttp
mov
leave
ja
fldcw
pop
aas
hlt
int
xchg
call
lods
push
ret
dec
pop
sbb
sar
sahf
js
sub
mov
push
loopne
out
jmp
rol
sbb
cmp
mov
retf
sbb
fadd
dec
and
xchg
push
neg
jmp
xor
aas
out
pop
or
pop
mov
add
push
mov
iret
mov
aam
lahf
aam
xor
sahf
outs
call
adc
pop
sub
popf
mov
adc
jns
add
into
sbb
xchg
add
ja
test
push
lock
pop
inc
movs
adc
int3
test
std
loopne
aad
cld
das
cs
cs
and
sbb
jp
push
aam
mov
je
push
inc
mov
stos
lods
bnd
dec
xlat
add
ds
clts
in
stos
daa
pop
add
fcom
loop
test
xor
sub
(bad)
sbb
sub
xchg
setbe
mov
out
test
imul
dec
mov
push
test
sbb
xor
jle
test
sbb
les
mov
mul
ret
jg
add
jl
mov
xor
(bad)
dec
icebp
in
loop
rcr
sub
shl
inc
mov
jnp
test
mov
or
(bad)
fwait
mov
mov
jae
push
mov
mov
push
popa
sbb
dec
mov
mov
aas
aam
dec
sbb
cmp
add
in
lock
bound
mov
mov
pop
mov
sub
lea
push
inc
push
in
pop
mov
jge
jb
sbb
and
xlat
adc
cs
(bad)
pop
int3
imul
dec
lods
jnp
outs
fistp
jno
sub
inc
scas
inc
mov
cmc
jg
ret
mov
sbb
add
dec
scas
xor
fadd
jp
hlt
cmp
mov
dec
ror
sar
pop
inc
ins
adc
outs
sbb
aaa
jne
popa
lods
loope
jg
jle
test
sub
scas
add
loopne
imul
scas
(bad)
and
or
cmp
inc
jmp
dec
in
jns
push
jne
mov
cli
into
cmp
mov
scas
dec
into
mov
cmp
cmp
and
shl
iret
icebp
hlt
nop
mov
sub
pusha
and
ins
mov
loop
push
ins
mov
in
pop
and
mov
cs
push
ins
xor
dec
int
(bad)
es
(bad)
pop
xchg
jo
inc
pop
inc
into
mov
loop
push
xchg
adc
fisub
mov
es
pop
xor
push
sbb
mov
mov
xor
push
inc
movs
clc
jbe
xchg
mov
push
cmp
push
jmp
add
ja
adc
sahf
addr16
test
add
aad
ss
inc
xchg
rcl
push
or
repz
jo
and
push
pop
(bad)
xor
xor
sbb
dec
cdq
je
or
ins
xor
inc
sar
push
fistp
ins
daa
cmp
add
jmp
je
mov
loopne
ret
aas
rol
aaa
add
mov
cmps
cmp
inc
xchg
xchg
and
fbstp
sub
das
push
stc
cmp
outs
dec
sar
xchg
mov
aam
test
int3
pop
inc
mov
xlat
push
call
gs
js
aad
fisttp
imul
jnp
mov
fcomip
icebp
xor
shr
cmc
mov
addr16
cld
movs
mov
sub
fisttp
cmp
jl
hlt
or
loope
pop
sti
cmp
sti
xor
mov
xchg
pop
cmp
shl
dec
std
xchg
or
jmp
push
cmp
jb
dec
test
ss
xor
or
cdq
scas
ss
sar
(bad)
clts
pop
pushf
aaa
inc
or
add
(bad)
fnstcw
test
jl
mul
and
aad
loopne
rcl
add
iret
xchg
fwait
mov
cli
fldcw
jge
aad
mov
mov
out
sbb
push
cmps
fild
fbld
mov
sub
rep
(bad)
loope
xlat
test
xchg
ror
lock
loopne
cmps
mov
xchg
adc
add
jmp
jno
jmp
mov
push
in
ret
xor
mov
inc
dec
xor
clc
mov
inc
jnp
dec
je
ror
xlat
inc
stc
push
mov
ja
xor
bound
cmp
adc
and
jle
bound
mov
retf
jl
sti
pmuludq
outs
ret
enter
in
stos
xor
add
jae
(bad)
xor
(bad)
push
mov
dec
and
jge
les
fcom
jns
xchg
(bad)
xlat
adc
fisub
retf
fmul
add
mov
ficomp
or
sbb
imul
lea
mov
pop
repz
lds
jne
or
dec
sti
pop
bound
addr16
mov
neg
push
pop
adc
test
ja
addr16
cmp
mov
aad
(bad)
pop
xchg
pop
jns
inc
inc
in
lock
sbb
push
dec
mov
pop
mov
dec
ins
jl
pop
iret
(bad)
pinsrw
mov
call
aad
mov
add
outs
mov
fmul
iret
mov
mov
or
jns
into
sbb
pop
mov
inc
xor
cmp
imul
or
scas
xchg
xchg
jo
fstp
jg
int3
mov
sbb
pushf
into
mov
jne
or
xchg
outs
xor
retf
dec
xlat
pop
gs
arpl
dec
pop
test
(bad)
push
pop
adc
mov
retf
js
adc
and
dec
or
nop
inc
test
add
imul
sub
lods
inc
loopne
jnp
push
sub
stos
dec
movs
xor
xchg
sub
cmp
int
ins
xchg
lock
test
es
sti
fld
in
xchg
inc
idiv
xchg
mov
push
mov
sbb
dec
xor
push
or
inc
mov
pop
lock
jmp
push
or
out
inc
es
mov
cmp
and
pop
jmp
hlt
sbb
lods
push
test
scas
in
scas
test
inc
aad
jo
sbb
jg
mov
outs
or
jo
je
es
push
outs
push
aas
push
test
imul
sbb
push
pop
(bad)
fcomp
movs
mov
ins
nop
sar
add
mov
xchg
pusha
add
mov
xor
xor
sub
mov
or
or
inc
in
stos
pop
rcr
mov
in
mov
cdq
imul
ror
dec
sbb
outs
jmp
into
test
mov
aam
and
test
mov
jmp
and
retf
jns
adc
mov
mov
xor
sub
xor
cmc
test
push
add
xchg
pop
mul
jbe
fadd
ja
stos
or
(bad)
hlt
ins
data16
inc
adc
and
clc
or
test
es
mov
inc
jne
sti
push
out
adc
out
stos
clc
mov
dec
popa
sbb
sbb
js
and
push
sub
cli
sub
lock
push
cmp
mov
lahf
push
ja
ins
fs
ins
stos
adc
mov
rol
fst
popa
xor
int3
bound
pop
pop
xor
push
not
mov
fld
enter
shl
inc
aam
sbb
push
push
xlat
xchg
pusha
out
mov
xchg
sub
add
movs
sub
mov
pop
and
mov
jle
out
add
xor
cmps
leave
mov
inc
lds
mov
pop
xchg
sub
(bad)
les
je
sub
mov
pop
adc
loope
mov
addr16
dec
(bad)
(bad)
pop
jg
mov
dec
add
xor
push
sbb
mov
mov
pushf
mov
retf
cmp
xchg
inc
in
push
outs
mov
loop
stos
cmp
xchg
cs
loopne
pop
jns
std
retf
shl
out
movs
xor
push
adc
mov
scas
pop
add
dec
(bad)
hlt
dec
arpl
sbb
das
sbb
mov
pop
dec
pop
fild
cmp
push
pop
xchg
add
iret
popf
daa
push
movs
rcl
outs
lahf
ret
fsubr
sbb
jbe
pop
jbe
fiadd
mov
pushf
repz
dec
dec
test
scas
in
loope
xchg
das
movs
xchg
test
sbb
pop
out
aam
push
cmp
jmp
out
mov
ret
int3
jle
mov
mov
jg
aad
daa
adc
jecxz
jecxz
fdivr
call
add
shl
xor
mov
pop
adc
test
inc
mov
mov
jmp
jns
inc
add
add
sbb
lahf
fisubr
sbb
and
into
shr
push
mov
push
mov
(bad)
in
adc
pusha
fistp
ja
les
das
daa
iret
mov
mul
cmp
sub
in
fwait
call
aas
pop
sti
jbe
jecxz
ins
retf
dec
push
cmps
repz
push
(bad)
call
mov
cmps
and
std
gs
popf
ror
jae
dec
cmp
push
test
fcmovu
rcr
adc
outs
ds
mov
fdiv
std
mov
mov
sub
(bad)
outs
data16
xchg
xchg
push
mov
add
pop
adc
and
stos
mov
call
jl
ja
jmp
push
test
sbb
icebp
test
cmps
add
push
dec
adc
and
or
inc
sub
mov
neg
xlat
mov
mov
xchg
daa
jl
sub
xor
int
hlt
pop
xchg
shl
mov
dec
add
shl
mov
and
add
arpl
pop
cwde
outs
fmul
bound
aam
cmp
loopne
mov
dec
ror
or
mov
pop
cmp
test
aad
mov
ja
add
xchg
int3
out
adc
imul
mov
out
mov
and
jae
fdivr
mov
mov
call
ins
add
or
sub
pop
mov
push
loop
aam
and
mov
ret
lahf
aaa
jne
and
push
sar
pop
mov
in
or
and
pop
push
stos
fmul
loopne
in
shl
sub
xchg
fdivr
sub
mov
cmp
jae
xor
inc
cdq
jae
stos
fldenv
cmp
test
mov
xchg
mov
xor
and
inc
test
in
jmp
push
inc
movs
and
push
adc
lods
xchg
or
pop
mov
fstp
add
mov
sbb
xor
jmp
sub
pop
shl
fst
cmps
je
(bad)
movs
cs
pop
jne
dec
clc
mov
aas
pop
jb
loope
sub
ss
sub
retf
sub
push
scas
imul
xor
push
inc
(bad)
neg
ss
pop
retf
rcl
sbb
fdivr
retf
imul
jmp
in
ret
xchg
std
cwde
fimul
cmps
xor
in
push
mov
jg
add
nop
jp
stos
push
cmovno
lock
sub
pop
mov
dec
xchg
rol
test
add
jae
sbb
sub
shl
mov
nop
mov
xchg
mov
popf
cwde
cwde
and
in
outs
ins
mov
mov
pop
into
rol
pop
or
sbb
pop
jno
daa
xchg
or
inc
stc
xchg
jno
ret
retf
out
(bad)
sbb
retf
mov
mov
push
mov
cmp
mov
repz
fld
inc
adc
pop
(bad)
cdq
jl
dec
ss
outs
sbb
jg
test
inc
cld
dec
sub
lds
jno
add
cdq
shl
cld
scas
push
out
icebp
adc
or
add
icebp
cdq
test
int
mov
mov
adc
push
pop
ins
fs
clc
in
pop
addr16
jno
mov
pop
xchg
ins
ds
ret
add
shr
in
inc
arpl
xor
ret
sahf
mov
add
xor
push
fld
push
mov
dec
xlat
retf
cli
jl
xor
sar
cdq
call
dec
stos
pop
jnp
push
inc
sahf
ret
jmp
inc
aas
das
nop
or
leave
adc
jo
or
adc
push
or
jnp
add
add
dec
sbb
jecxz
test
test
sub
mov
mov
xchg
out
sub
jnp
ja
or
test
adc
mov
inc
(bad)
repz
add
pop
(bad)
leave
mov
mov
es
add
fwait
pop
xor
jmp
hlt
sub
xor
push
pop
(bad)
sbb
jo
ins
rcr
into
dec
das
ins
mov
ds
adc
movs
mov
loopne
fist
sub
fs
cmp
inc
jl
repnz
test
lahf
shl
shr
sbb
mov
movs
fimul
pop
mov
mov
movs
xor
call
push
and
ins
pop
fs
inc
mov
pop
or
fsincos
push
mov
cmp
je
push
js
imul
pop
inc
ins
cmp
jns
(bad)
scas
dec
das
sub
dec
(bad)
inc
xor
cmp
repnz
popf
mov
sbb
cmp
ins
mov
adc
fisttp
fidivr
mov
fs
xor
stos
mov
xlat
inc
pop
loope
aad
sbb
inc
pop
das
adc
push
inc
leave
arpl
mov
fldcw
sub
mov
pop
dec
sub
xchg
adc
jmp
jle
fwait
pop
mov
mov
sbb
stc
stos
call
rol
and
adc
jnp
cli
dec
arpl
add
pusha
out
pop
lock
stos
test
dec
mov
push
xor
mov
mov
not
int3
mov
xor
cwde
popa
pop
add
push
data16
cmp
in
out
and
xor
xor
cwde
pop
jo
push
pop
dec
cmp
sub
in
cmps
and
pop
fbstp
sub
xchg
cwde
das
(bad)
(bad)
push
push
pop
arpl
xor
pop
in
jl
stos
xor
repnz
jae
fmul
ins
sbb
loope
jmp
xor
jns
cmps
jnp
sub
push
stos
scas
cmp
ss
ds
mov
jge
out
pop
aad
mov
pop
mov
xor
mov
cs
mov
or
out
loope
sbb
sub
and
shr
and
rcr
mov
mov
xchg
dec
pop
jnp
es
sub
and
mov
sbb
jb
mov
or
adc
jp
int
fisub
daa
sub
dec
mov
aam
fbld
cmp
jb
adc
(bad)
sub
aad
cmc
mov
pop
dec
dec
inc
popf
cmp
cmp
jmp
cs
sti
ins
retf
int3
scas
clc
xor
pusha
lods
mov
retf
xchg
pusha
js
sub
adc
add
mov
sar
test
int3
int3
int
xlat
push
jecxz
mov
push
mov
fimul
retf
ret
inc
test
jmp
sbb
push
dec
fld
mov
daa
fwait
shl
fsub
iret
xchg
into
shr
mov
rol
int
cmp
add
aam
push
nop
push
mov
ret
imul
lods
push
add
sub
sbb
mov
or
pop
pusha
xchg
push
jmp
pop
push
hlt
xchg
sub
mov
repnz
dec
pop
pushf
jb
adc
mov
mov
cmp
jae
xor
in
pop
jg
movs
mov
and
push
pusha
loop
loope
sbb
mov
xor
push
sub
stc
lds
dec
cmp
and
dec
neg
lock
gs
mov
fstp
fstp
sbb
sbb
mov
push
imul
dec
mov
lods
jecxz
sbb
pop
aam
outs
jns
pop
cwde
(bad)
addr16
sbb
(bad)
pop
or
test
in
bound
add
mov
jecxz
xor
push
pop
mov
imul
pop
dec
mov
rcl
xchg
aam
fldcw
jg
cmp
mov
xor
cmp
mov
push
dec
lea
mov
inc
ret
and
fisttp
test
mov
pop
loop
xor
pop
mov
jbe
cli
add
mov
into
outs
pop
je
adc
xchg
aam
push
push
xchg
scas
cdq
(bad)
(bad)
repnz
out
stos
pop
fild
fbstp
cdq
xchg
fnstenv
fistp
aam
inc
jns
nop
lods
push
imul
(bad)
lods
cmp
mov
jnp
mov
sub
sbb
inc
cmps
lods
fld
or
jmp
jecxz
inc
and
sub
loopne
mov
cwde
es
jmp
fs
mov
jg
mov
shl
jecxz
movs
sub
xlat
sbb
pop
rep
push
bsf
data16
iret
cmp
stos
jns
lods
sub
in
cli
repnz
cmps
sub
repz
ss
shr
sub
in
adc
int3
pop
sub
mov
mov
or
mov
push
mov
mov
mov
in
retf
jg
sub
mov
mov
mov
mov
int3
dec
icebp
dec
lar
and
scas
movs
inc
sbb
fs
retf
(bad)
in
les
xchg
add
fistp
mov
outs
pushf
stos
mov
shl
add
ror
test
out
inc
shl
or
jp
aas
xchg
(bad)
repz
mov
sbb
adc
jns
cmp
jle
add
mov
mov
inc
fbstp
mov
(bad)
inc
scas
inc
or
mov
push
mov
jo
xchg
jecxz
repz
cmps
xchg
in
pushf
and
mov
inc
add
enter
ror
fucomi
sbb
mov
icebp
jns
xor
out
pop
adc
xor
fist
xlat
mov
push
or
out
or
inc
jg
sub
clc
jbe
es
mov
sub
mov
call
(bad)
jbe
fwait
nop
pop
xchg
add
pop
mov
in
fcomip
add
(bad)
mov
jo
jmp
push
or
mov
xchg
mov
xor
mov
ins
and
(bad)
movs
xchg
je
rol
add
mov
ja
cmp
push
mov
int3
dec
xor
hlt
cli
jne
outs
push
cld
in
mov
lock
adc
pop
std
test
dec
lock
push
mov
clc
push
imul
push
xchg
(bad)
cld
call
loope
into
loopne
ins
lea
sub
inc
fs
iret
mov
xchg
ret
jmp
(bad)
cmps
jae
sub
repnz
inc
xor
jbe
jne
cmp
push
rcl
das
inc
fdiv
lods
int
adc
or
pop
mov
xchg
lds
xchg
cmp
je
leave
mov
shr
aad
out
je
(bad)
loopne
and
mov
xchg
xor
outs
iret
into
mov
mov
jne
icebp
dec
mov
mov
pop
aaa
pushf
mov
xor
aad
cmp
(bad)
mov
fldlg2
push
add
add
push
lea
fistp
jbe
repz
jns
push
sub
mov
fistp
jg
int3
iret
dec
mov
xor
pushf
lahf
jb
js
std
jl
mov
fcomp
sub
je
xchg
popa
adc
xor
mov
into
push
add
in
dec
pop
cmp
mov
cwde
imul
mov
sbb
inc
iret
fwait
xor
aam
xlat
mov
jmp
pop
(bad)
jl
push
rcr
inc
lock
push
xor
inc
or
and
data16
popf
stc
mov
jmp
cmp
bound
or
and
cwde
loope
gs
jns
cmp
xchg
jmp
sti
imul
pusha
in
sahf
dec
cld
lock
cmp
pusha
icebp
test
sbb
push
pop
mov
stc
or
sub
push
jmp
lea
out
add
xor
popf
xor
sub
mov
in
mov
cld
cld
lods
cdq
(bad)
(bad)
js
fsub
imul
jnp
popf
mov
xor
pop
jnp
sub
xor
ss
mov
inc
mov
(bad)
jno
inc
push
jne
fsub
(bad)
jb
lahf
push
movs
adc
cdq
mov
cdq
ret
cmp
xlat
and
xchg
push
inc
sub
jne
ret
sbb
adc
mov
inc
iret
jno
xchg
dec
push
pop
adc
push
adc
fwait
jp
cmp
push
outs
jmp
sbb
in
sti
xchg
je
jbe
aaa
stos
jo
stc
js
push
fwait
xchg
js
out
push
xchg
loope
jno
adc
arpl
pop
xchg
sbb
jb
jns
jp
(bad)
xchg
xchg
sbb
repnz
xor
dec
xor
inc
sub
in
xor
pop
add
and
std
icebp
jmp
out
test
popf
xchg
loopne
ins
mov
mov
call
scas
ror
dec
xchg
js
and
fmul
inc
push
(bad)
(bad)
sbb
xor
or
leave
pusha
and
pop
out
mov
inc
adc
and
adc
ficomp
mov
cmp
dec
mov
add
mov
jno
xlat
outs
mov
push
sahf
repnz
push
das
mov
fldenv
(bad)
mov
push
mov
ss
dec
jmp
push
rcr
retf
into
pop
push
sar
pop
fs
pop
cwde
or
xor
push
dec
add
and
add
and
rcr
jle
mov
div
bound
xchg
pop
pop
(bad)
ret
adc
push
ror
mov
call
(bad)
je
inc
mov
mov
xor
pop
push
out
stos
in
cmp
(bad)
cld
sbb
add
out
xchg
pop
xor
or
xor
sub
mov
adc
int3
gs
xor
loop
xchg
mov
test
fst
mov
les
aad
cmovae
mov
dec
inc
pushf
sub
pop
adc
xor
inc
dec
into
in
popf
inc
mov
rcl
test
jl
inc
inc
dec
cmps
repz
cld
xchg
or
push
push
pusha
and
repz
outs
cmp
xor
and
inc
mov
not
pushf
sar
jmp
scas
popf
mov
push
retf
aas
sbb
sub
adc
addr16
dec
nop
push
and
sub
(bad)
jae
mov
add
ss
imul
inc
or
or
aam
into
scas
shr
mov
add
mov
(bad)
icebp
stc
pop
xchg
aas
pusha
jae
add
pop
ror
call
mov
fnstenv
or
lods
cld
lods
ds
pop
cmp
xor
call
out
mov
aas
out
push
push
adc
mov
loop
mov
adc
aas
mov
xor
sar
leave
and
sbb
fiadd
stc
push
lahf
xchg
rcr
stos
push
mov
std
xchg
xchg
(bad)
(bad)
sti
outs
lods
mov
xchg
pop
cmp
mov
or
adc
add
mov
dec
loop
scas
push
lods
jmp
imul
sti
mov
shl
and
rol
movlps
lahf
cmp
hlt
neg
push
shl
push
mov
outs
enter
fnsave
stc
fdivrp
xor
jbe
pop
dec
outs
inc
xchg
and
shl
out
mov
inc
dec
bound
sti
(bad)
push
adc
xor
or
cmp
mov
push
(bad)
sar
pop
adc
in
adc
adc
das
aad
push
push
daa
repz
jmp
jge
or
mov
dec
mov
xchg
cld
arpl
fsubr
icebp
mov
(bad)
and
pop
loopne
jae
dec
push
test
push
stos
stc
out
imul
mov
les
cmp
inc
lahf
sub
push
and
inc
int3
add
repz
pop
xor
sbb
outs
int
xor
or
mov
shr
adc
leave
pop
loope
sub
test
cmp
in
sti
adc
inc
nop
scas
jmp
ffreep
or
xor
pop
mov
dec
mov
add
(bad)
aas
cmps
pushf
push
sbb
xor
mov
cmp
push
test
add
(bad)
mov
ja
rcr
mov
inc
ror
jne
jnp
mov
cli
bound
in
int
inc
jmp
push
addr16
add
mov
jo
shl
and
or
enter
mov
inc
popf
push
pop
sbb
mov
and
push
cwde
call
ins
sahf
daa
mov
mov
mov
lock
lea
(bad)
inc
scas
loope
or
out
popa
(bad)
and
mov
fbld
(bad)
jae
jne
sub
in
das
std
int3
fs
stos
sahf
pop
pop
xlat
std
dec
inc
cmps
mov
ins
mov
addr16
cmp
aad
sub
ss
in
mov
lahf
(bad)
retf
mov
push
sbb
(bad)
sub
mov
lds
jmp
xchg
and
das
ror
add
mov
push
js
cmp
mov
inc
push
popa
jnp
push
add
movs
aad
pusha
enter
pop
sti
push
jl
lods
enter
or
aas
cwde
test
push
inc
inc
jmp
daa
jae
jne
call
pop
cdq
xlat
sub
dec
jecxz
stos
aas
movs
jbe
pop
add
aam
ja
cmp
retf
inc
jne
jbe
pushf
scas
ficom
jl
in
bound
xor
rol
jecxz
fsub
cmp
jo
dec
dec
outs
cmp
mov
jle
inc
mov
rol
mov
dec
pop
cmps
movs
shr
mov
enter
sub
sbb
sbb
mov
push
xor
adc
xchg
test
inc
xchg
adc
in
(bad)
arpl
int3
lods
inc
scas
jl
sub
xor
xchg
dec
push
push
mov
and
mov
add
fadd
adc
lea
add
sub
jo
fs
repnz
pop
test
lods
jae
xor
jmp
sbb
jne
cmp
pop
xor
ret
dec
xchg
ja
andnps
scas
fimul
mov
dec
mov
clc
setge
mov
mov
cld
push
jle
cmp
and
(bad)
pusha
jno
addr16
jns
add
add
xor
dec
imul
or
xor
mov
fmulp
pop
nop
aam
push
dec
pop
popf
sti
inc
fcomp
jmp
mov
and
stc
(bad)
fdivr
loope
sbb
call
push
out
shl
xor
fsubrp
add
test
das
stos
rcr
mov
xchg
cs
loope
push
and
hlt
sub
stos
xor
mov
ficom
or
aam
ret
pop
into
jns
sub
ret
sbb
mov
dec
mov
fild
jno
sub
es
ror
out
mov
popa
jg
out
inc
inc
jmp
inc
in
aas
sbb
mov
add
xor
dec
and
jnp
push
inc
adc
std
icebp
xlat
outs
mov
fwait
push
adc
jge
mov
cmps
jmp
mov
mov
cmps
jl
adc
int3
mov
pop
mov
inc
js
fdivr
adc
sahf
loopne
xor
push
out
es
ds
jecxz
cmp
movs
inc
ins
f2xm1
mov
popf
cmp
sbb
aaa
cmc
add
lahf
add
adc
adc
scas
dec
jae
into
call
jmp
das
cmovle
xor
ret
cmp
movs
loop
xor
dec
scas
sbb
jns
jp
push
jmp
xchg
stc
mov
xor
stos
in
cdq
sbb
and
jb
mov
daa
(bad)
jl
add
mov
mov
retf
xor
mov
ins
xchg
xor
add
arpl
xor
push
or
jnp
mov
jmp
push
sbb
lds
je
fidiv
push
inc
mov
retf
ror
loop
gs
mov
mov
pop
(bad)
mov
dec
inc
mov
cmp
in
adc
sbb
adc
sahf
ja
fchs
mov
and
aas
cdq
push
mov
xchg
xor
push
cmp
jl
outs
fcomp
add
or
mov
bound
fcom
dec
dec
pop
pop
xchg
(bad)
dec
loop
aaa
(bad)
jae
adc
fimul
imul
dec
push
jns
add
jp
in
pushf
out
(bad)
enter
js
mov
mov
xor
fsubrp
cmp
cli
pop
(bad)
jns
rcr
pop
xor
nop
lea
nop
stos
movs
xchg
das
rcr
mov
ins
scas
inc
mov
clc
out
or
add
and
or
cmp
mov
mov
call
push
loope
xor
cmp
xchg
je
in
scas
push
fimul
gs
inc
out
out
add
and
cmp
pop
mov
popf
and
cmps
pop
(bad)
xor
js
xchg
cli
cmp
jge
push
mov
pop
or
jb
push
push
mov
push
sahf
xchg
sbb
xor
sub
adc
aad
aad
js
add
popa
pushf
nop
mov
sbb
dec
xchg
cmp
mov
xor
add
jmp
lods
lods
mov
in
rcr
in
lahf
popa
in
test
push
retf
dec
bound
cmp
scas
lods
push
(bad)
xchg
cmps
xlat
cmp
or
adc
sbb
mov
test
repnz
ja
push
repz
mov
and
and
cs
or
adc
mov
dec
scas
mov
mov
mov
cmp
lods
das
sbb
dec
ds
xor
jp
xchg
ror
xchg
add
mov
or
mov
jae
cmp
sbb
(bad)
out
xchg
lea
inc
xchg
loop
pop
fisttp
js
cld
xchg
gs
jmp
inc
xor
inc
stos
pop
push
mov
pop
into
lock
mov
call
xor
cmc
in
scas
loope
lds
xor
(bad)
jmp
xchg
popf
sahf
inc
sub
adc
adc
push
and
adc
movs
cdq
lock
and
es
dec
jmp
adc
inc
jbe
push
pushf
aaa
fisubr
imul
(bad)
mov
push
and
dec
fs
(bad)
adc
or
add
mov
xor
or
add
in
mov
sub
movs
gs
xor
sub
sub
inc
retf
fcom
ja
adc
push
sub
into
pusha
mov
jmp
retf
retf
mov
movs
cmc
mov
jle
lods
adc
pop
push
scas
mov
pop
jbe
out
mov
xor
rcl
inc
loopne
xor
push
jmp
sub
sub
retf
or
cdq
fiadd
or
fiadd
ja
sub
push
retf
mov
jae
test
loopne
out
push
cdq
mov
jbe
(bad)
and
mov
out
sbb
rcl
xchg
lea
ja
inc
les
test
es
sbb
or
push
fbstp
mov
cmp
mov
stos
sub
call
sbb
sbb
je
dec
imul
push
pop
clc
sub
ret
mov
(bad)
mov
jl
mov
xchg
aas
adc
push
mov
loop
adc
add
rcr
cmp
adc
mov
dec
cs
mov
popf
imul
loopne
arpl
jns
cli
xchg
cmp
fcmovnbe
pop
in
sub
and
add
mov
icebp
into
lea
out
hlt
xchg
fcomp
mov
mov
jmp
pop
dec
xor
leave
dec
test
add
mov
and
push
iret
and
mov
jecxz
jb
loop
call
in
mov
fnstcw
adc
inc
cmc
inc
lock
xchg
fld
cs
cmp
cdq
mov
lahf
fst
mov
mov
ror
sti
cmps
aam
cmc
cdq
mov
aas
cmps
mov
xchg
ret
push
rcl
(bad)
fist
lock
mov
inc
and
ror
inc
pop
cmp
mov
lods
add
in
pop
add
mov
sub
lock
push
test
mov
fisubr
add
lds
or
pushw
mov
adc
inc
pusha
jge
lahf
jmp
test
rcl
mov
fs
fisttp
loopne
lds
xor
scas
(bad)
mov
scas
xchg
js
fldcw
lahf
mov
cs
cld
mov
mov
cs
push
adc
push
jne
inc
and
shr
push
retf
inc
out
push
int
imul
add
pop
push
(bad)
push
iret
ja
scas
cmp
aam
jae
stos
shr
imul
pop
add
fcom
cdq
arpl
push
dec
js
mov
xor
xor
jbe
xchg
sbb
(bad)
jnp
mov
xor
rol
clc
cli
pop
sar
call
add
in
push
jbe
sub
xchg
sub
icebp
ins
mov
dec
bound
mov
jmp
leave
in
fimul
mov
les
fwait
or
mov
bound
test
jo
movs
test
stos
out
stos
jae
scas
pop
cwde
add
aaa
xor
xchg
inc
sahf
push
mov
sti
test
daa
or
fld
mov
mov
data16
xor
stc
mov
rol
push
xchg
fdiv
cld
adc
mov
ret
out
test
add
test
adc
jnp
xchg
hlt
inc
sub
add
jnp
int
xor
sbb
ins
retf
jg
fist
(bad)
mov
jg
fmulp
pop
cmp
pop
cmp
xor
inc
psrlw
jnp
ret
jge
or
push
in
mov
(bad)
mov
aaa
push
xchg
ret
outs
add
and
and
addr16
mov
xchg
cmp
mov
popf
mov
jecxz
cwde
in
call
ds
hlt
mov
sub
inc
sub
sti
sub
and
adc
iret
repz
call
sub
movs
add
jge
xchg
sub
retf
movs
lods
shl
scas
into
sbb
jno
cwde
enter
sahf
dec
cdq
xor
les
scas
and
popa
jbe
inc
fcom
xchg
stos
jecxz
sar
jmp
mov
imul
je
rcl
add
pop
pop
pop
xchg
pop
pop
adc
inc
adc
in
cmp
mov
mov
pop
leave
je
dec
mov
pop
xor
stos
jns
lods
mov
jno
sbb
or
and
js
pop
in
xchg
xlat
dec
js
push
xchg
sub
mov
das
cwde
sysexit
jo
test
inc
push
sbb
jnp
cli
test
jno
cwde
mov
sbb
mov
pusha
sub
jne
push
or
jmp
pop
mov
je
cs
mul
(bad)
pop
dec
call
cmc
in
ss
pop
retf
push
ins
add
imul
jmp
jno
adc
je
mov
xchg
adc
ja
push
ins
cwde
xchg
lahf
mov
lds
sbb
mov
sbb
mov
xor
fsubr
sbb
mov
sbb
push
add
cli
(bad)
pop
scas
ret
and
pushf
stos
add
test
push
pop
mov
hlt
in
stos
push
(bad)
fcom
dec
shl
out
xor
outs
cmps
or
sbb
xchg
push
rcl
mov
cmc
fucomi
push
leave
mov
sti
xchg
test
sar
push
jb
call
jl
mov
lods
loopne
mov
(bad)
cmc
dec
sbb
xchg
jo
inc
sbb
js
mov
repz
scas
xor
push
not
mov
arpl
dec
mov
leave
dec
adc
test
inc
push
and
enter
movs
xor
mov
rcr
pop
pop
jae
jbe
and
or
dec
pop
mov
ins
xor
cmp
jg
jmp
aad
ret
dec
movs
pop
fst
jae
cs
push
enter
mov
imul
inc
dec
dec
aas
push
add
imul
jne
jge
outs
xchg
xchg
test
aad
jp
or
jnp
shr
and
dec
(bad)
(bad)
push
lods
iret
push
repz
clc
pop
stos
pushf
ret
mov
push
std
ret
js
jg
out
fld
ret
fwait
loope
in
and
sub
mov
fwait
or
push
retf
inc
add
pop
mov
mov
out
ror
mov
ficomp
add
inc
cmp
sub
adc
mov
add
sbb
mov
or
lods
in
pop
call
push
inc
call
dec
mov
inc
or
jle
sbb
fistp
jno
repnz
repz
mov
jl
sub
xchg
je
sbb
adc
xchg
cmp
cmp
dec
push
cld
push
pop
clc
xchg
fsub
mov
dec
mov
sbb
add
aas
jmp
add
xchg
leave
stc
cmp
les
and
dec
cmp
and
pop
xor
std
fild
adc
stos
cwde
outs
xchg
push
fcmovnb
push
xchg
(bad)
call
mov
rcl
test
lods
jg
into
xor
xor
ret
dec
jns
mov
mov
call
aad
(bad)
sbb
push
repz
(bad)
push
(bad)
inc
lock
in
fsub
pop
pmaxub
ins
repz
adc
jno
std
icebp
stos
pushf
in
or
movs
mov
pop
(bad)
mov
ins
(bad)
mov
cmp
fld
mov
inc
stos
adc
mov
scas
dec
cmp
neg
sbb
xor
les
sub
xchg
stos
sub
and
inc
or
or
fld
sub
loop
das
mov
pop
in
sbb
pop
sbb
arpl
jns
jae
add
or
jmp
out
lods
or
push
inc
and
mov
in
and
shr
inc
out
lods
(bad)
enter
xor
add
jne
adc
cmps
mov
cmp
retf
cmp
lods
frstor
lds
add
test
rcr
test
xor
mov
xchg
or
mov
movs
in
lahf
cmp
imul
(bad)
push
add
loope
push
mov
sbb
xor
xor
and
(bad)
xchg
jne
nop
in
les
ss
retf
cwde
jae
lods
int3
jle
pop
cmp
jmp
xchg
adc
xor
dec
add
les
jmp
cmp
mov
jns
je
fs
dec
xor
das
into
jmp
in
clc
retf
popa
out
mov
js
cmp
adc
push
aam
push
loopne
mov
call
sub
sbb
adc
mov
fild
add
movs
sahf
xor
pusha
cwde
retf
mov
aam
or
popa
popf
jmp
cmp
int
or
lods
test
pop
xor
dec
mov
adc
push
aas
arpl
push
shl
call
retfw
and
sbb
loopne
fdiv
cwde
or
sub
retf
dec
loope
jge
cs
stos
mov
jl
inc
(bad)
stos
out
outs
pop
mov
dec
sub
psubd
cmp
shr
lods
pop
adc
xchg
movs
(bad)
cdq
sub
and
aaa
arpl
sbb
xchg
movs
inc
scas
sbb
jmp
pop
outs
sub
push
cmp
xchg
cmp
and
push
push
pop
rcl
in
test
push
and
or
inc
mul
pop
jmp
mov
fdivr
xchg
inc
xchg
xor
jl
sti
or
pop
mov
aad
adc
or
mov
dec
(bad)
adc
in
repnz
dec
movs
mov
dec
mov
sbb
jns
rcr
or
mov
jno
sbb
xor
pushf
mov
lods
or
mov
out
pop
sub
inc
lds
sub
mov
inc
add
sub
loop
pushf
mov
jg
dec
add
jge
or
in
aaa
(bad)
shl
iret
fs
shl
pop
jecxz
pop
cs
push
jge
mov
jl
sub
add
fsub
jne
inc
rcl
pop
stos
movs
adc
sub
movs
outs
add
cmp
rcl
outs
mov
loope
ret
aam
sub
fs
and
scas
movs
sub
das
mov
sbb
mov
jb
jmp
aas
mov
or
xor
dec
cmp
pop
mov
cld
stos
ins
movs
enter
(bad)
call
dec
mov
arpl
mov
out
sub
iret
xlat
fxtract
scas
retf
xlat
mov
mov
repz
aas
inc
aas
rcr
rcl
pusha
loop
or
jae
pop
inc
loop
repz
rcr
mov
jmp
sbb
mov
call
adc
and
push
cmp
mov
mov
or
repnz
int
rcl
dec
jl
mov
popf
pop
cmp
push
or
mov
push
(bad)
pop
sbb
add
jnp
xor
test
mov
pusha
retf
cmp
outs
lahf
add
(bad)
sbb
rol
and
mov
or
mov
mov
mov
icebp
mov
or
jbe
inc
push
jp
mov
push
cmp
bound
adc
inc
add
in
jl
push
rol
ins
pop
mov
jae
in
ret
fild
gs
dec
popf
(bad)
mov
inc
call
es
sbb
popf
aas
leave
arpl
mov
movs
cmc
icebp
cmc
and
les
lahf
mov
fnstcw
rcl
daa
cmps
dec
out
and
xchg
sbb
mov
stos
imul
ins
and
ins
lock
adc
cmc
push
or
mov
mov
xchg
inc
cmp
pop
jnp
push
int
int3
add
fdiv
adc
js
mov
and
mov
sub
stos
pop
inc
pop
dec
cmps
pop
fcomp
pop
dec
retf
in
ins
push
pop
or
jp
jg
sbb
sub
jne
sahf
(bad)
push
iret
inc
mov
clc
in
and
xchg
enter
jo
popa
jbe
dec
test
jne
pop
jmp
addr16
mul
sub
xchg
pop
mov
pop
repz
adc
adc
jns
daa
call
and
fist
ror
add
inc
or
xlat
xchg
div
inc
inc
dec
inc
shr
aad
test
in
pop
(bad)
fisttp
or
test
call
pop
pop
add
jecxz
in
push
inc
sahf
leave
ret
ins
sbb
cdq
js
mov
add
or
aam
pop
dec
adc
mov
jg
pop
in
rol
aad
push
adc
lea
dec
cmc
loope
mov
(bad)
dec
enter
cld
xor
lods
test
ret
rcr
fadd
je
sar
test
and
mov
(bad)
sahf
gs
mov
mov
les
in
sub
(bad)
xor
shl
cmp
loop
out
(bad)
ja
lahf
loop
es
ret
imul
xor
(bad)
imul
add
and
dec
aas
push
dec
add
mov
and
pop
dec
aas
test
jge
sahf
aas
das
xchg
ret
add
add
dec
jns
mov
pop
gs
sub
or
iret
faddp
ds
xchg
and
leave
loop
add
leave
sub
fst
into
adc
in
fs
dec
cmp
add
xchg
js
and
pop
int3
loopne
retf
push
test
mov
test
neg
hlt
add
sub
repz
scas
shl
pop
xchg
pop
xlat
dec
bound
xchg
das
push
in
jae
xor
and
mov
ficomp
outs
sub
add
out
mov
out
pop
and
retf
leave
imul
xchg
in
gs
popa
cld
pop
or
loop
xor
inc
lds
(bad)
repnz
jns
sub
add
jmp
imul
outs
out
dec
call
das
mov
stos
ret
mov
or
into
jbe
xor
es
stos
inc
add
pop
pop
iret
test
hlt
and
pop
jmp
cld
jbe
xchg
neg
movs
push
add
lock
hlt
int
and
fidivr
jb
idiv
(bad)
dec
xchg
mov
imul
pop
sbb
fcompp
test
mov
sbb
push
(bad)
mov
inc
pop
inc
mov
fcmovnb
push
pop
loop
jp
mov
stc
ret
inc
jge
or
loop
aad
sub
dec
xor
callw
inc
popf
test
and
mov
das
inc
(bad)
int3
aaa
jge
dec
(bad)
dec
dec
mov
stc
iret
cmc
(bad)
jmp
mov
fld
fisub
in
es
xchg
imul
push
xor
add
xor
in
imul
in
push
psubusb
call
xor
mov
push
leave
aad
jnp
and
push
ds
pop
shr
xchg
dec
xor
neg
sbb
dec
cmp
jno
mov
rcr
and
push
cld
mov
inc
aaa
int
lahf
mov
mov
cld
iret
stos
jle
xchg
retf
adc
int
inc
pop
dec
inc
aad
fld
sbb
xchg
fst
pop
daa
or
icebp
fst
push
jbe
in
add
jae
lods
mov
adc
dec
sbb
loop
pop
sub
add
stc
adc
add
and
mov
pushf
idiv
sahf
rcl
xor
movs
int3
arpl
rcr
int3
rcl
sbb
aam
leave
inc
lods
pop
add
aad
fiadd
jmp
xlat
xchg
test
fld
mov
stos
pushfw
lock
mov
(bad)
or
out
pop
push
sub
xor
stos
or
call
xchg
pop
xchg
lods
fist
inc
and
in
mov
xor
dec
ret
push
popa
mov
rcl
mov
mov
test
xchg
or
push
call
jmp
ret
test
cmps
mov
aaa
dec
and
push
add
sbb
sbb
neg
push
sub
repnz
outs
addr16
lahf
pop
fwait
sbb
mov
lea
arpl
dec
mov
mov
scas
and
or
push
cmp
push
inc
mov
push
or
pop
mov
xor
inc
mov
test
enter
adc
(bad)
sbb
or
jp
div
fnstsw
movs
call
pop
shr
pop
mov
sbb
dec
out
inc
pop
cdq
pop
and
adc
pop
mov
adc
xchg
pop
xchg
shl
jge
stos
nop
fisttp
in
lahf
cld
pop
push
add
xchg
int3
outs
popa
dec
aad
fld
mov
sbb
addr16
bound
leave
sbb
mov
repnz
pop
sbb
sub
push
pop
mov
or
imul
cmp
ret
jb
mov
and
mov
mov
rol
xor
add
shl
pop
into
cdq
inc
jl
dec
push
jl
xchg
sbb
xchg
es
shl
mov
cmp
xor
pop
pop
mov
std
loop
sbb
xor
shl
loope
cmps
in
in
int
mov
jnp
(bad)
push
and
pop
addr16
push
adc
sub
jmp
scas
out
sbb
(bad)
mov
dec
cmps
arpl
adc
(bad)
jae
push
sar
int3
test
(bad)
rcl
push
sbb
or
out
and
pop
ins
adc
or
sub
mov
xor
push
dec
push
push
pop
cmovl
in
push
xchg
push
mov
mov
call
sub
daa
jno
pop
pop
dec
jecxz
fbld
out
aas
loope
(bad)
cli
push
or
int3
cmp
xor
imul
les
mov
in
inc
ins
(bad)
push
test
rol
mov
sub
dec
xchg
mov
push
mov
(bad)
cmc
inc
pushf
lahf
cmp
push
xor
jbe
jp
cmc
ds
aam
push
test
or
mov
mov
mov
shl
(bad)
mov
pop
mov
scas
xor
fidiv
inc
add
xchg
call
jg
loopne
hlt
shr
mov
or
sbb
and
ds
ss
(bad)
jg
xchg
jmp
arpl
in
ja
test
mov
lahf
lea
jg
ins
retf
mov
das
in
not
jno
lds
fiadd
retf
in
out
retf
inc
loopne
pop
ss
(bad)
jmp
sti
in
mov
aad
adc
call
inc
jg
inc
and
int3
lods
out
retf
mov
push
jb
cdq
ret
into
test
mov
adc
arpl
test
fnstsw
or
rep
push
or
fsubr
sbb
je
cwde
adc
dec
sub
stos
mov
pop
enter
xchg
mov
jmp
cs
clc
sbb
dec
rol
test
into
sub
or
adc
fwait
adc
lock
push
cli
dec
push
dec
xchg
adc
xor
aaa
mov
inc
sbb
call
push
out
fcomp
mov
sahf
mov
into
dec
jmp
push
sub
in
lds
sbb
sbb
cli
jne
pop
cli
int3
adc
cmps
loop
gs
arpl
jg
ins
mov
fsubr
test
pop
test
(bad)
jne
aad
xchg
rcl
push
mov
cmp
adc
cwde
in
test
pop
add
jbe
inc
xlat
test
sub
inc
pop
jp
sub
or
inc
adc
loope
ret
cdq
mov
in
ins
inc
fcmovnb
xor
sahf
and
xor
push
loop
sti
scas
mov
and
ja
and
mov
call
xchg
loope
addr16
push
sub
lock
stos
adc
not
out
xchg
pushf
(bad)
xor
dec
jl
call
out
sahf
xor
xchg
rcr
inc
test
pop
pop
jl
cmp
dec
dec
xor
cmp
lahf
sti
sar
xchg
sbb
dec
xor
push
dec
pop
ss
cmp
leave
ds
fild
adc
les
mov
sub
mov
mov
jmp
pop
jmp
pop
push
mov
into
fs
add
outs
jae
mov
loop
jmp
xchg
aad
in
mov
imul
lods
in
pop
sub
cmp
lds
lock
mov
sar
lea
(bad)
push
cmp
nop
pop
adc
mov
pop
dec
mov
lods
add
repz
pop
or
(bad)
pop
inc
dec
(bad)
aas
inc
jge
jge
pop
or
and
sbb
sar
xlat
ins
(bad)
rcr
mov
and
xlat
iret
mov
out
jecxz
push
adc
loop
dec
pop
ds
jmp
stos
sub
lds
out
std
lock
ds
jne
or
das
iret
cli
test
sbb
add
btr
or
ss
jae
sbb
push
mov
jmp
cmp
dec
xor
adc
sbb
cmp
mov
mov
scas
outs
and
pop
loopne
sub
test
dec
sub
add
out
pop
adc
ja
leave
dec
sub
or
push
jmp
ds
aas
or
outs
lock
nop
adc
rcr
push
sar
call
and
and
xchg
and
mov
pop
pop
mov
xchg
movs
ins
shl
dec
nop
ins
add
push
and
mov
add
mov
(bad)
mov
jnp
sahf
fild
jo
ins
jbe
jp
rol
mov
jge
out
out
retf
mov
pop
or
mov
(bad)
or
mov
jl
enter
ja
and
gs
jbe
shl
movs
data16
xor
ins
jmp
arpl
mov
in
pop
cs
sbb
add
loope
adc
fs
push
addr16
dec
pop
xor
mov
push
xchg
nop
popf
test
outs
xchg
or
cmps
push
addr16
push
(bad)
cmp
mov
xor
(bad)
mov
out
leave
sbb
inc
in
popf
sub
inc
sub
aaa
mov
add
std
dec
mov
sahf
pop
repz
xor
(bad)
aam
xchg
ret
mov
mov
sbb
cs
and
in
in
cs
mov
dec
sbb
sbb
mov
and
fild
(bad)
sar
bound
repz
inc
mov
push
aas
call
scas
dec
add
pop
jle
jmp
daa
rcr
sub
fsubr
in
test
sbb
or
sahf
push
cwde
cmc
call
jg
lods
add
js
gs
out
jmp
dec
lock
bound
dec
cmp
push
cmp
(bad)
fstp
lods
dec
rcl
and
cld
dec
xor
xchg
outs
push
or
movs
mov
inc
sbb
add
int3
inc
sbb
dec
mov
in
jo
retf
addr16
mov
movs
mov
mov
cmp
aas
imul
sub
fucom
push
lods
mov
add
jb
gs
fwait
mov
or
aad
sar
(bad)
cmp
sbb
sbb
push
push
adc
jns
and
adc
or
mov
pop
or
pop
sub
mov
sub
dec
enter
inc
xchg
test
pop
jecxz
stos
retf
scas
adc
xchg
je
aam
xchg
std
jle
jne
xor
mov
add
hlt
inc
leave
dec
sbb
test
movs
out
cmps
add
iret
lock
inc
xor
sbb
fidiv
mov
(bad)
mov
jne
mov
ins
ficomp
movs
les
mov
jecxz
fadd
cmp
int
dec
mov
sbb
mov
push
pushf
addr16
icebp
sub
mov
jbe
jb
or
mov
inc
mov
daa
or
mov
test
iret
add
and
jle
lods
sbb
(bad)
push
ss
cmp
dec
cmps
mov
cs
in
out
(bad)
mov
and
pop
cwde
and
ins
int
jbe
mov
pop
push
rol
sar
sub
(bad)
mov
or
sub
idiv
push
push
adc
jbe
mov
stc
ror
dec
lods
dec
outs
shl
stc
test
jl
dec
push
scas
iret
loope
enter
dec
inc
fucom
rcr
sub
scas
lods
add
icebp
or
div
into
adc
mov
jge
aaa
test
push
push
js
jns
mov
and
xchg
(bad)
jae
aam
sbb
mov
outs
cs
stos
out
into
test
cli
sbb
xor
jno
aas
jmp
xchg
or
int
jae
adc
jo
enter
sbb
sahf
adc
push
dec
pop
call
inc
jne
mov
push
mov
mov
dec
ja
popf
test
sub
pop
sahf
lea
out
inc
xchg
idiv
jae
sub
mov
and
adc
xchg
sub
cmp
jns
add
cmc
lods
fwait
add
mov
sbb
push
mul
loope
cli
mov
sub
mov
xchg
mov
iret
stos
mov
iret
mov
in
push
cld
xor
jge
jmp
xor
jmp
popf
xchg
add
aas
jno
xor
inc
inc
aad
and
rol
xchg
cs
dec
add
imul
out
fadd
jne
or
sbb
xor
xchg
push
inc
aas
dec
in
xchg
test
push
imul
js
pop
fwait
xchg
bsf
inc
dec
xor
xchg
dec
mov
enter
int
shr
shl
jns
test
add
or
pop
mov
inc
in
out
les
or
cmp
pop
ds
fmul
lea
push
xor
pop
in
inc
xchg
(bad)
and
xchg
arpl
cmp
jecxz
adc
imul
dec
or
loop
dec
jmp
jmp
sub
out
(bad)
push
fidivr
cmp
mov
inc
xchg
es
xchg
sahf
faddp
inc
sahf
jmp
int3
lods
and
fsubp
shl
mov
add
mov
dec
sbb
rcl
loope
mov
idiv
inc
clc
add
sub
push
cs
cwde
ss
mov
push
cmp
(bad)
xor
add
adc
test
dec
inc
js
sbb
lahf
fisub
mov
popf
push
adc
(bad)
and
pop
or
mov
outs
jg
(bad)
shr
aad
xor
mov
clc
cmp
or
jns
add
jmp
mov
mov
sub
xor
movs
push
popf
dec
mov
lds
bound
xchg
sub
pop
call
adc
adc
add
mov
outs
out
mov
adc
jbe
bound
loope
unpcklps
jmp
mov
cmp
leave
add
in
push
add
pushf
nop
test
in
cmp
scas
loopne
sbb
inc
(bad)
loope
movs
mov
push
inc
mov
inc
sbb
or
adc
scas
outs
sbb
sub
sbb
adc
adc
imul
pop
sub
outs
cmp
mov
dec
adc
xlat
mov
loope
shl
xchg
adc
xor
mov
mov
push
mov
fdiv
add
leave
push
pop
mov
lods
cli
mov
mov
psllw
nop
push
stc
mov
ficomp
pushf
sub
hlt
lock
arpl
dec
jmp
mov
in
xchg
bound
push
inc
fcom
mov
cmps
cmps
sub
loop
call
add
loopne
dec
das
lds
dec
fmul
in
pop
xor
loope
cmp
jmp
out
cmp
sub
ret
loopne
cli
es
sbb
cli
imul
xor
or
jns
dec
test
pop
xchg
cwde
sbb
mov
enter
mov
mov
sti
sub
inc
add
outs
dec
ss
add
add
in
ds
xchg
mov
ins
cmps
inc
imul
fdiv
aad
inc
jne
dec
mov
in
mov
pop
pop
(bad)
das
cmp
xchg
push
jge
mov
dec
and
test
or
cmc
or
push
fcom
pop
inc
push
mov
add
call
addr16
call
sbb
push
retf
les
or
add
mov
push
jo
movntps
push
pop
aaa
pop
jle
or
pop
jecxz
push
mov
inc
jmp
outs
scas
pop
je
sahf
sub
jbe
jbe
pop
mov
dec
pop
and
sub
push
xlat
int
stc
rcr
mov
jo
and
or
(bad)
xchg
iret
pop
xchg
or
inc
mov
mov
push
or
sbb
jmp
add
pop
stos
pop
mov
ret
adc
inc
ss
or
rcl
dec
inc
cmp
mov
in
mov
or
sbb
jb
jl
xchg
or
jecxz
cmp
cmp
cmp
pushf
out
xchg
xor
fs
nop/reserved
iret
pop
jb
js
dec
cmps
jmp
sbb
loop
adc
xchg
cmp
push
adc
idiv
(bad)
cmps
stos
cdq
setl
stos
xchg
cli
mov
lods
inc
pop
(bad)
hlt
js
push
jl
push
fs
adc
mov
or
sbb
mov
fld
enter
test
shr
xchg
mov
inc
jb
sub
out
adc
pop
aam
or
stos
js
rol
mov
inc
or
mov
mov
inc
push
mov
movs
mov
jmp
adc
cmp
xor
sub
in
bound
ss
mov
js
std
enter
jbe
push
jmp
in
not
push
shr
dec
popa
and
push
inc
pop
fucomp
hlt
and
in
add
push
mov
sbb
aad
dec
jno
xchg
stos
lods
inc
sti
aad
clc
pop
outs
pop
lahf
adc
sub
push
popf
xlat
inc
(bad)
push
or
jmp
push
fs
in
xor
mov
sub
mov
add
jle
cwde
push
pop
rcr
inc
in
jne
xor
cmp
jo
aad
pop
xor
sbb
addr16
inc
push
shr
popf
lea
mov
loop
sub
pop
mov
add
mov
js
sahf
lds
cmp
mov
std
loope
sub
xchg
add
fbstp
pusha
fcmovnu
xchg
add
test
in
mov
sti
adc
push
xchg
xlat
sbb
cmps
mov
int
daa
pop
les
scas
inc
pop
pop
xchg
shr
fs
jmp
mov
pop
xor
pop
(bad)
fld
(bad)
repz
(bad)
cmp
sbb
push
mov
inc
aam
jae
cmp
xor
cmps
xchg
lea
mov
das
fstp
lahf
cs
mov
mov
cdq
popa
int
ds
or
and
lods
push
mov
aas
loope
or
repz
aad
add
outs
pop
pushf
les
(bad)
call
sbb
push
jns
aam
retf
mov
cmps
ret
cmp
stos
pop
sub
fbstp
scas
iret
test
out
loopne
dec
jmp
lahf
test
fiadd
mov
push
inc
aaa
mov
pop
adc
cmp
xchg
(bad)
bound
sbb
stos
(bad)
push
out
mov
pop
sub
add
loopne
out
leave
push
jl
das
comiss
adc
push
pop
lods
xor
pshufw
xchg
cmps
adc
and
xchg
add
aad
add
pop
test
mov
mov
mov
fcmovnu
ins
imul
xor
into
xchg
sbb
je
mov
and
mov
pop
sbb
cmp
sub
loopne
daa
cmp
jmp
mov
in
push
loopne
test
(bad)
call
scas
test
sub
aaa
shr
pop
mov
add
retf
cmp
and
jne
cmps
sbb
xor
test
shl
inc
pop
inc
mov
jmp
cmps
cdq
add
loope
push
push
popa
sbb
(bad)
jnp
push
cmp
and
fild
sub
ins
gs
mov
rol
loopne
add
mov
out
inc
jge
sbb
sub
test
mov
data16
imul
movs
add
int3
push
call
mov
or
lods
xor
push
ss
ret
add
aas
hlt
fiadd
shr
les
ss
outs
sub
and
mov
repnz
ins
(bad)
mov
sbb
imul
fwait
pop
adc
jno
jmp
pop
call
(bad)
ror
lods
test
test
cmp
es
or
xchg
outs
cmp
cwde
pop
fisttp
cmp
out
sub
xor
mov
sub
test
inc
push
adc
xor
div
xchg
or
pop
movs
inc
call
xchg
dec
push
sub
out
in
nop
pop
push
jo
pushf
scas
(bad)
fidiv
push
fld
aad
mov
mov
or
inc
sahf
pop
mov
and
jns
ja
js
push
scas
call
shr
adc
xchg
mov
xchg
cmp
loope
xchg
jb
repz
cmp
movs
shl
ds
adc
call
fistp
dec
jbe
push
in
xor
fs
aad
(bad)
popa
push
xchg
inc
xor
add
mov
and
jo
test
jmp
sub
das
cmp
push
and
or
jnp
pop
mov
gs
add
arpl
rol
stos
and
adc
arpl
enter
pop
adc
push
out
adc
pop
es
inc
out
push
sub
xchg
pop
aas
test
lock
out
sar
jo
(bad)
(bad)
out
outs
hlt
inc
fbld
xchg
push
push
and
sub
and
jg
(bad)
lahf
sub
inc
rcr
mov
xchg
ja
ror
jne
adc
loopne
daa
sub
push
push
adc
mov
jp
fyl2x
or
sbb
mov
pop
sub
cwde
inc
pop
xchg
push
(bad)
js
pop
std
js
push
dec
push
sub
scas
pop
scas
add
jge
in
jp
popf
fxch
mov
xchg
push
ja
add
jecxz
push
inc
sbb
sbb
jmp
mov
scas
mov
popf
xor
cmp
clc
cmp
mov
in
dec
test
push
inc
cmp
cmp
mov
stos
push
cmps
push
sbb
jle
outs
sar
push
lds
retf
leave
jle
xchg
repnz
mov
ds
call
jge
outs
or
bound
out
cwde
mov
or
test
add
fsubr
push
inc
call
jg
cmp
lea
mov
dec
in
shl
loope
mov
mov
loopne
cmp
mov
mov
or
lock
(bad)
cmp
dec
sahf
inc
js
fcomip
fidivr
jge
mov
mov
loope
mov
shr
adc
out
fnstcw
in
sbb
loope
push
in
nop
lock
xchg
outs
in
cs
pop
popf
inc
push
cmp
scas
inc
rcr
xor
cmp
fsubrp
retf
popf
(bad)
ficom
retf
dec
cmp
sub
jp
stos
in
div
or
ficom
lock
cmp
and
lods
xor
aaa
jmp
sbb
jg
ds
in
movs
lock
adc
sbb
and
mov
into
inc
cmps
pop
stos
mov
sar
in
cmp
jbe
cmp
ret
push
jmp
mov
mov
inc
mov
hlt
dec
pop
sar
sbb
jo
push
pop
pop
dec
and
mov
ins
push
retf
sub
rcr
pop
dec
pop
in
adc
leave
sar
scas
rcl
inc
es
push
adc
adc
(bad)
fcmovb
in
add
es
imul
adc
xor
pushf
loope
mov
call
or
fwait
test
adc
cmp
das
jg
fnstcw
call
adc
xchg
pushf
sbb
xchg
jne
push
fild
faddp
leave
push
and
sub
stos
add
mov
ret
or
shl
dec
mov
push
fcomi
sbb
rcr
(bad)
(bad)
mov
push
les
jo
xor
ins
cmp
sub
fsubr
xor
scas
mov
fld
xlat
mov
hlt
mov
push
imul
out
mov
sub
lea
sti
jo
push
push
out
jmp
mov
xchg
aad
cdq
in
xlat
aaa
out
cmp
dec
out
mov
in
xchg
dec
fcom
xor
ret
ins
aaa
test
add
cmp
cwde
addr16
dec
mov
inc
addr16
lds
shl
stos
(bad)
jne
push
xor
push
pop
test
and
les
gs
adc
(bad)
in
dec
pusha
cmp
test
movs
push
sbb
and
jmp
mov
jno
retf
std
bound
xor
outs
fisttp
add
xchg
xlat
rcr
repnz
or
fcom
lea
lods
ret
add
gs
cmp
sbb
dec
adc
dec
fadd
sbb
sub
ret
cmp
aam
add
into
pop
pop
xor
mov
movs
div
xchg
mov
test
cmp
popa
and
pop
pushw
mov
pop
sub
fs
and
mov
imul
es
pop
xor
inc
fcomp
add
fs
push
cli
in
in
and
add
call
inc
das
arpl
jne
(bad)
movs
call
jae
test
add
mov
popa
dec
xchg
push
mov
cmp
dec
pop
into
mov
ret
pusha
les
and
icebp
outs
daa
mov
nop
bswap
inc
xchg
div
mov
dec
es
je
mov
cmp
sti
sbb
xor
xlat
(bad)
fs
xor
pusha
int3
jl
dec
push
sub
dec
fldcw
jmp
stos
xor
dec
into
mov
outs
sbb
mov
lea
sbb
(bad)
and
pop
mov
out
or
stos
into
pop
aad
xor
retf
push
sbb
je
inc
fwait
(bad)
icebp
pop
jo
sti
jns
mov
jl
scas
push
xchg
xor
mov
das
pop
ret
push
iret
iret
lea
enter
scas
inc
jmp
retf
sub
test
ins
test
mov
add
or
pushf
lahf
pusha
in
dec
xchg
push
add
daa
ss
mov
jmp
enter
jnp
in
int
loope
movs
xor
loope
stos
jns
jp
mov
sahf
push
or
test
repnz
scas
daa
enter
fucomp
pop
es
sub
stos
xor
sub
xor
into
movs
mov
add
jb
out
cmps
f2xm1
ins
or
fild
leave
dec
shl
mov
shl
adc
mov
pop
je
mov
xor
cmp
xor
sbb
push
sub
mov
and
aaa
aad
xor
jl
jb
jle
(bad)
out
and
outs
and
jge
xchg
lods
js
lock
cmp
or
cmp
cmps
push
adc
cmp
bound
movs
(bad)
or
scas
push
rcl
mov
imul
dec
js
or
enter
pop
ret
leave
icebp
test
gs
sbb
shl
cmp
fidivr
stos
test
(bad)
push
push
mov
cmc
(bad)
mov
int
or
xor
inc
add
ret
mov
imul
cmps
ror
and
inc
mov
mov
loope
mov
jge
dec
pop
stos
jmp
or
jnp
dec
inc
jb
cvtps2pi
sar
xchg
mov
cmps
out
pop
scas
inc
sbb
mov
pop
test
test
ss
mov
mov
inc
add
fstp
jo
(bad)
cld
push
call
fwait
push
jp
xor
(bad)
out
cmp
aad
retf
mov
cmp
movs
int
xchg
mov
pop
mov
add
mov
dec
mov
cmp
inc
jns
test
push
test
mov
xchg
fdivr
ins
inc
pop
mov
inc
clc
mov
or
shl
and
(bad)
pop
aaa
mov
lds
cmp
add
(bad)
adc
ret
add
mov
dec
cmp
push
hlt
cdq
test
dec
fnstenv
lods
dec
cmc
(bad)
mov
xchg
jne
mov
mov
or
inc
jmp
adc
hlt
add
dec
fs
pop
mov
xchg
jne
cmp
sbb
ror
mov
mov
sbb
leave
or
call
enter
hlt
pop
push
mov
and
cmp
lods
std
xor
inc
jae
retf
arpl
and
fcom
xchg
psubsw
and
out
sbb
test
rcl
inc
mov
ret
pop
cmp
in
jnp
mov
inc
aaa
jle
xchg
iret
fisttp
sub
and
mov
sti
outs
rol
xchg
je
sbb
or
pop
or
pop
and
(bad)
or
push
jne
adc
pop
dec
adc
mov
adc
adc
dec
adc
ds
retf
(bad)
mov
rol
sub
dec
iret
jae
ins
cmps
(bad)
sbb
ds
aaa
xchg
xchg
mov
and
repnz
and
add
in
sbb
retf
jg
mov
mov
xor
inc
pop
and
daa
cmp
pop
mov
xor
mov
mov
bound
fmul
sahf
inc
sbb
fcmove
pop
xor
xchg
fnsave
and
rcr
rcr
jno
sub
sbb
or
loopne
mov
das
stos
lock
aaa
add
outs
jae
jnp
fcomp
mov
ins
bound
and
pop
bound
std
enter
bswap
pop
cmc
retf
out
sbb
dec
stos
inc
add
cwde
test
mov
ret
or
loope
jno
jp
mov
ficom
in
stos
ss
cmp
sahf
inc
mov
fild
jno
cwde
xlat
(bad)
mov
push
mov
sar
faddp
hlt
xchg
scas
jge
push
pop
in
jb
cmp
shl
dec
pop
mov
add
adc
ja
fld
ffreep
fisttp
in
in
iret
stos
and
loope
sub
and
jne
add
retf
in
cmp
outs
rcl
pop
cmp
mov
cmp
es
sahf
add
mov
jg
push
add
xor
fst
lods
mov
add
xchg
dec
scas
das
pop
dec
test
sub
mov
repnz
rol
adc
fmul
(bad)
dec
or
ss
shl
jae
into
mov
xlat
ret
fstp
mov
enter
iret
enter
call
sub
xchg
mov
fdivr
mov
lods
push
das
adc
or
jb
push
inc
mov
mov
pop
leave
mov
mov
or
push
lods
jnp
or
das
fwait
sub
jecxz
add
mov
mov
and
(bad)
mov
pop
sbb
sbb
adc
mov
outs
popf
and
cmps
mov
xchg
imul
retf
inc
mov
xchg
popa
sbb
dec
xchg
mov
push
sbb
mov
repz
fidiv
mov
ins
add
movs
mov
push
jae
cld
cmps
lahf
inc
xchg
push
adc
push
sti
pushf
cmp
add
cmp
and
mov
dec
mov
movs
xchg
inc
cmp
mov
inc
test
fs
popa
pop
sub
fwait
call
out
shl
xchg
push
(bad)
fimul
rcl
sti
aam
xlat
sbb
dec
pop
xchg
into
stos
jb
xchg
or
jmp
cmp
stos
fiadd
mov
pop
outs
in
pop
and
cmp
fs
cmp
sub
mov
movs
pop
popa
shl
ret
stc
ret
add
sub
mov
push
fbstp
jnp
xlat
mov
mov
xlat
mov
xchg
jle
das
pusha
pushf
int3
in
je
rcr
into
push
inc
push
dec
dec
and
(bad)
push
pop
sub
push
sbb
inc
pop
mov
out
daa
ror
fild
push
jnp
jns
sub
adc
test
jge
imul
sbb
retf
dec
sbb
push
fild
mov
lea
pop
fld
std
sub
xor
shl
call
test
mov
pop
aaa
adc
add
mov
inc
mov
pop
bnd
mov
jmp
ret
fadd
push
inc
mov
das
neg
mov
pop
aaa
jns
hlt
es
repz
lock
mov
adc
dec
mov
sbb
jo
repz
jmp
inc
enter
scas
scas
pop
cmps
cmps
outs
stc
std
test
gs
or
mov
sub
(bad)
pop
(bad)
sti
outs
add
mov
stc
outs
adc
ins
icebp
add
imul
sbb
std
push
arpl
push
and
call
aas
mov
aaa
adc
mov
adc
xor
retf
cmp
fnstcw
mov
std
xchg
push
in
ret
fcomp
add
pop
aam
movs
or
jbe
push
dec
pusha
movs
jno
fwait
sbb
fs
inc
sets
lds
or
(bad)
sti
imul
pop
mov
inc
(bad)
out
jns
cld
cdq
stc
sub
pop
ds
jecxz
inc
push
iret
cdq
xor
imul
mov
outs
mov
in
jl
fdivr
lods
test
dec
xchg
push
bound
test
and
out
xchg
push
fdiv
clc
adc
mov
ret
outs
shl
cmp
adc
and
lock
xor
ins
adc
cmc
adc
ret
pop
dec
nop
xchg
and
mov
data16
leave
mov
lahf
lds
pop
aas
lods
and
sub
mov
push
mov
stos
dec
call
mov
repnz
cmp
and
aaa
pop
push
mov
adc
pop
push
mov
call
pop
inc
and
push
fucom
dec
dec
icebp
mov
jae
iret
pop
or
(bad)
(bad)
in
aas
out
sahf
imul
sub
test
sar
test
and
sbb
aad
pop
imul
mov
aas
sbb
or
fiadd
xchg
or
test
cmp
stos
pusha
jl
xchg
call
sbb
xchg
sahf
in
mov
out
bound
(bad)
adc
jno
pop
mov
push
and
inc
ins
sub
sbb
mov
mov
mov
jno
pop
mov
mov
imul
dec
xchg
push
or
ret
loop
(bad)
sbb
push
mov
sti
xchg
push
in
or
int3
mov
mov
fbstp
pop
adc
push
es
dec
adc
inc
cld
sub
and
adc
push
adc
sti
or
(bad)
(bad)
jl
lods
add
dec
int
add
jg
std
and
ja
and
mov
push
imul
stos
js
adc
test
clts
mov
mov
div
pop
cdq
mov
test
cmps
sub
popf
mov
int3
and
push
xchg
mov
jl
daa
xor
push
or
adc
lods
outs
mov
loop
sbb
fmul
jge
jecxz
aam
lock
fmul
jge
jle
push
ds
retf
out
push
jecxz
xlat
sub
adc
ret
aas
popf
cs
call
add
int
mov
movs
call
call
(bad)
cmp
daa
jmp
xchg
mov
mov
adc
clc
push
repz
div
jns
addr16
mov
arpl
daa
push
jl
inc
pushf
fnstcw
nop
cmp
jge
or
jecxz
stos
loopne
inc
fwait
add
push
or
call
jno
mov
out
jne
jl
jecxz
inc
mov
pop
aaa
xlat
std
test
push
test
mov
cmp
adc
out
test
into
les
push
push
jmp
jg
ss
sbb
inc
into
shl
pop
(bad)
pop
xlat
cli
into
push
mov
push
mov
dec
test
push
enter
or
xchg
sbb
xchg
mov
jb
arpl
add
cmp
repz
pop
or
int
mov
cdq
push
sub
mov
(bad)
inc
ror
in
pop
sbb
in
ja
xor
xchg
xor
test
xchg
pop
inc
lods
icebp
mov
mov
ins
mov
mov
push
and
pop
or
add
pop
inc
or
push
and
mov
or
and
(bad)
push
aaa
mov
cmc
fcmovnbe
push
or
dec
jecxz
imul
sbb
or
jecxz
es
mov
movs
cdq
out
push
div
movs
add
mov
pop
pop
(bad)
(bad)
out
mov
(bad)
fisttp
add
sbb
mov
mov
pop
fwait
or
test
push
pop
ret
push
add
retf
cmc
test
add
jle
or
pusha
js
in
sbb
xor
jge
jae
in
add
sti
mov
and
and
lea
jns
or
cmp
pop
mov
or
cdq
shl
mov
fsub
sbb
and
push
add
fwait
test
test
in
sub
or
dec
jmp
ret
lods
mov
sub
pop
scas
test
cmp
shr
cmp
iret
lahf
dec
loope
xchg
mov
xor
push
aas
enter
test
repnz
add
sub
arpl
cli
dec
ret
mov
sbb
shl
aad
jne
pushf
leave
out
adc
scas
push
and
xchg
sub
jno
or
xor
test
push
pop
push
nop
sub
cmp
or
ss
stc
push
sahf
repz
push
sbb
push
add
add
inc
rcr
gs
in
mov
xor
imul
add
cmp
retf
aas
aaa
js
call
or
es
mov
cs
add
or
out
lock
outs
inc
xor
popf
push
mov
stc
shr
mov
lods
sub
sti
ror
adc
or
pop
scas
dec
jae
lock
mov
sub
in
mov
xchg
mov
jo
test
inc
or
xchg
pop
rcl
call
sbb
outs
ja
inc
sti
mov
in
(bad)
scas
adc
sar
cmp
mov
dec
xchg
aam
sub
inc
adc
hlt
inc
pop
push
xchg
fbld
js
je
loope
outs
jae
int3
mov
and
pop
xor
hlt
inc
test
push
stc
rcl
xor
aas
sbb
fidiv
inc
push
aas
mov
cs
dec
(bad)
xor
arpl
pop
and
mov
xchg
pop
js
pushf
or
cmp
in
test
out
push
pop
cmp
test
ror
(bad)
stc
xor
and
mov
rcl
ins
inc
xor
mov
jecxz
xchg
inc
shl
sbb
mov
mov
cld
dec
pop
jne
fdiv
out
daa
nop
setne
fs
mov
push
leave
push
add
mov
inc
push
pop
jo
jns
mov
pop
or
cmp
lds
sub
pop
mov
or
xchg
loop
mov
push
repnz
inc
call
dec
add
mul
imul
cmps
inc
jo
(bad)
push
inc
xlat
mov
cli
and
(bad)
call
pop
sub
inc
dec
cs
daa
shr
in
mov
int
xchg
sahf
mov
lea
jge
xchg
(bad)
push
pop
cmp
and
enter
inc
fisttp
fdivr
cli
or
pop
lahf
das
frstor
mov
(bad)
test
fadd
dec
add
add
test
(bad)
out
fsubp
leave
fldpi
sub
dec
xlat
mov
popf
idiv
sbb
dec
pop
cmp
inc
ds
sub
inc
mov
mov
lahf
adc
add
adc
lods
or
inc
stos
pop
sub
inc
mov
xchg
jnp
push
adc
cli
xor
inc
out
ds
mov
mov
loop
add
mov
mov
in
test
push
push
jmp
cmp
out
lds
pop
scas
cmp
fadd
iret
add
outs
stos
mov
movs
jle
sbb
icebp
out
adc
cli
test
sbb
pop
sub
or
or
loop
jg
in
push
retf
call
aas
gs
xchg
mov
je
mov
xor
sbb
jecxz
sub
inc
pop
jl
sub
nop
(bad)
mov
into
dec
inc
cmp
mov
or
dec
push
pop
push
jno
inc
in
cmp
mov
cmp
xchg
mov
mov
daa
adc
xor
pop
mov
push
int3
popf
cmp
mov
std
pop
jne
jge
fld
cmp
xchg
adc
div
xchg
sub
jae
ficom
push
stos
loope
and
mov
jno
xor
ins
div
push
int
daa
out
popf
inc
out
aas
je
pop
imul
adc
das
dec
xor
retf
pop
rcr
or
cmps
(bad)
repz
push
(bad)
retf
mov
cwde
test
shl
stc
pop
mov
mov
addr16
inc
cmc
(bad)
cli
cmps
loope
dec
mov
test
and
adc
(bad)
fidivr
je
out
inc
in
jle
test
cmps
mov
movs
mov
cmps
jno
ins
in
sbb
movs
add
and
cmps
scas
push
(bad)
push
call
test
or
cmpxchg
xchg
shl
add
sub
ret
popa
or
jge
in
inc
retf
lds
and
loopne
sbb
mov
dec
lods
push
repnz
cmps
stos
retf
mov
pop
lea
and
rol
cmp
or
ss
jmp
js
sbb
cwde
repz
fmulp
fmul
pop
jl
rcl
fs
or
and
cmp
cmp
(bad)
mov
dec
xchg
xor
cmp
cmp
jg
ret
ss
mov
adc
or
shl
inc
add
ja
mov
pop
xor
adc
imul
ret
scas
mov
cmps
adc
imul
popa
(bad)
mov
stos
cmp
scas
sti
shl
jbe
mov
test
jmp
and
inc
popa
imul
fs
or
jp
sub
push
les
sbb
mov
mov
jecxz
popf
cmps
and
mov
cli
cmc
lods
sbb
icebp
inc
xchg
xor
mov
cmc
sub
mov
into
sbb
ror
mov
xor
jge
mov
mov
repz
je
shl
cmp
jo
push
ss
xor
dec
push
mov
cmp
in
stos
push
push
ret
jecxz
push
mov
mov
xor
sbb
mov
fcom
push
pop
ret
inc
(bad)
call
push
push
ins
push
or
int3
imul
and
mov
gs
inc
sbb
clc
xor
adc
(bad)
stos
jecxz
hlt
fmul
or
mov
addr16
gs
xor
pop
jmp
(bad)
cld
js
xor
xor
(bad)
push
xchg
cmps
push
lock
outs
iret
sub
push
aas
aas
stc
outs
int3
lods
popa
mov
add
xor
and
nop
imul
lock
mov
inc
mov
push
ret
bound
push
cmps
add
out
jge
or
lahf
mov
push
adc
push
jnp
sbb
push
outs
pop
mov
cmp
sub
adc
cmp
xor
mov
pushf
call
dec
lahf
sub
jecxz
in
add
(bad)
and
sbb
test
xchg
into
sub
das
inc
or
dec
xlat
xchg
scas
push
lahf
jmp
mov
retf
dec
aaa
adc
test
sbb
mov
cmp
mov
pop
push
int3
das
push
sub
sub
cdq
jge
push
mov
jns
gs
mov
add
sub
ret
dec
inc
mov
push
mov
jp
xchg
adc
and
dec
(bad)
retf
xchg
adc
aad
push
pop
into
shl
adc
jno
inc
mov
add
xchg
mov
push
push
mov
pop
mov
and
or
or
pop
je
les
inc
je
popf
jmp
loope
inc
(bad)
push
pusha
sub
sub
pop
sti
cmps
mov
pop
sbb
dec
cmp
lahf
outs
xchg
gs
cdq
dec
sub
dec
adc
mov
(bad)
dec
jmp
mov
stos
retf
jns
pop
mov
mov
mov
cmp
sbb
mov
out
adc
jg
add
sub
retf
es
jnp
jp
dec
inc
mov
push
pop
fldcw
repnz
mov
fdivr
inc
in
cmp
test
lock
or
cdq
in
std
push
pop
jno
mov
xor
sbb
or
xchg
pushf
ret
bound
mov
inc
sbb
cmc
xor
dec
push
jbe
pop
push
ror
imul
add
push
mov
xchg
test
mov
cmp
push
sub
movs
mov
popf
add
popa
shl
sub
mov
mov
call
setl
mov
xor
repz
push
(bad)
and
inc
cmp
lea
sbb
popa
xlat
(bad)
pop
jo
enter
or
fmul
add
gs
loopne
add
cmp
pop
adc
pushf
outs
daa
test
in
in
aas
test
test
enter
sbb
mov
jae
mov
es
icebp
and
enter
cmp
in
(bad)
out
call
push
pop
ss
pop
pop
(bad)
das
push
adc
jp
jae
sub
push
rol
push
sub
push
sub
clc
cmp
push
inc
test
and
dec
pop
jge
push
xchg
adc
hlt
adc
and
inc
loop
hlt
cdq
dec
addr16
shl
mov
lds
shl
jle
jle
mov
pop
into
retf
cwde
sbb
xchg
mov
mov
icebp
das
push
mov
cmp
(bad)
repnz
shr
jg
add
mov
repnz
cli
adc
push
dec
add
cld
lods
jmp
std
push
mov
xchg
lahf
sub
mov
mov
adc
inc
jmp
lahf
sti
cmc
sbb
enter
cmp
mov
fcom
add
fmul
sbb
stos
cdq
test
jae
pop
pop
mov
mov
or
(bad)
push
aaa
jecxz
and
mov
or
scas
mov
mov
into
out
sub
sub
in
scas
les
es
jp
and
cmp
sub
cmp
stos
js
mov
bound
imul
xor
xor
loopne
dec
cmp
inc
retf
mov
lahf
xor
add
push
imul
push
dec
movs
out
shl
mov
xor
pop
xchg
mov
push
mov
or
das
sbb
inc
inc
cmp
pop
popa
mov
cmp
cli
(bad)
lods
pop
retf
jp
mov
mov
cmps
or
xchg
test
jecxz
cli
mov
pop
movs
jno
(bad)
shl
(bad)
mov
lds
inc
inc
out
pop
shl
fnstenv
xchg
call
sub
inc
pop
cwde
out
mov
mov
std
add
jmp
ja
test
in
fwait
dec
movs
out
loopne
lahf
sbb
xchg
xchg
(bad)
jp
(bad)
jnp
popa
outs
sub
test
out
push
mov
add
or
add
jg
ret
mov
sti
adc
cmc
mov
fiadd
mov
or
jo
bound
rcl
xchg
sti
push
call
ins
push
jb
jb
cmps
iret
int
inc
jns
adc
pop
rep
or
add
jle
jne
out
pushf
mov
aas
fpatan
sub
add
jae
cmps
or
(bad)
out
xchg
push
ins
or
ins
sub
call
repz
add
imul
xor
in
push
fadd
mov
(bad)
cdq
xor
(bad)
outs
ins
push
sbb
or
pop
xchg
jno
call
retf
loop
jmp
sahf
sub
jno
pop
xchg
jl
bound
out
movs
xchg
and
or
imul
jl
or
repz
or
cdq
std
hlt
movs
cmp
in
sub
pop
push
shl
inc
inc
js
pop
std
inc
cmp
push
fadd
push
or
fidiv
mov
lock
and
xor
xchg
pop
add
push
dec
in
lock
inc
add
dec
xor
and
dec
and
sbb
mov
push
mov
jmp
pop
jle
sub
and
xchg
mov
xchg
mov
fcom
push
or
rol
lds
mov
xor
or
or
pop
mulps
cdq
pop
call
nop
stc
inc
sbb
aam
sbb
add
pop
shr
inc
test
cmps
add
mov
xchg
scas
sbb
or
dec
(bad)
repz
cmp
push
aas
cmp
xchg
cld
mov
mov
hlt
add
sub
pop
das
add
arpl
imul
in
adc
cmp
stos
add
push
sbb
mov
jge
xchg
daa
pop
std
inc
mov
add
popf
test
jg
xor
mov
imul
inc
int3
fist
dec
jmp
adc
movs
push
sub
mov
dec
(bad)
jl
xchg
mov
xchg
and
add
nop
xor
test
loope
(bad)
aam
inc
mov
lods
cmp
mov
ret
push
lea
cld
inc
mov
sbb
adc
mov
push
adc
cmp
js
loope
and
push
sahf
cmp
int3
jcxz
popa
xchg
or
mov
sub
mov
sub
dec
jg
xchg
dec
and
jns
xchg
in
mov
add
data16
fist
(bad)
test
loop
bound
(bad)
pushf
xchg
fild
or
sbb
loope
pop
imul
test
sbb
aad
pop
sub
cmp
push
shl
mov
mov
jg
jle
in
les
fld
pop
scas
jge
les
and
adc
(bad)
pop
mov
test
jmp
test
in
xor
push
outs
ss
(bad)
rcr
sub
xchg
jae
pop
push
jl
or
push
mov
fs
or
ret
inc
mov
lods
adc
push
in
or
add
pop
in
inc
cmps
jge
imul
ja
(bad)
(bad)
rcl
imul
mov
mov
sbb
xchg
sbb
mov
retf
out
js
das
cmp
leave
mov
pop
test
outs
pusha
sub
jmp
enter
popf
jb
(bad)
pop
push
lock
jmp
xor
jle
xchg
mov
and
push
push
popa
in
push
and
jae
rcr
int3
sub
cwde
adc
(bad)
and
push
pop
adc
mov
loop
fwait
int3
cmp
test
mov
mov
push
xchg
lds
rcr
in
(bad)
loopne
out
push
rcr
fs
leave
jb
test
test
add
in
push
sub
push
loopne
lods
adc
pop
jmp
enter
sbb
push
outs
mov
aas
loopne
mov
pop
mov
ficom
or
repz
push
daa
mov
mov
pop
mov
call
push
jno
adc
loope
ins
inc
test
cli
mov
mov
imul
repnz
sub
push
and
(bad)
loopne
imul
pop
xchg
push
outs
std
xchg
ss
ja
lods
pop
xchg
push
pop
imul
mov
mov
movs
cmp
adc
push
and
push
jecxz
mov
comiss
enter
arpl
sbb
push
call
fistp
push
or
ins
arpl
sub
loope
aam
sub
nop
push
sti
cmps
pop
sub
sub
cmp
sub
aaa
outs
movs
imul
mov
pop
stos
leave
cmp
pop
push
shr
pop
inc
sub
popf
lods
js
jmp
movs
xor
mov
movs
inc
push
xor
inc
mov
inc
pusha
in
mov
lahf
scas
xchg
mov
int3
rcl
add
or
xchg
sub
pushf
adc
in
or
and
xchg
imul
mov
scas
icebp
repnz
add
add
dec
and
mov
sub
daa
dec
loope
mov
adc
(bad)
fstp
mov
dec
sahf
not
add
adc
xchg
push
in
xor
(bad)
push
call
inc
not
mov
js
js
xchg
and
in
imul
dec
cmp
mov
out
inc
scas
loopne
jno
fcom
pop
mov
arpl
ins
adc
outs
xor
or
xchg
jmp
fs
and
dec
xor
jp
in
jns
sub
out
imul
into
xchg
lea
(bad)
lahf
ret
add
mov
jg
jmp
mov
repz
enter
sub
jbe
data16
adc
pop
cli
lock
xchg
xor
add
es
ret
out
dec
popf
sbb
out
push
or
aam
into
xchg
test
push
cmp
jae
add
add
and
dec
lea
mov
in
and
sub
dec
jnp
pop
fisub
sar
or
leave
adc
shl
cmp
test
sub
jbe
adc
xchg
cmp
scas
jno
shr
jmp
or
jl
mov
imul
jmp
nop
ins
cwde
push
mov
inc
rcr
pop
mov
call
daa
sub
jns
pop
jmp
mov
scas
shr
retf
scas
out
stos
or
mov
fwait
push
sub
jge
push
idiv
inc
jae
push
(bad)
cmp
scas
fmulp
popa
ficom
repnz
jmp
pusha
loope
jo
out
dec
pop
mov
push
test
xor
addr16
xor
sbb
dec
mov
pop
fcom
xchg
inc
cmp
inc
fbstp
(bad)
test
cmc
cmp
loop
rcr
and
or
movs
outs
js
scas
inc
in
test
jecxz
mov
cmps
push
or
fs
cmp
and
hlt
idiv
or
inc
sar
dec
or
adc
(bad)
push
dec
mov
ret
sub
xor
out
jo
rol
push
les
in
pop
xchg
xor
push
mov
fwait
push
push
cli
mov
cmp
adc
or
jecxz
icebp
sar
pop
or
dec
push
fdivr
(bad)
in
cli
mov
leave
clc
add
mov
pop
or
pop
imul
imul
outs
pop
push
mov
sbb
pop
dec
mov
adc
dec
add
mov
or
xor
cli
cld
aad
daa
cmp
fsubr
aad
pop
adc
icebp
loope
into
mov
(bad)
pop
adc
lahf
(bad)
in
jge
jbe
mov
mov
cmp
sub
fs
pop
stos
xor
je
xlat
imul
hlt
xchg
mul
xor
call
xor
fs
adc
add
dec
scas
loop
ds
fistp
and
push
pop
test
push
push
loope
(bad)
adc
adc
jo
(bad)
mov
pushf
bts
retf
mov
sub
add
push
xchg
jmp
gs
push
lock
lods
mov
mov
and
xchg
(bad)
gs
mov
jae
cdq
mov
addr16
cs
pop
mov
lods
mov
mov
or
sahf
jo
push
mov
test
iret
sbb
cld
mov
js
mov
adc
or
out
bound
popf
sub
call
bound
and
add
mov
enter
ja
jge
adc
xchg
sub
aaa
call
mov
sub
xchg
cwde
fpatan
mov
push
xor
int
fisub
jp
dec
jmp
xor
gs
jmp
retf
pusha
inc
in
sbb
loopne
cdq
scas
arpl
xlat
shl
scas
(bad)
lahf
pusha
jo
imul
cmps
dec
fisubr
test
ss
or
fbld
xor
mov
lods
retf
xchg
cmp
(bad)
jae
aaa
movs
cdq
add
cli
adc
test
xchg
dec
mov
dec
pop
daa
pushw
sub
cli
outs
push
push
lods
bound
push
pop
mov
in
inc
mov
jno
jecxz
loop
fdivr
or
inc
push
outs
mov
pop
arpl
lods
mov
adc
dec
push
jno
(bad)
pusha
enter
aas
xchg
push
and
dec
ins
jge
sbb
ss
scas
repnz
jmp
int
jb
or
dec
popf
xchg
into
adc
cmps
sub
mov
sub
mov
test
add
adc
jo
ret
dec
data16
test
cmps
xor
or
jns
pop
sahf
adc
sbb
(bad)
jg
jecxz
mov
retf
xchg
mov
loope
std
xor
cli
(bad)
add
mov
mov
cmp
lds
call
daa
mov
rcr
and
xchg
and
ror
fwait
inc
fcmovb
push
loopne
sbb
lods
aam
mov
xchg
fisub
mov
lods
xchg
dec
push
push
inc
mov
mov
(bad)
repnz
pop
aam
or
pop
lods
inc
jl
adc
out
adc
pop
sub
jbe
xor
lahf
and
cmp
call
inc
push
push
mov
fs
sti
in
inc
les
mov
ss
pop
dec
fistp
xor
push
push
std
cmps
shr
jmp
(bad)
mov
stos
hlt
jecxz
sti
jne
push
fist
mov
add
ficomp
lods
enter
fs
xchg
mov
cmps
push
mov
inc
cmp
push
xor
mov
imul
mov
iret
movs
hlt
sbb
push
mov
scas
sti
fcmove
inc
push
mov
mov
fsub
pop
fstp
dec
push
dec
(bad)
outs
scas
(bad)
mov
iret
sahf
fisubr
inc
aad
retf
loop
inc
xchg
pop
test
popa
adc
jns
inc
fmul
cli
aam
lods
cmp
push
(bad)
cli
xchg
fldenv
retf
xor
xchg
outs
or
push
push
mov
(bad)
push
in
and
in
sbb
fstp
rcr
mov
test
sbb
addr16
adc
sbb
(bad)
mov
out
pop
ds
retf
sub
bound
repz
clc
sub
jp
fwait
sahf
mov
jbe
dec
pop
(bad)
rcr
pop
jnp
add
sub
xchg
in
add
mul
sahf
movups
cmp
test
xor
xor
cmp
pop
(bad)
adc
xor
bound
xchg
in
inc
jmp
or
jecxz
push
fcomp
(bad)
and
lods
or
cli
mov
push
iret
dec
ins
sbb
popa
cmp
jbe
sub
mov
push
lea
loope
(bad)
rcr
mov
sbb
mov
mov
push
sub
inc
ror
aas
mov
fist
sbb
push
add
or
xor
pop
sub
mov
sbb
mov
or
or
mov
cs
cmp
les
mov
mov
sub
cmp
xchg
mov
mov
fst
repnz
icebp
pop
addr16
sub
outs
in
sub
out
inc
mov
(bad)
jnp
mov
pusha
popf
loope
pop
jne
popa
inc
arpl
es
pusha
jnp
nop
dec
mov
push
inc
xor
sub
aas
cli
rcl
mov
inc
fimul
xchg
xchg
bound
or
xchg
scas
jb
aas
sbb
call
xor
mov
int
adc
cmp
and
in
pop
push
push
pmuludq
out
fisubr
in
mov
sub
pop
pop
push
pop
cmp
gs
std
dec
cmp
mov
mov
je
mov
and
jmp
cmp
aas
(bad)
int3
ficomp
xlat
movs
dec
dec
dec
aaa
push
fdivp
sbb
into
dec
jl
jmp
lea
(bad)
sub
dec
inc
shr
jmp
dec
clc
adc
push
ins
inc
dec
sbb
fst
dec
xor
jmp
inc
test
and
test
inc
mov
push
pop
jo
or
xlat
mov
sbb
test
jl
mov
adc
mov
sub
sbb
js
popa
stos
fisub
and
fstp
aad
xlat
addr16
sub
sbb
lahf
mov
aad
loopne
add
xor
out
jle
mov
jo
sub
sbb
push
mov
mov
inc
mov
es
and
adc
xchg
dec
iret
out
sti
or
jae
cmp
rcl
or
aaa
mov
div
ret
push
or
push
scas
into
jb
inc
aad
mov
outs
mov
shl
mov
sub
in
xor
(bad)
nop
xor
popa
jl
popf
and
and
stos
stos
(bad)
jg
cmp
mov
jbe
lock
push
shr
mov
outs
nop
fadd
mov
cmp
out
mov
jae
ins
loop
pop
jecxz
xor
xchg
or
mov
iret
sar
dec
mov
lahf
push
lods
xor
hlt
out
(bad)
cli
mov
aaa
or
push
mov
or
outs
std
jmp
icebp
cwde
lods
push
add
mov
icebp
lods
popf
(bad)
xchg
ret
add
mov
push
xor
test
sub
push
jmp
mov
sar
fiadd
push
loop
sub
push
mul
les
mov
mov
xor
jns
sbb
adc
daa
sbb
push
adc
sar
sub
pop
enter
(bad)
push
mov
aad
pop
jns
jne
prefetcht0
pop
pop
jo
or
mov
(bad)
movs
fwait
mul
daa
mov
xor
(bad)
in
mov
jge
inc
xchg
mov
dec
repnz
sub
jno
adc
add
neg
and
jno
pop
inc
adc
sbb
ja
sub
loop
mov
retf
lods
into
xor
push
popa
jg
stos
shr
not
push
cmps
mov
ds
pop
adc
aas
cdq
popf
push
inc
lods
mov
xor
jl
adc
pop
icebp
or
arpl
mov
mov
popf
into
mov
out
xchg
gs
ss
ja
dec
dec
inc
mov
adc
cmps
adc
cmp
enter
pop
pop
shr
xchg
ret
ins
push
lea
jb
sbb
popa
and
mov
loope
(bad)
xor
les
sbb
pop
popf
pushaw
or
push
(bad)
adc
bound
ss
sar
std
cmps
(bad)
sbb
cmp
pop
fld
ficom
push
nop
sbb
(bad)
fldlg2
xor
jae
movs
push
and
sbb
sub
mov
xchg
xchg
ret
dec
xchg
inc
test
inc
movs
mov
cmp
ret
sub
dec
adc
loop
(bad)
nop
push
aaa
and
js
pop
dec
ret
mov
cli
in
repz
sbb
jns
dec
lds
addr16
(bad)
(bad)
fldlg2
jae
cmp
in
movs
scas
xor
xor
mov
sbb
aad
mov
pushf
mov
sub
popa
xlat
aam
add
punpckhbw
ds
add
sbb
mov
push
push
xor
sub
push
or
scas
aad
mov
pop
stos
jbe
sbb
scas
test
jl
dec
add
pop
arpl
(bad)
enter
mov
loope
retf
jecxz
xor
or
jmp
std
(bad)
pop
xor
in
mov
jb
pusha
loop
xchg
jle
pop
dec
ror
cli
mov
out
movs
mov
out
es
pop
mov
jo
mov
cmp
jmp
and
fbld
fstp
jne
clc
sbb
mov
call
pusha
rcr
pop
(bad)
stos
cmp
jmp
add
in
sub
mov
repnz
lea
and
xchg
push
(bad)
xor
push
mov
stos
into
mov
jg
sbb
adc
and
clc
cdq
(bad)
sahf
dec
call
jg
ja
mov
cld
or
mov
jb
cwde
jb
movs
jge
sub
popa
fsub
loop
retf
cmp
jb
add
enter
and
aaa
inc
cwde
adc
dec
jnp
retf
jo
adc
xor
daa
adc
fisubr
pop
loop
gs
stos
jne
xchg
add
lods
ja
shr
fimul
imul
xor
or
adc
cmp
inc
mov
out
add
sub
stos
mov
or
xor
cmp
jge
in
inc
mov
xchg
mov
mov
pusha
aas
cmp
loop
dec
cmc
sbb
xchg
outs
mov
adc
mov
(bad)
xchg
jne
ret
ins
lds
pop
push
fldenv
outs
cmp
mov
movs
cdq
dec
inc
sub
jns
jae
sbb
jne
fs
iret
out
mov
xchg
sbb
shl
js
sub
mov
scas
test
ja
pop
jmp
movs
(bad)
xchg
pusha
mov
test
xlat
ds
hlt
retf
imul
pushf
or
pop
lods
push
cs
dec
lahf
fdivr
enter
sub
pusha
mov
loope
imul
and
mov
pop
data16
mov
push
xchg
std
mov
fsub
rcr
iret
test
inc
push
push
and
xchg
test
push
dec
jae
xor
daa
and
pop
cmp
cmp
arpl
mov
mov
jle
aaa
xor
pop
push
xchg
cwde
xlat
(bad)
xlat
ss
div
ret
(bad)
fistp
sar
pushf
cmp
ins
sub
xor
dec
les
mov
imul
and
les
retf
mov
jae
or
test
aad
inc
mul
ret
sbb
jns
push
add
ins
popa
cwde
xchg
pop
xor
iret
hlt
inc
xor
pushf
ret
dec
je
pop
js
add
gs
mov
imul
lods
test
push
ror
or
fcmovne
js
push
ds
dec
shl
jmp
xor
sub
cmc
cmp
jnp
ds
mov
scas
sbb
shl
cli
out
dec
pop
iret
xor
pop
data16
mov
xchg
arpl
les
push
popf
xor
pop
icebp
lea
(bad)
neg
cmp
call
xor
xor
les
pushf
pop
popf
and
outs
out
xchg
idiv
adc
jmp
shl
stos
ins
ficom
mov
jns
xor
(bad)
mov
dec
ret
dec
push
mov
dec
sub
cmp
cmp
and
inc
cmp
ss
xor
outs
stc
jnp
sar
test
lds
fcomip
scas
ds
push
out
inc
pusha
adc
mov
fsub
fcom
mov
ins
push
xchg
cmps
or
push
add
pop
sbb
cmp
mov
sbb
push
pop
aad
jne
inc
adc
or
loopne
ret
das
and
int3
adc
mov
or
and
mov
push
pop
test
xchg
mov
fimul
fimul
retf
into
adc
push
adc
jne
mov
cdq
push
dec
adc
popf
fcom
mov
stos
out
mov
test
stos
cmp
addr16
scas
imul
mov
mov
xor
mov
(bad)
fsubr
mov
loopne
popa
std
sbb
nop
hlt
outs
add
in
or
call
xor
push
in
add
dec
nop
mov
xor
cmp
mov
mov
nop
out
(bad)
pusha
sahf
push
out
xor
stos
add
popa
cmp
jg
inc
hlt
pop
test
xchg
adc
sub
lds
out
test
xor
pop
loop
jns
(bad)
data16
shl
jbe
and
jmp
or
xor
outs
or
pop
in
aam
xlat
call
ds
adc
repz
(bad)
push
out
xor
stos
std
aam
xor
rol
pop
add
push
sub
push
or
jecxz
rol
and
out
lea
popf
repnz
fbld
lds
imul
das
mov
mov
sub
ret
std
mov
xor
ds
mov
mov
stos
jle
pushf
and
and
enter
les
fwait
inc
adc
loop
popa
cwde
dec
sti
mov
jmp
jmp
scas
adc
pop
test
inc
mov
cwde
(bad)
scas
mov
mov
popf
mov
and
sbb
cmp
test
or
xor
lods
cld
stos
mov
in
or
sbb
jne
xor
mov
addr16
mov
ins
inc
sbb
enter
inc
sub
cs
imul
pusha
inc
imul
push
out
je
jmp
outs
xlat
aam
sahf
fcmove
pop
aad
add
das
repnz
loopne
jbe
bound
retf
mov
and
push
mov
(bad)
adc
add
in
sub
test
and
(bad)
xor
out
inc
pop
out
pop
mov
outs
mov
cmp
pop
out
fwait
inc
push
fimul
add
push
push
sbb
sub
sub
sbb
mov
in
ret
imul
test
into
mov
lods
clc
inc
pop
pusha
sahf
and
in
jne
inc
jo
add
test
pop
jle
mov
shl
or
push
xor
jmp
loopne
in
or
sbb
call
aas
jno
adc
dec
lock
xchg
mov
dec
jp
loop
outs
mov
or
pop
cmc
sti
ja
icebp
mov
into
sub
test
xor
std
sub
cmc
dec
mov
(bad)
push
pop
add
jbe
xchg
(bad)
adc
inc
imul
xchg
pop
xor
sub
sub
fisubr
(bad)
in
adc
in
xchg
rol
test
sub
call
in
add
bound
cmp
and
imul
aaa
les
cli
and
aam
mov
mov
test
outs
bound
sti
xchg
push
fidiv
cmp
in
stos
mov
jns
frstor
or
jbe
jbe
pslld
jo
sub
popf
mov
and
sbb
mov
inc
pop
arpl
sbb
xlat
js
cmp
pop
cdq
mov
enter
popf
aas
xchg
imul
xchg
xor
adc
or
mov
push
stos
fisttp
out
sbb
jb
repz
add
jno
jmp
push
dec
les
(bad)
cmp
mov
xchg
adc
leave
rol
js
xor
cld
imul
pusha
jl
mov
and
pop
cmp
(bad)
xor
mov
push
adc
div
add
mov
mov
dec
int
mov
mov
mul
cmp
or
das
xchg
pushf
bound
push
add
call
sbb
aam
sar
popa
pop
cmps
mov
and
(bad)
dec
js
xor
mov
int3
inc
jnp
fst
xor
les
inc
dec
push
sub
sbb
xchg
pop
add
cld
jmp
mov
sahf
mov
sub
cwde
sbb
por
cmp
cmp
cdq
hlt
mov
xchg
outs
mov
cmp
sahf
popf
jp
mov
cdq
pop
icebp
mov
rcl
push
inc
jmp
pop
fidivr
pop
mov
push
ins
xchg
dec
out
pop
xor
xabort
int
test
mov
retf
in
fdivr
adc
ror
sbb
mov
dec
push
int3
cli
xor
shr
sbb
ror
jle
arpl
hlt
mov
pushf
dec
mov
bound
out
(bad)
sub
add
mov
std
scas
mov
rcr
push
popf
shr
in
in
ficom
lock
or
mov
ins
faddp
into
push
jmp
inc
add
dec
int
outs
dec
loop
call
jl
cmp
(bad)
fcom
mov
gs
test
call
dec
fabs
sar
dec
mov
test
retf
cmp
cmp
ret
cmp
or
gs
lds
loop
and
icebp
jp
ins
cmps
call
push
adc
cmp
fld
jbe
js
and
push
push
inc
sar
cld
push
cld
mov
pop
(bad)
ss
xor
pop
jmp
and
test
not
aaa
sbb
sub
out
mov
and
icebp
jmp
ror
fsub
mov
outs
jp
js
in
dec
lea
nop
lahf
jg
or
mov
mov
sar
pop
xchg
imul
pop
daa
adc
or
jns
xor
jl
aad
mov
mov
inc
cmp
or
inc
das
inc
mov
lds
xor
inc
and
dec
out
jns
push
adc
cmp
addr16
leave
sbb
into
hlt
push
mov
pushf
outs
cld
push
xor
mov
test
xchg
cmp
push
int3
not
std
or
rcr
xor
daa
mov
mov
and
inc
push
inc
push
adc
mov
mov
and
or
shl
xlat
xor
out
punpckhdq
pop
dec
aaa
push
mov
mov
int3
sbb
xchg
lock
xlat
inc
cmp
jmp
mov
xchg
xchg
sub
xchg
push
xor
adc
lea
imul
dec
dec
inc
sti
popf
adc
push
icebp
mov
jg
inc
mov
mov
lea
add
icebp
mov
or
xchg
xor
lods
call
mov
pop
fisub
lahf
mov
icebp
mov
push
cmp
pop
rcr
add
jb
lods
and
add
stos
ror
(bad)
push
cmps
iret
xor
scas
sub
bnd
arpl
adc
sbb
cmp
jecxz
xor
(bad)
jno
hlt
int3
lods
dec
sbb
xchg
and
add
stos
repnz
imul
mov
arpl
dec
jbe
dec
(bad)
shl
bound
cmp
ret
sub
push
push
inc
xchg
or
mov
out
inc
add
sahf
mov
bound
add
jae
jecxz
jl
into
stos
aad
dec
mov
inc
inc
mov
stc
js
(bad)
imul
mov
out
mov
jne
jmp
js
dec
xchg
fwait
jecxz
lahf
mov
xor
call
les
and
ret
mov
daa
repnz
sbb
rcr
dec
push
or
(bad)
outs
push
xlat
iret
inc
adc
ror
imul
arpl
sbb
inc
(bad)
adc
mov
je
sbb
in
out
add
mov
xchg
stos
add
push
pop
mov
rep
jg
imul
scas
mov
loope
lea
aas
jae
aam
cmp
dec
outs
cmp
movs
xor
xchg
je
jmp
push
add
add
iret
retf
mov
dec
adc
fdivp
cmp
test
xchg
sbb
jl
sub
in
inc
xor
jbe
lea
push
sub
jecxz
out
std
jg
pop
popf
or
mov
jp
sahf
dec
xor
jp
cmp
add
add
popf
ds
in
stos
sub
out
sbb
fidiv
int
rcr
dec
add
test
shl
ret
pop
adc
pop
push
cmps
sbb
ja
lahf
dec
imul
push
inc
in
jns
inc
push
sti
jnp
push
scas
adc
push
sahf
jns
ret
in
cmps
(bad)
fisttp
dec
add
sub
add
in
icebp
rcr
retf
push
loop
test
in
mov
xor
test
push
sub
add
call
sub
nop
rcl
mov
icebp
pop
push
mov
sbb
lods
xchg
and
xor
outs
rcr
jnp
aad
add
loopne
pop
and
mov
fdiv
stos
push
jno
out
mov
ret
in
fcmovnb
add
clc
ret
ds
adc
ins
xchg
fdiv
scas
push
mov
xor
faddp
mov
cmps
jne
jb
sbb
fcomip
adc
inc
data16
lods
pushf
xchg
mov
aas
push
test
mov
xor
xor
(bad)
rol
hlt
jo
pop
pop
retf
rol
scas
cmp
sar
mov
sub
mov
xor
and
jmp
sbb
xor
or
repnz
mov
ss
sub
cli
fbstp
xor
and
and
in
sbb
add
push
sar
in
xor
mov
(bad)
adc
xchg
cmps
sbb
or
(bad)
sub
aaa
or
test
mov
ret
outs
jl
push
int3
adc
aad
or
sbb
cmp
fwait
sub
pminsw
push
push
xchg
mov
jno
sbb
in
in
and
(bad)
ret
shl
or
mov
shl
sub
hlt
stos
xlat
neg
pop
cmp
pop
fnstenv
mov
cld
jne
dec
dec
mov
pusha
fcomi
rcl
fnstenv
int3
sti
sub
pushf
add
mov
pusha
jo
fisttp
repz
scas
test
xlat
mov
xchg
cmp
iret
std
xor
mov
cmp
push
jmp
pop
pushf
movs
fisub
dec
popf
test
rcl
inc
push
(bad)
push
pop
and
adc
arpl
or
retf
mov
inc
pop
pop
xor
pop
std
(bad)
sub
jmp
sti
pop
out
jmp
jp
mov
frstor
ss
add
adc
fisttp
jns
fadd
xor
add
inc
mov
add
ins
stos
add
scas
inc
fld
push
and
repz
mov
out
mov
jb
and
fwait
adc
jecxz
fimul
xor
cmp
mov
stos
cmp
xchg
sahf
push
cvttps2pi
sbb
mov
aam
pop
sar
push
mov
pop
jmp
inc
ss
xor
and
pop
ja
data16
arpl
std
(bad)
cmc
test
fmul
aam
mov
sbb
cmc
std
in
xchg
mov
inc
pop
inc
mov
dec
arpl
xlat
lds
jmp
shl
scas
popa
push
bnd
mov
pop
dec
sbb
add
dec
mov
mov
pusha
xor
mov
mov
cmp
inc
jle
sbb
xchg
dec
pop
cmp
ficomp
rol
int
clc
cmp
outs
mov
stc
mov
clc
(bad)
xchg
(bad)
and
test
and
xchg
fmul
out
inc
cmps
arpl
sub
cdq
xor
div
or
cmp
shl
stc
fistp
cmp
cmp
pop
inc
jae
scas
jo
mov
iret
sub
fs
xor
or
xchg
sti
jmp
lahf
and
ja
push
xchg
mov
stos
push
cmps
cmp
push
sub
mov
add
sqrtps
arpl
(bad)
test
and
fist
lock
sar
and
and
mov
push
imul
mov
pop
ror
adc
daa
jne
dec
lods
add
shr
cmps
xchg
aas
sar
adc
shr
outs
mov
out
movs
mov
por
repnz
loop
test
call
pop
mov
xlat
fidivr
jb
daa
dec
pop
imul
es
mov
inc
fcmovu
mov
and
ja
fisub
cmp
loop
jns
dec
js
mov
adc
cmp
mov
mov
jecxz
ja
aas
mov
lods
xchg
sbb
mov
test
cld
and
lods
scas
mov
push
hlt
pop
push
mov
pop
cmc
pop
cmp
rcl
enter
jge
call
jbe
std
fisub
jno
mov
sahf
aad
fcom
test
xchg
jmp
cmps
mov
popf
out
in
das
or
inc
jnp
not
in
pop
pop
les
sbb
xor
fisttp
xlat
push
iret
out
das
xchg
mov
fs
push
inc
retf
push
push
retf
cmp
ins
mov
add
int3
push
add
inc
lahf
js
adc
or
xchg
mov
push
xchg
loop
xchg
sti
sbb
icebp
cmc
cmp
pop
loope
sub
retf
pop
imul
and
jmp
or
mov
inc
hlt
sub
jp
dec
dec
nop
mov
outs
mov
jl
data16
imul
dec
lahf
clc
fld
sub
scas
lods
inc
dec
pop
inc
xchg
xlat
scas
dec
adc
push
xchg
mov
pop
fidivr
dec
stos
call
jns
pop
out
push
adc
mov
pop
leave
pop
push
sbb
jb
push
lahf
and
fimul
adc
xchg
sub
clc
repz
jge
cwde
loope
sub
pop
sahf
mov
and
cmp
dec
mov
iret
imul
rcl
or
int
mov
jmp
ss
add
and
dec
xchg
cmp
lods
and
jp
imul
retf
cs
xlat
fldenv
pushf
sub
repnz
mov
cmp
loope
sub
jb
adc
xor
inc
test
push
mov
dec
stos
jo
dec
arpl
jmp
add
add
daa
call
xor
lods
mov
mov
and
stc
sbb
inc
cld
and
out
fist
mov
or
mov
cmp
push
add
pop
retf
xor
stos
jbe
cmp
and
out
and
add
jb
ds
push
clc
(bad)
adc
pop
(bad)
cwde
sar
mov
ins
dec
ror
call
add
rcl
xor
xor
or
adc
pop
add
cmp
shl
sbb
dec
jl
push
mov
xchg
jecxz
inc
sub
enter
or
mov
push
push
aaa
mov
pop
cmp
add
push
sbb
pop
js
call
sub
dec
sub
push
xchg
sub
fs
add
pop
jmp
jg
stos
shr
lock
adc
sub
call
jae
into
add
lds
push
popf
rol
adc
xor
hlt
add
adc
das
in
popf
xor
push
jmp
scas
retf
pop
jecxz
mov
div
nop
(bad)
pop
inc
int3
mov
xor
retf
and
ror
shl
mov
imul
sub
(bad)
lahf
mov
or
push
pop
adc
jmp
addr16
shl
test
lods
jbe
add
jns
sahf
(bad)
lods
test
(bad)
int3
btr
mov
adc
(bad)
ins
add
hlt
aas
and
push
mov
sar
movs
adc
mov
sbb
cmp
dec
or
rol
in
fisubr
mov
sbb
aad
stos
inc
pop
mov
jmp
pop
inc
pop
sar
mov
mov
cmps
add
sbb
mov
or
hlt
xor
(bad)
sub
adc
mov
sbb
and
jle
sub
(bad)
clc
or
(bad)
push
or
test
lock
ja
into
sub
mov
cmc
pop
imul
movs
pop
mov
sub
xor
mov
sbb
ins
(bad)
jle
int
aas
lock
ins
in
cli
cmp
mov
aam
inc
adc
cmp
lods
stc
rol
repnz
repz
add
mov
jns
mov
sbb
pop
jno
into
mov
loop
int
mov
xor
(bad)
fst
sbb
add
scas
inc
adc
mov
mov
inc
jg
das
push
nop
mov
int3
jns
and
outs
and
outs
lods
sub
jmp
fdivr
cmp
or
adc
aaa
sbb
stc
retfw
call
aas
jle
fs
jmp
(bad)
sub
into
push
mov
in
adc
enter
add
push
fild
mov
aad
ins
push
not
inc
add
xchg
lahf
retf
call
into
inc
sub
sbb
inc
nop
mov
ins
mov
fs
inc
aam
jle
inc
ins
jnp
out
mov
xchg
ret
ins
scas
mov
pop
ins
adc
adc
xchg
out
adc
mov
inc
lahf
cmc
aad
cs
add
cmc
test
xor
mov
imul
cmp
jp
repz
iret
mov
inc
ret
(bad)
rol
dec
repnz
test
lock
test
int3
xor
pop
sbb
and
push
mov
cwde
popf
pop
mov
push
add
xor
fs
inc
dec
lock
mov
scas
jnp
mov
jp
fisttp
fisub
cmp
iret
adc
mov
cmp
mov
lock
sbb
loope
add
fnstenv
out
lock
inc
aas
or
pop
inc
fisttp
sub
call
cmp
test
jns
sub
xchg
push
ja
dec
mov
dec
dec
neg
iret
test
sti
call
cli
adc
cmp
bound
adc
mov
sub
in
mov
jo
ins
pop
ud0
cdq
mov
cmps
mov
aas
sub
pop
(bad)
dec
push
mov
lods
sub
std
ja
xchg
jl
sub
cwde
or
xchg
test
fs
sub
lods
jg
pop
leave
fistp
jle
xchg
rcr
pop
out
mov
xor
dec
cwde
addr16
and
adc
sbb
pop
out
jmp
ins
test
mov
xor
dec
push
xchg
sar
sbb
(bad)
cmp
push
mov
cmp
add
outs
xor
sub
imul
daa
cld
lea
sub
popf
test
inc
pop
mov
jb
dec
ret
ret
sar
jmp
mov
push
add
dec
or
jg
enter
aas
xor
mov
cs
(bad)
stc
popa
out
ins
inc
and
daa
dec
dec
and
push
aaa
pop
push
pop
popf
out
int3
(bad)
inc
inc
xor
or
mov
sub
xlat
and
push
mov
push
xor
lds
and
jp
mov
sahf
(bad)
adc
std
nop
es
dec
inc
jnp
bound
xor
sbb
(bad)
imul
fsubr
inc
out
push
jns
dec
xor
pop
fcom
aaa
fidiv
mov
stos
xchg
(bad)
mov
stos
push
imul
cmps
pop
inc
in
fadd
int3
(bad)
and
ficomp
or
add
cmp
clc
fistp
mov
dec
add
inc
daa
pop
mov
ror
adc
fwait
or
mov
xchg
icebp
sub
cwde
(bad)
clc
push
and
pop
popf
inc
js
xlat
es
xor
jo
stos
cdq
in
pop
(bad)
js
xor
arpl
xchg
inc
pop
mov
pop
loope
(bad)
imul
retf
(bad)
repz
cmp
loop
add
add
push
mov
mov
mov
xor
call
pusha
pop
sub
out
test
inc
fnstsw
pop
xlat
dec
in
push
aaa
cdq
mov
sbb
or
inc
sub
cdq
shl
push
or
push
xchg
movs
lds
outs
inc
pop
outs
dec
imul
cld
test
in
jle
xor
addr16
ficomp
mov
pushf
cmps
xchg
inc
xchg
push
inc
aaa
iret
xor
(bad)
cmp
enter
clc
into
scas
imul
adc
inc
mov
pushf
mov
jl
dec
sbb
fs
fisubr
jb
fmul
mov
push
jmp
aam
add
out
mov
xor
inc
shl
leave
cmp
inc
sti
nop
sar
xchg
ror
aas
sub
jmp
ss
(bad)
jle
shr
fiadd
fld
cmp
dec
xor
dec
adc
(bad)
sar
inc
dec
test
ret
mov
fld
inc
or
ds
imul
inc
or
jno
add
jg
mov
stos
or
fld
mov
sbb
or
mov
shl
dec
lds
xchg
call
mov
cmp
pop
and
rcr
lock
mov
jnp
test
daa
mov
dec
in
enter
mov
sub
push
stos
mov
mov
pop
es
and
and
adc
sbb
inc
in
lahf
sub
xchg
xlat
into
xchg
outs
inc
jne
out
pop
stos
loopne
xor
pop
mov
in
aam
add
(bad)
les
push
dec
sub
ja
nop
out
xchg
cmps
enter
adc
icebp
xor
js
aas
or
psubq
fsubr
dec
mov
sub
aas
mov
push
out
loope
jmp
in
mov
cmps
iret
popf
movs
mov
and
shl
mov
sbb
and
ja
rcl
pusha
cmp
or
pushf
ss
sbb
mov
(bad)
or
jle
mov
sti
in
in
repz
jae
imul
pop
and
das
ror
cwde
jno
test
jle
lahf
fcmovnu
pop
leave
(bad)
jmp
sub
xchg
aaa
das
fidivr
and
pop
pop
xchg
cmp
push
jmp
movs
cs
mov
in
mov
or
mov
cdq
(bad)
js
ins
dec
mov
sub
int3
daa
mov
rcr
pop
(bad)
cmp
in
in
push
rep
jl
jg
loopne
lods
add
out
pop
push
cs
mov
sub
jnp
les
test
int
dec
lea
popf
dec
int
popfw
in
add
fsubp
aas
push
pop
push
arpl
mov
int
ret
ds
cmps
stc
xor
gs
xchg
add
imul
ins
(bad)
loopne
clc
loop
mov
pop
movs
jnp
jae
aad
std
cmp
movs
fmul
cs
add
and
xor
jo
fisubr
mov
test
mov
jp
ret
iret
(bad)
cld
adc
adc
mov
out
jg
stos
xchg
mov
pop
xchg
xor
les
dec
dec
fs
stc
leave
or
fprem
dec
inc
sbb
jle
xchg
mov
cmp
cmc
pop
ins
or
mov
xchg
les
es
push
cmp
outs
call
shr
imul
and
bound
(bad)
dec
sub
add
movs
xchg
(bad)
adc
inc
xchg
mov
rol
loop
fcomi
out
(bad)
stc
out
lock
shl
retf
inc
pop
ds
and
or
or
std
adc
lea
test
sbb
das
xor
push
gs
adc
and
xor
sub
pop
into
daa
sub
je
push
xchg
fsub
mov
aaa
pop
mov
xchg
loopne
adc
jmp
fiadd
fsub
mov
cmps
jmp
pop
int3
jnp
or
fdiv
(bad)
int
inc
mov
cld
pop
jge
mov
dec
xchg
imul
aad
jmp
xchg
cmp
xchg
cmovo
mov
jb
pop
xor
cmp
xchg
jns
rcl
shr
int3
fwait
push
adc
dec
pop
imul
push
pop
cwde
test
retf
pop
mov
xchg
push
in
sar
dec
pop
xchg
jmp
xor
jge
xor
movs
push
add
(bad)
stos
and
and
add
retf
les
shl
(bad)
popf
rcl
das
test
je
mov
aaa
std
xor
push
dec
scas
mov
les
mov
fnstenv
cdq
jge
cmp
jge
movs
mov
call
ror
pop
or
and
leave
cmp
stc
(bad)
dec
xchg
arpl
mov
add
inc
es
xlat
jmp
jp
retf
outs
inc
bound
push
scas
test
(bad)
cld
sub
xchg
sbb
leave
mov
loope
fimul
inc
sbb
sbb
or
mov
call
pop
push
lea
movs
pop
sar
loopne
add
sahf
icebp
jnp
(bad)
mov
and
sbb
sub
mov
push
mov
pop
jle
fsubr
xchg
jmp
ds
push
sbb
sub
sub
sub
and
les
push
cmp
jmp
sbb
frstor
test
cmc
aaa
add
int3
dec
loope
clc
and
int
and
mov
test
enter
rcl
pop
mov
xchg
imul
xor
fdiv
sbb
cli
gs
mov
inc
jno
ds
lods
inc
push
shl
mov
sub
out
add
xor
inc
lods
dec
int3
clc
(bad)
pop
out
leave
(bad)
rcl
jle
adc
hlt
sub
ficomp
(bad)
push
add
aaa
mov
sar
repz
into
mov
add
ud0
mov
pop
cli
out
loopne
sub
jle
addr16
and
jmp
inc
(bad)
xor
fs
lock
test
cld
and
cmp
inc
mov
pop
dec
sbb
and
retf
js
adc
jnp
sub
iret
(bad)
nop
cmp
fadd
lods
icebp
or
stos
test
(bad)
or
por
lds
js
faddp
jp
inc
ins
mov
ror
into
dec
push
mov
xor
mov
pusha
sbb
mov
iret
dec
add
mov
rol
jmp
jae
imul
inc
jnp
pop
scas
sbb
pop
dec
inc
ror
ret
pop
ficomp
and
lock
mov
adc
cmp
hlt
sub
fsubr
fisttp
pushf
push
fnstenv
call
sbb
int3
push
(bad)
hlt
dec
sbb
mov
and
push
stc
aaa
and
das
pop
jl
inc
aaa
sub
sbb
inc
outs
loope
push
in
daa
mov
test
cwde
jnp
and
(bad)
out
sub
cld
test
out
(bad)
sbb
add
lds
fstp
sub
fldpi
inc
into
add
cmps
jg
(bad)
fisubr
loopne
cli
pop
rol
sahf
imul
outs
daa
cld
jnp
adc
nop
mov
mov
and
aam
cmp
fwait
mov
and
push
inc
(bad)
daa
sub
popf
mov
xor
popa
hlt
leave
inc
jp
pop
adc
inc
in
aaa
scas
inc
in
xor
mov
ja
in
mov
cli
jl
xchg
data16
lods
cmp
cmp
fldcw
jge
outs
cs
repz
or
outs
leave
jl
test
xchg
xor
mov
les
jno
fdivr
adc
pop
jge
or
adc
mov
mov
(bad)
cmps
inc
lea
cwde
xchg
jne
or
mov
ret
ror
mov
xor
test
inc
mov
nop
inc
shl
(bad)
mov
cmp
in
pushf
add
mov
mov
aas
mov
test
loopne
and
xchg
or
ret
dec
xor
out
pop
xor
jne
jns
add
mov
mov
repz
or
(bad)
js
cmc
push
push
leave
adc
mov
lock
rcl
leave
aaa
add
lea
mov
(bad)
cmc
movs
sbb
mov
and
aaa
jne
adc
mov
fmulp
sub
and
push
mov
jns
popa
les
enter
cmp
iret
pop
fnstenv
xor
stc
sub
cmp
mov
add
add
pop
mov
dec
pop
iret
loopne
jp
pop
loop
fst
ins
sub
push
and
lahf
mov
int
sti
and
lds
scas
es
jp
and
mov
cmc
retf
xchg
push
pusha
adc
shl
aam
aaa
jg
jecxz
push
aas
adc
mov
(bad)
clc
mov
push
dec
mov
pmullw
mov
call
mov
mov
es
fdivr
or
inc
or
push
out
mov
mov
dec
stc
in
push
cmp
pop
dec
mov
sar
push
pop
out
jmp
outs
xchg
mov
(bad)
jmp
loopne
dec
les
or
push
icebp
out
cmc
jle
mov
mov
(bad)
ins
std
(bad)
sbb
repnz
xlat
out
je
jbe
(bad)
leave
jns
xchg
mov
jmp
fst
outs
mov
rol
sub
cmp
loope
mov
cmp
mov
mov
loop
jmp
mov
mov
test
pop
pop
push
mov
popa
pop
repz
(bad)
hlt
adc
ins
jo
and
fisubr
(bad)
jbe
adc
pop
mov
push
add
sbb
adc
movs
pop
mov
pop
push
push
xchg
retf
shl
cmp
push
mov
sbb
push
cmps
repnz
call
div
cmp
ins
cmp
hlt
sbb
shl
xchg
sbb
sbb
inc
frstor
fidivr
(bad)
and
pop
mov
jecxz
sub
cld
or
test
pop
test
out
fnsave
xchg
out
int3
adc
pusha
mov
int
push
or
inc
out
cdq
imul
daa
push
jb
add
sbb
cdq
(bad)
pop
inc
sub
shl
push
push
or
inc
jne
mov
fldcw
or
and
push
test
loopne
xor
js
clc
push
scas
push
pop
jae
xor
xlat
xchg
clc
pop
cdq
xor
(bad)
out
ins
or
pop
inc
int3
xor
push
cmc
in
fdivr
outs
sbb
lods
hlt
push
aaa
ror
mov
inc
ja
xchg
pop
inc
imul
inc
xchg
mov
mov
out
cmp
gs
jle
cmps
and
or
das
stc
ror
retf
xchg
repnz
push
fld
xlat
push
movs
sbb
stos
into
loopne
add
aaa
fisub
cmp
or
cwde
idiv
push
shl
test
and
xchg
push
or
jns
inc
retf
outs
jg
imul
mov
or
arpl
add
xchg
push
scas
inc
dec
nop
inc
aam
mov
pushf
movs
add
outs
add
loop
loope
mov
cld
add
jbe
cs
xchg
ins
inc
mov
leave
jg
clc
movs
jge
inc
sbb
ins
lahf
jo
ret
xchg
cwde
pop
sbb
aam
xorps
or
jmp
dec
mov
out
cmp
sub
push
mov
or
push
jmp
movs
jge
push
mov
push
pop
jp
out
ds
lahf
push
fsubr
pop
or
add
mov
jl
or
cmp
mov
nop
mov
mov
aam
sbb
ds
mov
test
inc
sbb
gs
js
and
sti
dec
mov
ja
and
test
call
mov
push
gs
push
mov
loop
jmp
test
mov
pushf
lods
cmp
in
repz
jbe
add
(bad)
lea
sar
fidiv
iret
jb
mov
fld
push
test
mov
arpl
mov
call
pop
sbb
sub
jns
es
cs
cmp
shl
and
jge
fst
mov
fild
jnp
outs
adc
and
shl
mov
pop
ret
xchg
or
add
test
sbb
push
sub
jno
pop
mov
xchg
sub
sub
xchg
div
repnz
and
jle
mov
repnz
inc
push
(bad)
cmc
jb
jne
fwait
sub
mov
or
fisub
data16
sub
mov
mov
lds
cmps
scas
dec
gs
div
jo
adc
sub
xor
mov
mov
xchg
ja
cmp
inc
xchg
das
imul
push
aas
(bad)
cmp
and
sbb
repnz
jg
lahf
and
scas
fs
cmp
loop
sub
adc
stos
or
push
pop
pop
mov
icebp
jmp
jns
xchg
fs
xchg
mov
es
and
push
sbb
in
pop
fnstcw
(bad)
or
adc
(bad)
adc
addr16
sub
adc
js
mov
ret
adc
adc
pop
xchg
xchg
mov
inc
sub
cmp
mov
cmp
(bad)
adc
mov
out
pop
sti
pop
mov
push
jl
aas
jg
add
sbb
adc
cdq
mov
lods
jnp
add
bnd
imul
jmp
and
mov
cmps
mov
push
in
cmp
jmp
lds
mov
inc
test
ss
cld
(bad)
sbb
dec
stos
inc
fidivr
fdivr
dec
pop
(bad)
dec
(bad)
adc
pop
js
sbb
add
data16
adc
push
and
jno
dec
push
xor
add
ss
sbb
push
test
push
mov
jns
inc
outs
adc
fadd
xchg
cmps
and
aam
retf
mov
jmp
data16
adc
scas
movs
(bad)
dec
pop
and
dec
xchg
aas
sub
cmp
and
(bad)
cmps
cmp
mov
les
(bad)
out
jg
clc
xchg
mov
ret
mov
cmps
jo
sub
cli
cdq
js
or
gs
jle
mov
nop
push
mov
xor
xor
add
adc
test
fisttp
jecxz
inc
outs
icebp
mov
(bad)
pushf
xor
les
pop
jo
inc
test
mov
scas
jns
lds
xor
lods
aam
iret
dec
mov
je
int3
mov
out
scas
inc
shl
adc
ins
ja
or
ret
inc
lea
imul
jmp
push
enter
mov
fcmovne
arpl
xor
int3
and
sub
and
repz
sbb
mov
and
(bad)
aas
jecxz
dec
arpl
bound
addr16
jb
pop
pop
nop
sbb
pop
push
in
sub
cli
adc
pop
imul
dec
sbb
icebp
ja
outs
(bad)
jmp
jp
aam
jns
sahf
adc
out
hlt
aam
or
xchg
aam
ins
add
not
add
mov
cmc
(bad)
in
add
inc
outs
popf
dec
int3
push
cmps
cmc
add
iret
out
pop
sub
pop
mov
hlt
xor
ror
sub
sub
inc
mov
test
push
aaa
sbb
push
dec
shl
sub
add
(bad)
imul
push
adc
cs
pop
adc
fidiv
or
pop
fdiv
adc
push
cmp
stos
mov
jp
(bad)
repz
add
pusha
ja
adc
pop
scas
and
jbe
xlat
and
sub
dec
aaa
xor
xchg
add
ret
jbe
ror
and
inc
out
sub
adc
jne
(bad)
hlt
popa
push
lods
push
repz
jns
aas
into
jp
ret
push
cmp
or
sti
sbb
aam
and
sar
cmp
sub
call
stos
xchg
retf
loop
shl
pop
imul
out
jae
lahf
push
push
cmp
and
add
dec
imul
push
(bad)
gs
mov
sub
leave
(bad)
xor
xchg
popa
pop
dec
mov
aaa
aad
fimul
and
call
push
and
mov
cs
xor
dec
icebp
jge
sub
retf
jp
adc
sti
not
and
sbb
sbb
add
sahf
aas
dec
pop
xor
or
mov
pop
nop
inc
inc
jne
sbb
push
sub
mov
inc
mov
int3
jecxz
adc
les
dec
mov
rcl
jecxz
lahf
sub
inc
icebp
sub
jp
stc
mov
js
addr16
std
pusha
add
data16
push
xchg
mov
jecxz
inc
outs
or
cmp
sar
js
mov
sub
push
xchg
pop
xchg
fwait
cmp
mov
adc
xchg
test
jmp
push
xchg
and
xchg
clc
and
lods
inc
sbb
shl
fcomp
ror
mov
xor
xchg
jbe
cmp
sbb
xchg
sbb
mov
pop
out
mul
push
(bad)
mov
div
adc
cmp
add
or
pop
leave
mov
cwde
scas
push
addr16
nop
sbb
xlat
arpl
int3
and
aaa
movs
cmp
dec
push
popf
cmp
adc
inc
push
sbb
sub
or
cli
call
and
ss
jbe
cmps
xor
mov
ret
fiadd
sub
pushf
xor
jp
mov
fistp
fisttp
daa
lods
(bad)
(bad)
adc
add
add
retf
pop
aaa
rol
push
ror
popf
clc
ja
cli
mov
jge
(bad)
repnz
add
push
mov
pop
dec
cmp
sbb
mov
inc
cmp
loope
sbb
dec
mov
push
(bad)
sbb
daa
ins
push
sbb
lods
mov
push
add
nop
add
sbb
div
cmp
mov
or
jp
inc
and
fdiv
mov
pusha
outs
jnp
inc
mov
and
and
push
shl
bound
mov
cmp
xor
add
fwait
mov
xor
hlt
push
ret
fldenv
out
push
imul
mov
es
pop
push
aaa
push
sub
dec
(bad)
xchg
xchg
push
es
mov
jbe
mov
popa
enter
outs
jecxz
jb
ficom
into
pop
lahf
enter
pop
shl
fmul
and
cdq
int
nop
(bad)
jae
jo
daa
lods
fisttp
add
xlat
cmps
fiadd
and
sub
xor
cmp
(bad)
aam
std
dec
sub
xchg
lahf
clc
mov
int
cmp
or
jb
xlat
xchg
mov
fwait
pop
out
shl
out
pop
sub
add
push
int
jbe
and
loopne
cdq
rcl
stc
mov
sub
inc
fsin
sbb
fldcw
xchg
scas
stc
fdiv
inc
cmp
jg
sub
addr16
nop
jnp
mov
push
hlt
sahf
mov
inc
and
jecxz
mov
fidiv
retf
xchg
in
fdivr
jg
sub
inc
jnp
pop
push
dec
mov
mov
mov
mov
stos
mov
cmp
aad
and
les
adc
sbb
sbb
(bad)
mov
and
mov
ins
xchg
mov
fldcw
loopne
sbb
jle
and
dec
imul
pop
mov
xchg
inc
movs
ret
xor
xchg
xor
(bad)
push
dec
mov
sub
mov
cmp
jmp
nop
or
sub
ins
mov
dec
cmp
lahf
fld
xor
dec
xlat
add
clc
and
test
jne
inc
mov
and
jne
push
push
mov
adc
retf
scas
(bad)
pop
dec
adc
rcl
cmp
and
jbe
cmp
fwait
mov
bnd
xchg
mov
(bad)
pusha
ja
and
push
jmp
add
stc
dec
mov
xor
inc
or
inc
sub
xchg
(bad)
hlt
(bad)
aam
fnstenv
lea
rcl
mov
fidivr
pop
test
test
mov
jge
aad
(bad)
push
cli
aas
cmps
lods
xchg
pop
outs
sbb
inc
inc
nop
out
push
call
and
push
mov
bound
add
adc
adc
inc
fdivrp
std
inc
fwait
mov
xchg
stos
mov
ficomp
dec
pop
xchg
pusha
or
loope
shl
leave
pusha
rcl
outs
pop
loope
inc
ja
mov
sbb
pop
outs
sub
sub
cmp
in
lods
cmp
xor
jo
dec
jmp
shr
fst
cmps
jmp
dec
out
and
scas
xor
cmps
out
push
adc
mov
sar
mov
adc
arpl
and
and
adc
sbb
ret
add
test
outs
sub
sub
lock
arpl
xchg
scas
add
jmp
push
gs
cmp
outs
test
int3
dec
loop
aaa
(bad)
nop
stos
mov
pop
ins
(bad)
xor
int
sti
and
dec
popf
scas
outs
arpl
add
dec
leave
or
xlat
jb
daa
pop
aas
inc
fstp
scas
push
pop
test
popa
and
jmp
xor
cwde
imul
mov
adc
inc
pop
shl
in
xor
lods
(bad)
xor
movs
imul
add
jmp
sahf
xor
es
jnp
lock
mov
inc
push
mov
pushf
mov
jg
aad
fild
ficomp
scas
movs
cmp
mov
push
jb
cs
mov
outs
movs
add
icebp
cmp
test
ficomp
stos
push
jle
popa
call
xchg
pop
cmp
mov
test
cmps
sub
cmps
sbb
sub
test
ins
pop
daa
into
inc
rcr
mov
or
mov
outs
arpl
xor
pop
or
data16
movs
cmp
xor
jne
xchg
pop
inc
fst
dec
add
hlt
adc
cmp
jmp
cmp
cmp
mov
nop
mov
jnp
xor
test
mov
dec
sbb
push
lods
xor
(bad)
dec
push
ds
jp
nop
enter
inc
stos
hlt
shl
fnstcw
cmps
pop
jnp
jne
jmp
leave
ds
dec
cmp
jecxz
fnstcw
test
xor
cmp
imul
lea
mov
cmps
ror
xor
ds
mov
leave
push
cmp
cs
outs
call
xchg
stc
shl
hlt
pop
push
js
mov
inc
(bad)
sub
inc
mov
xchg
repz
and
jo
cli
xor
neg
(bad)
jge
xchg
mov
sub
xchg
jmp
ret
pop
sub
in
sar
xlat
dec
mov
sub
(bad)
cmps
push
mov
add
ins
adc
lods
clc
cmp
scas
and
cmp
pop
adc
mov
es
dec
ds
inc
out
into
xchg
imul
inc
or
xor
fistp
cmp
int
rcl
rcl
lock
or
mov
dec
inc
and
test
xor
call
mov
and
ss
(bad)
mov
add
jne
push
cli
stos
push
shl
cmp
mov
xor
aad
jecxz
xor
scas
fstp
or
int
xlat
sahf
fistp
jg
sub
in
push
push
mov
jg
ins
fs
sub
sub
pop
mov
cmp
and
pop
cs
or
mov
stos
or
and
mov
and
pop
dec
sub
mov
test
pop
xchg
mov
push
mov
jb
stc
pop
add
mov
pop
xchg
jge
add
mov
pop
mov
pusha
sar
xchg
push
repz
lods
sbb
int3
loopne
jge
mov
mov
popa
retf
cmps
cwde
loope
jbe
cmps
stc
sub
or
fimul
jg
iret
fdivr
adc
icebp
mov
icebp
push
or
sbb
in
into
xlat
scas
mov
xchg
into
sub
push
mov
loope
mov
or
iret
mov
in
outs
sub
(bad)
int3
mov
pop
inc
mov
out
mov
not
movs
scas
fdiv
inc
mov
in
jmp
rcl
cmp
dec
pop
xchg
sbb
in
sti
xchg
and
inc
fstp
xor
int3
(bad)
jnp
(bad)
push
pop
mov
icebp
ss
and
fimul
neg
push
xchg
inc
jmp
mov
push
add
dec
fiadd
mov
dec
dec
rcl
add
push
pop
fdivrp
fadd
int3
clc
ror
jns
leave
push
into
jmp
dec
pop
inc
nop
mov
cdq
aas
mov
sub
cmp
push
and
add
and
scas
ins
out
loopne
loope
aam
(bad)
repnz
push
shr
pop
int
(bad)
cmp
movs
idiv
cmps
popa
jo
push
retf
ffree
mov
mov
in
add
stc
fwait
push
cmc
or
xchg
sub
out
xchg
pop
les
adc
cmp
jg
retf
fs
inc
add
movs
int
test
retf
popf
pusha
cmps
inc
loopne
into
iret
and
xchg
rcr
inc
rol
test
fistp
or
push
cmp
sbb
cwde
pop
shr
clc
out
mov
and
xor
xchg
mov
int3
or
call
push
add
xchg
pop
jl
xchg
aad
inc
(bad)
out
cdq
sub
ficomp
rcl
pusha
cwde
mov
mov
add
and
ret
(bad)
call
test
sbb
push
mov
jmp
xchg
repnz
push
sbb
in
das
lods
push
push
mov
cmps
or
lods
mov
cmp
mov
mov
loope
push
mov
dec
mov
call
adc
mov
xlat
sub
adc
mov
mov
aad
inc
int3
enter
movs
fs
retf
ins
jne
xchg
mov
loope
in
jg
mov
jecxz
add
and
xor
cmp
add
repnz
loope
loope
mov
shl
lock
cdq
mov
jne
stc
movs
push
loope
inc
repnz
out
jp
sar
dec
fwait
pop
adc
out
push
push
popf
lea
icebp
in
dec
sti
pop
xchg
sub
jne
dec
fld
pop
xor
mov
dec
retf
mov
aam
and
test
shl
out
hlt
xchg
add
xor
cmc
stos
sbb
out
dec
push
push
stos
jbe
and
nop
sbb
inc
push
nop
pop
ins
rol
fcom
push
mov
es
push
scas
mov
(bad)
hlt
in
div
int3
retf
call
xlat
nop
das
dec
sti
pop
sub
dec
les
cmp
leave
adc
mov
sar
push
sbb
jecxz
sbb
cmc
or
xchg
js
and
jmp
cli
or
aaa
popa
enter
cmp
mov
dec
inc
xlat
in
sbb
fs
nop
jge
push
mov
pop
mov
nop
movs
das
push
frstor
enter
inc
or
pop
inc
mov
mov
popa
jbe
jmp
mov
retf
mov
fdivr
inc
push
mov
int
add
cmp
shl
sti
lods
mov
out
mov
push
add
dec
aam
ja
lods
fwait
repnz
sub
(bad)
std
dec
xor
xchg
mov
cmp
cmc
push
or
outs
push
push
scas
pop
mov
jl
mov
inc
ins
data16
dec
dec
lock
or
cdq
sbb
sub
hlt
outs
or
enter
test
ins
movs
add
inc
clc
mov
pop
mov
sti
ret
push
loope
xchg
mov
pop
add
jp
inc
imul
cmps
dec
sbb
test
mov
dec
lods
push
cmp
cmp
cmp
ror
pop
and
fwait
jbe
loopne
fdiv
push
loope
inc
mov
out
mov
push
das
inc
cmp
mov
psadbw
jnp
ja
pop
(bad)
ror
mov
movs
rol
mov
pop
je
and
not
dec
or
dec
jecxz
sbb
add
ss
jnp
jg
mov
sub
ja
push
xchg
ret
rsm
sub
daa
fs
inc
mov
lods
add
pop
adc
and
or
pop
xor
mov
fstp
xchg
push
xchg
add
shl
add
push
or
and
gs
ja
dec
mov
push
mov
lods
cs
mov
jp
push
mov
xor
adc
sub
push
jge
rdmsr
inc
push
cmc
mov
xchg
sbb
adc
mov
int3
sti
jb
jno
test
call
sub
add
out
pop
fwait
call
pop
dec
push
es
sbb
pop
xchg
and
mov
sbb
repz
inc
iret
jmp
test
mov
aas
jmp
mov
mov
(bad)
les
leave
xor
fistp
or
cs
mov
adc
call
imul
jno
mov
fadd
rol
mov
mov
int3
xor
aas
lds
add
pop
pop
adc
pop
push
aad
arpl
mov
and
popf
dec
mov
cmp
mov
jecxz
idiv
push
pop
arpl
fdivr
movs
jmp
clc
scas
mov
sbb
xor
pushf
push
enter
fsub
popa
mov
pushf
bnd
ins
test
mov
lods
(bad)
dec
inc
mov
pop
cwde
and
mov
test
aaa
repz
aad
test
push
fdiv
mov
outs
adc
inc
cli
aam
cmps
mov
push
addr16
les
imul
mov
adc
daa
mov
push
sbb
pushf
popf
dec
jmp
add
mov
push
ret
loope
adc
mov
and
push
cmps
xchg
inc
inc
push
mov
je
mov
push
movs
pop
mov
test
aaa
in
arpl
sub
imul
jg
sbb
mov
sbb
xchg
in
inc
adc
retf
or
in
in
fwait
retf
and
adc
(bad)
icebp
jns
pop
pop
dec
cmps
xchg
in
jge
into
mov
push
mov
push
icebp
adc
iret
in
cs
(bad)
clc
lea
js
popa
mov
push
les
inc
add
mov
sbb
stos
test
lods
enter
mov
jg
mov
in
cmp
int3
xchg
push
daa
inc
stos
sub
mov
mov
stos
jle
pop
les
mov
addr16
test
mov
std
or
loopne
outs
push
jno
mov
inc
push
xlat
stos
outs
xchg
dec
push
ins
xor
neg
cmp
cdq
lds
cmp
lock
cmp
push
inc
movs
sar
test
xor
add
jno
push
fnstsw
mov
sub
test
push
imul
cli
push
repz
jl
push
(bad)
mov
add
dec
push
mov
sbb
aaa
sbb
push
mov
dec
jbe
inc
shl
sub
movs
jno
fs
cmp
dec
inc
xor
ds
push
sub
jnp
xor
push
pop
mov
add
popf
pusha
jp
cmp
in
mov
scas
mov
push
mov
je
dec
mov
es
icebp
int3
push
mov
xor
and
jmp
int3
push
fisub
shr
or
pop
jle
fild
mov
cmp
jne
cmp
ja
inc
inc
fcmovne
pusha
cs
stos
xlat
push
xchg
fmul
je
mov
jecxz
xchg
leave
jae
(bad)
outs
mov
mov
stos
push
jne
mov
jae
mov
xchg
imul
jl
test
mov
cmp
cmc
xchg
lock
jns
sbb
push
mov
sub
int3
movs
in
jno
loop
lock
and
pop
adc
fwait
xchg
lods
mov
lds
fwait
in
adc
cmc
mov
test
add
into
add
mov
lahf
cmp
inc
nop
xchg
or
cmp
jl
mov
mov
movs
mov
xchg
adc
ja
dec
test
add
mov
repz
inc
cmc
jno
test
jbe
retf
ja
and
lods
clc
pop
and
je
pop
sbb
cmp
out
icebp
scas
adc
fisttp
(bad)
aas
xchg
or
in
mov
(bad)
addr16
adc
jne
add
xor
and
fldcw
pop
lea
mov
rol
push
rcl
stc
mov
in
xchg
inc
imul
outs
sti
ja
xchg
and
mov
(bad)
leave
lds
ins
lods
dec
cmp
arpl
xchg
cmp
dec
fild
sbb
pop
sbb
je
dec
jbe
jmp
rcl
cvtps2pi
inc
jl
or
mov
xlat
mov
jbe
gs
sub
addr16
jne
xchg
(bad)
outs
cmps
ds
pop
push
mov
jo
daa
fistp
push
(bad)
mov
cli
jge
push
sub
pusha
inc
fs
iret
js
lds
xor
or
std
das
jb
sar
hlt
sbb
pusha
add
loop
fild
xchg
mov
pop
or
(bad)
push
sar
pop
mov
scas
(bad)
fst
or
jno
sub
cmp
sub
mov
lods
mov
in
mov
test
in
aam
sub
jecxz
outs
das
xchg
xor
mov
sbb
cmp
lea
cmp
jo
pop
and
push
pop
shl
mov
mov
or
inc
leave
xor
and
pop
shr
xor
out
add
ret
pop
lahf
xor
sub
sbb
jmp
xchg
into
fwait
wbinvd
out
in
or
popf
and
cwde
ficomp
xor
ins
(bad)
pop
adc
int
mov
or
inc
ds
push
or
fsub
repnz
xchg
inc
ins
bound
add
push
cmp
inc
imul
psubd
push
adc
jmp
daa
cmp
jp
arpl
inc
fcomi
ins
ds
jae
sbb
or
sbb
mov
pop
and
in
cmp
sbb
jbe
and
cld
out
inc
jne
pushf
ret
mov
ficom
and
xchg
outs
jnp
int3
jge
movs
shr
xchg
into
mov
bound
jo
sti
in
icebp
push
in
test
xchg
sub
fwait
das
les
imul
pop
mov
add
pop
mov
scas
dec
cs
ret
adc
push
(bad)
(bad)
xor
test
ins
in
(bad)
adc
int
cmp
mov
out
mov
add
fwait
add
push
xchg
ja
inc
push
js
fdivp
cmp
mov
push
ss
retf
add
mov
(bad)
loopne
jnp
adc
jecxz
pushf
fs
jne
xchg
js
adc
(bad)
sti
cdq
dec
test
mov
stos
ss
nop
sub
aam
outs
aaa
cmp
mov
push
or
adc
or
lods
inc
aam
or
pop
xchg
bound
out
jb
popf
adc
mov
in
cwde
outs
push
sub
push
xor
ja
int3
push
iret
inc
jmp
adc
outs
imul
dec
jecxz
sbb
enter
push
(bad)
aaa
rcl
push
popf
inc
jo
call
push
in
hlt
in
push
scas
lods
or
pop
sti
dec
add
mov
aas
mov
inc
mov
mov
mov
sub
ins
pop
or
and
lods
sub
fcom
loopne
push
std
push
push
push
test
fsubrp
sub
call
xor
pop
outs
push
xlat
mul
movs
lods
mov
cmp
cld
mov
test
loopne
xchg
push
push
repnz
cld
outs
cmp
add
push
scas
jp
aaa
(bad)
xchg
cmp
ss
xor
pop
outs
daa
retf
(bad)
dec
inc
out
jle
cmp
out
or
cmp
fimul
xchg
push
sbb
sub
and
adc
in
fistp
in
imul
popa
aas
repnz
aas
push
inc
push
mov
pop
fimul
(bad)
mov
ins
aad
iret
ret
sbb
out
shl
xchg
inc
xor
dec
cmps
outs
pop
sbb
cmp
xor
mov
cmp
imul
in
inc
mov
pop
or
daa
stos
movs
(bad)
push
aas
add
iret
les
pop
pop
jo
stos
shr
pop
cmp
mov
inc
call
(bad)
shl
adc
sub
sbb
mov
mov
mov
dec
inc
test
sub
imul
bnd
nop
pop
pop
int3
imul
hlt
sti
sti
xor
sahf
or
arpl
dec
mov
xchg
jb
ins
enter
mov
mov
add
dec
movs
(bad)
cli
rcr
ror
bound
jbe
push
jg
shl
and
sti
or
xchg
cmp
adc
xchg
stos
outs
mov
outs
dec
inc
iret
lods
ja
sbb
retf
ror
jno
dec
add
rcr
in
mov
clc
shl
xchg
call
dec
or
call
int3
stos
cmc
and
or
or
xor
cmp
xor
inc
xchg
loope
mov
aas
cmp
retf
pop
push
pusha
(bad)
jb
jb
xlat
xor
retf
xchg
inc
lods
mov
vmread
out
dec
mov
test
movs
pop
inc
push
push
and
repz
sub
or
ds
inc
sub
or
inc
push
into
pop
mov
mov
ror
cmp
or
fild
hlt
jle
jae
cdq
stos
fsubr
cmp
mov
fst
cmp
adc
and
xchg
pop
sbb
push
push
ficomp
xor
aad
ins
rcr
adc
out
mov
mul
cvttps2pi
cdq
xchg
clc
mov
sbb
xchg
sbb
and
enter
stc
ficom
popa
fimul
scas
push
xor
sbb
movs
jns
out
popa
add
mov
sub
mov
(bad)
retf
fcom
pop
lahf
mov
xchg
lods
lods
fild
pmulhw
inc
mov
xlat
lahf
dec
push
aas
bound
push
and
popf
mov
pusha
arpl
pop
loop
and
scas
pop
mov
stos
in
ret
dec
faddp
imul
mov
mov
pop
mov
imul
mov
shr
rcl
in
fadd
pop
xchg
adc
mov
clc
mov
sbb
and
outs
pop
add
pop
cmps
push
stos
xlat
xchg
shr
or
fsubp
pop
in
pop
mov
mov
retf
xor
xor
test
aaa
mov
(bad)
sub
pop
dec
mov
push
mov
fnstenv
addr16
scas
(bad)
fild
push
sub
sbb
out
mov
out
pop
mov
mov
jbe
outs
or
popa
loopne
add
jnp
mov
aam
push
mov
xor
sub
lea
les
xor
mov
loopne
xlat
dec
pop
mov
push
fsubrp
cmp
fnstcw
inc
popa
imul
jnp
lods
jo
psubq
mov
fistp
shr
xchg
call
or
jns
or
test
sbb
jmp
fs
imul
pop
xchg
repnz
imul
pop
in
enter
scas
out
mov
and
dec
popf
sbb
jge
cmc
imul
(bad)
loop
push
fadd
jecxz
push
jl
idiv
(bad)
dec
jl
add
adc
popa
jae
nop
jnp
fld
jnp
sbb
aas
retf
dec
pushf
in
es
movs
das
js
push
cmp
nop
inc
mov
push
gs
imul
push
xor
pushf
jno
add
inc
(bad)
cmp
lods
mov
pop
outs
in
jmp
pop
in
aaa
pop
(bad)
pop
inc
call
sub
ret
dec
inc
sbb
dec
nop
cmp
imul
in
repnz
jbe
test
cli
mov
stos
das
call
dec
mov
xor
xchg
dec
inc
xchg
cmp
ins
outs
inc
mov
sub
(bad)
sub
push
fs
dec
inc
ja
aas
stc
or
call
leave
pusha
sbb
lods
lds
sub
mov
cmps
test
dec
xor
jmp
or
mov
add
fidivr
out
xchg
adc
xchg
inc
std
xor
scas
and
sbb
(bad)
mov
lds
add
stc
call
cmp
or
fimul
pop
retf
fwait
popa
aam
push
in
push
ins
mov
or
sub
xlat
xchg
xor
es
mov
outs
inc
jnp
pop
xchg
pop
fistp
sbb
jnp
sub
lea
or
mov
or
into
cmp
jns
push
test
mov
adc
sbb
mov
leave
xor
rol
cmp
mov
jge
or
inc
jo
pop
cdq
gs
inc
(bad)
aaa
ja
call
jae
not
push
xor
icebp
(bad)
xor
mov
fwait
jne
cld
mov
sub
mov
test
mov
xchg
lea
sub
adc
nop
pop
popa
cmp
jae
jne
and
xlat
ins
sub
loope
or
or
cmp
out
cmc
cdq
fld
dec
mov
into
adc
jo
es
hlt
mov
in
ins
sbb
les
in
pop
push
cs
and
mov
sbb
jle
movs
push
rcr
push
jp
mov
sahf
stc
cwde
xor
pop
fadd
retf
aaa
mov
and
xor
xor
sbb
add
(bad)
call
retf
mov
fisubr
(bad)
sub
mov
bound
inc
std
xchg
adc
push
cmp
mov
jo
pop
lods
sbb
cmp
xor
inc
leave
dec
mov
dec
out
dec
pop
mov
jne
mov
(bad)
sbb
xchg
in
and
nop
(bad)
aad
pop
or
jae
jb
pop
cld
nop
push
scas
adc
dec
xor
inc
jnp
mov
(bad)
lds
jmp
outs
pop
out
in
sub
adc
(bad)
retf
push
jno
mov
adc
xchg
jecxz
lock
cli
and
out
inc
imul
loope
mov
sbb
push
shr
pop
push
pop
cs
mov
pop
mov
inc
sub
dec
jl
cmps
and
cld
pop
mov
ins
in
aas
jl
and
(bad)
mov
mov
mov
bound
repz
or
jl
rol
push
outs
pop
ins
xor
(bad)
lock
lods
xchg
cmps
bound
stos
test
imul
adc
pop
xor
pop
pop
xchg
dec
sti
inc
int
xchg
xchg
pusha
mov
push
aas
push
add
int
movs
jmp
mov
mov
pop
ja
jb
push
xor
das
jno
sti
rcr
shr
sahf
push
mov
fist
pop
mov
lahf
repz
sahf
cmp
jg
push
cld
lods
pop
arpl
cwde
test
mov
daa
ins
adc
xchg
fwait
sbb
jp
fwait
daa
jmp
in
movs
rcr
hlt
and
mov
cmps
pop
or
sbb
scas
imul
icebp
(bad)
jne
test
jg
into
cld
jnp
rcr
xchg
das
in
inc
cmp
je
push
(bad)
xlat
jecxz
push
clc
inc
addr16
fmul
idiv
xchg
(bad)
icebp
pop
ja
dec
out
adc
popa
inc
dec
test
and
(bad)
lods
sbb
(bad)
sti
hlt
stc
inc
jbe
out
adc
push
jmp
xor
sub
mov
aam
sub
inc
inc
sti
aad
rcr
lods
and
or
out
std
out
fdiv
test
xchg
in
int
dec
xchg
test
push
daa
and
xor
popf
cmps
mov
dec
in
push
outs
xchg
adc
cmp
fndisi(8087
mov
pop
dec
pop
sub
jle
cli
loop
loope
int
mov
pop
into
push
dec
std
push
nop
adc
cs
jb
add
jl
xlat
sbb
dec
pop
mov
rcr
adc
shl
xor
sbb
and
inc
dec
pop
xor
xor
xchg
cmps
push
iret
sbb
or
pop
mov
add
pop
scas
pop
and
lds
outs
adc
dec
jl
stos
jl
jb
loope
xor
mov
out
adc
std
mov
push
fdiv
jmp
mov
cmp
psrad
and
call
and
xchg
jmp
nop
test
shl
pop
sbb
dec
movs
inc
aam
stos
test
jmp
lods
cmp
cmp
push
aaa
enter
inc
sub
test
les
(bad)
pop
push
rcr
ret
fidivr
mov
xchg
pusha
repnz
leave
clc
icebp
adc
fwait
inc
xchg
sbb
dec
icebp
jmp
imul
sub
scas
mov
ficomp
pop
std
inc
add
pop
into
jl
sub
ins
push
arpl
push
mov
outs
or
test
pop
or
cwde
cmp
jecxz
dec
ins
shr
popa
(bad)
cwde
cwde
loopne
jo
sti
leave
fwait
adc
mov
ds
adc
push
scas
xchg
push
stos
pop
repnz
pop
sbb
fidivr
ins
push
call
lds
push
lods
mov
(bad)
in
cdq
(bad)
and
xchg
mov
std
and
jno
add
arpl
and
add
ds
inc
pop
out
cmp
sbb
in
je
push
jp
inc
sub
dec
jno
fmul
jae
gs
sbb
push
lods
inc
adc
sbb
in
mov
enter
cmps
add
mov
push
sub
push
cmp
pop
loopne
int3
dec
dec
sub
(bad)
xor
mov
aam
jmp
aam
jo
inc
jb
and
ror
imul
adc
lods
call
dec
ins
jns
out
inc
add
cs
das
dec
jnp
movs
mov
dec
or
shl
and
in
lahf
lods
retf
pop
sub
retf
sub
mov
stc
cmp
jmp
test
js
lods
out
jbe
(bad)
hlt
cmp
mov
push
in
repz
push
inc
push
imul
pop
lods
cmps
dec
jne
pop
xchg
add
xor
push
jg
jo
(bad)
int3
or
ret
jae
mov
xchg
(bad)
call
sbb
pusha
push
adc
pop
adc
addr16
(bad)
popfw
or
pop
mov
pop
xchg
int3
faddp
cmp
sub
test
(bad)
adc
les
add
lea
jl
jmp
ins
push
hlt
fmul
adc
test
xor
in
lods
pop
inc
cmp
test
sbb
pop
(bad)
pop
pop
imul
je
dec
stos
cwde
dec
and
mov
add
jecxz
and
xor
add
mov
cmps
cwde
out
mov
push
inc
jecxz
add
mov
sbb
dec
and
push
xchg
scas
sahf
aas
pop
popf
and
lock
out
outs
and
dec
lds
icebp
lahf
ins
cmp
movs
xlat
and
or
clc
sar
(bad)
ret
mov
idiv
mov
cmps
das
dec
xor
pop
and
xor
stc
jbe
lock
jl
mov
or
movs
lods
jmp
xchg
mov
sbb
sub
in
jbe
sub
jo
lods
pop
in
cmc
or
xchg
cmp
xor
xchg
cmps
or
cmp
pop
popa
mov
xchg
xor
jp
movs
add
push
jbe
movs
mov
mov
outs
xor
cmps
cmps
aad
retf
xchg
sahf
pop
data16
imul
das
mov
xor
loop
mov
push
(bad)
xor
dec
cs
fdivrp
cmp
jle
mov
mov
mov
dec
pushf
mov
xor
(bad)
loopne
cmp
dec
(bad)
ins
cmp
test
cs
jno
sbb
fucompp
cmp
jns
xor
and
mov
or
cli
and
cmp
xor
sub
retf
pop
add
pop
shl
out
dec
sub
out
stos
mov
jecxz
inc
idiv
add
mov
call
jmp
xor
clc
sti
and
push
push
pop
cmp
mov
shl
jl
mov
aaa
mov
cmp
mov
ds
out
dec
sub
sbb
or
adc
xchg
loope
mov
iret
mov
fisttp
jnp
add
ins
push
jno
mov
cmp
mov
xchg
xchg
and
mov
inc
inc
xor
lods
ret
xchg
jno
dec
je
retf
adc
arpl
pop
fwait
sub
bound
test
sbb
sub
movs
pop
fwait
sub
and
inc
(bad)
sar
aam
adc
cmps
mov
dec
fiadd
ins
adc
jmp
xchg
xor
ret
inc
mov
xor
int3
test
scas
jmp
xchg
dec
jge
sub
dec
je
mov
cmp
pop
js
add
sahf
mov
aaa
in
jl
test
ror
xchg
mov
add
shl
mov
sahf
add
xor
fistp
into
ja
cmp
jbe
cmc
xchg
lds
out
loopne
mov
xor
and
pushf
adc
cmc
jns
in
pop
mov
sbb
sbb
int
shl
movs
inc
and
std
ss
mov
xor
xor
mov
out
pop
jns
leave
in
pop
add
pop
inc
mov
cs
jge
inc
dec
pop
jmp
sbb
xchg
in
repnz
outs
push
leave
popa
test
fidivr
push
sbb
jecxz
cdq
(bad)
cwde
sub
fdivr
and
dec
cdq
mov
cmp
(bad)
retf
mov
fsubr
iret
ins
or
(bad)
or
mov
out
jb
push
enter
movs
adc
sub
or
mov
loopne
xor
outs
jecxz
fwait
and
js
and
or
dec
in
sub
fdivr
loop
mov
fnop
imul
pop
or
dec
adc
inc
mov
(bad)
call
repnz
rol
dec
push
dec
fwait
je
(bad)
jo
fidivr
mov
movs
imul
imul
(bad)
xor
gs
xchg
in
pop
rcl
inc
fsub
adc
jecxz
sub
cli
scas
nop
inc
jge
mov
popa
xor
cmp
jp
pop
pop
push
(bad)
adc
ret
addr16
pop
inc
loop
jbe
int3
fnstcw
jmp
out
jp
es
fld
and
rcr
mov
push
pop
add
jbe
sbb
mov
push
movs
les
xchg
setg
test
push
inc
add
cmp
dec
xor
lea
in
push
scas
pop
ss
(bad)
(bad)
inc
scas
int3
pop
ins
and
mov
(bad)
mov
mov
je
add
call
(bad)
fst
jae
push
fldlg2
das
stos
stos
mov
jo
(bad)
sub
fstp
test
es
in
push
or
popa
es
sub
and
aaa
adc
movs
test
dec
cld
in
shr
pop
repz
dec
pusha
jmp
das
push
pop
dec
xchg
lods
inc
dec
dec
lds
xchg
frstor
add
retf
cmp
add
and
push
mov
je
jg
daa
test
mov
daa
pop
fnstsw
push
sahf
adc
and
pop
shr
and
fst
sub
lods
jae
call
or
(bad)
gs
jb
lock
ds
inc
pushf
lods
div
daa
ret
call
daa
cli
xchg
(bad)
sub
je
pop
jo
fwait
lock
ja
pop
jnp
arpl
dec
jbe
cdq
or
out
push
xor
pop
cwde
imul
inc
add
(bad)
fcmovb
dec
mov
sbb
jnp
aas
xor
test
push
add
(bad)
push
jbe
xrelease
inc
fisttp
pop
inc
xchg
loopne
sbb
xchg
sub
(bad)
or
or
cmc
jle
(bad)
stos
popa
sub
sbb
push
mov
dec
aas
mov
inc
lahf
jbe
pop
mov
sar
mov
or
outs
repz
scas
sub
arpl
xchg
adc
fidivr
or
pop
jl
or
dec
pop
hlt
jl
mov
push
repz
pusha
xor
xchg
push
mov
cmp
push
xor
sub
and
cs
js
sbb
sbb
(bad)
int
in
xor
in
lea
sub
add
das
enter
fsubr
xor
(bad)
call
pop
inc
xor
movs
fiadd
dec
mov
int3
movs
sbb
packssdw
(bad)
fld
mov
jg
aad
jne
dec
or
mov
fcom
or
inc
jae
imul
jbe
test
and
cmp
int
rol
dec
mov
push
inc
movntps
sbb
inc
mov
and
fistp
aam
stos
or
fisttp
xor
mov
out
xchg
and
daa
div
ins
lahf
push
cli
inc
or
mov
cmp
imul
push
add
into
jp
hlt
jmp
das
mov
into
fimul
mov
in
sbb
pop
icebp
pop
shl
and
push
push
sub
mov
repnz
stos
test
push
xchg
adc
push
div
cmp
sti
push
push
movs
and
xor
pop
imul
pop
popa
shl
xchg
arpl
mov
jp
movs
xlat
xor
xchg
xchg
cld
test
cmp
adc
dec
or
xchg
mov
(bad)
pop
std
xchg
das
cdq
retf
in
(bad)
hlt
dec
and
(bad)
paddq
in
rcl
mov
cmp
add
das
sub
lods
add
ror
and
jg
(bad)
je
shl
popa
ins
fnstcw
shl
jbe
cmc
and
inc
or
bswap
sub
repz
add
mov
push
push
add
lods
scas
push
jne
push
mov
add
sar
loopne
dec
mov
int
fwait
pop
test
mov
cmp
add
inc
or
cli
mov
retf
jne
in
(bad)
adc
sub
mov
sub
ins
sahf
call
mov
lea
scas
repnz
call
push
mov
dec
ins
fdivp
bound
or
(bad)
jecxz
sahf
pop
cs
(bad)
mov
sbb
loope
sub
iret
xchg
test
mov
fmul
dec
push
xchg
xchg
std
shl
add
pop
mov
mov
int3
scas
mov
pop
daa
and
pop
lahf
scas
call
repnz
sbb
jmp
push
iret
push
mov
adc
sub
cmp
mov
xor
cwde
cmps
add
cdq
in
mov
xchg
cwde
xor
cmp
cmp
sub
sbb
retf
adc
cdq
jns
inc
jno
mov
sbb
and
sti
adc
int3
adc
add
jl
(bad)
mov
inc
mov
test
cmp
ror
cmps
ds
sbb
mov
or
pushf
nop
sub
or
mov
test
out
xchg
add
cld
cwde
loopne
pop
sub
xchg
rcl
mov
cmp
scas
xor
pop
pop
push
ins
lock
and
inc
jnp
jnp
sar
add
test
pop
aad
loope
sar
scas
xchg
sbb
retf
mov
cwde
mov
pusha
mov
outs
mov
inc
or
fstp
out
dec
loop
or
call
dec
xchg
sub
and
mov
mov
inc
xor
dec
push
sub
ret
rol
xchg
scas
adc
in
pop
ds
pop
add
sub
(bad)
in
push
btr
pop
test
jb
jno
aaa
js
mov
cmp
mov
cmp
mov
cmps
std
cdq
add
push
mov
fist
and
gs
out
sti
mov
in
pop
jmp
pushf
mov
push
cmp
fldenv
in
jmp
jns
mov
in
aaa
jbe
mov
loope
pop
outs
jae
add
out
mov
push
jp
inc
jg
es
xchg
loope
sti
lods
cmp
and
mov
and
xor
pop
mov
scas
push
lods
mov
mov
je
scas
fiadd
mov
dec
sub
and
pop
adc
sub
sar
push
out
dec
push
pop
fidivr
add
cmps
imul
out
jnp
mov
add
loop
leave
dec
(bad)
xor
pop
xor
jmp
ins
xchg
sbb
cmp
sbb
xchg
or
dec
cmp
push
data16
cmp
mov
xor
and
xor
jecxz
dec
inc
sub
xor
add
in
js
shr
enter
jg
and
fs
call
call
test
sbb
nop
cmp
pop
mov
test
mov
push
outs
xor
xor
mov
sahf
xor
jne
mov
inc
into
mov
mov
inc
iret
dec
retf
retf
jns
xchg
(bad)
aam
dec
jp
pop
in
push
cmps
jmp
loop
xor
outs
loope
jp
loopne
lahf
loopne
push
outs
xor
or
mov
push
pop
outs
adc
dec
jge
adc
dec
enter
push
enter
(bad)
ret
enter
in
leave
(bad)
scas
pop
xor
test
test
dec
mov
mov
pop
dec
pop
loope
rol
iret
popf
inc
(bad)
ds
adc
loope
hlt
mov
inc
jle
int3
sbb
mov
lods
call
jno
add
dec
sub
ja
and
sbb
mov
ins
leave
iret
mov
enter
mov
lods
sbb
daa
fldenv
mov
loop
lods
test
das
in
ds
and
fld
push
out
(bad)
arpl
sub
mov
scas
stos
push
out
ja
jle
cmp
push
cs
fs
into
repz
dec
sub
xlat
fistp
jb
sub
inc
pop
xchg
jb
or
xchg
loop
lods
xchg
inc
outs
mov
cli
pop
aaa
das
inc
fsub
and
cdq
sahf
xor
pop
inc
dec
test
jno
cmc
pop
pop
cdq
pop
push
pusha
mov
jmp
mov
(bad)
psraw
icebp
scas
les
les
sahf
xchg
in
mov
jecxz
ja
mov
fnstsw
mov
cdq
sar
pop
xor
ret
jae
add
xor
adc
adc
sub
test
dec
out
xchg
(bad)
jbe
pop
inc
mov
jnp
cwde
push
outs
pop
adc
jmp
mov
stc
cmps
lods
xchg
inc
movs
jb
ins
lea
dec
sub
push
sbb
pop
xor
inc
xchg
inc
cdq
fwait
leave
dec
data16
or
mov
cmp
add
idiv
fnstcw
clc
(bad)
push
fs
push
repz
push
adc
pop
xor
add
jb
xchg
and
dec
in
pop
fldenv
adc
aad
push
xchg
jecxz
(bad)
mov
mov
xchg
dec
dec
aad
lea
outs
hlt
jecxz
sar
dec
stos
(bad)
leave
xchg
fild
mov
dec
push
rcr
dec
inc
test
push
scas
sbb
sub
enter
aam
mov
mov
lds
out
lahf
mov
cdq
xor
xlat
jns
jne
aam
imul
add
bound
add
aas
adc
(bad)
jmp
dec
sub
mov
mov
ins
pop
js
and
dec
sub
movs
call
jle
jne
sub
dec
cdq
rcl
sti
mov
push
popf
stos
mov
cld
fist
cld
pushf
xchg
inc
cmp
inc
or
xchg
sbb
es
inc
mov
aas
mov
add
xchg
mov
jns
outs
jecxz
jmp
out
mov
loop
loopne
inc
clc
push
jae
dec
inc
ror
(bad)
sub
je
test
mov
stos
test
aad
dec
xor
inc
sar
dec
(bad)
mov
and
clc
loope
cmp
loop
imul
jmp
ja
mov
jnp
daa
sbb
cwde
push
xchg
sub
aam
out
in
add
push
(bad)
in
mov
adc
(bad)
add
fdivr
fs
in
aas
fbstp
sti
hlt
loopne
add
jmp
xor
mov
dec
mov
add
idiv
pusha
mov
cmps
ja
(bad)
push
pop
cmp
not
cli
xor
test
pop
xchg
adc
fs
jg
cdq
ins
xchg
pop
push
clc
add
rcr
sub
cmp
pop
fdivr
(bad)
fistp
test
rcr
dec
inc
scas
mov
cmp
mov
outs
jae
addr16
cmp
pop
mov
xchg
leave
retf
ins
mov
jo
xor
jnp
mov
xchg
inc
aas
push
mov
or
(bad)
stc
mov
pop
mov
jne
jns
call
das
lods
jmp
dec
popf
add
call
pop
lods
mov
adc
gs
cmp
jge
imul
cwde
(bad)
bound
mov
lahf
cdq
sub
dec
push
push
es
dec
cmp
data16
lods
or
add
push
bound
sub
cli
sti
ret
add
icebp
jae
cmp
inc
dec
push
pop
jmp
push
xchg
adc
dec
hlt
xor
dec
js
ss
cmp
aaa
or
pop
stos
jg
mov
out
int
mov
jecxz
dec
or
or
xlat
adc
faddp
test
out
repnz
xchg
inc
mov
jnp
adc
mov
repnz
push
push
push
bound
jnp
movs
sub
cmps
cli
jns
jne
xor
(bad)
jg
dec
int3
std
push
add
icebp
jnp
add
ret
push
jbe
(bad)
in
out
sbb
mov
(bad)
pop
sbb
sub
(bad)
xor
stos
pop
mov
fsub
mov
icebp
les
popa
and
dec
push
jp
adc
dec
addr16
xor
pop
cmps
js
je
int
xor
add
mov
sbb
std
xchg
nop
data16
push
jmp
mov
not
sti
inc
pop
je
and
mov
vmovntps
(bad)
iret
add
(bad)
mov
push
mov
div
stos
addr16
loop
ds
push
push
out
sbb
mov
mov
or
sbb
inc
xlat
jp
aaa
sub
lea
pop
out
inc
neg
inc
inc
pushw
mov
jno
es
pop
icebp
movs
enter
cmp
mov
xchg
das
(bad)
jle
mov
mov
das
cmc
sub
sub
inc
pop
pop
fild
adc
adc
push
sar
ja
ret
int3
pop
pushf
ror
xor
push
lea
xor
cmc
test
dec
test
test
xchg
jmp
std
push
xchg
cmp
scas
dec
fiadd
pop
or
xor
and
push
dec
push
test
jo
adc
movs
shr
xchg
stc
dec
into
adc
ret
dec
shl
inc
mov
retf
shr
pop
xchg
mov
sub
ss
inc
xchg
pop
pop
xchg
data16
xlat
xchg
mov
dec
mov
shl
in
jb
inc
out
hlt
or
add
data16
mov
push
mov
jae
mov
and
sahf
loopne
pop
adc
mov
int3
cmc
popa
xor
push
aaa
mov
push
dec
and
cmp
lea
or
fistp
or
jne
icebp
in
sub
test
test
jae
dec
add
les
stos
fidivr
test
xchg
out
shr
dec
retf
add
imul
and
xlat
mov
cwde
in
mov
es
push
mov
inc
int3
or
in
sub
(bad)
cmp
outs
std
out
repnz
clc
mov
fsub
cdq
xchg
arpl
mul
scas
mov
fst
fdiv
mov
icebp
mov
cmps
push
xor
enter
pop
(bad)
iret
rcr
push
xchg
sub
shr
mov
cli
add
cmp
jae
mov
retf
mov
jno
test
xor
ins
jp
and
mov
je
sbb
cmp
xchg
stc
mov
sub
aas
sahf
aad
mov
popf
or
sbb
retf
ja
bound
sub
fisttp
mov
lods
xchg
out
mov
pop
inc
push
enter
mov
in
jecxz
mov
inc
outs
xlat
mov
shr
icebp
(bad)
icebp
neg
dec
fstp
mov
and
cmp
mov
repnz
inc
jmp
mov
cmp
imul
mov
inc
jo
lods
mov
inc
data16
jmp
inc
dec
out
jnp
jg
mov
cmp
cmp
popf
push
pop
repz
popf
dec
test
sbb
or
outs
jg
lds
mov
mov
xor
pop
call
pop
out
test
cmp
out
xor
js
pop
fild
sbb
xchg
push
lods
jge
gs
mov
mov
jb
xchg
stos
int3
inc
jmp
cmp
(bad)
cmp
inc
xchg
pop
jl
xor
xchg
pop
and
call
fild
xlat
mov
aas
hlt
mov
mov
popf
scas
push
test
and
pop
mov
je
add
inc
mov
xor
aad
dec
outs
call
lahf
xchg
inc
hlt
pusha
sub
dec
ss
mov
xor
xchg
or
pop
icebp
les
test
and
xchg
js
or
dec
and
in
mov
cli
push
mov
pop
mov
adc
mov
xor
lea
jae
jle
mov
xchg
mov
adc
dec
mov
rol
and
or
sub
mov
cmp
jne
mov
mov
pop
jmp
xchg
sub
push
(bad)
bound
ret
push
ret
pop
or
in
pop
test
rcr
stos
sbb
push
js
shl
sub
js
data16
mov
retf
mov
mov
cmp
adc
inc
cmp
and
(bad)
je
and
lds
aas
(bad)
mov
inc
jne
xor
imul
ret
xlat
cdq
lea
sar
or
icebp
sbb
(bad)
sar
xchg
add
xchg
sbb
jbe
retf
out
lahf
nop
jg
int
addr16
cdq
test
repz
inc
fbld
(bad)
gs
ror
(bad)
jnp
popa
add
add
iret
mov
mov
lahf
call
stc
pop
adc
or
dec
or
xor
outs
js
ror
and
inc
mov
and
mov
mov
shl
outs
pop
inc
jmp
jo
sahf
icebp
jae
adc
or
mov
in
jl
adc
xchg
and
jmp
add
and
pop
or
jbe
xor
test
or
inc
mov
nop
cmp
rcr
(bad)
dec
sbb
and
jne
adc
cld
aaa
out
fsub
jns
arpl
cdq
ss
jb
mov
arpl
aas
xor
cmp
test
or
inc
dec
jae
pop
and
out
gs
retf
stos
xchg
xor
dec
lea
adc
cmp
pop
addr16
(bad)
dec
mov
sub
xor
mov
ins
aad
(bad)
loope
adc
int
loop
push
std
(bad)
sbb
mov
clc
out
mov
lock
add
jmp
and
call
pop
(bad)
xlat
iret
mov
je
jp
sti
fist
push
sub
data16
mov
imul
shr
sub
and
sub
push
daa
lock
adc
inc
add
fist
mov
add
push
push
mov
inc
mov
push
xor
pop
dec
and
adc
movs
mov
inc
stos
popf
dec
lock
cmp
iret
sahf
out
sbb
sbb
cmps
iret
push
fld
pop
dec
sti
and
sub
cmc
cmp
rcr
int3
xor
in
dec
sub
push
cmp
cs
jns
cmp
rcr
aas
pop
jns
data16
(bad)
xchg
bound
pop
mov
xor
ror
fdivr
shr
icebp
iret
mov
sub
fwait
pop
jl
lods
cs
fdivr
adc
push
movs
jle
mov
icebp
outs
aam
inc
mov
cli
xchg
popf
pop
aad
pop
mov
cmp
rol
push
add
and
movs
mov
mov
lods
xchg
test
jle
adc
(bad)
dec
jns
sar
mov
sbb
test
push
mov
cdq
sub
push
push
(bad)
mov
test
out
fnstcw
inc
lock
test
adc
ins
xchg
add
mov
inc
mov
dec
cld
jne
mov
(bad)
leave
ss
and
jmp
popaw
icebp
aad
mov
add
push
sub
cmps
loop
mov
addr16
push
inc
adc
sub
out
pop
lods
fucomp
fisubr
push
jl
pop
popf
sbb
sbb
fwait
das
mov
sahf
adc
(bad)
xor
pop
adc
sub
xchg
dec
outs
pop
test
pushf
inc
push
(bad)
xlat
jp
ror
pop
leave
sahf
stc
cmps
adc
sub
and
xchg
popa
iret
cmp
leave
(bad)
jmp
mov
cmp
pusha
je
loop
dec
in
xchg
dec
sbb
cmp
sbb
add
add
mov
int
aad
mov
repz
fnsave
loopne
rcl
pop
and
cmps
icebp
arpl
sbb
jmp
out
imul
push
or
and
mov
aam
cmp
push
dec
adc
pop
jae
jno
xor
sub
in
in
jg
dec
xchg
loop
or
(bad)
cli
mov
xchg
cmps
sub
mov
jmp
jns
jp
mov
xchg
xchg
loopne
rcr
daa
es
mov
sub
jle
leave
adc
cmp
icebp
xlat
xchg
push
fcomp
push
test
xor
jbe
clc
dec
in
push
add
(bad)
repnz
mov
dec
pop
int3
mov
sbb
add
popa
mov
cmp
jb
and
fbld
ins
jne
xchg
int
ficom
in
xor
arpl
lods
sub
daa
jne
push
ins
rcl
fist
clc
repnz
push
je
adc
pop
mov
fdiv
sbb
movs
mov
sahf
into
add
stc
push
mov
mov
add
ins
inc
mov
sub
sub
and
mov
call
push
jle
retf
rol
das
xor
cli
inc
das
inc
cld
stos
test
mov
inc
pop
(bad)
popf
dec
scas
xchg
pop
sahf
popa
push
pop
jae
outs
jo
add
(bad)
mov
jg
int
xchg
inc
mov
cld
inc
sbb
std
mov
dec
mov
or
mov
out
fsubr
lahf
aas
jne
sbb
lods
cs
xchg
jo
push
test
sbb
lock
push
fnstsw
cmp
mov
sub
sbb
and
popa
call
sbb
stos
push
xchg
mov
add
push
jne
fwait
mov
movs
push
push
mov
mov
aaa
fcmovnu
movs
out
mov
sub
ret
mov
outs
inc
adc
out
daa
retf
inc
mov
iret
mov
jg
inc
xor
mov
jns
xchg
sub
or
adc
(bad)
jp
mov
jg
dec
add
loope
adc
aam
ret
mov
mov
push
mov
imul
stc
xchg
sbb
inc
mov
ror
mov
or
lea
inc
fucom
pop
mov
sbb
test
dec
sub
movs
addr16
js
icebp
mov
mov
xor
hlt
sbb
loope
jmp
jb
cld
sub
push
arpl
inc
mov
dec
push
lds
inc
mov
stos
or
inc
fsub
jno
ins
dec
xchg
ins
fcomp
cld
rsqrtps
test
ret
aad
fistp
add
ret
pop
push
mov
mov
fst
xchg
inc
xchg
cld
push
(bad)
fild
adc
leave
aas
sti
xchg
dec
mov
inc
inc
call
(bad)
loop
out
or
fldenv
pop
icebp
jns
sbb
aad
retf
nop
test
mov
sub
xor
mov
add
std
cli
push
not
cwde
fdivr
cmps
xor
push
shr
js
inc
retf
sbb
mov
loopne
or
push
retf
sbb
sub
adc
nop
dec
sti
inc
fwait
cmp
inc
inc
jg
les
in
aaa
in
les
mov
inc
dec
add
or
imul
jmpw
sahf
sub
sub
mov
fst
jp
rcr
jo
inc
out
dec
inc
sub
clc
aam
mov
pop
xor
push
inc
ins
adc
jae
pop
mov
pop
shl
fcomp
mov
jo
sub
je
lahf
test
aaa
popf
xor
add
and
sti
lods
and
data16
push
add
les
dec
inc
(bad)
scas
adc
mov
pop
imul
mov
rcr
arpl
push
pop
out
rcl
sbb
pop
adc
ficom
jmp
xor
pusha
in
fiadd
or
push
sub
setp
not
les
add
mov
xchg
int
jns
fs
(bad)
push
jp
mov
cmp
std
pop
mov
jmp
shl
push
movs
fs
jo
call
test
push
addr16
adc
push
dec
aas
xchg
adc
lods
bound
dec
mov
dec
fwait
call
xchg
or
loope
push
test
in
cmp
das
jg
into
adc
and
xor
mov
loop
sti
setg
jbe
in
pusha
sub
fcom
push
cmp
(bad)
mov
pushf
dec
mov
(bad)
jl
stos
loop
xor
shr
add
das
sbb
(bad)
mov
mov
mov
cwde
sbb
cmps
add
es
pop
or
icebp
jne
retf
sbb
and
movs
or
mov
xor
movs
mov
mov
pop
push
popa
clc
dec
leave
shl
repz
(bad)
jle
arpl
push
pop
push
das
ins
sahf
push
and
rol
inc
xchg
add
add
inc
mov
ror
addr16
jb
ins
xchg
inc
inc
sbb
(bad)
imul
data16
jns
jmp
cli
loopne
cdq
(bad)
xchg
rdpmc
jb
sub
sti
retf
inc
outs
push
xchg
mov
iret
lods
push
push
inc
push
repz
data16
mov
ins
int3
(bad)
pop
jp
add
dec
mov
js
xchg
leave
out
cmp
in
push
mov
lods
aas
mov
mov
jmp
pop
jne
mov
lock
mov
adc
dec
xor
out
mov
jb
out
sub
ja
jp
mov
ret
aaa
in
or
repz
mov
jecxz
and
cmp
pop
out
xchg
shl
ins
xor
arpl
sbb
cli
movs
and
mov
mov
mov
int3
je
sub
pop
ret
pop
inc
and
mov
addr16
dec
outs
stos
push
add
shr
jmp
leave
mov
xchg
sbb
and
push
jle
push
jns
fwait
mov
cli
mov
adc
mov
std
and
and
dec
mov
(bad)
cmc
stos
daa
add
add
inc
inc
fmulp
fs
call
pop
lods
mov
cmp
xor
arpl
mov
ins
rol
fdivr
outs
test
leave
mov
sub
lock
and
xlat
mov
neg
(bad)
je
and
sub
push
sbb
and
xchg
mov
aaa
pop
mov
pop
lahf
mov
(bad)
divps
fiadd
xor
jne
inc
daa
xor
jmp
cs
gs
pop
scas
aam
cs
add
in
gs
mov
and
arpl
mov
mov
cmp
in
dec
mov
aad
jge
mov
sar
cmp
pop
int3
mov
cmp
js
ja
fisubr
(bad)
jecxz
jnp
or
out
fadd
bound
in
call
xchg
lods
shr
test
loop
sbb
sti
js
fwait
bound
in
aas
inc
cld
adc
xchg
inc
pop
jns
mov
stos
aam
jle
jl
pop
sbb
adc
cmp
push
xchg
in
jo
rcr
sbb
and
test
daa
dec
push
movs
and
mov
hlt
mov
call
cld
jno
xor
out
shl
and
adc
aad
pop
outs
mov
inc
repnz
(bad)
sub
push
dec
xlat
jns
clc
lock
push
mov
adc
sub
sub
jbe
add
fwait
pop
je
scas
movs
popf
in
repz
add
movs
popa
jecxz
ds
pusha
call
outs
mov
stos
adc
push
call
inc
shl
shr
mov
call
xor
mov
pop
rol
fwait
(bad)
sub
inc
dec
aaa
icebp
add
int3
mov
in
call
mov
add
movs
or
leave
loopne
add
sbb
fadd
jbe
sbb
icebp
push
and
xchg
prefetch
cmp
adc
mov
pop
(bad)
pop
xlat
out
shr
sbb
jmp
sbb
in
icebp
call
das
and
ja
ins
sbb
(bad)
dec
movs
mov
ins
sti
dec
push
cmp
scas
or
loope
ja
mov
inc
pop
sub
push
std
je
in
lock
inc
xchg
cmp
(bad)
fidivr
push
xor
pop
cmps
je
(bad)
gs
mov
iret
jno
rol
outs
cmp
cdq
mov
inc
test
jns
std
and
cmp
xlat
ficom
mov
and
pop
call
stc
loop
(bad)
and
push
mov
inc
cdq
fcmovnu
xor
add
lds
popf
xlat
jbe
or
and
iret
mov
retf
sbb
das
shl
aas
fnstenv
adc
in
test
pop
aaa
mov
pop
jno
inc
sahf
push
addr16
aad
pop
adc
jmp
mov
fisub
jmp
and
gs
sar
sub
in
shl
mov
jge
int3
add
jecxz
arpl
sub
cmp
pop
pop
test
jge
jnp
inc
sti
loope
call
in
js
mov
inc
div
jno
dec
rcl
ins
(bad)
mov
(bad)
lds
mov
test
std
cmp
pop
sar
jo
and
(bad)
outs
cmp
fldcw
jae
and
ffree
addr16
xor
sub
and
test
mov
outs
sbb
sub
shr
push
cs
fdivr
inc
in
sti
and
leave
popf
das
scas
rcl
pop
loopne
dec
sub
push
aas
push
rcl
ins
retf
sub
dec
sahf
jl
sti
scas
jbe
stos
mov
fnclex
test
je
imul
es
pop
sub
(bad)
xor
in
call
imul
xchg
mov
test
or
ins
(bad)
scas
mov
(bad)
pop
sbb
(bad)
jb
xchg
imul
and
jnp
and
jne
imul
stos
and
or
das
fwait
jle
jae
mov
int3
pusha
test
mov
sub
das
ret
loop
(bad)
jge
push
mov
out
fucomi
and
sub
cmp
fisubr
(bad)
shr
mov
test
mov
pop
enter
ror
dec
shr
push
repz
mov
xor
dec
cmp
jb
inc
push
adc
push
jge
push
outs
daa
push
jle
int3
or
test
rcr
jg
add
shl
jle
jnp
mov
push
dec
sub
imul
cdq
js
icebp
adc
pop
push
hlt
jmp
arpl
into
push
add
into
cs
jb
mov
ins
jmp
mov
je
js
idiv
ins
dec
pop
outs
push
and
add
sub
mov
pop
test
dec
pop
fiadd
repnz
mov
in
xor
les
dec
imul
inc
add
xchg
in
pop
add
js
mov
xchg
adc
pop
mov
ffreep
mov
cbw
mov
shl
loop
inc
mov
movs
xor
sahf
mov
pop
addr16
out
mov
adc
mov
loope
in
cwde
add
into
mov
inc
ret
fsub
push
jnp
jne
dec
hlt
in
sbb
outs
cmps
aas
cmp
aas
movs
outs
test
retf
movs
ror
and
push
xor
nop
pop
push
mov
mov
stos
cdq
inc
and
ret
adc
les
mov
lgs
adc
loop
cmp
xchg
(bad)
dec
jae
or
or
xchg
std
sub
js
lods
add
ss
adc
std
pop
in
(bad)
xor
inc
js
pop
push
jmp
lods
or
inc
sti
mov
pop
push
sar
nop
push
retf
in
sar
mov
jge
mov
sbb
ret
bswap
imul
outs
test
push
cmp
js
pop
add
jns
mov
or
imul
psrlq
test
push
push
fs
mov
cmpxchg
out
inc
jmp
adc
fmul
(bad)
in
call
lahf
push
mov
leave
repnz
lock
mov
cmp
mov
sbb
or
cmp
fstp
or
cmp
cmp
sbb
bound
sub
les
or
cmps
sub
stos
pop
test
icebp
shr
dec
inc
enter
sbb
or
lock
inc
ins
mov
push
push
aas
and
sbb
cs
std
mov
jecxz
imul
adc
push
inc
fdivr
mov
cwde
add
mov
(bad)
or
xchg
js
sub
lods
mov
mov
fs
mov
mov
iret
jecxz
leave
push
fs
xchg
or
fsubrp
xchg
add
push
repz
mov
add
pop
mov
or
push
xor
call
punpcklwd
mov
loop
int3
xor
jns
cdq
in
call
mov
xchg
cmc
sub
xchg
mov
mov
xchg
rol
mov
pop
dec
inc
cld
xchg
xchg
pushf
mov
and
or
stos
cmps
mov
inc
outs
mov
imul
mov
fdivrp
ins
xchg
fs
sahf
test
push
mov
sub
xacquire
fnstsw
shl
xlat
sar
jmp
shl
out
and
rcl
std
xchg
sub
xor
dec
fcmovnbe
inc
mov
mov
cmc
inc
test
outs
jbe
dec
sbb
mov
scas
mov
mov
adc
inc
pop
test
fstp
xchg
mov
cmp
mov
add
das
dec
lahf
lahf
arpl
or
icebp
fld
xor
or
add
and
imul
mov
in
push
pop
and
loop
sub
or
int3
or
shl
jnp
cmp
inc
test
lock
mov
sub
xor
mov
mov
scas
(bad)
cmp
pop
jecxz
cmc
or
sub
scas
mov
mov
(bad)
push
mov
stos
or
cmp
push
rcl
repz
in
adc
xchg
and
adc
mov
inc
mov
addr16
out
cmc
pop
or
shl
outs
xor
dec
add
jbe
xchg
pop
sbb
jne
test
adc
lahf
lods
mov
push
aad
dec
mov
cmp
inc
xor
bound
push
xlat
(bad)
push
mov
jno
(bad)
in
xchg
idiv
sub
fdiv
push
mov
mov
jbe
(bad)
(bad)
push
adc
icebp
mov
out
fcomip
out
dec
xlat
frstor
push
jl
ret
scas
scas
mov
retf
sub
into
aad
lods
mov
push
mov
jle
sbb
jnp
(bad)
xchg
jnp
ins
fcmovnb
cmp
sub
and
push
movs
sti
xchg
call
mov
add
shl
cmps
lahf
sub
or
push
mov
or
sbb
jns
loopne
pop
and
int
mov
fist
push
cmp
jmp
pop
pop
sub
or
jg
lea
(bad)
or
push
loopne
scas
fistp
ss
add
ror
das
or
push
mov
mov
(bad)
jecxz
mov
nop
popa
lds
jecxz
test
pop
test
popa
push
aad
(bad)
bound
test
pop
test
js
dec
sub
stos
xchg
and
outs
movs
sbb
and
xor
repnz
ins
xor
stos
jl
sbb
dec
inc
adc
ret
ret
cli
(bad)
and
mov
lock
addr16
rdtsc
ss
data16
cld
jp
push
fnstenv
xchg
mov
int
arpl
mov
push
mov
hlt
sbb
lds
sub
pop
scas
nop
sbb
xor
out
dec
mov
pop
mov
push
lods
pop
jmp
ins
add
je
or
inc
loope
ret
mov
je
mov
mov
cmp
pop
dec
(bad)
mov
mov
mov
dec
cmps
sub
push
cmp
and
cmp
ficom
xor
cwde
add
sahf
out
fwait
mov
push
idiv
clc
push
es
cli
and
mov
sbb
mov
jle
push
mov
sbb
bound
and
int
fstp
mov
mov
jge
(bad)
push
hlt
test
push
cs
aam
ja
mov
push
or
xor
nop
out
mov
xor
test
xchg
movs
fdivr
aam
dec
pop
mov
add
jp
stos
add
(bad)
mov
add
add
ror
sub
mul
pop
jnp
ins
movs
std
rol
rcl
pop
push
mov
xchg
lea
dec
ret
cli
mov
loopne
pop
(bad)
mov
rol
inc
in
xor
jg
movs
jb
ds
addr16
cmc
lods
(bad)
stc
pop
mov
pusha
in
fnstcw
fsubp
push
xor
sbb
push
jle
mov
cmp
adc
and
sti
and
sub
mov
xchg
outs
fiadd
xchg
pop
ins
ficom
cmp
dec
(bad)
jns
cld
pop
mov
dec
das
imul
inc
sub
jne
les
aad
jl
lock
dec
dec
adc
push
and
push
inc
dec
push
out
repnz
or
stc
mov
test
lea
int
inc
ins
dec
jecxz
push
and
fidivr
push
add
bound
ins
iret
in
push
inc
daa
push
popf
enter
std
ficomp
jb
sbb
cdq
loope
inc
cmp
and
xor
scas
xor
jns
xor
sub
sub
fdivr
add
mov
inc
mov
mov
push
mov
js
fild
push
adc
add
xor
push
pushf
xchg
jecxz
or
push
add
xchg
stos
scas
mov
cmc
mov
pop
jae
jb
shr
dec
fcmovne
jae
xchg
xor
(bad)
pop
daa
loope
int
xor
mov
adc
pop
cmp
push
je
fist
add
sub
or
loope
stos
dec
(bad)
cwde
arpl
js
mov
call
mov
jl
outs
cmps
div
sbb
jle
sbb
call
shl
jg
fist
cmp
pop
or
fxch
xlat
aam
lods
outs
ss
jmp
jnp
lods
aad
fcmovnbe
mov
push
stos
xor
pop
sbb
fiadd
sbb
xor
dec
or
movzx
int
js
setbe
push
xlat
xor
adc
jl
cmps
outs
xchg
lea
cmp
add
sti
inc
out
sub
int
xchg
cmp
into
sbb
ins
jecxz
and
(bad)
addr16
mov
inc
mov
pop
xchg
gs
sbb
fcom
push
rcl
dec
fmul
add
aad
es
mov
sbb
xor
inc
or
adc
push
dec
mov
sbb
cli
arpl
mov
adc
adc
gs
ss
mov
cmp
inc
jnp
fnstenv
mov
jae
jg
push
add
mov
fcom
or
pop
jae
(bad)
inc
out
lock
imul
mov
mov
cmp
push
xor
jbe
addr16
push
or
ja
push
fsub
mov
jl
test
retf
inc
or
pusha
jecxz
mov
mov
pop
mov
movs
cmp
sbb
in
popw
(bad)
fisubr
jle
adc
icebp
call
or
pop
cmp
adc
mov
and
(bad)
or
je
mov
or
adc
fcomp
jl
mov
or
or
and
sahf
bound
mov
sub
in
xor
mov
js
push
sbb
cmc
jns
retf
mov
je
push
imul
imul
mov
xchg
das
push
sub
mov
jl
aaa
shr
icebp
xchg
jmp
enter
call
push
imul
or
mov
sub
fwait
dec
(bad)
and
dec
inc
sbb
inc
inc
adc
or
pusha
dec
adc
jl
mov
dec
xor
fadd
sbb
add
xchg
cmp
outs
xchg
cmp
rcl
ja
aam
mov
out
jp
jmp
jle
xlat
jg
ja
xchg
retf
(bad)
sti
movs
inc
sar
jecxz
cmp
outs
js
xchg
hlt
lods
bound
fmul
and
dec
jo
loope
scas
retf
pop
int
dec
xor
out
push
lock
clc
xchg
xor
ror
pop
clc
ds
call
and
push
ret
ins
pop
push
cld
mov
pop
xchg
inc
adc
fsubr
sub
and
jbe
stos
iret
adc
in
mov
push
push
pop
(bad)
pop
xor
xor
(bad)
jecxz
inc
push
sbb
out
dec
lea
dec
xchg
inc
add
xor
lods
mov
popf
fdivp
push
out
jnp
mov
inc
sbb
adc
mov
sbb
dec
push
ror
loope
fistp
xchg
shl
popa
popa
jmp
xor
jge
push
mov
push
js
shr
stos
sbb
jg
test
popa
jne
mov
adc
lea
mov
in
scas
mov
xor
cmp
push
fisttp
fwait
add
sbb
jne
(bad)
int
js
mov
xchg
mov
lods
std
add
pop
dec
pop
lahf
sub
sbb
dec
add
push
in
lds
inc
xchg
dec
mov
rol
cmp
call
popf
mov
pop
call
test
ins
retf
jp
mov
sti
cmp
lock
adc
xor
das
jle
mov
jecxz
outs
jmp
mov
adc
popa
mov
cmps
mov
sbb
mov
hlt
add
mov
adc
mov
mov
hlt
cmp
and
mov
loopne
(bad)
aad
ss
popf
mov
push
out
and
retf
or
mov
inc
mov
cmp
stc
mov
mov
inc
in
in
jbe
ret
xchg
dec
out
nop
leave
int
xor
cmp
jmp
xchg
or
pop
add
add
push
pop
push
push
in
pop
jmp
sub
push
pop
fs
jmp
adc
mov
fwait
mov
clc
addr16
pop
sub
(bad)
mov
iret
loope
mov
jg
rcr
adc
outs
push
rcr
mov
fmul
push
cmps
jmp
inc
(bad)
pop
pop
(bad)
xor
cmp
into
cs
fld
movs
mov
ficom
clc
xor
scas
cmp
push
neg
mov
test
jmp
xchg
repnz
mov
dec
aas
repz
sar
dec
cdq
jnp
pop
gs
in
das
mov
sub
jno
sbb
popa
popa
jno
jbe
lods
push
sbb
mov
test
das
jmp
mov
inc
sbb
or
test
aas
(bad)
sbb
xor
pop
rcl
stc
lods
out
cli
ins
fiadd
xchg
push
adc
outs
inc
jns
ret
loope
add
pop
push
popf
xor
leave
xlat
scas
cmp
lds
mov
jl
gs
scas
cli
cdq
jb
loop
xchg
pop
xor
jo
jns
scas
and
hlt
rcr
scas
mov
sbb
sar
fmul
ja
cmp
push
and
adc
and
push
inc
in
push
sub
imul
hlt
enter
imul
dec
adc
enter
lods
mov
imul
(bad)
and
lods
in
(bad)
jmp
shl
(bad)
xchg
xchg
jecxz
rcl
add
movs
movs
xor
ficomp
repz
inc
cmc
bound
mov
inc
dec
bound
inc
pop
test
out
lods
xchg
pop
pop
cmp
mov
sbb
or
std
mov
test
or
xchg
xlat
test
aaa
pushf
les
mov
mov
sbb
mov
pop
mov
enter
fiadd
int
mov
xchg
out
cdq
sbb
mov
adc
mov
push
leave
inc
pop
cmp
inc
sub
lods
jbe
fdivr
std
xchg
or
jl
xchg
movs
push
mov
push
(bad)
mul
(bad)
adc
mov
sbb
lahf
cmp
cmp
loopne
out
push
xor
pop
cmp
jno
inc
jb
in
(bad)
mov
pusha
movs
xor
jge
jb
lock
xlat
mov
dec
sti
jg
nop
into
fs
xor
std
mov
sbb
(bad)
and
push
push
fisub
pushf
test
jb
xchg
jns
jbe
imul
lods
adc
mov
fldenv
dec
retf
inc
add
ds
jle
pop
sbb
push
stc
mov
cmp
sbb
adc
popf
shl
push
jl
pop
mov
xor
loope
inc
and
mov
dec
pop
repz
int
aam
cld
push
ds
add
jmp
adc
mov
ss
fild
gs
(bad)
(bad)
mov
jmp
ins
add
(bad)
cmp
mov
scas
and
jo
hlt
stc
sub
mov
imul
sub
or
xchg
stos
and
xchg
adc
and
xchg
push
cs
std
pop
add
mov
test
xchg
jns
dec
pop
(bad)
jp
test
lahf
cs
daa
out
xor
push
inc
jg
dec
mov
and
mov
imul
popf
pop
fiadd
and
test
xor
movs
push
mov
or
sub
fimul
cmp
adc
(bad)
adc
mov
out
test
and
jne
pop
pop
jbe
nop
sub
adc
mov
stos
add
imul
ret
or
or
fistp
mov
pop
xor
xor
push
dec
int3
sub
aas
icebp
mov
jno
xchg
aas
cli
cmp
in
xor
sbb
sbb
out
pop
dec
xchg
dec
adc
push
js
mov
push
pop
or
sub
ret
sbb
jp
mov
pop
sbb
into
pop
dec
or
mov
adc
mov
rcr
jnp
add
aam
imul
ret
idiv
sub
icebp
into
(bad)
cmps
pop
jae
inc
sub
and
xchg
or
pop
mov
jg
dec
add
in
mov
and
push
sbb
repnz
inc
sbb
pop
jl
add
ret
rol
and
outs
push
jle
dec
sub
movs
in
jmp
jle
movs
push
sub
fwait
aaa
push
outs
loope
movs
add
adc
mov
add
rcr
inc
ss
ins
sbb
cmp
mov
xchg
std
or
cmc
cmp
lea
mov
and
inc
dec
cmc
(bad)
js
sbb
mov
(bad)
imul
jl
(bad)
sub
pop
js
pop
adc
stc
push
adc
cmp
movs
mov
lock
fwait
call
and
cs
jne
dec
pop
jns
mov
mov
mov
mov
adc
fmul
mov
imul
adc
ins
push
jge
adc
or
nop
imul
cs
cmps
adc
push
xor
(bad)
sahf
(bad)
shl
sbb
jae
dec
pop
push
bswap
push
mov
shl
lds
loop
push
loope
fldenv
mov
mov
mov
ins
adc
and
mov
jl
clc
outs
nop
daa
push
mov
jb
dec
div
popa
xchg
cmp
jg
dec
mov
mov
out
and
sub
je
jae
mov
jb
into
pop
jae
xor
sbb
sbb
add
inc
push
mov
mov
fild
adc
cmp
or
mov
shl
inc
pop
xor
neg
jle
cs
and
pop
(bad)
(bad)
jle
mov
call
jge
(bad)
adc
cld
cmps
mov
sar
or
(bad)
inc
push
pop
dec
addr16
addr16
pop
mov
mov
(bad)
jmp
cmp
mov
cmp
push
das
jg
pop
imul
shl
push
pop
retf
rcl
(bad)
scas
fwait
dec
cwde
cmp
test
ud0
nop
f2xm1
retf
push
ret
ror
into
pop
loope
daa
fsubr
mov
cli
xor
cli
adc
pushf
adc
mov
imul
cmp
xchg
mov
les
and
xor
daa
xchg
loope
mov
outs
mov
xchg
sub
mov
jg
jg
dec
or
mov
das
push
sbb
loop
push
test
test
fs
jae
mov
inc
inc
ret
mov
xchg
fisub
mov
xchg
cld
jne
fsub
pop
aam
adc
stos
fisttp
(bad)
cmp
mov
loope
xchg
jns
out
shl
cmc
sbb
(bad)
into
sbb
in
push
push
or
add
in
xchg
jmp
inc
mov
mov
in
push
jno
imul
mov
repz
mov
mov
adc
pop
mov
out
lds
jg
and
pop
leave
ret
fisub
xchg
adc
jb
pop
cmp
outs
(bad)
inc
inc
push
xchg
jnp
dec
imul
stos
jns
call
sbb
cmp
push
nop
sbb
push
pusha
imul
jle
mov
stc
add
and
lds
inc
mov
mul
inc
push
xchg
pop
ror
pusha
lahf
add
or
popf
call
test
int
push
sbb
ss
inc
int3
mov
popa
push
add
push
sbb
cs
inc
xchg
loopne
mov
clc
push
je
xor
imul
pop
out
inc
cdq
push
call
call
movs
or
(bad)
ficomp
mov
xchg
repnz
or
test
xchg
sub
pushf
push
lods
mov
sub
imul
push
popa
pop
daa
mov
cwde
enter
not
and
adc
div
loop
outs
lahf
jo
call
mov
nop
cwde
cmp
push
mov
mov
add
inc
sahf
add
movs
jle
aad
adc
rcr
aad
pushf
adc
mov
call
lahf
ror
sub
retf
inc
ror
ins
xchg
mov
pushf
cmps
scas
in
inc
cwde
xor
test
pop
mov
jo
jl
imul
call
xor
pop
push
inc
dec
push
jbe
mov
fcomp
xor
mov
std
adc
mov
xor
jmp
imul
enter
gs
scas
cmp
stos
inc
in
push
mov
jb
push
daa
call
or
push
push
(bad)
cmps
movs
cmp
pop
movs
in
test
out
scas
pop
icebp
sar
push
movs
popa
cmps
adc
and
loop
pushf
xchg
into
in
push
mov
push
adc
ror
push
adc
lock
lock
jne
cwde
aam
jp
inc
popa
es
mov
xor
fadd
aaa
out
lock
jne
xchg
cmp
das
cmc
push
jl
push
inc
and
dec
mov
aam
xchg
cwde
xchg
call
pushf
xchg
xlat
mov
adc
add
jmp
imul
push
cmc
addr16
mov
dec
test
imul
pop
or
prefetchw
or
push
jne
fimul
push
(bad)
adc
jge
push
aam
push
test
add
fidiv
xor
(bad)
(bad)
pop
fcomp
mov
push
test
mov
test
(bad)
repz
stos
mov
adc
push
dec
popf
adc
fst
xchg
sub
test
or
jmp
or
push
nop
sub
mov
add
sbb
push
aad
arpl
aad
out
adc
sub
cld
pop
xlat
rsqrtps
pop
ja
out
inc
in
xchg
sub
cmp
aad
rcl
loop
call
(bad)
mov
inc
icebp
xor
ret
leave
hlt
mov
aam
test
or
push
ds
pushf
dec
push
pop
into
movs
fs
ins
cmc
mov
cmp
cmc
mov
or
ret
cmp
out
push
fimul
sar
or
mov
sub
mov
inc
cdq
push
in
pop
mov
sub
gs
jle
loop
push
inc
imul
fld
rcr
sbb
test
(bad)
call
xor
cli
xchg
or
pop
push
dec
daa
adc
out
mov
in
cmc
sbb
mov
mov
je
rcl
lods
dec
bsr
sub
inc
mov
cmp
pop
fs
dec
out
and
cmps
jmp
fdiv
ror
(bad)
mov
push
icebp
xchg
xchg
xchg
rcr
dec
ins
ins
imul
in
inc
shr
ins
or
sub
sub
aad
inc
shl
xchg
cmc
mov
in
xchg
ja
test
int3
stos
fisubr
arpl
mov
and
xchg
enter
dec
fwait
sbb
jmp
jnp
pop
(bad)
outs
rcr
mov
xor
call
mov
jl
xor
sbb
or
stc
push
sahf
inc
cwde
jbe
sti
and
xor
adc
mov
xchg
into
cmp
dec
jmp
push
jg
fisub
adc
mov
call
xor
ror
adc
mov
push
sub
lods
and
dec
push
or
mov
inc
in
lock
push
(bad)
sti
add
adc
push
or
xor
mov
xchg
push
ficomp
outs
adc
inc
outs
jno
xor
xchg
inc
mov
fucomp
outs
sub
push
sub
icebp
iret
xor
hlt
cdq
or
pop
fld
push
adc
dec
pop
pop
fwait
inc
shl
and
inc
pop
rcr
leave
ins
add
out
sar
mov
jae
push
mov
shr
in
pop
push
ret
inc
jg
dec
stc
(bad)
(bad)
js
sti
and
cwde
fbstp
sbb
push
cmp
(bad)
test
arpl
xchg
rol
jae
ds
cmps
push
pop
(bad)
in
js
mov
push
xor
in
pop
dec
xchg
call
and
cmp
rcr
adc
neg
jge
fdivr
test
fld
sub
push
test
test
jl
lds
fwait
adc
gs
clc
sub
xor
cwde
dec
loopne
push
push
inc
dec
inc
aam
push
dec
mov
sbb
fbld
cld
inc
mov
xchg
pop
dec
mov
jo
jmp
jl
jl
pop
pusha
jns
stos
out
repz
mov
ss
(bad)
mov
sti
mov
into
mov
mov
dec
aad
call
iret
(bad)
mov
das
fist
into
retf
dec
dec
iret
pop
pop
jb
xor
inc
es
jo
sub
cld
xlat
test
nop
ret
ret
dec
pop
xor
fild
out
sub
sub
nop
rol
mov
push
xchg
push
jne
push
xchg
mov
sub
inc
add
outs
push
(bad)
push
jecxz
adc
dec
and
dec
fwait
jp
ins
sbb
sahf
in
xchg
mov
push
cmp
push
mov
xor
pop
lock
jae
out
inc
mov
push
cs
imul
or
jb
adc
add
pop
cmps
jne
xchg
shl
inc
mov
lea
stc
push
sbb
inc
dec
rol
jmp
xchg
push
inc
inc
adc
neg
pop
or
std
stos
mov
dec
call
mov
mov
fcmovnu
imul
add
adc
outs
gs
mov
sti
fdivr
popa
xchg
es
loope
cmp
(bad)
not
push
xor
or
mov
(bad)
jmp
cdq
nop
idiv
mov
popf
fucomp
and
cmp
jmp
inc
jg
xchg
inc
daa
movs
sub
data16
rcl
adc
sahf
out
push
jmp
mov
pop
ja
(bad)
push
xchg
je
movs
xchg
(bad)
outs
dec
dec
fsubr
scas
mov
and
mov
jno
add
les
leave
loop
ror
ja
inc
pusha
xor
jmp
popa
(bad)
lea
push
xchg
cs
mov
cmc
pop
cmp
popf
xchg
xor
pop
repz
adc
xchg
ror
cvtps2pi
je
mov
pop
jae
dec
xchg
test
std
mov
push
adc
(bad)
call
xchg
mov
test
pop
xchg
add
mov
mov
jnp
push
idiv
stos
adc
(bad)
in
push
xlat
push
mov
add
mov
xchg
daa
cli
in
sar
jno
imul
push
pop
dec
and
sub
xor
xchg
in
xor
jno
pop
out
push
mov
mov
mov
out
out
jbe
xlat
push
xlat
mov
(bad)
out
sub
(bad)
push
dec
mov
fistp
lea
aad
xor
push
xchg
jbe
repnz
sbb
inc
jmp
sub
sbb
std
pop
mov
retf
out
sbb
cli
jae
add
mov
stos
shl
xchg
jmp
das
mov
or
inc
fdivr
inc
inc
(bad)
mov
adc
or
mov
psubq
mov
fidiv
push
jle
js
inc
out
ins
add
popa
fist
mov
fwait
and
fdivr
xchg
(bad)
push
call
sub
add
arpl
xor
and
dec
xchg
enter
rcr
push
cmc
mov
and
pusha
bound
imul
and
jmp
js
dec
jp
daa
cmps
mov
jp
clc
loopne
loope
imul
repz
mov
push
pop
cmp
jecxz
or
(bad)
mov
cli
pop
jmp
dec
xlat
fisttp
(bad)
sbb
mov
aad
outs
into
adc
out
shl
popa
mov
xchg
add
retf
cs
xor
outs
and
sub
test
ret
mov
xor
mov
jo
jo
xchg
aad
call
clc
dec
mov
imul
sbb
(bad)
or
fs
ret
lea
pop
xchg
sub
jecxz
push
cmp
pop
xor
push
ds
movs
hlt
outs
scas
cmps
xor
out
or
out
ficom
sar
sub
push
in
movs
cwde
or
fisubr
sub
pop
sub
cmp
rcl
aam
push
lock
xor
fild
test
mov
inc
aas
out
(bad)
mov
sbb
push
dec
js
leave
jno
adc
xchg
add
mov
repz
les
mov
xor
test
or
push
in
ja
jg
add
les
and
ror
stos
pusha
je
rcr
cdq
sub
push
jbe
(bad)
pushf
jne
arpl
jnp
sbb
pusha
dec
rcl
int3
ins
fs
mov
dec
cmps
ror
dec
add
icebp
aam
sbb
xchg
paddb
xchg
jne
in
mov
vxorps
mov
or
fist
sbb
aad
inc
ins
lahf
xchg
loopne
pop
or
in
and
rcl
dec
leave
pop
sub
pop
sbb
fnstsw
(bad)
ja
retf
xchg
cld
stos
mov
cwde
repz
std
in
repz
and
push
dec
jmp
sbb
push
icebp
mov
mov
std
std
sbb
test
adc
mov
imul
mov
les
pop
adc
sub
pushf
sahf
pushf
cdq
test
repz
movs
fst
pop
xchg
inc
jp
push
(bad)
mov
mov
fldenv
pop
mov
inc
mov
add
cmp
es
sbb
imul
data16
sar
pushf
pusha
in
cmp
mov
(bad)
mov
stc
or
pop
pop
js
mov
mov
or
sahf
(bad)
movs
push
mov
outs
hlt
sbb
push
sub
mov
adc
mov
out
dec
push
je
push
repz
fsubr
jl
inc
lock
mul
mov
pop
les
in
jno
jmp
jbe
dec
sub
pop
and
push
xor
and
dec
jg
fist
mov
mov
mov
sub
xor
fld
ins
xor
ss
adc
add
std
mov
cwde
ret
movaps
xchg
pop
lock
fnsave
lock
bound
cmp
adc
rol
or
mov
xor
sahf
aad
push
or
out
mov
ret
stos
xor
jns
outs
test
in
jne
xlat
dec
mov
jnp
mov
pop
push
jne
dec
(bad)
ja
or
sbb
repnz
sbb
sub
leave
push
sub
ins
add
outs
out
into
inc
jp
jmp
dec
aad
jecxz
add
mov
mov
sbb
jp
or
sbb
ins
cmp
call
iret
fs
popw
xor
inc
sub
test
lea
add
outs
jg
sahf
shl
dec
xchg
sub
adc
mov
mov
and
sbb
popf
sbb
repnz
hlt
pop
repnz
jge
mov
cmp
mov
cwde
(bad)
add
or
pusha
cmp
popa
dec
fwait
dec
or
sub
dec
js
hlt
out
data16
mov
daa
add
test
xchg
xor
loope
pop
sub
ret
das
jmp
addr16
movs
imul
(bad)
jmp
scas
add
xor
clc
sbb
jecxz
and
jmp
sbb
imul
jae
ficomp
mov
add
pop
aam
xchg
sub
fisub
inc
dec
out
sar
jl
pop
fwait
xor
push
pop
out
dec
cli
div
push
dec
inc
and
ins
movs
push
add
fsubr
popa
cmc
dec
arpl
xchg
mov
sub
xchg
push
mov
ret
popa
aad
cmc
lods
sub
repz
jns
mov
xchg
jge
test
sub
jecxz
mov
stc
(bad)
sbb
sbb
sbb
adc
jmp
imul
dec
cmp
aad
ins
push
fdiv
inc
fdivr
mov
mov
adc
outs
loope
cmp
xor
aad
pop
push
jbe
data16
mov
repz
cmps
fprem
sbb
stos
(bad)
push
mov
jns
and
cwde
pop
pop
loopne
je
sbb
add
push
mov
daa
cwde
imul
test
add
ja
idiv
mov
cmp
and
mov
fstp
jb
cwde
xchg
cwde
int3
mov
imul
rcl
nop
fdivr
dec
scas
cmp
xor
call
loope
jp
clc
xchg
loopne
in
push
push
xchg
fild
push
movs
pop
or
jo
clc
enter
dec
dec
fstp
bnd
add
in
pop
lods
add
out
sbb
inc
sbb
add
ret
and
pop
mov
ja
or
mov
xchg
jp
loope
lods
movs
cli
jns
inc
cmps
sub
lods
clc
(bad)
or
mov
loopne
gs
out
inc
mov
push
sub
maskmovq
mul
push
leave
dec
lods
lea
inc
daa
or
and
mov
das
dec
in
div
adc
test
xchg
sar
test
sub
jge
pop
ja
xchg
pop
sahf
test
cmp
add
cmp
gs
inc
push
pop
xor
in
jne
and
out
dec
cmp
and
cmp
rol
cwde
or
push
push
aas
fs
in
lock
lea
dec
pop
in
outs
int3
push
inc
retf
add
add
xchg
sti
fwait
push
(bad)
dec
mov
stos
(bad)
sbb
shl
nop
jns
cmp
movs
push
mov
imul
clts
movs
bsr
mov
movs
lea
mov
data16
mov
sub
pop
add
repnz
cmp
cld
clc
cmps
clc
jno
shl
ins
xor
push
cmp
fiadd
sub
xchg
test
into
setns
bswap
(bad)
inc
imul
fs
jle
ins
retf
inc
outs
lock
jge
cdq
inc
jp
push
jmp
stc
cmp
repz
ret
xchg
in
cmps
mov
or
sub
push
push
int
repz
jns
inc
push
push
inc
ins
inc
popf
ficomp
(bad)
ficom
leave
cmps
cmp
jns
and
or
or
sbb
mov
dec
or
push
pop
jnp
mov
adc
(bad)
int3
mov
adc
ret
mov
ret
enter
ins
push
cmps
test
vandps
xor
scas
xchg
ret
jnp
addr16
ss
outs
cwde
cmc
ins
dec
daa
sahf
std
loope
push
sbb
jle
push
adc
dec
or
pop
stos
ins
loop
outs
cwde
popa
fsub
push
punpcklwd
sbb
sub
mov
inc
(bad)
loope
out
out
je
inc
int
jmp
mov
fcmovne
gs
sbb
mov
pop
fstp
stc
(bad)
cli
adc
add
sbb
or
aam
dec
pop
adc
push
sbb
xor
push
sub
test
push
lods
in
pop
push
xor
fbld
sub
scas
mov
ret
bound
into
loop
jae
sub
inc
imul
and
mov
mov
in
mov
rcl
addr16
mov
adc
dec
popf
or
push
es
xchg
dec
(bad)
jg
mov
push
or
jge
cwde
mov
jge
mov
xor
dec
ss
pushf
neg
mov
scas
dec
jne
das
les
push
jnp
dec
fs
pop
sbb
jae
gs
xchg
mov
stos
sbb
cmp
(bad)
out
mov
lods
inc
push
mov
mov
add
pop
mov
sub
pop
push
sahf
push
mov
fwait
cmp
cmp
jecxz
xor
retf
push
mov
add
imul
push
inc
mov
fld
and
movs
dec
add
push
pop
cwde
mov
cmp
lods
mov
lahf
push
daa
ds
pushf
call
jmp
xchg
lods
jge
rcr
aam
(bad)
(bad)
out
loopne
sub
pop
xor
fs
nop
xchg
mov
jae
jecxz
xor
pusha
daa
mov
sahf
pop
or
jle
aad
or
mov
into
js
aam
lea
xor
repz
sahf
mov
cmc
mul
in
sub
jmp
inc
shl
dec
xchg
jb
or
push
xchg
inc
daa
dec
cld
rcl
aad
pop
mov
jne
shl
jg
call
and
call
inc
stc
fcomp
out
jecxz
mov
dec
daa
nop
jle
inc
adc
dec
clc
test
ret
xor
dec
je
xlat
jmp
loop
adc
inc
cmp
pminsw
in
mov
jnp
ficom
dec
js
aad
adc
jo
sub
pop
add
enter
push
sub
mov
sub
adc
pop
inc
push
jmp
mov
push
mov
push
mov
xchg
addr16
xchg
xchg
jno
pop
cmp
sub
daa
and
mov
out
stos
add
or
or
jb
mov
push
sar
ins
mul
loope
sub
jge
outs
vphaddbd
xchg
or
push
jle
jle
and
psubusb
(bad)
and
mov
xchg
or
fdiv
jg
data16
push
adc
or
xor
scas
push
scas
mov
add
out
add
dec
and
cdq
in
ret
loopne
std
add
adc
jle
xchg
cmp
(bad)
mov
xor
xchg
(bad)
and
sub
rcl
fisub
adc
in
or
mov
xchg
cli
push
imul
call
xchg
aas
cmp
movups
push
ror
adc
out
gs
jmp
shl
mov
jecxz
or
sahf
xor
ror
sbb
dec
lahf
xlat
js
sub
aad
lods
aam
jne
in
push
(bad)
mov
or
pop
iret
or
add
in
shl
aad
loopne
cmps
and
sti
int3
lods
mov
push
je
xor
int3
test
xchg
push
(bad)
xor
sub
ins
fdivr
cmc
stc
jecxz
jo
xchg
addr16
mov
mov
mov
push
push
jl
cwde
sub
inc
sbb
pmullw
jg
mov
mov
pop
sub
mov
push
inc
sti
mov
test
inc
mov
and
mov
xchg
aas
mov
jmp
sbb
js
vpmaxub
call
sub
xchg
mov
ret
add
test
movs
sbb
inc
shl
out
dec
push
push
mov
and
mov
loopne
push
out
leave
and
mov
std
out
or
mov
sub
xchg
(bad)
cli
ror
push
xchg
test
cdq
es
loopne
xor
repnz
cmp
push
xlat
adc
cs
push
and
adc
mov
outs
inc
pushf
je
fist
aad
mov
inc
jecxz
cmp
mov
ret
imul
fsubr
ins
add
out
jmp
cmps
push
jo
and
jmp
add
ins
push
jmp
out
sub
das
enter
ins
loop
mov
add
jne
inc
xchg
dec
pop
cmc
inc
pusha
push
and
call
mov
push
mov
repz
pop
jmp
and
fwait
and
push
aad
and
push
stos
pusha
loopne
mov
data16
xor
pop
es
sub
sbb
xchg
hlt
push
data16
retf
int3
and
cmp
sti
rcl
jno
dec
sbb
cmp
cmps
inc
or
xchg
out
ret
push
or
dec
adc
jbe
mov
imul
pop
pushf
cmps
adc
les
movs
test
pop
mov
fsubp
aam
push
pop
cmp
std
dec
mov
pop
sub
add
neg
loopne
(bad)
mov
push
cmp
mov
mov
(bad)
push
rcr
test
retf
xlat
mov
sub
jmp
mov
jo
sub
mov
jne
shl
sub
mov
mov
lods
push
mov
pop
les
sub
push
iret
(bad)
jmp
xor
mov
repnz
popf
inc
push
jge
lock
xor
or
test
mov
mov
xor
add
ror
pop
(bad)
adc
dec
nop
and
xchg
pusha
(bad)
retf
pop
cwde
repz
retf
stos
in
aam
sbb
lods
push
add
adc
ja
pop
shl
or
add
mov
lds
xchg
push
inc
xchg
xor
adc
rcl
ds
nop
clc
je
sbb
outs
or
popf
stos
or
sbb
call
pop
xor
fistp
lahf
in
mov
es
add
pushf
xchg
cmp
pop
sub
xchg
inc
fwait
pop
jmp
adc
lds
daa
retf
ficomp
mov
sar
cmc
sub
shl
pusha
pop
pop
xchg
imul
imul
sahf
push
clc
jge
clc
pushf
ficom
cmp
mov
ins
add
pop
das
rol
int3
jmp
adc
aaa
stos
xor
dec
jbe
retf
arpl
cmp
push
push
push
mov
inc
ds
stos
lods
(bad)
xchg
pop
jmp
mov
jge
push
adc
mov
mov
pop
inc
aam
loope
push
ret
jge
lods
mov
inc
hlt
mov
jl
dec
jne
sti
out
mov
inc
ins
cmp
js
cmp
call
adc
aam
les
ja
cwde
jl
das
mov
out
inc
mov
test
push
lods
cmp
aam
mov
scas
sar
push
ss
inc
out
call
test
inc
aam
push
jmp
mov
pop
popa
add
stos
out
sbb
into
daa
jmp
inc
sub
shl
cwde
jnp
xlat
cdq
adc
jle
fld
ss
ins
adc
xchg
jp
mov
jmp
adc
add
mov
call
ror
in
cmps
dec
lds
cmp
sbb
cli
add
add
xchg
xor
test
iret
dec
cmps
add
(bad)
pop
xchg
xor
or
(bad)
cld
pop
(bad)
xor
ficomp
dec
scas
push
pop
adc
adc
sbb
mov
hlt
shr
push
cmp
pop
in
mov
(bad)
jne
push
dec
in
sbb
push
les
push
fsub
pop
popf
into
cmp
or
inc
loop
jo
adc
add
jae
data16
jbe
(bad)
push
jp
jae
pushf
or
xor
mov
dec
mov
cwde
(bad)
addr16
mov
xchg
clc
push
fimul
fld
and
test
sub
xor
mov
scas
and
mov
mov
(bad)
xchg
xor
movd
in
adc
clc
jmp
ss
dec
jo
inc
dec
push
cmp
aaa
leave
pop
adc
mov
das
sub
mov
rcl
lahf
cmps
jb
and
ror
sub
sub
es
jg
in
push
jb
arpl
sub
inc
fwait
cmp
nop
hlt
add
or
push
scas
(bad)
mov
es
jns
pop
cwde
push
fstp
and
xor
sub
test
ss
fld
inc
jg
push
cmp
test
fistp
push
sub
stc
ret
inc
shl
mov
cmps
dec
dec
jp
sub
sub
jge
lahf
cmp
adc
xor
cmp
retf
pop
aaa
test
retf
mov
dec
call
xor
mov
shl
lods
stc
dec
push
jo
dec
cdq
and
(bad)
or
stc
mov
push
sbb
xor
retf
dec
test
in
push
int
inc
pushw
mov
jns
cmp
arpl
dec
cmc
or
pop
inc
scas
mov
es
fdiv
or
xor
cld
(bad)
fdivr
or
scas
cmp
add
jge
aaa
jb
add
(bad)
push
div
lea
sbb
(bad)
mov
out
mov
(bad)
retf
aaa
enter
mov
aaa
sub
fsub
out
mov
push
dec
sbb
repz
movs
shl
mov
jmp
mov
(bad)
push
ins
add
xor
fld
inc
fidivr
xchg
repz
jns
pop
xchg
xchg
adc
add
sbb
inc
cmp
jnp
jne
or
js
xchg
loop
ins
dec
mov
dec
outs
das
cs
dec
fadd
out
push
push
not
adc
jb
inc
xchg
jmp
mov
loop
and
and
int3
mov
jmp
rcr
test
call
xchg
sub
cmp
pop
adc
inc
jp
call
cwde
test
sub
std
je
or
xor
shl
mov
icebp
jmp
call
mov
and
add
out
retf
je
movs
outs
add
cmp
push
add
out
xor
imul
lds
cmps
xchg
cs
lea
jb
jno
icebp
add
int
add
mov
fdiv
dec
push
stc
das
dec
pop
repz
pop
ret
push
aaa
cmp
sub
addr16
fsubr
inc
mov
lods
cli
xor
adc
push
mov
ds
inc
int
test
add
cwde
cmp
adc
push
jg
repz
dec
xor
jae
pop
test
xor
jbe
fs
cdq
inc
push
fnstcw
inc
aas
sbb
mov
jp
xchg
add
dec
enter
cmp
int
lea
repz
je
imul
idiv
rcr
daa
push
fld
fucom
sbb
cmp
repnz
xchg
mov
jns
(bad)
xor
mov
xor
popa
pop
out
outs
mov
ins
daa
(bad)
pop
mov
or
xchg
cmc
popa
inc
mov
sbb
out
cld
ja
jecxz
jmp
(bad)
mov
js
pop
test
dec
cmps
mov
lock
inc
je
outs
or
in
mov
mov
sbb
fisub
and
mov
sbb
pop
mov
sub
in
arpl
scas
sahf
mov
sub
call
dec
not
out
mov
lods
popf
jns
mov
lods
inc
pop
jecxz
pop
dec
outs
ins
jo
aaa
jb
sbb
dec
sbb
sub
adc
add
stos
xchg
adc
xor
sub
mov
ret
rcl
push
or
and
push
or
cmp
nop
repz
cs
xchg
adc
data16
rol
pop
movs
pop
pushf
loopne
sub
out
adc
mov
shl
(bad)
inc
mov
push
imul
jecxz
xchg
cwde
sti
cmp
dec
pop
addr16
ret
aas
cmp
xor
imul
or
(bad)
icebp
gs
dec
bound
add
pop
dec
inc
push
ss
cld
movs
cmps
jmp
mov
fsubp
push
ror
xor
adc
push
sub
cmp
xor
xchg
(bad)
movs
retf
xor
mov
aaa
cmp
add
sbb
inc
and
sub
inc
sub
shl
push
xchg
scas
not
cmp
cmp
cmp
sub
nop
fwait
cs
dec
inc
sahf
dec
cmp
movs
adc
fist
jo
mov
jp
push
neg
loopne
outs
popa
mov
sub
int3
movs
sbb
pop
sub
and
popa
ret
in
rcl
loop
and
ds
cmp
hlt
mov
xor
mov
pop
sbb
inc
test
nop
mov
mov
pop
mul
mov
test
sub
xor
std
not
int
jmp
fcmovbe
dec
iret
nop
fwait
out
push
jb
ret
pop
cmps
out
(bad)
dec
xchg
enter
or
push
jl
or
in
pop
xchg
mov
ret
loop
mov
in
pop
add
rcr
in
inc
sbb
repz
idiv
or
stos
inc
iret
std
cmp
retf
out
and
dec
in
pop
int3
xor
cmp
pop
add
mov
leave
test
jecxz
sbb
div
paddusw
pop
jl
ret
jnp
out
dec
adc
jp
cmps
pop
stos
outs
sub
aam
popa
pop
xchg
add
loopne
dec
ret
lods
(bad)
ss
ss
lea
mov
ja
dec
cmp
out
xchg
mov
xchg
xchg
sub
pusha
or
pop
add
mov
xchg
jb
push
jbe
xchg
push
sbb
jp
in
es
fdiv
and
test
adc
xchg
(bad)
ins
fs
xor
cld
je
mov
lock
adc
push
outs
call
sub
cmp
ins
dec
lahf
(bad)
repnz
fisttp
sub
xor
adc
add
pop
(bad)
popa
xchg
jno
mov
popf
outs
into
movs
int
aaa
test
mov
sub
movs
addr16
mov
cld
mov
adc
inc
jns
push
test
push
or
inc
mov
into
aas
nop
enter
int
xchg
xor
push
push
inc
icebp
or
fs
dec
dec
movs
movs
and
fstp
sti
inc
lds
jge
dec
cmp
cmp
or
ror
fdivr
rol
cs
sbb
jge
or
in
(bad)
stos
in
dec
ss
add
jne
push
xchg
mov
call
mov
sti
std
not
stos
test
loope
mov
jno
adc
xor
vpcmpeqw
dec
ret
rcr
icebp
dec
xor
adc
or
in
in
push
cmp
mov
sub
imul
push
fist
or
mov
cld
aaa
jmp
fidivr
lods
fwait
push
inc
pop
adc
popf
and
sbb
jne
xlat
or
leave
dec
ret
xchg
or
cdq
push
push
jae
dec
cmps
stc
cmp
and
clc
add
popa
mov
cmp
xor
call
mov
in
dec
xchg
pushf
int3
add
fist
mov
jl
push
jle
adc
adc
dec
out
or
cmps
pop
icebp
xchg
es
cmp
fistp
cmc
jno
inc
inc
cld
popf
jl
jbe
imul
mov
loope
push
clc
adc
sub
pop
mov
out
add
mov
mov
outs
mov
pop
pop
ror
ins
add
or
ss
push
adc
pop
jl
sub
lods
cmp
and
sbb
ficomp
mov
push
out
fisub
dec
pop
div
push
inc
inc
mov
inc
int
test
push
pop
les
gs
ds
aaa
(bad)
jmp
fsub
jnp
cmp
adc
iret
mov
cmp
rcr
loop
jg
sbb
pop
inc
mov
scas
cmp
push
fmul
mov
sbb
test
jns
ret
and
xchg
iret
in
mov
rol
add
adc
xchg
fsubr
sub
xor
imul
inc
cdq
add
(bad)
xlat
daa
add
adc
les
pop
sbb
les
push
jo
pop
push
push
xchg
out
mov
push
dec
lods
lea
push
out
push
adc
fs
fstp
push
pop
mov
mov
push
popf
cmp
imul
arpl
sbb
dec
xchg
dec
push
dec
adc
and
dec
fisttp
pop
cmp
outs
movs
xchg
mov
sbb
sbb
cdq
clc
scas
mov
cwde
sub
or
jb
pushw
pop
mov
retf
fwait
push
out
pop
jle
mov
cmps
idiv
sub
dec
inc
retf
xor
neg
or
xchg
cmps
mov
xchg
iret
div
xchg
test
mov
inc
dec
cmps
inc
jg
and
cmp
inc
cmp
push
sbb
sar
push
push
xlat
in
clc
mov
inc
xor
pop
int3
dec
jae
mov
stos
add
xchg
popf
xchg
xchg
xchg
pop
scas
arpl
out
add
adc
daa
(bad)
test
(bad)
cmp
cs
fs
movs
(bad)
(bad)
dec
ror
jl
sub
jnp
repnz
adc
popf
jecxz
imul
mov
sbb
(bad)
fsubr
or
mov
add
adc
xchg
ins
xchg
movups
fdivr
pushf
mov
or
add
sbb
cmc
inc
rol
stos
bound
cmp
jnp
mov
cmp
push
adc
pop
dec
xchg
mov
les
mov
mov
and
dec
push
jmp
std
pop
xor
pop
cmc
adc
or
inc
push
enter
ds
jecxz
pusha
mov
mov
idiv
ror
cmp
test
jle
dec
(bad)
push
ja
inc
into
add
outs
popf
outs
or
(bad)
mov
repnz
(bad)
(bad)
cmps
or
pop
scas
sahf
mov
pop
mov
in
fist
in
outs
ror
fadd
and
or
push
cmp
sti
and
push
pop
jg
mov
pop
xlat
add
mov
dec
sbb
sub
scas
dec
sbb
test
test
jnp
pop
(bad)
jle
jecxz
dec
(bad)
jne
mov
imul
pop
lea
movs
das
ss
xchg
jmp
pop
sbb
iret
dec
arpl
jecxz
mov
mov
icebp
cld
scas
pop
mov
inc
xlat
mov
inc
mov
in
mov
xor
lahf
jle
mov
mov
scas
push
mov
or
jg
out
lods
cmp
stos
lds
dec
in
cli
in
and
(bad)
fisub
int3
div
call
jecxz
xor
loopne
cs
pop
test
or
inc
add
xlat
pop
(bad)
ja
adc
dec
test
mov
loop
push
out
xchg
ds
fwait
xor
popf
or
push
cmps
add
fisttp
les
ins
jg
imul
xchg
idiv
clc
sti
cmp
outs
xor
xchg
and
inc
cmp
sar
(bad)
ja
icebp
sbb
and
dec
out
lea
scas
pop
lea
mov
pop
adc
pop
fadd
adc
jecxz
in
mov
cmp
leave
inc
je
or
xchg
and
xchg
ins
pop
and
mov
or
cmp
jo
pop
aaa
test
pop
lods
ins
pop
xchg
sbb
pusha
xchg
or
stc
sahf
fs
ror
xchg
xlat
shl
je
pop
repz
arpl
dec
cmps
rol
rcr
sahf
cmp
ins
adc
add
jl
nop
jne
sbb
mov
sub
jge
pop
pop
adc
ror
adc
test
imul
out
dec
rol
fisub
push
xchg
jecxz
or
and
clc
cmc
fs
jle
leave
inc
int
fist
mov
addr16
adc
mov
cld
(bad)
int
and
adc
pop
sbb
jno
cli
and
push
imul
mov
jl
sbb
jb
mov
mov
pop
push
(bad)
xchg
cmp
and
(bad)
cmp
jge
or
cmp
test
loope
adc
aaa
test
push
dec
mov
ds
pop
ror
cmp
jl
xchg
in
add
cmp
add
stc
jp
ret
imul
jae
shl
int
enter
push
into
js
ret
mov
clc
pop
jmp
mov
inc
pop
inc
push
movs
mov
ss
sub
dec
sbb
hlt
pop
ja
adc
mov
xchg
xor
sahf
leave
push
push
jne
cs
and
dec
or
cld
mov
mov
test
add
cli
std
push
div
cmp
gs
lock
push
adc
aam
(bad)
into
stos
xor
and
inc
mov
(bad)
lods
(bad)
cmp
icebp
jmp
and
jl
add
jl
jbe
mov
lea
cdq
xchg
cmp
push
popa
push
push
mov
mov
out
(bad)
stos
inc
lods
dec
cmp
and
test
gs
cmp
(bad)
repz
xchg
imul
cmps
in
faddp
repz
cmps
stc
(bad)
sbb
and
mov
push
leave
cmp
mov
out
div
mov
leave
sub
mov
(bad)
pusha
cmps
jge
xor
pop
lea
inc
cwde
cmp
add
bound
not
aam
or
pop
or
jp
xor
fisubr
imul
mov
(bad)
mov
sbb
jmp
jmp
ins
mov
or
dec
retf
xor
fcmove
not
mov
jne
retf
xor
(bad)
daa
xor
out
cmp
jae
sbb
in
mov
dec
mov
mov
retf
jae
std
jmp
or
mov
retf
int3
push
nop
xlat
and
rcr
sbb
and
rol
js
pop
xchg
sub
jb
xchg
jge
dec
push
ffreep
shl
(bad)
sbb
ret
jle
mov
cmps
out
push
fucom
pop
cdq
(bad)
inc
jae
sbb
inc
sbb
mov
mov
ins
add
aaa
add
jge
cmp
fsubr
enter
call
movs
(bad)
mov
dec
pushf
jp
addr16
cmps
imul
or
lea
jp
cwde
dec
jnp
mul
sar
add
xchg
and
xor
push
rol
ins
inc
enter
push
arpl
push
retf
repnz
fwait
pop
mov
loopne
test
ret
cwde
cmc
push
pop
popf
xor
shl
pop
push
sbb
lods
mov
add
and
jge
add
adc
xor
in
xchg
call
in
popf
jbe
mov
mov
pop
rcr
cmps
cmp
pusha
jecxz
cmps
popaw
mov
jmp
ss
lea
lds
mov
sub
bound
test
and
outs
jns
cs
dec
loope
mov
mov
dec
test
out
arpl
fwait
xchg
jl
inc
and
pop
scas
in
pop
lock
fs
inc
repz
xchg
imul
sub
ss
enter
shl
pop
sbb
js
leave
sub
mov
and
cdq
lock
aam
stos
push
pop
outs
in
nop
(bad)
mov
mov
dec
add
push
push
xchg
or
sbb
dec
add
pop
outs
fmul
jmp
iret
repz
sbb
add
out
sbb
lods
imul
xlat
test
ret
sbb
xchg
cmps
lds
or
pop
mov
rcl
mov
pop
xchg
out
pop
lock
enter
daa
xor
sub
sub
add
or
ja
add
mov
fwait
push
lods
in
push
out
in
ins
jb
sbb
das
pop
outs
mov
lds
ret
push
pop
sbb
jecxz
and
push
and
and
and
(bad)
enter
fcomi
pop
xchg
dec
shl
mov
inc
daa
push
and
cmp
mov
ror
ja
sub
test
cmp
not
shl
(bad)
adc
ds
xchg
xchg
aaa
aas
cmp
mov
repnz
cmps
and
ret
push
and
mov
pop
mov
dec
sbb
outs
scas
enter
sbb
das
leave
jp
ds
in
dec
mov
jo
(bad)
cmc
test
ss
xchg
mov
int3
jmp
inc
sub
rol
ds
mov
ret
push
cld
das
(bad)
mov
sbb
and
test
pusha
inc
dec
js
ss
xchg
and
stc
xor
sub
fst
mov
shl
test
adc
mov
xchg
pop
stc
add
retf
fcom
out
ja
mov
xchg
popa
push
in
jl
inc
add
and
daa
sbb
push
push
mov
cdq
mov
repz
aam
enter
xor
pop
xchg
adc
and
retf
ins
sti
bound
out
fisubr
mov
imul
mov
xchg
into
cld
pop
lock
mov
xchg
loope
and
into
rcl
icebp
xor
inc
pop
test
das
ss
in
jle
push
mov
jb
pop
ja
sub
lock
cmp
mov
(bad)
pop
imul
push
cmp
pop
or
fsubr
cmp
ins
jne
jmp
cld
dec
or
adc
test
jae
sub
movs
jmp
inc
jge
dec
iret
test
(bad)
retf
mov
dec
(bad)
jmp
or
xor
dec
mov
or
push
inc
ret
fwait
inc
enter
jae
nop
mov
add
repz
jmp
(bad)
std
je
loopne
mov
or
call
mov
(bad)
idiv
ret
mov
imul
jb
ds
js
aad
xchg
sbb
xor
sbb
jae
or
and
adc
sbb
cmp
call
call
cdq
pop
pop
adc
push
jbe
mov
lea
cmps
int
push
cmp
shr
adc
arpl
sub
sub
cmp
(bad)
jns
fadd
mov
mov
pop
sbb
je
enter
sbb
sub
cdq
not
push
leave
or
test
fild
outs
xchg
cwde
or
pusha
shl
sub
pop
add
dec
ins
push
fidivr
cdq
(bad)
jl
push
mov
inc
push
inc
inc
aam
or
cmps
and
mov
popa
cdq
pop
fwait
pop
sbb
push
jno
sbb
call
loop
dec
out
cmps
jb
rol
inc
daa
jmp
js
pop
je
sbb
add
mov
dec
lods
outs
(bad)
and
jnp
cdq
repnz
std
and
rcl
cld
xchg
pusha
push
or
repnz
or
icebp
ret
fmul
mov
pop
pop
sbb
jbe
ret
fisubr
pop
neg
and
cli
jae
enter
xor
outs
icebp
xor
jbe
mov
cmp
dec
sub
mov
inc
call
push
pop
in
jmp
xlat
inc
mov
adc
test
add
out
sub
add
xchg
pop
mov
in
dec
enter
mov
popa
sbb
jo
dec
jmp
out
jnp
retf
push
fcmovbe
push
rcl
test
push
adc
cmp
test
mov
mov
not
add
mov
jecxz
pop
mov
cmp
inc
(bad)
mov
cmps
rol
push
jmp
pop
mov
test
fcomp
xlat
loopne
mov
retf
stos
outs
push
mov
inc
push
push
sub
jge
mov
fbld
pop
popf
inc
xchg
jbe
mov
add
popa
sbb
jmp
mov
ds
(bad)
dec
pop
pop
or
mov
cwde
das
push
lods
in
xchg
pop
ins
sub
bound
pusha
jns
xchg
push
push
or
jmp
popa
and
fld
cmp
bswap
cdq
mov
in
pop
adc
ds
jmp
sub
(bad)
xor
cmp
pop
sub
imul
dec
cdq
mov
jmp
(bad)
outs
xlat
loope
sahf
aam
cmp
or
int3
cmp
jg
mov
stc
ret
imul
dec
gs
jno
mov
imul
cmp
ret
adc
(bad)
jne
rcr
jns
retf
sbb
(bad)
lods
sar
mov
movs
jle
loopne
out
adc
sub
xchg
sahf
ins
jecxz
fcmovb
xlat
add
mov
mov
dec
rcl
fstp
stos
mov
repz
movs
pop
movs
pop
call
shl
xor
(bad)
jle
jg
or
inc
popa
pop
fisubr
mov
test
xchg
xchg
xchg
das
call
fiadd
enter
int3
das
jmp
mov
jb
dec
sahf
int
das
test
in
mov
dec
sahf
mov
scas
test
mov
and
sub
ja
inc
cmp
icebp
adc
mov
test
test
push
fsubr
inc
mov
(bad)
mov
push
pop
aaa
xchg
mov
sahf
pop
xor
jecxz
mov
inc
dec
mov
inc
mov
sub
shr
add
mov
ins
adc
shr
fwait
add
mov
lock
cwde
rcr
push
jmp
add
jg
mov
pop
mov
pushf
adc
punpckldq
add
clc
inc
adc
jbe
inc
dec
cmps
cmp
in
(bad)
lods
xchg
push
adc
sti
sahf
mov
push
xor
cmp
jmp
loop
mov
clc
mov
fdiv
in
(bad)
test
loopne
push
push
sbb
enter
test
push
sbb
mov
jbe
es
dec
add
fwait
push
mov
mov
mov
jle
inc
push
xchg
lods
imul
ins
js
xor
loopne
jle
iret
loopne
cwde
push
inc
sub
push
(bad)
out
movs
pop
xor
sub
jnp
mov
xor
ins
push
(bad)
stos
lods
aaa
pop
je
cmp
sub
dec
faddp
mov
into
gs
popa
bound
ffree
leave
xor
aam
adc
sbb
or
dec
hlt
jo
jo
or
fucomp
sub
mov
pop
sub
arpl
sub
pushf
les
mov
lods
movs
in
jge
(bad)
sar
xchg
add
mov
adc
(bad)
pop
into
xlat
cmp
cmp
jmp
inc
jg
mov
mul
or
movs
adc
aad
pop
add
rcr
loopne
add
adc
in
lds
mov
xor
inc
out
aad
push
xlat
xchg
call
mov
je
mov
arpl
hlt
xchg
dec
mov
inc
hlt
icebp
out
fwait
cli
test
(bad)
nop
pop
push
push
sbb
rcr
add
and
and
push
pop
repnz
mov
sbb
ret
outs
leave
push
shl
ss
add
xchg
mov
mov
jecxz
pop
or
loope
xchg
and
jnp
movs
ja
xchg
mov
mov
mov
mov
bswap
xchg
in
push
inc
jge
daa
pop
leave
and
cwde
adc
rcl
fisubr
or
ja
lds
dec
movs
jle
push
jmp
xchg
imul
pop
cmp
aas
dec
mov
test
outs
add
(bad)
ds
fsubrp
and
rcr
or
int3
or
ror
out
xchg
(bad)
enter
xor
inc
sti
mov
xchg
jecxz
push
jno
jns
les
xchg
jmp
bnd
mov
adc
fiadd
(bad)
fs
lock
cmp
sbb
sub
call
fdiv
xchg
sub
jmp
jo
loope
cmps
jle
mov
dec
sbb
std
push
fcmovb
or
call
fstp
xchg
sti
fsubr
test
int
mov
fstp
dec
jne
movs
shr
mov
add
xor
bound
lock
sub
add
mov
adc
jp
(bad)
fadd
imul
call
pop
cdq
push
adc
inc
sbb
rcr
push
cwde
pop
inc
fld
movs
inc
imul
push
jns
ins
pop
(bad)
xor
sar
cmp
stc
daa
and
imul
mov
pop
jmp
cmps
fldenv
dec
les
mov
or
into
adc
and
out
int3
(bad)
mov
call
in
in
jne
fstp
and
cwde
dec
fcom
xchg
cmp
movs
pop
push
mov
inc
sbb
mov
cmp
or
mov
pop
cmp
clc
jge
jle
sbb
mov
popa
jo
mov
dec
mov
pop
arpl
jecxz
jnp
ficomp
shl
and
jmp
xchg
mov
ins
add
sbb
jp
push
sub
cmp
(bad)
lahf
sub
(bad)
sbb
ret
icebp
add
add
add
dec
xchg
fs
sbb
(bad)
stos
pusha
jo
lods
xor
fidiv
popf
fwait
jo
xor
mov
inc
mov
cmp
fcom
push
push
(bad)
xlat
cmps
scas
ja
xchg
gs
out
jo
int3
or
inc
jo
add
or
lahf
cmp
mov
rcr
or
jl
lock
cmp
jno
cmp
stos
jbe
fs
clc
leavew
xor
inc
movs
mov
jo
sar
add
loope
stc
or
jge
pushf
push
fist
mov
pop
jbe
pop
sbb
fst
leave
pop
pop
fnstenv
fs
scas
into
outs
out
jmp
rol
loopne
or
nop
dec
sbb
in
iret
(bad)
call
and
or
and
out
mov
pop
or
push
xchg
sub
push
and
or
stos
xchg
push
pop
sbb
sub
mov
mov
jmp
or
jno
icebp
push
or
in
je
inc
fs
fbld
fidiv
iret
test
or
lds
ds
xchg
xor
ror
into
push
bound
(bad)
mov
ja
push
(bad)
cs
rcl
ins
push
or
cmp
xor
lea
push
jae
(bad)
mov
pop
arpl
fcomp
in
aaa
mov
out
pop
pop
adc
jbe
movs
mov
xchg
mov
cld
inc
iret
pop
scas
jmp
call
push
punpckhwd
or
popa
(bad)
cld
add
arpl
(bad)
mov
popf
scas
xlat
sbb
cmp
(bad)
push
idiv
or
dec
and
ja
clc
pop
sti
mov
movs
(bad)
mov
push
or
iret
and
in
xor
add
mov
rol
mov
mov
mov
or
in
or
or
or
add
mov
adc
xrelease
stc
shr
mov
or
push
dec
es
sar
(bad)
fadd
mov
cmp
ins
je
loopne
and
mov
add
or
or
lahf
lock
outs
outs
neg
jnp
xor
xor
sub
bound
mov
popf
pop
xor
adc
das
mov
nop
pop
scas
add
cmp
test
fs
and
push
ins
ss
loop
xchg
(bad)
jl
ins
ror
push
fsubp
mov
rcr
lahf
mov
mov
ds
stc
mov
add
push
add
inc
pop
xchg
(bad)
(bad)
lea
jp
push
jmp
and
jb
mov
fstp
ins
dec
(bad)
sub
adc
adc
jg
(bad)
icebp
and
push
mov
(bad)
cmp
(bad)
mov
push
jle
or
aaa
out
and
or
mov
jbe
in
jae
(bad)
jmp
aam
xor
jmp
shl
and
sar
das
xor
daa
cmp
inc
rcr
fwait
icebp
movs
xor
jno
and
outs
add
stos
out
add
ins
jns
inc
add
fistp
pop
mov
add
call
call
inc
xor
cwde
jge
mov
rcl
shld
dec
ret
mov
dec
js
dec
addr16
addr16
mov
stos
cmp
mov
cmp
test
add
dec
iret
jne
mov
add
call
jne
popf
ins
fidiv
lds
xor
loop
(bad)
xchg
lock
popa
repz
ret
xchg
pop
popa
aad
pop
test
sbb
jb
popa
inc
std
fnsave
cld
jns
push
xchg
pusha
lahf
jmp
mov
cmp
lods
ins
clc
xchg
adc
pop
mov
in
ror
js
stos
popw
mov
(bad)
push
mov
xchg
push
mov
jnp
sub
jge
jnp
ret
cmps
mov
ficomp
push
jbe
repnz
jl
pop
mov
add
push
daa
adc
adc
ss
pop
mov
push
into
adc
sub
jmp
js
sbb
push
daa
push
xor
aad
dec
xchg
in
cmps
sub
movs
pusha
sbb
hlt
adc
in
je
inc
or
test
xchg
icebp
mov
outs
sub
ins
outs
inc
mov
cdq
test
inc
test
mov
ja
pop
test
daa
sub
push
(bad)
dec
dec
stos
xor
push
xchg
adc
clc
cmp
cmps
jle
xor
pusha
dec
rol
cmps
mov
lods
xor
and
dec
fdivrp
out
cli
cmp
test
jg
push
or
mov
xchg
lock
push
dec
sub
fnsave
ins
imul
jle
test
ja
jne
fwait
push
jne
aas
lods
push
lock
(bad)
jb
jle
push
mov
sbb
cmp
mov
and
cmc
enter
jl
scas
out
fdiv
jg
inc
shl
(bad)
mov
pop
sub
inc
push
mov
fdivr
mov
lock
cmps
mov
ins
inc
out
fmul
(bad)
lods
jle
dec
or
fst
mov
scas
fldcw
push
sbb
sub
outs
sub
xchg
and
(bad)
jp
xor
mov
sar
imul
xor
inc
and
es
test
aad
(bad)
adc
daa
dec
mov
push
jg
sbb
cwde
lods
xchg
data16
xor
sbb
xor
out
jle
xchg
jmp
sub
mov
inc
cmc
cwde
or
in
popf
adc
(bad)
xlat
outs
sar
xchg
pop
(bad)
lahf
aad
outs
xor
test
jecxz
pop
dec
js
push
inc
scas
mov
jo
outs
and
shr
lds
cli
xor
loope
mov
xlat
mov
pop
inc
jno
clc
dec
sbb
cmp
lock
inc
mov
aas
add
in
cmp
pushf
sub
mul
ret
shl
mov
cwde
outs
lods
ret
mov
add
lea
dec
sub
imul
cmc
movs
lods
pop
aaa
pop
call
inc
lea
ins
jno
in
retf
push
xchg
ins
push
cmc
lds
pushf
(bad)
jmp
xor
inc
test
das
arpl
jp
data16
mov
retf
lds
jbe
mov
das
adc
(bad)
retf
push
test
or
fisttp
adc
ins
das
mov
ss
fld
push
icebp
daa
outs
or
shr
dec
dec
fwait
int
jecxz
jae
cwde
daa
jno
dec
cli
jns
dec
pop
mov
js
sub
xor
gs
cdq
xchg
movs
push
xor
cmp
ficomp
lahf
loope
sub
int
cmp
jb
adc
dec
pop
sar
inc
mov
add
out
jno
cmovns
arpl
adc
cld
jge
imul
push
sbb
or
dec
inc
mov
inc
inc
pop
jmp
mov
xor
fild
cmp
arpl
mov
arpl
inc
add
adc
sub
jl
sub
jno
dec
mov
fwait
xchg
push
add
or
nop
fdivr
or
or
sub
xor
pusha
pop
fistp
jnp
rcr
sbb
movs
pushf
pop
inc
sub
fucomp
fstp
xchg
in
push
sub
in
mov
jno
or
add
add
stos
mov
xor
jmp
in
dec
movs
push
pop
aas
sbb
mov
movs
out
dec
sar
jne
push
int
mov
rol
retf
imul
mov
adc
dec
pop
mov
push
mov
xor
jae
(bad)
lods
cld
(bad)
lahf
ins
pusha
inc
cmp
div
loope
loop
mov
stos
cmps
aaa
cmp
aaa
or
nop
mov
fmul
fst
shl
(bad)
leave
push
pmulhuw
sub
mov
ret
int
xchg
push
pusha
in
imul
jbe
cmp
cld
les
xchg
pop
cmps
mov
add
test
push
sbb
xor
es
shl
cdq
sbb
scas
push
sbb
cld
aas
sbb
sbb
push
mov
jge
and
(bad)
sbb
fistp
ins
adc
pop
xchg
mov
xchg
icebp
mov
aas
ja
inc
cld
out
cmps
rcr
sbb
dec
jg
cmp
adc
repnz
sub
test
cmc
aaa
mov
ficom
hlt
xchg
sahf
dec
mov
or
sti
add
out
push
push
inc
inc
ret
repz
mov
cdq
pop
lahf
sbb
das
es
test
adc
and
inc
idiv
dec
mov
lea
mov
test
xchg
sbb
xchg
sti
imul
rcl
adc
(bad)
xchg
cs
(bad)
mov
xor
cdq
cli
dec
into
sahf
mov
mov
mov
sub
xor
or
push
cld
mov
lock
leave
outs
cmp
sub
cmp
inc
cmp
or
push
je
xchg
adc
jo
je
retf
jge
in
call
mov
sahf
jmp
add
xor
mov
mov
daa
gs
dec
pusha
das
mov
mov
outs
dec
(bad)
ins
test
cwde
mov
not
aam
or
inc
ss
push
or
mov
cmp
js
ja
fs
shl
mov
cwde
(bad)
xchg
mov
repnz
js
call
test
(bad)
rcl
ror
add
shr
xor
and
xchg
out
mov
mov
sar
inc
sbb
test
cmps
sbb
nop
xlat
and
xchg
(bad)
jmp
imul
push
nop
jbe
xor
jecxz
test
lods
push
or
adc
ins
loop
repz
fs
mov
bound
inc
mov
(bad)
shl
les
push
ins
and
adc
mov
sti
dec
mov
outs
int
dec
xor
iret
sub
inc
dec
mov
push
sub
mov
push
fistp
stos
mov
clc
sti
sti
mov
jmp
mov
add
sub
mov
dec
gs
test
lock
fs
sahf
in
sbb
mov
add
sahf
stc
or
push
inc
es
sbb
hlt
fld
lods
xchg
jle
xchg
sub
mov
movs
call
fistp
mov
add
cmp
outs
cdq
aaa
mov
(bad)
bound
loope
or
test
inc
push
(bad)
in
sbb
ins
mov
pop
in
loopne
cmps
dec
push
and
and
ins
jne
sub
or
jp
inc
test
std
imul
fsub
out
lods
stos
repz
mov
icebp
or
dec
les
loope
imul
mov
push
arpl
inc
adc
xchg
stc
shl
lods
mov
xchg
dec
jg
push
rcl
jge
enter
jmp
mov
mov
out
lds
xor
cmp
dec
das
cmp
sbb
nop
into
pop
cmp
push
fwait
sub
push
scas
dec
fild
inc
inc
jg
fbld
push
mov
jnp
fwait
pop
addr16
mov
cmps
popf
pop
les
outs
dec
dec
adc
cs
push
mov
mov
(bad)
adc
inc
mov
mov
and
inc
push
xlat
test
(bad)
test
add
lods
test
out
push
jne
fadd
inc
int3
ret
imul
sub
pop
or
retf
cmps
mov
push
mov
lods
or
cmps
xor
lods
jbe
das
call
pop
test
pop
jb
sbb
sar
movs
loope
fs
cmps
xchg
mov
jecxz
scas
adc
loopne
and
addr16
fstp
daa
nop
and
dec
pop
push
ffreep
jbe
inc
cmp
scas
and
add
daa
jmp
inc
sbb
aaa
xchg
iret
pop
ins
push
shl
ds
loopne
inc
pop
das
retf
movs
jo
cmp
mov
mov
fild
shr
mov
pushf
add
push
mov
sub
or
scas
sbb
sbb
shl
mov
xor
sub
arpl
mov
mov
ret
sub
pop
sbb
adc
sbb
ror
mov
mov
cmp
fwait
jmp
push
xchg
jbe
dec
push
out
imul
push
pop
imul
add
pop
aad
or
push
dec
fistp
out
push
retf
sub
dec
xor
fild
mov
cmc
stc
mov
nop
sbb
popa
dec
sbb
xchg
(bad)
lock
dec
sbb
add
cmp
pop
scas
jle
pop
mov
dec
cmps
add
sub
xchg
adc
std
dec
push
mov
(bad)
cmps
xchg
inc
dec
sub
aad
idiv
stc
mov
hlt
fscale
(bad)
dec
in
jb
inc
sbb
jmp
fist
test
lods
xchg
dec
lahf
sbb
fidiv
(bad)
imul
mov
shr
ins
out
das
mov
mov
test
arpl
jle
scas
mov
movs
call
out
xor
mov
xor
dec
push
mov
int
aaa
lds
dec
mov
rcr
call
push
sub
(bad)
mov
out
imul
push
push
test
mov
cmp
cmp
mov
ret
jg
add
loopne
test
inc
mov
mov
test
retf
in
lods
mov
sti
jmp
xchg
jecxz
fldenv
mov
sub
or
ins
aas
sahf
or
push
adc
xchg
ins
push
cmp
xor
sar
jmp
ror
test
(bad)
in
jl
popa
adc
mov
lock
repnz
sbb
sub
xor
scas
pop
sbb
pop
jg
push
ds
mov
pop
mov
retf
push
adc
mov
imul
icebp
jl
or
std
adc
jle
push
inc
rcr
jbe
xchg
or
cli
dec
xor
jle
ret
jl
mov
rcl
icebp
(bad)
aas
xlat
pop
ss
dec
cmps
cmps
lahf
fcomip
or
addr16
in
or
daa
mov
jo
jecxz
out
mov
pop
les
clc
stc
push
dec
outs
mov
inc
ja
ret
cs
test
ret
stos
fiadd
mov
neg
leave
dec
pop
lock
int3
in
jmp
mov
push
and
rol
aad
sub
mov
(bad)
das
movs
loope
cmp
loopne
sub
mov
cld
xchg
js
jae
nop
mov
mov
or
sbb
cmps
cmp
pop
dec
scas
dec
aaa
dec
js
mov
mov
cmp
int
mov
pop
retf
dec
hlt
pusha
xchg
and
jl
dec
adc
jg
jns
dec
mov
movs
les
adc
jae
xchg
mov
xchg
imul
xchg
sar
cmp
or
jmp
lds
or
cmp
add
outs
(bad)
mov
and
repnz
(bad)
je
xlat
pusha
test
and
push
cmp
ins
pop
lods
jbe
xor
dec
add
popa
xchg
lahf
ds
jmp
mov
inc
in
(bad)
xor
jmp
sbb
mov
cmp
adc
jae
mov
in
or
or
push
and
call
mov
adc
jg
and
icebp
jg
jp
(bad)
rcl
mov
pop
sahf
lock
pop
test
sbb
or
adc
dec
test
imul
jle
xchg
cmp
ss
daa
cmp
cld
mov
or
xchg
stos
push
in
scas
(bad)
pop
inc
icebp
mov
fisub
or
inc
and
enter
je
or
cmp
pop
sub
dec
in
add
pusha
imul
mov
adc
ds
retf
adc
or
push
cdq
pmulhuw
in
jmp
test
and
dec
mov
mov
mov
enter
fcom
in
mov
(bad)
push
sbb
sub
pop
(bad)
push
jbe
fdivp
sbb
imul
aas
arpl
xor
aad
dec
inc
test
push
add
push
mov
in
push
retf
out
int3
push
in
and
in
and
sub
pop
push
(bad)
mov
(bad)
jg
inc
xor
in
jge
xchg
and
mov
fcom
jb
mov
pop
jmp
hlt
clc
push
or
push
out
pop
out
cmps
sub
mov
loope
pop
fcom
retf
fldcw
in
call
mov
movs
pop
pop
aaa
fwait
leave
cwde
and
(bad)
dec
mov
int
loope
call
leave
dec
mov
into
mov
push
cli
loopne
cwde
js
out
(bad)
cdq
cmc
xchg
lea
es
mov
retf
jecxz
mov
mov
mov
(bad)
shl
dec
(bad)
aaa
ja
push
lods
xor
cmp
test
add
push
dec
aam
idiv
sbb
xchg
and
jne
xor
icebp
cwde
cmp
data16
mov
inc
mov
fstp
outs
inc
xor
sti
jbe
inc
jnp
(bad)
jle
xor
xchg
int
jb
adc
push
ror
gs
mov
xchg
push
xchg
icebp
dec
push
add
sub
xchg
sbb
cli
mov
mov
int
repz
sub
push
(bad)
xor
jb
adc
mov
int
hlt
mov
push
mov
mov
jp
xchg
xor
adc
stos
jae
fidiv
stc
pop
fadd
ret
push
add
add
fs
and
mov
imul
ss
jl
sub
icebp
xchg
aam
ja
hlt
push
mul
add
push
out
adc
add
or
call
outs
sbb
test
fcmovnbe
push
and
aam
pusha
lods
out
bound
jge
je
pop
(bad)
scas
fwait
or
rol
mov
add
xor
mov
out
xor
mov
aaa
mov
jmp
xlat
sbb
ins
jno
aas
mov
shl
das
inc
xchg
or
xchg
sbb
rcl
outs
fsubr
mov
cld
xor
xchg
inc
mov
push
xchg
retf
jbe
xchg
daa
fldenv
xor
or
mov
push
lods
cmp
xor
and
cs
mov
aaa
sqrtps
mov
mov
or
jl
inc
and
xor
xchg
retf
inc
aam
xchg
ret
leave
mov
jg
or
sar
push
test
push
jae
mov
les
push
test
leave
push
xlat
test
mov
(bad)
fdivr
push
add
out
sub
sbb
out
sbb
push
loopne
xor
ss
ror
jmp
cs
mov
cmp
(bad)
sbb
jae
inc
loope
(bad)
pop
inc
(bad)
pop
push
or
and
dec
inc
jmp
mov
jecxz
lock
ret
sub
jns
mov
cli
clc
xchg
in
test
mul
sbb
mov
fnsave
ret
inc
test
and
outs
mov
mov
outs
js
ret
inc
jns
mov
fld
lods
repz
mov
retf
test
std
leave
sbb
ja
bnd
loopne
jns
mov
pop
int3
add
in
test
in
aam
ror
jbe
and
bound
push
dec
adc
push
js
lods
das
dec
mov
or
xlat
into
mov
cmp
cmps
cwde
or
and
xor
and
mov
mov
sub
cmps
xor
mov
push
pop
pop
push
mov
sti
push
mov
mov
sub
mov
add
cmp
sub
sbb
inc
mov
ret
xor
fnstcw
jle
(bad)
fdiv
sub
pop
push
std
push
mov
pop
int
cmps
pop
and
add
xchg
sbb
sub
pusha
push
mov
or
and
sbb
xchg
neg
shl
xchg
jmp
pop
sub
ins
mov
xchg
fldcw
mov
and
sbb
xchg
test
cmp
hlt
retf
mov
test
ret
fdivr
sbb
pusha
mov
popa
jge
and
adc
pop
dec
inc
xchg
inc
xlat
add
mov
or
inc
sub
data16
(bad)
sbb
fld
das
je
repnz
neg
pop
jnp
lods
into
mov
sub
lock
mov
ja
inc
sbb
jb
push
mov
sbb
mov
fcmovnb
jge
(bad)
push
cmp
out
xchg
sti
inc
jl
ret
xor
popf
pusha
enter
pop
fcmove
sti
jb
push
mov
adc
lods
or
jmp
ins
mov
fidiv
sub
mov
inc
(bad)
jb
jae
add
push
pop
mov
cmp
mov
addr16
or
mul
mov
and
scas
mov
and
adc
aam
push
dec
in
(bad)
sbb
shr
ja
xor
adc
jmp
pop
repnz
fsubr
jmp
xor
aaa
(bad)
xor
adc
adc
movs
mov
xor
mov
dec
out
in
mov
rcr
mov
fsubr
dec
pop
sub
mov
mov
popa
popa
xchg
shl
cli
adc
and
jecxz
fcomp
sub
test
dec
into
addr16
stos
repz
ds
stos
xchg
(bad)
rol
rcl
jmp
enter
push
les
cmp
xchg
sbb
mov
daa
mov
(bad)
mov
mov
addr16
daa
xchg
pop
fadd
dec
jae
dec
mov
imul
xor
cmp
je
fcom
retf
pusha
xchg
mov
les
fs
cmp
xchg
add
mov
fwait
mov
arpl
or
cld
jae
icebp
mov
add
retf
xchg
nop
and
rol
imul
add
pusha
in
in
or
jbe
inc
scas
pop
lock
ss
or
enter
xlat
aam
out
pop
and
out
mov
pop
xchg
fcomip
cwde
xchg
stc
cdq
ror
cmp
xchg
shl
adc
cdq
jg
or
fistp
out
inc
lods
mov
ins
(bad)
push
packssdw
pop
in
or
jmp
ja
outs
adc
rcl
int3
jecxz
outs
xor
ret
out
push
shl
in
lock
cmp
xchg
cmps
push
push
xchg
daa
xor
mov
mul
aas
rol
cmp
adc
cdq
call
and
cs
cld
mov
ret
push
inc
test
fwait
or
ret
dec
mov
fstp
mov
cmp
outs
xchg
in
aad
xchg
popf
jne
inc
outs
adc
jecxz
and
test
or
pop
sub
xchg
push
jge
push
out
dec
aam
lds
xor
and
and
in
xchg
fadd
sbb
pop
(bad)
mov
or
sub
mov
mov
lea
inc
cmp
pushf
and
mov
jo
xchg
fdivr
test
les
add
int
imul
jne
mov
cmp
mov
push
push
jp
dec
jl
or
cmp
popa
retf
adc
scas
dec
cmp
lds
(bad)
xchg
push
call
adc
call
push
mov
aas
loop
xor
pop
inc
push
ret
jae
cmp
arpl
hlt
sub
xor
jg
or
outs
push
xor
in
xlat
aam
dec
push
jmp
das
adc
push
loope
sub
ins
jge
pop
in
and
mov
shl
push
add
cdq
add
call
test
addr16
in
push
add
and
mov
jb
or
add
mov
pusha
enter
loopne
inc
popf
imul
test
mov
test
sub
sbb
pop
adc
or
das
mov
push
cmc
(bad)
mov
cwde
pop
jmp
sbb
inc
cli
mov
out
or
retf
cmc
xchg
addr16
push
(bad)
sbb
in
jno
leave
adc
xchg
xchg
pop
nop
(bad)
or
scas
jb
sbb
pop
sbb
and
mov
div
mov
mov
rcr
push
jmp
xor
pop
fldenv
jbe
inc
xlat
cli
inc
xchg
mov
mov
loope
enter
mov
cmps
dec
jns
adc
scas
mov
pop
loope
repnz
push
enter
sbb
xor
xabort
ss
xchg
mov
pop
cmc
mov
lods
fucomp
imul
sahf
cmps
data16
sub
and
ss
jl
add
sub
ret
xchg
fidiv
cmp
mov
cdq
sar
mov
sbb
xchg
in
addr16
xchg
adc
sbb
or
inc
cwde
test
aas
(bad)
push
jb
inc
sbb
xchg
sub
sbb
mov
in
shr
rcl
xchg
xor
outs
neg
sub
(bad)
pop
sar
xchg
xchg
loope
xchg
loope
jg
cmp
sbb
xlat
rol
sub
into
fiadd
enter
in
(bad)
rcl
int3
mov
sub
call
xor
out
jnp
(bad)
leave
push
fistp
ds
mov
cli
mov
dec
sub
push
xchg
push
repz
add
repnz
in
lods
into
imul
mov
and
cmp
mov
pop
mov
ret
push
and
daa
int
mov
hlt
and
test
cmp
cli
aam
sub
sbb
xchg
jae
mov
inc
mov
repz
or
dec
stos
and
rol
push
jne
mov
jl
mov
movs
inc
cmp
iret
mov
inc
xor
or
rol
(bad)
lods
adc
iret
pop
add
sar
sti
rol
or
adc
bt
loop
mov
or
push
push
mov
or
pop
mov
mov
adc
jge
push
mov
ds
sbb
je
scas
nop
cld
sbb
or
in
int
imul
pop
out
ja
inc
(bad)
retf
dec
bound
push
int
cli
rol
loopne
mov
sti
leave
mov
stos
xor
pushf
aad
and
push
mov
call
sbb
jge
pop
xchg
inc
test
int3
leave
pop
movs
cmp
mov
std
sub
cmp
ret
cmp
cmps
out
mov
aas
xchg
stc
cmps
jecxz
loop
or
in
sahf
jmp
mov
sbb
aas
cmp
clc
(bad)
ins
ins
sbb
push
sbb
(bad)
dec
int3
je
jo
or
and
fcom
pop
adc
mov
mov
stos
xchg
dec
scas
mov
push
and
in
lahf
sbb
mov
lock
dec
jmp
popf
ins
loop
sahf
imul
dec
les
loopne
out
cmp
ins
js
sbb
pop
test
ins
bound
fld
in
mov
aas
ins
xor
xchg
inc
ja
mov
xchg
adc
dec
int3
xchg
mov
fneni(8087
divps
pushf
fldenv
xor
pop
es
inc
out
jl
add
shr
mov
add
pop
mov
push
test
adc
mov
sub
pop
popf
call
dec
neg
pop
push
in
mov
cmc
mov
pop
fmul
pop
(bad)
mov
jbe
sub
je
fs
cmp
push
loop
popf
mov
(bad)
mov
mov
test
xlat
sar
xchg
loop
icebp
call
jmp
cmp
jle
and
jae
aas
sbb
dec
scas
and
cld
rol
bound
add
ret
push
xchg
push
imul
xchg
cmps
mov
adc
lea
xor
xchg
mov
leave
arpl
(bad)
fst
jp
in
fs
inc
jmp
mov
xchg
cli
mov
out
ficom
sbb
xor
mov
mov
add
jno
xchg
mov
(bad)
mov
cli
movs
stos
les
pop
cmps
mov
jns
cs
sub
mul
jg
jg
stos
add
aaa
xor
jmp
shr
cld
lahf
ins
or
or
je
or
cmc
(bad)
cmc
enter
lds
(bad)
rcl
or
sub
rcr
mov
out
rcr
sbb
je
ins
xor
imul
pop
pop
ficom
sbb
aad
fwait
pusha
fdiv
or
mov
dec
pop
sti
in
jmp
pusha
mov
xchg
mov
cmp
test
leave
es
sub
or
xchg
inc
push
adc
add
add
push
(bad)
stos
xlat
lock
add
mov
xor
aas
ja
mov
mov
pop
frstor
(bad)
and
jmp
add
stos
stc
dec
cs
(bad)
xor
xchg
aas
je
pop
adc
retf
mov
sub
inc
fwait
iret
lds
cmp
call
fnsave
cwde
data16
test
aas
std
out
fld
pop
xor
mov
rcr
enter
scas
rcl
mov
jmp
and
std
pop
lods
outs
clc
out
int3
add
aas
pop
inc
xchg
jge
ins
jne
cmp
in
daa
push
cmp
ins
nop
imul
ret
jo
sbb
adc
loop
(bad)
and
push
ins
div
test
into
xchg
lds
cs
jbe
aad
imul
addr16
pop
sbb
loope
retf
sbb
jmp
push
je
xor
jg
pop
lea
sti
shl
xchg
push
mov
pop
je
les
call
cwde
retf
jmp
ja
jmp
shr
inc
test
dec
loop
shr
ficom
fwait
or
jecxz
sbb
cmp
arpl
bound
sbb
mov
mov
and
lds
xchg
fwait
sbb
sbb
cli
and
xor
int
pop
push
xlat
or
mov
loope
mov
or
test
popa
inc
pop
cdq
bound
retf
fimul
or
neg
jns
out
xchg
mov
bound
fldcw
je
xor
and
das
pop
aam
pusha
xchg
nop
enter
lods
or
jb
jne
in
enter
es
inc
and
not
out
sub
fisubr
and
and
cdq
lds
fwait
jb
mov
mov
retf
icebp
xlat
out
sar
clc
hlt
hlt
xor
out
addr16
inc
cdq
movs
adc
pop
fwait
xchg
arpl
sub
add
and
xchg
in
sbb
movs
mov
jno
lods
xchg
add
xchg
in
nop
cmc
popf
xchg
xor
jmp
int3
ss
bound
push
sub
rcl
or
arpl
inc
fsubr
pop
jnp
add
xchg
push
repz
fwait
aad
fcomp
das
das
addr16
ins
fnsave
lea
push
mov
repz
add
ret
outs
xor
sub
or
arpl
fstp
fs
jecxz
pop
or
enter
retf
mov
mov
jl
cmp
test
pop
push
repnz
mov
cmp
les
add
ins
jmp
js
jno
std
xor
in
out
ss
dec
leave
push
in
mov
push
int
push
push
stc
or
iret
daa
dec
jmp
outs
xor
xor
add
(bad)
hlt
aam
(bad)
push
push
test
dec
sub
push
jns
jge
push
push
inc
pop
or
inc
loope
cmp
movs
jle
jnp
inc
iret
test
in
mov
sub
ret
jb
bound
test
pop
neg
jle
jmp
push
inc
popf
nop
(bad)
into
out
sub
adc
out
daa
les
(bad)
(bad)
jns
xor
mov
xlat
fidivr
sub
fwait
cmp
pop
cld
mov
out
dec
xchg
inc
push
test
and
push
or
cmp
ds
rcr
sub
mov
es
in
aas
jae
int3
jl
in
dec
sbb
nop
mov
imul
test
sub
xchg
pop
sub
jnp
mov
jnp
jo
ror
and
repnz
fiadd
sbb
cmp
mov
mov
cmps
or
in
or
mov
enter
daa
fmul
stos
ds
imul
std
push
les
mov
pop
sbb
jge
sub
out
cmp
mov
movs
sub
fdivr
jp
add
jmp
ds
push
mov
aas
xor
mov
aam
inc
aas
dec
inc
jmp
sahf
(bad)
repz
push
test
add
xchg
(bad)
mov
dec
scas
call
adc
sub
rcl
pop
push
cld
inc
jge
cs
movs
mov
jmp
test
cmp
cmps
or
icebp
adc
xchg
iret
adc
mov
shl
dec
iret
retf
push
lods
mov
or
rcr
sbb
(bad)
mov
test
out
or
mov
or
sub
out
cld
xor
stos
out
add
dec
cdq
mov
out
xor
vpmaxub
cmp
or
movs
loop
and
inc
je
call
fild
retf
sbb
dec
movs
fnstenv
retf
push
cs
lds
or
jbe
call
rol
pop
sbb
fstp
xchg
shl
movs
or
or
arpl
shr
(bad)
sub
sub
loope
(bad)
and
jmp
sub
out
in
push
popa
inc
sbb
into
ffreep
and
push
cdq
loope
aad
adc
dec
mov
sbb
add
xchg
mov
ins
jb
dec
push
cmps
sar
movs
sbb
mov
jmp
frstor
xor
cmps
push
add
and
pop
sbb
mov
dec
and
ss
out
or
dec
adc
mov
or
jnp
enter
inc
pop
lods
test
mov
xchg
xchg
in
cs
and
add
out
movs
push
pop
sbb
movs
push
jle
les
les
test
dec
adc
call
cdq
inc
scas
js
mov
test
das
sti
(bad)
mov
inc
mov
mov
mov
imul
jno
mov
pop
inc
mov
movq
call
iret
lahf
or
cmp
push
pop
lds
xor
cmp
mov
cwde
retf
xor
inc
cmp
out
and
in
adc
test
jmp
ret
or
mov
hlt
out
int
dec
sar
test
sbb
sub
gs
das
adc
adc
mov
in
std
pop
cmp
xchg
xor
movs
sbb
mov
jp
pop
add
adc
sbb
push
shl
idiv
dec
pop
and
fcomp
stos
add
fisubr
mov
shl
push
or
sub
inc
add
push
mov
xor
repz
mov
pop
mov
scas
push
mov
adc
or
test
and
adc
mov
leave
sbb
lea
enter
ins
shl
xlat
mov
add
mov
xchg
cs
jp
or
mov
mov
dec
cmp
cmp
sub
jno
and
adc
in
retf
or
sub
in
dec
push
and
pushf
dec
xchg
mov
or
jo
(bad)
lods
inc
scas
dec
inc
jge
(bad)
lds
aas
repnz
dec
dec
jo
ret
retf
cmps
and
ret
pop
stos
or
mul
xchg
jle
xor
rcr
aaa
add
xchg
push
lds
fisttp
adc
sbb
pop
cmps
mov
mov
jg
iret
leave
sub
sub
mov
ror
shl
push
sahf
xor
outs
jg
cdq
mov
fbstp
and
pushf
push
je
inc
call
ret
mov
inc
in
dec
outs
inc
xor
out
mov
sub
sbb
test
popf
(bad)
lods
jmp
xchg
lea
jbe
sahf
leave
mov
sbb
popa
retf
popf
aad
lods
test
cmc
inc
jg
mov
iret
inc
mov
test
mov
mov
or
retf
shr
sahf
mov
aad
sub
test
or
ror
adc
inc
movs
call
mov
sbb
repnz
loopne
adc
pop
and
test
push
push
out
jb
adc
or
iret
and
jl
mov
neg
cmp
push
outs
test
mov
inc
sbb
data16
stos
sbb
fidivr
bound
int3
call
cmps
sahf
arpl
inc
stc
(bad)
out
pop
stc
std
xor
lahf
cmp
in
add
call
or
add
ja
movs
or
daa
popa
mov
mov
adc
imul
inc
mov
pop
xchg
cmc
push
jns
(bad)
fsub
pop
cld
stos
sti
hlt
scas
mov
fld1
push
sbb
cmc
push
jnp
test
rol
inc
and
adc
mov
sbb
mov
test
or
jae
jg
mov
push
leave
jo
xchg
adc
loop
mov
pop
imul
frstor
mov
adc
jno
pop
jecxz
rcr
sbb
mov
movs
xchg
leave
add
bound
adc
or
xor
stc
lods
popf
pushf
iret
xchg
and
or
fabs
dec
cmp
xchg
lock
fidiv
imul
repnz
mov
push
retf
sub
out
out
xor
test
test
leave
sbb
shl
arpl
sub
sti
mov
ds
jno
pusha
dec
ja
jle
pushf
jmp
loopne
dec
cmp
and
xchg
lds
inc
std
fsubr
push
pop
repz
and
xor
pop
iret
adc
fild
in
jnp
imul
adc
js
or
cpuid
call
fadd
fwait
jl
sbb
stos
out
xchg
xchg
xlat
(bad)
xchg
movs
jne
xchg
and
outs
cmp
cmp
cmp
adc
and
fdivrp
clc
xor
(bad)
dec
cli
mov
sub
ins
mov
out
cwde
imul
std
ss
mov
(bad)
jecxz
mov
jmp
or
dec
and
stc
ja
fs
in
imul
fmulp
jno
cdq
dec
sub
call
and
xchg
(bad)
data16
cmp
movs
and
mov
or
push
cs
outs
jmp
cld
pushf
and
jno
push
dec
dec
dec
pop
pop
mov
xchg
push
mov
add
hlt
xchg
adc
push
outs
adc
ins
in
aad
stc
and
cld
sub
retf
call
neg
xchg
sbb
add
ss
pop
cmp
loop
or
sbb
arpl
call
inc
(bad)
and
jnp
mov
jmp
imul
push
add
retf
adc
jo
jmp
or
inc
repnz
sbb
sbb
scas
js
in
sub
xor
sub
sti
cs
or
cmps
jl
in
jg
xlat
mov
mov
and
inc
data16
add
imul
fstp
cmps
cmc
fcmove
pop
sub
push
sbb
xchg
push
(bad)
(bad)
xchg
ret
and
jp
dec
jle
mov
dec
cmp
xchg
jmp
dec
retf
xor
jge
cmps
sbb
jno
or
(bad)
stc
dec
retf
push
and
mov
and
es
and
xchg
outs
push
pop
(bad)
je
clc
mov
or
mov
lods
arpl
cld
or
xor
pop
cmps
div
out
mov
popa
bound
push
out
stos
vpunpckhqdq
cmp
fisub
(bad)
cmps
popf
xchg
je
daa
add
std
std
mov
movs
retf
(bad)
adc
cmp
jl
ret
xchg
stos
jecxz
shr
rcr
sub
mul
sub
dec
mov
icebp
ins
dec
dec
mov
aaa
cmp
popa
jmp
xor
sbb
xor
sbb
sub
mov
cmp
add
mov
ds
push
mov
das
xchg
push
xchg
arpl
inc
sub
xchg
in
adc
push
xchg
in
pushf
add
xlat
scas
adc
dec
mov
inc
mov
adc
jb
hlt
into
out
aas
sbb
pushf
sbb
rcr
xchg
fs
push
dec
fimul
sbb
test
push
mov
(bad)
adc
jmp
popf
out
push
mov
mov
movs
test
dec
jle
cmp
inc
je
loop
out
rcr
push
enter
xchg
and
pop
aas
mov
jle
out
lock
add
cs
mov
push
in
je
push
arpl
cli
scas
out
fucomp
ja
push
rol
retf
dec
push
ins
inc
cmp
jnp
add
cli
pop
ss
jmp
ret
pop
mov
(bad)
scas
xor
test
popa
enter
mov
shl
out
adc
leave
mov
retf
mov
cdq
and
pop
and
pusha
test
xor
fiadd
push
div
test
push
xor
lock
(bad)
mov
sti
(bad)
aad
jbe
dec
into
push
or
push
jge
mov
movs
neg
jmp
movs
or
inc
repnz
ja
mov
lds
mov
dec
int
aaa
push
pushf
movs
and
aam
dec
dec
pop
jae
adc
or
pop
cmp
clc
imul
ja
push
jg
dec
pop
icebp
add
(bad)
enter
xchg
rol
sub
std
push
mov
pop
inc
jp
add
jecxz
lods
dec
data16
in
inc
aaa
cmp
cmp
add
inc
add
xor
push
xor
cmps
push
cmc
out
call
cmp
mov
cli
mov
in
bound
shl
rol
inc
jmp
cwde
aas
loopne
repnz
into
push
loop
pop
aam
ins
fadd
cmp
cmp
sbb
or
or
xchg
stc
sbb
cs
push
adc
xchg
mov
cmp
sbb
xor
sahf
js
mov
push
retf
mov
xchg
mov
mov
mov
push
xchg
dec
xchg
inc
lea
lods
mov
dec
sbb
push
cmps
mov
and
mov
push
out
xor
fcmovnbe
mov
je
stos
mov
cmp
xor
cmp
vpcmpgtd
cwde
mov
mov
stc
pop
out
test
pop
ins
mov
mov
dec
(bad)
cli
dec
ds
rol
push
mov
pop
loopne
mov
fisub
(bad)
cli
sub
cmp
jge
ins
ret
mov
fild
lods
mov
fstp
(bad)
fcmovne
fisubr
rcr
out
xchg
push
ins
in
(bad)
and
ins
or
sub
sub
and
mov
dec
push
fwait
sub
mov
int
cmc
retf
(bad)
call
inc
xor
add
push
sub
(bad)
loopne
or
xchg
xchg
ds
popf
test
mov
call
xchg
stos
pop
inc
loope
in
shl
test
leave
and
jle
sub
das
out
call
lea
(bad)
or
in
iret
icebp
jae
int3
je
sub
mov
pop
mov
adc
push
mov
add
movs
cmp
cli
fstp
fcom
and
(bad)
sti
int
mov
inc
adc
aas
pop
lods
push
gs
add
cld
stc
(bad)
dec
sub
add
imul
mov
sub
sub
adc
lods
xor
push
mov
or
in
(bad)
gs
xor
inc
fxch
sub
pushf
iret
mov
jno
clc
and
int3
push
xchg
mov
dec
cmp
jnp
fild
cmps
cmp
lods
test
mov
mov
push
inc
push
adc
jmp
or
test
outs
adc
test
std
mov
add
add
xchg
dec
stos
lods
retf
mov
or
dec
rcr
jmp
in
push
inc
xchg
cmp
leave
pop
push
adc
(bad)
pop
mov
movs
mov
mov
cmps
mov
dec
xor
test
(bad)
xchg
mov
xchg
ds
inc
xchg
ror
popa
and
je
imul
dec
add
xchg
fdivr
repnz
leave
in
(bad)
sbb
fs
dec
push
cmp
fld
jecxz
inc
mov
add
outs
and
sub
and
fistp
inc
adc
push
mov
pop
sti
pop
adc
jae
(bad)
js
cmp
not
fs
gs
imul
mov
jmp
lods
cmp
(bad)
jb
cmp
cs
jmp
adc
(bad)
(bad)
add
call
xchg
add
bound
aam
push
pop
mov
adc
add
sar
mov
call
imul
repnz
repnz
iret
lods
lea
sbb
repnz
cmp
jle
es
shr
icebp
and
cli
add
(bad)
mov
dec
shl
inc
outs
pop
test
adc
aad
mov
cld
lods
hlt
add
les
aas
hlt
in
and
jmp
jp
and
jae
mov
gs
jl
das
lods
retf
movs
enter
inc
jmp
into
cmp
stc
popf
pop
movs
mov
cs
sub
or
mov
les
pop
shr
js
xor
dec
mov
rol
push
lahf
jmp
cwde
jne
sbb
outs
or
xchg
loop
mov
je
ss
fst
lods
div
jmp
imul
inc
sbb
sahf
mov
mov
xchg
int
mov
push
cmp
cmp
push
jae
adc
xchg
mov
pop
or
(bad)
rcl
js
les
mov
mov
jmp
pop
shl
(bad)
push
aaa
dec
sbb
xchg
jg
push
mov
xor
(bad)
mov
sub
inc
in
lds
mov
or
leave
pop
mov
jle
rol
aaa
mov
sub
stos
(bad)
jbe
out
sub
xor
ins
inc
sbb
repnz
call
int3
adc
dec
adc
inc
movs
imul
or
fnsave
test
and
xor
xor
stos
fs
mov
ins
outs
cli
popf
lods
jno
pop
imul
shl
push
cld
fisub
inc
sub
js
popf
mov
stos
jb
inc
jb
pop
and
(bad)
in
adc
test
push
jno
mov
pop
push
hlt
dec
aaa
push
inc
loopne
push
pop
call
retf
lahf
hlt
jmp
pop
and
pop
inc
dec
cmps
cmp
daa
loopne
cmc
pop
test
ficomp
adc
mov
movs
sbb
mov
outs
lods
jg
lock
dec
cdq
bnd
push
call
xor
or
lock
aad
test
call
imul
stos
adc
fmul
mov
call
pop
mov
std
or
lods
or
push
fdivp
ja
mov
fmul
fidivr
das
cmc
stos
mov
sbb
bound
xlat
ret
scas
out
pop
mov
cmp
push
xlat
xchg
les
xchg
add
or
xor
jle
sub
int
and
not
stos
test
int
xchg
pushf
and
mov
mov
pop
xchg
psubusb
retf
pusha
sub
push
and
push
xchg
cmp
xchg
icebp
ja
xlat
movs
outs
in
out
pop
aas
scas
mov
push
cmps
cmc
dec
add
iret
pop
ret
aam
enter
jle
call
xor
rcr
push
cmp
test
into
repnz
jb
pop
sbb
aam
mov
mov
pop
(bad)
lea
push
mov
retf
push
inc
sub
xchg
and
inc
into
cmp
sub
add
shl
ret
(bad)
or
inc
xchg
jle
shr
lahf
test
pop
mov
xchg
mov
xchg
xchg
outs
je
mov
dec
sbb
scas
ret
xchg
jmp
ja
mov
adc
arpl
fchs
sbb
ret
pop
xlat
ds
sti
push
jno
inc
jmp
icebp
and
push
add
sti
rol
adc
mov
add
sbb
jns
dec
dec
cmps
mov
nop
or
cmp
xor
xchg
mov
fsubr
push
jmp
or
lods
sbb
loop
ficomp
aaa
inc
call
sbb
in
add
inc
sub
retf
cli
hlt
xchg
jns
popa
dec
iret
hlt
sbb
dec
inc
ror
inc
out
inc
mov
cmps
add
call
xchg
movs
pop
jg
mov
cmp
bswap
sbb
leave
add
out
xchg
jne
push
inc
xchg
movs
rcr
sbb
inc
sbb
dec
and
ror
call
cwde
(bad)
or
cdq
mov
fistp
mov
jne
jbe
mov
test
jnp
add
lock
sbb
out
push
pop
adc
sar
dec
xchg
out
les
in
imul
aas
xchg
inc
dec
xchg
stc
call
iret
mov
jle
jbe
jnp
or
mov
mov
dec
mov
sub
scas
sbb
cmps
sbb
into
out
cmps
sbb
or
adc
xor
sbb
pop
xor
cmp
sub
rol
lock
les
test
mov
mov
repz
je
xchg
add
pop
pop
popf
sbb
das
or
ret
push
and
stc
mov
mov
jp
sbb
hlt
imul
adc
push
adc
imul
test
add
jge
imul
jmp
push
sbb
repz
push
pop
out
cmc
jecxz
adc
(bad)
pop
inc
jns
repz
fsubp
sub
sahf
repz
test
inc
std
or
jns
and
dec
bnd
loopne
(bad)
mov
inc
(bad)
out
repnz
out
rcl
bound
pop
imul
and
mov
xchg
ja
int
jmp
(bad)
adc
pushf
jmp
adc
and
rcr
or
into
cmp
push
mov
adc
dec
mov
mov
xchg
mov
pop
rol
iret
xor
cmp
adc
repnz
nop
shl
push
fistp
jle
lods
icebp
pop
jp
in
xor
push
ins
and
es
sti
lods
cmp
pop
es
dec
inc
lods
test
mov
push
mov
test
repnz
or
dec
scas
mov
fisub
push
cmc
and
add
fsub
pop
imul
jns
jno
xlat
jle
mov
xchg
mov
pusha
aad
ud2
mov
push
pop
add
pop
mov
aad
vpsubb
stc
loope
inc
or
push
xor
xchg
push
xchg
push
jae
out
dec
push
mov
or
repz
in
int
mov
cmc
int
ror
xchg
fwait
retf
dec
fdivr
xor
fild
ss
pop
mov
sbb
pop
sahf
stos
or
(bad)
jle
push
test
jge
fld
imul
pop
jg
stc
or
retf
push
repz
sub
lea
sbb
fdivrp
dec
in
adc
pop
mov
int3
stos
stc
xor
daa
mov
fsincos
jp
mov
dec
sbb
test
mov
inc
pop
dec
inc
loop
repz
sahf
out
adc
in
rcl
call
adc
into
icebp
aas
xor
pop
mov
push
cmp
aam
mov
pop
pop
enter
lods
daa
mov
jnp
cmp
pop
(bad)
and
retf
push
mov
ret
cmps
xchg
cld
nop
mov
scas
xor
xchg
fadd
out
clc
xchg
sub
and
add
mov
mov
loop
adc
inc
xchg
sbb
sar
int
or
ja
pop
pusha
out
scas
inc
mov
mov
xor
leave
add
aas
push
or
push
outs
push
dec
loop
xchg
cld
push
mov
xor
cmp
je
imul
xor
fwait
adc
test
push
push
gs
mov
add
xchg
outs
jbe
test
out
cmps
adc
jle
loopne
aaa
in
xlat
cmps
pop
je
sar
movs
pusha
xor
push
mov
add
fisubr
(bad)
sub
hlt
(bad)
mov
iret
mov
cmp
xor
imul
imul
xor
ds
or
inc
shl
xor
mov
add
jae
inc
jbe
push
sbb
jp
call
mov
push
mul
mov
inc
sahf
in
sbb
push
sbb
pop
fdivr
lahf
cs
xor
retf
cmp
cmp
or
sub
out
imul
mov
xor
or
mov
cmp
cmps
pop
loop
not
inc
retf
fwait
lds
mov
dec
xchg
jae
bound
in
out
(bad)
shr
pop
(bad)
mov
sar
or
ffree
mov
inc
push
mov
mov
pop
mov
cmp
xor
sbb
ret
clc
inc
add
(bad)
imul
retf
and
pop
mov
jp
mov
ins
out
xchg
arpl
dec
push
cmp
mov
mov
or
rol
aaa
sub
outs
cmp
out
mov
shl
pop
fiadd
add
xchg
or
scas
push
fcomp
pusha
push
loopne
fild
and
cmps
sbb
ss
xchg
loop
sbb
push
repz
push
call
pop
je
jae
cmp
(bad)
movs
pop
pop
iret
lods
aam
adc
cmp
inc
inc
les
lock
adc
lods
add
sub
out
dec
in
adc
ret
ret
adc
loopne
push
xor
mov
inc
ret
pop
bound
shr
bound
ins
ja
movs
push
(bad)
jbe
leave
cmp
fisubr
inc
add
aas
(bad)
xlat
xlat
test
int3
js
pop
push
int
mov
test
std
cmp
mov
fiadd
jae
mov
mul
iret
fiadd
lds
and
fwait
jecxz
jmp
sti
xchg
vmovd
push
aas
cmp
nop
jns
imul
xor
loopne
test
(bad)
cmp
mov
mov
push
mov
jo
inc
rol
inc
xor
mov
mov
jno
push
pop
push
jmp
cmp
adc
push
dec
stos
dec
repnz
daa
fwait
fwait
jle
sbb
xchg
stos
(bad)
cwde
pop
(bad)
sahf
int3
call
and
jns
mov
retf
ins
mov
jnp
xchg
aam
add
cs
mov
pop
push
and
outs
loop
jg
repnz
mov
add
xlat
cli
sbb
retf
fldcw
popa
jmp
xor
xchg
ret
call
jno
scas
ret
and
lods
test
fld
inc
shl
adc
sbb
xchg
jge
mov
(bad)
and
dec
xchg
aas
popf
pop
xchg
in
xor
(bad)
push
mov
mov
shl
repnz
mov
add
mov
call
jne
add
out
mov
push
mov
inc
jno
shl
call
sub
ins
cmp
repz
xor
adc
pushf
xor
sub
not
int
leave
test
imul
add
mov
sbb
lock
push
push
xchg
xor
fldcw
xchg
ret
inc
adc
push
int3
ins
ss
in
iret
mov
fnsave
in
daa
pop
arpl
in
push
aad
mov
sahf
sub
ins
jp
das
std
mov
(bad)
jg
xor
cmp
(bad)
ror
cmp
jmp
fdivrp
pop
push
fucomi
(bad)
lods
push
clc
sub
popa
out
je
xchg
add
mov
mov
imul
pop
xor
pushf
mov
sbb
ins
pusha
push
jmp
push
adc
add
adc
pop
hlt
mov
add
and
in
nop
xor
pop
popa
sar
dec
sahf
shl
dec
retf
and
push
cmps
outs
(bad)
das
add
cmp
into
movs
mov
(bad)
jp
adc
cld
mov
ret
imul
xor
mov
xchg
fst
test
xor
aaa
mov
xor
stos
cmps
fcomp
(bad)
lods
jns
and
in
jp
and
xchg
inc
popa
test
or
fisubr
mov
jg
and
adc
mov
test
cmp
push
sbb
loop
rcl
call
add
push
jno
mov
dec
(bad)
in
and
sub
push
xchg
xor
jns
scas
les
push
pop
xchg
mov
jg
mov
mov
xchg
inc
rcr
int3
fdivr
xor
loope
adc
in
dec
mov
mov
pop
stc
cmp
in
leave
jl
inc
adc
jbe
clc
rcl
ins
clc
xchg
into
adc
movs
popa
adc
adc
es
mov
dec
xor
or
push
arpl
adc
and
sbb
cli
ins
stc
and
clc
call
xchg
and
inc
test
jne
jl
stos
jle
stos
xchg
ret
popa
sbb
inc
shr
ror
xor
(bad)
stc
pop
sbb
jle
jge
aam
cmps
mov
std
(bad)
ja
mov
inc
pusha
xchg
stos
jle
leave
in
ret
mov
(bad)
push
inc
cld
rcl
add
out
rcr
push
inc
push
stos
add
in
outs
cmp
mov
mov
scas
push
pop
pop
adc
mov
arpl
adc
sub
mov
sti
sbb
add
out
pop
dec
sub
inc
cld
std
sub
push
inc
out
jbe
mov
inc
add
repnz
shl
(bad)
ins
ja
sahf
outs
loope
bound
dec
retf
stc
and
sub
cmps
sub
xor
rol
nop
jnp
xor
cmp
pop
add
xchg
fwait
sub
pop
jb
cmp
lahf
mov
aad
jbe
movs
mov
cmp
fs
jge
dec
pusha
xchg
mov
adc
mov
push
add
jl
cmps
and
add
adc
test
pop
mov
sbb
retf
mov
mov
cmps
lods
adc
mov
icebp
(bad)
cs
xchg
out
mov
pop
xchg
fst
jbe
jns
or
inc
mov
inc
jbe
loop
fdivr
sub
lds
sub
pop
(bad)
lock
mov
push
out
xchg
sub
dec
fisubr
ret
push
xor
clc
xlat
cdq
xor
pushf
xchg
adc
mov
and
sub
dec
xchg
pop
pop
adc
mov
retf
xor
xor
add
sub
iret
xchg
pop
loop
rcr
movs
cmp
and
lods
not
cwde
out
cdq
inc
mov
sub
adc
repnz
dec
stc
arpl
es
lock
shr
mov
mov
rcl
loope
jae
xchg
fcom
xchg
push
scas
retf
lods
popf
cmp
test
jge
cs
scas
xchg
xchg
or
or
mov
jns
rol
ja
sbb
test
pop
add
enter
test
(bad)
fnsave
mov
das
stos
dec
fs
xor
pop
mov
cmp
xor
pop
adc
push
dec
inc
add
outs
imul
in
xor
mov
outs
sub
mov
xor
xchg
test
imul
dec
mov
or
lahf
jmp
sti
push
cmp
dec
lock
xchg
popf
pop
mov
xor
es
pop
push
cmp
fsub
pop
movs
jo
sahf
or
adc
pusha
and
inc
dec
xchg
push
fisttp
test
popa
jp
xor
mov
and
xor
xchg
movs
test
inc
jecxz
sbb
xor
mov
pop
cld
ror
ficom
jge
xchg
adc
shl
in
iret
call
aam
popf
dec
lods
sbb
(bad)
into
pop
adc
jg
pop
aam
push
cmps
xchg
inc
xor
popa
mov
in
or
mov
and
ins
(bad)
cmp
je
mov
dec
or
cdq
jle
ins
bound
loop
arpl
mov
sti
xor
push
mov
daa
fimul
ret
mov
lods
pop
imul
int
push
xchg
inc
mov
les
xchg
gs
mov
std
pop
push
dec
or
jae
or
nop
clc
pinsrw
and
js
das
add
call
adc
dec
adc
addr16
dec
pop
adc
dec
mov
sbb
jns
mov
fndisi(8087
cmp
jae
xor
stos
lahf
jge
mov
fs
out
sbb
mul
sbb
dec
sub
ss
cs
cmps
mov
mov
and
enter
add
outs
push
rcr
ret
jle
or
(bad)
adc
adc
gs
push
lahf
repz
mov
or
or
out
test
jmp
repz
sbb
sahf
mov
int
xchg
and
test
ret
movs
ret
mov
add
jne
mov
sbb
movs
sbb
xchg
or
hlt
fimul
mov
and
or
sbb
push
add
je
cmp
mov
sub
pop
or
gs
push
push
dec
pop
fcom
dec
push
add
mov
cmp
and
mov
and
dec
dec
cmp
test
inc
rcr
pop
add
and
call
movs
(bad)
or
xor
or
mov
aaa
and
js
jg
lods
mov
mov
push
pop
ret
xchg
test
jecxz
lock
sub
outs
and
adc
cs
inc
daa
adc
sahf
int3
or
movs
or
inc
or
or
mov
dec
mov
arpl
fimul
test
idiv
daa
or
sar
adc
sbb
outs
aam
mov
imul
test
mov
pop
pop
or
shl
mov
inc
cmp
test
jle
addr16
sbb
jbe
shr
pop
jae
retf
and
popa
dec
jo
push
mov
nop
test
scas
dec
ja
pusha
cmp
hlt
mov
jb
aad
cmp
xchg
xor
adc
xchg
repz
pop
bnd
daa
stos
pop
lock
and
call
add
repnz
xchg
inc
ins
loop
imul
fisub
(bad)
sub
adc
push
daa
les
mov
xlat
jmp
out
rol
adc
nop
les
cmp
or
gs
xchg
push
push
pusha
rcl
loope
pop
mov
mov
mov
push
mov
mov
out
retf
push
mov
sti
mov
loopne
cmp
mov
in
push
bound
sbb
neg
addr16
and
xor
jl
mov
es
push
jl
icebp
pop
repnz
jge
mov
pop
mov
je
fcom
js
cmp
xchg
mov
mov
or
and
ret
xor
sbb
test
sbb
xchg
test
dec
scas
sbb
push
pushf
and
popa
shl
or
push
fnstsw
cmp
stc
xchg
ins
std
in
add
repnz
ror
and
xchg
cmp
test
pop
cmp
adc
sti
add
add
leave
lods
dec
rcr
pop
cmp
sbb
mov
mov
jecxz
jl
dec
adc
mov
call
sub
add
movs
fwait
and
int
adc
add
or
popa
fidiv
cmps
sub
and
jmp
(bad)
fxch
cmps
push
mov
xor
or
inc
xchg
icebp
or
push
mov
dec
cmp
sub
xor
xor
je
stos
inc
dec
xchg
das
aaa
fild
daa
jg
fild
shl
js
setg
sbb
sub
mov
cmp
jle
xchg
xlat
loopne
sahf
cmps
sub
(bad)
push
pop
xor
push
xchg
jecxz
push
lods
and
fdiv
xor
pop
ja
push
(bad)
mov
not
mov
dec
jecxz
pop
les
mov
mov
or
and
xchg
int3
adc
das
cs
sbb
sub
xchg
mov
adc
sbb
xor
repz
imul
mov
mov
pop
mov
nop
mov
xor
idiv
sub
jecxz
add
push
aaa
push
stos
jns
fdiv
fstp
pop
or
or
pop
push
pop
add
mov
jno
sbb
push
call
ror
inc
scas
mov
jl
mov
(bad)
and
iret
xor
mov
lahf
fimul
fisttp
adc
enter
xor
inc
sub
jl
push
mov
mov
movs
add
adc
sub
add
bound
pushf
cmps
dec
stos
fcomp
fmul
sbb
loop
push
mov
repnz
jmp
add
sub
mov
fdivr
xchg
xchg
out
xor
sub
sbb
and
cdq
push
sbb
loope
pop
mov
mov
mov
scas
and
fstp
pminsw
mov
cdq
ret
and
and
lock
popa
shr
out
inc
stos
pop
inc
ret
inc
xchg
sahf
and
rcr
rcr
dec
mov
adc
jg
cmps
push
jmp
and
icebp
and
jb
jecxz
push
pop
jp
or
sbb
sar
pop
mov
push
inc
fsubr
mov
ret
repnz
retf
sub
(bad)
je
jl
pop
mov
aad
inc
dec
push
(bad)
movs
arpl
js
inc
das
or
fcom
fs
clc
pop
hlt
or
nop
adc
mov
cmc
sub
fnsave
adc
clc
frstor
adc
mov
mov
xor
or
je
jecxz
xchg
push
pop
pushf
lods
(bad)
jecxz
push
fnsave
push
mov
retf
pushf
enter
xchg
ret
ror
jno
sub
sar
mov
stos
add
repz
add
aas
mov
paddd
mov
cmp
lahf
fdivrp
sar
or
xchg
push
mov
sbb
jns
iret
cmp
sbb
jle
dec
outs
jo
cmp
add
sub
jae
fistp
imul
in
sbb
pop
sbb
xor
not
inc
aaa
sub
addr16
int
jmp
out
rol
push
adc
(bad)
mov
pop
pop
sbb
xor
addr16
and
(bad)
nop
xchg
sbb
ret
add
jl
dec
outs
or
sahf
dec
scas
stc
mov
mov
aas
mov
dec
mov
sub
fbld
push
mov
mov
stc
dec
mov
nop
int
jmp
mov
xchg
clc
movs
mov
(bad)
icebp
icebp
jl
push
outs
dec
jmp
jb
sti
leave
and
cmp
and
ins
fbstp
pop
lods
aaa
push
mov
test
cs
stos
sub
arpl
dec
or
les
cmp
ret
enter
ret
jnp
pusha
adc
adc
mov
dec
jecxz
cli
xchg
and
push
int3
mov
popf
fs
jne
xchg
mov
enter
(bad)
nop
gs
jmp
aas
push
test
jecxz
out
cli
sub
pop
xchg
fbld
pop
cmp
jmp
mov
call
and
pusha
(bad)
fs
dec
arpl
xor
iret
xchg
sub
je
sbb
popw
mov
mov
push
movs
loop
aaa
lods
pop
xor
leave
dec
inc
xor
jmp
fsubr
sub
pop
fcom
mov
ss
sbb
add
jb
rol
test
sub
shl
ins
cmp
icebp
fwait
or
sahf
cmc
out
and
in
movs
cmp
jno
rcl
int
pop
gs
mov
out
inc
out
packssdw
div
fucomp
popf
xchg
adc
mov
push
jnp
dec
in
les
pop
mov
push
pop
mov
movs
test
test
inc
mov
inc
xchg
and
pop
push
aam
ret
in
mov
mov
dec
sub
push
cmc
ss
stos
jge
ins
mov
scas
fcmove
push
les
outs
jmp
jno
daa
xchg
mov
push
lahf
push
data16
out
and
rcr
out
jmp
cmps
dec
fdecstp
sti
test
adc
hlt
lods
xchg
or
ret
das
mov
pop
mov
mov
enter
imul
add
leave
jle
push
xchg
mov
dec
cmps
test
loope
test
mov
pop
into
in
mov
mov
push
jo
pop
rcl
mov
inc
in
and
or
movs
pop
push
mov
fiadd
imul
xchg
mov
push
mov
inc
push
xlat
imul
and
pop
jmp
jbe
lods
call
pusha
mov
mov
mov
leave
mov
daa
jbe
fadd
and
pop
push
cdq
jno
xor
inc
in
shl
loope
adc
lds
push
cmps
gs
jmp
dec
movs
lods
jecxz
push
iret
call
cmp
aad
jnp
push
ret
cmp
xchg
test
shr
les
enter
mov
rol
test
repz
ins
cmps
sbb
stos
mov
in
arpl
rcl
xchg
or
sub
cmps
mov
mov
jmp
jl
mov
test
cmp
adc
push
fimul
jg
cld
pusha
adc
pop
out
mov
js
pop
or
nop
and
xchg
jp
ret
fsubr
pop
xor
ins
cmc
xor
push
les
scas
mov
push
scas
ds
jae
push
mov
xchg
scas
in
xor
sub
sbb
daa
mov
in
lds
xsavec
ins
fcmovnu
xor
aam
js
movs
push
mov
sub
jb
pop
and
xor
adc
outs
sub
jmp
ja
sbb
cmps
les
add
add
pop
fisub
or
ret
xor
(bad)
cmp
adc
lea
jo
sub
in
add
mov
pop
add
popa
sti
in
das
jne
pusha
add
dec
scas
lds
push
lods
jecxz
lds
loopne
mov
mov
cmc
mov
outs
rcl
sub
cmp
aaa
idiv
jno
ja
mov
add
test
pusha
sub
test
test
call
jb
test
jmp
xchg
push
cmps
fwait
cld
dec
sub
out
ins
mov
sbb
lds
xchg
(bad)
int
pop
loopne
movs
push
xchg
gs
cmps
stos
cmp
ins
adc
sti
ja
xor
in
sahf
test
dec
scas
stos
cli
in
cmp
das
xor
and
cwde
ja
sbb
sbb
or
mov
int
pop
hlt
adc
mov
or
inc
cmp
retf
fadd
pop
pop
jg
jecxz
sub
pop
mov
int
fld
rcr
fcmovbe
test
fwait
pop
retf
das
outs
mov
retf
fwait
cmp
inc
dec
fdivr
mov
loopne
clc
dec
sti
btr
mov
push
lds
ss
xor
fcompp
dec
das
loope
mov
pop
fld
mov
leave
or
and
cmp
mov
jg
push
jg
icebp
mov
push
sbb
mov
add
js
ror
dec
retf
push
out
aad
imul
fadd
sbb
or
cmc
test
neg
mov
daa
pop
mov
jb
xchg
mov
fimul
cmp
mov
cmps
or
mov
cmp
sbb
mov
xchg
xchg
nop
sbb
mov
pop
fild
push
scas
mov
pop
add
cld
push
sbb
xchg
scas
cmp
popf
mov
lea
ror
les
pushw
pop
inc
loope
push
mov
mov
lock
rcr
aad
pop
loop
xchg
push
push
and
inc
mov
mov
mov
lds
into
xchg
call
test
mov
(bad)
jg
pop
lahf
sahf
aam
inc
into
xor
cmp
addr16
push
sbb
xor
(bad)
xor
mov
(bad)
fild
xlat
pop
dec
stc
(bad)
repz
mov
pop
fsubr
and
sbb
and
imul
(bad)
cld
adc
call
adc
cmp
into
adc
jge
and
cli
mov
(bad)
aad
mov
and
mov
inc
mov
scas
adc
pop
add
leave
rcl
enter
fcmovne
repz
mov
jecxz
cmp
pop
aad
jmp
dec
fmul
dec
and
dec
test
test
sub
fadd
mov
xchg
push
lds
dec
mov
push
aam
clc
aad
ret
dec
push
(bad)
out
jmp
outs
jecxz
cmps
(bad)
cmp
fistp
sub
sub
ret
fidivr
inc
in
lock
out
and
stos
sbb
enter
into
dec
jp
adc
cmps
cmc
fucom
cli
dec
mov
fucomip
fs
out
xor
ret
scas
adc
mov
inc
and
xchg
arpl
mov
ins
pop
sar
scas
sub
ins
jbe
cmp
inc
movs
data16
or
nop
sub
and
gs
clc
cmp
data16
dec
ret
jb
or
jne
stos
cwde
pop
idiv
retf
and
adc
xor
mov
cld
cmps
add
into
cmps
fwait
xor
push
xor
jge
lock
xchg
jecxz
mov
mov
test
jmp
xchg
in
xchg
in
sub
add
sub
dec
push
cmp
fsubr
mov
or
add
jl
jle
or
mov
out
out
and
dec
xchg
ret
mov
rcl
call
jnp
push
jns
jle
sub
int
jb
pusha
adc
mov
pop
fnstenv
cmps
inc
xor
push
cmp
cld
dec
inc
add
mov
mov
cmp
jb
xchg
cmp
jns
call
neg
mov
and
cli
inc
sub
push
ret
lods
sub
mov
loop
sahf
push
(bad)
jae
jno
push
mov
xor
outs
rcr
fsubr
frstor
cld
sub
xor
lods
push
mov
or
adc
pop
not
xor
out
dec
dec
lea
mov
add
inc
mov
mov
outs
fld
add
hlt
in
inc
add
popf
ror
icebp
dec
or
inc
aas
fidiv
inc
stos
call
movs
jge
mov
fnstsw
sub
jae
jecxz
ret
sbb
loopne
push
cmp
adc
or
xchg
ret
nop
test
xchg
pushf
mov
std
dec
sbb
ja
push
push
xchg
stos
and
pop
pop
mov
mov
mov
mov
popa
dec
jmp
push
xor
mov
repnz
ds
sbb
das
out
in
jge
out
sub
aaa
outs
mov
sar
shl
mov
out
push
mov
push
sub
cwde
and
imul
adc
pop
push
or
mov
push
sar
dec
fs
dec
jmp
pop
jae
cwde
or
es
xchg
xchg
call
sar
or
shr
rcl
cmps
mov
push
jae
mov
cmp
ror
daa
inc
mov
push
out
imul
cmp
jae
or
out
push
popa
shl
subps
stos
and
dec
inc
push
sub
jmp
add
adc
test
imul
imul
loope
mov
loope
jnp
cmp
push
inc
add
sub
fs
add
scas
movs
pop
sbb
and
push
xchg
mov
ret
ffree
ds
js
mov
aaa
mov
in
inc
pop
sub
xor
lods
jns
and
xchg
jl
pop
(bad)
bnd
outs
mov
rol
add
fisttp
std
popa
push
aas
hlt
sar
inc
jne
jmp
outs
jl
add
jle
mov
cmp
push
mov
add
inc
jp
jge
inc
xchg
pop
clc
clc
mov
xchg
push
pop
call
dec
test
or
xchg
and
jno
pop
push
mov
(bad)
push
dec
fwait
xor
rcr
dec
xor
addr16
xchg
in
jle
mov
ret
jb
ficomp
out
add
pop
or
mov
jmp
adc
pop
cmp
or
fistp
xchg
repnz
lea
or
cld
pusha
pop
out
icebp
dec
inc
add
push
bound
in
or
lea
push
sub
jb
hlt
aam
jg
push
mov
jl
shr
call
cmp
pop
push
push
cmc
cwde
nop
sbb
nop
xchg
ret
aad
add
pop
lea
fwait
cmp
add
fsubrp
imul
fst
shr
je
fstp
dec
out
in
xor
xlat
push
adc
sbb
cmp
out
cwde
add
dec
imul
jae
mov
xor
or
inc
and
mov
pop
fcomp
sub
mov
cmp
mov
add
mov
hlt
pusha
hlt
mov
sbb
test
mov
ds
std
icebp
mov
sbb
(bad)
and
clc
ja
sub
retf
out
mov
mov
cmp
je
imul
pop
dec
stos
repnz
dec
ins
add
push
mov
std
fistp
out
jmp
cmc
nop
or
stc
leave
in
(bad)
hlt
sbb
sub
ins
dec
sub
xchg
mov
mov
ins
mov
jecxz
ss
cdq
sub
and
mov
jnp
xor
cmp
ss
imul
sub
popa
adc
nop
ja
mov
xor
jmp
les
in
shl
xchg
push
pop
dec
mov
mov
pushf
cmp
rcl
jl
std
push
lea
jle
mov
adc
popa
or
rcr
dec
add
shl
inc
sbb
jae
add
add
test
add
adc
mov
movs
add
mov
mov
adc
sbb
and
clc
imul
xor
ja
stc
xor
mov
inc
push
cld
shr
fs
inc
(bad)
jmp
sbb
pop
fadd
and
cmps
ja
jnp
mov
push
int
jp
jb
inc
ja
outs
sub
sbb
rcl
aas
lock
ror
fiadd
xchg
or
or
add
aaa
and
jbe
outs
ins
pop
mov
sub
mov
or
push
jge
movs
out
push
cs
and
jno
xor
int
and
cmp
sti
int
pop
xchg
push
lods
movs
inc
shl
sub
pop
adc
xor
ret
adc
ds
fcmovne
or
pop
test
cmps
iret
adc
and
fmul
shl
xlat
sbb
repz
cld
xchg
mov
cmp
pusha
rcr
call
mov
or
cwde
adc
adc
mov
repz
lahf
outs
test
and
push
mov
push
jl
pop
push
cmp
fcmovnu
push
fsub
xchg
mov
aas
mov
jecxz
inc
popa
mov
xchg
fs
aad
xacquire
mov
test
jp
xchg
jmp
xchg
jmp
push
enter
fistp
std
loopne
repnz
loope
leave
cmc
inc
out
icebp
lods
es
arpl
arpl
or
shl
xchg
mov
repz
xor
not
mov
mov
cwde
mov
and
dec
sub
push
repnz
mov
hlt
push
cmp
aam
outs
sbb
in
lods
imul
pop
fwait
call
scas
xchg
out
ja
pop
into
pop
mov
push
xchg
and
lods
xchg
mov
mov
push
mov
fld
sub
sub
mov
mov
into
fcom
(bad)
test
jecxz
pop
sbb
stos
inc
(bad)
std
ret
jg
fwait
push
mov
mov
and
lock
push
scas
adc
inc
imul
mov
xlat
dec
das
add
or
mov
adc
enter
retf
and
out
mov
pop
icebp
jo
call
movs
push
or
call
mov
test
mov
mov
and
call
push
push
movs
mov
out
in
cmp
push
pop
sub
cmp
clc
jmp
mov
adc
xor
daa
ret
push
ss
lock
sti
repz
int
jg
cmp
cmp
loope
sbb
in
lods
push
shl
push
retf
dec
movs
or
es
call
in
sub
inc
jne
pop
hlt
push
pop
fnstsw
mov
in
mov
push
mov
mov
mov
iret
fwait
mov
jo
rol
mov
arpl
xlat
pop
push
stc
stc
pop
mov
call
mov
stc
jns
push
push
jbe
sub
pop
rcr
fwait
push
retf
fucomi
jmp
es
in
in
jge
xchg
popa
and
stos
test
ror
add
add
or
xor
ror
mov
mov
xchg
cmps
or
mov
xchg
add
or
jmp
cmp
fsubr
call
adc
retf
cs
xrelease
lock
inc
outs
rol
aas
sub
cld
out
add
jl
add
cmp
push
lods
jecxz
adc
add
clc
push
test
cmps
push
pop
or
mov
jge
and
popf
pop
aad
xchg
mov
movs
inc
lods
lods
adc
movs
or
jne
loopne
cmp
les
lea
and
(bad)
dec
adc
mov
popa
xor
or
sbb
push
add
stos
pop
jmp
aas
or
cwde
cmc
mov
icebp
xchg
fisttp
pusha
nop
inc
pop
fcomip
push
adc
mov
dec
xchg
sub
and
aad
js
sub
enter
test
int
aad
and
sbb
ja
stos
shl
retf
inc
fbstp
sbb
movs
mov
mov
mov
add
(bad)
outs
jmp
(bad)
fsub
push
mov
aad
jns
dec
rcl
push
push
inc
fadd
mov
mov
mov
fcom
mov
push
retf
popf
and
pop
into
cmp
sub
cmp
pushf
sub
sbb
pop
xor
pop
add
or
or
fisub
dec
mov
jmp
adc
lods
ret
icebp
stos
ds
retf
and
sbb
pop
sub
sbb
lea
sub
lea
pop
into
adc
imul
inc
cmc
dec
out
pop
mov
out
pop
fs
mov
or
dec
in
inc
xchg
shl
inc
fnstenv
stos
push
lods
pop
mov
test
cmp
bound
rol
jnp
mov
fsub
inc
clc
les
gs
adc
push
push
jg
stos
scas
stos
or
stc
mov
xor
test
mov
add
test
aaa
jecxz
outs
add
stc
inc
inc
cmp
icebp
pushf
sahf
aas
pop
cmp
js
mov
cmps
add
loopne
or
add
(bad)
(bad)
xchg
mov
fs
mov
sub
dec
cmp
jl
sub
mov
pop
cmp
in
mov
test
ds
or
adc
fs
fidivr
retf
mov
in
and
(bad)
out
adc
xchg
mov
jg
mov
dec
(bad)
mov
(bad)
mov
call
and
sbb
repnz
mov
add
or
add
jne
cwde
ja
fsub
push
rcr
adc
cmp
sbb
pop
add
retf
jecxz
or
mov
and
imul
add
sub
jmp
jge
mov
je
rol
dec
leave
jecxz
jmp
jmp
fwait
push
sbb
inc
fprem
scas
sub
or
inc
xchg
sbb
bnd
cmps
inc
push
pop
or
sbb
pop
and
stc
inc
mov
mov
lahf
fcomp
dec
mov
cmps
adc
push
pop
sbb
xor
inc
jbe
push
mov
push
aas
in
jg
shr
and
call
push
add
imul
jmp
ret
push
push
popf
pop
jecxz
mov
mov
dec
mov
stos
mov
lods
push
mov
in
cdq
inc
in
jg
xor
fstp
push
lods
popf
and
in
call
cli
das
pop
lock
cmps
repz
lea
dec
or
dec
mov
hlt
inc
fstp
sbb
pushf
jl
ret
shr
mov
inc
mov
test
popf
cmp
inc
mov
jmp
mov
pop
jge
into
inc
mov
xor
or
fsub
and
mov
dec
push
hlt
jge
nop
inc
imul
les
aam
out
adc
sbb
mov
(bad)
xchg
fwait
mov
rcl
mov
xchg
in
aas
ret
dec
(bad)
out
jecxz
xor
pusha
sub
mov
mov
or
bound
mov
aas
mov
and
mov
movs
inc
and
mov
jae
pop
cmp
jae
movs
mov
push
push
push
push
pop
ret
push
in
and
in
cmp
pop
xor
adc
fcom
xor
aad
xor
xchg
adc
and
hlt
mov
loope
je
inc
loopne
ds
call
sbb
or
add
and
cli
test
push
xchg
xor
sub
jb
cmp
cwde
dec
or
mov
dec
cwde
sub
outs
xor
loope
(bad)
mov
xchg
cmp
mov
addr16
or
jmp
adc
out
stos
pop
push
adc
adc
(bad)
cld
mov
fcomi
(bad)
xchg
mov
arpl
cmp
mov
mov
ficomp
bound
xor
(bad)
pop
fcmovu
mov
cdq
data16
call
push
dec
aam
retf
leave
mov
dec
sbb
paddq
dec
sti
sbb
push
out
(bad)
pop
dec
mov
mov
call
mov
sar
and
mov
into
nop
pop
dec
repnz
lods
or
icebp
push
daa
mov
outs
jae
stc
mov
shl
xchg
pushf
hlt
cmps
dec
add
das
pop
sar
mov
pushf
mov
test
(bad)
out
int
sbb
rcr
pop
fadd
pop
fs
or
dec
push
test
pop
mov
sbb
add
pop
cmp
test
xchg
xlat
xor
dec
test
inc
dec
and
or
or
in
adc
dec
mov
add
jmp
mov
cmp
xchg
pop
imul
xchg
js
push
add
arpl
xor
cmps
mov
addr16
push
cmc
adc
mov
or
sahf
cmp
push
mul
push
mov
retf
shl
mov
in
cmp
mov
cmp
call
jne
cmps
push
iret
ret
lock
cmp
pmullw
xchg
cdq
pop
or
push
out
js
aaa
clc
aam
dec
cmp
pop
repz
aaa
in
mov
pop
repz
cmp
fisub
mov
stc
adc
xor
loope
mov
mov
lea
push
pop
out
dec
adc
adc
or
arpl
sbb
aam
or
(bad)
cmp
adc
in
xchg
mov
cmp
sbb
lods
push
and
adc
(bad)
xor
mov
int
data16
adc
inc
in
sub
cmp
pop
adc
mov
and
clc
out
jle
xchg
inc
mov
xor
or
mov
rcl
call
jns
cs
ins
ins
cs
fcmovnu
inc
jns
ins
aaa
mov
jg
je
fs
mov
add
in
subps
adc
and
xchg
cmp
mov
stos
cmp
cmp
lock
mul
sub
loopne
mov
(bad)
(bad)
stc
cmp
ret
or
mov
arpl
jb
call
jnp
push
mov
inc
popa
sub
push
cmps
scas
pop
std
pop
in
stos
dec
add
sub
call
sbb
adc
test
sub
fistp
ja
sbb
nop
test
mov
inc
cli
jecxz
push
fdiv
sar
sbb
add
pop
mov
loope
(bad)
mov
jae
pop
pop
jmp
iret
cmp
push
retf
fucomi
sar
mov
fdivr
mov
(bad)
stos
data16
gs
jmp
cs
bound
push
or
mov
mov
mov
imul
je
pop
imul
push
mov
xchg
bnd
xchg
fsub
repnz
ins
xor
adc
mov
dec
test
mov
stos
inc
xchg
inc
mov
call
int
pop
inc
jnp
push
mov
daa
push
jne
mov
inc
lods
jle
call
push
sbb
inc
or
or
shl
int3
pop
mov
mov
rcl
pop
mov
xor
popa
jg
xchg
lods
push
bound
xor
mov
push
sbb
mov
xchg
xor
xor
sub
out
sbb
inc
je
jae
stc
sub
idiv
xor
add
ds
jmp
fcmovne
(bad)
ror
das
adc
or
dec
das
add
aaa
pop
enter
sbb
dec
add
mov
je
jmp
push
cdq
or
fbld
pop
cmps
cld
push
mov
xchg
push
pop
iret
mov
jb
sub
out
mov
and
out
fsubr
xchg
jmp
scas
push
cmp
sar
popf
stos
xchg
aam
idiv
mov
xlat
or
arpl
in
add
inc
(bad)
(bad)
mov
out
jae
ss
inc
out
pop
enter
jno
lea
pop
mov
sti
aad
dec
call
adc
mov
dec
(bad)
mov
adc
pop
les
cmps
ja
dec
movs
les
adc
inc
sbb
popa
std
add
ins
leave
inc
dec
inc
out
hlt
sub
cmp
mov
xchg
dec
mov
dec
aad
cmp
sbb
jp
add
movs
mov
pop
push
test
mov
(bad)
rcr
pushf
out
mov
sbb
pop
js
or
adc
shr
call
pop
shr
loop
loop
pop
shr
jmp
shl
int
sub
enter
add
xor
mov
push
push
outs
mov
test
mov
mov
fistp
adc
fist
mov
movs
pushf
ret
imul
sbb
and
push
cld
cli
dec
scas
sub
scas
out
outs
mov
xor
xchg
lea
fmul
and
fisttp
retf
stc
call
fs
push
push
nop
sbb
(bad)
popa
cmc
add
dec
bound
inc
nop
mov
fimul
mov
xor
dec
int
popa
xchg
call
sub
mov
pusha
aad
lods
loope
fiadd
dec
ss
pushf
fisttp
lea
pop
jb
adc
test
popa
add
xor
pop
cmp
pop
icebp
jae
mov
and
shr
xor
cmp
sub
loope
mov
xor
push
cmp
or
and
mov
fstp
(bad)
nop
push
add
dec
cmp
rcr
or
cmps
pop
add
inc
popf
and
jae
jle
xchg
fsubr
push
add
jmp
jecxz
dec
add
dec
jae
pop
repz
adc
sbb
xchg
dec
addr16
ret
enter
push
js
repz
popa
(bad)
cmp
xchg
retf
add
adc
ficom
call
ss
sub
and
js
movs
in
sub
cmp
inc
adc
sbb
enter
aas
sar
pop
mov
call
pop
call
mov
ss
sbb
das
lahf
xchg
outs
add
shl
lea
iret
sub
jmp
call
pop
mov
mov
cmp
adc
adc
cmp
pop
into
inc
push
movs
xor
cdq
std
mov
mov
mov
add
scas
and
mov
push
fld
inc
mov
cmp
jno
xor
adc
into
jno
iret
iret
fistp
or
int3
dec
jl
push
xchg
push
lock
dec
push
push
pop
test
rol
in
stos
ret
call
cmps
push
mov
cs
jno
(bad)
mov
popa
xor
xor
retf
ins
sub
pop
(bad)
jp
sub
fisubr
pusha
pop
iret
retf
in
xor
add
push
mov
push
sbb
and
ins
mov
push
fist
xchg
and
mov
mov
stc
cwde
das
xchg
out
popa
or
and
nop
shl
mov
jl
dec
push
ds
in
xor
ds
test
mov
cmp
stos
mov
call
cmp
fistp
test
inc
int
xor
pop
das
dec
pusha
push
inc
mov
jb
sbb
mov
or
fs
(bad)
addr16
or
pop
adc
rol
xor
or
cmp
add
lods
sahf
and
(bad)
rcr
sahf
jle
jbe
sub
test
(bad)
or
gs
inc
jl
adc
js
adc
imul
dec
and
popf
out
int3
dec
shl
xor
fild
out
call
outs
xor
nop
mov
sub
dec
pop
jo
out
mov
cli
xchg
push
repz
or
cmp
stc
pminsw
cmp
pop
rol
cmp
sub
inc
jg
fwait
mov
pop
jb
cmps
(bad)
pop
mov
lock
dec
inc
inc
pop
pop
jae
sub
jne
dec
or
push
mov
or
imul
loope
and
jno
jmp
outs
dec
xor
mov
xor
out
in
mov
dec
and
jp
lea
cmp
sub
mov
adc
(bad)
sbb
mov
mov
dec
add
(bad)
outs
add
xchg
xlat
leave
cmp
push
movs
cwde
lods
jge
mov
int3
push
xchg
fwait
sub
cwde
pop
jae
aas
test
mov
add
fdiv
(bad)
sub
and
je
mov
jbe
gs
pop
stos
adc
xchg
aaa
sub
mov
dec
fs
mov
clc
jns
or
test
jge
inc
mov
mov
push
cmp
push
add
imul
outs
xor
(bad)
repz
xor
inc
lock
push
sub
xor
popa
std
pusha
cmps
ss
push
jg
push
adc
aam
push
pop
adc
push
adc
xchg
mov
clc
pop
retf
dec
cmps
scas
sub
movs
xor
push
das
rcl
mov
mov
mov
out
and
mov
outs
aam
push
xchg
add
xlat
push
push
or
sar
cld
jns
mov
fcomp
or
mov
popw
xchg
pop
nop
or
sbb
jge
sbb
sti
gs
mov
pop
mov
hlt
cwde
mov
cmps
cmp
mov
inc
mov
int3
mov
sbb
xchg
retf
mov
sbb
imul
cdq
pop
xchg
imul
scas
and
ins
std
pop
pop
fwait
and
xchg
loopne
mov
not
pop
dec
enter
push
(bad)
push
adc
sub
xchg
fisttp
adc
cmp
(bad)
mov
arpl
adc
push
dec
xor
adc
push
sub
sbb
inc
pop
and
xor
imul
add
and
mul
std
pop
or
and
and
push
outs
lahf
adc
in
iret
cli
sbb
xchg
jae
cli
ins
test
sbb
xor
loope
inc
mov
sub
lock
shl
cmovs
pusha
mov
and
or
jp
mov
sbb
lock
aas
andps
daa
aaa
jnp
mov
add
fsubr
cld
les
cmps
in
retf
jg
(bad)
push
pop
push
retf
xor
cmp
inc
cmp
iret
sub
and
xchg
sub
pop
and
lods
pusha
and
push
mov
jge
xor
call
clc
sahf
sar
loope
popf
and
ins
addr16
pop
ds
cmp
mov
aam
stos
xor
test
cwde
or
stc
push
imul
cmp
outs
je
ss
stc
xchg
dec
jno
mov
loope
pop
lods
cmp
dec
scas
popf
add
ja
cmp
ret
cmps
adc
adc
mov
add
popa
fld
pop
and
ss
xchg
mov
pusha
pop
es
int
or
xchg
jo
hlt
xlat
lock
push
mov
add
dec
dec
fimul
popf
ss
les
pop
and
in
xor
out
pop
sbb
dec
xchg
sti
das
scas
mov
pushf
lea
daa
xrelease
lea
mov
imul
ins
jecxz
dec
cmp
aad
lock
std
retf
push
gs
inc
in
push
in
sub
push
repz
ds
push
scas
mov
sub
jl
and
out
xchg
cmp
in
ror
loope
cwde
je
iret
dec
cs
fld
pop
test
or
in
inc
repnz
push
or
jmp
(bad)
out
fild
loop
enter
out
fdiv
shl
xchg
pop
inc
daa
scas
mov
iret
dec
mov
mov
in
fisubr
mov
dec
mov
(bad)
jg
jns
xor
mov
lods
cmp
pop
neg
add
popf
dec
lods
jmp
stos
fistp
cmps
inc
pop
mov
inc
loope
out
ss
mov
sar
das
jnp
shl
addr16
cmp
mov
adc
mov
jge
jl
pop
loope
in
repnz
push
movs
out
inc
mov
xor
pop
sub
fsubr
call
or
(bad)
in
dec
sbb
iret
xor
test
and
ss
jbe
and
xchg
xchg
test
mov
dec
jbe
sub
inc
mov
jmp
push
dec
jae
cmp
xchg
mov
scas
adc
xchg
enter
loopne
dec
int
aas
dec
(bad)
mov
inc
xor
fdivr
sub
dec
jns
js
mov
(bad)
cld
xlat
dec
mov
sub
sbb
jecxz
jl
xchg
cmp
dec
mov
cld
sub
addr16
out
fistp
mov
dec
push
leave
stos
loopne
lock
dec
cmp
mov
sbb
retf
nop
mov
mov
push
mov
cs
and
aam
aad
ret
lods
cmp
dec
fstp
push
adc
inc
adc
adc
out
sbb
mov
data16
cwde
push
push
sti
imul
push
test
pop
push
push
sbb
add
jno
xchg
test
das
xchg
dec
cmps
mov
jns
jo
xchg
push
jae
retf
cmp
or
mov
cmp
cmp
mov
sbb
sub
repz
ds
loope
inc
test
sbb
mov
repz
xchg
pushf
xlat
adc
and
pop
inc
pop
cs
sub
bound
scas
or
stos
mov
stos
xchg
xor
push
not
jp
outs
mov
lahf
sbb
(bad)
sub
add
jl
push
mov
ds
bound
stc
ss
popf
dec
scas
adc
jecxz
push
hlt
cmc
and
sbb
into
sbb
dec
test
xchg
out
ror
mov
dec
dec
jmp
cmp
pop
loopne
mov
xor
pushf
xchg
sbb
or
xor
xchg
sbb
jno
push
test
aad
test
ins
or
pop
inc
pop
mov
popa
out
add
adc
jb
cmps
nop
cmps
mov
scas
aam
adc
inc
in
ss
fisttp
into
pop
sub
dec
ret
stos
mov
(bad)
fs
mov
cmc
mov
lds
push
sbb
mov
jne
je
cld
mov
adc
push
xor
in
iret
es
push
add
xchg
js
mov
aad
add
jmp
add
pop
or
and
and
xchg
int3
cmps
mov
ret
mov
jo
arpl
aam
cmps
cmp
lods
mov
into
sti
mov
loopne
inc
lods
adc
dec
push
repnz
aam
sub
pop
jmp
loope
sub
jbe
pop
leave
sbb
add
inc
mov
sub
cli
(bad)
int
cmp
sub
mov
sbb
sub
and
xchg
pushf
cld
push
push
jmp
jns
adc
rcl
add
outs
pop
mov
dec
pop
add
fldcw
xchg
push
bound
cwde
and
data16
sub
or
movs
aam
add
ror
aaa
aaa
out
inc
(bad)
mov
(bad)
ins
hlt
jp
shl
xchg
and
add
mov
js
leave
dec
fimul
es
and
shl
and
mov
lea
test
in
fsub
enter
in
je
stos
jecxz
fdivrp
imul
mov
iret
hlt
inc
pop
pop
sbb
push
in
sub
loopne
jae
stc
popa
or
sbb
add
push
sub
retf
in
bound
jmp
mov
jbe
mov
adc
xor
adc
out
fs
(bad)
mov
mov
pop
push
cmp
push
xor
or
arpl
inc
mov
cmp
dec
mov
inc
gs
jge
imul
inc
out
pop
aad
sbb
cld
cmps
jmp
clc
outs
sub
retf
and
sub
mul
arpl
sub
sbb
aaa
cli
repz
inc
in
xchg
fisttp
push
fwait
mov
fadd
dec
pop
and
clc
ret
mov
popa
leave
add
shl
sbb
push
cdq
xchg
mov
push
cld
stc
xchg
rol
fdivr
cdq
sbb
sahf
sub
pop
fstp
sbb
loopne
jg
xchg
inc
inc
enter
jno
mov
dec
and
sub
inc
dec
push
xchg
rol
(bad)
outs
in
jbe
xchg
adc
jmp
and
imul
(bad)
mov
sub
adc
cs
test
and
movs
daa
mov
pop
(bad)
xor
xor
sbb
xchg
lock
mov
js
jmp
pop
(bad)
addr16
shl
fld1
jae
ror
lods
adc
xchg
pop
rol
fmul
cmp
cmp
push
jb
fcom
sbb
aam
daa
pushf
mov
and
je
push
sbb
cmp
daa
rcl
add
js
out
mov
add
pop
cmp
pop
out
dec
cmp
pop
ins
xor
pop
mov
dec
mov
xchg
in
mov
push
das
fs
retf
or
retfw
mov
pop
aam
jecxz
mulps
sbb
sub
xchg
loop
fdiv
in
dec
xchg
add
inc
rol
scas
dec
xchg
xchg
into
out
cli
icebp
xchg
mov
ret
sbb
push
mov
std
movs
out
sbb
push
xor
or
sahf
sbb
mov
pop
pop
sbb
xchg
fadd
retf
sub
das
mov
ins
and
loopne
adc
in
xchg
outs
mov
aam
aam
xor
fnstcw
cmc
retf
mov
jecxz
and
std
aaa
data16
mov
mov
jb
jno
fs
sbb
cmp
push
mov
jle
xor
ror
ja
push
lods
and
jl
mov
(bad)
ffree
jns
retf
pop
popa
jne
mov
cmps
xchg
lds
push
mov
jge
out
xchg
lahf
retf
push
inc
xchg
jg
aaa
rol
nop
jg
cwde
mov
mov
pop
push
mov
push
movs
addr16
xchg
xchg
sub
cmp
out
neg
dec
or
(bad)
jmp
popa
into
pop
cmp
pop
popf
inc
in
test
dec
push
mov
or
add
mov
cmp
gs
mov
and
mov
add
sahf
mov
add
sub
sub
mov
stc
cmps
lea
pop
int
rcl
mov
repnz
sub
popf
jns
fsubr
imul
inc
jmp
es
pop
js
or
test
pushf
jmp
sbb
shl
mov
sbb
sub
int
inc
jbe
mov
sbb
dec
push
sar
sbb
dec
movs
test
aas
mov
or
stos
loopne
dec
clc
fdivr
push
inc
and
loop
shl
std
push
push
in
retf
sub
push
scas
repz
aam
retf
arpl
leave
cmp
jmp
adc
retf
outs
stc
push
loopne
pop
(bad)
add
push
jmp
inc
jne
mov
dec
loopne
jae
or
cdq
or
cmps
sub
popa
imul
adc
jae
pop
sbb
sub
sbb
lods
jmp
pop
das
test
jae
cs
shl
push
ja
xchg
int3
popa
retf
(bad)
cmc
movs
into
retf
push
mov
sbb
(bad)
jg
dec
jp
and
je
rcr
(bad)
sub
imul
scas
push
cmp
dec
cmp
movs
loope
outs
and
rcl
test
dec
cmp
js
xor
inc
fs
sbb
arpl
xchg
bound
outs
mov
loopne
sbb
pop
adc
mov
inc
or
dec
and
aam
out
push
add
xor
pop
jmp
pop
fidiv
and
inc
and
retf
push
addr16
nop
or
xchg
push
pop
addps
cmp
jae
daa
mov
fdivr
daa
add
mov
fisttp
sbb
ror
ret
shl
int
je
adc
sbb
cwde
ins
cdq
daa
(bad)
push
xor
sbb
jmp
cmc
pop
inc
push
adc
clc
(bad)
jle
test
mov
pop
jns
mov
imul
xlat
and
hlt
mov
sbb
push
imul
add
pop
xor
push
retf
popa
cmps
retf
dec
jo
sub
dec
es
mov
mov
sub
adc
xor
test
cmc
leave
out
ins
sbb
pop
cmc
cmc
cmps
outs
mov
mov
pusha
imul
stos
imul
pusha
loopne
retf
mov
arpl
adc
cmp
scas
aas
fcom
mov
jmp
lds
mov
xor
sub
push
outs
xor
lds
xor
pop
add
mov
and
fwait
jl
xor
sbb
push
out
xchg
jle
out
jb
imul
neg
dec
mov
sti
push
pop
ins
clc
dec
push
inc
sbb
rol
rcr
into
dec
cmc
sti
dec
sub
sbb
mov
sub
xchg
and
dec
mov
cmp
mov
retf
push
jge
rcr
push
sub
in
push
cmps
lods
pop
sbb
and
pop
imul
retf
pop
iret
xchg
dec
push
ins
mov
cmp
mov
(bad)
rcl
adc
xchg
xchg
cli
(bad)
retf
scas
jmp
out
into
test
call
adc
cmp
cwde
clc
or
mov
es
(bad)
ss
in
jmp
int
shl
mov
lahf
push
clc
aam
jae
push
sub
cdq
sti
aad
fild
push
jmp
xchg
test
inc
inc
std
pop
leave
inc
in
enter
fstp
sti
xor
cmc
xor
jecxz
sub
in
fs
(bad)
jne
daa
push
ret
stc
cmc
inc
mov
mov
xor
jp
add
vmovq
inc
and
xor
mov
neg
cdq
clc
add
pop
and
dec
(bad)
retf
mov
mov
push
imul
or
pop
mov
add
pop
push
add
and
mov
mov
pop
pusha
outs
push
push
loopne
sbb
jmp
fcomp
cs
push
pusha
or
xchg
xchg
push
mov
push
jno
pusha
shr
jb
stos
and
out
ret
enter
sub
mov
aaa
mov
cs
iret
jecxz
pop
sbb
lods
movs
ss
jnp
aad
jecxz
mov
cmp
add
and
inc
adc
bound
fistp
mov
test
out
pop
and
fcom
sti
add
jb
jne
inc
cmps
sub
test
sti
das
ins
add
mov
push
sub
ss
inc
jo
xchg
push
retf
aad
sbb
hlt
or
pop
out
push
and
jmp
jmp
push
movs
push
retf
imul
inc
xchg
and
sub
icebp
cmp
movs
out
adc
cmp
pop
inc
inc
cmp
dec
js
test
cld
xor
or
lods
jno
add
out
int3
add
push
js
dec
ret
add
dec
(bad)
jp
jbe
lods
sbb
cmps
cmp
xor
shl
stos
retf
out
(bad)
clc
mov
test
icebp
lods
or
fucompp
(bad)
mov
loopne
mov
add
or
neg
push
adc
push
push
add
(bad)
push
adc
fsubr
push
jge
inc
scas
sub
mov
ficom
pop
sub
jo
cmps
ins
dec
jnp
retf
push
mov
adc
daa
lds
adc
add
inc
dec
push
cs
mov
clc
pushf
mov
sar
or
cmps
sub
ja
pusha
jmp
push
xchg
aas
in
push
inc
cld
lea
stc
in
call
test
pop
xchg
sbb
call
jne
sbb
adc
ja
outs
xor
and
icebp
mov
mov
(bad)
xchg
sbb
jmp
pop
push
enter
sbb
push
into
outs
push
js
loopne
int
sbb
aaa
fld
and
sti
xor
mov
cmp
mov
fsubr
mov
sti
(bad)
mov
in
movs
lock
sub
sbb
push
jnp
mov
dec
js
vaesdec
lds
jne
cli
sub
inc
mov
jl
mov
call
pop
cmp
cmps
repnz
jbe
loopne
idiv
lods
ja
cmps
stos
sub
inc
sbb
into
push
xchg
pop
mov
xor
add
sahf
mov
je
(bad)
adc
popa
push
sub
mov
loopne
dec
or
ror
add
xchg
push
sbb
xchg
pop
jb
cmp
mov
mov
pusha
pop
or
xchg
push
ins
mov
fdivp
pop
out
gs
js
sub
mov
in
ins
pop
mov
sbb
test
mov
sbb
rol
popf
push
fdivrp
xor
jno
xchg
adc
jmp
xchg
or
mov
cmps
je
and
lods
push
mov
and
dec
inc
sbb
cmps
test
cli
lods
cmp
jae
stos
neg
mov
(bad)
cwde
(bad)
mov
inc
mov
mov
pop
aad
or
pop
push
out
inc
jg
jbe
lahf
ret
nop
mov
add
mov
inc
in
mov
in
daa
outs
pop
pop
xchg
out
inc
scas
xchg
push
sub
icebp
adc
inc
dec
hlt
inc
and
cdq
sbb
mov
adc
cmp
cmp
sub
cs
icebp
push
cmp
mov
pop
mov
lea
out
in
out
in
dec
repz
call
mov
stos
push
push
test
ins
mov
mov
into
or
or
scas
cmc
push
push
sub
and
sbb
retf
test
pop
inc
repz
jmp
add
xor
or
faddp
jge
lea
icebp
xor
iret
cmc
sahf
mov
inc
or
ret
call
dec
or
(bad)
mov
push
inc
push
lods
scas
sub
retf
mov
sahf
in
jmp
das
fidiv
mov
mov
mov
ss
in
test
sub
sar
xor
jne
cmp
fist
outs
jmp
nop
adc
fsubr
repnz
add
push
push
rcl
jge
xchg
sbb
movs
jno
fsubr
mov
sti
push
sub
inc
std
push
(bad)
sbb
mov
movs
call
pop
dec
scas
lods
pushf
or
ja
daa
test
mov
popa
sbb
mov
and
mov
mov
jg
jge
jmp
nop
in
rcl
push
xchg
aad
push
fidiv
out
(bad)
dec
lods
mov
mov
pop
inc
push
xor
mov
mov
push
cmp
add
or
mov
jp
mov
retf
cmp
mov
add
or
in
adc
mov
(bad)
aad
mov
xchg
shr
dec
inc
enter
inc
jmp
outs
into
mov
xor
cmp
add
call
nop
mov
ins
icebp
mov
push
mov
adc
or
nop
xlat
xchg
(bad)
cmps
popa
fs
jl
mov
cmp
cmp
pusha
hlt
cli
rcr
and
lods
mov
imul
add
ret
fisub
xchg
adc
push
inc
ret
into
or
stc
(bad)
inc
mov
std
mov
int3
mov
sub
arpl
add
bound
cdq
mov
push
xchg
scas
adc
rcr
mov
sbb
jl
shl
ror
adc
mov
int
mov
dec
enter
std
test
int
(bad)
sub
popa
jge
gs
adc
sub
outs
mov
inc
(bad)
mov
push
rol
in
ret
dec
out
popa
pusha
ja
fcom
sbb
mov
int
jp
mov
or
inc
sbb
popa
outs
imul
mov
xchg
jge
push
push
fsubr
daa
test
fadd
xchg
mov
xchg
iret
dec
adc
imul
int
cmp
call
and
or
dec
fadd
ins
pop
sbb
cs
jbe
jl
xchg
test
ror
arpl
int
popf
xor
sbb
xchg
bound
adc
jbe
xchg
push
pop
dec
xor
mov
aas
pop
stos
jns
jns
pop
adc
mov
cmps
dec
je
dec
sbb
mov
push
retf
scas
sbb
dec
iret
xor
loopne
into
outs
jg
push
daa
mov
rol
scas
add
push
push
sub
dec
add
daa
imul
clc
(bad)
js
dec
aad
mov
das
lock
push
xchg
sub
jge
test
mov
out
xor
push
out
shl
ret
pushf
fld
cmc
add
bound
fcomp
test
push
leave
pop
add
fsubr
out
push
xchg
dec
mov
lds
addr16
mov
ins
call
and
or
lods
pop
jnp
scas
stc
push
iret
xchg
adc
adc
cs
and
mov
nop
mov
jg
mov
imul
lea
inc
leave
inc
adc
movs
pop
and
test
jae
dec
clc
xor
popf
add
popa
pop
movs
rol
adc
xor
xchg
stos
or
cmp
(bad)
rol
out
cmc
sti
inc
shl
in
out
mov
jge
pushf
das
xlat
mov
sbb
leave
mov
dec
out
hlt
mov
jne
retf
(bad)
xchg
enter
push
and
push
dec
sar
or
and
sti
icebp
mov
pop
jbe
icebp
pop
loope
sbb
jmp
lock
stos
xchg
outs
xor
les
clc
add
mov
retf
add
fidiv
stos
pop
xor
dec
dec
add
js
xor
sbb
cmp
add
aaa
mov
adc
lods
fsubr
add
push
jo
push
add
cdq
pop
fild
retf
fsubr
je
outs
fistp
jp
dec
lahf
lds
js
out
pop
add
(bad)
cmc
cs
ret
push
pop
daa
add
sub
dec
pop
or
shl
mov
push
cmps
out
ret
mov
inc
test
in
inc
mov
mov
or
xchg
mov
daa
lea
shl
dec
jno
retf
jb
aad
xchg
outs
inc
imul
sub
cwde
imul
push
mov
adc
jge
xor
dec
push
dec
call
mov
cmp
mov
call
pop
or
ret
cmps
push
(bad)
enter
push
pushf
jle
cmp
pushf
or
mov
push
mov
pop
jmp
je
out
out
cmps
sbb
jmp
adc
jg
js
in
cmps
mov
inc
and
cmps
inc
mov
xor
daa
mov
sbb
sbb
(bad)
call
dec
ja
(bad)
stc
xchg
loop
jbe
jno
adc
int3
inc
jns
dec
push
arpl
push
push
(bad)
lock
cmp
imul
xor
loopne
and
call
pop
popa
mov
loopne
sub
push
shl
loop
mov
add
cmp
sbb
ja
xor
and
xchg
xlat
adc
sbb
sub
dec
mov
(bad)
xchg
push
sbb
leave
and
adc
pop
jge
add
iret
sbb
jbe
dec
adc
pop
cmp
add
mov
loop
int
mov
test
and
inc
or
fldcw
aad
mov
adc
cld
dec
inc
sbb
xor
shrd
pop
stos
add
scas
mov
test
mov
lahf
ret
pushf
sbb
and
sahf
arpl
cmc
sub
daa
add
push
fwait
lods
rol
or
(bad)
jne
mov
mov
mov
push
cmps
add
mov
sbb
test
je
inc
xchg
xchg
(bad)
mov
pop
retf
pop
mov
loop
lods
push
gs
js
jns
pop
sbb
daa
add
cwde
imul
xchg
fisttp
jge
imul
jmp
add
ss
cdq
retf
inc
jge
and
stos
xor
outs
call
mov
inc
jl
clc
loopne
sbb
fs
mov
dec
loop
bnd
push
adc
mov
inc
cs
dec
mov
movs
std
imul
sti
xchg
jmp
ja
jecxz
bound
mov
fwait
pop
stc
mul
inc
stc
adc
movs
dec
mov
test
and
call
push
mov
cmps
out
test
dec
loop
pop
mov
daa
push
repnz
ins
in
mov
popf
int3
test
mov
ja
xchg
shl
out
add
xchg
mov
xchg
icebp
fist
mov
ins
cmp
xor
inc
and
dec
sub
add
sbb
and
pop
mov
sbb
nop
push
sub
inc
repnz
(bad)
jg
aas
lea
sub
in
sbb
adc
adc
ret
scas
fsub
sbb
xor
es
pop
push
xchg
fstp
mov
jno
fisttp
ret
ins
cmp
ja
repz
adc
fdiv
mov
push
outs
mov
xlat
retf
sti
fnstsw
iret
cli
out
mov
xchg
out
jp
jne
div
mov
enter
mov
pop
mov
fbld
adc
cmp
fucomip
xchg
pusha
or
inc
in
sub
and
popa
inc
jae
(bad)
movs
in
cmp
jno
hlt
repnz
dec
push
mov
fisttp
bound
or
nop
cmc
scas
pop
mov
aad
out
movs
imul
inc
popa
scas
(bad)
and
jo
int
mov
mov
push
hlt
xchg
ja
imul
leave
push
xchg
add
sahf
or
xor
add
cmp
aaa
bound
dec
fistp
xor
mov
jmp
aas
dec
lock
adc
xlat
cmp
clc
in
fwait
int
xor
in
inc
lahf
and
in
pop
fwait
sub
sbb
and
leave
pop
out
inc
push
aas
fistp
aaa
and
in
or
sahf
push
loop
nop
sub
fisubr
dec
aas
sbb
mov
addr16
hlt
leave
int
mov
mov
(bad)
fsub
fsubp
call
pop
xchg
jno
push
(bad)
sbb
and
pop
lds
inc
xchg
sbb
cdq
frstor
mov
dec
rcr
mov
lea
mov
sub
loopne
iret
movs
push
xor
xchg
push
pop
pop
shl
inc
out
push
jbe
cmps
sar
shr
cmp
xchg
out
ds
test
mov
loop
das
and
repz
sub
push
outs
cmp
dec
push
cmp
clc
arpl
mov
retf
adc
or
jle
sub
xchg
fs
(bad)
out
sbb
dec
mov
jb
ja
int3
pop
mov
mov
sub
push
fidiv
adc
ret
mov
sub
jns
(bad)
jbe
lahf
gs
jge
xchg
inc
and
xor
movs
or
lods
jbe
inc
push
mov
and
xchg
push
jbe
or
gs
int
mov
rcl
retf
mov
xchg
in
outs
mov
add
mov
dec
test
fwait
add
push
clc
and
mov
push
xchg
arpl
sbb
popa
daa
push
in
scas
ror
dec
jecxz
sbb
push
enter
add
in
scas
push
(bad)
cmp
and
(bad)
xchg
sahf
lea
mov
scas
pop
inc
cmp
cs
repnz
push
arpl
mov
call
inc
and
and
les
xchg
stc
jae
arpl
shl
jmp
cmps
ret
cmp
fiadd
sub
add
cmp
into
out
das
xor
ret
mov
rol
push
aam
cmps
sbb
jnp
lods
push
outs
inc
rcr
sub
mov
pop
jb
mov
aaa
or
add
pop
and
pop
div
adc
retf
or
jo
outs
xor
and
ss
add
cmp
stos
jecxz
and
mov
sub
pop
or
les
mov
or
inc
mov
jb
mov
clc
das
daa
ret
call
movs
cpuid
or
sbb
jmp
jb
in
leave
xchg
fidivr
(bad)
rcl
add
and
pop
ret
jg
arpl
dec
mov
call
inc
sub
dec
push
xchg
sbb
push
pop
xor
xchg
stc
adc
sub
pop
sub
cmp
mov
lds
ja
push
inc
cmc
(bad)
int3
lea
(bad)
push
test
xchg
das
or
std
int3
imul
nop
mov
jnp
pop
pushf
pop
daa
cdq
push
add
js
mov
cmc
adc
mov
(bad)
mov
mov
sbb
pop
pop
out
mov
dec
cmc
jp
mov
addr16
xchg
adc
xchg
sub
(bad)
out
pushf
inc
or
jnp
push
mov
test
outs
jns
fmul
lahf
sbb
(bad)
inc
lods
mov
push
popa
sbb
stos
ja
dec
xchg
std
cmp
je
jno
dec
xchg
xchg
pop
push
dec
or
fisub
cmp
out
ja
fnstsw
inc
retf
clc
push
mov
add
les
int3
xor
jmp
je
sbb
cdq
mov
pop
sbb
mov
lock
hlt
aaa
xchg
jno
xchg
jle
dec
repz
or
sub
call
lea
push
lea
es
jle
adc
gs
mov
mov
mov
aaa
lods
sbb
clc
lods
sti
imul
icebp
xor
clc
data16
adc
adc
mul
xor
cmp
and
icebp
inc
pop
adc
aad
mov
xor
inc
jg
pop
dec
in
sub
mov
mov
shl
xlat
enter
aad
(bad)
pushf
sbb
push
sbb
push
mov
adc
dec
addr16
cmp
sub
mov
push
push
dec
enter
in
ret
icebp
mov
mov
aam
stos
jns
xor
mov
in
retf
jl
jbe
cdq
push
pop
jns
in
cli
dec
pop
mov
sar
xchg
and
jo
arpl
nop
pop
rol
sbb
xchg
jbe
test
jmp
push
(bad)
stc
pop
lock
neg
shl
push
cs
cmps
pop
mov
sbb
mov
or
scas
sub
fcmove
ins
cld
mov
xlat
fld
rcr
mov
loopne
xor
jge
clc
and
mov
popa
mov
mov
fidiv
cmps
mov
out
cld
push
ja
or
dec
outs
mov
loope
mov
xchg
retf
sbb
dec
lods
rol
jnp
jg
cdq
jecxz
cdq
xor
xor
dec
sub
inc
jbe
xchg
cmp
pop
ficom
(bad)
scas
mov
mov
pop
add
nop
fidiv
scas
retf
push
jnp
movs
int3
fwait
hlt
mov
lahf
mov
push
push
sbb
in
mov
add
in
popa
jle
(bad)
xchg
pop
add
mov
inc
jo
pop
daa
loope
iret
mov
sahf
mov
(bad)
scas
pop
jl
mov
cwde
mov
cmp
and
leave
jmp
mov
call
loopne
jnp
dec
call
fnstenv
add
cmps
test
or
jns
xor
cmp
test
add
ins
(bad)
fs
mov
fsubr
mul
pop
shl
xor
movs
cmp
lahf
rcr
iret
jg
xor
into
dec
fadd
inc
lea
bound
jp
or
aaa
xchg
mov
aaa
xor
enter
xor
pop
add
ret
xchg
fs
mov
jle
icebp
nop
iret
cmps
and
or
enter
cwde
sar
or
push
mov
mov
aam
test
cmp
mov
dec
add
div
push
or
rcr
cs
aad
push
(bad)
neg
repnz
mov
jp
add
or
mov
daa
sub
mov
imul
das
pop
mov
mov
push
mov
xor
cli
dec
das
pusha
dec
sub
mov
rol
jo
sub
cwde
test
test
push
(bad)
in
or
je
ja
pop
dec
inc
cld
lods
mov
shl
pop
xor
jo
scas
inc
cmps
enter
lods
rcr
adc
(bad)
mov
pop
int3
and
rcl
push
adc
rcl
pop
in
iret
or
loope
mov
jae
or
inc
mov
mov
fsubr
mov
repz
sub
ja
outs
and
popf
push
stos
lea
inc
aad
clc
or
popa
ret
jb
sub
cmc
jmp
imul
inc
or
or
fwait
pop
inc
push
or
push
inc
sub
enter
das
push
jmp
push
jle
mov
test
icebp
ins
cmp
jno
xchg
int3
out
or
lock
jl
ror
(bad)
jns
pushf
and
rcl
je
and
and
ins
sbb
or
cmp
mov
popf
pop
clc
neg
call
jecxz
pop
cmp
in
sub
or
lods
in
cmps
cmp
xor
scas
mov
cmp
(bad)
sbb
fwait
or
fist
push
adc
popa
and
popa
fmul
mov
lock
jnp
xchg
dec
sbb
mov
popaw
outs
add
pop
mov
xchg
(bad)
cld
call
and
fld
in
xor
mov
or
fist
ret
sbb
add
mov
test
in
retf
xlat
adc
fst
jae
mov
jmp
inc
leave
pop
jecxz
jp
maskmovq
imul
pop
(bad)
lahf
cs
stos
adc
sar
shl
jge
sub
jecxz
sbb
in
mov
rcr
cld
xchg
dec
in
dec
ins
daa
fs
mov
cwde
(bad)
stos
sub
adc
and
sbb
sbb
ins
mov
fild
mov
sub
test
fwait
sbb
inc
outs
shr
fld
enter
sahf
(bad)
cmp
xchg
(bad)
sahf
xchg
pop
(bad)
sbb
outs
or
and
movs
mov
das
jmp
adc
jbe
pop
jl
inc
xlat
dec
push
sub
pop
pop
cmp
cmps
or
cmp
sahf
cmp
out
cmp
and
popa
mov
xchg
rcl
push
ins
xchg
repz
pushf
leave
cli
js
dec
xor
inc
jae
outs
mov
sahf
mov
adc
mov
ja
jo
mov
test
leave
and
mov
movs
das
pop
mov
xor
xchg
(bad)
cmp
(bad)
jp
xchg
mov
gs
leave
lea
push
sbb
sbb
push
sti
adc
sbb
cmp
leave
sar
pop
push
sti
iret
xchg
das
jp
ja
shl
int
pop
sbb
cs
dec
out
rcl
mov
out
das
jmp
mov
dec
mov
es
jge
(bad)
fisubr
div
fs
adc
jno
fldln2
scas
in
iret
pop
je
pop
retf
and
jo
enter
les
xor
dec
out
pop
adc
inc
sbb
popa
lock
lea
jns
sub
push
pushf
jge
pop
pop
fidivr
jp
jmp
outs
xchg
iret
imul
jg
ss
shr
adc
pand
icebp
jmp
(bad)
xchg
add
loope
pop
fidiv
addr16
or
loopne
sbb
xchg
inc
cs
mov
ret
lahf
push
sub
(bad)
out
lahf
out
pop
movs
movs
enter
test
rcr
cmp
mov
xchg
push
xor
stos
jp
out
test
adc
int
aas
jne
mov
call
push
idiv
loop
jno
push
mov
mov
mov
push
push
xchg
pop
mov
or
dec
ret
cmps
scas
cmc
test
adc
xor
dec
inc
cmp
pusha
(bad)
out
mov
and
scas
ins
gs
mov
loop
xor
jno
and
test
stos
adc
(bad)
fmul
xchg
mul
cld
push
inc
xor
cmp
cmps
leave
enter
bound
call
retf
jmp
cmp
mov
retf
push
push
add
rol
add
add
mov
push
repnz
imul
lea
pop
imul
das
cmp
xchg
push
shl
or
out
hlt
lods
add
(bad)
adc
ds
xor
jno
clc
mov
sbb
pushf
aaa
enter
push
xchg
mov
inc
retf
push
shr
stos
mov
(bad)
cdq
scas
jp
add
jle
sbb
mov
in
ds
and
xor
add
mov
pop
add
mov
mov
sub
je
or
stc
push
mov
xchg
sub
push
pop
xchg
pop
jo
pop
dec
adc
dec
mov
mov
xor
xchg
loopne
dec
push
int
pop
or
call
ret
fld
outs
xchg
xchg
pop
(bad)
xchg
out
add
pop
dec
add
jmp
inc
lods
popa
(bad)
jecxz
xchg
mov
sbb
in
lea
mov
inc
push
cld
int
sub
cmp
sbb
cmp
out
jp
inc
lock
out
cmp
bound
mov
in
retf
push
std
popf
fdivr
or
push
rcr
test
inc
adc
sub
cmps
das
xor
test
or
imul
xchg
movs
clc
xor
jmp
sub
mov
mov
daa
push
pop
mov
dec
sub
dec
xchg
pop
rcr
cmp
sbb
add
push
ret
dec
lds
loope
and
inc
jp
xlat
not
lods
adc
and
jae
bound
mov
pop
shl
mov
call
cdq
fistp
dec
out
mov
jp
jl
adc
add
xor
xchg
pop
mov
mov
inc
mov
les
mov
push
add
push
mov
cld
or
outs
or
adc
std
retf
push
jae
(bad)
aad
mov
add
mov
scas
rcr
push
nop
test
add
popf
mov
push
push
or
test
push
and
mov
xlat
mov
stos
ret
jno
push
or
leave
sbb
mov
call
cmp
loopne
jp
not
outs
(bad)
jmp
adc
mov
(bad)
jno
lea
test
xchg
clc
shl
add
push
das
xchg
push
mov
(bad)
pop
mov
out
sahf
or
and
movs
jbe
icebp
pop
or
and
or
ins
clc
add
push
pop
inc
push
mov
jmp
pop
xchg
pop
jge
aad
scas
sbb
mov
scas
add
and
or
sub
sbb
pop
aad
pop
xor
mov
arpl
xor
jb
mov
mov
inc
mov
xlat
inc
bound
mov
xchg
mov
cs
shr
or
push
dec
(bad)
jmp
xor
sbb
mov
add
movs
mov
cmps
push
jno
retf
ret
xor
scas
call
mov
mov
push
cli
mov
mov
jnp
xchg
cmc
stc
push
sbb
shl
ret
std
sub
dec
loopne
xchg
out
push
mov
inc
mov
daa
pop
sub
push
mov
adc
sahf
movs
adc
ins
(bad)
fisubr
mov
aam
lds
mov
sub
xor
add
sub
stos
ins
out
int
xlat
jb
add
mov
rcr
xor
jecxz
retf
mov
js
xor
xchg
sbb
xchg
aad
call
add
inc
std
loope
popa
mov
lods
fcom
(bad)
mov
cs
sbb
rcr
mov
cwde
cmp
call
shr
cli
cmps
push
push
cwde
ins
xchg
aam
popa
cmp
lds
mov
ss
xchg
add
adc
pusha
fistp
fcomp
ja
dec
icebp
hlt
in
xchg
mov
leave
pop
mov
popa
shr
cmp
add
ins
push
mov
ins
inc
scas
lds
cmps
push
add
cs
push
mov
in
jne
add
jmp
(bad)
jnp
add
and
icebp
add
cld
sbb
cmp
sub
xchg
jbe
rol
fsub
xchg
fsub
inc
and
add
fstp
xor
sub
int
pushf
push
sub
mul
fistp
mov
push
in
ret
das
push
cmp
outs
sbb
pop
or
cwde
adc
xchg
cli
push
loopne
mov
movs
retf
pop
stos
add
pop
push
mov
into
repz
call
mov
pop
push
sub
test
sub
xchg
xchg
mov
mov
bound
shr
lods
adc
sbb
inc
enter
xor
mov
push
aas
loopne
arpl
jg
xchg
adc
mov
loop
jne
dec
in
aam
sbb
cmps
dec
loop
in
push
jb
rcl
test
inc
and
or
jp
(bad)
ror
cld
in
xchg
je
mov
pop
xchg
jbe
inc
aam
mov
outs
pop
arpl
add
mov
push
xchg
jae
mov
xchg
leave
jmp
jp
mov
xchg
add
push
outs
cmp
mov
daa
sbb
nop
cld
stos
jb
inc
dec
imul
sbb
cmp
cmp
cli
xor
jmp
mov
pop
js
add
sub
mov
iret
pusha
retf
xchg
js
test
shr
mov
shr
cmps
les
ja
mov
pop
icebp
push
mov
cmp
push
lds
icebp
jbe
mov
and
xor
loope
fbstp
add
and
lods
mov
inc
retf
pop
adc
(bad)
pop
cmp
pop
mov
loop
xor
shr
clc
pop
add
ss
sub
add
pop
jmp
jnp
push
jns
daa
rcr
cmp
sar
pop
lods
cli
movs
mov
sar
xchg
das
les
test
shr
popa
cmp
xchg
bound
or
cmp
ret
xchg
vmwrite
mov
push
mov
ins
cs
(bad)
repz
mov
cli
repnz
xchg
outs
test
aaa
cmp
or
cmc
test
int
jp
xor
jne
pop
jb
mov
jl
movs
dec
xchg
nop
ds
aam
std
ss
push
add
dec
cmp
inc
fisttp
ja
movs
and
add
add
cdq
ret
xchg
fcom
add
shl
adc
cmp
and
mov
loopne
push
jmp
test
movs
cld
popa
sub
cmp
stc
and
test
jp
sub
cmp
lahf
jae
mov
mov
mov
aam
jae
cwde
lds
add
test
pop
jno
fidiv
mov
dec
ja
add
mov
sbb
dec
rcr
inc
push
dec
cmp
mov
add
mov
inc
push
dec
jge
ins
cmp
add
sbb
sub
jecxz
outs
add
dec
cmp
pop
aaa
icebp
retf
pop
cmps
pop
dec
add
mov
ror
mov
jl
ret
mov
pop
test
ret
xor
add
cli
inc
sti
xor
pop
int
and
cmps
or
push
inc
cmp
cmps
rcr
test
sti
int3
mov
imul
clc
sub
dec
xchg
mov
pop
mov
lar
pop
cmps
mov
stc
sti
mov
sbb
loopne
aam
scas
repnz
and
cmps
push
leave
dec
cmc
mov
mov
cmps
(bad)
(bad)
aad
fcomip
inc
imul
jge
cmc
mov
fisttp
sahf
call
cmps
mov
test
loope
xor
test
call
retf
xor
jmp
mov
outs
add
in
xchg
mov
ficom
and
mov
xor
in
imul
repnz
xor
jge
pop
ss
mov
fidiv
fcom
ret
and
imul
xlat
cwde
or
jp
imul
test
imul
out
sar
dec
stc
icebp
scas
and
out
out
fsub
pop
add
dec
loop
inc
or
mov
xor
cli
xchg
xchg
push
push
jbe
retf
jns
loope
inc
sub
xchg
fwait
push
or
hlt
enter
rcr
push
ds
mov
and
adc
and
inc
daa
mov
pop
push
xor
jmp
jmp
sahf
mov
dec
push
pop
add
mov
mov
add
xchg
test
leave
outs
mov
sbb
test
call
fiadd
mov
fldenv
inc
cld
frstor
pop
(bad)
pop
inc
cmc
xchg
sbb
pop
jecxz
les
dec
mov
dec
cdq
test
adc
cmps
pop
(bad)
imul
ins
shl
cmp
lock
loop
int
and
jbe
pop
mov
xor
push
cmp
xlat
xor
ja
(bad)
jns
iret
outs
xchg
das
std
inc
retf
sbb
cdq
pop
push
(bad)
pop
push
fisubr
into
mov
cmp
call
pop
sub
fsub
sub
int3
test
adc
aaa
adc
lods
aaa
sbb
add
(bad)
push
xor
or
stos
imul
dec
xor
xchg
mov
test
push
retf
cmps
sbb
retf
fnstcw
dec
pop
and
cmp
cwde
into
enter
sub
(bad)
cwde
(bad)
ins
(bad)
test
push
in
jmp
cs
rcr
scas
xor
pop
mov
je
jne
mov
or
mov
xchg
jmp
sub
js
fcomip
jge
loop
(bad)
stc
mov
add
xor
cmp
xchg
sbb
in
and
pop
push
mov
xchg
gs
dec
jle
(bad)
xchg
(bad)
jmp
in
or
add
dec
ins
enter
or
adc
clc
push
mov
stos
push
out
cmps
(bad)
mov
inc
icebp
fnstenv
das
dec
cld
int3
push
push
add
add
mov
loop
and
jl
push
push
sbb
lods
ins
js
mov
das
pop
sbb
js
wrmsr
xchg
arpl
int
(bad)
mov
push
aas
enter
retf
dec
out
test
in
push
mov
add
inc
push
jae
and
out
push
pop
test
mov
test
clc
and
into
shl
pop
pop
push
pop
push
out
add
sbb
sbb
mov
lock
out
fistp
jb
xor
cmps
and
xchg
add
ins
aas
push
dec
mov
stos
aam
ror
or
lea
dec
push
add
jns
push
mov
rep
sub
jg
int3
push
sbb
enter
retf
xor
clc
mov
sar
cmp
adc
add
add
jno
dec
inc
ja
pop
pop
clc
mov
jecxz
sahf
jne
jmp
sub
mov
int3
mov
mul
popf
inc
fst
mov
fsub
movs
retf
sbb
jmp
mul
mov
stos
call
and
add
xchg
sbb
repz
nop
leave
jae
sbb
and
jo
test
push
aaa
sbb
or
mov
mov
jno
cmp
enter
xor
lahf
bound
aam
add
push
in
mov
fnstsw
jno
js
push
out
lods
xor
dec
mov
test
imul
(bad)
hlt
jle
xlat
repnz
sub
mov
jl
xor
std
inc
cld
jle
jo
lahf
(bad)
in
ds
test
push
pop
or
call
std
jge
ins
into
pop
jb
imul
push
dec
popf
enter
es
adc
push
jno
mov
push
push
xor
pop
test
int
fwait
jecxz
and
xor
and
mov
xchg
loop
lods
dec
dec
push
iret
mov
shl
fstp
add
push
ins
test
loopne
push
xor
dec
adc
(bad)
out
cmc
and
jmp
jl
inc
dec
scas
iret
in
fadd
scas
ror
push
imul
and
sub
test
mov
cmp
int
ins
aam
cmp
(bad)
or
lahf
inc
jp
inc
sahf
aaa
mov
(bad)
push
push
pushf
cmp
(bad)
push
pop
stos
test
xor
imul
sub
mov
loop
jo
mov
(bad)
and
cmp
and
test
out
std
mov
jne
(bad)
std
sar
jne
mov
inc
loop
dec
shl
popf
(bad)
mov
scas
sar
push
sub
push
daa
pop
xlat
out
(bad)
out
fbld
outs
bound
jno
inc
outs
inc
xchg
das
call
mov
pop
outs
dec
mov
push
retf
(bad)
fcomp
call
cmp
add
adc
pusha
pop
(bad)
sub
and
adc
imul
mov
ja
sub
(bad)
sub
push
enter
xchg
jne
movs
xchg
mov
mov
addr16
outs
stos
call
sub
add
mov
xchg
xor
jecxz
push
and
cli
mov
(bad)
rcl
xor
jg
push
inc
out
pop
mov
jp
(bad)
cmps
pop
das
fs
sub
lods
aas
test
and
jmp
aad
jg
mov
mov
gs
sub
jmp
push
add
dec
sbb
mov
fimul
dec
(bad)
aam
add
out
loop
ins
inc
stos
cmp
scas
shl
jo
sbb
or
ret
fwait
popa
movs
lods
push
fs
popf
aas
sub
fdivr
ins
cmp
or
sti
adc
mov
cmp
(bad)
jp
push
call
(bad)
ret
jo
ret
dec
bound
(bad)
push
ret
leave
imul
outs
sub
test
xor
fwait
jle
jl
or
sub
in
adc
pop
ret
xor
xchg
mov
enter
jmp
inc
in
xor
pop
push
mov
jo
aas
sub
and
dec
out
push
call
xlat
jns
icebp
and
or
dec
enter
outs
fist
sub
inc
sar
adc
mov
mov
inc
pop
and
sub
cmp
mov
cmps
push
pushf
cdq
sbb
scas
pop
rcl
and
(bad)
pop
mov
rol
cmps
addr16
mov
rol
addr16
ins
std
clc
push
cmp
ret
cs
xor
out
xchg
sbb
xor
push
mov
(bad)
xlat
lahf
int3
push
je
mov
cld
int
gs
mov
(bad)
dec
aad
mov
sahf
into
xchg
add
test
outs
pop
cmp
push
dec
dec
aam
inc
inc
dec
mov
mov
je
mov
(bad)
ins
imul
or
leave
push
mov
xor
(bad)
jo
cmp
test
cmp
cmp
outs
test
mov
pop
clc
mov
in
or
fild
dec
repnz
sub
sub
clc
lahf
cmps
int
cmp
out
out
js
scas
sbb
dec
xor
jg
xchg
mov
jbe
pusha
call
mov
out
sub
fild
scas
in
mov
retf
mov
push
in
sub
jns
push
cmps
scas
jnp
push
std
dec
push
loopne
sub
sahf
sbb
std
pop
adc
adc
ret
aad
or
in
stc
mov
lds
icebp
sbb
mov
fisub
sbb
or
dec
popa
and
cmp
out
loope
and
xor
(bad)
jno
retf
push
lods
xor
fcomp
jle
aad
dec
mov
aas
and
dec
call
pop
pop
and
cmc
add
jbe
lods
stos
mov
retf
mov
mov
sti
xchg
xchg
ins
cld
xchg
ss
das
ds
fwait
stos
out
xchg
sahf
sbb
hlt
sub
test
xchg
pop
je
mov
mov
or
push
adc
mov
or
sbb
mov
out
lods
je
mov
repz
test
(bad)
lea
push
push
hlt
mov
cmp
gs
ins
adc
cli
nop
or
std
in
xor
xchg
and
popf
pushf
xchg
mov
and
mov
aaa
aas
adc
dec
jmp
test
dec
or
ja
ds
fstp
xlat
lods
aam
sti
in
mov
outs
add
sub
dec
int
dec
or
cmp
iret
xchg
test
or
xchg
nop
rol
jge
cmp
jne
mov
(bad)
push
add
mov
out
dec
cmp
dec
mov
push
dec
mov
or
cs
and
or
jo
xchg
sbb
dec
dec
jbe
les
push
nop
icebp
cld
jae
add
dec
mov
shl
dec
outs
mov
jb
pop
ja
push
fwait
leave
in
aad
or
push
stos
jmp
fs
scas
jmp
cdq
fsqrt
xor
push
dec
into
ror
adc
xor
jmp
lods
jge
daa
cli
rcr
bound
pop
cmps
mov
std
stos
pop
aam
out
fild
fstp
shl
pop
cld
shr
inc
enter
movs
add
scas
(bad)
test
out
shl
cmp
mov
stos
gs
pop
cmovb
(bad)
pusha
movs
dec
jl
jmp
jns
mov
int3
jmp
dec
out
(bad)
and
stos
test
fsub
loopne
jmp
push
adc
cmp
fidiv
xor
add
cmc
fnstenv
mov
sub
in
lea
xor
pop
cmps
call
int
and
mov
aad
dec
cmp
bnd
lock
add
outs
inc
fisttp
jbe
test
jge
loop
and
lds
or
fsubr
and
(bad)
fsub
push
test
movs
add
inc
or
pop
lahf
(bad)
out
push
jg
and
sub
jne
loop
xchg
sub
inc
inc
into
retf
inc
cli
and
in
or
mov
mov
cld
cld
gs
sub
or
mov
fstp
sub
int3
jp
mov
in
dec
dec
and
cmp
mov
jecxz
xchg
dec
mov
mov
lods
adc
xlat
fld
aad
cwde
jecxz
pop
test
frstor
adc
test
adc
rcl
jecxz
add
call
ficom
test
int3
sub
adc
pop
les
out
jg
pusha
jne
into
push
inc
test
clc
out
movs
mov
jmp
ror
jg
mov
imul
stos
xchg
mov
cmp
inc
lea
or
mov
pop
sbb
or
mov
or
into
lods
aad
and
mov
mov
int
xchg
sub
icebp
imul
cld
mov
mov
cmp
call
push
cmp
(bad)
into
lods
test
stos
cmc
into
outs
xchg
mov
mov
(bad)
repz
pop
inc
das
retf
outs
mov
aas
mov
(bad)
bnd
xlat
dec
shl
jle
js
mov
or
pop
jno
or
leave
ret
cmp
mov
sbb
icebp
out
add
dec
or
in
mov
ins
rol
xor
cmps
add
xor
pop
xchg
jo
(bad)
cmps
scas
jge
sub
adc
push
dec
ja
ins
xor
cmp
push
cmps
pusha
xor
sbb
test
and
push
test
fldenv
mov
call
mov
dec
out
dec
sub
movs
sub
and
ds
adc
fimul
pop
jp
mov
push
jns
sub
js
and
mov
lahf
push
(bad)
mov
mov
and
jo
or
gs
inc
jp
xchg
and
jmp
mov
xchg
call
pop
and
iret
and
retf
lock
mov
jbe
daa
das
addr16
out
mov
cmc
sbb
pop
sbb
mov
sbb
jmp
xor
sti
sub
fistp
dec
sar
retf
lods
int3
push
mov
push
sub
dec
aam
shr
imul
into
mov
ins
daa
xchg
pop
push
xor
jns
out
cdq
inc
sbb
cmp
scas
outs
mov
push
xchg
das
dec
sbb
ror
cmp
(bad)
arpl
scas
xchg
mov
les
rcl
jbe
mov
cli
sti
pop
xor
cli
cmp
mov
ret
arpl
aas
xchg
inc
xor
fucom
push
sbb
add
or
mov
(bad)
leave
jne
into
inc
int
fld
sbb
outs
lds
inc
mov
ss
jns
cmp
mov
xor
inc
lods
mov
dec
push
out
cld
es
fwait
es
into
or
es
lods
push
mov
xchg
push
jb
fadd
jno
push
mov
cmp
dec
xchg
cmp
dec
dec
add
out
ss
add
jns
dec
xchg
shr
or
pushf
es
add
in
xor
bound
sub
xor
scas
push
pop
inc
sbb
pop
xchg
xor
jmp
outs
in
mul
mul
sub
mov
lods
xor
pop
and
mov
rcl
lods
xor
test
das
sub
pop
arpl
mov
mov
lds
aas
and
imul
jp
push
push
psrld
lods
sti
jns
je
push
push
out
mov
hlt
mov
xor
loopne
mov
bound
xchg
jecxz
fwait
mov
xchg
xor
mov
mov
arpl
sahf
xor
dec
xor
cli
test
push
push
iret
pop
or
repnz
aam
add
bound
mov
jle
loope
cmp
icebp
and
jo
dec
ret
(bad)
pop
adc
das
jns
inc
sar
cmp
and
or
xchg
adc
xor
cmps
(bad)
fwait
cdq
outs
xlat
dec
cmp
int
mov
test
mov
lods
jmp
addr16
push
jge
mov
mov
push
add
or
loop
push
ror
add
lock
stc
sub
fs
fstp
sub
and
daa
leave
jge
shl
and
addr16
stc
mov
int
in
ds
jno
dec
sbb
jmp
outs
mov
mov
fst
sbb
fdiv
mov
cmp
jnp
adc
or
out
fidiv
xor
hlt
xor
lock
int
mov
xchg
mov
or
mov
ror
in
dec
icebp
idiv
rcr
ss
jnp
call
outs
xor
test
fld
in
bound
push
cwde
(bad)
imul
test
jl
mov
xchg
push
mov
xchg
paddb
cmps
retf
jmp
cmp
outs
lock
jns
shr
xor
mov
in
retf
cmp
and
mov
mov
pop
sub
push
rcr
inc
shr
add
lahf
pop
xchg
pop
inc
retf
pop
js
adc
mov
lds
test
gs
scas
rcr
fnstcw
mov
shl
jmp
arpl
cmp
cs
mul
js
cwde
jmp
out
cmp
js
hlt
pop
xlat
stos
sub
ins
xor
int3
fcom
fimul
nop
add
ret
adc
push
clc
fs
outs
mov
loopne
int3
bound
dec
out
cmp
mov
fdivp
dec
cdq
popa
int3
pop
das
push
mov
pop
sbb
jl
add
mov
cmps
retf
xor
and
movs
cmps
movs
enter
jnp
inc
cmps
add
dec
popf
pop
or
and
(bad)
lods
pop
jae
pop
xchg
jmp
repnz
call
xchg
pushf
jge
cwde
pop
js
nop
fdivr
cld
cld
cmp
sti
in
cmp
xchg
int
in
xchg
pop
push
out
ds
addr16
inc
cmps
mov
xlat
push
fbld
jl
fwait
add
pop
rcl
mov
out
in
ss
xor
pushf
inc
and
daa
mov
mov
pop
fneni(8087
lock
test
cmc
mov
cmp
mov
ror
xor
js
fcomi
pop
xchg
mov
inc
call
lock
dec
cmps
jae
cs
(bad)
mov
adc
hlt
test
and
dec
fistp
sbb
jg
or
dec
push
add
movs
repz
(bad)
ror
inc
iret
adc
sub
lds
cmp
shr
mov
mov
in
push
and
xchg
in
mov
sti
mov
bound
jo
arpl
dec
pusha
dec
push
mov
mov
sub
and
xchg
or
icebp
mov
dec
sti
mov
shr
cmps
sbb
inc
xchg
adc
stc
data16
dec
cmp
loopne
or
in
popa
jae
lods
sub
sbb
mov
aaa
mov
jnp
jp
xchg
loopne
jmp
sub
xor
mov
or
mov
push
sub
mul
mov
out
cwde
sbb
add
xchg
add
mov
pop
inc
or
xor
inc
xor
adc
adc
and
mov
call
push
loopne
nop
push
fcom
push
xor
ror
enter
out
add
jns
leave
sub
mov
and
and
cld
add
jo
xor
adc
cld
inc
into
mov
out
cmps
movs
test
sar
jle
and
lds
and
iret
inc
addr16
sub
cmps
mov
xor
mov
cwde
(bad)
iret
mov
rcr
aaa
stos
fcomip
ss
out
xchg
pop
add
loope
lods
outs
pop
cwde
sub
(bad)
es
aaa
enter
push
stc
jl
inc
aam
mov
aad
mov
pop
in
shl
pop
fisttp
cmp
cmp
pop
stos
xchg
lahf
ss
xor
in
ss
shl
popa
pusha
ja
adc
add
dec
push
adc
loopne
into
jle
pop
rol
mov
or
and
push
jge
paddusb
push
xchg
push
leave
shl
daa
rcl
mov
ins
fcom
lea
ins
push
dec
es
lods
dec
rcl
hlt
lock
test
mov
sbb
xchg
es
out
daa
cld
xchg
jne
fistp
xchg
(bad)
(bad)
aas
in
and
test
in
je
lods
push
not
test
movs
into
(bad)
fsubr
shr
jno
or
sti
mov
jno
lea
stc
jo
mov
push
and
pop
dec
adc
mov
jno
push
mov
mov
push
out
ins
adc
les
xor
push
dec
jbe
or
xlat
aad
nop
or
dec
out
fcomip
cmp
mov
mov
stc
cld
cdq
push
adc
ins
imul
(bad)
jmp
pusha
in
jb
adc
push
pop
xchg
popf
and
jmp
mov
mov
int3
(bad)
and
push
or
adc
cdq
popf
adc
inc
ret
add
int3
xor
mov
in
inc
push
xor
mov
fwait
or
int3
sub
jg
mov
in
and
movs
out
aas
mov
mov
mov
jle
loopne
je
push
xor
out
xchg
iret
ins
shr
test
stos
push
imul
test
loop
pop
mov
sub
pop
fdiv
mov
loope
sub
cmp
test
and
jp
jl
pop
clc
pop
lahf
pop
cmps
retf
ins
add
(bad)
repz
sar
icebp
clc
loop
sbb
sbb
lods
cmp
xchg
sbb
aad
popf
stos
imul
lock
test
and
jp
ret
lahf
cmp
pusha
shl
ror
fwait
push
scas
jmp
and
push
in
je
std
(bad)
xor
xor
stos
into
cmp
push
scas
fadd
mov
ror
shl
jb
stos
out
or
mov
call
popf
and
xor
inc
ja
mov
aas
sbb
pop
enter
stc
lahf
repnz
lahf
lods
lds
xor
cdq
push
add
dec
fist
and
mov
push
sbb
cmp
add
not
mov
loope
jmp
jmp
cmps
cmp
in
xor
ficomp
ins
outs
cvtps2pi
adc
jle
mov
loop
ins
test
pop
xchg
pop
dec
mov
sub
sbb
mov
or
gs
lods
inc
sbb
push
jbe
stos
dec
cmp
mov
xchg
daa
push
sti
mov
push
aas
jne
or
xchg
in
out
inc
xor
mov
xor
jns
or
(bad)
ja
or
fwait
adc
imul
adc
test
pop
jle
scas
rol
inc
cld
dec
adc
(bad)
aas
shl
inc
sahf
sti
fdivr
mov
sub
lock
xchg
push
sahf
in
(bad)
sahf
push
les
movs
das
cmp
inc
and
xchg
scas
mov
scas
mov
add
or
jmp
lahf
leave
das
adc
dec
ss
xor
js
push
pusha
daa
stos
(bad)
and
das
data16
cdq
mov
pop
sub
xchg
cmc
lds
push
shl
push
ss
mov
pop
xchg
not
mov
mov
popf
and
in
(bad)
mov
jg
fdiv
adc
pop
lahf
inc
in
popa
out
push
jb
or
sbb
sub
cmp
xor
push
sahf
movs
dec
mov
fdiv
mov
mov
jmp
dec
mov
je
iret
rol
adc
dec
adc
xcrypt-cbc
cmps
xchg
(bad)
aad
nop
mov
enter
and
jle
nop
(bad)
jp
xchg
lock
sbb
or
xor
push
xor
push
cwde
fnstenv
std
shl
push
aam
push
cld
add
scas
push
loopne
daa
int3
out
mov
lfs
push
lds
push
mov
mov
inc
lods
xchg
mov
aad
leave
inc
rcl
xchg
pop
clc
jle
cmp
sbb
adc
jns
sbb
adc
nop
rep
pop
adc
js
dec
ret
jg
inc
int
or
mov
adc
sbb
ret
mov
push
mov
in
sar
sti
or
popa
adc
out
adc
add
adc
jp
lods
fwait
cmp
in
div
jle
mov
std
sbb
sbb
mov
(bad)
mov
arpl
cmp
xor
mov
scas
(bad)
and
out
pop
sbb
cmps
pop
cmp
mov
xor
jmp
sub
and
jae
pop
pop
lock
add
xchg
or
lahf
in
fcomip
bound
(bad)
lods
repnz
gs
(bad)
lock
inc
sbb
clc
es
fwait
outs
inc
pop
lahf
aad
fiadd
icebp
dec
rcr
mov
mov
sti
push
add
pop
push
inc
mov
jmp
mov
popf
push
jecxz
jo
lods
inc
movs
cmp
adc
inc
jg
ror
mov
pop
repnz
cld
mov
imul
jl
mov
pop
ficom
jl
push
push
sub
or
test
jb
imul
dec
sub
ror
(bad)
xlat
ss
pop
outs
fucom
jb
pop
mov
(bad)
sbb
xchg
inc
pusha
fadd
mov
pushf
scas
xor
cmps
sbb
xchg
adc
or
pop
jne
adc
lock
idiv
pop
adc
int
sbb
(bad)
add
das
sub
mov
mov
fistp
xlat
addr16
pop
popa
gs
add
dec
xor
int
mov
mov
loop
not
and
cmp
movs
xchg
xchg
outs
sar
pop
(bad)
fsub
fnstenv
adc
cmp
mov
mov
mov
(bad)
cmp
jns
pop
and
sbb
dec
xchg
cdq
gs
or
movs
jg
sar
cmp
iret
paddusb
movs
arpl
aaa
cdq
outs
ins
sbb
and
cmps
jno
mov
data16
js
inc
rol
mov
outs
out
jno
and
mov
fs
scas
mov
push
cmp
cmp
in
adc
clc
jae
neg
std
(bad)
xor
aad
icebp
(bad)
jmp
or
retf
icebp
sub
sbb
mov
bound
je
ret
mov
imul
fwait
pop
call
mov
jp
popf
scas
out
cmp
add
jae
jge
dec
adc
jnp
pop
add
movs
xor
stc
call
sar
add
add
rcr
mov
and
inc
arpl
arpl
cdq
add
fisub
pushf
xor
enter
jb
xchg
cmp
out
xlat
stos
mov
xor
cmps
pushf
mov
int
and
mov
xchg
pop
pop
or
and
fiadd
pop
ja
pop
xchg
stc
test
jp
push
mov
adc
sbb
sbb
mov
int
mov
dec
push
popf
push
leave
div
sbb
loope
pop
jb
nop
cmp
cmp
pop
repz
mov
ds
call
imul
jge
xor
ins
mov
sub
pop
aas
xchg
xchg
lock
in
xor
mov
inc
sub
and
in
jmp
mov
iret
push
or
jbe
or
pop
cmps
test
imul
jb
shl
push
jnp
xor
lods
lahf
pop
cmps
pop
fs
dec
push
add
mov
push
dec
lods
mov
add
adc
imul
fdivr
dec
sbb
fstp
cmp
repnz
fcmove
mov
div
cld
loop
pushf
ret
xor
inc
xlat
cmp
mov
xchg
and
and
cmp
mov
movs
into
ss
push
fisubr
(bad)
and
pop
mov
les
mov
out
dec
jbe
jecxz
jmp
jns
lods
jns
inc
test
fisubr
xor
push
out
dec
mov
xor
sbb
cmp
adc
sub
jle
adc
xchg
push
cmc
or
fwait
and
push
sbb
sub
ss
inc
mov
mov
and
ffreep
dec
jbe
sub
call
and
jmp
mov
add
push
push
or
fistp
(bad)
lahf
movs
or
and
std
inc
jo
pushf
inc
hlt
in
dec
ds
adc
push
and
es
bound
push
bnd
test
mov
sbb
mov
aad
mov
test
jae
mov
repnz
sti
out
jmp
push
adc
out
mov
shl
push
stos
sub
test
in
popa
pop
test
sti
sar
loope
jbe
jae
(bad)
neg
(bad)
adc
fbstp
stos
daa
mov
scas
nop
push
or
xor
cmp
cwde
mov
xchg
sub
fmul
fnstcw
add
aaa
(bad)
out
adc
sti
mov
in
pop
fadd
sbb
jnp
imul
loope
xchg
scas
scas
jns
pop
movs
aaa
dec
xchg
dec
and
hlt
mov
sbb
sahf
sbb
mov
sbb
ror
mov
pop
movs
mov
inc
xchg
dec
push
shl
es
sar
mov
push
fimul
and
mov
mov
sbb
stc
dec
test
inc
add
adc
add
fucomp
fs
out
cmc
and
adc
nop
dec
mov
test
test
xchg
cmps
aad
hlt
xor
xchg
sub
or
mov
icebp
inc
es
(bad)
mov
sahf
ret
inc
jmp
push
jmp
call
div
ds
(bad)
nop
out
out
add
and
add
loop
mov
pop
fidivr
add
(bad)
ins
pop
xchg
xor
iret
sbb
fsubr
loope
leave
ror
in
mov
repnz
into
test
or
fisubr
push
push
inc
push
lods
inc
cmp
ds
ret
push
int3
inc
ficom
icebp
push
ficom
dec
repz
aam
imul
leave
ss
fdiv
inc
and
push
pushf
hlt
jp
pop
pushf
mov
or
sti
jle
mov
jmp
push
or
push
daa
cmps
mov
mov
xchg
push
loopne
push
vmread
pop
data16
mov
pop
out
imul
pop
sub
addr16
sub
mov
sbb
xlat
imul
out
push
ss
sbb
xchg
pushf
ret
call
iret
jnp
sbb
test
popa
cmp
cmps
dec
push
mov
and
iret
dec
outs
and
and
scas
xchg
aam
mov
mov
in
pop
sbb
mov
pop
jmp
clc
cs
popa
push
idiv
js
sbb
fmul
xor
jecxz
ins
sbb
jns
fst
les
mov
inc
jns
test
aas
sar
add
lahf
dec
inc
ins
cmps
in
stos
xchg
scas
xor
dec
sub
add
jg
and
pop
loope
mov
and
jnp
xchg
pop
lahf
int3
ja
aad
int3
push
icebp
test
addr16
mov
std
mov
pop
xor
push
push
in
xor
cmp
fstp
mov
add
shl
lods
dec
gs
test
scas
xchg
cld
jg
pop
int3
mov
cli
mov
lock
push
call
(bad)
jb
mov
add
pminsw
mov
sbb
add
jb
inc
mov
pop
jge
mov
push
sub
mov
mov
test
movs
pushf
outs
ret
dec
ja
or
jl
mov
repz
jle
fs
fs
mov
int3
dec
iret
mov
(bad)
call
cmps
fcom
pop
leave
xchg
sub
xchg
pop
jp
pop
retf
adc
jecxz
(bad)
dec
(bad)
mul
inc
mov
pop
out
pop
lods
pushf
add
cmp
pop
mov
add
add
pusha
or
cs
xchg
adc
outs
sahf
inc
and
sbb
sbb
scas
sub
jb
or
movs
hlt
movs
aam
call
outs
mov
loope
and
adc
mov
fcom
stos
call
xor
push
xchg
lea
fadd
movs
in
ins
mov
fxch
retf
mov
loopne
adc
cmp
stos
mov
and
imul
jns
cmps
ins
xchg
push
jmp
pop
test
xor
(bad)
add
int3
in
idiv
and
add
sub
dec
jae
jl
and
cmp
gs
sar
fmul
dec
ins
cmps
or
sbb
push
jl
fdivrp
ret
xchg
jb
pop
enter
fdivr
enter
or
adc
or
(bad)
loopne
in
cwde
bound
sbb
imul
add
rol
jg
jge
arpl
jnp
add
int3
(bad)
test
inc
xor
lods
xchg
addr16
ret
(bad)
or
shr
das
mov
sbb
or
xor
(bad)
adc
dec
pop
inc
std
mov
loopne
and
loop
cs
cmp
sub
jg
dec
and
hlt
xchg
add
jp
and
sub
gs
inc
cmp
imul
fs
add
dec
pop
lea
mov
popf
test
dec
rol
addr16
cmp
xor
pop
retf
ja
jmp
inc
lods
sub
cmp
dec
or
push
bound
aaa
stos
fdiv
and
adc
enter
pop
in
iret
sbb
mov
and
(bad)
push
mov
bound
jg
sbb
repz
cmp
mov
ins
cmp
push
test
lds
pop
fimul
je
sbb
nop
xchg
test
inc
in
xchg
stos
rol
pushf
enter
hlt
inc
stc
add
inc
adc
(bad)
push
mov
and
inc
frndint
push
push
add
sub
pusha
les
es
or
outs
mov
out
lds
inc
(bad)
(bad)
jns
xchg
dec
(bad)
into
pop
xor
mov
stos
xchg
mov
pop
lahf
and
mov
cld
dec
dec
xor
cld
call
(bad)
adc
and
mov
jae
in
ins
push
out
das
enter
pushf
or
mov
sahf
jmp
sub
mov
pop
jp
je
cli
imul
(bad)
mov
in
add
ins
xor
jae
and
cli
mov
inc
push
movs
aam
pop
shr
movs
pop
adc
jmp
arpl
push
bound
mov
add
outs
cmp
stos
add
dec
push
mov
mov
mov
push
out
(bad)
cmc
sar
mov
sbb
mov
jg
imul
and
out
adc
and
pop
mov
stos
pop
cmp
xchg
push
outs
cmpxchg
gs
std
outs
lods
js
xchg
loope
and
jnp
test
sub
adc
ret
mov
outs
and
mov
out
in
jg
mov
outs
cmps
pop
stos
dec
cdq
dec
popa
xlat
jle
lea
(bad)
rcl
mov
(bad)
cdq
icebp
add
jg
inc
push
mov
aad
pop
in
mov
cmp
lods
mov
inc
adc
aad
mov
pop
mov
xchg
loope
retf
jbe
mov
out
fdivr
(bad)
shr
and
pop
cmp
call
xchg
loope
add
loope
sahf
(bad)
xchg
out
inc
call
push
ror
std
push
xchg
mov
and
xchg
push
or
popa
in
push
ins
sbb
movs
push
add
dec
sub
lds
adc
movs
add
sti
cmp
sbb
xchg
mov
retf
rcl
xor
aad
mov
fnstenv
mov
mov
enter
xlat
jbe
ss
jg
or
stos
ins
cli
xlat
outs
arpl
lds
xor
loope
sbb
mov
enter
and
lds
push
jmp
out
xchg
fsubr
adc
dec
mov
in
in
leave
in
out
adc
xchg
push
test
xor
test
dec
sbb
and
cld
xchg
push
inc
lock
(bad)
push
and
pop
les
sub
dec
pop
(bad)
cs
daa
(bad)
xchg
cmps
jae
rcr
sbb
sahf
or
imul
cs
sbb
adc
mov
or
dec
pop
xchg
sub
push
stos
das
cs
mov
mov
or
or
push
cwde
dec
fcmovne
push
inc
dec
push
push
sub
out
jno
cmp
jmp
mov
inc
mov
push
ret
cmp
aad
pop
in
push
push
inc
mov
fwait
jecxz
mov
aam
mov
sbb
mov
movs
ss
xor
sub
xor
cs
jb
jo
pop
stos
mov
shl
mov
jg
cmps
cmps
test
mov
test
ja
adc
mov
fsub
push
into
xchg
xor
mov
dec
dec
and
popf
cli
and
jno
and
fs
das
inc
push
sbb
fsubr
xchg
mov
jle
dec
int
add
pop
mov
adc
dec
inc
sub
pop
test
push
dec
sub
test
xor
xchg
enter
mov
adc
loopne
and
addr16
int
arpl
jg
daa
mov
push
and
jmp
xchg
ret
xchg
sti
pop
(bad)
jle
sub
fcomp
mov
out
push
sub
repnz
jno
mov
arpl
inc
fiadd
cmp
or
push
bound
les
pop
mov
imul
cli
bound
ds
add
xchg
pop
pop
xor
jnp
ins
jnp
lea
mov
sub
mov
mov
push
pop
push
push
mov
les
dec
imul
in
jge
retf
aad
pop
iret
out
sub
jae
outs
push
mov
xor
sub
(bad)
test
cli
std
in
adc
mov
jle
lahf
retfw
cmp
inc
adc
enter
dec
add
mov
movs
jecxz
lea
jno
arpl
outs
mov
ret
pusha
jns
test
push
xor
das
inc
dec
jno
add
pushf
xchg
(bad)
sbb
jle
cwde
stos
fcomp
inc
imul
dec
mov
or
adc
inc
and
push
jb
lds
push
inc
je
jne
push
push
inc
pop
pop
mov
(bad)
cwde
stc
dec
fld
loopne
out
scas
push
sub
fldenv
sub
or
repz
es
les
sub
(bad)
mov
and
fs
jecxz
fmul
or
test
cmp
add
sub
mov
adc
mov
sbb
inc
das
pop
push
icebp
jnp
push
popf
fs
lea
push
jecxz
stos
imul
cmps
cmps
in
mov
cmp
movs
sbb
sub
ja
xlat
daa
or
mov
push
mov
cwde
retf
and
inc
xchg
xchg
stos
sub
lods
push
mov
push
lock
mov
xchg
add
(bad)
pop
jb
xchg
cdq
add
mov
fnstsw
fs
int
test
xchg
mov
add
and
in
pop
mov
repz
data16
mov
in
add
jg
or
int3
aas
(bad)
out
fsubr
mov
xchg
(bad)
jg
cmp
imul
adc
loopne
cli
stc
push
jb
push
pop
xor
mov
(bad)
icebp
les
or
(bad)
fwait
test
in
sub
cmps
outs
in
xor
jae
test
ins
mov
lea
mov
push
cmp
test
loopne
sbb
push
xchg
xchg
aaa
jle
and
in
mov
jb
imul
test
pusha
add
sub
add
(bad)
shl
adc
stos
mov
sbb
mov
adc
sub
(bad)
mov
cmp
stos
inc
dec
popf
dec
adc
arpl
mov
gs
call
ret
fisttp
shl
popf
sbb
in
dec
add
sub
lds
inc
or
fsubr
out
shl
push
mov
inc
shld
wbinvd
jno
pop
inc
popf
arpl
jae
push
inc
inc
sbb
xor
bound
outs
leave
push
rcl
cmps
push
sbb
mov
inc
in
mov
in
daa
sub
dec
cmp
inc
aaa
rcr
mov
push
xchg
dec
sub
jbe
mov
xchg
loopne
xchg
(bad)
mov
inc
or
mov
xchg
push
retf
cmps
leave
mov
enter
dec
mov
inc
mov
lahf
and
int3
jbe
pusha
mov
cli
jmp
jg
je
sti
(bad)
mov
ins
dec
cld
mov
imul
cwde
mov
xor
lahf
ss
mov
repz
cmp
nop
rcl
xchg
add
xor
sbb
shr
jb
sar
xor
cmp
cmps
sbb
sbb
mov
pop
stc
jg
sbb
and
retf
fsubr
pop
cli
jmp
push
push
popa
push
cdq
xor
xlat
xchg
ins
xchg
rcr
jae
inc
jmp
repz
xor
aas
adc
iret
inc
sub
fcmovb
enter
mov
out
dec
dec
stos
lea
std
int3
push
and
add
shl
sbb
mov
pop
popf
neg
es
cli
xchg
push
jmp
stos
push
sub
inc
mov
fs
xchg
dec
adc
adc
stos
call
jg
sbb
fwait
fwait
cwde
clc
dec
xchg
adc
xor
pop
and
mov
lds
or
repnz
mov
imul
into
sahf
push
add
xchg
add
stos
sbb
adc
xor
sub
dec
scas
adc
mov
or
fmul
ss
iret
stc
repz
jne
jb
cmp
sub
enter
dec
jns
dec
xor
jno
fnstsw
frstor
xchg
fsubr
mov
bound
inc
or
xchg
and
add
sbb
push
scas
pop
outs
sbb
fxch
sbb
ds
pop
cmp
cmp
pusha
jle
mov
mov
add
sub
pop
push
sub
jbe
call
xor
sbb
push
mov
loope
dec
clc
add
iret
jae
sti
inc
inc
xchg
and
or
repnz
into
adc
adc
xchg
add
not
stos
push
lahf
(bad)
jl
mov
(bad)
mov
gs
in
cdq
cs
fld
nop
mov
mov
out
cmp
in
inc
and
push
stos
or
sub
and
pop
rcr
or
dec
fldcw
mov
sbb
jmp
jae
ret
fist
sub
sbb
add
jbe
retf
ins
cmp
jnp
jl
(bad)
mov
xor
mov
jg
sahf
adc
pop
stos
pop
outs
adc
jns
inc
dec
fs
inc
pusha
xor
aad
adc
pushf
add
test
mov
not
mov
retf
xor
movs
pop
push
iret
mov
enter
movs
leave
sti
pop
mov
and
jae
xor
adc
xor
xor
mov
add
arpl
or
mov
(bad)
cmps
push
sbb
fisubr
fnstsw
inc
sbb
dec
mov
xor
jmp
cmp
xor
loope
mov
lods
fidivr
cmp
jno
es
lds
jmp
mov
and
fbstp
mov
(bad)
idiv
inc
sub
out
(bad)
cmc
add
leave
aaa
mov
addr16
push
push
loope
xor
cmp
jle
pop
outs
ja
stc
cli
test
ret
dec
mov
pop
js
adc
lea
sbb
(bad)
(bad)
mov
dec
(bad)
push
in
add
mov
pop
jg
js
or
mov
jecxz
mov
xlat
icebp
jne
pushf
fbld
xchg
test
jmp
mov
sub
outs
adc
sub
lds
ret
repz
and
cmp
mov
in
sbb
icebp
movs
jb
dec
call
push
lea
inc
out
test
or
dec
rcr
(bad)
test
jge
sbb
ficomp
clc
fwait
icebp
mov
popf
cmp
jg
lods
shl
das
add
inc
push
ins
clc
test
hlt
lock
add
push
xor
lock
and
and
std
fild
aad
ins
xor
(bad)
push
mov
jmp
or
cs
pop
or
lds
xchg
in
or
in
sub
pop
cs
int
cwde
dec
inc
jno
mov
je
push
mov
iret
jl
adc
out
std
and
fwait
test
popf
jo
aad
or
mov
repnz
daa
mov
popf
pop
xchg
addr16
jmp
xlat
or
leave
push
adc
out
inc
mov
xchg
add
adc
cmp
div
movs
cmp
jbe
aam
add
fs
sub
adc
(bad)
cwde
jmp
pop
dec
mov
outs
xor
sub
xchg
popf
push
pop
inc
pop
sub
adc
pop
pop
xchg
cmps
icebp
cdq
mov
add
dec
mov
or
bound
popf
adc
int
lods
fist
call
ja
add
loop
adc
outs
push
test
popf
xchg
aas
jecxz
mov
push
pop
in
xchg
out
repnz
mov
das
jle
shl
out
bound
push
jnp
cmp
cmp
sub
scas
pusha
add
pop
(bad)
inc
cdq
in
sbb
inc
ja
jbe
mov
inc
push
sub
test
xchg
test
arpl
stc
retf
cmp
jp
int
in
cdq
push
xchg
push
pop
dec
fild
shl
pop
inc
(bad)
pop
push
fsub
mov
or
xor
sbb
xchg
sbb
out
fstp
mov
fdiv
fnstcw
(bad)
rol
push
loopne
jecxz
inc
or
mov
push
inc
xor
(bad)
cli
es
lods
dec
add
adc
outs
sbb
push
mov
xchg
adc
sub
and
mov
jge
jno
data16
lods
push
loope
nop
cs
pushf
into
xchg
outs
pop
adc
lods
aad
popf
xlat
loop
out
(bad)
bound
mov
aam
add
adc
in
cmp
out
or
and
xchg
mov
mov
pop
les
aas
inc
adc
scas
in
das
add
movs
dec
ins
xor
lods
dec
fucomip
call
aas
adc
cdq
pop
cmp
hlt
mov
mov
mov
sbb
xor
aam
mov
mov
pop
dec
and
call
mov
mov
cmc
pop
or
mov
mov
clc
jmp
shl
push
scas
jmp
es
jae
(bad)
xchg
mov
sbb
adc
in
jbe
scas
dec
xchg
sub
ds
das
popf
dec
enter
sbb
imul
adc
hlt
out
sub
mov
jne
out
in
pop
mov
lock
mov
adc
sbb
cmp
ins
add
dec
add
xlat
(bad)
(bad)
movs
movs
add
add
pop
fist
cmp
push
pop
sub
sar
into
adc
cmp
lods
mov
bound
mov
jg
pop
fdivp
jb
ins
and
cld
sub
pop
xor
xor
add
loopne
and
pop
fadd
clc
fmul
(bad)
fidivr
inc
xchg
jne
and
cmp
add
mov
repnz
sti
clc
push
push
jae
xchg
mov
mov
loop
jae
push
dec
stc
xor
xchg
adc
xor
cli
mov
fiadd
ja
call
(bad)
xlat
jo
rol
inc
xor
aas
add
adc
outs
fwait
jae
mov
sti
push
std
xchg
mov
(bad)
push
lea
pop
xor
push
xchg
scas
mov
mov
ret
cs
add
push
sub
loopne
jle
loope
jbe
ins
add
dec
fld
pop
dec
retf
xor
ja
sub
adc
jb
jns
pop
pusha
(bad)
shl
call
inc
ins
sahf
in
cmps
mov
ss
inc
fisub
sub
pop
jnp
push
ins
sahf
jecxz
dec
adc
scas
inc
aaa
test
fs
push
adc
fdivr
mov
push
pop
shl
retf
cli
call
call
aam
sub
and
inc
sbb
retf
jnp
pop
inc
pop
enter
or
fild
mov
push
inc
cmp
(bad)
sbb
neg
mov
pop
inc
sub
retf
fdiv
lds
mov
cld
out
pop
jp
or
sbb
mov
mov
(bad)
adc
in
cmps
jecxz
push
jns
xchg
jl
call
in
push
cmp
sar
sub
jmp
lock
cmp
in
arpl
mov
push
cmps
jns
cwde
lock
scas
jg
pop
adc
sti
lock
inc
lahf
test
shr
test
mov
ja
sbb
je
stc
rol
(bad)
adc
sahf
repnz
inc
sbb
pop
movs
sbb
cmps
or
(bad)
dec
scas
clc
repz
fmul
and
dec
lds
jmp
sbb
pop
sub
cmp
imul
and
aas
imul
les
xor
or
lock
cmp
jb
(bad)
dec
jecxz
mov
daa
(bad)
sti
add
retfw
inc
mov
mov
daa
(bad)
inc
pcmpeqb
or
push
test
jmp
call
mov
es
icebp
pusha
lds
jle
je
inc
scas
mov
shl
mov
xor
xchg
dec
inc
jb
sub
outs
aad
mov
rcl
mov
and
mov
mov
cmc
shl
xchg
aad
sbb
fmul
loopne
into
mov
jl
fistp
call
test
sti
mov
int
push
and
mov
mov
fidivr
and
xchg
sar
dec
jge
icebp
inc
ror
rcl
ret
and
push
ds
aas
cmp
lods
dec
jne
daa
loopne
dec
add
sbb
adc
loope
xor
dec
push
push
mov
xchg
push
dec
jb
mov
das
inc
dec
add
and
cmc
cmp
fs
dec
cli
stos
pop
or
into
sub
xchg
or
ficom
shl
or
xchg
loopne
jle
mov
push
aaa
push
push
ret
cmp
arpl
cmp
xor
cmc
cmp
mov
sub
sbb
pop
inc
xor
dec
data16
dec
call
inc
dec
push
push
xor
push
and
mov
or
mov
add
inc
mov
test
cmps
jae
inc
movs
ins
outs
jge
out
dec
or
call
or
and
jmp
sahf
(bad)
into
xor
(bad)
cwde
bound
sub
jne
(bad)
dec
cmp
arpl
mov
xor
adc
adc
movs
sbb
mov
sti
sbb
dec
push
inc
jl
fst
ja
ja
scas
leave
mov
loopne
faddp
push
mov
pushf
outs
sbb
dec
inc
fcomp
inc
sbb
scas
jecxz
adc
or
adc
fisttp
ss
or
xchg
fiadd
push
fcomp
or
and
add
sub
icebp
jmp
or
cmps
in
cld
add
pop
dec
jl
pop
jae
mov
cs
lock
popf
pusha
push
add
dec
sar
push
out
lods
das
mov
nop
and
mov
les
fisubr
(bad)
cmp
mov
icebp
jmp
data16
xlat
jb
call
push
lock
ds
ror
or
xlat
popf
jmp
push
xchg
repz
mov
xchg
ins
lock
add
push
stos
and
hlt
mul
movs
ret
dec
popf
pop
cmp
xchg
inc
push
lods
lock
xchg
push
sti
retf
cdq
xor
gs
jbe
clc
or
not
inc
push
dec
loopne
ins
mov
jmp
out
(bad)
test
mov
adc
mov
xor
outs
(bad)
dec
das
mov
xchg
lods
pop
mov
jae
adc
mov
add
ds
das
xchg
and
inc
push
xchg
mov
les
push
hlt
mov
imul
sahf
pusha
cmp
outs
loop
pop
add
cwde
pusha
repz
das
ss
mov
mov
jge
loopne
add
mov
push
cmp
jmp
pushf
lea
pop
cmp
xor
mov
sbb
xchg
(bad)
fisttp
out
sbb
jg
push
mov
bound
sub
sub
cmps
iret
call
cmp
lds
sub
mov
test
pop
and
cmp
sar
mov
fld
pop
pushf
ins
stc
lds
into
ror
cwde
mov
je
inc
in
pop
jno
mov
shl
lods
pop
add
xor
xor
xchg
sbb
xchg
iret
jnp
dec
les
mov
push
inc
aam
loope
jmp
outs
bound
inc
jl
les
clc
push
loop
loopne
and
outs
mov
pop
push
sub
add
inc
xor
push
mov
adc
jne
sub
icebp
cwde
sbb
sbb
cmc
jecxz
adc
mov
imul
sub
jp
fldenv
fdivr
sbb
push
push
stos
xor
jl
popa
push
fcom
cmps
ja
xor
imul
add
inc
in
dec
mov
xor
adc
mov
dec
inc
mov
fadd
cmp
clc
aaa
push
(bad)
cmp
cmp
sub
loop
or
push
fs
ss
enter
neg
sub
pop
(bad)
mov
xor
and
cmps
je
push
pop
lods
rcl
in
mov
pop
and
repz
jl
dec
jmp
jbe
(bad)
cmp
sub
xor
xchg
xchg
xor
call
es
xor
mov
(bad)
retf
inc
xor
xchg
mov
outs
inc
(bad)
mov
clc
pop
xor
lods
dec
sub
pop
enter
or
xor
mov
inc
adc
add
xor
jo
xor
jecxz
cmp
push
mov
adc
sub
frstor
pop
xor
mov
std
fwait
push
hlt
adc
cmp
mov
jg
and
jmp
push
daa
icebp
arpl
idiv
ret
test
aad
cmp
adc
or
cmps
(bad)
cli
aaa
jmp
jo
(bad)
fwait
adc
xchg
je
test
sbb
test
call
pop
out
cld
adc
pop
rcr
adc
movs
les
mov
out
add
shl
test
mov
or
scas
pop
and
dec
std
daa
adc
pushf
mov
adc
jmp
loopne
push
scas
inc
mov
pop
(bad)
in
add
cmp
fdivr
mov
add
pop
clc
or
add
xor
arpl
dec
aad
sbb
stos
mov
xor
outs
call
jmp
cdq
cmps
bound
imul
mov
cmc
add
mov
(bad)
mov
and
mov
rol
inc
inc
cmp
and
aam
dec
fdivr
jno
add
xlat
xchg
out
stc
ins
out
retf
add
pop
repnz
adc
sub
cmp
out
(bad)
ds
out
cld
out
and
std
cmps
pop
xor
aam
fisubr
popf
hlt
push
test
aas
jno
xchg
retf
ds
loopne
and
les
aaa
cmps
div
cwde
jmp
das
cmp
cmp
xor
push
cmp
xor
push
xchg
sub
jo
ret
(bad)
mov
in
inc
test
repz
adc
cdq
xchg
ja
cmp
push
mov
pop
pop
loope
add
cwde
push
in
inc
push
inc
mov
ss
fcomp
mov
jo
or
jnp
add
dec
jb
test
nop
test
jns
ficom
data16
lock
pop
enter
jne
sbb
cmp
push
xchg
pop
fwait
xor
add
fdivr
sub
inc
dec
or
mov
ins
pop
inc
or
fwait
sbb
jbe
mov
(bad)
mov
mov
pop
retf
lahf
sub
(bad)
push
ror
mov
xor
js
ret
pop
test
pop
mov
rol
push
in
lahf
cli
ficomp
cmc
mov
(bad)
pop
sub
stc
jbe
clc
retf
call
pop
fisub
or
sub
jne
jae
movs
mov
scas
leave
mov
sbb
sar
js
dec
js
jge
cmp
sub
xchg
xor
xchg
cmp
mov
xchg
(bad)
push
and
mov
dec
nop
inc
test
xchg
mov
or
jae
jmp
jl
(bad)
fcmovb
lea
imul
arpl
xor
fs
jle
xor
mov
neg
fsub
call
ja
or
das
iret
and
out
xchg
sbb
inc
sub
fwait
not
cld
add
mov
add
push
out
fnsave
and
test
push
jl
pop
mov
mov
sub
div
call
push
sbb
mov
push
jae
test
leave
data16
mov
adc
and
fsubp
fsubr
out
xor
jns
pop
jmp
stc
push
and
out
das
add
repz
push
sub
push
in
adc
adc
popa
loopne
(bad)
in
add
fwait
mov
mov
mov
add
mov
hlt
sbb
cmp
pushf
push
cmp
loope
pop
adc
fmul
dec
jo
sbb
xchg
push
and
out
ss
or
xchg
mov
cmc
outs
jns
pop
add
pop
mov
clc
shl
xor
cld
(bad)
cmc
shl
pop
inc
loopne
std
jmp
pop
fst
scas
jae
adc
popa
sar
fidiv
les
add
rol
sbb
jge
push
outs
imul
mov
or
push
sbb
inc
push
imul
jl
cld
pop
inc
push
xchg
add
xor
sti
xchg
push
sbb
jge
stos
(bad)
pop
lock
jnp
ror
push
cmp
add
or
ret
jl
lods
push
dec
into
das
xor
and
fs
cmps
fs
cmp
cmp
into
pusha
ja
add
cmps
dec
mov
popa
mov
jo
adc
xor
shl
sbb
jmp
cli
jge
push
data16
mov
shl
out
test
iret
cli
retf
ja
dec
pminsw
imul
xchg
dec
aad
mov
xor
push
dec
mov
daa
ins
loope
arpl
inc
jne
mov
mov
mov
(bad)
mov
mov
mov
dec
fldenv
arpl
jmp
push
aam
(bad)
(bad)
dec
mov
mul
inc
push
dec
je
cs
pop
cli
and
add
xor
sar
gs
dec
dec
(bad)
in
push
mov
out
popa
sub
mov
push
pop
lock
not
scas
test
or
xchg
shl
inc
adc
stos
ja
outs
ja
std
and
mov
xlat
jnp
mov
test
add
in
mov
pusha
push
data16
test
test
xlat
nop
mov
fiadd
pop
mov
push
sbb
mov
pop
adc
xchg
mov
dec
push
movs
or
test
pop
jmp
cmp
mov
outs
add
sub
mov
mov
sti
lahf
dec
and
push
or
mov
cli
out
sbb
adc
cld
push
adc
dec
mov
mov
dec
jno
test
jae
out
push
(bad)
jnp
push
pop
mov
push
vmwrite
int3
push
(bad)
out
ins
cli
push
scas
imul
icebp
add
xchg
mov
std
test
repz
jecxz
xor
ds
inc
cdq
mov
mov
arpl
cdq
inc
ror
cli
sbb
out
ins
jg
push
adc
sub
rol
push
scas
mov
push
ins
adc
mov
icebp
cs
xchg
addr16
sub
or
and
cwde
mov
outs
outs
sub
sar
xchg
sbb
sahf
push
bound
sub
push
inc
pop
add
and
fidiv
cmp
or
movs
mov
lods
cmp
scas
sbb
xchg
scas
sub
push
(bad)
cs
sbb
mov
mov
xor
retf
pop
stos
std
in
mov
je
or
add
and
loope
bound
mov
scas
ja
out
movs
dec
fistp
(bad)
call
mul
into
outs
in
or
popf
clc
adc
jl
dec
xchg
mov
dec
pop
iret
mov
das
adc
stos
test
out
adc
dec
sbb
pop
xchg
(bad)
add
xchg
sbb
loopne
sub
imul
sbb
(bad)
cld
fdivp
push
and
test
mov
mov
add
out
and
xchg
mov
mov
jl
loopne
fs
jecxz
xlat
mov
lods
xchg
sbb
je
sub
scas
inc
(bad)
test
cmp
dec
inc
sub
daa
rcr
lods
lea
pop
rol
popf
lods
add
aad
add
sbb
xchg
mov
rcl
and
clc
imul
sub
pop
or
cmp
jp
std
mov
jae
add
fst
ss
push
mov
jp
mov
hlt
mov
les
mov
cmp
mov
push
pop
lea
mov
inc
xchg
push
je
jnp
test
rcr
test
lods
rcl
pop
aas
xchg
xor
imul
sbb
pop
inc
jl
xor
clc
xlat
fistp
adc
ret
jge
out
inc
repz
cli
or
rol
jg
and
push
push
xor
xchg
xchg
add
mov
fld
aaa
push
and
mov
mov
js
sbb
popaw
mov
mov
push
addr16
add
xchg
jge
outs
aam
sub
ds
test
ss
aaa
jno
cld
sbb
mov
pop
inc
pop
mov
mov
jns
xchg
inc
mov
lods
xor
push
sbb
test
ficomp
outs
cmp
rcl
stc
cs
out
leave
sbb
ins
mov
enter
shr
cmp
mov
loope
xchg
loopne
push
adc
mov
repz
je
jnp
neg
in
push
neg
add
dec
rcl
add
cmps
dec
dec
pop
ret
lods
mov
cmps
aas
lahf
push
sub
or
mov
loopne
sti
outs
leave
shl
dec
je
fldenv
jb
inc
add
lds
mov
sbb
cli
sub
icebp
rep
repz
aam
jo
xchg
xchg
jb
xor
fstp
retf
jl
dec
arpl
push
jae
xchg
(bad)
loopne
xchg
xchg
xchg
in
(bad)
call
xchg
retf
push
mov
xor
jnp
pop
lahf
sub
arpl
out
mov
dec
add
(bad)
mov
retf
sub
sub
dec
pop
push
mov
dec
xchg
push
pop
push
shr
ins
and
shl
mov
cmp
dec
add
enter
xor
retf
sbb
outs
mov
pop
or
in
mov
jecxz
pop
dec
inc
push
sbb
jecxz
out
mov
and
jae
jae
fdivr
mov
and
sar
mov
test
jb
jb
test
aas
test
jl
fmul
(bad)
cld
adc
push
scas
sub
mov
mov
imul
mov
sti
shl
stos
fidiv
std
or
xchg
test
jno
pop
dec
int
push
cmp
push
int3
stos
es
and
pop
jecxz
sar
arpl
pop
and
js
dec
jg
(bad)
dec
cmp
vpaddq
pop
xchg
add
pusha
push
push
(bad)
adc
cmp
pop
cli
xchg
dec
outs
mov
add
imul
(bad)
and
push
outs
std
mov
repnz
mov
int3
mov
adc
or
inc
cmps
je
xor
and
sub
(bad)
das
adc
mov
dec
enter
ins
inc
xchg
inc
int3
enter
stc
lods
jecxz
dec
jno
pop
push
iret
adc
pop
dec
or
push
cs
push
cdq
jno
jno
rol
mov
daa
xchg
mov
mov
scas
lahf
test
aam
cli
cmp
out
add
fwait
pop
shr
out
int3
pop
hlt
imul
jmp
xchg
jmp
dec
js
or
les
mov
fst
xchg
dec
mov
cmps
mov
mov
movs
hlt
or
shr
mov
sub
dec
jmp
adc
push
call
xchg
lods
sbb
neg
ins
sub
lods
sbb
push
xor
add
int3
sbb
push
ins
cmp
out
stos
loop
call
int
outs
outs
cwde
jge
(bad)
dec
jcxz
xchg
outs
add
dec
cmps
je
dec
push
shl
inc
mov
sub
(bad)
mul
fwait
out
call
adc
in
cld
sbb
jmp
inc
into
lahf
jnp
outs
retf
add
loop
pop
stos
es
fnsave
in
inc
jns
mov
loopne
xchg
or
push
(bad)
sub
cld
push
pop
and
ja
movs
xchg
ins
inc
repnz
aas
test
mov
adc
sub
mov
cmps
push
mov
out
mov
movs
shr
jge
push
sar
in
rol
lea
ins
loope
pop
test
mov
retf
mov
jmp
lahf
inc
mov
dec
mov
and
pop
mov
imul
or
add
adc
xor
cmc
jbe
popf
adc
sbb
sbb
outs
cmp
mov
xor
sub
or
aas
mov
daa
pop
and
lds
les
iret
test
inc
push
pop
scas
cmp
leave
ror
pop
mov
push
xor
cs
pop
ds
push
out
sahf
mov
mov
xchg
add
mov
cmp
cli
inc
scas
lock
ss
stc
es
xchg
push
or
outs
outs
xor
fs
ins
mov
dec
cmp
mov
mov
xor
pushf
fs
push
pop
cmp
inc
cmp
dec
jge
test
jecxz
shr
jo
outs
xor
into
in
adc
test
adc
ins
jle
int3
imul
bound
cwde
ja
rcl
div
push
push
add
dec
jne
jnp
int3
mov
and
fst
mov
fwait
nop
pusha
adc
push
push
mov
pop
imul
repz
adc
ins
push
pop
xor
out
xchg
xor
popf
ja
cmps
addr16
dec
xchg
pop
mov
ins
dec
clc
mov
icebp
xchg
fsubr
jg
out
stc
int3
sbb
or
jno
pop
test
aas
ror
xchg
test
cmp
arpl
test
retf
outs
add
pop
xor
sbb
sbb
mov
push
jne
test
es
mov
lods
jne
mov
adc
movs
mov
mov
es
push
jb
push
xchg
imul
lahf
push
fs
shl
bound
iret
push
xchg
loop
aaa
pop
sahf
out
retf
in
dec
ret
xor
cld
ins
xchg
pop
lods
mov
ins
hlt
out
clc
leave
adc
test
push
fcmovu
call
inc
(bad)
aaa
ds
dec
loopne
xor
mov
push
push
add
sbb
xor
jne
or
sbb
cmp
shr
hlt
mov
into
sbb
mov
xor
dec
and
sub
dec
rcr
or
dec
lahf
mov
pop
push
call
in
jnp
movs
in
iret
add
dec
cld
sbb
dec
or
js
es
mov
fidivr
(bad)
stos
out
outs
popa
dec
loope
cli
mov
xchg
test
call
call
xor
and
icebp
sub
add
in
outs
jl
xchg
and
sub
pop
xlat
or
loope
mov
ss
clc
adc
cmps
cld
push
rol
lods
call
push
mov
test
pop
or
pop
dec
pop
js
mov
imul
jle
cmps
arpl
aam
mov
sahf
inc
scas
shl
mov
add
dec
cmp
aaa
jp
(bad)
nop
movs
cdq
cmps
or
int
mov
clc
test
fwait
(bad)
push
loopne
push
(bad)
adc
mov
ficom
push
movs
push
stos
cmp
xor
jmp
sti
(bad)
push
mov
push
and
icebp
cld
das
rep
adc
xor
cmp
gs
jb
shl
cmp
sbb
push
pop
out
adc
sub
jae
add
test
cmps
or
frstor
in
xchg
jg
push
in
imul
call
shr
sbb
lods
fisub
jns
xor
mov
cmp
jae
add
in
out
and
push
sub
pop
mov
leave
xchg
pop
mov
jge
lods
mov
aam
push
add
shl
out
jb
mov
pop
push
fmul
or
pop
or
cdq
mov
add
dec
and
in
jae
stos
jo
iret
scas
cmp
inc
gs
and
and
pop
mov
push
das
add
sub
loop
aas
xchg
add
inc
mov
jmp
and
mov
shl
add
jecxz
icebp
mov
cmp
sub
inc
jmp
adc
mov
aaa
stos
xlat
push
icebp
jecxz
pop
cmp
jecxz
repz
xor
xchg
mov
cmp
div
push
inc
inc
pop
sub
ins
cli
sbb
sub
xor
jae
and
enter
(bad)
mov
mov
inc
adc
xchg
stos
gs
adc
lods
jns
cld
mov
and
test
sub
jmp
cmp
gs
sub
add
jle
cdq
or
(bad)
into
(bad)
sbb
and
icebp
ffree
jmp
addr16
mov
and
mov
push
sub
jbe
sub
stc
loop
sbb
xchg
xor
dec
cmp
xor
and
aam
sbb
adc
jae
inc
sbb
outs
adc
stc
adc
int
sar
and
not
call
cmp
cmp
outs
jno
mov
add
rcl
in
ds
gs
cmp
jle
cmp
dec
loopne
(bad)
std
rcl
mov
jmp
jb
sub
dec
xor
or
ins
fistp
cli
iret
stc
mov
and
in
push
sub
pop
cs
jmp
repnz
leave
mov
sbb
lahf
sub
mov
iret
stos
bound
push
sub
movsx
mov
pop
mov
inc
neg
xor
xor
pop
rol
ss
in
inc
inc
pop
or
arpl
in
enter
inc
cdq
pop
pop
out
mov
mov
xor
mov
sbb
cli
cmps
dec
mov
push
scas
lds
sub
(bad)
icebp
or
adc
imul
aad
nop
mov
add
ins
cs
push
mov
jns
cmps
dec
loopne
ss
sbb
sbb
pop
jbe
inc
sbb
jne
movs
cmp
xor
inc
test
in
ret
test
and
sti
(bad)
cli
adc
push
rcr
push
adc
xchg
adc
imul
push
sbb
fmul
jbe
ins
aad
inc
sbb
movs
ds
in
or
mov
mov
pusha
stos
adc
jge
cmp
(bad)
lods
call
repnz
jns
scas
and
inc
fadd
adc
sub
xchg
jns
shl
push
movs
in
movs
xchg
mov
es
je
inc
std
(bad)
cdq
aaa
repnz
cmp
ficom
iret
imul
stc
push
jns
mov
mov
pop
or
and
(bad)
mov
mov
nop
and
test
mov
pusha
gs
ret
mov
sti
(bad)
add
pop
sbb
mov
(bad)
sub
add
push
rcl
in
imul
mov
imul
sbb
jb
mov
and
add
add
push
loop
inc
ficomp
cmps
js
bound
cs
add
shl
push
jbe
sub
inc
movs
enter
jns
xchg
aaa
mov
hlt
mov
int3
retf
mov
or
xchg
stos
sbb
jle
out
push
popa
aaa
lods
in
pushf
sub
adc
dec
mov
stos
push
ja
idiv
cmp
dec
push
dec
cmps
jb
mov
movs
(bad)
fdiv
jne
(bad)
dec
jns
sbb
idiv
push
cmp
xor
push
lds
jmp
jae
push
out
icebp
mov
push
push
sbb
loopne
or
nop
call
mov
nop
inc
mov
xor
mov
(bad)
fldenv
xchg
mul
xchg
cld
push
add
jno
movs
(bad)
jmp
inc
sar
popf
aas
movs
repz
xlat
mov
mov
mov
mov
stc
stos
movs
add
mov
cmp
lahf
add
or
pop
add
(bad)
jae
adc
test
jo
mov
sbb
push
lea
fist
mov
or
pop
mov
ja
mov
mov
fsubr
add
addr16
inc
enter
sbb
sub
push
test
xchg
call
add
(bad)
jmp
fstp
aad
sub
push
jg
js
or
ffree
cwde
pop
push
push
inc
mov
int
rcr
or
cmovo
(bad)
out
add
cmps
adc
test
sub
std
xor
push
lahf
inc
pop
aas
jbe
sbb
popa
mov
pop
sub
stc
mov
mov
sub
daa
xor
arpl
jns
mov
loop
scas
retf
sub
add
sbb
cmp
jge
int3
push
(bad)
mov
or
scas
arpl
pop
add
aad
mov
xchg
jle
rcpps
arpl
or
imul
ds
mov
cs
cli
leave
call
hlt
iret
sar
dec
pop
lock
outs
iret
or
dec
scas
add
inc
and
sub
scas
js
je
push
mov
out
mov
jle
sub
sti
or
cmp
push
les
sbb
rcr
xchg
xor
pusha
lahf
cwde
push
fsub
sbb
inc
mov
sbb
push
add
xor
jnp
movs
les
fwait
jae
pusha
xor
mov
mov
mov
retf
arpl
es
test
mov
push
adc
push
(bad)
dec
or
ficomp
mov
fdiv
sub
bound
mov
gs
stos
out
fadd
xchg
(bad)
stos
xchg
loop
xchg
stos
lahf
jns
adc
sti
loop
out
or
shl
out
lods
mov
lgs
mov
gs
pop
sbb
cmp
pop
adc
jo
mov
stos
jmp
xchg
enter
sbb
aam
scas
mov
popa
push
push
cmp
ror
mov
xchg
cmc
and
shl
or
cwde
ins
jne
aas
neg
jl
out
cmp
fisub
inc
stc
mov
(bad)
sbb
scas
mov
sub
add
sbb
ins
call
push
ret
shl
stos
push
cmp
jno
les
(bad)
or
sbb
inc
fnstenv
movs
mov
mov
retf
mov
fnsave
mov
dec
sub
inc
mov
cmp
mov
cmp
mov
comiss
(bad)
out
cdq
dec
inc
(bad)
gs
mov
cmps
call
or
stc
pop
sub
lods
jne
adc
jae
popa
movs
arpl
jecxz
sub
mov
das
pop
dec
sbb
lods
cwde
test
cmp
dec
mov
mov
call
add
popa
(bad)
xchg
pmaddwd
mov
loope
pop
ins
and
les
jl
into
fwait
lods
ins
fistp
dec
and
imul
out
nop
inc
ror
mov
mov
adc
cwde
xchg
test
mov
cs
sub
xor
ja
xchg
pop
add
inc
sti
adc
pop
add
mov
lods
ja
ss
pop
sbb
sahf
std
leave
fld
(bad)
mov
jmp
pop
sbb
add
mov
mov
mov
and
(bad)
out
(bad)
(bad)
add
es
mov
xchg
fstp
pop
stc
cs
lahf
dec
mov
mov
mov
and
inc
mov
sar
mov
jp
out
mov
js
xlat
mov
rcl
or
or
ret
mov
adc
iret
push
push
and
mov
cwde
pop
test
cmp
jnp
(bad)
pop
stos
mov
fdiv
push
jg
jb
fsubr
xchg
pop
out
addr16
fild
push
jg
neg
outs
lock
jb
fsubrp
xchg
jle
add
inc
stc
jecxz
push
and
sti
(bad)
jmp
adc
fwait
mov
mov
ret
neg
push
ins
push
dec
or
fdivr
outs
jge
int
add
mov
sti
ja
lock
les
or
bound
inc
cmp
les
imul
adc
and
or
dec
(bad)
(bad)
cdq
pop
dec
pop
adc
movs
add
(bad)
push
sbb
add
repnz
fsubr
fs
repnz
(bad)
ficomp
in
dec
(bad)
dec
push
out
add
push
pop
pop
iret
in
adc
dec
ins
adc
dec
jecxz
or
mov
jge
cs
lock
iret
int3
xlat
lds
(bad)
add
mov
cli
pop
ins
mov
icebp
and
add
mov
(bad)
mov
call
mov
push
aaa
pcmpeqd
cs
mov
xor
pop
sub
pop
aad
inc
scas
fstp
and
jmp
in
push
test
jl
mov
or
ds
cmps
jne
mov
mov
jle
test
adc
sbb
mov
ror
rcl
xor
xor
cli
mov
inc
xchg
inc
jmp
pop
(bad)
retf
adc
outs
or
push
ror
mov
xchg
pusha
lea
push
retf
dec
dec
daa
ss
mov
sahf
call
cmc
out
sub
test
ret
outs
ret
mov
and
or
dec
test
cwde
icebp
push
int
bound
pop
cmp
sbb
aad
mov
sbb
mov
push
xchg
loop
xor
fldenv
(bad)
sbb
shr
inc
push
inc
out
push
pop
pop
mov
add
or
or
push
js
in
or
jl
sbb
test
jae
cmps
stos
inc
(bad)
pop
xlat
data16
(bad)
shr
dec
dec
mov
shl
and
lahf
jnp
(bad)
pop
shl
enter
and
dec
packssdw
jae
test
loop
sub
adc
lock
xor
push
lds
fst
dec
push
mov
f2xm1
inc
rol
pop
enter
pop
sub
mov
imul
adc
adc
mov
mov
ins
sub
pop
repz
add
outs
lahf
mov
test
xchg
rcr
repz
lock
jp
lods
ins
in
sti
fisttp
lods
inc
fwait
fs
add
(bad)
lahf
retf
stos
and
dec
pop
add
arpl
sub
jb
add
inc
sbb
test
inc
leave
popa
icebp
fild
inc
mov
out
xchg
(bad)
loopne
mov
je
dec
outs
adc
dec
push
scas
add
in
jl
adc
into
add
bound
cwde
shl
dec
dec
int
lock
add
lahf
dec
cld
jnp
sbb
mov
jecxz
test
(bad)
push
movs
movs
dec
loope
lods
mov
ds
or
das
xor
cmp
push
mov
add
dec
jmp
mov
mov
jge
sub
mov
aas
inc
icebp
cdq
jp
mov
test
sub
xchg
push
out
and
dec
fadd
sub
lock
mov
inc
out
aad
jae
jecxz
push
mov
push
mov
or
jo
sub
es
jmp
mov
add
das
cmp
jecxz
mov
not
cli
ret
and
push
or
inc
sub
push
xchg
dec
fstp
and
push
fild
mov
mov
stos
and
mov
ss
fld
mov
push
sti
leave
jmp
das
(bad)
pop
ror
mov
out
or
pop
xchg
or
xchg
cmps
ins
sub
les
imul
inc
punpckhbw
ins
dec
mov
mov
inc
mov
aam
inc
test
jge
iret
ror
cmp
out
mov
jae
jle
pop
xchg
loope
sub
nop
into
cmps
in
int3
call
xchg
jb
inc
push
xchg
xchg
mov
stos
dec
rep
jns
pusha
jne
inc
mov
fimul
and
repz
push
or
push
adc
inc
xlat
mov
(bad)
cmps
sbb
cmp
jecxz
dec
mov
scas
jg
and
dec
repnz
cli
aad
jg
gs
mov
movs
lods
dec
retf
inc
cmc
call
dec
pop
xchg
dec
xor
jbe
push
jns
out
jnp
push
cmp
iret
mov
xchg
mov
adc
push
call
mov
mov
sub
sub
xchg
in
mov
xlat
mov
rcr
scas
jp
ror
dec
and
ss
and
pop
push
(bad)
jns
mov
pop
cwd
jmp
movs
lods
loopne
mov
jecxz
sub
jle
xchg
(bad)
and
mov
mov
test
mov
data16
shl
rcr
lods
and
gs
cmps
xchg
pop
push
or
mov
or
out
mov
adc
enter
cmp
std
daa
push
pop
sub
sbb
scas
pop
cwde
outs
cs
mov
test
push
daa
rcr
xchg
call
lds
push
mov
jne
aas
xchg
hlt
jo
xchg
jno
sub
and
or
cmps
ret
jns
sar
push
mov
mov
and
nop
mov
jecxz
in
out
cwde
aaa
add
push
idiv
ins
adc
lods
dec
push
adc
mov
in
xor
or
sbb
pop
ins
cdq
dec
dec
mov
push
mov
inc
sub
int3
rol
dec
xchg
call
sbb
popw
or
or
and
adc
mov
fbld
push
daa
sbb
xor
cmc
lods
retf
inc
pop
icebp
jmp
(bad)
and
outs
and
int
fldenv
int
or
mov
shr
(bad)
int
xchg
clc
lods
scas
js
xchg
bound
pop
jmp
cld
push
in
jmp
shl
push
jmp
arpl
nop
cli
fild
je
mov
sar
lods
lock
mov
adc
jp
idiv
pop
mov
xor
daa
(bad)
mov
jbe
cmp
cwde
rcl
aas
sub
mov
mov
div
cwde
sbb
jge
repz
mov
loope
xchg
or
cmps
inc
xchg
sub
(bad)
aaa
fild
xor
dec
fxch
out
dec
dec
mov
lock
ret
mov
dec
sbb
bound
mov
js
pop
xor
call
icebp
pop
fild
(bad)
and
nop
xor
sbb
mov
adc
test
movs
test
push
cmp
ret
cmp
stc
mov
pop
xor
pop
sbb
push
cmp
adc
mov
mov
sbb
rcl
pop
rol
sbb
sbb
rcl
jg
sbb
aas
fs
fidiv
scas
jmp
shl
mov
cmp
out
xchg
pop
xchg
fsub
jbe
retf
dec
and
es
js
and
test
(bad)
fmul
int
mov
xor
inc
cmps
lods
dec
or
fsubr
pushf
stos
push
cdq
pop
pop
test
fild
cwde
cld
add
mov
sbb
cmps
jl
imul
cmp
call
(bad)
test
imul
jl
jge
test
dec
daa
adc
xchg
xchg
stos
mov
cmp
or
inc
test
out
or
ud2
cmp
das
pop
call
cwde
jo
mov
push
cmp
fdivr
aam
and
es
cmc
(bad)
aad
cmovl
lods
out
xlat
mov
pop
cmps
(bad)
cmp
push
jmp
bound
xor
dec
imul
jmp
fnsave
mov
out
es
pushf
adc
adc
and
inc
sbb
cmp
sbb
outs
or
ss
repnz
sub
mov
inc
(bad)
loop
stos
mov
jp
inc
adc
(bad)
pusha
push
dec
jns
xor
cmp
push
lahf
push
xchg
test
add
test
imul
ror
shl
jae
mov
inc
push
fcmovnbe
xchg
shl
or
inc
mov
popf
push
mov
or
jne
call
jbe
jnp
retf
jl
ins
dec
leave
pop
nop
mov
fnstenv
xchg
pusha
inc
xchg
xor
xchg
jp
add
cmps
cmp
mov
add
inc
aaa
inc
push
nop
out
jb
or
mov
lods
jbe
sbb
sbb
clc
add
cmc
loopne
call
sahf
add
shr
call
rcr
cmps
inc
ja
shr
mov
inc
retf
mov
or
jno
pop
psubq
stc
dec
inc
xlat
mov
or
rcl
add
outs
adc
sub
add
xor
mov
mov
outs
inc
gs
(bad)
repz
or
fistp
jno
sbb
cmps
fs
sbb
lock
mov
xor
pusha
mov
mov
(bad)
cli
(bad)
clc
jge
and
jmp
pop
and
aam
mov
xchg
mov
add
add
imul
dec
ss
out
aam
popf
imul
jg
add
test
cmp
cwde
lahf
stc
dec
stos
and
popf
aaa
and
cwde
xor
arpl
push
xchg
dec
xchg
adc
dec
push
outs
mov
mov
mov
xchg
jb
mov
mov
pop
pop
(bad)
adc
xchg
jmp
add
cmp
rcr
add
sar
out
(bad)
fcom
sub
ss
dec
sub
push
pop
mov
fs
stos
jg
jns
cdq
out
mov
mov
push
or
add
stos
or
imul
or
mov
in
popf
jmp
mov
leave
push
dec
fcom
sub
int
js
mov
push
push
imul
arpl
pushf
sbb
sti
add
pop
bound
lahf
data16
mov
or
and
stos
popf
jo
jns
jecxz
aam
pop
fwait
xor
(bad)
fild
outs
ret
or
xchg
data16
push
mov
ins
es
out
xchg
adc
xchg
mov
xchg
inc
repnz
je
retf
fisub
add
les
cld
scas
dec
and
popf
das
jl
cdq
xchg
ins
add
int3
mov
fld
shl
sti
loopne
outs
jg
lock
dec
dec
(bad)
sub
mov
pop
aad
dec
mov
retf
fwait
cld
loop
inc
pusha
push
mov
xchg
or
std
nop
enter
repz
add
fiadd
int
pop
or
xchg
in
clc
mov
mov
cmc
imul
inc
out
fst
sub
sbb
sbb
(bad)
xor
icebp
mov
out
dec
cmp
mov
(bad)
xor
mov
mov
add
cdq
xchg
sbb
jb
cmp
mov
jbe
mov
inc
xchg
adc
rcr
mov
xor
imul
jmp
mov
(bad)
daa
neg
enter
adc
pop
jp
mov
jne
xchg
inc
sbb
rcl
enter
cld
jmp
jmp
jge
les
inc
jno
enter
les
jnp
outs
sahf
fiadd
std
push
or
inc
or
test
lods
pop
sahf
aam
test
cmp
mov
test
into
lods
push
scas
jbe
sbb
(bad)
mov
sti
(bad)
pusha
add
(bad)
xor
inc
movs
cwde
xchg
loope
mov
inc
xchg
or
mov
outs
dec
int
pop
jno
int3
cmp
xchg
pop
into
mov
enter
mov
adc
mov
pop
dec
or
daa
iret
dec
push
lods
push
and
adc
pop
adc
cmp
fstp
scas
fdivr
and
mov
stos
xchg
out
aad
xor
push
sub
idiv
pop
cmp
addr16
xor
out
inc
pop
outs
pop
inc
sbb
fucomip
mov
popf
mov
cmp
xlat
xor
(bad)
jns
or
add
cmps
adc
xchg
add
mov
xor
clc
ds
xor
pop
cld
das
je
and
pop
add
inc
xor
repnz
jne
inc
movs
sub
pop
push
inc
pop
xor
cmp
xor
loop
je
rcl
dec
data16
inc
pop
dec
daa
aam
jmp
fwait
mov
sahf
ret
inc
es
lods
addr16
mov
mov
pop
dec
aad
mov
fcomp
mov
xchg
sbb
sub
inc
cmp
mov
shr
ss
jne
das
xlat
jg
or
cld
pop
shr
loope
outs
dec
jae
mov
add
mov
clc
out
pop
mov
pop
cmps
dec
neg
mov
mov
loop
jnp
stc
push
xor
hlt
cmp
aad
test
mov
loopne
movs
jmp
pop
mov
dec
(bad)
pop
sub
fs
pop
push
outs
sub
(bad)
daa
div
fmul
jne
es
mov
repnz
and
add
in
inc
inc
das
lds
or
(bad)
jmp
fadd
xor
cmc
repnz
arpl
(bad)
cmp
daa
or
pusha
cmp
adc
and
sbb
sbb
add
jg
cmp
iret
push
cwde
and
mov
add
aaa
inc
adc
in
(bad)
xor
cmp
mov
dec
xchg
mov
lods
mov
mov
mov
dec
retf
or
or
movs
adc
xlat
push
pop
xor
adc
mov
push
mov
ja
adc
in
xchg
in
inc
mov
lea
stos
test
ins
push
retf
add
sub
mov
jo
je
dec
xchg
sbb
push
iret
inc
lock
pop
cmp
js
and
aad
call
popa
xor
ret
mov
jbe
aaa
jb
push
lea
push
retf
in
daa
xlat
sbb
retf
dec
fldenv
mov
das
ret
jb
mov
ror
or
sbb
les
cmp
ret
adc
mov
fist
mov
pop
adc
popf
imul
mov
or
mov
in
into
adc
les
jle
les
test
stc
sbb
adc
clc
and
shl
dec
cwde
pop
mov
xchg
pop
push
pop
outs
lock
int
pop
gs
mov
mov
repz
cwde
sti
push
push
sbb
jge
dec
fdivr
xor
push
into
xchg
jnp
cmp
pop
int
inc
jmp
push
and
pusha
add
sahf
xchg
imul
xchg
lahf
sbb
(bad)
lahf
clc
in
xor
or
cmc
(bad)
outs
inc
pusha
aad
add
es
int3
inc
jp
pop
adc
pop
add
and
fild
jbe
lods
or
mov
sar
ja
and
mov
pop
imul
mov
scas
jecxz
cli
add
(bad)
dec
adc
rcr
push
cdq
push
inc
push
inc
and
cld
dec
push
fisub
jae
aam
xor
jmp
call
mov
aam
pop
inc
mov
fisub
clc
(bad)
add
ficomp
mov
or
xor
daa
out
(bad)
clc
std
jae
rol
push
inc
adc
retf
icebp
inc
cld
out
inc
mov
cmc
dec
pop
mov
fs
mov
mov
test
dec
stos
out
repz
popa
retf
or
jmp
jns
and
(bad)
dec
aaa
push
inc
les
xchg
movs
pop
das
xchg
(bad)
sub
imul
jb
cmp
mov
adc
(bad)
push
adc
pop
xchg
(bad)
(bad)
adc
jmp
aaa
jb
push
ins
inc
and
or
mov
or
jno
sbb
ret
popf
arpl
mov
(bad)
int
pop
fild
sbb
call
push
sar
pusha
pushf
fcmovu
push
arpl
inc
rcl
pop
pop
jge
ins
mov
and
retf
in
cmp
adc
(bad)
aad
fs
dec
dec
enter
lods
pop
outs
out
in
fsub
cmc
inc
push
mov
jge
ins
out
int3
mov
and
push
imul
sub
in
loop
jg
add
imul
jge
int3
push
dec
jbe
pop
(bad)
push
push
or
test
xchg
sti
and
add
push
pop
xchg
cmps
loopne
pop
mov
cmp
stc
sbb
sbb
mov
ss
push
cmc
enter
outs
jl
mov
add
fsubr
dec
sahf
push
in
inc
stc
call
sbb
sbb
add
lea
mov
mov
and
outs
ret
push
add
dec
retf
ds
fiadd
xchg
and
xor
mov
ficom
dec
cld
cmp
push
(bad)
pushf
sub
sbb
mov
adc
mov
addr16
imul
sub
sbb
xchg
rcr
cmps
cmp
jle
iret
adc
sub
add
inc
adc
cmp
inc
cdq
xchg
and
adc
xor
jbe
arpl
mov
mov
cmp
fistp
adc
lock
out
aas
push
rol
cli
call
jb
and
(bad)
mov
xor
cmp
(bad)
jmp
movs
jmp
adc
push
int3
das
and
mov
out
inc
jle
sbb
(bad)
loop
mov
cmps
xor
mov
jg
and
jecxz
inc
lea
add
inc
mov
or
pop
or
out
mov
sti
loope
jns
cmp
pop
xchg
(bad)
xchg
jno
fstp
shl
iret
jl
and
jb
jne
cmps
sbb
test
jg
in
push
inc
(bad)
cmp
(bad)
scas
movs
pop
and
aam
adc
mov
or
lahf
mov
jnp
sti
es
es
test
push
pop
test
scas
ds
mov
fs
(bad)
mov
xchg
sub
shl
rcl
add
out
vpmaxub
repz
rcr
mov
or
inc
in
fwait
jno
fst
push
stos
and
jo
(bad)
cmp
inc
or
and
add
les
jl
lds
in
mov
mov
leave
mov
fisttp
mov
push
jo
dec
jb
std
fidiv
cmps
sub
out
ss
and
popf
pcmpeqd
aam
and
mov
scas
mov
test
shr
pop
jge
sub
loopne
out
inc
push
cmp
inc
cmp
fs
push
test
iret
or
sbb
retf
fidivr
sbb
arpl
and
pop
sbb
stc
inc
jp
jae
shl
mov
mov
cmp
pop
pop
cmc
cmps
rol
add
aaa
xor
fcmovnb
cli
test
sub
and
mov
pop
fucomp
dec
and
add
xchg
cli
repz
mov
adc
or
(bad)
jecxz
fcomip
iret
stos
cmp
pop
icebp
mov
push
enter
adc
cmp
and
aam
scas
push
pop
shl
jp
aas
sti
adc
sahf
mov
push
inc
daa
pop
data16
pop
jbe
(bad)
add
iret
xor
inc
pushf
jo
cmps
push
push
outs
ja
sbb
xchg
xchg
push
push
or
push
ds
adc
pop
inc
push
push
sub
and
lds
outs
movs
popa
push
fbld
dec
dec
icebp
jne
ror
(bad)
les
jae
and
std
pop
and
stc
inc
rcr
inc
inc
enter
jno
rol
add
and
retf
test
add
mov
repnz
nop
pop
fsubr
popf
jge
test
sbb
popf
int
sub
arpl
sbb
jb
and
mov
fstp
add
ret
jle
and
jne
mov
repz
ds
jb
push
movs
fwait
stos
push
in
das
sbb
and
fiadd
shl
daa
movs
jbe
push
stc
ja
dec
cmps
ins
repnz
scas
push
cld
lea
clc
mov
imul
call
sbb
in
nop
jb
inc
iret
mov
and
add
int
mov
jae
(bad)
xor
mov
inc
inc
add
jb
jnp
imul
jae
or
dec
mov
test
aaa
div
sub
js
xor
push
mov
enter
or
push
add
pop
push
jmp
cmp
inc
mov
inc
fstp
push
or
aam
jns
mov
xchg
div
ja
jo
mov
ins
push
jl
jecxz
mov
mov
test
jbe
or
sub
mov
test
fidiv
outs
movs
adc
(bad)
mov
sti
dec
(bad)
aaa
mov
pop
xchg
mov
test
in
(bad)
mov
cld
stos
movs
mov
sbb
rol
icebp
xchg
jecxz
mov
enter
repnz
or
(bad)
int3
pop
outs
xchg
xor
cmp
xor
xchg
ror
ins
or
dec
jmp
jb
hlt
cmp
(bad)
jecxz
cli
test
jbe
or
inc
je
mov
push
cmps
jne
sub
mov
and
dec
shl
or
or
cmp
jge
sbb
mov
es
pop
inc
sub
xchg
shr
jo
jecxz
and
setp
test
inc
call
stos
sub
mov
and
repz
xor
mov
or
jp
rol
jecxz
cmps
in
and
mov
rcr
cmp
repnz
lock
into
pushf
fsub
aad
fs
cmc
sbb
pop
jo
mov
(bad)
adc
test
jne
fwait
push
mov
and
adc
lods
mov
push
xor
cmp
dec
in
mov
and
adc
mov
pop
repz
stc
xchg
add
outs
imul
adc
dec
pop
jmp
cwde
mul
push
pop
popf
pusha
addr16
pop
daa
mov
push
pop
push
addr16
jge
sub
sub
xchg
mov
in
push
xchg
dec
mov
cli
cmp
or
xchg
in
inc
sbb
jge
mov
sub
fsubp
cdq
push
dec
repnz
jno
les
sub
(bad)
sbb
scas
pop
and
mov
or
sahf
dec
mov
inc
mov
inc
inc
push
(bad)
pop
jno
mov
mov
and
leave
enter
dec
xor
fwait
aaa
dec
fcomp
jae
xchg
pop
mov
ds
ja
pop
jmp
cmp
pop
xchg
mov
clc
push
pushf
rcr
movs
xor
fxch
movs
je
aas
mov
ins
stos
mov
pmaddwd
test
imul
ret
aaa
mov
int3
or
nop
(bad)
mov
or
cmps
sub
ret
lea
mov
lods
lods
mov
xor
call
sbb
lock
retf
jmp
jns
les
xor
lds
into
cli
cs
stos
inc
jne
sbb
pop
ror
cdq
icebp
stc
(bad)
cmp
jecxz
push
mov
in
enter
xor
cld
imul
out
cwde
sbb
pop
fld
mov
dec
xchg
repz
imul
outs
aaa
xchg
add
into
inc
jmp
mov
(bad)
out
stc
jp
pop
xchg
(bad)
int3
fiadd
inc
daa
les
scas
test
stc
and
aad
call
test
sbb
jno
push
mov
mov
mov
jno
mov
dec
pop
xchg
arpl
arpl
repz
sbb
leave
sub
fldlg2
sbb
xor
aas
xor
push
sub
dec
cmp
mov
pop
mov
or
dec
add
add
add
and
jbe
mov
test
lea
fidiv
mov
jo
aas
gs
repnz
sub
icebp
adc
sub
dec
aam
daa
cdq
fsub
mov
and
mov
pushf
js
mov
mov
lods
ret
sar
xchg
and
retf
popf
add
xor
bound
(bad)
or
add
scas
push
pop
repnz
fwait
mov
sub
call
mov
(bad)
xchg
retf
out
jne
aam
jecxz
push
push
inc
mov
xor
daa
rol
jae
or
loop
loopne
out
aaa
cmps
pop
sar
ret
ins
sub
aas
cmp
mov
hlt
cmp
addr16
ror
aam
dec
les
jge
repz
push
or
gs
push
jb
mov
fisttp
dec
retf
lds
and
jecxz
out
out
stos
out
das
adc
mov
sti
add
jmp
jl
loope
shl
sahf
xchg
loopne
fs
mov
xchg
xchg
daa
add
xlat
test
call
ins
or
out
push
ror
dec
out
es
adc
enter
cmps
adc
out
dec
dec
push
popf
daa
stos
add
push
mov
dec
fild
in
push
daa
dec
bnd
pop
repnz
jmp
sbb
sub
rcr
xchg
fiadd
pushf
jmp
push
pop
out
(bad)
les
mov
pop
mov
mov
pop
xor
enter
xchg
enter
je
(bad)
sub
mov
mov
inc
mov
or
test
jle
dec
(bad)
jnp
mov
xchg
idiv
pop
(bad)
loope
xchg
mul
cmp
mov
mov
mov
ss
popf
push
out
addr16
dec
aad
xor
sbb
cmps
adc
dec
push
or
dec
sysenter
in
fdiv
jle
xor
jno
sub
dec
push
pushf
or
clc
sbb
sbb
(bad)
cmp
jle
add
pusha
push
pop
xchg
jns
iret
jns
pop
and
push
cld
xchg
and
and
adc
dec
add
test
jb
sbb
and
in
das
xlat
aam
pop
jmp
add
(bad)
loopne
ficom
and
or
mov
mov
or
push
jns
inc
(bad)
je
pop
mov
jmp
mul
pop
std
fcomp
inc
xchg
hlt
push
xlat
sbb
adc
daa
fwait
xchg
jae
xor
cmc
adc
mov
xchg
jmp
sar
cwde
and
dec
ins
loope
cmp
sub
pop
inc
pop
lods
rcl
std
dec
adc
sub
loopne
dec
xchg
jle
stc
xor
js
scas
and
arpl
mov
cdq
cmps
(bad)
jge
cmp
xor
stos
enter
fmulp
xchg
or
mov
stc
add
pop
sub
push
dec
xchg
xchg
gs
pusha
fcmovnb
test
mov
stos
jmp
fsub
inc
imul
mov
sub
cmp
sbb
imul
into
mov
outs
inc
(bad)
movs
enter
neg
mov
xchg
call
shl
dec
push
xchg
je
repnz
pop
out
sahf
dec
loop
push
ret
dec
mov
cwde
loopne
mov
out
push
xchg
add
add
xor
rol
dec
(bad)
(bad)
daa
push
in
in
je
jns
sbb
aaa
stos
daa
adc
push
push
jmp
shl
sub
(bad)
imul
(bad)
mov
std
cli
mov
les
ja
test
and
or
push
sbb
inc
fwait
fs
call
and
outs
sbb
or
or
mov
icebp
pusha
push
popa
jbe
sbb
ret
lds
sub
pop
fdiv
push
int
sar
stc
mov
xchg
adc
pop
out
mov
popa
retf
pop
fstp
push
(bad)
add
add
test
aas
push
cs
pop
outs
mov
mov
push
sar
bnd
mov
(bad)
popf
xchg
dec
out
test
setns
sahf
es
(bad)
stc
jae
mov
test
push
push
mov
in
jne
push
sub
add
jno
out
pop
shl
add
add
test
aas
dec
in
call
loopne
je
pop
in
das
in
sub
jl
push
dec
mov
adc
sbb
fsubr
mov
(bad)
inc
(bad)
sub
and
ins
mov
inc
loopne
or
pop
mov
out
jecxz
add
adc
inc
addr16
(bad)
cmp
or
aam
xor
xlat
outs
cmp
icebp
jle
(bad)
shr
repnz
mov
iret
shr
stos
cmp
sbb
gs
dec
retf
icebp
out
bound
jo
sbb
and
jge
pop
xor
xchg
movs
fs
leave
cmp
mov
inc
dec
outs
hlt
mov
addr16
mov
shr
into
xlat
outs
mov
repz
push
push
call
in
into
ffree
aas
std
and
sti
mov
push
ins
add
rol
ds
popa
test
mov
ins
sti
fcmovnbe
inc
movs
jns
jmp
(bad)
mov
out
push
or
dec
mov
stos
mov
into
lods
movs
push
sbb
out
mov
jg
adc
lahf
cmps
jmp
das
cmp
cmp
dec
dec
push
in
pop
jns
(bad)
or
out
sbb
mov
fwait
mov
cmp
push
stos
in
pusha
push
fwait
jmp
mov
loopne
jecxz
cmc
repnz
jl
jmp
ss
ss
js
pop
or
cdq
lea
out
(bad)
jg
lods
lods
fist
add
sub
cwde
js
pop
out
pop
(bad)
pop
xchg
adc
add
or
cmps
jmp
enter
pop
jecxz
push
xchg
clc
loope
bound
mov
out
fucompp
cwd
aas
jmp
ins
mov
mov
(bad)
fidiv
jae
jge
or
or
repz
(bad)
shl
pop
repnz
mov
fistp
inc
sub
mov
push
xor
jl
xor
test
sbb
jo
lds
cld
jo
adc
popa
in
and
(bad)
mov
xchg
sub
mov
mov
cmp
mov
ret
xor
aaa
xchg
xor
(bad)
clc
pop
popf
aaa
dec
push
sub
dec
adc
fst
add
mov
(bad)
(bad)
add
ror
das
adc
dec
sub
dec
fs
sbb
clc
pop
jno
add
xor
cmps
jmp
sbb
pop
stos
dec
push
adc
ins
ror
aaa
xor
dec
xchg
(bad)
jae
jge
mov
mov
jno
dec
out
fwait
ret
popa
pop
sti
mov
pop
pop
sbb
es
mov
pop
jo
push
xor
pop
into
xchg
or
hlt
repnz
dec
xchg
cmp
xchg
pop
icebp
jecxz
inc
xchg
cmp
or
push
pop
ins
sbb
cmp
or
push
pusha
push
jae
sahf
xor
test
aas
ret
scas
inc
icebp
cmps
lock
cmps
cmp
iret
and
scas
push
push
dec
repz
mov
in
xchg
jl
loopne
adc
xchg
imul
shl
or
inc
jb
inc
push
inc
or
out
mov
push
in
leave
xor
inc
adc
fs
push
int
lods
ss
(bad)
lahf
and
cmps
repz
and
mov
adc
and
retf
mov
jne
jno
in
jae
sbb
out
iret
sub
ds
icebp
js
mov
xor
dec
repnz
imul
cwde
ja
adc
sub
ror
and
push
movs
nop
loopne
mov
push
xchg
sbb
mov
mov
mov
not
popa
cmc
les
add
cmp
mov
iret
mov
xchg
xchg
movs
outs
sahf
call
inc
fcomp
push
inc
aaa
jnp
mov
and
push
jmp
rol
call
xchg
jbe
and
sti
pop
popa
sar
cmp
xor
dec
jp
push
dec
lods
or
push
test
pop
test
fcomp
in
packuswb
cmp
xor
leave
jle
fwait
jbe
or
out
pop
mov
jge
sub
int3
repz
ror
push
(bad)
sub
pop
dec
fnstsw
xor
mov
outs
ds
mov
xlat
jmp
xor
pop
push
fidivr
arpl
push
push
shl
sahf
jg
jbe
dec
ins
mov
jge
jo
xor
and
out
pop
pop
pusha
sub
mov
scas
pop
add
sub
jnp
mov
pop
sub
sbb
or
ja
mov
out
push
jg
ds
add
in
adc
push
cs
add
adc
cmp
cmp
push
stos
push
out
icebp
shl
xchg
xor
push
lods
into
xor
ins
fsub
inc
sub
xor
push
or
mov
rcr
jmp
rcr
ret
jp
jle
cmc
mov
popa
outs
sub
es
pop
mov
push
cld
pop
dec
sub
mov
popf
pushf
sub
mov
loopne
lods
jns
ret
sub
sbb
jnp
pop
cmp
or
mov
inc
cld
mov
jae
arpl
dec
pop
inc
ins
push
mov
test
cmp
adc
mov
pusha
pop
xchg
js
push
pop
mov
and
mov
adc
xchg
loopne
ja
pop
loop
mov
adc
cmc
pop
iret
xchg
test
std
and
cmp
stc
xchg
xchg
jae
fwait
leave
xchg
test
adc
sub
mov
push
or
mov
mov
lds
push
mov
ins
outs
fs
stc
pop
jecxz
out
ret
sbb
fs
cmps
add
cwde
or
push
jae
rcl
sar
nop
push
call
xchg
and
or
sti
jl
out
adc
add
aam
ret
mov
lea
shr
mov
xlat
ror
stc
mov
jp
jp
scas
sub
stos
pop
ins
mov
test
daa
adc
fist
or
neg
loopne
jnp
imul
inc
sbb
(bad)
cmp
jo
pop
sub
push
ret
jp
shl
push
enter
ret
jbe
dec
stos
mov
add
jle
je
mov
(bad)
push
push
mov
mov
push
and
enter
inc
mov
mov
push
test
fdivr
xchg
fistp
popa
inc
add
js
in
(bad)
dec
adc
push
fisub
stos
ret
stos
or
das
mov
xchg
dec
jo
mov
dec
and
xchg
or
rcl
or
ss
add
mov
mov
stos
xor
sti
sub
aam
xchg
(bad)
outs
push
dec
mov
cmp
leave
pop
mov
ret
sub
xor
(bad)
adc
push
lds
sub
pop
pop
or
sti
aas
stc
mov
mov
arpl
js
movs
sahf
rol
sub
cmp
add
push
mov
loope
stos
adc
jns
or
adc
(bad)
jmp
sub
loope
in
cmp
cmp
xor
retf
mov
popa
pop
mov
mov
xadd
jmp
std
movs
js
and
pop
(bad)
popf
ror
mov
inc
outs
aas
and
jecxz
mov
jecxz
push
jge
mov
add
xchg
arpl
dec
jmp
outs
mov
xchg
inc
jbe
xor
bound
std
mov
adc
and
dec
pusha
cmp
pop
cmp
xchg
mov
(bad)
cld
js
cmp
pop
loop
fnsave
pop
nop
clc
inc
adc
retf
sbb
mov
xchg
and
pop
add
pusha
les
pop
fst
fisubr
fdivrp
lods
imul
repz
stos
out
adc
icebp
adc
inc
inc
in
mov
sub
gs
(bad)
sar
mov
fimul
addr16
ins
outs
cmp
into
es
int
addr16
leave
out
mov
adc
bound
sub
lods
mov
or
daa
mov
aaa
movs
mov
sbb
inc
lds
movs
mov
out
mov
inc
dec
mov
aaa
not
ret
dec
sub
pop
shl
test
xchg
xlat
lock
test
test
sbb
adc
scas
stos
sbb
shr
add
sbb
push
mov
ret
mov
sub
fisubr
je
sbb
mov
adc
test
out
jo
mov
test
imul
jno
xchg
mov
jmp
cmp
or
test
xlat
pop
cmps
and
pop
hlt
add
jb
inc
out
fwait
stos
add
dec
sti
xchg
mov
cmp
popf
and
dec
lods
or
cwde
inc
pop
xchg
fidivr
rcl
pop
out
movs
inc
mov
xchg
mov
int3
dec
mov
mov
mov
sbb
gs
out
icebp
and
fs
adc
in
or
and
ins
outs
frstor
mov
mov
adc
xchg
sbb
pop
mov
div
in
pop
xchg
mov
jne
(bad)
aad
jle
es
cmp
popf
(bad)
(bad)
cmp
out
cmp
jmp
mov
push
es
inc
cld
movs
aam
pop
sub
fcom
rol
in
inc
mov
cmp
cs
xchg
imul
rcl
xchg
lea
sub
test
xlat
mov
stos
retf
pop
inc
rol
shr
icebp
mov
xchg
sbb
xchg
in
stc
hlt
mov
sti
clc
mov
out
xor
or
ror
mov
aad
xchg
mov
add
pop
in
push
movs
aad
push
push
mov
jmp
loope
popf
jb
rcl
dec
arpl
pop
scas
mov
adc
inc
xchg
xchg
lods
push
cmp
or
lock
jmp
push
inc
push
pop
sbb
sub
jmp
mov
bound
repnz
pop
mov
cli
pop
daa
ins
mov
outs
or
push
xor
jno
call
inc
call
imul
adc
fiadd
shl
(bad)
inc
mov
sub
aam
nop
rcr
jmp
cmp
gs
sub
mov
mov
xor
sbb
adc
fbstp
cmp
outs
ret
out
frstor
xchg
jne
xchg
pushf
sbb
mov
inc
addr16
popa
call
sbb
lods
or
fsubr
dec
mul
fucomp
das
ficomp
rcr
lock
fimul
pop
(bad)
pop
int
jno
xchg
jns
adc
fwait
pop
mov
pop
jno
or
jae
scas
cmp
test
movs
ss
sbb
dec
iret
xor
ror
sti
les
fdivr
jge
sub
data16
pop
shl
mov
jmp
inc
cmp
not
pop
pop
cmp
cmp
or
jle
fs
lods
pop
enter
sar
and
and
adc
cmp
or
cmc
cld
repz
out
pop
movs
push
push
test
shl
cmp
in
fsub
jg
xchg
je
out
xchg
pushf
adc
xor
jle
(bad)
shr
or
mov
aad
(bad)
iret
cmp
and
inc
adc
pop
mov
gs
lods
movs
es
dec
nop
jo
rol
mov
inc
push
and
dec
add
adc
jge
sahf
jb
jl
push
jmp
or
push
pop
jl
mov
mov
and
sub
xchg
lds
retf
jo
mov
pop
mov
ficomp
pushf
fimul
adc
test
or
int
scas
xor
sub
out
mov
imul
mov
cmp
inc
sbb
mov
stc
push
sub
adc
aam
mov
rcr
(bad)
fidiv
stos
or
in
mov
xchg
repz
(bad)
jo
push
xor
(bad)
pop
sbb
mov
and
bound
pop
push
jbe
push
mov
mov
sbb
xchg
adc
or
mov
in
inc
imul
sub
je
pop
cli
xchg
ins
dec
out
loopne
fiadd
mov
(bad)
jmp
ret
les
jecxz
or
xor
cld
mov
jg
clc
das
test
and
std
mov
sub
sub
push
push
push
in
mov
sub
cmps
clc
push
jmp
stc
xor
push
int
out
push
jae
push
ins
and
or
pop
xchg
jmp
popf
jge
test
push
syscall
pop
into
mov
cli
xor
or
mov
test
cdq
and
cwde
push
jnp
jmp
jo
inc
dec
jae
sbb
or
mov
icebp
cmp
pop
dec
and
into
mov
xchg
push
shr
mov
jnp
xchg
pop
xor
mov
push
mov
(bad)
mov
aas
adc
xchg
add
aam
or
int3
push
pusha
jb
lds
retf
dec
or
and
lods
sbb
inc
push
xor
jmp
jnp
add
icebp
cli
xor
cmp
mov
retf
fsub
cmp
sub
push
pop
dec
cmp
mov
add
mov
test
jp
dec
in
mov
add
call
imul
pop
aas
inc
ins
jg
sub
bound
jo
mov
or
mov
scas
cmp
jl
mov
pop
dec
jle
enter
cmp
out
cs
adc
adc
jmp
sub
mov
pop
test
clc
aad
adc
pushf
test
add
fwait
or
mov
xor
inc
inc
movs
mov
popa
movs
xchg
inc
add
mov
outs
fs
mov
dec
jbe
scas
sbb
mov
push
and
dec
mov
sbb
addr16
in
xlat
sbb
fld
mov
mov
in
fild
rol
stc
je
popa
aas
jg
pop
jmp
adc
push
mov
sbb
lea
mov
lods
xlat
add
inc
lea
xor
fidiv
xchg
add
push
push
cmps
es
enter
mov
jns
sub
xor
cmp
mov
fisubr
repz
mov
sbb
outs
not
xchg
sub
cmp
aad
pop
neg
retf
pop
mov
adc
call
sbb
scas
or
pop
lock
pop
call
xor
pusha
push
mov
dec
int3
mov
pushf
push
test
sbb
inc
mov
add
in
jecxz
adc
adc
fnsave
sub
out
adc
jae
test
cmp
retf
xchg
idiv
fisttp
(bad)
jmp
add
movs
clc
shl
cmp
cdq
inc
movs
clc
hlt
paddb
cmp
jmp
fist
mov
mov
fadd
push
out
push
sbb
push
jmp
sbb
or
call
cdq
mov
jb
mov
out
jne
inc
aaa
mov
loope
xor
into
into
(bad)
lods
pop
mov
call
punpcklbw
sub
in
inc
xchg
xchg
mov
int3
mov
and
jno
ror
movs
jo
outs
push
call
mov
push
dec
imul
or
imul
inc
shl
sub
mov
(bad)
pop
test
jmp
fist
sbb
leave
pushf
mov
icebp
xor
(bad)
add
mov
xchg
and
aam
test
mov
add
cwde
mov
jg
mov
movs
mov
lahf
xchg
sbb
sbb
sahf
out
xlat
sbb
push
retf
cmps
test
arpl
lahf
mov
jo
sbb
ins
iret
add
xlat
sub
mov
int3
(bad)
lods
outs
loop
mul
push
mov
int3
sbb
xor
popa
retf
pop
pop
or
and
or
cmp
into
push
push
adc
(bad)
ficomp
or
int3
sub
adc
cdq
out
lds
jne
shr
pop
out
push
inc
into
push
cs
jo
test
xchg
sti
dec
inc
fstp
popf
sub
mov
dec
nop
les
(bad)
ror
(bad)
xor
rol
pusha
fs
callw
movs
or
adc
xchg
std
pop
jae
jne
loop
test
jmp
fdivr
(bad)
sub
arpl
(bad)
mov
in
(bad)
loope
mov
inc
pop
imul
push
xchg
mov
lahf
sub
sub
fbld
push
data16
push
xchg
sbb
test
dec
xor
jo
adc
sbb
mov
repz
mov
mov
adc
push
rol
fcom
xor
mov
test
pop
lods
xor
xor
or
lods
aas
inc
int3
enter
add
les
imul
out
int3
sti
cmc
(bad)
sbb
add
icebp
adc
mov
or
push
and
xor
nop
(bad)
cwde
dec
icebp
out
outs
pop
mov
mov
movs
loop
aaa
mov
sub
and
xor
call
(bad)
and
into
fwait
mov
push
stos
push
pop
push
jp
dec
pop
pop
sub
add
loop
int3
inc
retf
(bad)
cmc
push
and
lds
fs
scas
cwde
(bad)
pop
xchg
test
and
dec
mov
pop
sub
push
jbe
imul
jo
retf
inc
cmp
cmp
xor
out
and
jnp
adc
(bad)
push
popa
mov
pop
cmp
mov
jmp
mov
mov
lock
aas
or
movs
nop
(bad)
aaa
jmp
inc
inc
xor
shr
mov
mov
pop
sti
mov
sbb
xor
retf
sub
sub
dec
movs
inc
stc
loope
push
aaa
ins
cmp
xor
or
nop
clc
xor
xor
xchg
lods
shl
add
pop
jge
aad
xor
cdq
jge
jg
adc
mov
pop
jecxz
movs
and
xchg
int3
mov
jg
div
retf
popa
cmp
sahf
dec
mov
cmps
cmps
push
jne
xchg
mov
inc
adc
outs
xor
cmp
inc
or
fdiv
mov
cmp
in
dec
loope
dec
pop
xor
in
jp
in
(bad)
ret
push
aas
jbe
gs
std
mov
mov
in
xchg
sub
add
ret
loopne
jne
dec
sbb
mov
jg
mov
sbb
out
sub
mov
and
pop
xor
movs
or
ret
mov
inc
retf
gs
jl
lock
mov
sub
or
hlt
pop
loopne
push
(bad)
sbb
xor
dec
xor
pop
gs
sub
data16
mov
mov
inc
pop
enter
push
xor
aas
sbb
movs
jmp
pop
repnz
or
stos
stc
cmps
out
fst
jl
jnp
xchg
push
dec
jge
push
jmp
jne
mov
jne
mov
ds
(bad)
js
xchg
jae
outs
pop
nop
push
add
movntps
in
int3
sub
xor
retf
ins
rcl
cmc
jno
jmp
mov
fist
js
daa
push
and
jb
retf
adc
ret
pop
push
(bad)
xchg
loopne
sahf
mov
jno
and
test
xor
test
and
sub
aam
or
and
and
jo
inc
call
call
pop
clc
sbb
xchg
inc
leave
inc
xchg
and
bndstx
test
outs
pop
das
bound
aaa
fwait
push
mov
in
add
lods
and
inc
rol
xchg
idiv
xlat
inc
mov
out
outs
mov
cmp
(bad)
pop
and
arpl
and
arpl
ja
gs
inc
daa
fmul
mov
das
lahf
mov
fdivr
and
in
or
ss
es
popf
push
mov
fnsave
in
push
push
mov
mov
popf
mov
movs
dec
pop
rcr
pop
cwde
xchg
mov
dec
enter
scas
clc
mov
push
ss
mov
push
xchg
pop
(bad)
int
or
dec
retf
mul
mov
loop
adc
pushf
(bad)
imul
(bad)
fldcw
jnp
fwait
and
ret
mov
in
or
inc
sbb
cld
mov
mov
push
jbe
repnz
mov
icebp
add
jnp
inc
jns
pop
add
inc
in
je
pop
mov
(bad)
(bad)
shl
mov
bound
ficom
adc
and
jns
xor
out
js
pusha
push
dec
aad
imul
mov
pop
push
(bad)
sub
push
cmp
push
push
and
sbb
mov
adc
or
sbb
lds
pusha
stos
cmp
dec
mov
retf
clc
ja
shl
outs
adc
mov
sub
push
and
adc
xchg
in
adc
add
pop
fs
cli
dec
icebp
popf
or
cmp
dec
push
shl
pop
sbb
test
push
fsub
push
ja
push
ins
mov
imul
fisttp
push
xor
cmps
pop
mov
mov
add
xor
add
call
ret
(bad)
rol
out
aas
add
jecxz
frstor
test
jle
push
lock
lock
push
adc
or
dec
into
cmp
push
mov
pop
add
dec
scas
push
jno
push
xchg
je
retf
mov
mov
jbe
out
lods
add
ror
mov
repz
(bad)
mov
icebp
popf
mov
shl
sub
dec
mov
add
push
into
xor
and
add
jo
and
loop
(bad)
cld
stos
stc
sub
inc
xchg
lds
movs
test
pop
inc
mov
outs
stc
hlt
sbb
call
(bad)
cmp
fs
data16
push
adc
sbb
aad
cmc
push
loop
xor
mov
and
scas
stos
jmp
jb
jns
mov
out
fiadd
jb
sbb
pop
fisubr
mov
jmp
push
sbb
dec
sub
loopne
cmps
mov
xor
xchg
adc
xchg
fsubr
cli
xchg
je
(bad)
sub
cwde
dec
nop
push
jl
pop
dec
cmc
scas
add
sub
adc
sbb
adc
dec
aam
gs
cmp
fwait
stc
inc
ja
pop
or
iret
lahf
stos
outs
cmp
stc
fwait
push
cmps
sub
imul
pusha
sti
lahf
call
mov
scas
mov
and
inc
repz
xor
jb
xlat
mov
pop
sti
mov
jnp
icebp
inc
adc
push
mov
dec
dec
jbe
loope
movs
mov
xor
or
lock
sub
movs
in
in
jb
mov
sar
and
add
pop
inc
push
inc
fstp
pop
mov
fld
pop
push
ror
int
and
repz
adc
je
and
adc
imul
jns
ins
int
xchg
fld
out
lea
dec
jecxz
sbb
mov
mov
rol
mov
call
cmps
mov
pop
mov
cmp
jg
cmps
in
mov
mov
mov
es
xchg
retf
rol
out
imul
cmp
test
jnp
cwde
mov
fwait
in
or
push
fstp
push
jl
out
sub
fnstcw
clc
mov
scas
cmp
dec
sbb
push
out
add
dec
mov
call
in
repnz
mov
sub
cmp
sub
(bad)
sub
cmps
mov
cmp
add
ins
stos
call
mov
cmc
xor
ins
inc
jbe
jp
into
push
dec
fld
mov
cmp
ror
mov
or
clc
jge
ficom
inc
lea
pusha
adc
in
pusha
ss
stc
mov
fsubr
cmps
fisub
adc
fs
daa
pop
clc
mov
pop
xchg
shl
fwait
fs
sub
adc
das
push
mov
lods
sub
(bad)
ficom
and
retf
(bad)
inc
inc
pushf
xchg
lahf
jmp
out
inc
dec
sub
cmp
xor
cmp
out
jge
pop
or
int3
fild
cdq
iret
mov
and
xchg
pop
jmp
fld
lods
in
stc
mov
xor
inc
push
xor
pop
xchg
es
sub
xor
xor
sar
iret
mov
mov
or
sub
pop
pop
xor
xor
outs
mov
mov
mov
adc
ss
jne
mov
sbb
push
cmp
leave
cmp
fadd
pop
pop
mov
dec
lds
loope
mov
aas
inc
or
push
cwde
mov
cmp
mul
jne
sub
add
(bad)
in
push
cmps
pop
shl
fisub
or
rcr
pop
xchg
sub
fnsave
xchg
sbb
(bad)
cld
frstor
fbstp
scas
sub
and
and
pop
in
jg
mov
ins
mul
cdq
add
test
popa
retf
test
pop
test
popa
fsin
mov
xor
jns
sub
adc
stos
(bad)
mov
cmp
add
push
test
cmp
sub
cmc
mov
fwait
mov
js
jmp
inc
and
mov
loopne
cli
xor
test
sti
call
lods
mov
mov
hlt
adc
or
stos
scas
loope
adc
popa
jmp
bound
test
sub
stos
(bad)
sbb
pop
jge
(bad)
out
mov
mov
cwde
mov
xchg
inc
dec
sub
popa
xor
and
fidivr
movs
xor
and
adc
jnp
xor
push
sbb
movs
ins
inc
lock
stc
mov
sub
sbb
aad
fimul
ja
sar
xor
push
enter
es
pop
sbb
mov
ja
jmp
xchg
adc
mov
test
iret
adc
mov
inc
dec
(bad)
(bad)
jno
add
mov
out
inc
jns
pop
cmp
push
and
jo
push
(bad)
sbb
jmp
pop
inc
push
fild
enter
push
push
mov
ficom
pop
inc
jo
and
mov
dec
js
(bad)
and
sbb
jnp
xchg
inc
and
jo
xor
and
jb
inc
cwde
std
dec
adc
scas
aas
or
ins
inc
cmps
(bad)
push
(bad)
das
mov
out
adc
push
push
adc
sti
cmps
mov
xchg
imul
dec
mov
into
inc
push
icebp
sub
test
in
int
push
sub
scas
jns
daa
jmp
popa
scas
nop
add
push
imul
pop
inc
or
in
stos
mov
add
popa
pop
pop
inc
in
(bad)
jbe
mov
sub
push
lods
cmp
shr
push
les
lods
popf
jnp
ja
or
popa
es
inc
add
inc
lea
inc
mov
imul
ins
in
xchg
xchg
add
ins
push
iret
mul
ins
ret
in
stc
leave
stos
xchg
jb
xchg
xchg
cmps
shl
mov
push
stos
pusha
or
mov
jle
iret
and
sbb
and
lods
iret
jle
mov
popa
fdiv
movs
push
jno
stc
jae
dec
mov
jmp
sub
jnp
push
push
inc
cmp
pop
ins
jae
add
test
mov
and
(bad)
sar
stos
cmps
adc
fistp
sbb
xor
cmp
(bad)
out
push
xor
xchg
mov
(bad)
icebp
xor
jmp
fild
icebp
(bad)
fmul
mov
add
out
(bad)
or
sub
adc
dec
adc
dec
xor
add
adc
test
mov
push
xchg
jb
(bad)
dec
imul
test
mov
inc
sti
adc
daa
cmp
fadd
outs
popf
mov
(bad)
mov
in
xchg
enter
xchg
pusha
and
aas
mov
cmp
ss
cli
xor
popf
inc
xor
mov
adc
sbb
mov
scas
icebp
imul
and
rcr
pop
mov
inc
lahf
es
push
test
in
mov
sub
add
mov
pop
retf
jp
push
push
mov
ret
sahf
call
cmps
or
pop
sti
mov
jo
xchg
cmp
jne
je
pop
outs
stc
cmps
mov
loope
or
and
cld
outs
shl
test
cmp
xlat
cwde
scas
out
icebp
add
mov
jo
je
adc
shr
mov
xchg
jmp
pusha
or
sbb
(bad)
shl
jp
pop
pop
jnp
addr16
or
add
mov
mov
add
or
mov
mov
cli
pop
fadd
sub
call
clc
mov
pop
fsubr
inc
mov
push
cmp
jecxz
xor
xchg
sahf
pop
and
sub
test
movs
jns
jne
cdq
mov
or
int
repnz
pop
addr16
popf
mov
cmp
xchg
std
xchg
mov
adc
pop
ins
in
mov
or
add
jbe
leave
push
dec
add
neg
dec
fisub
jmp
and
outs
adc
xchg
inc
or
dec
ret
test
fild
add
xor
mov
push
cmp
mov
int
imul
(bad)
std
pusha
jmp
outs
mov
add
sub
mov
mov
sub
push
xlat
inc
mul
addr16
adc
push
pop
inc
sbb
call
mov
rcl
dec
arpl
pop
jle
pop
cmp
pop
jl
retf
std
lods
or
mov
adc
mov
into
add
xor
push
ins
and
pop
fwait
stc
push
(bad)
push
mov
enter
and
or
jnp
pusha
movs
xor
jp
nop
(bad)
and
ror
xor
and
jo
in
cmps
jle
jne
cmps
push
xor
aaa
hlt
rcr
loopne
push
fmulp
pusha
jmp
mov
xchg
clc
and
(bad)
sti
sahf
mov
pop
push
push
sar
inc
movs
dec
jae
outs
sbb
mov
adc
test
or
sti
xchg
mov
sti
outs
out
fmul
fsub
mov
jecxz
dec
and
pop
pop
xchg
sub
iret
inc
out
push
xor
jecxz
jg
lds
dec
cmp
pop
inc
lods
fsubr
and
fucomip
cmp
out
addr16
push
hlt
in
sub
and
and
jl
adc
and
mov
rep
mov
and
imul
dec
mov
adc
mov
mov
sbb
fst
or
pop
icebp
mov
push
es
push
jb
rol
inc
inc
or
dec
repz
popf
jl
cmp
jge
mov
jo
push
mov
imul
fld
xchg
push
jns
push
repnz
sub
jecxz
sub
movs
mov
fbld
xchg
adc
add
out
adc
imul
mov
mov
cmp
loope
cwde
rcl
sub
mov
mov
dec
jmp
jmp
icebp
mov
into
xor
cmps
leave
jnp
in
or
test
fwait
adc
loopne
retf
fucom
ficomp
and
and
xchg
mov
call
iret
loope
iret
xor
cmp
xor
cs
sub
or
vpmulhw
jae
push
sbb
ret
pop
push
lods
cmps
or
pop
and
sub
push
cdq
cmp
pop
push
aaa
(bad)
outs
imul
in
adc
cld
fld
push
sub
and
inc
jmp
into
outs
pop
data16
arpl
aas
adc
int
or
dec
and
ror
push
jnp
mov
xchg
pop
push
(bad)
jmp
push
sub
sub
mov
adc
ins
fwait
out
mov
or
or
nop
sbb
adc
push
mov
cmp
leave
mov
add
push
push
retf
pop
pop
iret
add
jne
mov
nop
push
mov
adc
pusha
mov
xchg
das
xchg
cdq
mov
sbb
sahf
sub
sub
mov
(bad)
in
xchg
pop
pusha
pop
std
data16
xor
cdq
cmp
das
loope
and
push
add
fild
sub
mov
inc
xchg
adc
or
adc
inc
out
cmp
loope
popf
jns
pop
mov
xchg
out
or
add
mov
mov
aas
mov
iret
xor
add
pusha
cmp
adc
mov
lods
add
cmp
cmp
adc
dec
es
push
xchg
mov
cwde
test
or
sbb
push
dec
or
aad
add
gs
test
and
ins
push
jle
pop
ret
sti
sar
cmps
lock
jbe
dec
ds
(bad)
outs
xor
sbb
pop
fwait
ins
dec
test
ins
jb
jnp
data16
daa
adc
xor
imul
js
gs
scas
not
jp
mov
mov
sub
jne
push
adc
nop
xlat
imul
xrelease
sbb
xor
or
xor
xor
pushf
cmp
stc
stos
std
idiv
mov
pusha
jno
jmp
and
out
mov
adc
daa
int3
pop
rol
in
pop
mov
xlat
mov
xor
inc
jb
jecxz
inc
push
in
icebp
pop
sub
dec
(bad)
imul
jle
inc
(bad)
fdivp
out
pop
jo
mov
pop
repnz
cmps
dec
iret
movs
mov
cmp
mov
stos
cmp
jmp
inc
push
mov
push
mov
aam
ins
test
mov
(bad)
bound
adc
aas
popf
inc
out
bound
bound
inc
das
adc
mov
push
daa
adc
pop
mov
add
and
inc
mov
dec
dec
ja
jo
cmp
mov
sub
call
into
sar
pop
adc
nop
in
mov
or
dec
add
and
lock
jle
in
pop
xor
sbb
jnp
clc
mov
sub
arpl
fdiv
les
(bad)
std
(bad)
dec
add
pop
icebp
mov
stos
jg
call
ror
dec
daa
not
cmp
dec
xor
sub
xchg
cwde
ds
push
jg
sbb
or
jno
jns
leave
xor
imul
inc
or
and
scas
popf
push
jecxz
cmp
adc
std
or
mov
adc
jmp
f2xm1
inc
das
xor
cmc
fimul
xlat
mov
jns
pop
loope
and
inc
aas
jmp
jmp
xor
adc
lea
stc
cld
xchg
out
repnz
int3
xor
mov
and
loop
outs
inc
mov
cmp
aaa
cmp
sbb
adc
pop
scas
ds
ret
fiadd
(bad)
push
cmc
stc
pop
xchg
mov
js
cli
sbb
and
cmp
in
pop
xor
or
clc
test
sub
in
mov
and
out
ja
out
jno
jl
push
xchg
mov
lock
jbe
jge
ins
fcmovu
into
jnp
ins
xor
fldcw
sbb
jbe
jmp
jbe
cs
cmps
mov
ds
jo
dec
pop
dec
jl
add
shl
adc
jae
call
out
cmps
sub
cld
jp
sahf
jge
loope
xlat
cmp
mov
mov
mov
ficomp
sub
cmp
inc
cwde
sub
data16
div
ins
mov
shl
jl
adc
in
add
and
int3
pushf
push
jno
adc
sub
add
dec
sbb
loope
into
shl
cmps
aam
or
pop
mov
(bad)
nop
and
test
push
call
dec
cmp
(bad)
and
iret
jno
stos
pop
pop
pusha
adc
dec
addr16
pop
rcr
push
and
movs
idiv
sub
dec
into
xchg
not
push
ins
aaa
xor
daa
sub
repnz
mov
mov
ins
add
push
adc
scas
sub
or
pop
scas
loop
and
leave
mov
out
or
pusha
inc
hlt
add
push
inc
sbb
jg
jae
push
and
cmp
push
lock
add
cmps
jl
jb
into
popa
popf
mov
adc
ret
mov
xchg
ja
mov
mov
xchg
xor
adc
mov
push
sbb
add
mov
cmps
inc
cwde
das
and
pop
mov
inc
call
pop
fild
test
sub
and
idiv
sbb
fnstenv
jge
add
xchg
cmps
push
pop
test
and
leave
adc
xor
leave
or
enter
mov
std
arpl
inc
dec
out
cmp
xor
xor
or
outs
xchg
aaa
iret
mov
imul
xor
and
addr16
xchg
xor
or
jp
test
mov
jmp
or
stc
jnp
cmp
int3
outs
add
daa
lods
call
outs
pusha
cli
in
mov
test
inc
mov
mov
xchg
or
pop
mov
addr16
in
fsubrp
stc
adc
pop
in
test
aaa
int
cmp
cmp
sbb
loop
push
add
dec
scas
scas
add
mov
pop
fiadd
popf
or
xchg
out
jb
xchg
push
in
cwde
int
lea
mov
pop
sub
fs
or
leave
jnp
sbb
imul
jo
cmp
xchg
dec
mov
jle
mov
add
mov
dec
mov
retf
stos
mov
pop
inc
leave
lods
dec
xchg
sbb
xor
mov
mov
or
popf
addr16
jle
dec
xor
mov
imul
cmp
dec
dec
mov
nop
jo
pop
mov
cli
scas
and
imul
xchg
or
popf
in
leave
push
scas
mov
or
mov
mov
adc
dec
sar
lds
xchg
jmp
mov
xor
repz
xchg
jno
cmc
adc
adc
inc
jb
test
icebp
movs
dec
ins
dec
push
or
inc
dec
ins
iret
adc
cs
pop
adc
sbb
idiv
or
data16
cmps
pop
and
test
(bad)
fcomi
dec
out
xchg
pushf
cmp
xchg
dec
adc
hlt
jp
outs
jno
inc
sub
sahf
aam
mov
lods
ret
js
mov
cmp
push
jnp
ins
add
adc
or
out
lock
stos
leave
xchg
(bad)
dec
pop
mov
or
aad
iret
(bad)
fyl2x
sub
addr16
push
mov
(bad)
xor
or
repz
mov
in
sub
mov
pop
mov
mov
das
xchg
sbb
mov
imul
dec
sti
or
pop
cmp
xchg
enter
sbb
mov
sub
in
ja
out
fs
dec
mov
(bad)
mov
(bad)
cmps
pop
rol
pushf
adc
add
mov
xchg
out
mov
push
mov
inc
leave
(bad)
lods
fld
mov
repz
faddp
xchg
imul
cmps
mov
fdiv
loop
icebp
mov
imul
or
cli
mov
push
inc
jae
out
or
mov
loop
sub
movs
push
jo
xor
addr16
mov
xor
test
or
fwait
mov
jp
push
rol
pop
push
dec
or
adc
inc
xchg
jb
jecxz
mov
add
cld
call
pop
dec
and
or
inc
xor
es
out
fidiv
xor
push
or
dec
imul
xchg
mov
ins
aam
clc
ins
pop
lods
clc
jne
jecxz
mov
jg
xor
jle
icebp
repz
add
loop
dec
enter
xlat
mov
rol
jg
push
mov
pop
jge
push
repnz
cmp
rol
sahf
inc
aam
mov
jnp
adc
fs
cmps
mov
adc
js
or
sbb
pop
and
loop
cmp
lods
daa
mov
out
lock
pop
arpl
push
aas
(bad)
sbb
sub
cmp
add
sub
mov
xor
sar
ins
sbb
add
test
jb
jnp
ret
xchg
xchg
dec
push
imul
sbb
test
sbb
pop
or
(bad)
push
loop
in
sbb
inc
lds
sti
pop
adc
fwait
mov
inc
cmp
aad
nop
aaa
push
and
iret
and
test
fst
fdivr
pop
pop
mov
mov
call
jge
jmp
add
fbld
and
dec
or
pushf
adc
test
jge
shl
and
mov
inc
ror
push
xchg
std
(bad)
sahf
pop
adc
push
mov
xor
jle
aaa
mov
lock
fist
cli
or
int
dec
xor
call
pop
in
fwait
test
fstp
div
ret
dec
movs
cmp
in
rcl
mov
shl
call
out
ins
jmp
add
mov
dec
fs
jae
test
jb
mov
test
jmp
sbb
inc
loopne
fmul
push
mov
stos
aas
mov
push
pop
pop
shl
(bad)
xchg
repz
rcr
mov
jno
mov
int3
mov
dec
gs
fldenv
xchg
add
push
addr16
push
or
push
arpl
bound
iret
adc
mov
aas
loope
xchg
adc
jbe
jmp
jmp
inc
mov
inc
rcl
pop
pop
add
jmp
fucomp
cld
mov
in
mov
pop
xchg
addr16
or
push
ret
cmc
out
xchg
cmps
repnz
enter
sub
adc
pusha
or
mov
push
movs
aas
icebp
add
out
jle
push
out
mov
enter
mov
fistp
and
push
push
and
inc
test
jmp
cs
stos
ds
xchg
cmc
les
pop
and
enter
mov
push
and
pop
mov
xor
sbb
jne
lahf
jo
sti
adc
leave
xchg
mov
pusha
je
sbb
mov
shr
xchg
rol
jle
pop
adc
jbe
iret
into
sub
gs
and
ret
push
jb
and
(bad)
xchg
cld
sub
into
iret
xor
adc
mov
loope
jl
pop
sub
and
cmps
mov
xor
es
mov
or
jae
pop
jp
ret
es
adc
push
add
dec
inc
add
imul
int3
mov
mov
ret
imul
jb
clc
movs
fs
jae
fiadd
mov
stos
xchg
(bad)
sbb
mov
mov
push
hlt
fs
cmp
xor
add
(bad)
hlt
xor
daa
adc
xchg
mov
jbe
int
mov
mov
mov
in
xchg
(bad)
out
(bad)
into
je
and
pop
leave
out
jp
les
inc
jnp
xor
xchg
and
adc
adc
into
nop
iret
mov
lock
fcmovnu
mov
rcr
fisub
arpl
sar
sub
push
push
in
mov
mov
in
loope
mov
ret
fbstp
fcomp
stos
or
shr
sub
aad
in
adc
out
enter
pop
sahf
data16
cmp
test
push
sbb
or
pop
scas
enter
mov
sbb
sub
test
sub
and
ret
movs
cmp
sub
lods
or
push
aaa
loopne
pop
pop
(bad)
int3
xor
or
or
les
fcmovnu
or
adc
leave
sub
pop
xor
mov
arpl
popf
movs
push
mov
mov
lahf
xor
les
sbb
mov
sub
jl
and
outs
xlat
sbb
push
loope
inc
mov
inc
jne
mov
aas
pusha
or
fcmovne
add
ffreep
call
jnp
test
cs
dec
sahf
or
push
mov
mov
or
push
(bad)
xlat
fmul
xor
ret
push
cmp
sub
in
adc
mov
lea
cmc
ins
cld
mov
xor
scas
hlt
enter
pop
push
repnz
or
sti
mov
sub
into
dec
push
jno
push
pop
xchg
xchg
fild
mov
mov
sbb
ins
test
stc
pop
inc
js
adc
shr
xlat
sbb
fs
and
or
out
sub
jg
jbe
retf
add
push
and
push
cmp
popf
cdq
test
cmc
ret
adc
repnz
aad
ja
inc
out
and
js
gs
and
cmp
imul
and
test
ret
leave
sahf
out
test
dec
mov
xor
adc
mov
call
mov
fcompp
add
(bad)
pushf
lock
sahf
(bad)
cmp
mov
movs
sub
and
jns
test
push
sahf
call
aam
push
ret
push
jae
(bad)
lods
sbb
sub
pushf
cld
cdq
arpl
jns
bound
sub
gs
and
ret
aaa
mov
sbb
test
test
push
(bad)
or
les
dec
inc
outs
pop
out
mov
xor
pop
mov
cmc
sub
push
hlt
lea
mov
mov
ficomp
pusha
int3
dec
outs
push
mov
cmc
push
sbb
int3
mov
mov
adc
push
mov
retf
push
add
stc
push
cdq
jmp
lods
ss
inc
(bad)
xor
mov
inc
push
adc
inc
psadbw
in
xor
(bad)
fmulp
jb
(bad)
inc
loop
push
fadd
pop
adc
hlt
or
fwait
popf
nop
mov
fwait
mov
xor
inc
add
adc
pop
fsubr
imul
movs
xor
mov
cmc
gs
adc
jl
pop
in
addr16
(bad)
xchg
add
mov
jmp
push
fisubr
aam
sbb
not
cmps
cld
inc
adc
add
or
add
aam
xor
adc
mov
retf
fisttp
jle
out
pop
jle
push
sbb
push
out
ror
adc
adc
retf
enter
push
pop
std
test
mov
aad
push
xchg
dec
and
retf
popf
add
in
sahf
push
pop
jecxz
pop
and
gs
xor
mov
rol
std
fld
push
repz
into
cli
sbb
pop
sti
outs
test
or
or
push
and
xor
(bad)
pop
fs
addr16
(bad)
ja
and
cmp
dec
js
xor
and
std
lods
xchg
push
push
ja
test
pop
add
dec
xchg
into
ins
pop
sub
repnz
test
inc
push
mov
lds
jae
lock
aaa
inc
or
mov
orps
out
in
sar
xchg
xor
mov
jmp
mov
(bad)
ret
loop
aas
ss
inc
jbe
arpl
mov
pusha
mov
faddp
pop
sbb
shr
scas
shl
pop
out
(bad)
pop
push
cwde
shr
sbb
retf
mov
outs
rep
jl
cli
ret
inc
pop
ss
arpl
gs
jge
out
sahf
cdq
rol
sbb
pop
push
ins
cld
icebp
cmp
cmps
pop
jecxz
fwait
mov
add
xchg
mov
test
or
cs
jle
or
dec
(bad)
push
sbb
popa
pop
and
jle
(bad)
lahf
pop
mov
lods
loope
push
cmp
or
add
fs
sub
fisubr
daa
inc
pop
cdq
mov
stos
sbb
mov
es
cmp
repnz
iret
push
sub
sbb
fs
mov
mov
in
test
enter
pop
cli
into
jns
call
dec
call
adc
push
or
test
fstp
dec
shl
jno
stos
cwde
adc
mov
fisubr
jbe
es
dec
out
push
js
add
ror
repnz
inc
push
add
cmp
or
arpl
inc
push
sbb
push
push
mov
sub
mov
mov
cmp
cmovs
push
inc
test
rcl
pop
aam
add
cdq
ins
add
push
nop
mov
les
jmp
int
xor
lods
std
and
add
ficom
add
jp
leave
les
cmp
push
ss
lods
neg
mov
xor
jo
loope
arpl
inc
and
addr16
daa
mov
leave
push
(bad)
xchg
retf
movs
stos
loope
jnp
sti
lock
and
mov
push
push
das
adc
jmp
pop
mov
int3
outs
sahf
mov
adc
add
icebp
inc
push
mov
loopne
or
and
xchg
mov
cmps
sub
mov
adc
lds
ins
sub
test
and
gs
jge
ficomp
sub
sub
hlt
test
cdq
push
xchg
dec
jge
retf
sub
and
jno
(bad)
jecxz
(bad)
jle
sti
pop
xchg
or
pop
pusha
rol
fdiv
mov
das
ins
and
data16
movs
mov
dec
jmp
sbb
cmps
push
in
jns
sub
jp
out
xor
pop
push
shr
out
mov
retf
or
push
jns
add
pop
int3
mov
adc
mov
ja
or
stc
add
adc
sti
mov
push
out
mov
adc
fwait
inc
fsubr
jecxz
add
(bad)
(bad)
jl
mov
shl
ins
mov
pop
add
into
push
enter
or
xor
xlat
xor
pop
outs
dec
inc
jl
jo
cmp
cmps
and
icebp
iret
popa
(bad)
outs
retf
xor
cmp
dec
(bad)
stos
dec
or
push
cmp
mov
fwait
sbb
dec
sub
(bad)
test
cmp
mov
cmps
cmp
dec
jecxz
or
lea
xor
retf
je
mov
mov
mov
test
mov
jecxz
movs
push
rcl
sahf
or
outs
(bad)
push
push
jae
mov
jne
out
aaa
sub
retf
js
sahf
(bad)
push
test
rol
push
loope
mov
xor
pop
rcl
push
inc
and
cmp
add
stos
ja
xchg
xor
inc
test
sti
mov
jae
lods
(bad)
loop
mov
cmc
out
fimul
cli
dec
shl
enter
jle
into
jge
jg
mov
push
stos
cs
lods
sub
and
rcr
pop
popf
or
clc
stc
inc
adc
cwde
(bad)
mov
imul
(bad)
ins
pop
fisub
or
add
ins
cmps
aas
inc
es
cld
rcl
retf
mov
and
mov
adc
les
adc
mov
outs
xor
gs
push
das
movs
push
sbb
pusha
ins
lds
pop
loop
xlat
mov
(bad)
cwde
xchg
lods
call
xor
mov
push
jne
push
jmp
arpl
daa
cld
ss
lods
rcl
pop
and
ins
lock
xchg
daa
std
dec
xchg
(bad)
mov
adc
dec
push
fst
bound
jbe
ficom
aam
or
pop
mov
hlt
mov
cld
xchg
xchg
xor
jl
pop
and
mov
pop
retf
or
data16
cmp
mov
test
dec
mov
clc
jns
mov
jae
icebp
push
jecxz
mov
add
fsubp
bnd
(bad)
jg
(bad)
retf
in
xchg
sbb
mov
jno
jecxz
dec
cmp
scas
mov
fwait
sub
jle
imul
addr16
movhps
les
les
mov
ficom
add
loopne
imul
cs
ror
cdq
sti
call
dec
sub
sub
sub
or
out
ror
or
xor
lahf
scas
(bad)
(bad)
pop
addr16
out
xor
mov
adc
pop
push
mov
cmps
jae
or
out
cmc
popf
popf
and
outs
fsub
(bad)
xchg
jne
aaa
jb
in
adc
dec
and
and
inc
inc
inc
test
add
xchg
jb
push
cdq
mov
popa
lock
mov
stos
inc
outs
pusha
sbb
jo
std
and
ret
push
and
aaa
cmps
repnz
jo
push
and
test
mov
fwait
(bad)
fs
sbb
das
mov
int
cs
loopne
push
mov
xor
stc
dec
jecxz
enter
inc
jo
mov
xor
xchg
jmp
daa
inc
sub
das
fnsave
mov
dec
repz
mov
ret
dec
dec
(bad)
movs
add
sbb
rcr
and
daa
mov
aam
xchg
stos
fnstenv
(bad)
cmp
inc
repz
mov
pop
rcl
shr
into
outs
sub
adc
cmps
inc
sub
mov
rcl
retf
leave
call
ror
push
daa
retf
clc
mov
sub
and
or
lods
fistp
in
mov
test
loopne
xchg
js
adc
retf
mov
pop
icebp
cs
fstp
jne
into
mov
aam
nop
pushf
scas
vpsrad
stc
jmp
jg
mov
push
cld
repz
out
push
adc
or
pop
fistp
loope
mov
das
scas
or
data16
in
ins
mov
or
cmps
push
sahf
add
aam
mov
icebp
mov
idiv
push
pop
and
or
xchg
pop
sbb
add
into
jecxz
sar
xlat
jmp
pop
add
push
pop
(bad)
dec
inc
mov
mov
mov
cdq
lods
(bad)
inc
xchg
push
pop
pop
shr
xchg
dec
sub
sbb
int
popf
fwait
ins
jp
mov
stc
jne
jb
loop
cmp
aaa
inc
sti
xchg
sub
mov
cdq
mov
leave
add
xchg
(bad)
test
shl
pop
sbb
xchg
adc
push
fs
(bad)
loopne
mov
push
jnp
rol
cli
mov
jnp
mov
mov
call
jo
imul
cwde
mov
pop
xor
test
call
add
scas
push
cmps
xor
repnz
add
movs
push
inc
movs
adc
repnz
sbb
mov
in
les
sbb
push
jb
sub
js
xchg
inc
pop
loop
aaa
(bad)
(bad)
jge
out
cmp
mov
xchg
mov
ins
mov
push
pusha
mov
popf
xchg
cmp
cld
lea
jp
ss
fisttp
dec
jne
inc
ds
jp
pusha
sar
int
and
cmp
ds
mov
test
and
cmp
cmc
sub
pop
lods
addps
pusha
into
outs
sbb
add
sub
stc
in
sti
sysret
mov
(bad)
idiv
mov
in
aad
dec
push
xor
pop
cmps
mov
outs
mov
jp
dec
outs
xor
les
pop
xor
adc
jne
cli
fwait
pop
mov
rcl
pop
arpl
jp
mov
and
test
sub
movs
pusha
ret
or
add
lods
ins
jno
inc
push
cmp
pop
sub
out
frstor
xchg
lahf
clc
xchg
lds
sub
dec
xchg
loope
lds
stos
pop
fisttp
or
xchg
in
or
stos
test
shl
add
add
je
pop
pop
pop
jge
int
pop
fwait
neg
(bad)
(bad)
dec
mov
cmps
(bad)
cmp
aad
arpl
(bad)
aas
sbb
dec
call
sub
mov
repnz
add
push
sahf
jge
(bad)
into
jno
or
das
mov
arpl
dec
call
push
jmp
mov
xchg
dec
in
in
ins
cmps
outs
add
shr
xchg
ins
mov
ret
mov
jmp
adc
cs
enter
ror
jl
data16
mov
sbb
mov
sbb
cmp
imul
xor
mov
add
das
retf
cld
inc
enter
or
jmp
push
in
add
cmps
mov
pop
cmps
push
add
sub
or
cwde
idiv
cmp
xchg
pop
fwait
pop
neg
mov
sbb
dec
aam
cmps
xchg
shr
xor
fimul
xlat
jmp
adc
dec
and
pop
push
cmps
iret
bound
cmp
cmp
shl
cmp
jmp
inc
outs
push
imul
xor
and
jge
test
ficom
mov
xlat
mov
mov
sbb
dec
xor
out
out
lods
popf
mov
mov
dec
nop
jnp
sahf
fstp
loope
jae
mov
cld
jae
lock
xchg
push
adc
test
cmp
movs
(bad)
mov
add
cdq
iret
adc
scas
fldenv
sbb
sahf
test
xchg
push
fisubr
mov
dec
mov
push
inc
das
xor
or
cmp
jecxz
call
ins
lahf
lods
or
cmp
pop
jnp
mov
ret
xchg
sbb
repz
rcr
les
xchg
push
jle
or
mov
adc
out
sbb
fwait
xchg
sub
lds
push
mov
mov
xchg
mov
sub
cmp
fcomp
cmps
repnz
stc
fst
inc
jo
pushf
(bad)
daa
push
(bad)
cmp
sub
add
scas
inc
xchg
popa
sub
rcl
test
nop
hlt
movs
jo
test
pop
cmp
xor
or
movs
ins
pop
jp
repz
sub
ins
and
sbb
lock
or
and
xchg
cmc
dec
dec
scas
movs
and
call
inc
leave
js
mov
mov
lahf
inc
xchg
push
movs
sub
call
mov
xchg
std
sbb
mov
cmp
jmp
jmp
shl
ds
movs
jbe
pop
(bad)
jg
test
aad
out
out
in
xchg
iret
push
cmp
adc
sbb
sub
push
sbb
cmps
cwde
cmp
cmc
sbb
push
xor
aad
(bad)
sbb
bound
pop
mov
pop
into
fcmovnu
mov
mov
loope
sahf
or
ds
cmp
jae
into
ds
inc
mov
inc
push
in
push
mov
int
dec
dec
mov
imul
arpl
sbb
sub
pop
pop
ss
daa
popa
adc
sbb
push
in
mov
clc
dec
mov
repnz
mov
jp
dec
ror
popa
mov
addr16
in
inc
inc
xchg
(bad)
push
dec
cmp
adc
or
dec
xor
call
mov
orps
bound
in
inc
mov
jbe
xchg
xor
pop
out
mov
lahf
jl
mov
mov
imul
into
xor
stc
aad
jno
xchg
fcomp
pop
cwde
cmp
mov
xchg
push
popa
inc
retf
push
out
ja
pusha
(bad)
push
jg
jp
test
cmp
mov
dec
stc
add
loope
push
dec
lds
sbb
jg
and
add
inc
retf
movs
loop
mov
dec
test
adc
int
push
dec
mov
dec
push
ucomiss
cwde
and
adc
xchg
lahf
add
dec
arpl
dec
pop
pop
repnz
or
mov
test
sbb
cli
mov
add
nop
add
jecxz
inc
mov
call
sub
pop
mov
sub
pop
dec
and
sbb
repnz
(bad)
movs
pop
sbb
out
mov
das
rol
jl
mov
jmp
aad
mov
fistp
xchg
mov
fidiv
jl
call
iret
in
nop
aas
retf
mov
pop
in
retf
cmps
cld
xor
ds
cwde
push
leave
pop
addr16
pusha
mov
sub
cmp
jle
jae
pusha
in
ins
out
sbb
sbb
out
inc
hlt
or
outs
nop
push
iret
or
sti
jmp
push
dec
shl
shl
mov
mov
nop
hlt
push
ss
push
in
sub
jae
outs
lea
jns
push
(bad)
adc
and
lods
movs
dec
movs
xor
cdq
pop
or
push
aam
xor
out
push
mov
mov
sbb
sub
and
push
mov
imul
les
nop
(bad)
adc
jmp
jnp
repnz
fcomip
aaa
add
dec
sbb
adc
xchg
xchg
xchg
pop
jmp
jg
push
mov
add
gs
in
and
push
jo
daa
scas
add
mov
aas
scas
(bad)
xchg
sub
ror
jecxz
cmc
inc
xchg
mov
add
add
into
and
std
adc
fild
dec
and
jp
popa
jmp
xchg
mov
(bad)
pop
lahf
sub
inc
daa
sbb
repnz
fiadd
jl
fwait
fwait
adc
sub
int3
test
inc
data16
jns
cmps
fbld
ins
test
cmp
jle
ds
pusha
call
push
sbb
sub
test
cmc
aad
out
leave
adc
ja
push
mov
inc
sbb
shl
lahf
cmps
mov
add
sbb
fisttp
sbb
dec
mov
sbb
movs
push
jge
nop
push
xchg
ins
xchg
std
pop
imul
int3
outs
lahf
push
add
sbb
push
mov
inc
push
xor
sub
out
pop
or
js
hlt
jge
jmp
jl
pop
sti
pop
push
imul
call
leave
cmp
cmp
enter
clc
and
xlat
dec
icebp
sub
sbb
push
aad
jns
mov
adc
outs
retf
jb
adc
fsubr
es
outs
xor
hlt
ss
mov
neg
add
lods
cmp
jno
add
mov
or
sbb
rep
icebp
inc
jb
jle
sbb
cmp
adc
pop
arpl
inc
add
(bad)
rol
cmps
scas
and
xchg
pop
mov
ret
xchg
adc
pop
test
sub
pop
cmps
ss
mov
paddb
cdq
les
jmp
mov
scas
popf
test
mov
sahf
xchg
ret
push
les
adc
out
push
in
mov
inc
int3
mov
shl
jb
int3
xor
add
mov
jae
sbb
clc
dec
dec
int
xor
(bad)
cli
adc
call
pop
add
inc
cmp
imul
popa
xor
and
sar
mov
push
fcom
jno
shr
adc
jnp
jp
cmp
inc
jmp
fnstcw
je
repnz
mov
retf
push
and
cld
inc
bnd
fcmovbe
test
pop
fs
add
add
ret
mov
xor
push
push
lods
adc
adc
loop
ret
push
mov
adc
mov
pushf
sahf
outs
(bad)
out
mov
sbb
stc
mov
xchg
das
jle
out
cmp
les
lock
xchg
adc
mov
push
je
sub
ficom
inc
xchg
sbb
(bad)
sub
popf
mov
sub
retf
cli
mov
mov
fs
out
sub
lods
fdiv
popf
retf
mov
mov
test
mov
xchg
sub
push
inc
jmp
inc
mov
retf
es
fdiv
mov
pop
fdiv
jo
retf
mov
mov
pop
repnz
int3
jbe
imul
(bad)
fwait
mov
in
pop
adc
xor
jmp
jo
clc
fldenv
ret
ret
lea
imul
rcr
ins
scas
popf
inc
add
mov
cld
xchg
push
add
repnz
sbb
in
fild
dec
ret
xor
or
push
and
(bad)
movs
movs
popa
sbb
inc
jnp
lods
cmp
jl
mov
add
sub
les
xchg
shr
xor
shl
pop
icebp
je
dec
out
and
pusha
iret
and
push
add
adc
xor
mov
mov
mov
xor
retf
xor
clc
push
push
out
cli
push
lods
pushf
sahf
mov
push
fld
out
imul
pop
and
in
test
and
adc
push
sbb
mov
ret
or
ficom
or
(bad)
jl
rcr
lahf
mov
rol
lds
push
(bad)
rol
std
mov
fdiv
outs
push
push
gs
jg
out
into
mov
dec
xchg
jle
fild
addr16
mov
and
add
mov
in
gs
cld
mov
addr16
adc
push
aaa
hlt
sub
dec
sub
add
jnp
add
daa
outs
call
dec
fucomip
jae
xchg
ror
or
cli
mov
cld
out
push
fmulp
scas
mov
nop
pusha
sub
xor
lods
ins
or
jno
sub
cmc
movs
(bad)
sbb
push
test
pop
ss
pop
sbb
push
cmps
imul
jmp
dec
test
rdpmc
jnp
mov
inc
or
cmp
test
sub
mov
and
cmp
fadd
mov
push
je
test
mov
jo
leave
dec
fcomp
or
push
xor
int3
cmps
data16
dec
jb
xchg
or
pop
shl
in
jmp
xchg
in
mov
add
cmc
pop
jp
test
pop
fldcw
loopne
bound
mov
inc
pop
or
jmp
mov
sbb
push
mov
lods
pop
dec
pop
push
repz
int3
push
mov
outs
cmps
cmp
loope
add
fsub
stc
and
mov
popa
fisubr
jg
xchg
out
push
push
jno
mov
cmp
mov
inc
fst
inc
mov
pushf
mov
pop
xor
call
out
ror
je
sub
inc
mov
mov
pop
pusha
jp
fldcw
jmp
movs
sahf
pop
mov
stos
sub
jp
dec
movs
test
arpl
aaa
push
mov
mov
imul
or
dec
mov
and
xor
push
pop
pop
(bad)
cmp
pusha
fmul
add
pop
addr16
test
adc
add
lock
sbb
or
mov
pop
xor
and
dec
sbb
std
xor
test
mul
cmp
cmp
repnz
mov
addr16
or
add
in
cmps
sbb
fcom
jmp
in
fdivr
and
and
jp
or
shl
or
arpl
mov
jp
or
lahf
(bad)
mov
in
adc
sub
jmp
pop
xlat
sub
pop
adc
arpl
test
push
stos
add
test
imul
mov
sub
jnp
mov
popf
fstp
xchg
aaa
gs
sbb
cdq
adc
adc
lea
shl
add
ror
jbe
sub
inc
(bad)
out
xchg
sbb
jge
or
enter
rcr
data16
das
idiv
test
cld
sub
ins
dec
pop
pusha
push
mov
stc
adc
setg
sbb
push
pop
cmp
aaa
in
lahf
ins
imul
or
shl
and
lahf
out
fistp
mov
sbb
in
outs
sub
repz
sub
jg
jmp
sub
adc
jecxz
cld
lea
movs
repnz
sbb
iret
dec
and
mov
imul
pop
iret
(bad)
mov
repnz
xchg
xchg
test
jp
stos
test
loope
test
mov
inc
add
xchg
aaa
jo
mov
pop
scas
push
sub
xor
pop
jno
data16
push
ins
dec
fisttp
dec
sbb
sar
cs
inc
fsub
mov
push
mov
dec
das
dec
lock
dec
jge
or
mov
fmul
cmp
imul
pop
inc
push
push
add
push
cmp
(bad)
mov
xor
(bad)
fisttp
push
jnp
neg
push
adc
hlt
outs
popf
sar
mov
retf
xchg
push
cli
inc
and
sti
push
iret
in
mov
push
mov
dec
mov
cmps
clc
xor
sbb
jecxz
dec
mov
loope
call
push
xchg
jmp
lahf
mov
push
jecxz
cmp
out
ret
xchg
ja
xor
mov
xchg
dec
inc
pop
jno
ins
sbb
shl
dec
push
inc
xchg
pop
(bad)
std
dec
xor
fbstp
pop
aaa
shl
and
jle
ret
dec
mov
pop
aas
pop
stos
call
xor
adc
loop
or
add
push
ss
or
out
sahf
stc
sahf
cmp
mov
or
imul
xchg
xchg
and
dec
aaa
add
ret
es
cmps
sub
push
lods
inc
fdiv
sub
xchg
sahf
outs
pop
outs
mov
pop
mov
clc
or
ror
cld
cmc
icebp
mov
fimul
ins
dec
(bad)
mov
push
dec
bound
icebp
in
and
loopne
lods
cdq
das
mov
push
adc
jmp
push
push
cmp
mov
stc
xchg
mov
ret
sbb
outs
jne
lea
xor
xchg
dec
push
arpl
jle
xor
test
in
cmps
jns
jge
add
mov
sti
xlat
sti
stos
js
fdivr
aad
cld
inc
rcr
cli
hlt
jge
jg
jg
jecxz
outs
dec
das
and
gs
popf
repnz
push
push
movd
cmp
call
xor
loop
lahf
adc
dec
jge
(bad)
or
mov
and
xchg
mov
cmp
dec
mov
ins
inc
cs
outs
mov
jns
imul
mov
cmps
scas
pop
jl
mov
fnstcw
pop
pusha
int3
iret
aas
adc
dec
ja
jmp
sbb
adc
call
lock
(bad)
(bad)
fmul
cli
jp
fwait
sbb
inc
xor
out
ins
pop
loop
cli
arpl
(bad)
pop
dec
lds
sbb
jne
jnp
xor
push
mov
xlat
pop
adc
lods
adc
push
jno
add
xchg
xor
mov
dec
into
outs
xor
ror
adc
popa
mov
ret
xor
inc
loope
movs
cdq
leave
(bad)
xor
mov
jo
cs
pop
fistp
in
push
(bad)
pop
mov
pop
stc
jmp
cmp
fdivr
push
in
in
adc
add
adc
cmp
fstp
mov
clc
jmp
dec
shl
pop
jecxz
and
xor
cli
in
loopne
and
xor
inc
int
jne
ins
pop
stos
cli
dec
or
xor
std
stc
gs
hlt
cdq
shr
iret
pop
jle
xchg
das
push
(bad)
add
(bad)
cmp
ja
mov
ins
jno
xchg
leave
add
fs
repnz
mov
and
pushf
mov
xchg
out
pop
and
in
out
push
rcr
mov
sub
out
sub
pusha
mov
push
dec
aad
jp
jp
inc
test
add
clc
loope
xchg
mov
pop
ins
or
push
(bad)
out
cmp
sbb
lock
inc
mov
inc
mov
and
int3
push
mov
add
mov
fwait
or
xchg
(bad)
push
and
repz
sbb
cmc
inc
push
iret
(bad)
and
adc
add
mov
mov
xchg
cwde
jg
cmp
int
jno
sub
daa
arpl
mov
int
xor
call
fsubr
mov
mov
out
mov
iret
(bad)
adc
pop
or
int3
or
cmp
movs
or
std
or
out
mov
lahf
xchg
dec
fstp
sar
in
mov
cwde
dec
xchg
mov
fld
sbb
stc
stos
add
xchg
out
cli
pop
dec
jno
or
push
stos
dec
fsubp
dec
jnp
jecxz
out
stos
pop
sahf
or
cmp
mov
sar
jp
adc
sub
(bad)
mov
xchg
fsubr
cmp
sub
mov
jp
xchg
adc
in
mov
cmp
ffree
fsubrp
mov
retf
retf
(bad)
out
push
sub
stos
daa
pop
sbb
add
adc
retf
cmps
(bad)
dec
int3
mov
popf
data16
out
xor
shl
cmp
jmp
pop
mov
mov
mov
lods
stos
mov
test
outs
rol
xchg
sbb
or
dec
dec
daa
cdq
push
jb
push
adc
ja
push
or
nop
xchg
mov
cmps
shl
pmulhw
loope
lahf
xchg
jo
ss
(bad)
out
dec
bound
sbb
gs
jmp
rcr
js
(bad)
sub
nop
mov
sbb
add
adc
sbb
rcr
int3
neg
and
mov
xchg
push
add
cdq
rol
repnz
add
dec
fmulp
int3
or
pop
fsubp
push
jle
or
nop
pop
sti
adc
rcr
jns
(bad)
jmp
adc
mov
push
mov
and
xor
push
lock
sub
add
pop
or
sub
loope
sbb
popf
sub
clc
pop
sbb
retf
adc
cs
jne
and
or
and
outs
cwde
pop
scas
cmp
mov
in
cmp
arpl
inc
pop
rol
aad
ficom
xor
sbb
ror
add
inc
jmp
xor
(bad)
or
std
sbb
ficomp
mov
xor
mov
dec
iret
or
jae
push
adc
ins
lods
in
sbb
mov
call
std
aad
or
sti
loopne
or
mov
xor
adc
adc
jne
or
js
adc
(bad)
push
add
jg
xor
loopne
sbb
or
iret
loope
je
(bad)
pop
repz
fprem
pop
mov
xor
dec
fst
jmp
fistp
fwait
dec
and
pop
push
sub
ret
jno
push
push
repnz
push
adc
xchg
inc
cmp
and
mov
pop
mov
rcl
add
mov
es
push
cli
jnp
adc
stc
or
fmul
mov
and
fsub
push
jno
dec
inc
cmps
adc
pop
cmp
cmp
adc
cmp
cmc
sub
pop
retf
jge
xor
lahf
stos
sahf
jnp
add
mov
stos
popa
adc
pop
ss
mov
mov
mov
add
icebp
ret
test
imul
and
xor
shufps
mov
out
push
push
jmp
movs
icebp
pop
and
jo
adc
cli
ds
push
cli
inc
push
(bad)
scas
mov
mov
imul
pop
mov
jg
outs
xor
retf
sbb
xor
and
inc
aaa
ficomp
hlt
(bad)
rcr
and
stos
(bad)
sbb
idiv
(bad)
sahf
psllw
fsub
or
inc
xor
enter
cld
pop
jmp
and
adc
mov
aam
adc
pop
jle
or
sbb
not
scas
pop
out
scas
fwait
xor
es
and
inc
and
add
push
push
jnp
sub
addr16
jne
xor
lahf
fs
imul
push
popa
aas
fstp
adc
push
fwait
out
aam
loopne
out
or
cmp
das
ret
push
addr16
ret
hlt
cdq
mov
fst
mov
sbb
mov
out
test
int
and
cld
mov
pushf
jmp
and
cmp
adc
pusha
pushf
movs
call
mov
loope
ja
or
dec
jbe
retf
sbb
into
sbb
sbb
sbb
mov
pop
test
sti
retf
mov
or
lods
js
mov
and
xchg
xor
imul
aad
jno
jg
mov
stos
popa
(bad)
mov
sahf
dec
pop
test
hlt
arpl
mov
clc
aas
inc
add
pusha
test
cmp
shl
mov
pop
jno
outs
mov
das
cmp
int
rcl
jge
sbb
data16
stos
call
mov
dec
clc
lods
mov
adc
cmp
test
(bad)
loop
stc
or
pop
adc
adc
pop
jno
xchg
stc
ret
adc
push
or
in
xor
test
xchg
pop
and
test
call
sti
mov
loopne
out
xchg
popa
ror
cmps
or
adc
pop
xchg
add
(bad)
(bad)
call
cmp
dec
mov
xchg
xor
jmp
adc
add
lahf
push
mov
inc
(bad)
pop
cmp
sahf
out
stos
in
sub
leave
daa
push
div
mov
(bad)
cld
into
jmp
inc
lods
stos
test
out
rol
ror
add
and
popa
mov
js
test
xor
jbe
mov
jp
cmp
cmp
or
retf
inc
pop
add
or
jae
fs
movs
call
je
cld
repz
inc
jle
rcr
jp
inc
mov
stc
repz
mov
mov
adc
push
(bad)
xchg
pop
push
cmp
fsubr
sub
dec
dec
das
movs
inc
mov
inc
iret
popa
cdq
sbb
stos
movlps
sti
mov
mov
inc
sub
dec
xchg
adc
and
pop
test
into
movs
or
in
repnz
repnz
pusha
push
jp
xchg
fdivrp
mov
mov
or
(bad)
int
and
test
sbb
mov
pop
dec
aam
pop
out
ins
xor
pop
xchg
push
push
and
push
sub
mov
sub
push
sbb
inc
ins
ret
add
push
out
mov
ins
ja
repnz
lds
jae
out
std
pop
jmp
xor
jp
pmullw
lods
mov
fnstcw
lods
push
cmp
clc
frstor
dec
push
sub
sbb
cmps
sbb
xchg
int3
test
neg
mov
stos
or
ret
(bad)
out
ret
popa
push
mov
pop
mov
nop
sar
lods
in
pushf
sub
add
mov
push
lds
out
sbb
mov
cmp
cmp
push
dec
fwait
enter
aam
rol
aas
cs
enter
retf
xor
mov
mov
cmp
dec
mov
xlat
das
mov
ds
ret
mov
test
pop
push
sbb
in
jne
pop
lahf
out
idiv
js
add
inc
aad
mov
imul
stos
or
ja
or
jbe
xor
test
inc
lahf
xor
mov
jne
or
jp
and
xor
in
jecxz
repnz
mul
fmul
inc
adc
aam
(bad)
movs
inc
adc
and
adc
mov
dec
daa
lods
add
popf
or
arpl
add
mov
dec
nop
mov
push
cmp
dec
mov
xor
(bad)
sbb
ror
xor
call
ret
push
and
sub
pop
daa
pop
sahf
gs
call
sar
or
push
leave
inc
push
push
jge
nop
xchg
jne
pop
sahf
dec
dec
adc
and
jae
test
or
xor
sub
mov
xor
cmp
jmp
and
cmp
cdq
cmc
mov
into
cmp
vrcpss
es
fcmovbe
push
cmps
sub
sub
sbb
out
scas
stos
scas
cmp
sub
push
cli
frstor
and
rol
adc
push
imul
loope
pop
xlat
test
push
int
dec
in
ficom
clc
aas
push
dec
ud0
imul
cmps
mov
dec
push
push
lea
xchg
pushf
cmp
jo
repnz
xchg
cmps
cmps
adc
in
mov
and
add
call
pop
imul
xchg
aad
push
jecxz
push
sbb
push
cli
mov
shl
ins
xor
push
push
mov
pop
fnstsw
and
jmp
pop
inc
sbb
xchg
mov
mov
inc
mov
xor
add
jmp
repnz
icebp
xchg
adc
lods
sbb
out
xor
xor
scas
stc
fmul
sub
shl
and
adc
cld
jns
in
xchg
xor
loopne
mov
add
mov
aas
xor
repz
jmp
xchg
stos
icebp
or
cmp
add
push
cwde
xor
adc
retf
shl
enter
pop
outs
fs
outs
cmp
adc
jae
fwait
lods
xor
push
call
cmp
(bad)
neg
pop
fisubr
into
out
pop
(bad)
(bad)
xchg
push
xchg
hlt
scas
adc
in
xchg
call
js
adc
mov
cmp
xchg
jg
inc
stc
xor
mov
(bad)
dec
retf
scas
ret
lahf
(bad)
int3
scas
pop
jae
int
push
pop
in
jl
rcl
xor
cmp
leave
mov
jmp
fs
(bad)
repnz
lods
or
ret
div
or
lea
out
call
inc
mov
xlat
xchg
and
(bad)
pop
lahf
stos
xor
xchg
call
loope
push
(bad)
shl
pop
pop
xchg
dec
fadd
push
and
sbb
dec
dec
call
mov
je
inc
das
std
and
push
jecxz
scas
jg
stos
cmp
popa
inc
sbb
imul
sub
mov
sbb
imul
std
inc
fidiv
sub
fnstenv
mov
xchg
mov
or
cmc
test
in
ror
inc
cmps
mov
jecxz
ret
leave
lods
push
mov
(bad)
mov
inc
push
stos
idiv
push
sbb
(bad)
ficom
idiv
into
mov
iret
push
sbb
mov
fcomp
or
push
pop
popf
leave
xchg
mov
jge
xchg
jo
push
jmp
fsubr
dec
shl
jp
cmps
mov
int3
aas
pop
ds
cld
imul
mov
mov
pop
cmps
push
adc
ins
xlat
(bad)
sbb
test
cs
add
arpl
and
imul
dec
jnp
cmps
repz
cli
sbb
loopne
push
sar
test
jmp
enter
mov
xchg
jne
das
push
daa
or
cli
or
ror
lds
jbe
jae
iret
dec
out
stc
outs
xor
xchg
ficomp
push
dec
btr
jge
pop
xchg
sahf
jo
push
xor
sub
pop
arpl
cmc
push
mov
scas
out
or
or
sbb
pop
mov
out
adc
or
jno
outs
ret
and
in
lods
push
push
pop
or
pop
mov
sar
(bad)
mov
and
mov
xchg
mov
in
add
mov
pop
iret
movs
add
pop
push
outs
lods
pushf
push
jns
or
retf
mov
mov
xchg
push
xor
stc
pop
(bad)
push
daa
bound
xchg
call
and
pop
cmp
stc
mov
jcxz
fmul
jno
aaa
ficomp
outs
adc
aam
pop
xchg
rol
inc
adc
mov
dec
(bad)
fcos
popa
mov
sbb
adc
add
jmp
sub
lahf
aam
shr
js
sub
jmp
mov
pop
xor
push
pop
test
lahf
test
sub
mov
int3
pushf
sub
(bad)
mov
xchg
enter
lahf
adc
repnz
pusha
xchg
cld
xlat
mov
in
and
fidivr
or
or
or
xor
pop
movs
mov
jae
jmp
lock
xchg
mov
leave
cmp
in
cs
mov
sti
jnp
in
hlt
mov
(bad)
adc
pop
pop
jne
jno
inc
mov
push
(bad)
jle
lds
mov
mov
add
push
push
js
je
mov
test
icebp
sbb
je
mov
push
mov
xchg
enter
retf
shl
data16
push
stos
daa
pop
sbb
add
cdq
mov
sbb
outs
out
jg
mov
lock
inc
push
sbb
xchg
pop
ret
xchg
lds
shl
icebp
lahf
xchg
std
pop
or
pop
js
and
cmp
cmp
imul
retf
inc
xchg
pop
inc
std
aam
test
ja
aam
cli
cmc
xlat
nop
sbb
jmp
setp
jmp
cli
in
outs
pop
mov
repz
data16
test
push
lea
clc
gs
outs
xchg
stos
sahf
or
sub
(bad)
fprem1
jp
ds
clc
outs
pop
or
add
movs
loop
mov
dec
out
jnp
std
stos
loopne
push
cmc
adc
out
fs
inc
out
nop
ficomp
cli
mov
cs
sbb
dec
mov
retf
mov
js
hlt
or
adc
xchg
jne
inc
sub
dec
cld
mov
aam
cmp
std
call
pop
cmp
fbstp
pop
(bad)
test
daa
push
mov
jne
pop
popa
pusha
dec
xchg
data16
xchg
das
add
fsub
sub
rol
push
retf
repnz
ficomp
sbb
fst
cmp
fcomp
jmp
outs
cdq
adc
or
xchg
aad
(bad)
(bad)
mov
scas
vpunpckhwd
das
retf
dec
mov
ficom
sbb
gs
repnz
jns
push
mov
pop
xchg
mov
test
cdq
rol
and
nop
adc
fsubr
or
ins
jmp
xchg
in
or
mov
imul
xor
adc
test
loope
push
or
and
push
div
icebp
out
les
adc
call
sbb
sub
xchg
rcl
popa
addr16
fistp
add
sar
cdq
dec
ins
int3
fdivr
rcr
dec
aas
push
adc
test
in
in
outs
in
jmp
std
jmp
push
daa
mov
and
mov
ret
(bad)
popf
movs
inc
(bad)
fisttp
mov
mov
pop
inc
xchg
cmp
clc
cmps
mov
out
dec
jnp
mov
pop
push
mov
jp
lahf
dec
in
xlat
imul
(bad)
sahf
sub
es
(bad)
fsub
dec
jae
or
rcl
inc
repz
loope
xor
add
lock
pop
jbe
xchg
jl
jg
cmc
cmc
jmp
je
(bad)
mov
clc
pop
sti
loopne
sbb
mov
push
ins
rcr
stos
cli
xchg
jno
in
mov
jb
dec
mov
das
pusha
xchg
jo
cmp
sbb
hlt
leave
push
mov
and
lahf
fadd
imul
sti
cdq
mov
enter
add
or
bt
sub
push
cmp
ds
sub
inc
sbb
sar
inc
jo
mov
or
fsub
inc
push
sbb
dec
cmp
out
leave
fmulp
aad
retf
lock
or
mov
push
popf
sub
dec
inc
sub
xchg
adc
pop
sbb
mov
cmps
push
adc
mov
ins
and
push
pusha
inc
in
out
mov
jl
retf
daa
out
sbb
repz
mov
hlt
mov
lea
cmp
and
cmp
arpl
in
mov
popa
sub
stos
cs
movs
cdq
pop
cdq
fs
into
adc
xor
xor
outs
ja
and
pop
int
xor
outs
inc
lahf
mov
in
ja
(bad)
mov
sbb
xor
adc
dec
or
or
jmp
mov
mov
ins
cmp
push
push
push
jmp
hlt
nop
aam
cmc
in
xor
dec
mov
rcr
inc
mov
cwde
pop
mov
mov
add
pop
imul
js
mov
ds
ds
inc
(bad)
imul
xchg
inc
push
and
pusha
shl
or
popf
jp
inc
push
pop
rol
cmp
rcl
and
adc
arpl
in
cwde
pop
nop
and
pushf
dec
cs
ret
cmp
dec
stc
adc
pushf
es
jl
pop
loopne
or
out
mov
ins
bound
push
mov
pop
int3
fld
rcl
sbb
push
inc
mov
xor
inc
dec
adc
mov
mov
movs
push
cmp
add
mov
jmp
test
hlt
mov
cmp
adc
fwait
(bad)
xchg
bnd
cmp
mov
mov
cmp
inc
test
jbe
pop
xchg
mov
lahf
cmc
dec
(bad)
fcom
pop
adc
push
leave
sub
dec
adc
add
dec
je
gs
push
(bad)
js
sbb
mov
cmps
or
xchg
test
fmul
pop
push
aaa
xor
sbb
cli
add
loope
add
add
sbb
ds
sub
jo
ss
push
sbb
xchg
inc
sbb
pop
xor
jb
xor
mov
test
lea
and
dec
leave
fild
movs
inc
retf
inc
cmp
sub
int
inc
add
out
pop
cmp
sub
das
jg
in
mov
or
ds
scas
sub
mov
jge
mov
xrelease
dec
mov
push
repz
stos
xor
retf
jne
inc
ds
pop
add
hlt
cmp
or
fistp
cmp
dec
dec
enter
sbb
and
(bad)
popf
xchg
xchg
add
push
fst
adc
push
add
js
adc
push
mov
and
push
pop
pop
pop
inc
push
dec
lds
xchg
sbb
cmp
(bad)
sbb
jg
std
pop
dec
sbb
jns
stos
jle
xchg
lahf
bound
icebp
shl
or
pusha
pop
and
add
xor
dec
outs
into
mov
push
mov
adc
mov
in
adc
movs
(bad)
dec
call
push
or
(bad)
mov
stos
pop
and
sub
adc
fs
mov
jnp
dec
jno
adc
jbe
mov
sbb
xchg
mov
cmp
ret
dec
loope
push
sub
test
imul
sti
mov
or
push
xor
adc
or
pop
push
jge
sub
jge
cwde
jecxz
loope
fs
xchg
fwait
or
icebp
jecxz
xor
add
or
jge
cmps
push
jne
pop
push
adc
rep
cdq
xchg
mov
mov
ins
loopne
js
lahf
loop
jno
shl
mov
aaa
xor
hlt
fwait
jne
push
add
mov
(bad)
int
cmp
jae
xor
inc
(bad)
jle
sbb
pop
jp
mov
mov
enter
imul
add
test
int
rcr
sbb
xchg
inc
mov
pop
lahf
nop
cld
jo
mov
and
iret
mov
xchg
into
ins
scas
out
addr16
adc
(bad)
mov
fdivr
mov
or
pop
or
inc
cmp
aaa
mov
sub
pushf
cmp
jecxz
jno
ret
enter
or
jp
bswap
and
es
xchg
cmp
pushf
xchg
dec
sahf
or
dec
adc
pop
or
add
dec
and
fmul
and
jmp
xchg
ret
xchg
fadd
ror
imul
in
fstp
and
inc
fmul
retf
adc
ins
adc
mov
mov
call
jecxz
mov
xchg
and
addr16
fst
mov
gs
xchg
cmp
sub
adc
call
les
push
movs
outs
fisubr
adc
or
jg
pop
in
jecxz
sub
adc
cmps
cmp
mov
rol
add
xchg
and
bound
jp
icebp
push
mov
test
or
cmp
mov
faddp
pop
outs
xor
and
aas
pop
jl
lds
in
(bad)
xor
mov
mov
dec
xor
jnp
inc
fsub
sub
stc
xchg
(bad)
call
test
out
mov
mov
mov
repz
jo
cmp
push
outs
in
mov
out
stos
cmc
fnstsw
xor
shr
mov
inc
test
adc
xor
adc
pop
or
call
jmp
sub
mulps
sti
int
test
mov
cmps
hlt
dec
push
call
xchg
pop
ret
jne
cmc
outs
pop
pop
lock
sahf
ss
daa
outs
aam
out
mov
and
fstp
test
ror
jmp
jecxz
ins
mov
das
xchg
sub
(bad)
dec
mov
inc
outs
pushf
punpckldq
inc
leave
cmp
inc
cmp
sub
and
loope
xlat
fldenv
sub
adc
cli
loope
adc
icebp
xor
mov
cmp
lods
fld
mov
mov
push
pop
aad
push
or
xchg
fcomp
mov
xchg
push
daa
rol
loopne
mov
push
mov
mov
out
mov
xchg
jmp
ins
jb
inc
(bad)
sbb
mov
nop
push
adc
jle
nop
cld
xor
adc
xchg
mov
sti
movs
aas
push
adc
push
imul
test
repnz
adc
mov
sbb
lea
push
mov
call
movs
in
pop
pusha
jae
or
aad
mov
pop
dec
pop
mov
lds
dec
add
nop
call
or
xor
push
fcomp
inc
idiv
gs
mov
repz
jb
mov
cmp
cld
dec
push
pop
and
les
jb
inc
lds
ins
out
bound
pop
xor
mov
cmp
push
pusha
scas
xor
mov
movntps
cld
shl
clc
shl
push
push
dec
out
jmp
pop
or
sbb
cli
fcmovnb
hlt
jle
and
jl
(bad)
pop
call
adc
jmp
sbb
sbb
clc
lods
bound
mov
adc
xchg
fistp
icebp
and
pop
vmovaps
lods
push
push
sub
or
add
xchg
test
(bad)
(bad)
loope
fdiv
add
outs
mov
ret
xchg
shr
in
mov
pop
bound
and
lea
push
(bad)
cmp
mov
mov
mov
jb
mov
cli
stc
pop
mov
push
int3
ficomp
push
jmp
xlat
or
(bad)
bound
sbb
pop
push
mov
mov
jns
movs
mov
into
pop
rcl
lods
push
pop
jo
push
aas
mov
aad
pop
push
mov
or
cmps
pop
cwde
and
cld
in
jge
jmp
cli
cli
ss
jno
xchg
xchg
ss
test
pop
adc
aad
mov
pop
and
dec
aaa
sbb
sub
push
and
je
jp
loop
js
and
jg
hlt
shr
sti
in
push
jno
mov
pop
dec
jns
and
mov
dec
jmp
adc
popa
aaa
cmp
in
in
xor
push
sbb
enter
in
sbb
out
push
sbb
mov
aad
sub
outs
mov
dec
cdq
xor
pop
shl
cmp
mov
out
push
pop
fdivr
or
sub
sbb
repnz
(bad)
cmp
not
outs
and
test
adc
icebp
xchg
mov
test
lahf
ins
inc
pop
add
std
adc
mov
mov
lods
int
test
lock
add
out
and
xor
movs
das
inc
rcl
jne
bound
ins
lock
std
dec
pop
mov
loopne
pop
sti
in
pop
lods
data16
mov
mov
inc
add
mov
dec
jno
cmps
lahf
cdq
(bad)
mov
and
xchg
mov
or
inc
inc
inc
arpl
dec
emms
cs
in
cli
std
div
std
enter
sti
mov
leave
enter
xchg
shl
jo
add
push
hlt
fsub
arpl
adc
retf
movs
icebp
cmp
jp
lds
push
loop
jbe
gs
(bad)
int
sub
sar
mov
sbb
lock
sbb
add
xor
ss
or
ja
push
push
std
out
xor
cmp
xchg
ror
jge
stos
hlt
pop
xor
mov
and
inc
enter
cld
adc
pushf
pop
test
mov
add
mov
add
push
and
adc
or
call
dec
std
stos
jbe
mov
dec
mov
sub
mov
mov
loope
add
and
dec
dec
call
xor
cmp
jno
(bad)
jmp
iret
int3
mov
push
mov
jns
ja
mov
push
mov
aad
adc
pop
(bad)
dec
sub
adc
(bad)
push
or
dec
pop
aam
jge
in
dec
lods
cwde
mov
or
mov
fild
add
inc
sub
inc
dec
repnz
not
add
mov
mov
popa
call
addr16
push
adc
repnz
jecxz
leave
pop
retf
shr
mov
and
mov
jne
xor
je
xchg
cwde
sbb
pop
fdivrp
mov
popf
iret
cmp
sar
rcl
lods
sub
cmp
and
(bad)
push
mov
aas
adc
fs
xor
and
fsub
std
test
hlt
out
ins
clc
retf
mov
fadd
inc
sub
in
xor
cmp
sahf
aam
jne
fwait
iret
pop
ficomp
jno
retf
outs
jle
je
out
mov
(bad)
pop
ror
lods
inc
pushf
inc
js
jge
lods
jns
cmp
lods
repnz
pop
and
or
cmps
sbb
xor
sti
out
push
mov
xchg
or
rcl
dec
pop
inc
jmp
inc
jnp
pop
dec
sahf
xchg
xchg
int3
int
push
push
loop
dec
cmp
jge
cmps
sbb
and
ficom
mov
dec
sub
mov
adc
pop
xor
sub
dec
lahf
ret
push
push
inc
cs
nop
arpl
xchg
lahf
sar
repz
iret
sub
aas
dec
rol
lock
xchg
movs
or
retf
add
jae
xchg
les
dec
mov
inc
pop
dec
sahf
cwde
ss
inc
ja
movs
aas
imul
mov
inc
xchg
and
shl
xor
xor
jns
repz
out
cmps
and
loop
mov
cmp
pop
mov
sub
lods
test
jmp
adc
test
adc
loope
inc
call
sbb
xchg
repnz
mov
sub
push
addr16
cmp
ret
aad
dec
scas
ret
push
mov
pop
rol
(bad)
int3
xor
lods
imul
iret
xor
and
fdivr
mov
cld
in
lods
dec
lods
cmc
mov
push
xlat
leave
cmp
js
sub
jl
sar
xchg
jmp
push
lods
xchg
pop
rcr
sbb
add
fwait
jp
cmc
dec
out
cld
fstp
movs
cmp
mov
pushf
adc
cmc
pop
and
stc
push
test
mov
call
and
mov
js
sbb
and
sar
inc
sub
push
lods
(bad)
outs
enter
test
dec
inc
(bad)
mov
or
sar
sahf
in
loope
jbe
cld
push
and
jb
sbb
out
mov
cmps
jne
jae
mov
repnz
data16
xor
push
inc
mov
jl
cld
cmp
ins
or
imul
mov
xchg
call
adc
daa
clc
stc
sub
xor
rcl
stos
pop
nop
dec
or
mov
inc
fdiv
push
push
mov
dec
outs
inc
sar
jecxz
mov
mov
mov
je
xor
fistp
ins
fwait
leave
push
and
call
cmp
sub
pop
sbb
fsub
loop
inc
jb
fucomp
push
sbb
pop
stos
test
mov
in
inc
sbb
xlat
cmps
(bad)
mov
out
in
rcr
pushf
push
mov
int
adc
push
jnp
(bad)
popa
add
clc
pop
inc
mov
pop
ja
or
jp
sbb
sti
adc
ds
out
into
dec
loope
jns
lahf
outs
call
sar
cmps
repz
js
inc
aas
retf
ja
inc
sbb
outs
call
les
push
popa
fs
sub
cmp
popa
xchg
into
mov
stos
movs
jbe
fstp
dec
mov
jle
shr
mov
ret
sub
sbb
jo
dec
sbb
pop
sbb
xchg
js
clc
pop
mov
in
(bad)
ins
jo
and
sbb
lods
ins
push
xchg
js
adc
lahf
push
outs
adc
fldcw
mov
daa
js
mov
rcr
call
cmp
mov
and
pop
sub
test
dec
jbe
mov
aad
pop
je
test
sahf
sub
adc
pushf
lods
jg
and
dec
hlt
outs
cs
test
and
jno
shr
or
fs
adc
outs
test
pop
les
xchg
test
jp
inc
cmc
push
push
push
cmp
xchg
push
out
mov
mov
dec
adc
mov
lock
sbb
mov
int3
cmps
out
mov
ret
xor
test
ror
outs
mov
ror
mov
sbb
jno
stos
mov
das
(bad)
test
pop
arpl
data16
dec
leave
stos
ss
shr
out
mov
ins
cmp
sar
push
mov
adc
ss
loop
and
data16
inc
xlat
or
jmp
test
jbe
sbb
mov
mov
add
lods
mov
jno
jno
jmp
stos
gs
sar
or
out
push
cmp
call
sub
add
int
xchg
fild
adc
mov
jno
test
lods
mov
cmp
mov
loope
adc
loope
inc
dec
std
out
pop
xor
add
test
pop
mov
daa
xchg
loope
xchg
mov
jne
sbb
dec
mov
and
push
in
cmps
icebp
and
push
test
xchg
arpl
call
scas
jae
bound
pushf
mov
repz
or
inc
in
out
movs
push
test
xor
xchg
pushf
fdiv
adc
in
sub
inc
cdq
xor
xor
ret
mov
(bad)
loop
push
jns
or
sbb
repz
nop
in
jecxz
stos
jmp
les
mov
pusha
or
fldcw
jecxz
(bad)
sbb
xor
inc
je
cmp
je
sbb
xor
std
push
ds
cmp
xlat
sbb
sar
imul
nop
inc
aaa
test
sbb
xor
push
movntps
cmps
fwait
mov
or
xor
adc
jle
movs
fbstp
cli
push
xchg
ret
push
jb
xor
int
mov
dec
leave
mov
jmp
xor
test
push
adc
add
jo
cld
fwait
xchg
retf
gs
pushf
cmps
mov
hlt
sub
or
lds
out
(bad)
or
jo
inc
cmp
movs
sbb
movs
xchg
fs
retf
xchg
dec
mov
dec
xor
std
add
xchg
ds
or
and
jg
jno
inc
sbb
dec
fistp
cld
das
sbb
push
add
call
inc
imul
or
sub
pusha
cmps
loope
call
lods
xchg
sub
outs
xchg
jnp
dec
shl
bound
fsub
test
rcl
push
push
repz
ror
xchg
ins
in
adc
pop
xor
jecxz
ins
dec
inc
dec
cmc
cmps
xchg
or
(bad)
and
sti
fwait
aam
jb
mov
retf
jnp
fld
sub
mov
pop
jns
fistp
sar
retf
ja
cmp
das
jle
out
jo
pop
lds
and
imul
pop
cmps
stos
sbb
repz
in
push
out
sub
test
xor
loop
out
adc
std
lds
xor
ret
mov
aam
js
xchg
mov
dec
ss
(bad)
push
push
xchg
push
push
shr
cmp
push
frstor
jp
fist
int
call
mov
not
xchg
cmp
inc
add
aas
in
jmp
retf
xchg
sub
test
lock
stos
jmp
mov
das
stc
fist
xor
test
adc
imul
loope
movs
fsubr
imul
mov
or
fs
dec
jne
xor
push
test
push
pcmpgtd
sbb
shl
inc
pop
or
je
mov
into
fldcw
jne
push
in
jge
lea
push
dec
rol
jle
adc
pop
imul
cmc
mov
adc
pop
bound
pop
scas
add
data16
pop
xchg
imul
inc
int
mov
test
int3
xchg
jecxz
fdivr
scas
fmul
mov
push
cmps
inc
imul
pop
sub
jnp
mov
fdivr
bswap
and
cmp
jecxz
mov
and
or
test
(bad)
mov
in
outs
push
call
ins
mov
or
cmp
pop
imul
fcmovb
mov
jmp
sbb
loop
jmp
daa
inc
fcomp
jmp
sbb
and
lods
xchg
and
mov
test
test
fdivr
xchg
xor
mov
cdq
add
push
fcom
xor
mov
popf
addr16
cmp
repz
push
int3
or
add
inc
arpl
sahf
repz
pop
lds
lds
xchg
fistp
stos
lods
fldpi
dec
shr
push
and
xor
or
div
dec
cmps
in
es
push
sbb
dec
push
push
in
icebp
jnp
hlt
push
dec
cdq
inc
retf
add
and
inc
int
les
aad
mov
mov
xchg
push
mov
xor
cmps
jb
push
ja
ret
pop
test
ror
loopne
or
jne
mov
cmp
and
xor
(bad)
test
push
dec
xor
arpl
push
inc
int3
aaa
aas
stos
adc
push
repz
and
mov
in
dec
(bad)
stc
xor
fisub
and
ror
pop
call
cs
ss
(bad)
add
and
push
dec
rcl
out
xchg
or
mov
xchg
mov
jno
daa
aas
pop
xchg
leave
jbe
mov
rcr
sti
fucomi
fmul
cmp
loopne
inc
dec
cmp
sbb
mov
jge
mov
sub
cmp
fiadd
sub
jns
idiv
(bad)
pop
popf
dec
xlat
(bad)
sbb
lea
mov
int3
shl
pop
inc
push
scas
inc
(bad)
scas
pop
inc
dec
adc
lods
and
inc
push
aas
jns
dec
adc
cmps
aas
adc
push
fwait
xor
jmp
mov
sbb
add
push
and
and
inc
jle
repz
daa
in
pop
jecxz
(bad)
fsubr
mov
jnp
and
ret
dec
cmp
shl
dec
xchg
xlat
pop
mov
outs
jp
jae
xchg
cld
stos
test
or
test
rol
xor
es
mov
inc
add
inc
xchg
mov
repz
lock
fdiv
push
add
cs
inc
cmp
arpl
(bad)
test
mov
xchg
retf
push
push
ja
or
je
sub
(bad)
ficomp
lea
addr16
jnp
icebp
imul
xrelease
outs
jl
in
add
pusha
mov
out
jae
mov
cmp
mov
(bad)
js
fidivr
sar
jb
xchg
aam
rcl
sahf
push
dec
mov
mov
jmp
push
outs
jmp
hlt
pop
retf
stos
push
xor
sbb
cmp
adc
daa
les
outs
jb
cmp
mov
fwait
mov
or
mov
jne
lds
in
inc
cdq
lock
inc
in
daa
and
jmp
das
push
mov
mov
out
jb
imul
(bad)
mov
cmps
retf
jno
push
jecxz
push
mov
repnz
mov
or
cmp
pop
cmp
lea
jg
iret
pop
jmp
inc
add
pop
push
dec
bound
fcomp
mov
test
adc
cmps
idiv
aad
enter
clc
dec
sub
mov
sbb
push
stos
dec
mov
lods
popf
mov
push
popf
xchg
sbb
stc
mov
sbb
adc
(bad)
(bad)
push
adc
inc
lock
mov
int3
jecxz
push
push
xor
cmp
xchg
or
lahf
mov
jnp
loope
pop
ret
scas
adc
xchg
mov
mov
popf
sbb
mov
cli
push
lahf
(bad)
rol
adc
ins
in
repnz
adc
mov
mov
mov
in
jne
stos
daa
push
mov
jb
and
sub
pushf
pop
cli
or
(bad)
and
hlt
or
cmp
push
cmp
adc
loope
lods
fld
mov
repz
shr
test
fwait
popa
adc
pop
in
jmp
enter
mov
imul
push
in
int3
leave
or
lods
push
js
mov
adc
mov
mov
xchg
lea
ins
mov
(bad)
jb
ret
not
test
ins
jmp
in
das
das
fwait
ror
lds
scas
xchg
mov
cdq
aad
cmps
fisttp
mov
lods
add
je
in
js
fidivr
rcl
lods
inc
sub
daa
fadd
jns
cmps
int3
enter
aas
(bad)
lock
aaa
call
jo
pop
ret
daa
push
jmp
push
push
das
movs
xlat
fldcw
in
pop
and
xchg
cmp
mov
push
dec
push
bswap
int3
pop
mov
test
jnp
std
leave
ret
cmp
mov
sub
inc
or
xchg
lods
lock
repz
sub
and
push
inc
cmp
mov
sbb
xor
and
dec
stos
fisttp
pop
mov
fsubr
sbb
mov
inc
cdq
ficom
(bad)
mov
inc
aam
sbb
pop
push
mov
jle
push
xor
xchg
xor
inc
jg
aam
mov
jne
leave
xchg
or
xor
aas
cld
ins
cld
xchg
sbb
shl
es
inc
ret
mov
rol
cmp
sbb
or
fsubr
pop
push
jmp
jg
je
aaa
jl
mov
adc
jne
xchg
cmp
sub
or
sti
or
test
jmp
test
xchg
xor
pop
sbb
je
ror
inc
jp
in
jbe
ret
int3
xlat
imul
push
push
(bad)
in
outs
sbb
stc
lods
div
sbb
daa
mov
adc
arpl
pop
test
xchg
xor
icebp
xchg
push
data16
pop
pop
and
mov
and
jmp
call
sbb
dec
jb
fidiv
imul
push
xchg
out
ds
adc
call
and
in
sbb
jge
aad
push
jmp
js
mov
and
sub
sub
cld
test
cmp
pop
rcl
imul
rcr
xlat
fstp
sub
sar
loop
into
shr
sub
cmp
ret
call
sbb
cld
add
or
bound
fiadd
push
das
cmp
lods
ds
fisubr
mov
xchg
shr
sbb
bnd
lods
cmp
stc
dec
mov
jbe
dec
sbb
aas
sti
test
lods
pavgb
xchg
shl
jmp
sbb
add
mov
call
and
cmp
fsub
add
push
sahf
mov
or
shl
ss
jmp
inc
(bad)
repz
or
xlat
add
add
scas
std
sub
(bad)
retf
inc
lods
sbb
mov
xor
sbb
and
repnz
push
push
mov
leave
test
int3
inc
enter
out
imul
xor
fcmovne
push
fmul
jmp
out
in
lods
std
jb
fwait
cmp
mov
mov
fisttp
fucomip
(bad)
and
jnp
push
fiadd
fmul
nop
inc
cdq
int
ret
add
inc
jo
imul
outs
push
cli
in
jge
cwde
stc
in
cmc
(bad)
stos
mov
or
xchg
jo
cli
push
cmps
mov
lahf
add
sub
sub
mov
aam
push
(bad)
in
and
inc
sub
cmp
jne
sti
fisub
dec
jg
jp
ins
out
dec
es
cmc
xchg
hlt
push
aas
sub
sbb
repnz
movs
sahf
mov
add
or
mov
sar
xchg
sub
jl
mov
pop
pop
lock
in
push
pop
cmps
cmp
fisubr
push
xor
loop
mov
test
mov
mov
outs
shl
push
sbb
jne
or
xchg
xchg
push
cld
inc
mov
push
imul
je
mov
in
gs
pop
sbb
add
jge
aam
retf
sar
cmps
mov
iret
mov
fstp
stos
pop
push
int
xchg
mov
cmp
mov
dec
es
pop
xor
scas
data16
ins
dec
pusha
cmc
xchg
out
(bad)
mov
lea
adc
out
push
cpuid
(bad)
pop
nop
mov
mov
sbb
sbb
repz
xor
bound
mov
add
xchg
xor
add
sbb
and
jno
xor
adc
jl
pop
lds
pop
adc
or
hlt
pop
push
push
or
icebp
in
mov
or
inc
je
jns
or
mov
in
int3
sub
xor
dec
scas
pop
and
or
fsubr
jmp
lods
inc
pop
loopne
aaa
mov
fst
and
add
mul
cmp
ret
xor
movs
mov
jns
push
xchg
jb
sub
out
je
dec
inc
in
fimul
jae
test
add
dec
scas
leave
add
sar
xchg
call
push
fsubr
xor
or
out
adc
xor
ja
lea
push
aam
mov
adc
and
mov
xor
dec
and
(bad)
call
dec
add
pop
mov
cmp
outs
(bad)
jl
addr16
fdivr
or
and
push
sbb
jne
fwait
mov
adc
aaa
mov
sub
and
sti
mov
enter
cdq
inc
dec
xchg
cs
mov
into
push
lods
sbb
outs
jns
sub
xor
mov
jne
xchg
push
cli
xchg
in
leave
add
data16
mov
hlt
aam
out
dec
cli
jb
jl
inc
lods
out
ror
push
pop
mov
bound
add
and
jg
or
push
xchg
andps
sbb
cmp
hlt
lea
and
mov
icebp
jmp
pop
ins
cmps
imul
or
dec
or
fs
dec
jg
or
cli
and
rol
scas
popa
loop
outs
aam
xor
jle
movs
cmp
sahf
inc
sti
lock
scas
jnp
mov
xor
movs
adc
aad
jo
xor
mov
pop
sbb
mov
psubusw
lahf
xchg
scas
cwde
cmp
xchg
inc
stos
ror
xor
xor
popa
(bad)
sti
sbb
aam
pop
sbb
std
inc
jbe
or
add
sub
test
enter
xor
xchg
(bad)
and
sub
push
ret
or
cwde
loope
add
xchg
push
sbb
imul
mov
jp
jle
inc
mov
push
(bad)
pop
adc
push
fidivr
(bad)
test
push
stos
xor
out
loop
xor
aaa
in
sub
mov
adc
lds
stc
mov
dec
inc
mov
adc
mov
adc
cmp
bound
mov
hlt
cmc
es
mov
jl
jecxz
ins
scas
(bad)
out
push
jle
les
add
cmp
sub
pop
push
pusha
or
adc
pop
call
rcl
mov
cmp
dec
mov
mov
sub
and
mov
cmc
pop
xlat
mov
xchg
ds
stos
cmp
pop
pop
jecxz
push
rcl
cs
aam
mov
call
inc
jmp
push
cmp
push
cs
add
xchg
(bad)
fld
or
push
xor
out
sub
xchg
je
mov
cmp
call
jmp
or
ins
mov
or
xchg
out
sub
retf
test
jne
dec
cs
aad
jecxz
xchg
ret
dec
dec
jge
jecxz
retf
xchg
aaa
scas
push
add
adc
in
sub
retf
lea
xchg
xchg
xor
sbb
jge
and
jno
add
sti
sbb
inc
sar
lods
aaa
mov
lahf
inc
mov
dec
push
adc
test
out
movs
je
or
in
jo
mov
sbb
push
ds
xor
sbb
jp
test
sar
jbe
stc
jmp
mov
in
loop
xchg
out
xor
jmp
add
xchg
jp
ss
loopne
xor
mov
dec
pop
int
inc
adc
mov
in
aas
aas
in
mov
leave
mov
fwait
add
jmp
(bad)
push
loop
push
loop
gs
cmp
lods
lods
loopne
adc
mov
in
jno
inc
dec
call
dec
push
lock
sbb
leave
inc
lea
adc
or
and
cmp
sub
or
inc
test
(bad)
imul
mov
out
and
in
ja
ja
mov
xlat
push
push
add
pushf
loope
sub
int
adc
icebp
pop
int3
sbb
sbb
mov
jmp
or
dec
iret
jb
or
jl
xor
mov
out
fst
je
add
pop
jno
xchg
mov
mov
mov
(bad)
or
pop
xor
xor
adc
pop
cwde
sub
in
adc
fmul
pusha
add
adc
or
rol
mov
pop
adc
add
movs
jns
push
stos
jg
in
movs
cmps
xchg
and
mov
aaa
scas
test
mov
lods
rcl
mov
mov
cmp
xchg
fsub
(bad)
lock
in
dec
dec
ja
aaa
(bad)
sti
or
mov
cdq
adc
pop
add
jne
mov
shr
adc
das
sub
std
scas
cmps
test
push
dec
fwait
push
or
jb
adc
iret
sub
inc
repz
inc
fistp
inc
mov
jbe
mov
sub
pop
and
fdiv
mov
in
adc
hlt
push
lahf
pop
mov
outs
and
iret
imul
ds
fs
cmp
and
mov
rol
leave
daa
mov
jmp
das
lods
test
cmp
(bad)
out
dec
jge
iret
mov
jmp
movs
inc
xchg
iret
sbb
cmp
repz
shr
imul
sbb
push
cli
mov
cmp
mov
sub
push
in
mov
dec
out
or
aaa
addr16
cs
in
push
fstp
test
push
(bad)
push
pop
push
mov
mov
pushf
mov
pushf
fwait
dec
jecxz
add
push
fist
ja
dec
rcr
mov
pop
sbb
jge
push
rcl
(bad)
cmp
call
mov
sbb
rcl
test
and
pop
fwait
js
iret
out
inc
cmp
add
mov
mov
dec
mov
inc
add
xchg
mov
aam
nop
jmp
inc
mov
mov
push
ret
inc
test
sub
nop
int3
jno
cmps
sti
dec
sbb
dec
and
stos
pop
outs
daa
sbb
mov
(bad)
(bad)
cmp
pop
jne
or
aam
cmp
aaa
(bad)
stc
in
mov
(bad)
movs
cs
sbb
xchg
sbb
jl
adc
jo
aad
xchg
mov
xchg
adc
jle
int
mov
dec
lahf
lea
sbb
ret
jbe
mov
stos
pop
pushf
ins
rcl
jb
(bad)
(bad)
push
dec
fld
push
dec
jmp
ins
aam
sbb
sar
mov
fisubr
dec
shl
ret
push
xor
mov
jne
call
nop
daa
or
mov
aas
aam
mov
mov
aas
cmp
push
gs
xchg
mov
(bad)
(bad)
sbb
nop
jb
dec
mov
jle
sbb
(bad)
sar
cmp
rcl
imul
mov
xchg
aad
loopne
pushf
xchg
inc
in
jge
sbb
not
sbb
ss
mov
lea
inc
pop
sahf
or
push
mov
fsub
mov
add
or
add
inc
inc
cmp
fmul
push
adc
aaa
push
xchg
push
out
dec
jg
push
repz
ror
and
jp
(bad)
std
add
sbb
xchg
push
dec
and
mov
push
jne
mov
js
scas
adc
mov
not
cmp
cli
mov
push
dec
jne
cmps
inc
pop
xor
idiv
and
pop
dec
out
jns
push
in
jno
pop
hlt
push
and
lods
mov
or
xor
add
sbb
cmp
sete
mov
cmp
xchg
push
mov
jns
dec
cmp
sbb
pop
inc
sub
xor
nop
imul
or
cmps
lds
test
cmp
ds
iret
xchg
cmp
or
loopne
mov
loop
adc
fs
popf
ss
or
jge
rdpmc
cmp
hlt
mov
or
add
je
fsubr
mov
fbld
fsubr
push
lock
les
je
jb
mov
and
jb
popa
adc
sbb
jp
cmp
ds
pushf
xchg
iret
test
cs
int
aas
push
sub
push
scas
push
inc
mov
das
pop
jmp
xor
fucom
or
mov
jg
xor
inc
xor
jmp
test
loope
pop
lock
lds
(bad)
xor
mov
push
add
out
push
frstpm(287
dec
aam
mov
mov
adc
lods
aaa
push
je
(bad)
out
mov
dec
mov
jle
popf
jns
test
jge
xor
sub
cmp
adc
dec
stos
sar
or
call
mov
cs
gs
inc
dec
push
adc
push
std
in
addr16
mov
xor
in
aaa
cmc
push
test
popf
icebp
in
xor
adc
sub
or
adc
(bad)
aam
pop
mov
pop
mov
rcr
mov
xor
(bad)
cmp
imul
ja
sub
iret
stc
loopne
jp
imul
retf
xchg
shl
xchg
(bad)
dec
call
push
xor
jge
retf
cmps
cmp
push
das
call
fwait
repnz
sub
cmc
(bad)
jg
jne
hlt
mov
mov
mov
fs
cmp
dec
imul
mov
cmps
mov
sbb
cld
fidivr
jp
outs
dec
dec
add
jmp
dec
and
mov
mov
pop
mov
dec
nop
add
fwait
retf
(bad)
jmp
pop
imul
into
daa
mov
ret
mov
sbb
mov
arpl
and
daa
nop
cmc
or
in
cwde
push
test
out
push
adc
movs
lods
sub
sub
xchg
(bad)
pop
and
shr
adc
xor
fwait
add
jbe
push
jle
and
mov
cmp
sbb
mov
or
clc
jmp
adc
dec
inc
xor
add
mov
mov
add
lahf
pop
rcl
pop
jmp
pop
mov
cwde
dec
ficom
les
pop
sbb
or
mov
fwait
test
jo
add
bound
xor
adc
int
push
jae
pop
xor
push
add
mov
out
(bad)
aas
adc
add
addr16
adc
add
pusha
imul
data16
dec
test
or
pop
cmp
pop
add
xor
test
jge
stc
push
cmp
jb
popf
pop
repnz
les
sbb
sbb
sub
mov
test
repnz
lods
(bad)
mov
sbb
ret
inc
push
lahf
jb
xchg
cmp
fstp
shr
xchg
rol
xor
xor
movs
pop
sbb
adc
mov
ficom
loop
push
fcomp
loop
cmp
cmp
(bad)
into
or
push
push
sub
clc
xchg
sbb
into
movs
fistp
jle
mov
sbb
jg
cli
dec
mov
add
pop
xchg
test
adc
push
push
jmp
jb
addr16
sbb
repnz
inc
call
sbb
sub
xlat
jl
scas
mov
mov
scas
in
mov
sub
cmp
cmp
test
jp
stos
and
pop
mov
retf
std
lods
pop
pop
push
ins
xchg
into
bnd
rol
mov
sub
push
mov
popa
gs
rcl
mov
dec
rcl
fist
mov
mov
cmp
mov
imul
jns
cdq
push
xchg
pop
cdq
jo
lods
sub
xor
push
adc
fdivr
cmp
xor
cdq
sub
xchg
test
lds
ficom
sub
jo
sbb
fist
inc
sub
add
data16
repnz
cmp
nop
mov
lods
lahf
fcmovne
adc
repz
sub
loop
in
mov
mov
in
pop
and
push
ret
push
pop
ds
div
pop
(bad)
aad
gs
mov
pop
adc
ds
stos
inc
mov
add
aad
data16
mov
movs
mov
pop
xchg
aad
sub
mov
jmp
es
inc
scas
xchg
cmp
das
fwait
mov
pop
sti
cwde
repz
push
int
rcl
sbb
mov
fs
push
test
cli
add
inc
dec
fst
jge
das
push
jge
clc
inc
jnp
cwde
leave
jno
lock
push
jmp
or
(bad)
jmp
lock
jbe
or
nop
inc
inc
sub
jmp
lea
xchg
hlt
xchg
es
push
sbb
pop
cli
imul
or
dec
int3
mov
(bad)
popa
fcom
pushf
adc
pop
in
push
add
or
in
sbb
hlt
push
mov
mov
mov
aad
adc
dec
sub
mov
fmul
push
clc
mov
pop
jno
add
xchg
rcl
sbb
cvtpi2ps
xchg
jle
loope
repnz
in
push
scas
scas
pop
sub
mov
(bad)
fistp
push
(bad)
fsubr
inc
dec
shr
mov
loope
pop
pop
xor
cli
ror
fs
jge
inc
icebp
lds
jecxz
jmp
shr
jecxz
cs
mov
or
add
shl
test
(bad)
aaa
shl
mov
fistp
(bad)
push
enter
dec
adc
lods
outs
inc
scas
push
lahf
mov
test
in
inc
mov
bound
xchg
dec
les
xor
mov
test
ret
sub
push
sbb
push
ret
dec
fndisi(8087
and
or
jno
fistp
inc
jmp
jmp
leave
sti
and
iret
push
shr
lock
addr16
jae
xchg
sbb
and
push
dec
add
or
xchg
arpl
xor
add
jns
gs
add
je
adc
dec
sub
cli
mov
cmp
pop
xchg
or
test
cmps
and
push
mov
adc
mov
jbe
jl
jmp
in
test
inc
popf
mov
inc
and
popa
imul
jge
jl
xchg
ret
pop
xchg
sub
aaa
cwde
(bad)
inc
add
call
mov
push
outs
fistp
push
das
cmp
inc
div
repnz
rcr
pop
adc
stos
ds
addr16
pop
shl
inc
xor
mov
aas
sub
mov
jge
mov
jne
mov
fdivr
inc
and
and
lods
or
mov
cli
aam
mov
xchg
aam
push
inc
(bad)
ss
stos
jbe
add
mov
mov
push
cmp
adc
test
mov
call
add
adc
cmp
and
cmp
retf
or
pop
mov
jecxz
jo
xor
push
jne
adc
inc
mov
fild
push
stc
ret
pop
xchg
movs
add
pop
ja
jne
sub
fisubr
jge
xor
js
pmullw
jnp
popa
inc
hlt
add
mov
dec
dec
int3
(bad)
xor
call
outs
dec
test
xchg
int
clc
mov
and
jbe
cmps
cmps
dec
sbb
mov
inc
div
mov
out
stos
movs
dec
movs
idiv
fbstp
push
ret
push
(bad)
mov
pop
sbb
xor
sahf
mov
or
add
cmps
call
sar
push
sbb
xor
cmp
inc
bound
xor
xor
xchg
sub
mov
icebp
imul
retf
push
push
(bad)
(bad)
xchg
xor
fcmovbe
loop
test
pop
xlat
sti
push
lods
icebp
into
pop
gs
adc
adc
and
push
mov
and
(bad)
mov
push
cmp
mul
(bad)
mov
push
sub
addr16
and
ins
rol
sbb
daa
sti
sub
dec
pop
sahf
xor
or
loope
retf
lea
out
fwait
jp
loop
pop
out
icebp
jle
dec
and
pop
jae
popf
hlt
or
dec
xchg
push
sar
push
adc
sub
imul
mov
cmp
ins
mov
mov
fsubp
fisttp
(bad)
(bad)
cmp
push
pop
xor
pusha
gs
add
sub
jbe
je
js
push
das
ins
push
(bad)
inc
(bad)
mov
cmc
mov
mov
add
leave
dec
xchg
pop
outs
push
pop
repz
popf
aaa
retf
sub
pop
mov
add
mov
rol
pop
pop
pop
xor
dec
enter
jg
ins
retf
iret
sub
xor
add
mov
adc
sub
outs
and
popa
dec
and
ins
xor
call
mov
and
icebp
sti
cs
ins
xor
mov
sahf
add
stos
jmp
loop
popa
int3
xchg
out
cs
ins
retf
test
test
cdq
mov
call
push
dec
mov
das
in
add
out
jmp
test
scas
sub
adc
sbb
mov
sub
ss
jmp
les
mov
cmovns
jecxz
es
loopne
or
jae
int
mov
shl
xchg
jne
mov
fs
fstp
add
xchg
test
push
sbb
fisttp
scas
sbb
jp
imul
dec
fild
imul
sub
into
xlat
leave
cmp
cmps
mov
xchg
xchg
jg
mov
fwait
adc
hlt
mov
ror
push
(bad)
ss
cmp
and
fist
enter
jecxz
pop
and
sbb
sar
push
cld
test
dec
imul
pop
ins
adc
mov
pop
leave
mov
push
mov
inc
xor
cmp
cmc
pop
test
(bad)
or
pop
fcmovb
pop
psraw
sub
test
ror
mov
in
jbe
xor
int
ins
mov
sub
mov
mov
test
movs
dec
fsubr
in
adc
pushf
push
jge
adc
add
or
sti
cmc
and
push
inc
sbb
mov
je
out
cmp
add
jl
cmp
mov
fwait
xchg
mov
loopne
loop
fwait
or
adc
cdq
int
and
fld
cmp
int
push
cmp
stc
imul
retf
mov
(bad)
push
fsubr
mov
fsubr
jne
xadd
(bad)
mov
in
xor
push
and
hlt
mov
call
shr
lock
stos
test
out
and
xor
pop
and
dec
imul
mov
xor
or
repnz
outs
xchg
clc
into
pop
dec
into
into
mov
imul
popf
mov
cmp
mov
aaa
jo
mov
cmp
scas
fbld
cli
add
sahf
sbb
lock
pop
repz
outs
mov
enter
sub
call
jns
dec
shl
ja
scas
cmp
(bad)
dec
out
dec
test
neg
or
nop
into
dec
mov
cmp
xchg
or
cld
mov
stc
out
or
and
mov
jmp
cmp
nop
sar
out
mov
xchg
mov
movs
cmp
mov
out
rol
ret
cmp
mov
inc
cmc
and
mov
mov
jmp
inc
mov
and
aas
aaa
into
(bad)
cmp
mov
inc
ss
les
in
pop
fidiv
lahf
cmp
cmp
mov
daa
push
sbb
aam
or
xor
aas
cld
lods
ret
cmp
dec
cmp
and
stc
sub
clc
enter
push
jle
add
fisubr
ficomp
jle
in
shr
out
std
dec
add
inc
mov
cmp
sbb
jg
shr
jae
outs
or
xchg
mov
adc
sub
mov
xchg
pop
cmps
in
add
xchg
test
jmp
mov
jo
mov
adc
sub
xchg
pusha
(bad)
xcrypt-ecb
cmps
int
push
inc
jmp
add
int3
call
and
lods
push
jecxz
sti
je
enter
out
clc
push
sar
mov
movs
push
or
(bad)
les
xchg
mov
sub
dec
or
in
je
gs
fsubr
fucomp
out
sub
xor
(bad)
lods
add
test
cdq
repnz
ins
hlt
out
(bad)
out
loope
js
mov
mov
jno
cdq
xchg
pop
ret
inc
mov
lock
add
inc
ret
cmps
jg
ds
inc
and
jne
cwde
add
pop
sub
pusha
test
lock
push
push
jle
dec
mov
jno
pop
mov
pop
fs
or
inc
pop
adc
imul
in
mov
test
sub
xchg
cmp
fnstcw
scas
cwde
fs
mov
in
cmp
fisubr
sbb
push
pop
xchg
(bad)
mov
rcr
jbe
mov
and
cwde
fmul
dec
ja
jmp
loop
aad
push
fwait
xor
or
fwait
push
xchg
fisubr
inc
aas
fsubp
shr
sbb
lds
pop
cmp
sbb
and
push
test
and
repnz
enter
bound
pop
mov
ror
sbb
pusha
jo
sbb
jle
mov
push
dec
add
hlt
or
dec
scas
arpl
iret
ja
scas
in
xchg
push
push
lock
fbld
cld
daa
jge
mov
sub
fisubr
shl
mov
jecxz
ins
push
jmp
je
dec
stc
in
jp
sbb
cld
(bad)
adc
cmps
pop
addr16
inc
cmc
cmp
movs
sbb
pop
xor
cmp
out
clc
cmps
xchg
test
outs
push
arpl
(bad)
inc
and
cwde
psubd
mov
or
push
(bad)
lods
push
sti
ror
enter
cld
rcl
add
jne
adc
pop
push
push
in
or
add
sbb
mov
and
fstp
xchg
ret
pop
out
and
hlt
ss
xor
in
(bad)
ficomp
mov
scas
test
add
sub
icebp
je
outs
inc
cld
jne
add
xor
(bad)
mov
out
cmp
stos
jl
sub
cmp
adc
int
sar
gs
xor
sub
xchg
inc
push
push
cs
pop
adc
pop
das
lods
ins
mov
jbe
pop
ins
mov
push
mov
jbe
and
lds
retf
(bad)
(bad)
cmp
(bad)
movs
push
lds
pop
mov
jno
int
adc
mov
add
jb
out
pop
mov
xor
fild
adc
jo
push
ins
fcom
lods
scas
jns
cmp
ror
call
adc
sub
clc
jne
rcr
mov
out
nop
out
sbb
into
pop
ror
add
mov
fnstcw
dec
pop
les
ss
mov
int3
fisub
sti
inc
(bad)
retf
test
mov
mov
mov
pop
cwde
pop
mov
lahf
pop
xor
out
icebp
int3
dec
pop
shl
or
je
inc
sbb
mov
mov
mov
test
push
in
adc
js
xor
xor
cmp
mov
out
imul
jl
loop
iret
inc
xor
lock
dec
cmps
mov
mov
inc
jle
dec
adc
cli
das
mov
div
adc
lock
mov
or
cs
jl
mov
cmp
int
dec
mov
stos
cmp
sub
mov
outs
mov
test
jmp
sub
and
push
repnz
popa
jne
enter
outs
jg
ret
or
or
into
mov
movs
push
cmp
xor
iret
stc
and
sub
test
mov
pusha
neg
popf
xchg
repnz
pop
pop
imul
enter
xor
or
rcl
sub
test
mov
pushf
je
sub
add
pop
xchg
xor
dec
or
or
lods
loop
dec
fcom
jb
pinsrw
scas
aad
stos
ins
mov
mov
out
mov
or
leave
or
into
push
rcr
rol
aam
xchg
jns
jl
nop
mov
xor
jns
jp
loopne
jmp
inc
sub
pop
jae
stc
dec
int
push
call
js
fadd
fmul
and
xadd
inc
loop
and
add
lea
mov
inc
mov
cli
sub
int3
(bad)
push
xor
and
(bad)
sub
rol
movs
jmp
scas
or
rol
xchg
in
inc
in
dec
call
cmp
imul
lock
mov
inc
fcmove
daa
shl
xor
test
loope
mov
and
or
lock
cmp
xchg
imul
fwait
add
retf
cmp
popa
ins
inc
add
push
cdq
cmp
push
div
xlat
in
cmp
push
(bad)
sub
stc
or
js
mov
mov
xchg
popf
clc
mov
xor
pop
movs
(bad)
fadd
push
jno
mov
imul
or
push
cmps
dec
jae
push
mov
outs
or
fnstenv
mov
out
clc
dec
push
ror
out
pop
pop
xchg
cld
out
in
cdq
xor
jae
in
dec
xlat
je
loop
mov
ins
or
jmp
js
imul
sub
mov
call
lahf
adc
jno
test
mov
jmp
mov
pop
cld
in
xchg
cmp
ins
or
mov
lahf
test
int3
sti
lods
mov
xchg
data16
adc
and
cmp
xor
call
push
int3
cwde
fs
mov
xchg
sbb
and
or
test
cld
fldenv
or
test
ins
and
(bad)
fild
xlat
mov
dec
cmp
xor
sysenter
movs
and
iret
pusha
les
test
in
sub
jbe
inc
mov
adc
ret
xlat
or
test
mov
mov
into
pop
cmps
pusha
or
push
xor
test
pop
mov
movs
add
mov
inc
ja
rcr
mov
jbe
dec
(bad)
jp
lds
cmp
mov
(bad)
cmc
inc
dec
add
(bad)
bound
retf
dec
into
jp
cld
adc
xor
cdq
in
mov
jb
sar
push
pop
mov
add
fimul
cli
test
mov
jb
pop
jmp
cmp
mov
adc
int
leave
jns
(bad)
int
push
sbb
fwait
sub
push
ins
or
pop
inc
and
mov
add
or
bound
movs
push
ins
adc
ret
(bad)
sbb
retf
scas
pop
sbb
jns
sbb
out
ins
pusha
jg
lods
adc
shl
sar
mov
mov
call
xchg
jne
mov
inc
dec
cmps
xchg
jmp
test
xchg
stos
inc
push
mov
xor
hlt
cmp
sbb
ret
pushf
cmps
sub
repnz
movs
sti
mov
xor
cmp
pop
jmp
mov
std
fldenv
pop
xlat
dec
retf
cmp
cdq
mov
fcmove
int
inc
sub
mov
cmp
and
push
pop
out
and
mov
push
pop
inc
repnz
xchg
pop
clc
inc
sbb
(bad)
jmp
scas
cmps
cmps
sub
pop
or
xchg
leave
push
test
jns
mov
jl
or
fs
movs
retf
cwde
mov
jbe
xchg
ins
add
jl
pop
cwde
add
jne
stc
pop
xchg
fstp
ins
jge
mov
ins
dec
arpl
ret
movs
shl
and
xchg
push
cmps
in
xchg
frstor
jo
call
adc
and
rol
fmul
into
movs
add
add
or
xor
icebp
into
jo
pop
sbb
add
movs
popf
jo
mov
xchg
call
mov
out
pop
ins
retf
inc
and
push
cdq
jo
or
add
das
test
dec
xor
dec
(bad)
int
sbb
dec
add
jns
mov
add
cs
rcl
leave
jle
mov
adc
inc
jne
cmp
icebp
adc
test
pop
and
enter
push
fisttp
fsin
cmp
and
inc
xor
push
addr16
jecxz
xor
add
fwait
jg
dec
dec
xor
mov
sub
jae
dec
cmps
adc
fdivr
or
xor
call
jb
push
imul
call
cmc
mov
in
cmp
call
push
(bad)
js
mov
inc
out
xchg
icebp
sbb
arpl
push
repnz
add
aad
xchg
sbb
pop
lahf
push
jge
das
lahf
ret
scas
jle
inc
cdq
test
in
jne
sbb
mov
xchg
or
cmp
dec
push
int
cs
jae
mov
loop
cwde
mov
add
or
test
mov
add
nop
push
xchg
xchg
ds
push
test
lahf
add
pop
inc
mov
ja
or
repnz
xor
inc
push
(bad)
jnp
js
ss
sub
popa
cmps
cmc
push
jecxz
or
push
cmps
mov
mov
(bad)
inc
adc
movs
sbb
mov
and
sub
movs
or
outs
inc
pop
push
jne
enter
loop
and
add
fisubr
test
aad
les
sbb
lods
sub
cld
jg
inc
lahf
add
inc
jmp
xchg
cwde
or
(bad)
frstor
arpl
adc
call
pop
mov
mov
imul
sub
dec
movs
pushf
dec
je
dec
lods
imul
scas
jl
adc
mov
inc
shl
mov
inc
or
cdq
cli
xchg
xchg
pop
sbb
hlt
sti
cmp
aaa
xor
xor
out
dec
mov
dec
pop
call
mov
sub
test
jbe
jns
icebp
xchg
jecxz
repz
adc
sbb
push
loope
inc
jne
adc
mov
int3
adc
in
add
dec
fs
(bad)
jmp
scas
adc
pop
adc
popf
cmc
mov
or
lea
lea
mov
mov
cwde
ins
leave
sti
mov
adc
mov
push
mov
jo
pop
push
add
outs
adc
add
fist
lods
add
int
cmps
rcr
fwait
sbb
mov
lahf
(bad)
out
fst
cwde
(bad)
test
sti
mov
and
ret
xchg
mov
inc
cmp
loop
adc
sbb
(bad)
cmp
dec
sbb
ja
xchg
xchg
repz
fwait
jo
dec
mov
out
movs
imul
sbb
out
and
call
daa
mov
xchg
pop
lock
mov
mov
(bad)
push
push
das
push
jecxz
mov
retf
mov
fild
cli
push
adc
nop
mov
int3
dec
pushf
sbb
pushw
push
cwde
xor
xor
pop
add
sbb
rcl
js
sub
lods
inc
pushf
dec
daa
mov
in
cld
adc
mov
pop
nop
mov
iretw
pop
fmul
xchg
jb
mul
jl
xchg
mul
out
xchg
(bad)
inc
mov
jns
lock
ret
pop
sub
inc
pusha
push
sub
ficomp
and
jmp
and
repnz
(bad)
sbb
and
jns
push
outs
lock
es
mov
repz
std
gs
and
sub
ins
aaa
pop
clc
test
ret
ret
pop
sahf
cmp
ficomp
jmp
daa
dec
push
in
adc
and
jecxz
lahf
pop
(bad)
mov
mov
lds
and
add
xchg
push
int
add
pop
mov
pop
mov
popa
out
mov
push
dec
jmp
sub
loopne
call
retf
(bad)
and
sti
xor
xor
loopne
mov
xor
mov
imul
sar
pop
mov
sbb
lds
add
mov
retf
or
jp
scas
jmp
rcl
lods
(bad)
sub
je
sbb
imul
cwde
mov
mov
sub
sub
outs
js
aaa
xor
pop
call
sbb
in
les
jns
dec
je
and
dec
mov
test
pop
imul
fsubr
adc
add
mov
push
or
mov
push
scas
xchg
xor
mov
dec
test
pop
les
cwde
mov
xor
or
mov
cmp
sbb
fwait
pop
sub
mov
pop
mov
xor
dec
lods
std
mov
loop
dec
in
inc
shl
(bad)
mov
imul
or
sbb
adc
ja
in
repnz
jg
sub
movs
mov
sahf
add
lahf
cld
sahf
call
frstor
daa
lahf
pop
pop
scas
jmp
dec
out
sub
shl
push
cwde
mov
hlt
dec
std
call
test
mov
scas
mov
sbb
mov
cld
add
inc
test
push
loop
test
sub
pop
mov
sub
(bad)
sbb
cmps
jg
clc
js
mov
and
mov
add
movs
mov
stos
(bad)
stos
cmps
adc
inc
xchg
dec
or
dec
jecxz
mov
xor
inc
test
out
(bad)
aam
arpl
pop
push
rcr
xchg
dec
ret
mov
jge
sti
jb
pop
sub
lahf
xchg
inc
push
push
test
fwait
sub
test
or
add
std
fwait
daa
inc
stos
push
sbb
aam
loop
ja
sbb
inc
pop
test
adc
sub
cwde
add
or
sbb
cmp
push
ja
into
push
arpl
or
inc
jg
movs
mov
(bad)
xchg
xor
mov
fisubr
or
mov
mov
push
xlat
out
adc
jg
xchg
es
cmp
ret
cdq
xor
lea
and
inc
imul
mov
pop
test
pop
jmp
fdivr
mov
aad
icebp
les
(bad)
in
lea
je
jb
add
lods
push
mov
lods
push
(bad)
loop
mov
cli
mov
test
add
mov
clc
cdq
mov
mov
icebp
fild
(bad)
adc
pslld
sub
repnz
add
or
dec
scas
stc
xchg
add
test
lea
jo
mov
xchg
out
pop
or
sub
cmps
(bad)
hlt
pop
push
mov
loop
lods
xchg
daa
ret
outs
xor
loope
fld1
adc
imul
push
mov
aad
mov
bound
jmp
test
std
mov
xchg
sub
js
cmc
push
fistp
adc
ins
shl
push
and
fbld
sub
bnd
repz
mov
neg
jmp
cmp
fisubr
sbb
pop
xor
xor
mov
test
retf
loope
sbb
loope
or
pop
cmp
hlt
lods
pusha
jle
out
sbb
push
dec
cmps
test
or
pop
rol
fbld
push
std
jmp
xchg
fild
adc
mov
js
and
adc
lea
push
(bad)
sbb
mov
jmp
test
imul
lock
stos
test
inc
xchg
jl
or
adc
sub
jmp
sub
retf
jmp
jo
mov
mov
cbw
outs
retf
stos
dec
xor
aas
shr
add
mov
mov
dec
xchg
iret
mov
push
mov
pop
cmc
sbb
shl
mov
xlat
cmc
lods
cmp
hlt
and
sub
inc
shl
mov
mov
and
jmp
loop
clc
sbb
cdq
xchg
xor
outs
jmp
sbb
(bad)
jbe
xchg
xor
shl
xor
pop
div
popa
push
aad
fidiv
or
add
cmps
xor
mov
dec
ss
mov
dec
or
ds
cld
xor
sti
and
lahf
scas
outs
inc
into
jmp
imul
mov
sti
data16
adc
lahf
dec
cmp
aas
sbb
sub
sbb
sbb
and
fcomp
and
daa
inc
pop
push
dec
scas
cmps
fidiv
shr
xor
cmp
push
inc
ret
pop
add
fucomp
(bad)
mov
push
jno
outs
aam
std
or
mov
stc
xchg
(bad)
xchg
cmp
sbb
aam
sti
sbb
pop
movs
hlt
lds
lods
xor
xor
mov
js
leave
sahf
movs
sub
lods
sub
sahf
inc
lahf
aas
dec
cwde
sti
es
mov
aaa
push
jne
jle
mov
mov
pop
scas
js
cwde
ret
jecxz
jo
or
sub
gs
dec
lods
aas
(bad)
dec
loopne
inc
mov
jne
add
aaa
mov
hlt
and
fucomi
pusha
xor
add
inc
push
int
imul
call
daa
mov
inc
or
sub
test
push
xchg
inc
sti
cdq
in
out
int
push
and
cwde
cmp
inc
jo
out
test
adc
push
int
xchg
out
mov
xlat
out
inc
mov
mov
dec
fs
aaa
sbb
movaps
popa
jmp
div
push
cdq
mov
aad
(bad)
stos
dec
(bad)
loopne
xor
pop
sub
xchg
sbb
in
(bad)
imul
call
dec
push
or
cmps
pusha
and
pusha
xor
and
fwait
push
push
cmc
adc
neg
sub
and
mov
rsqrtps
adc
enter
jb
dec
add
fucomp
jl
sar
dec
add
push
mov
dec
inc
mov
(bad)
mov
pushf
ret
sbb
repz
push
arpl
stos
mov
sbb
pusha
cmps
cmp
movs
jae
mov
dec
lea
pop
in
retf
clc
int3
inc
pop
std
icebp
jne
xlat
int3
push
inc
jg
jbe
jb
enter
js
sbb
mov
call
mov
mov
lock
inc
out
jp
repnz
pop
loope
sub
xchg
mov
fmul
nop
imul
adc
lahf
rcl
mov
inc
shl
add
ret
sbb
cmp
dec
das
push
and
in
scas
pop
rcl
sbb
or
outs
and
push
jns
(bad)
and
add
data16
push
ror
mov
imul
add
aas
ficomp
mov
mov
lds
xchg
sbb
mov
lea
pop
arpl
push
cmp
test
mov
stc
mov
into
pop
cmps
iret
add
cbw
data16
pusha
dec
int3
ret
cmp
inc
or
jb
or
das
mov
sbb
jle
cld
pushf
dec
and
mov
jb
cmp
add
or
(bad)
and
mov
and
test
cmps
adc
xchg
repnz
mov
dec
dec
add
add
sbb
(bad)
mov
xchg
push
push
mov
or
movs
int
(bad)
rcr
adc
shl
adc
jge
xchg
fimul
pop
stos
pop
dec
cmp
push
xor
cmp
cmp
cld
div
adc
or
movs
push
sar
dec
push
(bad)
aaa
dec
adc
arpl
mov
mov
and
inc
jo
xor
sub
mov
or
call
inc
pusha
sub
push
test
cmp
sbb
xchg
std
xor
and
mov
retf
cmp
add
push
in
inc
cld
pusha
push
mov
pop
scas
push
sbb
loopne
add
jge
and
aaa
pop
icebp
xor
bound
add
je
in
lock
and
std
push
xchg
xchg
je
and
rcr
xchg
movs
jl
lods
jecxz
shl
and
cdq
xor
call
xchg
add
pop
or
or
and
fs
jl
(bad)
mov
mov
push
fstp
adc
mov
mov
jo
mov
sub
and
or
adc
jecxz
sbb
jmp
inc
mov
iret
inc
push
push
daa
mov
repnz
clc
into
or
xchg
ins
mov
xor
push
jg
aaa
xlat
shl
adc
pop
pusha
xor
cmps
dec
pop
loopne
mov
adc
inc
and
jp
sub
mov
sbb
in
adc
jbe
xor
mov
lds
ret
push
pop
scas
mov
scas
mov
std
shr
sub
rol
push
add
mov
xchg
pop
arpl
xchg
adc
jno
shr
mov
inc
cmp
mov
in
daa
retf
mov
sbb
repnz
add
xchg
xchg
shl
nop
lods
aas
in
push
cmp
xchg
and
cmp
mov
adc
shl
shl
xor
idiv
frstpm(287
pop
or
pop
scas
gs
fistp
and
dec
(bad)
mov
ins
and
xor
test
call
cdq
mov
sub
movs
movs
xchg
in
jmp
ret
fcomp
dec
inc
sub
adc
in
movs
pop
dec
mov
xchg
or
popf
icebp
(bad)
retf
xchg
inc
cld
xchg
test
lods
dec
cmp
shl
ins
jp
iret
mov
and
jl
test
mov
imul
pop
les
jns
pop
xchg
push
jg
sub
lds
push
adc
int
je
jb
mov
je
pop
push
pop
push
imul
inc
fwait
cwde
xchg
leave
add
cmp
add
int3
dec
(bad)
sub
out
cmp
bound
sahf
loop
ret
cmp
leave
je
mov
inc
lock
jae
idiv
jle
or
jne
mov
(bad)
pop
test
pop
push
pop
and
or
and
push
mov
lock
mov
mov
mov
push
imul
jno
jmp
out
jbe
dec
bound
pop
in
mov
adc
or
jg
shr
mov
mov
stos
push
mov
aas
test
lock
or
out
ret
adc
jp
pop
xor
fisttp
jb
ds
stos
iret
ja
dec
ins
fisubr
cli
cmps
sbb
pop
icebp
ret
push
rol
outs
arpl
xor
jno
pushf
fsubr
stos
dec
push
dec
nop
push
loop
mov
jge
std
push
cdq
dec
xor
cmp
shr
cdq
mov
aaa
daa
stos
sub
imul
call
fwait
das
std
arpl
mov
jae
pop
pop
xchg
adc
cmc
cmp
dec
adc
leave
mov
movs
aam
jnp
lods
push
sbb
or
jnp
push
cli
and
xor
nop
in
mov
and
pop
in
popa
mov
xor
(bad)
ds
mov
pop
xor
shr
inc
jl
movs
xchg
ret
loopne
sbb
mov
inc
dec
cmp
clc
mov
out
add
int
inc
cmp
dec
or
cmps
pop
jnp
dec
pop
xor
clc
jg
scas
mov
enter
pop
dec
pusha
jbe
loopne
mov
dec
pop
repnz
mov
test
inc
jnp
data16
xor
push
out
in
stos
jo
ja
push
ror
data16
inc
jae
xor
out
fdivp
int
fadd
pop
mov
xor
sub
ret
cmp
add
out
dec
dec
pop
jp
(bad)
adc
push
mov
inc
adc
imul
clc
(bad)
imul
fist
shl
xor
in
cmp
xor
jmp
imul
pop
xlat
icebp
cmp
cwde
jnp
dec
js
pop
dec
je
push
inc
adc
inc
lock
stc
enter
push
mov
adc
pop
dec
loope
lods
je
or
mov
jp
and
mov
fs
dec
jo
repnz
(bad)
jmp
push
sbb
push
and
lods
shr
dec
inc
test
es
(bad)
cs
mov
enter
call
stos
and
lahf
mov
xchg
mov
int
sub
cmp
test
adc
lea
aas
xchg
sub
hlt
jae
es
jmp
pushf
mov
ss
ror
sahf
mov
hlt
(bad)
test
inc
inc
dec
dec
stos
or
rcl
into
ds
pop
mov
xchg
popa
lahf
sub
int
mov
into
movs
pusha
xchg
or
push
jb
ror
sbb
adc
les
mov
popf
icebp
pop
test
jnp
cmp
shl
pushf
adc
fwait
jl
dec
sub
pop
add
adc
fs
imul
inc
outs
dec
mov
int
repz
aam
(bad)
mov
jp
inc
mov
cmp
mov
sub
daa
clc
ficom
fcom
xor
pop
sahf
or
aaa
push
aaa
mov
push
jns
sbb
pop
fisubr
in
out
retf
xchg
int3
test
int
cdq
popa
push
mov
mov
adc
mov
sbb
xor
cli
pop
mov
or
and
inc
jb
ds
adc
outs
leave
in
xlat
jb
popf
iret
mov
add
pop
xchg
enter
call
jp
data16
cmps
lods
jo
mov
in
sub
ss
dec
(bad)
ja
fucomi
jl
nop
imul
loopne
mov
sbb
dec
sub
xchg
mov
sar
jmp
aam
cmc
add
and
outs
xor
mov
bnd
mov
cmp
or
imul
push
das
ja
mov
add
(bad)
cmps
cmc
pop
mov
sbb
jmp
stc
sub
popf
das
xor
je
cmc
adc
loop
in
xlat
mov
fbstp
jns
sub
into
adc
das
loope
in
in
daa
les
and
call
shr
sti
clc
das
xchg
pop
mov
adc
mov
sbb
push
data16
mov
int3
mov
add
xchg
jecxz
(bad)
xchg
jns
and
mov
add
bound
push
jmp
iret
push
daa
cmps
out
add
mov
daa
adc
jno
adc
retf
loop
add
mov
mov
gs
into
pop
sub
add
dec
dec
repz
lock
sbb
add
sbb
ins
mov
arpl
repnz
jbe
jge
shr
push
sub
div
or
inc
jl
clc
xor
les
leave
lock
and
sbb
cdq
mov
add
xor
pop
leave
(bad)
popf
mov
(bad)
arpl
movs
add
je
mov
or
xlat
or
xor
xor
mov
xchg
mov
imul
push
popf
scas
sub
inc
mov
into
repnz
js
pushf
cdq
mov
inc
and
adc
cmp
mov
xchg
shl
jecxz
outs
inc
fldenv
hlt
mov
inc
mov
in
mov
xor
bound
scas
mov
outs
jno
cmp
ja
scas
in
retf
pop
test
inc
divps
call
(bad)
push
repnz
imul
add
and
cmp
push
mov
xor
cmps
movs
pop
test
sub
xchg
inc
outs
ffreep
add
and
add
cmp
mov
inc
sti
dec
jle
test
imul
dec
jmp
and
(bad)
out
(bad)
int3
ja
sub
pop
cmp
pushf
mov
cs
pop
or
fsub
arpl
inc
push
adc
ss
jno
adc
jne
hlt
loop
mov
int3
cmc
push
sbb
nop
push
push
sahf
ja
(bad)
ror
cwde
popa
popa
pop
cmp
xor
cmc
cmp
push
cmp
xor
retf
jno
fmul
fadd
je
mov
jle
cmp
mov
sub
stos
or
das
outs
sbb
inc
ds
nop
mov
jle
shr
ret
fucomp
dec
adc
lea
cmp
aam
popa
jbe
jno
mov
mov
pushf
push
mov
xchg
sub
sub
mov
in
ds
dec
mov
fdivr
je
inc
or
dec
cmp
scas
in
cmp
neg
test
jne
imul
js
sbb
(bad)
mov
imul
xchg
adc
in
repz
push
(bad)
xor
test
adc
popa
retf
pusha
mov
dec
xchg
dec
inc
sbb
sbb
into
(bad)
sbb
mov
scas
(bad)
pop
out
jo
pop
das
or
cmovne
test
cdq
pop
lock
ins
popf
outs
sbb
and
stos
fldenv
ret
jmp
mov
and
sub
lods
cmp
data16
mov
xor
rcr
stos
push
retf
daa
push
lock
mov
mov
aaa
retf
int3
mov
inc
sbb
and
or
aad
jge
ret
mov
shl
push
mov
iret
stc
push
sahf
mov
adc
in
in
xchg
shr
test
mov
ror
xchg
sahf
dec
sbb
fisubr
(bad)
daa
fdiv
xor
in
xchg
loope
and
mov
jno
add
xchg
add
cmp
adc
std
mov
xor
or
jne
inc
jmp
pop
rol
das
mov
cli
pop
sub
(bad)
hlt
xor
ror
push
jno
(bad)
xor
pop
or
mov
test
clc
rcl
pop
mov
push
and
fadd
test
mov
xlat
push
sbb
fs
inc
and
pusha
ror
or
mov
dec
xlat
ffreep
xadd
dec
sub
test
push
sub
cld
imul
sbb
in
dec
adc
in
icebp
xchg
iret
mov
hlt
mov
stc
out
outs
xchg
imul
fwait
cmps
aam
mov
mov
sbb
or
sti
xor
mov
cmp
mov
inc
or
outs
add
push
cmp
cmc
dec
jge
loope
fstp
dec
pop
nop
jecxz
xor
adc
sub
cmp
cwde
dec
(bad)
mov
push
rcl
stos
add
adc
and
in
test
pop
lock
movs
and
xchg
pop
cmp
or
mov
popa
dec
push
push
inc
ins
inc
loope
adc
and
call
stos
mov
mov
addr16
xchg
mov
cli
ret
mov
or
inc
xor
scas
ret
in
(bad)
aam
pop
fwait
cs
js
lea
(bad)
mov
nop
or
aas
fist
mov
adc
pop
cmc
dec
lods
and
inc
jge
jecxz
jnp
shl
add
mov
call
loopne
mov
pop
dec
mov
jne
jge
push
inc
mov
sbb
mov
xchg
pop
pop
(bad)
fdivr
in
adc
mov
pop
jg
xlat
mov
shl
fisub
popf
(bad)
and
cmp
out
int3
mov
mov
push
std
push
cs
xor
mov
and
sbb
or
(bad)
int
jmp
adc
cmp
inc
add
es
and
dec
loope
daa
ficom
push
pop
stc
das
or
jbe
idiv
or
mov
mov
mov
push
xchg
push
sub
ss
mov
imul
xchg
sub
mov
les
out
aaa
cmp
jmp
jp
push
cmc
cmp
nop
inc
jb
lahf
dec
or
sbb
sub
nop
xor
int3
movs
inc
and
dec
js
cs
addr16
cmps
lds
jg
cs
movs
js
sbb
in
jp
mov
xchg
ret
or
jne
test
jnp
mov
outs
fs
push
iret
cmp
pushf
push
inc
icebp
push
sub
ret
out
mov
pop
or
hlt
cmp
mov
add
cld
(bad)
cmp
add
cmp
ja
nop
xlat
dec
mov
imul
cvtps2pd
loopne
inc
mov
jle
inc
push
sahf
rol
pop
call
dec
popf
jp
push
push
mov
xchg
movs
mov
rcl
outs
add
xchg
push
fadd
and
enter
fild
adc
das
add
shl
mov
out
call
fmul
xchg
mov
jle
scas
xor
cmp
add
push
ror
das
(bad)
icebp
mov
aam
sub
mov
dec
push
iret
cmp
xchg
xor
mov
adc
scas
pop
test
test
rol
adc
ins
and
fisubr
(bad)
daa
nop
ror
sbb
leave
mov
cld
add
jno
mov
push
out
pop
lock
fld
xor
rcr
out
out
sub
out
loop
icebp
dec
jno
(bad)
push
xchg
mov
out
int3
cmp
or
adc
into
dec
adc
add
and
jg
xor
inc
int3
pop
mov
and
(bad)
repnz
lods
(bad)
es
(bad)
jl
leave
xchg
pop
adc
cmp
shr
add
xor
loope
adc
test
cli
adc
inc
sti
enter
in
xchg
call
mov
hlt
xchg
push
data16
mov
pop
clc
das
sub
mov
pop
test
pushf
leave
xchg
cmp
cld
mov
dec
repz
out
xchg
mov
mov
ror
out
out
mov
aam
imul
mov
mov
and
repnz
mov
inc
dec
mov
out
leave
pop
fcom
xor
sti
ja
mov
pop
aam
call
in
mov
dec
cmp
adc
popa
inc
inc
cli
inc
in
push
loope
mov
add
adc
shr
je
ja
mov
xor
or
jae
push
pop
sbb
int3
stos
jno
xchg
xlat
cld
cmp
popf
or
stos
js
cmps
iret
int
aas
test
and
sbb
add
xchg
shl
cmp
pop
mov
loope
mov
scas
or
scas
hlt
outs
test
xchg
leave
enter
push
retf
sub
jecxz
ja
pop
adc
sbb
sub
cmp
cmp
inc
icebp
xchg
idiv
test
shl
cmp
shl
jg
jb
arpl
popf
xor
out
inc
xor
cmp
push
push
ins
push
dec
movs
add
(bad)
cli
fsub
mov
push
xchg
icebp
adc
(bad)
mov
into
std
sub
xchg
mov
pop
fcom
jnp
sub
mov
scas
xchg
jb
mov
xchg
out
pop
add
sbb
xchg
sub
int3
push
sub
mov
test
ss
jg
into
imul
jo
pop
loopne
xchg
mov
dec
lea
add
ret
popf
pop
jmp
dec
scas
sub
(bad)
mov
xchg
push
or
pop
mov
mov
sbb
test
and
lock
xchg
(bad)
std
in
and
cmp
dec
rol
dec
out
push
ret
mov
out
(bad)
xor
imul
test
es
rcl
push
mov
cdq
das
mov
test
mov
add
ss
dec
mov
out
les
cmp
cld
jae
pop
pop
push
sbb
push
pop
add
mov
scas
pop
lds
push
push
and
and
mov
inc
aaa
in
aam
ret
add
fistp
push
mov
mov
sbb
jne
dec
cmp
fst
pusha
sti
mov
mov
xchg
je
cdq
cmps
cld
push
les
cs
das
cmps
lods
mov
pop
mov
or
mov
fwait
nop
fcomp
dec
mov
ins
popf
and
sbb
inc
mov
or
scas
or
into
or
sub
fcmovnu
in
pop
push
sti
(bad)
xor
fadd
sub
fcmovu
aaa
cmp
and
adc
push
ja
or
sti
xchg
stos
jnp
mov
pushf
pop
mov
mov
sbb
add
aad
cmp
add
in
lods
push
sub
push
push
gs
push
pop
xchg
aad
outs
outs
mov
adc
ja
retf
retf
(bad)
fnstcw
ins
ds
pop
push
cmp
lods
cwde
ins
push
stos
and
or
shl
adc
jae
test
mov
in
mov
ret
push
mov
xlat
jmp
xchg
dec
scas
dec
jbe
call
jp
inc
push
push
(bad)
gs
jnp
retf
shl
push
vsqrtsd
jl
push
cmps
fistp
jnp
popa
mov
addr16
test
fs
and
pop
pushf
adc
dec
push
mov
cmp
xchg
mov
jo
aas
add
jmp
out
mov
inc
pushf
or
icebp
add
shl
enter
jl
call
pop
fs
pusha
pop
adc
mov
add
loope
dec
mov
sub
fs
xchg
repz
mov
push
sahf
leave
je
or
test
jns
aas
cdq
daa
xchg
lar
jecxz
pusha
xor
retf
hlt
pop
or
inc
in
clc
mov
jne
ds
(bad)
pop
sbb
sar
ja
cdq
les
(bad)
sbb
int
cmp
jno
inc
es
pop
pop
xor
mov
mov
pop
ss
inc
into
inc
jmp
lods
lds
pop
adc
in
clc
scas
pop
nop
iret
(bad)
fadd
bound
dec
sbb
cmp
call
ds
icebp
movs
mov
jnp
clc
ss
mov
jb
pop
mov
or
and
sbb
out
neg
imul
xchg
fstp
mov
jnp
jecxz
mov
je
sti
movs
pop
in
push
shr
inc
test
dec
(bad)
call
cmp
pusha
jl
inc
mov
xor
and
ins
pop
or
retf
js
in
jb
and
retf
mov
aam
sar
xlat
pushf
repz
xchg
inc
mov
fwait
pushf
fild
retf
or
push
clc
inc
inc
sbb
lods
jmp
xchg
cmp
dec
in
repnz
and
jl
pusha
mov
das
sbb
cmps
call
test
or
(bad)
or
push
jo
dec
xchg
jp
lock
int
and
out
mov
pop
iret
mov
push
sbb
and
push
xor
sub
push
or
xlat
or
mov
mov
int
mov
in
lods
sbb
pushf
or
movs
jb
inc
or
sti
jbe
mov
cmp
add
cmp
sbb
xor
or
fstp
in
jge
mov
xchg
cmps
adc
xchg
retf
pop
scas
es
xchg
add
adc
hlt
cdq
icebp
sub
jg
adc
pop
into
jo
or
sbb
out
xchg
adc
sbb
fwait
add
mov
mov
sahf
fisttp
cli
sbb
push
and
jmp
shr
xor
add
leave
cmp
pop
or
jmp
icebp
neg
das
xor
cmp
std
mov
sub
scas
imul
aam
das
jno
ss
mov
ret
(bad)
int
stc
ror
mov
add
std
scas
xlat
fadd
and
cwde
pxor
mov
jo
push
cmp
lds
adc
out
stc
sbb
push
xor
dec
popf
scas
cmp
mov
mov
push
test
dec
sub
or
sub
xchg
out
aam
add
js
xchg
pop
call
aaa
imul
call
cmp
loop
out
aam
inc
push
pop
lahf
out
movs
adc
icebp
outs
jno
loope
jae
mul
dec
jp
xchg
mov
mov
pop
(bad)
jge
or
scas
test
ja
call
mov
xlat
imul
hlt
push
fucom
leave
mov
inc
push
sahf
or
inc
add
std
nop
jb
add
jle
xchg
fist
cmc
jmp
pop
push
(bad)
stos
nop
and
inc
ins
(bad)
cmp
stos
jle
jbe
jnp
push
lahf
cmp
sub
mov
ror
xor
xchg
fisubr
cdq
or
ss
cmp
sbb
sub
mov
(bad)
into
and
push
jns
pusha
sub
push
test
jo
push
outs
or
and
lods
icebp
neg
mov
mov
shl
repnz
xchg
add
or
adc
or
dec
sub
inc
popf
je
sub
and
push
rcr
mov
add
scas
mov
jp
push
outs
repnz
pop
xor
movs
and
sub
inc
call
jne
pop
mov
push
(bad)
sar
xchg
outs
cmps
mov
mov
in
push
mov
loope
in
cli
jl
mov
jecxz
mov
sub
out
or
ins
jge
jge
sub
cmps
push
push
stos
in
mov
add
frstor
cmc
xor
dec
cmc
cmp
cmps
xchg
and
inc
or
mov
fld
in
jp
sbb
test
mov
xchg
cmps
movs
loopne
mov
xchg
fnstcw
aaa
sbb
mov
(bad)
fadd
dec
mov
repnz
out
in
push
shl
jp
popf
mov
scas
push
fcmovnb
jns
cmp
inc
es
aad
jl
leave
jl
test
or
and
repnz
fcom
sub
jl
mov
jbe
clc
pop
pop
mov
test
mov
popa
inc
cmp
jmp
push
dec
fist
cmp
push
mov
mov
in
jecxz
cmps
push
rol
adc
and
cs
mov
and
jge
and
jb
sbb
test
iret
icebp
lods
xlat
mov
fxch
inc
loope
sub
ret
xor
in
and
fstp
add
aad
loop
cmp
mov
or
(bad)
push
test
loop
stc
(bad)
aad
mov
(bad)
int
int
imul
outs
sub
adc
inc
cmp
cmps
jp
lea
xor
mov
stc
xchg
ret
pop
retf
(bad)
add
into
push
xlat
outs
addr16
cmps
or
(bad)
dec
fst
rol
pop
pop
inc
cmp
fs
xor
cmp
int
aaa
aaa
add
fsubrp
addr16
cmp
sub
loop
and
mov
out
aaa
pop
pop
cmps
pop
adc
xor
jbe
or
xlat
lea
addr16
jno
dec
sbb
imul
je
jecxz
outs
aaa
ror
imul
lds
adc
pusha
in
pop
(bad)
adc
fwait
cmp
add
in
js
push
fld
inc
adc
ffreep
pop
push
dec
push
ins
fwait
popf
inc
mov
xor
add
scas
arpl
rcr
mov
cmp
test
xchg
inc
push
push
sbb
adc
dec
inc
jle
aam
out
scas
mov
xchg
mov
and
lea
ss
rcl
cmp
adc
push
dec
inc
test
(bad)
scas
mov
repnz
stos
xchg
cmps
pop
imul
popa
frndint
(bad)
jmp
cmps
xor
aam
pop
cli
scas
fstp
sar
lods
nop
stos
xor
cwde
retf
xchg
mov
test
call
mov
and
jecxz
pop
movs
stos
mov
cmp
fdivr
push
(bad)
and
or
repnz
push
fdivr
and
push
aad
repnz
xrelease
nop
dec
cli
jnp
cmp
arpl
jne
xor
fstp
in
push
inc
aad
dec
push
dec
into
in
and
xchg
cdq
fs
mov
stc
popf
inc
mov
mov
adc
inc
jno
jmp
mov
stc
cmp
clc
(bad)
sti
inc
pop
daa
push
jnp
dec
gs
dec
rcr
jg
aad
rcl
add
mov
sbb
test
fs
pop
in
mov
outs
outs
jae
ror
jecxz
sub
daa
scas
push
gs
mov
int3
call
pop
ss
xchg
aas
mov
call
xor
in
pop
(bad)
loope
lods
push
inc
dec
push
mov
push
aas
sub
into
jle
out
mov
imul
mov
leave
inc
(bad)
out
push
or
out
adc
cs
shl
xchg
dec
repnz
pop
pop
sbb
movs
adc
or
adc
xchg
cmp
mov
and
xor
daa
xor
or
aad
shl
fist
stc
retf
cmp
outs
push
push
add
and
jmp
mov
into
inc
mov
mov
xchg
xchg
mov
test
jb
dec
sub
mov
ss
mov
dec
jg
les
outs
jmp
js
lahf
scas
mov
adc
enter
add
test
push
ins
sbb
bound
push
adc
cmps
dec
push
sub
xlat
push
adc
cli
test
sbb
mov
xor
mov
lahf
mov
push
sbb
push
repnz
pop
cmc
pop
imul
mov
inc
call
mov
adc
stc
mov
cld
pusha
dec
xchg
cs
dec
std
sti
adc
test
add
push
jmp
pop
nop
cmp
leave
mov
or
clc
jmp
sub
inc
movs
inc
adc
mov
rcl
jl
inc
pop
dec
(bad)
neg
sbb
out
inc
ret
mov
mov
add
je
jmp
xor
xchg
hlt
jg
test
and
imul
movs
loop
aam
dec
daa
iret
mov
inc
es
loope
xchg
sbb
ficom
(bad)
out
sub
jo
ja
popf
sti
lods
xchg
enter
lahf
mov
ror
lea
xor
mov
inc
add
and
xor
enter
ret
movs
add
xor
inc
or
and
add
(bad)
fisttp
adc
mov
xchg
xchg
inc
add
sbb
repz
dec
pop
arpl
push
mov
mov
ja
sbb
out
sti
mov
shl
mov
sub
jmp
mov
(bad)
sub
call
add
(bad)
retf
sub
sbb
(bad)
xor
push
jo
mov
shl
fisttp
mov
dec
mov
xlat
ins
lds
dec
sbb
mov
cmp
popf
mov
sbb
or
sahf
lock
push
test
xchg
nop
add
push
jle
cdq
test
inc
push
movs
es
cmp
pop
dec
add
lea
ret
sub
ds
fcmovb
sbb
push
xor
movs
mov
inc
inc
xlat
mov
cmp
dec
into
push
leave
xchg
sub
cld
and
or
pop
inc
scas
loopne
retf
mov
sti
sar
xchg
sub
pop
adc
and
sbb
pop
pop
xor
xlat
cmp
fadd
fcom
rol
jno
mov
inc
lods
je
outs
out
sbb
stos
test
lds
ss
popf
xchg
in
cs
sub
sti
adc
mov
lea
dec
mov
pusha
mov
jo
xchg
push
adc
adc
dec
or
cld
lea
sbb
inc
or
xor
(bad)
mov
ror
jp
pop
sub
loope
imul
in
push
jl
popa
icebp
fidivr
jg
push
movs
cmp
arpl
xor
pop
outs
inc
cli
xchg
sbb
sbb
pop
sbb
push
gs
adc
retf
mov
loopne
xor
das
xchg
jl
aas
sbb
add
and
mov
ja
or
addr16
call
add
int3
jg
leave
and
shl
mov
push
loopne
mov
and
mov
mov
sub
movs
push
bound
and
imul
pop
fsub
push
ins
mov
retf
movs
imul
jle
mov
adc
jmp
lods
rcr
mov
pop
je
rcr
fwait
and
int3
movs
cld
adc
leave
int3
(bad)
int3
push
hlt
in
mov
mov
jecxz
in
pop
mov
xor
test
xchg
jge
xchg
mov
sub
(bad)
mov
adc
mov
sub
gs
or
imul
sbb
jle
adc
cmp
cli
aaa
sbb
gs
mov
cli
sub
es
mov
jb
shr
das
dec
push
(bad)
and
in
sbb
mov
pop
jbe
lds
pop
lock
fs
aam
aaa
repz
fld
scas
push
pushf
inc
add
pop
mov
push
adc
arpl
push
or
xor
adc
icebp
hlt
out
and
and
hlt
and
xchg
or
jb
sub
fld
push
adc
mul
xor
sub
pop
pop
mov
cmp
mov
mov
dec
out
test
int3
push
cdq
fadd
fidivr
sub
xchg
mov
daa
sbb
in
mov
aam
jo
add
ror
cmp
jo
fcom
mov
scas
xchg
sti
jbe
lds
sub
in
repnz
imul
loop
mov
cmp
aam
push
std
mov
add
fisub
jmp
mov
push
fucom
pop
ffreep
ins
hlt
mov
sbb
(bad)
bnd
mov
xchg
neg
(bad)
cwde
push
out
(bad)
inc
mov
scas
xor
mov
dec
pop
sbb
adc
push
dec
ror
push
sbb
mov
xchg
or
mov
xchg
scas
pop
push
push
or
test
ret
adc
popf
pop
push
cmps
mov
in
mov
sbb
movs
pop
lock
mov
movs
daa
aad
sahf
outs
add
call
into
xor
mov
pop
pushf
inc
fadd
mov
and
fwait
jne
sbb
test
outs
ficom
jecxz
test
ror
jmp
xchg
rol
int3
popf
sub
mov
mov
push
or
xor
rcr
adc
dec
das
push
rol
and
lods
jae
jb
mov
or
xor
pop
imul
sbb
or
scas
arpl
or
mov
fcom
xor
or
daa
xor
loopne
cmp
mov
sub
push
inc
fwait
pop
std
adc
mov
data16
pop
adc
lea
add
or
lods
pop
imul
call
mov
jae
pop
or
sbb
inc
inc
fxch
add
les
push
stos
sub
inc
int3
iret
mov
mov
jne
push
xchg
aad
ins
push
jbe
xor
fisttp
mov
push
pop
mov
mov
xchg
mov
sahf
test
dec
sbb
and
adc
inc
xchg
bnd
sysenter
cmp
xor
and
mov
out
out
mov
jge
mov
ret
test
(bad)
jbe
lds
pop
ror
adc
jecxz
shr
sub
sbb
cmp
adc
sbb
mov
mov
mov
mov
popa
sbb
push
ret
aam
test
adc
retf
mov
outs
mov
sub
pop
aas
jge
dec
adc
int3
in
pop
push
movs
shr
imul
jae
mov
dec
jge
(bad)
(bad)
sub
test
cld
inc
sbb
xchg
ret
sahf
ror
or
push
(bad)
sti
mov
loopne
test
jb
popf
(bad)
inc
ret
adc
push
jbe
jmp
push
dec
adc
shl
clc
jnp
(bad)
xchg
cmp
or
cs
test
xchg
ror
mov
sbb
outs
fisttp
stc
out
inc
pop
dec
popa
aas
xor
stc
(bad)
inc
lock
mov
je
js
les
jecxz
call
pop
dec
mov
push
cmps
jge
jmp
and
jg
jbe
xchg
int
pop
fsub
mov
fcos
imul
(bad)
jmp
mov
xchg
std
jmp
cmp
add
jge
je
or
icebp
bound
adc
jl
push
scas
push
mov
mov
pop
or
mov
das
inc
cmp
clc
push
xor
inc
int
jle
(bad)
neg
jb
xor
jmp
inc
cmp
repnz
inc
jmp
or
push
inc
xor
out
adc
out
icebp
outs
xchg
mov
jp
cmps
outs
and
mov
or
pop
fstp
cmp
das
mov
sub
ret
imul
jmp
push
cmp
sbb
cmps
out
(bad)
jle
jecxz
pop
(bad)
mov
imul
sbb
stc
adc
jae
pop
or
sbb
cs
xchg
(bad)
icebp
xchg
and
push
icebp
mov
test
xor
(bad)
(bad)
out
xchg
jno
cmp
push
daa
dec
or
inc
das
push
int3
push
or
(bad)
push
shr
ret
retf
xchg
enter
loopne
in
adc
outs
jmp
repnz
(bad)
es
or
(bad)
pop
jnp
pop
cmp
sti
push
shr
ret
arpl
shl
(bad)
ins
(bad)
aad
mov
xor
xor
xor
push
pusha
pop
hlt
(bad)
cmps
jmp
or
mov
sub
stos
fcom
scas
sbb
xor
das
cmp
xchg
push
sbb
pop
sub
mov
les
dec
mov
sbb
fwait
pop
int
pop
push
jno
test
in
out
jae
mov
(bad)
push
int3
jbe
inc
sbb
out
cli
sahf
in
sub
imul
ret
inc
pusha
aaa
lods
mov
lea
adc
(bad)
call
fadd
into
jae
shr
jmp
push
mov
sub
sub
in
aaa
add
fidivr
lods
mov
mov
inc
xchg
scas
lods
cmp
fwait
iret
mov
fdivr
cmp
iret
add
inc
dec
push
and
and
ror
mov
mov
mov
push
gs
(bad)
adc
imul
push
push
into
xor
inc
nop
inc
pusha
xadd
push
test
dec
adc
cli
sub
adc
cmps
mov
dec
add
xor
push
jbe
fs
sub
adc
dec
(bad)
nop
add
(bad)
add
imul
mov
mov
call
adc
js
imul
and
mov
jle
dec
fbld
jge
adc
add
adc
jmp
jae
mov
sub
sbb
loope
out
inc
call
ret
sub
jmp
loope
sbb
daa
iret
inc
and
dec
cmp
push
call
movs
dec
mov
mov
outs
mov
aas
xor
aad
dec
out
dec
or
fimul
xor
push
adc
pop
jge
inc
mov
xor
sar
jge
fcom
aas
ror
retf
dec
test
mov
pop
lock
das
es
mov
call
clc
into
jne
jnp
(bad)
out
and
pop
inc
mov
sbb
cdq
adc
sbb
push
(bad)
mov
out
dec
cmp
adc
push
or
lods
loope
xchg
fmul
pop
lods
dec
push
mov
mov
cmps
sbb
dec
fcos
jbe
pop
fld
int
cmp
aaa
add
gs
cmp
call
and
jmp
adc
mov
and
out
sahf
xchg
movs
aam
sbb
mov
jmp
push
sti
push
ds
pop
push
cmp
sbb
xchg
fcmovnu
push
fs
js
dec
mov
stos
arpl
xlat
push
mov
cmp
inc
sbb
mov
sahf
or
and
sbb
in
repz
(bad)
push
mov
cld
sub
mov
sub
xchg
xchg
sub
or
add
lods
jl
pop
mov
add
loopne
in
push
or
mov
outs
(bad)
jbe
mov
xor
sbb
pop
xchg
or
or
mov
mov
ret
mov
jns
test
xchg
out
and
jg
fmul
je
nop
mov
and
shl
hlt
movs
jno
test
dec
int
out
inc
jge
fld
inc
jecxz
pop
xlat
mov
jnp
stos
inc
sbb
and
xor
test
cmp
jle
std
aaa
inc
mov
call
adc
shr
int3
pop
mov
sar
sbb
add
ja
jo
das
test
and
mov
loope
outs
fidivr
adc
ins
cmp
popw
fsubr
fdivr
jp
out
daa
pusha
mulps
popa
jb
enter
cld
das
xor
(bad)
push
mov
pusha
cdq
jecxz
inc
jle
jle
xchg
jnp
jge
shl
or
inc
cmps
and
push
mov
fdiv
loopne
add
pop
inc
push
mov
xor
lea
aas
idiv
mov
aas
push
sub
cmp
call
retf
cli
int3
adc
sbb
cdq
rol
add
sub
shr
lods
rol
inc
inc
xchg
pop
add
adc
pop
mov
lds
mov
jmp
arpl
ficom
cmps
sub
aaa
inc
push
xor
cmp
pusha
adc
aad
xor
sub
adc
push
es
pusha
daa
xchg
jbe
xor
movs
retf
inc
sbb
aas
cwde
pop
sub
push
inc
adc
push
cmp
and
mov
jge
inc
jle
sub
ret
jb
inc
sbb
push
mov
or
pop
loope
cmp
sbb
ja
adc
push
dec
lods
pop
jo
rcl
xor
mov
jbe
mov
aad
(bad)
xchg
in
imul
cmp
js
loop
dec
retf
fild
adc
push
pop
xor
pop
jl
call
add
mov
into
in
cmp
jae
adc
and
in
cli
pop
ins
aaa
and
xor
aas
inc
loope
push
mov
cmp
into
sbb
jmp
ficom
mov
shl
add
loop
test
push
xchg
retf
fistp
push
jno
das
adc
loope
mul
mov
popa
cmp
mov
or
movs
mov
push
xchg
xor
mov
pop
jno
dec
lock
cs
mov
push
loope
mov
mov
neg
mov
adc
adc
inc
jb
scas
jno
push
ja
iret
(bad)
ds
mov
cmp
scas
inc
xchg
push
sub
ret
jno
xor
adc
mov
sar
xchg
cmp
jl
cwde
inc
ret
jmp
or
ror
mov
lods
ja
movs
or
and
inc
pusha
ror
cld
dec
loopne
or
js
aas
popa
(bad)
xor
int
push
sbb
push
test
mov
in
(bad)
dec
or
pop
jne
and
fisubr
lods
repz
ja
adc
fild
add
test
adc
mov
ins
mul
add
add
or
cdq
xlat
add
stc
into
ret
int3
into
mov
mov
pop
leave
xchg
lock
xlat
ja
stos
fadd
dec
mov
xchg
shr
fldcw
loope
(bad)
into
das
out
enter
shr
push
aas
dec
fwait
dec
popa
cwde
fdivr
lods
mov
and
cmp
arpl
xor
loopne
ins
mov
cmp
add
loopne
add
cmps
(bad)
ret
sti
and
sub
jge
dec
sbb
hlt
frstor
add
pop
imul
mov
sub
and
clc
adc
mov
adc
and
and
push
shl
arpl
aam
or
or
mov
cs
bound
jmp
out
aad
xor
xchg
mov
push
ret
xchg
mov
push
jae
int3
fdivr
cmp
pop
add
push
arpl
call
and
dec
fs
imul
jg
lahf
je
hlt
jle
mov
shl
sub
sub
pushf
sub
fwait
mov
xor
pop
sub
ret
xor
xor
ret
jmp
inc
xchg
lock
jns
daa
pop
xor
shl
out
sbb
or
jns
jne
mov
mov
enter
mov
mov
div
mov
int3
pop
ja
cmp
xor
add
add
push
push
and
(bad)
jg
adc
mov
out
add
xchg
nop
cmp
push
div
sbb
fiadd
call
test
lahf
sub
ret
aaa
sbb
mov
cmp
shl
in
outs
mov
test
inc
sbb
inc
out
pop
add
enter
xchg
repz
call
cmp
pop
mov
push
out
jnp
jmp
aaa
dec
mov
stos
jb
xchg
scas
xchg
pop
mov
cs
xor
inc
and
push
mov
cmp
es
xchg
xchg
movs
pop
mov
das
inc
clc
sar
fs
mov
rcl
(bad)
cld
(bad)
add
bound
js
jp
cmps
xchg
inc
outs
aas
xor
imul
jg
leave
ret
stos
sub
test
std
into
or
sub
ins
mov
adc
or
ret
add
mov
fwait
imul
rcr
xchg
fsubr
cmc
popf
js
aam
sbb
jl
test
push
sbb
gs
jbe
sub
mov
mov
pop
cmps
fwait
repnz
jmp
jge
data16
arpl
or
sub
cmp
ficom
cli
dec
mov
jb
stos
mov
pop
and
dec
(bad)
stos
inc
xchg
fcmovb
ds
or
and
dec
in
aad
or
dec
add
call
sub
bound
mov
call
add
fucomip
movs
xchg
push
jle
call
cmp
sbb
iret
push
jae
pop
and
xlat
mov
or
sbb
mov
pushf
inc
jbe
stc
xchg
inc
jnp
imul
ret
mov
jne
repnz
test
mov
mov
or
lea
or
cmp
dec
imul
nop
pop
test
mov
mov
in
mov
aad
adc
add
aas
or
sahf
jl
mov
xchg
inc
sbb
rol
mov
jge
cmp
push
out
and
out
dec
dec
call
js
push
xchg
ins
shl
mov
test
sbb
jb
pop
jbe
mov
push
pop
test
inc
fisttp
test
push
push
pop
sbb
add
movaps
or
jno
jmp
pop
jl
pop
jge
out
sub
fisub
xor
dec
mov
mov
xchg
loope
xor
movs
in
jmp
dec
push
push
xor
test
sub
sub
shl
inc
and
jns
aaa
dec
sbb
es
and
retf
cmp
mov
dec
cmp
sbb
mov
scas
jb
enter
mov
xchg
cs
les
or
cdq
and
dec
loope
xor
es
js
pop
outs
cwde
and
(bad)
cmp
call
rol
fnstcw
adc
cdq
out
leave
add
ret
dec
shl
movs
mov
dec
shl
cdq
push
or
and
aas
int3
data16
add
push
int3
push
or
into
jae
aad
in
inc
inc
fcomp
add
and
or
repnz
xchg
pop
pop
cmp
test
mov
jo
push
loope
loope
push
test
lahf
cmp
jo
lods
mov
push
dec
add
and
hlt
pusha
retf
jl
mov
xchg
lahf
adc
cli
test
dec
repz
js
mov
lods
mov
stc
mov
aaa
leave
jl
mov
push
fcom
ret
mov
push
mov
out
xchg
push
or
cs
lods
imul
call
mov
xchg
ror
popa
sbb
loope
and
mov
loopne
mov
pushf
jb
int3
stos
mov
cmp
call
enter
nop
in
es
jnp
bound
pop
pop
rcr
jecxz
xor
sub
hlt
push
xchg
enter
out
inc
lock
mov
mov
sbb
mov
jno
and
sub
mov
sbb
lock
scas
int3
cli
sbb
cmp
mov
jmp
cmp
xor
push
mov
fistp
inc
adc
mov
push
add
pushf
mov
adc
jle
dec
mov
gs
inc
sbb
add
out
jae
repnz
clc
cmp
sbb
shl
int3
(bad)
xor
test
test
movs
cmp
or
or
aas
scas
in
sti
neg
loop
bound
pop
jge
xor
inc
jle
into
aad
les
ror
xor
das
repz
iret
sahf
adc
adc
and
mov
fwait
outs
(bad)
or
push
ret
mov
push
push
fld
(bad)
test
outs
jnp
aam
fcom
add
xor
jae
(bad)
out
cwde
xchg
idiv
sbb
repnz
pop
das
ds
push
add
fwait
aaa
fs
pop
sbb
sub
out
push
sub
and
ret
pop
xor
add
in
loopne
aas
mov
in
inc
inc
mov
jno
(bad)
mov
ins
mov
test
sbb
mov
jle
push
xor
movs
aam
jno
mov
mov
ret
mov
or
push
addr16
add
fstp
iret
sbb
xchg
fs
add
add
cmp
jne
pop
inc
lds
call
sbb
arpl
fsub
fbld
cmp
sbb
adc
jne
ds
sub
pop
and
lds
sub
cmp
and
sbb
aad
inc
mov
mov
dec
sub
clc
cli
sub
mov
jne
mov
mov
jo
adc
out
or
jge
stos
stos
rcl
inc
out
add
mov
(bad)
jmp
fsubr
xor
shr
outs
cld
loope
mov
xor
in
not
ja
ret
cmp
sahf
arpl
cmp
xor
retfw
dec
or
cmp
stos
push
inc
rol
cmps
pop
sub
xchg
addr16
fsubr
hlt
inc
and
aad
cmp
pop
xor
and
retf
mov
in
adc
icebp
xchg
fs
and
lea
adc
(bad)
jo
or
xchg
std
xor
push
or
or
push
int
jb
jbe
(bad)
xlat
lahf
cs
jle
and
cmps
inc
pop
mov
xchg
and
add
jg
adc
lahf
lahf
lock
outs
xor
mov
imul
xchg
jno
xor
(bad)
fist
ins
out
lock
xor
lods
ss
outs
mov
jnp
dec
stos
pop
ret
fidiv
ins
and
int
jecxz
outs
xchg
fs
in
fstp
dec
stos
cmp
or
inc
into
in
popf
aas
retf
lahf
xor
inc
cmp
xchg
cmps
inc
and
xchg
lock
adc
pop
lods
jo
ret
sbb
or
xchg
div
adc
cmp
adc
mov
ins
loopne
ret
test
shl
je
xor
ins
adc
mov
lods
inc
pop
repnz
retf
idiv
aaa
push
cmps
xor
sub
push
dec
dec
hlt
outs
and
repz
out
xlat
xor
test
inc
aaa
push
pop
cwde
push
or
imul
into
inc
and
mov
dec
ins
jg
sbb
loope
push
add
add
ins
(bad)
jg
sub
fidivr
mov
pop
jns
sbb
mov
mov
jp
fidiv
fisub
jmp
mov
xchg
mov
out
cdq
clc
imul
add
jmp
jae
fld
xchg
jl
add
test
enter
call
push
push
mov
dec
mov
daa
sub
call
mov
ror
mov
sbb
push
cmc
xor
mov
mov
fild
inc
push
mov
xlat
and
aam
mov
ins
gs
shl
jbe
push
je
cmc
push
fld
pop
mov
jecxz
push
aaa
ror
in
push
xchg
mov
out
dec
push
and
ds
jecxz
gs
add
nop
cmps
dec
pop
sahf
mov
scas
xchg
mov
addr16
scas
dec
loop
das
stc
adc
test
loop
push
pop
stc
sub
cmp
sbb
(bad)
adc
(bad)
push
in
test
popf
mov
xor
loopne
call
loope
cmp
lods
mov
or
mov
scas
mov
hlt
in
mov
or
gs
cmp
ja
in
xor
pop
inc
popa
cli
xor
lods
push
xchg
mov
lahf
or
lea
iret
inc
lahf
add
mov
loop
pop
dec
icebp
jns
call
std
dec
pop
mov
jmp
mov
or
call
fwait
mov
and
push
outs
jge
and
inc
adc
call
dec
frstor
push
xor
ret
imul
lods
inc
sar
je
fiadd
(bad)
push
mov
(bad)
mov
pop
fxch
push
lods
cld
call
call
mov
pop
arpl
adc
imul
sub
(bad)
repz
jmp
fs
aad
jmp
cmps
jecxz
xor
push
jecxz
call
js
push
lea
lods
pop
out
jnp
sar
aas
xor
dec
xor
shl
js
movs
les
inc
int3
ret
mov
or
adc
cmp
addr16
xor
mov
xor
xor
sub
sub
es
ror
loop
dec
and
mov
mov
dec
int
adc
push
scas
into
cmc
iret
push
int3
sub
xchg
adc
push
outs
mov
xchg
cmp
out
fild
(bad)
stos
push
pop
jmp
xchg
push
ficomp
xchg
movs
fdiv
aaa
and
or
pop
jle
mov
or
jnp
daa
out
data16
call
sbb
and
mov
xor
xor
ins
push
cmps
ins
and
xchg
iret
test
sti
mov
add
xchg
ret
xor
loopne
sbb
fst
push
add
mov
loop
bnd
mov
int
mov
cdq
add
das
mov
adc
add
sahf
sbb
mov
xor
lea
and
xchg
lahf
stc
sub
sbb
shr
mov
xor
(bad)
stc
jmp
stc
test
and
cmp
std
test
cwde
mov
pop
pop
pop
sub
inc
cmps
jnp
mov
les
test
lds
(bad)
pop
sub
fnstcw
lock
xor
push
jg
sbb
lds
cmp
pop
inc
jbe
push
mov
xchg
mov
jp
(bad)
jmp
jle
adc
repz
xor
test
bound
xor
scas
es
stos
or
not
or
movs
inc
and
jmp
mov
cmp
jge
pop
nop
(bad)
adc
cmp
mov
mov
jecxz
mov
and
test
shl
movs
enter
sub
push
inc
jecxz
xor
loope
xchg
pop
fs
aam
movs
test
fdivrp
fld
inc
fisub
sbb
adc
imul
or
dec
add
fnstenv
mov
sub
mov
xchg
out
retf
cmc
mov
mov
adc
jbe
dec
mov
in
fs
xchg
and
add
jb
and
xchg
xor
and
mov
imul
cwde
cs
and
outs
retf
fsubr
stos
out
hlt
mov
cdq
or
in
and
sub
iret
imul
fnsave
bndstx
inc
pop
shr
mov
push
arpl
add
and
loopne
inc
mov
dec
xchg
pusha
ss
ins
mov
cmp
mov
sub
fs
in
sub
dec
loope
mov
int
jle
add
adc
add
jge
push
sub
pop
xchg
pop
xchg
or
cmp
push
in
test
mov
popf
adc
call
mov
je
test
jno
adc
pusha
push
mov
pop
das
cmps
lods
outs
or
pushw
popa
ja
mov
sbb
push
mov
mov
(bad)
fsubr
or
sbb
adc
push
dec
ds
cmp
pop
div
cld
sub
adc
std
ficom
enter
mov
test
jbe
idiv
lds
push
aam
mov
lds
xchg
cwde
inc
mul
add
xchg
add
and
enter
shr
dec
jns
pop
cmp
std
ds
mov
inc
jmp
test
or
lahf
rol
xchg
add
test
push
dec
jns
cmp
inc
movs
mov
and
fcomi
icebp
sub
xchg
pop
add
xchg
ret
and
xchg
pop
lds
jl
mov
les
sbb
cdq
stos
daa
ret
(bad)
pop
mov
es
jno
push
and
jne
and
pop
xor
fdivr
cld
les
push
fwait
lds
rcl
add
xchg
sets
mov
fidiv
sub
pop
movs
pop
les
jbe
xchg
dec
jmp
fs
push
mov
gs
cmc
push
sub
inc
or
addr16
data16
pop
sub
std
loop
sub
test
push
ds
or
fist
es
ror
inc
rol
fcom
or
mov
shl
outs
in
inc
cmc
jle
dec
lock
addr16
mov
les
xchg
sahf
mov
jmp
mov
out
or
retfw
fistp
push
sti
mov
mov
jnp
xor
push
cmp
mul
jae
mov
es
pop
out
pop
hlt
out
in
mov
pop
lods
in
jns
movs
xchg
mov
test
in
std
fist
(bad)
and
xlat
cmps
or
dec
inc
out
addr16
add
push
xchg
jbe
jl
mov
adc
push
cmp
mov
sti
(bad)
push
aas
jno
out
xor
or
sbb
aam
jle
cmp
jmp
test
jmp
cmps
les
xchg
fwait
scas
test
xchg
inc
mov
cmp
xor
add
adc
push
sbb
aad
and
adc
dec
int3
fst
xchg
pop
jne
push
or
out
add
cmps
inc
int
jge
(bad)
fmul
add
daa
and
retf
cmp
mov
xchg
js
pop
popa
xor
jecxz
xchg
imul
jno
xchg
fisub
mov
neg
jl
sub
ror
je
out
push
aad
or
add
mov
mov
fadd
ds
call
pop
addr16
popf
adc
jecxz
shl
mov
iret
rcl
popf
sbb
inc
pop
rcr
in
xchg
adc
pop
movs
adc
loope
push
imul
fidiv
add
das
sub
cmp
imul
xchg
or
(bad)
jno
dec
jge
and
mov
dec
cmp
push
shl
xor
movs
xchg
mov
push
dec
and
xchg
mov
push
data16
mov
xchg
add
fbld
sbb
ja
mov
daa
xchg
fwait
adc
mov
outs
jecxz
(bad)
(bad)
jns
mov
test
pop
test
pusha
inc
repz
leave
xor
add
aaa
or
ret
sar
ins
cli
test
mov
aas
stos
mov
dec
xchg
fcmovu
dec
dec
push
jg
cli
add
arpl
lea
in
retf
add
cwde
stos
cwde
xchg
(bad)
push
sahf
mov
mov
mov
xor
xor
mov
cmp
(bad)
scas
clc
adc
shr
or
or
jp
lods
scas
or
stos
jbe
xchg
push
repnz
ret
push
in
xor
rcl
mov
xchg
push
enter
mov
int3
sahf
popa
and
addr16
adc
or
mov
cdq
mov
jno
and
shl
jo
adc
es
mov
data16
pop
mov
dec
push
(bad)
or
mov
call
std
sar
mov
mov
pop
jbe
cwde
es
sahf
cmp
and
movs
enter
dec
pop
pusha
lds
push
push
stos
fidivr
cmp
push
pop
call
retf
ins
pushw
and
or
fadd
out
xor
push
push
jae
cs
fisttp
fst
fwait
shr
je
jb
(bad)
test
or
pop
daa
lods
mov
out
and
fisubr
imul
inc
pop
push
sub
ds
sahf
stc
inc
rol
ja
scas
mov
icebp
jae
popa
mov
mov
sbb
fidiv
adc
icebp
add
pop
and
clc
dec
add
je
inc
add
and
popa
mov
dec
jo
fcmovnu
dec
bound
jmp
xchg
imul
sub
mov
into
pushf
pop
mov
mov
dec
shr
and
jmp
dec
mov
sbb
or
sbb
js
scas
stc
in
jae
xor
cmp
dec
ds
lahf
pop
stos
pop
jle
test
cmp
jno
add
dec
pop
adc
pop
movs
leave
and
pop
mov
ja
add
int
cli
aad
mov
js
pop
mov
in
cld
xchg
jnp
jecxz
inc
ins
adc
shl
ja
sub
(bad)
scas
fadd
mov
cmp
push
mov
add
pop
(bad)
loop
stc
inc
hlt
jg
inc
hlt
sbb
fld
sbb
dec
mov
scas
sub
addr16
sbb
or
xchg
mov
sahf
std
mov
sub
ss
push
xchg
xor
shr
jns
xor
aaa
repnz
mov
mov
movs
add
pop
sbb
repnz
popa
adc
mov
or
xchg
jb
scas
movs
or
stos
add
jge
add
push
movs
mov
pusha
mov
cmp
xor
jmp
mov
mov
hlt
push
mov
test
cmp
xor
dec
cwde
cmp
and
push
es
sub
inc
and
fnsave
dec
rcr
out
mov
fwait
mov
mov
xor
out
jg
mov
ins
movs
sub
outs
push
into
(bad)
fninit
stc
ret
cmp
mul
pop
push
xor
stos
out
shr
in
cmps
dec
mov
out
scas
mov
mov
mov
aas
out
push
dec
call
call
gs
sbb
push
xor
xor
popa
retf
pop
pop
fstp
enter
dec
in
adc
(bad)
xchg
xchg
push
test
mov
add
sar
in
cli
sub
xor
cmps
scas
fisttp
adc
mov
lahf
adc
cwde
or
stc
sub
fwait
jne
pop
pop
push
mov
jnp
mov
sub
xor
pop
push
jge
aad
bnd
push
xor
cdq
inc
xor
into
imul
push
or
xor
sbb
ja
fcom
add
mov
xor
outs
stc
stos
sub
mov
sbb
jmp
or
sahf
xlat
mov
jmp
rcl
cld
(bad)
(bad)
xor
lods
xchg
das
mov
inc
addr16
cmps
push
xor
fsub
push
jmp
jo
das
repnz
and
test
mov
sub
dec
sub
xor
ret
cmp
add
out
jmp
or
pop
outs
push
and
test
pushf
cmp
repnz
scas
repnz
adc
sbb
inc
mov
add
xchg
movs
scas
xor
sub
adc
test
cmps
inc
push
push
jns
das
push
cmp
neg
xor
cmp
xchg
jno
sar
aam
adc
inc
int
rcl
popa
mov
cmp
xlat
adc
pop
repz
fiadd
enter
or
mov
std
neg
sahf
jecxz
in
mov
pusha
int
pop
adc
lahf
pop
jl
xchg
inc
cdq
ds
lahf
inc
rcr
outs
inc
xchg
push
in
mov
jecxz
ins
data16
dec
sbb
in
xchg
loope
mov
dec
arpl
ja
inc
xchg
icebp
dec
mov
add
fbld
enter
cmp
xor
bound
mov
jno
repnz
ss
xchg
xor
into
in
adc
add
xchg
mov
xchg
lahf
fwait
push
adc
fdivrp
repnz
ret
jg
in
imul
adc
cs
sbb
(bad)
dec
ss
aad
sub
daa
into
add
dec
fwait
pop
mov
hlt
lea
pop
adc
push
sbb
adc
jnp
movs
mov
stc
out
mov
adc
not
bnd
sub
cwd
cli
test
xchg
add
bnd
xor
loope
aas
ins
and
lods
push
pop
mov
bound
jecxz
xchg
pop
popa
xor
cmc
shr
fwait
sbb
inc
or
retf
mul
aaa
in
jne
inc
test
aaa
dec
lods
ret
pop
xor
sub
add
pop
clc
jecxz
scas
cmp
add
call
xlat
das
test
cwde
pop
xchg
pop
and
out
mov
pop
inc
jp
inc
aas
xchg
in
sti
and
add
jmp
and
mov
or
ins
stos
je
inc
mov
out
and
sbb
mov
retf
lods
push
pop
and
(bad)
std
xchg
and
scas
icebp
inc
add
sbb
sar
add
push
push
icebp
in
adc
ss
dec
das
xchg
in
stos
mov
pop
int
test
pop
jmp
int
or
push
aad
dec
ins
cmp
cli
pop
push
and
mov
push
retf
addr16
push
fdivp
aad
push
or
push
and
mov
lods
(bad)
xchg
(bad)
mov
add
jge
or
pusha
push
fcmovu
test
in
pop
das
(bad)
sbb
jl
fwait
test
aas
pop
in
and
xchg
pop
mov
std
sub
fadd
frstor
jns
adc
xchg
(bad)
loop
adc
adc
aam
retf
jb
mov
lods
inc
push
out
jp
stos
sub
or
stos
push
daa
rol
xor
gs
pop
mov
jmp
pop
and
addr16
inc
or
mov
push
in
shl
push
aam
iret
inc
imul
mov
lods
ja
fwait
pusha
fcomp
pop
aas
sbb
inc
push
inc
(bad)
out
adc
inc
out
out
cs
or
(bad)
cmp
sbb
ds
retf
dec
adc
cmp
cmps
cmp
lea
sub
jns
std
scas
sbb
xchg
pushf
pop
not
stos
js
dec
sub
mov
inc
jno
or
(bad)
ss
sub
inc
sub
mov
outs
mov
or
lods
pop
xchg
ss
push
lods
aam
data16
test
xchg
sub
test
sub
fwait
jmp
mov
and
pushf
push
mov
jle
mov
xchg
pop
enter
imul
mov
mov
jae
jle
mov
sub
cs
inc
jle
stc
aaa
mov
ror
sbb
and
push
icebp
push
jge
push
inc
jns
jp
scas
ds
pop
and
pop
jbe
mov
jne
pop
sbb
jo
fcmovnbe
sbb
mov
nop
fild
(bad)
scas
pop
inc
data16
dec
sub
out
psubw
pop
ffreep
pop
fild
mov
test
sbb
mov
inc
(bad)
push
jecxz
fnstenv
in
sahf
ds
fstp
cld
pop
neg
inc
loop
jae
popf
add
add
sbb
mov
sbb
pop
push
jl
jae
mov
cmps
(bad)
jmp
jmp
xor
out
cli
icebp
jo
fdivr
sub
mov
add
pop
(bad)
jno
scas
ret
lahf
in
jp
rol
out
xor
and
pop
jnp
test
inc
(bad)
mov
jmp
jae
lea
fs
shr
loope
test
mov
leave
call
lahf
mov
mov
sbb
scas
ins
mov
cmps
sbb
or
ds
mov
mov
adc
rol
jp
call
sbb
mov
jmp
mov
xchg
jbe
movs
daa
(bad)
dec
dec
and
out
sub
aaa
sbb
enter
pop
cmp
mov
xchg
adc
push
pop
add
jns
sbb
retf
sub
fiadd
mov
sbb
or
bound
sub
iret
mov
int
inc
jns
jo
mov
xchg
sub
xor
in
pushf
xchg
into
cmps
shl
loope
imul
fsubr
xor
jns
test
jmp
ret
cmps
dec
movs
scas
cld
cli
jle
sub
cli
fstp
inc
fimul
mov
lods
xchg
(bad)
xchg
and
push
mov
scas
push
cmp
test
sbb
rol
xor
lock
mov
pop
arpl
(bad)
cmps
adc
inc
push
adc
xchg
call
and
mov
fs
xchg
sbb
xchg
rol
mov
test
jne
fst
js
mov
dec
mov
cmp
push
addr16
xchg
jb
lds
jo
ffreep
inc
retf
xchg
fist
mov
ret
test
add
push
test
xor
xchg
push
adc
push
jecxz
gs
push
xchg
addr16
xor
mov
sub
loopne
pushf
test
rcl
mov
add
pop
push
icebp
pop
jne
sahf
repnz
mov
adc
cmp
jmp
sub
push
sub
sub
out
outs
clc
jbe
and
jmp
cmp
push
inc
jno
jl
xor
mov
jecxz
sar
ins
adc
sbb
push
out
into
ins
je
mov
sub
and
popf
mov
shl
clc
scas
lahf
(bad)
fmul
adc
and
sbb
lock
and
ror
sbb
mov
arpl
mov
push
(bad)
pusha
sbb
xchg
fild
jnp
(bad)
mov
jns
(bad)
mov
pop
or
enter
jg
div
push
or
jge
out
or
daa
out
pop
popf
lahf
mov
je
clc
lock
scas
jo
retf
add
ret
adc
shl
out
mov
cmp
fs
aaa
push
leave
je
sbb
adc
inc
lds
dec
xor
daa
xchg
lock
xor
ins
inc
(bad)
in
adc
pop
call
je
(bad)
and
sbb
dec
pop
inc
rcr
jne
inc
pop
cwde
cld
jbe
test
inc
lods
scas
push
clc
imul
inc
jecxz
push
stc
jecxz
pop
fistp
dec
or
dec
cmp
sbb
mov
jns
push
and
(bad)
dec
cmps
test
jecxz
loope
mov
fimul
push
push
ja
mov
mov
idiv
mov
dec
xchg
mov
jb
add
iret
mov
pop
sbb
pop
hlt
pop
sbb
xchg
and
gs
add
inc
cld
adc
mov
fiadd
cdq
ret
sbb
push
bound
pop
push
cmp
(bad)
sbb
mov
cmp
adc
retf
fwait
inc
in
outs
(bad)
xchg
cmp
xchg
pop
adc
sbb
or
mov
dec
aam
push
lods
jg
out
sbb
pop
sbb
(bad)
sbb
lahf
ds
lea
add
aad
rol
cmc
inc
loop
sub
jbe
lods
inc
sahf
or
pop
mov
dec
(bad)
sub
cmps
mov
adc
cmp
mov
mov
mov
mov
jle
pop
fidiv
cmp
add
ficomp
mov
out
test
adc
sub
pop
inc
call
adc
mov
cld
inc
and
and
rcl
mov
scas
xchg
dec
or
pop
inc
ficomp
std
mov
pop
stc
dec
fbstp
fld
mov
mov
xor
add
mov
call
sub
enter
lahf
ja
inc
jbe
jb
sbb
cmp
xlat
add
movs
push
dec
sub
ja
stos
adc
and
and
and
shl
lods
test
lahf
dec
pop
fld
jmp
fidivr
sahf
mov
jp
(bad)
arpl
mov
mov
(bad)
leave
pop
jecxz
pop
repz
push
jecxz
push
test
pop
pop
mov
cmp
ds
pop
push
pop
neg
sub
xchg
cmp
cmp
or
mov
into
mov
xchg
sub
out
stc
mov
xchg
data16
popa
sbb
outs
inc
sti
in
xchg
mov
sahf
pop
inc
jecxz
sbb
sar
dec
ins
cmp
sbb
mov
mov
scas
mov
in
not
aaa
hlt
xchg
ret
repnz
fdiv
xchg
xor
stos
icebp
dec
push
std
adc
adc
sbb
add
rcl
stos
jp
sub
inc
(bad)
jge
(bad)
clc
loopne
addr16
cdq
inc
retf
pop
ja
ret
mov
sub
push
pop
cmp
les
repz
mov
mov
cmp
pop
clc
and
test
xor
movs
repnz
pop
in
(bad)
fs
fidivr
sub
adc
push
(bad)
xchg
fld
pusha
or
pop
js
cmp
jno
and
and
and
xchg
test
sbb
mov
xor
stos
aam
pop
cmp
dec
dec
sbb
cmp
mov
(bad)
push
out
out
push
js
adc
push
push
add
mov
and
in
int
sbb
enter
or
or
and
outs
bound
xchg
nop
or
in
pop
push
pop
dec
push
hlt
dec
mov
fs
xchg
call
push
pop
sbb
push
cmp
outs
gs
dec
outs
xchg
pop
outs
test
adc
popa
(bad)
std
outs
inc
jne
punpckhbw
add
adc
sbb
xor
mov
aaa
movs
inc
pop
and
into
fisubr
inc
cli
lahf
cmp
fsubr
push
dec
mov
cmps
cmp
cmps
mov
jno
das
jns
or
pop
and
das
sbb
cmc
adc
xor
fsubr
mov
jbe
sbb
xlat
xor
cmc
iret
out
dec
jp
lahf
mov
sub
sbb
cmp
inc
cs
les
xor
add
dec
int
push
push
dec
out
push
push
stc
cmp
adc
xchg
sub
pop
adc
inc
jbe
add
jge
ss
push
or
lods
xor
in
inc
jmp
fild
in
outs
jmp
dec
adc
or
out
mov
mov
xor
xor
adc
fdiv
(bad)
mov
aas
scas
mov
inc
and
shl
sti
daa
cmp
inc
pop
bound
pop
sub
sub
test
adc
pushf
mov
pop
mov
in
jle
cmp
sub
dec
mov
sub
les
cli
lock
cmp
sbb
jnp
mov
inc
mov
adc
adc
cmp
add
sar
in
pop
js
mov
inc
inc
sbb
ins
cmps
ins
or
add
dec
cmp
jl
fcmovnb
mov
mov
out
mov
adc
(bad)
and
jl
outs
js
popa
fmulp
cs
mov
iret
lds
aad
loop
rcl
push
push
fist
test
cdq
pop
push
or
ret
fistp
je
xor
mov
add
jl
imul
cmp
fisubr
std
cmp
retf
mov
push
mov
jmp
xor
sbb
test
pop
xchg
pop
(bad)
cmps
out
ret
movs
mov
retf
(bad)
arpl
adc
xchg
or
test
xor
inc
out
mov
jns
cmp
clc
fisub
mov
jnp
(bad)
jecxz
ds
mov
inc
das
push
mov
xor
pop
lods
mul
mov
xchg
test
cmpxchg
mov
inc
movs
pop
movs
in
outs
dec
addr16
iret
cli
repz
scas
xor
jb
scas
and
shl
pop
push
test
enter
xor
add
cmp
mov
stc
pop
sar
loopne
mov
push
ret
test
push
push
pop
and
pop
test
push
stos
cmp
test
sbb
(bad)
imul
imul
pop
fnstenv
out
push
add
inc
test
test
sub
jo
xor
ins
cmp
mov
and
repnz
sahf
call
std
clc
hlt
push
mov
inc
cli
sbb
fstp
mov
xchg
test
test
ja
fstp
rcr
fadd
or
jne
pop
pop
xor
pop
add
inc
lods
ret
stos
pop
dec
rol
mov
mov
jge
sub
aam
mov
pop
sbb
mov
xor
xor
shr
dec
mov
pusha
mov
or
jno
mov
jns
and
xor
and
and
leave
push
shl
arpl
inc
dec
loopne
xchg
jle
ficom
div
xor
loope
mov
aam
mov
add
mov
mov
shl
pop
pop
jg
mov
fldcw
loope
ins
mov
lds
pop
ffreep
mov
or
cdq
inc
pushf
xchg
icebp
lock
stos
sbb
cmp
arpl
push
add
adc
stos
cmp
fwait
pop
lock
leave
ja
and
hlt
mov
cmp
aas
jmp
sar
stos
jmp
cmp
add
xor
dec
dec
push
cmp
clc
inc
and
pop
fs
xchg
imul
dec
pop
ret
mov
enter
mov
mul
sbb
pop
sbb
and
sbb
or
mov
aad
loop
sbb
out
mov
inc
jge
pop
aas
ins
(bad)
mov
mov
rcr
adc
jnp
rcr
inc
mov
and
lea
cmc
mov
add
push
and
es
pop
dec
aad
dec
sub
scas
cmp
pop
adc
inc
cli
or
in
xchg
jg
outs
mov
xchg
mov
addr16
or
into
mov
cwde
lahf
(bad)
aaa
leave
mov
shr
lock
push
and
cli
adc
push
push
cmp
jo
cmc
push
inc
cmp
sbb
mov
clc
jl
mov
in
cmp
ins
ins
shl
xlat
sbb
or
adc
mov
lea
xlat
push
push
adc
js
test
shr
pop
ins
dec
call
in
mov
pop
(bad)
test
mov
jnp
mov
cmp
pop
aaa
jae
xor
push
ja
adc
mov
call
call
sub
movs
push
mov
push
cdq
xor
js
jno
sub
dec
in
xor
outs
mov
push
(bad)
jnp
adc
jle
in
push
shr
jae
dec
fstp
dec
sti
push
and
push
cmps
jle
push
mov
iret
loopne
loope
cs
gs
sbb
loope
xchg
push
xchg
pop
neg
loop
add
jle
jmp
enter
push
nop
mov
and
mov
jp
mov
cmps
sub
xchg
daa
lock
daa
inc
inc
(bad)
cmp
xor
xor
mov
test
mov
sub
mov
mov
loope
clc
jmp
fadd
xor
imul
mov
fsubr
nop
mov
test
sahf
and
pop
jmp
adc
sbb
fbstp
scas
push
sbb
or
(bad)
out
movs
and
scas
popa
or
les
mov
in
or
push
cli
dec
mov
and
aaa
repnz
xor
xchg
xchg
sub
lock
mov
test
ds
pusha
ins
xchg
jne
jb
leave
mov
add
jmp
dec
xchg
aaa
in
out
xor
mov
stc
ret
loope
jo
mov
push
xchg
test
ins
ds
jecxz
clc
idiv
pop
jmp
push
test
dec
das
pushf
enter
inc
adc
inc
cmps
pop
mov
ror
push
jne
ins
push
rol
add
dec
stc
cmp
(bad)
rol
aam
(bad)
ds
scas
adc
cmp
call
ret
and
jp
jg
jmp
loop
outs
xlat
stos
cmp
fyl2xp1
dec
ins
cli
loope
sbb
test
ss
loopne
mov
jecxz
enter
mov
in
adc
scas
retf
aaa
jb
(bad)
fcom
and
ins
mov
push
jae
imul
add
inc
pop
mov
hlt
mov
adc
sub
lea
xchg
or
movs
pop
xchg
jae
sbb
xor
jns
push
shl
shl
aam
mul
test
shr
stos
mov
test
test
test
adc
mov
(bad)
iret
nop
adc
adc
mov
test
mov
sbb
movs
jmp
pop
call
(bad)
push
fimul
mov
sub
std
sbb
adc
pop
(bad)
mov
(bad)
mov
mov
pop
ja
into
idiv
rol
repz
ja
test
nop
das
das
jl
dec
dec
jmp
ins
jge
and
pop
imul
ret
leave
cdq
sahf
xor
jnp
xor
mov
nop
fsubr
pushf
mov
cmc
popf
aaa
push
loope
loopne
scas
pop
cmps
cs
sbb
ds
push
adc
movs
jecxz
ror
pop
mov
fst
test
sub
shl
jne
push
sar
das
cmps
lock
xchg
int3
push
jle
xchg
das
xchg
sub
js
or
push
sbb
mov
cmp
jmp
cmp
mov
ins
add
cs
inc
cmp
cli
mov
bound
daa
or
mov
xor
pop
fld
scas
int
pop
add
mov
inc
push
mov
add
int3
push
call
stos
movs
sub
sbb
rep
repz
pop
in
pop
adc
sbb
jp
div
cli
out
and
mov
mov
cmp
(bad)
(bad)
rcl
sahf
mov
scas
dec
ret
int
addr16
xor
mov
xlat
call
lods
inc
mov
rol
nop
jmp
ins
push
pop
cdq
sbb
call
pop
xor
repz
in
pop
sar
push
mov
ficom
enter
cs
jp
scas
daa
sbb
add
dec
dec
mov
add
add
add
add
add
or
arpl
(bad)
loope
je
cmp
jae
jno
lgs
js
mov
dec
gs
shr
test
fs
push
sbb
and
rol
gs
push
pop
addr16
ret
mov
cwde
dec
test
xchg
call
(bad)
fidivr
fst
fdivr
(bad)
loope
aaa
and
std
pop
cmp
mov
rol
in
arpl
jnp
inc
mov
and
mov
sbb
js
arpl
pop
es
int
jge
pop
data16
push
sti
and
pusha
outs
(bad)
pusha
cmc
and
xor
sar
mov
pop
out
add
pop
inc
enter
adc
add
mov
xchg
in
xor
sub
outs
(bad)
ror
sbb
aas
movs
fadd
fcomp
jp
mov
dec
shl
cmp
imul
addr16
push
test
add
jae
(bad)
movs
mov
and
int3
vcvtsd2si
loop
sub
(bad)
mov
or
xor
ins
jno
icebp
add
int
mov
mov
imul
addr16
mov
mov
mov
adc
pusha
cmps
cli
jo
sar
add
in
push
(bad)
cmp
sub
xor
cmp
and
sub
or
push
sahf
mov
or
bound
fldpi
jbe
dec
lahf
dec
or
pop
cmp
adc
dec
cmp
pop
mov
pop
cdq
int3
arpl
xor
cs
loopne
mov
stos
xchg
scas
mov
inc
inc
iret
and
mov
jo
stos
fisub
xor
adc
aaa
sub
int
imul
(bad)
cmp
movs
jno
pop
mov
sub
mov
adc
sub
outs
(bad)
lods
adc
push
inc
pop
popf
ret
fcmove
mov
daa
std
nop
or
fs
je
test
xchg
fsubr
and
jns
pop
ror
mov
iret
in
aad
jge
inc
jmp
jnp
xchg
cs
icebp
in
mov
(bad)
inc
fsubr
mov
mov
mov
fadd
jecxz
cmps
pop
out
xchg
jns
ud1
add
mov
imul
into
jmp
mul
es
outs
lods
xchg
popa
fldcw
push
mov
push
xchg
fcomp
fcom
jns
dec
frstor
daa
inc
gs
inc
imul
dec
or
push
lea
repnz
ds
mov
cmps
ins
out
shl
call
addr16
pop
xor
out
fiadd
icebp
inc
inc
sbb
into
mov
das
adc
out
aam
xor
xor
repnz
add
push
stos
data16
mov
hlt
pop
sbb
push
mov
mov
inc
scas
xor
xchg
out
xchg
dec
(bad)
push
test
and
movs
mov
shr
add
pop
shr
push
ror
in
sub
or
push
xchg
das
pop
in
(bad)
xor
jns
sub
and
pushf
jmp
mov
loope
or
sub
popf
push
mov
and
cmps
cli
cli
jg
repz
jmp
das
mov
ins
cmc
sar
mov
push
and
mov
sahf
fistp
cmps
mov
loopne
xchg
sbb
repz
push
cmps
movs
dec
aam
inc
fiadd
and
jo
(bad)
shl
(bad)
pop
test
push
and
(bad)
in
aas
(bad)
or
and
add
and
and
retf
mov
cmp
fadd
mov
imul
enter
jl
push
sbb
daa
ret
cdq
jecxz
fsubr
adc
lock
adc
pusha
push
sar
push
dec
mov
dec
and
push
imul
iret
or
sbb
push
jecxz
sbb
dec
mov
lahf
ret
lahf
movs
mov
mov
bnd
sub
mov
(bad)
push
xor
cmps
lahf
pop
mov
imul
inc
xchg
mov
jbe
push
cmp
sti
ror
fidivr
(bad)
xchg
pop
xchg
cmp
inc
in
lods
rcl
pop
arpl
ds
ja
mov
cmp
adc
imul
adc
jne
add
dec
loopne
(bad)
xor
mov
aam
ds
into
cwde
out
push
movs
neg
mov
jmp
popa
add
xchg
and
bound
repnz
arpl
fwait
ja
mov
stos
xchg
jge
hlt
pop
imul
push
fs
lock
push
dec
push
jl
scas
xor
mov
pop
inc
push
int3
das
pshufw
pop
cwde
repz
je
and
push
pop
std
retf
adc
jb
pop
and
test
mov
dec
xchg
xor
jl
xchg
adc
mov
into
xchg
fld
fisub
in
fadd
add
mov
rcl
gs
gs
push
push
or
in
sub
arpl
xchg
es
xchg
das
and
call
mov
les
dec
sbb
int
fxch
dec
push
or
les
int
repnz
mov
pushf
fs
pop
sub
add
jecxz
and
jae
pusha
push
cmp
xor
xchg
mov
shl
mov
xchg
test
rcl
fidiv
dec
fwait
pop
push
je
(bad)
xor
or
push
sbb
test
and
cwde
cmp
test
or
mov
iret
push
out
sub
sub
jns
cmp
jne
sti
jle
test
(bad)
iret
pop
lahf
repz
jl
out
shl
in
mov
dec
cmp
adc
and
stc
mov
sub
lods
sub
jg
rcl
and
cmp
out
mov
je
or
mov
push
dec
and
mov
xchg
je
jae
dec
daa
dec
out
lock
xchg
mov
sbb
xor
lods
rcr
add
or
fiadd
(bad)
jnp
sub
mov
loop
add
test
inc
(bad)
and
pop
addr16
loope
sbb
ss
mov
adc
add
loopne
xchg
lods
xchg
jp
retf
ret
stc
jne
and
sbb
(bad)
or
retf
inc
adc
push
cmp
mov
mov
fimul
out
aaa
sub
xchg
xchg
xchg
add
ins
and
push
add
bswap
out
out
fisttp
or
push
sbb
aas
rcl
mov
mov
xchg
leave
pushf
aam
mov
jl
jl
inc
jnp
pop
int
into
mov
daa
mov
addr16
out
adc
add
mov
daa
in
push
popf
sub
pop
push
or
aaa
inc
jae
movs
add
sub
jo
push
data16
int3
inc
and
pop
and
test
shl
test
cmp
sub
aam
lea
fidiv
jl
dec
adc
push
mov
aam
lahf
cmp
dec
sbb
pop
dec
jnp
iret
pusha
stos
mov
loope
call
imul
mov
xchg
fcmove
lock
or
bound
and
pop
in
or
fsubrp
scas
sub
dec
imul
ins
arpl
arpl
cdq
sbb
jecxz
stos
daa
jmp
mov
sub
addr16
pop
add
call
retf
pop
jnp
ret
jns
lods
push
sub
cmps
shl
sahf
rcl
jmp
dec
ret
and
(bad)
adc
rcl
clc
xor
std
dec
sub
adc
add
mov
mov
jmp
fidivr
mov
and
into
mov
or
pop
mov
mov
aas
xor
push
movntq
sbb
sbb
sub
ins
jecxz
mov
push
push
xor
aas
push
xor
cmp
adc
int3
xchg
in
mov
fnstcw
cmp
aam
lods
test
cdq
aas
lea
pop
(bad)
and
jp
test
test
aam
pop
arpl
ror
push
in
push
outs
dec
lea
lods
test
lock
dec
or
ror
or
sbb
pop
dec
cmps
and
push
push
js
dec
cmp
loope
xchg
jp
xchg
jae
pop
bound
ins
add
push
sbb
(bad)
xor
imul
scas
and
inc
inc
cli
dec
lds
call
and
iret
repnz
das
sub
and
inc
ror
xor
adc
jo
xor
dec
scas
cmp
jecxz
sbb
dec
mov
mov
outs
sub
dec
iret
xchg
add
jno
push
(bad)
out
inc
inc
(bad)
pop
mov
pop
jae
sub
xchg
nop
das
push
dec
add
mov
leave
mov
push
push
lahf
add
inc
hlt
repz
jo
dec
or
fsubrp
shr
(bad)
adc
sub
aas
loopne
stos
pusha
outs
dec
dec
mov
or
xlat
pop
or
mov
and
in
jno
dec
je
out
mov
(bad)
imul
jmp
xor
arpl
cmp
shl
cdq
lea
fdiv
mov
inc
retf
xlat
push
retf
aad
adc
call
jmp
jmp
push
pop
sar
cmp
cmp
mov
in
xor
pop
push
mov
mov
ret
cmps
out
jmp
pop
imul
push
js
mov
push
shl
cdq
inc
repz
bound
pop
add
inc
jae
mov
inc
rcl
add
xlat
pop
out
add
shr
lds
cs
dec
idiv
jns
add
cmp
add
add
add
mov
add
dec
cld
xchg
push
push
(bad)
mov
mov
popa
aad
adc
icebp
(bad)
mov
jl
and
je
inc
xor
lods
mov
push
mov
mov
adc
dec
mov
(bad)
and
(bad)
gs
add
je
fadd
mov
inc
scas
jge
jb
sbb
bound
repz
jne
xchg
pop
das
push
shl
adc
inc
lods
(bad)
sbb
mov
xchg
rol
inc
dec
or
pop
mov
or
cld
call
adc
sub
adc
in
popa
sbb
jb
ret
mov
and
jnp
add
fs
or
mov
js
mov
xor
in
mov
dec
movlps
jecxz
lahf
in
in
stos
jno
hlt
cmp
and
cmp
dec
push
inc
inc
cmp
fdivrp
sub
gs
mov
pop
inc
fcomp
imul
(bad)
cli
mov
cmp
stos
jmp
adc
mov
mov
xor
and
(bad)
div
movs
(bad)
push
pop
stos
neg
cmps
cmp
push
push
jmp
fstp
mov
pop
or
leave
iret
cmps
jnp
add
add
dec
dec
cli
and
loop
ss
lock
add
(bad)
mov
fwait
or
test
mov
cmovp
inc
ins
or
out
mov
push
div
lea
js
dec
in
loope
sbb
jmp
jp
movs
push
cmp
mov
loopne
cmp
es
fcomp
mov
inc
push
push
sub
aas
mov
jl
hlt
push
adc
fsubp
add
xor
push
ret
xor
icebp
mov
mov
mov
xor
fsub
test
xchg
add
(bad)
sbb
or
into
dec
lock
scas
inc
enter
and
popa
(bad)
mov
adc
mov
sbb
add
jb
popf
pop
hlt
fst
or
or
push
jno
push
mov
jp
jecxz
stos
shl
leave
test
mov
mov
jmp
cmp
stos
mov
cmova
fld
call
lods
imul
sub
jb
pop
adc
daa
jge
outs
clc
and
arpl
or
or
fnstcw
(bad)
dec
cs
fcmove
stos
xchg
pop
or
mov
cmc
mov
stc
(bad)
pop
arpl
call
mov
ins
out
inc
mov
inc
adc
xor
cmp
aad
cmps
push
cld
int3
ins
sbb
addr16
mov
lods
jmp
push
fiadd
rcl
das
inc
data16
add
(bad)
pop
icebp
and
cmps
mov
ss
adc
aam
rcr
loop
outs
pop
mov
jbe
(bad)
mov
pop
adc
or
dec
sbb
fs
arpl
cs
(bad)
out
sub
xlat
push
push
mov
sub
jl
push
jg
imul
popa
adc
cmc
mov
pop
cmps
add
inc
scas
mov
fisubr
add
cdq
jecxz
int
sbb
mov
adc
popa
pop
or
loopne
cs
jge
call
and
mov
(bad)
mov
xor
shl
mov
push
mov
cld
mov
mov
cmp
popf
loop
add
fcmovnb
pop
push
out
(bad)
adc
fadd
sbb
loopne
sti
dec
pop
lea
outs
lahf
sbb
aaa
cwde
dec
dec
pop
jmp
sub
out
mov
pusha
sub
inc
lock
jecxz
lock
lock
jle
loopne
pop
sbb
shr
xor
in
sti
xchg
sti
mov
fcomip
mov
cdq
xor
cwde
mov
and
cld
inc
dec
mov
pop
stos
sbb
jno
dec
(bad)
fcomp
(bad)
sbb
jecxz
daa
cmps
enter
bound
sbb
scas
inc
nop
or
data16
mov
(bad)
cld
mov
and
sub
jmp
loop
in
jmp
int3
cmp
push
add
fcomp
or
inc
mov
sbb
push
and
sar
iret
dec
xlat
or
mov
in
mov
xchg
or
in
fstp
inc
cdq
inc
stc
test
cmp
rcl
adc
out
sahf
call
xchg
cmps
test
je
push
inc
mov
fidivr
sub
clc
or
(bad)
mov
popf
push
mov
dec
adc
ss
call
iret
sub
sub
ins
test
adc
sbb
xor
mov
add
adc
xor
aaa
inc
lods
fstp
pop
ds
dec
sbb
ss
adc
sub
jns
sbb
out
mov
jo
cmps
cmps
sbb
outs
enter
call
mov
xchg
pushf
xchg
mov
push
popa
mov
sub
(bad)
in
xchg
cld
mov
dec
cmps
stc
ret
cld
loopne
test
iret
inc
cli
mov
in
mov
or
and
inc
inc
push
retf
out
cmp
not
bsr
mov
add
sbb
jmp
pop
push
mov
aad
arpl
cmp
inc
mov
ret
mov
sti
add
mov
xor
addr16
out
pop
dec
rol
push
or
aam
clc
dec
or
inc
jp
inc
sbb
imul
cmp
(bad)
out
bound
das
out
add
jnp
push
test
xchg
jge
call
test
sar
int3
fdivr
int
mov
or
xchg
(bad)
stos
dec
sub
inc
push
popa
addr16
aad
cmp
lods
popf
ret
enter
nop
int3
mov
push
adc
mov
adc
sub
push
rol
mov
stos
leave
inc
or
inc
out
sbb
std
sbb
leave
cmp
test
cld
mov
dec
and
loope
mov
pushf
icebp
cmp
dec
sahf
add
and
push
add
mov
test
sub
mov
in
es
xchg
popf
push
cs
pop
fiadd
sub
loope
movs
inc
out
mov
sbb
push
cmp
mov
inc
clc
mov
mov
mov
in
das
adc
xchg
data16
cld
pop
ins
mov
mov
inc
dec
sbb
aam
mov
fstp
jl
fsub
mov
sahf
push
in
(bad)
cmc
adc
cld
loop
rcr
ins
lds
dec
xchg
call
pop
cs
cmp
shl
fmul
loopne
push
inc
pop
pop
or
shr
xchg
mov
jle
dec
sub
mov
in
adc
sub
sti
mov
inc
sbb
fnstenv
fist
in
popf
sahf
pop
arpl
dec
jl
dec
xor
sti
push
push
push
pop
test
pusha
jnp
(bad)
cs
test
(bad)
sub
mov
jbe
fprem1
xor
and
imul
jno
dec
loope
cld
sub
jge
cld
inc
inc
xchg
stos
fidiv
pop
pop
(bad)
in
xchg
out
fstp
inc
jne
repnz
xchg
pushf
ins
nop
pop
inc
mov
aas
inc
outs
dec
xchg
out
out
push
sahf
sbb
adc
retf
push
sbb
add
add
les
das
sar
dec
(bad)
mov
sbb
mov
mov
jp
test
push
adc
shr
outs
mov
lds
data16
cdq
mov
paddusb
test
add
jmp
sub
cwde
rcr
rcl
sub
imul
popf
ja
mov
mov
jnp
dec
sub
test
sbb
pop
(bad)
pushf
and
(bad)
cmps
jns
mov
xchg
rcr
hlt
ror
imul
cmps
mov
mov
and
in
in
cmps
mov
mov
sub
add
cmp
dec
xchg
in
cmp
jns
jp
fst
add
dec
rcr
ss
cs
fisubr
add
out
jae
(bad)
leave
jp
loope
and
aad
push
jecxz
pop
or
shr
repz
jnp
(bad)
push
test
cld
inc
or
sub
je
fdiv
movs
mov
adc
jae
mov
in
mov
push
into
mov
sbb
add
xchg
outs
push
sbb
(bad)
ins
mov
push
sub
scas
push
or
das
ret
lahf
mov
in
add
imul
(bad)
stc
sub
loop
dec
scas
push
or
lods
adc
cmps
in
out
xchg
add
scas
ds
popf
mov
je
mov
jp
cmp
(bad)
mov
cmp
scas
mov
movs
out
xor
or
fild
stos
pushf
retf
push
hlt
sbb
loop
push
out
test
xlat
or
(bad)
(bad)
jmp
scas
add
mov
fsubr
imul
jbe
out
sbb
pusha
stos
test
fisttp
imul
and
ror
ja
loope
mov
sbb
fidiv
lods
jmp
outs
jns
daa
xchg
pop
ss
add
jmp
pushw
jge
loop
lahf
push
xor
cmp
ds
ja
or
mov
js
mov
jb
daa
adc
arpl
mov
imul
sub
les
pop
fsubr
mov
inc
mov
push
lds
or
sub
add
lods
adc
mov
ins
mov
push
fsub
cld
movs
outs
cmp
adc
xlat
or
pop
stos
aam
sbb
jno
shr
mov
minps
data16
out
inc
test
mov
in
cmc
test
mov
sbb
jno
hlt
lea
dec
pop
fsubr
cmp
mov
jl
pop
repz
lahf
movs
ret
sub
push
push
int
or
int
xchg
data16
test
cmc
enter
(bad)
(bad)
pushf
shl
sub
pop
or
jle
xor
repnz
loope
or
sti
and
pushf
data16
or
push
in
ins
jae
outs
stos
fld
xchg
pop
sahf
ret
xchg
in
iret
push
mov
icebp
cld
inc
in
xor
sub
test
dec
ss
div
sbb
or
cld
(bad)
call
stos
xchg
dec
mov
fcom
jns
inc
dec
sub
mov
jge
or
and
lods
cmps
push
push
fimul
xchg
push
lea
adc
pop
movsx
push
dec
jae
(bad)
std
mov
popf
cdq
and
mov
jae
jbe
(bad)
cli
int3
pop
fimul
jae
jl
aad
in
xchg
neg
add
xchg
cwde
cmp
add
mov
imul
imul
repz
or
mov
pop
push
mov
out
in
mov
mov
and
xchg
dec
ss
inc
leave
pop
xchg
(bad)
call
and
mov
(bad)
or
xchg
add
cmp
sar
pop
cmp
int
mov
je
push
clc
int
stos
sbb
in
out
mov
dec
xlat
adc
mov
mov
jl
xchg
inc
mov
leave
sub
pop
fwait
add
in
cmps
mov
pushf
cld
shl
mov
(bad)
dec
sbb
mov
les
sbb
test
xor
pop
mov
jmp
xor
sbb
stos
pop
ds
and
in
dec
out
jbe
call
jmp
mov
call
inc
in
mov
jl
push
add
pop
pop
jmp
adc
push
(bad)
jmp
lahf
rcl
or
lds
aad
hlt
push
fdivr
fidiv
sbb
mov
shl
adc
sahf
adc
sti
(bad)
aad
mov
xor
jae
(bad)
in
inc
dec
into
and
inc
(bad)
fist
sbb
pop
(bad)
das
cmp
mov
outs
or
das
add
xchg
imul
push
fisttp
ins
pop
xor
ins
aad
cwde
xchg
dec
push
or
out
lds
stos
arpl
cmp
adc
add
rcr
std
and
fnstsw
cmp
arpl
push
sub
cdq
test
lds
jo
fucomip
gs
movs
dec
iret
push
xchg
push
out
loope
fisubr
and
mul
adc
stc
and
outs
dec
arpl
lock
jne
sub
sbb
mov
xor
mov
xor
or
push
dec
sbb
in
jb
iret
and
mov
push
pop
or
rcl
pop
pop
pop
mov
inc
ja
mov
adc
les
(bad)
clc
test
mov
bound
xor
js
stos
shr
xchg
xor
xbegin
mov
stos
ror
cmp
mov
push
fidivr
lea
mov
and
fisub
sbb
dec
add
ds
or
mov
pop
std
enter
stc
mov
hlt
xchg
ins
jl
and
xor
jb
sbb
cld
add
mov
xchg
popa
xchg
loope
lock
jnp
fcmovb
pop
jae
pop
or
data16
movs
mov
cmp
cwde
mov
dec
or
pop
xchg
cmps
sub
mov
inc
lods
das
xor
mov
js
inc
jbe
dec
outs
and
fst
jmp
mov
(bad)
push
mov
leave
mov
rcl
loopne
sub
mov
(bad)
xor
stos
retf
shl
inc
(bad)
shl
mov
mov
pusha
pop
mov
xchg
mov
test
sub
push
je
loopne
add
add
outs
pop
out
outs
and
mov
sub
cmp
inc
movs
imul
cli
stos
jmp
mov
xchg
push
fdivr
aas
iret
mov
in
mov
xor
dec
jb
add
cld
and
add
xchg
mov
scas
int3
cmps
sbb
jb
jmp
clc
dec
inc
das
jl
sbb
iret
std
(bad)
leave
pop
cli
push
xor
sub
std
xchg
dec
cmp
dec
add
cdq
stos
pop
xchg
jnp
je
ins
lods
mov
mov
dec
fucom
push
dec
in
jmp
adc
pushf
mul
aad
out
cmps
clc
xor
pop
fild
mov
mov
add
mov
xor
daa
scas
push
dec
jmp
imul
mov
mov
cmps
test
sbb
sbb
and
pop
pop
stos
mov
stos
jg
ret
dec
or
xlat
mov
jle
mov
mov
xor
cmps
inc
stc
sub
mov
sbb
dec
idiv
cwde
jge
adc
ins
add
sbb
xchg
mov
add
dec
mov
pop
cmp
or
ret
fstp
test
fnstenv
xor
imul
inc
jmp
and
push
lods
scas
adc
int3
shl
jmp
sti
cmps
movs
sub
sub
jecxz
push
jp
loopne
movs
or
jo
addr16
ins
jg
adc
dec
fild
xchg
jb
paddusb
fwait
cli
fsubrp
cld
neg
mov
xchg
inc
sbb
sahf
outs
or
mov
scas
jg
pop
pushf
and
xor
xchg
stc
adc
xchg
mov
daa
arpl
push
fwait
pusha
mov
mov
ret
sbb
dec
stos
cmp
cmp
iret
add
mov
sti
dec
sbb
aad
jmp
dec
mov
pop
cmp
push
into
add
js
dec
lahf
mov
cmps
pop
mov
es
mov
aad
xor
test
rol
dec
aaa
test
test
in
xor
test
jl
inc
push
outs
pop
push
je
mov
loopne
in
xchg
bound
ins
sub
fidivr
in
sahf
dec
rcr
(bad)
jl
mov
(bad)
in
pop
fmul
xor
mov
pop
and
or
outs
fnsave
fs
(bad)
cmp
jl
push
cmp
push
push
dec
dec
dec
cmc
push
pop
repnz
lahf
add
(bad)
cli
shr
scas
lea
pop
inc
cmp
inc
and
adc
push
and
adc
adc
test
enter
ja
scas
js
or
or
je
xchg
xor
mov
push
sub
cdq
cmp
out
fldcw
dec
adc
inc
arpl
xor
stos
das
imul
mov
(bad)
cmp
mov
xor
(bad)
mov
sahf
dec
jno
sar
mov
stos
(bad)
stos
repz
pop
sub
popa
inc
push
aas
sbb
and
aad
add
pop
push
pop
out
mov
adc
out
dec
shr
stc
cmp
je
retf
and
sahf
dec
fdivp
gs
or
pop
leave
ja
in
retf
in
sub
pusha
movs
sub
xchg
test
hlt
cdq
xchg
fist
inc
retf
ss
mov
fbld
sub
das
arpl
enter
jno
push
and
adc
xlat
push
sbb
shl
dec
or
out
js
inc
aaa
push
or
push
mov
imul
or
xor
push
or
push
and
xor
fsub
repz
leave
jns
xchg
imul
hlt
sti
(bad)
ss
push
and
xrelease
jecxz
push
adc
bound
int
sbb
ds
cmp
lods
repnz
addr16
lods
push
push
mov
xlat
mov
pop
stos
or
into
cmp
repz
sbb
fs
sbb
rol
fdiv
and
jnp
mov
ins
sub
(bad)
dec
xor
and
ins
(bad)
dec
and
scas
pop
or
adc
sub
clc
mov
jbe
ret
punpcklwd
data16
jp
and
xor
dec
sub
ret
jb
loopne
ss
fcom
pushf
push
push
aas
cmps
ss
mov
or
(bad)
scas
mov
jns
inc
add
mov
dec
mov
in
stos
in
or
ds
outs
(bad)
out
loopne
jl
xlat
adc
xchg
outs
cmp
add
sbb
mov
mov
fimul
pop
jmp
push
jne
test
cmp
ror
inc
movs
mov
cdq
jecxz
gs
retf
jmp
and
nop
xchg
jp
fsub
in
pusha
fisub
push
cmps
adc
xlat
loop
mov
jbe
stos
in
(bad)
lahf
mov
fld
ds
repnz
aam
repz
es
adc
paddd
jbe
int
jge
dec
stos
data16
cmps
inc
push
and
cs
mov
arpl
pop
mov
push
out
cld
call
inc
and
inc
ja
fldcw
sahf
mov
fwait
pop
aad
fwait
xchg
in
fisub
iret
xor
mov
sar
out
push
mov
cmps
shl
jno
lods
dec
repnz
repz
outs
cmps
mov
out
int
repnz
sysenter
(bad)
leave
outs
inc
enter
adc
push
popf
dec
lods
pop
call
cwde
sbb
cmp
push
cmps
repz
xchg
fsub
or
dec
inc
dec
pusha
or
mov
jge
ins
mov
xlat
mov
pusha
into
dec
push
xchg
jmp
xchg
xchg
sbb
ss
xchg
daa
aad
outs
push
pop
xchg
mov
in
mov
mov
jl
and
dec
movs
cli
shl
jmp
lods
movs
not
pop
mov
cs
mov
je
push
mov
cli
push
xchg
xor
ror
mov
xor
arpl
fadd
mov
adc
jae
repnz
jne
sbb
mov
lahf
or
leave
and
call
bound
pop
add
push
fs
retf
xlat
push
(bad)
loop
fdivr
cmp
pop
adc
ror
pop
sbb
fs
sub
xlat
fiadd
(bad)
dec
fwait
push
and
out
fcomip
sbb
aad
push
loope
nop
push
mov
push
cmp
sar
inc
movs
imul
scas
scas
adc
popf
cmovs
add
lods
out
mov
clc
int3
add
push
imul
and
add
das
retf
sbb
jmp
in
aam
and
or
and
mov
outs
add
or
lods
cs
mov
ds
jbe
mov
es
jmp
and
mov
rcr
sbb
xor
mov
adc
or
push
(bad)
inc
stos
gs
adc
out
cmp
cmp
outs
popf
pop
ret
stos
(bad)
jmp
fucomip
pop
mov
pop
jne
jl
es
lahf
mov
rol
pop
outs
sub
aad
in
sub
xchg
mov
xor
jns
push
xor
add
mov
add
loop
adc
mov
mov
test
cmp
ja
inc
xchg
mov
rcr
fisubr
cmps
retf
pop
or
pop
and
out
sahf
add
and
xor
inc
pop
push
cli
sahf
(bad)
mov
push
xchg
jle
out
aaa
inc
ss
dec
movs
test
aad
outs
pop
and
sub
xchg
xor
repnz
mov
dec
(bad)
fist
sbb
retf
dec
rcl
loope
or
les
aaa
sub
repnz
lds
dec
mov
in
add
scas
cmp
adc
add
ins
and
mov
jo
in
into
mov
(bad)
jmp
mov
ret
mov
cli
(bad)
sbb
fwait
dec
enter
and
jmp
(bad)
nop
out
sbb
mov
jmp
push
and
ja
xchg
push
inc
movs
ret
lods
mov
pop
jmp
mov
(bad)
mov
movs
test
cli
imul
retf
xor
in
xchg
xor
adc
and
fnstsw
mov
and
xchg
mov
inc
loop
mov
xchg
mov
enter
pop
inc
repnz
sti
push
std
or
add
sbb
je
movs
or
jmp
loopne
and
in
mov
in
sub
sub
or
ds
sbb
sub
(bad)
push
jmp
ins
mov
pop
stc
call
jecxz
and
inc
jge
cmps
mov
and
cmp
pop
add
mov
pop
pop
xor
jmp
cmps
sub
arpl
icebp
dec
inc
das
adc
xor
repz
ret
and
mov
xchg
mov
clc
mov
js
test
and
test
xlat
dec
mov
ins
xor
imul
outs
and
popf
outs
(bad)
xor
fistp
mov
(bad)
es
loop
and
push
call
or
pop
mov
adc
xlat
add
mov
fdivr
fst
jnp
xchg
dec
dec
inc
sbb
aam
repnz
jg
sti
test
cmc
or
lods
or
xchg
sahf
mov
sub
pop
mov
std
adc
addr16
imul
xor
pushf
loop
mov
sbb
mov
test
sbb
inc
jne
aad
cmp
into
mov
loop
xor
jno
add
mov
pop
pop
bound
xlat
pop
mov
jbe
and
jnp
or
or
fld
or
fst
xchg
cmp
push
dec
loop
cld
cmc
inc
dec
cld
xchg
movs
sbb
sahf
pop
add
dec
xchg
xchg
enter
push
push
cmps
cmp
lds
cmp
mov
add
sti
mov
fbstp
ficom
dec
dec
jmp
loopne
fwait
xchg
dec
cmps
arpl
retf
mov
shl
xchg
mov
xchg
in
adc
adc
adc
pushf
aad
mov
mov
sub
dec
in
push
dec
cld
dec
adc
sbb
lds
in
out
ret
mov
hlt
movs
imul
(bad)
shl
sbb
sub
int3
mov
pop
add
jnp
jmp
popa
in
call
mov
lods
pushf
pop
fmul
lods
fisubr
jp
push
and
(bad)
js
sbb
pop
test
mov
rcr
jnp
jg
aam
xchg
mov
call
jecxz
dec
mov
rcr
mov
xor
adc
jmp
adc
repz
movs
popf
repz
in
sub
or
sbb
sbb
add
test
cmp
dec
imul
loop
test
call
fcmovne
or
or
push
cmc
mov
mov
sub
popf
into
inc
(bad)
xchg
xchg
ret
mov
or
mov
leave
cld
jbe
out
dec
mov
arpl
inc
cli
fwait
retf
das
nop
(bad)
push
dec
mov
lahf
fmulp
push
adc
ret
cmp
daa
mov
out
and
sti
adc
mov
and
xchg
sub
mov
out
cs
inc
add
sbb
pop
fwait
cdq
xchg
icebp
push
xchg
out
inc
and
jne
sbb
cmp
test
fisttp
sub
out
sbb
fstp
out
in
push
fsubr
clc
sub
adc
in
(bad)
push
iret
out
dec
jnp
push
mov
cmp
cwde
pop
push
loop
mov
xor
stc
mov
adc
nop
fucomp
out
jne
pop
add
inc
adc
les
shl
push
pop
pop
mov
scas
icebp
mov
xor
test
out
lock
enter
dec
pop
out
std
fmul
shl
fisttp
fadd
aaa
xchg
add
push
in
lods
mov
mov
out
loopne
adc
adc
lock
mov
mov
dec
cmp
mov
mov
pop
nop
iret
lods
xchg
and
faddp
mov
cmp
test
inc
push
mov
xchg
xchg
inc
adc
imul
lods
(bad)
cmp
stos
mov
loopne
mov
xor
je
sub
retf
xchg
cmp
pop
rol
repnz
ins
sub
fidivr
or
js
mov
cmp
push
sbb
or
xor
mov
inc
mov
mov
inc
lds
sub
cmp
jl
and
mov
dec
xor
xchg
gs
cmp
sti
and
out
jp
ins
xor
movs
data16
popa
rcr
stc
xor
js
adc
js
cs
rcl
adc
pop
cs
cmp
pop
pushf
call
fimul
lds
(bad)
lods
fisttp
push
scas
cmp
adc
ret
cs
xor
jne
mov
dec
push
cmp
jp
pop
adc
jne
pop
pop
mov
sub
(bad)
mov
pop
fwait
and
xor
and
stos
and
pop
sbb
clc
jnp
jne
pop
int
nop
push
mov
xchg
mov
pusha
xor
xchg
rol
ss
ret
xchg
hlt
sbb
mov
movs
sbb
js
inc
xchg
sbb
adc
sbb
clc
sbb
mov
fmul
dec
jne
push
jb
pop
pop
sub
out
jecxz
jne
sub
dec
test
adc
push
sbb
(bad)
cld
lods
test
jbe
(bad)
cwde
je
mov
iret
or
mov
cli
adc
mov
fimul
mov
add
imul
lds
ja
xor
jae
cmp
sahf
enter
mov
(bad)
push
cmps
or
pop
hlt
add
rcr
pusha
(bad)
std
sbb
inc
fs
cmp
xchg
dec
cmc
inc
enter
push
adc
dec
outs
or
jbe
xor
out
fldln2
out
(bad)
into
cld
mov
pop
sbb
(bad)
mov
aaa
adc
lods
icebp
imul
in
inc
pop
adc
mov
mov
ja
sbb
loopne
data16
stos
out
repz
add
dec
inc
es
sbb
jmp
sbb
xchg
xchg
clc
test
inc
or
xor
lods
outs
(bad)
jge
push
sbb
dec
sub
js
hlt
xchg
or
jmp
call
ins
or
mov
add
jmp
and
(bad)
pop
xchg
sbb
aad
mov
mov
cmps
loop
xchg
nop
popf
inc
lds
ins
sbb
es
addr16
inc
jnp
push
pop
arpl
pop
xor
nop
fwait
sahf
ret
mov
cmc
and
aaa
emms
mov
pop
cmp
sbb
les
mov
arpl
inc
je
test
ret
xor
out
pop
mov
cmp
mov
dec
pop
les
(bad)
mov
in
int
icebp
mov
fs
leave
mov
inc
add
popa
xchg
inc
div
arpl
fsubr
stc
push
mov
jb
cmp
inc
dec
adc
out
cmp
daa
(bad)
dec
gs
(bad)
(bad)
sbb
(bad)
push
add
lods
jnp
sub
jg
pop
(bad)
dec
dec
xchg
add
mov
dec
dec
cmp
ds
inc
jb
mov
popa
call
fstp
dec
leave
mov
fldcw
out
sbb
bound
aaa
xor
xor
mov
loop
mov
movs
push
jmp
mov
dec
sub
outs
sbb
pop
imul
cmp
loopne
lods
ds
stos
jp
outs
fsubr
inc
xchg
or
mov
xor
push
cmc
mov
sar
std
leave
loopne
cmps
pop
icebp
mov
sub
jmp
or
retf
cwde
adc
jg
pop
lea
lds
gs
out
push
jb
das
aaa
sbb
outs
lds
inc
jg
xchg
stos
rcr
ds
idiv
scas
sbb
nop
or
pop
push
pop
popf
stos
scas
cdq
and
pushf
or
xchg
out
dec
pop
mov
dec
(bad)
pop
xchg
and
add
sbb
jae
aaa
add
not
out
aad
pop
into
pop
adc
test
lods
icebp
fnstcw
dec
cmc
inc
pop
mov
ret
sbb
pop
popf
popfw
push
push
arpl
xor
xor
push
int3
hlt
jp
mov
rcr
xor
xor
out
xlat
and
mov
cld
repnz
aaa
jmp
mov
or
inc
rcr
or
mov
(bad)
xchg
stos
out
pop
lods
cmc
sub
add
pop
jg
pop
sbb
sbb
fisubr
in
shl
xchg
or
adc
int
gs
mov
pop
inc
jmp
mov
jae
je
add
cmps
jo
in
push
adc
test
stos
call
push
ret
enter
jns
inc
stc
or
repnz
cmp
adc
dec
dec
or
inc
ja
jmp
pop
fs
(bad)
pop
scas
clc
call
leave
ds
jmp
pop
mov
not
push
fist
outs
jp
mov
(bad)
leave
cmp
mov
sub
test
aam
mov
sub
inc
xchg
data16
dec
jp
dec
jns
inc
jl
sub
and
rcl
sbb
fs
inc
sub
aad
jae
in
adc
push
mov
jecxz
jb
cwde
or
sbb
cmps
lock
jne
clc
jmp
bswap
mov
pop
iret
mov
push
loopne
js
mov
(bad)
loopne
mov
mov
addr16
mov
jnp
aam
sub
(bad)
cmps
xchg
stos
mov
repz
clc
pop
cld
lds
pusha
loop
jae
sbb
unpcklps
in
jb
movs
test
std
or
lea
call
inc
or
mov
fiadd
out
sub
inc
mov
aad
add
rol
push
adc
add
fimul
jno
push
mov
pop
mov
(bad)
out
jnp
outs
(bad)
popf
jb
and
mov
das
inc
popa
ss
sti
movs
ret
in
or
xchg
xchg
or
mov
sub
push
adc
test
imul
mov
add
test
sbb
shr
ins
ret
cmps
pop
sysenter
xor
sbb
pop
and
out
sub
or
arpl
ss
fdivr
sub
sti
mov
mov
and
shr
sub
hlt
ret
retf
sub
jmp
pusha
inc
and
outs
test
ins
in
xchg
xchg
inc
mov
xor
jmp
fmul
mov
mov
icebp
outs
repnz
and
pop
xlat
dec
retf
je
mov
ror
std
push
(bad)
das
dec
or
data16
shr
mov
pop
jg
inc
or
push
outs
jg
mov
jp
nop
not
js
pop
push
inc
idiv
adc
or
or
adc
popa
sbb
sbb
aas
or
inc
adc
mov
adc
mov
dec
aaa
add
sbb
jns
and
adc
sub
ret
or
pop
sub
xor
pop
cld
fwait
scas
cmps
sub
adc
iret
xor
xchg
lods
or
je
ret
inc
aad
jp
sbb
sbb
out
ins
data16
(bad)
in
popf
mov
dec
jge
pop
pop
retf
imul
mov
ret
and
setae
sub
adc
push
cmp
push
pop
xor
mov
fild
stos
xor
adc
add
xor
loope
int3
cdq
out
icebp
xchg
inc
push
imul
retf
int3
sub
rcr
(bad)
data16
(bad)
and
mov
dec
call
inc
sub
mov
popf
push
xchg
pop
mov
out
xor
(bad)
push
pop
cmc
int3
pop
fstp
push
xchg
jns
pop
jo
jp
mov
popa
movs
jl
aaa
mov
dec
mov
sar
cmp
loope
leave
mov
jno
jl
(bad)
mov
push
in
cmps
in
popa
mov
bound
or
stc
movs
into
ret
jb
or
sub
mov
setle
jb
pop
adc
ins
inc
sub
xor
in
sub
popf
push
leave
fmul
add
or
leave
mov
mov
mov
(bad)
inc
mov
je
sub
mov
push
or
loop
xor
ja
lock
push
rcr
test
push
cs
daa
push
stos
fisttp
pusha
aas
sub
(bad)
lock
or
div
push
hlt
sahf
add
add
ja
mov
jg
daa
cmc
xor
xchg
ja
adc
and
push
push
mov
aas
sub
rcl
aad
aam
mov
test
push
out
mov
xor
test
outs
push
inc
dec
leave
and
push
dec
pop
in
sub
mov
ins
stos
scas
inc
int
push
call
mov
jl
movs
push
test
sar
lock
mov
dec
jns
cdq
nop
mov
push
in
push
loopne
adc
and
sar
mov
and
stos
mov
mov
cmps
mov
inc
fist
inc
add
nop
lds
inc
mov
and
ds
push
fldenv
mov
jecxz
mov
or
xchg
cmp
push
mov
sbb
arpl
or
neg
and
xlat
jle
push
jp
mov
in
and
cmps
add
jp
dec
int3
mov
xchg
push
dec
test
jle
(bad)
imul
jle
sbb
iret
inc
cmp
adc
movs
retf
fist
aad
mov
cwde
jne
mov
arpl
retf
and
and
es
xchg
xchg
jb
test
add
mov
mul
or
xchg
out
aas
shl
sbb
jp
inc
and
adc
jb
xchg
scas
xchg
pushf
or
pop
popa
ja
popf
push
pop
inc
(bad)
and
jmp
or
idiv
mov
gs
(bad)
in
outs
mov
xor
loopne
xchg
std
or
mov
(bad)
jge
outs
mul
dec
repnz
in
aas
mov
in
inc
sub
pop
mov
inc
and
sahf
jnp
push
xchg
mov
mov
adc
addr16
push
(bad)
lods
dec
and
sbb
mov
sub
pusha
ficom
adc
neg
xchg
(bad)
xchg
ret
test
cmp
sub
sar
push
mov
arpl
addr16
xchg
mov
push
xor
loope
mov
cs
ds
mov
jmp
mov
add
in
(bad)
js
mov
jge
imul
neg
arpl
aas
inc
sub
arpl
xlat
fdivr
jmp
sub
bound
pushf
jecxz
sahf
sbb
cmpps
div
imul
ss
dec
fwait
xchg
sbb
or
leave
jl
pop
cmp
dec
lahf
das
hlt
xchg
jns
fcomp
mov
inc
pop
push
xchg
and
test
(bad)
mov
aad
inc
out
das
fwait
call
fild
inc
jl
push
lea
retf
cmp
xchg
outs
jnp
xchg
sbb
mov
(bad)
push
es
mov
(bad)
xor
repnz
mov
ror
into
(bad)
retf
dec
addr16
dec
and
imul
je
call
aam
add
pop
jo
sub
mov
add
imul
sbb
ret
(bad)
cli
xchg
mov
mov
hlt
pop
loopne
movs
iret
rol
cmps
outs
shr
icebp
sub
jo
jle
retf
bound
and
pcmpeqb
hlt
stos
cmc
stos
push
pop
xchg
dec
push
mov
(bad)
js
imul
mov
add
mov
xchg
clc
dec
mov
or
xor
test
cs
pusha
mov
add
clc
out
shl
std
inc
ins
pop
pushf
sbb
mov
popa
push
popf
in
inc
sti
xor
mov
push
pop
xchg
xor
add
mov
(bad)
ret
sahf
mov
lea
xor
xchg
out
inc
inc
dec
fidivr
rol
xor
fidiv
mov
outs
cmps
ins
out
mov
pop
mov
jno
mov
sub
and
push
inc
push
cmc
and
int
push
repnz
mov
ss
imul
lock
mov
cs
dec
lods
sub
sub
push
xor
sbb
and
rcr
lea
sti
inc
xchg
stos
or
push
or
ss
xchg
add
and
lods
add
or
sbb
fdivr
inc
and
jo
call
call
pop
int3
jp
scas
out
dec
out
sub
(bad)
push
and
dec
push
mov
imul
retf
push
sbb
mov
fadd
clc
int3
imul
mov
jne
xchg
(bad)
mov
xor
pusha
fisttp
push
push
cmp
cmps
jne
sub
not
cmp
fist
push
jnp
fimul
cmp
cmp
dec
jl
mov
ja
mov
ret
mov
leave
cmp
mov
je
xchg
into
and
clc
dec
pop
(bad)
xor
retf
xor
mov
hlt
cmps
or
std
ja
dec
cmp
repz
mov
and
mov
adc
call
jle
xor
stos
sbb
pop
cmp
mov
push
lea
addr16
fwait
pop
dec
sbb
cmp
js
daa
jb
xor
sub
scas
js
dec
dec
jo
mov
or
cmps
jno
xor
pusha
and
push
jns
in
jl
xor
mov
mov
pop
mov
sar
xor
xchg
ret
in
mov
mov
push
jo
cmp
pushf
mov
push
pop
shr
dec
jp
pop
mov
cld
jle
xor
add
dec
ja
jecxz
test
sub
pop
imul
repnz
push
sti
ds
push
scas
push
mov
mov
les
inc
inc
jno
mov
and
rcr
pop
or
sbb
xor
sub
inc
jno
fidiv
dec
popf
mov
test
jg
stc
jl
xchg
les
push
add
ret
popa
mov
int
in
mov
xor
stos
mov
aaa
and
fnstcw
mov
xor
je
mov
add
sub
adc
jno
and
loop
call
adc
cmp
pop
or
push
test
rcr
jno
sbb
cmc
out
(bad)
pop
rcr
jmp
cmp
lahf
or
xchg
inc
(bad)
jns
or
lods
out
shl
xchg
loop
mov
loope
pushf
ins
add
mov
cld
je
ins
mov
xchg
push
call
add
mov
arpl
in
fstp
jmp
fstp
hlt
cmc
or
cdq
dec
std
imul
out
xchg
xor
jp
lods
dec
pusha
or
xchg
std
mov
push
shl
or
ins
stos
add
data16
mov
pop
adc
dec
fld
aas
in
pop
out
mov
dec
cli
ja
jg
or
and
or
(bad)
ins
call
cli
sub
sbb
fcom
les
lds
push
xchg
enter
mov
mov
arpl
dec
mov
mov
mov
add
adc
sub
das
sbb
adc
inc
fst
jecxz
lods
jne
(bad)
into
lods
into
jns
and
and
push
pop
sbb
ret
xor
int3
test
lock
xchg
loop
add
rep
pop
pop
fcmove
inc
cmp
mov
inc
pop
add
lds
ds
adc
imul
lods
adc
jmp
push
cmp
dec
mov
pop
mov
xchg
push
repz
lahf
or
pop
js
das
add
cmps
adc
adc
ds
inc
cmp
jg
ins
cmp
push
sub
(bad)
dec
mov
cld
shr
stc
movs
loope
(bad)
aas
mov
movaps
sub
dec
gs
inc
pop
sub
outs
sbb
outs
sub
adc
add
pop
ds
out
(bad)
inc
push
fwait
(bad)
push
cld
rol
or
inc
xor
fdiv
fcom
mov
mov
dec
mov
test
(bad)
or
sbb
call
test
xor
and
jmpw
and
mov
(bad)
push
push
(bad)
xchg
pushf
pop
xlat
mov
shr
mov
jge
repz
pusha
test
enter
or
xchg
in
and
or
call
mov
pushf
ja
es
or
neg
xchg
scas
iret
aas
xchg
fisubr
shr
scas
nop
call
out
jae
xchg
jl
sub
sub
inc
int
into
test
arpl
mov
push
push
ja
and
retf
push
outs
pop
mov
sbb
outs
fwait
pop
mov
sbb
int3
add
mov
and
call
js
push
or
sbb
shl
sar
je
adc
dec
jmp
cmp
enter
cmp
lahf
js
cmps
mov
push
jae
loopne
jg
and
sbb
int
test
inc
sbb
mov
dec
and
test
jl
xchg
mov
add
jp
push
mov
std
inc
cld
div
in
neg
jb
pop
mov
sbb
push
lock
xchg
add
jbe
push
pop
cmp
sbb
sbb
pop
movs
test
in
push
mov
shl
cmp
dec
(bad)
jmp
clc
enter
cdq
addr16
je
cmp
xchg
mov
mov
aam
dec
je
daa
inc
jno
sub
push
sahf
jne
shld
and
ins
fwait
outs
test
pcmpeqd
stc
adc
or
push
dec
nop
outs
scas
and
push
sub
adc
(bad)
pop
ss
sub
or
jmp
call
dec
addr16
cmp
add
jmp
sub
cwde
enter
push
les
clc
imul
mov
pop
and
xor
fstp
adc
jge
ret
xchg
mov
push
scas
loop
or
inc
(bad)
push
enter
add
cmps
lds
pop
sub
or
lods
daa
mov
adc
jb
cmp
mov
push
ret
shr
inc
stos
and
mov
ss
push
and
dec
mov
outs
inc
cmp
hlt
xlat
lods
push
ja
cmp
xor
(bad)
inc
scas
push
push
jge
xchg
stc
pop
arpl
sti
inc
dec
ret
xlat
daa
pop
add
jmp
fld
add
sub
dec
push
call
add
lods
jl
mov
sbb
into
cmp
mov
add
dec
mov
stos
or
stos
push
xchg
or
dec
popf
int3
loop
in
dec
pop
cmps
jmp
jb
scas
loop
imul
mov
test
pop
or
daa
sub
or
shr
sub
jge
retf
std
fsubr
scas
addr16
or
sub
fs
push
stc
mov
loop
test
or
jg
jnp
sbb
jbe
add
sub
int
cmp
pushf
xor
push
mov
test
pop
sub
shr
call
push
mov
and
idiv
(bad)
pop
pop
ja
lods
xor
and
scas
test
inc
sbb
mov
int
pop
ja
and
ja
fst
mov
dec
sbb
dec
and
mov
dec
test
jmp
mov
cmp
pop
adc
in
mov
adc
loop
fmul
inc
mov
dec
lods
out
xor
cdq
sbb
mov
add
xchg
dec
and
mov
adc
ja
sub
xor
jns
push
je
sti
pusha
mov
test
scas
adc
and
scas
sbb
sar
adc
retf
scas
cmc
stos
fld
(bad)
push
cwde
aam
mov
cdq
mov
jl
dec
pop
movs
xchg
adc
sti
or
lods
push
(bad)
loope
add
retf
xor
test
push
in
scas
sti
out
jmp
shl
in
dec
loop
(bad)
test
aam
cmp
(bad)
imul
jp
stos
or
add
mov
cmp
pop
ret
jae
cs
mov
mov
loopne
(bad)
iret
adc
inc
inc
(bad)
jb
retf
mov
dec
mov
imul
xchg
sub
lods
cmp
and
cmc
das
(bad)
mov
push
data16
std
test
or
or
leave
ins
dec
sub
jno
xor
cli
pop
push
sbb
mov
popf
mov
movs
fcomp
lock
daa
jnp
(bad)
pushf
sub
add
lds
fstp
adc
and
and
(bad)
loop
inc
out
cmps
xchg
and
jnp
xor
fmul
cmc
dec
aad
(bad)
mov
out
push
jo
push
inc
xchg
data16
rcr
mov
out
sbb
mov
lahf
cmp
or
pop
and
lods
das
jl
in
arpl
pop
sub
pop
jp
mov
out
rcr
jae
fdiv
rcr
mov
jecxz
cmps
adc
fistp
(bad)
jle
jo
jns
xchg
(bad)
jmp
xchg
scas
cmp
aas
iret
sti
sbb
pusha
dec
adc
ds
mov
mov
push
cmp
mov
mov
push
adc
in
scas
sub
js
(bad)
loopne
pop
loopne
push
shl
cmp
mov
mov
stos
(bad)
lock
or
xchg
iret
push
ror
in
inc
sub
int3
rol
movs
pop
cmp
xlat
dec
loope
imul
icebp
rcr
dec
and
stos
(bad)
pop
push
pop
or
xchg
xchg
inc
jle
dec
push
in
sbb
adc
test
out
out
retf
int
ret
pop
jg
dec
loope
cmp
add
adc
jns
xchg
mov
fild
fwait
ds
in
or
sub
stos
mov
sti
and
adc
jmp
arpl
xchg
loop
mov
xor
sub
jo
xchg
mov
or
jecxz
out
and
imul
sub
mov
loop
inc
into
jg
or
or
sbb
cmp
aaa
call
pop
inc
push
imul
xchg
cs
movs
call
xchg
ret
xor
(bad)
dec
push
push
cld
push
inc
or
outs
test
ror
xchg
jmp
and
aad
and
out
shl
or
stos
in
pop
mov
mov
push
mov
fiadd
pusha
cmp
mov
inc
mov
inc
dec
idiv
(bad)
push
in
jmp
sub
push
jmp
daa
inc
cli
sar
rcl
stc
nop
inc
popf
(bad)
and
or
mov
repnz
jg
xor
call
sti
mov
dec
clc
pop
add
jnp
outs
lds
call
mov
push
fisub
in
jne
sub
lods
rcr
push
pop
pushf
add
cmps
pushf
test
mov
repz
pop
repz
outs
mov
mov
inc
pop
xlat
jmp
sub
(bad)
into
xor
mov
inc
inc
pusha
fucomip
mov
dec
pop
xchg
cmp
cs
mov
(bad)
pushf
sub
mov
xchg
jo
(bad)
inc
movs
push
dec
outs
inc
add
jae
mov
push
mov
adc
mov
mov
add
cmps
imul
xchg
adc
sbb
pop
jle
sub
test
sar
jb
inc
and
retf
rol
call
clc
(bad)
or
push
mov
ins
call
adc
xchg
sub
jmp
std
into
int3
fcomi
xchg
pop
jmp
mov
ret
pop
sub
sbb
push
ret
push
pusha
loop
retf
sbb
mov
xor
inc
das
(bad)
xchg
adc
mov
mov
jns
inc
sub
pop
inc
hlt
(bad)
outs
movs
push
lods
inc
shl
imul
mov
mov
xlat
add
pop
aas
aaa
inc
pushf
in
mul
cs
je
js
popf
and
rcr
jle
cdq
retf
pop
fwait
or
popa
dec
(bad)
sub
test
retf
es
and
xchg
adc
ret
lods
in
mov
btr
clc
inc
cld
xlat
shr
dec
test
fdiv
sub
mov
adc
lahf
inc
in
push
loopne
push
cld
cwde
lods
jmp
adc
and
scas
pop
dec
push
mov
cs
sub
iret
cs
push
aas
ja
data16
mov
imul
sub
cwde
adc
adc
imul
cmps
into
xor
jb
and
out
jns
mov
and
fld
(bad)
push
aad
jmp
adc
jns
(bad)
aas
mov
(bad)
stc
dec
lods
inc
push
lods
mov
(bad)
jne
dec
fist
adc
jmp
jo
and
adc
in
imul
lods
xchg
mov
cmc
daa
dec
jecxz
mov
int3
mov
mov
sbb
sti
pop
ret
inc
bound
mov
leave
jmp
in
pop
in
adc
fimul
(bad)
xor
sbb
sub
cs
jae
add
sbb
xchg
ds
ja
repz
neg
inc
xor
loop
sbb
stc
cld
push
ficomp
mov
ja
push
jb
sub
dec
mov
sbb
cmp
and
std
jno
mov
ins
push
sbb
xor
jnp
movs
adc
adc
ror
test
rcr
adc
cmp
fcomi
mov
mov
iret
test
repnz
dec
call
mov
enter
fbld
mov
jp
mov
jo
sbb
pop
jg
in
jmp
leave
mov
retf
add
push
xchg
cdq
mov
(bad)
push
rol
popw
retf
scas
cmp
mov
aad
lahf
mov
cmp
outs
test
cwde
outs
xor
pop
push
(bad)
cmp
mov
mov
mul
js
add
and
pop
mov
jg
adc
data16
dec
add
movs
rcr
cmc
xor
mov
stos
retf
pop
sahf
sub
jl
jg
ror
xchg
push
out
fs
das
mov
jg
mov
adc
imul
outs
sub
cld
mov
pop
add
inc
jmp
push
outs
cmp
sahf
icebp
dec
push
xor
pop
xchg
mov
in
dec
inc
jne
xlat
mov
lds
popa
adc
pop
xor
stc
rcl
mov
popf
sub
xchg
sti
test
xchg
inc
test
loopne
add
cmps
push
daa
jg
xchg
dec
push
lods
(bad)
movs
or
loop
xchg
rol
cmp
adc
clc
xchg
icebp
xlat
mov
add
lods
out
lods
sbb
pushf
mov
dec
add
repnz
and
inc
add
ret
les
push
aam
jns
popf
or
je
xor
xor
jle
dec
(bad)
and
pop
in
pop
add
push
dec
aad
test
cld
jae
push
xchg
outs
lea
fadd
movs
lea
lahf
ds
nop
mov
std
lock
xor
mov
mov
stos
cli
adc
lds
(bad)
out
add
cmp
iret
xor
dec
das
addr16
test
sar
xchg
cld
mov
xlat
mov
pop
leave
push
mov
sub
or
mov
aam
dec
pop
and
cmp
xor
mov
aam
push
mov
fadd
pop
clc
lock
mov
ins
pop
shl
cmp
adc
add
mov
pusha
leave
imul
mov
lea
aad
aad
adc
or
or
push
call
inc
inc
daa
retf
pop
les
sub
icebp
(bad)
into
outs
and
xor
ja
mov
into
popf
mov
(bad)
mov
dec
mov
fisttp
adc
cwde
es
js
mov
jecxz
xor
loope
loop
adc
pushf
lahf
repnz
pop
inc
cmp
bound
out
jmp
inc
test
and
sti
and
cmp
std
push
sti
fld
push
std
cmps
push
leave
xchg
into
dec
out
repnz
out
stos
or
movs
push
scas
jmp
int
adc
xchg
add
dec
bound
cmp
in
loop
js
adc
xchg
les
jmp
(bad)
cmp
push
jg
call
xor
or
xor
ds
jge
sub
xchg
mov
push
stc
call
out
fmulp
push
fstp
retf
inc
pop
xor
mov
mov
jno
and
in
mov
shl
aad
push
cmps
add
fbld
mov
movs
mov
test
dec
ja
call
es
xor
sbb
mov
loop
gs
stc
cmp
jns
out
sub
or
movs
xor
push
mov
in
or
das
retf
punpcklwd
xchg
sub
fidivr
and
imul
retf
fucom
xchg
xor
jae
gs
sbb
loop
mov
ins
pop
or
jg
push
xchg
cmp
cdq
mov
dec
hlt
ins
das
aam
and
rcl
mov
xor
and
jbe
sti
sbb
stos
(bad)
hlt
pop
xor
inc
jmp
dec
cmp
sub
fcomp
jle
outs
out
das
fisttp
movs
call
add
mov
les
inc
xor
xchg
jge
dec
in
mov
adc
cmp
jge
xor
pop
sbb
mov
lods
outs
fs
and
jl
fsubr
mov
mov
pop
das
push
mov
ror
enter
pop
or
lea
cmc
push
rcr
loop
mov
push
pop
and
(bad)
cs
sub
and
neg
rcr
and
aam
imul
or
xor
hlt
add
ss
mov
push
xor
in
ffree
jl
or
mov
scas
mov
mov
pop
leave
or
mov
scas
mov
xchg
sbb
in
push
mov
fs
es
bound
rcl
sub
mov
sub
jb
les
xor
push
enter
popa
nop
inc
pop
aaa
sub
sub
icebp
xchg
xchg
ins
jns
in
adc
add
lods
(bad)
sub
xchg
mov
sar
leave
dec
xor
pop
scas
outs
pop
jmp
fst
stc
mov
sub
mov
adc
cmps
fcomp
cmp
lahf
mov
call
movs
out
div
sbb
sub
retf
popf
jle
jmp
daa
stos
xchg
push
xchg
ins
cmps
retf
fdivr
or
pushf
cmp
jno
popa
loop
in
cs
add
sbb
movs
lods
cmp
xlat
adc
test
xor
mov
mov
data16
es
sbb
call
mov
daa
add
in
ins
stos
jae
cmp
sub
mov
cmc
add
lods
mov
pop
xchg
or
add
mul
push
(bad)
dec
adc
push
cmp
sub
cdq
mov
jb
and
dec
jnp
sahf
lock
or
ins
es
aam
add
sub
jmp
push
xchg
lds
sbb
movs
and
inc
pop
fwait
push
cmp
iret
mov
ror
xor
fimul
(bad)
das
adc
mov
rcr
mov
pop
in
inc
imul
rol
jns
and
xchg
xor
mov
imul
dec
(bad)
jb
xor
popf
cli
imul
sub
and
call
push
out
ja
pop
mov
mov
xlat
popa
push
rol
mov
cld
shl
fsubr
lds
jl
jae
inc
arpl
cmp
jae
mov
xchg
mov
(bad)
scas
jb
pop
inc
or
xor
fsubr
add
mov
std
mov
push
aad
cmp
dec
or
shr
lds
pop
div
dec
push
dec
sub
mov
rol
xchg
inc
mov
add
sbb
cmp
pop
sbb
nop
fisubr
xchg
ja
mov
movs
pop
push
loope
idiv
inc
fwait
add
sbb
das
in
inc
cs
inc
pop
imul
mov
aad
mov
mov
retf
adc
xchg
mov
sub
or
fistp
inc
std
or
push
fldcw
push
jle
imul
stos
arpl
or
mov
dec
sub
dec
and
dec
add
test
mov
xor
test
and
fld
mov
mov
mov
and
push
(bad)
mov
das
jge
cmps
sub
stc
pop
(bad)
cwde
inc
add
inc
das
mov
xor
ins
push
adc
popa
dec
sbb
and
fst
xor
in
gs
int3
mov
mov
xor
lods
push
popf
sub
add
in
pushf
mov
push
mov
adc
jo
movs
push
add
pop
cmp
inc
push
sar
lock
mov
push
add
ror
mov
inc
int
jbe
inc
sub
cs
icebp
mov
add
fisub
push
ret
cmc
dec
inc
cmc
test
jl
(bad)
dec
fdiv
push
dec
retf
ins
fild
or
pop
cmps
rcr
pop
mov
cmc
cdq
adc
xor
adc
ss
add
dec
test
xor
cmp
fst
test
mov
gs
mov
sub
cwde
cmp
push
cmp
call
psubsb
cmp
xchg
out
test
out
ror
jb
cs
add
xchg
ds
clc
and
jb
dec
push
xchg
icebp
movs
lds
lods
push
dec
fdivr
adc
jns
ja
jge
iret
push
jl
(bad)
stos
mov
fld
cmp
sub
(bad)
stos
scas
xor
pop
nop
call
shl
adc
lock
into
mov
inc
ds
xchg
pop
add
add
stc
mov
mov
pop
xor
mov
fisttp
xor
stos
and
push
fidivr
sub
clc
dec
pushf
pop
ins
(bad)
jnp
jno
sbb
add
out
or
xor
add
test
(bad)
xchg
lods
add
repnz
shl
js
mov
and
imul
jle
fdivr
test
idiv
or
gs
adc
add
movs
add
add
inc
mov
div
pop
dec
xor
xchg
(bad)
ds
ins
xor
scas
adc
sub
mov
jno
or
xchg
jp
cli
xchg
push
jg
xchg
daa
loop
pop
ins
mov
mov
out
inc
mov
inc
inc
(bad)
loope
mov
gs
ret
pop
adc
jg
fldpi
mov
(bad)
out
ret
stc
mov
adc
mov
call
jp
and
fidiv
add
cmps
jbe
nop
mov
mov
inc
or
addr16
mov
mov
test
dec
test
mov
arpl
dec
aaa
pusha
cwde
dec
sbb
adc
lods
int
mov
jae
lea
xchg
push
or
pop
or
and
icebp
clc
add
sbb
(bad)
dec
movs
js
(bad)
cmps
mov
or
ins
mov
addr16
add
sub
out
lods
(bad)
fisub
imul
jno
pop
xor
ins
leave
pop
push
mov
or
loope
imul
jl
adc
xchg
dec
xchg
cmp
mov
js
shr
and
mov
ins
jae
jbe
shr
test
xchg
test
push
pop
int
mov
xor
ja
mov
rcl
xor
fst
imul
rol
xor
push
jo
es
les
loopne
mov
cdq
les
add
sub
arpl
mov
ins
into
jne
jle
inc
xchg
retf
xchg
dec
into
imul
or
les
mov
js
mov
call
jp
adc
int3
clc
and
fldenv
xchg
cmp
pop
and
sub
sar
retf
jb
inc
pop
mov
add
aas
in
dec
inc
push
dec
adc
retf
aas
ja
aad
mov
inc
fdivrp
push
or
adc
cs
mov
push
add
pop
sub
xor
data16
mov
push
sbb
xor
cmps
jg
sti
mov
push
imul
cmp
inc
rcr
ins
js
mov
sub
fnstsw
mov
push
push
mov
jge
dec
push
fild
jnp
mov
icebp
scas
pop
jmp
mov
xchg
jl
push
out
push
fidiv
pushf
mov
mov
xor
pop
shl
push
and
fisttp
inc
push
dec
add
push
mov
ins
push
jl
mov
bound
stos
cmc
aam
stc
add
fs
or
rcr
ja
in
cmp
push
cdq
stos
jl
jmp
mov
leave
cwde
lds
push
repz
push
fs
adc
out
push
fcomi
iret
lods
xchg
leave
xlat
cmc
loop
rol
adc
pop
ror
jno
es
xchg
add
ror
fst
in
hlt
inc
dec
out
pop
clc
or
repnz
sar
test
jno
in
out
aad
ficomp
push
dec
gs
stc
inc
add
enter
repnz
ja
ror
fld
fbld
ds
cli
inc
xchg
out
adc
aaa
xchg
lods
sti
xor
xchg
cmps
ss
mul
pop
sbb
loop
jbe
mov
mov
stos
cmps
push
push
push
mov
cmp
sbb
cmps
and
cwde
imul
jp
or
enter
je
or
jnp
mov
xchg
neg
or
xchg
and
xor
mov
mov
mov
jmp
lods
dec
xchg
adc
ss
mov
mov
ds
sub
test
cmp
push
fld
xor
leave
bound
loop
ins
and
lock
sub
push
inc
inc
pop
fs
(bad)
cmp
(bad)
adc
mov
nop
xor
cmps
popa
bound
(bad)
mov
es
inc
pop
dec
jmp
lahf
mov
popf
je
imul
jge
ja
or
xor
(bad)
xchg
mov
cmps
add
adc
loop
and
add
add
pop
out
loopne
mov
or
imul
jb
daa
push
ins
mov
shl
mov
mov
pop
mov
mov
inc
mov
neg
call
mov
inc
cld
add
call
into
push
inc
sbb
ss
mov
pop
ficomp
leave
xor
add
pusha
mov
jmp
sahf
hlt
xor
aas
(bad)
mov
add
jmp
arpl
shr
cld
xor
push
scas
scas
adc
popf
pop
mov
imul
xor
ja
movs
(bad)
movs
mov
cmpxchg
jp
and
xchg
loop
lods
xor
mov
sti
sbb
jno
mov
add
nop
xor
or
push
int
inc
adc
jecxz
sub
and
jmp
scas
push
int
aas
add
mov
ins
jbe
cmp
stos
scas
addr16
fstp
xor
ret
retf
lods
out
jle
xchg
or
push
aam
lea
rol
gs
fs
sbb
adc
fist
cld
mov
ret
ret
cmp
xchg
adc
xchg
jmp
or
mov
mov
in
jno
inc
in
xor
xchg
cld
jmp
sub
dec
push
inc
out
imul
test
dec
dec
xor
pop
sahf
cmp
loopne
out
mov
and
pop
push
xchg
data16
mov
cwde
cmp
sub
inc
icebp
lock
ins
int
sub
es
sbb
mov
sbb
cmp
sahf
out
and
pusha
inc
mov
fwait
sub
jg
enter
dec
sti
test
jb
js
cmps
mov
fimul
or
mov
pop
mov
stc
jmp
call
sub
call
jnp
pusha
jg
xchg
mov
(bad)
imul
into
xchg
imul
dec
call
fwait
daa
jbe
mov
in
dec
mov
cmc
jns
adc
stos
nop
out
jmp
aad
mov
add
inc
js
aaa
dec
arpl
mov
adc
sub
frstor
mov
mov
daa
xchg
in
gs
push
jge
mov
into
icebp
(bad)
int
add
test
stos
dec
pop
ins
push
cmp
imul
jo
ja
cli
dec
popf
(bad)
cmp
je
sbb
xlat
xor
adc
adc
or
push
arpl
int3
lock
js
sbb
lahf
(bad)
js
inc
dec
jb
dec
cmp
jecxz
mov
and
(bad)
pop
in
clc
sub
mov
adc
cdq
xchg
out
dec
pushf
mov
xchg
leave
sbb
xor
dec
jns
cmp
inc
push
mov
lahf
add
stc
scas
mov
or
xchg
cmp
fdivr
xor
cmps
ja
clc
add
xchg
jge
dec
sub
jge
aam
pop
push
in
jo
mov
jbe
mov
lahf
fcom
pop
rol
bound
loopne
aas
pop
pmullw
repz
mov
cmp
aaa
cmp
cmp
xchg
adc
icebp
adc
call
leave
mov
call
scas
lds
mov
clc
lods
pop
adc
jbe
outs
aad
jo
pop
imul
push
into
int
gs
popf
dec
xchg
mov
dec
hlt
or
sbb
xchg
sub
xchg
push
in
jle
mov
push
dec
adc
icebp
and
stc
(bad)
cmp
adc
mov
pop
(bad)
xor
xor
ss
lds
je
mov
xchg
(bad)
imul
pop
pusha
dec
stos
xchg
xchg
shl
imul
ficomp
jge
sahf
jge
dec
xchg
xor
dec
sahf
iret
lahf
leave
jne
or
mov
js
adc
idiv
mov
mov
fdivr
inc
cmc
mov
inc
mov
lods
hlt
nop
dec
sbb
mov
movs
stos
sbb
stos
mov
sub
repz
shl
mov
sahf
jbe
sub
or
shl
out
mov
lods
out
sbb
inc
movs
pop
sbb
bound
xchg
mov
ss
test
in
pop
ror
shl
sbb
outs
jns
xchg
in
stc
rcl
push
pop
dec
std
mov
movs
addr16
pop
ins
sar
leave
std
mov
sar
inc
add
cdq
das
xchg
sbb
pop
pop
inc
dec
sahf
inc
jmp
and
jb
jmp
mov
or
test
add
dec
add
mov
cmp
and
mov
aad
push
stc
pop
pop
push
mov
dec
arpl
dec
cmp
cmp
lock
jle
xchg
add
pop
mov
sub
push
into
and
inc
xor
mov
sub
pusha
loop
ret
mov
shr
inc
push
and
inc
fwait
add
ins
push
in
and
sub
clc
neg
pop
rcl
mov
out
or
mov
cmp
push
mov
cmp
psubsw
or
push
ret
ins
sbb
xchg
push
fst
iret
xor
std
ja
jecxz
fcompp
mov
mov
adc
jae
popa
lahf
test
inc
ror
ds
pushf
sbb
push
xor
fsub
test
sub
mov
mov
test
inc
pop
adc
add
or
sub
in
xchg
dec
bound
popa
mov
shr
cdq
push
imul
and
sbb
add
loopne
pop
push
call
jmp
xor
jmp
jge
retf
test
outs
add
push
inc
adc
pop
push
and
inc
scas
inc
outs
and
jnp
dec
fisttp
adc
cwde
jne
sbb
mov
pop
mov
mov
jo
aas
jle
call
pop
psrlw
mov
imul
pop
inc
adc
lds
pop
daa
add
dec
or
shl
data16
cmps
xor
rcl
xchg
out
mov
call
xor
(bad)
popa
lock
fsub
in
pop
ret
call
(bad)
push
pop
ret
shl
aad
mov
xor
sub
jle
xchg
pop
mov
les
sar
in
mov
je
sub
sbb
dec
mov
psrlw
and
pop
inc
loopne
out
pop
fs
push
jno
push
mov
pop
fs
push
mov
sub
inc
push
les
xor
jo
shr
sbb
jmp
jg
outs
add
mov
dec
xor
out
test
(bad)
cmp
lds
iret
out
retf
lock
add
xor
int
arpl
xchg
sub
pop
(bad)
data16
ins
(bad)
call
xchg
or
sbb
je
pusha
dec
stos
fsubr
pop
sahf
cmp
test
data16
push
cdq
add
jno
pop
add
push
lock
imul
das
push
rol
jmp
iret
mov
arpl
mov
inc
mov
mov
dec
pop
and
mov
int3
leave
sub
dec
xchg
jg
outs
pop
push
mov
mov
test
adc
jmp
inc
cmp
cmp
daa
ins
lods
mov
jg
call
int
or
mov
pop
xlat
jecxz
aaa
mov
push
mov
push
in
cmp
xor
repz
adc
cs
sar
imul
movs
(bad)
mov
xchg
sti
sahf
lock
xor
repz
cmp
rcl
push
hlt
xchg
jns
add
loope
sub
pop
sub
xor
test
cld
test
push
jbe
loope
add
jecxz
aas
jns
ret
call
retf
adc
pop
add
xchg
mov
stos
(bad)
fdivrp
nop
jg
aaa
adc
mov
dec
lods
popa
sar
sbb
adc
xchg
inc
jmp
mov
icebp
mov
jmp
fidivr
mov
imul
dec
mov
mov
or
sbb
popf
mov
cmc
ror
out
stos
jl
les
dec
inc
adc
jecxz
mov
xchg
pop
push
inc
pushf
jg
cmp
pushf
jne
imul
add
push
add
loopne
mov
call
sub
fsubr
sbb
or
jns
mov
xor
lea
stos
cwde
cs
push
mov
(bad)
mov
push
push
fcmovbe
test
mov
in
ret
and
scas
cdq
and
lds
sbb
les
inc
inc
ficom
add
int3
mov
lods
jne
pop
push
mov
mov
pushf
adc
dec
shl
push
dec
pop
fcom
jg
jnp
jge
or
in
aam
lods
(bad)
(bad)
dec
fst
jecxz
jmp
mov
mov
jp
push
cld
adc
push
xchg
(bad)
into
mov
imul
jp
push
imul
in
xor
pshufw
pusha
pop
mov
sub
and
xchg
out
iret
jae
out
and
xor
cld
add
xchg
lds
mov
pop
lock
mov
push
fucomip
ret
loop
mov
sti
pop
cmp
(bad)
jb
in
bt
and
(bad)
jp
test
push
inc
jb
mov
mov
pop
mov
cmc
js
les
xchg
adc
mov
rcl
stos
and
jbe
lea
fs
test
and
ret
add
pop
mov
rcl
xor
stos
xor
cs
fsubr
rol
and
mov
push
inc
cmc
push
shl
xor
cwde
mov
inc
cmps
dec
pop
inc
ja
das
rcl
xchg
xor
sub
adc
(bad)
add
ret
clc
jns
icebp
jno
cmps
scas
jge
xor
push
jbe
inc
ds
shl
repnz
push
fcmovne
mov
sar
test
push
or
mov
mov
push
sbb
cdq
mov
adc
aaa
mov
repnz
mov
shl
inc
addr16
fadd
das
int3
int3
push
mov
stc
cmp
push
and
fisubr
aam
mov
in
cmp
mov
sub
out
push
add
xchg
sbb
iret
xchg
xor
dec
stos
fnstsw
adc
movs
pop
jge
mov
ja
sahf
mov
sbb
enter
inc
imul
mov
sbb
cmp
call
sbb
pop
xchg
lods
add
add
cmp
daa
dec
ret
mov
ret
xchg
cmps
mov
iret
mov
or
or
xchg
jecxz
jge
add
push
outs
push
test
je
mov
lods
les
mov
sar
cmp
xor
add
mov
mov
aam
mov
mov
mov
out
mov
jae
push
push
add
mov
daa
mov
cmp
loope
push
fisttp
xor
push
mov
pop
jno
popw
int3
scas
(bad)
fstp
add
mov
(bad)
dec
lea
sbb
ja
cmp
outs
jmp
in
dec
and
jno
femms
sar
adc
cmp
xchg
jle
mov
push
fisubr
gs
cdq
dec
xchg
inc
gs
(bad)
jl
sahf
hlt
call
aad
loopne
jmp
mov
popa
mov
add
enter
mov
push
out
xchg
repz
fbstp
stos
mov
and
loop
mov
fst
push
pop
adc
fbld
jne
push
test
aam
inc
shl
scas
loop
test
sar
(bad)
sbb
pushf
adc
in
inc
das
xor
and
loop
push
sub
and
sub
jecxz
or
(bad)
test
mov
push
push
jmp
and
rol
int3
jno
iret
aaa
or
sbb
add
cdq
enter
in
mov
lahf
xchg
repnz
ret
ins
push
cmc
jo
sbb
dec
int3
repz
adc
jmp
mov
mov
push
das
xchg
push
es
push
push
mov
or
pop
iret
add
add
cld
dec
push
imul
cdq
push
aas
imul
mov
mov
cwde
and
in
push
sub
(bad)
dec
add
(bad)
retf
push
imul
inc
push
sub
and
mov
mul
loop
hlt
in
jnp
cld
cmp
inc
not
call
rcl
icebp
lea
xchg
sbb
mov
or
call
and
in
push
add
cmovg
push
sub
cmps
cmp
cmp
cmp
(bad)
ret
mov
into
popa
jmp
call
jno
sub
dec
mov
inc
pop
mov
mov
fcom
call
push
add
add
addr16
cmp
icebp
cmc
fdiv
jge
sub
adc
and
xchg
lock
mov
xchg
cmp
cld
and
inc
jno
dec
sub
mov
mov
test
xchg
clc
inc
adc
mov
aaa
mov
test
call
iret
outs
stc
jge
mov
mov
arpl
jecxz
(bad)
rcr
push
mov
ret
jne
scas
out
cmp
and
repnz
ret
aas
xchg
ins
out
test
mov
pop
mov
jo
add
push
pop
cmp
pop
push
(bad)
sahf
inc
mov
add
sub
aam
mov
out
aam
or
test
push
aam
push
and
xor
lahf
out
inc
mov
repz
mov
movs
dec
adc
xchg
es
adc
add
pop
mov
push
outs
bound
mov
cmp
sar
shl
or
dec
lock
clc
xchg
sbb
mov
inc
dec
push
pop
jg
rcl
xchg
js
pop
shl
jle
xor
hlt
fstp
out
das
fistp
(bad)
jecxz
arpl
mov
mov
stos
mov
adc
and
call
lds
pop
(bad)
dec
je
out
call
xlat
mov
dec
(bad)
xchg
add
gs
sbb
outs
sbb
mov
sahf
arpl
arpl
sbb
cmc
or
movs
dec
adc
jl
dec
or
int
in
cmp
scas
ret
pop
mov
outs
ja
jmp
mov
jnp
and
pop
imul
out
jp
mov
xor
je
mov
loop
cmps
mov
ret
pop
(bad)
lds
sub
fstp
cli
rcr
jns
loopne
imul
leave
xchg
jnp
cdq
(bad)
jge
repz
mov
pop
cmc
(bad)
jg
cmp
inc
aam
(bad)
not
jb
push
es
rcr
mov
or
or
cmc
lods
fnstcw
rcl
shl
rcr
jecxz
imul
push
aas
shr
pop
stos
dec
jl
jno
mov
push
xor
cdq
and
inc
les
fidivr
cdq
repnz
sti
rcl
add
test
in
push
gs
jmp
mov
mov
cmp
cs
loope
js
adc
in
sbb
dec
mov
push
popa
push
pushf
je
jb
rcl
xor
ficom
fld
mov
test
and
mov
jb
jae
mov
loope
jp
dec
dec
fs
(bad)
and
js
fwait
inc
inc
leave
xlat
fist
jno
push
iret
daa
scas
das
movs
push
jnp
sub
push
add
rcr
mov
(bad)
xor
in
(bad)
lods
push
sbb
or
(bad)
pop
inc
(bad)
les
fild
xchg
inc
mov
in
and
cmp
sahf
cmp
mov
push
in
inc
stos
xchg
jmp
adc
or
dec
pusha
imul
lods
cs
mov
fwait
lock
js
jb
out
jns
imul
adc
mov
adc
jmp
dec
cdq
das
movs
rcr
mov
inc
xchg
fiadd
fwait
jmp
jg
pop
push
push
mov
sar
sbb
and
push
sub
pop
xchg
mov
bound
shl
inc
mov
cmp
out
out
cdq
es
pop
aaa
pop
jno
inc
sbb
clc
xchg
pop
dec
pop
mov
adc
in
scas
inc
shl
inc
xchg
dec
test
mov
in
xor
and
iret
mov
aam
add
push
mov
push
adc
jg
lds
int3
outs
mov
aaa
sub
jb
jo
jne
es
add
outs
aad
sbb
adc
mov
push
add
inc
lds
sahf
stc
inc
mov
mov
dec
outs
aaa
int3
mov
or
adc
neg
and
jp
mov
pop
out
pop
icebp
inc
push
addr16
retf
dec
hlt
retf
dec
adc
std
pop
icebp
pushf
and
xchg
jmp
(bad)
js
arpl
or
push
and
mov
push
and
cld
das
ret
lahf
jle
xchg
and
inc
das
ins
xor
lods
or
push
inc
in
push
ss
adc
mov
inc
jle
cmps
adc
jno
xor
dec
xchg
adc
enter
mov
cmp
xchg
arpl
sbb
lahf
sub
jmp
sub
lock
test
pop
push
cld
test
cmp
lahf
xlat
fld
lock
jbe
mov
bound
rcr
cwde
daa
loopne
dec
in
cwde
or
cmp
mov
xor
jmp
pop
mov
imul
rol
sbb
push
aad
rol
cmp
icebp
push
jl
mov
or
std
mov
sub
add
mov
icebp
dec
iret
mov
mov
bound
jl
ror
test
mov
xor
sbb
sti
lods
cs
push
sbb
(bad)
sub
xchg
mov
(bad)
int
mov
pop
push
cdq
fdivr
xchg
or
nop
cmp
jnp
fidiv
dec
bound
aas
and
xchg
out
sar
call
add
cmp
dec
fcom
ins
adc
pop
pop
and
or
test
and
cmp
adc
out
movs
push
loope
push
xchg
fxtract
gs
in
ror
(bad)
fs
(bad)
jnp
cdq
push
add
(bad)
sub
or
cmp
test
or
and
mov
inc
mov
sub
or
mov
fcomip
pop
mov
scas
and
mov
popf
mov
(bad)
movs
movs
cli
inc
lods
mov
rol
inc
test
sbb
pop
dec
popf
(bad)
push
pop
loope
mov
imul
loope
jbe
ins
cs
out
(bad)
in
push
nop
cmp
jge
cmp
in
call
shl
pop
mov
pusha
mov
mov
cmp
sbb
dec
imul
push
push
add
push
cmp
mov
shl
pushf
cmc
ins
or
jne
int3
sbb
jne
retf
jp
xor
push
jmp
push
loopne
out
popa
sub
arpl
inc
sahf
cli
ror
shl
cmps
xchg
xlat
mov
icebp
out
pop
jecxz
fisttp
leave
fld
shr
adc
add
mov
push
sub
mov
nop
arpl
fsub
mov
ja
cmc
stc
and
mov
jle
inc
cs
mov
add
sub
repnz
mov
pushf
pop
dec
addr16
push
add
clc
add
fdiv
stos
jne
pop
pop
std
push
cli
cmp
push
push
jl
add
retf
leave
dec
xor
jmp
sti
xchg
aaa
sbb
fwait
ret
loop
add
xchg
js
push
jmp
and
in
xor
push
mov
sub
jbe
push
fs
or
xor
push
imul
pop
call
or
cmp
inc
mov
repz
xor
clc
add
in
mov
sub
mov
into
xor
ja
and
in
jp
(bad)
icebp
stos
lods
neg
stos
adc
cdq
mov
enter
mov
dec
je
inc
shr
and
xor
sbb
addr16
fisub
and
dec
out
test
pusha
call
int3
pushf
scas
sbb
pop
xlat
stos
cmc
jns
imul
add
lea
xchg
xor
sar
push
into
add
jg
mov
sub
in
aas
jl
or
aas
ins
ret
xchg
sar
cmp
pop
dec
prefetch
popa
dec
jmp
or
or
outs
xchg
push
lods
mov
lock
sbb
lahf
into
inc
popf
inc
inc
mov
xor
cmp
mov
jnp
push
ja
mov
add
mov
loope
pop
dec
cmp
into
out
xchg
outs
jp
pop
add
pop
mov
stc
xchg
sub
jbe
jge
fstp
cli
movs
and
(bad)
stc
les
inc
push
or
or
ja
pop
test
or
mov
mov
mov
fstp
jbe
pop
cmp
fnstcw
xor
push
xchg
sub
enter
mov
lahf
push
sbb
add
stc
popf
xchg
pop
inc
xor
inc
scas
int
inc
pop
adc
mov
popf
mov
lods
pop
test
jo
mov
fld
cmp
call
jmp
inc
push
into
cmp
push
mov
aas
push
sub
push
inc
into
int
xor
pop
sbb
leave
out
mov
inc
shl
lock
sbb
mov
dec
ja
shl
fcmovne
sar
jnp
sub
mov
sbb
or
or
dec
inc
xor
call
outs
mov
jb
lock
xchg
cmp
out
add
or
int
out
or
pop
scas
pop
sub
test
lahf
std
fwait
pop
rcl
and
mov
ret
bound
mov
stos
jno
or
lds
dec
push
adc
or
xchg
add
push
loope
aam
mov
loopne
test
(bad)
pop
ss
adc
push
scas
mov
sbb
pop
jo
shl
dec
dec
jp
inc
xchg
imul
xor
add
in
jl
fwait
push
shr
fldenv
pop
movs
inc
es
and
repz
jp
movs
scas
cmp
or
das
dec
and
or
repnz
and
or
dec
pushw
sbb
xor
(bad)
push
fidivr
imul
pop
xchg
jge
jo
add
push
call
fcomi
imul
mov
inc
test
mov
sbb
fst
lahf
xchg
das
xchg
scas
scas
ins
sti
cli
xchg
push
or
add
jmp
inc
rol
and
jno
mov
loopne
and
xchg
aad
inc
jge
mov
jno
sbb
in
xor
mov
stos
into
pop
or
add
adc
cmp
mov
(bad)
sahf
cmp
sbb
xor
fmul
ret
mov
popa
or
jecxz
sub
mov
push
test
pop
test
or
mov
push
dec
ror
fs
or
nop
mov
pusha
test
push
ficom
dec
push
push
ss
lods
cdq
xchg
push
add
inc
sbb
lahf
hlt
sbb
int
jb
jmp
mov
cmc
mov
dec
test
pop
test
mov
repz
xor
ja
push
je
pop
repnz
cli
shl
xor
jnp
dec
dec
push
pop
lahf
or
out
lds
arpl
icebp
dec
and
inc
mov
mov
arpl
imul
fnstsw
out
aas
adc
adc
shr
adc
out
retf
inc
enter
outs
xor
shr
adc
jmp
jbe
aam
adc
daa
jge
mov
jne
call
pop
mov
push
sub
jb
mov
xchg
ins
dec
and
push
xor
pop
cld
push
hlt
dec
out
inc
(bad)
jecxz
xchg
clc
mov
jb
test
jb
sub
pop
mov
jge
sub
dec
stc
and
test
inc
popf
xor
std
lahf
and
cli
sti
jno
adc
test
inc
test
fild
xchg
sti
pop
inc
inc
mov
scas
mov
jns
cmp
daa
nop
mov
adc
xchg
push
ss
xchg
imul
int
jg
lds
fimul
mov
add
(bad)
mov
ds
pop
dec
sahf
mov
enter
sbb
loop
mov
fstp
xor
mov
jae
push
sti
xor
cwde
retf
aaa
jno
sub
and
clc
loope
int3
mov
into
jmp
cmc
pop
push
dec
mov
lods
add
fidiv
mov
stos
xchg
fwait
add
ficomp
sub
fnsave
pushf
outs
ds
leave
cld
sub
jb
xchg
adc
loope
clc
gs
jo
fistp
es
sub
mov
retf
sbb
xchg
repz
shl
mov
dec
fistp
je
push
inc
je
add
sbb
js
std
aaa
push
jl
xchg
jmp
loope
repz
xlat
adc
jge
add
pop
in
(bad)
shl
imul
dec
addr16
and
pop
lods
ins
sbb
and
in
inc
sbb
clc
xchg
fwait
xchg
outs
aam
pop
cli
push
ss
fisttp
add
retf
scas
(bad)
pushf
loop
or
xor
ins
and
lds
mov
pop
loopne
add
inc
sbb
lahf
aas
xchg
ficom
adc
inc
push
xor
cwde
neg
call
xor
movs
sbb
pop
ret
lods
pop
imul
dec
aad
inc
test
sub
xor
retf
adc
(bad)
lds
je
mov
popf
jge
in
xor
xor
jge
stos
push
xchg
dec
repnz
rcl
dec
scas
mov
ja
adc
adc
jbe
(bad)
fsubr
into
ja
mov
xchg
data16
dec
fisub
xchg
jne
adc
xchg
push
sub
sbb
mov
fistp
jne
or
mov
push
in
inc
repz
or
cdq
mov
push
lock
mov
dec
pop
addr16
mov
jl
pop
lahf
mov
stos
dec
xchg
adc
dec
ins
imul
mov
jb
sti
mov
jecxz
test
jmp
sbb
pop
data16
sbb
pop
and
cmp
cwde
int
push
call
push
imul
lds
sbb
pop
adc
mov
mul
adc
sbb
gs
adc
call
repnz
hlt
jge
inc
test
xchg
fdivr
idiv
ins
scas
xchg
inc
(bad)
cli
push
dec
jle
dec
call
add
xor
xchg
cmps
xor
(bad)
xchg
jecxz
mov
jl
scas
inc
inc
imul
loopne
jle
push
pop
out
jns
or
jmp
push
je
add
pop
xor
adc
push
cmps
enter
shl
shl
pop
fcmovnu
mov
cmc
js
inc
loopne
mov
daa
or
adc
inc
fwait
lahf
ins
pop
scas
adc
cmps
fstp
adc
out
pushf
fdivrp
mov
rcr
cmps
aam
or
cld
fst
push
and
(bad)
mov
fimul
xor
lds
mov
push
sub
movs
and
ja
imul
cmp
push
call
push
mov
adc
ret
push
fs
mov
push
clc
mov
jl
test
jnp
dec
xor
adc
in
push
jbe
pop
push
xor
loop
test
push
fcomi
adc
into
mov
mov
push
or
adc
push
sbb
dec
cmp
mul
mov
xchg
sahf
inc
cmp
jo
push
dec
mov
mov
mov
cmp
and
sbb
enter
adc
xchg
ror
adc
in
inc
adc
mov
jns
sbb
xor
xor
test
pop
xchg
pop
mov
jnp
mov
push
xchg
push
jbe
(bad)
es
jecxz
pop
(bad)
jmp
mov
mov
sbb
fcmovb
xor
and
rol
add
pusha
jg
addr16
and
and
dec
inc
loopne
loope
sti
mov
cmp
lea
(bad)
mov
lods
hlt
xor
aas
jns
rcr
inc
out
adc
sbb
test
xchg
add
inc
push
aam
sub
(bad)
dec
sub
sub
sub
or
ret
pop
movs
lahf
popa
sbb
sbb
clc
addr16
jmp
sub
jmp
mov
fdiv
(bad)
pop
mov
mov
inc
aam
pop
jp
and
ret
and
ds
mov
daa
loop
scas
push
test
out
cmc
in
icebp
or
mov
and
loope
sub
mov
pushf
test
(bad)
push
(bad)
out
xor
fisttp
ficom
mov
adc
adc
inc
mov
lods
mov
push
ja
add
lock
dec
sahf
lods
or
mov
cmp
and
sbb
ss
scas
gs
imul
cli
fdivr
add
add
shl
jl
lock
mov
stos
movs
(bad)
mov
rcr
(bad)
and
popf
xchg
sbb
pop
(bad)
scas
adc
or
or
outs
ins
push
loop
pop
mov
aad
cdq
pop
inc
shr
idiv
add
lods
into
je
aad
mov
push
inc
outs
sbb
sti
inc
xor
xor
test
mov
adc
mov
add
mov
dec
es
mov
fucomip
sub
into
rcr
or
dec
lock
push
sbb
xor
inc
pop
fsub
das
fdivr
pop
jp
gs
scas
push
mov
ins
gs
int
push
daa
pusha
(bad)
push
adc
adc
or
jbe
test
mov
push
sbb
mov
test
pop
fimul
mov
ins
dec
xchg
jmp
push
dec
sbb
cmp
ret
sbb
dec
inc
mov
clc
cmp
inc
mov
cmp
add
mov
push
cmp
inc
test
mov
fcomp
rep
retf
das
push
sbb
inc
xchg
rol
into
add
xadd
sub
sbb
pop
inc
loop
add
aad
repnz
call
(bad)
inc
add
in
dec
cdq
outs
jl
dec
sbb
jbe
cmp
fbstp
jmp
lods
imul
mov
mov
aam
xor
out
loope
lods
(bad)
add
or
dec
mov
push
nop
rol
xor
mov
mov
inc
ss
lods
push
xor
bound
bound
aad
(bad)
xchg
shl
loope
mov
hlt
(bad)
inc
or
add
dec
stos
outs
test
loope
das
jns
or
ss
retf
ret
scas
adc
mov
mov
enter
movs
bound
cmp
sahf
and
jb
call
pop
pop
rcr
outs
jp
(bad)
(bad)
mov
mov
repnz
jmp
scas
fs
mov
idiv
sub
cmc
(bad)
mov
shl
mov
pop
aad
das
popf
and
mov
inc
adc
retf
xor
jns
fbstp
cmc
pop
sub
int3
push
jne
loop
idiv
and
xchg
xchg
cmp
mov
out
outs
add
sahf
mov
mov
and
or
jl
sbb
jo
adc
js
mov
pop
jecxz
or
pop
aas
cmp
sbb
out
cld
dec
jo
pop
push
sub
push
stos
fwait
jb
or
(bad)
out
cli
aam
fcmovbe
(bad)
pop
jl
pushf
jge
jg
push
call
sub
mov
cwde
cmc
push
cs
mov
xor
mov
push
imul
rcr
jne
fstp
mov
gs
in
scas
lods
xor
push
or
mov
in
or
das
cmp
cmc
ret
cmc
inc
jg
jae
lea
int3
popf
dec
xchg
jbe
xor
(bad)
sbb
mov
lods
movs
inc
mov
retf
xor
in
out
mov
jbe
jge
inc
arpl
outs
aaa
movs
push
imul
xchg
pop
cli
in
fidivr
xchg
(bad)
test
adc
push
ret
mov
and
mov
add
mov
out
mov
mov
and
push
cdq
inc
lea
inc
sbb
push
push
sub
push
jg
mov
cmp
jns
inc
ror
xor
xor
sbb
shl
in
jno
xor
mov
mov
push
test
adc
inc
gs
xlat
jmp
jae
cdq
dec
hlt
and
pop
mov
out
or
or
inc
jmp
shr
inc
pop
cmp
es
xchg
leave
bound
mov
xchg
stos
cmp
xor
scas
in
xchg
push
push
mov
loopne
and
push
stos
mov
(bad)
fldl2t
push
test
lods
out
fimul
and
jo
xor
ret
lods
sti
and
pop
inc
jecxz
gs
scas
sahf
cmc
xor
dec
cmp
mov
pop
jmp
mov
cmps
aas
add
push
(bad)
out
jmp
int3
add
mul
xor
cdq
add
mov
pop
xchg
pop
add
xchg
and
inc
and
pop
sbb
xchg
pop
inc
in
into
icebp
repz
cmp
push
or
push
xchg
jmp
push
pop
cmp
sub
neg
data16
cs
xor
and
sub
mov
aam
enter
out
dec
es
dec
or
aaa
jo
pushf
push
cli
and
lods
jecxz
hlt
out
int
mov
aas
shl
or
jle
das
movups
fadd
xchg
call
cs
inc
sbb
(bad)
sbb
mov
ja
jae
sub
es
nop
lea
xchg
lods
mov
pop
(bad)
sub
test
test
sar
xchg
pop
mov
xor
mov
pushf
push
add
aaa
jo
popf
or
push
lods
lods
out
mov
add
mov
jg
dec
jb
add
jo
sbb
pop
and
sub
outs
fnsave
and
cs
jae
add
sub
mov
call
pop
ins
add
or
push
mov
xchg
push
pop
jg
inc
inc
ror
sahf
(bad)
stc
mov
addr16
cmp
lods
jnp
cmp
pushf
xchg
fst
ins
data16
pushf
(bad)
cli
(bad)
adc
ins
mov
push
jne
push
test
daa
imul
movs
out
dec
jnp
mov
jno
rcl
repz
mov
pop
icebp
push
in
jge
cmps
mov
paddw
not
adc
and
jge
mov
xor
jp
mov
mov
push
and
jge
pushf
out
ror
add
div
nop
push
push
mov
int
ror
fild
fnstsw
mov
imul
popa
leave
or
xor
mov
sub
and
fild
or
add
or
jmp
int3
dec
mov
sub
cmp
mov
(bad)
lods
inc
mov
mov
xchg
scas
cmp
gs
push
cmp
dec
jmp
add
push
dec
sahf
ss
ret
imul
pop
fsub
mov
push
(bad)
mov
ins
fld
iret
push
rep
dec
inc
xlat
loope
pop
outs
jae
ja
mov
jp
pop
mov
js
or
mov
cld
dec
mov
jmp
mov
and
cmp
inc
xor
icebp
xor
sub
xchg
push
(bad)
mov
mov
xchg
fcom
dec
sub
push
loop
test
cmps
imul
fist
pushf
adc
sub
in
mov
fs
pop
rcl
sbb
pop
push
jb
inc
and
movs
pop
xor
jno
into
retf
mov
outs
lahf
movs
int
sahf
into
dec
bound
jge
jmp
pusha
adc
inc
sbb
iret
popf
push
sbb
in
push
xor
add
jne
xor
inc
mov
inc
stos
arpl
cmp
into
sahf
mov
leave
push
call
js
cli
retf
cwde
fs
lods
in
arpl
push
outs
cmp
xchg
sbb
in
mov
lea
loop
fxtract
rcr
sub
mov
loope
ror
retw
(bad)
sub
mov
inc
and
jo
xchg
xchg
cwde
test
lds
cmc
add
pusha
rcr
jnp
push
loop
adc
gs
dec
out
mov
call
int3
loop
adc
mov
retf
retf
xchg
mov
adc
cwde
cmp
mov
jns
sbb
jb
sub
cld
xor
push
cmp
xchg
ins
lock
xchg
icebp
ret
sbb
or
xor
fs
mov
ss
aam
bound
xor
ja
rcl
xchg
icebp
daa
out
dec
movs
(bad)
pop
jmp
sub
and
jl
leave
test
mov
bound
mov
push
repnz
push
pushf
jns
jecxz
mov
fs
stc
je
inc
jo
xchg
neg
or
cmps
popa
loop
int
(bad)
loop
int3
mov
dec
outs
ss
out
jmp
call
mov
js
ja
fstp
push
sub
xor
dec
add
jnp
cwde
jns
sub
aam
repz
shl
xor
aas
int3
fnstsw
dec
clc
pop
jl
add
sub
mov
mov
fdiv
call
xlat
ja
jo
(bad)
int
jmp
dec
shl
jae
lods
fild
adc
mov
ja
push
pushf
adc
out
jbe
in
es
sub
imul
les
mov
sbb
stc
cmp
mov
inc
in
adc
xlat
sti
mov
call
or
in
xor
lods
mov
mov
inc
repz
add
ins
addr16
addr16
ja
or
or
mov
xchg
mov
rol
(bad)
sbb
das
fadd
xchg
ret
in
or
fwait
mov
adc
imul
push
mov
in
or
cmp
das
dec
ror
nop
and
pop
xlat
mov
inc
adc
or
pushf
xor
xchg
(bad)
jne
pop
test
lea
popa
jge
xor
jne
jl
call
ins
adc
repnz
pop
in
es
pop
mov
dec
and
cmp
xlat
sbb
sbb
ds
out
push
(bad)
pop
dec
(bad)
dec
loop
dec
pop
(bad)
inc
mov
test
jmp
adc
dec
inc
adc
push
es
add
jnp
push
mov
aaa
jl
mov
lea
jnp
push
sub
mov
lock
push
aas
mov
sub
repnz
test
in
call
mov
push
push
xchg
or
das
out
pop
jl
push
fstp
adc
sar
xchg
jns
add
adc
pop
and
dec
std
mov
mov
retf
into
(bad)
sbb
out
call
je
pop
jb
in
mov
(bad)
xor
in
iret
push
icebp
xchg
or
push
fucomi
imul
shl
scas
sti
ins
add
cli
lods
sbb
clc
push
jp
xchg
xchg
cld
aaa
and
call
and
xchg
and
add
add
clc
pop
jnp
cwde
loop
sub
xchg
mov
xchg
or
bound
xchg
dec
rol
pop
jnp
cmp
mov
fcom
mov
mov
jo
fcomp
xchg
hlt
adc
cdq
mov
mov
sub
cmp
das
in
fdivr
mov
push
scas
pop
and
or
test
stc
outs
popf
sar
add
push
imul
ret
jmp
or
ins
jnp
icebp
out
jnp
cmp
cmps
iret
jmp
out
ret
bound
sub
scas
mov
inc
in
scas
stos
sbb
hlt
push
mov
int
xor
pop
pop
mov
cmp
mov
add
pop
ffree
push
ret
in
cmp
add
jbe
or
jbe
jl
jne
mov
ins
mov
and
xor
mov
adc
jg
rcl
inc
adc
sub
and
int3
rcl
mov
jl
sub
mov
cmp
pushf
sub
xor
test
rcr
push
pop
xchg
sbb
mov
hlt
mov
lds
cld
js
cmp
cmp
out
sub
scas
cmc
dec
or
and
aad
(bad)
dec
fimul
les
jns
and
retf
outs
sbb
dec
jp
jmp
inc
jecxz
hlt
xchg
mov
push
shl
mov
(bad)
push
jnp
sub
aam
dec
pop
retf
and
cs
xor
cmc
pop
and
push
jnp
fdivr
sti
jbe
outs
add
dec
mov
sub
push
dec
ins
aam
cs
ja
xchg
pop
shl
daa
add
ja
imul
xchg
inc
dec
test
cdq
repnz
std
ds
jbe
repnz
jnp
mov
dec
lds
out
pop
hlt
in
nop
dec
ret
cs
mov
pusha
push
into
loope
int
fs
inc
ror
jle
sub
xor
cmc
movs
cmp
adc
add
pop
push
mov
add
mov
in
mov
retf
outs
mov
mul
push
lods
lds
sar
pusha
mov
je
inc
sub
push
lods
call
push
(bad)
cwde
adc
call
jmp
test
stos
dec
jecxz
je
xchg
push
rcr
jae
(bad)
jmp
repnz
mov
test
and
sbb
outs
push
(bad)
in
retf
jge
push
scas
xor
ins
sar
mov
push
xchg
sti
cmp
into
scas
mov
pop
and
dec
stos
mov
call
or
cli
stos
dec
loopne
mov
xchg
add
sbb
inc
mov
cdq
movs
sbb
(bad)
adc
test
and
ins
(bad)
ins
dec
scas
ins
vpunpckhwd
test
fidivr
retf
(bad)
push
xchg
out
add
mov
or
mov
(bad)
xor
test
xchg
dec
ds
cwde
sub
leave
inc
jg
test
aam
ss
popf
mov
je
pushf
rcl
push
cmc
fscale
(bad)
xlat
sub
adc
in
xchg
and
stos
adc
sbb
repz
out
lock
shr
inc
movs
cmp
out
mov
or
jge
scas
call
sub
fadd
aad
cmc
outs
outs
call
das
sub
adc
sub
test
jno
xchg
dec
das
sub
adc
cmp
rol
mov
fsubr
adc
mov
ins
pop
jg
pmovmskb
out
sar
pop
out
adc
push
popa
xor
(bad)
pop
imul
(bad)
adc
pusha
test
sub
sbb
push
jg
sbb
and
jmp
rol
bound
jmp
(bad)
outs
jg
and
bound
inc
push
or
adc
inc
xchg
pop
fiadd
xor
(bad)
call
and
aam
out
or
cs
pusha
push
mov
out
icebp
fs
dec
test
in
pop
ins
jno
(bad)
or
push
mov
xchg
test
sbb
push
pusha
arpl
push
mov
jae
sub
jns
sbb
outs
rcr
(bad)
scas
pop
mov
ret
clc
pop
xor
mov
pop
inc
cdq
pop
movs
pop
and
dec
mov
aam
gs
(bad)
sub
cmp
and
in
shr
test
inc
cmp
mov
mov
xor
(bad)
xor
jge
mov
(bad)
scas
and
shl
or
enter
pop
enter
mov
lods
fimul
cs
scas
repz
mov
in
mov
ds
in
repnz
rol
xchg
mov
sub
iret
xchg
jmp
fs
ss
mov
lods
inc
in
and
inc
test
jbe
not
and
aaa
icebp
inc
fist
mov
loop
or
loop
pushf
mov
sahf
dec
fstp
pusha
xor
scas
or
push
pop
fld
push
pop
mov
push
mov
push
daa
pop
(bad)
test
arpl
mov
sub
int
cmp
ret
aaa
daa
inc
retf
mov
fisubr
add
loopne
mov
pop
xchg
not
jmp
cmp
mov
pop
jmp
dec
xor
xor
int3
mov
repnz
adc
ret
das
inc
jg
js
xor
out
iret
lea
in
xor
and
scas
sahf
and
retf
in
sbb
mov
inc
mov
push
and
test
lahf
xchg
inc
push
jge
dec
push
fnstcw
pop
pop
xchg
into
inc
inc
xchg
nop
push
and
mov
sub
and
cdq
jmp
(bad)
loope
scas
inc
mov
icebp
in
sbb
mov
mov
retf
out
inc
out
outs
xor
icebp
adc
icebp
xor
dec
mov
jmp
fs
clc
pop
add
clc
fcmovb
and
test
cmp
cmp
pop
jo
stos
dec
out
sahf
xor
or
pop
add
ja
cmps
cmp
jae
repnz
jnp
mov
push
imul
call
int3
push
jne
push
fs
iret
dec
dec
js
dec
xor
jl
aad
out
mov
mov
in
mov
scas
loope
jle
push
sub
dec
imul
mov
push
test
mov
jp
ffreep
movs
xchg
scas
jmp
or
std
jle
jge
into
fbld
lahf
into
cmp
pusha
inc
enter
cdq
(bad)
movs
das
or
mov
pop
mov
lock
call
(bad)
iret
adc
and
adc
jmp
pop
push
clc
call
push
mov
enter
inc
sub
lock
out
xor
in
outs
repnz
push
out
and
call
add
push
pop
mov
aas
jns
pop
mov
sub
(bad)
mov
push
and
pushf
mov
cmp
mov
add
adc
mov
nop
imul
and
std
mov
in
mov
cmps
push
stos
test
test
xor
loopne
mov
add
popa
add
pop
pop
adc
out
popf
xchg
retf
lock
rol
clc
mov
mov
dec
fild
retf
in
(bad)
sub
out
jne
and
mov
nop
jbe
lock
fisubr
shl
aas
pusha
pop
les
iret
dec
test
mov
dec
test
cwde
lds
jb
in
pop
jle
mov
push
imul
sbb
dec
or
cmp
bound
inc
mov
adc
sbb
repnz
sahf
mov
out
ja
or
add
push
fild
and
aam
or
mov
cmp
retf
cmps
(bad)
inc
and
cwde
leave
fidiv
push
fcomp
mov
popa
loope
stos
lahf
cmp
push
data16
jle
(bad)
add
mov
int
das
dec
sbb
pusha
push
add
cmps
mov
dec
lea
test
push
and
daa
aam
sub
(bad)
xor
rcl
data16
push
aaa
xor
mov
das
xor
leave
rcr
xchg
leave
cmps
pop
push
xor
jmp
jl
fisubr
(bad)
cmps
sbb
xor
(bad)
mov
ins
fwait
jae
xor
retf
adc
ret
pop
sbb
std
xchg
ror
mov
imul
cmp
or
sti
rcl
mov
xchg
mov
or
and
fs
or
jo
push
das
(bad)
js
jmp
adc
and
repnz
xor
adc
push
or
test
sti
aad
xor
mov
adc
mov
into
dec
outs
hlt
inc
scas
or
dec
icebp
lods
cmc
es
stos
push
inc
jge
dec
in
sbb
add
ja
xchg
repz
pop
adc
mov
dec
fcom
and
inc
cld
jo
imul
leave
je
adc
adc
and
loopne
sbb
cld
inc
icebp
pop
pop
fdiv
and
jmp
sbb
aam
push
mov
mov
ficomp
or
sub
sub
sbb
xchg
je
je
stc
xchg
fcomp
or
mov
xor
add
movs
sub
push
dec
test
lock
mov
(bad)
cmp
(bad)
enter
xchg
lea
arpl
xor
mov
mov
cmps
daa
sub
or
loope
jb
enter
jle
mov
jo
(bad)
call
mov
and
inc
and
or
jnp
imul
fdiv
dec
icebp
aam
repz
cmp
les
ror
mov
inc
rcl
xchg
gs
popaw
cmps
jb
add
inc
nop
mov
cwde
aaa
pusha
hlt
inc
repnz
pop
mov
out
jo
sbb
xchg
jge
(bad)
aaa
jg
mov
cmc
call
push
retf
adc
leave
mov
in
jmp
xchg
cld
pop
(bad)
jb
push
cmps
sahf
adc
jg
push
ja
aam
add
adc
add
mov
ret
out
retf
jae
rcl
leave
mov
imul
or
fld
dec
sub
jecxz
pusha
mov
icebp
idiv
mov
frstor
(bad)
addr16
dec
sub
leave
or
aad
cmp
addr16
dec
dec
push
mov
add
es
push
and
pop
imul
fisttp
cs
addr16
(bad)
jmp
push
add
pop
xchg
pop
cmp
and
int
(bad)
or
fwait
pop
cwde
adc
loope
out
jo
sbb
mov
and
cmps
add
adc
or
push
(bad)
out
jns
cmp
loop
push
cmp
jne
fild
pop
pop
add
daa
arpl
ret
shl
(bad)
enter
in
jmp
jo
and
fsub
mov
mov
push
or
je
mov
and
int3
movs
or
(bad)
movs
shld
out
test
sar
pop
mov
cld
movs
pop
test
in
stos
adc
adc
jnp
or
mov
cs
and
mov
mov
xchg
push
ror
aaa
rcl
fcom
sbb
cmp
ret
sbb
jmp
fild
inc
dec
dec
fcom
ins
jmp
jge
test
cmovg
push
enter
repnz
cmp
sbb
aas
fidivr
jb
out
xchg
xlat
cmps
ror
jge
mov
xor
sub
xor
pushw
ds
cmp
int3
mov
xchg
inc
pop
clc
in
mov
push
out
jge
inc
add
nop
aas
cmp
es
(bad)
test
enter
mov
jge
add
mov
xchg
adc
aas
mov
push
or
std
fsubr
cmp
addr16
ror
and
les
or
mov
xchg
scas
adc
fcom
sub
mov
hlt
pop
rcl
add
fs
sti
push
call
pop
pop
lods
cmp
ds
mov
cmps
adc
imul
stos
fs
movzx
mov
les
aas
pop
xor
xor
mov
pop
mov
sahf
xchg
(bad)
call
stc
xchg
mov
cmp
xchg
in
xor
das
stos
stos
data16
dec
lea
movs
(bad)
cmp
or
into
in
jo
(bad)
retf
sbb
jmp
mov
call
and
cmc
push
mov
clc
push
inc
xchg
fnstenv
(bad)
aaa
mov
xchg
jae
mov
jge
call
sub
pop
int
pop
mov
inc
imul
stos
pop
lods
std
xor
xchg
cs
sub
mov
adc
loopne
rcl
lea
stos
dec
inc
in
popf
inc
arpl
pop
ins
push
and
(bad)
ss
jbe
and
push
cmps
mov
xchg
pop
dec
imul
add
sub
xor
(bad)
jmp
int
inc
fbld
inc
pop
test
lods
test
add
cmp
fs
xchg
popa
in
jnp
sub
pop
call
cmc
das
hlt
and
mov
not
xor
dec
push
test
inc
pop
push
addr16
jmp
push
xchg
stos
mov
inc
sub
fist
das
popa
into
pop
sub
je
test
pop
push
push
xchg
leave
enter
in
cmp
pushf
out
or
or
dec
movs
and
lea
push
mov
mov
sbb
adc
clc
sbb
add
sbb
not
call
sti
dec
dec
inc
jmp
loop
das
xchg
shl
cmp
sub
cli
pop
xor
shl
xchg
out
int
pushf
imul
mov
movs
cmp
imul
inc
cmps
jno
mov
push
ja
xchg
jno
xor
psubsw
or
inc
call
ins
push
pop
movs
int3
sti
shl
lea
jg
je
aas
rcr
pop
stc
cmc
xchg
push
and
je
cmp
jl
xchg
ins
mov
nop
das
lods
mov
cmovae
ja
out
shl
adc
cmp
es
jne
mov
pop
lods
sub
jl
xchg
ret
inc
cli
mov
mov
cmc
pop
gs
fdivr
retf
pop
loopne
pushf
or
add
retf
cmp
cmp
mov
sbb
sar
fadd
fnstsw
mov
xor
sbb
into
cwde
jb
in
fstcw
jne
lock
iret
add
inc
cmc
aaa
mov
cld
icebp
pop
inc
sahf
aam
hlt
add
mov
mov
fmul
repz
push
bound
cmp
jbe
push
ret
imul
fmul
mov
shl
cmp
and
call
push
inc
sub
stos
dec
jae
pop
jp
dec
hlt
jb
push
add
(bad)
cmc
push
ss
shr
leave
sub
mov
sbb
int
sub
jp
fidivr
lods
push
jo
in
cmp
out
int3
cmc
stos
lods
movs
xchg
popf
test
cmp
aad
fwait
jnp
lods
or
test
xchg
inc
scas
add
add
icebp
mov
stc
sti
dec
hlt
ret
cmp
call
dec
push
stos
data16
add
outs
jbe
add
cmp
ret
rcr
and
fwait
movs
dec
push
int3
addr16
xchg
push
mov
fisubr
xor
and
shr
dec
popf
aaa
jns
mov
ins
not
jnp
inc
outs
inc
out
mov
nop
inc
out
xchg
fadd
mov
iret
retf
repnz
xchg
mov
add
rcl
int3
mov
mov
mov
daa
pop
bound
cmps
(bad)
mov
or
ret
loope
(bad)
lods
lds
cwde
pop
lods
xchg
(bad)
ins
out
pop
pop
outs
movs
or
or
inc
jnp
loopne
bound
mov
rcr
jae
(bad)
call
mov
dec
add
or
call
ds
jns
mov
call
inc
or
cmp
cld
dec
xor
rol
shl
mov
jg
icebp
das
mov
pusha
je
xor
jmp
imul
dec
loopne
dec
imul
out
sub
cmps
test
dec
or
arpl
jnp
popf
cmp
mov
mov
in
shl
sar
jle
out
sbb
sub
pop
sar
fld
cs
sub
mov
jg
inc
and
mov
out
mov
dec
jg
add
in
mov
daa
xor
adc
mov
repnz
pop
pusha
xor
mov
mov
and
fidiv
push
call
jmp
das
jl
adc
sbb
imul
rcr
iret
xchg
inc
jne
movnti
mov
cli
pop
in
loopne
add
das
pop
mov
add
fmul
add
mov
fcom
jnp
bound
mov
xor
mov
sub
cmps
loop
fnstsw
mov
fs
sub
or
fs
jbe
push
popf
mov
jge
es
cmps
fwait
mov
int
cmc
xchg
pop
daa
jnp
xor
xchg
xor
ss
das
data16
sub
cmc
push
(bad)
popa
mov
sahf
aaa
repz
loope
dec
xor
popf
test
movs
push
or
cdq
sub
mov
xchg
in
push
fidiv
mov
js
mov
(bad)
(bad)
dec
call
loope
sub
push
cmc
les
(bad)
and
jecxz
push
mov
and
lock
xor
fldcw
fstp
mov
into
outs
xor
mov
arpl
cs
push
jg
jns
mov
xchg
sub
adc
add
imul
xchg
push
xchg
lea
xchg
cmp
push
fcmovu
test
and
push
mov
lods
std
jbe
cmp
pop
sub
mov
cld
pop
outs
inc
mov
icebp
or
jbe
arpl
out
scas
mov
(bad)
mov
in
fwait
mov
xchg
jecxz
pop
arpl
xor
add
mov
mov
cmp
jp
imul
das
cmp
mov
xor
push
int3
mov
xor
lods
add
(bad)
push
add
sub
jg
sbb
je
sub
sub
adc
aaa
retf
fstp
cmp
inc
sahf
cmp
cld
add
jmp
test
add
pop
add
rcl
mov
pop
out
and
stos
mov
mov
nop
in
xchg
mov
stos
jmp
movs
add
out
retf
sbb
sti
rol
and
test
loope
retf
data16
in
cld
jo
jge
cdq
lea
mov
fs
addr16
ins
inc
loope
push
bound
into
cli
inc
mul
pusha
imul
inc
or
es
adc
jl
adc
cmp
in
call
imul
push
(bad)
cli
dec
mov
push
jno
sub
push
dec
inc
in
repnz
sub
scas
fidivr
in
jbe
sub
out
mov
jno
or
and
enter
mov
dec
dec
js
add
cdq
inc
mov
and
jo
scas
aaa
xor
inc
jbe
push
lock
inc
std
jo
mov
jle
xor
jg
inc
neg
loopne
ss
rcr
mul
or
or
popf
pushf
pop
mov
mov
cmp
loopne
mov
imul
stos
ficomp
cmp
and
sub
sbb
and
adc
addr16
mov
shr
mov
push
fnstsw
lods
xor
sub
jle
xchg
stos
adc
mov
inc
jbe
jne
push
cmp
dec
in
aam
adc
xchg
lock
sub
mov
out
nop
xor
retf
pop
pop
dec
mov
icebp
idiv
fdivrp
dec
rcl
(bad)
loopne
in
xor
mov
stc
push
fimul
test
and
hlt
pop
iret
(bad)
mov
das
jg
inc
int
adc
shl
push
ret
imul
lahf
div
test
inc
nop
pop
cmc
push
adc
mov
add
push
cmps
xor
dec
imul
xlat
stos
call
aad
nop
xchg
cs
(bad)
fiadd
push
jmp
xchg
aas
fadd
and
jmp
aam
cmp
jne
adc
ret
outs
fimul
mov
xor
daa
jno
ror
inc
cmp
jmp
js
push
fs
mov
add
xchg
lock
fdivr
inc
out
push
jmp
int3
add
shl
pushf
inc
push
inc
xchg
ins
adc
adc
cs
and
push
jno
ja
dec
xchg
sub
cmp
add
mov
lods
xchg
mov
rcr
or
jns
jecxz
jge
mov
xchg
inc
out
mov
mov
aam
jae
mov
xchg
adc
pop
dec
pop
or
jmp
pop
cmp
ficom
mov
test
popa
pop
pop
stc
imul
sub
leave
jb
jge
jno
mov
mov
adc
cdq
cmp
test
leave
sub
fs
push
pop
test
in
mov
push
sbb
retf
inc
rcr
mov
aam
loop
jl
scas
push
movs
sub
rcr
jl
inc
push
pop
cmp
dec
push
dec
rol
xor
jmp
call
mov
retf
jbe
xchg
sahf
mov
cmp
shl
mov
adc
repz
xor
mov
fdivr
xchg
cmps
(bad)
daa
popa
mov
mov
shl
and
addr16
cmp
ficomp
fild
ins
jne
xchg
inc
stc
jecxz
jmp
adc
mov
and
or
mov
adc
adc
add
or
jo
outs
aas
dec
xor
mov
jnp
mov
mov
repnz
xor
ss
push
cwde
xchg
mov
inc
or
mov
and
push
popa
and
pop
scas
jns
addr16
or
cmp
shl
pop
inc
cwde
dec
sbb
sbb
pop
xchg
mov
pop
cmc
(bad)
aam
xor
popa
out
neg
mov
jp
pusha
outs
push
xor
mov
sub
sub
gs
jns
sub
push
jns
(bad)
xor
into
xor
inc
out
fld
xor
xchg
mov
mov
cmps
iret
adc
and
jae
jmp
mov
imul
mov
pop
sub
test
xor
push
jle
and
popf
mov
test
add
inc
push
add
cmc
lds
je
daa
jp
xchg
js
das
mov
sub
mov
dec
adc
jmp
lods
inc
xchg
add
fdiv
inc
xchg
inc
or
js
movs
arpl
test
inc
mov
mov
ins
aaa
xchg
xchg
scas
rcr
push
iret
pop
inc
fsub
xor
dec
sbb
jg
mov
cmps
stc
dec
pop
mov
(bad)
loop
jae
imul
jmp
outs
sub
bound
jbe
mov
test
cs
add
pop
jbe
popa
icebp
jmp
inc
shl
popf
nop
jl
mov
stc
(bad)
nop
pusha
pop
mov
mov
pop
test
mov
sub
ret
movs
mov
mov
sub
pop
das
adc
loopne
adc
pop
xor
ret
mov
xlat
or
je
test
inc
ret
add
pop
bound
xchg
xchg
dec
xchg
(bad)
cmp
das
fild
fsub
cli
sbb
pop
div
jnp
sub
push
sbb
inc
push
jns
and
ret
jne
out
sub
hlt
pop
test
cdq
scas
div
inc
clc
sahf
mov
int3
addr16
pop
ja
or
mov
call
fld
pop
mov
mov
test
jg
adc
es
sbb
or
call
out
addr16
dec
xchg
mov
iret
cmps
int
sbb
mov
fwait
push
jb
(bad)
jne
lock
mov
xchg
test
or
mov
out
add
adc
add
xchg
add
jo
cld
out
adc
and
xor
call
xchg
dec
in
aad
sbb
mov
adc
or
sbb
or
retf
pop
test
(bad)
fsubr
jg
clc
xor
ja
popf
aad
mov
mov
cdq
dec
or
jae
mov
das
es
sub
add
jo
mov
in
out
xchg
pop
dec
dec
adc
arpl
inc
cmps
jmp
out
xchg
das
int3
mov
test
xchg
cs
mov
adc
rcr
fsubr
xor
adc
lock
xor
cli
sbb
jge
mov
(bad)
lahf
add
xchg
cmp
rcr
jne
retf
jo
aaa
sub
sbb
in
repz
sahf
cmps
inc
sbb
in
or
aaa
xchg
fisttp
inc
stos
or
mov
outs
sahf
inc
sbb
mov
sub
mov
xchg
dec
ja
iret
sbb
ins
call
int3
jb
ja
mov
cmp
lods
movs
out
out
mov
jns
jg
retf
dec
mov
adc
mov
repz
out
or
(bad)
pop
in
scas
iret
sbb
(bad)
push
aaa
pop
and
stc
adc
inc
sbb
repnz
fidivr
(bad)
jmp
sbb
sahf
sbb
ja
push
adc
ror
jl
sbb
xchg
sahf
inc
inc
cmp
dec
push
enter
pushf
inc
out
cmp
pushf
xchg
(bad)
hlt
lea
sbb
and
aaa
mov
inc
dec
dec
dec
movs
aaa
lods
in
in
xchg
adc
push
jmp
loopne
dec
mov
es
cmp
cmp
sub
sbb
retf
push
xchg
xchg
loope
cmc
jae
inc
sub
pop
or
cmps
repnz
adc
jns
mov
jno
xchg
scas
neg
pop
mov
sti
ins
imul
imul
xchg
cmps
mov
cmp
out
lea
in
das
push
shr
aas
push
in
jmp
icebp
fldcw
clc
leave
jle
mov
sub
out
stc
push
push
jmp
mov
cmps
mov
mov
mov
mov
psrlw
mov
loopne
sbb
and
or
jno
sub
xchg
xor
fisttp
push
mov
je
jp
and
cmp
push
loopne
add
inc
arpl
dec
cli
retf
cmp
dec
in
adc
pop
sar
inc
jno
xchg
clc
into
xchg
mov
adc
jge
push
data16
dec
fwait
mov
mov
inc
push
arpl
test
rol
ss
cmp
xor
push
popa
sbb
push
mov
cmps
sub
int3
cmp
xor
push
rcl
mov
imul
pushf
inc
jno
rol
(bad)
cmp
jmp
leave
pop
mov
mov
cwde
fsubr
dec
es
les
inc
inc
cmp
sbb
nop
push
xor
sti
(bad)
jecxz
sbb
ds
in
ret
inc
nop
mov
jbe
int3
test
lea
(bad)
out
jnp
xchg
stos
jl
jne
mov
and
clc
mov
ror
cmc
adc
call
pmaxsw
xchg
shl
retf
sahf
inc
inc
push
push
pop
mov
fadd
mov
or
add
test
inc
test
jle
dec
adc
lds
iret
mov
pop
xlat
cmp
in
sbb
cmp
ins
inc
pop
xchg
fisubr
xchg
xchg
aam
popf
ret
xlat
rcl
mov
push
sub
cmp
test
mov
scas
hlt
jg
jl
hlt
and
wrmsr
pop
inc
sbb
je
cwde
ret
test
and
cmp
pop
push
xchg
ret
jle
stos
movs
lock
adc
dec
(bad)
xchg
in
cmp
iretw
(bad)
ds
mov
dec
push
mov
popa
test
mov
jle
retf
mov
mov
xor
icebp
add
add
cmp
adc
sub
adc
outs
sahf
xlat
dec
mov
test
daa
push
and
and
repnz
into
retf
dec
(bad)
add
out
test
push
int
mov
(bad)
cli
lds
add
retf
pop
xor
adc
cmps
push
(bad)
sbb
push
imul
add
sbb
sbb
mov
daa
fst
jl
mov
lds
scas
and
ds
sahf
inc
xor
xchg
(bad)
jns
js
(bad)
jns
add
xchg
je
(bad)
cmc
push
push
aas
jns
loop
adc
cs
loop
in
jmp
adc
pop
sub
sbb
xchg
mov
and
xor
dec
push
(bad)
xchg
pop
stc
sub
xchg
nop
push
mul
sbb
ret
pop
sar
test
sahf
leave
jns
outs
call
xchg
mov
test
loope
jo
in
pop
and
xchg
ret
cmp
add
repnz
mov
frstor
fstp
mov
xor
add
inc
jmp
jnp
xor
pushf
push
aaa
lock
neg
xchg
scas
sbb
jle
jns
and
xor
rcr
push
xchg
mov
mov
ret
cmp
rcr
inc
loop
shr
cmps
loop
and
popa
mov
sahf
fadd
lds
rcr
or
test
(bad)
dec
retf
xchg
and
stc
push
shl
sub
ja
push
lods
jo
cmp
add
test
ficomp
scas
adc
aad
inc
sti
add
pushf
or
cmp
pop
stc
leave
in
repz
and
ret
sti
sti
xor
add
and
or
lock
cmp
shr
jo
movs
int3
mov
push
jge
adc
mov
mov
(bad)
sub
sub
pop
out
or
out
push
dec
leave
mov
xchg
shl
push
imul
xchg
mov
daa
inc
fidiv
loopne
enter
pop
aaa
repz
jbe
cmc
fimul
(bad)
les
or
dec
inc
aaa
mov
add
call
mov
add
and
xor
dec
fcom
dec
lods
icebp
xchg
inc
sub
fldenv
xchg
aaa
jp
je
sti
ret
mov
aad
fild
mov
mov
neg
pop
repnz
loope
retf
imul
adc
js
in
neg
add
or
and
dec
inc
fdivr
leave
xchg
sbb
ds
mov
outs
mov
int
mov
movs
cwde
adc
mov
out
jp
retf
xor
out
retf
sbb
sub
xchg
retf
or
push
pop
outs
mov
adc
jge
cld
dec
gs
call
and
mov
mov
push
xchg
mov
popa
fiadd
or
mov
jecxz
aam
in
mov
fsub
xchg
fild
pop
mov
jp
fcmovnb
xchg
data16
in
stc
stos
iret
xor
adc
mov
fild
popa
push
popf
pusha
add
push
scas
mov
into
fnstcw
nop
sti
es
xchg
jmp
into
xchg
retf
xor
mov
inc
(bad)
aad
mov
jno
inc
shl
and
xchg
sbb
(bad)
sub
push
dec
mov
(bad)
mov
dec
ret
movs
adc
adc
les
or
mov
pushf
inc
inc
nop
mov
and
cld
xchg
jnp
mov
dec
push
dec
add
cs
scas
pop
jg
fidiv
sbb
es
push
jne
jmp
cmp
minps
add
add
add
test
mov
(bad)
cdq
xor
jecxz
adc
mov
jmp
loopne
js
jns
pop
gs
mov
(bad)
push
or
gs
cmps
sub
outs
pop
stos
ret
adc
jbe
sahf
retf
dec
add
fwait
ja
xor
lds
jnp
inc
add
(bad)
jge
lahf
test
xor
xlat
iret
add
cmps
xchg
mov
xchg
daa
js
and
(bad)
enter
test
dec
clc
mov
(bad)
jae
leave
(bad)
hlt
push
add
lds
inc
or
mov
addr16
int
call
pop
hlt
push
lock
addr16
ins
ins
inc
push
into
bsf
mov
inc
xchg
into
mov
outs
or
adc
sub
icebp
jb
mov
mov
adc
jmp
sbb
sbb
sub
mov
add
or
ins
mov
js
push
mov
arpl
push
or
loope
prefetchw
xchg
jecxz
mov
test
lods
repnz
or
dec
icebp
rcr
(bad)
bound
movs
fstp
(bad)
outs
dec
ja
(bad)
fs
mov
push
push
fs
mov
mov
pop
sti
xchg
lahf
enter
rol
adc
jno
shl
dec
(bad)
fcmovu
xor
mov
cmp
pop
sbb
mov
sar
sub
fdiv
xchg
mov
cmp
nop
outs
sbb
pusha
and
std
stos
xor
and
rcr
mov
cs
pushw
push
or
pop
fimul
adc
push
test
sub
scas
cdq
jne
(bad)
or
fisttp
jbe
test
ins
loopne
mov
mov
int3
mov
dec
jmp
shl
dec
sub
dec
cmc
jne
sti
lock
adc
dec
push
je
sub
mov
adc
cs
cmps
out
inc
pop
fwait
retf
mov
pop
dec
not
cs
pop
gs
aaa
lods
je
jg
(bad)
(bad)
xor
dec
mov
dec
ret
cmc
popa
lock
mov
sbb
retf
add
inc
pop
mov
dec
dec
mov
in
enter
adc
xchg
sbb
or
pop
outs
popf
iret
cmp
gs
mov
pop
mov
stc
jp
adc
imul
dec
mov
or
daa
add
mov
scas
test
jae
int3
dec
and
fwait
sbb
fs
mov
xor
xor
xchg
ret
inc
cmp
xor
ret
les
pushf
mov
xchg
mov
and
pop
xchg
pop
leave
mov
shr
movs
jg
push
stos
out
nop
push
ins
cmp
in
xor
sub
dec
int3
(bad)
push
sbb
cmp
sti
out
ret
daa
inc
push
xor
and
mov
jno
push
pop
lds
movs
mov
dec
or
(bad)
clc
or
push
ficomp
not
fiadd
mov
add
mov
sub
add
(bad)
shl
ds
lds
pop
push
mov
cmp
lods
xchg
xor
fsubr
inc
inc
sub
int3
bound
xor
lahf
popf
mov
mov
xor
into
cmp
xchg
pop
retf
outs
les
ret
outs
mov
icebp
push
into
into
test
jg
call
stc
jg
ret
add
mov
dec
xchg
add
push
xchg
mov
daa
dec
fidivr
xchg
std
xor
cmps
loope
and
outs
inc
fs
cs
clc
cld
popa
stos
(bad)
mov
and
dec
test
scas
cdq
mov
xor
xchg
cli
icebp
sbb
mov
pop
dec
xchg
cmp
and
mov
repnz
mov
sbb
push
sbb
inc
xchg
add
lea
xor
or
clc
(bad)
fiadd
cmc
fwait
movs
pop
pop
push
ficom
fmul
pop
in
rcl
das
cmp
dec
in
popa
push
jns
and
dec
je
sub
jg
in
or
js
popa
pusha
pop
xchg
cli
sbb
xchg
mov
test
adc
les
mov
pop
push
push
leave
mov
pusha
adc
hlt
mov
push
adc
retf
cmp
inc
xchg
stc
jge
in
xchg
mov
mov
fstp
std
sbb
mov
mov
stos
xor
sub
pop
enter
es
(bad)
jnp
pop
jbe
out
les
int
or
out
push
pop
mov
dec
repz
xchg
out
push
fmul
and
sbb
xlat
sub
pop
out
rcr
xor
jne
mov
or
add
cmp
cli
pushf
dec
mov
les
push
xchg
movs
shl
pop
push
push
ret
mov
stos
lea
sub
push
test
movs
or
out
int
push
es
fdiv
jl
dec
jae
outs
jae
mov
xchg
pop
dec
sbb
int
mov
xor
sbb
lock
test
jno
lea
pop
sub
test
pusha
adc
imul
jg
sti
cmp
jmp
sbb
xchg
shl
mov
lock
scas
js
or
sbb
mov
cs
cdq
adc
call
jo
movs
mov
aaa
aam
out
repnz
jns
xor
jae
sbb
dec
pop
ins
stos
cld
rcr
loopne
and
mov
sbb
sub
loop
lds
or
mov
nop
cdq
sub
icebp
push
in
pop
ins
dec
rcl
mov
scas
sbb
fs
lds
sbb
fist
push
mov
fabs
ss
rcl
iret
cmps
loopne
add
mov
xchg
shl
ja
into
push
inc
nop
lock
push
std
pop
sbb
xchg
jne
push
scas
gs
enter
test
xor
arpl
xor
cwde
add
cmp
test
mov
out
outs
sbb
imul
push
mov
arpl
xor
cs
sbb
(bad)
loop
adc
inc
loope
stc
xchg
pop
shl
jns
pop
mov
dec
cld
aas
push
(bad)
fs
scas
mov
std
mov
cmps
sbb
adc
xlat
fsubr
loopne
fsub
aad
ret
push
ins
repz
sbb
cwde
mov
mul
fs
cwde
pushf
mov
shl
push
sbb
xor
aas
pop
jmp
ret
repz
jecxz
sub
xchg
movs
add
test
and
fwait
ret
xchg
cmc
xchg
mov
popf
jns
bound
xchg
sbb
test
jmp
data16
jb
pop
mov
out
ins
jge
mov
push
(bad)
cwde
mov
adc
hlt
out
ds
loopne
xor
pop
mov
fist
jp
xacquire
add
shl
ins
dec
ins
or
jmp
shl
dec
or
data16
nop
out
aaa
lods
les
adc
dec
add
outs
into
inc
fnstsw
lahf
mov
das
cwde
push
test
or
cmp
je
push
fdiv
mov
imul
sub
retf
cmps
adc
movs
xchg
test
xchg
jmp
dec
sar
and
movs
dec
jmp
mov
ds
aad
data16
sub
shl
lock
dec
and
add
or
loop
movs
repz
call
push
ins
mov
cdq
or
cmp
jo
xor
sahf
push
in
xor
cmp
enter
mov
jp
xor
add
xchg
jmp
push
adc
out
mov
dec
jecxz
aaa
ret
into
add
cwde
adc
cmp
leave
mov
adc
pop
stos
or
sub
test
(bad)
xchg
dec
ret
mov
jp
das
mov
pop
mov
adc
add
das
or
div
test
mov
stos
dec
jbe
add
imul
and
iret
(bad)
stos
mov
push
jne
repnz
clc
loop
adc
stc
mov
call
mov
in
sbb
das
sbb
cmps
repz
cld
mov
outs
stc
inc
pop
(bad)
mov
fcomi
inc
int
gs
xchg
(bad)
fisub
js
imul
push
leave
shr
push
and
call
xchg
leave
icebp
mov
ds
lods
xchg
dec
mov
xchg
cmp
jp
xchg
mov
outs
mov
or
push
sahf
rcl
push
push
aaa
push
dec
int3
adc
popf
es
dec
pop
jns
js
push
sbb
dec
sbb
jle
add
mov
test
or
xor
aad
inc
cmp
sub
adc
dec
outs
xchg
fimul
mov
sub
movs
cmp
add
sbb
in
sbb
or
mov
sub
sub
mov
retf
ret
mov
popf
cmps
xchg
jae
sbb
xor
dec
imul
out
je
push
ror
lock
ret
add
aad
pop
arpl
dec
dec
mov
in
outs
in
es
push
(bad)
dec
les
pop
fadd
mov
pusha
xchg
push
mov
movs
cli
hlt
sbb
add
movs
outs
mov
adc
dec
push
and
stos
enter
movs
push
mov
ds
jge
mov
dec
test
(bad)
mov
pushf
pusha
cld
sbb
nop
inc
fst
mov
js
xchg
in
mov
fldenv
shl
push
push
jle
or
ficom
xchg
je
fldcw
cdq
pop
lea
lea
push
inc
movs
cmps
ja
lods
icebp
clc
mov
dec
xor
cwde
fldenv
(bad)
fdivr
inc
mov
adc
das
or
mov
dec
in
test
arpl
jo
in
(bad)
test
gs
jecxz
inc
inc
test
xchg
add
test
rol
jmp
ror
and
xchg
sub
sbb
stc
inc
jp
repnz
jg
cmp
test
imul
sub
enter
bound
sbb
mov
fcomp
mov
ror
mov
sti
mov
jecxz
cmp
popf
pop
xor
mov
push
inc
xor
ja
sub
push
cld
jecxz
out
fcomip
or
jbe
cmps
cmps
add
in
test
das
in
cdq
pop
sar
inc
ret
pushf
sbb
push
fcmovbe
pop
fs
inc
jge
loopne
mov
fdiv
retf
xor
loopne
stos
add
aad
rcr
jmp
sub
jecxz
cmp
sub
xor
xor
out
add
gs
das
pop
mov
mov
pop
inc
add
lds
jg
in
fdivr
xor
retf
ins
inc
jmp
cmc
scas
xchg
sub
int3
sti
pusha
cmp
imul
iret
ret
jge
mov
std
bound
or
inc
outs
sbb
repz
and
lds
fist
cmp
into
xchg
pop
in
xchg
push
mov
pop
or
in
inc
xor
out
push
push
movs
sub
push
sbb
cmp
loopne
mov
fsubr
sub
add
sub
mov
imul
sbb
or
pop
rcr
xor
fsub
xlat
adc
mov
add
(bad)
idiv
adc
xor
js
inc
loope
fimul
mov
clc
adc
mov
and
repz
mov
push
lea
jecxz
add
cmps
lods
adc
inc
add
inc
fdivr
jnp
push
sub
jns
add
in
cld
outs
aaa
jg
push
and
outs
fst
cmp
mov
fdiv
test
mov
jle
cmc
into
xor
(bad)
loope
call
ins
(bad)
shr
xchg
add
jmp
adc
jnp
je
test
outs
mov
loope
movs
pop
test
(bad)
pop
adc
add
xchg
sub
push
inc
jb
xchg
bound
fistp
pop
adc
fsub
fld
call
(bad)
sti
stc
arpl
mov
dec
push
rcr
mov
push
xor
dec
imul
inc
xchg
shr
call
mov
je
sub
jle
fcomp
bound
loopne
jbe
call
sbb
scas
dec
pop
jecxz
jl
inc
add
mov
call
sub
pop
mov
sbb
mov
xchg
inc
add
push
mov
bound
sbb
mov
mov
cs
jbe
out
pop
dec
lods
ds
in
popa
cmps
leave
fwait
ret
ret
dec
push
ror
push
ds
cmp
and
(bad)
imul
call
aam
or
leave
jg
lock
pushf
inc
das
push
out
loop
dec
sub
(bad)
in
xlat
or
aam
mov
and
dec
adc
add
gs
jb
inc
lods
pop
lods
dec
fild
mov
repnz
scas
jg
inc
arpl
push
popf
iret
xchg
push
outs
sub
movs
fsubrp
fist
outs
jecxz
add
aas
ins
or
fldl2t
adc
ficom
stos
xchg
pop
xor
imul
mov
mov
stos
jge
mov
sub
rol
rcl
cdq
push
aam
jmp
mov
lahf
xchg
mov
setns
push
pop
push
(bad)
cmps
jle
ds
cmp
jb
push
xor
mov
(bad)
in
std
jg
aad
xor
jl
inc
cwde
lea
popf
test
jne
pop
repnz
(bad)
lds
cli
dec
movs
es
mov
inc
and
test
mov
lock
das
mov
mov
mov
or
mov
xchg
cmps
cmp
mov
dec
add
inc
(bad)
fcmovb
add
data16
sbb
xor
imul
ret
outs
pop
push
fwait
jg
repnz
stos
leave
pop
cmps
push
(bad)
add
aas
imul
pop
xchg
std
icebp
dec
(bad)
(bad)
(bad)
mov
sub
mov
mov
aad
push
hlt
bound
fwait
push
out
adc
or
xlat
stc
and
inc
test
sbb
sti
and
ffreep
xor
mov
mov
push
mov
inc
adc
adc
(bad)
cmc
adc
mov
xchg
rcl
stc
shl
xlat
lea
mov
sahf
or
mov
fs
pusha
adc
(bad)
imul
daa
cs
push
dec
fwait
imul
ret
sbb
push
call
xor
xor
inc
es
xchg
adc
adc
cwde
cs
in
cld
sti
loope
mov
(bad)
out
cmp
stos
mov
les
xor
mov
push
or
cdq
jmp
xor
or
int3
push
push
mov
push
push
and
sub
xchg
adc
jmp
stos
mov
mov
inc
mov
xchg
sub
mov
lods
mov
push
iret
(bad)
lods
iret
jae
mov
pop
ins
sub
xchg
popa
jns
push
lds
and
bound
(bad)
mov
(bad)
out
and
adc
sbb
test
movs
loope
sub
nop
xchg
jp
push
push
stc
movs
test
ins
jecxz
cs
push
jb
dec
jmp
mov
in
data16
cmps
push
dec
out
stc
stos
repnz
xlat
mov
xchg
sub
pop
xchg
push
jp
hlt
lock
xchg
push
enter
stos
adc
in
retf
jb
arpl
add
inc
mov
in
enter
mov
sub
mov
inc
or
xchg
and
call
mov
adc
pop
(bad)
cmp
sbb
sti
ss
fst
sub
not
cdq
sub
or
cmp
adc
icebp
in
pop
add
sbb
clc
inc
xlat
retf
mov
push
or
add
pop
mov
cdq
aam
jae
push
push
pushf
mov
(bad)
cmc
adc
and
call
fs
ds
cmp
jp
and
mov
or
push
jg
loopne
daa
push
add
push
mov
xor
adc
mov
and
loopne
ins
jp
inc
xchg
pop
cmp
push
ret
adc
and
fwait
mov
push
mov
lods
cs
test
push
inc
bound
dec
popf
loop
dec
sbb
int
cs
add
pop
push
outs
fnstcw
and
fwait
push
jmp
cmp
or
repz
add
in
and
and
cmp
inc
or
lahf
add
mov
cdq
dec
push
nop
sub
sub
outs
cmp
push
call
inc
inc
xchg
ss
out
call
pop
inc
shl
arpl
ss
icebp
jnp
(bad)
mov
cmps
cmps
and
xor
nop
cmp
xor
test
test
out
and
jbe
pop
test
inc
call
push
cmp
xor
rcl
dec
clc
and
mov
or
pop
shl
and
clc
movs
xlat
jl
lahf
test
bound
push
rcl
retf
addr16
in
mov
imul
call
hlt
scas
cmp
leave
mov
pop
rcr
arpl
or
pop
sar
retf
sbb
mov
pusha
aas
lock
push
pusha
push
rcr
xor
movs
pop
(bad)
pop
(bad)
jbe
pop
lods
mov
inc
mov
mov
push
es
add
push
(bad)
pop
push
jg
call
icebp
popf
xor
mov
mov
dec
inc
mov
lahf
inc
jnp
mov
in
leave
xor
adc
jbe
retf
sub
mov
push
popf
mov
sub
mov
out
sub
into
les
adc
push
test
ins
jmp
sbb
adc
scas
or
mov
sbb
jo
mov
stos
push
and
xchg
push
xchg
in
sub
jg
int
stos
mov
neg
fisttp
pop
fcom
int3
lock
(bad)
pop
xchg
xchg
push
adc
xchg
sub
mov
mov
jmp
mov
js
das
xchg
cmps
retf
test
or
pop
mov
jmp
aad
lods
add
jmp
loope
xchg
cmp
xchg
movs
lods
xchg
push
add
add
xlat
iret
xor
push
sti
xchg
clc
xor
imul
dec
mov
es
pop
outs
inc
add
jb
fstp
in
xchg
pop
dec
pop
into
sbb
aas
inc
and
shr
inc
into
mov
add
and
dec
xchg
es
cs
stos
in
sti
in
(bad)
cld
xchg
test
xchg
mov
mov
mov
retf
aad
cmps
(bad)
jg
into
dec
ja
popa
sbb
stos
pop
js
(bad)
mov
shl
arpl
dec
mov
mov
idiv
dec
pop
in
cs
pop
sti
pushf
aam
sub
and
push
mov
mov
ss
dec
adc
cs
ret
mov
in
xor
push
(bad)
jecxz
out
and
lock
fsub
cmp
cli
mov
in
sbb
div
xchg
sub
in
or
and
pushf
fdiv
cld
ja
sbb
fsub
or
push
ins
push
neg
cmps
adc
cmps
mov
sahf
mov
dec
inc
sahf
out
xor
fistp
ins
aaa
enter
and
mov
push
ficom
fcomp
cli
pop
inc
push
and
lahf
or
pop
js
bnd
mov
jl
(bad)
fdivr
mov
movs
nop
xchg
bound
xchg
dec
mov
adc
cmp
pop
in
or
(bad)
sub
scas
dec
and
rcr
adc
push
or
mov
stos
mov
xchg
icebp
fnstenv
mov
mov
ins
xchg
inc
cs
pop
cdq
push
inc
mov
cld
lods
inc
aad
mov
push
add
test
inc
ror
mov
cmp
cmp
pop
or
jmp
aam
stc
push
mov
xchg
dec
sbb
loop
movs
fadd
dec
imul
sub
leave
dec
mov
push
imul
ins
fmul
pop
mov
mov
in
in
ret
push
or
ds
enter
test
xor
lods
pop
cmps
mov
mov
sahf
xchg
pusha
add
nop
mov
pop
xchg
xlat
adc
xchg
leave
pop
fisttp
pusha
loope
cmp
outs
sbb
xor
pop
cmc
fprem1
dec
mov
(bad)
xor
gs
aas
outs
or
mov
loope
into
and
mov
cli
mov
fiadd
xor
mov
and
sub
fcmovnb
aaa
fdiv
ror
(bad)
sbb
clc
out
test
(bad)
push
dec
rcr
mov
addr16
fistp
loop
out
in
add
lahf
jecxz
cmp
or
sbb
mov
push
call
mov
movs
push
sbb
jecxz
int3
int3
inc
lock
ja
shl
dec
scas
xchg
call
lahf
jo
jmp
js
out
int3
mov
mov
pop
mov
xor
pop
xchg
(bad)
xor
inc
push
dec
ror
stos
pop
or
push
icebp
cmps
and
call
xor
mul
movs
pop
gs
inc
nop
inc
pop
mov
mov
mov
(bad)
mov
sti
xlat
rol
in
dec
inc
or
sbb
adc
xchg
sahf
pop
jo
mov
and
mov
inc
fmul
add
cmp
and
mov
pop
sti
lods
push
add
xchg
aam
lock
mov
in
sbb
frstor
fdivr
inc
jmp
jno
rcr
xchg
scas
retf
adc
inc
movs
dec
or
mov
and
add
mov
add
push
push
push
jbe
lods
aad
daa
dec
cwde
test
arpl
sub
mov
cmp
(bad)
jl
movs
push
mov
mov
xor
jge
je
mov
dec
xchg
sar
push
pop
sbb
mov
mov
dec
lods
mov
aad
add
aam
sub
test
in
and
and
jecxz
leave
ds
dec
fidiv
fs
cmp
push
sub
inc
in
sti
or
pop
cmc
jno
push
ins
sub
fldcw
mov
fld
xor
lods
into
mov
pop
mov
mov
inc
retf
jg
add
rcr
fbstp
fbstp
sub
jns
ins
shr
sub
and
test
es
je
jge
jmp
bound
cs
in
ins
mov
pop
inc
mul
enter
ret
push
dec
cmp
shl
jae
mov
add
fwait
retf
mov
adc
mul
outs
inc
arpl
ror
cs
pusha
shl
mov
mov
or
in
into
cmps
scas
or
sar
cmc
xor
std
mov
lods
push
or
leave
cmp
sbb
fistp
mov
test
mov
ret
into
data16
inc
pop
or
mov
xchg
pop
int
sahf
add
and
push
push
push
lahf
xchg
sub
stos
adc
adc
mov
cs
push
lds
jnp
inc
and
ins
fnstenv
mov
test
ins
das
sub
jg
push
lahf
imul
push
jle
adc
jle
in
xchg
mov
pop
ret
lods
mov
cld
out
xor
retf
sbb
ins
dec
push
scas
mov
shl
(bad)
jmp
test
es
lea
or
jae
shr
inc
movs
loope
adc
fs
movs
mul
jae
loopne
push
fld
loop
loope
test
xor
cmp
cmp
inc
and
add
jmp
xchg
cld
imul
ins
retf
stos
add
mov
dec
or
cmps
loopne
rcr
jge
cdq
imul
dec
inc
xor
pop
sbb
cld
lods
add
data16
add
pop
sbb
push
jl
aas
xor
push
ins
push
or
int
and
or
adc
push
push
cmp
jne
cmps
push
jmp
lds
mov
stc
loopne
or
mov
stc
out
bound
aaa
mov
pop
inc
jmp
sbb
shl
int3
dec
sar
jae
out
aad
jmp
sbb
inc
gs
push
fbstp
repnz
xchg
push
mov
push
clc
jle
les
and
mov
and
mov
shl
pop
(bad)
and
push
adc
popf
sbb
jbe
neg
jnp
sbb
push
in
push
or
adc
inc
outs
xchg
loop
ins
jmp
test
sbb
mul
int3
jp
gs
push
mov
loopne
test
and
arpl
mov
adc
pop
dec
nop
ret
push
fwait
jae
ins
or
dec
je
dec
sub
mov
push
std
add
xor
jnp
cmc
inc
push
sub
je
iret
mov
push
nop
gs
and
jbe
dec
or
out
mov
inc
adc
xchg
pop
adc
push
(bad)
sub
jl
xchg
mov
sub
pop
dec
and
pop
push
mov
mov
mov
pop
call
and
enter
dec
stc
sbb
mov
scas
fisubr
add
jnp
test
test
ffree
add
inc
xor
pop
mov
retf
xchg
imul
adc
dec
or
aaa
mov
ret
jecxz
das
jnp
and
pusha
jmp
adc
imul
fxch
in
xor
ins
pop
ret
pop
jo
and
pop
movs
repz
pop
jb
inc
ins
sub
fst
pop
stos
lock
xor
mov
sar
lods
dec
mov
(bad)
(bad)
mov
ret
mov
fidiv
adc
lahf
push
or
call
paddw
pop
add
imul
leave
repz
sbb
push
push
sbb
inc
jns
sub
jecxz
add
das
jle
and
ins
xor
inc
xchg
add
fadd
(bad)
mov
(bad)
or
dec
mov
ins
sub
cmp
mov
int
jecxz
movs
outs
dec
inc
cld
fcmovbe
(bad)
jae
fnstenv
fcmove
dec
sub
lds
fldcw
lds
cmp
jge
push
loop
mov
mov
add
out
loopne
pusha
mov
xlat
fistp
push
imul
push
sbb
call
cmc
pop
adc
ret
and
aam
inc
(bad)
bound
hlt
inc
clc
(bad)
stos
pop
rcl
lods
inc
mov
in
jmp
add
push
pusha
jge
inc
jae
arpl
pushf
dec
popa
ficomp
cmp
aas
mov
inc
cmp
call
mov
lds
and
sub
xchg
lods
mov
sbb
mov
push
inc
dec
fnsave
xchg
ds
loop
and
(bad)
dec
pop
faddp
in
dec
sahf
add
mov
push
ss
stc
mov
sub
movs
xchg
or
jns
adc
movs
or
cmp
jge
push
cmp
push
or
pop
xchg
push
aad
out
(bad)
fldcw
cmp
sti
loopne
adc
sti
push
push
jns
stos
aam
jle
mov
(bad)
in
fmul
not
mov
xor
ror
aas
ins
out
push
mov
stos
fbstp
fsub
inc
in
(bad)
push
adc
aad
adc
mov
loop
jb
in
inc
xor
clc
test
ror
xchg
add
mov
mov
jns
pop
mov
repnz
fdivp
lds
xchg
jle
sub
push
dec
aam
bound
div
je
ret
xor
cmp
inc
test
ins
ret
hlt
dec
sbb
jecxz
or
jecxz
cld
mov
shl
mov
dec
dec
outs
push
cmps
aaa
dec
les
jl
iret
cmp
xchg
nop
fwait
std
xor
sbb
ss
xor
int
inc
js
ret
gs
lds
pushf
push
test
je
jge
punpcklwd
cmc
aam
aaa
popf
shl
sbb
scas
jo
repnz
in
mov
cwde
xchg
push
dec
ficom
std
push
or
pop
fadd
inc
call
sub
jnp
push
ja
and
jmp
pop
(bad)
lock
cmp
push
pop
outs
fdiv
mov
cli
outs
and
enter
adc
mov
mov
das
dec
pop
and
ret
add
jo
clc
in
adc
daa
imul
in
inc
push
xor
mov
outs
dec
popf
rcl
mov
dec
loope
lods
jl
lea
push
add
mul
or
push
pop
jnp
cmps
add
or
cmp
or
ins
daa
mov
int
neg
pop
enter
call
pop
and
cmp
jl
ins
test
sbb
sbb
inc
mov
mov
or
jle
rol
test
push
clc
inc
std
inc
push
mov
mul
mov
push
(bad)
cwde
aam
(bad)
test
dec
mov
pop
xor
enter
fadd
fdiv
gs
fldcw
in
(bad)
jl
bound
mov
out
dec
iret
lock
cs
push
aam
cmps
xor
and
imul
or
ins
sti
dec
xor
mov
pop
loope
xchg
cmp
push
cmps
pop
jno
sub
arpl
mov
retf
fdiv
sbb
add
lods
rcl
pop
mov
out
ffree
push
pop
fdivrp
hlt
sub
inc
mov
and
inc
pusha
frstor
fs
pop
and
cdq
out
imul
jmp
mov
je
push
scas
and
test
repz
mov
xchg
test
xor
pop
add
test
xchg
mov
cmp
and
cs
ret
push
js
fdivrp
mov
test
lds
iret
xchg
aad
cmps
(bad)
popa
mov
mov
push
push
mov
xor
enter
aas
fwait
cmp
mov
jno
mov
scas
test
mov
mov
loopne
mov
push
xchg
dec
jp
adc
vmovntpd
neg
mov
push
and
out
jmp
dec
add
cmps
push
movs
iret
and
jno
es
cmp
sbb
clc
std
(bad)
pop
push
xor
dec
shr
div
sub
cmp
jmp
sbb
outs
inc
in
enter
fbld
dec
mov
xor
aas
push
call
ja
rcl
push
xchg
sub
(bad)
dec
inc
sahf
pop
sahf
push
cmps
int
xchg
repz
cmp
xchg
mov
stos
jle
jmp
push
aas
ret
push
bound
daa
cmp
jp
jl
out
or
jmp
mov
or
pop
add
jecxz
pop
nop
sub
lea
(bad)
mov
mov
cmp
fcomp
inc
mov
push
movs
pop
test
(bad)
mov
jbe
cwde
push
lea
add
faddp
or
(bad)
aaa
imul
inc
and
add
cli
lahf
inc
call
add
ds
mov
xchg
movs
xor
sbb
mov
xchg
jg
retf
aaa
push
call
push
gs
bound
retf
sahf
mov
(bad)
push
in
jmp
or
mov
neg
cmp
lods
jmp
or
or
inc
jb
or
mov
mov
pop
sbb
xchg
fwait
mov
or
sbb
or
sub
add
xor
gs
test
and
int
xchg
rol
cmp
and
int
push
leave
sub
inc
vpminub
test
adc
jmp
and
xchg
inc
xchg
fld
dec
xor
scas
push
ds
push
or
cmp
add
into
lods
sbb
dec
ret
loope
jne
inc
outs
int3
add
cmps
cmp
ss
(bad)
aam
imul
imul
outs
mov
sahf
mov
sahf
test
add
(bad)
sti
rcl
movs
out
js
fadd
mov
imul
test
lock
lds
leave
(bad)
jmp
adc
mov
repz
or
xchg
scas
jg
lahf
mov
mov
pusha
ficomp
xchg
jns
mov
movs
xchg
dec
int
sbb
outs
push
sub
mov
out
mov
sti
loope
fild
mov
test
add
or
fwait
adc
or
jne
mov
int3
into
popf
addr16
mov
aas
das
cmp
adc
pop
mov
fcomp
pop
fisubr
das
push
adc
jno
mov
sub
call
out
jp
xchg
push
sti
xchg
or
or
sbb
pop
out
mov
mov
adc
push
or
xchg
cmp
inc
and
das
cli
jnp
sub
pop
sub
mov
xor
jle
mov
mov
mov
arpl
push
in
sbb
cmp
pop
mov
mov
pushf
push
fadd
data16
out
cmp
icebp
sub
fidivr
push
movs
call
shr
dec
add
outs
int3
dec
cmps
js
test
xchg
retf
test
sbb
add
out
js
xchg
inc
mov
xchg
mov
mov
mov
mov
sbb
inc
bound
test
push
sbb
ja
mov
push
lahf
gs
aad
add
jnp
ret
test
loopne
sub
mov
dec
sti
jge
icebp
mov
jnp
repz
xor
mov
cmp
(bad)
outs
adc
cmps
pop
iret
rcl
sub
movs
and
jb
xor
ss
inc
xor
bound
jecxz
hlt
mov
dec
add
jg
into
pop
inc
int3
jno
mov
adc
or
fnstenv
fisttp
fs
and
mov
fdiv
push
cwde
scas
ror
imul
push
in
sbb
mov
adc
push
push
xor
neg
test
pop
xor
pushf
fstp
popa
les
pop
inc
les
push
mov
adc
xor
cdq
fistp
stos
jbe
loopne
outs
aam
ret
loopne
sub
adc
in
shl
add
(bad)
rol
in
stos
adc
ret
jns
outs
jg
icebp
into
cmp
cli
lods
inc
in
cld
xor
imul
or
imul
xor
mov
mov
xchg
and
push
jge
mul
push
int
stc
fadd
inc
pop
mov
mov
cmc
add
jge
jg
(bad)
sub
adc
cmc
enter
movs
scas
add
daa
lods
stos
jns
inc
retf
mov
inc
xchg
idiv
sbb
xor
cmc
int3
leave
shr
daa
jle
adc
(bad)
neg
pand
dec
jbe
popf
arpl
jb
xchg
std
out
adc
loope
and
popf
dec
adc
(bad)
repnz
cwde
out
xor
push
(bad)
nop
mov
test
xchg
xchg
dec
xchg
stos
jb
xchg
mov
cmp
or
(bad)
sub
mov
jg
(bad)
hlt
movs
pop
xchg
(bad)
inc
sub
mov
xchg
cmp
jl
cld
xchg
xchg
jle
xchg
daa
push
or
inc
movs
(bad)
adc
pop
pushf
sbb
inc
daa
mov
mov
loopne
mov
fwait
mov
imul
dec
push
push
icebp
lods
jo
vpavgw
inc
sbb
pop
(bad)
idiv
loopne
and
js
adc
xor
test
(bad)
push
neg
enter
enter
in
dec
addr16
inc
inc
jnp
shl
ss
mov
adc
xchg
std
cmp
mov
stc
pop
aaa
aam
int
mov
mov
in
xlat
mov
push
repnz
mov
inc
div
or
sub
inc
data16
lds
repz
jns
out
mov
lods
sub
loopne
xchg
popa
dec
sub
add
mov
sub
mov
popa
dec
jmp
lahf
cmps
stc
xor
jmp
ins
fdivr
jmp
lea
in
daa
out
mov
inc
and
or
jle
pushf
in
repnz
xchg
fwait
mov
imul
inc
cmc
cmp
popa
pop
xchg
out
push
xchg
ins
jo
mov
mov
fst
ss
mov
ins
jns
sub
sbb
sbb
inc
push
mov
jmp
xchg
dec
ins
sub
push
mov
add
jmp
jmp
lahf
retf
cmp
scas
sub
stos
lock
clc
pop
ins
rol
jl
or
ficomp
fnstenv
dec
jecxz
mov
lods
cmc
mov
out
(bad)
sub
pop
and
bound
fisttp
rcl
cmp
mov
std
mov
fstp
ret
repz
and
cmovle
or
cmc
mov
dec
pop
fucomip
mov
jns
outs
mov
(bad)
call
xor
jl
mov
mov
and
popa
es
cli
cwde
stos
push
in
inc
adc
(bad)
gs
out
js
xchg
jo
movs
cmp
pop
pop
and
ds
jp
loopne
lods
ins
das
jnp
xor
loope
pop
out
xchg
xchg
cdq
cmp
inc
icebp
ret
mov
sub
and
bound
cmp
jecxz
add
cmp
lods
sub
xbegin
lock
shl
fwait
push
push
jle
mov
push
test
add
add
(bad)
mov
shl
int
jp
xor
inc
imul
or
dec
inc
sar
int3
(bad)
sar
pop
mov
xor
or
add
aas
test
add
xchg
repnz
mov
push
lds
pop
jb
out
(bad)
xchg
fwait
xchg
test
push
push
jnp
ficom
mov
mov
int
dec
cmc
pop
sbb
stos
dec
shl
adc
jmp
dec
imul
add
nop
ins
int
xchg
sbb
popf
mov
dec
aaa
fistp
push
jmp
int
std
bound
mov
leave
mov
call
ins
pop
cmp
scas
gs
ins
stos
jge
retf
sub
dec
and
and
retf
push
or
xor
fisub
in
repz
mov
xchg
pushf
(bad)
mov
out
mov
add
xchg
dec
imul
in
push
sub
mov
fwait
mov
neg
and
xor
jmp
sbb
mov
adc
xchg
imul
hlt
cwde
fdivr
js
(bad)
mov
adc
bound
aad
sbb
ja
stos
pop
mov
fdivr
(bad)
fcom
sub
cld
mov
lock
enter
mov
mov
scas
(bad)
pusha
(bad)
sub
sbb
inc
ficom
mov
add
cmps
loopne
int
das
lods
inc
lods
cmp
aam
sbb
dec
push
stos
sbb
or
mov
movs
(bad)
xlat
mov
test
jle
sbb
add
inc
pop
xchg
mov
or
fiadd
jp
xchg
cmp
popf
cmp
xchg
not
aaa
cmc
lds
mov
test
jg
mov
add
jae
mov
repz
push
inc
sar
xchg
icebp
add
mov
cmp
retf
mov
ins
dec
add
fistp
cmps
cdq
movs
mov
cmp
jl
dec
pop
jmp
lock
sbb
(bad)
(bad)
mov
iret
stos
mov
push
ins
mov
xor
mov
jp
xchg
pushf
jecxz
cmp
xor
push
pusha
scas
cmps
rcr
(bad)
stos
fcom
pop
cld
shld
inc
inc
xchg
enter
xchg
add
iret
sub
xchg
neg
mov
adc
mov
pop
xchg
dec
mov
inc
fild
xchg
pop
push
dec
cmc
xor
pusha
mov
sti
mov
xor
mov
adc
jl
fld
test
or
mov
or
std
jl
xor
bound
lea
lods
jg
adc
jp
pushf
int
inc
mov
into
stc
adc
pop
fld
call
sub
ins
in
pop
inc
xchg
push
pop
and
ss
push
dec
or
dec
xor
sbb
scas
mov
bound
or
dec
leave
sub
inc
xchg
dec
inc
ret
cmps
fnsave
inc
push
loope
dec
(bad)
dec
sbb
out
push
cmp
mov
dec
popa
ins
xchg
fcmovnb
jns
out
repnz
and
(bad)
repnz
movs
cmc
mov
inc
inc
pop
xor
xor
jle
aam
jg
adc
mov
add
xchg
jl
cmp
aad
outs
cmp
xor
mov
out
inc
adc
xchg
inc
adc
xchg
cwde
jecxz
out
dec
jg
jge
adc
lods
and
aam
inc
ins
dec
test
jmp
ror
or
push
hlt
cmp
xchg
mov
lods
mov
fisubr
pmuludq
stc
jae
outs
das
rcl
sub
push
retf
push
jmp
mov
and
sub
pop
mov
fidivr
inc
xor
idiv
cs
push
(bad)
jbe
mov
dec
cmc
dec
pop
xor
mov
imul
test
mov
pop
rcr
cmp
imul
popf
bound
mov
xchg
pop
push
jmp
je
nop
fbstp
pop
outs
imul
mov
mov
(bad)
mov
mov
test
in
mov
neg
add
sbb
(bad)
in
stos
jl
push
dec
fs
jbe
mov
imul
jecxz
popf
rcl
ror
mov
jbe
ss
jmp
pop
sbb
icebp
fisubr
or
jp
and
popa
inc
mov
sbb
idiv
dec
ret
fild
mov
adc
bnd
inc
inc
popf
popf
stc
mov
in
movs
js
test
mov
add
jae
lods
fild
jmp
mov
in
rcr
cmp
fild
push
data16
(bad)
outs
not
xor
and
xchg
jns
movs
fidivr
dec
test
inc
in
sub
mov
(bad)
call
sub
xor
cmp
xor
xor
iret
pop
test
das
neg
cmc
push
jl
repz
push
pop
out
(bad)
fnstsw
or
pop
xor
dec
jmp
icebp
ja
sbb
push
jle
mov
push
rol
test
jo
and
sbb
rcl
sbb
cli
jbe
pusha
pop
push
push
aam
sub
sbb
fwait
push
dec
jbe
ficom
pop
int
lock
sahf
xchg
arpl
mov
xchg
addr16
imul
int3
popfw
nop
es
adc
dec
pop
fdiv
mov
mov
cmp
ds
cmp
xor
outs
shl
lds
jb
movs
psraw
fwait
or
pop
imul
jb
pop
pop
aad
fxch
in
jo
shl
retf
fs
clc
add
mov
adc
mov
out
adc
cmp
or
xchg
lahf
les
fsubr
cmp
outs
push
mov
jl
lahf
sub
popa
add
sub
gs
inc
loope
pop
(bad)
in
inc
or
sub
pop
mov
ret
retf
xchg
sub
lods
dec
pop
sub
test
push
sub
adc
pop
or
les
test
ins
fcom
dec
jns
cmp
push
mov
(bad)
mov
and
mov
imul
xchg
repz
in
inc
test
cmp
xchg
mov
sub
(bad)
int
push
pop
and
jb
pop
cmps
pop
push
mov
push
mov
cmp
and
cld
scas
mov
inc
xor
add
jne
jmp
xchg
jb
push
cmp
imul
call
sbb
add
test
push
jecxz
(bad)
mov
and
mov
sub
fild
(bad)
pop
xchg
cdq
jp
xchg
inc
(bad)
rcr
jg
jno
jno
xor
or
imul
or
jo
test
ds
fwait
xchg
loopne
mov
mov
nop
in
inc
mov
imul
add
not
div
cmp
dec
lds
adc
or
ret
mov
add
fs
mov
retf
aad
inc
cwde
fldcw
cmp
mov
in
mov
add
and
pop
xchg
mov
jp
in
or
xchg
retf
dec
dec
sbb
inc
mov
out
xor
ins
mov
mov
cmc
mov
scas
call
scas
icebp
in
adc
mov
(bad)
mov
mov
pop
xchg
jnp
push
adc
xor
(bad)
ror
mov
lock
rcr
out
xchg
push
stc
repz
dec
inc
ret
dec
add
fcom
gs
jmp
aaa
sbb
xor
(bad)
leave
cmp
sbb
sub
bsr
xchg
sub
xor
pop
es
ror
into
cs
arpl
xor
jne
inc
and
es
into
jmp
xor
call
fisub
pusha
pop
sub
movs
std
(bad)
test
sahf
fadd
cwde
das
adc
jnp
fs
test
sub
push
push
cwde
in
and
mov
xor
popa
imul
mov
dec
mov
cli
into
sbb
inc
aas
xor
push
sub
fidiv
and
stos
rol
bound
xchg
les
cmp
call
mov
fldenv
aaa
in
dec
daa
ins
popa
movs
loopne
jg
jne
mov
xchg
sahf
into
sub
fist
push
and
mov
pop
pop
pop
sbb
lea
fdivp
in
ror
sub
pusha
xor
or
fistp
scas
cmps
icebp
mov
inc
xchg
or
mov
push
dec
or
cmp
cs
or
test
pop
or
retf
mov
fs
xor
lea
or
movs
out
pop
inc
mov
popa
rcr
adc
sti
add
mov
push
push
inc
mov
cmp
cld
push
lods
dec
enter
xchg
lods
hlt
(bad)
aam
xchg
loop
(bad)
repnz
sar
daa
mov
dec
sub
mul
mov
icebp
inc
sub
push
xor
sbb
not
mov
ret
(bad)
jge
or
sub
shl
jno
xor
mov
popa
in
sbb
sub
cs
xchg
add
(bad)
out
aam
or
ss
mov
add
sbb
call
nop
pop
(bad)
dec
das
pop
in
sti
hlt
mov
dec
imul
sbb
sbb
and
lods
push
shl
dec
mul
in
cmps
sbb
mov
lahf
push
inc
sbb
adc
push
jl
hlt
imul
adc
mov
adc
shr
jg
sbb
mov
cmc
push
ror
test
xor
add
mov
mov
or
nop
cli
inc
lods
pushf
std
outs
in
inc
fnclex
jnp
movs
mov
xor
sbb
fild
ja
lods
adc
push
scas
(bad)
jo
or
sbb
loop
out
adc
cmp
dec
shl
loop
mov
xchg
arpl
xchg
xor
inc
sub
mul
mov
push
mov
fistp
in
cdq
ret
push
cmps
or
xchg
sti
lds
fsub
sbb
fwait
sti
cmps
add
imul
out
jnp
mov
jo
lock
pop
test
fidiv
rcr
mov
mov
or
sub
push
popf
adc
push
fcom
das
push
test
cwde
sub
lea
loop
ret
sbb
mov
add
pop
cmps
jae
mov
sub
add
mov
jge
adc
xor
jae
push
fs
sahf
push
cwde
(bad)
mov
fidiv
into
pop
add
fcom
jp
xchg
sar
int
out
and
cmc
and
out
sbb
xchg
or
sub
nop
and
adc
scas
sbb
and
(bad)
dec
ror
adc
test
into
mov
jae
pop
sub
aad
and
dec
popf
push
mov
dec
dec
xchg
(bad)
adc
outs
sub
and
mov
int3
xchg
mov
pop
addr16
push
or
ret
jnp
popf
bound
mov
das
xchg
cs
iret
xchg
jnp
mov
repz
(bad)
cmp
or
xchg
(bad)
jae
mov
mov
stos
xor
fucomi
cld
sub
push
mov
jge
add
mov
xchg
xchg
jl
daa
ffreep
adc
push
mov
add
stos
xchg
(bad)
dec
cmp
(bad)
push
pop
inc
sub
ret
shl
in
iret
adc
pop
cli
mov
loope
inc
aad
inc
mov
int
retf
add
shr
jl
lahf
stos
or
jo
or
push
(bad)
movs
iret
call
sbb
xchg
sbb
inc
mov
sahf
mov
imul
je
es
xor
popf
add
clc
ret
pop
or
jmp
dec
loop
sub
addr16
jle
adc
icebp
mov
add
pop
mov
xchg
ds
xor
movs
movs
add
fiadd
(bad)
in
dec
adc
gs
xlat
add
nop
and
push
scas
xchg
jp
pop
cmp
xlat
sar
adc
sub
or
pop
rcr
cmp
sbb
daa
lods
or
gs
xor
xchg
push
shr
(bad)
test
lods
jno
inc
outs
and
js
out
push
xor
loopne
mov
and
jb
in
mov
lods
test
iret
add
xchg
aaa
mov
ins
sti
fsub
outs
sar
arpl
mov
pop
cmp
sti
mov
sbb
cli
jmp
inc
(bad)
mov
lods
mov
stc
inc
fisub
xchg
popf
inc
jmp
dec
sbb
int
test
jmp
mov
xchg
or
addr16
push
fisub
pusha
ja
std
test
add
push
jae
popf
push
pop
icebp
mov
and
fsub
dec
mov
and
(bad)
enter
daa
jmp
lahf
xchg
out
cmp
retf
retf
dec
lods
dec
mov
fnstsw
cmp
mov
daa
out
mov
xor
push
pop
stos
ss
lock
rol
retf
add
ds
popa
jb
or
inc
dec
and
addr16
sbb
sbb
xor
pop
pop
in
dec
enter
jne
dec
pusha
or
inc
cmps
jnp
dec
fdiv
pop
xchg
xchg
lds
mov
popa
cdq
sub
out
xor
test
jge
(bad)
and
(bad)
sahf
cmp
std
gs
mov
mov
ins
mov
cld
movs
xchg
mov
ja
push
das
out
mov
std
jnp
jne
mov
cmp
clc
xchg
push
setnp
inc
test
mov
int
and
xchg
je
xchg
test
and
push
dec
push
iretw
inc
sbb
adc
mov
mov
js
xchg
std
inc
fdivr
xor
xchg
sbb
mov
aas
xor
mov
fsub
cmc
xchg
retf
test
mov
and
movs
in
push
ret
add
dec
movs
(bad)
pop
inc
clc
inc
pop
mov
and
xor
add
test
lods
loop
rcr
dec
out
push
xchg
shl
push
cmps
sbb
(bad)
fisubr
es
or
cwde
out
and
adc
dec
aad
fdivp
xchg
jecxz
fidiv
arpl
jmp
rcr
addr16
adc
(bad)
push
sub
mov
dec
sahf
dec
mov
into
xor
cmp
jl
adc
arpl
(bad)
push
adc
movs
jnp
jle
pusha
ret
mov
pop
pusha
pop
cld
xor
ins
frstor
push
bound
loopne
clc
mov
sub
fstp
xor
jbe
push
pop
pop
and
shl
cmp
push
movs
adc
jmp
inc
push
or
mov
inc
inc
cmp
movs
mov
dec
popa
retf
std
pop
popa
cld
jl
lods
sbb
xchg
rol
push
jno
int
dec
adc
test
sbb
mov
in
rol
div
adc
call
xor
push
movs
inc
mov
mov
and
cmc
jae
das
sbb
cmp
or
js
cmps
pop
xchg
push
imul
outs
fs
repnz
cdq
ins
inc
adc
lods
adc
shl
mov
lods
cwde
cmps
daa
or
dec
in
jbe
xchg
pushf
in
jle
(bad)
imul
sub
fisttp
dec
pop
cmps
push
sub
jle
(bad)
outs
or
xor
sub
(bad)
adc
rcl
out
(bad)
xor
push
popf
pop
(bad)
mov
push
cmps
add
ds
fld
jmp
out
and
lods
pop
sahf
jmp
imul
xor
aaa
cmc
sub
ins
fwait
(bad)
mov
jmp
es
cmps
rcr
push
dec
xor
cmps
dec
ins
mov
es
inc
jl
outs
add
sub
xor
lock
add
imul
in
pop
cmp
xchg
out
lods
dec
jmp
(bad)
xchg
es
out
aam
inc
adc
shl
into
or
scas
pop
sbb
shl
arpl
fcomp
add
fldcw
adc
push
cli
loope
or
out
inc
popf
pop
push
push
shl
popa
jb
mov
or
adc
out
adc
jbe
ret
nop
push
dec
inc
xor
test
data16
in
fsub
sahf
mov
popf
or
inc
xchg
sar
pop
out
jmp
(bad)
repnz
cmp
retf
call
cwde
jp
sar
in
stc
(bad)
mov
push
pop
fisubr
and
cli
sbb
imul
cmove
sub
and
sbb
hlt
in
sub
add
aas
push
je
cmp
popa
or
jne
jns
xor
or
adc
loope
or
jmp
lea
fs
es
pop
test
(bad)
adc
push
test
pop
push
ins
sbb
or
and
push
fdiv
mov
aas
add
xchg
ror
movs
retf
xchg
stos
push
mov
iret
xchg
imul
dec
xor
pop
mov
ins
or
cmps
mov
push
push
add
adc
stos
aaa
mov
mov
fwait
pop
stc
(bad)
mov
pop
retf
test
movs
cmp
clc
and
(bad)
jl
and
xchg
and
push
mov
leave
std
rol
aam
or
stos
ret
inc
dec
pop
adc
push
cwde
pusha
pop
int3
mov
mov
push
jge
jmp
retf
sub
push
(bad)
pop
js
stos
clc
push
mov
js
popf
ret
repz
pusha
pop
jae
into
out
pop
fsub
leave
and
movs
(bad)
hlt
or
jns
scas
stos
mov
les
nop
jl
jle
(bad)
ret
pop
inc
mov
xor
xchg
inc
or
mov
aaa
shr
dec
add
xchg
cmp
pop
lods
fs
loopne
or
cld
pop
add
scas
shl
bnd
sub
xchg
jmp
xchg
cdq
mov
mov
pop
pop
and
(bad)
xlat
fidiv
int
mov
lods
icebp
mov
mov
mov
ins
dec
inc
std
rcl
popf
(bad)
cdq
push
sub
sub
add
pop
jmp
retf
pop
adc
addr16
loope
xor
ret
xor
jmp
loope
mov
mov
mov
cmp
push
push
add
data16
mov
out
pop
movs
lock
push
mov
in
ss
stos
add
outs
inc
ds
inc
pop
stos
retf
mov
jb
xchg
sub
xchg
xor
rcl
les
sub
js
pop
jp
adc
adc
aam
mov
xchg
push
mov
fincstp
xor
test
push
loope
and
jbe
xchg
mov
pop
jae
dec
ret
(bad)
je
lds
pop
shr
lods
into
pop
cwde
jnp
inc
jb
pop
mov
sbb
jl
ja
(bad)
cmp
dec
sbb
cmp
dec
sbb
mov
jns
inc
stos
outs
leave
push
and
inc
lods
sbb
jbe
pusha
ins
jmp
test
push
je
pushf
cmp
stos
jb
mov
mov
ror
arpl
adc
dec
mov
push
aam
cmc
push
jo
ss
or
jmp
and
jmp
sbb
jb
add
cmp
loopne
inc
test
xor
stos
pusha
ss
xor
es
adc
aaa
jns
ret
test
xchg
out
push
cmp
int3
and
call
in
xor
mov
or
rcr
clc
pushf
or
addr16
daa
xchg
inc
and
in
xchg
rol
into
and
nop
push
cmp
fld
sub
sbb
retf
sbb
aam
(bad)
cmp
addr16
fidivr
cmp
imul
int3
pop
inc
jmp
and
jl
stc
call
out
cwde
jns
push
(bad)
out
sbb
mov
fld
mov
stos
scas
inc
sbb
jb
jg
cmps
jg
mov
leave
test
scas
or
sub
lock
arpl
in
and
test
ret
sbb
push
xor
dec
les
(bad)
xchg
(bad)
jmp
mov
jb
repnz
xchg
lods
ret
push
enter
test
pop
xor
arpl
lahf
cli
mov
scas
gs
adc
mov
push
and
xchg
inc
fadd
mov
loop
lahf
out
nop
xchg
lods
mov
jmp
cli
(bad)
mov
jno
sub
or
movs
push
lahf
aam
mov
inc
xchg
ss
lock
bswap
lea
inc
sub
icebp
out
scas
in
sub
sbb
cs
ja
add
mov
(bad)
mov
push
shl
jno
sub
pop
shl
adc
jbe
stos
jmp
mov
or
shl
in
dec
ror
test
mov
mov
imul
ret
jp
cld
test
xor
adc
das
das
and
xchg
popf
or
dec
push
fsub
jge
push
jns
nop
pop
sahf
mov
adc
cmp
out
outs
les
popa
scas
mov
pusha
loopne
inc
cmps
pop
cmp
popa
lods
xor
jecxz
loop
pop
xchg
cs
addr16
cmp
and
mov
popa
jl
cwde
pop
lock
jb
pop
popa
inc
and
arpl
inc
inc
in
or
pop
pushf
adc
je
cmp
jns
push
jecxz
sbb
cld
push
inc
cmp
fwait
mov
imul
imul
inc
mov
jmp
cmps
outs
cmp
cmp
mov
pop
shl
(bad)
ins
push
and
test
dec
test
shl
mov
mov
adc
test
jmp
sbb
test
push
lock
pusha
pop
mov
pop
jge
into
jl
inc
aas
add
dec
bound
sub
xor
or
fcom
mov
imul
hlt
cmps
push
int3
stos
gs
lahf
es
jg
out
popa
hlt
mov
xlat
add
push
jmp
idiv
test
jmp
inc
cmp
mov
mov
xor
ins
cmp
(bad)
sbb
ja
adc
add
(bad)
out
and
or
jge
push
fwait
(bad)
mov
cmps
ja
xchg
ja
cwde
jae
aas
ret
sti
jb
loopne
out
add
rcr
sub
test
push
test
mov
cmc
mov
movs
sub
inc
jbe
push
out
pop
and
daa
dec
sub
scas
or
(bad)
stc
(bad)
xor
repz
fwait
dec
clc
pop
fcmovbe
outs
sub
pop
(bad)
xor
mov
popf
addr16
fcmovne
ror
jno
mov
mov
cwde
xchg
cwde
jp
xor
outs
jl
mov
ret
jp
adc
pop
push
or
cmc
mov
inc
scas
(bad)
dec
xchg
push
push
dec
jmp
add
stos
in
aas
je
xchg
pushf
cs
jp
mov
push
mov
mov
mov
ss
jle
ins
add
std
out
push
ss
cmp
add
(bad)
or
out
mov
push
inc
xor
fs
stc
jo
in
fcmovb
dec
popa
pop
xchg
xchg
fadd
scas
mov
mov
call
fstp
sbb
or
call
mov
pusha
loope
pushf
icebp
jmp
aad
xchg
push
imul
je
add
jmp
xchg
cld
and
mov
dec
xchg
mov
xor
pusha
pop
test
sbb
test
jle
not
repz
hlt
mov
icebp
movs
or
daa
mov
adc
xchg
xor
hlt
fild
push
push
push
shl
mov
xchg
js
lds
sbb
sbb
cdq
dec
adc
xchg
jo
xor
fnsave
mov
aam
cmps
test
dec
mov
push
push
jnp
pop
xchg
mov
jae
jl
sbb
mov
lods
mov
aam
loope
cmp
cmp
sub
push
scas
adc
push
jge
push
das
dec
jnp
loopne
mov
imul
jns
and
dec
fidivr
dec
add
cmp
pop
pop
mov
retf
ror
ret
xor
call
xchg
daa
sbb
inc
mov
mov
fiadd
pop
mov
and
arpl
inc
imul
imul
shl
xor
mov
fs
jecxz
adc
xchg
pushf
loopne
pop
in
retf
jle
mov
push
xlat
jne
inc
add
add
jne
dec
popa
ret
xchg
das
cmp
jmp
push
mov
mov
add
enter
inc
(bad)
xchg
ret
sub
mov
xchg
dec
dec
cmp
sbb
popf
loope
lods
neg
outs
adc
adc
in
jmp
mov
iret
pusha
cmps
lods
test
cli
loop
xchg
pushf
jp
or
mul
lahf
push
jmp
pop
jo
scas
sar
fist
sbb
mov
outs
out
cmps
push
out
and
jecxz
xor
sub
add
cdq
push
(bad)
inc
imul
dec
mov
(bad)
icebp
push
arpl
cdq
in
mov
sti
sub
fistp
xchg
scas
out
test
repnz
repnz
scas
mov
outs
push
sbb
xchg
rcl
into
data16
jmp
loopne
imul
pop
icebp
int
sbb
fadd
push
mov
stos
mov
cmp
jnp
cmp
cwde
cmp
inc
stc
xchg
daa
scas
out
inc
mov
jle
out
fcom
add
popf
test
mov
jae
xchg
add
sub
sti
out
inc
fistp
les
cwde
inc
pop
outs
ret
loope
jno
std
popaw
and
mov
ds
outs
adc
pop
call
je
pop
xchg
cwde
mov
pop
or
mov
pop
jo
add
stos
and
pop
inc
aad
rcr
pop
adc
xlat
push
sub
add
mov
lods
mov
xchg
push
pop
cmc
out
mov
js
jnp
ja
jl
in
sti
push
imul
scas
jmp
lds
or
jp
xchg
inc
fistp
cmp
xlat
jl
pop
icebp
xchg
int3
scas
(bad)
pop
call
ins
lds
popa
ins
out
ret
ds
(bad)
sahf
jno
(bad)
lahf
cmc
lahf
jbe
or
push
xchg
jge
int
or
lds
jnp
mov
sbb
iret
das
enter
lea
push
xor
jecxz
stos
into
jp
mov
and
pop
mov
mov
mov
mov
fisub
jmp
in
jle
neg
mov
not
aaa
icebp
call
jge
and
mov
daa
repz
mov
xchg
into
push
or
xchg
cld
cmp
hlt
jmp
inc
push
(bad)
aas
cmp
cli
stc
dec
out
sub
mov
mov
std
gs
cmps
cmp
inc
inc
test
push
inc
mov
(bad)
sti
fistp
test
mov
inc
popa
add
out
outs
xchg
dec
imul
js
in
xchg
retf
pop
stc
pusha
inc
into
pop
xchg
js
retf
bound
shl
mov
sbb
pop
sbb
out
out
out
adc
into
lahf
jecxz
fsubrp
fistp
mov
inc
jg
ins
pushf
fisubr
test
int
mov
enter
sar
sub
dec
test
mov
sbb
js
cld
jg
nop
and
xchg
mov
call
pop
in
cmp
popa
cwde
add
ret
fwait
cld
jnp
cmp
aam
cmps
ins
ins
jl
pop
ret
pop
popa
sti
pop
xor
pop
adc
scas
inc
sbb
push
(bad)
cmp
push
mov
stc
pop
jecxz
mov
cmc
jmp
xchg
dec
(bad)
adc
mov
scas
dec
sahf
jl
dec
cmp
pop
shr
scas
dec
xor
repnz
loop
icebp
mov
ja
adc
dec
push
je
or
popf
sub
or
ret
push
sub
add
mov
add
cmp
fild
lahf
sub
pop
jno
push
add
pop
and
mov
pop
adc
cli
dec
iret
mov
bound
std
out
cmp
inc
and
popa
dec
ins
adc
in
mov
aam
cmp
mov
es
adc
add
push
cli
cmp
inc
or
clc
pop
sbb
jne
push
lea
(bad)
mov
add
mov
mov
jecxz
lahf
mov
dec
fisttp
adc
loope
cmp
js
mov
int
nop
stc
and
fist
int
out
push
add
pop
jno
cmp
inc
sub
pop
xor
pop
inc
in
nop
sbb
ja
scas
xlat
inc
sbb
push
stc
arpl
sahf
test
cld
test
fbstp
push
pop
mov
pop
ret
mov
out
test
mov
fld
jns
in
jl
cmp
pushf
test
cmp
jge
test
sti
inc
jmp
and
push
mov
in
cmp
jg
test
dec
cmp
into
ins
fidivr
sbb
adc
inc
push
mov
(bad)
jmp
stos
mov
arpl
xor
repz
in
xchg
push
loopne
sahf
cli
add
push
mov
jp
hlt
call
and
mov
aas
sub
(bad)
sbb
inc
sar
and
push
pop
int
add
(bad)
retf
and
inc
inc
rol
push
dec
mov
rcr
mov
je
scas
call
daa
sbb
in
mov
mov
xchg
into
pop
xor
inc
dec
cmc
aad
lods
cli
push
xor
stos
aam
mov
jns
add
jmp
stc
int3
mov
and
(bad)
fldcw
mov
addr16
imul
sub
push
hlt
mov
retf
jmp
cmp
test
and
dec
not
enter
jle
push
mov
pusha
clc
iret
pop
repz
mov
mov
pop
ds
lds
add
movs
push
mov
fbld
sub
mov
retf
dec
in
addr16
call
dec
inc
hlt
js
ss
repz
dec
and
aaa
call
cdq
xlat
enter
arpl
dec
leave
sti
mov
xor
(bad)
test
add
and
jecxz
cmp
out
ret
mov
inc
cmp
fs
jae
dec
test
or
pop
lock
or
movs
inc
pop
adc
xlat
in
pop
ficom
mul
cmp
retf
shr
jb
add
sbb
fdiv
jl
or
repnz
xchg
mov
sbb
les
push
rcr
add
or
repz
push
mov
outs
sub
push
jl
pop
daa
xlat
jge
push
add
das
cmp
mov
mov
dec
inc
scas
lea
push
jb
mov
retf
jo
mov
sbb
push
adc
xchg
icebp
pop
jp
sbb
jmp
pop
popa
jne
fadd
jg
mov
mov
cli
je
hlt
das
xchg
ins
pop
pop
mov
lea
popa
jle
stos
pop
sbb
stos
rol
popf
js
xchg
cdq
add
xchg
sbb
pop
sub
leave
std
jmp
aad
popf
mov
mov
cmp
iret
dec
sahf
mov
xor
mov
cmp
cmp
xchg
ret
aam
out
cmp
adc
or
cld
inc
xor
ss
pusha
loopne
inc
je
push
(bad)
jmp
ins
jmp
int3
dec
mov
(bad)
push
mov
iret
or
mov
pushf
pop
pop
or
js
aam
retf
push
aas
or
jbe
leave
pusha
push
dec
push
fcomp
mov
pop
jae
push
mov
mov
jo
retf
inc
lds
mov
movs
mov
adc
ret
add
inc
xchg
mov
inc
ja
mov
sar
adc
jb
mov
xor
sbb
cdq
or
cmps
(bad)
sub
ins
das
movs
sbb
cmps
retf
sbb
movs
jge
in
cld
inc
in
add
in
js
push
add
imul
cmps
inc
mov
bnd
sbb
lds
loop
push
div
add
cmps
icebp
je
lods
mov
dec
pop
or
inc
imul
mov
imul
xchg
(bad)
fisttp
js
inc
adc
out
xor
fdiv
inc
outs
or
addr16
sar
mov
xor
pop
arpl
add
rcl
fidivr
lea
jne
adc
in
push
adc
push
movs
mov
cmp
dec
out
jns
popa
push
aam
rcl
mov
iret
jmp
add
mov
lea
inc
ins
adc
xor
stc
xor
fdiv
sub
xchg
add
or
mov
inc
jb
pop
fwait
xlat
lea
out
push
or
aas
cwde
or
xor
push
or
(bad)
pop
fild
jecxz
jmp
aas
sahf
pop
push
xor
(bad)
lods
loop
inc
je
pop
aaa
dec
mov
int
hlt
(bad)
retf
sbb
(bad)
imul
sub
pop
repnz
pushf
shl
cmps
sbb
cs
shr
sbb
repnz
call
rdmsr
das
dec
leave
xlat
xchg
add
sub
xor
pop
push
jmp
icebp
in
leave
cmp
dec
call
pop
dec
stos
adc
dec
(bad)
sub
inc
sub
ja
xchg
pop
dec
lock
xor
mov
mov
dec
ins
jecxz
or
imul
pop
call
push
inc
mov
dec
shl
ror
hlt
push
push
stos
xchg
(bad)
loop
dec
dec
mov
int3
mov
mov
aam
mov
dec
ror
push
and
mov
lods
xchg
mov
loope
adc
jbe
scas
popa
push
inc
repnz
les
cmp
stos
imul
dec
pop
mov
dec
mov
lods
mov
scas
adc
push
xor
add
jg
xor
jno
(bad)
pop
mov
lods
mov
and
test
dec
popa
push
js
data16
xchg
retf
jmp
sbb
int3
sub
jns
adc
dec
nop
inc
cmp
in
dec
dec
aas
ins
ja
(bad)
or
add
test
push
or
stos
and
jge
ins
cmps
xor
imul
mov
movs
mov
jle
stos
(bad)
arpl
movs
mov
js
movs
div
adc
and
dec
add
adc
sub
fwait
movs
out
inc
sbb
(bad)
cli
jne
outs
clc
jb
cmp
loopne
shr
jb
in
cmps
and
cmps
push
outs
call
mov
(bad)
in
jns
jecxz
not
add
idiv
imul
xchg
loopne
or
mov
jmp
into
mov
sbb
dec
in
mov
cmp
out
sbb
mov
adc
retf
pop
mov
loopne
gs
shr
(bad)
rcr
adc
jno
pop
push
push
out
ss
mov
ins
xchg
xchg
jmp
jmp
(bad)
fisub
enter
leave
jnp
lods
icebp
sub
mov
xor
jl
fiadd
add
xor
dec
pop
mov
jnp
das
or
(bad)
push
inc
push
jbe
mov
mov
pop
repnz
or
icebp
push
push
shr
jo
movs
mov
pop
jno
push
(bad)
out
mov
jb
sbb
in
arpl
xchg
in
(bad)
clc
stc
and
cmp
(bad)
mov
pushf
xchg
outs
sbb
in
xlat
mov
and
dec
ins
push
fcomp
and
gs
adc
out
jae
retf
jbe
or
aaa
pop
test
fs
jo
mov
dec
dec
mov
cwde
aaa
cmps
sahf
rol
scas
jl
xchg
add
mov
push
mov
and
dec
ret
cs
stc
jo
xor
out
xchg
xor
cmp
inc
clc
and
dec
stos
inc
mov
or
test
xor
pop
mov
pushf
bound
push
pop
jmp
pusha
push
xor
int
test
call
pop
stos
and
in
sar
dec
cmp
jns
add
mov
int
imul
cmp
sub
jl
data16
stc
cld
and
mov
xchg
cmp
dec
sub
jne
cmps
inc
sub
xchg
inc
and
mov
bsr
cmp
pusha
jl
fnstenv
js
push
inc
sub
mov
retf
ja
cmp
lods
xchg
mov
out
popa
cmp
cmp
in
pop
popa
cmp
sub
xor
dec
xchg
ffreep
mov
(bad)
iret
push
(bad)
mov
ins
cmp
cmp
inc
cmp
jne
ret
push
mov
clc
adc
lds
and
test
jecxz
xlat
adc
fistp
sti
aaa
push
jns
jo
adc
cmp
mov
dec
dec
dec
in
out
push
jmp
shl
retf
(bad)
ret
lds
arpl
lods
cwde
std
mov
adc
dec
and
pop
or
pushf
fucomip
pop
cwde
or
fwait
add
push
adc
or
(bad)
jnp
jmp
mov
sbb
mov
lahf
adc
lock
mov
push
sbb
into
or
adc
iret
cmp
dec
mov
push
ins
mov
xor
out
in
mov
pop
inc
jp
mov
xor
mov
jnp
sbb
xchg
sbb
inc
push
sbb
push
mov
xchg
mov
(bad)
in
addr16
lock
mov
movs
loopne
and
mov
jmp
sub
sbb
cwde
xchg
add
jno
fwait
out
shl
and
sbb
test
xchg
cmp
inc
arpl
sti
jp
movs
xor
jo
push
lods
inc
loopne
and
pop
cli
fdiv
pop
mov
out
and
sbb
mov
stc
jo
jns
jg
xor
sbb
sar
ror
and
sbb
pop
push
dec
xor
ins
sub
push
int3
mov
sbb
mov
mov
call
cmp
shl
jb
mov
and
lea
jae
mov
sub
push
jmp
pop
call
pop
adc
inc
push
pop
pcmpeqb
cmp
aad
out
xor
adc
aaa
(bad)
jno
retf
test
ins
push
jle
adc
mov
test
and
mov
mov
fadd
fisub
pop
jle
cmps
cmps
iret
mov
or
add
sub
xlat
mov
mov
test
ror
mov
cli
mov
jecxz
or
(bad)
or
icebp
dec
sbb
sbb
stc
int
sub
dec
cs
out
add
lods
fnstcw
mov
in
adc
and
data16
push
hlt
ins
(bad)
call
dec
cmp
sbb
xchg
dec
mov
mov
stos
push
scas
call
cmp
xchg
retf
cmp
fistp
les
push
push
cmp
bound
mov
inc
push
fsub
xlat
ret
setg
test
xchg
sub
dec
cmp
pop
push
sbb
inc
sub
iret
clc
xor
xor
or
or
movs
push
fst
xor
adc
jp
repz
clc
cmps
inc
retf
mov
pop
jbe
sar
dec
mov
jmp
(bad)
in
sub
inc
add
fcomp
adc
mov
inc
out
cmp
jbe
loope
movs
fcmovnb
fs
pushf
movs
dec
cs
add
push
cmc
test
push
pop
sub
xor
cmp
(bad)
xor
bound
mov
or
imul
or
pop
jmp
jo
or
mov
mov
dec
adc
lds
xchg
ja
shr
sbb
or
pop
xor
in
jno
and
sub
lods
fisttp
fcomp
into
scas
jne
push
pop
clc
mov
adc
inc
and
xchg
adc
push
mov
adc
ret
stos
cmp
arpl
mov
call
jne
lods
xor
inc
mov
lahf
movups
jl
jae
out
push
fidivr
out
mov
in
fiadd
stc
push
push
jne
pop
adc
mov
pop
xchg
dec
sub
jp
cmps
dec
push
jno
mov
int3
sbb
xor
and
dec
test
and
lods
into
arpl
jg
addr16
pop
inc
mov
lea
lds
pinsrw
mov
dec
sbb
out
stc
rol
loop
add
push
loopne
out
movs
adc
xor
xchg
xlat
cs
es
les
icebp
adc
and
icebp
fsubrp
cmp
inc
adc
pop
sar
ret
ins
push
pop
jo
fs
sti
sub
mov
cld
xchg
mov
dec
arpl
cwde
inc
xor
retf
push
jb
clc
inc
push
shl
test
rol
jmp
ret
sbb
sahf
mov
mov
push
cmp
sbb
int3
cmp
aam
jo
jmp
aad
lds
and
and
adc
jecxz
in
pop
or
mov
xor
loope
lods
out
add
jg
scas
scas
adc
loop
stc
dec
jge
mov
sbb
mov
add
push
adc
int
adc
xchg
mov
inc
std
sbb
aaa
mov
mov
imul
push
arpl
xor
enter
sub
addr16
or
movs
push
inc
in
push
sti
or
dec
mov
bound
sbb
(bad)
ds
cmp
aas
fild
mov
cld
les
cmp
mov
push
mov
push
sbb
cmps
inc
pop
imul
aaa
sub
jmp
cmp
xchg
mov
cdq
leave
jmp
or
pop
xor
sbb
or
xlat
mov
adc
and
jg
aad
mov
sub
pop
ret
jo
call
push
test
addr16
ficomp
jge
mov
or
mov
ror
nop
jge
jne
xchg
xchg
mov
sub
fcom
enter
cs
loop
int3
sub
adc
ja
or
sbb
fnstsw
or
push
sub
mov
add
es
cmp
xor
in
cmp
sub
or
cmp
push
xchg
mov
xor
int3
ficomp
push
mov
pop
out
fwait
push
mov
add
or
mov
enter
(bad)
inc
outs
inc
jge
xor
retf
xchg
sbb
fs
dec
mov
sbb
cs
in
rcr
rcl
les
call
(bad)
sub
dec
shl
popf
xor
outs
(bad)
call
push
div
aam
and
rcr
fcmove
retf
test
movs
adc
mov
mov
hlt
jp
cmp
xchg
fldenv
inc
push
or
sub
jmp
xor
adc
mov
movs
sbb
mov
xor
icebp
mov
shr
jge
pushf
push
or
das
mov
inc
dec
push
mov
push
inc
adc
mov
cmp
pop
inc
ficomp
cmp
cmps
leave
loope
or
sbb
mov
sbb
dec
sar
mov
into
cdq
jle
adc
and
pop
add
adc
lahf
sahf
sbb
popf
leave
cmp
out
lahf
in
repz
ins
mov
cwde
gs
cwde
xor
cmp
inc
arpl
idiv
or
sub
retf
icebp
jmp
xor
outs
mov
das
cwde
adc
test
cmc
pop
jo
xchg
mov
or
sahf
or
jle
mov
cmp
mov
outs
rcl
movs
call
dec
jmp
and
xor
adc
adc
pusha
xchg
mov
xor
stos
arpl
in
ror
cwde
(bad)
mov
adc
icebp
sub
out
leave
and
adc
jo
pop
inc
aaa
(bad)
mov
jne
xor
ins
repz
outs
cli
pop
in
retf
adc
jp
ret
xlat
fwait
imul
jecxz
adc
jle
hlt
stc
enter
xchg
mov
cmp
shl
fild
or
cmp
out
jnp
cmps
adc
mov
in
sbb
loopne
mov
jae
push
xchg
and
sar
add
out
stos
call
or
fcmovu
ins
rcl
jae
sbb
aaa
or
popf
or
iret
sbb
lds
jns
cdq
fst
mov
mov
lea
cmps
push
mov
lods
pop
cmp
push
(bad)
in
int
cmp
mov
push
push
jno
in
inc
scas
cmp
dec
dec
mov
and
sub
dec
cmp
xor
enter
fmul
shl
sub
sub
(bad)
in
in
sub
mov
hlt
fadd
dec
call
std
ins
jo
retf
sub
dec
pop
bound
into
std
lock
mov
out
test
jnp
sub
jae
cmps
cmp
ror
lahf
cmc
int3
rcl
sub
jge
xchg
fmul
dec
xchg
and
add
dec
adc
sbb
or
jle
or
sub
jno
(bad)
jle
add
mov
sar
mov
push
out
sbb
repnz
mov
retf
adc
xchg
scas
fdiv
movs
add
retf
pop
retf
imul
iret
and
cmp
jmp
sub
mov
cmp
hlt
movs
dec
(bad)
scas
pop
or
inc
cmp
shr
adc
xor
repnz
fxch
movs
sbb
push
ret
sbb
gs
push
cld
dec
ret
mov
cmps
mov
lahf
in
push
sub
xchg
das
imul
daa
xor
add
in
cmp
sub
pop
or
push
leave
adc
cmps
in
adc
lds
jmp
ja
rcl
inc
repnz
loopne
mov
push
ret
push
adc
mov
add
movs
dec
daa
and
push
mov
adc
je
jl
adc
lods
je
outs
sbb
jge
jl
jb
movs
push
mov
mov
iret
mov
cmp
inc
rcl
adc
sar
sbb
push
scas
(bad)
je
pop
cmps
push
jmp
pop
outs
sbb
hlt
xchg
test
dec
mov
mov
cmp
retf
adc
mov
test
ja
adc
xor
mov
sub
add
xchg
xchg
lods
adc
dec
call
pop
mov
fadd
outs
pop
retf
jmp
sar
into
popf
pop
pushf
push
lods
mov
sbb
(bad)
aas
stc
mov
pop
pop
xor
jne
adc
test
test
call
sahf
aam
xlat
cdq
ins
lds
xor
clc
retf
xor
test
scas
mov
dec
push
or
punpckhdq
push
call
jae
imul
pop
push
pop
mov
ret
cmp
mov
inc
pop
rcl
je
sbb
(bad)
jb
sub
xchg
mov
ds
aad
cmp
fxch
jecxz
pop
sub
iret
mov
and
(bad)
cmp
inc
dec
jmp
xchg
lahf
test
fidiv
sbb
or
mov
jnp
icebp
xchg
lahf
jg
ss
jae
xor
retf
cmps
inc
dec
sub
jne
fs
(bad)
clc
xor
inc
ins
shl
vdivss
movs
fwait
mov
out
rol
daa
call
sub
ror
push
in
xchg
pop
clc
mov
pop
dec
lds
sbb
loopne
sub
retf
and
sbb
dec
imul
pop
gs
sub
mov
imul
mov
jb
fbstp
pop
cmps
jl
test
sub
push
mov
inc
loop
dec
xchg
push
push
sbb
sbb
test
push
pop
mov
mov
xchg
jle
mov
adc
cli
lock
movs
cmp
js
in
dec
xchg
out
out
outs
cmp
jmp
(bad)
enter
pop
test
push
dec
push
popf
add
mov
shl
fst
loop
or
stos
and
adc
fdivp
ret
(bad)
mov
adc
mov
popf
adc
lds
aam
cmp
jmp
les
test
inc
mov
xchg
fadd
and
add
cld
repnz
push
stc
data16
mov
sar
mov
retfw
xchg
call
sti
sub
dec
sti
hlt
cli
ins
jge
fs
jb
daa
aam
ret
bound
mov
xor
or
cmp
inc
popa
sbb
stos
(bad)
out
xchg
mov
sub
pop
int
mov
push
lock
sti
xchg
cmps
adc
les
cmp
add
aas
jmp
or
nop
xchg
pushf
bswap
xor
and
outs
rol
push
inc
and
push
in
cli
pushf
adc
dec
not
and
push
push
stos
sbb
sbb
in
push
les
icebp
movs
adc
fisttp
cmp
push
inc
imul
sub
push
call
ror
ds
ds
inc
pop
arpl
xchg
push
push
or
shr
and
fdiv
push
xor
jp
xchg
add
mov
int3
lock
jecxz
imul
inc
add
arpl
push
pusha
popa
arpl
sub
add
movs
mov
push
xor
mov
dec
add
cmps
js
mov
js
shl
fldcw
fild
mov
mov
xor
popf
sub
sbb
in
or
leave
ss
data16
or
xor
xchg
jnp
bound
cmp
dec
shl
mov
in
imul
test
xchg
jp
or
imul
cli
xlat
pop
or
jg
or
and
or
aas
dec
mov
(bad)
sar
rcr
loopne
js
addr16
dec
xchg
call
ficomp
es
jmp
mov
jg
mov
jo
(bad)
rcr
mov
mov
and
mov
pushf
xor
dec
or
jp
cmp
xchg
cli
les
mov
jbe
imul
or
outs
cmps
stos
bound
cmps
in
daa
jmp
add
mov
lds
ss
in
mov
call
(bad)
sbb
test
push
stc
sbb
stos
leave
xchg
shr
sub
sub
pop
dec
lahf
sub
mov
xchg
adc
mov
lds
or
mov
xchg
jmp
adc
fnsave
outs
mov
aam
sub
ret
sbb
rcl
stc
mov
lods
pushf
popa
test
fwait
leave
stos
retf
(bad)
cmps
sahf
or
(bad)
movs
cmp
xor
inc
test
sar
(bad)
and
sbb
mov
pop
pop
sbb
rcl
mov
jp
dec
cld
rcr
sub
and
in
and
repz
pop
fnsave
std
xchg
jecxz
jne
cmc
out
out
xor
mov
or
xchg
call
call
fistp
and
test
push
rcl
sub
sar
test
cmp
mov
mov
(bad)
vmovss
imul
into
sub
movs
sbb
lahf
paddd
inc
or
cmp
shl
adc
push
mov
push
jmp
mov
xchg
pusha
jo
rol
sub
int
xlat
hlt
add
mov
movs
pop
scas
fist
pop
ja
jae
mov
hlt
fsub
test
cmp
dec
in
mov
out
movs
and
push
rol
sbb
(bad)
jl
jle
out
and
dec
cmp
nop
rcl
lods
and
jmp
pop
add
mov
not
in
cmp
scas
fistp
ins
mov
jmp
mov
lea
out
add
aam
test
sbb
dec
ins
lds
jl
mov
scas
push
(bad)
hlt
ss
sbb
adc
sub
push
sub
inc
aas
lods
jnp
lods
push
add
ds
inc
aaa
popf
mov
cli
and
jne
pop
or
jne
sub
das
inc
fild
cmp
cmp
mov
icebp
pop
rcl
xor
fwait
inc
xchg
sbb
mov
add
sub
fidivr
cmp
sub
push
stos
push
mov
ret
scas
jbe
sub
pop
adc
mov
sub
add
aaa
add
fiadd
pop
fld
and
fmul
aam
dec
dec
cmps
inc
jae
test
mov
dec
adc
adc
lock
stc
adc
call
fcmovnb
js
fwait
and
fs
push
jae
imul
cmps
push
addr16
rcr
scas
jge
jg
jbe
cmps
out
inc
repnz
mov
popf
add
push
fidiv
ja
pop
xor
js
push
add
in
cmp
loope
btr
mov
mov
dec
push
dec
div
retf
or
cdq
rcl
ins
mov
or
leave
enter
call
mov
or
push
into
movs
in
inc
jmp
les
cmp
xchg
push
ins
out
mov
pop
out
push
push
push
leave
shl
mov
pop
add
mov
push
div
das
mov
mov
sbb
icebp
icebp
add
sub
push
sbb
cmp
fimul
(bad)
(bad)
jmp
outs
mov
aaa
fcomp
test
ds
inc
add
fldenv
push
fadd
dec
xor
xchg
adc
(bad)
jae
int
addr16
imul
cmp
add
sbb
mov
mov
add
jmp
xor
fs
hlt
push
mov
lods
inc
ins
aaa
sbb
scas
pop
addr16
stos
xor
sub
je
mov
cpuid
cmps
sub
pop
sbb
push
xchg
movs
inc
xlat
cmp
outs
stos
aam
sbb
jns
push
hlt
iret
test
push
pop
out
(bad)
faddp
std
pop
(bad)
call
pop
xor
add
pop
leave
jmp
lock
or
and
jmp
sub
out
push
inc
into
(bad)
call
arpl
pop
and
rol
add
mov
jno
int
in
jg
inc
mov
add
repnz
adc
push
outs
adc
fwait
imul
(bad)
dec
data16
jo
dec
ins
(bad)
jmp
cmc
mov
mov
and
cmp
aaa
xchg
cld
cwde
outs
inc
or
cmp
sahf
xlat
adc
bound
test
sub
(bad)
mov
movs
push
idiv
lea
xor
jns
repz
jp
movs
daa
stc
xchg
mov
jmp
push
aas
and
mov
jmp
mov
pop
xchg
into
pop
or
mov
pop
xchg
cmp
arpl
leave
dec
push
or
imul
mov
mov
jp
adc
or
mov
aam
xor
in
fadd
inc
xchg
xlat
add
add
xor
mov
xchg
imul
ss
movs
adc
movs
xchg
adc
or
bound
cmp
xchg
in
and
outs
lea
jle
mov
into
or
leave
retf
pushf
adc
enter
(bad)
adc
xor
cs
sub
rdmsr
sbb
pop
pop
push
mov
xor
psubusb
sbb
mov
in
ret
outs
data16
pusha
test
dec
daa
xlat
daa
cld
fdivr
repz
xor
div
inc
ret
xchg
shl
mov
loop
aaa
shl
imul
lahf
push
xchg
fdivr
cmp
and
test
int
sub
cmps
cmp
xchg
pop
mov
mov
mov
mov
es
cmp
neg
and
mov
pop
pop
ds
mov
rcr
not
dec
bound
mov
xor
repz
rol
retf
cmp
push
jb
fdivrp
scas
lahf
xchg
mov
xchg
add
add
arpl
add
mov
xor
popa
loope
xchg
mov
test
inc
pop
sub
movs
int3
cmps
mov
fdivp
stc
je
pushf
ins
(bad)
leave
jmp
push
in
mov
sbb
dec
jle
in
or
mov
pop
cs
jne
cmc
call
mov
or
iret
test
mov
in
dec
jmp
sbb
push
fcom
add
adc
clc
ror
sbb
inc
dec
(bad)
cmp
mov
jle
fdivr
inc
lods
icebp
mov
dec
push
movs
cmp
sub
add
pusha
(bad)
mov
sub
adc
push
(bad)
pop
rcl
dec
std
(bad)
mov
test
enter
ins
icebp
mov
dec
sbb
das
cdq
jo
mov
add
dec
or
mov
popa
dec
cmp
dec
adc
xchg
fld
ds
xchg
xor
sbb
movs
mov
(bad)
dec
xor
or
out
cmps
(bad)
or
cmc
mov
sub
push
movs
out
pop
ficom
xor
xor
int
pop
out
aad
into
pop
scas
cmps
in
jmp
into
shl
xchg
ja
mov
test
push
push
xchg
aaa
jge
cs
mov
cmp
mov
push
ret
in
push
mov
(bad)
(bad)
cli
lea
out
sbb
fcmovne
(bad)
movs
hlt
in
xchg
pop
movs
add
xchg
iret
(bad)
hlt
popf
(bad)
jo
ins
test
push
pusha
aaa
cmp
les
pop
push
mov
dec
out
xor
xchg
dec
mov
add
loop
mov
test
push
je
adc
jmp
jne
adc
sub
outs
test
inc
cmp
test
mov
ins
xchg
imul
sbb
icebp
pop
dec
push
test
jae
pushf
(bad)
out
fld
(bad)
sbb
adc
mov
fucom
cmc
mov
es
cdq
add
cmps
push
cli
movs
out
push
shl
inc
mov
and
lea
fld
jmp
fsub
out
ret
scas
sbb
leave
jg
xlat
shl
pop
(bad)
lock
sahf
sub
sub
adc
jmp
dec
xor
popf
pop
jo
and
hlt
call
fldz
sbb
outs
frstor
pusha
popa
test
push
inc
add
push
(bad)
dec
nop
mov
std
ss
pop
rcr
add
dec
call
fild
ins
pop
nop
sbb
lds
bound
cli
xor
retf
sahf
xchg
cwde
shl
(bad)
inc
fist
mov
out
mov
inc
push
jb
mov
sub
(bad)
sbb
mov
cmps
xchg
dec
in
mov
call
ficom
scas
add
push
mov
mov
(bad)
sahf
add
sub
retf
cs
pop
stos
xor
sub
add
adc
int3
retf
or
jno
popf
lods
cmps
aad
sahf
mov
shl
jbe
aad
mov
xchg
ja
je
xor
add
dec
nop
in
rol
jns
xchg
stc
jl
xchg
popa
or
push
cwde
movs
mov
sub
cli
mov
sbb
les
fbld
inc
jle
in
sub
pop
mov
inc
dec
pop
lahf
test
dec
lds
retf
sbb
retf
dec
pop
pusha
or
inc
inc
xchg
rcl
cmp
nop
fmul
inc
int3
retf
mov
jno
scas
stos
cwde
xchg
push
xchg
push
aam
pop
(bad)
lds
xchg
movs
pusha
shl
lods
push
cmp
fistp
(bad)
addr16
addr16
ret
adc
or
mov
repnz
mov
jnp
je
int3
lahf
dec
(bad)
cwde
stos
or
pop
cmp
sub
cmps
pop
jecxz
lock
lea
or
jge
xor
inc
adc
jne
hlt
inc
jne
mov
sti
int3
js
sbb
sahf
or
mov
pop
mov
in
sub
and
ds
inc
cs
xor
push
sub
add
(bad)
push
cmps
out
jge
cmp
imul
pop
lds
lock
mov
mov
dec
push
aad
test
sbb
cmp
shl
or
xchg
popa
and
adc
lods
sti
xor
sbb
push
xchg
mov
xor
rcr
lock
hlt
or
inc
mov
in
int
push
cwde
cmp
mov
push
cmp
in
(bad)
jae
and
in
fdivr
gs
push
clc
ret
or
jmp
push
in
loop
push
jns
pusha
fs
sbb
pcmpeqw
aas
fistp
push
add
pushf
bound
fst
and
loope
mov
adc
mov
xor
test
inc
add
sbb
es
lock
jecxz
mov
dec
sub
jae
(bad)
ficomp
stos
mov
test
lods
cmp
mov
popa
xor
jp
mov
test
int3
pop
out
(bad)
pop
cld
icebp
inc
ret
dec
adc
cli
mov
jle
mov
sub
sub
mov
rcr
mov
or
out
mov
pop
ret
push
ficomp
inc
push
pop
sti
and
xchg
xchg
cmp
addr16
ja
call
inc
std
cmc
xor
mov
jo
pop
push
or
fbstp
fild
push
mov
and
cmp
mov
jecxz
enter
cs
adc
lods
xor
pop
mov
push
in
mov
(bad)
fistp
mov
sti
int
cli
push
div
mov
call
loop
mov
xchg
movs
lahf
push
pop
call
ret
clc
mov
or
xlat
outs
jne
das
mov
sahf
in
mov
or
or
pop
adc
adc
cmp
jne
retf
cmp
ficom
outs
sbb
sub
mov
sub
push
add
in
push
sbb
rcr
cmp
sub
xchg
mov
(bad)
fnsave
push
repz
push
ja
aad
sbb
ds
sub
(bad)
sbb
ins
adc
adc
std
mov
je
xor
inc
loop
pushf
fimul
cmp
pop
sbb
stos
inc
cmp
jecxz
and
loopne
sub
mov
push
pop
and
xchg
or
and
fld
push
push
or
dec
ja
mov
scas
push
xor
fmul
and
adc
pop
mov
es
dec
xchg
mov
sbb
rcr
add
mov
inc
cld
loop
in
and
loope
pop
enter
fs
adc
sub
cmps
add
test
mov
or
mov
imul
(bad)
fdiv
add
add
ret
in
cmps
xchg
clc
sub
test
pop
icebp
(bad)
xor
(bad)
jns
xor
push
pop
cmp
popf
aam
and
xchg
pushf
push
sbb
call
pop
mov
aaa
out
cld
ins
sub
and
pop
pop
ins
clc
in
imul
add
jp
xor
inc
sub
push
inc
dec
(bad)
div
jmp
sub
jg
mov
js
loopne
test
ror
jne
cmp
pop
das
aaa
jg
mov
and
mov
mov
mov
xchg
cmps
inc
ins
pop
sub
push
out
cwde
movs
cmc
es
inc
mov
ins
jp
pop
push
mov
sub
sti
xchg
and
add
add
aaa
ins
push
hlt
movs
sbb
push
xchg
mov
shl
movs
mov
xor
lahf
push
and
inc
hlt
and
dec
imul
mov
jl
jle
push
popa
(bad)
js
mov
cmps
cmps
inc
adc
rcl
jae
ret
xlat
out
xor
jns
push
imul
aad
gs
mov
jb
push
(bad)
sub
push
retf
push
push
es
xchg
push
mov
gs
dec
in
outs
and
push
not
pop
xchg
fdiv
out
adc
repnz
xchg
push
xchg
cmp
adc
cmp
iret
adc
sub
xchg
and
add
std
xchg
stc
addr16
sub
hlt
repnz
xor
dec
add
sub
call
pop
mov
push
and
or
xor
mov
fwait
stc
adc
push
rcr
cmp
dec
ss
adc
dec
sub
add
jae
imul
out
sub
dec
out
or
repnz
cmp
or
jnp
pusha
cld
push
(bad)
iret
inc
or
leave
popf
add
aas
dec
loopne
push
enter
(bad)
stc
pop
add
mov
dec
xor
scas
ins
mov
test
in
ja
fcom
jmp
cs
xchg
(bad)
push
aam
push
in
cmp
lds
les
jne
sub
lds
ror
mov
push
cmp
fwait
rcl
mov
mov
xor
retf
add
mov
adc
push
or
dec
mov
(bad)
in
ss
mov
ins
je
lahf
(bad)
neg
bound
lahf
or
jp
push
dec
aaa
mov
lds
jle
icebp
ins
loopne
push
or
int3
pop
popf
imul
lods
mov
ror
test
pusha
jne
jp
jp
xchg
fimul
ror
push
xor
mov
daa
dec
xchg
int3
cmc
sar
les
cmc
inc
into
push
mov
dec
sbb
push
lahf
in
or
push
dec
or
aam
adc
(bad)
pop
jnp
pop
xchg
add
mov
cmps
push
call
in
jnp
ins
sti
push
aad
ja
bound
push
push
call
mov
cmc
sahf
fwait
shl
jae
inc
pop
push
ret
inc
push
pop
pop
and
lock
push
xchg
les
pop
dec
rcr
popf
pop
(bad)
lods
lods
jbe
bound
add
movups
push
mov
inc
mov
sub
in
and
loopne
jge
jne
sbb
dec
(bad)
or
sbb
outs
jne
pusha
cmc
stos
push
xor
gs
jnp
jecxz
fidiv
push
push
movs
mov
in
shl
push
stos
popf
fcomp
or
repnz
push
popa
outs
fcmovnu
sbb
in
ret
xor
sar
les
mov
inc
or
popf
retf
fwait
cld
push
mov
ins
or
fidiv
fisubr
loopne
rcr
aad
mov
leave
imul
aas
pusha
jns
sbb
xor
jp
icebp
inc
stc
retf
and
jmp
mov
mov
ret
pop
or
arpl
inc
rcr
dec
popf
push
scas
add
push
adc
mov
sbb
cmp
in
stc
rol
mov
push
lock
or
sbb
(bad)
icebp
imul
das
sar
cmp
cli
xor
lahf
pop
jo
pop
dec
js
dec
push
or
aam
mov
mov
aas
mov
cmp
rcl
sbb
hlt
cmps
mov
fcmovne
lods
fst
xchg
inc
outs
fnstenv
retf
out
popf
adc
and
xchg
add
adc
int
test
rcl
fisttp
nop
sbb
fwait
mov
pop
fldcw
call
add
imul
pushf
mov
inc
inc
sub
aam
push
aas
adc
xor
xor
xor
out
adc
mov
add
push
fcom
pushf
inc
dec
push
xlat
dec
mov
sbb
jmp
iret
into
cmps
retf
std
push
inc
psubsb
je
add
mov
lods
jp
push
inc
(bad)
int3
jp
lea
fnstenv
arpl
adc
icebp
popf
lods
xchg
push
dec
fst
cmp
adc
pop
push
out
retf
mov
(bad)
mov
mov
out
mov
iret
mov
scas
xor
repnz
adc
(bad)
xchg
push
ficom
mov
cwde
and
xchg
and
adc
push
mov
push
test
stc
inc
cmp
xchg
cwde
or
scas
mov
sbb
dec
fld
push
xor
bound
push
cli
scas
add
push
and
cmp
or
ret
cmps
clc
lods
iret
push
fmul
push
or
and
inc
ins
test
inc
xchg
add
mov
ins
push
xor
and
ins
and
dec
push
mov
push
ret
not
test
iret
mov
mov
cmc
out
push
add
cwde
adc
adc
je
adc
hlt
lds
ss
loopne
xor
retf
add
mov
cmps
push
rcl
mov
mov
imul
pop
in
sbb
inc
arpl
add
mov
or
cdq
mov
mov
cwde
int3
cmp
lods
mov
xchg
mov
mov
data16
fmul
push
sbb
push
hlt
mov
gs
daa
sub
cmp
loop
pop
outs
(bad)
(bad)
mov
mov
rol
cmp
rol
xchg
xchg
(bad)
arpl
push
mov
jno
pop
cli
or
mov
xchg
and
xchg
cld
fs
dec
shl
mov
inc
cmps
repnz
(bad)
and
mov
shl
das
dec
push
sbb
cld
imul
lock
test
mov
(bad)
and
cmp
les
sub
sbb
leave
jl
mov
or
dec
xchg
hlt
ret
gs
add
or
and
inc
jo
sahf
call
addr16
jne
sub
mov
sub
aaa
std
ffreep
jge
fiadd
aas
jo
cmp
mov
rcr
in
adc
sub
stc
xor
mov
shl
retf
sbb
mov
out
jns
cmp
retf
(bad)
addr16
xchg
fisub
pushf
sti
test
xchg
in
sbb
xchg
pop
test
sbb
pop
imul
lock
xchg
xchg
scas
cwde
pop
mov
xchg
adc
mov
(bad)
mov
mov
adc
xor
push
xchg
and
lahf
mov
stc
dec
push
add
adc
xchg
adc
loope
sbb
and
mov
mov
push
dec
pushf
stc
dec
mov
lods
retf
aaa
out
fcomp
pop
retf
jmp
jnp
fidiv
jno
push
dec
gs
adc
xor
repz
nop
aad
movs
ins
or
inc
fbld
arpl
or
pop
xchg
mov
push
fs
icebp
xor
dec
leave
iret
pop
lock
into
stos
xor
fidivr
mov
es
dec
mov
jno
xchg
adc
data16
push
ret
inc
enter
add
cmp
fldcw
stos
mov
jo
test
sbb
sbb
sbb
xchg
mov
push
mov
dec
and
inc
ret
push
movs
in
and
jecxz
or
mov
mov
xor
arpl
jp
add
repnz
push
int
loop
bound
pushf
paddb
cdq
mov
pop
push
gs
stos
imul
mov
lods
or
and
(bad)
lock
pop
bnd
aas
test
pop
rcr
mov
inc
ins
stos
xor
push
add
mov
mov
outs
mov
cmp
and
mov
mov
mov
ins
sub
sar
jge
fdiv
cld
cmp
gs
push
xor
mov
(bad)
cmp
sub
(bad)
push
xor
(bad)
pop
imul
jmp
sub
jne
mov
in
pslld
add
pusha
into
leave
push
mov
pop
cld
sub
enter
arpl
loopne
xchg
mov
xor
addr16
cmc
dec
xchg
in
jne
jae
dec
popf
mov
inc
cli
sub
cmp
push
ret
popa
(bad)
and
cld
add
retf
jno
cli
stos
cld
stc
int
popf
lea
push
pop
mov
(bad)
js
dec
sub
xor
data16
push
pop
scas
sbb
mov
or
xchg
dec
jge
cmp
int
pushf
test
jne
cld
cmp
and
adc
outs
jmp
jecxz
(bad)
rcl
and
aaa
sahf
add
xor
neg
jle
push
pop
pop
out
mov
mov
cmps
dec
scas
pusha
inc
inc
dec
jno
mov
out
ins
nop
sbb
or
dec
jne
cmp
sbb
or
cld
push
mov
mov
jmp
lock
cmp
(bad)
mov
and
call
in
shr
xchg
scas
jle
test
mov
adc
pop
retf
ss
(bad)
mov
ret
sar
fld
stos
mov
(bad)
shl
movs
ds
sbb
mov
inc
out
cmp
sub
sbb
sbb
icebp
(bad)
loope
repnz
rcl
imul
and
push
pop
cmp
sbb
jl
stos
into
jb
push
sbb
out
es
push
jecxz
cwde
ja
mov
gs
hlt
jp
jge
ins
in
pushf
sbb
stc
in
push
jns
ficom
jmp
xor
jne
mov
mov
mov
mov
call
push
cmc
int3
loop
mov
cs
mov
cmp
cld
mov
inc
mov
pop
inc
ror
dec
jecxz
mov
and
je
lods
or
push
jbe
fisubr
stos
mov
and
xchg
out
sahf
ret
ds
leave
xlat
mov
or
cmp
adc
push
jne
es
jmp
sub
or
xor
lods
push
xor
stc
mov
cmp
lods
enter
pop
sahf
adc
dec
lods
rcr
(bad)
fild
int3
cmp
shr
movs
cdq
(bad)
cmps
inc
push
mov
jns
jbe
xor
lods
stc
adc
jb
mov
imul
cmp
lods
sahf
adc
stos
jmp
leave
outs
push
rcl
icebp
jle
test
mov
push
in
sbb
sbb
lahf
cmps
adc
jb
cmp
outs
ret
shl
sbb
gs
ss
mov
mov
mov
(bad)
pop
cmp
cmc
xchg
push
not
int3
sbb
mov
arpl
fmul
cmc
popa
mov
push
push
sbb
neg
in
dec
lds
fmul
and
je
adc
xor
cdq
push
jbe
push
cli
pushf
loope
xchg
dec
sub
outs
inc
mov
(bad)
and
xchg
arpl
out
sbb
ins
mov
mov
je
mov
or
mov
(bad)
inc
stc
outs
fdivr
mov
and
cmps
mov
xor
setno
xchg
shl
cmp
cmc
xchg
in
enter
adc
and
in
push
push
push
in
mov
adc
lahf
or
popa
mov
aad
inc
pop
push
mov
mov
test
cmp
and
sbb
outs
mov
lea
push
test
mov
push
sbb
loopne
sub
lea
fstp
push
(bad)
out
jp
sub
cs
into
cmps
lods
inc
add
rol
repz
mov
aad
dec
pop
test
ins
jbe
xchg
xor
sub
loope
inc
dec
loope
and
enter
fisub
dec
dec
retf
inc
int3
ja
add
sbb
mov
loopne
pop
mov
je
and
ss
mov
jne
or
ret
add
inc
xor
sub
sbb
lahf
gs
rcr
(bad)
call
int3
add
outs
gs
retf
or
adc
jmp
and
fmul
stos
dec
lods
(bad)
sbb
out
fisttp
sbb
ficomp
xchg
xchg
enter
fstp
imul
xchg
mov
push
mov
ret
adc
add
push
ret
in
idiv
and
xchg
aad
push
std
dec
mov
daa
and
cmp
mov
xor
sbb
xchg
jl
xchg
int3
dec
call
xor
sbb
or
addr16
rcl
lods
inc
rcr
fsubr
sahf
cmp
jmp
or
jnp
(bad)
adc
sbb
pusha
push
fnstcw
mov
dec
add
mov
inc
jb
out
repnz
or
sub
xor
add
mov
mov
jmp
in
enter
pop
out
mov
ret
mov
nop
lock
pusha
xchg
aas
adc
fisubr
cmp
addr16
push
and
add
cld
fst
ror
mov
shl
mov
cld
pop
cmp
xchg
cld
into
arpl
imul
xor
dec
sub
jl
popf
add
lea
inc
mov
cmc
inc
sbb
rcr
pop
mov
mov
aad
dec
shr
or
icebp
test
shl
dec
push
adc
(bad)
jns
fist
push
mov
push
add
and
stos
sahf
sbb
adc
ins
xchg
sbb
inc
pop
mov
pop
push
push
clc
xchg
jmp
jbe
pop
ror
fisubr
dec
xchg
mov
jg
pusha
repnz
jecxz
mov
mov
les
(bad)
addr16
idiv
in
adc
arpl
fsub
popa
int
mov
dec
inc
aad
jns
fs
inc
(bad)
cmp
sub
sbb
mov
sub
loopne
mov
pusha
fcmovu
push
shl
jb
and
pop
movs
mov
ins
jmp
les
out
stc
mov
and
fwait
sub
addr16
pop
sbb
xor
mov
xor
in
fistp
rcl
cs
fwait
pop
dec
ret
scas
ret
cmp
sbb
scas
je
sti
push
xchg
sub
xchg
sti
push
dec
pusha
sbb
mov
rcl
lahf
inc
mov
cmc
sbb
mov
mov
mov
mov
out
dec
sub
das
inc
sbb
sbb
xchg
rol
and
jo
jge
ret
aad
and
rcl
scas
call
cmc
add
jecxz
pusha
aaa
ss
std
cli
dec
pop
movs
dec
cmp
mov
mov
mov
push
sbb
pop
add
dec
ror
aad
inc
push
enter
rol
mov
inc
outs
mov
div
div
jecxz
mov
call
adc
adc
js
retf
pusha
test
xchg
syscall
xchg
jo
(bad)
jl
mov
out
cmp
shr
ret
push
add
sub
js
xchg
push
pop
sbb
xor
inc
sbb
pop
aad
jmp
jle
retf
repz
jmp
dec
xor
jne
fld
ret
cs
push
aad
fcom
out
cmps
in
pop
adc
cmps
daa
mov
xchg
dec
jmp
cmp
mov
stos
(bad)
push
adc
lahf
xchg
push
lds
fidiv
jle
add
cmps
push
push
mov
ins
mov
xor
push
adc
xchg
push
cmp
ret
movs
sbb
shl
inc
sbb
inc
lea
js
mov
ss
cli
sbb
add
mov
bound
xchg
addr16
cdq
add
mov
(bad)
ss
inc
sar
sub
jo
sbb
mov
jmp
in
aad
das
movs
xchg
xchg
sbb
fadd
mov
or
add
(bad)
aaa
xor
push
ja
(bad)
inc
and
nop
mov
not
sahf
(bad)
movs
sbb
xor
inc
push
in
icebp
add
adc
fidiv
ret
jne
mov
xchg
test
loop
and
fisub
inc
sub
add
es
out
mov
stc
xchg
ja
in
stc
lods
(bad)
mov
push
cmp
sbb
fnstenv
mov
mov
jge
inc
(bad)
(bad)
cmp
xchg
pop
icebp
movs
gs
dec
xchg
nop
nop
pop
loopne
dec
xor
cs
adc
pushf
cmp
push
cmp
inc
arpl
les
or
pop
movs
ins
push
cmp
popa
sub
cmp
rcl
inc
retf
movs
shl
sub
push
pop
scas
adc
out
inc
cwde
clc
xor
into
jbe
jmp
mov
pop
test
pushf
out
xor
xchg
popa
call
push
loope
dec
or
mov
sbb
fucom
aaa
cmp
sub
stc
mov
aad
call
and
jno
and
mov
loopne
jmp
das
cmp
pop
adc
lea
sub
into
inc
loope
push
adc
mov
mov
aas
dec
cmp
out
xchg
dec
xor
das
xchg
inc
call
mov
jo
cmp
add
inc
mov
push
hlt
js
lock
add
js
pop
(bad)
stc
sbb
cmps
test
into
dec
(bad)
fild
test
add
iret
lahf
cmps
in
add
into
jmp
out
cld
push
je
cwde
dec
inc
popf
jb
aas
out
in
arpl
stc
cdq
inc
jae
lea
add
sub
and
int
aad
add
mov
sar
add
push
dec
sbb
fisubr
test
adc
mov
retw
dec
int3
lock
out
mov
fs
or
and
arpl
clc
push
imul
pop
sub
push
in
xchg
xchg
jmp
xchg
es
xcrypt-ofb
cmps
outs
sbb
add
and
adc
jae
dec
or
sti
stos
movs
mov
jge
in
or
mov
pop
jno
pop
pop
add
or
mov
imul
sbb
inc
jbe
xor
scas
push
arpl
mov
in
dec
mov
fst
in
inc
mov
pusha
outs
adc
dec
add
jl
cmp
movs
es
fcmovb
in
sbb
ins
fisttp
aaa
dec
dec
xor
pop
sub
sub
adc
mov
pop
mov
scas
dec
into
mov
fnstcw
dec
aas
mov
nop
mov
mov
aaa
add
jne
rol
lods
cmps
fwait
push
lahf
repnz
outs
pushf
(bad)
cmc
add
int3
lods
ins
cli
jg
repnz
jmp
and
mov
cmp
in
pop
lods
xchg
sti
cmps
adc
jmp
out
push
sub
lds
outs
cdq
cs
mov
out
popa
fsub
out
in
add
xchg
(bad)
push
stos
pushf
fisub
pop
push
pop
mov
pop
(bad)
pop
adc
addr16
lds
mov
and
adc
or
xchg
xchg
add
clc
lea
sar
push
jne
sub
adc
fidiv
gs
movs
es
mov
sub
shl
adc
pop
sahf
lods
movs
clc
mov
mov
xor
xchg
push
cmp
push
mov
out
inc
leave
xchg
cmp
test
cmp
pop
mov
sub
ret
stos
or
ret
jno
imul
int
push
repnz
lods
test
cmp
mov
bound
cmps
loope
jno
sbb
bnd
adc
imul
sub
mov
or
mov
jge
out
xchg
ins
sub
les
js
nop
xchg
(bad)
ss
and
ror
into
cmp
or
mov
mov
mov
clc
adc
xchg
fs
dec
cdq
stc
pminsw
sub
(bad)
xor
xchg
mov
xor
mov
rol
loope
dec
rcr
cmp
xor
int
cmp
inc
adc
repz
(bad)
movs
retf
pop
cli
mov
xor
sub
stos
movs
sbb
mov
push
retf
mov
cld
(bad)
popa
je
neg
lods
jmp
sub
sub
mov
inc
push
ret
mov
jno
div
jmp
sub
sbb
aaa
dec
cmps
ret
xchg
add
int
loop
cmps
icebp
repz
inc
push
rcr
pop
xchg
fwait
sub
sub
aas
repnz
leave
paddb
adc
add
sub
ret
add
sub
ror
lods
ins
sub
push
ror
(bad)
sbb
xchg
cli
mov
into
fdivr
add
fistp
push
mov
or
or
push
clc
push
call
or
jo
jmp
xchg
jo
cmps
push
xchg
arpl
push
jmp
repnz
mov
sbb
jg
mov
mov
mov
and
sbb
mov
out
adc
inc
inc
imul
or
pop
cmps
adc
clc
clc
mov
stos
out
or
xchg
push
adc
mul
or
bts
jno
or
add
(bad)
lea
nop
push
gs
inc
xor
cmps
out
pop
clc
sbb
shl
aad
cmp
je
in
or
into
add
mov
xor
jge
(bad)
shl
mov
adc
loopne
sbb
stc
aam
int
mov
add
dec
repz
call
outs
lock
test
je
dec
enter
pop
out
pop
mov
mov
outs
call
fcmovnbe
les
gs
sbb
adc
jne
cli
lea
imul
mov
mov
mov
push
out
call
push
cmp
dec
pop
mov
scas
pop
pop
ror
(bad)
xchg
dec
xor
xchg
in
ins
push
or
mov
(bad)
fdiv
jmp
popf
xchg
(bad)
add
lock
rcl
ins
mov
leave
fstp
inc
add
push
lods
xchg
adc
inc
mov
and
and
push
pop
dec
or
push
(bad)
int
xchg
jb
or
fcomp
lds
xchg
in
pop
pop
ror
fadd
inc
add
(bad)
(bad)
mov
pop
sub
adc
push
xor
jp
ror
ret
cmp
xchg
or
das
(bad)
hlt
idiv
mov
out
jo
nop
retf
mov
es
sti
sbb
je
hlt
push
jo
mov
cmp
pop
xor
sbb
jb
inc
jmp
push
mov
cwde
mov
sbb
in
ins
dec
loope
mov
mov
xlat
(bad)
leave
lds
into
sub
dec
push
imul
(bad)
mov
inc
push
out
add
xlat
aam
push
cmp
jle
xor
or
and
aam
stos
popf
xchg
mov
mov
out
popf
fsubr
jbe
(bad)
xchg
inc
call
(bad)
les
push
retf
in
rcr
in
cdq
and
in
movs
adc
add
int3
dec
out
jle
imul
fwait
sbb
adc
into
das
inc
fisubr
mov
jb
test
fs
stos
xlat
lods
sub
hlt
xchg
xor
xchg
add
mov
add
sbb
sahf
test
add
mov
repz
pop
and
mov
int3
xchg
repnz
jl
fidiv
cmc
lds
push
idiv
cld
or
cld
clc
test
add
xor
lods
pop
dec
pop
into
mov
sub
add
out
imul
or
and
xchg
jl
xchg
cmc
add
mov
sbb
jp
fist
icebp
pop
mov
jo
cwde
fwait
lock
ja
test
xor
dec
repnz
in
or
std
xchg
fucomip
add
gs
add
sahf
mov
adc
cli
(bad)
xchg
mov
cmp
cmps
data16
jno
cli
push
inc
addr16
gs
xor
adc
sti
inc
in
ror
ds
into
jno
or
jmp
repnz
ja
sub
popf
mov
dec
push
lahf
or
movs
xlat
jmp
repz
(bad)
(bad)
dec
outs
(bad)
adc
icebp
jae
hlt
sub
jbe
pop
popf
idiv
fmul
icebp
cmps
and
clc
in
mov
and
mov
popa
xor
fsubrp
cmp
in
push
pop
xchg
repnz
movs
out
xor
(bad)
loop
push
sbb
sub
lahf
es
scas
test
mov
sbb
jns
or
leave
test
rol
stos
frstor
ds
dec
je
sub
pusha
clc
mov
test
add
jmp
inc
mov
(bad)
jmp
jne
adc
adc
mov
retf
sub
xchg
dec
xor
aaa
dec
ds
dec
adc
mov
xchg
xor
xlat
loop
fbstp
dec
cmps
cmp
mov
adc
fist
cs
popa
(bad)
popa
call
and
adc
mov
xor
enter
sbb
xor
ins
dec
iret
ins
sub
xchg
xor
mov
aad
pop
test
inc
jge
out
gs
int3
icebp
mov
adc
fnstsw
mov
mov
sub
movs
stos
dec
xchg
push
out
fmul
fsubr
push
and
or
push
(bad)
cmp
gs
rcr
shl
test
mov
ret
add
or
pop
pushf
sbb
lods
in
sbb
test
dec
mov
inc
push
mov
loope
daa
add
and
call
pop
ja
mov
mov
mov
dec
adc
xchg
scas
ds
mov
loope
int3
repnz
jg
and
mov
jb
jb
pop
out
leave
adc
mov
out
jp
pushf
xor
cmp
xchg
stos
aaa
mov
icebp
bound
popa
into
lahf
inc
jmp
js
retf
fld
inc
adc
and
cmp
sub
hlt
adc
stc
xchg
mov
mov
retf
push
jb
mov
std
cmps
into
add
and
fwait
retf
xchg
adc
stc
cmp
dec
bound
gs
loope
imul
mov
and
xor
lods
jmp
mov
add
jne
or
and
pop
hlt
xchg
clc
(bad)
cli
dec
pop
loope
xchg
sar
sbb
fucom
movs
mov
call
sub
scas
iret
sahf
mov
into
jo
sub
inc
shr
mov
jmp
and
leave
add
push
mov
jmp
sub
xor
ins
retf
sbb
pop
add
stc
daa
fwait
movs
aad
add
jno
push
adc
pop
add
stos
inc
add
ins
xchg
inc
nop
adc
jns
stos
out
xor
jb
mov
cwde
add
sub
mov
stos
sbb
pop
adc
pop
sbb
sub
and
lock
aad
(bad)
fstp
(bad)
fisub
leave
out
adc
sbb
xor
call
sahf
push
cmps
dec
outs
mov
add
call
fsubrp
loopne
and
and
aaa
dec
nop
jns
xchg
add
sbb
mov
jge
ret
cdq
pop
scas
scas
mov
pop
scas
fs
ja
test
jge
ja
stos
xor
adc
stos
mov
fldcw
cmp
ficom
jnp
add
and
lea
enter
cmp
xlat
sahf
jmp
cmp
sbb
add
push
cmps
cmp
inc
jae
xchg
ins
mov
fisttp
pop
inc
mov
or
dec
movs
popa
or
cdq
loopne
cmp
adc
mov
outs
je
push
shl
js
add
mov
rcl
call
in
rcl
(bad)
data16
jge
stc
xchg
mov
mov
sbb
in
jo
sar
push
mov
mov
xor
xchg
ret
mov
das
xchg
or
mov
dec
cli
push
fs
outs
push
aaa
mov
das
push
add
adc
inc
test
fnstenv
push
iret
and
push
adc
nop
sub
movs
(bad)
scas
mov
sti
sar
ret
cmps
test
fisubr
stos
jmp
outs
xchg
pop
out
fnstsw
inc
sub
pop
cmp
popa
xchg
sti
pop
loop
push
neg
xchg
cmc
push
push
jne
fidiv
jecxz
xchg
sbb
es
pop
out
jle
test
dec
sub
out
mov
pop
in
xor
shl
xchg
ds
jo
fdivr
add
retf
push
movs
mov
and
or
frstor
cmovnp
repz
push
add
jecxz
and
inc
rol
sbb
jae
jae
jbe
enter
xchg
add
lds
dec
sbb
mov
out
push
xlat
iret
mov
cld
sbb
jecxz
dec
sub
js
test
fs
stos
inc
fisubr
dec
inc
sbb
pushf
fnstenv
ror
es
xchg
and
mov
cdq
enter
in
mov
cmp
test
mov
daa
neg
push
shl
div
ins
ret
hlt
aad
xchg
movs
enter
cmp
lods
pop
test
adc
sub
aas
(bad)
into
push
out
sbb
mov
and
and
mov
sbb
pop
pop
sbb
gs
pusha
retf
push
xor
scas
or
xchg
jg
lock
(bad)
call
cs
sahf
push
sub
jmp
push
push
cmp
cmp
jmp
mov
jnp
imul
cmp
inc
pop
data16
mov
test
add
sbb
sub
adc
pop
pop
add
and
push
aaa
cmp
or
shl
sub
cmps
sar
fsubrp
sbb
(bad)
and
or
clc
lods
nop
call
xchg
sbb
arpl
fnsave
push
rcr
out
jp
int3
mov
data16
and
mov
mov
jl
loop
pushf
rol
push
or
jmp
inc
mov
dec
add
jmp
rol
sub
xor
mov
sbb
lods
mov
test
mov
jb
pop
xchg
sub
out
sbb
outs
push
mov
xor
jmp
test
jbe
cmp
jge
lock
stc
movs
std
jge
repz
and
xchg
rcl
mov
pushf
pop
xchg
int
stos
or
sbb
ins
fadd
jbe
inc
mov
repnz
(bad)
jmp
pop
and
aaa
and
call
dec
mov
into
inc
in
push
push
dec
sbb
stc
lods
ss
push
inc
dec
int
bt
inc
mov
repnz
and
aaa
rol
mov
iret
dec
fwait
jg
lods
and
sbb
stc
add
adc
lods
call
or
sbb
ja
sub
or
xchg
out
xor
bound
lock
jmp
or
cmp
sub
lock
enter
test
into
mov
xchg
jl
arpl
sbb
and
fiadd
push
out
fcom
push
inc
sub
mov
adc
xor
pop
(bad)
xor
inc
fistp
xor
shl
push
and
sbb
ins
jmp
cmps
pop
inc
outs
and
push
and
cmp
scas
push
inc
jge
add
pop
jp
cld
mov
push
jecxz
dec
xor
sti
stos
sub
int
dec
loop
mov
fistp
scas
movs
sub
lods
cli
add
add
gs
(bad)
jo
dec
pop
std
jno
or
mov
out
aad
add
mov
inc
mov
mov
push
mov
rol
fcmovne
popf
daa
test
pop
cmc
push
test
sbb
add
repz
fcom
std
cli
scas
fst
aas
sub
mov
fs
pusha
push
push
cld
push
call
ja
xchg
fist
dec
push
cdq
cmps
pop
xchg
aas
iret
mov
leave
ret
or
add
mov
xor
lock
push
rol
(bad)
rep
or
jmp
bound
(bad)
inc
jmp
jecxz
pop
pop
pop
cli
adc
and
xor
hlt
(bad)
push
dec
jle
rcr
cld
sbb
mov
scas
int
mov
and
aad
call
jmp
xor
cmps
add
sbb
mov
cmps
jae
push
out
test
jbe
dec
mov
xchg
inc
pop
call
jnp
retf
mov
cli
lahf
xchg
mov
into
clc
lahf
dec
shr
movs
cwde
inc
sbb
jo
xchg
cmp
int3
leave
pop
sbb
jae
pop
fwait
pop
lahf
cld
arpl
sbb
mov
adc
addr16
mov
and
call
cmp
cmc
add
mov
clc
mul
or
jle
sbb
mulps
hlt
and
mov
xor
mov
out
ds
daa
iret
and
js
jbe
lock
mov
add
pop
pop
das
jl
mov
pop
(bad)
lock
outs
jle
sbb
out
sbb
xchg
xor
nop
shr
loopne
sub
and
in
xor
mov
xchg
xchg
test
push
sti
pop
cmp
aad
repnz
jg
shl
arpl
and
and
and
xor
aam
ret
jmp
loope
add
in
lods
fdivr
call
fs
retf
push
jp
xor
sub
push
push
and
imul
sar
loop
cmc
es
cmp
jge
sub
push
imul
cmc
mov
sub
lods
idiv
xor
xchg
outs
inc
(bad)
scas
mov
sti
in
mov
stos
cmp
or
or
fist
mov
add
inc
loopne
inc
push
inc
or
or
pop
xor
in
fcmovnu
je
xchg
cdq
cmp
adc
pop
in
fiadd
stos
pusha
cli
hlt
push
or
mov
fcom
rol
shr
fisttp
aaa
popf
jp
xchg
sub
xchg
pop
int
inc
mov
add
push
retf
and
stc
popf
jno
repnz
arpl
pminsw
push
dec
cmc
and
xor
push
fs
or
mov
jbe
jbe
pusha
call
mov
adc
movs
movs
add
icebp
mov
fidivr
out
mov
xchg
out
xchg
push
mov
loop
add
lods
fcom
xchg
sub
inc
scas
inc
cmp
dec
mov
imul
ret
add
jo
or
adc
jle
push
lds
(bad)
xchg
pop
and
sub
pop
movs
jl
mov
add
(bad)
xlat
aaa
push
ret
not
pusha
inc
out
hlt
repnz
mov
xchg
fs
sub
(bad)
iret
sub
jnp
inc
sub
xor
push
cmp
jne
(bad)
mov
sbb
and
fmul
push
fsubr
in
mov
pop
adc
mov
inc
(bad)
std
inc
jne
add
inc
sub
rcl
rcl
jbe
sub
(bad)
rol
loopne
es
push
mov
in
aas
je
xchg
mov
inc
jo
jl
inc
les
pop
and
fs
xchg
and
mov
test
cli
fs
xor
mov
addr16
and
jb
(bad)
imul
ret
mov
iret
in
push
out
adc
push
imul
jns
loope
xor
test
in
lods
pusha
mov
or
pop
nop
sbb
jl
xor
ficom
mov
bound
mov
xchg
and
jp
pop
loopne
mov
pop
loop
mov
jmp
push
clc
push
xchg
cli
add
adc
cmp
xchg
xchg
cmp
and
cdq
mov
or
enter
or
das
aaa
xor
push
pop
sub
xor
les
sbb
pop
xchg
ret
rcl
cmc
(bad)
sub
fwait
push
gs
out
icebp
ret
sbb
sub
fwait
push
mov
int
stos
mov
adc
mov
push
mov
inc
pop
(bad)
and
in
shr
pop
sub
adc
je
aaa
rep
or
hlt
and
cwde
inc
int
sahf
mov
inc
stc
(bad)
(bad)
call
icebp
retf
push
mov
add
xchg
ret
inc
inc
sbb
mov
loop
and
ret
test
push
jecxz
lods
sti
in
stc
mov
cmp
xchg
xchg
pop
mov
cld
pop
mov
int3
push
or
push
xchg
xchg
movs
jmp
push
out
adc
(bad)
jnp
jnp
push
push
sbb
ja
stos
mov
cdq
cdq
mov
mov
pop
les
adc
in
imul
lds
mov
cmps
cdq
jnp
fdiv
int3
hlt
mov
push
adc
xchg
loop
cmp
mov
xchg
jb
(bad)
and
call
xchg
push
mov
(bad)
pop
mov
sbb
mov
mov
fnstcw
neg
cpuid
cdq
cmp
xlat
inc
cld
cdq
adc
das
mov
jge
ror
(bad)
je
ins
inc
mov
mov
mov
jae
xchg
pop
add
jno
pop
inc
pop
or
sbb
out
fdiv
call
mov
(bad)
mov
pop
test
jmp
push
and
fmul
in
(bad)
(bad)
or
int
fs
mov
push
ss
pop
je
xor
test
idiv
xchg
mov
jne
dec
in
and
pop
(bad)
mov
xchg
hlt
xor
mov
aas
pop
and
sub
mov
lock
jae
inc
je
and
lods
jp
pusha
dec
leave
sbb
or
cmc
xchg
and
xchg
mov
aad
jg
pop
mov
dec
xor
arpl
mov
(bad)
push
movs
lahf
xchg
lds
ins
jbe
jg
retf
mov
sbb
nop
stos
or
int
mov
aas
push
sub
cmp
cmp
inc
xchg
mov
(bad)
int3
fnstcw
imul
mov
and
mov
rcl
popa
jnp
rcl
jno
mov
inc
pop
scas
add
gs
in
xor
cmp
arpl
out
cld
pop
jb
sbb
cwde
aaa
(bad)
mov
inc
daa
lds
test
or
cs
mov
xor
or
shl
jge
pop
cmp
sub
std
fmulp
inc
cmp
sar
js
jg
gs
mov
xlat
retf
popf
jge
cmp
shl
imul
mov
dec
xor
sub
adc
ins
cmps
(bad)
xchg
or
ret
mov
pop
stos
mov
add
sti
cwde
fld
popf
sub
rcr
xor
pop
xlat
mov
or
xchg
lods
mov
push
fimul
mov
test
stc
jg
int3
icebp
mov
cld
shl
jo
sbb
jo
out
mov
std
in
adc
dec
cmp
pusha
inc
jne
in
mov
xchg
and
mov
mov
push
enter
clc
loop
jb
xlat
push
std
fwait
xor
pop
pop
ret
cdq
adc
(bad)
sbb
iret
xchg
mov
xor
movs
push
pop
icebp
shr
dec
ss
call
sub
mov
fs
rcl
stos
and
xchg
pop
sub
push
mov
int
ss
imul
xchg
ds
or
rcr
pop
dec
sbb
in
das
popa
push
xchg
retf
rcl
jb
enter
push
pusha
cli
push
int3
sbb
add
rcr
pop
gs
in
adc
call
(bad)
call
push
mov
clc
mov
lods
hlt
sbb
imul
movs
frstor
xchg
push
sub
lock
inc
scas
xchg
add
xchg
push
js
sbb
cs
and
xchg
jb
leave
out
cmp
sub
sbb
lds
sub
pop
inc
add
lods
jmp
mov
xchg
hlt
jae
(bad)
jmp
xchg
or
cli
mov
gs
xor
in
(bad)
xor
push
sahf
mov
push
cli
cmp
ror
aas
es
shr
mov
push
mov
lahf
lods
ror
and
and
dec
scas
xchg
push
nop
or
mov
test
frstor
cdq
cdq
mov
inc
sub
call
fdivr
mov
xchg
ror
and
out
and
mov
aas
sbb
rep
cs
mov
pop
lahf
leave
pop
xchg
arpl
in
sub
das
mov
inc
push
jo
push
cld
loope
jp
xor
inc
test
ja
jne
jg
ss
mov
dec
and
adc
outs
inc
sub
and
adc
lods
push
lahf
clc
cmp
aam
dec
lods
and
popa
cmps
dec
inc
rcl
inc
into
sbb
add
mov
neg
and
sub
mov
cmp
xchg
arpl
loope
arpl
nop
rcl
xchg
aam
into
retf
neg
mov
repnz
cmp
mov
push
mov
jno
inc
pop
pusha
push
int3
jl
pushf
pop
es
add
pop
pop
in
pushf
cdq
sbb
fld
and
or
ret
inc
outs
cmp
js
or
add
xor
je
push
in
test
test
std
mov
leave
pop
ja
sbb
jae
sbb
inc
hlt
mov
and
pop
jle
scas
movs
pop
test
lods
xor
movs
cmp
or
addr16
jecxz
stos
lds
jae
sbb
xchg
mov
outs
fwait
or
or
shl
sbb
imul
mov
stos
scas
bound
lock
xor
xchg
les
sbb
test
call
daa
sahf
or
out
data16
xchg
mov
sbb
and
add
jge
and
mov
mov
jnp
daa
mov
cmp
mov
xchg
mov
mov
mov
jecxz
mov
mov
les
call
or
xor
xor
retf
mov
test
push
ds
and
add
pop
sar
loopne
jge
arpl
add
cmp
cld
or
dec
test
scas
pop
adc
push
lea
jno
adc
sbb
mov
movs
push
sbb
fimul
jnp
xchg
test
xchg
je
sahf
addr16
mov
mov
or
stos
shl
fld
loope
mov
popa
fcomip
out
outs
mov
jb
das
or
sbb
and
(bad)
(bad)
mov
test
cwde
retf
mov
xchg
mov
pushf
scas
and
sbb
add
test
mov
icebp
aas
add
sub
mov
aaa
in
push
cmps
xor
fist
arpl
test
inc
ret
test
dec
or
aas
dec
not
mov
dec
xor
mov
(bad)
in
inc
dec
adc
push
cmp
push
mov
je
and
push
push
add
dec
ror
(bad)
push
xchg
cmc
pop
idiv
adc
sbb
add
daa
fild
and
aad
and
dec
leave
pop
clc
sub
inc
jb
sub
xchg
outs
mov
lods
jns
inc
(bad)
ds
adc
inc
xor
dec
popa
or
and
dec
inc
jl
xor
(bad)
lock
cli
bound
(bad)
clc
mov
leave
jge
fdivrp
xchg
imul
mov
(bad)
rcr
dec
dec
cmp
xchg
jbe
stos
xlat
jp
pop
mov
pop
sbb
adc
cwde
xor
popa
movs
enter
enter
inc
mov
push
jno
movs
pop
fisttp
add
or
lds
sub
daa
cli
sbb
in
lods
mov
js
pop
cmc
inc
sbb
inc
cmp
mov
or
test
dec
and
in
or
fnstcw
std
je
or
jp
adc
mov
cwde
cmc
and
add
sbb
jb
rol
inc
jne
bound
(bad)
cmp
test
ja
xlat
jg
aas
shr
dec
mov
ins
cmp
sub
mov
cli
popf
inc
inc
cdq
mov
loopne
mov
push
jbe
outs
sbb
js
ds
mov
stos
mov
or
xchg
ins
inc
pop
in
jle
or
out
xor
dec
push
push
sbb
icebp
jno
(bad)
push
jb
scas
int
or
fnstsw
mov
in
dec
cli
sti
cmps
aaa
sbb
lds
sbb
xchg
jae
mov
jl
popf
xor
icebp
mov
xchg
retf
ss
or
rol
jp
sbb
mov
outs
mov
jle
inc
inc
mov
jmp
cli
xchg
stos
mov
call
sub
imul
cmp
loope
mov
sti
xchg
mov
jb
jo
xchg
xchg
xor
mov
arpl
or
or
and
xor
scas
xor
aaa
imul
push
jne
dec
push
pusha
cmp
sub
stc
xchg
push
scas
dec
inc
xchg
mov
push
and
(bad)
out
jl
cmp
dec
xor
rol
retf
push
lods
pop
and
mov
sub
inc
stc
call
sub
out
ds
data16
inc
add
mov
lahf
fsubr
pop
scas
push
and
or
adc
loop
lods
(bad)
call
cmp
push
aam
aas
mov
stos
repnz
cwde
mov
dec
(bad)
int
mov
jne
int3
xchg
punpckhbw
push
outs
sub
inc
and
rol
mov
sahf
pop
dec
lds
or
pop
test
mov
jecxz
stos
sbb
push
aam
sub
mov
out
jmp
mov
fcmovb
push
jnp
fwait
retf
bound
dec
add
push
or
test
sub
xchg
rcr
shr
test
inc
adc
sahf
push
mov
pop
mov
pop
inc
dec
rep
add
(bad)
js
inc
xor
imul
or
xchg
enter
push
fs
ss
sub
mov
lods
sbb
mov
pop
lods
into
icebp
lea
jbe
stos
bound
mov
in
out
push
mov
pop
mov
and
dec
test
popa
add
fistp
addr16
xor
dec
pop
test
pop
xor
out
adc
sbb
dec
movs
mov
fstp
mov
mov
iret
imul
pop
jb
icebp
jp
ins
add
pop
inc
pop
popa
fistp
test
pop
push
xchg
sub
jl
mov
ja
dec
jmp
fimul
test
outs
in
inc
jp
fcomip
popa
dec
mov
mov
xchg
das
push
xchg
pop
push
or
in
xchg
mov
mov
xor
and
jge
ins
mov
cmp
iret
jg
sbb
call
pop
adc
mov
mov
(bad)
nop
(bad)
and
in
dec
mov
loope
mov
sbb
in
lds
xlat
leave
or
xor
jbe
imul
add
mov
jne
pop
cmp
cmp
mov
dec
fs
cmp
cmp
aam
jp
(bad)
int3
xchg
push
mov
(bad)
data16
sub
sbb
push
(bad)
xlat
pop
mov
dec
xchg
(bad)
jmp
aad
mov
pop
repnz
cld
dec
jnp
or
outs
inc
pop
jl
aad
stos
jecxz
mov
push
mov
push
retf
fwait
cmp
push
cmps
jle
dec
mov
xchg
scas
mov
(bad)
mov
outs
jmp
jne
cdq
xchg
or
or
jae
inc
xchg
mov
fbld
pop
mov
std
fwait
dec
lods
loop
mov
or
pop
sti
inc
repz
les
pop
ret
and
and
mov
les
into
add
fidiv
or
dec
das
loopne
repz
add
out
jp
(bad)
popa
je
scas
jle
mov
stos
in
inc
mov
cmp
mov
ds
push
(bad)
cmp
cmps
loop
(bad)
ins
gs
jnp
push
ja
or
enter
in
in
retf
lods
jne
mov
jae
sahf
aas
pop
mov
fwait
xchg
add
push
fsub
mov
mov
jae
adc
push
stc
scas
push
rol
repz
sbb
push
xchg
clc
push
movs
outs
cmps
mov
mov
add
adc
pop
mov
(bad)
imul
dec
sub
inc
xor
repz
pop
dec
push
mov
lahf
jmp
ins
mov
pop
mov
cmp
mov
aad
cmc
sub
in
mov
in
push
mov
and
jecxz
sub
mov
inc
sar
mov
shl
leave
loop
adc
lea
dec
add
fiadd
mov
(bad)
out
pop
dec
shl
dec
inc
xor
xchg
fwait
xchg
and
dec
in
add
xor
sbb
add
jno
inc
xor
or
and
loope
or
jne
call
fwait
or
call
aas
or
sub
ror
pusha
in
sub
hlt
mov
xor
dec
lds
cmp
clc
fisttp
xchg
dec
mov
test
ja
or
icebp
push
aas
imul
nop
in
and
cmp
xor
dec
dec
dec
ja
imul
mov
fs
je
fs
(bad)
adc
nop
pop
push
int
mov
(bad)
shl
in
scas
sbb
cli
call
repnz
mov
lea
push
sub
cmp
add
pop
or
fcomp
and
push
je
in
(bad)
push
cmc
inc
stc
(bad)
jecxz
(bad)
dec
jbe
enter
out
sub
sub
xchg
ror
sub
xchg
lea
call
movs
push
iret
test
dec
mov
jl
repz
in
and
cli
ror
(bad)
ja
sti
or
in
mov
mov
add
adc
test
jmp
je
mov
inc
pusha
fmul
js
fild
dec
mov
and
add
and
mov
adc
jecxz
and
mov
mov
sar
or
daa
into
rol
or
icebp
jbe
jae
jb
fsubr
out
call
shl
add
mov
icebp
xchg
mov
dec
push
out
jmp
loope
and
nop
add
mov
mov
sub
sub
test
or
loop
cmp
jp
xchg
jne
iret
lahf
movs
xchg
es
(bad)
lods
addr16
je
fistp
(bad)
fbstp
test
and
sub
ss
clc
pop
mov
inc
or
cmp
mov
add
iret
xchg
jbe
xchg
push
jle
lea
fdivr
dec
xchg
(bad)
mov
xchg
jbe
sub
pop
mov
pop
dec
push
dec
je
lahf
dec
inc
sub
dec
jne
cmps
and
ins
cmp
mov
das
inc
fisubr
mov
out
fs
mov
xchg
aad
cmp
dec
or
rcl
test
fwait
xor
mov
push
dec
jae
cdq
pop
fcomp
les
arpl
fidivr
mov
jbe
pop
xrelease
leave
jecxz
int
shl
adc
test
mov
mov
mov
leave
sbb
fstp
add
xchg
pop
mov
cmp
adc
sub
icebp
inc
mov
pop
xchg
xchg
push
or
shl
out
inc
cli
xchg
add
ret
in
inc
jne
cmp
mov
(bad)
sub
mov
xor
sub
cmp
pop
lods
adc
mov
cld
sti
xchg
cmps
aam
mov
repnz
jo
sbb
jmp
cwde
aad
movs
shr
in
mov
xor
scas
jno
sahf
arpl
cmp
jg
(bad)
out
inc
mov
jno
aaa
in
retf
fdivp
and
(bad)
mov
or
cmp
stos
inc
xchg
loopne
ss
mov
xor
jg
push
aas
and
inc
fld
call
mov
jne
leave
mov
imul
stc
stc
(bad)
imul
loopne
iret
adc
sbb
mov
sub
push
je
imul
les
inc
cmp
add
jp
(bad)
and
mov
js
ins
lds
pushf
mov
xchg
pop
xchg
pop
ja
add
cld
repz
mov
sub
outs
dec
xchg
sbb
add
mov
xor
push
push
or
or
in
push
ret
inc
adc
int3
pushf
hlt
xor
push
dec
cmp
in
or
mov
jno
mov
jns
ror
inc
add
inc
popf
xor
es
je
fstp
in
mov
push
push
repz
push
mov
adc
bound
(bad)
or
and
shr
js
xchg
dec
fsub
add
xor
in
enter
lods
js
ss
cmc
mov
aad
inc
sub
ret
sbb
sbb
inc
scas
pop
das
rcl
cdq
cmps
dec
mov
push
fdivp
xor
arpl
(bad)
and
cmp
movs
(bad)
jno
ret
xor
sub
(bad)
ficomp
add
je
mov
aas
or
mov
jg
mov
out
sbb
pop
addr16
mov
jne
mov
xor
adc
mov
mov
dec
aad
je
mov
add
(bad)
sbb
cmp
cli
bound
xchg
ds
or
mov
enter
jns
arpl
movs
xchg
sbb
mov
add
loopne
jb
mov
pop
out
call
dec
mov
jne
neg
push
lock
(bad)
jb
push
xor
pop
jae
mov
inc
inc
jae
ds
ss
ret
add
cmps
fldcw
xor
ret
ds
nop
xchg
xlat
(bad)
in
dec
daa
push
cld
inc
jne
push
cmp
sbb
ja
retf
cmp
push
pop
cmps
retf
cmp
mov
in
xchg
rol
add
mov
xchg
aaa
mov
test
and
mov
push
daa
cmp
dec
and
scas
ins
les
inc
jo
xor
shl
mov
mov
jge
pop
mov
sbb
xor
in
(bad)
test
jg
bound
jae
jnp
mov
ss
nop
out
cmc
jae
lods
adc
imul
jmp
in
mov
or
mov
mov
xchg
std
ins
les
xlat
jmp
out
or
std
mov
dec
scas
push
lahf
fst
jnp
and
sbb
mov
jmp
mov
movs
push
out
or
ret
dec
scas
ins
stos
int3
sbb
adc
pusha
imul
jnp
in
xor
ins
xor
cmp
dec
or
int3
sub
loop
sti
mov
add
movs
push
adc
enter
xor
xchg
and
cli
(bad)
fs
cli
mov
movs
nop
pop
xchg
push
xlat
and
dec
adc
sub
inc
fcomp
sub
out
sub
mov
sti
pop
int3
push
fs
mov
aad
push
jno
cmp
lea
dec
js
push
and
icebp
or
les
(bad)
shl
(bad)
xor
nop
xor
cli
mov
movs
mov
dec
xchg
xchg
inc
xor
mov
xor
nop
mov
repnz
call
out
ret
rep
not
jne
fstp
fwait
xor
aad
push
cmp
stos
out
rol
mov
xor
or
mov
mov
fnstsw
pop
movs
sbb
inc
adc
push
int
jmp
sahf
aas
pop
mov
dec
mov
shr
mov
sub
aad
sahf
sub
xor
cmp
add
sbb
(bad)
mov
fiadd
inc
loopne
pop
inc
xchg
retf
repz
inc
fisub
jne
jae
outs
add
adc
(bad)
cli
data16
mov
aam
mov
bswap
cmp
dec
inc
jno
cmp
xor
xchg
cwde
adc
sbb
in
arpl
xchg
xor
pop
loope
adc
xchg
(bad)
or
push
stos
lods
daa
xchg
mov
xor
iret
arpl
cmc
jecxz
sar
outs
xor
jecxz
or
in
nop
push
hlt
nop
cmp
outs
cdq
mov
and
addr16
scas
jle
push
push
sar
es
cmp
lock
jbe
hlt
ss
aas
jl
mov
inc
adc
mov
dec
mov
push
fs
std
mov
clc
sub
push
cwde
mov
mov
jmp
in
and
out
shl
int3
dec
sar
or
fwait
and
shr
cwde
(bad)
sub
mov
dec
dec
repnz
popa
mov
push
repz
adc
imul
mov
cwde
mov
xchg
es
enter
push
addr16
pop
push
das
or
loopne
retf
int3
cmp
imul
int
pushf
inc
icebp
inc
pushf
jle
int
sahf
test
icebp
fild
daa
je
and
(bad)
jg
jl
loope
jo
sbb
sbb
cmc
cli
mov
sar
xchg
or
or
xlat
push
imul
dec
mov
cmp
shl
pop
stc
lds
cld
sar
adc
jge
mov
out
sub
retf
mov
scas
ins
xor
sub
sub
adc
scas
inc
inc
nop
shr
cmp
adc
aas
nop
and
je
hlt
gs
movs
mov
mov
out
pop
jle
jle
cmp
pop
pop
mov
(bad)
stc
xlat
into
fisttp
mov
xchg
fld
movs
pop
or
call
je
xchg
or
mov
mov
xchg
shl
std
jo
mov
or
mov
jb
inc
xchg
mov
shr
das
inc
lock
(bad)
fdiv
fs
jge
std
dec
pop
fnstcw
js
in
xor
scas
xchg
ins
or
mov
dec
pop
xor
jp
test
xchg
mov
mov
mov
retf
out
mov
xor
jg
cmps
or
pusha
inc
sbb
imul
push
ins
iret
cmps
jmp
ins
cmp
add
xor
xor
pop
adc
stos
mov
adc
and
sbb
inc
fdivr
mov
mov
cmp
pushf
and
call
sbb
fisttp
retf
xchg
add
cmps
in
xchg
cwde
push
stc
pop
and
je
imul
sar
mov
jle
cmp
mov
cmp
jb
rcr
xchg
inc
mov
push
mov
ds
push
cmp
pop
aam
hlt
mov
stos
dec
inc
mov
inc
xor
inc
sub
pusha
pop
pop
fcmove
hlt
js
cmp
ins
loope
or
fcomi
stos
push
xor
in
mov
jle
mul
cmp
pop
stos
jmp
jg
mov
inc
xor
sbb
shl
out
fwait
pop
lock
cmp
paddsw
(bad)
pop
aaa
pop
scas
xor
pop
mov
jbe
xor
sub
out
nop
mov
retf
jl
nop
cmp
movs
test
test
imul
cli
clc
sub
into
lock
jne
sti
mov
out
ja
pusha
mov
andpd
sbb
jmp
cmp
jg
movs
test
pop
sbb
mov
je
mov
adc
sub
add
stos
adc
scas
jo
and
ds
mov
dec
xor
jl
push
mov
dec
call
dec
xchg
out
retf
out
(bad)
sub
cmc
push
jno
lods
xor
shr
ds
popa
or
mov
sbb
in
test
pop
cmp
jnp
popf
mov
not
and
jnp
aaa
loopne
pop
jmp
jmp
les
pushf
and
cmp
out
fisttp
xor
outs
pop
rcr
(bad)
cmps
xor
push
out
inc
int
dec
imul
lods
(bad)
std
ret
adc
ins
cmc
xchg
mov
mov
jne
mov
push
dec
mov
mov
mov
sub
das
jle
aaa
inc
jmp
lods
xchg
mov
mov
add
leave
into
mov
(bad)
push
and
pop
dec
and
xor
sbb
push
cmps
add
ret
pop
sub
inc
fidiv
inc
cmps
popa
pop
mov
hlt
cs
mov
mov
(bad)
lock
xchg
adc
lea
dec
adc
jno
dec
icebp
pop
and
fnstcw
ds
push
jns
inc
or
mov
pop
add
nop
mov
scas
mov
jp
stos
aam
mov
or
add
sbb
xchg
outs
sar
adc
cmp
repz
(bad)
and
pop
fs
adc
(bad)
mov
mov
pop
addr16
xchg
(bad)
jg
rcl
es
xlat
fmulp
(bad)
es
dec
outs
sbb
add
push
(bad)
popa
rol
and
psraw
test
fidiv
fadd
icebp
jbe
push
xor
adc
ins
sub
mov
mov
jg
mov
push
push
ror
and
pop
sbb
(bad)
dec
cmp
leave
mov
xchg
jnp
sub
pop
stos
retf
pop
inc
inc
lock
xchg
push
jecxz
add
mov
sbb
pop
mov
(bad)
out
outs
sbb
mov
mov
sahf
enter
retf
inc
xchg
pop
inc
sub
sub
add
cmp
sub
or
adc
push
jne
push
cwde
ret
cdq
and
add
add
mov
mov
scas
dec
mov
ds
inc
cmp
and
cmp
jo
xchg
cmp
stc
push
retf
loop
push
cmp
in
scas
ret
sti
mov
xchg
dec
pop
imul
sbb
jne
scas
cmp
fidiv
int
icebp
mov
leave
pop
jle
push
lods
ja
jbe
xor
outs
dec
retf
retf
dec
test
push
push
lea
cmp
and
sbb
in
mov
fs
inc
(bad)
adc
adc
pop
jns
(bad)
repnz
cmps
mov
mov
dec
ss
(bad)
jl
lea
cmp
fdivr
mov
adc
jl
cmp
sar
pop
test
cs
push
out
stc
fdiv
jmp
inc
adc
add
aam
in
cli
not
outs
rcr
cld
fsub
std
(bad)
stc
mov
je
(bad)
retf
xlat
data16
fdiv
inc
dec
mov
mov
arpl
xor
add
dec
adc
mov
xor
inc
add
mov
and
dec
leave
cld
xchg
in
retf
(bad)
jns
mov
(bad)
loopne
cwde
test
add
shl
xor
adc
push
stc
xor
test
pop
add
les
cmp
cdq
jmp
popa
push
dec
shr
(bad)
loopne
in
pop
cmp
aaa
rol
fdiv
inc
ficomp
clc
and
(bad)
in
mov
into
push
sub
bound
ss
sahf
pop
lahf
fstp
xor
loope
and
inc
mov
xchg
loop
jmp
or
mov
jg
xor
and
les
call
in
cmp
pop
xchg
dec
cs
mov
inc
div
pushf
(bad)
jne
dec
mov
retf
dec
pushf
rcr
pop
mov
sar
int
xlat
inc
cmp
sbb
ret
sub
out
or
fistp
jg
cmp
leave
cmp
sti
mov
sbb
xchg
push
xchg
(bad)
inc
outs
push
jmp
sub
mov
gs
test
jge
cmps
ror
cmc
lds
std
xchg
add
dec
mov
jae
imul
pushf
sub
ss
cmp
mov
sbb
mov
jl
stc
pop
movs
mov
pop
pop
push
pop
cli
cmps
repnz
cmc
ins
dec
xchg
adc
cld
xor
dec
pop
out
test
(bad)
dec
xchg
dec
mov
push
std
loope
jecxz
retf
cmps
or
mov
and
sbb
cmp
jp
retf
scas
iret
(bad)
das
sub
rcr
mov
fdiv
test
adc
or
sbb
add
dec
(bad)
jb
jmp
sub
adc
das
xor
add
mov
xchg
pop
dec
sbb
xor
jl
jne
xor
mov
xchg
push
mov
repnz
and
ins
jmp
mov
cdq
repz
adc
push
sub
dec
or
call
jbe
cmps
dec
push
fmul
stc
arpl
or
icebp
mov
imul
mov
mov
jmp
push
dec
sbb
pusha
push
and
aas
mov
out
mov
pop
(bad)
fs
xchg
iret
into
sbb
jbe
sub
stos
or
inc
rcr
xchg
xor
dec
aam
ret
mov
out
test
leave
daa
push
pop
inc
add
xor
jno
ss
call
imul
rol
xor
cmp
mov
xchg
retf
lods
sub
lods
adc
pop
mov
in
dec
(bad)
ja
pop
sub
sar
imul
ss
sbb
push
or
retf
mov
cmps
mov
jno
add
dec
data16
push
inc
xchg
daa
mov
sub
add
sbb
loopne
(bad)
dec
(bad)
dec
push
adc
add
stos
ret
mov
cs
mov
dec
xchg
pop
mov
add
xor
mov
test
je
sub
cmp
xchg
mov
ret
popf
jl
mov
xchg
jo
daa
fisttp
jp
std
shl
and
dec
push
cmc
xor
outs
jno
and
nop
jae
shr
call
fldenv
popa
cmp
dec
adc
aad
jae
test
cmp
lods
fdiv
sbb
cli
jne
jo
push
dec
mov
dec
dec
jae
xor
add
mov
xor
rcr
or
aad
stc
jne
cmc
outs
mov
outs
sbb
cdq
callw
gs
icebp
mov
imul
scas
dec
cmp
or
stc
and
daa
mov
hlt
movs
mov
cmp
or
daa
dec
inc
int
les
pop
push
sbb
popf
and
jge
sub
cmp
sub
loopne
addr16
js
or
jo
cmp
adc
stos
xor
mov
mov
int
xchg
or
mov
push
add
xor
inc
and
test
xchg
add
adc
mov
retf
arpl
push
loopne
gs
adc
push
mov
jge
mov
movs
sub
ficomp
lods
xor
push
push
sahf
or
xor
(bad)
arpl
(bad)
js
in
push
dec
sub
push
pop
dec
jbe
add
outs
cmp
jg
sbb
mov
imul
sub
adc
popa
stos
movs
push
jno
push
aas
leave
fiadd
sbb
pop
loope
jnp
das
lahf
inc
and
sbb
loope
lods
sbb
xor
(bad)
daa
mov
std
mov
lahf
(bad)
rol
sub
cmp
out
inc
icebp
gs
sahf
das
jecxz
shl
push
dec
pop
jecxz
leave
jnp
scas
ss
in
pop
mov
dec
dec
scas
jo
dec
aam
mov
je
add
repnz
ja
aam
xor
push
add
fwait
sub
mov
cdq
sub
mov
lods
aas
(bad)
adc
xor
cli
fwait
xchg
cmps
sub
sahf
add
stos
rcl
movs
shl
cmp
pop
or
popa
test
loop
test
fild
cdq
(bad)
(bad)
xlat
or
mov
lods
(bad)
fcomip
dec
jmp
in
push
mov
mov
adc
inc
mov
jae
sar
jne
push
stos
std
xchg
push
gs
fcomp
pop
fcomp
loopne
fnstcw
imul
jmp
mov
fnstenv
sbb
mov
mov
adc
lahf
push
sub
and
xchg
mov
icebp
mov
out
ficom
adc
mov
sub
xchg
lods
popf
adc
js
das
jae
fdivp
test
push
imul
mov
mov
cmps
xor
aaa
xchg
cmp
div
dec
and
iret
mov
sbb
mov
popa
xor
xchg
xor
cmp
mov
ins
add
cli
movs
xchg
imul
add
mov
mov
ror
xor
pop
mov
inc
sbb
xchg
pushf
dec
pop
mov
mov
mov
popa
jle
lahf
push
retf
int3
xlat
jo
lods
xchg
mov
pop
and
jns
sbb
sub
push
dec
ss
fwait
rcr
push
jmp
leave
(bad)
retf
mov
adc
add
ins
out
inc
dec
inc
daa
repnz
jnp
aaa
adc
lock
adc
xchg
aas
mov
aad
enter
imul
xchg
jecxz
or
and
xlat
mov
clc
es
retf
pop
pop
and
mov
scas
mov
adc
cmps
fnstsw
test
and
outs
std
or
pusha
popa
lods
push
lods
dec
cli
adc
call
out
mov
retf
js
pop
adc
pop
sub
ror
data16
jl
mov
mov
push
in
adc
inc
out
mov
mov
stos
jecxz
scas
jmp
inc
fadd
fdiv
sar
pop
jle
xchg
inc
add
jo
pop
ret
jnp
into
fbld
cmps
adc
shr
inc
jbe
jl
dec
mov
mov
cdq
sub
xlat
cmps
stos
mov
int3
sub
add
fadd
sar
mov
push
adc
xchg
aas
cs
imul
fcomp
gs
or
pop
stos
xchg
ror
mov
out
jp
jg
push
idiv
or
popa
out
scas
cdq
cmp
outs
fs
and
sti
loop
cmp
push
iret
pop
inc
cmp
imul
(bad)
sbb
fwait
mov
mov
push
out
test
adc
stc
and
push
dec
arpl
cmp
retf
jl
ds
daa
pushf
and
and
inc
icebp
cwde
in
add
inc
fst
bound
aaa
popf
lods
push
dec
mov
out
xchg
xchg
and
cmp
inc
sbb
add
scas
inc
jnp
pop
aad
jl
pop
(bad)
jmp
dec
imul
pop
aad
cmp
jg
loope
adc
mov
loop
shl
mov
std
mov
xchg
adc
jle
jl
movs
sar
push
jg
lahf
outs
mov
push
or
or
adc
ret
push
or
add
inc
xchg
ins
and
add
shl
dec
xchg
mov
sbb
jno
xor
and
xchg
out
in
push
dec
out
call
out
je
jae
(bad)
mov
stc
dec
mov
outs
aaa
and
pop
mov
neg
cmpps
mov
push
pop
sbb
push
adc
inc
test
es
add
(bad)
das
cmps
jmp
sbb
aas
push
shr
push
fcomi
pop
and
or
sub
out
mov
mov
cmp
das
xchg
loopne
cmps
rcl
ja
jae
push
mov
cdq
je
aam
cmp
cwde
mov
rol
dec
das
gs
imul
cmp
into
fisttp
fld
fwait
test
shr
inc
jp
jmp
scas
mov
nop
push
push
test
sar
lahf
(bad)
shl
cs
leave
inc
mov
in
push
jmp
pop
jp
mov
in
pop
int
icebp
mov
sub
stc
mov
inc
and
fdivp
jmpw
or
or
sar
(bad)
and
aaa
xor
retf
jmp
or
dec
xchg
sbb
push
mov
daa
arpl
fwait
loopne
adc
or
adc
mov
sub
xchg
xchg
rol
and
or
mov
sub
or
scas
test
sub
mov
and
jle
or
mov
mov
xchg
dec
mov
icebp
into
add
push
sti
adc
and
jno
test
mov
cmp
push
or
inc
fs
jg
movs
or
cmp
xchg
inc
adc
in
(bad)
mov
sub
jae
and
test
sti
jl
and
jae
sub
xlat
inc
lock
das
mov
and
mov
mov
xor
xor
pop
sbb
xchg
leave
mov
add
clc
retf
sbb
icebp
std
fmul
mov
sub
xchg
sbb
clc
and
hlt
sub
cmp
rcl
xor
fcom
xor
mov
popf
lock
stc
push
jecxz
lahf
pusha
ss
sti
lock
addr16
xchg
call
sahf
xchg
outs
jmp
aas
aam
jne
dec
sbb
vpaddusw
stc
pop
cmp
(bad)
sbb
jmp
nop
mov
movs
out
push
or
xchg
push
xchg
mov
jmp
dec
movs
loop
add
or
push
dec
fist
ss
gs
pop
sub
cmp
jne
adc
retf
dec
(bad)
stos
push
dec
outs
jmp
cli
sub
ins
stos
xchg
in
out
(bad)
scas
jne
in
movs
dec
push
ss
xchg
or
and
and
scas
dec
cmp
(bad)
xchg
add
(bad)
leave
(bad)
scas
sar
bound
sar
dec
push
movs
sti
nop
jnp
ss
mov
ins
in
mov
out
stos
pushf
sub
add
movs
inc
push
mov
fild
loopne
mov
and
lds
retf
std
test
lahf
dec
test
aad
dec
jae
jne
and
jge
cmp
cmps
arpl
out
inc
inc
fcomi
add
push
mov
add
test
out
inc
movs
sbb
shl
cmps
and
ja
jbe
xor
sbb
dec
ficomp
fwait
pop
inc
retf
dec
jle
rol
sbb
or
dec
hlt
out
cmc
jne
in
cmps
and
ss
push
enter
fucom
sbb
xchg
mov
mov
jl
stos
iret
add
sbb
or
repz
or
outs
jnp
pop
das
hlt
xor
xchg
inc
lods
and
mov
or
in
fild
int3
lods
pop
push
or
out
sbb
aad
cs
xchg
je
xor
jo
inc
mov
in
dec
aas
pop
(bad)
mov
leave
push
aad
loope
or
add
sbb
pop
pop
dec
dec
xchg
out
and
lock
dec
dec
add
or
sbb
(bad)
stos
mov
fisttp
inc
test
pop
mov
xchg
call
ja
jecxz
mov
std
xchg
sbb
pop
and
lea
mov
in
push
(bad)
nop
clc
pop
inc
and
jnp
sbb
xchg
xchg
mov
adc
pushf
xlat
sub
sub
pop
add
ds
pop
movs
xchg
mov
xchg
or
sub
xchg
enter
popa
rcr
add
fld
adc
out
out
pop
mov
mov
inc
mov
add
mov
inc
jo
into
movs
mov
inc
lods
std
sbb
imul
fsubr
or
sub
jbe
in
add
xchg
fmulp
mov
loop
inc
(bad)
mov
push
lods
push
mov
and
cmp
cld
push
dec
adc
lods
imul
mov
arpl
lds
jmp
ja
leave
dec
dec
fdiv
std
lock
jl
pop
jae
adc
out
imul
push
in
inc
mov
int
cmps
push
in
jge
and
cmp
mov
inc
inc
mov
stos
aaa
aas
fdivr
test
and
stc
fimul
xchg
(bad)
push
movs
mov
les
push
xor
in
adc
mov
leave
inc
push
repnz
iret
xor
repz
(bad)
idiv
mov
or
mov
call
or
pand
push
push
dec
std
js
clc
jp
psllq
add
test
jno
dec
sti
test
arpl
retw
rcr
stos
xor
rcl
cmp
sbb
ret
dec
sbb
rcr
rcl
mov
std
cmps
repnz
pop
inc
push
ss
pop
dec
push
sub
nop
sbb
mov
mov
mov
pop
ret
and
sub
in
ins
adc
ins
leave
sbb
inc
cmp
lea
movd
sub
adc
aad
repnz
xchg
in
xor
mov
lds
test
mov
or
push
loopne
retf
aad
xchg
fwait
jmp
mov
pop
cdq
jb
sub
jecxz
mov
nop
dec
sub
es
dec
and
mov
rcl
iret
add
mov
ins
pop
xchg
push
adc
shl
cmps
inc
or
pop
std
push
imul
push
es
fs
lods
inc
ja
pop
test
in
and
jnp
hlt
cs
jmp
js
mov
repnz
fs
xor
sbb
outs
shl
in
loope
dec
in
test
jge
sub
or
aad
push
mov
xchg
cmp
aas
cmp
ins
mov
cmp
mov
aad
sbb
scas
iret
clc
dec
addr16
push
cmp
sbb
mov
push
lock
div
xor
push
ins
adc
imul
rol
cmp
scas
mov
stc
cli
mov
test
sub
je
stos
aaa
daa
dec
jbe
les
sub
fs
lds
sbb
lea
xchg
sbb
mov
cmps
test
dec
add
sahf
retf
jge
into
mov
iret
ds
std
jbe
retf
movs
pusha
(bad)
pop
jae
into
mov
sbb
mov
dec
sub
dec
push
jmp
dec
or
add
outs
xchg
shr
add
les
cmc
fwait
test
lods
add
into
and
leave
xor
gs
cmp
fisub
in
mov
in
test
xchg
jle
stc
mov
aam
iret
xchg
sbb
push
xor
popa
jo
out
ss
mov
jmp
inc
dec
cmp
icebp
push
out
xor
(bad)
stc
cs
and
bound
or
test
xchg
or
xchg
dec
inc
cmp
(bad)
mov
adc
(bad)
sbb
mov
inc
fs
jmp
je
mov
inc
xchg
pop
scas
and
sbb
xchg
sub
aas
pop
js
ins
std
lods
xchg
add
fnstenv
ffree
xchg
in
push
jmp
mov
pop
scas
cwde
dec
jns
out
(bad)
into
pop
mov
jne
aad
pushf
pop
in
(bad)
out
call
jmp
test
or
out
in
sbb
cli
fmul
xor
retf
dec
js
jns
and
inc
sti
popf
(bad)
xchg
stos
push
das
shl
mov
idiv
mov
mov
(bad)
in
jmp
fisubr
movs
aas
jle
aad
popf
enter
ds
and
sub
fs
mov
cmps
les
mov
jbe
lds
dec
push
mov
sub
in
inc
sub
clc
daa
data16
cmp
mov
pop
bswap
nop
mul
add
pushf
sub
lods
dec
out
inc
or
jae
adc
add
fs
stc
add
push
pusha
dec
xor
ds
and
xchg
iret
jmp
mov
out
cli
stc
dec
shl
mov
mov
popa
mov
and
sbb
mov
imul
cdq
loopne
call
sub
sub
fdivp
into
mov
push
pop
dec
es
pop
aad
sbb
pop
ror
mov
jl
xchg
imul
ins
and
mov
imul
in
stos
mov
js
cdq
hlt
(bad)
fnstenv
cmp
stc
or
fldenv
mov
mov
jae
arpl
int
mov
push
push
mov
sub
test
and
fs
push
pop
pop
mov
mov
cs
cmp
xor
clc
and
frstor
js
pop
cmp
stc
imul
enter
and
in
add
out
push
or
stos
lea
ins
test
test
adc
popf
push
dec
lock
add
xor
push
cmp
retf
jne
shr
mov
xor
test
lock
aaa
xor
out
fbstp
cmp
adc
push
push
pusha
int3
aad
jne
cli
push
mov
scas
addr16
scas
and
xchg
mov
adc
push
movs
inc
mov
fild
lea
adc
loope
bound
test
push
cs
jp
ja
pushf
lea
dec
imul
jmp
cld
mov
aad
sbb
lea
lock
cmc
mov
dec
mov
push
add
push
cmp
std
in
call
(bad)
and
xchg
jbe
add
push
push
icebp
stos
cmps
push
mov
adc
adc
cmc
ja
jb
sbb
mov
adc
mov
je
jl
add
pop
sub
jno
(bad)
or
stos
jl
xchg
jg
push
ficom
jne
or
fwait
or
in
cmp
(bad)
add
(bad)
bound
adc
je
push
test
rcr
loope
push
cwde
dec
loopne
sahf
cdq
into
xor
dec
sub
dec
test
mov
rcr
fwait
sub
push
sbb
jg
aaa
shl
shl
push
mov
push
xlat
cmp
pop
retf
test
pusha
sub
add
bound
mov
push
or
xchg
or
cmp
push
add
shr
in
sti
ja
xchg
movs
out
add
or
cmp
adc
or
jmp
cld
mov
hlt
jne
scas
sbb
and
cmp
add
add
call
pop
jo
sahf
xor
imul
mov
or
neg
dec
repnz
xchg
daa
(bad)
mov
inc
inc
sbb
mov
add
mov
imul
pop
(bad)
push
adc
rcl
aaa
push
mov
je
jne
mov
out
idiv
sbb
jae
enter
(bad)
pop
ins
or
xlat
xor
and
cmp
jp
jmp
arpl
inc
jb
ins
xchg
call
sbb
int3
cmp
cmp
jo
pop
div
movs
(bad)
mov
mov
test
in
mov
and
pop
mov
jecxz
ins
dec
js
sub
sti
mov
adc
jmp
cwde
dec
add
out
loop
or
xchg
nop
push
rol
js
ret
add
push
cmp
inc
movs
cli
mov
ret
cmps
mov
xchg
mov
inc
je
not
in
pop
call
add
stos
mov
add
js
and
lahf
in
fmul
jb
mov
dec
movs
imul
mov
push
retf
in
or
fcom
sbb
std
imul
lods
cmp
fldenv
xchg
mov
jg
call
stos
pop
adc
push
sub
shl
fmul
addr16
jnp
sub
jbe
enter
sti
ret
out
add
repnz
test
lock
or
inc
push
or
inc
clc
fwait
mov
repnz
xchg
pop
xchg
jae
xor
arpl
inc
int3
jb
shl
jbe
add
adc
repz
shl
(bad)
dec
xor
cmp
ficom
daa
jb
mov
scas
aad
mov
cmp
je
neg
jmp
sar
jns
arpl
mov
cld
inc
pop
test
imul
add
imul
mov
lds
mov
mov
mov
sbb
imul
movs
addr16
adc
add
mov
or
inc
fmul
popf
dec
in
pop
ret
push
retf
add
sub
mov
sbb
rcr
pop
imul
call
adc
mov
int
and
test
lahf
xchg
pop
pop
or
nop
pushf
push
jg
xchg
mov
fldcw
lods
jmp
scas
les
data16
inc
mov
call
jmp
add
mov
int
xchg
inc
adc
add
enter
xchg
not
push
xchg
cdq
cmp
mov
out
(bad)
int
mov
call
mov
pop
pop
test
and
in
mov
retf
test
data16
stos
in
mov
push
ja
mov
mov
lods
aas
adc
add
sbb
pop
pop
loope
retf
pop
rcl
mov
and
scas
test
mov
dec
mov
add
aad
imul
xor
xor
or
enter
dec
(bad)
xchg
arpl
dec
sbb
adc
inc
fwait
push
in
fsubr
mov
int3
xchg
popa
xor
push
(bad)
mov
adc
xor
pop
popa
loopne
mov
lea
add
pop
xor
push
es
sahf
fstp
push
sahf
(bad)
(bad)
stos
mov
dec
out
jb
add
sbb
xchg
push
cli
mov
add
push
push
pusha
fadd
mov
inc
retf
rcr
aad
pop
add
retf
aas
sahf
shl
lea
pop
mov
mov
push
xor
add
inc
jl
out
sbb
sub
fcom
aas
push
inc
fld1
div
cmp
mov
xchg
das
dec
sbb
push
mov
inc
vmovq
lahf
neg
ret
cmp
imul
lea
or
jo
cmp
popf
ret
jnp
aam
stos
xor
fist
mov
push
mov
lock
test
sbb
jae
sbb
jge
ds
out
fdivr
cmc
(bad)
mov
sti
int3
int3
lods
jno
and
or
or
add
pusha
mov
stos
add
cmp
imul
pop
mov
les
int
fistp
test
mov
jo
hlt
push
loopne
push
mov
aad
imul
cmps
into
pmaddwd
dec
inc
call
mov
cwde
(bad)
lock
push
sub
add
or
adc
imul
lock
fstp
scas
sub
and
inc
sar
jp
jmp
bound
fabs
sub
ins
out
inc
pop
call
jmp
repnz
stc
outs
jbe
add
dec
inc
sbb
retf
mov
(bad)
xchg
pop
mov
cmp
stc
pop
jmp
pop
dec
je
sbb
(bad)
cmps
inc
lods
inc
and
pop
jle
das
ss
lahf
call
in
mov
cmp
sbb
sbb
mov
adc
push
iret
hlt
call
fwait
call
inc
test
ja
sbb
out
neg
fisubr
adc
dec
sbb
and
mov
dec
(bad)
popf
cbw
dec
movs
inc
sbb
int3
imul
mov
push
add
jge
mov
or
jmp
inc
inc
inc
sub
ret
dec
inc
jae
mov
mov
sti
pop
stos
jbe
and
and
jmp
into
dec
xlat
jmp
scas
jo
clc
lods
in
mov
dec
jmp
in
popf
dec
jae
sub
not
pop
mov
dec
lahf
pusha
pusha
je
aad
jnp
push
or
shl
shl
mov
repz
jnp
push
or
shl
pop
jg
mov
sbb
jle
aas
mov
hlt
inc
push
ins
mov
pushf
shl
dec
xor
movs
add
sbb
and
daa
aam
xchg
xchg
mov
iret
jg
into
inc
or
shl
xor
pop
jae
jnp
cmc
aas
mov
je
fsubr
shl
adc
cmps
xor
scas
jae
push
out
cmp
jge
out
iret
mov
fs
jge
mov
popf
xchg
addr16
fimul
aaa
sub
dec
push
and
xchg
jae
pop
sub
xor
jp
push
mov
push
mov
xchg
stc
sub
aaa
inc
or
inc
mov
pop
push
sub
mov
inc
aad
test
xchg
xor
fsubrp
lock
dec
pusha
xor
in
and
pop
adc
xor
or
or
xchg
call
mov
test
lahf
sub
fs
adc
iret
xor
leave
ja
jge
xchg
push
sub
(bad)
adc
in
jecxz
xchg
int
adc
cwde
mov
xor
lahf
adc
xchg
sub
ret
jmp
xor
add
dec
imul
test
jmp
push
adc
pop
out
shl
mov
jne
in
jmp
pop
inc
mov
add
retf
mov
cdq
neg
xor
jl
jl
test
int3
push
in
dec
sbb
mov
pop
xor
(bad)
xchg
rcl
pop
into
and
cs
(bad)
sub
in
xchg
aad
push
enter
cwde
fwait
sub
js
dec
cld
and
push
sbb
fstp
loop
clc
push
dec
cmp
fdivr
mov
mov
dec
rcl
xlat
cmps
and
or
dec
dec
outs
loopne
inc
retf
std
xlat
ret
adc
stos
scas
hlt
adc
mov
arpl
pop
in
frstor
lds
pop
adc
out
je
cdq
aaa
outs
push
dec
leave
jmp
xchg
cmp
ds
sti
adc
not
fcom
out
mov
and
cmp
mov
mov
divps
sbb
pop
or
enter
cs
addr16
stos
mov
pop
cld
es
sti
and
ss
mov
adc
xchg
or
rcl
clc
xor
inc
pop
xchg
ins
in
push
xlat
rcr
cmp
jb
jg
scas
inc
sbb
push
hlt
pop
and
cmp
fidivr
fmul
sub
or
cmp
test
mov
bound
mov
icebp
ins
(bad)
leave
aad
test
and
js
(bad)
adc
sbb
adc
or
fldcw
(bad)
cli
xlat
(bad)
cli
cmp
jle
jg
or
jno
adc
jmp
xchg
test
leave
mov
daa
retf
std
aad
inc
outs
pop
xlat
movs
xor
das
jb
fst
lods
add
jne
pop
stc
call
stc
jbe
in
add
fisub
adc
clc
inc
ja
cmp
pop
sub
fidivr
cmp
push
out
shl
repz
test
mov
loop
es
cmp
movs
cdq
sbb
push
rol
sbb
or
cli
test
and
xchg
cmc
aam
movs
ja
inc
in
pusha
jl
(bad)
mov
data16
pop
mov
jae
mov
retf
add
mov
gs
mov
adc
dec
je
inc
push
jp
rcr
fwait
pop
mov
scas
loop
mov
bound
xchg
mov
and
mov
scas
imul
xor
jp
add
xchg
popa
push
push
and
sbb
pushf
or
mov
ins
(bad)
(bad)
push
aaa
rcr
popa
mul
or
xchg
fld
aaa
pushf
pop
imul
xchg
ins
jge
mov
xor
dec
push
retf
sub
retf
lahf
cld
xlat
fidivr
and
outs
leave
push
movs
ins
mov
inc
hlt
repz
push
add
hlt
cmp
adc
pop
lods
jne
or
popf
test
imul
std
adc
push
push
imul
or
push
mov
cmc
and
or
paddd
sub
ins
pop
jmp
add
js
pop
test
xor
scas
lods
enter
jno
ds
push
pop
icebp
jbe
(bad)
fadd
lea
pop
mov
div
pop
adc
inc
cmp
les
fdiv
mov
pop
mov
inc
sahf
jmp
and
das
sub
jmp
sbb
shl
jns
(bad)
jmp
sar
sbb
icebp
sub
fdiv
jmp
cmp
(bad)
cli
retf
mov
das
dec
adc
cld
xlat
clc
repz
rol
sbb
ss
call
cmp
sub
cmp
popf
std
inc
les
test
push
jmp
xchg
je
ins
inc
push
js
mov
add
fisub
jmp
jbe
cmp
dec
mov
pop
mov
les
(bad)
inc
xchg
ss
(bad)
pop
test
sub
mov
mov
fwait
mov
nop
inc
pop
into
shl
lods
cmps
push
scas
cdq
and
cmp
push
sub
aaa
in
call
adc
xor
jmp
cmp
add
pop
ja
cmp
pop
xor
jno
add
pop
jmp
xlat
addr16
push
push
cmp
fcomp
dec
pop
or
inc
and
in
dec
test
mov
(bad)
hlt
ins
dec
xor
fistp
scas
(bad)
fcomp
in
and
jmp
push
pop
add
rol
add
mov
fs
and
stc
mov
iret
add
xchg
jg
bsf
adc
jmp
cwde
js
xor
xor
add
dec
ss
cmp
dec
mov
jge
(bad)
out
mov
adc
loope
out
dec
sbb
jae
push
nop
inc
into
fsub
pop
out
aaa
mov
add
xchg
or
call
or
and
fisubr
and
adc
lods
jl
mov
lahf
adc
clc
dec
pop
mov
inc
fdivr
pop
pop
pop
iret
popf
arpl
push
cmp
shr
push
sbb
ja
mov
loop
inc
cmp
cld
clc
imul
jbe
push
mov
mov
outs
mov
test
(bad)
or
daa
nop
mov
test
xor
or
std
dec
mov
rol
shr
jl
fcom
loope
repz
aam
imul
mov
cdq
cmp
mov
mov
ins
push
jo
adc
and
test
fbld
shl
and
lds
jl
xlat
push
fmulp
pop
fsubr
bound
jp
push
cld
(bad)
movs
and
in
mov
mov
std
sub
dec
pop
mov
sub
fnstcw
push
fwait
das
mov
cmps
ins
push
pop
push
cmp
inc
fucomi
add
dec
pop
xor
outs
add
push
push
or
jp
lods
mov
sub
pop
inc
idiv
lods
dec
mov
leave
inc
repnz
mov
mov
(bad)
adc
jg
jecxz
add
ja
add
cmp
dec
fdiv
or
push
or
mov
xchg
push
(bad)
cs
(bad)
jnp
shr
mov
sahf
cmp
inc
cmc
fsubr
dec
sub
mov
and
mov
cmp
(bad)
push
adc
test
inc
jl
jo
jb
dec
sbb
cmps
jne
stc
inc
pop
sbb
jne
das
pandn
hlt
cmps
fsubr
je
jno
mov
xchg
addr16
ds
or
or
mov
std
mov
dec
pusha
xchg
mov
jnp
and
xchg
fisubr
push
adc
jle
ud1
inc
adc
adc
jle
aaa
ret
xor
adc
jae
lahf
push
xchg
stc
fnstenv
push
popa
hlt
aaa
std
enter
jg
dec
mov
add
out
add
dec
cmps
fdiv
xchg
aas
out
mov
jmp
jg
fldenv
pop
pop
iret
inc
cmp
mul
cli
call
fsub
push
dec
data16
sbb
inc
sub
push
mov
in
in
cmp
sbb
jns
sbb
out
repnz
fist
dec
popf
data16
ror
pop
and
and
jg
into
mov
mov
imul
jns
cmps
cmp
std
jmp
jns
fimul
push
les
sbb
inc
repnz
mov
jne
cmp
stc
push
xchg
repz
mov
inc
lods
rol
out
xchg
xor
pop
mov
(bad)
fnstenv
in
push
sahf
popf
pop
dec
(bad)
push
and
mov
add
pop
je
ret
inc
cmps
push
push
pop
jg
dec
mov
and
fiadd
fstp
jmp
xlat
not
add
stos
xchg
xlat
sbb
inc
fstp
dec
(bad)
dec
push
popa
sbb
xchg
cmp
xor
push
and
iret
xchg
push
dec
and
sbb
stos
pop
clc
(bad)
mov
pop
scas
xor
jns
xor
lods
scas
in
hlt
and
cmp
mov
push
push
dec
or
mov
mov
lods
and
mov
xor
out
push
shl
cmps
icebp
rcl
adc
sub
js
cmp
mov
adc
retf
xchg
add
push
fucomi
push
lahf
and
data16
(bad)
icebp
imul
adc
pop
es
lods
mul
addr16
das
fcomp
das
mul
and
outs
push
cs
ret
ins
pop
jg
mov
xchg
xchg
ins
daa
push
jb
in
push
jle
cdq
mov
push
push
sub
push
not
cmp
aaa
xor
in
or
mov
jl
retf
out
and
or
or
nop
fiadd
adc
call
inc
mov
in
push
jl
aas
std
sub
xchg
mov
jecxz
mov
les
adc
ins
push
lds
into
mov
cmp
jne
cmps
xchg
sub
inc
out
std
mov
scas
outs
leave
in
mov
or
pushf
xchg
jmp
push
or
fxch
pop
(bad)
addr16
enter
add
(bad)
jns
inc
dec
sub
fwait
dec
repnz
add
xchg
xor
sbb
(bad)
aaa
inc
iret
pop
data16
movs
jnp
or
iret
repnz
pop
(bad)
xor
fstp
aad
push
xor
push
xchg
jmp
ss
cli
dec
fisttp
into
adc
addr16
ds
jno
inc
jmp
sub
(bad)
cld
shl
push
sub
dec
retf
movs
cmps
cdq
mov
pop
out
je
sbb
scas
sub
mov
pop
stc
mov
or
push
adc
inc
cmp
out
frstor
mov
div
dec
das
ins
sti
movs
test
shl
(bad)
cwde
xor
das
mov
xchg
mov
stc
rol
inc
div
out
push
es
stos
mov
push
push
cs
xchg
push
fldcw
out
sbb
mov
sub
stos
dec
mov
inc
cmps
push
xor
xor
ins
jne
lea
fisttp
jle
jno
(bad)
cmp
imul
pop
adc
adc
adc
mov
inc
mov
jae
pop
stos
pop
sbb
ror
push
xor
bound
jle
inc
sub
sbb
jl
adc
clc
repz
ds
jo
adc
addr16
mov
cmp
pop
inc
adc
push
shr
push
je
or
movs
sub
ret
push
(bad)
iret
mov
es
pop
js
and
add
jle
mov
xor
push
cdq
fcomp
test
enter
xchg
sbb
push
icebp
push
imul
dec
movs
mov
popf
jns
mov
xlat
aam
repz
dec
sbb
pop
lds
ins
xchg
in
add
mov
ror
sub
push
icebp
loope
and
jecxz
push
xlat
mov
call
cld
outs
gs
out
fist
sub
dec
stc
inc
xchg
ss
int
rcl
adc
mov
push
and
daa
movs
xor
xchg
lea
xchg
adc
pop
dec
xchg
ins
adc
mov
repnz
imul
movs
push
or
out
adc
add
adc
int3
fnstsw
adc
ret
call
cli
mov
pop
popf
nop
lods
cvtps2pd
test
jne
pop
stc
test
cmps
sub
jmp
in
jmp
xlat
(bad)
call
lds
push
xlat
es
mov
movs
mov
dec
cli
xor
mov
push
dec
neg
in
imul
dec
sub
in
and
and
pushf
xor
jae
imul
jmp
call
adc
(bad)
pop
aam
push
cmp
gs
shl
sub
or
mov
enter
inc
stos
enter
mov
sbb
out
dec
stos
test
cld
sbb
pop
rcr
fisttp
adc
and
mov
dec
adc
inc
jmp
stos
jnp
push
call
mov
out
dec
test
mov
inc
pop
ret
jbe
pop
cwde
pop
dec
dec
adc
popf
ins
xchg
test
out
jge
(bad)
stos
fdiv
daa
aaa
cmp
add
daa
adc
dec
pop
test
je
lds
fs
ret
in
sub
dec
inc
push
loopne
les
mov
in
or
outs
dec
ret
cmc
and
mov
jmp
repnz
hlt
outs
adc
cmp
jns
adc
into
mov
mov
arpl
push
imul
dec
mov
or
out
iret
aad
mov
sbb
inc
mov
sub
xchg
clc
mov
daa
ja
(bad)
nop
inc
mov
ret
mov
jge
cli
adc
sbb
test
das
xchg
js
loopne
iret
(bad)
jle
out
and
lock
call
xor
lock
mov
ins
jmp
push
shl
lahf
fmul
push
cli
repnz
cmps
rcl
imul
ror
movs
xor
jmp
or
(bad)
repnz
mov
xor
add
mov
mov
sahf
add
and
fld
or
dec
mov
mov
ficom
mov
rol
mov
fdiv
xchg
in
aaa
mov
hlt
mov
inc
inc
sbb
mov
cmp
and
mov
dec
push
dec
dec
fwait
push
inc
jne
push
sbb
mov
sahf
daa
mov
lahf
popa
or
int
out
(bad)
add
mov
adc
jmp
pop
mov
cmp
cmp
rcr
mov
xchg
fs
mov
push
fstp
dec
adc
fwait
pop
fidivr
sti
daa
scas
cmps
jns
cs
fs
in
gs
dec
(bad)
jo
ficomp
in
pop
int
mov
call
push
test
cmc
pop
in
nop
jg
xchg
xor
or
sbb
fild
inc
repnz
adc
mov
std
ja
out
popa
mov
fild
cdq
inc
or
push
cdq
jp
push
add
mov
sbb
cmp
sbb
adc
mov
movs
movs
rcr
mov
sbb
push
jae
ins
enter
pop
iret
loopne
jno
jb
mov
cmp
mov
out
js
inc
call
out
pop
jge
stc
xchg
(bad)
gs
adc
cmp
int3
dec
pop
retf
bnd
push
xor
sbb
out
repnz
ss
sbb
sub
fsubp
das
cld
cdq
loop
push
lods
inc
mov
in
ja
push
(bad)
or
cld
daa
mov
lods
cli
adc
xchg
bound
jmp
mov
mov
cdq
test
push
repnz
ret
push
int3
ret
inc
inc
ficomp
or
fidiv
push
xlat
mov
arpl
and
jecxz
xor
test
(bad)
push
gs
sbb
sbb
and
out
jno
mov
cli
xchg
cmp
pop
test
mov
(bad)
cmp
(bad)
push
ins
call
xchg
in
cmp
pop
and
or
pop
mov
xor
mov
xchg
inc
movs
mov
jbe
jno
or
fdiv
pop
cwde
nop
push
cdq
jnp
dec
push
leave
daa
push
jnp
outs
jne
mov
stc
pop
icebp
jge
mov
lock
add
mov
pop
nop
dec
push
mov
jbe
mov
mov
jb
cmp
sar
popf
shl
jae
or
out
add
push
or
dec
cmc
retf
(bad)
fistp
cmp
cmp
push
pop
pop
mov
shl
int3
mov
rcr
movs
add
sub
mov
call
or
add
inc
pusha
shr
mov
sbb
mov
in
sub
fwait
mov
stos
pop
add
jle
inc
pop
arpl
add
pop
shl
sub
fisttp
pop
adc
mov
ins
js
(bad)
fucom
sub
retf
xchg
mov
xor
push
daa
add
mov
mov
xchg
and
push
xchg
mov
sbb
xchg
cdq
ror
push
(bad)
ja
and
pop
inc
sbb
sbb
xlat
jne
cwde
mov
push
test
(bad)
and
jle
mov
cmp
xchg
cli
mov
cmp
jmp
movs
(bad)
sbb
mov
daa
(bad)
into
mov
push
iret
cli
mov
rol
dec
aaa
dec
jecxz
outs
sbb
and
ja
hlt
in
jmp
push
add
jns
rol
loop
pop
inc
fcmove
and
xor
aas
push
lock
jmp
dec
hlt
outs
jne
xchg
add
and
jl
mov
add
jle
mov
xor
(bad)
xor
fwait
in
and
jmp
inc
gs
mov
lods
pop
pop
imul
je
dec
mov
xchg
xchg
inc
in
(bad)
mov
pop
in
fistp
jne
dec
pop
adc
xor
sar
shl
or
dec
or
add
(bad)
cmp
and
mov
out
mov
add
mov
fiadd
test
mov
pop
or
daa
or
ja
stc
sub
outs
in
(bad)
int
lea
jnp
mov
pop
stos
ret
stos
add
push
pop
adc
mov
rcr
ins
mov
push
cli
lods
nop
pop
lea
mov
mov
jmp
dec
xchg
mov
sbb
pop
mov
lock
cdq
mov
add
inc
dec
pusha
push
aas
out
fs
fwait
sar
add
(bad)
and
leave
out
adc
out
ds
test
mov
add
arpl
aaa
cmp
fldenv
and
loop
in
cs
xchg
shl
ins
loopne
repz
loopne
sar
xlat
pusha
mov
out
cmps
test
mov
sbb
xlat
jg
or
repnz
inc
jbe
jmp
ss
jmp
sbb
lods
mov
or
and
cmp
xchg
leave
ins
jno
push
test
adc
icebp
xchg
pop
neg
sbb
fmul
dec
dec
add
fcom
add
test
pop
test
stos
in
push
push
dec
sbb
xor
inc
repnz
test
gs
or
cmp
aas
push
out
ins
add
jbe
mov
dec
dec
mov
add
nop
call
jo
sub
pop
rol
sbb
jl
mov
sbb
mov
or
mov
icebp
int3
(bad)
cmps
daa
icebp
mov
loope
jmp
sub
inc
push
ds
inc
aaa
push
inc
into
popa
(bad)
jmp
jge
enter
sbb
pushf
and
and
push
fisubr
xor
inc
fs
pop
shr
pop
push
aad
lea
fimul
sub
push
stc
rol
fcomp
retf
int
ret
push
jne
or
xchg
gs
cdq
xor
stos
push
iret
push
movs
add
(bad)
dec
jg
pop
cli
(bad)
mov
mov
inc
mov
iret
pop
(bad)
fwait
inc
mov
xchg
jbe
pushf
push
jb
xchg
push
xchg
bound
test
icebp
mov
movs
jg
imul
lds
hlt
ds
jg
test
iret
and
call
sar
mov
cmp
out
call
and
das
xor
and
test
sbb
out
test
stos
xor
test
pop
pop
lahf
cmp
jecxz
inc
cmp
xor
inc
inc
fnsave
xchg
mov
in
mov
cmp
jge
push
jo
and
int
lods
sbb
outs
add
and
add
es
jmp
ins
into
arpl
sbb
push
jge
stos
fcom
test
fcmovnb
mov
popa
jo
(bad)
sahf
push
add
mov
mov
enter
inc
bound
shl
int3
dec
pop
lods
xchg
add
cmp
test
mov
sub
inc
call
adc
es
int3
test
inc
jbe
xor
mov
lea
int3
adc
sti
or
jmp
retf
add
lahf
mov
mov
xor
adc
xor
xlat
into
std
mov
fmul
push
add
js
inc
mov
jbe
sub
push
dec
rcr
mov
adc
je
pop
test
jecxz
jns
lds
adc
jns
dec
mov
lods
cmp
push
stos
push
add
sti
int
cmps
dec
stos
imul
and
mov
cs
jns
loope
das
inc
ret
xlat
fisttp
cmc
cmp
out
push
call
leave
push
xchg
sbb
outs
sub
push
xchg
sbb
adc
lds
adc
and
push
cmc
mov
cwde
add
mov
fidiv
pop
andps
int3
or
mov
fisub
imul
fsqrt
ret
call
push
pop
mov
jecxz
int
ins
movs
push
jb
das
cmp
pop
ins
cwde
sbb
cmps
ss
repnz
std
push
pop
and
cmp
loop
outs
sti
fwait
ror
lods
inc
(bad)
sbb
ror
pop
(bad)
enter
lock
cld
js
xlat
or
test
cdq
xor
mov
icebp
inc
xor
inc
jecxz
inc
add
inc
ror
ja
aas
dec
adc
mov
test
pop
leave
rcr
mul
int
sub
xchg
inc
mov
jmp
or
pop
mov
push
sbb
loopne
es
cmp
out
out
adc
(bad)
mov
idiv
pushf
test
enter
add
push
push
sub
pop
xor
cmp
xor
sub
sub
mov
xchg
dec
loope
frstor
lock
aas
adc
mov
std
cmc
sub
aas
icebp
pushf
je
retf
pop
sar
mov
jno
xor
out
jno
mov
push
inc
stc
jb
ja
jg
(bad)
jge
pop
and
rcr
push
add
push
int
(bad)
not
and
inc
cmps
inc
addr16
mov
mov
push
and
dec
rcl
imul
xchg
mov
and
sbb
aad
out
inc
fwait
shl
call
mov
(bad)
out
mov
ret
pop
bound
cmps
cdq
fist
test
jmp
xchg
jo
pop
xor
and
xlat
fldpi
lahf
mov
(bad)
xor
dec
mov
out
retf
mov
rol
lock
lahf
sbb
fimul
fs
test
aad
cli
pop
jg
inc
xor
jle
cmp
mov
and
adc
stos
pushf
jno
jl
fild
iret
dec
mov
adc
loop
aaa
jle
shl
add
jle
sub
dec
jno
int
dec
jg
push
push
lea
gs
xchg
mov
mov
push
xchg
ror
inc
loop
lahf
lods
scas
sub
or
ins
xchg
adc
push
dec
stos
sahf
and
in
mov
(bad)
fimul
mov
rol
outs
lea
imul
jno
(bad)
sti
lea
mov
aaa
out
pusha
out
out
xor
jmp
pusha
pop
jns
jns
mov
in
jmp
in
cmp
jmp
aam
rol
call
arpl
sbb
cmps
stos
rcl
nop
lods
xchg
jmp
aad
jb
ins
pop
fisub
test
xor
clc
dec
and
(bad)
pusha
sbb
cmp
(bad)
cld
(bad)
xchg
jmp
jbe
shl
call
mov
sbb
std
retf
(bad)
mov
fwait
mov
ja
mov
scas
or
pop
rcr
push
iret
cmps
cmps
in
ins
hlt
push
ret
fs
mov
jl
rol
or
inc
arpl
mov
pop
xchg
pop
(bad)
aam
in
lods
iret
fdivp
xor
div
jmp
sbb
adc
jl
cwde
push
adc
cld
jo
movhps
jle
and
sar
sbb
and
dec
icebp
mov
pop
jge
in
mov
sar
out
test
mov
push
addr16
mov
test
xor
fadd
in
sbb
cli
mov
sub
lahf
ins
inc
inc
push
or
or
xor
mov
cdq
jle
(bad)
ror
mov
fisubr
ins
cmps
mov
ret
dec
xor
iret
je
xor
push
das
int
lods
adc
dec
iret
jge
out
ret
or
jecxz
test
inc
jne
inc
pop
mov
push
cmp
sbb
inc
adc
call
pop
jb
adc
cmp
jmp
xchg
adc
int3
adc
shr
repz
stos
cli
xor
nop
dec
and
sahf
inc
pop
adc
mov
xor
pop
mov
sbb
aam
mov
fld
push
stc
stos
mov
fidiv
nop
imul
xor
mov
movs
outs
and
loop
call
sub
repz
nop
fst
xor
push
push
add
pop
mov
jp
mov
jecxz
leave
mov
out
xor
adc
pop
add
fdiv
fiadd
loop
call
idiv
push
jne
pop
dec
adc
jmp
fimul
xchg
push
mov
sbb
jle
out
icebp
xchg
std
pop
inc
xor
mov
out
(bad)
daa
shl
cmp
mov
lea
sbb
in
and
stos
xchg
imul
ins
or
xchg
lds
idiv
mov
jmp
jmp
cmps
pop
jns
out
dec
arpl
movs
mov
cld
pop
aas
push
fwait
ror
adc
mov
jle
out
mov
mov
in
jecxz
ret
data16
test
(bad)
lea
ret
push
push
int
call
or
in
xor
mov
test
fist
sub
sbb
mov
mov
sub
cld
push
scas
gs
jne
jae
shl
les
inc
es
jbe
pop
pop
les
pop
das
cmp
sbb
dec
jle
inc
imul
iret
jecxz
jge
add
sbb
repnz
or
stos
dec
ret
inc
ins
or
in
mov
(bad)
fdivr
fwait
push
xor
(bad)
mov
fcmovnu
and
retf
pop
push
mov
push
in
les
push
sub
adc
and
xchg
in
mov
xchg
test
leave
shl
in
mov
push
pop
fwait
aas
adc
add
jge
mov
jne
into
jmp
icebp
add
mov
repz
sub
pop
mov
mov
int
pop
or
out
movs
outs
daa
sub
ss
add
imul
(bad)
std
mov
xchg
cmps
out
jnp
addr16
cmp
nop
mov
mov
je
(bad)
mov
jnp
push
xor
ret
fmul
in
mov
mov
rol
xchg
jns
scas
jo
add
cwde
aas
out
xor
pushf
sub
lock
sbb
gs
outs
or
or
aaa
mov
jg
ret
jmp
sub
xchg
xchg
mov
adc
dec
jnp
pop
adc
fcmovnbe
lock
and
pop
sbb
jb
out
fwait
pop
icebp
repz
jne
loope
mov
lods
dec
or
add
or
ja
fs
push
sbb
test
cs
add
mov
pop
mov
mov
jle
and
and
sbb
popa
sub
mov
mov
or
daa
lahf
xchg
adc
cmps
sub
xchg
adc
aad
(bad)
dec
out
loopne
jecxz
retf
and
xchg
xchg
loope
push
cwde
sbb
test
mov
scas
jbe
sub
sbb
stc
push
icebp
es
enter
pushf
loope
sbb
outs
iret
leave
out
mov
xlat
cmp
int3
pop
arpl
dec
pop
inc
sahf
fucomp
sbb
test
pop
ror
and
test
inc
dec
pop
adc
jl
add
ret
out
mov
adc
adc
inc
mov
xor
add
(bad)
or
(bad)
push
mov
jmp
sbb
jp
mov
lods
sbb
fmul
add
dec
mov
aad
mov
leave
mov
pop
or
adc
fbld
and
fnsave
jmp
data16
fmulp
mov
retf
add
inc
lds
inc
pushf
xchg
mov
mov
scas
aas
mov
and
xchg
sub
or
jmp
imul
dec
sub
xlat
aad
int3
outs
and
or
call
shl
cmp
cmp
retf
imul
cmp
jecxz
push
push
sbb
xchg
aas
mov
xchg
mov
cmps
pusha
inc
inc
jb
mov
fwait
outs
mov
pushf
scas
stc
cdq
iret
and
movs
or
or
imul
fcom
or
shl
fdiv
cwde
pop
and
add
xchg
aas
mov
sub
enter
inc
sub
cmp
dec
clc
pop
adc
inc
nop
hlt
fadd
jge
sti
dec
adc
fdivp
and
xor
pop
mov
(bad)
push
rcr
push
retf
js
mov
daa
jmp
ds
mov
arpl
xchg
push
pop
mov
lahf
sbb
xchg
mov
add
mov
movs
xchg
daa
sbb
sbb
sbb
dec
repnz
ins
and
hlt
into
jecxz
fstp
xchg
fiadd
mov
call
scas
rcr
mov
test
mov
inc
sbb
adc
pop
or
call
adc
or
xchg
sbb
add
adc
into
push
lods
ja
xlat
imul
xor
and
jle
in
ret
inc
sub
mov
push
(bad)
ds
or
outs
pop
popf
add
(bad)
pop
inc
jle
mov
rcl
(bad)
(bad)
sar
lods
pop
pop
mov
mov
stos
inc
js
inc
ds
mov
push
ins
and
rcl
jnp
xchg
dec
cmp
sbb
stos
out
mov
ret
cmp
cmc
lock
jo
(bad)
pop
pop
sbb
stc
ret
out
cld
jbe
fidivr
daa
test
dec
lds
sbb
cmp
push
adc
enter
mov
xchg
inc
enter
jbe
stc
cli
cmc
xchg
adc
mov
mov
or
repnz
addr16
lds
jb
dec
loope
push
xor
aad
rol
repz
jne
pop
xor
xor
addr16
mov
imul
and
cmps
mov
pusha
jl
sub
ins
scas
fcom
icebp
inc
cdq
push
int3
scas
ror
scas
mov
mov
das
ret
call
xchg
xor
add
cwde
call
jbe
das
push
stc
int
inc
rcl
xchg
pop
jnp
mov
and
gs
aam
mov
mov
lock
in
fs
mov
call
jne
inc
pop
lea
icebp
inc
pop
pop
out
data16
pop
sahf
(bad)
cmps
cs
fnstcw
nop
ror
jg
fisubr
stos
inc
inc
xor
push
cmp
retf
test
push
cli
cmp
shr
outs
xor
rcr
mov
int
(bad)
rcl
adc
lods
or
(bad)
jae
les
xor
repnz
mov
add
loope
int3
and
fld
sub
sub
(bad)
je
shl
add
stos
dec
ds
clc
sti
mov
out
dec
test
sbb
sar
cmp
fistp
test
inc
lock
movs
add
loop
dec
adc
out
mov
(bad)
mov
sub
out
mov
add
or
dec
test
es
mov
test
ret
xor
pop
mov
pop
aad
test
nop
pushf
je
jmp
and
pop
enter
(bad)
mov
dec
mov
add
inc
cs
cmps
mov
movs
sbb
dec
pop
adc
jne
fsub
cmp
fistp
push
inc
aas
in
sbb
(bad)
and
call
jp
lock
sar
call
sbb
adc
inc
sub
mov
jecxz
fstp
aam
fs
and
cli
push
inc
adc
jle
(bad)
jmp
mov
dec
pop
push
jp
ins
push
loope
mov
outs
jl
sub
iret
lods
push
stos
outs
and
out
or
out
jmp
sbb
loope
cmp
rol
xor
sbb
fcom
call
lods
call
div
push
sbb
add
outs
pop
nop
cld
adc
test
xchg
lea
lods
aas
popa
dec
cmp
fst
call
(bad)
jb
xor
dec
mov
push
(bad)
sbb
imul
call
cli
fmul
out
shl
fsub
ins
rol
iret
ret
add
mov
aaa
(bad)
std
mov
sub
imul
nop
popa
pop
jo
in
stc
inc
adc
test
add
int
or
stos
push
and
daa
jo
xor
inc
scas
call
hlt
(bad)
and
cmp
xchg
jb
repnz
mov
sbb
test
(bad)
idiv
cmp
das
inc
test
xchg
fdiv
test
ins
loopne
es
fwait
cmp
mov
adc
test
(bad)
xchg
imul
jb
aam
std
nop
test
or
and
adc
ffreep
clc
adc
dec
(bad)
sbb
leave
mov
fs
in
pop
pop
inc
push
cmp
push
sahf
mov
xchg
xchg
xchg
sbb
add
or
pushf
cmps
imul
fcom
ja
nop
and
dec
aad
loopne
cmp
jno
ins
ins
fsub
cmp
and
aad
sub
push
and
call
hlt
outs
mov
or
mov
pop
mov
pusha
pop
lods
xchg
(bad)
(bad)
fisub
adc
sub
dec
jge
test
in
or
adc
ss
sbb
movs
popf
push
cmp
mov
aam
adc
xchg
push
mov
sub
das
repz
mov
outs
in
sub
jle
push
or
and
imul
pop
adc
mov
frstor
xchg
push
inc
test
xchg
add
add
add
mov
mov
retf
mov
in
movs
or
rol
loop
or
es
loop
lods
xchg
add
(bad)
jmp
inc
std
js
sti
push
enter
stos
out
mov
xlat
push
mov
sbb
sti
and
cmps
push
push
or
call
and
mov
push
adc
add
mov
pop
add
shr
sub
inc
test
ss
pop
cmp
rol
int
ss
cmc
mov
sub
cmc
cmps
mul
into
aaa
push
inc
shl
pop
mov
jno
push
test
cmc
lea
fdiv
mov
jno
stos
daa
and
pop
jbe
push
rcl
add
sbb
imul
cs
ficom
ins
pop
ds
pop
fdiv
lock
jecxz
inc
xor
fcomp
in
out
dec
gs
into
push
and
jp
out
xchg
popa
in
lods
enter
test
rcr
xchg
inc
daa
push
lds
pop
inc
sahf
jle
cmp
stos
imul
push
xor
and
addr16
retf
ret
fdivr
push
nop
daa
lea
adc
push
cdq
sub
lock
mov
gs
push
movs
cmp
mov
out
jg
imul
call
fdiv
adc
mov
outs
stos
add
jbe
daa
and
jg
pop
or
cmps
loopne
sti
aad
push
push
je
mov
repz
pop
imul
cmps
std
xchg
js
inc
xchg
gs
stc
popf
push
jmp
push
pop
shr
pop
les
dec
sbb
add
mov
pop
xchg
shl
loopne
popf
addr16
stos
xor
mov
mov
loope
pop
aam
sbb
sub
(bad)
lock
pop
aam
mov
jns
adc
outs
xor
ins
or
push
adc
pop
add
xor
sub
pop
xor
adc
add
sbb
xchg
daa
test
enter
ret
outs
pop
jae
mov
int
inc
imul
xchg
mov
push
test
and
xor
dec
xchg
clc
ins
add
arpl
cli
and
push
shl
inc
and
push
mov
or
(bad)
clc
aam
(bad)
xchg
retf
push
or
mov
xchg
shl
dec
fidiv
xchg
jecxz
sub
push
push
or
push
cmp
pushf
adc
cwde
fsub
call
retf
retf
pop
adc
fwait
addr16
dec
call
or
pop
popf
mov
int
dec
mov
mov
xor
in
lock
retf
pop
inc
sbb
and
in
and
push
adc
lea
pop
mov
mov
adc
adc
push
lock
test
cmp
push
pop
sbb
fisubr
pop
or
je
ror
jge
ftst
or
aaa
imul
jbe
inc
push
push
inc
fwait
out
cmp
mov
push
xor
out
out
out
enter
or
pop
jno
jmp
in
xchg
imul
sbb
sub
fucomip
adc
out
cmps
and
lods
jge
jbe
add
retf
sbb
icebp
or
push
or
pop
jns
mov
jne
inc
shl
into
ins
shl
adc
adc
retf
mov
inc
inc
(bad)
jmp
xchg
pushf
and
sti
add
push
push
in
adc
bound
ret
dec
and
mov
xchg
loopne
repz
xor
and
test
pop
aad
mov
mov
ret
aad
jo
pop
ror
xor
mov
out
mov
xor
jl
(bad)
add
mov
jnp
mov
jnp
cdq
or
mov
nop
in
add
xchg
xor
push
idiv
jmp
in
call
dec
imul
pop
inc
pop
mov
xchg
xor
call
dec
std
cmc
test
and
nop
sbb
push
cwde
pop
fist
lahf
xlat
xor
imul
push
outs
push
je
aam
add
xor
mov
jnp
xchg
push
popa
pop
cmp
cmp
jp
mov
ret
mov
fs
push
rcl
jns
cdq
mov
adc
push
ret
daa
jns
ret
mov
mov
push
mov
add
cmp
pop
mov
movs
test
jmp
mov
out
repz
mov
mov
jbe
lock
sub
mov
adc
iret
xchg
and
std
push
dec
mov
out
dec
jnp
xor
mov
mov
(bad)
ss
xchg
ret
add
sbb
fs
mov
add
jg
imul
popa
push
test
shr
out
imul
add
sbb
call
fisub
dec
aas
fstp
add
xor
ret
push
cwde
pmaxub
test
add
fwait
nop
jae
push
mov
aad
push
sbb
dec
leave
addr16
mov
ds
sub
jo
mov
aad
fldenv
les
ret
ror
inc
imul
xor
test
fwait
pop
call
test
lahf
mov
lahf
leave
dec
loopne
in
test
mov
inc
push
ins
add
test
push
rol
aam
mov
in
push
es
into
movs
or
ficom
test
or
add
jae
push
loope
inc
mov
nop
pop
and
or
test
inc
mov
cli
cld
or
jge
ds
cwde
inc
adc
mov
jmp
imul
dec
stc
daa
cmp
xor
les
pop
xchg
cmp
push
sbb
adc
lods
fwait
mov
arpl
cwde
lds
push
inc
push
ss
xchg
fucomi
mov
cld
mov
pop
jo
mov
(bad)
push
ja
pop
scas
inc
dec
or
aam
int
out
cmp
push
ret
out
les
push
mov
fst
add
push
popa
and
push
iret
xchg
ret
loope
(bad)
and
dec
add
ins
pop
lods
jmp
inc
mov
pusha
xchg
fstp
popf
loop
sbb
clc
test
sbb
mov
mov
xor
add
pop
mov
gs
mul
push
imul
leave
jb
rcr
int3
and
adc
popf
dec
inc
sub
(bad)
popa
push
sbb
add
dec
movs
std
sbb
dec
shl
dec
aad
adc
in
xchg
push
xor
out
out
mov
xchg
xor
mov
(bad)
xchg
lds
push
and
(bad)
mov
pop
fxch
test
cmp
leave
adc
outs
fs
inc
in
out
pop
push
rol
and
mov
mov
cwde
jae
push
shr
sub
adc
dec
out
adc
and
pusha
movs
in
cmp
jmp
(bad)
mov
sar
jo
mov
out
xchg
xlat
add
sub
aam
cmp
rcr
jmp
xor
test
ins
(bad)
cmp
lock
dec
and
mov
inc
mov
or
ret
sub
retf
push
sub
cli
sar
jb
xchg
adc
pop
or
jb
sbb
pop
into
bound
pop
mov
lock
loope
and
pop
xor
out
mov
ss
and
test
sub
or
mov
repz
mov
in
in
jge
jp
outs
scas
sti
xor
xor
dec
push
inc
pop
add
jmp
cdq
push
(bad)
xor
inc
jle
fsubp
xor
dec
test
push
and
std
or
test
daa
(bad)
pop
push
data16
leave
ror
or
(bad)
dec
add
sbb
test
mov
add
test
lods
inc
mul
scas
fst
xor
mov
cwde
sbb
push
inc
test
sub
enter
cwde
pop
mov
inc
daa
mov
pop
dec
mov
inc
inc
push
pop
jb
popf
ins
mov
repz
add
add
cmp
retf
shr
jmp
(bad)
lock
xchg
pop
sbb
out
jae
xor
mov
jno
jbe
and
fldln2
push
push
daa
scas
add
retf
adc
jno
ja
mov
xchg
xchg
sbb
ja
mov
fwait
(bad)
push
pop
push
adc
call
idiv
dec
xchg
cmp
movs
push
and
out
dec
or
outs
sub
bound
scas
push
push
lods
mov
sub
test
adc
lahf
sub
cs
xor
add
cmp
in
cli
in
repz
push
lods
and
nop
ret
rcr
adc
enter
(bad)
iret
jecxz
cwde
mov
pop
push
or
xchg
jmp
sub
xor
test
pusha
nop
push
leave
data16
rcl
xor
outs
or
pop
sbb
mov
ss
inc
test
xchg
adc
adc
cmp
inc
fs
dec
xor
scas
out
add
bound
stos
and
lock
loopne
adc
xor
xlat
mov
nop
xchg
and
and
jnp
mov
xchg
xchg
dec
sub
arpl
clc
mov
inc
(bad)
xchg
fidiv
adc
sub
jmp
mov
test
mov
es
movs
je
inc
jae
cmps
rol
aam
lds
inc
mov
sbb
sub
(bad)
mov
push
push
movs
fisubr
test
push
test
test
out
add
(bad)
cmps
das
cs
jnp
mov
sahf
xor
push
stos
inc
mov
pop
repz
nop
and
pop
pop
mov
addr16
(bad)
inc
mov
stc
and
popa
ficom
xchg
hlt
mov
push
inc
or
in
std
and
(bad)
jmp
dec
pop
ins
mov
adc
fild
pop
in
iret
cld
push
pop
call
(bad)
or
push
daa
xor
pop
xchg
sub
push
in
mov
jp
hlt
mov
add
mov
and
mov
sbb
imul
loopne
xchg
sub
in
ins
or
and
sbb
in
cmp
push
cs
sub
mov
pand
daa
cli
(bad)
nop
inc
jmp
pop
and
or
aas
aas
repnz
shl
push
pause
shl
inc
arpl
stos
mov
in
mul
add
pop
retf
xor
cmps
mov
jnp
jg
pusha
mov
mov
xchg
push
addr16
(bad)
mov
push
loopne
mov
pop
mov
or
pop
imul
xchg
arpl
imul
adc
mov
push
pop
adc
mov
and
cmp
sbb
jnp
push
in
out
pop
mov
sar
xchg
pop
sbb
xchg
inc
out
mov
push
sbb
(bad)
fsubr
icebp
mov
lahf
add
dec
js
mov
mov
sbb
mov
shl
and
cmps
push
jmp
dec
fist
inc
or
aad
push
inc
cld
lods
imul
outs
nop
mov
fild
lods
xor
pop
xor
and
pop
retf
push
xor
adc
test
hlt
ret
in
dec
mov
dec
mov
sub
aas
cwde
fadd
or
mov
loope
repnz
and
mov
jmp
loop
adc
push
add
mov
and
push
lock
jmp
xor
adc
add
daa
mov
xor
pop
in
sbb
je
clc
or
mov
fistp
xchg
sar
mov
cmps
mov
or
pop
mov
push
mov
pop
mov
cli
mov
push
pop
call
xor
push
and
or
(bad)
ins
xchg
push
push
cmp
sbb
mov
jp
pop
rcl
xor
daa
xlat
and
sbb
dec
jmp
icebp
scas
cmp
sbb
packssdw
jb
cmps
inc
cmps
fs
pop
ins
pop
shr
mov
push
and
fldenv
xlat
sub
cmp
mov
aad
leave
or
cs
or
lahf
xor
mov
data16
jne
sbb
cs
idiv
inc
test
adc
retf
jb
nop
in
jmp
aas
pushf
jge
test
add
mov
div
mov
nop
sub
dec
les
bound
push
and
pop
paddusb
sbb
mov
xor
clc
inc
xor
push
fsubr
mov
mov
inc
ds
or
sahf
lods
or
inc
mov
(bad)
(bad)
ss
(bad)
shl
jo
retf
loope
jo
sub
xchg
mov
shl
scas
cdq
loopne
dec
inc
ret
jl
mov
or
mov
sbb
add
(bad)
fnstsw
dec
outs
jb
mov
in
call
lods
or
sbb
cmp
gs
inc
sub
shr
(bad)
out
push
fild
jecxz
test
cdq
cmps
mov
ss
or
call
jmp
fcmovb
ds
jmp
sub
loopne
xlat
int3
icebp
adc
imul
inc
xor
cmps
mov
movs
ins
cmp
push
or
leave
test
adc
dec
or
jmp
mulps
dec
push
push
mov
add
scas
jne
add
xchg
sub
jge
adc
xlat
ret
add
out
cmp
and
lds
jnp
jne
aad
lahf
xor
and
xchg
rol
adc
jecxz
iret
movs
jmp
jne
rol
adc
(bad)
(bad)
sub
cdq
mov
out
mov
xchg
mov
and
push
sub
call
lock
jae
pop
sub
push
test
mov
xchg
mov
movs
pop
sahf
mov
jmp
xor
mov
and
repz
cdq
add
inc
xor
repz
je
push
mov
add
xchg
popa
std
mov
xchg
iret
pop
xchg
jmp
movs
movs
xchg
repz
or
(bad)
inc
jnp
mov
bound
and
out
xor
loop
out
aas
scas
xchg
sub
mov
outs
add
scas
and
pop
cmp
push
sbb
mov
mov
fild
rcl
ret
out
inc
jge
add
in
mov
cmc
clc
xchg
jo
dec
xchg
iret
imul
xor
sbb
add
and
add
pop
cmp
adc
sub
ja
enter
adc
(bad)
jb
and
dec
mov
sahf
xor
jne
mov
sub
pop
dec
sbb
loope
mov
rcl
dec
sub
sub
push
push
enter
imul
imul
test
pop
arpl
movnti
pop
mov
xor
push
push
aad
inc
repz
sub
and
pop
inc
out
xor
dec
imul
std
jecxz
push
push
movs
cmc
and
add
lock
xchg
loopne
sbb
movs
sti
jmp
inc
jp
mov
adc
loopne
call
pop
movs
jbe
call
dec
jns
mov
mov
add
out
aad
aas
pop
inc
add
popa
ret
mov
push
imul
ja
add
scas
mov
dec
sbb
jae
push
mov
(bad)
jno
ficom
loope
les
fs
aas
add
or
sub
xor
ror
mov
dec
jno
sub
cwde
fs
outs
push
xor
stos
rcpps
mov
mov
mov
mov
and
mov
neg
and
push
dec
sbb
inc
fs
xchg
xor
inc
mov
mov
dec
loop
sti
rol
fnstsw
sub
sahf
cmp
xchg
in
sub
pop
sbb
or
lea
dec
cmp
int3
inc
push
push
test
sti
scas
and
and
out
mov
leave
aad
outs
inc
xchg
inc
(bad)
cli
ret
stc
imul
add
data16
cwde
cmp
jmp
scas
pop
out
loopne
pop
adc
out
leave
cmp
movs
or
pop
cld
ds
dec
aaa
xor
xchg
fucomi
hlt
cmp
and
xchg
imul
ins
cmp
adc
jbe
(bad)
cmp
mov
jne
hlt
mov
in
clc
inc
pop
dec
bound
cmp
sub
in
shl
dec
mov
fldcw
inc
(bad)
stos
movs
nop
fsubr
jl
mov
mov
xchg
xor
loop
jecxz
and
add
ja
xchg
and
mov
lods
adc
push
push
xor
pop
sar
add
aaa
fwait
pop
mov
sbb
repz
rol
mov
xlat
inc
outs
test
ss
fdivr
cmp
pop
xchg
jle
dec
pop
push
out
icebp
mov
popa
fxch
outs
push
(bad)
fimul
into
xchg
lods
ficom
into
dec
pop
hlt
cmp
stc
cmp
jb
gs
mov
(bad)
dec
xchg
push
or
cs
dec
dec
sar
push
mov
arpl
jno
or
addr16
push
sub
popf
leave
ror
shl
and
fsubr
pop
jmp
and
or
ret
push
fadd
cld
or
push
push
dec
ins
ins
xchg
jns
sbb
add
test
sub
jae
mov
cli
call
or
xchg
arpl
ins
icebp
loop
ret
mov
mov
mov
push
ret
push
jge
mov
add
jbe
xor
lahf
lods
mov
outs
cdq
cld
aam
jnp
xchg
xchg
in
outs
mov
and
and
das
push
and
cdq
leave
test
mov
ror
jo
in
or
add
push
lahf
mov
sahf
lock
and
leave
inc
nop
je
dec
outs
stos
std
js
push
dec
rcr
pusha
fdecstp
in
ins
sbb
int3
or
sahf
fld
cmp
movs
inc
repz
pop
cmp
test
add
sub
and
(bad)
call
bound
xchg
or
mov
dec
xor
pop
fmul
sub
mov
cmps
adc
dec
ins
ja
mov
push
adc
and
out
xor
mov
(bad)
jmp
sub
sbb
sti
js
jbe
and
push
jl
sti
pop
or
mov
xchg
jns
fisttp
mov
stos
sbb
or
neg
cmps
fild
jae
(bad)
or
cld
xchg
xlat
fcmovnbe
inc
or
jns
mov
fs
mov
jg
inc
shl
inc
dec
ins
sub
push
test
jmp
stos
mov
lock
xchg
pusha
inc
jae
js
sub
add
pop
or
retf
outs
lds
stos
in
sti
outs
jge
inc
or
les
pavgb
push
inc
shr
dec
xor
mov
mov
rcr
pop
addr16
push
dec
div
xchg
cmp
push
mov
jle
into
mov
test
cmp
in
lds
sub
adc
pop
out
push
or
fild
dec
xchg
xor
xchg
mov
not
xchg
out
mov
fidiv
push
jl
xor
addr16
push
gs
fnstenv
xor
mov
out
test
lock
xor
sbb
jae
ret
out
enter
mov
pop
sub
xor
pop
scas
or
fcomp
xchg
sti
dec
adc
fwait
outs
aaa
sahf
and
mov
jns
and
xor
sub
int3
outs
jmp
push
sbb
ret
ftst
(bad)
push
es
ja
int
cdq
cmp
es
jno
mov
aas
aam
xchg
jnp
push
or
xor
xor
jo
fmul
sti
cmps
pop
add
not
sub
fstp
mov
inc
leave
xor
mov
jno
add
mov
mov
loope
lea
ins
push
adc
push
xchg
dec
and
div
push
pop
jge
mov
xchg
fisttp
or
sbb
xchg
and
aas
inc
jmp
mov
add
ret
(bad)
cmp
pop
clc
or
div
mov
sub
sub
cs
xchg
jle
pop
fs
rcr
push
cld
xor
fnstcw
gs
cmp
push
test
push
fisttp
jle
dec
add
call
mov
int3
sahf
cmps
or
push
mov
shr
fbstp
hlt
xchg
aad
dec
cmps
xor
hlt
jl
movaps
mov
jl
data16
mov
mov
jecxz
enter
xor
pop
mov
pop
xor
jmp
dec
psubb
popa
and
into
imul
pop
mov
mov
(bad)
mov
mov
mov
fdivr
call
popf
gs
dec
xor
loopne
mov
ja
sub
aam
dec
or
pop
sub
push
retf
add
mov
lahf
addr16
mov
add
int
xor
fs
pop
rcl
xchg
push
jl
in
and
movs
outs
mov
pop
or
mov
push
mov
icebp
and
mov
lods
jp
and
pop
xchg
add
ror
leave
loope
xchg
daa
or
jg
pop
clc
sbb
cld
xchg
mov
sub
jb
hlt
mov
mov
cmp
jns
fs
cli
imul
push
adc
scas
inc
loop
stos
add
pop
pushf
jns
in
xchg
mov
rcl
rol
ret
mov
push
cmc
test
sbb
dec
xchg
push
mov
ret
add
xchg
push
imul
movs
jne
sbb
cmps
fdivr
mov
pop
inc
iret
pop
mov
jne
cmps
and
lods
mov
xor
mov
xchg
mov
fnstcw
inc
inc
mov
cdq
enter
clc
push
jg
jae
mov
dec
das
aaa
mul
mov
mov
ret
aas
push
jmp
cli
cmp
rcl
imul
fdivr
jmp
stc
push
mov
call
xor
repz
das
ins
and
ins
dec
mov
and
push
inc
xchg
sbb
cld
sbb
sti
dec
stos
mov
sub
ja
cmp
cmp
adc
jg
pop
mov
or
addr16
pop
cmp
inc
sub
mov
xchg
call
mov
scas
mov
movs
fisttp
adc
retf
or
mov
aam
jl
pop
xor
push
adc
mov
shl
xchg
xchg
or
xor
push
jno
cmp
daa
mov
adc
lds
jmp
lock
mov
xor
and
pop
and
sub
mov
sub
mov
arpl
xor
mov
push
dec
out
iret
(bad)
(bad)
clc
add
cmp
mov
scas
jns
rcl
and
push
scas
jb
shl
ins
dec
cmps
fcom
stc
fs
outs
mov
push
mov
cmp
add
xchg
(bad)
stc
aam
mov
dec
push
mov
ror
pop
stos
and
adc
pop
loop
cdq
call
and
inc
mov
xchg
add
std
mov
scas
mov
imul
mov
call
addr16
out
call
adc
mov
scas
sub
ret
scas
or
xchg
stos
cmps
mov
dec
aad
xchg
pusha
cwde
or
fs
mov
sbb
ds
mov
mov
push
xchg
loope
ret
push
mov
xchg
add
pop
and
cdq
cs
icebp
retf
pop
jmp
and
call
leave
jmp
cmp
xchg
jl
xchg
aad
cmps
mov
jae
push
xor
test
sub
fmul
ret
fcomp
jecxz
xchg
xchg
push
xchg
xor
clc
sti
icebp
push
mov
js
cmps
jecxz
adc
ins
xchg
test
dec
cmp
adc
out
mov
adc
daa
inc
cdq
sbb
jno
movs
repz
push
xchg
div
(bad)
push
movs
jg
pop
and
cmp
push
push
jns
popa
(bad)
xor
scas
adc
lods
jo
loopne
xchg
call
sbb
push
les
push
xchg
call
ins
into
out
lods
mov
fisub
mov
jmp
test
movs
test
xlat
sbb
push
push
dec
jo
sub
test
jl
inc
sbb
or
mov
cmp
mov
or
int3
jno
ss
out
jmp
add
in
inc
xlat
in
es
cmp
jnp
jmp
ret
test
add
push
(bad)
in
and
ins
add
cmp
(bad)
dec
jae
fwait
dec
out
outs
ret
mov
js
jmp
bound
das
xor
stc
sti
cmp
cmps
punpcklwd
mov
pop
imul
mov
nop
jne
ins
cmp
xor
push
add
adc
int
(bad)
pop
test
cmp
loop
clc
pop
xor
sub
and
sbb
loope
(bad)
xor
adc
lea
mov
cmp
les
pushf
rcr
mov
clc
push
fnstsw
add
add
mov
add
cmp
mov
pusha
or
jb
add
aam
sub
adc
ins
adc
adc
and
add
and
in
jmp
pop
sti
xor
ficom
retf
adc
or
fcom
out
push
int
daa
loop
xor
sub
repz
in
push
pop
sub
outs
mov
mov
jmp
leave
ror
xor
pop
je
mov
mov
mov
xchg
and
inc
(bad)
jmp
das
pop
retf
push
and
push
push
jecxz
push
sub
adc
pop
mov
adc
cwde
out
or
fdiv
and
stc
inc
mov
dec
repnz
stc
mov
sub
in
lds
neg
pop
or
jmp
push
in
push
in
xlat
pusha
out
shl
and
or
jmp
popf
adc
fstp
mov
jp
popa
xor
sub
jo
jle
not
push
iret
std
popf
cwde
popa
push
push
movs
dec
push
adc
cmp
mov
cwde
fwait
sbb
cld
dec
js
xchg
rol
fst
xor
(bad)
ficomp
lods
leave
out
repz
inc
cmc
and
fcmovnu
push
ret
mov
xor
fwait
test
jge
mov
mov
add
and
int3
inc
out
jne
jmp
sti
out
add
mov
fmul
or
and
lock
inc
ja
adc
retf
mov
mov
sub
jg
xchg
mov
pop
jae
sbb
fidivr
push
nop
push
movs
(bad)
fcom
frstor
movs
mov
add
mov
int
sub
clc
sub
or
jae
repz
mov
sbb
mov
inc
sbb
adc
fiadd
mov
fadd
pop
inc
cmp
mov
push
jb
lea
jg
lock
add
mov
sbb
jg
test
mov
popfw
xchg
in
out
push
stc
test
xchg
inc
aad
pop
fist
mov
mov
out
cmps
dec
mov
jnp
rcr
loope
daa
add
test
and
imul
push
jae
sbb
fs
push
add
push
dec
mov
and
lds
pop
mov
imul
mov
inc
inc
movs
mov
clc
out
enter
(bad)
cmc
inc
adc
mov
jecxz
inc
push
sbb
cmp
sbb
movs
jnp
xchg
ins
imul
fistp
mov
loope
div
scas
movs
adc
sbb
sbb
or
sub
jmp
les
call
fnstcw
or
enter
or
push
mov
ret
movs
addr16
retf
jmp
aad
neg
out
mov
movs
pusha
cld
gs
inc
add
sti
int3
(bad)
or
retf
adc
mov
fild
push
pusha
jecxz
test
ror
cmp
or
in
jne
xchg
xor
or
push
or
test
adc
inc
fild
dec
xor
jl
mov
add
sbb
dec
sub
cmc
mov
jne
popf
in
add
lods
repnz
fwait
mov
jecxz
adc
mov
or
out
out
retf
bound
xor
push
dec
mov
cdq
pop
jg
push
out
mov
leave
fldcw
lea
push
inc
dec
jnp
mov
pop
shr
sti
and
mul
adc
aas
adc
cmc
push
pop
loop
xor
cmp
outs
mov
and
sahf
or
and
or
call
mov
in
cmp
scas
dec
jmp
cmp
pop
stos
mov
sbb
std
enter
aad
mov
(bad)
(bad)
popf
idiv
mov
push
sbb
cmps
scas
pop
jp
enter
adc
sbb
sahf
mov
js
or
jmp
int
jl
push
(bad)
xchg
jmp
aas
push
adc
xchg
arpl
sbb
loope
xor
retf
movs
sub
cdq
xchg
xor
xor
retf
(bad)
sti
fild
add
gs
pop
and
retf
sub
rcr
(bad)
jbe
sar
xor
leave
jnp
jge
and
fist
inc
ret
ja
fldcw
imul
popa
and
xlat
cmp
ins
cmp
mul
lods
retf
push
rcr
mov
cli
cmps
xlat
loope
clc
jbe
and
inc
lods
les
push
je
sub
and
aad
pushf
shl
push
inc
sbb
xor
or
aas
bound
clc
retf
jno
xchg
inc
adc
or
mov
pop
jecxz
mov
sub
ret
sbb
add
and
and
cmp
jmp
imul
jne
push
xchg
inc
add
mov
xchg
sbb
sub
hlt
sar
rol
sub
out
bound
(bad)
pop
cmps
or
retf
mov
add
stc
add
pop
into
mov
(bad)
mov
jo
sbb
xor
jmp
push
jns
mov
push
int
xor
loopne
sbb
es
shl
popa
pop
cmps
jo
stos
cld
neg
fidivr
cmp
enter
pop
jne
pop
mov
nop
sti
inc
aad
mov
mov
lods
inc
pop
add
push
jbe
fisubr
mov
pop
shl
in
mov
xchg
push
xlat
shr
adc
jle
xchg
add
arpl
test
push
aaa
adc
mov
in
shl
mov
pop
xchg
test
mov
inc
add
lahf
outs
lods
daa
inc
or
ret
inc
mov
mov
neg
xor
shr
inc
xor
dec
inc
jno
out
das
dec
and
fcomp
sub
lds
jge
imul
arpl
les
mov
cmc
push
mov
mov
mov
js
stos
inc
adc
lods
fldz
jmp
outs
loope
xor
cli
pop
dec
fs
xchg
enter
sbb
mov
adc
mov
mov
inc
adc
repz
mov
xchg
add
fidivr
cmp
call
pop
dec
cmp
sar
out
std
push
stc
add
call
pop
add
xchg
adc
daa
rcl
mov
outs
xchg
or
daa
pop
inc
sbb
mov
shr
int
xor
pop
lahf
xchg
xor
adc
lea
sar
cdq
jne
lds
fcomp
or
push
and
push
mov
lods
push
hlt
fdiv
ret
cmc
ss
cli
cmps
loope
leave
cmps
aad
lods
add
mov
or
scas
test
mov
adc
adc
inc
xlat
push
ins
ret
cmc
stos
jo
(bad)
push
jg
retf
imul
mov
pop
(bad)
push
scas
(bad)
js
jns
push
mov
adc
xor
push
mov
retf
call
jmp
test
ja
push
inc
popf
sti
sub
and
arpl
jmp
dec
push
push
fs
lea
sub
bound
mov
sar
add
mov
stos
sbb
test
cmp
mov
in
ret
jne
push
test
dec
adc
popf
test
iret
cmps
seto
out
movs
jns
les
add
mov
(bad)
xor
mov
popa
cld
xor
push
inc
test
xlat
and
mov
jmp
sub
adc
mov
or
or
xchg
call
jae
jge
jno
cmp
push
rcr
mov
sbb
aaa
dec
xchg
mov
inc
gs
fnsave
jp
idiv
pusha
aas
cdq
loop
ror
jmp
mov
or
dec
mov
and
sbb
les
xchg
out
jbe
cmc
movs
jmp
pop
fiadd
int3
jecxz
aam
fisttp
(bad)
sub
jmp
mov
jecxz
(bad)
jns
mul
out
pop
add
push
jno
iret
orps
mov
xchg
mov
or
in
(bad)
sbb
test
ds
dec
jne
sbb
or
(bad)
and
jl
loopne
(bad)
daa
fdiv
lahf
and
adc
mov
ror
or
xlat
jg
out
mul
rol
iret
mov
pop
shl
cdq
mov
int
mov
cmc
or
or
ss
jp
mov
and
push
push
rcr
cwde
adc
jg
nop
xor
adc
iret
fistp
lods
or
mov
bound
adc
outs
sbb
push
popa
sahf
gs
daa
repnz
inc
jo
inc
dec
cmp
stc
sub
xor
or
mov
or
loop
loop
or
jb
xchg
fsubr
cmp
retf
jmp
cmp
les
mov
test
xchg
retf
imul
xor
mov
or
and
and
adc
in
fsub
pop
addr16
cmovg
push
ret
sahf
mov
dec
adc
jns
cdq
cmp
jne
in
mov
mov
popf
mov
js
add
or
sar
dec
xor
mov
mov
sub
call
or
pop
xchg
je
pop
idiv
push
sar
fucomi
push
movs
cmp
cld
shl
out
jecxz
and
lock
iret
add
jb
and
les
cwde
dec
movs
ret
pop
dec
xor
mul
inc
ficomp
sahf
cdq
cli
adc
add
ret
fisubr
int
xchg
mov
mov
pop
aas
lods
pop
cs
xor
in
mov
push
cdq
inc
push
cwde
mov
mov
ins
sub
es
ss
add
ins
xor
mov
sbb
rcr
mov
test
adc
jno
cmps
aas
jge
jl
sar
cs
out
sbb
mov
mov
cmp
sar
retf
aaa
sets
jp
adc
push
adc
jb
mov
mov
jo
scas
out
jae
dec
arpl
into
dec
push
add
test
mov
sbb
and
cmp
mov
outs
ja
(bad)
leave
jbe
sbb
ds
gs
ficom
leave
out
popf
retf
bound
mov
int
sar
mov
nop
and
or
add
mov
mov
imul
mov
imul
imul
(bad)
sub
or
adc
cmps
aaa
jb
in
adc
jecxz
adc
push
sti
repz
xor
add
(bad)
mov
loop
mov
sub
jmp
mov
push
push
daa
and
add
add
loope
xchg
je
aam
jbe
lock
div
sbb
and
sub
pusha
stos
ret
pop
push
pop
jl
jl
xchg
daa
inc
fdivr
popa
and
or
mov
loopne
(bad)
jmp
cwde
test
fistp
push
or
dec
ins
sbb
leave
(bad)
xchg
inc
int
stc
mov
cmp
dec
and
sub
sub
push
stos
aas
adc
adc
inc
push
add
xchg
sar
(bad)
mov
jecxz
pop
inc
or
and
pop
adc
lahf
test
arpl
test
mov
add
push
push
fiadd
and
or
xor
xchg
dec
mov
sub
call
fld
lods
sti
not
push
push
cmps
ror
test
sbb
(bad)
rcr
xchg
not
push
pusha
mov
sub
sti
shl
test
lahf
xor
xchg
leave
ret
(bad)
add
inc
and
mov
call
scas
cmp
cmps
in
(bad)
xor
mov
dec
mov
fs
push
out
lods
add
or
jno
xchg
jb
mov
adc
inc
xor
mov
jbe
mov
popf
push
adc
repnz
jmp
or
push
repz
movs
imul
jl
fisttp
mov
int
sti
loop
fwait
inc
jmp
arpl
mov
add
push
sub
xor
pop
add
and
jle
xchg
jl
adc
pop
add
mov
jnp
cwde
sub
cmp
shr
stc
inc
shr
mov
push
cmp
repz
adc
mov
call
pushf
add
inc
repnz
inc
cmp
add
pop
mov
and
or
sub
out
pop
in
loopne
pop
push
sahf
mov
or
mov
imul
test
jge
enter
pop
std
sub
pusha
pusha
cmc
jns
and
dec
test
adc
push
fmulp
popf
inc
xlat
arpl
cmp
jmp
sub
adc
push
int3
test
je
cli
mov
aas
stc
xor
jl
lea
lock
outs
int3
clc
mov
imul
cdq
ins
adc
adc
adc
mov
int3
adc
mov
(bad)
mov
xchg
jne
stos
pop
(bad)
and
xor
shr
jns
nop
push
xchg
ret
pop
dec
mov
mov
fs
jae
xchg
scas
ss
addr16
outs
add
shr
or
mov
cmp
cld
loope
xor
popa
int
and
(bad)
adc
jmp
add
repnz
int3
es
(bad)
sub
div
jp
xchg
or
cwde
or
cmp
clc
dec
es
adc
(bad)
xlat
mov
dec
xchg
jne
(bad)
les
dec
cmp
inc
nop
sbb
loope
xor
add
cmp
add
sbb
aaa
cld
add
mov
test
xor
dec
(bad)
(bad)
mov
mov
jne
add
fwait
or
stos
(bad)
gs
lods
cwde
push
pop
ret
dec
nop
je
mov
scas
aam
nop
lock
push
or
ja
scas
call
jmp
cmp
inc
ror
mov
mov
inc
in
icebp
out
jecxz
push
pop
icebp
movs
mov
mov
adc
iret
mov
mov
dec
std
pop
aas
rcr
sbb
fidiv
push
mov
dec
adc
or
pusha
rcr
pushf
clc
repz
jl
out
inc
arpl
cmp
cmps
fst
pop
popf
xchg
das
mov
(bad)
inc
jg
jl
dec
lods
jnp
pop
jmp
gs
sbb
mov
push
sub
aas
mov
pop
repz
xor
jae
pop
cld
fbstp
ja
push
ss
lahf
loop
jmp
ror
lods
out
pop
test
add
std
gs
mov
jo
(bad)
xor
aaa
loope
cmp
dec
imul
gs
cwde
clc
push
dec
int
mov
cmp
mov
bound
repnz
xchg
in
rcr
jo
jg
imul
les
jbe
shl
or
(bad)
mov
or
add
hlt
out
test
sub
push
in
int3
and
sar
or
jbe
and
test
fldcw
mov
movs
setns
jno
cmp
stos
lahf
inc
movs
mov
pushf
cwde
adc
loope
movs
or
aaa
in
xor
clc
inc
and
test
dec
xor
arpl
push
cwde
push
fisubr
push
sbb
loop
or
fdiv
fistp
ret
xor
movs
xor
dec
cmp
int3
push
sbb
shr
xchg
iret
mov
pop
retf
sbb
mov
add
push
pop
jne
hlt
repz
push
stc
retf
inc
cmp
mov
out
(bad)
clc
and
in
adc
xor
push
scas
xchg
push
fs
sbb
pop
in
mov
clc
mov
in
neg
sub
mov
idiv
fadd
pop
fmul
lods
jo
aad
sbb
je
sahf
in
retf
ret
cmps
push
(bad)
rcr
lds
ja
xor
imul
lea
inc
and
retf
retf
mov
cmps
daa
pop
sbb
lods
mov
pop
loopne
dec
jbe
xchg
fld
outs
mov
xor
retf
cmp
or
imul
mov
leave
xchg
push
mov
sbb
xchg
or
fstp
ror
jns
xor
fidiv
ds
mov
push
adc
fidivr
or
mov
and
mov
push
mov
xchg
aas
fstp
js
push
sub
cmp
fistp
sar
or
mov
xchg
cmp
add
push
jb
or
jg
test
sbb
fsubr
stos
ss
cmps
push
or
mov
movs
sbb
lds
and
call
jb
inc
loop
sub
pop
jmp
shl
pop
xchg
xchg
cmp
into
es
dec
aam
ror
out
dec
pop
cmp
add
push
test
xchg
xor
fiadd
in
jae
hlt
clc
cmp
fidiv
lds
mov
mov
fiadd
adc
jl
scas
push
sbb
xor
cs
sub
jns
fbld
in
pop
retf
out
retf
je
dec
into
or
mov
ficom
add
xor
in
fiadd
mov
push
mov
in
(bad)
cdq
popf
pusha
ret
lea
sub
and
scas
push
pop
rol
cmp
fild
xor
dec
pop
aad
(bad)
xchg
or
add
rcl
iret
dec
sbb
sbb
movs
mov
movs
pop
jnp
popa
push
pop
js
sub
jmp
enter
lods
fucomi
and
mov
(bad)
cmp
sbb
add
das
jbe
inc
stc
fs
jno
aad
or
inc
lahf
mov
inc
adc
cmp
and
pop
add
hlt
pop
push
test
cmp
cdq
xchg
pop
dec
dec
mov
push
in
or
inc
inc
add
or
call
daa
retf
and
sbb
in
rol
mov
inc
nop
sub
sar
or
add
sub
jno
push
add
xchg
ror
xchg
push
out
(bad)
fs
mov
in
inc
and
adc
pop
mov
and
cmp
mov
sbb
xlat
test
pop
sbb
(bad)
(bad)
pop
fistp
ds
int3
leave
xor
dec
rcl
call
pop
xchg
imul
adc
xor
repnz
call
sub
adc
xor
inc
iret
ja
inc
lea
push
push
icebp
or
lahf
addr16
and
push
out
mov
xor
cli
jae
xor
mov
push
add
push
or
out
sub
in
xor
sbb
(bad)
jo
imul
cmp
mov
shl
jmp
arpl
icebp
add
jnp
jl
or
mov
sbb
addr16
das
push
mov
(bad)
xor
ds
pop
mov
jecxz
stc
adc
int3
test
retf
jecxz
mov
xchg
sar
stos
aad
in
not
cmp
cdq
sub
inc
mov
xchg
cwde
mov
sahf
add
push
or
mov
push
(bad)
stc
aad
lea
mov
mov
jnp
test
jae
ror
cmp
(bad)
mov
mov
cmp
sbb
push
movs
data16
add
into
dec
dec
pop
ret
mov
popa
pusha
scas
cwde
jmp
mov
inc
cmp
mov
ret
sbb
sti
(bad)
add
aad
xchg
sti
test
xchg
popaw
pop
xchg
sahf
mov
pop
leave
pop
data16
fdivr
(bad)
(bad)
es
dec
pop
les
xlat
das
and
xlat
sub
or
xchg
fsincos
xchg
xor
ja
jl
icebp
std
push
jg
mov
shl
inc
fisubr
push
mov
xchg
mov
mov
jl
xchg
clc
mov
imul
in
data16
adc
retf
sbb
push
jp
adc
jg
int3
fild
ret
and
xchg
jge
cs
jg
arpl
cmp
cmp
(bad)
es
pushf
xor
inc
ror
xor
cmp
lock
call
mov
int
dec
imul
xchg
push
and
or
pop
or
es
xor
sub
push
in
add
and
arpl
and
mov
jne
je
(bad)
inc
nop
mov
iret
stos
dec
mov
loop
(bad)
scas
or
int
sbb
sub
mov
push
leave
jge
inc
mov
mov
in
stc
jmp
cmps
mov
lods
dec
daa
shl
dec
xchg
and
mov
inc
in
mov
enter
movs
inc
xor
loopne
retf
xor
and
inc
call
inc
pop
mov
mov
jnp
or
ja
cmp
cdq
and
jle
movs
xchg
hlt
jb
inc
cmp
or
movs
cmp
xchg
mov
fistp
add
fwait
sbb
or
xor
out
mov
jbe
(bad)
xor
popw
jnp
mov
dec
pop
cmc
sub
mov
js
out
popf
out
lahf
loopne
or
ffree
fadd
mov
imul
ret
mov
call
mov
retf
fs
xchg
mov
lahf
lahf
outs
fyl2xp1
jmp
arpl
imul
mov
xlat
out
adc
or
imul
(bad)
cmp
inc
std
into
push
xor
or
mov
and
imul
repz
pusha
call
imul
aad
add
and
imul
clc
pop
add
jno
nop
ins
int
test
sbb
das
loopne
pushf
cmp
fwait
popf
pop
inc
fistp
add
mov
adc
mov
ins
(bad)
xchg
mov
or
and
adc
mov
(bad)
jge
sbb
gs
jecxz
jae
jno
mov
sub
push
jg
(bad)
push
imul
scas
and
xchg
call
adc
lahf
ins
sbb
(bad)
fist
(bad)
cmp
lods
add
cwde
ins
fmul
xor
daa
dec
jns
jne
test
mov
jge
loopne
xor
jmp
push
dec
push
js
or
or
push
jecxz
cmp
push
xchg
sbb
xchg
ja
or
adc
cmps
push
xor
(bad)
std
(bad)
pop
jl
ror
sbb
mov
push
repnz
or
and
je
in
retf
pusha
dec
sbb
daa
dec
stos
movs
push
ins
js
shl
ficomp
movs
mov
xchg
jg
inc
push
inc
push
loopne
push
mov
lea
lock
jle
lods
lods
cwde
shl
sub
fucomip
ror
fistp
add
aam
push
into
mov
(bad)
mov
xor
sbb
cmps
and
stos
sbb
pop
xchg
xchg
fimul
dec
adc
jl
scas
fnstcw
adc
lods
push
mov
sub
dec
test
ins
push
je
or
jne
imul
cld
fsubr
add
dec
(bad)
fwait
cmp
mov
jl
sti
push
jne
jmp
jecxz
in
cmps
cdq
retf
cwde
cmp
outs
and
jmp
xor
bound
ins
add
add
(bad)
stos
call
xor
pop
pushf
ins
pop
pusha
mov
aaa
in
fisttp
push
mov
dec
add
dec
stc
(bad)
xlat
sbb
mov
adc
and
dec
out
mov
push
and
sub
dec
jmp
and
movs
mov
iret
inc
in
mov
adc
fisubr
dec
xor
and
ins
jb
retf
pop
push
mov
cmp
enter
out
inc
sub
lea
jo
in
fistp
sbb
loopne
mov
push
sub
push
mov
and
sub
je
jl
cmp
loope
mov
lock
in
xor
(bad)
dec
xor
lods
push
push
sbb
cwde
ret
or
inc
inc
xor
xchg
jmp
(bad)
jmp
mov
gs
xchg
mov
ja
push
test
pop
ins
dec
gs
repz
mov
sub
push
lahf
popf
sahf
sbb
add
jecxz
xor
outs
pop
call
jle
or
test
pop
(bad)
and
jmp
push
jae
add
(bad)
out
xor
add
dec
into
adc
sbb
aam
test
xor
cmp
jp
out
clc
push
or
jne
in
inc
lods
push
and
and
push
lods
inc
mov
sar
ja
adc
mov
jle
sub
xor
iret
pop
jge
jae
sbb
push
pop
jo
pop
or
fcomp
loop
mov
sbb
movs
sub
fild
jnp
cli
mov
push
mov
fstp
pop
test
jno
ins
pop
in
jmp
div
lods
pop
xchg
add
and
loope
add
sti
inc
(bad)
mov
xlat
add
test
pop
push
fisubr
xchg
test
enter
xchg
cmp
fild
xchg
out
iret
hlt
mov
cmp
(bad)
aam
sub
mov
ins
enter
in
and
add
mov
and
sbb
movs
call
iret
cld
repnz
cmp
mov
jnp
inc
enter
mul
add
out
mov
xchg
mov
mov
mov
push
mov
cli
xor
dec
sub
xor
les
sub
mov
aad
rol
shl
inc
sbb
pop
sub
ds
push
sar
sub
pop
jmp
bound
repnz
test
cmp
ficomp
pop
out
add
repnz
mov
xor
jb
xor
cmc
cmp
shl
pushf
sbb
test
push
xchg
pop
sbb
jle
rol
cmps
push
and
push
out
lahf
js
push
fst
cs
(bad)
adc
dec
aas
sbb
mov
enter
jb
dec
or
mov
pop
mov
jmp
ins
and
pop
push
not
pusha
loop
push
shl
enter
popf
xor
fucomi
mov
dec
(bad)
pop
lahf
retf
ret
and
sub
cmp
add
push
jno
inc
pop
das
repz
imul
adc
clc
neg
fstp
popf
cmps
aam
add
daa
cmp
inc
into
jae
int
mov
loope
dec
adc
test
cdq
jae
out
mov
mov
or
stos
clc
jecxz
pushf
cmp
retf
stos
sbb
ret
cmp
add
sbb
lods
pop
sub
inc
inc
retf
and
(bad)
repz
(bad)
mov
lock
fist
icebp
pop
or
fwait
xchg
xchg
inc
push
and
add
mov
inc
je
add
mov
iret
data16
mov
pop
shl
(bad)
and
int
iret
jl
sub
test
bound
popa
call
je
ror
pop
test
aas
mov
sbb
ss
dec
mov
or
sub
rcr
xchg
in
in
fstp
add
imul
or
jns
mov
mov
popa
cmc
push
add
ins
lahf
(bad)
in
adc
push
pusha
jae
xor
pop
fwait
dec
or
jle
outs
outs
jbe
xchg
cli
xor
daa
repnz
xchg
js
les
adc
shl
rcl
mov
xchg
es
fld
xor
enter
and
and
cmp
jle
in
not
xor
in
dec
mov
add
test
fmul
pop
inc
js
clc
ret
push
and
rcl
cwde
mov
or
push
dec
mov
dec
(bad)
mov
mov
xchg
mov
sub
retf
fist
aaa
mov
and
or
leave
push
ror
mov
or
mov
addr16
jecxz
fnstenv
icebp
jmp
leave
adc
ficom
jmp
mul
sub
push
add
adc
arpl
fcomp
stc
scas
adc
out
pop
retf
jg
fild
scas
sbb
outs
jns
jo
mov
sbb
imul
fistp
ret
pop
jne
aad
fisttp
jl
dec
scas
xchg
xchg
cmc
inc
pop
(bad)
ds
jmp
cmps
gs
jne
sahf
inc
pusha
inc
sub
sbb
jmp
jge
ins
loope
stos
jb
or
ins
pop
aaa
(bad)
repz
pop
outs
call
push
stos
int
aam
and
jno
adc
dec
and
push
jmp
pop
fstp
jns
ret
popa
repnz
jmp
nop
push
aaa
xchg
fwait
jne
and
jmp
fld
je
dec
lods
mov
call
cmps
retf
shl
lahf
movs
or
enter
jnp
in
xchg
xchg
add
xchg
cmp
call
mov
gs
outs
jo
repnz
scas
pop
mov
dec
scas
xor
loop
pop
jmp
mov
push
sahf
(bad)
jnp
jp
xchg
dec
in
mov
arpl
push
fistp
xor
fisttp
int3
cmps
xchg
fdiv
scas
cli
add
adc
neg
push
and
loopne
retf
cwde
or
out
mov
icebp
dec
adc
inc
test
mov
rcr
jg
retf
and
mov
or
(bad)
xor
mov
jmp
sbb
stos
xlat
pop
pop
das
mov
mov
inc
xor
fldl2t
cmps
ss
out
cmp
ja
jg
jne
sbb
mov
bnd
mov
ss
pop
outs
cli
xchg
repz
inc
inc
into
push
dec
sbb
ins
push
in
loopne
mov
dec
jnp
push
mov
mov
pop
jne
(bad)
xchg
inc
cmps
lahf
mov
add
in
jnp
(bad)
pop
mov
jbe
mov
mov
mov
dec
aas
dec
pop
jle
jae
xor
fs
pushf
loope
cmp
mov
xchg
jmp
or
dec
in
push
or
daa
push
(bad)
mov
jno
jl
cmp
leave
sbb
movs
and
or
or
adc
popa
or
not
in
or
cs
adc
xchg
pop
push
pop
ins
mov
sub
sbb
out
mov
movs
push
shr
scas
mov
in
or
or
jl
mov
jb
and
daa
loop
fcomp
adc
mov
cmp
adc
dec
iret
mov
jbe
sub
xor
jnp
sbb
jo
rcr
pop
lock
sbb
jns
in
jecxz
sti
lock
mov
sbb
fdiv
adc
call
out
popa
add
and
jmp
aaa
aad
ret
bswap
mov
dec
leave
fidivr
xchg
sub
pop
jbe
ret
cmp
mov
out
(bad)
mov
sahf
sahf
mov
mov
fdivr
xchg
cmp
jno
inc
lea
inc
(bad)
adc
inc
mov
jg
stc
and
sub
aaa
arpl
push
sbb
fimul
pop
dec
or
xchg
adc
jecxz
test
mov
jb
jecxz
(bad)
js
add
stos
xchg
jl
ror
push
or
ins
js
mov
xchg
xchg
add
sti
sbb
out
mov
stc
sub
mov
jl
xor
cmp
or
inc
mov
stos
loope
popa
out
add
sbb
adc
shl
(bad)
arpl
jmp
daa
jnp
cmp
mov
shl
xor
dec
or
mov
mov
xchg
dec
cmp
out
xchg
out
inc
jmp
fadd
sub
mov
jg
outs
and
retf
add
inc
push
mov
call
dec
scas
and
xchg
xor
arpl
into
push
movs
inc
pop
and
pop
jge
xchg
mov
rcr
js
les
sub
cmps
cmp
cmp
test
inc
xchg
std
dec
in
test
push
cmp
push
lea
es
dec
scas
ins
sbb
jp
mov
in
xor
cld
pushf
or
or
jp
sub
adc
mov
jne
daa
xor
xor
(bad)
mov
ins
ss
call
cmc
or
aas
or
movs
(bad)
sbb
stos
or
aam
sti
add
pop
inc
or
sbb
xchg
stos
(bad)
sbb
stc
sar
imul
nop
mov
in
push
or
dec
out
mov
and
mov
mov
ss
mov
inc
pop
pop
cmp
mov
cli
xor
sub
rol
xchg
les
dec
inc
idiv
leave
and
and
aas
push
xor
bound
xor
scas
fstp
pop
std
and
mov
dec
mov
scas
dec
mov
inc
or
in
pop
test
mov
repz
mov
sar
add
cld
fld
add
scas
fs
lahf
fidiv
or
push
in
push
int3
imul
fwait
push
push
into
dec
inc
das
int3
pop
aad
in
dec
adc
(bad)
iret
jns
movs
sbb
test
sub
xchg
cdq
retf
or
mov
pop
jb
add
dec
jle
xor
push
hlt
dec
out
fcmovbe
imul
mov
push
mov
mov
xor
push
add
xor
jo
lods
loop
cs
push
sbb
dec
jbe
cmp
dec
bound
mov
ror
mov
sbb
adc
ror
cdq
je
xchg
push
mov
and
xchg
jmp
dec
call
jge
scas
mov
(bad)
retf
outs
in
mov
and
sub
je
(bad)
mov
or
jmp
clc
inc
ja
fldenv
pop
call
sbb
std
ins
(bad)
adc
mov
fldcw
push
outs
mov
xchg
into
in
aaa
inc
daa
je
in
mov
stos
xor
rol
pop
xor
inc
and
cwde
test
in
jae
daa
shl
stc
jmp
xchg
addr16
inc
mov
loopne
popf
add
std
cmp
dec
retf
and
sahf
cmp
add
ins
fld
repz
pushf
sahf
mov
fisubr
dec
sbb
mov
lods
lahf
in
dec
ja
ja
pop
push
push
xchg
xor
xor
or
sub
add
sbb
loop
ins
daa
pop
lods
out
mov
adc
jmp
sbb
and
xlat
and
ja
movs
les
ins
in
xchg
cmp
add
adc
pop
enter
jns
and
mov
mov
adc
or
jmp
add
pop
pusha
push
imul
jecxz
jecxz
adc
and
mov
push
inc
adc
fcomp
jo
or
lods
push
mov
jb
xor
out
dec
hlt
leave
leave
adc
jb
mov
retf
adc
test
pop
mov
and
sub
clc
fwait
ret
adc
add
add
cmp
push
pop
test
push
mov
push
adc
mov
rcr
jmp
jae
lahf
mov
jno
repnz
js
xchg
sbb
cld
dec
(bad)
jne
sub
adc
cli
in
sbb
mov
lods
arpl
and
test
stc
sar
sub
jo
cmp
bound
xor
in
test
dec
inc
daa
out
lock
jae
pop
hlt
pusha
outs
(bad)
fbstp
fcmovb
xchg
stos
fldcw
and
sahf
mov
inc
cmp
mov
nop
xchg
scas
mov
cmps
rol
inc
cdq
cdq
(bad)
inc
icebp
mov
pop
sbb
call
push
aad
pusha
jno
and
dec
scas
mov
push
jmp
mov
adc
cmp
in
shl
shl
inc
adc
pop
shr
sub
mov
mov
addr16
mov
or
retf
ret
sti
mov
fiadd
loopne
mov
fild
out
dec
xchg
(bad)
mov
mov
hlt
dec
bound
dec
jp
shl
xor
stos
add
dec
xchg
iret
repz
add
lea
bound
fst
jle
sahf
push
cmc
dec
xchg
cwde
cmp
in
pop
fistp
movs
enter
push
cmps
bound
mov
cs
ins
push
test
popa
or
call
call
cmp
lods
inc
xor
mov
inc
and
(bad)
sbb
test
cld
ror
pusha
in
fadd
dec
fisttp
cdq
retf
idiv
mov
mov
icebp
(bad)
not
adc
or
adc
dec
inc
adc
pop
push
lods
dec
xor
add
rcr
ja
mov
jne
mov
dec
jg
add
push
arpl
push
jg
mov
inc
jmp
mov
ds
xor
push
pop
pop
jl
mov
imul
pop
push
adc
out
lds
shl
nop
lods
scas
sbb
adc
sbb
push
xchg
cmp
mov
ficomp
cli
jge
retf
call
into
mov
pop
pop
and
jge
(bad)
dec
in
sahf
movs
mov
xlat
jb
push
cmp
out
pop
popf
retf
fs
jmp
cdq
in
pusha
aad
aad
rcr
ss
movs
xor
jmp
daa
pop
sahf
icebp
jp
(bad)
movs
test
or
cmps
add
cs
sub
pop
jle
(bad)
cdq
push
add
fwait
jne
fnsave
add
inc
dec
jae
enter
inc
push
mov
sti
out
xchg
mov
out
sub
(bad)
mov
or
rol
dec
(bad)
jb
mov
retf
mov
jbe
iret
mov
cld
cmp
scas
xchg
xchg
cwde
iret
inc
test
pop
push
inc
lahf
mov
cmp
lock
scas
mov
lock
(bad)
sahf
mov
movs
idiv
adc
gs
mov
sub
es
sub
sub
mov
fs
sbb
(bad)
xchg
sahf
add
sub
ja
push
or
test
fdiv
add
jge
push
test
mov
(bad)
dec
fld
imul
sysexit
movs
lock
pop
retf
inc
sub
mov
shr
ss
(bad)
mov
cmps
cmp
jnp
nop
ins
pop
cmp
and
cli
rol
rcl
into
sub
clc
cmc
push
sbb
inc
into
and
jo
mov
or
or
and
std
push
daa
push
push
ins
je
rol
pop
jnp
lock
int3
ret
mov
pusha
test
or
fs
aad
(bad)
xchg
loope
push
inc
add
xor
call
sub
dec
pushf
aam
dec
leave
hlt
and
je
(bad)
cmp
add
dec
adc
rol
fstp
inc
stos
pop
mov
fwait
gs
add
cmp
sub
pop
fneni(8087
fadd
pop
inc
mov
movs
retf
sbb
sar
inc
fcomp
cmp
stos
adc
retf
js
into
loop
fwait
xchg
nop
and
mov
mov
daa
mov
test
inc
xchg
jmp
mov
dec
pop
jp
push
jae
test
add
jns
xchg
xor
bound
arpl
aad
icebp
cmp
sub
jb
xchg
mov
mov
add
das
mov
mov
cmp
mov
dec
mov
fsubp
push
test
jp
cmps
leave
scas
repnz
jl
cld
cwde
retf
sbb
das
(bad)
mov
dec
test
xlat
ja
cmc
add
push
test
and
stos
call
inc
test
or
int3
pop
int3
mov
jl
adc
pop
cld
pop
mov
(bad)
xchg
push
pop
sbb
scas
pushf
mov
inc
pop
out
sar
dec
lods
sbb
jmp
inc
pop
ds
mov
clc
das
push
mov
pop
xchg
push
or
fldcw
inc
or
fsub
dec
dec
or
mov
std
jnp
adc
mov
and
inc
or
add
and
loop
push
mov
jbe
add
scas
dec
arpl
fcomp
ficom
mov
aam
in
outs
adc
icebp
push
jle
addr16
mov
xor
in
fist
push
neg
inc
out
sub
enter
lea
mov
cmp
jle
xchg
ror
add
pop
sbb
xchg
xor
out
mov
(bad)
and
test
xchg
stos
pop
jle
lahf
xchg
pop
xor
or
das
xchg
adc
add
xor
lahf
into
gs
pop
fs
cmp
push
push
sub
shl
shl
jmp
ret
cs
mov
stc
fiadd
push
(bad)
bound
push
mov
xchg
test
mov
or
fdiv
pop
sbb
repz
and
xchg
xor
and
loop
sbb
pop
pop
rcl
add
jmp
jbe
push
les
jle
mov
lods
sub
popf
pop
scas
sbb
inc
adc
jb
in
and
xchg
pop
mov
inc
lods
cld
js
aam
lea
outs
iret
dec
jp
lock
movs
aad
cmps
out
push
out
cli
jo
cmps
out
push
mov
mov
adc
adc
(bad)
loop
mov
int
cmps
mov
lods
outs
cdq
adc
imul
push
cmp
inc
mov
lds
mov
jmp
push
(bad)
xchg
iret
aad
in
add
jo
movs
pop
sub
scas
xchg
mov
push
pop
mov
lea
dec
lea
fst
push
enter
sti
sub
pop
xchg
mov
cmp
xor
jge
fisttp
ror
jo
(bad)
pop
jmp
aad
mov
stos
pop
aad
retf
imul
clc
mov
mov
out
repnz
inc
xchg
ins
cld
pusha
push
push
mov
enter
test
push
daa
xchg
and
int3
nop
xchg
dec
frstor
mov
popf
dec
cmps
(bad)
and
xchg
add
call
jl
mov
push
add
mov
data16
cwde
sbb
push
loopne
aas
or
movs
push
xchg
add
xlat
push
adc
sti
outs
int3
cmp
xchg
rol
pop
inc
imul
je
fnstcw
stos
inc
mov
pop
div
mov
cmps
pop
ins
jge
sbb
pop
fsubr
dec
fist
into
dec
in
stos
or
push
or
test
not
adc
clc
add
add
int3
ins
xchg
outs
or
hlt
inc
xor
stc
jmp
xor
jmp
jbe
or
inc
movs
rcr
cld
scas
push
test
out
jecxz
cmps
pop
test
push
mov
cmc
xchg
adc
push
fwait
ins
jp
and
mov
pop
nop
retf
mov
mov
mov
imul
std
dec
nop
sbb
mov
out
push
cmp
popa
mov
out
imul
test
sub
pop
ins
cs
mov
bound
retf
das
movs
es
clc
stos
cli
add
inc
sub
int3
das
adc
(bad)
into
push
test
dec
retf
jmp
adc
xchg
push
in
sub
pop
movs
cs
outs
pop
inc
ret
cmp
push
mov
dec
out
ins
add
cmp
ret
js
cmp
mov
adc
or
pop
popa
pop
cvtdq2ps
push
test
xor
repnz
clc
ins
dec
or
sbb
sbb
dec
push
loop
call
sahf
mov
jl
lock
jmp
in
cmp
ss
arpl
sbb
not
jle
inc
cmc
or
and
es
in
cmps
mov
cmc
rcr
cmps
push
mov
out
add
push
test
daa
mov
outs
or
mov
adc
(bad)
add
fbstp
or
aaa
stos
jle
mov
adc
inc
adc
or
out
jle
add
xabort
adc
fdiv
inc
xchg
fbld
inc
and
push
push
rcr
mov
push
push
pushf
jb
mov
aas
adc
jmp
sub
adc
addr16
inc
or
adc
fwait
dec
ins
pop
jl
(bad)
adc
cld
and
out
xchg
inc
repz
enter
rep
sub
test
in
mov
push
pop
pop
retf
add
repz
mov
ret
mov
(bad)
sub
xchg
pop
pop
in
xchg
js
and
test
rdpmc
add
popa
or
and
cmp
test
je
add
push
adc
jbe
stos
xchg
xchg
mov
sub
stos
cmp
add
aas
fld
pop
mov
xchg
in
fwait
pop
mov
adc
jb
mov
jecxz
je
mov
idiv
jno
jns
rol
or
(bad)
cmp
add
ret
xor
inc
push
in
arpl
scas
xor
cmp
enter
jle
sub
xchg
push
out
ret
nop
pop
outs
das
fcmovu
pop
xlat
(bad)
sbb
test
ja
inc
bound
fst
jnp
fs
or
push
add
lahf
cmps
cmp
das
(bad)
out
push
cmp
outs
fisttp
adc
xchg
jmp
inc
cmp
loope
jbe
push
push
push
xchg
arpl
test
pop
cmc
add
mov
mov
jg
movs
les
jl
cmp
les
jb
call
in
(bad)
cmp
aas
adc
jge
jno
push
mov
and
lea
mov
mov
call
add
js
pop
es
scas
int3
test
je
das
pop
fldcw
(bad)
fadd
cmp
push
fs
aad
jmp
addr16
cmp
push
jp
inc
shl
pop
popf
push
jo
(bad)
stos
mov
sbb
pop
jae
nop
stc
push
test
mov
out
xchg
fwait
cmp
mov
xor
pop
jnp
sbb
add
cmp
ins
cs
(bad)
ins
mov
and
pop
xchg
pop
pushf
lock
retf
dec
jnp
mov
rcr
mov
pushf
push
enter
xlat
addr16
outs
dec
loop
push
outs
sbb
jo
cmp
lahf
test
aad
inc
jbe
(bad)
sbb
loop
in
sbb
pop
into
loopne
sub
add
jle
mov
sub
(bad)
pop
rcl
mov
push
mov
sbb
xchg
mov
adc
xlat
lods
iret
mov
test
adc
mov
push
std
mov
call
inc
mov
(bad)
(bad)
inc
push
jecxz
addr16
sub
and
and
sub
loopne
stos
aas
loop
pop
sub
jo
jnp
mov
adc
sbb
push
xchg
ss
les
retf
addr16
mov
cmp
cli
inc
xchg
outs
jo
in
ins
pushf
mov
sbb
icebp
lock
jbe
(bad)
stos
movs
test
sub
icebp
les
jne
test
out
into
sub
test
add
jle
mov
xor
cmps
aas
ss
fcom
call
sbb
push
mov
cmp
jp
stc
pop
pop
push
mov
mov
stos
lock
in
test
jmp
adc
jae
push
ds
mov
pop
push
shl
mov
jle
mov
xchg
push
and
xlat
dec
push
cmp
into
and
push
add
jmp
arpl
int3
xor
mov
test
sbb
fmul
sahf
xlat
add
pop
xchg
dec
xchg
sub
stos
dec
cmps
ins
stos
mov
adc
mov
fbld
std
push
not
arpl
cmp
cmp
les
addr16
jp
jmp
imul
and
aaa
inc
mov
stos
sets
push
sar
mov
dec
push
dec
jno
pop
dec
add
xchg
cli
leave
inc
cmp
test
sub
add
int3
loop
push
je
out
loopne
test
bnd
cli
xchg
or
lds
arpl
jne
lahf
mov
push
lods
js
icebp
xchg
dec
sbb
xchg
loope
sbb
adc
imul
cmp
dec
pop
shl
jecxz
sbb
xor
cmp
jne
test
adc
jle
aad
inc
push
pop
push
sti
jge
sub
mov
jae
ffreep
es
xor
(bad)
lods
dec
cld
pop
dec
sbb
jmp
sub
inc
push
in
mov
out
cmp
iret
pop
and
mov
out
lahf
mov
dec
dec
push
shl
(bad)
mov
pop
mov
cmps
xchg
fdivr
pop
out
adc
pop
fst
jne
fnstenv
sbb
mov
dec
xchg
das
and
(bad)
lods
mov
aam
movs
inc
out
and
jmp
xchg
lods
outs
push
lods
add
pop
add
idiv
adc
ret
out
inc
cmp
pop
bound
xor
inc
xchg
fisttp
xor
xchg
les
adc
clc
(bad)
sub
fst
sub
jbe
neg
mov
dec
add
fadd
xor
mov
push
jno
xchg
xchg
mov
fs
out
ficom
lds
addr16
jp
sbb
bound
dec
sbb
pop
and
push
repnz
inc
dec
fs
inc
push
rcl
adc
lock
out
ret
mov
sub
mov
xor
loope
or
xchg
adc
pop
mov
stos
hlt
ins
sar
mov
(bad)
xor
cdq
sbb
rcr
and
jg
mov
xlat
rcl
test
nop
dec
retf
add
sbb
jl
jae
cld
push
jp
mov
inc
jae
out
push
xchg
or
(bad)
mov
or
pop
xor
jmp
mov
sub
xor
loopne
adc
mov
add
test
mov
ds
not
lahf
in
mov
or
dec
push
mov
xor
xchg
push
xchg
push
cmp
jg
stos
pop
ds
movs
cmp
adc
(bad)
sti
dec
(bad)
bound
outs
jmp
add
movs
inc
sbb
adc
push
repnz
into
(bad)
xlat
cdq
fisttp
pop
xor
or
push
mov
imul
adc
into
add
scas
add
push
cli
xchg
neg
sub
pop
cwde
inc
inc
mov
mov
popa
dec
add
jecxz
jns
mov
scas
xor
sar
fsubr
adc
mov
scas
push
jmp
mov
mov
dec
xor
stos
mov
xchg
pop
add
xor
fcom
fiadd
push
xchg
push
pop
pop
inc
add
or
aaa
dec
mov
push
and
add
or
jo
hlt
xor
pushf
aaa
cdq
mov
into
test
dec
xchg
stos
or
jp
int
fimul
mov
nop
inc
cwde
mov
mov
leave
dec
mov
sti
inc
test
inc
cs
cmps
xor
fdiv
jbe
xor
iret
push
mov
enter
enter
and
xor
rcl
pop
cmp
call
jg
pop
lock
es
pop
test
xchg
mov
lods
add
lahf
pop
mov
imul
adc
add
test
xchg
mov
xor
stc
jae
dec
sub
mov
fs
inc
sti
adc
je
fsubr
(bad)
push
mov
je
repz
xchg
jb
adc
xchg
sbb
out
mov
mov
jne
inc
xchg
push
mov
cmp
clc
(bad)
mov
jg
sbb
and
xor
mov
lods
push
mov
inc
sbb
xlat
xor
fist
ins
mov
sub
dec
push
xchg
ins
je
addr16
es
cmp
sub
mov
xor
int
std
sbb
lods
cdq
mov
int3
fdiv
push
fadd
pop
rol
sbb
push
dec
mov
das
dec
mov
xor
dec
mov
and
xor
dec
mov
cmp
stos
cmc
imul
int
(bad)
xchg
jge
leave
(bad)
xor
aas
or
call
ror
(bad)
imul
(bad)
(bad)
into
iret
mov
rcl
jp
xor
cmps
push
pushf
popa
lods
cwde
jno
add
adc
mov
jns
into
jns
jmp
clc
lds
cdq
in
mov
adc
pop
stc
data16
cmp
add
xor
popa
sbb
enter
sbb
jae
push
inc
cdq
test
jne
adc
xor
add
outs
test
push
push
add
clc
aad
cwde
inc
sbb
mov
int
fistp
sub
cs
mov
jns
aaa
xchg
or
jl
mov
repz
pusha
in
pmaddwd
fwait
stos
xchg
(bad)
daa
push
jmp
or
inc
ret
sar
btr
mov
out
mov
xchg
js
loop
mov
rol
push
sar
add
scas
adc
mov
dec
imul
stos
shr
fsubr
or
adc
jge
retf
jge
cmp
cld
sub
mov
or
not
iret
sbb
adc
mov
jno
sahf
mov
pop
call
and
movs
neg
mov
and
lahf
jns
imul
jbe
fsubrp
retf
cmps
dec
mov
enter
mov
pop
xor
dec
mov
test
jae
pop
sub
mov
cmp
fwait
aad
xchg
pop
test
(bad)
fimul
xlat
mov
in
les
pop
addr16
mov
mov
adc
nop
scas
push
sti
push
adc
fstp
in
mov
out
int3
cmp
in
pop
jmp
rol
sbb
mov
lea
fst
sbb
sbb
xchg
loop
aas
xor
nop
inc
sbb
(bad)
push
and
add
dec
fsubr
mov
stc
pushf
gs
popf
mov
push
cmovg
icebp
dec
cmp
mov
sahf
std
sbb
xor
lds
nop
add
pop
jg
push
add
ret
mov
enter
add
fist
push
mov
mov
test
(bad)
mov
stc
or
pop
cwde
stos
xor
xlat
aas
je
adc
fldcw
pop
arpl
jb
mov
xchg
push
shl
adc
ficom
repnz
aaa
push
push
pop
arpl
jbe
mov
fldenv
cmp
imul
test
cwde
test
xchg
lock
jl
dec
dec
jnp
ror
int3
mov
out
ret
xor
cmp
and
dec
test
inc
adc
mov
int
add
daa
adc
xor
cli
stc
cmps
enter
dec
mov
ja
jle
jo
in
fwait
es
sub
inc
outs
jo
adc
cmpxchg
xchg
test
lock
ret
pop
adc
lock
xor
mov
pop
ficomp
out
and
push
jns
fnsetpm(287
or
mov
lods
add
jge
in
out
arpl
addr16
ror
test
push
mov
aam
into
loop
cwde
and
xchg
shr
bound
fmulp
aas
lods
jmp
scas
jmp
xchg
aas
and
ds
fld
and
xor
sbb
jb
xor
pop
ret
jmp
aas
dec
adc
mov
push
(bad)
(bad)
cmp
or
pop
dec
mov
mov
push
jmp
mov
sbb
mov
scas
mov
test
mov
not
xor
or
push
fisubr
xchg
(bad)
test
ret
mov
(bad)
shr
mov
push
adc
or
call
lea
fsub
pop
test
xor
cmps
push
dec
pop
xchg
mov
and
loopne
dec
pop
xor
cmp
dec
and
aam
pushf
bound
jbe
cld
sub
or
out
pop
cmp
push
sbb
jle
rcr
add
pushf
dec
cdq
sub
xchg
int
das
inc
(bad)
cli
pop
dec
mov
mov
mov
in
push
(bad)
sub
cwde
aas
pushf
gs
imul
pop
push
icebp
mov
neg
das
sub
retf
lea
sahf
xor
pop
push
push
mov
retf
imul
out
imul
pop
sbb
sahf
jnp
sar
mov
xchg
xor
ja
mov
clc
push
inc
daa
inc
sbb
popf
dec
movs
xchg
sub
mov
call
(bad)
mov
pop
xor
inc
push
lds
scas
enter
xchg
imul
cmp
xor
shr
cwde
(bad)
mov
int3
(bad)
fwait
lods
jo
dec
jns
or
xor
aam
gs
and
fldcw
mov
loope
lods
xchg
pop
xchg
xchg
lock
mov
jae
cmps
mov
movs
push
xor
data16
pop
movs
std
sahf
inc
push
mov
dec
call
daa
loop
mov
pop
stos
mov
cmp
iret
cmp
leave
and
scas
mov
icebp
sub
dec
and
mov
sbb
add
dec
ds
inc
sbb
aam
ja
xor
jne
mov
fwait
xor
out
dec
add
add
xchg
mov
sbb
sbb
(bad)
push
or
jg
mov
shl
pop
sbb
jecxz
fsubp
aam
je
(bad)
xlat
jo
(bad)
cmp
push
mov
dec
clc
xchg
jl
add
stos
add
jp
lahf
push
xchg
mov
inc
hlt
jecxz
(bad)
neg
xor
and
xchg
and
sbb
packuswb
je
sbb
mov
push
push
push
lock
cmp
seto
mov
int3
xor
mov
or
mov
call
retf
retf
imul
lods
pop
mov
or
mov
mov
inc
test
inc
gs
test
scas
(bad)
push
cmp
mov
test
mov
sbb
int
imul
xchg
xor
(bad)
inc
movs
fnstsw
ins
dec
adc
add
shr
dec
lods
(bad)
retf
dec
or
jecxz
out
call
fld
push
xor
mov
jns
add
ins
imul
(bad)
adc
mov
dec
scas
mov
popf
(bad)
pop
je
jmp
xchg
fsubr
es
mov
inc
jno
ud1
nop
in
std
cld
and
fcmovnu
and
dec
adc
(bad)
into
test
cmp
xchg
dec
data16
and
(bad)
push
ja
pusha
loop
mov
dec
sbb
(bad)
jmp
adc
mov
hlt
repnz
mov
xor
movs
sub
jp
sub
sub
add
adc
call
add
fnstenv
jno
div
dec
inc
sub
test
lods
cmp
pop
or
(bad)
fcom
aaa
adc
cs
dec
inc
arpl
jns
aas
pop
dec
je
popf
cli
loop
mov
dec
shl
addr16
xchg
int
loop
arpl
in
shl
pushf
je
cwde
ror
out
lahf
jmp
cld
shl
xchg
inc
mov
ins
jmp
mov
cmp
jne
pop
inc
les
jbe
ror
xchg
adc
cmc
imul
enter
mov
push
adc
pop
inc
cmpxchg
repnz
cmps
in
pop
push
loop
mov
xor
add
push
clc
jp
repnz
sub
jge
lahf
mov
lahf
int3
xchg
repz
fbstp
jmp
in
std
sbb
loop
das
push
out
xchg
jl
dec
xor
cs
xor
lock
jb
sub
push
out
sar
fcmovbe
xchg
aam
mov
loopne
sub
das
cld
cmp
pop
out
cmp
js
xor
ins
mov
rol
scas
ror
pushf
jns
(bad)
cmc
inc
mov
jg
add
popa
mov
cdq
ins
inc
fiadd
test
xor
data16
push
xchg
adc
ds
nop
mov
int3
scas
pop
sti
xchg
xchg
jmp
int3
xchg
xchg
mov
inc
outs
movs
enter
mov
into
shl
jle
dec
or
sbb
imul
and
fstp
jnp
retf
push
pop
sahf
jecxz
sbb
or
and
fsubrp
mov
mov
gs
dec
cmp
pop
fcom
xor
das
add
jae
clc
xchg
cmps
movs
sub
aas
inc
pop
cmps
adc
outs
(bad)
xchg
fadd
iret
mov
test
sub
inc
fwait
xor
or
dec
test
add
out
pcmpeqd
out
dec
daa
ins
and
fs
mov
mov
stos
pop
pop
or
pop
inc
sbb
into
xchg
cmp
sbb
push
push
std
pop
sub
push
push
sub
fs
loop
div
mov
arpl
add
dec
ret
sbb
mov
call
scas
mov
push
push
cli
dec
inc
xor
or
test
jmp
mov
(bad)
mov
jecxz
and
add
aam
arpl
xchg
(bad)
js
xchg
lds
lods
shl
ds
dec
rcr
jbe
xor
mov
ret
mov
lahf
cwde
mov
jo
int3
xchg
mov
daa
sti
xchg
repnz
loop
cmp
fcmovnbe
out
call
push
in
(bad)
out
ss
mov
push
pop
lods
inc
loop
xor
adc
mov
(bad)
dec
mov
sbb
jb
inc
xor
xchg
xchg
clc
cmp
sbb
dec
stos
dec
mov
int
div
sbb
inc
push
pop
(bad)
scas
retf
sub
jnp
add
lahf
cmps
aad
mov
js
inc
pop
lea
jae
ss
push
cmp
xchg
out
push
sub
adc
mov
jb
and
push
retf
out
or
cdq
jmp
aad
push
sub
fcom
pusha
nop
add
jnp
push
pusha
lods
call
es
sub
jl
retf
adc
adc
(bad)
(bad)
rcl
movs
xor
xchg
pop
(bad)
daa
jae
and
pop
cmp
call
sbb
jle
dec
jns
mov
call
xchg
xlat
cdq
movs
push
push
mov
sub
(bad)
std
sbb
ror
lds
inc
fisttp
retf
adc
or
out
inc
or
mov
idiv
imul
outs
or
push
leave
mov
mov
dec
or
jno
xor
pop
jno
xchg
jne
call
sub
dec
lds
fucomp
aaa
cld
or
dec
sbb
cmp
(bad)
dec
aaa
adc
sar
add
pop
(bad)
adc
cwde
xchg
in
pushf
int
xor
stos
pop
leave
inc
mov
jle
imul
add
leave
sub
jnp
mov
pop
stos
mov
inc
pop
and
push
sbb
push
sbb
cld
or
cmp
iret
jo
outs
jne
mov
mul
out
mov
dec
jmp
mov
inc
nop
pop
lds
retf
call
push
retf
shr
sub
stos
or
mov
jp
aas
loope
add
push
dec
ret
adc
jnp
inc
mov
call
shl
xchg
aas
xchg
pop
sbb
or
fnsave
retf
push
mov
mov
cmps
inc
hlt
mov
int3
shl
js
cmps
push
add
ja
jl
add
pop
pop
movs
leave
div
sbb
cmp
popf
xor
mov
ds
inc
ins
dec
int3
rol
test
stos
push
adc
xchg
mov
xchg
mov
pop
les
fdiv
pop
bound
cmp
scas
aad
add
lahf
push
mov
into
js
xchg
out
es
adc
cmc
(bad)
stc
sahf
pop
pop
inc
adc
mov
mov
mov
push
jl
mov
(bad)
pop
xchg
xchg
inc
test
mov
mov
jmp
test
sub
lods
in
rcr
leave
test
dec
outs
inc
jae
mov
mov
dec
cmp
test
cmps
jb
mov
cmps
and
inc
imul
jle
lea
fistp
xor
pop
les
aad
jne
jmp
and
shr
push
cli
sub
push
sub
imul
leave
retf
gs
into
mov
mov
sbb
jnp
push
jne
(bad)
clc
je
add
pushf
jmp
pop
test
pop
retf
push
(bad)
pushf
pop
movs
inc
dec
jbe
xchg
xor
test
cmp
jg
ds
dec
mov
sbb
ins
ret
(bad)
inc
pop
aam
cmp
xor
mov
aas
les
cmps
outs
cs
and
lods
mov
pop
inc
imul
sbb
or
addr16
cwde
aaa
xor
retf
adc
push
pop
loop
pusha
add
pop
mov
pusha
iret
mov
in
jbe
movs
jns
jle
rol
shufps
call
arpl
test
push
hlt
outs
cwde
dec
jbe
movs
xlat
and
cwde
cwde
xor
pop
iret
test
sub
jge
jge
pop
mov
jne
xchg
div
xchg
sub
and
aaa
pop
loope
pop
sbb
pop
inc
jge
inc
dec
xchg
dec
jmp
psllw
es
dec
and
aaa
pop
or
sbb
jnp
sub
adc
(bad)
les
fsub
pop
inc
ja
cmps
sti
xor
iret
daa
jmp
cld
popa
cmp
aaa
and
and
mov
adc
out
shl
lds
test
add
enter
inc
jmp
cmp
xchg
cld
mov
mov
xor
mov
mov
leave
push
(bad)
popf
push
push
fbstp
mov
scas
push
adc
mov
dec
adc
xchg
push
(bad)
repnz
ror
adc
sbb
mov
push
and
aam
icebp
inc
repnz
add
lock
and
cmps
mov
gs
sbb
xchg
fs
lods
jns
mov
mov
sahf
pop
rcr
test
adc
push
jmp
pop
mov
mov
add
xor
sub
sub
and
les
sub
mov
adc
call
mov
lea
push
push
mov
mov
jmp
sbb
pop
xchg
aas
push
cmp
int
xor
dec
add
(bad)
div
and
pop
sbb
dec
retf
cmp
inc
fucomip
out
imul
les
mov
sbb
sbb
sar
bnd
es
lods
retf
cmps
data16
push
jmp
je
bound
cwde
jb
hlt
rcr
(bad)
pop
pop
sub
adc
(bad)
cmp
mov
sbb
jae
scas
sar
cmp
cmp
mov
push
popf
movs
and
pop
or
jge
or
jns
xchg
mov
jl
adc
ret
cli
and
inc
(bad)
test
inc
or
adc
dec
hlt
repnz
mov
iret
pop
adc
pop
mov
cmps
pop
and
(bad)
call
mov
mov
out
or
jl
push
call
add
rcr
enter
jp
xor
adc
or
fidiv
xor
mov
dec
aaa
or
sub
jnp
lds
setg
lods
cmps
retf
sti
pop
mov
jo
ret
jb
ret
jbe
test
in
fidiv
and
rcr
jno
std
jmp
test
add
dec
clc
repnz
(bad)
push
shl
pusha
push
mov
pop
push
or
adc
aas
push
rol
clc
aas
xor
cld
adc
xchg
jp
sub
out
les
outs
inc
(bad)
cmc
jno
mov
(bad)
ins
test
jnp
mov
xchg
pop
jnp
add
sti
xor
ins
jae
fabs
adc
mov
mov
and
bound
mov
or
in
movs
hlt
xchg
data16
sub
xor
fisub
or
mov
sahf
xor
mov
or
shl
mov
sbb
inc
cmps
cmp
(bad)
aam
push
or
pop
mov
add
bound
fld
push
mov
iret
mov
mov
sets
sub
in
mov
ds
out
jle
and
mov
fisttp
test
out
xchg
shr
ins
and
cmp
xlat
xchg
fdivr
sbb
stc
cmp
pop
mov
push
pop
sub
inc
or
movs
mov
outs
cmp
adc
xchg
fsub
idiv
dec
fisubr
mov
pop
push
addr16
(bad)
out
in
es
pop
aad
outs
clc
add
lods
mov
xor
repnz
test
dec
fimul
enter
retf
aaa
mov
call
shl
mov
push
or
jne
and
xchg
aam
adc
push
(bad)
data16
pop
lahf
pushf
in
ror
fld
out
ficom
ins
fnstsw
inc
push
fcom
xchg
jmp
les
mov
push
xor
outs
scas
jmp
movs
lods
push
xor
ds
popf
mov
pop
pushf
loope
push
cmp
xchg
push
mov
int
sub
dec
jl
cmps
jae
jb
cdq
lods
mov
icebp
or
int
and
xchg
push
ret
into
into
(bad)
fadd
div
and
push
mov
jae
fcmovnb
cmp
std
(bad)
cmps
gs
ins
jb
cmp
retf
cmp
jno
mov
mov
iret
sbb
loope
(bad)
jmp
and
cli
mov
les
inc
jns
dec
dec
adc
cli
test
add
or
mov
adc
pop
xor
out
aas
pop
pop
jp
test
add
add
push
push
mov
retf
(bad)
scas
push
(bad)
cmp
ret
mov
sbb
push
js
cli
add
out
(bad)
push
xor
lods
or
(bad)
in
aad
sbb
mov
out
cli
cmp
push
jle
cmp
inc
outs
mov
in
iret
pushf
mov
add
jmp
mov
cmp
jmp
fsub
cmp
xor
mov
inc
and
inc
fld
jae
and
div
xchg
movs
outs
jne
and
mov
cli
jg
mov
test
fisubr
mov
and
hlt
nop
inc
xchg
jl
xchg
icebp
lods
pop
rol
push
sbb
add
mov
rcr
stos
rol
int
xor
xor
xchg
pop
push
pusha
cmp
scas
std
xor
inc
bound
mov
ror
les
les
imul
mov
mov
vmovss
inc
lock
fneni(8087
es
mov
mov
or
mov
nop
call
push
stos
scas
fld
ret
cmc
inc
adc
mov
pushf
enter
test
dec
addr16
rcl
inc
sub
fistp
cmps
test
xor
adc
push
sub
cmc
cmc
xchg
dec
out
mov
mov
es
(bad)
das
push
jbe
in
cmp
cmp
inc
fwait
xor
push
push
sbb
sub
jg
mov
sbb
test
jp
jno
pop
out
icebp
sbb
retf
dec
test
into
or
push
mov
inc
adc
ds
adc
imul
push
lahf
ret
mov
cdq
xchg
push
dec
jne
xor
inc
ret
jg
mov
test
int3
leave
cmp
xchg
push
pop
or
out
mov
mov
dec
stc
jo
ja
retf
imul
lods
fstp
clc
shr
xchg
shl
dec
scas
dec
and
jp
and
mov
into
mov
mov
xlat
mov
mov
std
xchg
ss
pop
ss
imul
pop
push
shr
in
push
mov
push
hlt
xchg
call
jmp
jmp
add
outs
cld
mov
out
or
mov
inc
mov
out
mov
jne
es
mov
stos
mov
shl
xchg
and
dec
push
mov
stc
ror
neg
in
out
inc
xchg
jno
aad
or
inc
into
push
jns
test
jg
xchg
out
in
(bad)
movs
test
imul
int3
(bad)
and
sbb
jle
jl
xor
jno
push
dec
sbb
movs
xchg
xchg
sub
pop
rcr
cmps
imul
mov
iret
and
jmp
pop
scas
lahf
lea
dec
outs
inc
test
inc
xchg
les
add
mov
push
into
cs
pop
pop
mov
cmp
in
sti
and
fbld
mov
(bad)
outs
xor
jo
inc
mov
sti
push
shl
pop
fcomp
lock
mov
xchg
sbb
sub
test
arpl
xlat
loopne
inc
push
pusha
sub
test
jno
mov
mov
pop
movs
in
push
push
sub
push
stos
add
mov
rol
jnp
jb
add
mov
movs
lock
jb
pop
enter
pop
lods
pop
movs
dec
aam
stos
shl
mov
jl
jo
sahf
cmp
jle
dec
popa
test
mov
adc
or
neg
cmp
jns
jb
call
mov
push
neg
int
mov
retf
dec
xchg
lods
mov
ret
xor
out
dec
retf
adc
js
sub
adc
into
lods
int3
mov
movs
sub
fwait
mov
in
out
aam
(bad)
xor
fwait
lods
pop
push
push
pop
pop
pushf
outs
sbb
bound
fstp
xabort
dec
and
or
xor
mov
mov
pop
outs
and
cmp
mov
in
sub
movs
cmp
idiv
jb
sahf
fist
or
push
lods
cs
ret
addr16
rol
lds
push
adc
xchg
dec
jmp
ucomiss
cs
cmps
xor
iret
or
(bad)
sub
fsubr
in
or
cmps
mov
mov
mov
xor
aas
js
jo
or
adc
repnz
out
imul
dec
dec
mov
cli
xor
cmps
dec
dec
sub
aas
leave
mov
xor
dec
fcmovb
in
sbb
das
pop
inc
bswap
test
loopne
xchg
mul
adc
jnp
dec
mov
pusha
pop
or
or
adc
cmps
pop
and
mov
push
fsub
xor
jl
dec
cmc
out
push
dec
lods
aad
sub
cmp
fsub
int
lods
xor
mov
sub
into
mov
and
mov
inc
js
fsubr
mov
adc
cli
jns
jp
mov
mov
std
rcl
(bad)
jle
adc
call
mov
ret
out
xor
fdiv
adc
das
jno
xchg
and
(bad)
retf
xchg
hlt
push
test
imul
or
cmc
aaa
add
lods
cmp
sbb
inc
cmp
iret
and
int3
push
call
push
cdq
push
xor
jle
fwait
mov
pop
or
call
fist
dec
push
and
(bad)
and
inc
bnd
stos
iret
sbb
lahf
or
xor
pmaxub
pop
mov
push
mov
retf
push
cmp
ins
(bad)
push
jno
and
sar
nop
test
fnstenv
pop
add
add
xchg
(bad)
neg
mov
jge
jle
aas
mov
shl
fcmove
imul
pusha
in
addr16
jnp
jge
es
icebp
cmps
xor
dec
cmp
pop
and
shl
pop
arpl
js
out
es
shl
cmp
les
into
and
lahf
inc
call
lahf
and
dec
dec
push
outs
jmp
sub
add
cmp
js
shr
or
jge
in
(bad)
(bad)
xchg
jno
movs
push
xchg
xchg
add
push
aas
pop
pop
sub
jno
adc
mov
in
sar
pop
shr
movs
test
sub
repnz
(bad)
popa
mov
bndldx
shl
inc
and
sbb
fistp
adc
mov
and
jns
retf
xchg
outs
sub
aad
xlat
or
lock
(bad)
call
in
pop
mov
mov
cmp
xchg
clc
movs
dec
dec
mov
mov
xchg
loope
sahf
retf
data16
sahf
(bad)
fbld
xor
popf
fstp
add
addr16
push
leave
loopne
out
sub
sbb
add
cmp
leave
sbb
outs
loopne
or
jo
loopne
xor
xchg
scas
pusha
mov
or
fcmovnbe
add
inc
int
mov
jo
sub
jl
repnz
lods
outs
loopne
enter
jmp
rol
push
push
test
ins
push
call
fst
jno
daa
loopne
jge
add
or
add
jo
fwait
xor
and
mov
mov
outs
es
sub
adc
cmp
int3
xchg
(bad)
bound
js
pop
sbb
and
mov
(bad)
out
or
pop
mov
add
(bad)
pop
in
pusha
mov
and
push
call
ret
mov
test
retf
mov
jle
adc
lock
and
fdivp
dec
push
shl
into
dec
fs
xlat
jge
mov
fist
ret
jl
fwait
stos
pushf
pop
dec
int
(bad)
pop
jmp
mov
mov
adc
aam
mov
add
shl
mul
mov
pop
fisttp
aam
jbe
xchg
dec
dec
retf
(bad)
push
xor
sub
jle
test
dec
mov
int3
push
mul
jmp
mov
adc
inc
mov
mov
xchg
retf
pop
mov
jmp
dec
inc
mov
rcr
daa
pop
sub
fcom
imul
and
or
es
xor
lods
aad
and
xchg
jns
in
push
arpl
mov
xor
or
pusha
push
cmp
pop
push
test
or
mov
neg
test
imul
cmp
xor
outs
outs
outs
sbb
inc
inc
test
mov
pop
inc
sub
add
loop
pop
gs
pop
retf
outs
popa
fnstenv
aaa
retf
push
test
adc
push
lahf
pop
fisub
xlat
movs
cli
and
div
mov
lahf
push
shr
ret
xchg
inc
hlt
fs
bound
sub
out
cmp
sahf
movs
out
outs
jne
add
cmps
sbb
push
jle
jno
push
mov
inc
push
jmp
mov
ins
pop
push
jg
or
mov
or
inc
lods
sbb
xchg
ficom
aad
xchg
stc
ret
(bad)
test
div
aaa
ret
mov
iret
lahf
mov
pop
lock
jge
mov
xchg
and
int
call
ja
inc
cmp
popa
ins
das
hlt
mov
movs
imul
in
scas
fdiv
cmp
mov
jnp
pop
mov
pop
push
ins
popa
and
sar
int3
jns
pop
retf
fyl2xp1
push
hlt
push
mov
inc
shr
xchg
pop
mov
adc
xchg
sub
pop
adc
adc
xchg
retf
iret
push
mov
les
pop
or
push
pop
std
ja
xchg
sti
popf
fistp
dec
jns
dec
in
push
mov
in
fisub
jns
aad
mov
fdiv
iret
pop
test
push
jmp
mov
scas
mov
xor
mov
xchg
popa
push
mov
retf
popf
ss
sar
sti
xor
inc
popf
and
mov
pop
jne
push
pop
pop
jbe
inc
es
adc
imul
inc
imul
sub
imul
push
fild
mov
add
inc
push
add
movs
push
ror
std
sbb
cmp
into
xor
pop
retf
out
mov
cmp
or
pop
cmps
mov
mov
mov
sbb
jae
dec
pop
inc
and
push
inc
xor
pop
xchg
gs
imul
jmp
or
xchg
and
add
nop
sbb
call
add
mov
jno
lock
push
fnsetpm(287
adc
mov
push
mov
jl
les
push
test
iret
sti
mov
sbb
cmp
sub
test
in
and
push
aaa
call
fadd
mov
sahf
jg
push
clc
in
(bad)
mov
loopne
sub
add
scas
jns
push
shl
in
and
daa
arpl
inc
jle
test
cmp
enter
imul
std
push
pop
add
jmp
add
pop
ror
stos
shl
and
or
sub
mov
lock
fld
inc
in
mov
cli
mov
push
cmps
movs
pop
and
test
dec
aaa
sub
leave
fnstsw
aaa
loope
mov
dec
in
mov
popf
mov
sub
ficom
fst
jge
cmp
add
les
sbb
push
sahf
mov
dec
les
inc
mov
int
rcl
adc
inc
or
xor
and
push
mov
sbb
nop
int3
cmp
nop
shr
and
test
mov
mov
mov
mov
retf
xchg
outs
inc
out
fs
int
push
in
movs
and
cmp
sbb
inc
pop
xchg
int3
aad
or
and
das
dec
mov
inc
imul
addr16
pop
push
mov
ds
dec
(bad)
ret
les
inc
pushf
popa
in
mov
and
adc
add
aam
jmp
leave
scas
test
mov
aam
fwait
movs
rcl
fsubr
push
adc
movs
jns
xchg
pop
mov
pop
jl
(bad)
xchg
repz
sbb
cs
movs
mul
test
push
jns
(bad)
mov
and
mov
mov
dec
lods
jns
jb
and
push
out
push
push
jle
xchg
xor
xchg
stos
xor
jecxz
adc
(bad)
or
(bad)
and
imul
jmp
adc
jg
(bad)
mov
lds
pop
iret
addr16
(bad)
std
sbb
cli
aam
arpl
and
ins
mov
into
cmp
sub
pop
retf
push
pop
and
std
lods
fcomp
xchg
and
fmul
movs
popa
fs
into
push
xchg
push
bound
pop
add
pop
faddp
pop
push
xchg
jne
scas
je
xor
div
add
sub
or
fidiv
out
mov
push
cmp
push
and
and
cmp
sbb
addr16
sub
shr
jnp
test
fnsave
dec
inc
xchg
test
das
(bad)
repnz
pop
sbb
cmc
sub
lock
arpl
mov
push
inc
fild
sbb
push
jo
fisttp
out
loop
repnz
push
je
push
sahf
(bad)
dec
jb
fdiv
adc
(bad)
stos
xor
retf
or
and
xlat
pushf
mov
push
fsubr
sub
retf
push
(bad)
imul
shl
xchg
sub
cli
or
jnp
dec
fld
out
cmps
repnz
push
add
lds
mov
xchg
xor
sub
jne
pusha
jbe
scas
nop
ins
sub
js
add
outs
mov
pushf
cdq
xchg
inc
sub
mov
jmp
icebp
mov
call
mov
sub
fdiv
fist
jo
aam
or
dec
jnp
retf
inc
push
leave
push
jle
mov
dec
mov
mov
mov
frstor
sbb
or
sbb
xor
pusha
movs
or
fistp
sub
iret
dec
adc
and
xchg
test
sub
pusha
or
push
push
cmps
clc
xchg
jno
(bad)
pop
div
movs
mov
je
cwde
loop
stc
jno
push
push
sbb
xor
or
and
popf
movs
retf
mov
and
xor
scas
int
add
fisttp
pop
mov
call
stc
retf
fnsave
sbb
cwde
inc
ins
mov
mov
sbb
nop
jecxz
aad
cdq
movs
ror
mov
(bad)
mov
jmp
repnz
xchg
mov
cli
mov
add
push
mov
mov
push
stc
mov
dec
out
lahf
(bad)
cs
pop
add
adc
push
add
lea
pop
push
sub
sbb
cli
xchg
(bad)
out
shl
inc
aas
and
push
sbb
imul
inc
dec
jb
mov
iret
mov
cli
cmp
ins
add
push
dec
push
cmc
push
pop
xlat
hlt
repnz
loopne
jbe
mov
jmp
lahf
sbb
ret
inc
outs
xor
je
jmp
ins
nop
push
jbe
pop
lea
adc
adc
mov
hlt
inc
daa
repnz
pop
std
xchg
cmp
mov
ja
mov
dec
test
sbb
ins
add
inc
mov
jb
and
push
xor
pop
mov
lods
sbb
mov
cmp
add
bound
ins
repz
jp
xchg
dec
cmp
adc
sahf
je
fwait
lds
hlt
iret
movs
jae
dec
dec
outs
aam
test
jecxz
cmp
or
inc
mov
xchg
iret
sbb
hlt
sub
test
nop
sub
mov
xchg
(bad)
dec
push
jge
mov
mov
or
push
pop
add
ins
or
and
mov
cli
add
add
(bad)
aad
iret
fld
iret
and
not
or
fldenv
cmps
pop
pop
cdq
mov
xchg
mov
out
scas
out
pop
sub
mov
push
sbb
rcr
or
fs
fs
jno
and
fiadd
mov
je
add
sbb
loopne
mov
dec
(bad)
mov
aam
sbb
mov
adc
pop
jb
out
adc
cld
cdq
or
aaa
je
aam
adc
das
cmp
retf
jle
push
pop
pusha
lea
scas
or
jle
and
call
or
and
scas
inc
sahf
popa
mov
imul
sbb
and
outs
dec
retf
dec
ret
push
or
jecxz
jg
pop
or
fwait
arpl
jne
popf
sbb
push
add
in
aad
into
cmp
test
lahf
bound
push
sbb
adc
nop
retf
cmp
cmc
mov
or
mov
shr
nop
push
push
xchg
or
jno
dec
sbb
aas
pop
jns
cli
hlt
mov
cld
jge
mov
ins
in
pop
jb
daa
xor
xor
and
daa
jae
pop
jmp
shr
or
adc
out
enter
pop
lds
ret
sbb
inc
ins
mov
sahf
fwait
rcl
das
leave
pushf
inc
push
scas
in
cwde
std
out
fidivr
ror
clc
push
mov
sbb
push
ins
ins
sub
mov
ficomp
adc
dec
mov
inc
mov
out
push
xlat
jbe
ds
shr
sub
push
xor
add
dec
lods
imul
dec
push
push
mov
(bad)
jp
xchg
test
jo
out
sbb
pop
xchg
imul
jne
xchg
inc
pop
bound
mov
jge
ror
jg
add
add
sbb
stc
mov
pop
fiadd
inc
sub
outs
inc
dec
jge
imul
lea
push
add
frstor
mov
cmp
mov
bound
pop
push
repz
add
push
std
hlt
out
mov
xchg
(bad)
cmc
lock
mov
mov
mov
loop
(bad)
mov
xor
int
cwde
loope
hlt
ret
pop
and
mov
daa
in
jns
pop
xor
sahf
push
leave
mov
jle
push
inc
inc
push
jecxz
xchg
in
xchg
mov
cmp
xor
mov
push
call
xchg
push
xchg
retf
xchg
ins
sbb
cmp
xor
push
jl
vmovupd
and
sbb
dec
imul
in
lods
pushf
sbb
daa
movd
imul
push
inc
cdq
jmp
movs
add
mov
mov
add
mov
jne
popf
fsub
inc
xchg
pop
xlat
mov
sbb
pop
push
mov
stos
in
ins
iret
(bad)
sub
scas
shl
retf
sbb
dec
lea
sar
mov
int
adc
cmp
adc
inc
jp
in
(bad)
xlat
sub
rcr
mov
mov
or
rcl
push
out
popf
mov
sti
lahf
jecxz
mov
out
sar
iret
cwde
fstp
fadd
cli
out
in
dec
sub
pop
dec
shl
aas
nop
mov
cmp
clc
ret
jae
retf
out
repnz
xor
mov
jmp
sub
div
cmc
jl
(bad)
xchg
jmp
les
jle
dec
not
sti
call
not
dec
out
movs
inc
aas
scas
adc
out
das
mov
pop
fs
inc
arpl
ins
sahf
fdiv
cmp
pop
adc
push
aas
gs
add
out
bound
xor
out
xor
clc
fst
retf
xor
fcom
pop
jne
mov
push
add
mov
inc
xchg
xchg
inc
shr
shr
rcl
stos
push
pop
dec
dec
sub
pop
in
ror
cmp
jecxz
or
cmp
nop
xchg
cwde
out
sbb
shl
push
inc
jo
ret
cmp
shrd
pop
mov
xchg
cmp
aaa
in
mov
jno
sbb
xor
cmps
test
bound
pop
jge
lea
cmp
shr
in
into
mov
cmp
adc
pop
ror
movs
jl
icebp
mov
shl
fldenv
fs
add
cmc
test
jecxz
ja
push
ret
adc
ins
mov
or
push
fcmovnb
pusha
push
jns
push
repz
movs
mov
inc
xchg
jge
mov
fwait
xor
pmaxub
inc
setb
xchg
jmp
stc
xor
fsubr
xchg
in
pusha
stos
xchg
xchg
mov
push
or
test
in
or
popa
or
cmp
dec
dec
ja
add
clc
jp
adc
cdq
mov
mov
push
xor
and
dec
aaa
mov
cdq
push
cwde
imul
ja
retf
(bad)
mov
pushw
and
ss
mov
jmp
movs
test
dec
rol
or
xchg
imul
adc
mov
(bad)
rcr
jle
jecxz
mov
cmp
cdq
mov
es
shl
out
(bad)
out
test
or
(bad)
jecxz
outs
call
(bad)
xchg
test
jl
test
pop
inc
mov
sub
sbb
loop
std
inc
dec
mov
mov
and
inc
jns
das
sahf
push
(bad)
fisubr
mov
aaa
push
fmul
pop
loope
adc
inc
push
outs
addr16
mov
stc
repz
bound
adc
push
inc
inc
xchg
mov
push
mov
addr16
sub
adc
imul
add
fld
cmps
jb
mov
xchg
push
loop
xor
stos
leave
dec
fdivr
adc
jmp
jge
jbe
or
nop
gs
scas
cld
jno
sbb
test
xor
jo
push
aas
add
es
mov
dec
mov
push
outs
fwait
inc
in
pop
mov
out
pusha
adc
and
mov
add
push
fcom
xor
push
mov
and
mov
dec
mov
push
icebp
sbb
jmp
cs
mov
leave
sbb
mov
fwait
sbb
popf
cmp
xchg
jg
mov
stc
(bad)
pop
into
xchg
xchg
push
nop
outs
loope
push
cs
in
in
cmp
repnz
and
shl
or
std
(bad)
movs
les
mov
push
call
fisubr
call
mov
add
out
dec
test
test
cmp
xchg
mov
(bad)
sar
in
mov
pop
sti
ss
lock
(bad)
scas
test
or
xor
mov
outs
push
fiadd
jecxz
cmp
nop
push
jg
cdq
add
(bad)
fbld
gs
(bad)
adc
mov
adc
scas
imul
jg
add
aad
mov
jne
push
cmps
mov
and
rcr
out
int
pop
jne
test
aad
push
xor
enter
mov
xchg
call
or
in
rcl
pop
shr
test
or
stos
lahf
aas
mov
jmp
xor
push
fst
repz
push
or
test
xchg
in
sti
cmp
cmp
jp
mov
jg
ins
mov
frstor
xchg
pop
push
retf
cmps
es
call
mov
add
test
pop
lock
jg
lds
loop
jmp
paddusb
cmp
jno
push
data16
scas
pop
xor
repnz
sub
xchg
pop
addr16
mov
inc
xor
icebp
mov
clc
je
fldenv
push
in
xchg
add
nop
push
push
lods
jns
mov
aaa
fild
jae
jnp
ficom
xor
pop
add
daa
mov
sub
add
stc
xchg
popf
or
xor
sbb
jl
cmp
xchg
mov
int3
outs
pop
or
pop
je
dec
jbe
jbe
(bad)
(bad)
xlat
adc
imul
or
sbb
xchg
add
addr16
mov
xor
dec
icebp
or
frstor
int
pop
repz
mov
popa
cs
scas
push
xchg
push
(bad)
jb
loop
and
and
mov
lds
out
repnz
retf
je
jl
out
push
ins
stos
mov
dec
sbb
fist
sub
jecxz
scas
jle
fadd
or
loope
jp
es
call
pop
sahf
inc
push
fcomi
jmp
sbb
mov
js
in
sub
scas
bound
imul
push
cwde
ds
pop
adc
push
rcr
aad
or
or
out
xchg
lahf
sbb
xchg
push
sar
adc
inc
mov
scas
loopne
or
push
or
xchg
pushf
sbb
sub
dec
cld
push
sub
cmp
adc
out
mov
ja
mov
jge
in
xlat
xor
xor
repz
imul
stc
leave
cmp
sti
xor
pop
sar
mov
push
ret
lock
cmp
not
data16
enter
pop
imul
pop
sub
stos
mul
cli
or
sti
out
mov
test
mov
add
bound
lea
dec
mov
(bad)
outs
fsub
xchg
inc
cli
mov
adc
adc
inc
pop
jecxz
adc
push
push
sub
xor
or
mov
mov
test
shl
or
shl
icebp
imul
sar
aas
addr16
ss
rol
inc
(bad)
loopne
repnz
dec
inc
(bad)
in
aam
xor
mov
ffree
and
sar
xor
push
mov
out
cmc
mov
jecxz
xchg
pop
pop
jecxz
and
jmp
sbb
addr16
cs
fmul
outs
push
cmc
mov
cmp
scas
jbe
bound
pop
test
dec
sar
jge
sub
push
cmp
mov
mov
pop
ret
sahf
pop
loope
pop
mov
enter
dec
mov
xchg
push
push
dec
fsubr
mov
inc
arpl
(bad)
mov
bound
adc
jle
cmp
cmp
(bad)
sahf
mov
cmp
cmp
push
mov
scas
add
(bad)
pusha
jge
jae
adc
jbe
mov
ficomp
mov
(bad)
lea
or
sbb
sti
add
dec
loopne
frstor
mov
push
imul
push
inc
ret
or
pop
rcl
ss
inc
jnp
mov
push
or
push
pop
imul
jl
mov
and
test
mov
cmp
int
xor
retf
pop
loop
in
jne
cmp
inc
iret
cmps
add
or
jl
test
js
or
inc
hlt
mov
xchg
xlat
inc
aas
pop
sbb
scas
movs
rcr
jmp
popf
or
or
imul
jne
imul
les
sbb
pusha
test
inc
js
imul
in
cvtps2pi
or
sub
loope
add
push
or
jno
dec
sbb
cmc
mov
fsub
xchg
sub
mov
repz
daa
imul
cli
ins
outs
dec
adc
rcr
inc
cdq
cli
dec
dec
rol
cdq
adc
cmp
sub
adc
mov
imul
cmp
xchg
xlat
push
cmp
fxch
mov
mov
sbb
test
ins
fdivrp
and
adc
adc
mov
or
in
and
add
data16
push
inc
xchg
pop
leave
cmp
mov
aam
add
iret
stos
push
call
sbb
out
lods
push
inc
xchg
ds
dec
sbb
(bad)
std
std
inc
imul
dec
scas
jns
and
cmp
ffreep
jno
mov
ja
mov
pop
stos
pusha
cld
or
mov
mov
sbb
inc
xchg
dec
dec
outs
fdiv
ret
and
push
push
dec
ins
lods
xchg
(bad)
mov
arpl
or
pop
cmp
fwait
aad
dec
mov
xor
mov
popa
jbe
nop
cdq
add
fcomi
mov
ret
sub
push
inc
shl
and
inc
movs
xchg
cmps
call
mov
shl
dec
pop
dec
(bad)
je
les
cwde
sub
and
pop
ror
add
stos
push
xchg
pop
stos
icebp
fisttp
mov
lea
xlat
cs
ror
sahf
data16
mov
imul
mov
xor
inc
jne
mov
jl
dec
sub
sbb
stos
dec
mov
xchg
push
cmp
fs
(bad)
xchg
pop
(bad)
or
mov
lds
cmp
lock
mov
out
mov
rol
daa
loop
or
mov
cmp
popf
scas
retf
(bad)
clc
stos
nop
cmp
xchg
or
xchg
(bad)
jle
xchg
fisubr
xor
sbb
adc
adc
pop
stos
cmp
mov
and
hlt
or
dec
add
rol
ret
js
movs
mov
push
sbb
jmp
xchg
test
or
adc
jg
push
inc
or
jne
push
hlt
cmp
cmp
hlt
repz
push
pop
sbb
inc
adc
or
neg
imul
mov
inc
jg
in
retf
aam
xchg
mov
pushf
xchg
leave
push
test
dec
ins
scas
gs
in
repnz
xchg
ins
les
push
sub
xchg
mov
add
mov
or
imul
or
popf
mov
jmp
shr
push
iret
arpl
fdivr
lahf
mov
repnz
push
jae
std
adc
inc
ja
push
cli
movs
mov
sub
and
jmp
aaa
adc
xor
test
sbb
xor
ins
xchg
cmp
fadd
adc
popf
rcr
push
mov
arpl
add
push
in
fucomi
hlt
cs
fsub
call
jg
ins
sub
dec
pop
xchg
fadd
mov
xchg
ja
sub
pushf
test
js
(bad)
and
adc
ins
(bad)
mov
mov
push
outs
fwait
cmp
mov
das
adc
mov
or
in
outs
push
in
into
jb
sbb
mov
xchg
ss
adc
fld
popf
cld
scas
popf
lods
(bad)
sub
cmp
mov
cmps
xor
sbb
(bad)
imul
ror
imul
and
jp
dec
mov
arpl
dec
cmp
xor
sub
jnp
add
shr
jmp
mov
adc
iret
push
xor
jnp
adc
fbld
sahf
popf
inc
mov
cmp
and
mov
clc
mov
pop
test
xor
pushf
sti
dec
mov
xchg
cmps
dec
cs
(bad)
int3
mov
pop
cmp
cmps
jo
movs
aas
ja
jo
sub
retf
scas
pushf
jo
imul
inc
sbb
mov
in
sub
xchg
stos
ss
jg
adc
xlat
loope
pop
push
dec
mov
xchg
and
sub
inc
xchg
sbb
cdq
and
les
dec
mov
adc
imul
jno
jbe
gs
fild
sahf
xchg
aad
sub
push
sbb
mov
xchg
lea
and
or
inc
and
or
xchg
cs
mov
out
dec
div
ds
into
popf
add
or
(bad)
(bad)
fwait
push
test
or
leave
pop
sub
push
dec
xor
lds
pop
mov
adc
adc
or
icebp
inc
and
std
std
cld
outs
scas
xor
sub
fwait
icebp
mov
stos
clc
imul
dec
mov
cmps
(bad)
in
fndisi(8087
test
dec
sub
jle
dec
pusha
test
imul
mov
rcr
test
sub
test
dec
daa
push
or
lahf
scas
pop
shl
cmp
cld
test
iret
pushf
leave
in
inc
mov
cmp
or
mov
call
xor
jnp
ja
(bad)
das
stos
dec
rcl
mov
lock
mov
sbb
sahf
mov
(bad)
and
adc
(bad)
xchg
mov
xor
jecxz
les
or
imul
sub
outs
mov
aas
aam
pop
sar
mov
in
inc
jne
ja
retf
bnd
test
cld
mov
or
not
mov
(bad)
stos
rcl
or
jb
gs
idiv
push
out
fisub
scas
push
sub
or
stos
call
dec
imul
fucomip
test
xchg
frstor
sbb
out
(bad)
push
xchg
rcl
pop
in
shl
xchg
inc
arpl
repz
jne
fld
and
mov
lea
lds
dec
call
cli
cmp
shl
imul
xor
adc
adc
xchg
lds
lods
loope
not
pusha
mov
sbb
mov
data16
xchg
loopne
loopne
mov
jp
jle
rep
aad
in
aas
js
push
mov
pop
ret
adc
add
mov
pushf
arpl
cmp
sbb
sbb
mov
je
push
xor
out
mov
(bad)
adc
(bad)
mov
lock
sbb
call
call
rol
dec
sbb
retf
mov
rcl
imul
popa
mov
add
xchg
movs
in
xor
inc
xor
push
mov
fwait
js
loope
add
pusha
outs
push
and
scas
cmp
pop
push
xor
add
mov
mov
adc
in
call
fcomi
loope
xor
int3
out
xchg
inc
xor
jns
push
mov
inc
or
xor
das
mov
pop
call
pop
adc
sahf
sahf
sbb
adc
xchg
pop
or
jp
add
xchg
push
jmp
dec
and
sbb
mov
pop
stos
pop
pop
pop
cmps
div
movs
data16
(bad)
repz
ror
cmp
inc
leave
pushf
adc
add
jb
dec
lds
into
test
data16
mov
push
leave
and
addr16
pop
sbb
and
outs
sbb
ds
jb
or
ins
and
lods
jmp
aad
ins
inc
fnstsw
jg
mov
mov
pop
jne
ret
mov
cwde
xchg
xor
(bad)
gs
ss
sub
addr16
jne
mov
mov
mov
lds
xchg
arpl
mov
mov
add
sbb
(bad)
sbb
sti
pop
sbb
cld
mov
sbb
test
jns
inc
or
xacquire
int3
sahf
ds
dec
cld
xor
jns
stos
or
cmp
mov
div
loop
sub
repz
int
add
sbb
ror
in
mov
int
sub
xor
cmps
pop
leave
div
mov
mov
bound
setp
mov
retf
sbb
inc
ins
in
mov
sar
xchg
mov
mov
in
adc
cmps
rol
dec
dec
or
sub
push
add
xchg
(bad)
repnz
push
pop
into
jp
aaa
into
int
pusha
je
jmp
inc
jp
or
aad
(bad)
cmc
mov
(bad)
mov
jae
lds
pushf
mov
pop
and
mov
outs
sbb
mov
dec
dec
lea
sbb
add
(bad)
mov
mov
dec
lods
in
xchg
rol
out
or
jge
xchg
movs
jl
xor
sub
mov
iret
test
and
and
mov
pop
add
cdq
sub
add
pop
ds
jl
outs
add
xchg
es
push
fwait
adc
mov
hlt
mov
mov
or
mov
and
(bad)
daa
cmp
xor
cmc
mov
cld
mov
dec
lods
aad
or
xlat
push
jne
cmp
mul
jmp
xchg
dec
push
xlat
cmp
in
call
cmp
in
loopne
clc
push
rcr
mov
or
(bad)
fcmovb
loope
out
inc
cmp
arpl
cs
nop
addr16
mov
int
mov
loop
cmp
jbe
dec
lds
call
and
xor
in
mov
add
mov
sahf
in
imul
in
or
imul
cmps
sbb
rcl
loopne
adc
(bad)
jb
pop
jo
sub
jecxz
push
push
sahf
cdq
sub
xchg
push
not
cmps
xor
mov
sub
push
xor
ficomp
dec
sub
adc
outs
mov
cmp
cmp
inc
sahf
and
call
xor
sbb
aaa
jp
cmps
or
les
rcr
dec
mov
cmps
sbb
inc
minps
adc
cdq
int3
sub
adc
js
in
jnp
sub
or
jmp
lods
push
push
nop
ds
mov
cwde
cmp
cdq
sbb
dec
call
jmp
push
scas
sbb
stos
rol
ret
mov
jo
sbb
lock
push
in
loop
stos
ds
idiv
xor
xchg
sbb
addr16
in
add
mov
sbb
test
or
or
push
or
aam
cmc
mov
jbe
pop
pop
fdivr
bound
in
das
push
sti
cli
shl
fs
push
jp
or
pop
std
ror
pop
test
int
push
ret
mov
lea
test
pop
mov
cs
inc
push
out
loope
sbb
dec
mov
cmc
outs
xchg
bound
fisttp
add
ins
sub
out
mov
add
adc
movs
sbb
movs
cmp
xor
mov
xor
lock
mov
imul
mov
imul
inc
xor
push
test
out
cmp
jl
out
add
popf
pop
jnp
vandps
sbb
jge
pusha
xchg
mov
pop
out
sti
out
xor
cmp
cli
sbb
cmp
push
shr
mov
stos
das
and
cmps
mov
jle
jge
or
fmul
pusha
or
adc
add
cmps
sub
movs
mov
mov
dec
xor
sbb
movs
mov
adc
nop
cmp
fld
out
shl
jb
ror
pushf
push
out
xlat
bound
inc
out
mov
les
in
pushf
inc
xor
sub
clc
mov
rcl
outs
cs
retf
xchg
nop
sbb
test
mov
je
ror
xor
or
das
dec
les
cwde
test
cwde
scas
shl
ror
dec
dec
shr
call
jnp
ret
ins
ror
jg
xor
std
pop
jno
mov
dec
mov
enter
fadd
mov
lods
jno
retf
data16
and
pop
mov
or
mov
xchg
push
mov
adc
push
aad
xor
add
ins
pop
mov
out
mov
(bad)
cmp
dec
and
arpl
loop
cli
jns
fld
call
fdivr
xchg
cmp
pop
inc
xchg
cmp
shl
xlat
movs
push
test
cli
pop
xor
xor
dec
(bad)
movs
in
int
cwde
idiv
and
jmp
fisubr
mov
hlt
mov
aad
test
aas
js
mov
pushf
retf
cmp
pop
push
iret
and
retf
popf
push
dec
push
inc
or
emms
out
shr
sub
jecxz
loopne
(bad)
adc
jmp
(bad)
scas
sbb
inc
pop
mov
int
stc
mov
test
cli
xlat
(bad)
xor
xor
or
jecxz
test
jmp
cwde
aaa
push
pop
jno
adc
inc
mov
test
in
cmp
mov
xlat
sub
jne
lock
fwait
jae
fisub
cmp
(bad)
cdq
jecxz
stos
inc
cmp
push
mov
jmp
enter
(bad)
sar
jl
into
inc
enter
js
push
push
fmul
lds
sbb
push
aad
sahf
xchg
push
(bad)
cli
fcomip
in
rcr
push
push
mov
pop
ret
mov
fimul
inc
loop
xchg
(bad)
ss
prefetch
or
push
push
inc
test
ins
frstor
adc
xchg
xlat
mov
scas
dec
push
and
jmp
mov
jmp
dec
ins
call
or
pop
test
and
fiadd
or
mov
jns
fadd
sub
xchg
mov
into
or
stos
nop
sbb
retf
dec
lea
mov
iret
leave
adc
jbe
js
popf
dec
test
into
iret
out
lea
push
inc
in
pop
and
jl
loope
sub
jle
mov
es
in
sub
xor
jae
call
xlat
add
adc
jno
sub
(bad)
call
and
frstor
push
movs
push
jns
loope
mov
or
inc
push
xchg
loope
cmc
movs
dec
xchg
dec
adc
fidiv
fistp
in
lea
test
lods
dec
mov
sbb
inc
iret
es
retf
stos
add
add
push
sbb
add
sub
push
sbb
pop
sbb
pop
leave
cmp
sbb
aam
ror
jl
push
or
clc
dec
sar
icebp
xchg
mov
xchg
and
mov
dec
jae
(bad)
icebp
jns
sub
outs
push
cwde
mov
rcl
sbb
sbb
mov
cmps
dec
sub
cld
xchg
call
imul
ins
(bad)
(bad)
icebp
xchg
outs
mov
jno
sub
lods
scas
adc
sbb
inc
ficomp
jmp
push
rcr
out
jne
jecxz
in
cdq
pop
jl
or
ja
xchg
loope
out
xchg
inc
mov
xlat
pop
mov
sbb
lods
ss
sub
inc
mov
pop
adc
xor
es
aaa
inc
add
outs
sub
fist
xchg
out
push
iret
dec
push
test
fs
pop
pop
pusha
movs
xor
aam
loop
add
sti
xchg
(bad)
push
sahf
test
cmp
test
into
sbb
(bad)
neg
fistp
in
retf
push
mov
push
or
icebp
fld
bound
pop
and
sub
lock
jo
sub
das
mov
ret
aaa
pushf
sahf
aaa
sbb
stos
mov
dec
mov
rep
xchg
pop
aam
pop
pop
push
sub
pushf
lods
rol
mov
out
dec
dec
rcr
push
cs
pop
repz
aaa
lea
mov
ret
fwait
push
pushf
sub
mov
pop
xor
pop
shr
pusha
or
jnp
dec
jb
mov
call
lock
pop
push
sbb
xor
loopne
(bad)
lods
mov
shr
pusha
xlat
jns
enter
repz
pop
fs
(bad)
fld
ins
pop
(bad)
(bad)
dec
fdivp
out
hlt
or
neg
sbb
add
daa
call
pop
mov
mov
xor
xor
jge
clc
das
lahf
iret
rcr
les
mov
jns
dec
sub
push
and
inc
das
call
ret
or
in
jmp
out
or
xor
movs
dec
mov
mov
jne
add
fs
dec
mov
and
add
stc
xchg
add
aas
dec
sbb
mov
mov
mov
imul
jne
enter
es
in
popf
imul
iret
push
sbb
jmp
ret
add
sbb
dec
xor
aam
or
inc
rcl
lahf
sbb
hlt
inc
jmp
xor
test
js
inc
mov
test
cmp
sbb
out
nop
xor
sbb
fidivr
bound
nop
adc
in
dec
sub
nop
push
pusha
test
dec
stc
inc
adc
mov
addr16
fld
test
xchg
xchg
scas
cdq
(bad)
fld
fldlg2
rcr
mul
fdivr
inc
lods
sub
(bad)
jl
cmp
xlat
jo
popa
loop
lea
fadd
xor
or
mov
jl
lahf
loope
sbb
lea
xchg
xchg
push
imul
and
mov
stos
dec
pop
xor
test
xor
not
enter
add
jns
ja
lods
pusha
and
mov
add
mov
lock
cmp
lods
mov
call
movs
cmp
mov
int
retf
pop
loopne
rcr
jl
pusha
xchg
mov
loope
inc
imul
push
push
cmp
call
cmp
pop
sbb
adc
(bad)
arpl
push
xchg
str
mov
xlat
xchg
mov
daa
xor
xor
dec
mov
sub
or
bound
aad
out
push
mov
add
xchg
or
repz
jge
ret
ret
outs
(bad)
pop
jp
push
push
mov
loopne
push
outs
mov
and
or
and
mov
enter
sbb
dec
scas
mov
repnz
xchg
hlt
inc
pop
push
into
mov
and
popf
loope
inc
adc
cs
xchg
das
(bad)
pop
xchg
pcmpeqd
and
jecxz
pop
pop
out
adc
pop
mov
arpl
cmp
pop
fsub
sar
xchg
hlt
ss
data16
inc
or
cld
clc
pop
sbb
or
xchg
enter
inc
adc
adc
push
mov
je
popf
sbb
pushf
loope
dec
pushf
out
test
pop
jl
dec
push
dec
cdq
jmp
lods
ja
dec
iret
stc
nop
mov
shl
mov
cmp
and
test
xchg
stos
test
(bad)
add
sbb
and
dec
int
loope
and
push
out
xor
in
in
adc
test
ret
sub
push
arpl
mov
cdq
hlt
daa
das
xor
adc
xor
sub
mov
mov
or
adc
test
(bad)
sub
and
mov
and
jbe
(bad)
nop
xor
jl
aad
mov
cld
scas
sub
cli
sub
dec
adc
cmc
shl
test
mov
inc
inc
sahf
test
or
(bad)
je
fcomp
pop
push
je
cs
pop
aas
ss
lock
out
add
pusha
shr
mov
out
(bad)
pop
mov
jnp
sbb
neg
invd
xor
cmc
inc
call
add
enter
in
mov
inc
sbb
jl
fsubr
ds
lahf
add
jbe
mov
bound
cmps
mov
or
sub
mov
mov
xor
cwde
mul
xchg
xor
js
xchg
sbb
ret
jg
cmp
fsub
mov
adc
outs
or
push
sbb
and
fisttp
fwait
cwde
mov
fcomp
adc
or
or
add
push
add
aad
fistp
adc
(bad)
push
cmp
push
sub
jl
jmp
mov
push
add
pusha
shl
out
popa
int3
stos
mov
push
sub
xchg
(bad)
mov
cmp
xchg
clc
(bad)
ds
dec
test
imul
pop
pop
dec
or
cmp
cs
mov
pushf
inc
mov
movs
bound
mov
adc
shr
outs
cmp
push
cmp
in
ret
pop
out
out
and
jle
fnstsw
std
movs
out
js
add
push
mov
out
out
jbe
rol
pop
mov
cli
je
loop
and
sbb
scas
bound
push
push
mov
bound
movs
xchg
adc
imul
inc
hlt
loope
stos
jl
mov
out
stos
sbb
clc
add
add
test
or
rcl
pop
mov
mov
ss
mov
int
add
je
dec
mov
mov
dec
das
pusha
mov
inc
xor
sub
dec
mov
xor
cmps
stc
jnp
loop
sub
mov
sub
jle
icebp
xchg
mov
mov
adc
dec
(bad)
adc
mov
sub
imul
in
push
fmul
add
add
mov
pop
add
sti
xchg
nop
jb
mov
add
push
outs
pop
test
pop
loopne
jb
sbb
jb
test
inc
xor
(bad)
pop
out
aas
pop
pop
call
push
mov
sbb
fs
fist
ds
jp
repz
pop
sub
xchg
out
push
lods
sbb
out
loop
jmp
dec
dec
out
lods
push
fnop
jo
ss
mov
retf
and
es
movs
cli
(bad)
jmp
outs
lea
call
mov
int3
add
icebp
je
jmp
in
mov
add
adc
out
mov
out
xlat
pusha
dec
test
fwait
imul
lds
xchg
jg
lods
scas
or
xlat
xlat
jle
popf
xchg
mov
sub
cmps
pop
push
xlat
add
xchg
dec
dec
pop
jnp
mov
pusha
and
lods
aas
adc
movs
int
out
mov
mov
adc
and
mov
lock
neg
inc
ins
and
mov
out
inc
test
int3
dec
dec
arpl
adc
jne
cmp
test
mov
mov
sub
adc
pop
lods
mov
lock
call
frstor
adc
xor
push
data16
or
pusha
lds
retf
(bad)
ja
jg
ret
mov
scas
imul
lahf
scas
rol
retf
xchg
jo
jno
push
xchg
call
lea
adc
sub
loopne
adc
aam
push
push
dec
mov
mov
lahf
int3
mov
cs
jbe
and
sub
jnp
scas
inc
(bad)
ds
leave
jbe
mul
cmp
divps
xchg
xchg
(bad)
pop
or
inc
or
xor
adc
sub
es
das
xor
ror
xchg
lock
pushf
jo
mov
xlat
inc
push
aas
arpl
hlt
(bad)
outs
cmp
pop
aam
adc
setl
mov
xor
mov
mov
adc
scas
jb
mov
dec
popf
jecxz
mov
or
cld
jbe
mov
xor
xor
and
xor
std
fwait
jae
add
in
add
ds
test
sti
(bad)
aaa
cmp
fdiv
cs
xchg
leave
into
mov
pushf
enter
mov
scas
add
xor
call
mov
arpl
add
and
ins
push
out
mov
adc
retf
es
cli
jp
and
ds
mov
fsub
scas
jg
sahf
fisttp
sub
stos
dec
jo
push
push
aad
and
jae
cli
fld
jge
movs
cs
je
or
ret
js
in
and
data16
push
enter
movs
fisub
fidiv
push
push
dec
or
ins
push
in
xlat
lods
push
inc
jle
jge
(bad)
or
out
inc
and
sbb
xchg
dec
or
lds
pop
sbb
jne
fld
cmp
js
add
xor
jbe
aaa
xchg
dec
loop
out
in
enter
js
sub
jno
int
ins
cmp
pop
adc
scas
jmp
jp
mov
mov
and
jno
xor
and
retf
stos
rcr
jno
call
stc
push
test
outs
jmp
adc
(bad)
loopne
cmc
ficom
fisttp
xchg
mov
fdivr
retf
in
sbb
lods
jp
xor
adc
fs
std
inc
and
jmp
movs
or
jne
std
or
sub
jne
mov
out
popf
pop
cs
mov
enter
shl
adc
xor
not
paddsb
jge
scas
cmovnp
movs
mov
jo
sbb
xchg
sub
dec
repnz
nop
xor
dec
aam
mov
push
fcom
int
adc
inc
and
push
int3
aad
adc
xchg
ret
dec
push
adc
sar
inc
(bad)
push
mov
js
repz
pusha
cmp
stos
add
mov
nop
(bad)
adc
stos
mov
pop
lock
(bad)
mov
rcr
lea
push
push
xchg
scas
mov
je
xchg
push
(bad)
and
(bad)
repz
ror
xchg
xor
xor
fimul
adc
ds
cmps
imul
jl
xlat
xor
outs
xor
rcr
xlat
je
cmps
xor
sbb
iret
dec
sub
test
mov
ja
pop
(bad)
into
add
or
inc
push
aad
inc
in
xchg
inc
jmp
push
push
dec
jae
cmp
test
(bad)
and
add
mov
(bad)
fs
popf
mov
lahf
clc
fisubr
bound
mov
sbb
or
sub
xchg
mov
or
fsub
push
mov
in
push
ret
fnstsw
sbb
jmp
xor
mov
mov
test
xchg
int3
cmps
adc
xor
bound
repnz
and
adc
or
sbb
mov
pop
jle
out
xor
(bad)
rcl
sub
adc
clc
add
imul
inc
js
aad
stos
std
iret
mov
jbe
pop
sbb
push
pop
sbb
jle
cmps
jecxz
cmp
pop
add
xchg
loop
mov
dec
push
mov
std
xor
cmp
ins
pop
imul
fistp
mov
aaa
aas
mov
xlat
das
jae
push
icebp
into
lahf
lock
sbb
push
add
jecxz
jmp
jmp
push
in
bnd
jl
mov
loop
push
enter
adc
or
sbb
daa
(bad)
sub
inc
out
aas
mov
mov
aad
ror
retf
and
push
aad
cmp
sbb
xlat
jnp
pusha
iret
cmp
fwait
xchg
dec
test
xchg
push
push
cs
jle
sbb
sbb
stos
loope
xor
dec
add
out
sbb
xchg
stc
arpl
mov
ins
ss
stos
test
cmp
xor
in
aaa
adc
xor
ss
iret
nop
push
jl
std
sbb
ret
clc
adc
popf
nop
or
adc
mov
(bad)
int3
push
mov
push
rol
adc
sbb
hlt
adc
inc
in
jno
inc
pop
sub
mov
and
cs
(bad)
int
sbb
fidiv
push
or
mov
push
rcl
div
ret
ret
outs
es
das
enter
outs
dec
mov
mov
pop
cs
jb
pop
in
push
xchg
sub
mov
sbb
and
aam
sbb
inc
lds
mov
sub
gs
fstp
gs
mov
cli
retf
fld
jle
cmc
aad
mov
call
push
test
in
enter
add
pop
sub
imul
jo
aam
xlat
popa
adc
scas
repnz
rcr
setae
push
xor
xchg
(bad)
sub
push
dec
and
jo
cli
mov
adc
jmp
sub
pop
mov
sub
mov
cmps
setb
fild
int3
xchg
mov
pushf
push
sti
jo
jle
rcl
cmp
retf
shr
add
pop
jle
mov
xchg
or
xchg
cmp
(bad)
std
or
jmp
xchg
loopne
out
call
pop
scas
ficom
sbb
aam
pusha
(bad)
and
pop
mov
fstp
call
push
jle
mov
jne
movs
inc
test
and
push
adc
add
mov
xor
jmp
ds
and
in
cmp
mov
fld
cmc
push
outs
inc
popf
prefetcht1
cmp
rcr
pop
jne
mov
shr
shl
cli
fs
fst
clc
adc
xor
xchg
inc
dec
sbb
mov
dec
iret
dec
ins
mov
clc
mov
jne
mov
xchg
inc
lods
ret
mov
test
cmp
cmp
fidiv
mov
mov
add
fwait
mov
cmp
xlat
leave
(bad)
into
btr
mov
aam
xor
ins
fcomp
jle
mov
adc
sub
sar
iret
daa
add
pop
xchg
div
xchg
push
iret
pop
add
out
cmps
movs
je
dec
retf
iret
dec
mov
sar
shr
std
push
test
call
mov
jb
xchg
mov
ja
stos
xchg
lods
ret
mov
in
lods
mov
stc
cmps
in
adc
or
lea
and
enter
dec
imul
(bad)
(bad)
jne
sbb
fdiv
cmc
sahf
sub
cli
leave
xor
fsubr
and
fimul
and
push
mov
out
inc
frstor
push
add
cld
cmc
retf
cmc
mov
dec
frstor
add
mov
int
xchg
pusha
push
mov
(bad)
imul
ins
ins
std
lods
addr16
sbb
xor
es
adc
scas
(bad)
mov
mov
mov
pop
stos
mov
sbb
test
mov
xchg
or
dec
aam
fiadd
sbb
inc
fldenv
sti
mov
gs
sub
push
jp
std
movs
idiv
cmp
cwde
scas
ds
test
add
fidivr
xchg
add
push
xchg
mov
fcomp
fisttp
(bad)
mov
enter
mov
push
cwde
test
xchg
dec
dec
outs
push
dec
pop
outs
fnstenv
jmp
lods
add
inc
int3
mov
or
bound
add
aad
hlt
mov
popa
test
ins
cmp
shl
push
cmp
push
enter
jo
out
adc
clc
pop
fidivr
rcl
xchg
xchg
mov
jmp
into
push
stos
or
pop
dec
sub
in
dec
adc
out
fist
(bad)
cmp
push
mov
mov
fiadd
fadd
xor
mov
mov
pop
jge
sub
into
push
xchg
stc
inc
mov
xor
(bad)
and
dec
cli
push
xchg
push
and
call
test
lock
dec
sub
mov
inc
sar
mov
sahf
outs
xchg
inc
adc
add
sub
cmp
cmp
mov
jae
dec
pop
ja
fimul
lahf
loope
int3
mov
pop
sbb
cmp
ja
les
test
(bad)
inc
popa
push
(bad)
pop
push
sti
inc
inc
pop
in
cmp
pop
dec
(bad)
xor
mov
and
mov
jle
scas
mov
(bad)
ins
test
push
fwait
out
sub
test
push
mov
sbb
lock
jmp
dec
loope
push
inc
hlt
dec
pop
ja
pop
ins
retf
pushf
arpl
cmp
bound
stos
rcr
aas
clc
fs
inc
pop
xchg
sbb
mov
sbb
adc
outs
jmp
addr16
int3
out
call
fld
fsub
ja
cmps
dec
pop
retf
dec
and
pop
xchg
pop
cdq
test
inc
xchg
xchg
sar
add
xor
call
pop
loopne
cmps
dec
pop
repz
adc
mov
loope
push
push
mov
xchg
sar
mov
jo
push
adc
loop
mov
pop
mov
inc
(bad)
std
dec
inc
jle
(bad)
shr
mov
mov
and
call
xchg
sub
js
xchg
(bad)
cld
dec
mov
mov
jecxz
dec
inc
scas
adc
jecxz
sbb
je
mov
jecxz
xlat
mov
pop
in
pop
sbb
cs
mov
test
or
pop
mov
push
and
aam
or
xor
jl
icebp
in
mov
adc
inc
inc
or
inc
push
or
jo
cmc
fucomip
mov
jnp
enter
aas
pop
movs
neg
jb
or
(bad)
push
dec
movs
test
inc
(bad)
sub
mov
dec
or
js
(bad)
mov
outs
mov
std
and
out
dec
mov
retf
and
inc
jmp
repz
stos
arpl
adc
mov
xor
test
je
iret
jbe
push
push
push
jmp
xor
mov
and
xor
fwait
test
je
cmps
int3
lahf
out
(bad)
loope
lock
loop
std
add
mov
cmp
outs
pop
inc
aaa
mov
jb
xor
jae
(bad)
(bad)
sbb
mov
mov
in
js
fs
or
jbe
(bad)
int3
mov
mov
in
jae
push
leave
sar
hlt
stos
xor
and
fdivr
xchg
(bad)
add
cmc
(bad)
icebp
mov
xchg
jecxz
dec
aaa
sub
cmps
push
dec
mov
adc
ins
pop
lea
and
iret
or
je
hlt
jo
sbb
cwde
js
adc
std
push
or
int
lock
stos
stc
jecxz
and
int3
fmul
mov
and
or
xor
mov
and
stos
add
dec
and
pushf
pop
dec
sub
jae
adc
inc
call
sub
jmp
mov
popf
or
out
dec
and
jge
in
test
inc
sub
(bad)
rol
sbb
pop
push
shl
or
mov
and
fs
push
cld
mov
mov
xchg
push
cmp
(bad)
adc
cmp
cs
sahf
or
pop
or
sbb
xor
shr
fs
mov
mov
into
push
imul
cs
ror
inc
mov
pop
and
test
mov
mov
imul
aad
mov
stos
nop
out
lods
dec
push
push
push
or
dec
(bad)
leave
jmp
ficomp
xchg
pop
nop
bound
xchg
mov
xchg
(bad)
aad
push
sbb
ret
fdivr
lods
xchg
jne
sub
in
jmp
xchg
xor
xor
sahf
daa
dec
(bad)
dec
mov
adc
and
test
fisubr
lahf
repnz
push
fwait
aad
mov
js
and
xor
xor
repz
add
xchg
shr
ins
cli
mov
shl
mov
push
sbb
pop
inc
enter
sub
adc
xor
jb
mov
loopne
arpl
mov
(bad)
jne
push
mov
or
jle
retf
enter
dec
loopne
mov
sub
fstp
cdq
or
push
retf
dec
cli
je
jle
int3
(bad)
fiadd
cs
sub
adc
push
das
test
das
mov
mov
add
cld
cmp
cmp
dec
mov
push
pop
inc
inc
adc
and
jne
mov
mov
xor
imul
test
jo
or
push
or
ds
es
inc
xchg
cmc
mov
and
(bad)
mov
dec
xor
pop
push
mov
les
xchg
retf
sbb
xchg
adc
adc
sahf
mov
ins
mov
or
std
xchg
iret
sbb
pushf
idiv
push
je
xchg
cmp
jmp
das
popa
sbb
or
or
outs
mov
retf
fmul
add
loope
sar
jae
xchg
or
inc
dec
mov
repz
jmp
add
mov
and
xchg
jnp
jo
mov
xlat
adc
sbb
pop
out
jns
das
dec
ss
in
mov
mov
mov
lock
or
call
adc
pop
repz
ja
(bad)
js
ss
cmp
(bad)
jmp
inc
shl
mov
jl
jle
dec
mov
add
sub
add
mov
mov
mov
adc
fisub
popf
jg
ja
sbb
es
or
fdiv
lds
outs
outs
(bad)
popa
mov
mov
sti
cmp
and
mov
cs
mov
hlt
push
js
pusha
xor
xor
xchg
inc
adc
lock
jbe
inc
push
fmulp
or
setge
retf
popf
push
push
dec
dec
sub
or
xchg
call
cli
sub
pop
mov
and
pop
pushf
sbb
pop
rep
in
int3
adc
mov
and
repnz
pop
test
fild
dec
hlt
pop
mov
ror
js
loope
jecxz
ja
sub
rcl
mov
int
sub
adc
int3
(bad)
jns
xor
mov
mov
lds
jne
push
push
pop
rcr
into
(bad)
into
jecxz
xchg
jl
fisttp
dec
jecxz
mov
mov
jmp
sub
xor
dec
fwait
aas
out
pop
sbb
jne
mov
mov
call
push
enter
push
daa
dec
pop
pop
popf
jne
out
into
ds
out
inc
dec
xchg
call
mov
adc
pop
cmps
jo
ret
xchg
dec
cld
(bad)
push
cmp
mov
sub
xchg
idiv
jle
lea
aas
je
aaa
adc
stc
es
xor
movs
sbb
loop
adc
mov
or
jg
clc
fadd
clc
add
enter
scas
cmp
sbb
jnp
sbb
dec
(bad)
jp
xor
loopne
mov
dec
inc
lods
repz
mov
ja
inc
test
fisttp
xchg
outs
mov
and
ret
test
push
sbb
adc
sbb
retf
outs
popf
daa
shl
out
dec
jmp
pop
push
add
push
or
pushf
(bad)
ss
inc
imul
cmp
push
jnp
add
repnz
jns
push
and
add
add
fwait
add
fstp
jl
mov
fs
xchg
es
js
(bad)
addr16
mov
shl
inc
jmp
cli
retf
je
cmp
mov
jo
(bad)
jnp
inc
xchg
xchg
sub
addr16
sub
xor
sbb
mov
add
pop
das
push
retf
mov
pop
jle
ret
imul
mov
adc
ret
push
test
hlt
sbb
jo
add
movs
jge
sub
aam
xchg
pusha
pop
mov
sbb
xor
enter
xor
call
sub
mov
or
leave
dec
or
inc
arpl
push
enter
fdiv
out
lahf
fdivr
pop
int
dec
push
adc
popa
jp
iret
mov
pushf
std
loopne
popf
inc
shl
push
pop
call
jg
pop
xchg
push
in
movs
(bad)
dec
es
dec
dec
sub
mov
jo
in
in
and
bnd
loopne
push
and
aas
addr16
cmp
div
sbb
jnp
leave
dec
push
cmp
mov
cmp
add
pop
push
mov
pop
push
push
hlt
or
mov
and
pop
xchg
stos
test
ror
std
iret
jbe
jg
push
das
loope
jp
out
push
or
call
stos
pusha
lds
pop
dec
or
ror
pop
pcmpgtd
lds
dec
mov
(bad)
faddp
ins
jmp
sub
sbb
mov
cmp
mov
fistp
es
pop
jnp
leave
xchg
push
mov
mov
xor
aas
movs
cmp
jp
popa
test
outs
xor
adc
mov
sbb
adc
push
enter
fisub
mov
addr16
or
and
icebp
rol
repnz
sbb
test
hlt
and
neg
pushf
push
or
imul
(bad)
and
repnz
mov
add
jb
retf
outs
fild
jl
int
mov
fsub
out
or
inc
sar
mov
jecxz
sbb
inc
rcl
es
shl
loope
out
loopne
xor
shl
ins
inc
imul
fild
movs
jmp
mov
pop
adc
pop
xor
xchg
sar
in
and
push
outs
pop
les
inc
inc
test
inc
push
cmps
nop
mov
mov
loopne
jle
jge
sbb
inc
mov
or
mov
mov
outs
push
mov
outs
cmp
sahf
cmp
push
inc
js
fcom
mov
pop
out
lea
add
fcomp
mov
and
stc
xor
test
mov
cmps
cdq
sub
jnp
jae
leave
inc
cmps
mov
xchg
ins
mov
loopne
mov
jmp
and
sub
push
mov
mov
ret
ror
push
aas
sub
aaa
jle
sahf
xor
enter
mov
(bad)
sub
mov
push
dec
ret
jle
into
push
ds
cs
enter
jae
add
adc
pop
aam
fsubrp
and
cmp
xchg
mov
mov
inc
sub
fidivr
jmp
jns
ss
lock
jge
pop
dec
add
sahf
and
xor
je
movs
aaa
out
mov
(bad)
pop
push
sub
loop
scas
adc
mov
mov
clc
test
mov
pop
cld
dec
xlat
ror
ficom
iret
mov
pop
mov
sub
in
sti
mov
xchg
jne
mov
aam
aas
dec
shl
xchg
or
xchg
mov
das
add
test
fisttp
into
jnp
addr16
fcmovnb
es
fwait
xchg
cmp
nop
or
jmp
mov
add
inc
aam
pop
mov
mov
ret
xchg
mov
rcr
or
(bad)
adc
shl
xor
dec
push
(bad)
aam
inc
jmp
xchg
sub
ja
int
call
enter
(bad)
push
jge
movs
mov
scas
sbb
xor
jae
jmp
push
jg
aas
cmp
cs
arpl
retf
aam
xchg
sub
das
cmc
push
lea
rcl
push
call
int3
and
and
icebp
pop
push
push
or
push
and
sahf
cld
xchg
add
das
adc
inc
mov
fwait
cmps
pop
add
adc
inc
or
les
sub
sbb
mov
dec
and
mov
inc
repz
add
sub
add
xchg
pusha
popf
ss
jmp
jne
es
sub
dec
jg
jns
imul
jo
sti
imul
inc
fsubr
push
adc
push
pop
lahf
or
xor
rol
jle
clc
or
and
popf
aaa
add
push
call
dec
in
adc
icebp
hlt
test
jmp
mov
dec
mov
loop
out
fucomp
popa
aam
mov
and
int3
inc
mov
xchg
add
(bad)
jmp
hlt
mov
pop
add
cdq
shl
add
push
lahf
mov
add
or
loope
push
aam
ror
cmc
rcr
push
sbb
push
xchg
jns
sar
xchg
sbb
mov
push
pop
(bad)
fldcw
push
sbb
sub
jl
pop
pop
pop
(bad)
push
ds
movntq
rcr
test
sar
lods
push
nop
inc
nop
outs
(bad)
fs
sbb
loop
push
adc
push
push
jb
cmp
popf
out
cmp
ins
in
clc
inc
daa
pop
dec
jae
lods
icebp
mov
or
es
ret
sub
addr16
pushw
dec
dec
cs
jl
in
pop
(bad)
sete
mov
cld
lea
arpl
xor
add
xor
jecxz
out
call
adc
xchg
inc
dec
mov
and
and
inc
retf
pop
push
add
cmp
in
jo
push
int
rcl
pop
mov
aad
call
imul
arpl
lods
daa
mov
push
scas
adc
sti
and
clc
pusha
gs
mov
xchg
adc
leave
in
mov
mov
lea
aaa
jns
pop
ins
inc
fcmovnb
xlat
sub
call
mov
imul
xchg
xchg
aad
dec
or
fnstcw
or
mov
aaa
pop
(bad)
mov
mov
mov
jnp
cmps
into
ret
push
lock
push
push
stc
lods
dec
and
xor
pop
lahf
(bad)
int3
mov
adc
mov
push
adc
cmp
retf
outs
cmp
cmp
push
jle
adc
movaps
jo
sahf
call
aas
mov
lds
sub
icebp
je
int
and
mov
pop
and
cmp
or
jp
cs
pushf
ss
jle
scas
scas
xchg
xor
or
xchg
mov
dec
test
cmps
ds
dec
cld
push
stos
gs
mov
xor
xchg
cld
mov
adc
(bad)
push
add
jmp
and
or
or
fcomp
xor
je
cmc
scas
je
cmp
icebp
div
add
movs
jo
mov
out
inc
adc
fistp
pushf
outs
cdq
xor
shl
in
fs
loopne
inc
mov
mov
addr16
xchg
xor
jmp
sbb
es
ins
ja
inc
enter
jge
test
mov
nop
sahf
hlt
jl
push
shl
sub
and
out
mov
push
iret
fistp
and
test
scas
(bad)
xchg
bound
mov
xchg
outs
pop
lods
(bad)
call
mov
or
and
xchg
fwait
stos
jns
and
sar
mov
dec
stos
lods
jb
leave
dec
add
outs
pop
xchg
push
cmps
es
arpl
fcmovnbe
mov
cmps
imul
jo
outs
add
fsubr
push
lea
cmp
int
call
leave
test
jbe
cmp
(bad)
push
ss
push
loopne
dec
or
test
sbb
test
inc
lea
ret
sbb
adc
cmc
and
pop
fistp
mov
data16
hlt
inc
shl
mov
dec
aas
mov
xchg
lea
jb
mov
mov
xor
fwait
dec
inc
cmp
push
xor
movs
out
push
jnp
pop
push
sbb
movs
xor
lods
fwait
icebp
cmps
mov
repz
jae
sbb
cmp
push
lock
nop
jg
sbb
nop
sub
push
mov
mov
sbb
jne
iret
bound
jne
dec
(bad)
xchg
mov
cmp
mov
xchg
xchg
loop
dec
xchg
xor
lods
icebp
lock
aas
dec
pushf
stos
mov
push
cmp
xchg
call
xchg
sbb
sbb
xchg
inc
out
xchg
nop
or
adc
adc
mov
cmps
ret
mov
data16
add
xor
sub
push
fwait
mov
xchg
dec
shr
into
cwde
jg
ret
imul
in
cwde
arpl
sahf
test
mov
cwde
bound
mov
ins
cld
retf
mov
pop
mov
xor
sub
into
rcl
cmps
ja
call
test
mov
sub
cmp
int
test
jnp
or
repz
jle
xchg
bound
aam
inc
jbe
xchg
cmp
iret
int
cwde
stc
ss
loop
sbb
adc
adc
imul
push
test
sbb
das
add
enter
(bad)
dec
xor
cli
jge
mov
sbb
pop
aad
push
push
add
in
inc
ss
sbb
xor
adc
imul
sbb
fidivr
pusha
or
cmp
stc
aam
add
jp
call
adc
push
push
pop
lea
dec
imul
das
lds
dec
pop
das
mov
inc
mov
ror
or
xchg
dec
mov
movs
inc
jno
jge
mov
push
mov
sbb
adc
retf
mov
addr16
not
in
pop
ficom
jb
mov
sti
addr16
xchg
mov
fnsave
into
mov
fs
sbb
ret
ins
push
push
pop
(bad)
or
daa
and
cmps
fsubr
test
xchg
or
mov
call
hlt
cmps
frstor
sub
jmp
push
jp
adc
jl
push
aaa
sub
xchg
movs
xlat
and
dec
cs
leave
cld
pop
and
dec
adc
and
in
fnsave
into
in
loop
aam
or
xor
sbb
dec
push
aam
ds
xchg
cmp
retf
ret
or
xchg
(bad)
rcl
mov
cli
fwait
pop
cmc
mov
sub
pop
(bad)
pop
add
jns
in
mov
das
pop
or
jl
in
jns
cld
adc
ja
std
sub
(bad)
inc
outs
cld
push
repz
sbb
data16
and
cmps
add
add
inc
popf
mov
mov
aaa
jge
cdq
sub
jne
out
and
mov
cmp
and
dec
inc
movs
mov
outs
adc
imul
std
jge
mov
and
int
stc
mov
or
xor
outs
cmp
ror
xlat
dec
xchg
sti
jle
fld
not
das
jb
lahf
pop
fisubr
mov
aam
mov
dec
xor
test
push
push
inc
xor
cmps
adc
add
and
outs
mov
inc
inc
sub
(bad)
push
ins
inc
mov
add
mov
xchg
xchg
iret
pop
and
in
and
ja
int
ins
jno
cmp
fwait
loope
push
adc
cmp
and
or
dec
xor
ret
mov
push
loopne
push
inc
aas
or
adc
sbb
aas
fcmovu
sub
mov
pop
pop
retf
lods
js
mov
fcomp
out
lahf
sub
scas
mov
cmps
jg
ds
mov
dec
jge
into
mov
mov
popa
retf
retf
adc
out
sub
add
std
pop
ror
mov
test
cwde
loopne
sbb
xor
cwde
popa
add
repz
xor
add
fdiv
shl
aad
retf
inc
pop
pop
cmps
movs
push
aad
test
mov
mov
dec
ss
mov
aam
xchg
pop
fsub
xchg
and
shl
(bad)
mov
scas
ret
mov
jg
push
imul
dec
leave
fist
fidivr
scas
cmp
stos
push
shr
adc
push
adc
mov
mov
dec
sub
adc
imul
in
fnstenv
inc
mov
xchg
ins
mov
xor
add
pop
jnp
and
cmps
test
add
sbb
mov
out
cs
fmul
nop
jge
jp
xchg
into
int3
add
dec
jmp
cmp
aad
outs
popa
mov
test
pop
mov
stc
cmps
push
mov
xlat
cmc
pusha
ficomp
sub
jmp
mov
inc
jb
mov
pop
lahf
call
mov
int3
loope
inc
pushf
dec
pop
jb
cmc
jmp
or
sub
adc
cwde
imul
dec
xchg
mov
ret
imul
mov
or
push
fcmovnb
cmp
push
loop
pop
dec
inc
push
shr
ds
add
sti
retf
std
pop
js
xchg
into
(bad)
daa
add
js
fmulp
push
fnstcw
adc
pusha
or
dec
(bad)
cmc
sub
pop
clc
out
xlat
adc
call
jns
cmp
inc
rcl
xor
nop
pop
daa
gs
in
and
pop
sub
ss
sbb
push
(bad)
mov
inc
inc
adc
and
(bad)
leave
pop
push
std
aaa
neg
in
add
mov
dec
out
mov
fnsave
scas
mov
cdq
out
(bad)
jmp
inc
add
mov
loop
lea
adc
or
movs
mov
push
cmps
cdq
leave
and
sub
sub
xchg
aas
retf
ja
retf
jecxz
(bad)
je
pop
cmp
mov
jne
js
dec
enter
mov
das
pop
std
cmp
pop
and
cmp
xchg
pop
nop
nop
adc
cmp
lods
cmp
loop
stc
lods
loop
loop
dec
mov
and
cs
lea
test
push
mov
cmp
sub
pop
push
add
shr
xor
loopne
call
lods
in
jge
mov
push
std
mov
out
add
add
mov
push
pop
cmp
xor
std
pop
in
cmp
ins
inc
push
aad
or
popf
sahf
mov
jae
cdq
fstp
adc
mov
push
jae
mov
adc
mov
adc
loope
push
gs
mov
dec
les
popa
mov
pop
mov
add
stc
jg
pushf
cmp
push
enter
xchg
xchg
sub
daa
test
adc
dec
mov
cwde
xchg
mov
inc
pop
repz
adc
in
or
fs
xor
in
in
push
or
retf
dec
fnstsw
push
jl
pop
icebp
xor
or
pop
jecxz
retf
pop
(bad)
push
and
aas
fmul
inc
lock
sub
adc
test
pop
scas
imul
mov
xchg
into
mov
dec
jge
pop
add
repz
adc
sub
cmp
jae
(bad)
adc
mov
icebp
add
jns
movs
(bad)
and
cs
outs
mov
or
mov
shl
or
loopne
pxor
into
push
pop
adc
or
test
mov
dec
hlt
and
and
jo
movs
fnstenv
sub
loope
add
idiv
test
xor
xchg
push
cli
mov
sub
sbb
or
cli
xor
mov
cwde
pop
jmp
pushf
jmp
jl
das
stos
jg
out
xchg
xchg
xor
mov
das
shr
stc
jmp
mov
sub
mov
push
xchg
ror
ins
rcl
outs
sub
sub
cmp
push
js
out
xchg
out
adc
stos
js
push
or
mov
nop
jle
hlt
scas
sub
mov
in
and
outs
mov
rol
mov
in
sti
pop
ins
cmps
ins
pop
push
adc
lods
mov
inc
test
cwde
dec
sub
inc
pop
cmc
jmp
adc
add
and
sub
adc
cdq
call
push
popf
jno
data16
xchg
imul
dec
arpl
or
fild
xchg
dec
(bad)
neg
lods
pop
in
in
fmul
pop
adc
mov
mov
pusha
out
cmp
mov
push
sbb
inc
xchg
jb
push
mov
and
iret
pop
sbb
or
nop
ds
mov
pop
jne
iret
fwait
icebp
iret
in
ret
jle
out
mov
fucomp
jp
xor
mov
lock
mov
and
sub
(bad)
jb
dec
jecxz
xor
daa
daa
mov
push
test
adc
add
mov
sbb
xor
imul
or
pop
ficom
sbb
test
mov
xor
dec
pop
shl
pop
mov
pop
pop
(bad)
xchg
movs
sub
jae
retf
fwait
pop
mov
ja
inc
and
(bad)
jge
(bad)
jle
push
add
push
adc
pop
jmp
fist
sbb
dec
lea
mov
jg
mov
adc
cmp
sahf
add
(bad)
jae
cmc
sbb
out
aaa
movzx
imul
cmp
sti
hlt
inc
fs
sbb
mov
jmp
pushf
(bad)
das
cmps
jnp
cmp
mov
js
mov
hlt
adc
fdiv
pop
into
jp
adc
add
push
(bad)
jae
stos
not
jecxz
mov
cld
mov
ins
adc
js
sti
adc
sub
jnp
mov
cmp
push
aaa
and
pushf
jmp
and
add
in
inc
inc
loop
lar
xchg
sbb
pop
ror
pop
(bad)
xor
push
push
pop
rcl
jge
mov
adc
add
(bad)
cmc
jb
jle
call
clc
xchg
lds
dec
jmp
int
int3
dec
ja
clc
test
aad
or
sbb
mov
movs
pop
sbb
sub
push
push
inc
fcmovne
ret
inc
adc
sub
in
jnp
cmc
adc
add
das
outs
jnp
xor
bound
ja
int3
dec
and
fild
add
into
inc
inc
and
ds
inc
ret
mov
mov
outs
sbb
jl
movs
jbe
gs
xor
sbb
jmp
add
sbb
mov
outs
outs
lahf
stos
loopne
lds
loope
call
shl
fdivr
in
adc
scas
outs
add
test
repz
xchg
retf
mov
out
dec
loop
xchg
inc
pop
jne
push
dec
dec
jl
aam
bnd
mov
adc
inc
push
bound
jmp
stc
out
cdq
xchg
pop
repnz
inc
mov
in
mov
mov
and
sbb
lock
or
test
test
dec
add
xlat
sbb
and
shr
ja
adc
std
cmp
and
xchg
cmp
pop
fbld
push
adc
cmp
mov
shr
sbb
mov
mov
fs
add
retf
fild
jmp
or
lea
call
push
data16
(bad)
cmp
cmp
inc
fisttp
fnsave
repnz
psrad
stos
and
jl
aad
imul
xchg
push
repz
bound
stc
jmp
jmp
test
and
push
mov
addr16
jne
jmp
push
adc
pop
mov
mov
hlt
rol
xor
cli
(bad)
movs
or
daa
data16
clc
mov
in
jns
or
jb
pop
pop
jns
pop
sub
jne
adc
stc
loop
mov
mov
push
sub
mov
xchg
bound
xchg
mov
bound
jge
outs
into
not
shl
adc
add
mov
popa
test
nop
mov
sbb
mov
in
fwait
hlt
mov
add
out
repz
jmp
pop
push
xchg
ror
xor
xchg
jo
(bad)
lods
test
xor
lea
jmp
pop
mov
pop
fs
xor
dec
xchg
fcmovnb
xchg
adc
sbb
jp
jo
push
(bad)
dec
jge
ret
mov
ss
iret
xlat
mov
int3
lods
xchg
push
or
mov
iret
cmp
mov
inc
daa
shl
mov
push
mov
adc
hlt
js
cs
sar
neg
sub
xor
xor
sbb
loopne
fadd
and
pop
cmp
xchg
cmc
fcom
mov
pushf
addr16
int3
sub
mov
out
sub
xchg
outs
mov
push
sub
loope
icebp
push
(bad)
ss
outs
mov
nop
pop
test
cwde
imul
retf
adc
push
pushf
cmp
push
sub
dec
jecxz
jmp
cli
pop
cmp
pop
mov
or
xchg
dec
jp
repnz
xor
or
mov
repnz
shl
sti
test
mov
call
or
cmp
lea
and
xchg
retf
add
fdivr
add
jno
sti
bound
stc
xor
lods
outs
mov
jle
jmp
and
lock
inc
shl
xchg
jae
xchg
xchg
mov
test
loop
cmp
xchg
xor
mov
mov
mov
mov
pop
(bad)
cmp
outs
mov
test
dec
xchg
push
xor
mov
jecxz
call
clc
in
inc
xor
xchg
enter
cld
packuswb
mov
pop
jecxz
mov
xlat
sub
gs
jno
shl
cdq
sub
scas
call
fcmovu
xchg
call
pop
sub
sub
mov
pop
pop
mov
clc
or
sub
sbb
loope
xchg
push
push
lea
lock
mov
addr16
mov
aam
das
shl
xadd
jno
inc
test
(bad)
mov
fs
xchg
pusha
jo
and
push
mov
push
popa
cli
hlt
(bad)
fs
vxorps
pop
movs
dec
pop
xchg
outs
jns
jp
add
pushf
scas
inc
sbb
repz
push
jb
lods
and
xor
add
scas
jmp
xchg
jg
hlt
sub
out
pop
ret
add
dec
das
inc
sbb
push
sub
push
dec
pusha
cdq
adc
push
xchg
movs
fiadd
and
xchg
xchg
(bad)
clc
xor
fld
repnz
ret
jo
loop
inc
dec
and
adc
dec
rol
add
test
aad
test
out
(bad)
loope
dec
inc
(bad)
into
mov
nop
out
daa
push
mov
cmps
mov
xchg
sahf
mov
pop
jns
je
jmp
aas
and
push
clc
xchg
rol
adc
movs
and
mov
sti
jmp
rcr
sar
call
mov
and
or
std
adc
lods
pop
enter
bound
sbb
enter
cs
jnp
in
std
cli
xchg
cmp
cmc
jmp
(bad)
cdq
out
aad
lods
adc
jns
cli
movs
addr16
push
cmp
or
cld
mov
daa
pusha
test
mov
cmps
add
cmp
es
adc
jbe
jbe
loope
sub
add
data16
and
and
pop
inc
and
sbb
fsub
inc
mov
jmp
cmps
xchg
bsf
cmp
adc
xchg
inc
lds
(bad)
adc
hlt
or
jns
mov
mov
adc
mov
mov
xchg
retf
sbb
das
sub
jno
xor
(bad)
mov
push
adc
xlat
sbb
repnz
adc
(bad)
xor
sub
cmps
push
rol
es
or
ret
jecxz
push
pop
push
popf
in
inc
sub
or
and
lock
cdq
push
xor
push
adc
(bad)
outs
pop
xor
mov
retf
xchg
lods
ficom
int3
mov
add
xor
mov
int3
add
pop
jbe
pop
and
mov
dec
or
fs
inc
out
cmp
std
mov
add
ror
jp
(bad)
cld
(bad)
mov
mov
aas
and
push
leave
loop
imul
sub
loop
gs
jp
mul
in
inc
mov
sub
ss
jae
mov
and
inc
mov
and
or
lock
in
test
lahf
push
sub
sbb
xchg
fwait
mov
call
fmul
xor
sub
hlt
ret
stc
mov
jmp
inc
fadd
adc
pop
push
data16
pushf
fnstsw
push
adc
inc
test
into
fwait
rcl
adc
push
inc
sbb
and
int3
es
mov
lea
ds
jns
xchg
call
ins
(bad)
jmp
mov
scas
xchg
cli
mov
mov
jne
mov
add
enter
add
push
jecxz
imul
push
fnstsw
push
retf
dec
retf
inc
add
repz
fwait
shl
add
nop
mov
push
in
add
fcom
push
out
xor
mov
dec
fisubr
or
or
rcr
lds
jno
mov
je
mov
sbb
hlt
aas
in
xchg
repz
adc
sub
div
imul
push
jle
xlat
(bad)
xchg
inc
pop
dec
ss
fistp
pusha
out
outs
dec
jl
mov
mov
aam
and
imul
ds
sub
int
(bad)
lahf
jle
hlt
(bad)
pop
jle
addr16
sahf
and
outs
mov
sub
out
dec
jmp
push
xchg
pop
(bad)
loopne
jbe
and
leave
fwait
sub
cmp
leave
fstp
fsubr
xchg
sub
into
push
stos
mov
cmp
shr
sbb
push
mov
jns
pop
pop
fidivr
inc
sar
fstp
mov
mov
(bad)
lahf
adc
fnsave
sbb
out
pop
sbb
clc
mov
dec
jle
jg
pop
outs
add
sub
jae
jns
lock
retf
adc
xor
popw
cld
mov
adc
punpckldq
push
cmps
push
gs
inc
or
push
jns
or
and
xor
mov
push
sbb
icebp
test
outs
xchg
sub
dec
pop
jno
push
outs
(bad)
hlt
mov
in
pop
fnstcw
sub
inc
mov
inc
mov
ret
shl
ret
sti
test
or
mov
imul
adc
mov
ss
(bad)
(bad)
push
ret
mov
fst
pop
jg
push
add
mov
(bad)
loop
push
daa
sub
je
out
push
out
int
cli
or
imul
pop
cmp
bnd
repnz
in
sahf
mov
retf
daa
push
or
repz
inc
je
pop
mov
lock
xor
jae
pop
inc
inc
into
mov
mov
nop
test
jle
pop
mov
repnz
mov
jnp
test
fs
cmps
cwde
ins
and
je
push
mov
adc
stos
and
sub
loop
rol
cmp
nop
je
mov
fld
std
jecxz
sub
ror
iret
repz
cmc
cdq
mov
cmp
fwait
shl
pop
inc
xchg
dec
cmps
push
and
mov
(bad)
push
repnz
fiadd
es
dec
imul
xchg
movs
or
add
stos
dec
push
in
sub
aam
jl
lea
and
aaa
hlt
mov
imul
(bad)
sti
mov
and
jo
mov
sub
adc
jnp
arpl
es
int
(bad)
mov
xchg
inc
shr
fsubrp
call
mov
loop
cmc
jmp
ret
lods
outs
mov
xchg
shl
push
xchg
mov
mov
jnp
jae
test
push
add
push
bound
(bad)
clc
pusha
call
pop
push
mov
add
aad
jne
popa
into
xor
xlat
jge
outs
sub
mov
jbe
sbb
add
jmp
mov
ins
iret
adc
or
ret
imul
mov
jge
test
xchg
mov
or
pusha
pop
jns
std
xchg
gs
je
movs
jmp
mov
dec
cmc
cld
retf
mov
push
movs
push
mov
mov
adc
and
test
cli
rcl
loopne
mov
adc
daa
call
pop
cs
pop
sahf
test
sbb
adc
adc
scas
ret
test
mov
push
cmp
jmp
pop
mov
bound
daa
dec
dec
or
mov
clc
cdq
ficomp
mov
(bad)
mov
or
arpl
test
cmc
xchg
ror
sbb
jg
aaa
cld
add
push
xchg
adc
fldcw
or
push
xor
inc
adc
in
loopne
addr16
shl
addr16
xor
ret
loope
mov
or
mov
mov
stos
pushf
jmp
das
arpl
and
mov
xchg
(bad)
nop
lods
xchg
or
cmp
loop
sar
retf
ret
fidiv
push
cmp
arpl
fidiv
or
call
scas
cmp
dec
pop
cli
out
fld
pop
dec
xchg
dec
mov
lahf
mov
hlt
xchg
push
sbb
pop
push
xor
dec
loop
scas
popa
mov
push
mov
out
push
sbb
xchg
or
icebp
imul
adc
mov
jnp
mov
lock
inc
idiv
ror
mov
icebp
cmp
or
inc
push
repz
(bad)
retf
or
xchg
add
jno
sbb
inc
fsub
ja
jecxz
lea
bound
cmp
cs
aas
pop
xchg
or
mov
push
jnp
and
sub
das
dec
shld
mov
pop
aam
popa
rcr
ret
cmc
push
inc
dec
std
pusha
xor
xchg
mov
xor
inc
in
push
sbb
and
push
push
sbb
add
in
mov
pop
aas
(bad)
scas
jmp
cld
cli
sub
pushf
mov
push
outs
add
mov
mov
adc
jl
dec
push
cmps
cmp
js
jno
push
xor
mov
sar
int
mov
retf
xchg
call
inc
movs
cs
inc
aad
mov
mov
leave
int3
xor
rol
out
mov
xor
(bad)
movs
or
movs
push
scas
fisttp
push
lds
dec
icebp
dec
xchg
xor
jmp
dec
pop
leave
imul
push
pop
cmp
mov
and
pop
dec
xchg
adc
dec
cmp
inc
inc
fst
int3
mov
lea
imul
scas
mov
fidivr
(bad)
fisubr
xlat
push
repnz
jl
mov
pop
cdq
retf
test
push
adc
mov
sbb
push
mov
les
mov
ds
and
jne
jns
in
fxtract
nop
sub
xchg
(bad)
mov
jge
stos
out
jo
mov
es
dec
cli
cmps
leave
add
je
cwde
pushf
sub
(bad)
iret
jmp
out
dec
mov
mov
loope
inc
test
cmp
rol
call
cmpxchg
xor
ret
in
mov
les
push
push
out
push
xor
cmp
push
enter
pop
jge
xor
shl
sub
les
push
call
rol
movs
into
aaa
dec
cmp
and
add
adc
inc
in
loope
arpl
xor
rcl
call
mov
fldenv
or
fs
sbb
jle
sbb
test
jne
shl
adc
jmp
cmp
in
xchg
cld
xchg
or
in
xchg
retf
imul
push
sub
xchg
dec
cwde
aam
nop
adc
movs
dec
inc
loope
fisubr
mov
and
mov
pusha
xor
pop
inc
xchg
sbb
xchg
test
dec
jle
fsub
mov
mov
js
adc
ret
mov
xchg
inc
test
or
add
out
or
adc
dec
ins
sub
scas
shl
daa
sbb
dec
xchg
mov
or
mov
sub
das
(bad)
in
push
xor
ss
jne
jg
loope
stos
call
inc
cli
sbb
test
pop
stos
sbb
mov
pop
jge
in
mov
xor
dec
add
add
xor
adc
loop
aas
xor
sahf
ja
xchg
scas
jbe
push
xor
cli
xor
xlat
jl
mov
jl
push
push
xor
or
ret
push
jae
cwde
outs
and
cmp
stos
adc
adc
mov
push
dec
mov
mov
(bad)
xor
jmp
pusha
ror
jp
cmc
adc
and
and
shr
add
aam
mov
(bad)
frstor
fwait
cmc
pop
stos
jp
sub
adc
add
neg
addr16
imul
sub
inc
jno
or
rol
mov
arpl
dec
lock
mov
stos
lea
jmp
out
(bad)
push
(bad)
push
mov
ret
sbb
and
scas
sub
fbstp
test
shr
fdiv
xchg
mov
inc
jns
(bad)
lods
neg
lock
adc
loope
sbb
out
fcmovb
je
fcomip
scas
iret
xor
call
dec
outs
mov
and
mov
dec
into
stos
sahf
inc
inc
xor
js
cs
call
sbb
ins
sub
xor
mov
mov
pop
cmp
data16
sub
lods
pop
and
dec
(bad)
adc
xor
push
call
hlt
jle
mov
pop
cld
dec
jmp
or
push
daa
mov
pop
and
dec
out
mov
sub
sub
sbb
call
loopne
mov
xchg
mul
pop
pop
sub
daa
mov
pop
sub
int3
in
cs
push
cdq
jmp
in
sbb
call
xlat
(bad)
int
push
loop
mov
cmp
fwait
sbb
pop
int
cmp
sub
sub
cld
push
xlat
add
push
lods
in
xchg
xchg
sub
ret
dec
mov
inc
mov
into
cmp
test
movs
sahf
pop
inc
sar
mov
xor
mov
add
inc
je
mov
jbe
icebp
xchg
push
mov
std
push
fs
ins
retf
cmp
pop
xchg
and
sbb
jo
cmp
data16
out
sub
mov
movs
mul
sbb
inc
mov
or
cmp
call
xchg
mov
mov
int3
test
pop
mov
fwait
adc
outs
pop
xor
lods
(bad)
or
pop
jne
cld
pop
xchg
sbb
dec
fsub
out
xlat
xchg
mov
sbb
mov
or
dec
mov
mov
sub
mov
dec
adc
dec
pop
jle
pop
fcomp
adc
and
cmp
jbe
rcr
dec
xor
sub
cdq
adc
loopne
add
adc
dec
adc
mov
mov
adc
ds
(bad)
cmp
fimul
mov
lock
add
(bad)
adc
jne
xor
mov
pop
loopne
dec
adc
mov
lea
fmul
sar
arpl
jb
out
aaa
sbb
add
adc
xchg
or
inc
mov
movs
(bad)
pop
in
dec
and
cmp
sub
add
(bad)
mov
loope
std
push
clc
cmps
fisttp
mov
fxam
neg
push
xchg
fild
icebp
(bad)
data16
jmp
jecxz
mov
xor
mov
aad
or
push
sub
out
mov
rol
test
push
movs
push
mov
or
adc
jmp
adc
jno
dec
dec
aad
in
clc
dec
mov
or
out
aaa
mov
(bad)
xlat
scas
cwde
xchg
fdivr
xor
or
xor
sub
bound
into
sbb
(bad)
sbb
daa
daa
imul
jbe
shr
mov
retf
or
or
pop
add
arpl
mov
setge
scas
jmp
mov
xchg
mov
jno
movs
neg
pop
mov
mov
sub
retf
aas
inc
ret
mov
sbb
jnp
mov
mov
out
popa
sbb
mov
mov
sbb
and
pushf
sbb
inc
loopne
dec
stc
xchg
out
movs
loopne
push
pop
(bad)
mov
xor
dec
ficom
pop
daa
ret
mov
ficomp
daa
adc
mov
ins
fdivr
gs
fmul
std
sub
and
stc
jmp
call
int3
(bad)
and
das
loopne
aaa
fwait
and
imul
add
sub
(bad)
inc
fisub
cld
in
ins
out
dec
push
shr
sahf
xchg
test
or
mov
ja
jnp
lea
iret
and
adc
in
dec
jne
add
cmp
inc
icebp
in
test
cli
enter
jp
sub
push
jae
movs
or
sub
push
mov
jns
xor
sbb
adc
add
mov
mov
cmp
or
test
in
lahf
gs
inc
pop
cmc
leave
sub
fst
jno
xchg
js
bnd
mov
or
sub
test
sbb
in
inc
sti
rcl
inc
addr16
adc
sbb
(bad)
mov
inc
cmp
fstp
mov
xchg
adc
das
les
cmp
imul
lea
push
sbb
cmp
call
push
cmc
xchg
fisttp
xchg
jae
addr16
add
jo
xchg
enter
sbb
outs
dec
inc
loope
dec
inc
(bad)
shl
mov
cdq
out
xor
mov
sub
push
pop
sub
add
les
pop
mov
cwde
das
dec
or
pop
in
push
jbe
dec
cmp
gs
les
push
shr
sub
mov
mov
sub
cld
sbb
jge
ret
shl
ret
xlat
fidivr
aam
inc
lock
adc
cwde
xchg
xchg
daa
repnz
add
push
in
in
dec
adc
ja
add
xor
pushf
jmp
fldz
js
sahf
inc
add
pop
repz
call
out
mov
add
rol
cmp
dec
dec
sbb
pop
mov
jl
repz
and
mov
or
mov
sahf
mov
test
aam
pushf
pop
inc
aam
adc
lahf
inc
push
stos
xchg
std
mov
dec
(bad)
(bad)
retf
call
(bad)
sbb
ja
mov
cld
push
stos
cmps
repz
pushf
stc
push
mov
inc
sbb
jmp
pop
leave
xchg
mov
js
sti
and
sub
push
xor
and
scas
dec
xor
enter
inc
pop
je
add
jnp
rol
iret
sbb
inc
rdmsr
sbb
sub
popa
mov
aaa
push
scas
mov
test
int
fs
test
cmp
sub
lea
push
data16
and
add
xchg
sub
shl
mov
enter
out
(bad)
icebp
sti
pop
xchg
and
bound
push
iret
daa
xchg
jae
cli
lea
xor
inc
stos
scas
push
(bad)
and
sbb
imul
inc
mov
xchg
and
test
ins
and
scas
xlat
ret
(bad)
fptan
rol
sub
cmp
xchg
sbb
repnz
pop
add
inc
adc
(bad)
jmp
bound
pop
jns
inc
cli
mov
mov
out
sahf
add
ror
aas
dec
mov
stos
and
mov
dec
inc
popf
jmp
push
jle
inc
int3
js
popa
sub
or
stos
mov
test
inc
xor
mov
and
js
jmp
inc
in
lea
jb
test
mov
ins
iret
nop
cdq
push
jl
enter
das
stos
adc
test
scas
(bad)
ret
mov
call
movs
add
inc
aam
or
call
(bad)
lock
in
mov
nop
dec
pop
dec
bound
sbb
shr
push
and
xchg
pop
mov
cli
ret
xchg
add
cmp
cld
push
push
xchg
neg
mov
push
addr16
mov
fcmovne
test
add
jl
xchg
push
mov
mov
fsubr
dec
inc
push
mov
enter
in
aad
ins
inc
(bad)
pop
cmc
enter
test
push
cmps
sbb
adc
enter
mov
in
jbe
lods
cdq
in
call
test
ins
and
lods
ins
adc
inc
movs
sbb
mov
hlt
enter
adc
xor
(bad)
cwde
lods
push
ret
xchg
repnz
imul
pop
mov
pop
gs
dec
int
or
out
out
push
dec
call
fadd
pusha
xchg
mov
mov
stc
movs
lea
das
push
movs
mov
mov
pop
xchg
cmp
nop
cmc
xlat
ret
jl
aam
mov
dec
jg
popf
xor
jns
enter
push
sbb
cmps
imul
mov
cmps
cmps
sub
pop
aam
cmp
ja
ret
push
xlat
pop
aam
bound
mov
adc
enter
sbb
xor
mov
mov
sbb
mov
(bad)
jp
stc
dec
daa
add
in
cmps
es
sbb
sbb
shl
retf
popa
or
arpl
dec
aas
push
popa
arpl
ja
and
nop
nop
jb
arpl
and
push
xchg
mov
call
pop
cs
inc
xor
push
das
push
bound
xor
ins
pop
mov
mov
pop
dec
mov
addr16
sbb
push
pop
pop
inc
inc
fwait
clc
idiv
test
(bad)
in
lock
xchg
retf
in
jg
pop
jns
sbb
add
cmp
xchg
outs
ins
ret
jl
hlt
xchg
mov
test
out
scas
inc
gs
stos
sbb
mov
pop
sbb
retf
push
push
adc
push
mov
sbb
mov
mov
mov
inc
out
jne
jb
and
dec
or
inc
or
in
out
xchg
or
pop
push
lods
cmp
cs
rcl
pusha
sbb
jmp
aas
inc
adc
cmc
arpl
adc
or
and
mov
sub
pop
inc
(bad)
imul
icebp
push
call
or
pop
sub
jge
repz
xchg
arpl
pop
(bad)
xor
jae
add
test
push
cmp
scas
add
cs
xor
cld
enter
mov
mov
into
rol
cmp
sub
rcr
shl
mov
fnstcw
fild
lods
pop
ins
scas
add
adc
lds
sbb
cwde
mov
fsub
push
jecxz
dec
in
popa
push
rcl
pop
jns
in
adc
shr
jo
cmp
cmp
dec
lock
retf
nop
je
push
aas
inc
sbb
xor
popa
call
int3
mov
pand
mov
outs
fst
sub
in
repnz
cs
inc
icebp
jno
int3
xchg
inc
cmps
adc
or
or
mov
scas
push
and
cs
aam
shl
adc
int3
outs
clc
pop
sbb
pop
scas
inc
cmp
mov
lds
(bad)
mov
mov
ret
fisttp
mov
rol
inc
popa
cmp
mov
test
sbb
(bad)
and
xor
xchg
out
push
pop
(bad)
jns
movs
in
inc
aam
cmp
inc
fild
out
imul
(bad)
jne
xor
jae
pop
mov
fs
inc
rol
(bad)
sbb
push
sub
xchg
push
call
aaa
mov
neg
xor
(bad)
jns
test
icebp
sbb
mov
and
add
mov
xor
popf
call
xor
dec
push
out
push
fs
mov
out
mov
mov
push
dec
test
icebp
hlt
ret
sti
loopne
mov
iret
repnz
xor
or
gs
add
fisttp
nop
mov
sub
push
dec
xor
nop
jns
mov
not
pop
cli
pop
dec
mov
ss
mov
adc
imul
xchg
mov
xor
and
cmp
shr
sbb
jmp
mov
not
int
mov
sub
sbb
sbb
add
and
lock
mov
pop
ficomp
pusha
retf
in
cld
jge
es
inc
leave
inc
jge
enter
cmp
add
rcl
add
aaa
ins
adc
inc
push
dec
shr
mov
sbb
lea
mov
ror
or
stos
pop
aam
xchg
jecxz
pop
(bad)
retf
or
out
pop
pop
push
ins
in
push
sub
das
push
jo
scas
inc
aam
sbb
pop
(bad)
iret
push
jmp
push
mov
mov
mov
lock
push
call
mov
rcl
xor
adc
pop
push
fbld
loopne
ficom
mov
jmp
stc
loopne
mov
lock
ins
dec
fdiv
xchg
fs
dec
jo
push
xchg
js
lods
mov
inc
and
add
jmp
aam
iret
outs
cdq
call
jle
and
cmp
js
int3
mov
scas
pop
inc
mov
push
ins
cwde
jle
cmp
out
sbb
mov
(bad)
mov
lods
pop
rcl
xor
sub
repz
add
ins
mov
das
mov
ins
mov
aam
cmp
ror
mov
sahf
mov
dec
cwde
lea
jecxz
ja
pop
add
aaa
sar
test
mov
sub
add
jmp
pop
shl
fldcw
pop
push
xchg
inc
cmps
cli
xor
neg
pop
dec
jne
inc
outs
dec
jmp
rcr
aam
pop
pop
xchg
xor
ja
inc
ja
push
daa
sbb
or
xor
leave
cmp
mov
clc
mov
fiadd
enter
gs
xor
int
or
cmp
sti
jg
ret
mov
clc
aaa
inc
sub
push
push
add
jecxz
sbb
push
mov
pusha
push
push
ja
bnd
loopne
les
ins
(bad)
inc
retf
js
xor
stc
hlt
mov
scas
scas
fld
mov
xor
inc
jo
add
mov
out
xor
and
push
jns
fucomip
sub
dec
mov
and
sub
xchg
popa
cmp
aad
jnp
sbb
xor
sub
jns
xor
int
iret
xor
mov
jb
and
adc
or
inc
outs
addr16
push
cdq
xchg
in
(bad)
add
movs
ret
inc
push
jg
jl
add
jmp
lods
dec
es
push
xchg
xchg
add
aad
mov
pop
aas
pop
mov
dec
add
jns
sub
cmp
adc
imul
mov
sbb
(bad)
mov
inc
jecxz
ins
jl
inc
push
xchg
cmp
mov
ins
inc
inc
mov
adc
fwait
loopne
int3
fst
sub
cmp
adc
pushf
retf
imul
rol
sub
(bad)
mov
jecxz
jae
xchg
mov
je
push
add
jnp
cmp
add
lds
inc
aad
stos
ja
cmp
popa
sub
inc
ss
jmp
mov
adc
fistp
inc
dec
(bad)
enter
sub
mov
jb
cmp
icebp
jb
es
(bad)
mov
das
dec
fmul
inc
add
test
int
test
cmc
outs
cmp
movs
xor
mov
push
loopne
or
movs
ins
mov
in
pushf
into
pop
mov
dec
push
or
adc
xor
mov
(bad)
out
mov
stc
mov
mov
jo
call
add
ret
test
inc
push
pop
jecxz
mov
ret
sub
call
mov
inc
or
pop
cmps
test
or
xor
test
imul
inc
out
repz
cld
lds
ds
(bad)
sub
dec
add
xor
or
sub
cli
mov
add
mov
rcl
inc
push
push
test
push
bound
loope
fs
push
std
gs
or
sub
js
(bad)
sub
out
call
sub
mov
add
cmps
add
in
rol
stos
jle
jb
les
sub
jge
lods
cmp
into
lds
push
dec
fcom
test
jno
dec
xchg
add
sub
xchg
arpl
aas
fcomp
stc
or
jmp
(bad)
(bad)
cmps
jmp
ja
and
pop
test
inc
cmp
dec
mov
lds
lahf
jbe
jb
stos
lock
sahf
xor
ss
jae
imul
sub
pop
stos
sub
adc
lock
xor
or
dec
inc
xchg
dec
(bad)
rol
add
std
jne
pop
xlat
or
ror
arpl
cmps
pop
lods
ret
mov
xchg
stos
cli
and
adc
int3
pop
mov
and
mov
lds
add
add
adc
jne
je
mov
dec
mov
pop
add
mov
out
sub
sbb
in
inc
outs
js
mov
and
push
inc
bound
mov
sbb
or
jmp
pushf
xchg
mov
outs
pop
jne
loopne
lahf
fidivr
sbb
cmp
jg
and
mov
push
jge
cmc
sar
push
or
test
call
mov
sub
cmp
mov
sbb
jl
jnp
pop
sar
mov
push
popf
push
jno
jge
mov
add
iret
or
(bad)
jb
rol
cmp
mov
fbld
xor
out
jns
loopne
push
movd
ret
mov
jle
sbb
jnp
or
fucom
push
adc
xchg
test
rcr
add
out
sbb
aad
stc
ficom
in
sar
xor
bound
mov
cli
xchg
fcom
sbb
mov
dec
sti
bound
push
or
and
lods
mov
fistp
jne
cmp
add
call
add
mov
cmp
je
mov
cmc
leave
stos
scas
xor
cdq
(bad)
xchg
data16
outs
push
sbb
stos
cs
cmp
(bad)
daa
adc
fs
push
jb
jl
out
pop
scas
ret
retf
mov
inc
hlt
mov
jmp
add
sub
dec
and
(bad)
cmp
fdiv
je
icebp
rcl
dec
stos
adc
pop
mov
js
push
mov
in
scas
bound
adc
ins
imul
or
pop
add
dec
lds
pop
ret
jge
dec
cmp
nop
enter
xchg
ja
retf
in
outs
test
lea
or
inc
xchg
add
ins
call
adc
mov
aas
add
fsubr
xor
sbb
add
outs
jbe
(bad)
mov
jp
inc
inc
mov
cdq
push
adc
mov
xlat
xchg
dec
add
jg
shl
test
(bad)
rcr
stc
cmp
and
xchg
mov
(bad)
rcr
push
jnp
popa
stos
cmp
push
into
mov
bound
in
mov
loop
mov
mov
lock
jnp
jnp
mov
jge
cmp
int
jg
lds
es
jge
fimul
test
adc
pop
pop
call
and
jne
stos
arpl
js
div
fst
(bad)
or
jo
gs
mov
scas
adc
or
push
mov
cmp
mov
(bad)
nop
leave
call
xlat
and
mov
dec
jmp
mov
out
sti
(bad)
cld
and
mov
xchg
neg
sti
pop
mov
mov
pop
push
mov
aas
adc
(bad)
pop
or
sbb
shl
pusha
cmc
sub
ror
gs
cwde
stc
ret
aad
or
xchg
jmp
ins
int
bound
xchg
mov
out
jo
xor
(bad)
int
mov
aam
push
div
fisttp
(bad)
icebp
idiv
jmp
mov
leave
adc
push
stos
inc
mov
icebp
fadd
pop
out
out
mov
leave
scas
xchg
sbb
sbb
mov
fdiv
mov
push
stc
les
cmps
ins
leave
jae
(bad)
loopne
jne
int
push
dec
popa
ins
js
je
jmp
int
fld
sbb
adc
lahf
gs
ja
cmps
shl
stc
pop
into
lock
xor
jl
pusha
xchg
xchg
loop
and
stc
cwde
test
or
push
jne
lock
and
inc
shl
xchg
inc
add
cmp
dec
pushf
mov
mov
push
sub
pop
fs
and
stos
add
out
pop
jl
adc
jmp
retf
in
adc
sbb
inc
adc
fnstsw
into
pop
or
push
idiv
sub
stos
outs
icebp
mov
rol
and
ret
mov
xor
fcmovbe
inc
cmps
(bad)
loopne
xchg
pop
repnz
jge
pop
pop
mov
pop
xlat
(bad)
daa
or
push
cmp
or
xchg
aam
dec
jbe
(bad)
cli
xor
and
dec
sbb
and
das
cmp
jl
mov
sti
popf
cmp
or
adc
or
shr
and
(bad)
imul
xchg
or
xor
xchg
jae
or
and
fist
xor
sub
push
xchg
daa
add
jp
push
or
(bad)
ins
(bad)
ret
add
hlt
daa
fistp
cmps
cmp
adc
out
xor
int3
call
adc
jne
push
push
loop
mov
sar
and
mov
adc
mov
and
mov
icebp
cmp
js
pop
ds
xor
ja
rcr
mov
mov
push
lea
push
daa
or
mov
shr
inc
jo
sub
inc
inc
dec
jle
ins
add
or
or
int
test
fbld
lea
fnstenv
cmp
mov
ror
jo
lock
in
pop
mov
xchg
movs
aaa
sub
mov
sub
out
clc
cmp
pop
dec
inc
dec
dec
jo
xchg
jmp
pop
fcom
jmp
jnp
je
iret
fisttp
aas
fs
jno
mov
sbb
mov
daa
jp
push
push
cmp
push
lods
sbb
xor
cmp
sti
stos
xor
add
jmp
(bad)
loope
in
pop
mov
add
xchg
stos
(bad)
mov
xor
fiadd
cmc
fadd
mov
daa
lods
scas
cld
ins
xchg
xchg
dec
shl
xchg
aad
push
inc
jge
icebp
xor
pop
xchg
int3
jge
pop
sbb
and
into
movs
mov
jbe
pop
pop
sub
mov
movs
sti
jg
dec
sub
into
pop
mov
xor
rcl
jnp
push
outs
mov
aam
outs
cli
add
ins
mov
es
fstp
push
(bad)
icebp
iret
sbb
jno
sbb
in
sar
dec
adc
push
inc
outs
sub
push
xor
div
sahf
xchg
sub
lods
cmp
or
out
add
sub
neg
fwait
jl
sbb
jae
push
sbb
test
ja
mov
je
pop
cmp
das
aas
aas
ror
or
mov
(bad)
movs
xchg
xor
mov
cdq
mov
pop
js
cmp
mov
xchg
pushf
iret
or
gs
loope
fadd
imul
shl
push
ret
fist
je
addr16
and
sbb
adc
dec
addr16
jmp
adc
(bad)
cmc
push
sub
mov
movs
out
push
mov
out
dec
lods
add
xor
dec
mov
cmp
pop
leave
jo
stos
mov
shl
ja
mov
xchg
mov
inc
imul
gs
and
sbb
das
inc
lods
inc
jno
pop
xchg
out
sub
inc
jmp
mov
dec
mov
retf
and
cmp
mov
mov
add
stos
push
ja
(bad)
fisttp
add
les
jno
popa
fwait
xchg
repnz
mov
sub
xchg
mov
in
ret
rcl
add
jb
std
call
pusha
pop
pop
add
push
jp
pop
ret
sbb
or
cwde
js
ret
mov
ds
ja
adc
dec
add
int
sbb
pop
mov
cmp
mov
inc
je
mov
jbe
sub
adc
pusha
xor
dec
es
push
je
pop
fistp
sub
in
outs
sbb
scas
fsub
pop
scas
retf
out
push
cwde
lods
sti
mov
loopne
inc
xor
xor
add
pop
sub
fs
gs
xor
adc
push
sahf
aam
ins
test
stos
pop
push
data16
push
push
push
inc
xchg
scas
ficom
retf
xor
push
xor
shr
fidiv
movs
pop
mov
scas
inc
cmp
push
frndint
retf
jns
test
jno
jecxz
inc
mov
or
mov
jbe
xor
mov
cmp
mov
or
lahf
or
xor
jno
stc
push
rcl
sar
push
mov
xlat
or
sti
mov
xor
jno
sbb
lea
ss
cmp
jmp
pop
xor
sbb
shr
push
sub
xchg
mov
jne
sbb
mov
imul
gs
xchg
cmp
outs
jb
mov
inc
stos
test
sub
loope
pop
ins
retf
jg
stc
arpl
cmps
inc
cmp
fucomip
pushf
stc
mov
icebp
(bad)
fadd
out
jae
je
test
aad
cld
adc
add
(bad)
out
sub
jp
mov
loope
push
sub
cli
adc
lea
or
not
int
fidivr
xor
rcl
mov
xor
dec
sub
sub
push
dec
shr
lea
loope
es
repz
ja
jmp
cwde
movs
adc
mov
adc
add
mov
and
retf
out
lock
shl
dec
pop
aad
ds
in
jnp
cwde
imul
mov
jno
jmp
sub
(bad)
mov
mov
gs
lods
fwait
ss
lea
push
icebp
pop
(bad)
(bad)
jnp
repnz
mov
cld
rcr
inc
lea
pop
jge
mov
add
inc
mov
(bad)
into
and
cmp
dec
sub
dec
cld
adc
into
movs
imul
into
xor
es
mov
push
shl
imul
jns
xchg
push
daa
aas
xlat
int3
adc
outs
cmc
loope
mov
outs
ror
push
jecxz
inc
jp
popa
fnsave
cmps
jge
dec
mov
and
(bad)
test
ret
fnstcw
pop
das
and
pusha
mov
cdq
ds
sub
mov
mov
mov
fs
and
shl
xchg
(bad)
icebp
(bad)
in
dec
mov
or
je
test
mov
cmp
sbb
mov
out
inc
pop
pop
xchg
sbb
ret
mov
mov
imul
imul
jno
sub
xchg
retf
mov
fwait
inc
mov
jb
mov
in
mov
out
dec
cmp
push
push
ret
xor
imul
idiv
in
hlt
jmp
mov
ret
and
pop
test
jl
mov
sbb
pusha
cmp
lock
inc
or
je
loopne
call
jns
add
xchg
(bad)
jo
aad
mov
xchg
cld
test
(bad)
and
js
adc
aas
xchg
sbb
jns
sbb
fldenv
dec
out
mov
sbb
jg
add
adc
pop
lock
inc
jmp
inc
cmp
movs
mov
pop
or
adc
lahf
push
dec
lods
leave
or
push
ja
shl
push
pushfw
mov
mov
adc
cmps
inc
and
loop
mov
sub
repz
sub
sub
sub
int
inc
aaa
cmp
adc
das
xchg
mov
push
jae
push
das
stc
xor
imul
pop
outs
jns
outs
ror
adc
push
das
jl
scas
cmp
and
pop
arpl
dec
dec
lea
(bad)
mov
mov
xchg
clc
and
adc
sahf
iret
or
movs
and
sub
mov
cmps
(bad)
or
cmp
idiv
sub
lods
shr
int3
fld
stos
and
int
mov
add
or
mov
push
(bad)
sub
js
in
pop
mov
int3
pop
sbb
fs
bound
ins
add
push
rcr
ins
pop
inc
pop
sbb
sub
fdivrp
mov
(bad)
sahf
mov
scas
dec
xchg
out
js
xor
fwait
or
movs
mov
leave
(bad)
inc
ret
in
enter
push
jle
test
xchg
mov
xor
add
mov
rcr
clc
sbb
(bad)
out
push
xchg
in
outs
jns
aas
bound
dec
push
scas
and
push
popf
pop
fadd
jae
shl
or
es
or
fwait
daa
pushf
inc
in
inc
repz
sub
mov
ds
lock
repz
mov
sbb
pushf
stos
jb
xchg
movs
std
xchg
mov
aad
fcomp
add
dec
pop
xchg
jno
cmp
sbb
dec
mov
or
cmc
mov
add
or
xchg
fild
call
cmp
icebp
icebp
ins
add
pop
cs
hlt
dec
dec
add
mov
add
popa
int3
lea
sbb
jno
xchg
sub
jae
pop
xchg
mov
pop
lods
adc
xchg
and
push
mov
gs
aas
retf
jmp
test
in
jno
movs
sbb
test
jne
cdq
ret
cmp
and
je
pop
cmp
push
jbe
fwait
lahf
sbb
stos
add
sub
pop
adc
dec
adc
pop
sbb
push
inc
hlt
push
inc
sub
addr16
xchg
dec
pop
fild
cmp
ss
mov
and
shl
js
and
and
jne
xlat
or
mov
or
aaa
mov
xchg
sbb
cmps
sbb
jge
sbb
sbb
add
xor
std
xor
data16
cmp
mov
inc
mov
(bad)
loopne
cmps
and
push
mov
adc
push
sub
or
push
mov
xchg
mov
or
leave
imul
je
sub
pusha
jmp
movs
inc
jmp
imul
lds
retf
lods
jge
pusha
pop
addr16
lahf
(bad)
mov
xor
arpl
imul
adc
xor
int
sbb
mov
pop
(bad)
addr16
je
dec
imul
fnstcw
mov
cmp
ret
cmp
cmps
neg
cmps
popf
inc
imul
test
repz
jl
fwait
add
leave
les
loopne
adc
int
sbb
ds
adc
add
ror
xbegin
push
inc
xchg
mov
mov
dec
icebp
xchg
(bad)
cmp
dec
jmp
pop
mov
xor
cmp
cld
mov
jmp
mov
hlt
mov
shl
fimul
inc
cmp
sbb
ret
pop
mov
popa
jge
pusha
inc
sub
jmp
mov
daa
mov
shl
sahf
inc
test
pop
ins
mov
pop
shl
outs
jmp
rcr
popa
cli
fwait
push
pushf
sbb
cwde
inc
sar
adc
dec
cmc
xor
mov
sub
add
sbb
clc
add
sub
sub
in
inc
pop
sbb
push
sbb
and
mov
push
lds
ret
jo
enter
daa
cli
rcr
lods
mov
(bad)
dec
rol
aad
ror
ins
ss
jnp
out
mov
jl
loop
or
movs
lods
movs
push
adc
arpl
les
jbe
adc
mov
xchg
mov
hlt
std
jbe
shl
lea
shl
push
pop
lds
inc
jmp
dec
xor
cmps
ins
xor
mov
adc
jno
sub
mov
jp
xchg
jp
mov
adc
and
or
xchg
xor
jecxz
daa
into
icebp
pop
add
icebp
push
das
mov
pop
pop
(bad)
mov
loope
jae
mov
push
cdq
add
adc
(bad)
xor
(bad)
or
pop
ins
push
push
sub
fstp
test
out
xchg
mov
mov
xchg
jb
pop
pop
sbb
icebp
lods
test
mov
test
neg
das
inc
jb
adc
push
das
(bad)
mov
sbb
adc
hlt
inc
out
fsubrp
iret
retf
mov
in
xchg
mov
sbb
pop
js
jp
mov
fsubr
mov
push
xor
aam
pop
(bad)
and
icebp
ins
in
inc
mov
xor
retf
jae
in
jge
mov
sbb
lahf
arpl
pop
test
push
mov
add
fisttp
sbb
xchg
adc
fisubr
adc
aaa
cmp
jl
sub
in
mov
std
add
movs
lahf
jmp
rol
dec
pop
ret
ins
mov
push
mov
cmp
xchg
dec
(bad)
mov
sbb
xchg
mov
retf
adc
ds
jecxz
scas
or
mov
iret
lock
or
subps
push
int3
jmp
jo
jmp
fwait
in
add
cld
pop
(bad)
push
sbb
jns
pop
jmp
push
jmp
xchg
or
inc
adc
fs
cmps
cmps
data16
hlt
icebp
xor
es
jmp
and
push
or
loopne
sbb
in
es
jecxz
add
and
js
sbb
pop
cmp
jne
or
mov
adc
mov
xchg
lahf
sub
xor
mov
cli
mov
jmp
xor
fs
sbb
aad
cli
cmp
mov
add
xchg
mov
xchg
jl
enter
movs
js
or
push
xor
mov
enter
mov
push
cmp
ror
pushf
xor
and
sub
push
pop
imul
imul
and
xor
iret
jmp
fisttp
inc
mov
cmp
dec
out
push
mov
(bad)
call
dec
mov
mov
mov
cmps
xor
bound
jne
pop
xchg
imul
cmps
jno
test
mov
xchg
stos
push
and
inc
jae
xor
call
loope
dec
add
mov
lds
fmul
inc
xor
mov
mov
popa
jb
xchg
xchg
sbb
test
in
cld
dec
add
scas
sbb
dec
jno
and
sbb
retf
leave
dec
push
mov
pop
mov
or
push
dec
and
test
adc
cwde
pop
iret
sbb
not
jmp
arpl
gs
mov
dec
cwde
in
adc
bound
sub
fbstp
xchg
fisttp
aas
mov
or
or
sub
mov
mov
xchg
jle
mov
jnp
and
mov
sub
rol
jae
std
add
mov
xchg
xlat
xor
out
xor
shr
cli
mov
fdivr
test
cmps
mov
mov
mov
xor
cmps
pop
stos
fdiv
xchg
test
fs
ret
push
loope
ror
aam
mov
sbb
out
fcom
pop
out
fistp
inc
or
movs
lahf
rcl
out
dec
adc
mov
movs
cmp
js
popf
cmps
repz
shr
(bad)
dec
sbb
aam
pop
xchg
mov
dec
mov
enter
test
(bad)
pop
xchg
jmp
(bad)
jl
imul
push
(bad)
aas
add
xchg
test
jle
add
gs
sbb
mov
dec
into
loop
(bad)
repz
arpl
xor
lock
cld
(bad)
xchg
stc
pop
push
sub
fldenv
or
into
xor
xchg
pop
xchg
daa
sahf
dec
mov
pop
bswap
ds
in
lahf
push
(bad)
jae
sar
inc
sbb
and
ins
mov
mov
add
xor
mov
stos
sbb
lea
push
and
push
add
cwde
ins
enter
mov
mov
xor
jae
sub
mov
rcr
ds
gs
mov
lods
add
aas
xor
jae
or
or
sbb
inc
push
xor
daa
or
popa
push
into
repz
fld
or
push
or
cmc
fild
sub
dec
and
out
mov
test
and
call
sbb
in
daa
(bad)
and
fld
add
repz
pop
mov
lea
adc
push
mov
dec
movs
lods
xchg
aad
in
jne
mov
sbb
das
(bad)
scas
fadd
(bad)
sbb
mov
aaa
jo
mov
es
les
xor
rcr
fwait
clc
cld
loope
dec
sub
push
cwde
jb
mov
add
call
or
clc
add
lock
inc
mov
and
es
lods
(bad)
clc
imul
push
sub
pop
(bad)
test
mov
xchg
stos
mov
stos
es
adc
lds
mov
mov
in
(bad)
lock
cdq
fistp
ins
mov
call
(bad)
adc
test
or
mov
stc
mov
mov
dec
repz
int
nop
inc
addr16
lea
or
sbb
jb
xor
shl
adc
iret
sub
add
pop
(bad)
mov
pop
inc
cmp
out
mov
shl
push
push
int
pop
(bad)
movs
pop
int
push
sub
mov
dec
stos
enter
sub
test
xor
push
pop
mov
xchg
xor
(bad)
fcomp
call
jg
add
loope
ds
mov
jle
paddw
sub
sub
sbb
loope
cli
nop
xor
adc
icebp
mov
and
jp
inc
cmps
ja
loope
fdiv
sbb
in
xor
mov
or
cmovae
jge
mov
add
int
inc
aad
or
jecxz
pop
ins
xchg
shl
fwait
retf
mov
inc
out
mov
in
or
mov
out
sti
pop
into
jnp
push
loope
ds
jns
xchg
jmp
ret
add
jg
test
das
shl
xor
mov
in
jns
fwait
xor
pop
pop
push
stc
sub
(bad)
xor
mul
test
es
pop
or
aad
gs
sbb
push
loop
(bad)
fisttp
(bad)
jnp
sbb
cmp
std
sbb
mov
movs
ins
xchg
imul
outs
inc
push
jb
sbb
push
sti
imul
xchg
sub
aad
jbe
sahf
sbb
mov
cmps
mov
or
in
dec
clc
adc
or
data16
push
or
pusha
mov
add
or
xchg
mov
sti
jl
ds
dec
fs
sbb
out
lods
xchg
sbb
or
push
and
enter
loop
clc
sub
mov
mov
gs
into
lock
mov
cmps
arpl
xor
xchg
repnz
cs
out
add
mov
xor
xor
test
imul
dec
(bad)
mov
jo
mov
inc
ins
retf
lds
push
gs
mov
std
xchg
(bad)
repz
or
sbb
test
(bad)
lods
cmc
sbb
fmulp
sub
xor
std
cwde
div
sbb
and
dec
cwde
retf
pop
cmp
jle
aad
(bad)
test
or
ret
push
outs
ret
or
adc
cs
pop
push
retf
pop
das
cs
xchg
jnp
loopne
pop
sub
inc
(bad)
and
pop
sub
xor
xchg
pushf
lods
repnz
push
jo
sbb
pop
movs
pop
push
imul
movs
xchg
mov
mov
and
idiv
mov
xor
jmp
call
fisub
sub
pusha
add
(bad)
dec
aad
dec
sbb
lock
daa
cmps
or
cmc
pop
cmp
and
test
imul
push
test
pushf
arpl
add
movs
data16
jg
mov
dec
or
cdq
jnp
mov
xchg
xchg
inc
out
sub
mov
xor
xor
out
cmp
clc
cdq
loopne
xor
lds
into
xchg
dec
xchg
js
push
shl
sub
shl
enter
leave
daa
fs
add
loop
pop
repz
dec
js
jb
add
jl
imul
lock
jle
bound
cmp
ja
and
adc
aad
or
add
getsec
mov
test
push
inc
fisubr
jno
sbb
in
test
pop
xor
or
fwait
mov
or
enter
add
or
sub
fmul
test
cmp
jbe
cmc
adc
fcmovne
rcl
shl
xchg
shl
pop
stc
mov
stos
int3
cmovle
xlat
lahf
dec
rcl
in
fadd
repz
fnsetpm(287
mov
out
aad
mov
adc
aad
ret
xchg
add
(bad)
jecxz
cmps
out
mov
cli
sbb
xchg
mov
mov
push
push
mov
and
nop
or
and
push
(bad)
scas
sub
pusha
lds
cmp
les
xlat
mov
push
lds
loopne
push
xchg
lahf
xor
sub
pop
jbe
mov
repz
stos
push
xchg
cdq
loope
inc
add
inc
xor
(bad)
lods
pop
pop
call
jecxz
fstp
or
enter
push
add
inc
dec
fcomp
jne
out
inc
jl
sub
pop
sbb
jecxz
push
sbb
mov
or
pop
push
stos
push
stc
mov
lahf
cmps
mov
adc
mov
cwde
je
push
repz
repz
add
adc
sub
cmp
sbb
or
out
shl
sbb
in
adc
adc
xchg
push
mov
add
mov
fdiv
jp
fiadd
ins
mov
or
retf
arpl
fisttp
jle
jnp
jle
cmp
add
in
bnd
lods
outs
add
inc
adc
cmp
push
mov
and
imul
icebp
mov
lds
cwde
rcr
sbb
xchg
enter
cdq
adc
xchg
mov
ret
push
jo
push
sbb
sub
ja
or
fadd
fisttp
movs
mov
popa
add
and
into
ds
in
das
popf
pop
or
add
sbb
out
pop
std
outs
dec
sub
sub
nop
push
jl
sbb
ror
mov
and
fisttp
mov
sub
(bad)
test
xor
jecxz
int
jo
or
fild
enter
les
cs
xchg
and
ret
fisttp
pop
add
js
dec
sub
(bad)
jbe
in
adc
stos
or
inc
dec
loop
sub
jmp
shr
jl
and
std
loope
or
push
or
les
cmp
hlt
jns
adc
pmaxsw
es
movs
pop
call
icebp
loope
call
std
pop
fdivp
jno
cmp
cmp
add
push
lock
out
aas
jmp
movs
pop
cmc
lock
fwait
mov
int3
dec
addr16
and
mov
and
arpl
gs
out
sub
outs
sub
out
xchg
fnstcw
push
cmc
sbb
sti
test
clc
std
(bad)
(bad)
cwde
mov
ins
jl
push
dec
and
dec
mov
mov
or
ins
pop
mov
dec
push
int3
xchg
(bad)
push
xchg
push
inc
mov
std
push
pop
xchg
mov
sub
xlat
rcr
add
pop
adc
sub
shl
sub
int
jp
ret
sub
popf
addr16
std
lods
mov
dec
sbb
pop
stos
iret
bound
sbb
xchg
adc
ja
sbb
test
mov
mov
xchg
mov
je
adc
aas
and
fcomp
ret
mov
or
(bad)
mov
add
push
lea
(bad)
xor
and
mov
imul
in
adc
test
push
jecxz
sub
into
push
jg
jge
xor
mov
mov
and
enter
sbb
and
mov
mov
cmc
cs
fmulp
outs
clc
xchg
repnz
jo
mov
(bad)
pop
adc
inc
data16
xor
ins
lods
lea
push
mov
je
not
xchg
aad
jecxz
xor
in
dec
enter
adc
shr
pop
in
fmul
adc
jmp
addr16
call
push
add
jne
mov
xlat
cmp
pusha
or
sub
cmp
push
add
stos
fnstenv
add
scas
test
xchg
js
adc
push
das
or
jmp
mov
enter
xchg
fiadd
sub
sub
es
leave
xchg
cmp
sbb
int
fist
loop
mov
push
fstp
cmc
adc
mov
mov
mov
lahf
movs
jl
add
xor
iret
xor
xlat
leave
(bad)
les
ret
imul
mov
(bad)
add
stos
adc
sbb
sbb
jmp
xchg
ds
lods
jno
xchg
lds
fbstp
into
data16
dec
shr
pusha
push
stos
xor
mov
mov
bound
sbb
inc
(bad)
xor
push
loop
cmp
outs
call
retf
jp
out
je
mov
and
jmp
sub
and
mov
js
jmp
jne
cmp
inc
dec
fmul
sbb
out
std
xor
addr16
or
(bad)
dec
jecxz
cmp
pop
sbb
mov
arpl
pop
dec
push
mov
out
mov
xchg
ficomp
test
and
aas
cmc
mov
repnz
pop
test
inc
mov
cmp
sub
pop
out
mov
or
in
inc
movs
mov
sbb
fiadd
mov
outs
inc
out
mov
ficom
les
retf
test
sti
cmp
pop
lock
dec
xchg
ficom
mov
jb
popa
aam
lea
bound
mov
out
push
in
or
jb
inc
adc
imul
fwait
popa
xchg
sub
xchg
and
sar
shr
ret
loop
pop
sub
dec
add
fild
sar
mov
add
pop
shr
cmp
and
or
inc
dec
(bad)
mov
push
test
loop
pushf
(bad)
je
lods
aam
arpl
push
aas
and
mov
out
lods
sti
pop
jns
jae
pop
daa
scas
add
sti
sub
jle
and
sbb
dec
adc
mov
in
rcr
push
push
and
push
sub
cmp
sti
cmps
cmps
mov
fisubr
sub
xor
ins
adc
test
mov
sbb
rcr
pop
loope
out
movs
dec
and
call
and
sbb
sub
dec
cmps
scas
mov
stc
mov
pop
inc
mov
mov
sbb
jp
fs
adc
jmp
and
fwait
adc
ret
fwait
sub
sub
cwde
mov
popa
pop
js
fdivr
popa
popa
call
inc
nop
mov
dec
(bad)
dec
push
lock
add
aam
jo
add
popa
pop
lock
fucom
into
and
xor
dec
sub
add
or
int
inc
sub
mov
mov
out
push
jnp
push
movs
stos
popf
jg
adc
in
test
xchg
fs
adc
test
rcl
lock
mov
fisttp
xchg
ins
fisttp
in
out
inc
out
add
(bad)
adc
test
mov
inc
pop
(bad)
xor
pop
inc
sbb
xchg
adc
mov
adc
jb
stc
stos
push
scas
call
lea
scas
pop
push
xor
add
ja
sub
js
mov
imul
cmp
push
and
pusha
xor
sub
lods
sbb
ret
iret
in
or
xchg
stos
mov
xchg
ret
xchg
or
call
add
sub
or
cmps
mov
icebp
push
aad
jp
std
icebp
adc
movs
dec
jmp
jbe
ins
sub
arpl
mov
pop
addr16
(bad)
mov
imul
xchg
sub
mov
movs
hlt
ins
cdq
out
in
scas
cs
cdq
mov
ret
xchg
jle
fisub
pop
push
test
es
out
pop
sbb
outs
jg
sbb
and
pop
sub
push
or
rol
aad
fcomp
aam
sahf
test
inc
lods
rcl
add
adc
jle
jg
add
sub
mov
sub
into
(bad)
call
out
mov
mov
or
cmps
pop
out
in
test
cmps
xor
pop
daa
loopne
retf
jg
fisubr
sub
(bad)
into
push
xchg
push
jge
mov
push
sbb
jbe
inc
add
mov
pusha
lock
repnz
or
xor
gs
lea
add
sub
mov
add
fistp
sub
pop
sbb
adc
mov
loop
hlt
(bad)
aaa
or
add
mov
mov
mov
pushf
add
jmp
cmp
mov
retf
in
imul
mov
xchg
in
neg
addr16
sti
pop
stos
sbb
add
sar
sub
jbe
adc
and
hlt
data16
jmp
jge
in
movs
std
cmp
adc
(bad)
out
inc
sub
enter
bound
sub
mov
(bad)
mov
inc
cmp
jle
mov
cmp
mov
xchg
neg
cmp
int
mov
movs
sub
or
push
mov
std
mov
jg
mov
aas
mov
pop
cmp
fisub
inc
sub
mov
ret
cmps
dec
ret
mov
arpl
cmps
dec
scas
pop
add
mov
jle
inc
and
add
adc
int
or
sub
pop
mov
xchg
fcom
push
mov
(bad)
jmp
je
inc
retf
mov
out
cmp
or
xchg
mov
sub
cld
lds
test
daa
int
cdq
mov
jle
sahf
mov
imul
push
mov
push
retf
pusha
je
xchg
lods
int
cmp
out
and
add
inc
jmp
out
(bad)
xchg
and
stc
add
fnsave
dec
shl
push
call
pop
cld
sbb
push
add
(bad)
shr
imul
out
mov
xor
adc
xor
sub
lahf
repnz
xlat
ins
xchg
jl
jnp
add
(bad)
add
pop
add
push
gs
cs
je
push
test
jo
sub
cmp
int
sti
push
mov
adc
sbb
ret
data16
js
out
xlat
mul
dec
cmps
or
xchg
cdq
sbb
pop
in
pop
dec
fxch
xchg
xor
or
add
jp
and
xchg
and
sub
add
js
sub
fwait
out
clc
movs
xor
mov
lds
mov
fist
xor
cmp
aas
or
iret
xor
mov
fld
fwait
hlt
pop
shl
retf
mov
xor
or
out
xchg
cmps
cli
outs
cdq
fistp
lea
mov
lods
in
(bad)
jle
add
sbb
shr
sub
mov
pop
inc
lock
and
lods
dec
sar
test
push
nop
add
inc
inc
(bad)
loope
ret
in
ret
cdq
scas
mov
daa
pop
mov
lahf
or
sahf
adc
inc
rcl
pmulhw
fwait
mov
popa
adc
gs
push
xchg
clc
pop
push
inc
jne
bts
sub
jg
neg
cmp
fwait
xchg
jmp
ins
ins
pop
push
movs
and
lds
pop
outs
xlat
xor
cld
jae
hlt
and
clc
rcr
lds
test
push
mov
and
mov
xchg
test
mov
add
add
xchg
retf
in
scas
sub
xor
push
in
adc
mov
push
movs
imul
(bad)
xor
ins
pop
cmc
(bad)
mov
call
pop
jmp
sahf
pop
push
leave
jo
fild
je
inc
and
gs
jecxz
fcom
push
test
es
lock
sbb
dec
push
retf
inc
xchg
mov
shl
pusha
aaa
scas
cmp
and
out
lds
mov
fadd
mov
lahf
movs
cmp
inc
inc
sbb
imul
jmpw
add
xor
outs
xor
dec
pop
dec
inc
pushf
iret
popa
dec
dec
mov
mov
xlat
add
mov
scas
retf
aam
iret
dec
xchg
ds
add
push
cmps
xor
cmp
sbb
xchg
rol
cmps
clc
cmp
enter
mov
ror
test
dec
inc
pop
cmp
sbb
(bad)
cli
xchg
loop
adc
xchg
dec
push
mov
mov
out
pop
xor
(bad)
push
cmps
mov
push
lea
jmp
mov
imul
lods
sbb
add
div
in
je
cmc
sbb
push
pushf
lds
stc
rcl
repz
dec
add
or
jmp
pop
loopne
rol
(bad)
jo
aam
inc
fwait
xchg
popf
(bad)
rcr
or
hlt
ins
sub
test
adc
jbe
xchg
push
ja
int3
cs
data16
mov
imul
xor
test
inc
fmul
repz
imul
cmp
xchg
test
or
int
add
jne
sbb
xor
jecxz
stc
loope
xchg
fstp
dec
inc
outs
sub
sahf
pop
sbb
jb
(bad)
stc
aaa
mov
inc
jge
lock
adc
mov
out
mov
int3
mov
pop
in
inc
pusha
test
push
shr
dec
mov
mov
aaa
mov
shl
jnp
pop
mov
jnp
jmp
daa
dec
(bad)
ins
cmp
je
sbb
xor
sbb
std
(bad)
pand
cwde
(bad)
xor
dec
push
int3
in
outs
cmp
cmps
sahf
add
pop
into
mov
and
fimul
fsubr
mov
and
std
in
xor
sti
retf
lea
jmp
and
mov
ss
lds
jge
movs
pop
mov
out
inc
pusha
fwait
lea
retf
pushf
sub
movs
jbe
fsubrp
stc
ret
push
cmp
cmp
jo
gs
push
dec
cmc
mov
int3
inc
imul
popa
sbb
cmc
cmp
dec
lods
(bad)
aam
test
dec
scas
mov
cmp
div
or
mov
int
xor
das
retf
cmp
push
bound
sub
movs
dec
fwait
sahf
mov
push
repnz
shl
and
movs
test
mov
jno
js
js
(bad)
xchg
loope
pop
mov
cs
js
pop
rcr
or
xchg
xchg
and
mov
in
pop
shl
enter
sbb
rcl
jle
dec
xor
jmp
push
icebp
call
inc
in
inc
popa
lds
dec
add
mov
in
xchg
xchg
adc
mov
sub
in
pushf
jo
push
bound
(bad)
sbb
sar
sbb
fucomp
cmp
hlt
dec
adc
push
fcomp
adc
sub
cmp
nop
or
cwde
pop
xchg
xchg
(bad)
pop
aaa
cmp
pusha
sub
mov
sahf
or
repz
hlt
rol
dec
adc
push
and
push
ret
adc
scas
daa
adc
jg
adc
dec
dec
dec
int3
or
push
pop
sahf
cmp
xor
loope
fcomi
push
xchg
mov
xor
mov
fldenv
xchg
bound
sbb
add
mov
dec
push
jno
mov
jp
ficom
repz
adc
inc
outs
push
or
arpl
dec
out
retf
push
in
retf
pop
ins
les
push
enter
addr16
adc
mov
nop
std
xchg
leave
stc
inc
test
jb
or
jo
(bad)
inc
imul
jbe
mov
sbb
movs
ds
aam
hlt
cld
inc
stc
jle
ret
add
and
hlt
repz
call
pop
pop
jnp
mov
sbb
jmp
aaa
pop
fsub
cmp
and
enter
xchg
xchg
push
shr
lods
clc
mov
les
mov
inc
iret
or
ret
dec
mov
movs
mov
or
xchg
clc
popf
inc
dec
pop
in
(bad)
enter
or
rol
add
or
(bad)
repz
ror
mov
xchg
push
ins
clc
call
in
js
adc
xor
jne
xlat
xchg
jne
in
dec
pop
test
jp
data16
mov
xchg
cmps
loop
lock
inc
outs
cmps
xchg
int
jb
out
cmp
inc
retf
mov
lea
dec
push
xchg
xchg
add
leave
jno
and
fsubr
hlt
jbe
les
and
mul
ins
cmp
xchg
popa
icebp
aas
pop
jno
fsubp
aad
es
dec
cmp
xlat
xchg
dec
add
xchg
gs
xor
and
jmp
cwde
cmps
sub
xor
jle
and
shr
xor
(bad)
cmp
cmp
cmps
or
jmp
or
xchg
mov
out
push
leave
mov
daa
adc
pusha
mov
icebp
inc
sub
push
(bad)
daa
jno
inc
mov
add
inc
mov
lock
cmp
cmps
loopne
pop
ss
or
int3
fwait
sbb
popa
hlt
push
add
nop
mov
push
movs
mov
mov
and
mov
fucom
adc
inc
das
pusha
pop
test
dec
cmp
sar
aas
enter
push
sub
movs
cmp
adc
mov
inc
inc
int3
pop
dec
rcl
push
dec
sub
call
loopne
aaa
push
push
cmp
or
mov
xor
aas
push
sbb
pop
xor
(bad)
and
add
adc
jns
sbb
(bad)
cmc
outs
scas
mov
mov
in
pop
adc
pop
or
(bad)
sub
cmp
ror
lods
cld
fidiv
ror
mov
cmps
sbb
sbb
das
imul
push
(bad)
movs
add
and
fnstenv
(bad)
retf
hlt
out
inc
jo
mov
js
imul
pusha
arpl
js
inc
aam
fsub
xchg
pop
and
add
out
adc
es
into
sub
push
mov
jne
fdiv
call
daa
mov
shr
sbb
pop
loop
ss
bound
push
sbb
push
xor
sub
mov
shl
jge
dec
cld
pusha
sti
jecxz
mov
mov
scas
test
sub
aam
xor
add
push
fs
(bad)
lahf
test
adc
pop
sbb
shld
scas
pop
push
push
cmp
add
scas
xor
js
push
retf
add
and
xchg
stc
nop
dec
loope
mov
fst
je
adc
sbb
xor
cmp
shl
inc
lods
lock
mov
adc
div
ret
sbb
add
xor
arpl
sub
fdivp
out
cmp
and
fcmovnu
stc
dec
sar
dec
push
xchg
sbb
lock
popf
mov
inc
leave
mov
out
cli
popa
dec
xor
pop
out
lahf
cmc
ins
adc
cmp
mov
add
nop
cmc
not
in
cmps
jg
pusha
out
cmps
xchg
push
lock
cmps
addr16
push
aad
in
and
imul
fcmovu
cmp
mul
mov
test
fst
rcl
inc
imul
or
jo
dec
sub
out
dec
jecxz
sbb
mov
xchg
rcl
mov
data16
or
xor
enter
loop
mov
addr16
inc
in
adc
cwde
mov
aam
mov
push
stc
call
in
and
and
inc
push
dec
mov
pop
ins
dec
pop
aas
pop
or
(bad)
lock
fwait
pop
and
and
movs
pop
out
lock
in
aaa
lods
cmp
cmp
bound
jp
add
jae
cmp
ds
mov
nop
mov
inc
sbb
lds
sub
je
imul
out
jl
stos
lods
mov
xor
mov
jno
xchg
sbb
and
call
pop
ss
cs
jns
inc
or
ja
lock
dec
mov
dec
add
out
cmp
es
jno
xor
cmp
repz
jae
pop
push
pusha
fwait
repnz
ret
pop
or
xor
repnz
dec
jae
jb
sub
add
es
clc
adc
xlat
adc
mov
aam
lock
xor
add
pop
sbb
out
rol
jmp
clc
mov
jmp
es
sub
pushf
sbb
mov
mov
add
pop
add
je
add
fidiv
lods
xchg
sub
fimul
sbb
add
add
gs
and
test
adc
xchg
pop
test
mov
es
int
data16
dec
dec
xchg
in
and
and
nop
lock
pop
fcomp
aas
icebp
cmp
xchg
into
imul
jl
add
dec
enter
dec
mov
jns
add
pushf
xlat
mov
fsub
push
mov
(bad)
xchg
or
out
push
loope
mov
and
(bad)
ret
xor
loope
out
inc
popf
(bad)
pop
popa
adc
sti
retf
jmp
rep
xor
data16
fsubr
pop
cwde
xchg
xchg
scas
sbb
fcmovb
add
(bad)
jge
lods
imul
mov
add
sub
jae
test
cmp
rcr
cmp
daa
inc
cld
scas
scas
fs
mov
test
jne
mov
xlat
addr16
xor
movs
(bad)
pop
shl
cmps
xchg
xchg
pop
adc
or
jle
pop
mov
stc
jo
outs
ret
xor
xchg
jno
aas
fisubr
into
out
mov
arpl
loope
pop
cmp
cld
sbb
mov
aad
ret
ss
sbb
movs
lods
loope
icebp
push
xchg
cmp
jnp
xor
xchg
inc
iret
pop
push
pop
or
inc
(bad)
xchg
leave
ror
pusha
das
scas
and
lods
arpl
pushf
cmp
mov
jge
loop
pop
loope
pop
scas
mov
jbe
daa
(bad)
push
icebp
cmps
sub
movs
xor
loope
inc
movs
cmp
sub
or
out
pop
rcr
jle
(bad)
aam
push
mov
mov
out
fnsave
mov
sbb
cwde
pop
dec
jecxz
pop
jnp
mov
out
and
aas
mov
test
mov
pop
nop
aam
jb
or
add
rol
outs
and
stos
ficomp
in
retf
div
xor
(bad)
(bad)
or
imul
mov
ja
and
cmp
call
imul
push
sbb
push
push
pop
xor
loope
and
in
jne
test
repnz
pop
(bad)
adc
ja
int
les
xchg
inc
mov
or
sub
sbb
aam
mov
lahf
stc
jl
retf
adc
add
inc
jmp
in
xchg
vpunpcklbw
add
sub
repz
shr
in
sbb
shl
loope
jno
push
jmp
lods
mov
bnd
and
push
loop
(bad)
std
push
add
xchg
jne
cmp
push
pop
xchg
jmp
mov
cmps
push
jns
les
xchg
iret
mov
aas
mov
xchg
pop
push
shl
cli
in
cmp
inc
xchg
cmp
push
test
inc
scas
pop
and
shr
pop
fwait
push
test
call
ja
xchg
lods
jle
sbb
mov
mov
lods
and
mov
ss
fidivr
mov
ds
out
inc
fiadd
outs
popf
mov
adc
loopne
sub
mov
xchg
pop
sar
and
inc
xchg
or
scas
sub
push
not
or
sub
lods
pushf
int
xchg
imul
enter
mov
push
and
xchg
(bad)
mov
in
push
pop
fidivr
sbb
mov
jl
daa
jno
dec
cvttps2pi
sbb
jg
sti
cdq
pusha
xchg
sub
jle
into
pop
and
pop
leave
arpl
xchg
cmp
mov
rol
test
cmp
test
adc
xor
js
or
out
or
jnp
(bad)
ins
sysenter
dec
dec
addr16
xchg
mov
loope
(bad)
out
dec
(bad)
sub
pop
repnz
(bad)
cmc
jmp
nop
call
jae
imul
xor
dec
stos
ret
mov
sahf
scas
(bad)
pop
pop
cmp
fs
push
sbb
jl
ins
aam
mov
cmps
cmp
xor
dec
shr
jnp
and
push
inc
adc
movs
leave
push
imul
or
and
(bad)
push
por
mov
pop
mov
push
pop
data16
cmps
not
or
shl
ins
pop
sbb
or
and
mov
out
cmp
cmp
mov
fild
push
fidivr
xchg
xchg
fnsave
adc
xchg
je
dec
test
out
push
(bad)
pop
stc
sub
ret
loope
pop
mov
jo
sbb
fwait
jo
mov
sub
cli
mov
xor
cmp
inc
vrcpps
jnp
sbb
idiv
sar
addr16
stos
xor
and
mov
aas
bound
fisttp
scas
mov
cli
jl
lea
aam
cmp
cmp
or
or
adc
jnp
push
dec
loopne
dec
cdq
or
adc
cdq
in
stc
jmp
pop
dec
cmp
cmp
push
cmovns
cmps
std
loop
jbe
cmp
ins
mov
loope
je
adc
sbb
fiadd
dec
(bad)
fcmovb
sbb
cld
loopne
sahf
popa
cdq
ret
(bad)
xor
sub
inc
fxch
push
addr16
pop
loop
push
and
(bad)
fisubr
sub
jnp
xchg
xchg
mov
sub
mov
lock
dec
pop
add
sub
jns
cmp
aaa
movs
repnz
inc
leave
enter
call
inc
pop
or
repz
mov
sti
call
dec
jnp
fisubr
sbb
lahf
xchg
into
dec
or
mov
cmp
lea
mov
adc
push
pop
std
pop
out
out
pop
xor
mov
in
das
lahf
xchg
les
jnp
out
into
xor
mov
dec
cs
mov
xchg
mov
(bad)
std
adc
or
les
mov
mov
mov
mov
cmp
mov
or
jae
test
jle
and
jmp
sar
rcr
scas
mov
mov
(bad)
dec
iret
loope
mov
ficom
cmps
outs
cmc
push
pop
mov
jnp
movs
mov
dec
and
repnz
xor
mov
into
in
push
stc
es
stos
sahf
ds
repnz
lds
xchg
(bad)
cmp
rcr
mov
not
retf
or
cwde
add
jb
in
imul
jg
pushf
or
(bad)
fdiv
data16
lods
test
mov
nop
pop
retf
cmc
gs
repz
gs
retf
ins
repnz
stos
mov
pop
adc
dec
call
adc
les
aaa
jmp
int3
loopne
mov
(bad)
dec
mov
(bad)
(bad)
(bad)
sahf
gs
jecxz
mov
pushf
or
outs
mov
sub
inc
lods
xor
clc
mov
cld
xchg
lds
cwde
xor
mov
sti
adc
sbb
xchg
imul
mov
or
pop
rol
pop
cmp
sahf
lds
mov
fild
jns
jns
stos
dec
and
push
cmps
add
sbb
lds
icebp
sub
or
out
rcl
cmp
shl
adc
icebp
(bad)
sub
and
sahf
ds
sub
iret
pop
dec
ret
fwait
mov
sub
fbld
xor
or
adc
leave
stos
inc
fisttp
loop
and
xchg
call
push
test
call
mov
push
jmp
scas
and
adc
jmp
repz
inc
fist
into
fbld
sbb
outs
mov
clc
imul
fiadd
pop
or
mov
push
sub
sub
or
or
or
in
add
fadd
cmp
es
jp
sub
or
mov
xlat
adc
pop
in
(bad)
or
or
inc
pop
cwde
dec
ja
push
push
stc
jns
cmp
popa
test
cmp
out
ja
jb
data16
fwait
cmc
(bad)
pusha
pop
push
adc
jae
cmp
push
adc
mov
sbb
and
call
push
movs
push
add
in
int3
push
inc
stc
dec
or
popa
push
mov
dec
outs
imul
lods
lahf
mov
and
add
xchg
jmp
and
xchg
loope
xor
and
inc
xchg
iret
and
jge
jne
sbb
jmp
in
adc
test
fwait
push
fsubr
aam
adc
mov
or
(bad)
test
adc
xor
das
rcr
mov
stos
data16
(bad)
aaa
nop
stc
shl
adc
repnz
out
dec
push
lahf
or
dec
mov
or
push
retf
push
mov
cmp
fadd
mov
clc
sbb
cmc
xchg
mov
jns
jl
add
dec
mov
repnz
xlat
dec
add
push
fmul
iret
mov
sbb
ret
jno
cmp
xor
cli
xor
in
outs
mov
enter
xchg
jnp
dec
and
sahf
icebp
dec
push
in
mov
in
mov
call
jmp
mov
loopne
push
and
pop
test
fadd
or
or
mov
lea
mov
cwde
sub
and
push
inc
sbb
dec
push
add
lea
jb
dec
retf
mov
mov
ds
cld
sbb
mov
jle
mov
in
js
into
xchg
int
and
repz
and
stos
and
popf
sub
jl
ret
loop
scas
jle
scas
add
or
dec
cmps
pop
push
out
lahf
test
sbb
repz
cmp
mov
aaa
xchg
and
pop
hlt
push
jmp
(bad)
cmp
inc
fcomi
or
(bad)
fdiv
int3
mov
pop
test
fwait
xor
popf
clc
or
adc
shl
xchg
cmps
inc
bsf
jo
adc
int3
push
and
mov
jp
call
jnp
or
pop
adc
and
cmp
and
lods
scas
mov
popf
call
ret
dec
aas
int
es
cld
sbb
imul
es
mov
mov
or
mov
adc
jnp
push
cmp
dec
cmp
jbe
mov
jae
add
cmps
es
jns
fdiv
jmp
fcomip
shl
inc
mov
test
cdq
push
(bad)
outs
sbb
push
pop
mov
xchg
jno
push
pop
clc
(bad)
jmp
test
mov
sub
scas
lods
add
and
enter
xchg
aas
mov
(bad)
push
popa
xor
aam
push
jae
push
fld
call
popa
cmp
jp
mov
mov
rcr
xchg
outs
cmc
repz
popa
or
addr16
push
and
push
and
jae
mov
int
test
xchg
aad
xchg
cld
pop
jmp
lods
inc
fs
out
jmp
mov
in
xlat
cmps
out
lods
movs
outs
push
mov
aas
cmp
rol
gs
or
sbb
shl
scas
dec
loope
push
add
xchg
push
cld
and
xchg
and
and
jno
xchg
inc
inc
jns
mov
adc
add
mov
sar
adc
inc
fild
call
xchg
pop
cli
and
push
hlt
add
mov
xor
shr
je
mov
rcl
xor
fcom
mov
out
adc
inc
mov
sbb
cmp
div
shl
(bad)
rcr
and
xchg
arpl
push
sahf
arpl
jbe
adc
jg
sbb
rcr
jne
fwait
mov
test
ds
mov
inc
mov
pop
push
fsub
jl
enter
hlt
loope
movs
fadd
or
xor
jbe
outs
lods
fistp
or
pop
jno
push
fcomp
daa
jbe
xchg
or
pusha
push
inc
xchg
push
in
inc
popf
xor
xor
sub
add
inc
idiv
push
push
push
xchg
cmp
jb
mov
in
cmc
mov
mov
or
neg
jnp
jnp
out
rol
hlt
dec
(bad)
data16
in
mov
or
(bad)
outs
add
fldenv
fstp
mov
fwait
les
mov
sbb
xor
into
scas
pusha
jmp
cmps
out
push
add
jmp
pop
pop
mov
mov
js
adc
pop
jnp
cmc
(bad)
add
dec
imul
xor
shl
xor
leave
cmc
cs
xchg
fld
pop
call
add
aad
inc
bound
xchg
outs
cdq
mov
(bad)
(bad)
push
adc
jo
xor
xchg
and
(bad)
call
add
aam
fnsave
ret
lea
mov
xor
sub
sahf
in
xchg
retf
outs
jle
sbb
mov
xor
inc
or
push
cwde
or
stos
dec
and
push
inc
in
adc
sbb
out
push
mov
enter
fst
popa
pop
mov
stos
jns
mul
mov
imul
movs
pop
mov
call
sbb
mov
(bad)
cmp
mov
cmp
hlt
mov
xlat
nop
sub
jo
xchg
(bad)
(bad)
push
pop
and
fist
(bad)
sub
scas
lods
inc
call
stc
or
icebp
adc
ins
xlat
push
jmp
data16
xor
mov
push
mov
xchg
dec
sbb
in
xor
aad
ret
call
sbb
lea
inc
enter
call
test
and
div
xchg
mov
loope
ss
sub
ror
pop
add
ror
fnstcw
adc
jmp
imul
out
test
jge
(bad)
add
mov
sub
arpl
int
jmp
into
jne
and
cwde
outs
push
in
pop
in
jmp
cmp
add
xor
xlat
scas
inc
(bad)
shr
adc
dec
(bad)
jno
sti
sbb
ja
xor
iret
mov
and
fcom
cmp
cmp
or
xchg
imul
out
inc
cs
sbb
mov
in
push
cli
mov
ret
bound
js
sbb
push
jmp
aas
icebp
xchg
(bad)
xor
rcl
cmp
stos
add
xor
lea
push
xlat
mov
imul
rcr
rol
dec
push
add
mov
sbb
mov
cs
and
mov
repnz
and
mov
sbb
xchg
and
cmps
daa
(bad)
sub
mov
mov
inc
jno
aaa
leave
pop
xor
arpl
les
inc
daa
mov
mov
fwait
fs
repz
sub
sub
mov
fiadd
sub
jmp
jge
pop
inc
dec
push
daa
dec
aaa
pop
mov
xchg
gs
jle
add
outs
xchg
aam
(bad)
scas
scas
mov
jecxz
popf
loop
adc
aas
pop
mov
mov
stos
(bad)
mov
pop
fidivr
push
loopne
aas
test
stc
fist
push
mov
test
mov
ret
push
or
jmp
sbb
inc
inc
or
mov
sub
ror
xor
adc
push
cdq
call
mov
retf
or
rcr
stos
fcmovu
jo
dec
cmp
jbe
imul
push
and
cdq
xchg
push
(bad)
pop
sbb
fdiv
repz
adc
das
xchg
mov
cmps
sub
pop
imul
repnz
sub
or
inc
pop
adc
add
cmp
out
mov
lahf
add
cmp
jnp
pop
push
xchg
xchg
xor
(bad)
cmps
push
or
xor
movs
fst
in
cwde
idiv
push
cmps
mov
call
sub
sbb
addr16
in
push
(bad)
pop
mov
stos
push
inc
xchg
or
and
mov
sub
jp
loopne
pop
cs
movs
sbb
jp
stos
stos
fdivr
icebp
adc
out
dec
mov
xor
xchg
jg
push
inc
push
in
mov
inc
or
push
or
cmp
out
cmp
in
mov
sub
cmp
and
mov
push
xor
dec
inc
or
les
scas
repnz
pop
outs
cmp
sahf
out
or
in
jns
in
in
cmp
ss
test
mov
cwde
xor
push
cld
xor
out
pop
rcl
mov
fdivr
(bad)
pop
inc
xor
retf
jb
inc
sbb
aaa
(bad)
sti
rcl
mov
pop
rcl
mov
jmp
in
pusha
and
xor
out
fsub
adc
add
mov
fstp
cmp
popf
cmp
mov
retf
rcl
mov
mov
dec
jnp
inc
aad
push
jb
jl
jnp
sar
rcr
div
cmps
mov
cmp
cld
arpl
pusha
and
mov
es
or
or
lds
dec
mov
pop
mov
pop
cld
jae
cli
mov
mov
scas
jno
mov
dec
(bad)
imul
adc
fld
test
xchg
dec
xlat
dec
add
inc
push
inc
inc
rol
rol
fidivr
enter
mov
jne
scas
iret
push
or
sub
xor
clc
xor
sbb
js
stos
sbb
jns
dec
cmp
popa
lds
jmp
loop
std
mov
retf
cmp
out
jmp
inc
sub
push
fadd
sbb
lods
iret
fwait
jmp
icebp
xchg
mov
in
xor
xchg
icebp
js
pop
ins
mov
adc
xchg
pop
or
push
adc
mov
stc
mov
inc
xchg
adc
jmp
test
popa
das
push
jmp
lock
xchg
sub
mov
dec
fmul
adc
jmp
mov
sbb
div
mov
out
aam
jae
shl
or
loopne
clc
and
sbb
pop
xor
loop
icebp
das
pop
cdq
loopne
dec
js
rcr
enter
test
ret
repz
dec
mov
ror
das
or
xor
add
setp
mov
in
or
daa
jno
pop
mov
or
or
sub
xchg
cmp
int
inc
jl
cmps
fcomp
arpl
fstp
fiadd
mov
int3
xchg
stos
bound
sub
dec
cmp
adc
loopne
add
and
rcr
jo
xor
pop
adc
xchg
pop
mov
cmp
sub
(bad)
adc
add
inc
retf
adc
jmp
(bad)
scas
inc
cmc
pop
or
and
inc
inc
pop
(bad)
and
dec
pop
idiv
movs
or
rol
and
push
sbb
jo
fdivr
and
push
int3
or
(bad)
inc
and
dec
pop
adc
test
retf
dec
outs
sub
inc
dec
jns
cmp
das
push
jnp
cmp
loop
fnsave
inc
xchg
mov
lock
mov
push
icebp
rcl
shufps
cmp
mov
fucomip
addr16
daa
cmps
pop
inc
sbb
and
and
lods
add
ret
jne
loope
pusha
loopne
in
into
mov
cmc
lods
jno
scas
iret
outs
mov
in
push
out
jns
cld
in
(bad)
sub
les
nop
dec
shl
dec
test
add
xor
fnstcw
data16
add
cld
cmc
mov
repz
dec
jb
movs
fstp
aad
xor
scas
std
mov
outs
sub
scas
inc
in
mov
xchg
sub
push
loope
and
cmp
add
enter
and
xor
xchg
jl
add
leave
dec
push
jno
mov
pop
imul
mov
adc
push
sbb
mov
ja
push
repnz
mov
fs
scas
push
sbb
jg
xchg
(bad)
leave
fwait
das
push
das
xor
push
mov
sbb
add
jno
jnp
aas
leave
in
jecxz
inc
lds
ja
ss
sbb
mov
cli
ror
jmp
mov
mov
cs
call
mov
movs
(bad)
test
add
jbe
inc
jl
push
(bad)
mov
push
cli
push
push
aas
loope
aas
idiv
fidivr
mov
inc
or
dec
lods
or
or
jecxz
adc
fsubp
mov
cmp
lods
dec
(bad)
pushf
(bad)
or
(bad)
inc
adc
stos
mov
pop
xor
fwait
ins
por
in
cmp
mov
(bad)
stc
lods
(bad)
ja
scas
add
pop
dec
test
in
fild
scas
xlat
pop
and
mov
pop
cmp
mov
lea
push
in
cwde
jns
loop
das
jbe
mov
sbb
popf
mov
xchg
xchg
je
fwait
dec
inc
popf
in
mov
pop
push
jle
xor
mov
add
lea
scas
adc
mov
push
push
cld
mov
loope
mov
jbe
rcl
inc
inc
dec
xor
in
fsub
adc
xchg
xor
das
fwait
enter
inc
(bad)
sub
shr
pop
in
scas
and
mov
mov
ins
push
in
push
add
lods
shl
(bad)
sbb
mov
jmp
pop
cmp
add
mov
mov
fdiv
xchg
ds
or
test
ret
push
loope
gs
dec
jne
imul
retf
ds
sbb
mov
and
xor
aaa
add
adc
sar
dec
iret
push
jns
add
nop
inc
jne
paddsb
call
sbb
pop
pushf
clc
mov
cwde
jae
enter
xchg
jmp
jo
dec
gs
or
push
and
xchg
jmp
jb
push
adc
pop
shl
cmp
cmc
sahf
scas
loop
pop
xor
rol
lahf
mov
and
repnz
push
and
mov
div
jge
dec
test
xchg
jbe
pushf
mov
push
xlat
mov
fld
dec
imul
popf
push
in
push
mov
mov
xchg
jle
push
scas
add
scas
adc
push
ror
imul
ret
sbb
lock
clc
cmp
inc
cmp
ins
clc
cmps
lods
call
ret
sbb
adc
aas
jns
loope
test
lods
inc
jmp
xchg
(bad)
es
nop
nop
retf
sbb
rcr
mov
jns
push
inc
and
cmps
loopne
jg
dec
rol
(bad)
int
cmc
(bad)
(bad)
mov
push
out
add
pushf
lods
fisttp
mov
or
add
adc
mov
stc
pop
jmp
in
setae
jo
popf
lods
cmp
jg
call
cmps
push
or
(bad)
jae
stos
mov
sub
xchg
(bad)
jmp
pop
xchg
dec
sbb
dec
je
push
jmp
xor
jne
test
cmp
pop
add
cwde
pop
call
pop
nop
xlat
or
dec
in
push
sbb
test
fild
cmp
sub
inc
shl
aad
(bad)
das
push
jb
inc
mov
pop
push
and
dec
mov
push
int3
cmp
les
cld
cmp
sbb
(bad)
cmps
sub
aas
cmps
cmp
jecxz
cmp
fidivr
in
mov
test
xor
test
sub
lea
ds
jg
mov
xor
shr
addr16
xchg
mov
ss
cmp
cmp
out
mov
iret
ins
outs
jno
mov
or
aad
add
sub
push
push
nop
test
and
or
sbb
adc
xchg
pop
int3
retf
pusha
add
cmc
xor
push
xchg
repz
jo
not
push
fsub
add
add
inc
adc
clc
sbb
cmps
imul
in
dec
inc
dec
iret
lock
out
scas
ins
out
or
(bad)
cdq
mov
and
cdq
and
clc
les
xor
or
fnstsw
pop
icebp
jg
(bad)
in
test
xor
stos
mov
and
jb
(bad)
and
call
popa
mov
sbb
mov
sbb
dec
(bad)
dec
add
(bad)
or
lahf
in
pop
call
jne
fstp
dec
inc
cli
shr
ret
inc
jo
addr16
fild
or
movs
jns
cmp
les
ja
pop
push
mov
aam
xor
xchg
or
int
adc
sbb
jge
push
lea
fsub
pop
dec
test
push
sub
fisttp
adc
add
xchg
sub
xchg
inc
int
nop
dec
push
in
loopne
xchg
add
cdq
dec
dec
scas
and
push
sti
push
rcr
and
xor
pop
fcmovbe
stos
dec
pop
sbb
mov
repnz
add
jmp
or
add
jae
xchg
fistp
cdq
jl
jmp
dec
jmp
(bad)
out
adc
pop
loope
out
push
add
dec
out
sar
xor
(bad)
outs
cmp
mov
pop
popf
in
and
sub
pusha
repnz
cmp
dec
bound
clc
sub
lahf
loope
call
das
and
dec
dec
rcl
jmp
je
inc
mov
das
pop
minps
scas
adc
jmp
inc
jmp
dec
push
ffreep
mov
lods
sbb
sbb
mov
mov
jbe
dec
sbb
jle
inc
mov
hlt
mov
pop
popf
dec
sbb
cmp
adc
sub
adc
sub
test
mov
test
cwde
inc
jmp
push
push
mov
or
or
or
repz
fucom
dec
js
jb
aaa
fwait
cmps
mov
mov
sub
xchg
movs
pop
imul
out
scas
inc
enter
dec
pop
lods
lahf
adc
sbb
jg
fld
pop
enter
in
push
push
data16
xor
loope
(bad)
rcl
ss
stos
adc
cwde
fs
loopne
adc
jb
ffree
(bad)
es
loop
mov
fld
je
lods
jnp
mov
and
shr
mov
sub
jmp
xchg
in
or
xor
mov
enter
xor
movs
sti
shl
xchg
xchg
xlat
sub
add
icebp
out
mov
mov
push
std
adc
call
js
ins
mov
neg
out
mov
ss
adc
out
dec
(bad)
lock
rol
xor
xchg
ins
pop
iret
sub
xor
pop
out
test
adc
sar
jecxz
or
cmp
aas
inc
cmp
fst
mov
xchg
xchg
xchg
sbb
fld
aas
or
mov
inc
and
test
jmp
shl
cld
xlat
(bad)
xchg
dec
mov
lock
out
inc
in
push
or
dec
dec
add
mov
fcmovb
popa
add
mov
cmc
icebp
mov
add
push
je
mov
xchg
mov
nop
test
sub
pop
add
imul
les
mov
add
call
outs
fsub
inc
imul
enter
mov
mov
adc
sub
mov
cmp
mov
outs
enter
clc
loop
imul
sbb
nop
inc
in
or
leave
movs
jl
mov
cmps
push
stc
fwait
and
mov
leave
stos
imul
mov
jns
mov
sar
lods
pop
adc
cmp
addr16
into
and
ja
imul
sub
hlt
sub
jne
(bad)
push
stos
inc
out
xchg
pop
scas
cmp
xchg
cli
into
outs
xchg
mov
push
add
jbe
push
pop
call
xchg
xchg
data16
jbe
stos
xlat
pop
add
popa
imul
sub
mov
jne
pop
pop
dec
in
ret
mov
cwde
sar
fbld
out
xchg
pushf
clc
or
iret
jge
sub
in
cdq
jl
sbb
fstp
hlt
sbb
add
outs
fadd
cmp
les
inc
fs
jne
xor
inc
and
mov
aas
pop
dec
xchg
cli
jle
jnp
cmp
ror
dec
dec
adc
retf
mov
sahf
push
dec
dec
test
(bad)
mov
js
pop
add
and
jnp
(bad)
mov
sbb
adc
aad
pop
jle
mov
in
ror
or
sub
push
pushw
adc
arpl
jl
ds
add
mov
cmp
(bad)
pop
test
test
cmp
mov
cmp
retf
jmp
(bad)
mov
jmp
into
sar
ins
sub
sbb
sub
jp
(bad)
enter
mov
lods
call
mov
xchg
out
test
retf
mov
jne
and
stc
shl
jbe
xchg
test
mov
jae
push
push
mov
test
(bad)
loop
mov
push
iret
bound
(bad)
jbe
xchg
loop
or
push
add
and
ret
push
mov
retf
ret
jns
mov
fistp
fimul
loope
mov
push
pop
jne
fbld
and
cwde
push
sbb
rcl
in
aaa
clc
(bad)
dec
mov
in
ret
pop
sbb
xor
pop
and
mov
cmp
jo
lea
dec
imul
jmp
pop
adc
and
xor
fnstenv
dec
shr
push
ja
jl
test
ret
fstp
pop
cmp
mov
out
jo
cmp
jne
aaa
fcom
stos
add
push
sub
mov
add
sbb
sub
mov
mov
pop
mov
add
cmp
lods
jb
jmp
jb
fs
mov
or
mov
xor
xchg
hlt
dec
push
daa
xor
mov
jbe
mov
or
jmp
xchg
(bad)
out
jg
cmc
push
stos
cmps
cmp
lock
mov
xchg
(bad)
mov
call
cmp
data16
js
ror
shl
cmp
jnp
jns
in
(bad)
mov
sub
fnsave
loope
inc
ret
ret
pushf
pop
sbb
test
and
(bad)
xor
mov
mov
sbb
sti
jo
cs
mov
imul
pusha
rol
fwait
jg
xchg
out
call
sbb
inc
ds
test
(bad)
dec
dec
cmps
inc
add
or
add
and
adc
cmp
cmp
sbb
inc
mov
xor
cmc
btr
inc
jp
std
dec
cmc
pop
stos
shl
movs
cmp
mov
jp
movs
xchg
pushf
inc
mov
aas
inc
inc
pop
jae
sub
mov
ss
retf
jae
fdiv
arpl
xchg
pop
pusha
mov
pop
xchg
xor
rol
mov
mov
(bad)
hlt
stc
mov
push
call
addr16
sub
jo
lds
mov
dec
aas
jo
dec
cmps
xchg
and
js
mov
dec
add
in
mov
pop
xor
in
dec
jnp
push
adc
nop
ja
shr
ficom
enter
inc
cmp
push
push
mov
mov
lock
mov
jno
jno
outs
add
jbe
push
adc
es
push
inc
xor
icebp
xchg
aas
daa
xor
push
sti
inc
mov
out
xchg
xchg
or
in
sbb
nop
or
jge
add
ds
dec
loop
stos
add
adc
xor
mov
mov
pusha
cmps
mov
repnz
fs
cmc
or
fucomi
push
test
jl
sbb
(bad)
ss
leave
fstp
xchg
imul
sbb
push
int
jno
ds
shl
movs
mov
xlat
pop
pop
add
xlat
mov
dec
push
mov
mov
cs
aas
and
fnstcw
inc
jle
or
fwait
and
(bad)
pop
mov
imul
inc
sar
inc
test
xchg
sbb
fidivr
shl
(bad)
xor
cli
inc
ret
fsub
push
shr
repnz
fdiv
bound
pop
rcl
and
pop
hlt
ins
and
pop
mov
jb
xor
ja
mov
inc
rcl
ror
fcmovnb
nop
mov
pushf
fwait
cmp
push
lods
cmps
in
test
lds
mov
and
stmxcsr
(bad)
outs
por
arpl
es
jl
mov
push
call
or
sbb
arpl
pop
xor
mul
xor
aaa
adc
pop
pushf
ss
int3
ffree
mov
in
mov
jle
stc
inc
popa
outs
ret
xor
je
sbb
add
and
cld
xchg
rcr
pop
xchg
in
inc
jg
sahf
inc
push
fcomp
pop
or
jae
xchg
shr
out
out
repnz
mov
inc
and
sbb
xor
fdivr
sub
lods
xchg
add
jmp
dec
mov
jge
aas
cmp
xchg
imul
(bad)
les
pop
scas
xor
arpl
test
push
call
inc
shr
lea
ret
sbb
stc
push
aam
iret
in
jbe
jp
retf
add
dec
iret
pop
cmp
dec
dec
les
adc
sub
pop
pop
lods
mov
or
xchg
push
or
rep
lds
adc
js
mov
test
dec
pop
jg
inc
pop
int
push
nop
lea
movs
xlat
add
mov
push
cs
push
push
mov
sbb
and
jne
cmp
mov
pop
dec
jnp
pop
in
and
mov
push
or
data16
dec
mov
sub
jno
pusha
pushf
lds
stos
data16
cmp
or
mov
aad
ret
loope
retf
cmp
int3
ja
inc
lods
mov
cdq
inc
int
rcl
or
shl
stos
push
cmc
pop
in
cmps
jae
sbb
mov
push
cmp
dec
les
sub
loop
mov
mov
pop
in
shl
push
sti
pop
pop
fs
stos
or
(bad)
xor
and
xor
or
push
inc
ins
rcr
repz
mov
mov
xchg
mov
jmp
(bad)
and
pop
enter
mov
pop
add
fild
in
push
or
fsubr
bound
push
test
hlt
fild
rcr
mov
ja
enter
pop
cmp
xchg
sahf
jle
sti
sub
sbb
jl
sete
or
js
pushfw
mov
test
sbb
addr16
fstp
add
imul
scas
pop
mov
ins
test
lods
pop
xchg
mul
xor
mov
fisub
fiadd
rol
sti
push
xchg
sub
cdq
int3
cwde
jbe
(bad)
cwde
push
cld
fild
outs
ja
lods
and
or
push
and
xor
xchg
cmp
jl
and
xchg
cmps
dec
das
in
call
jo
jb
mov
pop
cmc
adc
and
loopne
jno
lea
rcl
sbb
push
ja
xor
in
xor
into
imul
outs
inc
aaa
fs
add
test
stos
mov
pop
imul
inc
aas
out
test
or
sbb
sbb
pop
or
add
jnp
mov
sbb
mov
call
out
xchg
cmp
inc
cmp
add
cmps
lods
popf
aaa
int
repnz
sub
sbb
push
arpl
ret
jle
inc
inc
xchg
hlt
nop
xchg
mov
fcomp
mov
ins
mov
cmps
xchg
leave
pusha
in
data16
mov
xor
push
loopne
popf
or
lods
aaa
inc
dec
pop
dec
mov
dec
repz
sbb
in
cmp
pop
ret
ss
popf
loop
outs
mov
mov
dec
in
std
scas
rcr
cmp
loopne
inc
clc
sbb
xchg
add
mov
adc
add
sahf
jecxz
inc
inc
adc
movs
icebp
leave
mov
xor
das
les
mov
push
imul
aaa
cmp
inc
mov
aad
or
mov
ins
ss
inc
xchg
ja
outs
(bad)
mov
pop
jg
mov
dec
ins
fadd
jg
push
dec
inc
aam
push
dec
sbb
scas
call
div
sub
scas
mov
loop
(bad)
pop
fs
push
dec
pop
frndint
ret
adc
std
enter
sahf
arpl
jno
jmp
out
mov
mov
outs
test
mov
adc
or
ror
ja
push
rcr
cmp
pop
add
pushf
ss
repz
cs
xchg
std
jge
jl
pop
cmp
inc
mov
data16
loope
pop
ja
cs
cmps
(bad)
xchg
jo
pop
xchg
and
adc
pop
xchg
mov
push
mov
mov
jns
repz
cwde
jmp
xchg
push
aaa
or
xchg
pop
fst
call
and
cwde
je
aas
mov
popa
sfence
jns
inc
sbb
inc
add
in
or
xor
imul
leave
mov
mov
jb
jge
add
adc
fdiv
or
mov
jl
mov
loope
xor
imul
push
mov
hlt
xchg
xor
aam
rcl
cpuid
enter
mov
imul
fsubr
mul
pop
or
(bad)
lahf
xor
dec
loopne
pop
mov
push
or
pop
sub
loop
pop
mov
stc
cmp
(bad)
fcmovne
daa
sbb
addr16
scas
ss
ins
repnz
mov
push
repz
jg
dec
ja
add
cdq
bound
not
sub
xor
push
iret
pushf
(bad)
pop
js
nop
jae
ins
pop
cmps
loop
cwde
retf
dec
and
or
lds
pop
es
(bad)
xor
mov
call
test
enter
leave
or
sar
xchg
cwde
aaa
shl
out
or
push
out
(bad)
jns
lods
cmp
and
adc
push
std
sbb
mov
(bad)
and
add
dec
dec
mov
dec
mov
xor
shr
mov
movs
sbb
sub
pop
aad
retf
stc
sahf
and
movs
stos
pop
xor
imul
mov
xor
xor
pusha
sar
movs
lea
icebp
add
lea
ins
ror
cmp
shl
out
xor
daa
mov
add
xchg
bound
jae
pusha
jo
sub
or
test
lods
jae
dec
in
(bad)
in
pop
xor
jmp
pop
inc
dec
cmp
adc
imul
shr
adc
fsubr
shl
stos
mov
inc
mov
mov
add
mov
jge
xchg
push
dec
call
mov
icebp
(bad)
sar
jg
inc
into
dec
in
add
movs
cmp
dec
add
xchg
sub
mov
retf
pop
xchg
add
pop
dec
js
push
fucomp
pop
mov
mov
push
dec
pop
outs
cmp
mov
imul
in
es
sub
in
ja
shr
pxor
mov
loopne
arpl
inc
pop
mov
xor
or
pusha
jle
shr
lea
mov
hlt
adc
push
pop
fsubr
or
xor
mov
push
mov
cs
mov
dec
pop
in
jbe
pusha
pop
les
adc
shl
mov
dec
jns
stc
xor
shl
call
push
scas
stos
adc
repz
jnp
mov
(bad)
xchg
mov
xchg
adc
std
stos
xchg
mov
or
ss
pop
mov
jg
int3
and
jmp
mov
retf
sub
jg
add
popa
xor
jmp
xchg
sub
xor
shr
jmp
cmp
popa
out
mov
(bad)
shl
popa
ja
jns
fild
ret
push
jecxz
bound
pop
mov
and
jmp
jmp
dec
pusha
jecxz
and
pop
movs
mov
inc
inc
cmp
out
out
scas
les
push
gs
mov
jmp
cmp
mov
jno
into
int3
leave
scas
mov
lods
popa
cmp
adc
sub
movs
cmc
int
test
adc
pop
ret
jo
sub
js
enter
call
jno
nop
call
dec
add
out
jecxz
in
push
dec
sahf
popa
inc
fdiv
repz
and
(bad)
or
cmp
(bad)
mov
retf
addr16
aam
retf
cmp
adc
dec
and
mov
or
mov
or
and
dec
jns
rol
fild
xor
add
and
arpl
iret
cdq
inc
xchg
push
daa
add
sbb
xchg
and
xchg
fadd
xlat
mov
ret
dec
inc
jp
imul
je
call
add
scas
jecxz
cmp
adc
repnz
xchg
cmp
stc
call
mov
mov
or
ror
push
jae
(bad)
cs
ja
lods
pop
loopne
adc
sbb
test
or
and
sub
(bad)
mov
ins
scas
mov
sbb
sub
fcom
call
mov
mov
mov
daa
pop
dec
ret
sbb
jae
xchg
add
aaa
push
push
inc
inc
sbb
fidivr
call
sub
je
mov
daa
shl
pop
ret
rol
loope
jmp
mov
mov
nop
sub
sub
xchg
sbb
shr
mov
mov
outs
into
mov
test
inc
hlt
adc
cmps
dec
test
imul
cmp
adc
sub
outs
lds
xchg
mov
dec
dec
push
aam
(bad)
push
sub
push
je
cdq
lea
xor
loop
or
push
jp
leave
xchg
cmp
lods
arpl
jno
adc
add
shl
inc
jmp
test
aas
and
das
rol
inc
les
retf
mov
jmp
iret
dec
test
jg
ss
mov
jmp
and
shl
jmp
test
loope
pusha
out
cmp
inc
sbb
sub
test
mov
ret
sub
lea
ss
mov
pop
inc
loop
or
sub
xor
ret
adc
push
call
int
push
cli
cs
inc
mov
adc
push
nop
fdiv
fidiv
xchg
cmc
push
xchg
or
add
inc
jo
xlat
push
or
sub
mov
ins
add
popa
and
mov
cwde
add
ds
pusha
imul
add
xchg
ss
mov
push
or
sbb
inc
mov
add
ins
fcomp
sti
mov
jno
adc
sub
(bad)
jnp
repnz
push
cmp
adc
scas
sub
jbe
fisubr
xchg
or
mov
sbb
hlt
xchg
lock
pop
out
mov
nop
push
xchg
adc
mov
mov
mov
retf
push
push
sbb
sub
repnz
aaa
mov
adc
mov
mov
cmps
mov
lahf
dec
out
popa
inc
xchg
cwde
nop
xchg
sub
(bad)
cmp
test
gs
jge
xor
adc
imul
push
xchg
ret
add
popa
fs
push
add
mov
cmp
dec
mov
and
shl
inc
ds
jae
sbb
cld
cld
and
movs
xchg
jmp
dec
xchg
loop
shl
push
jmp
aaa
repz
ret
test
out
adc
sub
dec
dec
mov
sbb
jne
loope
icebp
push
xor
push
cmp
test
lahf
mov
sbb
int3
test
leave
imul
sub
mov
ds
jne
pop
xor
cmp
sar
dec
jge
cmp
jbe
test
inc
mov
cmps
sub
aam
jo
mov
xor
rcr
jl
test
mov
sti
test
inc
dec
stos
leave
neg
cli
call
pop
pop
or
xchg
or
push
sub
xor
sub
lea
leave
or
retf
(bad)
cmp
outs
arpl
js
cmp
loop
(bad)
das
jle
aad
rol
xchg
in
mov
inc
dec
xor
gs
adc
pushf
cli
popf
pop
in
mov
mov
sub
or
dec
mov
mov
xor
aad
sbb
imul
mov
lods
sub
mov
ins
sbb
xchg
mov
mov
fcmovnb
add
repz
dec
cmc
adc
(bad)
push
jl
ret
adc
pushf
jp
or
inc
jg
das
push
sub
ds
mov
mov
push
and
lds
xchg
mov
jae
mov
call
sbb
loop
push
in
cmp
cwde
rol
faddp
mov
sbb
rep
inc
and
aad
mov
mov
fld
nop
push
arpl
sbb
xor
inc
movs
push
mov
add
imul
ins
pop
mov
push
arpl
in
jmp
inc
or
leave
int
sahf
loop
jmp
lods
pop
not
lds
aaa
loopne
or
fnstcw
inc
sub
ret
push
aam
push
mov
sti
shl
pop
and
xchg
iret
dec
int
jmp
mov
int3
mov
int
ss
ins
aas
int3
ds
in
mov
mov
cmp
(bad)
mov
enter
xor
aam
xchg
popa
add
inc
cmp
jmp
(bad)
shl
iret
inc
fs
ins
cmp
inc
mov
lahf
cdq
fist
xor
into
xlat
inc
ror
imul
movs
mov
out
mov
push
arpl
push
adc
out
adc
imul
xchg
mov
mov
xor
dec
loop
jo
mov
jg
pop
inc
das
push
add
inc
inc
js
or
cmc
xor
sub
aam
add
in
and
mov
inc
mov
add
inc
xchg
leave
sub
mov
leave
inc
bound
das
xor
fldenv
inc
retf
enter
aad
lods
push
sar
fisttp
scas
scas
stos
pop
and
stos
bound
pop
push
pop
shl
fwait
push
loop
retf
xchg
mov
cld
lea
inc
push
sbb
dec
sar
pop
xor
(bad)
mov
mov
mov
push
push
ins
js
(bad)
sub
mov
out
ja
popa
mov
pop
adc
add
loope
out
sbb
mov
rol
mov
jmp
cdq
aas
scas
sbb
xchg
mov
fidivr
sub
iret
dec
shr
xor
es
cdq
xor
int3
(bad)
shl
inc
jecxz
sti
enter
push
mov
shr
inc
push
xchg
dec
leave
mul
inc
inc
or
jl
pusha
mov
stc
into
jo
mov
mov
inc
jle
cmp
and
ja
in
adc
ds
inc
fdivr
and
mov
movs
data16
push
mov
xchg
sti
retf
cmp
jne
lahf
sub
mov
adc
(bad)
sbb
adc
mov
mov
xchg
fstp
mov
lds
outs
dec
test
repnz
je
ret
movups
jnp
cwde
(bad)
stc
in
and
(bad)
xor
pop
imul
xchg
adc
ins
push
sub
ss
aaa
jno
or
(bad)
es
je
(bad)
jb
and
jo
push
mov
dec
xor
lods
(bad)
jnp
adc
scas
pop
mov
stos
fs
sti
hlt
push
test
mov
jbe
dec
shl
rcl
mov
mov
cdq
out
jo
jge
xchg
jg
push
(bad)
call
cmc
test
pop
xchg
movs
sbb
sub
stos
pop
xchg
int3
mov
stc
ins
rol
pop
push
xchg
cli
mov
mov
lods
jmp
dec
cmp
neg
test
ins
cmp
pop
(bad)
stos
sbb
hlt
out
mov
xlat
xchg
push
outs
dec
cmp
cmps
loopne
pushf
add
xlat
mov
outs
cmps
adc
jl
stc
mov
dec
dec
xor
or
scas
and
jl
push
mov
(bad)
jbe
gs
(bad)
call
and
jl
ficom
or
mov
inc
fild
jecxz
sub
and
lods
das
adc
rol
outs
cmc
cmps
cmc
sar
xor
setae
jle
(bad)
shl
jmp
xchg
sti
xor
mov
jbe
jo
dec
adc
out
inc
pop
and
xchg
jmp
pop
(bad)
mov
jb
xor
mov
hlt
pop
sbb
mov
dec
jge
faddp
lea
cld
pusha
mov
mov
fcmove
xchg
push
cld
sahf
jle
fcomp
cs
(bad)
sbb
in
jle
fisttp
fs
mov
fs
out
jo
out
pop
jle
(bad)
and
push
inc
jmp
hlt
imul
xchg
in
push
inc
je
out
mov
ins
inc
shl
inc
push
xchg
(bad)
and
cmc
jne
call
fdivr
push
jnp
jo
out
xchg
add
and
sar
jno
out
pushf
in
sub
scas
push
mov
mov
adc
cdq
outs
test
pop
test
shl
(bad)
fimul
jns
je
mov
dec
inc
xchg
mov
jecxz
pop
mov
inc
mov
add
imul
jb
sar
cmp
xchg
shr
xor
and
ficomp
xchg
int
rol
adc
fbstp
jle
shl
leave
jb
int
pushf
fwait
movntps
mov
xchg
ins
xchg
mov
data16
aas
sar
repz
movs
cld
inc
out
pop
leave
and
cld
aas
mov
inc
loopne
xlat
mov
dec
cmps
and
cmc
mov
movs
es
cmps
push
fist
retf
sub
inc
fsub
or
pop
shl
in
movs
mov
into
inc
mov
push
fmul
add
push
retfw
sub
xchg
add
mov
aaa
test
jmp
mov
mul
and
pop
popf
rcr
out
mov
mov
in
push
(bad)
mov
lods
cmp
sbb
aaa
repz
ficom
pop
int3
push
inc
xchg
sbb
jno
push
retf
adc
adc
popa
test
aaa
cli
(bad)
cmc
shr
dec
mov
lods
and
cmp
sub
mov
(bad)
xchg
arpl
xor
ds
out
movs
(bad)
syscall
call
idiv
pop
iret
push
leave
jmp
shl
gs
in
and
cmc
jae
div
xor
jle
leave
addr16
hlt
push
jbe
dec
lods
shr
aam
xchg
jp
push
aaa
mov
enter
mov
les
push
cwde
movs
adc
pop
in
and
adc
xor
mov
cwde
jmp
jl
fadd
and
je
clc
das
js
push
sbb
inc
dec
xor
out
pop
push
(bad)
dec
xchg
leave
ja
push
inc
or
dec
or
pop
les
and
push
sub
in
cwde
ja
aad
pop
icebp
mov
(bad)
aas
mov
jl
or
js
mov
inc
pop
xchg
call
push
xchg
mov
shr
add
(bad)
mov
jnp
pusha
fisub
pop
test
icebp
or
or
xchg
xchg
adc
add
jmp
add
shl
mov
pop
lock
cwde
and
call
jl
and
mov
mov
mov
cwde
pusha
gs
out
inc
movs
scas
test
mov
cmp
or
adc
div
jae
rol
dec
push
pop
fisubr
call
(bad)
lock
pop
or
test
inc
push
ss
dec
cmp
movs
sbb
xlat
lsl
scas
push
inc
scas
push
test
xchg
aam
xlat
pop
xchg
or
fxch
iret
imul
sbb
dec
and
(bad)
mov
jle
dec
aam
xlat
and
pusha
mov
loopne
mov
or
jae
pop
clc
push
aaa
pushf
pop
sahf
lods
arpl
or
jmp
dec
add
and
or
(bad)
(bad)
adc
mov
out
ret
dec
pop
pop
add
push
lods
push
mov
inc
mov
pop
inc
div
inc
inc
pusha
leave
cwde
sbb
imul
adc
out
popa
aas
sbb
mov
push
xchg
xor
and
jae
push
inc
inc
les
test
loope
push
out
aad
repz
add
aaa
pop
mov
dec
xor
fld
fistp
rcl
cmps
xchg
das
shl
mov
xor
in
jp
pop
jne
imul
xor
movs
test
fld
mov
mov
xchg
xchg
mov
jbe
jnp
mov
or
pop
dec
sbb
movs
pop
and
data16
push
outs
xor
ror
sbb
pop
pop
mov
dec
pop
arpl
(bad)
push
mov
pop
pop
and
xchg
test
pushf
aam
jmp
gs
add
mov
xor
cmp
mov
push
lea
push
aas
push
call
mov
cmps
mov
and
je
aas
loope
inc
data16
enter
sbb
and
cli
fsubp
xor
inc
dec
popf
jnp
xor
ins
adc
fsubr
stos
retf
ss
(bad)
and
jmp
stos
cli
cmp
fucomi
push
xor
imul
mov
scas
sub
push
loop
mov
sti
movs
xor
inc
int
(bad)
push
sbb
fisub
xchg
lock
jns
mov
sbb
jae
scas
add
fwait
mov
rol
daa
xor
(bad)
cmps
out
iret
add
mov
pop
call
xlat
hlt
sub
pushw
xor
add
adc
xchg
adc
scas
jns
lds
mov
sub
pop
jmp
in
or
adc
add
jo
cs
mul
shr
ds
clc
cmp
and
inc
test
std
mov
shl
cmps
ds
sahf
or
lods
mov
scas
(bad)
out
sahf
out
add
sbb
mov
(bad)
bound
push
ret
iret
les
push
imul
jle
pop
cmp
fnstcw
or
lock
aam
sub
sbb
xor
out
bswap
dec
daa
lea
leave
and
dec
sub
loop
xor
pushf
(bad)
fldenv
adc
mov
mov
outs
mov
mov
ja
cmp
test
ins
sub
cmp
imul
sbb
inc
xchg
daa
jae
inc
push
adc
dec
jp
jg
mov
repz
repz
fdiv
push
das
push
adc
or
cs
mov
or
js
inc
cmc
loopne
repz
adc
ins
daa
push
push
push
xchg
lea
shl
cmp
popa
mov
movs
sbb
ins
popf
mov
scas
pop
xchg
sbb
or
into
adc
mov
sbb
inc
neg
div
aam
push
fidiv
jge
sar
or
mov
in
test
cmp
or
mov
xchg
inc
add
ds
mov
(bad)
mov
les
dec
dec
sub
mov
mov
push
jmp
push
jg
loop
pop
xchg
mov
imul
jp
xor
xchg
inc
out
xchg
icebp
dec
xor
pop
popa
(bad)
sbb
xor
mov
or
or
mov
sub
cmp
inc
dec
jmp
add
ror
sbb
inc
out
push
cmc
out
cmp
leave
cmp
test
pop
and
push
pop
aas
inc
sbb
call
push
lods
push
xchg
xchg
mov
(bad)
xchg
mov
mov
cmps
jae
sub
mul
in
add
aad
pop
scas
xchg
jb
in
popf
ds
sbb
mov
jae
mov
or
sub
jo
out
(bad)
and
(bad)
(bad)
leave
cdq
iret
sbb
mov
loopne
xor
movs
cld
inc
cmp
jne
or
je
and
and
pop
fwait
sar
ins
or
mov
fild
frstor
and
fs
cli
jae
imul
test
add
cmc
xchg
in
fldenv
inc
outs
mov
movs
sub
xor
fcomp
ret
inc
jge
aad
adc
imul
stos
rol
sub
ins
or
xchg
ret
ror
mov
cdq
ret
push
mov
fwait
shl
jecxz
push
push
mov
mov
jb
(bad)
int
sti
call
add
fwait
imul
push
sahf
and
out
push
push
jg
xchg
imul
ja
pushf
call
sahf
xchg
push
pop
pop
add
cmp
inc
(bad)
fisub
mov
sbb
xor
retf
sbb
dec
ret
loopne
push
(bad)
aas
cmps
and
mov
dec
or
xchg
mov
add
dec
cwde
mov
repnz
add
outs
or
and
xchg
mov
pushf
jge
pop
xchg
rcr
pop
aad
nop
cmp
xor
cmps
pop
push
(bad)
fisttp
(bad)
jb
gs
jle
pop
pop
fs
pop
sti
pop
out
cwde
push
add
add
push
push
mov
push
xchg
fstp
sti
or
popf
push
inc
js
aam
jns
pop
out
movs
scas
jnp
movs
sbb
xlat
repnz
push
cmc
cmp
sahf
movs
inc
fneni(8087
jnp
or
push
retf
enter
mov
movs
sbb
pop
lock
add
test
les
mov
push
jmp
xchg
int
xchg
adc
sbb
out
jne
(bad)
mov
in
mov
loopne
in
mov
lock
and
jmp
mov
imul
cmp
(bad)
dec
xor
out
js
inc
data16
sub
mov
lods
dec
sbb
cwde
jl
sti
dec
data16
cli
xchg
xlat
jnp
pop
test
adc
faddp
push
xchg
adc
int3
adc
ret
mov
pop
cmp
mov
jno
lods
and
cwde
inc
lock
mov
lods
push
xor
cmp
dec
jne
std
in
jbe
pop
js
jb
call
mov
mov
(bad)
mov
pop
test
mov
dec
xchg
stc
xlat
add
mov
push
pop
sti
add
and
scas
xchg
sub
ja
adc
xchg
inc
je
pop
(bad)
addr16
adc
scas
lock
ins
add
int3
mov
cli
std
push
sbb
or
das
push
mov
cmp
test
pop
jno
xchg
jmp
add
inc
cdq
jnp
push
cmp
or
test
popf
or
sbb
enter
cld
sub
add
push
jge
addr16
mov
cmc
mov
cmova
dec
fild
cmc
pushf
ror
in
jo
sub
sub
push
sbb
rol
mov
mov
aaa
push
in
icebp
out
mov
lods
sub
mov
mov
mov
(bad)
mov
xchg
jmp
inc
add
xchg
adc
pop
aad
sub
or
xchg
mov
adc
adc
dec
jne
shl
cmp
nop
jns
pop
adc
arpl
sbb
push
fidiv
into
push
adc
push
mov
pop
adc
xchg
fsubrp
lahf
and
cdq
loop
fst
js
aam
pop
push
sub
cmovp
dec
pop
inc
mov
push
(bad)
mov
test
mov
ss
xor
movs
mov
inc
cmp
cdq
out
push
outs
fdivrp
push
add
iret
rcr
arpl
dec
dec
arpl
inc
push
cmps
sub
shl
aaa
lods
mov
add
inc
es
mov
cmps
lods
push
adc
dec
mov
cmp
imul
jae
jne
shr
cmc
adc
or
cs
cmc
xchg
adc
imul
mov
cmp
dec
xlat
inc
xchg
pop
push
test
mov
pop
xchg
popf
fild
xor
mov
lods
call
(bad)
xor
movs
jbe
push
into
call
push
jae
jae
call
or
fdivp
ins
push
enter
fs
push
push
mov
jge
sub
dec
test
inc
jae
gs
in
cwde
inc
mov
inc
sub
aam
scas
sub
cmp
xchg
dec
int
movs
cmp
(bad)
fimul
shl
pop
mov
mov
movs
xchg
xchg
sbb
mov
mov
cdq
mov
neg
push
test
push
xor
jmp
test
push
push
dec
adc
dec
cmps
lds
adc
pop
dec
test
sub
in
pop
jle
adc
push
in
mov
inc
cmc
add
jbe
mov
lahf
jo
pop
ret
pusha
loop
sahf
xor
jne
call
les
dec
mov
scas
and
dec
cmp
sbb
add
call
(bad)
push
adc
xchg
dec
mov
aaa
lock
(bad)
data16
in
xchg
fisubr
dec
movs
push
xlat
mov
fimul
and
inc
fist
pop
mov
xor
repz
ins
xchg
fisttp
stc
sti
rcl
adc
imul
je
jnp
mov
bound
je
add
fidivr
js
cmps
inc
and
lds
inc
cmp
ins
scas
out
or
ds
sbb
in
mov
fild
add
inc
push
dec
movs
cmp
rcl
add
enter
shl
fs
jne
mov
leave
mov
hlt
or
loop
add
jmp
out
or
sti
xor
mov
xchg
pop
push
test
fcmovnb
mov
jmp
xor
jle
mov
push
or
nop
dec
cs
fdivr
ins
sti
cmps
popa
mov
dec
pop
sub
ja
pop
shr
xchg
sub
xor
std
iret
mov
imul
push
push
jne
cdq
sub
pusha
aam
in
retf
je
imul
xlat
xchg
pop
movs
out
hlt
push
(bad)
jmp
sti
(bad)
sub
mov
pop
xchg
mov
sti
addr16
(bad)
ins
les
(bad)
or
std
test
shr
pop
leave
movs
jmp
aaa
push
push
push
jo
das
dec
push
out
setl
scas
jmp
scas
jmp
mov
ret
cmps
add
push
xor
test
aaa
inc
pop
test
dec
aas
repz
push
xchg
cmc
das
sbb
outs
pop
(bad)
pop
loopne
ins
loop
iret
jne
leave
push
push
push
in
mov
cmps
(bad)
inc
hlt
aam
bound
shl
pushf
in
aam
stos
fld
sti
cmps
mov
out
mov
adc
arpl
les
push
ret
stc
stc
push
dec
ss
int3
xchg
xor
int3
js
(bad)
fidivr
inc
call
in
dec
mov
sbb
out
imul
gs
push
jb
mov
movs
sub
sahf
push
ss
repnz
xchg
adc
fwait
loopne
mov
or
add
and
cdq
mov
mov
call
adc
add
das
pop
cmps
add
mov
je
das
sti
test
in
test
int
adc
inc
push
pushf
mov
push
dec
(bad)
rcl
outs
mov
or
fs
dec
inc
fcom
cmp
(bad)
pop
mov
push
int3
out
test
mov
lock
loop
out
adc
stos
in
cmps
add
xor
outs
jns
lods
and
push
inc
ret
movs
xchg
mov
ins
xor
out
sub
mov
mov
mov
sahf
inc
xchg
cmc
mov
or
lock
int3
mov
lods
in
jle
rcl
sub
xchg
jno
sbb
repnz
push
pop
jnp
daa
shl
aad
out
add
aam
xchg
sub
push
fst
and
fs
jmp
push
ret
xor
mov
leave
aad
xchg
outs
adc
out
jmp
ins
pop
push
cmp
inc
je
nop
idiv
cwde
arpl
rcl
cld
xor
(bad)
lds
push
ja
mov
lock
cld
or
mov
inc
stc
cmc
shr
jmp
stos
adc
inc
es
and
stos
jmp
or
movs
sub
outs
in
ret
popa
adc
test
lods
xchg
or
pop
hlt
and
ret
pop
mov
or
hlt
test
cmp
iret
or
aam
add
cmp
push
mov
or
cmp
pop
jmp
mov
icebp
push
out
add
and
xchg
pop
aaa
and
lock
bound
xlat
cmp
retf
xor
fs
jno
cmp
(bad)
jge
outs
pop
push
cmps
loopne
test
(bad)
jle
mov
mov
lea
and
mov
int
scas
inc
push
pop
sbb
xor
ja
enter
jno
pop
cmc
sbb
and
sar
sbb
dec
and
sub
mov
lahf
imul
mov
std
push
pop
mov
dec
jno
mov
pop
shl
sub
icebp
or
sub
sti
sbb
adc
jne
xchg
ret
fist
jb
test
xor
pop
fldcw
mov
jbe
(bad)
xchg
sub
sub
in
sbb
mov
sub
xor
jle
out
push
dec
dec
xor
test
add
jno
mov
(bad)
add
add
fbld
adc
push
stos
mov
cmp
mov
in
jge
adc
adc
test
xlat
mov
sub
or
(bad)
enter
icebp
repnz
mov
test
sbb
(bad)
aam
pop
(bad)
cwde
enter
pop
shl
pop
js
pusha
(bad)
or
(bad)
mov
mov
outs
jo
mov
rcr
mov
sbb
mov
out
push
pop
adc
pop
test
sub
mov
call
cmp
add
push
lea
iret
out
dec
stos
aam
test
int3
or
adc
add
jbe
cmp
xor
ins
clc
call
imul
sub
mov
into
clc
loop
stos
int3
sahf
sti
popa
or
icebp
outs
adc
call
call
hlt
push
bound
leave
mov
sub
(bad)
jb
lea
sar
scas
call
sbb
mov
popf
adc
mov
daa
sahf
outs
test
push
loopne
cli
jmp
adc
xchg
bound
inc
mov
lods
aaa
lahf
shr
test
bswap
dec
push
mov
push
and
int3
push
loopne
adc
cmp
shl
add
push
xor
fisttp
sbb
jbe
lods
xchg
sar
rol
movs
fnsave
jo
xor
adc
xchg
loop
or
mov
pop
cdq
jp
jecxz
fstp
outs
(bad)
and
int3
ins
out
cli
cli
mov
xor
add
cmp
nop
fmul
jecxz
retf
aad
daa
cs
fadd
scas
cmp
cmps
mov
cmc
fwait
xchg
xchg
not
push
dec
push
ret
xchg
enter
or
or
sub
fst
jne
pop
mov
scas
icebp
push
or
push
sub
mov
pop
add
jnp
dec
lods
imul
scas
mov
popa
or
(bad)
out
rcr
mov
dec
stos
inc
add
in
jmp
jmp
inc
mov
jge
xchg
jl
push
inc
ret
scas
jl
xchg
jle
pop
adc
lods
cli
xchg
cli
sub
add
aad
xchg
push
adc
popa
scas
(bad)
es
mov
push
(bad)
adc
xchg
dec
push
cmp
cmp
mov
imul
adc
js
call
popa
cmp
dec
jge
inc
xchg
jmp
jecxz
(bad)
jle
mov
add
dec
ins
mov
cmp
cmc
daa
call
mov
push
jmp
sar
call
cmp
sub
pushf
movs
push
idiv
hlt
jno
xchg
sti
fdivr
aaa
sar
pop
jmp
cmp
das
dec
add
and
pushf
and
sbb
mov
add
(bad)
mov
inc
cmp
jae
sub
inc
mov
scas
ret
or
pop
stos
sub
cwde
and
mov
(bad)
(bad)
jnp
les
xor
aam
xchg
(bad)
aaa
mov
nop
inc
icebp
adc
inc
cld
push
pop
pop
inc
rcr
adc
rcl
lahf
pop
ds
daa
inc
pop
and
stos
ja
ss
cmp
push
push
sub
mov
cmc
jge
ror
out
loopne
inc
loop
jg
jl
push
retf
leavew
imul
and
in
iret
or
add
(bad)
inc
or
hlt
jg
pushf
pop
mov
mov
cmp
xor
pop
xor
lds
dec
jmp
xor
xchg
maxps
aad
adc
scas
mov
mov
fist
addr16
pusha
xchg
retf
xchg
into
jg
je
retf
mov
js
xchg
in
int
into
mov
aam
jge
pop
aam
adc
movs
loope
mov
test
push
xor
sbb
and
movs
retf
dec
adc
or
shr
pop
or
cmp
popa
scas
hlt
push
add
cmp
fnstenv
push
adc
push
mov
sbb
jg
fwait
lods
(bad)
mov
in
or
mov
and
lahf
mov
fld
test
or
idiv
cs
retf
stc
cmc
test
xchg
dec
sub
pop
push
sbb
add
mov
add
inc
sahf
push
pop
mov
mov
repnz
jo
fdiv
les
xabort
inc
hlt
sbb
bnd
pop
mov
sar
fisubr
mov
mov
gs
clc
iret
out
and
xchg
jge
adc
daa
imul
fxch
mov
mov
nop
scas
shr
push
push
adc
out
shl
std
xchg
mov
add
out
int
or
push
mov
cwde
repz
jg
rcl
stos
and
pop
jne
call
into
into
iret
je
ins
mov
cmps
daa
add
mov
outs
in
mov
fistp
enter
push
push
pop
cli
cmp
dec
add
outs
push
jecxz
and
popa
push
jno
and
and
push
mov
cmc
adc
mov
and
xchg
and
mov
push
retf
pusha
or
or
fisttp
jnp
cmp
push
shr
cmps
mov
hlt
out
dec
or
pop
cmp
inc
js
jg
(bad)
cmps
cmp
inc
out
mov
cs
sti
gs
and
sub
push
or
pop
or
or
jnp
cwde
add
rcr
shl
or
fldcw
mov
fisub
test
inc
das
xchg
xchg
mov
shl
aad
mov
push
fmul
test
mov
in
cmps
jne
test
(bad)
gs
fld
sbb
(bad)
pop
(bad)
leave
pop
shl
jne
lahf
fnstenv
push
push
sub
push
scas
mov
cdq
mov
aas
xor
xchg
fcomp
imul
cmp
add
out
popa
xor
shl
sbb
dec
imul
loope
test
dec
xchg
sbb
outs
repnz
cdq
in
push
sub
or
fwait
daa
xchg
test
ins
cmps
mov
idiv
lds
repz
pop
sahf
shr
hlt
push
jle
mov
mov
js
push
ds
repnz
fidiv
(bad)
push
retf
mov
or
daa
lods
imul
mov
jg
mov
ficom
inc
adc
rol
je
inc
lods
jg
or
inc
mov
mov
into
cmp
cmp
jbe
push
mov
repz
pop
add
es
cmp
aas
int
xchg
mov
push
scas
push
jg
cmp
nop
nop
pop
push
frstor
or
adc
addr16
fistp
jbe
jbe
pop
loop
nop
sahf
cmp
scas
js
dec
shl
shr
add
and
aad
sub
or
clc
inc
data16
inc
cli
jg
repnz
pop
xchg
mov
mov
push
push
or
das
(bad)
xchg
dec
into
cmp
fwait
xor
(bad)
sti
bound
lods
fiadd
and
les
and
(bad)
and
into
sub
push
xor
mov
cmp
sub
adc
sbb
xor
mov
pop
push
aaa
ss
sbb
xor
bswap
das
mov
out
fistp
movs
retf
les
(bad)
jg
add
bound
mov
push
scas
das
jl
add
ds
or
mov
call
cmp
add
jne
mov
retf
mov
scas
xlat
imul
sbb
push
scas
push
pop
retf
push
outs
aaa
xor
jo
sti
out
std
fbstp
jnp
jmp
jecxz
js
jg
and
add
cmp
test
cmp
jo
adc
xchg
xchg
jne
mov
cmp
push
mov
mov
pop
mov
mov
sti
pop
cwde
rcr
xchg
fisub
cmps
sbb
scas
mov
and
xor
ss
or
push
push
mov
push
rol
or
add
xchg
cdq
mov
xchg
dec
imul
cld
in
jns
fild
mov
and
xchg
test
mov
and
push
std
(bad)
repz
enter
aas
shl
icebp
pop
(bad)
clc
scas
pop
xchg
imul
cli
sbb
js
dec
xor
out
outs
sbb
pop
arpl
repz
xchg
jbe
dec
xchg
(bad)
fcomp
jg
mov
sub
mov
mov
xlat
jp
dec
iret
adc
sbb
daa
xchg
(bad)
leave
call
cmp
or
clc
retf
in
mov
jno
push
or
mov
sbb
mov
in
mov
in
mov
or
adc
sbb
js
mov
(bad)
sub
cs
jns
arpl
or
mov
ja
fistp
cld
dec
or
ins
shr
int
leave
push
test
push
mov
mov
push
aas
jmp
xchg
cwde
pusha
test
or
xor
xor
(bad)
jmp
push
ins
pop
mov
mov
shl
mov
aad
xor
mov
mov
add
test
sub
jmp
push
jmp
mov
sbb
push
mov
inc
xor
mov
jo
not
fmul
jns
fldcw
jp
push
push
mov
fidivr
xchg
jbe
mov
ds
cmp
or
test
pop
cmp
rcl
ds
and
mov
stos
retf
jne
cli
out
cmp
test
jne
test
fnsave
aam
popf
add
int3
xlat
xor
or
or
push
in
mov
push
and
mov
sub
add
mul
inc
pop
and
push
test
(bad)
ss
push
lea
lock
inc
or
ror
pop
in
pop
jns
stos
(bad)
mov
xor
pushf
and
aam
loope
ja
fisub
(bad)
lock
std
sub
mov
sbb
fstp
aas
mov
pushf
mov
jle
sti
movs
mov
sbb
popf
ret
mov
add
stc
xor
jle
sbb
pop
xchg
xchg
xor
rcr
mov
cwde
stos
mov
lods
pop
loop
sbb
push
dec
mov
loop
lock
push
es
pop
adc
pop
cmp
xchg
dec
pop
nop
mov
xchg
rcr
(bad)
or
mov
imul
test
mov
cli
and
adc
mov
imul
pusha
push
fdiv
fwait
stos
push
test
stc
jge
fwait
sub
mov
movs
sub
(bad)
jge
push
xchg
fisttp
cmp
imul
dec
cmp
fs
je
push
adc
fs
xchg
fmul
mov
cs
mov
inc
xchg
sbb
or
xor
icebp
mov
cmp
jmp
cli
pop
fisub
jle
sbb
sahf
inc
adc
loope
stos
aam
jecxz
add
neg
cmp
jecxz
ret
cmp
data16
popa
adc
aas
outs
sub
fs
push
movs
scas
hlt
out
jge
sbb
fistp
jp
sbb
pop
jle
ins
xchg
mov
jmp
jge
dec
(bad)
fcmovnu
push
cmp
sub
sub
sub
jns
loop
push
test
outs
push
or
sbb
pop
mov
cmps
mov
dec
jb
sub
push
sti
dec
les
sub
pop
and
pop
push
fimul
mov
(bad)
jmp
rol
lods
aas
(bad)
cmp
dec
loop
push
ins
cmps
xor
mov
and
fld
imul
lods
js
mov
sub
aas
popf
sar
ds
call
popa
inc
jb
mov
sbb
mov
fadd
(bad)
cmps
gs
lds
xchg
push
jb
mov
test
lahf
rcl
mov
jmp
push
mov
cmp
out
mov
adc
adc
out
mov
inc
into
cmp
add
aaa
ins
aad
xlat
pop
in
or
shl
outs
inc
pop
pop
push
pop
lock
scas
es
adc
xor
jmp
push
js
jmp
jge
je
int
stos
mov
cmp
bound
mov
jo
js
mov
and
jl
adc
jge
ror
xchg
dec
fisttp
lea
add
lods
sbb
mov
enter
sahf
add
add
cs
or
out
in
xor
ss
pusha
pop
(bad)
cmps
in
aam
sbb
dec
push
fdiv
push
shl
mov
aaa
jl
imul
(bad)
in
jno
ds
js
das
jl
sbb
mov
sti
(bad)
mov
test
es
ja
icebp
aaa
out
push
mov
fsubrp
neg
(bad)
in
xor
call
cmp
call
dec
push
sub
add
clc
xchg
mov
stos
std
retf
inc
aaa
sbb
jp
jbe
xchg
test
push
adc
call
cmc
push
popa
mov
jl
ficomp
fldpi
dec
sub
les
push
sbb
add
out
rcr
das
into
mov
jbe
push
inc
mov
adc
mov
sub
add
xchg
add
call
loop
lods
jle
dec
or
es
out
add
vcvttss2si
dec
sbb
jge
jo
fwait
aas
and
sub
push
fs
(bad)
mov
(bad)
fdivr
in
test
in
push
imul
test
aas
ret
add
jnp
push
cmp
clc
dec
cmc
jmp
inc
pop
xchg
das
jnp
(bad)
sbb
cmp
pop
(bad)
sar
mov
sub
test
jnp
adc
or
add
push
psubsw
push
(bad)
hlt
cmps
test
xor
pop
out
jmp
sar
out
popa
cmps
pop
push
popf
cmc
cs
into
lahf
lea
mov
stos
mov
loope
loope
mov
sar
push
arpl
nop
mov
mov
push
push
sub
mov
mov
mov
push
sub
jmp
and
pop
test
icebp
jge
xor
call
icebp
test
test
pop
cwde
jmp
iret
adc
push
in
fldenv
in
dec
add
jmp
gs
push
dec
js
mov
retf
xchg
mov
xchg
cmc
jnp
inc
xchg
inc
cmp
sub
lea
sub
add
adc
bound
fbld
lea
cmps
push
cmps
jnp
dec
int3
shr
add
retf
mov
pusha
movs
sub
repz
push
lock
and
stos
jp
call
test
sbb
xchg
sti
ins
jnp
mov
jne
xchg
lods
es
pusha
and
cmc
pop
sahf
lahf
aam
jae
jno
push
add
je
adc
js
fbld
sbb
test
std
cmps
add
fwait
sbb
adc
adc
add
add
sub
retf
int3
(bad)
sub
or
sbb
and
push
mov
mul
imul
retf
ret
mov
paddd
stos
retf
loopne
or
jmp
xchg
sbb
inc
jmp
hlt
aam
icebp
push
mov
es
pop
push
lods
(bad)
adc
adc
push
sbb
sbb
rcl
push
movs
and
aad
jecxz
xchg
mov
retf
stc
jp
dec
or
int
inc
mov
loop
cmps
cmp
stos
dec
cmp
mov
sbb
mov
push
hlt
(bad)
sbb
outs
out
xchg
fs
push
lahf
jb
add
mov
jmp
in
ret
pop
call
and
jo
pop
int3
fcmovu
push
clc
mov
lock
in
stc
sahf
add
fcomp
(bad)
ret
rol
mov
ficomp
sbb
mov
fwait
mov
push
sub
aad
pushf
cs
aad
iret
jno
jns
aas
mov
test
mov
call
mov
mov
sub
add
inc
dec
dec
xor
jnp
inc
popf
lods
adc
(bad)
and
or
(bad)
xchg
lods
stc
mov
out
data16
mov
outs
pop
xchg
into
lahf
hlt
mov
je
scas
sahf
mov
std
into
std
movs
mov
mov
mov
mov
sbb
sbb
dec
ins
test
inc
cmp
cld
adc
icebp
inc
or
retf
sbb
adc
lods
or
out
adc
push
sbb
popa
and
loopne
cmc
xor
and
int3
inc
xor
sbb
lods
jg
rcl
scas
movs
int3
fcom
imul
es
or
sbb
xchg
adc
pop
cmp
xchg
jge
pop
movs
inc
(bad)
sti
lods
test
pusha
les
sub
les
int3
inc
fcomp
dec
das
inc
ret
fldcw
mov
test
xor
ja
or
ret
outs
shl
push
dec
je
enter
mov
and
add
ficom
shr
and
mov
arpl
ss
pop
pop
scas
shl
jbe
cld
add
repz
xchg
jns
jns
xchg
daa
adc
iret
(bad)
push
iret
ret
push
repnz
stos
outs
push
mov
inc
rcl
outs
imul
cmp
popa
lods
add
loopne
vmread
loope
loopne
xchg
lock
cld
pop
sbb
mov
xor
ins
and
adc
push
int3
fdivr
or
out
(bad)
mov
and
sbb
les
arpl
jg
jno
dec
add
sahf
test
cwde
mov
std
js
clc
sbb
data16
jmp
lods
sahf
in
stos
push
inc
adc
xchg
jp
scas
in
xchg
mov
jnp
xchg
jmp
pop
push
add
push
out
(bad)
out
mov
jmp
add
popw
fwait
inc
fnstenv
cmp
jp
mov
ficomp
sbb
scas
stos
xchg
(bad)
and
imul
xchg
jmp
xchg
mov
mov
lods
inc
addr16
pop
rol
push
scas
daa
hlt
cmc
stc
fbld
or
add
aam
xlat
test
mov
xchg
fmulp
movs
mov
ins
adc
popf
pushf
xor
out
pop
jmp
push
and
lea
nop
or
xor
mov
cmp
adc
ins
mov
(bad)
and
jae
dec
mov
and
fnstcw
add
cmp
jecxz
loope
or
inc
daa
or
dec
push
cmp
mov
sub
ins
mov
aad
adc
mov
push
aaa
repz
pop
jp
cmp
cdq
cmp
ret
addr16
jmp
mov
shl
in
dec
sub
ins
xor
in
xchg
mov
hlt
push
xor
xchg
jnp
sar
rcl
sar
inc
call
mov
mov
xchg
movs
jbe
cli
loopne
push
sbb
mov
adc
push
mov
jle
fdiv
mov
and
rcl
and
add
jl
cs
push
dec
push
retf
cwde
fist
jl
out
mov
arpl
in
xchg
repnz
xlat
jg
cmp
nop
rol
add
xchg
pop
inc
mov
mov
or
adc
ins
mov
frstor
jp
push
stos
ins
mov
lea
in
scas
sti
and
call
movs
ror
jl
xchg
stos
inc
xchg
imul
add
mov
out
dec
mov
pop
int
cmps
jno
inc
pop
aam
push
or
push
inc
iret
ds
pop
jmp
rcl
and
mov
sub
int
cmp
sbb
pop
push
cwde
pop
mov
loopne
cwde
pop
dec
test
pop
repnz
fiadd
and
inc
mov
xchg
(bad)
mov
stos
sbb
lea
xor
xchg
(bad)
arpl
in
push
push
bound
cmp
xlat
call
cmps
out
imul
in
jp
jg
mov
movs
stc
(bad)
mov
dec
das
fstp
sar
out
mov
mov
sbb
jl
es
fldcw
test
jnp
mov
inc
sbb
adc
gs
jns
mov
or
aad
test
xchg
ret
ds
dec
cmp
ja
sub
mov
cmp
cwde
mov
dec
mov
jecxz
push
mov
and
mov
sub
push
int
pop
sbb
shl
cmp
sub
mov
push
xor
and
jne
adc
mov
ins
fsub
hlt
mov
sbb
push
adc
js
imul
push
cmp
das
mov
jmp
sar
rcl
xchg
mov
inc
push
xor
sub
push
inc
rcl
add
lahf
jae
push
jbe
and
inc
and
test
push
stos
sbb
sub
in
xchg
cli
jecxz
pop
cmp
and
es
in
hlt
repnz
loopne
lods
mov
fisttp
push
leave
jmp
jne
int3
inc
mov
dec
mov
xor
add
shl
xchg
adc
(bad)
outs
cmp
push
mov
pop
in
call
out
pop
cmp
and
jae
repnz
icebp
mov
sar
test
sub
jmp
pusha
test
push
and
sub
cli
jmp
out
nop
ror
jne
mov
push
punpckldq
outs
fsub
cs
mov
lea
or
lods
sti
shl
push
push
and
int
ss
xchg
aas
pop
and
sub
rol
mov
ficom
xor
and
rcl
xchg
sub
dec
int
(bad)
jb
xchg
inc
retf
lock
loopne
adc
mov
idiv
shl
mov
fwait
dec
adc
loopne
pop
xor
sbb
push
loopne
adc
jl
pushf
mov
pop
adc
cmp
outs
das
call
pop
shl
ror
movs
or
and
mov
jecxz
popa
inc
les
mov
lods
popw
cmp
cmp
or
and
jp
mov
sub
in
pop
xor
(bad)
xchg
popf
mov
pop
fisub
sbb
inc
jns
and
fist
loopne
cmp
jmp
adc
push
inc
inc
jge
push
pop
rol
mov
sub
and
cmp
retf
ficomp
scas
aaa
and
pop
pop
in
push
mov
test
das
sbb
test
sbb
push
pop
push
push
dec
dec
adc
jmp
push
mov
fist
pop
lahf
das
dec
sub
cmp
xchg
movs
or
fild
cld
sbb
xchg
iret
imul
cmps
in
cs
dec
rep
retf
cmc
outs
lods
dec
mov
mov
inc
cli
(bad)
stos
mov
dec
data16
(bad)
stos
xor
add
mov
mov
add
in
ja
adc
loopne
jmp
test
xor
cli
ins
add
arpl
dec
bound
push
cdq
jbe
scas
and
shr
xlat
mov
mov
std
push
and
ror
xchg
cmp
pop
push
jbe
cmp
push
mov
adc
adc
inc
mov
mov
or
inc
push
jns
pop
add
cmps
push
jp
out
xor
shl
cmc
xor
(bad)
mov
or
gs
adc
mov
movs
dec
mov
test
cmps
mov
jle
repz
shr
dec
xchg
es
(bad)
lahf
mov
add
lds
inc
ret
and
mov
cld
push
inc
loope
imul
mov
(bad)
jmp
ja
leave
faddp
mov
inc
inc
sub
inc
mov
hlt
sub
inc
add
movs
int3
pop
outs
ins
pop
mov
test
inc
aad
mov
je
sti
fld
pop
lds
adc
(bad)
nop
add
xor
xor
jg
into
pop
pop
push
fldenv
lds
dec
pop
jnp
mov
and
dec
out
call
dec
sub
into
cmp
inc
jge
push
or
cmps
fbstp
test
cmp
inc
nop
int
xor
push
and
push
sub
adc
add
sbb
imul
lods
add
or
xor
rol
dec
push
mov
jge
push
push
push
mov
mul
xor
push
aaa
mov
inc
test
add
mov
push
dec
not
(bad)
sbb
sbb
stos
lahf
inc
inc
or
pusha
call
repnz
and
xor
repz
fnsave
ss
popf
inc
push
retf
push
xchg
in
jne
popf
sub
pop
shl
ds
ins
test
data16
push
sbb
mov
add
int3
xchg
int3
aad
mov
or
stc
addr16
in
out
mov
ret
std
stos
cmp
add
in
out
test
mov
sub
retf
bound
jmp
mov
out
dec
xor
pop
xchg
loop
js
mov
(bad)
popf
mov
pusha
mov
jl
add
lods
jnp
neg
inc
popf
sub
daa
adc
inc
int3
daa
es
jae
cs
inc
cmps
pop
pushf
popa
pop
mov
push
lds
call
repz
mov
pop
cmps
cli
pop
outs
jecxz
popf
test
(bad)
nop
mov
sub
push
dec
iret
adc
jg
and
test
ror
test
pop
test
xor
call
dec
retf
dec
or
jbe
in
stos
out
mov
add
jne
div
sub
(bad)
mov
jae
outs
add
dec
xlat
cmp
cmp
fist
das
and
lsl
stos
das
cdq
clc
rcr
sbb
add
call
lock
jge
sti
sbb
retf
sbb
xor
inc
(bad)
iret
inc
popa
pushf
jb
clc
mov
push
sub
cmc
adc
or
xor
fucomi
lock
arpl
add
fs
jl
(bad)
push
ins
(bad)
test
fidiv
jbe
in
ja
arpl
cmp
xor
loop
js
and
jno
popf
stos
mov
sbb
fcom
neg
test
enter
movs
test
mov
js
lock
test
mov
pusha
push
mov
(bad)
or
mov
std
stc
sub
xchg
cld
popf
stos
ja
mov
inc
ins
out
add
jge
xchg
inc
jmp
push
arpl
in
adc
inc
and
cmc
scas
jae
je
cmp
fsub
es
ins
lea
inc
das
out
and
sbb
cmp
push
loopne
jmp
inc
rol
movs
test
dec
je
(bad)
mov
ja
outs
sbb
cmp
mov
add
icebp
in
mov
pop
fadd
loop
add
xchg
cmp
sbb
scas
sbb
and
push
ror
xor
imul
mov
mov
das
scas
mov
and
cdq
dec
xchg
mov
dec
(bad)
popf
jg
mov
mov
sbb
sbb
gs
cmp
mov
inc
loope
push
sub
sub
or
int3
inc
sub
cmp
xchg
xchg
pop
std
movs
jg
mov
sbb
sbb
mov
dec
add
lock
pop
mov
adc
out
cmp
push
adc
push
(bad)
ins
ins
loopne
xor
je
int3
or
xor
ins
xor
icebp
pop
jb
cmp
jnp
out
pop
adc
mov
add
sub
jne
dec
movs
addr16
rdpmc
push
les
adc
mov
add
add
ror
sbb
repnz
clc
jecxz
enter
mov
mov
jnp
fmul
dec
and
sti
out
(bad)
int
dec
out
xor
jecxz
imul
mov
adc
cmc
xchg
or
mov
cwde
lds
shl
pusha
ins
enter
inc
inc
pop
fnstenv
xchg
nop
add
dec
sahf
pop
mov
push
leave
lock
shr
cwde
pop
lods
lea
mov
jne
popf
lahf
dec
retf
push
and
push
xor
das
aas
mov
add
leave
xchg
mov
pop
std
loopne
pop
push
push
sub
adc
push
and
or
in
xchg
std
in
jmp
mov
pop
dec
ins
push
sbb
je
pop
sub
inc
je
sbb
scas
push
in
stc
mul
scas
sub
sbb
out
nop
jmp
adc
jecxz
push
mov
je
jne
push
mov
out
xor
and
mov
stos
inc
sub
inc
inc
cmps
jo
sub
sub
icebp
sub
sub
iret
dec
jle
jno
inc
or
or
(bad)
cdq
lds
clc
dec
dec
ja
dec
add
mov
std
dec
xor
in
inc
or
sbb
rcl
inc
sub
mov
dec
adc
gs
popf
test
jl
fnstenv
adc
xchg
sti
sar
(bad)
cmp
es
dec
fstp
mov
mov
mov
jmp
inc
movs
and
test
or
(bad)
nop
sahf
cmps
loope
mov
and
das
sub
hlt
lods
jmp
scas
cmc
rcr
movs
xlat
mov
mov
std
inc
(bad)
call
or
int
iret
jl
cmps
dec
pcmpgtw
mov
into
popf
push
cmp
call
das
inc
push
sub
test
scas
adc
fstp
das
jmp
pop
sbb
sub
ror
sub
mov
xor
push
stc
iret
pop
ror
pop
and
sbb
push
mov
and
push
test
into
jne
mov
mov
in
rcl
mov
jmp
sti
jae
or
lods
iret
stos
leave
test
push
(bad)
cdq
cld
dec
lock
cmp
minps
mov
fsub
dec
vmwrite
and
scas
jge
mov
jnp
mov
xor
dec
scas
push
les
mov
(bad)
outs
loope
push
inc
push
aad
cmp
dec
push
push
movs
jo
and
lock
pop
aaa
rol
fbstp
dec
sahf
add
add
rcr
mov
int
pop
cmp
inc
sbb
popa
movs
mov
or
sbb
xchg
push
jae
adc
addr16
pop
jge
outs
cmp
out
loope
or
sbb
aaa
cmps
aaa
jmp
mov
add
int3
call
or
lods
jmp
sbb
jecxz
mov
mov
enter
test
pop
nop
and
(bad)
add
or
cmps
loop
xchg
das
pop
mov
adc
mov
pop
stc
mov
mov
or
or
aas
jmp
mov
bound
js
imul
pop
ret
jae
add
mov
pop
push
stc
push
adc
in
push
xchg
arpl
push
xor
pop
xchg
out
daa
cmp
jbe
jle
push
gs
inc
jnp
push
mov
and
movs
sbb
retf
mov
jl
std
xchg
jecxz
mov
cmp
test
jb
mov
sbb
mov
cmp
stos
pushf
int
add
(bad)
fsub
and
adc
or
sub
inc
inc
hlt
add
stos
(bad)
test
sbb
ficomp
or
pop
sbb
or
dec
or
out
cwde
fcmovnb
sbb
push
xchg
les
(bad)
(bad)
repz
mov
add
fs
ret
out
repnz
mov
out
jle
adc
sbb
adc
in
lahf
pop
mov
fwait
mov
stc
mov
sbb
sbb
push
pop
enter
push
cmp
inc
lods
(bad)
outs
jge
sbb
inc
jns
push
inc
push
bound
pop
pop
int
ja
adc
lock
xor
dec
jno
and
xor
cmps
in
int3
popa
pushf
push
mov
mov
xchg
lock
dec
push
pop
adc
jo
fwait
push
call
jb
movs
adc
mov
lea
inc
mov
mov
stos
cmp
xor
outs
fnstsw
cmps
fisttp
lods
mov
mov
cld
push
inc
pop
cdq
xor
xor
mov
push
std
psadbw
hlt
fnstsw
dec
outs
xor
and
shr
mov
xlat
call
jne
jl
push
cmps
sahf
mov
outs
mov
stc
loop
test
aas
arpl
jb
and
sbb
add
dec
and
in
xchg
mov
or
mov
mov
jg
inc
repz
mov
mov
mov
inc
(bad)
inc
ss
pop
pop
add
ret
mov
in
ror
into
sbb
les
rcl
inc
cmps
stos
xor
pop
pop
mov
(bad)
(bad)
(bad)
in
push
rcr
push
lock
adc
bound
add
mov
lods
sbb
dec
push
pusha
cmp
pop
sbb
inc
nop
mov
(bad)
xor
outs
mov
xchg
and
jno
loope
adc
and
inc
inc
cmp
mov
mov
pop
pop
or
mul
in
retf
mov
push
xchg
mov
mov
clc
mov
push
ds
int3
ret
cmc
xchg
jge
fst
icebp
scas
adc
cmp
or
test
lahf
rcl
ins
sar
fsubr
inc
jae
inc
mov
scas
call
mov
and
mov
push
ins
pop
ficomp
dec
inc
inc
stos
and
shl
inc
repnz
(bad)
mul
jmp
rcl
dec
jmp
nop
mov
sub
test
gs
sbb
xor
hlt
shl
inc
retf
pushf
pop
mov
jne
mov
fs
ffreep
xlat
js
ins
xchg
(bad)
out
out
je
sub
stos
fldenv
in
push
cdq
mov
xchg
dec
push
ret
xchg
iret
inc
cdq
dec
or
int3
inc
movs
ror
mov
pop
ret
adc
aad
xor
aad
and
cdq
ins
adc
sub
(bad)
fs
iret
les
adc
push
sbb
mov
pop
lea
ja
xchg
mov
push
mov
inc
push
aas
mov
div
fldl2e
pop
or
dec
and
and
add
and
dec
push
int
std
jmp
mov
es
sub
pop
push
popf
or
and
hlt
in
mov
pop
call
mov
dec
outs
push
movs
jle
lock
or
lods
(bad)
ret
fmul
movs
mov
icebp
add
int
jne
and
and
and
mov
adc
cmp
je
sub
lea
out
pop
push
ret
mov
and
mov
mov
mov
stos
cmp
outs
les
and
inc
cmp
adc
ffree
int
jnp
inc
pushf
outs
mov
jns
movs
jmp
mov
push
lods
popa
dec
xor
call
dec
int3
(bad)
cmps
clc
mov
mov
mov
ins
mov
mov
jo
jge
pop
scas
leave
sub
dec
mov
call
pop
out
sbb
mov
aas
xlat
retf
jmp
inc
xchg
xchg
mov
pop
ret
out
mov
out
fwait
mov
mov
sub
and
sbb
les
out
mov
or
imul
sub
jb
cmp
aad
lods
or
retf
or
aam
mov
(bad)
ins
test
test
leave
stc
ja
mov
fidivr
call
push
mul
and
sbb
rcl
cmp
cli
clc
xchg
adc
sbb
scas
ror
shl
dec
add
cld
and
xor
or
xchg
pop
push
jae
retf
sub
cmc
lds
addr16
movnti
push
imul
nop
fldenv
rol
test
adc
dec
jno
pop
adc
ins
popa
dec
clc
push
dec
loope
cli
mov
ds
(bad)
add
gs
sbb
(bad)
(bad)
iret
rol
clc
fimul
xchg
sbb
test
mov
daa
(bad)
push
(bad)
push
jbe
cmp
lods
movs
xchg
mov
xor
mov
sub
pop
fcmove
mov
push
sbb
and
adc
ss
ficom
iret
test
movs
xlat
jo
(bad)
aam
xchg
push
call
and
in
fnsave
fist
data16
mov
xor
and
mov
mov
xor
nop
mov
xor
add
and
cmps
inc
lahf
inc
pop
mov
sub
mov
inc
dec
lods
cmp
inc
mov
nop
outs
stc
lds
dec
sbb
nop
(bad)
jecxz
rcl
(bad)
jae
pop
les
cdq
fldenv
sub
sbb
mov
ror
mov
das
iret
scas
mov
or
lahf
(bad)
xor
fnstsw
jecxz
mov
mov
ror
jnp
lock
pop
jmp
cmp
jle
and
mov
ret
mov
pop
adc
arpl
jns
adc
xchg
call
loopne
test
(bad)
add
sub
into
jle
add
pop
test
cmp
or
mov
mov
pop
dec
in
xor
lock
jl
add
repz
(bad)
xchg
push
mov
push
cmp
xchg
jnp
ja
sub
jo
or
adc
pop
pop
mov
movs
cmp
jnp
mov
sbb
call
ficom
cmps
pop
cmp
rcl
int
or
jge
sbb
jbe
xor
add
sub
sub
xchg
and
ror
jno
in
sbb
std
loop
push
sbb
idiv
ins
popa
mov
add
pushf
hlt
push
and
jmp
dec
and
jg
mov
ds
mov
mov
sar
ret
pop
loopne
adc
sbb
inc
xchg
push
les
inc
jno
dec
out
outs
sub
xor
mov
test
int
into
mov
dec
addr16
retf
mov
pusha
repnz
cmp
jle
inc
fbld
loop
add
and
stos
add
sub
xchg
shr
cmps
das
push
shl
fcomp
ret
jp
xchg
sub
cli
out
cmp
int
xchg
dec
inc
rcr
fwait
mov
in
mov
sbb
dec
call
(bad)
dec
cmp
sub
aam
lds
xchg
pop
cmp
dec
daa
inc
dec
push
int
xor
stos
push
xor
mov
in
lods
test
sub
sub
jae
repnz
mov
inc
jl
mov
xchg
shl
add
ja
fld
mov
pop
jp
xor
(bad)
out
ins
fs
outs
in
scas
sbb
sub
xor
(bad)
call
outs
lock
je
adc
cld
mov
and
scas
or
aad
sbb
call
xor
in
shl
scas
cmps
jne
mov
add
sti
leave
jg
ds
popa
jae
dec
cmp
add
inc
add
jp
push
sub
int3
adc
jae
je
icebp
pop
jmp
add
pop
mov
enter
std
mov
fdiv
fst
cwde
das
adc
int3
xor
inc
inc
sub
jmp
ret
out
add
test
push
shl
push
in
daa
mov
pusha
xchg
mov
fstp
pushf
xor
fwait
bswap
in
sub
mov
leave
or
xor
ins
fisub
push
dec
cmc
mov
sub
mov
cmps
loop
push
add
dec
leave
mov
sbb
jmp
dec
aam
add
or
push
stc
jg
in
jge
ret
pop
in
dec
stos
aaa
cmp
mov
xor
dec
xor
inc
mov
inc
inc
repz
inc
xchg
mov
rol
pop
and
cmp
loop
adc
sub
sub
jno
iret
sbb
stc
xchg
sbb
dec
sub
out
js
mov
add
or
pop
inc
sub
mov
jmp
in
xor
mov
sbb
repz
mov
adc
repnz
pop
xor
sbb
into
push
xor
inc
mov
dec
dec
pop
fisttp
jno
pop
cmps
jns
out
add
fstp
xchg
das
out
sbb
loope
icebp
mov
xchg
in
pusha
fldpi
imul
lods
(bad)
jecxz
int3
fild
cmp
and
enter
adc
or
jle
call
outs
inc
mov
scas
jge
xor
xchg
jle
inc
xrelease
pop
xor
lahf
jg
mov
popa
adc
sub
gs
ins
mov
shl
and
cmp
loope
lods
ficomp
add
push
mov
sub
mov
popf
icebp
call
jle
(bad)
aaa
mov
shrd
inc
xchg
outs
sbb
aam
lahf
xchg
js
mov
(bad)
jmp
mov
repnz
or
(bad)
pop
mov
outs
pop
pop
mov
xor
adc
ret
pop
add
add
cmp
fnstsw
(bad)
jmp
or
dec
ja
jmp
comiss
ja
fwait
stos
pusha
dec
scas
leave
and
repz
adc
fnstenv
push
aas
or
push
rol
jmp
in
es
mov
imul
cmp
sbb
push
mov
sbb
xlat
adc
xor
xor
int
pop
js
or
fwait
dec
out
stc
pop
addr16
or
jmp
jns
mov
(bad)
scas
xor
inc
clc
out
jae
sbb
mov
cmp
xchg
sbb
push
inc
jbe
add
movs
xchg
adc
and
repnz
imul
and
(bad)
(bad)
aam
aam
jae
sbb
sbb
ja
xchg
push
fwait
sbb
pushf
sub
xor
shl
jecxz
das
ret
dec
push
les
(bad)
sbb
(bad)
int3
cmc
push
loope
dec
into
pop
icebp
mov
mov
outs
lahf
loope
xchg
addr16
pop
icebp
pop
add
cmp
ret
mov
sub
push
in
or
into
fidivr
fidivr
repz
mov
jo
push
stc
push
mov
mov
inc
mov
push
call
jns
add
stos
jecxz
mov
call
in
and
popa
push
sti
xchg
add
push
leave
imul
jl
(bad)
loop
pop
xor
scas
mov
jg
repnz
loop
add
loope
fisttp
or
lods
xchg
push
leave
inc
or
or
cmp
xchg
inc
or
call
cmps
xlat
out
retf
rol
adc
mov
clc
scas
packuswb
in
xchg
ins
add
(bad)
stos
or
jne
and
pop
jmp
jb
or
xor
inc
cmp
nop
(bad)
pop
loop
sti
mov
cmps
mov
dec
mov
stos
lea
cmp
xchg
mov
ins
fmul
jge
cdq
inc
(bad)
mov
gs
(bad)
lods
sub
nop
pusha
push
mov
lds
push
mov
std
test
mov
sbb
jl
jbe
adc
inc
inc
test
shr
add
sub
jecxz
out
call
popf
scas
mov
aam
data16
xchg
into
loopne
(bad)
push
pop
xor
push
in
lods
ret
enter
int3
pusha
push
dec
mov
stc
or
imul
mov
popa
(bad)
sub
mov
xor
sbb
aam
aas
adc
xchg
mov
sbb
xor
push
sbb
int
add
or
mov
out
retf
ret
(bad)
jbe
lock
idiv
sub
cmp
aad
fsubp
push
ins
dec
retf
push
jmp
ficomp
jl
add
fldl2e
cdq
ror
cmp
mov
adc
and
mov
adc
inc
pop
movs
lock
ror
aas
dec
bound
push
jl
(bad)
mov
test
or
xor
cmps
ds
dec
ret
mov
hlt
jbe
hlt
add
dec
frstor
(bad)
and
jo
xor
loop
jg
fist
cmp
popf
push
sbb
(bad)
test
jle
mov
test
fdivr
pop
(bad)
xchg
xchg
pop
in
xchg
adc
cmp
fsubr
xor
push
mov
das
mov
inc
mov
pop
mov
(bad)
xor
cmp
xlat
fisttp
test
repz
sub
icebp
and
push
sbb
imul
pop
adc
push
jle
xlat
jecxz
aam
fs
mov
jp
mov
fnstenv
call
cdq
sub
mov
jp
pop
xor
lea
mov
ficom
adc
imul
sub
lods
loop
je
test
ins
add
int
xchg
jne
mov
lods
dec
push
sbb
xor
ret
dec
mov
aam
popf
cld
or
add
in
mov
cld
adc
(bad)
dec
sbb
xor
inc
or
mov
adc
scas
mov
shl
sbb
inc
push
je
inc
or
jb
jbe
lea
sbb
sbb
push
(bad)
(bad)
mov
and
xor
mov
in
sbb
pop
cwde
stc
add
aam
jnp
xor
mov
inc
repz
sbb
push
sub
jg
push
adc
das
test
xor
sbb
aaa
sbb
cwde
jp
loope
mov
dec
leave
add
cmp
jge
out
repz
outs
loopne
push
aas
and
xchg
jmp
push
mov
imul
mov
cs
in
in
test
pop
push
pop
and
sbb
pop
pop
cmp
out
adc
dec
movs
stos
gs
retf
mov
xchg
std
jecxz
add
and
pop
inc
push
mov
push
jmp
or
push
outs
leave
cmc
std
inc
mov
add
mov
or
sub
pop
dec
or
inc
sub
and
mov
mov
or
js
mov
sub
xor
push
in
jmp
and
les
or
into
out
pop
call
imul
push
sbb
mov
xor
(bad)
xchg
xchg
aam
cmps
in
sub
daa
jb
xor
dec
in
pop
popa
jle
iret
fs
cmps
and
jg
jmp
lahf
xor
stos
mov
push
mov
jno
daa
adc
retf
jnp
cdq
pop
ficomp
pop
or
outs
sub
push
lods
mov
push
fnstsw
retf
pop
and
jo
pop
mov
out
mov
inc
pop
fistp
dec
and
add
inc
inc
shl
out
ret
mov
jp
sbb
pop
addr16
adc
inc
jmp
scas
repnz
pop
dec
dec
(bad)
sub
sub
mov
fcomp
scas
movs
imul
sbb
and
pop
rcr
sub
rol
gs
jns
xlat
inc
mov
in
aas
out
js
(bad)
sahf
inc
cmc
and
sub
lea
pop
jo
sbb
stos
jb
add
popf
inc
add
retf
int3
fld
outs
or
sbb
jge
push
pop
je
sub
in
or
lds
adc
sub
add
add
imul
inc
jmp
aam
xchg
aad
add
push
stc
pusha
es
in
data16
in
dec
and
sbb
rcl
sub
loop
es
xor
(bad)
popa
pop
dec
and
inc
mov
sar
in
jg
(bad)
aas
sbb
aas
xchg
sub
loopne
adc
xchg
aas
pop
dec
(bad)
clc
das
popf
arpl
mov
mov
lds
lods
fs
jp
lds
mov
mov
test
ss
nop
ror
mov
mov
xchg
add
ret
loopne
push
mov
lds
inc
dec
xchg
or
(bad)
adc
stos
pop
aas
(bad)
jae
lahf
sub
lahf
push
xor
and
push
ds
xchg
mov
outs
(bad)
xor
test
in
popf
movs
pop
int
xor
dec
rcl
test
or
call
out
jmp
ins
fs
sub
fsubp
mov
and
mov
inc
dec
mov
mov
sbb
pop
enter
and
and
cmp
mov
mov
enter
in
into
fsubr
jle
les
mov
or
pusha
pop
mov
adc
jae
xor
shl
out
xor
aad
xchg
dec
and
pusha
lock
mov
(bad)
std
aad
mov
stos
shl
or
popa
movs
pop
imul
scas
stc
ret
in
sub
ja
cmp
test
pop
ficomp
retf
(bad)
add
test
(bad)
cdq
mov
push
mov
cli
movs
pop
test
dec
daa
dec
push
popa
ret
lods
stos
fidivr
jg
add
pop
inc
adc
jp
or
jns
push
push
nop
xchg
cmp
aam
push
pop
dec
loope
pop
popf
sbb
or
ret
sub
in
sar
(bad)
inc
repz
dec
add
loopne
imul
inc
add
mov
and
inc
add
mov
push
inc
xor
jno
push
xor
repnz
or
mov
adc
test
xor
rcl
mov
jns
outs
jmp
cmp
cmp
adc
xor
adc
or
add
pop
sbb
std
sbb
dec
mov
test
test
(bad)
mov
pop
mov
in
xor
das
shl
jmp
inc
shl
xchg
enter
or
xchg
int3
add
fdivr
in
pop
push
(bad)
adc
xchg
leave
cmps
add
call
pusha
stos
mov
sub
and
sar
jae
vmread
xchg
jge
nop
or
dec
fcom
mov
sar
aaa
and
sbb
cs
mov
mov
add
mov
add
push
outs
psubusw
add
mov
and
cmp
aam
inc
and
loope
push
inc
push
and
leave
outs
sbb
ret
cmp
pop
movs
mov
jae
jmp
sti
sti
jns
mov
sbb
enter
push
scas
aaa
xchg
push
push
loope
xor
icebp
fld
push
mov
or
xchg
fst
push
xlat
inc
imul
inc
xor
movs
pop
in
clc
mul
outs
sbb
inc
adc
mov
mov
sub
adc
in
popf
in
retf
fdivr
fwait
ret
mov
fcmovnbe
sub
push
retf
repnz
lahf
or
imul
mov
push
xor
out
xor
xor
jnp
cmp
dec
sub
cdq
out
xor
mov
aam
es
leave
xchg
xor
dec
xchg
and
js
xor
test
aas
outs
sbb
mov
call
ins
pop
push
adc
shl
inc
cld
rcl
mov
inc
mov
inc
jmp
je
cmp
push
rcr
cwde
sbb
mov
cmp
dec
inc
sbb
mov
jmp
dec
sbb
clc
mov
and
jmp
retf
or
popf
popa
sahf
jp
cmp
shl
cmp
in
push
push
mov
or
sbb
clc
nop
clc
adc
jge
pop
xchg
ins
add
sub
rcl
mov
xchg
mov
push
sbb
mov
mov
out
sub
or
add
dec
mov
mov
push
push
(bad)
mov
imul
(bad)
sub
int
jnp
fcmovbe
xor
jbe
xor
arpl
pop
cmp
sub
push
pop
cld
(bad)
inc
movs
cmp
cmps
outs
add
push
ret
fstp
inc
in
mov
pop
add
loop
cmp
sbb
inc
mov
adc
and
inc
sub
push
add
or
ds
jno
fstp
(bad)
shl
nop
jb
dec
jbe
test
xchg
sbb
dec
int
jbe
and
nop
xlat
(bad)
pop
xlat
and
repnz
fstp
mov
push
dec
xchg
ror
ficom
iret
fs
shl
lahf
outs
add
xor
jp
adc
mov
add
inc
sti
idiv
jae
xor
lds
fmul
sti
adc
int3
jns
and
jp
jmp
cmp
ret
sti
adc
retf
mov
mov
mov
int
fisubr
pop
jmp
shl
and
fild
outs
lods
sbb
outs
add
cmc
pop
std
and
(bad)
inc
sub
fxch
loopne
jg
icebp
dec
rol
rcl
les
cwde
dec
dec
jb
cwde
out
or
inc
call
scas
mov
dec
out
adc
and
aam
sbb
and
in
pop
sub
jo
push
daa
add
adc
mov
xor
scas
clc
stos
push
ret
cmp
pop
add
nop
adc
js
sbb
xor
cmp
dec
pop
mov
jecxz
lahf
popa
push
aam
in
or
xchg
push
sbb
nop
cwde
fisubr
sti
xchg
ds
pop
sbb
add
dec
movs
or
fcmovnu
call
push
fdivr
cmc
fs
add
pushf
add
fwait
mov
cmps
pop
loopne
loope
test
and
or
out
lahf
lahf
retf
rol
dec
retf
xchg
ret
fistp
pushw
push
dec
cmp
jo
repz
add
mov
inc
sbb
ss
test
std
jb
and
sub
bound
cli
jp
iret
pop
pop
sbb
sbb
cmps
repnz
sbb
hlt
leave
pop
xchg
adc
sbb
adc
arpl
inc
sbb
stos
stos
dec
je
adc
out
(bad)
mov
push
inc
fbld
jmp
sbb
inc
test
lods
inc
aas
cli
push
push
push
test
shl
jmp
or
pop
stos
pop
dec
repnz
clc
addr16
cmps
add
xlat
xchg
or
dec
in
inc
sti
jle
pusha
mov
in
jnp
int3
ds
jb
popf
jae
xchg
repz
jg
xor
sub
inc
repnz
ins
ja
sti
dec
cld
sbb
(bad)
fdivr
mov
pop
cwde
shr
xchg
fidivr
or
xchg
push
sub
hlt
(bad)
sbb
mov
mov
mov
(bad)
fstp
mov
and
lahf
cdq
mov
mov
push
xchg
xlat
test
inc
cmps
jns
jne
scas
stos
call
lahf
mov
jno
pop
aam
xchg
mov
inc
mov
data16
jns
push
dec
push
sbb
push
push
or
stc
sub
and
clc
int
fldenv
mov
xchg
nop
mov
mov
mov
pop
js
mov
mov
add
cmp
popf
rcl
adc
mov
xchg
les
into
ds
sub
jns
int
iret
pop
mov
ja
sub
inc
cmps
inc
dec
fst
push
sbb
mov
cmp
fwait
xchg
loopne
jae
daa
and
push
mov
lock
inc
test
or
(bad)
push
xchg
sub
rol
cmp
in
mov
fs
or
push
leave
mov
cmp
es
mov
pop
add
imul
popa
mov
int3
jecxz
dec
ins
jge
sbb
push
imul
ds
cmp
rcr
dec
adc
adc
lods
mov
mov
into
and
push
jmp
popf
movs
mov
fadd
pop
fsin
aam
leavew
push
xchg
cmps
cld
cmps
sbb
pop
int3
mov
sub
mov
out
and
ins
fiadd
aas
pop
sub
mov
fdivr
pop
sub
call
gs
jecxz
inc
loopne
push
test
stc
inc
test
scas
dec
mov
cmc
cwde
imul
xlat
pop
pop
mov
popf
jl
scas
pushf
mov
and
scas
pop
sbb
sti
dec
cmps
mov
push
pop
sub
xchg
stc
mov
jmp
push
sub
aam
mov
in
cmps
adc
movs
fcomp
mov
push
sub
test
outs
dec
dec
push
jmp
jecxz
dec
lea
jns
loop
xchg
movs
xchg
pop
test
add
int
cwde
sbb
push
adc
jnp
jnp
push
hlt
popf
mov
jecxz
sub
pusha
or
xchg
adc
or
push
call
int3
(bad)
jmp
adc
xchg
sbb
lods
jb
in
cli
mov
cmp
ret
mov
aas
cs
xchg
pop
into
xlat
push
dec
lahf
pusha
jb
or
push
stc
xor
push
jmp
xlat
aad
das
mov
push
movs
sub
push
je
mov
(bad)
sti
xor
sub
cmp
pop
xor
stos
addr16
or
aad
retf
push
shl
adc
xor
cmp
cmp
stos
adc
test
(bad)
pop
les
out
sub
pop
lock
jp
adc
cmp
jge
lock
stc
cmp
data16
jg
cwde
jne
mov
sub
(bad)
add
fild
cdq
pop
xchg
lods
sbb
xchg
sbb
and
aaa
xor
test
paddw
dec
or
xchg
ja
icebp
inc
dec
push
or
dec
test
aas
sub
jl
stos
fs
inc
cmp
loop
mov
inc
inc
adc
leave
jbe
and
ret
loopne
xor
popf
setg
cld
adc
mov
popa
jl
xlat
pop
bound
xchg
mov
inc
stos
cmp
push
sub
cwde
ror
dec
push
(bad)
and
lods
push
inc
pop
out
dec
push
(bad)
sbb
push
sbb
in
cmp
mov
push
push
jbe
out
or
inc
gs
add
int
out
cmp
test
sar
es
xor
shr
fs
lods
rep
sub
ror
xor
retf
aad
xor
mov
cmp
mov
inc
out
jbe
in
clc
adc
dec
std
and
pop
prefetch
dec
je
mov
pop
mov
xchg
retf
mov
push
adc
mov
inc
in
mov
(bad)
mov
(bad)
mov
(bad)
shl
pop
ror
push
pop
mov
and
mov
add
ds
call
test
daa
xchg
jmp
sti
lds
movs
out
pop
mov
jae
mov
xchg
(bad)
mov
xor
enter
test
mov
mov
fcmovb
shl
call
in
adc
xor
add
push
inc
imul
adc
aad
cld
mov
xor
test
and
add
jnp
xchg
xchg
ret
push
xchg
in
xchg
jbe
push
sub
mov
xchg
mov
xor
xchg
(bad)
das
add
pop
gs
mov
and
repz
jnp
enter
sahf
jg
push
aad
dec
in
jmp
scas
push
jbe
cmp
js
xchg
sbb
scas
or
pop
push
xchg
out
mov
inc
pop
out
adc
jecxz
inc
data16
in
jmp
fisttp
adc
sbb
pop
mov
cmc
sti
jne
imul
(bad)
pusha
pusha
jecxz
mov
push
inc
(bad)
inc
push
or
jae
bound
lahf
jl
psubw
dec
add
cmp
jl
mov
movs
loope
cld
jp
xchg
ins
sub
or
repnz
adc
lahf
pushf
in
sahf
push
aad
popf
jp
retf
loop
lahf
out
mov
inc
mov
xchg
(bad)
cmp
ficom
ret
push
sbb
(bad)
jl
jp
cmp
mov
cli
retf
lds
nop
aad
cmps
repnz
mov
xor
jge
iret
inc
aad
retf
js
sar
lods
(bad)
cli
int3
mov
sub
pop
imul
pop
clc
shl
mov
jns
inc
inc
les
fld1
ror
and
(bad)
int
mov
out
imul
mov
xchg
ss
shl
mov
lahf
js
adc
adc
out
loop
mov
jne
(bad)
cmps
xor
add
jp
and
call
mov
mov
and
idiv
test
jmp
mov
adc
les
sahf
inc
mov
sbb
pop
sub
sub
int3
mov
sbb
sbb
imul
push
or
inc
icebp
jg
in
or
pop
sbb
nop
jb
cmp
imul
add
(bad)
stc
mov
xchg
ja
mov
mov
mov
sbb
add
out
cmp
push
pusha
push
call
xor
push
in
pop
fmul
sbb
inc
xchg
jo
clc
cmp
mov
cmp
aaa
cmp
jg
push
clc
pop
xor
arpl
sub
dec
rol
and
pop
jmp
xchg
and
cmp
movs
dec
retf
ja
dec
fiadd
int3
cmp
or
cmp
mov
sub
xor
out
out
js
std
push
fsubr
aam
push
lods
xchg
jl
(bad)
adc
les
jnp
ja
in
mov
jns
retf
push
xor
rol
and
jg
adc
cmp
add
mov
xor
daa
jmp
adc
mov
cmps
loop
mov
std
pushf
mov
push
pop
mov
lods
mov
sub
sbb
cmc
push
fstp
or
push
inc
enter
lea
xor
jl
pushf
pop
mov
jbe
fisttp
jae
es
nop
(bad)
in
xor
cld
mov
and
mul
xor
test
xchg
push
mov
xor
lea
xor
stos
nop
inc
div
xchg
in
popf
cmps
out
mov
push
je
pop
rcl
xor
sbb
(bad)
mov
push
test
push
imul
jo
xor
fs
mov
je
xchg
jno
add
mov
imul
cmp
test
sbb
mov
js
sar
jns
fisub
daa
xor
popf
pop
or
xchg
ins
inc
cmp
cmps
jge
mov
pop
or
adc
mov
pop
(bad)
cld
push
jle
add
add
mov
icebp
hlt
sbb
mov
add
stos
adc
std
xlat
icebp
jbe
dec
(bad)
lock
in
pop
inc
pop
dec
sbb
add
xchg
xor
fild
mov
cld
and
sbb
cwde
adc
(bad)
add
mov
push
aam
jae
xchg
mov
inc
test
cmp
sahf
adc
add
fistp
jns
inc
cmp
movs
pusha
mov
or
jnp
push
or
fxch
sub
adc
mov
xchg
add
ds
ret
xor
push
por
cdq
pop
test
cmp
jne
les
fcom
fdiv
sbb
jb
(bad)
dec
dec
inc
hlt
add
imul
loope
int3
dec
std
fs
(bad)
jle
xchg
pop
mov
lds
fimul
aaa
fs
daa
adc
addr16
jmp
sti
sbb
cmp
iret
mov
add
mov
pushf
pop
sbb
rcl
(bad)
nop
hlt
in
pop
add
push
pop
shr
pop
mov
jne
adc
in
dec
mov
dec
pop
sub
mov
pop
les
retf
iret
out
pop
daa
test
jo
mov
mov
rol
jp
mov
jne
sbb
lods
adc
dec
mov
sar
daa
pop
pop
inc
xchg
test
mov
sahf
movs
cmps
jne
pop
out
mov
cwde
dec
outs
(bad)
les
or
aaa
mov
jns
ds
sub
xor
rcr
or
pop
dec
int3
pop
pop
pop
xchg
sahf
push
imul
pop
outs
call
adc
xor
sub
adc
jle
and
test
inc
mov
add
inc
jmp
pop
and
rcl
pop
xchg
sub
popa
adc
xchg
xchg
out
add
cmp
and
mov
pop
fisub
mov
scas
jnp
pop
sub
pop
mov
mov
cmps
lahf
ins
mov
sbb
adc
out
inc
rcl
je
test
imul
jmp
mov
or
cli
imul
push
retf
ret
xor
repz
push
cdq
add
cmp
lahf
fadd
rol
inc
push
dec
ror
ins
rol
xchg
int
sti
jge
pushf
call
jmp
fidivr
inc
mov
movs
ret
xor
add
int3
les
xor
in
cmp
inc
sbb
or
fwait
push
jae
test
repnz
add
lods
clc
stos
adc
xchg
pop
cmps
push
arpl
outs
aas
seta
mov
cmps
jno
pop
push
stc
cmp
int
mov
jae
gs
out
in
(bad)
fnsave
out
rcr
cs
retf
mov
mov
sub
push
cmc
(bad)
cmp
sub
pop
lods
mov
mov
mov
sub
jbe
daa
sbb
push
mov
nop
add
xchg
(bad)
loop
sti
sbb
jmp
or
addr16
(bad)
pop
mov
test
bnd
or
stos
push
enter
rcr
pop
dec
sbb
or
ret
ins
dec
lds
mov
inc
sub
dec
xchg
jmp
pop
test
test
fistp
aas
push
mov
mov
fisub
test
and
dec
xchg
push
xchg
dec
jns
mov
mov
arpl
(bad)
cmp
addr16
jl
imul
dec
add
sbb
jle
jb
movs
lods
outs
xor
xchg
add
mov
lahf
cli
(bad)
fimul
cmps
popa
mov
stos
js
div
add
push
cmp
add
cmp
ins
test
mov
sub
outs
xchg
fs
fsub
and
jns
xor
dec
or
dec
jmp
add
jle
sub
push
pop
inc
and
and
mul
(bad)
jecxz
ret
pop
nop
mov
mov
or
daa
jmp
aas
push
call
xor
les
rol
mov
sbb
inc
xchg
test
fsubr
ja
out
dec
popf
in
push
cmps
cs
dec
inc
ficom
outs
cmp
mov
ds
pop
mov
sub
mov
nop
call
ds
js
(bad)
inc
hlt
out
inc
mov
sub
push
icebp
pusha
je
in
ficom
xor
aam
les
cwde
push
mov
pop
mov
adc
jae
mov
rep
sbb
mov
adc
call
in
adc
lods
gs
cwde
mov
rol
push
or
int
and
in
mov
inc
cli
jae
fsubr
mov
cli
jg
push
push
mov
lea
out
sbb
stos
mov
fild
out
cmovle
out
dec
mov
add
pop
adc
and
outs
out
push
mov
fwait
inc
inc
sbb
aad
mov
adc
xor
rol
jnp
shl
lfs
xchg
xchg
and
inc
mov
cmp
adc
mov
dec
xor
inc
repz
lods
mov
sub
jae
loop
dec
imul
add
lahf
push
cdq
mov
xor
popa
ss
cmp
inc
movs
(bad)
div
inc
and
(bad)
rep
sub
loop
xor
mov
push
add
add
cmps
mov
cwde
std
pop
add
fistp
pop
pop
mov
pusha
sub
xchg
cli
push
stos
ds
push
add
dec
ror
inc
pop
push
or
xchg
or
pusha
stos
scas
jnp
cld
jle
in
(bad)
sbb
xchg
mov
neg
push
mov
add
or
es
loope
sub
sti
mov
push
jg
movs
adc
lds
push
mov
shl
push
out
outs
cmp
xor
mov
pop
jmp
sti
hlt
push
cmps
xor
sbb
adc
call
xchg
pushf
sti
mov
add
rcr
ss
sbb
xor
mov
addr16
adc
jae
xchg
test
pop
aaa
mov
fld
mov
retf
in
inc
push
je
push
cmp
lahf
nop
loope
push
popa
fdivr
xchg
mov
sub
cmp
daa
dec
xor
mov
ds
mov
js
cmp
nop
add
icebp
leave
test
xchg
xchg
cmp
in
mov
mov
sub
das
aam
mov
sar
sub
ret
fnstenv
sbb
mov
aas
in
mov
mov
stos
lea
jg
aaa
ret
imul
cmp
test
xchg
xor
adc
aam
push
popa
lods
aaa
es
adc
sub
mov
jl
pop
aam
sti
ds
xchg
dec
push
or
scas
in
jecxz
sbb
pop
repnz
cmp
inc
cmps
inc
jne
movs
cmp
addr16
inc
xchg
or
add
mov
cmp
push
jbe
add
fs
das
(bad)
out
scas
outs
push
fwait
test
test
cmp
sbb
leave
pop
sbb
push
push
cmp
sub
inc
js
test
inc
test
or
add
push
xchg
imul
sbb
div
mov
mov
scas
fadd
mov
imul
fisub
pop
add
(bad)
lods
iret
and
data16
clc
sahf
ins
pusha
cmc
mov
adc
mov
dec
jne
jecxz
cmp
fwait
jne
cmps
mov
leave
popf
mov
lods
xchg
aas
add
push
rol
mov
arpl
jo
loope
(bad)
rcr
scas
repz
retf
ins
adc
mov
movs
or
xchg
sbb
arpl
and
or
sub
neg
sbb
sar
jl
and
ret
movs
or
das
push
push
dec
dec
jp
sbb
addr16
fiadd
cmp
fldenv
out
pop
cwde
mov
inc
push
lods
stos
fsubr
retf
mov
imul
icebp
leave
cmp
dec
mov
pop
fistp
xlat
inc
lods
dec
adc
js
movs
jle
repz
stos
cs
(bad)
sahf
xchg
mov
adc
ret
push
stos
inc
jmp
adc
mov
add
loope
xchg
dec
adc
mov
(bad)
out
mov
mov
push
or
call
cmp
repnz
adc
pusha
js
cmp
cs
add
rcl
mov
dec
add
call
and
aaa
xor
mov
inc
std
and
mov
mov
pop
sbb
js
iret
dec
cmp
xor
(bad)
mov
jo
xor
ret
dec
mov
mov
repnz
aaa
adc
ss
iret
add
out
mov
sbb
ret
popa
inc
bound
lock
rcr
das
and
popf
mov
sbb
cmp
sahf
dec
shr
pop
jl
call
outs
ja
in
jb
mov
(bad)
adc
or
out
sub
iret
sub
xor
mov
or
dec
adc
and
dec
cwde
jl
mov
mov
stos
jnp
mov
mov
pop
mov
cmc
xchg
jmp
or
test
jle
jbe
sbb
aam
sbb
cmps
shl
xlat
sbb
cwde
fistp
sbb
int
imul
adc
(bad)
and
and
pop
add
daa
in
cwde
mov
and
out
cs
pop
cs
jl
ret
loop
aas
push
xor
or
std
shr
push
inc
popf
xor
adc
repnz
pop
jbe
pushf
fsubr
nop
idiv
shr
fcomp
adc
mov
inc
cld
adc
push
jo
clc
xor
(bad)
ror
mov
xor
jp
ss
sub
adc
daa
out
into
enter
loop
call
mov
adc
mov
add
ficom
scas
inc
cmp
mov
push
ret
shl
pop
pop
sbb
loope
or
sbb
mov
pop
ret
(bad)
fcomip
outs
adc
in
pop
xor
dec
fcomp
push
fwait
mov
push
cdq
jmp
cmp
scas
loope
mov
cs
sbb
xor
jbe
mul
mov
ins
cmp
jmp
xchg
pop
cmp
mov
je
ins
ret
or
fwait
mov
xchg
stc
sbb
and
mov
icebp
lods
(bad)
call
hlt
cmps
mov
push
mov
xchg
lea
mov
xchg
inc
mov
pop
loopne
and
dec
retf
xor
adc
adc
dec
add
cmc
sub
(bad)
jnp
add
adc
sahf
imul
jmp
or
jnp
cmc
pop
cli
outs
mov
fistp
push
fidivr
lock
sub
rcl
mov
fidiv
sbb
and
in
cmp
xor
data16
rcl
xor
xor
and
mov
push
jne
lds
enter
clc
cmp
jns
cmp
and
mov
xchg
or
lods
icebp
inc
or
sub
cmps
cmp
sub
das
dec
lods
sar
in
and
imul
adc
not
xchg
mov
jp
out
cs
xchg
push
jp
xchg
jmp
out
scas
inc
pop
repnz
xchg
or
or
stc
ror
dec
lea
mov
out
xor
dec
aam
sbb
std
adc
retf
add
fmul
dec
lea
xor
mov
mov
pushf
mov
jmp
cmp
fisub
and
in
cdq
pop
loope
jmp
cmp
pop
xor
mov
add
pusha
or
ret
push
out
iret
(bad)
aas
sbb
mov
lds
push
cmp
adc
cdq
xchg
mov
add
push
dec
inc
xchg
jmp
outs
stc
mov
out
out
pop
pop
dec
push
and
in
mov
pop
pushf
jns
dec
xchg
fsubr
mov
pop
xor
inc
mov
push
xor
call
sti
hlt
push
lods
shr
shr
movs
rcl
inc
mov
fs
imul
daa
call
or
or
cmps
push
enter
cmp
pop
lods
jecxz
test
adc
push
fisttp
or
les
es
sbb
rcr
pop
fcomp
xor
fs
mov
mov
add
mov
sbb
movs
js
in
in
or
adc
call
in
aad
adc
test
xlat
or
push
or
sti
xchg
xlat
sbb
fbstp
pushf
outs
out
call
lods
adc
dec
mov
test
leave
add
test
mov
nop
imul
mov
test
(bad)
fsubr
dec
les
clc
(bad)
mov
xchg
inc
neg
mov
adc
lea
xlat
lock
or
push
lods
int3
jmp
pop
adc
pushf
stos
sub
push
push
mov
aam
adc
(bad)
iret
pop
dec
push
cmp
inc
(bad)
push
pop
adc
icebp
xchg
hlt
and
mov
cwde
pop
jle
icebp
mov
jne
cmp
aad
xchg
and
ficom
mov
call
arpl
vpsraw
loope
setl
clc
cwde
out
movs
and
test
cmps
adc
hlt
fisubr
scas
pop
mov
pop
pusha
popa
jmp
sbb
out
std
jbe
mov
jno
add
int
scas
add
jb
mov
jmp
jecxz
fstp
sbb
movs
loope
and
addr16
iret
les
pop
out
sbb
xor
ins
pop
fld
dec
add
lods
mov
(bad)
int3
imul
mov
repnz
mov
jae
cmps
test
xchg
dec
inc
lock
jae
jb
push
stos
aas
lods
add
adc
lods
fsub
jmp
jecxz
sub
(bad)
adc
dec
mov
push
imul
or
scas
jmp
xor
enter
ds
fdiv
jmp
sbb
arpl
mov
cmps
cmp
cwde
jne
stos
popf
mov
pop
cmps
inc
jo
inc
icebp
xchg
je
or
lea
push
test
fs
(bad)
sbb
push
scas
sar
jno
and
movs
push
jns
add
or
sub
mov
adc
call
test
lods
adc
sti
inc
je
stos
mov
mov
scas
lahf
pop
mov
jle
xchg
sub
inc
mov
sbb
dec
cs
loope
imul
or
cdq
and
popa
push
movs
movs
ins
inc
jo
stos
dec
outs
jge
sub
popf
rcr
or
jne
inc
mov
fwait
dec
sbb
iret
test
ror
sbb
sar
repz
cmps
(bad)
leave
xchg
in
add
pop
rol
out
push
xor
ficom
push
jp
ins
lock
mov
push
and
test
cld
xlat
das
jo
add
xor
rcr
int3
pop
and
das
jle
push
shl
cmovge
in
mov
mov
dec
push
push
lds
dec
or
inc
xchg
sbb
mov
out
push
fwait
and
ss
push
ja
push
or
int3
ds
cmc
outs
loope
dec
mov
mov
or
dec
or
lds
add
fcomp
push
dec
cmps
jns
mov
pop
or
outs
(bad)
into
cli
icebp
sub
stos
pop
idiv
int
push
cmps
push
clc
das
jae
rol
sub
rcl
push
jg
dec
jmp
clc
push
ins
and
int3
mov
call
add
inc
gs
movs
cmp
scas
mov
cmps
dec
sbb
pop
adc
fwait
out
dec
xor
jge
pop
inc
xchg
xchg
push
and
aad
mov
aam
fwait
jg
daa
movs
fmul
out
hlt
adc
push
add
push
cld
jg
lock
les
push
cmp
loop
imul
in
mov
adc
fcom
xchg
ficom
test
add
lods
jne
(bad)
stc
dec
mov
mov
dec
scas
push
(bad)
sbb
jbe
test
or
imul
call
lods
sbb
dec
jecxz
shr
stc
aad
ss
xor
ins
jp
outs
push
call
mov
pop
neg
or
cmp
in
(bad)
stos
add
xor
retf
xchg
mov
xor
(bad)
bnd
stos
jg
je
imul
iret
mov
test
clc
sbb
jb
xchg
sbb
cmps
xor
dec
push
and
cdq
mov
and
mov
ins
aad
jnp
push
aam
fs
popa
sub
mov
fimul
xlat
ins
inc
arpl
inc
xor
pop
das
pop
(bad)
(bad)
jl
sub
out
mov
xor
xchg
mov
outs
cmp
imul
ret
dec
add
fsub
mov
push
sub
or
aas
adc
or
(bad)
in
mov
pop
retf
cmp
sub
adc
jmp
jmp
mov
dec
mov
dec
out
(bad)
mov
and
sbb
and
xor
pop
mov
mov
push
sar
or
scas
or
ret
or
xchg
jae
and
pop
dec
push
push
cli
mov
and
sbb
pop
call
fxch
ins
xchg
fnsave
sub
ret
pop
inc
cmc
(bad)
add
scas
adc
adc
jne
adc
add
cld
sahf
cmp
adc
inc
nop
stos
sar
outs
rcr
or
aam
ret
sub
sub
jne
xchg
ds
sub
and
cmps
dec
inc
cwde
cwde
push
jmp
ins
cld
jno
cld
mov
mov
out
xchg
mov
aas
pop
inc
pop
xor
retf
das
(bad)
push
inc
ja
mov
shl
jns
fisttp
inc
pop
inc
adc
or
sub
iret
(bad)
lahf
cmp
dec
icebp
call
sub
(bad)
jb
jle
pop
push
rcr
sub
jnp
repnz
stc
mov
imul
fld
outs
test
cwde
mov
add
sub
in
nop
pushf
arpl
ds
inc
xchg
std
mov
scas
add
sub
pop
or
push
cmp
cmp
ret
retf
mov
aad
movs
sbb
scas
std
or
pop
and
xor
int
add
push
lahf
mov
sub
addr16
pop
push
mov
(bad)
pop
xor
repnz
inc
xchg
mov
daa
and
add
inc
xchg
pop
iret
imul
xchg
push
nop
xchg
jl
push
inc
scas
push
cwde
sub
inc
add
inc
jmp
idiv
pop
fldcw
div
jno
or
call
mov
add
mov
jecxz
pop
fst
mov
aas
sbb
lahf
shl
jae
sub
outs
mov
popf
sar
bound
sbb
cmps
dec
inc
mov
jmp
jno
aaa
(bad)
pop
push
popa
adc
lods
je
or
stos
sub
or
mov
adc
(bad)
sub
pushf
fisubr
jno
pop
xlat
add
mov
jo
je
fs
(bad)
pop
fs
or
mov
inc
lods
gs
xchg
stc
dec
xchg
in
out
test
xchg
pop
push
fwait
or
cmp
xchg
lea
fisubr
sub
xor
pushf
push
pushf
push
popf
or
dec
pop
int
push
rcl
inc
cmp
ret
in
jbe
sub
mov
or
imul
scas
rcl
xor
movs
rol
add
das
lds
xchg
jl
aam
call
(bad)
dec
inc
and
push
xchg
add
int3
shl
push
and
retf
in
fmul
push
pushf
jbe
mov
xor
jecxz
(bad)
out
sbb
outs
and
mov
push
dec
(bad)
sbb
mov
dec
clc
xor
mov
icebp
pop
nop
mov
test
std
(bad)
repz
out
shl
dec
or
cmc
xchg
fisubr
and
sub
or
mov
inc
mov
test
inc
jl
pop
jne
(bad)
lods
clc
dec
fucom
gs
js
sbb
mov
test
cmp
pop
pop
xchg
cmp
fdivrp
push
push
cmp
ror
xlat
out
pop
pop
lods
adc
test
shr
xor
or
mov
sbb
push
stos
neg
fcmove
mov
mul
sub
sub
xchg
lea
cld
(bad)
and
lock
adc
cmp
add
mov
xchg
pushf
sbb
inc
repnz
adc
int3
cli
sub
rcr
and
mov
imul
lds
ins
mov
repnz
sbb
jg
icebp
pusha
jmp
loopne
mov
adc
sub
mov
add
out
mov
add
xchg
pop
ror
xor
and
dec
out
push
aaa
and
shl
mov
and
call
icebp
and
xchg
inc
push
iret
ins
into
mov
clc
inc
inc
sbb
xchg
inc
dec
cmp
ins
fild
inc
retf
adc
mov
cmp
mov
mov
(bad)
ja
xchg
enter
cmp
fld
ja
(bad)
cmp
xlat
adc
ins
pop
mov
cwde
outs
rol
jecxz
push
fdivr
aam
push
ret
and
xor
ds
mov
jne
and
gs
adc
(bad)
cmp
cmp
outs
call
pushf
xchg
cwde
jge
pop
lds
aaa
mov
lods
dec
mov
add
in
in
lahf
loope
(bad)
pop
jae
cld
repz
inc
mov
mov
mov
dec
and
add
mov
pop
sbb
or
call
add
mov
cmp
and
aaa
mov
cmp
adc
xchg
mov
xchg
xchg
not
lods
outs
shr
xchg
and
sar
fld
in
js
xchg
imul
fadd
les
mov
clc
std
clc
scas
and
cmp
sbb
sbb
jne
sub
stc
cmp
dec
xchg
ret
and
mov
dec
sub
inc
cli
xor
or
ficom
dec
mov
sbb
push
adc
test
fmul
add
jae
std
(bad)
stos
pop
js
sar
pop
xor
add
neg
jb
pop
pop
push
sub
push
mov
sbb
sahf
or
in
test
gs
fstp
and
addr16
jne
inc
enter
(bad)
(bad)
out
sbb
adc
xor
inc
jne
inc
in
push
(bad)
stos
push
dec
jnp
scas
xchg
push
repnz
adc
call
cmp
ss
loope
sub
lods
cmps
je
push
jmp
add
pop
add
fbld
dec
test
rcl
mov
clc
call
pop
push
test
xor
dec
mov
push
mov
or
fs
or
xchg
shl
std
test
xchg
call
loope
cld
in
stos
push
inc
stos
cmp
xor
cmp
pushf
inc
push
cmps
dec
loopne
dec
fs
sub
xchg
js
mov
mov
mov
cmp
outs
or
ret
(bad)
cmp
mov
mov
jmp
or
or
call
xchg
mov
push
sub
adc
xor
jge
mov
pop
mov
sub
push
call
dec
sbb
or
xlat
push
cli
push
pusha
adc
cdq
and
mov
xchg
outs
push
push
js
mov
pushf
aad
stos
push
sbb
add
movs
cmp
icebp
xchg
(bad)
add
fucomp
mul
inc
push
jmp
mov
sbb
(bad)
dec
push
call
xor
xchg
sbb
int3
inc
adc
lahf
js
cmc
shl
inc
jge
imul
cdq
out
pop
push
aaa
and
fisubr
data16
cmp
mov
pushf
push
out
pop
sub
call
adc
ins
ficom
mov
fst
push
mov
sti
into
cmps
sbb
add
movs
sub
and
dec
clc
jg
test
jecxz
(bad)
les
dec
push
sub
(bad)
outs
mov
stos
sbb
push
push
xchg
rcr
pushf
stos
fdiv
ret
cmp
push
hlt
dec
clc
cmp
cmp
sbb
inc
cmp
xor
test
mov
(bad)
xchg
or
stos
and
cmc
jg
xchg
arpl
lods
imul
test
jmp
inc
cmps
cmc
xor
clc
imul
mov
aaa
mov
shl
jecxz
and
lds
mov
mov
cmp
jo
pop
fiadd
push
daa
stos
nop
mov
(bad)
dec
dec
jp
ins
push
fist
push
lods
inc
xchg
pop
loop
mov
in
mov
cmp
mov
sub
mov
add
push
mov
stc
out
aam
in
inc
jne
cmp
adc
cmp
and
add
popa
pop
shr
jmp
ficom
pop
mov
aad
into
fist
jmp
pop
inc
aas
stos
sub
fs
arpl
adc
neg
rcr
add
push
sub
ror
das
pop
xchg
push
rcl
fs
ror
xor
ss
cmps
push
addr16
push
xchg
inc
icebp
cmp
stos
sub
add
lds
push
popa
ud2
sbb
sar
cmp
or
cmp
jae
call
in
ins
sti
push
out
sub
(bad)
ror
mov
and
loope
jb
cmp
cs
xchg
stos
jg
ss
pop
retf
test
push
ret
pop
clc
mov
mov
cs
push
fs
jle
int
ds
jg
ss
aas
sub
push
xchg
test
and
push
jl
or
sbb
jl
icebp
cmps
jg
cld
outs
(bad)
(bad)
pop
fninit
fs
xlat
add
loop
mov
and
jle
dec
push
rcl
in
es
sti
mov
mov
(bad)
sub
mov
(bad)
sbb
dec
shr
adc
in
xchg
adc
ja
push
mov
mov
out
lock
dec
mov
fldenv
or
mov
movs
ret
jmp
test
ins
xchg
jo
sub
inc
push
mov
pusha
cdq
inc
push
or
inc
stc
xchg
jmp
pop
daa
call
jo
into
(bad)
pop
xor
xor
inc
ret
aam
sbb
sub
mov
das
fs
aad
mov
xchg
mov
dec
mov
sbb
mov
cmp
fsub
pop
or
lods
iret
xchg
ret
scas
jge
xchg
cmp
pusha
pop
and
test
jmp
push
lea
in
ins
pushf
mov
adc
push
xchg
out
ret
ds
xlat
cmp
pop
mov
scas
mov
push
jmp
mov
and
sbb
fcom
cs
test
jns
in
dec
retf
add
inc
lock
adc
sahf
jl
jmp
scas
and
aam
mov
inc
aas
fs
xor
fsubr
push
pop
dec
xchg
sbb
jnp
xor
adc
xor
add
add
sbb
mov
push
(bad)
movs
(bad)
adc
push
addr16
mov
push
aad
or
pusha
cmps
xchg
jl
mov
div
dec
fist
xchg
mov
xor
or
fnstsw
mov
inc
fiadd
test
jl
xchg
fisttp
mov
mov
dec
and
int
call
sbb
cmp
mov
push
sbb
ja
mov
leave
push
adc
mov
pop
sub
loop
sti
shl
pop
mov
ins
cmps
cs
cld
lods
pop
in
addr16
stc
mov
out
push
mov
fstp
sbb
packuswb
xchg
sbb
dec
and
(bad)
call
jne
xchg
or
and
ins
fist
(bad)
loope
stos
movs
cld
adc
push
enter
sti
cwde
pop
pop
dec
movs
xchg
sbb
mov
jmp
pop
mov
rol
or
stos
or
mov
jecxz
sbb
in
mov
ficom
cmp
dec
clc
arpl
sub
xchg
pop
bound
dec
push
pop
inc
out
push
mov
dec
in
mov
int
cmp
push
adc
jne
fcomip
add
loop
xor
sbb
scas
ror
xchg
daa
fsubr
ins
pop
(bad)
and
ror
rcr
pop
in
jmp
ss
sbb
jmp
push
sbb
sbb
cmp
lods
pop
stos
mov
rol
or
enter
cmp
ror
mov
or
sub
inc
mov
cmp
pop
div
adc
mov
sbb
movs
mov
inc
ins
and
aad
addr16
or
cmp
lods
hlt
bound
pop
xchg
arpl
sti
sub
cmp
adc
popf
and
mov
out
jb
mov
sub
mov
xchg
and
cmp
xor
dec
in
iret
sub
call
mov
add
ret
cmp
sbb
push
fbstp
inc
test
fadd
icebp
xlat
pop
or
pop
hlt
pusha
retf
pop
mov
fld
ja
aam
aam
pop
out
jmp
popa
loopne
outs
push
js
jmp
jmp
xchg
ins
dec
xor
js
pop
jg
mov
mov
(bad)
enter
sub
mov
sbb
or
push
push
mov
retf
je
and
pop
dec
add
xchg
int3
or
retf
inc
cwde
jb
mov
out
and
mov
arpl
cmc
xchg
cmp
fdivr
xchg
add
xlat
loopne
loopne
dec
push
test
fnsave
jecxz
mov
xchg
cmc
mov
adc
cmp
clc
xlat
or
sbb
rcl
xchg
mov
inc
cli
adc
pop
push
xor
pop
loope
adc
imul
and
push
gs
ds
fld
stos
inc
loope
push
inc
adc
cmps
test
xchg
push
psubsw
call
retf
xor
pop
out
mov
out
cdq
pop
xchg
xchg
lds
mov
adc
or
cmp
cmp
daa
inc
jecxz
xor
dec
clc
stos
loopne
ret
and
cwde
pop
inc
xor
push
or
hlt
or
ja
pop
and
aaa
sub
data16
dec
push
jle
or
jbe
adc
or
push
(bad)
jmp
rol
jo
cmp
lods
aad
cli
inc
rcr
sub
mov
inc
in
mov
pop
mov
sbb
les
int
sbb
sub
rol
jno
sub
sbb
aas
pop
cmps
sti
xchg
jp
data16
(bad)
mov
pop
inc
adc
mov
int
rol
xchg
stos
mov
xchg
jmp
call
stos
repnz
push
clc
mov
and
mov
jae
cwde
or
inc
test
and
cmp
mov
xchg
fdiv
mov
jns
push
and
jbe
aaa
in
sub
and
mov
push
dec
inc
and
xchg
pushf
mov
les
js
aad
sbb
add
jae
sub
ins
xor
hlt
xor
fldcw
xchg
(bad)
test
outs
dec
add
and
mov
imul
and
loope
sar
call
pop
pop
mov
iret
pop
push
push
and
shl
fs
adc
sbb
rol
loopne
mov
pusha
sahf
jge
imul
xor
int
xor
mov
adc
(bad)
loop
sub
pop
add
jp
mov
hlt
out
test
(bad)
xor
mov
pop
test
ss
push
xchg
test
ror
ret
scas
jp
test
inc
repnz
dec
xor
jb
popf
imul
fnstenv
push
and
xchg
call
cmp
enter
push
adc
xor
add
std
pop
mov
addr16
imul
pop
inc
pop
pop
mov
mov
push
cs
sub
fsub
cmp
and
out
aaa
and
add
jbe
inc
sub
push
dec
push
ror
mov
pop
jae
mov
mov
in
push
(bad)
inc
sub
loope
fyl2x
mov
outs
cmp
inc
xor
ret
fidivr
adc
cmp
jl
jecxz
pop
pop
adc
stos
retf
lods
addr16
test
jno
(bad)
aam
lahf
inc
sub
icebp
lock
movups
repz
in
mov
mov
test
ret
out
inc
or
jp
or
jecxz
outs
jo
dec
dec
mov
test
cmp
mov
ja
pushf
daa
push
in
(bad)
in
mov
adc
mov
aam
mov
test
fwait
test
xchg
push
or
ja
hlt
push
(bad)
sbb
mov
dec
loop
add
push
dec
arpl
lds
pop
aam
and
fsub
pushf
ret
mov
pop
in
or
lds
mov
sub
push
leave
dec
jns
in
int
inc
pop
sti
mov
push
inc
xchg
stos
scas
mov
cmps
(bad)
xor
sar
pushf
inc
sbb
xor
add
pop
bound
mov
push
dec
fnsave
pushf
cmp
test
jge
cmp
bound
arpl
aas
iret
inc
dec
es
add
not
mov
and
in
push
(bad)
xor
sub
and
jmp
enter
outs
shl
call
pop
test
sti
add
cwde
test
rol
xor
push
mov
push
add
leave
sbb
sbb
jle
inc
jg
ins
add
aaa
aam
pop
mov
mov
test
fimul
popa
pop
adc
lock
mov
pop
pop
cmp
cmp
mov
mov
imul
(bad)
and
and
push
mov
push
push
fdivr
jns
xor
mov
clc
push
mov
add
lds
popf
adc
cmps
jmp
imul
pushf
jecxz
xchg
ds
mov
and
xor
mov
hlt
pushf
adc
dec
js
lds
xchg
push
pop
test
pop
(bad)
fwait
test
mov
push
js
shl
mov
mov
dec
and
sub
sub
mov
sub
dec
lods
(bad)
test
ret
dec
dec
out
cmps
push
cmc
(bad)
jg
es
ret
xor
sbb
push
mov
jle
add
inc
add
push
outs
fs
mov
xor
sbb
inc
sub
out
repz
dec
mov
ret
fdivr
pop
pop
mov
sbb
out
(bad)
es
mov
loope
outs
leave
inc
xchg
loope
pop
mov
lods
fidiv
push
aaa
fcom
dec
outs
mov
or
mov
sbb
jp
shr
mov
push
rep
pop
(bad)
xor
imul
fdivr
pminub
jg
les
hlt
setge
mov
mov
mov
xor
lea
push
pop
add
push
aam
push
sbb
sti
ins
jae
cmp
fistp
or
xor
sub
mov
hlt
xchg
fwait
adc
mov
inc
shl
jno
lds
dec
cmp
ret
add
cmp
loope
or
mov
call
inc
or
pop
xchg
bound
ror
jbe
mov
push
sub
jnp
lea
pop
lods
aas
pop
or
loopne
add
xor
daa
rcr
jbe
lods
dec
push
sub
out
(bad)
test
lds
xor
rcr
adc
(bad)
cdq
sub
call
out
xchg
cmp
ins
and
popf
add
pop
or
mov
ret
retf
cmp
dec
mov
jb
aam
pop
adc
dec
icebp
retf
cmp
stos
sbb
pop
or
add
dec
adc
adc
(bad)
lods
into
push
push
jg
xor
cld
fwait
pop
pop
stc
pop
pcmpgtb
cs
ins
lock
arpl
cmp
xor
cmp
test
hlt
sbb
(bad)
leave
aaa
xor
add
jne
jge
popa
sub
mov
pop
aad
mov
xchg
scas
mov
bound
jae
xor
lahf
fsubr
dec
push
les
pop
outs
(bad)
pushf
or
mov
mov
pop
into
jbe
xor
jge
ffree
and
adc
imul
imul
hlt
cmps
add
imul
out
rcl
fs
pop
cmp
inc
xor
pop
sbb
sti
pop
lahf
xor
push
mov
pop
sbb
ja
xchg
jne
in
aad
mov
cmp
pop
xor
jmp
fsub
mov
popa
inc
jp
or
clc
adc
push
loopne
cld
mov
jbe
xchg
mov
js
fnstcw
inc
outs
call
je
cmp
cmp
xor
daa
je
mov
ins
movs
sub
add
and
ret
add
cdq
cmp
inc
fist
movs
sub
call
dec
fdiv
aas
and
inc
xor
push
mul
add
and
stc
xlat
scas
outs
inc
mov
cs
cmp
rcl
mov
fstp
cs
xor
test
loop
mov
leave
hlt
or
jb
xchg
(bad)
dec
aad
sub
loop
jae
aam
adc
xchg
fidivr
shl
test
jl
fs
mov
xchg
pop
sbb
cdq
(bad)
inc
push
push
div
pop
sbb
inc
mov
mov
adc
dec
nop
push
pusha
sahf
pusha
fimul
mov
add
sbb
(bad)
mov
jecxz
loope
jp
in
test
adc
callw
jne
stos
adc
cmc
(bad)
test
and
dec
vpsllq
sub
js
cmp
push
pop
fwait
mov
xchg
popf
cmp
mov
rcl
out
in
nop
in
loope
test
mov
xor
mov
repnz
movs
das
lods
dec
jno
mov
push
cmp
xchg
lahf
mov
mov
inc
(bad)
test
ss
gs
ud0
pusha
sar
push
stos
push
es
xor
imul
hlt
js
xchg
cdq
xor
mov
pop
in
sbb
sbb
add
jno
sub
push
pop
fidiv
(bad)
lds
loop
out
mov
xchg
adc
sub
retf
and
clc
sub
or
test
call
call
push
pop
mov
movs
push
arpl
add
cmp
dec
pop
xchg
push
movs
test
ins
fild
lock
cmp
xor
and
xchg
and
clc
loop
sbb
ins
and
mov
ds
sub
lea
shl
push
sub
and
(bad)
jge
sti
movs
outs
fiadd
mov
and
ins
inc
ja
or
push
mov
xchg
sbb
out
into
bound
lock
xlat
xor
rol
xchg
add
pop
xchg
dec
jl
das
xor
push
mov
lods
in
mov
and
adc
sub
std
cmps
jnp
or
jnp
in
sub
shr
(bad)
fnstcw
in
xor
cmp
popf
pop
dec
push
das
movs
cmp
aaa
mov
jmp
dec
fsub
out
aam
ins
ja
xchg
cdq
ret
scas
outs
lock
je
xchg
sbb
lods
add
dec
aas
inc
jl
xchg
adc
pop
and
repnz
int3
mov
pop
push
xor
repz
add
leave
retf
adc
xor
xor
add
test
inc
inc
push
lds
and
pop
fldenv
rcr
mov
sbb
movs
cmp
fwait
ins
js
(bad)
pop
fwait
call
cmp
mov
stc
outs
or
daa
jle
cmc
cmp
hlt
lds
fild
clc
add
push
aad
sar
mov
jmp
jecxz
outs
sub
outs
push
xor
pop
mov
push
pop
test
loop
sub
adc
adc
pushf
pusha
inc
and
data16
push
inc
icebp
sbb
repz
xor
ins
sub
outs
enter
or
cli
pop
push
out
xor
cmps
sbb
js
cmp
or
imul
push
nop
push
mov
inc
outs
jno
xchg
dec
(bad)
jnp
fisttp
sbb
jge
mov
dec
jo
test
mov
leave
ret
aad
pop
inc
inc
adc
push
cmp
and
lods
(bad)
aas
sbb
nop
pop
dec
add
rcr
xchg
dec
mov
mov
outs
js
pop
mov
dec
dec
xor
sub
pop
xor
and
push
sti
retf
enter
pop
cmp
dec
mov
mov
xlat
push
test
push
and
mov
cmp
(bad)
nop
ja
test
test
push
jbe
js
stc
ja
mov
jb
arpl
push
dec
(bad)
cmp
sub
sbb
and
cmp
sub
sar
pushf
jmp
daa
(bad)
mov
in
dec
data16
rcr
xchg
lods
jg
jo
or
ins
inc
mov
push
out
int3
dec
or
fs
adc
(bad)
sub
and
loope
pop
in
shl
dec
ret
out
sahf
jne
into
pop
cmc
add
inc
mov
jecxz
jge
inc
ds
bound
adc
jbe
ficom
lahf
or
arpl
mov
cmps
cmp
sbb
and
int
cwde
push
cmp
outs
and
retf
xlat
mov
daa
push
loop
dec
xchg
jo
fisubr
xchg
out
xchg
movs
dec
test
(bad)
xchg
ret
lahf
enter
fisub
xchg
test
jae
(bad)
div
mov
cs
mov
movs
stos
lea
test
lock
hlt
pop
mov
mov
mov
dec
pop
and
inc
aas
add
in
add
push
mov
into
mov
fcomp
mov
ds
mov
sbb
mov
cmp
neg
daa
sub
push
lahf
fwait
cli
add
int
sbb
mov
xor
test
loop
mov
mov
xor
mov
sbb
rcr
inc
les
adc
fdivp
pushf
retf
or
imul
push
or
aam
test
sbb
mov
dec
(bad)
stos
push
les
pop
or
(bad)
push
inc
mov
popf
pop
jbe
sbb
sahf
add
hlt
or
ins
out
(bad)
cld
or
enter
push
mov
push
dec
nop
xchg
fcmovbe
leave
scas
cmc
idiv
pop
add
add
gs
xchg
inc
or
mov
fbld
lds
fs
cmp
or
push
outs
mov
scas
push
or
fnstenv
mov
lds
leave
mov
gs
fcmovnb
js
test
(bad)
and
dec
das
sub
clc
or
lods
mov
dec
in
aad
(bad)
popa
aam
aas
push
inc
iret
push
int
cmp
sbb
xchg
pop
retf
rol
icebp
pop
mov
repz
or
xchg
mov
je
cmp
shl
push
pop
stc
cmp
jb
das
ret
adc
add
gs
js
push
sub
mov
sti
push
dec
push
push
stc
and
xor
jp
adc
idiv
add
jmp
dec
sbb
sahf
or
jae
in
je
es
lds
inc
loop
xchg
(bad)
shl
cmps
lds
mov
inc
xchg
out
pop
mov
inc
mov
rcr
push
imul
push
and
adc
scas
mov
pushf
popa
or
in
push
add
xor
push
and
pop
popa
clc
popf
ins
mov
mov
sub
cli
daa
mov
add
xchg
cs
mov
push
xchg
pop
push
jno
sbb
mov
xchg
jg
sub
push
sti
push
dec
push
vunpcklps
(bad)
mov
sub
lea
jmp
xor
enter
sub
or
jne
inc
and
jge
inc
out
mov
fwait
sahf
mov
mov
jmp
lahf
cwde
lds
jnp
fisubr
movs
cmp
pop
xchg
add
mov
xchg
(bad)
xor
mov
jo
jmp
add
fadd
popa
movs
xor
sub
jg
icebp
push
loope
mov
imul
xor
adc
cmp
cmc
es
cmp
add
mov
cmp
(bad)
jle
outs
lea
xchg
ss
in
xchg
mov
mov
xor
call
fwait
aam
inc
push
mov
xchg
pop
mov
gs
sub
inc
mov
sti
pop
(bad)
pusha
fisub
ds
cld
je
dec
aad
jge
push
add
ret
cli
add
jns
dec
popa
stos
and
and
and
mov
rep
and
mov
sub
xor
ret
adc
dec
js
push
std
or
mov
ror
lock
retf
pop
sbb
sbb
arpl
out
ret
aaa
shl
pop
call
repz
mov
pop
test
dec
cmps
dec
jo
sub
mov
ins
pop
pushf
in
loopne
ret
(bad)
sbb
dec
jbe
scas
adc
das
(bad)
push
fwait
lock
adc
push
mul
cmp
xlat
dec
push
mov
pushf
retf
nop
(bad)
push
xlat
cmp
and
jo
dec
sbb
sahf
mov
xor
(bad)
sahf
stos
dec
adc
mov
pop
aam
push
xchg
cmc
fstp
sub
imul
jbe
dec
or
shl
lock
sub
int
xchg
retf
test
mov
mov
xor
mov
mov
fcomip
ret
xor
out
sbb
imul
out
xchg
jbe
out
mov
sub
inc
movs
test
and
repz
stos
cmps
and
sahf
imul
lods
outs
out
pusha
jbe
push
es
adc
lea
lea
fwait
sub
outs
gs
nop
push
out
adc
gs
inc
pop
aaa
aaa
mov
fiadd
inc
xor
xchg
jmp
inc
dec
ficom
sub
mov
ret
mov
add
scas
adc
xor
or
test
xor
jle
popa
jno
movs
scas
adc
xor
adc
and
movs
cmp
rcr
mov
or
and
push
stc
adc
out
movs
int3
jb
in
mov
mov
mov
add
and
outs
iret
loop
add
mov
test
push
bound
add
dec
aas
stos
mov
stos
jmp
mov
push
or
mov
inc
add
call
mov
ds
(bad)
ss
das
adc
push
outs
test
in
jae
ja
mov
stc
inc
and
das
cmp
enter
jnp
mov
gs
xchg
add
inc
out
test
lods
(bad)
dec
pusha
loope
lods
aad
ret
aaa
fidivr
pop
bound
dec
out
je
stos
mov
cld
ret
rcr
mov
xor
lock
cmps
jle
test
or
pushf
dec
in
fstp
jmp
add
sar
or
jp
fsubr
sbb
jg
mov
jge
add
test
pop
ja
dec
iret
sub
sub
data16
in
and
xchg
xchg
ja
retf
or
outs
push
push
jae
cmp
pop
fldcw
mov
ror
add
add
into
jnp
fldenv
ret
out
dec
inc
sub
repz
mov
mov
xlat
stos
loop
adc
ins
std
shl
or
sbb
push
test
sar
add
pop
mov
jo
stos
dec
test
adc
leave
or
ja
pop
call
lds
xchg
jo
xor
mov
inc
imul
loopne
pop
aas
mov
lods
mov
adc
imul
mov
mov
scas
mov
push
jmp
test
in
xchg
leave
mov
adc
(bad)
xchg
nop
(bad)
in
add
pop
mov
int
stos
test
int
sub
sub
inc
mov
mov
cmp
mov
inc
(bad)
jl
push
cli
imul
mov
cmp
daa
ins
mov
jge
push
mov
adc
inc
mov
ds
adc
add
fisttp
ss
pop
push
int
ja
aas
xchg
imul
movs
fadd
fadd
pop
arpl
ja
in
ror
push
jmp
sub
sub
scas
test
xor
add
mov
cli
cmc
out
repz
inc
xchg
xor
je
sub
jle
adc
cmp
aaa
clc
aad
jg
mov
jge
add
(bad)
mov
(bad)
scas
lock
movs
int
cdq
jns
mov
(bad)
xchg
jb
mov
rcl
dec
int3
sti
in
pop
lock
adc
or
inc
(bad)
ins
ds
nop
jbe
push
shl
pop
push
cmp
jge
dec
enter
stc
(bad)
sbb
les
push
xchg
pop
loope
mov
push
scas
mov
push
mov
je
test
lea
outs
scas
push
in
dec
call
addr16
psubq
dec
inc
pop
loopne
in
dec
stos
scas
lods
sti
mov
sbb
cmp
mov
pop
cmps
sub
mov
push
std
jp
or
scas
inc
retf
push
mov
sbb
xchg
sbb
jnp
fisubr
inc
mov
xchg
push
sub
xlat
push
mov
in
fsubr
int
push
jno
lock
out
jl
xchg
and
aam
movs
cmp
pushf
xor
lods
test
mov
dec
jbe
(bad)
jae
repz
jns
jp
xor
dec
inc
cdq
and
cmp
bound
fwait
dec
bound
push
in
(bad)
cmp
cmp
jmp
pop
xchg
enter
adc
jle
add
or
adc
aad
dec
aaa
add
loopne
(bad)
ja
call
xchg
mov
jp
mov
fstp
sub
jae
frstor
xchg
pop
mov
xchg
sar
xchg
cwde
xor
inc
stos
xor
push
cmp
loopne
mov
push
scas
inc
mov
iret
and
test
or
and
mov
add
mov
ja
mov
in
add
fdivr
addr16
cs
cmp
xlat
jmp
mov
test
jmp
cdq
imul
jbe
cmp
inc
cmp
push
icebp
mov
in
add
push
test
add
cmp
dec
sbb
mul
and
inc
adc
fbld
fwait
bound
add
sar
(bad)
cmc
lods
mov
sahf
pop
xor
sbb
out
sbb
rol
iret
dec
dec
aas
jbe
int
jecxz
xchg
je
ret
add
sub
clc
jo
sti
(bad)
out
pop
test
mov
jo
adc
in
inc
sbb
(bad)
and
mov
push
jno
inc
or
(bad)
icebp
(bad)
push
xor
in
sar
inc
loopne
jo
xchg
fnstenv
or
popf
in
rol
push
add
icebp
jnp
dec
jge
mov
cwde
and
xor
mov
push
movs
(bad)
mov
xchg
mov
into
clc
imul
inc
pop
data16
or
jmp
inc
xchg
adc
and
mov
lods
pop
rcl
(bad)
xchg
jne
lods
jne
and
inc
adc
push
xor
stc
xchg
ficomp
mov
int
mov
and
push
sbb
or
aad
out
pop
inc
adc
xchg
or
js
cld
xchg
add
aaa
adc
daa
sub
add
nop
xchg
and
shr
in
inc
xchg
cmp
dec
inc
cmps
fcmovu
inc
dec
sahf
mov
pop
call
pop
jo
inc
inc
push
cmp
(bad)
push
cwde
or
rcl
mov
dec
loopne
aas
movs
mov
mov
xchg
mov
data16
mov
inc
mov
(bad)
ins
dec
mov
cmps
adc
loope
dec
mov
scas
push
inc
push
sub
or
jnp
inc
or
dec
loop
repz
nop
test
aaa
xor
mov
idiv
sahf
push
xchg
ja
xchg
or
mov
adc
outs
inc
sti
not
test
pushf
fistp
lods
gs
test
movs
sbb
dec
aam
dec
popf
rcl
push
imul
stos
inc
arpl
or
out
jp
adc
mov
sub
sub
mov
mov
(bad)
or
or
adc
mov
fs
lods
gs
ret
(bad)
mov
and
inc
call
and
inc
sbb
stc
cmp
push
call
aad
shl
scas
(bad)
xchg
out
out
idiv
cwde
mov
xchg
retf
cs
or
arpl
push
test
add
xchg
das
add
int3
clc
rcr
mov
sbb
or
lock
mov
or
adc
aaa
xchg
push
push
cdq
pop
pushf
call
ins
cmp
lds
outs
popa
inc
ret
pop
xor
sbb
mov
out
(bad)
jnp
cmp
shl
or
out
jecxz
sub
iret
loop
iret
jmp
mov
mov
mov
dec
fwait
mov
push
jae
(bad)
jo
daa
pushf
sbb
arpl
lods
jmp
and
retf
pop
cs
pop
push
xor
or
fwait
test
cmc
pop
and
clc
jne
inc
fild
or
jecxz
add
cli
jg
jg
mov
adc
push
pop
call
cli
xor
cmp
push
xchg
jne
dec
imul
addr16
sub
pop
(bad)
leave
fwait
cdq
sub
mov
jle
daa
dec
fwait
cwde
(bad)
xchg
(bad)
xchg
sub
mov
addr16
fld
push
dec
jmp
popf
pop
pop
mov
lods
xlat
mov
pop
repnz
cmps
iret
cmp
sbb
xor
jnp
mov
(bad)
loop
(bad)
push
lahf
sar
out
pusha
ja
movs
movs
xchg
sub
xlat
call
cmp
daa
fimul
imul
shl
aad
sub
push
loopne
jo
cmp
mov
push
loope
popw
dec
(bad)
in
add
xchg
out
in
mov
mov
sub
call
sub
or
push
jl
dec
inc
push
and
aad
jns
stc
mov
push
iret
inc
xor
jl
cmp
and
scas
std
push
popa
push
sbb
push
cwde
push
jnp
das
test
lods
mov
mov
aaa
fdivrp
jecxz
mul
xor
jmp
mov
and
sbb
imul
xor
add
dec
rcl
dec
add
(bad)
test
pop
fwait
jmp
adc
jge
mov
xor
sbb
pusha
sbb
or
iret
jbe
lods
mov
cli
inc
jbe
retf
xchg
jge
rcl
dec
pop
arpl
cmps
std
jb
push
jg
ds
pop
pop
pop
rcl
lods
adc
(bad)
add
mov
xchg
data16
xchg
inc
(bad)
jae
daa
sub
jle
ja
xor
jmp
std
or
inc
mov
push
rcr
jecxz
jge
je
xchg
mov
jnp
out
pushf
and
popf
mov
ins
lds
jae
mov
jae
inc
scas
cdq
mov
push
fisttp
add
rcr
cmps
fdiv
sub
cmp
mov
(bad)
aam
in
pop
imul
fist
inc
jg
inc
sbb
jae
add
and
cmc
jo
add
fcmove
sbb
or
scas
or
aam
icebp
lods
jl
add
dec
cld
aas
lods
popa
fs
adc
in
pusha
inc
inc
and
xchg
xor
popa
movs
cmp
adc
pop
data16
xchg
scas
lods
dec
sub
mov
inc
push
hlt
mov
iret
inc
nop
call
xchg
rcr
sahf
add
mov
mov
lock
xchg
into
scas
bound
icebp
xor
dec
pop
jmp
mov
test
mov
inc
adc
inc
data16
jae
xor
cmp
imul
dec
jne
lods
sub
mov
cmp
mov
xchg
leave
ss
adc
mov
mov
mov
add
test
int3
mov
inc
push
adc
jmp
mov
add
dec
add
dec
add
stos
gs
jecxz
js
xor
and
jbe
and
adc
stos
xchg
dec
aam
and
push
cwde
shl
xor
mov
pop
add
bound
idiv
dec
xchg
fsubr
ins
cld
mov
sub
pop
and
sti
inc
push
sub
into
addr16
inc
inc
xor
hlt
clc
retf
mov
das
mov
retf
push
adc
or
mov
ins
in
jns
pusha
xchg
push
stc
out
popa
or
jle
in
add
xchg
push
test
mov
cmp
or
mov
call
adc
ret
mov
test
cmps
cdq
ror
lea
mov
ins
cmp
dec
mov
sbb
jb
(bad)
xchg
into
adc
jge
cmp
inc
aam
movs
fnclex
scas
jne
or
ins
push
add
or
out
cli
jmp
shl
ja
lods
in
lods
cmp
sbb
pop
cmp
sbb
inc
jle
test
sub
mov
mul
ficom
mov
scas
jo
cmps
sub
mov
lahf
sbb
mov
js
sbb
repz
gs
jp
xor
loope
jmp
dec
pop
mov
clc
jge
pop
jmp
pop
lea
ret
jmp
ror
js
mov
jp
cmps
jns
jbe
mov
adc
(bad)
and
adc
mov
(bad)
push
sbb
movs
cmc
ret
sub
loop
aas
(bad)
ret
mov
popa
sub
vmovaps
ins
out
xchg
xlat
daa
arpl
inc
mov
mov
loopne
imul
push
adc
push
sti
loop
xchg
push
xor
mov
dec
lock
in
iret
jno
inc
aam
mov
sub
mov
retf
push
movs
inc
mov
sub
adc
test
xor
int3
or
rol
jmp
shr
xor
push
jno
stos
and
and
leave
ins
sub
scas
add
shl
test
cmp
mov
cmp
movs
xchg
mov
mov
dec
je
and
sbb
xchg
loope
dec
inc
xchg
test
(bad)
fdiv
xchg
jb
mov
int3
cmc
ficom
inc
xchg
sti
mov
retf
dec
push
push
xor
cmp
sub
adc
test
or
rcl
(bad)
dec
xchg
mov
les
dec
inc
jns
test
push
faddp
je
mov
adc
lea
out
pop
xchg
or
sub
push
jp
or
mov
jne
mov
mov
xchg
mov
xchg
dec
sbb
dec
fist
xor
sti
sub
sub
shl
add
iret
sbb
pop
mov
jno
pop
sbb
es
(bad)
push
iret
xchg
pop
jns
jne
and
scas
push
and
out
je
fwait
xchg
push
(bad)
and
bnd
mov
dec
(bad)
(bad)
xor
jo
sub
aad
inc
or
mov
addr16
test
loop
mov
xchg
pop
xchg
cmp
cmp
mov
and
sub
mov
xchg
ret
lea
cmp
stc
jp
pop
inc
inc
in
xor
repz
jb
push
sar
cmp
xchg
add
enter
jl
lea
jmp
(bad)
in
cdq
bound
mov
add
(bad)
sub
mov
fiadd
imul
mov
jg
or
inc
stos
cs
add
xor
and
xchg
cli
retf
mov
cli
sub
mov
cwde
imul
(bad)
push
add
inc
dec
std
xchg
fld
push
call
xchg
sbb
push
push
add
add
cmps
jmp
pop
mov
xchg
jne
inc
push
push
outs
jge
push
in
xor
bound
in
dec
into
imul
fnstenv
pushw
hlt
stc
popf
jbe
pop
jbe
stc
inc
sub
sbb
inc
jns
sbb
sbb
pop
(bad)
fdivr
and
push
mov
add
xchg
repnz
pushf
in
jne
inc
pop
stos
mov
into
sbb
jmp
repz
rol
ret
cli
leave
leave
push
dec
sbb
push
shl
sbb
pushf
pop
int
pop
jns
mov
pop
ss
cwde
loopne
xor
xor
into
dec
fucomp
sub
dec
outs
aad
mov
hlt
jecxz
push
mov
jle
or
test
fxch
add
nop
cmp
pop
cmc
call
gs
dec
mov
movs
js
test
lea
das
cmp
sbb
out
add
xor
idiv
imul
shl
xor
or
xchg
lods
std
shl
inc
add
mul
mov
fsubr
dec
ret
mov
jns
ins
jb
push
les
mov
shr
mov
leave
in
(bad)
xor
pop
push
loope
adc
jae
add
stos
ins
adc
gs
cmc
inc
push
fucomi
mov
lock
mov
mov
inc
movs
xor
outs
stos
jns
int3
and
scas
pop
aad
mov
ja
inc
ficomp
lods
xchg
mov
fstp
test
int3
lods
xor
jnp
sbb
mov
repz
cmc
dec
dec
cli
cwde
inc
mov
mov
push
push
dec
je
xor
and
jmp
nop
movs
pop
gs
js
sub
inc
nop
(bad)
in
test
loopne
aad
inc
rcr
lea
xor
leave
and
sbb
push
mov
nop
mov
jge
jmp
inc
mov
sbb
mov
jbe
add
push
push
int3
inc
add
in
leave
dec
fsub
xchg
adc
xchg
mov
push
inc
cmp
xor
dec
(bad)
or
out
push
adc
ds
push
dec
jp
jl
adc
scas
dec
mov
js
push
jmp
loop
adc
cmp
mov
and
dec
nop
andps
scas
inc
push
mov
hlt
jge
inc
sar
xchg
scas
nop
jecxz
ret
shl
sbb
cmp
and
sar
sub
push
push
push
imul
xchg
and
test
call
jle
icebp
adc
jns
movd
icebp
test
jmp
call
jae
or
movs
cmp
push
add
and
jo
movs
adc
lahf
and
jne
retf
jge
mov
mov
xor
add
test
and
sub
xchg
stos
fs
mov
xor
repnz
cmps
sahf
and
inc
or
or
arpl
loope
or
dec
or
xchg
aaa
adc
and
fcom
inc
mov
je
cmps
xchg
sbb
in
loop
(bad)
leave
ror
cmp
jecxz
cli
cmp
mov
push
retf
scas
mov
inc
push
add
stos
test
sub
aas
jp
or
add
sbb
ss
mov
add
xchg
scas
mov
cli
pop
or
adc
jecxz
sub
dec
mov
adc
stos
in
jb
or
mov
mov
jle
pop
xchg
in
xchg
push
lds
adc
cmps
in
ss
call
xchg
jmp
in
inc
mov
jbe
xchg
in
mov
inc
fld
in
dec
dec
dec
and
xor
inc
jbe
mov
dec
sti
adc
jmp
sub
inc
pop
mov
inc
jmp
xor
mov
in
push
xchg
fwait
scas
in
dec
clc
cmp
aaa
test
out
adc
lock
mov
adc
adc
pop
or
jl
sti
or
popf
sbb
xor
(bad)
leave
lods
sti
je
pusha
shl
jbe
nop
sub
test
and
push
ja
arpl
mov
repnz
sahf
loopne
lds
cmps
xchg
jecxz
ret
pop
xchg
mov
add
sub
test
xchg
mov
push
out
pop
sub
std
pusha
stos
cmp
inc
leave
out
sahf
mov
in
pop
or
push
pop
daa
out
dec
mov
mov
push
in
(bad)
and
dec
fbld
mov
cmp
add
mov
or
mov
jmp
repz
jl
clc
xchg
pop
jb
or
dec
jbe
ja
sub
pop
push
cmp
fild
enter
inc
pop
or
sbb
out
jl
mov
(bad)
arpl
cwde
jge
in
imul
int
sub
sub
xchg
shl
or
add
xchg
shl
bound
sub
cmp
mov
jmp
cli
jmp
pop
mov
cs
ins
or
repz
fwait
pop
aad
or
dec
mov
in
xchg
push
xchg
cmc
mov
and
push
adc
and
js
and
pusha
leave
dec
mov
mov
jmp
imul
cmp
sub
cdq
inc
bswap
push
mov
fwait
mov
aam
xchg
mov
dec
pop
ds
nop
shl
mov
leave
xchg
xor
xor
popf
(bad)
pop
imul
or
int
test
imul
cdq
pop
(bad)
imul
in
gs
xchg
fsub
sub
cmp
adc
or
je
je
ins
or
fstp
inc
(bad)
jae
inc
and
daa
push
aas
pop
adc
daa
xor
jbe
iret
push
(bad)
std
cmp
jl
mov
data16
adc
xchg
adc
cmp
add
jb
pop
test
aad
cmps
adc
scas
loope
cmp
and
jno
and
jmp
inc
out
aas
or
adc
(bad)
out
(bad)
dec
dec
not
mov
cmps
push
or
jecxz
inc
mov
mov
mov
jecxz
jecxz
movs
mov
adc
or
pop
stos
cmps
jmp
sub
jge
(bad)
inc
stos
sub
ret
popf
pop
out
(bad)
aas
mov
jge
xchg
adc
movs
mov
dec
mov
mov
push
mov
rol
push
gs
es
(bad)
inc
loop
sub
push
pop
out
fbstp
xchg
cwde
(bad)
arpl
sub
push
(bad)
fsub
das
add
sbb
jmp
xchg
xchg
pushf
mov
pop
push
repz
ror
movs
lds
iret
jmp
ss
das
sub
mov
inc
xchg
lahf
lea
test
mov
jp
ret
jnp
push
push
or
adc
mov
push
out
clc
fcomp
dec
rol
cmc
mov
(bad)
aam
hlt
and
jb
loope
jp
loopne
xchg
fs
sub
adc
popf
loopne
mov
push
xor
aam
neg
inc
add
mov
outs
jo
sub
pop
mov
dec
dec
xor
aaa
inc
inc
pop
daa
inc
scas
cmc
fwait
cmps
es
pusha
inc
push
pop
xchg
mov
xchg
adc
fdiv
fiadd
dec
inc
mov
push
mov
outs
xchg
xchg
cmps
jno
stos
pop
mov
fmul
jno
sahf
pop
fbld
xor
lock
cmps
jae
push
inc
fnstsw
mov
(bad)
cmp
js
hlt
(bad)
xor
aam
cwde
lahf
and
adc
rcl
in
shr
mov
sub
inc
or
jmp
inc
sub
and
cli
push
cld
or
cmc
inc
pop
sbb
mov
dec
(bad)
mov
xchg
dec
ins
cdq
adc
mov
fs
xchg
arpl
out
les
jns
inc
cld
adc
rcr
xchg
xchg
pop
cld
daa
sbb
or
and
enter
sbb
sub
mov
jno
jge
mov
pop
arpl
adc
xor
in
inc
sub
pop
adc
inc
arpl
(bad)
out
push
pop
data16
test
int3
pop
jmp
ins
pop
add
adc
call
neg
xor
xor
jge
mov
fstp
push
mov
scas
cs
xor
mov
(bad)
ss
stos
sub
dec
cmp
mov
mov
dec
pop
push
test
clc
and
inc
sbb
dec
adc
(bad)
dec
cmp
mov
adc
sar
dec
pusha
xchg
xchg
dec
adc
or
pusha
iret
cmp
and
sbb
clc
into
ins
jl
sbb
push
cmps
mov
cmp
fst
push
lods
mov
(bad)
repz
inc
shr
neg
pop
das
dec
rcl
(bad)
sub
int3
inc
cmp
cmp
je
mov
mul
jno
iret
arpl
push
and
je
push
movs
and
dec
imul
lods
das
and
jecxz
cli
bound
out
in
bound
aas
sahf
popa
stc
or
arpl
movs
aam
lods
xor
push
pop
repnz
rcl
cmp
or
(bad)
movs
mov
out
add
push
push
loop
inc
or
mov
int3
fidiv
std
mov
push
inc
call
jns
pop
(bad)
int
lods
push
shl
pop
sbb
lds
pop
xchg
mov
adc
jb
ins
inc
in
mov
cmp
icebp
sahf
mov
add
pop
xor
push
jae
mov
sub
shr
jae
fdivr
cmc
(bad)
and
mov
mov
popa
adc
and
icebp
pusha
outs
retf
pop
pop
rcl
jg
pusha
retf
fld
add
xchg
mov
iret
pop
sub
dec
mov
mov
push
ds
adc
xor
cmp
mov
bndldx
dec
outs
rcl
test
xchg
in
jmp
mov
aas
inc
cmps
arpl
cmovb
cmp
mov
mov
push
ret
out
stos
int
push
loopne
shl
sub
shr
test
aam
sbb
sub
mov
sti
fisub
int3
mov
cmp
push
es
test
call
enter
fbstp
(bad)
mov
dec
(bad)
sbb
out
repz
pop
inc
pop
push
dec
fiadd
pop
iret
jbe
ficom
scas
mov
mov
cmp
fld
retf
push
out
pop
jg
push
iret
push
push
mov
pop
dec
(bad)
mov
pop
jnp
icebp
stc
dec
pushf
sti
jmp
jmp
sbb
stos
push
mov
pop
mov
adc
pop
or
dec
pop
sub
push
add
sub
rol
mov
or
jmp
mov
sbb
les
cli
and
mov
push
in
arpl
shl
sub
cmp
push
shl
sub
sub
cwde
sub
mov
jb
neg
cmp
sub
adc
jecxz
jle
inc
dec
or
cmps
inc
sub
cmp
iret
xchg
nop
push
pushf
std
cmp
loop
loope
out
(bad)
sub
cmp
adc
mov
jge
rcr
jecxz
int
pop
dec
test
enter
xchg
push
out
pop
mov
mov
call
cmps
push
mov
test
add
sbb
cmp
dec
imul
loopne
adc
pop
jecxz
xchg
ror
mov
push
movs
js
test
outs
ror
test
iret
fist
cmp
rcr
dec
loopne
xchg
mov
xchg
inc
mov
mov
js
out
inc
pop
ja
rol
js
cmp
daa
repz
add
jecxz
enter
sar
ret
rcr
and
int
ds
ret
gs
adc
or
xchg
cmp
push
lahf
add
hlt
sub
push
(bad)
jle
or
add
stc
jmp
push
lock
push
or
lock
push
fnstcw
dec
into
ds
fs
stos
xlat
mov
call
jno
bound
arpl
xor
je
aad
mov
int3
or
sbb
out
inc
clc
xchg
repnz
pop
xor
add
test
retf
pushf
jo
push
or
sbb
pop
scas
sbb
add
sub
jle
lds
gs
add
push
test
dec
jo
inc
dec
inc
jge
inc
shl
pusha
popa
shl
outs
fs
pop
sub
mov
out
sbb
fdivr
push
xor
(bad)
pop
movs
rcl
dec
or
scas
inc
mov
push
mov
or
loopne
sbb
fiadd
or
(bad)
pop
gs
lea
cmc
ja
mov
arpl
push
mov
xchg
adc
dec
push
scas
jmp
fwait
cs
in
imul
lock
cmp
pusha
push
jl
cli
fistp
icebp
adc
fist
inc
cmp
lods
dec
loope
repnz
leave
imul
gs
mov
sub
push
cmp
mov
aam
jge
or
mov
cdq
sar
jle
xor
jmp
mov
cdq
ror
sub
cmp
(bad)
xor
push
push
push
mov
cmc
mov
xor
dec
aam
popa
es
xor
jae
cs
js
pop
push
out
retf
and
sub
dec
pop
(bad)
out
add
add
(bad)
in
dec
ret
fdivr
cmps
sbb
jecxz
mov
call
imul
ds
pop
push
ins
mov
mov
repnz
mov
loop
inc
cmps
jae
hlt
cmps
out
(bad)
in
xor
jge
xchg
push
cdq
pop
popf
imul
cld
adc
mov
sbb
pop
pop
mov
(bad)
fsubr
jle
jmp
inc
sbb
in
inc
clc
dec
movs
cmp
loop
mov
sub
ret
inc
jne
jl
sbb
push
pop
shl
mov
mov
lds
stc
jnp
xchg
inc
xchg
add
les
ret
pop
loope
add
jmp
or
dec
mov
mov
retf
int3
retf
sbb
ins
ja
inc
inc
push
xlat
xor
rol
(bad)
fdivr
std
(bad)
test
shl
pop
push
push
mov
movs
and
add
cmc
ficomp
jne
(bad)
aam
ins
mov
outs
pushf
into
dec
ds
mov
jb
add
jns
adc
mov
pop
or
fstp
ds
je
mov
sbb
(bad)
sub
cmp
inc
add
outs
add
(bad)
fadd
(bad)
lock
and
inc
mov
xchg
jp
hlt
into
cmps
sbb
pop
dec
clc
test
es
jne
adc
pop
push
lock
cdq
pop
jl
out
cmp
push
lock
in
jo
jb
pop
sbb
lods
mov
enter
call
es
cmp
(bad)
icebp
xchg
sti
test
adc
sub
and
adc
push
outs
xchg
pop
adc
mul
push
hlt
inc
jmp
(bad)
(bad)
fs
sbb
into
inc
(bad)
(bad)
cli
(bad)
test
shr
mov
cmp
jb
fild
adc
stos
stos
sbb
jl
out
jmp
cmp
loopne
and
sub
stos
jne
sbb
adc
rol
inc
mov
call
aas
repnz
jno
push
push
sub
ficomp
je
sbb
es
pop
mov
jo
mov
pop
mov
jp
mov
loopne
push
xor
jne
(bad)
cdq
and
sbb
mov
into
dec
adc
push
or
push
inc
sbb
or
inc
out
inc
sbb
ja
call
sar
sahf
leave
sbb
jns
fnsave
(bad)
inc
or
ja
mov
nop
push
dec
inc
push
push
call
lds
xchg
inc
adc
cdq
cmps
pushf
mov
stc
mov
fimul
jg
fidiv
ss
and
inc
jne
imul
jg
pop
(bad)
push
scas
push
xchg
test
add
cmp
xor
or
add
mov
mov
cmp
add
int
imul
aad
mov
aaa
int
mov
xchg
dec
out
je
add
(bad)
cmp
jmp
not
sbb
sbb
or
cmp
or
jg
bound
lds
mov
push
add
mov
nop
bound
mov
mov
dec
adc
inc
jmp
es
lock
cli
fwait
mov
dec
dec
mov
aas
push
scas
inc
imul
in
loop
and
outs
in
inc
pop
mov
mov
push
ins
out
push
xor
or
cmp
sar
xor
inc
pop
call
pop
ja
lods
lods
jl
(bad)
mov
pushf
(bad)
jmp
js
adc
and
outs
inc
fsubr
mov
loopne
ds
(bad)
dec
sub
outs
imul
icebp
and
ins
or
add
jle
lock
cli
dec
out
mov
cmp
sti
xchg
cmc
xchg
in
sbb
iret
rcr
xchg
mov
push
lock
inc
fxtract
rol
pop
ret
and
adc
mov
es
sub
mov
stos
gs
mov
pop
into
outs
sub
outs
xor
pop
add
mov
jne
xor
pop
inc
jp
out
jl
loope
lds
push
dec
sbb
mov
retf
pop
mov
push
xchg
stos
cmps
mov
pop
mov
jae
push
fnstenv
js
adc
sub
cmp
and
sub
aas
sub
xchg
inc
or
mov
mov
xchg
xor
inc
(bad)
mov
sub
aad
js
out
or
(bad)
scas
sub
push
jg
push
push
out
call
shr
mov
adc
aas
mov
test
inc
or
fsub
or
pop
and
jle
jp
pop
dec
adc
aam
jae
mov
dec
dec
cmps
cmp
cmp
clc
mov
lea
aam
call
pop
xlat
xchg
mov
inc
push
xor
and
pop
mov
mov
cli
mov
or
je
imul
shl
aad
and
in
xor
stos
pop
xchg
pop
mov
xchg
or
mov
gs
test
mov
and
push
rcr
add
xor
js
inc
mov
dec
outs
pop
xchg
data16
and
mov
push
sbb
pop
dec
mov
(bad)
adc
into
addr16
mov
adc
xor
in
jge
cmp
lods
fld
pop
test
add
add
jmp
lahf
mov
loope
gs
shl
ror
fcomp
out
mov
add
inc
cmps
dec
jl
test
push
jbe
mul
jo
add
or
cmp
loop
bswap
cwde
loope
outs
popf
rol
int
cld
inc
jp
cmps
call
push
push
fdivrp
inc
test
add
movs
pop
sub
out
add
test
hlt
loopne
lock
scas
cmp
xchg
mov
ins
and
outs
jmp
loope
lock
out
inc
jae
aam
imul
pop
sub
js
push
int
add
out
repnz
add
icebp
cmc
cdq
xlat
xlat
frstor
add
popf
movs
(bad)
or
popf
out
push
mov
inc
test
pop
xor
test
(bad)
sbb
mov
dec
mov
cmp
xchg
xor
push
push
sbb
xor
dec
push
jns
mov
in
fs
xor
arpl
pop
sbb
xchg
cmp
and
adc
xchg
enter
pop
xchg
das
shl
cmps
outs
and
outs
call
bound
adc
arpl
jbe
test
xor
fisttp
daa
pop
pop
sub
sbb
iret
pop
lahf
(bad)
sub
add
push
xchg
jmp
push
cmp
pop
out
in
repnz
rcl
std
loop
dec
clc
xchg
mov
inc
inc
and
adc
leave
mov
in
(bad)
add
and
push
add
popa
xchg
out
mov
jbe
xor
adc
pop
mov
sub
test
adc
in
push
call
movs
icebp
aaa
mov
push
cmp
aaa
(bad)
jmp
fimul
(bad)
sti
ret
adc
sub
dec
cmp
pushf
xchg
sbb
push
add
std
add
xchg
shl
stos
push
(bad)
cmp
jmp
xor
fnstsw
sahf
jmp
mov
sub
aad
dec
cmp
cli
test
push
jne
pop
pop
addr16
dec
jnp
sbb
and
pop
cld
dec
movs
push
jae
fs
outs
jp
push
in
xor
push
int3
std
pop
daa
adc
in
pop
pop
mov
leave
and
(bad)
jne
dec
add
cmps
inc
sbb
jmp
in
mov
into
icebp
call
cmp
cld
add
push
cmp
ds
jecxz
fimul
push
int
ds
cld
pop
push
add
enter
jo
inc
dec
stos
sahf
adc
push
pop
jge
fild
jmp
leave
ins
enter
jae
adc
inc
and
int3
lock
sbb
je
xor
in
ja
xor
xchg
or
dec
int3
push
inc
loop
loope
sub
mov
jns
shr
jge
jmp
jns
push
push
sub
mul
sub
xchg
adc
retf
jae
pop
ins
fbld
out
push
repnz
mov
jmp
sar
sbb
aam
jle
mov
jmp
push
sub
ss
cmp
sbb
pop
sub
cmp
or
push
jle
addr16
nop
pop
leave
mov
pop
bound
rol
pop
mov
out
cmps
sbb
mov
jmp
jmp
mov
ret
hlt
adc
ja
cwde
mov
test
sub
imul
sbb
mov
or
lds
add
jne
pop
repz
repz
sbb
add
dec
inc
mov
sub
add
cmps
iret
dec
sub
push
mov
xchg
(bad)
es
and
cmc
idiv
ds
sub
xor
pop
mov
ficomp
cdq
jge
xor
hlt
jo
push
mov
repz
repnz
imul
xchg
mov
push
xlat
or
in
idiv
call
xor
cmp
inc
mov
data16
cmp
xor
xchg
test
out
jp
es
std
xchg
pop
je
add
mov
push
nop
retf
fild
ret
xchg
dec
pop
sbb
jbe
push
shl
mov
addr16
inc
jo
enter
add
jnp
call
(bad)
ja
or
push
jae
mov
addr16
push
movs
(bad)
cwde
lea
das
cli
shr
adc
push
scas
call
pop
out
mov
xor
(bad)
fs
clc
dec
repz
leave
les
cmp
add
sti
outs
jg
das
pop
mov
add
es
call
and
rcl
mov
cmp
xchg
cmc
cwde
adc
sbb
out
call
and
jg
int
sub
ret
inc
movs
fucomp
cmp
mov
xor
ss
lahf
int3
mov
mov
mov
(bad)
jno
sbb
jmp
nop
dec
je
mov
xor
jmp
cdq
(bad)
adc
mov
fiadd
bound
neg
sbb
jecxz
jge
push
push
and
ins
std
cmp
pop
sti
addr16
scas
jge
jmp
fdivr
or
or
sbb
shr
ins
pop
pop
xor
mov
xchg
cmps
leave
sub
xchg
xlat
xchg
pop
mul
sub
cmp
and
int3
inc
ins
scas
nop
je
fbstp
dec
jo
jge
clc
(bad)
or
jo
call
pop
cmps
scas
push
or
mov
sbb
rcr
mov
loopne
pusha
popf
xor
and
(bad)
cs
mov
jmp
add
jno
mov
mov
and
mov
inc
imul
xchg
sub
mov
fnsave
jg
popa
movs
sub
out
jns
stos
icebp
pop
pop
pop
pop
jns
mov
call
cwde
mov
sub
inc
add
aaa
icebp
mov
std
xchg
out
gs
fcom
add
pop
aaa
mov
push
(bad)
fbstp
fcomp
cli
arpl
jg
out
outs
hlt
mov
fstp
push
cmp
mov
add
jo
sub
jo
stos
in
pop
mov
push
movs
imul
les
push
xchg
pop
sbb
pop
adc
push
cmp
sub
mov
or
mov
dec
inc
mov
fcmovb
rol
sbb
jl
jnp
or
sbb
cwde
movs
pop
cwde
push
jge
jl
mov
mov
scas
fiadd
(bad)
(bad)
fucom
sub
xor
into
pop
movs
scas
inc
pushf
add
mov
loope
ret
sub
test
inc
sti
xor
pop
fwait
pop
mov
push
sbb
addr16
jecxz
sub
outs
sbb
cmps
mov
test
cmp
pop
lods
test
push
(bad)
popf
ret
cdq
and
xlat
jle
sbb
mov
out
cmp
scas
and
xchg
scas
mov
imul
fs
call
and
test
aam
es
jp
sub
icebp
sub
ja
push
into
jae
cmp
xor
repnz
jg
enter
cdq
xchg
xor
enter
jmp
jge
frstor
cmp
fucomi
(bad)
retf
int3
fstp
push
cmp
aaa
stos
lea
adc
adc
sbb
and
and
dec
mul
jmp
inc
cmps
stc
ss
mov
pusha
add
inc
xchg
push
jo
inc
jns
push
out
xchg
mov
popf
xchg
or
sbb
lods
or
outs
xor
xchg
xchg
movs
jns
mov
pop
sbb
xlat
popf
adc
outs
shl
sar
push
pminub
test
cmp
jle
icebp
add
and
int
xchg
nop
jecxz
sar
jmp
jne
(bad)
mov
scas
dec
movs
mov
push
add
div
test
xor
cmc
xor
mov
ror
pop
jmp
pop
or
jle
inc
call
or
xchg
loopne
cmp
dec
mov
lods
cwde
fild
cmp
es
sbb
push
out
loop
test
push
std
lods
mov
add
ins
(bad)
mov
sbb
cmp
retf
rcl
out
mov
jns
cmp
xchg
addr16
adc
movs
ins
aaa
mov
mov
mov
loopne
push
js
mov
popf
jmp
test
jae
mov
mov
loopne
mov
dec
aas
dec
dec
stos
and
push
jnp
loop
pop
aaa
pop
inc
or
sub
jae
es
and
or
icebp
adc
call
lds
xchg
ja
cmp
fcomp
in
scas
mov
jmp
cdq
jecxz
js
ret
jl
call
xor
cmps
mov
xchg
mov
movs
aad
push
stos
push
(bad)
lahf
adc
rcl
les
cwde
bnd
pop
jp
push
loopne
jb
add
dec
fisub
jp
scas
mov
mov
lahf
(bad)
push
sbb
lods
pushf
jb
retf
movs
ds
(bad)
(bad)
cmp
xchg
add
cmp
jnp
sahf
enter
jb
fistp
add
xor
dec
xor
bsf
jo
jnp
cmp
mov
cmp
adc
xor
fld
cmps
xchg
inc
add
outs
les
mov
mov
inc
js
pop
(bad)
retf
sahf
in
addr16
pop
sahf
adc
mov
inc
sub
mov
and
ja
xor
xor
stos
cmps
inc
lds
sbb
and
push
rcl
into
stos
movs
cmps
jl
scas
cmps
jne
add
adc
outs
inc
pop
ins
daa
mov
stos
mov
lds
xchg
lahf
lahf
outs
push
clc
adc
iret
cmp
xchg
out
or
retf
imul
sar
mov
inc
lods
inc
fimul
mov
jle
jge
push
mov
pop
(bad)
out
addr16
retf
sub
mov
fmul
ja
dec
icebp
push
mov
ret
jae
cmps
(bad)
ret
fild
ret
add
scas
xlat
xchg
cdq
mov
cdq
shl
hlt
dec
xchg
cmp
les
xor
movs
js
lds
pop
mov
and
hlt
sub
mov
ret
loopne
mov
gs
scas
stos
sbb
sbb
sbb
xchg
jl
sbb
sub
aam
(bad)
imul
mov
mov
imul
jbe
xor
push
sbb
fsubp
sti
movs
push
xor
pop
mov
(bad)
in
add
dec
xchg
jg
icebp
lds
xor
dec
(bad)
cmps
lea
mov
add
adc
mov
or
cmc
hlt
jmp
es
inc
add
cmp
jbe
stc
mov
add
jle
loop
xchg
into
push
ret
scas
mov
out
pop
cmc
adc
pushf
lods
fidiv
cmc
rcl
outs
bound
sbb
inc
repz
or
out
mov
ins
scas
enter
cs
push
outs
in
fistp
cmp
dec
shl
pushf
(bad)
jnp
jle
xlat
mov
add
test
jbe
sub
push
mov
(bad)
(bad)
jne
mov
enter
xchg
rcl
dec
mov
xchg
sti
mov
imul
loopne
mov
mov
pop
cmp
cmps
imul
xor
retf
mov
hlt
movs
test
pusha
in
mov
xchg
repnz
leave
jmp
jne
test
sbb
mov
and
int
or
js
adc
in
ror
stos
cmp
clc
iret
dec
outs
lods
shr
cmp
xor
(bad)
aam
dec
fsub
sbb
imul
shl
lock
jl
mov
inc
or
ret
pop
mov
cdq
sahf
and
lds
test
mov
lahf
push
in
lock
sub
movs
ret
and
sub
or
cmp
jge
mov
pop
add
sub
mov
jns
mov
jle
mov
pop
sub
iret
(bad)
inc
and
loopne
add
cmp
rcl
ds
outs
loop
jbe
adc
xlat
aam
sbb
mov
sbb
call
aaa
inc
in
mov
add
dec
sub
pop
mov
cmps
inc
xchg
out
mov
xchg
loope
mov
or
and
jns
das
mov
sbb
inc
repz
dec
pop
xchg
rol
or
pop
in
rol
pop
mov
imul
pushf
push
jns
div
mov
data16
repz
sbb
mov
inc
jne
hlt
add
cs
(bad)
hlt
push
into
aam
test
cmp
bound
push
jmp
int3
(bad)
jmp
sbb
and
and
sar
popf
inc
inc
ret
xlat
xchg
pusha
rcr
mov
sub
aam
sub
sbb
cs
push
mov
rol
cmp
cwde
les
mov
xchg
cmp
dec
in
cwde
fmul
inc
repz
stc
ins
dec
inc
mov
dec
shr
in
push
inc
inc
frstor
xchg
mov
hlt
outs
cs
(bad)
push
test
loopne
push
mov
dec
cwde
xchg
mov
inc
push
retf
pop
test
cli
and
inc
push
mov
xor
shl
mov
xor
ffree
dec
das
inc
xchg
xor
in
sbb
shr
or
pushf
(bad)
fsub
outs
xchg
lods
mov
jnp
adc
aam
and
bound
pop
retf
jecxz
jecxz
bound
cmp
xchg
or
fs
bound
or
cmp
push
pop
mov
neg
arpl
mov
in
sti
mov
daa
or
dec
stos
int
jg
push
mov
cdq
cmps
outs
scas
or
adc
xor
adc
mov
test
call
mov
daa
jnp
rol
pop
ret
loop
mov
mov
push
xlat
xchg
call
loop
xor
mov
fmul
je
icebp
jmp
rcl
mov
push
(bad)
sub
jmp
inc
in
jo
ss
call
fcmovnu
movs
test
rcr
pop
and
pop
cwde
jne
or
xor
call
int3
or
out
ins
dec
cs
sbb
sub
cmp
adc
fldcw
mov
adc
retf
add
repz
ins
aaa
push
dec
test
mov
adc
dec
int
fisttp
push
xlat
mov
push
mov
and
int3
es
cmps
jg
loopne
and
inc
push
fiadd
sub
popf
xor
es
push
repnz
(bad)
xchg
mov
pop
dec
xor
mov
rep
cmp
dec
shr
mov
pop
cmc
pop
repz
mov
iret
jl
xchg
mov
stos
and
cmp
sti
push
mov
adc
jmp
inc
aas
shl
jo
stos
sub
sub
sbb
ror
cmp
sub
jg
cmp
xor
cdq
div
xor
adc
sbb
leave
nop
add
sti
pop
mov
sbb
jo
ret
sar
push
or
inc
dec
out
and
mov
in
lock
mov
jns
or
jmp
xlat
jmp
mov
dec
and
movs
cwde
adc
test
push
add
xor
jmp
scas
jbe
iret
dec
popf
xchg
test
mov
cmps
lods
(bad)
pop
cmc
and
xchg
push
mov
and
aaa
jno
lods
jno
mov
jb
scas
or
cmps
adc
add
std
movs
push
imul
popa
stos
cmp
or
ficom
push
(bad)
sti
xchg
unpcklps
mov
addr16
jb
outs
sahf
test
test
aam
stos
mov
adc
jns
jnp
stos
or
test
mov
cmc
mov
push
sar
(bad)
jno
lods
movs
sbb
test
aas
sar
pop
in
add
out
sar
retf
imul
xchg
out
scas
mov
dec
dec
pop
xlat
jbe
inc
xor
xchg
fstp
add
pop
push
test
jge
xor
mov
mov
fmul
lock
mov
data16
mov
test
sub
pop
cmp
retf
test
popa
mov
into
fimul
xor
ins
pop
retf
sar
mov
jg
pop
inc
fcmovnu
pushfw
aaa
jo
test
clc
push
lock
inc
test
test
mov
push
out
mov
mov
push
add
mov
hlt
mov
xchg
mov
ror
or
mov
adc
ja
mov
ja
xlat
das
pop
add
ja
or
int
ins
iret
xchg
test
test
cwde
push
dec
mov
xchg
call
retf
jb
and
pop
sbb
or
mov
adc
jo
and
shr
test
popf
xchg
adc
jge
je
xchg
sbb
fwait
mov
mov
pop
and
dec
lahf
xchg
pop
mov
cmp
movs
sub
inc
mov
mov
aam
cli
daa
sbb
cmps
xlat
in
imul
iret
sub
xchg
aad
enter
std
xchg
push
fstp
xor
leave
cwde
push
stos
cld
mov
icebp
and
mov
jno
mov
fsubr
stos
loopne
cmp
hlt
fisttp
sub
xor
in
int
mov
dec
pop
sub
imul
dec
xor
nop
nop
dec
(bad)
out
pop
mov
cmc
add
in
call
push
lds
mov
sar
adc
xor
lock
scas
aaa
push
lods
jp
adc
sbb
mov
fwait
push
out
push
mov
mov
adc
scas
xchg
jo
mov
lods
repnz
addr16
xchg
mov
popa
inc
jns
pusha
imul
cmps
das
xor
xor
dec
cmc
test
jbe
lock
jmp
or
xchg
jecxz
or
adc
pop
sbb
loopne
mov
addr16
sbb
leave
mov
jnp
bound
mov
jge
push
bound
movs
cmp
push
xor
pop
pop
jl
sahf
movs
jno
adc
add
jne
sbb
jg
xchg
push
push
dec
or
jecxz
div
sbb
mov
cwde
push
sti
or
and
or
pop
mov
or
rol
fimul
in
inc
mov
cwde
nop
xor
stos
in
sbb
sub
cmp
repz
cmps
mov
and
push
retf
fadd
pop
stos
jmp
mov
add
fiadd
call
cmps
das
movs
addr16
cmp
push
xor
fst
sbb
cmp
and
aas
sub
rol
jl
std
adc
adc
fcmovnb
xchg
gs
call
ret
xor
not
jb
push
cmp
dec
pop
xchg
out
and
out
add
pop
inc
add
xchg
adc
mov
movs
xor
mov
or
pop
fdivr
int
jne
test
or
cmps
add
dec
pop
cmc
repz
int
adc
fcomp
add
push
fcom
or
pop
mov
mov
pop
inc
jae
imul
(bad)
ja
fwait
xchg
dec
inc
iret
pop
jo
sbb
stos
cmc
out
sub
lods
movs
loope
add
cmc
retf
xchg
adc
outs
push
fwait
or
call
jge
in
mov
test
mov
xor
and
and
push
cmp
jmp
dec
xor
fs
xlat
popf
aaa
push
jnp
adc
test
cmps
push
movs
inc
lahf
jg
or
mov
(bad)
loope
xlat
leave
xchg
fwait
aad
fist
seta
fisub
xor
dec
sbb
lods
xor
cmp
call
pop
jmp
jnp
hlt
sbb
bound
push
mov
sub
xlat
xchg
out
inc
xchg
jae
jbe
imul
call
xlat
jbe
rcr
push
retf
imul
in
xchg
cwde
xchg
jns
cmc
add
enter
fdivr
out
in
mov
sbb
xchg
dec
hlt
jmp
cmovg
ds
fsubr
lods
mov
mov
jl
ja
test
push
iret
push
retf
xchg
xor
fsubp
div
imul
sti
jne
psrld
aad
push
das
inc
xchg
adc
jmp
mov
iret
inc
xchg
inc
retf
dec
or
mov
clc
cmp
mov
lahf
daa
mov
cmp
dec
mov
scas
add
sub
scas
xor
lahf
aas
dec
adc
jmp
push
add
fnstenv
cld
sbb
rcr
mov
sub
sub
fs
mov
dec
test
lods
std
leave
adc
js
xchg
dec
sub
push
pop
retf
jnp
(bad)
xor
xor
lock
dec
icebp
push
inc
pop
lods
outs
cli
pop
test
pushf
test
cmp
fdivr
mov
les
push
and
xchg
mov
sar
loop
lds
scas
sbb
loope
ud1
or
out
pop
pop
int
push
or
or
loope
adc
lods
dec
fist
jo
cs
into
push
cmp
and
scas
lock
mov
adc
sub
add
pop
push
xchg
outs
add
dec
repz
cmc
lock
movs
in
bound
inc
popa
and
mov
movs
sbb
int
cmp
jns
sbb
shl
std
fisub
lahf
push
out
inc
pop
pop
cmp
hlt
inc
ins
cmc
and
push
xchg
push
fbstp
inc
aaa
push
and
mov
retf
daa
cmp
arpl
push
test
gs
test
dec
jae
fidivr
xchg
dec
push
jecxz
aad
pop
jmp
(bad)
stos
js
or
xor
(bad)
mov
ins
push
jmp
cwde
adc
dec
sbb
rol
adc
xchg
sbb
xchg
push
jecxz
xchg
and
mov
pop
fld
repnz
pop
mov
push
mov
mov
push
dec
icebp
sti
mov
add
push
jl
je
pop
push
jns
ret
ja
data16
and
retf
ds
bndstx
loop
pop
inc
mov
inc
in
mov
adc
or
call
cmp
pop
mov
sbb
fidiv
repz
cwde
add
cmp
mov
out
loope
in
ret
int3
sbb
jb
inc
jbe
push
adc
mov
pusha
xchg
dec
int
inc
pop
jle
retf
add
cmp
fmul
adc
fimul
pop
pop
add
ret
test
sti
push
xchg
scas
pop
xor
xor
push
xor
cmp
loop
xchg
ds
sub
push
sub
neg
mov
xor
repz
push
push
and
push
jg
jle
cld
cld
xchg
sub
ret
jbe
push
hlt
dec
xchg
jnp
cmps
aas
test
pop
movs
ins
repz
ror
pop
sbb
inc
div
bound
dec
fucomp
pop
xchg
push
sbb
loopne
sahf
and
add
(bad)
mov
jge
mov
and
movs
fild
dec
and
hlt
mov
popf
stos
cmp
xchg
aaa
cwde
mov
add
mov
dec
inc
stc
mov
cmp
inc
xchg
jns
inc
mov
mov
repz
inc
xchg
sub
ret
stos
cmp
adc
bound
xor
addr16
shl
ja
dec
jno
loop
test
shr
jmp
std
inc
xor
rcr
cwde
mov
loope
frstor
sbb
(bad)
fistp
stos
pop
push
jp
xor
cmp
or
imul
mov
pop
lahf
not
std
pop
int3
fwait
sbb
retf
xor
xchg
xchg
mov
jne
pop
cmp
sbb
or
xor
icebp
lods
repnz
xlat
sub
cmp
lds
adc
jl
(bad)
jmp
inc
test
jns
pop
jbe
pusha
or
ins
mov
sbb
dec
ins
dec
dec
imul
pop
or
(bad)
and
fsubr
lock
(bad)
int
sar
(bad)
mov
jge
jno
mov
dec
sub
js
in
or
xchg
pop
add
add
push
add
jns
jmp
dec
jnp
fstp
out
inc
adc
cmp
cwde
div
addr16
rcl
leave
pop
and
adc
cdq
mov
sub
(bad)
arpl
shr
mov
ror
jno
scas
mov
popa
push
pop
into
cmp
cli
dec
(bad)
int
fimul
xchg
mov
xor
ss
pop
push
dec
retf
repz
pop
and
sahf
push
push
(bad)
mov
out
mov
fcomp
mov
test
aaa
and
push
addr16
ret
pop
idiv
mov
pop
out
addr16
nop
rol
add
dec
dec
lahf
xchg
mov
cmp
cmp
sbb
inc
int
push
sti
rcr
test
push
inc
test
(bad)
dec
mov
xchg
jge
iret
push
mov
mov
and
inc
mov
adc
test
xor
add
jns
cmp
in
sbb
in
xchg
and
int
cmps
xor
dec
sub
lahf
xor
jb
(bad)
mov
sub
(bad)
call
xchg
add
pop
(bad)
fdiv
movs
push
mov
sbb
xchg
ins
inc
xor
add
pop
je
stos
shl
mov
jmp
mov
xlat
(bad)
ins
pushf
in
dec
adc
idiv
mov
xor
pop
sub
and
dec
push
cli
inc
inc
and
inc
pop
rcl
data16
adc
inc
cmps
inc
pop
fcomip
loop
jge
cmps
xchg
mov
mov
xor
in
int3
aam
or
inc
pop
in
aaa
imul
xor
cmp
ja
fdivr
in
push
xchg
pop
outs
data16
cli
sahf
push
aad
test
dec
xchg
mov
out
xchg
in
sub
jbe
dec
int3
js
div
jnp
nop
jmp
loop
add
push
movs
rcl
in
xor
adc
and
rcl
repnz
test
leave
sar
lea
sbb
mov
ret
push
push
push
(bad)
stc
js
and
rol
hlt
fadd
call
(bad)
pop
jmp
test
pusha
cdq
cdq
pop
jne
inc
mov
push
cwde
int
mov
jge
ret
fwait
shl
inc
xchg
test
ret
and
mov
outs
jb
mov
cld
mov
fsubr
or
add
adc
and
loopne
dec
dec
inc
inc
test
xor
inc
mov
lock
push
pop
jbe
loopne
lods
mov
sbb
mov
push
fdiv
pop
shr
sbb
mov
repz
xor
aad
ss
icebp
xor
out
(bad)
mov
sub
ror
stos
cli
dec
ds
scas
xchg
xchg
inc
push
cmps
pop
add
push
push
(bad)
sahf
mov
in
push
test
rcl
ja
mov
das
inc
jge
push
cmc
vfmaddss
and
xor
cmps
mov
mov
iret
out
fild
fstp
aas
add
retf
rcl
xchg
outs
push
mov
push
scas
mov
push
or
mov
cmp
mov
and
ds
push
mov
ret
mov
jecxz
or
dec
add
pop
sub
test
sar
frstpm(287
fs
test
enter
fdiv
popa
inc
jge
cmc
pop
popa
cli
cmp
xor
xchg
mov
cmp
pop
xchg
sbb
jl
cmps
outs
and
arpl
fimul
add
mov
cdq
sar
xchg
push
loop
retf
shr
or
or
cmp
adc
xchg
inc
cmc
test
xchg
xor
je
outs
sbb
pop
sub
aas
jmp
xor
fst
lar
stos
xor
xchg
xor
push
jb
xchg
call
cmp
xchg
aam
or
sbb
jmp
xchg
xchg
pop
inc
in
test
cdq
jg
ins
push
mov
les
sub
aam
shl
adc
loope
jae
leave
or
jno
jae
cwde
adc
mov
int
jecxz
imul
mov
mov
push
push
mov
push
jg
test
add
inc
inc
xor
(bad)
adc
mov
stc
adc
mov
ins
sbb
push
call
stos
sahf
xchg
inc
mov
xor
movd
cmps
push
cmps
retf
pop
mov
and
adc
add
aaa
retf
test
inc
js
add
mov
mov
aaa
fild
stc
leave
cwde
or
adc
adc
mov
leave
mov
jmp
nop
dec
stc
es
sbb
clc
and
jl
or
pop
aas
fwait
xchg
push
cmp
adc
fs
mov
or
xor
inc
pop
sub
push
jge
xlat
movs
lock
cmc
xor
sti
icebp
jp
dec
test
push
retf
stos
aam
push
push
adc
test
fdiv
mov
mov
push
aam
ins
push
jb
jmp
aaa
test
dec
aas
xor
cmp
cmc
jno
xor
push
jp
stc
(bad)
int
outs
inc
js
jb
add
mov
pop
popa
mov
xor
in
and
out
xchg
inc
pusha
loope
stos
mov
mov
int3
jo
or
movs
push
mov
sar
adc
nop
jecxz
popa
test
pop
or
sub
jmp
dec
dec
cmp
xchg
sub
loope
in
lds
hlt
(bad)
int
lds
jp
jecxz
mov
cmps
sbb
mov
popa
mov
sub
inc
stos
test
mov
(bad)
sbb
std
sbb
sbb
call
sub
std
pop
add
outs
bound
mov
jmp
xchg
fstp
hlt
repz
adc
std
mov
push
inc
test
out
call
fnstcw
popf
rcl
stc
mov
(bad)
jns
sahf
lahf
push
mov
sub
mov
add
into
rcl
mov
rcl
push
loopne
mov
les
in
xchg
add
(bad)
das
pop
sub
ds
xor
inc
pop
int
mov
mov
in
(bad)
retf
pop
inc
xor
sbb
jns
xchg
mov
je
ss
push
jl
xor
ins
xor
leave
addr16
push
pop
inc
int3
pop
in
mov
in
push
add
arpl
fadd
inc
jg
add
dec
mov
shl
lock
bound
adc
xor
out
aas
nop
sub
pop
(bad)
test
push
outs
xor
je
sti
add
popa
or
jmp
and
cli
out
int
stc
dec
push
ins
leave
pop
sbb
mov
pusha
xchg
nop
pop
fldcw
cld
mov
loop
outs
icebp
ss
jae
test
test
stos
xchg
movs
rcr
cmp
jo
(bad)
into
add
imul
fst
outs
pop
seta
imul
jns
pop
and
(bad)
xchg
mov
and
pop
xor
sbb
rcl
dec
pop
sbb
sbb
mov
cmp
fucomip
mov
sti
mov
mov
pop
loopne
sub
sbb
xlat
clc
mov
retf
in
and
nop
lods
jmp
push
shl
mov
mov
cmp
cmp
mov
fwait
loope
aam
cmp
fadd
lds
push
mov
cld
jae
pop
and
dec
push
xor
sbb
js
cld
fcom
enter
xchg
sahf
clc
add
aam
test
push
loop
sar
cmp
sbb
lahf
mov
rcr
push
jmp
mov
sbb
mov
in
pusha
cmp
cli
out
sub
adc
neg
sbb
fstp
fsub
jp
adc
inc
push
(bad)
cld
pop
fstp
movs
pop
cld
dec
pop
xchg
cmps
pop
xchg
dec
add
lea
mov
lahf
fst
repnz
jmp
loope
add
mov
popf
and
add
pop
sti
mov
inc
sbb
pop
ds
ror
in
(bad)
daa
lock
movs
cli
jl
clc
inc
and
addr16
scas
sub
jno
call
in
inc
stc
cmp
push
inc
test
(bad)
pop
jne
fidiv
jns
lea
and
inc
xchg
sub
or
cli
aad
dec
sbb
cdq
adc
in
std
add
and
(bad)
mov
out
cmp
pusha
fist
ins
cwde
cmc
sub
or
lock
sub
fwait
and
int3
jae
std
mov
push
and
push
pusha
cld
inc
arpl
sub
xchg
loopne
mov
das
sub
movs
or
nop
(bad)
loopne
cmp
popa
sub
adc
daa
pop
push
add
faddp
and
and
adc
jmp
lahf
and
das
lea
test
and
pop
pop
push
add
mov
mov
push
pop
sub
gs
jmp
(bad)
lock
xchg
test
(bad)
and
inc
mov
adc
into
sbb
sub
cmp
lock
jno
shl
cwde
test
sub
mov
retf
test
mov
lea
and
scas
jns
sub
loop
loopne
std
and
push
xchg
rcl
pushf
mov
pop
pop
shl
sub
test
nop
xchg
outs
cmp
aas
mov
and
xor
adc
xchg
mov
(bad)
leave
fwait
test
test
push
xchg
out
call
fistp
fidivr
test
fs
setl
and
xlat
or
data16
movs
test
inc
mov
dec
arpl
cmp
in
adc
les
jae
lahf
pop
xchg
stos
clc
repz
leave
int3
movs
movs
add
(bad)
in
sbb
or
xlat
xor
jmp
outs
adc
and
lods
sti
outs
stc
mov
jmp
aad
stos
add
out
imul
dec
mov
or
ss
or
inc
imul
mov
inc
xchg
fcomip
push
sub
das
shl
pop
sbb
push
lds
push
fistp
mov
daa
call
or
ja
(bad)
or
jno
cli
loopne
xchg
and
jp
or
aas
sub
lahf
inc
loopne
repnz
ret
(bad)
jp
sbb
cwde
cmps
add
cdq
retf
inc
(bad)
dec
pop
cmp
rcl
test
rcr
inc
ja
push
or
push
sahf
or
sub
shl
xor
add
loop
sbb
add
arpl
inc
ds
or
repnz
popf
leave
adc
popa
loope
add
cmc
and
les
pushf
ret
jno
push
repz
lahf
rcl
and
mov
pusha
sti
cmp
cmp
pop
inc
xchg
ins
jecxz
push
sub
cmp
jecxz
sub
sub
popa
mov
ja
jl
adc
add
adc
or
int3
bound
ins
jecxz
fwait
mov
add
retf
js
mov
icebp
(bad)
leave
add
cmp
sub
ins
scas
outs
lea
out
jne
aaa
mov
dec
pop
or
sbb
jecxz
and
sub
test
dec
jo
popf
aad
(bad)
and
(bad)
sbb
jg
repnz
cwde
popf
sub
cmp
ret
das
cwde
add
xchg
push
gs
mov
mov
pop
mov
mov
std
ds
sub
imul
cmp
mov
test
out
aam
jge
repnz
xor
mov
ror
sahf
fdivp
nop
sub
dec
call
dec
dec
jno
jb
lods
mov
out
outs
adc
jecxz
call
xor
xor
and
jno
popf
es
sbb
(bad)
mov
jle
fisttp
lea
xchg
inc
aad
dec
push
retf
jg
pop
call
pop
add
xchg
xor
leave
cld
sub
loope
pop
and
and
adc
repnz
dec
add
test
test
inc
sub
sub
dec
cld
jle
sti
jmp
aaa
pop
bound
xor
inc
ret
ffreep
dec
or
not
fsubr
shl
inc
adc
xchg
inc
icebp
adc
outs
sub
mov
sub
push
into
test
sub
xor
dec
sub
mov
ja
adc
in
pushf
pop
lods
jg
or
fs
xor
xlat
jge
xchg
ret
jo
push
add
add
mov
nop
retf
xchg
xor
jnp
xor
daa
mov
ins
pop
loopne
mov
lahf
pop
cmp
dec
pop
fst
jmp
jecxz
add
cmc
cmp
call
cmps
fs
cmp
pusha
jl
sar
retf
test
xchg
or
pop
mov
cmp
in
pop
xchg
sbb
or
nop
out
jmp
sbb
mov
jmp
xchg
inc
jns
xchg
push
dec
push
jns
push
and
iret
sbb
imul
lds
cwde
outs
jo
retf
repz
and
mov
jge
fdivr
addr16
jg
hlt
mov
scas
je
loope
xor
ror
fwait
dec
mov
bound
jmp
jecxz
sbb
or
mov
push
dec
pop
retf
push
push
lods
sbb
fnstenv
mov
les
popf
adc
xchg
pop
pop
out
or
stc
jnp
cdq
cmp
jns
xor
sbb
retf
jne
inc
in
xor
mov
test
and
je
inc
pop
outs
mov
add
add
adc
pop
inc
xchg
cdq
call
js
mov
mov
(bad)
sub
mov
adc
pop
mov
leave
lock
sbb
cmp
jl
inc
dec
cwde
pushf
pop
xor
cli
popa
or
cmp
jl
pop
or
push
loope
into
out
in
test
mov
loop
in
in
int
dec
adc
(bad)
call
dec
ret
jne
adc
pop
jb
aas
sub
test
cdq
je
and
sub
and
adc
test
push
mov
aas
cmp
ds
mov
fwait
push
movd
outs
inc
xchg
dec
or
push
sahf
xor
sbb
add
or
scas
push
cmps
mov
test
icebp
js
sahf
call
mov
inc
daa
cdq
adc
idiv
add
arpl
or
add
pop
cmp
imul
jne
sub
push
sar
push
daa
cmp
xor
jb
sar
sbb
cs
dec
jmp
jo
lahf
pop
fsub
psraw
ja
bound
adc
or
mov
jmp
fldpi
xchg
test
xchg
jno
mov
dec
push
jmp
bswap
push
shr
push
shl
add
mov
mov
push
sahf
inc
retf
xchg
mov
push
sub
lds
push
cmps
cmp
push
sbb
and
cs
retf
mov
cmp
dec
addr16
aas
mov
or
js
pop
jecxz
and
outs
jbe
pop
dec
and
mov
ror
cmps
jecxz
or
mov
xchg
aam
jnp
sub
add
pop
pop
push
or
lahf
sbb
pop
into
add
mov
pop
and
ficomp
mov
test
ins
in
pop
mov
mov
push
jo
xor
fwait
pop
fimul
mov
jmp
add
enter
sub
jne
enter
mov
xchg
adc
arpl
add
lock
dec
and
and
push
mov
mov
ret
cmp
xchg
loop
outs
mov
call
sub
ins
cdq
in
imul
imul
pop
jp
popf
jae
rol
sbb
sbb
xchg
inc
test
cmp
jo
pop
mov
in
sbb
add
outs
fmul
mov
out
inc
lods
(bad)
pop
in
pop
or
pop
test
push
retf
ret
cmp
fst
xchg
mov
xor
fild
push
cdq
or
lds
mov
jmp
mov
xchg
xchg
jb
dec
push
inc
lods
dec
sub
push
(bad)
es
adc
or
mov
aam
enter
shl
pop
xchg
cs
out
push
push
dec
mov
shl
pop
mov
and
pop
mov
mov
mov
xor
hlt
and
jno
and
sbb
adc
sub
cmp
(bad)
inc
stos
ret
cmps
cmp
or
mov
call
lock
inc
sahf
in
loop
stos
push
jl
(bad)
sub
jno
and
xor
pop
xchg
mov
test
fs
xchg
mov
mov
and
xor
cmps
scas
pusha
popa
test
or
aam
pop
(bad)
jno
call
jle
xor
scas
and
jnp
iret
popa
mov
pop
or
jle
sub
jge
push
sbb
pop
sbb
ror
out
test
rol
ja
mov
(bad)
and
xor
cmp
xchg
push
sbb
sub
call
test
clc
add
ds
ins
sbb
mov
test
int
push
int3
jb
dec
outs
add
mov
or
sahf
xchg
adc
addr16
fldcw
or
add
push
das
push
xor
jg
xlat
dec
sub
scas
fs
into
dec
cdq
xlat
push
popa
leave
cmp
adc
es
push
repnz
nop
shr
mov
test
imul
jb
stos
jmp
push
(bad)
icebp
gs
sbb
fwait
mov
adc
leave
hlt
cmp
pop
mov
push
xchg
cli
or
daa
push
xchg
and
mov
sub
jg
cmp
push
sub
xchg
das
imul
(bad)
adc
xchg
inc
leave
(bad)
pop
sbb
sub
pusha
dec
dec
dec
mov
adc
push
rol
test
aad
cmp
xchg
(bad)
mov
test
inc
mov
pop
daa
xor
mov
mov
adc
movs
das
sar
xchg
xor
cmp
retf
adc
mov
push
push
mov
pop
fsubr
jno
pop
outs
add
outs
cs
pop
es
xchg
lods
adc
stos
scas
xchg
xchg
ret
cmp
pop
dec
(bad)
or
pop
(bad)
and
cmp
fld
pop
stos
(bad)
je
ret
jns
imul
frstor
fs
aas
(bad)
mov
xor
fistp
mov
ja
pop
in
push
push
stos
rcl
lock
movs
mov
jmp
push
inc
pop
jno
lods
cmp
out
jp
or
add
aad
loop
jbe
retw
lock
das
sar
and
ins
add
or
push
fwait
in
pop
push
and
or
(bad)
mov
jo
nop
or
movs
jmp
mov
lods
sub
call
sub
loopne
push
mov
jbe
push
mov
push
movs
shl
pop
and
xchg
xchg
sub
add
scas
lea
push
jmp
stc
push
sub
scas
pushf
xor
pop
jg
add
(bad)
jb
div
cmps
or
sti
ins
push
rcl
nop
std
mov
jp
aaa
adc
push
test
mov
and
sahf
cwde
hlt
arpl
out
inc
loopne
std
inc
cmp
pop
jmp
dec
mov
pop
push
adc
add
adc
and
dec
inc
pop
xor
mov
mov
push
xor
jmp
dec
adc
aaa
add
ins
mov
mov
mov
sub
std
daa
cwde
inc
xor
clc
fsub
fidivr
and
fs
lock
jge
push
cmp
mov
mov
pop
fild
mul
sub
aas
ds
jbe
mov
scas
mov
pop
sar
ins
pop
rol
xchg
xor
and
jp
xlat
ja
imul
(bad)
adc
loopne
jae
pop
scas
aad
jmp
push
fbstp
sar
leave
movs
jl
pushf
adc
stos
mov
leave
inc
retf
adc
fnstcw
adc
loop
in
add
loope
or
loop
fld
gs
add
nop
cld
xchg
jecxz
pop
xchg
outs
scas
es
push
ins
aaa
mov
fiadd
mov
out
xchg
ficom
add
jp
or
ss
xchg
xchg
xor
retf
push
out
sar
mov
aad
jg
out
arpl
in
jno
cdq
and
and
dec
adc
loop
mov
xchg
sahf
adc
sbb
pop
jmp
add
fcmovne
dec
and
movs
sub
ins
js
and
cmp
cmc
leave
adc
loopne
icebp
je
outs
inc
lods
shl
add
outs
rcl
xor
cmp
adc
jne
pushf
test
mov
or
clc
adc
sub
push
test
out
sub
cld
pushf
into
cmps
dec
(bad)
lods
aaa
mov
sub
mov
xchg
cli
cmps
scas
pop
jmp
sbb
push
or
mov
pop
cmp
mov
jg
lds
int
fs
jl
push
nop
push
js
sub
add
in
mov
test
sbb
repz
fs
pop
sahf
jmp
jge
pushf
sbb
fwait
mul
push
outs
stos
shr
mov
sbb
cs
jmp
movs
fiadd
stc
pop
test
mov
sub
or
loopne
fwait
ds
scas
jno
sub
out
cmc
cmps
loopne
ror
scas
xor
or
sahf
xlat
mov
nop
jb
adc
jns
mov
shl
not
ins
mov
hlt
push
fcomi
jmp
cs
(bad)
mov
ret
mov
enter
test
adc
mov
or
mov
nop
inc
pop
sub
jl
ss
and
cmp
arpl
inc
jl
outs
add
fmul
dec
cmp
in
les
fistp
movs
inc
sbb
ins
out
lods
dec
xor
lods
jmp
push
add
cli
push
repnz
dec
nop
mov
adc
push
xor
jg
xchg
sbb
fld
out
jmp
dec
ret
fs
shr
rcr
and
add
push
fmul
mov
cli
addr16
loopne
repz
sbb
sbb
sahf
bound
je
fidivr
pop
dec
fstp
test
ins
dec
call
pmuludq
popa
shl
sub
mov
jne
sahf
dec
push
rcl
dec
or
or
push
adc
out
test
xchg
mov
dec
nop
rcr
cli
stos
addps
dec
inc
and
push
sub
dec
mov
or
xor
mov
jle
mov
imul
xlat
dec
mov
xchg
sbb
mov
(bad)
pop
and
mov
jno
or
xor
and
pop
mov
cmc
(bad)
and
push
es
adc
lods
jnp
cdq
(bad)
in
dec
pop
xchg
jp
inc
in
retf
movs
xchg
fdiv
adc
mov
xlat
xchg
push
fild
leave
lods
inc
imul
jg
jg
xchg
repz
pop
xor
mov
push
sub
jp
or
push
pop
outs
inc
mov
push
mov
jns
scas
neg
jecxz
fs
inc
mov
xchg
inc
imul
adc
ja
add
fwait
adc
fxch
je
add
ficom
xor
sbb
push
cmp
sbb
xor
pop
or
lea
call
(bad)
cld
jp
or
add
int3
xor
mov
test
cmp
push
xchg
gs
and
sbb
xchg
xor
scas
mov
pop
and
repnz
outs
pop
or
pop
test
shl
or
pop
dec
push
jne
test
cld
lahf
jae
add
mov
pop
push
mov
retf
rcl
pop
je
xchg
pushf
test
adc
clc
push
jbe
inc
pop
int3
mov
out
sub
push
sub
outs
fwait
push
jge
ret
cmc
(bad)
xchg
enter
imul
sub
push
cmc
gs
xchg
jo
sbb
ins
xchg
ins
mul
shl
pop
and
fnstenv
sub
push
xor
xor
aas
pop
out
call
popa
mov
jnp
and
pop
sub
rol
mov
mov
and
je
lods
(bad)
jmp
ffree
cdq
repnz
lea
outs
fwait
outs
dec
jo
sti
in
icebp
mov
cdq
dec
call
stos
sub
es
pop
cmp
mov
sti
lods
lods
mov
scas
dec
or
pop
xor
sub
cmp
inc
xlat
and
in
popa
daa
clc
adc
cmps
jbe
or
mov
jecxz
jl
test
neg
test
js
mov
lds
aad
fs
into
mul
pop
rcl
mov
jge
(bad)
xor
pop
inc
nop
(bad)
pop
mov
pop
movs
push
mov
mul
or
mov
jp
xchg
xchg
(bad)
cli
bound
mov
sbb
hlt
cmp
jne
dec
xor
cs
sar
push
push
xor
mov
movs
in
je
xchg
cmp
sbb
cdq
nop
call
test
loop
mov
dec
and
in
xchg
outs
xor
stos
and
(bad)
jne
js
aas
mov
cmp
xchg
repz
pop
movs
xchg
cmp
les
mov
adc
pop
cmps
push
xchg
addr16
stos
xor
jmp
aad
iret
mov
stos
enter
retf
cmp
xchg
stos
xchg
or
inc
and
call
push
pop
push
xor
fidiv
add
dec
pop
push
popa
fisttp
lock
aam
js
mov
dec
in
push
addr16
sub
mov
cmps
sbb
out
imul
cwde
push
gs
ficomp
ror
pop
mov
test
pop
das
jnp
mov
xor
gs
scas
push
xchg
push
inc
movs
jg
xor
fimul
inc
jle
mov
in
shl
jl
retf
idiv
xor
mov
xor
jmp
pop
sub
fcomip
add
mov
gs
add
pop
inc
ret
mov
inc
outs
outs
sbb
jmp
lahf
iret
(bad)
repz
push
pop
pop
ficom
outs
push
int
int3
ror
push
clc
add
movhps
jl
cmp
mov
xor
push
(bad)
ffree
dec
cmp
arpl
lock
or
mov
xor
mov
retf
leave
dec
mov
retf
sub
inc
cs
xchg
stc
pop
inc
push
or
fs
jnp
push
mov
test
add
scas
jle
sbb
jge
xor
(bad)
add
cmp
(bad)
retf
mov
loop
mov
test
and
xchg
and
add
je
xor
popa
ins
sub
or
jmp
xchg
push
fcomp
push
xor
fdivr
in
add
add
mov
stos
mov
mov
rcl
ficom
lods
xchg
mov
test
sub
dec
push
push
sub
add
cmp
mov
retf
adc
sub
shl
cmp
dec
cli
loopne
push
ss
fsubr
fmul
ins
movs
add
inc
sub
movs
in
xor
(bad)
jb
ins
rcr
mov
and
xor
movs
pop
push
pop
outs
add
xchg
or
scas
push
cmps
mov
dec
(bad)
push
outs
cmp
mov
clc
fwait
inc
mov
fild
nop
jnp
int3
and
ds
xor
hlt
data16
addr16
out
xor
icebp
add
dec
fs
push
fild
jmp
mov
popa
jle
std
push
lock
scas
mov
lock
xor
fnstsw
dec
test
sub
popf
dec
dec
jae
repnz
(bad)
ja
loopne
(bad)
inc
mov
in
shl
inc
shl
dec
cld
mov
inc
stos
dec
mov
(bad)
aam
xchg
cmp
fist
pop
xchg
mov
test
je
sub
adc
mov
je
cmp
repnz
adc
test
out
xchg
push
cmps
rcl
std
add
fstp
out
mov
sub
sbb
scas
aam
rol
arpl
adc
inc
or
loopne
repnz
or
xchg
clc
neg
ret
mov
aaa
jg
add
inc
cmps
inc
pop
bound
mov
inc
out
sbb
mov
or
movs
stos
lock
loope
cmp
cmps
cmc
mov
xor
add
mov
jo
pop
or
pop
ss
mov
mov
(bad)
fld
sub
xor
scas
add
mov
shr
push
out
out
pop
jne
push
push
nop
(bad)
sub
xor
fdivr
outs
out
or
mov
fs
add
int3
xchg
lods
lods
pop
mov
fiadd
mov
cwde
xor
cmp
push
nop
lods
push
mov
iret
rol
test
dec
jnp
xchg
std
(bad)
jge
out
imul
rol
jmp
pop
mov
or
add
repnz
mov
pop
push
div
pop
sub
pop
in
mov
retf
inc
push
push
adc
mov
fucomi
loop
test
push
xor
jne
dec
dec
xor
outs
mov
test
jns
sbb
icebp
cmps
clc
lea
inc
or
pop
jge
sbb
ja
mov
mov
cmps
retf
add
jp
in
fcmovnb
jb
add
add
pusha
cmps
adc
push
fwait
mov
clc
inc
adc
pinsrw
ss
lock
not
mov
inc
es
(bad)
test
ins
repz
sahf
rcl
push
mov
dec
mov
push
scas
outs
sub
dec
int
cmp
jns
loopne
pop
popa
sub
hlt
movs
aam
xchg
scas
aas
fdivr
add
adc
arpl
stos
shr
cmp
je
mov
imul
aad
shl
xchg
xor
es
popf
mov
sub
aam
mov
(bad)
push
js
mov
out
mov
aam
mov
sub
pop
xchg
mov
pop
mov
stc
sbb
pop
mov
sti
inc
loopne
fprem1
or
cmps
jns
std
mov
jnp
dec
mov
or
xor
into
mov
repz
out
cmps
adc
add
mov
adc
aad
jnp
xor
sub
xchg
pushf
mov
inc
inc
jmp
adc
ins
idiv
(bad)
int3
cdq
int3
cmp
push
xchg
adc
mov
addr16
mov
lahf
in
add
pop
inc
cmp
push
push
dec
int3
pop
cmp
(bad)
jae
pop
jno
jno
push
fisttp
add
enter
xor
scas
adc
jb
test
outs
push
xor
jmp
xchg
sbb
mov
into
sbb
lods
and
push
outs
sub
add
xor
xor
test
pusha
imul
mov
dec
and
inc
outs
frstor
jbe
(bad)
ds
ins
add
cwde
(bad)
xor
call
push
out
xor
mov
adc
lods
adc
or
and
xor
das
mov
xchg
fidiv
push
add
cmp
out
cmps
arpl
push
xchg
out
inc
dec
mov
aam
inc
add
in
xchg
imul
inc
mov
ins
sbb
xor
nop
inc
or
scas
adc
mov
sub
icebp
pop
data16
sbb
lds
or
adc
dec
mov
push
test
xchg
cli
jb
or
mov
or
and
ret
and
jns
aas
neg
outs
in
nop
dec
cs
scas
(bad)
dec
ins
xchg
xchg
cmp
mov
pop
jbe
push
push
mov
jle
sub
idiv
iret
pop
adc
repnz
xor
das
bound
add
outs
mov
xchg
mov
repz
xor
xor
aas
rcr
hlt
das
cs
daa
push
mov
lea
xor
sub
cmp
jg
jns
test
mov
and
mov
or
cmp
cmp
cmc
adc
leave
mov
xchg
inc
sbb
test
jmp
fsubr
xor
adc
mov
call
push
jmp
out
icebp
push
sub
sbb
dec
ror
cs
fist
je
es
and
call
aaa
dec
stos
fsubp
loopne
ja
fldenv
movs
inc
inc
retf
cmp
push
pop
inc
and
xor
sar
mov
sub
data16
jmp
jge
jo
mov
add
xchg
sahf
fbld
xchg
icebp
xor
nop
cmp
pop
outs
push
jecxz
enter
fbld
xor
setl
jns
xchg
ds
push
and
inc
fdivr
push
push
fucom
jo
pop
stos
ret
lock
int
adc
fs
mov
enter
or
sbb
fdivr
and
and
sbb
inc
cs
movs
xor
dec
sbb
into
mov
pop
call
mov
loop
push
push
inc
mov
in
add
sbb
nop
push
mov
shl
popf
(bad)
cmp
popf
fs
add
jo
mov
mov
pop
pop
cmps
jg
adc
cli
adc
jns
push
push
jne
push
jne
repnz
mov
sub
popf
jnp
or
movs
jne
xor
jecxz
and
into
mov
cld
pop
sti
cmc
cmps
psrlw
repnz
dec
sbb
jo
je
adc
pop
xor
cmp
mov
push
cmc
or
cwde
fwait
xor
cmp
sbb
js
sbb
lds
dec
inc
nop
push
adc
jmp
jg
je
test
xchg
ja
mov
push
not
xor
and
(bad)
das
inc
jle
sbb
jg
rol
mov
leave
div
dec
aaa
ja
or
pop
mov
jno
lock
ret
xchg
lock
mov
mov
je
cld
rol
test
mov
or
cli
das
mov
js
pop
adc
push
sub
shr
and
clc
xchg
pop
mov
jmp
loop
shr
(bad)
sahf
xchg
mov
ds
and
sbb
(bad)
cmp
inc
vmread
sbb
(bad)
cmp
fisubr
je
lods
stos
lds
mov
lock
fst
xor
clc
es
fstp
xor
dec
imul
xor
xchg
les
shl
loop
repz
and
lods
pop
mov
xor
push
stc
(bad)
int3
push
pop
cld
push
shl
add
hlt
and
stos
pop
push
test
std
cmps
cmp
push
push
xlat
mov
xchg
or
mov
(bad)
jl
xor
cmps
mov
aad
test
fcmovu
data16
popa
in
lea
push
stos
sbb
ss
inc
fmul
jg
out
and
(bad)
sub
xchg
dec
rol
dec
(bad)
lahf
bound
cmc
xor
out
popa
leave
jnp
repnz
inc
adc
sbb
xchg
push
in
pop
jl
pop
cli
mov
mov
mov
xor
xchg
lds
add
fistp
scas
pop
not
std
xor
dec
das
mov
inc
push
cmp
cmp
push
adc
and
push
mov
mov
mov
gs
jp
inc
or
jmp
inc
cli
xor
mov
popa
cmp
je
xchg
mov
pop
cmps
and
lock
jns
rcl
push
popf
icebp
sbb
js
sub
shl
stc
fisttp
mov
push
push
inc
push
add
mov
pusha
jbe
fsub
jge
add
cmp
arpl
(bad)
inc
inc
jp
cmp
sub
inc
loop
sbb
ins
sub
mov
dec
dec
mov
push
mov
xchg
add
mov
mov
cmp
add
aas
shl
adc
push
hlt
(bad)
sahf
mov
je
add
adc
jp
ins
add
xchg
mov
cmp
inc
das
mov
xlat
add
div
fisttp
mov
movs
std
fisttp
iret
jecxz
aas
test
and
mov
push
fnsave
adc
std
(bad)
push
jmp
fcom
into
jg
rcl
mov
pushf
push
jmp
add
loop
enter
adc
inc
in
mov
fistp
cmps
movs
out
jbe
pop
and
(bad)
mov
fidiv
test
(bad)
pop
stc
enter
sahf
adc
or
cli
jb
or
loope
mov
pop
xcrypt-cbc
cmps
push
xchg
call
cmps
das
jno
xchg
(bad)
xchg
inc
jns
xor
push
mov
cmps
fist
xchg
std
adc
outs
sbb
je
fidivr
arpl
clc
jmp
lods
jns
mov
movs
leave
addr16
push
mov
fisubr
mov
ret
mov
mov
mov
ja
out
out
mov
(bad)
mov
je
out
pusha
or
lea
into
lahf
xor
pop
out
jmp
fs
aaa
and
pop
sub
and
(bad)
cmp
mov
sbb
ret
pop
sub
ss
aaa
add
shr
push
push
jne
pop
push
sub
pop
js
cmps
(bad)
cld
add
test
mov
std
xor
scas
adc
pop
cmc
sub
mov
mov
jns
push
and
inc
jns
and
pop
ret
sub
out
les
mov
cmps
cmc
repnz
test
repz
outs
cld
push
ja
mov
mov
inc
call
fidiv
bound
cwde
jne
call
aas
dec
sbb
sahf
out
icebp
inc
mov
xchg
push
ret
xchg
aas
pop
jmp
mov
in
mov
out
(bad)
cmps
nop
mov
int3
xchg
test
cmp
pop
push
into
mov
(bad)
ss
xor
fs
cmp
ret
ds
data16
sub
movs
xchg
adc
(bad)
mov
stc
inc
popf
mov
int
rol
test
push
lods
sub
and
call
mov
(bad)
outs
movs
outs
iret
jb
lods
hlt
pop
jnp
fs
jmp
cmps
sbb
in
jnp
in
mov
xchg
add
push
call
inc
inc
pop
out
les
push
xor
pushf
loopne
fiadd
ret
inc
idiv
enter
nop
ja
cmp
movaps
sub
fwait
sahf
jae
or
loopne
loope
dec
push
inc
mov
pushf
add
(bad)
test
mov
enter
loop
or
aaa
cmps
mov
cld
xor
push
stos
push
dec
jns
cmps
enter
adc
ds
int
outs
adc
bsf
and
cmps
retf
xor
test
aas
stc
(bad)
adc
xlat
test
hlt
inc
lahf
enter
xor
xchg
hlt
test
dec
mov
mov
add
push
bound
jne
push
cmp
lea
daa
rol
cmp
dec
(bad)
out
les
(bad)
cmp
inc
lds
dec
dec
mov
inc
xor
jle
dec
add
test
js
fcmovnbe
xlat
push
mov
(bad)
scas
les
fbld
mov
mov
push
loop
stos
mov
cld
sahf
inc
push
push
lahf
dec
int3
lahf
test
addr16
hlt
dec
lods
cwde
and
cmp
stos
loop
dec
stc
sar
aaa
xchg
bound
movs
mov
push
std
dec
jbe
cld
push
pop
mov
fist
and
push
sub
dec
and
mov
ja
jg
mov
inc
pop
push
mov
test
aas
fisub
das
sbb
jae
mov
mov
es
(bad)
outs
hlt
jg
cdq
cmc
into
pop
ja
aad
mov
lock
test
adc
xor
test
pop
mov
or
dec
mov
jmp
xlat
jb
xor
or
into
pop
rcr
push
xchg
(bad)
pop
fidiv
xchg
xlat
push
inc
mov
mov
pop
jg
and
push
test
sub
nop
ds
mov
mov
bound
fidiv
sbb
in
fwait
jo
hlt
mov
jns
(bad)
or
jg
cmp
mov
mov
inc
inc
les
ds
push
pop
sub
jno
shl
call
out
sbb
or
imul
(bad)
std
adc
jnp
rcr
fs
scas
out
and
mov
loopne
(bad)
imul
jp
xchg
sti
sub
in
jae
mov
iret
mov
sti
dec
bound
lahf
stos
pop
cmp
fs
ret
out
sub
lock
adc
add
stc
pop
push
jae
aaa
pop
xchg
jg
sub
aad
pop
and
dec
pop
aaa
je
jp
pushf
cmps
cmp
pusha
xchg
add
mov
mov
mov
scas
jp
xchg
pop
mov
add
fisttp
iret
mov
xor
ficomp
in
pop
sbb
in
mov
dec
out
adc
arpl
jnp
rcr
and
call
out
stos
js
dec
mov
adc
inc
cmp
jmp
mov
cdq
cmc
jno
and
(bad)
dec
lahf
pop
mov
adc
lea
iret
call
pop
cmp
mov
mov
dec
sub
mov
jne
ret
mov
add
mov
mov
imul
retf
mov
mov
les
mov
mov
out
imul
push
(bad)
pusha
mov
das
push
xchg
sub
sub
scas
imul
je
fmul
push
mov
jae
loope
jae
aas
add
fwait
aas
mov
or
jne
jo
xchg
call
sbb
ret
or
add
fdiv
add
jmp
hlt
aas
and
cwde
push
push
xor
shl
cld
pop
pop
sub
mov
sbb
mov
inc
fcmovu
mov
xchg
jns
out
jb
out
dec
or
jge
das
and
pop
lods
cli
shl
scas
sti
pusha
add
test
shl
push
push
(bad)
jae
mov
popa
iret
cmps
loopne
xchg
sub
outs
mov
and
mov
sti
aad
outs
retf
sub
aad
outs
sub
int3
jge
scas
or
pusha
xchg
test
aad
shl
dec
mov
stos
sbb
scas
pop
fnstcw
jge
dec
mov
shl
outs
mov
into
bound
stos
div
repz
mov
or
push
pop
bound
inc
loope
loop
adc
pop
xchg
xor
out
xor
adc
mov
das
jae
adc
(bad)
int3
loope
adc
aas
and
add
mov
fistp
ja
mov
in
xchg
ja
cli
adc
call
xchg
out
xchg
cmps
xor
repnz
repz
jnp
enter
pop
and
scas
mov
call
lods
and
loopne
mov
and
ss
jo
sbb
jle
push
outs
mov
adc
push
leave
inc
dec
and
pushf
into
mov
aam
fwait
or
cmp
jecxz
jmp
(bad)
sbb
add
xor
dec
push
mov
jmp
sbb
or
and
icebp
mov
mov
jno
cmp
inc
or
(bad)
mov
movs
pop
jge
jmp
mov
in
fwait
ror
sbb
push
jo
inc
mov
addr16
mov
(bad)
jle
mov
dec
ss
pop
pop
pop
stos
enter
hlt
jbe
dec
pop
xchg
and
sub
(bad)
sbb
daa
mov
mov
mov
sub
sub
outs
sahf
icebp
jb
pushf
sub
sbb
mov
sahf
jl
mov
jmp
sub
test
mov
jge
cmp
out
push
cmps
(bad)
loopne
out
aad
xchg
scas
fcomp
lods
cmp
int3
in
sub
or
or
fidivr
test
xor
repz
xor
retf
imul
jno
mov
push
jmp
inc
push
cmps
lea
add
or
mov
mov
ficomp
int
js
mov
xlat
sub
ins
std
fcom
mov
jle
sahf
and
in
outs
xchg
je
dec
ds
fisubr
add
fild
out
mov
iret
loop
push
ror
cmp
sub
adc
dec
sub
sar
(bad)
sub
stos
jae
loop
retf
dec
mov
mov
(bad)
arpl
pushf
popf
and
mov
cmp
ficomp
or
fwait
xor
adc
sub
(bad)
shr
mov
ror
mov
xchg
sbb
lahf
adc
push
fsub
mov
adc
cmc
xor
iret
in
dec
xor
add
lods
cmp
fild
in
jmp
clc
sar
inc
dec
ficom
sahf
cdq
in
ror
inc
mov
xchg
leave
fsub
dec
lahf
mov
cmp
lahf
ss
lds
(bad)
sti
mov
inc
rcr
or
dec
mov
inc
mov
pop
inc
(bad)
cmp
adc
xchg
dec
mov
jns
inc
and
or
ins
in
in
lock
(bad)
call
dec
push
pop
scas
call
lock
adc
and
in
push
repnz
loop
ss
scas
add
pop
rcr
dec
and
enter
(bad)
stc
mov
xor
out
fld
adc
cld
mov
(bad)
push
pop
test
mov
daa
jae
in
clc
pop
(bad)
mov
lock
push
sub
xchg
aam
leave
push
call
adc
jle
lds
js
pop
cdq
mov
xchg
xchg
mov
cmp
pop
pushf
jecxz
jae
aad
mov
mov
push
xchg
int3
pop
rcl
pop
dec
mov
cmp
fwait
dec
sbb
push
dec
jne
(bad)
jecxz
mov
scas
push
sbb
repnz
aam
stc
cmp
pop
inc
xchg
xchg
xchg
cld
and
inc
or
movs
loope
cld
icebp
push
push
pop
mov
mov
cs
jge
das
inc
and
ffreep
clc
jno
das
sbb
mov
fcom
push
mov
sar
and
xor
add
jno
sahf
js
not
inc
sbb
pop
inc
or
nop
sub
repz
shl
or
add
mov
mov
in
xchg
(bad)
push
mov
jle
leave
jmp
mov
mov
nop
lods
mov
or
mov
or
pop
movs
cs
pop
mov
push
sbb
retf
or
out
aad
cwde
mov
cli
lea
and
gs
dec
cdq
xchg
mov
lods
cmc
adc
or
out
jne
outs
push
xor
aaa
xor
stos
adc
fsubp
cmp
mov
adc
or
addr16
and
pop
cmps
fnsave
mov
cwde
inc
aas
push
jb
fs
push
xchg
cmps
xchg
xchg
or
gs
out
xor
repz
pop
jg
and
inc
ret
ror
cmp
xchg
inc
dec
(bad)
push
xlat
jbe
dec
push
inc
xchg
sbb
push
inc
sub
jmp
mov
pusha
ins
js
dec
stos
(bad)
jo
adc
xor
repnz
or
and
and
in
xor
(bad)
cmp
scas
pop
int3
inc
dec
pusha
(bad)
gs
jecxz
(bad)
mov
out
shl
fcomp
mov
(bad)
mov
xchg
repnz
and
in
or
out
dec
push
ficom
out
pushf
xchg
xchg
outs
mov
je
hlt
in
retf
jge
or
cs
xor
xchg
hlt
lahf
dec
inc
int3
cmps
inc
cmp
fwait
std
ror
pop
mov
lods
retf
jl
retf
cmps
cwde
cmp
sub
push
jmp
stos
pop
dec
vmread
test
ret
xor
mov
sbb
sub
cmp
aas
pop
pop
sar
lods
out
mov
sar
stos
fsubr
mov
movs
sub
add
icebp
loop
gs
adc
push
jb
mov
push
add
shl
mov
push
pop
dec
sub
push
daa
popf
xchg
jg
retf
popf
(bad)
ficom
test
add
ja
mov
gs
inc
jecxz
xchg
les
bndstx
mov
(bad)
lds
sbb
pop
in
mov
fcomp
mov
push
jp
xchg
sbb
into
jle
xchg
ins
jns
jnp
rol
push
cmps
xchg
cli
jae
mov
cmps
mov
push
and
in
sbb
cwde
add
jo
pop
dec
lahf
mov
gs
fidiv
sub
test
and
ins
loopne
neg
dec
clc
int
jg
das
fsubr
mov
jl
popa
aas
scas
mov
pusha
dec
add
xchg
lea
mov
push
and
inc
out
mov
stos
jne
mov
fcom
jl
cmp
mov
stos
leave
add
mov
dec
ins
aaa
scas
pop
sbb
adc
mov
cdq
mov
in
inc
enter
mov
jmp
pop
dec
and
sub
in
cmp
adc
call
nop
aam
dec
sub
mov
das
inc
push
test
mov
jae
adc
std
jecxz
mov
loope
adc
sahf
gs
cmp
mov
xor
clc
xor
in
enter
jl
mov
dec
push
adc
mov
lds
push
shl
rcr
outs
shl
cdq
pop
inc
daa
pop
adc
adc
std
shl
test
push
(bad)
repnz
xchg
push
and
cli
aad
fstp
(bad)
xor
das
mov
test
and
(bad)
jnp
jb
sub
dec
pop
mov
or
cwde
fs
(bad)
aam
or
clc
imul
mov
repz
cmp
sub
push
(bad)
sbb
sbb
enter
xor
sub
or
pushf
(bad)
scas
mov
cmp
mov
rol
outs
int3
dec
mov
sub
jnp
pop
popf
call
mov
arpl
out
and
xor
out
cmp
mov
outs
dec
mov
dec
fild
jmp
push
xor
fxch
or
adc
retf
sbb
push
push
add
mov
and
fwait
cmp
mov
pop
adc
aam
clc
mov
mov
push
push
jae
jecxz
inc
cmp
loope
jae
sub
and
pop
inc
mov
test
call
push
mov
jne
pop
cmp
mov
(bad)
rcl
sbb
fwait
stos
xchg
mov
imul
pop
sub
cmc
out
movs
xor
daa
out
sbb
jns
mov
and
es
imul
fadd
jns
shl
jnp
fsub
cdq
outs
jbe
or
mov
xchg
test
ficom
or
cmp
pop
icebp
dec
(bad)
in
stc
clc
in
dec
pop
mov
(bad)
rol
mov
mov
outs
ins
mov
jecxz
enter
bound
outs
dec
sub
jecxz
lods
test
movs
mov
pop
sub
cmps
xor
aam
gs
cld
icebp
push
movs
mov
outs
sbb
loop
mov
shl
cld
sahf
mov
and
fsub
adc
loope
in
lds
xchg
xchg
dec
pop
sub
lahf
enter
pop
add
xor
imul
inc
pop
adc
pop
inc
mov
jno
fmul
fnstcw
mov
pusha
in
scas
icebp
add
fnstcw
ror
lods
imul
shl
jnp
sahf
es
fdivr
outs
inc
les
xor
scas
imul
inc
out
push
test
add
or
mov
or
rol
addr16
jne
cmc
es
push
inc
push
cmp
retf
mov
add
xlat
cmp
jge
add
jl
cwde
adc
and
jbe
clc
imul
sbb
sbb
(bad)
(bad)
jp
pop
mov
ja
test
add
repz
xor
(bad)
into
sbb
inc
pop
or
sub
test
outs
xchg
ds
loope
cmp
mov
lods
mov
(bad)
push
popa
add
jecxz
mov
pop
mov
and
(bad)
adc
cmp
mov
inc
cwde
mov
in
jecxz
xlat
movs
dec
pop
push
rcr
mov
test
pusha
mov
dec
adc
neg
adc
cli
mov
arpl
je
stos
mov
out
inc
or
fdiv
jne
out
sub
sub
xchg
sbb
sbb
cwde
hlt
sbb
push
pop
mov
push
rcr
mov
xchg
mov
mov
es
dec
outs
xlat
mov
imul
popa
cld
adc
loop
jae
les
ja
(bad)
out
in
jne
ror
inc
and
add
ins
out
or
sub
mov
push
leave
mov
mov
popf
jmp
adc
push
push
sub
fist
mov
cmp
loopne
fsubrp
push
add
cmp
dec
jmp
mov
xor
(bad)
and
repz
imul
jmp
mov
mov
(bad)
scas
imul
pop
mov
add
dec
hlt
adc
xor
inc
mov
inc
cdq
adc
mov
cwde
popf
out
in
add
imul
sub
in
dec
jecxz
xchg
push
das
pop
and
jns
adc
outs
mov
adc
inc
xchg
jecxz
stos
les
jb
out
fild
sbb
push
dec
pop
es
jge
cdq
xlat
je
fs
jb
adc
pop
cmps
jns
push
adc
in
imul
stos
int3
dec
mov
scas
xchg
test
cdq
test
jp
das
shr
or
repnz
mov
add
pushf
in
outs
xor
xor
push
lds
imul
sti
fadd
std
ins
iret
(bad)
aam
push
pushf
mov
push
ret
enter
ret
aas
push
add
cs
adc
in
(bad)
retf
aas
je
test
xchg
popf
les
aad
iret
cmp
mov
pop
test
sbb
inc
(bad)
(bad)
xor
cmps
imul
push
jge
jne
jl
xor
pop
rcr
movs
addr16
sar
pop
inc
cmp
mov
test
pop
fcom
jb
xchg
lods
sbb
scas
jge
xlat
test
dec
jmp
ret
sti
ins
xor
lods
xlat
lahf
adc
cmp
add
xor
push
movs
test
(bad)
dec
mov
inc
dec
adc
int
int3
retf
fs
mov
sub
dec
test
dec
xor
push
scas
and
mov
lods
push
push
aam
cwde
mov
inc
adc
push
in
mov
push
lahf
fstp
mov
mov
shr
push
(bad)
fldcw
jno
popa
int3
out
shr
push
movs
push
mov
fiadd
ret
sbb
push
add
sub
retf
push
and
shl
(bad)
clc
cmp
push
pusha
mov
sbb
cld
int3
aas
adc
jb
cmp
dec
gs
lea
mov
mov
inc
sub
sbb
fldcw
mov
popa
cs
out
push
stos
ins
jl
and
div
dec
mov
aas
sub
lea
push
leave
jno
jnp
mov
push
retf
rcr
xor
add
ins
popf
xchg
out
and
ror
pop
test
aas
sti
adc
test
jge
add
and
add
and
mov
jle
lods
repz
cmps
scas
adc
inc
jmp
and
jle
bound
jmp
or
retf
and
push
sar
ss
cs
movs
or
push
inc
push
sub
ret
retf
stos
icebp
dec
xchg
test
test
lock
pop
push
(bad)
cmc
ds
test
push
rol
xchg
xor
sub
sub
or
test
jmp
jmp
push
stc
mov
lods
jmp
fdivr
ror
sub
xchg
push
mov
sbb
lahf
(bad)
pop
mov
aaa
out
daa
mov
xor
mov
xchg
push
jae
xlat
mov
popa
fmul
mov
pop
adc
call
es
adc
xor
outs
xor
rcl
adc
pop
cwde
mov
in
push
mov
push
add
xor
adc
dec
lahf
cmps
scas
in
push
fistp
inc
cwde
sub
inc
(bad)
sub
push
neg
push
inc
test
sub
sub
nop
arpl
lods
xchg
retf
movs
mov
iret
jns
cmp
aas
add
mov
popf
pop
jmp
xor
sbb
push
mov
push
jno
and
cmp
jnp
rcr
push
enter
fild
stc
pop
aam
mov
jns
in
das
push
cmp
sar
mov
push
test
and
mov
shl
out
(bad)
clc
sbb
loope
ins
xchg
test
int
inc
sbb
fnstcw
je
mov
mov
pop
xchg
xor
push
stos
add
mov
and
loop
pop
push
(bad)
out
inc
xchg
call
movs
xor
loopne
and
mov
loop
xchg
dec
pop
(bad)
(bad)
(bad)
lock
cmp
jae
jns
lds
jecxz
test
arpl
xor
enter
pop
sub
adc
xchg
cmc
add
dec
ror
mov
push
out
fmul
imul
or
fnstenv
adc
aaa
mov
das
repnz
push
mov
and
push
ret
push
sub
jne
(bad)
dec
and
sbb
and
rcl
lock
cwde
retf
aas
out
sub
lock
inc
pop
rcr
sbb
int
jmp
mov
adc
addr16
fs
xchg
mov
push
push
jle
aaa
iret
adc
jge
std
inc
mov
cmp
pop
cdq
mov
imul
jmp
sub
dec
cmp
iret
dec
imul
mov
js
repnz
cmp
cmp
jp
dec
jg
inc
mov
push
mov
push
dec
out
scas
movs
xchg
cmp
pop
adc
test
push
addr16
add
dec
xor
in
test
and
inc
popa
and
xlat
popf
xor
and
cmp
das
stc
cli
jge
(bad)
cmp
(bad)
rcr
xor
int
mov
mov
push
xor
enter
sub
in
xor
in
call
and
xor
push
retf
or
push
hlt
ja
sbb
mov
push
stos
mov
ficomp
pop
add
aas
and
fs
cmp
nop
add
xchg
mov
mov
(bad)
outs
enter
stc
xchg
or
cdq
pop
cmps
pop
sbb
pop
repnz
xlat
int3
xor
xchg
stos
fwait
sub
push
daa
push
cmp
fisttp
cmp
mov
(bad)
bound
cli
lock
jns
mov
icebp
es
xor
stos
lods
mov
in
sbb
in
lds
and
repnz
push
movs
in
inc
cmp
sahf
ret
call
jmp
ret
pop
aas
push
arpl
sub
sbb
loop
cmp
xchg
mov
sbb
addr16
dec
xchg
mov
xchg
push
xor
mov
pop
iret
and
xchg
add
aad
fwait
shl
hlt
rcl
sub
cli
cmp
mov
pusha
mov
jp
pushf
call
add
icebp
jge
iret
push
in
mov
xchg
sahf
or
sub
jle
mov
cs
(bad)
cmp
inc
mov
inc
add
nop
dec
sub
inc
xor
pop
xor
into
call
jl
fst
or
fild
ror
and
ins
mov
lds
je
mov
stos
repz
xor
xor
bound
lods
push
cmps
inc
loopne
jns
(bad)
ins
jle
mov
test
cmp
icebp
adc
push
xchg
jg
mov
and
sub
repnz
xor
jecxz
fdivr
lahf
imul
sub
or
or
mov
sbb
pop
in
test
bound
inc
sub
retf
(bad)
lods
add
mov
ds
sub
mov
and
cmp
and
push
xor
int
sub
rol
iret
ins
add
(bad)
retf
ss
shr
aad
mov
pop
add
dec
std
inc
out
add
pop
inc
sub
pusha
(bad)
fs
es
out
fmulp
adc
pop
loope
jecxz
imul
add
or
xor
clc
(bad)
jne
push
xchg
fnsave
sub
xor
daa
test
mov
cmp
fidivr
jne
mov
std
imul
in
adc
xor
loopne
es
push
cmp
into
push
ret
out
pusha
jge
xor
and
push
cli
or
push
or
pop
stc
or
sbb
cwde
cmp
and
adc
push
fiadd
pusha
push
inc
or
cdq
dec
adc
add
ins
scas
sub
jmp
std
je
mov
and
ja
imul
pop
push
icebp
call
adc
sbb
or
out
sbb
test
push
push
dec
outs
out
gs
dec
mov
ss
popa
fmul
call
dec
fwait
pop
test
sub
cmp
lods
dec
shr
mov
inc
mov
adc
sbb
xchg
jae
cmp
dec
mov
push
xchg
dec
mov
jecxz
lods
pop
mov
mov
mov
cmp
xor
call
cmps
stc
push
fucomip
int
sar
pop
or
inc
sbb
push
scas
cmps
mov
mov
stc
push
mov
mov
hlt
xor
xor
adc
not
or
lds
repnz
mov
int3
and
cmps
jecxz
mov
adc
outs
xchg
shl
inc
shr
ds
and
jmp
xor
jb
in
inc
cmc
(bad)
fs
icebp
cdq
popa
popf
sub
std
add
stc
or
mov
or
inc
cld
push
xor
test
jmp
enter
lock
pop
gs
pop
push
dec
stos
outs
mov
jmp
jle
sub
xor
popa
push
rol
jno
or
or
cld
adc
adc
mov
sahf
pop
jo
sti
das
adc
dec
mov
mov
mov
sar
sub
cwde
(bad)
mov
sbb
lods
push
push
xchg
jge
and
adc
or
sub
adc
dec
sbb
into
jmp
jne
xor
int
push
pop
lods
push
jae
mov
xchg
mov
mov
mov
in
pop
in
mov
mov
xchg
repz
xchg
xchg
mov
and
aas
mov
dec
cmp
sbb
pusha
sub
adc
rcr
pop
xor
mov
mov
jae
cli
in
xor
push
in
pop
dec
pushf
sub
daa
sub
dec
aam
and
call
arpl
or
add
pop
dec
cs
jg
fdiv
mov
fwait
in
push
dec
pop
pushf
lods
mov
mov
lock
mov
mov
or
nop
push
cmp
test
call
and
cdq
(bad)
fsub
xlat
inc
lahf
jl
jl
jo
leave
scas
dec
in
dec
jmp
movs
and
retf
popf
jb
int3
jae
cmp
rol
mov
int
add
jo
jl
imul
leave
inc
icebp
rcl
xchg
dec
repnz
ret
sahf
mov
imul
pop
adc
pop
sbb
xchg
and
out
imul
sbb
in
xchg
inc
bound
movs
shl
jo
ficomp
push
popf
pop
mov
xchg
lahf
mov
mov
(bad)
fnstsw
add
lock
bnd
call
sub
mov
aam
aad
mov
ins
scas
neg
pop
dec
xor
out
(bad)
pop
xor
xor
pop
jmp
xor
arpl
sub
pop
retf
ror
adc
stos
inc
mov
dec
mov
jecxz
mov
pop
inc
add
in
inc
retf
ss
mov
sbb
jmp
mov
in
mov
(bad)
xchg
jge
and
rcr
jno
cli
lods
add
push
(bad)
push
sahf
in
outs
or
aam
in
adc
mov
dec
sbb
ins
add
push
popf
sbb
add
jns
fld
pop
movs
stc
call
cli
out
cmp
xchg
mov
fs
outs
scas
aam
dec
repnz
rcl
retf
sbb
xchg
cmps
iret
xchg
adc
add
daa
and
dec
dec
inc
fdivr
in
(bad)
pop
push
mov
test
and
inc
call
jecxz
(bad)
not
cmp
loope
mov
xchg
xor
inc
mov
cmp
xchg
jno
mov
lods
clc
out
int
lds
mov
ficomp
gs
sub
dec
mul
cmp
fnstenv
cmp
sbb
add
sbb
mov
push
cmc
mov
mov
or
call
into
inc
lods
sti
arpl
sub
dec
push
bound
call
lds
bound
xchg
jo
paddusb
jp
addr16
xchg
stos
add
dec
fstp
dec
lds
popa
aad
adc
pusha
test
int
sahf
mov
push
pop
loopne
pop
rcl
aaa
repnz
addr16
cld
cwde
jb
adc
adc
add
push
xchg
cld
stos
lock
mov
xor
push
out
out
imul
lods
xchg
or
xor
outs
arpl
(bad)
arpl
das
aaa
cmp
in
(bad)
stos
retf
test
scas
jecxz
pop
adc
xchg
cmps
and
fnsave
and
mov
mov
shr
popa
lock
pop
xchg
(bad)
(bad)
hlt
push
mov
(bad)
mov
(bad)
pushf
jno
sbb
leave
cmp
out
daa
sbb
inc
sub
loop
push
add
xor
(bad)
adc
mov
sub
test
sub
and
mov
fsubrp
fsub
jno
int3
outs
mov
sbb
adc
or
inc
push
jno
les
ficomp
cmp
js
pop
jmp
shl
fstp
shl
push
movs
mov
sub
jge
iret
xchg
jge
xchg
pusha
daa
bound
aam
push
mov
push
mov
jmp
cmps
enter
xor
inc
cld
mov
jle
push
push
(bad)
mov
add
or
xchg
rol
les
ret
out
mov
jle
lahf
xchg
push
rcr
popa
stos
push
jecxz
jmp
sub
jmp
loop
bound
add
shl
xchg
test
data16
scas
push
push
nop
(bad)
jge
xor
mov
jmp
xchg
or
or
mov
mov
jb
push
repz
(bad)
push
jb
out
mov
stos
cmps
push
xor
pop
cld
popf
repz
push
push
xchg
jg
mov
(bad)
imul
sbb
cmp
push
pop
cwde
xchg
sub
in
sub
cmp
adc
hlt
icebp
push
hlt
push
sub
and
(bad)
jmp
mov
jg
dec
repz
mov
jecxz
mov
sbb
or
mov
cli
imul
lods
push
addr16
push
fcmovne
retf
inc
rcl
mov
imul
inc
in
cmp
repz
and
xchg
or
je
jle
mov
stc
mov
scas
cmps
popf
jmp
xchg
mov
ror
push
jmp
retf
or
addr16
and
add
fs
call
push
test
aam
ret
xor
ret
test
outs
xchg
lea
xor
xor
cmp
(bad)
loope
mov
sbb
stos
and
cmps
sub
mov
mov
lea
xlat
fcmove
repz
mov
cwde
inc
dec
push
call
retf
mov
pop
jmp
loope
loopne
call
add
xchg
int3
and
scas
inc
xchg
scas
xchg
mov
mov
retf
(bad)
mov
jb
pop
dec
aaa
push
scas
cmc
test
sldt
sbb
mov
xor
(bad)
aad
add
dec
jmp
inc
std
or
(bad)
xlat
loop
ror
pop
(bad)
adc
mov
pusha
sub
push
cmp
inc
sub
ds
ja
xchg
mov
or
mov
pusha
adc
cmp
and
cdq
out
or
xchg
cmp
xlat
xchg
mov
call
ret
test
cmp
(bad)
and
sbb
leave
sub
test
inc
mov
xchg
jmp
pop
(bad)
(bad)
sbb
ficom
les
jmp
xchg
cmp
enter
shl
mov
sbb
or
int3
div
fisubr
ret
cdq
pop
mov
dec
jp
jbe
in
in
cmp
cwde
imul
xchg
mov
mov
(bad)
mov
cmps
push
mov
mov
leave
shr
out
imul
sub
aad
mov
xchg
pop
call
cmp
dec
jle
and
rcr
xchg
outs
or
(bad)
ficom
and
div
sub
rcl
cmp
or
nop
or
popf
popa
fdivr
xor
repz
jp
xchg
out
mov
out
xchg
sub
popa
std
cmp
(bad)
jp
out
mov
pusha
stos
mov
and
iret
repnz
sahf
sbb
mov
jns
push
movs
mov
sub
xchg
mov
addr16
mov
lahf
jmp
inc
or
sub
jns
or
push
int
leave
mov
xchg
push
mov
(bad)
dec
(bad)
cmp
jnp
dec
mov
ds
inc
and
dec
das
mov
out
lds
xchg
movs
es
das
and
mov
pop
push
ins
mov
stos
test
xchg
repnz
and
pop
mov
xor
mov
ror
cmp
add
mov
mov
push
shl
movs
or
out
mov
cmps
rol
xlat
push
cld
xor
(bad)
mov
std
and
jecxz
cmp
cs
movs
mov
(bad)
inc
mov
mov
adc
in
mov
fst
xchg
std
loop
mov
cs
int3
aaa
add
push
out
das
into
dec
shr
dec
pusha
ret
outs
pop
pop
leave
test
and
lods
cmps
fstp
jmp
repnz
shr
ja
jp
outs
push
xor
pop
imul
mov
cmp
jl
mov
push
sub
lock
(bad)
je
or
pop
xor
in
daa
mov
ds
mov
repnz
icebp
cmps
cwde
sub
outs
mov
adc
mov
leave
inc
in
rcl
(bad)
lds
xchg
or
jns
or
in
pusha
mov
test
clc
or
add
and
ss
inc
movs
test
out
pop
dec
cmp
imul
or
sub
(bad)
dec
fs
mov
adc
cmp
cwde
dec
push
or
sbb
adc
mov
add
inc
jecxz
enter
(bad)
leave
sub
in
xchg
inc
out
sbb
scas
sub
add
cmp
jge
jne
pop
lods
nop
sbb
sbb
push
and
call
cmp
fwait
cmc
dec
jne
push
aad
scas
in
sbb
in
jns
scas
inc
cmc
pusha
inc
jp
pop
scas
inc
rsqrtps
ja
jg
call
mov
sub
mov
scas
jg
ret
cs
mov
data16
movaps
sar
inc
and
pop
es
bound
mov
add
fscale
or
mov
lods
cmp
sbb
mov
into
daa
imul
xchg
(bad)
and
xor
les
ins
cmps
inc
repz
dec
sub
pusha
and
pop
ds
mov
xchg
inc
into
mov
inc
add
dec
jge
and
test
and
mov
pop
jle
jl
stos
ret
mov
out
jne
je
call
xchg
lods
pop
mov
ffreep
mov
pop
cmp
inc
cwde
pop
push
jp
push
mov
cmp
jns
pop
push
idiv
repz
mov
outs
mov
sub
inc
pop
or
mov
repnz
sti
mov
retf
(bad)
jne
dec
cmps
dec
mov
cs
jmp
pop
push
and
out
jne
gs
cmp
int
sub
into
stc
push
adc
mov
jecxz
jecxz
adc
cdq
cmp
sub
lea
cli
dec
or
into
push
cs
jo
xor
xchg
daa
mov
dec
sub
fwait
adc
bound
mov
sub
jl
mov
(bad)
fnstsw
leave
mov
rcr
pop
cmp
imul
imul
dec
lea
data16
jle
push
ss
out
jne
leave
fcom
mov
sub
test
das
or
pop
push
hlt
xor
add
(bad)
scas
push
ins
mov
push
dec
and
mov
pop
aad
je
xchg
jbe
inc
adc
sub
mov
loop
mov
imul
jno
adc
or
out
pusha
mov
imul
mov
inc
sub
dec
aaa
pop
adc
xchg
movs
in
bound
retf
xor
popa
pop
xor
pop
je
add
or
in
(bad)
adc
(bad)
jl
xchg
retf
and
popf
ret
mov
aad
cmp
ins
mov
les
cmp
rcr
not
loop
jmp
xchg
jb
sub
(bad)
xlat
frstor
pushf
xchg
cli
mov
push
movs
or
(bad)
mov
je
push
(bad)
icebp
(bad)
jmp
mov
mov
mov
cmp
outs
dec
xlat
(bad)
sub
test
in
jmp
pop
aad
sub
jle
dec
das
ficomp
sbb
aaa
call
mov
mul
add
sar
nop
dec
jl
xchg
call
rcl
dec
jp
jno
outs
jmp
add
jns
test
bound
addr16
adc
scas
mov
aad
or
sub
inc
call
popf
pop
or
mov
mov
dec
outs
clc
xor
sub
js
or
cmp
les
gs
rol
sbb
leave
int3
test
inc
je
mov
cmps
xchg
sbb
push
adc
shl
std
mov
popf
fcomi
int3
into
lea
and
call
outs
fwait
outs
push
add
rcl
inc
adc
push
ret
jecxz
mov
icebp
addr16
in
movs
jle
iret
adc
fisub
stos
repnz
retf
int
movs
out
popa
mov
pop
pop
xor
mov
lea
pop
lahf
loope
fsub
div
test
sub
in
and
dec
inc
jb
lock
in
pop
sub
enter
xor
in
jp
adc
std
int
mov
mov
sbb
dec
xchg
push
or
aas
dec
jne
daa
mov
in
cwde
retf
aam
cs
je
fdiv
shr
xor
loopne
sbb
sahf
mov
popf
rcr
call
push
or
repnz
add
test
sbb
stc
ret
fisttp
lahf
sbb
imul
xor
sub
cld
retf
jmp
push
cmc
sbb
lods
mov
xor
fwait
push
dec
mov
ins
movs
jbe
mov
shl
pop
loop
test
and
loopne
mov
xor
mov
sbb
xor
and
repz
mov
cmp
in
add
pop
pop
int
sbb
sub
fiadd
pop
es
ret
inc
inc
mov
lods
iret
xor
out
sbb
xor
gs
mul
xlat
das
nop
lods
xchg
inc
stos
inc
cwde
in
cmovg
bnd
sbb
push
dec
sub
mov
mov
cdq
addr16
in
inc
add
shr
scas
mov
pop
fidivr
fidivr
and
out
inc
nop
jmp
cmp
add
mov
or
in
pop
push
outs
hlt
aaa
jno
sbb
hlt
jnp
inc
inc
(bad)
add
mov
jge
and
icebp
(bad)
enter
fdivr
cmc
sbb
sub
repnz
cmp
or
jo
not
js
lods
xchg
xlat
loop
ins
push
repnz
dec
test
ret
retf
xchg
scas
lods
cmp
inc
(bad)
repnz
inc
(bad)
xlat
rcl
mov
jge
xor
xchg
stc
or
dec
mov
mov
mov
(bad)
(bad)
ds
add
mov
xchg
jo
sub
and
femms
xor
jae
or
xchg
xor
inc
loopne
cmc
or
adc
inc
in
add
mov
arpl
inc
ins
sar
nop
cmp
pop
dec
xchg
inc
mov
mov
ja
fnstcw
les
sub
xor
sbb
cli
les
inc
fcom
or
fbstp
xchg
cmp
xchg
je
daa
lock
mov
hlt
scas
cs
xchg
xor
sub
arpl
push
jmp
(bad)
pushf
xor
jbe
jb
(bad)
adc
retf
jmp
repnz
ins
sub
mov
pop
fninit
fwait
jmp
jl
push
dec
fld
vmulps
push
out
push
jmp
xchg
(bad)
outs
lock
or
jl
and
inc
xchg
mov
mov
ins
test
mov
jnp
xchg
cmp
mov
mov
dec
(bad)
es
dec
(bad)
or
jae
mov
cmp
cmp
shl
and
mov
push
(bad)
out
or
nop
int
mov
push
inc
in
xor
icebp
daa
add
clc
sbb
shl
mov
subps
add
push
(bad)
lock
loopne
inc
callw
jno
add
fwait
dec
ss
jle
jno
ins
inc
fistp
je
sbb
imul
or
(bad)
mov
jae
out
shr
in
fiadd
icebp
inc
std
das
dec
stos
jb
inc
rol
retf
dec
mov
sbb
jle
shl
test
add
retf
into
cmp
repnz
jae
lds
aaa
stos
lds
cmp
rcl
or
dec
fs
popf
cld
stos
adc
fwait
mov
pop
cmp
enter
jae
pop
inc
adc
fs
arpl
mov
dec
xor
pop
inc
lods
lahf
jmp
xchg
dec
pop
in
hlt
ins
push
ret
in
mov
jmp
lahf
push
(bad)
mov
popa
or
loopne
pushf
mov
fadd
in
rcl
fdivr
jp
cmp
pop
push
test
xor
stc
mov
dec
sub
aad
push
adc
enter
bound
and
and
test
jne
push
fcom
add
std
push
cmp
jmp
and
lods
jle
inc
das
jl
mov
add
test
or
lock
scas
xlat
and
data16
lock
push
cdq
mov
mov
mov
or
sbb
jb
mov
aad
sbb
jo
mov
retf
xor
aam
jbe
or
stos
psubsw
cmps
ret
and
add
shl
jbe
jo
daa
outs
jae
popa
jge
fsubr
bound
and
pusha
popf
(bad)
mov
imul
pushf
pushf
je
int3
fbld
fwait
iret
fld
and
sti
adc
les
push
sub
rol
jecxz
sub
pop
shl
inc
mov
mov
cwde
adc
mov
push
fmul
cmp
and
xchg
sahf
(bad)
mov
nop
sti
sbb
pop
cwde
loopne
das
adc
xchg
lods
inc
xor
jecxz
(bad)
push
lahf
(bad)
int
xor
jbe
movs
push
sbb
sub
push
retf
(bad)
mov
sbb
sahf
push
dec
mov
pop
nop
pop
call
ss
mov
lods
adc
test
cmp
mov
fsubr
pusha
pop
adc
repz
aas
mov
fisttp
outs
and
adc
ss
pop
jb
push
ins
dec
gs
push
aas
shl
aas
push
jmp
add
push
xor
adc
enter
out
xchg
jnp
and
ret
push
out
adc
rcr
inc
iret
nop
call
sbb
hlt
mov
add
or
dec
out
sahf
dec
adc
data16
push
xlat
cmp
cmps
pop
cmp
pop
ja
mov
dec
loope
cmp
jmp
mov
mov
jl
ss
pop
mov
cmp
pop
hlt
mov
fdivr
std
je
pop
push
call
int
jno
test
mov
xchg
outs
inc
adc
pop
sub
retf
into
pushf
repz
or
push
mov
or
ror
mov
fucomp
inc
mov
jmp
cld
imul
xchg
or
xlat
in
pusha
sbb
inc
add
mov
xor
retf
push
fisub
out
dec
xchg
jmp
scas
popf
dec
xchg
es
cmp
shl
cmp
loope
(bad)
out
mov
outs
adc
sbb
cld
movs
inc
stc
xchg
std
cld
imul
sbb
leave
mov
aam
and
test
enter
mov
dec
movs
fwait
sub
push
pop
ret
hlt
mov
xchg
std
ds
out
ja
push
fst
outs
daa
dec
loopne
or
or
xchg
leave
sub
fnstenv
jl
add
mov
cdq
std
je
mov
icebp
xchg
scas
push
add
and
or
out
ret
test
mov
idiv
ja
mov
mov
out
jg
sub
test
mov
and
cmp
es
sahf
sub
stc
dec
mov
(bad)
jns
adc
adc
xor
sub
push
add
arpl
inc
cmps
out
daa
iret
xlat
fist
(bad)
mov
mov
in
cwde
into
cwde
out
lods
int3
push
test
aad
cmp
sbb
jno
div
push
aad
popa
shl
cmp
shr
icebp
push
(bad)
mov
jmp
cmp
(bad)
sub
cli
cli
inc
adc
movs
pop
jl
ret
aad
mov
test
mov
pop
pop
sub
icebp
mov
push
sub
inc
or
popf
ins
sbb
mov
push
sub
pop
inc
dec
aas
sub
movs
mov
fst
mov
adc
fisttp
pop
test
jne
pop
mov
and
pop
dec
push
or
adc
outs
inc
(bad)
das
jno
mov
inc
sub
jne
sbb
sbb
aas
in
retf
xor
cs
xor
and
mov
mov
repz
dec
sbb
and
stc
add
rol
repnz
ss
mov
pop
jbe
fsubr
ins
push
push
rcr
jns
push
aad
imul
pushf
outs
fimul
rcr
imul
loop
and
je
mov
push
daa
inc
enter
dec
clc
int
push
or
loope
sub
ins
cs
in
push
stc
les
push
and
loopne
out
sub
jo
and
daa
scas
fidiv
pop
dec
mov
enter
xor
mov
push
sbb
and
cmp
call
dec
mov
out
fdiv
test
or
push
call
fdivrp
push
xchg
out
sub
jmp
cwde
mov
adc
retf
dec
arpl
pop
jmp
cmp
push
cld
dec
pop
xchg
mov
imul
imul
push
xor
js
popf
mov
iret
pop
dec
scas
cld
aad
push
rcr
sub
jmp
xor
jp
xlat
xchg
neg
push
pop
and
stos
loope
imul
pop
test
in
into
pop
pcmpgtb
and
enter
dec
dec
cmp
xchg
shl
scas
imul
nop
jns
shl
and
(bad)
xor
fs
inc
imul
xor
push
call
or
mov
sbb
nop
cs
fwait
loope
out
fsubp
popf
mov
xor
xchg
mov
test
adc
in
xchg
loope
xor
mov
push
pop
or
sbb
add
push
inc
adc
fnstsw
pop
cmova
jnp
jle
jge
and
into
pop
lods
popf
(bad)
lods
minps
arpl
(bad)
ss
ja
fdivr
mov
call
mov
out
xor
(bad)
arpl
cmps
leave
stos
jae
mov
push
mov
xlat
fist
int3
or
test
push
cdq
sbb
or
and
sar
xchg
jg
popf
imul
adc
cmp
mov
push
push
dec
cmps
xor
cli
or
jle
push
pop
jecxz
ins
pop
adc
xchg
int3
mov
in
dec
mov
mov
scas
add
dec
daa
xor
adc
jle
mov
and
sbb
push
stos
in
in
mul
je
adc
sbb
push
rol
pusha
mov
leave
or
xchg
repnz
shl
push
dec
add
mov
mov
shr
cmp
adc
and
mov
xchg
loope
mov
dec
data16
jne
cmps
and
jg
arpl
cmc
xchg
xor
in
jb
add
pop
stos
nop
in
xor
mov
clc
jecxz
je
sub
mov
addr16
repz
dec
and
jmp
mov
xlat
jb
or
push
add
pop
sub
push
in
loopne
push
shl
fcomp
add
push
lock
adc
in
stos
dec
adc
cdq
cmp
jbe
sub
and
jge
push
ret
lock
test
adc
or
and
sub
or
scas
push
jnp
push
rcr
sahf
dec
into
bnd
fiadd
rcl
gs
(bad)
push
jge
mov
add
cmp
pop
inc
dec
push
inc
add
xchg
pop
std
add
cmps
sbb
lods
lods
jmp
xchg
pop
into
ja
pushf
or
(bad)
jae
push
and
push
and
fwait
je
jl
out
mov
fwait
inc
adc
(bad)
stos
daa
adc
adc
(bad)
clc
jmp
mov
or
outs
fimul
(bad)
adc
idiv
jmp
or
sub
outs
adc
xor
fwait
movs
mov
cmc
sbb
fcom
jp
push
cmps
cmc
xchg
dec
mov
and
retf
inc
lds
and
pop
gs
(bad)
mov
arpl
lock
or
in
pop
std
and
aad
xchg
mov
out
imul
neg
daa
das
movs
mov
fcmovnb
add
pop
imul
push
gs
shl
inc
and
dec
mov
idiv
add
push
mov
cmp
jle
ins
dec
dec
mov
out
cmp
or
mov
cwde
scas
fld
inc
outs
(bad)
xor
mov
cmp
adc
fucomi
push
lahf
cmp
mov
ss
call
and
sub
xor
sti
in
cmp
cmp
or
pop
scas
jo
imul
daa
ficom
cli
jbe
adc
push
dec
xor
jne
pop
jmp
pop
adc
popa
pop
jmp
jno
xchg
jbe
out
rcl
mov
add
test
in
dec
push
cmp
or
daa
addr16
add
cs
(bad)
call
inc
sbb
btc
outs
test
jne
test
fiadd
retf
lea
push
sahf
mov
adc
pop
push
inc
loop
jb
adc
sqrtps
aaa
and
shl
es
popf
inc
je
test
jmp
pop
add
(bad)
push
mov
mov
inc
sbb
nop
sub
imul
inc
inc
xchg
es
scas
gs
pop
dec
push
enter
pop
push
push
ficom
jbe
mov
jbe
inc
dec
sub
sub
fisub
outs
inc
or
in
cmc
adc
icebp
cmps
shr
pushf
bsf
mov
or
and
pop
and
cdq
mov
inc
cmp
rol
or
inc
push
in
fcomi
inc
mov
outs
inc
mov
pop
adc
pop
adc
jne
int3
test
push
in
add
imul
push
xchg
enter
or
dec
xor
jg
bound
mov
test
add
dec
sbb
jae
call
inc
mov
dec
mov
pusha
sti
das
sbb
jmp
daa
ja
cmp
jns
sbb
ss
mov
outs
push
mov
mov
push
or
cmp
sub
jle
push
inc
int3
(bad)
cli
jp
jg
neg
pop
mov
cmp
addr16
pop
mov
dec
cmp
enter
ja
inc
(bad)
hlt
aas
fist
test
(bad)
jo
mov
pusha
lock
(bad)
outs
xor
int
pop
dec
pop
pop
es
shr
push
out
mov
push
es
jae
rcl
shl
sub
jmp
dec
arpl
jg
rol
sbb
cmp
mov
sahf
jae
dec
xchg
mov
mov
clc
xor
stos
shr
out
pushf
stos
in
cmp
daa
jl
xor
test
hlt
add
dec
or
push
or
push
ret
jecxz
mov
aaa
pop
push
repnz
adc
pop
xchg
movs
push
(bad)
call
jmp
pop
outs
js
dec
xor
mov
test
push
pushf
fisub
shl
jne
sbb
daa
mov
sbb
icebp
jb
dec
cwde
mov
loopne
out
(bad)
mov
pop
or
push
add
adc
fs
dec
and
scas
pushf
or
jb
dec
push
jge
push
sbb
add
pop
and
mov
jno
mov
cmp
fdivrp
clc
xor
clc
jmp
cmc
addr16
adc
mov
add
and
call
mov
or
call
cli
(bad)
ds
push
loopne
icebp
movs
iret
iret
or
iret
fldcw
lods
gs
hlt
rol
adc
mov
pop
clc
push
sbb
pushf
cli
add
fwait
bound
loope
scas
out
dec
sub
dec
xor
(bad)
mov
add
ds
mov
rcl
test
retf
mov
loope
mov
repnz
mov
js
into
or
sbb
ret
add
test
mov
xchg
stos
scas
mov
xlat
sub
je
je
inc
in
push
jae
test
jmp
mov
in
cmps
inc
pusha
mov
idiv
test
(bad)
ja
sbb
adc
or
repnz
sub
or
inc
repnz
inc
inc
dec
ds
inc
cmc
inc
inc
test
sbb
in
and
arpl
scas
inc
stos
(bad)
cli
neg
pop
lods
inc
outs
mov
imul
fbstp
(bad)
leave
sub
retf
test
mov
ss
pop
mov
xor
loop
rcl
mov
inc
sbb
mov
and
shl
pop
retf
(bad)
stos
pop
retf
cmp
jne
and
pusha
js
mov
mov
add
fnstsw
add
movs
iret
