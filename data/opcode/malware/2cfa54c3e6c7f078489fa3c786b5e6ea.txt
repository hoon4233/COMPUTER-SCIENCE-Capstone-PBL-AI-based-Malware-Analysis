call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
cmps
jno
xchg
jp
movs
mov
test
dec
mov
dec
lods
xor
idiv
adc
dec
cmps
jne
test
dec
pop
push
repz
ret
mov
push
ret
jne
lods
jle
lods
nop
pop
les
sbb
mov
gs
cmps
test
data16
fwait
clc
fsubr
lock
out
and
mov
jne
lea
cmps
push
mov
cs
push
mov
hlt
inc
adc
dec
sbb
mov
(bad)
lahf
jo
xchg
inc
sub
dec
xor
(bad)
jne
add
jmp
sub
mov
lock
sub
(bad)
sbb
shl
push
cmp
pop
and
pop
and
enter
sub
pusha
inc
adc
xor
addr16
(bad)
and
push
test
inc
adc
pop
cmps
nop
inc
mov
pusha
stos
mov
movs
push
int3
cmp
int3
xor
loope
adc
inc
adc
mov
pop
mov
dec
adc
xor
in
or
cmps
sti
fadd
loop
add
test
mov
push
xchg
(bad)
jns
fwait
push
xchg
jp
pushf
cmp
sub
mov
out
and
dec
xor
pop
sub
gs
pop
cmp
shl
lods
jae
stos
jl
xchg
gs
outs
xor
arpl
or
call
jae
mov
sub
int
jmp
and
aam
test
loope
daa
or
mov
push
pop
nop
nop
repz
lea
inc
shl
fadd
add
dec
rol
sti
add
push
pop
nop
lahf
lea
pop
mov
ss
jbe
aas
mov
fdiv
mov
mov
mov
test
mov
jmp
inc
ret
out
xor
mov
fcomp
dec
clc
das
into
jge
and
push
lds
mov
fdiv
sbb
push
xor
pop
out
jbe
scas
mov
fdiv
mov
and
or
fstp
mov
(bad)
sbb
xor
pop
retf
mov
pop
ret
lock
data16
ja
cmps
test
push
or
ret
mov
xchg
mov
pop
jnp
push
cmp
cmc
mov
and
dec
xchg
push
jae
and
sub
nop
fsub
sbb
xchg
mov
adc
ret
outs
test
(bad)
xor
push
in
scas
pop
fdiv
pop
cmc
mov
jns
int3
push
inc
sub
add
add
pop
mov
ss
xchg
and
dec
xchg
movs
in
movs
mov
cmp
mov
xchg
cs
ret
inc
mov
mov
push
inc
movs
mov
pop
loope
pop
inc
xchg
pushf
repz
psllq
add
repz
mov
jmp
xchg
xchg
dec
add
repz
psllq
add
repz
adc
pop
inc
xchg
pushf
repz
psllq
push
cdq
xchg
pushf
push
push
rcr
fld
setg
xchg
dec
sbb
pushf
mov
xchg
pushf
pusha
fld
psllq
add
repz
psllq
add
repz
psllq
add
jecxz
popa
test
dec
xchg
jmp
and
psllq
add
repz
pushf
in
ja
mov
dec
xchg
mov
arpl
test
dec
adc
ror
repz
psllq
add
adc
repz
psllq
add
repz
mov
repz
psllq
add
jmp
dec
add
repz
psllq
jp
pusha
dec
xchg
psllq
add
repz
psllq
add
repz
psllq
adc
pusha
ds
pop
pop
mov
out
rcl
pusha
fld
psllq
add
repz
fwait
jp
xchg
and
mov
pushf
repz
psllq
pop
mov
jmp
xchg
xchg
dec
add
repz
psllq
add
ret
test
add
repz
psllq
scas
jnp
or
psllq
add
repz
adc
pusha
fld
psllq
add
repz
psllq
add
repz
psllq
add
cmps
dec
test
and
(bad)
mov
dec
xor
cdq
int3
pop
rcr
dec
jp
popf
mov
aas
or
pushf
mov
dec
mov
into
push
mov
aaa
cmp
sbb
xor
pop
shr
int
cmc
popa
rcr
arpl
jno
cmp
dec
xor
lock
push
push
jns
call
mov
in
fst
push
or
pop
pop
mov
cmp
mov
xor
mov
fsub
mov
dec
jmp
pop
fcomp
mov
data16
js
push
pop
rcr
push
mov
push
push
lock
fldcw
pop
and
int3
cli
xor
(bad)
fstp
fcomp
mov
sbb
or
mov
cli
xor
xor
cmp
and
dec
ret
sbb
sbb
movs
ret
ja
aaa
aad
sbb
cld
mov
and
stos
dec
fisub
pop
ret
mov
jmp
jns
jae
movs
and
pop
pop
pop
out
add
movs
jno
inc
loopne
mov
fwait
pop
pop
fdiv
adc
dec
push
loopne
in
sbb
mov
ret
jecxz
or
loope
ret
push
sbb
out
adc
retf
cmp
pop
mov
int3
cli
mov
xlat
push
mov
addr16
scas
das
cmc
stos
aas
xchg
cmc
sub
jns
pop
mov
popf
pop
jge
jnp
rcr
not
push
addr16
pop
dec
and
or
dec
lahf
inc
mov
mov
cs
inc
div
or
sub
sbb
ret
jno
cmp
nop
and
add
nop
cmp
nop
cmp
nop
cmp
rcl
(bad)
loop
test
jno
cmp
hlt
pop
inc
sbb
faddp
mov
nop
cmp
nop
cmp
mov
jno
cmp
add
push
inc
fisub
nop
cmp
nop
cdq
(bad)
cmp
nop
cmp
lds
jno
cmp
mov
push
jno
jno
sub
cmp
nop
cmp
nop
cmp
pop
out
clc
sbb
add
inc
mov
test
or
repnz
mov
loop
lods
mov
out
mov
loop
mov
inc
test
popf
pop
dec
xchg
cli
loope
or
pop
lds
sub
pushf
push
mov
call
push
and
dec
lea
jmp
and
dec
lea
jmp
mul
push
mov
dec
lea
jmp
mov
dec
lea
jmp
(bad)
jns
lea
jmp
jb
ficomp
mov
adc
aad
cmps
rcl
aaa
mov
shl
inc
push
imul
mov
lds
jmp
jmp
push
mov
push
aaa
lock
bound
test
mov
fstp
mov
mov
push
mov
in
mov
adc
movs
(bad)
cmc
(bad)
out
fcomp
mov
dec
push
pop
jae
push
lds
mov
nop
xchg
push
and
and
scas
lea
in
lds
xchg
add
lea
pop
in
and
push
adc
in
xor
je
push
jnp
cmps
iret
push
sahf
std
mov
xor
dec
cli
add
shl
inc
sbb
sbb
or
repz
cmp
mov
lods
imul
lea
inc
mov
xor
sbb
fdivr
sbb
mov
pop
cmp
pop
push
lea
fbstp
(bad)
pop
pop
gs
not
xor
cmp
aam
cmp
sbb
sub
jle
mov
pusha
sub
xlat
pushf
dec
lea
push
lea
call
loope
sahf
sahf
leave
pop
inc
sub
sbb
xchg
xor
cmp
pop
push
xchg
mov
(bad)
jl
outs
pusha
mov
rcl
lahf
and
mov
cmps
sbb
rol
jb
and
dec
mov
jl
test
loopne
repnz
mov
icebp
and
mov
dec
jae
pop
out
and
popa
add
adc
stos
and
or
cmp
adc
adc
push
std
jl
popa
pusha
mov
xor
mov
mov
push
fsub
movs
cwde
inc
dec
jmp
mov
jb
cmps
jnp
mov
pop
lea
aad
jb
cmps
jnp
mov
jnp
movs
daa
xchg
add
aam
jb
mov
jb
cmps
jnp
mov
jnp
movs
daa
xchg
add
or
mov
jb
cmps
jnp
movs
daa
xchg
add
xlat
or
mov
jb
cmps
jnp
mov
pop
lea
aad
jb
cmps
jnp
mov
jnp
mov
pop
or
jb
cmps
jnp
mov
jnp
cmps
inc
and
adc
pop
push
or
mov
addr16
adc
mov
sbb
push
loop
xor
cmps
jnp
stos
cmps
cmp
shr
mov
jnp
mov
jnp
jecxz
xor
jnp
mov
jnp
and
add
inc
or
mov
jnp
mov
jnp
adc
jnp
push
pop
lea
jg
out
or
stc
mov
shl
popa
push
pop
lea
cmps
jnp
mov
jnp
mov
jnp
push
pop
or
jb
cmps
jnp
mov
jnp
push
xor
lea
jnp
test
jne
popa
push
pop
lea
cmps
jnp
mov
jnp
push
pop
lea
cmps
jnp
test
fldcw
mov
cdq
shr
sub
enter
sar
mov
movs
mov
jb
mov
jb
cmps
jnp
mov
jnp
push
push
ins
jb
cmps
jnp
mov
jnp
mov
adc
lea
inc
ror
cmp
cmp
test
pop
lea
aad
jb
cmps
jnp
mov
jnp
movs
cmps
cwde
jb
mov
jb
cmps
jnp
mov
outs
push
or
mov
les
fiadd
xchg
jne
popa
push
pop
or
jb
cmps
jnp
in
cdq
into
inc
hlt
test
jb
cmps
jnp
mov
jnp
scas
dec
imul
mov
jb
cmps
jnp
mov
jnp
mov
les
mov
jnp
mov
jnp
mov
xchg
rcr
test
push
imul
aad
jns
test
mov
inc
aam
inc
jecxz
push
jb
cmps
jnp
mov
jnp
scas
or
push
sub
xor
pusha
xchg
(bad)
add
cmps
jnp
mov
jnp
mov
mov
inc
pop
lea
mov
cmps
jnp
mov
jnp
and
test
xor
mul
pop
lea
cmps
jnp
mov
jnp
mov
jnp
push
mov
jb
cmps
jnp
mov
ins
test
and
ret
jmp
cmps
rcr
or
or
jae
mov
push
sub
or
call
outs
adc
das
fs
xchg
and
(bad)
mov
add
add
push
push
cld
(bad)
out
call
adc
lock
mov
js
mov
lods
iret
fnstsw
pop
sbb
add
stc
(bad)
mov
std
stos
sbb
cld
popa
aaa
mov
jb
dec
or
sbb
pop
lea
(bad)
cmp
inc
and
lea
(bad)
lock
cmp
loope
fistp
mov
push
mov
push
jbe
xor
lahf
and
jmp
mov
xchg
cld
jae
aas
jo
repnz
outs
jmp
hlt
cmp
jmp
fist
mov
div
ds
lods
imul
(bad)
test
push
mov
add
leave
jo
pop
fxch
mov
add
inc
mov
push
call
jp
add
push
add
inc
(bad)
test
int
loopne
and
mov
sbb
inc
sub
mov
mov
mov
pusha
cmp
jne
arpl
xchg
and
inc
(bad)
and
fild
in
loope
test
jmp
cmp
add
xor
fisub
aas
ins
jl
pop
fwait
jb
add
ror
mov
movs
out
jge
mov
push
mov
push
mov
shr
rcl
mov
sub
xchg
ror
xchg
ror
xchg
test
dec
rcl
dec
rcl
dec
rcl
dec
rcl
cmp
ror
adc
rcl
inc
shl
cmp
mov
ror
xchg
sub
pop
clc
shr
rcl
dec
cmc
cmp
cmp
inc
out
stc
fcomip
shr
and
mov
inc
call
retf
or
sub
dec
rcl
and
and
push
js
cmp
xchg
cmp
adc
sub
xchg
ror
call
rcl
imul
ror
xchg
lock
shl
dec
rcl
dec
rcl
sbb
rcl
std
fcmovnb
imul
ror
xchg
ror
xchg
shr
rcl
dec
rcl
pop
shl
je
mov
ror
lods
call
rcl
dec
rcl
imul
rcr
xchg
adc
lock
dec
rcl
dec
rcl
mov
xchg
ja
sub
xchg
ror
xchg
xor
xchg
ror
xchg
stc
pop
shl
sub
xchg
repz
rcl
mov
rcl
mov
sub
xchg
ror
xchg
fisttp
call
dec
rcl
stos
cmp
rcl
push
cmp
rcl
push
retf
xchg
ror
xchg
cmps
and
add
repnz
f2xm1
jecxz
sbb
shr
adc
shl
sub
cmp
jecxz
cmp
pop
pop
fst
jecxz
sbb
shr
cs
jge
int3
xor
and
mov
test
inc
xchg
jbe
mov
xchg
lahf
and
stos
iret
fstp
inc
xchg
dec
jnp
inc
xor
mov
dec
lea
mov
shr
shl
push
cmp
lock
ror
loopne
out
(bad)
xchg
jg
sub
xchg
mov
stc
scas
jl
push
cli
pop
sub
or
(bad)
loopne
lock
xor
sbb
add
retf
loop
jb
fwait
mov
fs
sbb
retf
cmp
je
mov
pop
mov
xor
xchg
pop
imul
dec
pop
add
cmps
sti
repz
inc
stos
mov
leave
push
call
dec
ins
sbb
sti
ins
int3
fwait
dec
lea
fwait
inc
cmc
jmp
and
push
cld
jae
stc
scas
fcom
jmp
mov
mov
cmp
mov
dec
mov
call
lea
inc
shl
ret
loope
fiadd
test
mov
cmp
mov
pusha
mov
mov
out
popa
int
push
mov
mov
adc
in
enter
mov
movs
fbld
jg
dec
rcl
imul
ss
repz
rcl
imul
ss
push
enter
mov
push
mov
rcl
push
repnz
mov
ja
dec
xchg
pop
jno
mov
mov
rcl
fbld
fwait
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
es
jg
mov
(bad)
xchg
mov
adc
ja
xor
push
repnz
aas
pop
lahf
ja
mov
mov
je
ja
push
jmp
or
lods
push
jmp
ins
aas
pop
lahf
ja
mov
mov
je
ja
push
jmp
or
lods
xor
pop
lods
push
jmp
or
aas
pop
lahf
ja
mov
mov
je
ja
push
jmp
or
lods
push
jmp
or
aas
pop
lahf
ja
mov
mov
je
ja
push
jmp
imul
jmp
or
cmp
jnp
aas
jns
ja
mov
cmp
lods
push
jmp
or
lods
push
jmp
ins
aas
pop
lahf
ja
mov
mov
je
ja
push
jmp
imul
jmp
or
lahf
sub
jb
es
jb
and
fwait
loop
cmp
pusha
and
xchg
xlat
es
lods
push
jmp
ins
pop
and
lahf
xlat
(bad)
movs
jl
sub
jg
xchg
pop
xlat
(bad)
cmps
jl
inc
dec
fmul
xor
mov
add
lods
push
jmp
or
mov
push
jmp
or
fbld
jg
push
jmp
or
pop
es
mov
lods
push
jmp
or
or
add
lods
push
jmp
or
fild
enter
pop
lods
push
jmp
or
pop
and
jg
(bad)
test
or
mov
jmp
jnp
push
jmp
or
xlat
inc
adc
mov
lahf
ja
and
lods
push
jmp
or
lods
adc
adc
push
jmp
lods
lods
je
adc
push
jmp
pop
lods
push
jmp
sub
lahf
sub
xor
sub
jb
cs
jg
sub
xor
mov
push
lods
xor
or
inc
inc
jmp
jmp
push
jmp
pop
lods
mov
sbb
sub
jg
xchg
pop
xlat
(bad)
cmps
jl
dec
dec
shl
jg
stos
lahf
ja
sbb
fisttp
sti
or
in
dec
jmp
daa
icebp
out
(bad)
mov
or
xor
cs
clc
fild
(bad)
pop
cmp
sar
jmp
or
xlat
es
push
ret
push
and
ja
ret
lods
xor
pop
lods
push
jmp
or
pusha
movs
sbb
jnp
push
jmp
or
mov
cmp
ja
sub
jb
sub
jb
sub
jb
out
jnp
cs
clc
fnstsw
jnp
mov
push
jmp
or
cmp
jnp
stc
and
fisttp
mov
ja
mov
and
cmp
add
jnp
ja
test
lea
cmp
jbe
inc
test
jns
movs
jbe
jae
xchg
lahf
and
ror
mov
mov
ret
or
rcl
jbe
push
fisttp
jp
jne
out
jge
sub
les
mov
popa
mov
inc
enter
ss
cmp
mov
jmp
sub
fs
jmp
mov
xor
jbe
inc
test
jns
lea
(bad)
mov
mov
push
sbb
push
out
mov
mov
xchg
sub
pop
call
hlt
out
call
dec
int3
jmp
inc
popa
in
sbb
pop
enter
mov
inc
cmp
mov
out
loopne
dec
push
xor
shr
ds
outs
pusha
cmp
adc
xor
mov
cmp
imul
scas
mov
mov
add
std
push
dec
ss
jl
aam
dec
push
popa
loopne
test
inc
nop
(bad)
loop
repnz
pusha
mov
mov
mov
pushaw
mov
repnz
mov
(bad)
test
in
popa
loope
fisttp
fldenv
std
call
ret
mov
xchg
sbb
ss
aam
push
cmp
cmps
xchg
lds
repnz
mov
mov
cmps
push
mov
push
dec
xlat
cmps
int
cmps
cmc
mov
cmps
xchg
lds
cmps
xchg
lds
stos
cdq
lds
cmps
xor
lds
mov
pop
mov
mov
(bad)
mov
mov
ret
jb
mov
ins
mov
dec
imul
dec
xchg
fsub
ins
arpl
mov
aas
jge
push
(bad)
(bad)
xchg
xchg
lahf
inc
lea
lahf
inc
xchg
cli
fldcw
dec
mov
cmp
stc
push
icebp
or
push
mov
cdq
fs
mov
fs
mov
mov
xor
shl
outs
cmp
pop
mov
push
cmp
adc
add
je
mov
pop
call
leave
out
and
inc
jmp
pop
jb
xchg
mov
dec
enter
push
mov
cld
mov
rol
out
sbb
fld
or
and
dec
inc
jo
cmps
push
push
fadd
jb
push
add
inc
dec
push
xor
sub
inc
into
addr16
stos
adc
(bad)
mov
cld
mov
fstp
sub
fist
repnz
and
stc
in
int
loope
icebp
or
push
mov
fwait
lods
int
ja
push
mov
femms
cmp
push
push
(bad)
in
call
push
sti
push
leave
arpl
pushf
xor
mov
es
cmp
xor
dec
call
pop
test
fidiv
outs
adc
repz
cmps
int3
mov
xor
das
and
int
pop
mov
and
fsub
jns
fdivr
fisttp
outs
jnp
xchg
and
fsubr
fnstcw
aaa
xchg
(bad)
jg
xor
outs
mov
ds
test
and
fsub
jns
fcom
jns
fsub
jns
fsub
jns
fsub
sub
mov
and
fsubr
fdiv
jns
xchg
and
fadd
fcomp
jae
mov
fsub
jns
fsub
jns
fsubr
mov
and
sbb
mov
jns
fsub
popf
(bad)
outs
ja
aaa
das
sahf
xchg
xchg
push
out
xchg
adc
jns
xchg
and
fsub
jns
aad
jns
fsub
jns
fsub
jge
fsubr
sbb
and
cld
sbb
jns
fcomp
fcomp
outs
ss
(bad)
loop
sbb
jns
fsub
sub
fsub
sub
push
and
fisub
sub
fmul
aaa
sub
and
fisub
sub
fmul
aaa
and
repz
stos
(bad)
aaa
sub
outs
repz
cmp
xchg
ss
imul
xor
iret
xchg
mov
cdq
jae
(bad)
in
jae
mov
mov
or
jae
(bad)
in
jae
mov
mov
enter
(bad)
in
jae
mov
retf
call
cmp
mov
dec
jmp
imul
(bad)
pop
imul
lahf
and
and
loope
push
cmp
push
push
std
das
scas
adc
repz
or
(bad)
sub
push
fnstcw
xor
or
shr
les
push
into
cmp
dec
mov
ds
std
lods
mov
mov
push
rcl
leave
fld
rcl
adc
dec
fcmovb
xor
push
repz
cs
repz
lock
cmps
sub
sbb
fld
or
repnz
ins
add
xor
adc
popa
and
inc
push
add
push
inc
mov
imul
inc
inc
adc
push
out
retf
adc
or
mov
dec
test
jo
iret
jge
cmp
xchg
mov
push
fidivr
lods
mov
retf
add
mov
pop
jecxz
sub
mov
mov
ret
pop
lahf
sbb
dec
call
pop
shr
cmp
aam
fistp
xor
mov
xor
mov
mov
xor
sub
add
cmp
icebp
xchg
jne
mov
fdiv
mov
scas
cmp
icebp
fidiv
mov
fsubr
mov
mov
fdivp
xchg
jne
mov
fdiv
mov
into
cmp
icebp
fidiv
mov
xor
fsub
xchg
jne
mov
fmul
xchg
pop
push
ds
mov
mov
dec
jne
fdivr
fdiv
mov
aad
xchg
repz
cmp
repz
pop
inc
repz
cmp
out
cmp
and
xchg
cmp
xlat
add
test
xchg
cmp
repz
or
add
xchg
cmp
icebp
xchg
cmp
repz
sub
push
and
mov
fadd
mov
cmp
xchg
out
cmp
repz
cmp
inc
xchg
repz
xchg
mov
arpl
pop
and
add
mov
fild
aaa
fs
cmp
test
adc
xchg
push
xor
mov
pop
jne
mov
fdivr
pop
jae
cmp
icebp
xchg
jne
mov
fdiv
fidivr
cmp
mov
mov
mov
fdiv
cmc
jmp
inc
repnz
or
in
jne
mov
fdiv
cmc
jmp
inc
repnz
test
shl
fsub
xchg
jne
mov
fdivr
push
mov
fdiv
fidiv
mov
fmul
xor
fdiv
xchg
jne
mov
jno
fdiv
fidiv
mov
xor
fdiv
xchg
jne
mov
fdivr
xchg
push
dec
int
lock
daa
sti
cmp
jge
jne
mov
fdiv
mov
xlat
jne
mov
fdivr
fisubr
jne
mov
fdiv
mov
sbb
mov
fsub
xchg
push
shl
fidiv
mov
push
jne
mov
fdiv
mov
fxch
pop
lock
and
xor
mov
int3
jne
mov
fdivr
fimul
fdiv
mov
fmul
pop
mov
fwait
sbb
mov
mov
mov
xchg
jne
mov
fdiv
cmc
jmp
inc
repnz
sub
cmp
cmp
push
xchg
jne
mov
fsub
push
gs
lods
nop
out
mov
(bad)
and
mov
fadd
lds
and
mov
fcomp
and
xor
ja
sti
and
cmp
repz
cmp
aaa
sbb
add
xchg
shl
inc
push
mov
mov
loop
mov
popf
int3
cmp
mov
mov
cmp
mov
sbb
pop
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
std
mov
cmp
mov
std
mov
xor
dec
(bad)
adc
cmc
int
stc
push
xchg
xchg
jmp
cmp
ret
shl
pop
inc
jg
xor
aad
dec
cmp
pop
aad
popa
cdq
push
mov
imul
jmp
xor
clc
imul
add
push
das
sub
mov
adc
push
scas
push
push
add
fidivr
aas
mov
std
test
adc
mov
xchg
xor
sbb
dec
cmp
pusha
mov
mov
nop
leave
xchg
mov
ret
inc
inc
xor
pop
cmp
sbb
push
dec
sbb
lock
pop
lds
xchg
loope
dec
fsubr
mov
xor
(bad)
mov
xchg
push
mov
fcom
pop
inc
movs
sbb
cmps
imul
mov
or
fild
adc
mov
push
in
popa
adc
dec
(bad)
mov
cmp
inc
push
pop
xor
fimul
pop
in
popf
ret
pop
jp
adc
push
jmp
or
scas
shr
jbe
ret
pop
mov
mov
data16
out
jecxz
sub
fwait
lods
std
lods
mov
sbb
cmp
inc
pop
add
adc
cmps
fistp
ss
or
les
dec
sahf
aam
das
sahf
aam
cs
aam
cs
aam
cs
dec
in
inc
sub
jnp
jns
pop
adc
pop
pop
sti
ds
or
mov
pop
dec
mov
out
xor
sbb
loop
fs
mov
or
sbb
sub
xchg
add
xor
div
imul
inc
jl
(bad)
arpl
lods
mov
in
das
xchg
and
rcr
mov
pusha
sahf
aad
inc
bound
sar
bound
in
das
sahf
aad
inc
add
call
loope
cdq
mov
clc
xchg
xchg
in
das
arpl
mov
loope
add
cmp
in
das
sahf
aad
(bad)
mov
sar
push
aam
das
scas
cwde
ret
call
rcr
mov
pusha
(bad)
lahf
test
and
cli
cmp
rcr
mov
rcl
out
rcr
mov
lods
lahf
cwde
ds
mov
rcl
out
rcr
mov
pusha
sbb
out
cli
dec
jmp
imul
rcr
mov
loope
call
push
pushf
mov
loope
call
clc
mov
loope
call
js
cs
fdivr
nop
cwde
mov
rcr
mov
pop
rcr
mov
adc
rcr
mov
and
sar
stc
fst
rcl
xor
sub
retf
adc
push
aam
fsubp
push
out
jmp
stc
fimul
adc
cs
aam
push
adc
es
lahf
je
cs
inc
push
cmp
cmp
mov
jnp
cmp
mov
lods
std
mov
cs
cmp
mov
dec
fistp
xor
jg
sbb
aad
dec
cmp
pop
dec
mov
(bad)
outs
rcl
xchg
and
pop
xor
push
add
mov
ss
dec
es
les
jmp
repnz
rcl
enter
stos
fs
pop
aad
cld
mov
ret
pop
aas
mov
std
inc
shl
fst
push
inc
jp
xor
dec
xchg
mov
repnz
fwait
lods
cmp
(bad)
js
or
push
out
push
dec
push
nop
aad
loope
std
mov
mov
ret
inc
pop
out
push
add
clc
inc
into
xchg
jg
repnz
xor
dec
ins
push
jmp
jmp
(bad)
cs
in
iret
jp
femms
cmp
sub
daa
repz
popa
fild
push
inc
xchg
std
popf
lods
cmp
inc
movs
mov
dec
xchg
jge
jg
aad
retf
repz
dec
(bad)
cmps
rol
adc
scas
jno
push
inc
mul
dec
xor
add
sahf
dec
(bad)
(bad)
call
pop
retf
adc
out
arpl
scas
in
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
fxch
mov
in
(bad)
push
mov
mov
ftst
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
aam
ins
or
inc
ins
mov
or
ret
ins
(bad)
or
fimul
sub
in
push
or
or
mov
or
ret
ins
(bad)
or
fimul
sub
fimul
in
ret
ins
push
or
sahf
or
or
ins
stos
or
fimul
je
mov
sub
mov
sub
in
push
or
or
mov
or
ret
ins
(bad)
or
sahf
or
ins
(bad)
or
ins
push
or
dec
or
ror
fs
(bad)
or
ins
pop
or
call
ins
push
or
call
ins
call
ins
ret
ins
fimul
fs
into
or
ins
pop
or
call
ins
push
or
ret
ins
(bad)
or
ins
push
or
pop
or
or
ins
stos
or
mov
xor
sub
je
mov
fs
fimul
xor
jo
(bad)
or
ins
mov
outs
mov
je
mov
sub
pusha
ins
fimul
push
ins
call
ins
fimul
inc
ins
mov
or
fimul
sub
fimul
in
ret
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
ins
call
ins
mov
shr
ins
mov
sub
call
ins
fimul
jo
(bad)
or
or
xchg
or
stos
or
scas
or
ins
push
or
ins
push
or
ins
push
or
ins
push
or
mov
js
stos
or
ins
jb
inc
ins
push
or
into
or
ins
ret
ins
ror
je
(bad)
or
ins
out
push
ins
mov
push
ins
mov
or
ins
push
or
or
mov
or
into
or
ins
push
or
ins
scas
mov
inc
ss
imul
and
repz
ror
in
ror
stos
and
stos
jae
inc
cmp
imul
and
stos
jae
inc
cmp
mov
ins
push
or
stos
jae
inc
cmp
mov
stos
and
repnz
out
or
invd
in
or
stos
and
stos
and
push
outs
inc
pop
sub
sbb
in
out
or
ins
outs
call
test
adc
stos
and
stos
and
jmp
xor
in
(bad)
call
mov
or
in
in
adc
and
stos
arpl
fdivr
or
ins
stos
das
sar
push
mov
dec
hlt
in
aam
stos
and
stos
and
xchg
jmp
and
stos
and
push
inc
inc
in
in
stos
and
stos
and
stos
iret
inc
inc
in
mov
fist
hlt
lds
push
or
mov
pop
test
adc
stos
and
stos
and
repz
xchg
adc
ins
out
stos
and
in
inc
stos
dec
ins
push
or
mov
pop
test
adc
stos
and
stos
and
or
sub
and
stos
lahf
inc
inc
or
idiv
stos
and
stos
inc
inc
inc
stos
and
inc
stos
and
stos
mov
in
out
stos
and
sub
inc
inc
inc
test
push
push
test
or
and
stos
and
in
out
jecxz
and
imul
in
stos
and
in
inc
stos
dec
ins
push
or
mov
pop
test
adc
stos
and
push
inc
inc
in
call
inc
stos
iret
inc
inc
in
push
sbb
cmp
shr
lahf
inc
inc
in
call
inc
stos
iret
inc
inc
in
push
sbb
cmp
shr
and
stos
and
or
or
and
stos
and
in
inc
stos
dec
ins
push
or
mov
pop
test
adc
stos
and
stos
and
push
inc
inc
in
in
or
and
stos
iret
inc
inc
in
push
sbb
cmp
shr
and
push
inc
inc
in
in
or
and
stos
iret
inc
inc
in
push
sbb
cmp
shr
addr16
inc
in
in
or
jne
pop
in
out
or
and
stos
and
stos
and
stos
jae
inc
push
ins
sbb
hlt
ins
push
or
and
stos
pop
inc
inc
push
ins
sbb
inc
inc
or
in
in
or
ins
fild
std
(bad)
push
test
in
out
sub
repnz
or
(bad)
repnz
test
adc
stos
and
stos
and
cld
(bad)
adc
in
push
or
and
stos
and
cli
jp
inc
in
es
ins
push
sbb
and
fmul
invd
in
es
(bad)
repnz
or
xchg
in
or
mov
cmc
in
out
or
and
adc
mov
in
out
or
mov
out
sbb
cmps
or
ins
push
in
stos
and
stos
and
stos
and
sar
or
ins
push
jmp
xchg
dec
mov
in
or
push
stos
and
add
xor
stos
and
stos
xchg
inc
inc
add
xor
stos
and
stos
xchg
inc
inc
add
adc
cmc
in
rcl
stos
and
stos
xchg
inc
inc
add
adc
cmc
in
rcl
stos
and
stos
and
stos
iret
inc
inc
in
push
sbb
cmp
shr
and
push
inc
inc
in
in
or
add
in
or
and
stos
arpl
fdivr
or
ins
repnz
mov
cmp
movs
pop
or
add
mov
or
pop
movs
les
or
push
push
dec
mov
pop
test
adc
stos
and
stos
and
call
or
ins
bound
mov
jmp
push
push
or
ins
push
xor
sbb
call
inc
stos
and
shr
(bad)
popa
in
push
jo
(bad)
adc
in
push
or
and
int3
(bad)
adc
in
push
or
and
sar
inc
in
ss
(bad)
dec
test
mov
push
jmp
ins
scas
adc
and
in
or
xchg
aad
push
jne
aad
and
stos
jmp
inc
mov
ins
jmp
inc
inc
inc
push
ins
fild
and
out
inc
imul
and
stos
and
sahf
adc
xchg
dec
sbb
loope
push
mov
mov
icebp
push
cmc
in
call
inc
stos
and
dec
push
scas
cwde
aas
xchg
or
mov
and
adc
jmp
inc
xor
mov
or
(bad)
repnz
test
adc
stos
and
stos
and
xor
and
test
or
stos
and
test
or
xor
cmc
mov
mov
or
jne
fucom
mov
in
and
mov
enter
inc
stos
and
adc
call
inc
stos
mov
in
push
sbb
and
stos
and
sbb
fsubrp
cwde
mov
pop
test
adc
stos
and
stos
and
(bad)
in
inc
inc
adc
cmp
enter
stos
and
stos
and
stos
and
in
add
dec
push
scas
inc
jmp
cmp
in
stos
and
stos
and
bound
inc
enter
stos
and
stos
and
in
add
(bad)
data16
loopne
push
cmp
ins
cmp
sbb
div
xchg
mov
ficomp
cmp
or
ins
sub
and
stos
and
(bad)
call
add
stos
and
inc
stos
and
stos
arpl
xor
test
leave
add
sbb
repnz
cmp
or
ins
push
shr
and
sbb
inc
jmp
mov
pop
test
adc
stos
and
sbb
inc
inc
cld
ins
xchg
aam
and
stos
and
inc
int3
inc
inc
in
jmp
dec
mov
pop
test
adc
stos
and
inc
lods
inc
inc
in
jmp
in
mov
or
cmp
in
stos
and
stos
and
push
mov
fild
and
stos
and
sub
inc
test
and
stos
and
stos
and
in
cli
or
push
fld
ins
sbb
movs
les
cmc
in
call
inc
stos
and
stos
jmp
inc
xlat
imul
cmp
push
mov
ficomp
cmp
or
ins
mov
stos
and
stos
and
stos
and
or
mov
stos
and
dec
test
test
or
stos
and
stos
and
cli
jp
inc
in
mov
loopne
add
stos
and
push
xchg
inc
inc
in
(bad)
loopne
and
stos
and
stos
and
in
and
test
or
stos
and
in
jmp
mov
sahf
sti
in
out
out
stos
and
stos
and
retf
inc
in
push
loope
and
jmp
in
test
or
stos
and
stos
and
iret
mov
sahf
stos
inc
les
or
(bad)
xor
jmp
mov
push
cmc
in
call
inc
stos
and
mov
inc
stos
sbb
push
loope
ins
scas
call
inc
inc
stos
das
inc
inc
or
scas
sbb
push
test
in
add
or
fisttp
in
or
gs
and
stos
cmovae
mov
retf
and
stos
and
push
inc
inc
in
ror
stos
and
repz
ror
in
ror
stos
and
repz
inc
pop
in
ror
in
or
stos
and
repz
in
ror
in
or
stos
and
stos
pop
inc
inc
add
jnp
dec
in
pop
(bad)
loope
dec
mov
in
call
inc
stos
and
sti
imul
ins
push
or
xchg
sbb
stc
mov
pmaddwd
and
adc
and
stos
lahf
inc
inc
add
and
test
or
stos
and
retf
inc
in
(bad)
out
stos
and
stos
and
hlt
ins
jmp
mov
sahf
sti
in
(bad)
out
stos
and
stos
and
out
cmc
add
in
add
test
or
test
stos
and
ja
inc
(bad)
in
out
out
stos
and
stos
and
stos
and
cmp
fld
and
stos
and
push
mov
test
or
stos
and
stos
and
add
sub
or
stos
and
repz
in
ror
in
in
stos
and
stos
jae
inc
add
sbb
in
push
or
stos
and
repz
inc
pop
in
out
or
and
stos
and
stos
and
stos
pop
inc
inc
add
jnp
dec
in
(bad)
in
lds
mov
push
cmc
in
call
inc
repz
pop
in
out
in
or
stos
and
stos
and
stos
iret
inc
inc
in
push
loope
ins
scas
mov
bound
test
in
out
out
sbb
cmps
or
ins
(bad)
in
stos
and
stos
and
cli
jp
inc
in
(bad)
loopne
xchg
icebp
imul
and
or
scas
sbb
mov
or
ins
fucomi
in
or
gs
and
stos
and
xor
call
inc
stos
and
push
ins
inc
pop
fs
fistp
pusha
push
or
xchg
push
mov
stos
and
test
inc
stos
arpl
xor
test
rol
repz
or
push
out
push
in
(bad)
or
cdq
bswap
in
aad
sbb
sbb
aam
test
adc
test
repz
mov
cld
in
mov
popf
cmp
nop
out
std
div
movs
xlat
mov
xor
push
add
mov
jmp
test
retf
xor
loop
ror
xchg
ss
daa
lock
std
add
mov
dec
fcmovb
mov
mov
adc
jmp
ds
cld
dec
call
mov
cdq
jmp
jmp
rol
fcmovb
jge
icebp
(bad)
push
out
xor
mov
fstp
or
push
repz
mov
shl
xor
or
mov
push
push
ret
pop
add
adc
mov
push
leave
lahf
sbb
nop
rol
xchg
in
mov
pop
add
dec
cli
cmps
in
push
aas
test
iret
add
pop
mov
push
out
movs
push
jp
xor
dec
xor
push
inc
repz
out
dec
call
pop
cmp
xchg
mov
inc
push
mov
bound
push
loope
xor
rol
(bad)
movs
add
ret
pop
sahf
and
jmp
idiv
dec
cmp
inc
and
xchg
and
int3
stc
outs
cmp
inc
mov
or
movs
cwde
and
mov
xchg
mov
jae
ss
xchg
ss
xchg
ss
inc
mul
out
mov
jae
mov
mov
pop
jmp
mov
pop
out
mov
sub
sub
inc
loop
mov
cs
push
(bad)
pop
out
mov
push
sub
sti
cmps
neg
cmp
push
(bad)
sub
dec
div
xchg
mov
loop
jmp
mov
inc
(bad)
out
xor
jae
dec
mov
mov
jle
and
div
mov
mov
push
inc
jae
out
sub
push
(bad)
outs
(bad)
push
jmp
jae
shl
add
out
xor
out
add
jae
add
sub
sub
sub
pop
jmp
mov
pop
jmp
adc
out
sub
sub
pop
sti
daa
neg
cmp
aaa
jecxz
jae
call
adc
out
jbe
cmp
add
pop
(bad)
es
pop
(bad)
xchg
cli
cs
pop
mov
ss
push
sbb
sub
push
jecxz
jb
aaa
sub
xchg
sub
aaa
cli
and
pop
fidiv
out
jae
add
or
(bad)
retf
push
(bad)
es
(bad)
out
cmps
sub
xchg
sahf
pop
scas
cs
jae
pop
aaa
jle
push
repnz
push
ss
cmps
dec
into
xchg
cli
arpl
add
xor
pop
xchg
xchg
bnd
inc
loop
mov
cmp
jae
jb
imul
push
jb
(bad)
xor
or
das
jb
jmp
mov
pop
aaa
push
test
aaa
(bad)
xchg
(bad)
jae
add
pop
cli
pop
mov
jb
jmp
inc
mov
dec
jb
(bad)
aaa
(bad)
adc
out
cmp
push
ret
out
jb
dec
out
(bad)
jnp
xchg
mov
inc
not
mov
cmp
xchg
xchg
xchg
add
pop
stos
pop
sti
dec
out
aaa
inc
(bad)
pop
xchg
arpl
dec
sar
xchg
add
out
pop
aaa
es
xchg
ja
xchg
mov
ret
imul
loop
jb
repnz
adc
inc
cmps
or
inc
out
jmp
neg
bound
xchg
jmp
xchg
cmps
arpl
es
ret
sub
mov
sub
cli
sub
jb
push
out
out
ds
xchg
xchg
aas
stos
mov
and
pop
loop
(bad)
pop
mov
add
jae
push
mov
sbb
push
mov
cli
jae
jb
jb
sbb
push
out
cmps
inc
cmps
xchg
stos
jae
or
das
jb
mov
das
jb
call
inc
and
pop
aaa
push
out
out
imul
mov
out
pop
aaa
push
into
sbb
jae
inc
xchg
xor
xchg
and
es
jae
and
aaa
mov
push
(bad)
and
pop
aaa
jle
add
sub
inc
xchg
arpl
pop
mov
arpl
mov
dec
jb
jmp
pop
xchg
ja
sub
ja
sub
push
ret
out
or
jbe
push
scas
arpl
pop
fwait
daa
neg
mov
jb
sar
cli
adc
bound
jb
pop
retf
push
not
mov
xor
pop
stos
xchg
mov
arpl
or
add
inc
adc
dec
mov
add
es
sub
pop
aaa
ss
mov
pop
(bad)
adc
arpl
add
inc
out
and
das
out
sub
out
mov
out
jb
dec
out
mov
das
(bad)
sub
dec
(bad)
pop
mov
arpl
push
cli
pop
jb
cli
and
inc
aaa
pop
cmps
mov
add
aaa
cs
sub
ss
mov
add
aaa
(bad)
inc
mov
jae
aas
mov
jb
xchg
sub
cs
mov
sub
jae
inc
mov
ds
add
cli
arpl
cmp
add
mov
out
mov
jb
mov
into
sub
out
jb
outs
into
adc
push
out
mov
dec
out
fwait
ja
es
sti
xchg
fisubr
dec
mov
pop
jb
mov
out
adc
cs
(bad)
jg
xor
bound
xchg
xchg
inc
mov
add
pop
mov
adc
sub
xchg
mov
pop
into
sbb
jg
xor
out
xchg
sahf
imul
(bad)
pop
rcr
jecxz
jb
mov
ja
jnp
jbe
pop
xchg
adc
jae
jb
push
imul
mov
push
dec
xchg
and
cmps
psadbw
mov
mov
adc
imul
aaa
push
out
xchg
dec
cmps
xchg
xchg
pop
mov
inc
aaa
pop
out
cmps
outs
(bad)
cmp
inc
(bad)
cmp
out
jb
pop
loop
(bad)
aaa
out
mov
push
into
xchg
mov
arpl
and
pop
mov
pop
sti
dec
out
xchg
out
pop
aaa
jbe
xchg
xchg
(bad)
jae
push
xchg
arpl
add
ss
mov
jae
pop
mov
sti
sub
out
cs
ds
cmps
jg
xchg
sahf
jae
cs
pop
shl
mov
not
xchg
sbb
cs
pop
out
into
xchg
out
retf
inc
out
adc
out
add
inc
retf
das
neg
jb
xor
(bad)
out
cmps
jnp
push
aaa
(bad)
(bad)
xchg
mov
inc
out
xchg
mov
arpl
pop
cmps
cmp
adc
ja
sub
out
pop
mov
jb
shl
push
mov
mov
sub
outs
ret
push
out
mov
out
jb
jbe
ss
dec
into
cs
sub
add
imul
aaa
ss
cmps
push
into
xchg
sbb
xchg
inc
loop
aaa
jp
pop
xchg
jg
or
inc
retf
outs
ret
out
push
ss
pop
xchg
cli
arpl
jb
push
not
cs
repnz
mov
push
jb
xlat
pop
mov
jbe
sub
jbe
shl
and
adc
aaa
rcl
jmp
(bad)
sub
push
cli
jg
pop
jb
(bad)
imul
inc
pop
sti
out
adc
out
pop
aaa
inc
out
out
(bad)
xor
out
dec
jmp
xchg
sahf
jae
push
mov
das
jb
aaa
ds
cs
cmp
xchg
mov
das
xchg
xchg
stos
arpl
push
mov
pop
jb
mov
arpl
xor
jnp
inc
jecxz
retf
out
pop
xchg
dec
jb
mov
and
pop
jb
shr
mov
stos
out
pop
aaa
jb
xor
imul
jmp
xchg
stos
pop
retf
inc
mov
sub
out
cs
sub
pop
xchg
xchg
xchg
pop
mov
xchg
jmp
pop
out
jb
jmp
xchg
mov
arpl
push
mov
aas
mov
jb
(bad)
sub
pop
jecxz
jb
push
mov
pop
aaa
jp
or
push
test
pop
ret
push
not
mov
aaa
jb
(bad)
jg
inc
xchg
add
(bad)
jae
add
pop
(bad)
dec
mov
das
mov
mov
jmp
aaa
cmp
pop
mov
ds
mov
pop
jb
mov
out
cs
jle
pop
out
cmps
xchg
cli
push
out
xchg
pop
mov
mov
jb
xchg
xchg
(bad)
push
out
fwait
jae
pop
aaa
inc
retf
aaa
into
xchg
sahf
aaa
imul
(bad)
arpl
adc
cs
cs
ss
push
mov
inc
out
out
not
sub
jmp
das
mov
cmp
and
das
out
sti
out
pop
aaa
es
mov
bound
cli
cs
pop
aaa
jb
cmps
sub
xchg
loop
test
(bad)
and
xor
xchg
mov
pop
into
pop
jmp
jb
inc
inc
mov
dec
out
test
cmp
pop
out
cmp
jae
jb
push
jbe
push
mul
aaa
jb
dec
loop
stos
jae
sub
inc
mov
dec
(bad)
inc
mov
xchg
loop
mov
sbb
pop
jmp
das
mov
push
aaa
jb
or
dec
not
mov
arpl
xchg
jae
push
mov
aaa
mov
jb
aaa
es
sti
aaa
(bad)
add
inc
retf
push
into
sbb
pop
test
scas
dec
cmp
jbe
pop
xchg
adc
out
cs
inc
neg
out
(bad)
xchg
scas
pop
mov
xchg
(bad)
jbe
ja
push
xchg
ja
push
xchg
sbb
pop
ret
out
inc
cmps
jae
add
out
es
arpl
inc
jmp
push
xchg
pop
mov
sub
imul
aaa
push
sbb
jb
inc
imul
mov
pop
xchg
arpl
sbb
jae
ss
inc
mov
xchg
bnd
pop
out
out
aaa
add
pop
jecxz
jb
aaa
jbe
xor
outs
into
div
cs
inc
(bad)
inc
(bad)
out
pop
aaa
pop
out
out
add
push
cmps
das
out
xchg
jb
sti
jae
pop
mov
sti
pop
aaa
ds
fwait
imul
repnz
push
(bad)
cs
mov
pop
(bad)
adc
pop
ret
pop
not
xchg
pop
ret
inc
retf
jae
xchg
mov
pop
retf
daa
scas
push
mov
das
jb
(bad)
push
stos
sub
jbe
dec
jmp
cs
sub
add
arpl
xor
out
adc
jae
mov
add
out
pop
aaa
ss
out
not
xchg
jae
dec
mov
jb
mov
das
jb
aaa
ss
(bad)
daa
into
pop
mov
xor
out
push
repnz
mov
push
xchg
pop
mov
xchg
mov
mov
sub
arpl
push
rol
jb
out
jb
pop
out
out
(bad)
pop
mov
jbe
sub
out
xchg
out
mov
or
das
loop
mov
mov
add
arpl
pop
sti
dec
mul
shl
jmp
aaa
jb
sub
sub
fisttp
call
sub
pop
mov
pop
mov
add
imul
xchg
pop
out
daa
mov
jnp
inc
xlat
out
xchg
shl
mov
pop
xchg
add
arpl
pop
jecxz
jb
call
xor
out
add
imul
jmp
sti
add
jbe
inc
loop
cmps
xchg
div
cmps
cmp
das
jb
(bad)
daa
out
add
ds
scas
arpl
xor
out
xchg
mov
mov
pop
(bad)
push
jb
mov
inc
out
inc
out
jb
mov
mov
pop
mov
jb
imul
dec
mov
(bad)
xchg
stos
aaa
out
xchg
pop
loop
aaa
push
ret
ja
xchg
jmp
pop
aaa
(bad)
(bad)
push
mov
inc
div
mov
mov
sbb
out
out
pop
mov
xchg
mov
fiadd
xor
pop
mov
jb
aaa
push
(bad)
sub
out
xchg
mul
inc
xchg
push
mul
aaa
pop
cmps
cmp
out
sub
pop
(bad)
adc
dec
jb
xor
cmp
bound
pop
ss
push
imul
xchg
mov
inc
ret
out
sub
sub
adc
out
add
ja
sub
push
ret
out
daa
xchg
aaa
jb
mov
out
pop
aaa
ss
out
ret
out
inc
aaa
jb
dec
sar
xchg
dec
sar
xchg
xor
out
cs
ss
cmps
dec
into
pop
cli
(bad)
retf
out
xchg
mov
arpl
adc
jae
pop
xchg
arpl
shl
push
repnz
xchg
sahf
and
aaa
mov
add
xor
pop
cli
out
push
sub
pop
jecxz
jb
xchg
push
ret
inc
mov
dec
xchg
add
aaa
inc
mov
pop
aaa
push
pop
scas
sub
pop
mov
mov
jae
add
pop
(bad)
outs
into
pop
mov
jb
(bad)
aaa
cmps
mov
daa
shl
mov
jb
(bad)
das
stos
ss
out
adc
aaa
(bad)
push
xchg
out
pop
aaa
jbe
add
and
cs
ds
push
cli
and
pop
mov
das
jb
call
sub
inc
(bad)
pop
xchg
imul
(bad)
sub
push
mov
das
jb
sbb
jmp
add
aaa
jb
mov
dec
jb
mov
xor
jae
cmp
add
cmp
jb
pop
mov
sub
sbb
jae
pop
mov
pop
mov
jb
stos
imul
xlat
out
pop
aaa
ss
stos
jnp
jb
pop
mov
inc
mov
jb
add
push
mov
pop
aaa
pop
out
push
mul
mov
(bad)
out
xor
neg
xchg
push
(bad)
adc
out
and
pop
cmps
inc
xchg
pop
into
or
inc
retf
push
scas
pop
repnz
inc
rcr
sub
dec
out
xchg
ja
es
neg
imul
aaa
push
test
sub
pop
cli
sub
mov
sub
pop
imul
push
shl
inc
scas
out
mov
xor
out
xchg
div
xchg
push
xchg
inc
mov
pop
jb
aaa
jp
xchg
add
pop
mov
pop
mov
das
xchg
pop
jb
(bad)
das
stos
dec
mov
jb
call
push
xchg
push
mov
ja
add
test
push
fwait
xor
xchg
xchg
xor
pop
cmps
inc
mov
sub
push
mov
scas
xchg
stos
push
ret
inc
mov
xchg
cli
imul
mov
das
jb
stos
das
loop
mov
pop
mov
arpl
adc
pop
mov
xor
out
add
sub
pop
mov
xor
das
mov
jb
xchg
aaa
div
bound
(bad)
push
xchg
cs
out
pop
aaa
es
(bad)
imul
xchg
imul
mov
or
pop
out
xchg
jb
(bad)
jae
xchg
(bad)
ja
push
mov
sbb
push
ret
jae
add
sub
xchg
mov
inc
out
xchg
mov
arpl
add
arpl
inc
aaa
pop
into
adc
ja
pop
cli
inc
jb
call
jb
cs
and
xor
imul
cmps
sub
and
jae
inc
mov
push
jb
mov
add
aaa
push
out
out
into
adc
(bad)
retf
arpl
inc
sti
out
xchg
sahf
inc
(bad)
and
inc
(bad)
push
mov
pop
(bad)
adc
out
xor
arpl
xchg
jae
xchg
xchg
aas
out
mov
sbb
push
into
xchg
scas
ja
push
mov
(bad)
pop
mov
jb
mov
dec
mov
sub
outs
out
out
(bad)
xchg
mov
xchg
push
mov
jg
mov
sub
shl
jmp
(bad)
(bad)
add
sub
pop
sti
inc
into
xchg
xor
aaa
inc
retf
daa
cmps
pop
aaa
inc
out
fwait
ja
pop
sti
pop
out
loop
cmps
inc
xchg
xor
mov
das
jb
mov
sub
xchg
ja
xchg
test
xchg
pop
jecxz
jb
mov
loop
(bad)
out
pop
mov
mov
inc
sar
adc
ja
sub
ja
or
arpl
dec
out
add
cmp
inc
aaa
bound
xchg
xor
add
pop
retf
and
mov
out
xchg
imul
ss
jb
and
sub
xchg
out
out
sub
xchg
mov
arpl
pop
mov
sub
pop
mov
out
xchg
out
arpl
xor
jnp
adc
inc
call
push
neg
jae
xor
arpl
(bad)
sub
xor
aaa
out
mov
pop
cmps
cmp
adc
out
xchg
stos
jae
push
aaa
pop
into
and
out
add
and
add
push
cli
sbb
out
add
pop
cli
jbe
out
xchg
xchg
xchg
inc
xchg
jae
xchg
mov
arpl
push
repnz
mov
jae
aaa
xor
inc
push
add
jb
pop
cmps
inc
div
(bad)
out
cs
out
sti
out
push
sub
es
(bad)
(bad)
sbb
push
neg
pop
mov
jb
pop
ficom
out
(bad)
pop
aaa
jb
adc
arpl
xchg
mov
arpl
push
mov
jb
xchg
das
not
lahf
arpl
sub
daa
into
pop
mov
call
mov
inc
sti
out
xchg
out
stos
out
adc
inc
retf
push
into
xchg
cli
das
mov
add
inc
mov
xchg
mov
retf
pop
loop
aaa
sub
xor
out
pop
aaa
jp
add
imul
mov
out
pop
mov
jb
jmp
cli
inc
(bad)
bound
mul
mov
jb
inc
ret
inc
into
pop
push
xor
out
adc
jp
es
arpl
cs
sub
xor
jae
dec
sti
das
into
push
aaa
sub
mov
sub
xor
es
sti
add
pop
loop
scas
dec
out
xchg
out
es
pop
into
dec
mov
push
xchg
pop
xchg
arpl
push
scas
dec
out
aaa
cs
fbld
mov
xlat
das
scas
adc
out
xor
jae
cmp
inc
retf
pop
into
cs
out
add
imul
mov
sub
sub
push
xchg
push
xchg
xchg
mov
pop
cmps
jb
pop
out
sti
ja
xchg
(bad)
jae
cmp
pop
(bad)
adc
ja
inc
sti
jae
add
inc
loop
jecxz
cmps
xchg
mov
push
(bad)
push
mov
jb
mov
mov
add
push
(bad)
adc
inc
out
xchg
psadbw
bound
add
dec
(bad)
or
inc
out
sti
push
stos
es
not
sti
inc
(bad)
xchg
cli
pop
retf
xor
push
mov
jb
mov
inc
not
ss
inc
mov
jae
aaa
push
(bad)
pop
mov
(bad)
xchg
cli
aaa
out
mov
cs
xor
and
cmps
push
xchg
dec
cmps
pop
aaa
ss
mov
test
push
(bad)
xor
dec
xchg
adc
xor
push
mov
jb
aaa
cs
cs
cmp
xchg
mov
arpl
es
inc
mov
xchg
jmp
xchg
cli
cmp
push
mov
jb
call
aaa
mov
inc
mov
mov
inc
sti
xor
add
imul
(bad)
out
jb
jbe
sub
aaa
rol
sti
pop
mov
and
jb
cs
daa
out
aaa
xor
pop
xchg
xchg
(bad)
jb
push
(bad)
and
ss
bound
pop
aaa
push
cmps
push
mov
add
mov
out
add
ja
xor
out
cs
inc
into
cmp
push
into
pop
mov
push
not
sub
(bad)
daa
(bad)
sub
aaa
cli
push
xchg
push
jb
cmps
imul
cmps
out
cs
inc
neg
sub
pop
mov
cli
es
out
sub
out
add
jp
mov
daa
jecxz
jb
repz
es
inc
aaa
inc
mov
adc
jbe
and
rcr
push
neg
pop
out
jecxz
out
shr
(bad)
xor
out
xchg
cmps
aaa
xchg
sbb
das
jb
mov
loop
div
mov
pop
cmps
inc
not
(bad)
jae
adc
inc
(bad)
sbb
jae
push
rep
inc
cs
or
jb
sub
push
test
jg
pop
sti
daa
neg
out
xchg
jmp
cs
cs
and
push
cli
pop
mov
jmp
sti
pop
inc
out
sbb
out
pop
aaa
outs
out
xchg
sub
pop
mov
ja
xor
das
mov
out
ds
ret
push
jb
call
add
out
pop
shr
jae
out
pop
mov
jae
mov
pop
mov
sti
add
pop
fiadd
inc
(bad)
xchg
(bad)
arpl
sbb
push
jb
cmps
inc
out
and
xchg
out
retf
pop
retf
push
(bad)
pop
sti
das
out
mov
outs
cli
cmp
ja
adc
pop
into
es
xor
inc
aaa
jp
inc
out
ret
sub
sti
inc
retf
out
pop
xchg
imul
mov
mov
push
mov
retf
jnp
inc
out
(bad)
jb
(bad)
retf
bswap
xchg
cli
inc
out
cmp
or
inc
retf
ja
xor
push
test
and
sub
sub
cmps
push
not
mov
jae
mov
add
mov
das
jb
mov
retf
out
add
dec
(bad)
cmps
imul
jecxz
jb
(bad)
pop
mov
push
scas
pop
mov
sbb
pop
jb
mov
stos
es
out
push
(bad)
pop
fidiv
cs
cli
pop
xchg
pop
jecxz
(bad)
xchg
mov
out
sbb
arpl
rep
cli
xor
out
cs
jnp
dec
xchg
arpl
aaa
pop
mov
es
neg
daa
neg
daa
into
adc
arpl
add
arpl
mov
out
inc
shl
pop
xchg
out
cs
into
add
out
xchg
mov
mov
dec
neg
inc
aaa
pop
mov
pop
aaa
es
xchg
imul
(bad)
sub
add
inc
loop
xchg
aaa
mov
jb
repz
xchg
out
add
pop
mov
xchg
jmp
dec
mov
arpl
pop
aaa
jp
xchg
or
ja
es
push
mov
out
sub
es
sbb
das
loop
mov
add
jmp
(bad)
aas
mov
pop
retf
arpl
pop
jecxz
jb
aaa
pop
retf
aaa
(bad)
sbb
pop
(bad)
dec
mov
das
mov
mov
add
xor
xchg
cmps
daa
scas
adc
jae
add
ja
pop
out
out
mov
arpl
mov
inc
and
xor
jae
adc
das
(bad)
inc
jmp
sti
cs
ss
add
imul
mov
out
adc
out
pop
aaa
pop
into
inc
xor
xchg
jae
and
out
push
aaa
(bad)
retf
imul
mov
inc
out
(bad)
out
es
imul
(bad)
out
push
aaa
pop
ret
inc
mov
xor
jae
adc
out
sub
das
(bad)
or
outs
ret
out
pop
aaa
inc
ret
jae
xchg
mov
push
mov
mov
jb
(bad)
das
loop
mov
das
into
pop
cmps
out
xchg
scas
jg
or
add
shl
dec
mov
das
jb
fwait
ja
inc
cli
out
xchg
xchg
mov
out
out
add
es
daa
sar
mov
jb
mov
not
test
and
das
jb
aaa
pop
out
fwait
inc
into
xchg
jmp
daa
mov
sub
daa
xchg
pop
jb
mov
mul
aaa
jbe
jbe
outs
not
mov
out
das
mov
push
xchg
repnz
push
repz
es
mov
mov
das
(bad)
xchg
mov
xchg
mov
neg
pop
jb
aaa
pop
loop
jmp
mov
push
xchg
cmps
add
inc
(bad)
or
das
jb
mov
loop
mov
jb
aaa
ds
jmp
(bad)
sbb
out
push
mov
ss
out
stos
pop
jecxz
mov
dec
call
sbb
out
adc
dec
jb
jmp
stos
pop
mov
ja
adc
jae
xchg
(bad)
arpl
and
pop
loop
mov
(bad)
adc
add
push
ss
sub
sub
cs
push
div
mov
dec
mov
sub
out
xchg
cli
inc
out
mov
ja
sub
daa
mov
ud0
jae
mov
out
pop
mov
out
pop
xchg
add
mov
das
jb
xlat
ja
inc
mov
mov
inc
loop
xchg
cmp
aas
jae
mov
pop
jb
sti
pop
mov
xchg
stos
das
xchg
sbb
arpl
mov
xchg
xchg
cmp
pop
out
cs
add
pop
mov
sbb
pop
(bad)
or
aaa
mov
xchg
xchg
inc
xchg
adc
arpl
jmp
adc
inc
mov
sbb
jg
push
xchg
out
xchg
cli
dec
out
(bad)
daa
mov
xor
inc
retf
arpl
xchg
(bad)
push
inc
(bad)
xor
pop
aaa
push
sub
outs
mov
inc
xchg
dec
neg
mov
jb
(bad)
pop
retf
out
add
jp
sbb
out
sbb
push
imul
(bad)
jnp
adc
jp
push
mov
add
inc
mov
push
mov
jb
aaa
mov
pop
jecxz
jb
out
ret
out
pop
aaa
push
into
inc
push
not
mov
sub
mov
das
mov
inc
aaa
push
sub
jg
pop
aaa
jb
pop
xchg
imul
cli
sub
aas
mov
jb
aaa
test
into
sub
das
cli
add
out
cs
push
(bad)
xor
dec
xchg
xor
arpl
mov
mov
add
sub
jmp
shr
(bad)
out
add
pop
(bad)
pop
out
out
out
out
out
call
push
sub
jg
and
aaa
cmps
adc
out
and
imul
sahf
push
mov
mov
out
pop
aaa
jp
and
pop
jb
cli
add
push
ss
imul
mov
mov
adc
out
jb
dec
out
mov
(bad)
fidivr
xchg
daa
not
(bad)
sub
pop
sti
jnp
jb
out
xor
out
mov
out
adc
jb
cs
aaa
(bad)
xchg
mov
pop
xchg
and
pop
mov
xchg
xchg
pop
neg
jecxz
mov
inc
adc
repz
add
out
xchg
mov
pop
retf
pop
ret
(bad)
retf
inc
retf
jbe
inc
loop
mov
xchg
(bad)
es
cli
cmp
dec
sti
and
mov
out
jb
mov
or
ss
cmps
out
ss
jg
xchg
scas
dec
ret
das
(bad)
inc
mov
das
jb
shl
sub
xor
add
out
pop
repz
xchg
out
adc
cs
mov
not
fild
push
(bad)
jb
adc
out
jbe
cmp
dec
loop
scas
pop
repnz
xchg
xchg
xchg
arpl
mov
pop
and
xchg
shr
mov
pop
cli
out
dec
mov
cs
out
sub
push
mov
mov
inc
loop
mov
push
scas
arpl
sub
sub
dec
jmp
mov
out
mov
cs
shr
mov
out
add
jp
es
into
xchg
cmps
das
mov
push
jecxz
out
shl
push
xchg
out
pop
xor
jmp
sub
jle
pop
out
mov
inc
jmp
xchg
repnz
jle
and
pop
sub
pop
cmps
cmp
pop
and
adc
jle
inc
loop
mov
add
inc
xchg
xchg
bnd
push
repnz
sbb
pop
inc
aaa
bound
add
imul
jg
push
jmp
jb
(bad)
jb
xchg
xchg
sub
push
(bad)
xor
sti
and
push
(bad)
sub
ja
sub
aaa
xor
inc
out
cmps
push
xchg
push
mov
jb
(bad)
sub
sub
jae
es
sti
push
(bad)
jp
adc
jae
pop
aaa
jbe
pop
mov
jae
pop
mov
jb
out
fisub
xchg
sub
dec
mov
inc
out
sub
xchg
not
aaa
inc
(bad)
pop
repnz
pop
xchg
sub
aaa
outs
ret
es
inc
cli
cmps
xchg
out
mov
xchg
cmp
inc
aaa
jp
pop
mov
(bad)
adc
out
xchg
mov
jecxz
out
mov
xor
out
jb
mov
pop
jmp
jae
scas
pop
mov
dec
jmp
mov
jmp
push
(bad)
push
out
mov
jae
xchg
repnz
adc
cmp
pop
mov
jb
add
mov
ja
adc
jnp
xchg
xchg
scas
xor
pop
out
ss
jb
cs
inc
out
bnd
push
cli
es
inc
mul
mov
sahf
arpl
push
xchg
aaa
not
sti
out
sub
out
adc
(bad)
out
mov
cs
jmp
es
cli
push
inc
dec
mov
bound
pop
cli
bound
dec
cmp
pop
out
mov
pop
(bad)
mov
sub
out
add
pop
stos
pop
cli
es
jmp
push
jecxz
(bad)
pop
aaa
ss
jecxz
out
jecxz
(bad)
pop
loop
jb
cli
cmps
xchg
imul
cmps
jb
push
mul
aaa
inc
ret
and
inc
mul
mov
xchg
and
xor
push
aaa
push
neg
and
xchg
mov
inc
mov
add
imul
jmp
jae
cmps
jae
sbb
push
xchg
push
(bad)
and
pop
cli
out
push
mov
ja
inc
shl
adc
jbe
dec
(bad)
and
adc
add
loop
mov
push
xor
push
xchg
arpl
sub
out
sub
jae
push
div
push
mul
mov
jmp
dec
cli
cs
sub
out
sub
jae
xor
dec
out
aaa
jb
and
pop
mov
and
cs
inc
neg
jmp
pop
out
mov
pop
mov
into
xchg
cli
jg
push
mov
(bad)
xchg
imul
inc
jmp
pop
sti
daa
neg
and
push
(bad)
xor
sub
inc
mov
adc
out
add
das
jb
mov
dec
cmps
adc
jae
xchg
repnz
loop
repz
pop
(bad)
cmp
inc
jmp
xor
pop
loop
cli
inc
mov
xchg
arpl
inc
rcr
dec
xchg
and
dec
cli
es
adc
out
pop
fbstp
push
jmp
mov
out
mov
sbb
(bad)
cli
inc
loop
mov
sub
jae
adc
jb
ss
arpl
add
out
jae
add
aaa
pop
ja
mov
dec
mov
and
cmp
out
adc
inc
test
xor
es
imul
(bad)
jg
xchg
repnz
not
cmp
adc
das
(bad)
inc
sti
out
add
inc
retf
sub
out
stos
jae
cmp
inc
loop
mov
sub
sub
push
xchg
cmp
xor
push
mul
mov
mul
mov
cli
daa
mov
sti
jae
adc
out
sub
imul
(bad)
sub
out
sub
push
mov
mov
xchg
sbb
fwait
pop
retf
arpl
repz
retf
das
mov
add
pop
scas
adc
sub
adc
out
sub
sub
xchg
sub
inc
mov
mov
mov
rcl
pop
and
sub
arpl
pop
out
jb
mov
ja
pop
mov
cmps
sub
arpl
pop
cli
out
jae
cmp
xchg
mov
push
test
jb
(bad)
das
(bad)
sub
arpl
cmp
inc
out
mov
es
into
inc
jmp
mov
jb
cs
es
ret
out
sbb
outs
mov
pop
xlat
and
sub
inc
(bad)
sbb
pop
jb
mul
rcl
shl
mov
push
repnz
cli
cs
adc
xor
xchg
mov
inc
test
mov
sbb
das
(bad)
sub
jb
push
out
jae
(bad)
cmp
pop
out
mov
sbb
arpl
pop
xchg
push
ss
out
xchg
push
mov
out
inc
out
sub
pop
repz
into
xchg
out
mov
or
pop
out
xchg
out
add
arpl
mov
sub
xchg
pop
mov
mov
out
inc
shl
pop
jecxz
jb
aaa
pop
retf
push
xchg
dec
mov
mov
pop
sti
push
out
stos
jae
add
jbe
inc
loop
neg
cmp
cmp
inc
out
mov
into
add
out
ss
jae
xchg
out
out
dec
(bad)
xor
add
out
cs
retf
out
cmp
pop
scas
sbb
arpl
push
mov
cmps
pop
and
cs
xchg
xchg
das
mov
mov
cmps
adc
sub
pop
inc
sub
add
sbb
jae
push
neg
pop
aaa
bound
xchg
repnz
cmp
aas
jae
sub
xchg
jmp
mov
out
jb
aaa
out
xchg
xor
mov
xchg
neg
adc
inc
cmps
jb
arpl
xchg
repnz
push
repnz
pop
mul
mov
jmp
jae
jmp
not
out
retf
jbe
pop
(bad)
and
sub
dec
xchg
push
mov
jae
push
mov
pop
xchg
inc
out
cli
pop
out
(bad)
cs
xchg
and
mov
(bad)
dec
mov
mov
aaa
sub
sub
ja
pop
xchg
dec
out
(bad)
out
sub
jae
es
dec
not
xchg
out
xor
out
mul
adc
push
ret
bound
push
scas
pop
ret
inc
mov
es
dec
fisubr
fwait
push
into
push
ss
cmp
push
into
pop
mov
jae
xchg
xchg
jg
dec
mov
push
out
(bad)
cs
push
mov
das
mov
push
shl
adc
outs
out
shl
mov
inc
out
out
pop
and
dec
(bad)
push
stos
aaa
mov
push
ret
cs
sub
sub
push
out
jb
cli
sub
or
inc
mov
push
mov
into
dec
mov
mov
pop
mov
out
aaa
sub
push
xchg
inc
retf
pop
(bad)
xor
ss
xor
arpl
xchg
xchg
arpl
push
xchg
arpl
adc
out
push
xchg
daa
out
bnd
push
mov
call
das
out
mov
xchg
add
inc
retf
sub
adc
out
sub
and
out
mov
inc
mov
push
jb
div
(bad)
xchg
test
inc
xchg
bnd
dec
repz
inc
mov
mov
sti
das
(bad)
adc
ja
push
(bad)
out
ja
add
adc
arpl
or
daa
into
pop
cli
out
dec
jmp
adc
aaa
rol
jb
inc
xchg
arpl
jb
pop
retf
out
inc
mov
push
jb
mov
out
cmp
test
into
adc
out
sub
sub
es
daa
into
adc
imul
mov
xchg
cli
pop
mov
pop
aaa
push
out
sti
dec
out
repz
dec
out
jb
das
mov
xor
pop
jb
xchg
pop
not
sti
outs
into
xchg
(bad)
ds
repnz
daa
mov
jae
(bad)
ds
repnz
(bad)
cs
add
cmp
adc
inc
out
stos
aaa
jb
sti
pop
(bad)
adc
push
fimul
and
xchg
mov
cmps
sub
arpl
sub
jae
and
jae
and
out
adc
aaa
scas
inc
loop
jb
loop
cmps
xchg
mov
cmps
adc
pop
mov
mov
jb
mov
cmp
add
outs
(bad)
inc
mov
daa
rcl
mov
das
test
scas
dec
jmp
jae
add
dec
mov
dec
out
cli
sub
shl
stos
pop
(bad)
out
xor
aaa
into
cs
out
pop
(bad)
imul
mul
jecxz
mov
das
jb
xchg
das
into
xchg
neg
add
daa
mov
mov
pop
not
stos
arpl
inc
aaa
xor
adc
push
(bad)
pop
fwait
push
div
(bad)
jae
pop
mov
jb
call
inc
cli
out
push
add
dec
mov
stos
dec
mov
jae
pop
mov
arpl
mov
das
jb
xchg
xchg
not
add
pop
mov
jmp
scas
push
(bad)
ss
xchg
mov
mov
xchg
out
pop
retf
arpl
mov
out
sbb
push
xchg
push
out
push
retf
push
adc
arpl
xor
inc
mov
inc
repnz
pop
cmp
xor
arpl
cs
jb
inc
mul
mov
xchg
cmps
pop
mov
mov
pop
aaa
pop
loop
xchg
imul
imul
mov
push
xchg
sub
xchg
xchg
sub
arpl
push
aaa
es
or
inc
retf
arpl
dec
xchg
add
inc
jmp
aaa
mov
mov
xlat
xor
jbe
ss
arpl
es
inc
(bad)
xchg
(bad)
daa
mov
sbb
push
jb
fwait
daa
inc
xchg
add
aaa
jb
mov
into
push
mul
mov
cmps
daa
mov
mov
not
xchg
sbb
jae
xchg
xchg
add
inc
jmp
inc
(bad)
pop
out
mov
inc
cmps
xor
pop
out
cmps
xchg
repnz
pop
and
xchg
xchg
xchg
adc
xor
push
repnz
jb
(bad)
cs
push
(bad)
jb
inc
(bad)
sub
inc
es
sub
xchg
sub
ja
add
es
cs
jle
and
pop
mov
jae
out
not
shl
(bad)
push
ss
cmps
pop
(bad)
add
sbb
pop
inc
out
dec
ss
sbb
dec
not
xchg
das
jecxz
jae
call
push
mov
aaa
out
loop
retf
pop
(bad)
add
cs
adc
add
dec
xchg
out
mov
out
add
pop
out
push
stos
pop
not
sti
xor
sub
pop
loop
xchg
arpl
mov
out
inc
aaa
push
into
xor
pop
cmps
cmp
cs
repz
inc
loop
mov
pop
mov
pop
mov
arpl
push
out
pop
mov
adc
inc
mov
ss
loop
xchg
out
add
imul
out
jb
(bad)
xor
push
(bad)
ss
repnz
push
(bad)
out
inc
sub
cs
dec
(bad)
ss
inc
inc
mov
inc
mov
das
loop
mov
mov
xchg
dec
neg
xchg
out
adc
inc
retf
out
and
pop
jb
(bad)
jae
dec
xchg
sub
mov
mov
and
pop
jb
stos
pop
stos
xchg
rcr
sub
pop
xchg
jg
pop
jb
jmp
mov
mov
arpl
cmp
ss
stos
ja
push
ss
retf
inc
xchg
push
mov
test
jb
mov
out
fidivr
out
mov
dec
jb
mov
cmps
pop
xchg
pop
mov
ja
cs
into
sub
cs
cmps
push
not
stos
jae
daa
mov
push
mov
pop
xchg
daa
jb
cmps
das
mov
inc
mov
das
(bad)
sub
jg
xchg
call
xchg
inc
cmp
pop
jb
mov
(bad)
xchg
xchg
aaa
out
mov
add
out
cs
into
pop
mov
jb
xchg
daa
mov
mov
out
mov
pop
jb
xchg
jae
and
push
(bad)
xor
out
add
sub
adc
push
jb
mov
loop
aaa
ss
adc
jae
pop
repz
xor
inc
mov
and
push
out
jmp
mov
adc
and
(bad)
imul
xchg
arpl
mov
sub
out
stos
push
imul
mov
jb
mov
sub
out
cs
arpl
inc
(bad)
out
xor
jae
ss
inc
aaa
pop
(bad)
add
jae
inc
rcr
cmps
out
and
ja
inc
mov
das
(bad)
pop
jecxz
jb
jecxz
neg
out
sub
and
out
sub
inc
mov
das
(bad)
xchg
stos
pop
retf
jae
jb
pop
out
out
inc
ret
jae
daa
xchg
das
jae
(bad)
pop
fiadd
sub
inc
cli
cmps
and
pop
retf
out
pop
mov
out
add
dec
ret
push
not
bound
jae
add
sbb
jae
jb
ss
ss
pop
mov
sub
ss
mov
mov
pop
mov
ja
pop
cli
out
sub
out
add
imul
pop
mov
push
(bad)
cs
(bad)
sub
push
(bad)
and
mov
bound
mov
pop
jb
jmp
mov
pop
out
mov
push
mov
es
not
push
xchg
inc
sub
sub
das
into
adc
arpl
pop
loop
mov
pop
repnz
and
pop
(bad)
dec
(bad)
cs
rol
scas
xor
out
adc
push
jb
loop
mov
pop
cli
jb
sbb
bound
stos
aaa
imul
mov
mov
sbb
bound
cli
cmps
xchg
xor
div
(bad)
ja
pop
cli
out
push
and
push
inc
xchg
mov
call
xchg
not
mov
push
pop
shr
jae
sub
xchg
(bad)
sub
inc
call
inc
aaa
pop
into
and
pop
mov
jmp
mov
xor
xor
push
(bad)
push
jb
dec
sub
xor
arpl
adc
push
xchg
cmps
aaa
jae
repz
(bad)
adc
das
mov
sbb
outs
mov
push
mov
mov
sti
(bad)
sbb
sub
xchg
mov
mov
inc
ss
push
xchg
cmps
xchg
xchg
inc
(bad)
push
(bad)
jbe
push
aaa
sub
imul
mov
sub
das
into
adc
push
(bad)
adc
das
mov
push
mov
mov
jle
and
xchg
mov
das
jecxz
mov
pop
imul
aaa
pop
mov
xchg
repz
xchg
mov
mov
xchg
mov
test
xchg
lahf
jb
mov
push
out
(bad)
sub
mov
das
jb
xchg
arpl
sbb
adc
out
pop
out
mov
pop
jmp
ja
imul
arpl
xchg
cmps
jae
cs
(bad)
inc
loop
mov
add
pop
retf
and
dec
mov
cs
sar
mov
sti
out
push
(bad)
sub
dec
mov
pop
mov
imul
sti
jg
cmp
mov
xchg
mov
xor
imul
sub
xchg
cmps
aas
retf
adc
jae
xchg
(bad)
push
mov
jbe
inc
retf
out
pop
jmp
xchg
adc
jae
repnz
xchg
and
mov
xor
arpl
pop
and
push
dec
call
inc
aaa
pop
into
push
xlat
psadbw
cmps
sub
xchg
sti
out
push
(bad)
sub
pop
fwait
aaa
jae
fwait
and
sub
aaa
mov
sar
scas
das
mov
pop
(bad)
(bad)
aaa
mov
ds
repz
xchg
fisubr
mov
inc
sub
inc
(bad)
sub
dec
shl
mov
sbb
jb
and
pop
mov
jmp
pop
mov
lahf
jmp
cs
pop
mov
lahf
jmp
out
cs
jae
sbb
out
stos
not
sbb
jg
dec
div
xchg
(bad)
das
loop
neg
xchg
repnz
sti
and
sbb
jb
and
pop
imul
scas
jbe
push
mov
mov
imul
xchg
mov
push
dec
mov
cs
xchg
aaa
jae
aaa
(bad)
retf
push
(bad)
adc
push
(bad)
inc
(bad)
cs
adc
jp
adc
pop
(bad)
xchg
imul
inc
rcr
xchg
ss
sti
cmps
jb
cmps
cmp
push
(bad)
pop
mov
jae
cmp
pop
out
(bad)
inc
mov
div
jecxz
jb
(bad)
imul
scas
push
call
das
into
pop
out
mov
pop
fwait
jg
xchg
push
jg
add
and
pop
out
jae
repz
inc
aaa
es
repz
cli
adc
das
mov
cs
(bad)
inc
loop
mov
mov
out
push
test
sti
and
cli
jbe
jae
xor
push
ss
out
mov
jbe
push
call
bound
ss
sbb
out
cs
out
push
(bad)
jb
pop
mov
jae
ss
mov
jbe
arpl
cs
out
inc
imul
pop
cli
out
sbb
arpl
idiv
out
jmp
mov
push
and
pop
out
mov
add
jb
dec
jmp
pop
and
adc
push
out
lahf
jae
sbb
jb
sbb
and
pop
aaa
inc
into
pop
sti
cmps
jb
cmps
cmp
push
and
xchg
repz
retf
das
mov
push
inc
adc
sub
xchg
pop
retf
pop
out
cmps
pop
not
mov
jbe
xchg
mov
inc
mov
(bad)
adc
ja
xor
and
pop
aaa
cs
pop
cli
out
dec
ss
pop
sti
cmps
neg
cmp
cs
(bad)
inc
loop
mov
push
mov
loop
mov
sahf
jmp
aas
jmp
add
xchg
inc
jb
mov
push
out
sub
or
inc
retf
jbe
xchg
mov
jbe
xor
dec
shl
xchg
arpl
pop
cli
pop
mov
mov
cmps
pop
loop
(bad)
ja
ds
pop
sti
daa
neg
cmp
push
sub
adc
and
xchg
mov
imul
mov
push
(bad)
pop
mov
xchg
jmp
add
jecxz
mov
jae
jmp
mov
push
repz
xor
and
push
ss
pop
mov
xchg
xor
out
pop
ss
retf
out
push
mov
jae
mov
mov
sub
ss
jmp
add
out
push
inc
inc
out
sub
pop
xlat
stmxcsr
repz
xchg
imul
mov
push
mov
mov
inc
loop
mov
add
jecxz
(bad)
jle
inc
out
sub
and
push
pop
sti
daa
neg
cmp
pop
out
mov
xor
push
out
scas
jbe
dec
sti
out
and
(bad)
push
jmp
jb
shl
pop
mov
mov
and
(bad)
push
(bad)
jmp
repnz
jae
and
add
jecxz
fwait
jg
sub
out
pop
cli
ss
mov
and
xchg
mov
fidiv
(bad)
ja
sbb
bound
out
das
mov
cs
ss
sbb
jb
push
mov
jae
xlat
ldmxcsr
mov
pop
(bad)
dec
loop
scas
adc
arpl
ss
and
pop
mov
aaa
jbe
xchg
jmp
mov
(bad)
imul
shl
pop
repz
inc
loop
mov
dec
imul
mov
jg
sub
cmps
imul
aaa
and
xchg
stos
pop
cli
xor
out
jb
inc
ret
out
pop
repnz
bnd
mov
jbe
push
scas
out
add
inc
(bad)
jle
and
xchg
scas
das
mov
xchg
mov
mov
inc
out
sub
add
sub
pop
stos
pop
out
repz
sti
cmp
xchg
repnz
sbb
jb
push
aaa
ss
push
sub
xchg
mov
retf
out
sbb
pop
retf
arpl
jb
call
ja
ja
push
xchg
pop
sti
daa
neg
cmp
push
mul
mov
xor
test
daa
xchg
das
xchg
jmp
sub
arpl
mov
cs
mul
cmps
push
out
mov
sub
pop
stos
pop
cmps
and
pop
and
ss
out
push
(bad)
pop
not
cmps
sub
repz
(bad)
inc
loop
mov
sub
aaa
not
out
mov
aaa
jb
div
mov
sub
out
xchg
mov
jmp
sub
pop
cmps
cmp
pop
cli
pop
mov
mov
mov
shl
mov
inc
mov
out
mov
xor
bound
xchg
push
div
pop
jb
fwait
sub
inc
loop
mov
pop
mov
push
repnz
mov
pop
cli
pop
mov
and
push
inc
xchg
imul
neg
arpl
xchg
and
jae
ss
jmp
jae
cli
jb
push
out
mov
mov
xlat
mov
jb
mov
mov
pop
xchg
arpl
jmp
mov
mov
cs
xlat
psadbw
cmps
sub
inc
(bad)
outs
out
and
xor
(bad)
push
inc
out
sub
and
out
xor
cmp
xchg
repnz
dec
mov
arpl
xchg
neg
pop
jmp
mov
inc
loop
mov
sub
ss
dec
mov
jbe
inc
(bad)
cmp
inc
loop
mov
push
(bad)
bound
pop
cli
out
pop
cli
and
sbb
pop
out
repnz
cmp
adc
dec
mov
bound
push
sahf
jb
adc
out
jbe
cmp
sbb
dec
jmp
ss
and
(bad)
retf
das
(bad)
sub
xchg
jecxz
xor
xor
xor
pop
mov
push
jecxz
not
repz
pop
and
pop
xchg
arpl
mov
add
ss
mov
jmp
scas
pop
out
mov
pop
mov
bound
xchg
repnz
pop
cli
push
mov
bound
fbld
mov
push
out
push
mov
out
xor
cmp
xchg
xchg
das
mov
xchg
repnz
xchg
aaa
jb
pop
sti
daa
not
loop
mov
xchg
repnz
(bad)
pop
out
out
cmps
bound
(bad)
jb
push
jmp
mov
xchg
xchg
imul
repz
pop
cli
and
pop
mov
mov
adc
(bad)
not
cli
push
mov
ss
fidivr
jbe
daa
mov
mov
out
mov
inc
xlat
add
shr
jb
push
repz
sti
out
sub
sub
adc
jp
adc
(bad)
div
and
pop
out
div
sti
jae
push
dec
inc
loop
retf
push
(bad)
ds
sub
xchg
xchg
jae
inc
mov
mov
aaa
mov
push
ret
arpl
inc
loop
mov
inc
mov
das
jb
out
push
jae
cmp
jae
sub
add
arpl
sub
out
dec
mov
das
jbe
mov
jb
mov
mov
inc
out
sub
push
out
(bad)
push
mov
jb
cmps
sub
pop
cli
es
mov
cmps
and
push
pop
sti
daa
neg
cmp
ja
push
xchg
push
repnz
push
mov
jae
mov
mov
inc
jmp
pop
sti
cmps
neg
cmp
pop
mov
iret
add
push
xchg
repnz
push
test
pop
cli
out
dec
jmp
aas
repz
dec
sti
and
pop
ss
inc
(bad)
xor
xchg
repnz
push
(bad)
and
push
(bad)
pop
mov
dec
sti
arpl
dec
ss
pop
(bad)
and
inc
mul
mov
pop
cli
out
adc
arpl
out
mov
scas
imul
jae
mov
rcl
repnz
jmp
call
and
jae
ss
xor
xor
pop
out
mov
pop
(bad)
xor
cs
push
(bad)
pop
mov
mov
call
push
(bad)
ja
sub
das
into
pop
cmps
out
add
and
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
xchg
ss
jbe
cli
fs
jp
jae
js
cmp
inc
cli
test
jb
mov
xor
iret
loop
sahf
mov
xor
aas
aas
dec
jb
xchg
sbb
retf
jne
mov
fnstcw
aas
fnstcw
test
inc
pop
push
je
xchg
jmp
jne
sub
or
xor
out
mov
jecxz
jbe
aas
div
outs
daa
cmps
inc
(bad)
mov
fidivr
sub
in
xchg
retf
imul
(bad)
aaa
pop
xchg
fnstcw
cmp
cdq
aam
cmp
xor
jecxz
lea
sahf
jle
ss
cmp
in
fnstcw
cmp
fnstcw
cmp
xchg
loop
lea
mov
call
test
(bad)
fld
jae
js
cmp
xchg
loop
popf
dec
sub
push
fnstcw
cmp
mov
ss
js
js
cmp
jnp
out
js
ins
aaa
movs
inc
(bad)
mov
fiadd
out
(bad)
mov
inc
out
pop
out
sub
sbb
js
jb
js
cmp
nop
loop
xchg
test
inc
cmp
mov
pop
jp
bound
aaa
pop
jbe
int
addr16
adc
mov
js
cmp
xchg
xor
mov
fstp
jae
js
cmp
xchg
jp
jae
js
cmp
fnstcw
test
fwait
cmp
js
out
lahf
rcl
cs
add
in
fnstcw
cmp
cmps
jp
and
fld
test
xchg
xor
mov
popf
jp
push
fnstcw
cmp
fwait
aaa
in
js
xchg
or
ins
shl
cmps
xchg
sbb
retf
jne
mov
fnstcw
aas
fnstcw
cmp
fwait
and
data16
neg
jno
loop
xchg
or
push
icebp
dec
adc
ins
xchg
ss
fnstcw
cmp
mov
sub
jb
repnz
and
and
jb
aaa
out
imul
and
shl
push
aaa
push
and
int3
jg
add
jb
jmp
jae
mov
adc
mov
push
mov
stos
mov
dec
dec
push
aas
mov
mov
mov
lods
std
mov
sahf
dec
pop
lahf
(bad)
pop
dec
cmp
pop
std
(bad)
cli
mov
shr
dec
cmp
mov
adc
repz
rdmsr
outs
pop
xor
lds
mov
ret
inc
ds
push
inc
cmp
mov
cmp
pop
push
sub
jne
fistp
push
xchg
loopne
cvtps2pd
or
aad
ds
cmc
jle
xchg
pop
mov
(bad)
mov
sub
cmp
loope
mov
or
(bad)
mov
in
leave
aaa
sbb
mov
sbb
cdq
pop
(bad)
not
mov
std
dec
xchg
add
aad
pop
mov
adc
lahf
stos
cmps
pop
xchg
sub
mov
xchg
idiv
dec
xchg
add
push
dec
dec
inc
or
fcmove
add
mov
mov
rcl
ds
das
lods
dec
shl
sar
aad
add
dec
xchg
cmc
aaa
pop
jge
adc
jp
push
push
sbb
pop
ret
pop
xor
rol
das
test
dec
call
pop
ret
pop
psubsw
add
leave
push
ror
mov
clc
imul
inc
adc
sub
popf
inc
sub
popf
push
mov
mov
ffreep
gs
fidivr
jl
rcl
gs
outs
xchg
cmp
ror
gs
les
mov
gs
pushf
or
shr
sar
aas
mov
les
rol
gs
les
lahf
imul
rol
mov
pushf
push
rol
gs
sar
mov
pushf
jp
rol
gs
les
shl
mov
les
mov
pushf
dec
mov
les
rol
gs
call
mov
les
rol
mov
popf
cmp
test
cmps
mov
mov
rol
mov
push
push
popf
push
mov
mov
add
xlat
lahf
lahf
push
xchg
mov
aad
lahf
dec
ror
out
(bad)
pop
call
push
mov
ja
(bad)
in
sub
inc
push
mov
push
mov
sti
push
movs
scas
(bad)
mov
cmp
lds
aad
add
mov
retf
sahf
inc
push
mov
call
add
jo
push
loope
pop
repnz
jle
dec
add
stos
sub
inc
push
call
out
std
inc
cdq
cdq
jmp
aad
pop
mov
mov
hlt
leave
or
mov
mov
cmps
xor
cs
jmp
cmp
inc
scas
add
sbb
pop
ret
lahf
xlat
mov
jmp
and
push
mov
aad
pop
sbb
push
repz
jmp
push
add
push
push
sbb
xchg
push
cmps
pushf
cmp
inc
div
pop
mov
adc
retf
jns
(bad)
and
lock
imul
es
mov
xchg
movs
jmp
into
(bad)
mov
ds
sub
(bad)
dec
call
pop
aas
mov
push
arpl
inc
or
test
adc
and
pop
stos
loope
adc
mov
rcr
adc
pop
jmp
or
cmps
or
sbb
dec
stos
cmp
dec
std
pop
pusha
faddp
cmp
push
cmp
test
xor
cmp
inc
xchg
jmp
or
cmps
call
(bad)
int
fsubp
and
dec
mov
and
movs
adc
cmp
jge
or
pop
aam
cmps
sub
ins
push
cmps
or
sbb
inc
retf
movs
ins
int
dec
cmp
pop
and
push
cmps
or
sbb
sub
lds
jg
cmps
or
sbb
test
sbb
ins
sub
or
cmps
or
sbb
mov
xor
or
cmps
or
sbb
inc
jo
xchg
mov
gs
out
xchg
call
inc
jo
stos
mov
call
inc
rol
xor
mov
adc
popf
sti
push
cmp
(bad)
mov
cmp
pop
push
mov
mov
sub
xlat
sbb
push
cmps
leave
push
test
cmp
mov
mov
inc
adc
push
xor
retf
rcr
xchg
pop
leave
dec
xchg
xchg
inc
mov
jns
pop
rol
push
mov
cmp
mov
mov
xchg
mov
push
pop
inc
mov
push
xor
mov
push
jmp
test
add
jmp
xor
push
and
arpl
loope
mov
shl
sub
adc
push
xor
or
dec
je
mov
fcom
push
fisubr
mov
mov
cmp
scas
scas
(bad)
push
push
inc
cmp
inc
cld
dec
xchg
xor
ds
xchg
ins
push
cmps
cmp
inc
call
stc
xchg
jne
mov
xchg
add
or
push
psubq
mov
shl
pop
mov
sbb
ss
pop
inc
movs
adc
out
bound
dec
cmp
fbld
xchg
pop
cmp
dec
pop
or
xchg
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
inc
add
push
add
and
add
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
pop
and
xchg
and
add
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
add
out
pop
and
pop
and
add
out
pop
and
add
test
inc
enter
dec
ret
dec
push
outs
test
cld
dec
shl
add
test
cld
dec
rcl
adc
pop
(bad)
inc
mov
test
dec
push
outs
jecxz
clc
and
sub
sbb
inc
xchg
stc
test
dec
push
outs
inc
add
out
pop
and
add
dec
add
sti
fsub
test
dec
push
outs
jmp
push
jns
(bad)
dec
jbe
test
dec
push
outs
test
push
inc
sub
inc
sub
dec
push
outs
test
xor
adc
inc
mov
and
dec
sbb
dec
push
outs
test
sub
int3
push
rcl
pop
rcl
push
pop
push
out
jbe
jg
inc
or
fldcw
dec
push
outs
test
add
test
int
outs
div
retf
cld
dec
mov
push
movs
arpl
add
test
adc
outs
sbb
retf
fsub
add
test
dec
push
outs
test
add
and
call
cmp
dec
pop
ins
test
dec
push
outs
icebp
loope
push
sbb
test
loope
push
sbb
test
cdq
adc
aas
test
dec
push
outs
test
aaa
push
ds
add
retf
mov
test
es
outs
test
dec
push
outs
test
or
in
fwait
push
and
xlat
push
ret
cmp
test
dec
push
outs
hlt
fwait
push
ds
add
pop
ins
test
add
ins
test
add
stos
dec
pop
and
nop
push
outs
inc
(bad)
outs
movs
cmps
fistp
cld
dec
mov
add
add
add
out
jno
in
sub
rol
shl
mov
outs
test
add
add
pop
or
(bad)
pop
sbb
add
repz
out
jl
ret
cmp
pop
sub
(bad)
mov
fimul
mov
test
mov
dec
mov
stos
(bad)
movs
cmp
(bad)
mov
cmp
cld
or
mov
sub
imul
movs
inc
cmp
mov
stc
imul
jle
sar
xor
rcr
retf
dec
in
adc
fidivr
mov
cmc
push
into
idiv
mov
(bad)
lods
ret
sbb
xlat
cmp
(bad)
push
fbld
inc
mov
cs
mov
aad
jmp
pop
push
push
mov
mov
lds
xchg
cmp
add
(bad)
fwait
lods
adc
into
loope
mov
lahf
shl
push
pop
aas
mov
pop
sub
inc
or
dec
xchg
in
mov
pop
mov
idiv
mov
dec
xchg
add
lock
sub
dec
xchg
mov
in
xchg
in
inc
xchg
xchg
cmp
out
add
xor
lods
sbb
jp
push
cli
cld
cmp
inc
mov
add
sub
(bad)
mov
(bad)
sbb
push
pop
mov
pop
scas
inc
or
(bad)
sbb
pop
lds
jge
mov
adc
push
xor
add
inc
out
xchg
in
aas
mov
stos
loope
dec
cmp
dec
inc
dec
cs
adc
lods
and
mov
push
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
cwde
ins
jno
add
mov
pusha
fdivr
aad
ins
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aam
jno
aad
jno
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aam
jo
aad
jno
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aam
jno
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aam
jo
aad
jno
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aad
jo
aam
jo
aad
jno
aad
jo
aad
jo
aad
jno
aad
jo
aad
jo
aam
jno
aam
jno
(bad)
int
mov
scas
ins
jo
fwait
jmp
retf
sub
jnp
xlat
aam
jb
call
ret
and
xchg
xchg
mov
xchg
pop
cmp
nop
es
call
fwait
call
ret
cmc
ins
pop
fwait
call
fcmovnbe
and
out
xchg
pop
std
cdq
call
jecxz
and
xlat
aad
xor
call
pusha
push
ins
movs
jne
(bad)
je
jl
jae
aad
sub
cdq
call
push
fldenv
aas
stc
cs
fwait
call
fwait
call
iret
fistp
jbe
ret
je
jae
aad
xor
ss
es
call
fwait
call
aam
outs
(bad)
int3
cmp
call
xlat
aad
xor
call
aam
outs
(bad)
int3
cmp
call
xlat
aad
xor
call
(bad)
jo
sub
bswap
cmp
call
xlat
aad
xor
call
aam
outs
(bad)
int3
cmp
call
mov
call
(bad)
jo
sub
bswap
cmp
call
scas
xchg
and
cdq
call
fwait
call
aad
jge
cmp
(bad)
aam
mov
fwait
call
outs
xchg
and
cdq
call
pop
xchg
jb
aad
ins
jo
call
fwait
call
aad
ins
jo
call
jge
pop
addr16
jne
jo
aad
xor
pop
outs
jo
sub
jae
(bad)
mov
(bad)
aam
sub
(bad)
aam
mov
call
aam
and
xchg
(bad)
jns
loopne
ins
xor
aad
xor
jecxz
fcom
ins
xor
aad
jo
xor
jo
call
sti
mov
push
aas
fwait
call
(bad)
call
js
and
outs
jge
aam
jae
rcl
stc
add
aad
xor
call
ret
ins
aam
sub
aad
jle
fwait
call
fwait
retf
xchg
(bad)
jns
(bad)
jno
call
fwait
call
aam
sub
call
aam
sub
xor
xchg
cmps
sub
ins
jo
add
int
mov
fwait
call
xchg
(bad)
int
push
sub
aaa
int3
cmp
fwait
call
xchg
(bad)
mov
cmp
fwait
shl
aas
pusha
adc
add
pusha
add
movs
mov
pusha
ins
mov
aad
pushf
add
push
mov
add
adc
call
or
call
(bad)
jae
call
fwait
sbb
aas
add
(bad)
aam
das
jae
int3
cmp
fwait
push
and
out
popa
imul
add
outs
jo
sub
or
call
das
push
push
gs
fldcw
sbb
aam
or
cs
jmp
aad
and
int
jl
div
dec
aad
imul
rcl
and
and
aad
xor
push
and
aad
bound
call
or
call
add
outs
jo
call
aad
jle
fwait
call
inc
cli
and
fwait
call
adc
call
sbb
call
fwait
call
cdq
call
dec
leave
and
or
call
xchg
(bad)
jmp
cmp
xor
outs
jo
call
ja
and
aam
sub
xor
aam
mov
aam
sub
(bad)
aam
mov
call
add
outs
jo
call
pop
fisub
aas
aam
cs
call
sub
and
jne
outs
jo
jl
jae
cmp
(bad)
aam
sub
(bad)
aam
mov
call
aas
xchg
and
cdq
call
pop
fisub
aas
aam
cs
call
xlat
aad
xor
sub
xchg
(bad)
mov
fnstenv
int3
cmp
fwait
call
xchg
(bad)
jns
aad
ins
jne
call
xlat
aad
xor
fld
add
aad
xor
add
int
add
retf
ret
and
xlat
aad
xor
sub
aas
fwait
call
cld
xchg
outs
shl
outs
jo
sub
xchg
(bad)
mov
fnstenv
int3
cmp
fwait
retf
out
(bad)
jns
add
ins
dec
jmp
jns
shl
mov
adc
jmp
rcr
xchg
mov
hlt
push
jae
inc
push
stos
adc
mov
test
mov
std
mov
cmp
or
cmc
push
mov
or
sub
adc
mov
idiv
mov
imul
xchg
push
outs
shl
add
sbb
dec
mov
cmp
cmc
arpl
outs
jmp
cmps
(bad)
mov
xor
push
add
sahf
cmps
xor
or
std
arpl
jmp
adc
data16
lods
dec
scas
push
mov
or
adc
mov
popa
mov
(bad)
xchg
std
mov
(bad)
mov
jmp
push
out
pop
sbb
sbb
pop
push
inc
mov
push
mov
cmp
std
dec
xchg
lea
pop
stos
push
dec
or
cs
repz
aas
mov
push
(bad)
cli
inc
adc
xor
pop
push
push
sti
push
push
inc
ds
enter
mov
add
fwait
sbb
jmp
arpl
bound
xchg
cmc
aaa
dec
arpl
inc
xchg
mov
xor
jne
ss
sti
(bad)
adc
pop
arpl
movs
mov
add
cwde
imul
stos
dec
shr
dec
aaa
cmp
add
in
popa
jbe
add
daa
popa
popa
jbe
add
out
cs
stos
out
(bad)
cmp
vmread
mov
je
push
popa
jbe
add
in
adc
arpl
dec
popa
jbe
add
cwde
imul
stos
dec
shr
dec
aaa
cmp
add
je
dec
popa
jbe
add
in
popa
push
in
in
cmp
or
pushf
mov
popa
jbe
add
in
das
cmp
dec
popa
jbe
add
in
lods
popa
out
cs
out
cs
getsec
cmp
add
in
popa
jbe
add
in
popa
mov
cs
leave
das
scas
inc
xor
jle
sub
cmp
jl
sub
mov
data16
pop
jmp
stos
dec
sub
(bad)
or
popf
gs
ror
pop
pop
stos
leave
mov
imul
mov
or
sub
adc
mov
ja
dec
je
dec
pop
dec
push
mov
pop
inc
fistp
and
shl
cmps
push
ficom
dec
and
jbe
push
in
mov
add
pop
dec
out
call
mov
shl
mov
pop
mov
(bad)
popa
and
cld
mov
xchg
or
adc
mov
in
dec
out
cs
repz
xchg
fst
aas
mov
dec
sub
adc
push
xchg
leave
pop
mov
out
in
sbb
or
mov
or
rcl
xchg
jbe
lods
lods
lods
xor
push
pop
fld
or
(bad)
or
enter
push
out
cmp
inc
pop
jg
mov
cld
dec
xchg
and
add
ret
inc
inc
pusha
add
adc
sbb
in
scas
xor
sub
fld
ret
inc
add
push
inc
loopne
mov
push
cs
mov
ja
xor
adc
(bad)
inc
push
pop
sub
sbb
dec
add
js
adc
cdq
adc
ror
cwde
and
jbe
dec
shl
mov
jbe
dec
shl
dec
rcr
dec
push
add
std
pushf
cmp
add
out
cmp
cdq
cmc
shl
dec
shl
lea
dec
rcl
lea
shl
dec
shl
popf
or
pushf
jbe
sbb
shl
cdq
add
shl
xlat
cmps
and
add
shl
dec
sar
xlat
cmps
mov
jbe
dec
shl
dec
rol
dec
mov
cdq
dec
shl
dec
shl
dec
rol
dec
mov
cdq
dec
shl
dec
shl
dec
shr
sub
jbe
dec
rcr
fwait
add
shl
dec
shl
dec
sar
add
jle
(bad)
ja
jo
scas
popf
nop
(bad)
scas
popf
les
retf
je
sbb
shl
dec
shl
mov
xchg
fidivr
cmp
scas
sahf
les
adc
mov
sti
aas
les
mov
cdq
dec
shl
dec
shl
dec
rol
sub
cmp
arpl
sub
rcr
arpl
sub
push
pop
cmp
sahf
(bad)
sub
pop
aad
jp
je
cmp
cld
add
mov
aaa
imul
jmp
jae
mov
mov
mov
(bad)
in
jae
mov
jae
mov
sub
mov
jae
mov
(bad)
sub
lock
in
jae
mov
jae
mov
cmp
lock
and
int
jae
(bad)
in
jae
mov
push
mov
jae
mov
and
lods
mov
jae
mov
jae
mov
es
jmp
jae
mov
push
mov
(bad)
mov
sbb
adc
cld
jne
mov
(bad)
in
jae
mov
jae
mov
xor
mov
adc
cmc
pop
mov
(bad)
in
jae
mov
adc
shl
lock
jae
mov
adc
fucomip
jae
mov
jae
mov
xor
in
jno
jmp
jae
mov
and
frstor
jae
mov
es
mov
cmp
lock
jae
mov
and
std
mov
jae
mov
xor
movs
cmp
sub
lock
jae
mov
jae
mov
cs
stos
mov
lock
jae
mov
jmp
jge
cmp
mov
out
jae
mov
sub
mov
jae
mov
add
jge
pushf
(bad)
jg
lods
inc
(bad)
mov
sbb
std
xor
mov
sub
mov
push
mov
jae
mov
push
addr16
jno
out
jae
mov
jae
mov
mov
scas
icebp
lods
inc
ds
jne
repnz
jae
mov
shr
jecxz
mov
mov
mov
scas
sub
jae
mov
jae
mov
xchg
mov
(bad)
in
jae
mov
adc
out
sub
mov
std
lods
push
cs
cmp
lods
(bad)
mov
cmp
lock
jae
mov
and
frstor
jae
mov
jae
mov
es
mov
cmp
lock
jae
mov
cmp
lock
jle
lock
add
ficomp
movs
jns
jno
jmp
cs
stos
mov
lock
jae
mov
jae
mov
pushf
push
jle
cmp
test
lods
fwait
jmp
jmp
mov
jno
out
jae
mov
xor
jo
cld
jns
jmp
loope
jae
mov
jae
mov
xchg
stc
mov
lods
sahf
shl
sub
jmp
add
std
mov
and
pop
ds
(bad)
in
jae
mov
jae
mov
cmp
or
adc
jl
cmp
fwait
jmp
push
cld
pop
cmp
and
jae
mov
jae
mov
jb
jmp
jae
mov
lahf
popf
mov
cmp
lock
jae
mov
sub
xchg
mov
ret
imul
pop
jae
mov
jae
mov
int3
sbb
jmp
imul
pop
jae
mov
lahf
popa
mov
cmp
lock
jae
mov
jmp
mov
cmp
mov
out
jae
mov
(bad)
mov
shl
lock
mov
jae
mov
jae
out
jae
mov
jae
mov
jb
jmp
jae
mov
sbb
in
jae
mov
jae
mov
aas
mov
jmp
jae
mov
sbb
fstp
sub
mov
sbb
in
jae
mov
jae
mov
jno
jmp
jae
mov
jl
fstp
jae
mov
jae
mov
jno
jmp
jae
mov
ins
repnz
jae
mov
daa
fnstsw
movs
cmp
inc
jmp
lock
jae
mov
adc
out
sub
mov
std
lods
push
cs
cmp
lods
(bad)
mov
cmp
dec
rcl
jmp
mov
pop
data16
(bad)
in
jae
mov
jae
mov
push
arpl
div
out
jae
mov
jno
shl
lock
jae
mov
xor
je
push
lock
jae
mov
jno
jmp
jae
mov
jae
mov
sbb
in
jae
mov
sub
mov
jae
mov
jae
mov
sbb
fstp
jae
mov
jno
jmp
jae
mov
or
fstp
jae
mov
daa
std
int
fstp
cld
movs
pushf
dec
mov
cmp
lock
xor
mov
adc
cmc
sub
lock
in
jae
mov
jae
mov
push
arpl
div
out
jae
mov
jae
mov
adc
mov
jae
fucomip
jae
mov
popa
mov
(bad)
in
jae
mov
and
lahf
cmc
inc
and
in
mov
jae
mov
jae
mov
es
mov
cmp
lock
jae
mov
or
loope
cmp
lock
es
jmp
push
mov
(bad)
mov
sbb
xor
(bad)
in
jae
mov
jae
mov
xor
mov
adc
cmc
xor
(bad)
in
jae
mov
push
arpl
div
out
jae
mov
adc
shl
lock
repz
daa
repnz
test
mov
jae
mov
jae
mov
jno
jmp
jae
mov
jae
mov
sbb
in
jae
mov
jae
mov
sub
mov
jae
mov
sbb
in
jae
mov
jno
jmp
jae
mov
or
fstp
push
mov
(bad)
mov
sbb
ss
(bad)
in
jae
mov
jae
mov
xor
mov
adc
cmc
push
push
repnz
lock
jae
mov
jae
mov
push
jl
cmp
and
jae
mov
jae
mov
jno
mov
jae
mov
adc
out
aas
mov
mov
repz
cmp
push
fldenv
lahf
sbb
lock
jae
mov
int3
icebp
(bad)
jae
mov
jno
out
jae
mov
sbb
pop
out
jae
mov
jae
mov
cmp
lock
jae
mov
sbb
loope
cmp
lock
jae
mov
es
mov
cmp
lock
jae
mov
jae
mov
cmp
lock
jae
mov
xchg
std
mov
jle
lock
add
pop
pop
ss
add
jmp
int3
icebp
shl
jae
mov
jb
mov
lock
jae
mov
adc
mov
cs
stos
mov
jmp
xchg
jl
lock
jae
mov
int3
icebp
(bad)
jae
mov
mov
lock
mov
jae
mov
fdiv
(bad)
jae
mov
jae
mov
cmp
lock
jae
mov
mov
mov
(bad)
in
jae
mov
sub
mov
mov
(bad)
sub
jae
pop
out
jae
mov
inc
scas
mov
jae
mov
jae
mov
adc
mov
jae
fucomip
jae
mov
jno
xchg
xor
movs
aas
mov
sub
jae
mov
jae
mov
dec
mov
aaa
imul
jle
cmp
cmp
dec
mov
lock
jae
mov
jae
mov
jno
xchg
shr
loopne
mov
mov
retf
mov
out
cmp
dec
stos
mov
jae
mov
jae
mov
jae
mov
and
or
in
jae
mov
jae
mov
nop
cdq
mov
push
mov
lock
adc
pmaxsw
mov
stos
leave
mov
cmp
push
cmc
(bad)
push
test
fdiv
lock
jae
mov
push
mov
mov
jae
mov
xor
movs
jo
call
mov
cmps
test
jae
(bad)
in
jae
mov
fld
pop
jae
add
jae
mov
jecxz
pop
shl
add
jae
mov
out
pop
out
lock
jae
mov
jae
mov
push
(bad)
pop
cmp
daa
mov
jae
mov
mov
mov
std
inc
jno
jmp
jae
mov
sub
or
mov
mov
mov
jae
mov
jae
mov
mov
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
(bad)
lods
dec
scas
int3
std
enter
push
mov
cmp
cld
or
(bad)
pop
cmp
daa
mov
jae
mov
jae
mov
aas
mov
mov
jae
mov
jae
mov
outs
lock
sub
imul
cmp
lock
jae
mov
jae
mov
xor
call
mov
ret
imul
div
out
jae
mov
sub
imul
jae
mov
jge
add
jmp
loope
jae
mov
xor
call
mov
ins
sub
jbe
jmp
sar
out
jae
mov
adc
neg
add
cmps
test
jae
(bad)
in
jae
mov
jae
mov
cmp
or
adc
ss
mov
cmp
lock
jae
mov
sub
jo
retf
lahf
std
lods
je
div
mov
std
mov
jae
mov
sub
mov
cmp
imul
jae
mov
cmp
(bad)
aad
stos
mov
dec
sub
lock
in
jae
mov
mov
jmp
cmp
imul
xchg
imul
mov
stos
mov
std
loope
mov
add
jno
out
jae
mov
jae
mov
fistp
jmp
jae
mov
jae
mov
xor
imul
push
mov
jmp
mov
jae
mov
adc
fucomip
jae
mov
fistp
sub
call
cmp
push
clc
or
push
dec
ret
pop
jae
mov
jae
mov
jae
mov
mov
out
jae
mov
xor
imul
xor
adc
div
mov
std
mov
cmp
mov
add
mov
push
mov
jae
mov
jae
mov
jae
mov
ret
pop
jae
mov
jae
mov
and
or
or
cmp
sub
cmp
or
xor
cld
or
cld
or
lock
lock
lahf
fnsave
pop
jae
mov
jae
mov
cs
jmp
xchg
in
mov
xor
xor
out
jne
test
sub
xchg
mov
push
mov
ret
pop
jae
mov
adc
mov
cs
stos
mov
out
mov
shr
mov
jae
mov
jae
mov
xor
out
aas
mov
cld
jno
push
cld
or
lahf
std
pop
popf
fst
ret
pop
jae
mov
jae
mov
stos
mov
std
mov
shr
mov
jae
mov
jae
mov
jae
mov
(bad)
mov
mov
mov
aad
call
loope
mov
mov
mov
mov
cmp
imul
mov
out
jmp
arpl
div
out
jae
mov
jae
mov
jg
mov
ret
pop
jae
mov
jae
mov
adc
mov
push
mov
pop
cmp
cld
or
cld
or
dec
test
lock
lock
jae
mov
xchg
mov
push
movs
adc
div
out
jae
mov
jae
mov
stos
mov
(bad)
in
jae
mov
jae
mov
fistp
sub
and
lock
jg
mov
ret
pop
jae
mov
jae
mov
jae
mov
dec
mov
aaa
popf
pop
fisub
cmp
hlt
or
dec
ret
push
jae
mov
jae
mov
jae
mov
jae
pop
xor
cld
or
cld
or
dec
test
lock
lock
jae
mov
rol
mov
lock
jae
mov
jb
jmp
jae
mov
jae
mov
ds
inc
push
test
repnz
pushf
or
pop
jae
mov
stos
leave
mov
cmp
push
cld
or
cld
or
lock
lock
ret
pop
aas
mov
add
jno
out
jae
mov
jae
mov
popf
or
ret
pop
jae
mov
jae
mov
jae
mov
xor
imul
icebp
mov
xor
or
mov
jecxz
mov
jb
shr
jae
mov
dec
mov
out
cmp
xchg
jmp
sbb
pmaxsw
mov
jae
mov
retf
dec
mov
cmp
push
mov
cmp
push
mov
stc
jb
lahf
jne
imul
mov
mov
jae
mov
jae
mov
xor
lea
mov
jae
mov
jae
mov
sub
mov
mov
jae
mov
int
sbb
dec
mov
aaa
int
jecxz
cmp
lock
adc
imul
xor
sub
test
mov
jae
mov
jae
mov
sbb
shl
lock
jae
mov
(bad)
mov
sub
mov
jae
mov
icebp
mov
shr
jmp
jae
mov
repnz
jg
xchg
imul
mov
mov
sbb
shl
lock
jae
mov
jae
mov
jb
jmp
jae
mov
jae
mov
(bad)
sub
xchg
stos
mov
jmp
jae
mov
cmp
lock
cs
stos
mov
jmp
jae
mov
jae
mov
and
std
mov
dec
mov
out
imul
loope
cmp
lock
stc
call
jae
mov
adc
out
jae
fucomip
jae
mov
jae
mov
sbb
stc
inc
in
pop
cld
mov
daa
repnz
xchg
mov
jae
mov
stc
jb
lahf
jne
imul
mov
mov
jae
mov
jae
mov
adc
outs
jae
fucomip
jae
mov
jae
mov
aaa
mov
scas
jb
ror
mov
mov
int3
icebp
shl
jae
mov
and
mov
jmp
jae
mov
dec
mov
aaa
popf
pop
out
mov
in
test
jae
(bad)
in
jae
mov
xor
inc
add
retf
mov
(bad)
in
jae
mov
xor
imul
sub
or
cmc
push
inc
repnz
cmps
test
jae
(bad)
in
jae
mov
sub
xchg
mov
jae
mov
jae
mov
lods
pop
or
(bad)
in
jae
mov
jae
mov
jb
jmp
jae
mov
jae
mov
and
sub
in
jae
mov
cs
mov
jae
mov
fcom
mov
jecxz
nop
cmp
lock
in
jae
mov
jae
mov
stos
leave
mov
cmp
lock
jae
mov
repz
jae
(bad)
in
jae
mov
jae
mov
aas
ins
in
cmp
movs
cmp
dec
sub
in
sub
adc
cld
pop
cmp
daa
mov
jle
mov
push
xor
cmp
daa
mov
jae
mov
ret
pop
in
xchg
add
jae
mov
jae
mov
int3
icebp
shl
jae
mov
daa
jb
mov
aam
mov
xor
out
jae
mov
adc
pmaxsw
mov
and
inc
jmp
lock
jae
mov
adc
mov
push
mov
stos
mov
jmp
xchg
jl
lock
jae
mov
jae
mov
fdiv
(bad)
jae
mov
cmp
lock
jae
mov
jae
mov
sbb
sbb
int3
xchg
ret
mov
lock
cmp
lock
in
jae
mov
jae
mov
daa
xchg
mov
xor
imul
push
xor
sub
test
mov
jae
mov
sbb
mov
jae
pop
out
jae
mov
jae
mov
jmp
mov
jae
mov
xor
xor
(bad)
jno
dec
ds
sbb
add
mov
mov
jae
mov
jae
mov
ds
inc
jmp
jbe
mov
mov
jae
mov
ds
inc
jmp
jbe
mov
mov
xor
movs
inc
(bad)
jne
imul
add
jmp
xor
add
(bad)
jne
imul
add
jmp
jae
mov
xor
sub
popf
ret
pop
cmp
lock
jae
mov
dec
mov
aaa
imul
push
mov
mov
jae
mov
jae
mov
push
mov
shl
lock
sub
mov
jae
mov
jno
fstp
jae
mov
repz
scas
jae
(bad)
in
jae
mov
pop
icebp
xor
jae
mov
jae
mov
mov
cli
scas
sbb
shl
lock
jae
mov
jno
jmp
jae
mov
(bad)
sub
mov
jae
mov
cmp
lock
jae
mov
and
std
mov
jae
mov
jae
mov
cmp
lock
in
jae
mov
cmp
push
fucomip
jae
mov
es
jmp
jae
mov
cmp
or
adc
jp
movs
cmp
cmp
inc
cmp
std
or
frstor
cmps
into
push
jnp
ins
pop
retf
inc
stc
imul
jmp
neg
xchg
ins
out
pop
jb
out
adc
push
push
dec
retf
pop
xchg
xor
inc
jmp
push
jmp
scas
mov
(bad)
mov
xchg
(bad)
jb
push
sbb
inc
in
scas
jns
(bad)
fstp
sub
rcr
xchg
jae
mov
repz
ret
cwde
and
lods
sbb
jmp
icebp
dec
sahf
sub
jmp
xor
push
sbb
aaa
out
dec
xor
inc
cwde
push
jmp
mov
xchg
xor
sub
enter
ret
inc
xchg
inc
(bad)
and
pop
loope
xor
repnz
xchg
sbb
pop
mov
fimul
cmp
pop
call
or
imul
inc
emms
aas
mov
adc
(bad)
pop
femms
cmp
pop
adc
push
xor
pop
cmp
inc
pop
adc
cmp
dec
and
cmp
mov
adc
inc
inc
or
pop
mov
inc
pop
mov
jno
dec
cmp
popf
inc
mov
addr16
pop
idiv
jg
push
cld
jg
sbb
xchg
sbb
jg
sbb
pop
sbb
push
daa
mov
sbb
jg
sbb
jg
sbb
pop
dec
dec
xor
lahf
dec
test
cld
jg
sbb
pop
sbb
std
jg
xchg
cld
jg
sbb
jg
sbb
int3
pop
lds
xchg
xor
cs
mov
push
push
cld
jg
sbb
jg
sbb
jge
push
cld
jg
sbb
jg
sbb
das
sbb
mov
dec
jbe
jg
push
cld
jg
sbb
xlat
push
fs
xchg
push
pushf
daa
or
cld
call
sbb
jge
js
jg
sbb
pop
sbb
push
push
cld
jg
sbb
jg
sbb
pop
sbb
(bad)
jg
inc
cld
jg
sbb
jg
sbb
mov
cld
jg
sbb
jg
sbb
jg
sbb
stos
sbb
imul
cld
jg
sbb
jg
sbb
stos
sbb
fwait
jge
xor
cld
stos
sbb
arpl
and
jg
sbb
jg
sbb
mov
sbb
fwait
jae
(bad)
jp
(bad)
jg
push
cld
jg
sbb
jg
sbb
dec
dec
aam
jg
sbb
jg
sbb
mov
jp
jg
sbb
jg
sbb
sbb
mov
push
push
cld
jg
sbb
jg
sbb
xlat
sbb
imul
jp
cld
jg
sbb
jg
sbb
jno
jg
sbb
jg
sbb
sbb
sbb
jg
mov
jg
sbb
jg
sbb
jb
jg
sbb
sbb
sbb
jg
xchg
jg
sbb
jb
jg
sbb
jg
sbb
jg
sbb
add
xor
mov
out
stos
mov
pop
mov
xchg
push
push
fwait
push
daa
mov
sbb
aas
sbb
mov
xor
pop
lahf
out
cli
cld
jg
sbb
jg
sbb
jg
sbb
jno
jg
sbb
jns
jg
sbb
jg
sbb
jg
sbb
jg
sbb
jg
sbb
jg
sbb
jg
sbb
stos
sbb
xchg
jge
mov
jg
sbb
stos
sbb
arpl
cmp
stos
sbb
fwait
jge
mov
jg
sbb
jg
sbb
lahf
sbb
lods
add
xor
mov
mov
cmp
push
fs
xchg
push
jl
imul
test
mov
nop
xchg
mov
and
add
ds
xchg
inc
jbe
push
push
mov
or
inc
into
mul
add
stos
fsubr
push
push
ret
pop
stos
leave
mov
mov
jmp
cmp
mov
retf
mov
pop
(bad)
mov
jae
mov
jae
mov
jae
mov
pushf
dec
push
inc
ret
pop
jae
mov
jae
mov
jae
mov
out
mov
(bad)
cmp
cmp
lods
in
int
push
std
dec
cmp
jge
inc
outs
ss
repnz
outs
cmp
ja
inc
dec
cmp
pop
add
jne
movs
xlat
mov
xor
and
dec
(bad)
xor
cli
jno
ss
leave
sub
push
add
(bad)
xor
mov
fldenv
call
cmp
sbb
mov
xor
mov
cmp
mov
lods
cmp
mov
adc
aas
mov
std
inc
xchg
frndint
mov
mov
push
repz
cmps
dec
mov
mov
cmp
loopne
rcl
shl
cmps
fidivr
or
xchg
std
fiadd
mov
push
leave
daa
sbb
mov
push
push
pop
imul
mov
fstp
sub
adc
xchg
jg
mov
mov
add
ret
inc
out
rcl
pop
add
pop
mov
inc
pop
(bad)
xchg
inc
add
sar
add
jge
xor
xchg
out
(bad)
sbb
pop
sub
or
adc
ds
imul
inc
enter
xchg
mov
xchg
jg
xchg
mov
shr
ret
push
xchg
mov
outs
or
push
test
test
pop
leave
div
data16
xchg
mov
xchg
jecxz
sbb
shl
popf
mov
xchg
das
mov
lahf
movs
and
leave
gs
mov
imul
addr16
mov
dec
in
jmp
fidivr
popa
test
sub
ds
pusha
rol
addr16
jmp
sub
xchg
mov
aaa
sub
test
or
jmp
enter
xchg
mov
fild
jmp
enter
xchg
mov
xchg
sub
xor
sub
mov
xchg
mov
push
ror
xchg
mov
xchg
sub
aaa
(bad)
je
xchg
or
addr16
mov
mov
mov
loopne
ret
test
addr16
mov
ds
mov
test
mov
or
mov
mov
jns
rcr
addr16
mov
aaa
mov
cmc
lahf
in
or
gs
mov
leave
cmp
push
xor
popa
div
(bad)
jo
add
lahf
mov
xchg
mov
(bad)
aas
sub
or
cmp
jmp
sub
loope
pop
lahf
or
sub
lahf
xchg
mov
shl
je
enter
xchg
mov
ficomp
shl
sahf
or
push
loope
sub
shr
(bad)
push
xchg
mov
dec
aam
loope
imul
rol
addr16
mov
dec
aam
loope
dec
sahf
or
push
repz
xchg
addr16
dec
gs
sub
scas
adc
or
enter
enter
js
shl
popf
mov
imul
xchg
mov
stc
gs
mov
addr16
sbb
test
addr16
mov
xchg
dec
xor
(bad)
sar
mov
xchg
mov
aaa
(bad)
loopne
leave
and
xchg
sbb
mov
push
imul
mov
cld
fistp
aaa
(bad)
loopne
fcmovne
ins
jmp
xchg
mov
(bad)
lods
fs
(bad)
add
enter
xchg
mov
(bad)
jg
mov
fstp
je
std
jg
mov
push
cmp
sub
mov
aaa
(bad)
pushf
or
loop
sub
aaa
push
or
sub
cmps
fisubr
sahf
or
addr16
mov
popa
sub
jne
sub
neg
mov
cmc
dec
aam
loope
mov
xchg
mov
xor
js
mov
xor
jg
mov
mov
pop
test
(bad)
pushf
or
loop
and
aaa
bound
mov
xchg
mov
fimul
fnstenv
popfw
or
addr16
stc
aaa
(bad)
pushf
or
loop
sub
xchg
aad
sub
daa
enter
mov
push
mov
pop
or
aaa
(bad)
pushf
or
enter
sbb
push
test
test
(bad)
and
fisttp
aas
repnz
and
pop
xor
(bad)
popf
mov
(bad)
inc
or
aam
and
pushf
or
gs
in
addr16
mov
cld
aas
leave
repnz
(bad)
push
or
or
or
(bad)
pushf
or
fs
push
test
test
(bad)
push
or
(bad)
mov
enter
outs
(bad)
rcl
addr16
mov
fidivr
fnstenv
popfw
or
pop
sub
out
addr16
mov
test
test
sub
jmp
xchg
mov
es
in
ja
rol
pop
sub
in
addr16
mov
xchg
mov
out
cld
and
addr16
or
addr16
mov
xchg
mov
(bad)
sub
or
inc
jecxz
dec
arpl
xchg
mov
fisubr
and
xchg
mov
(bad)
push
repz
xchg
mov
xchg
mov
out
adc
xchg
mov
enter
xchg
mov
xchg
sub
loope
repz
push
lds
xchg
mov
xchg
sub
push
enter
xchg
mov
les
jl
cs
and
je
retf
sbb
addr16
test
or
fisubr
repz
popa
test
test
sub
retf
popa
idiv
pop
jae
retf
sbb
and
xchg
or
addr16
mov
out
sub
xchg
mov
fcmovbe
ins
add
icebp
sahf
or
sub
neg
aam
and
jle
or
sub
xchg
mov
sub
push
bound
addr16
mov
imul
or
data16
or
addr16
mov
movs
cmp
or
arpl
sbb
jbe
fmul
mov
sbb
jbe
xlat
retf
inc
cmp
rol
xchg
mov
pop
mov
add
jae
mov
jae
mov
mov
(bad)
ret
pop
jae
mov
mov
inc
out
in
test
jae
(bad)
in
jae
mov
ret
jle
mov
aaa
cmp
mov
xlat
mov
shl
mov
sti
outs
cmp
jl
jb
jmp
pop
cmp
push
or
sti
sti
outs
cmp
xor
test
adc
(bad)
push
add
dec
sar
mov
std
test
adc
or
mov
loope
add
push
inc
cs
repz
aas
mov
push
add
out
or
pop
iret
adc
dec
repnz
cmc
pop
aas
mov
cld
lods
aas
push
jae
sbb
xlat
int3
push
pop
loopne
sti
sahf
adc
mov
mov
shl
xchg
lods
lds
cmps
fstp
or
rcl
not
pop
std
lods
les
out
sub
inc
inc
out
dec
xchg
mov
movs
dec
jecxz
add
add
mov
cmp
dec
push
mov
iret
dec
xor
repz
add
sbb
adc
push
pop
push
sar
push
inc
inc
aas
adc
je
mov
ret
cwde
add
sbb
ret
pop
enter
xor
dec
jge
dec
ret
pop
aad
in
(bad)
adc
mov
into
push
pop
jb
pop
out
fimul
clc
outs
(bad)
push
fwait
or
xor
arpl
imul
js
inc
push
mov
ret
out
add
inc
push
mov
sub
js
inc
push
dec
mov
push
in
pop
inc
inc
pop
inc
push
or
or
mov
push
push
inc
jp
add
mov
inc
sub
sub
or
imul
fistp
push
or
adc
or
dec
fs
pop
pop
xor
mov
push
or
inc
ret
or
adc
or
or
inc
push
pop
pop
std
xor
xchg
inc
cs
push
inc
ret
or
adc
jmp
push
push
inc
outs
mov
or
pop
push
or
or
scas
gs
vmovaps
or
or
ja
push
push
or
pop
push
or
mov
xchg
mov
pop
inc
inc
push
push
or
or
pop
gs
dec
(bad)
cmp
add
push
or
(bad)
fs
adc
cmp
push
or
pop
gs
dec
(bad)
cmp
add
push
or
or
push
mov
push
pop
gs
mov
ja
test
sub
mov
push
sbb
mov
daa
aad
push
in
pop
ret
pop
xor
mov
movs
ds
std
lods
cmp
std
fnstcw
mov
std
push
retf
cli
jmp
add
mov
dec
pop
arpl
pop
repz
cmps
rcr
frstor
cmp
dec
mov
adc
dec
cmp
pop
add
(bad)
or
ret
pop
and
pop
push
jnp
mov
cld
dec
and
mov
sbb
jae
push
daa
lods
in
scas
ficom
inc
mov
push
leave
mov
cmps
cld
dec
adc
jp
std
add
ret
pop
pushf
push
dec
test
adc
fwait
lods
jne
je
pop
sbb
std
lods
sar
je
in
std
lods
jecxz
pop
pop
outs
dec
push
and
sbb
jp
or
ret
pop
nop
cmp
adc
inc
inc
pop
pop
xchg
jne
mov
jecxz
cmp
xchg
pop
std
dec
xchg
icebp
pop
inc
ds
dec
icebp
mov
sbb
xor
out
mov
sbb
push
repz
call
pop
out
inc
out
cmp
jo
jmp
dec
or
cmp
ret
dec
push
fiadd
and
push
lds
and
pop
lds
inc
pop
push
mov
and
push
lds
pop
xchg
mov
imul
and
push
lds
and
push
lds
xchg
dec
pushf
or
mov
xchg
xchg
lahf
cmp
je
push
lahf
in
push
mov
push
je
inc
repnz
mov
loop
mov
mov
test
ret
or
mov
jae
mov
and
std
mov
jae
mov
jae
mov
sub
loope
cmp
lock
ds
mov
cmp
lock
jae
mov
and
int
jae
(bad)
in
jae
mov
jae
mov
sub
mov
ret
pop
jae
mov
jae
mov
jae
mov
xchg
mov
push
test
mov
mov
jae
mov
jae
mov
ret
inc
aas
mov
inc
jae
mov
sbb
shl
sub
xchg
mov
jae
mov
jae
mov
or
add
cmps
test
jae
(bad)
in
jae
mov
jae
mov
test
(bad)
and
dec
stos
jae
mov
jae
mov
jl
mov
jle
jmp
mov
mov
jae
mov
xor
sub
jmp
jae
mov
adc
mov
jae
mov
out
jae
imul
jae
mov
jae
mov
jle
call
cmp
inc
add
cmps
test
jae
(bad)
in
jae
mov
jae
mov
fild
scas
xchg
imul
lock
jmp
jae
mov
adc
mov
jae
mov
out
ret
pop
jae
add
jae
mov
jae
mov
stos
leave
mov
cmp
or
adc
repnz
jae
mov
ret
pop
jae
add
jae
mov
jae
mov
cs
mov
jae
mov
inc
mov
lock
lock
jae
mov
iret
inc
loop
ds
cld
mov
jae
mov
jae
mov
aas
repnz
jae
mov
jae
mov
jae
mov
or
ret
pop
sbb
mov
ret
pop
mov
cmp
lock
in
jae
mov
mov
cmp
lock
in
jae
mov
sub
ret
pop
xchg
mov
retf
pop
add
xor
pop
cmp
pop
mov
jae
mov
fild
scas
xlat
mov
cld
mov
jae
mov
sub
ret
pop
add
jge
pop
mov
mov
jmp
jae
mov
or
dec
pop
shl
add
test
mov
jae
mov
aas
repnz
jae
mov
jae
mov
jae
mov
push
pop
add
jno
out
jae
mov
pop
push
ds
pop
in
mov
std
mov
jae
mov
jae
mov
xor
out
ret
pop
add
xchg
add
lock
jae
mov
jae
mov
pop
xlat
jb
add
lock
jae
mov
sbb
mov
jae
mov
jae
mov
xchg
fnstenv
mov
lock
jae
mov
ret
pop
jae
add
jae
mov
stos
leave
mov
cmp
or
adc
repnz
ds
mov
ret
pop
jae
mov
jae
mov
das
mov
mov
jae
mov
inc
mov
lock
lock
and
push
pop
cmp
repnz
jae
mov
aas
repnz
jae
mov
jae
mov
jae
mov
or
ret
pop
sbb
mov
ret
pop
mov
cmp
lock
in
jae
mov
jae
mov
mov
cmp
lock
in
jae
mov
jae
mov
sub
ret
pop
xchg
mov
retf
pop
add
xor
pop
cmp
pop
mov
jae
mov
jae
mov
add
or
jae
(bad)
in
jae
mov
sub
ret
pop
add
jns
pop
mov
mov
jmp
jae
mov
or
dec
pop
shl
add
test
mov
jae
mov
aas
repnz
jae
mov
jae
mov
push
pop
add
jno
out
jae
mov
jae
mov
pop
push
cs
pop
in
mov
std
mov
jae
mov
xor
out
ret
pop
or
adc
dec
adc
fucomip
jae
mov
jae
(bad)
in
jae
mov
shr
jecxz
mov
mov
jae
mov
xor
xor
add
(bad)
xchg
lea
mov
jae
mov
rol
jb
add
lock
jae
mov
dec
mov
aaa
imul
cli
mov
cmp
lock
in
jae
mov
jae
mov
cmp
add
out
mov
jae
mov
int3
icebp
(bad)
jae
mov
jae
mov
jno
or
jl
rcl
or
pop
icebp
pop
pop
jae
mov
jae
mov
cmp
lods
pop
pop
jae
(bad)
in
jae
mov
sub
(bad)
adc
cmp
(bad)
mov
cmp
lock
jae
mov
jae
mov
jno
shl
jae
mov
adc
push
pop
ss
ret
pop
ret
pop
inc
mov
mov
jmp
jae
mov
out
inc
loop
ds
jmp
inc
mov
pop
add
mov
or
inc
jmp
pop
add
jno
out
jae
mov
jae
mov
ret
inc
cmp
(bad)
mov
cmp
lock
jae
mov
mov
pushf
inc
add
cmp
lock
jae
mov
jae
mov
jno
shl
jae
mov
push
mov
mov
jae
mov
aas
mov
jmp
xor
out
ret
pop
les
jmp
mov
out
mov
dec
sbb
mov
icebp
pop
pop
jae
mov
jae
mov
sub
mov
adc
and
jae
mov
out
jae
mov
mov
cmp
add
or
shl
sub
scas
ret
pop
sbb
shl
jae
mov
jae
(bad)
in
jae
mov
icebp
pop
add
jno
out
jae
mov
jae
mov
xor
and
jmp
inc
cli
mov
jae
(bad)
in
jae
mov
pop
xchg
jb
add
lock
jl
adc
sub
add
jae
mov
cmp
jmp
adc
lahf
in
jae
mov
ds
mov
ret
pop
jae
mov
jae
mov
jae
mov
xor
imul
shr
jmp
mov
lock
jae
mov
aas
repnz
jae
mov
jae
mov
inc
pop
add
jno
out
jae
mov
jae
mov
ret
inc
sub
xchg
lea
mov
and
stc
mov
jae
mov
xchg
cmp
mov
lock
jae
mov
jae
mov
ret
pop
jae
add
jae
mov
jae
mov
xor
mov
adc
cmc
shr
push
ficomp
repnz
mov
jae
mov
shr
and
mov
jae
mov
jae
mov
cs
stos
mov
std
enter
add
jno
out
jae
mov
jae
mov
and
or
in
jae
mov
sub
xchg
sub
mov
pop
and
div
out
jae
mov
jae
mov
cld
icebp
shl
dec
(bad)
mov
jae
mov
sbb
mov
jae
mov
dec
mov
aaa
imul
pop
inc
push
cld
pop
cmp
daa
mov
jae
mov
cmp
pop
jae
mov
cmp
out
ds
push
push
arpl
std
mov
loop
cli
imul
xor
push
pop
div
ret
cmps
push
mov
cld
mov
(bad)
dec
loop
jb
stc
outs
shr
loope
or
xchg
mov
pop
call
jmp
or
adc
xor
mov
mov
sbb
imul
pop
out
dec
or
popf
cmp
mov
pop
call
icebp
dec
ds
push
push
(bad)
rcl
cmp
(bad)
mov
jmp
fwait
adc
fst
(bad)
fstp
or
cmp
inc
ss
sar
shl
add
in
or
dec
cdq
dec
adc
cmp
adc
pop
xchg
jno
lods
push
mov
std
dec
sar
sbb
adc
test
adc
or
dec
(bad)
dec
inc
cmp
dec
cli
xor
inc
adc
or
xor
dec
xor
mov
dec
call
pop
aad
cmp
cdq
adc
mov
push
add
push
jb
pop
movlhps
imul
cld
movs
ficom
rol
arpl
adc
cmp
arpl
mov
adc
popa
adc
jbe
adc
or
(bad)
pop
arpl
mov
arpl
mov
adc
arpl
mov
adc
dec
adc
bound
mov
adc
and
lds
adc
pop
arpl
pop
bound
aam
arpl
mov
or
pop
arpl
mov
jl
xor
mov
adc
pop
mov
xchg
pop
arpl
rcr
mov
dec
(bad)
mov
js
arpl
(bad)
pop
jp
shr
adc
or
adc
arpl
mov
adc
es
(bad)
movs
arpl
mov
adc
pushf
push
test
into
inc
xchg
clc
arpl
rcr
(bad)
pop
cli
cld
aad
sar
fcom
arpl
mov
pop
fiadd
sub
adc
arpl
pop
or
jl
mov
je
cdq
ret
pop
xlat
cmp
jmp
movs
shl
in
ret
pop
lahf
cdq
mov
pop
jae
mov
jae
mov
jae
mov
cmp
dec
ret
add
lock
jae
mov
jae
mov
mov
lock
jae
mov
fild
scas
and
or
in
jae
mov
inc
mov
cld
mov
(bad)
dec
jle
jb
add
lock
jae
mov
cmp
out
pop
cmps
mov
ja
aas
neg
pop
add
jno
out
jae
mov
jae
mov
ret
imul
mov
jbe
mov
xchg
mov
pop
mov
push
cld
pop
cmp
daa
mov
jae
mov
jae
mov
jb
jmp
jae
mov
jg
mov
jmp
div
out
jae
mov
jae
mov
pop
xchg
mov
jb
mov
jae
mov
jno
fcmovnb
jae
mov
jae
mov
adc
mov
jae
fucomip
jae
mov
jae
mov
pop
scas
mov
jae
mov
jae
mov
jae
mov
lods
cmc
enter
push
mov
xchg
mov
add
jno
out
jae
mov
int3
mov
ret
mov
pop
pushf
inc
add
cmps
test
jae
(bad)
in
jae
mov
jae
mov
jmp
div
out
jae
mov
adc
mov
cs
std
mov
and
xchg
popf
mov
mov
jae
mov
jae
mov
jmp
mov
jbe
mov
push
movs
and
outs
lock
cmp
fmul
and
mul
test
in
cmp
lock
adc
mov
out
jae
mov
rol
jae
mov
jae
mov
jae
mov
jle
mov
pop
ret
(bad)
mov
cmp
inc
push
mov
je
mov
cmps
loopne
and
pop
dec
sahf
jno
push
cmp
fidiv
dec
cmp
push
inc
cmp
stc
imul
loop
sub
jmp
adc
lds
sbb
cmp
lods
and
mov
ficom
mov
ret
add
xor
repz
ds
adc
repnz
or
ds
push
pop
adc
sbb
and
push
push
out
dec
xchg
and
dec
fidiv
jbe
cmp
dec
jb
sahf
add
ret
pop
mov
fdiv
cmps
push
push
shr
out
add
or
rol
or
xchg
adc
cmp
inc
sub
call
pop
cs
pop
leave
mov
mov
pushf
push
(bad)
fnstcw
jl
and
call
pop
into
dec
ret
adc
mov
cld
adc
push
inc
test
dec
xchg
xchg
push
push
scas
clc
stc
outs
(bad)
add
jnp
xor
dec
pushw
push
adc
movs
xor
movs
xor
out
mov
into
in
or
xor
movs
xor
or
dec
(bad)
aam
inc
and
jb
mov
mov
aas
sbb
enter
cmps
xor
int3
sbb
or
ror
rcr
pop
das
dec
call
xor
movs
xor
push
xor
or
xor
movs
xor
stos
cmps
xor
imul
adc
movs
xor
movs
xor
pop
movs
xor
call
xor
movs
xor
push
adc
movs
xor
movs
xor
movs
xor
jno
adc
adc
adc
movs
xor
cmps
pusha
pop
mov
adc
pop
adc
pusha
inc
jmp
pop
out
jge
mov
addr16
mov
jmp
pop
or
inc
jb
add
lock
dec
mov
out
imul
shl
jae
mov
jno
or
jae
mov
jmp
mov
jae
mov
cmp
mov
dec
in
jae
mov
and
sbb
jae
mov
jae
mov
jecxz
mov
jae
mov
jae
mov
jae
mov
pop
icebp
inc
lea
mov
mov
mov
scas
jae
mov
jae
mov
or
mov
jne
mov
xor
mov
jae
mov
cmp
push
mov
cmp
mov
jae
mov
jno
xlat
aas
jae
mov
jno
fistp
jae
mov
jno
fistp
jae
mov
jae
mov
xor
dec
inc
rcr
ficomp
mov
test
cmp
lock
jae
mov
repnz
test
xlat
mov
jae
mov
daa
dec
mov
lods
xchg
div
lock
jae
mov
jae
mov
jbe
mov
lea
out
mov
xchg
adc
int
jae
mov
daa
xchg
mov
nop
mov
jbe
mov
in
mov
fsubr
out
mov
cmp
mov
mov
mov
dec
mov
ss
iret
and
sbb
push
(bad)
push
lahf
push
sub
cmp
pop
cmp
(bad)
dec
test
push
jecxz
jecxz
jmp
push
or
stos
test
aam
push
fidivr
mov
icebp
dec
sbb
pop
popf
dec
(bad)
dec
ds
std
lods
rcr
adc
xor
aas
mov
cld
dec
shl
outs
and
mov
jmp
js
(bad)
adc
mov
dec
test
push
cs
pop
sub
mov
cmp
div
mov
dec
cs
repz
ds
push
iretw
pop
inc
dec
cmp
adc
add
cmp
inc
(bad)
mov
mov
aas
dec
(bad)
cmps
stc
inc
adc
and
xor
mov
push
out
push
adc
mov
movs
push
repnz
push
out
or
aad
cmp
and
inc
xor
cs
mov
shr
or
mov
ret
pop
bound
out
inc
add
addr16
xor
repnz
adc
cwde
clc
sbb
xlat
push
push
bound
cdq
push
mov
clc
inc
push
cwde
clc
sbb
call
sub
repz
jo
push
push
jmp
(bad)
xchg
jae
mov
and
jbe
push
sub
stos
cwde
aad
lds
push
inc
test
mov
or
pop
adc
mov
inc
std
popf
cmp
jae
xor
push
mov
test
inc
push
pop
pop
sub
dec
cmp
jb
mov
cmp
pop
mov
ds
xor
push
jno
dec
retf
inc
sbb
in
aam
inc
jmp
cmps
in
(bad)
sbb
push
(bad)
xchg
adc
fstp
or
(bad)
repz
add
add
lock
mov
dec
sbb
icebp
push
xor
(bad)
mov
xor
jge
push
out
push
mov
mov
(bad)
js
cmp
mov
call
mov
mov
cld
mov
ds
or
xchg
sbb
pop
dec
in
dec
xchg
sbb
push
pop
push
inc
add
ds
adc
mov
push
ds
adc
or
ret
pop
jmp
adc
scas
loope
neg
fs
cs
inc
cmp
xchg
jne
mov
or
dec
(bad)
fadd
inc
rcr
push
cmp
inc
push
pop
cdq
lea
ret
pop
cmp
sub
sbb
jo
push
loopne
xor
cs
pop
cmp
inc
add
push
lods
inc
add
add
sbb
push
fisub
cmp
movs
and
mov
adc
jno
adc
adc
dec
leave
cmp
pop
cmp
push
movs
adc
adc
dec
xor
sbb
pop
xchg
cs
adc
push
add
or
adc
mov
mov
enter
xchg
adc
sbb
popf
cs
adc
or
ss
int
pop
pop
xor
bound
sbb
fidiv
push
shl
sbb
dec
jno
xor
inc
leave
fiadd
fldcw
lea
xchg
xor
or
xor
adc
xchg
cmc
xchg
adc
sbb
popf
cs
adc
xor
stc
int
out
fnsave
bound
sbb
fidiv
push
shl
sbb
dec
jno
xor
xor
fisubr
adc
push
add
cs
adc
or
out
fnstsw
mov
add
je
dec
loope
or
(bad)
into
mov
push
fild
dec
loope
int3
dec
loope
into
dec
loope
into
add
lds
add
je
dec
loope
or
xchg
xchg
and
inc
and
add
loope
xchg
mov
and
add
sub
jg
add
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
test
shl
mov
adc
xchg
sar
sar
xor
repz
or
mov
stc
outs
cmp
or
outs
ror
int3
inc
aad
das
dec
mov
stos
or
js
sahf
ret
pop
fld
or
adc
lea
mov
std
add
push
sti
mov
xor
push
push
fld
or
adc
push
fwait
lods
mov
(bad)
mov
push
aad
xor
aad
out
loopne
outs
clc
daa
mov
(bad)
mov
sub
fwait
mov
ds
sti
sbb
push
push
adc
shl
inc
int3
adc
inc
shl
lods
(bad)
adc
shl
cwde
push
pop
jns
shl
cmp
dec
cli
cmps
lea
inc
adc
daa
lods
adc
fiadd
push
xor
pop
pop
push
sti
push
jmp
out
inc
add
ds
adc
inc
and
je
pop
rcr
xchg
sbb
inc
pop
pop
cmp
inc
rol
inc
scas
loop
es
mov
std
mov
rcl
loop
inc
ss
pop
mov
std
dec
(bad)
in
dec
retf
adc
cld
repz
cmps
retf
push
fwait
dec
mov
sub
push
add
jecxz
jns
les
mov
pop
(bad)
mov
pop
mov
pop
outs
mov
pop
outs
mov
pop
cmps
mov
pop
cmps
mov
pop
outs
mov
pop
outs
mov
pop
(bad)
mov
pop
retf
pop
outs
mov
pop
outs
mov
pop
outs
mov
pop
outs
mov
mov
scas
and
inc
mov
imul
mov
pop
loop
les
mov
pop
outs
mov
pop
outs
mov
pop
outs
mov
cdq
outs
mov
fucomp
and
jns
mov
and
imul
outs
mov
pop
outs
mov
pop
outs
mov
pop
outs
mov
dec
into
push
adc
adc
sti
xchg
lods
and
fs
adc
sti
mov
and
xor
ss
mov
dec
mov
and
mov
and
xchg
jno
dec
lds
mov
mov
and
outs
pop
and
lds
adc
clc
test
mov
adc
sti
mov
and
dec
ja
sti
lds
or
mov
and
mov
and
lds
ins
mov
cmc
addr16
popa
outs
dec
lds
mov
mov
and
mov
and
(bad)
aas
and
mov
ins
mov
adc
sti
mov
and
gs
(bad)
mov
std
scas
mov
pop
outs
mov
fcomp
mov
and
mov
and
mov
and
cmps
pop
jecxz
mov
ins
stc
mov
and
mov
and
lds
ins
mov
cmc
addr16
popa
outs
dec
lds
mov
mov
and
mov
and
mov
and
(bad)
pop
xlat
mov
and
mov
and
gs
(bad)
mov
std
scas
mov
pop
outs
mov
fcomp
mov
and
dec
fbld
sti
lds
xor
mov
and
mov
and
les
mov
pop
jmp
mov
ins
stc
mov
and
cmp
and
fcomp
mov
and
mov
and
mov
and
adc
lahf
add
loop
mov
jle
mov
mov
ins
mov
adc
sti
sub
inc
or
and
mov
and
jmp
xlat
mov
and
mov
and
mov
and
(bad)
pop
push
and
mov
adc
adc
sti
mov
and
mov
sti
adc
xchg
or
jmp
in
mov
and
mov
and
les
mov
adc
adc
sti
mov
and
xor
pop
es
adc
sti
mov
and
mov
inc
ja
adc
sti
jmp
sti
or
and
movs
mov
fdiv
pop
not
mov
and
mov
sti
pushf
pop
jnp
les
mov
adc
adc
sti
mov
and
not
sbb
mov
(bad)
movs
pop
pop
inc
push
arpl
int3
push
jns
pop
mov
in
or
adc
adc
mov
and
data16
and
les
inc
mov
adc
sti
mov
and
mov
inc
arpl
adc
sti
mov
and
jmp
in
mov
and
mov
and
mov
and
int3
pop
mov
mov
and
push
jae
jnp
pop
fwait
xor
mov
and
mov
sti
pushf
pop
fwait
popf
fld
sub
mov
and
repnz
sti
(bad)
pop
push
in
iret
xchg
bound
ficom
hlt
nop
mov
and
mov
and
mov
sti
iret
pop
arpl
fld
mov
aam
mov
and
mov
and
fist
mov
in
mov
and
pop
inc
and
inc
pop
jb
mov
and
pop
inc
and
adc
jb
mov
and
mov
and
in
jb
les
ins
mov
adc
sti
mov
and
(bad)
pop
les
mov
dec
(bad)
mov
leave
std
das
sbb
pop
ins
mov
add
ins
mov
adc
sti
mov
and
xchg
push
xor
adc
mov
and
ins
pop
and
movs
pop
iret
and
std
outs
sbb
xchg
inc
das
dec
lds
mov
mov
and
mov
cmp
mov
sti
pushf
pop
fwait
lods
clc
dec
ins
mov
pop
xchg
mov
je
mov
and
jmp
xlat
mov
and
mov
and
mov
inc
inc
mov
ins
mov
adc
sti
mov
and
(bad)
imul
mov
and
ficom
mov
pop
push
mov
mov
adc
mov
les
mov
adc
adc
sti
mov
and
fistp
stos
les
ins
mov
adc
sti
mov
and
mov
and
dec
pop
jb
mov
and
mov
and
mov
and
pop
push
shl
lock
mov
and
mov
and
loope
and
mov
and
pop
js
sti
mov
adc
mov
and
mov
and
ficom
mov
pop
push
ins
mov
(bad)
imul
mov
and
ficom
mov
scas
mov
xchg
dec
(bad)
pop
into
mov
imul
push
outs
cmc
les
mov
adc
or
mov
and
mov
and
enter
mov
je
mov
and
mov
and
movs
pop
jecxz
mov
ins
stc
mov
and
mov
and
(bad)
pop
(bad)
pop
(bad)
aam
cmp
mov
pop
idiv
js
bound
inc
ins
mov
mov
mov
xchg
inc
das
dec
lds
mov
mov
and
mov
and
mov
mov
dec
lds
mov
mov
and
mov
and
xor
adc
ins
mov
dec
mov
stc
mov
sti
cmps
pop
fwait
lea
adc
sti
mov
outs
mov
or
and
cld
aas
inc
inc
mov
ins
mov
adc
sti
mov
and
retf
sti
(bad)
pop
inc
in
fld
ins
stc
mov
and
ficom
mov
fcomp
js
bound
inc
ins
mov
mov
cdq
lds
or
mov
and
push
and
jnp
std
out
sbb
pop
outs
mov
dec
(bad)
mov
leave
std
das
sbb
pop
ins
mov
aas
inc
inc
mov
ins
mov
adc
sti
mov
and
xchg
push
xor
adc
mov
and
mov
and
(bad)
pop
out
aam
adc
sti
outs
pop
and
movs
pop
iret
and
mov
or
adc
ins
mov
enter
les
cmp
ss
fcomp
mov
and
mov
and
mov
and
inc
cmp
bound
or
fcomp
mov
and
mov
and
xor
or
mov
and
retf
sti
cmp
jmpw
mov
sti
mov
and
mov
adc
mov
add
mov
xor
mov
and
mov
and
loope
and
mov
and
mov
and
retf
sti
leave
cmps
sub
in
popa
adc
mov
inc
iret
mov
and
retf
sti
leave
cmps
sub
ins
popa
(bad)
pop
xlat
mov
and
mov
and
mov
and
lds
adc
or
fcomp
mov
and
mov
and
data16
and
(bad)
mov
pop
mov
cmps
pop
jmp
mov
ins
stc
mov
and
mov
and
ins
pop
and
les
mov
imul
dec
outs
cmc
rcr
(bad)
aas
sub
mov
adc
sti
inc
add
ins
mov
adc
sti
xchg
push
sub
lods
mov
and
mov
and
mov
and
xchg
shl
lods
mov
and
mov
and
mov
mov
dec
lds
mov
mov
and
mov
and
mov
sti
sahf
pop
jnp
mov
outs
mov
cdq
outs
mov
movs
ins
jno
cdq
ss
pop
jnp
retf
sub
adc
mov
inc
sub
mov
cmp
sub
adc
mov
idiv
movs
xlat
mov
xor
dec
cmp
pop
in
dec
es
in
pop
das
xchg
mov
cld
mov
mov
add
rol
pop
pop
xor
dec
(bad)
pop
shl
mul
dec
sbb
(bad)
pop
sub
jge
cmp
retf
pushf
and
push
jge
and
lds
aad
stos
out
xor
add
int
adc
cmps
mov
push
cs
std
dec
xchg
rol
iret
sbb
or
xor
jp
inc
mov
jg
mov
push
rol
dec
ds
push
mov
mov
mov
fild
push
ret
pop
test
xchg
mov
pop
sub
inc
and
setbe
add
in
adc
jne
lods
sub
fwait
lods
std
lods
adc
mov
push
add
jbe
ret
xchg
call
pop
xchg
and
push
xchg
adc
mov
and
or
mov
out
inc
xchg
arpl
mov
adc
mov
imul
pop
out
dec
test
repz
push
jge
dec
adc
add
inc
imul
pop
out
dec
frstor
fucomi
(bad)
and
dec
pop
cmps
into
dec
out
inc
out
xlat
cli
xchg
add
cmps
cmp
repz
into
arpl
sbb
jb
cmp
jnp
xchg
add
(bad)
sahf
pop
ret
repnz
jle
outs
sbb
jmp
pop
fcmovnu
(bad)
jae
ret
iret
jecxz
jle
jb
add
(bad)
pop
jmp
ja
iret
sahf
pop
dec
fcmove
and
inc
mov
repnz
(bad)
pop
xor
dec
pop
xor
dec
pop
xor
dec
pop
xor
dec
pop
fwait
into
dec
pop
repz
out
cli
xor
dec
pop
fwait
(bad)
dec
or
jg
push
adc
add
pop
xor
adc
add
sti
xor
pop
xchg
push
dec
pop
xor
pop
cmps
fs
inc
xor
xchg
adc
add
pop
jg
dec
adc
add
pop
xor
mov
outs
dec
pop
iret
int3
out
sub
add
add
adc
add
xchg
cmp
mov
imul
add
out
push
pop
jg
pop
adc
add
dec
xor
dec
adc
add
pop
xor
adc
add
push
xor
dec
adc
int
adc
add
add
cmp
adc
int
adc
add
pop
stos
xchg
dec
sub
rcl
jge
add
clc
cwde
push
sub
mov
adc
add
aaa
ret
out
test
sub
aad
jge
dec
adc
add
shl
rol
jge
add
add
xor
pop
adc
add
shr
add
jge
add
rcl
jg
dec
adc
add
pop
xor
out
repnz
dec
jbe
stc
pop
sbb
iret
out
jne
iret
dec
pop
xor
adc
add
adc
add
pop
jg
push
adc
add
cmp
add
jge
dec
adc
add
cli
mov
scas
dec
push
iret
dec
pop
xor
sbb
jge
dec
adc
add
movs
in
add
stos
leave
jbe
xor
push
jge
dec
adc
add
fidiv
dec
adc
add
inc
mov
int
adc
add
ret
inc
pop
jg
(bad)
adc
add
jbe
rol
xor
adc
add
adc
aad
adc
add
adc
add
push
aas
rcl
aad
mov
dec
inc
mov
int
adc
add
inc
cmp
push
adc
int
adc
add
pop
iret
nop
out
sub
add
add
cmps
in
dec
pop
xor
mov
jg
push
adc
add
pop
xor
add
add
xor
ficomp
iret
dec
adc
int
adc
add
push
rol
call
iret
dec
adc
int
adc
add
mov
dec
inc
mov
int
adc
add
(bad)
mov
pop
pop
xor
dec
push
jge
dec
adc
add
adc
add
adc
aad
adc
add
jge
push
adc
add
inc
cmp
inc
mov
and
pop
pop
xor
pop
xor
dec
adc
add
hlt
je
add
mov
mov
push
leave
out
(bad)
push
lahf
dec
call
int
fnsave
cmp
mov
iret
dec
inc
mov
int
adc
add
pop
jg
(bad)
adc
add
adc
add
pop
xor
dec
adc
add
clc
xchg
add
xchg
xchg
dec
pop
xor
push
pop
xor
dec
adc
int
adc
add
cli
xor
jp
into
dec
dec
pop
into
jp
jae
pop
jbe
stc
pop
sbb
dec
leave
adc
add
sbb
pop
push
adc
add
adc
add
pop
jg
push
adc
add
adc
add
pop
int3
mov
jg
push
adc
add
pop
(bad)
dec
dec
pop
psrlq
stos
or
fidiv
fisub
dec
xchg
mov
dec
dec
movs
int3
pop
mov
and
cld
add
jmp
cmp
mov
cld
or
lahf
mov
repnz
pop
dec
cmp
pop
cdq
dec
cmp
test
adc
push
sub
dec
sahf
cmp
pop
cmp
and
cmps
aad
inc
cld
in
dec
cli
mov
jo
dec
and
outs
or
or
sub
ds
ret
pop
cmp
mov
std
lods
pop
ficom
push
xor
mov
add
xor
bound
jmp
adc
mov
(bad)
lods
add
jno
jo
mov
or
jecxz
xchg
xchg
pop
mov
sbb
(bad)
xchg
xchg
sbb
inc
cli
movs
dec
or
jmp
inc
lock
xchg
fnstsw
mov
cmp
jl
mov
dec
xor
pop
rcl
es
jns
or
imul
dec
xor
cld
dec
xor
fimul
inc
out
or
rcl
push
scas
aad
ret
mov
std
imul
add
sbb
in
ret
pop
cs
pop
add
jb
rol
neg
add
mov
xor
repz
cmps
aad
ss
sbb
cwde
mov
into
sbb
inc
sbb
pop
xor
inc
sbb
add
push
lock
(bad)
jo
cvttps2pi
inc
into
sbb
inc
sbb
add
mov
sbb
sbb
int3
lea
stc
cmp
lock
dec
mov
push
sbb
push
dec
dec
iret
add
outs
cmp
mov
mov
repnz
mov
ret
pop
xor
adc
int3
or
(bad)
xchg
cmp
pusha
mov
jae
add
jae
mov
jae
mov
fcomp
mov
ret
inc
outs
dec
jae
mov
jae
mov
jae
mov
mov
mov
mov
cmp
adc
sar
addr16
xchg
fsub
pop
popa
mov
mov
cld
mov
xlat
jb
push
pop
aas
sbb
scas
popa
pop
push
cmp
scas
sbb
push
cmp
movs
adc
ss
std
mov
aad
pop
mov
adc
cwde
mov
jmp
mov
mov
mov
rcr
pop
dec
test
mov
pop
inc
(bad)
inc
xor
cmp
push
adc
add
and
das
icebp
dec
xor
or
pop
xor
and
pop
sbb
ret
pop
(bad)
mov
push
outs
fld
or
lods
or
ret
pop
pushf
mov
std
dec
xchg
and
inc
cli
mov
or
ret
cmp
(bad)
and
in
adc
push
inc
inc
xlat
push
(bad)
push
xchg
ficom
lds
inc
xchg
dec
jmp
xchg
sbb
(bad)
and
imul
xchg
push
xchg
fisttp
jle
shr
mov
inc
push
cld
icebp
addr16
in
pop
sub
int3
repnz
fisttp
out
fyl2x
pop
mov
ds
arpl
shr
fs
push
icebp
outs
(bad)
std
fldcw
sar
imul
dec
push
shl
fadd
push
jp
icebp
outs
out
std
fldcw
shl
push
(bad)
(bad)
outs
inc
pusha
std
inc
push
cld
icebp
imul
rcl
dec
shr
popa
dec
shr
popa
dec
shr
popa
dec
shr
popa
dec
jb
popa
pop
shl
add
das
stos
les
add
das
add
mov
test
popa
add
das
add
mov
xchg
dec
shr
popa
add
das
pop
push
mov
bound
popa
add
das
dec
sar
add
in
popa
add
das
add
das
bound
mov
das
jp
mov
(bad)
jae
and
pushf
mov
das
dec
ror
fstp
inc
out
popa
dec
ror
not
out
popa
dec
sar
popa
add
das
add
push
sbb
in
popf
dec
sahf
or
das
scas
shl
add
sar
popa
add
das
jmp
popa
add
das
(bad)
shl
das
add
arpl
pushf
mov
das
push
lds
sahf
add
das
add
push
push
shl
popa
add
das
add
dec
mov
add
das
dec
jp
retf
fwait
and
popf
call
add
outs
adc
adc
dec
shr
popa
add
das
mov
mov
popa
dec
sar
popa
add
das
in
pop
dec
cs
bound
rcl
das
inc
xor
pop
dec
jb
popa
pop
rcl
add
pushf
mov
das
add
xlat
add
das
dec
sar
mov
pushf
in
popa
add
das
dec
sahf
lea
pushf
mov
das
pop
mov
bound
or
push
or
out
pusha
pop
rcl
clc
mov
retf
add
das
add
mov
mov
jle
leave
mov
jp
lods
pop
jb
int3
dec
rcr
ror
add
das
add
das
mov
ror
dec
and
push
dec
shr
(bad)
dec
shr
xor
aaa
cmp
sub
dec
shr
xor
pushf
mov
das
add
pusha
dec
jb
popa
dec
shr
shl
sar
add
ja
pushf
mov
das
add
das
dec
cs
leave
out
sar
xor
mov
das
fwait
push
in
popf
dec
cs
bound
push
sbb
dec
sahf
or
das
add
jg
ror
dec
sahf
in
popa
add
das
call
das
dec
sub
pop
dec
push
out
popa
dec
rol
add
add
das
add
push
loop
jbe
mov
add
das
add
xchg
loopne
out
pusha
inc
push
loop
data16
popa
add
das
dec
ror
mov
loope
dec
rcr
popa
add
das
jp
mov
mov
std
mov
rcr
popa
add
das
add
xchg
push
pop
jbe
sbb
gs
dec
sahf
dec
bound
pushf
mov
das
jmp
add
das
fisub
out
jecxz
mov
clc
adc
adc
dec
ror
(bad)
sub
jmp
sahf
dec
bound
pushf
mov
outs
jae
add
sub
loopne
dec
push
out
pusha
pop
push
lea
loop
bound
popa
add
das
add
mov
fimul
push
lds
sub
cmp
dec
shl
add
das
mov
push
out
pusha
pop
push
mov
bound
popa
add
das
mov
ret
push
lds
cmp
cmp
dec
shl
arpl
pushf
mov
das
loop
mov
jbe
shr
pusha
add
das
add
das
js
inc
(bad)
in
dec
sbb
sahf
add
das
dec
shr
popa
add
das
pusha
inc
inc
adc
out
jge
dec
sar
popa
pop
shr
dec
shr
add
das
fsubr
inc
dec
dec
sar
popa
pop
inc
out
ins
lods
push
push
or
pusha
mov
sub
add
das
add
das
add
das
mov
mov
ret
adc
add
das
pushf
mov
bound
pusha
dec
cs
leave
mov
cmp
add
das
jae
or
sahf
add
das
inc
and
das
dec
sar
mov
sub
xchg
add
das
dec
xchg
popa
add
das
pop
shr
das
add
das
dec
shr
das
add
mov
pushf
in
sub
add
mov
xor
pushf
in
sub
add
das
dec
rol
mov
add
das
add
jg
push
dec
bound
inc
sti
pop
cmp
movs
dec
push
dec
(bad)
out
sar
inc
pop
sahf
in
movs
dec
jb
bound
shl
out
dec
out
adc
add
sbb
ret
pop
jae
mov
jae
mov
jae
mov
ds
pop
push
jae
add
jae
mov
jae
mov
mov
inc
(bad)
mov
jae
(bad)
in
jae
mov
xor
pop
ds
std
mov
cmp
std
mov
cmp
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
ret
pop
cmp
mov
std
mov
cmp
mov
(bad)
pop
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
mov
ds
mov
mov
std
mov
cmp
mov
std
mov
xchg
adc
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
xor
adc
mov
xor
cmp
jmp
imul
push
std
or
pop
test
jbe
rcl
cmp
pop
fist
jl
imul
sahf
popf
add
mov
cmp
adc
out
push
out
movs
(bad)
test
mov
ret
pop
aam
scas
test
adc
arpl
cmps
inc
mov
nop
sbb
mov
enter
repnz
std
mov
cmp
adc
xchg
adc
scas
xchg
jno
mov
ret
inc
inc
adc
pop
aam
repnz
dec
jmp
and
stc
imul
pop
push
repnz
or
cs
repz
xor
push
mul
out
or
jg
dec
push
sub
ret
pop
leave
neg
mov
in
push
into
cmp
xor
rol
cmps
mov
std
mov
fstp
ret
fadd
pop
rcl
add
lods
add
xchg
call
pop
aad
pop
mov
adc
daa
lods
and
xchg
fisttp
dec
aas
mov
dec
cdq
cld
push
ret
pop
mov
gs
sti
outs
cmp
dec
ror
je
sbb
outs
xchg
sbb
push
xor
gs
cmps
jnp
movs
movs
jnp
movs
movs
sbb
cmps
dec
xchg
loop
jmp
movs
movs
jnp
movs
movs
shr
stos
jnp
call
movs
jnp
movs
movs
sub
in
xor
xchg
jnp
movs
movs
sub
xor
xor
xor
sub
retf
adc
xor
jnp
movs
movs
xchg
into
inc
jmp
movs
movs
and
cmc
xor
and
aaa
inc
pop
mov
sbb
es
and
call
call
(bad)
jle
xor
jle
add
mov
aaa
imul
sub
add
mov
std
or
(bad)
xor
sar
cmp
mov
or
mov
(bad)
iret
cli
outs
rcl
jge
dec
in
pusha
neg
shl
mov
pop
leave
repz
ficomp
stos
cmp
sbb
scas
inc
in
dec
xchg
xor
dec
shl
mov
ret
mov
call
and
popf
xchg
mov
pop
test
pop
cwde
sbb
jmp
ds
dec
aad
xor
rcr
jmp
loope
mov
mov
push
pop
iret
and
ds
pop
sbb
mov
push
xor
mov
push
jmp
lock
push
cs
sub
inc
push
pop
ret
pop
arpl
daa
inc
out
mov
cld
dec
xchg
sbb
lock
cli
cwde
mov
inc
add
or
jmp
in
xchg
and
add
stc
imul
fiadd
inc
retf
(bad)
sti
outs
(bad)
sbb
dec
(bad)
pop
in
dec
dec
xor
push
mov
jle
push
fistp
push
mov
jle
push
mov
jle
sub
jle
add
jl
push
mov
jg
dec
mov
inc
push
mov
jge
push
mov
jle
pop
out
jg
mov
or
push
pop
cdq
push
lock
jne
int3
cmp
mov
jle
push
mov
push
sbb
pop
mov
jle
push
mov
jge
call
mov
jle
push
fistp
push
mov
jle
push
fistp
push
mov
jle
push
mov
jge
add
sbb
bound
stos
cmp
jle
ja
jle
push
mov
jl
push
mov
jl
push
mov
jge
aad
int3
cmp
mov
jle
pop
out
and
(bad)
lock
fucom
or
sbb
aam
cmp
xor
lock
push
add
iret
in
push
xor
std
inc
pop
xor
mov
cmc
push
lock
push
std
mov
cmp
(bad)
push
mov
sub
xchg
or
xor
repz
jmp
xor
push
cs
mov
mov
xchg
and
(bad)
pop
not
mov
stos
rol
rol
clc
cmps
push
pop
cs
mov
jnp
repnz
rcl
cmp
mov
lock
fisub
add
cmp
push
adc
sbb
fld
or
fisttp
mov
cmps
cmp
call
pop
dec
xchg
mov
push
fwait
xchg
mov
push
cmp
inc
mov
or
inc
sbb
int3
push
add
adc
idiv
push
dec
repnz
xor
adc
mov
xchg
or
pop
jg
adc
cmp
and
bound
shl
sbb
inc
push
out
dec
(bad)
mov
dec
cmp
push
mov
shr
mov
fwait
lods
(bad)
rol
repz
add
xor
push
ficom
sbb
adc
inc
sar
jmp
div
jae
rcl
jge
ss
mov
imul
jb
cmp
and
ins
mov
retf
leave
bound
call
xor
xchg
add
xor
add
push
cs
xor
push
or
dec
pop
push
cs
add
or
ret
gs
add
fadd
add
ret
cmps
pop
xlat
or
adc
cmps
pop
mov
popa
add
xchg
sahf
cld
adc
ret
cmp
loop
icebp
shl
jae
mov
imul
jae
mov
jae
mov
jae
mov
dec
mov
aaa
imul
cli
push
xchg
push
(bad)
mov
cmp
add
pushf
mov
sub
call
jle
mov
xor
outs
mov
(bad)
mov
sbb
data16
lea
retf
inc
enter
mov
mov
push
aad
cmp
cmp
mov
dec
leave
lods
inc
adc
and
pop
sub
aad
pop
mov
adc
push
fst
mov
cmps
dec
adc
pop
lods
pop
loop
xchg
push
(bad)
mov
cmp
pop
mov
inc
(bad)
mov
mov
pushf
fmul
push
jmp
sahf
add
sbb
or
xor
(bad)
push
inc
call
lods
add
(bad)
dec
xor
push
sub
popf
ret
pop
(bad)
pop
retf
mov
push
leave
lahf
sbb
xchg
add
xor
aad
out
aam
push
xor
test
ret
movs
add
adc
pop
pop
mov
in
ds
xor
cmp
dec
and
push
mov
fcmove
gs
and
jne
or
xor
push
fmulp
xor
cmp
arpl
xchg
sahf
aaa
cmp
ja
dec
and
push
(bad)
mov
ss
push
lahf
jbe
push
repnz
out
push
retf
pop
test
pusha
jbe
(bad)
ss
mov
enter
jne
imul
std
xchg
jp
adc
xlat
retf
push
sub
add
pusha
jbe
(bad)
ss
mov
(bad)
retf
pusha
cs
(bad)
ss
mov
xlat
retf
jbe
push
and
sahf
sbb
pushf
push
ss
adc
pop
nop
jns
movs
xchg
jns
sbb
sub
mov
push
jecxz
push
push
cmps
shl
inc
sbb
ss
fdiv
cs
shl
inc
jg
aaa
push
and
push
mov
inc
xchg
and
add
jb
jmp
jae
mov
dec
mov
aaa
cmp
inc
pop
dec
adc
loope
jle
or
mov
jmp
lea
push
fstp
mov
cmp
add
mov
je
mov
push
stc
imul
out
loop
mov
cld
pop
jb
cmp
pop
xchg
nop
push
dec
loope
xchg
add
clc
(bad)
adc
repz
sar
sub
or
call
mov
sbb
push
iret
ds
add
clc
push
inc
sar
xor
mov
xor
mov
cmp
push
push
sahf
cmp
cpuid
clc
inc
xchg
fidivr
mov
(bad)
pop
xchg
inc
jmp
fwait
lods
std
lods
sbb
pop
push
outs
pop
jmp
cmps
or
pop
shl
mov
daa
lods
mov
xchg
xor
mov
push
push
(bad)
inc
arpl
lods
cmp
inc
push
push
mov
xchg
xor
mov
ret
pop
xor
cmp
jb
xor
push
ss
adc
dec
xchg
xor
push
(bad)
sub
and
cmp
push
sub
inc
(bad)
pop
rol
daa
lods
add
fwait
lods
add
dec
mov
push
add
sub
adc
push
in
push
xchg
xchg
jmp
adc
repz
or
ret
les
jae
outs
add
xchg
mov
es
mul
(bad)
test
xor
xchg
fdiv
and
popf
mov
dec
xchg
mov
idiv
fistp
jle
fcomip
es
mul
fcom
cmp
inc
(bad)
aad
outs
nop
popf
mov
fdivp
jle
fcomip
fsub
es
idiv
fdivr
test
fsub
mul
(bad)
mul
(bad)
mul
fcom
inc
cmps
add
mov
xor
idiv
fadd
daa
ins
in
gs
lds
mov
add
push
lods
push
push
xchg
mov
scas
xchg
push
jg
inc
retf
mov
push
xchg
sbb
ret
pop
sub
(bad)
aaa
imul
or
cmp
dec
rcr
rol
cli
imul
sahf
pop
fidivr
xor
sahf
jne
pop
cmp
inc
fidivr
rcr
xchg
push
fucomip
imul
cmps
mov
inc
jg
and
push
add
fldenv
rcr
ret
cmp
mov
inc
sbb
pop
ss
add
mov
jmp
aas
mov
(bad)
pop
xchg
fsin
mov
and
lods
cmp
push
dec
cmp
inc
scas
mov
push
xor
mov
adc
push
ret
pop
sub
inc
ds
sbb
cmp
push
ret
fcom
mov
adc
mov
addr16
out
fist
dec
dec
call
pop
aad
pop
mov
sbb
pop
cs
repz
ds
push
xchg
sti
or
xchg
loop
and
rol
daa
mov
cld
mov
mov
jo
pop
in
arpl
mov
call
add
inc
aad
scas
ret
imul
jle
imul
jb
in
int3
sbb
in
int3
jb
in
int3
jb
in
int3
jmp
sti
jg
mov
pop
stc
lock
pop
aad
push
mov
ja
inc
sysenter
clc
push
lahf
inc
aas
inc
adc
mov
xchg
clc
push
mov
jne
mov
pop
or
ret
pop
xor
mov
aad
or
cmc
push
mov
jmp
mov
jae
mov
lahf
xchg
mov
cmp
mov
jae
mov
jae
mov
pop
inc
cli
push
jno
cld
mov
cmp
dec
push
mov
jo
mov
sti
mov
add
gs
cmp
arpl
ds
outs
sar
in
inc
xlat
mov
xor
dec
leave
mov
pop
inc
jmp
aad
mov
ja
adc
sub
inc
mov
sbb
mov
aas
mov
jmp
mov
xchg
add
lahf
mov
inc
xor
call
adc
aad
std
mov
(bad)
pop
fimul
enter
push
jmp
cld
cmps
push
sbb
cld
push
mov
fwait
lods
pop
scas
cs
lock
ret
(bad)
mov
dec
cdq
push
push
cs
mov
xchg
sbb
repnz
xor
add
sbb
dec
(bad)
cmp
inc
cmp
jmp
and
popf
pop
lock
push
out
ficomp
add
inc
jp
cmp
inc
mul
dec
xchg
adc
dec
bound
add
cmp
adc
(bad)
ins
add
sbb
and
inc
cli
pop
cmp
jmp
push
ss
inc
out
adc
and
jg
push
(bad)
js
cwde
dec
and
cwde
and
cdq
and
cwde
and
cwde
fwait
jbe
clc
ins
jp
shl
add
popa
enter
ss
shr
sbb
and
aaa
and
cwde
and
cwde
dec
sub
cwde
ins
ss
shl
js
cwde
and
cwde
and
cwde
pop
jp
enter
cwde
and
cwde
and
add
pushf
cmp
dec
(bad)
and
cwde
retf
jo
sub
xor
and
(bad)
and
cwde
arpl
add
push
pop
daa
and
(bad)
and
cwde
and
cwde
inc
and
jns
js
cdq
and
cwde
and
cwde
popa
rol
ins
mov
and
shl
js
call
add
inc
sbb
popa
fdiv
xchg
add
dec
add
js
aaa
and
cwde
sub
push
and
cwde
and
cwde
and
jmp
and
cwde
and
cwde
and
cwde
call
inc
jp
or
ins
ss
(bad)
and
cwde
and
cwde
inc
and
cwde
and
cdq
and
cwde
and
add
or
dec
push
ins
loop
and
cmp
dec
(bad)
and
cwde
and
add
and
cwde
pop
jp
enter
cwde
and
cwde
and
add
pushf
or
dec
jmp
dec
adc
aad
xor
dec
jbe
add
aad
inc
out
lahf
xchg
mov
mov
jae
mov
jae
mov
jae
mov
int3
icebp
shl
jae
mov
stos
leave
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
(bad)
cmc
push
mov
std
mov
cmp
mov
pop
jae
mov
jae
mov
xor
out
sub
cld
jno
cmp
add
lock
jae
mov
lahf
cmc
mov
ret
pop
jae
mov
fbstp
sub
inc
pop
mov
add
jae
mov
jae
mov
cli
ss
jb
add
lock
jae
mov
shr
mov
jae
mov
jae
mov
dec
mov
aaa
xor
sbb
jne
mov
pop
jb
lock
jae
mov
jae
mov
cmp
xor
jae
mov
jae
mov
cli
inc
mov
sahf
xlat
add
push
mov
jae
mov
jae
mov
ds
inc
pushf
mov
add
icebp
arpl
lock
popf
mov
mov
inc
(bad)
mov
jae
(bad)
in
jae
mov
cli
inc
mov
cmp
pop
cmp
jne
or
std
mov
jmp
jl
dec
mov
push
pop
clc
outs
(bad)
and
pop
(bad)
sbb
dec
mov
cmp
mov
movs
lds
stos
iret
aas
adc
pop
mov
les
jno
push
stos
pop
mov
loope
xchg
or
loope
mov
stc
mov
mov
dec
in
cs
repz
std
cmps
push
jbe
jns
or
mov
mov
push
pop
call
mov
sbb
push
cmp
mov
cld
dec
xchg
loope
dec
sub
inc
push
mov
push
ror
pop
mov
adc
add
add
mov
sar
in
jno
pop
pop
lsl
dec
xchg
xor
adc
aad
jmp
ret
pop
cmp
inc
inc
fimul
mov
inc
stos
and
retf
and
push
push
and
adc
mov
xor
push
sub
clc
popf
ret
pop
fwait
push
mov
xor
push
push
dec
or
dec
cdq
jns
mov
call
add
repnz
xor
clc
imul
out
inc
les
retf
push
inc
adc
repz
adc
fbld
into
pop
imul
xchg
std
fcomi
outs
push
ficom
cmp
push
outs
std
retf
scas
cmp
dec
outs
rol
and
xchg
fadd
mov
push
and
fistp
mov
sbb
mov
movs
or
fsubr
ins
ror
sub
fist
or
out
dec
mov
jbe
lods
pop
ja
in
addr16
into
ror
mov
mov
inc
jp
into
arpl
mov
ja
lock
ss
call
pop
sbb
pop
ja
mov
retf
cwde
pop
add
pop
push
or
ja
fild
(bad)
rep
push
ficom
cmp
push
outs
std
fld
outs
rol
and
xchg
push
and
fcomp
mov
sbb
mov
sbb
mov
push
outs
std
fild
and
ret
sbb
mov
sbb
mov
sbb
mov
fwait
ins
or
sbb
mov
sbb
mov
push
outs
mov
push
and
fistp
mov
sbb
mov
rcr
leave
or
push
and
fistp
mov
sbb
mov
pop
jno
pop
push
sub
(bad)
push
(bad)
clc
cmp
adc
and
and
fistp
mov
sbb
mov
cmp
movs
sbb
call
stos
mul
and
(bad)
cld
(bad)
xor
fwait
push
and
xchg
sbb
mov
sbb
mov
push
outs
xor
sbb
mov
stos
(bad)
sub
test
out
push
aaa
cmp
adc
push
cli
inc
outs
imul
xchg
ins
pop
ficom
(bad)
jae
ja
out
and
xchg
sbb
mov
sbb
mov
sub
fadd
outs
add
and
fistp
mov
sbb
int3
mov
sti
fisubr
xor
iret
xchg
jnp
ficom
or
repnz
sti
fisubr
outs
rcl
inc
mov
rol
jmp
mov
inc
jb
add
lock
sub
mov
cmp
addr16
jno
out
jae
mov
rol
dec
retf
call
aas
or
cs
dec
loopne
retf
add
pop
jnp
push
dec
(bad)
adc
inc
retf
dec
cmp
xchg
adc
and
push
push
dec
push
jmp
repnz
sub
push
std
cmps
std
mov
mov
xor
(bad)
mov
call
mov
mov
adc
push
jae
std
pop
shr
mov
ret
pop
xor
push
call
stc
mov
xor
or
xchg
mov
push
jmp
inc
push
mov
and
jmp
rcr
dec
xor
push
mov
xor
inc
enter
sub
loopne
aas
push
mov
jb
push
ret
cli
daa
add
inc
inc
dec
rcr
test
inc
push
pop
cs
lock
out
mov
rol
mov
adc
cmps
sbb
pop
cmp
dec
shl
retf
in
jne
mov
retf
jne
mov
mov
(bad)
mov
rcr
xchg
retf
jne
mov
xchg
cmp
push
cmp
jne
cmp
repnz
loop
fsub
mov
inc
cmp
test
mov
retf
jne
mov
xchg
leave
(bad)
in
jp
dec
or
retf
jne
mov
test
into
jecxz
in
mov
mov
jne
repz
jne
mov
jp
push
mov
retf
sbb
movs
repz
jne
mov
fwait
sub
mov
test
mov
retf
jne
mov
movs
pop
dec
and
test
mov
pop
and
into
retf
jne
mov
fwait
(bad)
std
jl
jne
repz
jne
mov
xchg
jne
in
jne
mov
retf
cdq
(bad)
mov
cli
sub
mov
retf
or
sub
mov
cdq
cld
pop
out
mov
repz
xor
push
retf
jne
mov
xchg
mov
call
retf
jne
mov
mov
sbb
test
std
test
push
icebp
mov
bound
xchg
cmp
cmp
aaa
push
retf
jne
mov
retf
jne
mov
retf
jne
mov
mov
and
mov
es
xor
test
jne
mov
retf
jne
mov
mov
sbb
xchg
retf
jne
mov
retf
xor
pop
xor
mov
xor
test
repz
les
icebp
pushf
cmp
mul
cmp
(bad)
adc
xor
cdq
push
adc
push
test
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
sub
jg
inc
aas
mov
add
mov
test
mov
test
mov
cdq
sbb
loop
cmp
test
mov
test
mov
test
mov
xchg
and
cli
mov
(bad)
lea
repnz
mov
loop
popa
bnd
lods
in
call
adc
into
mov
call
xor
xchg
adc
test
push
jae
test
jb
test
sahf
jb
inc
mov
aaa
loop
les
push
cdq
mov
fs
fild
jne
inc
loopne
sub
mov
lock
bound
(bad)
cmp
inc
xor
mov
mov
mov
popa
push
in
into
sub
out
rol
test
push
dec
xchg
xor
icebp
jmp
push
cmp
aad
movs
mov
pop
push
xchg
adc
mov
test
(bad)
mov
jno
ret
jge
pop
shl
es
inc
inc
inc
test
push
pop
jb
rol
push
jb
ins
sub
call
mov
mov
in
pop
inc
sub
adc
cld
and
mov
push
add
ror
cmp
lahf
loopne
sbb
arpl
jmp
jle
outs
mov
mov
in
pop
lds
imul
call
push
in
push
sbb
ins
rcl
dec
popf
inc
push
shr
xchg
repnz
nop
cmpxchg
adc
loop
sbb
daa
jnp
and
(bad)
dec
out
mov
repnz
test
ja
retf
outs
xchg
mov
in
push
and
fistp
jmp
inc
in
cdq
add
push
pop
push
dec
jbe
push
jecxz
out
in
(bad)
loopne
sbb
fild
ja
outs
loopne
adc
push
jmp
loopne
add
mov
enter
test
add
in
lods
xor
xchg
pmaxub
jns
mov
dec
jnp
test
(bad)
jo
pop
pusha
sbb
(bad)
ret
xor
mov
and
mov
adc
adc
jne
enter
inc
fcompp
dec
arpl
jecxz
push
cld
inc
cmps
adc
adc
mov
scas
push
retf
ss
outs
(bad)
cli
dec
outs
jmp
adc
and
icebp
dec
mov
jno
ret
outs
enter
adc
ss
sub
lods
pop
div
dec
enter
mov
cmps
add
stos
sub
imul
xor
fnstcw
cdq
dec
push
mov
sub
xchg
es
(bad)
sbb
or
sbb
pop
int3
sub
out
outs
xchg
pop
inc
mov
jecxz
repz
out
ror
mov
add
pushf
jp
xchg
sub
hlt
fnstsw
mov
mov
cmp
lods
and
inc
ja
lods
lock
shr
(bad)
cmp
dec
sahf
push
xor
cwde
dec
sar
lods
imul
and
idiv
aaa
loopne
les
jle
mov
inc
mov
loopne
fwait
mov
sub
and
add
pop
push
pop
adc
scas
(bad)
pop
shl
sub
rol
mov
sbb
xchg
icebp
shl
sti
std
mov
mov
movs
xchg
div
sub
mov
xchg
test
lods
out
add
test
jl
sub
dec
imul
add
push
add
adc
imul
pop
outs
adc
cmp
xor
push
in
sahf
dec
push
loope
mov
out
sbb
aad
ds
test
mov
int3
shr
mov
or
mov
push
scas
mov
jnp
stc
(bad)
pop
mov
cwde
stos
jae
cwde
in
add
jbe
pop
jmp
loopne
outs
mov
sub
(bad)
sub
aaa
repz
shl
cmc
ss
dec
fisttp
mov
loopne
into
movs
repz
daa
dec
call
push
in
aad
push
xor
jmp
sbb
call
cmp
in
jg
cli
out
mov
gs
jecxz
mov
mov
and
adc
mov
(bad)
test
sbb
out
ss
xor
ss
mov
inc
mov
loopne
fwait
mov
sub
dec
xchg
cs
cmp
test
(bad)
repz
test
sub
push
xchg
das
mov
mov
mov
repnz
mov
xor
stos
xor
xor
pop
ja
mov
out
cmp
cmp
mov
(bad)
hlt
stos
(bad)
ja
scas
mov
scas
adc
int3
xchg
test
sub
jecxz
mov
inc
aam
or
mov
sbb
adc
and
pop
fwait
mov
(bad)
mov
in
inc
inc
mov
sbb
shr
pop
cmp
shl
div
sub
lahf
jnp
dec
call
pop
jns
sbb
and
cli
or
xchg
mov
call
imul
push
inc
int
pop
mov
xchg
mov
movs
mov
idiv
and
cmc
dec
jl
ins
call
fist
push
fwait
xor
push
xchg
push
inc
outs
int3
jae
(bad)
mov
sbb
(bad)
lods
jg
bswap
jne
push
ja
stos
shl
popa
sti
xor
jmp
sar
or
sub
cwde
pop
not
imul
pushf
mov
mov
mov
and
xor
push
loopne
push
imul
ret
leave
inc
outs
push
shl
mov
xor
adc
and
or
shufps
jmp
dec
les
push
je
dec
aad
xchg
xor
ds
rcl
add
adc
adc
xor
mov
cmp
adc
leave
dec
icebp
or
scas
mov
cs
mov
lods
add
in
lds
mov
lds
cs
push
imul
aam
test
cmp
adc
inc
pop
pop
test
shl
mov
icebp
cmc
ret
out
in
mov
push
in
(bad)
mov
shr
adc
je
mov
push
es
jns
jnp
xchg
or
cmc
or
mov
ror
mov
lods
sbb
pop
lock
xchg
push
mov
(bad)
call
imul
xchg
cmp
test
inc
mov
sbb
loop
cmp
repnz
das
mov
mov
mov
je
or
cmp
mov
inc
cld
jmp
bound
(bad)
movs
aas
(bad)
add
mov
inc
in
int3
mov
sahf
lock
(bad)
fisttp
mov
pop
push
shl
push
jnp
jae
fld
call
movs
cmps
sub
push
lea
and
mov
int
mov
pop
je
push
hlt
fsub
test
int3
pop
outs
repz
sbb
stc
sbb
sub
sub
jge
in
push
sub
sahf
xor
je
stc
pusha
push
in
mov
pop
sti
pop
mov
adc
mov
push
test
div
push
or
nop
data16
push
test
and
js
cmp
je
mov
mov
pop
add
sti
dec
sub
fwait
ror
jb
out
mov
pop
dec
mov
inc
dec
and
pop
loope
fistp
inc
test
enter
add
fadd
test
scas
ja
out
lods
movs
jmp
out
xor
fwait
jne
push
xchg
jno
sbb
inc
loope
scas
loop
pop
mov
inc
jnp
(bad)
aaa
sub
cmp
or
in
cmps
rcl
add
xchg
xor
add
mov
push
cli
or
dec
mov
daa
or
shl
add
pushf
stos
fsub
adc
sub
mov
mov
imul
pop
es
adc
push
mov
mov
or
push
scas
icebp
xchg
scas
pop
jge
jo
and
retf
in
cmp
pop
psubb
call
inc
cmp
ffree
adc
out
add
stos
mov
into
xor
loop
(bad)
in
and
jns
sbb
push
jg
cwde
xchg
cmc
inc
adc
pop
sbb
mov
inc
retf
xor
and
fisubr
pop
dec
xchg
gs
packssdw
push
lods
gs
cld
push
inc
sub
xchg
enter
sub
nop
sub
xchg
lods
(bad)
sub
pop
xchg
mov
out
xchg
jo
jle
(bad)
loope
xor
inc
jmp
cld
push
jno
stc
(bad)
repz
lods
pop
bnd
and
sub
dec
lods
ret
into
xchg
mov
fwait
loopne
cdq
pop
jbe
jl
pop
jge
mov
push
data16
inc
jmp
das
sub
fdivr
mov
das
mov
sbb
sub
mov
inc
int3
mov
ror
stos
fsubp
adc
cdq
outs
outs
cmp
loopne
hlt
fsub
mov
fisubr
shl
lods
outs
and
push
addr16
loopne
js
jo
pop
xor
add
pushf
shl
jmp
adc
mov
(bad)
fbstp
cmp
lods
ss
pop
adc
pop
or
cmp
retf
xchg
or
out
push
or
outs
mov
rcl
popf
test
sub
popf
out
adc
inc
jnp
imul
rcl
add
cmp
imul
mov
adc
jnp
lahf
xchg
shl
imul
rep
pop
adc
lds
push
sbb
push
xor
sbb
lock
dec
cmp
ins
sahf
push
dec
jns
xor
xchg
cld
out
jns
ins
mov
cmp
cli
cmp
mov
test
mov
test
mov
xor
xor
or
(bad)
mov
movs
aas
(bad)
add
mov
pop
inc
sbb
outs
hlt
or
jmp
inc
scas
jo
pop
(bad)
mov
repz
ja
jno
mov
scas
sbb
add
or
(bad)
and
shr
and
xor
push
shl
mov
mov
mov
jge
xchg
ror
popf
cmp
repz
pop
jecxz
data16
push
xchg
jns
gs
cli
mov
std
push
imul
clc
inc
cld
pop
in
ins
inc
les
cli
shl
in
pop
and
xchg
in
cmp
push
cld
enter
and
cmp
sahf
div
(bad)
pusha
shr
mov
sar
jmp
jge
aas
iret
add
xor
xchg
mov
sub
inc
pop
sahf
inc
stos
mov
or
mov
addr16
mov
xchg
outs
and
cwde
addr16
pop
jle
ja
js
cmp
mov
cwde
xchg
dec
loope
cmp
sbb
arpl
fcom
xchg
cmp
popf
xchg
movs
push
outs
jns
add
bound
xchg
call
or
fcomp
mov
(bad)
push
fcomp
sub
and
loopne
imul
(bad)
pop
dec
xchg
lods
ret
xor
cdq
adc
imul
push
push
adc
jae
inc
and
ror
stos
out
mov
lods
fdivr
inc
inc
push
xor
or
mov
pusha
cld
jbe
sbb
aaa
rcr
sub
in
js
jb
fs
cli
mov
mov
jl
(bad)
add
leave
out
in
stos
mov
test
dec
dec
xchg
sbb
jmp
push
lea
mov
popf
adc
repnz
mov
test
mov
add
idiv
dec
div
xor
cmp
loopne
xchg
outs
div
jb
cli
or
std
jnp
lds
movs
aas
(bad)
popf
(bad)
mov
fimul
ficom
push
(bad)
dec
cli
adc
adc
jbe
sub
adc
push
loope
jecxz
iret
ins
fldcw
pop
add
jmp
daa
lods
pop
mov
bound
ror
mov
and
jmp
(bad)
in
fwait
jnp
scas
fwait
pop
dec
aas
or
hlt
ds
out
int
xor
push
rol
inc
and
jno
xor
adc
dec
inc
jno
pop
push
(bad)
cmp
rol
mov
js
daa
fldenv
jl
sbb
dec
fcmovu
pop
jp
outs
loope
pop
mov
cmp
prefetch
or
(bad)
stos
stos
and
fstp
cwde
sbb
cli
xlat
mov
es
lods
sbb
loopne
jp
xor
sub
(bad)
ds
inc
je
call
xor
fcmovb
lods
cmp
mov
jl
push
inc
add
add
jmp
push
sti
mov
ret
mov
std
xor
jl
lods
out
adc
or
icebp
es
jmp
dec
jmp
sub
rcr
pop
push
and
mov
xchg
jb
lahf
push
cmp
fdiv
mov
push
fucomp
pushf
xor
sti
int3
sub
jns
das
out
jae
(bad)
jecxz
rol
sbb
dec
std
mov
push
and
pop
test
mov
stc
pop
in
out
pop
mov
sub
cdq
pushf
jne
cmp
cld
inc
dec
outs
scas
inc
mov
outs
mov
or
cli
mov
adc
xchg
aad
cmp
movs
in
sub
leave
test
and
add
lods
cmp
mov
cmp
mov
out
test
push
mov
jle
mov
in
push
in
and
cld
and
add
push
sbb
dec
and
mov
sub
lahf
in
in
call
fucomp
sub
fstp
gs
adc
fmul
stos
shl
jmp
jmp
daa
in
sbb
xor
mov
sbb
xchg
jb
and
aad
sub
dec
mov
data16
mov
cli
xchg
daa
sub
imul
jp
test
test
into
and
add
cdq
arpl
mov
mov
and
lock
sbb
stc
test
hlt
sar
fidivr
int
das
inc
inc
repnz
and
icebp
test
pop
xor
or
jnp
push
fldenv
pop
data16
sbb
xchg
les
ficomp
lods
int
fisttp
mov
sub
or
outs
sub
inc
add
sbb
push
in
push
adc
jae
jns
add
cmp
movs
imul
and
adc
outs
pop
clc
inc
out
sub
cmc
jl
div
cs
out
test
and
and
and
cmps
fdiv
cmps
les
test
add
sub
and
outs
test
pushf
int3
cmc
dec
adc
(bad)
loopne
mov
shl
jo
lock
add
aam
mov
mov
push
push
jp
test
push
lea
mov
test
mov
test
div
sar
test
repz
std
mov
ret
imul
cmp
cmp
mov
js
ss
dec
out
bnd
cmps
inc
imul
mov
and
adc
inc
mov
nop
jo
movs
cmc
enter
dec
imul
pushf
(bad)
daa
pop
jp
rol
mov
ret
inc
cmp
stos
mov
out
out
xchg
jb
jae
bound
push
or
(bad)
jp
mov
aad
jno
sub
adc
xor
stos
lods
mov
loope
inc
push
ret
aaa
sbb
nop
mov
xchg
sub
push
mov
xor
mov
push
imul
push
ins
xchg
add
inc
pop
dec
xchg
jmp
sbb
and
and
sub
or
push
int3
data16
shl
sbb
xchg
and
gs
push
iret
jae
xchg
xchg
lea
sbb
xchg
push
jp
cmp
jae
out
es
and
mov
dec
call
(bad)
out
mov
ror
in
jmp
mov
sbb
int
shr
mov
pop
inc
jecxz
jg
sub
inc
shr
or
sbb
jmp
sbb
mov
leave
push
or
jg
fldenv
or
shl
test
push
adc
or
push
fstp
ins
pop
adc
pop
mov
mov
retf
sbb
popf
sub
and
fadd
loopne
test
jno
cwde
mov
adc
mov
ret
call
add
mov
mov
sahf
pop
push
sub
add
aaa
dec
arpl
mov
bound
stc
int3
inc
test
add
pop
and
mov
mov
ins
mov
mov
xor
cmp
push
test
cmp
and
dec
int3
push
ret
push
mov
inc
mov
cmp
sub
inc
inc
push
imul
call
cmp
sub
stos
or
or
aam
jnp
push
jbe
xor
scas
cmp
mov
and
cmp
jge
cld
pop
cmps
add
(bad)
int3
shl
mov
inc
xor
push
(bad)
push
add
je
xchg
out
in
cmps
data16
int
jg
in
ins
int
(bad)
(bad)
call
popa
es
adc
scas
xor
push
jb
pop
aas
sar
int
xchg
mov
sbb
push
add
jbe
nop
icebp
cmp
(bad)
push
jnp
sbb
jnp
jle
jbe
jg
jns
ror
test
mov
test
repnz
push
test
mov
lods
arpl
sbb
cmp
adc
mov
cdq
sub
int3
sub
inc
fnsave
sbb
into
mov
aad
outs
xchg
cs
xchg
js
sub
mov
mov
xchg
out
push
imul
loopne
cli
inc
sub
arpl
mov
jmp
(bad)
in
or
fisub
loopne
mov
ja
mov
dec
rcr
push
ins
pop
out
fnstenv
test
pop
fst
push
sbb
dec
mov
push
cmp
mov
outs
stos
shr
mov
pop
sahf
sbb
arpl
mov
xchg
stos
jecxz
pop
call
jmp
push
out
les
icebp
sbb
lahf
test
jb
test
adc
mov
cmp
xchg
mov
popf
outs
mov
fdivr
fild
daa
mov
pop
fst
fild
cmp
aam
or
cmp
mov
fnstenv
or
xchg
and
repnz
mov
cmp
jbe
sti
div
stc
jne
ret
cmp
test
mov
movs
aas
(bad)
add
bnd
push
dec
in
fdivr
push
in
pop
jmp
inc
sbb
mov
aad
or
in
test
scas
imul
test
test
inc
xor
ror
or
or
pop
cmps
cmp
jl
or
sbb
dec
test
adc
cdq
int3
popf
popa
jne
shl
push
leave
push
clc
fist
xchg
stos
or
mov
add
sahf
dec
add
in
jae
cmp
sub
inc
dec
fist
enter
pop
sub
sar
add
adc
xor
and
ret
jecxz
sub
push
fdivr
push
in
ins
jge
jmp
sub
mov
(bad)
ds
imul
int
pop
jb
jmp
int
ins
pop
scas
add
mov
clc
or
sbb
in
or
mov
xor
dec
loope
dec
ja
cmp
mov
es
frstor
jl
into
std
adc
(bad)
inc
int
cwde
dec
push
mov
pop
shl
into
mov
inc
fnstcw
sub
pop
or
inc
ret
xchg
repz
sub
mov
pop
sbb
adc
shl
sbb
sbb
jo
inc
mov
std
jle
gs
mov
or
in
pushf
and
sub
mov
jmp
sub
xchg
cmps
int
(bad)
cmc
xor
test
int3
dec
jge
ja
stos
addr16
add
daa
neg
add
repnz
inc
jmp
mov
add
and
mov
sbb
stc
jnp
outs
cmp
(bad)
imul
(bad)
shl
push
inc
sbb
inc
pop
fst
mov
adc
jne
(bad)
outs
enter
test
mov
pop
push
dec
imul
dec
pop
add
xor
(bad)
mov
xlat
sahf
add
jne
mov
repz
jmp
mov
xor
cdq
xchg
adc
push
and
fimul
sub
mov
fimul
jl
movs
inc
sbb
xchg
ds
inc
(bad)
stos
enter
arpl
rcr
cdq
push
xor
or
sub
stos
cmp
idiv
dec
leave
sbb
adc
mov
stc
in
dec
mov
mov
icebp
nop
push
and
mov
mov
clc
cmp
dec
ret
ret
test
xchg
adc
hlt
ror
imul
es
and
push
sbb
and
lods
xchg
test
inc
xor
or
or
or
fstp
jb
add
(bad)
popa
(bad)
into
or
sbb
pop
pop
push
sbb
into
pusha
test
adc
inc
jecxz
jl
push
xchg
stos
sar
mov
mov
inc
out
pop
inc
jnp
and
sub
mov
dec
push
mov
ds
mov
or
icebp
xor
mov
test
mov
add
xor
cmp
test
push
jno
xor
mov
jle
cs
ja
loopne
jne
dec
out
outs
call
sub
int3
bound
das
push
and
loop
xchg
jb
sbb
ds
adc
and
ds
fnstenv
sbb
leave
sub
jne
je
or
loopne
leave
inc
adc
xor
xchg
or
in
cmps
imul
ins
dec
mov
imul
xor
aas
mov
aad
push
sub
lea
xor
call
sahf
xchg
rol
adc
enter
dec
(bad)
shl
mov
fs
aad
test
push
daa
fnstcw
inc
adc
rcl
xchg
pop
adc
pop
inc
jp
(bad)
cmps
sbb
mov
inc
add
mov
and
add
jnp
test
fcom
hlt
je
mov
cmp
je
push
or
pop
xchg
hlt
cdq
jmp
repz
mov
fs
pop
dec
into
sub
cmp
push
pop
les
sub
movs
add
fst
jne
cmc
push
arpl
push
cwde
push
into
(bad)
jecxz
idiv
push
das
in
and
cmp
outs
les
pusha
lock
cmps
xchg
pop
cwde
fidiv
or
add
dec
and
aaa
movs
shl
iret
jno
inc
repz
enter
outs
scas
lea
or
shl
std
jbe
popa
mov
ss
ret
inc
add
scas
ins
cmp
inc
pop
neg
dec
aaa
xor
or
movs
aam
scas
cs
xchg
cs
mov
inc
test
repz
in
sbb
hlt
and
fcmovne
mov
pop
sbb
cmp
stos
jmp
pushf
or
fldcw
hlt
jmp
mov
loope
xor
test
mov
repnz
test
mov
mov
jae
add
dec
cdq
test
mov
lds
dec
mov
loop
rcl
sbb
loop
sbb
xchg
leave
xor
or
inc
lea
add
sub
adc
or
nop
adc
fidiv
rcl
jl
call
push
shr
pop
mov
jecxz
xchg
ins
enter
cmp
aam
(bad)
cdq
jge
mov
dec
xchg
mov
push
ror
outs
cmps
loope
rcr
in
not
inc
jae
repz
lods
mov
lods
shl
out
jecxz
stc
pop
fdiv
pop
sub
addr16
mov
sbb
xchg
mov
repnz
sbb
lds
mov
pop
(bad)
push
sub
dec
fbld
xchg
add
cli
or
(bad)
adc
sti
sbb
jmp
mov
pop
mov
sub
jnp
rol
movs
inc
mov
inc
pop
xchg
js
pop
aad
mov
inc
fiadd
daa
adc
xor
jp
xor
pop
ja
repz
(bad)
scas
leave
cmp
inc
jge
and
nop
mov
sub
call
fcmovb
jo
pop
les
je
test
mov
or
cmps
sar
neg
mov
aas
adc
and
stos
out
inc
addr16
mov
jmp
cmc
cs
les
sbb
mov
repnz
ss
inc
add
stos
fmul
sti
mov
sbb
add
call
out
dec
test
pop
jb
addr16
or
imul
pop
jmp
sbb
mov
hlt
or
mov
lods
xchg
mov
jne
out
dec
sbb
mov
push
adc
add
fs
mov
and
(bad)
pop
mov
loope
out
mov
mov
or
jne
mov
loopne
mov
cdq
xchg
lock
pop
xor
inc
popa
cwde
jmp
sti
mov
sub
inc
mov
repnz
mov
sub
push
out
and
xor
jb
or
(bad)
(bad)
out
in
ror
ss
xchg
xor
mov
push
inc
mov
mov
sbb
mov
jp
sar
jbe
jbe
jnp
sbb
push
ret
add
mov
inc
inc
push
das
lods
out
sbb
mov
nop
cli
movs
pop
mov
and
mov
and
inc
test
stos
add
fild
sbb
out
xchg
jmp
(bad)
fincstp
iret
test
xlat
push
popa
rcl
pop
repz
push
mov
aaa
rcl
mov
or
cmc
shl
adc
adc
movs
fldenv
pop
add
mov
xchg
push
sbb
shr
xor
push
cdq
jmp
lds
mov
xchg
jl
mov
sbb
test
pop
inc
inc
cli
sub
lds
call
add
and
adc
aam
lock
adc
rcl
cmps
inc
inc
loope
add
stos
loope
pop
mov
mov
test
mov
iret
cmc
(bad)
call
jbe
pop
inc
mov
sbb
dec
out
jmp
div
sti
or
inc
out
mov
xor
mov
xor
jae
jp
sbb
xchg
pusha
xchg
xor
imul
popa
jbe
fst
xor
shr
outs
mov
stc
stos
sub
and
aaa
ja
adc
call
pop
mov
mov
and
(bad)
mov
pop
sub
das
sbb
xchg
out
mov
mov
mov
mov
mov
inc
movs
dec
pop
sub
movs
cdq
lea
dec
icebp
inc
mov
aaa
shr
ret
fmul
pop
sti
jns
ficom
inc
mov
jnp
shl
inc
lods
mov
push
repnz
stc
jl
push
in
fistp
jbe
or
sahf
test
or
hlt
aaa
cmp
push
test
mov
and
push
inc
xchg
push
jmp
jp
dec
xchg
lods
and
jmp
sbb
rol
xor
cli
mov
mov
(bad)
xchg
sub
out
or
ret
call
pop
mov
aad
idiv
(bad)
xchg
aad
sar
mov
mov
out
pop
xchg
out
psrad
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
jns
loope
movs
cmp
lock
mov
mov
not
xor
repnz
mov
test
mov
popf
daa
mov
mov
mov
add
mov
cli
test
mov
test
mov
test
mov
mov
mov
lea
stos
test
mov
(bad)
sub
ds
aaa
mov
mov
test
cmp
jnp
mov
movs
jnp
loop
add
mov
mov
loopne
push
scas
sti
test
fstp
add
push
stos
xchg
cs
and
xor
mov
xor
scas
repnz
jmp
pop
imul
sbb
jmp
push
(bad)
push
pop
add
xchg
lock
inc
std
sar
pop
lds
mov
dec
ficomp
adc
iret
and
shr
push
jmp
add
icebp
push
jbe
xchg
mov
ud0
movs
xchg
xchg
pop
in
pop
sub
adc
mov
cld
cmp
fnstenv
mov
jmp
ja
mov
jbe
sub
dec
fldenv
sub
dec
cdq
push
fdivr
add
push
in
jns
sbb
sbb
into
out
and
int3
add
les
xchg
loopne
rcr
or
dec
xchg
push
cs
jnp
pushf
push
jae
add
movs
xchg
leave
jle
inc
aas
jmp
sub
xchg
pop
mov
(bad)
jnp
pop
popf
frstor
loop
sub
lods
inc
js
cmp
pop
sbb
lock
cmp
push
dec
mul
mov
cmp
retf
mov
movs
xchg
jmp
pop
xor
inc
dec
cli
ins
jne
in
aaa
arpl
fstp
push
gs
outs
xor
adc
fmul
sub
int3
sbb
leave
pushf
aad
add
leave
sahf
in
pop
jecxz
das
sub
nop
pop
jp
repz
(bad)
out
pop
cli
sub
mov
sbb
nop
aad
mov
rcl
call
cmp
movs
dec
daa
fnsave
gs
sub
xchg
in
push
rcl
jge
or
cdq
je
add
scas
push
jg
add
imul
xchg
(bad)
sbb
xor
dec
mov
mov
gs
pop
cmp
fcom
dec
and
pop
jnp
push
mov
mov
movs
adc
mov
repz
out
loopne
xchg
or
aam
jb
out
ror
xchg
stos
test
xor
nop
adc
add
xor
jb
test
repz
retf
jmp
pop
mov
(bad)
stc
sahf
call
movs
mov
loopne
loopne
repz
xor
lds
ror
mov
test
popf
mov
sbb
jnp
iret
inc
ret
mov
jmp
pop
dec
js
inc
jne
imul
cmps
dec
push
push
cmps
jmp
sbb
adc
cmp
inc
int3
frstor
not
cmc
xchg
mov
pushf
mov
pop
jl
sub
in
mov
lock
mov
jg
cmp
lods
test
pop
in
add
scas
shl
xchg
mov
ins
and
adc
std
pop
mov
dec
push
sbb
cdq
adc
jl
jnp
outs
mov
mov
(bad)
ss
sub
pop
test
rcl
push
es
aas
mov
cmp
lock
pop
outs
jmpw
pop
(bad)
iret
dec
shl
pop
add
and
pop
jmp
dec
(bad)
les
inc
div
(bad)
mov
add
in
sbb
bound
pop
xchg
repz
push
and
in
push
repz
pop
xor
cmp
imul
and
push
mov
dec
xchg
inc
jecxz
aas
xor
pop
lods
int3
mov
imul
outs
mov
pop
xchg
in
aad
lds
push
mov
dec
push
retf
xor
icebp
test
mov
sbb
jns
inc
pop
out
into
inc
pop
sti
and
push
(bad)
popf
fnstenv
push
(bad)
stos
ins
in
cmps
jnp
loope
xor
repnz
dec
jmp
sti
into
loop
ss
adc
jno
ins
mov
mov
jle
sub
mov
sbb
jb
push
cdq
mov
clc
sub
mov
add
cmps
dec
loope
xor
repnz
mov
test
mov
popf
cmp
mov
inc
aas
jmp
out
cmp
push
cmp
mov
mov
call
imul
ins
sbb
mov
jle
inc
add
aaa
cs
hlt
mov
dec
push
xchg
int3
loop
dec
fbstp
inc
jmp
std
rcl
pop
jecxz
xor
xchg
nop
(bad)
in
div
xor
mov
vshufpd
mov
mov
adc
fst
inc
aaa
popa
lock
push
push
pop
ror
mov
mov
mov
xchg
push
inc
add
test
inc
and
pop
cmp
out
fmul
push
xchg
mov
or
rcr
dec
clc
ret
dec
adc
bound
adc
dec
aaa
mov
xor
add
add
sbb
popf
out
pop
sbb
es
xor
inc
fist
xchg
jge
cs
fimul
fscale
aam
and
sahf
retf
mov
call
mov
xor
lahf
pop
scas
jecxz
xchg
pop
mov
sbb
sub
mov
gs
push
pop
cmp
dec
stc
push
(bad)
in
pop
jbe
inc
out
xchg
stos
(bad)
dec
pop
cwde
ret
(bad)
mov
sbb
cs
shl
popa
add
sub
mov
dec
nop
mov
mov
rcl
daa
in
rcr
add
(bad)
jmp
sti
pop
jp
es
hlt
fs
out
in
and
and
push
add
das
dec
mov
retf
sbb
rcl
ror
adc
pop
mov
rcr
and
pop
loop
add
adc
add
ret
mov
loopne
add
sbb
lock
inc
mov
shl
jbe
movs
jb
inc
in
test
sti
sbb
in
xchg
dec
in
and
pop
sbb
ins
jg
jg
or
and
sahf
in
ret
test
repnz
inc
in
xor
sbb
sahf
pop
or
mov
ror
stos
imul
cli
adc
adc
mov
pop
mov
inc
retf
sub
fsub
or
lods
fsubr
scas
mul
test
rol
out
xchg
dec
and
int
mov
jbe
scas
jbe
xor
mov
imul
dec
mov
ss
or
ins
gs
test
inc
mov
jmp
or
out
add
imul
add
(bad)
sub
or
sub
sbb
into
inc
mov
pop
mov
retf
sbb
test
ror
sbb
or
lds
aas
shl
std
sub
aas
dec
dec
daa
push
inc
sub
icebp
jo
pop
in
(bad)
leave
add
mov
dec
cli
sub
fimul
xchg
sbb
lds
(bad)
lea
outs
lods
pop
jno
pop
mov
mov
loopne
dec
lods
mov
jecxz
xor
arpl
aaa
aas
sbb
and
lea
push
stos
dec
and
mov
ja
arpl
sub
sub
fwait
pop
dec
(bad)
jl
sub
pushf
popa
push
(bad)
mov
into
cli
retf
xor
inc
inc
loopne
mov
aam
dec
pop
dec
pop
jg
jae
cmp
rcl
add
cmp
cmps
push
add
lods
push
push
sub
and
and
pop
jl
mov
dec
mov
fcom
adc
(bad)
cmpps
xchg
mov
push
adc
mov
ror
inc
mov
aaa
out
adc
pusha
out
lea
mov
jmp
pop
call
stos
nop
fsub
test
int3
nop
cdq
cmp
cmp
test
pushf
into
push
(bad)
jbe
cmp
push
std
stc
rol
cmp
xor
mov
push
sbb
xor
outs
mov
arpl
add
inc
aaa
push
xor
fiadd
inc
pop
cwde
out
sub
xor
mov
or
retf
inc
sub
and
cwde
mov
push
xlat
xor
xchg
or
jle
mov
and
(bad)
ds
push
and
or
into
test
int3
add
jp
in
mov
mov
bound
arpl
clc
dec
adc
lahf
mov
jmp
loope
sbb
add
pop
mov
mov
imul
nop
pop
enter
test
in
popf
fs
inc
out
ror
jp
mov
mov
fistp
enter
das
add
cmc
adc
mov
push
ja
fsub
int3
inc
js
pusha
shr
mov
sbb
mov
xchg
inc
push
js
mov
jns
scas
push
adc
sbb
or
jmp
or
loop
xchg
test
dec
push
les
test
int3
(bad)
outs
sbb
lock
xchg
pop
das
cmp
imul
shl
idiv
adc
data16
jp
ins
movmskps
and
xchg
cmp
pop
ins
sahf
push
in
dec
pop
mov
and
les
jne
fdivr
mov
adc
clc
jns
sbb
loope
xor
repnz
mov
sub
mov
lea
mov
xchg
jae
mov
das
ss
sar
xor
(bad)
stc
aaa
movs
aas
(bad)
add
mov
adc
jb
add
sub
jle
fst
sbb
enter
test
push
test
arpl
xchg
xchg
ror
scas
ret
or
clc
push
xchg
in
sbb
pop
xchg
shl
add
iret
lahf
inc
or
cmp
out
daa
cmp
(bad)
mov
push
dec
cs
pop
into
ficomp
out
lock
stos
jg
inc
test
mov
(bad)
adc
dec
xchg
sub
cli
popf
retf
dec
lds
sbb
imul
arpl
inc
scas
and
popf
sub
fadd
icebp
push
pop
sbb
sub
ins
adc
push
sbb
ins
mov
fadd
pop
enter
cs
cmp
pop
arpl
enter
out
dec
jb
sub
cmp
cmp
cmps
jl
shr
mov
lds
call
and
xlat
(bad)
outs
cld
test
ds
aaa
aaa
(bad)
into
sub
ja
mov
cmp
xchg
push
sub
popf
scas
inc
inc
movs
and
push
pop
inc
fcomp
inc
mov
inc
popa
push
push
jno
jno
mov
sub
xor
dec
out
(bad)
push
dec
push
mov
in
dec
jae
fs
dec
repnz
xor
or
mov
pop
cs
jns
pushf
call
int3
scas
jne
es
cmps
outs
mov
push
mov
in
ror
lods
or
mov
jae
pop
xlat
mov
adc
inc
aam
xor
jb
cmp
xchg
dec
xlat
jmp
fcom
(bad)
or
lds
(bad)
xlat
mov
and
data16
aad
pop
repnz
lahf
(bad)
push
jbe
add
mov
mov
sub
cmp
or
popf
retf
stos
std
fbstp
or
in
test
and
xchg
push
or
mov
or
sub
sbb
jne
mov
cmp
xchg
rol
inc
(bad)
xlat
inc
push
cmp
xchg
(bad)
mov
cmp
ja
out
mov
or
ins
mov
inc
test
sub
gs
lahf
sbb
ret
and
rol
mov
bnd
test
xchg
push
xchg
lock
sbb
lahf
daa
retf
lds
sub
jo
stos
mov
out
ret
or
(bad)
mov
xchg
movs
dec
adc
xor
adc
jl
add
inc
mov
icebp
inc
ja
push
xchg
or
lods
jmp
mov
loop
dec
jns
ret
and
mov
stc
xor
mov
or
and
ins
das
fcomp
out
sub
data16
or
dec
cmp
pop
jae
add
popf
or
add
adc
rol
lahf
stc
sbb
call
stc
sbb
mov
sub
cmps
inc
pop
cld
mov
xlat
jp
mov
and
iret
mov
pop
mov
push
jmp
jnp
daa
xchg
cmp
sub
mov
jmp
retf
mov
inc
sub
xchg
jmp
and
in
addr16
(bad)
out
retf
adc
in
stos
dec
icebp
movs
xchg
xchg
fmul
outs
div
(bad)
out
sbb
xor
mov
popa
scas
test
mov
mov
arpl
in
mov
push
xchg
iret
scas
out
or
(bad)
xor
dec
aam
sbb
sahf
out
loope
je
jl
test
add
leave
sbb
neg
push
push
fmul
movs
push
jecxz
pop
sbb
fld
jne
pop
mov
sti
push
mov
sub
scas
outs
or
fist
movs
fmul
inc
ins
push
adc
(bad)
ds
sub
jp
cmp
call
leave
jle
(bad)
push
sbb
push
xchg
aam
loop
xchg
sbb
push
xchg
stos
pop
mov
xchg
(bad)
cmps
mov
pop
inc
xchg
pop
inc
xor
jecxz
and
iret
pop
mov
out
imul
sbb
pop
not
repz
scas
xor
lods
jne
into
sub
inc
jg
rcr
jmp
fs
(bad)
aam
fsub
jns
pushf
rol
movs
cld
test
ret
call
sbb
fmul
or
jle
xor
push
rcr
inc
clc
and
int
and
sub
add
mov
push
lods
cmp
je
mov
pusha
(bad)
sub
push
lea
sub
jmp
nop
call
adc
in
lea
into
xchg
mov
inc
pop
mov
clc
fstp
neg
out
and
out
outs
or
(bad)
push
mov
les
push
test
bound
xchg
aaa
mov
test
mov
mov
add
sti
ss
stos
mov
aas
add
stc
mov
aas
(bad)
add
mov
and
aad
mov
js
mov
inc
dec
inc
xor
cmps
int3
cmp
mov
cwde
lods
jmp
dec
and
fcmovb
stos
out
int
xlat
into
dec
aam
xor
mov
rcr
inc
pushf
dec
popa
jae
into
int3
add
sbb
dec
and
inc
outs
popf
mov
fadd
loope
xor
stos
xchg
in
mov
sub
stos
pop
fsub
sbb
push
mov
cmp
dec
or
add
push
xchg
sub
lods
jns
pop
fcmove
mov
mov
inc
std
add
(bad)
dec
icebp
sbb
rcl
mov
test
or
gs
bound
push
les
mov
out
imul
push
and
dec
xchg
inc
xchg
mov
xlat
out
and
retf
dec
or
fld
adc
sbb
fs
pop
lods
mov
xor
mov
xor
int3
into
fidivr
mov
jo
cmp
pop
mov
push
jecxz
push
and
push
aad
cmc
mov
lds
test
sub
pop
cli
or
push
mov
lds
hlt
inc
addr16
shl
scas
or
sub
arpl
xor
leave
scas
mov
clc
cmp
popa
inc
hlt
test
in
push
rcl
or
in
cmp
into
shl
stos
dec
les
mov
push
push
cs
dec
add
loop
arpl
lds
mov
imul
mov
inc
mov
mov
inc
push
ror
icebp
xlat
adc
in
push
scas
int3
sar
jge
mov
pop
pop
imul
in
mov
(bad)
les
fidivr
and
jbe
cmp
aam
push
xlat
sbb
and
or
mov
or
retf
dec
mov
jo
jo
ret
jb
push
loop
sbb
mov
lods
xor
test
cmps
pop
clc
or
stos
dec
mov
adc
test
push
jg
sbb
fwait
pusha
rcr
(bad)
outs
inc
xchg
adc
xchg
adc
iret
lods
sub
jmp
jmp
push
xchg
lds
and
push
xor
inc
test
mov
add
cli
daa
js
mov
jmp
ins
push
cmp
stos
sub
fs
in
cli
pop
xchg
adc
inc
jae
cmp
jb
mov
push
mov
adc
dec
repz
mov
arpl
cmps
sti
xor
add
fnstsw
inc
sbb
mov
xor
lock
enter
push
ret
xchg
fisubr
ficomp
pop
idiv
mov
test
repnz
mov
daa
adc
and
pop
vmovaps
and
cmp
adc
call
adc
outs
inc
sub
popf
clc
inc
scas
(bad)
pop
push
ret
stc
mov
mov
retf
ins
mov
(bad)
jp
jmp
push
aam
daa
or
sbb
and
sbb
ins
fist
cmp
enter
pop
fucomip
dec
je
push
(bad)
adc
scas
sbb
sbb
ret
sti
fist
cmp
ret
adc
dec
xor
scas
out
(bad)
cli
rol
neg
leave
lahf
fsub
inc
and
push
xchg
mov
push
sbb
and
fdivr
sub
repnz
outs
stc
sub
mov
retf
inc
ins
jne
add
or
mov
push
cmp
add
loop
(bad)
retf
jecxz
sbb
xchg
icebp
and
adc
pop
lahf
or
inc
mov
pop
pop
dec
sub
or
dec
fcomp
fsubr
jae
or
fcmovnu
push
mov
add
je
out
add
sbb
jg
lds
out
push
jo
(bad)
inc
xlat
in
inc
call
sar
stc
add
shl
fistp
mov
and
repz
fisubr
mov
add
jb
neg
test
dec
in
sub
jae
imul
(bad)
adc
jmp
mov
dec
call
lods
push
sti
pop
icebp
and
cmp
nop
loopne
mov
xchg
push
xor
jle
pop
aas
mov
ja
aas
sar
jmp
jmp
sahf
daa
shl
pusha
push
dec
ret
addr16
xor
cmp
xor
sub
pop
push
cmp
in
into
dec
mov
pop
les
nop
pop
iret
jb
or
movs
xor
shl
xor
adc
call
out
loop
dec
and
fbld
jo
sbb
ds
data16
jmp
jnp
mov
out
in
dec
adc
sub
rcr
mov
cmp
cmp
and
cs
xor
(bad)
push
mov
fs
or
test
push
imul
push
inc
daa
inc
and
push
daa
push
jecxz
add
aas
push
cs
sbb
cld
fld
ficom
ficomp
dec
mov
add
adc
mov
popa
inc
push
stos
test
add
enter
aas
arpl
xchg
int
jb
bound
fsub
xchg
dec
ss
popf
add
out
mov
pop
xor
addr16
and
mov
rcr
pop
jl
xchg
sub
mov
js
mov
js
scas
push
jle
mov
sub
push
xlat
inc
retf
in
pushf
fsub
call
and
mov
repz
xor
xchg
add
jp
fmul
xor
bound
lock
push
inc
movs
dec
jmp
clc
xor
xchg
add
fisub
retf
test
or
fst
in
mov
ss
mov
ret
mul
fild
sub
(bad)
pop
loopne
ja
out
call
jmp
hlt
stos
cld
jne
mov
pop
add
lahf
test
push
mov
test
sbb
outs
fdivr
adc
aam
mov
sbb
punpcklbw
neg
push
fdivr
pop
popa
and
(bad)
out
push
(bad)
icebp
stos
or
aaa
sub
push
sub
and
test
sahf
scas
jg
inc
fwait
es
call
mov
cld
js
lods
dec
fisub
jb
pop
push
jnp
int
les
mov
mov
mov
jmp
mov
test
mov
mov
sar
jle
div
ja
sti
div
jmp
push
stos
jae
add
popa
mov
popf
(bad)
mov
ds
mov
push
add
dec
mov
pop
pop
jbe
add
nop
div
xor
pop
scas
aaa
mov
cmc
movs
scas
push
mov
and
rol
iret
adc
jmp
cmp
jno
push
into
jge
xchg
rep
pop
or
add
mov
mov
jle
fmul
and
mov
xchg
call
sbb
sub
cmp
(bad)
lods
dec
je
in
ret
fs
or
dec
ret
xchg
adc
push
arpl
int3
sbb
inc
icebp
ins
nop
movs
imul
in
aam
fwait
out
mov
es
dec
xchg
xchg
push
fs
mov
push
push
out
mov
cli
jnp
js
gs
push
push
inc
outs
movq
cmp
pusha
pop
ins
popa
fdivr
stos
stos
es
dec
mov
movs
les
in
sbb
(bad)
hlt
(bad)
fs
lock
fnop
inc
adc
xlat
jmp
setle
mov
cmp
inc
push
jo
pop
shl
in
mov
xchg
jg
cmp
jbe
mov
cs
mov
rol
sbb
sub
mov
in
and
fidiv
mov
repz
push
ret
mov
or
shl
cmc
add
sbb
push
add
(bad)
les
aas
(bad)
xchg
pushf
sub
enter
not
or
cmp
stc
pop
pop
and
mov
sub
outs
addr16
dec
jle
sub
push
adc
in
leave
cli
out
cmp
lea
cmps
repnz
mov
frstor
mov
mov
pop
lods
mov
xchg
and
in
jecxz
xor
inc
push
es
cmps
sbb
sbb
sub
push
cmp
int3
bound
not
iret
stc
jbe
popf
(bad)
retf
and
test
mov
xor
test
pop
test
ins
(bad)
push
retf
pop
cs
mov
call
mov
aad
sub
adc
jno
fild
or
dec
es
aaa
sbb
mov
aas
shr
retf
ficomp
gs
iret
pop
mov
mov
into
mov
xchg
add
sub
daa
(bad)
out
ja
dec
je
add
scas
movs
int
add
mov
ins
inc
popf
push
mov
push
sbb
mov
adc
lods
pop
and
dec
icebp
xor
imul
xor
retf
push
std
mov
push
pop
mov
aad
sub
jecxz
hlt
pop
lods
dec
pop
out
pop
pop
jmp
outs
cwde
xor
outs
sub
int
fwait
or
cwde
fwait
add
or
or
aas
push
mov
fcmovb
mov
inc
pop
mov
shl
stos
ret
xchg
test
jno
mov
lods
ds
jnp
or
sub
cmps
adc
and
daa
mul
sbb
int3
pop
jmp
push
ins
xchg
or
inc
(bad)
call
loop
or
push
arpl
jle
jmp
or
cmp
ficomp
dec
cmp
sbb
xor
xchg
aas
sar
mov
or
(bad)
pusha
popf
enter
or
mov
push
jp
jp
rol
iret
and
mov
inc
daa
cmp
lods
mov
stos
mov
push
ins
jbe
psubusb
inc
cmp
add
int3
leave
or
pop
fisub
stos
fadd
and
shr
sub
(bad)
sub
outs
sub
enter
xchg
pop
scas
or
(bad)
mov
dec
jmp
and
movs
mov
adc
xchg
ficomp
xor
adc
xchg
or
pop
push
or
data16
(bad)
iret
pushf
or
shl
dec
and
and
mov
ds
inc
nop
cwde
jle
stc
out
test
pop
mov
inc
jno
loopne
std
mov
cmp
or
sub
fs
pop
jae
add
enter
or
repnz
or
pop
(bad)
jbe
jne
test
mov
push
imul
dec
inc
pop
mov
retf
outs
rep
test
push
cmp
jae
arpl
pop
xchg
xor
dec
cmps
add
js
mov
scas
in
dec
arpl
les
cld
mov
stos
sbb
and
dec
add
lods
sbb
test
xchg
lock
dec
add
cs
es
stos
pop
pushw
cmp
sahf
cmp
fwait
sub
push
xchg
mov
ja
add
or
jo
xchg
in
mov
aas
rcr
inc
and
cld
ins
inc
push
arpl
and
retf
repz
pop
out
xchg
add
inc
inc
add
in
mov
adc
jb
outs
pop
add
sub
xchg
xlat
arpl
cli
ja
shl
(bad)
mov
jmp
fadd
std
mov
sbb
pop
and
and
arpl
fnsave
xor
mov
dec
xchg
mov
pusha
call
mov
push
and
add
push
ficomp
ds
pop
add
jmp
retf
ss
std
mov
inc
scas
xchg
push
or
int3
ficom
loope
sbb
adc
xchg
fisttp
addr16
jae
repz
enter
push
icebp
mov
push
adc
mov
cdq
jb
fdivr
mov
dec
fsub
or
sahf
jp
aas
pop
jb
jge
daa
and
mov
xchg
cs
mov
aas
sahf
int
aam
fstp
sub
mov
or
movs
pop
jmp
sti
add
inc
shr
dec
xchg
mov
rol
cmp
outs
sbb
jae
mov
test
jg
dec
pop
pop
neg
xchg
int
retf
ror
je
inc
call
sbb
dec
std
into
cmps
jae
pop
movs
fstp
or
leave
push
aas
add
xchg
push
retf
and
(bad)
sbb
repz
cmp
and
mov
stos
push
push
mov
jno
fstp
push
and
ret
push
mov
xchg
push
ins
or
ds
aad
retf
add
sar
jg
add
ja
mov
scas
push
sub
pusha
repnz
enter
mov
arpl
cs
imul
pop
adc
adc
in
lahf
jb
fst
sbb
in
sbb
jmp
adc
lods
inc
les
pop
sub
(bad)
pop
outs
jle
cli
cld
pop
sti
mov
add
in
pop
mov
and
jmp
pop
loope
or
sar
add
jg
mov
sahf
xchg
sub
push
outs
mov
push
out
push
xchg
fwait
inc
xchg
rcl
les
adc
jno
mov
(bad)
leave
shl
cli
jl
aam
sti
les
mov
pop
inc
jnp
inc
in
retf
push
xor
mov
xchg
std
imul
sub
pop
push
pop
inc
mov
leave
push
add
in
mov
xchg
adc
push
add
daa
dec
stos
push
jmp
pop
pop
xchg
cmps
add
dec
loop
ror
mov
stos
jmp
inc
pop
fistp
test
ds
enter
push
arpl
addr16
mov
out
inc
mov
and
sub
mov
jmp
out
imul
retf
push
jb
mov
ja
add
sti
push
les
nop
jb
dec
call
test
add
pop
sub
dec
imul
inc
dec
icebp
call
add
sbb
test
cmp
addr16
xchg
inc
xor
jbe
cmps
cmp
ss
jecxz
mov
jecxz
push
fs
and
js
push
sahf
mov
fisub
push
jmp
fild
or
test
scas
call
lock
xchg
push
pushf
rol
or
cdq
pop
mov
jmp
int3
(bad)
repz
rol
mov
mov
rcr
fistp
shl
lea
test
test
loope
data16
bound
lods
clc
loope
mov
sbb
outs
lahf
fdivp
gs
pop
(bad)
jmp
out
adc
or
imul
inc
xchg
adc
retf
fyl2xp1
mov
jl
push
add
lods
and
ret
inc
fistp
and
jmp
or
adc
cmp
nop
inc
mov
dec
push
pop
sbb
mov
inc
test
dec
(bad)
iret
int
fimul
movs
enter
dec
pop
jle
mov
pop
jle
adc
outs
mov
jle
pusha
shl
out
mov
xchg
mov
lahf
jne
fmul
lods
repnz
push
xor
adc
mov
std
test
or
jmp
dec
sbb
sub
inc
add
daa
(bad)
push
cmp
dec
icebp
fidivr
imul
jo
sbb
call
pop
xchg
or
sub
out
inc
jno
(bad)
mov
icebp
(bad)
enter
xor
sub
push
pop
rol
dec
and
dec
ins
mov
inc
fdivrp
sbb
popa
dec
daa
sub
dec
and
loopne
jle
ss
shl
jno
add
clc
enter
mov
sbb
inc
shl
push
inc
lods
sub
cmp
aad
sbb
push
dec
xchg
sub
mov
and
lods
mov
xor
dec
fwait
inc
pushf
mov
cwde
fst
xchg
cmps
inc
cmp
adc
bound
sbb
idiv
test
test
xor
inc
xchg
lea
clc
(bad)
mov
mov
sub
stc
data16
jle
jae
inc
mov
jns
gs
rcl
pop
and
xchg
gs
jmp
clc
add
iret
push
sub
jb
into
mov
pop
mov
xchg
into
cld
ja
xor
jnp
(bad)
pusha
cli
xchg
push
sub
sub
shl
cs
add
inc
xchg
hlt
pop
test
dec
dec
adc
out
add
(bad)
loopne
jmp
jns
arpl
adc
movs
in
in
or
int
jo
in
jp
or
outs
test
ror
or
std
xlat
xlat
(bad)
repnz
retf
mov
pop
and
pushf
jl
sub
fsubr
xor
pop
ror
cmc
pop
data16
std
bound
cmp
and
mov
xchg
test
dec
lea
push
inc
es
scas
mov
hlt
fsubr
push
cmp
jg
mov
push
iret
lods
mov
adc
popf
xor
int3
dec
pop
jmp
rep
adc
aas
ins
sub
or
retf
fs
out
les
sbb
sahf
xchg
lods
push
pop
gs
icebp
adc
in
fld
dec
cmps
fs
cwde
(bad)
or
inc
adc
and
(bad)
mov
sub
mov
lock
sub
jge
movs
jl
mov
cmp
rcl
mov
pop
shl
aam
pusha
mov
xchg
jmp
paddusb
sar
icebp
ret
xor
inc
pop
and
inc
xchg
fsubr
jmp
sub
das
adc
jne
cmp
imul
or
xchg
arpl
xchg
popf
xlat
mov
test
pop
mov
stos
dec
sbb
shr
gs
mov
xor
sbb
in
movs
cli
push
daa
ins
pushf
hlt
fadd
push
mov
xor
mov
call
or
sbb
push
inc
mov
fcomp
sub
mov
stos
sti
out
push
loop
aas
(bad)
jb
and
adc
movs
push
dec
jns
es
mov
xor
or
dec
sbb
cdq
sbb
or
xchg
(bad)
mov
sbb
retf
jb
mov
mov
xchg
push
sti
ins
and
mov
test
and
and
sub
sbb
push
outs
test
pushf
test
dec
out
data16
jp
mov
call
(bad)
and
cmc
div
not
sub
xor
xor
ret
jne
pusha
lds
test
or
sbb
mov
sbb
fmul
into
(bad)
ret
mov
pop
cli
shl
inc
popa
xor
jle
adc
adc
arpl
stos
jle
xor
push
sub
jbe
mov
inc
dec
pop
jl
mov
neg
add
std
jecxz
mov
inc
ret
outs
das
xchg
xchg
pushf
movs
adc
dec
inc
fsub
sub
pushf
push
scas
inc
stc
lods
mov
clc
cmp
xor
ins
push
add
pusha
adc
cmps
stos
iret
test
pop
test
dec
push
clc
mov
call
outs
popf
mov
test
sbb
lahf
lods
sub
inc
jge
(bad)
aam
movs
jns
sahf
jmp
pop
ins
in
mov
aam
push
mov
dec
retf
pop
scas
loope
test
mov
lea
pop
inc
cwde
imul
cmc
jnp
stos
sub
and
movs
adc
mov
retf
xor
pop
jmp
pop
sub
adc
cli
dec
inc
icebp
sbb
xor
xor
pop
sbb
cld
mov
pop
pop
add
and
bnd
inc
out
pop
cs
jle
movs
mov
popf
push
stos
push
pop
and
jns
jecxz
out
ret
repnz
dec
push
sbb
cmp
cmps
test
push
jbe
push
out
rol
rol
mov
lods
ins
shl
bound
imul
rcr
or
pop
arpl
jmp
mov
jae
fwait
test
mov
dec
add
call
shr
fwait
repz
cmp
ja
jno
cdq
inc
inc
je
inc
jp
loopne
inc
add
mov
jg
fs
xchg
repnz
mov
repnz
test
ss
pop
push
je
mov
jne
cmp
mov
mov
imul
mov
or
clc
pushf
test
(bad)
dec
icebp
or
int
cmp
leave
fdivr
jo
jle
jne
jge
addr16
push
jmp
or
xchg
mov
sbb
mov
outs
in
into
ret
pop
jmp
lock
mov
or
inc
jb
sub
call
shr
cmp
push
fstp
sub
sub
sbb
inc
xor
dec
mov
add
bound
inc
test
jmp
push
aad
imul
pop
pop
mov
pop
push
and
or
les
xor
and
int
mov
shr
nop
jl
cmp
mov
fild
push
in
movs
push
and
in
sar
repnz
or
clc
adc
js
fadd
sub
fiadd
push
sbb
lea
xchg
inc
jmp
dec
pop
mov
dec
push
inc
repnz
mov
clc
mov
cmps
retf
jle
push
inc
sub
idiv
or
sub
cmps
cwde
mul
push
jns
xor
(bad)
adc
(bad)
adc
jl
ret
ror
(bad)
fidiv
repnz
js
das
(bad)
mov
jnp
hlt
mov
add
mov
movs
mov
and
stos
xchg
ds
inc
mov
adc
sub
fist
jmp
or
sar
jno
cwde
pop
hlt
sbb
pop
test
xchg
jp
pop
xor
lock
fnsave
mov
rol
push
inc
pop
add
out
and
(bad)
iret
mov
cmp
pop
test
fwait
xor
jb
mov
sbb
retf
stos
cmp
cmp
add
fisubr
test
pop
sbb
ficom
sti
js
scas
add
lds
or
loopne
add
neg
jge
inc
adc
xor
adc
inc
pop
test
mov
fld
xor
jnp
pop
dec
sbb
pop
or
mov
sub
mov
and
pop
fiadd
lods
out
enter
das
lahf
outs
or
mov
test
out
fwait
ret
mov
or
ficom
xchg
push
pop
mov
ins
cli
xchg
int
adc
test
ret
sahf
sub
push
jg
cdq
push
cmps
cmps
pop
into
add
pop
xor
jl
ret
dec
scas
jle
iret
pop
sbb
cmp
jae
jno
xor
dec
mov
pop
shl
xor
addr16
cdq
xchg
pop
jmp
leave
mov
mov
enter
mov
inc
arpl
adc
mov
lock
sub
adc
fldenv
inc
sub
les
stos
mov
inc
add
sub
iret
aad
push
xchg
push
or
cwde
stos
adc
movs
call
inc
ror
cmp
sub
nop
test
cmp
or
sbb
xchg
dec
dec
stos
and
mov
mov
in
nop
jo
and
loopne
jbe
outs
imul
(bad)
xor
dec
mov
xchg
sbb
mov
and
add
adc
mov
mov
push
jge
imul
pop
sbb
xchg
sub
shr
or
fwait
sub
and
cmp
jne
shr
cmp
fdiv
xor
pusha
sbb
add
mov
int
movs
fadd
xor
mov
dec
in
sbb
cwde
inc
inc
and
into
in
jae
adc
dec
inc
push
mov
and
pop
and
sti
xchg
adc
retf
out
enterw
push
sub
fist
dec
outs
(bad)
ficomp
mov
add
jmp
sub
mov
shl
gs
call
mov
push
sti
in
cmp
aas
push
movs
cli
adc
ret
test
mov
aam
inc
ds
(bad)
clc
fcom
adc
or
sbb
push
lock
icebp
(bad)
xchg
pop
xchg
mov
add
xor
outs
inc
in
retf
ja
pushf
xchg
rol
or
push
(bad)
jnp
or
cmp
cmc
sub
retf
cmp
call
int3
mov
test
es
popa
and
ss
lahf
add
shr
sbb
dec
xor
cmps
xlat
inc
inc
cwde
pop
mov
(bad)
stc
or
rol
cmp
sti
push
and
call
xor
jnp
test
push
out
pop
sbb
xchg
sbb
out
shl
sbb
cmp
pop
fistp
jo
retf
inc
mov
mov
movs
(bad)
nop
test
outs
outs
scas
push
icebp
add
xor
sbb
add
call
icebp
loopne
mov
in
inc
mov
mov
aad
outs
ja
fwait
pop
sar
jecxz
adc
mov
das
add
pop
inc
pop
nop
in
int
inc
stos
jbe
cwde
scas
loopne
aam
leave
ins
cmps
cmps
and
sub
lahf
data16
add
shl
sbb
out
mov
mov
push
pop
add
cmp
out
aam
and
jmp
sar
sahf
push
push
mov
mov
daa
mov
sub
xor
mov
sub
pop
test
jnp
or
jnp
int3
sti
adc
dec
or
lods
adc
sub
inc
xor
clc
add
fwait
ds
pop
in
push
push
aas
inc
shl
mov
xchg
sahf
xchg
mov
sbb
repnz
inc
jns
sbb
xor
sub
js
movs
push
push
icebp
adc
cmp
pushf
cmp
mov
(bad)
fisttp
daa
leave
stos
xchg
aas
dec
ins
bound
call
jge
ins
push
jne
and
and
mov
push
in
xchg
push
add
and
ss
mov
movs
push
mov
xchg
xchg
inc
sub
xchg
sbb
(bad)
aad
jl
push
or
scas
and
jbe
enter
push
pop
iret
(bad)
fld
dec
imul
or
mov
ret
mov
scas
dec
ret
in
cmp
push
iret
ds
les
or
ret
add
loop
sub
ret
call
adc
mov
push
in
sbb
fwait
out
fidivr
fstp
loopne
push
scas
js
pop
mov
lods
lods
push
pusha
cmp
ins
mov
cmp
inc
sbb
dec
aad
and
fcomi
mov
pop
aas
mov
ror
popf
in
ret
repnz
in
add
sub
dec
gs
jmp
adc
mov
das
aaa
ss
push
ins
ins
inc
dec
cmp
jae
scas
cld
das
and
test
mov
jne
das
lock
mov
mov
jge
out
sbb
fadd
js
cmp
data16
test
and
loop
inc
fcmovne
imul
dec
arpl
cmps
xor
rcl
xor
push
push
clc
pushf
pop
mov
addr16
div
popa
push
lock
out
jae
jae
jns
shl
cmc
xchg
jmp
xchg
xlat
scas
adc
mul
xchg
(bad)
xor
dec
daa
movs
repnz
adc
(bad)
mov
jp
sbb
or
not
popf
xlat
mov
nop
mov
inc
dec
mov
mov
cmp
mov
jecxz
fwait
addr16
xor
jo
mov
xor
dec
loopne
mov
test
push
imul
xchg
cdq
ss
inc
test
aam
loopne
mov
loop
jno
dec
mov
jg
shl
jno
inc
pushf
push
sbb
lods
pop
and
mov
fwait
rcl
cmp
push
and
ja
jg
push
leave
xchg
cli
xchg
sub
cmp
add
xchg
mov
lds
inc
test
adc
xor
aad
(bad)
shl
int
adc
daa
sub
outs
mov
or
sub
repz
addr16
shl
sar
mov
inc
xchg
sahf
ror
outs
cmp
sti
push
inc
jno
loop
int3
lods
pop
sbb
xor
pop
popa
fcom
sub
mov
pop
jp
repz
jae
mov
loopne
loop
inc
shr
test
mov
in
sub
mov
sbb
cli
mov
int
cmc
adc
sub
es
ret
push
lock
pop
jge
xor
xchg
out
ret
icebp
(bad)
jmp
fmul
pop
outs
fnstenv
pop
add
and
inc
ss
cmps
pop
sbb
or
jl
mov
into
mov
jne
rol
out
pop
ins
bound
lea
jecxz
fs
std
dec
ror
aas
lods
aaa
xor
test
js
xor
mov
(bad)
movs
mov
mov
fs
aad
pop
fs
test
aaa
mov
jo
sub
loope
movs
(bad)
cmp
and
stos
imul
push
or
test
mov
test
repnz
cli
aam
cmp
cli
fucomp
push
neg
loop
mov
cmp
clc
aad
aad
(bad)
mov
push
xor
xchg
jp
adc
inc
test
es
or
jg
sub
mov
pop
sbb
outs
call
mov
movs
dec
push
cmp
sti
adc
pop
icebp
adc
inc
inc
js
ins
jmp
sbb
push
enter
xor
sbb
push
scas
icebp
es
push
pop
mov
or
ret
stos
xor
fdiv
pusha
xor
nop
adc
js
(bad)
jb
out
scas
and
int
xchg
arpl
and
cmp
stc
aam
jg
icebp
lea
mov
xchg
xor
inc
mov
ja
inc
push
jae
jge
mov
cld
jno
xchg
dec
cdq
cmp
dec
mov
pop
cmp
mov
add
pushw
lds
pop
cmc
loopne
mov
nop
xchg
pop
movs
mov
add
stos
pop
fldenv
mov
fwait
pop
xchg
xlat
lea
sub
adc
rol
inc
mov
test
ficom
lods
cmps
xchg
rol
repnz
sbb
arpl
xor
mov
mov
arpl
pop
test
stos
push
add
cs
mov
sbb
jbe
xchg
out
cld
mov
push
or
push
or
push
fcompp
or
fisubr
or
or
cmp
xchg
jp
or
add
aad
jne
in
and
int
ret
outs
inc
sbb
jge
and
push
sbb
mov
push
mov
nop
push
pop
add
or
mov
inc
sbb
mov
mov
cmp
xchg
pop
mov
adc
push
jp
jmp
inc
inc
ss
hlt
test
shl
xor
iret
mov
cwde
push
inc
lock
jp
ja
cdq
retw
push
popa
bound
adc
rol
jmp
jns
movs
pop
mov
mov
pusha
cmps
add
(bad)
push
sub
jno
mov
mov
mov
clc
stos
sub
fbld
test
ret
xchg
in
jo
fcmovbe
inc
mov
xor
int
xor
cld
imul
out
add
js
jo
mov
jmp
jge
dec
fwait
and
inc
popa
bound
jae
and
mov
cdq
mov
loopne
cmps
jl
sub
mov
add
jo
loope
xor
inc
cmps
rcl
aaa
popa
test
inc
sub
test
std
nop
adc
adc
mov
mov
cdq
pop
mov
stc
dec
or
add
cmp
nop
sub
sti
jo
lods
jae
test
adc
sub
xchg
out
leave
(bad)
clc
outs
xchg
sub
clc
adc
mov
push
pusha
pop
xor
je
out
mov
inc
daa
jg
pop
je
mov
jp
mov
arpl
cwde
cmp
sbb
(bad)
push
xor
(bad)
mov
cdq
pusha
cli
aaa
push
and
push
std
and
cmp
loopne
aaa
lods
sbb
ret
and
sbb
hlt
loop
ror
pop
adc
or
sahf
rol
mov
pop
pop
dec
xchg
push
push
sbb
in
xchg
fadd
cmc
xchg
fiadd
aam
push
mov
ret
fs
dec
mov
loop
cwde
shl
ins
adc
push
dec
loope
and
and
or
push
push
xchg
fiadd
pop
loop
jb
or
mov
sub
std
sub
cmp
sahf
jbe
mov
ret
scas
cmps
jo
jo
jmp
jmp
xchg
or
cmp
dec
fwait
icebp
inc
mov
cmp
lods
mov
mov
pop
mov
add
adc
imul
call
push
push
hlt
popa
sbb
leave
jbe
iret
div
inc
cmp
mov
pop
adc
jb
pushf
lea
sti
je
ja
(bad)
xchg
mov
push
jecxz
xor
pusha
and
lods
push
movs
out
lds
mov
div
lock
adc
repz
mov
mov
shr
sub
dec
push
cmps
stos
pop
outs
mov
jmp
xchg
sub
mov
ret
xchg
xchg
add
dec
jmp
xchg
pop
push
fnsave
(bad)
xchg
div
mov
mov
inc
jg
test
xor
test
hlt
jp
jne
xor
mov
adc
dec
fbld
(bad)
mov
mov
jb
fsubrp
dec
jmp
inc
xor
ret
cmovae
xor
jge
add
mov
mov
xchg
sub
push
xchg
sar
dec
sbb
push
xor
loopne
mov
int
mov
loope
dec
mov
gs
jmp
ret
fdivr
aaa
push
dec
inc
iret
cmps
(bad)
fsubrp
jmp
push
fimul
hlt
mov
je
popa
repz
vorps
jne
movs
sub
and
jae
leave
jp
retf
push
into
push
test
arpl
jmp
xchg
or
and
inc
xchg
cdq
mov
fdiv
xlat
shl
push
push
mov
setne
test
jmp
add
loopne
retf
add
jo
add
scas
pop
pop
or
sub
test
adc
inc
mov
mov
sub
(bad)
pusha
or
add
sbb
push
int
test
xor
inc
retf
cmps
mov
adc
inc
jbe
inc
into
adc
pop
cld
add
or
adc
xchg
(bad)
in
fisubr
das
adc
das
jnp
adc
fisub
xchg
and
jg
js
ja
movs
mov
add
mov
cmp
xchg
adc
pop
leave
push
adc
sub
aad
pop
dec
adc
push
dec
js
das
jo
mov
jbe
scas
or
push
adc
inc
pop
scas
retf
sub
push
pop
jmp
shr
jo
adc
pop
enter
cmp
iret
xor
mov
xor
sbb
scas
jge
enter
xchg
ficom
cmp
or
loopne
jl
out
in
arpl
(bad)
sahf
mov
cmp
lods
ret
stos
pop
ret
mov
xchg
pop
std
lea
inc
xchg
ret
cld
adc
jmp
jbe
std
jae
movs
ret
jnp
movs
sub
pushf
arpl
daa
cmp
push
ins
mov
mov
call
xor
ret
dec
ins
dec
mov
or
xchg
xor
mov
mov
ret
pushf
aam
xor
push
adc
mov
sub
inc
fs
call
rcl
es
scas
xlat
aaa
lds
or
jmp
or
xchg
ss
mov
ror
and
cmp
xor
push
fstp
retf
jo
shl
sub
fbstp
into
or
sbb
ret
in
retf
mov
in
fisubr
jns
movs
xchg
push
cmp
daa
add
adc
or
stos
sbb
sub
and
rcl
adc
imul
jge
(bad)
addps
cmp
sub
adc
fcom
mov
lahf
idiv
movs
into
rcl
(bad)
push
lods
loope
aad
pop
sbb
xor
jmp
dec
push
rcl
pop
ins
fisttp
jecxz
stc
sahf
lods
sar
stc
inc
std
mov
jl
xor
push
pushf
icebp
fwait
fwait
mov
daa
in
pop
dec
sbb
out
dec
mov
(bad)
(bad)
cmp
fdiv
mov
out
xchg
je
add
test
cwde
das
pushf
sahf
ja
cmc
mov
xor
dec
jnp
sti
and
inc
fisubr
ds
and
imul
mov
push
div
cmp
fcom
pop
mov
sbb
mov
dec
ret
lock
(bad)
lea
sbb
outs
outs
xor
and
sbb
mov
out
inc
jae
outs
jge
mov
xchg
arpl
cmps
xchg
adc
pop
mov
or
mov
jnp
mov
jae
mov
addr16
mov
sbb
jbe
inc
adc
jno
xor
or
icebp
(bad)
jmp
inc
adc
stc
pop
je
mov
adc
stc
mov
repnz
pop
push
cmc
jae
sub
cdq
inc
das
mov
ins
js
pop
enter
push
adc
dec
add
ret
je
loop
imul
mov
sbb
lods
sub
sahf
push
pop
inc
je
push
test
ins
fld
add
xchg
ret
sub
inc
mov
jecxz
test
sbb
mov
dec
mov
in
pop
jbe
loope
clc
sbb
cld
cs
mov
mov
call
adc
or
xchg
xchg
mov
cli
mov
jne
popa
in
stos
sub
sbb
(bad)
add
pop
jecxz
cld
std
xlat
and
mov
call
imul
sub
sub
lds
mov
mov
mov
lea
mov
mov
mov
repnz
div
add
mov
add
sti
xor
mov
sbb
test
mov
cmp
lods
sbb
mov
dec
imul
loopne
mov
fcom
sub
addr16
push
jecxz
mov
test
xor
lahf
mov
repz
ins
push
es
mov
fadd
jae
popf
mov
fld
xchg
jl
cmp
clc
popa
(bad)
sub
lods
adc
mov
cs
call
xchg
cmp
lods
and
dec
(bad)
mov
lahf
mov
or
xor
inc
lock
fbld
dec
pusha
cmp
xchg
push
xor
arpl
and
mov
mov
and
(bad)
push
fsub
add
int3
push
aaa
mov
aas
pushf
pop
ds
mov
push
push
loope
push
(bad)
or
mov
cmc
mov
lahf
adc
adc
(bad)
in
imul
xor
inc
sub
jg
sbb
cmp
int3
fxch
cmp
fs
inc
retf
xchg
adc
inc
jge
loop
mov
dec
push
aad
sar
jecxz
(bad)
sbb
push
xor
std
jge
pop
push
ins
mov
mov
inc
mov
fdivr
out
lods
ret
rcr
pop
std
xchg
hlt
sub
fimul
pop
inc
ror
and
imul
lds
sub
push
sahf
pop
jbe
xchg
aas
cli
add
lds
addr16
test
pop
xor
xor
jo
das
aad
and
neg
mov
sbb
sub
das
in
lods
mov
imul
test
pop
sbb
sub
(bad)
jle
and
jo
adc
jp
mov
out
aaa
jg
jmp
ins
std
(bad)
loopne
sbb
add
test
lods
inc
xor
imul
addr16
and
sbb
dec
ins
mul
leave
and
and
cmps
clc
ja
test
das
jns
lods
jae
call
test
xchg
mov
repz
aas
jne
imul
pushf
or
int3
(bad)
mov
mov
rcl
xchg
int
movs
into
jg
fsub
mov
xor
push
iret
rcr
sbb
xchg
and
leave
loope
push
lahf
lock
cwde
movs
call
xchg
sbb
and
inc
call
mov
pop
sbb
xlat
jmp
adc
ror
cmp
mov
movs
pushf
adc
cmp
inc
fxch
cmp
pop
pop
jmp
inc
xchg
xor
push
adc
enter
jae
cmp
pop
lods
mov
repnz
test
outs
in
jae
inc
test
push
ror
inc
add
inc
jmp
js
movs
add
mov
es
scas
clc
fs
dec
ins
das
cwde
jne
(bad)
jp
inc
pop
xchg
dec
ror
pop
sub
test
call
ror
push
jno
ins
inc
jne
sbb
xchg
retf
and
popf
lea
cmp
pop
sub
add
sar
pcmpgtw
mov
loop
inc
cmp
xor
xlat
jecxz
movs
mov
mov
jb
cmps
inc
dec
mov
je
jnp
inc
addps
icebp
outs
fdivr
out
or
sub
jae
das
nop
adc
sbb
daa
mov
pop
in
push
sbb
mov
(bad)
add
push
dec
xchg
in
jmp
inc
dec
out
push
jb
stos
popw
test
loope
dec
icebp
xor
arpl
jp
dec
add
add
cmc
sub
dec
xchg
jge
and
movs
xchg
fstp
je
mov
ins
jnp
and
dec
icebp
(bad)
jae
in
sti
stos
sbb
stos
adc
mov
icebp
repnz
xor
and
inc
outs
lods
push
sub
stos
xchg
dec
mov
pop
hlt
add
mov
pushf
popf
xchg
xor
je
and
(bad)
retf
mov
or
push
mov
xchg
add
xchg
pop
loopne
pop
enter
mov
imul
das
mov
mov
hlt
popa
scas
pusha
sbb
ins
(bad)
adc
inc
push
(bad)
xor
hlt
mov
sti
inc
out
fwait
sbb
add
mov
test
cmp
nop
mov
jb
div
or
xor
push
adc
popa
mov
fld
mov
mov
mov
test
xchg
ror
jecxz
loop
iret
jmp
fstp
std
sbb
mov
aad
out
bound
pushf
inc
out
aas
push
add
sbb
ja
scas
movs
or
push
cs
sub
es
xor
sub
imul
mov
call
pop
or
xchg
fwait
ror
shl
dec
movs
mov
pop
mov
inc
(bad)
mov
cli
aam
add
shl
jp
cmps
retf
inc
in
sar
js
fsub
fld
shr
cmps
pop
mov
add
jbe
mov
arpl
push
loope
and
add
int3
shl
mov
sahf
pop
pop
mov
cmp
js
fs
xlat
das
dec
xor
adc
ja
fwait
inc
int
(bad)
aad
jmp
add
in
std
cmp
pusha
inc
ja
dec
xor
ins
movs
int3
dec
mov
call
xchg
call
add
jmp
adc
push
pop
lahf
daa
mov
sbb
pop
dec
icebp
test
mov
xchg
jle
cmp
fld
iret
add
or
cld
adc
or
cmc
jl
outs
dec
stos
mov
pop
cdq
cmc
pop
je
das
pop
adc
ins
je
cmps
mov
adc
imul
das
or
xchg
repz
cs
xor
cmpxchg8b
mov
in
fdivr
rcl
retf
arpl
pusha
popa
xor
icebp
leave
xchg
loop
rol
push
inc
sbb
xor
mov
add
scas
lea
dec
repz
jbe
fidiv
movs
cmps
jge
inc
mov
sbb
push
stos
push
scas
mov
cmp
jge
push
je
adc
loope
retf
and
push
ins
leave
popa
jge
pop
add
dec
cmp
cmp
div
xchg
bswap
daa
mov
lds
or
repz
xchg
movs
xchg
push
das
mov
dec
lahf
(bad)
(bad)
mov
xchg
mov
setb
push
loop
pop
xor
or
adc
fxch
sub
psubd
jmp
ret
xor
add
xor
ss
push
xchg
mov
lds
sahf
mov
sbb
mov
or
push
xchg
jle
mov
pushf
mov
int3
jo
inc
sti
jns
(bad)
iret
add
ret
cdq
mov
dec
retf
xor
push
sbb
cld
jae
int
add
sbb
push
push
sub
jne
and
movs
xlat
xchg
adc
idiv
movs
push
push
in
mov
mov
pop
mov
inc
addr16
sbb
outs
in
lods
(bad)
mov
mov
mov
xor
inc
mov
inc
stos
in
inc
dec
inc
add
jbe
aam
dec
cli
loop
scas
nop
cmc
push
inc
sub
mov
jl
and
les
popf
jae
or
rcl
pusha
inc
scas
ins
out
ret
xchg
pop
push
pushf
xor
mov
pop
std
and
popa
data16
xor
outs
push
add
mov
fnstsw
push
iret
leave
or
cmp
sar
dec
mov
xor
or
cs
inc
xor
int
mov
aaa
lea
jmp
out
rcr
mov
push
push
nop
bound
js
aas
not
pusha
push
cmp
retf
daa
sub
je
pop
int
pop
jne
xor
ins
(bad)
xor
jns
add
int3
inc
or
and
jo
jnp
adc
in
xlat
imul
mov
pop
cmps
jg
push
and
lock
shl
pop
movq
and
repnz
xor
and
ret
mov
ss
scas
mov
mov
mov
retf
je
ds
mov
into
lea
std
cmp
mov
xchg
call
inc
mov
mov
nop
pop
or
(bad)
mov
cmps
dec
mov
push
pop
outs
xchg
loopne
out
outs
inc
jg
rol
add
push
jb
jmp
mov
stc
je
sbb
(bad)
add
shl
cmp
sbb
dec
mov
popf
fstp
(bad)
jae
dec
pop
xlat
lock
and
cmps
mov
adc
inc
cmp
or
sub
test
lock
cmp
pushf
pop
dec
(bad)
loopne
call
mov
ja
push
xor
mov
std
mov
lods
repz
inc
mov
fidivr
or
pushf
xor
xor
imul
sub
mov
cmps
xchg
ret
inc
test
xchg
enter
aas
lds
mov
repnz
jbe
out
mov
push
jge
ins
mov
pusha
rol
mov
jl
into
push
inc
fdiv
mov
sub
outs
lds
iret
push
adc
mov
pop
push
fdivr
test
rol
outs
cmp
sahf
unpcklps
sar
jb
lds
cmp
mov
pop
loop
(bad)
mov
retf
test
(bad)
fptan
mov
push
or
ss
cmp
(bad)
mov
outs
imul
das
daa
pop
call
push
sub
xor
add
jge
push
sub
mov
sbb
mov
cmp
out
mov
pushw
sub
adc
clc
cmp
mov
mov
pop
rcr
pop
mov
idiv
push
push
test
and
ror
das
xor
and
mov
aaa
fucomip
and
sar
adc
popf
jg
call
int3
lahf
(bad)
lods
js
mov
popa
jno
popf
push
mov
and
std
push
pop
push
xlat
out
(bad)
pop
das
mov
or
lods
push
in
sar
lods
cmps
push
in
mov
sar
add
pushf
pusha
adc
scas
inc
and
mov
dec
ret
addr16
dec
loopne
push
xor
sbb
aaa
cmp
add
out
xchg
push
and
dec
and
jle
xchg
jle
mov
add
jae
jns
shl
ds
(bad)
xlat
movs
stos
xchg
cwde
mov
add
(bad)
(bad)
xchg
bound
lods
mov
sti
cmp
(bad)
test
fild
mov
adc
mov
out
arpl
add
push
test
pop
and
sub
mov
ret
jnp
(bad)
xor
daa
loopne
cmp
(bad)
mov
push
retf
int3
xlat
adc
jbe
pop
jg
mov
xchg
cld
adc
xor
jp
jp
cdq
shr
mov
das
scas
stos
adc
jmp
std
cdq
cmps
inc
push
out
sub
sahf
scas
popa
aaa
and
push
add
cmp
fldenv
or
push
or
call
push
push
push
ret
stos
mov
stc
xchg
dec
and
or
in
adc
pop
lock
pop
add
xchg
inc
jmp
cmp
jo
(bad)
shl
std
fild
hlt
cli
pop
adc
jae
dec
sub
inc
popa
jae
repz
cmp
fmul
sub
dec
hlt
wrmsr
jne
retf
adc
arpl
pop
dec
jmp
xchg
cmp
ret
and
imul
dec
xchg
cmps
jecxz
sub
jl
jmp
pop
push
lods
arpl
mov
mov
push
mov
push
and
cmp
push
cmp
push
stc
push
daa
inc
xor
xchg
aam
cmp
sbb
adc
loopne
out
idiv
rcl
mov
fdivrp
idiv
adc
clc
pusha
in
imul
and
int3
fst
cwde
mov
cmp
sub
jmp
in
aas
and
bound
popf
mov
xor
iret
pushf
mov
add
sub
xor
inc
out
or
push
popf
mov
jge
das
pop
adc
mov
lods
pop
jmp
inc
sahf
mov
pop
stc
sbb
xchg
jp
dec
jbe
mov
mov
test
xchg
jmp
sbb
rol
xor
cli
mov
mov
(bad)
xchg
sub
out
or
ret
call
pop
mov
aad
idiv
(bad)
xchg
aad
sar
mov
mov
out
pop
xchg
out
psrad
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
jns
loope
movs
cmp
lock
mov
mov
not
aas
(bad)
repnz
mov
test
mov
popf
cmp
out
pop
mov
loope
aaa
mov
cmp
mov
test
mov
mov
mov
xchg
and
push
cmp
mov
repnz
push
mov
sub
cmp
ins
pop
call
inc
test
jnp
loop
push
addr16
jecxz
pop
je
in
jge
pop
mov
sbb
addr16
push
jecxz
imul
xchg
mov
xchg
js
mov
scas
lock
xor
dec
jnp
pop
push
pop
xchg
cmp
popf
in
xor
mov
sub
inc
arpl
enter
ins
dec
nop
sbb
inc
aad
mov
sub
sub
mov
repz
fidivr
mov
adc
fcomp
mov
(bad)
scas
or
(bad)
lods
sub
push
sbb
add
push
xchg
push
fld
mov
hlt
loopne
sahf
push
loop
xor
sub
push
mov
retf
sub
loope
adc
dec
push
sub
ja
repnz
sbb
push
sar
fcmovne
test
xchg
cwde
test
add
loopne
in
mov
push
call
jge
dec
dec
adc
pusha
inc
lea
adc
sub
out
rol
sub
out
jmp
add
and
(bad)
and
cmps
je
(bad)
sar
jae
inc
mov
int3
adc
push
dec
in
rcl
mov
rcl
sbb
pusha
xchg
xchg
mov
pop
(bad)
mov
dec
push
mov
or
sahf
sbb
sub
mov
scas
aam
dec
pop
and
jmp
(bad)
rol
retf
sar
aas
xlat
loope
hlt
pop
push
dec
lock
int3
shr
aaa
jle
mov
adc
pop
scas
data16
or
jge
call
dec
test
push
movs
out
and
jl
loopne
sbb
push
xor
shr
imul
cmc
imul
addr16
pop
dec
stos
in
pop
push
cmc
pop
jl
int
enter
test
fst
fdivr
test
pop
dec
shl
fcomp
das
mov
mov
xchg
retf
pop
sbb
retf
repnz
and
pop
jecxz
and
ins
bound
les
or
mov
push
enter
add
adc
pop
frstor
ret
xchg
jmp
or
in
in
sbb
mov
dec
shl
pusha
cdq
xchg
push
sub
push
xchg
pop
inc
fmul
or
int3
jmp
cdq
inc
fwait
vorps
push
xchg
imul
call
mov
scas
jb
mov
outs
inc
cdq
jmp
mov
shr
xor
inc
push
inc
scas
add
inc
outs
inc
popf
ja
es
lods
pop
adc
mov
and
out
das
lahf
not
das
push
or
or
mov
stos
test
dec
inc
out
in
pusha
cmp
ja
sub
int3
hlt
sar
out
adc
dec
mov
cdq
mov
and
add
div
(bad)
mov
push
sub
movs
jmp
cmp
fdivr
and
push
int3
arpl
in
mov
inc
mov
mov
adc
imul
jp
sbb
fdivr
or
or
(bad)
mov
xchg
push
mov
lods
stos
int3
test
cwde
stos
shl
fucomp
movs
adc
add
or
shr
loop
pop
mov
add
push
pop
jmp
jo
test
xchg
xchg
inc
adc
jnp
aam
mov
mov
(bad)
xchg
push
sbb
lock
xchg
push
mov
pop
inc
sub
fimul
fwait
jge
xor
repnz
rcr
imul
sbb
push
push
push
xchg
push
adc
movs
jnp
loop
xor
bnd
mov
cmp
ja
movs
inc
push
js
mov
jns
mov
outs
lea
mov
cli
test
mov
test
mov
xchg
aas
mov
repnz
(bad)
mov
push
(bad)
jne
movs
aas
(bad)
sub
mov
fst
int3
loopne
xor
cli
aaa
dec
sbb
or
push
fs
inc
out
mov
rol
aam
jne
or
in
mov
pop
mov
push
not
rcr
fadd
inc
jg
mov
mov
stos
xor
test
movs
les
out
aam
pop
scas
mov
stos
or
mov
push
xchg
sbb
inc
mov
push
aad
out
push
xchg
stos
pop
add
into
pop
jecxz
retf
pop
cmp
movs
aas
ds
dec
xor
stos
ret
cmp
or
mov
push
cmps
and
(bad)
outs
(bad)
push
popf
mov
xor
pop
es
daa
xor
inc
lock
daa
sub
mov
bound
inc
inc
lods
aam
mov
push
sub
cmps
xchg
ja
out
dec
cmp
fcmove
loopne
push
(bad)
dec
rcl
inc
ret
adc
out
das
int3
pop
mov
cmp
push
cmps
xchg
clc
and
cmp
out
push
cwde
fisttp
retf
jne
sub
lea
mov
pop
or
nop
xor
push
cmps
sbb
push
inc
mov
outs
outs
ficomp
cmp
iret
aad
cmc
add
in
jae
xlat
push
lods
ficomp
or
fmul
std
ror
out
jae
enter
jns
out
push
test
inc
pop
in
jno
jmp
fdiv
inc
push
jbe
pop
(bad)
loope
ror
xor
and
gs
pop
sub
mov
cmps
and
les
ja
and
xor
(bad)
and
mov
xor
push
cwde
pop
and
xchg
jmp
lea
les
jl
lods
mov
cmp
ds
ja
sbb
mov
or
xchg
or
jmp
adc
repnz
inc
jl
daa
les
icebp
pop
shl
repz
mov
arpl
ins
out
pop
mov
mov
int
leave
js
push
mov
mov
mov
sbb
lods
sbb
cdq
and
mov
sbb
(bad)
imul
pop
mov
ja
push
and
xlat
imul
mov
mov
rcr
pop
xor
addr16
test
dec
push
cmps
fs
out
dec
(bad)
ret
fstp
fwait
inc
stos
lahf
dec
(bad)
cld
sbb
aam
and
retf
xor
xchg
scas
cdq
sbb
xchg
add
mov
fistp
xchg
aad
xlat
pop
or
mov
jmp
mov
jbe
or
jno
cmp
xchg
xor
jecxz
mov
sub
je
fisub
arpl
adc
sbb
cmp
ret
pop
mov
mov
outs
out
das
scas
nop
push
lods
and
push
shr
addr16
push
pushf
pop
xchg
in
ret
mov
popf
scas
cli
aam
enter
shr
inc
fcomip
jle
aas
(bad)
push
leave
sub
mov
mov
cmp
mov
mov
fidiv
mov
sti
iret
fst
loope
xchg
jg
add
outs
dec
pop
sub
cmp
xchg
stos
call
mov
inc
jo
fdiv
inc
mov
or
(bad)
dec
fldcw
inc
aad
in
xchg
add
xor
retf
inc
sub
aas
popa
enter
outs
lahf
mov
pop
xchg
stos
jg
neg
sbb
ja
jge
push
xor
pop
mov
(bad)
or
sti
and
or
rol
call
mov
fisttp
test
adc
inc
imul
into
scas
lea
mov
jg
cmp
xchg
in
push
or
add
in
lea
xchg
sahf
outs
sub
and
dec
in
retf
loope
repnz
lea
popf
jmp
int
sub
repnz
sub
std
fidiv
pop
mov
pushf
or
adc
sub
(bad)
lea
rol
sbb
fldcw
mov
nop
dec
retf
xor
je
and
movs
adc
cmc
mov
xchg
test
rcr
mov
in
jns
aaa
push
aad
(bad)
(bad)
xor
ror
mov
inc
cmp
push
cdq
data16
and
in
sub
in
cmp
pop
cmp
test
movs
test
push
loop
pop
pop
cmp
xchg
dec
sub
test
into
movs
enter
pop
cs
dec
ror
cmp
hlt
mov
aas
xor
sti
jne
mov
adc
xchg
cs
leave
repz
sbb
cmp
sbb
lahf
ins
mov
pop
fdivr
sbb
inc
fs
jb
sahf
adc
pusha
imul
push
mov
cmps
add
js
out
lods
cmp
and
mov
pop
xor
addr16
cmp
sbb
sar
push
or
(bad)
pusha
cmp
xchg
push
fcomp
push
outs
pop
arpl
fs
sub
jmp
adc
fcmovnb
leave
mov
ins
push
outs
xor
xchg
cmp
in
or
sub
shl
mov
dec
push
(bad)
jp
scas
and
aas
div
lea
mov
jmp
mov
add
mov
ss
push
xor
mov
ja
jnp
mov
xor
mov
sbb
iret
mov
xchg
addr16
sbb
es
fwait
mov
mov
push
xchg
scas
inc
pop
adc
stos
and
std
jbe
xor
jmp
mov
mov
mov
(bad)
(bad)
or
imul
add
and
push
in
push
or
jne
pop
aas
xor
pusha
mov
ror
and
and
cmc
cmp
jmp
aas
cdq
cmp
mov
in
sbb
ins
mov
cmp
aaa
mov
sub
lods
lods
ss
loop
dec
cmp
jge
shl
push
and
xor
jmp
push
xchg
fstp
or
sbb
movs
adc
add
push
jp
mov
hlt
shr
mov
in
lea
iret
mov
jmp
inc
mov
and
jp
sub
dec
mov
out
fcmovbe
push
sub
pop
mov
out
(bad)
enter
stos
xor
sbb
mov
xchg
lea
pop
and
stc
sti
shl
cmp
in
push
add
in
je
adc
jne
xchg
cmps
inc
dec
jmp
or
mov
mov
movs
sbb
sbb
inc
pushf
pop
or
jbe
xchg
jecxz
cdq
xor
aad
push
cmp
cld
inc
jo
mov
mov
and
bound
(bad)
mov
add
jl
sub
and
jmp
fstp
cdq
fistp
inc
and
aad
mov
push
ret
mov
loope
mov
ss
retf
add
or
fprem1
pop
loopne
das
fimul
pop
lea
inc
jo
sub
in
(bad)
scas
pop
mov
test
lahf
sub
aas
xchg
jne
enter
retf
fnsave
sbb
cmp
adc
dec
pop
jns
xlat
sbb
cmp
xor
ss
or
lock
adc
mov
lock
jae
rcr
cs
xchg
jns
ins
jns
les
jp
addr16
dec
(bad)
call
adc
xchg
data16
push
mov
ins
test
pop
mov
pop
std
lock
sti
not
sbb
inc
cs
xchg
aas
and
jb
mov
xor
mov
mov
movs
jmp
push
cmp
sar
movs
push
mov
pop
inc
xor
adc
dec
jmp
xchg
sbb
imul
pop
imul
and
mov
jmp
sahf
jl
jl
retf
mov
pop
lods
pop
xlat
cmc
(bad)
push
int3
lods
dec
inc
cmp
adc
mov
dec
pop
sbb
add
imul
jl
cld
retf
das
dec
pop
shl
push
push
movs
add
pop
(bad)
retf
add
mov
pop
mov
pop
mov
push
sbb
(bad)
fsubp
(bad)
cdq
mov
push
inc
or
mov
dec
mov
adc
cmp
mov
push
sbb
into
sub
outs
test
fnsave
mov
pop
adc
adc
xor
cdq
sub
lea
xchg
inc
aam
mov
xor
fwait
aas
stc
mov
cmps
adc
xor
stc
pop
ret
rol
jmp
sub
pop
gs
loope
inc
mov
push
imul
xlat
fst
dec
aad
dec
lahf
jmp
cmps
dec
retf
add
mov
movs
jo
paddusb
in
dec
xor
sub
test
enter
cmp
dec
lea
mov
repz
push
in
gs
mov
mov
shl
mov
(bad)
sub
jbe
xor
(bad)
mov
stos
(bad)
mov
in
mov
in
mov
jp
cmp
icebp
lea
mov
xchg
sub
out
cmp
cli
add
idiv
dec
xor
not
idiv
xor
stc
stc
imul
cmp
or
aas
xchg
test
jle
or
jg
or
rcr
shl
jge
inc
cmp
out
fild
out
mov
sbb
mov
jmp
aaa
lds
shr
cld
rol
or
shl
ficomp
div
jns
add
lea
adc
xchg
sub
cmp
fs
pop
xchg
fcomp
fimul
pop
cmp
out
sub
push
lods
stos
ss
pop
mov
sbb
mov
add
inc
xor
inc
cmps
xchg
jecxz
or
aam
dec
and
xor
inc
jns
cmp
scas
outs
add
or
push
sbb
jb
ret
and
stc
jo
add
clc
enter
hlt
movs
mov
sub
in
repz
sar
outs
push
mov
cld
popf
cmp
test
in
in
inc
(bad)
test
pop
cmps
sahf
bound
push
pop
jmp
shr
mov
loop
mov
fs
push
hlt
inc
and
es
add
mov
gs
inc
sar
push
ins
jmp
ins
mov
call
dec
sbb
ficomp
lds
inc
fsubr
stos
lahf
mov
call
in
pop
enter
out
enter
fiadd
and
lock
inc
into
stos
fs
mov
int3
inc
add
jb
adc
mov
repnz
sbb
das
aam
call
ficom
outs
add
movs
data16
and
or
or
mov
in
xchg
fld
sub
dec
cld
(bad)
cli
or
dec
int3
sbb
jnp
loop
jae
daa
ds
xchg
sub
jbe
xchg
(bad)
jae
stos
lahf
fdiv
outs
imul
imul
lods
rcr
ficom
out
mov
add
test
push
pop
push
jg
stos
and
scas
push
inc
call
ficomp
jl
or
fsub
cmp
xor
scas
push
dec
pop
jecxz
dec
sbb
push
jmp
sbb
aaa
jle
push
daa
cmp
movs
mov
cwde
aaa
xor
jo
xor
pop
push
jg
mov
out
mov
(bad)
fiadd
dec
shl
retf
popf
rcr
fnstenv
push
test
scas
loope
jo
(bad)
(bad)
jbe
test
adc
ins
cs
aas
sahf
cld
add
cmps
dec
(bad)
mov
mov
jmp
mov
mov
es
mov
xchg
test
cmc
add
jns
push
out
sti
std
out
iret
jp
lods
neg
repnz
dec
push
icebp
jae
push
icebp
pop
int
mov
mov
les
adc
call
xchg
inc
sub
mov
and
into
dec
push
inc
inc
mov
dec
push
pop
adc
mov
or
outs
cmp
pop
jbe
dec
icebp
lds
sub
call
push
mov
and
cdq
jmp
data16
scas
and
in
push
out
cmps
jp
xchg
dec
inc
cdq
sti
loop
jge
and
push
ins
(bad)
addr16
cli
pop
xchg
pop
xor
cmc
push
shr
pop
mov
aaa
fild
inc
je
mov
ds
xchg
push
lods
gs
mov
js
xor
cli
ins
xchg
fild
scas
dec
add
cmp
jns
test
xor
jmp
stc
dec
lods
js
popf
inc
dec
icebp
lahf
pop
in
lods
aad
fwait
push
or
icebp
retf
or
mov
cmp
pop
add
jo
je
pop
cs
add
add
lds
or
push
test
push
les
jnp
in
add
fcom
jge
std
jl
and
push
leave
das
outs
das
push
in
jb
(bad)
or
inc
repnz
cdq
int3
cmp
pop
out
out
inc
(bad)
repz
outs
nop
addr16
(bad)
in
sub
mov
movs
aad
fcomp
sub
div
movs
push
fnsave
ds
out
inc
adc
repz
inc
test
xchg
xor
xchg
xor
test
xor
(bad)
pop
inc
jmp
retf
jle
xchg
outs
jmp
je
cmp
dec
pushw
je
pop
outs
pusha
jns
pop
sti
imul
dec
dec
mov
shl
and
stos
stos
push
xchg
sub
(bad)
test
xchg
dec
loope
aas
repnz
aaa
mov
out
cmp
test
mov
add
ja
or
jbe
dec
xor
mov
repnz
cmp
jbe
and
sub
mov
movs
aas
(bad)
popf
(bad)
mov
ss
add
movs
jp
movs
and
push
aad
cmp
add
lods
addr16
(bad)
cli
ret
dec
mov
call
jb
mov
pushf
ins
sub
sbb
ja
jnp
(bad)
jns
dec
adc
mov
jg
fdivr
add
test
cmp
jae
das
mov
inc
fild
cld
cmp
daa
pop
mov
aam
mov
outs
and
lock
xchg
or
jns
icebp
jecxz
adc
xor
mov
stos
test
pop
sub
mov
loopne
ret
(bad)
sti
loopne
cli
pusha
or
and
mov
pushf
idiv
sub
ds
stos
push
outs
add
sbb
fadd
jne
mov
add
ja
inc
push
cwde
xchg
aad
loopne
retf
mov
pop
dec
loope
dec
(bad)
or
and
cs
jb
push
out
fcomp
in
xchg
jge
retw
retf
adc
aas
les
daa
js
jmp
fcomp
sbb
pop
push
mov
mov
push
movs
sub
sahf
push
xchg
mul
ja
div
ins
(bad)
jge
cmp
mov
dec
pop
mov
add
push
push
dec
jmp
sub
out
xor
mov
bound
in
test
out
xchg
cs
into
mov
ror
or
mov
loopne
dec
int3
adc
and
clc
dec
mov
pop
sub
inc
fs
adc
push
mov
mov
repnz
pop
mov
jo
fdiv
mov
repnz
cdq
ror
fisttp
bound
jle
test
sub
or
loope
cmp
cmp
push
mov
(bad)
mov
and
mov
movs
inc
sub
loope
test
adc
sbb
data16
sbb
scas
std
xchg
pop
cmps
stos
push
mov
jo
mov
xlat
xor
cmps
mov
jb
add
cmp
adc
fild
mov
inc
push
scas
mov
push
movs
jmp
xor
mov
sub
jmp
or
rcl
sbb
(bad)
iret
adc
cs
loope
daa
xor
inc
shl
ins
push
in
xor
sbb
aas
mov
ret
xchg
shl
pop
mov
sub
dec
ds
outs
popf
stos
dec
or
ss
mov
sbb
xor
daa
and
push
inc
fnsave
in
push
push
sub
aam
test
call
jns
mov
ficom
lods
mov
rcr
shl
loope
scas
pop
pop
(bad)
fisttp
js
shl
int3
out
dec
outs
sub
inc
dec
rcl
xor
shl
adc
mov
cmc
repz
retf
jmp
mov
xchg
in
fcom
out
cmp
call
cmp
sbb
dec
dec
mov
daa
fidivr
inc
gs
imul
outs
mov
nop
adc
inc
add
sar
pop
inc
aas
jmp
cmc
cmps
add
cmp
mov
cmp
jmp
and
lea
dec
mov
push
xor
and
jge
dec
jge
rcl
or
sub
outs
icebp
retf
enter
sbb
scas
jg
ins
xor
int3
push
arpl
fcomp
cmps
dec
std
or
and
adc
in
pushf
leave
dec
adc
inc
dec
add
sbb
mov
inc
rol
out
jo
in
mov
aam
cmp
cmp
sbb
sbb
test
mov
ficomp
mov
vmovlps
jne
loopne
stos
es
imul
retf
repz
bound
mov
scas
sub
adc
shl
ficomp
and
sbb
jne
fistp
(bad)
aad
xlat
dec
es
mov
iret
add
dec
push
pop
loope
sub
iret
push
shr
inc
out
out
xchg
stos
mov
sub
xchg
sbb
sbb
xchg
(bad)
jecxz
push
test
sbb
test
push
ror
sbb
sub
xchg
outs
call
fs
lods
jp
mov
ds
xchg
pop
adc
adc
gs
loopne
pop
fild
inc
sbb
cdq
out
and
repnz
and
mov
pop
push
cdq
jecxz
ja
xor
loop
retf
cmp
sbb
dec
mov
push
push
imul
cmps
sbb
mov
mov
and
dec
push
sub
mov
jl
sbb
sub
lds
and
jle
pop
jge
jecxz
mov
into
clc
jnp
mov
pop
mov
in
out
mov
fbstp
dec
inc
ret
inc
or
in
adc
cmp
add
add
repnz
jle
cmc
test
out
xchg
fstp
or
call
xchg
lea
jge
out
push
cs
mov
ficomp
ret
or
fbstp
pop
dec
call
lock
daa
add
addr16
adc
mov
push
xor
and
test
sbb
xchg
and
ficomp
xchg
test
lds
fwait
sbb
les
cli
and
mov
mov
jmp
xor
add
dec
mov
fcomi
sub
and
push
inc
xchg
push
push
mov
add
popf
loopne
lods
cmc
add
imul
mov
push
sbb
ds
sbb
test
int
lods
mov
push
(bad)
ds
mov
jbe
stos
fwait
clc
xor
ds
adc
test
ja
push
out
ja
mov
add
push
sub
sbb
mov
in
sahf
lods
(bad)
idiv
jno
test
mov
jo
and
jae
push
call
jb
adc
push
test
add
add
ss
push
inc
mov
mov
inc
imul
add
fiadd
xchg
and
cmp
fcmovnu
xor
ins
mov
xor
(bad)
pop
lds
inc
out
es
scas
push
enter
inc
push
shl
add
push
pop
xlat
cmp
jmp
sub
jo
add
sbb
je
aad
retf
popf
in
cmps
and
sbb
and
mov
pop
jb
iret
in
xor
les
cmp
pop
mov
xchg
add
clc
fdivr
inc
sbb
mov
rcr
push
sahf
dec
lods
inc
dec
loope
push
jmp
dec
sub
push
inc
and
and
mov
inc
push
add
adc
mov
arpl
daa
mov
call
inc
add
add
dec
sbb
mov
sar
aas
cmp
mov
and
mov
push
push
dec
mov
stos
loopne
fwait
add
cdq
and
mov
jno
xlat
pop
jmp
aad
jnp
sbb
jge
jnp
imul
mov
lods
pop
fisttp
stos
(bad)
cli
lahf
sbb
fsubr
and
dec
cmps
mov
cmp
ins
(bad)
and
jge
xor
mov
push
push
inc
jne
dec
jns
ins
mov
cmp
pop
les
(bad)
je
mov
je
fld
dec
fisttp
inc
add
fadd
call
ficom
lds
jno
mov
mov
aam
xchg
loope
lds
in
add
add
lock
inc
int3
std
jbe
in
es
dec
sbb
cmc
mov
pop
push
test
and
out
add
pop
sub
out
inc
mov
xchg
jne
sub
add
jae
dec
retf
mov
mov
mov
icebp
fst
gs
and
in
call
rcr
fldenv
(bad)
popf
daa
and
int3
inc
push
jp
jg
sub
(bad)
jp
pop
and
sbb
xor
sub
scas
add
mov
inc
jb
fstp
adc
sbb
fsub
adc
mov
imul
mov
in
dec
dec
bound
daa
std
lds
sub
mov
sub
sbb
mov
inc
ret
call
cs
ss
pop
stc
pop
ins
jbe
mov
mov
xchg
add
cmp
xchg
ins
idiv
push
push
lods
cwde
call
mov
int
dec
cli
out
mov
xchg
or
hlt
mov
push
ret
jno
mov
sbb
inc
rcl
(bad)
je
cwde
add
add
ret
cld
lea
sub
pop
repnz
xchg
ins
jle
in
jnp
out
sub
je
jmp
xlat
iret
fnsave
xchg
sub
xchg
lods
jmp
mov
icebp
and
mov
js
nop
cld
mov
je
or
xor
sbb
sbb
(bad)
jmp
xor
cs
mov
sbb
add
pop
pop
std
out
mov
andps
jp
scas
mov
in
inc
xlat
aam
xchg
inc
mov
paddusb
pop
cld
xor
cld
adc
mov
(bad)
es
shl
(bad)
push
js
mov
mov
mov
xor
pop
neg
bound
or
mov
call
mov
pop
test
cmps
int
in
xchg
(bad)
je
pop
mov
and
cmp
imul
enter
loop
adc
adc
or
ja
imul
pop
mov
push
icebp
je
push
ret
mov
je
jle
jmp
std
xor
iret
mov
pushf
jmp
fidivr
adc
sbb
xchg
dec
sahf
or
or
shr
fst
scas
jo
sub
cli
sbb
ds
pop
scas
push
adc
js
sti
out
cmp
mov
ror
xchg
add
add
mov
adc
xchg
push
jo
cmps
mov
outs
sub
shl
adc
leave
push
and
mov
xchg
aam
add
or
mov
mov
jl
jae
mov
je
jp
xor
enter
xchg
mov
ror
cwde
lods
fiadd
sbb
or
or
(bad)
push
push
add
adc
rol
icebp
jnp
imul
lahf
push
leave
test
add
xor
cli
sbb
adc
cwde
fs
out
call
mov
aad
cmp
sub
js
imul
jmp
cwde
mov
test
dec
call
add
stos
mov
push
std
popf
aaa
xlat
popa
xor
out
fsub
sub
lods
mov
enter
popa
jl
add
sbb
pusha
xchg
test
rcl
add
mov
add
push
mov
sbb
sub
xchg
inc
pop
or
adc
lods
leave
dec
jae
xchg
scas
outs
outs
push
jae
pop
std
adc
xor
outs
push
test
shl
inc
adc
out
mov
in
adc
lahf
and
cld
pop
test
ror
lds
jmp
mov
xor
mov
pusha
lods
mov
loope
adc
mov
xchg
out
jae
pop
dec
xor
outs
inc
cmp
and
popf
test
retf
lahf
jecxz
pop
cmp
fistp
fnsave
addr16
int3
cld
dec
add
inc
push
or
inc
push
dec
retf
mov
out
xchg
js
push
sbb
and
je
repz
cmp
fstp
neg
cs
test
mov
in
cmp
jno
mov
add
xor
bound
adc
pop
inc
mov
(bad)
fstp
(bad)
adc
sub
and
bound
cld
sbb
adc
mov
cmp
xchg
vpaddusb
push
in
loopne
lea
iret
fs
inc
pop
push
adc
sbb
in
jmp
jbe
cli
fisttp
mov
and
lea
(bad)
into
jmp
xchg
lea
rcl
xchg
and
jmp
mov
loopne
inc
pop
not
les
and
(bad)
das
mov
mov
or
xchg
xchg
je
ds
inc
sbb
addr16
neg
push
jecxz
into
add
shr
outs
cmp
xchg
adc
imul
xor
jae
shr
ret
or
jno
mov
rol
mov
mov
or
lock
fidiv
cmps
lea
mov
scas
jp
(bad)
mov
movs
imul
or
call
movs
inc
jge
fadd
push
xchg
xchg
adc
cmp
ss
or
ins
jne
retf
nop
pop
dec
repz
push
or
cdq
jle
sub
and
gs
std
fst
sbb
xchg
push
inc
adc
mov
daa
mov
xchg
pop
mov
jle
(bad)
icebp
adc
test
xchg
fidiv
cmp
dec
mov
jg
and
(bad)
fistp
add
jnp
cmp
fcomp
test
sbb
popa
imul
jmp
sub
xor
or
cmc
dec
jp
xchg
retf
xor
mov
jg
div
lea
pop
inc
xchg
stos
test
xchg
jne
aaa
xchg
mov
jg
add
sub
jae
xchg
sub
hlt
fnstenv
out
loop
dec
xor
fld
sub
(bad)
or
out
lods
pop
jmp
enter
jmp
out
out
sbb
xor
push
std
adc
clc
jnp
jge
xor
movs
push
es
leave
xchg
cmp
inc
jns
aas
pop
cmp
jmp
and
addr16
loopne
sub
xchg
movs
addr16
jle
pop
mov
sbb
pop
sub
lock
mov
jge
jb
sar
aad
std
inc
jne
mov
fisttp
fucomip
or
out
gs
jnp
sbb
mov
mov
xchg
aaa
mov
repnz
mov
add
div
add
mov
add
mov
ret
test
xor
xchg
dec
cdq
test
mov
jge
dec
jbe
inc
mov
dec
arpl
dec
sbb
adc
arpl
mul
mov
and
jecxz
adc
pop
ficom
push
pop
popf
fild
inc
push
les
jmp
mov
out
clc
shl
aaa
outs
sbb
mov
aam
movs
xor
pop
ja
test
std
add
mov
pop
sub
mov
(bad)
dec
fdiv
in
xchg
iret
mov
jo
push
out
test
mov
pop
pop
outs
cmp
clc
fsincos
loopne
xor
sbb
jecxz
cs
pop
outs
out
repz
(bad)
xchg
imul
xor
push
push
push
push
mov
fisubr
jo
jecxz
xchg
ficomp
mov
clc
or
inc
call
cmc
ins
sub
pop
call
inc
loopne
rcl
push
daa
adc
xchg
or
pop
cmp
mov
adc
in
inc
int
lahf
mul
fwait
xchg
arpl
sahf
lock
neg
in
test
inc
jecxz
mov
and
mov
cmp
mov
push
xlat
nop
mov
ficom
sbb
jg
jb
iret
daa
jecxz
add
mov
out
mov
out
rcl
cwde
outs
jmp
and
test
scas
lahf
push
push
jmp
mov
inc
push
arpl
popa
pop
icebp
pop
fwait
mov
aad
add
test
mov
loop
xor
les
stos
cs
lock
mov
mov
out
or
nop
cli
stos
jbe
cmp
jl
pop
test
nop
mov
mov
jmp
sbb
test
push
call
jae
jnp
cli
test
cmps
loopne
enter
mov
repnz
xchg
pop
ins
jmp
ins
movs
dec
inc
sbb
push
ror
pop
xor
jb
fbstp
pop
scas
pushf
inc
dec
sar
dec
push
and
sub
fwait
push
rcl
push
test
popa
loope
dec
bound
adc
and
imul
xchg
ja
adc
out
inc
mov
push
loop
lods
gs
mov
idiv
cmp
pop
addr16
push
mov
xchg
out
fsub
push
mov
cmps
push
(bad)
and
push
mov
sub
mov
xor
xchg
test
ret
xlat
mov
and
sub
add
pop
lock
add
out
lock
dec
shl
loop
je
xchg
add
push
scas
stos
outs
mov
sub
and
mov
or
mov
cmc
jns
fucomip
add
push
pop
or
int3
out
ror
mov
sub
add
mov
push
out
jo
movs
aaa
clc
sbb
fistp
or
out
mov
sub
ror
je
add
cmps
push
adc
repnz
xchg
fwait
int3
rcr
hlt
pop
loop
inc
dec
xchg
inc
icebp
sub
in
jecxz
inc
push
in
shl
sub
pop
ror
xchg
xor
push
mov
pop
adc
or
xchg
stc
imul
je
xchg
jae
xchg
xor
mov
xchg
in
ficomp
scas
pop
xor
sbb
out
(bad)
shl
jl
into
xor
sub
clc
sub
jns
fsubr
mov
jmp
sbb
je
lock
test
or
arpl
push
leave
jae
cdq
adc
stc
jmp
scas
stc
sub
or
lods
xchg
fist
sbb
arpl
xor
jle
int
pop
add
aam
and
test
fpatan
xchg
gs
popa
pop
inc
test
test
cmp
cmp
hlt
rol
adc
stc
test
cld
adc
mov
in
hlt
daa
mov
mov
jg
movs
sub
mov
xchg
xchg
jns
add
dec
out
dec
enter
imul
cmp
xchg
dec
je
sub
mov
or
aas
push
repz
sbb
scas
and
sbb
(bad)
call
popf
push
mov
adc
jecxz
adc
je
push
and
imul
push
pop
scas
je
mov
mov
loope
clc
inc
sbb
cmp
out
js
test
aam
(bad)
inc
shl
cmp
mov
ins
sti
mov
in
sub
es
scas
sbb
icebp
repnz
sub
test
cmp
js
xor
mov
push
sub
test
ret
outs
mul
xchg
rcr
xor
cli
push
fs
cmp
fist
nop
sub
mov
dec
out
data16
xlat
test
fdivr
(bad)
in
sbb
pop
jg
add
aam
sub
std
test
jne
mov
ins
mov
sub
mov
pusha
sub
call
movs
jmp
push
mov
sti
xchg
in
jge
pop
push
adc
xor
mov
mov
xchg
mov
fsub
xchg
into
bound
cmp
cwde
mov
mov
fadd
mov
clc
outs
clc
je
or
mov
aaa
pop
add
xchg
pop
repz
rcl
inc
mov
mov
jmp
dec
cwde
retf
sahf
sub
pop
(bad)
ret
(bad)
sub
in
out
or
jb
inc
ret
adc
jns
mov
xchg
jae
cmp
mov
mov
push
push
jns
xchg
fxam
(bad)
popa
jle
jae
push
cs
js
and
push
mov
lock
cmc
add
sbb
sbb
pop
shr
sub
xor
add
dec
inc
xor
inc
in
dec
push
pop
dec
cld
out
push
aam
call
sti
clc
cmc
in
aas
mov
movs
push
push
jecxz
jne
push
pop
movs
pop
cmps
xchg
fdiv
test
sbb
paddusw
mov
pusha
js
xchg
cmps
cli
lock
call
mov
jne
mov
popf
jnp
add
sbb
inc
push
enter
jmp
push
mov
push
iret
push
and
xchg
loop
mov
das
push
jmp
pop
inc
cmp
push
imul
ja
dec
or
xor
inc
jl
test
sti
dec
mov
mov
repnz
into
(bad)
les
sbb
pusha
xlat
jecxz
sbb
xchg
xchg
xchg
mov
or
xor
cs
(bad)
mov
cdq
aad
idiv
cs
cmp
ins
es
add
call
push
stc
repnz
jno
(bad)
aam
mov
pop
and
lahf
adc
or
sub
ret
sbb
lods
push
jno
add
add
pop
call
and
or
mov
lahf
into
call
cmp
push
nop
or
sti
(bad)
xchg
adc
shl
jmp
das
lods
outs
xchg
dec
mov
sub
imul
or
call
jecxz
inc
in
mov
jne
push
pushf
push
sub
loope
dec
sar
fisttp
inc
scas
xchg
push
sbb
mov
test
cs
push
mov
in
cwde
outs
fild
mov
pcmpeqb
push
leave
add
jecxz
retf
cdq
(bad)
clc
mov
into
jno
iret
enter
mov
pop
mov
retf
cmp
jmp
or
call
cmp
mov
pop
adc
rcr
ja
fs
std
xchg
or
cmp
inc
mov
(bad)
xchg
dec
push
dec
popf
xchg
push
pop
jecxz
inc
aaa
adc
repz
mov
and
xchg
mov
rcl
fwait
and
hlt
(bad)
sub
dec
lds
hlt
pushf
(bad)
xchg
out
inc
pop
pop
fwait
sub
or
aam
inc
test
and
sbb
adc
xlat
retf
push
popa
sub
shl
icebp
mov
bnd
js
rcr
lahf
jo
push
jmp
int
cmp
cli
outs
xor
ss
jle
into
ss
js
shl
sbb
jmp
jb
xchg
sub
dec
stos
cli
sbb
pushf
cmp
sub
vshufps
adc
mov
push
inc
or
cmc
(bad)
mov
pop
jecxz
(bad)
jnp
and
xor
cli
fisttp
adc
and
jb
or
je
inc
pop
add
sbb
(bad)
mov
in
ucomiss
scas
or
jne
cmps
sub
(bad)
dec
and
jmp
es
repnz
dec
and
imul
ss
(bad)
inc
(bad)
test
ss
mov
aas
repnz
xchg
and
and
pop
push
in
hlt
jmp
xchg
jecxz
lods
xor
mov
cmp
inc
add
dec
sbb
xchg
add
ja
mov
dec
adc
add
nop
fidivr
scas
lods
cli
pushf
nop
jmp
xor
call
mov
leave
lea
ja
xor
aas
scas
ds
cmp
mov
repnz
aaa
jp
add
xlat
mov
mov
lods
in
fbld
pop
clc
ss
imul
inc
sub
jnp
mov
in
ja
stc
call
call
leave
jb
jne
(bad)
mov
lock
sbb
int
xchg
ja
push
xchg
cwde
test
lea
mov
test
mov
(bad)
nop
mov
int
xchg
arpl
pop
push
xchg
or
sti
(bad)
pop
xor
out
and
ret
jecxz
test
retf
daa
or
ss
je
sub
xchg
mov
mov
fiadd
and
shl
popa
mov
test
pop
sar
jb
out
arpl
mov
fmul
mov
cmp
cmp
jno
neg
adc
push
cmp
and
shl
arpl
les
sbb
dec
enter
stos
loop
push
push
punpcklbw
sbb
and
cmp
stc
aam
jg
icebp
lea
mov
popf
aaa
mov
test
mov
test
mov
sar
test
jb
jg
xor
les
movs
aas
(bad)
add
repz
daa
xchg
(bad)
adc
ret
pusha
mov
xchg
mov
ds
adc
inc
inc
add
or
cld
jo
sbb
scas
in
ss
mov
popf
dec
dec
out
mov
into
sub
ret
cmp
cld
js
cmp
or
cmp
mov
jns
cmp
in
mov
xor
aad
sub
ss
cmp
popf
mov
jns
xchg
adc
lods
rcr
popf
jp
cmps
rcr
je
jb
(bad)
sub
mov
cli
pop
mov
xor
loop
out
mov
clc
mov
add
repz
je
mov
call
leave
sbb
(bad)
cmps
in
adc
jno
loopne
mov
leave
fs
and
popf
cmps
dec
add
xchg
(bad)
fidiv
loope
mov
or
dec
(bad)
je
xchg
call
movs
rol
mov
dec
cmc
stc
cld
into
cld
popa
cmc
or
and
das
mov
sbb
inc
dec
mov
pushf
xchg
xor
es
and
push
lahf
mov
jno
(bad)
in
pop
xchg
xor
sub
arpl
sti
aam
adc
cmps
dec
scas
sti
xor
and
cdq
pop
sbb
mov
ror
mov
movs
jns
jb
mov
cmp
call
cmp
loope
pusha
add
or
xchg
mov
loope
(bad)
sbb
in
test
repz
out
cli
lds
mov
fidivr
ss
sub
test
popf
fsub
dec
jecxz
sub
rcl
add
adc
and
xchg
call
lds
cmp
jae
jmp
jne
mov
mov
scas
int3
scas
xchg
arpl
ja
mov
sbb
jle
sar
cmps
adc
outs
retf
adc
mov
mov
(bad)
movs
fstp
test
cli
inc
or
inc
sub
inc
push
aas
ja
(bad)
(bad)
(bad)
jl
mov
pushf
ins
cmps
sbb
and
lods
jns
mov
shl
sti
fnsave
xor
cmps
popa
adc
jge
or
push
jo
ror
(bad)
(bad)
aad
out
jno
in
dec
int
mov
(bad)
or
pop
jl
xchg
jb
sbb
mov
mov
xchg
and
push
cmp
imul
loope
mov
xchg
out
repnz
xor
ins
je
mov
jae
or
daa
es
pusha
mov
or
xlat
adc
xor
pop
adc
or
or
cmps
adc
outs
sar
pop
into
cmp
mov
jmp
adc
stos
push
inc
cmp
shl
dec
add
cmps
jge
aas
pop
(bad)
stc
or
cmp
dec
or
mov
aas
sub
mov
lds
xor
repz
xor
cmc
jnp
sbb
add
mov
mov
and
jns
mov
stc
loopne
pop
(bad)
xor
push
shl
cmp
lock
dec
in
into
cmp
mov
push
rol
pop
repnz
mov
cli
xchg
or
cmps
mov
out
adc
mov
call
xor
retf
scas
cmps
adc
pushf
jns
push
stos
jl
lahf
sub
imul
cmp
jg
fistp
mov
dec
xor
mov
xchg
sub
or
sub
repz
jo
dec
sbb
xchg
mov
jb
not
lds
mov
pop
pushf
sbb
jns
sub
pop
mov
jecxz
or
sub
sub
cmp
sub
sar
push
lea
mov
popf
aaa
mov
test
mov
test
mov
add
mov
add
mov
aas
je
ret
jl
xor
cld
mov
xchg
dec
cdq
cmp
dec
mov
loop
test
sbb
dec
pop
jae
pushf
push
in
inc
dec
in
push
xchg
mov
fld
jnp
add
arpl
jae
xor
xchg
add
aas
ss
jle
and
jecxz
popf
mov
lods
sub
inc
add
loope
add
loop
les
xchg
inc
pop
mov
ficom
ret
pop
xchg
(bad)
fsub
lock
sub
adc
in
jp
push
cmp
loope
call
jnp
popa
icebp
outs
pop
mov
js
arpl
add
mov
test
jmp
sub
rcr
movs
or
sub
cmp
mov
fimul
adc
mov
inc
xchg
and
mov
mov
(bad)
lods
xchg
cmp
call
pusha
mov
into
adc
int3
in
jmp
add
jg
sar
out
or
outs
mov
jmp
(bad)
xchg
jecxz
call
(bad)
cmp
retf
popf
test
inc
sar
jg
add
sub
loopne
mov
adc
pminsw
dec
sub
(bad)
mov
test
idiv
inc
test
cs
push
jb
xchg
jne
(bad)
ficom
leave
mov
push
or
std
call
adc
stos
mov
mov
pusha
stc
pop
adc
mov
(bad)
mov
inc
popf
imul
fimul
sbb
adc
mov
adc
cmc
es
or
mov
popa
mov
in
ins
addr16
test
sbb
aam
nop
mov
js
(bad)
fnstenv
push
cmps
mov
loopne
mov
gs
retf
dec
mov
cmp
pop
adc
cdq
xchg
out
jmp
sbb
data16
addr16
cli
sbb
inc
loop
or
xor
pop
cmp
jp
jns
pop
mov
xor
xchg
jle
dec
xlat
push
mov
mov
(bad)
fild
aad
in
les
xor
push
jg
mov
jo
cwde
pop
movs
sub
pop
loopne
shl
mov
cmp
bound
xor
xchg
test
xchg
loop
fiadd
adc
pop
aas
lock
fld
cmps
cli
sub
xor
push
movs
pop
pop
xchg
xchg
shr
daa
ins
sub
out
dec
clc
or
cmp
nop
aaa
es
or
inc
sbb
push
leave
ret
push
ret
jecxz
mov
cmc
sub
lahf
mov
and
in
or
jbe
call
push
cmc
mov
sar
xlat
(bad)
fsubr
pusha
or
shr
fidivr
dec
adc
cmp
nop
xor
and
xchg
pop
push
imul
mov
dec
push
addr16
inc
out
test
fwait
fs
push
and
fidivr
sub
es
xlat
push
les
mov
addr16
dec
out
scas
mov
sub
mov
add
(bad)
icebp
lahf
mov
xchg
mov
stc
jmp
or
cs
lods
(bad)
je
pop
lods
push
cwde
push
dec
sbb
mov
sbb
cli
aam
lock
aad
push
inc
and
ret
adc
enter
(bad)
or
xchg
shr
jmp
mov
xlat
pop
pop
loopne
cmp
push
fiadd
jo
outs
lahf
push
shl
add
push
cmps
outs
lods
loop
call
mov
adc
movs
data16
jns
xor
lahf
jmp
lds
test
or
cmp
sbb
ja
jle
pop
out
xchg
dec
mov
jns
in
lahf
inc
repz
add
ror
push
xlat
jmp
lods
div
adc
cmp
stc
sub
push
sub
mov
repnz
test
repz
jle
repz
add
mov
adc
push
mov
and
dec
xor
jnp
jp
(bad)
mov
icebp
test
mov
mov
mov
mov
mov
test
mov
test
ja
ret
jns
test
mov
cmp
mov
outs
dec
jno
pop
push
or
adc
pop
xchg
mov
sub
dec
sbb
mov
cmc
mov
push
mov
xchg
rol
sub
call
cmp
and
movs
retf
sbb
mov
jb
ja
lods
loop
cld
push
adc
in
xchg
and
push
inc
jmp
mov
pop
rcl
shr
pop
clc
fdiv
cmps
int
ja
imul
movs
pop
inc
fwait
mov
xchg
cmp
dec
retf
lds
aam
and
pop
out
jge
cwde
cmp
inc
jnp
call
mov
push
sahf
adc
dec
and
outs
xchg
xor
inc
mov
ds
xor
das
ror
push
xlat
mov
icebp
sbb
jp
(bad)
repz
cmp
cmc
cmp
cmp
push
xchg
sub
out
fild
jmp
xor
dec
(bad)
xchg
stos
clc
add
jg
xchg
push
inc
popf
add
and
lods
adc
xchg
(bad)
sbb
fiadd
mov
test
pop
xlat
fs
adc
fwait
cmp
cmp
mov
xchg
and
(bad)
es
cdq
push
sub
lahf
xor
mov
loope
jbe
xchg
xchg
test
stos
stc
ins
sub
sbb
mov
xchg
mov
sub
arpl
ds
mov
popa
pop
pop
cmps
test
sub
test
jle
cmps
mov
mov
or
mov
test
mov
inc
push
loope
repnz
shl
call
mov
mov
inc
psubb
into
arpl
pop
or
push
jno
scas
mov
sbb
jo
add
jbe
xchg
out
ficomp
mov
xchg
(bad)
shl
or
(bad)
in
sub
into
push
(bad)
gs
shl
scas
xor
popa
jb
inc
repnz
dec
test
pushf
imul
sub
xor
pop
call
jp
int
das
scas
jno
and
push
mov
lods
test
adc
pop
retf
mov
sar
jo
jne
push
mov
dec
or
mov
dec
sahf
int
icebp
dec
mov
xor
jbe
mov
loop
repnz
outs
jle
cmp
dec
adc
or
dec
dec
je
mov
push
inc
add
mov
mov
(bad)
mov
mov
cmps
pop
sub
mov
mov
sbb
icebp
or
mov
push
iret
sub
int
cld
(bad)
jle
add
outs
xor
das
imul
gs
mov
inc
(bad)
ret
xor
add
call
mov
daa
mov
sub
mov
add
cmps
scas
enter
xlat
jle
mov
popa
mov
mov
mov
xor
jbe
lea
and
cmps
add
add
mov
mov
movs
sbb
sbb
mov
outs
(bad)
outs
adc
push
scas
test
les
sbb
mov
mov
xor
int
mov
and
or
xchg
or
mov
cmp
dec
icebp
rcl
xchg
repnz
sub
jnp
sub
push
mov
std
out
sbb
mov
jno
les
stos
repz
sbb
das
scas
in
cmps
pop
aad
call
pop
ret
sahf
retf
aaa
call
pushf
(bad)
cmp
inc
xchg
or
(bad)
loop
ror
retf
push
inc
sub
sahf
mov
stc
jle
psadbw
daa
push
out
pushf
shl
mov
xchg
addr16
jo
aaa
xchg
adc
imul
(bad)
fdivr
and
out
xchg
jbe
(bad)
sub
mov
mov
ins
pusha
mov
xor
dec
gs
dec
shl
mov
mov
adc
add
cmc
in
cli
and
out
cmp
cmp
repz
(bad)
mov
into
push
xchg
pop
(bad)
cmps
sbb
enter
fidiv
sbb
out
mov
sbb
mov
sahf
and
leave
xchg
pop
and
mov
adc
adc
in
cmps
sub
fidivr
xor
add
scas
mov
and
push
xchg
imul
jmp
adc
and
shl
and
aaa
pop
scas
cmp
int
add
(bad)
jecxz
pop
push
rol
sub
aas
xchg
adc
rcl
mov
call
sbb
cld
sbb
out
leave
add
jns
xchg
stc
test
dec
hlt
hlt
push
add
in
data16
cmp
inc
fld
pop
mov
and
adc
or
inc
bound
aam
lahf
push
movs
pop
daa
je
stc
mov
xor
jmp
clc
enter
repz
and
xchg
mov
cmp
xor
pushf
cld
sbb
xor
arpl
fmul
loop
xchg
call
push
arpl
add
push
repnz
shr
rcl
shr
pop
sub
jecxz
adc
or
xor
mov
js
cmp
mov
hlt
scas
xor
popf
cmp
cmp
or
mov
mov
enter
xchg
lea
div
or
jmp
outs
frstor
mov
ins
xor
xchg
push
xchg
or
ror
mov
mov
add
sbb
inc
aaa
mov
adc
xor
xchg
push
mov
mov
mov
mov
retf
xor
sahf
mov
scas
mov
xchg
xor
cmps
jne
and
mov
fdivr
enter
cld
push
xor
sbb
mov
(bad)
mov
arpl
push
sbb
add
mov
mov
inc
push
xlat
popf
fisubr
mov
ss
jecxz
mov
test
in
int3
sub
(bad)
jmp
fwait
xchg
in
xchg
jmp
fwait
test
jge
aam
push
fwait
loope
push
adc
mov
ret
mov
dec
xchg
aaa
cs
movs
aam
dec
enter
inc
ret
ret
and
outs
sbb
sub
sbb
mov
jo
(bad)
loope
dec
or
in
push
out
loopne
sub
test
ficomp
push
loopne
test
inc
aad
pop
imul
sbb
add
sti
jp
clc
cmps
sar
es
test
xchg
cs
dec
add
ja
shr
inc
bnd
leave
sahf
mov
stc
(bad)
push
jmp
cmps
retf
jg
sbb
xor
pop
mov
ins
cld
out
dec
mov
jns
rol
nop
fadd
arpl
std
jnp
ss
mov
lds
adc
push
lods
daa
jnp
rep
cmc
jg
fist
mov
jbe
xor
call
mov
xchg
es
inc
or
outs
jne
fdivr
frstor
xor
xor
jo
repnz
pop
jb
test
sahf
pop
mov
mov
imul
je
mov
jmp
pop
std
cli
test
fst
inc
mov
or
adc
lods
call
adc
sub
xor
lock
add
repz
push
xchg
mov
out
je
stos
cmp
(bad)
push
push
retf
cmp
lock
fst
xor
mov
ins
sub
stc
cmp
mov
js
sbb
sub
dec
mov
(bad)
cmps
fcomp
push
push
mov
fs
mov
addr16
and
push
or
sub
add
sub
pop
mov
sahf
popf
pop
arpl
ja
sahf
jae
in
xor
outs
pop
inc
in
or
mov
ss
in
jmp
lock
or
mov
push
jno
sti
out
mov
mov
sbb
jl
push
shl
data16
pop
add
xchg
in
test
int
cmp
add
pop
enter
stc
das
or
xchg
scas
sub
add
add
movs
nop
repnz
xchg
adc
mov
add
adc
jbe
dec
add
(bad)
es
inc
push
cs
scas
mov
sbb
fcomi
sti
fimul
and
xchg
cmps
pop
mov
hlt
ins
sahf
das
or
sar
and
fmul
push
inc
dec
dec
pop
mov
pop
imul
fld
dec
mov
xchg
adc
das
push
imul
pop
push
test
gs
shl
and
add
rcr
xchg
mov
daa
xchg
fidiv
mov
jmp
pop
test
add
or
cmp
adc
enter
inc
mov
retf
pop
fisub
cmps
je
test
jmp
cmc
mov
popa
dec
jno
pop
es
or
dec
mov
or
mov
cmp
js
shl
sbb
js
stos
inc
aaa
add
mov
push
push
out
fwait
or
cmp
dec
cmp
push
ror
mov
repz
mov
into
adc
iret
dec
mov
jmp
jmp
jnp
in
aam
sub
sub
out
push
int3
dec
fidivr
aas
out
sub
pop
or
add
enter
std
sbb
jno
cmps
mov
lods
jbe
movs
jecxz
daa
sbb
mov
push
push
out
cwde
xchg
jne
add
push
retf
mov
sbb
dec
dec
xor
push
xchg
sbb
push
xor
lods
std
xlat
rol
mov
lods
call
mov
cmp
xchg
xchg
repz
fwait
int3
in
pusha
arpl
ja
aam
pusha
(bad)
pop
jge
call
jmp
call
stos
xchg
jmp
mov
gs
arpl
imul
aas
push
out
sub
sub
push
loop
and
repnz
mov
lock
fsubr
xor
or
add
addr16
cmp
dec
ret
retf
xchg
ss
add
and
or
push
es
lock
xor
add
stc
cwde
test
jne
stc
addr16
test
test
mov
nop
imul
mov
mov
in
mov
push
jb
test
pusha
xor
bound
arpl
jns
call
or
(bad)
pop
push
fcom
lock
popa
sub
or
pop
mov
adc
jg
sahf
add
and
push
cld
xchg
xchg
ins
jns
nop
in
in
ja
mov
cld
mov
add
lea
addr16
or
psrld
add
push
mov
fsubr
jmp
sar
arpl
sub
xchg
in
mov
sbb
add
sbb
cmp
in
out
inc
cmc
cmp
sbb
and
xor
fistp
sbb
lods
cmp
mov
and
xchg
pop
movs
(bad)
pop
inc
and
int
dec
scas
jmp
mov
xchg
jo
mov
rcr
ds
ret
xchg
pop
retf
test
mov
and
jge
sub
jno
or
xchg
mov
aaa
ja
mov
add
push
push
jae
pop
(bad)
xlat
xor
jmp
repz
das
cmps
mov
(bad)
rcr
fadd
imul
repz
sti
lods
cmc
xchg
daa
test
mov
jb
mov
jp
loope
out
mul
fiadd
ficom
rcr
xchg
out
clc
in
xor
aas
loopne
sbb
not
ret
daa
jb
push
mov
adc
(bad)
imul
ror
push
mov
adc
or
push
mov
movs
and
sub
add
xchg
call
sub
fisub
shl
jmp
or
test
mov
mov
jmp
add
loope
popf
adc
adc
loopne
adc
test
mov
xchg
test
xchg
adc
mov
add
or
push
or
add
inc
mov
inc
dec
jns
icebp
movs
jmp
add
ror
lods
(bad)
pop
adc
cmc
int
inc
popa
fnstcw
loop
push
neg
fiadd
jae
push
sbb
ret
and
out
sub
inc
mov
push
and
jl
out
jmp
outs
adc
mov
and
inc
and
inc
add
push
mov
call
shl
iret
jb
jbe
(bad)
dec
jp
dec
xchg
xchg
jno
and
test
repnz
mov
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
sub
jg
inc
aas
mov
add
mov
test
mov
test
mov
mov
stos
repnz
cmps
out
xchg
cmp
test
mov
test
mov
test
mov
xchg
aas
mov
push
cmp
mov
repnz
mov
retf
dec
xchg
xor
and
gs
sbb
sbb
into
cli
mov
outs
or
cmp
push
retf
adc
out
sub
xchg
lock
or
stos
pusha
lods
inc
jbe
ret
popf
gs
add
pop
mov
or
(bad)
jp
out
cmps
data16
pop
xchg
add
sbb
call
mov
fs
xchg
mov
call
es
add
in
mov
xchg
lods
jl
pop
push
movs
imul
pop
sub
mov
mov
or
popf
add
mov
fbstp
pop
add
arpl
ins
push
ins
pop
sbb
call
cmp
fstp
lock
and
dec
mov
add
outs
fcomp
xchg
mov
or
cmp
test
xchg
inc
push
inc
test
dec
loopne
cmp
fmul
sub
js
dec
movs
div
jp
mov
push
mov
pop
adc
fisttp
xor
inc
pushf
in
inc
lock
push
jecxz
int3
cmp
nop
push
ins
jg
pop
dec
pop
or
popf
or
pusha
popa
xchg
dec
(bad)
repz
mov
in
fild
push
sti
xchg
sub
fsubr
push
mov
pop
popa
arpl
int3
push
jp
mov
pop
(bad)
jne
dec
mov
pop
add
aad
sbb
ret
ins
adc
imul
faddp
mov
add
fwait
mov
jns
data16
addr16
mov
(bad)
ret
mul
dec
out
cmp
xchg
fld
push
ss
call
dec
aas
xor
jmp
out
xchg
lods
jae
in
jmp
outs
js
nop
(bad)
or
fiadd
jae
mov
aad
jnp
or
inc
imul
pop
mov
push
hlt
scas
adc
aam
loop
shl
arpl
hlt
jae
xchg
outs
mov
les
xor
js
int
xchg
xor
and
test
or
pusha
mov
in
dec
mov
inc
xor
push
je
(bad)
loopne
or
test
push
adc
push
mov
dec
inc
movs
pop
xor
push
(bad)
jmp
cmp
(bad)
jo
mov
lahf
xchg
(bad)
jle
dec
push
jnp
mov
sbb
imul
and
test
jl
(bad)
jmp
sbb
jb
push
out
sti
into
stos
inc
stos
lds
mov
add
sbb
jb
cmp
dec
cmp
repnz
das
mov
jmp
ss
sti
xor
cmp
out
cmp
test
iret
movs
loopne
inc
lds
fdivr
ret
jecxz
and
mov
sahf
mov
inc
fcomp
repnz
cmp
pop
sbb
lea
xchg
out
lods
shr
scas
pop
lods
dec
pop
dec
aaa
mov
neg
hlt
daa
add
mov
fsub
call
outs
pop
ins
sti
inc
popf
retf
jb
mov
(bad)
hlt
jp
out
sub
and
pop
xchg
fwait
mov
nop
imul
popa
adc
inc
jmp
into
adc
xchg
sub
sub
adc
mov
mov
iret
cmp
mov
inc
test
inc
ret
push
stos
shr
(bad)
sar
and
scas
xor
sbb
jns
pcmpeqd
test
lods
mov
stc
fst
adc
xchg
sti
inc
sahf
xor
jae
push
(bad)
repz
retf
fldcw
lock
repz
ins
out
push
ret
push
mov
jg
xor
pop
xchg
out
sahf
cmp
daa
dec
xchg
jmp
fnstcw
je
aaa
sbb
xchg
jg
outs
in
and
xor
inc
pop
add
or
cmp
pop
loopne
(bad)
mov
inc
rcr
add
add
sbb
push
mov
sub
es
cld
out
sbb
mov
bound
lods
and
mov
out
sbb
push
rcl
in
xor
dec
mov
cmp
aas
ds
mov
mov
and
sti
push
sbb
mov
pop
dec
aaa
push
or
mov
jl
jo
icebp
xchg
imul
(bad)
fdivr
pushf
int
jge
fisttp
mov
sub
dec
xchg
xchg
arpl
sub
jl
fisubr
iret
in
xor
xchg
dec
push
test
or
and
and
and
jge
adc
fwait
mov
fst
out
fisttp
inc
movs
in
call
xchg
inc
(bad)
sbb
jp
pop
cli
sahf
es
mov
loopne
jmp
inc
mov
inc
xchg
mov
fdiv
pop
and
adc
and
or
push
or
shl
jmp
or
ret
ins
pop
push
xchg
loope
mov
push
lock
imul
mov
repnz
sbb
mov
addr16
cmp
xor
outs
cmp
cmp
imul
stos
ret
shr
ret
xor
xchg
dec
pop
fidivr
and
int3
imul
je
shr
or
les
cmp
cli
pop
adc
cmc
aad
arpl
mov
cld
out
imul
fdiv
mov
adc
mov
addr16
xlat
stos
clc
pop
movs
shr
xchg
or
pop
outs
(bad)
mov
jmp
jecxz
aad
mov
xor
sub
push
xchg
jo
aam
sub
leave
jl
stos
stc
add
jns
jp
mov
fs
sub
(bad)
clc
add
add
into
scas
xchg
jo
xor
fs
dec
movs
sbb
inc
inc
js
xor
push
add
scas
idiv
enter
sahf
pop
jp
pop
adc
adc
shr
loopne
xchg
jmp
jbe
mov
(bad)
dec
icebp
sub
aaa
mov
xchg
xor
inc
aaa
mov
xchg
mov
ja
or
jae
cmp
mov
movs
aas
(bad)
add
mov
add
dec
mov
ret
stos
loopne
jp
push
jmp
pop
loope
mov
ins
call
stc
popf
(bad)
cmp
in
add
xor
imul
das
lahf
into
shl
js
xchg
ins
out
mov
ret
xor
loope
mov
test
add
pusha
jle
xor
mov
shl
pushf
jg
and
inc
pop
mov
lea
jae
dec
cwde
out
cwde
cmps
dec
cs
sbb
fist
outs
mov
add
ds
jmp
(bad)
and
(bad)
hlt
inc
fptan
pop
je
jmp
cmp
adc
je
stc
mov
sar
mov
cmp
jns
fisub
push
imul
push
int
jbe
cmp
leave
in
xchg
push
sbb
adc
fdiv
xchg
xor
mov
and
(bad)
sub
and
mov
cwde
jp
int
ins
jno
imul
and
pop
shl
stos
jmp
fwait
int3
imul
jne
stos
std
cmp
imul
mov
and
or
add
or
test
mov
out
(bad)
jns
leave
or
ficom
fadd
lds
inc
fwait
js
dec
add
retf
retf
push
jne
adc
mov
pop
ins
mov
hlt
fcomp
fstp
stos
in
xlat
adc
iret
aas
pop
or
inc
adc
jne
(bad)
out
sbb
push
sbb
loope
test
fbld
fwait
pop
jno
dec
data16
js
dec
add
nop
dec
xlat
mov
xor
xor
xchg
jp
cs
jge
je
dec
sub
sub
stos
mov
loop
je
xor
data16
adc
xchg
pop
push
loop
mov
sar
loope
sahf
stos
(bad)
cli
push
ficomp
and
sbb
sbb
or
sbb
sbb
adc
push
dec
or
xlat
push
xor
sub
or
(bad)
mov
popa
(bad)
in
sbb
push
ret
sbb
xor
or
xor
fistp
xchg
cdq
and
ficom
loop
cld
(bad)
loop
inc
sbb
push
jo
pushf
xor
test
bound
mov
out
(bad)
cmps
mov
cld
clc
jbe
inc
push
sbb
or
stc
pop
daa
out
pop
dec
or
dec
mov
jg
jne
push
dec
jnp
mov
or
mov
fcmovnu
or
div
stc
xchg
jmp
adc
popa
pop
nop
mov
rol
mov
jle
sti
dec
loope
xor
repnz
mov
test
cmps
repnz
mov
shl
leave
das
ss
cmp
sti
mov
aas
jp
xor
sar
mov
adc
dec
icebp
movs
fld
xchg
mov
push
cmp
mov
inc
imul
in
lods
cwde
scas
and
arpl
hlt
or
int3
inc
pop
or
rcr
inc
das
in
push
loope
xlat
dec
cli
pop
sub
adc
rcr
popa
dec
push
test
cwde
mov
out
rcl
loope
jmp
hlt
dec
loopne
push
loop
mov
xor
or
sub
xlat
out
adc
inc
push
test
mov
(bad)
mov
in
(bad)
and
dec
dec
cwde
lahf
out
aad
jp
pop
push
mov
cmp
mov
and
test
dec
test
mov
pop
(bad)
sbb
lea
or
ins
sub
in
pop
retf
dec
pop
jbe
dec
jecxz
dec
lds
mov
mov
xchg
mov
fistp
sar
(bad)
lock
test
mov
mov
push
das
aam
imul
in
daa
mov
test
mov
outs
dec
inc
pop
dec
stc
das
call
mov
adc
and
sub
iret
fldenv
fsub
or
mov
inc
or
(bad)
rol
nop
adc
mov
dec
out
and
in
clc
or
fld
in
push
test
and
adc
add
pushf
fxch
sub
xchg
mov
in
lea
push
inc
in
(bad)
lock
mov
sbb
std
ss
adc
push
in
ins
jbe
pop
pop
inc
ret
cmp
sahf
push
jb
iret
mov
inc
outs
shl
test
xchg
jge
call
in
or
sub
and
stc
mov
hlt
movs
jbe
scas
mov
movs
mov
call
es
lods
in
outs
xor
and
adc
adc
sub
xchg
pop
(bad)
out
ja
aas
mov
jle
cmp
in
mov
iret
xor
in
ja
or
retf
movs
ror
cmps
push
popf
cwde
fist
shr
hlt
mov
dec
int
adc
movs
addr16
mov
rol
fnstsw
pop
imul
test
mov
push
xchg
(bad)
pop
cmps
out
fsubr
(bad)
pop
push
std
jne
iret
and
call
jecxz
dec
in
pushf
aam
into
pop
xchg
imul
push
popa
(bad)
dec
icebp
outs
in
sbb
sbb
mov
enter
mov
cmp
in
xor
jnp
sar
xchg
mov
sub
pop
out
jnp
or
repnz
cdq
(bad)
push
pop
jp
movs
int3
jno
sbb
xchg
pop
jbe
stos
pop
pushf
shr
scas
push
fsubr
sub
gs
pop
jmp
jle
out
jecxz
pop
lods
sti
dec
clc
scas
pop
xor
push
fneni(8087
pop
mov
dec
xchg
shl
jmp
popf
xchg
adc
jbe
fisttp
mov
fwait
stc
xor
data16
pop
cmc
ins
mov
xchg
icebp
addr16
mov
inc
pop
mov
mov
out
mov
mov
pop
push
pushf
fild
pop
stos
xor
pop
sti
popf
and
sbb
cld
pop
cmp
fidiv
repnz
add
imul
ins
icebp
sub
sub
les
rcl
test
cs
mov
mov
adc
std
les
add
mov
arpl
repz
inc
dec
jmp
(bad)
lock
push
aam
cmp
ror
push
jb
mov
cmc
ins
in
or
xchg
add
sub
mov
adc
mov
outs
rcl
cwde
aad
mov
xchg
lock
cmp
cmp
test
loope
aas
repnz
sub
out
test
cmps
repnz
mov
xchg
jae
mov
push
mov
aad
mul
int3
ds
ret
hlt
or
jg
push
jae
je
scas
mov
and
mov
inc
and
cli
es
cdq
jne
jbe
inc
dec
jmp
pop
jmp
leave
xchg
aas
test
into
mov
jne
adc
push
out
mov
ss
and
inc
push
xor
push
leave
ror
sbb
inc
xchg
loop
lahf
iret
pusha
es
xchg
mov
jns
pushf
mov
mov
inc
iret
je
iret
push
call
mov
cmp
ja
pushf
pop
call
sub
push
inc
xchg
in
dec
hlt
pop
push
hlt
fnstenv
push
pop
ja
push
(bad)
xor
lahf
adc
jns
fisttp
inc
and
scas
cmps
xchg
jno
test
out
push
retf
adc
pop
in
jecxz
es
out
add
jle
arpl
mov
mov
push
pop
cmp
das
out
or
lea
mov
loopne
inc
(bad)
jle
adc
pop
outs
shl
or
or
inc
movs
and
jmp
pop
out
xor
movups
xchg
jg
aaa
xchg
jg
fcmovnbe
lock
mov
je
clc
cmp
sub
or
sbb
test
(bad)
mov
or
or
fldenv
rcl
fbstp
adc
pusha
jecxz
xchg
lds
or
lods
inc
pop
mov
push
cmp
push
sbb
push
test
sub
push
mov
aas
cmps
test
push
(bad)
iret
lds
popa
test
ds
push
jo
aaa
cmc
push
mov
or
jnp
not
sbb
mov
and
pop
imul
sbb
rcr
mov
inc
ds
mov
pop
mov
add
or
mov
or
push
aam
stc
pop
loopne
and
ret
out
ficomp
popf
add
les
sub
(bad)
out
push
sahf
test
(bad)
push
sub
ret
inc
sub
cmps
addr16
inc
dec
repnz
aas
push
add
fs
mov
ss
push
mov
xchg
mov
sbb
(bad)
jmp
test
sub
xchg
mov
cmps
jecxz
clc
jae
pushf
fadd
shl
jae
hlt
es
jl
pusha
mov
movs
lods
nop
fisubr
add
jge
jbe
sub
cmp
clc
dec
fs
data16
lea
imul
fcomp
push
arpl
jne
bound
sbb
sbb
sub
aas
ror
xchg
cmps
or
and
ret
sub
mov
into
pop
das
jmp
sbb
inc
push
mov
lock
xchg
jecxz
push
add
dec
adc
mov
push
mov
jge
xchg
aad
or
addr16
fstp
inc
icebp
fisttp
popa
mov
push
movs
xchg
jge
push
cmps
jns
jne
inc
cmp
adc
fisubr
out
mov
mov
ret
sub
mov
xor
arpl
pop
pusha
pushw
mov
enter
stos
jnp
ds
mov
add
lods
jmp
pop
push
call
sub
aas
cwde
xor
movs
les
dec
sbb
mov
pop
adc
jge
movs
jl
or
ror
xor
xchg
xchg
data16
leave
inc
and
add
or
dec
outs
add
jo
ret
push
adc
cmp
jge
dec
fld
mov
aaa
dec
cdq
int
sbb
mov
or
lahf
xor
cmc
dec
push
call
lock
das
mov
or
or
popa
or
push
ss
jp
sub
sbb
xor
lods
pop
unpcklps
cmp
ins
cmp
fwait
dec
in
mov
dec
mov
icebp
jmp
mov
jns
sub
jmp
add
jmp
jb
sub
repnz
jne
mov
rcr
shl
xlat
call
or
xchg
jbe
xchg
stos
inc
in
pop
sub
mov
pop
fcom
add
or
lahf
aad
popf
push
rcl
add
sti
jmp
aaa
push
add
and
les
xor
pushf
popf
aam
jmp
mov
xor
cmp
out
cs
fs
xor
movs
add
mov
lock
les
pushf
jmp
in
push
jge
inc
pop
rcl
mov
shl
jnp
adc
fdivr
sbb
lea
aaa
popf
inc
mov
push
repnz
or
xlat
rcl
sub
rol
or
sahf
cld
shl
inc
addr16
(bad)
mov
jecxz
test
aaa
dec
daa
and
les
xchg
call
jb
pusha
clc
nop
lock
movs
lahf
lods
clc
in
lea
shl
test
std
in
mov
cmp
shr
inc
xchg
push
lods
xor
ins
cmps
in
jmp
or
sahf
dec
cwde
loopne
inc
xchg
push
ficom
mov
xchg
mov
fstp
jb
(bad)
cmp
adc
inc
repz
movs
bnd
(bad)
je
mov
sub
xchg
xchg
sub
loop
(bad)
cmp
test
or
cmp
jno
xchg
mov
inc
loop
cmp
hlt
jge
push
mov
or
inc
dec
mov
inc
shr
adc
aas
pop
daa
mov
mov
int3
dec
push
sbb
fnstsw
inc
push
out
cmc
adc
mov
scas
shl
mov
in
push
adc
add
push
mov
sub
inc
std
mov
call
fisubr
out
and
adc
cmc
lahf
ffree
aad
dec
xchg
arpl
int
(bad)
shr
loop
and
jmp
fisttp
ret
dec
lea
pop
idiv
and
jns
pop
not
ret
cmc
sbb
ins
cmp
and
mov
fadd
sub
and
xor
jge
pushf
adc
jecxz
dec
loop
pop
popf
pop
out
and
clc
push
mov
dec
out
cmp
(bad)
ins
cld
jnp
call
retf
jp
add
add
in
popf
xchg
out
jno
sbb
iret
mov
adc
inc
jecxz
fwait
push
mov
daa
dec
jg
(bad)
retf
fild
dec
add
sahf
push
aaa
(bad)
mov
call
repz
in
xor
int
stos
in
(bad)
icebp
jnp
pop
inc
mov
add
ficom
or
or
loope
pop
in
mov
jle
mov
popf
mov
stos
jg
(bad)
push
or
adc
dec
lods
jmp
xchg
cmps
nop
cwde
aam
inc
stos
jae
unpcklps
cmp
or
int
cmp
jl
sar
cli
(bad)
cmc
and
and
nop
mov
fldcw
fnstsw
sbb
into
fbstp
mov
(bad)
stc
add
push
push
pop
jnp
cmp
and
jp
lahf
dec
jl
test
nop
movs
dec
ror
pop
and
addr16
xor
push
popa
xlat
cmp
jnp
or
push
or
cmps
sub
cmp
push
imul
shr
push
mov
nop
xchg
sbb
dec
push
or
fcomp
(bad)
push
push
push
fnsetpm(287
mov
sub
ja
push
dec
sub
mov
jno
nop
std
jmp
test
fldenv
dec
int3
push
std
jmp
sub
jecxz
xchg
adc
jbe
adc
and
adc
icebp
cld
cmp
pushf
movs
(bad)
(bad)
fistp
clc
push
test
inc
ja
add
jecxz
fist
jle
add
mov
xor
jmp
pop
(bad)
xor
sbb
jp
aaa
rcr
cmps
mov
jb
retf
sub
popa
inc
and
arpl
int3
mov
mov
out
jg
out
xor
adc
xchg
repz
scas
pop
outs
push
into
push
mov
cmp
jl
(bad)
mov
stos
adc
repnz
icebp
rol
xchg
and
fldenv
cmp
leave
movs
push
fnsave
repnz
dec
icebp
jge
push
sub
repnz
jno
xor
in
xor
dec
int
movs
imul
push
fistp
push
(bad)
cld
repz
jno
test
dec
or
dec
push
and
adc
jne
sub
or
int3
sbb
stos
repnz
ss
xchg
rol
outs
(bad)
cmp
pop
inc
rcr
ficomp
adc
add
out
push
add
js
std
dec
dec
fimul
imul
mov
cmp
icebp
stc
bnd
push
mov
jnp
pop
es
push
into
pop
adc
(bad)
in
add
hlt
jmp
icebp
sub
mov
cmp
mov
test
ja
ret
mov
jne
add
xor
cmp
mov
jg
inc
and
sbb
jns
out
scas
push
jmp
rol
jmp
movs
ja
add
jae
fsubr
fstp
inc
in
jle
(bad)
mov
sub
int3
out
not
icebp
pop
adc
mov
fisttp
pop
dec
sbb
adc
sub
pusha
mov
fcmovnb
jecxz
aad
push
loopne
jge
sbb
pop
mov
xor
push
pop
cmp
loopne
loop
movs
and
pop
cmp
mov
cwde
xchg
movs
(bad)
mov
adc
xlat
sbb
lods
(bad)
ins
mov
add
mov
mov
fnstenv
in
pop
rcl
outs
mov
in
fisubr
(bad)
loopne
inc
dec
mov
pop
mov
mov
inc
ins
shr
add
cmp
mov
add
jp
in
and
test
pusha
or
sub
jae
lods
out
loopne
mov
aam
jb
mov
pop
push
add
xor
and
pop
(bad)
ins
inc
adc
push
ins
punpckhbw
fcmovne
or
pop
jnp
loop
add
gs
call
mov
loope
mov
mov
aas
leave
xor
dec
pop
pop
push
jecxz
pusha
addr16
out
sbb
xchg
leave
loopne
nop
xchg
(bad)
in
sti
mov
int3
sbb
and
bound
add
inc
jl
mov
mov
mov
push
in
loopne
out
and
pop
mov
pop
jb
rep
cdq
test
icebp
inc
ss
dec
mov
ret
(bad)
icebp
stc
(bad)
in
pop
and
mov
outs
push
scas
retf
movs
push
sub
jmp
inc
in
cld
pop
cmc
je
ja
xchg
loop
dec
ret
jmp
in
fimul
sub
and
sbb
lahf
adc
dec
mov
sub
(bad)
jp
and
fiadd
add
(bad)
xchg
sub
movs
inc
push
lock
mov
(bad)
mov
xor
jle
fs
call
add
in
ins
inc
adc
std
dec
sub
fisub
ret
dec
sbb
les
push
iret
rol
inc
adc
jp
mov
(bad)
jno
mov
mov
inc
pusha
xchg
jmp
and
adc
mov
sub
cmp
rol
sbb
inc
outs
pop
fist
sbb
push
pop
int3
mov
test
call
fbld
cld
sub
sbb
inc
cmp
or
int3
cmps
lock
ds
mov
repz
not
aam
mov
pusha
and
fbstp
add
push
jg
int
xor
mov
stos
mov
icebp
or
gs
push
dec
xor
mov
mov
arpl
cwde
sbb
fdivr
xchg
push
xchg
and
jg
mov
aam
and
mov
mov
pop
sti
xor
outs
test
adc
add
shr
out
dec
lds
cmc
mov
clc
dec
dec
mov
jns
mov
out
push
adc
jmp
push
push
or
stos
shr
adc
test
xchg
jl
retf
xor
aas
cmp
leave
mov
add
arpl
in
sub
clc
jmp
cld
push
add
ror
sub
adc
pusha
cwde
sub
fstp
jmp
pop
and
stos
mov
gs
std
sbb
xchg
outs
or
and
and
adc
enter
dec
rcl
adc
cmp
retf
enter
xor
fimul
adc
lods
fidivr
retf
mov
xchg
test
lods
(bad)
mov
les
and
xchg
jne
pop
and
cmp
push
cmp
mov
mov
iret
outs
or
fld
pop
das
mov
es
cmp
lods
and
mov
(bad)
test
dec
or
mov
push
inc
dec
adc
in
cs
call
pop
aam
fsubr
lods
fimul
inc
xlat
xchg
adc
mov
sbb
cs
nop
stos
pop
scas
ret
jmp
jns
mov
fisubr
test
sub
push
inc
fild
mov
int3
mov
sub
mov
(bad)
jmp
shl
pop
sub
add
xor
int3
lods
mov
lea
mov
sbb
jne
xchg
xlat
sub
hlt
sub
aam
jnp
and
in
test
lds
xchg
rcl
lods
loope
outs
mov
arpl
mov
call
xor
fsub
dec
imul
xor
xor
stc
cld
leave
or
and
movs
pop
push
push
push
mov
mov
js
loopne
add
inc
aam
xchg
cmp
dec
push
sar
mov
sbb
jo
adc
inc
mov
mov
sub
cmc
jmp
cmp
and
sub
cmp
aad
push
sbb
cld
inc
cmp
test
retf
mov
ror
dec
int
test
test
(bad)
jmp
add
pushf
cmp
(bad)
xlat
add
and
out
push
aaa
test
sbb
sbb
xor
adc
adc
inc
inc
cwde
inc
pushf
sbb
push
adc
das
sbb
fstp
sbb
xchg
aas
inc
mov
adc
and
lods
fmul
jmp
mov
xchg
mov
and
mov
ret
fldenv
gs
sub
sub
inc
mov
xchg
popa
push
mov
cmp
mov
mov
jmp
(bad)
lahf
and
mov
enter
fwait
mul
xor
mov
fsubr
leave
(bad)
mov
imul
pop
bnd
push
push
mov
ret
dec
in
xchg
ja
adc
adc
popf
jg
not
and
or
push
add
push
sub
scas
les
pop
addr16
xlat
rol
daa
cmp
repnz
adc
mov
call
fadd
pop
fiadd
sub
out
ret
imul
cmp
mov
jae
lea
jo
xchg
push
push
rol
mov
or
push
adc
inc
cmp
jbe
hlt
mov
xor
jns
inc
xor
xchg
in
sbb
jl
or
lods
mov
stos
cmps
sahf
sub
sti
cdq
outs
cmc
ret
jle
out
fcmovb
popf
fnstsw
mov
mov
mov
test
mov
test
bnd
mov
test
es
pop
adc
mov
(bad)
mov
fucomp
jmp
inc
mov
mov
cmp
repnz
and
xor
xchg
mov
cwde
ds
xor
sbb
jmp
sbb
add
popf
out
jecxz
imul
push
gs
out
push
int
dec
loopne
cmp
retf
jp
add
mov
test
mov
xchg
div
lea
mov
inc
jg
test
repz
cmp
je
push
jne
xor
mov
cmps
xor
push
out
rol
pop
out
movs
ja
lods
mov
ret
stos
sub
add
aas
(bad)
xchg
ret
addr16
scas
shr
lock
jo
add
mov
push
mov
out
dec
dec
mov
shr
pop
jo
fld
mov
retf
sub
and
pop
mov
sahf
xchg
out
lock
adc
xlat
loop
mov
and
xor
adc
cli
call
sub
sbb
sub
jp
jle
dec
xor
in
dec
les
jnp
cli
fiadd
aas
cmp
xchg
cmp
movs
sub
and
jns
retf
clc
fsubr
ret
call
ret
das
(bad)
div
mov
mov
test
int
push
push
push
rol
push
or
adc
cmps
pop
lods
or
test
mov
cmp
or
sbb
mov
sar
cmps
pop
and
sti
das
dec
jb
mov
cdq
cmps
loop
sub
ss
das
mov
mov
(bad)
jecxz
fwait
or
or
cli
adc
pop
ds
aam
lahf
dec
test
dec
xchg
jnp
cmp
sub
test
xchg
and
push
push
push
scas
mov
or
mov
jp
sub
push
jge
cmp
mov
pop
inc
fs
les
(bad)
loop
push
aas
xor
dec
fistp
rcr
ins
outs
mov
popf
mov
ins
mov
sub
adc
xor
jmp
sub
dec
cmps
cwde
retf
int
push
mov
mov
fisubr
pop
sub
xchg
test
fcmovnbe
gs
shr
inc
xchg
shl
outs
shl
cmp
mov
add
sar
and
(bad)
neg
and
mov
cmps
pop
dec
xchg
call
outs
test
arpl
and
inc
pop
jg
xchg
inc
(bad)
jnp
mov
pop
aaa
test
sub
daa
mov
xchg
xchg
adc
lock
cdq
inc
xchg
xchg
out
loop
push
les
mov
jp
xchg
jg
out
mov
fwait
push
retf
int
mov
pop
fwait
xor
mov
jb
mov
jge
hlt
cld
add
sub
rcr
ss
cmp
out
jne
xchg
cmp
cmp
mov
test
mov
inc
aas
div
jp
ja
stc
mov
cmp
cld
jno
xchg
dec
cdq
cmp
dec
mov
fld
adc
hlt
retf
mov
(bad)
sar
xchg
mov
mov
(bad)
shl
das
mul
mov
fwait
jo
sbb
stc
test
outs
pusha
addr16
stc
sub
mov
cmps
cdq
rcl
ds
aaa
adc
push
(bad)
mov
fwait
popa
fbstp
lock
add
cli
mov
jle
or
repz
fild
mov
or
sub
xchg
rcr
fst
arpl
sbb
xchg
and
cdq
mov
mov
jmp
ficomp
push
dec
(bad)
scas
add
inc
stc
das
mov
sbb
and
mov
sub
jne
mov
dec
sbb
pop
xor
ror
mov
sbb
and
xor
nop
sbb
mov
ss
fdivp
dec
xchg
sub
cmp
js
ins
out
xchg
xchg
cs
cdq
mov
enter
outs
fninit
push
push
pop
ret
mov
mov
push
retf
and
xchg
or
ins
adc
add
sbb
into
pop
into
mov
sbb
fild
in
mov
lahf
pop
dec
shl
movs
int3
or
jle
fs
rcr
stos
mov
dec
fs
loope
adc
in
or
iret
lds
fsubr
add
jnp
dec
dec
pop
or
ficomp
xchg
add
les
fnstenv
sar
push
call
pop
xchg
shr
scas
inc
jge
(bad)
adc
push
xor
fcmove
out
cmp
pop
inc
nop
icebp
rcr
xchg
cmps
or
xchg
xor
data16
push
outs
clc
clc
jb
mov
mov
hlt
xor
mov
in
mov
mov
in
pop
mov
xor
cmp
xchg
std
out
pushf
fcmovu
push
and
sar
mov
xchg
ins
cdq
jmp
addr16
dec
cwde
jmp
cmp
outs
(bad)
cmp
and
cmp
je
sahf
ror
(bad)
add
pop
lods
mov
loopne
lock
xchg
xor
push
cmp
xlat
sub
in
jmp
adc
mov
add
call
sbb
sub
mov
retf
pop
add
(bad)
mov
not
repnz
xor
jg
adc
xchg
jp
add
xchg
nop
in
fcomp
jne
cmp
mov
out
jnp
add
adc
call
inc
ja
mov
aas
mov
test
nop
fidivr
jbe
or
and
ds
lock
cmp
fs
popf
ins
retf
mov
or
pop
int3
and
gs
mov
mov
out
mov
cmp
sub
sahf
mov
push
sub
jmp
jnp
jnp
or
icebp
add
call
xchg
cmp
cmp
mov
xchg
aaa
mov
test
mov
inc
ds
ja
std
hlt
mov
clc
mov
js
jno
cmp
mov
fcomp
in
jb
retf
jp
push
and
pop
pushf
sub
cmp
jmp
mov
cmp
int
and
mov
fcompp
jns
dec
scas
js
mov
cmc
fldenv
jge
cmp
rcr
cmp
cwde
(bad)
cmp
stc
push
pop
jl
sar
dec
jmp
mov
cld
xor
aaa
sub
loopne
shl
add
sbb
cmp
mov
cmps
scas
push
fsubr
in
in
dec
pop
push
dec
dec
shl
pop
aam
add
adc
inc
xor
xlat
xor
popa
popf
arpl
push
inc
mov
data16
cmps
shl
or
(bad)
sub
mov
and
test
ins
and
xchg
test
push
push
mov
xlat
fmul
sbb
(bad)
and
push
sub
jb
sub
ins
jmp
xchg
retf
adc
enter
add
cmp
iret
mov
jae
cld
mov
jne
inc
mov
pop
fsub
int3
into
mov
push
cmp
call
mov
jnp
xchg
mov
cmp
xchg
(bad)
fstp
test
popf
enter
lds
adc
enter
mov
test
adc
sti
lods
pop
or
sbb
in
add
out
mov
dec
mov
push
mov
shl
mov
cwde
fcom
adc
xchg
shl
leave
enter
rcr
pop
xlat
pop
dec
pop
add
mov
cmps
and
fild
inc
mov
arpl
stc
jmp
sti
std
retf
nop
cmp
lock
jnp
push
mov
adc
mov
and
mov
ins
add
add
and
ror
sub
push
mov
ror
cmps
add
jo
(bad)
xlat
pop
dec
xor
cmp
loop
aam
adc
clc
adc
adc
mov
push
shr
retf
add
xchg
pushf
aaa
xor
ja
sub
dec
or
cmp
xchg
push
and
and
mov
push
xor
mov
mov
lock
rol
pushf
movs
inc
imul
jbe
mov
inc
ins
and
mov
cmc
or
sub
mov
repz
and
gs
std
sub
pusha
sub
inc
xor
sub
mov
popa
jp
sub
pusha
ds
cld
dec
jecxz
enter
pop
aad
sahf
sbb
sbb
adc
xchg
inc
xchg
pop
xor
push
ins
ds
loope
adc
and
adc
lods
call
dec
xor
lahf
pop
cwde
pop
ins
or
sub
rcr
call
fbstp
fdiv
jae
daa
sub
and
adc
out
push
or
call
mov
int3
test
addr16
sbb
mov
inc
cmps
rcl
ins
aaa
push
inc
lods
cmps
(bad)
cmp
cmp
(bad)
mov
mov
mov
pop
push
mov
test
into
jno
ret
dec
stos
add
hlt
xchg
xor
sbb
push
mov
nop
ins
fnstcw
std
lods
sbb
mov
(bad)
adc
xchg
(bad)
fwait
sbb
mov
push
cmp
aad
lds
inc
retf
ds
pop
pop
cmp
iret
sbb
cli
shr
das
cmp
dec
add
mov
aad
jmp
into
cmp
popf
loopne
bound
pop
dec
push
out
pushf
dec
enter
fimul
inc
xchg
pop
or
add
xor
sbb
iret
jp
jmp
scas
mov
int3
mov
je
pop
mov
clc
out
cmp
add
retf
mov
adc
xor
(bad)
aad
mov
adc
mov
sub
pop
or
push
mov
jge
fild
shl
xchg
and
jae
call
popa
es
loop
or
mov
push
int3
shr
lods
inc
mov
and
xchg
jns
test
mov
in
mov
(bad)
and
jl
push
xchg
xor
sbb
push
sub
sti
xor
pusha
ins
les
movs
mov
dec
sahf
lods
ja
jo
xchg
push
pop
jp
cmc
daa
mov
xchg
in
(bad)
lods
or
and
pushf
jp
loopne
push
loopne
push
leave
and
(bad)
out
cs
mov
push
adc
pop
repz
push
cmp
jl
jae
push
and
or
adc
lods
lds
sbb
xor
sbb
out
data16
jns
(bad)
mov
outs
add
(bad)
inc
fstp
scas
jno
cwde
ja
xor
xchg
aas
sahf
adc
cdq
cdq
out
push
add
(bad)
mov
shl
sbb
cdq
and
cs
aam
mov
mov
jne
add
outs
mov
enter
sbb
push
adc
sbb
mov
inc
inc
hlt
fiadd
dec
cli
ret
dec
pushf
sbb
iret
call
push
ja
and
pop
stc
imul
xchg
add
repz
nop
cmps
mov
mov
outs
xchg
(bad)
xchg
push
or
rcr
xor
pusha
push
push
sub
or
jb
dec
and
xor
and
fcomip
xchg
sbb
pushf
and
aam
out
out
jmp
add
loope
ret
mov
xchg
push
mov
aad
mov
out
dec
sahf
sbb
daa
mov
and
cli
inc
jmp
mov
or
lods
std
dec
or
pop
mov
loop
sbb
xor
push
in
push
mov
in
jge
mov
inc
mov
adc
clc
mov
xchg
sbb
push
push
push
inc
das
jb
fldcw
scas
scas
test
xor
aam
mov
add
jge
push
sub
jb
loopne
adc
add
aaa
enter
ins
push
loop
pop
es
mov
mov
fucom
leave
cmp
jno
push
xchg
ret
cmps
test
push
loope
pop
movs
pop
adc
and
mov
and
mov
int
sar
adc
aaa
jp
movs
mov
pop
pop
lea
cdq
xor
int3
outs
les
jle
jne
addr16
push
test
mov
mov
jmp
inc
call
cmc
leave
test
cli
mov
add
cmp
jle
pop
repnz
cld
dec
icebp
inc
add
data16
sub
es
xor
ret
fsubr
es
dec
xlat
xor
pop
outs
jge
neg
in
and
popf
pop
into
call
aam
ss
xchg
pushf
xchg
fimul
adc
adc
sub
(bad)
mov
cmp
mov
jnp
and
jg
sub
fld
aaa
mov
dec
test
rol
mov
and
test
fwait
arpl
in
pop
ss
movs
or
repz
push
cdq
fs
mov
inc
jmp
pushf
mov
addr16
mov
mov
movs
mov
jmp
cmp
xor
sub
sbb
pusha
mul
inc
daa
movs
dec
pop
hlt
and
std
cmp
xchg
int
cmp
jo
mov
rol
in
sub
movs
sub
outs
dec
inc
int
xchg
mov
xor
ds
jl
add
cmps
aad
cmp
pop
movs
push
jo
setns
hlt
cmp
push
mov
cwde
and
nop
in
mov
fldenv
shl
mov
out
fld
scas
xchg
dec
sub
je
hlt
inc
push
jg
sbb
mov
xor
stos
and
or
mov
sub
outs
and
push
cmp
jnp
gs
jns
xor
and
xor
lea
arpl
adc
pop
loop
out
xchg
mov
or
jnp
dec
mov
lods
test
or
mov
lea
fwait
movs
call
mov
(bad)
add
outs
nop
(bad)
mul
and
cmps
in
movs
fsqrt
fimul
pop
js
xchg
inc
iret
add
add
sub
std
jno
cld
push
xchg
js
out
xchg
add
out
stc
call
aam
(bad)
cmps
push
mov
ss
int
jno
ror
xor
jp
int
aad
dec
mov
xchg
dec
icebp
cld
xor
xor
outs
daa
cdq
cmps
adc
sbb
out
mov
xchg
test
fsub
adc
fidiv
fmul
push
sub
lds
push
mov
xchg
scas
mov
inc
pop
push
xchg
cmp
gs
adc
clc
fisttp
push
pop
call
dec
adc
xchg
ins
push
(bad)
test
dec
call
test
(bad)
jp
dec
xchg
xchg
jno
and
test
repnz
mov
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
xchg
ds
repnz
cli
add
mov
cli
cmp
mov
test
mov
test
scas
ror
cmp
test
mov
test
mov
test
mov
cdq
aaa
mov
test
mov
test
repnz
sbb
icebp
and
jecxz
push
leave
das
and
xor
fiadd
mov
pop
icebp
and
jle
aas
xchg
cmc
movs
xor
add
repnz
cmp
scas
dec
mov
shl
pop
in
pushf
stos
addr16
outs
inc
or
cmp
mov
test
xchg
cmp
xor
mov
push
stos
pop
mov
jp
shl
push
mov
xchg
and
fs
and
mov
mov
int3
inc
inc
jno
nop
fisubr
push
hlt
pop
sub
enter
xchg
out
and
mov
fprem
xchg
mov
clc
test
(bad)
fistp
jmp
pop
mov
jae
gs
jg
jne
out
cdq
test
call
cmp
or
jne
push
adc
dec
(bad)
frstor
repnz
dec
cmps
ret
mov
dec
cs
cdq
jmp
(bad)
push
int
iret
repnz
mov
inc
add
cmp
popf
leave
xchg
sub
int3
dec
sbb
out
mov
scas
mov
ret
loop
sbb
add
or
mov
mov
popa
or
adc
or
sbb
rcl
inc
mov
(bad)
fwait
mov
xor
(bad)
adc
lods
xor
jle
mov
dec
call
aaa
mov
call
iret
push
(bad)
cmp
and
in
retf
push
push
inc
imul
and
outs
cmps
fwait
(bad)
out
pop
mov
or
repz
repz
test
jecxz
aas
or
adc
out
ret
dec
(bad)
ds
mov
jne
rcr
sbb
popa
(bad)
repz
iret
xchg
aas
xor
mov
retf
mov
or
pop
out
mov
scas
push
test
iret
ja
cmp
test
fucomip
in
xchg
sbb
cli
inc
in
fdivrp
sahf
cmp
retf
pop
jae
scas
cmps
call
shr
popf
imul
mov
xor
mov
sub
jbe
mov
jecxz
xchg
jns
mov
lds
mov
lea
mov
lea
mov
test
mov
test
mov
xchg
and
test
repnz
mov
cmp
movs
aas
(bad)
sub
mov
ret
xor
jl
cwde
pop
xchg
mov
mov
inc
in
cmc
loope
das
cwde
xchg
push
adc
sbb
dec
mov
repnz
sub
cwde
push
push
(bad)
cli
ins
add
inc
mov
in
xor
dec
mov
jecxz
out
retf
jge
shr
std
or
and
or
jge
mov
inc
and
push
cmp
and
rcr
inc
cmp
ror
sbb
ja
into
pop
clc
mov
mov
push
dec
jmp
cmp
int3
mov
cmp
test
add
mov
je
sbb
movs
das
aaa
push
shl
mov
jne
repnz
xlat
fisub
lahf
out
cmp
mov
jmp
fldenv
mov
sub
in
xchg
into
lahf
mov
es
call
(bad)
pop
inc
bound
push
sbb
in
test
and
popa
dec
loop
daa
cld
sbb
push
ja
inc
adc
int3
ins
inc
jg
js
repnz
shr
test
sbb
mov
mov
pop
sbb
dec
jmp
xchg
addr16
dec
mov
push
fisub
jne
fstp
test
js
pushf
dec
loop
push
int3
mov
jmp
inc
dec
stc
(bad)
in
popf
inc
fwait
jb
inc
test
cmp
shl
sbb
mov
inc
dec
adc
dec
pop
inc
stos
cdq
imul
mov
pusha
daa
or
inc
das
mov
jbe
loope
int
mov
jnp
xor
or
and
xchg
lods
mov
ret
dec
popa
inc
pop
loop
mov
xchg
jo
add
jl
inc
push
(bad)
ins
mov
sub
xchg
pop
sbb
test
push
in
movs
arpl
adc
(bad)
mov
fwait
nop
outs
or
call
lods
push
and
jbe
jge
mov
mov
jae
repz
jns
scas
jae
pop
sbb
jl
js
jl
and
mov
ret
mov
add
out
jmp
xor
lds
push
xchg
mov
inc
and
push
adc
ror
cmp
cwde
dec
adc
xchg
cli
jmp
sub
pushf
out
out
xor
aaa
imul
(bad)
loop
scas
arpl
call
imul
rcl
mov
lods
inc
cmp
rcl
jl
fdiv
int
fimul
xchg
xor
jle
sub
cmp
jmp
rcl
cmp
pop
push
and
inc
cmp
(bad)
pop
jbe
xchg
ret
dec
fstp
cmp
and
cmp
lock
xor
ret
sti
jecxz
sub
mov
jmp
adc
jbe
push
bound
fisttp
xchg
cdq
jg
inc
push
fs
sbb
jecxz
out
mov
rcr
xor
cmps
jbe
retf
inc
sbb
stc
or
movs
ja
sub
xchg
push
mov
dec
jl
cmp
lock
cmp
cdq
mov
pushw
(bad)
out
xchg
neg
lods
fadd
test
daa
popf
dec
xor
cmp
or
stos
and
and
sbb
ret
sbb
add
int
inc
iret
jle
jo
or
xchg
and
jmp
lahf
retf
adc
or
pop
daa
addr16
(bad)
int3
lea
scas
or
sbb
mov
xor
xchg
movaps
pop
cmp
mov
add
outs
dec
test
imul
not
mov
mov
(bad)
test
imul
cli
outs
add
nop
mov
loop
in
jg
sub
xchg
dec
loope
aaa
div
xchg
sub
(bad)
test
mov
lea
mov
shr
repnz
ja
mov
shl
not
mov
jl
inc
les
icebp
add
mov
out
sbb
bound
jb
fwait
sar
mov
sbb
push
sahf
jge
es
jl
push
leave
dec
in
(bad)
lods
push
push
in
mov
mov
fidiv
test
fiadd
sbb
cmp
popf
xchg
stos
mov
mov
xchg
and
push
sub
sub
cmp
nop
sbb
es
mov
iret
(bad)
imul
inc
and
ret
cmps
loop
mov
mov
int3
ret
call
dec
adc
dec
out
daa
outs
fnsave
mov
lea
test
loop
shl
(bad)
dec
out
jmp
push
dec
fild
es
loopne
pop
std
lock
and
push
retf
and
fisubr
jle
sbb
sbb
fwait
pusha
and
fwait
mov
push
call
cmps
clc
and
mov
cdq
das
add
retf
jp
rol
mov
fisub
loope
ins
push
movs
mov
or
or
pop
and
(bad)
jae
out
out
addr16
loop
adc
jecxz
and
sbb
cli
and
add
jecxz
xor
neg
mov
and
sar
sub
daa
stos
rol
aas
mov
xchg
cmp
mov
aas
repz
add
cmp
(bad)
jle
xor
mov
jg
jp
mov
xor
mov
shr
mov
sub
fwait
das
cmps
cmps
xchg
jge
aad
or
inc
and
loop
and
sub
dec
push
repnz
pushf
mov
sar
stc
repz
sub
ss
stos
hlt
shl
pop
out
mov
shr
and
repnz
bound
cmp
pop
jmp
mov
push
shr
sub
and
bound
fisttp
gs
push
sub
je
or
push
dec
push
jb
int
(bad)
cli
cmp
and
xchg
cld
jns
push
test
mov
in
imul
in
pop
inc
lods
ins
lods
test
sbb
gs
mov
or
cmp
rcl
and
das
jecxz
mov
(bad)
cmc
cld
mov
out
and
aam
cmp
(bad)
inc
aam
and
not
out
add
jp
adc
int3
adc
xor
mov
inc
mov
jecxz
add
inc
nop
sbb
or
mov
pusha
pop
dec
in
push
lock
xor
cmps
out
ret
(bad)
iret
and
add
je
arpl
xchg
and
push
mov
pop
mov
dec
test
mov
xor
ins
std
enter
repz
loope
inc
imul
cmp
cmp
rcl
scas
jmp
imul
in
cmc
fidiv
pop
out
fwait
test
dec
retf
fwait
shr
adc
test
fstp
ds
je
mov
sbb
inc
aaa
mov
shl
inc
ja
jbe
mov
div
jnp
push
ja
mov
out
jbe
dec
xor
push
ja
xor
jne
xchg
dec
cdq
test
mov
xor
dec
cli
or
jb
sti
(bad)
mov
sub
fistp
mov
sub
into
pop
cmovp
pop
cmp
cmps
int3
sar
adc
ret
push
push
or
pop
int
out
and
rol
jp
sbb
mov
xchg
push
out
cdq
xor
add
ret
ret
gs
or
stc
mov
jl
dec
adc
mov
inc
je
iret
(bad)
int3
and
fstp
and
loopne
pop
jmp
push
push
push
aad
jge
loope
sbb
(bad)
popf
mov
jecxz
in
es
ins
sbb
in
or
xchg
xchg
shl
inc
lahf
jnp
ins
mov
dec
mov
iret
addr16
aad
add
sub
fdivrp
or
inc
mov
mov
scas
fnstcw
int3
jns
inc
lods
xlat
push
sbb
sub
cmps
and
outs
fimul
sub
(bad)
retf
scas
(bad)
fcmovu
call
add
std
mov
sub
movs
cmp
xchg
xor
les
test
dec
xchg
int
mov
mov
pushf
shl
out
clc
push
retf
mov
push
push
mov
jae
lahf
cmps
add
jns
xchg
hlt
pop
loope
popa
dec
dec
fisub
add
cwde
call
idiv
push
js
je
xlat
adc
jns
dec
fimul
imul
mov
push
mov
mov
xchg
dec
fcomp
dec
scas
in
mov
mov
xor
arpl
js
cmp
adc
inc
repz
stos
je
xchg
fsubr
dec
dec
sbb
int
adc
out
xlat
dec
scas
push
mov
xor
out
sbb
xchg
nop
fnstcw
scas
and
dec
sub
inc
icebp
pop
jle
cmps
mov
sbb
loopne
push
loop
sub
mov
adc
mov
out
add
fisubr
sar
in
jle
dec
sbb
adc
iret
mov
cmps
push
push
or
rol
int
mov
invd
mov
dec
mov
sar
leave
aam
mov
ss
icebp
icebp
sbb
ins
add
retf
adc
pop
or
push
sub
cli
outs
lock
jl
mov
mov
xchg
cmc
test
call
cdq
or
stos
data16
shl
arpl
xor
mul
lds
pop
mov
in
repnz
out
lock
adc
push
loop
jmp
inc
and
arpl
add
jmp
xchg
pop
in
sti
aad
add
lds
mov
jle
dec
pop
les
sbb
jo
enter
ror
(bad)
adc
push
lods
pop
mov
jl
and
and
dec
push
repz
dec
push
aaa
dec
mov
aas
out
or
xor
fwait
cmp
inc
inc
jp
or
pop
rol
pushf
test
icebp
inc
scas
fucompp
jo
mov
arpl
(bad)
fdiv
mov
in
add
pop
pop
push
xchg
or
lods
enter
xor
pushfw
popa
ja
je
cdq
mov
lods
test
jecxz
pop
sub
and
mov
arpl
mov
cli
and
test
inc
push
push
leave
jmp
out
add
cmp
mov
das
ret
xchg
inc
cvtdq2ps
mov
enter
aaa
je
scas
pop
cld
enter
pop
add
jnp
outs
jmp
inc
or
inc
push
mov
aas
lods
push
pushf
inc
and
jle
icebp
mov
stos
add
jb
dec
mov
fs
push
nop
fild
ss
scas
call
xor
ja
inc
dec
sub
adc
or
adc
ja
jle
in
ds
call
jge
dec
dec
inc
jnp
push
jge
cli
stc
jmp
shr
and
sbb
(bad)
aas
jo
pop
movs
xlat
sub
dec
push
xchg
sub
int
cdq
outs
test
mov
mov
cdq
retf
mov
mov
pop
adc
sub
(bad)
popa
jg
test
mov
test
aas
imul
ss
shl
pop
pop
mov
enter
xchg
test
iret
cmp
sar
fdivr
and
inc
cmp
ins
pop
lods
stos
adc
mov
popa
(bad)
fist
stos
in
sub
das
rol
inc
mov
je
dec
adc
jmp
push
pop
push
rol
aad
leave
mov
inc
scas
add
xchg
iret
in
mov
mov
mov
dec
dec
mov
fmul
sub
xchg
adc
in
mov
dec
add
jo
fidivr
mov
ins
and
push
fcmovnbe
mov
sub
push
ror
mov
(bad)
pushf
push
mov
test
xchg
popf
push
sbb
pop
sbb
xchg
ds
mov
pop
data16
inc
mov
(bad)
(bad)
mov
test
push
das
mov
test
xor
adc
aam
test
call
mov
sbb
jns
int
call
mov
jmp
outs
and
and
and
repz
in
cli
or
pop
push
scas
adc
sbb
lock
pop
enter
mov
call
add
je
call
repz
jmp
and
rcl
mov
cs
ficom
test
xchg
fimul
das
out
repz
xchg
bound
pop
sub
leave
mov
push
adc
scas
mov
xchg
dec
cdq
int
dec
icebp
int3
pop
clc
sub
imul
adc
inc
jecxz
mov
(bad)
pop
cmp
std
xor
sti
dec
in
rcr
push
hlt
or
dec
ds
lea
xor
scas
enter
fucomi
dec
push
cmp
cmovne
dec
dec
jle
pop
jge
xor
add
(bad)
pop
pop
mov
or
scas
pop
and
cmp
(bad)
inc
bound
pop
cmp
pop
daa
pop
fadd
scas
adc
jmp
mov
ja
aam
ss
push
jg
lock
dec
lea
dec
cdq
shr
sbb
or
mov
and
mov
(bad)
inc
pushf
mov
adc
mov
nop
cmp
adc
les
sysret
rcr
jecxz
scas
arpl
fidiv
mov
out
push
rcl
in
retf
push
dec
pop
xchg
fisub
inc
rcl
and
sbb
mov
sub
inc
fxch
outs
and
mov
nop
cmps
les
jne
mov
pop
jle
jns
je
pop
mov
cmp
sbb
addr16
popf
fcomp
push
mov
push
inc
sub
sub
stos
call
idiv
jno
push
jle
dec
rol
popf
push
or
stos
sbb
ret
cmp
imul
jecxz
push
ror
in
cli
dec
lea
adc
popf
or
adc
leave
jnp
into
arpl
call
dec
mov
ja
push
pop
retf
js
imul
lea
mov
mov
mov
inc
jnp
repnz
test
xor
push
jg
hlt
inc
cmp
out
cmp
cmp
mov
ins
aad
cdq
xchg
push
fnsave
or
push
ds
push
inc
(bad)
sbb
das
arpl
dec
pop
and
outs
retf
mov
adc
cmp
movs
inc
mov
stc
sub
imul
test
jmp
mov
cmp
mov
mov
rol
mov
pop
es
push
shl
ret
aad
cmp
xchg
sub
sbb
mov
iret
mov
jae
out
xor
ins
mov
push
and
dec
test
cmp
pop
in
xor
pop
sbb
adc
jne
cmp
rcl
lods
cmps
dec
cmps
jmp
sete
xchg
ror
imul
mov
xchg
adc
xor
dec
xlat
sbb
ins
jg
adc
cmp
adc
aaa
fisubr
sbb
pop
cmp
cdq
dec
jb
jle
pushf
(bad)
aam
imul
outs
inc
in
bound
mov
mov
imul
push
ins
not
mov
dec
mov
(bad)
push
jnp
gs
(bad)
into
lds
enter
mov
test
cwde
(bad)
jne
jmp
push
das
dec
xchg
popf
cmp
mov
inc
movs
mov
stc
and
push
add
xchg
out
push
jmp
sub
test
xchg
hlt
mov
cwde
clc
fwait
scas
out
sbb
push
pop
data16
pop
xor
ret
iret
cld
scas
imul
xchg
daa
jmp
xor
adc
test
lods
shl
pushf
les
iret
gs
ret
retf
mov
outs
pop
dec
call
sti
jae
mov
or
repz
in
inc
xor
outs
inc
aad
in
and
and
or
adc
lods
out
mov
sbb
xchg
std
dec
inc
imul
ss
imul
fs
dec
scas
fld
jmp
dec
mul
or
push
mov
sub
adc
xchg
hlt
adc
imul
mov
icebp
jmp
aam
sahf
scas
sbb
pushf
jnp
icebp
cli
cmp
scas
daa
or
or
aas
mov
dec
fistp
mov
xchg
icebp
adc
ret
sub
pop
in
mov
mov
scas
dec
push
dec
jp
arpl
fcmovne
std
je
popf
push
mov
leave
adc
or
push
arpl
mov
ins
xchg
nop
jmp
xor
cmp
cmp
lods
mov
jb
hlt
ret
test
mov
mov
xor
mov
aas
dec
mov
sub
and
mov
lods
daa
xchg
fistp
fsubp
pop
clc
jecxz
idiv
pop
mov
dec
lods
pop
stc
dec
jmp
test
jmp
rcl
int3
jecxz
adc
sub
retf
xor
mov
imul
fwait
repz
fwait
jecxz
loope
inc
sbb
mov
hlt
outs
pop
cmp
or
pop
xchg
loop
mov
test
adc
xor
repz
test
iret
aaa
or
scas
jo
push
cmp
xchg
lods
dec
cs
lahf
and
sbb
adc
leave
sub
scas
sub
ret
cmc
dec
iret
movs
mov
ds
cli
rol
out
mov
pop
(bad)
out
mov
adc
test
shl
push
jbe
pop
cmp
push
leavew
cmp
mov
call
cmc
in
mov
ret
push
mov
rcr
ss
leave
ret
(bad)
icebp
pop
fmul
sub
cli
daa
mov
sbb
imul
dec
lock
jno
xchg
cs
sub
jg
mov
mov
pop
retf
inc
jne
push
fild
or
add
xchg
outs
call
inc
xchg
mov
mov
add
out
cmp
cs
push
mov
ins
and
lods
xchg
outs
(bad)
neg
xchg
mov
es
xor
jge
test
and
jge
mov
xor
jbe
pop
jp
push
xlat
test
pusha
fistp
cmps
push
call
xor
pop
repnz
xchg
and
outs
sbb
dec
test
dec
out
(bad)
and
adc
outs
dec
ins
mov
shl
sahf
int
push
inc
and
cmp
and
push
std
lock
sbb
inc
pushf
xchg
(bad)
out
pop
xor
add
aaa
test
push
loope
jnp
fcomp
loop
push
jle
cmp
shl
cmp
cmps
mov
stc
pusha
daa
sbb
aas
push
mov
pop
(bad)
shr
pop
stos
xchg
aam
pop
dec
push
js
ins
jo
sbb
hlt
dec
and
mov
jae
or
rol
dec
les
xchg
vpavgb
mov
inc
push
test
imul
xchg
sub
and
or
mov
mov
jns
adc
push
das
(bad)
repnz
and
pop
pop
push
(bad)
mov
mov
dec
icebp
dec
pusha
lock
js
push
js
pop
cmps
aam
rcl
les
push
dec
pop
and
mov
popa
call
mov
(bad)
pop
fucomp
sub
mov
dec
xlat
pop
lock
fscale
movs
pop
inc
mov
sbb
mov
in
pop
bound
test
lds
scas
repnz
sub
push
push
push
lea
call
sar
jns
inc
xor
aaa
mov
test
repnz
cwde
sbb
sbb
and
lea
(bad)
jae
sub
aam
sbb
mov
test
rol
pop
xchg
jecxz
add
popf
test
mov
cmps
cmp
rol
sbb
mov
add
lahf
mov
test
push
sahf
adc
mov
test
xchg
jecxz
retf
and
int
mov
movs
cmp
mov
push
stc
test
and
int
mov
mov
cmp
test
xchg
jb
sub
mov
lea
mov
cmp
mov
repnz
cmp
jbe
jp
mov
jge
aaa
cmp
xor
cld
cmc
jno
sbb
cmp
dec
mov
cmp
test
pop
cli
dec
sbb
adc
cmp
mov
jnp
arpl
mov
or
adc
cmp
(bad)
js
or
movs
ins
ret
hlt
ficomp
outs
inc
(bad)
(bad)
push
push
mov
ja
popf
jmp
scas
jns
or
lock
or
sbb
outs
scas
stos
dec
ja
popf
imul
xor
cmp
mov
jl
cld
sub
aad
hlt
mov
iret
sar
and
adc
in
(bad)
add
jle
out
lea
add
dec
dec
dec
icebp
loope
and
cmps
jnp
(bad)
push
js
dec
ret
ror
dec
xor
or
test
adc
popf
mov
daa
add
pushf
nop
xchg
mov
xchg
xchg
pop
jns
sub
inc
ffree
mov
bound
popf
(bad)
xchg
push
mov
push
repz
int3
ret
jns
jg
out
jecxz
inc
add
cwde
cmp
rol
es
fstp
mov
push
push
mov
test
push
sub
adc
test
in
clc
ds
addr16
sbb
jp
add
icebp
xor
cmps
out
cmp
repnz
mov
sar
mov
cmp
cmc
xor
(bad)
mov
cli
mov
in
icebp
addr16
leave
nop
enter
ins
xor
cmps
and
repz
es
jbe
adc
sub
xchg
scas
cmp
xor
test
sub
jp
shl
jge
push
and
loope
fdiv
ds
adc
adc
call
jae
cmps
cli
add
movs
push
test
xchg
xchg
xchg
loopne
out
inc
ret
xor
test
pop
push
push
iret
mov
fs
jb
inc
xlat
aas
xor
pop
iret
(bad)
in
jnp
add
fsub
cmp
shl
pop
fisttp
mov
xor
int3
(bad)
pushf
fcomp
mov
add
cmp
scas
add
std
mov
inc
xchg
sbb
(bad)
jmp
aad
(bad)
daa
adc
cmps
addr16
sbb
jg
das
clc
inc
int
xchg
mov
cmp
dec
iret
mov
in
or
cs
fs
aas
test
and
fnsave
std
sub
mov
jns
and
xor
cmp
pop
stc
or
add
std
shl
cmc
jmp
mov
dec
jp
(bad)
add
xchg
xchg
dec
mov
pusha
adc
cmps
add
dec
dec
rcr
mov
jge
hlt
inc
cmp
dec
loope
cmp
not
aaa
mov
repnz
test
aaa
test
cmp
jne
aas
mov
jns
mov
in
(bad)
test
xor
add
in
fstp
xchg
(bad)
outs
cmp
mov
xor
cwde
in
xlat
and
mov
loope
repnz
push
ffreep
nop
xor
bound
or
mov
lea
jmp
ins
mov
pop
ror
push
xchg
xchg
sbb
rol
mov
loope
and
data16
mov
mov
jae
add
mov
dec
cs
dec
shr
add
scas
cmps
outs
xor
ins
sbb
mov
push
setle
movs
cdq
mov
fwait
daa
fistp
out
mov
daa
loop
(bad)
cmc
mov
rol
inc
push
data16
cmps
cmps
and
jns
lea
icebp
xchg
push
(bad)
lods
and
sti
xor
cmps
cmp
and
ins
lds
xor
dec
(bad)
(bad)
pop
xor
sbb
and
jl
lock
mov
imul
scas
neg
out
and
sahf
aad
call
push
mov
lahf
out
adc
stc
mov
ror
and
out
add
pop
clc
fwait
lds
jmp
mov
push
idiv
addr16
(bad)
repnz
cwde
into
inc
call
xchg
sbb
out
ds
fsubr
stos
lods
xor
addr16
in
(bad)
jmp
xchg
sbb
mov
inc
mov
loop
sahf
mov
mov
inc
sahf
iret
and
push
shl
mov
in
pusha
dec
jg
sbb
ret
rcr
movs
jo
rcl
out
mul
xor
dec
cs
pop
in
dec
or
shl
and
lea
repz
arpl
test
(bad)
mov
daa
and
jnp
shl
clc
ret
sar
mov
cmps
pop
xlat
pushf
aam
add
lods
int
jmp
stos
enter
or
xchg
or
cmp
sub
icebp
and
inc
call
mov
cdq
pop
push
mov
and
es
bnd
inc
jno
fdivr
cmp
jnp
call
inc
imul
ret
cmp
add
xor
xchg
(bad)
xchg
int3
aad
(bad)
mov
out
add
ins
xor
pop
neg
(bad)
aam
jle
xchg
bound
dec
rol
pop
movs
or
and
add
xor
cld
inc
inc
or
xor
mov
dec
mov
push
imul
dec
and
push
sbb
pop
xchg
adc
push
sahf
jmp
sub
aaa
in
pop
movs
and
jne
push
shr
inc
std
mov
aad
sahf
cdq
cmp
and
mov
dec
icebp
mov
dec
test
ja
pop
rcl
call
aam
shl
jbe
shl
in
sar
rcl
pop
dec
outs
mov
loopne
xor
mov
cmc
ror
pusha
or
push
(bad)
fdiv
or
ja
jns
sahf
pop
xchg
or
or
jns
fbstp
inc
add
repz
addr16
inc
xchg
sub
fisub
in
sub
mov
outs
leave
das
(bad)
mov
add
sbb
enter
dec
popf
sub
xor
xchg
loopne
outs
dec
pop
sbb
and
inc
ss
dec
xchg
add
std
fsubr
ins
jo
les
jmp
mov
aaa
enter
xchg
rol
scas
scas
xor
mov
add
int3
stos
xchg
jno
ret
adc
fisttp
(bad)
mov
xor
mov
leave
mov
or
jg
add
pushf
mov
sbb
adc
dec
shl
cli
sub
sbb
imul
cs
out
outs
mov
mov
and
sar
arpl
inc
bound
mov
mov
dec
pop
mov
dec
scas
push
les
and
xchg
aaa
inc
lock
mov
pop
test
push
add
or
jp
xor
and
lods
dec
mov
pop
pop
(bad)
out
ret
and
(bad)
addr16
mov
repz
push
push
xor
jmp
pop
rcr
pop
stos
push
mov
add
movs
jno
pop
sub
icebp
jmp
xchg
push
and
fidiv
hlt
scas
in
inc
cwde
lea
dec
xchg
imul
push
les
repnz
arpl
dec
cli
cs
icebp
adc
and
push
div
les
fidiv
scas
ins
iret
jmp
imul
leave
sbb
xchg
clc
scas
mov
jl
leave
xchg
or
jle
es
and
loopne
lods
mov
and
sub
jl
lods
nop
fwait
mov
mov
ficomp
retf
rcr
call
les
xchg
mov
pop
aad
js
mov
bound
mov
cmp
loope
cmc
mov
cmp
lea
jns
cmps
adc
mov
movs
rcl
daa
dec
mov
mov
and
adc
pop
push
xchg
jns
sbb
mov
in
xor
cli
cmps
test
loop
mov
dec
(bad)
idiv
mov
mov
cmp
dec
xchg
pusha
xchg
scas
stos
es
cmp
bound
jb
icebp
mov
test
sub
cmp
cs
fwait
out
imul
and
mov
enter
pop
inc
je
mov
cmps
cli
sbb
in
fnstenv
repnz
xor
cmp
or
sbb
sti
mov
inc
test
xchg
test
popa
test
jle
xor
icebp
out
js
inc
mov
xor
dec
popf
nop
sub
xchg
push
in
call
pop
pop
add
push
fiadd
retf
test
xchg
ja
sbb
nop
cmp
sar
mov
cwde
retf
loope
cdq
test
lahf
jnp
push
outs
mov
enter
(bad)
mov
adc
fwait
test
rol
in
inc
xchg
adc
retf
xor
bound
inc
xor
(bad)
sub
scas
mov
xlat
mov
les
xor
test
ins
sar
xlat
or
into
dec
fcom
jno
mul
xor
(bad)
arpl
mov
jmp
js
sub
add
(bad)
imul
pop
push
xor
mov
sbb
or
arpl
mov
addr16
outs
push
es
fst
adc
inc
cmp
mov
jo
jecxz
push
adc
lds
mov
leave
test
push
mov
and
and
add
jecxz
mov
add
mov
cdq
shl
cmp
inc
jecxz
or
adc
bound
xor
sar
xor
loopne
or
int
or
sbb
shl
xchg
icebp
inc
xchg
les
out
cmp
imul
js
vmovshdup
sbb
aas
shl
mov
sbb
dec
xchg
lock
loope
sub
xor
pusha
cmp
fs
inc
lds
jl
outs
xor
test
les
stos
(bad)
jge
sahf
addr16
fimul
aam
ja
pop
or
xchg
lods
and
jmp
sbb
rol
xor
cli
mov
mov
(bad)
xchg
sub
out
or
ret
call
pop
mov
aad
idiv
(bad)
xchg
aad
sar
mov
mov
out
pop
xchg
out
psrad
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
jns
loope
movs
cmp
cli
test
mov
mov
not
aas
jmp
cmp
repnz
mov
xchg
cmp
test
mov
test
mov
test
mov
jns
mov
ret
mov
test
repnz
fdivp
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
loopne
test
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
sub
mov
test
push
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
jecxz
mov
push
movs
les
test
xor
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
jp
popa
int3
lds
mov
cmp
mov
repnz
mov
fnstenv
mov
popf
mov
dec
cdq
test
mov
aad
cmps
cli
pop
push
inc
jge
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
pop
push
xor
jge
bound
push
mov
mov
dec
icebp
cmp
cmp
push
push
test
pushf
xor
mov
out
sbb
and
jno
sbb
inc
pop
sbb
sahf
dec
imul
jp
push
loop
das
icebp
mov
fbld
lea
lds
rol
push
test
pushf
xor
mov
out
sbb
and
jno
sbb
inc
pop
sbb
sahf
dec
imul
jp
push
loop
das
icebp
mov
fbld
lea
lds
rol
push
test
pushf
xor
mov
repnz
js
int
xchg
cmp
push
test
(bad)
mov
aaa
mov
repnz
mov
test
mov
sar
mov
xchg
dec
cdq
cmp
dec
not
sbb
mov
xor
lea
in
and
mov
movs
cli
cmp
cmp
jb
xchg
gs
dec
cmp
adc
sbb
mov
xor
lea
in
and
mov
movs
cli
cmp
cmp
jb
xchg
gs
dec
cmp
adc
sbb
mov
xor
cmp
mov
(bad)
or
shr
xor
xlat
sti
mov
in
pop
aaa
(bad)
imul
fs
push
jbe
pusha
sar
add
add
xor
mov
in
lahf
fcmovnbe
sti
mov
in
pop
aaa
(bad)
imul
fs
push
jbe
pusha
sar
add
add
xor
mov
in
lahf
fcmovnbe
sti
mov
in
pop
aaa
fbstp
(bad)
xchg
loope
xor
repnz
mov
repnz
mov
mov
mov
shl
dec
(bad)
mov
jge
xchg
mov
and
scas
sti
stos
stos
pop
add
mov
test
push
dec
mov
ins
repz
pop
adc
adc
or
sub
and
arpl
shl
xor
test
jecxz
addr16
call
and
mov
and
inc
mov
fmul
sub
(bad)
xchg
push
scas
jnp
stos
pop
add
mov
test
push
dec
mov
ins
repz
pop
adc
adc
or
sub
and
arpl
shl
xor
test
jecxz
addr16
call
and
mov
and
inc
mov
fmul
sub
(bad)
xchg
push
scas
jnp
stos
pop
add
mov
test
push
dec
mov
ins
repz
pop
or
call
int
ret
xchg
test
pop
fcom
pop
cld
lds
add
add
retf
iret
sbb
jecxz
push
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
sahf
sub
mov
pushf
sub
test
js
cmp
mov
xchg
cmp
test
mov
dec
out
mov
mov
dec
std
xor
xchg
dec
cdq
test
mov
xchg
push
dec
cli
stos
js
ret
retf
add
jno
pushf
ds
adc
fs
(bad)
push
test
sbb
call
cmp
adc
imul
repz
pop
and
movs
push
or
dec
dec
in
fild
(bad)
pusha
dec
and
cmp
dec
ins
and
cmps
ret
popa
ror
and
adc
sbb
xor
lds
popw
xchg
dec
rcl
lahf
ds
adc
fs
(bad)
push
test
sbb
call
cmp
adc
imul
repz
pop
and
movs
push
or
dec
dec
in
fild
(bad)
pusha
dec
and
cmp
dec
ins
and
cmps
ret
popa
ror
and
adc
sbb
xor
lds
popw
xchg
dec
rcl
lahf
ds
adc
fs
(bad)
push
test
sbb
call
sub
xor
mov
iret
mov
fs
xchg
or
dec
fidivr
sbb
cli
test
ret
cli
addr16
jl
imul
sbb
pop
xchg
ret
fs
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
mov
retf
mov
or
mov
repnz
mov
test
mov
cmp
mov
js
xor
cmp
mov
call
lods
sub
loope
sahf
jnp
repnz
test
or
and
fisubr
sti
rol
mov
test
xchg
pusha
movs
pusha
aam
adc
cmp
push
add
int3
sbb
xchg
dec
lods
jmp
jb
jnp
repnz
test
or
and
fisubr
sti
rol
mov
test
xchg
pusha
movs
pusha
aam
adc
cmp
push
add
int3
sbb
xchg
dec
lods
jmp
jb
jnp
repnz
test
sahf
or
jge
fnstcw
icebp
mov
xor
inc
mov
jge
dec
mov
xchg
xor
push
jl
loopne
push
(bad)
dec
mov
xchg
xor
push
jl
loopne
push
(bad)
dec
mov
xchg
jl
mov
cmp
cmp
mov
repnz
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
mov
jae
aam
sbb
and
int
xchg
arpl
jae
aam
sbb
and
int
xchg
arpl
mov
and
int
xchg
arpl
jae
aam
sbb
and
lea
div
lea
mov
test
mov
test
mov
cmp
ja
out
cmp
mov
xchg
test
mov
fnstenv
test
jno
inc
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
stos
inc
jbe
xchg
pop
or
in
jns
cld
test
(bad)
jp
(bad)
ja
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
int3
in
push
popa
jb
jl
fild
icebp
mov
sub
ror
push
jp
(bad)
addr16
cmp
test
retf
das
mov
test
mov
test
mov
test
mov
cmp
add
hlt
jae
cmp
lea
xchg
test
mov
ja
mov
jmp
pushf
dec
ret
imul
adc
test
imul
adc
test
imul
adc
test
imul
adc
test
imul
adc
test
imul
adc
test
imul
adc
test
imul
adc
test
addr16
aaa
es
test
pop
inc
aam
(bad)
inc
pop
or
jle
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
jne
inc
pop
or
adc
push
cmp
mov
test
mov
test
mov
cmp
imul
cmp
cmp
mov
xchg
push
cmp
xchg
cmp
lods
push
xchg
inc
sbb
into
in
dec
sub
jo
js
outs
out
leave
pop
cmp
lods
push
xchg
inc
sbb
into
in
dec
sub
jo
js
outs
out
leave
pop
cmp
lods
scas
sub
test
mov
pop
shl
mov
mov
fiadd
rcl
dec
lahf
lods
adc
dec
stos
fs
pusha
icebp
or
dec
scas
rcl
dec
lahf
lods
adc
dec
stos
fs
pusha
icebp
or
sar
(bad)
imul
aad
lds
xor
pushf
cmp
mul
cmp
repz
mov
dec
das
cmps
rcl
sbb
fisubr
jnp
retf
xchg
lds
fmulp
imul
ror
out
in
mov
jns
in
xor
(bad)
xchg
sub
(bad)
mov
xchg
mov
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loope
rcr
icebp
xchg
mov
mov
sub
test
mov
test
mov
test
mov
test
mov
xchg
das
mov
out
xchg
loope
aaa
mov
test
mov
test
mov
test
mov
xor
mov
icebp
lea
repnz
mov
sbb
cmp
repnz
mov
lods
aaa
mov
jle
out
bound
fstp
inc
jge
test
outs
mov
leave
popf
xchg
retf
sti
push
jnp
movs
ins
std
dec
push
lea
mov
add
jne
sbb
loopne
inc
push
jne
adc
pop
rcr
dec
sbb
pop
cmp
push
(bad)
pushf
fwait
das
push
lock
loopne
repnz
mov
pop
movs
int3
lods
cmps
jb
jbe
fsubr
pop
cli
outs
lods
popa
dec
lods
loop
fisttp
into
jge
(bad)
cmp
and
inc
ins
outs
fyl2x
enter
pop
cmp
pop
push
daa
dec
mov
adc
mov
outs
mov
inc
mov
jbe
xchg
add
mov
cmp
sbb
or
mov
sub
sbb
jle
jmp
std
scas
iret
popa
jmp
into
sub
sar
fild
and
bound
or
packuswb
fisubr
inc
movs
push
xchg
std
mov
popa
test
lods
push
addr16
imul
call
pop
stos
sti
or
sub
(bad)
iret
adc
stos
xor
jae
test
fnstsw
iret
pop
cmc
and
(bad)
sbb
jp
mov
lods
jbe
das
push
or
imul
daa
inc
das
clc
dec
add
jle
add
jge
enter
out
jmp
pop
cdq
(bad)
cmp
movs
sti
mov
and
xchg
scas
inc
pop
mov
dec
in
sti
or
inc
push
retf
dec
sbb
xchg
and
sub
jae
push
pop
test
(bad)
mov
add
xor
ins
mov
and
add
imul
mov
in
push
cmp
mov
repnz
sahf
call
inc
add
sub
movs
sub
inc
fld
jl
repnz
mov
jne
aas
lods
jbe
adc
cmp
cmp
hlt
inc
stos
test
jg
and
cld
cmp
lods
test
mov
and
not
mov
adc
cmp
mov
test
mov
test
mov
test
mov
test
mov
test
mov
xchg
cmp
mov
xor
inc
aas
mov
xchg
cmp
mov
imul
inc
outs
xor
xor
repnz
scas
stos
add
mov
icebp
sub
mov
ss
outs
xchg
or
and
fimul
scas
xchg
lods
nop
shr
inc
add
rcr
gs
(bad)
sbb
pop
repnz
ficom
clc
mov
inc
fldenv
and
lock
jns
lahf
idiv
push
es
dec
movs
mov
lds
adc
enter
retf
or
imul
xchg
(bad)
(bad)
pop
inc
sbb
arpl
mov
aas
mov
push
or
outs
inc
xchg
retf
adc
pop
mov
jg
in
fsub
cmps
add
iret
xchg
(bad)
shr
cmps
test
jl
cld
sbb
out
mov
jbe
mov
ffree
push
sbb
add
mov
dec
mov
add
dec
mov
out
pusha
fiadd
cli
and
dec
dec
in
sbb
jle
fisttp
xchg
sti
mov
xchg
mov
xchg
adc
(bad)
repnz
cs
xchg
popa
adc
cmc
stos
mul
and
out
or
fisub
(bad)
retf
inc
es
or
popa
(bad)
fsub
sti
cmps
xor
push
xchg
xchg
and
jecxz
jns
movs
loop
sahf
xchg
scas
test
push
add
pop
cmps
cld
and
mov
sub
inc
pop
cmp
add
add
jns
loop
mov
or
fbstp
jmp
mov
rcr
push
lahf
rcr
cmp
pushf
push
ds
jg
inc
jno
mov
or
inc
iret
add
ret
adc
mov
mov
cld
call
sbb
test
jne
movs
je
out
in
push
push
stc
fld
adc
(bad)
icebp
mov
ss
inc
cmps
out
adc
sub
xor
lods
push
lock
popf
fadd
call
xchg
or
repz
sub
sub
xlat
imul
imul
out
retf
int3
push
push
and
fs
repz
pop
div
inc
push
and
adc
cmp
mov
aam
or
push
popa
lahf
shl
adc
mov
dec
adc
cmp
aas
retf
mov
arpl
push
lods
mov
cmp
lods
add
aaa
mov
xchg
sub
repnz
mov
lea
repnz
mov
cmp
les
sti
add
sti
jnp
cmp
or
aas
xchg
test
jb
iret
hlt
icebp
xchg
popf
iret
mov
mov
pop
add
cwde
cmps
(bad)
call
cmp
ror
loop
and
and
ret
push
retf
or
xchg
mov
in
mov
sub
add
outs
inc
or
popf
sbb
ret
dec
mov
mov
mov
mov
push
aam
adc
out
enter
pop
push
push
or
push
xor
add
mov
imul
inc
repz
inc
add
test
xchg
push
adc
ret
cli
jge
xchg
bound
xor
and
mov
and
dec
lahf
out
pushf
cmps
sbb
cwde
(bad)
jb
fisub
dec
mov
and
in
adc
(bad)
nop
xchg
iret
outs
jne
push
mov
cmp
outs
or
xchg
add
or
cmp
adc
or
clc
mov
or
pop
repnz
hlt
popf
xor
mov
pop
cmp
call
aas
fld
pop
hlt
sbb
jno
cli
scas
movs
jp
setno
inc
xor
lods
(bad)
sti
cmp
push
leave
pop
adc
das
cli
mov
and
and
nop
int3
lock
lea
push
jnp
clc
inc
jg
or
iret
pusha
(bad)
and
xchg
in
cmc
adc
cmps
xchg
or
jle
sub
push
jb
loop
retf
call
sbb
(bad)
int3
loopne
les
jns
push
sub
lea
mov
inc
cmp
cli
inc
aas
sti
jbe
sti
repnz
lea
loop
inc
jp
ds
xor
xor
mov
xor
loope
sbb
mov
popa
movs
out
imul
shr
in
nop
std
cmps
imul
push
nop
push
cwde
out
(bad)
scas
adc
xchg
inc
loopne
(bad)
fstp
pop
or
(bad)
sub
leave
or
and
enter
ins
jge
sar
test
inc
fwait
pop
xchg
sbb
pop
push
std
cmp
pop
pop
dec
cli
push
jecxz
sbb
aaa
cdq
cmp
inc
mov
in
pop
test
dec
pop
mov
mov
xchg
sbb
ret
repz
addr16
std
push
or
jl
xchg
shl
mov
sahf
cs
mov
or
ss
sub
repnz
setns
add
pop
sbb
or
mov
sub
pop
(bad)
or
out
dec
(bad)
mov
pop
and
fwait
mov
aam
mov
lods
daa
fistp
movs
fild
imul
mov
loope
push
add
pusha
outs
push
mov
sbb
push
fdiv
adc
sbb
pop
outs
fs
jl
sti
mov
add
das
shr
pop
xor
ja
int3
pop
xor
push
xor
cmps
jns
sbb
out
pop
nop
stc
sahf
arpl
adc
(bad)
rcl
fstp
push
push
sti
cdq
push
dec
test
(bad)
push
imul
pop
test
jbe
inc
sahf
scas
aas
cs
and
push
stos
loopne
jae
ds
(bad)
ins
sbb
mov
cli
xchg
daa
mov
out
cmp
cli
add
idiv
sar
sti
add
mov
repz
aaa
aaa
xor
jnp
or
icebp
jae
sbb
test
mov
jns
dec
cli
fs
push
dec
bound
xchg
push
xor
or
sbb
pop
retf
(bad)
jmp
mov
adc
push
mov
test
jns
xchg
stos
push
mov
push
mov
push
mov
fucom
xchg
aas
jecxz
lock
enter
xchg
imul
jbe
push
mov
xchg
mov
add
xchg
dec
scas
xlat
ins
imul
push
daa
test
mov
call
mov
jmp
lods
fmul
or
(bad)
dec
fsub
and
test
xor
dec
jbe
xchg
mov
scas
and
(bad)
(bad)
stos
dec
cli
gs
xor
cs
xchg
adc
rcr
fnstcw
dec
sar
inc
push
fsubr
mov
mov
or
push
out
jne
fistp
sub
sbb
cwde
sbb
es
xor
enter
mov
or
mov
daa
mov
mov
pop
dec
jno
scas
rol
mov
dec
test
sbb
jbe
sub
imul
daa
jge
mov
aam
mov
dec
out
mov
pusha
jns
addr16
ret
add
and
clc
push
into
js
mov
dec
into
into
aaa
jno
pop
in
movs
adc
test
push
and
repz
sub
jp
dec
aam
or
mov
leave
mov
push
mov
jecxz
fisub
pop
pop
ret
or
scas
les
inc
lds
(bad)
fistp
ja
stos
sub
call
nop
push
add
jb
adc
add
lahf
add
mov
mov
inc
repnz
xor
xchg
or
jbe
pop
add
cli
inc
jbe
lea
out
mov
jge
rol
jmp
cmp
xchg
fmul
and
sub
push
and
pop
daa
bound
jns
push
xchg
repnz
cmp
call
cs
out
clc
test
cli
xlat
cld
jmp
sub
es
and
sbb
rcl
adc
jae
xchg
test
inc
mov
lods
rcr
mov
stos
push
mov
stos
or
or
(bad)
and
fiadd
scas
xor
jmp
ins
icebp
in
(bad)
pop
sub
imul
outs
jle
test
fisub
xchg
ds
(bad)
fcom
sbb
lods
adc
dec
push
pop
push
jb
sbb
das
sbb
push
(bad)
push
mov
and
dec
mov
leave
jmp
pop
ret
mov
(bad)
test
ret
and
fst
cmp
dec
push
and
and
mov
xor
fidivr
inc
adc
adc
add
(bad)
neg
and
lock
das
jg
adc
pop
(bad)
aaa
fldcw
sub
push
adc
sbb
push
mov
ror
sub
mov
gs
or
aas
jnp
fldcw
sbb
dec
ds
shl
addr16
cmp
scas
sbb
sbb
pop
add
xchg
(bad)
fldenv
and
test
mov
(bad)
(bad)
mov
inc
int3
popa
cmp
inc
jmp
or
sbb
fisub
pop
mov
cmp
push
xchg
pop
pop
stos
dec
ins
push
mov
(bad)
xor
inc
jecxz
pop
push
test
inc
add
lahf
pop
retf
cli
popf
jecxz
inc
pop
pop
mov
dec
mov
test
imul
inc
mov
adc
jmp
mov
mov
mov
push
xchg
adc
push
fcomp
xchg
stos
or
inc
pop
ja
sbb
cs
add
push
fist
or
pop
call
add
xor
or
jecxz
xchg
cs
out
adc
clc
adc
bound
das
jo
cli
jmp
lods
and
pop
pop
xchg
mov
mov
inc
scas
shr
ret
jp
lock
cld
(bad)
inc
stos
je
pop
mov
pop
add
popa
pop
movs
inc
punpckhbw
test
xchg
sub
mov
or
(bad)
in
adc
sbb
pop
and
cmp
outs
mov
mov
into
or
mov
mov
loop
cmp
repnz
aas
mov
inc
cli
cmc
ja
std
mov
inc
jg
jno
(bad)
xor
jae
aas
mov
jns
mov
xor
dec
xor
movs
mov
xor
fwait
xor
cmp
mov
fbstp
adc
xchg
inc
jns
retf
mov
cmps
(bad)
fstp
sti
loopne
popf
les
jbe
cli
into
sub
add
repz
retf
cmps
sub
mov
sub
(bad)
jnp
neg
icebp
test
pop
cmp
jp
mov
nop
ja
js
add
shl
(bad)
push
push
xor
push
ja
mov
mov
jecxz
mov
and
pop
mov
ss
xor
ret
xchg
test
sbb
leave
xor
jecxz
aas
dec
dec
jp
out
adc
inc
push
ret
adc
adc
mov
leave
pop
pop
repz
sbb
mov
xchg
out
(bad)
jmp
in
dec
ffreep
sub
js
sbb
dec
ja
(bad)
out
jne
cs
shr
test
cmc
push
pop
scas
loope
sub
mov
fidiv
xchg
xchg
dec
rcr
mov
(bad)
xchg
jbe
hlt
mov
cmp
mov
test
cmp
sbb
movs
imul
call
mov
xor
xor
xchg
xor
inc
ss
(bad)
in
xor
cli
dec
aad
push
adc
mov
mov
jne
hlt
sbb
pop
sub
mov
mov
xor
and
pusha
lock
out
lods
je
aas
nop
mov
(bad)
call
lahf
scas
bound
mov
iret
xchg
xor
popf
pop
test
es
cmp
test
and
retf
shl
cs
push
adc
jg
std
push
test
inc
mov
pop
jecxz
mov
sar
mov
lock
cmp
repz
jg
pop
scas
jnp
ds
cdq
rol
pop
loope
push
jb
cmps
push
xor
add
push
jae
lods
jmp
add
xor
push
xchg
test
mov
inc
(bad)
adc
in
xchg
jecxz
out
scas
fwait
(bad)
fdivr
add
mov
push
cs
aam
and
or
xchg
rcr
sub
test
add
mov
(bad)
mov
sub
or
out
sar
cmc
adc
push
or
cmc
or
out
push
mov
int3
ins
repz
lods
cmp
jmp
mov
(bad)
xor
sbb
dec
mov
fcom
push
das
and
xchg
xchg
call
scas
mov
cmp
add
jmp
(bad)
icebp
jo
jmp
or
mov
mov
mov
idiv
iret
stos
pop
(bad)
mov
aam
and
std
test
dec
add
out
xor
dec
add
pop
jmp
std
jno
sub
add
out
inc
mov
jp
mov
scas
cmp
inc
cmp
aam
adc
outs
mov
call
sbb
cmp
dec
mov
push
shr
cld
dec
setp
pop
(bad)
cld
push
dec
js
fnstenv
aaa
data16
test
daa
cli
mov
xchg
jl
outs
loop
xchg
add
jno
xadd
mov
sbb
jo
mov
dec
mov
dec
icebp
mov
jno
imul
and
fucomp
mov
ret
push
sti
pop
add
push
or
adc
inc
adc
inc
jg
dec
aaa
cmp
mov
mov
add
xchg
mov
int
call
mov
mov
push
add
mov
sub
fstp
mov
inc
jge
sbb
into
sub
mov
mov
iret
dec
jmp
mov
fucom
add
stos
sub
mov
jno
in
lock
xchg
mov
cmp
pop
cmp
mov
mov
inc
out
xor
(bad)
cwde
stos
es
jmp
pop
fisubr
fidivr
dec
jmp
mov
xor
cmp
fnstsw
retf
mov
pop
cli
xchg
add
shr
imul
jo
hlt
movs
mov
je
mov
out
ret
mov
push
dec
je
cmp
xlat
adc
push
mov
retf
test
inc
inc
dec
icebp
xchg
dec
cdq
test
mov
inc
cmp
repnz
mov
test
mov
mov
mov
test
jecxz
test
icebp
xor
mov
test
inc
repnz
jmp
mov
pop
lea
xlat
ret
aas
jno
mov
fld1
test
aad
xchg
test
repnz
repnz
dec
pop
outs
test
out
xchg
adc
test
sub
dec
stos
stos
add
mov
retf
push
lock
cmp
repnz
(bad)
jno
cmp
mov
cmp
repnz
mov
test
mov
test
mov
test
mov
xchg
div
mov
mov
mov
mov
repnz
test
div
(bad)
cmp
hlt
rol
jae
aas
(bad)
add
repnz
xor
daa
mul
arpl
sub
pop
fwait
mov
ins
jmp
mov
aas
mov
mov
push
pushf
mov
adc
call
mov
and
and
sbb
ins
scas
inc
mov
iret
push
inc
xor
mov
xor
pop
pop
adc
mov
fdivrp
jg
xchg
mul
push
retf
dec
les
or
shr
push
jg
les
pop
icebp
daa
test
shl
imul
stc
sbb
inc
or
mov
retf
dec
out
lea
inc
dec
gs
out
mul
mov
fs
cmp
and
gs
in
xchg
pcmpgtw
xor
inc
mov
stos
in
pop
mov
or
aad
mov
cli
mov
mov
or
push
not
out
pop
add
fchs
mov
xchg
jmp
sbb
jb
and
jns
sub
pop
mov
and
cmp
mov
push
fsubr
jmp
jb
aam
push
stos
imul
les
cmps
sub
push
mov
and
add
addr16
jne
adc
push
xor
add
push
or
ror
xor
adc
sbb
cs
dec
push
aaa
leave
cmps
pop
sub
stos
sbb
push
lds
stos
sbb
xor
xchg
mov
cmp
push
nop
inc
add
mov
test
int
icebp
ret
mov
test
fisubr
push
aas
ins
(bad)
xor
sbb
sbb
mul
cmp
sub
or
lea
mov
mov
cmps
inc
aas
mov
add
mov
sar
xor
mov
ja
jp
xor
xor
mov
sub
sub
xchg
shl
cmps
imul
movs
(bad)
out
dec
retf
stc
(bad)
outs
jl
mov
call
xchg
mov
mov
or
pop
or
jb
int3
popa
ret
fistp
inc
push
jbe
idiv
lds
push
xor
ds
out
sub
xchg
sub
ret
pop
sub
jmp
xor
pop
lea
enter
loope
aaa
dec
add
or
(bad)
mov
icebp
push
jae
push
and
push
aas
xor
adc
cmp
cmp
inc
leave
dec
jl
out
and
mov
test
call
hlt
inc
sub
mov
push
mov
sar
icebp
imul
loopne
xor
(bad)
neg
push
or
or
push
dec
or
dec
ins
lds
pop
cmp
les
xchg
cld
in
sbb
xchg
pushf
mov
fimul
push
not
retf
mov
test
cmp
jge
xchg
push
and
loope
mov
sar
icebp
std
lock
pop
loop
adc
fxch
mov
jge
fs
retf
adc
sti
mov
shl
xchg
call
lods
jmp
mov
das
xor
jg
mov
imul
xchg
add
or
jg
je
lods
aaa
pop
test
imul
or
sub
int3
cdq
ds
inc
fadd
loop
xchg
pop
xor
movs
xchg
pop
push
bound
jmp
or
jle
mov
sar
test
int
scas
mov
fistp
shr
or
arpl
push
xchg
cmc
sbb
rol
loope
cmp
mov
aas
mov
cli
test
mov
cmp
repnz
ds
ja
mov
jno
test
xor
jae
aas
mov
jns
mov
sar
dec
icebp
leave
aam
out
je
sbb
lock
mov
or
in
or
scas
mov
lds
cs
adc
add
mov
mov
test
mov
sti
popf
xchg
and
add
add
xor
jecxz
or
sbb
xchg
pop
or
mov
mov
mov
bound
or
xchg
fs
pop
pushf
verr
mov
adc
jmp
retf
mov
scas
frstor
mov
ret
mov
jne
data16
ds
xchg
pushf
lock
cmc
adc
(bad)
push
fwait
dec
movs
pop
aam
sti
repnz
push
in
ins
mov
popa
inc
mov
cdq
loop
jg
cli
sub
mov
ret
call
inc
and
mov
repz
pop
shr
clc
aam
(bad)
push
and
push
dec
sbb
push
mov
jnp
out
in
or
push
mov
jb
cmc
popa
mov
cwde
push
fidivr
adc
sub
push
add
ja
dec
jne
mov
xchg
cmc
popf
xchg
dec
push
out
push
add
ds
stos
mov
mov
mov
addr16
stc
inc
xor
retf
into
sub
clc
pop
sti
xor
push
cmp
and
fwait
xor
cli
mov
mov
imul
int3
mov
pop
sbb
pop
push
aam
push
clc
out
cmp
test
cmp
repz
call
in
cdq
sbb
test
sub
cmp
adc
sahf
jo
push
push
popf
scas
shl
xchg
(bad)
dec
idiv
and
jmp
fnstcw
mov
inc
jae
lea
ret
(bad)
jae
adc
enter
out
sub
ret
mov
xchg
mov
pop
dec
leave
je
daa
push
mov
cmp
push
(bad)
loope
loope
xor
fidivr
jno
xchg
jb
int
push
repnz
add
ins
dec
xor
mov
dec
pop
mov
std
jmp
sar
cs
jne
sahf
and
sub
mov
ins
shl
add
out
pushf
sbb
imul
call
mov
lock
adc
pop
std
jl
pop
push
push
mov
ins
ja
fld
mov
(bad)
ins
push
lds
stos
mov
ret
jb
mov
fidivr
in
jmp
test
pusha
bound
push
mov
mov
popf
cwde
push
in
jo
(bad)
std
push
mov
cmp
leave
and
sbb
sahf
xchg
jo
in
mov
cdq
aaa
adc
in
sbb
mov
push
mov
cs
(bad)
fidivr
pop
xor
ss
sahf
rcr
dec
ss
ret
xchg
fistp
jmp
int
out
stos
mov
fnstsw
shl
rcr
lods
push
or
jg
or
push
add
cmps
mov
aam
fimul
or
pushf
sti
dec
sub
leave
(bad)
mov
push
loop
clc
mov
jae
add
mov
in
mov
cmp
xchg
xchg
cmp
scas
mov
cli
bound
jae
mov
and
cli
sub
mov
pop
sbb
aas
mov
sbb
jae
sbb
nop
shl
dec
rcr
mov
jnp
mov
xor
out
jb
push
jecxz
jno
mov
dec
in
fsub
cld
repnz
xchg
jp
stos
mov
sub
adc
xchg
dec
stos
retf
sbb
retf
mov
dec
pop
repz
xor
xchg
dec
icebp
push
mov
retf
cdq
cmp
enter
int3
jle
ret
xchg
cli
call
xor
mov
xchg
mov
sub
jno
sub
test
rcr
mov
loopne
sbb
cmp
dec
ja
loop
add
repnz
cli
and
dec
sbb
mov
jo
xchg
jo
cmp
out
cmps
cmps
and
sub
and
stc
fst
or
add
xchg
aad
pushf
and
aas
int
fisub
arpl
push
clc
sbb
mov
or
(bad)
loop
rdtsc
mov
aaa
mov
jp
cmc
and
adc
(bad)
push
fwait
iret
add
mov
cmc
mov
mov
sbb
sub
inc
ds
out
fild
mov
sub
nop
xor
push
push
pop
jg
ss
sub
into
in
in
les
mov
call
mov
movs
fidivr
xor
pop
cld
pop
add
inc
mov
pop
mov
dec
inc
dec
inc
push
pop
mov
rcr
clc
mov
test
mov
xchg
sub
cmc
inc
clc
pop
fbstp
push
or
loope
jno
push
push
mov
sbb
stos
mov
fldcw
sbb
jle
cdq
lods
xchg
jmp
mov
dec
out
xchg
xor
fimul
xchg
pop
cmc
retf
inc
mov
imul
iret
pop
inc
and
dec
xor
add
je
ins
scas
cmp
in
inc
call
cmp
inc
mov
pop
mov
jo
enter
hlt
push
push
lock
sbb
(bad)
dec
out
sbb
dec
call
inc
cli
(bad)
ret
cli
xor
and
adc
mov
aad
call
jmp
sub
daa
ds
adc
push
pop
std
xor
mov
add
aam
ficomp
jbe
push
push
cld
cld
rcr
mov
cmc
pop
xchg
lds
jne
retf
adc
fdiv
inc
es
cmc
leave
mov
hlt
arpl
sub
ret
xchg
push
call
sbb
or
popa
loop
cli
xor
pop
push
cmp
inc
jb
adc
(bad)
je
xor
cld
int3
jnp
mov
cmp
shr
test
sbb
cmp
xchg
mov
pop
add
aam
mov
and
pusha
call
mov
push
(bad)
cmps
mov
xor
mov
push
xor
shr
shl
mov
loop
dec
shr
and
inc
retf
pop
xor
in
cmp
mov
sbb
jecxz
movs
xchg
inc
jo
int3
xor
repnz
aam
mov
push
mov
pcmpeqd
add
pop
stc
pop
movs
sbb
ja
pop
mov
adc
pop
dec
mov
pop
mov
mov
inc
dec
clc
fisubr
adc
out
test
mov
mov
adc
mov
mov
rcr
mov
inc
outs
add
push
sub
pop
lods
jge
adc
pusha
or
or
or
mov
sub
lahf
addr16
lahf
xchg
nop
push
arpl
loopne
push
inc
out
pop
sub
cmps
jge
mov
aad
out
or
mov
cld
ret
cmp
xchg
pop
xchg
xchg
pop
push
pop
imul
fst
mov
cmp
sbb
cmps
(bad)
inc
mov
cmp
popf
jae
jmp
aas
out
(bad)
inc
les
and
dec
icebp
out
aad
lds
xor
pushf
cmp
mul
cmp
repz
mov
dec
das
cmps
rcl
sbb
fisubr
jnp
retf
xchg
lds
fmulp
imul
ror
out
in
mov
jns
in
xor
(bad)
xchg
sub
(bad)
mov
xchg
mov
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loope
rcr
icebp
test
mov
mov
sub
test
mov
repnz
mov
test
mov
xchg
daa
stos
(bad)
jns
mov
call
mov
test
mov
test
mov
popf
aas
mov
out
mov
mov
lds
mov
test
repnz
or
xchg
arpl
in
cmp
repz
test
cmp
and
(bad)
jge
(bad)
out
in
or
mov
mov
mov
(bad)
and
cli
sub
les
scas
stc
jnp
icebp
lea
mov
test
mov
repnz
mov
lea
mov
repnz
(bad)
mov
test
mov
sbb
xchg
aam
jne
dec
push
inc
fadd
mov
ss
fnstenv
or
in
pop
xor
out
cmp
leave
sub
loopne
push
sbb
call
data16
xlat
cmp
adc
rcr
inc
xchg
fdiv
cmp
leave
test
xchg
cmp
test
push
mov
xor
out
test
mov
xor
mov
ss
mov
sar
mov
xchg
dec
cdq
cmp
dec
test
stos
sub
cld
adc
(bad)
(bad)
hlt
push
daa
aaa
mov
and
push
cmp
cmp
sub
jp
leave
xor
retf
mov
xor
push
and
ficomp
sbb
mov
js
mov
dec
inc
xchg
arpl
mov
xchg
mov
inc
mov
cmp
mov
retf
bound
dec
jge
jg
ds
sub
sub
inc
pop
inc
or
jge
out
push
(bad)
cmps
mov
ret
sub
ror
push
inc
mov
pop
sub
and
jp
ficomp
and
lds
icebp
mov
mov
xchg
das
mov
repnz
mov
mov
cli
xchg
jae
loop
aas
aaa
ss
stos
div
aam
mov
sar
cdq
cmp
dec
test
lds
mov
fcomp
dec
dec
push
loope
jbe
fnstcw
or
lods
mov
js
xchg
dec
imul
stos
loop
or
xor
lahf
xor
std
mov
or
or
mov
fisub
or
xor
test
pop
icebp
xor
jnp
pop
mov
std
mov
fimul
loopne
pop
js
fwait
mov
das
in
js
jne
(bad)
scas
push
das
dec
jb
inc
retf
add
and
sahf
scas
scas
scas
cmp
mov
inc
out
jg
fwait
and
and
dec
cmps
cmps
jmp
dec
adc
pop
inc
cli
test
(bad)
fcmovnu
repz
scas
xchg
xor
or
scas
pop
jns
jl
pop
rcr
aaa
xchg
xchg
mov
push
or
push
jecxz
adc
cmps
pop
hlt
lahf
sub
cmps
push
ds
aam
adc
daa
push
push
dec
mov
push
fucom
cmp
mov
leave
test
pop
jns
pop
mov
add
aam
xchg
mov
xor
add
hlt
and
pop
test
push
gs
sbb
dec
cdq
push
adc
xchg
outs
or
pop
cs
xor
jmp
pop
push
pushf
push
imul
push
ret
shr
js
jns
lds
mov
mov
mov
out
cmp
repnz
mov
mov
inc
ds
dec
div
jle
test
mov
xchg
dec
cdq
test
mov
popa
popa
dec
cli
adc
and
arpl
in
or
adc
cmp
xor
outs
sbb
cli
push
cmp
call
sbb
sub
push
lea
inc
cmp
jg
and
mov
push
enter
test
cmp
sub
mov
mov
mov
pop
cmc
push
jmp
inc
jns
sub
pop
out
mov
out
movs
and
idiv
in
add
out
test
xlat
and
dec
jnp
sbb
fcmovnb
dec
dec
pop
jl
dec
jae
add
or
mov
xchg
push
pop
mov
inc
loope
mov
cmp
mov
fwait
(bad)
movs
(bad)
leave
test
(bad)
sahf
push
mov
fnsave
inc
in
jmp
div
pop
jge
scas
out
inc
neg
fimul
mov
cmp
into
and
lods
cli
sub
lods
adc
cs
loopne
sbb
jl
test
cs
mov
icebp
jmp
(bad)
push
mov
xor
inc
push
daa
mov
mov
popa
sub
mov
jnp
icebp
test
mov
cmp
mov
test
mov
test
ja
sar
xor
jns
mov
aas
push
sub
fst
rcr
bound
xchg
inc
sar
inc
lods
out
mov
mov
rcr
lock
dec
mov
push
pop
mov
movs
xor
cmps
pop
mov
cmp
aad
push
mov
cld
sar
aaa
pop
enter
xor
aam
cmp
mov
nop
push
inc
xchg
inc
sub
mov
lea
push
ret
int3
mov
mov
ss
js
test
mov
jns
xchg
arpl
in
ds
jp
xchg
mov
pop
jo
stos
jecxz
data16
(bad)
jne
xchg
sbb
mov
icebp
add
(bad)
sbb
sbb
imul
(bad)
test
and
test
mov
mov
test
mov
test
repnz
fldcw
ror
jne
mov
div
lea
mov
test
mov
cmp
aaa
add
xor
(bad)
mov
rol
cdq
mov
dec
div
xor
cmp
test
pop
jo
shl
cli
in
and
lds
int
and
or
push
cmps
lds
xchg
retf
pop
enter
xor
inc
adc
into
jmp
jle
sbb
push
push
push
xor
cmp
out
enter
enter
mov
xor
add
rcl
xchg
jnp
cs
pusha
gs
mov
pushf
lods
mul
mov
movs
mov
shl
sahf
rcl
mov
es
xchg
push
nop
jg
sub
leave
or
xor
and
aas
ss
cmp
out
cmp
repnz
aas
mov
add
div
cmp
cmp
dec
mov
push
mov
mov
movs
and
cli
mov
mov
int
movs
cmp
pop
test
adc
pop
pop
fcomp
das
adc
mov
jl
cli
add
imul
aad
add
cdq
xchg
jbe
mov
sbb
movs
in
mov
enter
cli
mov
sub
mov
sub
pop
push
mov
hlt
retf
and
shl
mov
inc
push
xor
mov
pop
adc
inc
xor
push
xchg
pushf
into
mov
adc
sub
jb
jb
jmp
pop
bound
fdiv
inc
pop
xor
dec
loope
sbb
retf
mov
jno
sbb
jae
std
(bad)
aam
(bad)
dec
arpl
iret
rol
pop
mov
clc
lds
sub
cmp
mov
test
mov
repnz
mov
sar
xor
cmp
cmp
mov
mov
pop
cmp
adc
sub
stos
jecxz
retf
enter
pop
into
sbb
cmp
sbb
(bad)
push
(bad)
aad
pop
mov
int3
or
mov
pop
popf
rol
int
mov
js
inc
xor
bound
mul
add
loope
daa
cmp
sti
adc
xchg
fisttp
cmp
inc
out
or
retf
adc
mov
xchg
sbb
inc
adc
loopne
push
xchg
cdq
and
ret
mov
imul
cmp
or
(bad)
xor
cmps
jp
jl
mov
dec
clc
lock
add
pop
int
dec
loopne
pusha
cmps
iret
cmp
jae
mov
push
test
xchg
pop
sub
test
cmp
(bad)
push
outs
mov
xor
mov
jnp
sar
dec
icebp
push
mov
dec
out
aad
lds
xor
pushf
cmp
mul
cmp
repz
mov
dec
das
cmps
rcl
sbb
fisubr
jnp
retf
xchg
lds
fmulp
imul
ror
out
in
mov
jns
in
xor
(bad)
xchg
sub
(bad)
mov
xchg
mov
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loope
rcr
icebp
sub
sar
test
cmc
test
mov
test
mov
test
mov
test
mov
popf
sbb
out
jmp
aas
mov
cmp
mov
test
mov
lea
mov
cdq
sub
cdq
test
mov
(bad)
popa
in
test
std
push
push
add
scas
(bad)
sbb
push
inc
sub
cmc
mov
cmp
repnz
cs
push
ins
std
and
xlat
mov
xchg
(bad)
pop
shl
mov
test
mov
cmc
push
mov
ins
or
cmp
icebp
inc
stos
xchg
push
and
push
outs
loope
popa
cli
pop
inc
ret
arpl
test
mov
test
mov
mov
cmp
aad
push
enter
fcom
jg
mov
cmp
test
mov
jno
mov
gs
and
adc
jmp
aad
xor
call
xchg
test
repnz
mov
mov
adc
movs
lahf
fs
sub
stos
and
call
test
or
and
xchg
retf
cmp
push
jecxz
and
or
loopne
nop
int
fstp
xchg
fiadd
inc
dec
add
and
xchg
out
push
test
mov
fst
not
sbb
(bad)
sar
imul
cmp
imul
xchg
cmps
mov
stc
inc
mov
mov
popf
lea
push
pop
pop
xchg
mov
mov
mov
ficom
jge
popf
cmp
lods
test
mov
loope
mov
pop
sub
lock
sahf
outs
xchg
not
xchg
ja
pop
mov
cmp
int3
test
mov
sub
jne
cmp
xacquire
jne
cmp
bnd
mov
xchg
outs
call
test
mov
cdq
dec
mov
add
dec
scas
test
mov
test
mov
test
mov
clc
pop
jecxz
test
mov
test
mov
test
mov
jnp
mov
sti
test
mov
test
mov
xchg
sub
icebp
test
mov
test
mov
xor
cmp
jp
cmp
repnz
mov
test
mov
test
mov
test
mov
xchg
repnz
mov
test
mov
repnz
jmp
sti
cmps
pop
mov
dec
cdq
test
mov
sub
cli
ja
popf
aas
push
sbb
jp
sbb
xchg
pop
push
pop
jb
jecxz
pop
ss
jns
inc
int3
or
jbe
call
les
or
in
push
sub
data16
pop
shl
mov
std
iret
and
in
ins
aaa
xchg
pop
adc
loopne
ficomp
test
adc
mov
jl
inc
xchg
es
je
cmp
push
pop
dec
scas
push
push
rol
test
mov
lds
repz
xor
dec
push
(bad)
mov
push
rol
jmp
jecxz
dec
(bad)
jmp
mov
mov
imul
ret
mov
inc
or
fs
pop
icebp
or
adc
pushf
pop
je
pop
cmp
cmp
mov
mov
fbld
popa
cmp
ins
push
push
push
test
pushf
xor
or
adc
adc
jmp
shl
fistp
cmp
icebp
dec
xchg
dec
lods
sub
jno
out
mov
ins
dec
xchg
jmp
fistp
(bad)
mov
popf
dec
loope
push
or
cmc
(bad)
mov
cmc
adc
je
cld
jmp
icebp
jnp
fsub
fimul
add
pop
fdivr
add
inc
add
ss
push
cdq
movs
rol
rcr
sub
jmp
(bad)
in
inc
jg
mov
and
mov
imul
in
int3
xchg
jmp
out
pop
push
pop
ins
sub
jne
cdq
sub
in
mov
push
mov
or
pop
ficomp
xor
imul
jmp
lock
shl
sub
xlat
pop
ins
sub
adc
mov
inc
push
sbb
pop
cwde
test
sbb
fsubr
dec
fild
nop
adc
mov
call
in
and
xchg
push
and
scas
aam
call
in
and
xchg
push
and
scas
aam
call
in
and
xchg
push
mov
(bad)
push
dec
cmp
test
enter
xchg
dec
jmp
ret
jne
jnp
push
pushf
(bad)
mov
mov
les
jnp
mov
call
scas
movs
sti
ret
jbe
dec
mov
leave
mov
push
inc
js
std
jns
inc
popa
mov
(bad)
cli
push
(bad)
repnz
test
mov
xor
(bad)
leave
mov
jp
loop
fimul
inc
enter
adc
cmc
add
xchg
push
mov
lods
xchg
jnp
imul
jnp
ja
jmp
mov
mov
mov
dec
icebp
sub
stos
xchg
dec
xor
imul
loop
adc
cwde
or
xor
jo
mov
fimul
cmps
popa
xor
xchg
pusha
add
jae
sub
dec
cmc
sbb
fild
inc
popa
in
int
pushf
stos
sub
cwde
and
sbb
and
push
mov
scas
jmp
stos
sub
cwde
and
sbb
and
push
mov
scas
jmp
stos
sub
cwde
and
sbb
and
in
sar
mov
mov
adc
ror
ret
movs
cmp
(bad)
pop
inc
fcmovbe
push
aad
hlt
dec
adc
out
test
push
or
push
js
scas
repnz
mov
arpl
xchg
gs
sub
or
(bad)
push
cmps
and
pop
jo
mov
and
fwait
cmp
pop
sub
jmp
mov
push
add
test
pop
and
out
test
sahf
xor
adc
jmp
imul
or
add
loope
xor
js
jmp
mov
(bad)
pop
jecxz
and
pop
test
popf
dec
push
fcmovnb
inc
jns
push
pop
je
xchg
or
mov
mov
push
aaa
fwait
in
push
(bad)
retf
push
mov
fbstp
push
pop
and
div
mov
and
xchg
retf
popa
stos
test
mov
inc
inc
jecxz
push
in
movs
in
or
fild
push
add
imul
inc
rcr
add
loopne
daa
fcmovb
push
sub
dec
fld
lea
ds
inc
pop
frstor
push
imul
jae
add
arpl
lea
in
movs
in
or
lea
int
das
fistp
mov
xchg
jp
or
cmp
sbb
popa
repz
das
fistp
mov
xchg
jp
or
cmp
sbb
popa
repz
das
fistp
mov
xchg
jp
or
cmp
sbb
popa
repz
das
fistp
mov
xchg
jp
or
cmp
sbb
popa
repz
das
out
mov
mov
mov
add
xchg
(bad)
pop
sub
out
test
sahf
cmp
push
ret
inc
retf
test
sub
push
or
(bad)
mov
mov
ins
loop
push
ror
mov
or
add
mov
mov
sar
dec
xchg
das
mov
xor
cmps
test
mov
add
icebp
mov
mov
div
(bad)
icebp
aaa
movs
aas
(bad)
add
mov
mov
ret
jge
jge
mov
mov
ficomp
xor
mov
fwait
dec
jb
shl
stc
jp
push
iret
mov
scas
xor
dec
sbb
call
add
cmps
sub
cdq
gs
iretw
mov
jle
(bad)
(bad)
leave
adc
mov
mov
jo
in
mov
inc
es
fsubr
dec
push
rcr
mov
(bad)
movq
mov
aad
scas
daa
imul
and
jmp
adc
cld
adc
ss
out
sar
pop
mov
ret
fnsave
pushf
and
test
mov
fwait
jne
pop
jo
mov
add
test
xor
cmp
in
and
loopne
rol
test
adc
(bad)
out
xchg
loop
push
imul
cmp
out
cdq
xlat
and
movs
daa
mov
cmps
test
call
pop
mov
in
mov
outs
pop
call
shr
aaa
in
sub
aaa
out
pop
mov
ss
lahf
dec
call
ins
or
fs
nop
dec
adc
mov
ss
jle
adc
imul
ja
rcr
enter
arpl
mov
push
and
leave
mov
fidivr
add
std
mov
jmp
cld
inc
cmps
and
and
test
jle
or
mov
out
arpl
or
jo
bound
test
dec
cmp
icebp
lods
push
fld
xor
fld
pop
inc
sub
in
pop
jbe
and
adc
dec
or
rol
xor
xor
pop
or
(bad)
out
pop
dec
mov
(bad)
pop
jo
jg
adc
fs
inc
cmp
add
pop
ins
sbb
pusha
push
cmp
jmp
hlt
mov
dec
mul
push
retf
repnz
sahf
pop
aad
(bad)
leave
xor
xchg
test
dec
out
popf
pop
cmps
mov
int
or
sahf
stos
mov
imul
das
aas
loop
mov
push
push
pop
icebp
xchg
push
pushf
pop
cmp
xchg
sub
add
jmp
push
pop
pop
ret
lock
in
and
outs
or
ja
jno
push
call
xchg
inc
stc
xchg
ins
mov
inc
xor
xchg
call
mov
out
mov
dec
cs
mov
pop
jp
into
mov
aaa
adc
jle
loop
xor
pop
lods
bound
jg
xor
mov
cmp
mov
push
and
fdivr
adc
fistp
cli
lods
push
inc
mov
xor
es
in
scas
retf
fisub
lahf
jae
push
lods
in
hlt
cwde
xor
mov
jmp
push
push
adc
int3
out
cld
adc
add
fdivr
adc
fistp
cli
lods
push
inc
mov
xor
es
in
scas
retf
fisub
lahf
jae
push
lods
in
hlt
cwde
xor
mov
jmp
push
push
adc
int3
out
cld
adc
add
fdivr
adc
gs
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
(bad)
aaa
mov
mov
xor
lods
sub
push
scas
pop
mov
jmp
(bad)
and
push
mov
inc
push
jne
fwait
xchg
mov
mov
in
sub
in
xor
lods
sub
push
scas
pop
mov
jmp
(bad)
and
push
mov
inc
push
jne
fwait
xchg
mov
mov
in
sub
in
xor
lods
sub
xchg
dec
and
inc
in
cmp
add
mov
jmp
retf
out
sbb
out
test
(bad)
fidivr
imul
in
rcl
arpl
mov
mov
pmuludq
jns
sub
pop
cmps
(bad)
outs
sbb
sub
lods
or
jae
call
mov
inc
inc
in
cmp
(bad)
pusha
jmp
mov
xor
sub
inc
stos
repnz
stos
adc
sbb
test
sbb
out
xchg
xor
loopne
repnz
xor
adc
xchg
sub
call
lock
ins
jo
pop
fbstp
loop
jmp
cmp
sar
add
and
les
(bad)
inc
pop
pop
add
popa
and
div
mov
pop
mov
mov
xor
sub
icebp
and
icebp
lea
mov
lea
mov
test
stos
inc
ja
cli
sar
xchg
jnp
test
jecxz
(bad)
jle
push
xor
xor
div
aam
mov
inc
fwait
gs
cmp
hlt
or
sbb
mov
shl
retf
dec
xchg
mov
jg
push
fs
popf
cmp
add
repz
ins
inc
(bad)
gs
or
xchg
jecxz
inc
(bad)
xchg
sub
call
(bad)
ds
xchg
and
mov
sbb
or
mov
loop
aam
mov
or
loop
aam
mov
or
loop
enter
or
lods
cmp
lock
or
add
push
push
mov
sbb
sbb
js
sbb
movs
pop
rcr
jb
xlat
ins
iret
sub
ficom
jns
mov
cmp
retf
stos
stos
jno
pushw
jmp
fadd
pushf
scas
and
arpl
retf
sbb
loopne
sub
dec
stos
out
pop
mov
or
or
scas
test
ins
jo
jmp
cdq
add
popf
popa
into
xchg
mov
inc
fisub
xadd
and
xchg
cmovb
in
dec
(bad)
lods
xor
add
push
mov
push
cmc
les
and
sar
xchg
popf
adc
mov
mov
push
inc
and
and
xchg
mov
cmp
push
inc
adc
mov
fimul
shr
enter
or
in
xchg
jmp
xchg
sbb
inc
shr
or
push
dec
mov
fdivrp
std
into
rol
data16
neg
aas
mov
sub
out
neg
aas
mov
sub
out
not
sbb
fist
mov
ins
push
or
mov
add
jp
dec
(bad)
mov
add
das
jle
sbb
ret
xchg
sbb
pop
sub
pop
xchg
setle
outs
ins
jmp
cmps
ficom
adc
sbb
iret
mov
mov
popf
pop
ins
or
scas
jnp
cmps
shl
xchg
leave
cwde
fsub
imul
cmp
lods
cmp
fsub
jle
ja
mov
leave
scas
fidiv
push
mov
or
mov
imul
or
mov
imul
or
pop
cmps
or
into
mov
in
inc
jmp
pop
sbb
dec
mov
cwde
or
add
jge
pop
loop
ret
in
cmp
add
xchg
cmp
xor
fucom
jmp
adc
out
dec
xchg
lea
sub
jae
cmp
sub
fcomp
add
lds
add
and
or
retf
inc
push
dec
adc
dec
pop
or
(bad)
jmp
lds
call
lea
sub
arpl
call
sahf
add
and
inc
cld
pop
scas
cmps
jecxz
int
and
push
mov
pop
mov
dec
jae
addr16
aad
enter
xlat
add
call
jbe
imul
scas
mov
loop
jge
push
rol
pop
mov
add
jb
mov
add
jb
mov
add
jb
mov
add
jb
mov
add
aam
adc
and
fwait
mov
aam
adc
and
fwait
mov
aam
adc
and
fwait
mov
aam
adc
and
fwait
mov
fcomp
sbb
fcomp
sbb
fcomp
sbb
fcomp
sbb
fcomp
sbb
jns
dec
icebp
lds
mov
mov
mov
xchg
sub
inc
sub
and
je
mov
mov
test
ds
xor
aaa
(bad)
stos
cli
test
lds
movs
aas
(bad)
popf
(bad)
mov
xor
mov
movs
xor
loop
jno
mov
jbe
dec
out
fimul
ret
inc
js
pushf
jl
and
sub
popa
lods
adc
add
lahf
sbb
add
test
or
mov
dec
stc
mov
add
retf
cdq
mov
jle
jge
leave
xor
pushw
fimul
xchg
xchg
nop
cmp
popf
mov
mov
arpl
and
retf
push
add
(bad)
mov
retf
fsubr
inc
inc
mov
push
inc
je
ds
dec
(bad)
retf
adc
das
jle
sub
(bad)
fcom
aaa
mov
(bad)
test
dec
sub
xchg
xchg
rcr
test
dec
icebp
packssdw
scas
lahf
stos
mov
or
imul
movs
xchg
inc
cli
ss
fidiv
xchg
out
test
sar
push
shl
jae
retf
mov
push
sar
pop
stc
fneni(8087
(bad)
jecxz
xor
mov
push
mov
dec
pop
fisub
sbb
movs
sbb
sar
nop
adc
fwait
shl
dec
pop
fisub
sbb
movs
sbb
sar
nop
adc
fwait
shl
dec
pop
fisub
sbb
movs
sbb
sar
jnp
test
push
dec
icebp
scas
adc
pushf
enter
data16
cdq
sbb
shl
hlt
nop
jo
fmul
lea
arpl
retf
push
mov
clc
xor
arpl
or
aad
push
out
aas
inc
out
outs
pop
leave
cmp
lds
adc
jmp
enter
mov
xchg
outs
xor
daa
add
aad
jae
xchg
icebp
mov
cmps
(bad)
and
fwait
and
das
icebp
xchg
or
mul
push
sbb
stos
xor
in
gs
jp
pushf
outs
dec
sub
loope
dec
ret
xchg
mov
add
fidiv
mov
dec
jnp
fnstenv
mov
cmp
sbb
in
or
mov
jg
lock
icebp
cmc
or
or
sub
dec
jnp
fnstenv
mov
adc
(bad)
add
fdivr
or
mov
into
pmulhuw
cmp
dec
je
dec
outs
xchg
xchg
sub
xchg
popa
sbb
movs
add
(bad)
(bad)
out
xor
aad
xchg
(bad)
sub
mov
adc
jle
popf
jne
mov
add
movs
and
into
(bad)
fdiv
pop
ret
mov
in
push
fstp
cmp
and
pop
in
xchg
sub
int
int3
or
jns
sbb
test
push
(bad)
lock
(bad)
js
fadd
es
push
mov
cmp
scas
push
jle
xchg
daa
push
retf
ret
mov
jne
les
xlat
sub
icebp
xlat
jmp
inc
xchg
sub
lock
mov
cs
xor
sub
mov
sbb
test
add
not
loope
call
inc
jnp
stos
call
push
adc
or
dec
push
pop
push
dec
add
jmp
dec
ret
dec
shr
lds
sbb
inc
add
inc
cld
daa
imul
dec
push
and
inc
mov
sub
imul
mov
adc
mov
aaa
mov
popf
sti
push
fiadd
not
repnz
mov
mov
mov
mov
ret
sbb
andps
rol
adc
push
fcmovb
add
(bad)
pop
push
add
sbb
add
cmp
out
out
jecxz
mov
pop
add
adc
test
fstp
push
in
and
jmp
cmc
call
xlat
sbb
jp
pop
bound
in
(bad)
test
and
or
in
xchg
ins
xor
(bad)
leave
cli
dec
or
test
xor
stos
push
add
cmps
movs
cli
sbb
xor
cmp
cdq
push
pop
mov
cmp
jb
daa
scas
push
rcr
ins
and
ror
mov
push
lahf
xchg
sub
aad
mov
mov
mov
mov
sbb
popa
or
in
jb
pusha
rdmsr
jecxz
cmps
jb
inc
scas
daa
inc
(bad)
movs
loop
je
jl
mov
lods
xchg
ror
cmp
push
mov
int3
add
mov
enter
fwait
mov
mov
pop
lds
icebp
adc
arpl
and
sub
aam
cmps
sub
aaa
sub
test
or
xchg
jmp
ins
pop
into
mov
mov
or
ss
(bad)
or
pop
push
fdivr
(bad)
shl
xchg
inc
pop
ret
add
adc
mov
pop
or
cmp
test
jae
fs
addr16
jbe
mov
sar
inc
cmp
mov
jmp
add
xor
lods
jns
test
and
pop
xchg
push
mov
push
pop
adc
ficomp
aaa
shl
pop
sbb
mov
sbb
gs
pop
or
pop
loop
fsub
mov
setg
ins
mov
ja
hlt
cmp
pop
sbb
pop
push
js
mov
stc
mov
pushf
sbb
in
data16
dec
jg
mov
push
mov
div
mov
jbe
add
rcr
inc
fnstcw
jg
mov
jae
cld
push
fs
lahf
adc
int3
shr
rcl
adc
enter
push
sub
dec
push
mov
xor
lahf
ret
dec
jp
jle
xchg
push
loop
push
or
xchg
sub
push
dec
jmp
fist
or
sbb
adc
cmps
xchg
dec
pop
out
call
inc
movnti
dec
imul
shr
rcr
push
arpl
out
cmp
sub
loop
and
test
adc
aas
cmp
pop
add
adc
cwde
xor
cli
cmps
xchg
das
aad
lahf
jg
xchg
adc
sub
cmp
test
(bad)
lahf
and
or
cmp
inc
mov
mov
ror
jecxz
test
and
and
or
and
mov
popa
rcl
cmp
mov
inc
fistp
pop
pop
xor
push
or
test
xchg
xchg
or
push
xor
adc
neg
rcr
and
stos
jg
mov
pusha
sti
cmps
pop
and
mov
popa
rcl
cmp
mov
inc
fistp
pop
stos
sbb
push
xor
jp
inc
add
(bad)
mov
into
retf
ss
mov
(bad)
sub
hlt
jl
xor
jecxz
ins
sbb
fstp
fmulp
pop
jl
mov
dec
icebp
(bad)
adc
push
mov
jne
dec
cdq
inc
xchg
push
mov
and
jo
ja
ja
cwde
cmps
mov
dec
jp
adc
push
cld
sti
and
sar
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fidivr
jg
fiadd
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
or
jecxz
gs
das
(bad)
outs
mov
jnp
lods
lds
das
(bad)
outs
mov
jnp
lods
lds
das
(bad)
outs
mov
jnp
lods
lds
das
cmp
mov
or
(bad)
cmp
or
(bad)
cmp
or
(bad)
cmp
or
(bad)
cmp
or
(bad)
pop
dec
xor
test
push
inc
pusha
add
pop
mov
leave
hlt
jecxz
cmp
in
mov
retf
shr
movs
and
pusha
sbb
lahf
dec
dec
retf
movs
imul
mov
ficom
call
lock
sub
and
inc
add
pop
add
pop
dec
push
push
sar
inc
mov
pop
hlt
jns
pop
dec
lock
jne
lods
add
test
clc
(bad)
push
dec
aam
xor
sti
mov
inc
std
int
mov
hlt
dec
xor
(bad)
pop
int
aam
xor
sti
mov
inc
std
int
mov
hlt
dec
xor
(bad)
pop
int
aam
xor
sti
mov
inc
std
int
mov
hlt
dec
xor
(bad)
pop
int
aam
xor
sti
mov
inc
std
int
mov
hlt
dec
xor
(bad)
pop
int
aam
xor
sti
mov
enter
outs
nop
mov
movs
or
pop
hlt
sub
fs
xchg
jg
inc
push
xchg
pusha
movs
push
ins
dec
call
adc
mov
out
and
mov
shr
in
shl
shl
(bad)
mov
pop
pop
in
adc
(bad)
sub
jecxz
pop
lea
into
push
ins
movs
mov
push
xor
jbe
movs
daa
shr
sti
rol
mov
mov
fwait
sub
and
sub
hlt
and
jmp
out
outs
nop
mov
or
aaa
mov
sub
mov
test
mov
test
je
cmp
cmp
add
xor
out
cmp
or
add
mov
xchg
dec
cld
mov
cmp
idiv
ficom
dec
cmp
movs
pop
sub
jl
cmp
or
xor
xchg
mov
sub
fbld
sbb
daa
mov
call
idiv
repz
imul
ins
xor
es
icebp
mov
sbb
sbb
test
adc
loopne
inc
fxch
pusha
rcr
icebp
jmp
xor
leave
jecxz
fistp
hlt
in
les
jl
sub
cmp
dec
icebp
sahf
jno
in
call
push
add
loope
repnz
rol
imul
sbb
xchg
mov
xchg
mov
clc
sti
jmp
scas
enter
hlt
cmp
bound
add
adc
(bad)
cs
ja
jnp
stos
and
call
into
lods
and
xchg
clc
and
pop
imul
sbb
push
(bad)
lods
sbb
fwait
(bad)
sub
or
clc
dec
ds
aam
cmp
fbld
sub
jg
test
xor
loopne
scas
test
mov
pop
add
mov
pusha
sub
jbe
mov
fsub
shr
jge
cmp
jp
movs
adc
(bad)
mov
sub
popf
fistp
sub
mov
sbb
loope
ins
out
aam
jl
int3
or
pop
inc
sub
push
sbb
jb
adc
(bad)
xchg
pop
sub
popf
fistp
dec
mov
pop
rol
ins
inc
(bad)
pop
repz
sub
call
in
daa
hlt
fdiv
aad
fwait
jo
aaa
outs
test
dec
adc
es
daa
sub
(bad)
pop
pop
popf
pop
mov
mov
retf
jnp
cld
loope
xchg
in
cs
out
mov
test
push
in
cmp
ins
push
repnz
sub
jne
sub
inc
rol
mov
and
add
cdq
sbb
int
push
outs
and
and
xchg
es
sar
shl
xor
shr
jb
pop
das
jmp
xor
push
jp
cli
push
jae
cdq
nop
sbb
and
fld
das
fnstenv
test
fwait
mov
push
cmps
inc
outs
dec
xchg
xor
dec
add
dec
cwde
popf
cld
ds
in
cmp
out
(bad)
sbb
out
dec
xor
or
out
test
lock
sar
(bad)
pop
jae
ret
pop
mov
jnp
in
gs
mov
mov
es
movs
cdq
pop
inc
adc
or
mov
inc
push
pop
inc
mov
and
adc
xor
jb
push
push
loopne
sbb
int3
mov
push
jge
jb
out
(bad)
test
ins
out
fxch
or
dec
ins
gs
xchg
je
inc
scas
rcl
retf
aas
cmp
mov
push
jge
into
daa
in
sar
jecxz
cwde
shl
jae
mov
cmp
jno
and
nop
(bad)
cmp
sbb
xchg
pop
fisub
jnp
xor
cwde
repnz
std
sti
ja
mov
mov
sti
cmp
xchg
mov
in
dec
jno
pop
inc
ret
data16
jbe
mov
pushf
xor
mov
leave
in
mov
lds
and
cmp
adc
add
movs
jns
mov
mov
ror
ret
dec
nop
ins
pusha
sbb
jge
movs
jns
mov
sub
bound
xchg
sbb
dec
out
mov
add
xchg
enter
sti
mov
xchg
pop
pop
out
mov
cmp
ss
cmp
fwait
mov
push
pop
lock
mov
jo
int
push
lock
inc
in
cmp
jmp
lock
fwait
scas
icebp
ret
add
pop
test
add
popf
adc
int3
mov
fs
inc
mov
icebp
in
sbb
cmc
jne
inc
push
cmp
lds
hlt
fwait
sbb
mov
mov
mov
lds
jl
sbb
repz
and
mov
sbb
repnz
mov
je
ret
mov
mov
xlat
test
mov
xchg
mov
pop
sub
inc
and
jno
pop
xchg
(bad)
jo
pop
mov
mov
test
stc
jp
mov
mov
mov
xor
fld
ja
jp
mov
stc
(bad)
rcr
sahf
in
sahf
scas
adc
out
xor
inc
push
int3
push
mov
jmp
mov
cmp
call
cmc
mov
or
jo
clc
inc
lahf
fadd
sahf
jp
(bad)
fisub
das
dec
fwait
lods
adc
adc
pop
scas
fs
and
sbb
dec
scas
rcl
fwait
lods
js
push
cmp
jnp
test
mov
sub
repnz
mov
cdq
sahf
mov
adc
clc
cmc
sub
mul
and
pop
ds
aad
dec
inc
cld
imul
xchg
shr
dec
fsubr
push
scas
enter
lock
mov
shr
outs
loopne
push
into
retf
retf
dec
imul
or
sbb
jl
jl
call
xor
jb
mov
mov
jb
pop
xor
inc
push
sbb
add
or
(bad)
sub
or
xor
dec
pop
rol
pop
or
mov
sub
xor
jmp
jecxz
cmp
jmp
(bad)
ror
push
pop
mov
xchg
push
pop
imul
push
cdq
das
cmp
jle
and
mov
push
out
jmp
(bad)
or
adc
jnp
cmc
or
test
mov
test
repnz
dec
jmp
pop
sub
jno
cld
int
xchg
arpl
call
xor
push
inc
push
out
(bad)
mov
mov
sub
loop
pushf
dec
loop
add
loop
lahf
pop
push
fld
adc
loop
sbb
and
pop
push
fld
mov
sub
sub
push
jae
aam
sbb
and
pop
push
mov
sub
mov
mov
repnz
clc
aam
sbb
and
int
xchg
arpl
jae
aam
sbb
and
adc
clc
aam
sbb
and
jmp
pop
sub
loop
pushf
int
fbld
stos
and
xor
xchg
arpl
inc
jmp
pop
sub
push
imul
push
fld
mov
sub
loop
pushf
pop
push
fld
sub
outs
xchg
aaa
mov
cli
test
mov
repnz
inc
jg
xor
les
test
(bad)
add
lock
sbb
in
dec
loop
fs
jmp
div
cmp
and
mov
mov
loop
inc
xor
imul
and
in
push
mov
aas
(bad)
in
sti
mov
jmp
sahf
push
adc
sahf
or
or
shl
xchg
push
(bad)
pop
sub
pop
fstp
xor
sbb
push
jae
mov
pop
dec
or
ins
mov
loopne
(bad)
and
sbb
sbb
out
test
loop
push
dec
xchg
gs
fsubr
pushf
dec
aas
xlat
les
loop
pop
inc
sub
aam
push
call
cmp
cli
fwait
jnp
test
mov
stc
arpl
jl
adc
mov
nop
or
dec
cwde
std
add
cmps
in
fwait
jo
fwait
xor
or
out
popf
cmp
sub
stc
add
test
jmp
xchg
out
stos
repnz
pusha
mov
test
imul
dec
adc
push
outs
das
outs
pop
xor
jmp
jnp
cmp
test
dec
pop
sub
sahf
test
jle
mov
imul
call
ret
lods
inc
nop
sbb
das
push
or
sbb
jb
fs
xor
sbb
cmps
ror
ret
dec
xchg
lods
nop
ret
mov
les
out
shl
aam
mov
xor
xor
(bad)
sub
dec
fstp
cwde
adc
(bad)
xchg
sbb
push
dec
aas
sahf
dec
jno
jp
push
mov
fdiv
add
shr
test
inc
push
or
sbb
pushf
add
add
pop
pop
add
sbb
cli
add
pop
shl
ror
nop
mov
shl
ror
nop
mov
shl
ror
nop
mov
shl
ror
nop
mov
shl
shl
jns
sbb
in
xchg
jmp
cs
gs
sub
movs
mov
rol
mov
shr
pop
push
sub
in
fisttp
aam
lods
cli
dec
lods
rol
and
adc
sub
xchg
lods
adc
sbb
fcmovnb
nop
out
shl
jns
and
xchg
lahf
xchg
aaa
cwde
pop
mov
(bad)
add
push
out
and
ja
mov
aaa
cwde
pop
mov
(bad)
add
push
out
and
ja
pop
sbb
sbb
xlat
sbb
lods
xlat
lods
outs
mov
enter
daa
push
loopne
sub
cld
pop
pop
imul
in
push
pop
lods
xlat
lods
outs
mov
enter
daa
push
loopne
sub
cld
pop
pop
imul
in
push
mov
test
jbe
sub
into
inc
repnz
push
xlat
push
retf
ss
jns
out
push
mov
mov
stos
ss
(bad)
stc
lods
loopne
aaa
sti
mov
rol
mov
and
inc
jo
mov
xor
mov
xchg
xchg
push
xchg
div
xchg
xor
inc
jg
repnz
jle
ja
jle
xor
lds
jne
jp
xor
xor
neg
xlat
int3
push
test
mov
pop
inc
scas
push
adc
mov
xchg
sub
jmp
jae
xor
mov
lods
xchg
(bad)
test
stos
pop
adc
test
push
sti
loope
mov
sub
fs
sub
mov
dec
loope
lods
loop
retf
fbstp
or
pop
inc
out
cmp
sahf
xchg
jb
and
test
ja
add
outs
sbb
jecxz
lahf
mov
and
push
add
push
pop
dec
xor
aam
rcr
out
inc
aam
rcl
mov
adc
int
xchg
arpl
xor
lods
fnstenv
cmp
sub
sub
popf
sub
mov
mov
out
into
out
sub
sub
adc
scas
or
xor
inc
ret
and
(bad)
or
stos
enter
aaa
test
in
adc
pop
sub
fdivr
xchg
imul
push
fld
mov
sub
out
pusha
inc
mov
and
imul
or
xchg
int3
push
rcl
mov
jbe
jnp
outs
or
mov
lock
sar
sar
sar
sar
sar
add
mov
mov
ins
xor
inc
es
push
arpl
stc
adc
icebp
add
pushf
daa
xchg
mov
sub
shl
and
add
cld
dec
pop
xchg
popa
mov
repnz
(bad)
imul
dec
xchg
fdivr
and
xchg
ficom
(bad)
aad
cld
arpl
scas
dec
pop
mov
leave
inc
pop
inc
pusha
jle
jl
sbb
(bad)
and
inc
push
mov
sbb
dec
xchg
std
sub
dec
mov
scas
jle
adc
or
pop
inc
in
dec
push
pop
popa
ror
dec
test
jge
ret
xlat
mov
jne
jge
mov
sbb
mov
movs
mov
jecxz
aad
cwde
mov
fwait
arpl
dec
fisubr
inc
cmps
hlt
inc
and
jne
inc
shr
ret
aaa
inc
loop
add
cmp
mov
sub
test
neg
pushf
call
mov
dec
xchg
or
cmp
mov
jle
(bad)
sbb
ret
mov
das
bound
fst
rol
mov
jb
lea
xor
xchg
xor
fiadd
jno
das
add
int
xchg
arpl
arpl
aam
arpl
stos
frstor
stos
frstor
stos
frstor
stos
frstor
stos
frstor
stos
frstor
stos
frstor
stos
jns
jmp
in
and
pop
das
push
ss
daa
xchg
stos
je
cdq
fsubr
popf
mov
adc
push
ss
daa
xchg
stos
je
cdq
fsubr
popf
mov
adc
lods
and
adc
and
adc
and
adc
and
adc
and
icebp
lds
mov
lea
mov
lea
mov
cmp
mov
add
div
cmp
xchg
repz
push
xor
sar
mov
dec
fisubr
ja
repnz
stc
dec
nop
mov
into
mov
ja
cwde
sub
xor
xor
adc
mov
xlat
(bad)
cwde
je
mov
push
jecxz
mov
cmp
sti
loop
test
repnz
jnp
inc
nop
mov
loope
pop
les
ss
retf
add
mov
mov
outs
popf
scas
inc
sub
aam
xchg
fsubr
and
push
shl
mov
and
sub
clc
xor
fnstenv
movs
cmp
aas
mov
idiv
mov
xchg
add
cmp
scas
out
jge
jae
(bad)
or
push
lahf
push
mov
or
dec
inc
enter
jmp
icebp
mov
aad
(bad)
push
fild
cmps
fld
ret
or
jno
imul
mov
add
add
xor
scas
enter
ja
dec
std
add
fiadd
cwde
jo
inc
mov
pop
icebp
or
and
dec
fbstp
sub
cwde
ja
mov
or
xchg
scas
push
mov
jmp
test
imul
push
scas
loopne
xchg
mov
xchg
shl
or
or
mov
out
mov
(bad)
call
js
jb
mov
cmps
(bad)
mov
div
sbb
pop
nop
movs
enter
xor
dec
pop
arpl
jecxz
and
popa
rcl
loopne
das
imul
cld
mov
inc
out
cmp
std
add
adc
shl
popf
mov
jb
mov
dec
or
into
mov
sub
push
push
xchg
cli
cmp
fs
dec
jge
leave
rcl
and
push
push
nop
add
mov
xchg
fs
sahf
cmp
loop
(bad)
es
inc
xlat
lods
icebp
xor
sub
stos
sub
adc
leave
scas
or
mov
pop
cmp
pusha
mov
sbb
jns
test
ret
mov
inc
dec
test
jmp
mov
jnp
mov
sub
xchg
dec
ins
mov
push
add
popa
lods
stos
rol
shl
mov
test
sub
rcl
mov
adc
xchg
pop
(bad)
ins
inc
xor
sbb
movs
stos
sar
mov
hlt
out
nop
cmp
in
call
mov
cmp
mov
rcr
cmp
mov
sub
mov
and
iret
test
test
dec
out
pop
int
retf
jl
cmp
inc
std
mov
add
mov
dec
jb
loopne
or
mov
add
test
dec
out
pop
int
xor
js
jnp
arpl
ins
les
adc
jl
mov
retf
dec
jmp
ja
pop
call
bound
cli
pop
push
sub
ds
push
out
xor
nop
popa
cs
ds
lods
icebp
mov
out
out
sti
les
out
mov
frstor
stos
movs
jecxz
adc
int
lock
and
xor
ret
arpl
mov
xor
mov
or
fwait
adc
inc
inc
ja
aaa
jl
jnp
ret
pop
adc
fwait
xchg
and
push
ds
mov
pop
push
or
pusha
inc
scas
repnz
sbb
les
xchg
add
or
jbe
mov
aad
aam
pop
idiv
pop
stc
js
jb
cmp
cmp
imul
push
rcr
xor
ret
and
inc
adc
lods
imul
jmp
mov
ja
xor
in
cld
add
xchg
push
pop
fs
and
mov
xchg
push
mov
js
cdq
pop
pop
add
imul
adc
repnz
add
jbe
lock
outs
pop
aad
bound
ss
push
inc
jl
dec
dec
mov
mov
shr
popa
mov
and
mov
fwait
mov
and
icebp
in
pop
xchg
pushf
test
and
mov
das
pop
(bad)
pop
pop
and
add
jg
lds
mov
cmp
ds
not
movs
das
ror
outs
xor
and
push
movs
jnp
rcl
fs
repz
mov
mov
in
jp
shl
leave
std
and
stc
daa
icebp
lea
push
test
cli
inc
inc
pop
lods
mov
pop
jg
sti
addr16
leave
xor
push
cmps
pop
sahf
mov
pop
jns
inc
xchg
add
(bad)
mov
ds
retf
xor
adc
ins
xchg
in
out
pop
lods
sub
or
jmp
mov
pop
repnz
out
xchg
popf
in
push
in
add
jnp
bound
rol
bound
test
fcmovnb
adc
(bad)
ss
push
enter
cwde
fs
sbb
les
xchg
and
mov
iret
scas
loopne
das
imul
push
scas
movs
push
sbb
repnz
pop
out
js
push
jecxz
jmp
and
mov
icebp
scas
sti
out
std
scas
fst
shl
and
loope
xchg
xchg
out
out
inc
inc
sub
push
loop
dec
dec
inc
xchg
xor
add
xor
jg
scas
pusha
adc
aas
mov
hlt
xor
in
stos
ret
xor
inc
mov
mov
jbe
leave
ds
lds
inc
outs
bound
into
dec
inc
pop
retf
dec
enter
enter
fmul
add
mov
cmc
leave
sub
jb
inc
dec
push
push
dec
push
push
mov
jl
pop
dec
jl
cmp
add
aam
adc
(bad)
in
cmp
jbe
lds
inc
jns
push
hlt
jge
jle
and
mov
push
out
jmp
(bad)
or
adc
bound
pop
into
dec
add
dec
retf
sbb
test
fmul
add
hlt
leave
adc
repnz
inc
cmp
cmps
ror
outs
bound
push
mov
jl
dec
dec
jl
cmp
sbb
fmul
cmp
test
outs
bound
into
or
inc
jne
pop
lahf
test
adc
js
(bad)
call
out
mov
xchg
fisttp
shl
dec
scas
int3
or
aaa
jne
(bad)
je
gs
add
mov
adc
(bad)
scas
int
pop
dec
xchg
xchg
jno
and
test
repnz
mov
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
mov
jg
inc
aas
mov
add
mov
repnz
mov
test
mov
cdq
das
mov
xchg
aaa
stos
rcl
cmp
test
mov
test
mov
test
mov
xchg
and
out
mov
(bad)
lea
repnz
mov
cs
adc
lea
add
outs
and
sahf
cmp
leave
mov
push
mov
or
cld
ins
add
add
mov
sub
nop
lea
mov
test
mov
pop
ret
(bad)
add
imul
or
sub
mov
push
iret
rcl
dec
icebp
pusha
jo
jle
hlt
mov
inc
loop
pop
push
fcmovnb
ficomp
hlt
movs
pop
jb
inc
pop
add
inc
test
mov
push
(bad)
mov
repnz
iret
push
jmp
and
mov
enter
hlt
paddb
dec
push
pop
dec
dec
pop
fwait
mov
or
cmps
aas
sbb
xor
cmp
bound
mov
dec
ins
rcl
cld
jmp
(bad)
icebp
jg
mov
push
mov
add
mov
cmc
and
clc
in
dec
je
jbe
movs
mov
test
adc
pop
outs
aas
jmp
adc
ror
mov
nop
cli
mov
xor
movs
cmps
jg
test
mov
je
shl
ins
loope
mov
adc
dec
imul
xor
das
or
push
loopne
jne
or
clc
sbb
test
test
pop
aad
mov
scas
xchg
cmp
rcl
lahf
mov
test
adc
push
icebp
cmp
repnz
mov
inc
pop
adc
adc
and
movs
fdivr
repnz
sahf
aas
mov
dec
mov
(bad)
cmp
xor
mov
inc
in
sub
loopne
push
aas
jo
sub
mov
mov
aad
mov
jmp
dec
pop
fmul
jb
dec
inc
and
jl
sub
hlt
imul
ss
test
daa
stc
push
inc
jmp
rcr
cmp
fsub
mov
mov
mov
lods
out
fsubp
and
xchg
add
adc
scas
pop
inc
loope
push
mov
jns
std
xchg
pop
or
dec
pop
adc
push
div
xchg
jge
dec
lods
or
xor
ss
add
inc
fst
daa
(bad)
addr16
pop
xchg
push
imul
cmp
cli
mov
cmp
repnz
mov
and
cmp
icebp
sbb
mov
jbe
pop
adc
mov
cmp
jb
mov
jle
or
xchg
outs
ins
int3
mov
mov
imul
lods
inc
mov
adc
test
mov
test
and
mov
(bad)
xchg
(bad)
out
xchg
loop
stos
into
dec
mov
sbb
mov
movs
cmp
repnz
mov
xchg
(bad)
aam
repnz
nop
pop
lahf
arpl
iret
mov
or
xchg
out
rol
jnp
xlat
fld
into
std
mov
mov
test
add
fcom
add
pop
mov
ja
cmp
mov
imul
mov
jmp
xor
xchg
mov
gs
mov
ins
adc
or
xor
iret
mov
rol
mov
xor
cs
add
mov
rol
cmp
repnz
cmp
repnz
xor
test
mov
cli
sar
rol
sub
inc
mov
mov
xchg
aaa
mov
repnz
mov
popf
cmp
cli
inc
jmp
jb
jecxz
mov
add
repnz
cmp
mov
outs
ds
push
mov
sub
dec
jmp
dec
sti
pop
add
into
pop
fstp
dec
fs
or
repz
(bad)
icebp
xchg
ja
xor
or
jge
mov
or
jae
vphadduwq
mov
mov
or
or
mov
adc
pop
xchg
adc
jge
popa
cmps
mov
cmp
pusha
jnp
adc
push
pop
xlat
push
push
and
jnp
ficom
and
jae
out
add
test
loop
jle
mov
rol
aad
pop
mov
cmp
pop
test
jl
ret
jmp
mov
sbb
shr
pop
ffree
call
inc
mov
sysexit
fbld
inc
lahf
in
cmp
push
(bad)
push
call
fdiv
cdq
inc
add
inc
sbb
ins
cmp
rcr
xchg
pop
repz
imul
mov
sub
and
add
and
rol
fdiv
inc
(bad)
cmp
mov
xchg
mov
mov
add
and
cmp
retf
adc
cmp
jns
scas
hlt
or
xor
push
pop
in
add
xchg
daa
repnz
das
adc
aas
out
jns
fwait
and
ja
sub
cs
or
popa
scas
adc
aam
out
gs
mov
out
push
stos
lods
pop
xchg
adc
push
(bad)
push
sbb
test
fidivr
aas
and
mov
jg
inc
popf
xor
dec
(bad)
dec
inc
test
cmp
(bad)
fcmovnbe
jg
ins
(bad)
xor
lods
ss
pushf
int
int
cmp
std
mov
xor
sub
shl
pop
push
cmp
(bad)
mov
adc
sub
(bad)
call
fild
cmc
cmps
mov
popf
jb
aad
mov
mov
inc
inc
out
lods
neg
(bad)
cmp
in
mov
js
je
mov
idiv
sbb
adc
or
retf
ror
inc
into
retf
out
add
aad
add
jns
and
jno
mov
jnp
xchg
push
pusha
cmp
ret
mov
push
mov
xchg
outs
adc
in
and
cdq
pop
lds
leave
loope
into
ret
mov
adc
or
jnp
fdiv
(bad)
xlat
movs
(bad)
cmovno
mov
ret
mov
push
idiv
fcom
pop
adc
out
or
ja
adc
loope
xor
repnz
pop
mov
cli
test
mov
xor
mov
int
jbe
inc
jle
jbe
sti
ss
jbe
mov
clc
mov
dec
div
mov
aam
aas
mov
push
jns
xor
mov
lods
in
sti
stos
mov
mov
xchg
(bad)
mov
and
cld
mov
and
mov
(bad)
clc
pop
and
mov
dec
xor
leave
push
mov
inc
cld
pop
jmp
sub
xchg
in
in
xlat
mov
les
sub
jns
fld
in
or
xchg
lods
fwait
xchg
rcl
push
mov
(bad)
push
add
push
push
jbe
mov
dec
jo
popf
out
pop
sbb
mov
and
cld
mov
and
mov
(bad)
clc
pop
and
mov
dec
xor
leave
push
mov
inc
cld
pop
jmp
sub
xchg
in
in
(bad)
lea
mov
(bad)
sbb
adc
hlt
inc
hlt
dec
add
cmp
jp
pusha
sbb
lods
mov
fnstsw
loope
jmp
out
and
or
pop
(bad)
in
pushf
mov
and
jmp
(bad)
div
ins
and
xor
xchg
in
adc
fwait
push
push
sub
stos
mov
adc
ror
call
or
ins
cmp
inc
pop
dec
jp
inc
aaa
loop
test
call
ds
ins
(bad)
mov
test
push
test
mov
(bad)
sub
mov
mov
jns
xchg
cmps
push
ins
jmp
icebp
push
push
dec
stos
pop
dec
dec
ja
mov
xor
fild
push
mov
adc
mov
push
push
out
into
xchg
gs
leave
(bad)
in
dec
mov
stos
ror
mov
and
mov
push
aad
es
push
adc
loopne
repz
sub
pop
or
or
push
jae
push
xchg
daa
mov
ret
xchg
push
jge
out
(bad)
cwde
cwde
adc
mov
mov
jne
sbb
adc
or
mov
and
xor
in
add
sahf
adc
ret
iretw
push
xchg
mov
fisubr
outs
shr
pop
jge
lods
xchg
dec
push
mov
mov
xchg
cmc
aas
fld
dec
cmp
loop
lahf
jl
ret
pop
cmps
bound
fisttp
adc
out
retf
pop
sti
dec
fwait
pusha
in
inc
in
jae
jbe
mov
dec
mov
loop
pop
fist
fcom
mov
retf
push
or
mov
nop
ja
cli
into
add
fistp
iret
pop
add
sbb
inc
push
ins
inc
cmp
cmc
inc
nop
(bad)
lods
mov
pop
pop
inc
push
test
mov
lods
jle
in
xor
mov
jnp
into
and
pop
or
fwait
xor
sub
(bad)
push
sbb
rcr
sbb
(bad)
(bad)
fabs
(bad)
aad
xlat
in
pop
fst
in
push
test
push
sbb
test
inc
fs
xor
or
dec
pushf
cli
cwde
mov
aaa
inc
xchg
int
push
in
or
hlt
cli
push
fxch
inc
jmp
xor
mov
xor
add
iret
sti
lods
in
or
adc
sahf
push
stc
jmp
jmp
out
and
(bad)
(bad)
dec
arpl
mov
cmps
push
push
and
add
mov
fucom
push
jne
pushf
stos
cli
cmp
mov
popa
or
mov
(bad)
into
sbb
cmps
lds
fldcw
fidivr
mov
adc
test
or
int
xchg
fldl2t
cmp
xor
and
xor
adc
(bad)
loop
lock
pop
sti
retf
int3
arpl
in
sub
jmp
add
xchg
dec
adc
fmul
xchg
dec
mov
cmps
nop
mov
pop
or
mov
sahf
ret
or
adc
xor
jecxz
jo
xchg
out
test
xor
add
repnz
stos
jb
retf
fcomp
shl
jbe
pop
pop
cmp
adc
mov
xchg
mov
clc
ret
je
and
or
sti
(bad)
jno
cwde
fisttp
in
push
jp
mov
push
clc
push
pusha
sti
rcl
popf
cwde
and
ss
loop
lods
fst
dec
jg
icebp
mov
mov
cdq
aaa
mov
out
cmp
repnz
xchg
repz
ss
mov
sar
aaa
mov
mov
les
mov
aas
(bad)
add
mov
(bad)
bound
lds
loope
xchg
xchg
fsubr
nop
repnz
into
ror
test
inc
xlat
or
sti
std
xchg
lods
fwait
dec
ret
aaa
cmp
jo
(bad)
out
xor
xor
jns
and
je
cmp
xchg
mov
ror
test
inc
retf
pop
jg
inc
ficom
add
into
cmp
mov
and
mov
cmp
xor
add
int3
inc
add
cmp
fcom
lds
sub
data16
lods
les
(bad)
fwait
enter
pop
jp
mov
scas
(bad)
mov
mov
and
rcl
clc
rcr
rcl
call
out
jne
cwde
loope
cdq
and
lods
bound
shl
add
pop
xchg
cli
inc
lods
sub
dec
aam
aas
repnz
push
adc
ror
and
sbb
mov
cmp
adc
retf
stos
pop
dec
jmp
ds
scas
mov
sbb
shr
ficomp
inc
push
mov
adc
outs
xchg
cmp
(bad)
xchg
int
mov
mov
scas
pop
sub
ror
push
imul
inc
dec
jo
sub
pop
pshufw
call
add
mov
in
pop
mov
leave
stos
inc
popa
out
enter
add
icebp
cmps
movs
ffreep
sub
cmp
arpl
xlat
adc
int3
sub
mov
movs
scas
push
cmp
push
scas
aam
outs
arpl
cwde
nop
sub
aad
sbb
out
inc
adc
fs
test
loop
and
mov
int
adc
shl
or
xor
ins
dec
fstp
inc
movs
jb
hlt
sub
adc
mov
inc
add
sti
psrld
(bad)
out
fwait
mov
mov
popf
xor
pop
sbb
movs
shl
scas
cmps
pop
mov
mov
xchg
push
and
push
jmp
call
mov
dec
fisttp
pop
in
rcl
popf
mov
xor
jne
sub
xchg
int
mov
sub
das
xor
cmp
xchg
jg
push
pop
aas
xor
mov
fcomi
outs
or
cdq
dec
mov
icebp
mov
inc
xor
cmps
in
mov
repnz
das
call
xchg
and
adc
cmp
loope
adc
cmovnp
adc
inc
xor
jmp
movs
jecxz
(bad)
cmp
js
adc
cmp
hlt
jmp
retf
sub
and
popa
or
(bad)
ins
test
arpl
cmp
xchg
adc
jns
mov
jp
icebp
mov
mov
lods
pop
mov
loop
cmp
cli
int
mov
add
(bad)
mov
sar
je
sti
out
ret
jne
sti
adc
repnz
hlt
enter
or
and
or
lea
stos
push
hlt
add
pop
dec
cmps
(bad)
sbb
ja
shl
jmp
sub
daa
js
out
cs
pop
call
mov
xor
pop
jae
dec
mov
out
ins
jge
fwait
mov
loop
sub
mov
add
sbb
movs
sbb
(bad)
mov
xchg
push
enter
xor
mov
sub
jmp
dec
sbb
cs
xor
push
pop
(bad)
xor
fmul
push
cs
sub
jmp
(bad)
out
cmps
sub
dec
sbb
jnp
out
cs
pop
call
mov
xor
pop
jae
dec
mov
out
ins
jge
fwait
mov
loop
data16
add
idiv
or
push
popf
mov
addr16
aad
ins
cdq
stos
add
mov
dec
pop
pop
pusha
mov
or
jl
or
xchg
xor
jmp
jl
adc
gs
aas
add
ret
pop
fmul
push
int
adc
cmps
mov
xor
inc
movs
pop
jbe
cmp
mov
clc
add
push
pop
iret
xor
sbb
xchg
push
js
icebp
push
cmp
fistp
stos
or
jo
in
out
mov
jno
xchg
loop
xchg
jg
mov
jns
int3
(bad)
xchg
cld
leave
test
lds
sub
aaa
daa
movs
xchg
sbb
call
ins
test
mov
and
mov
push
cmps
retf
sahf
out
cmps
mov
pushf
rcr
test
xchg
dec
mov
push
mov
icebp
movs
xchg
dec
cmp
test
and
cli
mov
mov
cdq
stos
push
popf
loop
stos
sbb
push
(bad)
adc
mov
jle
push
mov
stos
mov
mov
add
adc
sbb
nop
sbb
aam
xchg
push
inc
outs
xchg
xor
lods
mov
dec
add
aas
add
aaa
add
adc
sbb
nop
sbb
fdivr
xchg
xor
cs
mov
mov
retf
mov
cli
ds
xchg
mov
lods
iret
mov
inc
ss
hlt
push
call
xchg
scas
lahf
enter
jle
lods
xor
mov
mov
push
sub
mov
sub
xor
and
inc
dec
cmp
ret
pop
add
pop
pop
pop
mov
lea
and
mov
pop
scas
pusha
loop
idiv
iret
call
aad
adc
(bad)
lahf
(bad)
cmovnp
test
lea
xchg
aaa
push
cmp
jo
lds
adc
nop
push
loopne
xor
cmp
in
cwde
mov
test
fcmovbe
inc
(bad)
lock
dec
ret
and
lock
test
clc
jl
fisubr
cmp
pop
pop
(bad)
and
add
and
pop
out
cmp
mov
stos
mov
add
sub
inc
in
dec
clc
outs
mov
mov
push
dec
or
arpl
push
loope
xlat
adc
fs
lahf
cmp
jmp
inc
mov
aad
ja
aam
test
lahf
in
pusha
dec
dec
fild
dec
hlt
and
inc
pop
and
or
sub
mov
in
outs
pop
ja
jmp
dec
into
iret
sbb
add
rol
ret
ret
mov
sub
xchg
pop
jecxz
and
ss
mov
add
sub
push
ja
inc
push
adc
mov
int
and
sbb
int3
xchg
loop
mov
cmp
outs
jecxz
pop
push
loop
jo
adc
ins
pop
mov
sub
jbe
cdq
in
dec
or
inc
jge
and
push
into
cmp
cmp
mov
xchg
jbe
mov
dec
pop
aam
mov
fdivr
sti
leave
es
add
xchg
imul
adc
xchg
xor
int
fsub
sbb
pop
inc
arpl
add
popa
out
out
mov
xlat
add
shl
add
push
sbb
mov
mov
sbb
and
fisttp
pusha
test
cmps
es
pop
imul
xor
push
pushf
xor
sti
icebp
push
iret
cmps
inc
stos
inc
sbb
sbb
adc
call
mov
mov
dec
or
imul
sub
sbb
call
xchg
enter
jg
dec
push
inc
mov
add
(bad)
jmp
mov
fst
addr16
clc
stos
mov
adc
cdq
mov
pop
stos
sahf
pavgb
fsubr
cmp
adc
imul
inc
dec
out
xchg
mov
xor
and
xchg
rcl
pop
adc
mov
pop
fs
bound
cmp
mov
push
test
mov
mov
lahf
mov
pop
les
push
xor
retf
add
dec
dec
or
call
jne
add
stc
test
pop
lods
mov
mov
into
fcmovne
stos
inc
or
mov
in
xchg
add
cmp
aam
pop
and
inc
stc
xor
jg
mov
fxch
ja
and
inc
aad
fs
pop
into
xchg
cmps
rol
repnz
push
inc
repnz
mov
retf
inc
enter
cmp
or
mov
cmp
(bad)
jg
test
xchg
stos
ror
stc
add
stos
sub
adc
es
arpl
jecxz
sbb
jmp
rol
mov
xchg
lods
jns
jno
mov
mov
jno
bound
and
inc
jno
inc
lods
icebp
repz
pop
push
daa
pop
loop
aad
mov
push
cmps
or
add
arpl
fst
dec
jg
hlt
adc
mov
adc
cmp
mov
xchg
pop
es
call
pop
ins
jmp
das
movs
xchg
mov
(bad)
out
or
and
adc
push
fstp
aas
ja
icebp
cmc
icebp
sub
lahf
lds
inc
push
mov
xchg
scas
ds
mov
mov
out
or
fmul
xchg
sbb
sub
inc
cmovns
sub
push
(bad)
call
jmp
mov
sub
cmp
xchg
cmp
jno
xor
cli
test
mov
cmp
jbe
cli
cmc
ja
aas
lock
std
hlt
mov
ds
js
jne
cmp
mov
xchg
or
mul
lahf
sbb
cmp
adc
push
push
add
jmp
or
ds
cmps
mov
aam
in
mov
call
les
cmps
nop
dec
not
sbb
pop
movlps
out
sub
sub
out
(bad)
test
mov
mov
mov
mov
or
inc
dec
add
push
aas
mov
lea
push
or
pop
mov
call
and
je
cwde
(bad)
xchg
mov
in
inc
(bad)
cmp
lahf
add
lods
xor
jae
mov
and
shr
cmc
pop
hlt
adc
jne
pushf
mov
neg
ret
loope
add
xchg
bound
xor
ret
jmp
xor
inc
test
cmp
jmp
jmp
jno
fstp
retf
(bad)
jecxz
gs
mov
xor
scas
lods
aam
sub
pop
popa
push
inc
inc
inc
sub
std
xchg
fs
jnp
push
push
ja
outs
push
pop
gs
dec
mov
inc
mov
cmps
pop
sti
or
jmp
or
shl
adc
popa
inc
rcr
inc
or
sar
push
xor
push
xchg
mov
mov
loop
dec
and
fs
das
fadd
test
pop
dec
mov
xor
lahf
jle
sbb
lock
adc
pop
lods
cmp
push
out
mov
inc
cwde
cmp
movs
imul
inc
mov
fs
jg
pop
jae
fld
push
jbe
mov
or
pop
cmp
call
sahf
xor
sbb
mov
jle
clc
aad
ins
fstp
cmp
add
mov
inc
or
cmps
mov
mov
imul
fbstp
cs
das
mov
hlt
cmp
push
bound
int3
fisubr
add
jmp
shl
adc
test
shl
push
call
stos
dec
shl
xor
(bad)
sbb
cmp
push
mov
xchg
in
sbb
cli
fwait
hlt
mov
rcr
test
mov
add
add
cmp
fwait
add
or
pop
in
pop
idiv
mov
outs
das
loop
mov
mov
addr16
dec
fnstsw
lods
sbb
ds
cmps
cmp
sub
cmc
jb
adc
nop
add
aam
inc
shl
push
pop
jg
xchg
adc
ss
sub
cmps
fld
and
mov
xchg
jo
inc
inc
push
jnp
es
xchg
add
cmps
in
hlt
mov
push
xor
or
dec
mov
je
mov
adc
daa
jnp
mov
cmc
fbld
out
cs
out
imul
(bad)
loop
pop
jl
xor
push
mov
add
loop
lea
das
lock
movs
sub
add
mov
icebp
or
stos
inc
scas
lods
test
push
inc
and
adc
leave
inc
inc
jne
out
inc
mov
hlt
add
test
loop
xor
mov
nop
xchg
mov
jmp
pop
cmps
int3
ret
xlat
add
in
ins
imul
mov
dec
push
lea
sbb
push
mov
sub
repnz
ror
jecxz
fadd
retf
add
stos
cmps
(bad)
sub
lods
xor
ins
xchg
fild
sahf
push
inc
daa
inc
cli
shl
xor
cs
sub
aam
nop
xor
jg
(bad)
mov
in
imul
(bad)
out
std
push
mov
jae
cmp
or
ja
sub
rcr
sub
test
es
popf
and
sub
jle
sbb
test
adc
stc
xor
sbb
jge
(bad)
mov
enter
out
bound
jle
dec
sub
jb
pop
inc
mov
aam
(bad)
xchg
test
push
jg
mov
fnstcw
cdq
out
inc
ret
pop
dec
cmp
cmp
push
sbb
jmp
xchg
loopne
imul
cld
fcom
xlat
xor
or
imul
aam
ror
jmp
jno
pop
inc
adc
xchg
add
(bad)
jno
ins
stos
bound
or
not
sub
or
bnd
dec
arpl
cmp
repnz
icebp
mov
sbb
or
int
inc
call
xor
loope
cmp
inc
mov
dec
icebp
inc
arpl
inc
call
int3
mov
push
loop
pushf
nop
in
inc
xor
inc
and
clc
aam
and
add
jnp
push
xchg
jmp
into
jl
mov
les
inc
jg
lods
inc
mov
mov
outs
jnp
push
dec
retf
cdq
xchg
add
mov
jge
sub
icebp
test
(bad)
mov
jns
pop
cmc
(bad)
rcr
fs
fisttp
push
pusha
dec
icebp
pop
and
(bad)
xor
dec
icebp
xor
int3
fst
cmp
stc
jp
int
push
loopne
add
push
in
ret
js
sub
ficom
pop
repnz
or
test
xchg
and
jp
imul
or
icebp
cmp
lea
test
inc
jno
xchg
shl
dec
icebp
jns
dec
icebp
sar
pop
lea
mov
mov
stos
jmp
mov
add
div
les
jne
cmp
xor
(bad)
mov
movs
aas
(bad)
add
icebp
xchg
mov
xchg
sbb
add
iret
lods
xor
aad
push
aam
cdq
das
pop
and
add
push
jmp
fimul
fcom
jno
les
mov
dec
push
adc
dec
cli
inc
sbb
jbe
movs
mov
adc
jae
jnp
sub
and
fsubr
sub
(bad)
mov
imul
cwde
sbb
fst
adc
pushf
aam
repz
stos
es
pop
dec
jb
mov
mov
icebp
gs
ds
adc
test
jb
cmp
inc
xchg
lods
nop
xchg
fadd
in
sbb
cli
stos
ss
sub
mov
call
jns
mov
scas
ds
xlat
pop
push
xchg
dec
xchg
mov
cld
jl
pop
imul
push
movs
adc
cli
add
jno
inc
mov
mov
imul
inc
bound
mov
mov
sbb
aad
jmp
in
add
adc
xor
adc
push
test
outs
xchg
call
adc
sbb
ror
sbb
mov
dec
test
test
xor
cdq
pop
pop
push
aad
pop
aas
ror
fsub
sbb
imul
dec
dec
hlt
push
dec
js
dec
test
lahf
and
adc
ins
dec
into
jo
bound
xchg
dec
pop
jmp
add
es
idiv
add
lds
or
dec
ins
nop
retf
mov
fmul
adc
test
adc
inc
hlt
test
add
jb
mov
aad
dec
push
sub
pop
stc
loop
jmp
ret
pop
fsubr
imul
mov
fsubp
push
mov
pop
in
popa
mov
push
fisubr
cmp
ror
into
aaa
cmp
(bad)
out
jl
sbb
push
pop
movs
mov
dec
hlt
shl
pop
mov
jmp
scas
jecxz
jl
scas
or
cli
les
jno
aas
pop
or
xor
scas
(bad)
xlat
inc
dec
jo
gs
sub
je
push
cmps
mov
pop
dec
sbb
push
out
mov
push
les
xchg
cld
call
or
dec
push
mov
popf
mov
xchg
mov
pop
ins
add
nop
add
mov
test
push
dec
in
ret
fist
ror
pop
push
aaa
inc
dec
pop
mov
lock
mov
push
or
aad
fnstenv
sub
cmp
(bad)
xor
clc
inc
lods
aas
pop
cmp
int
fld
addr16
pushf
mov
aas
push
nop
jmp
mov
or
inc
inc
mov
mov
jbe
mov
(bad)
aas
mov
hlt
fist
fmul
loopne
fild
xchg
mov
iret
leave
push
clc
sahf
mov
and
or
rcr
(bad)
dec
push
fstp
sbb
lahf
adc
(bad)
jns
and
fs
adc
nop
mov
ret
mov
mov
pop
ins
mov
mov
fs
scas
xor
and
pusha
js
pop
jns
aaa
or
inc
imul
and
stos
jmp
(bad)
xchg
or
lea
mov
lea
scas
loop
cmp
repnz
jbe
mov
mov
inc
js
jno
(bad)
mov
xchg
dec
cdq
cmp
dec
mov
add
adc
cmp
cwde
push
jg
cmp
push
jns
shr
push
and
push
adc
(bad)
add
jecxz
cmps
mov
mov
mov
mov
repz
cwde
push
jg
cmp
aad
cmps
push
faddp
mov
mov
(bad)
adc
cdq
mov
mov
mov
test
pop
je
sbb
out
cld
cwde
inc
mov
pop
imul
cmps
cdq
je
test
xor
xor
mov
push
cdq
retf
in
loope
jg
gs
add
mov
mov
xchg
xor
pusha
add
mov
sub
xor
aad
shl
inc
cmp
cmps
rcr
mov
pop
cdq
cwde
cli
(bad)
stc
sbb
leave
mov
dec
pop
mov
(bad)
dec
mov
xchg
mov
mov
shl
pop
xchg
jnp
jmp
pusha
sbb
mov
sub
push
pop
pop
sub
and
jae
xchg
mov
(bad)
ror
mov
(bad)
stos
hlt
push
retf
add
rcl
push
xor
fldenv
ja
adc
mov
std
cdq
retf
in
loop
and
fxch
jmp
outs
pop
mov
popf
push
scas
push
xchg
enter
scas
shl
cs
outs
cmp
cmp
cs
xor
daa
sub
inc
mov
cmp
jb
or
cmp
jg
loop
pushw
sbb
js
jl
jnp
mov
add
mov
rcr
mov
cli
xor
or
jg
cmp
bound
mov
or
mov
aas
pop
xor
ins
xchg
xchg
inc
fwait
neg
cwde
aaa
enter
jbe
in
mov
and
jns
adc
cmp
inc
mov
lea
ins
cmp
in
icebp
test
rol
sbb
fsub
adc
ds
xchg
jg
test
pushf
and
sub
fldlg2
shl
out
rcl
add
jmp
call
sbb
(bad)
add
xor
push
fst
leave
pushf
mov
pop
mov
inc
mov
outs
dec
adc
call
xchg
sbb
es
rol
daa
inc
sti
xor
mov
cmc
adc
mov
inc
sub
jg
fnstcw
add
and
xor
rol
outs
mov
xor
loopne
es
add
cmps
mov
ret
adc
retf
mov
ins
xchg
mov
or
int3
fcom
outs
cs
cmp
cmp
pop
cmp
jp
rcl
shl
hlt
mov
mov
lods
loopne
in
fidivr
inc
push
push
adc
push
stc
jne
mov
imul
jo
jmp
repz
dec
gs
push
repz
ret
inc
call
call
aam
or
gs
dec
or
or
jbe
mov
jle
clc
repz
fcom
cmp
mov
xor
test
mov
(bad)
jbe
cli
mov
add
ja
jp
cmc
hlt
cmp
mov
out
sub
mov
not
or
and
enter
int3
pop
sahf
hlt
add
int3
pop
cmp
ds
push
dec
icebp
xchg
push
jge
pop
or
nop
lods
mov
sub
in
pushf
and
data16
das
or
jno
inc
mov
cmp
cmp
or
adc
(bad)
inc
cmc
xchg
mov
dec
sahf
leave
shr
addr16
ret
mov
xor
(bad)
fdivr
dec
jmp
sbb
pop
pusha
lahf
lahf
sub
add
cmps
pushf
cmc
jg
mov
or
and
lds
or
or
inc
int
mov
repz
and
fsubr
adc
or
push
inc
mov
and
cs
sbb
jae
pop
nop
dec
test
call
adc
daa
(bad)
xchg
daa
pop
sbb
adc
clc
xchg
popf
cld
retf
xor
pusha
cmp
mov
jno
leave
or
test
mov
test
xlat
push
cmps
pop
sub
xlat
push
inc
jecxz
adc
out
push
mov
mov
push
mov
adc
out
push
inc
adc
inc
in
push
fdivr
outs
push
inc
pop
lock
xchg
sar
pop
xchg
cdq
lea
adc
out
test
out
mov
jmp
aam
or
cli
xchg
lods
inc
cmp
cmp
shr
sub
aad
push
cmps
push
imul
mov
lock
or
jmp
mov
ins
outs
in
daa
repz
sbb
jecxz
daa
lods
push
ja
mov
aaa
int
jmp
xchg
lds
(bad)
ror
movs
aaa
or
adc
sbb
into
sub
or
mov
cli
jno
mov
pushf
(bad)
mov
jl
push
jg
xor
or
in
and
aas
call
pop
aaa
or
mov
stos
xor
out
call
cmp
fwait
cmc
and
pop
dec
jl
pop
jo
mov
cmp
add
and
retf
mov
pop
dec
fbld
mov
add
xchg
xor
sbb
pop
inc
out
fsubr
inc
fld
push
mov
ror
movs
lea
lds
lea
inc
cmp
xor
cmp
jno
neg
inc
iret
sbb
rcr
push
movs
inc
and
sub
mov
xor
test
lods
mov
fwait
leave
leave
into
xchg
stos
sub
cs
test
or
add
and
popa
mov
xchg
ins
pop
add
xor
nop
cs
movs
or
scas
cwde
mov
mul
xchg
pop
or
mov
adc
test
dec
jge
out
jbe
jae
mov
xchg
ficom
outs
neg
mov
test
mov
inc
xchg
xor
xchg
mov
sbb
pop
pop
cmp
or
shl
push
add
out
movs
inc
add
hlt
(bad)
lock
cwde
aad
push
cmp
add
(bad)
inc
pop
daa
pop
dec
mov
xor
push
repz
rol
push
enter
retf
lock
pop
push
lea
popa
xor
or
dec
outs
xchg
mov
aas
cmp
xchg
and
adc
popa
fadd
adc
pop
(bad)
push
push
mov
mov
daa
das
cmp
fsub
int
in
lea
and
push
or
stos
test
iret
fdivp
enter
movs
xchg
sbb
int
in
push
pushf
mov
bound
popf
js
xchg
xchg
into
out
cmp
aad
push
repnz
rol
jp
jae
push
ror
pop
aam
xchg
push
jg
mov
sahf
mov
adc
int
retf
and
pop
inc
xchg
shl
mov
adc
lahf
ja
out
sbb
out
gs
push
xor
jmp
mov
pushf
mov
cmpxchg
jo
jbe
lds
stc
adc
mov
push
cmp
mov
out
sub
les
es
push
scas
jo
and
ins
out
addr16
ret
mov
xor
mov
stos
xor
jb
pop
mov
fnstenv
lock
mov
scas
push
sub
mov
mov
lods
adc
jno
sub
push
dec
mov
push
jne
or
inc
dec
cmp
cli
cmp
push
retf
xchg
fs
adc
mov
sbb
ins
repz
sub
jb
inc
xor
jnp
sub
addr16
stos
pop
das
(bad)
retf
mov
cld
push
inc
or
ins
jne
ds
or
xor
jmp
jne
mov
retf
sbb
test
rcl
push
or
add
and
hlt
mov
sub
popf
enter
mov
push
inc
mov
ss
retf
les
gs
xor
mov
jecxz
dec
mov
scas
push
push
fisttp
shr
xor
and
in
push
jg
bound
and
pop
adc
add
int
(bad)
movs
dec
fcom
popa
jb
add
loop
mov
push
adc
mov
stc
rcl
sub
fild
movs
ins
xlat
mov
inc
or
jmp
xchg
cmps
or
jnp
shl
pop
into
sahf
mov
out
xchg
mov
std
and
and
jbe
mov
jl
fsubr
std
stos
pushf
mov
inc
xor
lahf
mov
adc
mov
xor
aas
jae
popf
cld
(bad)
shl
aaa
shr
cmps
inc
shl
jle
cld
cmp
or
jmp
outs
mov
shl
shr
or
shl
mov
dec
cdq
fdivr
gs
stos
xor
retf
scas
call
push
cmp
or
cmp
mov
test
xchg
xrelease
fdivp
lea
mov
cli
xchg
aaa
mov
loop
sub
fidiv
adc
fidiv
pop
test
jg
stos
shr
mov
aad
shr
xchg
dec
popf
xchg
sub
loop
imul
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
mov
loop
test
hlt
ror
jg
repnz
inc
xor
test
mov
popf
daa
mov
movs
sub
cli
cmp
mov
test
mov
test
mov
test
mov
popf
aas
mov
out
xchg
dec
cdq
test
mov
(bad)
in
mov
push
or
dec
mov
cmps
pop
fidivr
bnd
mov
push
das
test
push
popa
ret
mov
inc
xor
jmp
cmp
xor
test
int3
dec
add
mov
sub
int
mov
sbb
xor
out
or
inc
mov
retf
cwde
pop
jmp
into
jo
lock
dec
sahf
sub
ja
or
xchg
or
adc
test
repnz
pop
pop
add
dec
aaa
inc
rcr
cmp
add
add
in
xchg
push
inc
dec
or
cmp
pop
push
pop
push
fmul
lods
lods
sahf
xchg
sahf
mov
push
mov
mov
cmp
int
div
xchg
pop
loope
je
inc
jmp
(bad)
icebp
neg
or
jecxz
shr
ror
test
xchg
cs
cli
mov
mov
inc
pop
mov
outs
cmps
add
test
xor
std
sub
jbe
out
xchg
add
jbe
dec
imul
pop
jge
jge
cmp
test
push
jnp
not
adc
push
std
ins
dec
inc
xchg
ret
(bad)
mov
outs
cmp
cli
leave
mov
pop
inc
gs
pop
rol
test
mov
push
nop
in
in
cs
push
rol
pop
add
cmp
(bad)
es
stos
mov
jle
mov
out
mov
cmc
test
cmp
sub
out
sbb
call
dec
push
push
out
mov
pop
or
lods
pop
cwde
int
cld
aaa
cmp
push
data16
mov
or
test
js
mov
fmul
add
js
xchg
lds
mov
repnz
outs
aad
lds
inc
xchg
dec
adc
xor
jg
js
jmp
pop
mov
or
push
or
xchg
jg
clc
adc
int
mov
jo
pop
or
pop
or
aad
dec
mov
cmp
repnz
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
call
lock
mov
test
mov
mov
std
cmp
lock
add
inc
inc
pop
cmp
repnz
bound
imul
pushf
and
cmp
cmp
add
cmp
repnz
in
(bad)
out
and
cmp
icebp
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
xor
aas
mov
cdq
sub
test
cmps
repnz
out
jb
jmp
stos
push
cmp
dec
mov
jb
cmp
mov
mov
or
sbb
cmc
test
aad
lods
fimul
jnp
pop
pop
cmp
ins
psubb
pop
mov
jecxz
mov
or
outs
scas
pop
shl
jbe
hlt
aam
sub
cld
dec
xchg
stos
ror
jb
xor
xchg
icebp
ins
aaa
dec
push
add
in
xor
pop
add
inc
les
cld
pop
dec
out
jns
or
fild
mov
rcr
cmp
add
sbb
cmc
jg
mov
lds
xchg
fiadd
mov
lods
inc
loope
sti
enter
sbb
push
nop
add
dec
xlat
mov
cmp
mov
jecxz
adc
sti
je
jae
adc
mov
adc
mov
adc
jb
adc
stos
push
dec
fdivr
mov
dec
push
xor
movs
cmp
ds
ret
int3
jnp
inc
in
cmp
icebp
lea
and
jo
xor
add
mov
xchg
out
mov
or
aad
pop
gs
test
mov
int3
cdq
cmp
cli
adc
aaa
test
movs
mov
push
xchg
mov
jecxz
(bad)
repz
pop
xor
cmp
out
das
fld
push
cld
pop
jmp
rcr
fldcw
xchg
or
adc
push
cmp
pop
inc
(bad)
and
pop
push
cmps
xlat
inc
cmp
mov
push
movs
out
pop
jecxz
push
and
repz
xchg
aas
xlat
cwde
xor
xchg
pushf
mov
ret
jmp
popa
les
mov
fild
sbb
rol
or
gs
lock
adc
or
pusha
xor
scas
mov
ret
not
xchg
cmp
retf
rcl
arpl
enter
in
sub
add
daa
arpl
xchg
xchg
xor
inc
mov
in
popf
push
mov
aas
sbb
(bad)
imul
add
and
push
push
mov
add
dec
mov
mov
jns
cld
adc
aaa
and
pop
scas
test
cdq
hlt
(bad)
dec
ret
hlt
adc
stos
hlt
jo
jnp
jle
inc
cmp
mov
jge
xchg
cli
int3
test
xchg
jno
sub
sar
push
mov
mov
movs
das
call
aas
mov
xchg
cmp
mov
mov
cmp
retf
mov
mov
dec
div
xor
popa
test
jmp
movs
aas
(bad)
add
mov
daa
or
adc
inc
xchg
aam
sub
mov
mov
(bad)
stos
xor
mov
and
cs
dec
cmc
aas
dec
sub
mov
push
dec
in
in
out
sub
pop
cmp
aaa
inc
inc
test
xchg
ret
mov
dec
mov
push
mov
mov
sbb
push
mov
pop
loop
retf
or
or
pop
les
push
lahf
jno
cwde
add
fld
mov
mov
sub
or
stc
cmovbe
lock
mov
movs
or
xchg
iret
jmp
dec
ds
mov
sub
mov
clc
inc
(bad)
mov
lds
into
out
mov
cmp
fild
repnz
icebp
mov
int
outs
sbb
pop
lods
add
jne
xor
inc
scas
cli
adc
clc
add
pop
sbb
cli
mov
dec
dec
inc
int
loope
aam
mov
dec
out
daa
add
jnp
imul
push
fs
test
popa
das
or
dec
hlt
adc
sub
ror
std
dec
ficom
aad
push
xor
xor
daa
jmp
enter
std
pop
ret
dec
test
mov
mov
hlt
out
loop
sbb
jmp
xchg
lods
test
add
scas
jae
jmp
jle
ret
mov
call
fst
ds
in
leave
and
add
lods
push
aaa
mov
je
hlt
aas
push
in
xlat
jecxz
sub
sub
mov
dec
sti
xchg
sbb
(bad)
fwait
xchg
push
xor
sbb
mov
add
rcr
popa
sbb
jl
push
inc
and
cmp
inc
and
cmp
inc
add
cmp
test
dec
addr16
inc
cmp
xor
add
and
and
mov
pop
retf
call
jge
repnz
clc
and
push
out
cmp
pushf
shr
and
in
movnti
or
ins
push
adc
and
out
mov
sub
push
or
imul
mov
fucom
cmp
cmp
pop
daa
int
ja
jbe
adc
pop
push
push
mov
pop
pop
dec
inc
mov
or
jne
push
rcl
std
jp
(bad)
jecxz
js
lods
fdiv
in
push
and
adc
out
sub
mov
push
rol
mov
sbb
pop
(bad)
pop
sub
xchg
mov
and
push
jge
call
int3
jmp
aad
rcl
shl
lahf
leave
imul
push
xchg
pop
add
jae
push
repz
icebp
cs
pushf
jecxz
cmp
adc
leave
mov
(bad)
and
xchg
dec
adc
aas
ja
stc
test
sbb
addr16
ror
cs
jne
loop
xor
push
fiadd
sub
xor
mov
xchg
adc
cwde
and
mov
cld
movhps
xchg
xchg
retf
mov
(bad)
mov
out
add
popa
xchg
hlt
or
pusha
lods
scas
(bad)
es
movs
inc
fwait
sub
adc
and
jmp
rcl
push
cmps
push
test
sub
das
mov
mov
push
adc
mov
imul
call
xor
jp
std
xor
add
mov
jns
out
sbb
mov
popf
les
xchg
xchg
sahf
or
adc
nop
mov
mov
mov
fldenv
push
inc
inc
imul
lods
push
out
mov
sbb
pushf
fwait
pop
popf
push
and
in
mov
ja
pop
jbe
and
in
jae
sahf
or
scas
sbb
out
jle
in
mov
xchg
shr
bnd
jmp
leave
fs
fwait
jnp
push
int
cmp
(bad)
cdq
aaa
mov
repnz
mov
lea
mov
shr
leave
repz
or
div
jle
cmp
ja
lds
movs
aas
(bad)
add
mov
mov
sbb
stos
sbb
(bad)
int3
xchg
movs
pushf
(bad)
mov
addr16
pop
ret
dec
icebp
hlt
adc
loop
fwait
icebp
dec
aam
std
retf
fcmovnu
loope
je
cmp
xor
(bad)
ja
mov
add
adc
or
jnp
inc
sub
xlat
add
and
ins
dec
add
(bad)
mov
lods
xor
test
sub
add
mov
xchg
addr16
push
repz
(bad)
mov
sbb
icebp
cmp
mov
sbb
cmp
dec
dec
and
xchg
icebp
dec
aam
or
fisttp
cmp
fist
cdq
mov
leave
jg
bnd
fimul
jae
call
add
int
stos
jae
call
add
rol
jge
push
mov
and
push
jge
inc
ret
mov
and
inc
out
retf
cli
cmp
or
aas
ret
lahf
mov
xor
mov
out
mov
out
inc
lds
mov
jae
shr
(bad)
aad
call
sbb
cli
sbb
cmp
mov
pushf
ret
mov
in
ficom
ins
sbb
sub
leave
sbb
pop
enter
outs
mov
sub
adc
ret
fisub
rol
in
push
xlat
push
sub
fcomi
push
add
or
xchg
outs
jp
or
aad
dec
movs
in
cdq
or
mov
movs
adc
nop
sub
scas
ror
in
into
or
imul
xchg
retf
or
in
cmps
and
lods
inc
push
or
fadd
mov
leave
in
in
xchg
pop
mov
sbb
outs
std
(bad)
aad
add
inc
(bad)
cli
add
or
xchg
outs
jp
or
aad
dec
movs
test
pop
or
nop
or
out
mov
jle
scas
pop
fstp
(bad)
xchg
stc
fwait
outs
xchg
xchg
cmps
push
pop
stc
mov
inc
xabort
xor
fwait
into
in
rol
mov
adc
and
cmps
jge
jbe
cmp
xchg
push
sahf
lahf
jo
fisubr
mov
outs
iret
retf
div
xchg
loope
mov
jge
fwait
sbb
and
dec
push
ja
mov
push
in
push
shl
mov
mov
imul
push
mov
ins
mov
in
retf
xchg
push
loopne
inc
stos
(bad)
and
aaa
jo
loope
std
jecxz
sbb
sub
lods
push
push
stos
or
cmps
out
cwde
mov
jp
icebp
lea
mov
cdq
pop
mov
cli
test
mov
mov
mov
add
mov
mov
pop
aaa
ja
dec
ds
cmp
cli
movs
mov
ja
mov
bnd
jb
jecxz
clc
std
mov
out
cmp
or
cmp
push
mov
sar
xrstors
jae
leave
mov
aaa
loopne
sub
movaps
fidiv
loope
or
ret
hlt
pop
sar
mov
(bad)
outs
mov
push
mov
call
push
mov
jo
scas
retf
or
retf
outs
jne
and
sub
sub
dec
sbb
test
dec
fcomip
jg
fdivr
or
ret
out
mov
adc
and
stc
inc
(bad)
in
scas
loope
ins
out
(bad)
jmp
rol
ja
and
cmc
inc
xor
cdq
sub
int
pusha
(bad)
in
push
mov
cmps
mov
mov
js
jp
out
test
dec
fld
out
push
cmp
repz
dec
mov
jge
(bad)
push
mov
outs
popa
(bad)
imul
dec
lock
jl
mov
push
scas
inc
add
or
inc
repnz
inc
cdq
leave
push
out
adc
mov
mov
jmp
pop
aaa
fldenv
xchg
sbb
and
or
cmp
or
out
sbb
jo
mov
cs
cmps
dec
sub
xchg
jmp
jae
outs
(bad)
in
inc
leave
pop
out
sahf
pushf
pop
movs
push
ja
pop
enter
sub
ret
retf
(bad)
loop
fild
sub
fisub
jg
and
and
(bad)
in
mov
jae
unpckhps
leave
repz
xchg
in
xor
push
add
(bad)
je
pop
add
jo
cld
mov
push
out
adc
lods
sub
jmp
adc
out
ins
sahf
and
xor
stc
movs
loope
fcomp
mov
xchg
bound
dec
cmp
inc
lock
out
es
add
out
mov
xchg
(bad)
test
lods
jae
test
jge
stc
outs
in
sbb
nop
aam
push
addr16
sbb
std
outs
jmp
mov
neg
push
xchg
adc
xor
rcl
dec
mov
mov
xchg
adc
xchg
idiv
push
fnstenv
mov
cmp
in
ja
mov
and
jg
push
into
add
push
popf
hlt
das
inc
sub
jmp
cdq
push
jp
jne
(bad)
leave
xchg
jmp
(bad)
xor
jle
sub
fsubr
dec
je
out
rcl
pushf
mov
dec
mov
scas
push
mov
shl
mov
or
pcmpeqb
dec
icebp
mov
xchg
ret
mov
jle
push
int
lods
inc
adc
pop
xlat
(bad)
imul
mov
push
fbstp
in
pushf
cld
cwde
aas
retf
push
cmp
test
xlat
sub
and
daa
mov
sti
out
lods
loope
xor
sbb
inc
sbb
sbb
push
xor
xchg
daa
cmp
cld
pusha
sbb
jbe
gs
mov
ret
rcr
test
imul
inc
sbb
mov
aad
adc
jno
jecxz
jnp
mov
dec
inc
mov
aad
jecxz
push
movs
fimul
and
sub
push
mov
test
inc
pop
jo
push
inc
and
lahf
pop
sbb
dec
lods
(bad)
retf
nop
mov
pop
mov
mov
sbb
jnp
xchg
and
mov
pop
daa
cmp
adc
lods
push
test
scas
push
lods
inc
dec
out
mov
outs
pusha
enter
es
xor
and
mov
movs
loop
rcl
cmps
push
push
call
push
out
in
int3
out
pop
cmp
push
adc
cmp
push
cmp
pop
pop
psllw
pop
dec
add
pop
daa
mov
xor
dec
shl
(bad)
or
and
fstp
cmp
cmps
adc
call
enter
cli
or
adc
jmp
mov
push
pop
sub
stc
jl
or
add
jb
aaa
jecxz
popa
fadd
pop
sbb
cmp
mov
cli
in
fbld
shl
inc
out
int
dec
cmps
mov
mov
dec
add
add
adc
xchg
inc
inc
add
mov
xor
mov
jmp
mov
fstp
(bad)
sahf
push
sub
mov
fnstcw
jmp
jecxz
pop
xchg
mov
cwde
mov
push
push
pop
fcomp
mov
and
xchg
nop
mov
or
sub
test
sbb
add
cmp
sub
dec
xor
inc
sbb
xchg
cdq
popa
out
sahf
push
push
add
in
leave
mov
gs
and
dec
push
pop
cmps
mov
mov
pop
adc
sub
lea
nop
xchg
adc
fst
ds
add
adc
jb
mov
and
cdq
fist
shr
cmp
shr
loop
push
adc
pushf
dec
add
add
popf
adc
lea
fcmovu
cmps
push
in
or
jmp
pushf
lods
retf
daa
es
jmp
add
shl
repnz
mov
push
out
dec
mov
pop
or
jo
popf
pop
aas
fst
cmp
popa
test
push
ror
xor
inc
ret
popf
test
lds
dec
sbb
mov
sbb
xchg
leave
or
mov
call
ins
lahf
mov
mov
es
js
xor
xchg
mov
push
imul
jmp
push
retf
push
das
(bad)
xor
cmp
dec
cmp
repnz
cmp
jbe
(bad)
mov
ret
mov
cmc
xor
(bad)
jo
inc
(bad)
jne
movs
aas
(bad)
add
aaa
cmps
cmps
adc
push
fwait
sti
push
cmp
ja
in
scas
pop
div
dec
jle
and
push
xor
mov
fisub
jmp
jb
cmps
mov
cmps
mov
add
imul
test
xor
adc
shr
mov
and
sub
jecxz
xchg
dec
loope
dec
mov
movs
clc
inc
pop
push
fwait
sti
push
cmp
xlat
sbb
inc
scas
movs
div
xlat
sbb
mov
int3
jns
inc
enter
sti
and
jb
inc
inc
jmp
xchg
bound
jns
jg
scas
jae
and
add
push
not
push
cmp
dec
test
aaa
cmc
pop
fisubr
scas
aad
lods
sbb
or
stos
cmps
and
shl
mov
mov
(bad)
pusha
inc
jp
loopne
and
sahf
(bad)
add
sbb
dec
push
add
or
inc
sbb
xor
push
and
(bad)
fisubr
pop
cs
mov
and
xchg
int3
lds
popf
mov
pop
scas
cmp
int
div
inc
mov
add
pop
pop
pop
scas
adc
inc
ror
movs
push
scas
repnz
das
cmp
leave
and
icebp
aad
icebp
inc
aas
retf
and
repnz
jle
jbe
cdq
das
cmp
retf
cmp
jbe
pop
cs
retf
cmp
test
mov
mov
cmp
clc
add
jae
sahf
or
jae
push
pop
mov
shl
scas
pop
loopne
repnz
lods
fs
out
mov
fistp
push
mov
repz
test
mov
loop
js
xor
(bad)
mov
(bad)
mov
inc
test
(bad)
pop
jl
bound
aam
aad
movs
jle
out
cmp
mov
or
test
aas
dec
int
and
ret
inc
out
das
cld
sub
pusha
dec
or
mul
(bad)
xor
mov
sub
sub
dec
jecxz
push
bound
mov
addr16
jae
and
push
das
nop
test
stos
push
stos
add
push
push
shr
sbb
and
xor
fist
dec
xchg
cmp
cmp
call
lock
int
mov
fsubr
test
je
push
rcr
pop
je
push
cmp
lds
int3
sbb
test
ret
push
push
inc
retf
push
mov
shl
mov
(bad)
hlt
xor
xchg
mov
jne
inc
enter
ret
xchg
and
lods
pushf
imul
mov
leave
push
(bad)
mov
mov
pusha
sub
fucomi
jne
stos
cld
and
add
jae
outs
into
dec
je
jmp
nop
nop
mov
and
loopne
cmps
mov
test
xor
jno
je
aad
xor
aad
mov
mov
sub
arpl
stc
mov
mov
mov
xchg
xlat
inc
pop
jns
and
clc
push
mov
mov
xchg
sub
scas
dec
cmp
sub
push
xor
jae
jb
mov
neg
xchg
xor
inc
cmp
and
jo
push
mov
jbe
xchg
js
lods
test
cmp
and
pop
push
dec
jmp
gs
aad
sbb
loopne
xchg
xchg
add
cmp
xchg
int3
mov
shl
and
mov
imul
jae
mov
or
outs
fcom
sbb
cmp
movs
push
adc
xchg
popf
mov
jmp
cli
mov
fwait
jecxz
lahf
mov
jp
sub
(bad)
fidivr
popf
jp
cmp
cmp
mov
repnz
jb
enter
xchg
mov
movs
out
mov
stos
and
mov
call
push
cmp
out
push
sub
jae
test
loop
lahf
pop
sbb
inc
inc
repz
aam
test
cmp
sbb
iret
movs
inc
jae
ror
fnstenv
ror
and
or
dec
push
jp
jo
retf
repz
jae
aam
sbb
and
int
xchg
arpl
jae
aam
sbb
and
int
xchg
arpl
jae
aam
sbb
and
into
sbb
and
lea
sub
jae
aam
push
xchg
arpl
jae
aam
sbb
and
int
xchg
arpl
sub
aam
aas
mov
lea
mov
xchg
aas
mov
test
div
add
mov
pop
jg
je
js
xor
jno
inc
(bad)
mov
movs
aas
(bad)
add
icebp
repnz
and
cwde
mov
sub
ins
jg
aad
or
les
sub
in
xchg
jp
jge
xlat
or
xlat
(bad)
fiadd
xchg
int
sahf
adc
sti
xchg
lock
dec
cli
inc
sbb
add
shr
rcl
aaa
dec
sti
daa
or
dec
je
mov
sub
inc
and
imul
pop
cmp
sbb
rol
or
rcr
adc
or
outs
or
stos
push
mov
scas
xlat
outs
iret
push
mov
rep
in
sub
mov
sub
and
popa
push
daa
dec
xchg
clc
sub
std
int3
add
push
adc
stc
popa
dec
adc
je
out
xchg
mov
das
loopne
ror
mov
test
std
sub
push
jbe
pop
pop
cmp
push
(bad)
push
dec
imul
inc
lods
or
xchg
scas
es
out
mov
dec
mov
mov
das
pop
or
xchg
pop
jbe
das
pop
jbe
das
pop
jbe
stos
pop
xchg
stos
xor
jae
shl
scas
in
or
dec
fnstcw
cwde
sub
xchg
outs
or
div
xor
lahf
mov
or
cdq
out
or
cmps
sbb
div
fld
sub
add
jl
sbb
arpl
mov
mov
sti
jle
test
push
data16
sub
loope
mov
adc
popa
push
pand
cld
push
cdq
jb
and
inc
pop
or
push
mov
xor
aad
xor
and
movs
add
jb
or
xchg
dec
lock
or
pop
sub
or
mov
pusha
dec
pop
cmps
or
sbb
or
es
lods
retf
repz
or
js
mov
ret
push
test
or
scas
sub
add
push
add
mov
or
imul
jmp
(bad)
cmp
push
inc
jae
shr
stos
mov
cld
pop
cli
mov
push
imul
call
adc
sbb
inc
sub
lds
push
ror
fstp
and
sbb
ret
sbb
inc
out
sbb
repz
ja
ss
cmp
adc
enter
and
pop
jne
mov
aaa
jp
cs
sbb
out
add
mov
lods
dec
and
(bad)
mov
and
cld
mov
call
dec
pop
fild
push
neg
in
add
jg
push
addr16
cmp
ret
pop
xchg
cmp
xor
or
push
sub
nop
add
and
rol
jle
lock
ret
rcr
dec
xlat
repnz
imul
push
jae
addr16
xor
mov
mov
clc
retf
retf
(bad)
mov
ret
xor
cmp
xor
(bad)
nop
ss
cmp
and
nop
dec
fucompp
sub
stc
push
and
mov
mov
mov
mov
aas
add
test
mov
repnz
div
ds
ret
hlt
inc
clc
div
les
xor
(bad)
mov
loop
sub
jno
pop
jge
or
adc
jge
push
mov
imul
cmp
xchg
pop
ret
pop
xchg
sbb
bound
arpl
loopne
mov
retf
jp
outs
loop
lock
xchg
dec
shl
mov
in
mov
sub
mov
xor
xor
dec
out
or
xor
mov
jge
rol
push
sahf
movs
(bad)
fbstp
push
imul
add
shl
cs
cmp
jle
jp
adc
lea
xchg
fild
clc
add
hlt
xor
sub
mov
mov
fsub
bnd
ja
add
fld
xchg
cmp
mov
cmp
xchg
pop
jmp
cmp
xchg
mov
jp
xchg
call
leave
outs
int
(bad)
fst
mov
fs
and
mov
fwait
mov
aam
repnz
jg
movs
xchg
inc
push
adc
xchg
xchg
fstp
sahf
jae
(bad)
cmc
ins
sbb
xor
xor
pop
popa
dec
cmps
add
les
movs
add
sti
and
in
add
add
pop
(bad)
outs
sti
pop
add
repz
in
sbb
inc
push
mov
jle
add
push
and
jno
xlat
cmps
xor
jp
out
cdq
daa
mov
loope
mov
stos
inc
mov
lock
je
data16
jge
daa
aad
(bad)
mov
xchg
loope
ret
cmp
fisubr
lods
(bad)
mul
push
jmp
sti
inc
jo
or
fldenv
lds
cmp
lock
add
inc
mov
sti
cmp
call
push
add
mov
fld
ror
out
dec
movs
inc
mov
dec
int3
jge
outs
mov
shr
sub
pop
xlat
aam
enter
cmps
sbb
je
push
sbb
ret
stos
and
or
mov
sub
dec
xchg
jo
xchg
push
xchg
sub
mov
cmp
jns
pop
int
imul
jg
adc
jnp
xchg
xchg
cmps
inc
(bad)
mov
retf
add
add
cmp
cmp
mov
inc
fldenv
sub
jmp
xor
mov
sbb
loope
test
xor
js
xor
ror
(bad)
sbb
inc
xchg
outs
mov
(bad)
popf
xchg
int
mov
les
mov
and
jns
jl
sbb
std
cli
aas
and
pop
scas
movs
lahf
mov
sub
jae
jns
dec
jge
aas
mov
lea
mov
xchg
aaa
mov
test
mov
test
mov
add
div
add
mov
inc
push
les
cmc
lock
xor
cmp
mov
jne
xchg
call
cdq
inc
sbb
dec
es
jae
jo
and
mov
push
xor
jno
ins
dec
es
leave
inc
das
arpl
out
sub
dec
pop
xchg
outs
inc
jl
mov
fucomp
push
imul
mov
gs
sub
jbe
pop
mov
mov
lahf
mov
fistp
adc
push
xchg
ficom
jae
xchg
rcr
ins
test
pusha
push
call
ror
mov
jle
sbb
or
ficomp
ins
(bad)
outs
mov
outs
repz
repnz
ins
jmp
add
out
and
daa
jns
cmp
sahf
loope
push
fiadd
jno
aam
and
lock
adc
inc
jne
mov
lock
mov
jmp
jle
xor
js
and
and
xchg
push
jae
jmp
xchg
leave
cwde
pop
xchg
and
(bad)
pushf
adc
out
test
cmc
pop
jmp
mov
add
ret
and
xchg
in
inc
xor
push
jecxz
sbb
loop
in
scas
push
sar
sub
mov
pop
cmp
push
xor
retf
nop
and
shl
in
push
retf
stos
push
sti
ret
add
push
xchg
cwde
jmp
out
out
in
ret
mov
add
retf
sar
fwait
inc
sbb
fidivr
dec
fisub
mov
xchg
push
and
sti
not
cmps
dec
leave
cmp
adc
sbb
outs
cmps
xor
sbb
stos
xor
push
push
data16
mov
lods
pop
into
jae
push
dec
lds
fcmovnbe
pop
rol
or
rcl
dec
pop
xchg
pop
scas
ds
push
push
mov
cdq
push
pop
addr16
cli
pop
dec
imul
cs
mov
xor
(bad)
in
xor
in
push
test
daa
pop
push
test
imul
jb
loope
mov
out
stos
mov
data16
(bad)
mul
sbb
mov
icebp
pop
arpl
xor
(bad)
iret
mov
js
jb
xor
jecxz
mov
mov
inc
ja
dec
xchg
push
dec
fwait
push
xor
je
pop
pop
inc
int
push
in
or
in
fild
scas
xor
jmp
mov
lods
jo
mov
push
stos
inc
sahf
stos
push
stc
nop
push
dec
shl
test
nop
in
fs
mov
sub
out
(bad)
fld
test
sbb
and
es
imul
mov
dec
shl
sub
imul
jmp
xor
xor
or
mov
pop
jbe
pop
cmp
dec
and
fisubr
fcmovbe
pop
fdivrp
push
ret
inc
pop
inc
js
aas
cwde
jbe
test
inc
xchg
pop
mov
fidiv
mov
movs
lock
jns
pop
add
xor
lods
jmp
xor
inc
xchg
arpl
mov
mov
ins
xlat
imul
mov
sbb
mov
mov
mov
neg
sbb
jle
out
in
(bad)
mov
xchg
mov
add
out
icebp
jno
in
cwde
out
add
pop
bound
jmp
xor
sbb
fdiv
cmp
and
pop
fwait
sub
retf
lock
or
mov
mov
cmp
mov
adc
jecxz
xchg
inc
jecxz
mov
dec
or
cmp
out
xchg
add
repz
or
dec
inc
ja
aaa
push
and
mov
push
pusha
jae
repnz
cs
ret
adc
mov
add
sub
mov
jecxz
inc
mov
lods
dec
dec
fsub
mov
dec
fs
adc
jle
dec
sbb
clc
jecxz
lea
cli
lds
and
mov
repnz
cli
movs
fist
mov
sar
jmp
add
imul
and
dec
aaa
jns
movs
cmp
stos
jne
adc
mov
psubd
push
xchg
mov
sbb
stos
push
outs
rol
sbb
inc
cli
mov
mov
sti
mov
lods
mov
je
mov
cli
aam
xor
fimul
shl
mov
pop
xrelease
push
aam
nop
loopne
test
jl
(bad)
out
out
xchg
(bad)
mov
or
pushf
cmp
mul
cmp
repz
mov
dec
das
cmps
rcl
sbb
fisubr
jnp
retf
xchg
lds
fmulp
imul
ror
out
in
mov
jns
in
xor
(bad)
xchg
sub
(bad)
mov
xchg
mov
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loope
rcr
icebp
cmp
pop
sar
test
cmc
test
mov
test
mov
test
mov
test
mov
xchg
and
inc
aas
mov
cmp
mov
test
mov
xor
mov
ror
aaa
mov
test
repnz
shl
test
shl
test
mov
test
mov
test
xchg
jae
cmps
mov
jl
les
cmp
repnz
das
ins
push
scas
loopne
jge
xchg
pop
scas
stos
mov
dec
shl
jp
xchg
stos
push
lds
mov
xchg
xor
fst
fbld
and
mov
mov
jge
add
adc
jmp
lock
inc
out
ins
mov
lds
mov
jno
mov
mov
bound
and
xchg
enter
cmp
lds
cli
or
dec
xchg
shl
add
mov
popf
xlat
mov
aaa
pusha
dec
dec
stc
les
lods
dec
mov
push
cld
(bad)
or
pop
sbb
jo
outs
or
xor
lock
inc
add
cmp
in
das
inc
mov
mov
fwait
xor
pushf
bound
mov
mov
mov
cmp
bnd
jge
rcl
mov
test
mov
jle
or
or
cli
outs
(bad)
mov
test
xor
xchg
repnz
add
xor
cmp
nop
push
leave
xchg
pushf
addr16
jl
cmp
mov
out
mov
test
mov
fdiv
cmp
(bad)
cmp
bnd
data16
daa
out
pop
lock
das
test
cmps
and
push
test
lahf
adc
sbb
pop
push
daa
cmp
gs
imul
dec
lahf
fwait
mov
js
dec
aad
mov
rcr
mov
dec
test
cmp
cmp
loop
aad
ss
jge
xor
shl
and
mov
test
(bad)
shr
sub
fcmovu
xor
(bad)
sahf
retf
cmp
jmp
lods
loopne
div
cdq
push
cmp
xor
inc
mov
jo
inc
dec
dec
cwde
gs
test
mov
icebp
mov
retf
inc
sub
mov
and
pop
sub
xor
dec
pop
cwde
ss
mov
jle
add
xchg
cmp
repnz
xchg
sub
inc
ret
movs
add
jne
popa
push
mov
sub
cli
xorps
vmovmskps
or
iret
test
lock
mov
jmp
pop
jmp
aam
add
push
mov
push
and
or
mov
mov
test
xchg
repnz
cli
xchg
in
xor
lds
test
and
test
mov
cwde
sbb
mov
lea
mov
test
mov
test
mov
leave
das
mov
scas
sbb
adc
cmp
test
mov
test
mov
push
stos
in
fwait
dec
loope
xor
repnz
mov
repnz
xor
test
mov
sar
mov
cmp
mov
stc
sbb
add
out
push
scas
nop
dec
add
into
dec
mov
push
pop
fdivr
push
inc
pop
push
pop
adc
test
adc
push
(bad)
fst
add
test
(bad)
shr
repz
push
and
std
inc
aad
or
fwait
das
(bad)
je
or
shl
loop
call
pop
inc
pop
ret
retf
daa
jge
dec
ret
and
lahf
pusha
int3
fcomp
repz
xor
in
mov
mov
or
jg
cmp
lds
repz
jl
cmps
ror
in
push
das
test
data16
adc
lods
loope
loope
push
dec
out
(bad)
icebp
sbb
cmp
mov
push
mov
shr
ins
and
or
daa
fiadd
(bad)
mov
retf
daa
cwde
imul
xchg
adc
pushf
mov
and
dec
or
adc
addr16
(bad)
sti
mov
or
and
lds
pop
call
push
retf
jmp
mov
mov
add
popa
push
in
mov
ffreep
sahf
sbb
repnz
shr
cwde
sub
add
dec
inc
sbb
or
and
cmc
push
inc
xchg
pop
and
or
fwait
xchg
push
sub
cmp
mov
outs
push
or
push
ficom
cmp
aam
pop
xchg
cmp
ret
mov
sub
retf
scas
mov
imul
push
out
je
sbb
rol
sub
mov
(bad)
pop
dec
out
or
std
popa
pop
call
loop
jmp
inc
hlt
std
jmp
icebp
imul
cwde
or
sub
icebp
mov
mov
mov
cmps
inc
cmp
cli
xchg
jae
mov
mov
cmp
or
jae
icebp
repnz
inc
cmp
dec
cdq
cmp
dec
test
inc
repz
xor
dec
movs
loopne
or
into
test
test
push
sbb
xor
repz
ins
pop
mov
adc
outs
xor
add
sub
inc
mov
shl
icebp
shr
mov
push
fwait
cmc
iret
cli
mov
mov
xor
fimul
mov
pop
call
or
or
bound
jb
pop
mul
in
aam
mov
or
ror
mov
stos
fnsave
inc
pop
ja
inc
pushf
idiv
mov
test
mov
mov
jmp
mov
mov
lods
xor
sub
jno
mov
out
push
(bad)
int
ins
and
adc
or
mov
pushf
fcom
sub
inc
scas
mov
retf
jle
out
xor
mov
nop
aaa
movs
(bad)
(bad)
imul
xor
cmps
sub
and
inc
dec
or
push
aad
sti
mov
mov
and
nop
test
aas
(bad)
es
and
rcl
lods
std
movs
xor
mov
ret
jae
scas
aas
popa
retf
cmp
movs
add
inc
test
xchg
push
dec
hlt
sub
xor
push
mov
add
je
mov
adc
nop
loope
ins
mov
pop
jle
cmps
clc
nop
ret
data16
push
adc
fucom
sub
retf
sub
adc
sti
inc
mov
jge
push
fidivr
sub
retf
test
xlat
repnz
mov
push
cwde
xor
clc
add
jecxz
int3
pop
js
psubd
and
daa
mov
test
inc
and
add
mov
ss
sar
mov
fisubr
enter
mov
xchg
push
mov
daa
es
mov
sbb
add
xor
cs
pop
out
xchg
sbb
les
and
mov
jle
mov
add
jl
push
cmp
push
push
dec
fist
mov
out
scas
test
loope
xchg
clc
cld
mov
aad
pop
inc
aam
mov
es
dec
xchg
and
pop
jg
call
ins
mov
sub
call
popa
pop
mov
mov
xchg
std
fimul
jl
jecxz
loop
shl
shl
movs
call
call
or
ins
stos
jg
stc
inc
popf
mov
jno
cmp
push
cmps
inc
out
push
cmps
adc
or
sbb
mul
jp
in
cwde
call
and
mov
fild
into
jne
xor
out
cmp
repnz
jg
loop
mov
mov
or
jns
mov
std
jo
inc
and
mov
div
jle
ds
jnp
arpl
xor
movs
aas
(bad)
add
mov
adc
push
mov
fwait
js
imul
int3
stos
scas
or
loopne
pop
and
outs
(bad)
push
pop
add
(bad)
sub
push
fdivr
jg
sbb
sub
cmp
xchg
(bad)
loopne
aam
xchg
xor
mov
cmp
pop
jecxz
or
mov
mov
mov
and
jge
push
test
icebp
call
inc
arpl
add
(bad)
out
jno
sub
sub
mov
ins
mov
inc
and
nop
xor
int3
push
lock
cmc
pop
scas
sub
push
mov
xor
mov
or
iret
repz
push
inc
xor
sbb
adc
push
pushf
cwde
test
lahf
stos
in
xchg
push
arpl
cmc
(bad)
cli
jmp
mov
pop
imul
(bad)
add
aad
mov
add
call
jo
jb
ins
ins
and
shl
les
ins
aaa
push
add
xor
inc
add
in
or
pusha
mov
into
arpl
mov
fst
movs
outs
pop
cs
mov
imul
sahf
sbb
add
in
loope
add
lods
mov
add
push
mov
sbb
rol
jl
mov
mov
outs
(bad)
sub
pop
pop
dec
jg
jecxz
and
push
arpl
repnz
sub
jae
pop
pusha
lar
fist
scas
jmp
dec
cwde
bound
sub
jnp
imul
imul
data16
push
retf
test
push
paddusb
ds
mov
js
pop
sbb
dec
push
inc
add
stc
shl
or
lahf
dec
pusha
das
mov
imul
jns
inc
mov
(bad)
fdivr
cli
out
fidiv
sar
xchg
xchg
rol
ss
(bad)
mov
jno
push
mov
xor
xor
sbb
xchg
dec
repnz
add
mov
jo
sbb
mov
call
xchg
pushf
cmp
iret
jo
fidiv
ins
dec
sub
ret
and
adc
fucom
inc
mov
je
int3
das
loop
mov
clc
das
jae
xlat
dec
dec
pop
lods
ins
jns
stos
loope
cmc
mov
sbb
fistp
stos
pushf
inc
mov
lods
adc
pop
and
add
mov
retf
rcl
inc
daa
add
pop
stos
ins
(bad)
sbb
mov
das
nop
imul
jge
daa
fwait
xchg
push
or
push
xor
pop
pop
xchg
adc
sbb
cmp
adc
stc
mov
shr
test
adc
jp
cmc
(bad)
mov
mov
push
jmp
pop
int
scas
retf
xchg
add
mov
pop
retf
fisttp
jl
and
ret
mov
mov
xchg
(bad)
pushf
or
cmp
xor
jae
int3
and
pop
sub
mov
xchg
rcr
mov
xor
daa
(bad)
jge
daa
hlt
es
mov
nop
cmp
int3
cs
popa
or
inc
xchg
add
cmc
sahf
mov
fbstp
adc
push
ja
or
or
mov
pop
push
jne
pop
mov
jne
or
pop
sub
mov
pop
cmps
out
inc
push
ins
mov
imul
jecxz
sbb
icebp
mov
out
xchg
ins
xor
mov
loopne
adc
fwait
and
jnp
push
ror
arpl
xchg
clc
inc
dec
stos
mov
std
jo
popf
push
or
aas
lea
stc
mov
fucom
adc
and
popf
mov
mov
or
jb
xlat
mov
rol
cmp
fnstsw
mov
je
and
imul
mov
mov
fstp
cmps
sbb
cmc
adc
push
sbb
test
xchg
sbb
dec
xor
imul
jmp
sbb
cmp
pop
ss
pop
adc
mov
fwait
jle
fwait
jl
cld
stos
adc
push
(bad)
in
je
pop
mov
call
lods
adc
mov
push
fistp
sbb
cmp
jmp
mov
push
das
sbb
aaa
ror
imul
mov
pop
dec
xchg
pop
pusha
push
and
retf
scas
jno
in
cs
cmp
js
lahf
rcl
xlat
pop
iret
cmp
jecxz
jb
aam
sbb
ret
mov
imul
in
or
push
sub
adc
push
jnp
add
int
ror
loop
xchg
shl
sar
icebp
add
icebp
xor
nop
push
jmp
int3
fldcw
or
repnz
dec
je
mov
pop
jmp
stc
inc
jnp
das
xchg
and
int
mov
out
dec
add
xchg
loop
xor
push
add
in
pop
sbb
pusha
nop
or
into
cmps
pop
mov
fcmovnu
sahf
rol
mov
repz
in
retf
lods
fs
jl
add
cdq
adc
test
out
jnp
xor
mov
(bad)
cmps
leave
mov
jge
out
mov
dec
adc
adc
mov
lods
(bad)
push
and
pop
pop
xor
cmc
(bad)
push
cmc
mov
bound
pop
pop
pop
das
xchg
mov
cwde
mov
mov
leave
mov
xchg
and
fild
mov
movs
sub
scas
ret
das
dec
and
cmps
clc
pop
fdivr
div
fisub
xchg
cmp
or
mov
mov
cdq
aaa
scas
out
cmp
repnz
loop
(bad)
cli
jbe
jnp
mov
xor
jp
mov
ss
cmp
sar
mov
out
cmp
test
mov
jbe
mov
out
xchg
and
sub
test
dec
fwait
cld
retf
cdq
push
dec
(bad)
xlat
xchg
mov
mov
in
loopne
out
ret
push
xchg
shl
data16
enter
xchg
jo
sti
inc
jg
inc
sub
in
in
xchg
imul
test
int3
pop
bound
fisttp
push
test
repz
and
loope
fist
mov
loopne
xchg
shl
sub
mov
dec
xchg
inc
push
pushf
inc
add
or
in
enter
ins
sbb
xchg
pusha
push
ja
loopne
push
nop
leave
add
mov
aad
jb
movs
stos
push
cmp
out
mov
mov
xor
mov
xor
xor
pop
adc
(bad)
nop
jmp
adc
jg
in
xchg
jnp
scas
mov
xchg
or
out
enter
mov
retf
jbe
cli
outs
test
or
mov
js
inc
jbe
push
cmp
sub
jge
sub
(bad)
mul
in
rcr
mov
sbb
cmp
mov
pop
outs
out
call
pop
test
fnstenv
adc
cli
stos
pmaxub
mov
or
nop
aaa
sbb
test
jmp
ret
test
outs
ds
dec
mov
mov
push
ffree
sub
pop
gs
lods
out
fdivr
push
push
das
xor
lea
push
add
pop
xchg
xchg
mov
jge
jecxz
mov
sbb
leave
mov
ins
inc
xor
adc
mov
or
cmp
add
inc
inc
sahf
sahf
dec
push
cdq
cli
clc
fadd
sbb
jns
dec
icebp
shr
mov
rol
sar
icebp
and
pop
fadd
arpl
mov
cld
popa
mov
xor
mov
mov
adc
and
and
fnstcw
sbb
cli
das
and
mov
fild
sbb
or
dec
movs
jmp
mov
jb
pop
jns
jnp
out
shr
rep
shl
test
jne
push
xchg
repnz
and
push
inc
or
adc
mov
scas
mov
cli
popa
and
sbb
push
push
in
push
neg
mul
(bad)
shl
sbb
mov
sub
sub
pop
fnsave
pop
cmp
push
mov
xchg
pop
imul
jle
inc
adc
movs
dec
mov
cli
in
jle
jmp
xchg
pop
(bad)
cmp
pop
sbb
mov
(bad)
dec
dec
xor
(bad)
hlt
add
inc
(bad)
neg
inc
pop
popa
lea
xchg
pop
or
xor
xchg
stos
dec
pop
sub
push
push
daa
push
sar
shl
pop
(bad)
xlat
icebp
and
int3
jge
dec
icebp
nop
pop
adc
lock
in
shr
push
inc
sub
fisubr
xor
movs
cmp
(bad)
or
mov
mov
sbb
aas
loope
sahf
xor
xchg
sbb
mov
cmp
rcl
rcl
cs
inc
dec
mov
lds
(bad)
xchg
mov
int
sbb
and
or
mov
push
or
or
scas
daa
shr
pop
sahf
sahf
or
xlat
outs
test
and
pop
sub
inc
sar
jecxz
pop
fisttp
aaa
or
sbb
and
retf
ins
and
lea
fsubr
jl
mov
stos
or
stos
out
ja
icebp
in
fwait
pop
pop
sub
stos
mov
enter
xor
adc
inc
je
hlt
int3
jp
movs
or
movs
push
mov
lahf
dec
loope
aas
repnz
mov
test
mov
sar
test
xor
sar
jo
(bad)
cmc
xor
(bad)
mov
push
cwde
xor
adc
pop
(bad)
scas
sub
jns
mov
push
lds
dec
(bad)
jmp
in
sub
lock
mov
fld1
sbb
mov
mov
rcr
mov
mov
or
cmps
cmp
or
xor
cmp
add
fs
or
aas
ror
jge
lea
jecxz
dec
cmp
pop
xchg
push
aad
retf
xchg
lods
lds
inc
cmp
mov
push
frstor
and
in
jmp
jle
int3
sub
add
or
lods
enter
aas
mov
xchg
aas
test
push
cmp
cmps
movs
xchg
mov
mov
mov
adc
adc
div
es
xchg
mov
sub
jecxz
xlat
aaa
and
aam
test
fistp
and
mov
adc
sbb
std
(bad)
lds
mov
xchg
xchg
shr
mov
adc
jno
lods
iret
push
pusha
(bad)
or
inc
jge
mov
sti
and
ficom
lods
fst
jg
call
jbe
jbe
xchg
mov
cmc
leave
les
and
in
aam
mov
push
sub
movs
ja
out
sub
add
js
std
jle
or
add
cmp
cmc
loopne
lds
scas
push
mul
pop
in
ds
test
or
push
std
retf
fcomp
in
xchg
xor
mov
jmp
pop
outs
inc
push
push
dec
push
sbb
push
das
scas
inc
mov
pop
repz
mov
jg
inc
in
cmps
fidivr
pop
ret
inc
addr16
cmc
and
fimul
cli
ds
int3
xchg
jbe
out
mov
lods
bound
mov
into
out
hlt
fstp
in
jge
out
mov
aaa
adc
neg
popf
ja
loop
stc
rcr
sub
inc
push
loope
and
push
(bad)
mov
xchg
retf
aaa
push
outs
push
xchg
push
pop
mov
movs
(bad)
mov
adc
push
or
adc
mov
scas
xor
jb
sahf
imul
das
cmp
mov
ds
pusha
jmp
nop
push
push
not
add
ins
in
aaa
sbb
cwde
adc
jge
push
ss
pushf
push
js
adc
pop
lahf
cdq
inc
cmps
mov
mov
mov
adc
mov
out
jmp
repz
(bad)
xchg
and
mov
jbe
adc
xor
clc
pop
and
mov
into
retf
es
in
test
add
sub
jnp
xchg
inc
aas
test
or
ret
pop
fst
xor
(bad)
push
loope
(bad)
push
loope
(bad)
push
loope
(bad)
jo
mov
out
cmp
jno
cmp
repnz
push
fld
mov
sub
bound
pop
push
fld
mov
sub
bound
pop
mov
inc
jmp
xchg
pop
and
pushf
push
fstp
inc
mov
bound
pop
(bad)
fld
mov
and
pushf
adc
fiadd
sub
push
or
inc
repz
sub
bound
and
sti
and
sub
bound
cld
push
fld
jl
sub
bound
ins
push
fisttp
lock
and
popf
nop
push
fbstp
and
sahf
in
push
fisttp
xor
sub
bound
dec
push
fisttp
add
pushf
mov
lock
pushf
adc
inc
ret
cld
add
pushf
call
push
sub
bound
pop
in
fild
mov
pop
and
pushf
pop
and
sbb
bound
pop
sbb
jmp
and
pushf
pop
push
fld
mov
mov
bound
pop
push
fld
mov
sub
mov
mov
xchg
mov
repnz
icebp
lea
mov
xchg
sub
test
mov
cmp
jbe
std
hlt
mov
clc
mov
jp
xor
sar
mov
xchg
ret
pop
arpl
jns
sbb
mov
sub
mov
adc
sub
enter
into
pop
daa
stos
daa
popf
enter
mov
movs
jmp
sahf
pop
mov
push
(bad)
mov
add
cli
mov
add
push
fsub
inc
adc
sbb
call
int
(bad)
mov
mov
jb
pusha
je
push
sbb
push
jle
jnp
cs
ror
stos
scas
lds
jno
retf
les
push
push
in
sti
fsub
lods
pop
cmp
test
xor
fist
mov
arpl
jl
adc
cld
ret
push
adc
mov
cli
mov
pop
jg
test
sbb
inc
hlt
test
je
out
stos
mov
rcl
push
cld
xchg
das
push
mov
(bad)
adc
lock
pop
or
push
adc
or
test
xchg
fisttp
call
aad
aam
jmp
ins
fiadd
jmp
mov
test
dec
jo
into
fisubr
inc
sti
add
fcomp
lods
and
fisubr
push
add
popf
jb
sub
sub
inc
mov
aaa
jne
mov
into
loop
mov
gs
les
xchg
mov
popf
(bad)
jmp
mov
cwde
js
jns
frstor
iret
jo
sub
test
gs
dec
stc
sub
call
call
mov
inc
cld
(bad)
rol
sbb
and
inc
jg
pop
daa
sti
and
fs
inc
mov
bound
push
out
jmp
mov
loopne
mov
int3
rcr
(bad)
adc
jmp
outs
out
cmp
loope
and
sub
inc
inc
retf
mov
mov
inc
mov
jg
ficomp
cld
rcl
adc
pushf
adc
cmp
sar
jbe
adc
ficomp
push
les
and
iret
mov
mov
(bad)
pop
dec
fwait
sub
ret
xlat
pop
rcr
or
iret
std
mov
cmps
dec
cmp
pop
and
mov
(bad)
iret
push
movs
fmul
xchg
mov
pop
in
adc
jnp
fidivr
pop
adc
mov
sbb
out
data16
xor
cmp
inc
stos
fnstcw
ins
outs
aam
imul
mov
sbb
fadd
mov
repnz
sahf
mov
rol
cmp
jge
mov
mov
(bad)
aad
not
sub
mov
int
cwde
addr16
call
xor
xchg
pusha
jnp
xor
outs
lea
mov
xchg
xor
test
div
inc
mov
je
add
les
movs
aas
(bad)
add
lock
push
mov
dec
adc
iret
xchg
stos
fdivr
repz
fisttp
pop
in
adc
test
lahf
cmc
xor
mov
loop
movs
in
jle
xor
sbb
test
dec
push
push
jae
dec
xor
mul
or
movs
pop
push
sti
mov
adc
sub
push
mov
mov
add
popf
icebp
lea
or
call
leave
or
scas
retf
cli
mov
add
jmp
clc
int
retf
popf
ins
jmp
and
xchg
dec
xchg
cmps
xor
push
mov
xchg
xor
cmp
xchg
repnz
adc
push
out
cld
sbb
(bad)
mov
sti
test
cmp
stos
mov
scas
cmps
mov
stos
xchg
sub
cld
cmp
mov
mov
jl
mov
ins
dec
and
int
inc
jp
cmp
popf
push
inc
xchg
in
lea
and
popa
adc
mov
ret
mov
cwde
fldpi
pop
loope
mov
add
xchg
xor
rol
jb
jp
sbb
mov
or
xor
bound
mov
mov
ds
inc
jle
mov
inc
mov
xor
fdiv
push
add
sbb
sub
dec
call
int
xchg
jae
in
lods
mov
and
out
sahf
jle
rcl
cmp
daa
fst
and
jne
push
sbb
repnz
shr
pop
sub
arpl
dec
mov
fwait
aam
retf
pushf
sbb
mov
dec
inc
push
arpl
shl
pusha
nop
scas
outs
ror
and
mul
neg
cli
outs
ins
movs
cmps
and
lods
inc
shr
shl
sub
mov
out
clc
mov
sub
mov
dec
and
dec
or
or
fdivr
xchg
cmp
movs
in
sti
push
repz
(bad)
stc
pop
pop
out
push
mov
mov
mov
sbb
or
add
cmp
ja
and
ins
stos
movs
mov
add
adc
push
ficom
imul
add
retf
xchg
push
sbb
push
add
cmps
inc
xor
add
stc
into
pop
bound
mov
fsub
stos
inc
pop
test
or
retf
ret
ret
push
and
rol
xor
ins
iret
mov
mov
pop
xchg
push
adc
sub
ja
jne
push
mov
pop
and
movs
inc
mov
push
test
pop
popa
ds
cli
loop
dec
mov
fwait
push
repnz
imul
fsub
dec
sar
int3
(bad)
sub
out
sti
ss
dec
dec
cwde
hlt
inc
ret
call
sbb
nop
xlat
lods
adc
mov
aas
xchg
xor
leave
cwde
xchg
sub
jb
inc
ss
sub
inc
xor
je
sub
xor
out
out
xchg
jmp
mov
jb
jbe
inc
inc
fs
cwde
mov
in
out
push
jp
or
mov
iret
test
out
cli
(bad)
test
xor
sbb
inc
jns
lea
fistp
inc
pusha
rcl
inc
repnz
sbb
ror
ja
dec
push
jp
dec
cli
push
(bad)
jmp
sub
adc
mov
nop
push
mov
inc
push
push
je
add
pusha
push
push
mov
mov
int
idiv
mov
xor
aam
pop
clc
or
into
ss
fwait
addr16
js
or
mov
aad
ds
mov
and
mov
xor
scas
xchg
mov
in
xor
sti
xchg
and
mov
pop
pop
popf
mov
mov
mov
pop
jb
sbb
repnz
test
leave
mov
adc
mov
adc
cmp
jmp
sar
mov
mov
pop
mov
clc
sub
cmp
repnz
mov
or
jno
jmp
sub
jo
sub
ret
inc
sbb
mov
push
lods
inc
mov
inc
xchg
pop
enter
pop
and
addr16
gs
leave
and
add
cld
dec
pop
xchg
popa
mov
repnz
test
mov
and
lds
jb
jnp
lds
lea
mov
mov
mov
test
div
jg
mov
mov
mov
out
cmp
cmp
mov
popf
push
mov
dec
or
gs
mov
cs
lock
imul
xor
(bad)
ins
movs
push
mov
out
out
mov
mov
stos
fstp
test
push
adc
sbb
fs
mov
aam
call
xor
jecxz
adc
ins
mov
xchg
hlt
call
inc
adc
aas
jbe
inc
test
jecxz
in
scas
push
clc
mov
xchg
mov
mov
xor
mov
shl
aas
sar
mov
jo
xor
fcomp
pusha
neg
test
sbb
xor
ror
mov
lock
xchg
dec
adc
outs
outs
popa
fs
cmp
push
in
call
or
xchg
into
mov
loop
cli
xchg
leave
daa
aas
push
lock
pop
mov
and
mov
mov
test
(bad)
bound
jnp
addr16
jmp
cmps
fsub
mov
jecxz
test
xchg
mov
or
mov
mov
dec
out
mov
jae
call
mov
xor
and
pop
mov
test
xor
xchg
ret
adc
test
cmp
test
repz
and
aam
and
push
fiadd
xor
sti
mov
mov
xor
nop
or
inc
and
aam
mov
push
xor
jae
bound
cmp
ret
mov
cli
xchg
stos
add
add
and
mov
maskmovq
div
fwait
into
ins
inc
xor
pop
jns
scas
adc
mov
jb
lods
dec
mov
rol
jns
cmp
sub
mov
and
mov
inc
into
xor
inc
push
xchg
shl
xchg
pop
mov
out
into
shl
adc
sub
jle
jb
js
outs
pop
push
xor
fild
hlt
bound
(bad)
ins
sub
(bad)
adc
out
mov
(bad)
xlat
mov
xchg
xchg
pop
pop
jbe
out
ror
mov
pop
inc
inc
mov
daa
mov
call
mov
sub
ror
sar
cmc
push
jp
add
arpl
shl
mov
push
push
stos
jmp
shl
xor
out
(bad)
retf
jecxz
(bad)
dec
mov
dec
scas
inc
test
loope
xor
mov
jmp
hlt
cmp
jno
cmp
or
push
pop
fldln2
out
xlat
inc
mov
pop
shl
cmp
lds
cwde
mov
pop
push
or
leave
push
retf
and
retf
cmp
lods
cmp
push
and
mov
inc
cmp
mov
mov
and
call
xchg
inc
mov
cdq
mov
dec
jmp
xchg
mov
adc
dec
mov
mov
fnstenv
sar
inc
add
sbb
sub
cdq
stc
jnp
sub
mov
sti
jbe
repz
out
cmc
xchg
fwait
repz
retf
xor
nop
stc
pusha
stc
xor
lds
jb
cmp
call
fdiv
in
pushf
jp
(bad)
mov
int3
dec
xor
xchg
cmc
ret
sbb
pop
fdivr
retf
aam
in
pop
push
in
shl
sub
xchg
or
sub
xor
mov
mov
mov
sar
leave
jbe
popf
add
pop
sbb
call
shl
push
xchg
int3
inc
inc
jmp
mov
mov
lock
xor
stc
xchg
repz
xchg
lahf
jp
mov
cmp
xchg
xchg
dec
mov
loope
add
push
xchg
(bad)
mov
pop
add
mov
and
fwait
mov
sub
popa
xor
cld
(bad)
stos
push
mov
ret
cdq
mov
jle
cmc
xchg
lahf
xlat
outs
ss
imul
fs
adc
call
mov
mov
cmp
imul
mov
cmp
out
adc
pushf
jmp
inc
push
pop
xor
das
mov
add
jns
and
pop
push
repz
push
dec
cs
dec
icebp
loop
xchg
fild
lahf
das
jmp
movs
in
mov
xchg
cmp
inc
lods
test
in
dec
pop
lods
retf
jecxz
dec
mov
cli
and
gs
fild
lahf
das
jmp
sbb
sub
(bad)
or
ins
add
retf
test
in
dec
pop
popf
retf
add
stos
loop
jge
push
cmp
or
cmp
mov
test
xchg
xrelease
fdivp
lea
mov
cli
xchg
aaa
mov
loop
sub
fidiv
adc
fidiv
pop
test
jg
stos
shr
mov
aad
shr
xchg
dec
popf
xchg
sub
loop
imul
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
mov
loop
test
not
mov
mov
lea
repnz
inc
cmp
test
mov
cdq
das
mov
mov
stos
sar
mov
cmp
mov
test
mov
test
mov
test
mov
popf
xor
out
mov
(bad)
lea
repnz
mov
xor
add
lea
sbb
jge
into
outs
push
je
inc
jb
add
cmp
(bad)
sub
cmps
popf
in
dec
mov
aas
mov
ffreep
sar
push
shl
or
sahf
ficomp
arpl
into
inc
dec
test
fisttp
in
jne
cs
cmp
xor
lds
sahf
mov
push
add
add
lahf
daa
lock
(bad)
cmp
xor
adc
jmp
(bad)
sahf
pop
pop
jmp
fsubr
movd
jno
mov
dec
and
in
jle
les
dec
lods
xchg
pusha
movs
cmp
push
mov
hlt
(bad)
adc
dec
xor
jg
ja
fs
les
ret
push
dec
lahf
push
dec
ss
call
mov
(bad)
and
fsubr
lods
cmps
jg
push
ins
cmp
dec
or
pop
lahf
inc
dec
pop
push
jmp
xor
retf
push
bound
dec
xchg
add
inc
lods
test
cs
jne
sub
aam
ret
call
dec
pushf
lods
inc
ret
add
sbb
sbb
pushf
adc
daa
inc
jae
xchg
(bad)
scas
or
or
or
inc
int3
pop
push
mov
ja
inc
jno
xlat
pop
sbb
outs
or
jns
ins
leave
jge
dec
call
aam
fdivr
ins
mov
jg
pop
mov
xchg
xor
(bad)
vpcomub
mul
in
or
dec
mov
jnp
sbb
fcomp
movs
xor
inc
add
xchg
ror
adc
test
mov
or
sar
dec
test
mov
mov
adc
cmp
repnz
mov
test
mov
loope
mov
test
dec
inc
leave
fwait
mov
push
xchg
jge
pop
cmp
jle
xchg
push
mov
xchg
jb
push
and
inc
jbe
in
pop
dec
in
shr
das
pop
ins
dec
call
adc
adc
fdivr
mov
push
outs
dec
dec
jnp
aas
add
pop
sub
sub
xchg
(bad)
jo
inc
jns
and
xor
mov
pop
mov
push
shl
movs
sub
ret
fdiv
test
push
ret
jne
test
sbb
aaa
pop
and
popf
test
(bad)
(bad)
std
mov
aaa
int3
(bad)
jle
dec
adc
aad
inc
add
out
mov
cli
inc
repz
loope
and
xchg
mov
jmp
and
jbe
popf
push
mov
inc
cld
sbb
fiadd
dec
push
fisub
push
pop
hlt
xchg
ins
and
test
test
jle
loopne
imul
push
or
mov
ins
shl
or
cs
or
xor
loopne
push
stos
add
call
add
sub
dec
xchg
add
inc
lods
test
cs
jne
dec
dec
sti
repz
rcr
add
repz
dec
nop
and
neg
push
jns
daa
push
ss
pop
imul
popa
daa
pop
dec
ins
jmp
or
pop
mov
xchg
je
push
and
mov
pop
aas
in
lods
(bad)
call
(bad)
cmp
sub
and
pushf
cmp
fsubr
movs
xchg
dec
inc
jne
fidivr
cmp
stos
inc
imul
or
cmp
cmp
add
jmp
mov
rol
mov
sub
mov
test
mov
repnz
and
test
jmp
push
xor
rcl
mov
stos
push
cmps
and
pcmpgtd
xor
movs
push
bound
add
pop
or
shr
rcl
(bad)
jge
pop
and
xor
inc
inc
fs
or
xchg
cmp
cli
adc
loopne
shr
mov
cmps
dec
aaa
jnp
xchg
or
les
fsubr
adc
es
push
adc
sbb
push
mov
inc
or
stos
pop
xor
and
inc
inc
jmp
pop
les
not
xor
ret
movs
out
div
mov
aas
mov
mov
jns
int3
xor
push
les
inc
xchg
adc
pushf
xchg
es
(bad)
xlat
addr16
adc
push
in
inc
jge
push
dec
aad
mov
std
outs
pop
xchg
adc
xor
daa
jmp
xor
sbb
xchg
bound
fs
hlt
ret
inc
jecxz
pop
mov
push
(bad)
js
test
sbb
dec
pop
sbb
pop
out
push
adc
inc
enter
stos
pop
imul
xor
dec
mov
xchg
fisttp
cmp
fmul
mov
mov
push
mov
and
fnstenv
ds
xchg
out
bound
jle
inc
inc
sar
les
xor
pop
mov
inc
call
popf
outs
push
addr16
add
push
and
adc
mov
stos
dec
or
jmp
push
inc
in
sahf
mov
mov
das
xchg
retf
sbb
inc
out
unpcklps
sahf
out
cli
mov
and
or
xor
stos
es
imul
jmp
aas
and
adc
mov
dec
stos
jp
xor
and
adc
mov
lods
pop
and
or
imul
cmp
and
adc
mov
dec
stos
jp
xor
and
adc
mov
push
lods
ins
sbb
adc
es
cli
or
mov
pop
ins
mov
lods
push
ds
push
scas
addr16
dec
add
or
cmc
push
in
adc
jo
popf
cmps
dec
stos
and
fwait
xchg
dec
pop
stc
pop
lods
loopne
cmp
adc
es
fimul
fcomp
std
or
mov
es
fild
test
icebp
pop
lahf
push
(bad)
shl
cli
jp
add
sub
jo
xchg
loope
jmp
ret
jp
fsubr
push
(bad)
adc
adc
test
icebp
fisubr
fs
inc
imul
(bad)
sahf
sar
sahf
xor
mov
cdq
iret
sbb
or
imul
xchg
les
std
data16
es
adc
and
rol
dec
inc
mov
rcr
sub
xor
movs
cli
mov
bound
jmp
xchg
leave
clc
cmp
fld
jne
mov
dec
call
outs
(bad)
cmp
adc
jl
xchg
loope
cdq
and
cmps
ror
dec
repz
lea
push
xchg
leave
push
fs
ret
mov
fnstsw
xlat
rcl
sahf
dec
ss
retf
mov
data16
mov
sbb
mov
dec
and
sub
sub
jae
data16
inc
retf
not
sar
inc
fidiv
push
fiadd
popa
adc
jp
out
jl
mov
stos
xchg
or
cmp
fidiv
test
pusha
jp
xchg
sub
stc
lock
xchg
sahf
nop
pop
cdq
mov
pushf
scas
call
and
int
mov
data16
(bad)
push
ds
movs
and
mov
shr
out
push
jb
mov
xor
cmp
and
(bad)
inc
mov
xchg
or
rep
adc
leave
retf
push
cli
pop
or
lds
loope
sub
repnz
aas
mov
repnz
mov
jp
imul
push
aas
in
retf
mov
jnp
add
hlt
lea
xor
les
movs
aas
(bad)
add
mov
mov
push
fwait
xor
enter
push
mov
call
sbb
push
xchg
rol
xchg
arpl
loopne
xor
ffree
cmp
scas
pop
repz
std
pusha
mov
push
cmp
shl
dec
inc
inc
mov
pop
repnz
mul
ja
cdq
sti
fbstp
jle
xor
(bad)
in
pop
test
xchg
movs
mov
mov
in
retf
mov
mov
or
loop
and
xor
fist
push
inc
in
loope
lock
icebp
or
loop
lods
pop
ror
dec
adc
imul
xchg
cmp
jbe
xchg
xchg
enter
xchg
aam
out
mov
jns
cmps
cdq
inc
push
add
push
(bad)
lds
stc
retf
xchg
pop
jnp
dec
push
data16
dec
jae
mov
xchg
push
xchg
cwde
mov
ret
dec
sbb
(bad)
inc
jecxz
inc
les
and
pop
inc
xor
es
or
sbb
push
xor
push
jnp
adc
xor
out
pop
fwait
cmps
fcomp
or
add
das
jnp
loopne
mov
pop
xchg
mov
ja
aaa
lods
je
mov
outs
ss
cmp
retf
aam
sbb
aas
inc
jns
sub
aam
sub
push
mov
jmp
(bad)
cmp
adc
cmps
sbb
sub
nop
in
and
mov
push
(bad)
cmp
sbb
out
frstor
cmps
xor
test
xchg
dec
mov
bound
fdiv
cmp
daa
adc
ret
jecxz
xor
and
movs
mov
jns
cmps
test
fneni(8087
inc
js
sbb
push
pop
push
pusha
mov
je
and
mov
push
push
pop
test
imul
popa
mov
test
mov
sbb
iret
jne
pop
add
sysret
pushf
mov
or
loopne
shr
mov
and
mov
mov
jo
call
rol
ss
lock
jecxz
js
fld
pop
aaa
dec
ja
xor
arpl
aad
xor
mov
movs
leave
cmp
std
adc
mov
mov
jns
dec
jbe
or
ins
in
mov
ds
ret
cld
lds
aad
or
fucomip
addr16
out
sub
pop
stos
js
mov
xor
xlat
ins
sbb
mov
mov
mov
sub
icebp
mov
sub
jno
out
aad
sbb
push
jne
push
mov
dec
mov
xchg
push
mov
(bad)
mov
cmc
stos
fidivr
mov
mov
jl
adc
aaa
leave
dec
outs
cdq
(bad)
jns
and
stos
fdiv
stos
loopne
mov
push
aam
add
and
adc
jno
xor
sub
push
js
arpl
movs
repnz
xchg
gs
adc
sahf
sub
push
xor
xlat
ins
push
or
(bad)
inc
jmp
push
nop
mov
jne
mov
js
leave
dec
sub
inc
mov
sub
jl
pop
xchg
cmps
ret
mov
fcomp
cmp
popa
jns
ror
lea
imul
cmp
or
inc
gs
dec
xor
in
enter
daa
test
js
sbb
mov
(bad)
fild
nop
mov
jne
mov
js
leave
dec
sub
inc
mov
sub
jl
pop
xchg
cmps
ret
mov
fcomp
cmp
popa
jns
ror
lea
imul
cmp
or
inc
or
les
sbb
sub
inc
sub
imul
sbb
add
mov
and
imul
and
mov
cli
cli
jl
xchg
mov
out
stos
ss
or
jg
add
aaa
or
(bad)
lea
mov
ins
add
sub
pusha
loop
call
in
jecxz
lock
cmps
and
lahf
lock
pop
outs
test
icebp
mov
sbb
mov
aaa
icebp
jl
push
scas
mov
or
test
(bad)
jg
into
cmp
cmc
loope
xor
pop
outs
fisub
aad
push
cli
cli
jl
in
ss
xor
sub
mov
jg
jg
es
in
(bad)
pop
pop
shl
jo
fadd
mov
mov
js
and
pop
call
rol
loope
mov
shl
xlat
jle
mov
mov
in
dec
jo
in
imul
mov
or
mov
mov
mov
shl
loop
cmp
sbb
shl
or
pop
push
push
sub
das
imul
sbb
ins
out
adc
add
adc
or
enter
sti
lds
dec
sub
shr
mov
out
xchg
sbb
push
or
popa
fbstp
jg
test
aad
pop
fild
mov
pushf
and
mov
iret
lds
adc
adc
jp
int3
jb
scas
cmp
or
ja
mov
or
jb
repnz
sbb
adc
jno
fistp
inc
xchg
(bad)
pop
(bad)
mov
rcr
mov
aad
xchg
xor
dec
xchg
xchg
(bad)
add
js
or
mov
mov
mov
shl
loop
cmp
(bad)
sbb
sti
repz
xchg
cmp
mov
or
inc
sub
xor
movs
rcl
mov
das
add
mov
ret
imul
cmp
retf
outs
icebp
das
sub
and
jmp
mov
mov
push
fwait
and
mov
jo
xchg
les
dec
mov
addr16
(bad)
loop
xchg
or
repz
inc
sbb
hlt
jns
mov
mov
mov
popf
xor
inc
aaa
mov
out
(bad)
cli
mov
push
aas
xor
inc
clc
jbe
les
clc
out
cmp
jge
pop
mov
lods
scas
xchg
mov
push
and
jmp
push
ds
pop
or
rcr
pop
mov
in
sbb
mov
or
fsubr
pop
dec
mov
sar
push
sar
push
jo
xor
pop
test
fwait
stos
(bad)
scas
add
iret
or
sbb
or
das
and
test
and
push
pusha
mul
add
cmp
mov
ss
sub
mov
mov
mov
jmp
mov
shl
push
jnp
out
adc
mov
and
rcr
sub
nop
call
cmp
jl
(bad)
aas
pushf
mov
mov
mov
les
xor
fsubr
test
xchg
push
ja
aam
mov
mov
sub
iret
arpl
pop
sbb
loopne
mov
xchg
icebp
add
jno
shl
aas
out
add
xchg
fcmovbe
out
shl
shl
and
sub
nop
call
cmp
xchg
mov
add
fwait
(bad)
push
adc
stos
and
mov
fwait
das
jl
inc
jne
sbb
mov
xchg
(bad)
call
(bad)
and
sti
shl
push
icebp
jge
push
cmp
xchg
retf
mov
mov
sbb
cwde
push
call
or
repnz
cmp
(bad)
in
out
ds
sbb
push
push
push
out
mov
cmps
fstp
pop
rcl
mov
mov
dec
and
or
or
push
rcr
ret
jge
mov
sar
sub
hlt
push
push
push
dec
and
xor
or
xchg
ret
pop
int3
in
xchg
fcmovu
pop
retf
jmp
dec
scas
or
cmp
daa
jge
cmp
mov
cmp
stos
(bad)
ds
imul
aam
dec
(bad)
sbb
loope
out
pop
sub
lods
fist
aam
dec
(bad)
sbb
loope
out
pop
jnp
jne
xchg
popa
js
inc
mov
es
add
push
xchg
fstp
leave
mov
cmp
adc
add
fidiv
jno
cs
mov
inc
mov
es
add
push
xchg
fstp
leave
mov
cmp
adc
mov
cmc
in
mov
cmc
in
mov
ja
mov
push
(bad)
mov
mov
out
jnp
(bad)
jmp
dec
adc
adc
hlt
mov
outs
inc
(bad)
out
ds
daa
loope
int3
and
or
imul
call
ret
add
pusha
loopne
xchg
div
daa
sahf
dec
mov
daa
ds
mov
daa
ds
sbb
movs
jmp
sub
and
add
leave
xchg
sar
movs
scas
push
dec
js
loop
mov
push
sbb
ins
pop
mov
jl
and
das
(bad)
in
push
ins
jo
mov
aaa
sub
inc
xchg
hlt
loopne
inc
mov
mov
cmp
shl
xor
xchg
sbb
and
cmp
(bad)
jle
fist
mov
jmp
ins
lock
pop
xlat
dec
mov
inc
cs
mov
xchg
test
jo
push
sub
mov
mov
inc
jge
stc
pop
(bad)
loope
ss
and
ficom
add
xchg
mov
mov
aas
add
dec
cmc
cwde
aam
iret
mov
push
lods
jnp
and
lahf
fisttp
cwde
push
arpl
adc
inc
adc
jp
adc
call
sub
pop
aaa
adc
lods
or
jmp
pop
mov
and
xlat
mov
mov
mov
push
int
ror
mov
fnstsw
adc
pop
push
dec
push
xor
(bad)
in
push
hlt
scas
rol
sbb
jno
pop
arpl
outs
scas
inc
arpl
repnz
fiadd
xor
movs
xor
sub
xor
cwde
js
lds
loope
xor
repnz
das
stos
out
cmp
cli
sar
loop
jnp
mov
ret
mov
test
cmc
xor
div
cli
push
sti
bound
mov
mov
xchg
xor
dec
cdq
test
mov
lds
dec
cli
mov
add
outs
enter
arpl
hlt
inc
or
push
movs
test
push
clc
sti
call
jns
xor
loope
pop
stos
fistp
mov
mov
mov
enter
outs
test
or
ja
adc
pop
lock
out
das
jno
mov
push
loop
fsubr
int
int
push
loope
in
fsubr
call
mov
cmc
in
jg
repnz
stos
stos
rcr
xchg
pop
scas
xchg
sbb
out
xor
fld
cs
or
inc
mov
push
dec
adc
ss
cmp
fcomp
shl
mov
xor
les
lds
iret
jbe
jno
call
jns
mov
inc
mov
mov
xor
ins
pop
cmp
sub
xchg
jge
push
pop
sbb
and
mov
data16
ret
out
add
adc
(bad)
and
and
adc
test
cmp
push
aam
adc
jmp
data16
pop
dec
es
das
fcom
mov
mov
and
dec
in
repz
cmp
xchg
push
pop
int3
aaa
loopne
data16
aaa
adc
mov
push
jo
push
dec
mov
cmps
pop
xor
pop
and
nop
xor
adc
adc
jmp
xor
jb
add
cmp
inc
pop
inc
aaa
cmc
lea
mov
adc
arpl
(bad)
dec
xchg
sub
add
add
and
idiv
xor
leave
mov
fild
xor
outs
pop
xor
fimul
lock
xor
push
call
pop
mov
push
loopne
sbb
aam
shl
jge
std
inc
mov
mov
pop
xor
sub
pop
cs
mov
jmp
mov
xchg
pop
cmp
jb
icebp
pop
jecxz
sbb
dec
sub
fadd
mov
(bad)
in
addr16
and
mov
jo
mov
aad
test
xor
mov
leave
stc
fld
mov
fisub
sbb
imul
sbb
mov
std
loopne
popa
aas
push
sub
fistp
and
aas
xchg
or
and
xchg
add
int
in
adc
adc
scas
test
int
and
retf
fmul
and
popf
loop
push
sbb
ficom
mov
push
mov
dec
test
mov
fcmovnu
jnp
add
dec
jno
pop
xlat
mov
sbb
adc
scas
push
pop
sbb
movs
jno
jnp
jae
arpl
iret
adc
jbe
or
out
jg
stc
ret
mov
jmp
add
popf
daa
test
dec
dec
mov
push
inc
dec
sbb
jmp
push
test
mov
sub
jecxz
sub
jns
push
mov
fild
loop
iret
xchg
fwait
or
adc
inc
cmp
daa
shr
lds
retf
outs
jl
inc
add
inc
cmps
pop
cmp
arpl
cmps
and
xor
push
mov
cmp
in
test
jae
clc
mov
loop
mov
cli
dec
das
retf
add
mov
sahf
sbb
dec
int
push
pop
and
push
aas
stos
pop
or
out
lods
adc
jmp
rcr
push
push
jmp
adc
mov
dec
rcl
stos
jnp
repnz
mov
jne
push
mov
paddusw
and
cs
cmp
xor
jge
aaa
sub
lds
mov
push
or
out
int3
lods
stos
or
dec
pop
scas
fnstcw
loop
jp
inc
xchg
scas
sbb
mov
aas
add
out
call
pop
cmp
mov
clc
add
push
in
jp
cmp
fimul
fs
pop
xchg
and
jbe
rcr
xchg
push
repz
loop
xor
mov
outs
or
repnz
pop
mov
xchg
push
and
inc
mov
fwait
or
sub
addr16
(bad)
ficom
sub
(bad)
jmp
popf
lods
dec
ja
dec
adc
xchg
stc
call
fidiv
(bad)
iret
push
lahf
jmp
pop
sbb
and
ret
fisttp
and
inc
mov
fwait
or
sub
addr16
(bad)
ficom
sub
(bad)
jmp
popf
lods
dec
ja
dec
adc
cmp
das
push
push
aaa
in
jbe
inc
fild
out
mov
jg
bound
or
mov
push
dec
or
cmps
into
add
add
inc
xor
nop
or
cmp
mov
mov
pop
outs
xchg
push
mov
lods
(bad)
dec
xchg
cmps
cmp
xchg
jecxz
sbb
push
cmc
sub
imul
push
adc
jl
jae
iret
sub
aaa
retf
loope
dec
clc
sub
or
pop
push
not
out
jmp
cmp
repz
sti
lds
xor
sub
cmp
arpl
push
jl
inc
mov
pop
ja
jecxz
cmp
push
sub
popf
mov
cmp
pop
mov
repnz
push
not
addr16
inc
test
shl
jmp
jg
push
xor
mov
test
mov
in
aad
int3
rcl
(bad)
mov
mov
sbb
mov
icebp
mov
inc
push
mov
push
jnp
sub
push
jo
scas
ret
mov
ja
addr16
loopne
movntps
ret
movs
xor
stc
daa
jmp
push
and
sbb
repz
fdivr
rol
test
call
adc
pop
pop
inc
mov
and
pop
mov
add
int3
neg
dec
xchg
jns
lods
lods
inc
dec
fst
(bad)
int3
mov
dec
lahf
mov
push
(bad)
stos
in
mov
jb
les
xchg
xor
inc
scas
cmp
aad
test
add
cmp
inc
pop
inc
aaa
cmc
lea
mov
outs
outs
pop
xor
jge
(bad)
ret
jmp
jns
mov
ins
add
les
dec
sub
lods
enter
push
jmp
push
or
rcr
dec
lahf
adc
aaa
daa
imul
into
sti
dec
add
xchg
int
add
xchg
mov
sar
(bad)
fidivr
pushf
jo
add
ret
xchg
in
mov
push
cmps
jb
data16
sbb
daa
sbb
mov
pop
fisubr
sub
iret
mov
loope
stos
add
addr16
cdq
pop
iret
ds
dec
sub
into
xor
inc
lods
mov
dec
scas
lods
mov
loop
or
adc
mov
mov
cmp
clc
xchg
add
push
shr
(bad)
fist
ins
es
pop
inc
out
add
and
aas
dec
xchg
cdq
push
or
fdiv
movs
cmp
xchg
enter
mov
out
push
xchg
adc
xor
mov
xchg
jns
mov
xchg
mov
or
loope
imul
mov
cmps
das
in
es
std
pop
movs
dec
movntq
dec
xor
cmp
add
jb
retf
push
push
fucomp
xor
mov
inc
mov
jg
lea
mov
loop
call
dec
imul
movs
or
jmp
add
rcl
push
retf
cmp
cmp
and
sub
sbb
xchg
(bad)
inc
lods
mov
dec
scas
lods
mov
retf
leave
mov
call
mov
pop
lahf
cmp
jne
push
test
adc
cmp
mov
cmp
div
(bad)
jae
cmp
inc
push
push
(bad)
cmc
jne
aas
(bad)
add
xor
push
dec
inc
mov
xor
in
push
jmp
xchg
outs
inc
test
clc
daa
xchg
jne
fsub
push
pmulhw
loop
and
cmp
mov
mov
out
fild
js
mov
adc
pushf
inc
xor
xor
mov
push
mov
popf
mov
mov
push
or
inc
retf
int3
scas
loop
mov
test
mov
sub
lock
outs
lods
mov
or
mov
inc
push
mov
sub
pop
mov
repz
mov
mov
and
or
(bad)
inc
repz
ds
or
jne
mov
neg
imul
jbe
sbb
shl
and
(bad)
outs
jle
sahf
cmc
cmp
les
mov
mov
cmps
jmp
inc
inc
mov
jns
cmp
(bad)
mov
fimul
jp
fdivr
sti
cmp
mov
and
xchg
cmp
arpl
cmc
jmp
lock
pushf
fs
into
stc
clc
dec
cli
in
lock
adc
aaa
mov
cmp
or
sub
loopne
das
pop
mov
xchg
cli
sbb
pusha
xchg
pushf
or
sbb
hlt
(bad)
mov
out
mov
jne
mov
ds
push
sbb
dec
push
adc
mov
xchg
xor
fidiv
mov
dec
mov
out
imul
mov
cmps
sub
int3
xchg
sbb
mov
into
push
pop
ret
stos
stc
add
sub
loope
mov
mov
mov
mov
or
into
(bad)
test
enter
xor
cmp
cld
xchg
mov
jnp
stc
ss
outs
cmp
popa
out
cmps
cld
sbb
mov
div
iret
mov
fcomp
iret
aaa
loop
cld
dec
arpl
repnz
cmp
mov
nop
fbld
mov
pop
out
inc
sahf
sar
mov
scas
lock
push
add
lahf
aam
or
jo
popa
jae
rcr
pop
xchg
mov
sub
push
lahf
pop
inc
pop
mov
jmp
mov
dec
cld
pop
xchg
inc
push
test
adc
pop
fidivr
outs
pusha
dec
shl
xor
adc
js
and
cli
dec
fsub
xlat
addr16
pop
repnz
adc
(bad)
call
out
xchg
push
cdq
daa
jmp
outs
arpl
and
pushf
lods
fsubr
aaa
fild
(bad)
and
mov
jge
push
rcr
pusha
inc
push
shl
mov
lock
push
cdq
daa
jmp
outs
arpl
and
xchg
lods
fsub
loop
pushf
sahf
popf
xchg
inc
fst
popa
dec
inc
sub
shl
push
lock
es
inc
dec
mov
pusha
aam
xchg
pop
lock
cld
push
retf
xchg
pop
or
adc
xchg
or
add
sub
les
xchg
int
xor
sbb
(bad)
ret
std
in
push
shl
cdq
jecxz
pop
loop
sbb
xchg
(bad)
enter
sub
nop
xchg
xchg
or
aas
mov
mov
retf
xor
cs
scas
inc
pop
xor
lds
dec
cs
cli
in
push
add
add
cmps
cli
mov
not
inc
(bad)
fist
xchg
int3
jg
popa
mov
and
aaa
mov
mov
div
retf
ror
inc
ret
jnp
mov
mov
cmp
movs
xchg
or
pop
pop
and
xor
xor
xchg
pop
mov
jmp
es
(bad)
fadd
jnp
and
inc
inc
test
push
and
mov
inc
push
jmp
and
push
lahf
cs
jne
lock
xchg
fdiv
xchg
mov
jcxz
jg
out
mov
in
fsub
cmp
ret
loope
jbe
int
adc
or
cli
xchg
adc
and
je
push
stos
push
push
or
mov
jnp
xchg
loop
fiadd
push
xor
adc
dec
xchg
mov
inc
leave
into
sub
je
pop
or
cmp
dec
xchg
idiv
pop
mul
(bad)
and
aad
rol
popf
mov
adc
push
adc
pop
mov
out
(bad)
dec
call
pop
push
xor
cmc
mov
sbb
dec
iret
add
push
and
lahf
sub
cwde
jle
push
pop
mov
mov
mov
push
mov
or
(bad)
jmp
pop
sub
sbb
jl
jb
cmc
(bad)
mov
hlt
out
mov
jb
add
retf
xor
hlt
inc
idiv
repnz
(bad)
(bad)
loop
movs
jmp
lea
in
(bad)
xchg
dec
cdq
test
mov
(bad)
std
xchg
arpl
sub
inc
fnstenv
sti
jae
mov
mov
mov
cmp
jge
jle
jno
hlt
sbb
aam
jl
std
mov
(bad)
and
pop
jae
mov
jl
cli
ror
sbb
dec
push
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
push
jae
push
stc
leave
xchg
arpl
inc
sti
lock
cmp
in
adc
ret
dec
cmps
outs
mov
xchg
jle
or
test
outs
pop
ficom
jae
fisttp
xchg
cs
cwde
aad
pop
scas
jno
(bad)
and
jg
icebp
lea
mov
cmp
mov
test
mov
sar
jbe
cmp
jo
sar
out
cmp
or
(bad)
push
mov
fwait
mov
scas
lea
nop
push
jl
mov
mov
sbb
inc
rol
sbb
jmp
ss
in
and
outs
xchg
and
les
cmc
ret
mov
cmp
stc
mov
push
push
or
mov
pushf
ret
out
sbb
jb
adc
jb
or
xor
sub
jnp
out
push
rcr
scas
or
(bad)
pop
shl
jecxz
pop
push
cmp
mov
pop
data16
add
sar
lock
jg
jb
jecxz
scas
jmp
mov
push
xchg
ret
mov
lahf
hlt
test
sub
data16
fld
ret
imul
pop
stc
lea
fwait
sbb
mov
jns
(bad)
repnz
push
or
cmp
inc
add
push
out
and
sub
dec
mov
test
push
pop
sub
xor
mov
neg
mov
out
test
call
ss
ss
push
retf
shl
ins
or
mov
mov
push
cmp
dec
fimul
push
scas
xor
pop
mov
and
dec
push
call
ror
cs
retf
stos
shl
mov
jns
imul
outs
sbb
retf
movs
push
cs
das
mov
pop
mov
sbb
mov
sub
loope
jp
pushf
cdq
rol
sub
push
sbb
add
mov
sbb
and
std
loopne
mov
ficomp
loopne
adc
mov
cs
sub
pop
pop
add
inc
xor
xor
fistp
dec
adc
int
cdq
popa
ret
mov
aas
push
pop
push
mov
sbb
adc
out
jnp
xlat
push
test
inc
imul
lahf
pop
sub
test
out
adc
cmps
mov
fsubr
xchg
inc
lds
pop
sub
xchg
out
adc
cmps
mov
cmp
nop
loop
ret
mov
xchg
inc
lds
pop
sub
xchg
out
adc
cmps
mov
fsubr
xchg
inc
lds
pop
sub
xchg
out
adc
movs
mov
fdiv
pop
push
(bad)
(bad)
adc
retf
fcomp
jne
pop
push
xchg
adc
dec
movs
cmps
xlat
shl
aaa
and
sti
scas
pushf
or
dec
adc
test
fsubr
adc
dec
ds
adc
rep
fwait
pop
pop
ins
or
imul
(bad)
loop
push
loop
int
aam
fst
push
fwait
xor
mov
jmp
daa
sbb
cmp
repnz
ins
dec
icebp
ja
ins
and
dec
clc
or
stos
cmp
adc
mov
call
xchg
jns
retf
mov
outs
inc
cmc
xor
xchg
movs
xchg
(bad)
xchg
inc
movs
fcom
or
inc
inc
push
mov
es
cwde
leave
or
repz
fwait
ins
(bad)
cld
xchg
enter
sbb
add
mov
les
in
mov
lea
dec
scas
cmp
adc
xor
mov
lods
and
(bad)
mov
mov
inc
or
mov
jg
push
mov
jge
rcl
icebp
mov
or
repnz
(bad)
aaa
call
sbb
inc
call
out
repz
push
and
ja
ins
and
fs
in
test
addr16
push
mov
push
mov
(bad)
or
cld
fst
and
dec
push
pop
repnz
fcmovnbe
and
sub
jae
adc
dec
or
test
dec
mov
das
repz
sti
out
ins
faddp
in
idiv
loop
mov
push
pop
stc
lea
movs
shl
push
xor
in
es
push
and
push
cmp
fdivrp
repnz
sbb
ret
xor
lahf
xchg
es
jl
into
jge
in
jmp
test
pop
aad
pop
jbe
mov
repz
add
shl
and
cdq
dec
mov
sub
ficom
(bad)
and
jle
stos
xchg
das
sbb
sahf
(bad)
nop
and
loop
sbb
xor
stc
sbb
mov
push
jge
test
xchg
repz
int
xchg
lea
sub
add
dec
(bad)
in
test
xchg
cmp
test
push
mov
sub
test
mov
add
jbe
ds
mov
mov
inc
jnp
xor
aas
mov
(bad)
aad
mov
loop
in
clc
push
adc
fneni(8087
push
xlat
leave
(bad)
sti
mov
xor
addr16
pop
jae
mov
sbb
mov
xor
jns
aam
cs
repnz
sbb
into
lods
and
les
jno
mov
and
retf
cmps
addr16
(bad)
mov
mov
mov
add
icebp
cs
jae
mov
sub
or
adc
iret
jmp
jecxz
jmp
nop
cmp
je
mov
daa
add
push
aad
inc
mul
xchg
inc
bnd
(bad)
mul
cbw
imul
addr16
mov
clc
repnz
xor
in
getsec
xor
cmc
dec
pop
cmc
sub
mov
out
fnstenv
rcr
(bad)
dec
fwait
pop
sbb
in
cli
pop
loop
loopne
clc
pop
adc
ror
fs
div
adc
or
ins
cmp
movaps
arpl
fstp
imul
int
imul
xchg
mov
sbb
mov
bnd
inc
mov
pop
or
sbb
rcl
push
out
lods
dec
and
mov
mov
sbb
repz
dec
sbb
les
mov
xchg
xor
gs
gs
and
xchg
(bad)
xor
fbld
inc
mov
shl
das
cmc
sub
lods
push
xchg
mov
leave
daa
sbb
mov
mov
xor
adc
xlat
movs
loopne
pop
(bad)
push
in
mov
jns
dec
out
and
test
cwde
out
(bad)
cmp
scas
push
loopne
rcl
sbb
in
push
pop
das
imul
fldenv
(bad)
cmps
es
outs
push
jae
xlat
outs
sub
jne
fwait
sub
xchg
test
rcl
sbb
sbb
sbb
push
push
cdq
and
call
push
call
push
call
mov
push
jae
mov
push
jae
mov
push
jae
mov
push
jae
mov
add
xor
test
push
lock
mov
ins
sahf
xor
(bad)
shl
adc
shl
loopne
cmp
ret
das
and
lods
dec
test
call
sbb
pop
push
ret
cdq
push
adc
xchg
xor
cli
mov
add
or
cli
in
push
mov
push
outs
icebp
je
out
lahf
jno
cmp
jo
mov
sub
retf
add
add
outs
les
leave
add
xchg
xor
cmp
sti
push
std
(bad)
shl
add
jg
xchg
fild
fistp
cmp
cmps
jmp
je
or
mov
xchg
int
popa
pop
or
test
addr16
mov
int
ins
(bad)
mov
imul
cdq
lock
fimul
mov
xor
lods
rol
xor
cmp
imul
mov
ret
dec
or
cmp
fimul
aad
test
and
out
cli
aad
(bad)
dec
add
out
xchg
dec
xchg
popa
cmp
xchg
js
mov
in
cmc
xchg
inc
cmovne
aam
or
pop
(bad)
mov
adc
push
sbb
xor
mov
jg
retf
das
pop
mov
aam
mov
add
add
test
mov
add
inc
push
outs
aaa
xor
in
sub
sbb
mov
aas
(bad)
(bad)
xchg
cmp
cmp
mov
out
cmp
repnz
aas
aaa
repnz
jp
ja
sti
mov
inc
cmp
hlt
pop
(bad)
cmc
xor
add
icebp
into
repz
xchg
mov
mov
leave
cmp
push
repnz
clc
xchg
int3
mov
aad
outs
jns
cli
dec
push
mov
test
mov
sub
or
cwde
xor
sub
js
call
push
out
pop
pop
dec
mov
inc
in
xchg
xchg
sub
mov
ss
cmps
mov
pop
add
fdiv
mov
cld
push
jne
fild
mov
aaa
mov
outs
mov
mov
cmc
pop
cmp
cmova
imul
pop
cmp
add
or
sti
rcr
aam
sbb
std
mov
aaa
mov
adc
stos
aaa
sbb
cmp
add
sahf
mov
test
movs
fldcw
and
hlt
movs
add
cmp
inc
int3
sub
and
sub
jle
adc
ret
lods
xchg
in
cmp
out
jg
adc
out
sub
shr
adc
mov
loope
xor
test
mov
std
inc
jecxz
ss
stos
outs
sti
xchg
out
sub
jno
retf
cwde
ins
retf
inc
pop
dec
xor
jp
lds
xchg
fwait
dec
pushf
cmps
and
or
movs
loope
stc
push
mov
pop
push
outs
repz
int3
xor
loopne
int
loope
int
daa
or
hlt
mov
sub
loopne
rcr
inc
adc
jnp
(bad)
ins
fld
mov
nop
ror
cmp
enter
ror
jle
cmps
mov
and
test
mov
dec
cmp
(bad)
or
stc
outs
xchg
mov
daa
cli
leave
adc
fbld
sti
jmp
cmp
call
mov
cdq
es
stos
mov
push
lock
xchg
and
test
mov
push
push
adc
mov
mov
call
jae
xchg
cmp
mov
jle
push
xchg
xor
xor
jmp
mov
or
mov
cmp
mov
sahf
sub
dec
scas
lods
movs
cmp
rol
in
adc
iret
inc
mov
pushf
fisttp
je
enter
xor
(bad)
aam
cmp
cmp
cli
pop
repz
lea
ficomp
dec
fidivr
imul
xchg
pop
loopne
mov
fld
push
outs
cmp
pop
xchg
add
mov
xor
jbe
fidivr
outs
jne
mov
xchg
jae
rcr
pop
push
xor
sub
sti
test
mov
imul
in
ret
sti
mov
mov
pop
inc
jle
jge
push
mov
xchg
dec
jmp
xor
or
adc
pop
cld
push
mov
iret
xchg
dec
or
mov
out
jnp
fidivr
retf
aam
stos
adc
xchg
aam
out
out
call
cmps
and
rol
xor
test
cmc
aas
fisttp
fldenv
xor
test
hlt
dec
lods
xchg
or
xchg
pop
or
adc
push
mov
addr16
(bad)
in
mov
mov
xchg
leave
sub
mov
rol
stc
(bad)
jmp
out
and
das
mov
push
mov
and
cld
test
add
pop
xchg
fsub
and
sub
ja
and
push
hlt
jmp
out
pop
loope
arpl
xchg
std
and
fdivrp
lea
sqrtps
jne
daa
retf
and
push
retf
mov
or
jnp
loop
mov
push
(bad)
stc
ins
jg
mov
fcmovnb
ins
lea
jle
clc
(bad)
leave
or
xchg
int3
mov
sub
dec
dec
add
or
or
cmp
pop
add
test
pop
adc
retf
mov
mov
lods
sbb
xchg
inc
arpl
add
in
sub
fstp
mov
add
mov
adc
movs
(bad)
or
(bad)
jno
add
pop
leave
scas
hlt
mov
shr
je
sub
cmp
adc
sbb
pop
adc
xor
aam
(bad)
test
imul
sbb
dec
jge
ret
ficom
xchg
mov
xor
test
fwait
mov
dec
int3
mov
jp
retf
xor
mov
jae
mov
xchg
in
test
xor
icebp
jnp
out
in
adc
push
jbe
sub
out
push
inc
xchg
lods
add
stos
inc
xor
popf
xor
adc
cld
add
mov
dec
ds
idiv
iret
and
jp
es
adc
repnz
pop
push
icebp
xchg
sbb
push
sti
out
mov
mov
mov
in
mov
push
fldenv
dec
push
inc
shl
in
add
test
and
sbb
rep
(bad)
push
pushf
mov
(bad)
cwde
xchg
adc
mov
inc
test
shl
stc
into
icebp
cmp
nop
mov
movs
fs
in
push
std
pop
enter
ds
test
xchg
xchg
mov
arpl
jmp
sbb
and
inc
mov
cli
mov
xor
lea
pop
inc
data16
int3
or
mov
aas
xor
mov
mov
adc
push
fistp
inc
call
pop
sahf
push
xchg
cmps
popa
push
popf
ins
arpl
xchg
stos
loopne
jp
mov
jnp
pop
inc
or
arpl
repz
mov
fcomip
test
add
cmp
dec
das
and
cmp
pop
xchg
sar
cwde
fdiv
js
out
shl
xchg
add
xchg
ds
push
pop
cmp
sahf
xchg
mov
addr16
jmp
gs
(bad)
mov
adc
sbb
fs
mov
push
jecxz
in
fisubr
in
les
popf
ja
nop
pop
dec
popa
lea
loopne
and
xor
xchg
xlat
xor
scas
jp
dec
xchg
xchg
jno
and
test
repnz
mov
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
sub
jg
cld
sar
cli
add
mov
cli
cmp
mov
test
mov
xchg
das
mov
mov
scas
rcl
xor
test
mov
test
mov
test
mov
popf
xor
out
mov
mov
lds
mov
test
repnz
sbb
xchg
icebp
adc
xchg
jp
pop
test
mov
test
mov
shl
mov
sub
in
test
repz
fwait
xchg
mov
repnz
sub
test
mov
add
adc
int
inc
int3
imul
fsubp
xchg
xchg
dec
xchg
loop
xchg
dec
xchg
setb
cmp
add
mov
xlat
out
or
in
sbb
popf
sub
shl
test
mov
(bad)
fs
neg
(bad)
xor
popf
xchg
popa
popf
test
cmp
test
mov
mov
or
mov
cmp
pop
loop
xor
push
mov
cmp
mov
sub
test
retf
jmp
cmps
aam
xchg
xchg
(bad)
fiadd
mov
nop
into
pop
(bad)
sar
push
cmp
push
popa
test
add
pop
jge
and
idiv
push
retf
movs
cmp
retf
mov
pop
lods
mov
fsub
bnd
mov
mov
repnz
mov
nop
adc
add
inc
jns
outs
xchg
int3
bound
push
jg
outs
adc
dec
aas
enter
pop
arpl
cs
rcl
sub
mov
lea
test
data16
test
mov
pop
sbb
sub
(bad)
dec
icebp
sub
and
sbb
mov
(bad)
fsubr
cdq
retf
jg
loopne
test
out
(bad)
fstp
stc
xor
mov
push
and
inc
mov
sbb
bound
inc
out
ins
pop
lahf
pop
gs
jo
cmp
repz
push
ja
sbb
call
or
dec
push
out
pop
and
daa
fimul
imul
in
and
xchg
shr
sti
fbstp
mov
mov
push
xchg
int3
inc
add
fldenv
dec
xchg
push
push
or
pop
cmp
inc
pop
jnp
sbb
sbb
sbb
cmp
ss
ins
mov
imul
pop
jge
stos
call
adc
add
dec
xor
push
push
add
jno
imul
loope
test
ds
clc
xor
out
inc
(bad)
adc
pop
(bad)
push
nop
push
dec
push
stos
mov
hlt
in
sbb
lock
call
add
inc
sar
int3
or
mov
repz
lods
push
test
adc
in
or
cmp
jmp
daa
xchg
cmp
sbb
nop
or
jecxz
inc
pushf
sub
inc
test
mov
jbe
and
lahf
pop
test
mov
andps
test
fsubr
and
in
test
cld
test
mov
or
test
fwait
adc
adc
and
push
lods
xchg
lds
shr
cmps
(bad)
push
sbb
inc
int3
outs
pop
push
fbld
jo
xchg
mov
leave
fisub
mov
hlt
mov
push
test
adc
inc
scas
outs
loopne
pop
fld
and
std
push
adc
fadd
(bad)
xchg
mov
das
pusha
leave
addr16
push
xor
and
xchg
xor
fcom
pop
rcr
pop
dec
xchg
outs
add
into
test
(bad)
inc
xchg
push
mov
lods
fisub
ins
or
jnp
icebp
mov
mov
xchg
xor
repnz
mov
xor
cmps
repnz
scas
mov
mov
cmp
sbb
test
mov
jno
cmps
cli
xchg
arpl
(bad)
push
xchg
rol
cs
pop
sahf
pop
dec
fist
in
je
data16
in
(bad)
jecxz
out
inc
hlt
and
jmp
mov
jae
out
cmp
add
cdq
pop
push
popf
rcl
mov
cmps
adc
lock
cmps
adc
retf
cmp
jg
js
jnp
jle
jo
fs
mov
push
outs
shr
jmp
imul
movs
jle
movs
jge
stc
lock
xchg
sub
cli
cmp
or
ins
aam
pop
dec
push
sub
in
test
int
pop
dec
xchg
jge
(bad)
xor
mov
adc
fisubr
cwde
push
scas
ja
sbb
int3
or
dec
xor
sub
mov
mul
and
cmp
stos
rcl
cmp
shr
sbb
in
pusha
aad
jno
pusha
sbb
dec
jmp
daa
cmp
dec
bound
retf
mov
nop
sub
mov
call
call
jle
out
xchg
call
aad
je
lds
outs
fld
not
push
add
ret
push
cmp
pop
sub
into
inc
pop
push
inc
outs
adc
ret
xchg
test
inc
cmp
sbb
int3
test
fbld
fld
dec
dec
iret
xor
push
xlat
mov
mov
out
add
xchg
daa
jo
shl
imul
xchg
mov
pop
enter
dec
test
xchg
fistp
xor
cmp
shl
add
sub
in
cmc
nop
adc
xchg
mov
xchg
(bad)
repz
or
sub
(bad)
(bad)
(bad)
jb
push
xchg
cmp
outs
sub
mov
xor
xchg
jo
cmp
out
out
je
sti
fisub
jmp
xchg
add
shl
outs
outs
mov
or
aas
add
dec
inc
mov
fisubr
jae
jle
scas
movs
in
jg
les
cmc
adc
shl
or
dec
cmp
push
inc
and
lock
scas
test
push
sbb
or
jmp
ja
xor
push
loop
jmp
call
xor
hlt
sbb
jge
push
js
outs
mov
adc
and
mov
cmp
pushf
test
cmc
add
mov
mov
scas
fstp
std
(bad)
fs
xchg
jmp
aas
cmp
jmp
hlt
jl
lods
in
cli
sub
cmp
out
test
addr16
adc
sbb
call
mov
out
test
rcr
xchg
into
or
mov
xchg
aad
jmp
inc
xor
or
(bad)
mov
in
jmp
pop
out
cmp
mov
jmp
and
fild
test
icebp
cmp
mov
movs
or
mov
(bad)
jne
pop
push
add
add
ins
mov
hlt
pop
and
mov
outs
js
imul
cwde
sub
fwait
out
bound
aaa
pop
out
push
adc
or
adc
iret
dec
pop
imul
push
pop
or
imul
sub
sub
add
outs
mov
cwde
lds
adc
mov
aaa
test
jg
iret
jle
mov
scas
add
int3
jl
jg
push
dec
in
push
int
fsubr
ins
mul
xor
sub
out
push
in
mov
xchg
push
xchg
or
fld
sbb
sahf
leave
jns
inc
jns
push
pop
inc
rol
pcmpeqw
mov
adc
and
sbb
daa
ss
les
inc
xchg
mov
sub
xor
lock
enter
lock
daa
and
inc
push
loop
stos
out
popf
sub
retf
hlt
es
rol
shl
or
mov
call
add
pop
xchg
fiadd
jnp
lea
iret
sbb
(bad)
loopne
cdq
jo
int3
mov
sub
mov
fcom
pop
fist
xor
xchg
xor
fiadd
xor
repnz
ja
jbe
jg
out
imul
inc
ds
ret
hlt
add
out
mov
aaa
out
cmp
jns
retf
mov
pop
loop
mov
cld
push
sbb
addr16
sbb
stos
pusha
inc
cmc
aaa
cdq
jmp
cmp
xor
dec
ja
cmp
xchg
hlt
std
push
sub
jno
out
test
sbb
push
xor
push
or
push
xor
sbb
in
sub
inc
test
or
fwait
and
loopne
sti
test
xchg
push
push
xchg
call
aam
xchg
pop
pop
pushf
adc
mov
mov
mov
out
icebp
out
cld
sti
xor
push
xchg
pop
lea
lea
sbb
dec
mov
dec
sub
add
sbb
add
inc
imul
fidiv
dec
mov
mov
test
retw
mov
add
cld
mov
push
in
xlat
adc
mov
push
xchg
push
test
sub
sub
dec
ja
cmps
lock
lods
loope
call
push
das
sar
out
test
inc
out
(bad)
jmp
inc
retf
addr16
and
in
outs
std
mov
fsub
(bad)
mov
push
mov
movs
inc
arpl
mov
(bad)
xor
scas
test
ins
mov
cld
aad
adc
and
fisttp
adc
cli
lods
cmp
dec
mov
xchg
lods
imul
cs
push
das
pop
push
int
cwde
fild
mov
out
stc
cli
sar
xchg
lods
pop
cmp
ret
scas
push
dec
dec
in
add
mov
clc
adc
dec
push
jnp
push
js
pop
pusha
ja
xchg
loop
ret
jne
aam
(bad)
aad
lds
and
jno
loope
push
pop
int3
test
in
xor
mov
or
and
mov
ins
mov
xor
mov
inc
mov
sahf
rcr
pop
sbb
shl
movs
fadd
pop
pop
adc
mov
mov
lods
mov
xor
pop
mov
and
sbb
sbb
pusha
jns
imul
add
call
or
jbe
mov
div
loop
outs
mov
stos
cli
add
stos
mov
jp
mov
aaa
test
cdq
sub
fild
dec
sar
out
loop
mov
and
pop
jmp
pop
jbe
call
pop
sbb
mov
pop
push
fwait
sahf
mov
mov
or
movs
jp
dec
push
jnp
shl
or
cmp
jno
lahf
dec
push
adc
fs
cdq
sbb
bnd
mov
sbb
cs
xor
inc
rol
test
jb
shr
xchg
mov
outs
das
lods
sahf
(bad)
sub
mov
jl
or
sub
xor
push
in
pusha
fld
and
mov
scas
movs
test
push
shr
dec
push
(bad)
imul
fucomi
aam
fwait
sbb
out
fnsave
mov
cmp
outs
mov
aas
push
or
mov
and
stc
aas
(bad)
add
jo
ror
push
cmp
shr
xchg
and
sti
sbb
mov
push
ret
loopne
and
xor
test
mov
cmp
xchg
scas
shr
scas
bound
hlt
ja
aaa
mov
sub
jmp
test
pop
pop
popa
adc
xor
fnstenv
call
scas
or
les
das
jp
sub
add
adc
dec
jge
sbb
push
jle
push
test
shl
pop
das
jb
(bad)
push
out
jmp
fadd
xor
jle
or
or
retf
retf
pop
mov
and
adc
mov
out
cmps
xchg
pop
stos
cmp
loopne
ret
fist
and
js
aam
icebp
adc
out
ds
cmp
ja
mov
push
rcl
push
cmp
and
push
mov
mov
ret
fst
mov
out
fldenv
or
in
jmp
in
ss
sub
cmp
in
jns
lea
pop
cld
mov
adc
mov
pusha
mov
pop
mov
push
pop
xchg
push
mov
or
pop
dec
rol
out
and
pop
mov
imul
aam
aad
cmp
cmps
lods
and
lods
aam
jmp
iret
es
lock
arpl
test
loop
aam
jmp
sub
add
sbb
loop
out
push
jmp
pop
fild
ret
push
xchg
jecxz
push
mov
push
pop
cmp
cld
adc
fiadd
push
out
cli
mov
jmp
jno
je
lods
popf
inc
cld
fisttp
inc
lahf
or
xor
(bad)
mov
fucomip
dec
sbb
push
add
jnp
inc
cmp
sbb
(bad)
jmp
fdivrp
les
push
mov
(bad)
mov
pop
pushf
jne
inc
ficomp
outs
push
and
mov
inc
or
or
stos
push
xor
or
xchg
mov
add
stos
inc
add
cmp
and
sti
adc
icebp
retw
dec
(bad)
sub
and
retf
enter
pushf
inc
sub
sar
ret
jg
adc
fidiv
movs
sub
cli
cli
loope
shl
imul
repz
adc
add
inc
leave
xchg
mov
add
sub
mov
mov
jnp
add
push
dec
inc
cmp
xchg
div
cmp
inc
jp
mov
retf
xchg
ds
outs
pop
or
stos
cwde
ret
mov
aam
hlt
stc
inc
data16
xchg
or
jb
push
pop
jp
jo
gs
in
jnp
mov
stos
push
push
push
sbb
xchg
mov
jns
and
in
(bad)
pop
leave
cmp
mov
clc
pop
mov
nop
xor
test
div
sbb
cmp
cmp
adc
add
adc
es
or
inc
pop
dec
stos
dec
lods
in
inc
test
xor
mov
xlat
sub
cmp
and
mov
mov
rol
xor
mov
das
cli
jbe
mov
jecxz
cmp
hlt
int3
mov
cli
dec
mov
stos
cmps
mov
inc
jns
movs
aas
(bad)
add
mov
sahf
sub
mov
popf
push
ins
retf
mov
in
jp
cs
aam
cmps
cmp
pusha
or
dec
enter
stos
js
mov
sbb
and
loop
std
mov
rep
sub
test
movs
fcom
pushf
shr
mov
pop
xchg
or
aam
xchg
fs
(bad)
and
in
xor
xadd
sub
and
cdq
xchg
lods
jnp
lods
loopne
or
call
dec
sub
push
in
out
sti
in
aad
outs
inc
and
ret
push
test
mov
sbb
mov
add
fcmovb
movs
aas
pushf
mov
pop
mov
fiadd
pop
and
jge
mov
aam
push
sbb
jne
adc
es
fisub
pop
leave
add
adc
(bad)
(bad)
fldenv
scas
push
mov
jne
cmp
int
in
jecxz
xor
xchg
dec
adc
push
push
mov
push
sub
aam
icebp
les
inc
ficom
mov
dec
movs
pop
cmps
mov
add
sub
sub
scas
aam
popf
shl
adc
mov
loope
and
jge
cmp
std
fcmovnu
mov
jo
and
pop
pop
call
cmps
adc
xchg
cli
call
cmp
xchg
test
rcl
retf
in
sbb
jmp
into
and
ficom
ja
dec
jmp
bound
inc
and
xchg
loop
imul
out
inc
sub
arpl
in
inc
mov
sbb
push
add
(bad)
js
mov
mov
inc
pop
sub
sub
jl
mov
fbld
mov
jge
add
xor
and
shr
jno
mov
jbe
xchg
les
fisub
pavgb
mov
dec
mov
test
xor
add
fs
xchg
(bad)
sub
clc
push
pushf
pop
inc
in
push
sbb
mov
add
aad
enter
add
xor
mov
ds
pop
cmp
cmp
jmp
je
jmp
adc
jo
dec
mov
aaa
es
inc
pushf
push
xlat
inc
ja
retf
ret
(bad)
in
and
add
stc
sub
jl
adc
jl
lods
pop
arpl
jecxz
(bad)
int
sub
dec
sbb
xchg
sbb
push
inc
leave
mov
out
shl
out
inc
ret
mov
fdivr
lahf
mov
aam
fsubr
jbe
stos
mov
int3
push
or
xchg
adc
pop
scas
mov
sahf
sbb
in
stc
cwde
push
push
data16
add
push
repz
loope
in
pop
xchg
enter
sub
or
pop
inc
je
mov
hlt
loopne
and
stos
sbb
dec
mov
fwait
dec
ret
dec
or
outs
pop
ss
aad
div
dec
fs
test
sbb
dec
nop
not
mov
rcr
push
adc
push
int
imul
ds
loope
iret
or
inc
mov
dec
stos
sbb
sti
inc
outs
add
in
lods
call
push
(bad)
loopne
inc
seta
movs
jecxz
jg
fsub
push
push
push
push
xor
fiadd
add
call
cli
or
ins
rol
fist
cmp
add
adc
xor
jno
retf
fsub
inc
adc
pushf
jl
and
gs
xor
nop
aad
and
aas
nop
fcom
mov
jnp
ja
cmp
or
movs
push
cmc
sub
rcl
outs
sub
sbb
test
push
std
mov
xchg
js
pushf
mov
mov
fadd
jle
lahf
ja
(bad)
int3
jmp
sbb
js
pop
es
dec
fisubr
inc
push
mov
xchg
pop
out
cwde
shl
mov
pop
stc
mov
pop
ins
pop
and
inc
icebp
adc
pushf
out
jl
push
aad
es
xor
or
(bad)
sbb
sub
xchg
cmps
les
nop
ja
icebp
sbb
pop
inc
add
inc
sbb
push
neg
mov
mov
aam
cmp
adc
hlt
sti
mov
fidiv
mov
jmp
jb
pop
idiv
fst
push
scas
sbb
push
xchg
xor
sbb
pop
sbb
mov
mov
dec
mov
and
dec
mov
cdq
in
jbe
xchg
stos
and
in
xlat
mov
mov
jmp
ret
cmp
(bad)
movs
xchg
lock
jmp
xchg
outs
xchg
popf
cmp
xor
xchg
sar
call
loop
push
jge
or
not
out
jo
clc
inc
aad
sbb
stc
fdivr
pop
mov
out
mov
pop
in
sub
dec
movs
pushf
adc
xor
push
jmp
mov
fistp
std
sbb
mov
das
aaa
imul
sbb
test
call
push
cmps
pusha
push
mov
(bad)
lea
(bad)
bound
cdq
and
dec
xor
mov
loope
or
pop
jb
jp
cmp
xor
mov
fnstenv
mov
scas
sbb
bound
xchg
cld
loop
mov
pushf
(bad)
fdivr
retf
in
test
mov
mov
js
xchg
pushf
or
mov
pop
out
and
aam
pushf
jae
sahf
(bad)
sbb
int
ins
dec
not
mov
mov
dec
mov
lea
pop
movs
sbb
shr
xchg
call
adc
pop
dec
cld
stos
mov
add
std
popa
ror
xor
sahf
lea
mov
ins
stos
sub
add
cmp
add
sbb
dec
or
dec
inc
fmul
mov
pop
icebp
mov
ja
(bad)
push
jl
int
pop
je
inc
sub
jge
or
lea
inc
(bad)
popf
jmp
and
xor
cmp
xchg
rcl
push
sbb
sub
adc
ss
pop
inc
fild
rol
aas
out
push
daa
movs
(bad)
xor
sub
or
mov
lahf
mov
inc
in
cdq
and
lahf
test
sbb
dec
pop
popa
jmp
ss
rcr
ss
push
nop
sub
lods
xchg
bound
fidivr
nop
iret
popf
jg
mov
sub
loopne
jl
xchg
jne
or
jae
sub
sub
add
lock
inc
shr
cmp
gs
in
popa
add
call
mov
scas
push
in
dec
mov
pop
inc
ins
push
adc
cwde
fdivr
cwde
pop
pop
bound
mov
xchg
pop
mov
arpl
sbb
retf
or
jge
push
push
xor
xor
sahf
dec
inc
cmps
(bad)
retf
mov
test
loope
fistp
mov
pop
fsin
(bad)
js
(bad)
loopne
into
xor
or
call
dec
and
mov
jne
cmp
push
es
cmp
xlat
sub
sub
call
xor
and
mov
lods
cmp
cmps
stos
fsubr
and
rcl
aaa
imul
mov
sub
or
jmp
fst
fadd
sub
and
xchg
sbb
pop
mov
cli
sti
push
fldcw
and
jmp
xor
cs
sub
call
jp
enter
ror
test
sub
cld
dec
or
mov
push
sbb
cmp
pushf
ret
adc
jae
inc
xor
adc
loop
xchg
sub
mov
push
inc
push
mov
movs
push
icebp
dec
xor
cld
inc
sbb
pop
mov
mov
jnp
mov
and
mov
bound
(bad)
sti
(bad)
cmps
leave
idiv
xchg
push
ins
mov
xchg
push
jp
inc
add
mov
sub
fcom
sahf
(bad)
pop
ins
add
imul
loope
push
ins
shr
mov
and
dec
mov
enter
cli
cmps
and
sbb
loope
hlt
xchg
and
mov
inc
inc
ins
jl
cmp
mov
in
mov
jbe
mov
sbb
mov
inc
xchg
in
inc
push
or
jne
sub
movs
lds
aad
int3
fcmove
clc
loope
out
and
mov
mov
mov
and
mov
addr16
sbb
xchg
popf
jmp
mov
fnstcw
mov
jmp
inc
push
or
or
sub
mov
lock
and
mov
sub
jo
sub
(bad)
push
(bad)
jbe
movs
add
adc
xor
fwait
jecxz
stos
jno
and
mov
sbb
push
pop
ror
inc
xchg
cmp
test
mov
(bad)
xchg
das
mov
inc
jae
repnz
mov
loop
mov
je
inc
cmp
repz
xchg
outs
div
xor
ds
jne
or
daa
repnz
cmp
or
cmp
push
int
mov
lods
or
pop
lock
mov
ret
aas
and
jg
cmp
jmp
retf
je
psubsw
adc
(bad)
stos
shl
das
push
pop
out
sbb
or
ins
ins
sbb
dec
mov
mov
push
mov
sbb
or
push
lods
pop
aam
adc
add
push
ins
push
xor
adc
imul
mov
daa
jge
dec
bound
fmulp
mov
mov
mov
mov
movs
mov
adc
rcr
push
fidivr
cmps
fimul
xchg
cmp
push
push
mov
lahf
push
jns
gs
enter
cmp
mov
std
movs
fwait
into
push
cs
add
hlt
sbb
call
cmc
cmp
sub
repnz
or
stos
fninit
outs
ret
movs
mov
jns
mov
repnz
cwde
in
lahf
xlat
ror
push
shr
jg
call
fmulp
sub
or
pop
jno
int
xchg
add
add
mov
xchg
inc
push
jmp
cmc
mov
mov
inc
hlt
(bad)
adc
cdq
cs
aas
jae
jg
jne
loope
and
pop
scas
loop
psubsw
fcmove
xchg
cmps
loope
mov
xchg
push
pop
bswap
mov
push
or
stos
adc
sub
sub
jo
mov
mov
es
jg
mov
in
int
in
(bad)
xor
aas
jne
ret
sbb
jecxz
int
mov
js
jle
ja
fbld
pusha
imul
inc
jno
jmp
adc
or
dec
or
cld
cmc
into
inc
imul
out
jmp
rcr
mov
xchg
mov
icebp
xor
adc
xchg
mov
adc
sub
cmc
xchg
xor
xor
(bad)
retf
(bad)
cmc
or
fild
mov
pop
js
dec
or
(bad)
jge
inc
sbb
or
jecxz
mov
inc
inc
mov
sbb
in
or
dec
leave
jp
pop
cli
xlat
jle
shl
jne
lds
int3
jle
jecxz
rcr
test
and
xor
or
(bad)
sub
int3
xchg
mov
inc
popa
nop
mov
jmp
call
sub
lea
das
sbb
int3
xchg
fucomip
jg
fiadd
pop
pushf
imul
in
jmp
psubusw
add
ds
fadd
pop
cmp
les
mov
cmp
das
in
sbb
clc
movs
setne
stc
mov
aaa
mov
fs
fist
xchg
ret
mov
push
and
jmp
fst
jge
adc
pop
fwait
call
bound
push
xor
or
pop
fisttp
xlat
call
dec
sbb
imul
out
sub
add
xor
shr
pop
cmp
push
int
pop
neg
lds
loop
std
sub
shl
aas
repnz
cmps
aaa
mov
cmp
inc
mov
inc
sbb
(bad)
stos
loopne
arpl
in
or
jne
cmp
sbb
outs
or
mov
rcr
and
call
lds
xchg
mov
or
jmp
jge
add
sar
jb
cmp
mov
or
daa
das
stos
inc
fs
sub
xor
mov
clc
test
xchg
frstor
pusha
inc
jecxz
adc
lea
sbb
das
icebp
iret
or
pushf
xor
(bad)
js
call
repz
xchg
das
mov
mov
adc
pop
push
or
rol
call
ins
in
and
fidivr
sub
ss
outs
sub
loop
adc
lock
cmp
or
push
and
retf
fistp
sbb
or
nop
adc
sub
mov
cli
jg
test
xor
pop
imul
push
mov
jno
mov
call
retf
test
and
xor
inc
mov
and
and
inc
test
retf
inc
daa
rol
enter
and
aam
cdq
shl
fcomp
pop
cmc
shr
rcl
sbb
int
and
adc
mov
inc
mov
call
mov
retf
pop
ret
ret
not
outs
fwait
imul
or
mov
xchg
pushf
xchg
(bad)
fsubr
adc
loop
jb
push
outs
mov
adc
scas
mov
bnd
cmp
dec
inc
sahf
cld
mov
inc
push
mov
in
rcl
mov
pop
out
in
es
test
jp
bound
mov
jbe
(bad)
cmp
(bad)
popf
adc
aam
and
popf
xchg
movs
sti
out
jns
dec
mov
pushf
rcr
or
cmp
dec
cmps
aas
(bad)
adc
jge
mov
repz
sahf
mov
mov
scas
sub
retf
add
mov
sbb
cwde
xchg
cwde
sub
sbb
mov
in
push
inc
sub
pop
(bad)
leave
movs
push
jmp
xchg
pushf
xor
ins
xchg
cwde
xchg
push
(bad)
lahf
pop
imul
btc
or
addr16
mov
movs
loope
add
xor
dec
or
xor
pop
test
jno
inc
cmp
and
es
adc
test
and
outs
fs
inc
sub
test
pushf
(bad)
push
jae
xchg
pop
sbb
adc
push
pop
xchg
sbb
popa
pop
adc
and
xor
sub
ffreep
and
xor
mov
pop
sub
repz
neg
dec
inc
or
mov
push
in
add
es
mov
aaa
movs
inc
aad
jl
cmp
cmp
aaa
into
inc
inc
push
imul
into
fidivr
scas
cmc
xor
imul
pop
jne
or
sti
movs
sahf
and
mov
jmp
pop
mov
and
mov
(bad)
mov
lods
or
mov
addr16
cmps
or
in
ds
and
in
cmps
dec
mov
(bad)
dec
icebp
push
or
stc
add
add
scas
bound
out
xor
fimul
xchg
movs
in
sbb
dec
(bad)
jno
pop
dec
mov
jns
xor
les
ins
mov
lds
cmc
fimul
and
jle
mov
mov
xor
in
mov
icebp
mov
ins
(bad)
out
(bad)
jmp
pop
cld
add
and
jo
jno
xchg
loopne
push
xchg
hlt
cs
jae
cmp
daa
mov
xlat
dec
imul
xchg
sub
cmp
adc
xor
ds
push
icebp
mov
adc
mov
sub
mov
in
cld
dec
pop
or
loope
pusha
int
and
ja
adc
dec
bound
dec
iret
arpl
and
mov
dec
out
inc
mov
inc
in
or
add
jae
rol
les
sbb
sbb
fstp
jle
mov
inc
(bad)
mov
call
test
jecxz
jnp
jg
sbb
xchg
or
shl
lahf
inc
pop
ins
dec
push
fisubr
popa
sbb
mov
retf
jbe
mov
pop
jg
jmp
cmps
or
mov
or
pop
pop
aas
(bad)
mov
(bad)
lods
fs
or
cmps
arpl
mov
addr16
out
dec
outs
inc
add
in
adc
rcl
mov
out
inc
add
sub
lods
push
sbb
test
push
adc
pop
mov
in
leave
and
aas
dec
addr16
mov
or
ins
add
dec
push
cs
scas
sar
push
das
inc
ret
(bad)
retf
adc
jg
(bad)
in
ss
cmp
mov
dec
jg
nop
(bad)
popa
mov
mov
call
mov
sti
cmp
sub
mov
sahf
mov
push
adc
mov
rcr
sub
push
fnsave
sbb
(bad)
aam
iret
mov
xor
les
es
inc
mov
mov
and
mov
jns
mov
fdiv
sub
call
sub
les
add
mov
xor
fwait
mov
jae
pop
pop
sub
outs
dec
mov
lods
call
xchg
adc
pop
mov
adc
aad
push
pop
fisttp
stos
ins
fucomi
sub
inc
dec
or
repz
dec
and
sbb
pop
push
jg
ja
and
jmp
and
rcl
pop
push
xor
mov
outs
call
jp
or
push
lds
repz
cmps
repnz
ds
mov
loop
in
das
and
sub
ins
inc
int3
leave
mov
xor
jecxz
push
icebp
jmp
sub
sbb
jbe
rcl
test
out
js
mov
das
mov
pop
jno
sub
das
pop
(bad)
pop
xchg
scas
shr
(bad)
(bad)
pusha
loop
mov
and
cmp
mov
(bad)
mov
inc
xchg
in
jno
call
cmp
xor
jbe
push
test
jb
adc
pop
push
pop
adc
cli
sub
add
jecxz
rcl
xor
jns
mov
jnp
aam
push
mov
mov
sbb
ins
jb
aaa
mov
mov
push
fadd
xor
cmp
shl
pushf
(bad)
add
inc
in
sbb
loope
xchg
lds
rcr
mov
jnp
pop
dec
das
dec
mov
dec
sub
inc
fld
repz
movs
fmul
pop
xor
sub
and
sbb
rcl
cmps
call
and
push
xor
mov
dec
movs
int3
pop
movs
mov
fdivr
pop
lock
push
adc
cwde
adc
imul
cmp
movs
repz
and
outs
or
cmp
fsubrp
test
test
xchg
popf
pop
jae
inc
pop
xor
test
out
mov
pop
pop
fstp
aaa
sbb
(bad)
sub
mov
aaa
(bad)
in
mov
das
and
shl
dec
cmp
les
out
ret
mov
cdq
or
loope
adc
jnp
int3
inc
cmp
fadd
lods
add
int
sbb
sub
out
(bad)
add
cmp
enter
pop
pop
idiv
out
inc
mov
retf
inc
pop
cli
adc
fcmovu
repnz
push
cdq
pop
pop
sbb
aas
xchg
or
popa
xor
loope
push
leave
pop
fwait
jp
dec
int
aas
mov
lea
mov
xchg
xor
test
div
ds
sar
xor
les
icebp
add
or
pusha
std
and
lock
push
inc
adc
add
inc
ins
cmp
ins
fist
inc
imul
popf
add
(bad)
jne
cs
fwait
fwait
lds
ret
xchg
inc
add
icebp
add
int3
gs
cmp
(bad)
cli
sbb
push
mov
mov
retf
jb
xor
in
repnz
in
add
mov
bnd
ins
call
adc
add
xchg
mov
aas
fcmovbe
mov
(bad)
jno
aad
jg
ror
mov
xchg
out
stos
jl
fsubrp
jb
stc
sar
inc
cmc
and
pop
xor
inc
sbb
stos
aam
add
cld
mov
adc
shr
or
jp
call
cmp
shl
cli
add
inc
outs
jmp
xchg
dec
ret
rcl
outs
sbb
xor
xchg
mov
(bad)
mov
mov
lock
ficom
adc
dec
mov
mov
aam
fbstp
and
cwde
hlt
les
and
mov
hlt
mov
inc
adc
mov
mov
mov
or
push
xchg
add
adc
xchg
ins
push
lahf
loope
push
or
outs
dec
retf
adc
xchg
aaa
xchg
mov
xlat
push
fcomp
cmps
jmp
dec
jle
jae
outs
or
imul
cmps
outs
aas
mov
loop
xchg
xor
pop
test
xchg
mov
sbb
mov
sub
cwde
fcmovnbe
mov
sbb
aaa
test
cdq
cmps
push
push
iret
xchg
push
inc
xor
pop
pop
xor
out
add
jp
sar
xchg
mov
daa
sbb
mov
xchg
and
ret
ror
jbe
xchg
adc
cld
dec
aaa
mov
xor
mov
loope
jne
and
cwde
loopne
jmp
lds
jg
xchg
stc
enter
imul
or
mov
inc
ins
shr
sti
fistp
cwde
out
stos
pop
dec
dec
dec
or
ret
daa
lahf
je
cwde
inc
ja
pop
mov
cli
pop
shl
neg
and
and
je
mov
push
fwait
adc
inc
fmul
dec
push
shl
jno
test
hlt
and
test
(bad)
sbb
xchg
enter
push
xchg
(bad)
jo
xor
test
mov
dec
mov
mov
cmp
data16
rcr
leave
ret
fistp
adc
(bad)
gs
inc
pop
les
sub
out
add
pop
jo
pop
cmp
(bad)
mov
rcl
jb
test
jg
stos
mov
mov
arpl
daa
stc
aaa
inc
loope
xor
push
aaa
into
inc
push
fistp
ss
hlt
pop
adc
fld
outs
xchg
add
clc
mov
sbb
iret
mov
test
or
sub
adc
dec
cli
cmps
rcr
addr16
mov
(bad)
pop
mov
icebp
(bad)
sub
cld
xor
lock
lea
cmc
mov
hlt
mov
call
dec
push
ja
jbe
xchg
and
(bad)
jmp
aaa
cwde
es
adc
stos
mov
aaa
or
call
push
data16
sbb
arpl
(bad)
movs
jb
retf
add
and
mov
cmps
repnz
mov
pop
inc
inc
das
push
arpl
fimul
xor
stos
and
jmp
mov
mov
lods
sub
aaa
rol
(bad)
(bad)
pop
and
xor
std
cwde
or
rcr
push
mov
iret
mov
(bad)
pop
inc
sub
jbe
cmp
mov
push
xor
ret
or
lea
es
adc
mov
ficomp
and
and
sub
xor
sbb
mov
mov
sbb
mov
fwait
add
movs
pop
leave
std
fwait
cmp
(bad)
into
jbe
icebp
xchg
mov
dec
adc
cmp
loop
pop
int3
js
xchg
add
fs
jg
pop
stos
call
jo
scas
jnp
outs
jecxz
sahf
and
xchg
dec
mov
hlt
and
icebp
dec
or
dec
push
jne
cli
aam
sub
adc
add
fwait
mov
ret
mov
jp
mov
or
cmp
mov
pop
and
out
retf
(bad)
add
jb
rcl
mov
fidiv
in
xor
mov
out
movs
jge
xor
or
sbb
and
sbb
jle
jbe
cli
mov
and
mov
cmps
inc
jle
mov
dec
inc
dec
push
cmp
mov
lea
jmp
icebp
jne
inc
cmp
mov
mov
fwait
lods
sub
aam
call
shl
out
in
dec
sub
sub
push
psraw
(bad)
call
or
pop
jb
mov
pop
(bad)
mov
mov
adc
cmp
femms
loopne
ror
cmps
mov
and
push
sub
push
scas
rcr
fst
scas
cmp
(bad)
ss
inc
mov
xchg
popf
push
dec
cmp
mul
call
xchg
mov
sub
sbb
adc
in
push
addr16
out
dec
pop
nop
sbb
add
xor
into
adc
lods
mov
cmp
cmp
push
mov
jecxz
mov
adc
inc
aaa
lods
outs
pop
sub
pop
test
sub
jmp
mov
int3
dec
lahf
dec
xor
ret
ins
fs
push
sbb
shl
(bad)
ds
sub
repnz
mov
xchg
mov
in
arpl
js
pop
int3
fnclex
sahf
pop
fstp
mov
test
in
adc
out
int3
add
movs
pop
inc
jmp
pop
pop
jne
pop
shr
mov
(bad)
pop
fstp
nop
sbb
mov
cmp
or
jle
mov
jp
std
lods
ins
arpl
xchg
lahf
cmp
sub
aad
fwait
movs
cmp
sar
lahf
mov
push
cmp
add
cmp
pop
pusha
xor
repnz
push
mov
mov
sbb
data16
loope
and
addr16
mov
and
cmps
cmps
call
jp
mov
std
mov
mov
ret
fdivr
cmp
jo
cmp
lds
add
int
adc
movs
sbb
lods
mov
rcl
sar
(bad)
int
fs
out
adc
cld
ss
call
ret
out
sahf
stc
test
sbb
jl
fisttp
inc
(bad)
call
int3
xchg
xor
jne
or
inc
scas
mov
retf
rcl
mov
add
lds
jle
(bad)
not
push
lods
or
addr16
sub
jne
push
pop
lahf
dec
push
mov
mov
add
pop
loope
mov
outs
lahf
dec
push
mov
int3
xchg
mov
sbb
test
jp
push
cli
dec
mov
add
ret
outs
pop
cmc
and
xchg
rol
ret
or
mov
jmp
mov
call
or
pop
pusha
call
cs
mov
fs
mov
out
push
paddsw
mov
inc
cmp
cmp
outs
add
inc
xchg
dec
jne
dec
jbe
or
(bad)
and
mov
or
mov
jl
xchg
ins
sbb
mov
mov
scas
cmp
mov
adc
aaa
ins
in
mov
retf
jmp
inc
movs
fstp
mov
ds
int
imul
add
fwait
xchg
bound
loopne
(bad)
push
dec
and
ret
dec
bound
fld
jb
push
hlt
cmp
xor
pop
idiv
arpl
cdq
or
dec
std
mov
aas
gs
mov
fisubr
pop
mov
stc
adc
jne
cwde
adc
cmc
aas
aas
jnp
lahf
movs
retf
inc
mov
and
jno
hlt
jno
push
pop
rol
xchg
add
je
jle
cwde
jns
or
jl
or
cmps
xchg
mov
push
xor
pop
(bad)
aam
push
xchg
add
lahf
push
pop
je
mov
xchg
ret
mov
adc
aaa
push
lds
add
arpl
daa
sbb
inc
pop
inc
and
jp
movs
outs
(bad)
bound
rcr
mov
xchg
(bad)
(bad)
mov
shl
adc
adc
push
stos
sahf
sbb
fdivr
sbb
sbb
cmp
scas
jl
push
xor
inc
fs
xchg
or
int3
imul
dec
adc
sub
daa
inc
out
mov
cli
inc
cmp
xchg
add
cmp
cmp
mov
repnz
pop
xchg
arpl
jae
push
int
xchg
arpl
dec
sti
aam
sbb
and
pop
push
xchg
add
icebp
js
lods
stos
xchg
arpl
test
hlt
or
adc
pop
mov
in
adc
xchg
int3
loop
fisttp
fwait
rol
stos
in
mov
or
and
sti
mov
int
int3
inc
cmp
mov
lahf
jno
pop
adc
ins
inc
nop
dec
push
cmps
test
jmp
push
les
aas
aas
cmps
mul
fcom
adc
es
xor
fadd
aas
div
mov
mov
test
mov
cmp
aaa
cmp
add
jno
xchg
xor
movs
aas
(bad)
add
lock
mov
retf
mov
icebp
add
stc
adc
loopne
sbb
shl
xchg
mov
cs
pop
mov
sbb
xlat
jp
inc
stos
(bad)
aad
pushf
cmps
cmc
(bad)
cdq
sar
and
cmp
pop
sbb
div
movs
adc
rol
call
mov
shl
xor
cmps
mov
jo
call
jmp
cmp
(bad)
push
or
mov
shr
icebp
xor
cld
pop
js
jg
ret
icebp
loop
sub
gs
call
ins
cmp
cwde
cmp
test
sbb
cmps
or
retf
adc
nop
add
mov
movs
inc
test
pop
push
mov
mov
sbb
cld
lock
into
rcl
jmp
pop
sbb
arpl
ja
inc
jmp
sub
ror
in
inc
test
sub
popf
cmp
arpl
mov
cld
fld
stos
(bad)
push
jae
push
add
push
sbb
xor
cmc
adc
pop
lock
or
pop
out
out
xor
or
ret
cld
jle
cmp
pop
lods
xor
aam
sub
retf
xchg
and
dec
or
pop
or
(bad)
iret
jmp
push
adc
lods
push
or
retf
repz
shr
inc
mov
mov
jmp
mov
push
shr
mov
push
xchg
(bad)
mov
out
cmps
inc
jno
xchg
xchg
and
test
mov
retf
retf
frstor
movs
ins
loop
push
int
inc
sub
hlt
test
cmps
ds
and
call
sub
loop
leave
dec
fldcw
ror
rcr
loop
xchg
or
ja
mov
xchg
cmc
and
adc
dec
(bad)
jg
aaa
push
cwde
lahf
and
mov
xchg
xor
ins
fidivr
push
repnz
scas
mov
test
ins
add
sub
(bad)
imul
sub
mov
push
mov
jno
js
movs
stos
lds
aaa
mov
jle
loopne
fmul
pushf
push
lock
fnstcw
jbe
jge
ret
xlat
xchg
adc
inc
retf
(bad)
int3
stos
(bad)
adc
test
or
int
std
inc
xchg
lahf
lds
pop
jns
push
mov
rcr
pop
imul
jecxz
lahf
sub
mov
pop
mov
outs
sbb
es
cmp
sub
xchg
xor
loopne
sub
push
push
xchg
rol
add
jb
nop
push
pop
sub
xchg
mov
sbb
retf
jge
sbb
xor
xor
mov
ret
cs
(bad)
adc
jmp
add
pusha
rcl
mov
je
call
loop
xchg
adc
outs
or
lds
rcr
test
mov
push
xchg
lods
inc
pop
(bad)
rcl
and
sti
mulps
mov
jns
popf
aaa
mov
(bad)
jns
sar
(bad)
js
nop
jbe
hlt
lods
outs
test
fild
xor
cwde
in
cmps
or
in
dec
das
scas
in
or
loope
xchg
dec
inc
jle
fisttp
stos
pop
or
jne
push
jb
adc
aaa
pop
and
fcom
mov
(bad)
das
fmul
and
(bad)
arpl
push
sbb
adc
dec
shr
xchg
cmp
shl
sub
sbb
add
fld
inc
(bad)
lahf
lahf
jae
pop
xchg
sbb
cwde
int3
mov
inc
inc
fmul
sub
cmp
add
fsubr
dec
or
fisubr
push
and
mov
jns
fsubr
sbb
cld
aad
out
push
call
ret
retf
mov
popf
retf
cmps
pop
push
and
pop
lock
inc
out
mov
pop
aas
jmp
(bad)
icebp
out
mov
inc
in
pop
test
dec
jo
xchg
loopne
xlat
inc
jl
xor
mov
mov
fistp
pop
mov
cmp
imul
inc
mov
imul
push
xor
(bad)
pop
xor
and
ins
pop
(bad)
stc
push
push
(bad)
fist
lock
mov
in
(bad)
sbb
cmp
mov
lods
aad
pushf
lahf
mov
es
mov
sbb
mov
mov
mov
push
dec
mov
daa
in
jmp
mov
ficomp
or
aaa
data16
cmp
xor
jmp
in
sti
lods
and
sub
int
jl
xchg
lds
fs
mov
push
sbb
mov
into
inc
pop
loop
cli
mov
adc
adc
inc
fwait
sahf
std
push
xchg
push
jb
or
call
push
sbb
mov
pusha
and
ds
stos
(bad)
repz
gs
lods
les
(bad)
pop
jb
mov
and
pop
bound
mov
hlt
cwde
arpl
fcomp
and
aas
arpl
push
xchg
or
loop
xchg
mov
arpl
clc
dec
in
dec
hlt
push
div
sar
cmp
mov
shl
sbb
cmp
fimul
xchg
dec
mov
push
lods
add
(bad)
sub
(bad)
mov
sbb
aam
push
not
cmp
(bad)
(bad)
cmps
or
out
inc
daa
push
into
(bad)
push
mov
jmp
push
jae
ins
inc
jecxz
cld
retw
xchg
xchg
jae
mov
lahf
push
sahf
lock
pop
mov
ror
mov
jecxz
jae
jo
mov
stos
adc
mov
push
pop
outs
pop
sar
push
sub
dec
mov
inc
fmul
dec
addr16
popf
lahf
stos
mov
leave
sub
out
and
ds
popa
sub
(bad)
frstor
dec
mov
aaa
aad
xor
cmp
mov
sub
rcl
and
es
popf
xchg
les
xchg
imul
(bad)
jecxz
lods
xchg
clc
mov
inc
mov
(bad)
and
xchg
sbb
or
ror
loop
and
xchg
cmc
cmp
push
inc
in
adc
jno
jge
pop
sub
mov
push
cwde
cmp
cmp
mov
cmp
fidiv
loop
hlt
adc
mov
scas
xchg
xchg
adc
es
push
pop
fistp
cmp
or
lock
hlt
jmp
cwde
jmp
test
push
add
mov
and
out
pop
jecxz
repnz
mov
jno
xchg
or
xchg
loope
push
jecxz
push
daa
popf
ficom
xor
jp
mov
cwde
and
cwde
sbb
fdivr
pop
or
lea
mov
xchg
aaa
mov
test
div
(bad)
mov
inc
jl
je
js
hlt
inc
mov
mov
lea
xchg
test
mov
adc
and
lahf
int3
cmp
add
sub
xchg
sub
xor
js
cwde
dec
fld
cld
leave
fdivp
aad
nop
out
xlat
mov
outs
xchg
xchg
outs
(bad)
pop
test
push
enter
dec
cmp
xor
jb
inc
mov
dec
cmp
pop
dec
mov
in
cmp
cld
retf
(bad)
loopne
and
pop
pop
and
dec
aaa
imul
aas
mov
cmp
out
push
aaa
test
jnp
pop
retf
or
stc
aam
in
pop
cdq
cs
push
add
xchg
call
mov
cmc
jo
out
out
adc
jecxz
mov
enter
int3
lods
lods
mov
jle
fxtract
aam
retf
loop
ja
sub
lds
fld
mov
pop
sub
push
sar
mov
mov
cli
loope
mov
aas
and
scas
pop
cmps
addr16
test
pop
stc
sbb
and
(bad)
lea
pop
or
or
add
mov
jnp
inc
in
xchg
outs
inc
mov
loop
sahf
or
xor
icebp
dec
shl
adc
out
or
xchg
pop
xchg
inc
jle
push
aaa
inc
jb
xor
and
and
jecxz
int3
mov
cmp
popf
jmp
dec
or
mov
rcr
adc
test
xchg
mov
xor
jp
ret
lods
xchg
in
outs
loopne
out
cmp
and
lahf
pusha
repnz
daa
repz
cmc
pop
adc
sub
mov
adc
pop
mov
gs
pop
inc
arpl
jmp
cmc
mov
sbb
mov
pusha
sbb
adc
sub
xchg
cmps
and
jmp
enter
jb
rol
push
mov
mov
mov
daa
lea
and
sahf
mov
cdq
or
fisubr
repnz
stos
arpl
js
cs
sub
aam
ficom
cmp
sbb
mov
cld
jns
retf
loopne
je
jmp
inc
mov
retf
or
cwde
cmps
retf
pop
sub
imul
jmp
dec
call
stos
push
imul
pushf
cmps
inc
pop
cmp
fnstcw
jle
xor
ret
out
fwait
jg
dec
sbb
cdq
arpl
imul
(bad)
arpl
not
enter
mov
cmps
int
inc
addr16
js
lods
(bad)
in
push
sub
mov
(bad)
dec
bound
mov
sub
gs
mov
test
arpl
push
lock
fdivr
jmp
xor
cmp
pusha
xchg
or
fnsave
xchg
aas
test
div
xchg
rol
je
jg
mov
push
jo
arpl
shl
into
stos
jmp
daa
je
sti
stos
or
or
sar
xor
pusha
jo
aam
pop
test
retf
sbb
mov
jl
arpl
push
sti
dec
sbb
(bad)
sahf
pop
mov
(bad)
cdq
cmp
bound
jae
mov
das
push
cmp
jg
shr
stc
cs
js
push
push
lds
scas
mov
xlat
mov
or
pop
sub
aaa
outs
xor
nop
sahf
mov
cs
repnz
shl
mov
xchg
js
jae
push
loope
push
push
add
sub
or
lods
in
cmp
(bad)
div
int
ins
add
fs
jo
outs
inc
and
out
push
cmp
push
ja
jmp
cmp
push
icebp
stos
xor
fcomp
dec
lds
or
inc
jbe
inc
lock
and
mov
jns
add
xchg
lahf
jbe
cmp
xchg
icebp
imul
test
cs
inc
cmps
icebp
inc
xor
into
push
pop
xor
les
sbb
jl
es
jns
mov
pop
add
inc
push
rol
lock
in
inc
std
in
push
or
dec
dec
sbb
in
sbb
pop
in
mov
mov
(bad)
lods
inc
sahf
js
sub
mov
leave
sahf
outs
cmp
mov
pop
jno
fst
ja
or
mov
jmp
xor
arpl
mov
push
xchg
jmp
scas
inc
inc
mov
sub
pop
shl
cs
jmp
leave
scas
push
cmp
movs
pop
sub
shl
push
push
xlat
mov
out
test
(bad)
cs
aas
jge
stc
cmp
mov
js
nop
cs
pop
or
lods
cld
mov
push
add
out
div
ins
pop
inc
jne
sbb
mov
cdq
fild
mov
fistp
push
pop
popa
mov
mov
push
cmc
cmp
ret
push
add
call
inc
xchg
lods
dec
(bad)
movs
shr
mov
xchg
sti
in
call
and
sub
mov
sbb
loopne
xor
lods
aaa
xchg
scas
nop
div
mov
push
aas
and
push
jno
cld
jnp
inc
xchg
jbe
fadd
jae
cli
mov
mov
cmc
push
dec
gs
sti
xchg
and
inc
jno
sub
call
pop
(bad)
shl
add
mov
sub
cmp
imul
stos
pop
ins
or
je
pusha
cmp
pop
inc
imul
inc
ror
adc
xchg
xor
mov
lahf
test
cdq
mov
rcr
test
aas
push
call
jecxz
jb
fwait
outs
pop
in
mov
or
cmp
dec
ret
sub
push
repz
fucom
xchg
push
pop
mov
dec
fdiv
js
xor
aam
sub
inc
jge
out
lods
push
lods
in
mov
dec
mov
adc
and
ret
jno
sub
push
fisttp
push
out
leave
lahf
mov
or
mov
mov
push
jbe
cmp
punpckhwd
inc
mov
jp
data16
shl
call
(bad)
pop
xor
add
xchg
jae
cmp
retf
dec
cs
shr
jb
mov
xchg
mov
pop
lea
mov
repz
rcr
(bad)
(bad)
sbb
add
mov
cmc
adc
pushf
fcom
cmp
test
int
repz
or
mov
mov
pop
call
cmps
xchg
stc
cmp
shr
hlt
adc
fwait
mov
out
or
sub
test
xor
test
lods
cli
xchg
dec
ret
mov
mov
imul
frstor
mov
movs
sbb
sub
jno
lods
xchg
and
enter
cld
xor
adc
push
stos
add
cmp
mov
jg
fucomi
adc
push
xchg
stos
xor
mov
inc
ret
(bad)
icebp
mov
push
mov
mov
mov
clc
mov
inc
mov
aaa
add
test
out
cmps
mov
xor
shl
inc
cmp
push
dec
sti
pop
push
push
scas
icebp
jmp
mov
fwait
push
mov
sub
mov
ret
movs
mov
mov
nop
mov
stc
sahf
sbb
rcr
repnz
(bad)
mov
(bad)
adc
cmps
jle
out
fldenv
aad
pop
lods
jg
mov
adc
shr
jge
fcomp
fnstcw
jnp
jnp
mov
mov
sbb
mov
out
push
call
stc
stc
movs
jae
mov
not
aaa
jl
sar
sub
imul
mov
aad
jb
mov
rcr
mov
cmc
aaa
cmp
jbe
push
lods
add
into
sub
loope
pop
cmp
ins
stos
sbb
mov
rcl
cli
ret
enter
adc
jp
imul
cmp
mov
test
mov
sar
xor
lds
mov
aas
(bad)
add
repnz
ss
mov
mov
shl
int
frstor
mov
inc
call
dec
dec
cli
xchg
icebp
es
xchg
out
sbb
movs
lock
(bad)
jmp
aad
mov
jmp
xor
aas
or
push
fs
outs
cwde
(bad)
sub
lods
xchg
fwait
nop
mov
cmc
jns
mov
scas
dec
out
xor
icebp
xchg
jmp
test
cmp
xchg
lds
and
xchg
mov
test
mov
sahf
cdq
cmp
jb
fbstp
adc
dec
sbb
mov
sub
mov
loope
clc
and
lock
mov
movs
add
fs
outs
jne
icebp
add
scas
bound
aad
push
call
outs
xchg
aad
push
(bad)
fiadd
fwait
xlat
pushf
add
cwde
inc
or
xchg
add
neg
pop
ror
in
(bad)
cmp
daa
dec
mov
scas
adc
ins
(bad)
mov
pop
or
lahf
cld
ins
lds
sub
das
or
call
into
call
loope
in
clc
fimul
jl
std
test
(bad)
lds
inc
cmc
cmp
or
popa
lods
adc
call
cmp
aad
and
or
scas
or
cmp
mov
push
mov
push
les
mov
jno
xchg
js
sub
mov
(bad)
sti
or
lods
sbb
adc
pop
int3
mov
mov
jb
cmp
mov
jo
imul
mov
or
cmp
out
add
add
cmps
rcl
add
sar
rol
mov
rcr
and
pop
xchg
dec
outs
mov
shr
fsubr
movs
push
cmp
or
xor
(bad)
pop
jb
test
dec
rcl
rcr
mov
lock
icebp
adc
cmps
xchg
push
push
mov
in
mov
mov
inc
mov
nop
sub
mov
cdq
ja
mov
pop
and
pop
daa
ret
and
jnp
push
adc
sbb
push
adc
in
(bad)
stos
cdq
add
jbe
into
jnp
(bad)
mov
mov
xor
xor
jge
aaa
sbb
ins
lahf
mov
dec
sbb
jbe
adc
xor
sub
retf
push
mov
mov
hlt
pop
test
data16
sub
sbb
in
test
sbb
daa
pop
repz
push
xchg
data16
jmp
test
stc
shl
fwait
retf
xchg
fisub
pushf
pop
pop
ja
mov
cld
and
jnp
inc
(bad)
les
icebp
out
shr
cs
call
xchg
jb
or
mul
xchg
into
mov
fild
push
std
add
sti
shl
aas
cld
lods
mov
ss
fcmovb
into
nop
aaa
mov
jp
jns
rcr
pop
leave
jns
lock
aas
xchg
jne
mov
mov
ror
cmps
push
cmp
mov
cmps
cwde
inc
std
ins
cmc
je
xchg
mov
mov
and
loop
cli
push
sub
push
cwde
push
push
shl
jge
ret
pushf
xchg
mov
adc
loopne
push
xor
test
mov
inc
mov
rcr
cmps
bound
bound
outs
cmc
inc
pop
(bad)
pop
jg
jnp
lods
loopne
repnz
or
inc
adc
and
loopne
pop
sub
mov
arpl
jo
ret
and
xchg
(bad)
in
jle
dec
pushf
rol
mov
mov
fdivrp
aam
cwde
into
mov
cmp
push
xchg
aam
sbb
loope
lods
aad
adc
mov
lahf
jp
(bad)
xchg
mov
mov
fld
xor
or
and
mov
adc
xor
sar
jecxz
fwait
mov
stos
sbb
add
mov
xchg
jmp
push
es
fcom
mov
shl
jbe
fisub
xchg
mov
sbb
(bad)
je
mov
iret
leave
stos
mov
push
outs
mov
sub
or
fcom
xchg
mov
xor
ror
test
or
cmp
mov
adc
sub
shr
ins
aas
cmps
inc
add
inc
fisubr
mov
jno
push
adc
rcr
ficomp
ss
sahf
xchg
in
pop
cmp
loope
cmps
mov
test
data16
or
lock
push
add
aad
mov
imul
ret
jbe
in
push
dec
xor
and
jg
fadd
neg
mov
fs
rcl
shl
cmp
retf
inc
out
add
adc
and
movs
or
mov
in
pop
add
add
es
call
and
dec
add
inc
ss
mov
mov
fdivr
push
(bad)
dec
daa
sub
fst
xchg
cmp
xor
(bad)
fcomp
xchg
sbb
dec
mov
fsubr
cmp
sbb
imul
cmp
adc
add
inc
push
mov
ret
scas
mov
jbe
dec
fcom
rcr
lock
mov
icebp
pop
jbe
mov
mov
sbb
sub
mov
cmps
pop
movs
hlt
push
(bad)
clc
xchg
ja
or
and
outs
repz
jmp
cwde
test
adc
gs
dec
mov
in
pop
push
jno
pop
ins
std
add
xchg
jp
push
imul
idiv
loope
movs
rcl
gs
push
(bad)
push
jb
outs
fsubr
ins
popa
movhps
shl
pop
mov
popa
xlat
cmc
xchg
enter
imul
mov
psubq
ins
lds
dec
or
sbb
add
leave
adc
stc
xor
clc
xor
mov
lahf
or
dec
pushf
aaa
cmp
(bad)
mov
and
dec
(bad)
jmp
mov
icebp
lsl
sbb
stos
add
cmp
rcr
mov
ja
xor
sbb
inc
dec
lock
out
enter
add
mov
dec
jg
inc
stos
push
inc
nop
xchg
add
(bad)
fs
adc
inc
js
mov
sub
adc
push
mov
xchg
sti
scas
add
or
sti
xchg
mov
stc
retf
ror
retf
retf
fnstenv
dec
rcl
fcmove
ins
pusha
push
fidiv
outs
pop
xor
sbb
sub
cmp
mov
daa
sahf
aad
stos
cmp
rcl
cmp
sub
cld
inc
movs
lea
adc
enter
mov
adc
mov
sar
mov
lods
inc
mov
frstor
test
and
aaa
pop
loope
out
aaa
in
mov
jg
jle
shl
mov
shr
inc
jl
js
pop
cmps
mov
data16
sti
out
mov
xor
ins
mov
mov
fild
jge
in
icebp
push
xor
mov
out
pop
fisubr
fs
ds
adc
cdq
mov
aaa
mov
mov
mov
ror
mov
out
aad
aaa
fild
lahf
cld
(bad)
xchg
movs
mov
push
(bad)
jmp
mov
(bad)
pop
test
daa
cs
xchg
cmp
push
movlps
jns
mov
xor
mov
hlt
pop
sbb
jg
sub
and
add
or
dec
scas
mov
jno
addr16
mov
out
sbb
dec
stos
sub
(bad)
fnstenv
pop
lods
fidivr
mov
out
sub
xchg
jmp
push
inc
test
leave
cmp
mov
sbb
shl
jl
test
int3
clc
test
push
in
sahf
repnz
movs
mov
push
adc
push
sbb
fdecstp
push
cmp
(bad)
iret
mov
sub
shl
dec
jg
mov
pop
retf
call
pop
sub
cmp
sub
test
adc
call
push
xor
and
mov
(bad)
and
cmp
rcr
retf
sbb
fidivr
in
cdq
xchg
adc
ret
or
and
ins
pop
add
std
add
mov
or
icebp
or
mov
outs
adc
jne
je
push
jae
test
mov
jns
jp
dec
fld
add
pushf
sbb
add
jle
(bad)
popa
mov
jl
xlat
jo
aad
xchg
mov
cmp
ret
(bad)
xchg
mov
cmp
mov
mov
adc
in
push
sbb
popf
ds
repz
arpl
xchg
push
sub
fmulp
jmp
xor
push
mov
sar
scas
push
mov
outs
adc
dec
(bad)
xchg
scas
inc
jo
push
shr
adc
rcr
pop
and
clc
icebp
dec
mov
and
data16
jle
ret
mov
out
mov
cli
adc
repnz
xchg
icebp
retf
scas
adc
mov
xchg
ins
aas
mov
inc
retf
mov
ret
inc
idiv
mov
iret
mov
outs
and
test
xor
xor
and
mov
or
call
sbb
bound
jg
(bad)
cmp
xchg
and
ror
jnp
dec
cmps
push
lahf
inc
aaa
stos
loope
mov
call
jnp
lods
mov
ss
add
inc
not
rcl
xor
mov
icebp
aas
icebp
mov
xor
jbe
xchg
scas
mov
jle
cld
mov
adc
push
es
in
or
cmc
out
test
mov
cmp
dec
mov
sar
test
stos
cdq
pop
aas
cld
dec
push
push
in
fldenv
mov
(bad)
das
mov
cli
push
push
xor
sbb
mov
cs
stos
adc
adc
xor
scas
xor
pop
and
mov
push
push
into
movs
aas
in
bound
adc
rcl
imul
dec
add
cmp
and
neg
xor
ds
xchg
or
out
or
out
jne
test
sbb
mov
test
push
adc
loope
test
jp
jae
sahf
xchg
cmp
xchg
xor
repz
ins
xchg
ins
and
neg
adc
loope
xchg
dec
in
lds
popa
xor
jg
adc
and
test
jp
ret
stos
push
jge
mov
aam
mov
dec
inc
loop
movs
dec
loop
ins
xchg
and
test
cmp
and
fimul
cmp
pop
mul
dec
call
aam
jns
fxch
xor
dec
xchg
xchg
jno
and
test
repnz
mov
mov
mov
dec
das
mov
loop
and
ret
sbb
jae
(bad)
mov
jnp
faddp
ja
mov
outs
loop
fstp
into
in
jmp
ds
xchg
das
mov
out
xsha256
cmps
(bad)
aad
sahf
(bad)
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
xchg
stc
sub
xchg
repnz
cli
add
mov
cli
test
mov
test
mov
test
mov
xchg
daa
mov
movs
aas
mov
push
cmp
mov
repnz
mov
test
mov
xor
stos
push
cmp
mov
repnz
repnz
jmp
mov
test
mov
ss
xchg
test
mov
sub
push
cmp
cmp
repnz
ror
and
ins
jl
hlt
dec
imul
mov
cmp
pop
push
ja
dec
lods
test
popa
movs
ret
xchg
sbb
test
mov
xor
aas
sub
cmp
adc
pushf
mov
test
dec
jp
add
and
cmp
sti
outs
das
jns
scas
inc
xchg
test
lods
in
rol
or
dec
jne
icebp
dec
mov
dec
icebp
push
iret
(bad)
push
xchg
adc
push
cli
adc
or
out
mov
lahf
ror
out
loop
ins
fmul
jecxz
or
stos
imul
cmps
fcmovnbe
xchg
xchg
dec
dec
mov
cld
rcl
fisub
test
mov
fst
add
inc
mov
or
test
into
adc
(bad)
mov
retf
pop
retf
cld
test
adc
adc
int
push
sbb
cmp
jne
shl
lds
in
lds
and
int3
pop
jbe
mov
dec
add
sub
arpl
dec
jne
pop
pusha
shl
or
cli
push
scas
aad
movs
iret
pop
pop
inc
rcl
pop
push
add
imul
cmp
add
addr16
in
dec
jns
cdq
ds
mov
ss
xchg
pop
pop
call
or
test
xchg
test
fdecstp
add
pop
sar
pop
(bad)
icebp
mov
xchg
int
xchg
or
mov
call
adc
sub
sahf
movs
mul
out
or
pop
fcomp
mov
jo
aas
or
add
add
pop
mov
jecxz
lock
shl
(bad)
sti
mov
inc
nop
pushf
loop
jp
mov
popf
jae
repnz
xor
test
mov
test
mov
test
mov
xchg
cmp
push
test
push
mov
xor
inc
sub
cli
lds
mov
fnstsw
mov
jns
and
rcl
fs
popf
push
out
mov
jbe
or
dec
fadd
xchg
xchg
nop
sbb
lds
xchg
iret
cmp
outs
es
lea
fisubr
lods
dec
sbb
lods
call
and
dec
pop
stos
jmp
call
fst
pusha
mov
fsubr
arpl
sub
mov
xchg
mov
push
mov
(bad)
jmp
or
fldln2
add
push
inc
or
loopne
xchg
sbb
inc
add
outs
je
dec
jmp
ja
je
adc
adc
frstor
dec
ins
xchg
call
dec
jmp
shl
rcr
inc
xor
and
cmps
inc
into
push
hlt
les
push
jae
mov
iret
repnz
or
mov
movs
add
dec
add
ret
rol
xchg
cmp
enter
popa
out
cmc
mov
push
push
adc
push
ret
sbb
sub
jns
in
xor
je
inc
add
movntq
out
push
icebp
sbb
pop
and
aam
adc
adc
mov
hlt
and
cmc
sbb
xor
dec
icebp
or
dec
fld
out
mov
int
lods
push
pusha
sar
popa
pop
iret
xchg
stc
addr16
retf
mov
loop
push
jbe
addr16
ss
push
pushf
push
xchg
outs
add
pop
add
xchg
dec
jecxz
adc
pushf
jbe
enter
lahf
imul
scas
inc
imul
pop
ins
xor
dec
rcr
jge
popf
add
pushf
jnp
inc
call
outs
ins
mov
add
mov
ins
jo
xlat
mov
push
or
push
xor
ins
adc
pushf
test
fcomp
rcr
mul
scas
push
xchg
pop
dec
ret
clc
test
cmp
and
(bad)
dec
retf
add
push
retf
push
jne
push
pushf
daa
fst
and
cmps
or
pop
push
xchg
jmp
in
jmp
jbe
sbb
adc
push
retf
ins
in
stos
or
fcmovu
out
xchg
cmps
in
imul
rol
xchg
adc
cmp
xchg
popf
ret
arpl
xchg
or
xor
xor
cwde
dec
inc
and
lods
fadd
rcl
pop
shl
ficom
mov
push
sub
mov
mov
cwde
pop
mov
mov
dec
popf
setg
ret
sbb
lock
xchg
gs
bound
adc
sub
jnp
imul
xor
xor
push
sbb
inc
(bad)
in
jp
mov
not
inc
ret
mov
outs
sti
mov
push
jns
mov
aad
dec
adc
mov
jle
shl
aad
iret
dec
mov
mov
lods
(bad)
xchg
icebp
aam
sbb
cdq
out
stos
lods
repnz
aad
stc
inc
ins
in
retf
cmp
daa
test
icebp
icebp
push
retf
xor
ins
or
jmp
jecxz
in
mov
rcl
cmp
adc
mov
cmp
aad
dec
mov
lock
rol
and
cmp
or
aas
bound
popf
aaa
cmps
jmp
mov
shl
inc
aas
mov
jp
jg
mov
push
mov
xor
jge
mov
(bad)
stc
jae
aas
(bad)
add
mov
dec
cmc
mov
cmp
dec
leave
jmp
adc
add
jmp
dec
hlt
xchg
ret
xor
imul
add
in
and
mov
out
in
gs
cdq
mov
call
xor
inc
mov
ins
out
test
push
clc
cmp
and
repz
pop
cmp
fstp
xchg
hlt
or
xchg
(bad)
mov
pusha
int
sbb
mov
xchg
leave
aad
fnsave
xchg
je
stc
mov
mov
add
adc
ret
in
jp
dec
jne
pop
jmp
jle
outs
pusha
inc
call
out
aaa
and
pop
xchg
rcr
mov
jnp
bound
out
nop
fs
ror
xchg
call
xor
out
push
mov
sub
add
ret
sub
cmp
jge
jmp
push
or
sub
jge
dec
loopne
cmp
jl
loope
xor
xor
clc
and
adc
bound
and
mov
sbb
dec
lock
sbb
outs
inc
inc
aam
push
mov
fidivr
mov
rcl
mov
call
scas
jl
call
jle
mov
pop
sub
iret
jmp
test
out
sbb
out
push
aad
scas
inc
fsub
imul
popf
rcl
xchg
call
mov
xor
jbe
jb
mov
mov
mov
popf
mov
mov
dec
ins
jb
cmp
pop
mov
fwait
xchg
add
cmp
adc
pusha
shl
mov
sub
ins
mov
repnz
jbe
jbe
mov
cmp
test
rcl
xchg
bnd
mov
sar
and
daa
mov
repnz
mov
test
inc
ja
loop
mov
ss
div
add
xor
add
dec
cdq
cmp
dec
test
cmc
mov
inc
sub
mov
lods
out
add
pop
pop
inc
hlt
(bad)
jge
(bad)
push
std
js
sbb
pop
mov
sub
add
push
cmp
ror
mov
mov
and
ret
mov
push
xor
das
ss
jns
clc
xor
mov
imul
push
jge
bound
out
push
jp
push
xchg
push
xchg
jmp
adc
lods
jo
(bad)
aam
mov
push
lods
ds
dec
mov
push
sbb
call
adc
outs
popa
movs
(bad)
test
addr16
push
xchg
push
mov
xor
shr
push
pop
mov
(bad)
jmp
sub
pop
mov
dec
adc
xor
sub
inc
or
test
adc
addr16
push
pop
sahf
mov
in
loop
ds
jmp
jno
(bad)
in
push
adc
movs
push
cmp
ins
fsubr
inc
dec
mov
(bad)
pop
rol
(bad)
fs
xor
dec
jl
sar
out
cmp
imul
clc
icebp
retf
add
jno
int
fstp
mov
cmp
rol
xlat
mov
cli
mov
mov
xor
shl
or
imul
xlat
jno
cs
lods
jmp
test
pop
pop
daa
push
int3
mov
nop
xchg
ins
imul
xchg
sub
rcl
nop
add
std
ds
mov
aad
pop
mov
jecxz
or
(bad)
jmp
mov
movs
cmp
mov
fwait
adc
cmp
xchg
lock
rcl
inc
sbb
jge
fs
jl
inc
add
mov
lock
push
retf
ds
test
push
ins
lahf
imul
pop
xor
enter
(bad)
pop
adc
mov
(bad)
or
sub
jmp
cmps
dec
aas
mov
xchg
jg
inc
ja
mov
add
cmps
cmp
mov
jbe
dec
jae
xor
mov
ja
int3
mov
jnp
aaa
mov
jns
aas
mov
jns
mov
push
outs
pop
in
mov
xor
xor
fucomi
std
jmp
aas
shl
pop
or
retf
lea
lahf
dec
mov
(bad)
mov
jbe
es
in
and
pop
or
cmp
(bad)
push
jmp
in
mov
ss
pusha
jmp
inc
scas
in
dec
fbstp
mov
cli
xor
pop
xlat
and
cmp
scas
lods
pop
ret
push
xchg
mov
out
sbb
xchg
dec
mov
cwde
gs
in
add
fst
mov
dec
fs
frstor
inc
adc
add
push
shl
call
mov
mov
(bad)
scas
ss
adc
enter
mov
push
inc
sbb
test
sub
dec
or
mov
test
jb
push
and
repnz
cwde
ror
scas
push
sub
jmp
ret
push
in
fdiv
mov
pop
xlat
fstp
and
imul
repnz
neg
xchg
mov
push
clc
clc
adc
fdiv
js
sahf
sub
out
sub
int
pop
rol
(bad)
dec
and
pop
out
mov
aaa
out
clc
bound
std
fst
bound
sub
mov
stos
jp
sbb
mov
xchg
push
push
bnd
jns
(bad)
cli
or
adc
out
sbb
or
xlat
mov
aad
lds
jb
dec
dec
in
movs
add
lea
pop
jne
adc
mov
and
mov
int3
ret
jecxz
mov
xchg
je
xor
scas
sub
xchg
test
mov
jecxz
push
iret
iret
push
sub
(bad)
mov
out
add
mov
mov
jecxz
pop
call
ds
popa
jbe
push
jl
(bad)
sahf
aaa
and
sbb
ins
movs
xor
xchg
repnz
xchg
cmp
clc
sbb
xor
xor
push
minps
sbb
sbb
mov
(bad)
je
cmp
shl
(bad)
(bad)
scas
rol
mov
xchg
and
adc
adc
cli
pusha
mov
(bad)
mov
xor
xor
add
mov
mov
imul
stc
xchg
cs
xchg
xlat
xor
out
adc
sbb
cmp
retf
pop
mov
imul
scas
fdiv
mov
fsincos
je
ins
mov
fstp
call
or
add
test
add
inc
xchg
call
xchg
cmc
je
sbb
or
outs
xor
xlat
ins
xlat
jle
jge
mov
mov
lock
push
jmp
aam
sub
push
xor
outs
adc
dec
lahf
pop
dec
push
je
ficom
into
test
pop
loopne
push
and
jno
mov
dec
enter
call
xchg
cmps
das
mov
cmp
sub
jnp
xchg
movs
int3
pop
scas
pop
sub
add
sbb
loopne
jge
xchg
cmp
test
mov
fmul
and
mov
push
sub
xor
mov
mov
jns
fcom
adc
dec
movs
xchg
imul
pop
mov
loop
imul
adc
mov
inc
rcr
in
fsub
mov
and
cli
xor
cld
ss
push
rcr
xchg
add
mov
xor
cdq
mov
in
inc
sub
loope
in
mov
outs
xchg
(bad)
cmp
xchg
adc
call
xchg
cmp
xchg
loopne
ror
aas
adc
dec
push
outs
int3
call
jecxz
mov
fidiv
push
aaa
xor
pushf
sahf
push
mov
cwde
out
loopne
and
iret
idiv
or
xchg
pushf
jge
pop
retf
mov
call
cdq
jne
jecxz
iret
and
div
std
iret
or
pop
(bad)
jl
loop
retf
jno
and
pop
in
or
or
enter
jle
jmp
das
inc
or
mov
jecxz
(bad)
in
mov
test
aad
pop
mov
aad
cmps
ds
sub
mov
push
jp
adc
shl
in
ja
push
(bad)
sbb
push
fadd
or
pusha
pop
movs
loop
mov
mov
xlat
int3
sbb
imul
jg
es
pop
push
xchg
xor
inc
pushf
mov
sub
jmp
jmp
fimul
leave
sbb
fdiv
fidivr
lock
mov
mov
pop
xor
cmps
jb
loopne
or
dec
adc
cld
push
shl
sub
or
jle
cs
rcl
out
outs
push
and
adc
mov
mov
and
mov
sub
push
and
mov
inc
or
and
test
and
add
(bad)
jns
xchg
enter
dec
xchg
mov
dec
xor
cwde
jge
dec
sub
inc
(bad)
dec
popa
mov
and
mov
test
es
fucomp
out
pop
push
mov
mov
jg
fs
pusha
push
xchg
dec
(bad)
ss
(bad)
jecxz
mov
std
(bad)
fmulp
popf
inc
jg
stos
sub
sbb
push
push
xchg
aas
or
pop
cld
cmps
sbb
cld
aas
stos
mov
clc
cli
cmp
retf
test
data16
retf
daa
xchg
fstp
cmps
inc
xor
pop
inc
push
jae
push
jne
cmp
cmc
lds
adc
ror
out
imul
pop
jle
and
int3
shl
and
popf
ret
mul
jl
pop
sahf
shr
loopne
movs
mov
xchg
pop
jle
fldlg2
pop
and
mov
ins
or
les
repnz
xchg
mov
mov
mov
xchg
aas
ins
mov
test
sbb
inc
sahf
dec
mov
popf
jmp
jmp
cmp
aas
(bad)
bound
and
gs
cmp
enter
adc
fdivr
adc
and
push
inc
jmp
jno
mov
ficom
add
push
dec
pop
dec
cmp
and
cdq
(bad)
jo
(bad)
xchg
popa
xor
and
lahf
test
out
xor
add
xor
sahf
jbe
pop
fnstenv
push
mov
aas
pop
fs
fld
mov
mov
mov
ror
mov
scas
xor
inc
daa
mov
mov
xor
bound
cmc
test
(bad)
cmps
(bad)
loope
jecxz
fcom
outs
es
cmp
push
xor
pop
rcl
sub
mov
cmp
fild
vrcpps
aad
sbb
jle
cmp
sbb
add
xchg
adc
js
and
lds
pop
js
pop
data16
popa
jg
fdivr
dec
sbb
out
stos
sub
jg
fsubr
repnz
ret
(bad)
mov
dec
icebp
out
lods
pop
lea
dec
pop
not
lea
add
xor
addr16
out
mov
push
or
xor
loopne
push
lods
repz
je
pop
pop
sbb
scas
mov
iret
outs
cmps
jo
xor
mov
mov
bound
xchg
push
pop
pop
xor
dec
cmp
mov
mov
jp
in
mov
cmp
shr
cwde
jns
(bad)
outs
or
pop
mov
cmps
pop
cli
inc
jg
adc
xchg
(bad)
out
leave
sub
pop
cmp
pop
add
xchg
mov
jne
in
inc
pop
lahf
mov
jmp
aam
push
jbe
dec
cdq
jle
pop
(bad)
pop
or
xor
mov
rol
(bad)
retf
in
ret
push
pop
int
inc
fisttp
lods
dec
jge
ja
test
inc
out
push
pusha
fadd
sbb
cs
mov
push
pop
dec
(bad)
dec
fucomi
jne
(bad)
mov
pop
dec
imul
inc
js
(bad)
dec
xchg
mov
jmp
das
push
prefetch
push
call
pop
movs
cs
push
mov
sti
jmp
push
mov
jbe
retf
retf
dec
mov
push
sbb
sbb
imul
das
in
out
inc
mov
sbb
retf
and
jle
fcomi
pop
add
(bad)
cmp
pop
pop
js
ret
xchg
outs
mov
in
js
std
jb
loopne
out
and
mov
je
movs
push
dec
scas
shr
ja
sbb
out
movs
push
sbb
fwait
pop
sub
xor
mov
push
or
or
call
pop
fild
add
cmp
arpl
push
mov
sti
mov
ret
mov
xor
dec
bound
dec
xlat
imul
icebp
mov
lahf
xchg
nop
lock
mov
ss
iret
in
stos
shl
mov
jmp
fs
ja
pop
(bad)
mov
iret
xor
pop
sbb
push
in
or
jne
pop
and
aas
sub
popf
retf
adc
test
(bad)
sub
loopne
movs
cld
adc
cmc
scas
jl
fwait
(bad)
cmp
pop
div
pop
mov
(bad)
cmp
movs
push
retf
aad
mov
or
jp
mov
(bad)
dec
repnz
fsubr
sbb
sbb
js
cmp
in
adc
mov
inc
add
lahf
std
or
push
adc
push
movs
pop
call
sahf
jp
push
cs
js
sub
pop
pop
mov
shr
inc
pop
adc
inc
inc
jle
jl
repz
enter
or
or
sub
push
ret
sub
jge
add
sti
jge
dec
in
shl
dec
stos
pop
dec
fcom
jae
jge
push
mov
je
push
cmps
fbstp
mov
dec
cwde
fwait
cld
movs
div
popf
or
call
loopne
adc
sub
(bad)
leave
xor
xor
imul
mov
sub
popf
ja
fidivr
add
lahf
icebp
inc
stos
and
int3
out
(bad)
sub
push
jle
mov
arpl
leave
in
in
(bad)
push
retf
or
pop
push
mov
jo
(bad)
or
fisubr
cdq
fnstsw
push
sbb
sub
jecxz
mov
pop
add
pop
adc
and
xchg
sar
jl
aaa
jo
pop
das
addr16
loope
add
mov
jmp
xchg
or
lahf
jge
mov
loop
pop
in
adc
(bad)
and
icebp
test
mov
lea
mov
cli
test
mov
test
ja
(bad)
mov
jo
xchg
xor
xor
sar
mov
adc
call
ret
bound
pop
or
imul
test
aam
jmp
xchg
cmps
pop
jno
xor
xor
push
pop
js
les
mov
xor
and
mov
ret
add
add
mov
sbb
push
mov
mov
js
test
jg
outs
push
nop
ins
imul
sbb
push
mov
cli
or
clc
mov
xchg
lock
mov
sbb
jb
sub
adc
inc
push
test
mov
out
sub
adc
pop
mov
aaa
dec
out
add
in
rol
mov
inc
jmp
or
or
out
cs
fnsave
fnstenv
cmp
dec
add
dec
sbb
adc
jnp
xchg
and
sub
imul
cmp
mov
pop
sub
repnz
repz
enter
push
add
xor
jns
test
arpl
shr
repz
xor
sbb
in
sub
outs
out
ror
icebp
fmulp
dec
arpl
xchg
cdq
or
hlt
or
sub
push
inc
push
lahf
ds
pop
in
jbe
aaa
lods
mov
call
inc
jg
xchg
or
mov
inc
in
aas
jnp
clc
(bad)
ror
and
pop
xor
jmp
sbb
scas
push
mov
ins
sahf
outs
mov
cmp
xlat
cmp
(bad)
clc
xchg
cmp
or
dec
mov
mov
mov
shl
js
sub
and
frstor
popf
outs
std
push
pop
clts
jp
pop
js
sti
into
add
ja
pop
adc
sub
leave
inc
inc
bound
pop
push
adc
call
pop
in
jbe
dec
jp
aaa
rol
ret
(bad)
add
gs
je
inc
lea
adc
xchg
mov
dec
les
jo
mov
cmp
std
popa
mov
ret
mov
jmp
and
out
sub
xchg
xlat
jno
arpl
fidiv
push
fwait
add
pop
addr16
inc
aaa
xchg
gs
pop
jmp
int
ins
sbb
and
das
popf
loope
rcr
jmp
inc
mov
fmul
jmp
adc
fwait
mov
out
pop
out
fldpi
dec
mov
dec
bound
inc
(bad)
(bad)
repnz
xor
imul
mov
push
loop
fucomip
int
push
(bad)
push
pop
imul
shl
xor
shr
sub
dec
rol
xchg
sar
mov
sub
pop
mov
cmp
call
mov
sub
repz
stos
cli
stos
adc
pop
lock
add
jp
(bad)
mov
cmp
mov
adc
mov
jne
data16
in
(bad)
stos
mov
dec
push
push
in
sbb
idiv
es
jge
adc
daa
aas
outs
mov
ficomp
shl
mov
nop
out
mov
dec
and
sub
xor
sub
scas
out
mov
inc
push
inc
and
cmc
mov
pop
(bad)
and
enter
aam
pushf
lea
cli
cmps
mov
and
rcl
cwde
jge
pop
stc
push
outs
mov
icebp
xchg
xchg
outs
or
ss
xchg
(bad)
push
mov
add
into
or
xabort
out
test
movs
std
dec
imul
inc
cmps
xchg
sbb
loope
mov
xor
jge
ficomp
add
je
scas
or
jo
add
fldcw
pushf
push
pop
aas
sub
dec
xchg
je
xchg
fcmovne
bound
in
inc
inc
cmps
push
xchg
mov
mov
jns
sahf
cmp
mov
ss
push
out
jmp
pop
ins
pop
pushf
cwde
mov
sub
arpl
cmps
hlt
movs
popa
and
dec
pop
and
adc
add
(bad)
and
pop
xor
xor
inc
xor
push
push
pop
das
sub
cmp
cmps
inc
(bad)
mov
shl
mov
fsubr
cmp
fidiv
cmp
xchg
pop
fmul
push
scas
jbe
sahf
dec
hlt
scas
jbe
outs
arpl
dec
adc
jecxz
adc
fnstenv
imul
pop
mov
jp
pop
jge
mov
dec
dec
dec
adc
jne
fimul
adc
adc
test
in
or
retf
adc
lds
retf
push
inc
push
cmp
fisubr
mov
sub
push
pop
repz
fmul
(bad)
mov
xchg
stc
sbb
fistp
pop
pop
or
mov
mov
or
test
jo
pushf
out
jmp
sbb
xor
jae
int3
mov
jnp
pop
and
test
push
retf
jno
sub
push
mov
pop
or
cmp
xchg
mov
arpl
and
and
xrelease
in
lock
dec
mov
inc
sbb
adc
or
jbe
test
mov
not
or
bound
mov
push
hlt
fcomp
mov
mov
test
jns
mov
cdq
mov
pusha
idiv
sbb
add
popf
inc
mov
lods
push
icebp
cmc
and
add
fs
sub
cli
pop
scas
lods
ins
fs
ins
sbb
mov
and
add
ja
and
jno
pop
clc
ret
push
mov
pop
and
or
adc
cld
fsubr
popa
out
add
stos
gs
call
je
lea
adc
sti
pop
xchg
imul
(bad)
jl
ret
rep
das
xchg
mov
outs
jbe
popf
repnz
scas
xor
or
or
and
mov
bound
gs
and
fcmovnbe
jne
cwde
inc
fistp
push
and
cli
dec
push
jo
pop
xchg
gs
iret
push
pop
std
push
retf
out
fs
enter
jnp
dec
mul
jl
jl
jge
xlat
js
cs
xor
cli
mov
inc
cs
mov
sub
inc
dec
aas
cmp
mov
fsubr
sub
sbb
and
jb
jno
ret
add
push
cvtps2pi
std
retf
addr16
or
adc
es
or
lods
in
cmp
sbb
loop
fnstsw
add
nop
loop
fst
jmp
in
pop
and
std
sub
retf
retf
(bad)
mov
scas
pop
adc
sbb
mov
mov
xchg
mov
lock
mov
pop
or
ror
mov
mov
shl
gs
mov
outs
bswap
ins
add
inc
lods
popa
stos
mov
mov
jge
gs
xor
sahf
xor
lods
rol
lds
pop
sbb
outs
or
aad
fadd
dec
mov
push
cmp
in
mov
sub
mov
lods
add
push
test
les
cmps
cmps
arpl
push
xchg
xor
push
gs
dec
call
mov
loop
pop
loop
mov
shl
cmps
mov
mov
pusha
shl
or
hlt
rol
loopne
bndstx
mov
sub
daa
out
cmp
push
cmp
mov
repnz
xchg
arpl
jae
aam
xor
mov
int
xchg
arpl
stos
and
adc
clc
aam
sbb
and
adc
push
xchg
mov
and
bound
inc
mov
(bad)
inc
mov
jae
sub
stos
push
aaa
mov
int
and
imul
mov
sar
fst
lods
mov
push
jae
mov
xchg
adc
movs
inc
xchg
arpl
repz
nop
int
xchg
arpl
jae
aam
add
dec
loope
aas
div
xchg
aaa
mov
test
mov
cmp
jne
cmp
(bad)
xor
icebp
add
lock
xchg
in
repnz
adc
sbb
pop
cmp
pop
sub
jnp
fst
pop
sbb
pop
jmp
cmp
jmp
dec
jns
or
push
mov
and
mov
push
sbb
call
sub
jnp
mov
mov
test
sahf
nop
pop
jnp
(bad)
pop
je
and
nop
add
jae
hlt
sub
mov
mov
jae
dec
mov
add
sbb
mov
ret
xor
popf
mov
adc
xchg
xlat
in
mov
xchg
jo
mov
pop
pop
aad
mov
xor
sti
and
add
imul
dec
push
popf
ret
ret
push
xchg
adc
mov
inc
leave
cmc
dec
push
sbb
out
mov
test
sbb
push
test
fwait
sbb
popf
jge
retf
clc
lock
fnstcw
cmp
out
dec
shr
cmp
dec
je
or
retf
push
mov
fistp
cdq
mov
push
in
push
and
pop
imul
imul
xchg
add
pushaw
xchg
icebp
dec
fcomp
and
cli
enter
cmp
fiadd
std
sbb
and
addr16
test
rcl
scas
(bad)
aas
stos
push
call
mov
sbb
push
fwait
test
xlat
or
sbb
inc
aaa
ds
das
pop
sbb
leave
sahf
(bad)
fldenv
jl
push
out
jl
inc
dec
sbb
imul
push
icebp
fsub
pusha
cmp
aas
out
loope
js
adc
adc
test
fisttp
pop
mov
sub
pop
inc
push
xchg
or
lods
jo
je
rcr
mov
outs
jno
addr16
fcom
ins
xor
cli
out
push
pop
ret
mov
daa
jp
xchg
jg
mov
jmp
sub
and
dec
and
stc
jmp
xchg
sti
test
cwde
dec
cli
xchg
mov
dec
pop
int
and
jbe
mov
int3
dec
cmp
imul
dec
movs
imul
rcr
(bad)
sbb
pop
dec
mov
mov
mov
addr16
push
xchg
lahf
mov
pop
fidiv
imul
dec
psllw
add
out
out
cmp
or
cmp
dec
jne
mov
xchg
hlt
add
stos
jmp
inc
fst
cmp
mov
sub
inc
jg
repnz
aas
mov
add
div
inc
mov
mov
out
cmp
test
mov
sti
(bad)
pusha
retf
daa
sbb
fimul
sar
imul
mov
test
gs
ret
mov
push
jmp
mov
and
inc
or
imul
movs
cmp
mov
sub
test
loop
inc
pop
mov
and
push
mov
ds
or
movs
mov
mov
jmp
or
jae
cmps
cmp
add
jmp
stc
mov
pop
dec
xor
sub
(bad)
call
adc
clc
and
movs
pop
adc
icebp
xchg
pop
lds
data16
pop
add
or
shl
xchg
outs
test
add
jle
ret
sbb
(bad)
jl
aaa
retf
out
xor
pop
push
mov
and
mov
push
push
outs
and
aam
mov
test
jecxz
mov
rcl
(bad)
fcmovbe
bound
addr16
sbb
jecxz
cmp
pop
mov
mov
outs
imul
repnz
or
jp
lahf
xor
mov
dec
jae
push
sub
(bad)
setl
pop
lock
xchg
and
or
jge
and
cmps
ja
ins
cmps
repnz
pop
add
in
loop
adc
adc
loop
inc
mov
and
cdq
jns
repnz
adc
icebp
stc
div
and
sub
retf
movd
fwait
mov
hlt
cmp
pop
aaa
mov
out
mov
dec
dec
cwde
jmp
lea
jns
popa
mov
ins
jb
ins
cli
nop
call
inc
in
add
and
ds
rol
xchg
sbb
jmp
ret
pop
stos
movs
jp
test
test
clc
bound
ja
int
dec
fstp
rcr
jmp
mov
movs
call
push
push
or
dec
push
mov
fist
cmc
daa
out
inc
jns
dec
daa
fnsave
push
mov
add
jb
loop
fiadd
adc
lock
clc
sbb
inc
add
sub
(bad)
cs
mov
adc
ret
retf
push
xchg
loope
add
mov
(bad)
call
rcr
adc
stos
in
daa
dec
fimul
or
mov
mov
or
sub
jmp
call
sbb
and
jno
fs
(bad)
and
leave
push
cld
and
mov
in
jb
popf
sub
inc
stos
pop
lock
iret
cwde
fs
mov
jns
mov
lds
mov
cmp
mov
cmp
mov
test
div
jp
mov
cmp
xor
std
mov
out
cmp
test
mov
pop
xlat
mov
(bad)
stos
in
adc
rol
dec
mul
push
cmc
push
(bad)
dec
into
xchg
out
and
(bad)
jg
out
inc
xor
xor
mov
xor
xchg
repz
xor
mov
mov
fsub
aas
test
loope
pop
mov
fimul
repnz
add
xchg
(bad)
xchg
sub
mov
test
pop
jecxz
rcr
xchg
fdivr
jae
adc
and
mov
jo
adc
sub
xchg
fadd
out
cs
dec
push
and
popf
in
cwde
jl
adc
sub
lock
aad
stos
(bad)
call
jmp
aas
xchg
push
xchg
jle
sbb
push
cld
aaa
stos
scas
clc
cs
mov
mov
js
repnz
outs
push
mov
les
mov
je
pop
xchg
scas
or
xchg
and
stos
mov
aas
push
fisubr
mov
or
adc
mov
lea
push
mov
dec
rol
mov
push
cmps
or
cmc
repz
xchg
pop
push
shr
pop
mov
sti
arpl
mov
mov
popa
push
cmp
jg
jnp
scas
jg
sub
add
jge
mov
mov
xchg
js
in
es
sbb
stos
push
and
mov
inc
push
jae
sbb
or
movs
sti
cmc
dec
xchg
fdiv
mov
cmps
mov
or
pop
adc
push
jecxz
push
pop
imul
and
pop
fstp
dec
xor
xchg
mul
xchg
not
xor
mov
jo
js
push
sbb
nop
rol
nop
sbb
jb
pop
popf
jmp
fadd
push
xor
lds
jp
push
ja
mov
pop
test
retf
mov
add
mov
jnp
clc
loope
ret
xchg
fbstp
xchg
or
jns
pop
jle
xchg
and
mov
cmp
pop
imul
repz
fwait
lds
mov
adc
mov
call
retfw
js
jno
leave
dec
leave
xchg
pop
pop
aad
add
fiadd
xchg
jno
xlat
xlat
jbe
cli
popf
inc
cmp
cmp
push
jmp
jae
xchg
clc
dec
and
aam
pop
jp
add
(bad)
clc
fst
ins
cmp
out
pop
cmp
sbb
xchg
mov
cli
or
sbb
leave
jmp
mov
loope
sti
ror
in
jmp
ss
sti
idiv
fisttp
dec
pusha
ds
jmp
mov
mov
pushf
sbb
xchg
mov
push
xchg
fwait
ds
xchg
hlt
nop
ror
push
mov
retf
bound
cli
adc
sbb
xor
xor
cs
lea
and
leave
aas
xor
mov
mov
sahf
out
jne
(bad)
mov
pop
imul
sbb
mov
jp
cli
add
mov
std
test
dec
nop
lds
adc
sti
cmp
and
jnp
cmps
mov
leave
sub
in
xchg
and
sub
nop
sahf
repnz
ret
data16
sti
jmp
mov
jecxz
adc
mov
push
jp
xchg
sbb
inc
repnz
jmp
(bad)
int
pop
movs
stos
popa
lahf
or
sub
mov
fdivr
out
push
and
xor
aas
addr16
sub
repnz
jb
jae
aam
cmp
iret
sbb
fist
add
xor
cmp
outs
jb
sbb
jg
push
xlat
xor
dec
call
nop
jmp
call
imul
ins
add
loope
(bad)
mul
aaa
push
test
mov
cs
pop
test
fwait
push
xchg
popf
cmp
jge
xchg
inc
hlt
xlat
sti
in
leave
pop
(bad)
sub
loopne
rep
inc
mov
mov
shl
mov
cmps
push
mov
fst
add
fmul
fidivr
mov
outs
cmp
aaa
inc
pop
repnz
js
jle
mov
xchg
clc
es
repnz
ret
in
hlt
add
dec
xchg
mov
loope
sahf
(bad)
pop
js
xchg
pop
cli
cmps
cli
mov
idiv
pop
xchg
loope
pop
jl
out
jp
cmp
mov
mov
scas
fisubr
out
sub
clc
stos
adc
hlt
cmp
inc
sub
jno
fstp
test
and
shl
je
mov
daa
add
sar
int3
in
fs
jno
fdivrp
cs
scas
imul
and
jl
mov
xor
mov
aas
out
int
cld
jg
ja
test
sub
ficomp
pop
leave
not
dec
push
test
repz
mul
inc
xchg
xchg
xor
stos
sub
xchg
push
sub
jmp
cli
mov
aad
push
push
sti
into
lea
mov
add
pop
enter
push
jmp
pop
push
cdq
mov
add
or
push
mov
push
and
mov
outs
loop
enter
pusha
cmps
cmps
sub
inc
out
pop
ret
test
cmp
int
sbb
xor
cmc
xor
idiv
stos
sbb
outs
stos
and
movs
mov
add
out
mov
call
in
cmps
clc
mov
pop
das
hlt
pop
scas
mov
dec
test
xchg
inc
dec
shl
out
jmp
inc
mov
out
push
jnp
lahf
mov
sar
aam
outs
arpl
fnstcw
pop
out
(bad)
arpl
inc
ror
add
pushf
shl
cs
sub
sbb
xchg
movs
shr
push
push
gs
dec
fiadd
nop
hlt
jnp
stos
stc
mov
aam
in
xchg
leave
mov
push
leave
(bad)
std
cmp
test
adc
popa
cmp
je
aas
fsubrp
ss
rol
pushf
fwait
push
fwait
add
daa
mov
pop
fs
shr
or
jb
retf
arpl
clc
xor
icebp
sbb
pop
adc
push
in
dec
jne
repz
outs
mov
das
test
call
js
jp
jo
in
add
movs
push
shl
or
mov
imul
les
aaa
xchg
sbb
mov
jb
add
xor
das
icebp
shl
jle
lds
ds
ret
inc
mov
daa
add
sbb
and
fcomp
mov
in
cmc
mov
popa
xchg
mov
inc
not
add
mov
xor
cli
enter
and
fdiv
mov
cmp
ss
retf
(bad)
rcr
call
loope
ret
add
push
pop
mov
fadd
cwde
aam
sbb
movs
xor
cs
jbe
out
inc
jne
dec
cmc
popa
inc
sbb
loop
dec
xchg
inc
xchg
hlt
mov
inc
ss
mov
jmp
jb
cdq
rol
movs
mov
jmp
add
lahf
jne
jmp
pusha
mov
shr
xor
mov
and
jle
dec
ret
dec
sbb
sub
pop
sahf
cs
xor
cmps
inc
xchg
loopne
jnp
nop
jne
mov
xchg
in
jbe
pop
cld
sbb
fidiv
fbstp
pop
fldenv
push
mov
add
pop
scas
idiv
or
shl
popa
loop
cdq
cmp
jnp
push
mov
in
sub
mov
xchg
jbe
mov
cdq
pop
scas
fwait
or
add
xchg
mov
fst
repnz
pop
dec
lods
jp
dec
xchg
lods
and
jmp
sbb
rol
xor
cli
mov
mov
(bad)
xchg
sub
out
or
ret
call
pop
mov
aad
idiv
(bad)
xchg
aad
sar
mov
mov
out
pop
xchg
out
psrad
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
jns
loope
movs
cmp
lock
mov
mov
not
aas
ret
cmp
repnz
mov
cdq
cmp
jmp
mov
cli
test
mov
test
mov
test
mov
lea
mov
popf
daa
cmps
test
mov
(bad)
push
mov
mov
inc
push
stos
push
xor
inc
jmp
cmp
mov
cmp
clc
cmp
rcr
je
xor
pop
dec
sbb
rol
daa
jb
cmp
aas
lods
or
jbe
mov
nop
sub
or
loop
(bad)
pop
jge
dec
retf
cwde
popa
rol
clc
(bad)
pop
pop
out
dec
into
cmp
xchg
mov
shl
addr16
pop
enter
out
test
push
ins
lahf
sti
inc
adc
and
out
jns
out
push
lods
mov
mov
jne
dec
lods
loopne
movs
out
out
leave
(bad)
or
das
cdq
sub
dec
push
xor
mov
ins
adc
jmp
das
adc
not
stc
push
sti
(bad)
jmp
into
pop
ret
push
xlat
bound
sbb
cld
imul
or
outs
aad
xor
mov
(bad)
pusha
movs
jne
enter
xchg
enter
sbb
add
sbb
add
cmp
nop
jmp
pop
jle
mov
outs
push
adc
jge
out
pop
enter
lahf
jge
cmp
retf
sbb
and
int
xchg
push
xchg
xchg
mov
inc
and
cld
clc
cdq
retf
xlat
fwait
in
jo
cmp
xor
fmul
dec
xor
fbstp
dec
dec
sbb
fcomip
adc
call
fsubp
push
mov
dec
repz
jmp
cli
out
lods
mov
add
js
lahf
pop
xchg
rcr
xchg
inc
mov
jle
pop
push
jae
cdq
mov
loop
sbb
leave
lods
shl
pop
popa
mov
add
icebp
or
gs
inc
push
outs
mov
adc
repnz
scas
outs
ret
pop
sub
in
loopne
and
es
(bad)
sti
scas
xchg
es
int
xchg
cmp
jg
arpl
adc
xor
or
mov
fidiv
dec
lock
push
mov
pusha
push
push
out
xor
call
ds
add
test
or
jnp
cmp
dec
dec
adc
sbb
adc
ds
sbb
int
popa
mov
pop
pop
mov
jnp
loopne
pop
adc
ds
add
scas
xchg
push
mov
or
inc
pop
jmp
adc
jno
xor
mov
rcr
repz
ret
jle
(bad)
in
je
mov
jmp
mov
iret
outs
adc
daa
mov
lock
or
mov
jle
jns
aad
lds
mov
lea
mov
loop
cmp
repnz
aas
cmps
(bad)
cdq
jae
repnz
imul
sar
scas
js
ins
cli
cmp
mov
(bad)
stos
(bad)
mov
ja
jge
cmps
fistp
xor
cld
add
mov
stc
(bad)
mov
xor
mov
stos
inc
in
sbb
call
sbb
push
cwde
or
jns
push
jle
and
sti
mov
std
test
outs
call
cmps
aam
xchg
popa
scas
sub
mov
into
ins
imul
js
inc
cmp
rcr
cs
(bad)
out
scas
push
in
stc
mov
out
je
jnp
aaa
out
inc
stos
out
cmp
pop
addr16
out
ffree
pop
test
jne
cld
jb
mov
cmps
fnstsw
out
cli
js
sub
dec
jmp
mov
pushf
push
dec
xchg
sahf
mov
and
xchg
lds
xchg
(bad)
adc
sbb
pop
mov
push
mov
hlt
(bad)
(bad)
sbb
into
fistp
fidiv
mov
lock
jp
cmps
cmp
movs
leave
test
mov
jns
inc
pop
mov
mov
call
test
arpl
jp
cmc
call
enter
and
push
stos
ret
into
dec
and
je
xor
sub
rcr
sti
dec
add
pop
jns
mov
out
mov
or
push
and
push
fadd
dec
rol
mov
mov
or
cld
mov
and
pop
add
mov
pop
or
ds
mov
scas
and
mov
adc
or
aad
and
ja
std
fcomp
push
popf
add
push
mov
sbb
and
lock
pushf
cmps
xchg
hlt
xor
sti
scas
sub
outs
jmp
movs
ja
sub
mov
jge
stos
cmp
push
jge
test
sar
inc
cmp
add
(bad)
js
repnz
dec
nop
xchg
fwait
jp
or
add
je
inc
cmp
mov
jns
leave
and
xlat
push
pushf
pop
xor
pop
fcmovnu
xchg
xchg
mov
test
loopne
push
popa
dec
movs
retf
mov
int
aas
pop
dec
push
sub
cld
arpl
mov
push
je
or
jp
add
and
and
cmps
sbb
(bad)
fiadd
or
sub
jmp
in
lock
add
mov
sub
dec
int3
inc
xchg
popf
ins
cld
xor
push
outs
xchg
xor
mov
ja
jmp
inc
loopne
dec
mov
xor
fld
dec
xchg
(bad)
xchg
imul
and
fwait
pop
es
sbb
cdq
xlat
ins
dec
dec
or
je
aaa
aaa
mov
fs
cs
xchg
mov
leave
sahf
nop
rol
nop
cli
arpl
scas
fdivr
in
mov
fcmovnb
out
mov
jge
repz
rcl
or
xor
pop
sbb
mov
add
xor
adc
sar
shl
mov
and
out
push
(bad)
loop
(bad)
jge
xchg
in
(bad)
cmp
in
or
add
sar
xor
bnd
push
dec
sub
xchg
daa
or
iret
idiv
mov
mov
xor
pop
outs
shl
dec
(bad)
inc
cmps
sbb
push
sub
push
arpl
test
dec
inc
in
test
(bad)
(bad)
ss
dec
loope
aaa
div
popf
das
mov
out
test
mov
test
mov
add
idiv
xchg
jnp
cmp
mov
add
cmp
jp
cmc
jne
aaa
mov
jns
mov
lahf
mov
leave
inc
shl
sbb
xor
pop
stc
jge
add
inc
sub
push
pushf
jae
movs
repz
mov
pop
xchg
dec
and
or
jge
out
cmps
jne
ret
fwait
dec
and
and
jge
xchg
xchg
dec
loope
sub
mov
mov
in
ins
movs
jo
pop
adc
sbb
stos
test
xor
sbb
loopne
jbe
int
(bad)
dec
fild
jnp
push
das
enter
jle
push
xchg
test
jmp
imul
bound
cmps
enter
mov
lods
popf
mov
rol
xchg
dec
mov
pop
repnz
nop
aaa
sub
mov
test
in
std
fadd
icebp
(bad)
(bad)
mov
cmp
jg
jle
retf
xchg
je
inc
iret
outs
aad
sbb
inc
xchg
cs
aaa
and
daa
out
or
mul
mov
nop
sub
add
fs
or
push
retf
mov
fist
mov
mov
mov
out
je
dec
stos
ja
pop
xor
mov
nop
adc
sub
test
shl
mov
inc
mov
jnp
lods
data16
and
jae
cmp
cmp
pop
push
outs
shr
xor
jae
inc
mov
jae
das
sbb
add
mov
inc
stc
adc
xchg
ret
pop
add
idiv
loop
mov
xor
push
sub
cmp
jmp
jae
and
xor
fcomp
mov
mov
sub
inc
cs
fs
aad
lods
xchg
fwait
add
and
lock
sbb
dec
(bad)
cmp
xchg
fsubr
stos
adc
imul
or
cs
mov
in
mov
xchg
adc
pop
jbe
test
push
stos
fcomp
rol
add
leave
inc
dec
popa
push
cmps
jbe
out
fscale
inc
pop
aaa
jg
inc
jbe
dec
scas
inc
es
sub
(bad)
aad
sbb
cs
jb
rcl
out
call
rdtsc
add
out
test
jnp
push
cwde
aad
retf
lods
or
(bad)
in
dec
arpl
adc
adc
enter
hlt
xchg
rol
popf
xchg
push
push
cmovns
mov
popf
(bad)
aad
cmp
xchg
jecxz
ja
lahf
sub
xchg
fdiv
mov
pop
data16
pop
pop
sbb
popf
dec
fisubr
mov
int3
sbb
into
mov
in
jbe
or
mov
xchg
cmp
or
xor
lea
mov
xchg
sub
repnz
mov
jbe
repz
nop
imul
(bad)
(bad)
xor
sar
cmp
cmp
dec
div
mov
cs
test
imul
leave
mov
ret
cmp
and
int
dec
imul
xchg
adc
enter
adc
icebp
in
mov
dec
inc
and
cmp
sbb
dec
call
ror
loope
sbb
xchg
pop
add
xchg
fbld
mov
lock
fwait
dec
inc
enter
in
cdq
daa
sbb
das
mov
aam
or
clc
dec
push
dec
test
mov
daa
ss
and
sub
(bad)
out
test
out
mov
mov
movs
cld
repnz
das
add
in
push
and
adc
icebp
das
mov
mov
jns
fsubp
fcomp
push
pusha
sahf
mov
cdq
xchg
popa
addr16
and
push
jmp
jl
sbb
or
pop
push
mov
int
push
loope
enter
xchg
sbb
inc
push
push
fwait
push
jmp
out
or
test
mov
sahf
out
cld
and
sbb
inc
push
sub
inc
push
sahf
icebp
dec
ss
sub
mov
sbb
sbb
aam
enter
in
cs
push
inc
mov
stc
jbe
mov
pop
sahf
push
mov
xchg
or
movs
cmps
xchg
jmp
cmp
fst
sbb
les
stos
ret
cmps
jmp
in
ret
sub
fst
sub
jecxz
fiadd
xchg
and
sbb
in
lods
adc
retf
test
push
xchg
or
in
dec
jne
int
push
push
repz
jecxz
pop
mov
addr16
js
in
cmp
enter
mov
pop
test
aam
movs
movs
xlat
jnp
fmulp
bound
loop
push
outs
pop
mov
arpl
sbb
aaa
stos
daa
adc
rol
add
test
sub
int
xchg
inc
aad
in
daa
cmps
lods
ret
cmp
adc
sub
xchg
xchg
in
cli
mov
dec
sub
xchg
and
retf
or
mov
push
inc
lods
sbb
adc
fdivr
jne
(bad)
mov
mov
jns
jge
cmp
sub
inc
ror
push
cli
lods
and
jge
sbb
es
pop
movs
push
(bad)
jle
fs
push
dec
pop
mov
sbb
dec
or
xchg
int3
add
leave
cmp
ins
jnp
dec
sbb
pop
mov
sar
xchg
xlat
icebp
(bad)
mov
jge
rol
inc
out
adc
repz
push
mov
shl
inc
popa
push
call
and
enter
inc
pop
mov
mov
das
pop
hlt
dec
std
test
mov
xor
xchg
sahf
cmc
pop
mov
sub
jl
pusha
shl
sbb
fcomp
aaa
lods
sub
mov
pop
adc
scas
jecxz
inc
dec
fwait
das
out
imul
imul
cdq
(bad)
mov
in
ret
xchg
js
mov
add
push
daa
push
popf
jl
cwde
sbb
mov
jmp
lds
jecxz
jmp
push
imul
mov
mov
mov
les
xchg
inc
loopne
fst
adc
out
nop
popf
xchg
(bad)
xor
test
xlat
or
out
(bad)
xchg
xchg
or
ret
out
inc
int3
cs
into
adc
inc
int3
adc
icebp
call
dec
inc
cmps
mov
dec
fucomip
mov
mov
data16
ror
mov
mov
jo
outs
cmp
aad
mov
in
cs
repnz
icebp
pop
sub
mov
jle
inc
xor
clc
bound
jae
(bad)
mov
mov
fs
cld
push
outs
mov
fmul
add
pop
and
sub
bound
call
or
pop
mov
adc
out
mov
outs
js
push
pop
mov
mov
mov
loop
inc
or
aas
iret
lods
fbld
or
dec
pop
pop
sub
add
mov
and
ins
rol
ror
and
test
push
cmps
jno
sahf
jl
int
in
mov
cmp
adc
jo
cs
movs
test
mov
and
out
mov
pop
xchg
mov
pop
(bad)
movs
lods
mov
jmp
sti
mov
cdq
ja
add
pop
and
repz
fstp
bswap
in
xor
or
push
pop
add
pop
nop
fwait
call
dec
lahf
inc
mov
adc
fwait
test
movs
xchg
inc
mov
sub
xchg
rcr
hlt
enter
daa
add
jnp
inc
fbld
sub
les
mov
lea
mov
movs
and
jmp
mov
out
aas
(bad)
jp
(bad)
mul
add
test
shr
daa
xor
mov
sti
inc
les
movs
aas
(bad)
popf
(bad)
mov
mov
jbe
imul
push
jmp
ins
idiv
pop
es
pop
cmp
and
leave
pushf
call
adc
stc
std
push
(bad)
sbb
popa
loopne
sub
push
jne
xchg
adc
fild
fnsave
test
(bad)
hlt
mov
cld
icebp
lods
scas
imul
fidivr
out
fldcw
mov
call
dec
xor
dec
dec
in
dec
mov
push
lods
jmp
inc
jbe
jp
and
mov
imul
mov
xor
icebp
les
idiv
dec
sub
dec
pop
in
sbb
jo
xlat
inc
ins
or
fs
cli
cmps
out
shl
in
(bad)
mov
dec
mov
jg
cmp
lahf
hlt
xchg
or
inc
add
pop
fidiv
or
adc
cmps
popw
xchg
jmp
sar
outs
in
push
ret
push
add
jge
mov
xchg
aas
dec
mov
and
cmp
adc
jne
cdq
and
cmps
popf
mov
pushf
fisttp
adc
push
jp
cmp
enter
xor
mov
push
pop
icebp
enter
adc
dec
fld
pop
sbb
pop
(bad)
std
mov
sub
inc
push
add
(bad)
cwd
cmp
jns
out
retf
mov
cmc
rcr
lahf
jno
and
adc
out
sbb
imul
pop
(bad)
ss
lahf
push
lea
mov
jl
pop
mov
jl
sbb
add
push
lock
out
fsubr
or
ins
call
jp
jge
cmp
repz
pop
jnp
std
xchg
jne
jb
fistp
out
lock
sbb
add
jnp
mov
mov
lds
mov
leave
(bad)
out
and
add
inc
xchg
std
xchg
ds
mov
test
pushf
sbb
jg
cwde
xchg
adc
cmp
push
mov
mov
aam
loop
(bad)
mov
push
cmps
aam
add
(bad)
js
pop
push
add
(bad)
mov
fisubr
not
ret
ins
hlt
aad
lods
jge
arpl
pop
(bad)
push
repz
lea
aam
mov
clc
imul
movs
xor
arpl
rcr
fs
mov
push
inc
push
mov
lods
ss
std
ins
jo
xor
push
cmp
cmp
jns
into
push
adc
cmps
or
leave
ins
in
push
retf
lahf
mov
stos
ja
mov
adc
enter
push
cmps
ret
addr16
xchg
aaa
in
mov
lock
sbb
por
ja
loope
push
inc
or
out
mov
ins
(bad)
rcl
add
sbb
retf
dec
aas
jp
inc
int3
inc
std
(bad)
imul
call
retf
xchg
lea
xor
dec
fiadd
cdq
push
push
je
jae
cli
push
xchg
fadd
sbb
dec
push
outs
mov
aam
sti
call
sbb
test
dec
cmps
mov
pop
pop
inc
iret
in
pop
sbb
and
popf
xchg
jmp
or
retf
xor
jp
jp
mov
sub
cmp
fstp
add
sbb
int3
push
jp
icebp
pop
test
in
jo
xchg
mov
test
imul
jmp
out
cmp
cmc
mov
push
mov
push
xchg
inc
enter
add
js
inc
hlt
test
(bad)
in
mov
sbb
jbe
inc
aaa
and
xchg
frstor
inc
call
shl
shl
je
int
aas
xor
out
mov
push
jmp
ficomp
push
mov
dec
adc
test
or
or
lds
pop
adc
push
xchg
xor
and
push
push
ins
test
sub
sub
scas
adc
mov
xor
ret
test
mov
clc
cmps
jmp
data16
in
lahf
mov
rcl
ja
sti
enter
ins
mov
std
dec
inc
push
repz
in
clc
cmp
jmp
sbb
stos
frstor
(bad)
in
sbb
imul
clc
inc
jae
jp
imul
or
iret
and
pop
ret
push
jo
or
ins
(bad)
std
and
jle
or
xchg
mov
lods
mov
push
adc
out
scas
mov
mov
pop
jp
and
test
jnp
loop
pop
mov
mov
and
call
mov
cmp
pop
inc
mov
mov
test
push
fst
pop
data16
inc
sti
mov
add
and
adc
out
pop
jns
add
retf
add
jecxz
in
inc
jge
mov
ja
cmp
aas
clc
jmp
and
icebp
inc
in
push
cmps
dec
jmp
mov
scas
and
xchg
dec
icebp
mov
inc
mov
push
sub
jg
call
pop
xor
test
adc
add
push
scas
mov
sbb
push
loope
in
inc
mov
and
mov
add
adc
dec
cwde
ret
ret
call
xor
xor
mov
sahf
inc
aaa
xchg
fadd
jne
das
ins
mov
adc
pop
dec
sub
cmps
xor
scas
xchg
icebp
in
pushf
mov
ss
mov
imul
push
cli
lods
ja
aad
or
icebp
inc
mov
jmp
fnstcw
popf
mov
pop
fstp
dec
hlt
add
loop
xchg
xchg
iret
inc
popa
push
(bad)
mov
and
icebp
cmp
xchg
fsubrp
mov
push
cmp
push
das
pop
(bad)
ret
add
call
mov
imul
out
test
es
inc
dec
dec
xchg
ret
xchg
cmps
or
stc
push
cli
out
vpmacsdql
clc
mov
aaa
adc
mov
xor
xor
mov
stc
int
jecxz
nop
into
cdq
cdq
ret
mov
mov
stc
push
aas
jmp
dec
ins
pop
mov
loop
test
push
arpl
fisttp
cld
pop
pusha
adc
shr
mov
mov
add
ja
in
outs
retf
xchg
stos
(bad)
out
mov
popa
push
sbb
jmp
pop
lods
fsubr
mov
stos
dec
sbb
and
xchg
push
test
rcr
jle
inc
jmp
push
pop
adc
xor
pusha
xchg
test
pushf
xchg
js
fstp
mov
bound
aaa
(bad)
sub
xchg
addr16
mov
aam
call
and
add
movs
retf
into
lahf
out
or
(bad)
outs
push
lods
add
and
cmps
and
push
stos
shl
and
and
jnp
mov
cmp
lods
mov
sbb
lock
xor
out
out
and
mov
jbe
pop
cmp
add
in
jg
rcl
je
xor
mov
inc
adc
test
je
pop
sub
movs
cmp
mov
mov
cmps
and
push
jbe
jb
mov
xchg
or
std
mov
rcl
test
mov
mov
bound
or
pushf
and
or
add
or
jg
push
pop
sar
fld
push
xor
test
jmp
fisub
add
hlt
xchg
or
adc
es
mov
cmp
test
mov
push
repnz
dec
cwde
mov
xor
dec
bound
xchg
adc
pop
adc
pop
stc
lea
test
icebp
pushf
mov
add
pop
jbe
rcl
push
mov
cmp
push
pop
mov
in
and
popa
xor
test
inc
outs
mov
cwde
push
(bad)
push
or
jo
mov
fisubr
sub
lds
lock
test
bound
lahf
call
mov
lea
push
sti
mov
mov
stos
sbb
inc
retf
inc
pushf
je
pop
(bad)
jnp
out
jl
ret
(bad)
pop
shl
adc
aas
lds
mov
retf
lahf
(bad)
mov
(bad)
pop
inc
div
mov
and
std
cmp
sbb
or
cmp
jo
xchg
je
out
sub
jno
out
xchg
loopne
mov
scas
aaa
cwde
inc
mov
mov
mov
(bad)
mov
sbb
jo
sub
sti
stc
push
add
xchg
clc
dec
cwde
adc
sbb
lods
popa
jle
add
or
sbb
(bad)
push
inc
stc
and
mov
cmps
cmp
xchg
test
fisubr
push
mov
or
jg
pop
in
pop
cmp
rcl
(bad)
dec
mov
cmp
mov
shl
fsub
push
jb
jmp
xor
aaa
mov
add
adc
sub
lock
sub
pop
nop
stc
dec
jg
fdiv
cli
ret
pop
test
jle
push
retf
das
dec
loopne
xchg
lods
xchg
or
stc
loope
fidiv
xchg
pop
xlat
ret
pop
bswap
call
rcl
icebp
adc
cmc
mov
push
loopne
outs
pop
or
xchg
in
test
mov
adc
js
push
stos
mov
xchg
call
jecxz
jecxz
mov
xchg
or
or
sub
cli
jno
inc
out
adc
ins
mov
jl
jmp
int
mov
add
popa
ins
pop
jmp
faddp
fidivr
stos
cmp
mov
sbb
lods
repz
xor
jae
int3
jg
pop
push
aad
dec
imul
and
das
inc
mov
rcl
jne
push
adc
sar
push
sub
call
adc
jne
(bad)
pop
in
int3
aaa
cmp
es
jecxz
jecxz
mov
add
fidiv
addr16
mov
leave
scas
stc
cwde
addr16
sub
sbb
sub
dec
sahf
xchg
nop
std
stos
fild
aaa
fdiv
mov
ds
sbb
fwait
rol
mov
(bad)
cmps
mov
pop
loope
fnstenv
loope
cmp
lds
mov
lea
mov
mov
mov
test
div
(bad)
mov
(bad)
mov
xor
jne
aas
mov
jns
mov
push
repz
mov
popf
cmp
test
pushf
xchg
push
pop
in
cld
add
aad
inc
inc
dec
and
jg
popa
loope
mov
dec
ds
add
jno
cmp
bound
xchg
push
pop
shr
sbb
sub
das
fwait
dec
add
stc
fbstp
mov
mov
mov
sahf
loop
fstp
adc
lods
lods
idiv
jl
int
dec
icebp
iret
ja
mov
adc
mov
(bad)
pop
lahf
inc
jb
ror
jne
(bad)
ja
(bad)
gs
xchg
in
ret
and
call
dec
nop
sub
mov
mov
ror
call
mov
mov
xor
popf
jecxz
mov
adc
jmp
mov
cld
stos
inc
sub
icebp
mov
ret
sub
aaa
fcomp
mov
jnp
cmp
popa
dec
jbe
(bad)
mov
inc
scas
xchg
mov
xchg
cli
test
popa
mov
int3
int3
je
or
push
adc
sbb
sbb
xchg
inc
cmp
movs
popf
sbb
iret
pop
retf
in
stos
stos
jno
jo
sbb
xchg
mov
mov
adc
(bad)
aad
(bad)
sub
rcr
(bad)
adc
cmp
pop
into
and
mov
loopne
scas
jmp
dec
arpl
pop
movs
test
jg
call
xchg
(bad)
jmp
push
cwde
and
jmp
add
mov
(bad)
mov
call
sti
push
jne
push
sub
rcr
call
dec
xchg
fisttp
inc
hlt
push
fucom
mov
test
test
and
shr
or
push
jo
sbb
out
fimul
cmc
push
pop
aam
sbb
mov
mov
mov
nop
xor
mov
jnp
mov
mov
aas
cmp
and
ret
jge
pop
icebp
hlt
xor
cmc
inc
and
fisttp
sbb
enter
imul
xchg
xor
adc
fwait
mov
inc
inc
jmp
and
popa
xchg
jp
mov
mov
lock
ret
retf
popf
sub
ss
push
inc
bound
sbb
cs
scas
cmp
popf
jo
sub
scas
xchg
repz
aaa
or
jo
in
fs
and
sub
xchg
mov
imul
pop
add
cmps
pop
adc
mov
retf
jbe
daa
jbe
mov
xlat
adc
test
jo
bound
xchg
jb
sbb
xchg
loop
lods
daa
mov
(bad)
jmp
mov
arpl
or
fidivr
fucom
cld
push
push
sahf
retf
arpl
call
enter
push
in
mov
sti
sub
sub
loope
fadd
cmc
add
and
push
bnd
dec
pop
push
xor
imul
(bad)
jl
test
xor
or
jp
ds
fwait
xor
ss
sbb
test
pop
mov
jno
mov
cwde
dec
pop
frstor
mov
pop
rsm
inc
add
pop
not
les
out
scas
aam
ror
inc
ret
in
(bad)
imul
imul
bound
call
pop
or
sub
adc
and
sub
jge
test
mov
mov
adc
mov
repz
mov
mov
icebp
cs
and
pusha
xor
mov
xchg
cdq
sar
lahf
pop
xrelease
jnp
cdq
popa
xor
xchg
neg
mov
mov
and
mov
retf
les
(bad)
je
jbe
mov
mov
shl
test
mov
sub
loop
or
push
imul
lea
out
pop
setne
mov
aaa
aad
xchg
xchg
sub
xor
jp
loopne
call
and
mov
add
lods
xor
ret
mov
and
pop
cmp
aam
daa
mov
mov
aaa
lea
xchg
pop
ret
cld
dec
lods
cmp
fs
addr16
faddp
cmp
mov
scas
into
jb
push
inc
xchg
push
xchg
mov
imul
(bad)
out
les
rcr
aam
sub
jp
popa
sbb
lea
imul
jno
cmps
(bad)
mov
(bad)
retf
fwait
jb
icebp
lds
(bad)
fist
test
clc
cld
jg
loopne
or
out
movs
(bad)
sub
push
cmp
std
sbb
shr
fcmovb
sti
xor
div
imul
jecxz
add
stos
pushf
fxch
pop
out
pop
xchg
test
iret
push
in
dec
jge
pop
addr16
fwait
stos
mov
jbe
jle
jl
aaa
cs
cmps
arpl
(bad)
jmp
(bad)
in
xchg
mov
fsub
sub
push
add
test
repnz
sub
and
popa
xor
inc
les
scas
cmp
jmp
daa
pop
adc
mov
and
add
(bad)
out
jbe
fcomp
rcl
xor
loope
sub
push
(bad)
mov
cmps
and
sbb
cli
fild
pop
sbb
add
fidiv
mov
test
or
cs
dec
rcl
ret
(bad)
(bad)
cmps
aad
mov
and
or
jae
mov
or
sub
push
xchg
test
mov
sbb
jbe
mov
(bad)
jmp
lods
rcl
inc
add
ja
jbe
push
mov
lods
retf
into
cmp
dec
adc
loopne
push
test
mov
mov
pop
js
loope
or
loope
jae
push
test
mov
out
ins
jo
sub
cmp
aas
adc
xchg
and
pop
in
mov
repnz
mov
cmps
add
ds
xchg
shl
movs
or
data16
(bad)
iret
mov
pop
inc
pop
push
sti
pushf
dec
in
test
movs
out
pop
push
adc
sbb
jne
xchg
push
and
mov
(bad)
data16
pop
std
jne
shl
or
pop
xchg
add
mov
push
loop
stos
inc
jmp
jne
push
aas
xor
xor
sar
or
jg
inc
bound
jecxz
repnz
mov
push
repz
mov
mov
(bad)
lea
mov
test
mov
mov
cld
sbb
cli
dec
sti
and
int3
sbb
and
test
aam
and
adc
xchg
dec
ja
fisubr
pop
xchg
mov
scas
loope
loop
or
fidiv
jae
stos
mov
xchg
sbb
mov
cmp
fwait
out
push
jge
sub
mov
jp
pop
out
add
lea
ret
pop
aam
sbb
mov
cmp
mov
aaa
mov
out
cmp
repnz
aas
div
(bad)
repz
sti
mov
cmp
xor
push
cmc
jne
aaa
mov
jns
mov
fbld
movs
ja
icebp
jbe
imul
pop
retf
outs
das
ret
mov
jmp
clc
pop
jmp
mov
adc
push
test
xchg
ja
dec
pushf
mov
gs
cmp
pop
mov
and
push
ins
sub
mov
pop
lods
add
sbb
stos
add
adc
rol
pop
cmp
xchg
out
jo
sbb
mov
xor
fs
lea
in
ins
inc
cmps
call
in
push
nop
push
push
xor
inc
inc
or
push
rol
pop
sahf
mov
mov
aad
ret
add
test
dec
cmp
jmp
das
sub
push
stos
ret
cld
mov
and
imul
(bad)
adc
add
and
adc
xchg
and
enter
push
out
bound
pop
(bad)
and
ds
mov
call
scas
mov
jmp
test
fbld
pop
fist
mov
push
dec
sti
rcr
out
cmp
int
jae
cli
loopne
lods
mov
ss
sub
inc
test
sar
jmp
cld
mov
jle
sahf
(bad)
xor
ss
ds
push
cwde
cmp
loopne
xor
push
daa
jmp
data16
xchg
xor
pop
jge
mov
push
cli
cmp
add
xchg
fyl2x
pop
in
mov
stos
hlt
scas
inc
add
call
jno
cmp
sub
sbb
sbb
icebp
int
fmul
loope
outs
xchg
dec
call
sbb
fcmovne
imul
sar
ret
inc
lock
mov
leave
fbstp
ds
in
test
loopne
adc
fcom
jns
and
rcl
mov
push
jl
mov
add
add
(bad)
call
ss
add
jbe
xor
mov
dec
test
fisttp
sbb
es
or
leave
retf
in
cmps
shl
popa
rcr
push
jmp
jl
pop
loop
inc
aas
shl
cmps
pop
jnp
add
neg
cdq
pop
pop
(bad)
sub
cmps
movlps
(bad)
fld
adc
mov
ins
lods
xchg
shl
test
adc
push
fld
not
test
cmp
fdiv
add
mov
jo
fisttp
dec
or
lods
repnz
push
xchg
movs
das
scas
shr
dec
push
outs
les
push
cmp
mov
mov
mov
repnz
jbe
ds
ja
cmp
div
movs
aas
(bad)
add
repnz
fwait
scas
call
stc
or
pop
pop
enter
and
mov
or
ds
and
sbb
adc
cmp
ins
je
aaa
arpl
dec
push
lea
movs
sbb
mov
jmp
aad
dec
out
push
mov
mov
push
(bad)
jo
xchg
push
test
mov
push
xchg
outs
sub
retf
cmps
cs
and
xor
dec
mov
sub
mov
xchg
enter
xchg
nop
xor
wrmsr
or
in
and
mov
lea
sahf
in
push
xchg
fadd
jmp
out
loop
dec
or
js
mov
and
stos
shr
movs
cmp
jmp
prefetch
repz
xor
mov
cdq
inc
popa
push
jge
sbb
pop
es
fist
repnz
frstor
adc
inc
mov
push
xor
popf
xchg
adc
test
mov
ficomp
pop
mov
inc
push
sbb
mov
cmp
outs
or
jo
js
ficomp
cmps
mov
mov
mov
xchg
xchg
leave
jno
mov
call
push
fild
mov
fwait
xchg
xchg
mov
sub
into
sbb
push
xchg
jmp
lahf
dec
jbe
mov
and
mov
xor
inc
inc
in
push
fcomp
pop
and
dec
mov
adc
sub
push
fld
fimul
outs
jae
mov
mov
pop
mov
sbb
xchg
stos
push
loop
pop
shr
mov
xchg
push
mov
ss
adc
inc
dec
movd
mov
pop
and
(bad)
adc
xchg
aas
mov
les
mov
push
add
stos
inc
and
les
adc
jae
out
loopne
and
dec
or
xchg
jg
xchg
xchg
push
out
mov
aad
pop
adc
test
adc
push
retf
cmp
mov
mov
(bad)
movs
xor
jne
fisttp
adc
mov
ret
test
push
push
scas
adc
push
imul
test
mov
adc
jo
sub
and
fimul
retf
xchg
add
adc
test
mov
fdivr
and
push
cmps
push
xor
mov
in
arpl
sbb
cs
push
pop
sbb
mov
into
into
xchg
dec
sub
jnp
std
lea
clc
push
and
cmovs
xchg
jecxz
cmp
inc
and
aad
mov
adc
sbb
add
cmp
mov
sub
pushf
mov
fdivr
in
inc
push
fwait
je
inc
cmp
js
xor
stos
clc
neg
sbb
popf
in
fist
sub
ja
(bad)
xchg
jecxz
xchg
ret
and
mov
popa
int3
mov
retf
mov
in
mov
in
pop
in
fist
and
lods
lock
mov
add
mov
mov
push
push
or
jge
mov
dec
cmps
cwde
fadd
(bad)
les
jmp
pop
xchg
jl
enter
mov
xchg
cmp
leave
xchg
sti
stc
std
mov
and
retf
movntq
xlat
fstp
push
ins
xor
sahf
ja
push
fidiv
sub
push
jge
mov
sub
fs
lea
jmp
jb
jb
stos
push
gs
sti
and
les
mov
aam
pushf
dec
cwde
and
add
(bad)
or
or
jl
(bad)
or
rcr
dec
mov
ret
sub
test
push
arpl
(bad)
jbe
mov
hlt
push
rol
cmp
xor
sbb
xor
sbb
sbb
dec
and
out
inc
clc
enter
cld
aam
mov
dec
and
sbb
and
mov
ss
push
cmp
sbb
jmp
mov
pop
sbb
into
sar
dec
outs
xor
cmp
jp
sub
ror
leave
pop
das
jno
into
add
mov
sub
lds
sbb
add
add
jmp
fwait
dec
xchg
jle
xchg
mov
and
and
add
xchg
push
imul
iret
mov
(bad)
mov
and
nop
push
jp
js
int3
dec
test
lods
cmps
hlt
mov
jbe
cmps
jle
sub
dec
mov
xlat
and
push
add
(bad)
icebp
xchg
lds
cmp
ror
mov
das
cwde
imul
xor
mov
sbb
ds
nop
(bad)
out
hlt
fs
and
dec
cmc
popa
popa
popf
out
inc
dec
inc
aaa
test
stos
mov
enter
fld
push
stc
jge
rol
retf
enter
xlat
sahf
out
in
cdq
frstor
pop
jmp
push
and
mov
xor
cmp
out
cld
pop
mov
jge
cdq
scas
lods
cmp
mov
icebp
adc
out
ror
sbb
dec
jp
push
nop
stos
dec
push
(bad)
push
lods
adc
mov
jae
sahf
inc
inc
mov
stc
iret
adc
icebp
test
mov
sub
mov
repnz
ja
inc
ds
jge
je
push
jno
cmp
mov
retf
aad
fwait
adc
mov
mov
add
dec
mov
adc
mov
xchg
dec
addr16
fmul
scas
and
icebp
out
ss
out
inc
push
pushf
cmps
fstp
adc
jne
shl
aam
cmp
imul
cmc
xchg
jo
test
fadd
add
and
inc
or
mov
pop
and
out
adc
xchg
add
test
inc
mov
popa
les
cmps
pop
stc
lods
xchg
call
imul
call
pop
shr
xchg
jmp
jl
enter
movs
es
les
xor
cmp
pop
fidiv
mov
scas
lea
inc
loope
jmp
stc
repz
imul
sub
loope
dec
icebp
aas
push
jo
icebp
xor
and
cmc
adc
push
aas
ds
mov
outs
sar
lahf
jmp
xchg
mov
test
cmps
pop
ins
stos
jno
lea
sbb
aad
jmp
add
fnstenv
mov
push
pop
out
jp
pop
stc
repnz
repnz
in
add
jns
retf
jbe
mov
ss
mov
out
cwde
call
cmp
mov
ins
test
dec
ror
into
in
ja
cwde
sti
gs
xor
cdq
mov
retf
ror
imul
jne
dec
repnz
fisub
cld
pop
dec
xchg
sbb
pop
call
(bad)
out
in
push
jp
cs
inc
pop
and
je
out
out
lods
(bad)
or
inc
cmps
shr
xchg
gs
mov
xor
int3
inc
sub
pop
push
in
fdivrp
cmp
xor
or
dec
inc
jecxz
es
mov
and
add
gs
mov
xchg
js
mov
dec
jmp
sbb
daa
bnd
mov
adc
test
jg
jp
and
inc
jmp
lods
xchg
push
shr
and
sar
sar
xlat
fldcw
push
repnz
icebp
pushf
movs
fadd
repz
jb
or
fsub
and
adc
(bad)
lock
or
call
cwde
std
sub
int
add
imul
mov
out
jp
xchg
push
int
test
fidiv
pop
and
pusha
jmp
(bad)
xchg
adc
fs
aas
adc
int
mov
jo
mov
call
cmp
mov
or
xor
test
xchg
adc
lahf
add
xchg
addr16
hlt
pop
dec
xor
inc
addr16
inc
jnp
(bad)
(bad)
sub
cld
jnp
or
lods
mov
fsubr
mov
xchg
jno
arpl
jge
jo
movs
xchg
or
(bad)
mov
mov
stos
pushf
xor
cmp
pop
lds
sahf
add
mov
push
cmps
xor
les
xor
add
cmp
jp
jl
pop
jns
mov
popa
sbb
and
push
inc
sti
lock
cwd
sbb
rol
aad
popa
mov
das
xchg
and
xchg
mov
and
add
test
xchg
jecxz
ret
repnz
movs
push
xor
mov
mov
push
(bad)
jo
call
mov
jmp
mov
xchg
pop
xchg
scas
adc
adc
pop
mov
pop
sbb
jno
mov
or
adc
movs
repnz
cmps
iret
cwde
sbb
cdq
jno
cmc
into
inc
jg
xchg
imul
shl
test
jmp
adc
push
dec
out
xor
les
sbb
loopne
call
repnz
push
add
mov
daa
movs
xchg
mov
idiv
(bad)
movs
and
push
neg
call
rol
push
cmp
sub
jmp
loope
in
push
xchg
neg
mov
or
jae
xchg
outs
(bad)
das
jno
and
jp
es
mov
or
and
enter
int
push
mov
repnz
aas
mov
sti
sub
(bad)
sti
add
imul
shl
ror
mov
cmp
jmp
mov
push
jnp
in
(bad)
out
mov
outs
scas
sbb
test
add
test
push
fmul
xchg
and
repz
mov
repz
fstp
hlt
bound
push
int
pop
repnz
mov
jno
cld
std
dec
ins
push
mov
cld
add
mov
xchg
xor
lds
mov
xchg
ja
push
and
out
mov
inc
ret
fisubr
xchg
push
in
mov
stos
mov
fwait
sbb
xchg
cmp
mov
fisub
cmc
xchg
fisubr
mov
loop
push
xor
jg
sbb
jae
movs
in
sbb
les
mov
iret
lods
mov
shl
mov
or
jmp
adc
push
jb
xor
daa
mov
fistp
addr16
jo
pushf
mov
inc
mov
stos
in
pop
inc
xchg
stos
lock
clc
adc
movs
sbb
nop
repnz
mov
xlat
icebp
dec
je
mov
xor
out
lds
pop
pop
retf
xchg
jns
push
test
pop
fcom
shl
fs
mov
fld
and
scas
sub
mov
shl
lods
and
jg
shl
lods
scas
push
xchg
icebp
and
cmp
outs
xor
xor
or
rcl
xchg
cmp
cmp
lods
add
push
mov
int
addr16
mov
bound
cmc
mov
pop
fucomp
inc
in
outs
mov
call
in
mov
xchg
mov
sub
fdivp
mov
cmp
jecxz
xchg
mov
loop
push
xor
and
xchg
xchg
sub
xchg
push
xor
test
neg
stc
push
jb
test
fisubr
sbb
or
and
call
add
push
into
cmp
ja
iret
add
push
outs
inc
and
sbb
pop
loopne
arpl
out
(bad)
ja
or
push
and
call
in
cmp
cmp
in
xchg
pop
jbe
push
sbb
fild
jecxz
outs
ror
out
popa
inc
pop
mov
jmp
mov
xor
xchg
cmps
adc
movs
(bad)
xor
cs
mov
xchg
jns
push
push
test
add
or
iret
push
shl
mov
xor
ss
xlat
out
call
xchg
push
mov
adc
jae
cdq
jns
pop
xchg
out
(bad)
sbb
cmp
push
mov
add
cmp
push
sbb
lds
mov
pop
mov
jl
jg
xor
(bad)
jecxz
sub
mov
xchg
in
push
clc
repnz
push
xlat
jl
rcr
adc
mul
imul
aas
inc
jge
push
adc
push
les
call
push
push
test
mov
adc
inc
fwait
loope
push
popa
jmp
mov
pcmpeqd
call
test
inc
loope
cld
push
les
pop
stc
jae
xlat
icebp
push
mov
imul
ins
adc
mov
push
(bad)
mov
inc
cmp
pop
sub
cmp
mov
jbe
fcom
daa
mov
pop
dec
sbb
jp
fild
lahf
movs
cmp
test
add
push
cmps
or
xchg
sahf
cmp
repnz
sub
loop
sub
or
cmp
mov
test
xchg
xrelease
fdivp
lea
mov
cli
xchg
aaa
mov
loop
sub
fidiv
adc
fidiv
pop
test
jg
stos
shr
mov
aad
shr
xchg
dec
popf
xchg
sub
loop
imul
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
mov
loop
test
mov
lea
repnz
inc
xor
test
mov
cdq
das
mov
xchg
sbb
inc
aas
mov
repnz
mov
test
mov
xchg
and
cli
mov
(bad)
lea
repnz
mov
push
fimul
or
add
aad
cmp
ins
dec
xor
leave
das
(bad)
cli
sbb
sbb
sub
xor
push
movs
jp
stos
(bad)
xchg
dec
sub
push
(bad)
mov
repnz
pop
mov
jle
in
pusha
ins
and
cmps
xor
jmp
sahf
mov
loope
mov
mov
mov
cmp
pop
retf
lods
pop
xor
stc
dec
and
hlt
test
mov
test
repnz
fisub
add
xchg
add
test
popf
adc
fwait
imul
lods
stos
add
(bad)
not
add
stos
out
pusha
in
and
cld
xor
jno
mov
ins
pop
pusha
dec
es
sub
int3
pop
adc
add
cli
leave
aas
scas
jl
add
test
pop
inc
add
rcl
cs
imul
je
mov
cmp
lock
mov
sbb
lods
idiv
jbe
inc
push
ds
fist
bound
(bad)
jns
cmp
into
ss
dec
ds
xchg
shr
cld
add
jo
adc
mov
cmp
lock
cmp
ret
(bad)
cmp
pop
into
add
push
out
ror
mov
lea
cmp
adc
aaa
push
(bad)
fdiv
lock
dec
inc
lods
lds
mov
(bad)
sub
mov
popa
ins
pop
sub
push
cli
pop
int3
cli
xlat
ins
dec
fimul
fistp
into
les
pop
mov
pop
dec
and
hlt
fadd
and
ds
fiadd
xchg
xchg
ins
sti
xchg
in
call
movs
xlat
inc
jmp
mov
fidiv
loope
in
dec
in
and
pop
jmp
cli
(bad)
stos
xchg
xor
xor
inc
(bad)
lea
jge
cli
and
adc
jns
je
push
adc
push
mov
(bad)
and
sub
and
sahf
dec
lods
push
push
or
mov
popa
push
xor
xlat
lods
nop
lea
mov
cmp
ret
mov
push
test
mov
fild
jmp
lahf
cmps
push
xchg
xchg
lods
xor
imul
dec
pop
imul
in
aam
fisttp
loopne
rep
cdq
mov
jmp
popa
and
push
data16
imul
cmp
push
cmc
outs
cmc
test
fistp
xchg
sub
sbb
cmp
push
adc
inc
addr16
jle
push
adc
fcomp
fs
fcom
push
gs
add
dec
(bad)
or
xchg
int
cmp
mov
out
fimul
icebp
xchg
loope
sub
outs
pop
scas
call
cmp
jno
sub
fstp
call
pop
mov
popf
sub
cmp
test
mov
(bad)
pop
lods
mov
or
stos
aaa
xor
aad
call
repnz
mov
mov
call
mov
xchg
cmp
mov
aas
mov
out
test
mov
xchg
cmp
dec
stos
out
leave
mov
jb
or
ss
(bad)
in
bound
das
mov
fnstsw
dec
neg
into
ds
cmp
cmp
cmp
ret
pop
dec
pop
ins
not
inc
pop
call
out
cmp
mov
push
jmp
dec
cmp
loopne
retf
cmp
lods
pop
mov
cmps
mov
push
(bad)
cmc
or
jl
pop
add
xor
add
dec
and
mov
ins
adc
xchg
repnz
test
js
jo
cmp
cmc
push
cmp
xchg
in
cwde
addr16
jg
cmp
cwde
movhps
aam
dec
jecxz
xchg
(bad)
xchg
nop
push
repnz
mov
call
add
xlat
cs
mov
movs
mov
xlat
fst
ror
out
and
repnz
or
xchg
enter
popf
jns
dec
fcom
pusha
push
add
mov
push
das
lods
retf
arpl
sbb
ret
push
gs
xchg
imul
inc
jnp
and
pop
in
xchg
cmp
dec
cmps
sbb
push
imul
sbb
pop
aaa
hlt
pop
pop
or
iret
ds
pop
pop
je
adc
inc
hlt
popf
mov
or
test
add
and
sub
loop
out
cmps
sti
cli
scas
mov
add
call
mov
pop
fnstenv
loope
fidiv
sbb
mov
and
bound
mov
push
dec
sub
fwait
jmp
mov
sbb
push
xor
leave
dec
mov
mov
or
sbb
mov
(bad)
pop
mov
inc
in
aas
sub
sub
cli
sub
inc
aad
cmp
push
rcr
jnp
xlat
mov
xor
cmp
lods
fsubrp
xlat
xchg
ret
test
mov
xchg
aad
add
shr
in
sbb
and
add
push
push
repz
stc
sub
inc
rcr
out
mov
div
mov
sub
add
mov
dec
je
int3
stos
mov
add
test
ja
lahf
ins
or
mov
rol
jmp
pop
mov
test
mov
ss
(bad)
push
mov
mov
mov
fadd
inc
adc
outs
aam
inc
pop
rcr
lods
dec
cwde
jbe
push
inc
or
and
nop
or
jb
push
sbb
enter
stos
cmp
push
push
xchg
iret
inc
jmp
mov
sahf
mov
sbb
sub
(bad)
adc
pop
mov
int3
and
jne
push
push
punpckhwd
out
lods
loop
and
pop
daa
push
popf
(bad)
add
repnz
lods
lock
out
in
aaa
push
push
jnp
or
ret
aas
dec
call
cmps
push
enter
cld
(bad)
or
inc
mov
xchg
div
mov
mov
mov
mov
test
mov
xor
mov
mov
cmp
cmps
xchg
dec
cdq
cmp
dec
neg
leave
in
stos
mov
test
js
jp
add
push
les
jmp
ror
jo
cmp
xchg
popf
nop
pop
sahf
outs
sub
cmps
retf
jmp
add
mov
sub
xchg
push
pop
call
(bad)
and
sbb
scas
dec
ret
mov
or
mov
ret
push
movs
not
push
call
int
pop
mov
push
popf
sar
add
fcomp
sub
xchg
cmp
mov
fbstp
jo
or
push
out
adc
mov
ret
cdq
sub
loopne
inc
mov
add
cld
mov
pop
into
mov
xchg
push
jmp
pop
xchg
dec
fwait
cmc
mov
cmp
js
test
(bad)
out
sbb
sbb
jne
xchg
jb
repz
xor
push
stos
adc
jge
int3
push
or
jb
xor
xchg
sbb
scas
xor
xchg
cmp
and
cmp
pop
xlat
scas
je
outs
fwait
xchg
(bad)
jp
mov
xchg
dec
icebp
pop
xor
ret
bound
fs
iret
push
dec
cmp
cmp
push
rcr
mov
jge
sbb
pushf
loopne
push
stos
hlt
adc
jecxz
push
cmp
call
and
or
loop
shl
pop
inc
loope
sbb
out
lods
inc
retf
mov
inc
std
sbb
mov
(bad)
fcmovbe
outs
cmps
popa
dec
pop
xchg
std
cmps
inc
xchg
mov
adc
js
pop
leave
xchg
mov
ins
or
sahf
fs
lds
cwde
cld
push
test
mov
and
inc
dec
mov
add
(bad)
in
jl
mov
jne
into
jnp
adc
or
add
jmp
xchg
push
push
fidivr
inc
pop
mov
mov
retf
xor
and
mov
dec
retf
iret
push
int3
push
(bad)
mov
push
dec
pop
mov
pop
retf
and
dec
mov
leave
inc
stos
sbb
inc
sub
pushf
pop
faddp
aad
(bad)
(bad)
idiv
xchg
mov
inc
jns
dec
stos
mov
fsubr
cmp
pcmpeqw
in
push
cmps
mov
in
xchg
cmp
mov
fsub
add
popa
mov
xchg
pop
lock
and
fs
inc
add
std
cmp
pop
adc
push
nop
mov
js
add
mov
mov
xchg
aaa
mov
test
cmps
repnz
mov
mov
mov
int
cmps
mov
imul
jg
xor
mov
aas
ds
aaa
and
cmp
jge
arpl
ins
xor
and
jb
mov
xchg
xchg
add
mov
xchg
cmc
cmp
sbb
scas
mov
aas
(bad)
gs
aad
dec
pop
jg
sbb
and
gs
mov
inc
dec
jno
dec
adc
mov
loope
add
iret
inc
or
adc
das
outs
and
or
xor
add
(bad)
adc
rcl
xor
sbb
jg
xchg
and
jmp
mov
dec
mov
mov
in
pop
push
out
inc
add
in
jge
and
mov
xlat
xchg
iret
jb
shr
mov
retf
test
test
ja
and
add
out
fistp
sbb
jae
stos
pop
mov
add
adc
xor
sub
outs
les
inc
mov
outs
add
aam
cmps
jle
sub
cmps
xchg
mov
fstp
or
out
push
xor
sbb
movs
mov
or
pop
cmp
jecxz
sbb
xchg
xor
icebp
sbb
aaa
call
call
punpckhbw
imul
cmp
xchg
mov
jbe
gs
cmp
mov
dec
adc
(bad)
add
outs
pop
out
rcl
ror
das
xchg
fs
mov
sbb
pop
cdq
mov
add
add
sbb
rcl
and
sub
xchg
cdq
xchg
inc
fidivr
sar
sub
sub
pop
inc
pop
sbb
int
ret
enter
mov
test
push
addr16
and
call
sbb
pop
sub
mov
pop
stc
sub
retf
jo
scas
mov
hlt
neg
(bad)
mov
cmc
mov
cld
pop
push
test
jecxz
fwait
arpl
call
or
and
aas
and
movs
not
cmp
repnz
lahf
in
pop
int
pop
push
cli
pop
xchg
sbb
mov
ror
ja
pusha
xor
fld
mov
aad
adc
jbe
add
or
and
mov
dec
stc
mov
pop
lock
cld
mov
push
cwde
xchg
ja
and
out
jb
pusha
lock
loop
int3
minps
cmps
ins
aam
out
xlat
in
sbb
pop
outs
or
push
dec
dec
push
and
retf
cmps
ins
jl
mov
enter
sub
cdq
loopne
sti
cmp
adc
jne
ds
clc
loop
dec
arpl
sub
inc
push
arpl
popf
xchg
add
cmp
rcr
ds
pop
sub
jmp
dec
movs
fisub
cwde
out
call
jp
mov
add
sahf
hlt
cmc
push
jge
and
retf
inc
sbb
inc
lods
loope
ss
into
xchg
add
fmul
loopne
in
sahf
cmc
mov
push
cmp
into
fist
repz
loopne
jge
push
cmps
test
adc
inc
ins
scas
(bad)
sar
xchg
(bad)
retf
mov
xor
pop
mov
and
jl
xchg
repz
das
addr16
and
adc
cmp
mov
sub
iret
pop
shr
data16
not
adc
call
pushf
in
jmp
fnstenv
aas
mov
(bad)
popf
and
repnz
mov
jbe
repz
jp
mov
aas
xor
stos
jp
add
cli
ret
hlt
ss
jno
mov
add
jp
mov
sar
mov
scas
shl
in
(bad)
cmp
inc
ror
iret
scas
scas
jns
xor
sbb
retf
mov
sahf
jmp
lea
dec
scas
cmp
xchg
sbb
sub
lock
pop
fwait
mov
push
lea
fcmovnb
ja
loope
ins
add
inc
adc
xor
and
cmp
daa
mov
xor
shl
xor
mov
(bad)
mov
cmp
test
or
out
or
ins
scas
test
xchg
movs
mov
push
sub
fadd
mov
es
fld
rcl
ins
mov
dec
mov
jae
push
stos
sbb
and
jnp
loope
ss
enter
(bad)
adc
in
fist
push
or
aam
(bad)
pop
je
dec
pop
lock
dec
daa
add
jns
sub
(bad)
push
out
lods
pushf
(bad)
jmp
cmps
je
sahf
addr16
imul
popa
pop
sar
sar
ja
and
sbb
mov
jnp
xchg
adc
les
or
mov
push
shr
bound
imul
sbb
jecxz
imul
test
mov
or
push
jnp
mov
sub
xor
mov
mov
mov
mov
xor
sub
je
lock
xor
xchg
in
inc
imul
sbb
mov
mov
repnz
nop
pop
jmp
mov
mov
jmp
lods
retf
adc
ret
adc
js
push
sti
mov
or
test
cmp
js
fcomp
adc
(bad)
push
clc
jbe
movs
mov
xchg
vandps
sbb
icebp
retf
pop
repnz
dec
daa
or
mov
icebp
hlt
and
and
and
push
call
push
xlat
enter
mov
cmp
jl
mov
lahf
sub
scas
int3
add
xchg
mov
in
arpl
mov
jecxz
xchg
xchg
fist
mov
aad
jge
mov
mov
push
mov
mov
push
dec
daa
mov
(bad)
push
gs
retf
or
cli
jnp
sbb
aaa
inc
push
in
or
push
(bad)
mov
call
cwde
fiadd
fwait
shl
or
sub
test
mov
pop
test
fsubp
bound
popa
(bad)
cli
jle
jp
push
je
mov
pop
jnp
bound
imul
mov
jne
test
and
and
rol
push
push
xchg
mov
or
xchg
repz
popa
test
jmp
adc
jmp
xchg
fcomi
sub
push
les
dec
sar
inc
shl
ds
popf
iret
and
push
test
(bad)
add
adc
fdiv
push
fdivr
mov
cmp
adc
movs
cmp
inc
mov
jns
mov
sub
das
xchg
jne
popf
stc
pusha
out
jecxz
aas
or
mov
imul
jnp
mov
mov
sub
fstp
call
inc
sbb
fnstsw
jecxz
xchg
aad
icebp
sbb
je
xor
(bad)
mov
stos
push
cmp
das
(bad)
push
mul
bound
jo
fs
mov
js
pop
mov
mov
aam
sbb
push
fstp
mov
jmp
lods
movs
mov
or
pop
sub
loop
sub
cwde
dec
and
jge
aas
stos
inc
dec
aaa
popa
out
fisubr
jno
pop
in
and
mov
sar
ja
not
xor
mov
cmps
aad
fadd
mov
test
pop
or
jno
push
int
stos
adc
xchg
mov
shl
dec
mov
lock
xchg
adc
gs
add
mov
mov
(bad)
jmp
xchg
jge
arpl
call
fwait
in
adc
in
jmp
test
push
mul
xchg
pushf
sbb
mov
cmp
or
popf
(bad)
jmp
lods
shl
pop
call
xor
jmp
sub
pop
sbb
push
shl
in
mov
xor
(bad)
mov
repz
inc
repnz
jl
push
pop
arpl
movq
pop
and
ficomp
inc
bound
aam
das
test
jecxz
xchg
in
bound
add
pop
pop
jnp
mov
lds
mov
test
mov
mov
cmps
loop
cmp
repnz
mov
les
je
cmp
mov
sbb
test
mov
adc
adc
push
(bad)
xlat
pop
xchg
dec
jb
push
and
pop
dec
jp
cs
jo
je
call
or
cmps
cmp
repz
test
mov
cmp
rcl
std
inc
icebp
mov
xchg
lods
mov
inc
cmp
cmp
inc
sbb
aam
fdivr
or
icebp
mov
aam
popf
in
pop
push
rcl
not
mov
das
jge
hlt
mov
daa
gs
jecxz
std
(bad)
or
xor
xor
push
adc
mov
test
pushf
lods
pop
(bad)
xor
mov
mov
cmps
cmp
dec
xor
push
mov
xor
call
mov
pop
mov
inc
jge
in
pop
jle
xchg
push
scas
add
lahf
push
fsubr
sti
data16
call
jb
mov
fwait
(bad)
jo
add
sahf
mov
pop
wbinvd
fmulp
mov
popf
and
sar
adc
pop
xlat
cmps
jecxz
sbb
jae
retf
mov
push
sub
pop
add
jmp
test
outs
jbe
jle
stc
adc
test
or
(bad)
push
and
fbstp
inc
dec
test
mov
test
xor
sub
cmp
push
retf
sub
mov
daa
popf
add
xchg
add
and
int
ret
std
push
cld
pop
push
jle
push
sar
retf
inc
jle
sub
shr
jmp
pop
(bad)
sbb
in
adc
sahf
push
test
mov
dec
cdq
sbb
dec
cmc
mov
je
retf
jbe
sbb
jmp
xor
ret
ror
mov
or
sbb
jle
fcomp
xchg
mov
outs
cmps
shr
cli
sub
lock
sub
adc
mov
nop
lock
mov
es
mov
aaa
mul
xlat
lahf
jl
js
jecxz
test
sub
push
out
lea
jne
cmps
ins
cld
fnsave
inc
popa
les
test
jno
icebp
pusha
xchg
sub
mov
ja
mov
mov
pusha
xchg
or
xchg
(bad)
scas
retf
mov
fistp
inc
test
ds
sbb
(bad)
jns
push
add
movs
sbb
rep
sbb
push
sub
repz
and
xor
jbe
das
mov
fs
unpcklps
mov
cmc
loop
xor
imul
sbb
loope
shl
shr
adc
or
nop
cli
jge
jle
repnz
sub
sub
or
iret
jge
into
push
mov
mov
gs
mov
add
out
mov
popa
movs
cmp
sti
idiv
stos
outs
dec
jl
pop
(bad)
retf
out
sub
movs
push
repz
xchg
fist
xor
xlat
mov
or
push
pop
xor
stos
push
popf
(bad)
pop
je
ret
fsin
pop
arpl
icebp
mov
add
xor
inc
imul
ret
cmp
idiv
not
popa
pushw
jmp
xchg
repnz
xlat
jmp
shl
xor
and
pop
inc
cmp
imul
into
out
mov
push
dec
push
sub
pop
pop
cmp
mov
retf
xchg
sub
mov
push
(bad)
mov
cmc
jle
push
dec
js
mov
or
dec
test
pop
cli
jp
sub
push
mov
in
jno
cld
out
inc
dec
cmps
sub
or
jge
pusha
mov
jle
fst
push
pop
xor
push
outs
cmp
sbb
push
fwait
fwait
lds
test
mov
(bad)
in
mov
or
cmc
stos
pop
pop
in
movs
or
mov
cmp
sub
cwde
repz
cld
ins
ins
imul
jp
cmp
fucomi
cmp
repnz
cmp
sbb
sub
lods
cmp
dec
xchg
jo
add
fwait
push
call
mov
xchg
mov
iret
cli
stc
jne
or
mov
mov
adc
push
aam
push
xor
push
clc
and
adc
rcl
xchg
sbb
scas
mov
(bad)
cmp
xchg
loope
aas
div
lea
mov
test
mov
test
mov
test
test
aaa
sar
or
aas
xchg
test
mov
imul
add
sahf
mov
stos
jmp
leave
hlt
retf
pop
mov
inc
bound
push
fldcw
jb
add
and
or
add
fimul
sbb
add
dec
imul
pop
or
repnz
mov
fsubr
stc
push
(bad)
scas
jge
addr16
std
xchg
outs
sub
fdivr
push
xor
fnstsw
test
inc
mov
xor
sahf
sbb
xchg
sub
sahf
and
cld
lods
cmp
scas
setp
and
icebp
and
jo
ret
ins
mov
push
add
lea
in
add
cwde
pop
pop
rol
sbb
pop
movs
mov
xchg
pusha
aas
sbb
or
icebp
and
mov
add
jg
(bad)
mov
inc
in
or
es
sub
mov
dec
repnz
push
lahf
arpl
sub
push
call
in
movs
jl
test
mov
mov
pop
aaa
mov
pop
add
xor
mov
addr16
mov
push
xchg
ds
xor
pop
or
push
in
fimul
xchg
mov
cmps
(bad)
loop
dec
and
add
dec
fcom
ins
inc
xor
sub
nop
jle
push
sahf
out
adc
(bad)
enter
cmps
xchg
mov
popa
or
arpl
daa
xchg
ret
add
push
in
outs
sbb
cmp
jo
cmp
mov
jbe
mov
es
mov
cmps
and
or
icebp
cmp
mov
cmp
mov
sar
mov
cmp
xor
lea
xchg
test
mov
mov
(bad)
in
stc
sub
fdivrp
jbe
add
out
scas
sbb
inc
fstp
mov
icebp
mov
mov
or
mov
into
inc
movs
add
cmp
sub
sar
dec
cmp
jno
add
dec
pop
inc
retf
movs
adc
sub
cld
mov
sbb
jl
lock
ins
sbb
(bad)
outs
pushf
test
push
mov
repnz
sti
rol
mov
into
pushf
lahf
mov
mov
mov
retf
pop
sub
leave
push
push
mov
mov
xchg
dec
fidiv
adc
sub
xchg
call
ins
or
cmp
xlat
dec
add
hlt
push
(bad)
pushf
lea
repz
ret
(bad)
xchg
xor
push
inc
dec
sbb
mov
call
inc
fbstp
cld
dec
sbb
sub
dec
into
mov
jmp
adc
add
push
and
adc
iret
inc
cmp
xlat
or
dec
leave
enter
cwde
xor
stos
sub
shr
push
push
imul
enter
in
pop
das
(bad)
mov
cmps
data16
mov
push
fmul
loope
sub
xchg
mov
pop
sub
leave
push
cwde
push
rcr
and
pop
xor
or
sar
mov
aam
mov
mov
aaa
jbe
jb
sub
sbb
cmp
sub
mov
jb
cwde
cdq
enter
xchg
push
mov
ds
hlt
rcl
dec
js
jl
or
or
sbb
(bad)
cli
mov
rcl
cli
les
mov
add
cmp
por
cmc
and
xor
and
jb
std
or
sub
cmp
retf
mov
out
icebp
jbe
lock
sub
sub
dec
inc
scas
push
aaa
mov
cmc
jns
out
das
leave
bound
jno
inc
cs
pop
pop
mov
repz
das
mov
daa
ins
pop
in
adc
cmp
mov
pop
dec
xchg
pushf
pop
cli
and
jne
mov
xchg
repnz
mov
repnz
test
xor
(bad)
sti
xor
xor
cmc
xor
jns
mov
fstp
loope
pop
pop
xchg
add
pushf
stos
dec
push
xor
dec
xor
setp
mov
cmp
nop
mov
push
repnz
mov
xor
rcr
adc
sub
cmps
mov
je
sahf
jb
and
popa
add
(bad)
fs
nop
ret
sub
retf
jp
adc
shl
mov
or
(bad)
jge
call
lea
jne
sbb
sahf
xor
add
and
aad
adc
lea
jge
sbb
sti
dec
mov
das
(bad)
je
(bad)
fcomi
add
in
out
and
mov
ins
xchg
mov
out
and
fucomip
cmp
in
pop
xor
jbe
out
movs
xchg
dec
clc
jo
mov
pop
adc
dec
das
push
inc
xlat
enter
cdq
xchg
jle
xor
fidivr
jb
or
inc
pop
das
adc
out
or
mov
jmp
addr16
imul
(bad)
adc
aaa
inc
fld
cmp
adc
sbb
(bad)
test
inc
hlt
add
mov
cwde
fsub
test
stos
xor
xor
movs
or
mov
pop
mov
cwde
adc
call
jp
mov
mov
cmp
or
or
sub
imul
or
sbb
js
sbb
pop
nop
(bad)
aam
les
jno
(bad)
aaa
xchg
js
lock
pop
add
fst
jb
fcmovne
bswap
cmp
shl
push
nop
pop
outs
in
test
mov
pop
xor
jno
test
jns
inc
and
sahf
dec
xchg
cmc
jmp
mov
inc
xchg
ror
inc
das
cmc
dec
je
mov
inc
lods
int
sbb
xchg
inc
aas
test
add
inc
xor
fadd
xchg
int3
rcr
mul
xchg
aas
outs
outs
pop
je
fwait
push
call
ja
adc
cs
mov
add
mov
mov
and
call
sbb
data16
xchg
sbb
test
xor
push
int3
and
iret
adc
push
mov
jmp
push
sbb
cmps
aas
repz
imul
sub
test
mov
lods
or
loopne
nop
fsub
enter
jns
push
cld
rol
retf
mov
dec
mov
xor
dec
or
sbb
int
push
cdq
inc
dec
ret
fwait
mov
inc
xor
pop
lds
jb
pop
push
hlt
ret
out
lods
sub
aam
out
jae
rep
and
cmps
dec
xchg
push
mov
fsubr
xchg
jl
jmp
out
or
or
add
inc
retf
pop
cs
retf
hlt
xor
sar
push
xchg
pushf
push
inc
sub
int3
pop
push
mov
iret
jle
xchg
sub
xchg
sbb
sub
test
(bad)
out
test
call
sub
cmps
pusha
fst
(bad)
mov
popa
jp
outs
inc
addr16
cmp
mov
es
fld
mov
jp
ficomp
inc
imul
jge
aad
bnd
push
sbb
mov
mov
movs
jb
mov
data16
mov
hlt
clc
fdivr
mov
cmp
add
mov
in
mov
(bad)
add
mov
in
xchg
call
adc
clc
test
test
cmps
sub
imul
imul
imul
arpl
push
dec
loop
dec
pop
leave
lods
aam
cmp
not
xchg
mov
jb
scas
push
shr
movs
cld
xchg
cdq
inc
call
loope
cmp
iret
lods
test
jb
or
mov
hlt
pop
repnz
mov
mov
sbb
cmc
sti
xchg
jnp
jnp
stc
add
push
push
or
push
pop
mov
inc
or
cs
cmp
mov
mov
mov
sbb
add
aad
jnp
pop
stos
inc
mov
mov
test
dec
xor
mov
aad
arpl
push
or
enter
push
cmp
add
and
and
popa
sahf
jle
(bad)
je
and
jmp
mov
dec
push
jno
jle
aad
pop
adc
fild
mov
sbb
in
jmp
xchg
hlt
jmp
inc
mov
lods
and
jecxz
aas
pusha
xor
fsub
imul
test
stos
pop
sub
shr
inc
outs
fsubr
cmp
jmp
dec
jae
aas
and
test
je
jbe
push
jge
mov
mov
cs
push
jno
(bad)
mov
xor
jl
out
xchg
sub
inc
xchg
xchg
les
xor
xchg
retf
ret
int3
dec
mov
inc
cmp
mov
retf
retf
sahf
or
jae
pusha
push
hlt
fist
or
jne
jb
hlt
mov
cld
pop
iret
clc
push
adc
xchg
cdq
fld
test
push
jbe
inc
cmp
fmul
and
into
xor
or
call
enter
add
jbe
sbb
dec
mov
adc
mov
push
sbb
cmp
inc
retf
imul
sub
push
stos
add
fcmove
xchg
fistp
int
repnz
push
stc
jmp
xor
imul
fcomp
(bad)
xor
movs
adc
mov
aam
sbb
cmp
loop
pop
dec
icebp
jp
dec
xchg
lods
and
jmp
sbb
rol
xor
cli
mov
mov
(bad)
xchg
sub
out
or
ret
call
pop
mov
aad
idiv
(bad)
xchg
aad
sar
mov
mov
out
pop
xchg
out
psrad
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
jns
loope
movs
cmp
lock
mov
mov
not
cmp
repnz
mov
test
mov
test
mov
xchg
sbb
cli
in
aas
mov
repnz
mov
test
mov
test
mov
mov
mov
popf
(bad)
mov
icebp
lea
repnz
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
pop
inc
mov
test
repnz
mov
mov
or
jmp
lods
add
fisttp
jnp
outs
loopne
dec
iret
xchg
sahf
je
adc
cmp
sub
in
jne
lea
pop
sqrtps
rcr
add
bound
or
ins
leave
sbb
and
test
add
scas
jnp
mov
mov
lds
sub
es
adc
icebp
(bad)
mov
or
nop
push
mov
push
add
bound
cmps
stos
xchg
ret
ins
leave
imul
or
jmp
addr16
adc
sbb
imul
cmp
xor
and
jp
cmp
push
and
shl
mov
in
push
mov
fadd
daa
sbb
loope
jb
(bad)
aaa
aas
dec
cwde
fwait
cmp
int3
mov
test
inc
inc
ret
add
adc
mov
xchg
pop
pop
pusha
in
or
inc
int3
add
aam
jle
iret
jmp
mov
(bad)
jb
cwd
jmp
scas
stc
iret
and
loopne
daa
push
(bad)
jns
inc
(bad)
cwde
arpl
clc
inc
push
dec
xchg
push
stos
mov
and
mov
jnp
xchg
dec
or
push
sub
xchg
push
add
sub
dec
test
repnz
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
mov
jnp
icebp
mov
mov
sub
mov
test
mov
lea
mov
neg
jecxz
mov
inc
(bad)
mov
movs
aas
(bad)
sub
mov
adc
outs
push
test
or
iret
inc
jae
sub
adc
or
mov
xchg
pop
mov
sbb
and
std
push
jle
(bad)
push
jb
into
push
mov
xor
ror
repnz
js
inc
imul
add
int3
jmp
jbe
aam
outs
test
les
add
cmp
call
test
and
into
mov
movs
in
inc
out
ret
push
in
data16
adc
mov
jge
push
fidivr
fucomp
loope
sar
icebp
es
jmp
outs
jge
fwait
adc
gs
jns
adc
jmp
ss
in
je
add
sub
cmps
adc
fidiv
push
bound
xor
loop
shl
fsubp
(bad)
sbb
mov
(bad)
mul
cmp
out
repnz
fbstp
out
ds
push
repz
mov
xchg
mov
inc
aas
out
sbb
mov
or
int3
or
pop
cmp
stos
adc
xor
imul
cs
jo
mov
jnp
pop
out
xor
neg
mov
mov
outs
sub
imul
cld
aaa
imul
add
ror
lods
jp
fild
(bad)
in
or
push
pushf
jns
inc
(bad)
div
daa
(bad)
ror
cli
iret
pop
into
pushf
mov
cwde
and
retf
neg
mov
push
adc
lods
das
inc
(bad)
or
ret
in
outs
mov
aam
cs
in
adc
nop
and
ret
(bad)
sbb
and
out
(bad)
scas
fild
pop
scas
xchg
loopne
sbb
sbb
fstp
clc
loope
(bad)
or
push
cmps
outs
adc
mov
js
test
dec
pusha
scas
jmp
aaa
mov
mov
mov
push
mov
ret
push
(bad)
mov
inc
mov
push
in
and
aaa
lock
jo
out
mov
fs
pusha
xor
test
popa
aas
cmp
std
mov
fwait
and
push
push
popf
pushf
nop
mov
and
mov
dec
jbe
movs
xor
dec
in
push
inc
imul
pop
inc
pop
sub
pop
pop
stc
out
gs
push
jmp
sbb
out
mov
xchg
and
jmp
adc
call
adc
mov
mov
cs
sub
lock
pushf
mov
in
test
xchg
mov
xlat
push
mov
push
inc
xor
mov
jne
mul
jmp
sbb
pop
lds
or
mov
mov
mov
mov
repnz
mov
xchg
cmp
mov
repz
shr
adc
mov
inc
ds
cdq
cmp
dec
imul
cld
(bad)
out
shl
lods
rcr
or
or
mov
cmps
pop
pop
arpl
sub
mov
pop
xor
in
out
mov
and
ret
bound
add
jl
mov
in
push
sbb
jmp
mov
fnstenv
pop
lds
or
cs
sbb
and
idiv
dec
fild
aam
xchg
ins
mov
push
loopne
and
mov
sbb
adc
(bad)
mov
(bad)
jae
(bad)
and
jp
inc
ds
mov
push
mov
out
jecxz
push
lock
adc
push
ins
clc
int3
ss
cs
mov
in
lock
mov
xchg
xor
inc
mov
push
xchg
stos
jno
clc
and
ret
(bad)
pop
arpl
mov
add
mov
lahf
out
add
cmc
push
cmp
cmp
in
or
dec
dec
xchg
out
gs
mov
and
call
sbb
in
lods
and
stc
cli
cdq
jnp
ficom
loop
adc
aad
dec
icebp
jle
aad
clc
fld
mov
xchg
dec
mov
gs
cld
inc
(bad)
retf
mov
hlt
xchg
es
fisttp
cmp
imul
cld
fucom
cs
and
mov
sbb
gs
adc
sub
mov
imul
outs
pop
sti
addr16
pusha
loopne
mov
push
sub
xchg
iret
cld
(bad)
mov
test
xor
idiv
cmps
js
jae
imul
push
addr16
test
call
and
js
or
jl
pop
inc
mov
test
or
cld
pop
out
leave
rcr
and
xor
or
adc
pop
mov
les
cld
dec
retf
enter
cmp
mov
sub
inc
xor
inc
(bad)
cli
mov
inc
mov
(bad)
out
cmp
test
and
jp
inc
adc
jmp
ret
xlat
movs
pop
cld
dec
mov
cmp
inc
bound
sbb
addr16
ret
adc
es
xchg
xchg
ins
xor
(bad)
loope
mov
aam
gs
inc
dec
in
aaa
out
mov
fild
mov
in
outs
dec
mov
or
test
mov
cmps
loop
xchg
fdivr
(bad)
cmp
(bad)
dec
and
cld
or
push
and
movs
and
xchg
pushf
stc
leave
in
adc
fistp
fmul
pop
and
cli
retf
jno
cld
fbld
pop
retf
mov
sahf
dec
dec
imul
cmp
or
jge
sub
gs
iret
rol
or
jp
cmp
dec
add
add
pop
mov
loope
push
in
arpl
xor
popa
minps
loopne
mov
sbb
pop
cmps
jg
jmp
pushf
adc
xor
cmp
and
js
jns
adc
or
cli
mov
dec
push
sahf
sub
xor
stos
xor
dec
(bad)
and
xor
mov
(bad)
test
mov
mov
mov
int
mov
jbe
jle
cmp
(bad)
out
int
mov
dec
repz
xor
adc
aaa
xor
dec
lds
movs
aas
(bad)
popf
(bad)
mov
xchg
push
cmps
enter
movs
dec
icebp
dec
dec
(bad)
int3
push
scas
sbb
call
adc
(bad)
cmp
sub
fst
inc
pop
fisubr
(bad)
adc
test
mov
lea
sbb
shl
call
pop
dec
popa
push
sub
jnp
mov
adc
arpl
lods
cdq
cwde
les
popa
cld
sbb
fs
mov
arpl
push
jne
outs
sub
pop
jnp
mov
adc
call
not
push
sub
(bad)
mov
and
dec
dec
jle
scas
inc
push
shr
mov
out
push
push
mov
lahf
add
fiadd
or
adc
sahf
sub
dec
call
stos
sar
(bad)
in
stos
pop
sti
pop
or
sub
js
movs
inc
jns
out
sub
pop
add
jmp
and
dec
icebp
pop
sbb
jmp
out
icebp
jne
gs
jne
inc
pop
stos
clc
inc
retf
push
nop
repz
call
js
sar
data16
pop
loopne
and
int3
nop
int3
rcr
lds
add
inc
repz
repnz
add
mov
mov
shl
pop
jecxz
sbb
psubsb
std
jg
mov
xchg
sbb
add
sbb
aas
call
pushf
jo
movs
mov
adc
push
shr
sbb
aam
or
mov
pop
xor
iret
out
sub
jne
fstp
and
xlat
jp
scas
mov
ret
rcr
nop
imul
test
ret
mov
js
fldcw
call
jl
mov
add
cmp
daa
pushf
sbb
sub
retf
(bad)
out
push
outs
inc
add
repnz
mov
or
fwait
jbe
enter
cmp
sub
mov
cwde
pushf
cmps
mov
mov
pop
test
outs
aaa
in
lods
xchg
scas
ret
inc
rcr
cmp
out
sbb
add
sub
adc
pop
rcr
je
neg
(bad)
mov
call
not
test
xor
arpl
add
jb
imul
popf
mov
stos
lahf
sahf
data16
sbb
mov
dec
push
or
add
test
dec
pushf
pop
inc
dec
adc
push
mov
push
bound
scas
cmp
test
stos
repz
cwde
jo
shr
ins
test
or
push
dec
or
push
lods
hlt
cmp
setge
dec
pop
or
mov
mov
lods
or
push
xlat
xchg
arpl
call
pop
aad
and
or
cwde
sbb
daa
retf
mov
fwait
xor
or
(bad)
mov
mov
and
push
jo
ins
pop
pusha
push
rcl
int3
lods
ss
mov
jo
call
popf
cmp
in
mov
into
lock
pop
sbb
stos
xchg
fnsave
aam
stos
sbb
and
adc
call
sahf
dec
push
sbb
(bad)
(bad)
fldcw
sbb
push
pop
jp
add
movs
adc
cmp
jle
fwait
icebp
xor
jecxz
into
inc
scas
adc
aaa
lock
retf
mov
push
push
and
ficom
cmp
outs
aad
xchg
xchg
outs
in
sub
dec
push
test
out
cmps
(bad)
nop
mov
xor
std
dec
pop
movs
adc
cmp
adc
xor
mov
repnz
add
sbb
mov
rcl
lock
fild
test
lahf
pop
xchg
cld
mov
test
in
cli
idiv
or
inc
jb
ror
dec
inc
cdq
xor
mov
or
enter
test
loope
lea
xlat
out
mov
ret
popa
mov
mov
pop
adc
scas
cmp
in
push
push
adc
movs
mov
dec
icebp
arpl
push
retf
push
outs
popf
jae
push
inc
stc
rol
push
js
inc
add
ds
mov
mov
in
xor
push
push
xchg
ins
sub
xchg
or
add
scas
mov
test
psubusb
or
pop
pusha
push
(bad)
push
pusha
shr
mov
cmp
add
retf
(bad)
js
lock
(bad)
jecxz
and
inc
jno
inc
mov
in
adc
lods
mov
hlt
mov
popa
nop
cwde
stc
jae
mov
outs
in
cmp
mov
sbb
mov
or
mov
sub
push
add
aam
retf
jmp
repnz
sbb
daa
jecxz
(bad)
mov
in
adc
pop
mov
rcl
push
jmp
add
mov
cmp
mov
cli
mov
or
mov
in
cmp
leave
ja
push
call
popf
(bad)
pop
js
add
out
inc
mov
push
push
lea
daa
or
mov
pmaxsw
stos
pusha
mov
call
in
push
inc
inc
scas
(bad)
dec
mov
repnz
ret
jmp
neg
cs
sub
jns
cld
inc
adc
xor
gs
pop
push
xchg
mov
in
rcr
mov
dec
pushf
aad
ss
stc
(bad)
call
push
std
ins
or
outs
inc
mov
mov
sbb
or
dec
dec
sbb
nop
stos
shl
push
inc
rcl
add
lods
cs
hlt
xor
mov
retf
test
pop
fbstp
rol
pop
cld
xchg
arpl
mov
pop
mov
dec
icebp
add
lea
fistp
ins
pop
cmp
cld
push
mov
xor
je
mov
xchg
add
lds
fwait
sub
dec
or
sub
outs
(bad)
pop
push
xchg
dec
jae
add
btr
ror
push
pusha
fnstsw
jne
mov
inc
inc
shr
push
sbb
test
popf
sub
fwait
xchg
add
fdiv
xchg
mov
lds
dec
popa
inc
fwait
outs
mov
mov
inc
jo
pop
nop
cdq
iret
mov
push
jle
jmp
inc
aas
sub
retf
mov
aam
cmp
push
ja
adc
pop
bound
mov
mov
inc
pushf
cmp
outs
das
push
bound
ds
inc
ror
fist
jae
mov
dec
sub
sub
cwde
mov
popf
inc
mov
mov
aas
nop
aad
jbe
jae
sbb
cmp
fisub
xchg
xchg
xor
lds
dec
adc
hlt
mov
js
or
and
test
inc
push
rcr
xor
add
div
push
mov
rol
out
pop
push
push
cmp
(bad)
test
out
cmp
xchg
jne
aad
cmps
fld1
cs
mov
jb
sub
pop
int3
sbb
xchg
sbb
js
test
jg
sbb
pop
test
cs
adc
sub
shr
mov
dec
dec
ret
test
out
mov
mov
fstp
mov
cdq
mov
popf
stc
fisub
rol
xchg
cwde
push
pop
push
out
cmp
add
es
in
aam
repnz
or
js
test
push
lea
mov
lea
mov
inc
push
jbe
(bad)
mov
add
mov
inc
cmp
div
out
cmp
or
add
mov
cmpxchg
test
inc
fs
shl
or
loop
lods
cmp
xor
sbb
cdq
xor
shr
repnz
xchg
imul
cmp
in
dec
jl
(bad)
scas
std
lock
ins
imul
test
(bad)
dec
xchg
jmp
mul
out
add
pop
mov
add
aam
sub
mov
mov
int3
pop
or
addr16
or
mov
xchg
push
rol
xor
loop
adc
xchg
sbb
ret
arpl
dec
into
xchg
fdiv
xchg
je
lock
jecxz
mov
test
xchg
mov
ins
call
dec
sub
and
pop
cmp
lds
fdiv
xchg
pop
cmp
sbb
adc
jae
jae
lahf
add
mov
test
jle
inc
ds
fisub
adc
jmpw
push
jp
fimul
xchg
push
push
adc
hlt
sub
sbb
retf
ror
and
out
out
xlat
mov
push
mov
mov
imul
ins
mov
sahf
aam
inc
popa
lods
cmp
shr
dec
retf
add
adc
leave
fnstsw
outs
and
fist
add
cmc
std
push
or
or
mov
js
shl
mov
hlt
ret
data16
xor
push
test
mov
push
ret
inc
or
jle
mov
je
xor
adc
fs
outs
out
out
jne
nop
sub
jne
jbe
mov
inc
sahf
push
sbb
lods
and
test
addr16
push
jmp
add
sub
pop
sti
inc
inc
add
mov
or
mov
stos
inc
call
in
inc
inc
adc
(bad)
clc
into
push
sub
mov
dec
mov
icebp
mov
push
hlt
outs
stos
push
add
loope
or
data16
lea
cs
stos
mov
xor
js
outs
test
leave
outs
xchg
dec
or
xchg
call
inc
push
fistp
sbb
popf
add
fwait
mov
xchg
gs
cdq
mov
xchg
int3
hlt
(bad)
dec
inc
pop
adc
and
cmps
jno
xchg
ror
jg
or
cmp
cmp
scas
cmp
add
jmp
sbb
jnp
mov
out
xchg
retf
movs
pop
test
out
add
loopne
mov
xchg
mov
dec
xor
into
(bad)
test
cmp
xchg
jnp
cmps
fwait
dec
ja
enter
aaa
and
add
pop
mov
xchg
(bad)
push
loop
jmp
and
mov
popa
mov
pop
(bad)
hlt
push
and
pop
pop
lahf
mov
mov
xchg
call
cmps
pop
popf
xchg
mov
in
jmp
jmp
imul
lds
adc
mov
aaa
fbld
ret
and
inc
ds
and
scas
jne
mov
enter
test
xor
mov
inc
popa
xchg
push
mov
pushf
or
aam
mov
xor
cmp
cld
mov
cmp
mov
xchg
xchg
or
pushf
pop
loope
mov
xchg
cmc
(bad)
js
xor
and
mov
jg
push
cmc
loop
js
clc
or
(bad)
test
xchg
cmp
pop
push
sahf
or
call
leave
add
or
mov
out
les
cmp
fs
repz
and
dec
push
mov
es
inc
leave
mov
scas
jo
xlat
jmp
inc
jmp
mov
and
js
jbe
mov
cli
outs
cs
test
mov
sub
outs
add
ret
xchg
mov
sbb
inc
fdivr
aas
(bad)
xchg
mov
cmc
and
sbb
jno
and
sub
out
inc
mov
stos
mov
push
jo
enter
into
por
out
(bad)
repnz
mov
push
sbb
push
jg
cmp
mov
dec
and
xchg
add
mov
dec
inc
aam
jmp
mov
div
or
scas
lea
mov
cmp
mov
mov
mul
or
in
dec
push
mov
sub
test
icebp
xchg
xchg
xor
mov
mov
jo
cmp
mul
(bad)
jne
fbld
addr16
dec
js
dec
mov
mov
test
mov
test
repnz
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
lea
mov
test
mov
xchg
jae
rol
pop
mov
test
mov
jp
mov
rcr
sub
dec
adc
fcmove
push
pop
jmp
fsubr
mov
add
iret
adc
cmp
clc
leave
mov
xchg
cld
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
jns
mov
sar
bound
aas
mov
test
mov
test
mov
add
mov
add
mov
inc
ds
cmp
cmp
dec
mov
and
fldenv
out
or
dec
daa
dec
cmp
mov
xlat
push
outs
sbb
mov
call
pop
adc
xchg
test
imul
pop
iret
sar
and
mov
leave
test
imul
push
add
icebp
mov
pushf
test
mov
dec
inc
push
mov
in
jbe
mov
pop
sar
je
popa
push
enter
add
mov
sub
push
neg
mov
int
test
adc
jle
call
xchg
(bad)
clc
aas
scas
push
push
ins
xchg
ret
xchg
add
jnp
jecxz
sahf
imul
mov
add
addr16
mov
icebp
xchg
jo
mov
pop
lods
sbb
add
setns
jge
stos
xchg
cmp
sbb
jmp
in
cmp
lock
jb
mov
fisubr
or
cmp
jle
jbe
in
(bad)
cmps
sub
fisttp
pop
int3
xchg
and
jae
push
(bad)
popf
dec
ffree
cmp
repnz
mov
repnz
mov
add
mov
cmp
xor
cmp
test
mov
xchg
sbb
(bad)
movs
mov
cmps
das
ins
sbb
gs
lds
aam
mov
or
or
xchg
cld
fdiv
sldt
dec
in
or
inc
add
fcomp
(bad)
xchg
fdivr
fmul
mov
jg
mov
and
sbb
xor
cmps
scas
les
fstp
dec
fwait
inc
sub
push
fidivr
loop
mov
xchg
mov
adc
mov
xor
push
loopne
lahf
mov
dec
inc
mov
shr
(bad)
inc
adc
fiadd
retf
xchg
mov
mov
pop
out
sbb
mov
popa
xchg
xchg
ss
rol
adc
pop
jg
and
dec
mov
ins
shl
or
fcmovnbe
sbb
or
fwait
jmp
sub
lds
mov
mov
mov
lea
mov
out
aas
mov
add
div
add
mov
test
mov
cli
mov
add
jne
movs
aas
(bad)
add
repz
ror
add
push
add
(bad)
iret
ficom
dec
loopne
aad
mov
cmp
inc
cmp
icebp
xor
sub
pushf
push
ss
popf
jecxz
sar
or
push
es
popa
fsub
cmps
sbb
fs
inc
sbb
xchg
dec
pop
leave
mov
pushf
xchg
mov
jmp
or
rcr
sub
pop
mov
(bad)
test
jnp
std
push
cld
fmul
cmp
cmps
cmps
mov
pushf
clc
loop
pop
call
dec
xchg
les
mov
push
leave
test
inc
or
xor
adc
sub
clc
pop
ins
dec
inc
call
(bad)
loope
addr16
adc
fst
enter
cs
inc
fdivp
sub
jmp
mov
dec
scas
fadd
int
adc
jae
js
loope
loop
cdq
sbb
addr16
add
push
(bad)
mov
ss
xor
in
or
gs
cmp
xlat
mov
iret
addr16
hlt
and
push
mov
add
(bad)
jecxz
xor
rcl
mov
popf
(bad)
cld
inc
mov
fcomp
push
xchg
push
in
cmp
or
mov
xor
push
add
rep
daa
gs
sti
mov
push
iret
mov
mov
cmp
jg
cs
jge
or
mov
xlat
sub
out
out
adc
cmp
xor
or
jb
scas
in
cmps
jmp
mov
jb
ds
sbb
sub
pop
sbb
push
sbb
xchg
rol
adc
scas
sbb
retf
mov
push
adc
sahf
loope
pop
pop
lods
xor
pop
cmp
or
sbb
popf
imul
jp
inc
fistp
cmps
push
sbb
mov
and
inc
std
outs
adc
xor
adc
(bad)
xchg
mov
mov
cmps
xor
xor
icebp
mov
test
rol
icebp
xchg
add
retf
fcmove
int
sub
int3
(bad)
idiv
fidivr
in
lods
rcl
inc
out
(bad)
and
xor
(bad)
mov
je
push
xchg
std
xor
jae
push
in
xchg
sub
jge
popf
stos
dec
pushf
int
in
mov
std
shl
sti
(bad)
std
mov
(bad)
fwait
dec
cwde
inc
repnz
(bad)
ror
jo
mov
sbb
inc
test
addr16
sahf
and
imul
mov
xchg
jg
fstp
and
push
movs
hlt
lock
adc
mov
mov
into
sar
out
push
mov
jmp
sbb
dec
sahf
mov
adc
dec
fbstp
sar
pop
stc
test
xchg
or
stos
sbb
cmp
call
sahf
jns
clc
in
aas
add
sbb
mov
test
adc
std
pop
mov
jnp
jb
popa
add
push
pop
ins
mov
adc
cdq
pop
movs
ja
idiv
in
movs
dec
std
xchg
mov
and
jmp
sbb
into
or
leave
imul
xchg
aas
repz
retf
jmp
aad
or
inc
mov
jge
dec
test
mov
out
shl
ds
mov
ja
xor
in
data16
mov
clc
or
mov
dec
sbb
out
rcr
ret
cmc
mov
frstor
lock
jb
scas
fst
shr
enter
inc
sahf
or
mov
jge
push
jo
sbb
test
pop
(bad)
jne
jbe
rol
cmp
aad
jmp
loop
int3
outs
or
loop
or
mov
fistp
cmps
nop
jg
pop
inc
hlt
imul
jnp
mov
xchg
pop
movs
pop
mov
cli
dec
xchg
hlt
lahf
cli
pop
and
rcr
xchg
add
test
cmp
sub
and
jmp
push
sub
or
dec
pusha
and
movs
arpl
fwait
dec
push
lahf
aad
ins
sar
pop
pop
push
mov
and
mov
sbb
rcl
add
mov
popf
dec
xor
dec
push
stos
inc
in
cmp
scas
mov
inc
inc
cmp
mov
mov
cmp
call
fs
jmp
pop
(bad)
aaa
fmul
dec
(bad)
call
xor
mov
in
xor
popa
loope
sub
mov
out
adc
in
ffreep
out
movs
(bad)
jecxz
dec
xchg
sub
or
mov
pop
dec
and
mov
sub
dec
mov
fld
sbb
xchg
inc
inc
inc
xor
and
test
adc
pushf
fwait
inc
imul
jnp
mov
mov
jne
mov
mov
call
sbb
repnz
jne
mov
in
fist
repnz
enter
xchg
lea
push
lahf
fwait
mov
enter
xchg
or
test
sbb
repz
add
dec
les
push
mov
sar
xchg
jg
mov
dec
and
hlt
out
sbb
lods
sahf
pop
test
in
dec
adc
not
stos
loope
xchg
aaa
ins
cmp
into
pop
xchg
bound
or
(bad)
dec
sahf
out
aad
lds
xor
pushf
cmp
mul
cmp
repz
mov
dec
das
cmps
rcl
sbb
fisubr
jnp
retf
xchg
lds
fmulp
imul
ror
out
in
mov
jns
in
xor
(bad)
xchg
sub
(bad)
mov
xchg
mov
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loop
aad
loope
rcr
icebp
xchg
mov
sar
test
cmc
test
mov
test
mov
test
mov
test
mov
popf
daa
mov
inc
aaa
mov
cmp
mov
test
mov
xor
mov
push
cmp
mov
repnz
(bad)
xor
sub
imul
in
lahf
cmp
mov
ss
imul
mov
pop
cmc
rcl
bound
movs
sub
ret
loop
jmp
ror
cmp
push
jne
mov
out
xchg
cmp
jg
xor
pop
cmps
sub
xor
ficomp
je
ds
lahf
mov
or
mov
outs
out
jmp
inc
(bad)
adc
sub
inc
(bad)
ins
mov
mov
sbb
or
bound
rcr
mov
sbb
(bad)
addr16
dec
icebp
xchg
outs
jb
out
test
dec
shr
jae
dec
pop
jo
jg
add
repnz
cmc
xchg
cmps
popf
push
xor
cdq
pop
push
inc
push
ror
xor
adc
or
cld
mov
pop
fistp
pushf
and
mov
ret
mov
add
jg
push
imul
out
test
sbb
adc
push
pop
rcl
loop
clc
mov
sbb
push
mov
cmp
ret
sub
and
fcom
adc
sub
push
ret
sub
shl
xchg
fs
or
sub
mov
jg
(bad)
aas
pop
(bad)
xchg
xchg
lds
inc
mov
adc
jecxz
mov
push
clc
jb
push
retf
test
fwait
clc
or
mov
pushf
inc
or
sbb
mov
retf
dec
pop
sub
jno
outs
pop
jl
xchg
mov
outs
(bad)
cmp
ret
aad
jmp
inc
out
push
xchg
adc
sub
(bad)
(bad)
jns
and
out
or
and
mov
sbb
bound
jne
stc
enter
lahf
and
jl
daa
mov
mov
sbb
mov
and
ja
sbb
and
aaa
lea
pop
sub
pop
sahf
pop
mov
test
pop
mov
xchg
or
add
push
inc
add
in
test
dec
add
jnp
lock
enter
xor
cmp
stos
and
icebp
lea
mov
popf
xor
test
mov
cli
test
xor
arpl
mov
js
imul
xchg
xor
mov
mov
cmp
sub
in
push
pop
imul
inc
retf
retf
test
scas
add
mov
add
pop
cmp
add
dec
movs
jmp
inc
clc
arpl
cmp
mov
call
pushf
sbb
jp
(bad)
movs
(bad)
cmc
test
xor
cmp
shl
mov
ja
cli
xor
aas
out
push
xchg
sub
push
dec
(bad)
pushf
push
scas
mov
push
add
jno
cld
scas
outs
xor
pop
cld
test
push
(bad)
cmp
popf
(bad)
imul
les
ret
out
fst
stos
fwait
aad
pop
push
imul
push
gs
push
jbe
or
rcr
inc
dec
pusha
rcr
shr
arpl
sub
push
test
out
jl
addr16
adc
jmp
and
add
sub
fstp
fadd
mov
adc
mov
mov
mov
add
adc
sbb
pop
movs
movs
jno
in
mov
jo
lahf
in
loop
xchg
mov
xchg
(bad)
(bad)
(bad)
fadd
sbb
test
lahf
mov
in
sbb
inc
add
add
mov
or
call
call
and
jecxz
mov
sbb
pop
mov
inc
inc
ins
xchg
jmp
push
pop
outs
mov
retf
lfs
add
pop
or
add
out
or
fld
and
popf
cmp
xchg
jge
jg
int3
and
aaa
adc
pop
int3
mov
mov
ret
fwait
jl
(bad)
pop
push
cmp
mov
popa
inc
das
add
lea
mov
mov
popf
add
xchg
imul
push
sub
xchg
mov
(bad)
in
xchg
scas
ficom
sar
int3
aad
ds
sar
lods
arpl
popf
fstp
outs
(bad)
ja
cwde
adc
enter
pop
sub
pop
fstp
into
jl
dec
pop
jmp
test
xor
push
mov
cli
push
aaa
dec
jg
jb
push
sar
in
outs
xlat
mov
mov
sbb
jge
dec
nop
addr16
popf
inc
push
xor
jecxz
das
dec
shl
pusha
inc
ins
cmp
retf
cmc
pop
and
adc
(bad)
repnz
icebp
mov
ret
jae
mov
cmp
test
push
mov
and
inc
aaa
mov
lea
div
int
mov
lds
out
bound
jbe
jle
jp
sbb
cmp
dec
mul
jle
add
or
mov
rcr
pusha
fstp
sub
sub
lock
and
cmp
jbe
retf
jecxz
mov
jns
test
push
popa
add
cwde
sbb
out
sahf
enter
jge
pop
ror
push
add
jmp
cmp
out
mov
in
mov
call
sti
jnp
inc
addr16
xchg
cmp
or
lea
mov
inc
cmp
inc
sub
aad
xor
sti
mov
xchg
jle
jle
(bad)
jge
movs
aas
(bad)
add
mov
nop
mov
mov
adc
cmps
mov
sbb
dec
repnz
cmp
shl
ffreep
aad
lods
cmp
(bad)
je
fimul
ss
jo
out
push
dec
pop
mov
ins
sbb
inc
pusha
inc
push
(bad)
fs
retf
add
in
rcr
dec
lods
popf
xchg
icebp
out
push
into
aaa
arpl
bound
dec
dec
pop
int
push
std
jmp
mov
fs
or
push
mov
sbb
jmp
sbb
pop
push
push
aam
cdq
(bad)
jecxz
out
fwait
pop
outs
paddsb
sub
inc
sub
pushf
add
mov
vmread
lds
mov
mov
pusha
icebp
test
test
ins
dec
mov
jmp
xchg
cmp
ret
jg
jb
in
movs
push
xchg
out
addr16
scas
push
enter
(bad)
cmp
fsub
xchg
mov
mov
sahf
out
cmovs
xor
packsswb
mov
retf
jp
(bad)
fisubr
jae
ret
xchg
in
adc
push
retf
cdq
int
push
cld
fsubr
stos
lock
jb
call
xchg
mov
stos
imul
push
cmp
xor
mov
jge
imul
into
enter
push
push
cwde
mov
xchg
mov
xchg
dec
div
js
xchg
in
inc
imul
xor
fwait
sbb
in
dec
xor
lahf
pop
push
cmps
enter
xchg
add
ficom
fidivr
leave
rcr
jl
test
pop
jg
fiadd
cmp
test
shl
lahf
in
retf
push
mov
dec
loopne
idiv
loope
int
xor
push
pop
xor
dec
enter
ret
push
xchg
and
and
test
icebp
jge
mov
mov
(bad)
stc
push
popa
cld
test
ja
push
jns
call
pop
fnstcw
dec
mov
bound
test
cmp
outs
js
mov
bound
enter
mov
cmp
ja
adc
sar
or
enter
inc
jp
(bad)
jle
iret
xor
outs
pop
or
and
js
mov
fidiv
es
jo
nop
test
fdiv
pop
fcom
(bad)
out
lods
movs
loop
add
scas
or
icebp
idiv
repnz
(bad)
cmc
retf
cmc
xchg
movq
fs
leave
inc
aas
push
inc
mov
pop
or
sub
out
sub
out
cmp
repnz
cmp
out
mov
mov
dec
aas
jo
lds
aas
bound
cmp
jae
ret
mov
mov
loopne
cmp
cmp
test
inc
aaa
lods
loopne
cdq
out
push
jle
nop
add
test
(bad)
jg
jb
movs
out
sub
outs
(bad)
inc
daa
or
stos
pop
ret
rol
mov
mov
or
cwde
cmp
push
and
dec
mov
ja
and
add
ficomp
lahf
pop
rcr
inc
ret
and
int
jmp
lods
jp
xchg
xchg
enter
arpl
shl
mov
mov
and
sbb
std
jecxz
mov
jno
arpl
ss
out
pop
xchg
jp
loopne
repnz
repnz
scas
jmp
ins
xor
movs
pop
sub
test
push
sub
mov
add
pop
add
leave
outs
rcr
jbe
adc
lea
sbb
jns
or
or
mov
push
jnp
fwait
sub
add
and
push
inc
test
or
mov
nop
sub
inc
aaa
add
jns
outs
call
pop
sbb
cmp
icebp
or
inc
out
fcmovne
pushf
out
dec
and
add
(bad)
int3
test
test
mov
inc
jns
mov
adc
xchg
fnstcw
movs
mov
(bad)
sti
or
adc
cmp
neg
leave
cmps
sub
pop
and
loopne
inc
push
and
imul
adc
mov
sub
jno
es
xchg
daa
jnp
push
mov
movs
(bad)
gs
or
mov
jmp
mov
push
and
and
pop
fadd
dec
int
movs
xor
lds
cmp
fld
js
sbb
inc
iret
int3
xchg
lahf
fsubrp
and
mov
icebp
sbb
mov
out
iret
cmp
iret
mov
mov
call
jae
cli
pop
fsub
in
jmp
fisub
dec
cmp
loop
push
mov
dec
icebp
ss
mov
cs
test
lahf
mov
dec
(bad)
data16
movs
in
fcomp
or
cmp
cli
and
aas
cmp
push
xchg
fisubr
cmp
add
movs
jp
push
aaa
and
arpl
enter
cmp
(bad)
lods
stos
pop
mov
cmps
lods
idiv
test
push
out
jmp
lds
pop
mov
or
xor
lods
ja
sbb
outs
mov
fwait
ds
stc
push
add
xor
rol
cmp
js
popa
(bad)
popa
jecxz
jl
shl
in
sbb
in
inc
fimul
lods
out
push
add
imul
outs
xchg
lea
jecxz
jae
sti
or
sub
inc
pop
push
(bad)
stos
test
dec
and
cmp
fsubr
fwait
add
ins
call
sar
jecxz
movs
js
adc
jl
jg
fdiv
add
addr16
jp
aaa
or
out
inc
jle
and
je
xchg
dec
add
fs
in
push
mov
ins
xor
xchg
cli
and
jmp
int3
jmp
jl
sahf
loop
(bad)
hlt
push
cmp
and
movs
sbb
add
in
sbb
loope
xchg
into
and
(bad)
rcl
xor
neg
div
in
pop
jb
fistp
scas
fcomp
inc
cmps
cmc
neg
add
xchg
fst
mov
shl
fdiv
fisubr
jno
sbb
push
test
push
ins
icebp
fisttp
dec
or
jae
int
pop
sbb
cld
sti
ja
mov
sbb
fmul
call
mul
repnz
and
pop
xchg
shl
pop
loopne
xor
(bad)
rcl
(bad)
lock
fcomp
sub
fisttp
sbb
pop
xor
sbb
adc
fisttp
je
xor
sbb
xchg
cmp
push
add
push
fdiv
repz
into
push
add
test
leave
pop
push
mov
xor
out
lods
adc
sbb
pop
xor
cmp
in
pop
push
rcr
cmp
mov
dec
xlat
mov
outs
fiadd
sbb
or
mov
push
rcr
gs
dec
imul
pusha
daa
or
mov
call
lock
pop
movs
push
call
fdivr
sub
inc
jmp
(bad)
fsubrp
clc
adc
enter
popa
inc
ss
mov
outs
xor
mov
inc
repnz
arpl
or
and
or
jae
fistp
xor
mul
pop
sbb
test
or
sbb
push
and
aas
inc
mov
mov
mov
cmps
jmp
outs
xchg
adc
jecxz
call
je
ds
jmp
popf
addr16
dec
cs
fs
lea
or
mov
xor
sbb
(bad)
call
pop
push
fsubr
test
bound
mov
shl
cmp
pop
push
or
adc
imul
mov
push
sbb
dec
and
jl
fs
cdq
loope
(bad)
(bad)
fisttp
mov
inc
fwait
stos
bnd
nop
push
cmp
ja
fistp
ja
and
jno
add
xchg
pop
pop
jo
daa
js
out
arpl
adc
cli
sub
sbb
sub
ret
pushf
dec
sub
push
int3
stos
cmps
in
sub
sbb
or
ss
scas
arpl
xlat
fcomp
sub
sub
mov
repz
mov
jecxz
std
in
push
mov
icebp
rcl
or
adc
jo
stos
out
cmp
stos
shl
call
xor
add
das
jo
xchg
mov
fidiv
(bad)
data16
add
mov
gs
cmp
scas
sub
sar
cli
cmp
sub
sbb
sub
test
xchg
push
inc
in
and
adc
jne
std
ret
cmp
ins
mov
xchg
jp
(bad)
xor
push
adc
retf
sti
bound
nop
lds
icebp
loop
dec
jne
cmp
mov
jl
fisubr
jg
add
pop
stos
xor
daa
outs
outs
mov
int
jecxz
pusha
cmp
jbe
aaa
into
mov
imul
adc
test
xchg
push
mov
mov
xchg
cmp
cmp
mov
loop
cmp
repnz
aas
div
ds
ja
mov
jae
add
jne
movs
aas
(bad)
add
aaa
mov
jle
or
data16
movs
loope
inc
add
inc
add
data16
ins
pop
mov
fs
in
jmp
jge
fistp
sub
jae
arpl
jg
es
dec
sbb
mov
int
mov
xchg
xchg
jg
sbb
inc
test
je
(bad)
mov
(bad)
sti
jb
mov
xor
fist
mov
or
xor
in
dec
(bad)
rol
xor
cmp
adc
push
cwde
int3
and
xor
(bad)
xlat
imul
add
jno
movs
retf
xchg
mov
scas
push
bound
shr
push
inc
shl
retf
sbb
rcl
cs
test
iret
ficom
jmp
and
loope
test
int
xchg
sbb
push
sub
push
shl
(bad)
aaa
ins
push
js
inc
add
popf
cld
in
out
and
scas
jns
push
dec
xchg
mov
sub
ja
jb
mov
add
push
inc
pop
sub
push
mov
lahf
adc
aas
xor
mov
mov
cmp
dec
(bad)
(bad)
pushf
or
xor
or
pop
imul
sub
icebp
xor
pop
fisubr
add
push
xor
aas
mov
mov
call
dec
push
bound
loope
fwait
add
xor
aas
inc
sub
mov
pop
js
fcom
int
fadd
dec
lods
shl
(bad)
sti
mov
cwde
cmp
dec
fisttp
loopne
and
imul
mov
sub
gs
xor
retf
test
dec
push
int
popa
inc
xchg
jmp
xchg
inc
pop
mov
(bad)
adc
mov
xor
pusha
and
sbb
stos
dec
and
mov
js
push
push
cmc
pop
fisub
and
stos
test
jecxz
dec
sbb
rol
cmp
(bad)
pop
and
mov
mov
stc
int3
jno
pop
and
pop
loopne
mov
adc
aad
(bad)
scas
int3
adc
fadd
(bad)
fld
add
sub
xor
jbe
test
inc
xor
lods
cmp
jp
mov
sub
xchg
and
ins
loopne
icebp
push
push
dec
ret
rol
mov
mov
add
sbb
inc
jecxz
dec
push
punpcklwd
dec
retf
push
and
iret
into
mov
mov
stc
dec
shl
(bad)
retf
dec
in
add
scas
ret
mov
enter
push
xchg
inc
mov
je
stc
loop
sbb
std
xchg
scas
arpl
jne
sbb
dec
out
add
fst
loope
enter
popf
mov
repz
sub
hlt
ja
push
lods
in
jmp
pop
push
enter
mov
jmp
mov
jns
repnz
jg
push
adc
(bad)
sub
jmp
add
or
or
out
xor
out
pusha
pushf
xchg
(bad)
out
push
add
lock
adc
xchg
scas
xchg
leave
movs
inc
xor
test
outs
rol
push
pop
add
aam
test
inc
aas
jmp
stos
dec
jno
fwait
mov
loop
and
mov
add
add
xchg
sub
xchg
xchg
adc
and
fdivr
in
aad
sbb
xlat
and
dec
(bad)
push
sbb
sub
pop
mov
repnz
movs
sar
and
xor
dec
add
fimul
mov
push
ins
mov
push
mov
iret
out
fdivr
inc
fcom
stc
outs
mov
dec
imul
push
or
sahf
dec
out
add
loop
pop
adc
mov
add
dec
inc
inc
inc
inc
xchg
push
inc
stos
test
pusha
mov
sub
xchg
push
and
xchg
jg
jle
(bad)
pop
jae
adc
inc
pop
xchg
shl
pusha
add
jnp
sub
(bad)
in
jecxz
in
or
movs
sar
fist
stos
lds
pop
jge
stos
inc
jnp
rcl
js
sbb
mov
mov
test
mov
test
repnz
push
fcom
adc
clc
in
int
(bad)
bound
jae
aam
sbb
(bad)
mov
dec
pop
xchg
arpl
stos
push
or
sbb
and
adc
cmp
into
push
sub
sahf
bound
jb
xchg
hlt
(bad)
int
shr
ds
pop
pop
ja
cmp
mov
popa
jne
bound
xchg
jnp
mov
cmp
mov
in
jecxz
jae
icebp
push
jae
test
xchg
mov
add
clc
aam
mov
div
mov
mov
test
mov
lds
aaa
sar
xor
jne
xor
mov
jmp
cmp
into
sti
mov
jge
jno
lods
les
mov
das
sub
jle
dec
out
cmp
clc
xor
cmp
(bad)
sub
and
daa
aas
mov
push
mov
ret
inc
push
sub
and
retf
jb
(bad)
dec
jo
fwait
mov
iret
add
fidivr
cmp
pushf
ret
push
mov
cmp
or
outs
les
cli
dec
lds
xor
loopne
in
das
pop
push
scas
fnstenv
je
retf
ins
repz
sar
lods
in
jbe
ret
xor
push
jge
pushf
mov
arpl
sbb
push
xchg
sub
mov
mov
retf
cmp
adc
jae
xchg
cli
mov
jg
icebp
mov
mov
mov
mov
cmp
mov
sar
jb
cli
div
push
jne
xor
mov
sub
and
dec
out
retf
out
mov
ja
pop
dec
test
mov
cmp
cmp
add
int3
dec
mul
mov
xor
cs
push
pop
sti
cmps
mov
loope
sbb
xchg
and
mov
jmp
retf
and
shl
mov
gs
mov
jp
mov
adc
push
outs
xchg
xor
mov
adc
aam
cmp
or
inc
pop
lock
ja
push
xor
in
and
dec
test
sbb
jo
(bad)
and
mov
jae
add
sub
(bad)
jne
ret
sbb
jle
mov
sbb
mov
push
xchg
mov
and
mov
jecxz
adc
daa
scas
dec
or
xchg
push
mov
bnd
pusha
je
xor
adc
dec
xchg
mov
pop
stos
test
fild
adc
jp
fdivr
sti
jecxz
stos
pop
ins
mov
repz
outs
mul
jmp
or
push
lock
mov
retf
mov
es
loop
into
sub
sub
into
mov
test
pop
push
xor
hlt
inc
ds
(bad)
fwait
sbb
adc
cmp
jle
fstp
test
push
ja
mov
pop
stos
test
hlt
sahf
out
shl
fcmovnbe
mov
mov
nop
jnp
popa
stc
jno
xor
sub
adc
aam
mov
out
cmp
sti
not
push
dec
cmps
cmp
jmp
int
(bad)
and
stos
pop
jecxz
dec
retf
mov
das
mov
push
call
idiv
pop
aas
push
pop
push
ja
jb
imul
mov
jl
(bad)
mov
push
fiadd
and
mov
sar
lods
mov
push
iret
dec
add
mov
sub
push
pusha
pop
movs
das
dec
xchg
cmp
jno
xor
test
mov
inc
aas
mov
add
hlt
jae
mov
jne
movs
aas
(bad)
add
lock
mov
lds
mov
jl
std
or
cmp
and
icebp
sbb
adc
mov
jle
cs
mov
xchg
inc
out
scas
int3
stc
xlat
jle
adc
addr16
clc
(bad)
mov
cli
sbb
mov
mov
xchg
mov
and
jmp
mov
lock
push
push
les
mov
mov
sbb
push
in
fldenv
outs
xor
std
mov
sub
pop
add
ins
pop
pop
push
add
dec
and
pusha
arpl
test
(bad)
jnp
jle
xchg
or
outs
adc
adc
shr
enter
and
lods
ror
ret
push
xor
not
mov
retf
pop
xor
pop
xor
out
loope
(bad)
pop
mov
lock
push
add
jb
push
repz
dec
jmp
fldl2t
clc
adc
ffree
and
mov
mov
outs
xchg
iret
xor
jae
call
fcomp
arpl
mov
mov
dec
cs
inc
xor
in
loopne
inc
outs
xor
jl
xor
fiadd
mov
inc
inc
pop
jbe
push
fs
and
(bad)
ss
loopne
ja
(bad)
js
xchg
dec
imul
add
aas
jmp
div
sti
mov
xor
xor
add
mov
out
movs
xchg
pop
push
retf
enter
test
sbb
ret
and
jp
or
push
aad
ins
push
ins
mov
popa
sbb
or
or
jnp
enter
inc
fs
call
pushf
xchg
sti
nop
fsubr
out
mov
mov
outs
mov
data16
je
retf
or
sbb
cdq
xchg
loopne
dec
sbb
and
push
rol
rcr
pop
xchg
jnp
leave
aam
mov
mov
push
ror
nop
lahf
mov
(bad)
adc
cmps
out
xlat
fdiv
dec
dec
mov
jp
imul
cmp
sub
(bad)
jae
jmp
or
xor
lods
sti
or
xchg
xchg
aaa
pop
and
cmp
addr16
inc
cld
scas
jns
loope
clc
mov
push
pop
scas
dec
jge
xor
xor
mov
fdiv
loope
mov
lock
ins
xchg
or
push
gs
cmp
imul
mov
mov
inc
xor
(bad)
pop
add
inc
pop
ss
add
mul
inc
test
xchg
leave
xor
imul
xchg
fbstp
shl
mov
push
test
xor
retf
lods
dec
sbb
cs
sub
pusha
in
int
pop
ds
(bad)
idiv
cmp
and
cmp
out
jmp
fdivr
test
xchg
or
nop
and
shr
sbb
push
fist
add
test
mov
sbb
ins
repnz
push
jecxz
xor
cmp
cli
adc
pop
mov
aad
inc
push
repnz
not
(bad)
clc
ins
in
fs
pop
inc
ins
mov
(bad)
cmp
loope
jp
idiv
(bad)
in
lds
push
das
inc
push
and
cmp
jmp
xor
cli
or
or
stos
clc
lea
jg
push
add
jo
dec
and
pop
dec
test
repnz
jmp
retf
adc
cwde
mov
out
test
mov
jno
jns
out
cmp
lods
fstp
in
jns
call
lahf
or
dec
sbb
xchg
mov
add
cmps
jae
mov
push
mov
xor
cmp
mov
inc
mov
icebp
fdivr
inc
push
push
xchg
lahf
mov
sbb
imul
test
test
sub
gs
bound
test
cmp
(bad)
imul
mov
cmps
cmp
fldenv
(bad)
pop
icebp
das
adc
push
aad
xchg
push
inc
outs
push
mov
mov
int3
dec
in
pop
popf
ja
repz
pop
dec
push
adc
xchg
imul
inc
lock
iret
sub
dec
fs
mov
(bad)
int3
xor
test
repz
sub
cwde
movs
in
xchg
jmp
mov
lock
or
ret
xor
cmps
out
ins
sbb
dec
in
pop
std
dec
xchg
jl
push
lock
(bad)
fisubr
inc
ds
push
lea
(bad)
lahf
int3
xchg
mov
xor
fiadd
or
shl
out
ja
pop
icebp
lea
push
aam
dec
and
adc
enter
and
data16
inc
test
cdq
lock
and
(bad)
data16
mov
and
jnp
jmp
clc
mov
imul
into
push
mov
xor
retf
mov
ja
stos
jnp
jp
ret
xchg
aam
jl
iret
mov
sub
and
xchg
adc
cmps
ss
sub
je
mov
pop
es
cmp
add
dec
add
imul
and
call
jg
jno
lahf
ds
shr
dec
push
cmp
lea
pusha
xor
sti
test
bound
mov
iret
dec
jmp
gs
jmp
mov
mov
lds
adc
mov
add
cmp
xor
leave
cmp
push
ror
movs
lods
or
inc
rol
icebp
sbb
fs
jae
push
bound
and
arpl
fstp
nop
or
pop
retf
jmp
out
pop
rcl
add
stc
fistp
inc
push
(bad)
mov
xor
stos
das
xchg
jmp
jl
cli
sbb
pushf
ss
bound
jb
push
jp
dec
das
movups
push
ret
fld
aad
jbe
out
pushf
(bad)
mov
jmp
mov
add
leave
ror
enter
mov
call
retf
(bad)
xor
in
sbb
mov
mov
push
lea
cmp
aad
cmp
cmp
mov
and
cmp
or
cmp
test
mov
test
lea
test
and
scas
out
test
mov
mov
scas
mov
cmp
(bad)
cmp
test
inc
(bad)
cmp
test
dec
imul
mov
or
cmp
test
xor
mov
loop
test
jp
mov
stos
aas
test
jle
mov
push
push
test
xchg
cmp
jbe
cmp
inc
test
outs
jbe
cmp
repz
mov
repz
jle
test
adc
test
xor
cmp
mov
loop
test
mov
test
call
cmp
(bad)
jp
inc
push
test
mov
test
mov
test
outs
lock
cmp
mov
stos
aas
test
mov
test
call
cmp
jp
inc
push
test
mov
test
mov
test
jp
mov
jbe
xchg
cmp
repnz
(bad)
bnd
fisttp
test
xor
jp
lods
jne
cmp
icebp
mov
scas
mov
cmp
repnz
mov
jp
or
test
mov
test
mov
test
mov
test
repnz
bound
test
cmps
bnd
mov
(bad)
jp
inc
push
test
fdivrp
test
jb
test
stos
repnz
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
mov
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
out
mov
push
nop
lea
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
(bad)
repnz
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
pop
repnz
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
inc
repnz
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
mov
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
stos
repz
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
xchg
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
loop
mov
push
nop
xchg
cmp
inc
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
retf
cmp
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
cmp
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
add
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
or
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
push
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
xor
cmp
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
xchg
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
mov
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
retf
cmp
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
lock
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
jb
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
jbe
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
dec
lock
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
xchg
icebp
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
loop
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
(bad)
icebp
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
(bad)
icebp
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
test
into
icebp
mov
push
nop
mov
push
push
test
mov
test
loop
jp
mov
(bad)
jp
inc
push
test
mov
test
mov
cdq
cld
mov
repz
pop
jmp
icebp
test
repnz
jne
mov
retf
xor
inc
out
push
mov
add
cmp
repnz
cld
mov
repz
shl
test
jne
test
mov
jae
xor
test
mov
xchg
ja
out
test
jbe
test
repnz
jne
mov
cmp
cld
mov
test
icebp
retf
jne
mov
test
jp
test
repnz
jne
mov
leave
jne
repnz
jne
mov
popf
cmp
retf
jne
mov
or
mov
retf
jne
mov
retf
sbb
movs
ret
retf
jne
mov
jns
sbb
popf
cmp
retf
jne
mov
dec
cmp
je
jne
mov
xchg
sbb
aam
jne
mov
mov
pushf
in
jne
mov
test
adc
or
js
retf
jne
mov
retf
jne
ror
jne
mov
xor
mov
sub
adc
jne
repz
jne
mov
ins
cmp
repnz
lods
in
cmp
repnz
jne
mov
mov
push
cmp
aas
js
dec
cmp
xchg
mov
int3
daa
mov
dec
cmp
sbb
jne
mov
sub
cld
push
sub
cmp
adc
out
retf
jne
mov
dec
cmp
mov
cmp
pop
and
daa
jnp
sahf
pop
pop
test
mov
scas
aaa
arpl
push
addr16
jb
mov
nop
cmp
repz
mov
jns
sbb
popf
cmp
mov
retf
jne
mov
retf
jne
mov
mov
inc
xchg
cmp
test
repnz
add
jne
repz
jne
mov
test
push
(bad)
retf
jne
mov
test
and
jge
repnz
icebp
retf
jne
mov
pop
popa
repz
jns
mov
das
retf
jne
mov
retf
jne
mov
test
icebp
retf
jne
mov
test
mov
push
pop
pop
lds
xchg
repnz
jne
mov
das
cmp
inc
cmp
repz
mov
sub
loop
movs
leave
jne
repz
jne
mov
retf
jne
mov
test
(bad)
push
jns
mov
xchg
out
fild
adc
shl
push
test
jmp
cld
mov
shl
popf
add
jne
repz
jne
mov
fwait
cmp
mov
add
and
sbb
repnz
jne
mov
xchg
xlat
and
test
jbe
test
repnz
jne
mov
xchg
out
in
test
jbe
test
repnz
jne
mov
clc
sub
push
(bad)
mov
or
and
popf
cmp
retf
jne
mov
xchg
scas
ss
cmp
adc
ja
push
test
jmp
cld
mov
mov
mov
and
ds
jne
mov
inc
cmp
repnz
jne
mov
test
loop
retf
jne
mov
xchg
pop
std
in
xchg
cmp
retf
jne
mov
fwait
sub
mov
retf
jne
mov
xchg
cmps
jae
jne
repnz
jne
mov
jnp
(bad)
mov
adc
mov
daa
cmp
and
xor
dec
cmp
cmp
and
sbb
hlt
inc
popa
pusha
test
cmc
jle
cmps
jmp
jno
jnp
xor
jne
repz
jne
mov
test
jecxz
jne
mov
retf
xor
jne
mov
fwait
sub
mov
retf
jne
mov
retf
and
movs
adc
jne
repz
jne
mov
jns
adc
test
mov
pop
and
mov
retf
jne
mov
xchg
call
retf
jne
mov
test
inc
icebp
retf
jne
mov
test
call
cmp
movs
leave
jne
repz
jne
mov
xor
xchg
in
jne
mov
retf
mov
and
mov
jne
mov
retf
xchg
(bad)
mov
sub
lds
das
cmp
and
or
cmps
div
cmp
test
icebp
pop
pop
and
jle
jne
mov
mov
jne
repz
jne
mov
xchg
jnp
into
test
pop
icebp
inc
cmp
mov
cmp
cli
mov
and
je
retf
jne
mov
retf
cmc
(bad)
mov
xchg
movs
test
repnz
jne
jecxz
jne
mov
stc
xor
repz
jne
mov
retf
jne
mov
retf
sbb
out
retf
jne
mov
fisttp
(bad)
fmul
jne
mov
mov
cmp
sti
retf
jne
mov
les
test
jne
mov
test
test
cld
mov
leave
jne
mov
mov
cmp
sti
retf
jne
mov
retf
jne
mov
shl
call
test
test
cld
mov
leave
jne
or
cld
mov
pop
xor
repz
jne
mov
retf
jne
mov
retf
sbb
out
retf
jne
mov
leave
jne
arpl
jne
mov
leave
jne
repz
jne
mov
mov
sbb
test
clc
jae
dec
std
test
mov
mov
mov
and
je
add
jne
mov
retf
mov
mov
repz
shl
cmp
sti
inc
cmp
lahf
push
mov
push
retf
or
jae
aaa
inc
popa
mov
mov
and
je
add
jne
mov
retf
mov
adc
and
je
add
jne
mov
cmp
and
(bad)
mov
inc
or
daa
mov
mov
xchg
mov
add
adc
retf
cdq
(bad)
mov
inc
cmp
outs
push
mov
inc
or
retf
jne
mov
js
mov
and
je
add
jne
mov
retf
and
cmps
mov
retf
jne
mov
jae
std
cld
test
push
icebp
mov
or
(bad)
icebp
pop
inc
cmp
xchg
cmps
mov
test
jecxz
cmp
repz
dec
movs
leave
jne
repz
jne
mov
fwait
sub
mov
test
mov
retf
jne
mov
imul
mov
leave
jne
repnz
jne
mov
xchg
outs
xor
cmp
mov
retf
jne
mov
xchg
mov
cdq
in
movs
leave
jne
repz
jne
mov
xchg
mov
sar
adc
retf
jne
mov
test
jne
pop
and
outs
retf
jne
mov
retf
sar
mov
retf
jne
mov
test
push
and
test
cmps
repnz
sub
sbb
jne
repnz
jne
mov
test
cmps
repnz
test
inc
xchg
rcr
in
jne
mov
retf
jne
mov
retf
jne
mov
retf
jne
mov
cmp
push
add
retf
and
out
das
mov
cmp
adc
jae
dec
jge
js
repz
push
retf
dec
mov
pop
pushf
xlat
sub
cmp
mov
jae
mov
jae
mov
jae
mov
popf
stc
push
mov
jae
mov
jae
mov
jae
mov
int3
inc
and
jae
mov
xchg
mov
add
jno
out
jae
mov
jae
mov
adc
mov
cs
loopne
cmp
jmp
adc
mov
jae
mov
jb
rcl
jae
mov
jae
mov
pop
(bad)
enter
in
mov
jb
divps
mov
pop
(bad)
jl
lods
inc
out
mov
sbb
std
xor
test
jmp
jae
mov
jae
mov
jae
mov
rol
in
repz
or
push
bound
mov
mov
jae
mov
cmp
adc
xchg
cmp
cmp
and
mov
jae
mov
xchg
jge
mov
inc
(bad)
mov
jae
(bad)
in
jae
mov
jae
mov
jp
mov
cmp
lock
jae
mov
adc
shr
mov
std
lods
cmp
jmp
lods
adc
mov
std
lods
pop
(bad)
enter
out
mov
jae
mov
jae
mov
jae
mov
jb
rol
jae
mov
jb
shr
jae
mov
xor
out
ret
pop
or
clc
jne
mov
pop
cmp
add
jae
mov
jae
mov
cmp
mov
int3
inc
sahf
mov
lock
jae
mov
jae
mov
and
lock
jae
mov
jae
mov
push
(bad)
pop
cmp
daa
mov
stos
leave
mov
cmp
mov
mov
jae
mov
mov
pop
sub
add
icebp
jmp
jae
mov
jae
mov
jae
mov
(bad)
scas
cld
add
divps
mov
jae
mov
lahf
cmp
jmp
jae
mov
jae
mov
cmp
mov
out
test
jae
(bad)
in
jae
mov
jae
mov
xor
imul
cmp
or
cmc
jle
repz
or
xor
xchg
sub
adc
mov
jecxz
dec
jo
pop
cs
jbe
dec
sbb
lahf
ss
(bad)
mov
adc
imul
push
pop
dec
pop
(bad)
lahf
sbb
or
stos
mov
inc
les
cmp
jle
mov
jo
mov
ret
pop
aam
push
shl
sbb
sar
mov
cmp
dec
es
adc
or
xor
or
mov
sub
adc
push
aad
cld
mov
retf
jp
fistp
dec
lock
repnz
call
xchg
push
call
div
push
xor
add
aas
adc
and
lods
mov
rcr
es
push
cdq
xor
ret
pop
cs
push
nop
shl
inc
push
fstp
ret
add
pop
ds
dec
and
pop
xor
pop
cmp
cmp
mov
ret
pop
cs
lock
adc
jne
xchg
xor
sbb
or
push
fld
iret
or
mov
add
int3
test
add
and
xchg
cdq
and
or
mov
or
inc
or
mov
add
add
xchg
sbb
dec
loope
aas
pop
jmp
push
push
add
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
sub
mov
int3
mov
and
fs
sub
mov
int3
adc
fwait
xlat
mov
and
mov
cmp
out
shr
cmp
(bad)
aad
int3
data16
in
cmp
out
cli
sub
sub
adc
sbb
into
mov
xor
in
and
and
and
fld
cdq
mov
xlat
mov
sbb
in
sub
xchg
int3
data16
in
and
and
add
xchg
sbb
mov
cmp
outs
push
pusha
adc
fld
mov
xlat
mov
and
add
xchg
fisubr
mov
movs
mov
jg
mov
aam
xlat
in
and
cmp
inc
iret
pusha
adc
cmp
dec
dec
cmp
or
push
inc
pop
fwait
xlat
mov
sub
adc
mov
adc
in
or
add
fwait
xlat
mov
sub
jbe
jg
mov
aam
xlat
in
and
and
sub
aas
ret
movs
inc
pop
fwait
xlat
mov
add
add
sub
jge
data16
in
and
cmp
sbb
int3
cmp
or
int3
cmp
mov
fld
mov
adc
ja
sub
data16
lea
mov
sbb
mov
int
push
dec
xor
cwde
arpl
jg
add
xor
push
adc
mov
mov
sub
mov
cld
or
lea
sbb
out
dec
cmp
inc
push
pop
or
ficom
push
mov
(bad)
mov
xor
xor
dec
(bad)
or
jg
push
fistp
arpl
ins
push
or
sub
lahf
ret
dec
sbb
(bad)
mov
ret
pop
add
add
mov
xor
ret
push
jmp
xor
push
push
and
fnstcw
fidiv
mov
push
xchg
pop
in
ja
fimul
adc
loopne
mov
inc
sub
fucomp
mov
xchg
pop
adc
xor
sbb
inc
jmp
stos
mov
push
xor
push
push
fwait
lods
in
scas
ins
loope
(bad)
test
or
sub
inc
cmp
push
push
jmp
sbb
fld
or
xor
dec
xchg
adc
push
pop
ror
dec
repnz
inc
inc
ins
stos
adc
mov
xor
imul
pop
int3
push
inc
jle
push
mov
push
adc
mov
cmps
repz
data16
hlt
popa
jmp
sub
int3
sub
mov
and
int3
sub
mov
add
loope
sub
int3
sub
mov
int3
push
adc
test
dec
sub
mov
int3
sub
mov
int3
sub
mov
hlt
jns
fadd
sub
mov
pushf
mov
pop
test
mov
mov
adc
pusha
loopne
data16
cmc
pop
repnz
arpl
mov
cmc
pop
bnd
jo
push
call
nop
cmc
pop
repnz
jae
(bad)
loopne
movs
pop
ret
pop
or
jge
sub
sub
int3
sub
mov
inc
dec
jp
dec
pop
ret
xchg
cmc
gs
mov
sub
int3
imul
xchg
in
gs
repz
mov
pop
not
in
repz
sub
mov
int3
sub
int3
sub
mov
inc
dec
pop
and
mov
int3
sub
mov
xchg
inc
xor
jb
and
xor
in
sub
mov
int3
sub
mov
int3
sub
mov
pushf
jb
mov
and
int3
sub
mov
and
inc
data16
jmp
pop
and
ins
dec
addr16
sub
int3
sub
mov
int3
sub
mov
and
mov
and
sahf
mov
pop
not
in
mov
int3
sub
mov
int3
sub
int3
sub
mov
inc
dec
pop
and
mov
int3
ret
adc
sahf
mov
pop
not
pop
not
jbe
loope
sub
mov
int3
and
fmul
sub
mov
and
int3
sub
mov
int3
sub
mov
je
pop
cli
sbb
pushf
pusha
arpl
mov
inc
xor
imul
mov
gs
sahf
mov
pop
test
mov
out
xchg
pop
test
jae
sub
inc
data16
jmp
mov
add
gs
inc
je
pop
cli
adc
cld
data16
mov
inc
xor
imul
mov
gs
cmc
sahf
mov
pop
test
rcr
out
xchg
pop
test
dec
retf
sub
inc
data16
jmp
sbb
sahf
mov
pop
idiv
gs
hlt
sahf
mov
pop
not
pop
neg
addr16
not
pop
neg
addr16
not
pop
neg
addr16
not
pop
neg
mov
div
repz
xor
repnz
xor
repnz
xor
repnz
div
repnz
cmc
xor
repnz
cmc
xor
jmp
adc
int3
sub
mov
xchg
leave
adc
or
test
adc
xchg
hlt
hlt
jmp
adc
int3
sub
int3
jnp
mov
and
int3
sub
int3
sub
mov
mov
not
jg
push
int3
sub
mov
int3
sub
mov
jg
push
adc
sub
mov
sbb
cmps
adc
sub
int3
sub
mov
mov
sub
mov
sbb
and
mov
pop
neg
gs
mov
cwde
sub
fmul
sub
mov
int3
sub
mov
int3
sub
int3
sub
mov
fs
add
pusha
jle
mov
(bad)
out
pop
retf
pop
test
jmp
pop
mul
fdiv
xchg
sbb
cmp
sub
int3
sub
mov
inc
data16
jle
outs
iret
sub
int3
sub
mov
into
sub
int3
sub
mov
mov
mov
and
int3
sub
mov
sub
test
adc
retf
cmp
cmp
gs
int3
sub
int3
sub
mov
and
not
sbb
cmp
sub
int3
jecxz
mov
and
into
sub
int3
sub
mov
je
fadd
sub
add
inc
in
add
icebp
neg
push
int
lods
or
sub
mov
and
push
add
sub
mov
jmp
ds
or
rol
inc
cmc
int3
sub
mov
fwait
adc
int3
sub
mov
adc
mov
fsubr
pop
test
sub
mov
sub
test
adc
je
int3
rol
inc
in
mov
or
mov
xchg
cmp
inc
jmp
int3
sub
mov
cld
lods
lods
or
int3
sub
mov
sub
test
adc
adc
cmp
stos
loop
add
push
lods
mov
idiv
stc
lahf
or
push
mov
not
mov
cmc
scas
cdq
dec
mov
or
(bad)
xchg
cmc
push
bound
mov
push
lods
pop
rcr
retf
pop
or
sub
mov
lds
pop
mov
gs
mov
imul
dec
dec
jb
gs
retf
sub
sahf
jb
gs
imul
adc
inc
jno
xor
repz
fs
pusha
popa
call
and
dec
test
leave
mov
imul
mov
adc
fistp
loopne
test
add
adc
lock
adc
mov
cs
clc
push
and
mov
cmp
mov
out
(bad)
inc
repnz
adc
adc
dec
les
dec
mov
shr
or
bound
pop
retf
adc
cmp
dec
inc
rol
push
xor
ds
push
sti
jne
inc
(bad)
push
xor
push
call
add
push
inc
mov
pusha
dec
xor
pop
push
adc
cli
push
sub
mov
aas
push
xor
cmp
mov
dec
jmp
adc
push
pop
push
jae
xchg
repnz
std
dec
xchg
jne
inc
jb
repz
leave
xor
mov
xchg
push
punpckldq
ret
pop
std
cmps
push
mov
rcl
leave
jno
rcr
in
xor
or
xchg
mov
repz
int
mov
dec
xchg
rcr
scas
xor
nop
mov
inc
push
(bad)
hlt
jno
sar
or
mov
nop
jbe
ret
pop
ds
dec
test
repnz
push
or
dec
rcl
lds
mov
aaa
mov
mov
adc
sti
out
adc
dec
inc
cmp
dec
inc
cmp
dec
inc
push
add
or
add
or
adc
pushf
mov
cmp
dec
inc
jbe
jge
ja
add
or
retf
mov
jne
push
inc
ja
add
or
adc
fwait
ja
add
or
add
or
mov
or
pop
dec
or
add
or
std
push
mov
outs
cmp
cmp
pop
ja
add
pop
and
sahf
ja
add
or
add
lahf
ja
dec
or
add
or
lods
push
ret
jne
pop
inc
ja
add
or
adc
add
or
add
push
pop
add
or
jecxz
or
adc
cld
ja
add
or
pop
gs
pop
add
or
add
popf
outs
leave
dec
mov
ja
add
or
jmp
push
test
ja
add
mov
ja
add
or
add
stos
test
imul
dec
inc
sub
in
cmp
dec
dec
stc
mov
pop
inc
add
mov
pop
inc
sub
std
cmp
inc
(bad)
call
retf
jle
nop
add
xor
imul
adc
cmc
mov
mov
pop
div
add
jae
mov
retf
cmp
mov
cmp
cmp
dec
dec
dec
(bad)
pop
cmp
mov
push
cmp
mov
sti
imul
jmp
repz
pop
cmps
iret
push
mov
dec
push
inc
pop
cmp
(bad)
repz
pop
aaa
or
sbb
adc
push
repz
inc
mov
icebp
inc
aas
mov
dec
leave
adc
cmps
cdq
adc
and
mov
mov
std
add
clc
scas
add
inc
mov
jmp
cmp
in
push
(bad)
fidiv
push
pop
sub
add
cmp
cmp
ror
retf
lods
aad
mov
mov
pop
mov
push
shl
pop
mov
mov
dec
sti
sbb
dec
jl
push
nop
xchg
out
cs
pop
mov
cmps
sub
cmp
lods
add
push
inc
pop
push
sub
add
sahf
ret
pop
xor
inc
pop
(bad)
inc
add
add
pop
shl
addr16
out
xchg
mov
repz
rol
div
sbb
stos
inc
and
cmp
pop
jp
push
lahf
mov
cdq
jmp
xor
mov
xchg
retf
xchg
pop
add
push
sbb
int3
out
push
jno
sub
out
mov
jb
shl
lds
bound
loop
jmp
fistp
and
dec
pop
test
fistp
cdq
stos
dec
pop
cwde
stos
dec
pop
cwde
fistp
pop
cbw
xlat
dec
outs
fst
je
lods
out
lods
out
bound
jnp
out
xchg
or
enter
pop
and
stos
pop
and
test
xor
pop
jbe
push
icebp
sbb
out
inc
frstor
push
ficom
iret
out
jge
je
imul
imul
sar
and
scas
or
sar
out
imul
xchg
outs
add
cmc
(bad)
ret
pop
mov
mov
mov
jae
mov
jae
mov
jae
mov
xor
std
mov
cmp
adc
and
cmp
mov
std
mov
cs
sti
outs
aad
inc
mov
jmp
jg
mov
(bad)
mov
cmp
dec
pop
fist
stos
sbb
xor
or
ret
dec
fwait
lods
shr
and
dec
xchg
dec
xor
in
loopne
std
and
inc
mov
pop
cmps
dec
inc
cmps
dec
ret
pop
mov
pop
push
inc
cmp
pop
sahf
and
mov
dec
mov
sbb
pop
jl
dec
xchg
popf
push
pop
push
into
push
dec
and
mov
repz
repz
push
inc
cmps
sbb
xor
xor
dec
cmp
jecxz
in
dec
(bad)
sub
cmp
xor
xchg
xor
lock
sbb
pop
or
lock
mov
or
xor
cmp
mov
push
xor
out
iret
adc
popa
fwait
lods
push
scas
cs
lock
push
mov
aaa
inc
mov
adc
jo
dec
push
pop
xchg
sahf
push
push
sti
imul
in
push
fldcw
jmp
leave
call
dec
inc
push
pop
and
mov
leave
mov
dec
jo
out
and
lock
inc
repnz
xchg
out
lods
addr16
les
xchg
out
bnd
mov
mov
inc
jp
dec
mov
jecxz
xchg
out
mov
popf
aaa
push
mov
int
(bad)
pusha
jae
mov
jae
mov
popf
outs
clc
push
icebp
ins
out
mov
cmp
and
mov
out
cmp
add
cmp
out
adc
sbb
cmp
push
add
ss
pop
lahf
repz
sbb
ds
shl
mov
dec
cmps
sub
adc
cld
in
sbb
out
inc
sbb
pop
dec
std
cmps
pop
mov
call
jae
sub
cmp
mov
(bad)
mov
cmps
popa
inc
mov
je
sti
push
movs
push
adc
xor
push
xchg
inc
xor
dec
xchg
add
loopne
icebp
ins
out
mov
retf
xor
mov
std
dec
cli
cmps
mov
pop
adc
push
clc
arpl
adc
dec
push
out
cmp
sub
xor
fidiv
cli
jne
push
push
ss
pop
push
sub
sti
jle
push
jmp
repz
push
shl
adc
daa
lods
sbb
sahf
pop
pop
push
ret
pop
xor
lods
xor
dec
inc
push
push
(bad)
sbb
pop
aad
shr
and
pop
aaa
pop
mov
push
xor
mov
push
out
push
bound
and
adc
bound
push
push
ret
pop
adc
adc
cmp
push
xor
cmc
cmp
dec
scas
lock
pop
cmp
push
mov
xchg
sub
or
test
sub
loopne
aam
pusha
pop
xor
bound
data16
inc
add
bound
data16
data16
adc
xchg
adc
mov
inc
test
nop
ror
xor
bound
data16
ret
test
mov
push
cmp
ds
sub
sub
adc
and
xchg
cmp
mov
sub
out
push
sub
inc
cmp
push
sub
scas
adc
inc
movs
jmp
push
sub
jle
add
mov
std
add
divps
mov
jae
mov
adc
mov
push
mov
push
in
mov
mov
push
jae
add
jae
mov
pushf
xchg
mov
cmp
sbb
lods
fwait
jmp
retf
mov
movs
cmp
and
push
cmp
cld
or
clc
popa
jb
aam
adc
push
adc
stc
add
mov
idiv
cmp
icebp
push
or
sbb
(bad)
push
xor
jmp
sbb
mov
sub
inc
pop
mov
or
or
sbb
cmp
pushf
repnz
shl
fnstsw
aad
inc
out
sub
lea
dec
push
mov
jns
frstor
or
dec
xor
dec
xchg
mov
repnz
inc
pusha
xor
cmp
mov
pop
jae
dec
xchg
or
pop
cmp
inc
lahf
ja
dec
xchg
test
pop
(bad)
sub
stos
and
pop
and
xor
push
jmp
pop
jbe
inc
add
cmp
repz
cs
repz
xchg
inc
push
jo
inc
pop
cmp
mov
or
push
mov
ds
clc
add
or
push
cmp
inc
retf
sbb
pop
ret
pop
or
mov
rcl
ficomp
stos
pop
xchg
and
sbb
inc
inc
aaa
inc
xchg
out
mov
xor
push
jnp
movs
inc
(bad)
pop
(bad)
popa
cli
imul
push
xor
dec
adc
mov
loop
ja
inc
in
fsubr
jecxz
je
cmp
(bad)
lods
fstp
loope
fstp
loope
cmp
in
ja
loope
cmp
ja
inc
hlt
jbe
loop
jle
jecxz
jbe
xor
jne
clc
scas
fld
lods
fstp
loope
fstp
loope
mov
push
inc
lods
fstp
loope
fstp
loope
xchg
rol
push
ins
pop
ret
cli
xchg
mov
loope
fstp
loope
sbb
sbb
pop
ss
jecxz
lods
mov
fstp
loope
mov
pusha
ins
xlat
or
jecxz
ss
jecxz
jbe
jecxz
jbe
xor
cmp
jne
jecxz
lods
mov
fstp
loope
fstp
loope
call
cli
xchg
sti
jbe
fstp
loope
fstp
loope
xchg
cmp
cmp
cmp
je
jecxz
test
loope
fstp
loope
mov
loope
(bad)
lods
fstp
loope
hlt
fisubr
loop
pop
cmps
dec
xchg
fild
mov
xchg
fst
loope
cmp
push
xchg
lods
fisttp
loope
test
daa
fidiv
push
ja
cmp
bound
mul
stos
mov
or
ins
arpl
mov
xchg
stc
mov
xor
mov
jmp
add
std
mov
cmp
dec
pop
push
lock
jae
mov
jae
mov
stos
leave
mov
cmp
or
cmc
ds
stc
adc
push
mov
jae
mov
jae
mov
std
pop
clc
push
mov
in
mov
cmp
cmc
push
mov
push
test
jmp
adc
shr
int3
push
and
in
pop
xor
mov
cld
movs
ret
mov
xor
scas
add
retf
jl
and
mov
dec
xor
mov
cld
dec
xor
dec
dec
jp
in
add
fdivr
(bad)
sub
call
sub
dec
xor
(bad)
mov
xchg
push
fstp
mov
mov
into
adc
dec
fstp
sub
adc
lods
cmps
dec
adc
fld
or
push
repz
call
mov
leave
(bad)
sbb
mov
or
sub
scas
rcr
aas
mov
xchg
add
lods
aad
add
paddb
dec
fiadd
push
ret
pop
push
inc
lahf
or
rol
pop
mov
cld
mov
and
inc
push
pop
cs
lock
call
pop
rol
stos
inc
add
shl
pop
loope
sub
jecxz
enter
xchg
jge
mov
xor
repz
cmps
fimul
ret
fisub
bound
arpl
or
je
movs
pusha
push
arpl
xchg
adc
(bad)
in
arpl
(bad)
in
mov
(bad)
lds
arpl
rol
or
in
or
push
mov
fist
or
push
test
push
loop
mov
or
push
ror
mov
push
stos
or
push
(bad)
or
push
or
push
ror
mov
push
fimul
not
or
push
bound
not
and
arpl
arpl
arpl
arpl
retf
push
mov
ret
mov
pusha
lods
arpl
dec
sub
sub
pop
je
sub
sub
sub
pop
popa
fldcw
mov
cmp
mov
inc
popf
push
sub
sub
pop
bound
out
push
jb
ret
push
je
pusha
gs
dec
mov
cs
jns
sub
sub
push
je
pusha
gs
dec
mov
xor
inc
mov
pop
inc
ds
mov
pop
add
pusha
pop
test
imul
jb
push
(bad)
mov
sub
inc
sub
pop
bound
xchg
sub
sub
pop
xchg
cmp
je
lahf
pop
lahf
adc
scas
mov
sub
pop
pusha
out
inc
xchg
or
push
sub
sub
pop
jl
sub
mov
sub
sub
pop
jl
sub
mov
sub
sub
pop
push
out
inc
popa
or
push
sub
sub
pop
nop
out
inc
inc
pop
popf
scas
popf
mul
mov
push
pop
das
pop
jae
out
mov
sub
inc
sub
pop
adc
jl
or
push
sub
sub
inc
and
pushf
scas
adc
(bad)
popa
sbb
sub
sub
repz
pop
arpl
or
mov
sub
pop
mov
ret
mov
pusha
lods
arpl
dec
sub
sub
pop
sub
sub
mov
sub
sub
pop
imul
xor
add
retf
push
retf
push
xchg
neg
sub
popa
sbb
sub
sub
sar
mov
sub
sub
pop
sub
sub
lock
daa
jge
pop
inc
shl
push
jno
outs
inc
repnz
jp
or
jo
arpl
out
jle
mov
int
push
adc
cmps
inc
cmps
sbb
push
mov
ret
push
popf
xchg
mov
inc
jmp
mov
pop
or
add
jae
mov
jae
mov
stos
leave
mov
cmp
mov
std
mov
cmp
mov
std
mov
adc
cmc
dec
scas
stc
adc
imul
popf
ret
pop
cmp
mov
jae
mov
jae
mov
retf
lahf
jae
(bad)
in
jae
mov
jae
mov
hlt
mov
std
mov
push
cld
pop
cmp
daa
mov
jae
mov
jae
mov
retf
mov
or
mov
dec
lds
(bad)
adc
ret
sbb
sub
outs
cmp
dec
jb
add
dec
cli
outs
cmp
loop
(bad)
in
cld
or
ret
dec
mov
fs
sar
in
mov
mov
push
ds
std
lods
sbb
adc
sub
xor
aas
mov
std
dec
call
mov
aas
mov
std
lods
fild
dec
ret
pop
das
cmps
in
xchg
adc
adc
sbb
scas
repz
lock
mov
call
or
in
dec
xor
mov
sub
inc
jnp
ds
xchg
icebp
push
push
cs
lock
out
adc
xor
mov
ror
mov
cmp
daa
push
mov
xchg
push
pop
adc
pop
jmp
mov
out
aas
inc
out
dec
xchg
dec
mov
cmp
sbb
pushf
jmp
dec
dec
ds
js
mov
sbb
out
rol
and
mov
pop
repnz
adc
scas
in
rcl
jmp
mov
dec
aad
leave
mov
cmps
push
xor
mov
jbe
out
imul
inc
pop
add
sar
hlt
inc
imul
jnp
hlt
inc
xor
test
mov
or
xor
mov
or
jl
or
fidivr
or
inc
call
ret
rcr
cmp
mov
and
xchg
into
sub
(bad)
jmp
pop
and
popa
inc
ret
shr
adc
ret
cmp
cli
or
jle
popa
mov
and
(bad)
xchg
xor
cs
jle
leave
jp
lds
lar
inc
repnz
shl
lods
mov
pop
inc
bound
sub
out
aaa
add
(bad)
out
sub
mov
sub
ret
dec
mov
loopne
out
add
cmp
dec
aaa
sub
jle
dec
xchg
scas
and
cmp
mov
dec
fidiv
add
dec
repnz
jno
not
mov
jle
dec
xchg
into
popf
dec
(bad)
and
jno
ret
sar
cmp
(bad)
mov
jno
jle
popa
mov
popa
fiadd
fst
push
popa
fidivr
push
xchg
mov
dec
cli
and
inc
(bad)
ret
sar
pop
stc
repnz
adc
inc
retf
out
jmp
cmp
xchg
fisub
inc
ret
jne
cli
pop
jne
loop
pop
neg
xchg
je
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jg
hlt
inc
jle
push
call
xor
mov
in
jle
add
popa
adc
jle
push
or
(bad)
rdtsc
sbb
mov
fidivr
or
xlat
xchg
pop
inc
jae
push
or
push
mov
rdtsc
fidivr
or
xor
repnz
xor
mov
or
cs
xchg
outs
xchg
test
xor
mov
or
jg
repnz
mov
test
in
inc
and
push
jae
out
addr16
loopne
jg
repz
mov
hlt
inc
xor
test
fidivr
or
jg
hlt
cmp
inc
jle
imul
cmps
mov
rdtsc
sbb
mov
fidivr
or
mov
test
ss
inc
adc
xchg
add
inc
addr16
cmp
aad
mov
dec
addr16
mov
xor
mov
or
xor
mov
or
jnp
hlt
jecxz
(bad)
rdtsc
mov
loope
add
ins
xchg
cmp
repz
or
(bad)
inc
xor
mov
or
jg
hlt
arpl
cmp
xchg
dec
dec
add
mov
(bad)
inc
xor
mov
or
xor
ficomp
fidivr
pop
xor
mov
pop
scas
adc
mov
jle
add
arpl
push
dec
and
ins
xchg
fmul
pop
mov
jle
sti
push
movs
mov
rdtsc
fidivr
or
mov
or
xchg
fcomp
xor
mov
or
imul
jg
icebp
inc
jbe
imul
movs
mov
rdtsc
sbb
dec
xor
mov
or
fist
test
mov
or
ins
xchg
fmul
pop
mov
jle
sti
push
movs
mov
rdtsc
fidivr
or
outs
xchg
cwde
mov
fidivr
or
add
xchg
xor
out
xor
mov
das
jg
test
mov
jne
mov
add
xor
test
fidivr
lea
(bad)
rdtsc
jbe
or
jg
hlt
inc
xor
mov
or
cdq
xchg
icebp
dec
jg
and
push
fwait
not
add
push
jg
in
repz
pop
stos
sbb
ret
jp
inc
imul
jg
nop
test
or
outs
stos
ss
nop
test
or
call
ret
sti
xchg
xchg
bound
mov
bound
rcl
or
xchg
loop
into
adc
pop
adc
or
xor
inc
inc
repz
or
(bad)
inc
xor
mov
or
xlat
xchg
in
add
inc
addr16
mov
xor
mov
or
repz
or
(bad)
inc
xor
mov
or
addr16
fcomp
stc
mov
loope
add
ins
xchg
cmp
jecxz
or
(bad)
inc
xor
mov
mov
test
or
mov
rdtsc
fidivr
or
jle
add
xchg
enter
hlt
inc
outs
xchg
call
xchg
mov
and
ins
add
dec
imul
or
xchg
imul
idiv
pop
or
imul
lds
jl
pop
or
xchg
fs
jg
bound
outs
xchg
call
xchg
mov
and
ins
add
inc
jg
mov
ds
mov
and
ins
add
inc
jg
je
push
imul
mov
and
ins
add
inc
jg
cmp
cs
mov
and
ins
add
inc
jg
mov
aas
leave
push
imul
mov
jle
xor
mov
rdtsc
fidivr
or
jle
add
fdiv
inc
xor
mov
or
xor
test
mov
or
jge
add
jg
test
fidivr
or
jle
cli
push
xor
mov
or
xor
test
mov
or
push
mov
push
jl
loopne
xor
test
mov
or
jl
jo
push
aas
leave
push
imul
mov
jle
xor
mov
rdtsc
fidivr
or
jle
dec
inc
jg
test
mov
or
mov
(bad)
rdtsc
fidivr
or
xor
mov
or
jp
mov
mov
(bad)
rdtsc
fidivr
int
(bad)
inc
xor
mov
or
xor
mov
or
cmp
test
cmp
inc
xchg
xchg
lock
cmps
(bad)
inc
jl
sbb
xor
mov
dec
jnp
pop
or
xchg
aam
xchg
jle
outs
jg
test
mov
lods
jle
cmp
dec
jle
cmp
xchg
loopne
sbb
mov
and
xchg
pop
mov
not
mov
jns
xor
test
fidivr
or
jle
ds
xor
mov
or
jl
loopne
xor
test
mov
or
inc
xor
push
xchg
hlt
inc
xor
mov
or
jl
jo
push
aas
leave
push
imul
mov
jle
xor
mov
rdtsc
fidivr
mov
xchg
stos
out
add
jl
push
push
jg
cli
inc
add
jl
pop
mov
mov
or
xchg
pop
mov
inc
repz
jg
repnz
aam
loopne
xlat
rcl
or
xchg
sub
(bad)
mov
mov
fidivr
or
nop
imul
xor
or
fidivr
or
sbb
push
jl
ror
xor
mov
or
jg
lock
xor
mov
or
sub
adc
fimul
or
fidivr
jmp
xor
test
fidivr
in
mov
loope
jg
hlt
inc
xor
test
fidivr
or
xor
test
mov
or
add
jl
mov
push
add
jl
push
push
ds
mov
and
ins
add
inc
jg
inc
dec
push
imul
mov
and
ins
add
inc
sub
cs
mov
and
ins
add
inc
jg
and
push
aas
leave
push
imul
mov
sub
mov
(bad)
rdtsc
fidivr
or
jle
xor
and
jl
sbb
xor
mov
or
jg
hlt
inc
xor
mov
or
add
inc
addr16
call
or
fnstsw
cmc
push
sub
sub
fidivr
or
scas
in
adc
adc
mov
inc
cmc
inc
jle
mov
jmp
dec
or
(bad)
inc
xor
mov
or
sub
sub
fidivr
dec
jae
and
jl
cwde
test
cmp
xchg
jp
cmc
jmp
ret
mov
addr16
fcomp
xchg
mov
push
sub
sub
fidivr
dec
jae
and
jl
cwde
test
cmp
xchg
jp
cmc
jmp
ret
mov
addr16
fcomp
fidivr
inc
jle
not
mov
rdtsc
fidivr
or
jae
and
jl
cwde
test
xor
xchg
jg
aam
repz
or
(bad)
inc
xor
mov
or
xlat
aad
inc
sub
sub
fidivr
or
jle
xor
nop
enter
hlt
inc
add
dec
addr16
mov
icebp
pop
mov
push
xor
mov
pop
jle
cld
push
jg
repnz
xor
mov
or
add
ins
xchg
cmp
repz
or
(bad)
inc
xor
mov
or
jg
in
xor
test
mov
or
jg
fadd
fidivr
or
(bad)
popf
ret
(bad)
in
ins
xchg
adc
test
cdq
jmp
(bad)
inc
xor
mov
or
aas
imul
mov
or
mov
xor
mov
dec
jno
and
ins
xchg
sub
jle
icebp
xchg
aaa
popf
or
ret
pop
inc
addr16
mov
xor
mov
or
addr16
js
xor
mov
or
add
add
fcomp
stc
imul
mov
xor
mov
loope
xchg
in
inc
dec
or
(bad)
inc
xor
mov
or
mov
(bad)
dec
jle
xor
xchg
and
xlat
aad
inc
sub
sub
fidivr
or
add
inc
addr16
enter
mov
or
mov
icebp
hlt
inc
xlat
xchg
pop
inc
aas
imul
xor
test
fidivr
or
fistp
inc
jle
not
mov
rdtsc
fidivr
or
adc
mov
inc
cmc
inc
push
mov
adc
(bad)
inc
xor
mov
or
sub
sub
fidivr
jmp
xlat
xchg
pop
inc
jae
or
(bad)
inc
xor
mov
or
xchg
cwde
not
stos
leave
hlt
dec
aas
imul
xor
test
fidivr
or
mov
shl
inc
aas
imul
xor
test
fidivr
jmp
xlat
xchg
pop
inc
jae
or
(bad)
inc
xor
mov
or
mov
das
dec
jle
xor
and
mov
xor
mov
or
jle
xor
xchg
and
sub
sub
fidivr
or
inc
xor
jg
hlt
inc
inc
dec
or
(bad)
inc
xor
mov
or
outs
add
jg
mov
inc
nop
imul
xor
or
ds
jecxz
xchg
in
sub
sub
fidivr
or
inc
test
inc
jg
and
fild
cmc
push
add
add
clc
pushf
xor
mov
or
jg
icebp
inc
mov
mul
xlat
xchg
in
sub
sub
fidivr
dec
movs
nop
enter
test
xlat
lods
xor
mov
or
jle
cmc
jmp
dec
or
(bad)
inc
xor
mov
or
jle
xor
ins
xchg
mov
aas
imul
xor
test
call
jg
inc
inc
fistp
pop
inc
jle
cmc
push
add
add
clc
pushf
xor
mov
or
outs
mov
jg
cmp
inc
stos
xchg
mul
xlat
xchg
in
sub
sub
fidivr
or
in
enter
test
xlat
lods
xor
mov
or
jle
mov
inc
pop
jnp
xchg
add
mov
xor
mov
or
inc
jnp
adc
add
sbb
jmp
or
fidivr
or
add
inc
addr16
enter
mov
or
jle
mov
jmp
dec
or
(bad)
inc
xor
mov
push
jnp
hlt
inc
xor
test
mov
or
jl
lock
stos
(bad)
inc
mov
push
or
(bad)
rdtsc
cmp
and
xchg
mov
xor
mov
in
pop
add
sar
enter
test
xchg
fs
cwde
test
in
outs
xchg
sar
or
outs
xchg
add
adc
push
mov
xchg
pusha
mov
sub
inc
ret
pop
fs
std
mov
jae
mov
fwait
dec
mov
ret
pop
push
(bad)
pop
cmp
daa
mov
stos
leave
mov
cmp
jmp
retf
(bad)
mov
mov
cmp
mov
mov
shl
mov
adc
rol
dec
(bad)
mov
xor
ja
pop
dec
sahf
jmp
jmp
sahf
sti
cli
imul
out
jp
or
xchg
imul
aad
int
popa
sti
xchg
mov
adc
mov
mov
fdiv
sbb
xor
xchg
movs
push
sti
jne
dec
rcr
cdq
xor
cmp
pop
adc
cmp
sbb
xchg
mov
add
iret
xchg
std
dec
xchg
cmc
inc
dec
xor
push
dec
aam
adc
leave
or
cmps
aas
mov
std
lods
div
push
push
and
mov
(bad)
mov
and
push
retf
adc
mov
(bad)
cmps
sbb
or
aam
add
lds
into
hlt
fiadd
scas
ret
pop
test
mov
xor
dec
cmps
dec
test
xlat
adc
scas
sub
inc
pop
lock
sub
js
call
or
cld
dec
sahf
test
ret
pop
aad
mov
rol
xchg
in
iret
sbb
pop
not
push
(bad)
div
cmps
fnstsw
aaa
outs
iret
cs
dec
mov
in
push
out
stos
inc
sbb
out
stos
inc
sbb
out
stos
nop
stos
inc
sbb
push
out
xor
or
jle
stos
inc
lods
out
stos
inc
sbb
in
sbb
call
outs
call
in
seta
neg
imul
rep
mov
inc
mov
adc
mov
test
mov
std
mov
and
lods
mov
jae
mov
hlt
mov
std
mov
xor
mov
sub
mov
or
sub
adc
mov
sti
arpl
dec
(bad)
nop
inc
push
rcl
add
add
imul
outs
push
stos
popa
mov
mov
std
dec
(bad)
shr
out
inc
ret
and
and
stos
addr16
rol
mov
sbb
(bad)
jnp
dec
(bad)
call
scas
mov
pop
data16
push
sti
mov
aas
mov
call
inc
out
mov
ret
pop
aas
mov
(bad)
mov
mov
test
mov
cmp
test
dec
xor
inc
(bad)
dec
ret
mov
dec
dec
and
mov
call
mov
test
push
in
aad
mov
jnp
inc
inc
(bad)
cld
add
adc
fidiv
pop
mov
push
out
push
and
loopne
je
bound
pop
mov
call
sub
pop
fdivr
cdq
iret
xor
dec
call
pop
leave
pop
sbb
(bad)
push
sbb
adc
or
movs
xor
aad
pop
mov
mov
jo
mov
mov
inc
mov
xlat
or
in
fst
jmp
stos
adc
push
cmp
pop
mov
push
mov
pop
xchg
je
push
aas
bound
jl
jge
or
jle
cmp
dec
ja
fs
jne
xor
inc
xor
jne
mov
cmp
jl
das
or
nop
repz
call
imul
aam
fwait
dec
inc
inc
cmp
test
aam
fwait
cmps
dec
sub
inc
inc
cmp
test
in
fwait
into
dec
sub
inc
dec
cmp
test
in
fwait
push
dec
sub
inc
dec
cmp
jle
fimul
std
fwait
cmp
(bad)
push
or
repz
js
sub
xor
inc
xor
jne
fs
jne
xor
inc
xor
jne
xor
jne
rol
jne
mov
cmp
xor
jne
xor
jne
jle
dec
std
mov
cmp
jl
das
or
nop
repz
call
imul
aam
fwait
dec
inc
inc
cmp
test
aam
fwait
cmps
dec
sub
inc
inc
cmp
test
in
fwait
into
dec
sub
inc
dec
cmp
test
in
fwait
push
dec
sub
inc
dec
cmp
jle
fimul
std
fwait
cmp
(bad)
push
or
repz
js
sub
xor
inc
xor
jne
xor
jne
rol
and
dec
ja
xor
jne
rol
jne
mov
cmp
xor
jne
xor
jne
mov
pop
clc
dec
pop
or
cmp
jge
out
xor
dec
ret
or
cmp
mov
sub
ret
jge
jmp
push
pushf
repz
pop
(bad)
or
cmp
js
stos
aaa
push
clc
lds
jp
cmp
jbe
stos
aaa
push
cwde
lds
jp
cmp
jnp
stos
aaa
push
mov
or
cmp
pop
stos
aaa
push
stos
cmc
mov
aas
mov
cmp
jle
push
xor
inc
xor
jne
imul
jne
xor
jne
imul
repz
xor
inc
fadd
jne
jle
cmp
mov
int
inc
dec
cmp
jle
imul
(bad)
cmp
enter
jg
repz
outs
cmp
mov
lea
or
jge
cmps
sbb
dec
aas
or
cmp
ret
jge
cmps
sbb
dec
aas
or
xor
xor
jge
xchg
sbb
dec
aas
or
ds
sub
sbb
dec
aas
or
ds
call
ret
jge
loope
das
dec
daa
or
cmp
push
jne
imul
jne
imul
repz
xor
inc
xor
jne
rol
cmp
cld
dec
pop
or
cmp
loop
(bad)
or
cmp
push
clc
lds
jp
cmp
jo
stos
aaa
push
cwde
lds
jp
cmp
push
mov
or
cmp
jnp
stos
aaa
push
stos
xchg
ret
jge
cmps
sbb
dec
aas
or
cmp
ret
jge
cmps
sbb
dec
aas
or
xor
xor
jge
xchg
sbb
dec
aas
or
ds
sub
sbb
dec
aas
or
ds
paddusb
(bad)
or
sbb
ja
rol
jne
shl
daa
or
add
call
or
pop
neg
mov
or
sbb
hlt
and
int3
push
dec
fwait
jle
add
mov
aaa
cmp
mov
std
mov
imul
pop
adc
out
cld
test
cmp
cld
imul
outs
cld
and
cld
jge
(bad)
cld
and
cld
and
cmp
cld
jno
jle
and
cld
and
cmp
push
cld
add
cmp
stos
cld
fnstcw
std
ins
cmp
cld
cmp
cmp
sub
jge
ds
add
cmp
cld
cmp
cmp
cld
add
cld
xor
cmp
std
sbb
push
cld
add
cmp
cld
in
cmp
cld
imul
cld
and
cld
and
cmp
std
sbb
outs
std
lods
cmp
cmp
test
cmp
or
int3
xchg
(bad)
jmp
fcom
and
xor
add
pop
sub
es
xor
sbb
push
xchg
test
daa
movs
movs
scas
fdivr
fidiv
outs
pop
xchg
call
mov
pop
cmp
aaa
mov
shr
jmp
loopne
mov
add
adc
out
pop
mov
std
mov
cmp
std
in
sub
pop
jae
mov
push
mov
cmp
and
jae
mov
sub
pop
jae
mov
jae
mov
cmp
mov
int
xchg
mov
jae
mov
jae
mov
sbb
push
cmp
inc
ds
cmps
test
jae
(bad)
in
jae
mov
es
std
add
divps
mov
jae
mov
lahf
or
xlat
push
jae
mov
jae
mov
retf
jbe
scas
cmp
cdq
mov
cmc
sub
leave
nop
mov
lock
jae
mov
jae
mov
jle
lock
retf
call
xchg
mov
add
jno
out
jae
mov
and
xor
mov
jae
mov
lahf
cmc
mov
ret
pop
jae
mov
jae
mov
ss
jae
mov
jae
mov
lahf
sbb
xlat
push
jae
mov
jae
mov
cmp
mov
out
test
jae
(bad)
in
jae
mov
push
xchg
mov
xor
imul
xor
pop
mov
jne
mov
std
movs
inc
shl
mov
cdq
lods
mov
mov
sbb
push
cmp
mov
stos
leave
nop
mov
mov
or
cmp
lock
fwait
add
cld
mov
cmp
mov
or
mov
push
mov
mov
jae
mov
jae
mov
aas
mov
(bad)
fnstenv
std
add
js
mov
xchg
cld
push
stos
leave
nop
mov
mov
lock
cmp
xchg
lahf
fdiv
dec
xchg
test
xchg
jle
mov
dec
push
hlt
jne
add
pop
cmp
and
jae
mov
push
xchg
(bad)
fidiv
std
or
leave
mov
hlt
mov
in
and
mov
jmp
jbe
imul
pop
cmp
and
jae
mov
stos
leave
nop
mov
lock
jae
mov
jae
mov
jae
jmp
test
icebp
pop
pop
jae
mov
jae
mov
pushf
(bad)
mov
mov
jmp
ds
inc
jno
jmp
jae
mov
jbe
pop
cmps
jae
(bad)
in
jae
mov
xlat
mov
shl
repnz
out
retf
push
cmps
cmp
mov
cmp
dec
dec
push
pop
inc
adc
mul
imul
mov
adc
imul
arpl
sbb
retf
push
clc
and
iret
push
jmp
pop
(bad)
mov
cmp
retf
jnp
aad
out
mov
ret
inc
inc
cmps
add
cld
adc
mov
push
add
fldenv
push
mov
cld
mov
mov
push
repz
mov
mov
std
lods
and
adc
push
femms
sub
stos
inc
mov
pop
push
and
inc
and
sub
sub
movs
push
pop
fwait
lods
in
lods
cwde
xchg
push
mov
cmp
sbb
(bad)
shr
dec
xor
mov
sbb
out
mov
and
sub
jmp
fs
(bad)
mov
push
mov
push
sbb
push
cli
iret
xchg
add
cs
rol
inc
push
jle
inc
mov
rol
cmps
repnz
shl
pop
das
mov
pop
or
inc
add
xchg
movs
add
push
or
fcom
mov
outs
or
jb
test
call
add
test
sbb
jl
xchg
fs
jl
sub
adc
iret
call
adc
neg
cmp
into
in
adc
(bad)
lods
fs
test
lea
xchg
lea
lahf
icebp
sub
(bad)
or
ret
mov
imul
adc
iret
mov
pop
xchg
loope
xor
in
adc
imul
ja
icebp
adc
into
mov
daa
sahf
lds
jmp
cmp
xchg
adc
iret
loopne
inc
iret
mov
and
loopne
ret
pusha
daa
repnz
xor
fldcw
iret
les
iret
in
popa
xor
in
jg
icebp
adc
imul
cmp
sahf
lds
xor
fldenv
shl
icebp
cmp
xlat
rcl
and
sti
movs
sub
lods
sbb
jmp
sub
aad
pop
loop
jl
sub
cmp
faddp
js
neg
js
fcmovnu
jns
xchg
and
ret
pusha
daa
repnz
xor
fnstsw
xchg
adc
iret
call
adc
jmp
cmp
ror
iret
call
adc
iret
fsub
div
and
loopne
add
(bad)
xor
fst
mov
ret
jmp
and
ja
movs
sub
lods
sbb
jmp
sub
aad
daa
loop
je
neg
and
jnp
adc
repz
adc
div
jne
and
cs
or
(bad)
sub
loopne
sbb
test
sub
frstor
xchg
sub
sub
xor
fst
ret
sub
repz
cs
sub
daa
(bad)
fst
aas
ret
fstp
jmp
adc
lahf
rcl
xor
addr16
fnstcw
push
cmp
iret
lods
pusha
and
shl
movs
fs
sub
loopne
sbb
in
or
arpl
lods
pusha
xor
fnstsw
fisubr
adc
sahf
mov
adc
into
mov
daa
mov
xor
retf
in
div
icebp
fs
out
rcr
fnstcw
fwait
mov
imul
jl
iret
loopne
ja
shr
jmp
sub
inc
adc
(bad)
sub
pop
icebp
inc
repnz
xadd
daa
sahf
icebp
xor
fldenv
xchg
loope
imul
cmp
iret
in
cmp
mul
and
lahf
icebp
adc
fcomi
fs
out
rcr
fnstcw
fwait
mov
pop
iret
call
imul
xchg
gs
in
and
mov
and
cmc
sub
retf
test
adc
(bad)
aad
daa
loop
sub
inc
jno
pop
repz
daa
retf
jae
icebp
js
xchg
adc
inc
js
fld
fs
repnz
fst
iret
call
or
jnp
fcomp
sbb
in
cmp
ret
leave
fs
mul
add
in
adc
shl
iret
fdivr
xor
fisttp
xchg
sub
xor
in
outs
mov
sbb
stos
in
sbb
movs
sub
iret
loopne
daa
jmp
daa
retf
jg
lods
and
pop
div
sbb
jmp
and
lods
adc
icebp
sub
adc
fcomi
sbb
xchg
or
lahf
lds
iret
call
or
xor
mov
pop
iret
cld
or
ja
fsubr
iret
movs
xchg
sbb
fld
sahf
icebp
pusha
aaa
outs
loope
add
hlt
sub
xchg
icebp
js
repz
mov
ja
fsub
xchg
(bad)
iret
cld
sub
fld
sub
jmp
push
daa
sahf
icebp
jo
out
loope
xor
in
cmp
addr16
lods
cmp
sahf
icebp
sub
iret
inc
cmp
in
daa
jmp
imul
or
iret
mov
adc
iret
sar
jmp
jge
frstpm(287
sbb
sahf
sar
lds
xor
shl
or
(bad)
loope
ja
fs
lahf
icebp
jns
lahf
in
adc
lods
cmp
repnz
cmp
iret
shl
and
pop
iret
mov
sbb
mov
daa
into
shl
lods
pusha
imul
sub
iret
hlt
cmp
retf
inc
lahf
fldenv
repnz
xor
shr
adc
jnp
lods
cmp
retf
daa
retf
aaa
adc
fs
repnz
sbb
retf
aad
pop
lahf
sar
mul
xchg
jmp
in
and
jns
and
and
in
jbe
test
sub
xor
rcl
cmps
mov
sub
(bad)
jbe
sub
daa
jmp
jbe
icebp
adc
out
lods
sub
jmp
adc
jmp
daa
repnz
jmp
or
xchg
loope
xor
in
sub
iret
fcom
jnp
fnstcw
jmp
pop
jecxz
jns
frstpm(287
sub
(bad)
test
adc
into
mov
aaa
xlat
ror
iret
mov
and
fsub
icebp
cmp
iret
mov
adc
iret
add
ja
movs
sub
lods
sbb
jmp
sub
aad
daa
loop
js
retf
std
dec
sbb
in
inc
jecxz
pusha
daa
repnz
adc
fisttp
call
sub
(bad)
mov
ret
sub
repz
sub
fnstsw
repnz
inc
lahf
fldenv
repnz
and
fldenv
pop
fwait
lods
fs
mov
aaa
iret
loopne
inc
iret
movs
or
iret
mov
pop
iret
cld
sub
xor
mov
and
clc
or
add
xchg
adc
repz
sbb
ret
fnstcw
fwait
mov
pop
iret
mov
adc
iret
mov
xor
jmp
or
lahf
lds
outs
iret
mov
sub
iret
hlt
xchg
pop
sbb
xor
ror
cld
imul
stos
shr
and
icebp
cmp
repz
sub
mov
adc
pop
iret
push
pusha
sbb
movs
fs
sub
fcomi
movs
pop
stos
in
daa
retf
adc
loope
xor
fst
add
jns
xlat
in
add
in
add
icebp
adc
and
and
cmc
or
jmp
jns
mul
cmp
xchg
dec
imul
sub
outs
xchg
loope
daa
retf
pop
xchg
sar
in
fs
test
sub
lods
pusha
daa
repnz
xor
lods
sbb
xor
add
in
cs
xor
frstpm(287
sub
xchg
sub
fldenv
repnz
and
fldcw
outs
lahf
lds
jmp
sub
sbb
jp
mov
daa
jmp
cmp
loope
es
adc
xlat
shr
(bad)
jo
repz
ret
mov
outs
iret
cld
push
jb
fnstcw
iret
adc
xchg
pusha
daa
(bad)
icebp
inc
mov
sti
fldenv
inc
inc
and
sbb
adc
sbb
(bad)
mov
inc
ret
fnstenv
xchg
or
pop
xlat
lods
sbb
shl
sub
div
cmp
xlat
icebp
sbb
xchg
or
ret
lods
jns
frstpm(287
sub
retf
mov
add
lods
sub
test
cmp
lahf
shl
into
fsubr
jbe
movs
xor
repz
inc
xchg
icebp
pusha
imul
adc
xlat
icebp
sbb
xchg
or
(bad)
lods
sbb
repnz
outs
retf
call
movs
cmp
jmp
ja
icebp
cmp
call
ja
icebp
jl
jmp
adc
jmp
pop
sbb
gs
inc
in
push
call
pop
sbb
gs
inc
in
inc
xchg
cmp
jmp
sub
iret
les
xor
in
jbe
(bad)
fcmovnbe
pusha
add
and
fcomi
dec
sbb
in
sub
shl
sahf
icebp
pusha
aaa
outs
loope
add
hlt
sub
xchg
icebp
js
repz
mov
ja
fsub
xchg
(bad)
iret
cld
sub
fld
cmp
(bad)
icebp
adc
iret
lock
and
cmc
sub
div
sub
jmp
cmp
(bad)
icebp
or
dec
cmp
pop
xchg
in
addr16
lods
cmp
sahf
icebp
sbb
xlat
shl
lahf
imul
outs
div
adc
add
into
mov
xor
loope
daa
into
loopne
ja
fnstsw
retf
add
(bad)
div
sbb
retf
adc
in
pop
shl
and
iret
loopne
daa
fisubr
sub
lahf
lods
cmp
cmp
ja
ins
or
inc
fnstcw
and
xor
mov
pop
iret
cld
je
(bad)
fldcw
and
stc
pusha
xor
cmc
sub
sub
sbb
in
addr16
call
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
dec
std
jns
xchg
imul
stos
ror
pop
iret
cld
or
retf
aad
xor
cmc
cmp
div
xor
imul
cmp
iret
in
adc
jmp
sub
idiv
js
sti
loope
das
repz
repnz
stos
inc
rcl
repz
(bad)
ja
fldenv
xchg
loope
imul
sub
fcomi
or
not
imul
stos
shl
lahf
in
adc
inc
adc
fld
cmp
neg
adc
lahf
shl
sub
fstp
and
sar
aad
add
push
je
(bad)
adc
repz
ret
mov
and
test
adc
repz
jbe
mov
pop
repz
pop
frstpm(287
pusha
pop
lahf
icebp
int3
sbb
mov
sub
cmc
fs
out
loope
pop
(bad)
icebp
cmp
iret
lods
jo
fcmovnb
sub
xchg
loope
daa
jmp
and
rcl
shr
mul
cmp
stos
shr
and
icebp
and
xchg
cmp
sub
daa
fsubp
sub
xchg
imul
movs
sbb
dec
push
imul
and
mov
push
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
pop
xchg
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
mov
xchg
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
mov
fcmovnu
sub
repnz
cmps
dec
fs
cmps
dec
fs
out
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
add
mov
cmps
fisubr
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
test
imul
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
test
imul
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
test
imul
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
test
imul
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
mov
xchg
adc
iret
ins
test
cmps
dec
fs
cmps
dec
fs
call
test
cmps
dec
fs
cmps
dec
fs
test
adc
lds
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
test
adc
lds
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
mov
xchg
adc
iret
ins
test
cmps
dec
fs
cmps
dec
fs
call
test
cmps
dec
fs
cmps
dec
fs
mov
xchg
adc
iret
ins
test
cmps
dec
fs
cmps
dec
fs
test
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
mov
xchg
adc
iret
ins
test
cmps
dec
fs
cmps
dec
fs
mov
cmp
lahf
imul
scas
shl
movs
sbb
mov
mov
pop
push
pusha
pop
lahf
icebp
sub
xchg
nop
sbb
lods
push
ja
pop
pusha
or
push
adc
fldcw
push
fnstcw
retf
xor
fnstcw
daa
mov
adc
fnstcw
fcmovnu
sbb
iret
call
cmp
jmp
pop
fcmovnu
xor
frstpm(287
sub
icebp
sbb
jmp
aaa
retf
mov
jl
sub
adc
ret
xor
jmp
sbb
lahf
in
pop
sahf
icebp
pushf
imul
test
sub
repz
retf
xor
mov
jmp
popf
xor
in
cmp
xchg
imul
sar
(bad)
loope
sub
lds
and
rcr
jae
fisttp
jmp
sub
and
retf
mov
sbb
(bad)
scas
jnp
pusha
scas
jmp
sub
jmp
pop
push
aad
daa
fcmovbe
pusha
xor
mov
jmp
pusha
add
ins
sub
sub
es
js
mov
pop
mov
adc
fnstcw
test
ja
(bad)
dec
in
or
xchg
adc
imul
jmp
jmp
sub
call
js
fld
sub
shr
mov
fcmovnu
gs
in
aaa
iret
sub
icebp
and
sti
in
adc
aam
ds
cmp
repnz
fst
ja
and
ja
in
pop
iret
push
or
pop
lea
inc
ror
lods
adc
(bad)
loope
add
jmp
sbb
and
retf
stc
adc
iret
sub
sbb
in
daa
call
xor
loope
add
lock
mov
pop
ret
mov
mov
and
ins
sub
ret
leave
pusha
daa
sahf
loope
ja
loope
xchg
sbb
bound
test
add
stc
adc
icebp
sbb
xor
fldenv
(bad)
icebp
in
iret
pop
add
xchg
adc
retf
in
mov
add
in
push
aad
es
sub
fcmovnu
cmp
lahf
lods
sub
jmp
or
xchg
mov
sub
jecxz
sub
fcmovnbe
adc
fwait
lods
or
iret
ins
or
ret
fprem
xchg
iret
pusha
add
(bad)
movs
cmp
jmp
cmp
frstor
es
icebp
sub
repnz
fldcw
jmp
cmc
xor
mov
pop
fcmovbe
adc
push
in
lahf
in
pop
iret
push
sub
and
in
ja
leave
js
into
sub
call
cmp
jmp
xor
in
daa
xchg
icebp
sub
sti
movs
sbb
jmp
pop
repz
stos
fcmovnbe
pushf
mov
cmp
out
sub
aad
sbb
jl
sbb
in
pop
call
jmp
dec
pop
sahf
lods
sub
iret
push
movs
xor
in
xor
mov
mov
inc
popa
or
fucomi
adc
repz
ja
in
ja
in
neg
aad
daa
retf
xor
mov
xchg
retf
shl
in
cmp
iret
push
sub
aad
jp
in
es
mov
sub
shl
cmp
lahf
lods
sub
lahf
aad
xor
aad
mov
cmp
xchg
dec
pusha
sub
cmp
add
in
add
in
es
popa
xchg
or
fcomi
sub
jmp
mov
mov
daa
push
lds
pop
loope
das
iret
push
or
iret
ins
or
ret
fprem
xchg
iret
pusha
fs
into
shl
fnstcw
daa
sahf
icebp
sub
(bad)
jmp
js
ffreep
mov
out
in
jmp
popf
mov
dec
clc
outs
jmp
cmp
retf
cmc
sub
shr
jmp
js
ffreep
mov
out
in
jmp
cdq
sbb
cmc
ins
es
jo
xchg
xchg
and
jnp
mov
pusha
and
mov
pop
fdivp
js
div
or
ret
fldcw
lahf
lods
adc
fld
mov
jnp
sub
repz
or
iret
ins
or
ret
fprem
xchg
iret
pusha
sub
shl
pop
cmp
ja
icebp
adc
iret
inc
pusha
pop
(bad)
fstp
pop
div
or
dec
inc
sbb
clc
sbb
(bad)
loope
sbb
mov
ja
frstor
xchg
cli
push
or
addr16
aaa
iret
pop
or
iret
sub
add
jmp
adc
jmp
scas
repz
jmp
sub
push
push
sub
jmp
adc
jmp
cmp
into
sub
pop
iret
push
adc
fcompp
sub
lods
sbb
pop
popa
or
sbb
sub
jmp
test
repz
xchg
clc
xchg
iret
ins
adc
iret
push
adc
retf
mov
aaa
sub
sti
fldcw
push
repnz
daa
repnz
sbb
jnp
sub
xchg
adc
inc
push
cmp
lahf
lods
or
in
and
push
pusha
daa
xchg
icebp
or
and
sub
xchg
loope
loop
shl
fwait
icebp
or
in
pop
jmp
je
fld
add
retf
stos
out
mov
cmp
lahf
aad
add
les
inc
cmp
test
lods
pop
jmp
pusha
ja
icebp
or
in
and
push
adc
repnz
sub
adc
sahf
(bad)
ja
fldenv
bound
push
or
in
add
push
sub
jmp
aas
retf
aad
push
retf
cmps
mov
or
inc
fprem
xchg
iret
pusha
sub
iret
sub
sub
lods
adc
repz
shl
fsubp
sbb
ret
ja
ins
or
inc
fprem
xchg
iret
pusha
or
iret
in
or
ret
fstp
retf
xchg
ret
add
cmp
div
sbb
in
xor
fst
sub
shl
jmp
sbb
jmp
sbb
lahf
rcl
retf
ja
ins
or
inc
fprem
xchg
iret
pusha
sub
iret
push
or
iret
in
or
ret
fstp
retf
mov
sub
movs
pushf
mov
shl
sbb
fldcw
outs
ret
fst
repz
or
mov
sub
dec
push
fs
test
or
ret
fprem
xchg
iret
pusha
adc
into
sar
lds
(bad)
fst
iret
inc
fs
cli
icebp
sub
retf
rol
es
add
je
xchg
mov
jl
repz
imul
sub
imul
adc
shl
repz
ret
test
adc
imul
cmp
fisubr
adc
div
mov
add
in
out
jnp
adc
repz
adc
data16
xchg
in
(bad)
in
pop
into
pop
cmp
iret
jo
sbb
(bad)
mov
inc
aad
aaa
retf
fld
cs
mov
adc
lahf
rcl
retf
aad
mov
shl
sbb
fisttp
dec
in
js
mul
sub
repz
imul
ins
data16
dec
xchg
sub
xchg
icebp
cmp
fcmovnbe
movs
sbb
std
or
iret
sub
ja
fldcw
scas
repz
jmp
sub
push
push
popa
jp
movs
and
and
daa
div
adc
div
js
fld
inc
sbb
cmp
rcl
repnz
fnstcw
(bad)
popf
and
in
es
aad
ja
fldenv
iret
push
pusha
and
aad
sbb
mov
mov
push
push
js
psllw
sbb
cmc
sbb
retf
push
mov
adc
faddp
pusha
xor
mov
mov
repnz
pushf
jae
jmp
lods
scas
jmp
sub
iret
push
mov
push
and
addr16
and
lahf
loope
scas
jmp
and
jmp
sub
push
push
adc
iret
push
cmp
lahf
lods
or
jmp
adc
sar
push
pusha
aaa
mul
adc
frstpm(287
jmp
daa
ret
outs
jnp
adc
rep
sub
jmp
stc
sbb
in
xor
in
arpl
fldcw
jle
icebp
sbb
sub
daa
jmp
jle
sar
mov
pop
(bad)
fstp
addr16
lods
or
repz
daa
retf
daa
pop
test
cdq
xor
(bad)
loop
aad
arpl
ins
(bad)
pmulhw
and
loope
ja
dec
inc
sbb
shl
loope
ja
frstor
xchg
cli
push
adc
inc
and
lahf
loope
scas
jmp
and
jmp
sub
push
push
pusha
and
cmp
(bad)
stos
in
xor
push
ins
xchg
outs
fstp
sub
iret
push
adc
sbb
xor
mov
xor
pop
sub
repz
pop
(bad)
movs
daa
into
and
mov
jnp
or
sub
rcl
lahf
rcr
jmp
adc
shl
loope
ja
frstor
xchg
cli
push
adc
inc
and
lahf
loope
xchg
jmp
or
retf
jmp
sub
fwait
and
jmp
or
retf
jmp
jno
jp
popf
ja
in
ss
sub
fld
pusha
imul
cmp
iret
xor
sbb
frstor
mov
mov
or
dec
inc
sbb
shl
loope
ja
frstor
mov
fldcw
sbb
frstor
add
in
es
dec
daa
inc
mov
sub
adc
repnz
jnp
sub
xchg
jge
jp
sub
out
icebp
cmp
mul
sub
into
aam
xor
cmp
sti
hlt
cmp
sti
pop
fs
shl
adc
iret
push
cmp
lahf
lods
sub
call
and
fwait
icebp
mov
in
inc
push
mov
sub
sbb
frstor
xchg
cli
push
or
ins
or
ret
fstp
iret
jo
inc
retf
test
pusha
xor
mov
scas
retf
aad
sbb
mov
mov
push
push
adc
iret
push
cmp
lahf
lods
in
jae
in
sub
in
gs
dec
sub
scas
mov
xor
mov
aaa
xchg
loope
pop
into
test
jae
aam
ja
icebp
add
sahf
mov
add
fcom
lahf
jmp
fs
retf
test
adc
shl
repz
lahf
jmp
fs
retf
test
cmp
das
mov
mov
adc
fldcw
xchg
dec
jae
cmp
sub
xor
pop
out
fisttp
repz
sub
test
fxam
ja
in
jae
push
adc
icebp
gs
dec
sub
repz
aaa
xchg
loope
add
sub
div
sbb
div
sub
xchg
in
stos
jmp
pusha
(bad)
iret
inc
stc
jg
lods
in
jnp
sub
div
movs
pop
cmps
in
aaa
repz
sbb
inc
icebp
add
push
icebp
js
les
sbb
mov
add
sahf
icebp
js
div
popa
bound
sub
lahf
in
daa
stos
loope
daa
dec
mov
js
repz
pop
(bad)
movs
pop
into
and
iret
push
sub
cmp
stos
fld
sub
mov
sbb
icebp
sbb
sahf
fst
sub
loope
xor
mov
scas
xchg
adc
data16
ins
jbe
test
cli
mov
push
jnp
fsub
add
jmp
and
mov
fldln2
jae
dec
pusha
add
cmc
sub
das
in
jae
jmp
js
inc
rcl
repnz
and
es
jno
mov
jne
sahf
ror
xchg
rcr
sub
ja
in
ja
icebp
jno
jmp
adc
imul
pusha
pop
xchg
icebp
and
into
in
js
les
sbb
mov
xor
xchg
adc
ret
test
ret
fnstcw
retf
jmp
xor
xchg
adc
ret
test
jnp
sub
retf
sar
icebp
cmp
retf
shl
pop
jmp
sbb
sub
adc
repnz
cmp
cmp
jnp
loope
es
sub
loope
xor
mov
stos
xchg
gs
dec
adc
(bad)
movs
fs
lahf
sbb
sti
movs
cmp
neg
movs
pop
jnp
add
repz
pusha
xor
ins
jmp
es
in
sub
adc
repnz
sub
xor
aad
outs
div
push
jnp
fsub
xchg
fstp
pop
add
outs
fcmovu
and
inc
cli
push
movs
pop
stos
in
pop
retf
lods
sub
ret
icebp
xchg
ja
in
and
in
sahf
iret
dec
popf
mov
cmp
push
lds
inc
mov
jae
in
es
in
xor
pushf
mov
movs
inc
xor
cmp
push
loope
mul
js
iret
pop
sub
retf
daa
into
pop
cdq
daa
bound
cmp
addr16
xor
aad
outs
div
push
jnp
fsub
xchg
fstp
pop
add
outs
fcmovu
and
cmp
js
imul
or
iret
ins
or
ret
fprem
xchg
iret
pusha
sub
repz
daa
(bad)
sub
out
sub
div
or
xchg
sub
addr16
cmp
ret
daa
retf
xor
mov
xor
lods
or
repz
daa
retf
sub
fld
out
icebp
or
out
dec
jl
and
xor
in
sbb
mov
sbb
in
add
mov
adc
call
pop
rep
sub
jmp
mov
and
fst
jg
cmp
retf
daa
into
and
daa
outs
mov
adc
inc
loope
mov
loope
addr16
mov
add
test
sbb
retf
xchg
ret
and
and
test
sub
iret
push
adc
out
icebp
sub
jmp
ja
ins
or
ret
fldcw
iret
push
adc
out
icebp
pushf
mov
icebp
jge
xchg
mov
xor
cmp
iret
hlt
or
iret
and
xor
(bad)
test
adc
(bad)
fldcw
loop
aad
jg
in
jmp
push
pop
repz
xor
sub
rol
xor
in
mov
fcmovnu
ins
es
outs
data16
or
fcmovnbe
cmp
into
hlt
sub
retf
fnstsw
ffreep
sub
fcmovnbe
and
fwait
icebp
sub
ret
aad
arpl
popa
mov
in
ja
ins
or
ret
fprem
xchg
iret
pusha
or
iret
sub
xchg
sub
xchg
or
xchg
loope
xor
in
jns
into
lods
sub
mov
xchg
mov
pop
loopne
iret
je
es
jno
out
add
mov
pop
lods
out
iret
and
mov
inc
push
push
ja
fcom
ret
test
adc
imul
adc
idiv
and
(bad)
mov
ja
aad
imul
sub
imul
cmp
cmp
in
daa
retf
and
mov
add
in
jp
push
jns
cli
mov
jae
in
and
cmc
jmp
pop
retf
add
cmp
xor
in
mov
jbe
movs
cmp
or
xchg
es
sub
dec
sub
sbb
dec
jne
out
jnp
pushf
mov
rcr
fcmovnbe
add
lahf
mov
jp
fcom
cs
mov
cmp
call
sub
imul
imul
lods
ins
push
mov
xchg
sahf
push
mov
xchg
pop
in
daa
pop
jno
test
loopne
pop
popa
in
jb
movs
mov
pop
inc
sub
mov
jp
mov
xor
iret
push
in
imul
xchg
xor
mov
jne
xchg
dec
pop
sub
inc
push
sbb
inc
stos
lods
jge
xchg
loopne
push
imul
iret
push
in
ja
mov
data16
popa
jp
shl
xchg
popf
mov
mov
outs
into
mov
pushf
mov
or
sbb
fs
lods
sub
lahf
sub
jmp
adc
lahf
fldcw
scas
shr
sub
pop
push
movs
and
in
add
fldcw
outs
fld
js
retf
bound
pusha
sbb
ins
je
retf
cmc
lods
jg
in
jp
push
adc
xchg
mov
js
push
pushf
mov
loope
sbb
fnstsw
dec
in
sbb
fst
lahf
shl
jnp
sub
or
pop
repnz
add
sub
(bad)
mov
add
in
pop
ret
lds
mov
scas
fld
xor
pop
icebp
sub
mul
movs
and
cmp
mul
jne
jnp
popa
xor
sar
rcl
repnz
mov
sbb
push
push
jnp
fdivr
jae
fnstsw
ret
loope
pop
(bad)
fstp
ret
jp
dec
popf
and
(bad)
xchg
lahf
aad
ja
fstp
repnz
mov
ins
pushf
mov
jo
pop
iret
push
or
addr16
inc
iret
jl
aaa
xlat
jl
xchg
(bad)
pusha
inc
addr16
adc
arpl
popf
mov
in
addr16
mov
jp
fcom
sub
add
xchg
ret
outs
data16
cmp
imul
jo
iret
pusha
xchg
sbb
in
daa
xchg
or
ins
or
ret
fnstcw
iret
je
outs
fcmovnu
pushf
mov
aad
jmp
sub
xchg
icebp
adc
iret
xor
sbb
fisttp
ja
dec
inc
sbb
mov
js
fcmovnu
adc
retf
aad
xchg
retf
xor
adc
stos
lds
div
cmc
sbb
fld
sub
out
js
inc
fstp
sub
xor
data16
iret
ins
js
into
sub
addr16
sbb
fst
mov
into
mov
cmp
mul
movs
sbb
sbb
iret
call
sbb
ja
ror
lods
or
iret
ins
or
ret
fprem
xchg
iret
pusha
ins
bound
sub
repz
in
lahf
in
ja
icebp
icebp
add
in
outs
ret
mov
es
and
pushf
mov
loope
pop
xchg
mov
add
xchg
or
xchg
popf
mov
in
sbb
fisttp
dec
in
adc
(bad)
lods
fs
lods
adc
imul
pushf
mov
rcr
add
dec
daa
(bad)
loope
and
and
iret
sub
sahf
ror
ins
or
ret
fprem
xchg
iret
pusha
adc
iret
push
cmp
retf
mov
daa
into
loopne
ja
mov
xor
aad
outs
and
daa
jmp
xor
sub
iret
push
fs
test
or
ret
fprem
xchg
iret
pusha
fs
into
rcl
frstpm(287
and
xchg
adc
jmp
lods
idiv
in
and
adc
call
xor
jmp
data16
fldenv
fwait
lods
cmp
retf
sub
adc
repnz
jmp
cmp
div
sub
iret
loopne
ja
fstp
ja
mov
xor
aad
outs
and
daa
jmp
data16
daa
stos
aad
xchg
mov
aas
retf
aad
es
scas
ja
sub
dec
push
test
retf
cmp
js
les
mov
sub
imul
js
jmp
and
sbb
fstp
out
test
jmp
xchg
call
pop
ret
fldenv
jmp
and
jnp
adc
lahf
jmp
and
cli
sti
push
cmp
retf
mov
cmp
(bad)
icebp
ins
data16
call
imul
outs
fnstcw
into
sub
and
adc
imul
pusha
xchg
xchg
icebp
movs
daa
data16
shl
mov
adc
inc
loope
mov
loope
inc
mov
or
adc
mov
sbb
sub
div
adc
lahf
jmp
and
xchg
cli
push
jl
and
cmp
lods
enter
jl
addr16
fild
sbb
ret
sbb
inc
es
jno
mov
jne
sahf
ror
xchg
rcr
add
sub
dec
test
ret
mov
outs
fwait
loope
sub
stc
and
xchg
cli
push
jl
and
leave
ins
jae
dec
add
jmp
and
and
fld
inc
cli
test
cmp
sbb
inc
dec
or
in
outs
scas
mov
add
dec
sub
dec
pusha
sub
call
aaa
iret
push
sub
das
xchg
cmp
aad
xchg
ret
pop
addr16
cmp
adc
adc
mov
adc
xor
mov
adc
js
repz
mul
jno
mov
jno
scas
fcomp
es
mov
dec
jae
loope
frstpm(287
sub
retf
cmc
pusha
jnp
icebp
cmp
repnz
psraw
pop
pop
loope
aas
lahf
in
ja
sub
add
test
js
fwait
aad
ja
test
adc
imul
or
dec
or
adc
mov
or
adc
mov
mov
(bad)
in
daa
imul
sbb
fidiv
ins
jle
call
js
retf
fnstsw
pop
repnz
adc
pop
or
retf
lods
movs
and
cmp
mul
xchg
imul
jne
add
adc
mul
and
fwait
mov
sbb
and
jmp
and
fwait
mov
adc
call
sbb
sar
pusha
ja
fst
dec
jmp
or
sahf
jmp
adc
addr16
outs
call
inc
es
dec
data16
jne
mov
imul
lods
stc
outs
jnp
cmp
retf
cmc
and
jmp
adc
jmp
pushf
mov
shr
pop
repz
or
inc
fld
pop
repz
adc
rcl
call
sub
pop
lods
or
fld
pop
ret
fnstcw
jnp
cmp
retf
cmc
and
jmp
adc
jmp
pushf
mov
ror
stos
lahf
ins
or
jnp
js
lahf
in
adc
imul
popf
mov
sbb
fldcw
pop
lods
and
and
xchg
jmp
and
test
adc
imul
popf
mov
or
inc
fldcw
pop
lods
pushf
mov
lods
je
xchg
mov
sub
lahf
lods
adc
fld
mov
and
movs
je
xchg
mov
sbb
lahf
loope
ja
fcomp
pop
inc
loope
ja
inc
movs
sbb
in
xchg
jmp
ja
rcl
jmp
pushf
mov
shr
scas
retf
leave
pushf
mov
imul
loope
pop
(bad)
mov
xchg
ret
scas
addr16
in
jae
mov
xchg
jmp
sub
fstp
pop
inc
fchs
xchg
push
fnsave
mov
adc
lods
adc
imul
popf
mov
push
stos
fld
dec
addr16
ret
fst
imul
popf
mov
or
inc
fnstenv
xor
and
and
fst
sub
icebp
pushf
mov
shl
and
fstp
ret
fldenv
loope
adc
call
adc
dec
push
sub
repz
test
sub
retf
add
sub
imul
and
stos
sti
push
adc
repnz
inc
loope
pop
jmp
popf
mov
(bad)
sahf
sub
jg
in
es
cmp
xchg
adc
push
aad
scas
xchg
or
or
outs
mov
adc
out
(bad)
push
in
es
mov
jns
xchg
outs
(bad)
movs
and
lahf
gs
jmp
adc
xlat
icebp
pushf
mov
shl
pop
jmp
and
jp
push
adc
xchg
mov
adc
imul
push
cmps
rep
or
ret
fldenv
xchg
sbb
ret
mov
add
jg
movs
xchg
inc
xor
sub
not
js
fucomi
adc
imul
popf
mov
dec
addr16
jo
imul
cmp
imul
and
push
push
push
xor
movs
and
sub
mov
shl
or
fld
adc
rcl
jecxz
pushf
mov
shl
add
leave
js
mov
adc
imul
js
inc
rcl
ins
and
jnp
dec
das
lahf
mov
sub
mov
or
fstp
imul
or
sub
fstp
scas
inc
shl
lods
pushf
mov
fnstsw
mov
adc
jmp
jge
repz
ja
ror
push
jl
jmp
and
jnp
dec
pop
lahf
mov
sbb
jmp
pushf
mov
shr
jae
dec
add
jmp
movs
sbb
mov
mov
fisttp
mov
or
ret
fst
imul
pushf
mov
mov
cmps
rep
or
mov
or
ret
fst
imul
pushf
mov
dec
icebp
and
in
xchg
(bad)
icebp
pushf
mov
in
popa
xchg
or
fcomi
sub
jmp
mov
mov
pop
xchg
mov
adc
xlat
aad
sbb
mov
mov
add
xchg
cmp
mov
and
sbb
gs
sbb
ins
or
iret
ins
or
ret
fld
sbb
mov
and
jmp
fs
jmp
pop
repnz
out
mov
scas
addr16
nop
iret
jmp
adc
imul
mov
dec
retf
pop
iret
call
or
dec
in
adc
test
sub
fimul
ins
jbe
mov
popf
mov
or
inc
fst
sub
cmc
adc
frstor
ja
ins
or
inc
fst
imul
pushf
mov
lea
ja
fnstcw
retf
jmp
and
jmp
adc
jmp
adc
fstp
add
adc
not
jp
push
adc
xchg
mov
js
repnz
sbb
ret
mov
mov
idiv
cmp
xchg
jl
iret
pusha
sub
lahf
lods
pushf
mov
loope
and
mov
jae
icebp
pusha
and
rcr
fstp
addr16
es
or
icebp
js
dec
in
cmp
retf
cmc
js
fwait
test
adc
imul
jmp
dec
repnz
into
enter
lods
dec
mov
jmp
inc
iret
ins
ins
(bad)
into
lods
sub
xchg
jae
sub
retf
aaa
sub
div
in
iret
pop
popf
mov
js
push
icebp
movs
sbb
mov
mov
fnstsw
inc
rcl
repnz
cmp
addr16
sub
aad
push
aam
stos
fwait
movs
sbb
repz
jmp
adc
fwait
lods
mov
into
test
jae
in
and
sar
clc
js
mov
sbb
ret
mov
mov
sbb
and
fucomp
ja
in
ja
in
mov
fstp
das
jnp
pusha
pop
repz
mov
fwait
test
and
and
frstor
xchg
cli
push
js
addr16
pusha
or
loope
xchg
fidiv
pusha
or
loope
pop
fidiv
cmp
repnz
adc
(bad)
sub
mov
pusha
aaa
outs
loope
sub
add
retf
lods
and
(bad)
fnstcw
neg
popf
mov
or
inc
fnstenv
ja
fldenv
sbb
fst
sub
mov
and
rol
sub
and
retf
aad
add
test
or
(bad)
in
or
ret
fldenv
xchg
cli
push
icebp
add
inc
fidivr
sub
ffreep
dec
sub
jo
cmp
loope
jmp
test
adc
out
loope
mov
test
adc
out
loope
jae
test
sub
inc
dec
sub
jo
cmp
loope
xor
test
sub
retf
aad
inc
(bad)
sub
ret
lds
icebp
cmp
div
sub
repz
iret
jo
cmp
loope
das
fld
js
inc
rcl
repz
(bad)
ja
fldenv
xchg
loope
imul
sub
cmc
jl
fucomi
imul
stos
shl
lahf
in
adc
loopne
xor
in
ja
rcl
fld
sub
retf
aad
xor
mov
sbb
ret
icebp
sub
div
fs
jmp
add
loope
and
stc
or
iret
cld
jns
frstpm(287
jl
xchg
mov
add
(bad)
jmp
and
icebp
movs
sbb
mov
ds
sbb
xchg
sub
retf
fisttp
and
stc
sub
rep
lods
div
in
mov
stc
outs
xchg
fs
retf
(bad)
jbe
lods
jns
repz
aaa
frstpm(287
cmp
fild
and
inc
adc
into
mov
inc
ret
fstp
push
pop
fldcw
repz
adc
frstpm(287
cmp
retf
lods
cmp
pop
ret
lds
sbb
icebp
sub
xchg
iret
pusha
push
pop
mul
and
imul
xor
jmp
sbb
icebp
popf
mov
dec
fs
ror
lods
sub
daa
div
js
inc
rcl
repnz
xchg
loope
xchg
fidiv
lea
mul
pusha
pop
lahf
icebp
sub
xchg
adc
fisubr
jns
repz
aaa
frstpm(287
cmp
fild
and
(bad)
fldcw
ret
lds
jp
fstp
xor
aad
pop
lahf
in
pop
(bad)
add
jmp
mov
iret
pop
sub
iret
cmp
(bad)
icebp
adc
jo
inc
fld
sbb
and
aad
xor
cmc
or
sub
add
loope
aaa
iret
loopne
imul
adc
cmp
daa
retf
xor
sub
in
sbb
cmc
xor
mov
and
in
inc
xchg
icebp
pusha
daa
repnz
imul
sub
iret
test
pop
fcmovbe
pusha
xor
movs
pusha
and
icebp
dec
daa
(bad)
aad
pop
repz
cmp
jmp
sbb
in
and
rcr
push
fldcw
jbe
mov
push
sbb
movs
js
sti
movs
adc
xor
mov
das
iret
mov
adc
iret
loopne
inc
iret
movs
sbb
iret
call
cmp
lahf
mov
pop
lahf
rcl
mov
daa
sahf
lds
xor
inc
xchg
cmp
iret
lods
sbb
repz
div
adc
fstp
add
sub
jmp
sub
fstp
retf
add
addr16
adc
add
adc
iret
push
xor
fiadd
sub
out
icebp
jl
fcmovu
adc
lock
lods
sub
out
icebp
and
jmp
sub
jmp
pusha
xor
cmc
sbb
sub
jmp
dec
adc
loope
cmp
fld
cmp
loopne
outs
retf
movs
sub
iret
mov
cdq
sbb
adc
rol
sub
fldenv
repnz
sub
adc
repnz
xchg
loope
(bad)
sub
ret
lds
jp
fstp
xor
aad
sbb
ror
aad
pop
jecxz
sbb
iret
inc
js
repnz
mov
ja
fnstcw
daa
sahf
icebp
cmp
sahf
lds
(bad)
loope
and
aad
shr
sub
lahf
icebp
sub
fild
adc
pop
js
into
rcl
sti
loope
inc
retf
aad
and
les
push
icebp
fs
fnsave
lahf
shr
(bad)
add
jmp
daa
dec
cmc
or
shrd
retf
cmp
movs
pop
mul
add
jmp
mov
movs
xor
fiadd
gs
in
inc
xchg
pusha
daa
repnz
sub
adc
repnz
(bad)
loope
daa
imul
xor
xchg
js
fucomi
or
iret
mov
jnp
fdivr
iret
hlt
or
repz
or
ins
or
inc
fnstcw
iret
lods
pusha
sub
mov
xchg
fisubr
and
(bad)
stos
in
or
ret
(bad)
es
fldcw
es
in
es
in
es
in
es
in
sub
rcl
repnz
lods
adc
data16
mov
adc
jmp
or
jmp
sub
cmc
adc
lahf
shr
into
in
es
in
cs
and
jmp
adc
jmp
jne
lahf
fst
jecxz
js
(bad)
pusha
ja
loope
mov
cmc
adc
fcmovnu
and
jmp
adc
jmp
jne
lahf
fst
jecxz
or
fwait
and
add
test
and
jmp
adc
jmp
jne
lahf
fst
jecxz
adc
retf
shl
loope
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmps
dec
fs
cmp
pop
gs
pop
gs
call
add
mov
movs
mov
out
add
out
add
cwde
mov
inc
fs
xchg
jp
test
mov
dec
fs
sbb
out
add
fcomip
add
call
add
out
add
jmp
test
test
mov
mov
dec
fs
cmps
jb
mov
or
pop
pop
out
call
add
out
add
push
pop
cmp
out
mov
out
add
push
jmp
add
out
add
ins
mov
js
cmps
dec
pushf
in
dec
fs
add
out
add
out
pusha
push
out
add
scas
stos
add
dec
mov
push
stos
(bad)
ja
movs
pop
rol
add
out
add
out
add
test
int
out
add
out
add
out
add
out
pusha
sahf
out
add
cmps
mov
sbb
gs
add
cmps
movs
add
fistp
dec
test
test
call
add
out
add
stos
cmps
inc
iret
lahf
or
test
test
call
add
movs
sbb
out
dec
sub
call
add
pop
pop
out
inc
mov
push
pop
cmp
aam
mov
push
pop
jns
hlt
inc
mov
push
pop
sbb
xchg
mov
mov
fs
es
out
add
out
add
out
add
mov
push
jae
cmps
pop
gs
dec
fs
add
out
add
pop
int
sub
jb
fs
mov
add
out
add
ret
and
sub
pop
dec
xchg
scas
jb
fwait
sbb
push
aaa
test
dec
lds
mov
inc
movs
call
call
add
test
dec
ins
mov
mov
mov
fs
jmp
out
add
fcomip
add
call
add
call
stos
dec
call
mov
les
dec
fs
mov
sahf
push
lods
lods
dec
gs
outs
popa
mov
mov
mov
outs
popa
xchg
lods
mov
inc
bound
mov
ins
bound
mov
sbb
inc
xchg
test
and
mov
out
add
mov
add
mov
cmps
dec
fs
add
out
add
xor
mov
cs
outs
popa
xor
cmps
imul
dec
gs
outs
popa
xchg
lods
mov
and
pop
mov
ins
bound
sbb
imul
test
push
in
test
repnz
sahf
loope
cmps
sahf
movs
test
call
add
mov
cmps
dec
fs
add
lahf
jo
sub
call
add
pop
mov
sub
call
add
cmps
mov
mov
jbe
push
and
jle
dec
cwde
test
mov
mov
dec
sub
mov
sub
jnp
scas
lds
mov
popa
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
enter
clc
dec
ss
call
movs
mov
pusha
or
inc
xchg
test
jbe
js
cmps
mov
jmp
out
add
pop
mov
js
cmps
dec
pusha
out
dec
sub
call
add
jle
dec
cwde
test
mov
mov
dec
sub
call
add
popa
movs
jnp
scas
and
inc
fs
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
add
pop
test
and
pop
test
les
pop
test
in
pop
test
movs
mov
fs
pusha
inc
xchg
test
cmps
pop
mov
test
mov
mov
xor
cmps
dec
fs
add
pcmpgtw
sub
movs
mov
cwde
lods
outs
push
jae
cmps
dec
gs
dec
fs
add
out
add
stos
cmps
jmp
mov
jb
test
cmps
movs
hlt
mov
pop
pusha
test
call
add
movs
add
test
cmps
movs
mov
stos
dec
fs
mov
fs
mov
imul
cmps
dec
and
dec
fs
add
out
add
lahf
push
xor
cmps
xor
lods
cmps
add
add
out
add
out
add
xor
jae
gs
mov
addr16
call
add
out
addr16
jno
gs
cmps
jb
or
cmovg
pop
dec
int3
jb
sbb
out
add
mov
scas
xchg
jmp
out
add
popa
movs
pop
sub
dec
sub
call
add
mov
dec
fs
add
out
add
out
add
popa
movs
jnp
scas
dec
dec
pusha
test
movs
sbb
mov
mov
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
mov
dec
ss
inc
stos
xor
jge
dec
pusha
inc
pusha
inc
xchg
test
inc
out
js
cmps
xchg
jmp
out
add
mov
mov
dec
fs
add
out
add
lahf
cmp
dec
test
test
lock
dec
stos
cmps
shr
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
pusha
dec
inc
mov
add
pop
mov
call
add
out
add
pop
mov
js
cmps
dec
pusha
out
dec
sub
call
add
lahf
cmp
dec
test
test
lock
imul
mov
dec
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
ficom
cmc
mov
xchg
in
cmps
mov
fs
add
mov
add
mov
cmps
dec
fs
add
xchg
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
fiadd
aad
cmps
mov
fs
add
out
add
out
add
mov
push
jae
cmps
pop
gs
dec
fs
add
out
add
xchg
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
fiadd
int
cmps
mov
fs
add
out
add
out
add
mov
push
jae
cmps
pop
gs
dec
fs
add
out
add
xor
mov
cmps
ins
xor
lods
dec
gs
outs
popa
mov
mov
push
bound
mov
(bad)
bound
mov
ins
(bad)
jmp
sbb
fwait
mov
push
out
mov
out
add
out
add
popa
movs
jnp
scas
stc
dec
pusha
test
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
in
inc
mov
test
xor
out
add
cmps
push
add
stos
cmps
adc
popa
movs
jnp
scas
cmp
test
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
hlt
dec
inc
mov
xchg
push
xor
out
add
out
add
xchg
shr
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
sbb
mov
cmp
mov
fs
outs
inc
xchg
test
cmp
pop
gs
jmp
add
out
add
popa
movs
jnp
scas
adc
dec
fs
movs
sbb
mov
mov
popa
movs
fwait
enter
push
movs
mov
xchg
mov
ins
ret
mov
jns
mov
and
mov
cdq
sub
push
pop
jmp
sub
call
inc
xchg
lods
call
lahf
cmp
test
test
cmps
dec
pop
(bad)
cmp
test
test
cmps
inc
mov
or
test
test
push
push
dec
stos
cmps
loop
bound
jp
dec
dec
scas
adc
mov
xor
pop
dec
test
call
add
pop
mov
js
cmps
dec
pusha
out
dec
sub
call
add
lahf
cmp
dec
test
test
lock
jg
cmps
shr
jo
fs
cmps
loop
or
enter
push
jbe
mov
sbb
aas
mov
jae
cmps
dec
gs
dec
fs
add
out
add
mov
add
mov
cmps
dec
fs
add
scas
push
add
mov
in
pop
test
call
add
out
add
clc
jmp
push
in
bound
and
stos
cmps
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
sbb
dec
fs
cmps
loop
and
fs
scas
test
inc
fiadd
(bad)
stos
dec
mov
movs
mov
fs
pop
push
jae
jmp
out
add
popa
movs
pop
mov
out
add
xor
mov
cs
outs
popa
xor
cmps
imul
dec
gs
outs
popa
xchg
lods
mov
and
arpl
ins
bound
mov
sbb
inc
xchg
test
push
cmp
addr16
pushf
sub
rcr
out
add
out
add
lahf
cmp
dec
test
test
cmps
dec
pop
(bad)
cmp
test
test
cmps
inc
pop
jg
dec
dec
test
test
cmps
push
or
dec
dec
test
test
cmps
push
fld
jns
mov
ins
jmp
aad
fisttp
test
mov
push
call
mov
pop
cli
in
mov
out
add
cmps
push
add
mov
mov
movs
jnp
scas
jne
pusha
test
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
cmp
mov
fsubr
mov
fs
pop
push
jae
jmp
out
add
out
add
popa
movs
jnp
scas
lea
xor
lods
dec
gs
es
test
test
cmps
push
daa
pop
or
test
test
cmps
push
xlat
lods
ins
dec
mov
ins
fisttp
pop
inc
ds
mov
cwde
sub
rcr
out
add
out
add
lahf
cmp
dec
test
test
lock
imul
mov
dec
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
ficom
sbb
stos
cmps
stos
lods
in
mov
pop
cli
in
mov
out
add
out
add
xor
mov
and
outs
popa
xor
cmps
inc
arpl
mov
push
bound
mov
(bad)
bound
mov
ins
(bad)
fbld
sbb
inc
xchg
test
cmp
jl
mov
add
out
add
xchg
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
ficom
in
push
xchg
adc
in
dec
mov
pop
pop
cli
in
mov
out
add
out
add
xchg
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
ficom
in
push
xchg
adc
in
dec
mov
pop
pop
cli
in
mov
out
add
out
add
xchg
shr
lock
fs
cmps
shr
jo
fs
cmps
loop
jmp
fs
cmps
loop
sbb
dec
fs
scas
test
inc
ficom
in
push
xchg
adc
in
dec
mov
pop
pop
cli
in
mov
out
add
out
add
cmps
push
add
stos
cmps
adc
popa
movs
jnp
scas
cmp
test
movs
sbb
mov
mov
popa
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
cmp
mov
fsubr
mov
fs
pop
push
jae
jmp
out
add
out
add
popa
movs
jnp
scas
cmc
dec
push
lods
lods
dec
gs
outs
popa
mov
mov
push
dec
test
test
mov
test
inc
fiadd
sub
mov
mov
fs
mov
push
xor
xor
cmps
imul
outs
popa
mov
mov
(bad)
pusha
add
mov
popaw
bound
mov
ins
bound
mov
sbb
inc
xchg
test
dec
adc
test
mov
mov
push
push
pop
rcr
out
add
popa
movs
jnp
scas
dec
dec
pusha
test
movs
sbb
mov
mov
movs
fwait
enter
pusha
test
movs
mov
pusha
test
dec
dec
scas
test
inc
mov
dec
stos
xor
jge
dec
pusha
inc
pusha
inc
xchg
test
cmp
jl
mov
add
out
add
out
add
dec
outs
push
jae
jmp
out
add
out
add
popa
movs
jnp
scas
cmc
dec
push
lods
lods
dec
gs
outs
popa
mov
mov
(bad)
addr16
mov
cmps
bound
mov
ins
bound
mov
sbb
inc
xchg
test
inc
push
push
mov
cwde
push
push
pop
rcr
out
add
popa
movs
jnp
scas
adc
dec
fs
movs
sbb
mov
mov
popa
movs
fwait
enter
push
movs
mov
xchg
mov
ins
aaa
mov
jns
mov
adc
test
mov
mov
push
push
pop
rcr
out
add
outs
movs
mov
pusha
test
outs
popa
push
lods
mov
jbe
xor
lods
dec
gs
outs
popa
mov
mov
dec
test
test
mov
test
inc
fiadd
icebp
stos
cmps
mov
mov
movs
mov
fs
pop
push
jae
jmp
out
add
out
add
popa
movs
jnp
scas
mov
popa
xor
cmps
(bad)
pusha
add
mov
dec
test
test
mov
test
inc
fiadd
icebp
stos
cmps
mov
mov
movs
mov
pusha
aaa
pop
push
jae
jmp
out
add
out
add
push
pop
mov
addr16
dec
xchg
mov
jp
jl
stos
xchg
call
add
dec
outs
dec
xchg
mov
inc
add
xchg
call
add
out
add
aaa
pop
push
jae
jmp
out
add
pop
cmp
push
movs
mov
or
mov
dec
dec
cwde
test
nop
jl
call
add
out
add
pop
cmp
or
mov
dec
dec
cwde
test
nop
jl
call
add
pop
cmp
push
lods
mov
or
mov
dec
dec
cwde
test
nop
jl
call
add
mov
mov
mov
dec
sub
call
add
test
sti
dec
or
jmp
sub
call
add
out
add
test
mov
fs
pop
gs
call
add
jp
(bad)
fs
mov
sub
call
add
out
add
pop
out
push
stos
int3
lods
add
and
out
add
cmps
or
sub
cli
add
jl
call
add
out
add
test
out
dec
out
add
out
add
cmps
or
sub
jmp
out
add
lods
outs
mov
push
sub
and
mov
mov
out
push
inc
jnp
and
test
mov
fs
add
out
add
mov
stos
mov
movs
pop
clc
jmp
dec
dec
out
add
out
add
out
add
in
ins
es
add
out
add
test
call
add
mov
add
mov
and
mov
hlt
mov
jb
and
test
mov
xchg
xchg
jge
cmps
shl
mov
call
add
out
add
inc
movs
add
test
call
add
inc
mov
call
gs
xchg
mov
mov
ror
stos
cmps
adc
in
push
gs
add
xor
cmps
dec
gs
dec
fs
add
out
add
cwde
jmp
dec
cdq
add
test
popf
mov
fs
jno
daa
dec
ins
cwde
test
nop
jl
call
add
in
dec
gs
add
out
add
lods
or
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
arpl
popf
(bad)
jle
setns
mov
dec
test
test
mov
out
setns
mov
dec
cwde
test
test
lds
xor
mov
cmps
cmps
(bad)
push
jno
or
mov
push
shl
lods
mov
gs
cmps
fisubr
sub
outs
scas
jbe
cmp
std
not
xor
dec
fld
call
add
test
cmps
dec
gs
dec
fs
add
push
jno
sub
dec
out
call
pop
adc
and
cmps
jb
or
imul
mov
push
icebp
dec
gs
add
dec
out
out
movs
loope
mov
push
icebp
dec
gs
add
mov
out
in
cmps
loope
mov
push
icebp
dec
gs
adc
dec
mov
dec
push
test
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
in
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
cmp
cdq
test
test
cdq
pop
hlt
push
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
mov
push
jno
movs
stos
cmps
loop
cmp
jbe
cdq
mov
cmps
pop
test
data16
mov
mov
dec
fs
add
push
jno
sub
dec
inc
jbe
pop
jno
popa
movs
fwait
clc
mov
ja
pop
add
mov
gs
pop
fisttp
addr16
add
mov
gs
cmps
fisubr
jp
and
out
add
movs
test
cmps
jge
call
add
xor
mov
gs
mov
mov
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
mov
dec
fs
test
imul
out
repz
dec
sub
call
add
or
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fwait
jle
mov
mov
dec
fs
test
imul
out
push
out
dec
sub
call
add
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jbe
cdq
mov
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
scas
and
ins
mov
mov
(bad)
in
dec
fs
add
out
add
push
jno
sub
dec
inc
jbe
pop
jno
popa
movs
fwait
clc
mov
cmps
cli
imul
jb
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
or
mov
jmp
out
add
out
add
push
icebp
call
or
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
cs
setns
mov
dec
test
test
push
out
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
setns
mov
dec
pusha
test
mov
jb
fs
mov
add
mov
lods
mov
gs
pop
fnstsw
add
mov
sub
sub
fwait
sub
mov
lods
jl
cmp
cwde
test
test
(bad)
pop
hlt
add
mov
gs
pop
fnstsw
add
mov
(bad)
mov
adc
pop
dec
sub
fwait
sub
mov
lods
jl
icebp
call
or
jb
pop
pop
gs
mov
dec
inc
jle
setns
mov
dec
test
test
imul
addr16
mov
dec
test
test
call
lea
mov
dec
rcl
fld
adc
push
aad
or
sub
imul
and
outs
ret
fst
and
sar
sahf
icebp
xor
(bad)
sub
xchg
sbb
add
adc
inc
loope
pop
ffreep
mov
xor
frstor
mov
add
fnsave
icebp
sub
daa
icebp
cmp
retf
(bad)
sbb
cmc
cmp
lahf
lds
iret
aam
aas
iret
lock
rep
adc
icebp
xor
iret
loopne
xor
jmp
imul
sbb
iret
clc
sub
icebp
xor
retf
lods
adc
lahf
rcl
call
sub
test
pusha
and
icebp
adc
fnstcw
fcmovu
imul
retf
cmps
jmp
cmps
push
and
retf
cmps
into
lea
into
sub
retf
cmps
ret
cmps
repnz
cmps
mul
cmps
sahf
sub
fisub
cmps
(bad)
gs
xchg
cmps
into
sub
sbb
cmps
add
cmps
(bad)
fs
cmps
mul
cmps
fisub
cmps
retf
cmps
(bad)
fs
pop
gs
cmps
mov
cmps
retf
cmps
(bad)
fs
dec
gs
and
xchg
cmps
(bad)
adc
(bad)
fs
cmps
xchg
gs
cmps
retf
cmps
retf
cmps
fisub
cmps
mul
cmps
(bad)
or
dec
fs
mov
gs
pop
fnsave
movs
fwait
enter
pusha
test
pop
and
mov
jno
and
test
xor
push
gs
cmps
shr
or
cdq
test
test
mov
dec
fs
cmp
in
pop
gs
mov
push
icebp
dec
gs
push
test
sbb
test
cmps
pop
mov
jbe
push
pushf
mov
pop
mov
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
into
inc
jmp
movs
fwait
sub
jmp
jmp
int
jmp
sub
cli
dec
cwde
test
lods
jl
cmp
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
in
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
fs
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
cdq
aad
movs
fwait
movs
push
jno
gs
cmps
push
movs
and
call
add
or
mov
mov
dec
push
pushf
mov
pop
mov
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
into
inc
jmp
movs
fwait
sub
jmp
jmp
int
jmp
sub
cli
dec
cwde
test
lods
jl
cmp
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
in
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
clc
sqrtps
push
jno
gs
cmps
push
movs
and
call
add
or
mov
mov
dec
cwde
inc
inc
mov
movs
push
push
lods
cmps
loop
in
pop
dec
mov
cmps
ss
add
out
add
pop
popf
add
add
call
add
push
jno
sub
(bad)
dec
mov
scas
inc
xchg
test
pop
jns
out
mov
out
add
test
daa
lods
cmps
repnz
out
add
out
add
push
jno
sub
retf
test
push
dec
int3
jle
dec
cwde
test
mov
cmps
(bad)
pusha
lods
cmps
out
aad
pop
dec
sub
fwait
sub
fimul
test
lods
jl
call
add
out
add
mov
xchg
dec
movs
cmps
mov
out
dec
sub
or
sub
jg
test
inc
pusha
out
add
jle
add
leave
stos
pushf
hlt
mov
fwait
dec
fs
pop
mov
out
mov
out
add
call
mov
out
add
popa
movs
fwait
enter
pusha
sub
jle
push
jno
gs
cmps
and
sbb
dec
fs
mov
push
icebp
dec
gs
xor
push
jno
sub
bound
test
outs
mov
lods
mov
gs
pop
(bad)
mov
stos
push
dec
push
test
dec
int3
ins
movs
fwait
enter
les
pop
dec
fs
out
setns
mov
dec
sub
pop
add
popa
movs
fwait
clc
mov
cmps
fisub
or
cdq
test
test
pop
pop
hlt
mov
fwait
cdq
movs
into
add
mov
or
dec
gs
cmps
(bad)
pusha
push
jno
and
aad
mov
in
push
gs
add
push
jno
sub
fimul
test
outs
mov
lods
mov
gs
pop
(bad)
mov
stos
push
dec
push
test
dec
int3
ins
movs
fwait
pop
sbb
dec
fs
out
setns
mov
dec
sub
call
add
outs
movs
mov
fs
cmp
cdq
test
test
stos
pop
hlt
xchg
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
and
lods
stos
sub
sahf
data16
test
cmps
xchg
out
add
push
jno
sub
xchg
dec
jbe
(bad)
dec
fs
mov
lods
cmps
(bad)
or
dec
or
pop
dec
int3
ins
movs
fwait
cwde
rol
dec
int3
test
jno
and
aad
mov
in
push
gs
add
out
add
lahf
mov
sub
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
mov
into
inc
jmp
sub
cli
dec
cwde
test
lods
jl
movs
fwait
clc
mov
pop
sbb
xor
mov
cmps
cmps
faddp
mov
outs
mov
movs
mov
gs
mov
mov
mov
loope
pop
hlt
cmps
pop
test
data16
mov
xchg
dec
int3
repz
mov
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
test
pop
jno
popa
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
mov
shr
dec
pusha
imul
ds
out
in
jle
dec
cwde
test
lea
mov
dec
sub
call
add
popf
mov
gs
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
lods
jl
icebp
call
vmread
pop
pop
gs
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
call
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
test
or
cdq
test
test
mov
dec
sub
add
out
gs
mov
push
icebp
dec
gs
push
test
pop
mov
dec
mov
dec
push
test
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
or
cdq
test
test
retf
pop
hlt
or
out
test
fbstp
out
setns
mov
dec
cwde
test
test
(bad)
pop
hlt
add
mov
les
fisttp
aaa
loopne
in
pop
gs
mov
push
icebp
dec
gs
push
test
sbb
gs
mov
(bad)
out
dec
sub
test
sub
mov
cmp
mov
retf
mov
ds
dec
sub
call
add
mov
call
add
dec
in
mov
sbb
test
xchg
jl
call
add
test
into
lds
pop
dec
fs
or
test
call
add
jmp
call
add
out
add
mov
aam
(bad)
mov
sub
call
retf
ds
dec
sub
sub
sub
call
add
out
add
shl
jns
popf
push
pop
gs
call
add
in
ins
jp
call
add
test
jo
xchg
mov
cmps
stos
mov
out
add
cmp
test
call
add
pop
mov
sub
call
add
or
inc
xchg
test
cmps
push
push
jle
dec
cwde
inc
inc
mov
popf
mov
gs
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
lods
jl
movs
fwait
clc
mov
cmps
sahf
push
popa
movs
fwait
clc
mov
cmps
shr
pop
jno
popa
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
cdq
test
aad
push
fimul
test
nop
jl
call
add
push
icebp
call
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
or
mov
pop
js
cmps
dec
pusha
out
dec
sub
call
add
movs
push
push
gs
cmps
xor
test
movs
mov
fs
vmread
pop
pop
gs
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
setns
mov
dec
cwde
test
test
(bad)
pop
hlt
add
mov
lods
cmps
fimul
dec
or
mov
sbb
pop
dec
sub
fwait
sub
mov
lods
jl
icebp
call
cmps
jmp
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
or
cdq
test
test
mov
dec
fs
cmp
vmovntdq
loope
mov
push
icebp
dec
gs
push
test
pop
mov
dec
mov
dec
push
test
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
ja
pop
add
mov
gs
mov
lods
jle
mov
test
pop
test
data16
mov
mov
les
mov
out
test
test
lea
mov
dec
sub
call
add
repz
fs
lds
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
xchg
pushf
sub
call
add
mov
stos
test
les
out
add
out
add
xchg
pop
inc
push
movs
fwait
clc
mov
pop
jno
popa
movs
fwait
clc
fnstenv
dec
pusha
js
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
dec
test
test
imul
push
cwde
push
pop
int
cmps
bound
icebp
dec
gs
xor
out
add
popf
jo
add
out
dec
jle
dec
cwde
test
lea
mov
dec
sub
call
add
call
add
stos
cmps
shr
movs
fwait
clc
mov
or
cdq
test
test
retf
or
popa
test
iret
jbe
out
setns
mov
dec
cwde
test
test
(bad)
pop
hlt
add
mov
les
(bad)
pop
fmul
(bad)
in
pop
gs
mov
push
icebp
dec
gs
push
test
mov
gs
pop
fnsave
movs
fwait
enter
pusha
test
pop
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
or
cdq
test
test
movs
pop
hlt
lds
dec
fs
cld
vmovntdq
loope
mov
push
icebp
dec
gs
push
test
mov
gs
pop
fnsave
movs
fwait
enter
pusha
test
pop
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
or
cdq
test
test
movs
pop
hlt
lds
dec
fs
sub
gs
mov
push
icebp
dec
gs
push
test
mov
gs
pop
fnsave
movs
fwait
enter
pusha
test
pop
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
in
test
aad
push
fimul
test
nop
jl
call
add
outs
movs
mov
clc
xor
mov
mov
jno
add
cmps
loop
cmp
dec
jbe
retf
or
ret
jbe
out
setns
mov
dec
cwde
test
test
lods
pop
hlt
leave
pop
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
mov
outs
mov
lods
mov
lods
cmps
fisubr
add
out
jge
pop
dec
sub
fwait
sub
mov
lods
jl
movs
fwait
clc
mov
jno
add
cmps
loop
cmp
jbe
retf
or
out
test
shl
out
setns
mov
dec
cwde
test
test
movs
pop
hlt
leave
pop
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
or
cdq
test
test
mov
dec
fs
xor
pop
gs
mov
push
icebp
dec
gs
push
test
mov
gs
mov
xor
cmp
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
and
lods
stos
sub
sahf
popfw
jo
and
outs
movs
out
fnstcw
dec
cwde
test
lea
mov
dec
sub
call
add
popf
mov
gs
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
mov
into
inc
popa
movs
iret
mov
stos
cmps
push
movs
in
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
mov
outs
mov
lods
mov
lods
cmps
fisubr
mov
icebp
call
movs
fwait
sub
mov
lods
jl
icebp
call
add
pop
gs
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
push
test
mov
movs
pop
clc
pop
jmp
lods
out
add
out
add
out
add
out
or
out
add
push
sbb
out
dec
sub
call
add
xor
mov
gs
cmps
fisub
push
jno
add
cmps
loop
cmp
jbe
retf
hlt
addr16
gs
mov
push
icebp
dec
gs
push
test
and
mov
loope
mov
push
icebp
dec
gs
adc
dec
mov
dec
loopne
cmps
mov
pop
test
mov
dec
fs
scas
inc
xchg
test
dec
pop
dec
test
inc
pusha
out
add
out
add
out
add
(bad)
scas
jp
in
dec
fs
add
push
jno
sub
(bad)
dec
mov
scas
inc
xchg
test
pop
ja
test
inc
pusha
out
add
xchg
pop
add
test
call
add
push
jno
sub
retf
test
push
dec
int3
jle
dec
cwde
test
mov
cmps
(bad)
pusha
lods
cmps
out
aad
pop
dec
sub
fwait
sub
fimul
test
lods
jl
call
add
popa
movs
mov
pusha
test
outs
mov
lods
mov
lods
cmps
fsubrp
mov
outs
mov
lods
mov
mov
ja
pop
add
mov
gs
cmps
faddp
mov
outs
mov
lods
mov
lods
cmps
fisub
movs
and
out
push
and
call
add
stos
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
scas
and
ins
mov
pop
mov
in
dec
fs
add
xor
mov
lods
cmps
fsubrp
mov
outs
mov
lods
mov
mov
ja
pop
add
mov
gs
cmps
fisubr
addr16
pop
add
mov
gs
cmps
fisubr
mov
movs
and
out
push
and
call
add
out
add
xor
mov
gs
cmps
fiadd
xor
mov
mov
ja
pop
add
mov
lods
cmps
fisub
dec
pop
add
mov
lods
cmps
ficomp
inc
dec
pop
jp
and
out
push
xor
shl
call
add
stos
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
fs
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
jge
repnz
and
outs
dec
test
test
cmps
sub
dec
sub
call
add
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
movs
push
push
gs
cmps
dec
lods
loopne
dec
mov
movs
mov
ins
lods
outs
inc
xchg
movs
jb
gs
sbb
mov
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
add
outs
inc
xchg
lods
jb
gs
sbb
mov
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
add
outs
inc
xchg
mov
cmp
mov
leave
pop
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
push
jno
dec
call
pop
push
push
icebp
dec
and
cmps
jb
or
imul
mov
push
icebp
dec
gs
add
dec
out
in
cmps
loope
mov
push
icebp
dec
gs
add
mov
out
out
movs
loope
mov
push
icebp
dec
gs
adc
test
cmps
pop
push
jle
dec
cwde
test
test
mov
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
(bad)
dec
fs
mov
gs
cmps
fisub
mov
gs
movs
fwait
sub
mov
lods
jl
movs
fwait
clc
mov
cmps
(bad)
pusha
jle
cs
test
test
mov
dec
fs
aam
in
pop
gs
mov
push
icebp
dec
gs
push
test
mov
xchg
movs
jb
push
jno
fs
cmps
shr
(bad)
dec
fs
mov
gs
cmps
ficom
xlat
dec
or
mov
inc
call
movs
fwait
sub
mov
lods
jl
movs
fwait
clc
mov
cmps
(bad)
pusha
jle
cs
test
test
movs
pop
hlt
lds
dec
fs
and
in
pop
gs
mov
push
icebp
dec
gs
push
test
mov
lods
cmps
(bad)
push
jno
add
cmps
loop
cmp
dec
or
sbb
out
setns
mov
dec
shl
dec
lods
jo
inc
mov
movs
fwait
clc
mov
cmps
(bad)
pusha
jle
cs
test
test
movs
pop
hlt
lds
dec
fs
and
in
pop
gs
mov
push
icebp
dec
gs
push
test
dec
push
push
jno
stc
stos
cmps
shr
(bad)
dec
fs
mov
gs
cmps
ficom
pop
dec
or
mov
sub
movs
fwait
sub
mov
lods
jl
movs
fwait
clc
mov
cmps
(bad)
pusha
jle
cs
test
test
movs
pop
hlt
lds
dec
fs
adc
in
pop
gs
mov
push
icebp
dec
gs
push
test
mov
xchg
movs
jb
push
jno
fs
cmps
shr
(bad)
dec
fs
mov
gs
cmps
ficom
sub
aad
out
imul
movs
fwait
sub
mov
lods
jl
movs
fwait
clc
mov
cmps
(bad)
pusha
jle
cs
test
test
movs
pop
hlt
lds
dec
fs
mov
in
pop
gs
mov
push
icebp
dec
gs
push
test
mov
lods
cmps
(bad)
push
jno
add
cmps
loop
cmp
dec
or
out
test
xor
out
setns
mov
dec
cwde
test
test
mov
dec
fs
movs
fwait
enter
pusha
test
push
and
mov
jno
and
mov
mov
push
jno
dec
call
pop
and
and
cmps
jb
or
imul
mov
push
icebp
dec
gs
add
call
movs
(bad)
pop
dec
gs
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
lods
jl
movs
fwait
clc
mov
cmps
and
or
cdq
test
test
mov
dec
fs
fst
out
gs
mov
push
icebp
dec
gs
push
test
pop
mov
dec
mov
dec
shl
mov
pop
test
movs
fwait
clc
mov
cmps
data16
jle
cs
test
test
mov
dec
fs
movs
into
add
mov
or
dec
gs
cmps
push
bound
and
aad
mov
in
push
gs
add
out
add
lahf
mov
sub
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
lods
jl
movs
fwait
clc
mov
jno
add
cmps
loop
cmp
and
mov
jno
and
mov
mov
push
jno
gs
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
inc
jbe
pop
jno
popa
movs
fwait
enter
push
jp
and
out
push
dec
movs
jg
or
push
add
push
jmp
addr16
push
icebp
dec
gs
xor
out
add
xor
mov
gs
mov
dec
jle
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
or
mov
popa
jle
dec
cwde
test
lea
mov
dec
sub
call
add
or
stos
xor
outs
movs
mov
ins
test
popa
inc
xchg
test
cmps
pop
(bad)
mov
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
movs
push
push
gs
cmps
push
mov
test
movs
fwait
clc
mov
pop
fs
xor
mov
lods
cmps
fisub
dec
pop
add
mov
gs
mov
lods
jle
mov
jmp
mov
fs
test
imul
ds
cmps
cli
pusha
loope
mov
push
icebp
dec
gs
xor
out
add
xor
mov
lods
cmps
fimul
dec
pop
xor
mov
mov
ja
pop
add
mov
gs
mov
lods
jle
mov
jmp
mov
fs
test
imul
ds
cmps
mov
loope
mov
push
icebp
dec
gs
xor
out
add
mov
mov
mov
call
jle
dec
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
jbe
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
test
push
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
mov
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jbe
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
std
test
push
ja
movs
fwait
sub
fimul
test
nop
jl
call
add
test
popa
dec
xchg
jne
dec
gs
dec
fs
mov
gs
mov
dec
jle
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
mul
mov
lds
dec
cwde
test
lea
mov
dec
sub
call
add
lods
push
dec
fs
cmps
push
mov
mul
dec
fs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
dec
popa
js
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
movs
push
lds
stos
dec
fs
pop
ja
movs
fwait
sub
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
popaw
sbb
jb
movs
fwait
clc
mov
cmps
dec
outs
js
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
xor
pop
int
cmps
xchg
jge
addr16
push
icebp
dec
gs
xor
out
add
scas
cmps
jmp
xchg
mov
movs
jb
push
jno
fs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
dec
popa
js
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
fsub
dec
fs
ins
ja
movs
fwait
sub
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
popaw
sbb
jb
movs
fwait
clc
mov
cmps
dec
outs
js
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
xchg
movs
push
lds
ja
fs
imul
fimul
test
nop
jl
call
add
test
popa
dec
xchg
popa
movs
dec
gs
mov
fs
outs
mov
movs
mov
gs
mov
dec
jle
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
sar
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
mov
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jbe
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
cmp
mov
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
pop
std
add
test
jae
cmps
dec
gs
dec
fs
add
out
add
push
jno
sub
dec
out
call
mov
pusha
test
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
jbe
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
leave
ins
test
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
mov
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jbe
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
icebp
fdiv
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
dec
out
call
pop
adc
and
cmps
jb
or
imul
mov
push
icebp
dec
gs
add
dec
out
in
cmps
loope
mov
push
icebp
dec
gs
add
mov
out
out
movs
loope
mov
push
icebp
dec
gs
adc
movs
mov
gs
pop
fisttp
fwait
enter
push
xor
sub
fwait
sub
mov
lods
jl
icebp
call
popa
inc
xchg
test
shl
test
jmp
xchg
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
add
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
fwait
pop
hlt
push
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
push
jp
and
out
stos
dec
movs
outs
movs
mov
clc
popf
jo
and
xor
cwde
test
lea
mov
dec
sub
call
add
lods
push
dec
fs
cmps
push
mov
add
call
xlat
in
test
gs
movs
fwait
sub
fimul
test
nop
jl
call
add
test
popa
dec
xchg
jne
dec
gs
dec
fs
jo
and
xor
cwde
test
lea
mov
dec
sub
call
add
outs
movs
mov
push
popf
jo
and
xor
cwde
test
lea
mov
dec
sub
call
add
outs
movs
mov
lods
sub
dec
mov
pop
or
cwde
push
pop
int
cmps
out
dec
loope
mov
push
icebp
dec
gs
xor
out
add
or
mov
mov
dec
push
pushf
mov
pop
mov
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
lods
jl
ret
test
jmp
xchg
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
movs
push
push
gs
cmps
add
popa
movs
fwait
clc
mov
cmps
jbe
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
lods
test
test
imul
lods
cmp
jno
popa
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
lods
test
test
imul
xor
cwde
test
lea
mov
dec
sub
call
add
or
stos
sbb
outs
movs
mov
push
fld
js
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
inc
inc
mov
movs
push
push
gs
cmps
push
mov
test
mov
js
cmps
dec
pushf
in
dec
fs
add
out
add
arpl
sub
call
add
xchg
add
out
add
out
add
add
test
dec
imul
xor
pop
fld
js
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
enter
add
and
cmps
jb
or
imul
mov
push
icebp
dec
gs
add
dec
out
in
cmps
loope
mov
push
icebp
dec
gs
add
mov
out
out
movs
loope
mov
push
icebp
dec
gs
adc
out
add
out
add
out
add
out
pusha
sahf
out
add
out
add
cmps
mov
push
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
pop
movs
stos
cmps
loop
cmp
pop
test
data16
mov
xchg
dec
int3
repz
aad
out
pop
cdq
test
lea
mov
dec
sub
call
add
sub
mov
dec
xchg
mov
inc
movs
call
call
add
test
pop
pop
xor
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
test
cmps
(bad)
pusha
ins
pop
mov
popa
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
fsub
fs
mov
movs
fwait
sub
fimul
test
nop
jl
call
add
test
mov
pop
gs
cmps
pop
push
jle
dec
cwde
test
test
movs
pop
hlt
xchg
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
cli
arpl
jle
dec
cwde
test
lea
mov
dec
sub
call
add
xor
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
js
cwde
lds
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
mulps
sub
mov
aam
pop
dec
pusha
xor
mov
gs
cmps
fiadd
dec
pop
xor
mov
gs
cmps
fidiv
outs
mov
movs
mov
gs
mov
dec
jle
mov
jmp
mov
fs
test
imul
ds
sar
cwde
test
lea
mov
dec
sub
call
add
test
cmps
(bad)
pusha
mov
pop
dec
fs
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
fsub
dec
fs
popf
jbe
movs
fwait
sub
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
(bad)
ins
sbb
jb
movs
fwait
clc
mov
cmps
push
imul
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
les
dec
fs
xchg
jbe
movs
fwait
sub
fimul
test
nop
jl
call
add
test
mov
pop
gs
mov
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
or
mov
sub
dec
cwde
test
lea
mov
dec
sub
call
add
test
cmps
(bad)
pusha
ins
pop
pop
mov
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
cld
movs
push
lds
aaa
dec
fs
test
sub
fimul
test
nop
jl
call
add
test
mov
pop
gs
mov
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
push
bound
out
cmp
lea
mov
dec
sub
call
add
test
cmps
(bad)
pusha
ins
pop
push
mov
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
test
push
lds
mov
test
mov
sub
fimul
test
nop
jl
call
add
test
mov
pop
gs
neg
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
test
lds
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
mulps
sub
mov
aam
arpl
xor
mov
gs
cmps
fiadd
dec
pop
xor
mov
gs
cmps
fidiv
outs
mov
movs
mov
gs
mov
dec
jle
mov
jmp
mov
fs
test
imul
ds
cmps
jle
loope
mov
push
icebp
dec
gs
xor
out
add
movs
cmps
jmp
or
jno
(bad)
xchg
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
mov
sub
fimul
test
nop
jl
call
add
test
mov
pop
gs
mov
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
sbb
mov
sar
dec
cwde
test
lea
mov
dec
sub
call
add
test
cmps
(bad)
pusha
adc
mov
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
in
pop
pop
int
cmps
inc
sahf
loope
mov
push
icebp
dec
gs
xor
out
add
scas
cmps
jmp
xchg
dec
ja
jno
(bad)
xchg
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
in
test
mov
push
fimul
test
nop
jl
call
add
test
mov
pop
gs
mov
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
sub
mov
leave
jle
dec
cwde
test
lea
mov
dec
sub
call
add
test
cmps
(bad)
pusha
adc
mov
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
sahf
arpl
jno
popa
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
mov
mov
fs
mov
push
fimul
test
nop
jl
call
add
pop
push
call
jno
aad
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
icebp
mov
dec
les
pop
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
dec
out
call
(bad)
jg
popa
dec
xchg
popa
movs
dec
gs
mov
fs
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
push
jp
and
out
xchg
dec
movs
ins
mov
js
xchg
dec
int3
repz
push
jno
cmp
jns
xor
call
add
push
jno
sub
xchg
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
add
mov
cld
jnp
stos
cmps
out
adc
push
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
mov
sbb
jb
movs
fwait
clc
mov
cmps
(bad)
pusha
js
jno
popa
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
movs
into
inc
popf
push
mov
cmps
sbb
jo
and
jle
adc
jbe
sbb
out
dec
sub
call
add
mov
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
jmp
mov
fs
test
imul
gs
jnp
scas
cmps
out
inc
push
jno
cmp
jns
xor
call
add
push
jno
sub
dec
out
call
jbe
mov
inc
xchg
cdq
call
mov
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
(bad)
pusha
js
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
sbb
jne
stos
sub
sahf
data16
js
add
pop
gs
jnp
cmc
pop
in
push
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
fsub
fs
mov
movs
fwait
sub
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
pop
fs
xor
mov
lods
cmps
(bad)
mov
outs
mov
lods
mov
gs
cmps
fidivr
addr16
pop
add
mov
gs
cmps
fidiv
movs
and
out
xchg
dec
movs
sbb
int3
repz
push
jno
cmp
jns
xor
call
add
push
jno
sub
xchg
test
jno
aad
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
ss
push
test
push
pop
or
nop
stos
push
vcvtps2dq
push
fimul
test
nop
jl
call
add
push
icebp
call
cmps
jmp
jp
addr16
cmps
pop
(bad)
mov
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
(bad)
pusha
js
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
sbb
jne
stos
sub
sahf
data16
js
add
pop
gs
jnp
cmc
pop
in
push
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
outs
sbb
jb
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
cmps
fisub
inc
dec
pop
jp
and
out
push
dec
movs
jg
or
fsub
fs
mov
movs
fwait
sub
fimul
test
nop
jl
call
add
push
icebp
call
cmps
jmp
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
(bad)
pusha
js
jno
popa
movs
fwait
enter
push
add
mov
gs
mov
sbb
jne
stos
sub
sahf
data16
js
add
pop
gs
jnp
cmc
pop
in
push
fimul
test
nop
jl
call
add
push
icebp
call
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
movs
pop
hlt
xchg
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
fwait
aad
cmps
data16
mov
int
out
dec
cwde
test
lea
mov
dec
sub
call
add
or
stos
dec
outs
movs
mov
je
cmps
(bad)
arpl
add
jmp
mov
dec
inc
jle
setns
mov
dec
test
test
call
lea
mov
dec
test
test
imul
addr16
mov
dec
cwde
test
test
call
stos
cmps
shr
call
stos
cmps
loop
cmp
jno
popa
movs
fwait
enter
push
jp
and
out
push
dec
movs
jg
or
add
pop
int
cmps
mov
loope
mov
push
icebp
dec
gs
xor
out
add
xor
mov
gs
mov
dec
jle
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
push
jno
movs
stos
cmps
loop
cmp
jbe
push
dec
mov
movs
into
inc
add
mov
cld
jnp
or
out
test
std
jbe
movs
fwait
sub
fimul
test
nop
jl
call
add
popa
movs
fwait
clc
mov
cmps
cmps
sbb
jb
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
mov
lods
test
test
imul
ds
outs
mov
push
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
mov
sbb
jb
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
push
add
mov
gs
mov
jl
jne
stos
sub
sahf
popfw
jo
and
sbb
cwde
test
lea
mov
dec
sub
call
add
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
cmps
out
imul
jb
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
mov
inc
or
lea
jmp
mov
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmc
inc
mov
push
jno
gs
cmps
shr
pop
jno
popa
movs
fwait
clc
mov
ja
pop
add
mov
gs
cmps
fisub
addr16
pop
add
mov
gs
cmps
(bad)
mov
movs
and
out
push
dec
movs
jg
fcom
push
pop
int
cmps
mov
mov
icebp
dec
gs
xor
out
add
xor
mov
gs
mov
hlt
jle
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
sbb
dec
fs
test
imul
ds
out
push
jle
dec
cwde
test
lea
mov
dec
sub
call
add
lds
dec
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
sbb
dec
fs
test
imul
ds
mov
test
dec
cwde
test
lea
mov
dec
sub
call
add
mov
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
sbb
dec
fs
test
imul
ds
mov
inc
jle
dec
cwde
test
lea
mov
dec
sub
call
add
inc
scas
pop
hlt
xchg
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
sbb
dec
fs
test
imul
ds
mov
xor
test
lea
mov
dec
sub
call
add
cmc
lods
pop
hlt
xchg
mov
fs
(bad)
call
pop
hlt
xchg
mov
fs
sahf
call
pop
hlt
xchg
mov
fs
mov
sbb
dec
fs
test
imul
ds
mov
cmc
jle
dec
cwde
test
lea
mov
dec
sub
call
add
cmps
mov
jno
aad
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
lods
and
ins
mov
xchg
dec
int3
repz
add
add
push
jno
gs
cmps
push
movs
aad
mov
in
push
gs
add
push
jno
sub
dec
out
call
mov
fs
outs
mov
movs
mov
gs
mov
fs
(bad)
call
pop
hlt
push
jno
mov
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
scas
and
ins
mov
mov
(bad)
in
dec
fs
add
out
add
lahf
mov
sub
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
pop
fcom
push
pop
int
cmps
mov
mov
icebp
dec
gs
xor
out
add
or
mov
mov
dec
shl
mov
pop
test
movs
fwait
clc
mov
pop
fcomp
outs
mov
lods
mov
lods
cmps
fiadd
ja
pop
add
mov
gs
cmps
fisub
addr16
pop
add
mov
gs
cmps
(bad)
mov
pop
and
mov
test
call
add
mov
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
pop
fcom
push
pop
int
cmps
jp
loope
mov
push
icebp
dec
gs
xor
out
add
or
mov
mov
dec
shl
mov
pop
test
movs
fwait
clc
mov
cmps
and
pop
jno
popa
movs
fwait
clc
mov
cmps
inc
arpl
jno
popa
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
pop
int
or
(bad)
call
add
out
add
mov
out
jbe
inc
mov
lea
out
es
cmps
push
movs
gs
mov
cmps
push
gs
and
ins
mov
jno
daa
stos
cmps
push
movs
in
mov
cmps
push
lods
and
ins
mov
jno
and
cmps
push
movs
cmc
inc
mov
add
push
gs
jnp
or
and
movs
fwait
sub
fimul
test
nop
jl
call
add
push
icebp
call
cmps
jmp
stos
mov
movs
jb
push
jno
fs
cmps
shr
call
stos
cmps
shr
call
stos
cmps
loop
cmp
dec
jbe
call
stos
cmps
loop
cmp
dec
jbe
call
scas
and
ins
mov
mov
dec
fs
add
out
add
lahf
mov
sub
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
pop
fcom
push
pop
int
cmps
push
loope
mov
push
icebp
dec
gs
xor
out
add
or
mov
mov
dec
shl
mov
pop
test
movs
fwait
clc
mov
cmps
adc
pop
jno
popa
movs
fwait
clc
mov
cmps
shr
pop
jno
popa
movs
fwait
enter
pusha
test
pop
jno
popa
movs
fwait
enter
pusha
test
push
dec
mov
pop
int
or
mov
out
add
out
add
jle
add
popf
mov
gs
call
jmp
pop
lds
fwait
sub
push
cwde
test
scas
jl
mov
int
jmp
sub
jmp
stos
mov
into
inc
jmp
movs
fwait
sub
cli
dec
cwde
test
scas
jl
pop
fcom
push
pop
int
cmps
fmulp
loope
mov
push
icebp
dec
gs
xor
out
add
or
mov
mov
dec
push
jle
push
cdq
gs
xor
call
add
out
add
cmps
add
call
mov
dec
sub
call
add
call
add
push
jno
sub
out
setns
mov
dec
sub
pop
add
push
icebp
call
call
add
out
add
fisubr
dec
fs
add
out
add
cmps
dec
add
test
dec
mov
cmps
bound
call
add
jge
push
jae
lods
pop
gs
(bad)
out
jmp
mov
gs
aad
jo
test
push
sub
add
jg
add
cmp
lock
jae
mov
lahf
adc
sti
mov
jae
mov
jp
mov
sbb
mov
(bad)
mov
sub
jmp
ins
inc
add
imul
pop
xchg
popa
add
jno
out
jae
mov
inc
shl
aaa
fnstsw
jmp
jae
mov
jae
mov
pop
lods
call
lods
xor
xor
lock
jae
mov
jae
mov
popf
(bad)
mov
pop
out
mov
jae
mov
jae
mov
lods
(bad)
mov
pop
out
mov
cmp
lock
in
jae
mov
pop
lods
call
lods
ret
pop
jae
mov
jae
mov
jmp
mov
cmp
mul
jae
mov
sbb
add
pop
adc
out
pop
jae
mov
sbb
out
jae
mov
adc
(bad)
pop
jae
mov
jae
mov
sub
fstp
jae
mov
jae
mov
daa
popf
lds
aas
mov
(bad)
jne
inc
loop
jae
mov
jae
mov
dec
inc
repnz
add
lock
jae
mov
repz
ja
lock
mov
jae
mov
repz
jb
add
lock
jae
mov
adc
mov
ret
pop
jae
mov
jae
mov
jae
mov
jmp
push
fldenv
mov
jmp
es
mov
cmp
lock
jae
mov
xchg
test
mov
cmp
pop
sub
ret
pop
jae
mov
jae
mov
sahf
xchg
mov
ret
pop
jae
mov
jae
mov
jae
mov
jmp
mov
cmp
mul
sbb
jmp
nop
mov
mov
out
jae
mov
jae
mov
(bad)
mov
sub
in
xlat
in
mov
sub
sbb
cmp
jmp
jae
mov
xor
lods
ds
jmp
jae
add
jae
mov
ds
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
jae
mov
jae
mov
lods
add
push
mov
jmp
mov
jmp
movs
mov
les
xor
repz
xlat
cmp
pop
xor
neg
mov
cmp
pop
adc
test
ss
int
adc
stos
xor
(bad)
inc
pop
add
fidiv
sbb
xor
repnz
popa
cli
inc
lods
add
mov
push
jmp
mov
push
mov
or
outs
mov
(bad)
mov
cmp
dec
lock
jecxz
mov
inc
aad
xor
adc
(bad)
mov
daa
lods
test
mov
adc
pop
femms
ret
pop
mov
mov
push
xor
mov
push
jmp
sub
inc
pop
data16
fmul
inc
inc
lds
add
mov
(bad)
mov
xchg
mov
add
outs
aaa
std
dec
xchg
stc
add
mov
inc
or
popf
ret
pop
or
sbb
dec
xchg
test
adc
and
inc
sub
adc
repz
cmps
into
mov
xor
pop
cmp
sbb
pop
aas
sbb
or
pop
pop
cmp
sbb
add
sbb
pop
dec
out
inc
adc
pop
mov
pop
aas
inc
push
pop
aas
sbb
pop
cmp
sbb
pop
neg
pop
aas
sbb
xor
sbb
pop
aas
sbb
nop
rcr
pop
aas
sbb
pop
aas
sbb
pop
push
sbb
pop
aas
dec
jb
aas
sbb
test
xlat
loope
aas
push
pop
pop
push
sbb
adc
xor
push
pop
pop
neg
pop
aas
sbb
pop
aas
sbb
fs
dec
pop
aas
push
push
pop
aas
sbb
pop
aas
sbb
nop
mov
in
inc
pop
aas
sbb
pop
aas
sbb
pop
push
sbb
adc
rcr
push
pop
pop
aas
sbb
pop
aas
sbb
hlt
iret
push
aad
aas
inc
push
pop
aas
sbb
pop
aas
sbb
test
dec
pop
aas
push
push
pop
aas
sbb
xchg
dec
inc
ret
push
sub
xchg
inc
shl
push
add
xchg
ret
inc
mov
inc
push
jmp
jo
xchg
xor
repnz
add
cmp
push
pop
sub
add
jae
mov
jae
mov
sahf
xchg
mov
cmp
mov
jae
mov
jae
mov
std
ja
push
test
mov
lods
inc
push
mov
je
mov
xor
(bad)
push
sti
xchg
imul
xor
dec
popf
mov
mov
arpl
jmp
push
pop
mul
ja
sub
push
cmp
push
add
sahf
cmp
mov
inc
and
pop
retf
jno
inc
pop
dec
in
xchg
sub
adc
ror
adc
xchg
ja
push
pop
push
repz
pop
sub
push
repz
cs
pop
fwait
lods
leave
lods
sub
inc
sub
pop
mov
inc
sub
xchg
int
out
sbb
or
mov
push
jb
pop
or
cmp
inc
ret
and
dec
inc
aad
ds
xchg
xor
add
add
xor
pop
or
ret
pop
lea
xor
jmp
push
jb
aam
dec
xchg
stc
ja
sti
repnz
fimul
cli
mov
cmp
aaa
mov
push
(bad)
pusha
inc
bound
retf
xor
dec
xchg
mov
adc
out
and
cmp
dec
lea
(bad)
cmps
outs
mov
daa
test
(bad)
fsubr
xchg
fldcw
cwde
xchg
test
(bad)
fsubr
aaa
jp
fist
pop
and
popf
sbb
(bad)
fsubr
(bad)
fsubr
(bad)
test
pop
fsubr
mov
cwde
test
(bad)
fsubr
lds
push
stos
mov
cmp
(bad)
fsubr
cmp
push
test
cmps
fsubr
mov
push
(bad)
fsubr
aaa
fisubr
test
xchg
fsubr
mov
and
(bad)
fsubr
pop
fsubr
lds
xor
(bad)
fsubr
cmps
fsubr
mov
push
(bad)
fsubr
pop
fsubr
mov
test
(bad)
fsubr
sahf
fisubr
mov
lds
stos
loop
mov
xor
popf
and
mov
in
pop
jbe
loope
inc
push
inc
xchg
pop
adc
mov
mov
jae
mov
jae
mov
jae
mov
(bad)
adc
dec
out
stos
call
loope
icebp
push
dec
jae
mov
jae
mov
jae
mov
mov
(bad)
mov
ret
dec
jae
mov
jae
mov
jae
mov
jmp
sbb
movs
sub
adc
mov
stos
inc
dec
je
push
int3
pop
ds
inc
cmp
fwait
mov
cmp
mov
imul
and
fwait
ss
sub
lahf
ret
dec
cmp
inc
push
pop
out
add
dec
sar
or
add
cmp
daa
mov
mov
push
cmp
mov
std
dec
shl
cwde
pop
retf
pop
pop
jecxz
mov
adc
mov
jmp
xor
lods
popf
cmps
adc
ds
push
leave
jnp
mov
adc
(bad)
sbb
dec
(bad)
cmps
mov
sti
sar
or
fstp
or
dec
lock
out
jle
dec
xchg
inc
xchg
pop
or
xchg
mov
push
dec
cli
cmps
sub
aam
ja
push
adc
(bad)
push
cmps
mov
push
inc
cmps
stos
cmovnp
push
repz
aaa
push
fcmove
rol
daa
lods
add
jo
stos
push
xor
jp
mov
adc
pop
mov
push
aaa
mov
inc
imul
and
mov
pop
and
imul
add
cwde
add
sbb
pop
inc
pop
pop
in
add
(bad)
inc
inc
fidivr
xor
idiv
jae
or
js
jmp
and
cmps
int
sti
jmp
add
pmaxub
cmps
int
sti
cmps
int
pop
stos
into
dec
mov
mov
sti
cmps
int
sti
cmps
int
mov
in
adc
std
jbe
popa
in
or
out
pop
pop
inc
or
pop
and
cmps
int
sti
cmps
int
xor
dec
mov
cmp
dec
sti
dec
into
dec
sub
jmp
stc
cmps
cdq
push
sti
cmps
int
sti
cmps
int
mov
cmps
sub
sti
(bad)
int
sti
cmps
icebp
dec
sti
cmps
int
sti
(bad)
dec
pop
std
mov
hlt
lods
or
and
jge
sti
imul
pop
std
and
dec
adc
jmp
add
push
enter
int
sti
cmps
int
sti
cmps
int
xchg
and
cmps
int
sti
inc
iret
dec
or
xchg
xchg
or
inc
jmp
push
or
mov
inc
pop
pop
push
or
cmps
int
mov
(bad)
in
jmp
or
test
push
mov
jmp
int
sti
cmps
int
stos
dec
dec
mov
jmp
int
sti
cmps
int
sti
cmps
int
jne
lahf
adc
cmps
add
stos
dec
dec
mov
jmp
int
pop
retf
mov
mov
sti
cmps
int
aaa
push
iret
mov
cmps
xchg
push
sti
cmps
int
fnstenv
push
stc
cmps
cdq
push
sti
cmps
int
cs
cmps
cli
cmps
ins
clc
sti
cmps
int
sti
cmps
int
aad
lahf
adc
cmps
add
sti
cmps
int
stos
dec
dec
mov
jmp
int
sti
cmps
int
cmc
push
lahf
adc
cmps
add
stos
dec
dec
mov
jmp
int
sti
cmps
int
stos
dec
dec
mov
jmp
int
sti
cmps
int
sti
cmps
int
and
xchg
push
stc
cmps
add
lds
adc
cmps
add
inc
jmp
or
jmp
int
sti
cmps
int
sti
cmps
int
xchg
and
push
pop
in
cmps
stc
cmps
add
adc
cmps
sub
sti
cmps
int
sti
cmps
int
sti
out
dec
jg
jbe
popa
mov
(bad)
icebp
mov
jmp
pop
sti
cmps
int
adc
cmps
sub
sti
cmps
int
sti
cmps
int
sti
out
dec
jg
jbe
mov
add
inc
push
lahf
adc
cmps
add
sti
cmps
int
add
cmp
fstp
mov
aas
adc
cmps
int
sti
cmps
int
sti
inc
into
dec
out
inc
and
cmps
int
sti
cmps
int
stos
dec
dec
mov
jmp
int
sti
cmps
int
stos
dec
dec
mov
jmp
int
sti
cmps
int
sti
cmps
int
mov
int3
and
cmps
int
sti
cmps
int
pop
call
and
sti
cmps
jge
sti
cmps
int
sti
cmps
int
mov
loope
adc
cmps
int
sti
dec
int3
dec
mov
pop
das
sti
cmps
int
sti
cmps
int
sti
cmps
int
or
push
test
cmps
or
push
clc
sar
cmps
int
sti
cmps
int
pop
push
iret
dec
mov
jne
sti
cmps
int
sti
inc
into
dec
cs
and
cmps
int
sti
cmps
int
pop
test
dec
mov
cld
add
mov
cmps
or
cmps
int
cld
sub
movs
adc
cmps
sub
sti
cmps
int
sti
cmps
int
sti
add
dec
mov
add
cmps
int
sti
cmps
int
cdq
jnp
je
aam
daa
mov
xchg
pop
cmps
cli
or
jmp
add
and
jmp
or
add
push
pop
push
add
sti
cmps
int
sti
cmps
int
sti
cmps
int
cli
cmps
lods
movs
sti
cmps
int
cli
cmps
lods
mov
cmps
int
pop
call
and
sti
cmps
jge
sti
cmps
int
sti
cmps
int
xchg
cmps
iret
movs
adc
cmps
cmp
dec
sti
cmps
int
sti
dec
dec
mov
mov
cli
mov
pop
pop
sti
cmps
int
sti
cmps
int
mov
popa
push
adc
sub
mov
pop
adc
xchg
sti
mov
dec
pop
adc
test
pusha
std
push
sbb
cmp
add
inc
pop
ds
add
retf
fdivrp
lods
cmp
inc
mov
mov
pop
mov
xchg
mov
add
jno
out
jae
mov
sub
in
jae
mov
jae
mov
cmp
mov
jmp
mov
inc
ret
lock
jae
mov
or
push
mov
cmp
ds
mov
in
test
jae
(bad)
in
jae
mov
(bad)
mov
jno
jmp
jae
mov
jae
mov
xchg
mov
add
lods
jmp
dec
jae
mov
jae
mov
sub
mov
cmp
mov
push
mov
jae
mov
jae
mov
mov
mov
cmp
inc
mov
lock
cmp
mov
jmp
mov
inc
adc
jae
mov
jae
mov
ins
add
push
cmp
pop
hlt
or
mov
mov
in
test
jae
(bad)
in
jae
mov
jae
mov
sub
mov
jae
mov
xchg
mov
add
jge
mov
jae
mov
jae
mov
or
adc
fbld
xchg
dec
push
mov
je
mov
adc
cli
imul
adc
push
loop
cmp
(bad)
movs
fist
gs
push
push
push
mov
imul
add
sar
ss
adc
stos
(bad)
std
(bad)
inc
(bad)
sar
mov
(bad)
ins
cmp
xor
ds
dec
and
pop
leave
cmp
mov
jbe
fnclex
mov
push
jmp
hlt
adc
push
xor
(bad)
and
mov
repnz
xchg
adc
cmp
inc
aaa
inc
gs
(bad)
js
dec
jecxz
dec
dec
cli
mov
jmp
sub
adc
call
mov
adc
mov
out
iret
sub
or
or
adc
fbld
cmp
push
push
dec
and
sbb
mov
or
ret
pop
leave
stos
add
xor
ret
pop
push
inc
pop
jb
dec
add
ret
pop
xor
dec
xchg
jmp
sbb
rcr
call
jo
push
adc
and
and
lock
cmp
or
add
pusha
xlat
jns
pusha
arpl
pusha
vmread
popa
cmps
js
xchg
xlat
jp
pusha
cmps
les
cmps
fcomp
leave
cmps
js
pop
jle
iret
sub
jmp
ss
out
aad
(bad)
pusha
jmp
mov
jmp
xor
fs
pop
(bad)
mov
ss
das
jmp
fcomp
pusha
pop
(bad)
mov
jmp
ss
das
jmp
xor
jne
hlt
outs
adc
push
outs
sub
jmp
ss
xchg
xor
popa
jmp
cwde
das
jmp
aaa
(bad)
push
psubsw
mov
jp
pusha
pop
(bad)
mov
sbb
das
jmp
ss
jg
xor
jne
dec
imul
inc
pop
jne
and
mov
cdq
jne
mov
pop
(bad)
jae
test
shl
cdq
ret
pop
ds
jmp
in
inc
stc
push
push
and
mov
cmp
es
mov
fs
mov
js
outs
inc
pop
cs
outs
cmp
xlat
pop
inc
mov
pop
inc
push
mov
(bad)
mov
nop
clc
adc
fcom
fild
popa
mov
mov
adc
and
outs
mov
inc
mov
push
ret
inc
inc
push
add
sbb
cmp
repz
xor
sub
mov
popf
cmp
dec
idiv
pop
pop
adc
cs
aas
mov
cld
lods
ret
stos
add
sti
inc
cld
dec
xchg
imul
inc
aas
mov
std
dec
xchg
mov
icebp
dec
xchg
dec
xor
xchg
adc
push
cmp
rcl
pop
scas
mov
(bad)
mov
fld
or
adc
dec
fcmovb
or
cmp
mov
repz
fcom
movs
xor
lods
xchg
mov
adc
cmp
push
mov
push
arpl
push
ret
inc
pop
mov
fadd
dec
xchg
shr
aad
xor
addr16
jmp
push
and
push
mov
rol
arpl
dec
stc
cmps
and
cmp
pop
xor
pop
cli
mov
dec
sti
pop
jb
int3
push
out
dec
lods
jnp
mov
lods
scas
loop
mov
loope
jne
mov
loop
loopne
loop
lods
icebp
into
push
scas
xor
loope
mov
loop
lods
icebp
add
dec
mov
or
idiv
loop
lods
icebp
loop
lods
icebp
adc
loope
sbb
(bad)
test
scas
idiv
loop
lods
icebp
loop
lods
icebp
pop
lods
(bad)
test
jecxz
mov
loop
lods
icebp
loop
scas
icebp
lods
scas
loop
int3
adc
push
mov
cs
lods
icebp
loop
lods
icebp
loop
lods
icebp
int3
adc
push
lods
push
sar
loope
repz
lods
icebp
loop
lods
icebp
nop
mov
xor
test
iret
loopne
lods
jecxz
stos
loop
lods
icebp
loop
scas
icebp
mov
jmp
out
lods
(bad)
bound
push
js
mov
pusha
jbe
call
loop
lods
icebp
loop
lods
icebp
sub
scas
icebp
pop
iret
adc
loop
lods
icebp
loop
lods
icebp
mov
scas
pop
loopne
loopne
loop
lods
icebp
bound
icebp
int3
push
into
dec
loopne
hlt
mov
loop
lods
icebp
ss
icebp
add
(bad)
cmps
loop
lods
icebp
loop
lods
icebp
mov
inc
pop
mov
loop
sti
arpl
cmps
loop
lods
icebp
loop
scas
icebp
dec
test
dec
cmp
lock
lods
icebp
adc
loopne
loop
lods
icebp
loop
lods
icebp
pop
dec
lods
mov
stos
pop
stos
inc
mov
ss
dec
in
mov
scas
pop
stos
inc
mov
ss
sahf
dec
sub
dec
mov
cli
scas
inc
pusha
loop
loopne
loop
lods
icebp
adc
loop
loop
loopne
loop
lods
icebp
loop
lods
icebp
scas
scas
neg
loope
mov
loop
lods
icebp
mov
scas
icebp
mov
scas
loop
loop
lods
icebp
loop
lods
icebp
loop
lods
icebp
pop
loopne
test
loop
scas
icebp
mov
push
pop
stos
sub
in
lods
scas
loop
mov
push
jmp
dec
in
lods
scas
loop
mov
push
jmp
push
jne
jl
(bad)
test
aaa
idiv
pusha
push
es
push
scas
jmp
mov
mov
mov
inc
inc
int3
jg
add
xor
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
inc
(bad)
mov
cmp
into
cld
dec
cmp
mov
std
mov
xor
adc
push
jle
rol
and
mov
jae
mov
jae
mov
or
jmp
push
cmp
and
mov
(bad)
mov
std
mov
mov
cli
outs
(bad)
sub
push
jecxz
and
fdiv
dec
sahf
cdq
mov
push
jmp
mov
dec
cmp
mov
imul
pop
dec
mov
xor
push
jmp
sbb
mov
jl
dec
xchg
cmp
mov
cld
dec
xor
loop
(bad)
stos
out
dec
cdq
cdq
jae
cmp
inc
add
outs
adc
adc
outs
sbb
mov
clc
cmps
push
mov
fwait
lods
in
lods
dec
fst
repnz
call
cdq
inc
stos
dec
or
ret
pop
or
dec
lds
iret
mov
fld
or
mov
retf
push
jmp
scas
dec
xchg
jne
inc
daa
and
dec
rcr
outs
mov
ja
cmps
xchg
in
push
or
mov
jmp
out
cld
dec
xchg
cdq
inc
mov
xor
dec
or
popf
ret
pop
mov
or
pushf
push
xchg
jge
sbb
out
cmp
and
jg
out
adc
(bad)
enter
push
outs
mov
pop
sbb
sbb
xchg
outs
mov
xor
dec
inc
addr16
outs
mov
jle
and
push
jo
mov
jle
and
cs
mov
sub
mov
aas
push
mov
sub
lods
in
cmp
mov
and
cmp
aaa
push
ret
nop
xor
inc
cs
mov
inc
dec
ss
sub
jb
adc
lock
mov
stos
or
sub
adc
mov
stos
dec
dec
je
inc
push
pop
mov
int
adc
call
mov
inc
movs
xor
fst
fstp
xor
fisttp
pop
push
add
fdivp
aas
mov
std
or
xchg
sbb
dec
sar
test
adc
ins
shl
lods
fistp
sahf
cmp
mov
std
lods
aam
sub
aad
mov
mov
cs
repz
gs
push
xchg
xor
and
push
sti
push
(bad)
push
mov
fwait
jle
sbb
xor
mov
or
xor
fimul
push
and
inc
stos
inc
(bad)
sub
pop
rcl
xchg
pop
mov
(bad)
mov
pop
mov
sbb
sar
dec
xchg
inc
inc
push
sar
add
dec
pop
cld
push
adc
cmp
in
mov
push
test
inc
pop
(bad)
(bad)
push
add
sti
mov
push
jmp
cdq
mov
push
dec
lds
mov
sbb
rdpmc
mov
mov
ret
pop
ror
mov
adc
dec
cmp
dec
pop
mov
clc
outs
cmp
ss
mov
sti
cli
imul
push
sbb
or
mov
xchg
inc
xchg
mov
xchg
inc
(bad)
sbb
repz
inc
dec
repnz
adc
repz
pop
sahf
xchg
sub
mov
retf
pop
sahf
adc
loop
jns
into
lahf
test
pop
sahf
cdq
pop
test
fdivr
call
pop
mov
or
icebp
xchg
dec
jae
mov
jae
mov
sub
test
jae
mov
jae
mov
sub
mov
jae
mov
and
sbb
in
jae
mov
jae
mov
cmp
and
mov
icebp
in
fstp
std
mov
cmp
adc
jnp
adc
jo
inc
cmp
jns
mov
cld
dec
shl
mov
neg
in
sub
mov
cmp
mov
std
add
fwait
lods
in
lods
xor
push
and
jne
inc
jbe
aad
push
xor
jge
mov
es
arpl
pop
push
inc
sbb
sbb
xchg
mov
jmp
aam
push
outs
retf
cmp
out
xchg
dec
in
ret
pop
push
mov
shl
adc
jno
cmp
out
xchg
aad
pop
cmp
pop
out
jnp
dec
mov
jmp
rol
fwait
lods
add
add
out
push
fwait
lods
dec
lods
aad
adc
test
or
aam
loop
ret
pop
movs
loopne
xor
jmp
aad
mov
dec
inc
xor
xor
pop
fisttp
sub
xor
mov
mov
jmp
or
call
pop
sub
pop
push
cmp
push
dec
into
cmp
arpl
imul
add
test
iret
lods
popa
sbb
jne
xor
outs
jecxz
xor
cli
mov
dec
cli
mov
push
mov
fidivr
cli
mov
shl
push
cmp
loope
jle
mov
jle
cli
mov
jmp
cs
clc
mov
jp
loopne
jnp
pop
hlt
outs
mov
and
gs
hlt
outs
mov
in
test
xchg
into
pusha
dec
je
sbb
cli
ret
pop
adc
outs
out
jae
mov
fistp
shl
stos
or
sub
adc
mov
repz
jmp
inc
dec
stos
dec
test
adc
repz
sbb
cmp
adc
aad
cmps
lds
xor
sbb
xor
ds
std
lods
add
push
inc
mov
push
inc
cmp
inc
dec
push
jp
push
jmp
sar
push
add
jge
lea
in
push
mov
fisttp
sbb
mov
xor
ficom
mov
or
xchg
rcr
lock
xor
mov
shr
popf
cmp
inc
push
push
sub
push
pop
add
pop
mov
inc
jmp
sub
push
(bad)
jno
data16
in
xchg
adc
sbb
dec
dec
hlt
mov
(bad)
xlat
cmp
dec
fcmove
test
cmp
push
xor
xchg
xchg
push
cmps
cs
lock
retf
mov
cmova
sub
xor
into
sub
clc
popf
ret
pop
pop
adc
add
out
lods
sbb
out
dec
inc
inc
loop
push
mov
les
inc
into
jns
push
out
out
call
pop
int
sbb
cs
imul
mov
stos
ret
stc
imul
pop
fwait
retf
jo
repnz
mov
jb
stos
ror
sub
fwait
sub
aam
push
jg
inc
or
push
mov
aam
add
inc
or
sub
xor
mov
or
jb
xor
fst
bound
jg
gs
adc
mov
lock
jae
mov
jae
mov
xor
sub
cld
popf
cmp
test
pusha
sub
dec
mov
jae
mov
jae
mov
mov
shl
jae
mov
aaa
out
mov
jae
mov
jae
mov
jae
mov
sub
in
jae
mov
xlat
lahf
mov
sub
cmp
stos
or
scas
call
mov
jle
cmp
xlat
mov
add
cs
or
add
out
imul
repz
add
cmp
adc
outs
(bad)
inc
xchg
jl
mov
xor
add
dec
(bad)
movs
inc
inc
retf
fidiv
imul
or
jmp
(bad)
sbb
mov
aas
mov
dec
push
xchg
inc
push
scas
aas
mov
dec
cmp
sbb
xchg
xor
push
or
add
push
push
dec
cmc
or
adc
mov
ret
pop
xlat
dec
dec
scas
xor
or
pop
mov
(bad)
mov
loope
push
(bad)
out
inc
adc
sub
adc
xchg
mov
push
pop
and
mov
(bad)
mov
dec
mov
sbb
jle
dec
call
pop
aas
pusha
push
cdq
xchg
loopne
mov
test
mov
cli
add
cmps
cmp
idiv
pop
push
sar
pop
mov
adc
addr16
mov
pop
retf
add
ds
push
leave
sub
mov
into
adc
push
inc
push
push
sbb
pop
in
push
dec
pop
cmp
inc
fiadd
pop
cmp
pop
xor
push
mov
clc
outs
cmp
push
or
pop
pop
inc
adc
fistp
sbb
cwde
je
or
stos
popa
sti
and
test
jge
sar
jae
mov
xchg
xchg
lock
mov
pop
fsub
mov
xor
and
or
stos
mov
and
inc
mov
mov
stos
call
mov
mov
adc
mov
jae
dec
out
jae
mov
pop
mov
ja
movs
jmp
mov
jae
mov
and
in
mov
jae
mov
jae
mov
cmp
lock
jae
mov
or
loope
cmp
lock
jae
mov
jae
mov
cmp
lock
jae
mov
ins
mov
jmp
fbstp
mov
jae
mov
and
lea
jae
mov
mov
repnz
lock
jae
mov
sub
mov
jae
mov
and
mov
jae
mov
jae
mov
cdq
mov
mov
mov
mov
jae
mov
adc
in
jae
mov
jae
mov
sub
mov
jae
mov
jae
mov
jmp
mov
jmp
jae
mov
cmp
out
sub
lea
mov
shl
mov
sti
imul
add
imul
aaa
loop
mov
(bad)
mov
scas
(bad)
outs
(bad)
lock
mov
aaa
pop
pop
push
pop
dec
retf
inc
sahf
sub
pop
cmp
cmp
inc
pop
les
pop
(bad)
pop
(bad)
(bad)
cmps
push
dec
xor
push
push
ds
or
adc
daa
lods
inc
lods
(bad)
dec
adc
fwait
lods
sbb
cmp
fcomp
loopne
cli
jge
adc
pusha
fld
or
aaa
dec
push
dec
fstp
or
inc
push
pop
sti
enter
cmps
sbb
adc
mov
push
pop
push
push
dec
dec
int3
cmp
mov
or
fist
inc
jp
test
pop
rcr
mov
ret
pop
adc
or
pusha
jmp
xchg
cmp
leave
mov
push
push
ins
les
rol
pop
cmps
fadd
dec
xchg
or
outs
(bad)
and
inc
fst
movs
xlat
inc
cli
jno
sbb
mov
js
mov
loope
mov
mov
push
add
mov
pushf
add
mov
or
clc
loop
jbe
jecxz
mov
or
loop
jbe
xchg
mov
loop
jbe
or
in
jmp
push
adc
ret
pop
sub
mov
out
jae
mov
ds
sub
std
and
mov
lods
mov
shl
mov
adc
shr
sbb
(bad)
mov
xor
dec
sahf
mov
pop
cmp
lods
xor
adc
dec
rcl
pop
rcl
icebp
inc
dec
push
dec
mov
adc
add
sahf
xchg
push
push
loop
push
mov
cmp
inc
shl
outs
dec
cmp
xor
dec
es
(bad)
push
push
mov
pop
mov
inc
mov
sbb
mov
ret
pop
ja
add
cmps
fst
movs
push
bound
mov
add
retf
mov
call
icebp
mov
std
add
add
das
jb
pop
push
rcl
movs
push
mov
mov
out
dec
xchg
rcr
push
cmp
sbb
jo
dec
xor
(bad)
pop
xor
mov
inc
pop
sub
mov
adc
mov
std
mov
xchg
mov
icebp
inc
rol
mov
or
jnp
inc
sbb
sub
adc
push
xor
add
mov
or
ret
pop
out
lock
xchg
in
repz
or
outs
cmp
inc
mov
not
into
iret
clc
outs
(bad)
sub
(bad)
push
repz
sbb
les
sbb
sub
cwde
fdiv
jp
imul
jne
or
or
mov
jp
imul
mov
jp
push
pop
fimul
and
fiadd
shl
ret
and
addr16
xor
into
jbe
sbb
sbb
rol
mov
stos
or
jae
mov
sub
mov
jae
mov
jae
mov
jno
fistp
adc
out
sub
mov
jae
mov
jae
mov
retf
dec
ret
lods
cmp
inc
mov
dec
sub
xchg
test
test
add
push
cmp
mov
mov
stos
or
sub
adc
mov
test
out
aam
repnz
imul
push
rcl
popa
dec
ss
aas
mov
std
movs
cmp
out
aaa
inc
dec
jae
dec
cmp
pop
adc
hlt
pop
jecxz
adc
cmp
sahf
ret
dec
cmp
push
repz
cs
pop
shl
inc
add
mov
push
push
dec
(bad)
enter
push
mov
js
ret
mov
dec
cmps
test
pop
retf
push
fstp
sub
cs
lock
xor
push
xchg
test
or
test
add
xchg
push
pop
mov
rcl
imul
inc
mov
call
dec
adc
pop
movs
dec
ficomp
inc
cmp
push
mov
ret
pop
ja
add
add
and
mov
push
scas
sub
inc
add
pop
adc
or
add
movs
adc
xchg
mov
mov
(bad)
clc
imul
cmp
pop
retf
push
cli
outs
rcr
inc
int
out
mov
push
aam
stos
xchg
inc
test
xchg
inc
shl
(bad)
sbb
mov
or
mov
sbb
mov
mov
inc
pop
call
int
xchg
mov
repnz
push
dec
bound
sahf
mov
ret
pop
mov
inc
into
or
stos
sub
jno
jmp
jae
mov
sub
jnp
cmp
inc
mov
bnd
jmp
mov
stos
call
mov
cmp
lock
jae
mov
jae
mov
sub
mov
jae
mov
jae
mov
sub
mov
cmp
hlt
mov
lock
push
ffree
call
mov
add
enter
mov
ss
repz
mov
mov
cmp
dec
mov
ss
cmps
push
clc
imul
mov
ret
outs
retf
dec
test
jmp
stos
call
inc
cmp
(bad)
mov
fstp
rcl
push
dec
pushf
adc
aas
mov
cld
test
adc
scas
icebp
cmps
push
push
call
mov
mov
pop
dec
xor
adc
push
mov
repnz
aad
push
(bad)
fst
out
fwait
lods
pop
lods
xor
dec
xor
xor
mov
or
mov
lods
(bad)
adc
pop
imul
test
xchg
(bad)
jmp
inc
pop
bnd
xchg
push
pop
inc
out
pop
push
jae
mov
push
leave
xchg
mov
and
jmp
call
(bad)
push
cli
cmps
movs
scas
fisttp
cli
mov
cs
repz
add
cmps
push
dec
scas
xchg
in
cdq
test
pop
sub
adc
(bad)
xchg
add
sbb
in
inc
neg
adc
shr
jl
push
adc
inc
jle
fiadd
mov
mov
repnz
scas
pop
lods
pusha
cmp
dec
mov
xchg
ret
mov
ins
adc
ret
rcr
push
sub
cwde
mov
in
lea
aad
mov
pop
sub
(bad)
out
(bad)
ret
pop
and
mov
stos
jae
add
jae
mov
jb
pop
or
xor
and
sbb
out
sub
cld
push
push
sub
loope
jmp
lock
jae
mov
jae
mov
or
shr
jae
mov
mov
mov
lods
mov
lock
adc
mov
jae
mov
dec
or
pop
jae
mov
mov
cmp
add
jae
mov
jae
mov
ror
setle
mov
or
leave
cld
and
cmp
sub
movs
fstp
xor
cmp
sahf
sub
dec
cmp
mov
add
add
mov
repz
cmps
loop
mov
mov
push
sbb
ret
fst
cs
repz
outs
push
inc
(bad)
popa
stos
add
dec
mov
jmp
mov
adc
mov
std
add
and
push
xchg
xor
inc
pusha
push
sti
jne
inc
inc
scas
(bad)
pop
lock
xchg
xchg
popf
inc
sub
inc
jbe
inc
add
hlt
(bad)
mov
cmp
out
xchg
cmc
outs
mov
sub
mov
cmp
mov
test
cmp
cmps
mov
movs
mov
movs
push
xchg
fwait
lods
in
lods
data16
cmps
jmp
mov
add
dec
xchg
mov
adc
cdq
frndint
mov
leave
(bad)
sbb
iret
push
xchg
push
xchg
mov
mov
pop
mov
std
mov
adc
rol
sbb
pop
ret
pop
rol
test
das
dec
inc
jp
mov
or
scas
sub
cmc
pop
fcomp
arpl
inc
movs
inc
retf
inc
call
inc
rcr
mov
sti
xor
cmps
xor
pop
mov
xchg
jb
retf
test
(bad)
sbb
pop
mov
mov
mov
std
sbb
inc
es
adc
mov
test
mov
dec
and
sub
mov
cmp
lock
jae
mov
push
mov
jb
adc
lock
jae
mov
adc
out
jae
fucomip
jae
mov
sbb
lock
daa
mov
lods
ss
sbb
retf
inc
retf
lock
jae
mov
bound
cld
add
adc
mov
(bad)
(bad)
dec
jo
inc
loopne
push
rsqrtps
repnz
aas
mov
cld
dec
shl
sar
xor
std
or
push
add
movs
sbb
sub
dec
stos
test
cmp
leave
pop
xchg
pop
cmp
push
repz
aad
sar
cmps
push
push
mov
and
fstp
or
cs
repz
jb
cs
sub
inc
inc
outs
pop
dec
xchg
mov
dec
ds
push
xor
cmovp
pop
(bad)
mov
cmp
loope
mov
mov
aas
mov
jg
ds
les
mov
inc
push
ffree
inc
push
pop
xchg
xchg
add
mov
jge
stos
add
jp
dec
aas
mov
std
dec
xchg
cmc
push
inc
shl
fdivr
push
iret
xchg
out
xor
add
xor
not
mov
push
jb
adc
inc
add
repnz
add
pop
adc
rol
out
ret
mov
cdq
rcl
pop
mov
adc
ret
rol
call
pop
es
add
je
pop
pop
dec
mov
push
stc
imul
inc
cld
aas
je
or
imul
or
mov
inc
xor
jmp
or
int3
cmp
inc
cmp
or
pushf
and
mov
(bad)
jmp
hlt
fst
scas
imul
ret
pop
int3
push
mov
mov
mov
jae
mov
jae
mov
dec
fdivr
push
sar
jmp
add
cmp
mov
je
mov
dec
(bad)
imul
in
jl
push
xchg
jmp
shr
mov
adc
cmp
mov
push
pop
adc
xor
lahf
lahf
out
sub
push
aaa
pop
pop
inc
xchg
adc
sub
inc
pop
pop
xor
jb
cwde
out
popf
cmp
inc
into
mov
mov
push
add
mov
xor
(bad)
mov
cwde
imul
cmp
dec
push
push
loopne
jbe
pop
stos
call
dec
fwait
cmp
dec
sahf
test
mov
(bad)
xchg
push
repnz
xchg
mov
mov
(bad)
mov
aad
pop
mov
adc
(bad)
int3
imul
xchg
icebp
or
stc
in
xor
dec
xchg
test
mov
shr
rcl
xchg
jo
mov
or
push
fisubr
and
inc
bound
push
pop
or
xor
xchg
fimul
pop
sbb
mov
xchg
clc
imul
dec
leave
inc
repnz
ror
dec
cmc
xor
js
jle
sub
xor
pop
jns
(bad)
pop
jns
(bad)
dec
test
scas
cmps
js
jbe
jns
(bad)
pop
cdq
into
(bad)
dec
cmc
idiv
jmp
jle
cmps
pusha
jge
inc
ss
push
pop
jns
(bad)
pop
jns
(bad)
jg
iret
(bad)
cmps
enter
jns
(bad)
pop
jns
mov
icebp
out
pop
lods
adc
ss
loope
pop
inc
popf
popf
and
loope
enter
push
jl
stc
pushf
xchg
mov
std
pop
pop
sub
pop
icebp
or
lock
jae
mov
jae
mov
add
jge
ret
inc
cmp
(bad)
mov
cmp
lock
jae
mov
retf
inc
jmp
mov
jne
stos
or
jmp
add
push
cmp
sub
(bad)
ret
pop
jae
mov
shr
sub
mov
mov
pop
cmp
sub
pop
ret
pop
sub
xchg
ret
pop
test
out
xchg
xor
sub
inc
or
inc
sub
jmp
xlat
jb
add
mov
mov
adc
mov
ret
push
jae
mov
jae
mov
jle
and
dec
xlat
jb
add
mov
mov
jae
mov
xor
push
enter
inc
ds
push
cwde
mov
jno
jmp
or
push
inc
ret
push
pop
mov
add
jmp
cmp
inc
jmp
mov
lock
jae
mov
jmp
push
jae
add
jae
mov
jae
mov
ret
push
dec
mov
aaa
imul
clc
push
or
scas
outs
mov
cmc
(bad)
push
mov
adc
fdivr
xor
sub
cmps
lds
popa
mov
repz
ret
(bad)
dec
sbb
jnp
dec
retf
pop
and
jmp
mov
adc
sahf
mov
(bad)
mov
xor
pop
loopne
jmp
pop
mov
push
es
loopne
mov
adc
ret
pop
lods
fist
xor
fstp
rcl
push
aaa
xor
inc
push
cwde
sbb
cmp
pop
sub
cmp
mov
lea
pop
mov
inc
ss
and
sub
pushf
xor
adc
push
and
adc
cmp
inc
mov
mov
cli
fdivr
enter
lods
rol
fstp
dec
xchg
gs
dec
jecxz
fmul
cdq
mov
dec
(bad)
sbb
pop
cmp
mov
inc
push
pop
ds
push
adc
sbb
xor
lods
(bad)
cmps
push
push
sbb
push
fistp
bound
push
enter
xor
dec
cmp
push
(bad)
(bad)
fnstcw
push
(bad)
mov
dec
rol
out
add
ret
lahf
sbb
push
lea
icebp
pop
inc
mov
hlt
cmp
imul
fisttp
mov
hlt
cmp
imul
lea
cmp
dec
add
dec
imul
mov
inc
mov
hlt
adc
push
pushf
ror
mov
cmc
adc
imul
in
dec
xor
jns
(bad)
rcl
shr
lock
lahf
ret
lahf
jge
push
(bad)
mov
dec
rol
out
add
ret
lahf
inc
test
mov
dec
popf
ret
lahf
xor
inc
xor
addr16
ret
lahf
ret
lahf
and
dec
lods
movs
dec
add
dec
add
mov
jp
mov
dec
popf
ret
lahf
ret
lahf
mov
dec
rol
out
add
xchg
in
xlat
cld
ret
lahf
ret
lahf
xchg
push
dec
sbb
in
iret
icebp
ret
lahf
ret
lahf
xchg
push
ficomp
ror
jne
aaa
pop
mov
aaa
les
out
add
lea
fsubr
dec
add
fwait
push
jp
mov
add
mov
and
pop
std
ret
lahf
ret
lahf
ret
lahf
mov
sub
imul
adc
stc
mov
stc
cwde
dec
dec
adc
jae
adc
mov
ja
sti
dec
mov
cld
add
icebp
shl
jae
mov
stos
leave
mov
cmp
or
adc
jmp
cmp
cmp
std
or
or
adc
gs
cmps
loop
out
xchg
and
ficomp
nop
std
mov
cmp
cli
paddusw
dec
cmp
punpcklwd
ss
cli
imul
or
lahf
cmp
sahf
mov
cld
mov
cmp
jno
iret
fwait
lods
sbb
xor
or
ret
pop
lock
push
sub
push
pop
stos
adc
push
xchg
mov
dec
jg
dec
(bad)
sbb
inc
cmp
lods
mov
inc
aas
cmp
cs
vpternlogd
push
pop
jmp
adc
fstp
sub
les
xchg
sub
or
mov
and
inc
cmp
push
push
cmp
inc
pop
push
dec
add
dec
cli
cmps
rol
push
repz
rcl
push
(bad)
mov
call
adc
xor
dec
call
pop
leave
call
mov
push
push
mov
dec
sbb
cs
repz
cs
repz
test
add
push
push
es
inc
pop
sbb
dec
lock
inc
jp
dec
xchg
in
push
xchg
mov
xor
enter
inc
popa
xor
fidivr
aaa
push
(bad)
test
in
pop
xchg
xor
xchg
test
dec
xchg
hlt
cmc
add
mov
dec
pop
add
hlt
pop
xchg
sbb
adc
cmc
jecxz
mov
mov
pop
scas
mov
je
cmps
mov
cmc
pop
xchg
and
jecxz
cmp
xchg
xchg
cmp
jmp
mov
dec
pop
pop
mov
inc
pop
push
mov
cmc
pop
xchg
mov
dec
xchg
mov
pusha
pop
inc
mov
hlt
pop
xchg
sub
setae
jmp
mov
mov
adc
dec
repz
test
mov
adc
je
push
and
stc
pop
cdq
push
in
je
inc
pop
xchg
pop
mov
adc
idiv
adc
rcr
loope
jb
hlt
pop
jbe
mov
adc
idiv
sti
sbb
mov
mov
lods
cmc
jnp
mov
mov
adc
not
fdivr
and
dec
pushf
push
cmps
mov
hlt
addr16
idiv
adc
mov
test
fs
mov
xchg
mov
mov
adc
not
fdivr
and
dec
or
cmps
mov
hlt
pop
xchg
idiv
adc
push
inc
adc
scas
and
dec
mov
cmps
mov
hlt
pop
xchg
idiv
adc
mov
lock
rol
loope
add
mov
adc
idiv
adc
cmps
and
dec
dec
adc
mov
mov
adc
fwait
and
dec
sbb
cmps
mov
hlt
jg
idiv
adc
idiv
mov
xchg
ss
(bad)
idiv
adc
outs
mov
inc
test
mov
adc
neg
fdiv
fidivr
inc
jmp
ins
(bad)
loope
(bad)
fsub
pop
scas
cmp
dec
mov
xchg
pop
push
mov
loope
outs
dec
add
mov
ins
mov
inc
xchg
test
jecxz
lock
mov
stos
leave
mov
cmp
dec
rcl
sub
jge
or
std
mov
dec
ins
adc
inc
(bad)
and
je
jle
inc
dec
mov
adc
or
dec
inc
cmp
mov
mov
adc
cmps
jecxz
rol
fidivr
adc
cmp
jbe
sar
imul
mov
rcl
das
pop
dec
dec
cdq
inc
jmp
cmp
adc
mov
fcom
call
mov
mov
mov
jmp
cmp
fdivr
or
in
sti
out
push
push
outs
jg
sub
lods
sbb
jmp
lods
and
(bad)
mov
push
rcl
out
cmp
in
pop
mov
popa
adc
and
inc
push
inc
rcr
add
push
mov
jne
and
mov
mov
test
mov
mov
or
xlat
dec
push
cli
fistp
jle
mov
adc
fwait
lods
add
push
cmp
jb
xor
xchg
js
popf
ret
pop
sub
push
mov
cmp
popf
ret
pop
xlat
pop
(bad)
jg
inc
repz
sub
push
mov
inc
mov
xor
(bad)
call
push
jle
fidiv
movs
cmp
ja
hlt
fsubrp
movs
mov
in
movs
mov
fisub
movs
hlt
fsubrp
movs
sti
aam
fsubrp
pop
clc
pop
mov
fsubrp
movs
xchg
data16
ins
hlt
ficom
movs
hlt
fsubrp
movs
dec
shr
in
push
ins
into
mov
or
pop
xchg
sub
dec
cmps
adc
hlt
ficom
movs
hlt
sahf
in
movs
jbe
push
stos
fmul
movs
hlt
fsubrp
movs
hlt
mov
ret
cmps
hlt
fsubrp
movs
hlt
dec
out
movs
mov
cmp
(bad)
sbb
fsubrp
movs
hlt
fsubrp
movs
dec
shr
in
lea
call
in
jo
fsubr
movs
hlt
mov
movs
xor
mov
sbb
jle
mov
fisubr
push
xor
sub
mov
adc
ret
ja
mov
jecxz
xchg
iret
mov
cmp
stos
or
sar
sub
adc
mov
xor
dec
je
dec
aaa
dec
loop
push
sti
outs
cmp
inc
sub
mov
sahf
stc
mov
mov
ret
jnp
(bad)
dec
sub
mov
fimul
ja
ret
mov
xchg
adc
cmp
inc
pushw
outs
or
ds
inc
sub
pop
retf
sbb
jmp
xchg
stc
sbb
push
adc
dec
jp
aas
mov
(bad)
lods
fidiv
in
das
xor
xchg
xor
push
(bad)
sub
mov
imul
mov
sbb
shl
sti
mov
dec
xchg
cmp
push
out
retf
mov
cld
mov
out
xchg
sub
inc
outs
enter
pop
xchg
repz
xor
push
xor
mov
pop
jmp
mov
(bad)
pop
xlat
mov
mov
push
sbb
sbb
pop
movs
in
or
jbe
add
sub
pop
push
and
inc
sbb
push
mov
(bad)
std
dec
xchg
sbb
les
add
jnp
adc
mov
sub
inc
enter
pop
and
js
retf
and
or
mov
inc
and
ins
add
outs
push
cmps
or
mov
inc
and
ins
add
inc
ins
add
mov
shr
push
inc
int
pop
inc
ins
add
inc
ins
add
test
add
sti
mov
mov
pop
cdq
and
pop
(bad)
or
dec
pop
cmp
xor
movs
pop
fisttp
inc
or
xchg
pop
inc
ins
add
inc
ins
add
inc
ins
add
mov
inc
or
xchg
pop
inc
ins
add
outs
add
mov
pop
inc
and
pop
inc
ins
add
inc
ins
add
outs
push
cmps
or
mov
inc
and
ins
add
div
scas
lock
pop
mov
popa
in
adc
inc
ins
add
or
add
inc
ins
add
aas
ins
add
sub
cmps
test
jp
cs
adc
inc
ins
add
inc
mov
add
inc
ins
add
outs
inc
push
xchg
cs
pop
fldcw
scas
pop
add
inc
pop
or
stos
lea
test
push
pop
push
or
pop
inc
ins
add
inc
ins
add
sbb
pop
gs
dec
clc
push
push
call
daa
xchg
pop
inc
ins
add
inc
ins
add
adc
loope
cmp
inc
ins
add
outs
push
pop
inc
test
pop
adc
inc
cmp
inc
ins
add
adc
inc
cmp
inc
ins
add
ins
jp
test
jns
cmp
fisttp
or
inc
ins
add
retf
and
pop
mov
and
icebp
add
dec
icebp
or
dec
pop
or
mov
rcr
sbb
inc
ins
add
ins
add
and
add
shl
inc
add
add
inc
ins
add
ins
out
pop
test
pop
inc
ins
add
inc
ins
add
das
scas
push
or
push
mov
pop
pop
je
pop
and
push
add
stos
outs
add
push
and
fistp
inc
or
xchg
pop
inc
ins
add
inc
ins
add
or
repnz
sbb
cmp
pop
inc
ins
add
inc
or
add
or
loop
dec
retf
dec
fs
and
inc
ins
add
inc
ins
add
mov
inc
ins
add
inc
ins
add
adc
add
aaa
sbb
pop
inc
ins
add
inc
ins
add
or
or
pop
movs
fisub
push
push
mov
push
pop
inc
ins
add
inc
ins
add
retf
mov
enter
cmps
pop
test
pop
inc
ins
add
inc
ins
add
or
pop
pop
inc
and
ins
add
inc
ins
add
outs
bound
inc
ins
add
inc
ins
add
or
inc
mov
iret
hlt
jne
inc
ins
add
inc
ins
add
inc
ins
add
sub
inc
pop
or
inc
test
dec
popa
push
cmp
jge
xchg
inc
popa
add
inc
ins
add
das
ins
add
inc
adc
add
inc
ins
add
outs
add
ret
push
pop
inc
and
ins
add
inc
ins
add
outs
push
pop
or
dec
pop
inc
ins
add
inc
ins
add
inc
ins
add
aas
push
pop
inc
and
ins
add
pop
ins
add
cmp
inc
and
ins
add
inc
ins
add
outs
add
arpl
and
pop
inc
ins
add
inc
ins
add
test
pop
pop
or
pushf
pop
inc
ins
add
inc
ins
add
inc
inc
add
pop
ins
add
and
and
pop
inc
ins
add
inc
ins
add
inc
ins
outs
pop
inc
ins
add
outs
dec
push
inc
add
pop
inc
ins
add
inc
ins
add
outs
dec
dec
inc
add
pop
inc
ins
add
inc
ins
add
outs
dec
inc
inc
add
pop
inc
ins
add
inc
ins
add
outs
push
pop
inc
cdq
add
inc
ins
add
adc
inc
and
inc
ins
add
outs
push
pop
inc
rol
inc
ins
add
inc
ins
add
outs
push
pop
inc
mov
pop
imul
fdivp
sub
sbb
arpl
or
and
pop
pop
ins
add
or
dec
pop
inc
and
pop
inc
ins
add
aas
ins
add
test
lods
pop
or
add
inc
ins
add
outs
add
psubb
push
pop
inc
in
pop
inc
ins
add
inc
ins
add
outs
out
ins
pop
and
sar
inc
stc
push
pop
inc
ins
add
inc
ins
add
daa
ins
add
inc
ins
add
inc
ins
add
sub
mov
inc
mov
add
(bad)
pop
inc
ins
add
inc
ins
add
ins
add
sub
xchg
cs
pop
(bad)
mov
call
fwait
dec
pop
jmp
imul
and
inc
and
pop
inc
ins
add
pop
ins
add
inc
mov
pop
inc
ins
add
inc
ins
add
mov
dec
pop
inc
ins
add
inc
ins
add
mov
pop
inc
push
xor
mov
pop
inc
ins
add
inc
ins
add
or
dec
icebp
or
xor
cmp
mov
hlt
xor
adc
rcl
and
pop
inc
ins
add
inc
ins
add
cs
popf
ret
or
ret
mov
dec
ret
das
mov
dec
cmp
pop
inc
ins
add
inc
ins
add
hlt
ins
add
inc
and
pop
inc
ins
add
pop
ins
add
sbb
mov
mov
cmp
inc
and
pop
inc
ins
add
pop
ins
add
ror
pop
dec
cmps
ss
scas
pop
or
pop
push
jmp
or
or
jo
and
imul
and
pop
inc
ins
add
(bad)
outs
add
pop
inc
push
xchg
cs
pop
fldcw
mov
or
dec
pop
(bad)
dec
pop
cmp
push
(bad)
sbb
fadd
out
imul
and
or
xchg
pop
inc
ins
add
dec
outs
add
or
add
inc
ins
add
ins
adc
inc
push
repz
js
and
push
and
jmp
adc
push
dec
fidiv
pop
inc
ins
add
pop
ins
add
rcr
sbb
inc
ins
add
inc
ins
add
mov
pop
inc
ins
add
(bad)
outs
add
pop
inc
push
xchg
cs
pop
fldcw
mov
or
dec
pop
fnsave
dec
pop
cmp
push
(bad)
sbb
fadd
sbb
hlt
jge
adc
pop
inc
and
pop
inc
ins
add
mov
and
inc
(bad)
mov
adc
pop
pop
dec
mov
sbb
inc
ins
add
and
mov
pop
or
pop
push
sbb
dec
hlt
and
enter
jno
add
xor
dec
or
mov
mov
pop
cdq
and
pop
ficom
and
mov
clc
dec
push
pop
aad
fistp
adc
inc
ins
add
fstp
mov
call
arpl
pop
inc
ins
add
pop
ins
add
(bad)
int
mov
rcr
sbb
inc
ins
add
inc
ins
add
fimul
mov
pop
inc
ins
add
pop
ins
add
inc
fisttp
std
adc
sbb
fdiv
pop
inc
and
pop
cmps
ins
add
cwde
addr16
fs
add
pop
or
dec
dec
lea
pop
leave
xor
addr16
or
dec
dec
call
sub
xor
dec
adc
sbb
lahf
(bad)
or
pop
xor
cmps
xchg
mov
or
aam
inc
jmp
popf
imul
sahf
xchg
repz
jmp
jae
mov
jae
mov
rol
jb
add
lock
cmp
out
sub
and
mov
lods
std
mov
fisubr
imul
scas
push
push
inc
push
xchg
mov
mov
(bad)
mov
and
imul
push
push
retf
mov
pop
jg
dec
and
jp
inc
rol
jmp
push
jmp
sub
mov
cld
mov
mov
mov
std
lods
nop
aad
js
sbb
mov
cmp
inc
xor
(bad)
mov
add
mov
pop
inc
jb
cwde
dec
push
out
cmp
pop
pop
pusha
shr
sbb
mov
xor
leave
push
cmp
aas
mov
dec
jmp
mov
dec
xchg
(bad)
cs
repz
fiadd
adc
push
add
dec
and
ficom
shr
fstp
sub
shl
adc
cdq
icebp
pop
mov
push
add
inc
(bad)
jo
popa
adc
gs
dec
or
sbb
add
xlat
cmp
jmp
(bad)
adc
ds
sahf
fadd
inc
sahf
pop
rol
fwait
lods
add
rcr
ds
xor
rol
sar
(bad)
and
ins
sub
sub
mov
js
retf
sbb
rol
jmp
jns
adc
lds
fld
enter
sbb
lahf
mov
lahf
les
ss
lahf
lds
ror
(bad)
sar
push
scas
mov
xchg
shl
rcr
lds
inc
imul
xor
lods
fcomp
lds
das
pop
sub
jns
adc
lds
aaa
lods
fcomp
lds
inc
imul
cs
xchg
fstp
sub
test
mov
std
outs
push
mov
lahf
les
ss
lahf
faddp
test
js
rcl
xchg
fst
xor
retf
lds
fcmovb
test
mov
loope
ja
sub
jns
adc
scas
mov
fstp
lahf
lds
lds
jnp
iret
shl
mov
popf
ss
retf
lds
movs
loopne
lds
js
jnp
ss
lahf
lds
jns
test
mov
xchg
xor
rcr
sbb
dec
ficom
mov
shr
out
lds
xchg
lahf
lds
inc
les
push
jg
sbb
xor
fcomp
lds
aaa
jne
lahf
lds
js
int3
add
cmp
inc
mov
sbb
mov
lds
lds
push
mov
xchg
fstp
lahf
lds
into
mov
movs
sbb
lds
data16
lahf
lds
lds
xor
aam
lds
ss
jmp
lds
mov
lds
add
jl
stos
push
add
xor
fcomp
lds
xchg
test
lds
jge
retf
data16
daa
mov
mov
rcl
sahf
ss
or
lds
out
loope
rcl
mov
(bad)
sbb
rol
jmp
jns
sub
lds
aad
leave
mov
xchg
ss
test
test
aam
aaa
jne
lahf
lds
(bad)
les
test
mov
int
ja
popf
ss
retf
lahf
lds
jnp
cmp
scas
pop
xchg
xor
rcr
lds
lds
jnp
test
js
retf
lds
lds
xor
fcomp
lds
js
into
lahf
mov
xchg
push
mov
call
mov
(bad)
retf
fwait
dec
(bad)
js
not
je
retf
call
js
aaa
shr
mov
sar
pop
fisttp
imul
xchg
pusha
fsubp
lahf
mov
cs
pop
cmp
xor
rcr
push
lds
sbb
js
(bad)
push
retf
fwait
dec
(bad)
js
not
je
retf
fwait
pop
les
jbe
jp
xor
jns
or
(bad)
dec
ficom
jns
je
xchg
add
jno
pushf
retf
ret
pop
stos
leave
mov
cmp
rcl
retf
pop
out
movs
cmp
cs
sub
cmp
std
or
clc
scas
ss
jne
cmps
(bad)
mov
xor
mov
dec
sar
fdivr
jno
idiv
add
aam
adc
add
push
repz
mov
pop
call
cwde
rcr
or
dec
fcmovb
mov
jmp
sar
fiadd
call
stc
mov
dec
in
mov
adc
mov
cs
repz
call
xchg
sbb
cmp
stos
push
arpl
dec
push
retf
dec
mov
push
aad
in
(bad)
adc
pop
aad
jmp
inc
add
cmps
push
push
mov
mov
fldcw
push
push
sbb
push
add
pop
add
shl
sahf
iret
and
mov
sub
and
push
aaa
inc
inc
pop
push
sub
push
mov
cmp
imul
adc
fld
or
ins
adc
mov
jo
pop
ret
dec
pop
jbe
and
outs
cmp
inc
idiv
lods
dec
push
mov
mov
jge
mov
push
push
sub
adc
push
sub
adc
push
sub
adc
pop
and
mov
adc
loopne
push
and
cli
xlat
mov
push
sub
test
sub
and
sub
mov
pop
sub
adc
pop
out
dec
into
mov
test
in
div
mov
adc
xor
mov
dec
loop
test
sub
dec
sbb
sbb
mov
fistp
mov
test
out
fild
int3
jae
dec
into
out
test
in
sti
scas
or
inc
pop
int3
jnp
dec
into
out
test
in
fist
add
ret
jge
add
lods
ret
mov
icebp
jg
pop
call
xor
pop
stos
leave
mov
cmps
cmp
and
mov
std
or
pop
mov
adc
cmps
enter
sub
dec
sahf
leave
jecxz
cmp
push
repnz
mov
adc
dec
retf
push
dec
adc
mov
mov
std
mov
and
jle
sbb
jae
in
dec
call
mov
fwait
lods
std
lods
cs
lock
push
jb
or
call
mov
cmp
pop
mov
inc
add
aas
mov
std
lods
nop
adc
adc
push
sbb
dec
dec
jmp
sbb
lahf
mov
jmp
fcomi
push
loop
adc
mov
xchg
cdq
xchg
mov
mov
fcom
jecxz
push
jle
jp
mov
adc
fld
or
loope
push
cmp
mov
or
inc
jb
xor
push
cli
out
dec
cmps
xor
ficom
test
add
mov
inc
jp
push
push
xor
dec
call
pop
daa
push
push
pop
xchg
arpl
mov
sbb
sbb
xchg
dec
jmp
fs
sbb
fs
aad
xchg
push
imul
ins
pushf
jb
mov
dec
xlat
cmp
sub
add
cwde
mov
cwde
fimul
push
aad
sub
rol
cwde
mov
jns
mov
adc
push
mov
ret
mov
dec
mov
ret
and
fwait
aad
shl
aas
dec
(bad)
or
rol
xor
cld
mov
jae
fucomip
jae
mov
jae
mov
or
mov
jae
mov
daa
movs
mov
jae
(bad)
in
jae
mov
jae
mov
mov
mov
push
mov
std
mov
popf
mov
sar
mov
jae
mov
jae
mov
clc
inc
jl
lods
inc
jmp
sub
xor
pop
clc
push
cdq
inc
jmp
mov
push
mov
xor
mov
out
push
xor
repz
cmps
int
lahf
ss
ss
dec
sahf
imul
mov
repz
cmps
loop
out
add
sahf
xor
not
(bad)
pop
mov
push
add
pop
ffreep
movs
push
sahf
cmp
pop
mov
pop
xchg
fnstsw
mov
cld
mov
aas
sbb
retf
lea
xor
mov
mov
adc
mov
std
lods
leave
or
scas
shl
or
iret
adc
dec
xor
mov
dec
dec
data16
dec
push
sbb
jge
and
dec
out
and
inc
jmp
adc
push
fwait
stos
imul
mov
and
cmp
aam
push
xor
inc
es
(bad)
mov
or
mov
std
mov
and
inc
(bad)
and
daa
lods
int
inc
(bad)
push
pop
fwait
lods
add
mov
push
push
push
xchg
add
pop
repnz
xchg
or
ret
shl
xchg
lds
jg
ret
dec
inc
inc
dec
ret
pop
jecxz
jle
xchg
imul
and
scas
push
dec
xor
pop
pushaw
call
adc
push
push
inc
push
leave
dec
pop
mov
cwde
stc
outs
rol
pop
dec
lds
add
dec
fst
xor
mov
jecxz
rcr
xchg
add
push
xchg
aad
push
inc
(bad)
jecxz
xchg
mov
jecxz
call
aad
push
xchg
aad
sbb
ja
push
xchg
cdq
loope
xchg
aad
push
pop
aam
or
adc
push
xchg
aad
push
xchg
aad
sub
xchg
aad
push
aaa
aad
sbb
mov
push
xchg
aad
cmp
inc
and
imul
jmp
jns
sbb
lods
sbb
ror
push
xchg
cdq
loope
ja
jecxz
mov
aad
push
xchg
aad
fst
aad
push
xchg
aad
retf
sub
push
fnstsw
jp
es
push
xchg
aad
push
xchg
aad
xor
test
jecxz
sbb
adc
jecxz
xchg
aad
sar
aam
push
xchg
mov
jecxz
fst
sub
dec
sub
fnstcw
lods
retf
sub
lods
add
cmps
je
xchg
aad
push
xchg
aad
push
xchg
aad
xor
ss
push
xchg
jmp
jecxz
xchg
aad
or
aam
push
xchg
aad
push
xchg
aad
push
xchg
aad
std
xchg
mov
jecxz
xchg
aad
push
daa
aam
and
dec
jl
sub
int
fs
test
xchg
aad
add
(bad)
jecxz
fldcw
scas
push
xchg
cdq
loope
xchg
aad
push
not
jecxz
xchg
(bad)
in
push
xchg
aad
push
xchg
aad
xor
xlat
jecxz
xchg
aad
push
xchg
aad
mov
xchg
aad
push
xchg
aad
jmp
jne
xchg
mov
push
xchg
aad
push
xchg
aad
jmp
jecxz
out
(bad)
jecxz
xchg
imul
push
pop
aam
retf
sub
push
int
fs
es
push
xchg
aad
push
xchg
aad
loop
(bad)
jecxz
cmp
sbb
xchg
cdq
loope
xchg
aad
or
push
dec
push
fist
cdq
loope
xchg
aad
push
xchg
aad
or
dec
adc
dec
loopne
adc
lods
sbb
cmp
mov
add
div
aad
push
xchg
aad
sbb
cmp
mov
add
div
aad
push
xchg
aad
mov
cmc
xchg
lods
push
xchg
lods
pushf
push
xchg
aad
xor
(bad)
jecxz
xchg
cmp
push
xchg
aad
push
call
jecxz
xchg
lea
xchg
aad
ret
test
pop
xchg
mov
push
xchg
aad
push
xchg
aad
push
xchg
aad
push
xchg
aad
pop
push
xlat
jecxz
xchg
rol
rcr
jae
xchg
mov
push
xchg
aad
push
xchg
aad
push
pop
xlat
jecxz
ss
jp
shl
adc
aaa
xchg
sbb
data16
fst
cdq
retf
adc
jecxz
xchg
aad
push
xchg
aad
push
xchg
mov
push
xchg
aad
add
xlat
jecxz
es
push
xchg
aad
cmp
aad
adc
(bad)
jecxz
cld
jp
pop
in
dec
loope
mov
jmp
jns
xchg
mov
push
xchg
aad
push
xchg
aad
push
not
jecxz
xchg
dec
mov
aad
adc
aam
push
fst
lods
push
xchg
aad
add
add
fild
inc
xor
dec
fs
xchg
dec
loop
xchg
aad
push
not
jecxz
xchg
lods
in
push
xchg
aad
push
xchg
aad
push
xchg
mov
push
xchg
aad
adc
push
push
and
leave
lods
sbb
jae
push
xchg
mov
push
xchg
aad
push
xchg
aad
cmp
xchg
aad
adc
aad
push
xchg
cdq
loope
xchg
aad
inc
enter
xchg
aad
xor
mov
jecxz
xchg
icebp
xchg
aad
js
aam
sbb
lahf
jmp
aad
push
xchg
aad
cmp
xchg
aad
push
xchg
aad
xor
aad
push
xchg
std
loope
xchg
aad
inc
enter
xchg
aad
push
xchg
aad
push
xchg
aad
cmp
xchg
aad
push
xchg
aad
push
xlat
xlat
jecxz
xchg
mov
push
xchg
aad
push
xchg
aad
adc
aam
add
mov
mov
push
xchg
aad
cld
out
inc
loope
mov
xor
aad
xor
(bad)
jecxz
xchg
mov
jecxz
xchg
xchg
xchg
aad
push
xchg
aad
push
not
jecxz
xchg
sar
mov
push
xchg
aad
je
aad
push
xchg
cmc
loope
xchg
aad
push
adc
jecxz
adc
jmp
aad
cmp
xchg
aad
push
xchg
aad
xor
aad
push
xchg
std
loope
xchg
aad
inc
enter
xchg
aad
push
xchg
aad
cmp
xchg
aad
push
xchg
aad
push
xlat
xlat
jecxz
xchg
mov
push
xchg
aad
push
mov
xchg
mov
iret
xchg
push
xchg
aad
push
xchg
aad
cld
out
inc
loope
mov
jmp
jns
xchg
dec
mov
aad
push
xchg
aad
push
xchg
add
push
rcl
mov
push
xchg
cdq
loope
inc
(bad)
jecxz
ret
pop
mov
rcl
cdq
add
push
mov
das
fld
fmul
cmps
imul
xor
fmul
(bad)
lods
or
imul
xchg
outs
aas
data16
pop
pop
jp
mov
xor
lods
(bad)
mov
sub
jmp
cmp
mov
jae
mov
jae
mov
jae
mov
dec
mov
aaa
ins
mov
jmp
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
or
movs
cmp
(bad)
mov
add
cmp
dec
ja
xor
int
jnp
pushf
cli
xor
dec
cmp
jnp
push
cmp
mov
cld
movs
(bad)
mov
xor
ret
or
xor
dec
retf
dec
or
jmp
fdivr
mov
or
push
or
int
jl
push
repz
xor
push
mov
sar
dec
push
cmp
in
cmp
pop
mov
mov
mov
rcl
rcl
inc
push
cmps
inc
or
outs
mov
push
jmp
inc
push
ss
dec
xor
leave
adc
aad
jmp
cmp
mov
mov
sub
inc
ss
pmullw
pop
mov
adc
or
jmp
inc
cmps
pop
cmp
adc
call
adc
fstp
ret
xchg
add
adc
clc
shl
rcl
inc
dec
add
jno
jmp
rcr
les
cmp
dec
pop
xor
inc
or
(bad)
nop
add
pop
inc
xor
adc
xchg
mov
mov
push
add
push
cs
cmp
mov
pop
push
inc
ss
idiv
outs
ret
shl
push
push
fs
dec
add
inc
xchg
dec
inc
xchg
pop
or
mov
inc
xchg
dec
inc
xchg
scas
or
dec
jmp
inc
retf
stc
dec
inc
xchg
dec
dec
test
mov
xor
mov
inc
xchg
dec
inc
xchg
scas
or
mov
push
dec
jmp
inc
retf
stc
dec
inc
xchg
dec
dec
test
cwde
jmp
shl
inc
xchg
adc
add
inc
xchg
dec
inc
xchg
cmp
xchg
dec
inc
fbstp
or
mov
dec
inc
retf
mov
inc
xchg
sbb
test
adc
test
inc
xchg
dec
inc
xchg
scas
or
add
or
mov
shl
mov
inc
xchg
mov
test
add
inc
xchg
dec
inc
xchg
add
or
jne
enter
hlt
ret
adc
dec
inc
xchg
dec
inc
xchg
jmp
mov
inc
xchg
scas
or
add
or
loop
inc
shl
inc
xchg
mov
test
add
inc
xchg
dec
inc
xchg
add
or
jne
dec
imul
inc
retf
stc
dec
inc
xchg
dec
xchg
mov
inc
xchg
scas
or
add
or
mov
shl
mov
inc
xchg
dec
inc
xchg
add
inc
jnp
inc
retf
stc
dec
stos
test
add
leave
mov
movs
test
retf
adc
dec
inc
xchg
dec
inc
xchg
retf
xor
fbstp
jmp
add
fdivr
test
cli
dec
inc
xchg
dec
push
xchg
add
jns
ffree
int3
leave
mov
push
fmul
add
push
fsubr
dec
std
retf
into
aaa
dec
add
inc
loop
xor
jmp
jae
mov
adc
div
mov
jae
mov
or
sbb
jge
lock
jae
mov
fdiv
shl
jae
mov
or
(bad)
jae
mov
jae
mov
xchg
mov
jmp
clc
sahf
mov
pushf
xchg
mov
mov
jae
mov
fs
repz
pop
repnz
xor
mov
jae
mov
cmp
das
loope
jae
scas
in
jae
mov
jae
mov
jge
out
xor
mov
jne
mov
pop
icebp
cmp
jae
mov
or
lock
jae
mov
cli
xchg
mov
jae
mov
jae
mov
jae
mov
cmp
lock
lods
out
rcl
jae
mov
jae
mov
adc
mov
jno
outs
loope
lock
jae
mov
adc
xchg
jae
mov
jp
mov
or
outs
rol
jae
mov
jae
mov
jecxz
mov
adc
out
jae
mov
jae
mov
lods
out
shl
jecxz
mov
test
icebp
cmc
mov
adc
daa
icebp
mov
jae
mov
push
mov
fld
xlat
mov
sar
out
jae
mov
jae
mov
mov
xchg
call
mov
lods
call
shr
js
ds
push
arpl
dec
mov
imul
cmova
mov
xor
mov
jmp
pop
mov
add
adc
or
dec
sub
setle
adc
dec
fidiv
sti
mov
ds
call
inc
call
mov
jp
or
lods
in
add
adc
push
aad
jmp
fstp
adc
fwait
lods
adc
inc
push
or
push
push
sbb
xchg
call
mov
ret
pop
jb
adc
push
arpl
cmc
sbb
adc
mov
inc
cmp
pop
ficom
(bad)
mov
sar
or
ret
adc
imul
push
add
dec
cmp
adc
fld
or
mov
(bad)
rol
daa
lods
add
rol
push
xchg
lds
pop
pop
cmp
jae
shl
dec
fcmovbe
outs
dec
cmp
inc
xor
pop
push
dec
xor
cli
jne
push
sti
bound
sbb
stos
sub
dec
(bad)
pushf
ss
sbb
mov
inc
push
cs
repz
push
push
pop
rol
pop
push
fstp
or
ret
pop
outs
dec
call
(bad)
adc
rep
dec
repz
or
fild
daa
xchg
add
adc
sub
dec
pushf
cdq
and
pushf
aad
sbb
xchg
xlat
and
push
cdq
fist
imul
shl
inc
(bad)
sub
imul
cdq
imul
cdq
imul
xlat
daa
xchg
add
and
cld
xchg
lahf
pushf
cdq
aas
pop
pushf
cdq
imul
fwait
imul
imul
leave
push
dec
ds
pop
mov
inc
xchg
mov
xchg
add
and
cld
mov
pushf
cdq
aas
pop
pushf
cmc
imul
cdq
imul
fsubr
aas
jecxz
push
push
js
xchg
std
push
mov
and
std
loope
mov
pushf
cdq
imul
xlat
mov
rol
rcl
and
ins
push
jecxz
xchg
cdq
imul
xchg
inc
push
repz
xchg
sar
pop
fxch
sub
out
and
int
fldcw
(bad)
mov
push
ret
sbb
es
push
ret
xor
(bad)
cmp
sub
fdiv
xor
std
out
stos
leave
mov
ret
rcl
cmp
and
mov
mov
mov
std
mov
in
pop
dec
repz
sbb
dec
jle
into
fild
dec
sahf
add
jmp
imul
aas
in
jo
xor
test
iret
loope
dec
push
xor
xchg
or
enter
adc
lods
rcl
xchg
outs
inc
jb
sub
cld
dec
xchg
mov
repz
xchg
push
data16
movs
push
loop
jg
dec
xor
scas
inc
bound
mov
adc
push
xchg
aas
mov
(bad)
mov
fcmovb
scas
push
cmp
add
dec
(bad)
cmps
aad
clc
fist
mov
add
adc
xchg
sahf
jecxz
dec
jl
mov
xlat
sbb
ret
inc
push
inc
ret
pop
popf
push
fisubr
sbb
mov
pop
push
push
enter
ret
pop
cs
mov
xchg
sub
lock
daa
rcr
adc
pop
cli
adc
pop
sbb
push
push
test
out
icebp
dec
jne
inc
fld
or
add
push
movd
rcr
push
dec
lds
xchg
jno
pop
ret
pop
push
pop
es
cmp
fsub
dec
inc
mov
pop
in
les
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aam
in
aad
mov
pop
sbb
in
repnz
movs
call
les
in
(bad)
(bad)
push
stos
les
or
into
xlat
(bad)
xchg
dec
xor
dec
(bad)
push
stos
les
sub
les
add
mov
or
pop
ror
xor
sub
repnz
sub
je
inc
sbb
sub
stos
les
inc
neg
lock
les
inc
test
push
stos
les
inc
loop
fwait
inc
in
sub
stos
(bad)
into
inc
stos
les
inc
pop
test
sbb
hlt
pop
in
imul
or
les
inc
popf
scas
mov
jmp
les
inc
repnz
mov
retf
pushf
sub
and
je
or
ja
jp
sub
ret
pop
adc
pmaxsw
mov
ss
mov
cmp
mov
jmp
xor
or
fcos
cmp
adc
mov
repz
(bad)
movs
xlat
push
ret
and
push
lds
sbb
imul
jmp
cld
sub
daa
repnz
je
mov
pop
popa
or
ret
dec
daa
lods
xor
pop
and
sbb
dec
xor
pop
hlt
adc
jne
pop
mov
fld
dec
cdq
mov
jmp
cmp
ret
mov
dec
sub
fidiv
cmp
loopne
test
adc
xlat
int
dec
(bad)
cmps
pop
dec
arpl
adc
nop
sbb
mov
arpl
dec
dec
xor
inc
jmp
idiv
mov
call
cmp
bound
ret
sbb
xchg
dec
xchg
loope
inc
cmp
inc
adc
jnp
inc
jmp
inc
jp
cs
mov
aad
stos
fld
ret
enter
sbb
popf
ret
pop
ss
outs
(bad)
movs
js
enter
add
xor
xlat
mov
xor
sbb
iret
mov
dec
sub
inc
push
jle
pop
rol
xchg
push
push
sub
out
pushf
test
ds
in
and
in
ds
ja
leave
loopne
aaa
in
push
push
jno
push
fst
repz
fdiv
je
cli
mov
push
xchg
fcmovnbe
sti
in
fcmovnbe
sti
in
jecxz
sti
in
repz
in
(bad)
sti
in
pop
(bad)
sti
in
(bad)
inc
push
pop
and
in
adc
sub
mov
jg
popf
mul
xchg
inc
sub
scas
push
and
mov
push
mov
dec
sub
scas
adc
cli
jg
imul
test
jb
call
mov
sbb
test
xor
dec
push
adc
in
xchg
lea
pop
pop
dec
sub
lahf
adc
ret
jno
neg
sub
aas
(bad)
in
cmp
sub
aas
push
dec
(bad)
neg
test
icebp
(bad)
mov
adc
ret
imul
mov
push
mov
xor
sub
scas
pop
push
inc
inc
popa
das
cmc
mov
mov
xchg
hlt
neg
sub
(bad)
stc
lods
lahf
push
xchg
fmul
(bad)
push
jbe
fmul
(bad)
loopne
add
test
sbb
dec
pop
ja
call
push
pop
sub
sub
xchg
imul
sar
in
push
popf
cmp
push
popf
cmp
push
popf
adc
push
popf
cmp
push
popf
cmp
in
lahf
hlt
in
push
ins
cmp
and
not
retf
xor
or
sub
sub
adc
retf
and
neg
test
push
and
not
mov
jle
scas
inc
push
fdivp
push
jns
not
movs
adc
(bad)
dec
and
mov
dec
(bad)
call
mov
imul
test
outs
outs
adc
out
scas
push
jns
test
aas
xchg
lock
push
fldcw
dec
outs
pop
jb
aas
push
imul
adc
in
push
adc
mov
test
push
popa
int
pop
rol
neg
jg
retfw
pushw
mov
adc
xchg
scas
pop
shl
push
scas
dec
sub
daa
jno
pop
cld
xchg
into
test
std
pusha
mov
(bad)
mov
mov
pusha
repnz
xor
das
xor
ja
rcl
das
int3
repz
xor
jno
sbb
test
jae
das
int3
repz
xor
das
xor
or
hlt
test
adc
icebp
arpl
das
js
int3
jae
popa
push
mov
adc
xor
das
xor
popa
outs
cmp
das
int3
repz
xor
and
push
cld
pusha
into
mov
or
inc
pop
sub
xor
pop
xor
das
fdivr
inc
popa
outs
mov
inc
pusha
add
das
xor
xchg
xor
pusha
mov
adc
xor
mov
icebp
dec
pusha
loop
mov
add
adc
xor
das
xor
ret
xor
adc
xor
das
xor
jbe
icebp
dec
pusha
xor
cwde
jne
jnp
pusha
scas
and
stos
cwde
jne
mov
mov
ins
mov
pop
xor
add
pop
mov
test
mov
sub
adc
mov
ret
mov
pop
push
mov
es
xlat
adc
cmps
aam
cli
cmp
out
pop
lahf
xchg
popa
pop
dec
sar
(bad)
push
dec
sub
dec
pop
xor
adc
add
out
mov
mov
jmp
aad
pop
mov
inc
scas
stos
sub
push
cmps
or
out
popf
cmp
push
adc
fwait
lods
std
lods
out
adc
test
rcl
mov
std
add
cmp
inc
imul
mov
or
inc
xor
arpl
jmp
les
ficomp
sar
adc
ds
femms
sub
adc
inc
shr
pop
fcom
jmp
pop
adc
test
and
(bad)
cmps
add
adc
pop
mov
and
mov
mov
aas
push
jae
retf
loopne
inc
pop
push
shl
jge
push
sbb
inc
pop
adc
daa
lods
std
lods
sbb
push
push
xor
pop
cmp
inc
pop
call
xchg
aas
push
xor
repnz
cld
dec
out
repz
inc
mov
fnstcw
and
mov
lock
daa
mov
lock
ins
pop
repnz
jae
daa
mov
lock
fidivr
mov
ja
lock
daa
mov
lock
mov
out
cmp
push
into
fsubrp
jge
js
push
in
adc
mov
loop
or
xor
push
pop
mov
pop
cmp
jmp
cmp
test
cmp
mov
std
or
leave
stc
xor
pop
mov
dec
cmp
push
icebp
dec
mov
xchg
outs
sahf
popa
dec
dec
cmp
adc
and
mov
rcl
enter
call
cmp
imul
sbb
dec
cmp
mov
cld
dec
(bad)
mov
into
pop
mov
mov
loopne
imul
rcl
xor
(bad)
mov
fld
or
int
scas
push
cs
mov
adc
pop
shr
mov
fstp
rcl
add
push
data16
lods
aad
mov
mov
push
xchg
jns
mov
call
cmps
mov
lods
sub
stc
jbe
cmps
into
inc
push
push
es
add
inc
push
dec
ret
pop
fist
dec
sar
xor
(bad)
jo
scas
loopne
out
sub
test
cmp
dec
push
inc
rol
pop
ja
dec
xor
dec
je
sti
jne
push
out
xchg
ror
leave
(bad)
xchg
pop
jmp
adc
bound
call
mov
pop
push
dec
add
dec
xchg
or
fs
ret
adc
jne
test
inc
and
jbe
xor
ja
test
mov
arpl
(bad)
cmp
push
cmp
mov
push
addr16
ja
and
dec
dec
mov
push
push
sbb
pop
and
outs
jbe
and
fidiv
loope
scas
mov
and
and
ret
mov
jecxz
fidiv
loope
ja
and
(bad)
mov
add
clc
nop
imul
cmp
push
(bad)
mov
jbe
loope
ja
and
(bad)
mov
add
clc
nop
imul
cmp
push
cmp
mov
punpckhdq
mov
test
mov
sahf
loop
mov
repz
sahf
loope
scas
mov
and
ins
jbe
push
outs
jecxz
adc
inc
fadd
mov
push
(bad)
mov
cmp
cmp
mov
punpckhdq
mov
test
pop
and
add
dec
adc
test
mov
inc
push
adc
test
mov
inc
push
mov
or
shl
cmp
xlat
push
xor
dec
push
mov
aas
test
(bad)
mov
xor
adc
(bad)
xlat
adc
rcl
dec
inc
test
add
mov
sti
push
xchg
ins
jmp
add
jne
xor
xchg
imul
outs
cmp
pop
pop
xor
cmp
pop
mov
sbb
dec
(bad)
test
push
iret
mov
push
stc
outs
shr
adc
xchg
mov
pop
pop
cmp
mov
adc
fwait
sbb
cmp
inc
xchg
pop
xor
add
cmp
adc
mov
xchg
mov
adc
push
pop
push
aaa
dec
xchg
inc
aad
ds
sbb
out
xor
push
cmps
shr
push
cli
sar
sbb
xor
dec
xchg
test
repnz
sub
inc
outs
mov
push
ror
sub
leave
xchg
sbb
out
mov
push
jmp
clc
push
mov
pop
fwait
mov
inc
add
dec
adc
xchg
mov
or
ret
pop
pop
test
xor
in
std
or
mov
cld
mov
ret
push
push
lahf
pop
mov
inc
xchg
loope
mov
cmp
jle
dec
xchg
cli
outs
cmp
mov
sti
inc
mov
inc
xor
in
adc
pusha
out
adc
stos
mov
pop
xor
in
adc
and
adc
jl
pop
jg
mov
adc
and
adc
loope
and
cwde
xor
in
adc
and
adc
sub
jle
fs
xor
in
adc
out
mov
and
adc
stos
scas
dec
sar
pop
outs
push
fwait
mov
and
adc
and
adc
test
fdiv
and
adc
and
adc
and
pop
xor
in
adc
mov
nop
xchg
ins
outs
push
jg
jns
mov
das
shl
and
adc
and
adc
out
adc
loopne
outs
into
cdq
xor
in
adc
and
adc
and
adc
and
adc
out
mov
and
adc
and
adc
test
jp
mov
sar
fs
xor
in
adc
call
cs
xor
in
adc
and
adc
out
adc
jle
xor
in
adc
and
adc
push
outs
dec
cwde
xor
in
adc
add
adc
fs
xor
in
adc
and
adc
loopne
adc
mov
adc
add
adc
fs
xor
in
adc
pusha
out
adc
test
mov
adc
and
adc
nop
in
adc
fs
xor
in
adc
and
adc
test
mov
adc
and
adc
and
adc
loopne
adc
scas
cdq
xor
in
adc
and
adc
and
adc
inc
or
and
adc
and
adc
mov
jo
and
and
adc
pusha
out
adc
and
jle
fs
xor
in
adc
call
into
cdq
xor
in
adc
and
adc
and
adc
test
dec
jae
mov
cdq
mov
and
adc
in
push
jle
fs
outs
(bad)
cdq
xor
in
adc
and
adc
and
adc
bsf
jle
pop
inc
stos
ficomp
or
mov
imul
dec
fisttp
push
mov
leave
inc
add
mov
loop
sar
push
push
push
jmp
mov
push
mov
or
mov
stos
inc
sahf
mov
repz
or
jge
pushfw
cmp
adc
movs
int
pop
mov
mov
pop
dec
leave
sahf
xor
leave
push
jmp
or
mov
push
pop
push
jge
mov
call
adc
mov
pop
retf
rcr
jmp
and
mov
cld
dec
xor
mov
mov
out
or
ret
xchg
out
dec
xchg
pop
jns
jecxz
adc
fstp
sub
ret
pop
and
pop
add
pop
push
(bad)
push
adc
push
daa
lods
sub
(bad)
cmps
push
adc
and
adc
cs
lock
xchg
sub
fldcw
adc
loop
push
push
adc
pop
push
inc
push
add
inc
pop
(bad)
sub
mov
aas
adc
push
adc
push
retf
jl
dec
inc
iret
sti
cmps
push
jb
and
les
xor
dec
adc
sub
push
les
fisub
lock
cmps
daa
inc
push
cmps
imul
inc
enter
pop
movs
pop
sbb
cmps
imul
inc
push
out
inc
xor
fxch
push
cmps
imul
inc
push
cmps
imul
push
push
cmps
daa
or
imul
inc
pop
jmp
imul
inc
or
add
cmps
daa
or
imul
inc
adc
or
aas
or
imul
inc
cmp
inc
or
imul
inc
xor
pop
int3
push
cmps
imul
inc
push
call
imul
inc
push
cmps
imul
pop
push
cmps
das
or
imul
inc
pop
movs
jecxz
push
cmps
imul
inc
push
cmps
aas
jnp
cmps
imul
inc
pop
movs
jecxz
push
cmps
imul
inc
push
cmps
aas
retf
push
cmps
imul
inc
scas
call
or
imul
inc
inc
das
push
or
imul
inc
pop
jmp
leave
or
daa
inc
push
imul
int
xchg
addr16
xlat
pop
jmp
imul
inc
or
imul
xor
push
test
push
cmp
and
push
cmps
addr16
push
cmps
imul
inc
shr
mov
aas
or
imul
inc
push
cmps
push
inc
push
cmps
imul
inc
sbb
cs
push
cmps
aas
or
imul
adc
imul
mov
aas
or
imul
adc
imul
add
icebp
mov
inc
push
inc
imul
and
or
imul
inc
shl
inc
sbb
and
fdiv
test
push
cmps
daa
inc
push
into
imul
dec
push
cmps
imul
inc
fdiv
mov
inc
push
cmps
imul
sub
cmps
imul
inc
pop
call
daa
inc
push
cmps
imul
inc
fdiv
xor
add
and
inc
push
cmps
imul
inc
mov
cmp
or
popa
jmp
imul
inc
(bad)
jmp
push
cmps
imul
inc
fdiv
xor
add
and
inc
adc
push
sbb
test
push
cmps
daa
or
imul
inc
shr
sub
adc
cmp
int3
das
movs
add
push
cmps
imul
inc
dec
(bad)
shr
push
call
daa
inc
push
cmps
imul
inc
sbb
popa
jmp
imul
inc
adc
imul
sub
cmp
cmp
push
cmps
ja
push
cmps
imul
inc
add
imul
cmps
imul
into
sbb
leave
or
daa
inc
push
imul
sub
cs
cmps
imul
inc
pop
jmp
imul
inc
push
cmps
imul
cs
daa
loope
sbb
ins
in
cmps
daa
or
imul
inc
push
cmps
pop
push
push
cmps
imul
inc
sbb
push
fnsave
xor
lahf
addr16
fisubr
loop
int3
and
pop
sub
sbb
(bad)
xor
jge
es
xchg
jle
cmc
pop
cmp
sbb
inc
ds
xor
or
sar
sub
adc
mov
iret
sbb
cmc
push
sar
ss
push
mov
cmp
pop
cmp
adc
push
and
cmp
cmp
ds
std
jns
push
add
mov
mov
aad
sub
loop
leave
outs
push
pop
xchg
mov
push
leave
adc
cmps
fadd
xchg
jno
pop
pop
ins
out
xchg
dec
add
test
pop
push
aad
pop
mov
mov
sub
xor
mov
in
ret
xlat
test
arpl
push
fnstcw
pop
pop
dec
mov
in
loop
cmp
dec
rcr
push
ss
repz
fnstenv
out
cmp
bound
lds
push
adc
jp
fwait
lods
test
jp
call
and
mov
adc
(bad)
daa
lods
test
mov
push
add
mov
fild
rol
sub
mov
ds
ficomp
cmp
dec
cmp
jg
push
push
(bad)
mov
sbb
dec
fcomp
pop
push
inc
jl
dec
cld
mov
and
outs
test
xor
add
xchg
add
inc
inc
cld
push
xchg
gs
add
dec
inc
jl
push
inc
and
test
xor
inc
js
push
test
xor
xchg
add
mov
inc
cld
push
xchg
add
inc
inc
cld
push
xchg
adc
inc
jl
push
inc
sbb
test
xor
inc
cmp
test
xor
inc
js
push
test
xor
xchg
add
mov
inc
cld
push
test
cmc
xchg
add
mov
inc
cld
push
test
mov
add
dec
inc
jl
push
inc
and
test
xor
inc
cmp
test
xor
inc
js
push
test
xor
xchg
add
mov
inc
cld
push
test
test
cmp
jl
push
inc
clc
sub
jge
lea
xor
xor
jg
ins
push
xor
push
push
xor
jle
pop
cmps
jg
dec
inc
test
dec
xchg
add
push
test
adc
inc
jl
push
inc
cmp
test
xor
inc
cmp
test
xor
inc
js
push
test
xor
push
nop
cmp
call
sub
inc
mov
das
inc
push
test
lea
mov
mov
push
fwait
push
inc
cmp
jle
add
sbb
cmps
cmp
jae
cmp
in
cmp
dec
jno
and
mov
addr16
jmp
cmp
cdq
ss
repz
cmps
iret
mov
cmps
adc
stos
scas
push
aam
ds
loope
bound
push
repz
repnz
jp
aas
mov
std
lods
cdq
ror
mov
jle
mov
es
pop
push
sub
test
mov
std
add
cmp
push
xor
movs
push
sahf
fwait
lods
in
lods
retf
inc
mov
push
jmp
mov
push
jns
adc
lods
and
xchg
dec
and
popa
push
push
cmp
dec
out
sub
test
pop
sub
cli
cmps
push
add
les
jmp
lods
adc
ds
add
sub
push
add
pusha
jb
fistp
repz
cs
repz
push
push
inc
adc
inc
fiadd
inc
add
jno
pop
out
inc
out
(bad)
xchg
add
push
outs
mov
mov
push
add
ffree
mov
cmps
fst
pop
nop
inc
outs
mov
add
daa
and
cwde
push
mov
push
mov
add
push
stos
push
add
and
cwde
push
dec
sbb
sub
jnp
add
and
cwde
push
je
fwait
cmp
mov
enter
movs
je
jmp
add
push
rcr
loope
push
push
cmp
add
push
add
push
and
cwde
push
stos
push
push
or
add
push
add
push
and
cwde
push
test
mov
push
add
push
and
int3
push
add
push
aas
inc
jmp
add
push
arpl
aaa
and
cwde
push
stos
push
push
js
add
push
arpl
cmp
add
push
add
sub
aas
stos
push
jecxz
imul
add
add
push
stos
push
jecxz
and
aam
and
push
pop
and
mov
aas
and
shr
add
push
ins
pop
adc
inc
mov
xor
int3
daa
je
mov
and
cwde
push
arpl
push
add
iret
daa
and
les
add
push
and
cwde
push
arpl
push
ins
inc
adc
inc
sbb
and
cwde
push
fwait
adc
aas
and
cwde
push
and
push
cdq
and
mov
aas
push
dec
invd
xor
int3
daa
mov
add
aas
and
cwde
push
stos
push
sub
add
push
add
push
ins
popa
adc
and
fsubr
add
push
ins
dec
(bad)
and
aam
and
cwde
push
ja
repnz
add
push
in
inc
aam
stos
push
and
adc
test
push
call
and
cwde
push
and
cwde
push
push
add
push
and
cwde
push
imul
ins
dec
(bad)
es
fmul
and
cwde
push
jne
int3
daa
je
sbb
and
cwde
push
and
cwde
push
and
aam
and
cwde
push
popa
out
jne
and
fmul
and
cwde
push
jle
fadd
add
push
pushf
add
sub
add
push
imul
push
pop
cmp
xchg
mov
fisub
push
dec
pusha
inc
xchg
mov
je
jp
and
sub
mov
popf
xlat
fsubr
lds
inc
fwait
or
dec
jmp
add
push
add
int
ins
add
aas
and
cwde
push
and
push
and
cwde
push
and
or
add
push
and
aam
and
push
cdq
and
mov
aas
xor
int3
daa
jno
(bad)
jge
int3
daa
stos
push
ret
or
(bad)
ss
jmp
jns
and
loop
mov
sub
jnp
jb
int3
dec
push
je
pop
jmp
ret
adc
test
dec
pop
test
mov
add
shr
int
shl
std
adc
dec
mov
add
mov
shl
mov
clc
imul
adc
arpl
repz
jbe
sbb
dec
shr
inc
ds
ss
mov
push
daa
repz
pop
cmps
aad
and
sub
jb
and
outs
retf
push
jo
jmp
stos
sbb
and
lods
dec
lods
jge
adc
fwait
lods
sbb
xchg
cmp
dec
pop
cmp
pop
push
or
popf
cmp
dec
inc
pop
jbe
icebp
push
and
adc
(bad)
sbb
mov
test
cmp
cld
in
dec
mov
pop
pop
cmp
push
sub
leave
xchg
and
dec
(bad)
push
xor
xchg
mov
push
rol
push
(bad)
pusha
push
inc
cmp
pop
mov
mov
jmp
retf
sbb
pop
sar
jmp
ficom
xchg
fwait
lods
sbb
jecxz
mov
push
and
adc
mov
push
aad
pop
mov
adc
cwde
(bad)
dec
jmp
(bad)
mov
mov
pop
mov
add
mov
ret
inc
xchg
inc
(bad)
and
pop
jecxz
inc
into
mov
aad
dec
ret
pop
test
xor
mov
push
mov
dec
leave
jb
adc
int
mov
pop
sbb
pop
ss
jnp
out
lds
mov
dec
or
std
or
mov
dec
mov
repnz
or
lds
dec
repz
aad
dec
int
mov
push
sbb
pop
sbb
pop
mov
sbb
mov
dec
or
mov
dec
or
repz
jecxz
mov
dec
or
mov
sbb
inc
mov
dec
or
repz
pop
out
in
nop
into
pop
xlat
inc
jmp
rol
sbb
dec
int
mov
dec
or
ds
mov
rol
pushf
mov
dec
or
pop
sub
fsubrp
add
mov
mov
sbb
or
or
repz
dec
pop
mov
dec
or
repz
sbb
dec
int
mov
lock
or
fbstp
cs
or
or
add
outs
lds
xor
or
inc
imul
arpl
in
or
(bad)
xor
mov
sbb
jecxz
dec
or
out
aam
pop
sbb
pop
in
int3
jnp
sub
mov
or
or
sbb
ret
mov
dec
or
out
in
xchg
mov
dec
or
jo
or
into
or
mov
dec
or
mov
dec
or
jmp
dec
inc
pop
sbb
pop
rcl
into
stos
in
mov
xchg
ins
push
repz
or
push
pop
fidivr
add
push
mov
pop
inc
shl
add
jp
cmps
cmp
push
mov
add
cmp
std
or
fs
ss
jmp
aaa
jmp
inc
aaa
not
(bad)
ss
aas
mov
std
dec
(bad)
call
fild
mov
push
mov
fild
aas
mov
(bad)
popa
cli
mov
std
mov
cmp
push
push
into
ins
push
outs
push
sub
dec
xchg
mov
lock
call
push
push
mov
push
jle
adc
ds
or
cmp
pusha
das
mov
dec
sbb
dec
xchg
test
test
dec
rcr
mov
aad
in
adc
dec
mov
cdq
inc
sar
(bad)
adc
sub
and
lods
fst
pop
or
mov
adc
jnp
or
pop
rcr
xchg
gs
pop
(bad)
nop
push
inc
cmp
dec
mov
dec
cs
test
cmp
adc
pop
and
add
fwait
lods
or
aas
ds
dec
xor
jg
sbb
push
ret
pop
sub
inc
mov
pusha
dec
rol
pop
cmp
mov
ret
js
pop
lds
mov
pop
sub
cli
imul
mov
fdivr
xor
jp
aam
fcomi
aam
xchg
js
pop
xchg
repz
xchg
repz
nop
xchg
scas
call
repz
xchg
xor
add
(bad)
sbb
repz
xchg
repz
xchg
mov
nop
aad
pop
stc
(bad)
icebp
aam
(bad)
aam
xchg
pushf
call
repz
xchg
repz
xchg
pop
icebp
aam
(bad)
aam
xchg
repz
xchg
jae
xchg
xchg
mov
aam
xchg
repz
xchg
repz
xchg
jb
xchg
add
movs
fwait
loopne
repz
xchg
repz
xchg
cmp
ret
xchg
xchg
repz
xchg
repz
nop
xchg
js
leave
out
pop
fst
aam
(bad)
aam
xchg
repz
xchg
mov
fwait
inc
push
mov
aam
xchg
repz
xchg
pop
fwait
nop
xchg
mov
or
jmp
ret
repz
xchg
repz
xchg
inc
test
inc
mov
aam
xchg
repz
xchg
xchg
js
sub
mov
and
add
or
mov
fisub
jl
repz
xchg
repz
xchg
repz
xchg
repz
xchg
pop
icebp
aam
(bad)
aam
xchg
repz
xchg
jae
xchg
xchg
xor
lods
icebp
aam
(bad)
aam
xchg
repz
xchg
xor
add
(bad)
sbb
repz
xchg
repz
xchg
repz
int3
mov
aam
fcomi
aam
xchg
repz
xchg
mov
fwait
mov
fcomi
aam
xchg
repz
xchg
repz
xchg
and
sub
imul
ret
(bad)
out
mov
push
mov
ror
xchg
pop
div
aam
xchg
repz
xchg
cmps
mov
and
aam
xchg
repz
xchg
scas
push
rol
lock
xchg
pop
movs
repz
xchg
repz
xchg
mov
aam
xchg
repz
xchg
mov
add
sbb
js
mov
sub
out
jle
fstp
mov
mov
call
repz
xchg
repz
xchg
(bad)
mov
mov
aam
xchg
repz
xchg
pop
popf
nop
aad
lea
sahf
movs
fwait
push
push
and
sbb
fcmovu
movs
fwait
and
repz
xchg
repz
xchg
repz
xchg
icebp
aam
cdq
repz
xchg
repz
xchg
fwait
clc
xchg
xchg
repz
xchg
repz
xchg
repz
fdiv
aam
xchg
repz
xchg
repz
(bad)
repnz
xchg
and
lods
icebp
aam
(bad)
aam
xchg
repz
xchg
test
(bad)
mov
repz
xchg
ret
aad
cmc
repz
xchg
repz
mov
xchg
repz
xchg
xchg
js
sub
aam
xchg
repz
xchg
repz
xchg
(bad)
mov
(bad)
repnz
repz
xchg
repz
xchg
xchg
mov
dec
pop
movs
fwait
and
imul
mov
aam
xchg
repz
xchg
repz
nop
xchg
test
cmp
mov
div
aam
xchg
inc
adc
daa
sahf
xchg
rol
mov
call
repz
xchg
repz
xchg
mov
call
repz
xchg
repz
xchg
stos
inc
nop
and
mov
aam
xchg
adc
cmp
repz
xchg
repz
xchg
repz
xchg
js
leave
mov
jp
ja
call
repz
xchg
aam
mov
(bad)
mov
movd
leave
cmps
cmps
mov
shr
inc
sbb
fistp
out
mov
and
out
sbb
and
inc
(bad)
(bad)
fisub
shr
dec
push
mov
mov
aam
xchg
dec
mov
xor
dec
gs
xor
jnp
sub
aam
xchg
repz
xchg
js
sub
test
sub
or
dec
push
fst
mov
imul
and
fwait
jo
repz
xchg
repz
xchg
jno
jecxz
xchg
in
xchg
repz
xchg
repz
xchg
arpl
xchg
add
or
repz
xchg
jae
xchg
xchg
inc
mov
fmul
pusha
sbb
or
xchg
ret
xchg
xchg
(bad)
fwait
nop
cmp
repz
xchg
repz
xchg
mov
adc
fwait
rcr
xchg
pop
mov
aam
xchg
repz
xchg
mov
jns
call
mov
fwait
sbb
call
stos
fwait
enter
sbb
jns
enter
cwde
imul
and
enter
outs
pop
push
mov
scas
retf
jmp
cmp
mov
dec
fsubr
cmp
mov
dec
cmp
pop
push
push
imul
cmp
cmps
les
frstor
cmp
dec
push
dec
cli
movs
out
add
imul
jmp
pop
pop
sub
stos
fwait
popf
aam
dec
cmp
fstp
in
cmp
mov
std
lods
aas
mov
std
lods
sbb
sbb
pop
adc
ss
add
test
xchg
les
push
idiv
xor
aas
mov
std
dec
and
test
ret
cwde
sub
jmp
cs
ret
xlat
mov
jmp
out
into
push
dec
xor
pop
add
mov
lock
mov
or
repnz
pop
push
ret
inc
push
inc
shl
add
adc
popf
fld
or
lods
mov
mov
adc
pop
and
shl
mov
adc
(bad)
lock
push
inc
push
push
xor
add
lods
in
lods
xchg
mov
repz
call
pop
xchg
inc
out
ror
add
mov
xor
div
loop
add
jge
dec
fs
fs
mov
sub
imul
fs
mov
mov
sub
dec
fs
fs
mov
cmp
mov
pop
mov
daa
mov
sub
dec
fs
mov
daa
mov
or
add
mov
xlat
mov
lock
scas
fmul
xchg
mov
daa
mov
daa
mov
sub
adc
jge
cwde
sbb
cmc
sbb
fs
mov
daa
mov
daa
mov
cmp
mov
daa
mov
in
push
dec
fs
mov
xor
out
pop
fs
cmp
mov
leave
lds
mov
fld
adc
test
fld
sub
loope
mov
cdq
lds
imul
dec
fs
mov
js
mov
sti
add
nop
jmp
dec
fs
mov
daa
mov
push
addr16
dec
and
dec
or
mov
cmp
js
nop
jmp
dec
fs
mov
fs
(bad)
dec
fs
mov
fs
mov
daa
mov
daa
mov
fs
mov
daa
mov
daa
mov
cli
xlat
push
mov
mov
mov
and
fs
mov
daa
mov
js
mov
sti
xor
nop
cli
inc
xchg
dec
fs
mov
daa
mov
pusha
and
mov
daa
mov
call
iret
sub
mov
call
das
pusha
and
mov
daa
mov
jp
mov
shl
out
outs
rol
push
scas
push
data16
xchg
cmp
daa
mov
and
in
sub
add
lds
daa
mov
es
fs
mov
sbb
mov
mov
mov
and
lock
or
sub
jne
fiadd
int3
push
jle
fadd
dec
scas
rol
push
rcr
mov
enter
adc
mov
xor
cmp
cmps
ror
jle
add
dec
jp
jae
mov
jae
mov
jae
mov
fdiv
shl
lock
jae
mov
retf
outs
mov
jae
mov
jae
mov
dec
mov
aaa
mov
test
ins
jns
cld
aad
in
cld
popf
cmp
cdq
out
ins
imul
dec
aad
fsub
(bad)
xor
repz
sbb
cmp
pop
stc
imul
xor
or
shl
or
(bad)
dec
mov
dec
es
addr16
mov
adc
jmp
aad
push
mov
daa
lods
in
aam
push
outs
xlat
jns
mov
push
out
xchg
mov
repz
aad
push
bound
mov
mov
xor
test
adc
push
repz
dec
dec
xchg
movs
sbb
pop
pop
mul
hlt
push
cmp
mov
push
cli
mov
mov
add
and
push
ss
pop
jmp
pop
or
(bad)
test
pop
cmp
and
cld
cmps
push
loop
stos
push
adc
and
jmp
mov
sar
and
int
fisubr
and
xor
mov
pop
(bad)
repz
add
mov
add
dec
cmps
dec
or
add
mov
push
inc
or
in
popf
ret
pop
out
adc
cmp
push
adc
inc
fs
mov
dec
stc
imul
xchg
pop
les
push
test
mov
jmp
jmp
mov
pushf
mov
cmp
inc
popa
imul
or
aaa
(bad)
popa
imul
or
push
loope
stos
minps
std
ret
pop
xor
mov
adc
test
fnstsw
sbb
mov
adc
mov
repz
movs
xlat
mov
xor
jne
cmps
fistp
sub
imul
ds
adc
sahf
ins
clc
outs
(bad)
or
cmp
or
push
add
dec
daa
aas
mov
(bad)
mov
aad
push
push
rcl
shl
xchg
and
cli
cmps
xchg
dec
xor
inc
mov
rol
mov
adc
xor
dec
xor
xchg
push
scas
mov
or
cmp
or
aas
xor
repz
sub
mov
pop
cli
pop
out
or
jb
adc
iret
cmp
dec
repnz
pop
push
call
mov
fldcw
cmp
popa
pop
mov
test
dec
xchg
add
adc
cmps
mov
cld
mov
push
mov
push
leave
mov
adc
jmp
xor
pop
scas
inc
push
push
and
cmp
adc
inc
push
add
nop
add
adc
fld
ret
pop
add
fcom
pop
and
dec
retf
inc
pop
repnz
pop
add
cmp
add
mov
adc
call
pop
arpl
fs
cmp
imul
(bad)
pop
add
lahf
mov
xor
out
adc
pop
clc
in
sbb
clc
mov
std
std
mov
outs
jae
arpl
clc
in
sbb
clc
mov
lea
pop
pop
jae
arpl
clc
in
sbb
clc
mov
popf
xchg
mov
jl
xor
sbb
clc
mov
pop
(bad)
mov
mov
pusha
sub
loop
sbb
lods
mov
sbb
mov
jmp
jg
inc
dec
mov
rcr
clc
mov
sbb
push
add
outs
lods
out
pop
cli
mov
pop
sbb
clc
in
sbb
clc
mov
xor
jmp
inc
jecxz
addr16
clc
push
bound
or
retf
push
and
add
out
call
push
jb
add
out
(bad)
rcl
sbb
out
lea
inc
jle
add
lods
jns
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
sub
ror
mov
std
mov
repnz
clc
imul
ror
ret
add
pop
pop
sahf
inc
ret
sahf
or
jmp
repz
sbb
retf
mov
and
mov
icebp
jne
sahf
in
add
shl
pop
jmp
sar
or
aad
out
rcl
sub
(bad)
nop
aad
iret
inc
lahf
into
sub
adc
adc
push
pop
push
adc
add
mov
ret
pop
and
push
mov
xchg
retf
push
jbe
adc
push
mov
int
xchg
add
mov
cdq
dec
mov
sub
inc
jp
jecxz
aad
pop
mov
mov
or
adc
push
mov
push
jmp
pop
repz
cmp
adc
pop
and
dec
mov
rol
outs
fld
dec
(bad)
pop
cmovb
jge
xchg
mov
in
dec
sar
mov
xchg
cmp
adc
into
cwde
adc
xchg
xchg
xor
push
inc
sub
ror
icebp
pop
jecxz
inc
push
add
push
add
dec
bound
mov
dec
repz
cmps
ficom
cdq
adc
jns
inc
inc
dec
lahf
fadd
xor
lahf
mov
sbb
sub
cmp
xor
fst
cmp
movs
iret
pop
scas
rcr
mov
fsubrp
and
lahf
in
add
aad
shl
xor
mov
int3
jl
push
xchg
xor
mov
int3
xor
int3
jl
in
and
lahf
in
cmp
sub
in
jle
shl
call
mov
or
sar
xor
mov
int3
cmp
out
out
jle
stos
or
leave
in
ret
add
shl
int3
or
sar
xor
mov
cmps
lods
cmps
adc
jbe
loop
jns
jmp
jge
in
ret
cmp
jl
div
xor
mov
int3
addr16
mov
pop
xor
out
xor
mov
int3
stos
into
mov
cmps
cmp
sahf
sub
xor
mov
int3
addr16
je
xor
out
into
xor
mov
int3
pusha
test
push
xor
mov
sbb
bound
shl
int3
xor
int3
fs
icebp
cdq
xor
out
into
xor
mov
sub
in
inc
cmp
(bad)
out
sub
out
into
xor
mov
gs
mov
int3
xor
mov
xor
shl
int3
arpl
std
inc
xor
push
into
xor
in
mov
xor
mov
xor
shl
int3
cmp
jns
push
xor
cli
xor
mov
int3
jae
mov
ret
dec
ins
sub
lods
jg
shl
call
mov
add
shr
into
xor
mov
int3
xchg
cmp
fs
shl
cdq
xor
mov
cwde
jge
nop
jmp
mov
rcl
(bad)
(bad)
adc
lods
and
shr
xor
mov
pop
shl
cdq
xor
mov
int3
data16
mov
iret
xor
mov
int3
xchg
mov
iret
xor
(bad)
xor
mov
int3
cmc
shl
xchg
xor
mov
int3
jl
mov
sub
push
jo
xchg
cmp
xchg
into
xor
mov
int3
jl
in
and
lahf
in
cmp
sub
in
jle
shl
call
mov
push
shl
int3
xor
mov
cld
xor
out
into
xor
mov
int3
xor
jmp
push
aas
inc
mov
xor
mov
int3
adc
shr
into
xor
mov
int3
xor
jmp
push
aas
inc
mov
xor
mov
int3
adc
shr
into
xor
mov
push
js
mov
and
(bad)
and
and
shr
xor
mov
int3
imul
cdq
xor
mov
int3
jae
mov
sbb
mov
push
xchg
mov
mov
shr
into
xor
test
addr16
sub
popf
push
or
shl
int3
xor
mov
cwde
xor
push
int
shl
int3
stos
into
mov
xchg
movs
test
mov
xor
mov
int3
jo
mov
xchg
sbb
sbb
jl
push
xchg
xor
mov
lods
jl
push
xchg
xor
mov
int3
xor
int3
jge
in
ret
mov
int3
mov
mov
sbb
rcr
int3
xor
mov
int3
stos
jmp
movs
test
mov
xor
mov
cwde
jo
out
aam
int
lds
mov
int3
out
mov
mov
shl
int3
out
mov
xchg
xor
mov
int3
xor
mov
lahf
xor
jp
xor
mov
int3
arpl
les
pushf
enter
rol
lahf
pusha
outs
adc
mov
lahf
clc
imul
jge
add
pop
pop
mov
mov
ins
pop
cmp
mov
std
mov
dec
mov
shl
mov
adc
neg
jmp
les
xor
not
or
cmp
stos
std
dec
shr
(bad)
cmp
pop
push
stos
test
mov
ret
dec
cmp
push
repz
inc
mov
push
jp
cld
jmp
pop
jmp
mov
dec
fimul
pop
cmp
mov
push
idiv
push
adc
mov
mov
inc
xchg
mov
add
imul
pop
cmp
cmp
ret
dec
pop
sbb
adc
sbb
into
mov
push
jmp
(bad)
adc
ficomp
adc
mov
mov
push
pop
mov
add
add
mov
mov
xlat
sbb
pop
ret
pop
test
out
mov
push
cwde
adc
add
mov
xchg
ds
femms
rol
pop
and
mov
push
lds
add
xor
dec
call
pop
repz
dec
xchg
sbb
loop
jne
jmp
adc
pop
mov
mov
jl
mov
xor
jge
dec
cmp
jge
push
es
fsub
push
xor
fsub
les
fsub
les
fsub
les
and
les
jo
cmp
outs
fidiv
outs
mov
test
retf
add
popa
lds
pushf
leave
cmp
and
xor
and
xchg
outs
mov
outs
mov
outs
mov
imul
and
nop
outs
fidiv
outs
mov
outs
mov
leave
cmp
and
xor
and
xchg
outs
mov
outs
mov
ret
mov
test
loop
and
leave
cmp
and
xor
and
xchg
outs
mov
ret
mov
mov
loop
mov
popf
fisttp
(bad)
leave
fisttp
(bad)
xchg
nop
outs
(bad)
xor
xchg
outs
mov
cmp
loop
jbe
xor
and
out
xchg
outs
mov
outs
mov
leave
cmp
and
xor
and
xchg
outs
mov
ret
mov
test
loop
and
pop
daa
(bad)
fsub
shl
outs
(bad)
xor
xchg
outs
mov
sbb
lds
(bad)
sub
xchg
outs
mov
scas
mov
and
outs
mov
outs
mov
sbb
aam
retf
mov
sub
and
and
ins
(bad)
xor
xchg
or
xor
lods
or
ret
and
cmp
jns
outs
mov
outs
mov
and
push
je
ins
xor
leave
cmp
je
shl
pusha
ins
cmp
sbb
(bad)
xchg
jl
shl
adc
(bad)
sub
xchg
or
xor
lods
or
ret
and
cmp
jns
outs
mov
daa
mov
xchg
outs
mov
outs
mov
icebp
leave
xlat
jge
mov
and
ret
cmp
outs
fidiv
outs
mov
outs
mov
ret
mov
movs
(bad)
in
and
outs
mov
outs
mov
icebp
leave
xlat
fisttp
(bad)
leave
fstp
ret
and
cmp
jns
outs
mov
das
mov
and
dec
daa
retf
ret
fdiv
shl
mov
leave
fstp
ret
and
cmp
jns
outs
mov
das
mov
xor
pop
daa
cmp
and
xor
and
xlat
xchg
outs
mov
outs
mov
mov
and
xor
and
outs
sbb
push
aaa
and
and
xor
xchg
xor
and
mov
ret
pop
jp
mov
xor
lods
(bad)
mov
sub
jmp
sub
or
or
adc
adc
mov
repz
and
and
ret
dec
ficom
push
sti
outs
sahf
inc
add
cmp
pop
push
sub
pop
div
sbb
cmps
(bad)
dec
movs
jge
push
jmp
mov
adc
pop
pop
dec
pushf
add
push
jmp
pop
push
(bad)
lock
mov
mov
pop
xor
add
fisub
call
adc
dec
shr
cmp
inc
pop
mov
adc
mov
dec
and
cli
cmps
jmp
cs
jmp
inc
pop
repz
push
cmp
mov
push
out
outs
adc
daa
lods
imul
leave
stos
sbb
ds
push
sbb
inc
pop
inc
pop
push
sub
push
(bad)
fld
ret
int3
add
mov
imul
inc
add
cmp
pop
ret
pop
xor
xchg
lods
imul
xchg
cdq
stos
inc
fist
repz
sahf
leave
test
push
add
pop
xchg
call
push
out
ret
pop
addr16
jmp
ret
and
in
stc
outs
mov
ror
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
out
or
ror
dec
inc
les
addr16
fs
pop
sub
mov
mov
pop
inc
adc
out
or
stos
rcr
rcr
inc
xor
sub
rcr
mov
cmp
repnz
rol
ror
shl
out
sbb
gs
or
mov
test
inc
pop
xor
lods
cwde
test
stos
stos
or
mov
test
inc
addr16
lea
stos
cmps
dec
test
xlat
fnstenv
or
pusha
mov
ret
pushf
lea
shl
jmp
push
lods
cwde
mov
or
mov
test
inc
mov
inc
sub
aam
mov
sub
addr16
inc
inc
sub
aam
add
sbb
or
(bad)
xchg
and
addr16
inc
addr16
inc
ja
pop
addr16
inc
scas
arpl
popa
addr16
inc
addr16
inc
sbb
adc
or
or
pusha
cmp
ret
test
inc
mov
(bad)
mov
dec
or
aas
retf
sub
cmp
gs
or
mov
int3
pop
stos
or
addr16
inc
addr16
lea
out
or
inc
add
sub
rcr
mov
or
out
shl
mov
test
inc
into
lock
dec
addr16
inc
addr16
inc
movs
lea
out
or
cmps
ret
cmc
sub
daa
pop
lock
xchg
lds
ret
test
inc
addr16
inc
add
mov
out
popa
addr16
inc
addr16
inc
addr16
inc
cs
and
push
mov
lahf
cmpps
xor
gs
imul
inc
and
inc
jmp
test
and
cmp
gs
or
mov
lock
pop
addr16
inc
addr16
inc
addr16
inc
sub
mov
lock
xchg
lds
ret
test
inc
sub
mov
imul
ret
mov
addr16
inc
addr16
inc
cmp
mov
addr16
inc
and
inc
jmp
cmps
shr
aas
cmp
gs
or
mov
lock
sub
ret
dec
lea
shr
dec
or
sub
mov
add
or
mov
out
inc
jmp
cmps
shr
aas
cmp
gs
or
mov
lock
stos
addr16
inc
addr16
inc
addr16
lea
shr
dec
or
sub
mov
push
jo
addr16
inc
and
inc
jmp
cmps
shr
aas
cmp
gs
or
mov
test
inc
cmps
and
inc
sub
mov
test
inc
addr16
lea
out
dec
cmp
ficomp
out
adc
xor
stos
sbb
addr16
inc
addr16
inc
sub
ror
out
loope
push
pop
imul
xchg
in
test
inc
addr16
inc
addr16
lea
out
push
xchg
popa
test
icebp
ret
test
sub
push
ds
push
cmp
fimul
stos
push
or
mov
test
inc
je
(bad)
stos
mov
aad
sub
mov
test
inc
addr16
xor
or
mov
or
stos
pop
or
mov
test
inc
int3
icebp
(bad)
stos
mov
or
inc
ins
push
ds
push
ds
popa
fs
xor
or
out
loope
out
xchg
ret
inc
lea
out
ret
pusha
retf
ret
test
inc
fild
pop
sub
aam
aad
adc
ds
cmps
mov
pusha
dec
addr16
inc
addr16
inc
sub
(bad)
cmps
iret
lock
sub
ror
test
inc
or
lock
inc
addr16
lock
inc
addr16
lock
mov
addr16
inc
addr16
inc
gs
adc
mov
test
inc
mov
mov
test
inc
addr16
inc
addr16
inc
gs
add
mov
out
add
in
adc
in
enter
into
pop
sub
out
dec
ss
adc
(bad)
out
or
mov
test
inc
addr16
inc
cmp
push
sub
mov
clc
pop
jb
mov
test
inc
addr16
inc
addr16
inc
and
mov
mov
test
inc
out
pop
push
out
fbld
(bad)
or
mov
add
jmp
(bad)
or
mov
test
inc
pop
mov
inc
aas
out
out
addr16
inc
addr16
inc
addr16
inc
xor
mov
clc
mov
addr16
inc
and
mov
test
inc
addr16
inc
sub
int
and
nop
add
and
in
or
ss
int3
push
sub
mov
test
addr16
inc
addr16
inc
xchg
out
add
push
or
mov
push
fld
sub
mov
inc
lea
and
cmp
gs
or
mov
test
inc
into
lock
sti
addr16
inc
addr16
inc
addr16
lea
shr
mov
or
out
shl
mov
test
inc
cmps
in
inc
sub
mov
test
inc
addr16
inc
or
adc
or
out
out
addr16
inc
addr16
inc
addr16
inc
sub
and
addr16
inc
addr16
inc
sub
push
push
daa
sub
mov
test
inc
aaa
lds
fs
pushf
addr16
inc
dec
(bad)
push
shl
or
ret
test
inc
or
mov
gs
or
mov
test
inc
out
mov
push
out
jmp
(bad)
or
mov
clc
pop
pop
loopne
mov
test
inc
sub
mov
cmp
pusha
or
sbb
mov
addr16
inc
addr16
inc
addr16
inc
sti
add
or
mov
out
or
inc
add
sub
rcr
mov
or
out
shl
mov
test
inc
into
lock
jmp
test
inc
addr16
inc
push
xor
stc
add
jmp
(bad)
or
mov
out
arpl
ret
test
inc
sub
dec
push
pop
sub
fcomp
sub
mov
test
inc
ror
icebp
aad
lods
xor
dec
sub
mov
test
inc
addr16
ret
(bad)
enter
addr16
inc
addr16
lock
inc
addr16
inc
addr16
lea
xor
neg
shr
push
xor
adc
in
gs
or
mov
test
inc
out
mov
sar
out
push
sub
and
addr16
inc
addr16
inc
addr16
inc
mov
cli
iret
pop
mov
test
inc
addr16
inc
push
xor
leave
add
jmp
(bad)
or
mov
out
arpl
ret
sub
pop
sub
fcomp
sub
mov
ror
movs
lods
add
dec
sub
mov
call
ret
(bad)
enter
addr16
inc
addr16
lock
inc
addr16
inc
addr16
inc
sub
mov
sar
sub
ficomp
sub
in
addr16
inc
addr16
inc
push
jmp
call
neg
int
aam
sub
mov
test
inc
mov
cli
iret
pop
mov
test
inc
addr16
inc
addr16
pop
icebp
aad
(bad)
cmpps
shl
ss
int
and
push
aas
icebp
aad
or
imul
or
push
ret
ins
xor
std
mov
add
or
mov
dec
sub
adc
mov
repz
ret
movs
adc
cmps
rcr
jns
jno
push
ja
add
cmp
inc
dec
push
jmp
cwde
pop
push
add
sahf
mov
mov
std
lods
aam
or
into
adc
add
in
mov
cmp
sbb
fld
or
shl
test
adc
scas
aas
mov
std
lods
lahf
mov
femms
add
int
lock
adc
push
or
pop
arpl
pop
lea
daa
and
inc
loop
xchg
jge
pop
aam
push
out
adc
dec
lds
call
mov
mov
(bad)
mov
fiadd
pop
cmp
lods
std
lods
add
dec
mov
cmp
aaa
cmp
sub
adc
loop
mov
sub
rcl
rcl
pop
mov
sbb
ja
inc
push
pop
cdq
cmc
xor
mov
add
outs
(bad)
cmp
push
sar
xor
out
adc
dec
cld
sub
or
add
push
jb
add
das
dec
inc
jp
or
es
aam
aam
iret
inc
or
dec
push
jb
push
push
jb
add
loop
add
ss
inc
sbb
inc
and
iret
outs
aaa
and
and
jp
daa
cmp
jne
test
bound
mov
jo
push
push
jb
add
jb
add
xchg
dec
add
daa
out
push
jb
mov
jb
add
sub
cmp
inc
jecxz
sub
sub
add
inc
jecxz
rol
sbb
push
push
jb
add
or
or
adc
or
inc
aaa
sbb
or
dec
lods
sub
or
imul
push
jb
add
jb
add
jb
add
sub
pop
pop
xchg
adc
loop
sub
or
imul
push
jb
add
jb
add
sub
cmp
inc
jecxz
sub
sub
add
cmp
inc
jecxz
rol
sbb
push
push
jb
add
jb
add
enter
jl
pop
das
push
dec
or
xor
or
jl
dec
mov
test
out
cld
sbb
push
jb
add
jb
add
sub
pop
pop
xchg
adc
jle
je
pop
pop
ss
pop
xchg
add
loop
and
mov
jb
push
push
jb
add
xchg
dec
add
sbb
jmp
jb
add
ror
shl
push
jb
add
ror
sbb
cmp
add
shrd
sbb
cmp
and
adc
mov
pushf
aas
pop
in
push
mov
mov
add
jle
add
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
or
cmc
pop
je
push
cmp
mov
retf
mov
mov
adc
mov
dec
loopne
xor
xchg
dec
add
adc
ret
sbb
xchg
mov
scas
sub
dec
rcl
inc
rcr
ss
mul
and
xor
pop
mov
pop
pop
cmp
push
repz
hlt
pop
add
jbe
add
xor
dec
sbb
dec
cmp
jmp
lods
cmp
xlat
out
xchg
icebp
adc
and
fsub
mov
adc
or
cwde
out
cmp
into
xor
inc
dec
inc
xchg
icebp
add
test
cld
dec
xchg
or
jp
push
jmp
aas
mov
dec
xor
push
retf
in
lods
xchg
adc
adc
mov
mov
adc
sbb
das
aas
out
dec
xor
inc
sbb
sbb
pop
push
push
mov
adc
(bad)
push
add
push
or
dec
mov
shr
aas
mov
sbb
(bad)
mov
(bad)
lods
or
push
xor
dec
inc
(bad)
pop
rol
xchg
add
jo
inc
ficom
sbb
jle
xchg
aaa
es
sbb
dec
into
rol
adc
mov
icebp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
jb
push
int
push
jb
arpl
jbe
jge
scas
cmp
fistp
call
xor
int
push
jb
cmc
push
jb
jb
push
int
push
jb
cmp
push
jb
inc
int3
push
lds
mov
jb
out
int
sbb
cmp
push
jb
out
push
ret
(bad)
and
cmp
push
jb
jb
jns
fistp
cmp
and
cmp
push
jb
scas
push
or
mov
pop
(bad)
fs
lock
ret
int
push
jb
cmp
cs
(bad)
jge
cmp
xchg
jb
jns
cwde
mov
jae
cmp
push
jb
ss
sahf
sub
cmp
ret
mov
cmp
int
sbb
cmp
push
mov
cmp
push
jb
cmp
mov
xchg
and
jle
sbb
xor
jb
cmp
pop
sub
cmp
push
sahf
pop
stc
cmc
mov
sbb
xchg
jb
jp
fs
nop
xchg
jb
jp
fs
pushf
iret
cmp
push
jb
cmps
adc
or
ror
cmp
push
jb
dec
adc
mov
push
jp
aas
ins
jno
jmp
aas
or
lods
push
repnz
cmp
fs
pusha
int
sbb
dec
push
jb
jl
xor
stc
aas
ins
jno
jmp
aas
pop
cmp
cmp
push
jb
je
jecxz
jae
aas
aad
sbb
cmp
sub
cmp
push
jb
das
push
ret
pop
sub
dec
mov
cmp
push
jb
fs
xor
int
sbb
cmp
push
xor
movs
int
xchg
jb
fstp
mov
xchg
jb
aam
and
cmp
int
push
jb
cmp
push
jb
mov
push
xchg
ret
xchg
scas
lods
in
iret
cmp
push
jb
fs
xchg
pop
imul
sbb
cmp
push
jb
ds
aas
sub
cmp
pop
imul
sbb
rcl
jge
jbe
int
push
jb
addr16
jb
jb
jns
stos
adc
xchg
(bad)
scas
pushf
int3
cmp
push
jb
cmp
push
jb
aas
pop
sub
cmp
push
sahf
int3
cmp
push
jb
cmp
push
jb
jb
jp
stos
in
iret
cmp
push
jb
movs
push
jb
jb
jp
mov
sbb
and
pop
sub
xor
(bad)
adc
sub
cmp
push
jb
cdq
push
jb
cmc
pop
add
jae
fcom
sbb
lds
xchg
rcr
nop
xchg
jb
jp
jae
(bad)
int
sbb
jge
jb
jae
fcom
sbb
xor
cmp
jg
or
out
cmp
push
jb
dec
sbb
jae
push
and
sbb
jae
jmp
push
sbb
jae
cmp
fistp
xchg
sbb
xchg
cmp
dec
jae
fcom
sbb
xor
cmp
sub
cmp
int
sbb
cmp
push
xchg
dec
jae
fcom
sbb
xor
cmp
jg
or
out
cmp
push
jb
imul
sub
cmp
sub
cmp
arpl
sbb
sbb
sub
rol
dec
xor
cmp
push
jb
jae
xchg
rsm
in
iret
cmp
push
jb
xor
jb
push
xor
add
fimul
das
mov
jae
cmp
xlat
push
xor
push
adc
push
cmp
cmps
in
lods
xor
sub
cmp
iret
cmp
push
jb
cmp
push
jb
aas
dec
sub
cmp
push
jb
fs
xchg
pushf
int
sbb
inc
push
jb
fs
jle
sbb
in
ins
pop
in
iret
cmp
push
jb
jae
fcmovne
cmp
push
jb
movs
push
jb
jb
jo
mov
sbb
sbb
sub
add
cmp
jmp
or
cmp
cmp
push
jb
and
jl
jb
loope
cmp
push
jb
and
jge
jb
in
cmp
push
jb
cmp
popf
or
and
jmp
and
cmp
int
push
jb
cmp
adc
adc
or
adc
cmp
push
jb
jb
add
sbb
xchg
sbb
xchg
sbb
xchg
cmp
dec
jae
fcom
sbb
xor
cmp
jg
or
out
cmp
push
jb
repnz
jb
(bad)
mov
pop
imul
sbb
cmp
push
jb
pop
push
xchg
mov
jae
sub
pop
or
cmp
das
jo
scas
jb
mov
and
dec
stc
not
mov
sub
fs
xchg
fistp
clc
adc
sub
faddp
fs
out
mov
add
jmp
sar
lock
dec
mov
out
imul
cli
push
adc
call
mov
cmc
mov
test
cwde
add
push
fucomi
push
repz
add
cmp
stos
adc
test
setnp
inc
cli
test
sti
imul
in
pop
leave
adc
push
jmp
stos
sbb
jo
adc
cs
repz
mov
or
rcl
push
xchg
mov
pop
and
inc
and
mov
fwait
lods
mov
outs
adc
fld
or
adc
xlat
imul
jl
mov
sbb
mov
jne
push
dec
jmp
and
inc
std
mov
pop
add
xor
push
and
push
aad
push
push
cmp
mov
dec
pop
js
popf
lock
pop
sbb
ret
pop
xchg
dec
xor
(bad)
es
adc
sahf
cmp
xchg
mov
xchg
fs
cli
cmps
xchg
jge
rcl
pop
push
(bad)
cmp
xchg
pop
mov
cmps
add
pop
adc
shr
add
daa
lods
(bad)
rol
xchg
mov
ror
(bad)
sbb
cdq
push
jbe
outs
lock
imul
dec
pop
pop
dec
and
adc
pop
sbb
add
pop
sbb
pop
dec
call
mov
sbb
rcr
fmul
hlt
les
inc
hlt
js
xchg
dec
or
xor
or
fiadd
inc
fst
or
fiadd
inc
(bad)
add
xor
fnstsw
xchg
dec
cmc
inc
add
or
inc
lea
imul
pop
cmp
add
fcmovnu
add
xchg
dec
inc
xor
in
inc
xchg
in
aas
xchg
in
aas
inc
lea
imul
or
fadd
or
push
dec
leave
jo
xchg
cmc
rcr
adc
fiadd
inc
fldcw
mov
jo
dec
test
fcmovnu
add
fiadd
inc
fld
inc
imul
add
xchg
fiadd
inc
(bad)
add
mov
jo
mov
dec
sbb
fwait
mov
dec
xor
xchg
mov
pop
cmc
push
ret
xchg
push
pop
xor
cld
or
into
adc
xchg
or
mov
or
and
sbb
std
xor
leave
mov
mov
or
adc
pop
iret
movs
cmp
lea
cmp
std
or
mov
push
pop
jecxz
push
add
mov
push
retf
pop
push
repz
movs
xlat
mov
xor
sub
or
out
pop
fild
jmp
ins
(bad)
mov
sti
inc
sahf
pop
cmp
sbb
mov
or
xchg
adc
push
nop
cmc
add
cmp
ja
dec
xchg
in
push
sbb
adc
inc
xor
(bad)
mov
xchg
vandnps
inc
push
pop
mov
cmps
jno
into
ja
fwait
and
push
ja
bound
out
mov
or
mov
pop
div
sbb
loop
xchg
cmp
inc
ds
das
or
aaa
mov
dec
and
sbb
dec
mov
pop
xchg
sub
push
call
adc
enter
and
inc
into
dec
rol
fwait
lods
add
cmp
mov
aad
cmp
shl
in
fst
ret
enter
adc
dec
mov
into
dec
(bad)
add
pop
fdivr
xor
cmps
aam
push
(bad)
xchg
test
mov
test
loope
xchg
test
mov
in
mov
mul
icebp
push
fwait
dec
rcr
(bad)
retf
mov
(bad)
daa
sar
sbb
int3
cmp
adc
cmp
adc
fisubr
mov
push
mov
xchg
test
mov
jmp
retf
cmovle
sbb
ins
sbb
dec
(bad)
sbb
retf
into
sub
cmps
(bad)
push
jnp
outs
adc
adc
xor
shufps
dec
add
iret
ja
rcr
jnp
cmp
daa
mov
sbb
out
rcl
mov
test
push
xchg
test
mov
shufps
dec
add
iret
ja
rcr
jnp
cmp
daa
mov
sbb
out
ret
mov
adc
out
in
out
ja
adc
out
icebp
outs
sbb
pop
pop
sub
iret
add
xchg
add
test
mov
mov
stc
ret
out
rcl
mov
out
mov
fisubr
mov
sbb
mov
int3
out
push
in
push
pop
repz
fmul
out
outs
stos
xchg
add
repz
int3
out
imul
aaa
jge
cmp
ret
pop
stos
leave
mov
mov
jmp
stc
jb
popf
jne
imul
mov
mov
jae
mov
jecxz
mov
fdiv
fcomi
jae
mov
jae
mov
jae
mov
ds
std
mov
add
pop
pop
jae
mov
jae
mov
ds
inc
sub
or
cmp
lock
jae
mov
jmp
div
out
jae
mov
jae
mov
xchg
stos
mov
sahf
test
inc
jb
pop
pop
jae
mov
xor
fs
cld
jne
mov
pop
inc
jae
add
jae
mov
xor
imul
jno
jmp
jae
mov
sbb
shl
jae
mov
jae
mov
cmp
ds
push
add
scas
mov
movs
int
push
mov
cwde
addr16
xor
(bad)
xor
shl
xlat
sbb
add
imul
rcl
outs
sbb
adc
int
retf
(bad)
or
ss
sub
aad
jle
rcr
push
into
sbb
inc
cmp
in
xchg
cmp
mov
cmp
mov
jae
jae
push
or
adc
nop
xchg
or
mov
mov
das
mov
push
ds
jae
cmp
xor
dec
cld
not
dec
ret
inc
and
nop
add
adc
sub
adc
mov
adc
daa
lods
jmp
pop
fwait
lods
adc
jnp
mov
push
leave
scas
sbb
adc
push
shr
add
mov
sidtd
adc
push
jmp
aaa
cmp
mov
push
cli
ret
pop
je
call
sbb
mov
xor
jmp
inc
ss
xor
(bad)
cld
mov
jne
inc
pop
fiadd
add
mov
dec
fnstsw
xor
test
sub
test
push
ja
sbb
push
cmc
imul
sbb
test
push
push
test
std
stos
xchg
in
imul
ja
push
xchg
xchg
adc
imul
sbb
test
push
mov
push
add
or
push
xchg
cmp
push
es
push
cmp
daa
pop
test
popa
retf
push
es
push
es
pop
cmp
add
jo
retf
push
push
retf
aas
es
push
jb
retf
push
es
push
cmp
or
add
retf
cmp
push
xchg
cmp
push
cmp
daa
pop
test
popa
retf
push
es
push
cmp
leave
lea
push
push
retf
push
es
push
es
aas
es
push
jb
retf
push
es
push
cmp
mov
mov
push
es
aaa
cmp
mov
cmp
push
cmp
leave
lea
push
push
retf
push
es
push
cmp
push
es
push
cmp
fmul
sbb
imul
and
test
shl
retf
push
es
push
cmp
push
pop
cmp
aas
es
push
sub
retf
push
cmp
and
fdivr
inc
mov
retf
push
push
retf
push
es
push
cmp
and
mov
mov
dec
ja
push
cmp
and
inc
call
inc
mov
retf
aaa
cmp
popf
aaa
retf
push
push
retf
pop
cmp
sbb
xchg
leave
push
push
retf
push
es
push
cmp
stos
cmps
in
push
jmp
push
cmp
daa
pop
test
popa
retf
push
cmp
cmp
jbe
retf
push
es
push
cmp
sbb
retf
push
es
pop
cmp
cwde
not
retf
mov
push
cmp
sbb
nop
retf
push
cmp
pop
js
leave
push
dec
imul
cmp
sbb
push
mov
push
cmp
push
es
push
es
inc
leave
push
jle
retf
push
es
push
es
adc
cs
ja
and
jl
jnp
push
dec
test
push
es
push
es
push
es
push
inc
dec
retf
push
es
push
cmp
and
xchg
add
test
mov
inc
popa
retf
push
es
push
es
mov
cmp
and
ja
adc
push
push
retf
push
es
pop
cmp
test
inc
popa
retf
push
cmp
sbb
cdq
push
mov
test
cmp
push
push
retf
pop
cmp
test
inc
popa
retf
push
es
aas
es
push
jbe
retf
push
es
push
es
sbb
push
mov
jae
push
push
retf
push
es
push
cmp
sbb
push
push
retf
push
cmp
es
push
es
aaa
es
push
jbe
retf
push
es
push
cmp
push
es
push
es
push
cmp
mov
nop
retf
push
es
push
cmp
es
push
es
sub
retf
push
cmp
push
es
push
cmp
mov
nop
retf
push
es
push
cmp
es
push
es
aas
es
push
jbe
retf
push
es
push
cmp
push
arpl
push
adc
retf
push
es
aaa
cmp
popf
aaa
retf
push
push
retf
push
es
mov
cmp
jne
test
cmp
sub
rol
leavew
push
push
retf
push
es
push
es
out
sbb
push
xchg
cmp
aaa
cmp
popf
aaa
retf
push
push
retf
push
es
cmp
retf
push
es
push
cmp
push
pop
cmp
push
es
pop
daa
cmp
push
push
retf
push
es
pop
cmp
or
call
sbb
dec
cdq
adc
ja
push
es
push
es
push
cmp
inc
js
push
push
pushf
ja
add
pusha
jae
push
push
retf
push
es
pop
cmp
popf
pop
push
pop
push
jl
push
push
retf
push
es
push
cmp
mov
mov
push
es
push
es
aaa
cmp
sbb
cmp
push
es
mov
cmp
ins
push
and
push
es
push
cmp
push
push
retf
push
es
mov
cmp
sub
retf
push
es
push
cmp
push
push
retf
push
es
push
cmp
mov
nop
retf
push
es
push
cmp
push
pop
cmp
push
es
aas
es
push
jbe
retf
push
es
push
cmp
mov
nop
retf
push
cmp
push
jmp
sub
retf
push
es
push
es
push
dec
jns
push
es
push
cmp
nop
dec
aaa
mul
retf
in
retf
push
xchg
cmp
push
es
push
cmp
xor
push
inc
retf
push
es
push
cmp
cmp
sbb
push
retf
push
cmp
out
mov
push
xchg
cmp
push
cmp
and
test
mov
ss
xchg
mov
push
es
push
cmp
adc
hlt
out
mov
push
xchg
cmp
aaa
cmp
popf
aaa
retf
push
push
retf
push
es
aas
cmp
push
push
retf
aaa
es
push
jle
retf
push
cmp
sbb
jo
push
es
push
cmp
cld
dec
cmp
out
lods
retf
push
xchg
cmp
push
es
aaa
cmp
popf
aaa
retf
push
push
retf
aaa
es
push
push
push
retf
push
cmp
push
pop
cmp
pop
daa
cmp
push
push
retf
pop
cmp
or
shr
ins
mov
cdq
adc
ja
push
cmp
outs
and
xchg
adc
sbb
js
sbb
push
retf
push
es
push
cmp
and
leave
push
push
retf
push
cmp
sbb
mov
adc
inc
in
sbb
dec
test
jnp
add
jge
test
push
fild
or
xor
stc
pop
test
std
stos
jae
imul
cld
mov
jbe
out
pop
retf
push
es
push
es
sbb
cmp
push
push
retf
push
cmp
jmp
add
xchg
shr
add
jge
xchg
or
jmp
jp
jae
add
in
bound
jle
add
test
inc
jb
pop
pop
jae
mov
jae
mov
adc
mov
push
mov
std
mov
cmp
push
pop
ss
add
jae
mov
retf
cli
mov
cmp
pop
mov
add
mov
std
or
fstp
lahf
pop
adc
(bad)
clc
adc
test
mov
inc
mov
or
ret
cwde
adc
out
fwait
ror
or
ret
dec
ret
inc
loop
xchg
inc
add
stc
pop
cmps
sub
sbb
mov
push
inc
out
cmp
adc
sbb
push
cmp
in
adc
retf
fisub
cli
mov
rcr
adc
sbb
or
xchg
or
dec
lock
and
sbb
arpl
int
dec
xor
call
or
adc
mov
push
out
adc
push
add
dec
scas
pushf
xor
dec
xchg
loope
pop
cmp
inc
outs
leave
pop
dec
xchg
sub
(bad)
sar
dec
(bad)
push
inc
pop
xlat
adc
ja
and
sar
mov
mov
pop
mov
cs
pop
leave
xchg
sbb
dec
mov
push
xlat
push
push
mov
repz
dec
xor
or
fidiv
sbb
imul
retf
dec
or
stos
mov
fisubr
adc
(bad)
pop
adc
sub
mov
pop
pop
add
adc
loopne
pop
pop
into
(bad)
pop
adc
and
xor
loop
pop
adc
add
jge
(bad)
pop
adc
sub
adc
into
pop
fdivr
and
loopne
mov
pop
into
(bad)
adc
pop
into
(bad)
pop
adc
and
jns
(bad)
pop
adc
call
outs
sbb
pusha
pop
sar
and
idiv
pop
cmp
into
lea
mov
add
adc
out
(bad)
pop
adc
(bad)
(bad)
pop
adc
and
push
sbb
and
pop
into
mov
scas
push
clc
sbb
mov
cwde
(bad)
pop
adc
add
adc
pusha
lds
out
(bad)
pop
adc
add
adc
add
adc
fst
aad
int3
lds
iret
sahf
adc
imul
fisubr
cli
dec
iret
jbe
lods
xor
inc
bnd
sbb
loop
mov
pop
call
mov
jae
mov
xor
mov
cmp
mov
std
mov
popf
adc
cmp
push
mov
inc
mov
jae
mov
pop
adc
push
mov
jmp
mov
push
mov
mov
mov
mov
xor
fst
push
ret
push
cmp
pop
outs
repz
movs
(bad)
push
arpl
loop
mov
fwait
shl
push
push
add
push
adc
daa
lods
std
lods
adc
or
aas
mov
std
lods
inc
jb
mov
lods
add
retf
adc
xor
pushf
je
int
not
jnp
retf
push
jmp
rcr
ret
pop
rol
shl
daa
(bad)
mov
or
and
mov
aas
mov
std
mov
mov
sbb
push
adc
ret
pop
xchg
mov
repz
push
dec
jmp
mov
sbb
fs
mov
cli
cwde
adc
rcl
sbb
leave
jecxz
cmps
xchg
mov
adc
push
xchg
test
cld
sub
jl
or
ret
pop
jnp
out
xchg
mov
pop
repz
mov
xor
ret
mov
aaa
fisubr
sub
lahf
dec
enter
fcmovb
cld
mov
jmp
pop
aaa
pop
cmc
xor
mov
popf
mov
outs
adc
scas
in
test
inc
fs
push
push
xor
aas
xor
xchg
retf
pop
pushf
lods
push
aas
xor
cmp
jle
push
aas
xor
ds
inc
fs
mov
jno
es
jno
push
inc
fs
imul
jo
jecxz
shr
fs
imul
ret
inc
and
cmp
push
mov
inc
mov
jae
mov
dec
mov
out
cmp
xchg
jmp
int3
mov
jmp
sub
mov
jae
mov
jae
mov
jae
mov
icebp
mov
shl
jmp
jae
mov
jae
mov
jae
mov
sub
mov
jae
mov
jae
mov
cmp
mov
out
mov
add
lock
jae
mov
cmp
lock
in
jae
mov
ret
inc
loop
jae
mov
jae
mov
mov
(bad)
in
jae
mov
jmp
div
out
jae
mov
adc
push
call
std
mov
cmp
inc
mov
inc
sbb
lock
jae
mov
ds
inc
sbb
add
icebp
out
dec
jae
mov
cmp
scas
sub
lea
mov
std
mov
(bad)
pop
stc
outs
cmp
into
mov
stc
outs
(bad)
clc
in
dec
(bad)
sbb
sbb
retf
mul
adc
add
cld
(bad)
pop
arpl
jmp
xchg
push
jmp
pop
(bad)
mov
fwait
lods
sub
adc
jmp
xor
into
in
loop
aas
mov
(bad)
lods
ret
mov
adc
mov
shl
add
jb
inc
dec
jmp
in
call
inc
aad
std
mov
fld
or
sub
ins
inc
ret
pop
iret
push
cmp
ja
sbb
mov
push
xor
out
fiadd
add
xor
sti
jne
pop
out
hlt
sar
xchg
xlat
mov
call
sar
push
dec
xchg
cmp
(bad)
es
fs
sti
push
jae
ret
inc
pop
add
arpl
popa
rol
and
inc
inc
repnz
out
pop
pusha
mov
cmp
pop
rcl
sbb
push
pusha
jl
mov
sbb
adc
adc
pop
test
into
pop
in
into
pop
in
xchg
pop
in
xor
outs
jae
aad
mov
xchg
lds
mov
cmp
daa
or
test
inc
jb
pop
pop
jae
mov
adc
neg
jle
push
xchg
mov
mov
movs
gs
mov
jo
mov
mov
cli
outs
shl
jmp
loopne
stos
cmp
popa
cli
imul
ds
les
pop
push
push
(bad)
adc
sub
ficomp
fld
rcl
adc
fwait
lods
cmc
lods
cs
lock
fcmovnb
out
call
mov
adc
jbe
mov
adc
mov
cs
repz
mov
push
pop
xchg
push
jb
addr16
jnp
cmp
mov
push
into
ret
pop
mov
jmp
push
jnp
pop
adc
mov
adc
(bad)
aaa
call
(bad)
in
push
cmp
aas
mov
inc
inc
ffree
je
loop
adc
mov
fisttp
cdq
jl
adc
and
jns
xchg
test
push
xchg
cmp
inc
pop
sbb
fadd
scas
fist
retf
lods
lods
scas
jne
adc
and
push
(bad)
dec
add
jns
push
daa
lods
in
rol
xor
cmps
fcmove
push
mov
inc
bound
rcr
push
mov
mov
aaa
inc
fild
out
jl
mov
repz
iret
push
fwait
pop
iret
push
fwait
pop
iret
jo
pop
iret
inc
call
push
fwait
pop
into
jo
pop
iret
inc
call
dec
mov
inc
call
jb
fdiv
or
dec
into
push
fwait
mov
iret
push
fwait
retf
iret
sub
push
imul
sbb
dec
into
sbb
adc
jp
adc
sbb
adc
push
mov
sbb
pop
iret
sbb
adc
cld
call
pop
mov
test
pop
iret
inc
call
sbb
mov
sbb
jl
sbb
aad
into
sbb
adc
sbb
jge
sbb
adc
mov
inc
cld
push
xlat
dec
iret
sbb
adc
ret
xchg
popa
sahf
fwait
dec
mov
(bad)
or
imul
push
fst
fcom
dec
into
clc
mov
iret
inc
fwait
iret
repnz
xchg
pop
iret
js
dec
pop
inc
call
pop
ins
dec
into
inc
call
push
fwait
mov
push
jb
call
push
ret
sahf
fcom
pop
inc
(bad)
cwde
or
lahf
fcom
cmp
cmp
xchg
mov
inc
enter
jle
add
mov
std
mov
cmp
mov
std
mov
cmp
xchg
jmp
popf
das
push
mov
push
ss
inc
jp
jae
mov
xor
test
cld
jne
mov
pop
out
lock
jae
mov
aas
mov
jmp
adc
mov
push
mov
cli
push
adc
scas
mov
cmp
push
push
mov
push
fild
fisub
stc
outs
cmp
retf
sub
sti
imul
jmp
arpl
ret
mov
stc
imul
out
jle
and
stos
push
jmp
dec
push
clc
shr
sub
mov
mov
cmp
jo
and
mov
mov
and
pop
dec
pusha
xor
retf
sti
jne
push
xchg
and
mov
dec
cmp
inc
cmp
adc
mov
adc
int
mov
or
cs
repz
sub
sub
inc
mov
jbe
xchg
mov
dec
int
loop
adc
shl
cmps
ret
pop
xor
adc
push
push
or
cmp
cmp
ds
cld
mov
cmp
pop
adc
sub
adc
inc
add
pusha
add
sbb
pop
cs
rol
jae
add
push
jg
repz
rcl
rol
sbb
mov
rol
shl
inc
ret
pop
xor
dec
call
pop
repnz
ss
mul
fistp
adc
addr16
mov
movs
pop
lock
movs
pop
lock
mov
icebp
mov
movs
pop
lock
inc
test
add
mov
scas
and
or
mov
pop
adc
and
mov
movs
xchg
mov
mov
cmp
movs
pop
lock
jmp
mov
and
mov
out
jmp
ja
pop
push
neg
leave
call
out
push
pop
mov
mov
movs
out
out
jmp
mov
sub
mov
xor
popa
mov
mov
lock
movs
iret
and
cdq
mov
lock
pop
cld
or
inc
mov
add
mov
scas
and
sbb
movs
jo
icebp
dec
jo
push
add
loopne
ins
mov
add
xor
in
pusha
pop
int3
jo
add
mov
pop
xor
pusha
(bad)
out
mov
push
addr16
adc
das
inc
jmp
inc
jbe
lahf
das
mov
mov
inc
inc
lock
adc
mov
jae
pmaxsw
mov
xor
imul
int
cli
push
jno
jmp
mov
dec
out
mov
jo
mov
retfw
cmp
bound
xchg
aas
mov
std
movs
sar
xor
clc
or
mov
inc
fistp
xor
cmc
mov
push
or
inc
mov
mov
aaa
mov
dec
and
or
out
mov
std
dec
xchg
popa
cmp
dec
xor
mov
(bad)
out
pop
shl
fidivr
fwait
lods
popa
lods
sbb
adc
jae
push
daa
lods
in
jmp
adc
sub
adc
jb
push
push
cmp
sahf
adc
inc
aad
cld
mov
jnp
mov
inc
aam
cli
jne
lods
or
inc
mov
sub
inc
cmp
inc
aas
jo
dec
xchg
lea
cs
lock
xchg
ins
gs
sti
xchg
xor
dec
mov
adc
pop
and
hlt
retf
push
mov
aam
push
push
push
cwde
inc
call
sbb
mov
push
adc
ret
mov
cld
mov
rol
push
popa
stc
outs
(bad)
mov
arpl
cmp
xchg
adc
in
adc
cmps
xchg
adc
cmps
xchg
adc
cmps
mov
aaa
cmps
adc
mov
adc
cmps
mov
aaa
cmps
adc
xor
adc
aaa
cmps
jbe
mov
int3
test
cmps
xchg
adc
jo
xor
cmps
inc
adc
mov
pop
and
fcomp
movs
ficomp
jmp
call
ja
enter
pop
sub
jmp
mov
fwait
xor
xor
adc
xchg
sbb
mov
add
mov
adc
mov
xchg
adc
mov
push
xor
and
cmps
mov
add
stos
xchg
adc
mov
in
mov
pop
dec
fs
sub
test
shl
push
add
cmps
adc
mov
jmp
cmps
imul
jg
inc
xchg
adc
enter
jmp
sub
rcl
mov
std
mov
mov
adc
retf
mov
dec
(bad)
enter
push
addr16
pop
sahf
lods
adc
jae
cmp
pop
mov
pop
cmps
sti
imul
inc
inc
fcomp
mov
sub
jle
cmp
mov
cld
dec
xor
xchg
dec
es
out
or
retf
pop
repnz
shl
jmp
mov
aad
jmp
test
add
pop
push
ficom
push
cmp
adc
push
not
or
dec
ficom
aam
es
mov
(bad)
dec
repnz
inc
dec
(bad)
push
cmp
mov
adc
ret
mov
(bad)
mov
fstp
or
ret
rcr
lds
daa
lods
sub
xor
adc
push
shl
ja
sub
aas
mov
sub
sbb
cmp
inc
(bad)
pop
rcr
int
push
add
inc
stos
pop
sub
retf
lods
add
sub
push
(bad)
push
retf
pop
test
dec
(bad)
test
pop
aas
jle
mov
aas
jle
mov
jmp
bound
aas
jle
mov
ds
mov
fldcw
mov
push
push
movs
ds
scas
aas
(bad)
push
mov
scas
adc
jle
mov
aas
jle
mov
adc
inc
mov
jno
sbb
div
pop
cmps
aas
xor
jno
sbb
imul
jle
leave
aas
jle
mov
add
sub
jle
mov
adc
inc
mov
sub
test
jb
mov
sub
pop
xor
inc
mov
push
ficom
ds
ins
ficom
scas
cmps
ds
mov
cmp
pop
repnz
mov
fsubr
sub
jge
fidiv
(bad)
mov
inc
push
sbb
add
mov
stos
mov
dec
dec
sub
aad
dec
mov
shl
mov
cli
imul
loop
int3
mov
xor
dec
lods
add
or
cmp
dec
push
(bad)
cmp
mov
xchg
inc
xchg
inc
fidivr
jno
out
leave
adc
stos
fbld
inc
(bad)
(bad)
push
push
mov
adc
stc
call
mov
cmp
sti
adc
xor
(bad)
mov
rcl
pop
cmp
adc
adc
xor
adc
and
mov
sub
test
or
(bad)
test
inc
std
add
push
repz
fstp
sti
mov
cs
pop
fwait
lods
test
and
ds
push
mov
cmps
in
adc
adc
mov
adc
addr16
dec
xchg
in
mov
rcr
adc
mov
adc
scas
(bad)
adc
stos
out
cmp
sti
push
dec
mov
dec
vdivss
dec
lock
scas
inc
sub
cmp
pop
lods
pop
(bad)
jecxz
push
adc
pop
adc
dec
cmp
push
inc
inc
idiv
rcl
pop
jmp
adc
dec
or
lods
dec
pushf
(bad)
ins
fidivr
scas
mov
test
xor
movs
sahf
div
dec
sar
hlt
add
jne
test
xor
add
jne
mov
ja
push
popf
xchg
data16
jne
ins
mov
add
leave
cmc
add
jne
add
jne
push
shr
add
jne
add
jne
dec
pushf
fstp
shl
add
jne
inc
nop
jne
call
ins
xchg
test
add
cmp
add
jne
sbb
shl
mov
add
jne
add
shl
add
jne
in
je
fs
iret
pop
sti
pusha
cmp
test
add
cmp
add
jne
add
jne
cmp
je
add
jne
add
jne
dec
jb
fimul
fist
mov
inc
push
shr
add
jne
dec
pushf
daa
mov
sar
mov
add
jne
in
ja
fstp
xchg
cmp
ja
adc
dec
pushf
cmp
mov
fidivr
pop
mov
xchg
xor
jle
pop
shr
add
sbb
mov
inc
dec
cmp
lods
ret
pop
adc
mov
test
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
stos
mov
dec
dec
loop
mov
add
jmp
shl
mov
clc
imul
pop
inc
lds
mov
ds
dec
nop
loopne
aam
out
fdivr
add
ret
dec
aam
jne
lds
mov
gs
pop
jb
xor
mov
sbb
push
cmp
mov
fwait
pop
cmp
lods
(bad)
fwait
lods
xor
jle
iret
out
in
and
push
call
push
or
xor
dec
xor
pop
dec
push
out
or
mov
loop
ror
mov
fld
or
inc
(bad)
pop
cdq
push
call
pop
jmp
inc
push
xchg
ret
pop
addr16
jmp
dec
lock
out
pop
and
sbb
pop
ret
pop
dec
inc
inc
and
mov
xlat
pop
aas
inc
cmp
xor
aas
push
pop
dec
call
pop
rol
pop
das
add
sar
enter
rol
neg
stos
pop
lods
xchg
xor
repz
movs
ret
mov
jo
sbb
dec
jle
(bad)
dec
jle
(bad)
dec
test
les
add
sar
jle
(bad)
dec
enter
jg
cmp
test
push
and
les
sbb
pop
jle
(bad)
dec
jnp
aas
test
in
pop
jle
adc
pop
fistp
(bad)
dec
add
jmp
dec
jg
mov
xlat
loop
out
(bad)
sbb
dec
sbb
test
out
cwde
xor
add
push
mov
xor
(bad)
sbb
jle
sbb
test
out
sbb
push
cmp
xor
add
das
mov
jg
shl
into
(bad)
movaps
sbb
xor
add
push
mov
addr16
in
dec
adc
sbb
xchg
xor
add
push
mov
xor
add
push
inc
out
fiadd
jg
addps
stos
test
push
cmp
xor
ficomp
push
les
push
mov
xor
add
out
add
sbb
xor
add
push
mov
jle
bound
ins
push
(bad)
call
fidiv
aas
pop
jg
ret
into
(bad)
dec
lods
or
out
xor
mov
push
mov
xor
add
sbb
outs
jnp
xchg
jle
(bad)
maxps
lea
push
mov
xor
add
sbb
dec
jae
(bad)
out
psrlq
adc
movd
dec
test
sar
xor
dec
xor
add
push
mov
or
fwait
out
sbb
dec
dec
movd
sbb
dec
jae
xchg
jle
lds
in
cwde
cmps
add
add
push
mov
pushf
out
inc
(bad)
mov
out
cmp
mov
ret
cmp
xor
dec
xor
add
push
mov
imul
ret
push
mov
xor
add
push
mov
(bad)
push
loopne
xor
add
push
mov
pushf
out
inc
bound
adc
and
cmp
xor
es
fisub
outs
dec
jle
xlat
dec
outs
mov
out
call
cmp
xor
dec
xor
add
push
mov
das
push
call
add
mov
push
mov
xor
add
mov
push
mov
xor
add
retf
lods
imul
cmp
xor
add
sbb
(bad)
sbb
jle
data16
sar
xor
dec
xor
add
push
mov
pop
push
call
add
push
mov
xor
mov
xor
add
push
mov
xor
add
mov
push
mov
xor
add
push
mov
jge
retf
lods
imul
cmp
xor
add
push
mov
andnps
pop
xor
add
aaa
mov
xor
mov
push
mov
xor
sub
ror
ficomp
sbb
dec
push
mov
dec
out
and
outs
jle
ror
or
inc
imul
lds
pmaxsw
jle
(bad)
dec
in
xor
jae
call
adc
xor
stos
enter
sbb
std
fcmovb
out
xor
mov
push
mov
andnps
pop
xor
add
push
cmp
xor
add
mov
xor
add
push
mov
imul
fstp
(bad)
dec
inc
(bad)
dec
xchg
out
add
or
loop
mov
push
ror
xchg
xor
imul
cli
cmp
imul
adc
cmc
push
push
repnz
inc
add
sbb
pop
out
jae
mov
xor
or
sub
adc
mov
jg
std
dec
sar
(bad)
dec
sub
xor
mov
dec
je
inc
(bad)
push
cmp
(bad)
sbb
push
ror
std
icebp
enter
in
mov
ins
adc
cmp
leave
xchg
cmps
mov
(bad)
mov
sti
stos
adc
out
inc
pop
push
and
clc
adc
xchg
imul
pop
dec
cld
dec
xchg
mov
adc
dec
cli
cmps
xchg
dec
lea
add
mov
push
ror
mov
adc
xor
inc
mov
pop
aas
mov
dec
int3
xchg
adc
mov
xchg
and
push
fsub
add
cmp
cmc
mov
leave
dec
scas
(bad)
cmp
pop
ret
dec
and
or
rol
fld
or
and
and
cmp
jg
cmp
mov
aad
out
ficomp
sahf
add
sbb
inc
shl
(bad)
mov
cmps
rcl
dec
adc
mov
fiadd
push
cmp
inc
mov
dec
(bad)
int3
dec
pop
loopne
push
cmp
(bad)
xor
repz
adc
push
pop
or
enter
enter
enter
enter
push
fs
leave
hlt
add
icebp
enter
jle
or
leave
adc
jno
inc
popf
in
fistp
leave
les
(bad)
in
test
enter
in
or
enter
pop
data16
lock
adc
aaa
jae
mov
xchg
inc
mov
imul
push
xchg
inc
mov
sub
movs
(bad)
adc
xor
outs
cmps
mov
jae
push
push
hlt
mov
xchg
inc
pop
cmp
add
cmps
inc
cmc
div
test
inc
pop
cmp
add
out
repnz
lock
lods
or
in
or
pop
cmc
call
addr16
fbstp
leave
les
popa
cmc
retf
enter
pop
fs
add
jl
jmp
(bad)
push
or
sbb
or
xlat
(bad)
clc
shl
inc
out
out
xor
shl
in
fs
lock
adc
shl
dec
xor
jle
cdq
hlt
lock
ret
sub
test
fist
cmp
sbb
jae
mov
jae
mov
xor
popf
inc
cdq
push
pop
cs
add
jae
mov
jae
mov
ds
jmp
popf
dec
push
lods
cmp
out
mov
jae
mov
jae
mov
ds
inc
mov
pushf
add
icebp
dec
dec
jae
mov
jae
mov
xor
imul
cmp
jmp
mov
dec
iret
push
push
repnz
sti
imul
clc
dec
xlat
push
iret
push
jle
outs
xchg
cmp
popf
dec
jo
pop
push
dec
(bad)
lock
fdivrp
outs
(bad)
inc
add
dec
mov
ss
lods
daa
icebp
shl
mov
mov
rcl
rol
mov
std
mov
fwait
lods
aad
aas
mov
inc
cmps
add
xchg
adc
ror
mov
inc
pop
ret
mov
cs
retf
pop
push
xchg
inc
push
sti
push
lds
sbb
push
sub
mov
jmp
dec
push
dec
sets
or
add
add
cld
dec
xchg
or
mov
push
or
in
scas
ficom
das
out
ret
movs
cmp
and
dec
pop
inc
adc
scas
cmp
push
std
dec
ror
inc
sar
lods
push
pop
out
xchg
movs
xor
push
repz
and
pop
push
loop
shr
popf
ret
pop
mov
pop
push
inc
pushf
push
jmp
push
dec
push
sbb
mov
call
or
add
pop
fst
push
das
dec
scas
xlat
mov
lods
and
mov
aaa
bound
or
push
mov
push
mov
push
xchg
aas
jmp
lods
call
jecxz
mov
push
xchg
aas
jmp
lods
mov
xor
sub
mov
dec
jg
jg
in
or
out
lods
add
and
sbb
arpl
in
mov
call
jg
jae
jg
jae
jg
jae
pop
mov
cmp
mov
sti
jae
sbb
push
repz
div
cli
mov
xor
mov
jle
jg
jae
das
mov
(bad)
jg
aas
mov
sti
jae
jg
jae
(bad)
push
jb
adc
sub
dec
out
push
or
fs
lock
ds
xor
mov
mov
xchg
pop
sub
into
cli
xchg
add
jae
out
jb
fisttp
pop
jg
ret
mov
sti
jae
jg
jae
out
jb
jg
jae
jg
jae
ds
ins
jg
aas
mov
sti
jae
jg
jae
ss
ds
jmp
jge
aas
(bad)
jg
jae
aas
inc
jo
or
mov
jmp
cmp
pop
jle
ret
add
jae
xor
aas
mov
sti
jae
jg
jae
ss
ds
mov
jmp
jle
ret
add
jae
loopne
ret
dec
stos
pop
jg
jae
jg
jae
jg
jae
loopne
ret
dec
mov
mov
sti
jae
jg
jae
cli
mov
ds
jle
ret
add
jae
sar
leave
push
int
sub
repnz
cmp
push
mov
push
mov
push
mov
call
xchg
sbb
sub
mov
xor
cmp
(bad)
sub
call
mov
aas
jmp
mov
ror
bound
xor
lods
fidiv
cdq
aas
call
lods
call
shl
stc
fucomi
jg
jae
jg
jae
sub
adc
jge
sub
jg
jae
jg
jae
aas
stos
jb
sbb
das
jg
mov
clc
add
aas
(bad)
jg
jae
fistp
out
xor
jae
pop
scas
jae
xor
sbb
jge
aas
(bad)
jg
jae
mov
jae
ss
pop
in
cmp
cmps
into
cli
xlat
add
jae
jg
jae
adc
jae
xor
jae
mov
jae
ss
pop
dec
pop
shl
stc
cmp
jg
jae
jg
jae
fbstp
jmp
mov
pop
jg
aas
mov
sti
jae
fbstp
out
mov
xor
jae
mov
jae
sbb
sti
das
mov
sti
jae
jg
jae
cmp
movs
(bad)
jg
jae
pop
scas
jno
jge
sbb
jg
jae
adc
and
jg
jae
push
mov
in
stos
aas
push
mov
clc
jg
jae
jg
jae
jg
jae
inc
mov
in
stos
aas
push
mov
clc
jg
jae
jg
jae
pop
scas
jae
xor
sbb
jge
aas
(bad)
jg
jae
pop
scas
jae
xor
sbb
jge
aas
(bad)
jg
jae
jg
jae
mov
jae
sbb
sti
btr
jae
jg
jno
add
xor
sti
jae
jg
jae
jo
adc
jge
inc
mov
fistp
in
jg
jg
jg
jae
jg
jae
sub
jno
pusha
stc
adc
cmp
in
fstp
jae
jg
jae
jg
jae
push
cdq
adc
jge
inc
sahf
jg
jae
fistp
in
jg
pop
mov
sti
jae
jg
jae
sbb
sti
dec
mov
sti
jae
jg
jno
add
xor
sti
jae
jg
jae
mov
adc
jge
inc
jle
sti
jae
jg
jae
xor
sbb
mov
jmp
mov
jl
stc
aas
(bad)
jg
jae
jg
jb
mov
scas
jns
adc
jl
dec
adc
sti
jae
jg
jae
jg
jae
xor
mov
cli
jb
cmp
sbb
sti
jae
jg
jae
pop
retf
jno
jg
jae
fistp
out
xor
jae
jg
jae
jmp
jae
cmps
test
sub
mov
mov
cmp
in
or
(bad)
popf
sahf
cmp
ret
aas
call
mov
fisubr
xchg
adc
inc
and
fidiv
sub
or
ret
mov
stos
jb
ss
ds
aas
(bad)
jg
jae
jg
jae
jb
xor
mov
push
mov
push
mov
push
xchg
aas
call
lods
call
jecxz
mov
push
xchg
aas
call
aas
(bad)
test
sub
xor
cmp
out
mov
add
and
sbb
arpl
shr
xchg
lock
push
adc
jge
sub
jg
jae
jg
jae
xlat
mov
das
(bad)
jg
jae
mov
sbb
cmp
mov
cs
mov
cmp
jle
ret
add
jae
lahf
and
inc
jg
call
sbb
mov
jmp
cmps
cmp
loop
mov
out
sbb
dec
adc
jmp
lods
mov
cmps
mov
shl
mov
enter
cmp
bnd
pop
jle
xlat
add
jae
jg
jae
das
mov
std
clc
jg
aas
mov
sti
jae
jg
jae
sahf
div
xor
cmp
push
mov
dec
xchg
sub
mov
xor
sub
and
int
xchg
call
mov
aas
jmp
mov
retf
int3
bound
xor
lods
fidiv
cdq
aas
inc
lods
call
shl
stc
fucomi
jg
jae
jg
jae
sbb
sti
jae
ffreep
jo
or
iret
sub
mov
(bad)
jg
jae
jg
jae
std
mov
hlt
sub
mov
xor
mov
mov
ret
aas
push
lods
sub
sbb
add
cmp
lods
scas
shl
cdq
movntq
lods
test
(bad)
std
aas
repz
call
(bad)
(bad)
push
sti
jae
jg
jae
lock
call
jg
jae
jg
jae
sahf
and
inc
jg
call
sbb
mov
jmp
cmps
cmp
loop
mov
out
sbb
dec
adc
jmp
lods
mov
xor
enter
cmp
cli
mov
cmp
add
jae
lock
call
jg
jae
jg
jae
(bad)
je
icebp
pop
adc
xor
jg
jae
xchg
xchg
into
cli
xchg
add
jae
jg
jae
es
jo
xor
sub
xor
cli
cmp
jno
out
lods
sub
push
cmp
adc
and
ds
jle
add
cmps
pop
push
mov
inc
jb
pop
pop
jae
mov
jae
mov
dec
mov
aaa
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
mov
std
mov
cmp
xchg
jmp
lea
mov
cmp
mov
aad
nop
mov
fld
and
dec
adc
mov
aaa
cmps
stos
mov
(bad)
mov
movs
ss
dec
jns
dec
retf
inc
jp
jne
adc
jmp
pop
ret
test
mov
inc
out
xchg
inc
adc
stos
mov
adc
loopne
jle
fwait
lods
popa
lods
and
adc
inc
pop
push
and
or
push
cdq
in
out
cmp
mov
cmp
xchg
icebp
lods
mov
mov
cmps
cmp
adc
inc
(bad)
jle
push
fisttp
dec
adc
fwait
test
mov
push
push
dec
xor
push
dec
push
sti
push
repz
into
neg
add
lods
jns
(bad)
cli
adc
push
adc
push
daa
lods
test
fld
or
dec
xchg
lahf
xchg
test
cmps
and
pop
push
call
rcl
push
jne
jbe
cmp
dec
or
popf
ret
pop
ret
pop
(bad)
repnz
(bad)
cmp
sar
xor
not
cmps
fdivr
ss
out
pop
dec
movs
das
jge
aaa
mov
out
aaa
mov
out
aaa
mov
out
aaa
mov
out
aaa
mov
loopne
jns
stos
push
add
test
das
jbe
add
fisttp
push
jns
test
jns
test
outs
fiadd
popa
cmp
icebp
push
xchg
mov
adc
mov
test
sub
xchg
dec
jecxz
add
mul
out
lahf
loop
ud2
mov
(bad)
push
jns
test
jns
test
(bad)
in
rcl
in
test
jns
test
ss
test
in
pop
mov
jns
out
jns
test
jns
test
ss
test
retf
loopne
sbb
je
sub
stos
push
jns
stos
push
sbb
test
jns
pop
push
jns
test
jns
test
inc
outs
ret
dec
fst
jns
test
jns
test
jns
test
or
out
jns
test
jns
test
or
out
jns
test
jns
test
shr
inc
ss
push
jns
test
push
out
test
shl
(bad)
ins
jecxz
es
ss
pop
retf
loopne
cmps
pusha
ja
inc
outs
aas
push
jns
test
jns
test
jns
test
pusha
or
inc
ss
cmp
cli
ss
test
retf
loopne
sbb
je
sub
cli
push
jns
stos
push
jns
test
popf
out
test
(bad)
mov
xor
push
jns
test
xchg
in
test
aaa
aas
in
ja
nop
adc
mov
test
popa
out
test
ss
push
jns
test
jns
test
jns
test
ja
xor
mov
test
shr
inc
and
jns
test
push
out
test
jge
ficomp
mov
(bad)
pop
aaa
xchg
ins
or
pop
aaa
mov
mov
and
pop
mov
out
jns
test
and
test
ss
das
pop
aaa
cmps
out
jns
test
jns
test
ss
test
retf
loopne
cmps
pusha
ja
inc
outs
aas
push
jns
test
jns
test
jns
test
pusha
or
inc
ss
cmp
push
jns
test
aaa
add
pop
mov
sbb
jns
push
jns
test
jns
test
retf
in
dec
sti
ins
je
pop
jnp
out
jns
test
cdq
in
test
xor
in
cdq
mov
sbb
mov
out
pop
push
sbb
jns
push
jns
test
sub
test
das
mov
ins
pop
mov
fisub
mov
dec
mov
lahf
(bad)
data16
mov
aas
ret
mov
sbb
fwait
inc
inc
push
adc
mov
lods
(bad)
cmp
mul
out
sar
mov
cmp
(bad)
out
mov
cmp
inc
outs
pop
cs
hlt
pop
scas
inc
xchg
sbb
cmp
loop
cli
mov
les
ja
pop
adc
fs
xchg
idiv
or
cmp
popf
pop
daa
cmps
shl
mov
dec
jns
push
ret
out
and
mov
repz
or
aas
mov
jmp
test
mov
adc
(bad)
iret
push
popa
dec
and
icebp
jmp
adc
push
shl
std
pop
fld
mov
loopne
dec
clc
(bad)
inc
push
mov
adc
aaa
(bad)
add
sbb
mov
mov
push
sbb
lds
adc
xchg
mov
(bad)
mov
mov
push
dec
fidivr
jge
adc
mov
enter
ret
pop
(bad)
adc
push
pop
data16
and
xor
push
sahf
cmps
out
in
pop
aad
in
fcom
scas
retf
mov
loopne
xchg
daa
push
push
xor
pop
push
into
or
pop
fstp
ret
les
pop
fcom
out
shr
arpl
ret
pop
add
adc
push
(bad)
mov
pop
aas
mov
xor
loopne
cmp
jne
cmp
xor
stc
popf
pop
cmp
popf
pop
cmp
popf
pop
cmp
popf
pop
cmp
popf
pop
cmp
popf
pop
cmp
popf
pop
cmp
popf
pop
ins
clc
popf
pop
sub
rcl
js
aad
add
aad
sbb
test
sub
lods
push
cmp
popf
pop
or
lods
push
je
leave
push
jo
mov
js
rcl
add
aad
sbb
test
sub
lods
push
and
lahf
pop
mov
lahf
pop
jbe
rcr
push
ror
jbe
rcr
mov
pop
fdivrp
rcr
mov
pop
jbe
rcr
mov
pop
out
pop
shl
cmp
lds
jbe
rcr
mov
pop
inc
pushf
rcr
cli
fimul
loope
xchg
or
ss
sbb
jbe
rcr
mov
pop
xor
mov
nop
icebp
pop
push
mov
popf
mov
clc
popf
pop
cmp
pop
outs
lds
jbe
rcr
ja
pop
and
lods
inc
jbe
rcr
mov
pop
jbe
rcr
stc
cmp
jmp
add
enter
lahf
pop
jbe
rcr
stc
popf
push
or
test
and
fld
adc
inc
pcmpeqd
rcr
loope
mov
imul
jbe
rcr
iret
rcr
loope
shr
jnp
xor
mov
call
jbe
rcr
cli
shl
jbe
rcr
sbb
pop
ins
push
cwde
ret
out
leave
pushf
jmp
pop
into
(bad)
pop
sbb
rcr
mov
pop
js
cmp
jmp
add
enter
lahf
pop
jbe
rcr
mov
pop
cmp
popf
pop
and
lods
inc
cwde
test
add
xchg
loop
enter
lahf
pop
jbe
rcr
iret
rcr
loope
jmp
imul
jbe
rcr
mov
pop
jbe
rcr
loope
sbb
jnp
xor
mov
call
jbe
rcr
stc
mov
pop
jbe
rcr
mov
pop
aas
sub
cli
mov
push
repnz
mov
mov
pop
jbe
rcr
mov
pop
call
adc
cmp
enter
lahf
pop
jbe
rcr
stc
gs
nop
lock
inc
je
xchg
jbe
rcr
mov
pop
push
out
rcr
push
cs
mov
pop
jbe
rcr
jb
call
jbe
rcr
mov
pop
cli
rsm
add
(bad)
call
outs
jne
call
jbe
rcr
mov
pop
(bad)
shl
cmp
rcr
mov
pop
jbe
rcr
push
dec
inc
into
imul
mov
call
jbe
rcr
xor
popf
mov
out
lahf
pop
mov
fucomip
mov
enter
lahf
pop
jbe
rcr
cli
rcr
neg
dec
stos
imul
lahf
pop
jbe
rcr
arpl
pop
cmp
xchg
mov
fdivrp
xchg
adc
sub
xor
push
jbe
rcr
aad
adc
jbe
arpl
mov
pop
sbb
rcr
bound
rcr
arpl
pop
je
mov
pop
ss
rcr
hlt
xchg
paddsb
xchg
je
mov
jbe
rcr
add
pop
imul
lahf
jmp
mov
pcmpeqd
rcr
add
dec
daa
outs
xor
inc
pcmpeqd
shl
mov
addr16
rcr
mov
pop
cmp
rcr
stos
(bad)
shl
call
div
mov
jbe
rcr
mov
xor
rcr
mov
pop
jbe
rcr
cld
pushf
sbb
sub
jmp
pop
jbe
rcr
ins
test
mov
pop
jbe
rcr
sbb
jbe
rcr
ins
test
mov
pop
jbe
rcr
clc
rcr
add
dec
daa
outs
xor
inc
pcmpeqd
rcr
push
pushf
mov
out
leave
pushf
jmp
push
int3
btc
pop
jbe
rcr
mov
pop
xchg
mov
test
push
loope
enter
lahf
pop
jbe
rcr
mov
pop
sub
sar
lds
push
into
jbe
rcr
mov
pop
xchg
in
pop
or
test
and
push
int
mov
pop
call
mov
(bad)
nop
clc
xor
push
nop
clc
xor
push
and
lods
inc
xor
popa
inc
je
xchg
jbe
rcr
mov
pop
cmp
jge
jbe
lahf
pop
jbe
rcr
mov
pop
daa
out
rcr
and
xchg
pop
inc
sti
or
clc
ins
pop
adc
pop
add
in
test
and
fstp
push
ds
mov
cwde
cwde
add
stos
leave
mov
idiv
(bad)
push
mov
add
dec
movs
test
mov
xor
ret
mov
xor
dec
sahf
movs
push
jle
push
jmp
(bad)
stos
push
iret
idiv
cmps
(bad)
push
aaa
ins
push
dec
mov
sbb
cmp
ret
inc
cmp
mov
pop
leave
jecxz
mov
pop
push
mov
pop
xor
inc
sbb
push
cmp
rcl
sub
cld
mov
lahf
lahf
cld
dec
xchg
xor
cs
repz
cmp
movs
push
(bad)
retf
or
cs
jae
pop
sbb
cmp
xlat
adc
lods
add
sbb
int3
aad
cmp
push
inc
mov
leave
std
cmps
push
(bad)
shl
mov
rcl
or
adc
mov
inc
mov
pop
rcl
jmp
leave
jecxz
mov
inc
adc
and
scas
std
(bad)
mov
dec
in
cdq
jns
mov
adc
mov
cdq
sbb
mov
movs
add
inc
fmul
pop
dec
jle
adc
outs
cmp
mov
out
push
(bad)
xchg
dec
xchg
adc
fst
adc
sub
fwait
rol
fwait
stos
or
retf
mov
imul
mov
addr16
mov
(bad)
not
sbb
adc
clc
jo
ds
jo
push
xor
jl
pop
pop
push
clc
jo
push
clc
jo
push
clc
jo
sbb
xor
pop
popa
addps
pop
push
clc
jo
sbb
add
adc
sub
ja
mov
cmp
sub
scas
aas
sub
dec
and
aas
push
sbb
push
adc
neg
push
sbb
fistp
clc
jo
push
clc
jo
or
popf
push
sbb
lahf
mov
jae
sub
scas
aas
push
sbb
pop
push
lods
aas
pop
push
clc
jo
ja
jo
push
cwde
call
pop
push
clc
jo
adc
scas
xor
arpl
out
mov
jmp
cmp
jmp
push
sbb
fistp
clc
jo
push
clc
jo
jo
jmp
push
sbb
pop
push
clc
jo
or
jbe
mov
push
(bad)
ror
mov
push
sbb
pop
cmp
ror
scas
aas
push
sbb
(bad)
dec
mov
push
scas
aas
ret
pop
xor
mov
movs
cmp
nop
mov
cmp
dec
xchg
inc
mov
adc
sahf
ror
mov
addr16
cld
dec
cmp
pop
inc
(bad)
leave
or
or
mov
lock
sti
test
dec
call
mov
fld
or
ficomp
call
dec
lock
xchg
icebp
pop
dec
ret
pop
dec
push
add
jge
stos
mov
mov
dec
aad
in
(bad)
adc
popa
xlat
push
cmps
inc
cmp
(bad)
mov
xor
push
mov
mov
dec
xor
push
mov
push
mov
int3
cs
repz
xor
loop
dec
pop
inc
rol
adc
movs
xor
xchg
movs
into
push
cmp
inc
fstp
push
push
ret
pop
rol
add
pop
mov
clc
push
pop
(bad)
pop
xor
cmp
adc
mov
call
and
xchg
int
pop
xlat
mov
fistp
xor
add
adc
test
lea
mov
push
inc
(bad)
jmp
mov
ror
movs
and
mov
sbb
cmps
(bad)
push
aam
jns
mov
pop
outs
cmps
mov
or
retf
add
xor
or
int
(bad)
adc
mov
idiv
(bad)
movs
rcl
loope
dec
bound
mov
xor
mov
mov
loop
imul
and
cmp
push
sbb
(bad)
mov
cs
repz
push
inc
(bad)
jmp
cs
shl
push
dec
fcmovu
fmul
adc
mov
shr
mov
fld
or
adc
(bad)
shl
(bad)
in
dec
cli
cmps
movs
jle
push
repz
xor
push
sbb
test
repnz
(bad)
pop
int
repnz
add
mov
(bad)
fcom
shl
pop
dec
and
dec
pop
jns
inc
out
(bad)
mov
dec
add
das
sbb
and
and
dec
mov
pop
adc
add
and
add
ret
inc
inc
and
pop
enter
call
dec
fcmove
mov
mov
xor
mov
push
sub
(bad)
dec
add
outs
cmp
mov
cmps
or
int3
dec
xlat
mov
pop
inc
and
sub
or
sub
outs
mov
sub
(bad)
sbb
or
std
cmc
jns
dec
iret
jg
sbb
jge
inc
in
jg
cmp
inc
add
call
mov
pop
adc
neg
shl
jae
mov
ds
out
icebp
neg
mov
lock
jae
mov
jae
mov
icebp
neg
loop
mov
(bad)
in
jae
mov
jae
mov
repnz
jg
mov
(bad)
es
stos
mov
call
out
jae
mov
jae
mov
push
mov
in
lock
mov
push
xchg
xor
ins
xlat
adc
cmc
cs
repnz
test
loopne
lahf
or
out
jae
mov
jae
mov
jb
xor
sub
mov
jae
mov
jle
stc
sub
mov
jno
jmp
jae
mov
xor
xor
idiv
int3
icebp
shl
jae
mov
jae
mov
jae
mov
ss
jmp
jae
imul
jae
mov
or
sub
push
mov
stc
push
and
scas
ja
cmp
fcom
aad
sti
mov
les
repz
lds
cmps
ret
adc
inc
mov
(bad)
mov
push
push
adc
cmp
sbb
xchg
mov
mov
pop
xor
cdq
jge
push
add
inc
push
dec
sbb
out
mov
repz
cs
pop
cmp
dec
and
in
fidiv
mov
inc
int3
add
sbb
cmp
mov
pop
add
imul
outs
add
dec
xchg
ins
iret
push
dec
sbb
sbb
fstp
or
sub
inc
loop
jbe
cmp
out
adc
ficomp
cmp
dec
push
dec
les
push
sar
jle
inc
cmp
mov
xor
push
adc
jo
or
mov
daa
jmp
aas
adc
push
cmp
sub
jecxz
mov
push
aad
in
loopne
es
inc
dec
pop
and
out
dec
(bad)
pop
inc
cmp
mov
push
stos
cs
pop
and
arpl
cmp
mov
loop
leave
push
adc
xlat
data16
cmp
inc
or
sbb
push
sbb
outs
cmp
sub
add
pop
movs
xor
xor
xor
xchg
xor
push
mov
leave
dec
xor
leave
inc
mov
xor
dec
movs
xor
outs
cmp
inc
movs
add
(bad)
in
xor
dec
xor
add
xor
add
xchg
xor
das
movs
movs
or
xor
or
ins
add
imul
mov
cld
cmp
and
aaa
loopne
mov
inc
mov
xor
movs
sub
aaa
xor
xchg
jnp
jns
dec
movs
sub
jnp
loope
imul
dec
movs
sub
dec
movs
xor
add
xor
xor
loope
movs
sub
ja
add
inc
mov
sub
(bad)
jns
pop
xchg
movs
loope
retf
movs
stc
mov
aaa
movs
xor
imul
aad
add
mov
xchg
mov
sti
xor
and
sub
aas
push
xchg
xchg
pop
sub
inc
lods
mov
imul
dec
aaa
mov
movs
add
movs
cdq
outs
mov
lds
clc
std
mov
inc
mov
mov
jae
cmp
movs
loope
sub
std
mov
outs
fs
xchg
imul
dec
aaa
mov
movs
add
cmp
inc
lods
loope
jnp
xchg
mov
and
das
clc
movs
dec
arpl
xchg
mov
das
movs
movs
add
xchg
xchg
mov
std
int3
xor
(bad)
aad
movs
stc
mov
aaa
cld
sub
imul
mov
or
leave
das
xor
out
xchg
loope
jae
stc
xchg
sbb
aaa
movs
xor
imul
aad
mov
loope
mov
xor
sbb
ja
stc
mov
imul
dec
dec
movs
sub
sub
xchg
(bad)
sti
xor
pop
clc
mov
dec
movs
lea
jnp
stc
mov
imul
imul
mov
cmp
stc
xchg
aaa
mov
xchg
loop
ins
add
imul
mov
or
mov
xchg
xor
aaa
mov
inc
xor
mov
sbb
add
xchg
dec
movs
mov
inc
mov
in
imul
mov
xor
mov
loopne
sbb
add
xchg
dec
movs
mov
inc
lods
loope
jnp
xchg
mov
and
das
clc
movs
dec
arpl
xchg
mov
(bad)
movs
mov
mov
aam
mov
repnz
out
icebp
loope
xor
xchg
imul
das
movs
mov
pop
stos
cld
movs
aad
movs
movs
int
xor
iret
mov
test
inc
add
pop
loopne
in
movs
popa
movs
(bad)
cmp
stc
xchg
pop
clc
movs
push
outs
xor
aaa
movs
popa
movs
jmp
xchg
dec
xchg
movs
int
movs
mov
(bad)
cmp
stc
xchg
sub
movs
xor
xor
aaa
jl
mov
ja
movs
cmp
xor
imul
pop
mov
sbb
mov
xchg
jnp
lea
into
mov
sub
and
mov
jl
xchg
das
movs
aad
pop
test
add
xchg
mov
xor
push
cmp
mov
(bad)
shr
xor
aaa
clc
cmp
mov
aaa
aam
mov
inc
test
or
test
mov
movs
mov
loop
mov
or
test
out
movs
xor
xchg
dec
movs
sub
dec
movs
std
shl
movs
popa
movs
(bad)
jge
xchg
aas
movs
in
scas
nop
mov
aaa
movs
xor
imul
mov
xor
adc
sub
movs
aad
clc
std
aad
xor
mov
pop
clc
mov
dec
movs
lea
jnp
stc
mov
das
cmp
xchg
aaa
movs
in
scas
nop
mov
jnp
stc
xchg
dec
icebp
xchg
jae
stc
mov
dec
xchg
movs
int
movs
mov
xor
movs
leave
das
cmp
xchg
aaa
movs
in
mov
cld
lea
inc
mov
movs
leave
inc
jl
push
xor
mov
mov
lock
aad
mov
mov
loopne
cmp
xor
int
or
sti
mov
mov
xchg
inc
clc
xchg
mov
repz
aad
or
das
xchg
movs
mov
ins
lea
loop
mov
adc
inc
mov
adc
aam
int
mov
sbb
adc
mov
pop
mov
mov
jae
mov
add
xor
aaa
cld
cmp
int
xchg
jns
imul
aad
cld
cmp
adc
movs
xor
imul
mov
adc
mov
mov
outs
mov
add
arpl
add
imul
jmp
lods
xchg
aas
mov
leave
pop
add
mov
mov
leave
sti
xor
outs
mov
mov
dec
icebp
xchg
aas
mov
lea
repz
ja
xchg
lds
mov
inc
mov
ins
mov
mov
xor
fld
mov
imul
xor
std
and
clc
loope
aaa
mov
mov
loop
in
add
jnp
mov
dec
jmp
movs
aad
mov
dec
(bad)
cmp
xchg
pop
mov
sub
movs
mov
sti
xor
aad
in
and
pop
loopne
xchg
out
ins
add
jmp
mov
popf
inc
in
mov
mov
in
aad
movs
xchg
aad
lods
std
leave
jmp
inc
jmp
movs
aad
test
aad
clc
add
mov
cmp
xchg
aas
mov
lea
dec
mov
or
cmp
ja
xchg
lds
mov
das
cmp
xchg
xor
add
pop
mov
pop
and
mov
imul
xor
std
sub
loope
inc
mov
(bad)
fldcw
mov
das
movs
xchg
leave
dec
mov
or
xor
leave
pop
mov
xor
jae
stc
xor
loopne
mov
sti
xor
das
xor
mov
std
leave
das
movs
xchg
xor
mov
mov
aad
mov
lea
dec
and
mov
in
xchg
jmp
loope
jb
ins
add
imul
mov
xor
repz
xchg
jnp
test
dec
movs
xchg
lea
test
mov
jnp
stc
xchg
inc
test
sub
cmp
xchg
push
movs
or
aad
adc
aad
cld
cmp
imul
loop
loope
ja
loope
das
xor
mov
movs
xor
imul
mov
cmp
scas
movs
xchg
add
jmp
add
or
in
xor
aad
mov
int
mov
xchg
fisttp
mov
aad
cmp
inc
sbb
scas
movs
movs
aad
mov
aad
xor
int
adc
xchg
imul
pop
loopne
or
xor
mov
mov
xor
jnp
loope
imul
clc
movs
mov
and
leave
das
mov
add
pop
loopne
int
cld
aad
pop
lock
mov
arpl
xchg
inc
sbb
xchg
jmp
movs
loope
movs
xor
dec
dec
in
sbb
lods
xor
cmp
sub
xor
imul
leave
dec
movs
or
xor
cmp
inc
jl
xchg
jnp
cmp
cdq
repnz
ins
add
aaa
call
xchg
mov
movs
xor
imul
dec
jae
jmp
add
daa
xchg
movs
int
xor
imul
dec
jae
jmp
cmp
loopne
xor
cmp
mov
loope
aas
mov
leave
pop
movs
loope
(bad)
jge
pop
mov
movs
aad
mov
movs
dec
xor
loopne
arpl
aad
call
xchg
mov
loope
outs
xor
dec
mov
sub
mov
pop
mov
xor
scas
mov
xchg
ja
movs
mov
xchg
stc
leave
out
icebp
add
mov
jl
int
xchg
movs
int
loopne
xchg
sub
mov
inc
lods
xor
cld
lea
inc
call
movs
int
mov
aad
xchg
mov
push
in
mov
inc
loopne
shr
jge
inc
mov
or
loopne
xchg
aaa
xchg
jge
mov
mov
sti
xor
mov
cld
lea
inc
lods
xchg
xor
jnp
add
inc
jo
xchg
pop
mov
aad
outs
mov
xor
mov
jb
std
add
push
movs
lea
inc
cld
loope
sbb
mov
inc
mov
add
pop
mov
add
push
movs
lea
(bad)
std
mov
xor
in
(bad)
mov
cmp
mov
jge
das
in
int
movs
icebp
add
inc
and
pop
mov
mov
mov
aad
mov
movs
lds
lock
xchg
aaa
mov
mov
cld
lods
xchg
push
mov
mov
mov
xor
imul
mov
int
adc
mov
mov
and
jo
sub
mov
and
or
outs
mov
add
int
or
fisttp
test
aad
mov
mov
add
cmp
out
movs
int
or
aad
sub
sub
add
xchg
ja
movs
mov
or
leave
iret
mov
sub
add
xchg
ja
movs
mov
mov
and
add
xchg
inc
clc
movs
mov
pusha
aad
inc
lods
jge
addr16
popf
xor
mov
imul
mov
jl
aad
xchg
movs
leave
xor
add
xor
(bad)
xor
add
jg
dec
lock
sti
xlat
and
(bad)
xor
iret
out
(bad)
jge
add
jg
dec
and
jl
mov
sub
mov
jle
sub
dec
mov
jle
mov
jle
int3
xor
jg
add
jg
dec
sub
dec
mov
jle
mov
jle
push
xchg
jg
(bad)
xor
dec
mov
jle
in
xor
dec
mov
jle
mov
jg
(bad)
xor
jg
dec
mov
jle
lock
jl
out
(bad)
iret
cs
sub
xor
cmp
xor
jle
and
sar
mov
jl
and
movs
jno
int3
sti
call
out
xor
or
sub
adc
mov
test
mov
idiv
add
das
ret
aas
sti
add
leave
mov
mov
repz
pop
cmps
aas
push
mov
push
push
or
ret
inc
xchg
xor
mov
adc
bswap
pop
cli
cmc
and
mov
repz
mov
test
pop
push
(bad)
lods
adc
jne
test
rcl
adc
frstor
mov
mov
push
mov
std
mov
xchg
popa
aas
jg
dec
lock
stos
mov
rdtsc
sbb
mov
mov
or
iret
mov
dec
ret
pop
ds
add
jmp
loope
mov
pop
adc
xor
push
push
(bad)
pop
dec
pop
xchg
push
(bad)
push
jnp
mov
cld
mov
xchg
cmp
mov
(bad)
(bad)
retf
inc
ds
cld
dec
xchg
add
stos
retf
cmp
pop
in
and
xchg
adc
clc
push
aad
add
pop
xor
push
into
xor
cmp
mov
push
js
mov
paddd
pop
inc
cld
(bad)
inc
mov
pop
xchg
fwait
clc
mov
stos
stc
push
xor
inc
icebp
ret
dec
xchg
adc
push
in
adc
xchg
into
add
adc
and
adc
push
lods
adc
xchg
into
add
adc
hlt
xchg
adc
push
ins
adc
xchg
into
add
adc
int3
xchg
adc
push
sub
add
adc
nop
xchg
adc
push
in
adc
inc
in
adc
ins
xchg
adc
push
lods
adc
inc
fld
adc
inc
xchg
adc
push
ins
adc
inc
ffree
adc
or
adc
inc
rol
adc
fcom
adc
imul
inc
cld
mov
inc
cld
and
sbb
paddd
push
sbb
cmp
push
sbb
clc
shl
(bad)
mov
push
adc
repnz
clc
mov
stos
ret
pop
xor
or
pop
std
popf
cmp
mov
(bad)
movs
sar
ss
test
imul
into
pop
push
aad
pop
pop
mov
int
or
in
sbb
sbb
int3
xor
aad
in
loope
pop
std
fistp
aad
out
retf
ds
pop
and
mov
push
rcr
arpl
rcr
pop
mov
adc
lods
cmp
mov
adc
push
out
or
xor
push
pop
fld
or
and
push
or
and
mov
add
adc
dec
mov
(bad)
mov
jg
add
fisub
(bad)
mov
xchg
cmp
mov
ja
pop
shr
es
cmp
mov
scas
adc
mov
and
lds
mov
adc
mov
int3
adc
fidiv
pop
add
jae
dec
cli
cmps
jge
add
adc
jp
inc
cmp
sub
cmps
ret
push
cmps
fsubp
pop
push
xor
retf
adc
inc
jns
jno
mov
stc
test
not
push
jl
xchg
dec
ss
in
(bad)
xor
mul
pop
pusha
ss
in
ss
in
xor
lea
ss
in
push
mov
in
ss
in
ss
in
das
sti
jmp
jns
sar
stc
in
push
jmp
xchg
jns
jno
ss
in
ss
in
ss
in
ss
movs
hlt
ss
in
dec
pop
out
jns
jno
mov
scas
stos
mov
mov
out
jnp
pop
sub
cmps
jnp
je
lods
mov
mov
jp
dec
or
bound
aaa
test
mov
ret
pop
cmp
scas
and
mov
shl
mov
stc
outs
shl
push
jge
mov
aaa
xor
(bad)
movs
aas
push
aaa
ret
stos
pop
stos
xchg
cmp
pop
cmp
push
std
dec
rol
push
int3
push
pop
mov
push
ficom
cmp
lock
push
mov
sub
sahf
ret
inc
out
cmp
mov
cmp
adc
pop
sti
xchg
and
mov
fs
pop
sub
das
add
jno
loopne
sbb
pop
cmp
cmps
add
mov
or
jae
adc
(bad)
mov
adc
sar
(bad)
adc
cmc
rol
in
push
sbb
xchg
mov
cs
lock
cmp
dec
xor
not
mov
or
not
jg
mov
outs
aad
in
aam
inc
xchg
fwait
lods
std
lods
xchg
mov
push
push
pop
jl
or
shl
mov
and
imul
pop
leave
bndldx
mov
jo
jle
inc
xchg
(bad)
xchg
pop
adc
dec
pop
pop
dec
cmp
sub
adc
aas
rsm
jle
jge
stc
(bad)
fsub
call
jl
imul
outs
movs
dec
test
call
adc
cmp
cmps
dec
cmps
fist
dec
retw
stos
sub
sar
lods
addr16
xor
jmp
push
xor
jmp
shl
retf
inc
xor
jmp
addr16
xor
jmp
shl
out
push
add
(bad)
mov
ret
pop
or
mov
ret
test
and
mov
std
cmp
mov
jno
mov
shl
mov
adc
mul
iret
popf
cmc
push
jb
adc
push
pop
mul
dec
in
mov
adc
cmps
(bad)
push
(bad)
adc
fisubr
sahf
dec
cli
cmp
pop
jmp
sub
mov
xchg
or
aas
ret
inc
inc
cld
add
sbb
movs
cmp
mov
mov
cs
pop
fld
or
adc
xchg
dec
mov
dec
cmp
push
pop
mov
xchg
fmul
cmc
das
push
cmp
(bad)
sbb
mov
pop
shl
cmp
xchg
loope
scas
aas
mov
cld
dec
shr
fstp
sbb
xor
retf
push
add
push
xchg
mov
aas
push
outs
mov
push
pop
mov
inc
pop
repnz
add
lods
jbe
pop
imul
and
sbb
mov
sbb
ret
pop
cmp
inc
cmps
push
test
loopne
mov
rol
pop
fiadd
dec
xchg
adc
rol
fstp
or
les
ds
leave
pop
cmps
ficom
dec
pop
pop
out
mov
ds
outs
cmp
js
ret
and
outs
(bad)
arpl
jno
outs
out
sbb
ja
stos
ja
sub
pop
sub
sbb
xchg
movs
das
dec
in
int
stos
ja
sub
and
stos
ja
sub
out
sub
jne
jle
ja
sub
add
in
(bad)
jle
add
shl
and
xchg
icebp
or
in
les
(bad)
int3
popf
xor
call
cld
add
push
icebp
mov
cmp
push
mov
cmp
mov
mov
cmp
inc
mov
movs
cmps
sub
jecxz
cld
lods
cmp
cmps
cld
sbb
cmp
cli
cld
mov
cmp
mov
std
mov
rcl
ja
and
pop
push
and
bound
in
push
and
pop
push
and
pop
push
and
jle
and
and
out
push
and
int
and
imul
fs
push
and
shr
adc
and
leave
scas
and
push
and
scas
push
and
lock
and
push
dec
and
dec
and
xor
and
imul
jl
dec
and
push
push
and
jge
and
and
aad
and
je
and
push
and
mov
sbb
push
and
xor
xchg
pop
dec
and
push
and
mov
pusha
jg
and
dec
and
imul
hlt
je
and
or
and
push
and
push
and
sub
and
mov
push
sbb
ins
jmp
push
and
jne
and
push
and
push
and
enter
not
nop
push
and
push
and
ins
push
and
pop
push
and
jp
and
push
and
and
and
mov
pop
cs
inc
das
mov
inc
sub
inc
sub
inc
sub
ret
cmp
sub
sub
sub
push
inc
sub
jne
sub
call
inc
sub
fld
test
inc
sub
sub
scas
sub
sub
or
dec
mov
inc
sub
mov
sub
jo
sub
inc
sub
inc
sub
scas
sub
push
inc
and
sub
mov
cld
pop
inc
sub
inc
sub
push
inc
sub
dec
inc
sub
jmp
pop
add
movs
daa
push
inc
bound
pop
jnp
ins
inc
jnp
test
and
pusha
mov
jnp
test
js
lock
cld
mov
sub
jns
rol
jns
push
jbe
and
adc
js
mov
and
sbb
fcomp
sbb
mov
daa
sbb
aam
adc
jo
sbb
dec
adc
sub
stc
pop
sub
adc
sub
out
sub
cwde
sbb
xor
sbb
sub
sub
inc
sbb
sub
xchg
sbb
mov
pop
adc
or
sub
push
sub
cvtpi2ps
push
sub
or
(bad)
(bad)
mov
inc
in
and
and
mov
mov
mov
movs
fwait
mov
test
mov
aam
mov
rcl
and
mov
cwde
mov
and
lahf
mov
js
mov
mov
in
and
and
push
cs
fs
xor
call
mov
bound
xor
bound
jl
arpl
sub
mov
std
mov
cmp
mov
(bad)
cmc
cs
or
sub
adc
mov
test
jecxz
pop
cmp
jp
aaa
sbb
cmp
inc
lds
sub
ja
dec
adc
rcl
das
sbb
leave
cli
imul
adc
add
pop
jmp
push
call
push
pcmpgtd
push
mov
cmp
and
outs
mov
(bad)
xor
fwait
mov
aas
mov
std
lods
add
std
mov
bound
add
je
pop
rcr
push
add
mov
std
dec
xchg
mov
repnz
(bad)
mov
fcmovnu
test
or
mov
push
pop
pop
scas
dec
loop
aam
push
jp
mov
call
cmp
xor
out
out
sub
dec
xchg
jmp
add
pop
pop
dec
int
pop
or
cld
dec
ret
pop
bound
sar
mov
or
ret
pop
lahf
cmp
xchg
ds
push
cmc
push
adc
into
inc
and
xchg
mov
pop
outs
jno
xchg
sbb
pop
add
pop
rcr
out
fstp
outs
xchg
ret
pop
cmp
retf
mov
jle
inc
push
pop
push
or
dec
repnz
in
rol
repz
add
int
cmps
inc
adc
adc
ret
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
xchg
outs
mov
popf
outs
xchg
outs
gs
xchg
imul
outs
ins
xchg
jnp
ret
lahf
outs
ins
xchg
cmp
lahf
outs
ins
xchg
pop
neg
adc
add
addr16
(bad)
or
sub
arpl
aas
lahf
outs
ins
xchg
shl
xchg
movs
(bad)
push
stos
gs
lahf
outs
ins
xchg
(bad)
outs
lahf
outs
ins
xchg
fwait
gs
outs
ins
xchg
jle
fwait
sahf
outs
popa
xchg
je
xchg
jo
xchg
outs
gs
lahf
outs
xchg
jo
xchg
outs
gs
lahf
outs
xchg
dec
pop
xchg
and
xchg
add
icebp
pop
ins
mov
dec
(bad)
mov
or
icebp
(bad)
cmc
or
(bad)
data16
or
(bad)
mov
jmp
outs
dec
pop
xchg
pusha
ja
jg
gs
or
(bad)
test
jmp
outs
dec
pop
xchg
inc
pop
xchg
push
gs
pop
outs
gs
or
lahf
jmpw
dec
adc
sub
dec
dec
pop
xchg
nop
jbe
mov
pusha
ja
(bad)
outs
gs
or
mov
dec
adc
fwait
outs
gs
lahf
and
lods
movs
fwait
imul
arpl
mov
xchg
imul
fwait
jg
lahf
mov
jnp
mov
call
ja
pop
test
lahf
inc
test
outs
jno
sub
pop
inc
pop
xchg
mov
inc
pushf
jg
cmps
xchg
ins
gs
fcomip
cmps
sub
outs
inc
pop
xchg
inc
or
pop
neg
pushf
pop
neg
pushf
pop
neg
pushf
pop
not
lahf
jg
pop
icebp
arpl
and
outs
push
gs
xchg
outs
gs
xchg
inc
or
pop
neg
lahf
jg
mov
imul
imul
sub
jg
xchg
ins
gs
pushf
jg
xchg
ins
gs
jg
xchg
ins
gs
jg
xchg
ins
xchg
ins
xchg
arpl
sub
arpl
mov
arpl
and
jg
push
xchg
inc
push
xchg
arpl
mov
pop
mul
pushf
jg
sub
jg
push
xchg
pusha
push
xchg
inc
inc
ja
pop
neg
pushf
pop
neg
pushf
pop
mul
pushf
jg
pop
sub
outs
inc
push
xchg
inc
inc
addr16
pop
neg
pushf
pop
neg
pushf
jg
cmps
xchg
ins
gs
pushf
jg
xchg
sub
dec
inc
push
xchg
inc
inc
addr16
pop
test
fwait
movs
popa
sbb
gs
popf
ja
xchg
or
lahf
jmp
mov
xchg
dec
imul
lahf
call
mov
jae
xchg
jae
xchg
jnp
fwait
mov
gs
pushf
pop
test
lahf
jmp
test
ins
inc
ja
pop
test
lahf
inc
test
ins
jns
lahf
push
test
outs
jno
xchg
outs
mov
fwait
mov
ja
jg
fwait
mov
gs
pop
test
lahf
inc
xchg
imul
ins
sbb
dec
test
outs
gs
mov
test
outs
gs
mov
test
outs
gs
mov
test
outs
mov
lahf
jmp
pop
outs
jno
xchg
outs
gs
dec
xchg
arpl
xchg
inc
das
(bad)
mov
push
stos
aad
ins
int
addr16
in
arpl
mov
aas
neg
pushf
aas
test
int
jns
lahf
call
test
ins
test
aas
neg
pushf
aas
test
lahf
call
test
ins
jns
lahf
call
test
ins
in
pushf
aas
test
lahf
inc
test
ins
jns
lahf
jmp
test
ins
jne
pushf
aas
test
lahf
inc
mov
sbb
xchg
push
jno
imul
xchg
or
outs
popa
xchg
popf
ja
xchg
pusha
ja
(bad)
outs
gs
jae
xchg
addr16
adc
sub
dec
dec
aaa
xchg
(bad)
outs
stos
int
jns
lahf
jmp
xchg
or
scas
xor
imul
lahf
call
xlat
or
(bad)
data16
jae
xchg
jae
xchg
jae
xchg
jnp
mov
mov
or
xchg
stos
int
jns
lahf
call
xlat
or
(bad)
xchg
sbb
popa
xchg
arpl
sub
out
bound
scas
xchg
inc
jns
lahf
mov
gs
or
(bad)
xchg
inc
jns
lahf
lahf
xchg
jae
xchg
jnp
mov
outs
mov
jne
mov
pop
ins
pop
xchg
addr16
mov
jne
mov
lahf
inc
test
ins
imul
lahf
lahf
xchg
or
lahf
stos
dec
lea
lahf
inc
test
outs
ins
push
or
lahf
push
or
(bad)
push
or
lahf
xchg
or
lahf
stos
dec
in
jns
lahf
call
push
or
(bad)
push
or
mov
cdq
xchg
dec
imul
lahf
push
push
or
(bad)
data16
cmp
test
jge
mov
jnp
inc
xor
imul
push
jno
xchg
ins
gs
jg
xchg
sub
outs
inc
mov
xchg
outs
gs
xchg
inc
mov
fwait
mov
mov
xchg
jae
xchg
addr16
xchg
pusha
xlat
xchg
jae
xchg
addr16
adc
sub
outs
dec
mov
sub
dec
inc
mov
sub
pop
pusha
mov
mov
xchg
ins
imul
jae
xchg
jae
xchg
addr16
adc
xchg
add
imul
ins
xchg
je
xchg
jo
xchg
outs
gs
lahf
outs
xchg
jo
xchg
outs
gs
lahf
outs
xchg
dec
xchg
xchg
xchg
cmps
pop
mov
imul
lods
arpl
xchg
addr16
(bad)
mov
fwait
mov
(bad)
jne
jae
xchg
jae
xchg
arpl
and
outs
dec
xchg
xchg
pusha
ja
jg
gs
jae
xchg
jae
xchg
addr16
adc
sub
jg
xchg
xchg
push
gs
pop
outs
gs
jae
xchg
addr16
adc
sub
dec
dec
xchg
xchg
nop
jbe
mov
pusha
ja
(bad)
outs
gs
jae
xchg
addr16
adc
fwait
outs
gs
lahf
xor
lods
movs
fwait
imul
jae
mov
lahf
outs
gs
neg
lahf
jnp
mov
call
ja
lahf
test
lahf
inc
test
outs
jno
sub
pop
inc
xchg
xchg
mov
inc
pushf
jg
cmps
xchg
ins
gs
fcomip
cmps
sub
outs
inc
xchg
xchg
inc
fwait
addr16
lahf
neg
pushf
lahf
neg
pushf
lahf
neg
pushf
lahf
not
lahf
jg
pop
popa
arpl
and
outs
push
gs
xchg
outs
gs
xchg
inc
fwait
addr16
lahf
neg
lahf
jg
mov
ds
daa
(bad)
inc
ds
je
aaa
push
test
lahf
cmps
cdq
dec
add
xchg
xor
push
(bad)
test
out
(bad)
xchg
(bad)
dec
stc
push
add
mov
mov
das
fwait
add
sbb
ss
mov
iret
adc
jp
mov
xchg
xlat
je
ror
into
jl
xchg
jge
xchg
test
leave
shl
sub
and
mov
ja
lahf
sahf
js
leave
shl
sub
shl
sub
shr
leave
inc
and
xchg
das
gs
sahf
aas
mov
xchg
xor
shl
leave
shl
sub
arpl
enter
sahf
mov
sub
shl
sub
je
mov
mov
lahf
sahf
jle
xchg
addr16
sahf
aas
mov
je
jae
mov
lahf
sahf
aas
mov
je
mov
mov
lahf
sahf
pop
mov
je
mov
mov
lahf
sahf
aas
mov
je
jae
(bad)
ja
jnp
outs
gs
sahf
aas
mov
jae
jae
dec
ja
lahf
sahf
aas
mov
jae
jae
mov
lahf
sahf
aas
mov
je
mov
mov
lahf
sahf
outs
mov
je
jae
(bad)
ja
jnp
outs
gs
sahf
aas
mov
jb
jae
mov
lahf
sahf
aas
mov
xchg
cwde
xchg
jp
xchg
iret
ins
popa
xchg
jl
ins
xchg
pop
xchg
jge
xchg
pop
xchg
jp
xchg
ins
cdq
xchg
jp
xchg
iret
ins
popa
xchg
ins
popa
mov
sahf
arpl
bound
ins
int
lahf
fistp
shl
sub
shl
sub
jmp
shl
sub
shl
leave
shl
sub
shl
sub
shl
leave
shl
sub
shl
sub
mov
mov
mov
lahf
sahf
mov
jb
lahf
ja
retf
shr
leave
shl
sub
shl
sub
jae
xchg
ins
gs
shl
sub
shl
sub
jb
adc
shl
sub
shl
sub
je
adc
shl
leave
shl
sub
sahf
dec
leave
shl
sub
xlat
mov
jae
shr
leave
shl
sub
and
retf
shl
leave
shl
sub
jb
adc
sar
leave
shl
sub
cdq
arpl
leave
shl
sub
shl
sub
shr
sub
xor
mov
fisttp
shl
sub
shl
sub
sar
leave
shl
sub
and
rol
sub
shl
sub
mov
sub
ror
leave
push
and
push
outs
cld
fwait
xchg
jp
icebp
jmp
xchg
arpl
shl
sub
shl
sub
shl
sub
dec
es
shl
sub
and
adc
mov
sahf
jg
leave
shl
sub
push
stos
test
retf
shr
leave
shl
sub
shl
sub
shl
sub
shr
leave
shl
sub
shl
sub
cwde
and
mov
and
jg
leave
shl
sub
shl
sub
xchg
test
arpl
leave
shl
sub
rcr
sub
pop
bound
jae
mov
shl
leave
shl
sub
shl
sub
and
jnp
jo
enter
leave
shl
sub
shl
sub
mov
test
ins
imul
sub
shl
sub
jno
sub
shl
sub
shl
sub
mov
inc
leave
shr
leave
shl
sub
add
jecxz
outs
imul
push
leave
xlat
push
mov
leave
shr
leave
shl
sub
and
mov
push
leave
shr
leave
mov
xor
sub
nop
imul
xchg
sbb
imul
rol
leave
shl
sub
shl
sub
and
nop
jne
push
mov
fild
pop
imul
(bad)
stos
imul
mov
shl
sub
shl
sub
and
push
ror
arpl
shr
leave
shl
sub
shl
sub
xchg
and
mov
jg
xchg
test
ins
gs
shl
sub
imul
enter
leave
shl
sub
faddp
xchg
into
(bad)
and
dec
xchg
push
mov
lahf
sahf
dec
mov
shl
sub
shl
sub
and
jno
add
rol
sub
shl
sub
push
and
xchg
xchg
cdq
push
cmps
sub
dec
sbb
shl
sub
shl
sub
test
jge
jg
xchg
test
ins
gs
shl
sub
cli
and
stos
lds
add
shl
sub
shl
sub
mov
xor
sub
popf
arpl
ja
outs
gs
mov
mov
call
shl
sub
shl
sub
shl
sub
shl
sub
shl
sub
mov
out
arpl
xor
dec
jp
lahf
dec
jle
stos
imul
sub
shl
sub
shl
sub
shl
sub
shl
sub
shl
sub
cmc
inc
leave
shl
sub
xchg
popa
arpl
jp
out
outs
imul
xchg
pop
xchg
jge
xchg
inc
push
outs
pop
iret
jo
stos
xchg
and
leave
shl
sub
dec
jnp
xchg
ins
gs
shl
sub
shl
sub
lahf
iret
fcmove
shr
leave
shl
sub
and
leave
shl
sub
shl
sub
lahf
iret
pop
leave
shr
leave
shl
sub
shl
sub
and
leave
shl
sub
dec
jmp
xchg
or
mov
lahf
sahf
pop
mov
lahf
jmp
shl
sub
shl
sub
jo
stos
xchg
and
leave
shl
sub
shl
sub
sahf
outs
mov
shl
sub
shl
sub
shl
sub
mov
gs
shl
sub
shl
sub
and
adc
cmp
shr
leave
shl
sub
and
inc
xchg
ins
sub
shl
sub
mov
stos
test
retf
shr
leave
shl
sub
and
nop
push
arpl
pop
dec
out
xlat
mov
jae
shr
leave
shl
sub
shl
sub
and
retf
shl
leave
shl
sub
shl
sub
mov
stos
test
xchg
xor
sub
xchg
or
stos
test
retf
shr
leave
shl
sub
shl
sub
sahf
mov
(bad)
jno
ds
xchg
cmp
shl
sub
xor
sub
push
dec
xchg
cmp
mov
sub
sar
leave
shl
sub
and
js
outs
(bad)
ins
gs
shl
sub
call
leave
shr
leave
shl
sub
(bad)
ja
retf
shr
leave
shl
sub
and
das
xchg
(bad)
fistp
ins
sub
shl
sub
shl
sub
and
sahf
pop
mov
call
js
pop
cdq
cmps
jb
xchg
xchg
jnp
sub
shl
sub
shl
sub
and
cwde
enter
shr
leave
shl
sub
inc
lds
sar
gs
shl
sub
xor
ins
int
lahf
sti
xor
shl
sub
shl
sub
shl
sub
mov
rcr
ins
sub
shl
sub
xor
ins
int3
xchg
and
leave
shl
sub
and
mov
pop
int
lahf
retf
xor
shl
sub
shl
sub
lahf
mov
shr
leave
shl
sub
xchg
and
inc
xchg
cs
outs
and
leave
shr
leave
xor
ins
int
lahf
mov
sub
add
push
leave
shl
sub
cmp
sub
jb
xchg
and
xor
outs
pop
iret
jo
stos
xchg
and
pop
push
and
pushf
mov
outs
push
mov
sub
shl
sub
shl
sub
mov
pop
leave
rol
leave
shl
sub
jo
stos
xchg
and
pop
push
and
retf
ror
leave
shl
sub
pop
inc
leave
shl
sub
shl
sub
rol
leave
shl
sub
shl
sub
pushf
and
push
shr
leave
shl
sub
shl
sub
and
leave
shl
sub
xchg
and
mov
aas
mov
js
test
ror
leave
shl
sub
push
and
stos
imul
leave
shl
sub
shl
sub
jb
mov
shl
leave
shl
sub
shl
sub
mov
retf
rol
leave
shl
sub
shl
sub
shr
leave
shl
sub
ins
and
xchg
pop
outs
mov
mov
leave
leave
rol
leave
shl
sub
inc
imul
popf
fs
scas
jg
gs
lahf
or
shl
sub
xchg
and
inc
xchg
cs
outs
and
leave
shr
leave
shl
sub
shl
sub
shl
retf
shr
leave
shl
sub
shl
sub
and
lahf
sahf
out
mov
sahf
das
mov
shl
sub
shl
sub
shl
sub
rol
leave
shl
sub
shl
sub
shl
sub
and
retf
ss
(bad)
ins
gs
shl
sub
shl
sub
ss
rcl
retf
shr
leave
shl
sub
xchg
and
mov
jp
xchg
jge
aaa
mov
(bad)
ins
gs
shl
sub
mov
je
lahf
iret
xchg
leave
shr
leave
shl
sub
cmp
iret
or
shl
sub
and
mov
pop
int
lahf
sbb
leave
shl
sub
shl
sub
shl
sub
add
xchg
add
shl
sub
aam
(bad)
ins
gs
shl
sub
and
xchg
sub
sub
xchg
and
inc
xchg
cs
outs
and
leave
shr
leave
shl
sub
shl
sub
aam
(bad)
ins
gs
shl
sub
shl
sub
ret
data16
sahf
dec
mov
mov
js
lods
jmp
ins
gs
shl
sub
shr
leave
shl
sub
test
sub
sahf
pop
mov
shl
sub
sahf
pop
mov
mov
test
mov
shl
sub
shl
sub
shl
sub
je
xchg
xchg
test
ins
gs
shl
sub
shl
sub
loopne
sub
pop
leave
shr
leave
push
and
icebp
pop
and
xchg
test
shl
sub
shl
sub
and
leave
shl
sub
shl
sub
mov
xchg
dec
jmp
sahf
iret
mov
add
shr
leave
dec
and
mov
dec
popa
lahf
sahf
dec
xchg
test
shl
sub
shl
sub
xchg
mov
ins
mov
std
dec
pop
mov
ret
rcr
shl
sub
sahf
jae
leave
shl
sub
shl
sub
ror
leave
shl
sub
mov
jp
nop
pop
ins
cdq
xchg
jge
je
mov
shl
leave
shl
sub
shl
sub
shl
leave
shl
sub
shl
sub
mov
inc
xchg
mov
shl
sub
and
mov
or
sbb
mov
shl
sub
and
mov
inc
mov
shl
leave
shl
sub
shl
sub
lahf
jns
push
mov
test
rcr
ins
gs
dec
(bad)
fs
jge
leave
shl
sub
shl
sub
xor
outs
(bad)
ins
gs
shl
sub
jmp
shl
sub
and
leave
shl
sub
sahf
jae
xchg
mov
imul
shl
leave
shl
sub
shl
sub
sahf
inc
or
and
mov
jge
leave
shl
sub
popa
and
ins
xchg
jno
ins
imul
adc
lahf
outs
gs
shr
leave
shl
sub
shl
sub
lahf
cmp
ins
gs
shl
sub
shl
sub
sbb
sub
shl
sub
shl
sub
and
enter
leave
shl
sub
shl
sub
add
leave
shl
sub
shl
sub
and
fwait
cmp
mov
mov
shl
sub
shl
sub
ret
ficomp
stos
cmps
cld
lahf
sahf
pop
mov
sbb
jb
mov
lahf
sahf
(bad)
imul
and
leave
shl
sub
shl
sub
jae
push
push
jp
fs
in
dec
leave
shl
sub
shl
sub
mov
sub
rol
sub
shl
sub
shl
sub
shl
leave
shl
sub
mov
push
ror
leave
shl
sub
shr
dec
leave
shl
sub
shl
sub
xchg
and
mov
jge
mov
shl
sub
shl
sub
shl
sub
adc
jne
js
in
cdq
(bad)
jae
mov
shl
leave
shl
sub
shl
sub
and
mov
lahf
jge
dec
gs
popf
push
jno
inc
ins
gs
test
pusha
leave
shl
sub
shl
sub
shl
sub
shl
sub
and
xchg
ins
gs
shl
sub
shl
sub
nop
and
(bad)
dec
leave
shl
sub
and
xchg
outs
mov
xchg
shr
gs
leave
shl
sub
shl
sub
shr
leave
shl
sub
inc
and
xchg
jmp
push
mov
jge
ror
sub
cmc
and
mov
ror
shl
sub
lods
push
gs
js
mov
xchg
dec
xchg
mov
shl
sub
shl
sub
xor
sub
pop
imul
shl
sub
shl
sub
jp
jb
mov
pop
xchg
ja
jno
mov
lahf
sahf
stos
or
jbe
js
stc
call
into
(bad)
jg
add
jb
retf
push
jae
mov
jae
mov
adc
mov
jle
mov
mov
cmps
or
sub
adc
mov
repz
movs
ret
mov
xor
pop
adc
jbe
mov
stc
outs
cmp
pop
sbb
repz
push
add
fidiv
daa
lods
std
lods
aam
push
mov
pop
mov
mov
retf
or
xchg
adc
push
mov
(bad)
mov
ds
jmp
and
pop
mul
pop
inc
and
xor
(bad)
mov
xor
mov
ret
inc
scas
inc
shl
add
jno
sbb
push
es
cmp
mov
rol
loop
jb
fld
or
mov
inc
inc
pop
inc
aaa
out
pop
xchg
jge
mov
pop
dec
(bad)
and
shl
mov
pop
(bad)
stos
inc
add
xor
pop
cld
push
sti
jne
pop
xchg
mov
push
push
jle
bound
ret
cmp
xchg
mov
repnz
fstp
or
and
pop
loopne
pop
pop
inc
inc
push
inc
ds
outs
cmp
mov
push
xchg
outs
and
mov
sub
push
popa
cmp
movs
xchg
mov
adc
sub
fwait
rol
push
cdq
repz
(bad)
iret
inc
(bad)
repz
out
push
lock
(bad)
or
fcmovbe
and
outs
arpl
xor
fst
mov
enter
pop
jmp
jp
jae
mov
adc
mov
cs
test
cmp
add
mov
cmp
and
sar
fldenv
pop
inc
pop
bound
pop
sub
cmc
sbb
cmp
pop
stc
outs
cmp
push
or
adc
lea
add
scas
stos
ds
std
lods
xor
lods
std
lods
fistp
jmp
add
std
mov
out
mov
cld
mov
ds
cld
mov
sbb
cld
dec
xchg
adc
adc
mov
adc
mov
aad
in
rcr
ja
inc
add
iret
adc
dec
mov
jmp
daa
aas
(bad)
pop
inc
bound
dec
cmp
sbb
xchg
mov
lock
fwait
loopne
dec
xchg
cdq
movs
pop
dec
push
adc
push
pop
bound
push
mov
xchg
lods
out
pop
inc
enter
imul
pushf
pop
mov
mov
loop
mov
mov
inc
ds
loop
push
fisttp
inc
push
push
xor
pop
aaa
push
fisubr
xchg
ins
add
sub
cmps
mov
ret
pop
int3
mov
add
sar
add
jno
dec
daa
lods
in
mov
xchg
dec
sbb
fld
es
outs
cmp
xchg
scas
fisubr
push
dec
and
mov
mov
inc
retf
add
pop
lea
int
inc
ret
int
or
xchg
or
xor
fstp
inc
mov
cmps
inc
and
inc
push
dec
xchg
fwait
inc
xchg
cmp
fiadd
sub
or
mov
mov
loop
mov
clc
push
icebp
pushf
in
add
shl
loop
lds
xor
dec
cmp
jle
dec
loop
jp
sti
imul
jmp
(bad)
jg
dec
cmp
es
(bad)
xor
imul
sbb
data16
je
mov
sbb
mov
pop
leave
or
mov
push
adc
fidiv
pop
mov
inc
fild
push
xchg
adc
repnz
(bad)
mov
jne
jp
and
pop
shl
xor
lahf
data16
dec
xchg
in
sbb
mov
icebp
push
aam
in
fist
xchg
(bad)
ret
inc
inc
inc
shr
loope
lods
lods
lods
inc
xlat
adc
fwait
lods
or
cmp
(bad)
dec
icebp
cmps
push
mov
daa
lods
adc
xlat
test
xchg
push
add
dec
lock
mov
sub
inc
(bad)
xor
pop
inc
push
cmp
sub
and
inc
mov
call
pop
cmp
inc
neg
xchg
pop
push
push
loope
push
pop
daa
inc
ret
jns
in
inc
out
rcr
pop
ficom
lods
xchg
mov
mov
jmp
js
inc
push
add
std
pop
cmp
stos
sub
out
cmp
(bad)
pop
add
mov
mov
push
out
cmp
mov
mov
mov
stos
or
out
cmp
xchg
pop
in
mov
dec
pop
and
stos
mov
out
cmp
xchg
pop
(bad)
icebp
mov
sbb
pop
and
stos
scas
aas
jmp
dec
icebp
mov
xchg
call
test
and
(bad)
pop
add
mov
mov
push
and
mov
mov
mov
mov
daa
out
sbb
xchg
pop
in
mov
dec
pop
and
mov
and
xchg
pop
(bad)
icebp
mov
push
outs
pop
and
mov
inc
push
movs
xchg
call
jbe
sub
out
sbb
repnz
pop
add
mov
mov
push
and
mov
mov
mov
or
daa
out
sbb
jmp
movs
ds
pop
and
or
and
xchg
pop
(bad)
icebp
mov
push
outs
pop
and
or
inc
push
add
call
(bad)
stos
sub
out
cmp
(bad)
pop
add
mov
mov
push
and
mov
mov
mov
stos
or
out
cmp
xchg
pop
in
mov
dec
pop
and
stos
mov
out
cmp
xchg
pop
(bad)
icebp
mov
push
outs
pop
and
stos
lods
aas
jmp
dec
icebp
mov
xchg
call
push
sub
das
out
cmp
repnz
pop
add
mov
mov
push
and
mov
mov
mov
sub
daa
out
cmp
jmp
test
dec
pop
and
sub
and
xchg
pop
(bad)
icebp
mov
push
outs
pop
and
sub
inc
push
in
call
ss
sub
out
sbb
icebp
mov
mov
push
and
mov
mov
mov
dec
or
out
sbb
icebp
mov
dec
pop
and
dec
mov
out
sbb
icebp
mov
push
outs
pop
and
dec
lods
aas
jmp
dec
icebp
mov
nop
std
pop
cmp
fwait
sub
out
or
(bad)
pop
add
mov
mov
push
out
or
mov
mov
mov
fwait
or
out
or
xchg
pop
in
mov
dec
pop
and
fwait
mov
out
or
xchg
pop
(bad)
icebp
mov
sbb
pop
and
fwait
scas
aas
jmp
cmp
repnz
mov
cmp
ds
cmp
jmp
ds
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
jecxz
xchg
sub
sbb
inc
(bad)
std
popa
dec
call
push
(bad)
mov
cmp
xor
inc
adc
iret
test
and
mov
jno
iret
cmp
xchg
lods
stos
test
gs
add
pop
sub
cmp
add
pop
sub
sub
add
pop
sub
adc
mov
icebp
or
xchg
lods
stos
test
in
jnp
add
pop
sub
cmp
xchg
lods
stos
test
rol
stos
dec
mov
and
xchg
mov
aaa
dec
mov
add
xchg
mov
pop
repz
rcr
pop
pop
daa
push
jae
and
xchg
mov
hlt
movs
call
xor
push
jae
and
xchg
mov
hlt
cmp
js
push
jae
and
mov
adc
mov
push
or
xor
xor
mov
xor
out
inc
inc
xor
sahf
push
mov
out
daa
or
sti
js
ret
push
sbb
mov
loop
or
cmp
xchg
cmp
cld
or
xor
cmps
rcl
fiadd
mov
neg
cld
movs
ret
add
rep
xsha1
cmps
leave
mov
xor
or
repz
inc
outs
dec
aas
mov
std
lods
ror
fnstenv
adc
ds
add
jle
mov
rcr
mov
std
lods
retf
sbb
jb
js
adc
outs
mov
push
leave
pop
sbb
mov
adc
push
push
pop
inc
mov
push
push
cmp
les
mov
mov
(bad)
mov
out
ret
cld
pop
xchg
popf
in
cs
mov
ret
pop
and
lods
inc
scas
cmps
aaa
push
retf
fwait
lods
or
and
dec
fist
mov
push
(bad)
fmul
inc
inc
push
adc
xchg
push
and
xor
bound
rol
adc
and
dec
jb
inc
out
dec
call
pop
mov
push
inc
lahf
test
dec
xchg
mov
repnz
xchg
jmp
sti
outs
cmp
out
into
push
pop
not
rol
cld
(bad)
add
cld
push
mov
sub
dec
cmp
sbb
mov
mov
mov
add
mov
call
sti
add
cld
push
add
stc
shr
and
add
cld
push
adc
push
jno
sbb
addr16
cmp
push
mov
cli
add
cld
push
fcom
popa
rcl
and
dec
xchg
push
mov
cli
xchg
test
and
aas
and
xchg
or
pop
cld
ds
add
cld
push
pop
xchg
sub
add
inc
push
sbb
jbe
rol
enter
es
add
inc
call
cli
add
cld
push
add
xchg
sub
add
inc
imul
cld
push
push
movs
push
gs
mov
xchg
(bad)
cmps
sbb
push
mov
arpl
cmps
cmp
push
mov
bound
leave
fst
ret
pop
xor
mov
adc
dec
in
and
movs
and
sbb
std
mov
cmp
adc
repz
movs
rcl
scas
pop
cmps
clc
xchg
ja
imul
repnz
clc
dec
outs
out
aas
mov
(bad)
movs
lds
aaa
fdivp
mov
cmps
jecxz
cmps
lods
out
les
in
mov
push
add
ds
mov
jmp
dec
push
out
cs
repz
fadd
fcmovb
adc
pop
cwde
mov
mov
ror
dec
xchg
ror
dec
lock
pop
(bad)
xchg
movs
in
cs
mov
ret
inc
fld
or
pop
div
xchg
inc
out
daa
std
adc
sar
jmp
in
xchg
sbb
pop
inc
popa
dec
lods
xor
mov
mov
pop
pop
push
cmp
ins
adc
aad
push
into
rcr
test
mov
adc
leave
sbb
pop
sbb
add
adc
mov
sub
add
sub
pop
les
(bad)
cmp
xor
cmp
and
out
mov
adc
rol
jecxz
sbb
test
cmps
les
aaa
xrelease
cmps
leave
pop
xchg
cmp
cmp
push
adc
push
popa
adc
mov
neg
xchg
sbb
mov
icebp
cli
add
std
(bad)
sbb
jns
ja
in
fild
cli
data16
pop
push
dec
retf
and
jne
or
retf
mov
push
and
rcl
xchg
push
ins
xchg
jb
outs
test
xor
ins
add
loop
jns
test
xchg
push
dec
call
shl
ret
pop
adc
daa
jae
pmaxsw
mov
xor
imul
retf
jmp
cmp
mov
cld
or
sub
mov
cli
imul
mov
dec
xor
loop
stc
imul
jmp
xor
mov
icebp
push
xchg
or
sub
lahf
ret
inc
cmp
adc
mov
aad
mov
jbe
push
out
dec
xchg
cdq
fsub
mov
dec
cdq
stc
bt
in
mov
sbb
and
mov
xchg
mov
out
rcl
pop
cdq
nop
popf
cli
xchg
dec
aam
inc
iret
adc
fld
or
ret
out
(bad)
add
iret
push
pop
add
inc
shl
jo
dec
cmp
outs
mov
fnstenv
xchg
cmp
pop
out
xchg
(bad)
clc
push
add
jno
jnp
inc
out
sahf
rol
pop
cmp
dec
mov
push
inc
imul
dec
xchg
imul
fidivr
pop
cmp
pop
sahf
push
cs
repz
lea
and
inc
pop
dec
fld
or
test
and
test
bound
jo
bound
imul
xchg
imul
enter
in
pop
hlt
shr
jb
loop
mov
pop
nop
(bad)
fsubp
xchg
(bad)
call
pop
nop
(bad)
mov
pop
nop
(bad)
loopne
les
mov
mov
xchg
mov
mov
xchg
mov
pop
nop
(bad)
out
xchg
xchg
add
xchg
aam
jle
mov
pop
nop
(bad)
mov
xor
fdiv
mov
pop
nop
(bad)
mov
loop
(bad)
call
or
pop
sbb
les
pop
nop
(bad)
mov
clc
xchg
ud2
mov
mov
loop
mov
adc
rcr
pop
les
sbb
gs
ficomp
mov
dec
xchg
(bad)
sbb
sar
rol
jmp
out
mov
pop
nop
(bad)
mov
pop
enter
nop
(bad)
stc
pop
clc
xchg
mov
mov
(bad)
lock
fwait
rcl
sar
(bad)
loopne
pop
enter
nop
(bad)
jmp
xchg
xchg
mov
mov
(bad)
lock
fwait
rcr
jg
(bad)
push
mov
pop
nop
(bad)
jmp
xchg
xchg
mov
pop
nop
(bad)
out
xchg
cmps
mov
pop
nop
(bad)
mov
pop
clc
xchg
mov
add
fisttp
lock
mov
pop
les
push
clc
xchg
xchg
adc
xchg
call
pop
fsub
mov
loop
or
adc
aad
xchg
pop
les
pop
nop
(bad)
out
sbb
gs
fiadd
mov
pop
nop
(bad)
cld
loop
dec
call
or
pop
mov
mov
pop
nop
(bad)
mov
clc
mov
call
pop
fdiv
mov
jecxz
(bad)
lock
mov
shr
jmp
cmps
xchg
mov
pop
nop
(bad)
jmp
fnstcw
jae
(bad)
lock
mov
sub
test
adc
xchg
sbb
xchg
cmc
call
nop
(bad)
(bad)
loop
(bad)
call
or
pop
mov
pop
nop
mov
and
lds
pop
or
jg
rol
jmp
out
mov
pop
nop
(bad)
xor
nop
daa
adc
sub
push
ficomp
mov
pop
nop
(bad)
pop
dec
xchg
(bad)
sbb
sar
rol
jmp
out
mov
pop
nop
(bad)
mov
adc
test
or
jg
(bad)
or
pop
nop
(bad)
mov
pop
les
sbb
fisubr
cld
loop
mov
add
test
call
pop
nop
(bad)
mov
push
xchg
(bad)
hlt
pop
les
pop
nop
(bad)
mov
or
gs
fimul
mov
xchg
xchg
(bad)
sbb
sar
rol
jmp
out
xchg
mov
mov
repnz
sbb
xchg
call
pop
aam
mov
pop
nop
(bad)
cld
loop
inc
call
or
pop
sub
cmp
nop
(bad)
mov
clc
add
ud2
mov
pop
aam
mov
pop
nop
mov
pop
nop
(bad)
mov
sbb
inc
push
xor
hlt
mov
mov
mov
adc
xchg
mov
pop
nop
(bad)
mov
pop
les
mov
adc
(bad)
mov
pop
nop
mov
adc
xchg
call
pop
aam
mov
xchg
xchg
(bad)
sbb
sar
rol
jmp
sahf
xchg
mov
pop
nop
(bad)
mov
clc
ret
sbb
xchg
call
pop
aam
mov
pop
nop
(bad)
cld
loop
xor
adc
int
call
pop
nop
(bad)
mov
mov
xchg
test
add
xchg
call
pop
aam
mov
pop
lock
mov
sbb
inc
push
xor
icebp
pop
lock
pushf
mov
pop
nop
(bad)
cld
pop
les
mov
adc
(bad)
mov
sbb
fadd
mov
pop
nop
(bad)
out
xchg
cmps
mov
pop
nop
(bad)
std
mov
xchg
lock
(bad)
shl
jg
(bad)
xor
pop
nop
(bad)
mov
pop
les
cmp
mov
mov
mov
xchg
lock
mov
and
jg
(bad)
push
mov
pop
nop
(bad)
mov
adc
lds
pop
nop
(bad)
jmp
xchg
xchg
mov
pop
nop
(bad)
jmp
xchg
xchg
lock
mov
adc
inc
push
xor
in
lock
mov
adc
fwait
mov
setb
mov
pop
nop
(bad)
mov
pop
les
pop
nop
(bad)
mov
or
gs
fimul
mov
xchg
xchg
(bad)
sbb
sar
rol
jmp
out
mov
pop
nop
(bad)
xlat
sbb
gs
fiadd
mov
pop
nop
(bad)
mov
loop
xor
adc
int
call
pop
nop
(bad)
xchg
sbb
gs
ficomp
mov
pop
nop
(bad)
mov
pop
lock
mov
sbb
sahf
cmp
les
and
mov
adc
sbb
setnp
jbe
adc
test
mov
jl
cmp
push
mov
cmp
std
or
stc
fidiv
or
and
jo
push
sahf
inc
pop
test
imul
or
cmp
aad
push
add
fst
jne
mov
stc
outs
rcr
out
jle
icebp
push
out
ret
mov
mov
pop
xor
stos
enter
sar
cmp
adc
out
cmp
xor
fiadd
xor
in
wrmsr
pop
push
bound
repnz
xchg
push
add
dec
lock
out
loopne
dec
xchg
or
aad
cmp
loop
xchg
pop
sub
push
mov
adc
xor
mov
mov
dec
daa
push
push
fdivp
pop
adc
adc
fwait
lods
icebp
scas
pop
xchg
jmp
test
or
(bad)
adc
gs
mov
push
push
aam
jecxz
(bad)
pusha
adc
xchg
stc
cmp
rcl
add
fiadd
scas
ret
pop
daa
lods
popf
scas
pop
cdq
adc
(bad)
mov
push
xor
out
dec
inc
out
add
xchg
xor
imul
montmul
cmps
ret
arpl
xor
push
outs
bound
sbb
xchg
jg
lock
push
lock
out
repnz
sbb
xchg
jg
lock
push
repnz
push
movs
ss
lock
push
lock
cmp
fs
shl
push
lock
dec
bnd
adc
mov
jnp
fstp
jnp
mov
outs
cmc
or
push
(bad)
sbb
cmps
jnp
xchg
inc
test
sbb
push
jg
add
adc
test
jge
cmp
dec
mov
cmp
dec
push
pop
mov
sti
imul
in
pop
rcr
or
inc
in
cld
dec
cmp
pop
das
push
ds
iret
adc
jno
add
stos
push
int3
fild
adc
cmp
dec
mov
xor
push
push
fld
or
inc
push
pop
idiv
mov
lea
(bad)
ins
es
jmp
repz
xor
dec
xchg
in
mov
inc
mov
pushf
out
rcr
xchg
cmc
ds
inc
push
stos
push
aam
push
dec
inc
inc
adc
xlat
mov
fcmovbe
mov
test
iret
sbb
ficom
js
xor
push
mov
adc
xchg
xchg
ins
dec
add
sbb
mov
rcl
pop
mov
sbb
pop
ret
pop
ret
fisub
add
fwait
lods
popf
lods
cs
lock
pop
jae
dec
xchg
xor
mov
adc
outs
fistp
jmp
xor
dec
call
pop
jg
adc
push
add
sub
hlt
sti
imul
fist
mov
xor
pop
push
and
push
cmp
sbb
imul
sbb
imul
sbb
aas
push
cmp
sbb
je
jb
aas
push
cmp
sbb
aas
push
cmp
sbb
jo
mov
fcmovnb
outs
dec
int
loopne
into
in
xchg
fdiv
and
xchg
fcom
aas
dec
int
stos
stos
xor
mov
mov
jg
add
cs
stos
mov
cmps
or
sub
adc
mov
repz
movs
fidivr
xor
dec
sahf
and
mov
xchg
sbb
je
jle
mov
or
ret
inc
fwait
lods
lods
lods
dec
jnp
outs
cmps
mov
jmp
sub
inc
mov
xor
mov
xor
push
ss
dec
xchg
pop
add
sub
fistp
cmps
pinsrw
xor
in
shl
pop
mov
adc
dec
(bad)
cmps
jno
push
fcom
mov
enter
iret
add
xchg
sbb
mov
(bad)
mov
aam
or
cmp
mov
loopne
push
jp
sbb
dec
repnz
jns
lahf
rcl
adc
pop
aam
je
int3
adc
addr16
test
mov
mov
pop
sub
inc
iret
out
dec
call
pop
dec
dec
or
or
pop
cmp
lods
sbb
fist
push
(bad)
add
nop
pop
fld
mov
jnp
pop
dec
shl
inc
pop
into
push
push
mov
inc
mov
inc
and
cmps
ret
push
ds
xchg
sub
pop
fucom
mov
in
mov
loope
pop
fst
fucom
mov
in
jmp
xchg
sub
xchg
xlat
xor
rcr
(bad)
pop
(bad)
in
scas
mov
clc
rcl
cld
stos
mov
add
push
adc
lods
mov
pusha
cwde
sub
adc
ret
inc
mov
jecxz
lock
lock
adc
mov
ds
jmp
pushf
jg
inc
cmp
inc
mov
jae
mov
jae
mov
cmp
out
and
jne
pop
mov
shl
mov
cli
outs
(bad)
xor
inc
ret
mov
xor
fidivr
mov
stos
adc
cmps
pop
and
xchg
cli
imul
mov
add
pop
jmp
inc
add
add
cli
inc
dec
lock
adc
push
cmps
adc
rcl
fcom
pop
lahf
cmp
mov
push
pop
mov
pop
(bad)
mov
std
dec
pop
cdq
icebp
xor
aad
pop
mov
adc
xchg
shr
test
mov
adc
daa
lods
in
stos
popa
pop
aaa
pop
mov
push
pop
and
pand
or
ds
cld
or
fstp
or
push
or
push
pop
cmp
dec
repnz
ds
std
dec
xchg
in
bound
push
repz
hlt
push
ss
inc
pop
retf
add
aad
imul
add
fstp
sub
push
mov
out
out
dec
xor
sbb
xchg
cdq
rcr
outs
adc
fs
dec
push
inc
pop
mov
lfs
or
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
adc
cmp
ffree
test
mov
cwde
adc
adc
mov
xlat
cmp
mov
mov
mov
fwait
test
fst
adc
ror
aam
call
fldenv
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
push
adc
and
nop
mov
push
adc
adc
adc
xor
or
adc
add
adc
add
push
adc
or
adc
prefetch
push
xor
adc
aaa
or
adc
cmp
adc
cmp
sub
fsubr
push
and
adc
and
cld
push
cmp
adc
sub
adc
sub
cmp
and
push
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jno
int3
or
pop
adc
jbe
mov
push
jp
push
push
jg
aam
inc
not
push
popa
or
adc
or
sbb
imul
push
ins
or
adc
xchg
or
adc
xchg
or
adc
cdq
or
adc
sahf
or
adc
or
push
push
mov
adc
(bad)
or
adc
mov
and
mov
js
xor
adc
mov
scas
adc
mov
lahf
adc
mov
ret
adc
cmps
or
adc
test
je
test
adc
scas
or
adc
ror
adc
xlat
or
adc
fimul
adc
fisttp
adc
ret
or
adc
(bad)
or
adc
retf
jnp
outs
adc
int
pop
test
add
push
icebp
or
adc
hlt
or
adc
sti
or
adc
dec
adc
loop
lods
es
push
in
cld
dec
mov
or
adc
in
or
adc
adc
cdq
push
xchg
adc
adc
inc
adc
sbb
mov
fcom
push
sbb
dec
mov
adc
add
mov
pop
or
outs
dec
xchg
push
or
push
cmp
adc
or
xchg
adc
xor
in
ins
adc
aaa
or
jo
pushf
adc
cmp
js
dec
adc
cmp
lock
mov
adc
and
cdq
hlt
stc
adc
es
dec
sub
adc
sub
xchg
dec
imul
mov
push
or
ins
push
cmp
adc
dec
xor
push
pop
or
leave
or
adc
inc
or
sbb
adc
inc
or
mov
pop
adc
dec
or
pop
jl
adc
dec
or
int3
push
mov
push
jno
aam
enter
ja
fcomp
inc
xlat
adc
jnp
add
add
adc
jl
push
sbb
pusha
or
pop
mov
or
popf
movs
xchg
adc
push
popf
adc
ins
or
pop
pusha
cmp
push
nop
or
sub
xchg
or
ret
push
or
push
nop
scas
adc
sahf
or
adc
jns
push
or
shr
rcr
lock
mov
ins
sbb
adc
mov
xchg
dec
xchg
adc
mov
inc
lea
adc
mov
jl
js
adc
mov
retf
adc
mov
cmps
adc
mov
mov
push
cmps
or
stc
sub
adc
test
mov
push
scas
or
sbb
adc
ror
xor
aad
fs
in
adc
fmul
mov
fimul
ror
adc
test
push
les
aad
xchg
adc
retf
or
xchg
inc
push
adc
int
call
push
repnz
mov
test
push
clc
or
adc
mov
push
cld
or
mov
loopne
fs
enter
in
sbb
or
dec
loopne
adc
out
or
inc
push
jp
push
adc
add
sub
push
push
bsf
sbb
in
jo
scas
adc
pop
(bad)
mov
add
pop
or
cmp
push
pop
(bad)
fcmovb
or
pop
xor
invd
loope
push
adc
xor
test
enter
aaa
paddq
jl
adc
cmp
cmp
cmp
push
ds
mov
adc
and
pop
aaa
lods
push
adc
and
or
fsub
adc
sub
les
pcmpgtb
test
adc
push
sysenter
or
jmp
ins
aas
adc
pop
bsf
loopne
push
pop
jo
push
inc
(bad)
adc
inc
cmpxchg
dec
pavgb
mov
push
dec
andps
sbb
push
jb
add
cmp
adc
jne
adc
add
adc
jns
pushf
add
push
adc
jl
push
mov
lods
sbb
out
adc
psubb
push
push
inc
stos
adc
ins
sysenter
jbe
jle
push
xchg
pcmpgtb
xchg
psubusb
jo
adc
fwait
mov
jl
adc
popf
punpcklbw
dec
adc
push
or
adc
test
fadd
dec
aad
push
mov
sub
or
adc
mov
jl
xor
adc
mov
je
inc
out
push
mov
hlt
jno
xor
push
mov
or
push
mov
ficom
push
mov
xlat
adc
cmps
bsf
push
push
test
sub
cmp
adc
scas
jl
push
ror
fmul
pop
adc
xlat
bsf
mov
shld
outs
adc
fisttp
hlt
shr
ror
jmp
adc
mov
cmpxchg
cmps
adc
int3
pavgb
repz
adc
test
ins
xor
mov
je
adc
dec
fcomp
inc
add
push
jecxz
pop
xlat
xchg
cli
adc
in
jo
shr
adc
jmp
and
in
(bad)
add
mov
adc
int3
mov
push
push
push
mov
sbb
xor
mov
push
inc
xor
add
cwde
xor
inc
adc
push
push
and
shr
push
or
lods
xchg
mov
push
femms
in
clc
xor
push
xor
test
ss
hlt
inc
jl
adc
cmp
loopne
cmp
adc
cmp
or
push
and
je
push
fcom
push
daa
push
and
add
adc
sub
mov
push
das
push
cld
mov
push
push
lods
outs
sub
adc
push
push
mov
adc
adc
pop
push
les
pop
push
clc
adc
jae
push
inc
push
and
cmp
adc
inc
push
fcom
push
int3
inc
int3
mov
push
dec
push
lods
iret
mov
push
jo
cld
sbb
jno
push
je
int3
mov
movs
adc
jnp
pushf
arpl
push
adc
jl
enter
adc
popa
push
adc
sub
inc
cdq
in
adc
imul
mov
ins
push
int3
imul
sbb
push
xchg
push
xor
or
push
fwait
push
fsubr
test
adc
popf
push
aam
push
push
nop
enter
push
test
sbb
push
sub
push
sar
push
adc
mov
push
adc
mov
rcl
push
mov
retf
adc
movs
push
dec
daa
inc
mov
push
stos
push
inc
sub
push
adc
ror
xor
push
adc
xlat
push
in
push
in
xchg
adc
(bad)
adc
cmp
adc
fimul
sbb
pop
mov
mov
adc
les
les
or
push
leave
push
ins
xchg
adc
jne
push
adc
icebp
push
pushf
cmps
nop
jb
push
cli
push
push
std
aam
adc
std
push
add
js
adc
loopne
fadd
je
adc
in
adc
pushf
push
adc
jmp
fs
retf
adc
in
push
xor
cmp
adc
add
inc
bnd
adc
pop
or
test
push
or
fcom
push
or
xor
sub
mov
int3
mov
or
cmp
ins
adc
and
pushf
pop
add
mov
push
sub
call
push
das
or
push
or
pop
and
push
push
or
retf
adc
pop
or
push
pop
or
je
adc
inc
or
inc
adc
inc
or
ins
sbb
push
dec
or
pusha
jge
push
dec
or
push
jno
jl
lock
adc
jbe
sub
and
adc
jnp
ror
adc
jle
adc
test
adc
bound
cld
sub
clc
adc
push
lds
push
outs
or
xchg
or
push
xchg
or
dec
clc
push
adc
cwde
or
xchg
mov
or
nop
not
push
or
lods
aam
adc
xchg
mov
push
mov
enter
adc
vfrczpd
or
jo
cmp
push
mov
in
adc
mov
xchg
adc
mov
inc
adc
cmps
or
popf
cmp
adc
test
adc
lods
or
mov
push
ror
test
movs
lods
adc
(bad)
or
fmul
in
cmp
push
adc
fisttp
mov
push
ret
fsub
cwde
adc
(bad)
or
(bad)
movs
dec
adc
leave
or
xchg
dec
adc
int
pop
or
dec
adc
repz
pop
test
pushf
lea
fcom
push
cli
or
les
xor
or
inc
stos
adc
jmp
push
in
or
push
pop
or
hlt
jmp
movs
xor
hlt
push
cld
mov
pushf
jmp
call
push
or
pop
fist
adc
or
sahf
adc
xor
jl
xchg
ret
ss
ret
adc
cmp
xchg
adc
or
push
and
xor
and
adc
and
fs
adc
sub
call
push
das
or
les
ins
push
sbb
adc
push
or
dec
pop
out
adc
pop
or
pop
or
cmp
push
inc
or
sbb
adc
inc
or
mov
or
nop
mov
push
jb
in
les
adc
jbe
and
jp
les
jge
pop
ror
cli
lock
adc
or
push
imul
mov
adc
inc
push
mov
or
int
add
push
xchg
or
push
pop
(bad)
adc
call
push
popf
or
or
push
or
fnstenv
and
push
xchg
(bad)
les
adc
mov
mov
int3
adc
mov
fsubr
mov
cwde
test
mov
enter
adc
mov
retf
mov
mov
push
mov
adc
cmps
or
dec
pop
adc
test
test
push
fimul
rol
jge
push
fisttp
adc
mov
in
(bad)
cld
imul
(bad)
or
int
jb
push
retf
push
sbb
push
iret
or
push
lock
xchg
ins
mov
mov
push
cli
or
in
cmp
adc
cld
or
jecxz
or
push
jecxz
test
add
adc
out
adc
inc
sub
push
jmp
outs
adc
in
or
sti
or
push
adc
lock
dec
mov
dec
aad
adc
xchg
je
adc
sbb
fs
adc
adc
add
int3
rcl
adc
add
pushf
add
adc
or
push
push
or
jo
or
adc
xor
call
push
cmp
les
or
dec
popf
adc
and
or
and
rcl
sub
dec
pop
sub
adc
sub
pop
adc
push
or
inc
or
aam
push
dec
or
jl
adc
dec
or
lds
push
jo
hlt
cdq
cmp
adc
ja
movs
dec
call
or
sub
adc
arpl
shr
or
push
imul
adc
outs
or
aaa
call
or
loope
adc
push
xchg
or
cdq
or
mov
adc
sahf
or
push
or
adc
test
loopne
add
adc
mov
adc
cld
aaa
adc
(bad)
or
inc
mov
mov
mov
fdiv
adc
mov
mov
push
mov
ja
push
mov
iret
adc
cmps
or
sub
or
lods
or
push
ror
cmp
aad
mov
push
fimul
pushf
push
fimul
fadd
in
loope
push
ret
or
cld
ficom
push
les
sbb
or
pop
call
or
pause
xchg
adc
repnz
cbw
mov
xchg
push
sbb
push
sti
or
js
push
cld
or
jne
cdq
adc
loope
mov
push
in
jl
jo
adc
call
jae
push
out
or
fsub
adc
adc
push
cli
mov
adc
push
or
(bad)
dec
div
nop
xchg
call
or
xchg
rcl
push
add
cmp
push
or
jo
in
adc
or
jbe
push
xor
hlt
in
rol
xor
dec
adc
cmp
je
int3
stc
adc
or
xchg
inc
adc
and
call
push
and
mov
push
sub
pushf
mov
lods
adc
sub
jl
push
push
or
push
or
pop
or
push
pop
or
inc
or
inc
or
test
pop
adc
dec
or
sbb
adc
dec
or
clc
or
push
jb
nop
fidivr
adc
jne
mov
shr
cwde
test
adc
jl
dec
dec
test
adc
popa
or
jo
push
data16
push
rcl
push
outs
or
push
js
adc
xchg
or
push
xchg
or
pushf
clc
adc
cdq
or
pushf
or
push
cmp
push
or
ret
int3
fst
push
test
fmul
cmp
adc
mov
push
cmps
adc
push
mov
or
mov
pop
inc
mov
or
mov
mov
mov
push
mov
pusha
adc
mov
adc
cmps
or
and
push
test
sub
lods
adc
scas
or
push
xor
adc
ror
les
fs
movs
stos
pop
dec
adc
(bad)
movs
jno
rcl
push
fisttp
pushf
mov
adc
ror
out
adc
test
and
adc
retf
or
iret
or
hlt
adc
lock
test
mov
stc
or
out
sub
push
cld
or
je
adc
loop
pusha
push
sbb
adc
in
fdivr
test
adc
jmp
push
out
or
lods
in
adc
adc
adc
push
add
adc
sbb
adc
push
add
adc
add
adc
push
add
adc
or
adc
or
cmp
(bad)
(bad)
adc
xor
adc
xor
push
mov
cmp
adc
cmp
aas
adc
and
adc
adc
sub
adc
sub
test
and
adc
push
add
adc
push
add
adc
pop
add
adc
pop
add
adc
inc
add
adc
inc
add
adc
dec
add
adc
dec
add
adc
jb
pusha
inc
in
push
adc
jbe
inc
(bad)
in
xor
test
test
adc
jle
clc
rol
mov
(bad)
adc
addr16
adc
push
mov
hlt
nop
adc
ins
add
adc
xchg
add
adc
xchg
add
adc
cdq
add
adc
sahf
add
adc
add
push
xchg
adc
mov
adc
lea
adc
mov
add
mov
or
xchg
clc
adc
mov
sub
call
push
mov
enter
add
adc
stos
add
adc
lods
add
adc
rol
adc
(bad)
add
adc
fadd
adc
fild
adc
ret
popa
mov
add
adc
enter
fst
push
int3
add
adc
repnz
adc
cmc
add
adc
sti
add
adc
cld
add
adc
loopne
cwde
call
adc
in
pusha
cmp
cmp
push
jmp
push
in
add
adc
adc
shr
adc
pop
add
mov
xchg
adc
sbb
or
push
push
add
push
ins
push
adc
add
xor
add
jne
sbb
push
or
shr
iret
adc
(bad)
aam
mov
push
xor
dec
enter
aaa
add
call
rol
js
adc
aas
add
fidivr
adc
and
or
adc
add
(bad)
rol
push
sub
shl
lods
adc
push
add
imul
adc
push
add
push
hlt
not
push
pop
add
jmp
add
cmp
mov
push
jp
mov
push
jl
sub
xchg
nop
adc
arpl
lds
add
jb
adc
push
push
fwait
adc
ins
add
dec
adc
fisub
les
push
xchg
add
fwait
fs
adc
fwait
add
hlt
push
add
cmps
lods
(bad)
adc
add
inc
sub
push
test
jb
call
push
mov
mov
lea
out
dec
adc
mov
fsubr
mov
cmp
test
stos
inc
mov
and
mov
or
js
xor
push
test
ins
xchg
inc
and
push
scas
add
retf
adc
rol
mov
adc
(bad)
add
scas
hlt
dec
adc
fiadd
mov
fld
outs
(bad)
les
push
ret
movs
fs
adc
les
xchg
ins
pop
adc
leave
add
mov
into
add
imul
adc
lock
repz
repz
test
push
cli
add
ins
and
mov
js
adc
loopne
je
dec
ficom
push
in
mov
or
adc
jmp
in
add
adc
out
add
adc
cld
xor
adc
pop
pop
xor
dec
adc
sbb
push
lods
sbb
push
sbb
mov
push
add
in
cwde
shl
cwde
adc
or
add
adc
and
push
push
jo
sbb
adc
xor
adc
cmp
push
into
loopne
adc
ds
add
movs
jecxz
push
and
push
sbb
push
es
clc
cmc
xchg
cld
adc
sub
fs
call
pop
hlt
mov
push
pop
cld
imul
pop
and
mov
je
pushf
mov
mov
push
inc
pop
adc
cmp
adc
inc
pop
inc
not
aam
sub
push
inc
fs
adc
jno
sbb
push
adc
jbe
and
jo
adc
js
test
clc
outs
adc
jle
jl
rcl
adc
popa
pop
jl
rcr
push
addr16
nop
shl
pop
sbb
sub
adc
outs
pop
jl
mov
adc
xchg
pop
pusha
test
push
xchg
pop
nop
xchg
test
push
adc
sahf
pop
mov
add
push
jo
adc
test
xor
adc
mov
cwde
jb
jecxz
push
lea
push
push
mov
shl
xor
push
mov
mov
jne
push
mov
cmp
push
mov
adc
push
inc
adc
cmps
pop
add
hlt
les
push
stos
pop
add
nop
lahf
adc
lods
pop
xor
aam
adc
rol
mov
mov
cli
adc
fild
shl
(bad)
adc
fadd
lods
in
or
adc
ret
test
adc
mov
adc
retf
pop
je
mov
adc
iret
pop
fsub
lock
mov
push
test
jmp
and
push
clc
pop
cmp
pusha
mov
push
std
pop
xchg
sbb
loopne
(bad)
std
mov
adc
in
mov
push
jmp
xchg
or
adc
out
pop
adc
adc
mov
inc
leave
adc
adc
cmp
or
adc
sbb
je
mov
adc
sbb
push
push
add
mov
push
pop
push
sbb
adc
or
inc
mov
push
push
int3
sbb
xor
in
ins
test
push
aaa
push
cmp
dec
mov
sbb
nop
pusha
adc
cmp
int
push
and
pop
push
test
adc
es
or
fdivr
adc
sub
adc
push
js
shl
push
push
push
add
xor
mov
push
pop
push
pushf
add
adc
pop
push
int3
rcl
pop
adc
inc
push
xor
inc
push
pusha
pop
dec
jo
push
dec
push
cld
ror
adc
cmp
push
je
sub
and
adc
jnp
test
ficom
push
jg
pop
sub
xor
fs
fadd
lods
mov
push
push
sbb
jo
sar
cmp
adc
xchg
push
cld
jno
test
push
cdq
push
test
sbb
adc
pushf
push
in
je
adc
add
pop
xchg
add
push
xchg
mov
push
mov
sub
je
adc
lea
je
add
adc
mov
jo
movs
mov
push
mov
rcl
sahf
adc
mov
dec
adc
mov
fwait
adc
mov
mov
push
movs
push
call
push
test
cmp
adc
lods
push
cwde
or
push
rol
enter
adc
aad
or
enter
fild
je
sar
push
fadd
add
in
adc
ret
push
push
xchg
rcr
adc
mov
cld
mov
push
push
iret
push
mov
cmp
icebp
push
les
test
adc
clc
push
cld
ror
adc
inc
lods
add
adc
loopne
mov
out
fcom
in
adc
jmp
cmp
push
out
push
cmp
test
adc
adc
jo
mov
add
push
sbb
clc
mov
not
push
sbb
and
push
add
ins
pushf
xor
adc
push
add
ins
fst
push
or
jl
enter
or
adc
push
xor
ins
inc
jo
adc
aaa
add
push
cmp
aam
or
adc
ds
les
push
and
mov
push
add
sbb
adc
sub
sub
lods
adc
sub
xor
and
push
push
add
pop
adc
push
add
mov
mov
push
pop
add
pop
add
(bad)
aad
push
inc
add
jo
push
inc
add
or
dec
jne
mov
push
dec
add
push
jae
rcr
movs
adc
ja
sub
js
js
adc
adc
mov
adc
nop
dec
adc
adc
adc
pop
or
adc
sbb
adc
pop
or
adc
add
adc
add
sahf
adc
or
adc
prefetch
pop
adc
xor
adc
xor
mov
push
cmp
adc
aas
or
adc
and
adc
daa
or
adc
sub
adc
sub
push
push
retf
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jb
(bad)
call
or
adc
js
inc
cwde
mov
or
adc
popa
or
adc
addr16
adc
imul
push
ins
or
adc
xchg
or
adc
xchg
or
adc
cdq
or
adc
pushf
or
adc
or
push
xchg
adc
mov
adc
mov
adc
mov
test
mov
nop
push
in
push
inc
add
lock
mov
and
enter
adc
movs
or
adc
stos
or
adc
lods
or
adc
ror
adc
aad
call
push
fmul
adc
fmul
adc
ret
out
pusha
and
push
(bad)
or
adc
retf
or
adc
int
hlt
fild
or
adc
cmc
or
adc
cli
or
adc
std
or
adc
loop
int3
mov
dec
adc
out
pop
ss
pop
adc
jmp
sub
sbb
jl
movs
into
adc
adc
lea
push
adc
or
int3
cmps
adc
sbb
les
adc
sbb
lahf
adc
add
mul
dec
adc
add
je
call
or
jg
(bad)
adc
or
fist
push
xor
sahf
js
adc
ss
dec
add
cmp
mov
cmp
cdq
adc
and
retf
les
and
movs
sbb
push
sub
jle
ficom
push
sub
fcomp
pop
imul
push
or
inc
fcomp
adc
push
or
sar
or
loop
or
push
pop
or
xor
push
inc
or
sbb
push
adc
inc
or
inc
inc
data16
dec
or
aad
mov
push
dec
or
push
mov
or
stc
cld
push
adc
jne
cwde
sub
or
repnz
mov
push
imul
pop
cmps
adc
ins
or
dec
sbb
push
xchg
or
test
or
xor
adc
cdq
or
inc
nop
test
push
sahf
or
pusha
fcomp
lods
dec
cwde
dec
adc
test
call
clc
dec
sub
dec
popa
sub
mov
push
mov
(bad)
rcr
mov
push
mov
sbb
push
mov
hlt
adc
cmps
or
cli
lods
fwait
adc
stos
or
xor
dec
adc
lods
or
out
out
adc
ror
cmp
add
push
xlat
or
xor
adc
fisttp
pushf
ins
retf
adc
fisttp
mov
push
ret
and
push
lds
sub
adc
retf
clc
nop
or
push
into
or
xlat
in
mov
or
int3
das
adc
test
push
stc
or
int
test
push
dec
cs
pusha
adc
loopne
ror
adc
out
nop
popf
cwde
push
adc
jmp
test
push
out
or
jg
jmp
dec
sbb
pop
nop
xchg
inc
adc
sbb
push
adc
dec
adc
sbb
pushf
adc
add
sbb
mov
invd
retf
adc
or
int3
sbb
enter
bsf
popa
adc
xor
push
push
enter
aaa
psubb
cmp
mov
push
cmp
or
push
and
xor
xchg
adc
daa
bswap
cmp
adc
sub
shl
seto
xor
adc
push
(bad)
lods
jo
adc
push
psubsb
jne
push
pop
(bad)
pop
sub
cwde
ins
inc
adc
inc
(bad)
dec
add
adc
inc
movaps
dec
unpcklps
adc
push
dec
cmove
jo
js
sbb
push
pop
pop
adc
jp
pushf
and
adc
jg
or
adc
push
pusha
(bad)
fcmove
fist
push
pavgb
xor
adc
imul
xchg
shl
(bad)
jo
adc
xchg
cmpxchg
xchg
mov
push
fwait
punpckhbw
shl
push
pushf
paddsb
or
xchg
test
clc
pusha
int3
lock
mov
je
adc
adc
mov
pop
lea
cld
pop
enter
mov
lods
mov
int3
adc
mov
or
push
mov
fcom
push
mov
sbb
push
cmps
paddq
pop
adc
stos
cmovs
adc
rol
adc
ror
pushf
(bad)
or
push
aam
cmp
aad
push
fisttp
or
add
adc
fisttp
cld
dec
test
adc
ror
lock
les
nop
mov
enter
adc
push
int3
(bad)
push
mov
adc
(bad)
mov
test
adc
clc
cmovo
retf
adc
std
(bad)
bound
push
adc
loop
xor
cmpxchg
pop
adc
call
mov
push
out
(bad)
dec
and
push
adc
fdiv
adc
test
adc
adc
sbb
clc
shl
sbb
adc
in
cld
not
push
push
push
loopne
mov
push
mov
cmp
or
adc
xor
js
movs
jle
push
ss
or
cmp
pop
push
cmp
adc
cmp
call
mov
push
es
enter
adc
sub
in
cld
and
push
cs
mov
push
push
push
mov
mov
adc
push
push
inc
pop
hlt
cmps
adc
pop
push
adc
pop
push
in
nop
adc
inc
push
(bad)
aam
movs
adc
inc
push
aam
add
adc
dec
push
movs
jb
cmp
push
dec
push
inc
mov
je
cwde
mov
jnp
enter
adc
jle
test
push
adc
bound
sbb
push
in
adc
ins
push
dec
ficomp
adc
xchg
push
pop
push
lods
dec
adc
xchg
push
cmp
call
push
ins
es
xor
push
popf
push
or
mov
adc
or
mov
cli
adc
xchg
push
pop
test
adc
mov
mov
push
lea
call
push
mov
dec
imul
lahf
mov
push
or
or
adc
mov
mov
push
mov
pop
adc
cmps
push
test
(bad)
push
mov
fisttp
sbb
or
nop
cmp
adc
les
aam
pop
(bad)
adc
retf
push
push
jmp
test
adc
sti
push
sub
and
adc
dec
cmp
hlt
ins
adc
loope
add
mov
adc
out
push
in
sub
adc
pop
or
ficom
lock
adc
sbb
mov
push
adc
wbinvd
loopne
cmp
adc
xor
mov
in
and
push
xor
push
mov
cmp
push
cmp
mov
xchg
xchg
adc
aas
or
push
dec
movs
adc
and
enter
adc
or
push
sub
int3
dec
mov
adc
das
or
into
adc
push
or
in
adc
push
or
enter
pop
or
loopne
adc
pop
or
push
inc
or
jl
adc
inc
or
test
adc
dec
or
xchg
adc
jae
movs
rcr
adc
je
push
scas
xor
jns
xchg
pop
cmp
push
jl
hlt
and
adc
arpl
test
dec
iret
adc
fs
add
adc
lods
mov
sub
hlt
fist
push
xchg
or
leave
mov
adc
xchg
or
add
call
push
mov
nop
retf
adc
mov
or
adc
mov
rcr
mov
movs
or
pop
adc
mov
pop
adc
mov
pushf
adc
movs
or
inc
in
rcl
push
test
enter
adc
scas
or
hlt
popa
adc
(bad)
or
mov
adc
(bad)
je
pusha
push
adc
fimul
mov
push
ret
or
inc
push
or
movs
adc
retf
or
test
push
int3
or
icebp
or
dec
adc
test
int
je
push
clc
or
push
dec
and
or
adc
loopne
or
or
push
in
xor
mov
or
mov
push
adc
lods
push
clc
and
push
adc
xchg
adc
sbb
fcomp
aaa
adc
sbb
or
cld
mov
push
add
cld
std
mov
or
or
cwde
and
or
scas
adc
xor
jo
jo
adc
xor
in
pop
int3
mov
lods
test
adc
aas
or
sbb
jecxz
push
and
movs
iret
test
adc
or
push
sub
pusha
fwait
push
adc
sub
je
xor
sub
and
push
push
or
jl
js
push
pop
or
lods
adc
pop
or
js
adc
inc
or
inc
or
inc
push
fist
push
dec
or
push
dec
or
push
jno
rcl
mov
adc
je
and
xor
adc
jnp
rol
and
adc
jle
pop
stc
pusha
cmp
push
popa
or
jo
adc
or
push
imul
std
cmp
push
outs
or
xchg
or
jae
push
xchg
or
lock
push
fwait
or
mov
pushf
or
add
push
or
in
mov
adc
xchg
or
cld
jns
push
mov
pushf
aaa
mov
or
in
loope
push
mov
sbb
les
push
mov
dec
jno
aas
adc
mov
fst
push
mov
sub
push
mov
jg
push
movs
or
std
adc
test
and
enter
or
ror
aam
jo
adc
xlat
or
sbb
push
(bad)
xor
mov
adc
fmul
mov
push
ror
mov
push
(bad)
or
div
push
retf
or
into
or
push
adc
icebp
or
push
test
in
xchg
adc
stc
or
pop
dec
adc
dec
adc
sbb
inc
ret
mov
or
jle
xor
mov
push
out
or
cmc
adc
adc
test
je
adc
push
or
xor
adc
sbb
test
test
adc
sbb
adc
add
inc
mov
sahf
adc
add
aam
pop
loopne
push
or
in
mov
adc
ud2
inc
jo
inc
adc
xor
js
fadd
sub
cmp
clc
rol
cmp
push
aas
or
add
push
and
dec
adc
daa
or
push
pop
adc
sub
jo
dec
js
push
sub
hlt
mov
pop
adc
push
or
push
or
xor
pop
or
inc
clc
dec
adc
pop
or
cld
rcl
push
inc
or
adc
adc
inc
or
fcom
adc
dec
or
mov
or
sbb
push
jb
push
push
jne
cmp
pop
adc
js
xor
rcl
push
jg
pusha
stos
fist
push
pusha
or
xchg
and
adc
or
jp
push
imul
dec
push
mov
fs
nop
or
shr
inc
lahf
xor
adc
call
push
popf
or
push
cmp
push
or
pop
pusha
pop
adc
xchg
sbb
adc
adc
mov
lock
or
mov
or
pop
pushf
adc
dec
mov
mov
rol
add
mov
(bad)
rcl
push
mov
imul
cmps
or
push
test
pop
adc
lods
or
ror
xor
sub
push
aad
movs
inc
clc
rcl
push
fmul
int3
pop
mov
or
ret
or
fsub
les
and
and
push
enter
fs
push
iret
or
jbe
scas
adc
repnz
xchg
adc
adc
test
adc
clc
or
dec
pop
imul
cld
or
push
jecxz
mov
sub
test
sub
lods
or
xchg
adc
out
or
sub
adc
adc
dec
pop
lods
sub
xor
sbb
adc
sbb
pop
out
add
push
sbb
enter
or
or
pop
or
push
or
cmp
clc
fist
push
or
and
cmp
push
xor
and
ins
cmp
push
aaa
or
sub
adc
cmp
add
dec
adc
aas
or
push
and
mov
or
push
mov
push
sub
xor
je
adc
or
cld
jge
push
push
or
in
adc
push
or
mov
or
int3
enter
pop
or
repnz
push
inc
or
push
inc
or
adc
pop
and
mov
push
dec
or
lock
or
enter
ja
dec
dec
sbb
sub
push
jl
dec
pop
in
adc
popa
or
or
push
sub
dec
popf
adc
outs
or
and
adc
nop
or
mov
adc
lock
inc
sub
adc
lahf
or
push
or
loop
jns
push
test
xor
rcl
rcr
inc
adc
(bad)
pop
adc
mov
rcr
dec
adc
mov
mov
mov
or
sar
push
mov
test
push
mov
out
push
cmps
or
in
stos
adc
stos
or
push
or
push
adc
ror
int3
jo
adc
aad
pushf
mov
fimul
cld
pop
mov
or
fmul
adc
ret
movs
enter
les
nop
push
dec
mov
lock
js
push
into
or
fst
push
repnz
cmc
or
scas
cmp
adc
stc
or
scas
js
adc
dec
jo
lock
adc
loop
clc
xchg
mov
or
leave
adc
jmp
push
in
or
adc
adc
push
add
adc
sbb
adc
pop
add
adc
add
adc
pop
add
adc
or
adc
push
add
adc
xor
adc
xor
retf
adc
cmp
adc
aas
add
adc
and
adc
and
ins
adc
sub
adc
cs
adc
push
add
adc
push
add
adc
pop
add
adc
pop
add
adc
inc
add
adc
inc
add
adc
dec
add
adc
dec
add
adc
jae
xchg
test
adc
jbe
mov
push
cmp
xor
sbb
adc
jl
xor
je
adc
pusha
add
adc
addr16
adc
push
movs
adc
ins
add
adc
xchg
add
adc
xchg
add
adc
cdq
add
adc
pushf
add
adc
add
push
xchg
adc
mov
adc
lea
adc
mov
mov
push
rcl
push
mov
js
dec
movs
adc
mov
imul
mov
jle
push
mov
(bad)
adc
movs
add
adc
test
and
push
scas
add
adc
rol
adc
(bad)
add
adc
fiadd
adc
fld
adc
ret
inc
fmul
cld
cmps
xor
adc
retf
mov
in
push
iret
add
adc
repz
adc
hlt
add
adc
cli
add
adc
inc
adc
loope
test
call
add
adc
jmp
inc
adc
out
add
adc
adc
leave
mov
cmp
enter
sbb
in
scas
adc
sbb
mov
nop
rcl
push
add
sbb
add
or
mov
push
or
(bad)
fs
push
or
rcl
push
xor
xor
rcr
pop
jo
push
cmp
ficom
adc
aas
add
sbb
jns
push
and
adc
call
lock
test
push
sub
mov
fst
push
sub
pop
adc
push
add
in
retf
push
add
ss
adc
pop
add
movs
mov
adc
pop
add
imul
adc
inc
add
mov
adc
inc
add
xchg
adc
adc
dec
add
sbb
sub
push
dec
add
outs
aam
adc
jb
aam
push
xor
and
jl
adc
jp
and
ins
xlat
adc
jge
xor
sub
adc
bound
mov
adc
fs
or
adc
imul
push
outs
add
jne
pop
adc
nop
add
or
add
call
push
fwait
add
lods
mov
add
je
adc
add
pushf
cmp
push
xchg
aas
fsubr
adc
mov
in
pusha
daa
adc
mov
dec
loopne
adc
mov
outs
xor
pop
and
adc
mov
fst
push
mov
cmc
adc
mov
cmc
adc
cmps
add
xchg
call
add
stos
lock
push
lods
add
mov
les
push
rol
pusha
lods
mov
push
aam
mov
js
push
fld
mov
fld
(bad)
enter
ret
add
jmp
adc
and
adc
enter
mov
sbb
enter
repz
mov
test
push
sti
add
push
sbb
push
inc
gs
push
loop
js
or
adc
out
xor
dec
cmp
push
call
adc
out
add
push
mov
pop
rol
aam
adc
lods
jmp
push
adc
adc
push
or
adc
sbb
adc
sbb
sar
mov
fcom
loopne
push
add
add
push
or
adc
push
or
adc
xor
adc
xor
jo
fcomp
adc
cmp
adc
aas
or
adc
and
adc
daa
or
adc
sub
adc
sub
pop
das
pushf
jo
push
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jo
and
adc
je
dec
cmps
in
adc
jnp
js
push
in
adc
jg
mov
or
adc
or
mov
or
adc
ins
or
adc
xchg
or
adc
xchg
or
adc
cdq
or
adc
pushf
or
adc
or
push
test
adc
mov
adc
mov
adc
mov
add
jo
adc
mov
pusha
cmc
lods
lahf
adc
mov
push
adc
mov
jb
push
mov
jp
push
cmps
or
adc
test
fs
cld
jmp
pop
leave
pushf
jg
push
ror
adc
aam
fsub
pop
jge
push
fmul
adc
ret
or
adc
lds
adc
enter
shl
push
int
pushf
mov
repnz
adc
cmc
or
adc
sti
or
adc
cld
or
adc
loope
or
push
or
adc
jmp
ja
push
out
or
adc
adc
or
adc
pop
or
mov
jb
push
sbb
scas
js
adc
pop
or
xchg
call
or
(bad)
ins
adc
add
into
adc
or
mov
inc
adc
push
or
pop
mov
or
mov
push
sub
adc
cmp
or
stc
adc
cmp
jo
or
adc
and
and
jmp
push
es
mov
int3
adc
sub
cmp
add
push
cs
inc
pusha
popf
adc
push
or
lahf
mov
or
aas
or
adc
pop
or
(bad)
call
or
loop
not
push
inc
or
mov
inc
or
pushf
fsub
pop
js
cdq
adc
dec
or
fiadd
push
jo
js
and
add
adc
adc
js
enter
adc
jl
jl
fsubr
adc
pusha
or
xchg
test
push
gs
retf
adc
push
xor
je
adc
ins
or
dec
and
adc
nop
or
ret
adc
xchg
or
cmp
call
push
sahf
or
sub
adc
or
push
test
cs
xchg
adc
mov
adc
adc
mov
ins
push
popa
adc
mov
adc
cmc
or
pop
cld
fst
push
stc
or
outs
and
mov
push
loope
xchg
mov
out
or
pop
xchg
lods
adc
adc
jo
adc
adc
adc
out
adc
sbb
js
fsub
push
push
add
nop
jbe
inc
adc
add
pop
jp
push
adc
or
sub
pushf
or
push
or
push
adc
xor
sub
adc
sub
adc
cmp
adc
cwde
sub
push
aas
je
push
and
shr
adc
and
daa
adc
sub
sbb
sub
adc
das
(bad)
xchg
test
adc
push
(bad)
std
or
adc
push
pmuludq
rcr
pop
(bad)
pop
inc
cmp
push
pop
ltr
movs
stos
adc
inc
(bad)
push
cld
cmp
or
call
cmovl
mov
mov
jb
enter
adc
jbe
mov
cld
int
push
jns
pop
movs
pushf
cmp
push
jl
mov
push
arpl
xor
adc
adc
data16
mov
in
push
push
mov
push
outs
bswap
and
mov
push
nop
vmread
pcmpeqb
cmp
adc
call
push
sahf
cmovl
or
sub
hlt
push
cmp
mov
rcr
adc
mov
lock
sbb
adc
mov
adc
mov
dec
or
fadd
mov
mov
push
mov
mov
pop
stos
add
adc
stos
(bad)
inc
shr
lods
(bad)
(bad)
xor
or
dec
std
adc
(bad)
pinsrw
push
fimul
lock
mov
push
fisttp
pushf
cwde
cld
mov
sub
add
adc
(bad)
(bad)
jae
cmp
push
retf
shld
jl
push
repz
xlat
movs
je
push
test
adc
stc
cvttps2pi
sbb
adc
cld
paddusb
jecxz
push
jecxz
je
xchg
push
fs
inc
mov
push
call
and
enter
adc
adc
xchg
mov
pop
push
jo
cld
push
adc
sbb
sub
mov
push
je
loopne
adc
add
xor
sub
adc
add
push
adc
or
adc
jl
adc
cmp
or
int3
mov
push
and
loopne
cwde
ins
adc
es
clc
stos
call
push
or
(bad)
repz
sub
lock
push
push
fdiv
push
push
xor
call
push
push
call
pop
push
shr
push
or
adc
inc
push
and
jp
push
dec
push
rcr
sar
push
dec
push
je
pop
(bad)
adc
jno
inc
jl
cli
adc
jbe
jo
add
js
call
push
jle
push
pop
in
adc
pusha
push
fsubr
lock
push
pushw
in
or
pop
adc
push
or
movs
mov
loopne
je
adc
nop
push
or
push
push
push
push
in
adc
fwait
push
js
mov
adc
lahf
push
cld
fstp
push
or
fmul
and
push
xchg
movs
add
mov
push
mov
adc
lea
pusha
mov
push
nop
mov
sbb
mov
nop
adc
mov
cmp
inc
pushf
fcomp
adc
mov
mov
push
cmps
push
sub
ins
xor
push
stos
push
in
jp
sub
push
lods
push
hlt
xchg
mov
push
cmps
fdiv
push
(bad)
push
movs
sub
push
adc
fisttp
in
sub
push
fisttp
lock
adc
ret
push
xor
(bad)
push
aam
xor
adc
leave
push
fcomp
int
loopne
and
adc
repnz
cld
mov
adc
cmc
push
jo
mov
adc
cli
push
sub
add
adc
std
push
ins
jmp
adc
loope
test
test
push
out
add
pop
fcom
push
jmp
hlt
and
in
push
fadd
nop
inc
adc
adc
mov
push
push
or
sbb
les
inc
lock
push
or
cmp
xchg
adc
add
jl
or
adc
add
fs
jl
adc
or
sbb
aam
adc
push
or
adc
arpl
push
xor
push
push
xor
in
ins
test
adc
cmp
mov
push
cmp
(bad)
adc
and
cld
or
and
adc
push
sub
adc
sub
js
xor
adc
push
or
push
push
or
popa
pusha
inc
adc
pop
or
loope
fist
push
pop
or
jg
push
inc
or
das
or
fs
dec
or
push
dec
or
add
retf
jb
adc
sbb
push
ja
in
jp
mov
pop
out
lock
jge
ins
dec
movs
and
int3
popa
js
adc
addr16
cmps
test
adc
push
pop
adc
outs
or
inc
cmps
adc
nop
or
test
or
fwait
or
push
pushf
or
fsub
inc
adc
or
dec
dec
out
push
test
and
xchg
repnz
mov
and
movs
mov
push
mov
xchg
fnstsw
enter
or
mov
pop
cmp
loopne
push
mov
and
push
mov
je
push
mov
jb
push
movs
or
adc
adc
test
and
adc
lods
or
ror
push
in
adc
push
aam
mov
fisttp
push
xor
adc
fisttp
call
push
ret
outs
push
pop
adc
les
pushf
iret
pushf
mov
jl
cmp
adc
into
or
(bad)
loopne
adc
icebp
or
mov
or
dec
adc
sti
or
dec
sbb
or
adc
jecxz
adc
jo
adc
in
xor
pop
stc
adc
jmp
adc
lock
push
out
or
push
adc
jl
js
adc
adc
bound
push
sbb
push
xchg
je
adc
sbb
out
push
add
and
and
adc
push
or
or
xchg
pop
mov
adc
invd
mov
push
ror
and
adc
adc
adc
push
or
adc
sbb
adc
sbb
cmp
push
add
adc
pop
or
adc
or
adc
or
xchg
push
xor
adc
xor
clc
mov
push
adc
cmp
adc
cmp
les
and
adc
and
add
pushf
adc
sub
retf
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jno
push
lahf
movs
push
adc
jbe
lock
push
jns
adc
adc
inc
mov
adc
arpl
adc
gs
adc
push
and
pushf
jbe
push
outs
or
adc
xchg
or
adc
xchg
or
adc
fwait
or
adc
pushf
or
adc
or
push
test
adc
mov
adc
(bad)
or
adc
mov
jo
test
adc
mov
lock
adc
mov
inc
adc
mov
xchg
adc
mov
mov
push
cmps
or
adc
test
cli
adc
scas
or
adc
ror
adc
aad
and
sbb
push
fisttp
adc
fisttp
adc
ror
push
les
adc
retf
mov
into
or
adc
repz
adc
test
push
sti
or
adc
dec
adc
loopne
test
cmp
push
in
push
and
scas
adc
jmp
inc
adc
out
or
adc
adc
(bad)
sbb
adc
pop
or
xor
push
sbb
loope
call
push
push
or
popf
mov
or
jae
dec
adc
add
nop
mov
or
lds
push
or
push
cld
in
mov
push
add
aaa
or
sar
jb
push
cmp
fld
jbe
push
aas
or
sar
idiv
or
push
and
jl
enter
sub
or
fist
push
das
or
imul
pushf
sahf
adc
adc
push
or
inc
pusha
xor
push
pop
or
dec
sar
rcr
push
inc
or
add
inc
or
mov
push
dec
or
int
rcl
push
dec
or
xchg
adc
adc
jo
mov
push
je
and
cwde
sbb
push
js
(bad)
adc
jl
js
push
dec
adc
popa
or
mov
gs
jnp
lods
adc
push
jb
push
outs
or
mov
lahf
adc
nop
or
xchg
adc
xchg
or
lock
jo
push
fwait
or
ds
xchg
adc
lahf
or
adc
push
or
push
xchg
cmc
call
or
push
and
adc
lea
fisubr
or
dec
in
adc
mov
adc
sub
push
mov
push
adc
mov
inc
adc
mov
std
adc
movs
or
xlat
adc
fdiv
and
adc
scas
or
or
adc
ror
mov
xlat
or
stos
sbb
push
fimul
dec
cld
scas
adc
fmul
or
or
adc
enter
pop
or
adc
add
adc
add
icebp
adc
or
adc
prefetchwt1
push
xor
adc
xor
nop
out
ins
adc
cmp
adc
cmp
clc
pop
fs
adc
and
adc
es
adc
sub
adc
cs
adc
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jb
nop
dec
and
adc
jne
rcr
and
bound
push
jge
aam
lods
rcl
pusha
or
adc
addr16
adc
xchg
or
adc
sahf
or
adc
or
movs
retf
in
ret
mov
adc
mov
adc
mov
mov
push
mov
call
push
mov
rcl
push
mov
add
mov
aam
adc
movs
or
adc
test
not
push
scas
or
adc
ror
adc
aad
cld
cmp
fcom
push
fimul
adc
fisttp
adc
lds
adc
retf
or
adc
iret
or
adc
lock
adc
hlt
or
adc
sti
or
adc
std
or
adc
jecxz
adc
pusha
xchg
push
out
dec
push
mov
adc
jmp
push
in
or
adc
adc
int3
push
or
shr
adc
sbb
add
push
sbb
rcl
push
pop
or
dec
sub
adc
or
ret
pusha
add
push
or
adc
xor
lea
adc
xor
test
fadd
adc
cmp
add
adc
cmp
lock
and
shl
push
daa
or
inc
pusha
aaa
adc
sub
in
jo
push
cs
stos
int3
cwde
adc
push
or
add
or
ror
movs
adc
pop
or
jns
jbe
push
pop
or
test
inc
or
pop
mov
adc
inc
or
add
dec
or
test
push
dec
or
jb
scas
adc
jo
mov
push
jne
mov
push
jns
and
enter
jge
sbb
out
push
bound
mov
adc
addr16
sysenter
mov
push
imul
adc
push
es
retf
xchg
or
in
jne
push
xchg
or
jmp
adc
push
call
push
lahf
or
in
mov
adc
or
push
xchg
xchg
push
mov
and
loopne
push
mov
repz
adc
mov
mov
rcr
adc
mov
xor
dec
adc
sub
mov
fcom
push
mov
mov
push
movs
mov
adc
stos
or
mov
scas
or
jecxz
ins
adc
ror
dec
or
adc
(bad)
or
call
pushf
sete
push
fimul
add
push
ret
std
add
adc
lds
cs
adc
enter
test
adc
int3
or
mov
icebp
or
cld
add
push
push
clc
or
lods
mov
and
sub
adc
out
dec
loop
mov
in
jo
adc
out
or
bound
int
push
adc
mov
pop
loope
push
adc
adc
push
sbb
or
push
addps
mov
adc
add
clc
xchg
xor
adc
add
jo
push
or
les
push
sete
xchg
adc
xor
lock
nop
inc
adc
xor
push
adc
cmp
jo
test
adc
cmp
aam
hlt
ret
and
and
pshufw
adc
sub
test
rcl
push
sub
adc
push
paddsb
invd
xchg
dec
arpl
push
pop
cmovs
pop
punpckhbw
inc
verw
inc
(bad)
jp
adc
push
dec
paddq
dec
je
push
jb
dec
shl
ficom
push
js
shl
dec
adc
jle
lock
cmp
adc
fs
loopne
add
push
push
cwde
push
inc
rcl
push
ins
bswap
aad
das
adc
xchg
pcmpeqb
xor
adc
xchg
pcmpgtb
adc
cdq
sldt
or
inc
addr16
jnp
push
or
mov
test
push
test
add
fcom
push
mov
fmul
lods
leave
adc
mov
mov
push
mov
rcl
push
dec
adc
mov
das
adc
cmps
punpcklbw
jecxz
push
test
xchg
adc
lods
(bad)
xor
ror
sbb
xor
adc
(bad)
(bad)
jo
adc
(bad)
push
push
fisttp
test
not
push
ret
imul
adc
leave
subps
xor
adc
into
(bad)
ret
adc
repz
jp
push
hlt
seto
in
mov
loopne
or
je
add
adc
in
fcom
push
pushf
adc
jmp
mov
push
out
(bad)
cmp
adc
adc
je
hlt
rcl
push
adc
cld
xor
mov
sbb
sbb
adc
sbb
dec
jecxz
retf
adc
add
dec
cmps
int3
push
adc
add
test
jl
adc
or
dec
mov
pop
adc
xor
add
lock
push
sub
loopne
loopne
adc
inc
push
jl
in
adc
dec
push
and
mov
push
jo
xor
push
ja
loopne
je
adc
jns
movs
cmp
mov
push
jle
hlt
call
pusha
push
mov
test
adc
addr16
add
movs
retf
adc
push
push
adc
outs
push
and
xor
adc
xchg
push
movs
mov
popf
adc
xchg
push
mov
lods
push
adc
cwde
push
sub
nop
repz
popf
push
mov
push
or
(bad)
enter
test
pop
nop
mov
push
sbb
mov
sbb
test
adc
mov
mov
add
adc
or
adc
pop
rcl
push
adc
adc
adc
inc
adc
sbb
adc
sbb
popf
adc
add
adc
add
test
push
or
adc
xor
adc
ss
adc
cmp
adc
aas
or
adc
and
adc
and
in
adc
sub
adc
das
or
adc
push
or
adc
push
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jb
je
adc
je
and
cmp
adc
jnp
fdiv
adc
jl
and
mov
adc
popa
or
adc
fs
adc
imul
push
outs
or
adc
xchg
or
adc
xchg
or
adc
cdq
or
adc
lahf
or
adc
or
push
xchg
adc
mov
adc
(bad)
or
adc
mov
pushf
or
test
in
adc
mov
test
fdivr
cwde
sub
push
mov
dec
adc
movs
or
adc
test
xor
push
lods
or
adc
ror
adc
aam
shl
xchg
push
fmul
adc
fisttp
adc
ret
lahf
mov
or
adc
retf
or
adc
into
or
adc
lock
adc
cmc
or
adc
clc
or
adc
cld
or
adc
jecxz
pushf
lock
push
out
ins
or
push
jmp
push
in
or
adc
adc
push
je
adc
adc
loop
push
sbb
jmp
xchg
adc
sbb
push
adc
add
pop
xor
adc
add
mov
push
or
mov
adc
or
out
adc
xor
adc
push
aaa
or
mov
dec
adc
cmp
jmp
push
push
and
cli
xor
adc
and
xor
sar
les
or
push
sub
popf
adc
push
or
or
xor
adc
push
pop
or
aaa
jl
adc
inc
or
jnp
and
push
inc
or
sbb
xor
push
dec
or
mov
pop
adc
dec
or
sbb
push
adc
jae
cwde
and
add
shl
xor
mov
lock
jg
jl
mov
adc
popa
or
lods
dec
fist
push
data16
add
imul
push
ins
or
imul
retf
xchg
or
adc
push
cdq
or
dec
int3
(bad)
adc
lahf
or
cdq
enter
or
loopne
adc
xchg
and
outs
adc
mov
mov
or
push
je
adc
mov
and
loopne
adc
mov
mov
jl
adc
mov
lods
adc
mov
cmp
push
mov
or
push
cmps
or
bound
pop
adc
test
cmp
test
adc
lods
or
(bad)
sub
adc
ror
inc
mov
adc
aam
in
pop
and
push
fimul
and
dec
xchg
test
push
ror
sub
adc
les
std
jl
adc
retf
push
rcr
adc
iret
or
xlat
lock
std
jo
adc
hlt
or
sub
push
adc
sti
or
sub
nop
adc
cld
or
cdq
push
add
pop
idiv
or
xchg
ins
xlat
adc
jmp
lock
shl
push
out
or
adc
adc
adc
sub
adc
sbb
cmp
adc
adc
pop
(bad)
retf
adc
add
xchg
outs
ins
call
push
add
dec
dec
hlt
mov
push
or
pushf
inc
mov
paddb
mov
adc
xor
cld
lock
adc
psubusb
cmp
test
adc
adc
nop/reserved
test
adc
and
pop
xor
and
mov
push
sub
sbb
shr
adc
cs
inc
adc
adc
push
(bad)
pop
test
adc
push
sets
inc
les
push
pop
bsf
push
adc
pop
wrmsr
out
cmp
push
inc
psubsb
cld
jle
push
inc
psubsb
dec
adc
dec
wrmsr
ins
mov
adc
dec
wrmsr
rcl
push
jo
lock
cld
out
push
jbe
aam
sub
push
jns
pop
push
test
push
jge
and
adc
push
popa
pmuludq
lods
clc
adc
addr16
test
adc
push
jl
push
ins
cmove
adc
nop
pavgb
xchg
push
mov
cwde
(bad)
xor
andps
or
dec
test
adc
test
mov
push
mov
adc
nop
out
push
mov
sbb
js
adc
mov
cmp
lods
xor
push
mov
mov
add
push
mov
sbb
push
mov
sub
push
mov
add
push
movs
bsf
xchg
adc
stos
(bad)
pop
test
adc
lods
addps
inc
adc
ror
aam
cld
jno
push
(bad)
(bad)
mov
fisttp
adc
(bad)
std
adc
fisttp
jl
cmp
adc
ret
adc
sub
push
lds
mov
push
(bad)
adc
retf
gs
adc
iret
jo
push
lock
push
test
adc
sti
je
push
dec
cmp
loopne
clc
push
fdivr
push
in
les
sets
out
bsf
fsub
push
jo
adc
adc
call
push
sbb
call
push
push
push
xor
pop
not
push
add
push
push
pop
push
test
sub
adc
or
mov
mov
push
push
push
add
push
test
push
xor
fsubr
pusha
(bad)
adc
ss
cwde
loop
arpl
push
cmp
aam
and
mov
add
xor
daa
push
aam
jo
adc
sub
cld
int3
enter
das
push
cwde
ret
aam
adc
push
push
or
in
popa
adc
push
push
pushf
mov
pop
push
push
push
pop
push
xor
lock
adc
inc
push
mov
push
inc
push
rol
xlat
adc
dec
push
mov
push
dec
push
(bad)
fcom
adc
jb
test
sbb
adc
ja
mov
push
jnp
push
push
jg
test
bound
sub
int3
iret
adc
gs
mov
push
imul
adc
outs
push
js
or
adc
xchg
push
mov
push
xchg
push
push
push
cdq
push
test
in
adc
lahf
push
mov
xor
add
test
fcomp
mov
lock
adc
mov
or
test
push
mov
mov
inc
mov
push
(bad)
pop
or
push
mov
ja
push
mov
movs
adc
mov
xchg
adc
movs
push
fcom
stos
push
fcom
mov
add
sbb
push
ror
push
inc
xor
push
xlat
push
xchg
inc
push
push
mov
mov
push
cmp
adc
adc
ret
cmps
and
push
cwde
test
adc
retf
push
dec
cmc
and
push
into
push
in
pop
sahf
adc
repnz
call
push
test
mov
stc
push
call
push
dec
int3
call
cwde
sbb
pop
adc
out
cwde
fwait
xchg
outs
adc
jmp
push
out
push
call
push
adc
sub
nop
adc
push
or
sbb
sbb
or
shr
dec
outs
sbb
adc
add
enter
adc
or
xor
fs
adc
wbinvd
push
and
or
and
push
push
cmp
dec
test
not
push
cmp
(bad)
adc
and
shl
or
adc
sub
xchg
pop
dec
lds
push
das
or
push
push
or
xor
push
push
or
loopne
jge
push
pop
or
sti
clc
mov
push
pop
or
push
inc
or
push
inc
or
push
or
pop
rol
adc
dec
or
lahf
rcl
adc
jb
mov
xor
ja
lock
pushf
adc
js
sub
rol
scas
lock
adc
pusha
or
push
or
imul
repnz
mov
push
outs
or
push
xchg
or
pop
mov
push
xchg
or
ja
in
adc
call
push
popf
or
lds
or
xchg
mov
mov
add
or
adc
mov
fcomp
mov
add
mov
adc
mov
mov
push
mov
loop
push
mov
jbe
push
mov
inc
adc
movs
or
lods
inc
adc
test
cmp
push
lods
or
ror
or
aam
adc
xlat
or
cmp
push
fimul
xor
mov
sub
mov
or
add
push
(bad)
or
retf
or
inc
adc
int
pop
add
or
mov
cmc
or
mov
sti
or
fldcw
adc
cld
or
adc
push
loopne
mov
push
icebp
adc
out
shl
sbb
push
or
and
adc
adc
in
pop
rol
mov
push
sbb
jo
xchg
xchg
adc
sbb
mov
push
add
or
ins
xchg
adc
pop
or
arpl
adc
or
xor
xor
adc
invd
cmp
fcom
push
xor
sbb
or
adc
or
push
cmp
dec
lock
in
adc
cmp
dec
jb
fcom
push
and
nop
push
xor
push
daa
or
jecxz
lahf
adc
sub
and
xchg
or
push
sub
test
cmp
adc
push
or
lods
inc
adc
push
or
(bad)
adc
pop
or
fisttp
adc
pop
or
jp
mov
push
inc
or
pop
pop
into
adc
inc
or
inc
jp
push
dec
or
push
dec
or
jb
xor
rcr
call
push
js
call
push
jl
xor
popa
or
fldenv
adc
or
fistp
adc
push
push
xchg
push
mov
adc
outs
or
mov
sub
or
adc
xchg
or
and
adc
cwde
or
cld
test
push
sahf
or
je
adc
or
add
scas
adc
xchg
fcomp
call
cld
cmp
jo
cmp
mov
test
cld
push
adc
mov
test
push
bound
push
mov
jo
push
mov
loopne
push
mov
cmps
adc
cmps
or
test
ins
adc
lods
or
rcr
adc
ror
clc
dec
je
adc
xlat
or
push
fisttp
cld
push
and
adc
fisttp
mov
push
ror
inc
nop
inc
adc
(bad)
or
in
push
enter
sub
adc
into
or
and
retf
adc
repnz
add
cld
sahf
add
adc
stc
or
in
repz
dec
sbb
cmp
push
loopne
xchg
pop
push
jecxz
push
out
mov
jmp
sahf
adc
in
or
fadd
adc
adc
loopne
push
movs
adc
adc
jl
rol
and
cli
adc
sbb
hlt
xor
or
push
or
push
push
or
push
push
or
pusha
adc
push
xor
dec
lods
or
adc
and
adc
adc
adc
push
or
adc
sbb
adc
pop
or
adc
add
adc
push
or
adc
or
adc
or
cli
adc
xor
adc
ss
adc
cmp
adc
sub
adc
das
or
adc
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jb
adc
lock
jbe
mov
cmp
push
jnp
sbb
clc
dec
adc
jle
mov
popa
or
adc
gs
adc
push
jae
push
outs
or
adc
nop
or
adc
xchg
or
adc
fwait
or
adc
pushf
or
adc
or
in
mov
or
adc
mov
adc
mov
sub
mov
mov
les
scas
or
adc
ror
adc
fisttp
adc
fisttp
adc
ror
push
les
adc
enter
or
iret
or
adc
lock
adc
test
push
clc
or
adc
dec
adc
jecxz
mov
push
in
lods
(bad)
jmp
rcl
push
out
or
adc
adc
inc
fdiv
adc
pop
or
sub
or
cwde
cld
stos
adc
push
or
mov
adc
add
sbb
inc
adc
add
and
push
or
data16
jb
push
or
rcl
sbb
adc
xor
in
cdq
adc
xor
cmp
enter
cmp
push
mov
sar
adc
and
cld
shl
adc
and
inc
adc
sub
mov
and
cld
dec
aam
adc
push
or
mov
push
push
or
shl
push
pop
or
scas
cld
push
adc
pop
or
popf
mov
or
outs
jl
adc
inc
or
xor
popf
adc
dec
or
lea
fdiv
js
adc
jae
and
les
adc
ja
sbb
pushf
test
push
jnp
mov
push
jg
mov
adc
bound
call
gs
loopne
rcl
push
push
mov
push
outs
or
lahf
and
adc
xchg
or
sahf
or
adc
xchg
or
fdivrp
cdq
adc
call
push
or
loopne
adc
test
pusha
je
adc
mov
lods
push
adc
push
mov
sub
add
push
mov
add
mov
cwde
jae
push
or
test
adc
mov
das
adc
mov
jle
push
cmps
or
cmp
adc
test
mov
push
scas
or
mov
sti
adc
ror
jbe
push
adc
(bad)
or
mov
stos
adc
(bad)
pop
dec
cmp
push
fmul
in
adc
push
ret
or
(bad)
loop
push
(bad)
or
inc
fs
push
leave
or
cmp
sbb
push
int
xchg
daa
ror
push
lock
push
mov
or
int
xlat
adc
sti
or
and
lods
adc
cld
or
dec
in
adc
loop
enter
adc
out
mov
hlt
stos
adc
call
xchg
adc
in
or
dec
nop
pusha
adc
adc
cmp
adc
adc
push
push
gs
adc
sbb
add
inc
add
push
push
sets
add
mov
push
pop
pcmpgtb
cmp
push
or
clc
push
inc
pop
adc
push
pcmpgtb
pop
push
adc
xor
cwde
in
sub
adc
xor
xchg
adc
cmp
rcr
aas
cmpxchg
add
push
and
add
pop
adc
daa
movaps
lods
adc
push
sub
jl
test
adc
sub
and
push
push
cmovl
fmul
adc
push
(bad)
fldenv
movaps
adc
pop
cmpxchg
inc
paddb
xchg
adc
inc
psubb
dec
js
push
dec
pshufw
adc
jb
cmp
stos
adc
jne
pushf
stos
loopne
adc
jns
mov
push
jl
xchg
mov
arpl
push
push
push
adc
gs
mov
adc
push
in
or
push
ins
unpcklps
loopne
adc
nop
pmulhuw
test
push
xchg
cmovs
nop
hlt
adc
cwde
cmovl
lahf
cmovs
or
adc
xchg
pop
push
sub
adc
mov
sbb
int3
sbb
pushf
pushf
les
fcom
lahf
adc
mov
scas
adc
mov
mov
mov
push
cmps
movups
test
fcom
scas
cmovs
ror
push
push
aam
push
mov
fisttp
adc
mov
adc
fisttp
sbb
xor
push
ret
sahf
fs
adc
(bad)
punpcklbw
pop
adc
enter
fdivr
enter
adc
icebp
paddsb
je
adc
test
push
aam
adc
clc
seto
pusha
and
mov
loopne
adc
loop
dec
mov
adc
cmp
sbb
adc
jmp
aas
adc
out
wrmsr
and
mov
push
push
push
lods
ss
pushf
adc
sbb
fs
mov
enter
adc
add
aam
je
adc
add
hlt
adc
or
ins
push
dec
push
adc
push
push
inc
test
push
xor
clc
or
ss
or
pop
clc
adc
cmp
je
les
adc
aas
push
fdiv
sub
push
and
clc
pop
fsubr
adc
es
int3
js
adc
sub
fdiv
adc
das
push
add
js
adc
push
push
cmp
hlt
mov
cwde
shr
adc
jmp
cmp
adc
inc
push
pushf
repnz
adc
inc
push
pop
cli
je
adc
dec
push
add
movs
inc
adc
dec
push
sbb
xor
adc
jo
pushf
pop
in
les
push
jne
aam
dec
adc
movs
outs
int3
int
push
jg
mov
push
bound
int3
adc
adc
push
fs
and
and
adc
imul
adc
outs
push
fcom
adc
xchg
push
dec
mov
xchg
push
int3
iret
add
mov
push
lahf
push
add
add
pusha
fcmovne
sub
push
xchg
sbb
js
adc
mov
pop
repz
or
mov
push
mov
(bad)
(bad)
cmp
adc
mov
sbb
xchg
out
adc
mov
cmp
push
mov
fcom
push
mov
push
adc
movs
push
sub
test
movs
cmp
xor
push
scas
push
mov
aam
adc
ror
and
pushf
rcl
push
aad
mov
push
fimul
test
jmp
jo
movs
fwait
adc
ror
js
and
push
les
mov
push
enter
pop
or
push
iret
push
enter
adc
repnz
clc
xor
push
adc
hlt
push
je
enter
clc
push
or
or
dec
pusha
(bad)
add
push
loopne
cld
outs
enter
out
in
inc
test
push
jmp
push
out
push
in
ins
sbb
inc
idiv
adc
push
or
xchg
clc
push
push
sbb
pop
out
inc
int
push
sbb
ret
adc
add
enter
adc
add
add
push
or
jl
ins
cmp
push
push
or
xor
les
dec
adc
or
xchg
test
adc
cmp
fcomp
sub
push
cmp
lds
push
and
cwde
sbb
jle
push
daa
or
icebp
push
cdq
adc
sub
push
push
or
ror
mov
and
push
push
or
pop
or
jecxz
and
pop
scas
mov
push
inc
or
repz
dec
adc
inc
or
mov
or
push
dec
or
test
adc
jno
int3
xor
fcom
push
jnp
mov
push
jle
mov
push
or
pop
je
adc
imul
adc
ins
or
test
adc
xchg
or
sub
xchg
or
xchg
adc
adc
cwde
or
push
pushf
or
or
pop
adc
pushf
mov
sub
push
mov
je
cwde
loop
push
mov
aam
jo
adc
mov
add
and
adc
mov
dec
mov
mov
sub
push
mov
pop
adc
mov
pop
adc
movs
or
test
test
pop
adc
scas
or
into
mov
or
aas
mov
or
cmp
push
(bad)
test
int3
call
push
fisttp
mov
push
ret
push
mov
or
fdiv
adc
push
retf
or
push
int
pop
fisttp
adc
icebp
or
hlt
or
clc
or
sar
push
dec
mov
push
loop
mov
adc
adc
in
mov
or
adc
call
or
push
out
or
arpl
ins
adc
adc
pop
pop
clc
arpl
push
adc
lods
adc
sbb
js
clc
xlat
adc
pop
or
cmp
adc
add
dec
loopne
inc
adc
push
or
mov
mov
dec
aad
inc
adc
or
push
fcmovbe
aad
push
xor
and
sub
adc
xor
nop
fsubr
test
mov
cmp
pusha
jecxz
fcom
push
and
or
sbb
adc
es
mov
sub
mov
fs
xchg
sub
adc
push
or
push
push
or
les
adc
pop
or
ins
(bad)
adc
pop
or
adc
adc
inc
or
dec
js
adc
inc
or
dec
or
jl
adc
dec
or
sbb
mov
push
jo
dec
jo
xchg
adc
je
ins
xor
or
push
js
adc
les
push
jl
or
mov
adc
bound
aam
in
adc
or
enter
push
xor
adc
fs
sbb
adc
xchg
or
gs
adc
xchg
or
fwait
or
fcom
adc
lahf
or
cmps
adc
or
adc
or
(bad)
jl
adc
mov
cld
cmc
nop
xor
push
(bad)
or
adc
mov
push
sbb
mov
or
clc
movs
adc
mov
ret
mov
aaa
adc
mov
adc
push
cmps
or
test
and
sbb
push
scas
or
mov
or
xlat
or
ficomp
xchg
adc
fimul
cld
bound
adc
fisttp
or
les
ret
or
(bad)
or
mov
leave
or
(bad)
adc
into
or
pop
push
or
xor
adc
hlt
or
fadd
(bad)
adc
stc
or
push
cld
or
push
js
adc
loope
pop
popa
aam
adc
out
sbb
sub
rcr
or
pop
inc
sbb
push
adc
sbb
dec
adc
push
or
sbb
in
mov
or
push
add
and
int3
not
push
or
add
ret
adc
ud2
inc
pop
xor
mov
push
xor
pusha
ret
sub
push
cmp
shl
or
ds
adc
and
xchg
ja
push
inc
cdq
adc
test
adc
or
push
or
and
lock
add
adc
pop
or
mov
hlt
out
jo
push
inc
or
cli
adc
inc
or
push
dec
or
(bad)
in
test
dec
aaa
loopne
adc
jae
js
je
adc
ja
test
dec
stos
adc
jp
mov
push
jg
sbb
sub
adc
bound
mov
jl
adc
or
push
adc
ins
or
ficomp
or
mov
push
lahf
or
dec
and
pop
into
loopne
adc
mov
in
fadd
adc
mov
js
clc
stc
adc
mov
push
push
mov
mov
push
mov
in
adc
mov
xchg
adc
mov
cdq
adc
cmps
or
dec
mov
push
stos
or
mov
test
push
lods
or
pop
ficom
push
ror
in
jno
std
adc
xlat
or
(bad)
inc
dec
call
xor
adc
ret
mov
lds
ror
pop
stc
adc
leave
or
sbb
adc
repz
aam
adc
test
jbe
repnz
sti
or
mov
cld
or
xor
aas
adc
loope
rol
push
out
in
nop
mov
push
jmp
dec
adc
in
or
mov
or
js
adc
sbb
push
push
push
or
adc
add
or
mov
adc
add
test
push
or
ins
add
(bad)
cld
add
push
xor
js
in
or
push
or
mov
cmp
and
mov
adc
jl
adc
and
and
lock
push
daa
or
xchg
push
sub
mov
push
das
or
rol
fdiv
or
push
push
or
jns
pushf
adc
pop
or
pop
or
pushf
adc
inc
or
cmp
adc
inc
or
shl
dec
or
add
mov
ins
lods
adc
jae
nop
adc
push
fs
push
jp
pop
add
jg
test
xor
pusha
or
add
push
addr16
movs
movs
dec
adc
push
js
add
mov
adc
xchg
or
dec
xchg
add
push
xchg
or
repz
adc
cdq
or
push
adc
adc
lahf
or
xor
jl
push
or
outs
int3
jg
push
test
fs
test
adc
mov
inc
xchg
add
adc
(bad)
pusha
mov
push
mov
pushf
sahf
dec
jmp
enter
adc
mov
push
adc
mov
inc
adc
stos
or
push
scas
or
push
adc
ror
les
xor
push
aam
test
je
push
fmul
movs
sbb
sbb
push
fimul
cmp
ror
adc
xchg
pop
cmp
adc
leave
or
test
adc
int
pop
scas
sbb
adc
repnz
test
mul
js
dec
loopne
push
dec
lock
loop
lods
push
adc
sar
adc
jmp
mov
push
out
or
adc
adc
adc
adc
sbb
add
adc
add
adc
push
add
adc
or
adc
syscall
pop
mov
jle
push
xor
adc
aaa
add
adc
cmp
adc
cmp
jmp
push
and
adc
sub
adc
sub
dec
adc
push
add
adc
push
add
adc
pop
add
adc
pop
add
adc
inc
add
adc
inc
add
adc
dec
add
adc
dec
add
adc
jb
mov
sbb
adc
je
in
movs
in
in
push
js
inc
lock
push
jl
mov
push
bound
adc
add
nop
in
push
imul
pop
sub
mov
push
xchg
add
adc
cwde
add
adc
sahf
add
adc
test
adc
mov
adc
pop
adc
mov
dec
in
call
dec
call
pusha
(bad)
xor
adc
mov
and
push
mov
daa
adc
cmps
add
adc
stos
add
adc
lods
add
adc
rol
adc
aad
loopne
cwde
scas
adc
fadd
adc
rol
push
lds
adc
leave
add
adc
int
sbb
or
xchg
xchg
adc
adc
cmc
add
adc
sti
add
adc
std
add
adc
loopne
clc
fadd
add
adc
call
mov
push
adc
jg
xor
push
adc
fcom
jle
push
sbb
adc
adc
add
xchg
adc
pop
add
test
adc
or
repnz
push
(bad)
and
movs
pop
adc
xor
or
hlt
xor
push
cmp
mov
aas
add
and
add
lahf
loopne
adc
es
pop
add
adc
sub
push
dec
hlt
adc
sub
or
push
push
add
inc
mov
adc
pop
add
rcl
aam
push
pop
add
inc
push
push
adc
inc
add
cwde
mov
adc
inc
add
cmp
adc
push
dec
add
into
or
adc
dec
add
sti
je
adc
jo
sub
sub
adc
jne
enter
adc
jle
loopne
and
adc
bound
cmp
adc
push
data16
bound
adc
imul
push
outs
add
sbb
add
push
xchg
add
imul
inc
or
cdq
add
adc
ficom
push
lahf
add
mov
add
push
xchg
iret
clc
pop
adc
mov
ins
je
adc
mov
aaa
dec
into
adc
mov
add
and
push
mov
dec
sub
mov
sbb
push
mov
popa
adc
mov
ins
adc
movs
add
aaa
int3
enter
add
ins
mov
adc
lods
add
mov
rol
jl
or
push
aam
pushf
les
pop
adc
fadd
push
jl
adc
fld
hlt
call
add
xchg
mov
add
(bad)
adc
leave
add
sub
dec
adc
into
add
jl
jmp
push
repnz
sub
adc
test
mov
add
jl
test
push
cld
add
add
inc
adc
loope
test
mov
add
pop
or
adc
in
add
mov
adc
cwde
int3
pop
pusha
adc
adc
mov
sbb
enter
adc
add
test
pushf
retf
add
int3
and
add
push
or
sub
call
pop
clc
(bad)
in
bound
push
xor
pop
inc
mov
adc
xor
imul
cmp
add
and
or
test
push
and
xor
dec
push
adc
sub
pusha
clc
movs
out
adc
sub
add
push
push
pop
sub
enter
push
pop
pusha
dec
mov
xor
pop
pop
jl
cld
js
push
inc
pop
jo
int3
sahf
adc
inc
pop
loopne
mov
push
dec
pop
mov
mov
pop
and
jo
fmul
jne
mov
dec
sahf
adc
jp
loopne
int3
xchg
adc
jg
mov
adc
pop
sbb
pop
enter
adc
push
jl
add
mov
adc
xchg
pop
pusha
nop
mov
adc
fwait
pop
test
sub
adc
popf
pop
test
movs
inc
adc
add
adc
test
push
push
mov
js
pop
jns
push
pop
js
and
ins
xor
adc
mov
adc
mov
in
adc
mov
jns
push
mov
cmp
push
movs
pop
js
push
jo
push
stos
pop
lock
fsubr
add
int3
pusha
adc
rol
adc
adc
clc
xchg
sub
adc
fadd
pusha
mov
pop
adc
fadd
add
pop
aam
in
xchg
adc
lds
fcom
pop
mov
push
iret
pop
or
xor
adc
lock
cmp
pop
cld
popf
hlt
xchg
push
cli
pop
xor
adc
adc
inc
xor
in
outs
pushf
add
push
in
pop
lock
adc
push
push
push
push
jo
enter
sbb
clc
shr
movs
mov
add
and
push
push
fadd
sbb
adc
or
cld
mov
adc
push
push
mov
push
xor
sbb
xor
jmp
mov
push
ds
and
mov
adc
and
pop
in
cmp
adc
and
pop
adc
sub
sub
rcr
adc
sub
lods
test
push
push
cwde
jns
sbb
push
push
push
sar
add
push
pop
push
shr
movs
adc
pop
push
xor
adc
adc
inc
push
mov
push
inc
push
adc
cld
cld
adc
dec
push
int3
scas
mov
adc
dec
push
cld
push
xor
push
jo
mov
push
je
mov
push
jp
mov
mov
adc
jl
mov
push
popa
push
sub
or
push
fs
pop
sbb
adc
imul
std
nop
push
adc
outs
push
test
xchg
push
pushf
scas
mov
push
mov
push
fwait
push
enter
adc
lahf
push
adc
dec
cwde
adc
add
(bad)
push
xchg
and
pushf
mov
xor
pop
add
rcl
add
mov
enter
adc
mov
push
adc
mov
rcl
push
mov
sub
push
cmps
push
sbb
test
adc
test
rcl
scas
push
shl
push
rol
fdivr
jo
adc
xlat
push
fs
aaa
adc
fld
test
adc
fadd
js
xor
adc
ret
sar
retf
mov
adc
retf
cli
sub
adc
into
push
mov
push
lock
les
cmc
push
fs
sub
push
sti
push
fsub
sbb
adc
cld
push
loopne
enter
jecxz
jo
int3
xor
push
in
mov
js
adc
call
sub
push
in
push
pop
ror
push
adc
dec
popa
xchg
sbb
push
push
add
sbb
and
mov
adc
pop
add
push
add
mov
add
inc
outs
sub
adc
or
adc
and
push
or
pop
adc
xor
push
jl
aaa
adc
aaa
add
pop
int3
dec
adc
cmp
mov
rcl
push
cmp
sub
mov
adc
and
nop
in
loopne
push
add
adc
sub
and
sub
adc
das
add
mov
push
add
push
add
fdivr
mov
(bad)
clc
adc
pop
add
jl
adc
inc
add
push
inc
add
dec
je
push
dec
add
clc
mov
push
dec
add
inc
cmp
adc
jo
hlt
test
add
jnp
cld
or
adc
jge
push
push
arpl
adc
ins
dec
adc
gs
fidivr
xchg
adc
push
in
push
ins
add
push
xchg
add
cwde
outs
adc
call
push
popf
add
loope
push
add
cs
test
sub
mov
sub
shl
push
mov
mov
push
mov
adc
pop
adc
mov
pop
pop
jl
adc
mov
adc
mov
sbb
push
mov
pop
adc
movs
add
push
hlt
sbb
push
test
hlt
adc
scas
add
nop
add
push
rol
xchg
shr
hlt
int3
xor
push
aam
xor
push
fild
add
ret
lods
cwde
rcl
push
lds
ror
cmp
push
leave
add
out
test
cld
in
inc
adc
icebp
add
dec
retf
adc
cmc
add
inc
xchg
push
cli
add
jmp
test
loop
jl
int3
pop
adc
out
test
mov
add
xchg
test
je
adc
adc
inc
sub
adc
push
add
mov
add
mov
pop
add
dec
sub
cmp
dec
xchg
adc
add
stos
adc
or
pusha
cmps
(bad)
out
push
or
push
adc
adc
push
xor
fs
sbb
adc
xor
sbb
test
adc
cmp
jl
xchg
bound
push
aas
add
les
pop
int3
sbb
adc
sub
and
loopne
adc
sub
lods
adc
push
add
fdivr
je
nop
mov
push
pop
add
(bad)
adc
pop
add
les
push
inc
add
mov
inc
add
and
sub
mov
push
dec
add
push
jbe
ror
adc
jns
loopne
add
adc
jg
sbb
add
jecxz
(bad)
adc
add
cdq
adc
imul
adc
outs
add
jg
push
xchg
add
dec
inc
adc
xchg
add
pushf
adc
fwait
add
dec
not
push
popf
add
add
dec
sbb
push
test
ins
(bad)
int3
and
xor
lods
sbb
push
mov
movs
lahf
or
adc
mov
and
cwde
jle
push
mov
call
push
mov
les
push
mov
mov
push
movs
add
sbb
call
push
stos
add
test
scas
add
cmp
push
rol
test
rcl
push
aad
aam
les
fadd
pusha
sahf
aam
adc
fild
sub
fist
push
rol
sbb
push
lds
test
enter
in
adc
icebp
add
push
test
adc
sti
add
xor
push
inc
test
movs
movs
adc
loopne
mov
push
out
add
pusha
or
push
jmp
js
(bad)
hlt
adc
in
add
push
js
adc
adc
in
dec
adc
push
adc
fwait
adc
sbb
xchg
fs
add
sub
push
add
adc
inc
adc
pop
add
inc
mov
adc
or
enter
adc
push
add
push
xor
call
push
aaa
add
push
cmp
mov
push
aas
add
push
and
xor
sbb
adc
sub
mov
adc
adc
sub
fsubr
adc
push
add
neg
and
adc
pop
add
clc
(bad)
adc
pop
add
jg
pop
adc
inc
add
test
inc
adc
inc
add
aam
push
adc
dec
add
dec
add
push
jno
xor
in
sbb
push
jbe
shl
rcl
push
jp
fs
add
adc
jle
sbb
aam
adc
pusha
add
push
add
add
adc
imul
call
outs
add
adc
push
xchg
add
xchg
add
repz
adc
cdq
add
mov
js
push
pushf
add
push
add
das
sbb
adc
xchg
pushf
xchg
mov
mov
xor
push
lea
inc
sub
adc
mov
in
add
inc
jg
pop
adc
mov
pop
adc
mov
adc
push
mov
out
adc
movs
add
sbb
push
test
in
cmp
jp
push
scas
add
lds
adc
rol
js
adc
adc
(bad)
add
push
fld
mov
push
fild
sub
jo
adc
ret
add
mov
adc
retf
out
rcl
push
int
mov
repnz
cmc
add
test
nop
push
aam
adc
inc
clc
mov
adc
loopne
dec
pusha
sbb
adc
out
mov
push
jmp
push
out
add
push
adc
and
sahf
adc
pop
add
mov
sub
cmp
adc
pop
add
xor
push
add
adc
xor
adc
pop
add
cmp
or
jo
sbb
adc
push
add
xor
xor
mov
adc
xor
adc
(bad)
adc
cmp
or
in
ficom
push
cmp
adc
inc
call
xor
push
daa
add
jl
adc
sub
sbb
das
add
xor
bound
push
push
add
fs
push
lea
push
pop
add
mov
add
push
inc
add
mov
movs
adc
inc
add
(bad)
adc
dec
add
dec
enter
dec
add
inc
adc
jo
cwde
dec
sbb
adc
jbe
cwde
cmp
jp
mov
push
jle
pushf
pop
in
ret
popa
add
ins
push
adc
data16
jno
push
imul
adc
ins
add
lock
push
xchg
add
pop
mov
push
xchg
add
add
adc
cdq
add
int3
pop
test
push
sahf
add
push
add
adc
xchg
or
fmul
push
mov
jl
mov
add
push
adc
mov
je
pop
sbb
push
mov
or
inc
movs
adc
mov
lods
adc
mov
ret
mov
or
push
cmps
add
(bad)
sbb
adc
test
pop
or
add
push
rol
enter
adc
xlat
add
xchg
adc
fadd
clc
mov
xchg
adc
fld
push
mov
ret
add
push
push
mov
fisttp
add
dec
sar
adc
int
in
call
add
loope
inc
adc
test
adc
clc
add
test
adc
inc
push
pusha
in
inc
adc
loop
pushf
inc
adc
adc
out
cld
xor
adc
jmp
push
out
add
and
adc
adc
adc
pop
sbb
adc
sbb
adc
pop
sbb
adc
add
adc
add
jle
push
or
adc
or
test
adc
xor
adc
xor
push
push
cmp
adc
cmp
dec
mov
aad
push
and
adc
es
adc
sub
adc
cs
adc
push
sbb
adc
push
sbb
adc
pop
sbb
adc
pop
sbb
adc
inc
sbb
adc
inc
sbb
adc
dec
sbb
adc
dec
sbb
adc
jo
nop
mov
je
xchg
or
movs
adc
jns
cwde
out
sub
push
jle
fmul
arpl
adc
gs
adc
imul
dec
loop
stos
adc
nop
sbb
adc
xchg
sbb
adc
fwait
sbb
adc
lahf
sbb
adc
sbb
push
xchg
adc
mov
adc
mov
adc
mov
(bad)
adc
mov
add
xor
adc
mov
add
push
mov
mov
push
mov
fcom
push
movs
sbb
adc
stos
sbb
adc
lods
sbb
adc
rcr
adc
aad
push
push
ficomp
adc
fstp
adc
rcr
push
(bad)
sbb
adc
enter
jl
adc
int3
sbb
adc
lock
adc
cmc
sbb
adc
stc
sbb
adc
call
adc
loopne
cmp
test
adc
in
and
jo
adc
jmp
push
in
sbb
adc
adc
popa
cld
jbe
push
adc
mov
cmp
sbb
iret
shr
push
or
push
je
adc
or
push
jns
not
push
xor
pop
pop
push
adc
aaa
sbb
in
cmps
adc
cmp
pushf
ins
xor
sbb
cld
rcl
and
es
adc
daa
sbb
ror
push
sub
lock
adc
das
sbb
icebp
sbb
js
sbb
inc
inc
push
cmps
adc
pop
sbb
(bad)
cld
or
push
pop
sbb
pop
mov
adc
inc
sbb
arpl
push
inc
sbb
sub
push
push
dec
sbb
rcr
adc
jae
cwde
das
aam
adc
jbe
pushf
in
and
push
js
mov
push
jle
and
adc
popa
sbb
mov
gs
lock
and
push
imul
jl
adc
ins
sbb
pop
call
sbb
cmp
loop
push
xchg
sbb
ds
adc
fwait
sbb
cdq
je
adc
pushf
sbb
out
inc
adc
sbb
jl
adc
test
mov
mov
sub
movups
(bad)
sbb
or
sbb
push
mov
adc
(bad)
mov
call
push
mov
push
adc
mov
mov
xor
dec
adc
cwde
cmp
sbb
jle
scas
adc
lods
sbb
cmp
adc
rcr
test
ror
fcomp
aam
rcl
push
ficomp
xchg
adc
ret
aaa
jl
adc
(bad)
sbb
mov
retf
sub
mov
fsubr
xchg
les
push
repnz
and
sub
push
hlt
sbb
jecxz
stos
adc
clc
sbb
adc
sbb
cmp
adc
loopne
shr
adc
out
movs
xchg
js
adc
call
xor
push
in
sbb
and
push
adc
adc
inc
sbb
push
adc
cld
xor
cmp
aam
adc
pop
pop
je
xor
adc
add
mov
dec
adc
add
and
nop
or
push
or
in
jmp
jmp
les
movs
adc
xor
xchg
icebp
xor
adc
ss
inc
daa
je
adc
cmp
add
int3
dec
adc
ds
sbb
jns
push
and
xchg
mov
or
push
es
mov
push
sub
push
sbb
das
pop
pushf
and
pop
sbb
fs
adc
mov
pop
clc
mov
pop
pop
pusha
jnp
or
adc
fcomp
adc
adc
adc
adc
mov
sbb
adc
sbb
repz
add
adc
pop
or
adc
or
adc
prefetchw
or
adc
xor
adc
xor
and
cmp
cld
adc
push
cmp
add
push
and
adc
and
sub
push
sub
adc
sub
sbb
jo
adc
push
or
adc
push
or
adc
pop
or
adc
pop
or
adc
inc
or
adc
inc
or
adc
dec
or
adc
dec
or
adc
jb
and
je
pushf
sub
adc
jnp
fadd
inc
inc
adc
jl
int3
dec
or
inc
popf
xor
adc
gs
adc
push
sub
loopne
adc
ins
or
adc
xchg
or
adc
xchg
or
adc
fwait
or
adc
pushf
or
adc
or
push
test
adc
mov
adc
mov
adc
mov
mov
cmp
adc
mov
loopne
push
daa
adc
mov
repnz
mov
das
adc
mov
cli
adc
cmps
or
adc
stos
or
adc
lods
or
adc
ror
adc
(bad)
or
adc
(bad)
adc
fisttp
adc
ror
push
les
adc
enter
js
adc
iret
or
adc
repnz
adc
hlt
or
adc
sti
or
adc
std
or
adc
loop
js
lods
jmp
push
out
adc
jmp
push
in
or
adc
adc
ret
adc
adc
call
push
sbb
jae
dec
adc
sbb
inc
adc
add
cmp
xchg
adc
add
dec
adc
or
sbb
sbb
fsubr
push
xor
or
adc
xor
rcl
push
cmp
add
adc
aas
or
shl
xlat
adc
and
jg
add
push
daa
or
lods
dec
lea
push
sub
inc
or
adc
sub
dec
xchg
push
scas
adc
push
or
mov
jp
push
push
or
pop
and
adc
pop
or
and
adc
pop
or
xrelease
push
inc
or
or
inc
or
fisub
or
inc
cmp
pop
movs
dec
jnp
push
jno
push
xchg
popa
adc
ja
pop
cmps
sub
adc
js
mov
push
jg
test
and
adc
pusha
or
push
xor
adc
outs
or
push
call
or
jl
jge
push
xchg
or
js
test
push
cwde
or
stos
lock
push
popf
or
or
or
pop
jl
adc
test
xchg
out
adc
mov
push
cmp
adc
mov
inc
js
adc
mov
jo
mov
or
sbb
mov
push
mov
xchg
adc
mov
inc
adc
mov
xor
push
movs
or
cmps
mov
adc
stos
or
jne
pop
adc
lods
or
call
ror
cmp
loopne
nop
xchg
adc
(bad)
aas
aam
adc
fimul
in
enter
ror
mov
adc
(bad)
or
bswap
cmp
push
leave
or
fcom
adc
int
aam
push
outs
adc
repnz
aaa
test
adc
hlt
or
fsub
adc
sti
or
mov
cld
or
jo
dec
adc
jecxz
mov
push
out
sbb
jmp
pop
adc
in
or
mov
adc
hlt
(bad)
les
adc
push
shld
adc
sbb
mov
nop
or
push
sbb
xor
fwait
adc
add
clc
test
push
xadd
int3
adc
or
pop
int3
sbb
adc
or
pop
adc
xor
add
and
push
(bad)
cmp
int3
push
jl
adc
ds
nop
repz
and
adc
sbb
adc
daa
mov
in
xchg
adc
sub
and
xor
push
cs
aad
out
push
push
(bad)
push
lods
inc
adc
push
cmovs
cmp
adc
pop
lfs
dec
adc
pop
pshufw
stos
adc
inc
shrd
or
push
inc
setl
dec
punpcklbw
dec
push
aas
sub
adc
jb
adc
je
xor
sbb
adc
jnp
or
pusha
adc
push
jge
or
ficom
push
bound
int3
mov
(bad)
adc
fs
mov
imul
jo
movups
ins
setl
enter
shld
pmuludq
lds
push
fwait
nop
pushf
cmovl
in
adc
or
xor
jl
push
mov
mov
js
adc
mov
hlt
mov
mov
add
int3
push
adc
mov
sub
dec
jmp
loopne
adc
mov
cdq
adc
mov
add
push
cmps
cmovo
aam
push
test
jmp
cmp
mov
adc
ror
add
lock
adc
aam
push
iret
cwde
(bad)
adc
fmul
xchg
push
fsub
adc
fisttp
inc
sbb
jo
rcl
adc
lds
lods
repz
push
retf
psubusb
iret
movups
push
cwde
adc
lock
ror
push
hlt
jo
push
sti
(bad)
and
xor
sub
mov
adc
loopne
jl
adc
adc
in
sbb
push
or
push
jmp
push
in
shld
js
push
adc
hlt
sub
int3
std
dec
rcl
sbb
int3
ror
adc
pop
push
pushf
add
pop
adc
add
sbb
or
adc
add
cmp
aam
adc
or
dec
in
mov
sbb
mov
clc
nop
add
adc
aaa
push
mov
test
adc
cmp
xor
adc
ds
pusha
xchg
inc
sub
push
and
loopne
or
adc
daa
push
cmp
shl
push
sub
dec
mov
cs
pusha
mov
adc
push
push
dec
pop
fsubr
adc
push
push
dec
push
pop
push
sbb
pop
push
push
retf
adc
inc
push
add
aam
adc
inc
push
push
and
sbb
push
dec
push
test
or
adc
dec
push
clc
(bad)
and
adc
jb
push
(bad)
in
adc
je
movs
(bad)
sub
push
jp
shr
fs
adc
jge
cmp
jbe
push
pusha
push
adc
mov
push
addr16
enter
adc
imul
adc
outs
push
push
push
nop
push
sub
dec
adc
push
xchg
push
jl
push
cli
adc
call
push
popf
push
dec
(bad)
loopne
adc
or
dec
in
adc
xchg
sub
mov
js
in
adc
mov
pop
xchg
mov
push
or
and
push
mov
push
in
call
push
pusha
lods
adc
adc
mov
out
adc
mov
and
mov
cld
mov
adc
lods
push
xchg
mov
jns
push
ror
or
or
adc
(bad)
push
fcom
test
push
fmul
lods
int
in
adc
fisttp
je
pop
xchg
push
ret
push
or
sbb
adc
les
pop
and
adc
retf
jp
sbb
push
int3
push
mov
enter
repz
js
mov
sub
sti
push
loopne
les
or
stos
adc
loopne
mov
in
dec
push
pushf
adc
sub
adc
out
push
pop
cmp
or
mov
int3
icebp
mov
or
xchg
ins
cmp
push
sbb
dec
jnp
dec
adc
add
loopne
sub
or
call
or
lods
fst
push
push
or
bnd
or
push
xor
mov
push
cmp
in
add
adc
or
pusha
ficom
push
and
jl
sbb
adc
daa
or
sub
push
push
das
or
out
and
push
push
or
scas
adc
push
or
dec
adc
pop
or
push
fdivr
push
pop
or
fsubr
push
inc
or
sub
and
push
inc
or
test
adc
dec
or
push
and
pop
mov
je
fsubr
push
jbe
sub
cwde
mov
js
pop
adc
enter
adc
bound
cwde
test
xchg
adc
or
and
adc
imul
xor
adc
ins
or
sub
push
xchg
or
sti
test
ret
adc
cwde
or
xchg
push
sahf
or
popa
rcl
fld
or
mov
popf
adc
mov
cld
xor
adc
mov
jo
test
adc
mov
sar
or
push
mov
movs
adc
mov
repnz
mov
add
push
movs
or
cmp
adc
stos
or
lods
or
push
ror
ins
push
xor
adc
xlat
or
pop
imul
stc
test
adc
fisttp
cmp
xor
push
ret
or
(bad)
or
pop
imul
enter
sbb
dec
fidiv
adc
icebp
or
push
adc
test
adc
clc
or
(bad)
adc
dec
pushf
loope
retf
loope
int3
xor
jns
push
out
fcomp
lods
adc
jmp
push
adc
out
or
and
mov
push
pop
or
fsub
pop
cmps
call
or
push
lods
dec
adc
add
pop
int
and
push
add
adc
mov
inc
rcl
push
or
adc
push
xor
js
dec
and
push
or
cmp
cmp
or
adc
aas
or
fs
adc
and
mov
and
adc
and
or
push
sub
mov
push
das
or
cmp
push
push
or
fld
js
test
adc
pop
or
add
xchg
gs
or
xor
adc
inc
or
dec
or
hlt
adc
adc
dec
or
lock
adc
jo
ror
inc
push
adc
jbe
mov
push
jp
shl
or
lods
xor
jnp
push
adc
data16
push
imul
icebp
lods
movs
adc
outs
or
out
test
adc
xchg
or
push
xchg
or
cwde
or
and
loop
push
sahf
or
or
push
or
jns
cmps
adc
test
jo
pushf
or
push
mov
les
fadd
push
lea
sub
and
adc
mov
movs
out
not
push
mov
push
ins
lods
rcl
push
mov
bound
push
mov
and
push
mov
ins
adc
cmps
or
je
adc
test
enter
or
scas
adc
ror
pop
sub
aad
enter
adc
fisttp
xor
call
push
fisttp
inc
in
mov
or
(bad)
or
push
retf
in
call
sar
pusha
adc
repnz
mov
adc
cmc
or
sub
adc
sti
or
push
mov
adc
dec
push
sbb
aas
adc
loopne
mov
call
or
stc
inc
imul
jmp
aaa
adc
in
or
adc
inc
adc
adc
push
or
xor
push
sbb
pop
and
jnp
push
push
or
push
adc
add
ror
ficom
push
push
or
or
loopne
mov
or
push
loope
push
xor
and
rcl
xor
jo
adc
cmp
or
aas
or
cwde
xor
push
and
ror
or
push
sub
pop
ds
adc
sub
or
mov
or
push
or
xchg
pushf
adc
or
push
pop
or
shl
adc
and
push
inc
or
(bad)
dec
repz
dec
or
or
adc
dec
or
xor
adc
jbe
or
sbb
adc
jns
pop
(bad)
xor
adc
jge
push
push
bound
cmp
pusha
jl
push
imul
repz
adc
ins
or
jbe
push
xchg
or
call
mov
adc
call
push
popf
or
or
xor
dec
adc
test
and
add
mov
push
(bad)
or
mov
in
add
adc
mov
hlt
and
push
mov
js
push
mov
lods
adc
mov
cmc
adc
cmps
or
cmp
pop
add
adc
lods
or
push
ror
aam
sub
adc
aad
test
cmp
adc
fmul
in
jns
and
push
ret
or
nop
inc
movups
les
fsub
add
adc
retf
or
repz
push
mov
adc
hlt
or
cli
or
push
in
sar
loope
push
jmp
xor
push
out
or
pop
xor
push
sbb
hlt
les
sub
rol
adc
or
jl
aam
adc
das
or
nop
retf
pop
or
mov
inc
or
and
adc
dec
or
adc
push
jae
push
push
je
int3
int
js
push
arpl
pushf
push
jl
adc
or
imul
adc
adc
xchg
or
adc
adc
or
shl
adc
hlt
cmp
push
mov
inc
push
inc
int3
adc
mov
sbb
push
movs
or
push
test
pushf
call
movs
xor
dec
adc
ror
hlt
loope
pop
adc
xlat
or
dec
mov
adc
fimul
clc
xchg
lock
test
add
adc
ror
pop
lods
fwait
adc
les
inc
sbb
mov
rcl
adc
iret
or
pop
jl
adc
repz
hlt
or
cli
or
cld
lods
mov
mov
in
adc
jecxz
or
dec
cmp
push
in
in
xchg
dec
adc
call
xor
push
in
or
push
adc
adc
push
add
adc
sbb
adc
sbb
cld
arpl
mov
lods
mov
adc
push
add
les
push
or
adc
or
inc
imul
adc
add
push
xor
add
rcl
push
cmp
adc
aas
add
adc
and
adc
es
adc
sub
adc
das
add
adc
push
add
adc
push
add
adc
pop
add
adc
pop
add
adc
inc
add
adc
inc
add
adc
dec
add
adc
dec
add
adc
jb
pop
jmp
movs
jnp
test
push
js
pop
daa
aam
adc
jle
in
xchg
and
push
popa
add
adc
addr16
adc
push
sbb
pop
jle
push
ins
add
adc
xchg
add
adc
fwait
add
adc
popf
add
adc
add
and
and
je
les
push
mov
adc
mov
sub
jb
push
mov
sar
movs
push
adc
mov
test
push
mov
adc
movs
add
adc
stos
add
adc
scas
add
adc
rol
adc
aam
in
les
adc
fiadd
adc
fild
adc
rol
push
les
adc
leave
add
adc
int3
add
adc
repnz
adc
test
xchg
adc
mov
push
cld
add
adc
loop
lods
stos
cwde
xor
push
out
mov
fadd
push
jmp
adc
in
add
adc
adc
mov
adc
mov
test
lods
sbb
imul
pop
add
(bad)
jl
adc
add
mov
add
cmp
int3
mov
sbb
xchg
jnp
push
(bad)
add
ror
clc
cwde
mov
adc
xor
in
sbb
adc
cmp
mov
sbb
sar
adc
daa
add
mov
sub
fcmove
jl
push
cs
bound
mov
push
push
add
cli
pop
jno
push
push
add
es
push
pop
add
and
add
xlat
sbb
adc
inc
add
or
add
or
push
dec
add
mov
push
adc
dec
add
addr16
adc
jb
jo
push
fst
push
jne
and
jp
inc
cld
clc
push
adc
jge
les
fmul
push
arpl
xchg
push
adc
data16
add
mov
push
xchg
add
das
adc
adc
add
adc
mov
mov
(bad)
push
fdivr
adc
hlt
push
adc
and
adc
or
adc
adc
shr
adc
sbb
mov
hlt
adc
push
or
sub
xlat
adc
mov
test
add
push
dec
or
sbb
lods
or
xor
mov
call
push
aam
dec
fdiv
mov
test
in
adc
push
or
pop
hlt
adc
pop
or
aaa
push
or
mov
inc
or
dec
or
adc
jo
fadd
mov
push
gs
movs
(bad)
and
adc
imul
jle
out
push
stos
push
pop
rcl
dec
adc
scas
push
sub
std
adc
ror
inc
and
or
push
sbb
cwde
xor
push
and
push
(bad)
adc
jmp
and
lock
adc
in
push
xor
or
imul
mov
and
in
xlat
adc
or
je
(bad)
adc
dec
or
sahf
or
mov
or
pop
mov
loopne
lock
push
mov
dec
adc
ror
and
call
dec
adc
mov
adc
out
inc
cs
inc
pop
push
pop
sub
pop
inc
push
divps
push
cs
pop
push
pop
sti
fcom
push
or
pop
int
adc
push
or
pop
pop
inc
pop
push
push
call
add
pop
inc
pop
push
pop
inc
pop
push
pop
inc
pop
push
jae
cwde
in
sbb
and
scas
loope
adc
out
leave
in
pop
add
or
(bad)
pop
inc
pop
push
pop
inc
pop
push
adc
mov
(bad)
loope
loop
icebp
adc
leave
adc
adc
inc
pop
push
adc
push
push
push
or
push
(bad)
in
dec
pop
inc
or
pop
inc
pop
push
stc
push
or
sbb
push
push
pop
inc
pop
push
pop
inc
pop
push
or
inc
jmp
pop
pop
push
adc
sti
pop
inc
pop
push
pop
inc
pop
push
pop
in
pop
add
inc
adc
inc
pop
push
pop
inc
pop
push
pop
fcomp
adc
pop
push
pop
inc
pop
push
push
sbb
adc
adc
scas
pop
push
jmp
push
pop
inc
pop
push
xchg
jecxz
push
adc
or
pop
push
outs
leave
pop
nop
pop
inc
or
pop
inc
pop
push
pop
inc
pop
push
out
ficomp
or
fcmovb
or
or
adc
bound
add
adc
pop
inc
pop
push
pop
inc
pop
push
mov
pop
push
out
inc
retf
inc
pop
push
pop
inc
pop
push
pop
scas
pop
push
jmp
push
out
ficomp
or
sti
or
in
leave
sub
or
stos
pop
loopne
pop
inc
adc
pop
inc
pop
push
pop
inc
pop
push
mov
pop
push
adc
push
pop
inc
pop
push
pop
xor
cmc
adc
adc
pop
inc
pop
push
pop
inc
pop
push
pop
inc
pop
push
or
adc
xchg
adc
pop
adc
push
pop
inc
pop
push
pop
inc
pop
push
add
pop
mov
and
pop
xlat
adc
xchg
pop
inc
adc
inc
pop
push
pop
inc
pop
push
or
pop
cmp
pop
push
xchg
cld
pop
push
rol
pop
inc
pop
push
pop
inc
pop
push
out
pop
xor
inc
test
inc
pop
push
pop
inc
pop
push
pop
and
pop
inc
call
pop
push
pop
inc
pop
push
xchg
and
lea
push
call
pop
push
or
adc
mov
or
out
inc
call
inc
pop
push
(bad)
mov
jmp
div
push
pop
(bad)
pop
push
fadd
das
fiadd
ds
pop
inc
pop
push
mov
ret
xor
dec
pop
inc
pop
push
pop
mov
or
fistp
pop
push
pop
inc
pop
push
pop
inc
pop
push
add
adc
push
sbb
push
pop
inc
(bad)
out
pop
inc
pop
push
push
pop
pop
push
or
mov
xor
push
retf
fs
pop
inc
pop
push
pop
inc
pop
push
ss
pop
push
pop
inc
pop
push
pop
inc
pop
push
add
pop
inc
add
inc
pop
push
pop
sub
pop
inc
or
pop
inc
pop
push
xor
adc
pop
push
pop
inc
pop
push
or
cmp
pop
push
pop
inc
pop
push
pop
inc
pop
push
and
adc
pop
push
or
cmp
pop
push
pop
inc
pop
push
xchg
lock
push
mov
les
out
inc
push
pop
inc
pop
push
pop
inc
pop
push
pop
stos
pop
push
adc
sbb
adc
adc
loop
push
lahf
inc
adc
pop
pop
inc
adc
inc
pop
push
pop
and
pop
inc
out
pop
inc
pop
push
pop
inc
pop
push
sbb
adc
ret
pop
push
push
or
xor
pop
push
push
sbb
pop
loop
rcl
or
pop
push
pop
inc
pop
push
pop
out
rcl
outs
iret
xchg
pop
inc
pop
push
mov
in
adc
pop
inc
pop
push
pop
sub
pop
inc
push
jg
inc
pop
push
pop
inc
pop
push
push
or
sbb
pop
inc
push
das
pop
inc
pop
push
sbb
pop
inc
jb
pop
inc
pop
push
pop
inc
pop
push
pop
loop
rcl
or
pop
push
into
ret
adc
sbb
push
push
or
adc
pop
inc
pop
push
pop
inc
pop
push
xchg
inc
ds
pop
and
pop
inc
data16
inc
pop
push
pop
inc
pop
push
inc
inc
sub
pop
push
in
cld
pop
adc
sbb
xor
pop
push
pop
inc
pop
push
xor
and
inc
adc
inc
pop
push
pop
or
push
or
adc
popa
or
pusha
adc
adc
adc
dec
pop
inc
pop
push
pop
add
push
inc
dec
pushf
xor
adc
pop
push
pop
inc
pop
push
xchg
xor
and
rcr
dec
pop
inc
pop
push
push
rcr
sub
pop
inc
inc
aas
pop
inc
pop
push
pop
inc
pop
push
loope
or
pop
push
pop
inc
pop
push
adc
adc
push
lods
pop
(bad)
adc
pop
push
pop
inc
pop
push
fistp
pop
inc
loop
pop
inc
pop
push
pop
inc
pop
push
or
sub
es
aas
push
inc
xor
inc
pop
push
pop
sub
pop
inc
or
inc
pop
push
pop
inc
pop
push
push
sbb
xor
pop
push
pop
inc
pop
push
pop
inc
pop
push
add
add
inc
pop
push
pop
and
pop
inc
push
aas
pop
inc
pop
push
pop
inc
pop
push
ss
pop
push
pop
inc
xor
and
pop
inc
push
das
pop
inc
pop
push
ss
pop
push
pop
inc
and
inc
pop
push
mov
or
pop
mov
or
(bad)
pop
inc
pop
push
out
dec
pop
push
pop
inc
pop
push
pop
inc
pop
push
and
mov
pop
adc
sbb
out
fcmovb
lahf
push
aam
cdq
pop
inc
or
pop
inc
pop
push
pop
inc
pop
push
pop
inc
out
pop
pop
inc
pop
push
pop
inc
pop
push
and
mov
pop
(bad)
cld
adc
mov
or
(bad)
pop
inc
pop
push
out
dec
pop
push
pop
inc
pop
push
mov
dec
and
leave
out
fcmovb
iret
push
aam
cdq
pop
inc
or
pop
inc
pop
push
pop
inc
out
pop
pop
inc
pop
push
mov
dec
and
leave
popf
adc
ss
mov
xchg
add
adc
inc
pop
push
pop
inc
pop
push
push
inc
pop
loopne
inc
pop
push
pop
inc
pop
push
(bad)
mov
xchg
xor
adc
inc
pop
push
push
inc
pop
loopne
inc
pop
push
pop
inc
pop
push
pop
add
sbb
out
leave
in
fiadd
loopne
scas
out
leave
in
repnz
loop
inc
pop
push
pop
inc
pop
push
cmp
pop
inc
repnz
pop
add
add
adc
inc
pop
push
pop
inc
pop
push
nop
inc
adc
pop
inc
pop
push
pop
loopne
push
adc
pop
push
pop
inc
pop
push
mov
pop
push
adc
push
pop
inc
pop
push
pop
outs
pop
push
pop
nop
push
pop
push
cmp
pop
push
pop
inc
pop
push
sub
sub
adc
sbb
cmp
adc
or
pop
push
pop
add
adc
in
aam
nop
and
cld
sbb
pop
inc
pop
push
pop
inc
pop
push
push
stc
pop
push
push
inc
adc
pop
inc
pop
push
push
or
adc
fild
out
or
js
pop
inc
pop
push
pop
inc
pop
push
ds
pop
push
pop
inc
loop
pop
jmp
push
or
mov
pop
inc
pop
push
ficomp
pop
lods
push
or
adc
pop
inc
pop
push
push
cld
pop
xor
pop
push
pop
inc
pop
push
cmp
pop
push
or
adc
inc
pop
push
add
add
or
adc
inc
pop
push
pop
inc
pop
push
add
push
pop
inc
adc
inc
pop
push
pop
inc
pop
push
add
mov
pop
inc
pop
push
pop
inc
pop
push
pop
(bad)
fstp
xor
cmp
adc
adc
add
and
sbb
loop
xor
les
push
sub
inc
adc
inc
pop
push
pop
mov
inc
adc
cmp
not
lock
pop
inc
adc
inc
pop
push
add
loop
rcl
loop
rcl
or
pop
push
into
ret
sub
pop
push
cmp
sti
fadd
das
(bad)
paddusb
inc
push
push
pop
inc
pop
push
fild
pop
rcr
push
pop
repz
push
xor
add
sbb
or
in
repnz
pop
add
adc
inc
ds
push
pop
or
sub
xor
rcr
aam
adc
sbb
pop
inc
adc
pop
inc
pop
push
pop
inc
pop
push
xor
rcr
pop
push
pop
inc
pop
push
pop
inc
pop
push
std
cmp
sbb
inc
leave
adc
pop
push
sbb
pop
inc
adc
pop
push
(bad)
cld
pop
xor
pop
push
push
pop
pop
push
adc
or
pop
push
pop
inc
pop
push
pop
sub
aas
sbb
das
pop
inc
xor
inc
pop
push
pop
sub
repz
or
inc
add
pop
push
pop
inc
pop
push
or
pop
inc
pop
push
pop
inc
pop
push
add
push
pop
inc
pop
push
or
call
loopne
adc
pop
inc
(bad)
dec
pop
inc
pop
push
ds
pop
push
pop
inc
loop
pop
inc
pop
push
pop
or
sub
pop
adc
xor
push
add
jg
inc
pop
push
pop
inc
pop
push
loop
fimul
pop
inc
pop
push
ds
pop
push
pop
inc
loop
pop
inc
pop
push
pop
or
sub
pop
adc
xor
sbb
cmp
in
pop
inc
bound
inc
pop
push
pop
ret
pop
push
aam
and
jl
cmp
pop
push
ds
pop
push
pop
inc
loop
pop
inc
pop
push
pop
inc
pop
push
push
xchg
pop
sbb
add
aas
pop
in
pop
inc
jb
pop
add
sbb
pop
inc
bound
inc
pop
push
pop
scas
pop
push
adc
ds
push
or
or
pop
inc
push
jg
inc
pop
push
pop
inc
pop
push
jno
ss
inc
push
outs
pop
inc
pop
push
popa
and
add
inc
push
outs
pop
inc
pop
push
pop
inc
pop
push
mov
ss
inc
out
pop
inc
pop
push
lahf
adc
adc
mov
xor
pop
inc
adc
pop
inc
pop
push
sbb
pop
inc
adc
pop
push
pop
inc
pop
push
adc
pop
mov
adc
push
pop
inc
pop
push
push
mov
pop
inc
pop
push
pop
inc
pop
push
pop
inc
pop
push
loope
ds
push
pop
or
or
adc
loope
ds
pop
inc
pop
push
pop
or
or
adc
xor
push
add
adc
not
clc
int3
pop
inc
adc
inc
pop
push
pop
and
pop
inc
push
lahf
pop
inc
pop
push
pop
inc
pop
push
xor
rol
adc
push
ins
fmul
mov
adc
adc
adc
mov
xor
pop
inc
push
push
pop
inc
pop
push
inc
and
dec
pop
inc
(bad)
out
pop
inc
pop
push
mov
pop
push
adc
push
pop
inc
pop
push
pop
inc
pop
push
push
ins
pop
cmp
pop
push
pop
inc
pop
push
loope
ds
push
pop
inc
pop
push
data16
pop
xor
pop
push
pop
inc
pop
push
adc
inc
pop
push
pop
inc
pop
push
pop
and
pop
inc
(bad)
out
pop
inc
pop
push
push
pop
pop
push
mov
mov
pop
inc
adc
pop
inc
pop
push
pop
inc
pop
push
jno
ds
push
or
or
adc
or
das
leave
mov
cmp
fist
pop
inc
pop
push
pop
inc
pop
push
pop
push
pop
push
sub
das
fist
pop
inc
pop
push
pop
push
pop
push
pop
sar
pop
mov
and
pop
inc
pop
push
ss
pop
push
pop
inc
or
inc
pop
push
pop
inc
pop
push
sub
pop
push
ds
pop
push
pop
inc
cmp
inc
pop
push
pop
inc
pop
push
fiadd
push
adc
adc
inc
pop
push
fild
pop
ror
clc
sbb
pop
inc
pop
push
sbb
pop
push
pop
inc
ret
inc
pop
push
pop
inc
pop
push
add
push
add
inc
add
bound
push
pop
inc
pop
push
pop
inc
pop
push
and
xor
inc
pop
push
pop
inc
pop
push
pop
sub
pop
inc
push
pop
ret
pop
push
out
repnz
std
pop
inc
out
loope
inc
pop
push
pop
inc
pop
push
sbb
fild
std
and
(bad)
(bad)
pop
inc
adc
pop
push
pop
sub
pop
inc
or
inc
pop
push
dec
sbb
cmp
pop
push
pop
inc
pop
push
add
sbb
xor
xor
pop
push
pop
and
pop
inc
jmp
inc
pop
push
cmpps
repnz
pop
push
or
pop
adc
sbb
xor
add
inc
pop
push
pop
and
pop
inc
ret
inc
pop
push
pop
inc
pop
push
(bad)
adc
pop
or
or
or
or
adc
pop
inc
pop
push
cwde
mov
or
mov
pusha
push
add
aad
aam
or
or
(bad)
iret
aad
mov
or
out
adc
or
fisubr
mov
jg
add
and
cmp
into
jae
add
jae
mov
xor
imul
int3
push
cld
or
mov
pop
xor
out
jae
mov
mov
(bad)
cdq
sub
adc
mov
xchg
retf
(bad)
lods
jecxz
loopne
jg
push
dec
xor
ja
or
xchg
xor
cmp
and
dec
cmp
push
push
push
dec
add
sbb
inc
cmp
mov
dec
out
repz
xchg
pop
dec
push
cs
repz
scas
inc
and
sub
leave
shl
mov
cld
mov
sbb
mov
(bad)
mov
and
push
ds
cli
push
and
push
out
(bad)
dec
push
cs
cli
mov
ret
xchg
pop
mov
push
in
adc
mov
push
aad
pop
mov
adc
xchg
and
add
mov
iret
icebp
dec
fcmove
mov
mov
ror
sbb
mov
(bad)
cdq
push
inc
inc
rcr
pop
sbb
pop
push
and
or
push
fiadd
pop
ret
pop
and
dec
in
ficomp
sub
inc
out
pop
fdivr
and
sbb
pop
cmp
pop
fld
or
je
push
dec
dec
(bad)
pop
pop
mov
inc
inc
mov
gs
sbb
lock
pop
jmp
push
and
out
jnp
mov
ins
int
lds
sub
xchg
fs
inc
bound
lea
or
(bad)
xor
popf
xchg
repnz
fld
pop
gs
sbb
jl
loope
loopne
in
dec
(bad)
lds
push
(bad)
stc
(bad)
hlt
stos
aaa
in
dec
cdq
or
lods
jbe
pop
push
adc
pop
das
and
pop
pop
cmp
mov
cmp
dec
xor
xor
imul
das
cwde
es
inc
xlat
into
cmp
out
dec
sbb
cmc
pop
shr
sbb
xchg
add
fbstp
(bad)
in
in
sbb
fsub
jmp
adc
dec
pop
xchg
(bad)
push
pop
push
aad
lock
leave
clc
dec
sub
push
popa
xlat
sbb
rcl
sti
xchg
sub
call
cmp
cmps
sbb
ret
loopne
test
int3
iret
movs
ret
xor
adc
dec
sbb
xchg
dec
push
xchg
(bad)
inc
xor
sahf
clc
dec
cmp
fld
sbb
sub
mov
xlat
jmp
test
inc
sub
jmp
fldl2e
add
xchg
fwait
pop
jp
(bad)
push
sub
call
cmp
cmps
sbb
ret
loopne
mov
jg
retf
int3
(bad)
xchg
ret
xor
adc
dec
sbb
xchg
dec
push
xchg
(bad)
xchg
out
xor
mov
clc
dec
cmp
fld
sbb
sub
mov
xlat
jmp
inc
lock
sub
jmp
fldl2e
add
xchg
fwait
dec
js
call
call
cmp
cmps
sbb
ret
loopne
add
mov
ret
xor
adc
dec
sbb
xchg
dec
push
xchg
(bad)
fwait
xchg
int
inc
push
sahf
clc
dec
cmp
fld
sbb
sub
mov
xlat
jmp
add
inc
sub
jmp
fldl2e
add
xchg
fwait
mov
mov
adc
cmp
cmps
sbb
ret
loopne
std
cli
jg
retf
int3
stos
lods
ret
xor
adc
dec
sbb
xchg
dec
push
xchg
(bad)
in
xor
sahf
clc
dec
cmp
fld
sbb
sub
mov
xlat
jmp
aam
inc
sub
jmp
aad
add
cdq
fwait
hlt
jnp
(bad)
sti
xor
call
cmp
mov
jmp
jg
leave
int3
aaa
lods
ret
xor
push
inc
sbb
dec
pop
xchg
(bad)
fld
xor
leave
nop
inc
jmp
mov
rcl
sti
push
mov
not
leave
fistp
arpl
sbb
ret
loopne
mov
pop
cmp
shr
xor
sbb
dec
sbb
fwait
dec
push
xchg
(bad)
pop
jae
xor
add
dec
xor
(bad)
sub
mov
mov
mov
fiadd
inc
jmp
mov
rcl
clc
jp
shl
movs
leave
fistp
arpl
sbb
ret
loopne
popf
jmp
imul
xchg
cmp
shr
jne
sbb
fwait
dec
push
xchg
(bad)
repz
sahf
cmp
clc
dec
xor
(bad)
sub
mov
mov
mov
inc
lock
dec
leave
nop
inc
jmp
mov
rcl
cli
jmp
fistp
arpl
sbb
ret
loopne
and
lods
repz
into
shr
jmp
fwait
dec
push
xchg
(bad)
into
dec
jae
std
test
cmp
clc
dec
xor
(bad)
sub
mov
mov
mov
pop
add
inc
dec
leave
nop
inc
data16
fwait
repnz
popf
and
cmp
(bad)
clc
dec
cmp
popa
ret
loopne
shr
arpl
lods
mov
into
fcmovne
xor
pop
inc
jne
pop
adc
shl
test
fisttp
ins
cmp
cli
mov
out
add
jge
and
inc
dec
leave
nop
inc
push
push
popa
fwait
repnz
popf
ins
addps
(bad)
clc
dec
cmp
popa
ret
loopne
popa
retf
enter
into
fisttp
xor
pop
inc
jne
pop
adc
shl
inc
in
fisttp
ins
cmp
cli
mov
out
add
push
mov
fs
dec
leave
nop
inc
push
push
popa
fwait
repnz
popf
ds
pop
sub
(bad)
clc
dec
cmp
popa
ret
loopne
sub
lods
retf
clc
dec
outs
cmp
sbb
in
cli
shl
jle
retf
retw
xor
push
inc
sbb
mov
jp
xlat
clc
cmp
mov
cmp
cli
xlat
loop
add
lock
sub
or
xchg
repnz
adc
xor
dec
outs
cmp
sbb
in
cli
and
int3
(bad)
dec
ret
xor
push
inc
sbb
mov
jnp
xlat
sti
push
test
sti
xor
cmp
ret
loopne
aad
pop
and
in
jmp
sub
cmp
sbb
clc
adc
mov
inc
ins
leave
mov
push
sbb
popa
popf
repz
ret
repz
in
(bad)
xchg
fucomi
jmp
cmp
retf
(bad)
retf
xor
pop
inc
push
jmp
xchg
mov
xor
dec
arpl
inc
sbb
sbb
xchg
mov
add
hlt
lock
ins
leave
mov
push
sbb
popa
popf
repz
cmp
sahf
mov
repz
in
(bad)
xchg
fucomi
jmp
aas
inc
retf
mov
retf
xor
pop
inc
push
jmp
xchg
cmp
pop
or
jne
cmp
clc
dec
arpl
inc
sbb
sbb
xchg
mov
int
xor
inc
ins
leave
mov
push
sbb
popa
popf
rep
jp
dec
cli
inc
xor
repz
in
(bad)
xchg
fucomi
jmp
ds
enter
retf
xor
pop
inc
push
jmp
xchg
aas
mov
xchg
cmp
clc
dec
arpl
inc
sbb
sbb
xchg
mov
cwde
std
je
inc
ins
leave
mov
push
sbb
popa
popf
repz
outs
clc
push
push
repz
in
(bad)
xchg
fucomi
jmp
cmp
fwait
retf
xor
in
xor
lock
or
push
and
and
or
xlat
div
sub
mov
sub
enter
add
sub
call
dec
icebp
les
cmp
add
pop
repnz
dec
mov
cld
add
mov
inc
jb
sbb
lock
jae
mov
aaa
lea
mov
cs
sbb
inc
jb
sbb
lock
jae
mov
cmp
mov
std
mov
sbb
mov
dec
je
mov
mov
std
mov
jge
fnstenv
and
popf
xchg
hlt
jge
gs
loopne
cmp
fwait
jmp
jmp
dec
sbb
inc
cmp
sub
in
adc
ror
aaa
call
and
cmp
fcom
lahf
das
mov
xor
dec
into
xchg
mov
and
inc
loop
gs
sbb
(bad)
push
add
xchg
inc
sbb
call
ret
(bad)
(bad)
mov
xchg
icebp
push
pop
adc
add
mov
dec
stc
xchg
dec
ret
into
jmp
lea
mov
inc
mov
pop
shl
push
push
out
stos
pop
cli
adc
test
mov
lahf
shl
dec
shr
into
push
fwait
lods
xchg
lods
cs
lock
imul
dec
xchg
ins
or
inc
inc
inc
loopne
xchg
fstp
pop
popf
pop
push
add
inc
cli
lds
out
mov
adc
daa
lods
adc
dec
es
push
xchg
ins
in
nop
icebp
push
jmp
add
(bad)
sbb
outs
pop
adc
cmp
inc
adc
jbe
or
rcr
add
jns
cmc
mov
in
xchg
mov
repz
add
xor
mov
mov
jnp
lds
cmp
push
idiv
repz
xchg
cwde
aam
xchg
enter
(bad)
cdq
push
xchg
cwde
rcr
enter
sub
push
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
mov
cwde
ror
loop
aam
sub
push
pop
into
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
mov
cwde
shr
sub
sub
shl
fwait
push
(bad)
xlat
cdq
push
xchg
cwde
cdq
push
xchg
cwde
jne
xchg
cwde
xlat
sub
(bad)
or
retf
dec
and
cdq
push
xchg
cwde
leave
seto
cdq
push
fistp
aam
leave
aaa
fwait
push
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
adc
sbb
sub
push
xchg
cwde
cdq
push
xchg
cwde
leave
seto
cdq
push
fistp
xchg
in
daa
jg
or
mov
push
(bad)
xlat
cdq
push
xchg
cwde
icebp
push
nop
cwde
cdq
push
dec
cdq
cdq
push
xchg
cwde
jmp
aas
aad
sbb
ret
jbe
call
add
add
call
aas
aad
sbb
xlat
xlat
mov
(bad)
shl
(bad)
pop
fadd
ja
jne
xlat
out
(bad)
sub
out
sbb
setns
cwde
cdq
push
xchg
cwde
aam
shl
sbb
ins
rcr
repnz
sub
push
xchg
cwde
add
xchg
sub
loop
call
test
sahf
jg
dec
or
cdq
push
xchg
cwde
cdq
push
xchg
cwde
aam
shl
sbb
sbb
or
loop
in
jg
dec
or
sbb
ss
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
aam
shl
sbb
in
rcr
cli
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
not
mov
(bad)
xchg
cmp
sbb
ins
ror
cli
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
out
repz
(bad)
xchg
cmp
sbb
in
and
(bad)
out
or
jmp
sub
(bad)
sbb
cmp
in
jle
add
call
retf
push
and
cdq
push
xchg
cwde
jmp
aas
aad
sbb
ja
out
cmp
and
cmp
retf
leave
and
inc
cmc
loop
dec
add
retf
push
and
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
adc
jge
loop
jl
and
movs
cmc
jmp
mov
sub
mov
sub
imul
add
dec
and
iret
sbb
ss
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
gs
cli
rcr
xchg
cwde
cdq
push
xchg
cwde
fsqrt
xchg
cwde
(bad)
pop
fsubrp
xlat
xor
(bad)
cmp
retf
push
and
cdq
ds
cwde
or
retf
push
and
aad
fst
xchg
cmps
and
sub
xlat
iret
sbb
setns
cwde
sub
xchg
cwde
ret
sbb
sar
movs
cmc
jmp
out
je
mov
sub
mov
sub
imul
add
dec
and
iret
sbb
ss
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
gs
cli
rcr
xchg
cwde
cdq
push
xchg
cwde
fsqrt
xchg
cwde
(bad)
or
jmp
retf
sbb
jne
push
fistp
call
out
or
daa
and
or
retf
mov
sub
fimul
fwait
push
fcmovnbe
cdq
push
xchg
cwde
dec
in
cwde
dec
and
retf
sub
jge
out
add
sbb
xchg
inc
cmc
and
jl
and
cmps
out
add
out
adc
les
sub
push
aas
into
cdq
push
xchg
cwde
cdq
ds
cwde
or
retf
push
and
xor
adc
(bad)
sti
push
(bad)
sub
dec
cdq
push
xchg
cwde
cdq
push
xchg
cwde
icebp
push
xchg
cwde
sub
scas
or
push
xchg
cwde
xlat
sbb
add
sub
in
ret
mov
cdq
push
fistp
cdq
push
xchg
cwde
add
sub
and
ret
retf
sub
jge
out
add
iret
and
and
sbb
sub
and
or
or
les
sub
push
aas
into
cdq
push
xchg
cwde
shr
sub
push
xchg
cwde
jmp
aas
aad
sbb
faddp
dec
inc
retf
sub
add
cdq
push
fistp
cdq
push
xchg
cwde
retf
dec
sub
xchg
fwait
push
fcmovnbe
cdq
push
xchg
cwde
cdq
push
xchg
cwde
sar
sub
add
cdq
push
fistp
cdq
push
retf
pop
cdq
push
xchg
cwde
cdq
push
xchg
cwde
(bad)
rcr
xchg
cwde
stc
push
nop
cwde
cdq
push
sets
out
rcr
nop
cwde
cs
and
movhps
cdq
push
fistp
adc
repz
push
xchg
cwde
cdq
push
xchg
cwde
cdq
repnz
cwde
xlat
sbb
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
hlt
dec
xchg
pop
sub
(bad)
or
push
xchg
cwde
cdq
push
xchg
cwde
leave
(bad)
mov
push
and
cdq
push
xchg
cwde
cdq
push
xchg
cwde
sub
nop
dec
jmp
or
loope
sub
xor
sub
add
xlat
sbb
cdq
push
xchg
cwde
cdq
push
xchg
cwde
adc
or
sub
out
or
(bad)
cli
rcr
xchg
cwde
leave
setae
xlat
sbb
cwde
cdq
push
xchg
cwde
jecxz
ja
sub
cs
or
mov
out
or
shl
fwait
push
(bad)
xlat
cdq
push
xchg
cwde
cdq
push
xchg
cwde
jge
xchg
cwde
and
mov
sub
push
add
aad
and
sub
sub
sbb
setns
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
(bad)
mov
(bad)
cdq
push
xchg
cwde
cdq
out
cwde
jmp
leave
(bad)
clc
cdq
push
xchg
cwde
(bad)
cwde
shr
icebp
cdq
push
xchg
cwde
dec
in
cwde
cmp
or
and
iret
pushf
dec
jmp
enter
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
jecxz
ja
sub
cs
popf
in
(bad)
or
or
add
(bad)
push
pop
into
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
mov
cwde
shr
loop
pop
add
adc
push
and
cdq
push
xchg
cwde
add
add
or
or
add
(bad)
push
pop
into
cdq
push
xchg
cwde
(bad)
sub
jl
out
and
dec
and
cdq
push
xchg
cwde
cdq
push
xchg
cwde
popf
in
cwde
or
or
and
sub
add
push
add
call
xchg
js
push
retf
xchg
cdq
push
xchg
cwde
xlat
sbb
aad
push
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
jns
xchg
cwde
xchg
push
repz
xchg
cwde
aam
xchg
enter
(bad)
cdq
push
xchg
cwde
cdq
push
xchg
cwde
and
xchg
fsubr
sbb
sub
iret
pop
mov
out
or
and
cdq
push
xchg
cwde
cdq
push
xchg
cwde
fldz
xchg
cwde
sub
fimul
mov
fimul
or
or
xor
(bad)
push
pop
into
cdq
push
xchg
cwde
cdq
push
xchg
cwde
and
xchg
fcom
dec
or
iret
sbb
ss
push
xchg
cwde
cdq
push
xchg
cwde
push
sbb
and
iret
add
xor
sub
push
aas
into
cdq
push
xchg
cwde
cdq
push
xchg
cwde
cdq
push
xchg
cwde
aam
sub
mov
sub
(bad)
and
cdq
push
xchg
cwde
xchg
push
repz
xchg
cwde
add
(bad)
aad
shl
aam
and
add
cdq
sub
and
cdq
push
xchg
cwde
leave
setno
inc
sbb
adc
sbb
ret
rcl
sbb
lea
and
jg
xlat
ret
pop
stos
mov
call
movs
scas
das
std
lea
test
xor
cmp
mov
cwde
loope
cmp
std
mov
cmp
or
xor
mov
shl
xor
mov
sub
cli
popf
cmp
mov
cld
(bad)
adc
mov
not
or
dec
aaa
xor
cld
movs
fcom
loopne
inc
(bad)
or
sbb
or
mov
xor
xor
jecxz
ret
pop
push
mov
cmp
inc
sub
out
cmp
mov
dec
and
inc
mov
add
inc
inc
add
ret
push
pop
jg
push
scas
gs
xor
fwait
lods
xor
fld
or
test
push
push
mov
pop
neg
adc
jl
mov
mov
cmps
sub
jne
cs
mov
shl
mov
xor
es
sbb
mov
or
xor
adc
xchg
adc
fcmovbe
sbb
push
jmp
and
iret
push
cmp
femms
xchg
shl
loope
inc
pop
loop
aad
inc
mov
daa
lods
mov
dec
fwait
lods
std
lods
xor
push
mov
pop
cdq
or
mov
(bad)
(bad)
out
xchg
inc
pop
mov
fwait
icebp
std
pop
cdq
and
add
xor
cmps
mov
inc
sbb
xor
pop
ins
push
sti
push
dec
inc
sub
inc
pop
push
repz
cmps
iret
push
dec
in
cmp
add
xchg
pop
inc
nop
int
mov
int
mov
lea
or
call
pop
xchg
or
xchg
nop
int
mov
xchg
ss
adc
sbb
shl
sbb
or
add
xchg
add
stc
ret
pop
mov
mov
mov
jae
mov
stos
leave
mov
cmp
mov
or
sub
adc
mov
mul
movs
xlat
mov
xor
sar
add
jo
jg
arpl
cmp
jne
movs
int
or
(bad)
xor
sahf
adc
retf
inc
out
cmp
push
cdq
dec
(bad)
mov
jg
std
inc
rcl
mov
cwde
jge
mov
mov
jns
mov
push
add
push
push
dec
cmp
std
lods
xor
pop
pop
push
sti
jne
inc
out
xor
push
loop
(bad)
in
dec
xchg
mov
lock
push
xor
mov
repz
dec
(bad)
jns
shr
dec
xchg
sub
repnz
xchg
out
pop
shr
xchg
ret
inc
mov
in
add
inc
pop
retf
add
xor
pop
add
dec
rol
fld
ret
sbb
pop
ret
pop
xchg
addr16
sub
push
mov
ds
xchg
mov
push
jp
xor
icebp
inc
rol
add
xchg
add
repz
rol
sub
dec
(bad)
test
pop
jecxz
jecxz
cmp
push
test
stc
outs
cmp
pop
jl
cmps
cmp
sbb
sub
push
pop
and
push
jo
data16
lahf
dec
ins
repz
test
push
mov
xor
(bad)
jmp
sahf
rcl
test
xchg
stos
fst
movs
fwait
cmc
(bad)
leave
(bad)
fld
stos
loope
rcr
out
pop
xor
and
push
hlt
xchg
out
push
xor
xchg
out
push
xor
xchg
loop
loopne
sub
sub
pop
sub
push
add
pop
inc
push
inc
push
pop
addr16
push
push
pop
in
push
sub
pop
jae
bound
and
sub
pop
jg
bound
loopne
sbb
pop
and
sbb
pop
sub
pop
jnp
clc
pop
ficomp
(bad)
mov
sub
pop
outs
pop
push
push
push
xchg
popa
adc
add
out
xchg
pusha
push
int3
pop
retf
push
ins
adc
push
jmp
cs
sbb
pop
sbb
pop
sbb
in
and
and
and
sub
push
and
sbb
pop
sbb
pop
sbb
adc
and
and
and
ds
and
sbb
pop
cs
jbe
sbb
adc
and
cmps
pop
jp
ds
sbb
or
sbb
pop
sbb
pop
cs
mov
scas
cmp
inc
mov
pop
mov
aaa
fild
sbb
adc
sbb
pop
cs
pop
scas
sbb
or
sbb
pop
sbb
pop
cs
push
std
dec
pop
inc
xchg
lods
sbb
dec
sbb
pop
cs
push
mov
sbb
pop
sbb
xor
and
push
neg
retf
mov
jno
cld
or
adc
pop
or
lds
movs
push
test
pop
mov
cdq
adc
fmul
out
lahf
push
int
jl
inc
fidivr
cmp
or
adc
push
in
or
mov
pop
and
add
jae
mov
pop
mov
(bad)
and
cmp
js
jns
mov
daa
lods
adc
jbe
xor
je
cmp
(bad)
(bad)
xor
cmp
ins
inc
(bad)
imul
mov
jge
aas
pop
jmp
sbb
mov
xor
(bad)
mov
xchg
pop
loope
ds
dec
cmp
sbb
xor
(bad)
mov
cmps
inc
rol
cmp
loope
and
dec
xor
dec
xchg
cmp
xchg
push
idiv
dec
cs
adc
mov
pop
jge
adc
movs
or
push
dec
push
adc
mov
xchg
adc
dec
(bad)
mov
inc
jae
cwde
in
xchg
ror
cmp
inc
pop
mov
dec
xchg
movs
scas
push
cs
pop
leave
mov
adc
retf
push
fiadd
sub
movs
cmp
xchg
cmp
repz
xchg
pop
(bad)
push
jno
loope
mov
movs
aaa
mov
rol
addr16
dec
xor
pop
cmp
jp
push
push
mov
cmp
inc
pop
(bad)
pop
fild
pop
fld
mov
ret
pop
cmp
rcl
dec
loope
(bad)
adc
or
icebp
add
and
or
and
or
and
or
and
jmp
pop
or
and
or
cld
mov
dec
shl
add
sub
stos
sub
mov
add
outs
into
sbb
sub
inc
std
ins
mov
pop
jmp
or
outs
mov
ins
repz
lock
in
mov
(bad)
(bad)
(bad)
inc
and
outs
mov
ins
mov
mov
inc
mov
mov
or
and
ss
pop
or
jmp
or
clc
mov
inc
mov
xchg
push
jb
mov
inc
mov
icebp
sti
mov
xchg
push
jb
mov
inc
mov
sub
shl
cmp
jmp
std
and
inc
std
ins
mov
retf
std
test
and
xor
(bad)
mov
fucomi
mov
cmp
inc
mov
mov
ret
mov
inc
mov
clc
(bad)
out
mov
inc
mov
mov
ret
mov
inc
mov
mov
xchg
ds
inc
mov
mov
push
jp
mov
inc
mov
out
sub
imul
inc
mov
mov
inc
mov
add
movsx
mov
aam
outs
sbb
cmp
icebp
xlat
sub
out
dec
jnp
rol
cmp
inc
ror
mov
inc
mov
mov
or
cs
xlat
sub
out
cmp
mov
inc
in
add
movsx
ss
pop
and
std
cld
fstp
in
or
inc
mov
inc
mov
mov
fnstcw
inc
loopne
adc
movsx
mov
or
cs
xlat
sub
in
cmp
mov
fisubr
call
or
sar
inc
mov
pop
push
mov
or
push
jbe
or
or
inc
in
mov
inc
mov
push
ins
add
or
or
clc
mov
inc
mov
paddusw
inc
fst
add
inc
in
mov
inc
mov
out
sbb
or
mov
inc
mov
repnz
xchg
cmps
idiv
(bad)
inc
and
outs
mov
push
sub
lock
and
outs
mov
push
sub
lock
and
outs
out
mov
mov
inc
mov
mov
sbb
pop
or
and
jl
and
into
cmp
imul
and
or
aad
cmp
push
test
inc
into
inc
pop
ss
add
and
pop
dec
jae
add
jae
mov
xor
imul
sub
sar
stc
cs
icebp
(bad)
adc
cmc
scas
repnz
call
(bad)
jecxz
add
frstor
or
mov
das
dec
sahf
std
dec
(bad)
adc
repz
movs
ds
jle
cmp
or
imul
inc
inc
sbb
fdivrp
imul
push
push
(bad)
or
push
stc
xlat
dec
ret
cdq
pop
pop
cmp
mov
pop
jle
mov
std
mov
daa
lods
sbb
and
mov
mov
call
and
std
cmps
push
xchg
xchg
adc
push
pop
pop
push
cmp
mov
add
pop
jp
add
pop
pop
dec
mov
movs
cmp
xchg
jno
pop
inc
mov
dec
xor
jg
pop
xchg
push
pusha
add
push
push
mov
mov
push
push
ins
int
mov
std
jecxz
sar
ficomp
jle
ret
pop
add
and
push
fimul
shr
ret
pop
ret
pop
pop
call
aad
(bad)
mov
ret
inc
xchg
inc
call
pop
xor
mov
jl
popf
ret
pop
repz
(bad)
out
inc
pop
jbe
mov
dec
xchg
shr
sti
sub
dec
(bad)
hlt
dec
push
iret
push
pop
mov
xor
cld
clc
call
loope
fwait
sbb
sbb
rcl
loope
gs
clc
gs
hlt
ins
aam
cld
int
push
stc
xor
pop
and
fwait
sbb
repnz
inc
sti
int
popa
cld
mov
fcomp
sub
mov
sbb
push
add
sbb
mov
aam
xchg
stos
test
clc
loope
test
clc
sbb
mov
jle
out
(bad)
int
adc
add
sub
in
add
xchg
fwait
dec
clc
sbb
mov
add
mov
aam
xchg
or
scas
sbb
sbb
cmp
idiv
fist
cmp
jnp
loope
pop
mov
xchg
icebp
pop
push
xor
add
enter
sbb
add
pop
int
lds
fwait
sbb
pushf
loope
push
mov
inc
push
sbb
mov
fwait
sbb
call
ret
int3
bound
idiv
out
ret
inc
push
sub
stc
(bad)
call
push
in
(bad)
call
movs
xchg
push
add
push
call
jo
fild
sbb
gs
std
cld
jns
test
clc
aad
imul
sbb
mov
stos
test
clc
aad
sbb
sbb
mov
mov
loope
fwait
sbb
fiadd
es
jmp
xchg
cmp
mov
mov
cmp
xor
cmps
push
mov
jecxz
test
push
fild
mov
mov
std
mov
cmp
adc
mov
test
mov
lods
std
mov
push
stc
outs
shl
(bad)
push
arpl
aas
mov
jmp
cmps
(bad)
xor
repz
and
add
lock
xchg
or
cwde
sub
and
or
jmp
fiadd
push
ret
pop
push
pop
inc
xchg
sub
daa
lods
std
lods
fs
adc
mov
sbb
pop
loopne
sar
mov
push
leave
dec
sbb
(bad)
mov
call
cmc
inc
idiv
dec
xchg
sub
repz
leave
pop
sbb
cmp
mov
std
mov
pop
ds
xchg
gs
dec
cmp
mov
or
inc
cmp
dec
fisubr
cmp
push
dec
xor
pop
inc
push
push
ja
mov
iret
mov
and
mov
adc
push
xchg
mov
mov
mov
dec
mov
cs
out
in
jae
repz
ret
pop
fstp
push
cmps
sar
xor
repz
cmps
(bad)
jno
push
in
inc
mov
xchg
pop
or
inc
sahf
ins
mov
mov
inc
mov
pop
ins
mov
adc
les
xchg
and
movs
adc
cmps
adc
les
mov
xchg
movs
push
inc
pop
rcr
popf
fdiv
jae
aam
lea
sub
jno
hlt
pop
sbb
sahf
dec
data16
pop
rcl
or
inc
mov
loop
mov
or
sub
adc
mov
pop
push
std
dec
cmp
mov
xchg
cmp
imul
lock
retf
lea
mov
cld
dec
cmp
cmps
dec
dec
sub
imul
mov
xchg
loopne
jmp
sbb
mov
cmp
rcl
or
sbb
xchg
inc
add
cmp
sbb
jg
dec
and
fwait
lods
std
lods
out
push
push
ret
push
push
mov
cmp
aad
in
(bad)
adc
(bad)
mov
cmp
cmps
popa
pop
or
aam
mov
(bad)
in
enter
outs
add
xchg
sbb
leave
fistp
cmps
push
cmp
pop
adc
push
xchg
sbb
repz
pop
inc
outs
and
dec
lock
xchg
or
ret
pop
xchg
adc
push
adc
in
push
and
xchg
sbb
inc
pop
jle
inc
add
(bad)
mov
jae
mov
inc
pop
push
pushf
add
cmps
in
dec
cs
repz
cmp
dec
push
and
out
sti
imul
(bad)
pop
sar
cli
repz
cmps
lds
adc
or
outs
xchg
nop
iret
outs
(bad)
(bad)
outs
(bad)
fild
mov
xchg
xchg
push
xchg
nop
mov
stos
dec
test
xchg
nop
popf
and
sbb
dec
test
xchg
xchg
nop
jle
jb
popf
and
inc
ret
mov
loop
mov
std
icebp
sbb
mov
std
mov
ret
jno
cmps
adc
and
sbb
stos
mov
aas
dec
sbb
jp
in
outs
mov
cld
dec
shl
jb
push
movs
xor
nop
fsubr
mov
push
push
popa
and
sbb
jns
fnstsw
add
push
inc
xchg
pop
in
mov
xchg
push
in
cmp
and
popf
sub
xchg
(bad)
mov
out
aaa
dec
adc
pop
cmps
xor
rcr
push
dec
xchg
pop
in
xlat
out
dec
int3
and
ss
pushf
sub
mov
loopne
mov
push
pop
sub
test
shr
mul
stos
test
and
push
sbb
sahf
jmp
add
aaa
push
cmps
xor
into
sbb
xor
nop
sbb
jl
aam
mov
(bad)
push
repnz
sbb
jbe
fisub
cmp
(bad)
adc
cmp
es
fsub
mov
call
cmp
adc
xchg
mov
mov
cmp
sub
retf
push
cdq
sub
mov
dec
sub
test
je
xlat
lods
mov
xchg
push
jmp
rcr
test
dec
pop
sub
xchg
call
fimul
test
and
adc
imul
add
xor
(bad)
adc
fldcw
or
push
add
cmp
add
(bad)
sub
(bad)
sub
xchg
or
(bad)
or
push
or
push
mov
push
(bad)
or
(bad)
or
push
adc
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jg
aad
mov
xchg
xor
sahf
lods
jge
or
movs
aam
f2xm1
repz
jno
mov
in
repnz
outs
xor
ins
mov
sub
sbb
mov
or
xchg
and
in
add
bound
repnz
or
std
mov
loopne
inc
xchg
dec
out
(bad)
dec
cmc
in
out
mov
push
je
std
mov
pushf
or
jge
mov
sub
inc
adc
xor
iret
cmps
loope
(bad)
mov
inc
test
lahf
pop
cmps
stos
rcr
ja
sar
add
cli
sub
mov
jl
sbb
mov
into
addr16
adc
mov
dec
adc
lods
(bad)
gs
rep
pop
push
dec
cwde
dec
stos
and
mov
daa
jl
adc
cli
lahf
(bad)
addr16
aad
cs
mov
dec
pop
cld
sub
pop
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cld
test
mov
sbb
out
pop
or
mov
aad
cmp
out
xor
or
jo
shr
rol
sub
jne
add
sub
fs
xchg
or
dec
adc
xchg
sti
cmps
inc
mov
sub
daa
in
fcomp
jo
and
push
inc
or
mov
xor
mov
call
(bad)
adc
xchg
jg
mov
mov
sbb
int3
shr
sbb
mov
hlt
xchg
inc
pop
lods
mov
sbb
imul
rcl
ins
pop
pop
and
cwde
inc
cmp
fcomp
mov
ret
sbb
sbb
icebp
push
iret
ins
jg
or
mov
test
sub
sbb
loopne
fdivr
sub
pop
je
dec
adc
lods
repnz
es
jbe
dec
imul
mov
aaa
scas
or
mov
cmps
pop
mov
clc
dec
push
cmp
adc
push
cli
and
pushf
dec
retf
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jp
pop
or
gs
and
fcmovnbe
cmps
cmp
dec
pusha
jno
dec
out
arpl
iret
addr16
push
and
fimul
mov
sub
rol
sub
(bad)
les
outs
sbb
imul
or
(bad)
dec
movs
pop
loop
(bad)
(bad)
xor
movs
ss
or
out
push
(bad)
jge
xor
les
in
xlat
add
sub
fiadd
jb
pop
add
stc
jbe
in
fcmovbe
repz
lahf
sar
dec
es
inc
dec
ret
sub
cmps
mov
(bad)
mov
jmp
jae
fst
cmp
jno
test
mov
xchg
jmp
loope
lahf
inc
cmp
sbb
test
daa
push
fmul
ja
sub
test
and
sub
sahf
jne
push
push
xor
adc
pop
inc
shl
jmp
inc
mov
daa
add
xor
push
dec
jecxz
das
add
mov
hlt
out
push
or
lock
(bad)
fucom
daa
je
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
fcmove
dec
stos
inc
push
jge
rcr
bound
into
loope
popf
or
cmps
pop
into
cmp
rol
push
rol
out
xor
in
xor
push
test
xor
hlt
jmp
(bad)
loopne
xchg
dec
outs
adc
mov
movs
stos
or
repnz
xor
and
sub
dec
xlat
dec
and
loopne
mov
xor
pop
dec
sti
mov
dec
shl
loopne
adc
hlt
test
call
xor
jg
pop
fidiv
ret
aaa
add
jg
adc
mov
in
pop
pop
and
cdq
add
(bad)
mov
call
cmps
aaa
xchg
sbb
xor
scas
ds
(bad)
jns
adc
or
mov
ficomp
jp
xor
dec
pop
aas
sub
add
cs
fwait
jae
or
int3
push
jnp
mov
repnz
nop
loop
add
xor
push
aad
in
or
les
and
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mul
sub
dec
enter
sti
jp
fbld
pop
dec
stc
aas
adc
mov
or
ds
shl
cwde
xchg
sub
add
jb
add
jmp
mov
mov
pusha
scas
imul
sub
jb
add
rol
jae
sbb
cli
sbb
jp
mov
fmul
outs
add
repnz
jae
lock
dec
out
sbb
(bad)
(bad)
popf
mov
test
xor
xchg
pop
retf
sub
add
ins
fst
loopne
fadd
and
ret
scas
xor
std
stos
ficomp
mov
dec
js
sbb
loope
pop
into
clc
imul
ucomiss
jnp
xchg
xchg
jno
dec
call
repz
sub
push
or
mov
scas
rcl
push
mov
or
enter
cmp
dec
fwait
mov
loop
push
and
jmp
push
cld
das
pop
popf
jg
int
fucom
dec
cmp
adc
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
dec
in
xlat
mov
xor
pop
xchg
mov
daa
pop
mov
jg
and
aas
nop
and
repnz
sub
adc
inc
imul
ret
test
mov
stos
out
aaa
push
push
imul
nop
ret
sub
(bad)
push
ret
mov
mov
test
cmp
mov
sbb
test
inc
(bad)
repnz
jbe
mov
fld
pop
or
cmps
sub
lahf
jp
mov
out
inc
sar
pop
and
add
(bad)
scas
sbb
and
cmp
add
push
fsub
(bad)
jae
sar
and
stos
push
push
mov
jl
or
je
sub
pop
repz
inc
push
mov
mov
jae
or
retf
test
jle
dec
pop
mov
test
bound
add
push
pop
jmp
leave
test
add
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
xchg
loopne
mov
cld
push
mov
jae
mov
jns
or
fisttp
and
xchg
ret
scas
mov
dec
jmp
inc
in
mov
inc
jmp
(bad)
and
je
xchg
repnz
add
xchg
inc
out
mov
ret
xchg
les
arpl
xor
sti
pusha
inc
lds
call
jb
xor
dec
ret
jecxz
popf
add
pop
shl
mov
xor
fisub
mov
jl
pop
popf
test
mov
fcom
mov
inc
in
fadd
mov
jb
inc
arpl
pop
cmp
pushf
pusha
jae
add
mov
inc
mov
mov
into
lods
(bad)
fimul
loope
mov
ja
sub
or
test
lods
mov
inc
push
xor
dec
popf
or
pushf
or
or
mov
ret
adc
sub
inc
mov
scas
xchg
mov
push
sbb
cld
ret
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
aad
in
sbb
aad
pushf
push
pushf
inc
push
(bad)
js
jns
push
rol
das
mov
dec
lods
jle
and
fisttp
sub
lock
ret
xchg
add
mov
ret
sub
push
lds
cmc
push
inc
lods
mov
inc
outs
xor
inc
loop
inc
mov
loopne
push
enter
mov
clc
out
xchg
ja
pop
xchg
and
xor
inc
repz
dec
test
mov
add
in
mov
fld
repnz
sar
jmp
cwde
bound
inc
jle
fcmovnu
cmps
sub
pusha
mov
inc
xor
les
outs
sbb
and
add
mov
inc
jge
sahf
frstor
inc
shl
push
mov
repz
sub
fimul
not
popa
mov
inc
scas
mov
rol
popa
cld
pop
iret
imul
dec
mov
and
pop
xor
mov
enter
dec
push
lock
mov
jmp
xor
(bad)
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jg
xchg
daa
in
sbb
pop
neg
fadd
test
imul
arpl
retf
ins
mov
rol
lods
jne
inc
jmp
aam
and
xor
(bad)
add
repnz
ins
jne
inc
push
adc
jb
test
xor
add
test
mul
mov
aas
jmp
out
sbb
sub
sbb
inc
sbb
and
aad
call
fwait
pop
hlt
and
pop
jnp
jae
cmc
cmps
pop
ror
jo
dec
cmps
imul
mov
mov
lahf
pop
and
add
in
pop
sahf
arpl
add
jo
inc
cld
lods
pop
fsub
ret
and
sbb
mov
jae
add
jno
or
jmp
test
mov
push
lds
or
ds
cmp
dec
push
aas
stos
int
mov
xor
shl
and
add
mov
in
pop
pop
mov
push
retf
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jg
aad
out
push
jp
mov
push
fadd
or
das
sub
dec
cmp
(bad)
cmc
call
xor
ins
jne
shr
inc
call
mov
mov
repz
add
stos
jno
inc
outs
mov
inc
sub
call
and
lahf
shl
cmps
xchg
inc
mov
repnz
sbb
push
(bad)
imul
cld
in
dec
test
xor
xor
dec
pusha
mov
cmps
inc
adc
jns
je
(bad)
and
sbb
cmps
inc
fisub
add
lods
add
mov
dec
jns
pop
(bad)
cmc
dec
add
pop
add
outs
ficomp
sub
mov
call
push
dec
jge
push
sbb
pop
dec
out
mov
int3
es
add
push
jno
mov
rsqrtps
or
imul
fmulp
jmp
in
sahf
xor
add
cmp
pop
pop
mov
sub
push
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jg
aad
in
pop
clc
add
or
push
std
(bad)
pop
rcr
shl
stc
stos
mov
adc
push
jmp
xchg
inc
imul
adc
sub
adc
sub
aad
ins
mov
dec
lods
jge
and
or
jno
dec
aam
arpl
ja
cmp
into
lods
jle
mov
jle
inc
pop
mov
neg
mov
outs
popf
sahf
dec
sbb
pop
mov
xlat
dec
adc
pop
xor
push
or
or
clc
sub
pop
(bad)
loopne
sbb
mov
xor
inc
cmp
fbld
repz
jp
push
sbb
xor
inc
outs
mov
mov
call
fld
ins
cld
push
int3
and
rol
out
sbb
and
mov
in
movups
dec
push
aaa
sub
movs
inc
shl
stos
push
pop
jnp
pop
sbb
rcl
lods
mov
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
daa
or
inc
hlt
rcl
mov
xchg
or
clc
push
dec
stos
clc
xchg
test
cmp
pop
push
loope
jae
les
push
sub
pop
shr
adc
mov
test
xchg
and
popf
(bad)
das
jns
and
mov
mov
add
(bad)
arpl
sbb
imul
outs
jno
icebp
jmp
mov
int
or
(bad)
jo
mov
fstp
aas
cmps
cmp
shl
mov
stc
mov
fnstcw
mov
adc
or
clc
mov
pop
inc
aas
neg
pop
and
test
jne
inc
loopne
pushf
add
pop
sbb
sub
pop
iret
cmps
jne
call
fisttp
push
xchg
jge
dec
cs
lahf
mov
adc
sub
iret
shl
in
repnz
mov
ret
push
mov
adc
lods
pop
pop
jmp
add
outs
stc
xchg
pushf
or
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
xchg
in
retf
push
js
or
(bad)
pop
ret
dec
stos
js
or
jnp
retf
push
pop
pop
jmp
loope
popa
xlat
xchg
or
rol
xor
add
mov
add
stos
aas
push
inc
mov
jo
mov
pop
or
movs
or
mov
out
test
sub
imul
pop
add
and
out
jmp
fist
ss
dec
dec
ret
xor
out
pop
mov
inc
add
jo
(bad)
adc
sub
cdq
jno
sbb
xor
xor
cmp
fwait
sahf
hlt
mov
popf
add
xor
ret
outs
xor
sub
inc
add
xor
sar
sahf
frstor
les
lods
repz
mov
push
xchg
cdq
add
ror
out
jg
mov
jl
mov
pop
inc
movs
mov
cmp
push
xor
mov
ins
jb
xor
mov
add
mov
adc
jnp
cdq
fstp
add
pop
(bad)
retf
cmp
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
adc
mov
sbb
or
(bad)
adc
dec
stos
cli
push
dec
sub
or
not
adc
add
push
adc
popa
jae
inc
lods
jne
into
stos
cmp
inc
movs
jo
add
push
adc
gs
cdq
push
pusha
sub
xor
lea
out
in
jle
aas
xchg
cmc
fmul
jmp
xchg
cmc
in
push
and
fst
and
bndstx
or
nop
or
adc
fidiv
and
mov
stos
xor
pop
hlt
fld
mov
mov
pop
sbb
aaa
mov
neg
out
test
mov
and
sbb
mov
lock
dec
jnp
nop
fld
icebp
inc
add
jg
mov
test
fimul
cld
xchg
or
mov
cmp
adc
mov
mov
xor
fmul
js
int3
sbb
and
shl
sub
(bad)
jg
push
jecxz
je
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
into
pushf
cmp
add
pop
xchg
sub
mov
adc
lods
cmp
js
mov
push
push
xlat
adc
cld
xchg
xchg
and
xchg
inc
lods
mov
(bad)
inc
in
push
test
xor
lods
cmp
add
cmp
jbe
xor
adc
adc
jecxz
sbb
hlt
xchg
test
mov
xlat
add
cmp
fimul
lahf
(bad)
nop
mov
aas
fadd
aam
movs
repz
das
out
adc
pop
retf
xor
mov
pop
nop
or
lds
bound
les
ret
adc
hlt
pop
leave
and
adc
xor
sbb
jb
ret
das
jne
inc
jl
lahf
sbb
jae
ret
loope
fimul
imul
scas
mov
psubb
add
jle
dec
sub
xchg
mov
aas
mov
inc
fs
iret
adc
ins
adc
mov
mov
inc
shl
pop
iret
xchg
sti
sub
shl
and
aad
loopne
loopne
fisub
adc
iret
retf
cld
add
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
push
mov
lods
add
test
or
js
mov
xchg
or
or
js
mov
sti
(bad)
sbb
ins
jns
pusha
sbb
gs
das
jb
mov
mov
add
xor
dec
scas
fs
dec
out
xchg
(bad)
cmp
jecxz
xchg
add
pop
js
(bad)
call
int
mov
xor
in
fild
xor
shr
pop
pop
jg
add
in
mov
outs
mov
frstor
and
int
call
fwait
addr16
or
test
push
xchg
dec
xchg
loopne
add
movs
test
add
mov
rcr
out
mov
add
sbb
and
into
inc
jecxz
add
loope
fisub
xchg
mov
xor
out
jle
int
push
cwde
inc
ins
jl
dec
mov
lock
cs
ins
rcl
scas
mov
lock
je
ret
sbb
sub
retf
lahf
lock
adc
fs
sub
sub
nop
cmc
and
or
cmps
(bad)
outs
fstp
mov
adc
int3
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
add
out
dec
mov
sub
aas
mov
xchg
retf
adc
retf
stos
cmp
dec
sti
mov
imul
fmul
mov
xor
and
add
inc
(bad)
je
sbb
in
or
imul
aaa
fwait
ss
or
aad
mov
inc
sub
mov
jg
ret
adc
and
js
or
rcl
call
jne
(bad)
and
push
jecxz
add
ret
stos
add
or
es
adc
imul
nop
lock
pop
inc
mov
mov
test
mov
cmp
pop
pop
mov
jno
ret
push
sbb
fld
mov
jle
dec
out
jl
into
and
xchg
ret
seto
clc
call
inc
xchg
je
icebp
and
xchg
retf
call
xor
rcl
hlt
aad
cmps
retf
pop
enter
mov
ss
cmc
ins
rcr
mov
mov
ret
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
and
lock
mov
mov
sbb
or
adc
loop
xchg
retf
adc
ins
jge
dec
lods
cld
fld
sub
jmp
test
repnz
in
std
sahf
dec
gs
inc
arpl
or
cmp
mov
call
mov
adc
cdq
add
sbb
and
rol
sub
nop
add
shl
push
ret
jae
push
les
jb
adc
xlat
dec
test
not
push
in
xor
dec
out
push
(bad)
mov
xchg
mov
retf
ret
mov
outs
pop
inc
lods
mov
add
xor
pop
add
mov
lds
mov
inc
mov
mov
add
pop
ret
(bad)
and
xchg
scas
jg
(bad)
cmps
stos
nop
push
out
jg
dec
lods
cld
sahf
sar
inc
fisttp
push
dec
imul
mov
mov
cmps
dec
pop
or
repnz
sbb
mov
or
test
je
jne
jbe
or
or
xor
inc
adc
in
in
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
mov
call
ds
scas
pop
mov
sbb
sub
sbb
ins
jg
dec
out
(bad)
fst
sub
out
mov
outs
inc
in
rol
mov
cmp
call
nop
xor
lock
daa
jae
test
addr16
cmp
pop
clc
test
mul
int3
jmp
sub
mov
inc
sub
repnz
add
push
inc
dec
in
or
inc
xchg
cmp
xchg
inc
data16
retf
ficom
imul
(bad)
mov
push
pop
retf
pop
dec
dec
das
daa
stos
or
popa
nop
xchg
mov
cdq
ret
cmp
and
in
fild
movs
mov
fsub
popf
cmp
pop
popf
arpl
add
pop
add
add
into
stc
sub
push
out
cld
pop
test
jmp
pop
mov
dec
sub
mul
cld
das
xor
daa
mov
nop
repnz
xor
leave
sbb
test
sbb
ins
mov
jae
enter
dec
fdiv
pop
leave
sbb
push
retf
imul
push
ja
jne
inc
sbb
adc
dec
retf
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
jge
pop
dec
stc
cmp
jl
push
popa
sub
mov
adc
div
cmp
push
pop
add
cmp
add
mov
xchg
and
fimul
(bad)
push
lods
pushf
adc
scas
mov
mul
pop
adc
sub
test
mov
movs
in
adc
je
inc
push
push
add
cmps
inc
test
push
dec
mov
movs
mov
fwait
das
scas
pop
dec
xor
fsubr
inc
dec
dec
loope
iret
dec
outs
out
leave
inc
jnp
xchg
xchg
and
pop
sub
mov
push
movs
out
and
fwait
add
jecxz
inc
add
repnz
jge
pushf
pushf
mov
lock
scas
(bad)
jecxz
inc
inc
loope
lahf
into
clc
stos
rcr
arpl
push
add
imul
and
test
ror
sub
mov
jno
mov
jb
mov
(bad)
xchg
mov
mov
ss
jmp
or
mov
mul
jb
dec
cwde
or
mov
dec
imul
je
mul
or
sub
pop
mov
std
inc
push
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
cmp
(bad)
fs
pop
dec
mov
mov
push
sub
test
and
cmp
retf
arpl
gs
cmp
and
test
fmul
dec
(bad)
sbb
adc
inc
xor
push
cdq
and
xchg
and
push
imul
out
popa
or
gs
adc
jno
shr
xchg
ret
in
xor
test
pushf
xor
bound
jbe
(bad)
mov
or
xor
rol
jno
pop
loope
test
dec
out
pop
or
mov
clc
mov
fcomp
ss
fst
mov
sbb
sbb
mov
sub
frstor
xor
cmp
and
fld
outs
mov
and
inc
sar
push
push
je
cmp
or
add
test
mul
mov
sub
inc
aam
(bad)
enter
mov
sub
enter
(bad)
(bad)
sub
je
mov
jae
or
dec
stos
jae
not
out
push
or
xchg
ja
mov
(bad)
dec
inc
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
ficom
loopne
call
jno
shr
fmul
loopne
pop
push
outs
out
(bad)
(bad)
push
and
mov
sbb
in
test
das
cmp
fist
std
das
jns
inc
inc
jne
(bad)
es
pop
aas
mov
lahf
cmc
fld
mov
popf
inc
mov
xor
add
xchg
ret
sahf
ret
mov
cmps
add
addr16
and
sahf
iret
push
xchg
ret
imul
or
add
lods
adc
pop
mov
in
push
in
iret
add
mov
inc
jl
pop
popf
jecxz
inc
test
sub
add
jo
inc
cmp
xor
dec
cmp
adc
loopne
test
clc
test
(bad)
cmps
hlt
dec
aad
test
popf
or
in
out
ins
inc
adc
movs
or
xchg
cmc
and
aad
gs
mov
in
add
outs
xor
lock
or
dec
(bad)
dec
pop
dec
imul
shl
sbb
push
mul
mov
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
(bad)
xchg
loopne
cwde
dec
out
cmp
inc
and
push
das
in
or
loopne
cdq
xchg
in
mov
ffreep
dec
push
jmp
sub
call
push
add
out
pop
xchg
cmp
cmp
js
lds
stc
sub
pop
mov
(bad)
jmp
or
inc
mov
mov
push
test
rol
stos
repnz
dec
ficomp
(bad)
sub
pushf
mov
inc
push
mov
mov
pop
pop
push
retf
lahf
inc
aam
xor
retf
mov
push
call
std
arpl
test
xor
call
jb
(bad)
cmp
add
jp
xchg
call
lahf
dec
cmp
adc
movs
jno
sbb
imul
fimul
sbb
ins
test
mov
sub
xchg
mov
(bad)
xchg
cli
stc
iret
push
cmp
shl
(bad)
(bad)
aas
addr16
fnstsw
outs
add
and
int
int
or
xor
add
or
enter
mov
or
jecxz
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
push
pop
scas
mov
push
shl
adc
out
adc
cs
or
out
fadd
inc
cdq
push
push
pop
clc
stos
(bad)
pop
and
sbb
test
sbb
movs
sbb
fs
test
hlt
inc
push
mov
cwde
pop
jns
mov
repz
lods
add
cmc
jecxz
fcos
ins
add
cmp
shr
jnp
add
sar
jmp
fnstcw
inc
push
mov
mov
std
and
inc
mov
popf
fsubr
inc
pop
ss
out
retf
fldenv
mov
add
das
sbb
in
inc
fxam
mov
add
fwait
push
cmp
add
mov
inc
js
pop
frstor
test
ffreep
jp
pop
fldenv
sbb
fstp
mov
inc
jecxz
sbb
sub
fldenv
mov
cmp
pop
retf
pop
jb
inc
adc
cmps
scas
add
dec
cmp
xchg
cmps
scas
inc
aam
loop
mov
sub
adc
mov
neg
or
jo
mov
mov
inc
adc
sbb
jl
enter
add
xor
cld
loop
fstp
pushf
bswap
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
push
and
sbb
cs
rdmsr
js
add
pop
int
call
push
jmp
dec
or
pop
cld
sbb
movq
pop
cmps
test
icebp
fwait
xor
retf
inc
gs
test
in
push
in
retf
add
xor
fcmovbe
js
dec
fdivr
cdq
or
xor
jne
leave
in
(bad)
adc
ret
nop
sub
xchg
inc
sub
(bad)
pop
add
int
jne
xor
movs
jl
je
movs
cdq
mov
push
add
cli
repz
xor
pop
sbb
data16
cmp
out
inc
inc
jecxz
sbb
cmp
in
inc
inc
arpl
rcr
out
mov
xchg
fwait
(bad)
xor
mov
hlt
inc
add
clc
jmp
cdq
addr16
or
xlat
psubusb
jns
(bad)
popa
(bad)
aad
movs
sbb
jnp
adc
scas
test
mov
fisttp
cmp
add
and
mov
fs
retf
stos
push
nop
lods
lock
adc
sub
sbb
les
retf
xchg
fmul
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
(bad)
fs
shl
shr
xchg
inc
addr16
loop
push
push
dec
pop
push
mov
dec
pop
mov
ins
push
lahf
movs
test
lock
shl
je
inc
gs
pop
ret
pop
aad
ss
inc
movs
jne
(bad)
mul
(bad)
js
mov
cld
scas
ret
(bad)
int3
push
cmp
rcr
and
mov
loope
enter
dec
dec
jmp
popa
or
cld
loop
in
inc
push
hlt
jnp
xchg
into
in
push
push
cs
rol
jmp
cmp
fst
out
push
dec
loop
pop
pop
stc
mov
pop
loope
(bad)
or
mov
lds
cwde
ret
pop
(bad)
cmps
lock
pop
mov
mov
rcr
cmc
sbb
das
call
xchg
jbe
ins
add
mov
(bad)
xchg
cmp
cs
lock
enter
fisub
cmps
fimul
jp
shl
mov
or
push
or
retf
xchg
ja
xor
add
sbb
push
cli
in
dec
fwait
(bad)
loope
fdivp
movs
add
enter
pop
xchg
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
bound
or
mov
dec
sub
sbb
lods
mov
rol
and
adc
pop
adc
ror
and
add
sahf
pushf
and
test
sbb
mov
or
mov
pop
shl
cmovbe
jne
ret
sbb
and
scas
fwait
sbb
mov
inc
addr16
jecxz
add
mov
jnp
mov
scas
stos
mov
lea
leave
dec
adc
sbb
sbb
xor
adc
mov
xchg
mov
pop
adc
jp
dec
in
jae
push
cmp
xchg
pop
stos
clc
inc
retf
ins
call
bsr
enter
or
sub
pop
mov
xchg
and
pop
and
sbb
xor
cmp
xor
add
mov
out
test
repz
sti
cli
int3
fbld
inc
pop
mov
fisttp
loop
inc
push
jne
pop
int
cmp
fnstsw
push
push
nop
retf
ins
ret
mov
mov
ret
xchg
leave
pop
iret
xchg
sti
stos
mov
loope
lahf
mov
adc
xor
cld
add
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
cmp
ds
dec
das
jo
sub
repz
cmc
pop
dec
stos
mov
hlt
add
fnsetpm(287
mov
sar
bound
inc
mov
jecxz
push
data16
(bad)
ins
icebp
pop
or
xchg
inc
jnp
pop
fld
pop
add
sub
pop
outs
xor
jge
ficom
mov
sahf
add
ds
sub
xchg
int3
or
xchg
loope
mov
pop
fstp
xor
xor
nop
(bad)
mov
adc
sub
xchg
retf
fcom
jnp
mov
adc
int
xchg
(bad)
call
js
add
push
js
mov
cs
sub
dec
sub
xchg
enter
sbb
cmp
or
(bad)
enter
inc
scas
cli
(bad)
dec
and
xor
std
jmp
mov
ins
add
or
dec
pop
loop
(bad)
push
ds
dec
jns
inc
shl
inc
dec
lock
dec
cmp
pop
out
adc
repnz
pop
inc
push
dec
pushf
(bad)
push
sti
jmp
xor
mov
test
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jp
pop
or
(bad)
fcmovbe
and
rol
ins
mov
add
mov
ret
ins
repnz
inc
stos
xor
inc
mov
inc
(bad)
(bad)
sbb
ret
and
sahf
gs
les
in
adc
call
push
(bad)
mov
cmp
or
scas
in
mov
fadd
push
push
pmulhuw
mov
(bad)
inc
push
mov
bound
sub
adc
ins
jl
dec
sub
push
mov
int
cmps
cs
or
mov
mov
pop
push
in
cmp
imul
cmp
jl
add
jb
into
and
imul
adc
ss
retf
clc
(bad)
mov
xchg
sub
cmc
or
(bad)
mov
jnp
vpsrldq
cmps
sub
out
mov
iret
loope
push
add
dec
and
outs
test
mov
in
ret
in
dec
jnp
int3
pop
loop
xchg
mov
adc
cdq
leave
mov
std
dec
sahf
movs
stos
inc
xchg
aaa
loope
mov
push
mov
inc
aad
pop
int3
test
jmp
pushf
xor
xchg
jns
mov
test
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
push
loopne
xchg
push
out
xor
add
rol
ins
mov
inc
stos
xor
add
xor
(bad)
movs
lds
jecxz
cwde
cmp
iret
movs
hlt
rol
outs
push
inc
imul
mov
adc
inc
xchg
nop
std
pusha
mov
and
sahf
xor
jno
loope
or
mov
add
mov
popa
inc
aad
sbb
ror
(bad)
jle
cmp
imul
xchg
cli
sub
and
imul
push
cmps
stos
cmp
sub
push
daa
lods
jp
inc
mov
sbb
push
test
jns
or
sti
cdq
adc
xchg
or
jns
or
adc
neg
test
sti
in
inc
sbb
les
ror
fiadd
cs
leave
and
sub
(bad)
out
cwde
stc
sub
shl
sbb
cli
mov
(bad)
stc
pop
or
jg
push
and
pop
dec
mov
sub
push
cmc
loop
or
jbe
jp
or
aam
adc
sti
push
pop
(bad)
popa
push
pop
repnz
(bad)
adc
push
inc
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
xchg
arpl
dec
scas
mov
inc
lods
repnz
add
aad
jmp
pop
lds
pop
repz
cmp
inc
out
mov
pop
add
push
cmp
xor
pusha
mov
add
inc
pop
repnz
jae
loopne
mov
and
(bad)
loopne
xchg
aas
mov
adc
inc
xchg
mov
dec
sahf
push
push
jg
cmp
or
aam
sbb
cmp
cmp
dec
pop
dec
xchg
out
cmp
sub
nop
dec
(bad)
pop
xchg
and
mov
sbb
sub
popf
mov
(bad)
or
lahf
aam
mov
(bad)
leave
daa
sbb
dec
sub
or
mov
ret
pop
cmp
mov
sub
pop
loop
inc
dec
out
mov
shl
mov
mov
mov
mov
stos
adc
fwait
or
lea
outs
push
pop
jno
(bad)
daa
mov
pop
or
pop
mov
xchg
into
xchg
lds
mov
in
adc
adc
sub
(bad)
pusha
inc
fdiv
ret
mov
fbstp
out
loop
movs
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
in
mov
adc
sub
rol
in
mov
(bad)
leave
push
jg
cmps
sbb
nop
sub
pop
fmul
dec
popf
cmp
jb
or
jnp
(bad)
idiv
fidiv
loop
jmp
ret
jno
and
inc
adc
and
sar
and
nop
jle
add
jno
retf
or
xchg
push
jmp
pusha
rsm
cmp
mov
test
xchg
enter
sub
push
int
xchg
aad
lods
mov
sahf
sbb
icebp
mov
mov
push
xchg
out
js
(bad)
loopne
(bad)
dec
jbe
xchg
dec
sub
or
cmp
jno
test
mov
imul
mov
mov
push
icebp
scas
int3
stos
xor
xor
add
mov
mov
clc
sub
leave
cli
jge
fwait
jecxz
xchg
mov
inc
adc
mov
fimul
mov
mov
dec
inc
sub
sti
or
adc
test
cld
call
ret
test
sub
cmp
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
std
jmp
out
jae
inc
in
jne
inc
cmp
fs
push
scas
je
les
fsubr
in
mov
and
xor
push
mov
xor
sub
lahf
iret
nop
inc
xchg
jae
and
imul
nop
xor
dec
sahf
aas
outs
sbb
sub
xchg
mov
(bad)
out
sub
dec
pop
push
pop
stc
sub
cmps
shrd
sahf
dec
(bad)
xlat
adc
sub
push
dec
adc
lock
push
iret
mov
(bad)
pop
sub
retf
aas
(bad)
dec
test
mov
push
or
cmp
or
cmp
ret
addr16
inc
call
cwde
pop
sti
test
call
push
into
aas
outs
(bad)
xor
ss
jmp
fdiv
(bad)
mul
jnp
add
cmp
in
(bad)
adc
cmps
pop
dec
es
lahf
mov
pop
fimul
les
imul
les
cmps
sub
sub
retf
retf
and
sbb
push
addr16
mov
add
in
cmps
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
aad
or
mov
ror
seto
add
loop
mov
inc
out
call
stos
stos
jo
dec
imul
push
test
call
push
push
dec
jmp
enter
lock
jmp
or
in
dec
es
pop
mov
mov
fmul
sti
(bad)
or
mov
adc
shl
loope
mov
dec
(bad)
and
jo
imul
mov
fcom
sub
mov
jmp
xchg
mov
sbb
test
pop
ficomp
cs
push
mov
push
mov
jns
dec
cmps
(bad)
aam
mov
push
push
imul
xchg
retf
ins
cmp
inc
cmps
sub
pop
in
jb
dec
sub
xchg
sar
push
xchg
cmp
mov
cmc
and
hlt
gs
pusha
fcom
bound
push
mov
lahf
mov
jle
pop
loope
cmp
inc
jl
jns
or
dec
xchg
mov
xchg
test
push
pop
push
mov
les
out
je
dec
loope
movs
je
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jge
adc
cs
rcr
rcl
shr
xchg
int3
sbb
fld
mov
mov
xchg
enter
in
and
ror
jmp
sahf
add
cmp
xor
xor
test
in
or
leave
xchg
call
(bad)
gs
sbb
jno
sub
xchg
(bad)
test
dec
enter
mov
xchg
adc
cmp
mov
push
push
imul
(bad)
or
xchg
sahf
stos
stc
inc
dec
call
mov
(bad)
int3
loop
xchg
push
aas
jmp
xchg
imul
mov
cmp
sahf
mov
xor
inc
clc
test
ret
dec
jmp
aad
aas
in
inc
xchg
mov
mov
ss
jb
cld
xchg
int3
sbb
jnp
gs
cmp
(bad)
jle
arpl
mov
dec
test
stc
movs
leave
stc
sub
test
push
pop
push
sub
or
xchg
add
sub
xchg
xor
pop
dec
sub
outs
mov
adc
int3
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
and
sahf
dec
inc
push
push
stc
scas
icebp
movs
iret
sub
ror
pusha
xor
leave
imul
sub
cld
mov
mov
fld
nop
push
adc
and
popf
mov
movs
mov
test
dec
pop
cli
and
jb
sbb
jns
cmc
cmp
inc
adc
outs
js
lock
mov
pop
dec
outs
(bad)
das
jo
jle
ret
pushf
sub
push
(bad)
out
sbb
daa
sbb
outs
mov
int3
sub
xchg
dec
xor
push
push
stc
(bad)
dec
icebp
cs
adc
ror
cmp
jmp
push
imul
(bad)
dec
clc
xor
sbb
cmp
push
jmp
sub
push
ret
adc
out
ins
jo
ds
mov
dec
sub
mul
movs
stos
test
mov
test
jmp
sbb
dec
add
sub
mov
ins
repz
or
push
leave
push
jge
push
sub
push
add
stc
into
pop
sti
imul
in
out
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
test
inc
adc
stc
das
ds
(bad)
pop
mov
popa
icebp
jge
gs
enter
xlat
in
mov
rol
fcmovnbe
fs
cmp
int3
inc
rcl
loop
mov
xchg
(bad)
and
jle
cmps
jne
cdq
mov
jle
xor
retf
sub
cmps
call
inc
ror
aam
cmps
mov
xor
in
push
or
jmp
jecxz
adc
into
adc
add
cmp
lods
(bad)
sbb
movs
xchg
call
inc
aam
test
cdq
cmp
sbb
icebp
inc
or
xchg
mov
mov
pop
pop
jo
add
mov
in
sub
sub
mul
out
add
shr
inc
cmp
mov
push
fimul
sub
dec
imul
xlat
mov
cmp
test
mov
mov
xor
push
ins
jns
(bad)
mov
scas
and
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
mov
mov
adc
jmp
lods
call
daa
jmp
cld
mov
cmp
dec
lea
repz
aaa
sbb
cmps
hlt
jae
sti
call
inc
cs
sub
xchg
push
pop
int
mov
mov
ins
add
xor
dec
sbb
push
xchg
je
leave
pop
ds
mov
call
jbe
jno
mov
mov
(bad)
sub
in
push
aaa
cmps
or
gs
jne
int
mov
ss
movs
or
imul
(bad)
aam
cdq
or
hlt
and
adc
sbb
fnstsw
fcomp
out
push
sub
mov
call
adc
push
test
mov
mov
jb
hlt
jecxz
sub
lahf
xchg
call
leave
cli
push
shl
mov
cmp
push
stc
push
or
mov
or
ds
ret
cmc
es
adc
inc
add
repnz
imul
in
daa
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
and
jmp
ret
xchg
nop
es
(bad)
data16
jl
mov
jl
fnsave
fmul
lods
repnz
xchg
leave
sbb
and
jno
mov
aaa
jecxz
cmps
cld
(bad)
enter
inc
adc
sub
repz
(bad)
lods
mov
mov
mov
xor
(bad)
pop
xor
push
mov
enter
or
mov
xor
ss
push
or
mov
mul
enter
mov
ja
mov
dec
pop
enter
ja
aaa
daa
or
or
ja
or
dec
test
hlt
movs
(bad)
push
enter
es
leave
add
das
cwde
push
leave
out
xlat
cmp
fdivr
xchg
cmp
cwde
jae
ret
push
push
call
inc
push
xchg
pop
fisttp
cmp
mov
or
xchg
(bad)
dec
sub
push
leave
test
xchg
mov
cmp
sub
dec
jmp
jl
ret
xor
fist
stc
mov
mov
out
mov
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
or
pop
push
inc
adc
fs
mov
pop
fisttp
fdiv
arpl
pop
enter
xor
aaa
addr16
or
dec
imul
scas
ss
or
ss
pop
mov
dec
cdq
(bad)
push
into
sahf
repnz
jmp
lock
mov
xor
adc
popa
dec
pushf
mov
mov
out
mov
test
retf
popf
imul
mov
ja
jbe
mov
dec
pop
or
ja
aaa
adc
es
xchg
mov
mov
ss
xchg
enter
mul
retf
xchg
enter
mov
mov
jbe
or
or
push
aaa
or
retf
sbb
stos
jo
neg
enter
sti
hlt
or
mov
inc
xchg
cmp
dec
pop
lock
ret
pop
mul
repnz
push
popf
fmul
mov
leave
jmp
stc
xchg
or
(bad)
mov
xlat
mov
jns
dec
sub
dec
jmp
push
mov
mov
xchg
ret
pop
shr
mov
es
adc
cmp
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
jp
dec
dec
ror
sahf
xchg
sub
dec
stos
jae
sbb
mov
test
into
adc
test
dec
pop
cmc
out
or
aaa
push
pop
mov
or
mov
mov
mov
mov
jae
or
mov
(bad)
pop
rep
sbb
jmp
push
lock
shl
setg
outs
into
sahf
mov
rcl
outs
or
imul
or
stos
mul
or
pop
imul
data16
(bad)
sbb
push
enter
mul
ja
dec
pop
enter
sub
pop
enter
dec
test
out
pop
mov
or
xor
hlt
push
mul
dec
xchg
or
or
in
push
aaa
out
push
retf
pop
dec
test
jmp
xchg
add
jno
add
retf
das
lock
cmp
fcomp
pop
jnp
stc
movs
mov
(bad)
dec
test
stc
push
dec
sub
pop
dec
jmp
cmp
dec
jmp
jge
xor
(bad)
push
repz
push
mov
jecxz
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
cli
push
lea
push
push
mov
mov
mov
add
xor
dec
pop
cld
stos
(bad)
lahf
hlt
scas
inc
shl
mov
int3
pushf
je
inc
shl
outs
dec
call
into
push
repz
or
rep
int
je
int3
pop
jae
lea
scas
into
fbstp
rcl
add
mov
add
xor
or
sub
fcomip
scas
mul
dec
(bad)
dec
sbb
push
in
push
mul
enter
imul
leave
data16
jmp
mov
imul
leave
pop
mov
cmps
ja
or
imul
data16
xchg
leave
pop
dec
imul
cmps
mov
leave
(bad)
push
retf
fwait
mov
movs
mov
mov
int3
xchg
or
jmp
scas
aaa
sar
pushf
ja
ret
xchg
data16
(bad)
jg
push
ror
in
mov
adc
jns
leave
scas
imul
test
stc
xchg
mov
clc
xchg
dec
push
push
mov
jns
mov
js
dec
imul
or
sbb
mov
out
pusha
movs
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
ret
xchg
ss
int
repnz
ja
dec
popf
mov
or
pop
jne
add
mov
outs
inc
shl
ins
dec
shl
outs
inc
shl
dec
pop
jo
mov
repnz
mov
xor
popf
ds
sbb
mov
lods
dec
sahf
mov
or
mov
or
stos
or
mov
enter
or
or
and
aad
cmps
mov
dec
sub
movs
ja
mov
ss
dec
sbb
or
sub
imul
enter
dec
sbb
sub
xor
call
mul
cmc
(bad)
mov
or
mov
enter
not
mov
int
or
mov
jo
push
pop
fadd
xchg
addr16
inc
cmp
cdq
fdivp
in
imul
adc
push
pop
(bad)
pop
cmp
mov
dec
call
cmp
clc
push
dec
stos
mov
adc
dec
jmp
push
dec
jmp
xor
dec
sbb
cmova
das
loopne
hlt
fnstcw
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
movs
clc
sub
dec
push
xor
or
loop
test
dec
sbb
out
retf
push
pushf
jne
adc
lods
(bad)
sbb
outs
ret
bound
shl
and
ds
sahf
mov
add
and
pop
jg
push
push
xor
inc
push
repnz
mov
mov
hlt
lods
int3
fdiv
scas
int
jo
or
xor
pop
mov
or
pushf
imul
pop
imul
mov
or
movs
not
fs
imul
or
jmp
pop
mov
mov
aaa
jmp
popf
mov
or
imul
retf
imul
xor
mov
enter
ss
dec
fwait
or
and
lahf
repnz
ror
fadd
push
and
dec
inc
cli
sub
lahf
hlt
bound
imul
push
test
test
imul
sub
push
mov
mov
push
mov
mov
push
inc
jmp
mov
add
sbb
xchg
outs
cmp
inc
cmp
stos
(bad)
outs
popa
addr16
cwde
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
push
pusha
and
cmps
jg
repz
xchg
mov
imul
dec
cmps
repz
call
lea
ins
dec
pop
mov
inc
push
jo
int3
pop
jmp
pop
jno
ret
in
xchg
mov
mov
mov
lock
add
mov
in
int3
fidiv
in
or
lock
nop
loopne
push
mov
and
push
cld
mov
rcl
scas
dec
shl
in
enter
or
mov
or
mov
cmc
in
adc
or
push
enter
or
xor
retf
pop
mov
retf
pop
hlt
stos
int
mov
dec
fwait
xor
sub
pop
sub
pop
mov
mov
mov
aaa
out
xchg
mov
mov
cmc
and
ror
pop
ret
repnz
mov
rcl
test
dec
out
pop
ror
cmp
jbe
leave
jnp
(bad)
test
mov
push
enter
retf
jmp
cmp
retf
fisubr
cmp
ret
sbb
pop
mov
out
loope
xor
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
mov
dec
push
xor
cmps
repnz
lock
and
pop
jl
sbb
mov
inc
adc
lds
jg
add
jp
adc
add
adc
pusha
ret
xchg
mov
test
fidiv
scas
dec
pop
mov
arpl
xchg
cmp
cmps
inc
xchg
jns
inc
xchg
out
inc
or
cmps
(bad)
(bad)
cmp
adc
imul
pop
mov
aaa
cdq
or
jbe
dec
push
mov
mov
leave
es
dec
fdiv
stos
dec
pop
jne
or
ja
retf
stos
fnstenv
enter
xor
ss
out
aam
sbb
sub
and
inc
ror
jmp
or
xor
add
js
je
mov
dec
ins
pop
push
(bad)
jp
cmps
loop
mov
or
mov
cmp
xlat
retf
jmp
mov
(bad)
fs
mov
add
adc
sbb
(bad)
out
or
loopne
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cmp
shl
in
repz
sub
sbb
cmp
loopne
sar
adc
and
cmp
inc
xchg
mov
out
aad
movs
inc
push
mov
in
xchg
mov
loopne
push
mov
mov
xor
pop
xor
sbb
fimul
sbb
loop
sbb
and
or
mov
cmp
or
dec
push
je
add
mov
(bad)
mov
(bad)
cmc
and
enter
ss
dec
pop
xor
sub
pop
mov
dec
sbb
imul
dec
fdiv
or
call
mul
dec
sub
bound
in
push
dec
fisttp
sub
dec
out
push
fnstenv
je
pop
mov
or
inc
push
jge
dec
pop
jecxz
xor
je
mov
imul
sub
push
sbb
mov
xchg
fmul
push
dec
push
cmp
dec
pusha
shr
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
std
xchg
pop
int3
jae
add
push
mov
outs
add
mov
in
adc
movs
(bad)
pop
mov
xchg
(bad)
(bad)
cmp
(bad)
xchg
out
inc
push
jns
sbb
mov
pop
push
mov
daa
adc
mov
add
ds
inc
fidiv
and
jo
or
dec
sbb
mov
xor
and
popa
jg
into
popa
mov
lahf
dec
psubd
jecxz
aam
jmp
outs
inc
aad
popa
retf
pop
mov
mov
imul
not
ss
mov
mov
cmc
in
dec
fnsave
lods
int
xor
push
fwait
hlt
imul
pop
leave
push
mov
or
pop
dec
push
xor
not
mov
imul
aam
lock
xchg
cmps
xor
pop
xor
mov
ret
mov
xchg
pop
sub
jns
mov
stos
xchg
fwait
sbb
jns
jns
dec
jp
xchg
pop
popf
or
cmp
cmps
movsx
or
pop
jnp
hlt
and
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
sbb
xchg
mov
rcr
and
adc
stc
(bad)
xchg
out
cdq
push
cmps
stc
cwde
dec
out
fmul
daa
cmp
mov
mov
sbb
daa
mov
sbb
out
leave
cmp
outs
mov
repz
inc
sar
mov
ret
nop
ds
add
mov
stos
lea
test
pop
ret
sub
aas
repnz
aad
jno
ret
pop
jg
ror
fsub
ja
ins
or
mov
int3
fbstp
in
lea
stos
mov
or
pop
or
mov
jbe
mov
dec
xchg
mov
push
mov
jbe
mov
jb
mov
xor
pushf
xor
fdiv
sub
dec
sbb
test
es
aaa
(bad)
cli
outs
inc
cwde
cli
sub
mov
aas
mov
(bad)
adc
mov
add
inc
sbb
and
cdq
push
cmc
mov
jecxz
outs
enter
call
loopne
cmp
inc
cmp
dec
cmps
into
sub
pop
or
fsincos
lods
jb
(bad)
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
sti
outs
add
adc
daa
xchg
daa
cmp
enter
retf
sbb
retf
pop
lea
cmp
mov
call
jnp
retf
data16
inc
mov
into
push
mov
and
adc
inc
sar
(bad)
adc
cmps
(bad)
xchg
jns
push
xchg
cmp
aaa
pop
hlt
pop
mov
cdq
enter
outs
ret
pusha
jmp
pop
or
rcr
lds
bound
adc
sub
cmps
leave
xchg
je
retf
cmps
or
ss
push
pop
xor
pop
mov
(bad)
pop
lock
(bad)
pop
repz
lea
sub
cmps
push
sbb
out
(bad)
(bad)
in
inc
pop
std
sub
fnstsw
lahf
mov
into
xchg
jge
dec
pop
xor
push
sbb
mov
repz
jle
dec
cdq
and
mov
or
scas
adc
das
test
shl
ins
in
setno
js
setns
ins
enter
pusha
in
cmp
pop
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
int3
or
mov
cmp
fs
fisttp
in
pushf
retf
fmul
jecxz
pop
iret
mov
cmp
or
std
popf
int
cmp
sbb
out
(bad)
mov
gs
adc
and
push
cmp
aad
pushw
xlat
cmps
mov
fwait
mov
cmp
mov
jp
dec
in
inc
or
add
ror
ins
jp
sbb
jnp
or
cli
pop
or
or
xchg
cmp
adc
lods
mov
not
retfw
push
aaa
or
in
sub
xor
jno
mov
cs
and
push
xor
dec
sahf
rcr
sbb
mov
outs
mov
dec
pop
xor
retf
shl
bound
sbb
daa
sbb
mov
adc
sbb
mov
loope
push
cmp
jno
pop
outs
in
pop
or
jo
sbb
push
sahf
add
aaa
movs
xlat
mov
dec
imul
or
pop
cmp
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
in
outs
or
jl
ret
cmps
pop
xchg
out
pop
mov
cld
pushf
int
jg
or
(bad)
(bad)
loope
pop
push
pusha
mov
fisttp
jl
int3
and
sbb
or
out
push
mov
out
leave
mov
es
xchg
stc
jns
(bad)
cmps
clc
fmul
in
call
cmp
pop
or
cmp
or
jge
lea
pop
or
out
inc
push
jns
push
push
mov
jg
iret
and
sbb
bound
fwait
mov
jns
or
(bad)
loopne
shl
xchg
neg
push
xor
gs
push
inc
fistp
inc
push
xor
shl
pop
mov
out
mov
retf
fwait
cmc
sub
fisttp
xlat
jae
retf
shl
and
mov
adc
push
pushf
xor
add
mov
les
mov
mov
and
push
sar
jno
push
scas
loope
retf
nop
shl
dec
sahf
lods
sbb
jns
dec
sbb
retf
ins
add
retf
bndstx
leave
cmp
arpl
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
xchg
mov
loope
adc
movs
(bad)
push
daa
js
mov
jnp
or
jg
(bad)
scas
xor
inc
popa
mov
fimul
mov
jg
iret
loopne
pop
dec
arpl
and
call
cmp
mov
popf
or
(bad)
and
fisttp
(bad)
pop
push
pusha
mov
fisttp
mov
fimul
cmp
gs
mov
(bad)
faddp
popa
fimul
arpl
int
mov
cdq
or
sub
aaa
test
call
or
imul
dec
cwde
xor
mov
(bad)
push
xor
xor
adc
push
or
xchg
mov
dec
push
xor
add
sub
lds
push
mov
aas
mov
sub
out
ins
push
xchg
cmp
icebp
add
mov
xor
shr
loopne
retf
rol
es
lahf
mov
sub
mov
lods
mov
jecxz
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
adc
jl
ret
adc
jns
xchg
jns
inc
push
jp
(bad)
aad
arpl
fistp
pop
mov
rol
cs
shr
pop
inc
mov
jle
dec
mov
jg
(bad)
pusha
mov
pop
push
popa
mov
fmulp
and
into
out
jno
add
adc
mov
inc
loope
fimul
loopne
pushf
or
cmp
pop
dec
mov
xor
out
xor
out
mov
add
fimul
and
int
out
mov
loopne
xchg
lock
mov
test
jae
dec
nop
xor
adc
and
(bad)
inc
pop
mov
mov
int3
pop
lock
sbb
push
xor
or
and
adc
and
dec
push
cmc
popa
inc
xchg
mov
push
push
das
stos
retf
test
push
or
lock
or
jl
fmulp
movs
xor
int
jge
inc
mov
arpl
retf
rol
dec
push
arpl
push
mov
inc
enter
cs
mov
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
xchg
cld
and
push
and
mov
(bad)
dec
mov
pusha
inc
push
(bad)
pusha
inc
push
cmp
mov
xchg
iret
scas
jo
sub
adc
icebp
push
shr
rol
outs
xor
sub
add
adc
aas
push
inc
mov
aas
xchg
or
jle
add
call
into
loopne
pop
mov
sbb
dec
mov
mov
or
scas
icebp
push
inc
mov
jle
dec
and
push
neg
or
mov
dec
push
(bad)
loope
pop
(bad)
scas
dec
adc
or
je
dec
test
in
sub
fstp
pusha
inc
sar
cmps
inc
push
clc
cmps
inc
push
sti
out
xchg
mov
loop
aam
mov
int3
push
hlt
jmp
ss
cmps
dec
adc
rcl
lods
(bad)
fidiv
inc
ror
(bad)
inc
mov
loop
in
cmps
cmps
das
inc
xchg
jge
push
dec
mov
and
int
jge
shl
aam
mov
rol
out
inc
shl
ins
inc
dec
mov
enter
popa
(bad)
sbb
and
hlt
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
inc
fdivrp
cmps
xchg
arpl
mov
mov
pop
int3
loope
pop
dec
outs
mov
sub
std
push
dec
cmps
test
cmp
xchg
cli
movs
les
and
pop
leave
mov
ds
mov
call
movs
jnp
or
lods
mov
imul
dec
imul
sbb
adc
popa
mov
lahf
iret
mov
cmp
pop
leave
jecxz
ror
jno
shr
adc
jle
inc
and
sbb
or
jge
add
loope
sar
and
push
cmp
ret
xchg
stc
pushw
push
stc
es
push
jns
xchg
clc
addr16
pop
cmp
ret
push
cld
and
shl
into
adc
or
lea
cld
cs
pop
jb
rcl
cmps
int3
imul
bound
int3
cdq
cmps
outs
inc
xchg
cli
jp
or
scas
addr16
int3
sti
jl
shl
inc
push
scas
mov
rol
movs
mov
test
jbe
or
sbb
and
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
inc
sar
mov
fmul
(bad)
sahf
iret
cs
shr
adc
mov
sub
adc
jmp
aad
push
rol
out
xor
add
mov
add
nop
shr
sbb
arpl
or
cmp
or
popa
jo
into
sub
adc
sub
push
add
adc
mov
mov
fisttp
sti
pop
retf
pusha
je
dec
sub
xor
inc
outs
mov
inc
out
xor
add
std
sbb
int
jns
push
mov
mov
add
adc
jns
sbb
mov
xchg
jl
int
leave
(bad)
jbe
or
jecxz
push
jo
sbb
sub
sbb
sub
xor
imul
pusha
inc
xchg
or
and
inc
pop
cmp
sahf
dec
mov
es
or
mov
pop
(bad)
out
fs
or
cmp
inc
in
adc
out
(bad)
enter
or
sub
loopne
call
mov
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
test
jp
add
cmp
test
mov
ror
scas
jo
inc
loope
sbb
movs
mov
sbb
and
sbb
fs
pop
dec
scas
mov
(bad)
ins
xor
ins
mov
inc
popa
ds
mov
push
dec
sub
adc
inc
stos
mov
inc
lods
jb
inc
lods
mov
inc
out
jo
shr
adc
scas
xor
popa
jo
shr
and
aam
sub
xor
outs
mov
sub
pop
add
fisttp
addr16
add
adc
mov
adc
pop
aad
mov
pushf
or
std
sbb
or
jnp
inc
mov
push
lock
sbb
(bad)
ss
mov
repnz
retf
and
sbb
and
popf
cli
sub
fdivr
ins
into
xchg
mov
retf
loope
test
test
ja
ds
fsub
fst
sti
lahf
dec
mov
mov
rol
xor
dec
das
daa
pushf
dec
js
xchg
inc
movs
jle
push
pusha
mov
add
and
jl
mov
inc
and
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cli
test
movs
les
loopne
lahf
push
popa
jle
mov
loopne
mov
or
retf
push
cmc
and
imul
or
popf
mov
daa
pop
push
in
adc
scas
jo
add
daa
inc
push
and
adc
mov
inc
xchg
mov
cmp
dec
in
jae
add
adc
jo
inc
lods
xor
ret
sbb
call
call
fucomi
xor
nop
ret
mov
loope
(bad)
jo
push
push
ds
rcr
mov
test
cmp
scas
into
adc
jmp
or
ds
add
(bad)
cld
fmul
addr16
push
dec
cmps
daa
xchg
loop
push
mov
lods
or
sbb
aam
in
pop
(bad)
cs
mov
dec
test
jle
xchg
je
jno
(bad)
frstor
mov
pop
or
fimul
mov
cwde
enter
dec
cmps
jl
inc
(bad)
inc
lock
or
mov
popa
retf
daa
shl
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cmp
mov
sti
pop
xchg
popa
mov
jo
dec
(bad)
mul
loop
cdq
and
xor
ins
mov
ret
push
xchg
test
hlt
push
add
mov
test
rol
jb
(bad)
xchg
jne
add
adc
bound
or
loop
sar
cmp
or
jae
shrd
adc
xor
stos
hlt
rol
in
sub
rcr
lods
jge
into
or
rcr
or
pop
mov
pop
pop
das
icebp
adc
in
xor
and
(bad)
mov
das
retf
pushf
mov
or
xor
pusha
push
sar
cld
sbb
or
jge
or
leave
test
cmp
rcl
scas
icebp
mov
fisttp
and
(bad)
retf
jp
add
mov
in
int
mov
or
pop
jno
int3
pushf
jmp
push
adc
and
sub
in
lahf
xor
fldenv
mov
fist
scas
jp
dec
gs
rol
lock
dec
outs
mov
push
and
leave
pusha
movs
pop
or
jecxz
retf
mov
loopne
cmps
add
cmp
pop
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
mov
test
das
into
dec
mov
pop
fsub
ror
lods
xor
inc
in
xor
lods
jb
inc
push
xlat
test
jae
xchg
add
mov
in
fwait
sbb
jns
ret
cmp
mov
aad
sub
push
(bad)
push
inc
sub
inc
test
adc
sub
inc
jg
adc
cmp
mov
out
or
cld
jmp
test
add
jnp
pop
js
inc
fist
movs
mov
retf
outs
(bad)
sahf
and
dec
mov
cmp
retf
inc
mov
setae
das
(bad)
pop
mov
js
dec
out
xor
inc
lods
jae
inc
and
inc
into
js
leave
xlat
xchg
cmp
or
add
data16
(bad)
jnp
inc
push
jmp
nop
xor
retf
xchg
lock
pushf
mov
popa
dec
sub
and
pop
xor
aaa
lods
(bad)
out
xchg
mov
xor
scas
jp
iret
(bad)
(bad)
rol
jo
lea
fisttp
jecxz
push
or
and
mov
jle
or
mov
loopne
in
cmps
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
cmp
xchg
cmps
loopne
dec
aas
and
das
jno
add
rol
ins
repz
test
push
test
mov
mov
js
test
cmp
fild
not
inc
jns
xchg
mov
stos
mov
(bad)
pop
imul
inc
push
aad
push
xchg
lds
(bad)
test
not
(bad)
adc
jecxz
cmp
mov
popa
adc
adc
jg
mov
xchg
and
jne
ins
mov
adc
mov
scas
outs
mov
pop
push
arpl
or
cmp
mov
lahf
mov
cmp
lea
das
dec
pop
jae
add
std
sbb
sub
arpl
fadd
aas
mov
cmps
popa
add
(bad)
div
outs
inc
pop
cli
popa
add
repnz
mov
retf
mov
or
jne
push
push
aaa
cwde
dec
stos
into
mov
jns
fisttp
out
mov
rol
xor
jge
mov
xchg
and
and
dec
mov
ins
mov
or
shl
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
mov
inc
xlat
jge
adc
ds
into
out
xor
ins
mov
sub
push
add
push
inc
mov
dec
inc
(bad)
sbb
loopne
jne
push
imul
pop
inc
sti
addr16
xchg
scas
mov
inc
imul
push
aad
push
aad
push
aad
sub
xchg
(bad)
xchg
test
hlt
push
test
ja
(bad)
sub
inc
inc
mov
add
cmp
imul
ror
mov
mov
pop
aas
pop
mov
xor
dec
pusha
mov
fisttp
cmp
mov
ds
(bad)
cs
ror
scas
lock
int
test
fstp
jo
or
jle
mov
pop
dec
dec
(bad)
test
or
mov
push
shl
ds
(bad)
out
mov
mov
test
cwde
mov
das
js
pop
adc
cmp
arpl
dec
outs
mov
push
inc
cs
or
cmp
xchg
and
in
mov
mov
xor
enter
or
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
js
xchg
jp
dec
push
jle
pop
push
mov
mov
add
jb
add
jb
add
aad
adc
arpl
xchg
xor
pop
lods
xor
call
leave
call
hlt
aad
sub
xchg
lds
xchg
test
aad
sub
xchg
lds
cmc
xchg
lds
cmc
xchg
lds
cmc
xchg
lds
cmc
xchg
test
mov
xchg
inc
mov
cmp
pop
retf
rol
cmps
lock
xlat
arpl
repz
sbb
rcr
outs
(bad)
fiadd
pusha
call
jecxz
sbb
arpl
int3
loopne
push
iret
mov
(bad)
push
mov
jno
sub
stc
retf
ins
or
movs
mov
fmul
jecxz
sbb
daa
js
dec
cmp
popa
inc
adc
hlt
fimul
xor
fbstp
dec
push
mul
or
pop
push
data16
fmul
scas
cmp
rol
mov
std
(bad)
in
fiadd
and
les
dec
pop
cmp
cs
xor
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
mov
inc
sar
(bad)
pop
xchg
mov
icebp
adc
mov
shr
inc
loop
inc
or
jmp
mov
test
jb
inc
in
xor
mov
add
cmc
aad
sub
xchg
lds
cmc
xchg
lds
mov
lds
aad
sub
aad
push
aad
push
xchg
lds
cmc
xchg
lds
jne
test
jnp
pop
pop
cmp
mov
dec
fisttp
xor
xor
push
cmp
imul
popa
ret
shr
(bad)
faddp
loopne
push
and
(bad)
push
mov
mov
into
scas
mov
add
xor
inc
outs
mov
sub
nop
shr
push
add
pop
ret
inc
or
push
dec
popa
mov
popf
dec
and
fmul
aas
pusha
inc
(bad)
xor
mov
or
clc
arpl
push
ja
rcl
retf
call
sbb
bound
call
mov
fisttp
movs
cmp
add
cmp
dec
movs
fs
retf
jg
add
jae
repnz
or
jl
or
hlt
fnstcw
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
sti
inc
adc
sti
ds
xchg
mov
xor
sub
sub
sub
test
mov
test
xor
push
test
mov
lds
cmc
aad
sub
xchg
test
aad
sub
xchg
lds
cmc
xchg
lds
cmc
xchg
lds
aad
push
xchg
test
aad
stos
cmc
xchg
lds
cmc
push
test
mov
lds
push
inc
or
rol
mov
jl
dec
fmul
cmp
in
lea
pop
adc
sti
xor
cmp
retf
jo
inc
sahf
sub
push
ret
xchg
add
ds
iret
popa
ds
scas
mov
inc
cs
sub
xor
add
xor
add
mov
shr
adc
popa
jle
dec
and
pop
mov
js
retf
jnp
les
mov
std
and
cdq
jnp
push
xchg
repz
leave
adc
cwde
or
sbb
cli
pop
mov
call
or
call
mov
jle
or
jp
mov
push
dec
movs
pop
or
bound
xor
jg
int3
push
mul
addr16
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
mov
inc
aad
mov
fimul
scas
jb
shr
adc
inc
push
adc
test
cmc
aad
push
xchg
lds
aad
push
xchg
inc
sub
lds
cmc
aad
sub
aad
push
push
test
aad
push
aad
sub
aad
jmp
inc
jecxz
rol
arpl
jb
sub
adc
sbb
xchg
inc
daa
mov
cmp
adc
adc
jge
sub
jmp
xchg
ret
outs
ds
inc
popa
(bad)
push
add
mov
push
inc
xor
outs
mov
inc
out
repz
in
mov
inc
lods
xor
ins
mov
inc
lods
jae
add
jo
shr
shr
sub
faddp
pusha
call
arpl
bound
xchg
jo
jb
mov
(bad)
and
adc
and
dec
test
cwde
adc
cmp
or
jl
mov
jl
mov
aas
call
cmp
daa
and
xor
mov
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
cmp
xchg
cmps
jg
mov
push
iret
scas
jo
inc
sub
rol
aaa
push
add
aad
stos
jne
inc
push
adc
test
aad
sub
adc
add
push
mov
xchg
xor
add
je
lds
xchg
lds
xor
aad
sub
xchg
inc
jmp
add
outs
jb
xchg
sub
pop
push
gs
jb
(bad)
fisttp
js
ret
jp
cld
sub
mov
xor
sub
inc
and
adc
loope
pop
into
cs
adc
ins
jae
inc
in
jb
add
xor
xchg
lds
mov
inc
jmp
aam
jmp
inc
das
lock
ret
outs
jo
inc
das
xor
and
pop
shl
fmul
cmp
int3
jns
inc
mov
or
ja
xor
rcl
and
retf
push
hlt
mov
mov
(bad)
pusha
jl
pop
shl
cmp
enter
or
cmp
or
cmp
or
mov
test
jno
add
jae
ja
je
jae
add
bound
adc
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
sti
test
sti
daa
sbb
out
pop
dec
das
icebp
push
punpckldq
(bad)
rol
aaa
and
pop
vpmacsww
cmc
aad
jmp
lds
not
(bad)
stos
repz
(bad)
jecxz
lahf
and
mov
sahf
or
xor
dec
test
push
inc
jmp
je
xchg
je
test
mov
add
jmp
add
in
mov
sub
push
add
mov
or
js
dec
loop
aam
sbb
data16
jae
shr
rol
outs
jno
add
push
inc
jmp
add
cmp
ret
and
adc
xor
sub
push
lds
inc
out
jo
add
mov
fimul
mov
push
xchg
repz
push
mov
mov
and
dec
and
push
push
mov
jnp
push
movs
js
retf
cmps
cmp
jge
enter
dec
clc
stc
cwde
or
stc
inc
adc
and
aam
out
ss
mov
jb
rcr
(bad)
outs
mul
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
jnp
push
jnp
fwait
push
movs
cmp
dec
scas
jo
dec
mov
neg
jbe
jl
push
enter
inc
test
jmp
lds
xchg
add
jns
repnz
mov
add
in
shr
test
into
mov
call
mov
(bad)
stos
mov
test
push
les
jne
sub
push
test
pop
ret
aad
and
sbb
stc
adc
arpl
and
mov
sbb
pop
into
call
sub
jae
add
push
test
sahf
or
inc
adc
sbb
ins
mov
dec
scas
aas
pop
ret
les
bound
cmp
enter
inc
outs
lock
sub
add
adc
jge
jle
mov
and
test
shl
and
push
leave
and
ret
addr16
push
mov
cmps
fmul
cmps
jnp
xchg
addr16
push
cli
daa
pop
dec
sti
inc
push
sti
pusha
inc
aad
popa
add
mov
dec
pop
mov
je
inc
push
xor
sub
jnp
sbb
retf
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
jp
sar
addr16
sti
pop
mov
and
shr
push
(bad)
lea
and
loop
xor
not
sub
push
test
stos
bswap
mov
stos
cld
repnz
xchg
or
(bad)
mov
xchg
or
outs
mov
inc
inc
mov
dec
ins
add
cmps
cli
xlat
(bad)
sub
push
add
xor
xchg
ret
xchg
add
jmp
test
xchg
lds
hlt
adc
mov
push
or
mov
(bad)
lahf
mov
(bad)
sahf
dec
mov
mov
dec
lods
fs
inc
inc
scas
inc
retf
cmp
shl
nop
mov
call
int3
sub
ror
cmp
add
jp
jb
sbb
mov
add
in
int3
rol
(bad)
dec
lods
cmp
and
test
icebp
call
mov
jecxz
xchg
mov
xor
rcr
loop
push
cli
out
nop
jns
(bad)
aam
out
or
es
push
jns
lds
jl
into
push
std
out
rcl
outs
dec
sbb
iret
adc
mov
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cmp
popf
push
and
(bad)
(bad)
out
adc
xor
pop
test
(bad)
push
adc
cmp
sub
test
daa
add
xchg
and
push
mov
sub
or
sti
xchg
enter
dec
push
cmp
dec
sub
cmp
(bad)
movs
cmp
stos
add
cmp
hlt
jno
xor
call
je
add
jmp
(bad)
adc
add
sub
rol
mov
push
mov
mov
jle
and
inc
(bad)
cmp
lods
mov
or
lods
jp
dec
in
jl
int
mov
push
lea
jge
or
mov
mov
or
and
dec
jmp
xchg
mul
push
cmc
adc
ret
push
sbb
scas
push
xchg
xor
int3
xlat
xor
cwde
repz
adc
outs
inc
xchg
jle
test
mov
cli
rcl
mov
mov
in
mov
mov
retf
pop
jb
leave
pop
int
ja
inc
nop
or
ds
ficom
retf
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
cmp
popf
xchg
mov
out
iret
loop
ror
sub
push
adc
fs
leavew
(bad)
push
aam
fwait
add
sub
jnp
retf
sub
adc
test
pop
or
xlat
mov
clc
push
mov
push
shl
sub
pop
push
mov
aaa
xchg
les
hlt
xchg
add
hlt
rol
push
xchg
add
jmp
add
cld
ror
retf
sar
sahf
mov
sub
cs
popf
enter
add
xchg
mov
(bad)
mov
cmp
sub
(bad)
dec
test
xlat
retf
sub
xchg
dec
imul
pop
jmp
outs
inc
xchg
dec
pop
pop
test
cmp
aas
mov
mov
inc
adc
in
nop
jp
inc
sbb
in
add
repnz
mov
int
mov
sbb
xor
nop
xor
pop
jle
pandn
sub
adc
dec
popf
icebp
sub
(bad)
fbstp
test
ss
into
shl
mov
mov
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
(bad)
push
jns
ficom
and
sahf
or
data16
push
jecxz
xchg
or
sub
jo
add
dec
push
add
cli
stos
retf
inc
or
cwde
inc
or
cmp
js
dec
imul
jmp
push
or
mov
push
or
mov
push
fisubr
pop
int
adc
mov
ja
test
adc
stos
hlt
rol
push
push
add
mov
test
jae
inc
out
jae
and
or
dec
adc
scas
mov
push
scas
xchg
mov
adc
call
ds
in
int3
sbb
add
mov
jns
dec
test
(bad)
or
mov
push
mov
stc
push
leave
test
mov
(bad)
dec
jmp
mov
(bad)
mov
cmps
xchg
shl
pop
adc
jno
cmps
(bad)
addr16
neg
push
xchg
repz
stos
inc
push
mov
or
je
repz
maxps
mov
lock
je
dec
pop
repnz
mov
jne
dec
push
repnz
mov
xor
int3
pop
mov
mov
imul
pop
or
stos
inc
loope
inc
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
test
cmp
adc
jle
or
mov
push
or
repz
shr
xchg
add
mov
or
aas
pop
pop
stos
cmp
xlat
lea
mov
pop
dec
imul
mov
cmp
call
clc
adc
mov
sbb
adc
ins
xor
add
sub
push
test
rol
mov
inc
scas
xor
and
add
lods
dec
xchg
mov
mov
add
in
cmovb
test
cmp
xchg
pop
jno
(bad)
enter
mov
xchg
dec
test
push
mov
stc
push
leave
imul
mov
mov
(bad)
mov
mov
ret
not
pop
and
in
call
cmc
in
ja
not
xor
iret
adc
inc
pushf
js
ret
jmp
adc
and
push
or
jne
enter
int
hlt
sub
or
jo
dec
popf
xor
dec
pop
jne
or
aaa
sub
fnstenv
(bad)
(bad)
xor
jg
fwait
and
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
fcmovnbe
and
fisttp
mov
cmp
enter
add
push
ret
ins
mov
sub
adc
int
push
push
mov
push
or
js
dec
sub
xchg
retf
adc
lods
cmp
stos
mov
adc
test
xlat
mov
js
or
pop
sbb
sahf
add
cmp
rol
jmp
inc
stos
cmc
adc
add
mov
inc
push
xchg
add
mov
dec
xchg
cmp
adc
ret
cld
or
mov
inc
xchg
push
mov
xor
imul
xchg
dec
push
clc
push
dec
sub
xchg
mov
jns
dec
jmp
xor
pusha
ss
add
leave
and
addr16
push
xchg
jne
neg
not
adc
mov
das
mov
enter
mov
cmc
jmp
or
fdiv
or
xor
mov
jae
mov
je
mov
sub
(bad)
sub
fnstenv
leave
(bad)
mov
test
mov
mov
(bad)
in
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
xchg
movs
mov
pop
push
loope
pop
(bad)
cmp
ins
mov
add
xor
add
loopne
(bad)
ror
in
mov
xchg
leave
push
clc
adc
jmp
aam
push
adc
fild
and
xchg
int3
push
jnp
dec
jmp
xchg
packssdw
movs
or
lahf
push
inc
movs
jl
retf
sub
cmc
xchg
add
ja
inc
imul
adc
mov
and
mov
jmp
add
(bad)
or
pop
pop
cmp
outs
inc
push
dec
sbb
lds
push
mov
fadd
push
mov
aam
call
js
mov
stc
xchg
mov
mov
xchg
dec
cs
adc
lock
ss
inc
xchg
icebp
out
mov
lods
or
pop
fprem
jecxz
fstp
(bad)
shl
out
imul
mov
int
xor
mov
je
int3
fdiv
mov
hlt
stos
int3
fdiv
in
or
jb
retf
(bad)
sub
fnstenv
(bad)
or
enter
mov
jno
mov
or
addr16
fnstcw
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
(bad)
sahf
stc
cld
pop
pop
and
pop
int3
fs
ror
in
xor
ins
xor
sub
add
xchg
int3
sub
hlt
push
mov
pop
mov
js
dec
jmp
ret
mov
sub
adc
out
dec
pop
mov
test
adc
retf
adc
sub
jno
add
jne
ret
xchg
add
not
(bad)
imul
push
inc
out
jae
inc
(bad)
cld
iret
int
imul
push
xchg
inc
push
push
inc
jnp
cdq
inc
sbb
push
mov
lahf
push
loop
xchg
dec
sub
push
jns
adc
lods
mov
(bad)
dec
sub
push
mov
stc
push
mov
cmp
inc
and
mov
dec
push
mov
jle
push
call
add
and
jmp
cmps
jne
dec
pop
imul
lea
sub
mov
mov
or
mov
retf
sbb
sub
in
dec
pop
mov
or
imul
mov
mov
mov
dec
adc
(bad)
push
mov
data16
hlt
sbb
adc
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
xchg
js
pop
xchg
out
icebp
sahf
or
mov
xchg
retf
rol
ins
mov
sub
sbb
fild
jno
push
ret
push
or
clc
xchg
dec
stos
jnp
dec
sub
sbb
cmp
xchg
mov
int
xchg
(bad)
or
pop
pop
jmp
jns
loop
cmps
js
sub
jno
sub
adc
je
sub
xlat
les
xor
les
adc
jae
and
jl
jge
les
mov
sub
push
add
push
imul
mov
je
inc
inc
fdivr
lds
in
mov
push
or
push
mov
stc
pop
leave
test
mov
lahf
and
inc
sbb
cmp
ret
outs
iret
adc
dec
pop
dec
sub
cmps
mov
enter
jno
dec
push
leave
mov
mov
mov
imul
pop
mov
mov
xor
or
mov
or
xor
fcomi
stos
int
je
enter
dec
fwait
imul
call
mov
or
or
or
and
hlt
jmp
daa
jnp
fmul
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
push
and
data16
mov
sahf
xchg
out
mov
add
rol
ins
repnz
sub
xchg
add
outs
pop
pop
int
ds
dec
jmp
dec
ins
jl
(bad)
popf
jmp
gs
fadd
jecxz
inc
shl
push
jge
sub
sub
push
sub
aad
lods
jb
add
xor
adc
push
push
inc
push
xchg
add
jle
mov
imul
sbb
add
xchg
add
cmps
clc
bound
inc
dec
loopne
enter
mov
ja
xor
retf
(bad)
in
call
or
cld
push
or
mov
xlat
or
xchg
mov
cmp
(bad)
out
cmp
lds
(bad)
and
(bad)
arpl
jo
mov
retf
movs
lock
dec
fidiv
jbe
dec
push
or
xor
sub
fidiv
or
push
sbb
in
enter
dec
pop
aaa
push
retf
sbb
sub
aaa
test
(bad)
sub
xor
mov
or
enter
xor
sbb
mov
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
add
mov
pop
add
mov
xchg
int
repnz
stos
xor
xor
or
in
and
dec
sub
adc
jmp
adc
or
cmp
jns
ficom
outs
jle
inc
mov
jmp
mov
or
repnz
ret
fiadd
sub
jb
inc
jmp
add
cmc
rol
lods
repz
outs
jo
inc
jns
mov
mov
repnz
pop
scas
repz
(bad)
rol
dec
out
nop
xchg
int3
out
icebp
iret
xchg
inc
sub
xor
cmp
inc
sub
(bad)
dec
test
push
mov
cmp
dec
imul
into
movs
call
jp
adc
mov
inc
push
cmp
add
push
cmc
aam
fwait
cmc
in
xsha1
cmps
into
xchg
movs
jmp
icebp
scas
andps
mov
inc
sahf
int3
xlat
cli
das
mov
mul
mov
dec
pop
leave
test
mov
shl
enterw
mov
repnz
sbb
xchg
and
inc
inc
mov
ins
inc
fisttp
nop
retf
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
gs
(bad)
int
jecxz
dec
das
jo
shr
add
cmc
xchg
inc
sub
push
add
sub
xor
int3
sub
push
lea
cmp
mov
cmp
fisttp
pop
lock
lea
shl
and
pop
data16
mov
test
adc
sub
fiadd
jo
shr
xchg
inc
stos
je
inc
push
aad
in
cmc
adc
lods
repz
out
mov
shl
or
push
push
repnz
mov
sub
mov
mov
les
stos
ror
ds
call
cmp
mov
nop
iret
out
jl
sbb
sti
jg
push
cmps
mov
test
loop
push
jge
inc
adc
mov
cmp
lds
and
les
loop
add
mov
jnp
add
pop
leave
unpcklps
sub
ins
pop
fdivr
(bad)
jne
sub
fiadd
add
sub
xchg
jne
jo
jmp
pop
popf
jno
xchg
sub
xor
sbb
mov
pop
mov
mov
test
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
and
jp
add
nop
in
hlt
adc
inc
sub
aad
sub
adc
xor
aad
imul
inc
or
inc
ror
sub
mov
mov
pop
lds
imul
inc
pusha
ja
adc
and
push
dec
jmp
sub
adc
lock
jb
ret
xchg
inc
imul
xchg
cmc
adc
in
repz
lods
mov
add
mov
ds
fisubr
xchg
add
not
xchg
mov
ret
adc
inc
(bad)
aad
push
aad
in
mov
push
int
cld
ror
cld
adc
jbe
and
cmp
sbb
js
test
inc
pop
stc
cmp
dec
out
call
test
adc
in
mov
iret
enter
retf
stc
and
fnstenv
fcomp
xor
or
enter
xchg
dec
test
out
popf
cwde
jg
enter
mov
icebp
lods
int3
push
ss
xchg
mov
sbb
aas
stos
mov
call
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
and
jns
mov
mov
int3
xchg
xor
inc
lahf
outs
lock
xchg
in
jae
add
cmc
adc
mov
add
sub
adc
adc
dec
out
call
pushf
add
fwait
add
cmc
fadd
bound
adc
arpl
repnz
sahf
jmp
(bad)
rol
sub
jb
sub
xchg
(bad)
sub
adc
sub
push
test
repz
lods
cmp
inc
dec
jo
sbb
sub
push
xchg
ja
add
mov
inc
sub
jle
push
jae
mov
ins
fild
jo
add
fild
inc
fimul
xor
fstp
xor
dec
mov
std
(bad)
in
pop
int3
out
inc
mov
addr16
xchg
mov
and
aam
das
xor
and
pop
cdq
scas
xor
movs
push
test
in
push
jle
jne
cwde
fidiv
cmps
push
xchg
jns
cmp
and
jmp
fwait
call
neg
in
jge
(bad)
or
out
xor
inc
call
sub
retf
jg
push
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
sbb
or
jae
add
js
mov
ror
mov
inc
sub
xchg
add
adc
test
jne
test
xor
push
inc
outs
scas
mov
rcl
ficomp
and
cwde
fnstcw
add
sub
fstp
mov
or
test
xchg
inc
jmp
aad
outs
repz
inc
lods
mov
push
sub
inc
lods
mov
sub
inc
imul
xchg
add
in
jb
add
xor
sub
shl
fild
ds
fdivrp
repnz
nop
imul
xchg
xchg
xor
outs
xor
ret
rol
stos
icebp
push
inc
and
rcl
add
gs
sbb
in
mov
and
sahf
and
mov
xchg
cmp
push
in
(bad)
and
push
add
xor
call
mov
icebp
pop
and
cmp
cmp
pop
retf
out
adc
mov
cmp
movs
adc
daa
push
retf
cmp
mov
dec
daa
mov
(bad)
fisub
mov
sub
dec
xchg
sub
xor
fdivr
lds
xor
test
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jge
pop
mov
cmp
adc
ins
jne
sub
xchg
ret
xchg
inc
lods
mov
lds
xor
aad
push
xchg
add
jmp
push
inc
jmp
sub
xchg
shr
xlat
pop
sub
push
push
test
aaa
push
inc
stos
mov
inc
loope
rol
lods
jne
inc
stos
repz
add
not
inc
sub
(bad)
xchg
jae
add
mov
ret
nop
shr
add
adc
mov
stc
fcomp
push
jbe
xchg
aad
lods
xor
add
mov
ret
push
sub
adc
scas
(bad)
fiadd
pusha
mov
pop
dec
gs
call
mov
fisttp
test
push
pop
stos
xor
xchg
jns
movs
in
xor
and
cmp
push
mov
(bad)
data16
icebp
adc
cmp
and
in
mov
xor
(bad)
and
daa
cmp
ja
lods
in
ja
adc
cmp
push
pop
xor
test
pushw
xchg
mov
jle
pop
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cmp
cld
lahf
push
outs
mov
inc
das
mov
shr
xchg
ret
aad
stos
cmc
adc
test
mov
lds
xchg
add
stos
cmc
xchg
add
jmp
mov
(bad)
imul
xchg
(bad)
imul
adc
lods
jne
ret
in
repnz
sub
pop
test
mov
(bad)
imul
push
test
rol
in
repnz
mov
ret
in
xor
sub
les
inc
push
loop
lahf
shr
jbe
(bad)
jmp
xor
sub
repz
ret
push
ret
nop
inc
ins
xor
sub
adc
jo
inc
outs
ds
add
ds
iret
loopne
fmul
in
call
cli
call
mov
add
adc
stos
je
xchg
mov
xchg
pop
in
xor
add
inc
shl
push
push
pop
test
jp
xchg
lods
jae
or
mov
cmp
and
mov
xchg
dec
jmp
lds
repz
cmp
xor
sahf
xlat
adc
jg
dec
xor
(bad)
pusha
pop
call
enter
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
cmp
cmp
adc
lods
xor
add
jb
add
xor
adc
test
mov
lds
xchg
add
stos
cmc
xchg
add
jmp
push
test
aaa
(bad)
(bad)
jmp
not
(bad)
test
hlt
adc
outs
mov
lds
adc
stos
mov
add
not
(bad)
imul
(bad)
xchg
ss
(bad)
stos
mov
lds
repnz
add
sub
mov
sub
fadd
mov
xchg
ds
or
not
in
jne
inc
in
xor
xchg
ret
sub
adc
sub
push
sub
ret
out
jae
sub
push
sub
adc
mov
cmp
call
mov
ror
repnz
sub
push
inc
jmp
xchg
add
xor
dec
ins
mov
sub
add
shl
jmp
int3
lods
jae
dec
lods
lock
inc
jns
loopne
mov
adc
jmp
pushf
test
cmps
inc
or
mov
xchg
arpl
ins
in
pushf
(bad)
aad
lock
dec
clc
push
not
pushf
aas
data16
les
dec
inc
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cmp
shr
jae
sub
ret
rol
cmc
rol
jmp
test
mov
lds
xchg
add
stos
cmc
xchg
add
jmp
inc
sub
mov
inc
test
push
(bad)
sub
mov
sub
xchg
les
not
sub
xchg
(bad)
imul
push
push
ins
jne
inc
ins
jne
ret
jmp
inc
in
jne
inc
stos
xor
add
xchg
add
rol
loopne
push
inc
loop
fimul
out
mov
shr
push
add
repz
ret
nop
sub
ret
out
repz
ret
adc
popa
ds
add
(bad)
fmul
pusha
mov
popf
mov
lahf
or
lock
call
je
(bad)
push
rol
push
adc
ret
lods
cwde
cmp
adc
xor
sub
int
out
outs
sbb
sub
ffreep
popa
mov
or
add
aad
repnz
retf
and
fdivp
sahf
(bad)
pop
aas
test
dec
jl
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
gs
mov
mov
adc
jmp
push
add
xchg
add
repnz
mov
lds
xor
aad
push
xchg
add
sub
adc
jmp
inc
ins
jne
inc
stos
hlt
push
inc
jmp
adc
inc
jmp
xchg
inc
imul
xchg
(bad)
test
aaa
(bad)
inc
jmp
rol
in
mov
lds
mov
sub
lods
jne
sub
rol
xor
ins
mov
shr
push
sub
add
lock
in
cmc
push
inc
sub
mov
add
shr
inc
scas
xor
scas
mov
shr
push
and
shl
sbb
pusha
cli
fimul
cmp
lahf
or
ror
repnz
sub
push
inc
jmp
add
sub
push
(bad)
jmp
mov
and
out
inc
test
xchg
xchg
repnz
xor
(bad)
bound
sub
xchg
(bad)
sub
nop
ret
outs
mov
sub
sar
sbb
jb
dec
mov
shl
sub
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
ins
pop
mov
mov
push
aas
pop
mov
ins
xor
sub
sub
push
test
xchg
inc
sub
adc
stos
mov
sub
inc
ins
mov
test
mov
add
stos
xor
sub
push
add
not
xchg
mov
push
stos
mov
xchg
ja
les
xor
adc
stos
repz
ret
xchg
test
adc
jmp
inc
ins
jne
ret
jmp
add
sub
adc
das
repz
sub
rol
sub
mov
ret
nop
add
mov
add
ins
jo
inc
out
xor
outs
jae
sub
mov
popf
mov
mov
pushf
or
mov
mov
mov
je
test
xor
(bad)
sub
sub
push
inc
jmp
xor
cmps
stos
sti
cmps
push
inc
test
je
xchg
jae
add
mov
pop
add
xchg
(bad)
in
xor
out
xor
sub
or
call
fisttp
xchg
jb
lds
xchg
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
pop
dec
mov
ror
mov
js
and
xor
lds
repnz
jmp
lds
mov
inc
imul
sub
je
ret
aad
ins
jne
inc
stos
mov
sub
inc
lods
xor
xchg
inc
sub
add
jmp
add
in
xor
ret
jmp
add
jmp
lds
nop
inc
sub
sub
lds
jo
add
repnz
add
repnz
ret
nop
add
xchg
sub
rol
lods
xor
inc
cs
ret
rol
ds
shl
sbb
cli
fimul
(bad)
call
mov
xor
shr
test
jne
xchg
hlt
xchg
inc
sub
push
les
mov
shl
sub
es
ret
xchg
(bad)
sub
adc
test
mov
and
sub
stos
push
add
xor
(bad)
in
xor
outs
mov
sub
js
outs
sbb
push
xchg
int3
outs
icebp
fild
into
push
xor
jnp
pop
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
bound
and
cmp
sbb
dec
push
(bad)
jmp
inc
xchg
cmp
mov
add
xor
add
cmc
xchg
add
xor
add
xor
in
mov
add
xor
inc
imul
lds
adc
xor
in
jne
add
xor
add
xor
out
xor
rol
sub
xchg
add
push
add
hlt
push
ret
push
xchg
ret
xchg
test
adc
scas
mov
add
stos
mov
ret
xchg
inc
lods
mov
sub
adc
inc
sub
adc
out
repnz
ret
nop
add
xchg
ret
das
mov
sub
push
inc
ins
xor
outs
mov
sub
faddp
mov
ds
dec
popa
cli
sbb
and
pop
lea
jo
add
je
test
xor
push
inc
stos
cmc
adc
inc
popa
jb
dec
loope
movs
mul
call
sub
aad
jmp
inc
daa
retf
stos
sub
ins
push
inc
jmp
xor
inc
outs
mov
and
ret
and
aad
mov
stos
or
dec
adc
sbb
mov
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
bound
and
ror
pop
dec
xlat
xor
jge
or
jns
or
pop
cmc
dec
hlt
test
xchg
pushf
jmp
pop
pop
sub
mov
add
mov
sub
sub
add
je
sub
sub
xchg
inc
ins
hlt
push
sub
xchg
inc
outs
jb
add
hlt
xchg
shr
rol
jb
add
xor
sub
xor
xor
sub
aad
sub
xor
out
repnz
inc
ins
jne
add
repnz
test
xor
out
mov
add
stos
mov
add
jb
inc
in
icebp
push
and
adc
sub
adc
scas
mov
add
call
add
sbb
outs
cli
sbb
bound
pop
or
push
push
inc
imul
(bad)
stos
ja
(bad)
adc
sub
test
mov
add
ficom
jmp
test
xor
inc
gs
mov
imul
add
lock
sub
nop
add
xchg
push
out
mov
inc
cmp
or
push
pop
pusha
movs
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
and
dec
sahf
(bad)
(bad)
mov
mov
aam
sahf
dec
push
mov
mov
(bad)
adc
add
in
ja
inc
jmp
rol
scas
repnz
inc
sub
jno
ret
aam
ins
hlt
rol
jno
sub
adc
mov
add
xchg
lds
jno
add
repz
test
xchg
ret
popa
repz
add
push
rol
and
push
test
push
ret
aad
ins
cmc
fmulp
jmp
lds
push
ret
pusha
mov
inc
outs
mov
(bad)
in
call
and
push
add
jb
(bad)
lods
jg
add
mov
inc
loope
pushf
dec
scas
jge
(bad)
gs
push
and
sbb
mov
push
and
dec
lods
mov
aad
jmp
push
test
cmc
xlat
push
imul
add
je
test
mov
sub
test
jne
inc
sub
adc
lds
jno
and
repnz
ret
xchg
shl
fwait
retf
in
pop
mov
mov
(bad)
mov
mov
jecxz
hlt
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
xchg
pusha
gs
cdq
arpl
push
iret
(bad)
mov
cld
loope
sub
aad
adc
xchg
mov
cmp
or
push
dec
adc
dec
cmc
sbb
test
adc
pop
jmp
ret
xchg
add
je
sub
jae
les
into
sub
sub
ror
jmp
inc
ins
cmc
pop
pminsw
adc
loopne
aad
ins
cmc
pop
pminsw
push
and
lds
xchg
and
test
mov
aad
lods
cmc
push
dec
push
rol
xor
(bad)
in
aas
rol
and
popf
lea
(bad)
adc
sub
fmulp
bound
rol
jo
dec
out
mov
rol
movs
mov
retf
scas
cmp
mov
rol
(bad)
mov
inc
outs
lock
add
not
xchg
je
inc
sub
add
push
adc
sub
push
inc
jmp
inc
lods
jb
ret
adc
mov
shl
xchg
dec
sub
jo
ret
out
ds
inc
loopne
pop
dec
arpl
mov
cdq
or
popa
push
shl
cld
add
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
or
or
pop
mov
jno
std
popa
or
aam
sahf
(bad)
(bad)
icebp
sub
popa
or
(bad)
leave
lahf
(bad)
jle
cmp
pop
mov
add
test
push
inc
in
cmc
xchg
test
jle
ret
loope
xchg
add
je
dec
stos
mov
aam
sub
sbb
push
push
and
lds
fisttp
sub
adc
push
jmp
lds
std
nop
and
adc
cvtpi2ps
adc
xor
iret
jmp
ret
pop
shrd
and
call
ds
inc
and
pop
(bad)
in
push
add
fwait
mov
pop
int
cli
nop
shl
sbb
mov
mov
aam
fwait
clc
cmps
call
outs
sub
push
inc
stos
mov
(bad)
sub
aam
test
mov
xchg
xor
xchg
inc
ins
xor
sub
mov
inc
ins
mov
sub
in
xor
sub
sub
xchg
shr
push
inc
and
sahf
into
mov
cmp
dec
mov
xchg
pop
dec
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
xchg
popa
cmp
ins
ror
sub
xlat
mov
(bad)
jmp
cmp
dec
imul
loopne
imul
xor
(bad)
in
push
push
cmp
out
not
sub
inc
lods
je
inc
sub
imul
ret
mov
je
dec
stos
mov
push
test
jne
adc
je
push
lds
pop
pop
dec
or
add
push
pushf
dec
mov
xor
lods
js
mov
sbb
cmp
movs
jno
sub
int3
push
push
add
xchg
inc
mov
sti
pop
dec
movs
mov
sbb
lods
mov
push
inc
and
lahf
dec
and
xchg
and
fmul
lods
imul
xchg
aas
push
cmp
mov
int3
(bad)
jo
cmp
adc
sub
aam
sub
push
test
xor
(bad)
imul
jmp
xchg
inc
push
push
les
mov
(bad)
adc
add
in
xor
sub
ret
adc
icebp
xchg
shr
xchg
add
or
in
cmp
int3
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
addr16
mov
or
jl
lea
xchg
or
adc
or
(bad)
or
xchg
cmp
cmp
imul
aas
imul
xchg
mov
inc
sbb
nop
mov
mov
xchg
cmp
push
add
mov
sub
aad
and
jl
push
inc
push
fsubp
aad
jle
stos
jl
mov
xchg
ins
adc
mov
jmp
arpl
test
je
xchg
and
add
cmps
fisttp
jle
add
xor
adc
out
xchg
and
mov
adc
in
(bad)
xchg
add
xor
outs
xor
add
mov
xchg
inc
ret
in
loopne
test
or
cld
call
mov
(bad)
aas
jmp
jns
mov
sub
xchg
adc
imul
inc
imul
mov
test
cmc
push
add
mov
lds
xor
push
vpsrld
sub
adc
das
xor
add
js
mov
fist
inc
jecxz
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
aas
inc
push
cmp
jmp
ror
fimul
cs
push
inc
(bad)
mov
std
out
or
(bad)
mov
ds
sti
mov
or
iret
push
jg
cmp
imul
out
or
(bad)
mov
push
xor
adc
call
outs
fild
jle
call
fist
cld
imul
xlat
pushf
sbb
add
mov
xchg
xchg
fimul
outs
int
sbb
xchg
cmp
or
mov
xchg
ret
lahf
sub
push
cmp
adc
mov
or
cmc
sub
add
push
outs
jmp
imul
(bad)
dec
pushf
or
cmp
cmp
or
push
leave
fimul
jle
mov
in
adc
mov
xchg
push
(bad)
stos
hlt
push
les
jne
add
push
adc
inc
lods
jb
inc
in
mov
sub
push
sub
faddp
loopne
fisttp
sbb
in
jbe
cmp
inc
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
aam
or
mov
adc
in
pop
loopne
stos
mov
xchg
(bad)
ins
mov
xchg
enter
xor
out
or
dec
xchg
jno
mov
xlat
dec
push
adc
sub
(bad)
leave
pop
dec
xchg
mov
cmp
or
xlat
mov
cmp
lea
lock
lahf
sub
test
pop
push
or
cli
imul
rol
das
inc
dec
mov
call
ret
dec
movs
jb
push
retf
arpl
pusha
stos
mov
(bad)
push
nop
or
push
sbb
pop
les
or
pop
or
push
mov
test
adc
addr16
cmp
mov
mov
or
cmp
dec
pop
orps
imul
push
(bad)
imul
mov
xchg
add
mov
test
cmc
push
inc
lods
jb
ret
sub
adc
in
jb
add
xchg
shr
push
loope
pop
push
and
(bad)
ins
pop
dec
dec
cmp
xlat
and
gs
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
(bad)
xchg
dec
jmp
mov
xchg
ds
mov
nop
retf
pop
dec
xchg
lods
cld
popa
or
dec
push
mov
imul
pusha
dec
imul
pusha
or
xlat
dec
xchg
(bad)
lock
js
or
push
dec
adc
int
(bad)
mov
push
pop
push
adc
push
mov
fld
out
pop
inc
mov
test
ss
inc
mov
ja
inc
mov
xor
int3
std
sub
call
inc
inc
fnstsw
ja
(bad)
out
or
(bad)
dec
inc
push
xchg
and
dec
imul
and
cld
or
(bad)
or
adc
in
cmp
or
xlat
dec
sbb
push
jl
cmp
mov
dec
push
mov
imul
push
ds
stc
nop
dec
pop
(bad)
arpl
xchg
or
arpl
sbb
jecxz
dec
mov
ficom
sti
inc
push
addr16
jl
fmul
arpl
adc
jmp
dec
jne
xchg
in
addr16
sbb
retf
cld
ret
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
sbb
add
push
pusha
into
sub
mov
dec
stos
mov
pop
jg
cld
mov
dec
popf
dec
push
ds
cmp
test
mov
jg
cmp
or
jns
leave
fimul
(bad)
mov
cmp
imul
outs
or
xchg
int3
push
cmp
xor
aam
dec
adc
xlat
in
mov
imul
mov
sbb
lds
loop
xchg
mov
in
add
repnz
adc
mov
cmp
rol
mov
mov
xchg
add
neg
(bad)
(bad)
mov
or
or
(bad)
mov
xchg
and
dec
imul
and
imul
and
imul
pusha
or
xchg
or
orps
test
mov
dec
fmul
aas
pop
add
mov
aad
dec
or
jne
std
adc
add
mov
adc
adc
loop
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
cmp
adc
jg
jmp
sahf
nop
aas
popa
xor
in
jl
dec
push
push
pop
jg
cld
jecxz
imul
scas
mov
(bad)
push
cld
sub
mov
mov
push
push
ds
cmp
dec
sahf
into
push
aas
sub
loope
imul
cli
data16
xor
shr
jp
lahf
aad
inc
and
es
(bad)
lahf
(bad)
adc
and
es
(bad)
lahf
(bad)
adc
and
cmps
clc
imul
sbb
je
stos
jmp
adc
mov
int3
push
mov
xchg
and
cmp
dec
imul
(bad)
popa
imul
mov
(bad)
and
cmp
dec
imul
loop
imul
push
mov
imul
push
mov
imul
mov
rcr
mov
add
pusha
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
push
pop
or
mov
ins
xor
das
cmp
mov
sub
ror
jmp
loopne
imul
push
jl
cmp
dec
sub
dec
(bad)
xchg
mov
imul
(bad)
jle
cmp
or
(bad)
leave
pop
into
push
jmp
cmp
jns
xor
(bad)
movs
xchg
pop
clc
in
fdivr
push
sbb
retf
cmp
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
gs
std
push
pop
int3
dec
inc
shl
data16
scas
fwait
adc
mov
mov
or
(bad)
or
push
and
cmp
dec
imul
jg
imul
(bad)
and
cmp
or
aam
sbb
and
mov
jge
jns
or
(bad)
mov
mov
or
(bad)
leave
(bad)
into
jge
loopne
scas
iret
push
mov
ret
in
in
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jp
pop
or
daa
pop
adc
pusha
shr
sar
cs
dec
lods
jge
or
pop
cld
push
cmp
mov
(bad)
mov
imul
push
aas
test
loopne
imul
and
imul
outs
and
mov
mov
lods
mov
bound
inc
sbb
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
xchg
arpl
dec
out
aad
or
and
push
aam
cld
sbb
nop
mov
les
and
cmp
imul
and
cmp
or
cmp
imul
push
sti
test
cmp
mov
and
jns
leave
pop
setbe
mov
(bad)
leave
sbb
mov
retf
jp
fsub
in
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cli
imul
xchg
aas
out
cmp
add
pop
mov
fidivr
pusha
jae
sub
push
std
stos
cmp
(bad)
leave
pop
or
sub
or
xchg
dec
pop
setbe
imul
push
jle
cmp
mov
ins
cmps
fisub
or
lds
mov
iret
mov
and
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
in
out
call
jb
adc
adc
xchg
cmps
imul
(bad)
mov
rcl
or
(bad)
leave
adc
in
cmp
imul
push
cmp
and
or
and
or
aam
scas
(bad)
loopne
jmp
or
jns
jb
test
nop
idiv
hlt
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cli
test
pop
adc
loopne
loope
fadd
dec
sahf
jmp
lock
pop
mov
mov
(bad)
or
jns
or
xchg
leave
lahf
mov
sub
pusha
or
(bad)
dec
pop
(bad)
(bad)
mov
sub
sbb
inc
imul
in
add
imul
in
repnz
inc
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
pushf
(bad)
(bad)
jp
push
gs
push
sub
mov
sub
xlat
mov
adc
and
jns
dec
add
jp
imul
(bad)
mov
imul
xchg
jl
cmp
adc
scas
mov
(bad)
leave
sbb
icebp
sub
sbb
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
sub
push
aas
and
ret
loope
pop
add
dec
sahf
mov
pusha
xor
add
aas
in
sub
(bad)
mov
jecxz
imul
jg
cmp
imul
cld
sub
or
jns
(bad)
adc
in
(bad)
mov
outs
or
retf
inc
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
sbb
sub
ror
xor
outs
sti
or
xlat
mov
(bad)
mov
imul
cmp
dec
pop
adc
es
sub
push
jge
cli
mov
retf
xchg
mov
imul
fsub
xor
mov
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
pop
pop
aad
mov
loope
fild
int3
sahf
cmp
xor
scas
(bad)
ror
or
outs
jg
retf
(bad)
leave
sbb
cmp
dec
fmul
cmp
jns
or
xchg
mov
cld
imul
jno
ror
gs
retf
push
lea
mov
cmp
dec
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
fst
sub
mov
(bad)
or
mov
push
out
sub
jle
imul
mov
imul
mov
imul
(bad)
cmp
cmp
imul
mov
mov
std
push
and
or
or
div
or
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
push
pop
aad
mov
and
add
adc
mov
shrd
cwde
leave
push
sti
das
mov
xlat
dec
popf
dec
push
cmp
imul
jge
cmp
or
cmp
jl
add
stc
ja
jl
jbe
mov
inc
pop
pusha
fs
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
push
cdq
out
cmp
ret
stos
ja
(bad)
sub
xlat
dec
adc
sub
dec
cmp
or
adc
and
cmp
inc
rcl
sub
cmps
mov
or
cli
push
gs
outs
mov
push
cmp
jge
or
(bad)
leave
or
lods
or
mov
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
jmp
popa
cmp
fimul
fcmove
push
mov
in
mov
xchg
jp
mov
aam
pop
dec
push
cmp
imul
(bad)
jl
cmp
imul
(bad)
std
sti
cmp
mov
(bad)
mov
mov
xor
rcr
mov
je
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
mov
pop
pavgw
push
ret
jmp
fwait
ret
sub
push
out
push
mov
push
and
cmp
imul
cmps
cs
(bad)
jl
mov
or
jmp
int3
fisttp
or
(bad)
mov
sbb
mov
imul
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
lods
pop
adc
arpl
cmp
nop
sti
out
ds
int
mov
iret
imul
sub
mov
dec
sbb
(bad)
jg
cmp
mov
pop
xor
mov
and
enter
and
dec
cmp
push
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
pop
or
mov
xchg
dec
push
dec
add
push
and
jno
imul
push
mov
imul
fs
fimul
ins
jmp
sub
lahf
mov
nop
cmp
sub
pop
push
or
retf
cmp
aam
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cmp
or
jecxz
adc
jecxz
scas
js
rcr
fs
lods
mov
sar
(bad)
mov
mov
(bad)
(bad)
jge
cmp
imul
mov
imul
mov
inc
pop
fs
dec
dec
stos
push
push
cmc
and
stc
aam
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
cmp
aas
push
pop
cs
(bad)
les
pop
push
push
jecxz
cmp
or
xchg
mov
xchg
mov
sub
xchg
or
xchg
shl
jg
inc
outs
(bad)
fmulp
fwait
or
outs
icebp
gs
stos
mov
adc
popa
mov
retf
sub
or
xchg
add
leave
ins
xor
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
sbb
in
mov
add
int3
pushf
mov
sub
push
dec
fisttp
xchg
mov
stos
mov
xchg
jp
cmp
or
xchg
mov
jns
mov
imul
into
movs
cmp
xchg
dec
adc
dec
shl
movs
je
jp
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
aad
or
jg
push
popa
xor
dec
sub
mov
push
mov
pop
mov
jmp
adc
mov
mov
xchg
mov
scas
mov
push
mov
sub
or
dec
bound
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
xchg
pop
or
cmp
xchg
call
jns
mov
pop
cmp
sub
push
mov
dec
adc
das
xor
push
or
in
imul
xchg
js
cmp
xchg
idiv
movs
jl
cmp
mov
jle
or
mov
les
movs
je
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
xchg
xchg
sub
xchg
sub
or
xlat
or
jnp
or
push
push
loop
jg
sub
xchg
cmp
sub
xchg
mov
or
popa
xor
mov
aad
jmp
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
(bad)
adc
imul
or
int3
push
jp
icebp
and
out
mov
lea
jg
or
fcmove
xchg
cmp
jns
or
jns
mov
jl
call
pop
mov
and
fdiv
add
push
jecxz
hlt
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
inc
push
mov
lock
push
adc
in
mov
add
or
ja
leave
adc
int
jnp
retf
xchg
mov
out
jl
mov
lock
shr
xchg
int3
pop
dec
sar
outs
xor
or
jge
fwait
dec
xchg
xor
out
adc
bswap
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
aam
or
jle
xchg
jp
das
xchg
in
mov
jge
dec
sbb
push
cmp
xor
or
retf
das
aas
in
call
dec
(bad)
imul
fld
push
or
rcl
and
cmp
add
sbb
sbb
retf
cmp
push
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
(bad)
int
mov
xor
inc
sub
pushf
pop
sub
(bad)
mov
xchg
and
cmp
rcl
scas
(bad)
cmp
sbb
xchg
cmp
jo
into
lods
mov
aam
imul
or
mov
mov
pop
(bad)
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jl
aad
mov
jmp
adc
loope
loop
and
pop
iret
pop
(bad)
adc
dec
imul
push
js
cmp
adc
cmp
xchg
inc
scas
mov
or
scas
rcl
fmul
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
std
popa
lahf
lea
xor
sub
xchg
ror
xchg
arpl
mov
adc
and
aas
cli
inc
das
(bad)
fimul
sbb
shr
pop
or
es
mov
and
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jge
push
scas
cmp
adc
inc
in
ror
adc
mov
ins
mov
push
cmp
cmp
mov
or
xor
stos
repnz
shl
jnp
or
inc
xchg
jno
test
arpl
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jge
pop
int3
clc
ds
ret
sub
push
inc
xor
push
daa
sub
mov
dec
add
jecxz
sti
jp
outs
cld
fimul
cdq
push
sar
mov
call
mov
mov
and
xor
shl
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
xchg
bound
fiadd
sbb
shl
ds
and
sbb
push
add
aas
jns
das
push
mov
js
pop
add
sub
sahf
test
js
into
cmp
cmp
xchg
enter
and
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
adc
xchg
(bad)
ins
cmc
adc
lds
or
xlat
mov
adc
ins
cmp
jmp
push
dec
(bad)
pop
xlat
clc
lods
std
in
test
mov
imul
jl
sbb
loop
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
and
jnp
ror
mov
into
std
aaa
push
adc
daa
xchg
data16
push
in
ror
stos
mov
test
add
sbb
jns
inc
or
cmps
enter
sbb
retf
cld
add
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
mov
pop
cdq
loope
adc
imul
inc
or
or
aam
xchg
mov
imul
xchg
iret
call
mov
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
mov
icebp
popf
adc
sub
add
stos
jne
add
mov
add
mov
fmul
out
sbb
jb
(bad)
mov
jne
cmp
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
in
mov
xchg
or
jne
inc
imul
sbb
imul
(bad)
mov
pop
push
imul
inc
pop
fwait
push
mov
pop
pop
aad
cld
inc
xchg
jecxz
mov
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
aam
or
mov
xchg
popa
icebp
push
push
and
mov
jge
dec
loop
mov
mov
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
lea
fwait
xchg
scas
mov
shr
ret
push
add
repnz
mov
pop
fmul
push
cld
mov
mov
cmp
dec
mov
push
pop
int3
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
in
pop
pushf
or
mov
push
pushf
dec
mov
and
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jge
push
jecxz
fcomp
arpl
adc
imul
add
xlat
push
push
xchg
inc
sub
sub
xchg
inc
outs
jge
ret
mov
and
sbb
retf
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cld
adc
hlt
and
adc
int3
retf
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
loop
in
push
fcom
fst
xchg
mov
jle
mov
clc
dec
push
cmp
popf
dec
dec
cmp
push
and
xor
cmp
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
jge
push
mov
push
sbb
mov
mov
adc
mov
cmp
shl
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
movs
mov
jge
pop
int3
retf
cld
adc
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
adc
or
cmp
aad
in
and
or
xchg
add
inc
sub
sub
xchg
xchg
add
jmp
pop
shl
sub
and
dec
sub
and
xor
neg
neg
and
mov
jmp
call
add
or
xchg
jmp
pop
xchg
add
sub
dec
add
mov
mov
add
mov
jmp
ret
or
sub
rol
mov
shr
sub
or
rol
shl
sub
add
add
not
jmp
call
add
bswap
or
mov
xchg
mov
mov
bswap
add
add
or
add
jmp
pop
shr
ror
add
xchg
and
sub
xor
jmp
push
or
xor
shl
xchg
shr
or
and
and
and
or
not
jmp
pop
add
mov
inc
sub
mov
and
neg
jmp
ret
mov
neg
mov
inc
add
add
jmp
ret
xor
sub
xchg
mov
xchg
neg
or
shl
dec
or
inc
jmp
call
shr
shl
xchg
and
add
or
or
sub
not
add
xchg
inc
xchg
bswap
jmp
pop
sub
not
not
xor
xchg
and
rol
add
shr
xchg
sub
xchg
or
mov
jmp
call
mov
mov
or
shl
mov
dec
neg
xor
mov
jmp
call
xchg
not
xchg
xor
xor
mov
xchg
jmp
pop
neg
xor
not
add
and
sub
sub
or
add
and
shl
sub
jmp
push
shr
rol
sub
bswap
add
xor
or
sub
or
bswap
mov
or
jmp
push
not
and
and
add
or
xchg
inc
xor
or
or
mov
and
bswap
or
jmp
add
add
add
add
shr
jmp
xor
add
dec
mov
rol
or
neg
sub
sub
rol
mov
xor
or
add
mov
xchg
jmp
push
mov
xor
mov
shl
rol
or
not
mov
mov
mov
mov
sub
sub
jmp
pop
or
add
xor
sub
sub
sub
mov
sub
xor
xor
jmp
nop
add
xor
sub
xor
shr
mov
mov
mov
jmp
pop
mov
bswap
add
shr
or
jmp
push
sub
xor
xor
mov
sub
sub
add
jmp
push
mov
bswap
and
jmp
push
shr
not
or
add
xchg
and
xchg
jmp
mov
mov
and
add
inc
mov
add
xchg
or
inc
sub
sub
mov
jmp
push
or
mov
jmp
call
neg
ror
xor
rol
or
add
inc
neg
mov
xor
xchg
mov
jmp
mov
and
xor
sub
shr
inc
or
xor
mov
rol
dec
xor
jmp
jl
xor
and
inc
xor
jmp
mov
and
or
and
dec
and
jmp
call
or
ror
mov
mov
xor
and
jmp
push
shl
add
and
or
sub
add
xor
and
xor
dec
xor
and
add
rol
mov
or
jmp
xor
xchg
or
not
or
mov
xor
jmp
mov
or
ror
xor
and
and
sub
not
xor
shl
xchg
and
jmp
add
or
xor
dec
mov
xor
shl
sub
or
xor
or
rol
inc
or
jmp
push
or
sub
add
sub
and
shl
inc
xchg
or
jmp
call
or
xor
xchg
ror
add
not
shr
sub
and
not
jmp
ret
xchg
xor
ror
shr
add
or
neg
shr
jmp
pop
neg
xchg
sub
add
neg
xor
dec
xor
jmp
pop
add
shr
bswap
add
sub
xchg
xchg
and
add
mov
mov
jmp
pop
or
shr
add
mov
mov
mov
add
xor
neg
bswap
xor
xchg
jmp
mov
neg
or
and
xor
sub
xor
and
shr
mov
or
sub
sub
mov
jmp
mov
xor
inc
or
mov
mov
mov
jmp
push
shl
add
add
or
mov
add
bswap
not
and
sub
jmp
mov
dec
xor
and
mov
and
jmp
pop
xchg
or
sub
shr
or
bswap
sub
mov
xchg
inc
mov
or
xchg
xor
and
jmp
mov
xor
dec
rol
jmp
mov
mov
dec
xor
ror
mov
add
mov
and
and
and
jmp
pop
xor
add
add
mov
jmp
movzx
xchg
and
shr
or
add
mov
xor
add
sub
sub
jmp
call
or
add
nop
sub
inc
xor
add
and
bswap
jmp
call
rol
or
add
xor
add
xor
or
xor
and
jmp
pop
xor
or
xor
and
sub
xor
xchg
or
xor
jmp
call
inc
xchg
shr
mov
add
sub
sub
shr
sub
or
mov
inc
shl
rol
jmp
xor
and
sub
shr
sub
and
sub
jmp
push
xor
mov
mov
sub
mov
and
jmp
push
xor
xor
dec
mov
or
inc
or
nop
bswap
sub
rol
or
jmp
call
add
sub
not
xchg
mov
rol
xchg
neg
bswap
jmp
pop
xchg
and
add
rol
sub
mov
dec
and
sub
jmp
nop
sub
neg
add
and
and
shl
or
dec
or
jmp
sub
and
or
and
shl
or
mov
add
shl
neg
jmp
mov
sub
sub
inc
bswap
xor
add
add
or
xchg
add
mov
jmp
mov
or
and
sub
or
add
xchg
jmp
push
mov
add
and
or
or
xor
shr
or
jmp
mov
or
inc
ror
sub
sub
bswap
shr
mov
sub
jmp
call
mov
sub
neg
add
neg
shl
xchg
add
not
not
mov
rol
or
sub
add
jmp
call
sub
or
or
mov
add
or
not
ror
jmp
push
not
or
sub
and
sub
mov
jmp
pop
mov
xchg
add
mov
xchg
xor
jmp
call
shl
and
ror
xor
and
mov
ror
mov
jmp
mov
bswap
or
shr
xor
sub
mov
not
and
sub
jmp
push
not
sub
sub
and
mov
xor
mov
jmp
push
xor
neg
add
add
ror
or
add
and
xor
sub
jmp
call
mov
or
and
add
add
xor
add
jmp
nop
shl
xor
or
ror
rol
rol
or
mov
jmp
call
mov
xor
add
add
xor
jmp
pop
xor
not
ror
and
xor
shr
shl
or
jmp
add
rol
shl
sub
mov
xor
xchg
rol
xor
jmp
push
sub
rol
add
jmp
call
sub
xor
xchg
xor
or
sub
add
and
jmp
mov
xor
sub
rol
mov
add
mov
mov
or
sub
jmp
ret
add
xor
dec
xor
sub
and
add
and
and
jmp
pop
add
mov
mov
ror
and
and
sub
shl
bswap
or
jmp
mov
or
xchg
mov
rol
rol
add
or
jmp
call
sub
not
bswap
sub
bswap
jmp
call
not
xor
mov
xchg
jmp
pop
mov
mov
jmp
mov
mov
bswap
sub
dec
inc
or
and
xor
sub
or
jmp
pop
add
or
bswap
and
xor
rol
shl
xchg
dec
or
xor
jmp
pop
shr
sub
shr
sub
xchg
add
xor
or
or
xchg
shr
jmp
mov
rol
xor
shl
or
xchg
bswap
jmp
call
add
mov
nop
mov
xchg
dec
mov
jmp
mov
mov
add
mov
mov
and
bswap
xor
or
jmp
call
xchg
and
bswap
mov
add
and
sub
mov
jmp
pop
mov
shr
mov
jmp
ret
sub
sub
shl
or
and
add
and
or
xor
xchg
jmp
mov
sub
inc
dec
dec
and
xor
rol
ror
xor
jmp
xor
and
sub
or
sub
or
mov
xor
ror
xor
mov
add
sub
xor
xor
jmp
add
rol
and
rol
mov
mov
dec
not
and
shl
mov
shr
or
shr
jmp
mov
xchg
sub
and
ror
xor
mov
add
mov
mov
rol
xor
jmp
call
bswap
add
add
sub
xchg
add
and
and
jmp
mov
sub
neg
and
add
shr
or
bswap
dec
and
bswap
add
not
sub
shl
or
jmp
pop
inc
xor
bswap
add
ror
rol
or
neg
sub
bswap
sub
and
dec
jmp
add
and
xchg
xor
add
xor
bswap
xor
add
mov
mov
and
sub
shl
mov
xchg
jmp
add
and
or
inc
and
or
dec
or
jmp
call
xchg
add
sub
xchg
add
shl
jmp
push
rol
xor
and
shl
add
xor
bswap
dec
mov
and
jmp
push
xchg
and
xor
not
xor
jmp
mov
shl
mov
sub
add
bswap
mov
or
ror
or
bswap
or
or
jmp
push
mov
mov
add
sub
jmp
call
and
xor
add
mov
jmp
pop
add
and
mov
and
or
jmp
push
rol
xchg
dec
add
add
or
xor
add
neg
jmp
mov
sub
sub
mov
xchg
neg
mov
mov
xchg
xchg
not
rol
add
jmp
call
inc
rol
rol
sub
or
add
dec
jmp
call
bswap
neg
shr
or
and
and
shl
add
neg
jmp
call
or
ror
xor
bswap
bswap
add
ror
nop
sub
xchg
shl
mov
jmp
push
mov
bswap
xor
inc
or
xor
or
jmp
mov
xor
and
mov
ror
or
or
jmp
pop
or
and
xchg
and
sub
add
xchg
sub
xchg
jmp
push
and
bswap
add
sub
sub
or
xor
sub
or
sub
jmp
push
not
mov
xchg
add
add
or
mov
xchg
not
bswap
neg
bswap
or
jmp
cmp
jmp
call
or
shl
and
and
xor
or
shr
mov
mov
neg
or
neg
xchg
jmp
call
and
neg
or
and
xchg
neg
add
neg
jmp
call
xor
mov
sub
mov
mov
add
and
sub
and
xor
jmp
push
xor
not
nop
bswap
mov
xor
sub
jmp
jne
neg
rol
add
xchg
not
xchg
jmp
add
mov
shl
or
jmp
inc
and
xor
not
nop
shr
sub
or
sub
and
jmp
push
ror
sub
mov
or
jmp
pop
rol
xor
add
xchg
and
and
and
jmp
call
xchg
or
bswap
dec
xor
or
or
sub
xor
or
mov
inc
sub
mov
and
jmp
push
and
add
xor
mov
add
or
and
xor
not
jmp
call
sub
sub
sub
xor
add
shl
rol
ror
or
inc
add
xor
and
jmp
push
and
xchg
neg
mov
add
or
ror
xor
not
sub
bswap
jmp
nop
not
ror
xor
xor
not
bswap
add
mov
and
jmp
push
inc
ror
xor
neg
xor
xor
mov
mov
neg
and
jmp
ret
shr
mov
xor
ror
mov
mov
dec
jmp
add
not
sub
mov
or
xchg
add
dec
and
sub
jmp
push
xor
nop
or
dec
or
xor
or
shl
and
inc
add
rol
jmp
push
xor
inc
sub
sub
rol
shr
sub
xchg
jmp
pop
or
inc
inc
dec
xchg
or
add
sub
shr
sub
bswap
mov
xchg
xchg
mov
jmp
mov
xor
xor
bswap
and
and
and
add
dec
jmp
mov
or
or
add
or
or
add
inc
and
mov
xchg
and
xor
jmp
call
mov
inc
add
jmp
mov
inc
sub
xchg
xchg
and
xor
neg
not
jmp
call
mov
sub
xchg
add
ror
mov
and
xor
rol
jmp
push
or
xchg
xchg
xor
sub
or
dec
mov
jmp
nop
and
and
xor
and
shl
sub
bswap
and
xor
mov
add
shl
shl
xor
and
jmp
mov
and
add
inc
sub
inc
bswap
jmp
call
add
shl
xchg
add
inc
or
dec
sub
mov
add
mov
xor
jmp
xor
and
mov
neg
or
or
add
ror
or
and
jmp
xor
xor
xor
xchg
ror
inc
ror
or
jmp
push
and
or
and
or
mov
mov
add
inc
not
jmp
push
xchg
xor
or
and
and
sub
sub
add
or
not
or
xor
jmp
push
mov
or
and
add
dec
jmp
push
sub
sub
add
and
mov
and
neg
and
and
and
jmp
push
or
sub
or
not
mov
sub
shr
and
ror
jmp
pop
sub
and
sub
or
or
add
shl
xchg
xchg
jmp
push
xor
neg
rol
sub
and
or
add
and
xor
shl
inc
add
jmp
push
xchg
neg
mov
mov
shr
and
mov
mov
mov
jmp
nop
xor
xor
or
or
dec
add
xor
mov
jmp
mov
nop
add
add
sub
neg
sub
xor
mov
sub
inc
and
jmp
push
and
rol
or
sub
inc
jmp
pop
sub
inc
and
jmp
pop
add
and
mov
sub
bswap
add
mov
and
jmp
push
add
sub
rol
mov
rol
xor
shr
jmp
pop
add
not
xchg
dec
xchg
or
xor
neg
shr
neg
jmp
push
or
shr
xchg
and
mov
jmp
push
not
neg
mov
xchg
add
and
add
jmp
call
and
xor
mov
xor
and
jmp
sub
or
xchg
xor
sub
xchg
xor
jmp
mov
sub
shl
and
or
mov
inc
xchg
or
xor
ror
jmp
mov
xor
add
rol
add
inc
and
inc
sub
sub
or
mov
jmp
call
sub
ror
rol
jmp
xor
xor
sub
jmp
push
xchg
and
xor
and
sub
sub
neg
xor
add
sub
xor
or
jmp
mov
add
bswap
sub
or
bswap
sub
xchg
sub
jmp
pop
mov
or
add
add
dec
and
xor
jmp
pop
shl
or
bswap
sub
xor
mov
and
mov
rol
jmp
add
or
mov
xor
add
xchg
or
xor
xchg
and
jmp
mov
mov
or
xor
or
xchg
mov
jmp
push
shl
xor
neg
mov
dec
add
bswap
jmp
push
nop
xchg
rol
or
add
xor
jmp
pop
or
mov
sub
sub
mov
jmp
mov
sub
or
jmp
call
sub
xchg
sub
xchg
inc
or
and
mov
or
dec
and
and
add
sub
and
add
jmp
pop
xor
ror
or
xor
add
shr
add
or
and
mov
dec
sub
rol
jmp
add
add
mov
or
mov
and
and
xchg
nop
add
xor
sub
xchg
jmp
pop
nop
or
shl
xor
neg
mov
bswap
xor
sub
add
or
not
not
jmp
push
xchg
or
or
sub
not
jmp
push
or
mov
add
shr
mov
add
mov
sub
mov
and
dec
mov
neg
sub
not
jmp
pop
xor
shl
or
shl
mov
and
xor
jmp
nop
or
shl
xchg
bswap
or
xchg
or
mov
jmp
push
or
xor
mov
dec
xchg
xchg
and
or
and
xor
xor
sub
xor
jmp
call
bswap
xor
add
nop
xor
mov
sub
xchg
jmp
push
xchg
and
add
inc
or
ror
jmp
mov
sub
and
and
ror
shl
mov
mov
xchg
shr
xchg
or
and
jmp
call
add
xor
nop
mov
shl
bswap
jmp
call
and
mov
sub
sub
rol
shr
add
bswap
add
or
jmp
mov
add
sub
shl
jmp
call
xchg
sub
and
xor
and
and
inc
and
add
sub
jmp
pop
add
sub
shl
xchg
or
sub
xchg
bswap
dec
not
bswap
mov
sub
bswap
jmp
pop
mov
xor
xchg
mov
inc
inc
add
jmp
pop
add
dec
sub
and
xor
or
or
add
jmp
call
shr
mov
sub
shr
shr
add
and
xor
xchg
jmp
pop
or
and
xor
and
shr
and
or
add
add
xor
and
mov
jmp
rol
xor
mov
or
and
mov
shr
bswap
add
xchg
and
xor
jmp
pop
and
xchg
inc
sub
xor
xor
sub
dec
jmp
pop
mov
xor
mov
bswap
xchg
jmp
push
add
or
xor
xor
jmp
pop
add
or
add
shr
or
rol
and
add
xor
not
jmp
pop
xchg
neg
mov
xor
dec
add
xchg
mov
or
jmp
pop
sub
add
sub
xchg
add
or
mov
xchg
add
xchg
xchg
jmp
inc
bswap
inc
add
ror
inc
sub
add
sub
sub
xor
mov
bswap
jmp
push
xchg
sub
or
add
xchg
neg
mov
sub
add
dec
inc
jmp
mov
shl
xchg
mov
xchg
add
dec
jmp
call
xchg
rol
or
xchg
and
add
xor
or
shr
jmp
pop
neg
and
or
jmp
push
xchg
xchg
shl
xor
xchg
xor
inc
mov
add
jmp
push
sub
sub
and
xor
mov
bswap
rol
xor
xor
jmp
mov
shl
xchg
ror
xchg
sub
mov
xor
xchg
xor
or
neg
add
xchg
jmp
mov
xchg
and
add
inc
xor
xor
add
or
ror
xchg
add
jmp
xor
xor
xchg
shl
shr
and
xor
sub
xchg
xor
mov
jmp
pop
xchg
add
ror
neg
mov
mov
not
and
jmp
push
mov
sub
not
add
not
and
mov
add
ror
jmp
mov
inc
xchg
xor
xor
inc
sub
sub
mov
rol
and
mov
or
add
or
sub
jmp
pop
add
xor
sub
bswap
add
inc
mov
xor
xchg
bswap
and
or
xchg
and
jmp
ret
ror
add
ror
inc
shr
inc
not
jmp
pop
xor
mov
xchg
bswap
xchg
and
or
jmp
mov
sub
xor
xchg
sub
or
jmp
pop
sub
xor
xchg
mov
or
mov
xor
add
xor
add
or
mov
jmp
cmp
jmp
push
add
or
xchg
xor
mov
jmp
push
xchg
xchg
add
xor
add
xchg
jmp
mov
sub
sub
mov
mov
bswap
jmp
pop
not
xor
shl
xchg
jmp
pop
dec
dec
jmp
mov
add
or
mov
sub
jmp
push
dec
mov
xor
mov
sub
shl
ror
sub
inc
sub
xchg
mov
xchg
mov
add
jmp
add
mov
xchg
dec
or
ror
xor
shl
mov
xor
jmp
mov
xor
and
not
xor
nop
sub
and
xchg
xchg
mov
and
xchg
or
mov
dec
mov
jmp
add
and
and
mov
xor
or
xor
sub
add
bswap
neg
not
jmp
push
mov
xor
or
and
and
shr
and
jmp
push
add
or
add
not
and
or
mov
or
or
jmp
mov
xor
mov
or
mov
add
mov
dec
add
shr
sub
xor
sub
xor
or
nop
add
jmp
push
not
nop
shl
and
sub
and
mov
rol
and
xor
sub
jmp
pop
xor
inc
and
neg
or
or
mov
mov
jmp
push
add
xor
sub
sub
xchg
not
rol
xor
xor
or
dec
shl
jmp
pop
ror
neg
rol
and
or
sub
mov
or
jmp
pop
add
and
neg
shl
inc
mov
xor
bswap
jmp
push
sub
xor
inc
mov
rol
neg
mov
add
jmp
push
mov
not
and
mov
not
or
not
not
shl
or
add
or
neg
xchg
jmp
mov
xchg
and
add
shr
xchg
mov
jmp
pop
nop
or
not
xor
inc
sub
or
xor
or
mov
or
add
jmp
mov
and
nop
not
xor
dec
add
xchg
and
nop
xor
jmp
add
xor
dec
nop
ror
and
add
dec
mov
xchg
inc
jmp
push
xor
add
xchg
xchg
bswap
inc
mov
xor
and
jmp
push
not
xchg
or
mov
or
and
and
add
xor
jmp
push
rol
xchg
xchg
sub
bswap
xor
xchg
mov
neg
sub
sub
sub
jmp
xor
or
sub
mov
bswap
sub
sub
mov
or
xor
sub
jmp
call
or
neg
xor
shl
and
jmp
mov
not
mov
and
xchg
and
ror
dec
inc
sub
and
not
add
inc
jmp
push
and
add
not
add
ror
not
sub
or
add
dec
not
or
mov
or
xor
not
jmp
pop
mov
shr
mov
xor
and
sub
mov
dec
add
or
bswap
jmp
pop
or
rol
or
mov
or
or
bswap
shr
xchg
sub
jmp
call
xchg
xor
xor
add
nop
shl
mov
and
jmp
push
or
ror
bswap
xchg
not
mov
sub
and
neg
sub
mov
inc
or
and
and
mov
jmp
pop
add
and
shr
xor
add
mov
jmp
jne
xor
xchg
mov
not
sub
jmp
mov
mov
mov
inc
dec
dec
neg
xor
xchg
sub
jmp
pop
and
add
xchg
or
add
and
or
or
or
jmp
pop
and
or
xor
xor
or
sub
add
mov
sub
xchg
xchg
xor
bswap
jmp
ret
xor
or
and
and
and
mov
xor
bswap
or
jmp
pop
mov
or
xor
jmp
push
mov
xor
mov
sub
mov
add
jmp
pop
sub
add
add
or
and
add
and
and
sub
jmp
mul
shl
or
xor
add
xor
add
or
jmp
call
xor
or
xor
xor
ror
xchg
neg
mov
add
xor
or
xor
add
and
or
jmp
push
or
xor
and
sub
and
bswap
jmp
push
or
mov
neg
or
inc
xor
mov
rol
or
jmp
add
sub
neg
xor
or
sub
or
jmp
mov
xchg
xor
ror
and
sub
add
jmp
ret
or
mov
neg
dec
and
or
mov
xchg
jmp
mov
inc
rol
mov
add
rol
mov
xchg
and
jmp
add
not
and
and
mov
bswap
mov
neg
dec
bswap
xchg
jmp
push
and
add
shr
sub
sub
jmp
push
or
xor
xor
or
add
ror
jmp
pop
and
ror
add
sub
or
xor
xchg
mov
dec
inc
xchg
sub
sub
jmp
call
add
mov
xor
xchg
xor
nop
neg
xor
xor
bswap
jmp
push
sub
xor
add
add
jmp
pop
add
or
and
and
and
shr
rol
add
inc
xchg
xor
or
jmp
mov
mov
xor
or
and
xchg
xor
mov
and
sub
xor
jmp
pop
not
xor
mov
xor
or
and
jmp
mov
ror
add
bswap
sub
and
add
add
xor
xor
or
neg
jmp
push
or
xchg
shr
xor
inc
ror
add
add
mov
rol
and
mov
jmp
mov
xor
mov
sub
or
not
xor
mov
nop
xor
jmp
pop
shl
xor
ror
mov
add
mov
rol
or
shl
jmp
nop
xchg
or
shl
jmp
pop
or
bswap
neg
inc
jmp
mov
and
dec
xchg
sub
or
add
mov
xor
jmp
push
sub
shr
xchg
dec
sub
shl
shl
sub
mov
xor
jmp
call
xchg
inc
add
nop
sub
mov
not
add
xor
or
ror
jmp
push
neg
xchg
rol
not
add
sub
shl
sub
xor
and
sub
shr
sub
jmp
pop
shl
sub
neg
xchg
or
xor
jmp
mov
neg
neg
xor
sub
and
dec
neg
sub
xchg
ror
bswap
jmp
mov
xchg
dec
mov
add
xchg
dec
sub
dec
jmp
mov
and
neg
add
rol
bswap
and
jmp
pop
inc
shl
bswap
rol
xor
jmp
pop
and
sub
neg
add
not
xor
or
add
sub
and
jmp
push
ror
xchg
and
xor
rol
sub
add
dec
or
and
or
sub
and
xor
jmp
ret
nop
bswap
or
xchg
xchg
dec
xor
bswap
jmp
call
dec
xor
mov
sub
dec
sub
add
jmp
pop
shr
or
xchg
xchg
ror
sub
and
mov
sub
or
or
jmp
nop
add
xor
and
jmp
pop
xchg
add
shl
mov
xchg
xchg
or
jmp
add
neg
mov
add
mov
shl
sub
xor
and
add
sub
xor
ror
and
xchg
jmp
xor
xor
xor
add
or
and
and
xchg
xor
jmp
mov
add
mov
and
add
xchg
xchg
and
and
bswap
and
inc
jmp
pop
not
sub
add
or
or
bswap
and
sub
or
or
dec
jmp
push
bswap
or
sub
mov
and
dec
neg
sub
neg
sub
jmp
push
rol
rol
or
rol
ror
sub
rol
or
or
mov
add
xor
jmp
pop
sub
mov
add
sub
xor
xor
jmp
push
mov
xor
dec
and
mov
xchg
xor
jmp
push
add
xor
neg
bswap
shl
add
and
sub
jmp
mov
xor
mov
mov
add
sub
and
xor
not
mov
xor
jmp
mov
sub
mov
or
not
xchg
and
add
sub
jmp
xor
and
mov
shl
xor
xchg
and
jmp
add
mov
and
xchg
shl
and
jmp
push
sub
xchg
add
xor
mov
sub
or
or
add
xor
xchg
xchg
or
and
or
and
jmp
push
or
xchg
xchg
and
and
or
bswap
dec
xchg
and
bswap
jmp
pop
and
and
dec
bswap
add
and
bswap
xor
add
xor
and
shl
and
or
mov
sub
jmp
mov
and
sub
add
xor
xchg
xor
xchg
mov
jmp
mov
add
add
sub
xchg
xchg
xor
mov
or
neg
and
inc
and
jmp
push
and
inc
sub
rol
inc
dec
jmp
pop
ror
or
rol
sub
xor
mov
and
mov
not
xor
dec
mov
dec
mov
jmp
mov
or
add
rol
ror
neg
mov
add
jmp
mov
xor
add
and
sub
rol
xchg
mov
add
shr
mov
xchg
shr
add
add
jmp
pop
or
xchg
xor
mov
bswap
xor
mov
jmp
pop
mov
mov
xchg
xchg
dec
jmp
push
add
xchg
xor
sub
shr
xchg
add
sub
and
or
jmp
mov
sub
sub
xor
and
shl
mov
or
shr
rol
xor
mov
jmp
call
inc
inc
xchg
jmp
call
neg
and
and
and
add
xchg
add
xchg
mov
and
xor
add
and
jmp
push
and
sub
not
sub
or
and
sub
jmp
call
xchg
shl
add
sub
mov
or
and
inc
add
sub
or
or
add
xor
jmp
call
xchg
bswap
not
add
add
mov
sub
sub
shl
or
xor
xor
jmp
push
rol
mov
and
xor
and
jmp
pop
add
xchg
and
and
xor
and
bswap
bswap
nop
mov
or
xchg
xor
xchg
add
jmp
call
nop
xor
xchg
sub
jmp
sub
xor
shr
rol
mov
shl
jmp
pop
xchg
xchg
mov
dec
or
add
jmp
call
or
xchg
mov
ror
add
jmp
mov
ror
or
add
neg
xor
xchg
shr
ror
mov
and
jmp
push
or
or
sub
mov
add
inc
xchg
jmp
pop
shl
and
xor
add
dec
or
sub
and
add
mov
and
jmp
call
shl
sub
sub
mov
shr
xor
or
inc
jmp
xor
and
or
or
xor
mov
shl
xor
rol
jmp
xor
not
sub
bswap
add
dec
xor
xor
not
or
sub
jmp
add
xchg
add
add
mov
dec
jmp
pop
mov
add
add
sub
and
add
xchg
sub
add
jmp
pop
neg
sub
neg
and
ror
xor
ror
ror
neg
mov
xchg
and
inc
not
jmp
push
sub
xchg
not
sub
neg
dec
and
sub
and
and
jmp
pop
ror
xchg
xchg
xor
mov
xor
neg
nop
shl
add
xor
dec
and
sub
add
jmp
mov
add
sub
mov
sub
xor
xor
xchg
sub
sub
sub
bswap
jmp
xor
sub
shl
mov
add
ror
or
add
sub
mov
shr
xor
add
jmp
add
and
not
sub
xor
or
add
and
xchg
jmp
cmp
jmp
add
shl
sub
sub
or
add
xchg
mov
and
and
xchg
mov
jmp
push
xor
and
xor
add
bswap
or
mov
xchg
jmp
call
xor
ror
sub
sub
jmp
pop
or
or
xor
sub
xor
rol
rol
mov
and
and
mov
jmp
xor
sub
xchg
mov
rol
add
and
jmp
mul
nop
add
or
xchg
add
mov
bswap
bswap
xchg
jmp
mov
mov
sub
sub
or
xor
xor
add
xchg
bswap
jmp
pop
mov
add
and
rol
jmp
pop
or
add
xor
or
or
and
mov
inc
jmp
push
sub
xor
and
or
xchg
bswap
and
and
shl
neg
sub
jmp
mov
xchg
add
shl
sub
mov
neg
xor
xor
jmp
pop
add
xor
sub
add
sub
mov
and
add
jmp
push
or
shr
ror
jmp
pop
rol
sub
or
shr
xchg
sub
inc
add
or
xor
not
mov
jmp
jmp
jmp
jmp
jmp
